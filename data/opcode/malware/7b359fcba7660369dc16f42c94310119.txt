nop
arpl
sbb
push
nop
(bad)
loopne
shl
mov
movs
call
inc
retf
push
jmp
push
xlat
aas
retf
scas
mov
gs
xchg
stc
adc
mov
cdq
dec
les
and
enter
pop
lods
sub
aaa
and
dec
lock
or
push
lahf
test
mov
lods
mov
icebp
mov
das
dec
add
cmp
mov
loope
mov
fsubr
push
into
mov
sbb
dec
movs
or
push
mov
adc
mov
pop
push
cmp
imul
mov
sahf
cmp
aas
xchg
adc
nop
mov
rol
retf
test
gs
and
aaa
retf
push
jns
ret
test
ret
push
mov
add
sbb
pop
fistp
fdiv
mov
repnz
adc
aad
add
call
sbb
pop
and
xchg
xor
int
call
inc
in
dec
pop
dec
mov
fld
jp
and
fiadd
mov
cwde
xchg
loopne
cmp
cmp
out
pop
lahf
(bad)
dec
and
sbb
inc
cli
add
popf
xor
fimul
and
retf
je
ja
pusha
stos
outs
dec
mov
and
mov
fmul
add
xor
into
push
sub
mov
and
xchg
sub
xor
jg
mov
and
push
cdq
fisubr
outs
retf
test
push
push
(bad)
retf
test
mov
test
test
adc
sub
pop
lds
popf
push
jnp
and
call
inc
jp
std
fs
movs
push
loop
repz
mov
je
aam
sbb
cmp
xchg
push
jg
mov
out
cdq
aad
inc
lods
fild
jmp
mov
or
ins
jg
dec
xchg
mov
push
(bad)
jmp
jne
mov
movs
mov
icebp
cmc
mov
xchg
xchg
ins
mov
add
das
mov
mov
or
out
inc
sbb
out
mov
enter
xor
cmps
push
in
lods
or
jmp
cmps
add
adc
out
sub
cmp
adc
dec
and
scas
pop
int
call
add
sbb
dec
aad
iret
jo
jp
cmp
pop
(bad)
cmp
push
push
dec
push
lahf
and
xor
push
jecxz
in
adc
ins
cwde
mov
cdq
fcomi
sub
fisttp
sbb
pop
mov
jl
test
xchg
mov
lods
mov
dec
rol
dec
sbb
dec
test
push
pop
scas
je
out
movs
addr16
pop
stc
mov
xor
push
std
dec
add
clc
add
pop
and
imul
arpl
je
mov
imul
test
retf
popf
repnz
xor
loopne
push
xor
xlat
icebp
sub
push
lock
test
mov
adc
das
sub
sub
inc
mov
mov
mov
mov
cmc
rcl
push
retf
or
cmp
xchg
aas
pop
or
mov
sti
out
fstp
jmp
adc
jno
sti
(bad)
add
and
or
mov
das
stc
mov
retf
pop
jmp
aam
pop
daa
pop
cdq
loopne
and
jg
xor
xchg
pop
enter
sbb
ins
aas
xor
data16
add
jecxz
movs
repnz
sbb
push
pushf
inc
ret
int
lods
push
out
std
(bad)
or
lahf
in
xchg
aam
int
mov
pop
push
mov
movs
or
cld
xchg
add
nop
loop
mov
adc
mov
jge
push
leave
dec
lods
scas
aad
aad
call
mov
or
test
xlat
xlat
mov
jnp
push
dec
pop
lods
retf
sub
pusha
fs
ja
fmul
mov
sbb
sub
out
dec
push
push
inc
fstp
cmp
cmps
sbb
cli
out
dec
inc
rcr
adc
repnz
and
sbb
dec
push
xor
pop
(bad)
pop
idiv
pop
push
outs
fidiv
je
or
bound
fisttp
iret
sbb
dec
cmp
mov
imul
mul
dec
and
mov
pop
outs
xor
fstp
jne
int3
xor
mov
mov
xchg
cmp
popf
lods
jns
retf
sub
mov
dec
ret
xor
sub
and
test
gs
cmps
fiadd
sub
sbb
lahf
xchg
popf
pop
or
mov
fs
dec
fist
out
xchg
sti
lahf
iret
cmps
or
pop
and
xchg
repz
pushf
mov
outs
out
push
pop
pop
mov
hlt
pop
fist
add
sbb
adc
clc
jne
aaa
inc
in
adc
out
cmp
std
into
sub
jp
inc
mov
add
jecxz
cdq
jmp
and
push
pand
or
lods
mov
jns
jge
xor
out
or
sub
xlat
out
cmps
bound
xchg
and
nop
jecxz
sbb
xchg
test
cdq
pop
xchg
jmp
fcom
pop
mov
test
test
es
xchg
mov
scas
popa
fcomp
mov
pcmpgtw
adc
das
jp
mov
and
pop
das
stc
pop
(bad)
clc
cmp
loop
out
dec
imul
jl
xchg
(bad)
pop
mov
(bad)
call
adc
inc
loopne
or
adc
jmp
shl
popa
xor
movs
mov
sub
(bad)
out
outs
push
pop
pop
mov
cmp
popf
out
jmp
add
rcr
jno
xchg
lock
xor
fdivr
push
ins
lock
js
retf
mov
dec
iret
dec
sti
push
je
scas
jle
fdiv
fisub
outs
mov
xchg
cmp
pop
out
stc
pop
lods
adc
lea
adc
(bad)
stc
inc
adc
mov
adc
and
sub
mov
js
call
ds
scas
pop
(bad)
xchg
sbb
cmps
add
cmp
dec
mov
jmp
add
div
ret
mov
xchg
repnz
hlt
cs
sub
mov
hlt
aam
pop
inc
lock
daa
pop
retf
fs
stos
outs
and
dec
(bad)
pop
ja
add
mov
retf
xchg
jne
xchg
test
pop
jle
cmp
test
lods
sbb
push
out
out
cwde
cld
cwde
test
xchg
add
sbb
ret
inc
clc
sub
pop
fsub
adc
inc
gs
xlat
ret
adc
adc
dec
(bad)
pop
in
lahf
push
fmul
dec
loop
add
inc
cmp
pop
lods
aam
mov
adc
fild
push
xor
push
jle
xchg
cwde
movhlps
js
xor
leave
loop
(bad)
repnz
jns
dec
mov
adc
xor
sbb
in
xor
mov
lods
jmp
ret
das
aam
sti
ds
lock
or
fwait
sub
xor
xor
push
mov
sbb
jge
imul
ds
lods
push
loopne
cmps
ss
jno
dec
in
in
adc
push
lods
lds
and
sbb
and
mul
cmp
cmps
sub
push
mov
jbe
je
retf
jg
mov
pop
fcomp
test
inc
scas
push
mov
add
sti
inc
add
sbb
popa
retf
lahf
inc
sub
inc
sahf
in
ret
ins
or
xor
popa
das
pusha
test
mov
ds
mov
mov
into
loop
mov
inc
push
dec
add
es
jb
mov
icebp
lock
or
pop
test
jb
sbb
jp
mov
sub
in
or
push
scas
add
jmp
stos
in
inc
(bad)
(bad)
jge
inc
(bad)
fist
mov
outs
stc
push
cmps
or
xor
mov
(bad)
cmp
dec
repnz
mov
push
xor
scas
sbb
mov
popf
and
mov
call
jns
fdivr
lahf
(bad)
xor
ret
mov
or
shr
xchg
push
and
(bad)
js
ret
ret
popf
addr16
mov
jne
jns
xchg
pop
xor
call
stos
std
and
add
lods
retf
lods
adc
and
into
outs
mov
cmps
push
ins
fisub
jecxz
dec
mov
pop
out
push
jne
leave
pusha
dec
shl
ins
and
loop
outs
iret
shl
stos
push
lods
sbb
enter
leave
push
mov
ficomp
call
dec
fs
inc
cwde
add
xor
outs
pusha
out
mov
dec
mov
or
lods
fild
jl
xchg
mov
sub
les
push
xor
mov
les
sub
outs
and
pusha
jmp
repnz
stos
dec
mov
fiadd
mov
icebp
int3
push
push
call
fldcw
imul
ret
dec
xchg
es
sub
sub
adc
xor
mov
pop
mov
pop
pop
jns
or
jecxz
scas
addr16
adc
push
mov
push
retf
push
neg
rcl
mov
dec
retf
std
mov
jge
cmp
retf
sbb
ins
aaa
sti
mov
push
arpl
pop
mov
outs
sub
movs
xor
mov
xor
or
sahf
push
rol
nop
mov
sub
icebp
inc
das
mov
pop
daa
dec
mov
mov
mov
cwde
dec
xchg
pop
jb
xchg
inc
fdiv
imul
jl
mov
in
pop
dec
jnp
ins
pop
(bad)
push
mov
(bad)
mov
daa
xchg
into
mov
jb
add
dec
jb
retf
push
(bad)
mov
inc
ss
stc
jmp
cmp
xchg
divps
or
ins
inc
adc
outs
sub
lea
cmp
mov
inc
jp
or
cmp
(bad)
push
loope
inc
sub
enter
movs
movs
sbb
add
imul
(bad)
cmp
repz
ret
xchg
xchg
mov
pop
stc
xchg
mov
jl
call
frndint
sub
dec
mov
outs
std
inc
or
aas
ss
sub
sub
jns
int
mov
aaa
fild
mov
cmp
nop
mov
pop
sub
mov
(bad)
fsubr
and
mov
sub
push
xchg
shr
pop
in
xchg
call
pushf
and
fs
xor
neg
(bad)
mov
mov
pop
frstor
and
retf
pop
mov
push
sbb
xor
test
lea
cs
loop
mov
pushf
ret
fsub
jp
xlat
sub
or
mov
leave
add
popa
stos
xlat
cli
inc
sub
add
push
fdivr
test
retf
jns
and
lea
and
jnp
out
sub
adc
fldz
pop
lea
xor
lods
mov
dec
ss
lods
ins
dec
arpl
sbb
cmps
aad
lock
int3
cmp
mov
xor
sahf
adc
shl
add
cmp
mov
mov
adc
xor
mov
retf
popf
adc
minps
in
add
add
xor
cmp
aad
cmps
out
es
add
and
mov
add
or
pop
xor
ins
inc
outs
push
sub
push
ins
or
(bad)
jge
fst
fsubr
cmps
fmul
jp
sbb
icebp
imul
jmp
icebp
pop
cmp
std
pop
adc
add
aad
fmul
jns
and
stos
jl
aad
add
cmp
add
jg
loop
jmp
or
pop
cmc
popa
movs
imul
aaa
loopne
push
pop
ins
test
loopne
js
popa
sub
mov
and
add
sbb
xchg
icebp
xlat
lea
jecxz
jne
push
popa
pushf
inc
sub
or
icebp
shl
sub
jp
clc
scas
ret
int3
scas
push
xchg
dec
je
jae
mov
mov
mov
inc
(bad)
lock
xchg
bound
arpl
arpl
fs
movs
in
push
sub
cdq
imul
cmc
push
mov
sub
sbb
xchg
push
jecxz
xor
pop
movs
or
xor
div
jl
outs
adc
lock
or
pop
add
add
mov
cmp
jle
shr
fldcw
inc
loope
scas
xchg
shl
cli
sub
std
out
add
push
cld
iret
clc
pop
cld
sub
adc
or
inc
cmc
je
sahf
xchg
xchg
or
or
mov
adc
stos
call
cmp
pop
mov
movs
or
iret
jns
jns
xchg
cli
out
or
es
sar
fs
call
lods
and
push
pop
add
ss
xchg
bound
xchg
dec
(bad)
cs
adc
ins
cmps
lea
std
inc
mov
mov
jge
lahf
xor
outs
or
adc
xchg
add
(bad)
jmp
xor
rcl
rcr
imul
xchg
xchg
push
sar
popf
repz
push
idiv
es
popf
push
pop
scas
shl
adc
in
lods
ins
pop
xor
iret
mov
jo
push
test
inc
fs
mov
imul
jo
jbe
lods
enter
mov
sbb
push
jmp
lahf
push
retf
fcmovu
call
sub
push
and
mov
mov
(bad)
call
pop
popf
outs
jno
outs
pusha
(bad)
fadd
(bad)
mov
xchg
mov
mov
jle
imul
loope
retf
rcl
mov
out
cmps
jle
out
or
jecxz
call
jne
test
arpl
xchg
in
popf
movs
inc
mov
(bad)
push
jmp
fidiv
dec
sbb
adc
adc
test
dec
cmp
dec
rol
lods
sbb
mov
packsswb
xchg
aas
test
in
or
or
dec
aas
add
aam
ins
push
adc
cmp
xchg
jp
ins
xchg
sbb
aam
jmp
ror
cdq
out
jo
xchg
xor
dec
enter
add
jge
jg
dec
mov
fcomi
dec
jl
push
mov
mov
cld
cwde
mov
add
ds
movs
xchg
aaa
cmp
(bad)
ins
xor
les
cmps
xchg
sahf
mov
dec
push
adc
jg
sbb
popf
mov
xor
(bad)
repz
movs
sbb
mov
jno
xlat
test
lock
sar
mov
mov
add
call
ret
aaa
jmp
dec
fbld
aad
(bad)
pop
xchg
ud0
fcom
add
mov
xor
or
retf
(bad)
push
adc
add
push
nop
lods
adc
ror
jecxz
mov
out
cmp
jg
jge
jp
sub
xchg
fsub
jae
add
outs
push
mov
jne
ret
into
sbb
mov
jbe
mov
sub
jle
cmp
cld
sub
push
dec
pop
pop
cmp
mov
xor
stos
and
cld
pop
inc
add
cld
xchg
mov
adc
jno
jns
stos
cld
aad
popa
add
loop
outs
adc
popa
pop
ins
(bad)
or
into
lahf
shr
addr16
inc
pusha
mov
imul
pop
inc
and
stc
adc
das
cwde
xor
mov
push
retf
sub
push
arpl
push
fbstp
xor
cmpxchg
jg
stos
call
clc
mov
sub
push
jecxz
movs
cmp
and
inc
iret
xchg
sbb
dec
mov
inc
loopne
fwait
dec
xor
gs
mov
jl
xor
cmp
(bad)
arpl
sbb
mov
inc
push
fild
popf
xchg
daa
scas
jge
mov
daa
fisub
mov
xor
or
out
fistp
push
fld
mov
mov
test
(bad)
cwde
inc
mov
add
aam
or
pop
pop
std
test
adc
xchg
jmp
sar
or
test
and
loope
imul
xchg
jb
inc
ficom
ins
mov
mov
sbb
cli
shl
mov
fcom
jno
cs
std
mov
(bad)
mov
pop
mov
sub
push
sbb
push
push
push
scas
add
enter
(bad)
stc
popa
mov
adc
mov
das
or
test
loopne
xchg
mov
(bad)
fwait
ds
sub
add
pop
adc
push
and
(bad)
outs
and
push
sbb
(bad)
movs
cmps
and
fst
retf
popa
pusha
mov
stc
add
inc
out
(bad)
cwde
sahf
cmp
retf
test
aad
add
cmp
std
inc
das
inc
iret
add
(bad)
ret
loop
ret
fcomp
loopne
mov
(bad)
bound
in
sbb
das
lock
mov
je
jne
fs
cmps
mov
mov
ss
int3
nop
pop
mov
test
sar
das
xor
popa
test
fist
es
(bad)
pop
es
fimul
mov
cmps
lods
xchg
arpl
mov
popf
popf
frstor
xchg
mov
pop
jge
loop
mov
fdivr
sub
repnz
rol
fdivr
cli
cmps
pop
pop
and
sub
and
lea
out
outs
ja
stos
or
inc
fwait
pop
push
mov
pop
xchg
jmp
add
jns
adc
sbb
cmps
leave
mov
iret
test
js
(bad)
ins
push
and
mov
shr
and
lods
adc
push
xchg
sub
mov
push
xchg
imul
pop
call
push
dec
hlt
jbe
out
rcl
cmps
pop
sbb
es
cmp
imul
popa
fimul
xor
fdiv
pop
add
test
inc
and
adc
dec
push
js
enter
mov
jle
call
retf
cmovp
test
jle
sub
(bad)
movs
sbb
fdivrp
std
std
loope
rol
clc
sub
mov
jne
scas
les
pushf
icebp
inc
je
xchg
inc
inc
and
scas
ins
jg
nop
retf
aad
jmp
daa
push
mov
jno
rcr
dec
dec
pushf
adc
sti
and
mov
pop
push
repnz
add
ds
xchg
inc
iret
sbb
sbb
out
out
loop
or
mov
fsub
cmp
cs
imul
add
fild
jno
jnp
outs
add
or
aaa
cmps
ret
sbb
jae
xchg
dec
jae
test
outs
mov
clc
push
in
call
(bad)
out
xor
ja
xchg
pop
test
das
jno
mov
mov
add
sub
ja
dec
inc
test
das
shr
push
sub
dec
inc
stos
mov
stc
push
ftst
in
xor
push
ins
push
mov
xchg
(bad)
cmp
push
xor
xor
test
imul
sub
inc
xchg
or
fcmovne
xor
push
dec
sub
add
fidivr
fwait
sub
pop
push
xor
adc
add
pop
xchg
mov
jmp
retf
lock
jae
and
mov
inc
inc
pop
nop
dec
mov
add
sbb
sti
jecxz
movs
pop
sbb
bound
mov
pop
mov
loopne
cmp
mov
fs
test
xchg
lock
adc
jg
fcomp
cmp
dec
js
and
sub
lock
fdivr
sbb
mov
push
cdq
mov
frstor
out
cdq
sbb
pushf
or
mov
fsub
es
adc
or
push
pusha
sbb
loop
test
mov
inc
sub
enter
fmul
mov
and
sub
push
jbe
icebp
or
cmp
and
pop
frstor
das
mov
mov
outs
sbb
mov
test
hlt
inc
lods
sar
out
imul
adc
pop
or
add
test
ins
mov
cdq
scas
(bad)
cwde
inc
nop
push
push
cdq
cmp
js
inc
cmps
sub
scas
and
jbe
mov
inc
fidiv
or
sbb
imul
ja
jge
push
retf
inc
mov
dec
ficom
ficom
test
cmovp
fs
add
inc
mov
imul
xchg
dec
sti
retf
lahf
sbb
cmps
cmc
in
fcom
sbb
test
cmp
xor
mov
mov
xchg
sbb
ret
or
and
add
or
or
or
or
dec
lods
mov
dec
arpl
ins
int3
jg
dec
add
inc
addr16
movs
sbb
sar
pusha
mov
add
cmps
sbb
mov
inc
cs
push
pop
std
mov
inc
popf
js
mov
xor
jne
inc
inc
jae
loope
xor
shl
les
sbb
push
movs
iret
jecxz
ins
shr
adc
inc
inc
or
fsub
sbb
xor
jno
jnp
xchg
iret
jmp
or
shr
gs
int3
xor
mov
push
call
dec
xchg
loop
call
xor
cmps
inc
dec
fsubr
inc
arpl
es
xchg
add
shr
mov
and
push
jne
inc
or
sbb
iret
fld
cmp
sbb
push
(bad)
xor
loope
test
inc
aad
scas
std
pop
daa
sub
fwait
cmps
jmp
xor
call
mov
out
loopne
ins
dec
frstor
fwait
or
or
lds
mov
mov
loop
cmc
pop
xlat
adc
gs
(bad)
data16
xchg
push
push
popa
fisttp
cmp
sub
scas
jae
test
sub
add
(bad)
or
repz
lods
xchg
out
mov
fwait
adc
sub
push
test
inc
data16
fcmovbe
mov
jp
mov
mov
in
mov
not
es
fild
inc
pop
call
cmp
sar
test
test
xchg
pop
shr
jns
gs
and
xchg
cli
jno
adc
xchg
jbe
iret
test
or
bound
xor
repz
(bad)
sub
pop
mov
nop
jmp
int3
out
add
pop
mov
sbb
push
sbb
es
or
out
xchg
add
aas
mov
push
xor
daa
bound
mov
gs
iret
and
cmps
dec
add
sbb
push
mov
jo
fmul
sub
or
in
scas
mov
pushf
xchg
add
sub
mov
movs
ret
adc
fs
sub
jp
and
out
mov
les
fld
cmps
stc
mov
sbb
push
add
je
in
or
out
shr
sub
add
in
pop
outs
fnstenv
xchg
jbe
out
sar
jb
mov
xchg
xchg
push
pop
fnstsw
cli
(bad)
jle
push
and
ss
adc
je
fcmovne
mov
add
pop
rcl
cmp
and
or
jmp
adc
pop
popf
cmp
add
cmp
inc
cwde
std
pop
xor
xchg
push
(bad)
mov
in
test
leave
jmp
jmp
out
inc
xchg
mov
sub
(bad)
adc
fs
xchg
fistp
vpmacsdd
loopne
mov
cmp
pop
stc
push
(bad)
shl
ja
out
xchg
or
xor
add
cmp
test
xchg
fld
shl
out
xor
cld
rol
fisubr
mov
jmp
sbb
pusha
and
fwait
shl
mov
icebp
mov
mov
cmp
or
arpl
push
xchg
repz
pop
add
inc
push
jbe
gs
and
addr16
pop
sahf
in
mov
jmp
rol
push
fwait
jp
(bad)
out
ss
inc
fucom
push
dec
xor
out
cmp
mov
imul
sub
pop
xor
adc
jl
dec
(bad)
retf
cld
(bad)
and
push
aam
repnz
out
mov
ins
(bad)
rcl
(bad)
enter
add
in
rcr
fdiv
adc
es
jnp
retf
push
test
(bad)
fimul
scas
jecxz
sub
cwde
leave
test
ja
mov
cld
imul
js
rcl
hlt
push
xchg
cmc
es
adc
sub
call
mov
dec
mov
pop
imul
lock
repz
xlat
inc
pop
mov
jmp
pop
shl
sbb
mov
pop
fwait
mov
test
movs
push
jbe
es
scas
test
inc
cwde
xchg
sub
test
xchg
into
jbe
lods
push
mov
outs
clc
fbstp
pop
cvtps2pi
and
test
shl
cmc
sub
mov
mov
push
aam
dec
mul
repz
loope
xor
mov
jp
(bad)
fisub
int
and
and
retf
push
xchg
imul
and
xor
push
ss
push
or
xchg
mov
lds
mov
sbb
push
rol
arpl
in
js
stc
inc
mov
and
(bad)
loopne
jo
scas
(bad)
out
fs
ins
daa
mov
sub
ficom
xchg
fwait
(bad)
and
ret
cmps
cmp
inc
out
mov
xchg
mov
out
xlat
sbb
jmp
jbe
dec
pop
out
cmp
loope
sbb
xchg
mov
xchg
aad
popf
fadd
mov
fdivr
cmp
sbb
adc
ret
data16
idiv
cmp
sbb
lds
add
pop
mov
loop
xor
dec
imul
(bad)
sahf
push
iret
cmp
push
mov
xor
jbe
inc
lock
pop
inc
dec
push
mov
pop
mov
xchg
arpl
psubb
cld
sbb
sub
jmp
mov
or
mov
xor
cmps
sub
push
cmp
xlat
jno
out
ss
jbe
pushf
xor
mov
and
mov
mov
int
cmp
sub
xchg
pop
fdivr
pushf
adc
mov
jne
cdq
mov
stos
(bad)
aaa
arpl
fcom
push
mov
cmp
(bad)
fisttp
mov
dec
add
mov
icebp
xchg
rol
icebp
add
xor
ds
add
stos
xor
mov
je
int3
les
fs
push
stos
sbb
stos
adc
adc
(bad)
sbb
ret
out
sub
std
stc
loope
mul
xchg
cmps
scas
inc
jae
dec
jl
aad
add
out
or
mov
push
and
es
call
or
dec
jg
(bad)
js
sahf
in
jo
mov
scas
sbb
(bad)
jno
push
loope
or
mov
xchg
sub
cmps
dec
pop
repnz
mov
xchg
jmp
cld
bound
cmp
xor
and
pop
push
popa
cmp
repnz
cmp
sbb
mov
lea
jecxz
dec
jbe
xor
js
sub
cmp
or
push
sub
repz
ins
call
dec
das
mov
xchg
adc
xlat
dec
push
jns
scas
and
fst
xchg
mov
popf
outs
cmp
stos
stc
push
pusha
(bad)
and
mov
xor
and
inc
sub
sub
push
and
xor
xor
xlat
cmc
mov
stos
(bad)
push
enter
jns
cs
jp
cdq
and
lods
xchg
dec
test
sbb
into
(bad)
ja
adc
push
in
retf
dec
fwait
mov
inc
or
xchg
les
mov
popa
mov
jne
pop
push
in
mov
sub
ins
push
mov
sbb
xlat
shl
dec
es
xor
jmp
cmp
stos
cmp
mov
rcr
mov
fwait
enter
test
fsubr
and
fmulp
int
dec
ret
addr16
mov
aaa
add
mov
dec
and
sub
(bad)
sbb
inc
inc
inc
aaa
pop
rcr
mov
mov
xchg
es
xchg
loope
into
sbb
add
scas
fadd
leave
mov
ss
adc
shr
and
xchg
pop
leave
cdq
inc
test
and
test
pop
shl
mov
sub
inc
dec
push
shr
mov
ret
call
inc
push
cli
iret
adc
ds
rcr
aam
or
or
jmp
pop
and
loopne
and
xchg
sub
repz
and
lahf
ret
mov
and
jecxz
push
es
mov
cmc
push
js
push
aad
and
ds
(bad)
pop
mov
ss
or
loope
rcl
sahf
enter
cld
clc
jo
mov
leave
retf
loope
sbb
call
ins
loope
ret
adc
lahf
aam
inc
adc
fadd
cmps
mov
mov
push
sbb
gs
aaa
push
ins
push
push
cli
inc
icebp
scas
lds
stos
mul
daa
cmp
out
lock
outs
out
xor
mov
cld
movs
enter
les
cwde
jno
aam
movs
push
and
xor
push
push
movs
jns
popa
popf
addr16
inc
cs
ds
nop
iret
xchg
jecxz
push
dec
enter
mov
jno
scas
dec
xor
lods
and
cs
jge
sbb
mov
push
sub
sub
mov
movs
into
in
(bad)
add
rcr
je
fimul
mov
in
mov
popf
ficomp
adc
add
push
pop
bound
sar
jge
xor
push
mov
mov
das
imul
nop
sbb
inc
ds
sub
nop
into
lods
and
ret
mov
pop
xlat
fisub
pop
enter
jle
push
(bad)
arpl
xor
stc
loop
jmp
inc
mov
and
(bad)
xchg
sub
mov
push
cmp
xor
and
mov
mov
jge
not
inc
or
fldcw
repnz
mov
test
mov
jbe
adc
mov
sbb
test
icebp
fimul
mov
xchg
mov
jmp
add
mov
int
test
cld
sub
xchg
inc
push
jbe
ss
cmp
ds
lds
daa
sub
mov
mov
loop
sub
add
repnz
push
pop
mov
adc
stos
xchg
push
(bad)
and
jl
mov
push
imul
fstp
adc
dec
das
sbb
gs
mov
cli
sbb
das
mov
mov
jbe
mov
xchg
and
or
jp
cmp
jmp
in
aad
cli
xor
inc
sti
sbb
push
mov
push
imul
ds
(bad)
pop
data16
sbb
dec
rcl
jo
ror
nop
aam
jle
mov
pop
das
aam
imul
cmps
ss
(bad)
test
retf
test
jbe
js
add
cmp
dec
movs
and
sbb
mov
and
mov
mul
pop
bnd
sbb
cmp
push
sbb
hlt
dec
xchg
dec
pop
push
add
push
add
sub
mov
sbb
sbb
fstp
fild
int3
push
add
mov
inc
lock
out
lea
or
cld
ret
data16
lahf
dec
imul
fidiv
fs
movs
retf
test
jp
xchg
cmp
sbb
(bad)
repz
test
dec
sub
and
bound
mov
imul
mov
sub
outs
push
sub
(bad)
fdivr
xchg
test
add
push
sbb
pop
stos
xor
hlt
cld
ret
pusha
jmp
adc
call
pop
jno
pmaddwd
jns
(bad)
mov
shr
rcr
fs
test
std
sbb
adc
mov
inc
imul
jge
pop
cmc
pop
xchg
cli
mov
fldcw
sbb
push
rol
call
and
xor
add
pop
push
mov
and
or
mov
xchg
dec
xor
je
dec
popa
sbb
jmp
pop
push
call
push
or
sbb
outs
fwait
cmp
gs
imul
lds
xchg
jns
and
jg
mov
sub
outs
addr16
repz
dec
mov
stc
cs
add
mov
add
xor
lahf
sahf
jecxz
mov
and
lahf
or
mov
mov
test
sbb
popa
jo
aad
movs
cmp
sar
lea
cs
jnp
(bad)
test
mov
xchg
jnp
in
pop
xor
and
pop
repz
sub
ret
mov
sbb
pushf
aaa
sar
cs
xchg
and
cmc
jbe
jns
jcxz
cld
jae
jb
and
push
enter
sbb
aaa
mov
cwde
je
mov
jno
fdivr
mov
in
test
loopne
call
sbb
mov
mov
enter
cmp
push
int
cmp
ud2
stos
cmps
(bad)
(bad)
setge
std
imul
hlt
push
mov
mov
inc
xchg
pop
movs
inc
or
dec
lods
inc
sbb
fild
rcr
jo
mov
pop
repz
dec
pop
sbb
add
push
sub
mov
cli
ss
fdivr
out
std
(bad)
add
std
imul
pop
cld
jg
and
(bad)
mov
push
data16
sub
js
call
jmp
pusha
mov
mov
add
out
or
fwait
cdq
cmp
mov
push
mov
xchg
dec
adc
push
popa
or
adc
sub
(bad)
push
sahf
pop
icebp
scas
or
aas
test
test
dec
cmp
in
inc
adc
popf
pop
shl
loope
fsubr
inc
sbb
fmul
outs
mov
push
(bad)
hlt
bound
idiv
clc
inc
punpckhwd
ret
in
jnp
scas
rol
in
movs
or
iret
jns
inc
xor
xchg
and
sub
sbb
inc
popa
xor
push
mov
sbb
and
fiadd
sti
rcl
mov
iret
xor
jns
or
popa
(bad)
mov
push
adc
push
retf
scas
lds
lock
test
push
mov
outs
stos
cs
pop
mov
mov
adc
fist
xchg
(bad)
js
or
scas
(bad)
xchg
pop
and
xor
in
call
cli
ins
add
xchg
mov
test
sti
cmps
push
mov
aaa
xchg
cld
mov
adc
ret
add
imul
loop
(bad)
stos
push
mov
mul
push
inc
les
jg
jmp
and
lea
jmp
out
jecxz
popf
sbb
stc
rcr
in
rcl
sti
imul
adc
movs
xor
enter
leave
xchg
dec
popf
xchg
or
sub
call
xor
les
fcom
sbb
pop
pop
in
push
add
ret
aam
jb
pop
and
popf
sbb
lahf
sbb
popa
jge
pop
xchg
mov
data16
push
loop
mov
pop
mov
xchg
or
bnd
fisttp
add
data16
mov
adc
pop
xchg
dec
inc
or
lods
xor
cwde
repz
imul
xor
sti
or
loope
fsubp
sub
xchg
add
xchg
dec
jno
dec
test
add
inc
cld
sbb
dec
outs
push
pop
cs
fwait
cmps
and
in
mov
adc
jle
fstp
inc
imul
xchg
(bad)
enter
push
xor
jno
xchg
das
lds
fst
cmps
mov
xchg
cld
or
or
push
xchg
outs
and
in
xor
ret
xchg
shr
pop
cmp
xor
pop
cmps
mov
cdq
jp
loope
ror
pop
dec
cdq
sub
and
xor
pusha
and
xchg
pop
push
mov
repz
push
in
xchg
aaa
dec
push
push
dec
sbb
icebp
sbb
mov
xchg
sub
mov
adc
cmp
int3
retf
lea
pop
lods
sub
cs
pop
pop
add
add
mov
mov
pop
and
or
and
(bad)
xlat
xchg
pop
stos
popf
mov
or
jl
sub
jmp
sbb
xlat
(bad)
jmp
jb
or
clc
popf
scas
xor
add
sahf
std
jno
sbb
ins
mov
ret
cmp
sbb
jmp
sub
cmp
mov
enter
mov
lds
es
loopne
push
rcr
push
pop
aam
mov
mov
test
pop
mov
jmp
push
out
mov
mov
adc
mov
adc
out
jb
imul
push
out
mov
out
push
inc
jb
sbb
add
push
cmps
xor
xchg
inc
xor
fyl2xp1
sti
inc
cmc
mov
xor
sbb
add
pop
bound
pop
and
sbb
daa
and
and
int3
sbb
and
aad
mov
cmp
sbb
retf
sar
mov
jecxz
cmps
aaa
adc
jge
sbb
sub
(bad)
lea
repnz
fcom
test
test
fcmovne
dec
lods
es
xor
fdivr
pop
retf
mov
pusha
enter
jmp
call
fisubr
std
pop
xchg
repz
mov
or
aad
xchg
jbe
and
jge
cmps
sahf
rcr
sbb
cmps
lock
push
stc
das
push
jbe
push
outs
fdivr
mov
and
call
or
and
cmp
div
push
(bad)
aas
sahf
push
sbb
adc
int
push
fs
and
movs
retf
push
jmp
and
aaa
pop
retf
das
mov
out
jne
lea
dec
shl
pop
(bad)
imul
retf
or
int3
sub
sbb
aas
inc
push
stos
sub
push
shl
mov
icebp
lea
cmp
in
aas
pop
nop
add
pop
lahf
cli
cmp
imul
iret
enter
mov
test
(bad)
popa
test
jbe
jbe
push
push
cdq
in
scas
(bad)
out
add
loopne
hlt
inc
and
std
mov
ss
xchg
mov
jne
jbe
or
mov
cmp
movs
adc
pop
adc
dec
cmp
bound
adc
xchg
test
mov
cmps
mov
sbb
adc
mov
jmp
sbb
data16
xor
xchg
retf
xchg
iret
stos
lahf
sub
inc
xor
(bad)
add
test
imul
dec
div
inc
jnp
and
ja
and
xchg
mov
mov
lds
hlt
pop
shl
pop
dec
pop
pop
and
push
and
ret
xor
pop
sub
popf
mov
out
adc
pop
in
cmp
and
ret
imul
in
xchg
jbe
scas
pop
jb
mov
mov
ja
inc
or
push
aaa
nop
mov
inc
lds
cmps
dec
rcl
mov
outs
jmp
sub
and
mov
xor
pop
jae
and
or
popa
sbb
or
dec
mov
sub
retf
push
adc
and
int
xor
js
xchg
repz
arpl
in
enter
pop
pop
xchg
push
jge
jl
sbb
or
mov
into
xor
ret
push
repnz
xor
out
shl
or
xchg
movs
imul
aaa
xor
xchg
pop
push
pop
stos
xchg
jnp
scas
aaa
ficom
outs
cdq
(bad)
jle
lods
cld
mov
xor
out
gs
push
mov
loopne
ss
mov
add
rol
out
or
fiadd
std
imul
xchg
loopne
je
sub
mov
push
sbb
and
mov
and
adc
adc
out
jbe
sub
and
dec
push
and
pop
mov
cmp
stc
ss
jge
stc
jl
add
mov
sub
mov
jne
mov
movs
and
xchg
and
enter
push
mov
pop
adc
shr
aaa
jge
lea
xchg
test
shl
lds
pusha
mov
call
and
pop
sbb
dec
test
and
dec
or
std
popf
pop
add
test
out
xor
push
pop
rol
pop
or
sub
ret
mov
sahf
adc
(bad)
(bad)
cmc
mov
mov
pop
fs
es
out
mov
mov
inc
xlat
std
xor
mov
in
push
xor
sar
mov
jmp
retf
xchg
and
xchg
(bad)
movs
cld
nop
add
je
es
mov
sub
popf
push
pop
repz
xchg
nop/reserved
cmc
shl
scas
lods
call
icebp
xor
pop
cmp
sar
and
dec
jecxz
cs
jle
(bad)
push
pop
ficom
(bad)
mov
xchg
push
mov
in
cli
mov
jle
(bad)
mov
mov
sbb
adc
inc
adc
in
add
pop
pop
lods
and
mov
add
push
call
mov
xchg
pusha
gs
js
call
aam
es
(bad)
rcr
adc
ja
mov
adc
jg
lods
push
outs
mov
lods
lds
mov
jle
dec
hlt
inc
cmp
mov
ja
ins
sub
fld
shr
cmp
movs
fstp
lock
lods
xlat
inc
inc
movs
pop
xchg
fcomip
jge
and
pop
stos
xor
addr16
aam
js
lds
test
out
mov
pop
(bad)
xchg
sub
inc
(bad)
aad
in
enter
push
sub
push
inc
call
or
nop
jns
jae
jbe
ret
fwait
daa
aaa
push
push
nop
xchg
push
retf
and
and
xor
in
stc
and
ins
int
pusha
adc
daa
sub
mov
std
push
je
sti
loop
push
and
or
imul
add
push
jne
enter
inc
cdq
add
movs
stos
jecxz
sbb
fcompp
mov
and
push
mov
cwde
push
fldcw
loope
stc
out
imul
jge
adc
fsub
arpl
dec
inc
adc
xor
cdq
sub
jecxz
fidivr
lock
pop
add
fadd
daa
push
and
inc
jmp
cmp
cmp
jmp
(bad)
inc
pop
mov
inc
add
jl
cdq
gs
push
scas
enter
adc
cmps
xor
mov
lods
pop
push
ins
sti
jo
sub
ret
add
ss
ins
mov
and
jnp
cmp
retf
sti
mov
pop
fnstenv
aas
imul
adc
repz
add
dec
add
jne
stos
ret
pop
jno
call
sbb
in
out
ins
dec
mul
cmp
xor
mov
outs
sahf
xchg
scas
call
dec
jb
rep
mov
adc
inc
xlat
mov
popf
jb
jno
lock
aas
jmp
pop
int
or
sub
sbb
and
ficom
mov
scas
pop
pop
daa
mov
cmps
arpl
xor
ret
sar
jge
pushf
outs
pop
xor
js
inc
pop
adc
out
mov
jo
les
jmp
pop
fimul
mov
add
in
repz
es
daa
cld
or
lods
imul
imul
scas
push
and
mov
inc
jge
or
add
jmp
loopne
and
aas
fidiv
ds
pop
int
cmps
jbe
cmp
ins
loopne
jnp
in
fild
sbb
push
sti
cs
popa
ds
mov
lock
shl
lock
fimul
mov
inc
lahf
iret
(bad)
ficomp
inc
mov
pop
idiv
xor
nop
fisub
aaa
sub
arpl
push
loopne
int3
sbb
push
add
rcl
inc
xchg
inc
(bad)
dec
xchg
test
xchg
pop
xor
leave
mov
out
inc
enter
mov
cdq
clc
leave
imul
push
sti
imul
jmp
jl
push
push
jo
aas
sbb
movs
aam
inc
dec
gs
push
sub
inc
shl
mov
mov
in
loopne
fsub
xor
mov
jo
or
call
fs
cmp
jae
ss
cli
pop
pop
push
cmp
fs
outs
xchg
arpl
repnz
mov
or
stos
jnp
fnstcw
scas
dec
enter
retf
cdq
shl
neg
hlt
fist
mov
pop
fst
mov
int3
add
inc
sub
sbb
or
mov
out
sbb
xchg
add
add
loop
mov
cwde
inc
sti
mov
mov
xchg
lahf
pop
lahf
shr
sahf
push
rcr
mov
add
cmp
inc
icebp
mov
jg
fs
or
fnsave
xor
adc
stos
leave
(bad)
ror
cdq
jecxz
fst
stos
jbe
fcom
or
imul
outs
xchg
cmp
cdq
sahf
icebp
sbb
cmp
test
fld
aam
jne
inc
xor
clc
ret
pop
xor
xor
xchg
pusha
in
shl
movups
retf
push
mov
add
mov
push
pop
pop
pusha
push
mov
mov
ja
test
ret
stc
mov
inc
cmps
pop
xor
sub
sub
test
jb
add
and
mov
mov
pop
xchg
jle
add
adc
stos
add
out
ds
fs
jmp
jg
cdq
movs
jg
dec
push
in
xchg
jnp
pop
add
xor
addr16
mov
pop
(bad)
enter
mov
sbb
jno
or
lods
adc
rcr
outs
pusha
popa
add
cli
pop
popf
rol
cdq
push
inc
jmp
retf
ins
into
or
nop
hlt
inc
fwait
sub
fisub
ins
mov
ret
mov
movs
test
xchg
xor
and
mov
push
lods
sub
mov
leave
mov
adc
(bad)
mov
mov
or
xor
mov
in
push
jns
adc
neg
jbe
inc
jno
push
idiv
enter
in
jnp
in
fnstsw
lea
or
sub
and
push
inc
mov
sahf
and
pop
out
(bad)
in
cmc
jg
(bad)
jae
popa
xchg
ins
push
xlat
jl
dec
fist
pop
cmp
das
nop
dec
sub
imul
push
or
lahf
jmp
rol
gs
iret
jne
mov
mov
lock
icebp
add
cmp
push
jecxz
pop
push
test
xchg
int3
push
and
mov
cmps
dec
call
aad
pop
call
inc
push
or
fidivr
mov
sub
sub
pop
stos
call
js
push
fcomp
fld
mov
retf
cs
ds
pusha
popf
ds
pop
aas
mov
xchg
inc
mov
mov
mov
ret
mov
cmp
dec
cmp
adc
xor
sahf
cmp
fbld
push
sub
xchg
mov
jae
call
sbb
sti
aaa
test
sub
cmp
fs
xor
xchg
outs
mov
dec
pop
in
dec
sbb
(bad)
mov
push
cmp
test
push
xchg
sar
sub
cmc
push
mov
jmp
je
push
out
cmc
shl
pop
and
push
jns
movs
(bad)
mov
das
imul
xor
lods
test
fsubr
mov
push
jns
xchg
ins
add
jecxz
retf
and
sbb
lahf
mov
movs
inc
retf
out
jmp
dec
jle
inc
dec
xchg
ja
adc
mov
push
mov
iret
cli
test
fstp
xor
or
inc
popa
sti
mov
loop
xchg
fucom
and
pop
int
jno
push
and
in
jge
dec
stc
int
cwde
xchg
ret
dec
mov
or
pop
ins
call
mov
cwde
or
stmxcsr
inc
sub
daa
and
push
sbb
icebp
adc
inc
out
pop
lods
loope
adc
mov
data16
or
movs
pop
out
mov
fwait
push
sub
fs
add
cmp
add
jne
ret
mov
cdq
imul
pushf
push
mov
xor
out
push
add
add
icebp
add
xchg
jl
mov
dec
push
fsub
xchg
fnstcw
jmp
push
iret
xchg
mov
std
lahf
mov
test
cmps
sub
push
pop
hlt
sar
push
retf
dec
mov
test
inc
xchg
aas
jle
push
jbe
push
sbb
inc
and
xor
pop
iret
dec
in
xchg
int3
das
shl
jl
in
jae
mov
dec
es
add
mov
ret
or
fs
pop
and
sub
xchg
mov
ins
push
int
mov
ficom
je
fdiv
int3
sub
sar
inc
push
loopne
imul
test
lods
push
fs
gs
xor
getsec
retf
bound
lds
pop
popf
jmp
jp
and
pop
pop
imul
ins
js
push
push
sar
push
inc
imul
stos
push
les
mov
jae
pushf
popf
adc
sbb
cmc
cmp
lea
sub
in
shr
test
push
fs
nop
outs
cdq
shl
mov
pop
sub
movs
les
mov
xor
dec
adc
cmovnp
test
jecxz
rol
imul
je
test
cmp
repz
sbb
xchg
(bad)
arpl
sub
ss
adc
push
cld
popa
jl
and
loop
imul
(bad)
push
lods
retf
adc
and
push
cmp
std
call
rcl
cli
cwde
fisubr
enter
out
or
jmp
mov
xchg
nop
mov
or
add
mov
or
jp
sbb
mov
cmp
sbb
idiv
mov
ds
jne
call
xchg
mov
pop
xchg
adc
lds
ins
sub
or
or
add
mov
mov
paddq
mov
dec
aaa
jle
push
lea
fimul
enter
cwde
popa
cmps
add
mov
inc
sbb
push
xchg
add
jbe
mov
xchg
test
jne
xchg
popf
into
test
sbb
mov
lea
mov
and
test
sub
mov
je
and
xlat
scas
cli
out
call
sub
mov
popf
jmp
out
inc
dec
pop
inc
stos
add
push
jns
sbb
div
mov
jb
push
cmc
stos
xchg
sbb
ret
cli
mov
in
fucompp
pop
sbb
push
(bad)
sub
pop
xlat
fild
inc
push
gs
into
pop
ins
xchg
retf
leave
or
cmp
fisubr
pop
sbb
mov
xchg
pop
mov
aad
cmps
popa
lods
mov
mov
rol
dec
pop
sub
stc
cmp
mov
dec
neg
jp
iret
mov
mov
mov
jle
jne
mov
inc
enter
test
test
mov
push
out
test
sub
mov
pop
cmc
mov
mov
cmp
inc
mov
ja
pop
and
cmp
and
dec
push
sub
mov
lods
shr
scas
push
dec
sbb
or
xchg
pop
pop
adc
test
dec
imul
xlat
aam
out
xlat
and
inc
(bad)
retf
xor
aad
popf
mov
push
sbb
dec
mov
out
pop
push
or
pusha
dec
in
jb
and
or
adc
dec
jecxz
dec
stos
out
fnstenv
cs
stos
dec
inc
nop
das
add
nop
dec
cmp
push
std
sti
jp
fsub
mov
out
fst
nop
cmps
add
adc
add
cmc
call
pop
clc
aas
fs
movs
jg
cld
dec
bound
mov
xor
mov
mov
mov
pop
pop
(bad)
mov
add
call
retf
out
push
push
popf
fisttp
cld
pop
and
dec
dec
jne
mov
add
mov
push
iret
xlat
leave
outs
jbe
sub
cld
imul
(bad)
cdq
inc
clc
mov
push
adc
inc
jno
and
adc
mov
fnsave
std
mov
(bad)
enter
leave
or
dec
lahf
fwait
js
pop
out
xor
sub
jbe
int3
in
jle
daa
mov
mov
and
inc
fcomp
scas
outs
and
adc
jle
lea
int
cld
mov
sub
fwait
push
sub
popf
rcl
push
push
push
push
shl
sub
adc
je
add
daa
jae
xlat
into
and
jl
inc
js
or
and
sub
out
pop
xor
mov
lods
rcr
cmp
jnp
mov
aam
jnp
mov
inc
hlt
or
dec
neg
jno
push
inc
in
mov
xor
pop
pop
mov
sbb
jecxz
ret
sbb
fisubr
and
cs
inc
xor
les
or
cld
test
aaa
jle
and
out
and
sub
push
(bad)
daa
not
dec
add
clc
pushf
mov
loopne
ins
bound
jo
mov
sub
pop
ins
out
cld
dec
xor
add
pop
jecxz
or
jg
xchg
sti
xor
adc
xchg
mov
xchg
imul
sbb
xor
iret
outs
sbb
add
add
mov
dec
mov
scas
loop
loop
(bad)
adc
inc
pop
inc
push
leave
cmp
dec
hlt
fcomip
js
mov
sbb
add
sar
std
inc
jmp
repnz
fwait
add
jle
iret
inc
faddp
cwde
cmps
mov
mov
lock
push
gs
inc
and
inc
mov
cmp
lods
cwde
mov
mov
sub
loope
xchg
adc
clc
mov
pop
jae
inc
out
aad
push
cmc
(bad)
int3
cmp
push
inc
push
popf
jnp
int
xchg
jp
jmp
cmp
jno
jbe
int3
xor
jo
nop
cmp
jns
in
inc
jecxz
mov
aam
aas
jb
in
adc
test
xchg
pop
mov
lea
(bad)
inc
push
les
(bad)
sbb
lods
mov
or
add
jae
jl
test
adc
xor
xor
jmp
ret
cwde
mov
mov
push
dec
repz
pop
aad
sti
or
aad
or
jle
mov
mov
fimul
or
or
bnd
add
test
out
adc
cmps
stc
sbb
mov
push
mov
mov
(bad)
fucomp
mov
and
retf
inc
push
mov
lds
ins
shl
ret
leave
push
les
jae
cmps
(bad)
(bad)
cdq
das
ins
cmp
and
outs
outs
mov
add
or
popf
jo
pop
cmp
or
mov
or
ss
jecxz
xchg
les
leave
xchg
imul
add
cwde
and
sub
inc
pop
daa
dec
(bad)
mov
nop
dec
mov
shl
shl
in
mov
adc
cmp
lods
lock
sub
js
int
push
sbb
cmp
sub
inc
pop
push
lea
adc
je
sub
lea
mov
fisttp
fst
jecxz
retf
adc
jg
scas
or
mov
fnstsw
aaa
mov
in
add
shl
dec
xor
adc
cli
jl
xor
sbb
dec
add
icebp
retf
enter
jmp
sahf
sub
cmp
push
into
mov
xchg
xor
mov
dec
loope
cmp
and
retf
lods
jne
xchg
(bad)
xlat
ret
lahf
dec
fidivr
arpl
dec
jne
xchg
ror
mov
sti
retf
arpl
das
adc
inc
jmp
or
movs
(bad)
retfw
inc
loop
pop
les
in
es
es
cmps
ret
and
cmp
gs
pop
in
sub
or
cmc
leave
push
(bad)
xor
fucomp
and
sbb
dec
iret
mov
mov
xchg
mov
inc
ror
add
mov
xchg
leave
push
xchg
je
adc
dec
or
div
lock
push
std
lds
test
(bad)
ds
sar
cwde
data16
test
scas
mov
mov
ds
out
mov
out
das
mov
push
add
xor
mov
loope
jecxz
add
and
neg
inc
repz
push
jg
cwde
push
hlt
mov
out
jo
cmps
sbb
pop
fnstenv
sbb
js
in
dec
test
xor
push
pop
(bad)
xchg
mov
mov
xchg
add
test
dec
pop
data16
jne
jmp
cvtps2pi
fadd
xchg
xor
sbb
or
scas
cmps
jmp
fcomp
cli
retf
addr16
pop
mov
push
jbe
cmp
cmp
hlt
mov
imul
sub
or
sti
sbb
adc
mov
out
test
(bad)
pop
pop
mov
xchg
jle
enter
xchg
test
xlat
fdivr
adc
mov
add
or
pop
aad
push
dec
xor
mov
sub
jg
scas
cs
shl
push
sub
xchg
stc
mov
push
cli
ds
xchg
pop
mov
aad
or
sar
test
jmp
pop
cmp
fwait
ror
dec
fstp
sbb
test
jnp
repz
jmp
xchg
cmps
jbe
inc
popf
xor
fbld
xor
mov
mov
pop
adc
neg
pop
cmp
dec
push
ret
and
(bad)
pop
aaa
pop
addr16
jns
jecxz
aas
push
mov
js
(bad)
cmps
outs
outs
mov
sbb
and
leave
add
ret
outs
out
bound
loop
mov
fld
sahf
movs
mov
daa
ja
cmp
cmps
xor
sti
jmp
hlt
stc
add
cli
(bad)
jnp
push
stos
xchg
sub
aaa
sbb
push
loope
sbb
inc
out
push
inc
sub
std
inc
or
(bad)
enter
cmc
(bad)
jnp
data16
adc
popa
into
ins
cmp
lods
test
loope
bound
mov
lods
add
mov
test
and
sbb
stc
or
xchg
cmp
imul
jae
loope
je
jmp
call
dec
imul
xchg
(bad)
sti
shr
ins
and
int3
jmp
popa
rcr
retf
sub
dec
aaa
iret
mov
cli
sub
aam
aaa
(bad)
dec
cmp
shl
sub
jg
fld
mov
stos
sub
or
mov
repnz
in
sub
or
arpl
push
xor
sar
ss
adc
ss
pop
mov
popa
out
dec
sub
int3
xor
xor
mov
fldcw
dec
push
mov
xchg
dec
nop
jecxz
xchg
jno
pop
(bad)
inc
sub
pop
fnstenv
test
jecxz
cdq
(bad)
retf
mov
add
out
std
or
mov
data16
push
gs
fwait
mov
inc
stos
js
mov
add
dec
mov
jge
enter
push
push
fcmovbe
not
mov
pop
nop
xchg
test
les
sbb
mov
test
(bad)
sbb
xchg
lock
adc
add
(bad)
lods
jge
and
sbb
jp
pop
push
lahf
aam
test
fwait
popa
xor
adc
jmp
mov
fstp
cmp
mov
outs
push
xchg
jno
or
cwde
je
stos
jecxz
cli
jle
cmc
xchg
jbe
nop
gs
sbb
retf
(bad)
shr
sbb
mov
ret
xchg
(bad)
xor
pop
leave
xor
inc
loop
sbb
jmp
push
cld
mov
mov
inc
fist
(bad)
xor
inc
in
loop
or
jmp
nop
mov
cmp
push
xchg
lahf
shl
dec
add
adc
jb
daa
add
and
fdivr
aam
push
pop
pop
dec
std
adc
pop
fidiv
push
popa
push
push
jo
test
xchg
aam
ins
and
jmp
iret
neg
jecxz
mov
into
jne
adc
pushf
dec
popa
bound
push
call
dec
fist
add
fs
int3
sub
jb
mov
sub
jns
mov
int
mov
(bad)
scas
movs
xor
shl
movs
fild
push
repz
or
mov
cmp
lods
dec
and
imul
jne
jo
add
mov
ret
(bad)
popa
sbb
sub
inc
ins
inc
dec
xchg
not
rcr
int3
xor
pop
adc
sbb
mov
ret
cmc
cmc
aad
mov
mul
mov
lds
and
or
scas
mov
adc
adc
out
retf
daa
xor
or
mov
ret
aas
sub
mov
call
inc
xchg
pop
pavgw
sub
mov
sbb
adc
imul
aaa
lds
in
xchg
test
stc
test
push
lock
push
fs
sbb
jne
sahf
je
call
jae
test
or
dec
jge
ret
jno
fild
mov
cmps
pop
in
adc
cdq
jnp
(bad)
out
cmp
sbb
ret
xor
and
push
add
hlt
(bad)
movs
into
jb
push
push
mov
add
and
jo
retf
daa
imul
sbb
mov
jnp
mov
pop
pop
scas
fcmovnbe
bound
sbb
sbb
das
jge
mov
repz
pusha
adc
into
sbb
xchg
adc
push
sbb
mov
mov
jnp
imul
mov
add
(bad)
sar
std
add
inc
or
(bad)
cld
jmp
rol
std
nop
ss
push
sbb
out
mov
imul
mov
(bad)
mov
pusha
sbb
mov
push
(bad)
(bad)
push
push
jae
pop
loope
stos
push
sub
loop
xor
mov
es
mov
cmp
sub
lea
add
inc
rol
sbb
sub
xchg
cmp
mov
ins
test
inc
int3
cwde
stos
inc
pop
push
into
add
inc
hlt
sbb
mov
xor
rcl
(bad)
rcr
js
(bad)
loopne
fbstp
dec
xchg
movs
sbb
sbb
test
pop
aad
test
push
arpl
aaa
les
xchg
shr
mov
in
add
push
aam
repz
bound
dec
retf
test
or
pop
js
in
sbb
xchg
neg
rol
sbb
jl
lock
xlat
fidivr
data16
mov
test
aaa
xchg
popf
es
adc
stc
(bad)
cmp
cmp
mov
xor
cmp
push
iret
mov
popa
sub
sbb
push
and
xchg
dec
mov
pop
jg
pop
jg
push
mov
sub
movs
jg
adc
scas
or
mov
jge
rol
dec
xor
dec
jecxz
mov
or
lea
or
or
std
stos
and
test
stc
test
(bad)
push
clc
and
xchg
mov
mov
inc
leave
cmp
loop
scas
pop
clc
and
inc
mov
jp
or
adc
and
and
xchg
outs
pop
fldcw
cmps
adc
xor
std
inc
adc
pushf
aad
sbb
xchg
mov
sub
xor
rcl
adc
xchg
out
repnz
addr16
inc
bound
fcom
xchg
ja
fist
rcl
jle
inc
fadd
mov
and
repnz
or
jmp
xor
fld1
(bad)
loopne
enter
ret
adc
sub
test
lea
sbb
or
mov
rcl
xchg
add
std
push
or
adc
xor
or
data16
sahf
and
mov
clc
ficomp
loop
div
mov
fistp
add
jb
in
loop
arpl
jb
cdq
pop
push
(bad)
mov
(bad)
aas
pusha
jo
pop
aam
mov
fsubr
test
dec
outs
scas
cmp
cli
sub
and
stos
jmp
out
sub
ja
sbb
cmps
mov
loope
dec
daa
sbb
ret
sar
mov
xchg
imul
mov
(bad)
shl
mov
movs
leave
mov
cmc
sbb
and
jp
cmp
xchg
mov
lea
sub
aam
test
popf
push
adc
inc
xor
push
hlt
ror
or
int
stos
xor
loopne
inc
pop
fchs
aaa
arpl
retf
js
outs
mov
popf
push
leave
fild
into
pop
jg
stos
xlat
icebp
jo
cmp
aam
mov
add
jle
mov
mov
jmp
adc
movs
xchg
sbb
mov
aaa
mov
test
pop
movs
js
(bad)
daa
add
dec
mov
loop
adc
in
in
call
test
lods
mov
adc
call
push
stos
leave
pop
int
pop
movd
out
movs
xchg
mov
inc
std
out
loope
mov
add
repz
xor
into
inc
repz
jecxz
icebp
jbe
fisub
in
sbb
mov
mov
pop
(bad)
lods
test
cmp
mov
imul
push
out
jecxz
into
pop
add
inc
sar
test
sub
push
mov
mov
rcl
and
lea
hlt
iret
cmc
jnp
and
xchg
inc
in
sbb
or
int3
lahf
call
imul
pop
inc
or
inc
inc
inc
fidiv
xchg
stos
or
cli
imul
stos
mov
sub
mov
mov
aas
xor
adc
inc
jg
inc
xchg
jg
fs
stos
jle
fidiv
cmps
xchg
pop
or
xor
mov
ins
leave
leave
lods
push
paddusb
pop
loope
test
mov
or
clc
xchg
pushf
push
loop
cmps
xor
and
xchg
or
mov
jns
arpl
cmp
cmp
push
or
xchg
sub
scas
call
das
ficom
arpl
pop
or
shr
push
pop
dec
pop
pop
fcmovnbe
lock
adc
mov
lods
out
jl
pop
call
scas
dec
push
and
mov
pusha
and
test
fldcw
cmp
fxch
and
out
mov
sub
push
cmp
fist
leave
lods
addr16
dec
sub
mov
cdq
cmp
sub
sbb
push
dec
xchg
mov
sbb
lds
inc
pop
mov
pop
add
mov
dec
jmp
std
out
pop
push
shl
int
xchg
mov
sahf
sub
pop
jle
xor
ret
inc
cs
jmp
inc
mov
mov
cmp
out
ror
sbb
push
aam
xchg
xchg
mov
shr
aad
data16
xor
into
std
jae
add
adc
mov
outs
push
int3
pop
call
jmp
out
sbb
cli
inc
jl
xchg
mov
repz
add
adc
inc
and
push
xchg
call
xlat
jne
out
lock
jle
dec
xchg
(bad)
inc
stos
dec
cdq
mov
pop
mov
enter
in
aas
mov
popa
mov
enter
das
add
adc
mov
pop
or
xchg
adc
adc
pop
ins
or
pop
pop
and
inc
(bad)
or
dec
pusha
xor
mov
jns
dec
sbb
gs
shr
fwait
xchg
jmp
pop
mov
pop
inc
jmp
add
loope
mov
gs
mov
jmp
fs
push
popa
cwde
jmp
leave
add
mov
(bad)
and
xchg
mov
cdq
fldcw
and
mov
outs
sahf
cmps
sar
sti
retf
data16
mov
into
sbb
test
or
cmp
mul
fwait
mov
dec
add
call
cmp
sub
cld
add
mov
ds
imul
les
enter
or
xor
cld
push
movs
hlt
loope
mov
nop
les
xor
jb
pop
sub
push
xlat
mov
pusha
fdivr
or
mov
xchg
push
and
mov
arpl
loope
mov
int
sbb
and
jmp
inc
adc
lods
dec
mov
push
push
sub
jae
mov
push
pusha
pop
pop
call
push
fist
or
jno
lds
and
mul
add
test
push
add
mov
mov
push
mov
cwde
xchg
mov
aam
sbb
test
xor
inc
test
pop
dec
js
sahf
cmc
xchg
dec
cmp
std
jns
lods
jnp
xor
es
mov
sub
rcl
mov
xor
dec
sub
xchg
pop
mov
dec
add
adc
sbb
test
std
mov
retf
sbb
mov
scas
daa
rol
push
imul
pushf
(bad)
out
rcr
fndisi(8087
mov
cdq
mov
js
aam
outs
cmp
shl
mov
mul
(bad)
sbb
or
sti
cmp
xchg
in
xchg
aad
les
sbb
stos
fwait
ret
mov
ss
int3
mov
imul
(bad)
push
xlat
sub
pop
pushf
dec
dec
aad
inc
cmc
fs
stos
cmp
sahf
xchg
jne
add
pop
mov
xor
mov
fwait
aaa
mov
mov
call
and
jae
test
arpl
xor
mov
dec
sbb
adc
cli
inc
and
sub
pop
mov
repnz
out
mov
cmp
dec
cmp
not
mov
aam
cmp
lods
es
repz
(bad)
sbb
mov
addr16
xchg
xchg
xor
inc
and
cmp
adc
les
cld
inc
add
stos
dec
cmp
lds
aam
(bad)
adc
retf
mov
ds
xor
rcl
mov
add
fadd
xchg
xchg
hlt
gs
loope
pop
loop
mov
inc
adc
inc
push
ret
outs
ret
ds
mov
mov
sub
push
shl
clc
popf
mov
inc
fstp
inc
idiv
xchg
pop
nop
lods
pop
call
cmp
xchg
dec
push
into
inc
jle
add
outs
jmp
and
enter
in
cmp
mov
out
(bad)
into
inc
mov
out
loopne
leave
cli
xchg
js
rol
sbb
(bad)
xchg
cmp
scas
ins
(bad)
pop
pushf
push
mov
js
push
pop
lods
inc
je
pop
jb
pop
cmp
cli
cmp
fistp
push
mov
jne
out
seto
sbb
sub
jl
pop
dec
adc
adc
sbb
xchg
hlt
dec
sub
out
(bad)
mov
aaa
cmps
(bad)
dec
cmps
cmp
xor
pop
jns
dec
outs
push
jge
pop
cmps
push
add
scas
ret
mov
and
test
popa
ret
out
sub
ss
icebp
inc
mov
das
outs
and
pop
out
jne
test
cmp
jmp
(bad)
stos
add
add
out
xor
fldcw
in
inc
mov
imul
rcr
lods
push
outs
dec
mov
stc
or
fdiv
mov
nop
mov
push
xchg
movs
imul
test
ror
stos
xchg
(bad)
push
pop
pop
mov
ins
bound
outs
test
inc
lock
call
stos
xchg
inc
jmp
out
dec
mov
imul
imul
adc
mov
xor
out
xchg
xor
and
js
in
xor
dec
fbld
mov
adc
in
idiv
out
inc
inc
mov
nop
out
aas
enter
mov
jp
aaa
dec
mov
dec
sub
and
shrd
in
loopne
push
adc
movs
cmc
repnz
xor
cs
cwde
arpl
stc
ja
stc
lods
pop
lods
pop
out
outs
sub
sub
aad
push
pop
daa
outs
add
mov
add
push
test
adc
fidiv
or
aad
xor
outs
stos
out
cmps
ja
test
fsub
mov
dec
push
push
mov
nop
xlat
out
fwait
mov
loopne
cmp
test
and
or
push
push
pop
in
sbb
ins
push
mov
ds
cmp
stos
push
in
(bad)
pop
cs
leave
mov
mov
repnz
push
jecxz
js
jmp
mov
arpl
inc
jnp
outs
add
ret
ds
iret
dec
fldenv
ja
je
psubw
xor
es
pop
lds
mov
ret
sti
mov
and
jmp
mov
sbb
mov
sti
mov
xchg
push
fnstcw
dec
inc
xchg
mov
stc
popa
jb
xor
xchg
out
push
push
mov
lods
push
mov
movs
mov
aam
inc
jb
add
jge
jge
int
imul
loope
sub
bound
and
and
sub
sub
(bad)
(bad)
retf
jmp
cli
mov
jae
jno
inc
push
sbb
xor
ins
aaa
cmp
xchg
push
xor
pop
das
xchg
rcr
cmps
int3
lea
test
jecxz
out
clc
sbb
jno
mov
imul
scas
mov
ins
cmp
sbb
lahf
inc
outs
add
icebp
fisttp
add
js
loopne
or
scas
psubsw
mov
add
nop
adc
out
mov
mov
or
jle
push
das
and
repz
fild
repz
lods
jp
pop
and
push
xor
dec
xchg
cmp
sub
mov
int3
mov
jge
pusha
push
outs
cmps
jge
int
popa
shr
test
js
mov
add
or
lods
mov
cmp
fidivr
dec
loopne
aad
jge
loop
in
movs
xchg
in
jmp
push
adc
loop
jnp
scas
scas
jecxz
jno
data16
mov
mov
or
inc
icebp
std
std
and
or
pop
ficomp
mov
test
xchg
clc
and
mov
jle
repnz
rcr
jmp
jp
pushf
jno
jns
xchg
or
fs
arpl
inc
cld
jb
fwait
cli
sub
inc
cld
push
mov
lods
js
and
mov
xor
stos
aaa
push
adc
jnp
sbb
icebp
inc
(bad)
mov
mov
pop
pop
ja
jbe
mov
push
das
cmps
xor
fnstcw
ins
inc
sahf
ficom
jp
sbb
mov
adc
test
pop
cmp
mov
dec
imul
adc
cmp
mov
es
cli
push
das
xchg
mov
arpl
push
(bad)
std
mov
mov
adc
or
push
sbb
jae
mov
fld
jnp
je
dec
sbb
fisub
inc
adc
xchg
sbb
cs
mov
push
xor
jmp
retf
push
or
mov
dec
lds
add
add
pop
stos
or
mov
xor
ja
dec
movs
in
scas
stc
stos
inc
lods
gs
cmc
sub
push
inc
sbb
mov
pop
aad
sbb
sub
jb
and
test
(bad)
fdiv
clc
fsubr
out
nop
or
adc
jle
xchg
mov
pop
aaa
popa
sbb
xchg
mov
test
jmp
retf
outs
and
xchg
jmp
ss
aam
add
mov
fisub
push
jle
push
mov
jg
out
mov
sbb
mov
sbb
(bad)
sub
jnp
or
(bad)
cli
sbb
not
xor
add
sti
mov
add
xchg
cwde
xor
pop
cmp
mov
mov
aam
and
dec
and
inc
jl
dec
arpl
stc
movs
adc
sbb
fidivr
(bad)
inc
mov
repnz
fs
adc
dec
stc
ja
inc
aad
mov
pop
inc
adc
xchg
arpl
imul
daa
push
movs
clc
pop
jne
adc
dec
push
mov
mov
out
push
mov
push
or
xor
add
mov
sahf
mov
cli
xchg
and
pop
jnp
sbb
mov
mov
jo
in
aaa
inc
fxch
movs
mov
sbb
nop
(bad)
movs
jge
mov
ficom
lea
mov
sbb
push
(bad)
or
inc
inc
xchg
pop
pop
xor
pushf
test
and
cmc
adc
sub
jnp
test
dec
pop
adc
mov
lods
and
sbb
or
clc
sbb
push
cld
ds
pop
push
bound
in
mov
push
nop
dec
xor
mov
pop
cli
add
(bad)
loopne
xchg
add
cmp
pushf
outs
mov
nop
addr16
icebp
jmp
dec
mov
(bad)
and
shl
jmp
aaa
jg
jmp
or
and
push
sub
mov
mov
jne
cmc
(bad)
rcl
sbb
(bad)
jmp
push
sub
cld
leave
movs
(bad)
lea
cmps
jae
les
scas
sbb
fidivr
ficomp
ins
lods
pusha
rol
into
push
aaa
dec
sub
ss
test
cmp
dec
out
mov
sbb
dec
mov
add
push
jmp
lods
and
inc
(bad)
xchg
lds
pop
inc
aam
pushf
fistp
mov
push
pop
rcr
scas
xor
frstor
push
pop
adc
(bad)
mov
xor
jge
cmps
mov
jae
mov
sub
dec
and
shl
stos
jo
and
xor
in
fmul
shr
fisub
xor
mov
push
jnp
xor
push
pop
icebp
(bad)
jbe
out
mov
sar
rol
(bad)
repz
or
sahf
rcl
cmp
lds
adc
in
xchg
mov
mov
fnstcw
out
imul
test
sbb
in
xchg
nop
daa
or
xchg
hlt
sbb
mov
shl
cmp
test
fisubr
shl
daa
sbb
inc
push
lock
adc
push
jne
ret
(bad)
mov
jge
dec
inc
adc
jmp
inc
sub
imul
mov
or
jns
dec
and
add
mov
dec
inc
adc
xchg
push
movs
mov
pusha
or
int3
leave
scas
lods
movs
movs
pop
xor
popf
fstp
dec
sub
lock
icebp
(bad)
out
mov
dec
push
mov
popa
mov
pop
xchg
mov
test
ftst
xchg
cmc
stos
scas
(bad)
fimul
or
scas
test
in
call
popa
cdq
jns
mov
out
popa
dec
dec
or
rcl
inc
mov
add
inc
aas
xlat
or
sbb
cmc
mov
sbb
sub
jl
xor
test
cmc
and
push
inc
loope
xchg
jl
mov
int3
cld
push
(bad)
call
push
dec
imul
xor
ret
jnp
xor
repz
ret
scas
add
jbe
and
add
lock
jge
jge
cmp
mov
xchg
add
aaa
sbb
inc
das
jle
cmp
sub
sbb
aam
adc
sub
in
cmp
sub
jmp
jae
sahf
add
in
push
cmp
mov
nop
cld
mov
inc
ficom
pop
enter
jecxz
mov
jbe
mov
aad
in
cmp
sbb
mov
es
sub
inc
outs
push
imul
jbe
nop
ins
jl
adc
xchg
scas
pushf
pop
and
cmp
test
dec
sbb
mov
add
test
fisub
mov
push
push
(bad)
mov
imul
ss
and
scas
imul
or
mov
or
retf
sbb
fmulp
into
pop
mov
mov
jo
scas
in
cmp
and
(bad)
jmp
mov
add
pop
xor
add
pop
mov
push
inc
and
shl
dec
mov
or
ror
icebp
push
sbb
and
jb
das
cmp
cmp
bound
sub
inc
std
mov
jo
out
pop
imul
adc
push
cli
mov
pop
jmp
and
es
adc
rcr
jp
movs
test
mov
jne
xchg
int
out
mov
imul
xchg
xor
adc
ret
dec
adc
push
mov
mov
fidiv
and
repz
jmp
mul
cmp
adc
ror
out
mov
xlat
inc
jle
mov
cs
mov
lods
xchg
xchg
xchg
pop
stos
arpl
pop
cmp
fisubr
push
mov
in
arpl
sub
sub
push
es
add
jbe
das
loop
dec
push
cmps
shr
test
xor
out
dec
movs
mov
mov
dec
movs
lahf
inc
adc
test
push
das
mov
inc
retf
nop
lds
sub
mov
xor
add
mov
fisttp
and
sbb
adc
xlat
mov
mov
inc
push
mov
jno
sbb
paddb
push
fmul
push
pop
and
std
xchg
clc
dec
gs
dec
enter
mov
adc
daa
mov
fbstp
test
dec
stos
fwait
out
stos
xor
mov
xor
mov
push
das
mov
jecxz
jmp
sti
cmp
mov
pop
mov
mov
fmul
mov
pop
fnstcw
xlat
sub
aas
repnz
xor
nop
les
je
jmp
aaa
and
test
xchg
gs
(bad)
adc
leave
and
inc
or
mov
jne
dec
imul
dec
imul
les
inc
daa
daa
add
ficomp
shl
(bad)
(bad)
push
popf
mov
leave
retf
pop
outs
cld
cmp
add
sti
cld
call
cmp
pop
and
jb
loope
cmp
cmp
adc
aaa
mov
rcr
inc
mov
(bad)
fild
mov
lods
cwde
test
lods
or
cmp
fimul
cld
sti
cmps
push
mov
mov
jae
inc
and
into
sbb
xchg
mov
ja
(bad)
pop
or
jns
loope
inc
int
xor
mov
xor
hlt
fwait
std
repnz
mov
je
or
sbb
and
fiadd
(bad)
ror
loope
repz
popa
dec
and
(bad)
sahf
leave
sub
lods
movs
in
xchg
pop
fs
xor
push
repnz
pushf
fwait
push
xabort
pop
stos
mov
aam
call
retf
cmp
loop
and
xchg
adc
fcmovu
jo
xchg
push
push
ret
in
loope
xor
cmp
stos
clc
div
mov
sbb
add
jb
jno
jmp
sub
aam
in
jns
pop
adc
cmp
dec
outs
or
je
repnz
pop
ins
shr
push
adc
shl
sahf
and
add
xor
repz
aad
shl
je
jbe
rcr
(bad)
in
or
shr
pop
add
stos
mov
inc
(bad)
sbb
add
inc
sar
ss
xchg
inc
scas
xor
addr16
sub
xchg
mov
stc
sub
sub
mov
mov
push
sbb
jbe
es
mov
xchg
jb
retf
cmp
pusha
gs
and
jno
and
jecxz
xchg
lea
pop
popa
pop
lock
enter
pusha
cld
jecxz
jno
clc
loopne
and
mov
lahf
lods
xchg
call
add
mov
xor
cs
add
call
sub
lea
fst
leave
enter
fisttp
cdq
sahf
inc
into
sbb
cwde
mov
int3
and
and
movs
rol
ror
aaa
(bad)
jl
mov
jecxz
dec
add
aam
mov
ret
add
and
rcr
push
push
iret
js
test
std
fnstcw
bound
cmp
bound
(bad)
xlat
js
cwde
and
add
cmp
jmp
mov
cmp
cdq
cmp
test
xchg
fcmovnb
stc
fist
xor
mov
mov
leave
pop
mov
aam
jb
in
nop
jns
int3
or
mov
rcl
mov
les
or
pop
retf
pop
fwait
mov
and
adc
sar
mov
test
sub
es
push
inc
ins
dec
pop
xor
enter
add
sub
fbstp
adc
mov
fcmove
js
adc
mov
inc
adc
xor
(bad)
push
cli
outs
add
push
dec
xchg
cmp
adc
out
xchg
mov
push
cmp
gs
jmp
dec
loope
hlt
inc
jmp
xor
push
add
push
inc
xor
mov
cmc
jg
jb
loopne
push
pop
call
cwde
adc
call
fdivr
cli
lea
pop
out
(bad)
mov
mov
xor
push
pop
stc
dec
push
outs
data16
out
mov
test
adc
xchg
stmxcsr
pop
repz
and
xor
xor
adc
push
(bad)
popa
mov
push
add
test
retf
out
mov
call
test
sti
and
xor
or
add
mov
sbb
and
sbb
jge
mov
mov
mov
popf
mov
mov
(bad)
jmp
mov
pop
out
out
ins
test
xchg
or
inc
dec
push
out
cmp
ss
cmp
test
xchg
adc
pusha
xchg
(bad)
and
mov
push
cmp
or
jno
jmp
sub
pushf
shr
sub
mov
stos
int3
mov
pop
push
retf
ret
aaa
mov
or
lock
and
int3
lods
mov
push
lea
imul
pop
adc
mov
jns
sbb
dec
mov
push
daa
sar
push
xchg
add
or
out
rol
fdiv
fldenv
int
pushf
cmp
(bad)
nop
or
and
(bad)
xor
adc
mov
lods
popf
xor
test
and
sub
jbe
rcl
and
dec
les
scas
pop
iret
xor
out
lea
mov
adc
pop
(bad)
(bad)
stc
xchg
add
sub
stos
lods
es
xor
pop
test
jg
sar
push
sub
dec
into
inc
dec
pop
movs
aad
into
lahf
pushf
scas
ror
test
cmps
push
pop
push
leave
jge
gs
leave
repz
in
pop
xor
jg
cmp
push
in
sbb
push
ins
push
mov
sbb
(bad)
jnp
call
push
int
push
jo
je
cdq
push
rol
int
adc
ss
sub
ins
in
repz
dec
and
test
mov
js
jg
dec
or
sub
gs
loop
lods
sub
or
mov
mov
push
and
push
sbb
cmp
fsubr
or
imul
cs
cmp
adc
test
call
clc
in
fiadd
das
push
mov
fmul
idiv
adc
jecxz
xor
ds
ins
mov
dec
pop
pop
cmp
outs
mov
sbb
push
pop
mov
and
mov
mov
push
rcl
sbb
add
add
and
sub
daa
pop
xlat
jp
jmp
or
mov
fwait
mov
dec
or
inc
xchg
mov
inc
test
cmp
nop
ret
mul
sti
call
cmp
std
mov
mov
push
mov
push
xlat
and
push
add
jecxz
push
or
arpl
idiv
mov
mov
faddp
pop
sub
aas
imul
push
mov
dec
sbb
jae
iret
add
arpl
xor
mov
fild
xchg
push
imul
shr
pushf
shr
and
add
dec
sbb
dec
mov
(bad)
icebp
jae
push
retf
jb
in
mov
jnp
inc
push
push
sub
js
mov
xchg
add
mov
xor
xchg
add
dec
mov
xor
xchg
dec
mov
scas
daa
mov
mov
test
scas
or
jo
add
and
mov
dec
cwde
adc
cmp
sub
xchg
inc
repnz
rol
outs
and
outs
ins
cmp
lods
dec
lods
aaa
es
hlt
sub
sbb
lds
add
jle
ins
mov
lock
int3
pop
push
cmp
mov
add
mov
xchg
mov
push
and
scas
imul
dec
inc
sub
gs
jae
lds
ror
push
lahf
push
mov
push
sbb
jmp
jl
inc
hlt
ss
mov
xor
in
int3
lds
add
(bad)
adc
retf
jmp
sbb
pop
in
popa
jo
pushf
sub
mov
movs
mov
xchg
pop
out
mov
mov
cmp
outs
adc
fsubp
rol
call
push
inc
xchg
int3
xlat
push
push
xor
jl
and
dec
arpl
data16
mul
inc
pushf
int
or
jae
fs
outs
jb
cmps
std
jb
test
jns
mov
loop
dec
enter
pop
mov
push
out
pushf
ss
add
punpckhdq
imul
inc
push
or
pop
fs
cmp
out
dec
sti
movs
jae
outs
stos
fadd
mov
adc
out
out
push
jl
jle
aad
and
jg
leave
mov
dec
loop
mov
(bad)
imul
int
sub
xor
inc
movs
xchg
add
aaa
push
inc
sbb
aam
pop
push
rcr
mov
(bad)
or
outs
xor
xchg
and
dec
rcl
and
ror
push
xchg
aaa
inc
cmps
dec
or
test
icebp
(bad)
ficom
and
cs
pop
jae
test
outs
daa
cwde
dec
je
inc
mov
loop
xchg
pop
leave
lods
hlt
mov
pop
(bad)
fistp
jns
fstp
fldenv
and
ds
dec
arpl
jne
add
jmp
mov
lahf
lods
jo
push
popf
aas
mov
in
popf
shl
and
gs
fisubr
and
and
idiv
loop
jbe
scas
jle
pop
jge
inc
dec
ins
rol
ins
sub
leave
or
adc
mov
test
dec
ins
jle
aad
jmp
or
out
test
xchg
cmp
inc
dec
push
push
pop
stos
mov
fwait
or
jp
xchg
or
test
pop
loopne
xchg
xchg
loop
add
xchg
dec
jmp
mov
cmp
mov
repnz
mov
stos
jo
neg
xchg
fild
out
mov
cmp
(bad)
rcl
(bad)
stos
and
test
(bad)
jo
push
push
adc
pushf
adc
test
je
sbb
fmul
das
sbb
xchg
aaa
ret
sbb
fs
sub
mov
cmp
and
inc
inc
arpl
daa
mov
pop
and
pop
icebp
call
mov
fld
int3
mov
push
mov
imul
xchg
scas
dec
mov
mov
ja
iret
repz
push
out
mov
inc
xor
inc
popf
repz
les
and
arpl
inc
cmp
and
xor
jg
imul
mov
hlt
adc
cli
xchg
dec
push
sub
mov
mov
jmp
mov
or
and
in
adc
adc
or
xor
push
mov
(bad)
cld
push
pop
mov
dec
das
fcom
scas
mov
fwait
pop
xchg
in
rcl
sub
mov
mov
adc
and
pop
sub
mov
or
arpl
push
jp
iret
cdq
xchg
mov
popf
das
retf
fld
inc
or
push
dec
push
lods
add
test
and
and
(bad)
daa
mov
adc
pusha
jg
adc
dec
push
pushf
mov
(bad)
addr16
inc
imul
imul
push
and
outs
push
add
push
ret
add
cdq
cmp
inc
hlt
dec
xchg
jmp
or
mov
call
mov
repz
movs
adc
sub
repnz
hlt
jb
cdq
add
or
mov
or
mov
outs
fistp
mov
rol
ret
mov
or
inc
mov
std
jbe
adc
add
add
sbb
inc
jmp
cmp
into
or
and
push
gs
daa
mov
hlt
call
movs
jp
ret
mov
and
ja
retf
scas
xchg
adc
aam
mov
and
sar
and
sbb
cmps
mov
lods
add
or
ret
push
pop
cmps
mov
cli
es
enter
shl
(bad)
daa
iret
jne
repnz
xor
aas
mov
inc
adc
out
jmp
adc
ret
and
test
test
call
es
into
xchg
sahf
xor
cmp
push
mov
inc
int3
inc
push
fimul
add
call
das
push
xor
cmp
ss
dec
cmp
pop
inc
add
adc
jl
adc
fcom
pusha
movs
mov
dec
sbb
lods
push
outs
mov
fsub
jno
mov
aam
fcomp
mov
and
js
mov
jne
xchg
aam
loopne
shr
mov
lods
loopne
(bad)
out
jbe
iret
arpl
adc
out
mov
xchg
ja
add
pop
mov
pop
out
cmp
lahf
call
dec
jae
pop
or
bound
or
push
adc
bound
sbb
jns
or
data16
imul
or
cdq
mov
(bad)
das
es
ja
icebp
out
dec
sub
aas
(bad)
aas
test
mov
mul
ror
shl
in
aad
and
js
movs
fsub
hlt
sub
fdivr
ins
jne
mov
int3
push
push
mov
xchg
movs
repz
bound
jl
mov
pop
cmps
mul
ror
adc
jmp
sub
retf
(bad)
mov
pop
push
shl
mov
mov
dec
jl
shl
mov
xchg
repnz
loop
push
mov
push
out
movs
imul
and
out
adc
xlat
adc
and
sub
mov
add
inc
int3
mov
pop
(bad)
gs
sar
mov
call
sbb
lock
pop
push
sub
sti
push
nop
out
and
and
in
or
jmp
pop
xchg
mov
dec
inc
mov
movs
ret
push
clc
aad
dec
in
dec
mov
imul
(bad)
cmps
loopne
daa
es
in
in
je
sbb
cmp
jne
sub
jmp
cwde
mov
es
jae
add
and
int
jp
push
mov
xchg
cld
scas
xchg
push
add
aam
pop
dec
data16
(bad)
out
adc
mov
sar
xchg
icebp
stos
push
sub
outs
fidivr
jge
inc
(bad)
push
sti
daa
scas
sub
mov
les
and
cmp
sub
out
sbb
cld
mul
je
jl
loopne
cmc
mov
add
enter
mov
lds
add
jge
xor
jl
fdivr
dec
and
ins
inc
xchg
adc
dec
mov
or
je
cmp
(bad)
fist
mov
fnstenv
out
add
inc
(bad)
dec
outs
or
xlat
std
or
add
and
and
add
add
out
bound
sub
sahf
sub
fist
sub
mov
dec
enter
jl
ins
adc
mov
and
imul
xchg
mov
movzx
add
inc
or
sub
int
ds
shr
out
pushf
push
into
push
jmp
xor
mov
xchg
and
xchg
lahf
jle
aas
leave
movs
icebp
mov
in
xor
outs
xchg
xor
lea
(bad)
imul
cdq
gs
movs
mov
xor
je
add
fcmovu
popf
jge
in
and
xchg
pop
(bad)
fcmovnbe
cmps
movs
loopne
stos
mov
mov
xchg
div
das
jmp
xchg
cmp
pop
add
push
ss
(bad)
fistp
ds
pop
(bad)
enter
(bad)
ficomp
aas
pusha
retf
sbb
sar
out
mov
push
in
pop
stos
ret
cdq
hlt
or
shl
outs
out
pushf
daa
jbe
hlt
jmp
mov
pop
push
mov
test
inc
dec
sbb
or
repnz
jbe
sub
sbb
mov
mov
push
sbb
icebp
aas
es
aaa
sbb
ins
aaa
sub
(bad)
loope
in
shr
fidivr
mov
popa
push
movs
jne
adc
inc
cmc
fimul
sbb
outs
push
adc
push
add
cli
lods
pop
and
outs
shr
mov
cmp
xor
fs
or
ret
std
and
rol
pop
stos
call
aas
scas
lea
fs
pop
cld
in
int3
cmp
(bad)
pop
cmp
movs
out
or
push
fistp
cmp
mov
push
sub
test
fs
pop
cli
sbb
in
mov
mov
cwde
cwde
ja
sub
push
push
sub
das
retf
jg
cmp
xor
pop
nop
in
add
jo
pop
add
pusha
movs
mov
inc
or
pop
and
retf
push
add
imul
pop
fidiv
icebp
daa
xor
or
nop
fs
aas
adc
mov
leave
test
imul
loope
fsubp
pop
push
frstor
and
and
sbb
cmc
xor
addr16
mov
ins
or
(bad)
fcomp
int3
mov
mov
dec
push
(bad)
jecxz
lods
jne
dec
cmp
cmp
mov
pop
loope
outs
(bad)
movs
sahf
xchg
ret
mov
cmp
pushf
jle
test
vmovapd
fiadd
std
leave
test
and
mov
cmp
jecxz
dec
mov
or
and
dec
shr
daa
sub
fwait
dec
cmc
fisttp
push
xlat
sbb
shr
pop
mov
loope
sub
fisub
out
jbe
push
rol
hlt
mov
ds
test
imul
ret
xor
jg
aas
clc
ins
xchg
add
dec
cmp
into
imul
xor
popf
or
scas
lahf
lock
inc
or
mov
dec
jecxz
sbb
dec
or
jmp
sbb
or
test
jp
or
popf
iret
out
jmp
and
or
add
(bad)
jg
xor
cmp
push
lock
push
fimul
adc
mov
mov
fcomp
mov
pop
test
push
and
leave
es
sbb
jae
ret
cld
adc
cdq
mov
jge
cdq
and
inc
shl
sub
imul
bound
out
rcl
call
mul
test
bound
jnp
call
(bad)
repz
das
out
cld
sbb
test
sti
and
ffreep
repz
in
cs
mov
lods
in
ror
les
sbb
xchg
or
cmps
push
cdq
test
pop
or
call
(bad)
push
inc
fisubr
push
dec
out
lock
cwde
jmp
push
mov
cmc
dec
out
or
sar
fcmove
(bad)
test
adc
xor
or
int3
inc
add
inc
xor
es
inc
fist
add
imul
ret
cmp
test
mov
div
add
inc
inc
ja
popa
jmp
inc
mov
aas
ins
es
xlat
dec
icebp
push
push
xor
jecxz
fst
std
and
push
pop
(bad)
sar
cs
out
mov
addr16
cmps
out
pop
cdq
mov
scas
jmp
mov
xlat
adc
shr
fdivr
in
nop
jle
call
and
xchg
(bad)
into
adc
adc
jmp
lea
and
jg
mov
add
std
xchg
xchg
xchg
leave
jo
icebp
push
push
gs
gs
shl
in
das
pop
imul
or
dec
fdiv
iret
stos
adc
jns
adc
outs
push
pop
rcl
aam
inc
imul
lods
ror
lds
fwait
push
cmps
push
ins
and
rcl
ret
ret
scas
daa
or
inc
pop
test
jb
scas
xchg
movs
xor
inc
aam
inc
mov
and
sbb
fwait
adc
repz
jle
aad
and
pop
mov
aad
bound
fdivrp
cwde
mov
mov
rol
pop
adc
jnp
shr
pop
mov
into
push
push
xchg
adc
sub
mov
sbb
sub
jmp
fistp
sbb
in
es
jae
enter
jp
cdq
pop
push
jbe
pop
mov
pushf
mov
pop
movs
push
jbe
dec
test
(bad)
retf
sub
test
aam
or
aaa
rol
jns
dec
paddsw
jne
pushf
jne
(bad)
pop
jmp
push
push
inc
outs
mov
sbb
jae
or
mov
add
xchg
inc
(bad)
in
or
imul
mov
xchg
mov
pop
data16
retf
js
test
ret
mov
and
xor
out
xchg
out
mov
mov
adc
pop
mov
mov
in
or
sub
hlt
retf
pusha
(bad)
mov
push
enter
es
inc
imul
(bad)
cmps
adc
call
cmp
cdq
cmp
jbe
xlat
dec
enter
scas
cmps
outs
(bad)
loopne
mov
in
or
repnz
fxch
dec
(bad)
loopne
jp
sar
mov
cmp
or
ret
dec
xor
outs
test
and
movs
xlat
ds
cdq
add
and
jp
sbb
adc
fdivr
pushf
fbld
jmp
xor
ss
fst
push
push
cmc
ret
and
push
cli
enter
idiv
ins
dec
mov
call
adc
mov
ja
hlt
stos
dec
rcl
mov
and
mov
push
add
xchg
jle
dec
mov
clc
xchg
add
(bad)
sbb
cmp
int
jne
mov
cmp
pushf
dec
inc
cld
inc
push
push
xor
pcmpeqd
into
lea
sbb
fdiv
push
rcr
xchg
ret
popa
sbb
pushf
lahf
ins
inc
sbb
sbb
inc
and
imul
leave
adc
aaa
cmp
stc
and
adc
pop
mov
mov
arpl
jb
dec
ins
xor
cdq
jmp
mov
cdq
or
stc
sbb
call
repnz
cmp
fdivr
pop
retf
fucomi
and
xchg
or
or
mov
into
imul
scas
repnz
or
jmp
loop
mov
test
jg
cli
fld
jmp
dec
inc
cmp
scas
and
cmps
fisttp
popa
inc
cmp
popf
and
pmulhw
popf
jmp
cmps
sub
push
out
pop
mov
xor
sub
or
dec
sbb
mov
inc
cmps
sar
in
mov
outs
fdiv
dec
cmp
jns
test
ror
aad
imul
out
push
scas
(bad)
std
dec
push
xor
xchg
(bad)
jne
and
cwde
nop
shr
add
pop
or
lock
stc
sbb
lea
test
adc
lods
inc
push
push
cld
push
lock
fadd
sbb
in
xchg
(bad)
dec
fsubp
pop
jecxz
loop
jo
ins
sbb
ins
jp
pop
shr
sbb
xchg
jmp
hlt
sbb
jmp
cmp
inc
or
imul
rcl
(bad)
cmp
popa
xor
out
push
inc
repnz
dec
fwait
les
cdq
in
push
add
push
mov
sbb
pop
test
or
add
scas
mov
int
xchg
jno
test
mov
pop
pop
adc
mov
aas
sub
cld
jle
pop
jnp
loopne
add
adc
adc
sbb
sub
sar
sub
and
bound
bound
mov
mov
inc
dec
inc
mov
mov
push
dec
add
jno
pop
and
out
push
outs
dec
addr16
cmp
or
or
add
movs
mov
mov
sub
cs
leave
mov
adc
ins
test
add
push
popa
xor
ins
dec
jne
pop
cmp
adc
mov
mov
in
mov
leave
lods
scas
loopne
inc
pop
sahf
mov
xlat
int
loope
xchg
add
mov
xchg
(bad)
out
repz
jbe
and
js
adc
push
scas
inc
addr16
addr16
add
or
sbb
cmc
fs
sbb
adc
ficomp
cs
in
adc
mov
cmp
pop
fsub
test
pop
data16
cmc
mov
out
lea
add
mov
shr
loope
imul
mov
mov
loope
dec
dec
pusha
push
pop
xor
cmp
xchg
mov
inc
inc
fild
retf
popa
sub
xchg
aad
cwde
xor
test
sbb
in
sti
imul
push
std
xchg
hlt
xchg
clc
dec
adc
cdq
fwait
jb
mov
in
fild
adc
ss
mov
mov
xor
scas
fidiv
loop
mov
mov
ins
das
dec
or
add
ror
into
mov
sbb
jmp
loop
or
test
je
add
mov
iret
lods
sub
mov
addr16
mov
fdivr
fst
xor
sub
push
in
mov
cmp
sbb
cld
pop
add
cmp
fucomip
mov
mov
sbb
inc
fistp
pop
fabs
xlat
xchg
mov
ins
bound
mov
or
xchg
cmp
aam
sbb
adc
xor
(bad)
outs
sub
mov
hlt
mov
jbe
inc
and
ror
leave
xor
xor
lods
imul
movs
sbb
pop
movs
and
cmp
(bad)
faddp
sub
inc
add
mov
(bad)
push
mov
idiv
add
ss
adc
stc
add
pop
out
push
inc
mov
mov
jg
mov
mov
arpl
cmc
jbe
pop
cmps
sbb
or
xchg
mov
fbstp
lds
into
mov
repnz
mov
jmp
push
dec
xor
pushf
pop
shr
loope
lods
ret
call
int3
mov
xor
adc
call
push
dec
je
sub
sti
jae
dec
jnp
and
add
lds
pusha
xchg
and
loope
or
mov
jp
push
xchg
(bad)
cld
add
cmp
jge
loopne
sahf
fisttp
ss
ror
adc
xchg
js
or
retf
mov
outs
adc
cmp
xchg
jns
pop
mov
pop
mov
rcl
or
sub
scas
inc
nop
repz
inc
aas
mov
(bad)
mov
jno
dec
mov
or
int
mov
(bad)
cld
jb
push
mov
jae
lds
mov
sub
int
out
lahf
pop
ds
add
push
mov
dec
cmps
jns
out
mov
cmp
add
xchg
lods
mov
lea
fistp
repz
mov
test
jecxz
(bad)
jmp
lods
jb
mov
cdq
lock
fidivr
and
pop
and
push
inc
mov
call
ror
sbb
add
push
mov
lods
je
pop
xchg
lea
dec
es
jge
dec
xchg
mov
and
and
sub
in
mov
(bad)
lods
into
and
jecxz
cmp
aam
sub
call
mov
jbe
mov
or
daa
inc
inc
sbb
sbb
mov
in
sti
aam
or
lds
enter
sub
(bad)
xor
jge
jge
push
lahf
and
or
fsubr
push
or
enter
adc
xor
test
or
fcmove
je
in
call
xchg
pop
outs
aam
loope
jns
rcl
out
push
out
dec
add
jmp
dec
popf
jecxz
inc
mov
ins
mov
ins
dec
es
xor
(bad)
sbb
data16
cmp
pop
adc
jmp
shr
push
into
add
stos
out
bnd
jl
cs
cmp
push
xchg
sahf
push
loope
mov
enter
cli
push
aam
bound
push
pop
test
rcl
std
mov
loope
jmp
sbb
lock
adc
enter
out
and
cmc
adc
mov
xchg
inc
or
icebp
mov
jmp
sbb
aas
hlt
adc
into
rcr
loope
gs
cmp
(bad)
cmp
les
and
jns
aad
inc
sbb
into
je
push
int
pop
cmp
xchg
rcpps
and
aaa
test
scas
iret
pop
sub
cmp
cmc
movs
xchg
push
scas
jb
lahf
cmp
xchg
adc
rol
push
jb
mov
fsubr
mov
xchg
adc
dec
adc
add
daa
movs
lods
mov
ins
test
push
jmp
rol
xchg
xlat
in
xor
iret
xchg
call
pop
or
iret
hlt
inc
push
mov
scas
and
mov
jns
(bad)
push
shl
in
shl
sbb
mov
push
test
pusha
rol
mov
shr
and
and
ret
jp
cmp
push
adc
test
pop
sbb
aam
pop
add
outs
adc
jmp
data16
jns
pusha
dec
adc
adc
add
sbb
jmp
outs
shl
add
cdq
(bad)
pop
stc
mov
daa
(bad)
jge
dec
dec
mov
xchg
out
adc
in
shl
inc
push
and
push
daa
mov
ds
stos
push
pop
dec
mov
dec
(bad)
aad
xor
cwde
mov
outs
mov
cdq
jmp
fdiv
fisubr
(bad)
aad
jb
lods
pushf
ins
xor
mov
clc
call
sti
sbb
fistp
adc
xor
shr
add
ja
movs
dec
sub
pop
je
lods
lea
ins
xor
xor
jne
ja
repnz
das
or
pop
out
or
fmul
add
inc
pop
clc
push
sub
nop
xor
inc
or
cmp
or
cmp
jle
inc
mov
adc
ja
ficomp
dec
jmp
mov
push
rcr
sbb
rcr
(bad)
ss
dec
cmp
in
fdivrp
adc
icebp
retf
pop
lahf
inc
push
and
jl
push
inc
mov
mov
push
push
xchg
(bad)
mov
mov
xchg
mov
into
in
or
fisubr
inc
lock
std
xchg
lahf
mov
jp
lahf
outs
xchg
aad
mov
inc
cmp
int
imul
mov
nop
rol
mov
das
sbb
loope
ds
lods
xchg
inc
mov
imul
jp
pop
pop
iret
sbb
(bad)
movs
mov
aam
adc
xor
and
fisubr
ja
imul
push
sub
imul
popa
(bad)
push
mov
daa
mov
jbe
fsubr
jno
add
ja
test
fadd
imul
lods
(bad)
movs
test
cmp
mov
mov
lock
or
dec
arpl
mov
popf
cmp
mov
pop
dec
push
out
daa
jmp
jecxz
fild
sub
sbb
sahf
enter
into
mov
popa
adc
int3
fs
xor
pop
lea
push
mov
cmps
test
stc
fs
mov
fisttp
xor
inc
cmc
mov
add
lock
in
and
xor
xor
(bad)
push
popf
(bad)
shl
inc
scas
mov
adc
cld
cld
adc
in
mov
push
push
mov
scas
cmp
lods
fsubr
aad
push
push
mov
lods
mov
inc
fisttp
pop
iret
jg
pop
adc
nop
call
pushf
inc
sub
loop
inc
loope
repz
out
cmp
xchg
in
ficomp
cmp
cwde
xor
push
push
add
test
call
adc
test
lea
outs
jl
dec
mov
scas
pop
or
pusha
jae
mov
test
fwait
cmp
add
aaa
cmp
sbb
xchg
cmp
or
lahf
shl
fild
cmps
push
pusha
mov
jns
fst
sub
outs
jbe
fisubr
rol
xlat
jnp
xchg
sub
in
adc
jmp
inc
inc
push
or
jne
or
push
cmp
add
cmp
mov
cmc
cld
push
aad
std
inc
add
mov
mov
cmp
push
or
ret
daa
mov
call
mov
push
or
fild
ficomp
hlt
mov
inc
jb
push
push
push
pop
mov
popa
dec
bswap
retf
dec
call
and
xchg
in
and
mov
push
je
push
mov
ret
pop
test
and
xchg
jb
fdivrp
pop
leave
into
ret
retf
pop
popa
and
ror
fwait
aad
cmps
fwait
jbe
movs
pop
pop
in
jg
mov
es
mov
xor
loop
cwde
inc
jle
sub
shl
inc
jnp
pop
xor
adc
dec
repnz
push
dec
or
mov
lea
push
repz
or
push
popa
call
jns
xchg
jecxz
in
icebp
adc
sub
mov
inc
repnz
mov
in
call
xchg
push
mov
xchg
inc
ss
mov
sbb
(bad)
lods
sub
pop
mov
repnz
jmp
bound
cmp
(bad)
cmc
jne
jo
retf
ins
imul
mov
test
pusha
dec
and
out
xchg
out
leave
aaa
mov
addr16
int3
adc
arpl
or
mov
sub
gs
rcl
jl
or
xchg
movs
test
jg
test
add
out
cld
mov
fisttp
cwde
rcr
mov
and
jno
inc
or
xchg
and
add
clc
jo
jo
push
fbstp
enter
xor
push
cmp
jp
daa
mov
enter
pop
push
jae
or
jnp
xchg
xor
push
loop
cli
js
xor
adc
mov
je
jl
adc
in
jmp
dec
sub
mov
aas
sbb
jecxz
inc
jmp
pop
mov
je
xchg
iret
ds
popf
or
retf
pusha
cli
cld
sub
mov
adc
mov
pop
cmp
pop
xchg
add
(bad)
cdq
inc
imul
sub
ja
iret
mov
scas
stc
das
sub
sbb
pop
mov
dec
pop
cs
in
mov
enter
pop
inc
pop
and
test
adc
adc
test
in
mov
ja
mov
add
push
shr
mov
jo
call
sub
add
sar
adc
rep
xchg
ror
loop
xchg
push
inc
outs
adc
cmp
cmp
cmp
imul
imul
and
ds
in
ret
and
fdivr
push
lahf
les
add
or
dec
test
pop
rcl
inc
pop
inc
imul
push
inc
clc
xor
xor
aam
inc
sub
xchg
retf
inc
add
pop
punpckhbw
and
stos
xchg
sub
mov
mov
lods
push
scas
xor
push
and
mov
add
enterw
mov
cdq
mov
push
mov
loop
sub
mov
test
call
push
add
ret
pop
cmp
fsubr
or
or
js
jae
jle
sub
jle
outs
inc
out
fadd
jnp
push
push
in
lock
div
addr16
pop
aas
fwait
push
aaa
popa
push
retf
test
pop
cld
sub
jmp
dec
xor
fisub
add
xchg
loop
push
push
mov
fcom
xor
outs
fmul
and
call
push
dec
ret
mov
not
inc
or
inc
stos
ins
push
shl
mov
popf
cli
pop
mov
xor
or
repnz
shl
mov
push
mov
test
icebp
adc
test
dec
xor
cli
inc
ja
lock
stos
cli
or
mov
je
in
push
dec
pop
adc
or
cmp
popa
pop
je
add
inc
push
xchg
loope
pop
push
sub
adc
loopne
xor
mov
stc
cmp
pushf
pop
pop
and
jmp
imul
test
inc
jmp
mov
push
sub
outs
int
pushf
mov
cmc
popa
push
ss
outs
add
pop
popa
push
out
out
mov
stos
dec
in
retf
das
ret
mov
cdq
xor
xlat
stos
push
jg
sub
mov
fnsave
lahf
gs
pop
ffreep
std
test
aas
sahf
shl
sub
mov
clc
mov
inc
or
cmp
cmp
ffreep
dec
sub
xchg
retf
adc
cmp
inc
dec
sbb
cdq
repz
dec
sub
jl
aad
fild
cmc
int3
mov
adc
repz
mov
test
ss
inc
and
jns
fwait
mov
cs
pop
(bad)
mov
aam
add
push
stos
dec
xor
out
scas
and
cmps
repz
dec
imul
sti
inc
es
pop
inc
xchg
add
adc
dec
aam
pop
in
cmp
call
rcr
lahf
xchg
shl
inc
cmp
mov
mov
fistp
xor
mov
mov
lods
and
ins
fcmovbe
ret
nop
wbinvd
cmp
xchg
mov
addr16
idiv
test
push
adc
push
jno
stos
cmp
pop
cmp
aad
cmp
arpl
cs
mov
(bad)
cdq
rol
pop
iret
les
outs
shl
inc
stos
cmp
inc
add
mov
hlt
repz
(bad)
ins
lods
loopne
mov
inc
ror
mov
fdiv
adc
push
pop
jnp
(bad)
fld
test
out
sub
iret
sub
and
les
adc
mov
arpl
cmp
in
sbb
cli
(bad)
sbb
jmp
stos
jge
(bad)
adc
and
sub
inc
pop
adc
pop
inc
rcl
pop
mov
add
mov
test
call
cmp
xor
and
dec
inc
ja
ret
sub
movs
enter
and
pop
sbb
in
mov
clc
shl
sub
push
push
sub
inc
(bad)
xchg
int3
dec
xchg
gs
inc
fwait
inc
mov
sbb
push
scas
adc
outs
dec
fist
mov
cmc
fist
mov
jns
add
fcomp
push
adc
arpl
xchg
push
retf
leave
es
or
adc
dec
sub
mov
cwde
cli
scas
vaddsubpd
cmc
arpl
repz
(bad)
dec
enter
push
and
movs
dec
push
jg
repz
xchg
jp
adc
call
sbb
sub
adc
push
sahf
call
ret
push
or
shl
push
cmp
sub
fs
xchg
inc
cmp
fld
fidivr
pop
aad
in
(bad)
dec
jb
push
enter
test
adc
push
aam
pop
fdivr
movs
cmp
dec
push
fdivr
mov
and
pop
jb
clc
cmp
mov
retf
fistp
repz
sub
clc
dec
pop
in
notrack
dec
and
or
imul
mov
lock
sbb
mov
in
jle
loopne
in
adc
adc
out
fcom
xchg
sbb
bound
ss
das
and
inc
or
push
mov
mov
push
pop
retf
dec
rcr
pop
jmp
xchg
cmp
xchg
mov
sbb
(bad)
lods
pop
in
sti
adc
das
hlt
lahf
in
into
loopne
in
hlt
push
mov
mov
xchg
and
(bad)
xor
adc
inc
les
out
inc
stc
xor
adc
ds
jecxz
inc
vaddps
imul
jbe
push
jmp
jno
dec
idiv
dec
movs
sub
mov
test
fucomp
pushf
out
mov
stos
sub
out
addr16
jbe
sbb
call
(bad)
sub
push
jbe
in
fadd
nop
addr16
mov
ror
mov
inc
inc
stc
scas
cmp
jmp
aad
mov
dec
add
mov
mov
dec
sub
addr16
add
shr
sub
jmp
or
adc
cmps
int
jns
mov
and
mov
stc
test
sub
ja
push
data16
sbb
jl
sub
push
push
(bad)
mov
adc
jae
sahf
cmps
sub
or
mov
lea
jmp
loop
cwde
test
mov
xchg
and
add
ret
jb
push
sbb
jmp
and
inc
outs
outs
xlat
fldln2
jbe
pop
dec
inc
test
in
adc
sar
xor
fnstsw
mov
xchg
xor
dec
dec
lods
sbb
pop
sbb
das
push
outs
jnp
xchg
out
pop
dec
call
xor
rcr
mov
inc
mov
call
loope
sbb
adc
push
iret
push
ret
pop
sbb
mov
popa
mov
loop
and
and
fadd
rcr
ins
xor
inc
and
mov
inc
in
xchg
and
pop
sub
inc
fwait
or
int
or
pusha
cmp
mov
cmc
push
dec
jl
pop
aas
les
dec
div
or
fldenv
popf
retf
(bad)
(bad)
push
sbb
fsub
aas
ret
iret
(bad)
cmp
popf
iret
pop
push
loope
aad
(bad)
jnp
mov
mov
shr
push
adc
jl
fcmove
adc
jle
and
arpl
(bad)
inc
dec
pop
mov
pop
es
mov
nop
cmp
retf
outs
sub
mov
fwait
mov
pushf
popa
ror
jl
lock
sbb
dec
mov
adc
leave
xchg
or
jns
sbb
or
cmp
adc
adc
outs
sub
xchg
(bad)
lahf
sbb
fisttp
sub
(bad)
or
dec
dec
(bad)
fs
sub
push
push
inc
inc
lea
push
lea
call
dec
stos
das
mov
or
jbe
out
fcmovnbe
mov
jae
je
mov
gs
pushf
cwde
fimul
aad
lahf
(bad)
test
pop
jl
sub
push
mov
cmp
inc
jmp
mov
inc
(bad)
aad
pop
pop
ret
push
jne
ror
dec
shl
mov
gs
xchg
sub
loop
loopne
jnp
lock
cdq
mov
shl
mov
cmp
nop
iret
pushf
fisubr
mov
mov
mov
in
push
sar
pop
mov
and
xchg
sub
mov
je
mov
dec
cli
clc
test
ins
push
sti
dec
or
mov
and
inc
test
xor
in
ret
cs
lods
fst
scas
add
jmp
in
sub
fld
push
leave
jnp
icebp
in
sar
ror
pop
pop
outs
push
jb
inc
fdivrp
mov
fild
dec
test
not
cmps
jecxz
inc
mov
add
push
xchg
jge
xor
(bad)
stc
lock
dec
mov
rep
jge
mov
and
xor
dec
or
(bad)
jl
mov
repz
inc
shr
jae
fwait
jmp
jecxz
cli
mov
jmp
or
xchg
or
inc
mov
mov
rol
xor
jnp
rcr
and
push
mov
pop
xor
jno
mov
stos
mov
loope
(bad)
jo
shl
loopne
(bad)
aas
dec
jg
aaa
jmp
ret
cmp
jge
shl
out
retf
ret
pop
mov
lods
mov
in
inc
into
movs
mov
add
jae
xchg
mov
dec
inc
out
js
or
ret
xor
jmp
sbb
mov
pop
xchg
sub
inc
push
sar
pop
jbe
rcr
inc
ins
mov
gs
xor
movs
sub
dec
or
and
cmp
jecxz
sbb
xchg
bound
push
sub
add
xchg
retf
mov
lods
push
mov
sbb
cmp
and
mov
lahf
ss
aam
jmp
rcl
mov
dec
dec
popa
lds
sbb
push
jno
push
jg
retf
and
push
loopne
pop
retf
and
jb
or
je
inc
sub
sbb
mov
sbb
or
pop
push
mov
pop
dec
mov
ins
in
lods
dec
or
fmul
add
mov
dec
sti
js
xchg
adc
sub
ins
sbb
cmp
arpl
fs
push
sub
sbb
imul
pusha
and
icebp
xchg
sbb
fs
xor
ret
jp
jg
push
sbb
arpl
test
inc
test
daa
fcom
shl
fxch
stos
and
outs
xor
scas
stos
fwait
mov
mov
sbb
int3
mov
cs
adc
sbb
sbb
(bad)
jmp
loope
and
neg
hlt
push
pushf
iret
outs
jnp
mov
sub
mov
mov
and
in
fadd
(bad)
cmp
dec
rcr
or
mov
adc
in
in
push
dec
scas
cmp
jns
jae
and
sub
sbb
bswap
pop
and
xchg
std
into
cmp
mov
lock
dec
cmps
mov
shl
jns
mov
mov
inc
jl
sub
leave
fidivr
cmp
add
add
dec
and
jl
das
(bad)
adc
rol
adc
(bad)
int
fldenv
adc
jbe
movs
lods
xor
clc
hlt
dec
(bad)
rcl
gs
add
(bad)
daa
scas
dec
xor
imul
adc
iret
mov
or
push
mov
inc
mov
jnp
in
movs
cs
sti
xchg
xor
movs
das
fs
arpl
pop
pop
hlt
ret
mov
aaa
sbb
in
and
pop
sub
dec
and
cmp
les
ins
cmp
push
dec
xor
mov
retf
dec
js
and
jecxz
sar
or
sub
push
sub
xor
test
scas
clc
shr
aaa
jo
icebp
inc
sar
jmp
iret
mov
ror
mov
mov
add
jb
mov
adc
and
xchg
das
imul
add
daa
int
and
adc
aas
popa
pop
jp
jns
(bad)
lock
not
mov
xchg
push
cwde
adc
call
xor
loopne
hlt
imul
sbb
push
ss
push
cmp
push
dec
imul
push
add
mov
stc
or
leave
loopne
cwde
jne
jb
push
in
scas
push
lock
pop
and
push
lods
adc
push
mov
xchg
jl
std
aaa
mov
xor
lock
clc
(bad)
mov
mov
mov
push
dec
icebp
xor
and
sahf
sbb
mov
(bad)
cld
out
jmp
lea
inc
adc
xchg
cmps
mov
xlat
into
and
jno
sub
in
mov
push
pop
and
mov
dec
ins
mov
sti
jo
xchg
add
loope
dec
mul
mov
adc
and
sbb
pushf
or
or
xor
jbe
sub
cli
sub
xchg
sub
stc
repz
stos
mov
cmp
inc
jns
rcl
push
or
inc
jmp
js
ins
adc
push
inc
adc
jb
inc
adc
mov
stos
stos
stc
xchg
dec
out
ficomp
add
or
xor
fnstcw
sub
retf
or
jg
add
test
sbb
pop
ror
push
std
lods
pusha
add
fld
xchg
push
pusha
pop
repnz
sti
aas
rcl
imul
add
cmps
popa
cmc
dec
mov
retf
xor
imul
inc
push
sub
in
cmps
outs
mov
sub
mov
(bad)
loopne
int
mov
pop
movs
ret
fs
push
fisub
add
in
enter
mov
xrelease
mov
cmp
sub
sbb
mov
gs
jle
mov
and
in
dec
pop
and
jae
adc
clc
cmp
std
adc
call
jl
inc
aad
lods
cdq
lea
sub
or
adc
cwde
mov
inc
cmp
movs
out
push
or
fs
and
pop
jmp
sbb
popa
sti
mov
hlt
fucom
and
adc
(bad)
inc
xor
out
stos
sub
outs
fisubr
pop
jmp
push
movs
mov
lods
fcomp
ret
adc
ins
jne
popf
sbb
mov
je
movs
inc
xchg
xor
addr16
cmps
stos
pop
pop
sub
in
cmp
movs
mov
mov
jae
in
mov
out
loopne
gs
push
pop
lods
push
pop
and
adc
mov
pop
sub
pop
ja
jecxz
push
jbe
(bad)
mov
push
inc
addr16
movs
push
sqrtps
aad
or
das
xchg
mov
cmps
std
xor
hlt
xor
(bad)
pop
leave
or
mov
mov
pop
jl
out
mov
sub
(bad)
retf
and
jo
sub
adc
xchg
fwait
cmp
push
sbb
out
outs
push
or
push
arpl
test
jg
inc
aas
mov
repnz
xlat
xor
fsubr
in
sub
cld
lds
cld
ds
inc
or
loope
mov
(bad)
sub
cs
fst
mov
scas
mov
or
out
outs
ins
inc
shl
lea
nop
jecxz
pop
cwde
out
fild
xor
jg
pop
aam
sub
add
xor
push
or
xchg
mov
jl
mov
mov
cmp
int3
jecxz
adc
sub
adc
pop
jecxz
xchg
repnz
adc
in
jns
pop
dec
pop
fisub
lock
dec
rol
out
push
dec
or
and
aaa
retf
mov
les
pop
sub
xchg
aad
loope
pop
fs
pop
aad
jg
cdq
leave
sbb
xchg
mov
test
adc
adc
mov
jg
jmp
cmp
sub
pop
mov
xchg
mov
aaa
and
fnstsw
jmp
scas
mov
jle
(bad)
scas
mov
into
inc
and
(bad)
and
loopne
movs
mov
jl
xor
jo
lock
push
neg
sti
adc
cmp
jbe
(bad)
popf
push
ret
fsubr
pop
xor
mov
and
jne
push
or
sar
repz
and
mov
push
stos
test
push
xchg
retf
retf
in
inc
and
mov
jg
lods
bound
fdiv
(bad)
nop
lods
mov
dec
add
sbb
sub
push
inc
std
dec
mov
dec
daa
sbb
imul
sbb
dec
jns
cmp
das
mov
inc
and
push
dec
aas
adc
inc
pop
pop
outs
adc
xchg
sbb
call
jno
or
inc
js
shl
loope
add
inc
cli
test
aad
jmp
sub
cmp
test
dec
cmp
push
mov
mov
sbb
lock
lahf
mov
arpl
jae
mov
es
fsubr
sbb
mov
mov
sbb
add
adc
cmp
push
mov
xchg
mov
jns
test
sti
jge
ror
xor
jae
out
inc
ret
dec
not
fidiv
cwde
and
stc
adc
add
add
and
xchg
xor
adc
daa
mov
sbb
jnp
sub
adc
mov
mov
out
xchg
and
bound
and
scas
aas
or
xor
add
scas
mov
inc
in
mov
jp
pop
test
icebp
sbb
(bad)
mov
popa
cmp
and
jg
cs
xor
mov
mov
cmp
xchg
idiv
fsub
cli
jbe
push
xchg
aad
push
or
dec
nop
dec
and
faddp
lods
pusha
das
jle
jle
and
pop
fadd
jne
mov
mov
movs
repnz
or
ss
sahf
or
out
xor
sti
add
adc
inc
call
or
and
jp
ins
xor
fmul
movs
push
dec
fsubr
(bad)
iret
mov
jmp
sbb
rcr
rol
jbe
or
addr16
call
and
in
push
dec
xor
hlt
ja
cmp
nop
xor
adc
nop
inc
or
clc
cli
push
rol
sbb
or
jmp
movs
in
or
mov
add
loopne
sub
jl
xchg
mov
push
cmp
jne
dec
lods
call
adc
dec
ret
movs
retf
cmc
mov
ds
adc
jno
sub
xor
mov
adc
mov
dec
mov
cmp
and
loopne
fidivr
mov
cmp
jmp
fs
push
pslld
js
sbb
es
xlat
mov
dec
or
push
mov
cld
out
ins
mov
je
mov
pop
adc
aaa
mov
outs
aam
jbe
fistp
dec
pushf
mov
inc
fimul
push
cmp
xchg
out
les
rdpmc
mov
mov
xor
mov
and
cmc
icebp
in
jo
cmps
imul
adc
adc
and
lock
push
loopne
pop
sbb
dec
in
mov
inc
jb
ins
aad
fsubp
adc
loopne
fild
lds
inc
loope
pushf
add
mov
add
jle
ror
push
ftst
mov
sbb
adc
stos
sahf
mov
push
ins
or
xchg
cli
sahf
add
test
xchg
xchg
mov
mov
sbb
mov
inc
push
sbb
pop
cmps
stc
ficom
jb
stos
jnp
push
cs
aad
xor
out
push
cmp
cli
(bad)
and
push
movs
or
xchg
in
retf
xor
push
lea
dec
mov
adc
jecxz
or
adc
sub
and
pop
xchg
mov
rcl
pop
cmps
(bad)
aam
dec
inc
mov
cmps
cmp
and
call
push
mov
out
shl
pop
xchg
shl
sbb
mov
add
dec
orps
mov
push
pop
sbb
pop
and
ret
dec
stos
js
das
pop
sub
imul
in
cmp
into
cmp
inc
mov
sar
ja
popa
mul
cmps
inc
fiadd
aad
ja
jns
lods
leave
pop
mov
cs
mul
add
leave
clc
cmps
retf
aaa
xor
push
push
in
adc
push
(bad)
ror
sub
mov
sub
test
mov
jo
and
(bad)
lock
and
loopne
movq
xchg
inc
xchg
inc
pusha
popa
cs
cs
adc
je
fbld
lods
sbb
fmul
jecxz
test
movs
(bad)
adc
push
ds
pop
in
pop
rcr
cs
push
mov
push
mov
and
adc
shr
jo
cmp
fnstcw
xchg
jl
icebp
jnp
das
push
mov
outs
cmps
mov
and
xor
ins
add
inc
adc
cmp
jae
mov
jmp
mov
mov
add
jb
lds
retf
xchg
jne
push
xchg
fnstcw
jmp
push
ror
and
jmp
fist
and
ret
shl
int
movs
mov
push
clc
(bad)
push
mov
mov
dec
aas
dec
mov
aas
pop
out
push
jl
xchg
jb
xchg
fist
sar
and
mov
leave
scas
adc
call
or
cs
pop
dec
adc
dec
scas
pushf
inc
xchg
(bad)
(bad)
adc
xor
pushf
cmp
and
pop
and
lock
jg
fs
ror
sbb
dec
jne
mov
inc
inc
xchg
clc
call
ss
(bad)
mov
adc
in
lds
outs
mov
sub
(bad)
(bad)
fstp
inc
sbb
mov
xor
mov
push
cmp
inc
jo
mov
stos
mov
lds
xor
adc
sbb
(bad)
out
lock
xor
inc
jecxz
inc
adc
aas
fst
adc
(bad)
fadd
stos
cmps
out
call
sub
mov
xchg
cli
xlat
gs
mov
pop
sbb
cmp
outs
push
inc
push
mov
in
add
clc
xor
shl
sub
push
sbb
inc
adc
ret
jp
mov
ss
push
pavgw
cld
ds
sub
mov
xchg
test
jnp
sub
push
dec
std
stos
dec
pushf
dec
mov
test
push
imul
(bad)
fld
not
jo
jno
xchg
or
add
aas
or
lods
lahf
pop
(bad)
adc
fucomi
xchg
loop
sub
dec
add
xlat
mov
cwde
push
mov
cmp
int3
mov
xor
sbb
ss
pop
or
mov
shr
rcl
mov
(bad)
push
std
rol
fcom
xchg
sbb
push
loope
sti
push
push
cmc
pop
js
ds
or
sar
push
and
cli
sbb
out
fsubrp
adc
hlt
fwait
loope
adc
or
scas
cdq
dec
xor
nop
popf
cmp
pop
lea
cmp
ins
sub
lahf
mov
pop
lahf
(bad)
pop
loopne
xor
outs
dec
xlat
shr
outs
imul
lds
mov
in
pop
shl
shl
sti
pop
mov
mov
mov
loop
aaa
mov
(bad)
pcmpgtw
ins
test
fist
cmp
stc
jb
and
mov
jle
sahf
jmp
bound
mov
xor
or
pop
mov
push
mov
dec
sbb
cwde
or
aad
dec
sbb
xlat
ins
movs
sub
cmp
test
push
lods
and
sbb
push
jmp
jo
test
movs
sub
inc
daa
sub
ins
fist
xor
imul
and
cmp
test
jmp
mov
movaps
mov
in
or
mov
jmp
cwde
mov
lods
(bad)
push
dec
or
sub
and
inc
push
jp
jge
sub
xor
cmp
push
aaa
or
popf
fcomp
jb
ins
inc
mov
outs
xor
not
imul
outs
and
(bad)
stos
jnp
jb
cmps
ret
sar
push
mov
mov
inc
das
pop
push
and
jmp
mov
cs
movs
lds
repnz
mov
pop
jle
sbb
cmp
cmps
sahf
dec
out
inc
call
sbb
pop
dec
dec
mov
cdq
jns
push
in
dec
sbb
lds
xor
mov
pop
xchg
push
data16
leave
rcl
inc
xor
add
inc
inc
xor
outs
ror
lods
mov
add
xchg
jno
sbb
xor
push
inc
or
adc
xor
push
mov
push
leave
mov
shl
es
lock
sbb
push
aam
push
ds
and
or
sub
movs
adc
or
nop
ja
out
out
push
cmp
mov
sbb
push
mov
(bad)
mov
xchg
into
aam
(bad)
movs
dec
js
iret
sbb
mov
mov
ror
sbb
or
xchg
xchg
pop
out
push
add
popf
sub
(bad)
scas
hlt
out
pop
jb
(bad)
shl
xor
leave
jne
inc
xchg
add
lock
(bad)
and
ficom
or
ret
or
outs
(bad)
shl
and
sbb
and
jne
jbe
mov
out
cmp
call
mov
mov
mov
int
ficomp
push
js
popf
and
pop
aad
inc
pop
jecxz
and
push
inc
lds
sub
hlt
pusha
sbb
xchg
xor
ret
pop
pop
cmp
pop
sub
inc
rol
jmp
sub
fisub
jne
sbb
dec
mov
sbb
xor
loope
mov
mov
aaa
out
and
das
movs
or
dec
dec
cwde
and
jecxz
xchg
daa
fcom
lods
jg
cmp
sub
(bad)
inc
adc
aad
enter
(bad)
outs
int3
in
push
lock
fadd
mov
(bad)
mov
dec
pushf
mov
loop
bound
sti
or
aad
adc
icebp
movs
(bad)
ins
mul
(bad)
jb
sub
sbb
scas
push
jns
sub
pusha
mov
mov
sbb
fwait
lds
enter
and
mov
int
sbb
mov
outs
imul
sahf
fisub
xchg
pop
scas
sub
(bad)
xchg
fnstsw
cmp
adc
add
push
mov
shl
ret
in
sar
std
out
jle
neg
movs
inc
mov
xchg
bound
imul
xor
fisubr
cwde
nop
cmc
inc
mov
push
mov
imul
dec
jo
pusha
movs
cmp
sbb
repz
icebp
cmp
xchg
fidiv
mov
out
jne
out
aam
stos
lock
xor
mov
(bad)
fisttp
nop
cwde
leave
das
add
int
inc
div
mov
mov
femms
clc
xor
pop
leave
inc
mov
pop
cwde
cmp
push
dec
cld
or
gs
pop
sahf
mov
and
cmp
ins
dec
add
(bad)
and
fsubr
mov
and
mov
sub
mov
lods
(bad)
fld
clc
push
js
iret
data16
ins
retf
out
xchg
in
mov
xchg
xchg
data16
push
addr16
cld
jmp
aam
adc
mov
jbe
ja
popa
xchg
cmps
xchg
mov
inc
dec
jno
rol
xchg
and
xchg
push
scas
ret
pop
adc
ret
jnp
push
fistp
mov
imul
mov
dec
sub
icebp
lock
jne
repnz
jl
(bad)
fucomip
(bad)
mov
and
and
ja
cmp
mov
and
int3
(bad)
pusha
lods
mov
jp
in
lea
mov
movs
cmp
rcr
lods
jb
mov
(bad)
xchg
out
stc
dec
scas
je
test
lods
cmp
ja
push
js
mov
(bad)
sbb
cli
pop
jb
cdq
icebp
icebp
lea
clc
iret
or
or
ja
xor
pop
retf
popf
test
or
call
add
loopne
xor
push
lods
push
std
pop
push
in
mov
aad
pop
xchg
add
jmp
aaa
mov
dec
lock
jp
mov
mov
mov
arpl
inc
mov
push
in
cs
aas
inc
xor
add
stos
or
sar
xor
xchg
mov
stos
cmps
rcr
mov
xchg
stos
pushf
jmp
dec
cmp
lds
push
into
mov
jmp
mov
cmp
iret
repz
mov
(bad)
cs
sub
mov
pop
fwait
xlat
jge
pop
push
test
or
test
and
test
jg
sub
dec
cmp
ret
lods
ds
hlt
xchg
fnstcw
stos
cmp
sbb
or
and
add
mov
mov
pop
lea
pop
and
cmp
sbb
jmp
mov
(bad)
out
sti
sub
adc
rol
adc
dec
xchg
hlt
icebp
or
ret
dec
and
mov
xchg
out
sbb
sti
shl
(bad)
jmp
xor
fwait
xor
out
dec
pop
stos
and
cmp
push
xor
ror
shl
lahf
movs
and
pop
fsub
mov
cmp
mov
pop
jb
pusha
inc
inc
xor
sar
sub
mov
sbb
inc
fwait
or
mov
push
pop
rcl
sub
push
aaa
and
mov
adc
fnstsw
clc
mov
mov
shl
add
xor
pop
push
cmps
mov
push
(bad)
stos
jns
stos
fild
cmp
pop
push
repnz
pop
fcomp
xor
popa
lds
je
jns
lds
cmp
int
adc
enter
dec
jmp
cmps
jne
mov
daa
outs
mov
repnz
adc
sbb
cmp
or
pop
adc
retf
outs
push
mov
nop
mov
out
xchg
fcom
sub
jnp
sahf
cmp
mov
and
fisttp
js
pop
shl
in
cmps
xor
lahf
(bad)
or
fldcw
xchg
sub
jb
rol
add
leave
add
inc
into
xchg
xchg
and
fld
jmp
mov
xchg
and
call
sub
cmp
(bad)
jbe
fcomp
and
dec
or
aaa
bound
sbb
clc
rol
fcmovu
pop
mov
xor
fstp
ds
popa
and
xor
cmc
inc
xor
mov
pusha
mov
sbb
rcl
sbb
(bad)
test
shl
cdq
mov
cli
rsqrtps
pushf
push
mov
aaa
push
mov
sub
adc
push
dec
or
mov
xor
dec
addr16
cdq
mov
push
dec
dec
push
jne
repnz
ret
ins
dec
mov
mov
adc
push
cli
fs
fwait
lods
inc
sbb
stos
push
scas
push
cs
ja
retf
or
adc
push
daa
aam
xchg
out
cbw
(bad)
and
mov
mov
or
jmp
xchg
mov
sub
cwde
arpl
jae
ds
in
cmp
pop
xor
ins
stos
mov
push
repz
lds
out
inc
mov
pop
sbb
xchg
sub
scas
mov
and
xor
cld
(bad)
and
inc
jbe
jle
in
loopne
push
cmp
lahf
and
mov
arpl
jp
int
push
mov
stc
call
and
es
jbe
outs
dec
mov
lods
dec
in
mov
adc
ja
test
loope
sub
mov
pop
adc
pop
out
sar
push
or
and
(bad)
add
les
pop
sbb
cmp
cli
pop
(bad)
imul
cmp
aad
dec
adc
dec
dec
lds
inc
jg
xchg
mov
sub
in
int3
daa
adc
or
mov
retf
mov
dec
(bad)
lahf
push
pop
mov
and
fistp
js
sbb
sbb
cli
mov
dec
ins
out
jl
adc
shl
mov
lds
pop
js
(bad)
imul
rcl
cmp
aaa
add
xlat
push
aas
imul
aaa
or
loopne
data16
pusha
inc
add
mov
ja
lods
sbb
push
xor
test
mov
mov
push
in
jl
pushf
mov
add
in
mov
retf
out
aam
adc
adc
add
jne
mov
test
push
mov
push
ret
gs
xchg
movs
pop
xchg
and
aad
or
inc
out
das
pop
adc
adc
fwait
dec
repnz
(bad)
data16
out
mov
inc
push
dec
imul
std
aaa
inc
rcr
iret
adc
ds
jmp
inc
mov
add
scas
mov
inc
jge
add
cmp
sahf
xchg
ret
mov
inc
jmp
jp
lea
popa
cmp
mov
and
sbb
mov
or
lds
cwde
jo
xchg
mov
jno
jecxz
cmc
push
pusha
std
pop
and
push
lods
xchg
out
add
rol
push
or
mov
sbb
fucomi
ds
iret
bound
add
push
and
add
(bad)
iret
cmps
or
stc
add
cwde
dec
cmc
inc
sbb
add
jnp
xor
scas
xchg
inc
fnstcw
call
or
jno
repnz
xchg
sbb
cmp
xchg
mov
cs
lock
push
jmp
xchg
adc
pop
clc
int3
sbb
sti
(bad)
loope
nop
ror
lods
mov
xor
dec
mov
sub
push
arpl
mov
xchg
call
cmps
lahf
fwait
(bad)
movs
inc
std
sub
ins
mov
add
push
sbb
retf
sbb
jne
jae
dec
sti
out
out
sbb
or
cmp
pop
iret
pop
mov
mov
scas
jns
nop
ja
xor
jbe
fwait
cmc
fstp
stc
mov
xchg
(bad)
pop
xchg
and
push
sar
cli
mov
les
fld
hlt
sbb
fwait
push
mov
or
xchg
add
and
stos
xor
or
cmps
in
dec
imul
or
out
std
fstp
outs
dec
fistp
dec
not
mov
not
mov
adc
test
mov
jecxz
xor
adc
cwde
jmp
pop
and
cmp
mov
mov
cld
icebp
pop
js
mov
xor
test
daa
jge
aaa
ds
or
jns
inc
lahf
sbb
jb
inc
fcomp
sbb
shl
sbb
(bad)
aas
mov
push
jmp
inc
fcom
jne
movs
cmp
mov
mov
and
pop
lds
es
push
enter
popa
cmp
mov
cmp
outs
and
jge
mov
pop
xchg
in
int3
lea
xchg
pop
icebp
cmps
sub
outs
scas
sbb
xchg
xor
int3
xchg
mov
mov
push
sbb
out
or
mov
pop
out
jmp
jne
pop
rep
sub
jnp
mov
pop
pop
neg
mov
test
ret
or
stos
in
out
pop
hlt
inc
mov
cmp
in
fstp
push
data16
xchg
fcmove
adc
push
and
inc
jecxz
sub
test
xor
aad
mov
movs
xchg
xchg
retf
in
mov
sbb
push
in
aam
int3
neg
test
imul
jl
arpl
test
inc
stc
sub
jmp
add
outs
scas
(bad)
or
shr
mov
push
inc
stos
ret
imul
mov
inc
sbb
xchg
(bad)
test
jecxz
pop
mov
test
dec
push
stos
aam
repnz
sahf
jns
dec
repnz
daa
fld
loop
ret
int
mov
jmp
adc
rcl
jg
into
(bad)
aam
popf
dec
out
shl
sbb
test
cmps
push
pop
sbb
adc
cmp
popf
cdq
iret
cmps
shl
sbb
mov
add
mov
xor
cmp
dec
call
and
shl
xchg
push
sti
sbb
xchg
sbb
sbb
in
or
sbb
cmc
ds
lds
loop
jo
pop
mov
adc
adc
popa
mov
mov
push
les
add
bound
add
push
mov
and
xchg
sbb
lock
add
add
or
repz
out
and
ret
mov
inc
lods
cli
xor
mov
cmp
jmp
xchg
stos
loope
fbstp
inc
daa
out
aaa
ins
clc
push
dec
jno
jp
(bad)
daa
(bad)
mov
xchg
repnz
add
aad
in
cmps
pop
adc
lods
push
in
mov
aad
xchg
mov
cmp
das
lods
ret
ror
div
jnp
loop
mov
add
and
xor
into
mov
inc
lods
push
jbe
ret
je
jp
push
jo
cld
sub
pop
retf
sbb
lock
adc
xchg
cmps
daa
jmp
mov
movs
sti
ss
xor
mov
scas
shl
pushf
mov
daa
xchg
jmp
adc
pushf
jb
sbb
fnsave
fadd
sbb
lahf
repnz
in
xor
fisttp
pop
mov
test
in
add
push
mov
mov
popa
cmps
push
es
fild
repnz
int3
les
popa
int3
cmp
push
loope
iret
rcpps
push
cmp
loop
mov
inc
sub
pop
(bad)
adc
test
xor
gs
jno
add
xor
mov
imul
mov
(bad)
add
fldenv
lods
and
dec
pushf
xchg
cmp
mov
jmp
shr
or
(bad)
adc
adc
aaa
iret
fsubr
adc
lds
loope
pop
or
mul
and
ret
push
jbe
sub
aaa
pop
sub
fldenv
retf
xchg
xchg
xchg
dec
pop
xchg
fimul
mov
xor
cmps
jge
arpl
mov
test
push
enter
add
pop
loopne
xchg
mov
cmps
sub
add
(bad)
fstp
mov
pop
or
push
retf
(bad)
adc
imul
xor
xchg
fwait
mov
ror
inc
mov
and
loope
into
add
push
cmp
and
stc
lods
pop
shr
jns
xor
in
mov
fidiv
out
push
int3
xchg
xor
push
std
pop
repz
push
test
bound
and
clc
mov
add
int3
aam
mov
sti
dec
cmp
test
jb
hlt
push
fdivp
repz
cld
inc
test
jno
jno
sbb
and
fdivr
fcom
retf
scas
pop
add
add
jno
jecxz
dec
into
cwde
ja
loope
scas
not
scas
sub
jge
in
jnp
popa
dec
(bad)
ds
dec
int3
dec
stos
cmp
pop
(bad)
push
fidiv
inc
xlat
mov
pop
jb
int
xchg
scas
fcompp
ss
mov
iret
pmuludq
aam
cmc
cmp
cmp
ret
push
cmp
imul
dec
or
dec
mov
or
mov
jno
jmp
popa
(bad)
mov
test
cld
into
inc
popf
mov
into
xor
mov
scas
pop
cmc
enter
adc
nop
push
ret
mov
leave
aas
or
pusha
nop
int
jo
into
dec
imul
and
xor
xchg
aas
push
cmps
ins
xchg
adc
and
retf
mov
jae
pop
adc
arpl
int
cmp
pop
rcr
cmps
dec
inc
ins
xchg
call
mov
xor
xor
xchg
(bad)
add
pop
out
fdivr
cmp
mov
inc
and
call
lahf
fisub
cwde
sahf
icebp
xor
sar
push
in
xchg
js
dec
mov
ret
or
adc
push
sbb
inc
scas
std
pop
stos
arpl
in
mov
icebp
sbb
pop
imul
sbb
push
push
stc
sahf
or
ret
ins
cmp
pop
add
jl
adc
push
shl
push
das
stos
xchg
pop
dec
inc
dec
or
ror
xchg
cmp
or
icebp
lods
iret
mov
dec
sar
cmp
aam
dec
push
pop
inc
cmp
nop
bound
call
and
call
add
sub
lods
sub
pop
or
jp
(bad)
jo
dec
dec
dec
lds
(bad)
out
cmp
outs
repnz
and
pop
jb
adc
mov
loope
das
(bad)
js
pushf
cwde
inc
sti
xor
aad
jecxz
addr16
jl
popa
dec
sar
push
and
inc
retf
push
aam
out
sub
push
jle
push
cwde
jae
add
rcl
cmps
fwait
rol
outs
stos
fiadd
arpl
or
xor
xor
adc
or
inc
(bad)
je
sub
lds
jne
sub
mov
popf
int
ret
and
pop
jle
fisub
je
imul
sbb
jmp
adc
hlt
jo
cmp
xchg
scas
jl
int3
cmp
add
xchg
jns
ins
retf
cmp
and
push
std
dec
mov
(bad)
cld
mov
adc
xchg
push
xlat
mov
fisub
mov
pop
cmps
gs
or
out
mov
sub
cwde
sti
(bad)
iret
leave
mov
lods
lds
fldcw
inc
test
movs
jnp
add
mov
pop
adc
sub
bound
xor
inc
call
std
test
mov
sbb
in
mov
scas
push
mov
xchg
aaa
cmp
push
in
xlat
ja
outs
scas
sbb
stos
out
hlt
sar
je
stc
nop
mov
test
mov
mov
das
retfw
push
cmp
movs
mov
(bad)
daa
or
les
lea
mov
dec
pop
cmp
std
sbb
fcmovne
push
das
fist
or
les
or
xlat
nop
sub
jg
and
leave
sub
jge
pop
inc
pop
xor
sbb
jl
repnz
pop
mov
add
push
out
add
inc
sahf
jg
imul
(bad)
mov
xchg
add
and
retf
(bad)
fisub
pop
loope
fs
(bad)
aad
cmp
sti
pop
repnz
jno
cmps
out
fidivr
cs
jmp
pop
(bad)
mov
adc
add
mov
pusha
xchg
cwde
push
dec
fsub
cmp
bound
jge
cmp
xor
xchg
jb
test
hlt
fldenv
movs
movs
adc
xchg
js
xlat
xor
aad
xor
test
cs
inc
call
dec
push
bound
inc
loopne
cmp
cmp
cmp
xor
mov
add
out
(bad)
push
loop
out
shl
cwde
mov
in
inc
or
test
push
sub
xor
mov
pop
inc
cld
inc
out
fcomp
popf
adc
pop
mov
add
sbb
call
inc
lds
pop
xlat
add
or
mov
push
shl
into
push
mov
and
aaa
cmp
pop
in
shl
icebp
jecxz
int3
jl
aaa
lock
sub
xchg
test
ror
mov
out
pop
mov
or
(bad)
je
pop
lds
sub
stc
aad
fimul
test
push
cdq
push
lods
div
aas
push
loope
outs
push
in
inc
dec
shl
repnz
xchg
inc
push
sti
mov
cmp
in
mov
mov
xor
mov
jae
cmc
sub
mul
pop
inc
xchg
sub
sub
lahf
ds
push
out
ins
lea
push
sbb
push
adc
cli
mov
loop
cli
add
fild
iret
lock
push
inc
cmp
and
ja
cmps
xor
repz
clc
lds
mov
push
fnstcw
lock
cmp
inc
sti
jge
inc
cmc
push
pop
aas
mov
stos
jb
xchg
jb
inc
cmp
xor
addr16
sub
dec
(bad)
push
adc
jno
aas
test
mov
sti
or
inc
pop
pop
jne
jl
sub
gs
aas
xor
(bad)
jnp
push
dec
or
jp
cdq
push
pushf
ja
int3
sub
sub
jp
cmp
imul
mov
(bad)
cmps
push
mov
addr16
ret
push
jb
sbb
in
inc
and
adc
pop
xor
pop
retf
push
mov
mov
adc
(bad)
pop
adc
les
mov
and
lods
pop
and
xor
xchg
push
movs
test
outs
movs
pushf
fs
int3
jns
nop
adc
cwde
inc
inc
cmps
fs
in
pop
jg
add
mov
pop
(bad)
fisttp
and
jmp
jecxz
in
cmp
sub
mov
add
push
or
mov
sbb
daa
ja
and
mov
sub
lods
mov
into
popf
xlat
rcr
xor
popf
mov
xchg
jmp
outs
pop
and
int
stc
addr16
sbb
jecxz
jecxz
pop
pop
out
call
jmp
or
je
outs
mov
push
mov
repnz
xor
xchg
into
out
scas
repnz
pop
sbb
fwait
inc
adc
dec
jne
popf
push
sbb
ret
in
loopne
jae
pop
dec
xchg
lods
loopne
dec
jg
or
outs
or
test
xchg
cs
add
(bad)
shr
add
and
xor
popa
xor
push
and
mov
icebp
jmp
sbb
push
call
movs
mov
(bad)
jle
push
pop
jno
add
mov
cmps
xchg
out
sub
stos
ficom
pop
push
jl
test
inc
jecxz
iret
(bad)
cmc
out
std
jne
mov
adc
dec
or
int3
fucomip
scas
fcmovb
out
sbb
jb
xchg
imul
cmp
or
mov
and
inc
pop
retf
inc
loope
(bad)
fcomip
add
push
mov
iret
sbb
lds
(bad)
or
leave
scas
mov
cld
sub
cmc
mov
or
jp
iret
inc
cmp
xchg
fs
mov
mov
xor
out
mov
pop
cmp
mov
mov
clc
add
stos
xchg
sub
out
rcl
mov
dec
and
and
sbb
fmul
sub
adc
push
ins
dec
inc
mov
adc
pop
dec
xor
sub
in
fild
cmp
cmp
adc
and
xchg
cmps
xchg
mov
sub
in
pop
div
mov
in
jl
or
out
loop
push
movs
js
and
cmp
fnsave
adc
ja
hlt
test
cmc
pop
pop
sub
daa
mov
dec
inc
ins
mov
fiadd
and
rcl
aaa
and
mov
sar
mov
add
xor
add
xchg
repnz
les
push
loope
lahf
test
iret
gs
dec
outs
inc
add
paddq
push
scas
test
inc
mov
pushf
test
lock
and
es
dec
sub
cmp
cmp
(bad)
or
pushf
mov
bound
mov
pop
daa
add
inc
mov
stc
xchg
mov
mov
imul
out
cmp
sbb
clc
fs
add
pop
(bad)
push
int
shl
xchg
sar
(bad)
inc
jge
sub
bnd
ins
sti
jmp
or
jp
mov
stos
lea
fisttp
mov
sub
addr16
shl
jns
jg
les
push
dec
jmp
dec
lea
popf
and
(bad)
aam
adc
mov
cmp
sbb
add
js
cmp
dec
inc
call
inc
pop
add
xchg
nop
cs
jg
mov
dec
daa
aad
and
std
stos
mov
pop
ins
inc
in
jae
dec
pop
xchg
and
push
push
or
cmc
xlat
mov
jmp
mov
std
xchg
and
gs
jns
movs
call
movs
or
sahf
push
mov
dec
ins
mov
xor
cwde
test
push
stc
jns
(bad)
scas
aad
push
cmps
xor
pop
test
repnz
cmps
cmps
inc
mov
pushf
mov
cwde
mov
mov
fidivr
mov
aad
pushw
pop
jg
adc
adc
jecxz
repz
add
sub
sub
push
repnz
xchg
ins
retf
mov
xchg
in
cmps
inc
xchg
push
push
outs
pop
xchg
mov
aam
adc
movs
dec
cld
div
popa
cwde
mov
repnz
push
pop
or
xchg
ja
or
(bad)
rcl
dec
add
sbb
mov
lea
and
aaa
push
push
jge
xor
fwait
lea
iret
test
add
mov
mov
retf
out
fdivr
daa
call
pusha
fcom
int
arpl
(bad)
mov
addr16
fsubp
mov
dec
call
or
cmp
test
xchg
adc
gs
xor
push
shr
jo
mov
out
(bad)
rcr
sub
dec
mov
dec
and
out
inc
dec
popa
dec
xor
lea
aad
jno
pusha
jmp
xor
push
mov
bound
jmp
popf
and
pop
sub
rep
inc
fimul
and
sbb
repnz
mov
cmp
inc
dec
inc
cmp
es
add
fmul
stc
mov
int
mov
ds
push
outs
jge
pop
pop
das
xor
popf
sbb
push
hlt
pop
xchg
mov
cdq
sbb
push
xor
add
pushf
mov
pop
outs
stc
cmp
add
push
adc
retf
repnz
mov
add
daa
mov
xchg
sub
test
mov
jle
push
pop
data16
jae
pop
mov
inc
loop
jg
push
repnz
aas
je
xor
push
lea
mul
xor
repz
inc
in
dec
jg
jmp
les
xlat
mov
pop
inc
sbb
and
scas
and
daa
cmp
xchg
dec
cmp
pop
out
out
pop
dec
stos
push
aas
aas
and
imul
daa
in
les
or
sbb
and
jl
cld
sbb
repz
clc
fst
sahf
pushf
push
push
sahf
dec
shl
outs
pop
add
int
adc
mov
sbb
stos
loopne
inc
add
jmp
mov
or
sub
or
(bad)
jp
cli
pop
shr
stos
adc
lods
cmps
test
(bad)
iret
fimul
lods
loop
sti
ss
mov
sub
scas
push
shr
data16
push
xor
adc
pushf
mov
call
jl
jmp
jnp
in
or
sbb
into
and
xchg
ss
movs
jg
enter
pop
adc
and
add
or
shl
mov
frstor
push
mul
push
mov
cmp
xchg
arpl
pand
fcmovbe
xchg
not
and
sub
jae
ficom
aad
(bad)
sbb
cs
push
stc
gs
or
scas
int3
movs
out
movs
out
xchg
inc
sub
mov
jo
mov
and
cdq
pop
add
cmp
je
xor
mov
addr16
mov
out
jmp
push
clc
lock
(bad)
fs
iret
sbb
mov
enter
xor
mov
cmps
iret
add
sub
outs
paddusw
xchg
test
pusha
jge
mov
mov
stos
jg
aaa
inc
mov
aas
ds
sbb
inc
add
or
push
xchg
pop
cmp
movs
mov
dec
mov
icebp
pop
cmp
mov
arpl
mov
fs
mov
jl
mov
sbb
inc
add
jno
xor
stos
pop
pop
jno
and
or
push
shr
sahf
imul
scas
inc
fcmovne
fnstsw
jbe
cmc
ret
(bad)
push
pop
das
pop
sub
adc
mov
les
pop
mov
imul
inc
and
push
dec
and
dec
mov
movs
push
inc
push
or
stos
add
test
sub
pop
xchg
enter
push
push
mov
aaa
daa
data16
ret
sbb
std
fidivr
push
push
out
jle
or
cli
sti
ficom
shr
mov
ja
cmps
sub
pop
jnp
xor
sbb
push
fwait
pop
pushf
fwait
sub
stos
out
xor
cmp
or
scas
jmp
ss
pop
sbb
sub
jle
or
ss
ins
(bad)
or
mov
ja
or
xor
ret
inc
popf
push
xor
pushf
and
ja
dec
sbb
push
jb
outs
sbb
xor
inc
out
dec
retf
iret
adc
test
add
cmp
mov
loop
and
inc
mov
mov
mov
mov
outs
lods
lds
sub
and
(bad)
xor
(bad)
dec
xchg
or
imul
int
call
cmp
shl
(bad)
enter
adc
add
mov
addr16
xchg
add
and
mov
in
in
sub
loop
and
push
jmp
cmovg
(bad)
fucomip
stos
mov
and
cdq
cmp
push
xchg
loop
add
mov
aas
addr16
out
div
scas
hlt
jno
ins
add
gs
ds
xor
mov
pop
push
add
enter
adc
int
test
(bad)
mov
(bad)
mov
outs
jno
mov
mov
xor
(bad)
mov
mov
pop
and
xor
sub
call
xchg
outs
xchg
inc
ins
push
lahf
and
and
mov
push
mov
fs
pop
(bad)
cwde
sbb
cmp
adc
adc
aas
lods
jecxz
mov
fwait
sbb
and
dec
xchg
test
pop
lock
sbb
arpl
aad
fnsave
imul
jne
test
xchg
popa
mov
jecxz
adc
mov
mov
les
lahf
xchg
aad
push
add
cmp
xchg
mov
xor
outs
jno
inc
cmp
fadd
jle
add
sub
mov
cdq
and
pop
adc
mov
push
mov
rcr
shr
adc
mov
cwde
push
mov
mov
pop
ret
add
xchg
xchg
xor
shl
div
mov
mov
cli
sub
jp
test
pushf
ins
xlat
adc
xor
jbe
test
xor
cmp
dec
adc
fisttp
and
and
arpl
cmps
call
mov
pop
scas
and
pop
(bad)
in
adc
in
jo
cld
lahf
dec
xchg
std
xor
cmp
jbe
xor
or
jl
and
mov
sbb
lea
xchg
sbb
sub
test
push
push
mov
mov
mov
ret
repz
in
jbe
lock
retf
test
pop
push
out
pop
xchg
sbb
int
into
cmp
ror
jne
sub
ror
xor
enter
imul
dec
arpl
sbb
mov
pop
jo
sbb
cmp
pop
outs
xlat
out
jecxz
or
xchg
or
xchg
xchg
dec
mov
pushf
push
fist
sbb
pop
sub
std
xchg
xor
movs
test
adc
add
test
leave
cmp
(bad)
in
repz
clc
retf
mov
mov
aaa
shr
iret
xchg
push
arpl
inc
cmp
push
sbb
xor
xchg
jbe
(bad)
adc
enter
mov
inc
hlt
cmp
dec
dec
test
lds
fldenv
xchg
cmp
inc
pop
ins
pop
in
mov
std
clc
stos
movs
sbb
popa
enter
lahf
or
fisub
repz
pop
add
cwde
retf
dec
stc
movs
mov
adc
push
dec
dec
call
stos
out
jb
add
mov
icebp
cmp
daa
sbb
popf
xlat
push
leave
cdq
mov
dec
inc
fs
dec
movs
inc
sub
pop
pop
push
sbb
mov
sahf
sbb
gs
add
push
xor
pop
outs
das
scas
neg
mov
mov
ss
aaa
repz
aad
xor
loopne
cmp
mov
mov
sbb
jno
mov
(bad)
pop
arpl
and
xor
xor
jne
mov
in
popf
and
mov
mov
push
push
shl
call
rol
jo
push
iret
dec
and
ds
mov
sub
pop
ror
cmc
jno
inc
ins
cdq
js
and
adc
shl
icebp
jae
mov
mov
outs
iret
aam
imul
fsubr
(bad)
cdq
pop
jno
aas
inc
call
sbb
push
lods
mov
sub
cwde
mov
inc
mov
sub
ja
mov
push
arpl
pop
pop
shl
ins
mov
xor
sub
stos
in
(bad)
inc
mov
adc
mov
xchg
lahf
xor
push
ret
sbb
pusha
imul
sbb
aas
sub
adc
and
inc
in
es
adc
lock
fsub
xor
lods
push
pop
sub
popf
call
fmul
sub
pushf
pop
repnz
push
mov
dec
mov
imul
adc
or
adc
rol
pop
outs
cmp
sub
jmp
imul
push
neg
adc
push
sahf
mov
lods
push
mov
(bad)
(bad)
push
hlt
icebp
enter
and
sbb
xor
sub
xor
dec
imul
daa
pop
and
aad
jmp
jge
mov
sbb
xchg
dec
repz
cld
or
or
dec
pop
ja
push
push
stc
lods
retf
test
mov
push
or
xchg
mov
mov
mov
scas
jl
sti
(bad)
push
arpl
js
imul
rol
add
ds
fnstsw
and
ror
sub
fdiv
mov
test
in
test
daa
xchg
xchg
(bad)
mov
pop
add
ficomp
daa
mov
cld
pop
mov
cmps
data16
fsub
in
add
mov
dec
jno
sbb
jo
repz
cmp
pusha
and
dec
pushf
pop
xor
xchg
mov
cmps
xchg
xchg
mov
and
pop
stos
inc
mov
dec
jp
mov
clc
push
loope
in
ffreep
in
mov
mov
add
out
sub
fwait
xor
ins
push
jo
xor
lods
ins
xor
shl
jecxz
das
lea
movs
jl
pop
cmc
pop
and
mov
inc
xor
aam
arpl
or
retf
cmp
fcmove
xor
push
movs
jmp
les
jae
jge
hlt
push
xchg
dec
mov
add
cli
jbe
inc
dec
test
fsubr
mov
push
dec
fucomp
jno
or
pop
push
and
cmps
in
scas
dec
sahf
jmp
into
and
add
add
jl
sbb
sbb
push
ficomp
push
pop
inc
jno
dec
jne
inc
dec
(bad)
cli
paddsw
jl
pushf
sbb
leave
cdq
(bad)
pusha
cmp
sub
xor
ja
sahf
out
or
dec
jg
repz
rcl
(bad)
adc
adc
xchg
push
add
jmp
js
scas
loope
clc
mov
fs
aaa
pop
xor
xchg
in
sub
aaa
pop
jecxz
xor
pop
dec
mov
fmul
hlt
sbb
adc
jb
mov
lock
inc
mov
loopne
add
push
sbb
mov
inc
stos
adc
mov
pushf
adc
cmps
jno
or
lods
xor
loopne
mov
mov
jmp
fsub
lods
push
arpl
inc
add
pop
pop
shl
dec
dec
jno
jle
out
or
pushf
clc
add
data16
and
ins
jae
xchg
inc
repnz
rcl
jno
or
add
xor
cli
pop
and
test
mov
bound
pop
lods
sub
fiadd
sub
movs
mov
lock
cmps
pop
pusha
scas
loope
imul
ret
and
or
inc
(bad)
dec
xlat
cmp
das
jo
dec
cmp
aad
sub
jne
sar
sub
pushf
jle
jg
(bad)
aas
aad
adc
popa
psubw
dec
dec
lds
cli
add
push
mov
pop
push
push
mov
or
call
(bad)
sbb
rcl
cld
repnz
mov
jb
inc
mov
(bad)
mov
pusha
ftst
push
inc
in
ins
dec
mov
imul
out
jno
push
(bad)
enter
fcom
cmp
and
fnstcw
mov
push
shl
push
jb
mov
and
call
mov
leave
aas
xchg
cwde
fcom
adc
int
outs
aam
cmp
and
stos
push
call
and
fld
les
adc
inc
sub
sbb
retf
sub
adc
mov
and
xor
add
gs
dec
adc
sub
js
sbb
fiadd
cdq
pushf
push
(bad)
mov
outs
out
and
(bad)
fcmovnbe
and
in
mov
pop
mov
outs
retf
ins
mov
mov
mov
and
xor
adc
(bad)
(bad)
lods
lds
int3
pop
loop
addr16
push
cdq
xor
and
or
add
xchg
xchg
adc
scas
gs
outs
push
cmp
push
pop
jmp
inc
iret
push
inc
mov
or
addr16
adc
cdq
nop
rcr
out
call
int
sbb
mov
xchg
addr16
push
rcr
sbb
inc
inc
mov
add
cmp
pop
sub
call
ja
pop
popf
fldl2t
lds
mov
repnz
ret
mov
inc
dec
inc
inc
cmp
or
(bad)
pusha
retf
pop
inc
fistp
out
cld
and
in
in
(bad)
scas
sbb
xor
sub
push
and
jecxz
fld
xor
arpl
jl
movs
xor
xor
push
sbb
push
pop
xchg
push
cli
stos
outs
in
xchg
push
push
fsubr
out
push
push
dec
fild
add
daa
mov
shl
(bad)
cmp
inc
inc
or
jno
sub
adc
push
xor
xor
es
push
xchg
sub
sbb
push
aad
cmp
pop
(bad)
mov
add
and
pop
nop
dec
retf
mov
sub
jp
xchg
out
outs
jge
les
xor
scas
push
ins
xchg
dec
into
xchg
pop
jae
test
dec
xlat
xor
rol
pop
cmps
mov
aad
mov
mov
cmp
pusha
test
cli
out
(bad)
rcr
nop
and
push
mov
push
std
in
int
iret
sbb
adc
add
fnstsw
jb
or
mov
idiv
mov
inc
sbb
cs
push
fimul
jle
xor
dec
lahf
stc
and
xor
xor
or
push
mov
retf
js
jg
imul
fst
int
xor
add
cmps
cmp
xor
pop
jnp
jp
cmp
out
pop
xlat
ficom
inc
outs
imul
sub
dec
stc
inc
dec
aam
dec
cmp
xor
iret
push
in
pop
repnz
rcr
mov
scas
sbb
aaa
aaa
stos
outs
fcom
daa
pop
sub
or
pop
sub
mov
stos
mov
and
(bad)
aaa
xor
inc
(bad)
fiadd
sub
ret
jo
mov
and
adc
loope
cld
inc
inc
inc
or
push
iret
into
xor
(bad)
mov
sbb
dec
xchg
push
inc
dec
in
mov
push
adc
xlat
mov
add
fwait
push
xlat
xor
ss
push
dec
dec
hlt
push
or
jae
stos
bound
wrmsr
nop
mov
mov
add
daa
dec
fstp
pop
adc
(bad)
pop
movs
cmps
and
icebp
push
jb
fld
cdq
cmp
out
retf
cwde
adc
pop
call
pop
sbb
mov
sbb
mov
hlt
int
dec
fst
test
push
mov
cld
and
add
adc
loopne
js
mov
inc
add
pop
jmp
(bad)
popf
inc
ss
je
loope
out
jo
mov
sub
jmp
sbb
out
imul
jg
scas
jge
jp
shl
cmp
mov
push
mov
ja
xchg
inc
arpl
mov
std
adc
xor
idiv
(bad)
mov
lods
(bad)
jg
push
pop
sbb
(bad)
sbb
dec
and
xor
mov
outs
mov
fwait
jmp
loope
pop
iret
pop
(bad)
lock
in
test
aam
ins
sbb
out
mov
cs
xchg
repnz
shl
pop
imul
mov
jg
arpl
in
(bad)
and
cmp
jns
inc
cli
imul
add
or
sti
scas
stos
aas
(bad)
xor
loope
call
cli
lds
(bad)
mov
pushf
movs
xchg
aam
not
cli
(bad)
xor
pusha
shl
sbb
dec
outs
int
jmp
nop
pop
js
call
adc
(bad)
mov
out
(bad)
in
sbb
jb
rol
aad
sbb
jb
out
aam
dec
jmp
rcl
mov
cmp
add
sub
pmulhuw
add
push
mov
aam
test
sub
popf
or
fsub
xchg
pushf
jmp
pop
sbb
sti
push
gs
xlat
cs
push
jp
push
push
cmps
jecxz
pop
push
fwait
sub
mov
addr16
inc
adc
sbb
data16
add
nop
addr16
dec
add
stos
jnp
cmps
(bad)
cmc
cdq
call
xor
test
xor
(bad)
icebp
aam
cmps
mov
sub
popa
ds
cmp
cmp
mov
aas
rcr
cmp
cmp
aad
mov
popf
push
mov
xchg
pop
and
jbe
push
fst
fidivr
ds
dec
movs
dec
(bad)
shl
adc
or
jmp
jbe
pop
je
or
repz
push
test
add
mov
rcr
test
pop
fsubr
mov
stos
xlat
add
movs
call
add
lahf
(bad)
ret
xor
inc
inc
lock
cwde
std
jge
daa
call
icebp
push
cli
sbb
mov
mov
ins
test
add
push
mov
adc
xchg
rol
mov
div
adc
mov
fisttp
or
jne
mov
ret
mov
jmp
adc
xchg
movlps
add
pop
(bad)
pop
pop
pusha
std
inc
push
cmps
(bad)
xchg
add
fisubr
fdiv
pop
adc
jmp
lods
inc
push
cmps
dec
xchg
inc
imul
pop
fnsave
jmp
jge
adc
inc
xlat
(bad)
mov
call
adc
pop
retf
lods
xor
and
adc
aaa
pop
bound
(bad)
shr
out
cmps
jg
scas
shl
shl
add
out
aad
out
mov
out
jns
pop
pusha
jge
imul
js
imul
mov
imul
mov
xor
lods
mov
adc
mov
cmp
mov
nop
fdiv
dec
ds
add
call
cmps
shr
lock
retf
dec
or
cmps
das
pop
pop
pushf
pop
push
lea
mov
push
adc
mov
fmul
xchg
aad
ror
ds
aas
xchg
pop
push
dec
cmps
mov
jl
or
in
sbb
pusha
and
adc
sbb
jp
retf
mov
call
xchg
out
enter
(bad)
fs
add
addr16
(bad)
imul
daa
dec
fsubrp
jo
in
into
xor
mov
xchg
ds
or
adc
idiv
mov
out
and
scas
push
sbb
push
dec
mov
ss
(bad)
xor
jnp
inc
or
or
sbb
pop
jle
int
pop
int3
push
inc
and
mov
mov
hlt
test
dec
dec
sahf
aam
adc
arpl
fnstcw
pop
clc
mov
movs
cwde
ins
mov
xchg
cmp
(bad)
push
jmp
jno
jg
lods
adc
sahf
jp
aaa
mov
out
lods
push
ret
(bad)
or
call
out
cdq
(bad)
ss
pop
(bad)
fdiv
movs
cwde
out
dec
int
push
jb
in
test
int
mov
mov
(bad)
pop
nop
push
retf
xlat
or
test
cmc
mov
add
jg
dec
or
repz
or
inc
hlt
jecxz
jns
adc
bound
mov
dec
test
cmp
cmp
fadd
mov
xor
fs
pop
out
test
mov
sbb
dec
enterw
into
cwde
jmp
jo
sbb
xchg
(bad)
fist
pop
sub
mov
jl
repz
jle
push
or
in
(bad)
je
imul
leave
sbb
jne
and
out
loop
cmp
pop
mov
lods
mov
jo
xchg
jmp
js
lods
dec
test
mov
lahf
pop
fcmovu
mov
outs
mov
aas
pop
mov
sahf
sub
pop
test
inc
and
rcr
xlat
sbb
sahf
mov
xor
stc
into
fisub
sub
repnz
int3
in
add
adc
stos
and
mov
cmp
out
fnsave
mov
popa
(bad)
in
mov
rol
std
popa
(bad)
pop
fld
jae
jmp
out
add
push
fsub
clc
aaa
add
in
xchg
sbb
sub
mov
and
loopne
jmp
mov
xchg
rcr
fwait
lds
mov
in
retf
xor
adc
mov
(bad)
sbb
pop
jae
arpl
fucomip
(bad)
cmps
js
push
imul
cs
xor
xchg
pop
js
xchg
xor
push
cmps
pop
mov
pop
xchg
cli
sub
jp
iret
inc
nop
mov
xor
jo
call
loope
nop
jns
daa
xchg
sub
add
lahf
fwait
add
dec
shl
pop
fldenv
pop
or
mov
sub
inc
ja
fs
cmp
(bad)
std
aam
test
add
mov
int
and
lods
fist
stc
push
ins
clc
add
test
pop
push
dec
ja
adc
pop
test
repnz
xchg
lds
(bad)
loope
scas
pop
outs
adc
jmp
jno
ret
jne
mov
xor
js
repz
jne
outs
in
cmps
inc
sbb
push
in
and
cmps
lahf
push
call
arpl
aas
push
in
fsub
icebp
xor
or
push
arpl
dec
popf
and
sbb
aam
pop
addr16
neg
xchg
cdq
(bad)
mov
jne
mov
sbb
inc
adc
repnz
cmp
ret
test
jl
mov
pushf
iret
xchg
inc
and
mov
jne
push
xlat
call
mov
cli
xchg
jge
leave
js
fist
outs
retf
outs
jmp
mov
not
add
mov
movs
sbb
xchg
fild
dec
rcr
inc
loope
loope
sbb
jl
inc
xchg
rol
bound
inc
sar
dec
xor
dec
pop
and
and
pop
add
ins
and
or
stos
push
add
sahf
jecxz
outs
pop
xchg
mov
pop
mov
jae
inc
jne
jno
lahf
ret
mov
sbb
das
ins
popfw
lock
mov
mov
cmps
mov
xor
call
cmps
cmp
popa
dec
and
(bad)
jb
cmp
mov
push
lds
pop
push
lea
pop
dec
(bad)
xor
dec
fadd
mov
inc
and
jmp
in
sbb
fsub
pop
ins
je
add
fiadd
inc
leave
inc
dec
int3
xchg
xlat
mov
inc
jcxz
outs
xchg
cmp
aad
in
jmp
retf
jne
iret
pop
mov
call
test
pop
push
sub
pop
xchg
mov
pop
ds
hlt
adc
cmp
xor
lods
aad
sbb
sub
(bad)
adc
add
mov
loop
outs
in
sti
and
mov
nop
mov
jmp
div
pop
xchg
sub
retf
xchg
ror
cli
dec
out
js
mov
jno
repnz
stos
xchg
movq
lahf
push
xchg
dec
xlat
dec
rcl
stos
mov
popf
adc
pusha
push
in
sub
push
lods
xchg
rol
push
ss
or
rol
(bad)
aaa
daa
loope
adc
lds
cmp
xor
pop
jno
je
jne
mov
imul
or
aad
jno
rcl
enter
mov
mov
sbb
loope
fld
fxch
data16
adc
out
xchg
call
hlt
aam
add
les
iret
vaddsubpd
call
or
push
adc
lods
pop
movs
cmp
ficomp
mov
xor
fs
cmp
jmp
sahf
(bad)
sti
sbb
dec
mov
je
push
sub
sti
mov
jo
dec
fnstcw
mov
xor
aaa
mov
ja
aad
pop
movs
sbb
pop
fdiv
out
adc
nop
add
dec
push
or
retf
fistp
in
adc
loopne
cmp
data16
ret
sub
enter
inc
adc
inc
add
loopne
dec
mov
and
xor
lahf
test
(bad)
lock
repnz
or
inc
shl
fucomip
in
jns
clc
pop
sbb
mov
dec
mov
mov
sub
fild
nop
pop
int3
pop
out
and
outs
add
push
aas
xor
jbe
push
rcl
outs
xor
ror
gs
mov
gs
ss
lods
aaa
pushf
hlt
cld
sbb
sbb
mov
cmp
mov
call
sbb
pop
cmc
pushf
pop
adc
mov
sbb
daa
retf
or
shl
lea
jmp
add
das
add
xchg
or
sbb
sub
jbe
repz
jecxz
jge
test
shr
mov
jge
cmp
push
mov
data16
pop
aad
push
sub
adc
add
pop
das
push
jae
jne
and
mov
addr16
repnz
push
repz
add
(bad)
xchg
sub
or
jnp
pop
ds
cmp
inc
ror
mov
sbb
add
cld
mov
adc
inc
rcr
rcr
mov
mov
out
xchg
aam
je
mov
in
cmp
mov
sub
cli
out
jg
rol
stos
pop
dec
pusha
mov
inc
or
push
mov
cmp
test
(bad)
fs
mov
mov
or
rcr
push
add
ret
ja
test
into
out
in
mov
ins
imul
jae
jmp
cmp
pop
adc
and
and
(bad)
not
add
jne
xor
push
mov
or
rcl
loope
xchg
addr16
mov
rol
cmp
xadd
push
xor
and
and
cmps
aad
sti
loop
xchg
jl
movs
lods
mov
push
add
fiadd
mov
in
cmc
popf
scas
loopne
mov
inc
dec
add
push
mov
and
jmp
inc
push
jo
aas
mov
xchg
inc
mov
out
cmc
push
and
ins
add
sub
inc
xchg
es
fiadd
pop
daa
dec
and
dec
add
js
fist
adc
dec
pop
dec
add
push
sar
in
pop
pop
jb
mov
push
test
push
test
pop
xchg
test
out
mov
sub
sbb
mov
pop
js
fwait
dec
jb
out
pop
mov
cmp
add
mov
call
sub
icebp
xchg
dec
fcomp
(bad)
dec
and
lea
push
call
jb
lods
fiadd
repz
sbb
jle
add
das
push
inc
or
cmps
mov
(bad)
xchg
add
loope
sub
test
mov
xchg
loope
mov
mov
dec
mov
pop
jmp
sub
dec
add
into
and
fs
cmps
ret
test
cli
gs
xor
mov
mov
pushf
daa
ret
mov
push
inc
aam
or
aas
xchg
cmp
xchg
test
xchg
pop
mov
add
cmps
pop
push
mov
shl
xor
adc
pop
xchg
cdq
push
pushf
or
cld
mov
rcr
mov
push
ja
or
add
imul
cmp
dec
cdq
xchg
push
outs
push
lds
shl
movs
dec
cli
push
cmps
lock
sahf
or
pushf
call
loop
out
sbb
pop
pop
or
test
std
cmp
cmps
not
xchg
xor
in
mov
stos
lahf
jmp
add
push
jl
xchg
jecxz
ins
sbb
sbb
movs
repz
sti
outs
(bad)
in
retf
push
mov
mov
mov
js
xor
rcr
int3
icebp
jle
mov
add
inc
push
sbb
cld
neg
inc
js
cwde
pop
shr
test
icebp
mov
mul
push
int3
data16
jbe
push
mov
out
cmps
das
xchg
inc
test
stc
outs
push
adc
jge
jno
lods
add
pop
or
(bad)
loopne
test
js
inc
test
test
out
(bad)
mov
(bad)
jl
pop
arpl
jge
je
jo
push
dec
gs
sub
xchg
test
xchg
push
sub
push
shl
jmp
cs
inc
dec
call
aad
ret
xor
test
xchg
mov
cmp
inc
loop
sbb
and
jmp
or
mov
ins
push
lds
mov
jg
add
(bad)
sub
jmp
xchg
into
dec
pop
jg
mov
fcmovu
aaa
cmp
jl
sub
adc
mov
xchg
in
xchg
or
mov
ret
ja
bound
or
jmp
fistp
mov
fs
lea
cdq
pop
out
fwait
fwait
push
cmp
mov
in
pop
fst
push
pop
imul
fldcw
cmc
mov
outs
cli
iret
scas
sbb
aaa
out
xor
cmc
mov
popa
add
jo
(bad)
jae
dec
lahf
pop
sbb
sub
cmp
icebp
xor
or
dec
int
add
rol
lea
out
add
push
rol
sti
jnp
aad
ds
aad
mov
das
movs
ins
imul
inc
dec
and
loope
cmc
mov
pop
test
dec
mov
pop
mov
pmuludq
(bad)
ja
sbb
xchg
pop
push
ins
scas
cmp
data16
aas
loopne
mov
aaa
sub
mov
ds
addr16
or
retf
retf
sub
jo
mov
jge
iret
lahf
cdq
xor
mov
sbb
jns
xchg
jmp
xor
jne
pop
pusha
icebp
pushf
std
inc
out
pop
out
in
xchg
mov
aam
leave
js
test
ds
mov
stc
hlt
pop
xor
mov
sti
bound
mov
sub
xchg
inc
cmps
aas
dec
inc
rcr
push
fst
xchg
mov
sub
inc
popf
call
scas
pop
mov
movs
jne
xor
pop
sbb
cmp
sbb
cmp
and
test
pop
jg
mov
mov
cwde
mov
inc
mov
mov
push
scas
popa
add
gs
sbb
dec
mov
lods
(bad)
cmp
imul
cmp
loop
push
imul
mov
add
push
nop
nop
sbb
pop
jnp
ins
push
(bad)
(bad)
shr
pop
dec
test
xchg
push
scas
and
stos
loopne
mov
cmp
dec
ror
and
and
mov
cli
and
inc
ret
sbb
xor
xchg
retf
(bad)
pop
and
push
(bad)
fisub
mov
loopne
jns
pusha
gs
jl
fdiv
popa
out
rol
mov
cmp
mov
add
in
sbb
mov
add
adc
inc
sbb
inc
js
mov
retf
pop
jo
xor
cmps
ins
inc
mov
out
sub
mov
inc
cmp
mov
cmp
pop
cmps
cs
or
adc
xor
dec
pop
fcom
and
sub
jg
jl
pusha
push
test
call
adc
ja
fist
pop
out
out
inc
sub
fidiv
jle
cli
jne
inc
xor
pop
out
popa
test
aas
jbe
pop
mov
in
ds
add
popf
mov
cmp
mov
xchg
push
jnp
pop
pop
mov
daa
adc
mov
gs
mov
jne
jnp
icebp
jecxz
push
dec
imul
xchg
aad
or
ins
push
stos
loope
test
retf
mov
ficom
ss
add
in
addr16
retf
adc
sub
add
es
mov
adc
xchg
adc
shl
sub
jae
sar
jecxz
cmovae
sub
fiadd
ficomp
inc
mov
jmp
(bad)
xlat
iret
aaa
bound
mov
imul
movs
sbb
sbb
out
cmp
hlt
xor
(bad)
cmp
jmp
test
adc
(bad)
mov
dec
add
mov
rcr
and
push
mov
loope
sub
ficom
or
and
(bad)
test
sahf
mov
aaa
pop
push
out
icebp
xchg
mov
pop
inc
fst
pop
xchg
fs
shr
or
jmp
(bad)
sbb
ss
push
inc
cmp
stc
mov
push
pop
fsubr
mov
arpl
repz
les
and
hlt
mov
mov
xor
xchg
pop
cmp
iret
popf
iret
not
cld
clc
push
cmp
sub
iret
pop
(bad)
jo
inc
cmps
dec
cmp
jle
stc
inc
in
and
out
inc
mov
mov
popw
cmps
nop
jns
fcomp
mov
sbb
mov
sub
not
outs
push
rol
push
xor
retf
mov
sbb
outs
dec
les
xor
int3
push
xor
inc
je
(bad)
outs
jmp
out
mov
xor
adc
or
jmp
adc
ins
call
fimul
and
xor
mov
mov
mov
xor
(bad)
(bad)
adc
(bad)
rcr
cwde
je
inc
or
arpl
jnp
jae
movs
in
pusha
lock
cdq
xor
or
sub
jl
jne
jle
shr
dec
push
ret
mov
pop
cmp
ss
cmp
mov
and
fs
or
add
xor
and
pop
out
mov
cmp
xchg
fidiv
xchg
sub
popa
out
push
mov
ss
and
jnp
and
inc
ftst
inc
sub
xchg
and
leave
add
cmp
and
add
add
mov
jge
cmp
imul
and
(bad)
scas
lods
pop
sbb
mov
mov
mov
adc
cmp
enter
mul
sub
stos
(bad)
iret
fprem
and
xor
xchg
cmps
jne
mov
xchg
enter
jmp
mov
mov
or
sub
loopne
xor
retf
pop
shl
mov
out
into
das
cld
es
popa
push
movs
jbe
cwde
push
(bad)
loopne
dec
loopne
xor
lds
xchg
xor
push
gs
lock
add
mov
adc
ret
pop
clc
pop
mov
jb
test
es
cmps
stos
frstor
push
or
ins
adc
ins
loopne
or
inc
lods
mov
jnp
dec
fstp
shl
xchg
in
scas
ja
test
fs
lock
aad
pusha
pop
add
jge
rcl
fldenv
sahf
sub
push
xor
int3
fs
pop
popa
daa
cmp
inc
push
adc
jb
jb
xor
cmp
fsub
ret
mov
mov
ss
xor
loopne
ror
icebp
pop
jb
(bad)
pop
xchg
mov
dec
mov
cmp
inc
(bad)
cmc
dec
mov
sub
lods
mov
rcl
push
stos
inc
push
and
xor
lds
ins
outs
or
nop
inc
loopne
pop
or
fistp
addr16
fcmovnbe
mov
jmp
mov
pop
mov
push
add
push
adc
shr
or
call
jg
loop
hlt
loopne
icebp
daa
addr16
dec
dec
xchg
aam
push
jb
jl
cli
push
and
sbb
add
pop
repz
cmp
pushf
retf
xchg
mov
push
cmp
dec
adc
jae
mov
mov
in
js
repnz
test
fs
test
jns
mov
ss
popf
push
not
aas
or
xchg
stos
aam
iret
stos
stc
fwait
or
inc
pop
cdq
leave
xchg
dec
test
int3
(bad)
dec
rcr
cmps
mov
sub
sar
in
add
mov
pop
xor
mov
(bad)
jne
test
cdq
cwde
inc
cmp
pushf
inc
mov
aad
sub
inc
rol
aas
sbb
retf
push
mov
out
cmp
add
inc
sbb
jb
xchg
in
ins
xor
sbb
in
pop
sbb
out
leave
pop
pushf
jp
pusha
mov
cdq
cmp
push
stc
stc
mov
cwde
shl
iret
pop
or
cdq
jge
mov
out
sbb
aad
or
mov
adc
push
mov
adc
and
jbe
test
jge
mov
jmp
clc
mov
call
adc
les
aad
cmp
shr
test
mov
mov
jl
xchg
repnz
cwde
mov
retf
push
retf
in
ss
adc
movlps
dec
push
xlat
sti
adc
lock
xlat
push
add
cmp
push
add
mov
mov
mov
(bad)
cmp
in
retf
lahf
js
sbb
cmp
daa
sbb
inc
inc
xor
not
jecxz
pop
pop
dec
icebp
push
mov
pop
mov
mov
lods
mov
repz
push
mov
sub
jge
cmp
or
dec
xor
cmp
lahf
mov
push
or
sahf
cs
mov
mov
jmp
das
xlat
mov
inc
mov
mov
adc
ins
xor
(bad)
or
inc
or
mov
jmp
stos
xor
jmp
stos
je
arpl
pop
xchg
mov
ret
xor
mov
int
xchg
cmp
nop
adc
xor
xchg
and
mov
mov
sbb
ds
xchg
sub
repnz
jmp
popf
in
cmp
retf
jge
push
xchg
rcr
mov
mov
(bad)
(bad)
imul
lods
mov
outs
movs
es
(bad)
wrmsr
xor
addr16
vmovntps
mov
(bad)
(bad)
(bad)
fstp
cmps
(bad)
dec
hlt
aaa
icebp
data16
xor
sub
xchg
je
cmp
js
shl
ins
(bad)
aad
add
ss
mov
das
and
leave
ret
xchg
add
adc
or
pusha
repz
rol
imul
or
popa
je
xchg
mov
es
sub
jmp
rcl
fidivr
jmp
sar
cs
mov
mov
ret
xchg
mov
sub
hlt
cmp
or
shl
mov
xchg
je
fisub
ins
push
mov
js
aas
neg
sbb
mov
sub
sub
mov
jmp
mov
int3
(bad)
data16
rcl
(bad)
add
and
test
lea
(bad)
or
xor
imul
and
popa
jl
xchg
mov
imul
pop
loop
fcomp
les
cmp
sbb
xchg
xor
enter
sub
clc
fwait
pop
adc
lds
add
or
add
adc
adc
outs
jl
xor
ret
cmp
cmp
pushf
dec
idiv
sbb
lods
(bad)
aam
xchg
adc
mov
scas
mov
shl
cmp
fcmovnb
bsr
clc
repz
dec
fidivr
fnstcw
pop
mov
mov
mul
cmp
maxps
cmp
sub
int3
pop
jle
mov
add
and
pop
pop
sub
leave
call
(bad)
loop
adc
xor
dec
inc
(bad)
js
mov
mov
pop
mov
mov
push
adc
sub
scas
jno
mov
push
ja
push
sbb
lods
loopne
sbb
cmp
lods
ins
push
fidivr
dec
mov
lea
push
pop
inc
in
mov
or
imul
inc
call
imul
pop
push
imul
cmp
mov
aaa
add
(bad)
js
in
rcl
cwde
fisub
test
dec
fsub
hlt
push
arpl
cmp
daa
movs
or
shl
cmp
int
xor
sub
js
push
bound
aam
int
addr16
movs
xor
fwait
jecxz
adc
xor
sahf
sub
mov
test
mov
(bad)
(bad)
cmp
cmp
jecxz
repnz
xchg
push
lds
popf
sbb
push
or
add
in
fcmovnbe
leave
mov
out
les
ret
les
out
mov
xor
in
sub
bound
push
(bad)
sbb
or
adc
ins
pop
and
mov
in
push
or
pop
and
sbb
jmp
cmp
movs
mov
cmp
mov
sub
mov
fcmove
inc
fninit
xor
hlt
ss
jg
push
cmp
mov
jno
ret
mov
xchg
addr16
inc
rcr
aaa
loope
sbb
int
mov
xchg
fild
mov
push
mov
cmc
icebp
clc
nop
inc
xchg
movs
mov
retf
ss
or
repz
pop
jl
fdivrp
pusha
or
inc
jecxz
(bad)
jmp
in
stc
lods
and
pop
ror
sahf
jae
rol
not
scas
push
clc
adc
jle
stos
fs
cmps
clc
aad
mov
push
lahf
and
xchg
(bad)
ficom
dec
enter
js
ins
push
es
aas
jae
push
sbb
pop
inc
xchg
and
and
dec
adc
sub
jmp
mov
mov
jo
gs
fsubr
mov
jmp
add
adc
ret
jge
push
mov
xor
imul
mov
test
add
push
push
call
stos
or
adc
fstp
dec
sub
shr
sbb
sub
xchg
xchg
push
fcom
mov
rcl
push
sub
jge
mov
rol
sub
imul
adc
and
push
mov
lods
int3
dec
jge
adc
test
adc
add
arpl
mov
je
mov
jno
add
jo
inc
cmp
sbb
jmp
fdivp
imul
adc
xchg
out
out
sbb
retf
mov
lock
add
(bad)
mov
push
cmp
or
jne
cmp
cdq
int3
and
pushf
mov
mov
mov
aad
push
das
sbb
xor
adc
adc
adc
in
es
pop
cmp
fiadd
mov
mov
ror
mov
pusha
cwde
test
(bad)
les
fs
mov
data16
stc
add
gs
stos
nop
not
je
aaa
sahf
addr16
call
add
test
pop
xchg
loop
pop
xor
in
test
sub
pop
push
and
hlt
shl
stc
mov
cmps
or
xor
das
mov
mov
sub
movs
adc
stos
inc
and
mov
dec
inc
out
cdq
mov
repz
in
mov
inc
scas
push
push
mov
xchg
pushf
pop
cli
aam
test
and
cmp
ret
mov
xchg
lea
call
in
pop
pop
add
jno
mov
pop
out
test
pop
jo
add
fistp
jne
jg
fldpi
cmps
inc
mov
fwait
outs
call
arpl
addr16
pusha
sub
outs
dec
xchg
add
test
adc
jnp
hlt
in
cmp
in
mov
add
ss
mov
pop
pop
mov
xchg
unpcklps
mov
lahf
out
jb
fs
add
leave
loopne
mov
and
or
std
cmps
xchg
fwait
int3
jge
push
cmp
add
sahf
addr16
cmp
push
sti
dec
int
call
cdq
mov
pushf
xchg
mov
ja
pop
ret
xchg
bswap
(bad)
div
and
je
imul
push
sub
ret
xchg
or
dec
jmp
shl
mov
(bad)
test
stos
and
sub
push
cdq
cs
daa
xor
addr16
mov
sbb
ficomp
ja
ss
push
rcl
mov
jecxz
adc
popa
xchg
xchg
mov
mov
fdiv
retf
(bad)
(bad)
repnz
push
(bad)
pop
dec
test
arpl
imul
js
sti
and
mov
push
pop
jmp
or
popa
lock
cld
push
xor
loop
adc
in
mov
icebp
setns
aaa
das
push
dec
xchg
pushf
(bad)
mov
mov
adc
xchg
out
jmp
call
cmp
(bad)
mov
out
add
iret
adc
ins
and
inc
pop
imul
neg
add
test
jge
and
push
outs
sub
ds
sbb
push
mov
outs
pusha
ins
xor
ffreep
jmp
bound
data16
mov
hlt
xor
ror
jmp
adc
jno
call
daa
cmp
or
cwde
out
imul
cmps
push
test
push
out
rcl
(bad)
fnsave
arpl
mov
mov
sub
call
iret
imul
int3
into
push
xchg
inc
and
(bad)
lods
retf
inc
bnd
pop
push
loopne
in
pop
xchg
mov
js
enter
push
sub
push
cmp
pop
mov
push
adc
std
sbb
mov
cwde
sub
xor
push
loop
mov
jo
cmp
out
jbe
mov
lock
sahf
les
mov
lahf
and
mov
jle
icebp
jb
push
out
movs
aad
xor
arpl
cmp
or
lea
xor
cmp
jbe
inc
push
loopne
mov
(bad)
jae
mov
test
shl
shl
push
out
mov
add
arpl
shl
sbb
jbe
aad
dec
inc
out
add
cli
inc
mov
fadd
xchg
in
popa
add
push
inc
call
iretw
fimul
pop
jne
sahf
cli
ja
fisubr
push
add
je
pop
sub
cmps
pop
jae
or
stos
cmp
and
xor
in
jmp
dec
mov
loope
sbb
or
xor
mov
adc
fwait
ja
mov
sar
in
inc
inc
(bad)
loopne
push
shl
sub
mov
push
push
inc
fmulp
dec
leave
mov
dec
stos
(bad)
mov
out
daa
call
pop
cmp
jecxz
add
imul
add
jmp
jecxz
push
sbb
xor
enter
jmp
nop
hlt
inc
push
fcom
dec
and
ret
xor
mov
js
xor
sahf
push
sbb
outs
or
xchg
aaa
out
add
mov
cmp
pusha
retf
icebp
inc
pop
mov
jmp
iret
std
nop
cmp
inc
inc
and
in
push
movs
mov
bt
sub
mov
icebp
out
pmulhuw
push
add
(bad)
into
mov
(bad)
jge
sbb
jo
and
cdq
cs
mov
movs
jnp
mov
popf
outs
push
stos
outs
ret
or
jl
sub
xchg
leave
xor
push
out
lods
push
mov
push
xchg
mov
pushf
test
into
sub
sar
jle
mov
mov
ja
push
dec
add
fnop
sub
sbb
retf
nop
into
and
jno
int3
dec
sbb
mov
fs
ja
dec
push
mov
sbb
movs
mov
ins
sub
mov
lods
jp
or
push
stc
mov
leave
jg
sbb
mov
stos
cmp
jmp
aas
int
jnp
xor
and
and
mov
push
pop
jmp
iret
mov
cmps
outs
or
mov
lock
icebp
cmps
mov
sbb
jp
or
cmp
jno
xor
icebp
jmp
imul
mov
mov
cmp
sar
test
xor
sub
xchg
cmp
scas
sub
xor
sbb
out
mov
call
mov
outs
retf
rcr
je
fcmovnbe
les
sar
aad
mov
and
push
or
(bad)
mov
mov
call
mov
jbe
fcmovbe
inc
in
dec
pop
xchg
add
pop
adc
push
loopne
sub
cdq
jno
or
das
xchg
jmp
sub
or
imul
sti
lds
sub
sub
retf
jmp
sbb
adc
mov
je
add
sub
pop
les
dec
mov
daa
imul
pop
sub
push
shl
push
inc
pop
dec
add
push
aaa
mov
pop
rcr
out
add
jnp
sub
test
sahf
sub
aas
imul
push
push
and
rol
in
loop
arpl
mul
mov
call
xlat
sub
inc
ret
sbb
jge
fadd
mov
or
call
xor
mov
test
xlat
xor
and
imul
outs
or
mov
mov
ins
inc
fst
jp
push
xor
outs
lahf
sbb
pusha
and
test
mov
loope
das
cmp
push
fidiv
and
push
xchg
imul
mov
jl
adc
adc
dec
ret
mov
pop
into
cli
mov
repnz
sahf
repz
jne
bound
rcr
ffreep
mov
adc
pop
mov
out
sub
sub
dec
push
cmps
push
sub
ss
fbld
and
rcr
ja
sbb
inc
stc
cmp
add
dec
aad
xor
jl
test
add
sahf
jecxz
jge
es
cwde
dec
and
xchg
cli
arpl
add
out
jno
and
push
icebp
into
lea
lods
fisubr
jo
mov
pop
iret
jo
sbb
ds
neg
adc
sbb
inc
je
xor
stc
ja
and
(bad)
aaa
and
out
fsubr
add
push
cmps
push
out
mov
jge
mov
aas
jl
and
sub
mov
test
sbb
adc
sbb
call
jp
mov
neg
push
pop
in
daa
ret
add
scas
shl
jmp
rol
mov
and
ret
push
jle
mov
sbb
shr
fcom
ins
adc
adc
ds
in
outs
adc
scas
test
and
xchg
and
mov
(bad)
int3
das
inc
(bad)
cs
lods
icebp
xlat
loope
nop
jl
mov
mov
jae
pop
pop
mov
push
and
repnz
cmp
repnz
(bad)
xlat
ins
xor
or
ins
xchg
cwde
out
jne
jl
mov
xchg
fxch
retf
pusha
mov
in
iret
out
jmp
pop
xchg
xchg
or
or
test
cwde
loop
hlt
inc
cdq
nop
cmp
pop
sahf
push
mov
xchg
mov
repnz
pop
popf
jp
push
stc
xchg
mov
push
out
push
shl
mov
inc
mov
loop
shl
ficom
mov
xor
data16
pop
out
xchg
jle
sti
or
add
imul
sbb
rol
fcmove
cdq
and
ficom
popf
push
popa
and
sar
xchg
out
clc
ins
cmp
rcl
jp
add
cdq
or
pop
jno
rcr
js
pop
mov
shl
or
je
add
sub
dec
xor
add
jle
cmp
mov
dec
out
mov
dec
jns
je
jne
pop
jbe
fadd
mov
pop
mov
mov
cdq
push
push
popa
shl
and
imul
shr
mov
and
shl
(bad)
bound
mov
push
retf
push
je
jbe
(bad)
test
and
hlt
jnp
or
lea
sub
clc
aas
jnp
out
inc
inc
mov
stos
sub
inc
rol
xchg
cwde
sbb
in
mov
arpl
inc
inc
and
test
ss
inc
cmp
popa
xor
fsubr
jmp
cmps
mov
fsubrp
loope
cmps
lea
les
dec
jge
les
push
in
outs
push
cmp
pop
cmp
scas
lods
(bad)
xlat
xchg
inc
cmp
aam
leave
and
mov
mov
ja
test
pop
js
jp
or
mov
pushf
js
int3
scas
imul
in
repz
jmp
add
mov
push
adc
ins
add
fdiv
(bad)
dec
(bad)
cld
jmp
lock
test
inc
leave
mov
mov
jb
out
in
and
je
out
xor
adc
jmp
dec
jno
ss
loop
je
mov
pop
(bad)
pop
(bad)
aad
(bad)
jg
pop
xor
ret
jno
in
pop
popf
ss
cmp
push
mov
cmp
mov
imul
mov
adc
push
or
dec
fwait
mov
mov
jl
fsubrp
pusha
mul
push
out
or
daa
sub
stos
pop
add
ss
or
bound
fnstenv
pop
ret
jmp
jne
push
inc
push
aam
xchg
les
mov
dec
inc
addr16
call
(bad)
xlat
mov
or
in
(bad)
dec
mov
sbb
out
jae
and
cmp
iret
out
rol
mov
inc
in
push
push
pusha
mov
repnz
push
test
xchg
in
xchg
loopne
mul
push
mov
mov
mov
sbb
ret
in
xor
ret
out
inc
pop
adc
loopne
int3
pop
mov
inc
push
call
sti
clc
adc
loope
arpl
cli
adc
adc
outs
sub
(bad)
jbe
pop
or
cli
(bad)
xchg
call
inc
repnz
adc
and
and
cmp
push
jne
mov
dec
mov
arpl
and
cld
add
mov
(bad)
call
das
shr
cwde
push
and
pushf
cwde
cmc
mov
nop
pop
inc
iret
in
ds
add
inc
pop
stc
push
jecxz
je
inc
in
repz
cld
or
scas
jle
(bad)
jb
fmul
push
or
dec
mov
cmp
ins
jne
fdiv
jge
xor
shl
cmps
adc
addr16
dec
imul
out
es
adc
jae
jne
fs
mov
ror
add
call
or
jb
adc
fsubr
stos
and
mov
xor
push
or
mov
loope
leavew
and
sub
ror
jae
jb
imul
mov
dec
cli
das
xor
ins
dec
sbb
mov
cli
loop
push
inc
add
scas
mov
inc
test
hlt
sti
mov
push
rcr
add
xor
icebp
mov
retf
adc
clc
jg
fstp
pop
and
loopne
mov
cmc
jbe
xchg
icebp
inc
mov
dec
(bad)
xchg
xorps
push
adc
(bad)
jl
les
outs
mov
(bad)
test
mov
nop
inc
retf
rol
in
inc
inc
test
xchg
jge
das
or
lock
mov
jecxz
sar
push
div
push
and
dec
imul
push
rcr
cli
movs
xor
jb
in
fmul
mov
cmp
mov
push
popa
iret
mov
xchg
repz
dec
jmp
inc
cwde
xor
dec
pop
cmps
dec
in
sub
or
and
mov
push
fs
out
dec
movs
add
mov
ficomp
fist
inc
push
in
mov
mov
mov
js
adc
mov
and
cld
(bad)
dec
fmul
test
int3
or
jbe
push
imul
shl
mov
or
js
jnp
(bad)
sbb
loop
inc
movs
jns
popa
or
(bad)
and
mov
imul
ror
stos
enter
xor
mov
(bad)
xor
push
shl
in
mov
in
dec
cld
fwait
sbb
jne
enter
jmp
xor
lods
pop
popf
or
pushf
pop
push
push
out
rcl
push
loopne
pop
sub
(bad)
pop
outs
mov
adc
xchg
push
xor
std
dec
mov
rcl
cli
add
stc
int3
cmp
fadd
sbb
outs
xchg
sbb
xor
icebp
mov
int3
inc
ret
bound
ret
retf
(bad)
rcl
cli
loope
or
pop
nop
xor
push
push
aas
push
sub
xor
mov
dec
adc
iret
in
sbb
sub
dec
sbb
aad
and
int
sbb
xor
adc
pusha
(bad)
jecxz
push
push
pop
sbb
aam
xor
sub
test
rol
pop
hlt
dec
int3
out
lds
xor
scas
cmps
sbb
and
inc
xchg
mov
mov
iret
fs
push
adc
outs
cli
test
js
push
jb
push
push
es
or
jl
mov
fstp
inc
add
sbb
mov
mov
dec
and
addr16
xor
mov
leave
pop
fisub
mov
cmp
movs
or
mov
jbe
add
xchg
or
dec
push
stos
push
mov
dec
movs
mov
sub
rcr
lods
aaa
sub
scas
xor
aas
or
xchg
ja
dec
in
mov
cmp
pushw
mov
call
daa
(bad)
cmc
repz
aas
xor
pop
dec
or
push
xor
es
cli
movs
push
and
outs
xlat
lods
sub
xor
les
dec
ins
cdq
repz
add
jg
sbb
cmc
xchg
shr
std
push
ficom
rol
movs
into
int
cli
test
pushf
jp
pop
cmp
dec
mov
ret
aam
enter
adc
stos
inc
outs
inc
xchg
cmp
icebp
pop
adc
mov
mov
jbe
test
dec
js
dec
loope
out
and
sub
or
jp
test
xchg
not
aaa
xor
fadd
pop
push
xchg
inc
mov
stc
pushf
sub
imul
sbb
mov
jne
sub
cmp
dec
sub
dec
(bad)
jmp
repz
push
out
adc
or
fwait
or
test
inc
lods
(bad)
pusha
in
dec
mov
sbb
inc
mov
mov
stos
ins
test
call
add
mov
mov
fstp
mov
fist
das
add
cmp
and
test
inc
(bad)
push
inc
mov
cs
mov
sar
or
out
push
mov
dec
test
push
and
outs
mov
js
stos
movs
jp
xchg
pop
sub
xchg
test
dec
rol
mov
fmul
fwait
push
stos
lods
inc
xor
or
add
jle
(bad)
std
loope
xor
jb
arpl
ret
loop
ret
call
(bad)
xchg
aam
xchg
movs
icebp
sbb
mov
into
add
ret
(bad)
sub
pop
mov
push
mov
push
inc
adc
cs
jle
sbb
inc
data16
xor
fadd
(bad)
cwde
mov
jmp
xchg
dec
mov
in
sub
mov
pop
mov
in
xchg
mov
jmp
retf
leave
jns
add
cdq
std
or
popf
js
or
movs
ins
mov
test
pop
lods
out
jnp
adc
call
cwde
ds
push
ins
xchg
mov
cmps
fs
es
mov
jg
mov
jns
bound
adc
sti
push
xor
jmp
xor
movs
jb
data16
shl
addr16
in
iret
push
xchg
mov
icebp
pmuludq
adc
mov
cmp
jl
add
bswap
pop
mov
cmp
cld
shl
pop
and
add
enter
imul
imul
bound
mov
or
adc
or
data16
or
push
cdq
or
lods
test
pop
sub
mov
dec
daa
or
cld
jl
sti
cmp
data16
push
shl
test
mov
jne
loop
sub
mov
not
inc
loop
or
test
dec
add
fimul
jg
mov
rol
add
or
sbb
retf
aam
jge
in
ret
aad
dec
fs
out
repz
dec
aas
stos
pop
lahf
sti
dec
add
mov
push
jbe
jb
inc
adc
shl
es
dec
mov
js
ds
inc
sub
and
(bad)
sub
inc
jnp
fcom
xor
loope
cli
lahf
out
sbb
call
mov
cmp
push
div
cmps
mov
sbb
cmps
mov
ins
mov
lahf
add
pop
mov
sbb
or
push
or
pop
ja
(bad)
in
mov
data16
ret
push
pop
sbb
push
(bad)
cmc
sub
jp
lahf
xchg
bnd
data16
xchg
(bad)
mov
rcr
push
jne
inc
pop
mov
push
dec
ret
jo
pop
cld
(bad)
mov
fcomp
in
push
sahf
dec
sub
aad
mov
mov
call
cmps
inc
in
jo
lock
cmp
dec
mov
push
fbld
xchg
xchg
es
(bad)
into
lock
popa
(bad)
and
or
xchg
xchg
iret
movs
cmps
xor
inc
std
cdq
xor
mov
nop
shl
mov
lock
mov
cwde
mov
xchg
mov
dec
ins
repnz
repnz
cmp
sbb
out
loope
inc
sub
ficomp
(bad)
mov
cwde
or
jle
test
(bad)
pop
and
in
mov
jnp
push
dec
pop
sbb
cmps
loop
pop
popf
(bad)
push
outs
mov
ror
add
in
pop
xchg
pushf
out
out
jg
cld
aam
mov
adc
or
push
sub
sti
xchg
mov
(bad)
icebp
cmps
pop
mov
call
ret
mov
iret
xchg
in
popf
ret
repnz
mov
sbb
mov
ins
jnp
sbb
cdq
jo
pop
clc
xchg
test
dec
push
push
mov
add
mov
mov
repnz
dec
call
jne
cmp
test
jmp
dec
outs
pop
dec
jmp
push
retf
aas
or
pop
cdq
xor
pop
out
push
mov
inc
adc
or
sbb
aas
stos
jle
xchg
(bad)
ds
cmc
cvtpi2ps
add
mov
shl
mov
mov
scas
add
mov
imul
and
jne
cmp
adc
mov
mov
push
and
inc
aaa
das
bound
mov
movs
gs
and
pop
mov
or
jo
ins
mov
pop
xor
fs
aaa
xor
test
dec
cmp
sub
dec
ret
push
and
cmps
push
mov
mov
adc
mov
rcr
movs
pop
sub
add
bound
inc
icebp
sbb
into
adc
and
jno
and
das
out
cmp
icebp
cmp
dec
jae
jecxz
jge
retf
push
push
(bad)
or
xchg
mov
scas
je
inc
test
sub
nop
mov
xchg
cmp
pop
cwde
test
jnp
movs
push
push
pop
mov
pop
xlat
xchg
fcomp
popa
mov
xchg
int3
call
movs
aas
pop
add
call
dec
jle
aas
cmp
loopne
jbe
push
mov
scas
dec
pushf
pusha
push
push
push
or
sbb
xchg
cmp
mov
outs
sar
adc
adc
out
inc
cmp
daa
ret
xchg
fs
loopne
mov
aaa
cld
scas
das
pop
fcmovb
sbb
repnz
repnz
and
xchg
into
xchg
mov
mov
jp
mov
sar
xchg
lahf
(bad)
pop
mov
sub
xchg
jmp
sub
in
mov
cmp
cmp
lahf
dec
or
inc
ror
xchg
inc
lods
cs
pop
lods
mov
pop
xor
jl
mov
cmp
pop
ficomp
stc
(bad)
nop
fnsave
clc
out
jg
mov
popa
in
add
stos
jo
pop
jae
pop
dec
stos
ds
in
jge
sub
push
xchg
cmps
dec
ja
dec
pop
xor
hlt
in
push
sbb
xchg
xchg
jle
pop
imul
dec
and
push
ja
or
call
cli
gs
push
ss
add
sbb
inc
and
dec
cmp
imul
test
pop
mov
test
xchg
(bad)
jo
dec
dec
xchg
test
inc
or
in
sbb
ins
stos
ror
add
mov
jnp
in
call
pusha
pusha
mov
or
jg
xor
mov
sti
lds
pop
cli
sub
arpl
mov
mov
ss
pushf
xchg
nop
ret
cmps
scas
push
pusha
jne
jmp
sub
jne
nop
adc
inc
dec
and
cmp
aas
leave
mov
int
std
xchg
mov
pop
ins
cmp
mov
sub
test
or
fadd
inc
or
(bad)
dec
cmc
dec
push
jge
dec
xchg
iret
jge
xchg
rol
outs
xchg
lahf
imul
fdivr
outs
mul
call
js
jnp
cli
outs
out
jns
xor
rcr
and
xor
lods
rol
jo
jp
xor
pop
cmp
test
push
loopne
addr16
bnd
pop
cdq
(bad)
enter
lahf
js
and
vpandn
add
push
lahf
test
cmps
sub
push
in
xor
mov
das
and
clc
push
jge
sbb
push
addr16
jg
daa
mov
xchg
fwait
adc
scas
add
scas
mov
jne
push
daa
sub
in
je
mov
aam
out
loopne
ja
(bad)
and
xor
das
fisttp
cdq
adc
push
cdq
test
mov
mov
bswap
fcomp
cmp
add
int
dec
cdq
stc
add
adc
pop
sar
loopne
mov
pop
cmp
dec
in
fsub
push
fsubr
pop
mov
lea
mov
movs
sbb
in
add
mov
inc
adc
xchg
sub
mov
cmc
fs
or
inc
popa
sub
dec
sbb
les
popf
xchg
mov
and
xchg
nop
pop
cmp
inc
iret
cld
enter
fnstenv
test
push
adc
fld
mov
daa
inc
ins
sti
dec
in
int3
cmp
fld
test
arpl
mov
mov
aaa
and
mov
inc
add
or
add
lods
jle
mov
inc
js
cmps
js
jmp
push
push
imul
pop
pop
addr16
js
cmp
es
jecxz
setns
and
inc
mov
mov
jl
pop
add
cdq
repnz
or
fwait
and
es
sbb
sbb
popa
push
int3
dec
push
rcr
jbe
jge
mov
icebp
mov
fisttp
xchg
xor
add
adc
inc
std
and
sar
in
mov
push
adc
xor
mov
mov
jmp
adc
imul
retf
xchg
mov
jno
inc
mov
push
idiv
sub
out
jb
mov
repz
adc
out
sbb
loopne
xor
adc
sbb
lds
adc
sub
cs
and
xchg
cdq
and
cmp
jo
pop
and
aaa
pop
cs
sahf
xchg
mov
sbb
in
or
push
call
cwde
retf
js
cmp
adc
inc
and
mov
xlat
mov
and
dec
loope
leave
out
xor
xchg
mov
aad
fyl2xp1
aad
aam
and
mov
outs
rcl
mov
add
in
pop
jnp
shr
sbb
pop
jns
and
xchg
aas
(bad)
call
xor
adc
fdiv
addr16
lea
lds
scas
xor
jns
outs
je
loop
loopne
lahf
leave
dec
jns
stos
jmp
and
(bad)
fnsave
repnz
mov
outs
mov
fstp
dec
sar
xor
mov
popf
aam
jb
push
mov
sti
(bad)
cmp
std
add
adc
and
repnz
mov
pop
xor
call
imul
mov
xchg
xor
loope
dec
in
and
inc
push
(bad)
movs
dec
jmp
sbb
rcl
sub
jmp
fiadd
imul
xor
jbe
cli
popa
cmp
cmp
mov
aam
pop
mov
push
fdiv
jns
dec
push
test
or
scas
push
pop
adc
jnp
adc
push
fld
(bad)
std
sbb
cld
add
gs
aas
or
(bad)
dec
imul
push
jno
pop
jno
adc
(bad)
xor
and
(bad)
sub
(bad)
push
mov
jge
(bad)
daa
pop
cs
sar
aas
test
pushf
(bad)
push
pop
jae
lahf
(bad)
jecxz
mov
clc
and
cs
inc
sbb
ins
in
or
push
jecxz
dec
repz
sbb
or
and
cdq
xor
mov
and
pushf
jg
test
daa
push
xchg
cs
mov
jp
mov
xor
cdq
int3
and
sub
adc
addr16
outs
and
fsubr
xor
inc
adc
jne
data16
mov
int
aad
push
mov
ds
repnz
pop
push
out
ins
enter
hlt
mov
in
mov
xchg
loop
out
jmp
ja
imul
pusha
push
loopne
pop
es
ret
sbb
dec
mov
cmp
push
xchg
jmp
js
inc
pop
cld
int
lahf
test
sub
sub
cmps
imul
addr16
mov
pop
movs
rol
inc
scas
in
retf
sbb
bound
aad
xchg
stc
inc
jns
sahf
mov
shr
sti
movs
push
std
or
cmp
scas
aam
mov
mov
(bad)
into
fimul
pop
pushf
jmp
(bad)
push
push
dec
and
ins
adc
dec
and
(bad)
jae
test
loope
pop
jge
aas
xor
dec
in
out
mov
jmp
stos
fwait
jmp
sub
movs
js
cmp
mov
mov
jmp
add
loope
or
xor
lock
sub
push
fist
ins
pop
(bad)
(bad)
mov
bound
xchg
dec
rep
mov
pop
dec
mov
retf
xlat
fild
or
mov
mov
gs
xor
mov
addr16
jo
push
pop
in
xchg
out
mov
push
fbstp
inc
test
mov
mov
inc
out
adc
in
jp
adc
dec
mov
hlt
mov
pusha
imul
shl
add
jmp
fdivr
daa
and
pop
(bad)
aam
pushf
int3
ins
sub
std
and
cmp
dec
dec
adc
repnz
and
dec
add
cmp
test
push
mov
outs
popa
push
cmc
in
ds
inc
xchg
(bad)
shl
pop
cmp
shr
push
mov
cmps
cmp
or
sbb
xchg
popa
jle
imul
loopne
idiv
inc
test
mov
push
addr16
and
and
ficomp
cli
je
xchg
sahf
aam
xor
mov
enter
push
fldcw
jno
jmp
cmp
inc
push
mov
mov
rcr
and
dec
outs
xor
js
mov
sbb
pop
pop
stos
cs
les
mov
fcomp
pusha
bound
adc
out
in
cmp
push
sbb
sub
pop
dec
popa
mov
push
mov
shl
mov
dec
or
inc
mov
pop
push
adc
aaa
push
mov
daa
stc
push
jbe
lods
or
cmp
pop
or
jmp
add
mov
sub
movs
push
in
cmp
sub
xor
xchg
sbb
movs
pmaddwd
daa
cmps
sub
xor
and
je
cmp
jmp
clc
inc
lds
rol
sub
stos
xor
neg
fwait
(bad)
mov
pop
push
push
adc
sub
jg
dec
nop
pop
cmp
xor
sub
jno
out
out
dec
(bad)
out
add
movs
xchg
sbb
fs
das
jle
icebp
xor
fbld
sub
sub
dec
push
ret
mov
sahf
mov
cmp
gs
inc
push
pop
sar
std
sbb
dec
loope
aam
jb
stc
add
(bad)
and
inc
inc
push
retf
add
xor
inc
and
push
stos
fdivr
cs
adc
pop
dec
add
(bad)
mov
aas
test
jg
loope
jnp
dec
in
xor
cdq
lock
ret
inc
xchg
icebp
add
add
fneni(8087
xor
jl
mov
pop
xor
sbb
push
or
retf
imul
ret
pop
fs
dec
or
mov
and
nop
mov
call
sbb
scas
or
sahf
add
mov
out
jmp
adc
sti
cdq
cmp
popf
jnp
ret
outs
and
xchg
inc
sub
xchg
(bad)
movs
or
fsubr
push
mov
xor
cdq
stc
push
(bad)
jne
(bad)
lods
push
pusha
ja
cmp
pop
in
jge
out
sbb
lds
aas
jbe
in
xor
jae
inc
jmp
xchg
mov
mov
into
jge
das
add
dec
xchg
daa
fisubr
ret
inc
mov
or
icebp
inc
mov
repz
or
icebp
dec
push
mov
ret
(bad)
and
dec
add
cmp
pop
add
mov
lds
mov
fwait
jmp
test
stos
test
mov
shr
xchg
lahf
inc
out
pop
in
cmp
jno
push
lock
dec
repnz
and
jecxz
jmp
iret
mov
ins
in
shl
jns
fwait
push
sbb
enter
in
movs
jo
xchg
or
mov
clc
add
hlt
pop
test
inc
cmp
in
rcl
or
sbb
xor
pop
aas
test
pusha
jae
xlat
ret
dec
cmp
inc
jae
pop
neg
jle
movs
test
and
or
js
imul
mov
ins
mov
mov
(bad)
add
loope
sbb
push
push
stos
shl
jb
sbb
sub
lods
push
popa
ffreep
pop
sub
popa
imul
dec
dec
pop
and
pop
fist
push
adc
xchg
push
popf
push
mov
add
mov
(bad)
pop
(bad)
xchg
jmp
mov
and
add
in
cdq
mov
adc
(bad)
mov
out
(bad)
mov
nop
pop
ret
aaa
mov
ins
outs
aad
ret
pop
cmp
sub
xchg
cld
dec
ret
pop
xchg
std
icebp
adc
and
fst
sbb
ret
push
adc
mov
test
out
mov
pop
enter
adc
in
movs
test
std
retf
int3
pop
mov
xor
jl
data16
push
or
mov
cmp
ins
and
(bad)
cwde
cmp
in
das
movs
push
dec
mov
into
jns
xchg
in
xchg
push
test
test
adc
sub
adc
call
clc
inc
sbb
mov
fmul
(bad)
inc
push
jb
in
int
(bad)
arpl
repz
loop
movs
retf
popa
pop
movs
push
inc
mov
jo
push
push
sub
or
(bad)
xchg
pop
pushf
popa
sub
test
fisub
fs
jae
mov
out
cli
push
jbe
mov
jg
sub
push
jno
push
sub
dec
pop
adc
push
push
gs
ret
fild
mov
sbb
and
fwait
jmp
ror
dec
dec
mov
movs
ret
sub
(bad)
out
push
push
dec
sub
or
add
popa
fisubr
inc
inc
dec
addr16
les
sbb
jne
enter
jno
retf
je
mov
xchg
cmps
adc
cmp
(bad)
pushf
xor
in
cmp
push
ror
jns
dec
ja
adc
push
iret
lahf
mov
aaa
dec
pop
xchg
or
xor
and
mov
and
pop
push
add
movs
cld
xor
test
or
vpmacssdd
xchg
inc
pusha
lea
jne
out
rcr
cwde
xchg
fisubr
dec
aaa
fdivr
jp
outs
and
jnp
dec
add
push
jl
imul
aad
out
stc
lea
sbb
mov
cmp
xor
sub
sub
or
or
add
(bad)
icebp
push
repz
(bad)
jecxz
mov
fmul
dec
aad
scas
mov
dec
sub
int3
add
push
gs
jle
pop
call
pop
push
mov
ret
out
mov
jmp
cmps
stos
cdq
adc
add
mov
loope
mov
popa
or
out
pop
ret
or
in
ds
pop
or
cmp
xchg
dec
test
jns
mov
into
push
and
cmp
out
mov
outs
lods
inc
sub
xor
(bad)
and
and
pop
jmp
jge
dec
iret
push
aam
push
jl
cmp
lea
adc
jb
cmps
idiv
xchg
sbb
push
jns
test
xor
call
dec
push
add
out
int
sub
push
or
jbe
mov
(bad)
add
inc
es
mov
or
xchg
ja
call
cmp
push
pushf
mov
ins
or
mov
pop
cmp
data16
xor
inc
cmp
push
jge
cld
popa
out
jmp
aas
(bad)
mov
jb
cmp
or
(bad)
call
in
psubb
(bad)
pushf
dec
cdq
(bad)
not
dec
jecxz
inc
loop
and
jne
mov
mov
out
mov
pop
lea
add
xchg
in
arpl
outs
gs
out
scas
enter
test
xor
xor
loopne
jno
sbb
movs
shl
cld
inc
(bad)
repnz
sbb
fldenv
pop
(bad)
mov
std
or
imul
outs
retf
dec
fmul
sub
inc
push
pop
stos
scas
push
popf
clc
push
ror
mov
jecxz
adc
inc
mov
in
jl
test
les
loope
xchg
pop
xchg
cmp
arpl
hlt
pop
push
adc
sbb
cmp
cmp
dec
push
push
cmp
and
shl
xchg
(bad)
mov
ins
scas
mov
adc
add
push
pop
cmps
pusha
push
shl
cld
sub
int3
aad
or
out
retf
in
sub
mov
push
push
stc
add
ror
enter
fst
xor
sub
adc
ss
push
rcr
or
mov
mov
sbb
fbld
clc
sahf
dec
cld
push
jecxz
xchg
sub
cmp
xor
pop
shl
cmp
ret
cmp
mov
fcomp
test
sbb
dec
(bad)
in
test
popa
pop
(bad)
dec
cmp
jbe
icebp
xchg
mov
in
sub
inc
jo
in
cmp
jp
xchg
xor
mov
xchg
mov
xlat
scas
(bad)
dec
data16
pusha
cmp
shl
push
mov
icebp
lods
pop
sub
adc
retf
and
sub
leave
cwde
mov
cmp
shl
movs
pop
push
dec
data16
push
add
inc
pop
ds
fdivr
stc
and
mov
mov
stos
push
cmp
call
xor
outs
adc
clc
aas
aaa
xor
dec
jo
mov
int3
sbb
dec
rcl
and
dec
nop
jb
sbb
lods
sbb
jecxz
sbb
loopne
test
pop
inc
push
test
jecxz
out
(bad)
cli
sub
dec
fist
and
ja
scas
lods
or
adc
es
fs
cmps
les
push
jno
lea
int
pop
xor
bound
retf
out
je
bound
add
push
pop
popa
test
pop
jp
sti
sub
test
or
retf
es
jne
nop
mov
fs
and
retf
mov
leave
xor
lods
hlt
inc
and
inc
mov
bound
cmp
inc
sbb
pop
pop
addr16
push
mov
xor
mov
adc
cwde
inc
dec
aad
and
pop
mov
leave
and
sub
mov
cmp
stc
int
sub
add
jmp
lahf
dec
pop
leave
pop
and
lds
movs
lahf
scas
push
sbb
mov
arpl
(bad)
iret
mov
dec
mov
push
sbb
jge
pop
ja
mov
xchg
popf
mov
add
lods
fstp
xchg
test
add
loopne
and
or
bsf
jle
add
mov
adc
ins
xchg
fild
js
idiv
sbb
sub
pop
inc
xor
loop
push
popa
mov
mov
loopne
inc
ret
mov
push
xchg
jecxz
inc
rep
adc
pop
inc
inc
mov
dec
push
(bad)
mov
pop
dec
out
inc
test
movs
shr
movs
lea
and
xor
out
xchg
sbb
arpl
ja
xor
stos
(bad)
je
dec
aaa
or
dec
push
push
dec
xchg
data16
pop
fs
cmp
dec
(bad)
ficomp
or
hlt
jae
enter
mov
call
fist
nop
inc
mov
mov
loope
push
pop
jl
xor
ins
ret
inc
outs
cli
cmp
inc
rcr
ds
lds
add
mov
int
outs
ins
pop
pop
xchg
rol
add
xor
adc
mov
mov
inc
fbld
sbb
mov
sub
xchg
inc
retf
pushf
pop
ss
aad
sub
jne
retf
sbb
xchg
jmp
jp
(bad)
push
sti
loop
sub
pushf
fwait
(bad)
arpl
aaa
mov
or
aam
(bad)
jmp
jecxz
sub
mov
inc
repz
dec
popa
cmp
push
pop
jmp
dec
ffreep
or
arpl
repz
stc
ror
sbb
mov
lea
test
in
out
lods
popa
(bad)
mov
lock
push
imul
or
(bad)
ins
mov
fidivr
jge
pop
xor
mov
mov
frstor
cmp
pop
mov
sahf
fild
test
dec
and
fdivr
stos
push
pop
xlat
mov
outs
dec
scas
jne
mov
mov
sbb
test
sbb
xlat
xchg
xchg
cmp
pop
or
scas
out
or
mov
and
popa
or
ficom
xor
adc
pop
pop
repnz
jns
loop
hlt
or
push
into
cmc
mov
(bad)
cs
or
push
mov
add
outs
jp
push
xchg
ins
(bad)
imul
jo
cmps
or
aas
xor
sub
std
inc
bound
adc
xchg
pop
outs
imul
pop
push
sub
ja
dec
inc
add
mov
add
popa
scas
adc
pop
push
mov
pop
lahf
int
outs
or
jl
cmp
js
push
push
inc
and
pop
sbb
js
jl
mov
and
dec
cmps
xor
or
dec
and
cmp
xchg
dec
std
mov
sbb
jmp
clc
dec
sub
in
stos
gs
jns
mov
(bad)
scas
cli
aas
movs
scas
cwde
dec
sbb
shr
out
push
mov
push
retf
and
fs
xchg
add
cmp
cdq
enter
hlt
sub
pop
fadd
out
in
push
inc
jno
inc
out
call
or
dec
in
ss
fstp
push
sub
adc
mov
inc
pop
lods
add
dec
sub
add
bound
add
and
add
mov
data16
fld
pop
fisttp
sub
cmp
pop
pop
cld
mov
xchg
xchg
jp
push
mov
jbe
sub
stos
mov
cmps
sbb
aam
or
cmps
cmc
xor
pop
mov
add
and
xchg
add
je
sub
sbb
mov
sbb
fcomp
cmps
and
and
int3
je
mov
pop
fstp
sub
adc
arpl
jg
inc
das
les
int3
scas
adc
sub
push
or
gs
pop
mov
imul
jmp
sbb
gs
adc
mov
pop
jp
call
fistp
sbb
imul
mov
scas
mov
or
icebp
adc
lds
xchg
adc
dec
mov
std
dec
retf
mov
mov
jmp
inc
push
icebp
or
test
mov
jl
rol
jmp
or
call
out
mov
test
sub
stos
xchg
mov
mov
out
call
and
fild
jo
jae
pop
mov
pop
pop
jno
cmp
dec
leave
stc
(bad)
xor
out
fcomp
cmps
pop
fs
inc
hlt
cdq
aas
mov
lock
jno
push
cmc
jmp
mov
popa
mov
lods
in
cmps
into
aas
clc
int3
(bad)
mov
mov
dec
imul
cmp
and
mov
mov
ret
es
lock
fdiv
scas
inc
out
xchg
lods
int3
outs
mov
(bad)
or
inc
sti
push
push
in
test
mov
mov
movs
push
push
pop
push
fdiv
dec
aaa
into
add
dec
data16
fsubr
aam
jmp
cmp
jno
cmp
adc
mov
jg
ror
jns
cdq
out
loopne
daa
in
repnz
adc
movs
add
cmps
dec
add
xchg
lods
(bad)
arpl
popf
xor
out
js
repz
enter
xchg
out
fprem1
aaa
leave
in
push
loope
pushf
ror
pop
xchg
cld
ss
jae
aaa
mov
neg
pop
fadd
aas
stc
mov
ins
add
cmp
sub
out
hlt
movs
lahf
inc
xor
pop
dec
jl
push
es
sbb
sub
xchg
fild
loopne
outs
pop
dec
and
xchg
je
and
lahf
(bad)
(bad)
fdivr
adc
cmps
inc
inc
push
dec
jle
and
ja
imul
mov
xchg
test
in
jp
fld
imul
ret
dec
xchg
out
sbb
mov
jge
mov
ds
xchg
fucom
pusha
xor
jl
arpl
jge
fcomp
xchg
std
cmps
daa
arpl
shl
test
dec
bnd
fcom
push
add
xor
lea
addr16
sbb
out
mov
aam
lock
retf
mov
push
ins
leave
add
inc
sti
push
inc
mov
(bad)
dec
pop
jg
adc
ins
jg
push
adc
add
aad
adc
inc
adc
(bad)
hlt
and
push
sub
cmps
dec
cmps
sbb
xchg
mov
es
xor
jns
test
loop
sub
sub
mov
push
mov
pop
mov
js
(bad)
cs
(bad)
lock
xchg
mov
(bad)
cmc
and
jl
add
inc
jne
or
xchg
push
fmul
mov
add
fsubp
add
mov
push
inc
sbb
cmp
je
jne
adc
(bad)
push
push
es
outs
dec
nop
int3
sti
pop
inc
je
mov
outs
push
adc
movs
imul
cmp
or
cmp
ss
movs
dec
imul
xchg
pop
or
into
outs
push
int3
rcl
adc
xchg
and
pop
fcom
xor
shr
mov
and
mov
add
jae
outs
mov
cmps
ret
hlt
loop
sbb
add
push
int
xchg
popa
push
adc
mov
rcr
ss
scas
dec
xchg
imul
push
mov
stos
mov
scas
mov
ins
push
or
or
imul
das
mov
sar
push
popf
cmp
adc
neg
out
shl
scas
imul
mov
(bad)
mov
stos
mov
lea
add
push
push
push
or
arpl
je
out
rcl
sub
push
(bad)
fsubr
loop
jnp
inc
mov
fld
xchg
loop
and
sti
sti
add
mov
mov
movs
push
je
cmp
popf
dec
jne
jp
fcmovbe
stos
scas
outs
cmp
mov
ret
adc
gs
test
push
fimul
scas
sub
mov
push
sub
loop
push
cmp
cs
jp
push
xchg
add
xchg
sub
loop
xor
jle
shl
lods
mov
mov
push
inc
cmc
mov
inc
jge
push
shr
into
in
pop
cs
push
idiv
xor
ja
imul
mov
mov
(bad)
ret
sbb
jle
rcl
xchg
in
cmps
dec
loopne
fisttp
mov
pusha
pop
xchg
loop
lahf
int
ret
push
rcl
mov
add
sub
xor
cmp
adc
fs
xor
in
lea
pusha
call
dec
push
inc
and
add
xchg
psraw
je
and
ja
add
add
add
jno
je
add
or
sub
imul
loop
sub
xchg
loopne
add
dec
stc
repnz
sub
xchg
pop
clc
jo
hlt
dec
cmp
cmp
stos
sbb
cmc
push
(bad)
push
push
gs
cld
enter
movs
mov
inc
arpl
cs
lods
mov
sbb
mov
xlat
das
push
inc
mov
push
scas
lods
jno
jmp
out
mov
gs
or
pusha
dec
xchg
hlt
shl
aam
xor
add
xor
xchg
ret
dec
push
(bad)
push
add
aaa
xchg
lods
fiadd
jnp
call
loop
lods
push
jl
outs
movs
jge
mov
lods
ss
mov
aaa
arpl
cwde
sub
scas
jl
adc
ret
in
sbb
jbe
fisub
movs
add
sub
(bad)
dec
fs
(bad)
in
ss
fdivr
dec
outs
xchg
jmp
mov
mov
dec
cmp
xchg
mov
mov
cmp
mov
fcomp
in
arpl
stc
xor
je
aaa
shr
mov
fadd
sbb
repnz
add
mov
rcl
sbb
jne
int3
mov
sahf
repnz
xor
cmp
adc
mov
aad
pop
jle
jle
(bad)
and
inc
jo
or
scas
xchg
in
fs
adc
adc
pop
add
(bad)
cmps
rcl
sub
push
ins
pop
sbb
imul
pop
fs
push
ds
mov
sbb
or
mov
les
test
movs
movs
cmp
mov
loope
xchg
cmc
cld
sbb
sbb
cmp
pop
cmp
jg
sbb
daa
repnz
push
xor
addr16
xchg
(bad)
div
adc
jg
cmp
push
xor
(bad)
ret
sti
outs
ins
aaa
icebp
enter
sbb
push
dec
cmp
add
out
je
(bad)
outs
jne
jmp
or
clc
add
mov
or
xchg
pusha
std
and
jmp
xchg
push
(bad)
push
dec
xlat
jecxz
jle
pop
rcr
cmp
mov
sub
cmp
mov
mov
push
hlt
aam
test
xchg
jmp
xor
and
es
add
push
xor
ret
jge
xchg
or
cmp
xor
dec
lea
mov
or
cmp
sar
in
cmps
sub
lds
int
mov
sbb
sub
data16
inc
xchg
xchg
out
xlat
stc
outs
out
sub
cmps
inc
and
sti
adc
imul
cmps
lods
aad
and
sub
push
push
jnp
add
jmp
mov
movs
add
jnp
data16
popf
retf
shl
inc
ds
test
fwait
lods
sbb
out
sub
daa
out
pushf
and
ror
outs
pop
pop
out
dec
ret
sbb
std
test
mov
and
ins
pop
xor
ficomp
mov
sbb
fstp
daa
and
mov
and
repnz
inc
mov
mov
jge
bound
cs
ins
fcomp
jo
mov
js
sub
bnd
cwde
aad
or
call
cmp
mov
xlat
sti
dec
icebp
inc
pop
fmulp
loopne
dec
mov
fsubr
(bad)
sbb
or
or
mov
mov
pop
aas
jo
cmc
mov
mov
lahf
ins
pop
aas
(bad)
or
sub
push
or
xchg
and
int3
dec
rcl
fsub
int3
cmp
stos
int
add
inc
sub
push
sbb
mov
(bad)
cs
mov
sbb
mov
loopne
or
out
cdq
in
retf
lods
mov
addr16
add
dec
push
lock
xor
xchg
imul
mov
shl
xor
dec
or
into
outs
add
dec
int
loop
sub
xchg
sub
test
fist
push
dec
and
sbb
jp
popa
push
xor
mov
mov
out
jb
stos
(bad)
out
or
ss
xchg
and
adc
dec
out
push
xlat
xor
fsubr
clc
das
and
popf
int3
scas
mov
loop
sub
enter
out
shl
add
popa
hlt
not
mov
inc
push
dec
cmp
cmp
sahf
cwde
mov
test
inc
mov
jb
or
(bad)
sub
int3
cld
push
or
add
xchg
les
cdq
cmp
out
out
stc
xchg
push
sub
xchg
(bad)
pop
add
movs
jl
xchg
sub
fistp
shr
push
gs
sbb
sub
xchg
movs
adc
out
aas
or
hlt
inc
int
pop
xchg
xchg
fld
loop
in
mov
add
pop
inc
pop
cmp
sub
pop
ret
sub
call
jae
std
out
lods
add
xchg
leave
(bad)
or
pop
xchg
xor
nop
mov
ja
aas
outs
not
bound
xor
out
and
push
add
xchg
sbb
jmp
sbb
mov
scas
test
and
scas
sbb
pop
jb
call
push
pop
push
cmp
in
nop
cmps
xor
stos
pop
dec
pop
aam
mov
test
xchg
inc
and
(bad)
xlat
mov
mov
jmp
cld
and
imul
movs
mov
sbb
mov
mov
clc
jmp
jo
mov
fmul
sbb
fs
sbb
and
mov
cdq
mov
adc
inc
or
and
mov
out
nop
inc
inc
fwait
pop
mov
push
lock
aas
int
fidiv
mov
or
xor
push
and
outs
mov
fs
ins
ds
stos
mov
data16
sbb
push
mov
pop
cs
repz
aaa
xchg
addr16
or
dec
retf
retf
inc
add
dec
(bad)
pop
or
dec
ret
lods
mov
jnp
out
jg
adc
mov
lea
xor
pop
xchg
arpl
shr
and
and
mov
lds
mov
add
popa
(bad)
or
xchg
xor
loop
adc
jne
sti
or
mov
sub
and
jmp
pop
test
adc
xchg
pop
fist
xchg
add
sub
es
sbb
inc
or
sub
push
pop
int
inc
scas
rcr
mov
cmp
xchg
sbb
inc
ss
cmc
mov
jb
ins
ss
cmp
jp
push
imul
sbb
xchg
inc
push
cwde
jecxz
dec
xchg
push
repz
jae
enter
imul
nop
mov
xor
sti
leave
jecxz
mov
xor
stos
pop
xchg
and
in
fsub
jmp
adc
mov
mov
(bad)
inc
cs
jl
(bad)
dec
in
xchg
mov
stos
gs
addr16
sub
jno
jbe
imul
call
(bad)
jae
test
inc
enter
xchg
aam
inc
or
and
jne
mov
ret
xlat
shl
cmp
adc
jns
mov
test
imul
jb
and
(bad)
add
sub
outs
mov
pop
push
pop
pop
(bad)
and
push
pop
in
ficomp
scas
leave
jle
imul
and
adc
iret
jmp
cmps
pop
movs
in
out
adc
cmp
ret
imul
jmp
sbb
pop
mov
std
dec
es
jl
sbb
mov
repnz
cdq
mov
cmp
and
pop
out
dec
sar
add
xchg
cmp
scas
jo
jne
call
mov
inc
xlat
aam
dec
pop
enter
inc
fisubr
jbe
data16
pop
cmp
jl
sub
mov
out
mov
pop
push
(bad)
push
dec
add
pop
cli
sub
add
mov
push
cmp
xor
add
jg
dec
lea
pop
cdq
scas
out
pop
or
dec
push
les
rcr
inc
pop
pop
test
repnz
mov
xlat
xor
push
push
jmp
mov
outs
jmp
and
mov
or
mov
xchg
pop
scas
push
add
(bad)
lahf
(bad)
cmp
pop
into
inc
ins
push
cmp
iret
dec
or
imul
in
dec
xor
sub
repnz
xchg
ja
lods
pusha
mov
sub
adc
test
sub
outs
shl
sub
mov
lock
mov
xchg
or
(bad)
add
cmps
fwait
jmp
mov
nop
push
jae
push
repnz
or
adc
push
jmp
and
test
inc
sub
dec
push
scas
cmp
mov
pop
in
frstor
imul
add
xor
pushf
jmp
cmps
push
or
fisttp
imul
mov
adc
test
ss
lea
sub
xor
adc
arpl
in
xlat
(bad)
iret
fld
outs
mov
sbb
mov
out
test
fsub
out
call
push
loop
pop
push
dec
inc
jb
xchg
push
lock
mov
ror
xchg
dec
call
lds
shl
(bad)
xchg
xor
jnp
jae
jnp
sub
sti
es
push
pushf
adc
(bad)
stc
mov
lock
sbb
ds
(bad)
loope
das
xchg
pop
leave
or
enter
movs
add
jle
lock
mov
xor
daa
ins
retf
lea
add
dec
and
pop
mov
pop
or
push
jg
nop
imul
aas
arpl
jg
and
(bad)
xchg
mov
push
mov
push
jo
hlt
dec
adc
jle
fwait
shr
imul
sub
arpl
pop
loopne
aam
inc
inc
es
leave
mov
jle
inc
clc
leave
(bad)
inc
push
sbb
cmp
dec
ja
push
pop
fist
popa
or
xchg
pop
add
or
(bad)
pop
(bad)
fisttp
inc
adc
daa
mov
dec
push
fisub
ret
fistp
(bad)
push
cmp
add
addr16
mov
fs
call
js
data16
fsubr
and
push
dec
js
arpl
(bad)
add
xor
es
push
dec
imul
pop
rcr
add
cli
lods
stos
pop
pop
pushf
idiv
rcr
jbe
xor
xchg
fwait
setle
mov
in
aam
push
(bad)
cmps
mov
inc
push
cmp
add
xchg
cld
imul
cs
ret
sahf
call
push
pop
sbb
xchg
cli
jnp
in
inc
imul
push
popf
pop
add
inc
loope
cmovne
sbb
xor
inc
loopne
xor
repnz
imul
push
addr16
es
push
clc
int3
or
and
push
sti
retf
push
jb
in
inc
mov
fild
bswap
mov
xchg
pop
mov
pushf
icebp
jbe
out
shl
ins
xor
imul
jp
cmp
aas
call
aad
retf
stos
aad
int3
sbb
dec
push
push
dec
fsubr
push
push
push
push
je
push
neg
les
lods
call
shr
pop
cmp
pop
icebp
xor
mov
lds
pushf
(bad)
mov
xchg
ja
fwait
adc
(bad)
shl
adc
cmp
sbb
inc
push
pop
cmc
cdq
retf
outs
mov
mov
(bad)
aas
repz
xchg
inc
sbb
adc
mov
or
sub
scas
sub
xchg
pop
add
pop
push
or
mov
ja
pop
dec
dec
shl
mov
es
outs
xor
push
shl
ficom
ss
sahf
ins
push
mov
mov
xlat
or
inc
push
idiv
loope
cmp
stc
mov
repz
and
and
in
xchg
add
fist
push
push
dec
add
jns
push
mov
icebp
mov
rcr
jne
cmp
adc
(bad)
stc
dec
movs
push
imul
addr16
and
pop
pop
mov
ins
mov
mov
cli
inc
adc
(bad)
push
mov
and
mov
push
jmp
xor
sbb
jmp
xchg
hlt
out
adc
dec
xor
aam
aam
idiv
cmps
mov
fidivr
imul
jae
clc
xor
ror
out
and
jnp
scas
jae
rol
push
fistp
pop
mov
(bad)
stos
or
mov
add
mov
fdiv
mov
inc
inc
pop
jbe
sbb
(bad)
enter
mov
out
test
inc
xchg
sub
jle
leave
xchg
push
fstp
pop
or
jno
ret
int
(bad)
mov
cmp
mov
mov
loope
mov
jo
lds
sbb
into
bt
or
stos
mov
sub
stos
call
in
rcl
xchg
loop
lahf
xor
in
inc
(bad)
fldcw
adc
and
push
jge
fwait
mov
(bad)
push
push
adc
aam
lgdtd
xchg
sbb
or
pop
lods
retf
pop
mov
(bad)
scas
(bad)
stos
aas
cld
aad
adc
int
push
sub
test
mov
lahf
cmp
nop
jb
or
jne
cwde
cmps
jecxz
fadd
mov
cmp
add
je
imul
push
out
add
pop
mov
pop
sbb
call
and
nop
out
mov
mov
sahf
dec
xor
sbb
mov
and
mov
mov
adc
out
retf
xor
arpl
out
jae
or
xchg
push
imul
mov
stos
adc
or
add
aas
or
popf
jp
bound
cmps
pop
gs
outs
jmp
xchg
dec
nop
xchg
sub
mov
icebp
out
adc
lods
cmps
xchg
into
or
dec
push
inc
mov
out
xor
lods
mov
sti
stos
lock
and
mov
dec
xchg
sub
jb
ja
or
popf
or
jg
adc
xchg
xor
dec
cmp
pop
mov
push
adc
adc
xor
mov
cmp
lock
jle
sbb
enter
pusha
hlt
shl
(bad)
cwde
loop
cmp
jecxz
jl
push
dec
push
pop
and
stos
mov
or
(bad)
xor
pop
xchg
mov
call
push
int3
sbb
mov
int
xchg
std
adc
mov
mov
jbe
dec
jp
arpl
aas
mov
and
enter
cmp
xchg
xor
pop
aas
lea
pop
cli
lahf
pop
add
or
mov
dec
leave
cmp
mov
jae
lds
dec
retf
enter
add
mov
push
(bad)
leave
dec
inc
pop
pop
fisub
fisubr
ja
xchg
inc
jge
iret
mov
(bad)
mov
(bad)
mov
xchg
inc
push
or
and
or
push
lahf
or
adc
lahf
cmps
pusha
(bad)
sar
inc
nop
xchg
out
das
jmp
(bad)
sub
dec
adc
ficom
or
mov
ins
pop
adc
pop
jge
in
in
cmp
outs
mov
repz
dec
dec
test
div
cmp
and
adc
retf
sbb
add
repz
cmps
sub
jge
xor
or
inc
dec
inc
xlat
mov
mov
dec
int3
in
xchg
push
movs
ins
(bad)
ins
cmps
dec
fisub
sbb
jmp
fmul
not
xor
leave
jge
cld
sub
shl
adc
sub
push
and
cmp
jne
retf
dec
adc
stos
mov
popa
loopne
jmp
cmp
stos
adc
and
popf
dec
paddb
pop
or
pop
repz
test
data16
xor
jmp
sahf
test
and
mov
pop
mov
lahf
nop
das
and
jb
(bad)
pop
push
jnp
push
jne
xchg
dec
lds
scas
jbe
ret
or
fidivr
rol
hlt
mov
hlt
not
mov
imul
mov
and
jne
pop
and
into
pop
pop
add
push
aaa
in
add
stos
hlt
retf
mov
push
add
pop
xchg
mov
(bad)
loopne
xchg
mov
mov
js
mov
cmp
pusha
jb
add
fisttp
pop
pop
and
dec
xchg
pop
in
vpshuflw
stc
aad
(bad)
hlt
movs
fcomp
add
xchg
or
push
aas
sub
fdiv
add
mov
xchg
nop
cmp
sub
imul
jle
stc
cmp
or
or
ret
and
add
adc
pop
push
clc
fsubr
lods
movs
fwait
cmp
adc
lds
pop
enter
jmp
js
jo
in
xor
push
aas
push
adc
xlat
ins
inc
rol
fwait
push
retf
push
xchg
sar
add
call
jmp
in
pop
stc
ja
push
mov
hlt
adc
inc
sub
push
das
ss
add
fistp
xchg
or
scas
in
fimul
cmp
push
push
pusha
test
add
dec
push
shl
jo
sbb
push
ja
inc
or
imul
xchg
jb
add
out
movs
pop
jp
jno
ds
imul
in
jne
cli
jnp
sbb
sbb
mov
mov
dec
jnp
inc
cmp
or
repnz
add
sbb
gs
inc
fwait
imul
iret
or
sub
cmp
sub
data16
mov
pop
dec
dec
mov
add
inc
ds
xchg
icebp
cmp
push
add
jmp
xor
push
mov
inc
rol
outs
mov
out
lea
sub
mov
(bad)
leave
sub
int3
(bad)
in
mov
mov
aad
dec
adc
mov
loop
xchg
call
or
jmp
mov
and
or
mov
add
sbb
clc
mov
fld
ret
retf
(bad)
into
xor
cmp
mov
mov
jl
arpl
and
fsubr
sti
sbb
adc
jle
inc
out
cmp
and
add
sub
xor
dec
push
inc
mov
mov
out
fwait
jg
loopne
movs
shl
mov
jb
(bad)
repnz
(bad)
xchg
mov
add
sti
push
sbb
cdq
cld
push
xchg
sub
pop
and
jb
arpl
jp
stos
(bad)
popa
xor
jg
sub
into
xlat
sahf
xchg
cmp
mov
push
jg
add
ret
movs
cvtps2pd
or
mov
test
and
jg
enter
lds
popf
call
gs
sub
push
and
push
and
in
in
outs
jns
inc
cmp
stc
retf
out
out
dec
push
in
mov
sbb
fmul
call
jg
mov
jp
xor
mov
adc
sbb
repz
cmps
aad
jns
test
xchg
xor
ss
add
fisttp
mov
into
mov
lods
ret
jmp
dec
(bad)
sar
fisttp
or
mov
mov
dec
inc
pop
mov
ret
pushf
jno
sbb
sti
inc
(bad)
adc
fistp
cmp
lods
cli
xor
in
lods
fimul
aaa
push
lods
(bad)
sbb
pop
sub
jle
gs
fwait
mov
dec
clc
aad
scas
inc
sbb
out
hlt
stc
call
cwde
icebp
xchg
inc
ja
mov
cdq
jae
sbb
jg
dec
push
movs
push
sub
icebp
fwait
mov
xchg
(bad)
in
jno
in
adc
xchg
jle
add
jnp
dec
cli
mov
add
cmp
sahf
es
adc
xor
mov
jb
call
ds
cmps
jne
sbb
fst
pop
and
dec
loopne
mov
call
mov
mov
inc
shr
push
arpl
cmp
cmp
cmp
pop
iret
fld
stos
or
cmps
pop
push
push
loope
mov
mov
mov
ins
test
dec
xchg
mov
xor
mov
rcl
test
shl
cli
cld
push
jecxz
loopne
in
ja
and
sub
mov
hlt
data16
iret
pop
pop
scas
or
arpl
cmp
out
lock
clc
sbb
jp
dec
clc
xchg
or
retf
in
neg
jp
sbb
add
mov
mov
jl
push
retf
scas
out
push
sub
loope
and
(bad)
xchg
(bad)
inc
(bad)
fisubr
and
sub
outs
jae
push
cmp
add
ss
sbb
repz
fstp
out
imul
push
add
cmp
adc
and
adc
std
adc
jmp
ins
xor
pop
adc
sar
xor
push
mov
test
jb
pusha
data16
and
adc
stc
and
push
mov
push
or
cwde
imul
xor
gs
jae
dec
test
push
fidivr
loope
inc
sub
sub
mov
cmp
jg
pop
sub
jge
adc
xor
int3
cdq
jg
mov
test
outs
out
cs
push
xchg
ss
into
inc
out
push
sub
sub
loopne
lods
sub
in
lahf
sub
out
sub
pop
(bad)
xchg
jb
(bad)
retf
xchg
fstp
pop
lods
ffree
xlat
dec
jl
cdq
mov
or
jne
pop
fwait
out
rcr
jmp
add
call
pop
nop
mov
mul
inc
dec
loop
scas
fld
sbb
cwde
(bad)
jmp
sub
jne
ficomp
iret
pop
cli
or
imul
push
lods
fwait
mov
push
mov
mov
mul
ss
pusha
stos
ss
pushf
outs
mov
mov
jmp
aad
je
int3
les
push
sub
(bad)
xor
shl
popa
mov
mov
or
ret
or
push
xchg
jnp
sbb
shl
imul
mov
ss
push
push
fdivr
add
mov
jmp
es
mov
sbb
arpl
cmc
xchg
imul
jb
repz
iret
cmc
cmp
cvtdq2ps
sahf
imul
inc
jb
inc
jecxz
pop
sub
fidivr
sbb
mov
jmp
mov
xor
jmp
push
xchg
push
mov
stos
and
jbe
scas
mov
pop
xor
inc
daa
cmps
imul
sbb
daa
ins
ja
leave
push
mov
jb
adc
mov
pop
sub
xor
imul
mov
add
fs
sub
mov
retf
pop
and
add
rcl
hlt
push
mov
test
out
mov
xchg
mov
xchg
push
fst
inc
xchg
push
or
mov
rcl
data16
fld
fisubr
xor
in
pop
imul
ret
xchg
sbb
push
test
mov
jmp
aaa
test
jl
ja
xor
dec
fld
sub
popa
rol
retf
popf
lods
pop
dec
bound
(bad)
lods
(bad)
jmp
or
jecxz
rcl
add
lods
inc
xchg
and
icebp
imul
jecxz
int3
sub
(bad)
call
into
imul
iret
outs
mov
and
mov
fidiv
in
shr
pop
div
xchg
xchg
xchg
sub
cld
xchg
rcr
out
dec
ins
jle
sub
push
xor
aam
and
and
daa
push
mov
ins
hlt
jne
(bad)
jbe
addr16
mov
xchg
mov
and
sbb
adc
repnz
lods
lock
jb
jle
xor
mov
stc
and
push
jns
mov
jae
shr
xlat
xchg
mov
test
ins
loopne
scas
scas
add
mov
mov
cmp
sub
jl
loop
in
mov
(bad)
add
jmp
pop
cwde
ds
pop
sbb
adc
stos
es
jmp
call
ds
jl
cmp
cmp
push
mov
jb
dec
mov
fs
add
dec
add
dec
xchg
retf
rcl
push
xchg
jge
je
fmul
(bad)
cmp
clc
and
(bad)
jmp
or
mov
ficom
ins
data16
cmps
sbb
in
dec
xchg
jnp
lea
gs
(bad)
aad
scas
aam
pop
aaa
mov
adc
sbb
cmp
in
neg
in
mov
int3
push
dec
test
ins
int
inc
rcr
mov
pop
rcr
pop
lahf
add
mov
lods
ret
pop
mov
out
jo
inc
cmps
sub
mov
imul
sub
push
pop
push
loope
loope
add
outs
jns
and
call
inc
adc
push
pop
mov
out
adc
push
fdiv
and
adc
ja
pushf
out
cmp
(bad)
ja
push
pop
inc
dec
int3
pop
rcr
xchg
movs
mov
ss
cmc
loopne
pop
or
push
jp
mov
add
adc
call
gs
cli
cdq
xchg
not
jecxz
and
popf
mov
push
push
(bad)
pop
in
push
dec
dec
(bad)
fisubr
dec
loop
scas
stos
mov
aaa
add
xchg
mov
icebp
mov
out
add
lock
xor
outs
jg
jp
out
add
sahf
dec
mov
mov
ja
xor
cmc
mov
bound
in
push
popf
(bad)
fnstcw
pop
adc
mov
inc
test
adc
cmc
dec
popf
and
rcl
jle
pop
ins
in
lahf
das
sub
pop
loopne
into
sub
or
out
mov
sub
or
lock
call
js
pusha
js
mov
daa
ret
shl
jne
(bad)
jne
mov
inc
sbb
dec
mov
jl
(bad)
(bad)
icebp
xchg
push
mov
pop
cwde
imul
xor
outs
jb
mov
mov
clc
xor
sar
inc
(bad)
mov
adc
xor
mov
push
loope
(bad)
jnp
mov
cs
ret
ret
mov
rcl
mov
jns
jnp
jecxz
pushf
xchg
test
push
pop
outs
add
(bad)
sbb
push
xchg
pop
movs
jle
push
test
outs
mov
mov
int3
xchg
sbb
mov
pusha
daa
sti
imul
cmovne
out
xchg
fidiv
add
sub
out
test
outs
xchg
jnp
xchg
jecxz
cmp
repz
enter
inc
inc
rcl
(bad)
call
adc
rcr
xor
es
out
in
imul
not
fld
fld
test
xchg
stos
or
ficomp
add
scas
jg
mov
lods
arpl
inc
xchg
sub
mov
cmp
push
retf
idiv
pop
mov
add
mov
dec
out
mov
cmps
cwde
jno
mov
fistp
(bad)
retf
push
or
test
fst
push
xchg
xor
dec
ins
xor
or
sub
not
inc
xchg
mov
mov
add
rcr
mov
sar
and
sbb
push
daa
and
enter
dec
mov
pushf
mov
xor
imul
repnz
xor
inc
mov
lock
jae
sub
adc
lods
das
xchg
or
push
adc
ror
adc
fwait
imul
js
add
leave
hlt
mov
or
clts
and
adc
or
lahf
and
out
inc
stos
jmp
repnz
xor
mov
push
sbb
push
js
add
inc
jl
dec
mov
mov
sub
sub
inc
inc
pushf
dec
faddp
mov
fisttp
jae
xor
dec
in
inc
cmp
push
cmc
inc
fild
jnp
(bad)
cmps
sbb
adc
mov
sti
icebp
cmp
(bad)
mov
std
mov
outs
add
fmul
adc
fmul
in
adc
test
(bad)
mov
dec
push
mov
xor
xor
mov
xor
movs
dec
test
jge
lock
xchg
or
mov
mov
adc
(bad)
sub
lods
push
sub
push
dec
fnstcw
f2xm1
pop
retf
and
cmp
xor
retf
xor
retf
(bad)
xchg
aad
dec
jle
jmp
add
dec
jl
sbb
or
mov
movs
adc
scas
push
ss
movs
lods
push
pop
cmp
lods
push
mov
call
mov
mov
xchg
sub
and
stos
imul
fwait
adc
mov
xchg
pop
(bad)
movs
or
int
les
cmc
call
push
cmps
dec
in
mov
cs
xsavec
mov
pop
pop
mov
mov
dec
sub
lods
clc
ds
mov
jmp
loop
add
daa
pusha
dec
aaa
mov
xchg
fiadd
mov
cld
arpl
popa
add
add
jno
sahf
push
ds
int3
out
push
xor
or
mov
clc
fist
cmps
ror
push
shl
arpl
idiv
jl
jecxz
inc
cmc
out
sub
stc
inc
xor
aas
xor
fwait
mov
imul
lock
add
cmps
jmp
shl
sub
out
cmps
call
and
movs
jecxz
data16
fucom
adc
call
rcl
pop
jae
stc
mov
data16
test
call
push
imul
push
push
test
les
psubusw
movs
push
cli
int
dec
push
jns
cli
(bad)
je
xor
adc
mov
sub
xchg
retf
retf
ds
jg
cmp
fistp
(bad)
mov
push
mov
xchg
dec
sbb
xchg
iret
fisubr
xchg
outs
in
and
lds
call
add
dec
mov
loope
push
and
mov
fwait
outs
rcr
mov
add
call
ret
addr16
shl
dec
dec
xor
xchg
cmp
xchg
mov
mov
pop
inc
shr
mov
adc
test
inc
mov
sbb
aad
mov
fcom
push
sbb
shl
fimul
das
popf
stos
iret
ret
int3
sub
mov
sbb
dec
jmp
dec
out
mov
arpl
nop
ins
cmp
imul
leave
adc
xchg
mov
dec
sbb
retf
fs
mov
add
xchg
ss
das
inc
out
fidivr
jnp
jg
fwait
sub
jge
mov
scas
inc
mov
inc
pop
test
(bad)
jne
out
dec
(bad)
scas
xor
mov
adc
mov
data16
and
sbb
xchg
lods
out
cmp
aas
pop
dec
fadd
xor
cmc
ror
aas
test
out
ins
and
test
xor
(bad)
mov
stc
push
xchg
sbb
lods
and
mov
add
data16
mov
outs
lds
push
mov
leave
xchg
push
pop
inc
fisubr
test
call
outs
or
(bad)
cmp
inc
xchg
mov
or
cmp
xor
mov
popa
sub
(bad)
(bad)
jge
in
retf
xchg
jns
popa
adc
inc
dec
pop
lahf
xchg
out
mov
jno
mov
hlt
bound
imul
into
pushf
gs
stos
test
xchg
xchg
loop
arpl
cmps
ins
popf
aad
add
(bad)
lods
out
sbb
loopne
outs
jp
ja
inc
ffree
dec
lods
leave
out
cmp
sub
mov
in
xchg
pop
sub
mov
ss
enter
jae
in
or
cmp
das
dec
mov
cmps
sar
test
dec
mov
adc
daa
daa
loope
fs
adc
loopne
outs
aam
mov
mov
push
cmp
imul
sbb
or
imul
add
stos
enter
rol
and
ss
push
stos
add
xor
xor
inc
mov
cmc
jmp
adc
pop
xor
mov
pop
jb
sub
mov
add
popf
(bad)
out
adc
(bad)
or
imul
(bad)
cmp
enter
les
mov
add
xchg
push
gs
popa
jne
xchg
dec
jbe
(bad)
jmp
cmps
out
bound
jae
mov
push
ins
xchg
dec
mov
(bad)
adc
imul
pop
(bad)
mov
sub
dec
mov
inc
lea
ja
push
es
xchg
and
mov
sbb
fld
inc
popa
lea
dec
jno
ret
xor
add
aas
push
adc
jecxz
jle
push
fld
inc
retf
cmp
cdq
dec
jmp
ret
imul
fidivr
jo
mov
imul
mov
and
movs
cmp
bound
add
and
pop
xlat
lahf
add
jmp
cmps
xor
or
movs
popf
mov
adc
push
pop
les
or
stos
xchg
loope
ins
sbb
pop
mov
jnp
test
mov
xchg
pop
mov
and
jne
es
sahf
xchg
imul
test
xchg
adc
les
into
sbb
dec
int3
lock
jge
movs
and
fs
dec
and
mov
mov
push
mov
retf
sbb
shr
cmp
test
fwait
mov
xchg
xchg
pop
mov
outs
in
push
push
adc
push
cmp
int
out
pop
adc
movs
ds
js
dec
sar
dec
cmp
dec
ins
je
lahf
fwait
cmp
ss
jbe
mov
lock
mov
adc
fcmovne
lods
mov
inc
push
pop
aam
inc
ror
das
jnp
adc
jbe
jge
xchg
xchg
pushf
cwde
mov
xor
pop
xor
pop
inc
mov
cmp
repnz
add
xchg
mov
in
repnz
retf
dec
call
xchg
cs
mov
loopne
mov
mov
inc
rcl
xor
out
cmp
lock
cmc
mov
push
sub
push
test
loop
in
mov
rcl
dec
cs
and
popa
xchg
jl
jb
clc
cmps
dec
sahf
loope
push
retf
cmc
loopne
ds
int
fistp
push
movs
push
mov
mov
fs
scas
inc
cmp
xor
sbb
cmp
jl
mov
mov
ds
es
outs
xor
clc
mov
push
sub
outs
xor
ins
mov
mov
out
lea
daa
pushf
outs
xchg
jnp
sbb
push
mov
ret
add
ins
xlat
out
ja
test
add
cmp
out
pushf
dec
aam
jb
mov
sti
mov
add
pop
inc
aad
mov
push
(bad)
sti
push
outs
test
push
sub
pusha
pop
inc
scas
push
mov
das
cmps
mov
shl
imul
movs
ins
fst
test
pop
loopne
cmps
mov
arpl
clc
in
cmp
ins
xor
push
mul
sub
outs
xcrypt-ecb
cmps
into
jecxz
jmp
mov
adc
add
aaa
pop
mov
scas
or
jl
(bad)
(bad)
mov
aam
jle
(bad)
dec
out
xchg
cli
mov
fcomp
jns
les
push
inc
lods
mov
pushf
shl
adc
mov
cdq
pop
sbb
(bad)
aam
jno
pop
sbb
adc
stos
dec
arpl
dec
pusha
in
popf
nop
(bad)
mov
mov
call
mov
mov
or
or
daa
cmps
xor
inc
xor
and
test
pop
(bad)
inc
and
ds
imul
cli
sbb
lahf
mov
(bad)
fcomi
test
in
mov
inc
out
xor
cmps
adc
push
mov
dec
int3
push
retf
dec
dec
sbb
stos
sub
leave
lds
or
aas
ret
jb
jb
jp
cmps
pop
sahf
xchg
push
mov
add
pusha
test
ret
jge
jnp
jp
arpl
mov
mov
mov
addr16
call
retf
(bad)
ss
push
movs
lods
xchg
mov
test
or
mov
push
out
sub
ficom
scas
(bad)
cmp
(bad)
movs
loop
(bad)
arpl
out
and
test
sbb
add
(bad)
scas
int
pop
sub
lods
push
sahf
sbb
inc
fild
mov
mov
mov
hlt
jne
inc
(bad)
cli
daa
std
mov
jbe
sbb
push
adc
popa
pusha
js
(bad)
cmp
push
cmp
cmp
cmp
mov
call
and
imul
jno
xchg
push
and
add
std
and
mov
in
dec
shr
sub
cmp
js
pop
cmp
or
add
loope
sub
jge
ins
sub
fild
inc
and
dec
or
cmp
lea
add
sti
cmps
out
outs
test
jge
cmp
stos
stc
inc
mov
nop
pop
repnz
and
popa
push
dec
aas
lods
out
xor
push
cmp
shl
in
cmc
out
lods
sub
ror
push
and
shl
push
repnz
imul
pop
push
fisubr
arpl
jb
fcom
int
enter
pop
out
add
mov
xchg
xor
sub
ret
aaa
mov
xlat
cmovs
rcr
mov
xchg
push
mov
add
pop
cld
jge
movs
imul
in
jmp
fwait
in
shl
call
and
xor
imul
mov
test
dec
mov
cs
in
dec
push
mov
xchg
retf
sbb
or
stos
rol
push
outs
iret
jmp
sub
adc
cmc
xlat
gs
xor
xchg
in
inc
(bad)
cmp
sub
pop
shl
or
test
ja
sbb
into
xchg
lahf
ret
cs
fnsave
sub
jmp
add
xor
and
arpl
cld
punpckhbw
dec
pop
cmp
fisubr
sub
jae
pushf
jnp
dec
xchg
dec
add
lods
inc
sub
(bad)
xor
push
cdq
add
jecxz
popa
push
xchg
inc
push
movs
aad
pusha
mov
push
and
pop
loopne
adc
(bad)
jnp
rol
pop
inc
(bad)
fbld
xor
sub
xor
jnp
retf
xchg
test
fisubr
cwde
fiadd
ja
and
sub
rcl
adc
xor
js
aam
xchg
mov
sbb
inc
pop
lds
xchg
data16
xchg
sbb
xor
push
dec
xchg
xchg
inc
lock
or
or
aam
jg
aad
jp
mov
out
addps
pop
aam
pop
aam
retf
xlat
xchg
retf
adc
mov
adc
mov
adc
xchg
sub
push
dec
sahf
retf
fwait
rcr
bswap
add
aad
in
fnstenv
lahf
jge
cwde
loop
cld
and
sub
mov
dec
dec
retf
add
xor
lea
pop
test
jnp
ret
ret
dec
rol
push
or
push
lods
pop
pop
inc
inc
cmps
xor
adc
inc
or
loope
lods
ret
mov
mov
popa
ins
dec
and
mov
cdq
ret
push
xchg
push
out
pop
dec
fld
push
inc
pop
cld
lds
mov
pushfw
jle
cmc
popf
and
xor
adc
jmp
shl
aas
ins
out
push
fld
pop
cmp
in
test
leave
push
add
push
ret
inc
pushf
add
cmp
inc
and
xor
iret
cmp
imul
stos
es
les
pop
dec
mov
mov
cs
dec
ret
pop
scas
jno
or
sub
idiv
xlat
mov
jmp
in
add
jo
jmp
stc
adc
dec
bound
(bad)
movs
fnstsw
sub
call
ds
dec
xor
push
(bad)
add
div
fcmovnbe
mov
mov
sub
retf
test
iret
sub
inc
fucom
das
dec
jne
pop
idiv
inc
aas
(bad)
cmp
je
jp
jg
imul
pop
mov
ds
repz
xor
mov
and
icebp
das
(bad)
mov
dec
or
and
popf
stc
push
xchg
mov
push
ds
dec
adc
pop
add
inc
std
fnstenv
shl
sti
call
cmps
xlat
jb
stos
sub
stos
dec
outs
mov
in
inc
aaa
and
push
std
jne
cmp
jmp
sub
shl
nop
addr16
dec
jecxz
(bad)
cdq
loop
dec
out
scas
and
es
push
and
xor
or
das
xor
adc
sub
lea
je
xchg
daa
aad
mov
sbb
ret
rcl
clc
fdivr
adc
scas
lods
push
cmps
xor
test
pusha
cs
mov
push
hlt
adc
mov
push
fisttp
dec
fwait
aas
add
fmul
gs
and
mov
out
dec
and
out
mov
dec
pusha
mov
push
push
xor
push
ret
jl
xor
stos
les
repz
ret
dec
jge
or
sbb
jl
mov
jecxz
imul
js
cmp
int
xor
loopne
pop
(bad)
xor
frstor
test
js
into
lds
adc
jl
orps
cld
outs
mov
push
pop
dec
inc
shl
add
(bad)
cli
jnp
rcr
cdq
call
xor
and
jmp
movs
and
sbb
cli
(bad)
retf
mov
ss
lea
sbb
cli
inc
ret
std
movs
int3
mov
sbb
xchg
fild
ja
jmp
mov
not
mov
sub
hlt
dec
mov
and
xor
mov
jb
and
mov
xlat
ja
inc
cmp
or
and
jo
mov
mov
imul
loop
mov
sbb
lahf
fprem1
pop
xor
and
loopne
into
(bad)
int
out
sti
enter
stc
push
(bad)
push
dec
and
stc
push
pop
jns
pop
leave
sbb
mov
cmp
out
je
outs
inc
sbb
mov
inc
mov
in
rcl
jnp
fidiv
push
inc
and
iret
xor
or
fcom
div
and
push
es
adc
int3
push
aad
adc
fs
hlt
add
out
cmc
inc
sbb
xor
mov
sub
push
pop
call
es
cmps
xor
sub
push
mov
pop
xchg
cmp
cs
xchg
cmp
or
dec
jmp
mul
les
cmp
repnz
rcl
stos
(bad)
jecxz
jb
jmp
out
clc
lods
call
push
stos
mov
jmp
jle
stos
ret
out
xchg
mov
fstp
icebp
fs
adc
aad
mov
loopne
mov
push
inc
inc
adc
mov
shl
mov
pop
sub
jns
loope
imul
jae
jp
add
call
(bad)
mov
call
ficomp
ds
xchg
hlt
shr
mov
mov
dec
mov
fstp
xor
jbe
push
enter
or
int3
mov
shl
jne
dec
hlt
test
fild
push
cmp
inc
xlat
adc
push
fcomp
jns
mov
ja
mov
ins
ds
cmp
jno
xor
shl
and
cmps
xor
fsubr
xchg
push
sub
rcr
cmp
xor
push
mov
inc
sar
jmp
(bad)
jns
scas
xor
add
adc
xor
dec
jmp
addr16
xchg
xor
mov
jge
mov
jmp
sub
cmp
fmulp
std
int3
cwde
out
add
xchg
pop
fs
test
xchg
push
inc
lock
int3
movs
ins
xor
pop
dec
sbb
cmc
aam
or
cmp
jo
lock
inc
retf
add
test
add
rol
(bad)
jns
rcr
pop
(bad)
sub
add
pusha
out
or
xchg
or
dec
das
jne
cmp
adc
xchg
push
mov
inc
or
loopne
cmps
mov
jne
inc
add
gs
jae
xor
adc
adc
dec
fild
mov
hlt
test
mov
sbb
es
cmp
cmp
(bad)
mov
add
add
jns
cmp
bound
cmp
(bad)
cmp
cmp
mov
and
mov
cmp
pushf
sub
sub
dec
addr16
jmp
pop
add
mov
fidiv
and
mov
add
push
xor
lahf
not
push
fstp
xchg
jae
sbb
pop
shr
popa
test
popf
mov
adc
pop
and
imul
cwde
aaa
dec
xchg
mov
fist
cwde
xchg
and
cdq
(bad)
mov
adc
sub
sub
in
dec
loop
fidiv
nop
movs
out
test
rcl
xchg
jmp
sahf
out
sub
dec
dec
sbb
adc
in
das
inc
push
jbe
ss
sbb
ins
daa
ret
into
jecxz
dec
aad
inc
xor
mov
test
and
mov
sar
ss
sbb
add
cmc
mov
or
repz
retf
push
add
lock
js
jle
test
mov
outs
leave
add
sbb
iret
push
hlt
mov
xchg
je
push
js
cmps
adc
lock
addps
(bad)
jno
es
push
jnp
in
push
and
inc
imul
xchg
jp
mov
aad
mov
test
xchg
add
add
mov
mov
aas
and
cli
push
or
mov
hlt
pop
sbb
push
out
jne
mov
xor
mov
sbb
sub
dec
fisttp
mov
arpl
popa
cdq
shr
movs
jecxz
(bad)
xor
push
push
mov
stos
idiv
cli
pop
inc
scas
push
add
mov
(bad)
jmp
jecxz
sbb
xchg
jecxz
jno
fist
dec
mov
adc
jae
repz
ss
mov
gs
mov
sub
push
jle
jl
jae
cdq
add
pop
icebp
(bad)
lods
lds
sbb
int
inc
pop
jmp
or
mov
cli
fadd
neg
xor
xchg
fstp
xlat
je
xchg
mov
fwait
jnp
cmp
push
xchg
mov
push
std
leave
into
lds
dec
mov
mov
inc
leave
pop
add
add
ja
jge
hlt
dec
retf
repz
mov
lock
test
int
xor
ja
add
adc
aaa
outs
or
or
aam
cs
aas
sbb
xchg
cmp
jb
mov
and
jb
test
push
(bad)
je
jecxz
push
push
push
and
fdivr
aas
loopne
pop
pop
mov
pop
sbb
pop
push
movs
fadd
or
shl
aaa
repnz
pop
mov
outs
ret
adc
fisttp
adc
addr16
pop
loopne
icebp
fidivr
xor
or
call
dec
push
dec
dec
hlt
cld
sub
sub
outs
or
cli
shr
inc
jb
adc
out
nop
push
imul
fwait
cs
inc
fcomp
or
push
mov
sbb
push
inc
idiv
pop
xor
jmp
(bad)
xchg
adc
lahf
sbb
pop
ss
or
sbb
mov
dec
in
jns
mov
add
pop
or
or
mov
jle
pop
ins
out
sub
adc
inc
sbb
adc
pop
cdq
fnstenv
sub
(bad)
nop
lock
ss
add
lds
call
mov
jno
popf
int3
into
mov
and
mov
loope
cwde
mov
leave
jmp
push
push
das
enter
adc
outs
xchg
adc
sbb
icebp
and
inc
xchg
mov
arpl
dec
and
retf
or
lods
dec
jns
loop
ins
repnz
xchg
lds
sbb
cmp
mov
loope
cli
out
pop
stos
pushf
enter
jmp
sbb
cmp
push
test
jp
pop
inc
cmp
xchg
pop
and
inc
cmp
pop
hlt
sub
mov
dec
pop
iret
ss
loop
sbb
or
cmp
mov
inc
scas
xor
(bad)
(bad)
sub
int3
jbe
sub
xchg
push
cmp
adc
jecxz
outs
es
inc
jno
shl
add
cmc
aas
les
add
and
ret
jp
hlt
sbb
cmp
cmps
add
push
push
loopne
xchg
das
stos
in
leave
mov
or
repnz
std
inc
xor
sar
aam
or
mov
in
jae
and
in
scas
sub
shl
add
inc
add
retf
mov
mov
mov
jge
mov
dec
enter
cmc
cmp
mov
or
mov
mov
jmp
mov
aam
jb
push
xchg
or
lock
push
inc
inc
std
not
jge
out
mov
adc
(bad)
sbb
movs
movs
pushf
add
fild
mov
sbb
add
aas
outs
or
pusha
fisubr
hlt
pop
(bad)
(bad)
adc
outs
sub
mov
cmp
cmp
sbb
inc
stos
mov
jmp
xchg
push
icebp
idiv
stos
pushf
mov
or
ds
inc
and
inc
push
or
sub
shl
adc
ret
jecxz
mov
sbb
mov
push
xchg
xchg
mov
scas
pop
mov
ss
mov
sub
mov
mov
dec
iret
mov
jne
aad
call
jne
ins
mov
ror
jecxz
fcmovnb
xchg
pop
outs
les
pop
out
adc
dec
sub
adc
xor
imul
mov
scas
push
mov
aam
arpl
int
cmp
sub
jns
push
adc
arpl
(bad)
xchg
xchg
sub
scas
cs
lock
add
fnstsw
cmp
pop
test
sub
sub
fwait
es
dec
popf
das
fcmovu
test
inc
push
xchg
fmul
movs
mov
fbld
cld
fcmovb
aad
pushf
jno
test
test
mov
stos
fsubr
aaa
mov
pop
xor
(bad)
sbb
jmp
cdq
pop
xchg
out
out
xor
and
outs
sub
jmp
int3
xchg
push
xchg
shl
out
adc
mov
mov
test
cdq
pop
push
imul
aam
mov
hlt
inc
(bad)
cwde
inc
out
les
push
es
mov
push
dec
mov
dec
inc
mov
movs
fmul
jns
(bad)
ror
push
mov
ss
pop
jae
or
jmp
aaa
imul
and
xchg
sbb
pop
gs
sar
ins
sar
stc
stos
shr
out
and
mov
inc
nop
lds
sbb
fs
cdq
cwde
push
or
(bad)
out
lea
dec
shl
dec
daa
pop
loope
cdq
sbb
bound
retf
loope
pop
nop
je
sbb
jbe
jmp
xor
cmps
popf
cli
int3
repz
cmp
inc
stos
imul
jecxz
leave
fsub
xchg
and
sbb
int
inc
retf
jecxz
inc
mov
out
lds
inc
gs
les
jp
test
retf
mov
sub
xchg
or
push
stos
mov
sbb
fcom
adc
in
imul
dec
popa
jg
pop
(bad)
test
mov
ins
pop
shl
and
je
mov
(bad)
aam
mov
or
fidiv
and
pop
dec
mov
int
pop
dec
sub
mov
and
dec
repnz
and
dec
jne
cmp
jbe
inc
ret
call
xchg
dec
outs
cmp
xchg
popf
adc
leave
scas
xor
and
adc
hlt
push
mov
lods
aad
lea
push
or
jbe
and
xlat
in
retf
movs
push
push
xchg
stos
push
pop
(bad)
jno
movs
imul
jne
and
jge
fs
mov
je
push
daa
xchg
and
(bad)
outs
ja
inc
xlat
sbb
lahf
lock
push
mov
cmp
push
sub
push
cdq
nop
(bad)
arpl
mov
sub
repnz
xchg
addr16
fild
pusha
dec
int3
or
push
cmc
jmp
dec
add
and
outs
inc
lea
fadd
in
ss
xor
xlat
into
mov
sub
cwde
and
lea
inc
mov
pop
je
add
stos
mov
inc
dec
cmps
bound
(bad)
hlt
sahf
je
arpl
les
xchg
jecxz
push
fimul
lds
sub
mov
mov
xchg
cwde
mov
mov
add
cmps
inc
xchg
call
in
pop
bound
aaa
lods
out
and
iret
mov
out
pop
shr
enter
dec
xchg
mov
sub
daa
fidivr
mov
sub
pop
lds
les
retf
mov
xchg
(bad)
adc
daa
push
enter
shr
adc
sbb
jno
and
push
(bad)
xor
das
fwait
xor
cmp
rol
mov
pop
jo
not
jp
dec
mov
outs
sbb
add
js
xor
retf
push
repz
mov
cmp
mov
xor
inc
loopne
pop
test
mov
stos
or
pop
mul
sbb
sbb
xchg
xchg
sbb
xchg
sub
xchg
jmp
fcmovbe
(bad)
and
xchg
ja
xchg
and
mov
leave
stc
ror
repnz
sub
add
jbe
push
fs
scas
clc
int
add
pop
jl
push
mov
(bad)
sub
div
mov
call
in
int
jg
mov
icebp
stos
test
push
out
mov
mov
dec
cwde
adc
pop
fstp
adc
lods
xor
jmp
jmp
xchg
jbe
lods
sub
fnstenv
fadd
imul
loop
icebp
mov
or
dec
jg
retf
adc
sub
(bad)
adc
cmp
inc
dec
mov
cmp
mov
xlat
dec
pop
push
adc
mov
mov
ja
in
xchg
arpl
mov
outs
mov
std
sub
mov
adc
mov
mov
cmovl
push
movhlps
aam
pop
fstp
sub
mov
pop
xchg
sub
stc
daa
cmps
cwde
cmps
into
dec
(bad)
cmp
jmp
arpl
dec
add
xchg
jle
cmps
pop
out
lds
repz
stos
mov
or
or
jnp
out
clc
jl
fmul
add
or
inc
jl
cmp
test
fistp
outs
(bad)
mov
mov
out
ja
ins
push
mov
and
pop
mov
scas
rcr
in
pop
and
dec
xchg
loop
xchg
cmps
mov
cdq
pop
xlat
adc
jl
pop
inc
repnz
adc
not
in
movs
(bad)
jp
les
out
fwait
cmc
sti
dec
test
cbw
jb
dec
xor
or
jle
std
sub
xor
add
and
mov
int3
pop
sbb
cwde
lods
mov
mov
dec
imul
sbb
das
sub
(bad)
cmp
mov
inc
sbb
sbb
lahf
mov
pop
xchg
cld
jge
push
daa
(bad)
pop
pushf
push
and
arpl
gs
pop
cmps
outs
dec
enter
cmp
xor
adc
and
outs
aad
pushf
push
lahf
fisttp
inc
add
pop
add
into
push
pop
jl
sub
pop
cld
mov
int3
dec
jns
cmp
xor
push
sub
rol
aaa
jns
loope
xor
cmp
iret
fist
dec
shl
xor
into
dec
in
retf
pop
cmps
popf
lods
fisttp
cmp
sti
jb
data16
xchg
mov
sbb
inc
xlat
test
xchg
cdq
xchg
mov
xor
jne
js
mov
scas
mov
pop
movs
lock
jne
daa
mov
in
(bad)
mov
int
jmp
pop
dec
xor
pop
cli
popf
aam
xchg
jne
les
mov
mov
in
sub
adc
dec
mov
mov
sub
pop
push
sub
and
test
push
or
cmp
ss
(bad)
lea
mov
cs
pop
add
xchg
lds
push
test
mov
pop
xor
cmps
repnz
icebp
hlt
popf
gs
xor
pop
stos
fsub
(bad)
fisubr
pop
rcr
xor
fsub
addr16
sub
mov
or
fistp
xor
js
jge
jns
jae
out
scas
mov
xchg
add
or
xlat
jmp
inc
js
sbb
mov
cmp
sahf
sub
or
stos
clc
adc
arpl
pop
sbb
enter
(bad)
mov
dec
and
rol
jne
xlat
cs
pop
ins
add
add
xchg
pop
or
sbb
dec
(bad)
jno
jnp
dec
call
and
cmp
(bad)
mov
push
adc
adc
add
in
stos
sahf
sahf
inc
add
enter
or
sub
pop
xchg
push
repz
xor
and
sub
xchg
push
mov
popf
scas
cmp
mov
or
pop
iret
xor
pop
cli
pop
mov
and
jl
xchg
sbb
out
lds
cmps
xor
scas
arpl
add
mov
xchg
ins
pop
mov
mov
mov
ret
stos
sbb
add
clc
fidivr
movhps
call
dec
mov
retf
xor
push
push
pop
stos
mov
retf
pushf
push
mov
xchg
adc
pop
add
push
js
mov
inc
rol
sahf
add
dec
outs
pop
sub
(bad)
repz
mov
mov
jns
xchg
add
scas
loope
retf
jno
sti
xlat
xchg
je
adc
out
pop
xor
and
xor
xor
mov
addr16
outs
inc
cmp
dec
push
sbb
add
xchg
xchg
out
xlat
retf
adc
ins
cli
adc
pushf
jo
call
xchg
retw
xor
inc
cld
shr
and
(bad)
or
out
adc
jmp
push
or
xchg
add
add
sub
and
imul
fnstcw
cli
dec
sti
mov
lea
aad
into
sahf
push
cwde
add
shr
popf
add
shl
in
or
inc
or
daa
sbb
or
dec
mov
into
pop
mov
push
adc
inc
and
xor
push
sbb
sti
and
push
mov
test
fld
loopne
adc
inc
test
dec
cli
xor
test
sbb
jp
addr16
mov
jg
pop
mov
(bad)
sti
cmps
xor
in
ret
mov
xchg
adc
test
fstp
lds
pop
enter
in
ja
mov
test
push
js
ja
shl
dec
xchg
mov
add
(bad)
inc
xor
ins
(bad)
lock
leave
(bad)
push
in
sbb
and
sbb
dec
jle
jne
mov
sub
mov
add
mov
inc
in
fwait
hlt
inc
pop
adc
in
dec
iret
cmp
(bad)
mov
and
mov
inc
fstp
mov
jg
mov
jns
push
mov
cmps
std
(bad)
jle
mov
xchg
and
scas
xor
cmps
bound
(bad)
(bad)
fnstsw
sub
jnp
ror
jb
xchg
jmp
loopne
dec
cmp
test
xchg
mov
mul
enter
js
add
test
(bad)
mov
pushf
jb
mov
jo
sbb
ror
jmp
arpl
xchg
shl
jl
or
mov
nop
mov
dec
test
stos
test
or
dec
sub
mov
stos
adc
mov
(bad)
hlt
std
cs
mov
mov
push
adc
rcr
and
jg
pop
repz
xchg
imul
dec
xchg
sbb
jbe
retf
add
inc
mov
aad
jmp
push
sbb
or
fsub
xchg
lods
mov
push
mov
lods
jne
sbb
mov
add
sti
ret
cld
xchg
push
out
dec
add
add
sbb
push
adc
xchg
lahf
jg
mov
js
(bad)
push
or
xchg
pop
in
mov
and
(bad)
leave
imul
sbb
xor
aaa
and
addr16
scas
dec
dec
xor
test
idiv
jo
jbe
add
sbb
out
jns
stc
jp
sub
mov
add
sbb
pop
test
nop
adc
add
movs
jno
(bad)
test
nop
lock
mov
mov
and
jmp
adc
sbb
daa
out
shl
ins
inc
adc
xor
call
and
or
pop
call
arpl
fdiv
lahf
repnz
fisubr
lds
dec
xchg
imul
mov
popf
pushf
iret
or
shl
mov
mov
sub
mov
sbb
out
and
(bad)
adc
sub
sub
xchg
stos
sbb
jo
lea
inc
xchg
jbe
xor
adc
sahf
add
sbb
jmp
adc
sub
aaa
jnp
lods
mov
jmp
and
sub
ror
xor
or
outs
movs
je
mov
aad
push
push
pop
mov
push
cmp
add
(bad)
inc
fisttp
out
xchg
xchg
mov
add
in
lahf
push
cmp
xor
pop
jo
clc
lods
ja
push
loop
sbb
test
jae
aas
outs
push
mov
(bad)
fdiv
loope
cvtpi2ps
mov
xlat
int3
and
mov
retf
cmp
sti
test
(bad)
mov
aaa
mov
test
in
push
jge
sub
mov
mov
or
mov
sbb
cmp
push
and
bound
mov
dec
call
in
pop
in
pusha
jge
dec
inc
xchg
jbe
call
push
popf
lods
sub
and
pop
sub
mov
(bad)
jmp
cmp
and
int3
xchg
add
inc
and
cmp
lock
mov
push
and
inc
adc
mov
ins
ret
jmp
mov
into
mov
push
dec
dec
pop
pop
xchg
cmp
mul
enter
idiv
mov
or
adc
stc
leave
jo
scas
pop
mov
xchg
xchg
jmp
hlt
inc
jge
xchg
je
data16
mov
sbb
outs
mov
xchg
stos
addr16
movs
jae
cmp
fwait
mov
jp
out
aad
adc
pop
(bad)
and
mov
mov
out
mov
sub
js
ins
sub
cmps
xchg
leave
push
push
test
or
sub
sbb
jecxz
pushf
lea
nop
(bad)
mul
imul
sbb
add
arpl
sub
cmps
or
sbb
sbb
pop
pop
into
sub
enter
aas
add
stc
or
mov
jnp
shr
jecxz
loop
or
add
add
push
add
stos
div
or
enter
sbb
xchg
or
aad
dec
ret
int3
cs
mov
xlat
aad
adc
mov
cld
bound
inc
jns
sub
adc
xchg
nop
and
xor
mov
xchg
sub
scas
gs
(bad)
loope
lock
test
(bad)
arpl
ds
push
aaa
es
and
or
in
into
push
retf
popa
sub
push
or
rcl
xor
jne
(bad)
ins
jo
mov
ins
loop
aas
push
sbb
add
dec
jae
add
mov
jmp
scas
cmps
fisubr
xor
jmp
ja
pop
test
imul
fsub
mov
xchg
mov
call
sub
xor
jbe
and
push
ins
push
bound
sti
push
dec
movs
xor
lods
(bad)
or
push
sbb
sub
cdq
cmp
outs
sub
(bad)
out
daa
add
inc
cmp
mov
repnz
xor
sub
xor
jp
fs
fdivr
cmps
and
add
imul
or
ror
mov
std
lahf
jb
arpl
fs
data16
lds
(bad)
push
into
imul
addr16
pop
movs
int3
int3
xchg
jnp
rcr
mov
xchg
lods
sbb
add
fistp
scas
fnstcw
mov
out
std
je
(bad)
pop
fild
scas
pusha
ins
and
lods
arpl
or
pop
cs
(bad)
jmp
push
les
xchg
mov
stos
and
mov
repnz
and
and
(bad)
sbb
je
push
not
add
mov
or
mov
outs
arpl
dec
leave
push
movs
inc
mov
adc
pop
repnz
in
dec
in
sbb
jg
sub
mov
loope
mov
daa
fidivr
movs
pop
pop
fstp
adc
mov
mov
jge
mov
out
jne
iret
faddp
pop
dec
mov
cmp
add
(bad)
fld
inc
sub
or
dec
and
push
test
pop
and
test
xor
ret
push
push
jl
adc
shr
jne
inc
repnz
mov
dec
call
add
mov
repz
inc
in
jg
js
shl
inc
cmp
int
pushf
or
adc
daa
retf
in
dec
or
dec
aas
mov
fisttp
add
cld
out
hlt
xor
js
pop
cmps
pop
and
cld
jae
arpl
dec
jg
sub
test
scas
mov
adc
js
loop
stos
pop
mov
sub
jmp
jge
jmp
and
in
sub
out
fdivr
push
push
cdq
repnz
aaa
jo
pop
hlt
and
jecxz
rol
push
mov
cli
mov
mov
dec
arpl
cmp
jl
outs
outs
jg
sbb
sub
stc
jecxz
mov
mul
xchg
mov
add
xor
arpl
fcom
cmp
mov
inc
mov
pop
sbb
mov
sub
test
icebp
ds
push
dec
test
xchg
pop
mov
mov
std
jle
rcl
neg
cmp
inc
(bad)
mov
mov
inc
adc
or
push
xchg
jnp
je
daa
inc
(bad)
mov
bnd
(bad)
lods
fcomp
(bad)
push
xor
cmovno
in
pop
adc
fsubr
inc
xor
add
fwait
lods
lock
std
dec
xlat
sbb
sub
jge
inc
test
inc
adc
jmp
mov
imul
sbb
cli
(bad)
sbb
jg
popa
paddsb
push
inc
pop
movs
(bad)
mov
in
cmps
xchg
sub
jecxz
sbb
repz
aaa
push
mov
lock
out
sub
and
out
xor
pop
fs
imul
push
adc
push
mov
sub
adc
inc
loopne
aad
pop
pop
in
push
loop
movs
into
pop
repz
dec
fild
push
adc
(bad)
cmc
fisub
(bad)
sbb
mov
push
push
push
(bad)
mov
(bad)
les
dec
dec
mov
pop
add
mov
test
xor
mov
xor
cmp
test
fwait
jmp
fwait
mov
jb
repz
mov
cld
not
push
mov
dec
pop
(bad)
adc
jbe
mov
xor
mov
mov
sahf
ud0
fnsave
stos
sub
xor
in
inc
mov
into
push
rcl
in
aas
mov
cld
mov
pushf
(bad)
(bad)
aam
pop
daa
mov
jmp
aam
ror
jp
sar
movs
mov
out
add
movs
out
ja
out
and
inc
add
das
outs
adc
jge
push
retf
call
test
loopne
(bad)
add
mov
test
add
add
ins
mov
or
aam
xor
and
xor
jl
shl
retf
(bad)
(bad)
mov
add
cmp
clc
or
push
mov
imul
dec
int3
cmp
add
mov
sbb
imul
push
jmp
lea
(bad)
jb
js
imul
pop
pop
xchg
sbb
call
fs
fdiv
ins
jle
in
out
shl
js
inc
clc
out
sub
xchg
sbb
(bad)
pop
lds
jle
sbb
scas
mov
retf
jl
jnp
pusha
mov
retf
push
and
xchg
stos
ins
out
rol
add
retf
out
or
pop
and
inc
sbb
nop
sahf
movs
lea
rol
pop
jmp
arpl
ficomp
aaa
push
push
inc
icebp
shl
pop
dec
mov
jnp
jge
lds
ins
jg
mov
popf
ficom
int3
cmps
fldcw
sar
mov
jmp
inc
pop
leave
mov
pop
add
and
cmp
push
and
push
and
adc
mov
aaa
jmp
xchg
pop
dec
pop
mov
rol
loope
push
mov
add
enter
mov
push
mov
dec
cmp
lock
hlt
(bad)
lahf
jmp
(bad)
xchg
lods
das
inc
inc
loop
sub
jo
data16
rcr
fisub
fbstp
push
daa
or
retfw
adc
xchg
add
int3
fdiv
jae
jmp
push
clc
test
sbb
(bad)
or
push
pop
test
pop
fwait
inc
fs
inc
lods
mov
lods
add
and
and
add
push
mov
dec
inc
mov
adc
push
and
inc
or
mov
cmps
gs
xchg
inc
xor
dec
pop
adc
jbe
lds
fadd
push
pop
sub
fdivr
sub
mov
pop
mov
fs
and
jmp
or
pushf
clc
ja
mov
ror
cmps
push
jbe
fs
xor
ret
(bad)
adc
repz
push
cli
jecxz
lahf
lds
xor
call
xor
mov
mov
(bad)
int
inc
pop
push
adc
das
leave
mov
aad
mov
mov
aaa
add
movs
pop
(bad)
out
xor
adc
adc
sub
dec
(bad)
push
xchg
jbe
jne
aaa
pop
push
xchg
out
cmps
call
sub
mov
aad
icebp
mov
inc
cld
adc
cmp
jecxz
jb
cmps
test
pushf
push
scas
aam
js
xor
pop
mul
cmps
adc
push
fadd
stos
xor
adc
pop
jbe
cmp
lods
xor
shl
adc
imul
das
out
dec
(bad)
push
add
aas
add
scas
test
sar
stos
sbb
in
loop
es
inc
or
mov
mov
pop
push
iret
mov
pop
lods
in
iret
add
cmp
into
int
rcl
out
int
je
jecxz
mov
(bad)
jb
xchg
mov
jge
(bad)
add
xchg
dec
pop
scas
xchg
xchg
sub
inc
pop
sbb
pop
jo
std
inc
adc
retf
mov
retf
jbe
and
rcpps
mov
shr
jp
add
cmps
scas
(bad)
sub
fwait
lahf
stos
fimul
imul
xor
jns
fistp
add
mov
ds
mov
dec
jb
dec
neg
lods
fstp
jne
shl
lods
mov
cli
int
push
(bad)
jge
mov
jge
xchg
pop
or
retf
mov
mov
inc
or
inc
lahf
mov
dec
stos
xchg
push
das
(bad)
fdiv
fisub
mov
add
push
mov
call
fs
xchg
test
outs
lea
scas
fcomp
xor
adc
(bad)
xor
jmp
inc
jge
retf
push
pop
xchg
push
mov
and
(bad)
xchg
jmp
xchg
sbb
repz
aas
std
icebp
fs
in
or
sbb
adc
popa
cmps
xlat
xor
pop
jae
into
xchg
and
ja
cwde
mov
sub
cs
ds
pop
cmp
inc
mov
pushf
fild
call
cdq
nop
shr
mov
fdivr
loop
jns
hlt
and
dec
sar
cmp
push
aam
or
addr16
push
gs
pop
fst
clc
dec
dec
add
sub
out
xchg
retf
cmp
push
aad
sbb
sbb
pop
iret
jns
add
mov
pop
aad
sbb
into
popf
ror
xor
mov
into
push
add
fidiv
sub
or
cli
or
sbb
(bad)
ins
sahf
pop
push
cmp
dec
push
(bad)
hlt
and
pop
ficom
sub
outs
pop
push
outs
fld
xchg
xchg
dec
add
add
dec
adc
out
das
pop
addr16
retf
xchg
jle
in
data16
fs
sti
cdq
cdq
jl
mov
mov
jp
movs
cld
push
imul
popa
and
mov
xlat
push
mov
push
and
jl
mov
jno
cli
add
pop
xor
retf
in
(bad)
js
push
pop
inc
jnp
ins
cld
mul
sbb
stc
lods
call
arpl
adc
in
sbb
in
push
and
lods
sti
(bad)
mov
or
xchg
add
mov
call
pop
adc
and
loop
push
fnstsw
mov
cmp
inc
cmp
push
xor
sbb
ins
pop
mov
mov
fdivr
sbb
out
dec
inc
(bad)
jbe
aam
in
je
xchg
jbe
btc
int3
dec
jno
mov
add
in
cmps
adc
cmc
stos
and
fs
lods
xor
mov
retf
adc
(bad)
jp
loope
stos
cmp
gs
es
aam
dec
jns
ins
in
dec
retf
dec
or
mov
pop
in
xchg
inc
push
xor
addr16
mov
inc
(bad)
jmpw
pushf
sub
cmp
ins
jl
cmp
push
xchg
cmp
add
jbe
out
inc
push
xchg
fidiv
ret
pop
fcom
rcr
jbe
add
icebp
call
aad
iret
xor
mov
pop
push
bnd
xor
pop
lods
xlat
fld
mov
jmp
mov
sub
shr
out
xor
lods
lock
les
test
or
out
f2xm1
mov
icebp
jp
push
dec
imul
xchg
inc
cmp
fdiv
fst
lds
cwde
gs
data16
xlat
jmp
jg
xor
sbb
inc
mov
adc
fnstenv
fmul
ins
fcomi
les
add
mov
shl
xchg
fadd
or
shl
cli
push
gs
inc
push
dec
repnz
xchg
mov
xor
fs
xchg
jnp
mov
push
or
adc
not
jle
mov
dec
push
nop
mul
cs
aad
push
or
jo
sub
jae
push
inc
sbb
div
add
and
inc
sub
std
out
push
inc
(bad)
bound
or
sbb
adc
fnstenv
mov
cdq
add
sbb
pop
jno
push
and
sar
cmp
outs
sbb
frstor
inc
(bad)
pop
(bad)
call
dec
dec
mov
cwde
fcomi
sbb
imul
ret
pop
jnp
popf
or
jno
adc
fidivr
in
adc
lock
jmp
adc
aas
(bad)
mov
jmp
scas
ds
imul
sub
repz
lea
rcl
jb
xchg
pop
pop
fcom
daa
nop
mov
add
add
jp
loope
mov
or
gs
outs
add
xor
cld
stos
ror
repnz
push
movs
inc
jp
add
das
popa
das
xlat
sti
sahf
test
iret
das
mov
test
cld
mov
das
xor
and
xchg
pop
xor
inc
bound
les
push
inc
xchg
cli
mov
clc
jne
(bad)
rcr
or
sub
pop
cmp
cmovne
adc
push
outs
aad
jno
pop
xchg
(bad)
sti
mov
ficom
jp
(bad)
stos
xlat
inc
jecxz
mov
push
xor
jne
arpl
lods
xor
adc
jo
inc
dec
cmp
imul
fnsave
jno
pop
push
add
out
xor
xchg
cmp
test
addr16
and
popa
out
dec
xor
pop
sub
xor
mov
fcom
fsub
add
push
pop
push
mov
loope
add
adc
mov
pop
sub
jae
rcl
scas
xlat
jge
test
pusha
mov
loope
int3
out
jmp
xor
into
sub
daa
ret
adc
jecxz
sbb
(bad)
jge
lea
lods
aaa
or
jmp
sub
cmp
push
xchg
add
sub
or
pop
(bad)
fdivr
push
rcr
cdq
pop
inc
add
adc
adc
loop
loopne
mov
or
push
sbb
mov
enter
inc
aaa
xlat
(bad)
mov
call
into
or
mov
(bad)
es
icebp
in
inc
leave
test
adc
cmp
mov
pop
pusha
call
rcl
dec
rcr
sub
ja
and
push
aam
and
jecxz
sub
push
call
or
mov
pusha
mov
mov
scas
jae
aad
outs
mov
in
ins
sbb
loop
popf
scas
jl
out
sti
xlat
xor
dec
and
nop
cli
into
add
cld
retf
std
pop
test
xchg
scas
je
mov
add
test
(bad)
fbstp
in
ins
(bad)
clc
cmp
in
out
push
inc
loop
popf
xor
push
push
xchg
xor
pop
xchg
mov
and
inc
sbb
lock
add
sub
fwait
cmps
cmc
push
arpl
(bad)
jl
pop
adc
nop
lds
mov
in
out
push
ins
pop
out
mov
adc
ret
es
pop
pop
lea
repnz
les
pushf
or
dec
mov
adc
cli
mov
das
shl
push
call
stos
mov
(bad)
(bad)
mov
cs
in
push
dec
lods
out
in
ds
and
sub
sbb
cmp
inc
sub
adc
sbb
stos
dec
repz
fcmovu
in
fs
push
ds
pop
idiv
pop
jns
loop
test
movs
imul
mov
add
fldcw
inc
xor
push
inc
bound
and
sti
cmc
or
pop
aas
jg
pop
dec
out
outs
retf
pop
movs
ret
sbb
sub
adc
ja
xlat
outs
sub
xchg
fsubr
or
stc
daa
enter
and
mov
cmps
mov
aas
jl
setnp
jmp
cdq
aad
sub
dec
into
into
les
lock
fstp
shl
pusha
or
add
fs
pop
mov
sahf
xchg
mov
xor
test
je
test
fld
in
and
adc
ja
lock
(bad)
pop
adc
aaa
mov
push
addr16
ins
repz
call
fwait
push
dec
pop
(bad)
or
(bad)
in
clc
cs
imul
xor
adc
pop
ss
dec
or
fcomp
js
mov
mov
pop
sti
arpl
lock
sbb
jle
lods
imul
lea
into
sbb
sub
fcom
cmps
mov
test
inc
jnp
cmp
sbb
pushf
or
push
enter
jno
inc
(bad)
aas
dec
iret
xchg
xchg
call
call
(bad)
scas
mov
(bad)
outs
je
cmp
in
xchg
jle
sbb
call
dec
pop
mov
add
and
mov
cmp
loope
cli
inc
jl
and
xchg
inc
cmps
xor
cwde
add
jns
out
push
jb
dec
xchg
xor
cld
imul
mov
ins
ss
sub
outs
daa
sbb
sub
mov
pop
dec
scas
inc
mov
push
sub
sub
pop
into
mov
add
and
and
cmp
clc
fcom
dec
stos
stc
lahf
sub
or
popa
in
scas
imul
(bad)
adc
das
xor
adc
mov
cmp
mov
sub
test
or
adc
shl
cmp
inc
ret
jge
wbinvd
(bad)
and
sbb
wrmsr
inc
in
pushf
add
shr
adc
jne
ins
add
jmp
loope
sbb
jo
int
jle
jae
lods
mov
jl
arpl
sbb
shl
nop
loope
(bad)
out
add
je
mov
push
lods
sub
push
repnz
movs
cmp
cmp
gs
mov
push
pop
inc
test
adc
loop
add
popf
push
rcl
push
jl
lock
push
fmul
mov
(bad)
aas
jo
inc
cmc
adc
imul
sar
popf
lds
adc
imul
out
ins
mov
mov
ror
mov
loop
int
scas
out
adc
inc
mov
and
into
xchg
push
cld
jl
rcr
loope
xchg
test
popf
out
fimul
retf
jl
or
aaa
lds
adc
idiv
mov
in
cmp
push
jae
pop
cmp
pop
or
xor
push
in
arpl
xchg
jmp
(bad)
mov
(bad)
mov
call
dec
in
jmp
mov
inc
mov
pushf
pop
shl
push
out
and
push
leave
and
sar
mov
pushf
lds
xchg
idiv
imul
scas
aas
lods
sub
sbb
jle
aaa
test
inc
jno
retf
movs
mov
or
jg
xchg
and
ficom
movs
push
or
lds
repz
sub
push
pop
inc
mov
int
gs
outs
push
jp
in
xchg
dec
jne
sub
mov
or
icebp
(bad)
js
or
jno
jb
sub
mov
add
cmc
xor
int3
cmp
popa
popa
ss
jle
fs
dec
mov
fcomp
ror
pop
jbe
sub
aaa
iret
sbb
push
lods
sbb
jmp
stos
cld
in
jmp
push
repnz
xchg
mov
adc
pop
je
pop
ds
mov
rol
cmp
and
js
mov
jmp
ins
stos
mov
dec
ror
fucomp
push
cmp
pop
inc
shl
cwde
jge
scas
mov
and
call
out
xor
out
or
push
fdivr
mov
cmps
push
rcl
push
push
cmp
cmp
aam
or
(bad)
out
std
lock
ret
std
aaa
push
sub
sbb
dec
cmp
rol
dec
sbb
inc
mov
sub
in
call
inc
or
mov
xlat
xchg
cmc
dec
cmp
cmp
aaa
adc
(bad)
cmp
cmp
addr16
push
pop
jp
push
and
inc
ds
loopne
pop
jmp
loope
sub
out
mov
and
jmp
aad
scas
or
pusha
aas
inc
jno
dec
xlat
les
fadd
sbb
mov
mov
gs
mov
xlat
out
repz
and
aas
or
pop
sti
inc
pop
aaa
jb
(bad)
jo
dec
push
neg
pop
sub
sbb
shl
mov
pop
xchg
popf
xchg
mov
(bad)
fldcw
outs
sub
ins
test
and
cs
xor
add
and
in
mov
je
ror
push
data16
std
sub
pop
adc
jno
jg
sbb
ret
adc
je
push
push
bound
in
pop
push
aam
outs
ins
jecxz
int
mov
sub
loopne
pop
cmp
jb
push
adc
adc
xlat
push
rcl
test
cmp
pop
cwde
loope
mov
cli
mov
cmp
rol
jmp
mov
imul
leave
add
lods
and
leave
sub
xchg
xor
cmp
cli
mov
push
jne
dec
mov
loope
imul
xlat
sbb
loopne
pop
adc
inc
outs
jns
ficom
iret
sti
jmp
cmps
call
cmc
or
push
mov
popa
xchg
adc
jmp
jns
xchg
rol
mov
jge
lea
(bad)
jnp
(bad)
inc
mov
mov
mov
call
mov
push
mov
xchg
into
fwait
sub
pop
or
xchg
cmp
and
js
mov
pop
pop
les
push
aad
das
and
add
mov
jp
es
mov
pop
push
xor
enter
fistp
push
sub
adc
add
(bad)
retf
test
xor
mov
push
pop
scas
jno
dec
nop
xchg
(bad)
push
ret
mov
adc
mov
inc
push
push
outs
jge
inc
aas
pusha
adc
fstp
(bad)
xor
mov
(bad)
cmc
jae
cmp
out
push
xchg
jo
scas
call
repz
dec
scas
mov
sbb
mov
jg
xchg
stos
dec
into
fimul
sub
pop
jecxz
sbb
xchg
xchg
xor
mov
dec
jae
xor
fdivr
popa
outs
cwde
imul
mov
std
adc
push
rcl
clc
pop
mov
sti
ror
mov
lea
(bad)
mov
cmp
xchg
xchg
pop
es
(bad)
push
ins
xor
cwde
ficomp
jb
jmp
shl
popf
es
repz
jmp
sbb
adc
stos
push
call
sbb
lods
pop
or
ret
mov
fdiv
xchg
fadd
mov
test
mov
jo
pop
sti
iret
mov
mov
in
mov
mov
retf
fs
das
push
int3
cmc
aad
test
(bad)
movs
pop
cwde
jle
sar
outs
mov
repz
xor
stos
dec
test
inc
xor
inc
mov
fimul
cmp
fs
add
mov
push
add
(bad)
fild
cwde
mov
xchg
inc
ret
ror
in
in
mov
mov
ds
aam
pop
imul
push
or
cmp
xor
pop
or
xchg
nop
dec
arpl
jmp
nop
clc
xchg
(bad)
jmp
lea
int3
pop
mov
push
in
stc
imul
and
ret
sti
outs
adc
sub
data16
adc
adc
jl
pushf
(bad)
or
jne
loop
stc
nop
jecxz
ror
push
pop
jb
outs
push
dec
mov
loopne
dec
into
mov
pop
mov
movs
pop
cmp
jns
(bad)
sbb
test
iret
xor
sub
push
mov
push
inc
(bad)
push
stos
push
cmp
into
add
mov
mov
sub
(bad)
call
imul
test
add
xchg
push
push
or
and
pusha
push
and
dec
jl
repz
into
xor
cmp
call
mov
daa
xchg
ss
(bad)
in
cwde
(bad)
jecxz
cmp
js
shr
ss
cld
inc
inc
xchg
jno
sub
mov
and
cmp
mov
mov
outs
adc
mov
push
std
sar
(bad)
into
fwait
(bad)
fnstsw
ja
inc
imul
in
push
jbe
push
scas
popf
inc
sbb
test
stos
push
sbb
iret
pop
inc
pop
(bad)
pop
jbe
or
fbld
adc
retf
xchg
push
cmps
mov
lea
xchg
inc
or
dec
jno
pop
mov
xchg
push
jae
add
push
fcmovnb
rol
or
std
addr16
call
dec
pop
dec
pop
or
cdq
sbb
sbb
cwde
(bad)
lods
sbb
pop
pop
cli
mov
cwde
jecxz
enter
jno
sub
push
xchg
sar
ins
in
and
inc
dec
sbb
lods
push
pop
lock
stos
xor
cs
mov
cmc
mov
fcom
adc
jns
pop
jp
dec
pop
jg
fistp
push
inc
xchg
pop
hlt
hlt
retf
in
shr
(bad)
out
adc
jb
pop
mov
adc
xchg
fld1
or
(bad)
ss
add
pop
mov
adc
mov
das
fs
xchg
pusha
sbb
push
mov
push
jecxz
icebp
jp
mov
stos
and
mov
or
cs
xor
ja
mov
sbb
and
sbb
xor
mov
or
js
pop
xor
and
loope
mov
jo
pop
dec
sar
call
dec
push
ins
or
and
imul
adc
mov
push
add
es
push
stos
inc
sahf
jmp
daa
mov
xor
pop
pop
xlat
pop
test
push
add
lds
icebp
push
mov
mov
xor
imul
xchg
jg
add
aaa
xchg
ret
test
out
aaa
test
jecxz
dec
int
pop
neg
loop
dec
in
sub
sti
xor
cmp
imul
jmp
or
pusha
test
add
scas
mov
pop
and
test
jb
imul
std
ss
add
(bad)
fdiv
dec
ins
bound
nop
aas
cmc
mov
enter
ins
inc
lea
sbb
loope
mov
popf
xchg
sbb
dec
cmp
clc
in
in
inc
pop
and
inc
mov
adc
or
jge
enter
dec
iret
cmc
dec
dec
les
mov
inc
ret
dec
iret
push
jae
mov
mov
jp
enter
dec
add
mov
fstp
push
loop
ins
dec
add
ins
pop
ja
add
inc
fwait
mov
out
xor
cld
jb
adc
lods
pop
jo
jbe
jmp
fmul
fcomp
ficom
mov
or
sub
ds
push
sti
xor
pop
bound
inc
pop
mov
and
pop
mov
mov
mov
mov
lock
loopne
(bad)
mov
push
fsubrp
and
pusha
push
mov
retf
outs
xor
ss
shl
inc
or
and
movs
mov
sbb
pop
sbb
sbb
movs
cdq
fwait
sub
fadd
mov
std
and
mov
jge
cmp
pushf
or
lahf
and
outs
cmp
mov
fistp
jecxz
pop
lods
dec
pop
enter
push
cmp
add
stc
sbb
ret
cmps
loope
push
cmp
cmps
mov
arpl
pop
push
popf
mov
and
mov
and
not
retf
xor
in
repnz
(bad)
aam
and
arpl
and
sbb
xchg
mov
scas
das
js
pop
arpl
aad
mov
pop
adc
mov
or
or
add
fidiv
icebp
mov
fnstsw
les
mov
imul
test
inc
js
mov
ret
sub
jmp
fs
sub
push
ins
shl
add
int3
cmps
cmc
mov
(bad)
(bad)
aaa
js
mov
sub
ficomp
out
js
xchg
in
xchg
pop
mov
add
jecxz
mov
jmp
pop
outs
dec
js
sahf
inc
or
xor
xor
adc
aas
jl
push
xor
push
fnsave
mov
push
ins
jns
repnz
dec
xchg
pop
add
add
mov
or
sbb
jnp
adc
xlat
and
mov
out
out
shl
clc
addr16
pop
mov
int3
jmp
lea
shr
sub
xor
sub
jmp
mov
inc
test
(bad)
test
cmp
adc
add
gs
fst
sti
mov
push
test
ds
jmp
(bad)
and
adc
xchg
int
cld
inc
jge
arpl
xor
jmp
ins
add
cmc
push
imul
add
dec
ja
iret
push
sub
mov
sbb
ficom
and
and
cmp
mov
sub
cmc
pop
lods
cmps
mov
xchg
adc
xor
loope
adc
test
mov
adc
mov
pusha
outs
outs
dec
mov
ins
xchg
pop
push
mov
mov
cmp
stos
mov
jmp
mov
mov
cmc
sub
in
or
movs
xchg
cmc
adc
ja
xchg
sahf
sahf
sbb
retf
in
jecxz
cs
mov
mov
icebp
add
in
fisubr
scas
test
push
xchg
pusha
daa
gs
cmp
xchg
push
gs
jmp
jp
inc
xchg
ficomp
je
rcl
dec
int3
daa
mov
or
in
inc
xor
fisttp
dec
in
add
xor
test
jmp
out
retf
jns
fs
xchg
out
jg
push
jne
dec
daa
jmp
dec
push
fwait
xor
lea
inc
daa
out
mov
xor
inc
ret
jb
pushf
or
jl
scas
jno
ss
popa
pushf
ins
push
pop
fcomp
sbb
mov
cli
dec
xchg
dec
rcl
inc
mov
aad
loop
das
mov
adc
push
xlat
icebp
idiv
push
ins
jmp
lahf
imul
add
cld
cli
(bad)
push
jno
xchg
es
dec
pop
bound
adc
icebp
stc
sti
out
fwait
sub
ins
or
jecxz
dec
retf
mov
push
sbb
shl
gs
rol
stos
adc
lods
or
mov
sub
cmp
aam
addr16
stos
movs
jbe
rcr
mov
mov
cmc
sub
std
cdq
mov
stos
xchg
pushf
mov
ret
aam
test
neg
sbb
mov
in
jno
leavew
inc
enter
xor
and
push
in
cmc
iret
or
or
push
sub
cs
and
cmps
les
cdq
loop
cdq
adc
ds
push
ret
pusha
mov
mul
int
test
xor
push
cmc
popf
(bad)
jmp
ret
pop
xor
cmp
push
adc
scas
jmp
pop
push
jl
mov
and
out
jno
ins
add
pushf
popf
dec
je
jo
inc
lods
lods
xor
cs
out
pusha
stos
mov
ja
ja
inc
adc
out
xchg
clc
movs
outs
fiadd
repz
cs
inc
jge
xor
jmp
add
sub
ja
jl
cmp
and
jae
(bad)
jo
aas
or
jne
fsub
adc
cmps
cmp
dec
lahf
cmp
sub
call
aas
ret
sti
outs
add
cmp
jno
shr
aaa
dec
inc
pop
fwait
lods
aas
(bad)
sti
mov
int3
or
pop
hlt
sbb
std
or
into
lahf
push
movs
cmps
jge
call
and
(bad)
xor
mov
push
loop
popf
sub
test
inc
sbb
or
and
jl
xor
xchg
loopne
cdq
pusha
inc
ror
repnz
mov
sub
mov
mov
sub
mov
push
jno
inc
fdivr
lods
jmp
popa
inc
ret
sbb
add
cdq
xor
add
adc
or
stos
sti
clc
push
inc
dec
test
mov
pusha
fnstenv
imul
cwde
sub
xor
mov
fnstsw
ins
ins
cmp
int
aaa
dec
or
xor
stc
xor
push
loopne
add
mov
xchg
push
mov
adc
and
jo
jmp
movs
push
mov
call
mov
fadd
mov
es
xchg
movs
cwde
loopne
pop
xchg
cs
inc
push
ror
inc
jg
out
jl
jo
fisttp
(bad)
jge
inc
popf
scas
jecxz
mov
mov
fcomip
out
out
sub
mov
push
pushf
cmps
dec
pop
or
ins
adc
ins
jno
xchg
rcl
pop
and
mov
fist
cli
es
jb
adc
iret
xor
lock
rcl
repz
enter
mov
mov
dec
cmp
imul
xchg
js
adc
inc
dec
push
ret
xor
in
jae
scas
mov
outs
loopne
sbb
inc
xchg
and
mov
leave
mov
inc
fld
adc
mov
mov
sub
(bad)
hlt
dec
std
rol
sbb
and
mov
xchg
ins
xchg
mov
pop
add
rcl
hlt
call
aas
call
sbb
sub
add
and
imul
sbb
dec
dec
mov
dec
add
(bad)
shr
inc
adc
in
call
sti
jne
xchg
mov
adc
xlat
(bad)
mov
xor
xor
popa
pop
push
push
nop
jecxz
sub
push
push
movs
mov
test
cmp
inc
push
xchg
into
xchg
in
xchg
movs
jg
and
xchg
dec
pop
jle
push
nop
jbe
lods
lahf
pop
sbb
aam
(bad)
mov
mov
stos
xor
mov
fsubr
inc
add
bound
jo
sub
sub
adc
in
sbb
mov
arpl
adc
movs
aam
jecxz
cmps
inc
or
xchg
test
jno
iret
mov
push
jne
xchg
aad
add
cli
movs
push
push
add
mov
and
ret
add
in
or
push
test
inc
add
add
mov
mov
mov
cmp
fild
or
sbb
jno
xor
fisubr
xor
push
in
sub
jae
jbe
les
xor
push
mov
and
and
xor
ds
pushf
mov
out
push
nop
dec
sbb
mov
(bad)
(bad)
test
sbb
xor
les
in
adc
nop
fwait
retf
push
adc
call
inc
lea
inc
mov
mov
sub
fisub
push
inc
cli
test
pop
xchg
daa
and
call
or
div
inc
xchg
mov
lock
xchg
add
cmp
enter
xor
jp
(bad)
mov
xor
data16
xor
mov
ret
and
add
outs
ins
fimul
xchg
mov
ja
mov
push
jecxz
pop
(bad)
fdiv
xchg
pop
inc
lods
fst
mov
fild
dec
inc
sub
(bad)
push
or
ja
and
jge
mov
les
pop
sub
loopne
stos
out
fimul
sti
push
inc
mov
mov
test
push
aas
popf
cmp
jp
cli
inc
lds
das
icebp
into
lahf
imul
xor
outs
mov
(bad)
fist
mov
pop
retf
push
pop
icebp
mov
xchg
add
outs
push
add
xlat
stos
fwait
arpl
inc
jae
mov
xchg
or
jmp
pushf
jp
aad
jmp
dec
sbb
cld
into
sar
jo
mul
cmps
mov
out
inc
mov
arpl
hlt
or
adc
int3
sbb
inc
dec
cmc
cmp
loope
fbstp
fs
imul
rol
gs
sbb
jno
dec
scas
in
dec
dec
movs
js
pop
fldenv
adc
(bad)
push
inc
dec
dec
mov
shl
sbb
out
add
jns
push
xlat
stos
adc
pop
aas
cmps
mov
jne
test
xchg
sahf
jns
jle
loop
lds
mov
mov
clc
je
cld
xor
nop
and
enter
iret
pusha
adc
adc
or
sti
es
cmp
scas
xor
mov
mov
and
mov
(bad)
pop
lods
mov
sti
push
push
push
and
push
std
jno
mov
fnstcw
or
dec
mov
push
das
sbb
cmp
rcr
push
add
and
sub
in
xchg
ja
sbb
mov
mov
xchg
add
mov
sbb
cmp
xor
lahf
xchg
mov
scas
add
les
mov
in
cli
pop
ret
les
gs
test
movs
mov
mov
ja
test
mov
dec
push
push
lock
ins
cld
sbb
or
push
(bad)
enter
jnp
inc
imul
sar
pop
add
pop
pushf
push
mov
bound
xor
aaa
lahf
bound
dec
(bad)
cmps
fist
push
cmp
mov
sub
adc
retf
adc
sub
xlat
dec
push
push
or
xor
pop
test
arpl
sub
outs
inc
cs
pop
inc
adc
inc
dec
mov
push
rcl
pop
popa
neg
pusha
mov
inc
enter
pop
mov
xchg
push
push
fs
mov
icebp
inc
mov
call
lea
push
jl
data16
daa
call
inc
mov
imul
je
adc
adc
nop
add
mov
xor
pop
es
aas
in
mov
push
jae
ror
dec
call
jmp
in
aaa
sub
pop
popf
mov
call
loop
dec
ret
inc
mov
sbb
push
clc
mov
das
cli
lock
jmp
or
dec
xchg
fld
ins
push
and
es
xchg
mov
add
lds
imul
mov
mov
add
inc
mov
iret
pop
inc
daa
int
add
mov
es
jmp
xchg
iret
ins
cmp
pop
scas
pop
cmp
into
ret
xchg
stos
in
sbb
(bad)
pop
ds
aas
adc
sub
(bad)
ror
add
(bad)
dec
imul
adc
not
sbb
cmp
mov
std
fcmovnb
inc
cwde
js
and
push
mov
sbb
lds
adc
shl
push
imul
(bad)
pop
stos
mov
add
aas
fld
dec
xor
imul
fcomp
neg
pop
dec
mov
xor
cwde
mov
inc
and
sub
pop
clc
jecxz
xchg
and
repnz
xchg
movs
xchg
jb
addr16
ins
iret
mov
dec
test
ja
mov
mov
add
sub
dec
mov
in
push
jbe
add
and
push
pop
(bad)
sbb
mov
in
test
push
jae
sahf
xchg
test
nop
jl
jbe
das
test
dec
dec
aaa
xchg
clc
or
jae
fiadd
xchg
loope
add
push
pop
or
jno
shl
pop
add
int
nop
(bad)
fiadd
stos
stc
xchg
pop
sub
stos
sti
(bad)
adc
mov
jmp
pop
xchg
xchg
sbb
and
add
fldenv
cmp
fsubr
fcmovnb
out
dec
in
or
cld
out
mov
xchg
aam
fist
push
jg
out
lahf
mov
repz
adc
cmp
pop
and
inc
stos
aam
js
fcom
out
inc
cmp
add
mov
mov
mov
or
mov
dec
sbb
dec
lods
loop
push
xchg
shl
mov
or
(bad)
out
pusha
dec
rol
mov
sub
push
loop
lods
xchg
in
scas
shl
dec
addr16
cmp
(bad)
imul
hlt
mov
dec
mov
xor
test
mov
jno
xor
push
test
daa
jo
pop
mov
outs
jle
pop
add
adc
xchg
sti
xchg
or
daa
dec
loop
sahf
fnstcw
mov
movs
shl
push
rcr
lods
inc
aas
mov
inc
repnz
mov
fcomp
jp
in
sar
or
fs
push
push
call
ja
retf
xor
fidiv
gs
or
dec
(bad)
outs
xchg
pop
push
or
xor
cmp
xor
xor
jg
icebp
xchg
cli
movs
jae
jmp
fisub
adc
data16
movs
sbb
fiadd
out
xor
mov
or
dec
mov
popa
lods
xor
or
stos
push
leave
adc
or
aas
lds
inc
sub
cmc
shl
ror
mov
or
(bad)
loop
dec
test
out
popf
fwait
dec
int
push
js
inc
je
lahf
mov
addr16
push
dec
imul
inc
jae
xchg
lods
mov
cs
mov
fisub
fidivr
sbb
pop
adc
xlat
push
adc
and
out
mov
mov
cmp
push
pushf
xchg
jle
div
mov
and
xor
retf
mov
mov
ficomp
(bad)
loopne
pop
cmp
lahf
enter
imul
push
aad
gs
pop
xor
pop
retf
cmp
dec
test
xor
sbb
mov
mov
ret
lahf
stos
or
jl
aas
pop
jge
loop
or
neg
test
cmp
lods
dec
pop
cmp
push
das
test
and
mov
adc
jp
lods
xchg
xchg
int
dec
loope
shr
pushf
jmp
mov
cwde
mov
sbb
daa
das
sub
das
and
pop
mov
fidivr
adc
fst
sub
dec
mov
repnz
mov
sbb
xchg
sbb
xchg
(bad)
js
add
xor
out
mov
jle
pop
mov
cmp
push
ret
mov
bound
shr
adc
sbb
bound
jae
cmp
sti
jg
inc
sub
int
pop
jmp
mov
mov
ins
fsubr
iret
dec
cwde
in
xchg
ins
push
fbstp
push
jmp
(bad)
adc
sbb
popf
and
add
jmp
inc
jg
xchg
loope
mov
jb
repz
call
inc
lds
push
pop
clc
pop
retf
cdq
push
mov
fcomp
icebp
jbe
adc
jb
cmp
mov
inc
cli
inc
inc
sub
push
xchg
push
sahf
call
push
pop
inc
xor
test
or
xlat
(bad)
cld
aaa
dec
push
mov
jae
loope
fs
lea
mov
inc
sar
mov
ds
lods
(bad)
sub
test
xchg
pop
add
daa
jp
addr16
test
scas
pop
xchg
test
pop
call
movs
push
mov
mov
(bad)
xlat
sahf
jle
clc
inc
lahf
mov
lahf
add
or
imul
iret
push
js
adc
push
lds
lods
das
push
xchg
cmps
xchg
lock
in
push
push
push
mov
add
mul
imul
jnp
cwde
bound
dec
adc
movs
cdq
pop
and
pop
in
rcr
daa
mov
and
mov
sahf
push
mov
and
sahf
mov
(bad)
das
scas
jge
dec
(bad)
mov
iret
xchg
and
sbb
fild
mov
mov
mov
call
dec
xchg
mov
jae
mov
cs
mov
test
adc
cmp
push
xchg
pop
cmps
out
xor
retf
out
mov
test
or
pop
push
and
test
push
xchg
int
imul
pop
out
inc
sub
fnstsw
and
scas
test
xor
fisubr
jge
std
lods
lods
pop
cmps
out
cdq
inc
repnz
inc
sbb
jb
sbb
loopne
das
adc
(bad)
cmc
out
sahf
cli
pop
adc
sbb
repnz
push
adc
test
xchg
pusha
add
add
ficom
jbe
pop
es
js
inc
scas
or
add
fmul
mov
mov
out
rol
out
sub
xchg
or
rol
sub
clc
cmp
mov
xchg
mov
rol
add
rcl
call
jae
mov
pop
mov
retf
cmps
mov
adc
lods
stos
push
sti
jl
imul
pop
mul
adc
xchg
stc
xchg
cmp
mov
retf
imul
ret
pop
inc
push
and
jle
ins
popf
xlat
fadd
push
sbb
out
inc
sub
push
push
jg
mov
sub
hlt
gs
call
adc
push
scas
fs
cmp
or
pushf
outs
inc
lock
inc
call
movs
std
sub
dec
rcr
jge
lods
push
and
add
aaa
les
data16
add
rdmsr
pop
imul
cdq
out
mov
xor
xchg
and
movs
cdq
mov
xchg
inc
push
popf
sub
rcl
aam
(bad)
sbb
xor
daa
mov
repz
or
js
idiv
dec
test
fcom
add
sbb
jbe
sub
push
call
fisttp
fbstp
aam
jmp
jne
retf
mov
int3
xchg
out
cwde
or
mov
pop
or
rcr
cmp
sbb
add
mov
es
ret
xchg
test
pop
lahf
mov
or
add
ds
pop
xchg
imul
shl
dec
std
jmp
fcomp
nop
sbb
hlt
xchg
mov
clc
test
dec
addr16
retf
bound
test
rol
into
mov
dec
fist
mov
das
lahf
ret
xchg
jl
test
pop
or
push
cmp
adc
pop
repz
sbb
mov
imul
fincstp
mov
sbb
outs
sbb
mov
cmpxchg
je
fbld
stc
repz
loope
jp
adc
stc
cwde
mov
sbb
inc
or
adc
mov
lea
ficom
pop
stc
fld
sbb
inc
adc
sbb
and
push
mov
(bad)
loop
push
loop
popf
mov
pusha
gs
outs
call
test
rcl
mov
mov
mov
sbb
push
inc
push
and
imul
clc
test
mov
fld
in
add
cmp
lahf
pop
xchg
cmp
dec
xchg
repz
sbb
xor
ins
mov
cmps
or
lea
mov
adc
mov
(bad)
dec
lods
pop
movs
mov
inc
and
push
xor
icebp
vmwrite
int
jbe
sbb
(bad)
out
push
inc
inc
pop
and
pushf
cmp
mov
dec
xlat
or
repnz
(bad)
sub
lods
xchg
or
add
pop
rcr
mov
cdq
outs
mul
jmp
ds
je
stos
pop
nop
fstp
sub
lods
sar
and
sub
test
mov
repnz
mov
xor
(bad)
in
xchg
pop
jg
out
push
jo
inc
and
scas
daa
cwde
(bad)
sbb
pop
xchg
inc
xchg
jl
into
scas
jge
fld
push
adc
pop
adc
test
mov
leave
lea
add
(bad)
into
dec
xchg
jmp
xlat
test
push
adc
adc
sbb
test
not
out
jmp
frstor
or
jmp
imul
push
dec
push
scas
test
aas
es
mov
repz
xchg
fcomp
mov
add
outs
hlt
mov
ins
lods
lods
add
jb
ins
mov
xor
jbe
popa
int
mov
cmps
dec
xchg
dec
mov
jno
jbe
dec
push
inc
and
movs
jl
pusha
inc
sub
rcl
mov
fwait
jb
jecxz
pusha
xor
cmps
inc
inc
sub
gs
jns
sub
cmc
(bad)
mov
imul
je
sbb
into
cmps
inc
aad
pop
ret
adc
shr
std
scas
xchg
and
repz
jbe
mov
push
cmp
shl
retf
push
pusha
repnz
mov
movs
shl
ins
inc
push
cmp
mov
inc
pop
in
mov
sbb
pushf
pop
mov
jp
mov
add
ins
mov
xor
jp
adc
scas
gs
(bad)
or
adc
fisttp
push
inc
or
lods
cli
int3
jae
add
pushf
hlt
frstor
pop
sub
icebp
inc
jo
pop
xchg
adc
xor
mov
jbe
or
jge
mov
jno
fs
pop
test
lods
call
daa
std
mov
cmp
pop
ja
add
push
in
jle
fst
dec
aas
add
iret
push
jmp
dec
adc
add
cmc
ret
mov
ret
retf
add
cli
mov
call
sbb
inc
and
je
pushf
sbb
sub
sbb
adc
pop
sar
call
jns
push
pop
adc
sbb
ins
lods
ins
xor
aam
mov
cmps
lods
dec
sahf
mov
xor
mov
dec
xor
(bad)
ins
cmp
pop
daa
in
rcl
sub
mov
inc
and
outs
mov
push
dec
or
call
mov
mov
sub
adc
add
(bad)
loope
push
jecxz
jmp
pop
lahf
mov
push
jl
or
imul
or
out
push
out
mov
inc
test
inc
mov
daa
jle
inc
jl
popf
jb
jmp
fst
pusha
dec
int3
data16
ss
mov
xlat
imul
fnsave
std
ins
mov
pop
aaa
mov
mov
dec
jno
fdivrp
retf
or
jge
inc
mov
and
cmp
movs
(bad)
call
inc
lahf
mov
and
mov
inc
xchg
loop
aad
icebp
cli
cmp
fisubr
imul
cmp
cmp
jno
cli
stos
add
adc
int3
xor
mov
cld
pop
pushf
dec
and
int3
xor
aaa
iret
rcr
in
add
inc
inc
call
add
pop
loop
je
add
sar
push
push
and
mov
ret
shl
bound
jmp
test
(bad)
cmps
retf
frstor
xor
inc
daa
data16
xor
shl
jae
std
cmc
bound
not
and
fdiv
or
out
sbb
xchg
jge
xchg
push
mov
bound
ds
sub
icebp
jl
scas
inc
jmp
loopne
das
xor
cmp
mov
xchg
mov
and
in
aaa
movs
push
sbb
cwde
cmp
cmps
in
cmps
cmps
stos
fwait
das
pop
and
and
loopne
dec
fidiv
cli
ffreep
sub
jae
inc
cmp
mov
xor
lahf
sbb
jge
lds
retf
repz
pop
imul
rol
or
inc
inc
or
jp
jmp
push
jecxz
lea
jg
sbb
sar
outs
pop
fdivr
inc
data16
or
mov
xchg
sbb
cmp
xchg
lock
dec
les
push
cmps
jo
dec
xor
ja
imul
(bad)
(bad)
cmc
mov
sbb
stos
pop
mov
out
addr16
xor
scas
mov
jmp
leave
test
dec
nop
pop
jmp
mov
ss
scas
add
hlt
inc
retf
in
sahf
(bad)
mov
fs
in
push
dec
adc
and
push
jbe
inc
push
retf
rol
ja
cmp
xchg
mov
add
mov
retf
(bad)
pop
shl
push
stc
dec
adc
mov
dec
jmp
cmp
cmp
nop
aad
lods
pop
sbb
mov
xchg
push
jae
and
mov
jae
mov
mov
in
pop
es
stos
pop
mov
mov
in
movs
add
mov
sar
or
xchg
pusha
out
dec
outs
push
jo
imul
rcl
sub
fistp
mov
sbb
push
sub
popf
shl
xchg
rcl
jecxz
dec
jno
mov
sub
mov
push
aas
repz
(bad)
sub
mov
fdiv
xor
jb
ror
arpl
jnp
xchg
mov
push
jns
dec
lds
inc
adc
xchg
cwde
pop
cmp
loope
jp
and
mov
jecxz
ret
adc
mov
pop
and
mov
(bad)
sbb
imul
add
mov
and
aas
aam
stc
movs
push
xor
inc
shl
neg
pop
test
dec
js
pusha
pop
push
into
mov
dec
xor
or
rol
or
js
test
mov
cwde
in
ret
fisttp
addr16
or
inc
and
jmp
mov
push
push
dec
ret
into
aad
cmp
inc
or
popa
pop
add
cdq
push
and
leave
pop
dec
push
push
imul
xlat
push
fisttp
xor
push
addr16
out
cmp
cs
fiadd
mov
mov
int
leave
repnz
movs
jle
cmp
imul
dec
xlat
out
mov
push
cmp
cli
aas
cmp
ja
mov
push
mov
mov
aas
outs
mov
fmul
retf
es
dec
ret
popa
push
mov
out
int3
adc
mov
inc
push
lods
stos
movs
mul
popf
cmps
mov
or
sti
or
sbb
xor
ins
lds
xchg
movs
stos
cmp
push
dec
(bad)
cmp
inc
in
je
xor
push
or
jle
mov
enter
dec
es
adc
and
(bad)
jae
inc
stc
out
cmp
and
xor
push
aam
inc
jmp
fsub
jb
jl
in
int
mov
push
xor
mov
ins
icebp
mov
hlt
loop
jecxz
dec
std
mov
icebp
cld
ins
jmp
cdq
inc
jae
stos
imul
inc
jbe
push
add
add
std
test
bound
pop
icebp
mov
dec
(bad)
adc
add
mov
add
sahf
inc
cmp
pop
pop
push
dec
dec
adc
idiv
pop
retf
cmp
into
lea
dec
pusha
mov
pop
jns
inc
enter
dec
ret
das
gs
rol
jecxz
leave
xor
inc
jle
xchg
div
xor
ds
mov
pop
mov
xor
mov
popa
sub
dec
into
jae
and
jb
popf
xchg
xor
pop
pop
dec
pop
sbb
add
mov
rol
es
xchg
mov
pop
sti
pop
arpl
stos
add
call
adc
sbb
(bad)
mov
push
(bad)
sub
mov
dec
dec
fptan
mov
cwde
pusha
push
xchg
ror
sbb
out
adc
or
repz
push
pop
pop
add
addr16
call
dec
out
push
loop
mov
push
or
and
pop
mov
xor
jae
push
imul
rcl
xor
mov
xor
(bad)
jno
mov
adc
retf
mov
dec
jge
je
scas
or
xor
inc
sbb
jmp
mov
imul
in
fadd
ds
dec
lock
mov
mov
out
fstp
cmps
xchg
push
dec
adc
in
xor
fsubr
lds
mov
test
jno
pop
cld
add
pop
jl
mov
and
push
ficomp
aas
add
dec
push
jne
out
hlt
outs
nop
xchg
loope
aas
cwde
outs
dec
out
out
push
mov
aaa
push
sub
push
fld
popf
pop
gs
xor
lea
sub
jo
mov
ins
dec
mov
inc
mov
pusha
lods
mov
lock
aas
imul
mov
ret
and
pop
mov
mov
retf
ficomp
push
pusha
imul
cmp
mov
and
mov
or
aaa
ins
and
pop
fidiv
iret
inc
cs
mov
xor
jg
stos
scas
jmp
sub
sahf
retf
jecxz
das
loop
xchg
mov
adc
fdivr
(bad)
iret
or
jbe
(bad)
pop
mov
xchg
mov
ror
mov
gs
ins
daa
ds
jge
cs
ror
call
cld
cmp
pop
mov
jg
popa
das
sbb
mov
in
dec
sahf
sbb
test
int3
mov
aad
imul
or
xchg
mov
pop
enter
sbb
fild
mov
mov
cmc
mov
or
push
push
add
or
or
mov
fild
movs
sub
mov
inc
mov
push
(bad)
xchg
fldcw
rcpps
aas
xor
xor
outs
and
retf
loope
stc
cwde
scas
mov
pop
cmp
xchg
push
jmp
xchg
imul
inc
push
push
int3
or
cmps
pop
pop
icebp
daa
and
or
fs
pop
push
or
mov
(bad)
dec
leave
and
inc
mov
lds
mov
cli
adc
maskmovq
not
daa
cli
popf
sti
in
inc
mov
xor
call
push
aas
sbb
shl
push
iret
cmps
and
pop
or
inc
mov
xor
sub
shl
push
mov
rcl
cmps
repnz
ins
pop
dec
popf
jns
mov
(bad)
shl
mov
or
jb
xor
loope
out
fwait
xchg
mov
and
outs
jno
(bad)
loope
repnz
aaa
dec
sahf
call
clc
xor
pushf
jg
or
mov
repnz
(bad)
and
cwde
(bad)
hlt
fadd
push
fcom
fbstp
popa
div
mov
retf
std
cli
push
push
xchg
mov
mov
xor
and
mov
xchg
push
push
pusha
repz
or
aam
jnp
enter
addr16
sub
add
fwait
outs
lock
mov
mov
mov
xchg
jle
xor
sub
(bad)
scas
fsub
and
sub
cmc
xchg
push
inc
sti
shl
std
add
add
push
ror
cmp
jnp
inc
inc
lods
jge
pushf
int
mov
imul
xor
push
jbe
mov
add
sub
xchg
movs
and
pop
push
pop
pop
orps
rcl
mov
cmps
mov
out
loopne
sahf
and
mov
jecxz
dec
push
aaa
je
cmp
retf
jne
movs
dec
or
icebp
call
loope
imul
(bad)
xchg
mov
into
sub
xchg
std
mov
mov
das
or
daa
fcmovb
cmp
bound
out
fs
inc
aas
rol
(bad)
(bad)
cwde
cmp
push
pop
jg
arpl
mov
repnz
fisttp
sub
add
jge
rol
jb
add
pusha
stc
loope
ins
int
ja
and
mov
pop
les
and
xor
iret
daa
popf
xchg
cmps
pusha
pop
stos
pusha
sbb
mov
cmps
dec
mov
fisttp
and
add
inc
scas
push
in
dec
or
inc
xor
sbb
es
mov
xchg
pop
repnz
cmp
call
mov
test
jg
inc
adc
stos
std
pop
fild
(bad)
cmp
movs
out
jnp
repnz
cli
mov
jns
xchg
and
outs
jne
push
mov
arpl
retf
imul
pop
jge
or
adc
inc
stc
push
xchg
fdiv
jb
div
outs
sub
out
jae
retf
jns
sbb
js
inc
xchg
fild
adc
je
aam
out
lahf
fcomp
mov
pop
nop
pop
js
sub
cwde
sub
popa
mov
data16
repnz
inc
xchg
pop
mov
ret
push
fndisi(8087
into
icebp
cmp
mov
sbb
mov
(bad)
xor
push
call
sub
adc
call
cmc
je
arpl
push
inc
aad
pop
inc
stc
push
mov
stc
sbb
loop
nop
cmp
cmc
arpl
icebp
jno
ja
iret
lock
fcom
inc
imul
js
cwde
adc
mov
cdq
push
mov
cli
and
mov
xor
mov
fisttp
adc
dec
stos
jg
ds
aad
mov
and
clc
outs
and
loop
stos
cmc
sbb
pop
jle
cmp
dec
mov
add
cwde
rcr
rcl
xor
dec
sti
sub
dec
dec
cmp
pop
mov
xor
push
mov
(bad)
push
aam
pop
push
call
inc
ja
jno
enter
mov
ds
or
cdq
(bad)
mov
aas
div
ror
jnp
rcr
aad
cwde
push
repz
mov
push
pop
lods
inc
jge
mov
cmp
mov
xor
mov
outs
jns
pop
rcr
inc
js
ss
pushf
mov
xchg
push
jg
mov
sub
imul
or
xchg
push
xor
adc
add
adc
je
mov
push
ds
test
or
mov
inc
sub
cwde
aam
out
loope
fdivr
shr
xor
pop
sbb
xchg
popa
push
ins
ret
hlt
out
aad
fs
(bad)
fimul
mov
fcomp
lahf
in
xchg
add
jnp
sbb
add
leave
sti
pop
or
scas
mov
mul
arpl
sti
cwde
stos
nop
cmp
dec
ficomp
mov
pop
and
test
ja
cmp
or
movs
sbb
int3
ja
or
mov
dec
call
stos
adc
pusha
cmp
dec
not
fidiv
and
loopne
dec
mov
(bad)
adc
dec
sub
pop
adc
call
jp
mov
cmp
inc
mov
mov
ret
mov
xchg
call
cwde
mov
mov
adc
pop
pusha
mov
inc
push
test
jnp
call
iret
mov
test
cmp
lods
in
pop
imul
add
pushf
in
pop
mov
jbe
mov
scas
loopne
sbb
aas
mov
inc
out
(bad)
stc
xchg
mov
sbb
dec
dec
neg
xchg
mov
arpl
stos
cwde
loop
int3
sub
push
adc
les
jnp
inc
les
mov
sbb
pusha
enter
mov
pop
add
push
or
stos
dec
bnd
pop
fbld
adc
add
lods
jp
movs
js
sub
es
mov
in
mov
jae
test
pop
pushf
lods
aas
sub
xor
pusha
dec
cwde
sub
inc
leave
jl
xchg
pop
push
sub
mov
(bad)
retf
push
xchg
(bad)
push
clc
xchg
hlt
shl
sub
and
xor
cmp
repnz
imul
adc
pop
sbb
xchg
out
jns
mov
popa
lock
adc
or
lea
fsub
mov
cmp
dec
movs
push
push
ficomp
xor
mov
lods
adc
inc
jg
add
and
jmp
jge
not
arpl
aaa
(bad)
push
mov
mov
into
add
jo
mov
sti
mov
lea
mov
inc
repz
lock
or
sub
sub
ins
test
sbb
dec
test
out
pop
aaa
inc
add
or
aaa
out
mov
jecxz
add
cdq
xor
pop
mov
dec
mov
je
mov
jno
jp
mov
xchg
xor
xchg
data16
mov
xchg
test
test
adc
(bad)
out
cli
lods
and
xor
enter
mov
data16
stos
dec
push
mov
sub
rcr
cmps
mov
sub
jb
pop
loop
call
or
cld
adc
fdivr
jl
xor
fcomp
add
ficom
into
inc
sbb
int3
sub
pop
ins
into
sbb
inc
pop
dec
nop
xchg
jnp
sbb
jae
mov
xchg
call
mov
sub
leave
pop
enter
lods
push
xchg
(bad)
int
jmp
mov
push
inc
mov
inc
mov
xchg
inc
scas
pushf
ret
shr
aas
jne
jmp
mov
dec
pop
sbb
jp
push
lods
pop
pushf
lea
push
mov
adc
mov
push
les
or
int
xchg
dec
fistp
addr16
or
add
sub
test
lds
cmp
xchg
jg
xor
mov
add
gs
pop
hlt
mov
popa
jo
push
mov
and
not
sub
cwde
leave
adc
jae
dec
or
dec
push
mov
sbb
xlat
fld
push
jle
add
fucomi
jl
adc
push
cmps
inc
pop
pusha
dec
mov
movs
call
iret
mov
lea
das
je
cmp
leave
push
sbb
jbe
jmp
pop
pusha
dec
movs
xchg
pushf
out
pop
cmc
mov
pop
xchg
fwait
stos
fs
daa
popa
xchg
in
dec
xchg
std
xchg
mov
inc
mov
leave
dec
and
pop
mov
sbb
adc
(bad)
int
imul
aam
scas
ret
repz
inc
jnp
out
xor
sti
jbe
sub
popf
sahf
aad
mov
pop
jae
pop
dec
stc
mov
jae
push
test
xchg
dec
mov
aas
mov
push
and
test
test
movs
and
jne
and
jno
es
repnz
leave
and
jmp
mov
in
xchg
(bad)
loop
push
xchg
cmp
and
jo
es
fild
(bad)
jge
or
cmp
lea
adc
mul
xchg
jno
jne
adc
xor
(bad)
mov
mov
pop
jo
dec
cmp
sar
xor
pop
repnz
cmps
mov
and
add
sbb
shl
repnz
cmps
cmp
or
cmps
test
adc
push
test
(bad)
aaa
out
dec
loop
xor
cmp
mov
stos
int
inc
sub
jb
dec
pop
rcr
sub
mov
cs
mov
jp
push
popf
loopne
cmp
sbb
sbb
xchg
rcr
cld
in
jle
mov
hlt
ret
rol
adc
daa
adc
icebp
sti
outs
sbb
jle
push
icebp
adc
xchg
dec
(bad)
ficom
sub
sbb
out
push
out
cmp
mov
push
mov
out
push
push
jg
pop
jp
aaa
sar
mov
mov
inc
int3
mov
cmp
push
add
mov
dec
jbe
push
les
sub
iret
aam
and
popa
inc
cld
pop
loopne
xor
lods
push
mov
sbb
loopne
xchg
hlt
leave
add
(bad)
sti
xor
stos
bound
lods
push
add
iret
inc
mov
out
sahf
inc
or
(bad)
je
cli
ds
xchg
jno
cli
cmp
(bad)
out
rcl
mov
dec
or
int3
cmc
jae
retf
enter
xor
or
vmovaps
leave
and
dec
sbb
jmp
rcr
cmps
popa
imul
mov
fwait
into
push
aaa
test
ret
ss
push
sbb
je
frstor
mul
das
fisttp
(bad)
retf
sar
mov
fld
mov
jl
aaa
sub
sub
jae
hlt
stos
mov
and
rol
adc
in
mov
mov
jl
std
mov
imul
les
rol
xor
sti
mov
add
cmc
or
std
shl
add
lods
adc
mov
push
(bad)
pop
mov
mov
out
mov
mov
cli
cs
in
movs
movs
jg
(bad)
pop
js
dec
aas
repnz
das
das
mov
lods
mov
push
les
fs
call
es
sti
xchg
scas
out
jle
rcr
test
jae
movs
outs
enter
sbb
(bad)
in
fist
scas
bound
add
mov
test
mov
cmp
jge
lods
xor
inc
icebp
out
call
fwait
xor
pop
dec
cmp
jmp
out
pop
push
jecxz
sti
stos
xchg
mov
repz
shl
fadd
bound
les
dec
push
addr16
call
sub
movs
and
imul
add
push
mov
xor
push
xchg
frstor
movs
lahf
push
push
and
outs
lock
fdivr
inc
lods
hlt
(bad)
dec
push
fistp
mov
ja
ret
out
ret
push
inc
xchg
mov
fcom
push
adc
outs
aam
sti
cdq
or
(bad)
sti
outs
inc
xor
jp
or
das
mov
or
jecxz
jmp
xlat
stos
in
pop
dec
fistp
sub
in
iret
outs
into
push
xlat
lods
and
shr
mov
xchg
test
mov
iret
cmps
das
in
mov
cmp
outs
xor
mov
xor
(bad)
in
inc
push
push
dec
mov
dec
sbb
shl
inc
outs
and
imul
je
daa
aam
jmp
xchg
inc
rcr
pop
pop
inc
aaa
mov
loopne
shl
inc
mov
add
fcom
xchg
ficomp
sahf
lock
mov
int3
mov
bound
xor
daa
pop
dec
movs
cmp
enter
add
inc
test
sahf
mov
jb
xchg
gs
sub
out
dec
retf
and
sub
sub
ins
jbe
adc
repz
out
mov
fbstp
dec
push
or
imul
sar
test
cmc
ja
and
cmps
loope
dec
mov
jne
sub
in
mov
cmp
popf
jno
sub
pushf
rcr
je
aaa
xchg
loope
push
add
cmps
inc
(bad)
js
imul
cmps
xor
ins
not
fnstenv
or
or
cmc
dec
or
repz
fist
(bad)
cmc
add
out
xchg
ds
jg
mov
xor
dec
inc
dec
jle
ja
imul
in
int
mov
rcr
push
xor
dec
(bad)
jnp
dec
push
mov
pop
es
hlt
mov
stc
addps
cmps
push
out
add
dec
dec
sub
adc
call
inc
dec
stc
jge
dec
aaa
dec
jl
arpl
mov
sub
dec
and
xchg
aas
ds
jo
push
mov
add
adc
push
push
outs
inc
cwde
bound
sbb
int3
scas
adc
mov
pop
xchg
jb
mov
mov
sahf
neg
rol
dec
fwait
push
movs
add
sub
test
popf
and
jmp
mov
lahf
dec
fadd
mov
mov
nop
inc
sti
xor
or
mov
jns
jb
lds
(bad)
jmp
mov
dec
sbb
into
ror
jle
cmp
push
cwde
mov
push
add
push
imul
jmp
ror
(bad)
sbb
ds
add
inc
aad
popa
inc
inc
pop
fwait
dec
test
jno
xchg
inc
xchg
mov
add
xor
sub
xchg
lds
outs
push
jae
test
lea
cdq
sub
jg
in
(bad)
push
aam
je
and
push
adc
jo
add
std
sbb
fsubr
(bad)
stc
fisubr
das
loope
jbe
repz
mov
xor
pushf
adc
sub
(bad)
mov
xchg
mov
jp
inc
(bad)
jne
mov
jae
jp
xor
mov
scas
cmp
imul
(bad)
mov
dec
dec
pushw
push
sbb
sbb
mov
mov
stos
scas
frstor
jns
pop
icebp
mov
and
(bad)
(bad)
cmp
mov
daa
adc
in
mov
push
mov
lahf
mov
retf
jns
std
sub
push
mov
mul
pop
cmp
call
push
pop
sbb
adc
jle
push
or
xchg
pop
lds
in
adc
adc
aad
cmp
les
hlt
mov
sub
push
je
loop
add
loope
stos
daa
pop
stos
dec
mov
pop
clc
mov
test
dec
popa
and
imul
pusha
jae
pop
scas
jecxz
rol
mov
and
jp
mov
cmps
stos
outs
xor
inc
sbb
jmp
or
stos
adc
sub
out
(bad)
adc
cs
add
pop
sub
stos
aad
adc
push
shl
sub
lods
adc
nop
ror
popa
dec
shr
inc
icebp
mov
dec
cmp
adc
aas
aam
mov
jmp
inc
inc
xchg
ja
cwde
or
shl
and
data16
xchg
ret
sbb
push
test
ja
sub
sti
jecxz
jmp
add
mov
gs
mov
mov
loope
out
push
test
mov
xor
pop
mov
ja
cs
gs
repnz
shr
sbb
adc
push
xchg
cld
(bad)
xor
ins
dec
call
xor
cmp
mov
and
or
add
push
jl
bound
retf
and
and
movs
dec
ins
mov
gs
fnstsw
lahf
jno
add
(bad)
dec
dec
js
sub
fisubr
test
shr
push
adc
ret
outs
add
add
pop
and
jecxz
arpl
loopne
nop
mov
js
imul
mov
ds
jnp
jae
sbb
daa
outs
scas
or
addr16
repnz
enter
push
mov
nop
fisttp
add
test
out
into
icebp
jg
inc
aam
cmps
or
push
aaa
loope
sub
out
fstp
jns
daa
push
mov
int
jbe
mov
adc
and
cmp
ins
jle
mov
in
syscall
jb
push
jle
jmp
cmp
push
mov
shl
cmp
retf
test
mov
cmp
sbb
cmc
inc
ss
or
popf
inc
pop
pop
add
fs
imul
xchg
adc
sub
adc
pop
xchg
inc
pop
movs
cmp
push
pusha
xor
fdiv
lahf
pop
out
jecxz
hlt
movups
push
ins
push
enter
daa
lods
pop
outs
fisubr
ret
xchg
inc
das
movs
popa
and
mov
inc
lds
mov
pop
ins
pop
or
loopne
and
dec
push
mov
inc
popa
outs
or
or
mov
mov
cmp
push
cmc
call
sub
repnz
mov
enter
and
inc
sub
mov
out
das
push
ret
push
iret
cmps
idiv
or
adc
clc
test
das
xchg
out
pop
xor
xor
outs
jl
inc
movs
sbb
out
lds
push
sbb
int3
in
loope
stc
cdq
push
dec
push
mov
and
in
ds
xchg
sbb
stos
adc
inc
and
ret
loopne
lods
ror
adc
mov
dec
sub
add
mov
imul
fdecstp
scas
(bad)
or
ror
nop
shl
cld
fwait
ror
pop
mov
mov
addr16
adc
into
and
or
repnz
cmp
xor
push
or
icebp
ss
inc
mov
push
jb
nop
mov
mov
iret
pop
xor
retf
xor
mov
pop
mov
lods
test
xchg
das
xor
sub
push
pop
dec
int3
ret
mov
ins
push
adc
push
mov
push
stc
call
and
pop
mov
mov
ins
push
cmp
test
retf
mov
jl
pop
das
or
dec
fbstp
or
imul
div
jno
push
(bad)
int
loop
xchg
cmp
repz
dec
inc
loop
in
test
pop
adc
sbb
add
dec
xor
add
sti
popf
into
push
sub
pushf
call
sub
inc
pop
jg
pop
adc
inc
mov
shr
push
sbb
jb
or
cmp
mov
popa
push
jp
jnp
enter
(bad)
shr
add
call
fadd
fwait
jle
jmp
aam
das
jmp
add
inc
add
out
pop
rcr
sub
loop
sub
cmps
adc
popf
das
xchg
mov
fnstcw
or
mov
xor
and
cmp
mov
add
ins
adc
lods
stos
jae
mov
push
xor
fcom
add
sub
fdivr
add
or
push
sbb
jno
mov
cmp
xor
in
in
pop
ja
popa
push
aad
mov
inc
pop
push
imul
cmp
pusha
les
mov
in
cs
repz
push
aad
sbb
stc
stos
rcr
xor
nop
or
mov
push
xchg
js
(bad)
dec
mov
or
stc
int
xchg
enter
gs
sbb
cdq
dec
scas
stos
fidiv
into
retf
out
xchg
sub
je
jmp
push
(bad)
xor
dec
mov
inc
xchg
iret
inc
pop
scas
(bad)
ror
cmp
cdq
sub
cdq
xchg
pushf
loop
inc
sub
bound
pusha
and
int
sbb
sbb
jns
out
lahf
jae
dec
jno
rol
sbb
xor
movs
and
das
and
cmc
mov
std
pop
or
mov
xlat
add
dec
jmp
sub
push
addr16
jp
jmp
cmp
fisttp
lods
add
mov
pop
sbb
lea
adc
cmp
pop
rcl
sub
fdiv
lods
nop
sub
inc
push
mov
repnz
out
icebp
mov
in
adc
pop
cld
fild
ins
add
or
fcmovnb
cmp
loopne
xor
loopne
test
pop
dec
call
push
lods
jp
out
cmp
daa
imul
ss
jbe
das
add
movsx
jle
push
dec
mov
sbb
data16
nop
aad
ins
aas
xchg
adc
and
sbb
jle
movs
jecxz
sbb
mov
aaa
mov
icebp
sbb
push
push
int3
and
ret
shr
sahf
jnp
xchg
adc
out
sbb
dec
mov
jae
or
or
cdq
repz
cld
fcomp
and
xor
mov
call
popf
sub
into
mov
xchg
dec
xor
mov
xor
enter
dec
and
das
call
dec
int
fcom
dec
mov
jnp
loope
sar
loope
cdq
xor
jmp
inc
lahf
(bad)
jnp
push
mov
mov
and
bound
shl
push
dec
in
cld
daa
retf
sbb
(bad)
and
push
mov
call
test
int3
fild
fisttp
mov
test
adc
sbb
(bad)
in
jnp
mov
jmp
and
dec
adc
pop
arpl
(bad)
cmp
repnz
sti
pusha
push
xor
xchg
mov
leave
stos
jp
jnp
push
inc
add
in
arpl
rcpps
in
sbb
xchg
and
push
xchg
in
mov
mov
pop
adc
test
sub
aam
imul
call
mov
dec
add
repz
popa
adc
sub
std
cmp
sub
mov
in
push
jge
mov
(bad)
loop
dec
sub
sub
call
mov
(bad)
xor
aas
push
jns
mov
xchg
cdq
test
jg
pop
mov
cmp
popa
hlt
push
dec
mov
out
sahf
sbb
mov
mov
mov
sub
cmp
fidiv
shl
add
nop
inc
in
mov
mov
sti
add
and
popa
dec
adc
inc
jg
push
mov
repz
lock
test
pop
push
pop
mov
or
cld
std
pop
neg
sbb
cwde
xchg
jmp
mov
loopne
xchg
out
xor
fistp
xchg
pushf
test
dec
lock
pop
or
int3
cmp
jmp
lods
int3
loope
sbb
retf
dec
mov
mov
cmp
adc
fcom
cmp
inc
outs
(bad)
cmp
cmp
test
out
mov
xchg
(bad)
imul
jmp
push
cmp
push
adc
cld
dec
ror
inc
test
retf
adc
outs
(bad)
adc
dec
xor
jb
mov
add
adc
daa
fcomp
sub
popf
inc
sbb
add
les
inc
jle
repnz
pop
sub
out
leave
fistp
mov
sahf
jmp
mov
adc
mov
sbb
xor
aaa
inc
imul
jl
loopne
jmp
mov
(bad)
xchg
mov
enter
ins
movs
scas
pop
jmp
leave
inc
mov
aas
mov
imul
cmps
xor
or
ins
jb
push
sub
movaps
sbb
test
add
sub
fs
dec
xchg
punpckhdq
stos
xchg
push
mov
bound
push
adc
arpl
ins
cmp
jmp
add
arpl
jne
xchg
ror
and
xor
(bad)
psubb
cpuid
sti
movs
lods
xor
loopne
cmc
ins
retf
hlt
scas
icebp
pop
jl
fst
mov
rcr
cs
loop
push
add
mov
mov
xor
adc
lods
std
cmp
push
fwait
dec
and
xor
pop
adc
push
sub
mov
xchg
adc
mov
popa
scas
sbb
movs
push
adc
not
or
ret
sub
push
adc
in
ss
xlat
or
aas
xchg
out
pop
stos
or
test
out
stc
or
int
rol
imul
add
(bad)
clc
xlat
or
push
add
mul
push
adc
or
dec
dec
sub
jg
push
(bad)
pop
or
sbb
mov
and
cmp
and
adc
iret
or
jo
stos
mov
je
mov
cmps
push
pop
stc
lods
mov
pop
xchg
push
iret
lahf
stos
pop
mov
push
gs
inc
inc
mov
das
ja
lock
and
or
jnp
inc
fcomip
jae
in
sub
mov
mov
rcr
or
ret
call
outs
push
sub
icebp
shl
fisttp
(bad)
std
loope
push
cmc
inc
xor
cli
sbb
sub
and
or
inc
out
call
enter
mov
js
or
mov
xor
add
dec
dec
movs
fiadd
and
xchg
push
outs
cli
sub
retf
daa
cmp
pop
cmp
xor
cmp
cmp
ins
cmc
cmps
adc
sbb
push
out
sbb
test
call
and
pop
mov
out
and
inc
imul
enter
push
rcl
(bad)
mov
mov
jno
xor
inc
stos
mov
add
pushf
mov
push
out
lods
inc
adc
inc
mov
adc
cmp
mov
js
xor
out
ret
sahf
fs
jl
es
push
into
shr
jl
dec
dec
fld
pushf
push
cmp
dec
add
out
pop
movs
push
out
mov
imul
jo
dec
push
xor
mov
outs
jmp
mov
adc
js
sub
int
inc
jno
pushf
cwde
push
pop
fdiv
aas
in
out
daa
push
push
adc
(bad)
cmc
loope
mov
lds
inc
mov
and
(bad)
fstp
push
lock
sub
mov
sbb
push
push
mov
pop
and
retf
cmp
or
pop
pop
cmp
push
push
inc
cs
int3
ss
ror
ins
shl
scas
int3
adc
(bad)
aam
stos
pop
mov
jne
jb
aaa
nop
and
sbb
int
mov
fcomp
js
call
mov
xchg
push
mov
sub
lea
jns
ins
std
gs
xor
daa
ins
out
cmps
adc
out
aad
ret
fsubr
mov
jecxz
adc
sti
mov
sub
jg
mov
es
lods
adc
dec
mov
xchg
sbb
pop
loop
sar
bswap
cmps
lock
pop
lahf
xchg
ins
sbb
or
pop
sub
mov
inc
add
push
mov
mov
sahf
call
mov
je
enter
mov
sub
sub
cmp
imul
leave
pop
add
test
and
jns
fwait
stc
out
int
call
pop
inc
pusha
leave
sbb
sbb
mov
aad
sub
pop
lea
mov
sub
add
push
and
mov
sub
fmulp
xchg
mov
mov
je
enter
arpl
sbb
das
sbb
bound
jle
add
mov
xchg
mov
jns
jno
sub
outs
fwait
inc
sbb
cwde
in
push
jl
enter
pusha
jmp
add
xchg
fisttp
dec
mov
cmp
adc
and
jnp
pusha
addr16
data16
adc
pop
cmps
sub
add
pop
test
aam
clc
outs
(bad)
jge
std
adc
clc
and
sbb
push
enter
lods
mov
inc
xchg
inc
adc
and
inc
sti
clc
add
sbb
push
xlat
repz
and
jns
fsubr
ret
adc
(bad)
inc
and
and
cld
pop
movs
fisttp
sbb
cmp
icebp
std
pop
pop
in
in
lods
fstp
aaa
aad
add
test
enter
cmp
ret
cld
push
sub
sbb
push
movs
pop
cmps
dec
xor
es
cli
hlt
jle
neg
gs
cli
retf
in
retf
jl
jmp
xor
inc
(bad)
jg
pusha
inc
sbb
stos
pushf
pop
sbb
scas
jge
or
push
jecxz
ins
les
lods
mov
int3
data16
push
movs
into
mov
xor
jae
repz
pop
iret
loope
lea
test
test
xchg
clc
mul
leave
jmp
sub
mov
call
test
xchg
cmps
sub
jle
sub
cmc
sbb
aam
dec
cmp
cwde
or
push
inc
stos
push
mov
sub
lar
(bad)
sub
or
push
and
mov
div
cmp
rol
je
(bad)
mov
lods
movs
hlt
push
out
or
mov
push
add
push
lods
or
je
out
call
mov
xchg
lods
inc
int3
adc
pop
ja
dec
xchg
or
test
scas
and
daa
stc
repz
sub
and
imul
mov
and
sub
out
pushf
fcomp
(bad)
cmp
std
cdq
sti
push
enter
push
xchg
popa
push
mov
int3
inc
cmp
lock
jl
push
popa
mov
repnz
or
test
ins
mov
(bad)
xchg
ja
test
inc
shl
das
stos
test
inc
jge
cs
ja
inc
leave
popf
pushf
movs
clc
xchg
pop
mov
fs
fsubr
enter
in
xor
mov
xlat
call
nop
ja
jmp
push
xlat
call
adc
lods
bound
movs
mov
adc
xchg
mov
adc
sbb
scas
or
cmp
ds
push
sub
psrlq
cdq
or
gs
push
pop
push
or
movs
iret
imul
fisttp
repz
scas
sub
cmp
xor
enter
cmp
xor
mov
ror
call
cmp
and
retf
pop
cdq
xchg
cmc
jmp
sti
test
mov
int
mov
sahf
test
loop
aaa
aam
call
jg
(bad)
out
(bad)
(bad)
repnz
into
es
and
popa
les
sbb
in
adc
cmp
push
mov
ror
stos
xlat
cdq
mov
pop
lods
cmp
mov
cwde
pop
inc
push
ss
je
sbb
xor
div
and
inc
add
scas
fdivr
push
pop
jbe
or
add
jge
fadd
adc
and
or
jmp
adc
imul
movs
adc
(bad)
cmp
sbb
frstor
xchg
sar
mov
repz
mov
mov
xchg
or
push
es
cld
jg
inc
lahf
lahf
jne
pop
jae
cdq
popf
cmp
shl
mov
sbb
inc
sbb
jno
nop
inc
stos
aad
enter
cli
jb
imul
aas
mov
jmp
push
pop
inc
pusha
inc
pop
rol
lea
mov
js
lods
fimul
jle
add
inc
cwde
outs
nop
outs
jbe
(bad)
cmp
(bad)
std
adc
stos
sbb
rol
mov
or
ins
retf
mov
jns
mov
cdq
mov
(bad)
fstp
(bad)
mov
mov
lods
and
mov
js
dec
loopne
dec
retf
cmps
cmp
mov
add
fild
jnp
inc
test
int3
xor
cmp
mov
cmp
std
ret
out
xor
sub
jnp
sbb
arpl
mov
out
inc
or
add
out
outs
sub
fwait
cmp
out
inc
(bad)
adc
daa
inc
adc
into
mov
xchg
es
jns
not
mov
hlt
xchg
neg
xchg
pop
rol
shl
cs
mov
rcl
sahf
neg
(bad)
sub
fstp
fldlg2
push
mov
fistp
pop
in
sub
mov
xchg
icebp
loope
adc
into
jae
sub
mov
rcl
add
fwait
and
cmp
inc
sbb
mov
lea
and
sub
sub
inc
fld
and
lods
dec
stc
jae
xlat
xlat
pop
xor
push
test
ss
push
je
jns
cli
dec
in
(bad)
clc
cs
sar
dec
mov
sub
imul
push
xor
pusha
bound
push
xor
lds
fcomp
or
jmp
clc
repz
push
mov
aad
xor
and
cmp
iret
push
fld
es
lods
mov
sub
inc
int3
ret
in
fist
call
xor
lods
lds
dec
adc
ret
bnd
cld
cwde
mov
clc
push
loope
mov
or
and
or
psrlq
shld
js
dec
arpl
add
outs
cmp
pusha
mov
call
out
ja
dec
inc
mov
pusha
jecxz
out
and
mov
int
jne
js
sub
sub
int3
adc
xlat
adc
jae
fdiv
cld
je
adc
push
jae
lods
add
add
retf
and
jle
mov
xchg
dec
inc
mov
je
cmp
sbb
fistp
retf
and
mov
xor
jmp
pop
xor
xchg
std
jle
fsubr
test
shl
adc
push
(bad)
jnp
ret
fiadd
add
mov
push
pushf
pop
popa
gs
add
mov
fisttp
and
cmps
mov
mov
inc
inc
dec
xchg
stos
call
out
(bad)
cwde
aam
stos
outs
pop
pop
xor
mov
pop
repz
ds
pop
rcl
out
mov
jp
xchg
aaa
xor
out
pop
push
ret
pop
scas
in
in
jno
stos
add
mov
movs
push
fbld
add
sub
(bad)
shl
add
inc
jae
adc
push
push
sbb
imul
sti
ss
jb
xor
or
fnsave
sub
scas
out
outs
out
(bad)
repz
cs
bound
ds
cwde
cmps
enter
int
fcmovnbe
fild
push
imul
test
and
or
sub
inc
jge
mov
mov
mov
mov
mov
push
(bad)
mov
iret
cmp
inc
sbb
mov
pop
and
push
adc
out
xchg
add
pop
out
sbb
fwait
ret
lahf
sbb
push
aad
(bad)
clc
mov
mov
push
pop
popa
sub
sub
adc
rcr
xor
inc
push
addr16
mov
movs
xchg
jl
xchg
pop
mov
out
push
lea
jge
mov
test
icebp
sub
cmc
les
cmp
push
cmps
stos
int
rol
stos
enter
dec
inc
adc
fwait
in
out
xor
sbb
push
mov
out
out
repnz
cwde
and
or
in
jg
xlat
mov
or
pop
dec
in
ret
out
ins
mov
push
(bad)
(bad)
icebp
cmp
jnp
movs
jnp
ins
in
shr
sbb
dec
test
push
pushf
add
xor
push
mov
cmp
mov
scas
clc
xor
pop
or
mov
cs
xor
sub
popf
repnz
ret
xchg
lock
scas
loope
mov
lds
loop
xor
sub
pop
mov
jno
jmp
xlat
scas
(bad)
out
mov
mov
(bad)
xchg
fldenv
fs
(bad)
mov
out
loop
cmps
jno
mov
or
pavgb
jae
jns
imul
mov
mov
adc
adc
mov
jns
ret
jbe
jg
push
outs
cld
adc
push
mov
loop
aad
xchg
popf
xor
mov
fidivr
xor
in
loopne
and
(bad)
jg
xor
repz
(bad)
mov
lods
aam
dec
fistp
or
ss
out
xlat
dec
ret
mov
adc
or
(bad)
ins
dec
push
mov
cmp
fisub
pusha
call
mov
jmp
enter
outs
inc
outs
pop
xor
ja
xor
adc
dec
ret
xor
fst
mov
mov
jae
sbb
push
repz
inc
jns
inc
mov
inc
inc
lock
fcom
in
out
sbb
xchg
(bad)
or
out
mov
push
bound
fmul
sti
sbb
xchg
gs
xor
into
cmp
frstor
jnp
stos
cmp
mov
push
dec
cmps
sahf
retf
xchg
and
fisttp
push
cmp
sbb
jmp
or
rcl
dec
imul
mov
mov
pushf
mov
lods
push
add
pop
jno
jmp
cli
loop
shl
leave
push
adc
xchg
cmc
pop
push
xor
in
and
sti
pop
sbb
push
and
ror
jg
pop
mov
jae
xchg
jge
daa
and
dec
bound
(bad)
xor
fcom
dec
lods
retf
loop
mov
mov
fisttp
inc
mov
and
pop
push
push
and
cmp
xor
fwait
cmp
pinsrw
xchg
sub
lahf
xor
mov
push
rcl
retf
jb
repnz
and
lods
xor
dec
pop
stos
dec
cmp
mov
mov
adc
or
push
push
adc
adc
and
push
jl
xor
sub
les
call
or
dec
out
mov
jmp
loope
pop
(bad)
sub
lds
jb
cmp
fld
repnz
repnz
inc
push
pop
lea
sub
mov
in
in
mov
inc
adc
push
push
xchg
call
(bad)
xchg
test
out
inc
mov
daa
fisttp
cmp
cmps
(bad)
xchg
dec
in
and
push
cmp
mov
push
fstp
mul
std
cwde
jle
xchg
and
imul
sbb
fist
repnz
(bad)
push
mov
mul
mov
test
outs
cmp
jmp
mov
and
adc
mov
and
xchg
data16
fsub
jb
jae
inc
or
sbb
xchg
test
jecxz
pop
pop
mov
out
ret
mov
ffreep
inc
popa
std
sti
jbe
outs
sub
xchg
mov
xor
cmp
out
sbb
jb
int
bound
scas
adc
pop
mov
rol
sahf
dec
mov
mov
dec
lods
mov
push
(bad)
dec
dec
mov
test
inc
and
push
push
shl
push
fcmovne
sti
ins
fst
jo
in
stos
stos
or
in
and
mov
xor
xor
mov
xor
inc
cmp
inc
je
jp
in
sahf
(bad)
out
mov
outs
movs
pop
xchg
mov
ins
rcr
pop
pop
push
icebp
dec
lahf
xor
jmp
mov
push
sar
inc
in
lods
sub
pop
outs
xor
enter
xchg
loopne
je
push
dec
pop
test
or
fdivr
into
mov
mov
cmc
dec
hlt
es
repz
(bad)
jae
mov
push
movs
push
movs
add
xor
in
add
xor
cwde
add
ins
jne
mov
rdpmc
xchg
dec
push
push
in
adc
mov
add
sbb
adc
imul
(bad)
stos
push
xor
cli
or
xor
mov
sbb
mov
mov
jb
call
jge
cmp
pusha
push
or
xchg
mov
push
dec
in
mov
in
test
daa
xchg
or
mov
sti
cmp
jno
mov
mov
cli
int
in
ret
sub
repz
mov
xor
in
jecxz
push
cmp
jb
cli
cmp
test
je
cmp
sbb
fidivr
aaa
pusha
fnstenv
cdq
stos
push
fistp
rcl
mov
pop
dec
sub
or
jle
cmp
xchg
xchg
(bad)
cmp
add
pop
ficom
rol
in
jl
test
imul
paddd
rol
xchg
addr16
jge
xchg
mov
mov
jo
scas
sbb
movs
scas
inc
sbb
rcl
popa
shl
lds
int
imul
div
push
ja
in
push
rcl
sub
mov
xor
popa
mov
dec
push
in
jle
add
in
xchg
shl
push
div
mov
pusha
push
add
xor
je
nop
rcr
sub
sub
xchg
sub
jmp
xchg
shr
das
mov
jp
mov
push
stos
sti
add
fs
jno
pop
ins
in
popf
mov
std
es
shr
int3
sti
pushf
ret
add
icebp
mov
hlt
icebp
(bad)
int
xchg
pop
cmps
jge
adc
retf
adc
mov
sbb
and
fwait
cvtps2pd
loop
jmp
cwde
call
fnsave
cmp
sbb
dec
scas
test
cmp
cli
mov
adc
test
jnp
retf
in
or
cmp
sub
into
xor
in
jno
test
jmpw
adc
xchg
mul
aas
ss
cmp
stc
in
mov
xchg
retf
(bad)
fild
mov
push
stos
cmc
sahf
daa
sbb
pop
aad
call
ret
ret
sbb
xor
jge
inc
jno
pop
jp
sub
cmp
push
cmps
push
dec
int
jmp
jmp
cmp
ss
jmp
scas
jne
mov
outs
not
cwde
and
ds
dec
addr16
cmp
or
jb
pop
mov
or
shl
retf
pop
pop
add
cmp
mov
mov
cmc
mov
sub
mov
sub
ins
pusha
jno
dec
jge
push
sbb
xchg
aam
cmc
jl
or
inc
mov
dec
test
inc
dec
mov
sub
scas
sahf
loopne
and
mov
hlt
aam
std
fxtract
push
fimul
push
push
mov
jns
jmp
fistp
add
jp
or
popa
mov
hlt
fimul
rol
out
pop
outs
jge
and
retf
mov
movs
fisubr
sub
adc
retf
jle
mov
and
call
mov
das
jns
dec
data16
xchg
jmp
scas
shl
scas
cmp
out
push
cld
push
repnz
pop
mov
test
add
mov
mov
outs
push
and
mov
es
scas
dec
mov
sbb
scas
xor
outs
rcr
mov
xchg
movs
pop
shl
add
lds
mov
push
lods
mov
cld
std
push
test
jge
push
popf
mov
xchg
or
push
adc
cli
or
jle
int3
sar
cs
add
test
lock
sbb
mov
pop
xor
fiadd
adc
sub
mov
out
jmp
add
or
inc
pop
test
sub
cld
jb
inc
aad
sar
pop
pop
iret
fwait
aam
xor
and
lea
mov
xchg
and
(bad)
jle
xor
mov
sbb
stos
pusha
xor
scas
and
rol
sub
pop
dec
jmp
les
add
sbb
and
add
dec
jmp
test
or
sti
xchg
add
movs
rol
aad
adc
ja
inc
cmp
fwait
pop
dec
aaa
add
xchg
jle
stc
movs
sbb
out
loop
fistp
sub
add
push
push
pop
mov
sbb
inc
sbb
push
jb
cmp
ins
mov
inc
dec
sbb
inc
and
imul
es
mov
push
lods
out
jp
mov
pop
mov
inc
ficomp
cmps
dec
cmp
scas
in
sub
mov
pop
inc
lods
out
adc
idiv
cmp
test
outs
ins
mov
xchg
test
xchg
xchg
ret
mov
xchg
dec
sbb
outs
mov
sahf
dec
(bad)
dec
xchg
sub
mov
test
pop
push
dec
(bad)
xchg
jb
mov
xchg
push
jns
aad
ror
jmp
push
stos
cmps
add
enter
addr16
mov
pinsrw
loopne
dec
retf
xor
dec
adc
ret
es
fxch
mov
or
mov
add
loope
int
inc
inc
pop
iret
mov
(bad)
aas
add
jo
mov
test
dec
xor
sub
mov
out
or
push
mov
xchg
mov
sbb
cmp
mul
mov
jecxz
fisttp
or
xor
push
jl
cs
adc
or
std
leave
sbb
adc
mov
outs
inc
call
icebp
outs
and
cdq
xor
retf
and
out
xlat
mov
ja
movs
xlat
das
push
push
sub
jl
dec
and
xchg
fidiv
xchg
xchg
sbb
pushf
jb
jae
push
ins
mov
adc
push
out
fucomi
and
fisub
inc
adc
das
dec
dec
dec
cli
push
xor
jb
je
add
xor
icebp
cmp
cmp
dec
lahf
stc
xor
aad
imul
mov
push
fnsave
pop
in
pop
retf
xchg
pop
jg
xor
icebp
cmp
out
cmp
mov
loop
div
(bad)
inc
mov
dec
dec
sbb
les
inc
xor
sbb
xor
fisttp
(bad)
fld
mov
push
out
popf
xor
pop
pop
(bad)
imul
pop
call
sub
adc
out
(bad)
xor
stos
lea
mov
outs
add
fs
sbb
add
cli
scas
push
sub
imul
jno
aad
clc
xor
push
leave
sub
out
cmp
lods
mov
sub
repz
xchg
jl
frstor
jo
cmp
daa
jg
test
ja
cmp
fwait
daa
or
mov
lods
nop
mov
sbb
mov
push
mov
xlat
aas
test
xchg
push
dec
jno
jbe
xchg
mov
loopne
les
cmp
imul
push
push
dec
pop
leave
ret
push
int3
xchg
(bad)
mov
imul
rol
dec
mov
int
jmp
push
and
xor
daa
outs
mov
(bad)
sub
mov
or
dec
and
and
mul
loop
mov
mov
fst
out
fcomi
xor
js
andps
mov
adc
leave
or
fwait
fs
stos
mov
ror
not
popa
pop
rcl
cs
fisttp
bound
dec
sub
dec
enter
xor
ins
(bad)
cli
rol
lea
jns
push
adc
or
movq
adc
fadd
inc
or
stc
adc
inc
xchg
ins
mov
(bad)
cld
push
xor
dec
or
shl
pop
mov
xchg
inc
sbb
das
jl
into
mov
dec
jl
stos
dec
ds
mov
xchg
mov
and
cmp
sbb
and
sbb
add
(bad)
and
ins
repnz
jecxz
fstp
pushf
hlt
int3
enter
out
mov
dec
dec
into
add
and
(bad)
repz
mov
or
clc
shr
or
and
push
push
xchg
shr
int
sbb
jo
lock
int
jbe
xor
push
or
or
mov
hlt
test
jg
ret
jge
scas
mov
xchg
or
adc
inc
jbe
mov
xchg
test
(bad)
push
lock
cdq
std
sbb
push
push
shr
cmp
stos
(bad)
movs
xor
xchg
nop
int
pop
sbb
stos
inc
pop
jnp
xor
pushf
jle
dec
xor
retf
rcr
inc
cdq
lahf
leave
jge
fs
add
mov
data16
cmp
and
cmc
(bad)
leave
cmp
fild
mov
mov
cmpps
push
jo
jecxz
cmp
pop
pushf
cdq
and
xchg
aas
rcl
push
pop
mov
pop
shl
enter
sub
imul
inc
out
inc
inc
sbb
popf
cmp
push
cli
mov
jno
pop
neg
xor
inc
lock
and
out
movs
std
stos
loope
loopne
loope
mov
jae
ret
retf
and
out
or
adc
jp
xchg
jbe
jge
cmps
int3
ds
lgs
mov
sahf
sbb
repz
aam
iret
push
add
test
dec
bound
jle
loope
dec
(bad)
fisub
pop
pop
rcr
and
mov
pop
(bad)
fimul
mov
out
adc
jae
dec
stc
outs
retf
dec
mov
or
scas
dec
inc
hlt
inc
jne
(bad)
xor
ins
cmps
stos
cmps
aam
dec
adc
jmp
mov
mov
mov
loopne
ret
and
(bad)
jg
cmp
sub
sbb
mov
arpl
lea
jbe
clc
in
or
popa
test
inc
xor
xor
mov
jae
mov
mov
push
cwde
hlt
lahf
inc
es
ret
arpl
cmp
repz
sbb
xchg
sti
adc
and
mov
add
les
aas
mov
fcomp
(bad)
arpl
mov
inc
fs
mov
and
sbb
out
in
sbb
sub
jmp
test
mov
int3
inc
imul
call
xchg
mov
sti
es
jo
mov
mov
bound
inc
pop
mov
sbb
into
pop
mov
xchg
hlt
pop
add
adc
loope
std
jle
push
xchg
mov
rcr
push
and
(bad)
xchg
(bad)
lock
add
dec
sbb
xor
push
pop
or
xor
ret
add
cmp
inc
mov
xchg
fsub
fs
lods
ins
xlat
aas
jne
dec
lds
out
jnp
cmps
and
mov
dec
jns
in
cdq
dec
mov
dec
sub
mov
xchg
ficom
mov
jl
mov
lock
loop
sbb
mov
es
and
ins
add
jge
adc
clc
xor
loop
pop
jo
dec
data16
mov
and
popf
push
mov
sbb
sub
les
out
imul
pop
ret
test
in
mov
mov
dec
mov
jecxz
neg
xlat
xchg
mov
xchg
pop
adc
int3
pop
mov
sub
jo
leave
nop
(bad)
lods
or
in
in
mov
mov
xchg
pusha
mov
retf
and
test
xor
into
ss
or
xchg
js
in
ss
imul
lods
mov
fisubr
test
adc
shl
or
xchg
pusha
mov
dec
ss
pusha
cli
jmp
div
retf
scas
cmp
int
adc
cs
mov
jl
jo
int
mov
fisub
pushf
arpl
fdivrp
pop
mov
and
push
fdiv
adc
cmps
cmp
ss
pop
mov
fwait
add
(bad)
mov
int
call
call
popa
hlt
jle
test
fmul
xchg
cmp
cld
ror
jmp
mov
loop
dec
adc
push
lods
lea
cmp
jnp
sahf
or
mov
jle
xor
pop
mov
jmp
pop
dec
sbb
rcl
ror
xchg
call
ins
bound
pop
loope
push
fdivr
pusha
imul
(bad)
cmp
adc
or
adc
mov
retf
add
loop
or
or
xchg
test
(bad)
sub
repnz
push
nop
stos
push
rol
into
push
loop
push
adc
mov
gs
fisub
pop
pop
test
in
pop
cs
push
cmp
fld
lds
xchg
pushf
adc
popf
adc
in
xchg
fwait
loopne
mov
hlt
inc
loopne
lods
jne
cs
pop
push
jb
adc
jg
test
js
sbb
mov
lods
pushf
xchg
movs
fwait
lds
es
adc
mov
fs
push
add
push
in
jmp
jnp
(bad)
sti
add
cmp
stos
xlat
ret
call
sbb
fsub
not
dec
imul
out
xor
cmp
xchg
jnp
dec
fild
mov
xor
push
loopne
pop
cli
push
rcl
inc
push
jl
mov
rep
outs
mov
shr
add
sbb
inc
lods
ds
cmps
inc
loop
addr16
mov
fcomi
mov
out
push
xchg
xchg
jg
ds
sar
pop
cmps
pop
and
mov
jmp
aam
adc
mov
inc
adc
sub
(bad)
fadd
rcl
int3
js
push
pop
out
cmp
sub
pop
stos
pop
fs
push
sbb
cdq
popf
test
fwait
sbb
cmc
aaa
call
(bad)
retf
xor
mov
jbe
jbe
xchg
mov
mul
xchg
ja
and
fs
std
test
pop
sahf
pop
in
(bad)
mov
in
seta
out
pop
adc
inc
mov
push
inc
xor
je
mov
mov
ret
ret
pop
pop
lea
dec
pop
mov
dec
stos
pop
fadd
xchg
sahf
cs
int3
or
data16
xchg
mov
jp
(bad)
jp
enter
xor
push
jne
mov
add
loop
cmp
jle
(bad)
std
test
repz
scas
xchg
fnop
shr
xchg
mov
sub
xchg
xor
lds
pop
dec
in
mov
fiadd
push
pushf
jmp
lea
cmp
mov
push
xchg
loopne
movs
cmp
jle
movs
popa
mov
add
add
push
xchg
sub
xchg
sar
sub
adc
dec
pop
outs
aas
ficomp
mov
imul
mov
je
and
in
mov
lea
rol
pusha
sbb
aaa
out
movs
mov
dec
sub
movs
dec
fidivr
mov
mov
std
and
loop
mov
mov
xor
push
pop
dec
pop
mov
ret
pop
inc
cmp
inc
fdiv
shl
dec
data16
loope
jmp
inc
inc
in
inc
add
dec
fcmovne
ret
popw
mul
dec
xchg
adc
jmp
sbb
loopne
loopne
mov
sub
out
nop
cli
push
inc
and
ss
pop
(bad)
iret
cmc
pushf
jmp
rcl
push
sbb
cmp
adc
das
adc
mov
iret
push
test
mov
xchg
ss
rol
mov
push
sub
cli
idiv
lahf
xchg
push
jmp
out
jno
xor
mov
or
(bad)
call
mov
mov
and
pop
push
jle
mov
jbe
ins
mov
cdq
mov
adc
mov
xchg
dec
mov
cmp
fcom
pushf
js
int
sbb
inc
xchg
pusha
sbb
and
dec
and
aad
xchg
mov
lods
shl
sub
test
sar
mov
xchg
sahf
inc
adc
cs
cmps
and
js
aam
aas
or
push
outs
push
aad
mov
mov
push
popa
and
nop
test
retf
xor
adc
cmps
rcl
adc
sahf
(bad)
mov
test
push
hlt
fwait
mov
push
sub
rcl
push
shl
xchg
(bad)
lods
ja
push
stos
cld
push
fwait
cmc
pop
into
dec
cmp
and
cmp
push
mov
mov
pop
xchg
cld
xchg
and
arpl
neg
mov
sbb
dec
cmps
loopne
jge
sahf
mov
mov
popf
aam
es
mov
mov
out
xor
sbb
xchg
pop
sub
mov
clc
jb
cmp
cs
inc
rcr
fwait
inc
jno
pusha
sbb
fcmovb
repnz
and
push
ja
inc
shr
dec
outs
(bad)
std
scas
pop
xchg
inc
jle
ja
aas
pop
mul
iret
ins
mov
fcom
fbld
je
inc
jns
dec
arpl
sahf
xchg
ret
imul
clc
or
adc
cmp
inc
scas
jmp
fcomp
inc
lea
or
ja
adc
int3
cmp
call
sar
jmp
icebp
loop
aad
xor
cwde
add
push
test
ins
dec
out
fdiv
cmp
cmp
sub
cmc
mov
(bad)
je
pop
sbb
iret
pop
xor
sub
stos
je
or
mov
pop
pop
cmp
cmp
and
or
jge
popf
retf
xor
icebp
push
mov
and
push
sub
xor
xchg
shr
(bad)
cwde
mov
es
mov
pusha
pop
mov
push
jb
ds
repnz
jle
outs
scas
sbb
ins
cmp
test
stos
call
adc
dec
xchg
cld
(bad)
loope
enter
inc
lods
push
mov
js
or
sbb
popa
into
xchg
dec
(bad)
mov
repnz
sbb
or
mov
adc
push
in
les
cmps
retf
adc
adc
add
test
push
cmp
cmp
retf
jne
mov
lds
push
call
mov
sbb
inc
lods
dec
mov
jne
fxch
cmp
aaa
adc
add
retf
jae
pop
inc
cmps
sub
arpl
inc
push
cmp
or
repz
jmp
xchg
push
mov
pushf
push
pop
loope
fwait
in
and
nop
push
push
std
lock
js
lea
neg
das
das
jo
mov
mov
mov
and
jno
test
pop
push
mov
push
xchg
(bad)
call
mov
adc
adc
inc
sub
xchg
cwde
popa
cmp
mov
scas
adc
jb
sbb
cdq
add
cld
rcr
jns
(bad)
jg
add
stos
shl
in
mov
or
pop
shl
sbb
int
test
adc
mov
inc
into
je
or
test
push
mov
shl
cld
fwait
mov
mov
xchg
and
xor
xor
repz
cmp
adc
adc
mov
push
pop
xchg
in
pop
mov
or
(bad)
and
in
sahf
inc
adc
push
int
and
xor
sbb
jg
(bad)
mov
dec
sbb
ret
and
inc
add
dec
(bad)
imul
mov
sub
fmulp
pop
into
pop
push
stos
jae
ret
outs
add
je
xchg
mov
adc
dec
ss
lea
push
gs
loope
pusha
lea
cmp
scas
(bad)
(bad)
push
pusha
aam
lods
sbb
call
push
dec
ret
jl
arpl
sbb
mov
cmp
ret
add
push
mov
adc
inc
cli
add
and
test
hlt
sbb
push
test
mov
push
inc
dec
in
mov
std
xchg
adc
or
pop
push
add
mov
push
div
mov
push
sub
fidiv
mov
enter
push
mov
jmp
into
(bad)
fidiv
adc
icebp
adc
adc
cmc
icebp
add
lock
icebp
xor
and
nop
push
xchg
cs
xor
push
sub
test
sahf
xor
jmp
dec
or
int
call
pop
fcomi
neg
xchg
lock
in
jg
stos
arpl
dec
mov
xchg
cmp
adc
mov
cmp
(bad)
out
in
frstpm(287
hlt
out
mov
add
es
out
mov
dec
mov
mov
inc
popf
fidivr
jecxz
test
scas
dec
cmp
leave
jb
in
jecxz
lods
or
mov
or
test
mov
adc
mov
in
mov
ins
xlat
add
aas
xor
add
dec
sbb
sub
jecxz
rol
xchg
inc
jne
enter
jecxz
fstp
cmp
cwde
jb
dec
aad
imul
ror
xchg
cld
or
adc
add
fld
xchg
xchg
imul
push
and
test
adc
hlt
test
aam
fwait
stos
and
ins
adc
mov
imul
mov
pop
push
ror
fucomip
dec
in
push
inc
adc
add
lods
loopne
test
(bad)
aaa
stc
sbb
adc
cwde
rcr
mov
cdq
cmp
out
outs
and
data16
sbb
mov
jns
fadd
jg
enter
pop
sbb
jb
stc
push
pop
(bad)
push
push
adc
js
in
add
inc
xlat
mov
adc
in
push
sti
mov
mov
mov
fucomip
ja
aas
cmc
jo
ret
ins
stos
add
lahf
xlat
lods
loopne
adc
lock
xchg
outs
pop
out
push
retf
xor
test
rcl
loop
iret
push
popf
adc
psubsb
and
push
je
dec
int3
push
popa
aaa
clc
inc
xor
xchg
mov
movs
out
xor
mov
inc
sbb
sub
sub
scas
push
cmc
add
imul
aas
xchg
imul
hlt
out
add
push
cwde
push
sbb
loope
cmc
outs
push
bound
dec
imul
push
inc
sbb
ficomp
rol
mov
sbb
pop
imul
jp
cmp
bound
imul
cs
icebp
push
xor
mov
inc
cmp
int
mov
std
test
jnp
(bad)
lods
(bad)
ja
xchg
xor
fs
sub
add
test
xor
pop
(bad)
pop
cmp
mov
mov
sar
sbb
mov
mov
lods
jno
pop
je
push
cdq
sub
fdivr
jno
inc
hlt
cmp
inc
inc
cs
mov
jmp
inc
mov
popf
mov
cmp
cs
test
and
cmps
(bad)
adc
out
adc
aaa
and
push
je
pop
fisttp
cmp
xor
mov
repz
and
icebp
daa
mov
out
(bad)
mov
mov
fbstp
cdq
cld
std
and
sbb
popa
sub
push
or
push
sub
imul
fld
mov
(bad)
test
lock
or
sbb
stos
out
sub
pop
sub
dec
jle
dec
arpl
out
cli
jge
jg
lahf
dec
jp
mov
fmul
ins
xchg
je
stos
(bad)
pop
ins
jmp
sbb
mov
push
movs
out
sub
mov
add
and
or
mov
call
mov
or
xchg
push
add
xchg
pop
jbe
xor
ja
or
jp
push
fld
test
jmp
scas
xchg
lds
inc
jnp
(bad)
in
push
mov
cs
in
mov
int3
inc
frstor
jne
pop
ins
imul
add
ret
in
cmps
enter
mov
add
jo
jecxz
ss
sbb
imul
adc
mov
dec
mov
test
add
sbb
inc
mov
ret
sbb
pop
repz
add
lods
jmp
adc
mov
(bad)
jp
jmp
or
xchg
xchg
inc
dec
fisttp
cwde
pop
jb
in
sub
cmp
jg
jne
bnd
sbb
hlt
shl
jne
stc
xor
fldenv
sbb
sti
sahf
mov
daa
pop
mov
adc
add
imul
dec
dec
dec
imul
add
xchg
mov
mov
sbb
dec
pop
pop
nop
adc
inc
imul
mov
inc
je
popa
(bad)
dec
stos
pop
xor
cli
popf
dec
rol
pop
stc
pop
mov
ror
outs
fwait
or
inc
in
das
int3
fiadd
xor
inc
xchg
repz
inc
inc
mov
sub
shr
jne
xor
popa
mov
arpl
cmp
mov
push
inc
push
sbb
mov
mov
je
cmc
outs
loopne
inc
pop
out
lock
cmp
dec
retf
or
call
or
addr16
cld
cmp
xchg
mov
sbb
mov
pusha
or
ret
add
scas
cmp
inc
xchg
mov
retf
icebp
sbb
push
push
push
and
pop
(bad)
sti
cmp
fwait
mov
mov
mov
enter
pop
dec
inc
mov
xchg
mov
fsub
cmp
or
mov
repz
mov
adc
and
cmp
mov
xchg
pop
lea
mov
and
pop
fcom
sti
ret
sbb
xchg
shl
dec
jo
push
aam
xor
test
xchg
popf
push
in
scas
sbb
mov
sub
cmpxchg
stc
shr
lods
sahf
xchg
ss
arpl
(bad)
mov
adc
ds
mov
loop
xchg
push
lods
sbb
or
or
mov
push
int3
movs
xchg
jno
das
jle
movs
cmp
imul
pusha
int
gs
or
in
jns
push
pop
xchg
div
sub
sti
or
mov
jmp
inc
mov
dec
retf
mov
push
sahf
and
rcl
loop
out
cdq
pop
cmps
push
imul
dec
loop
push
cmps
fild
shr
clc
iret
movs
div
push
cmp
fmul
retf
daa
out
call
pop
(bad)
mov
push
pop
cmp
push
pushf
(bad)
arpl
gs
sub
xchg
je
adc
fwait
jbe
push
cmp
fimul
aas
stos
dec
cmp
fstp
add
adc
iret
mov
out
aam
(bad)
and
or
cmp
mov
adc
jbe
mov
clc
test
xor
loopne
push
xchg
addr16
dec
aad
inc
mul
stos
movs
and
dec
loopne
stos
ja
sahf
cmp
in
movs
inc
(bad)
or
out
cmps
sub
(bad)
les
sti
aad
mov
xchg
mov
inc
sahf
cs
mov
adc
cmp
sahf
outs
clc
jmp
ins
outs
cld
fwait
push
pop
call
cli
arpl
aaa
adc
test
shl
(bad)
mov
and
xor
push
repz
loop
sub
shl
inc
xlat
push
imul
pop
jb
xor
repnz
sbb
js
cmp
inc
sbb
xor
mov
mov
sti
and
and
jno
pmullw
add
cmp
fisubr
sbb
(bad)
push
push
stos
mov
push
dec
movs
sbb
sub
add
inc
popa
or
or
(bad)
popa
mov
mov
xor
data16
fadd
cmp
mov
mov
nop
cmp
repnz
cs
xor
mov
inc
ret
push
test
xor
shl
(bad)
xor
cdq
shl
mov
test
cmp
mov
push
mov
dec
ror
sti
or
repnz
mov
fcomi
jns
pop
aas
push
xchg
mov
shl
mov
jecxz
jbe
sar
push
aas
xor
jb
imul
dec
fs
jbe
nop
dec
sti
cwde
addr16
mov
inc
mov
push
sbb
and
shl
out
add
jg
fdivrp
clc
add
and
jp
mov
mov
jg
in
jnp
nop
or
fldenv
enter
push
cli
fst
test
mov
add
sar
xor
hlt
data16
scas
call
push
sbb
loop
call
leave
xchg
jl
sti
adc
lods
xchg
pop
pushf
fld
mov
mov
mov
jmp
(bad)
dec
dec
or
mov
adc
sbb
rcr
sbb
das
jl
xchg
rcl
and
out
lock
sti
jne
push
pop
pop
push
mov
mov
jmp
mov
jbe
cwde
iret
sti
xchg
push
fwait
push
xor
mov
cmp
fs
xor
xor
in
sbb
outs
(bad)
stc
mov
(bad)
daa
into
inc
fisttp
mov
sbb
jmp
pop
test
cs
cmp
not
add
or
out
les
out
jmp
inc
in
out
iret
push
icebp
imul
fbld
inc
pushf
outs
adc
xchg
std
sahf
mov
test
std
std
and
into
or
ret
je
push
or
jb
and
jle
sub
in
push
bound
sbb
pop
mov
rcr
and
xchg
(bad)
js
scas
mov
jp
and
fsubr
outs
aad
movs
loopne
movs
push
pop
daa
loope
int
inc
pusha
std
arpl
fistp
cmp
cmp
push
jl
xchg
and
scas
sub
test
shr
xchg
and
mov
icebp
sbb
pop
loopne
loope
jmp
mov
mov
and
xchg
cmps
jb
leave
dec
fisub
sbb
or
test
stos
sbb
std
lahf
ret
idiv
rcr
addr16
cmp
test
sub
cld
aaa
mov
xor
out
and
mov
ds
cmp
xchg
add
aas
mov
(bad)
cmps
sbb
cwde
test
cmp
push
mov
mov
pusha
add
and
cs
enter
ins
js
jbe
popf
pop
mov
arpl
sub
lahf
out
mov
inc
inc
pop
shr
lods
push
repnz
mov
cwde
cmp
xor
push
and
push
cdq
mov
jecxz
daa
jp
aad
sbb
xchg
xchg
push
push
(bad)
or
and
fcmovnb
test
mov
cmp
push
sub
push
cmp
shr
mov
test
rcl
stos
sahf
in
or
nop
idiv
ins
dec
push
inc
jnp
outs
dec
cmp
fdivr
mov
fs
xchg
push
data16
inc
and
movs
jo
test
ror
or
or
cmc
jmp
xlat
pop
inc
jg
xchg
(bad)
js
dec
test
and
push
inc
test
pop
pop
ret
mov
std
repz
popf
and
jg
in
hlt
pop
push
mov
xor
pop
pop
pop
jmp
mov
ret
mov
int
test
aas
outs
push
mov
mov
inc
add
lea
mov
ja
inc
addr16
mov
jno
shl
inc
xor
into
jnp
xchg
imul
sbb
fdivr
adc
mov
sti
sub
loope
std
inc
sub
dec
add
dec
dec
movs
cdq
jno
in
scas
xchg
xchg
xchg
sub
cdq
dec
gs
dec
and
mov
or
xchg
sbb
std
jmp
daa
leave
dec
lods
retf
lods
push
test
icebp
int
inc
mov
movs
and
cmps
out
add
ret
mov
adc
inc
cmp
scas
mov
adc
bound
outs
jns
mov
das
mov
add
jae
std
test
ficomp
push
imul
jae
push
xchg
stos
jnp
cwde
(bad)
inc
inc
inc
out
js
in
xchg
pop
lods
das
dec
add
xchg
jo
mov
fisttp
fisubr
jmp
rcl
lds
cs
push
cld
(bad)
xor
in
mov
pop
mov
xchg
retf
retf
lods
sub
sub
push
mov
ins
jae
push
push
ret
lahf
in
lahf
(bad)
jnp
retf
or
sbb
push
sbb
xor
int3
and
jmp
clc
jns
fcomp
pop
aam
push
pop
xor
(bad)
ror
test
fwait
sbb
cmp
rcl
mov
mov
pop
jmp
mov
inc
movs
sub
mov
cmp
retf
xchg
outs
enter
arpl
ret
jnp
nop
cmp
mov
and
xlat
jmp
inc
or
xchg
test
pop
mov
int3
cs
cmps
out
add
add
cmp
or
push
xor
pop
mov
into
mov
rol
hlt
imul
push
loope
mul
pop
xchg
jo
push
in
xlat
test
and
mov
aaa
push
ror
mov
add
push
mov
mov
jne
in
pop
xchg
and
mov
or
retf
(bad)
or
dec
xor
inc
mov
(bad)
stos
stc
jae
ja
cmc
push
jecxz
stc
dec
into
push
pop
clc
es
lea
mov
push
push
or
lods
repz
scas
shr
psubsw
pop
pop
ja
imul
mov
fadd
bound
(bad)
or
mov
outs
sti
or
mov
das
cmps
push
inc
arpl
xchg
and
test
mov
loopne
shl
inc
rcl
fwait
and
mov
mov
mov
jecxz
jbe
jmp
push
dec
lock
mov
rol
sbb
jle
adc
leave
sub
jbe
enter
cmp
hlt
lods
in
ret
sub
aam
xchg
push
and
pop
and
mov
mov
bound
jns
sub
sar
or
inc
mov
ss
inc
mov
and
call
rol
(bad)
ficomp
into
push
mov
das
or
pop
cwde
push
or
into
add
jmp
fbstp
repnz
js
dec
out
es
int
cmp
ret
stos
pop
movs
add
and
cmps
(bad)
les
pop
mov
arpl
out
mov
jnp
movs
and
ins
scas
push
and
bound
jb
jo
cmp
out
ins
mov
cmp
cmp
loopne
int3
fld
outs
rep
or
out
dec
cmp
sub
dec
mov
mov
mov
jle
test
aam
mov
fst
jmp
nop
pop
loop
popa
jmp
test
add
cmp
je
mov
mov
adc
jmp
aam
cli
sub
jb
shr
jb
adc
(bad)
cmc
ret
xchg
sbb
and
cdq
out
jl
(bad)
aad
cmps
and
clc
xor
in
stc
ja
retf
mov
(bad)
aad
or
or
or
mov
mov
addr16
mov
mov
push
daa
cli
stos
jmp
jae
inc
mov
adc
mov
mov
enter
inc
sti
or
out
dec
jae
pop
fdiv
(bad)
or
push
add
inc
mov
and
nop
mov
mov
fcomp
jb
into
mov
mov
std
dec
(bad)
ret
jge
xor
loop
call
mov
mov
or
xchg
dec
sub
es
(bad)
data16
mov
adc
xor
ds
outs
cmp
sub
in
jne
je
ficom
pop
push
shr
out
sub
arpl
push
sub
cmp
mov
xor
nop
retf
xchg
xlat
adc
and
jbe
inc
jno
iret
push
jmp
pop
retf
sbb
mov
push
pop
push
sbb
outs
fnstcw
mov
sub
in
loop
mov
mov
jmp
cwde
mov
mov
cmps
mov
push
mov
lock
ss
es
push
dec
push
cmp
adc
lds
nop
stc
pop
adc
int
mov
ficom
inc
or
into
aam
imul
test
(bad)
fldcw
test
xchg
in
push
add
xchg
pop
cli
push
icebp
(bad)
push
xor
aaa
shr
pushf
and
ror
hlt
adc
les
enter
cmp
add
xchg
and
mov
test
mov
pop
out
jg
push
cmc
bound
xor
sbb
pop
pop
jge
jmp
or
inc
sti
add
das
xlat
pop
in
fwait
stos
inc
inc
sti
fbstp
loope
add
push
es
test
jnp
push
cmps
icebp
sar
cs
sahf
retf
mov
fisttp
ret
push
mov
push
(bad)
jmp
sbb
aas
cmp
sub
mov
pushf
push
scas
in
repz
dec
out
adc
jmp
adc
and
(bad)
sbb
jae
jge
cmp
mov
int3
scas
retf
mov
fwait
clc
(bad)
pusha
mov
and
ins
ins
das
fwait
inc
fs
inc
popf
inc
std
push
sub
in
adc
es
mov
fld
mov
mov
adc
ds
push
(bad)
pushf
das
mov
push
mov
loop
xchg
aam
pusha
ror
sub
mov
imul
imul
ds
pop
or
push
xchg
mov
lahf
punpckhbw
pop
setnp
mov
adc
(bad)
adc
add
mov
xchg
sub
jns
push
sbb
fcmovb
scas
mov
mov
inc
add
dec
jge
pop
stos
lahf
mov
jl
sub
xchg
add
pop
or
in
ror
ins
lods
add
out
and
in
cwde
(bad)
cmps
xchg
dec
in
fsub
or
(bad)
leave
add
mov
repnz
jle
jg
jmp
jp
repz
out
pop
xchg
das
push
jns
jle
cli
cmps
int3
adc
inc
cdq
inc
test
cld
inc
sub
xchg
loope
js
sar
movs
xlat
push
xchg
in
inc
push
adc
retf
ja
dec
into
lahf
xor
setns
inc
cmp
sbb
aas
call
jmp
xor
jp
mov
mov
iret
mov
out
popa
outs
add
adc
sub
mov
push
dec
mov
enter
pop
jno
loop
push
or
cmp
dec
ret
ja
pop
cmp
push
dec
mov
mov
hlt
mov
call
or
lock
xchg
int3
ret
dec
xor
xchg
(bad)
cmp
and
add
or
add
jp
mov
ret
(bad)
sbb
das
push
xor
out
pop
inc
out
push
jmp
arpl
loope
ins
aaa
lds
xor
mov
aas
enter
cmp
or
(bad)
data16
movs
sub
loope
loope
pushf
movs
into
mov
loope
lods
jmp
fdivrp
rcr
mov
out
mov
and
ds
xor
sti
movs
inc
mov
pop
mov
inc
paddd
xchg
xor
mov
cli
test
and
aam
push
outs
adc
sub
xchg
inc
cmp
add
mov
mov
inc
lahf
push
scas
into
push
fcomp
jns
test
jns
adc
mov
fdiv
(bad)
and
inc
cli
ficomp
imul
xchg
dec
jge
mov
pushf
mov
push
in
ret
pop
dec
push
sub
mov
movs
adc
mov
(bad)
popf
adc
push
xchg
jno
pop
fsubr
push
jo
inc
and
fmul
aad
mov
sbb
mov
inc
mov
xchg
mov
lods
or
std
sahf
out
sbb
sbb
cmps
ret
mov
and
lods
inc
sbb
lods
mov
push
pop
retf
xor
stc
xchg
(bad)
sub
cmp
in
in
js
inc
nop
movs
xor
pop
xchg
and
lods
ds
es
xchg
int
pop
stc
imul
sub
xchg
or
outs
ret
sub
lods
mov
fidiv
or
out
data16
bound
cmp
dec
scas
loopne
xchg
dec
movs
pop
dec
and
call
leave
scas
and
jp
cmps
rol
test
jp
dec
mov
mov
cs
push
pop
pop
int
adc
psubsw
inc
idiv
cmp
cmp
nop
mov
cdq
imul
mov
mov
mov
pop
push
test
xor
and
pop
das
or
add
fldcw
xchg
push
adc
shl
pop
push
mov
dec
jne
pop
xchg
loope
sbb
sub
(bad)
sbb
xchg
inc
jl
cmp
jle
push
mov
cmp
push
fwait
jmp
xchg
movs
jo
ss
ds
mov
hlt
cmp
push
addr16
icebp
xchg
jge
or
xor
js
push
dec
enter
or
xchg
mov
jl
sahf
mov
mov
or
loop
pop
out
adc
and
popf
aas
mov
stos
imul
ja
leave
fsub
call
nop
cmp
sub
or
ret
push
in
out
stos
mov
cmp
add
mov
adc
in
sbb
or
mov
cdq
or
xchg
enter
int
ret
pusha
int
adc
clc
je
sub
dec
mov
pushf
fwait
lock
ins
fsub
outs
nop
mov
xchg
addr16
adc
cmps
clc
or
dec
xor
jne
gs
movs
cli
cmps
das
bound
popf
or
xor
push
or
pop
sti
sti
xchg
stc
xor
cmp
pop
(bad)
mov
div
mov
or
sbb
daa
test
dec
les
or
xchg
mov
aad
clc
pusha
sub
mov
in
(bad)
iret
or
mov
stos
jg
shl
test
scas
leave
add
stos
repz
ss
outs
cwde
cmp
xlat
popf
dec
pushf
jmp
(bad)
push
inc
dec
shl
lds
loopne
shl
int3
adc
rol
pop
mov
test
repz
retf
dec
xchg
xchg
imul
jg
data16
jns
sar
mov
ret
mov
jle
cmp
leave
movs
adc
sbb
push
xabort
call
les
fldenv
aaa
cwde
test
mov
pop
loopne
push
xor
cmps
push
xchg
mov
pop
daa
cdq
ror
rcr
lds
jmp
mov
jmp
aad
cdq
(bad)
jnp
xchg
adc
aam
inc
(bad)
push
jecxz
adc
retf
fadd
mov
cmc
(bad)
call
sub
mov
pusha
or
iret
mov
cmp
jmp
cmp
sbb
lahf
xchg
out
fstp
or
cmc
je
cmc
fnstcw
or
lahf
lods
arpl
jnp
scas
and
fidiv
pop
xchg
sub
into
or
mov
adc
mov
call
das
jo
push
std
inc
imul
out
retf
(bad)
loop
pop
push
enter
in
xchg
cmps
rol
adc
xor
cmp
mov
push
movs
scas
push
iret
addr16
enter
movs
(bad)
jge
mov
ja
shufps
push
cmp
clc
and
imul
cmc
shr
push
pop
(bad)
cdq
and
and
add
loop
sti
dec
lea
ds
lea
jmp
sub
cmp
xor
pop
dec
cmp
ss
adc
push
xchg
pop
push
push
push
xchg
jb
sub
push
sbb
test
cmp
test
test
dec
jl
jae
mov
mov
fimul
xor
xor
jle
push
or
aam
in
pop
xor
lods
push
das
into
mov
xor
jmp
xchg
jp
rcr
mov
data16
cmp
inc
movs
cli
pop
push
inc
inc
pop
dec
and
mov
cmp
sbb
xor
test
jnp
call
ins
and
pop
inc
jp
lods
xor
ret
and
pop
sub
movs
adc
add
popf
scas
pop
mov
cmc
inc
add
push
dec
sti
push
(bad)
ja
movs
(bad)
stc
push
push
nop
inc
mov
sub
jle
movs
scas
fwait
cdq
add
mov
lds
or
pop
and
ret
xchg
sbb
jnp
push
and
gs
repnz
add
fadd
test
cld
lods
retf
js
or
push
fsub
je
jle
push
push
inc
cmp
bound
pop
sbb
sub
cmp
adc
push
cmps
iret
or
nop
and
rcl
xchg
xor
jmp
outs
mov
pop
cmp
push
loope
xor
jp
pop
jns
adc
scas
xchg
(bad)
cli
mov
movs
sbb
out
pop
pop
add
fadd
push
lock
cmp
inc
add
in
lods
outs
mov
push
std
shl
jnp
inc
sub
and
js
lods
jbe
mov
add
bound
inc
dec
mov
push
and
mov
mulps
dec
jmp
sahf
sub
pop
lahf
pop
xor
push
xor
(bad)
loopne
dec
pop
fs
ja
dec
xor
imul
mov
ret
jl
or
scas
shr
add
shl
repz
push
or
mov
inc
sub
sbb
dec
push
jle
sahf
loope
xchg
inc
and
push
mov
mov
out
and
xor
mov
sub
sbb
cli
pop
adc
mov
stos
ss
push
push
fcomi
imul
sbb
sti
mov
into
pop
add
lods
cmp
push
and
jae
and
jb
inc
add
loopne
rcl
push
out
xchg
mov
cmp
push
push
int3
call
scas
push
pop
and
cmp
rol
(bad)
fidiv
push
hlt
pop
or
adc
aam
movs
push
pop
or
xor
inc
mov
push
mov
mov
and
or
in
jecxz
outs
sahf
xor
stc
mov
and
jecxz
inc
xlat
xchg
add
xchg
push
and
imul
jge
push
bound
nop
push
mov
fsub
aas
(bad)
mov
mov
adc
and
repnz
sub
push
or
fs
shr
bound
mov
mov
je
sub
fld
xor
jo
xor
push
fwait
nop
mov
cld
and
adc
xlat
call
das
repz
sub
test
xchg
es
mov
fbld
and
jnp
xor
mov
or
xor
mov
jp
push
hlt
add
xchg
int3
mov
jecxz
sahf
nop
cmove
dec
stos
iret
lock
icebp
xor
and
mov
mov
sar
shl
lfs
and
ret
fldcw
jbe
cld
pcmpeqw
(bad)
outs
(bad)
outs
pop
jns
shl
and
rol
movs
sub
xor
push
pop
push
int3
adc
ret
push
hlt
stos
je
fs
clc
cs
cmps
and
loope
sbb
ret
imul
bound
mov
ret
sub
cmps
sar
cmps
lock
arpl
mov
sub
pop
stc
jns
inc
and
ror
stc
inc
adc
test
mov
xchg
test
push
cmps
xchg
jg
sub
hlt
icebp
mov
call
shr
cmps
mov
cmp
mov
xchg
inc
cdq
adc
push
jnp
sti
mov
mov
cmc
mov
les
push
or
lods
mov
je
ins
scas
pop
leave
lods
mov
repnz
push
sti
mov
retf
loopne
jg
stos
je
aam
jae
aaa
loop
unpcklps
xchg
add
imul
out
xor
imul
sar
cmp
aam
enter
pop
sub
xchg
xor
or
push
outs
mov
push
ror
call
popf
adc
cs
mov
lods
xor
sbb
cmp
sbb
dec
or
pop
mov
jmp
test
or
cmc
inc
ja
setle
rcl
pusha
test
clc
adc
cmp
scas
adc
daa
test
adc
movs
push
scas
dec
das
adc
jl
stos
adc
add
aas
pop
sub
imul
jnp
aam
add
pop
loop
mov
daa
pop
icebp
pop
and
mov
mov
cld
movs
mov
ja
mov
xchg
imul
enter
add
or
dec
mov
sub
mov
pusha
ins
adc
data16
inc
rcl
gs
jnp
(bad)
rcr
pop
test
inc
test
adc
cmp
sbb
test
fiadd
push
adc
outs
and
inc
push
jp
retf
jbe
push
mov
cmc
and
imul
sub
(bad)
imul
gs
mov
jmp
(bad)
in
aam
stc
jne
inc
dec
(bad)
movs
push
out
pop
push
imul
cmps
lds
pusha
jp
loop
imul
mov
or
jmp
xchg
cmps
and
nop
push
mov
not
push
lock
push
into
and
int3
pop
push
clc
and
lock
fld
sbb
cmps
in
cmp
stc
push
test
cmp
ds
sbb
dec
dec
dec
in
or
mov
addr16
mov
and
jg
inc
ins
xchg
in
mov
fisttp
and
jg
gs
icebp
jmp
push
fisub
mov
jecxz
outs
test
rcr
mov
push
sti
mov
mov
icebp
jg
jbe
xor
xor
push
lea
jmp
pop
dec
and
xor
mov
call
xchg
js
jns
into
push
addr16
aas
aam
inc
jle
mov
(bad)
(bad)
adc
adc
jle
test
sub
mov
push
test
push
xchg
xchg
xor
and
rol
arpl
int3
sar
cmp
in
sub
mov
lds
jge
mov
stc
mov
mov
jns
fisubr
jne
div
inc
cli
add
fistp
pop
xor
dec
fild
pop
ja
mov
pop
and
fwait
mov
push
push
xchg
jno
das
pop
push
out
fidivr
fsubr
lods
stos
mov
pop
jne
jmp
call
adc
retf
jmp
jle
aam
cdq
fcom
mov
js
inc
jne
add
(bad)
jno
sbb
cmp
in
mov
jo
aas
pop
fiadd
cmp
cmp
jl
lahf
imul
push
shl
jns
dec
mov
sub
mov
or
loop
mov
dec
add
inc
ret
push
mov
pusha
xchg
jmp
pop
scas
(bad)
pop
daa
add
int3
lahf
jge
cmps
test
mov
push
cmc
(bad)
or
les
inc
xchg
pop
mov
xchg
popf
gs
jnp
adc
add
cmp
dec
sub
mov
mov
inc
lahf
xor
(bad)
aas
daa
mov
mov
loope
cmp
gs
sbb
mov
mov
mov
cmps
test
fstp
add
sahf
mov
div
movs
js
sbb
les
or
imul
test
pop
xchg
fcmovnbe
scas
(bad)
fnstsw
fbstp
int3
fistp
push
pop
out
cmp
xchg
jg
(bad)
sbb
and
xor
xchg
add
jle
pop
pusha
(bad)
add
mov
mov
xor
push
and
push
in
dec
inc
jns
nop
adc
sbb
mov
cmp
jns
mov
mov
imul
aad
je
xchg
jo
xor
dec
div
sbb
loop
mov
jge
dec
push
cwde
rcl
fisub
pop
mov
ins
dec
add
jns
sahf
xchg
and
pop
mov
fdiv
jp
add
inc
rcl
or
movs
cmp
push
mov
jae
cmp
sbb
popa
ficomp
dec
mov
les
pop
xor
into
out
stos
xor
pop
adc
ss
pushf
sub
pop
dec
adc
jns
jnp
cmp
xchg
adc
in
retf
arpl
sub
pop
xchg
div
iret
(bad)
cwde
mov
(bad)
icebp
sub
lods
(bad)
mov
test
sbb
js
(bad)
pop
or
xor
cmc
je
push
push
and
dec
push
and
or
adc
dec
mov
adc
(bad)
arpl
arpl
adc
jp
and
inc
icebp
test
pop
add
cli
push
sub
mov
clc
mov
mov
lds
imul
iret
mov
daa
jecxz
fcom
shl
sbb
scas
xchg
cmps
sbb
mov
xlat
push
mov
lods
mov
out
jecxz
push
adc
or
loop
scas
movs
pop
push
and
fwait
adc
cmp
adc
jle
fld
outs
(bad)
in
push
fcmove
jge
add
adc
adc
push
adc
inc
outs
xchg
in
outs
int
cmps
test
mov
ss
push
dec
mov
jne
stc
sub
mov
sti
sub
sahf
inc
and
lods
cld
fistp
mov
and
push
xchg
mov
fistp
call
mov
mov
and
rcl
xlat
push
fsub
and
pop
ret
call
push
push
js
out
jbe
xchg
cmp
bound
adc
mov
pop
shl
and
xor
xor
inc
(bad)
pop
lds
in
fimul
xor
ins
push
or
fwait
gs
mov
sar
xchg
jmp
std
icebp
mov
fidivr
ins
mov
pop
xlat
fcomp
mov
push
pop
fwait
xor
mov
mov
cmps
and
sti
(bad)
xchg
out
pand
in
cmp
je
jecxz
scas
dec
ja
lea
(bad)
pushf
imul
jbe
into
push
ret
lods
gs
lahf
call
push
pusha
mov
xor
jmp
cmp
imul
jmp
mov
add
sub
mov
lahf
add
mov
cdq
out
xchg
cmp
mov
dec
inc
xor
mov
jbe
and
pusha
out
xchg
out
rcl
and
popa
cdq
jmp
fs
or
clc
pop
js
mov
(bad)
int3
aam
imul
add
rol
mov
into
neg
xchg
fcmovb
adc
mov
adc
mov
mov
shr
hlt
std
shr
je
daa
push
xor
fdiv
nop
xor
sahf
push
mov
retf
mov
pop
arpl
jmp
mov
jle
retf
or
loop
or
sub
ror
cmp
daa
lock
adc
mov
imul
retf
sub
cmp
int3
retf
jne
cs
pop
add
lock
call
sbb
ss
jge
jmp
add
pusha
adc
loop
push
jmp
clc
mov
mov
ficom
(bad)
test
cdq
xor
out
sub
xchg
cs
pop
mov
stos
or
fnstcw
push
sbb
or
cmp
sub
enter
stc
mov
(bad)
fdiv
cli
xchg
idiv
mov
inc
hlt
dec
lock
je
sbb
fcomip
out
push
stc
jmp
mov
popf
in
jle
jg
cs
ins
and
aad
mov
mov
cmc
rep
cmp
or
mov
push
xchg
loopne
pop
pop
movs
hlt
or
mov
mov
sub
xchg
(bad)
add
int3
aaa
das
jo
addr16
pop
repz
add
pop
mov
aad
data16
xchg
mov
push
and
push
adc
pop
or
or
ja
movs
add
mov
(bad)
ret
adc
xchg
ds
or
pop
stos
out
and
mov
jecxz
or
imul
dec
nop
xchg
ja
int3
mov
bound
nop
mov
jecxz
dec
cmp
mov
mov
fisttp
xor
test
push
ds
ins
arpl
pop
gs
dec
(bad)
leave
rcl
inc
mov
xchg
das
jmp
dec
inc
jo
push
xor
mov
and
and
cmp
scas
pop
sub
fbld
cmp
imul
scas
les
mov
inc
arpl
inc
nop
ficomp
ja
scas
jg
jle
loopne
sbb
retf
lea
in
(bad)
jns
and
outs
push
outs
push
(bad)
icebp
in
sub
leave
add
mov
das
imul
xchg
cs
jmp
push
push
jo
inc
call
jg
test
pop
sbb
fistp
les
lds
inc
push
inc
stos
add
adc
xchg
mov
jmp
cmp
mov
scas
pop
sub
or
es
xor
jns
rcr
adc
jb
push
or
out
jecxz
mov
mov
mov
sbb
adc
or
mov
add
mov
sar
or
add
cs
sbb
adc
test
retf
scas
dec
sbb
lods
and
cli
jns
loopne
add
xchg
jno
push
retf
sahf
sbb
mov
sbb
(bad)
leave
dec
loope
(bad)
repnz
sbb
jno
mov
xchg
lds
inc
mov
push
xor
sbb
mov
imul
inc
lds
mov
addr16
jo
and
adc
and
pop
xchg
into
jnp
fcmovne
or
sub
jmp
dec
out
icebp
sar
test
or
mov
nop
int
aaa
(bad)
mov
in
mov
iret
inc
xlat
call
cdq
push
inc
lock
std
mov
pop
fisub
outs
adc
icebp
fidivr
jne
out
pop
mov
or
test
in
sahf
cdq
and
inc
jmp
out
aas
fldcw
inc
xchg
loopne
xor
out
and
out
jb
out
xchg
ret
sbb
push
xor
lods
pop
scas
test
mov
mov
lods
div
scas
sub
jae
pop
test
int
sub
das
cmc
xor
mov
imul
lahf
shr
xlat
xor
add
jns
mov
xor
or
and
sar
aad
lahf
lahf
push
cli
and
in
jo
popa
pop
push
aaa
enter
mov
pop
call
push
add
xchg
mov
jo
(bad)
sub
or
inc
sub
fwait
in
cmp
bound
lds
jo
inc
out
fsub
daa
ret
sbb
clc
push
(bad)
and
pop
mov
js
retf
push
xor
outs
push
dec
imul
rol
nop
out
dec
sbb
jge
cld
add
das
push
fadd
sbb
leave
cmp
pop
jbe
mov
and
push
adc
sahf
pusha
outs
cdq
xor
shr
cmps
fwait
mov
cmc
push
inc
mov
jp
add
xchg
retf
pop
jae
sub
pop
inc
xor
cs
cmp
mov
or
enter
daa
xchg
mov
out
jle
cmps
and
xchg
pusha
push
jae
ficom
sbb
mov
repz
mov
div
dec
fstp
jbe
aas
jp
push
mov
push
xchg
mov
in
mov
cmp
push
jmp
push
mov
js
pushf
mul
push
inc
mov
xchg
out
lahf
rcr
or
and
fstp
mov
movs
fidivr
pop
arpl
cmp
lock
(bad)
mov
xchg
out
ins
inc
adc
and
add
mov
xchg
cmp
mov
add
int
cdq
push
cmps
sbb
call
lods
imul
cmc
into
adc
jp
fs
jl
or
es
(bad)
xchg
shr
or
jmp
mov
into
mov
mov
dec
cmps
jg
scas
push
in
dec
int3
xchg
or
add
icebp
and
rcr
jae
xor
mov
out
xchg
jecxz
pop
cmp
and
push
dec
loopne
daa
sar
movs
or
mov
add
imul
cmp
dec
jae
inc
mov
mov
stos
sar
dec
cs
xor
mov
pop
shl
mov
jmp
dec
rcr
xchg
pop
pusha
das
(bad)
jo
call
setle
je
cdq
push
jne
add
jns
popf
add
inc
mov
outs
xor
mov
or
pop
push
push
push
test
mov
mov
mov
imul
not
and
fld
imul
ja
(bad)
std
jne
add
test
add
dec
and
push
dec
lea
psubw
cmp
sub
add
jns
ja
cmp
sbb
and
jb
or
cmp
sbb
xchg
push
mov
shr
in
and
and
or
stc
adc
sub
xor
rcr
push
mov
inc
mov
scas
lds
mov
loope
adc
or
xchg
cmp
xchg
fistp
fbstp
inc
sar
in
(bad)
mov
sbb
pop
or
scas
pop
lea
xor
and
retf
(bad)
and
push
int
mov
out
(bad)
repnz
movs
adc
xchg
mov
jecxz
fnstcw
rcl
fsubp
mov
aad
inc
out
jle
into
neg
sbb
js
pushf
push
mov
jg
in
jne
popf
xor
inc
cmc
mov
add
and
in
jl
(bad)
shr
ret
fcmovnbe
xor
sti
mov
(bad)
out
push
pop
jns
div
add
push
loopne
mov
scas
push
pop
jbe
jp
loope
adc
popf
xor
sbb
fwait
cmp
int3
xchg
test
sbb
push
inc
mov
mov
jp
xchg
test
jne
xor
int
push
ret
ficom
inc
loop
clc
shr
out
gs
loopne
pop
mov
push
adc
adc
push
in
mov
push
mov
pop
fld
(bad)
cld
add
popf
or
test
add
ss
jno
cld
pushf
sub
dec
js
fimul
movs
mov
ins
xor
shl
repz
arpl
push
std
imul
pop
push
dec
jecxz
aaa
addr16
cmc
jno
rep
or
push
cld
push
jne
cli
inc
and
mov
in
pop
xor
ins
xlat
(bad)
xor
sbb
jb
ins
adc
or
mov
push
push
inc
jg
mov
retf
ins
mov
pop
adc
jp
iret
pop
add
xchg
daa
clc
or
cmp
xchg
push
push
ja
test
inc
daa
test
mov
fs
add
jns
pop
shl
cmp
sbb
push
mov
xor
and
sbb
outs
adc
dec
fidivr
sub
lods
cmp
sahf
sbb
inc
aad
icebp
push
mov
out
mov
aaa
and
arpl
out
add
stos
add
int
dec
pop
and
cwde
and
sub
mov
pop
push
lds
and
retf
sub
mov
les
arpl
mov
lahf
(bad)
repz
(bad)
test
push
inc
mov
repnz
dec
inc
rol
fimul
(bad)
sbb
adc
push
mov
mov
mov
lea
push
aad
mov
out
nop
test
mov
lahf
pop
fwait
adc
cwde
cmps
test
int
fsub
sub
sar
pop
dec
lods
xchg
hlt
xchg
leave
test
push
mov
test
push
sub
add
mov
sub
es
xor
ja
sti
jbe
xchg
xor
jmp
and
xor
push
dec
cmp
dec
inc
out
ds
out
or
dec
or
nop
xchg
div
cmc
pop
mov
fmul
dec
dec
inc
ret
pop
cmp
div
cs
loop
gs
jmp
std
xchg
loope
aaa
mov
ins
xor
jp
bnd
or
mov
pop
push
in
test
(bad)
adc
repnz
fcomp
ss
cmp
dec
outs
pop
mov
in
retf
push
pop
div
mov
fistp
je
mov
mov
div
sub
inc
jae
cwde
pop
loop
cmp
push
jmp
in
add
xchg
les
fimul
add
inc
enter
loop
fs
mov
lds
inc
inc
cmp
or
ja
mov
aad
fwait
lock
dec
mov
mov
push
lds
data16
test
adc
nop
sub
pusha
mov
inc
inc
outs
out
stc
xor
xchg
jb
jo
in
pop
movs
push
dec
mov
std
loop
lods
xor
in
(bad)
lock
jb
stos
pop
std
pop
in
movs
jmp
sub
xor
loop
mov
cld
(bad)
and
xchg
cmp
pop
lods
movs
in
push
stos
add
sar
jno
out
js
dec
call
sbb
rcl
mov
cmp
jns
lods
add
mov
out
jge
add
imul
mov
dec
test
xor
jae
je
add
adc
mov
popa
jae
push
and
daa
push
jle
das
aam
in
pop
inc
ss
jmp
pop
sti
xchg
sub
ds
mov
mov
xchg
dec
and
(bad)
fstp
int3
pop
and
jle
inc
out
dec
shl
rcr
sub
mov
mov
fwait
push
ficom
ret
mov
jae
je
sbb
mov
ja
dec
add
retf
sbb
jae
jno
mov
retf
enter
sub
dec
mov
cmp
repnz
dec
push
stos
stos
jp
inc
pop
cmp
ror
sahf
jne
lds
jns
sub
popa
cmp
ror
mov
inc
(bad)
hlt
mov
cs
aaa
repnz
xor
jmp
xor
pop
ficomp
adc
sar
into
inc
fnstenv
fistp
psllq
test
mov
retf
xchg
jbe
(bad)
out
(bad)
ins
xchg
jo
outs
imul
sbb
sbb
adc
arpl
jnp
mov
push
jbe
sbb
in
lods
pop
icebp
sub
mov
and
sub
loopne
outs
clc
or
mov
mov
aas
sar
xchg
pop
ja
jae
(bad)
retf
(bad)
cld
xor
jnp
xchg
xchg
xlat
ds
retf
jnp
sub
das
add
cmp
pop
les
mov
mov
in
aad
mov
sahf
cmps
and
jns
xchg
fadd
xor
dec
or
or
addr16
ds
sub
add
test
adc
mov
sbb
xor
mov
lods
movs
mov
sahf
mov
retf
call
cmp
int3
ror
jb
(bad)
adc
sub
mov
nop
mov
call
lahf
xchg
push
inc
bound
mov
mov
xchg
push
aam
repz
mov
ror
push
je
jno
cdq
(bad)
add
mov
movs
xchg
add
in
pop
and
sbb
fisubr
call
(bad)
xchg
retf
xchg
sbb
das
ja
cmp
dec
xlat
in
stos
leave
or
lods
(bad)
and
inc
test
in
test
js
fmul
cmp
(bad)
pop
test
outs
cwde
fwait
cmps
mov
je
add
add
push
arpl
outs
test
adc
(bad)
nop
xor
jnp
lods
enter
pop
dec
add
pop
outs
cmp
ins
neg
ret
xor
movs
xor
ss
jle
sahf
jns
sbb
jno
and
sub
adc
in
and
scas
ins
xchg
cmp
ja
mov
aad
add
sbb
iret
inc
out
jecxz
in
and
mov
pop
(bad)
scas
movs
xor
xchg
mov
loopne
and
jmp
sub
sub
mov
cmp
fcmove
push
jmp
cmp
fld
ds
or
ficom
pop
dec
cmp
es
arpl
rol
mov
shl
loopne
mov
jecxz
retf
xchg
in
mov
mov
lea
aaa
pusha
imul
jmp
int3
mov
push
cmp
sub
adc
test
into
jb
(bad)
ins
dec
sbb
xchg
gs
fnstenv
cdq
pop
fdivr
loopne
shr
stc
pop
or
and
sub
mov
ror
or
addr16
fcomp
jl
repz
and
xchg
test
xchg
mov
xor
pop
rcr
mov
setl
test
daa
jmp
repnz
add
sti
push
add
fsub
pop
jmp
sbb
mov
cmp
rol
daa
arpl
cmp
jnp
pusha
retf
xor
dec
jmp
mov
in
lock
push
xchg
imul
inc
xchg
cmc
sbb
mov
jne
sub
popa
pop
repz
outs
sbb
jecxz
movs
xchg
cld
inc
jle
and
jmp
add
sar
shl
mov
iret
mov
sub
or
or
cmp
add
repnz
scas
mov
mov
or
popa
inc
sub
xchg
pushf
xor
or
loop
das
and
std
inc
(bad)
adc
loop
or
std
xor
pop
cli
int3
cs
or
lahf
rcl
lods
sub
mov
inc
xchg
call
enter
add
xlat
(bad)
rcr
pusha
pusha
(bad)
rol
jmp
out
xor
xchg
js
add
and
ins
cs
scas
std
lds
inc
dec
mov
stos
and
(bad)
es
push
pusha
jb
std
mov
mov
dec
add
mov
jbe
(bad)
in
jmp
inc
data16
push
adc
sbb
pushf
dec
xchg
sahf
inc
dec
sub
fnstenv
jge
clc
adc
stos
loop
add
ja
pop
lods
out
jmp
daa
icebp
jbe
out
push
and
jns
xor
push
dec
inc
bound
fild
xor
loop
jmp
pop
(bad)
fs
jnp
imul
stos
ds
push
out
ins
not
or
dec
push
lahf
in
(bad)
pusha
iret
div
rcl
or
arpl
(bad)
adc
fadd
sub
ffree
xchg
ror
cwde
clc
push
mov
mov
sbb
xor
(bad)
ror
jecxz
fsub
scas
data16
pop
jle
retf
and
or
(bad)
in
xchg
mov
dec
cmp
mov
add
arpl
cmps
mov
jge
scas
cs
add
pop
pop
or
dec
pop
cs
cdq
cmp
mov
sbb
sub
inc
es
std
fst
cmp
cli
cmp
call
push
and
mov
(bad)
jmp
pop
mov
fsubr
leave
fist
fiadd
mov
lahf
mov
mov
(bad)
mov
sub
cdq
and
mov
rcr
sbb
push
xchg
add
mov
mov
adc
inc
jnp
pusha
retf
add
mov
lods
push
sub
push
nop
sbb
movs
(bad)
bound
jbe
mov
jmp
mov
push
hlt
adc
jmp
pop
pop
cmps
sub
sbb
cmc
sub
jecxz
loope
lea
leave
dec
ss
pop
aas
push
fsub
mov
rol
aas
pop
dec
add
mov
xchg
adc
pop
lea
lods
cmp
sub
mov
push
fist
or
add
ds
stc
xor
mov
mov
pop
cmp
pushf
or
add
les
jl
rcr
add
out
sbb
arpl
scas
jmp
jo
push
mov
(bad)
jno
out
xchg
test
mov
or
push
call
sbb
mov
sbb
out
or
mov
sub
mov
ret
je
xor
out
icebp
mov
fs
fldcw
or
inc
mov
xor
adc
push
xchg
mov
inc
sar
pop
mov
lahf
mov
enter
fsub
cmp
cld
xor
in
ret
in
dec
xchg
cmc
sbb
mov
arpl
out
cmc
lods
xchg
dec
test
fsubr
es
sahf
jmp
clc
js
push
daa
add
call
enter
stos
cdq
jecxz
inc
cmp
push
rcl
es
inc
jge
aas
xchg
mov
enter
dec
daa
mov
fmul
jmp
or
xor
jp
mov
cmps
fisubr
pop
sahf
repz
mov
je
add
adc
inc
loope
ds
cmps
sbb
imul
xor
(bad)
shl
inc
fld
xchg
clc
push
cmp
in
mov
push
aad
sub
in
ficomp
lea
jae
sbb
and
push
push
sbb
fld
xor
(bad)
jbe
mov
mov
jl
or
jl
push
sbb
int
lods
lds
or
and
ins
repnz
or
rol
ret
sub
add
pop
jg
pop
lods
and
xrelease
sbb
push
jbe
mov
jno
(bad)
ficom
xchg
fwait
ret
ja
and
call
push
fwait
scas
fidivr
cmp
pop
aam
pop
inc
or
add
sahf
cwde
mov
add
sbb
loope
xchg
sub
mov
shl
jns
mov
sbb
outs
sar
jmp
not
rol
inc
sbb
pop
repnz
test
inc
add
test
cmp
push
dec
scas
ror
adc
ror
loop
adc
mov
in
push
dec
dec
pop
cdq
(bad)
rcr
xchg
js
mov
movs
jo
ins
sub
cwde
mov
xchg
std
pusha
outs
sub
inc
push
or
call
fild
push
stos
pop
mov
xchg
mov
mov
imul
out
std
fisttp
pop
cwde
mov
stos
and
out
xchg
sbb
sbb
loopne
lods
adc
jno
mov
mov
movs
cmp
add
scas
pop
sub
std
clc
and
(bad)
shr
and
imul
(bad)
mov
mov
shl
add
frstor
xchg
jns
mul
mov
cmp
and
mov
pop
fisttp
fwait
cli
mov
fiadd
mov
(bad)
(bad)
cmp
mov
rol
xor
adc
bound
(bad)
call
mov
lahf
ja
jl
jns
ror
jne
add
push
adc
inc
fcmovbe
cwde
dec
ret
xchg
dec
dec
sbb
and
pop
dec
std
jnp
ret
and
add
xchg
mov
outs
xor
dec
push
jae
jmp
or
jns
sbb
pop
jg
mov
mov
add
xchg
rcr
js
out
jp
das
(bad)
cmp
mov
xlat
fcom
(bad)
sahf
cmps
imul
mov
pop
and
mov
sub
cmps
inc
movs
in
mov
inc
mov
dec
(bad)
cmp
imul
add
pop
call
das
sbb
cmps
idiv
(bad)
(bad)
jbe
ret
outs
scas
cmp
pusha
in
mov
or
inc
mov
aaa
fsub
rcl
push
add
aaa
out
inc
mov
sbb
pop
pusha
pop
psubusw
into
xchg
mov
push
cli
add
(bad)
fisttp
dec
lahf
dec
sbb
mov
sub
call
fistp
jp
in
pop
xchg
call
pop
enter
pop
mov
inc
dec
push
pushf
retf
sbb
mov
pop
xor
sbb
cli
bound
in
fdivr
test
dec
dec
icebp
mov
lock
(bad)
in
mov
jge
(bad)
fnstcw
fstp
imul
fbld
addr16
xor
sbb
pop
test
int
xchg
push
inc
jl
mov
or
mov
xor
xchg
adc
sbb
setl
ja
iret
adc
sbb
mov
cmp
jmp
ret
jp
out
arpl
cmp
and
inc
cs
xchg
cld
xchg
pushf
xor
inc
inc
or
fwait
inc
test
jmp
(bad)
adc
mov
mov
jnp
inc
cmps
mov
inc
das
pop
retf
ins
in
jmp
cmp
xchg
mov
(bad)
lea
mov
std
sbb
push
sbb
in
jae
fistp
mov
push
sub
sbb
push
jecxz
imul
mov
pop
adc
mov
in
mov
adc
imul
push
out
outs
mov
and
jmp
stos
out
push
cmp
mov
inc
enter
aad
aas
movs
mov
push
jno
repnz
mov
into
scas
push
call
push
lahf
les
jmp
call
pop
dec
dec
cdq
arpl
mov
sub
repnz
cld
into
pusha
out
(bad)
or
ret
sti
adc
pop
cmc
pop
cmc
adc
mov
test
add
(bad)
xchg
cmp
jle
test
stc
ss
pop
and
std
pop
or
mov
fsub
popf
jb
in
push
ss
sub
clc
lock
cmp
int3
shl
call
adc
and
aad
fs
aad
test
push
pop
jb
popa
pop
rcr
lock
test
mov
std
push
inc
inc
add
inc
mov
inc
add
pop
sub
and
cmp
or
and
cmps
scas
int3
push
ret
out
fdiv
mov
stos
jp
jge
push
test
xor
aad
gs
xor
aas
test
ja
lods
sahf
push
mov
call
sub
mov
jne
scas
mov
or
xchg
xor
fs
add
xlat
mov
outs
sbb
sbb
sbb
sub
inc
pop
dec
sub
sub
inc
pop
mov
xchg
and
scas
xchg
jmp
cmp
adc
ror
(bad)
(bad)
pop
pop
sbb
push
mov
dec
loop
sbb
pop
xchg
lea
dec
add
cdq
or
int3
push
and
lock
popf
add
xchg
xor
nop
shr
ja
mov
dec
adc
or
cli
retf
lods
mov
call
leave
rcl
leave
shl
ror
cmc
outs
add
jmp
std
movs
mov
int
dec
inc
pop
adc
aam
xchg
pop
ins
leave
jecxz
inc
mov
leave
shl
cdq
add
pop
mov
jo
cmp
cld
arpl
rol
nop
sbb
xor
jno
pusha
xchg
sub
push
adc
int
scas
loopne
ins
stc
fcomip
out
ror
fucomi
pop
in
mov
mov
dec
mov
sub
pop
call
jmp
xor
movs
mov
cmc
adc
dec
xor
cmp
jns
jmp
lods
xor
jge
call
bswap
sub
out
call
push
aas
ds
icebp
(bad)
jmp
xor
push
out
and
dec
daa
div
xor
and
lods
xchg
out
sbb
(bad)
ret
into
(bad)
les
mov
daa
or
ss
xor
das
std
jns
xchg
mov
fldcw
sbb
aam
pop
xor
fsubr
push
pop
fld
rol
iret
imul
pop
jne
mov
ret
shr
or
(bad)
into
and
mov
jae
adc
push
out
imul
mov
rcr
fist
out
cmp
je
out
jp
or
sti
pop
std
and
aas
xchg
push
cmc
dec
mov
icebp
out
loop
mov
pop
dec
cmps
in
aas
(bad)
dec
aas
cwde
mov
int3
sub
bound
push
fadd
and
inc
ins
or
ret
push
jp
adc
lods
sbb
dec
jnp
inc
jne
fstp
out
mov
sbb
xor
push
dec
cmp
aad
xor
inc
jnp
stos
add
and
js
test
mov
imul
test
sub
nop
add
call
sub
mov
lahf
lock
out
mov
test
lock
sub
(bad)
cmp
xor
pop
test
cmp
push
aad
pop
loope
imul
add
xchg
or
pop
iret
adc
and
(bad)
mov
cmp
dec
mov
fld
pushf
rcr
mov
ja
in
pop
inc
cld
test
das
(bad)
sti
mov
fdiv
imul
repz
mov
xchg
rol
cmp
jno
pmaxub
jmp
outs
loop
gs
pop
mov
clc
push
aas
dec
(bad)
mov
mov
popf
shl
leave
ins
loopne
cwde
jecxz
leave
dec
pusha
inc
fistp
stos
sub
or
movs
clc
(bad)
shl
out
xor
sub
push
mov
(bad)
pop
sub
ror
leave
push
and
mov
mov
int3
shl
retf
sub
pusha
jns
lods
cld
push
pop
cmp
out
mov
ror
sbb
push
ret
inc
lods
loope
aad
cmp
xchg
mov
pop
neg
jl
pop
mov
sub
std
sub
cli
xchg
push
rcl
sbb
jae
pop
cli
cwde
leave
ficom
push
jae
ins
push
pop
ret
aam
jae
cs
mov
mov
test
mov
repnz
sar
cmps
retf
ss
cs
jg
mov
add
or
add
mov
test
mov
jne
inc
adc
jle
inc
and
xchg
jle
cmp
xchg
adc
fld
cmps
pop
pushf
shr
cmps
pop
sub
test
popa
popf
enter
aad
movs
nop
jnp
adc
out
cmps
cmp
mov
fistp
inc
push
mov
pop
push
fld
sub
xlat
cmps
iret
retf
test
cmps
test
shl
xchg
imul
data16
aam
dec
jns
add
cmp
fstp
pop
sar
les
rcr
bswap
cwde
scas
outs
or
jmp
push
sub
mov
sbb
mov
xor
xlat
out
xor
lds
and
add
cs
lods
cmps
aam
outs
sahf
daa
test
pop
jg
in
sbb
fwait
and
sub
js
fld
dec
icebp
mov
cmp
lods
aaa
daa
adc
mov
mov
loop
arpl
(bad)
jnp
push
jne
xchg
mov
fisub
dec
xor
sbb
dec
shl
and
jge
sub
ds
mov
mov
(bad)
fcmove
push
cmc
icebp
ss
add
aad
fisttp
pop
int3
jle
daa
xchg
sbb
gs
setns
push
mov
movs
mov
xchg
clc
xchg
push
cmc
dec
and
jne
div
icebp
into
inc
popf
push
out
pop
test
es
cli
es
enter
inc
dec
mov
mov
and
cs
pop
in
rcl
aam
pop
add
sbb
inc
into
xchg
add
adc
inc
cmp
push
mov
cmp
rol
out
mov
pushf
dec
ins
mov
ins
jecxz
stos
mov
(bad)
and
jae
nop
popa
fwait
out
dec
and
pop
call
mov
jb
ins
mov
mov
dec
pushf
(bad)
mov
sbb
push
jbe
sub
pushf
add
aam
jbe
pop
in
jo
rol
sbb
in
jg
daa
and
stc
popa
lds
add
mov
je
push
les
in
(bad)
mov
mov
dec
loop
or
fwait
out
pusha
pushf
cld
je
rol
fadd
loope
and
and
mov
or
mov
jmp
fs
int
cmp
xor
int3
ret
cmps
xor
mov
dec
jb
fwait
inc
pop
jmp
outs
inc
dec
pop
inc
test
gs
jmp
mov
stos
ss
and
xchg
and
outs
hlt
in
addr16
stc
mov
add
mov
add
sub
or
sbb
(bad)
ffree
xor
push
cmp
pop
cmps
push
es
adc
cdq
mov
jl
enter
or
xor
sub
dec
cmps
jmp
call
mov
mov
stc
jecxz
jne
stos
pop
push
push
movs
and
xor
retf
xor
xchg
adc
call
push
int3
inc
loop
inc
dec
and
sti
sbb
cmps
mov
push
ins
and
out
xchg
jg
dec
retf
push
dec
adc
movntq
cmp
dec
adc
mov
fwait
and
(bad)
aad
sar
js
out
ja
jle
adc
outs
or
cmps
fsub
aaa
jb
mov
dec
out
pop
sub
arpl
and
xor
shufps
sub
xlat
aas
cmp
dec
sub
jb
dec
ins
in
in
push
jbe
daa
shr
adc
jmp
bound
int
jbe
xchg
sbb
icebp
test
cmp
sbb
xchg
je
mov
leave
mov
icebp
cdq
inc
hlt
mov
add
ficomp
xor
lds
or
fisttp
and
retf
adc
outs
push
adc
add
(bad)
in
push
mov
or
or
pop
pop
dec
push
mov
out
mov
fcomip
sub
(bad)
outs
xchg
daa
adc
xchg
push
jmp
das
leave
aas
out
imul
inc
mov
inc
in
sbb
test
pop
sub
lahf
or
jo
or
xchg
inc
dec
stos
lock
pop
jbe
inc
or
ds
(bad)
push
add
lock
aas
(bad)
popf
fwait
mov
pop
sub
push
cli
adc
lds
ins
hlt
xor
test
shr
or
pop
mov
pop
(bad)
outs
sbb
dec
sbb
js
shl
sub
jecxz
adc
ins
or
xor
dec
les
jp
mov
das
jns
push
scas
mov
mov
adc
pop
mov
jmp
and
out
jbe
fcom
cs
loope
dec
xchg
xchg
(bad)
scas
(bad)
in
call
mov
nop
mov
addr16
sbb
test
pop
in
mov
retf
cmp
out
pop
fild
and
xchg
std
cmp
test
and
stos
rol
out
jmp
sub
ins
mov
cmp
aam
cmp
pop
mov
mov
cld
adc
add
jmp
add
ret
lea
fmul
or
sub
fcmovu
mov
pop
push
xchg
repnz
xchg
dec
pop
fucomip
or
int3
mov
mov
aad
data16
cli
outs
shl
and
sub
xchg
adc
mov
inc
mov
jnp
xor
jnp
cs
out
in
cmp
aad
xchg
mov
adc
ds
mov
jns
out
sbb
out
mov
inc
ror
fisubr
xor
adc
or
push
pop
sbb
push
inc
jne
fs
xchg
(bad)
jb
mov
je
pop
js
sbb
out
fisttp
push
test
sbb
cs
pop
pop
and
jmp
lahf
stos
aas
and
pop
mov
xchg
jp
test
dec
mov
rcr
mov
mov
pop
test
jns
sub
xor
pop
ins
fdiv
pop
out
xor
hlt
dec
add
test
push
popa
lahf
rcl
pusha
retf
ins
mov
sub
cdq
push
nop
aam
out
lods
xchg
retf
xchg
sbb
add
mov
dec
dec
das
cs
test
nop
or
popf
movs
fimul
mov
lock
cmp
cmp
xchg
das
and
sbb
xchg
shl
push
cli
and
sar
psrlq
stos
in
mov
aas
adc
xchg
adc
retf
sub
vandps
pop
and
cld
cmp
inc
repz
jg
pop
add
mov
push
xor
cdq
pop
mov
adc
push
and
cdq
adc
inc
inc
and
pop
stos
sbb
vmovups
jl
push
ror
mov
pop
test
dec
les
clc
into
or
or
sbb
sub
fcom
dec
mov
sbb
adc
jb
stc
aaa
jns
aas
imul
sub
btr
fidiv
movs
cwde
jno
cmc
jmp
inc
pop
jmp
movs
or
les
and
pop
test
mov
loop
inc
cmp
movs
jecxz
cs
mov
(bad)
loop
sbb
pop
and
push
jmp
dec
mov
imul
cmps
push
jnp
inc
mov
sub
inc
mov
cld
in
add
fwait
jecxz
mov
jg
sub
mov
mov
(bad)
aad
pop
(bad)
cs
dec
xchg
inc
push
pop
sahf
dec
ror
(bad)
hlt
mov
xchg
mov
clc
test
or
(bad)
movs
pop
pushf
out
mov
sahf
fnsave
sub
and
add
pusha
xor
xchg
mov
jb
cmp
fld
(bad)
out
pop
dec
pop
jge
inc
or
repz
dec
movs
and
retf
(bad)
fcom
xor
ret
adc
push
adc
pop
js
nop
push
sbb
arpl
stc
push
gs
fdiv
bound
or
pop
repz
add
adc
jae
iret
jl
leave
pop
call
aas
sub
ss
ja
push
jge
sub
add
fist
xor
xlat
ror
cdq
and
sub
pop
and
dec
outs
mov
jne
jmp
push
push
std
dec
outs
imul
arpl
f2xm1
lahf
xor
mov
test
(bad)
(bad)
div
sbb
dec
scas
fs
bswap
bound
jo
inc
in
fisub
mov
es
xor
jecxz
xchg
mov
ja
ror
push
adc
mov
sub
scas
sbb
xor
inc
xchg
mov
cld
sbb
xor
loope
imul
in
adc
dec
mov
rcr
push
movs
sub
mov
pop
xchg
add
jle
mov
stos
push
mov
and
cwde
data16
jo
bound
dec
jg
mov
fisub
inc
faddp
sbb
and
arpl
movs
addr16
pop
inc
cmp
pop
or
inc
sbb
mov
into
push
jbe
repnz
int
das
cmp
dec
outs
cmp
and
mov
adc
shr
out
pop
jne
inc
out
call
pop
loopne
push
and
aam
ret
cmp
ret
sub
popa
inc
pop
in
mov
clc
lahf
pop
stos
dec
mov
jmp
retf
jmp
cmps
(bad)
shr
add
loopne
xchg
(bad)
push
mov
pop
xlat
cld
pop
stos
cdq
add
or
adc
adc
jnp
jbe
pop
cli
fs
mov
pop
popf
leave
sub
loopne
cmp
push
retf
and
retf
push
push
mov
clc
(bad)
push
test
cmp
das
inc
push
cld
xor
sub
sti
stos
sbb
scas
addr16
xchg
sbb
pop
retf
jbe
sbb
in
xor
ins
dec
xchg
or
xchg
jecxz
out
outs
sbb
dec
inc
neg
ds
inc
inc
mov
mov
cmp
lods
jb
xor
addr16
nop
(bad)
std
call
pop
mov
inc
push
cli
cli
mov
ret
xlat
adc
mov
adc
mov
mov
mov
lahf
je
imul
push
outs
jl
sbb
mov
in
ret
lods
dec
and
xchg
outs
je
or
shl
ror
jmp
inc
mov
dec
shl
add
and
out
(bad)
sbb
bound
es
inc
pop
scas
or
jmp
xchg
xor
mov
jl
jmp
in
push
push
and
out
(bad)
into
jp
xchg
pop
stos
jmp
test
dec
mov
adc
rol
xchg
adc
bt
and
adc
rcr
cmp
xor
and
cmp
je
cmps
fidiv
into
loop
scas
pop
and
xor
jae
in
and
(bad)
std
int
test
mov
jp
in
cmp
add
cmp
xchg
scas
outs
and
add
jb
rol
clc
pushf
mov
push
dec
jmp
add
scas
sub
retf
(bad)
call
sub
cwde
retf
dec
adc
aam
fimul
mov
push
lods
addr16
jno
jnp
fadd
les
aas
mov
cld
sub
mov
sbb
addr16
push
ins
xor
lods
add
xor
cmp
xor
jno
nop
mov
pop
adc
cs
inc
mov
cli
push
movs
(bad)
mov
inc
push
lahf
mov
inc
rol
and
imul
push
add
scas
ret
lds
sahf
mov
jbe
pop
fs
shl
mov
mov
mov
shl
add
inc
jae
or
je
retf
xlat
cwde
lock
lock
fbld
(bad)
mov
jge
add
nop
into
jo
cmp
xor
movs
cmps
jg
push
fisub
or
mov
jae
jns
pusha
or
and
inc
gs
jmp
sar
shl
loop
dec
sti
sub
mov
outs
mov
(bad)
fsubr
test
mov
out
dec
xor
adc
mov
xor
jo
jnp
pop
pop
cs
fst
jg
loopne
jl
rol
adc
imul
js
mov
lea
test
addr16
shl
push
push
dec
ins
mov
adc
fld
xor
xchg
pop
mov
adc
cli
ja
sub
pop
je
mov
nop
jnp
or
arpl
jmp
sar
ins
push
aam
retf
bound
inc
inc
inc
ins
mov
int
retf
push
outs
outs
mov
push
mov
ret
out
push
xchg
xor
mov
fiadd
(bad)
cld
clc
adc
ds
pop
mov
dec
(bad)
out
jne
cmps
popa
mov
ins
pop
(bad)
inc
rol
and
fwait
(bad)
stos
adc
mov
ret
les
inc
dec
inc
sub
mov
sbb
xor
sbb
mov
aad
xor
pop
cmp
push
push
(bad)
mov
add
cmp
sbb
in
mov
(bad)
outs
pushf
xchg
pop
je
or
scas
sbb
cmp
dec
popf
dec
retf
cwde
jl
je
mov
adc
(bad)
js
arpl
mov
jne
iret
jge
or
or
hlt
(bad)
adc
idiv
jbe
mov
and
adc
push
loopne
jnp
pop
or
(bad)
leave
outs
sbb
popf
cli
popf
test
shr
push
add
fs
pop
int3
xchg
test
inc
sub
add
xor
int
cmp
cmp
movs
(bad)
sub
jb
sahf
out
mov
scas
mov
push
jno
(bad)
xor
mov
and
in
aaa
bound
dec
rol
bound
inc
xlat
mov
add
out
loop
dec
repnz
pusha
mov
imul
dec
jns
sbb
popf
sub
sub
inc
inc
ffreep
add
push
rcr
dec
pop
call
(bad)
iret
cmps
cld
push
or
dec
pop
(bad)
data16
ficom
mov
pop
jp
inc
inc
sub
(bad)
outs
mov
enter
dec
pop
int3
jae
mov
movs
ret
push
sub
pop
mov
xchg
jmp
rcr
lock
jne
inc
and
fsubr
out
mov
pop
add
dec
sbb
adc
outs
push
(bad)
(bad)
mov
cmp
mov
push
jecxz
aaa
xor
test
fistp
pop
xchg
cmp
mov
push
cmc
and
add
dec
in
add
imul
fadd
(bad)
xlat
dec
ret
cmp
push
push
fbstp
jo
mov
leave
and
xchg
icebp
xchg
outs
neg
nop
ret
test
lods
inc
cmc
mov
stos
fwait
sub
adc
sub
ja
es
fsub
out
mov
cmps
jg
pop
dec
scas
and
mov
push
jle
mov
mov
and
pop
cli
jnp
aaa
scas
mov
pop
test
sbb
fmul
cmp
cmovo
push
mov
jmp
push
les
ret
shr
out
shl
jne
and
mov
scas
push
sub
inc
cs
sub
mov
je
popf
hlt
out
fisub
dec
sub
mov
push
cli
cdq
and
sti
jo
fucomi
fld
push
mov
(bad)
push
icebp
fbstp
jnp
pop
(bad)
mov
push
mov
and
popf
dec
clc
in
nop
inc
loope
jns
jno
jae
cmc
loopne
das
into
call
call
jecxz
and
push
jb
cmp
jae
call
stos
imul
ins
sub
shl
sub
push
ss
inc
icebp
ds
or
push
dec
mov
rsqrtps
outs
loop
mov
daa
cmp
out
jbe
iret
xor
jg
jge
(bad)
cmps
or
ins
aaa
(bad)
inc
dec
rcr
mov
pop
test
out
test
mov
jmp
jno
cmps
imul
je
lea
xor
jmp
cmp
out
dec
inc
fs
jge
arpl
xchg
sbb
loope
dec
xchg
adc
enter
mov
dec
and
(bad)
sbb
pop
pop
dec
loop
ins
adc
add
clc
ins
cwde
and
cmp
test
ror
jle
cdq
sar
pop
mov
fidivr
mov
xchg
push
jmp
cmp
sub
push
in
or
adc
cmp
pop
aad
adc
dec
mov
mov
in
xor
sbb
shr
ins
shl
sub
sbb
xor
push
in
ss
lods
pop
adc
test
test
pop
push
pop
xor
int3
lods
inc
leave
cdq
cwde
mov
es
sbb
sub
sbb
jb
inc
xchg
pop
ret
inc
test
xchg
mov
retf
test
cmp
retf
push
pop
xchg
les
std
pusha
arpl
ins
jb
mov
scas
out
cmp
cwde
and
(bad)
stc
xor
add
nop
(bad)
loop
and
mov
(bad)
jmp
push
and
loop
adc
arpl
dec
pop
or
xlat
push
lahf
rcl
xchg
imul
mov
xlat
add
adc
fbstp
dec
jmp
add
cmp
dec
icebp
pop
out
or
jbe
cmp
in
inc
aad
pop
(bad)
push
jl
adc
pop
add
(bad)
(bad)
adc
xlat
cmp
push
popf
mov
call
(bad)
lds
popf
stos
push
jmp
cmp
xchg
retf
jmp
rcr
push
(bad)
mov
cli
test
push
inc
mov
jno
or
mov
or
fdiv
adc
adc
add
add
jno
scas
dec
shl
pop
xor
fldenv
adc
jl
movs
out
push
(bad)
in
mov
loope
rcl
add
loop
popa
call
add
loope
out
jg
shl
dec
add
jg
fs
and
mov
pop
xchg
aam
adc
nop
push
rol
inc
ss
fistp
jbe
jns
jge
push
imul
repnz
cs
call
(bad)
jle
xor
xor
pusha
sbb
xor
mov
sub
sti
xchg
jno
sbb
test
pop
mov
out
mov
hlt
inc
jp
shl
pop
dec
in
jne
jge
pushf
adc
mov
imul
aaa
pop
cwde
inc
sbb
arpl
not
std
sbb
xchg
push
stos
cmp
popf
push
sub
cmp
loop
(bad)
aam
(bad)
jge
lahf
ficomp
mov
mov
or
ins
mul
stos
mov
cmp
jno
enter
push
ins
mov
cmp
adc
mov
adc
or
push
cs
shl
pop
nop
das
sbb
pop
mov
lock
in
icebp
(bad)
gs
push
xchg
pop
ds
adc
and
add
mov
mov
retf
jbe
dec
daa
(bad)
sub
mov
xchg
push
sub
test
jb
cmp
retf
push
pop
mov
scas
cwde
jmp
xchg
(bad)
ret
cld
iret
retf
fcom
cmp
or
clc
inc
fiadd
cmc
ret
ror
ss
mov
mov
and
add
test
and
or
idiv
movs
cmps
add
out
jecxz
jbe
pop
xchg
mov
jo
fist
dec
or
or
push
pusha
fnstsw
sub
outs
sub
jo
lock
int3
add
jl
lahf
sub
xor
adc
out
inc
sbb
clc
sbb
lock
sub
call
lock
in
pop
push
push
daa
fild
popf
cwde
repz
cmp
fidiv
and
mov
out
xchg
cdq
outs
pop
ror
in
out
pop
in
or
mov
and
iret
adc
jg
xor
xchg
fsub
xchg
push
mov
addr16
jmp
cmp
or
inc
mov
xor
inc
push
sbb
jmp
js
inc
test
add
or
cmc
xor
cmp
lahf
mov
std
push
or
fild
mov
mov
dec
ror
inc
mov
pop
push
clc
mov
and
lock
pop
lods
push
xor
push
cmp
shr
mov
xor
push
jge
add
pop
inc
xchg
lods
push
adc
pusha
call
sti
ja
rol
xor
push
jns
lahf
jmp
mov
(bad)
adc
daa
mov
xchg
sahf
ja
out
adc
test
test
iret
fstp
mov
or
jnp
icebp
xchg
jmp
lock
pop
mov
out
jl
sbb
clc
mov
adc
in
mov
add
xchg
mov
cmp
fcomp
xor
and
shr
xor
jge
jbe
repz
aam
pop
imul
cmp
movs
jle
shl
xchg
retf
sbb
push
fldenv
repnz
stos
cmp
dec
push
pop
lods
(bad)
pop
lds
ss
xor
sub
in
and
cmps
push
inc
push
inc
or
mov
in
pushf
xchg
xor
test
rcl
push
scas
push
sub
xchg
cmp
mov
mov
repnz
les
loop
pop
imul
addr16
call
dec
imul
nop
imul
sti
imul
lds
dec
fmul
test
sbb
cmps
aam
mov
scas
mov
shl
movs
int
cmps
jnp
and
fnstenv
push
add
inc
call
mov
pop
loop
push
rcr
mov
inc
jo
arpl
das
mov
aam
enter
stos
fcmovnbe
mov
stc
int
fisubr
and
pop
push
retf
bound
xor
mov
loop
push
cs
out
or
or
xchg
add
popa
add
adc
mov
mov
sub
sub
imul
add
shl
das
mov
stos
push
imul
movs
and
jecxz
push
sub
cmps
int
mov
dec
aad
lahf
out
and
loopne
jecxz
xor
ins
push
(bad)
cli
lods
jecxz
xchg
and
push
add
mov
or
sbb
addr16
sub
jge
mov
sar
sbb
fsub
nop
ret
fldenv
js
nop
cdq
aas
mov
retf
enter
lods
mov
imul
int
sti
mov
lahf
ret
sbb
sahf
ja
sar
les
lock
and
dec
and
jno
and
cs
or
mov
push
add
push
mov
ror
nop
inc
mov
mov
xchg
push
call
daa
das
mov
rol
adc
clc
pop
push
inc
jl
pushf
int3
push
inc
push
fsubr
scas
fcomp
(bad)
clc
xchg
pusha
icebp
imul
mov
loopne
mov
(bad)
mov
pop
sbb
adc
movs
sbb
scas
mov
icebp
ret
je
add
scas
mov
js
rol
pop
xchg
xor
inc
adc
cmp
ficom
mov
push
fwait
scas
test
jnp
loop
jno
push
fbld
xor
cmp
js
std
inc
loopne
push
ret
xor
push
mov
jmp
mov
mov
js
call
popf
mov
stos
in
xchg
add
xor
sub
sbb
ds
sti
mov
imul
add
sbb
mov
ret
(bad)
out
push
sahf
xchg
xchg
xchg
mov
cmps
lods
in
test
jg
or
inc
cld
jb
lock
movs
(bad)
loopne
ret
mul
lea
push
inc
xchg
(bad)
jl
add
cs
xchg
sub
lods
pop
inc
xlat
stos
mov
inc
jb
inc
mov
shl
pop
jp
jecxz
xor
sbb
sbb
xor
mov
iret
cmp
shl
ds
push
iret
pop
nop
fwait
stc
jb
ss
movs
mov
or
jle
or
pop
cli
loopne
test
xor
std
js
jnp
sub
inc
int3
rol
shr
icebp
sbb
cld
sub
cmc
fld
sbb
std
and
fsub
cmp
cmp
inc
cmp
push
mov
je
bnd
cmp
cs
imul
inc
adc
cdq
cmp
xchg
outs
lods
out
(bad)
jo
mov
adc
add
xor
sbb
inc
dec
fnstcw
add
inc
xchg
(bad)
jo
shl
lods
mov
xchg
pop
xor
mov
add
ss
std
push
jb
inc
push
cmp
xchg
sbb
push
jno
imul
inc
pop
loopne
out
mov
xor
adc
xchg
adc
adc
and
retf
int
test
jo
out
or
adc
push
(bad)
test
pop
mov
aas
inc
pop
mov
(bad)
test
pop
ret
or
xchg
shr
(bad)
sti
movs
popf
cli
retf
movs
pop
xor
movs
xchg
jmp
fisttp
movs
(bad)
dec
add
fbstp
in
or
fwait
adc
into
scas
jo
loope
rcl
mov
xchg
push
xchg
enter
mov
and
aaa
test
in
or
push
es
shl
sub
mov
rcr
dec
clc
leave
ins
cli
pop
ins
adc
mov
(bad)
cmps
arpl
sbb
sbb
xor
jecxz
cmp
mov
in
rcl
inc
and
out
xor
or
scas
dec
jmp
ja
loop
cmps
ror
gs
shl
icebp
fidivr
dec
pop
sbb
les
inc
jmp
ins
js
adc
into
or
sub
or
int
and
call
fist
(bad)
loop
loope
adc
lds
jb
cmp
inc
mov
sbb
add
test
adc
retf
cmp
repz
pop
fcomp
jnp
and
(bad)
test
call
mov
sub
daa
sbb
and
push
add
retf
adc
inc
(bad)
out
push
mov
mov
sub
mov
loope
push
loopne
mov
bswap
ror
sub
icebp
std
cmp
scas
in
cmp
call
imul
mov
loop
jle
repnz
sbb
jnp
inc
mov
cld
fsub
cmp
sbb
nop
ins
cmp
cld
pusha
retf
jg
fs
xchg
dec
xchg
inc
std
add
adc
adc
pop
push
(bad)
scas
xlat
mov
xchg
hlt
push
mov
mov
(bad)
aas
ins
and
or
and
xor
fcom
cmp
push
aad
movs
xor
mov
in
cmp
stos
jbe
inc
test
mov
push
cmp
fstp
and
mov
arpl
xchg
adc
out
pop
and
fld
arpl
xchg
jmp
cwde
loope
icebp
push
test
pushf
ins
or
outs
xor
(bad)
bnd
test
mov
aaa
jge
xchg
je
dec
ret
mov
fistp
jmp
xchg
adc
sbb
call
rol
jne
fwait
call
ds
pop
sbb
inc
ffreep
mov
in
repz
cmp
rcr
inc
mov
je
(bad)
sbb
imul
aas
and
mov
pusha
aaa
xchg
inc
shl
sbb
aad
xlat
fisubr
pop
push
pop
ds
or
cwde
or
jne
popa
ins
cdq
cmp
(bad)
mov
pop
push
sub
ret
loope
ror
mov
test
je
dec
test
inc
imul
adc
shl
shl
or
jmp
(bad)
cmc
in
cmp
in
sub
scas
dec
mov
ins
test
in
add
popf
dec
loopne
adc
or
imul
xchg
xchg
mov
cs
fs
or
xor
shr
(bad)
adc
test
dec
rcr
sub
ds
and
sbb
jns
lds
mov
call
jmp
rcl
mov
mov
(bad)
or
xchg
cmp
test
jmp
js
sbb
mov
pop
cmps
push
je
add
and
push
nop
ins
mov
inc
(bad)
fbld
cmp
and
add
jmp
scas
arpl
xlat
cpuid
sub
sub
cmps
out
push
xchg
popf
pop
jae
sbb
int
imul
pinsrw
or
movs
les
xchg
inc
cmp
nop
xor
dec
cmp
jbe
les
jno
ror
retf
xlat
shr
cmps
adc
pop
pushf
jo
lods
stos
popf
xchg
adc
pop
div
xor
mov
rol
ins
dec
jp
clc
adc
test
and
out
push
xor
jp
in
sub
(bad)
enter
push
mov
push
fs
xchg
inc
sti
loope
jge
outs
jmp
fcomp
jmp
icebp
add
retf
hlt
jl
fidivr
adc
cmps
or
pop
push
mov
out
jno
les
push
mov
div
lock
inc
jmp
cwde
adc
mov
or
mov
sub
ja
sbb
push
pop
gs
cs
dec
ja
sub
adc
ins
das
xchg
mov
xor
jmp
ret
retf
inc
or
push
in
outs
adc
and
int
push
mov
or
adc
push
sti
mov
sub
movs
mov
(bad)
cld
cld
retf
das
or
enter
(bad)
pop
rol
lahf
nop
enter
inc
mov
jns
cmc
mov
icebp
push
jno
test
dec
sbb
leave
pop
inc
test
dec
out
pop
push
jb
loope
out
mov
stos
in
jge
sub
popf
mov
cwde
xor
mov
push
cmc
aad
es
pushf
pusha
test
sub
out
rcl
add
stc
or
outs
cdq
cmovg
mov
je
lods
in
jno
hlt
shl
and
mov
mov
outs
test
mov
and
inc
sbb
fisttp
repnz
out
cmps
sbb
int3
out
(bad)
sti
adc
es
fidivr
and
mov
or
push
adc
xchg
mov
jns
or
js
sbb
popf
add
push
iret
dec
add
adc
sti
ins
aaa
cmc
pop
sub
ss
(bad)
in
dec
ss
movs
push
pop
loope
dec
out
fimul
jl
pop
mov
stc
xchg
adc
out
and
or
mov
adc
adc
sar
test
test
outs
call
fild
xor
lds
(bad)
hlt
test
pop
inc
cwde
fcomp
jle
retf
mov
call
lahf
(bad)
in
imul
out
jmp
push
mov
das
jo
lds
dec
outs
fstp
mov
mov
(bad)
or
xchg
and
mov
push
jge
push
mov
retf
push
shl
fs
pop
add
mov
jbe
outs
int3
aad
ins
outs
push
out
xchg
fwait
pop
lods
gs
push
(bad)
lea
mov
cwde
lods
(bad)
sub
icebp
clc
add
push
mov
(bad)
mov
inc
jne
fwait
and
(bad)
mov
fistp
es
fcmovbe
xchg
inc
xor
sti
add
neg
(bad)
in
jmp
inc
hlt
neg
es
vcvtsd2si
jbe
(bad)
mov
fnstsw
pop
fisttp
neg
mov
repz
xor
leave
dec
(bad)
loopne
mov
or
(bad)
in
add
ret
mov
movs
sub
cmp
cmp
mov
pop
sahf
stos
or
xor
stos
fcomp
jecxz
retf
mov
fld
mov
push
xchg
sbb
(bad)
sbb
adc
outs
inc
pop
jne
fadd
leave
xchg
(bad)
push
dec
mov
mov
repnz
xchg
leave
repz
xchg
push
mov
stc
ja
or
sbb
cli
pop
fild
fs
(bad)
(bad)
add
fcom
test
push
add
out
push
hlt
(bad)
mov
(bad)
out
test
jbe
and
and
xor
gs
cmp
inc
ds
mov
jb
push
push
add
or
jb
mov
pop
std
jnp
std
push
loopne
cmc
call
sbb
icebp
pop
cmp
(bad)
push
iret
pop
sub
pushf
adc
aaa
in
into
sub
push
push
pop
stos
mov
fisttp
hlt
jmp
jmp
mov
js
push
push
sbb
cmp
jns
icebp
nop
pop
dec
movs
movs
sbb
xchg
push
stos
sub
push
(bad)
call
xchg
scas
add
lock
sub
add
sub
stos
cmp
(bad)
or
mov
xchg
cmp
mov
movs
out
out
mov
add
push
mov
out
cmp
mov
aas
je
in
or
sahf
mov
mov
scas
out
scas
aas
stc
div
inc
or
xchg
pop
mov
fidivr
ds
lods
ss
retf
imul
inc
shl
in
add
xchg
mov
pusha
test
movs
push
test
das
out
adc
and
and
ss
imul
xchg
xor
sbb
out
in
jl
loopne
adc
jecxz
mov
adc
push
fidivr
push
enter
rcl
cmc
push
xor
add
fsubr
shr
ss
aad
das
sbb
pop
in
xchg
push
sbb
aas
sub
fist
and
(bad)
adc
cwde
aaa
push
fidivr
outs
scas
push
jo
mov
pop
cmc
enter
jns
mov
jne
out
push
bound
out
nop
mov
repz
mov
mov
push
pusha
ins
adc
das
dec
mov
call
push
into
fwait
lock
call
mov
in
test
idiv
in
inc
jnp
lods
cdq
cmp
push
stos
retf
sbb
xchg
jb
out
aam
repz
into
push
ins
or
inc
xchg
adc
mov
dec
add
and
pusha
out
fs
bound
out
(bad)
into
mov
arpl
mul
dec
mov
dec
inc
fsin
fdiv
add
data16
cmp
cmp
pop
fs
cmp
add
fmulp
dec
imul
xor
ins
pop
xchg
mov
into
xchg
fidiv
enter
adc
dec
pop
or
or
jmp
(bad)
faddp
das
cmp
pusha
out
xchg
push
pop
push
ret
scas
lods
shl
xchg
xchg
jle
sub
std
dec
add
call
int3
mov
fisubr
pop
and
aam
bound
pusha
aam
mov
inc
xchg
int
push
movs
xchg
adc
jnp
imul
inc
fidivr
loope
ret
inc
xchg
mov
(bad)
nop
or
(bad)
adc
mov
stos
movs
inc
or
xchg
inc
loope
cmc
les
scas
jmp
pop
(bad)
or
iret
(bad)
daa
dec
inc
out
enter
popa
aad
arpl
xor
sbb
imul
aam
mov
loop
xor
add
jle
adc
sub
jae
shl
cli
test
push
xchg
shr
retf
fs
ret
jp
mov
sar
fcom
test
bnd
mov
pop
fsub
movs
jp
xlat
mov
lahf
test
test
cmps
mov
(bad)
in
(bad)
adc
fstp
pop
or
pop
test
loop
mov
mov
mov
dec
enter
rol
push
pop
cmps
popa
add
ret
xor
das
fwait
cmp
dec
mov
repz
in
add
adc
fdiv
or
inc
leave
mov
dec
ins
mov
rcr
mov
mov
and
mov
inc
xor
das
sub
mov
adc
sbb
sti
ficomp
ret
mov
mov
or
ret
jne
mov
movs
aas
add
mov
mov
ss
stos
and
xchg
retf
cld
inc
cmp
jmp
and
fs
sbb
sub
pop
idiv
and
aaa
mov
mov
cmc
enter
jno
fimul
dec
mov
das
dec
(bad)
push
loope
mov
sbb
mov
mov
daa
pop
ficom
(bad)
xchg
out
in
or
jnp
dec
scas
and
ins
inc
pusha
data16
mov
jb
dec
mov
add
adc
add
int
push
mov
hlt
ja
movs
into
push
jp
loopne
and
repz
das
dec
jb
cwde
je
jmp
test
clc
cmps
push
cmps
add
out
cdq
xchg
and
push
(bad)
div
sub
das
movs
adc
mov
cmp
stc
js
jne
imul
adc
cmc
imul
jno
in
sti
fcom
pop
sub
retf
aaa
mov
xlat
mov
iret
or
loop
mov
call
xchg
dec
xchg
cli
mov
sub
fcomp
xchg
mov
icebp
push
jo
and
sbb
jb
sub
neg
xor
shr
and
and
jo
gs
xchg
sub
mov
push
lahf
idiv
cmc
lods
pop
ja
fbld
xchg
in
sbb
call
push
mov
jmp
fs
jmp
rcl
daa
jno
pop
loopne
inc
dec
xor
jge
cmp
push
mov
ss
int
xor
shl
push
in
cmp
jae
xor
std
mov
inc
inc
aad
stc
add
pop
aad
loop
test
lods
imul
daa
mov
pop
mov
into
sti
loope
mov
xor
scas
jno
sub
xor
cli
pusha
shl
icebp
mul
ror
and
lods
rcr
ret
addr16
aas
xchg
packuswb
cdq
xor
adc
adc
mov
sbb
mov
pushf
cmp
mov
mov
loope
fidivr
cmp
loope
jmp
dec
hlt
mov
test
jo
add
or
cli
retf
aaa
lods
add
sub
mov
adc
mov
mov
les
movs
lock
adc
cwde
mul
loope
or
push
and
sub
in
sub
jns
mov
or
push
cmp
test
mov
fidivr
loope
sahf
xchg
rcr
sbb
arpl
xor
jae
fimul
out
push
shr
push
cwde
loop
(bad)
or
in
push
add
dec
xor
daa
ss
addr16
sub
jge
and
stos
icebp
mov
and
cwde
adc
retf
jp
cmp
gs
in
dec
mov
leave
or
push
stos
inc
popa
in
jmp
jl
jnp
push
in
push
je
add
jp
nop
lds
cmp
and
mov
aam
popa
mov
test
jne
rcr
in
and
jmp
dec
xor
mov
retf
pop
daa
jg
pop
loopne
pop
mov
mov
jnp
push
inc
stos
or
pop
into
rol
mov
pop
test
xchg
gs
sbb
mov
test
mov
stos
cmp
dec
nop
mov
outs
mov
mov
ins
inc
cmp
pop
xchg
imul
mov
enter
or
ins
cmp
mov
loop
xchg
xchg
(bad)
jmp
shl
mov
cwde
sub
push
movsx
lahf
pop
sbb
aas
in
add
out
jns
nop
scas
dec
mov
push
pusha
mov
repz
lods
sub
sbb
fnstsw
ds
xor
cmps
retf
sub
cmp
outs
sub
loop
ss
cld
imul
stc
and
sub
cmp
sahf
inc
je
push
(bad)
cmp
popf
das
call
inc
push
out
ja
sahf
jmp
sbb
nop
mov
xchg
js
ja
sub
dec
jl
mov
cmp
jp
inc
mov
cmp
sar
adc
mov
rcr
pushf
test
loop
push
jo
(bad)
movs
hlt
mov
dec
fsin
fnstenv
adc
aam
scas
ins
mov
inc
out
or
mov
xor
inc
sar
fldenv
fbstp
push
sbb
test
lock
in
pop
cmps
mov
rol
outs
cli
daa
jge
lea
pop
dec
loopne
pop
movs
das
das
inc
xchg
and
cmp
call
dec
ret
bound
add
imul
jno
sar
scas
add
ja
push
in
xlat
add
movs
push
jb
push
and
mov
push
scas
mov
pushf
scas
pop
xchg
adc
test
push
adc
adc
ins
push
pop
jo
ds
fcom
mov
cwde
jbe
push
data16
push
cmp
mov
(bad)
cmp
aad
mov
les
das
call
fistp
lods
pop
ret
test
mov
mov
retf
out
mov
fistp
and
cmp
ss
xor
adc
jnp
add
fs
cmp
daa
stos
popf
or
fwait
and
xchg
aad
cli
jnp
icebp
dec
pop
loope
cmp
push
aaa
cmp
cmps
adc
sub
push
fs
adc
inc
push
call
cld
sbb
and
call
out
sub
int
xchg
leave
dec
inc
jnp
mov
and
xchg
inc
pop
push
pushf
pop
inc
aaa
push
ins
sub
sbb
imul
push
push
sbb
mov
stc
lods
push
mov
dec
jle
fisttp
push
movzx
sbb
out
(bad)
xchg
std
sub
loop
addr16
lea
cmp
add
mov
js
jecxz
gs
gs
gs
(bad)
sbb
loope
loopne
mov
sar
ss
test
jae
mov
sahf
add
outs
mov
xchg
sub
out
sbb
rol
xor
lea
jg
dec
je
sub
fs
cmp
xchg
jo
mov
(bad)
(bad)
faddp
fwait
sub
gs
jge
fcom
in
outs
jle
add
in
dec
add
test
xchg
enter
stos
or
dec
jmp
push
das
call
cmps
jg
outs
jne
mov
cmp
dec
fmul
inc
add
imul
mov
aaa
mov
mov
mov
int
dec
jb
push
pop
xor
xchg
fmulp
mov
movs
std
retf
jmp
adc
xchg
cld
adc
xchg
mov
popa
dec
adc
dec
xor
(bad)
mov
aad
out
(bad)
aad
jbe
fs
(bad)
jmp
sbb
pop
ror
rol
pop
stos
scas
xchg
sbb
stc
mov
dec
and
add
push
out
xchg
outs
jae
fwait
bound
mov
xor
idiv
mov
mov
neg
push
dec
cmc
sub
pop
fnstenv
inc
dec
and
xor
(bad)
xor
loop
popa
aas
scas
jne
enter
jmp
fistp
push
cmp
inc
and
xchg
mov
pop
clts
or
test
lahf
hlt
rol
fidiv
xchg
repnz
(bad)
(bad)
stos
jmp
data16
push
movs
out
push
(bad)
movs
es
dec
or
mov
in
aad
adc
cmp
xchg
inc
and
jnp
fsubr
ja
(bad)
xchg
test
sub
rol
dec
call
adc
enter
xchg
call
retf
xor
jae
mov
out
and
xchg
push
mov
push
mov
loope
lods
adc
(bad)
pop
mov
(bad)
jae
and
dec
cwde
call
lock
arpl
loop
add
xor
jno
lea
inc
xchg
lods
cmp
fst
sub
adc
push
and
call
xor
add
std
jno
mov
pop
ss
mov
lock
int3
lods
adc
and
push
pop
pop
fnstcw
cwde
int3
pop
dec
repnz
shl
push
jmp
and
lods
rol
mov
mov
jno
xor
and
cs
mov
inc
cmp
pop
jo
stc
pushf
mov
fist
sbb
jmp
dec
pop
mov
jl
repz
test
mov
outs
std
pop
outs
fsubr
pop
aam
stc
daa
adc
adc
popa
sahf
and
dec
mov
ret
pop
xlat
ja
sti
sub
iret
push
add
(bad)
xor
and
(bad)
in
or
and
push
js
in
aam
loope
mov
push
cmp
xchg
cdq
out
mov
int3
adc
jnp
cmp
test
cmp
iret
int3
cmp
arpl
mov
xchg
dec
call
jne
or
repnz
dec
cmc
loope
js
outs
sbb
aad
or
jle
pusha
pop
gs
std
stos
mov
push
arpl
dec
loopne
sub
(bad)
nop
xchg
sbb
xor
aam
in
xchg
cmp
xor
cmc
mov
test
ror
leave
inc
mov
push
out
adc
mov
or
repz
mov
add
nop
daa
inc
bound
dec
fmul
lods
hlt
data16
jns
cli
mov
out
rol
jp
push
call
dec
xchg
movs
dec
add
push
jle
cmp
xchg
jg
pusha
jbe
mov
aaa
hlt
aaa
lds
out
pusha
mov
movs
xor
or
cmp
jne
adc
fmulp
into
dec
pop
xor
es
das
and
fwait
mov
ds
in
mov
mov
pop
test
jnp
fnstsw
out
frstor
cmps
ficom
jle
cmp
dec
out
js
not
jnp
inc
inc
pop
sub
pop
pop
aas
pop
iret
stc
call
xchg
ret
loope
mov
mov
pop
inc
call
push
push
adc
aad
dec
mov
mov
repnz
cld
cmp
sbb
in
sar
sbb
adc
imul
daa
or
(bad)
xchg
leave
in
mov
mov
dec
push
fcomi
cmc
mov
icebp
xlat
add
push
in
aas
sub
call
popa
aaa
add
mov
xchg
mov
and
arpl
cmp
ror
rol
call
xchg
dec
xor
inc
or
cmc
cmp
or
out
test
aas
ret
sbb
(bad)
sbb
and
xor
(bad)
cld
jmp
adc
cmp
daa
sbb
mov
mov
xor
and
clc
cmps
inc
inc
cmp
and
sbb
xlat
xor
pusha
ins
jns
jo
push
mov
lock
mov
add
nop
retf
cmp
adc
mov
push
pop
mov
stos
sbb
pop
cmp
gs
sub
shl
pop
or
pop
ss
dec
jl
jbe
pop
or
fdivr
dec
movs
mov
cli
rcl
sub
pop
shr
nop
mov
not
adc
adc
in
ror
sbb
mov
sub
push
adc
outs
out
cmp
fcmove
scas
sub
and
shl
mov
fwait
xor
jp
mov
inc
or
ret
call
push
(bad)
imul
div
in
inc
xchg
or
shl
add
cs
cmp
repnz
shl
in
inc
loope
dec
sbb
push
mov
in
int3
nop
mov
mov
fst
iret
lahf
and
pop
shl
aad
retf
inc
repnz
popa
retf
inc
dec
mov
sti
push
aas
ds
jne
fidiv
pop
add
fistp
popa
addr16
out
ins
outs
sbb
push
pop
fwait
xchg
lahf
icebp
mov
sar
xchg
sbb
fwait
cmp
call
sbb
aaa
fadd
enter
imul
sub
pop
mov
adc
mov
in
aas
adc
jne
mov
cmps
popf
xchg
add
xchg
hlt
repnz
add
sub
ret
jg
test
dec
int3
mov
or
pop
inc
push
lea
inc
in
les
and
enter
pushf
test
jle
lds
enter
mov
out
mov
cmp
add
push
jno
sti
out
sbb
into
imul
shl
mov
jae
jnp
adc
lods
push
dec
pop
retf
scas
cmps
leave
or
pop
or
lahf
jae
push
jg
pop
lahf
mov
mov
fsub
call
lods
cmc
jnp
xor
jnp
retf
push
(bad)
int3
neg
hlt
cmp
and
cmc
pop
and
pop
rol
cmc
js
cmps
mov
xlat
mov
je
pop
sbb
test
dec
ins
rol
sbb
or
test
and
test
hlt
mov
in
mov
jne
movs
xor
loopne
mov
loope
cmp
arpl
add
mov
(bad)
mov
xchg
aaa
cmp
push
xlat
add
adc
dec
aam
aam
xchg
push
jle
rol
stos
inc
test
arpl
cld
inc
(bad)
imul
sub
cmp
or
and
dec
mov
movs
pop
cmp
ds
out
push
idiv
fisubr
(bad)
cmp
mov
cmp
imul
jno
loope
adc
cdq
mov
(bad)
push
out
fild
adc
cs
adc
es
das
test
gs
das
or
xchg
mov
stos
ins
jle
inc
in
adc
in
data16
xor
jle
test
xchg
div
in
test
aam
aaa
(bad)
fbstp
lods
add
bound
sar
frstor
sbb
shl
rol
xchg
(bad)
retf
xchg
loope
jne
mov
dec
sbb
xchg
cmp
inc
lds
jle
sub
(bad)
adc
jg
adc
add
mov
int
sti
jecxz
in
shl
mov
ret
push
loop
push
push
sub
sbb
in
scas
jge
add
adc
adc
test
cmps
jae
movs
jo
push
sub
inc
sub
push
fld
or
push
pusha
mov
push
dec
ds
pop
push
popa
xor
cdq
frstor
ret
xor
push
inc
movs
jg
out
mov
cli
jmp
and
retf
pop
sub
add
pop
jmp
and
cmp
mov
adc
or
lahf
test
retf
mov
movs
add
cmps
pop
out
jp
outs
cwde
pop
sbb
pop
int
and
ret
(bad)
add
icebp
adc
cwde
aas
retf
fnstcw
push
pop
push
pop
mov
aas
pop
inc
xor
push
jns
sar
in
stc
jp
nop
pop
hlt
mov
dec
or
gs
or
lahf
and
and
loop
nop
ds
cdq
jns
sub
imul
mov
in
not
jns
mov
or
ret
lods
pop
pushf
imul
jmp
xchg
inc
mov
xor
and
push
add
mov
sar
jle
outs
jle
fwait
cmps
arpl
mov
mov
loope
call
int3
or
add
cmps
repnz
mov
xor
stos
jbe
ret
popa
mov
cmp
js
loope
call
xchg
imul
ror
in
pop
bound
add
dec
inc
cmp
sbb
dec
iret
popf
mov
xor
(bad)
scas
push
cmc
call
mov
cmp
rcl
mov
and
fidiv
inc
enter
mov
es
inc
loopne
bound
xchg
xchg
and
out
mov
adc
sar
enter
jl
imul
inc
into
xchg
(bad)
int
frstpm(287
mov
mov
push
jno
fidiv
adc
out
push
mov
js
xchg
imul
cli
xchg
inc
inc
push
ret
pushf
or
scas
add
sbb
xor
mov
mov
out
push
hlt
movs
ret
xor
xchg
add
movs
mov
out
adc
sbb
outs
mov
push
in
fs
(bad)
sti
lods
dec
mov
lods
sbb
scas
in
movs
gs
cmp
ror
nop
push
mov
pushf
dec
cli
and
jbe
mov
cmp
push
test
sub
add
fabs
sbb
fcom
(bad)
mov
cmps
je
retf
sub
mov
addr16
push
movs
mov
cmps
mov
mov
add
clc
push
icebp
jge
icebp
push
lea
mov
push
shl
test
mov
cld
lock
scas
addr16
fdivr
es
jno
cmp
mov
pop
mov
loopne
add
(bad)
test
lods
xor
inc
add
repnz
arpl
rol
mov
lods
mov
jae
dec
sub
loopne
pop
dec
pop
add
add
inc
es
sbb
call
xchg
mov
dec
and
add
inc
cdq
cmc
or
je
pop
jne
or
outs
push
or
jmp
(bad)
scas
add
mov
in
adc
push
mov
ds
enter
call
stos
push
pop
aam
add
or
mov
or
lock
mov
int3
xchg
mov
xchg
mov
repnz
sub
data16
pop
adc
sbb
mov
fisttp
sbb
or
cmps
ror
dec
mov
fdiv
movs
jbe
rol
nop
cli
push
stos
out
pop
scas
add
movs
loope
jno
fbld
mov
sbb
cmp
idiv
jno
xor
push
mov
xchg
retf
cli
and
jns
enter
sbb
shl
or
outs
ja
cmp
xchg
jg
bts
fdivr
shl
ss
leave
cmp
adc
cmps
fadd
pop
(bad)
xchg
jecxz
mov
sub
test
sbb
gs
pop
mov
call
jo
sti
ja
rcr
adc
cdq
loopne
xchg
mov
in
idiv
sub
fiadd
rol
add
adc
dec
into
js
arpl
mov
add
cld
(bad)
test
cld
sbb
push
or
mov
push
scas
dec
jg
iret
aad
test
jmp
jmp
jns
in
cli
in
cwde
adc
inc
xor
int3
fidivr
lahf
jae
in
push
mov
js
rcr
pop
or
cwde
xchg
jp
movs
or
dec
sbb
and
fs
sub
daa
add
mov
xchg
js
cmp
fcmovu
hlt
mov
gs
daa
int
pop
pop
sar
test
(bad)
stos
inc
fnsave
adc
fdivr
lds
popf
lahf
lods
arpl
sub
jno
and
and
xchg
pop
dec
(bad)
adc
mov
icebp
mov
in
iret
sbb
push
xor
enter
mov
xchg
xchg
aam
adc
dec
sub
ds
or
add
(bad)
out
cs
push
lahf
or
test
fnstcw
leave
jae
sub
mov
mov
xor
push
mov
push
mov
ret
fwait
hlt
stc
adc
lods
mov
pop
jae
mov
fisub
inc
push
iret
cmps
cs
(bad)
xchg
shld
lds
pop
inc
fs
add
xchg
push
fiadd
add
sbb
or
test
inc
cmp
mov
dec
adc
rcr
rcl
(bad)
adc
xlat
pop
sar
gs
rcl
ss
test
mov
and
repz
loope
clc
jl
xchg
or
loopne
push
test
push
rcr
add
cmp
pop
jmp
inc
push
gs
cmp
ins
repz
and
sbb
ficom
jnp
push
and
cmp
jno
aas
xchg
sar
xor
movs
dec
mov
cmp
out
jg
push
and
(bad)
pushf
mov
add
mov
mov
or
das
out
ret
pop
dec
mov
push
xchg
or
clc
mov
neg
stos
popa
std
inc
fsub
ins
sub
mov
fsubp
mul
push
xchg
cs
aaa
pop
and
cmps
lea
mov
movs
les
scas
mov
sbb
inc
outs
pop
xchg
fwait
inc
mov
push
(bad)
pop
out
pop
cmp
sbb
dec
xor
cmp
int
neg
pop
stos
enter
popf
cmp
jle
aad
scas
test
inc
inc
sbb
cmp
lds
addr16
mov
imul
nop
sub
adc
cmc
cmp
xor
aas
mov
or
xchg
sbb
dec
and
mov
xchg
cdq
inc
push
sahf
sbb
jbe
jle
into
movs
mov
mov
pop
mov
pop
pusha
adc
jecxz
pop
add
repz
leave
sub
xchg
dec
scas
mov
in
out
je
push
ret
xchg
(bad)
push
mov
xor
or
ret
out
daa
sub
imul
inc
mov
leave
xchg
mov
jb
add
jbe
dec
mov
sbb
imul
sahf
aas
pop
cmp
add
cmp
push
pop
gs
scas
(bad)
cmp
jnp
arpl
jns
je
clc
arpl
test
imul
and
hlt
xchg
dec
mov
pop
adc
shl
cmp
scas
mov
test
bound
push
mov
push
xchg
movs
mov
lahf
and
push
ret
pop
jp
in
and
mov
jnp
inc
or
and
icebp
and
xor
xchg
sub
cmp
add
sbb
mov
call
and
pop
mov
xchg
int
jg
popa
push
ja
xchg
push
loope
push
and
jns
jecxz
jnp
push
sar
cdq
adc
dec
mov
mov
loop
cld
sub
stc
sub
sahf
or
add
cmp
adc
fwait
inc
adc
scas
call
push
mov
xchg
lahf
int
sbb
icebp
sbb
xor
and
pop
mov
xlat
call
in
aam
xchg
addr16
fdiv
and
add
xor
ret
mov
cmp
dec
inc
ins
cmp
cmps
pushf
cdq
or
leave
mov
iret
shr
les
nop
pop
cmp
sar
sub
mov
inc
push
ins
data16
add
jo
aas
add
cli
sub
inc
jnp
popa
lods
mov
push
cmc
mov
arpl
push
mov
push
aad
scas
adc
sub
add
cmp
inc
out
push
push
test
jp
pop
cmp
xchg
inc
push
add
dec
adc
add
je
or
not
stos
adc
ret
sbb
rdmsr
add
cmp
xor
in
es
pop
fistp
xor
es
fsubr
cmp
gs
add
in
and
add
cmps
sbb
test
inc
into
pushf
(bad)
cmc
(bad)
fwait
jg
pop
mov
or
push
sub
scas
out
mov
xor
test
jo
cwde
retf
dec
push
repz
push
in
dec
jne
loope
add
xchg
dec
mov
icebp
popa
add
mov
pop
ins
dec
retf
popf
xchg
cmp
and
je
shl
js
aad
mov
cli
pop
idiv
xor
retf
sub
ret
push
adc
pop
push
or
pushf
ret
push
mov
fnstcw
call
shl
imul
dec
les
or
enter
repnz
into
or
pop
ins
mov
test
dec
mov
outs
sbb
add
pop
pusha
pop
adc
mov
xor
jne
and
sub
or
or
iret
pop
pop
cld
adc
not
mov
dec
rcr
(bad)
loop
mov
mov
sbb
jne
test
jp
sub
stos
ret
push
dec
(bad)
adc
xchg
popa
dec
addr16
dec
sub
je
fld1
leave
jne
fistp
loope
(bad)
outs
mov
sahf
xor
mov
xchg
lahf
push
fsubr
data16
iret
lods
dec
push
loop
mov
shr
cmp
xor
dec
enter
and
push
(bad)
mov
push
out
pushf
xchg
add
repz
int
adc
mov
sbb
and
loope
and
jge
icebp
inc
mov
sbb
fdiv
stos
stos
jb
int3
pop
(bad)
push
data16
sbb
and
sub
or
in
popa
shl
imul
retf
xchg
(bad)
iret
lods
scas
jp
popa
mov
fmul
pop
sub
in
inc
jno
sahf
or
mov
imul
xchg
dec
xchg
enter
outs
hlt
outs
pop
mov
pop
mov
lea
cmp
fild
loop
and
out
sub
jo
jmp
sahf
push
pop
cld
out
mov
sbb
(bad)
push
ja
lods
pop
popf
test
jp
cs
pop
and
rcl
mov
xlat
mov
mov
add
in
xchg
xor
add
outs
ret
adc
leave
jg
mov
push
xchg
jle
xchg
popf
out
sbb
(bad)
ficom
xor
loopne
mov
inc
repnz
pop
pop
xor
fs
mov
sbb
pusha
xchg
je
push
out
ins
pop
sub
pop
jge
ins
add
cmp
push
mov
fadd
fwait
xor
scas
stos
xchg
fwait
jmp
and
adc
std
mov
push
icebp
sbb
in
and
push
dec
lods
xchg
mov
std
dec
sub
fidivr
cmps
stos
xchg
lock
aad
(bad)
mov
repz
xor
ja
lods
jno
loope
dec
ret
xchg
js
fbstp
cmp
push
in
stc
aas
xor
push
push
dec
jno
movs
imul
pop
std
xchg
int3
das
loop
xor
cld
xchg
pusha
mov
sbb
and
pop
into
xchg
mov
es
jnp
add
mov
mov
mov
int
push
stos
sub
imul
jnp
mov
fisubr
push
cli
lea
pop
sub
inc
or
xor
or
or
dec
pop
push
push
push
ins
cmp
inc
and
jge
mov
mov
or
mov
test
inc
out
sub
icebp
and
mov
mov
lahf
ror
sbb
adc
rcr
in
test
iret
jns
dec
(bad)
int
dec
mov
dec
xor
test
popf
jmp
jns
ss
test
mov
pop
jle
mov
cmps
std
out
adc
je
sbb
fldcw
(bad)
gs
inc
mov
neg
mov
cli
popf
cld
out
(bad)
fld
jmp
push
cs
xchg
sbb
(bad)
push
fcmove
and
pop
xor
or
sti
in
pusha
mov
sub
jge
sbb
popf
ret
daa
jb
push
push
repnz
popa
add
or
pop
sub
mov
inc
enter
retf
xchg
in
mov
xchg
mov
sahf
xor
sbb
icebp
sti
add
or
ins
mov
pop
popf
bound
retf
inc
cmp
mov
pop
push
loopne
jecxz
call
xchg
imul
mov
adc
test
int
xlat
movs
int
jno
test
and
mov
sub
stos
add
and
das
push
cs
addr16
cli
mov
fisubr
xchg
(bad)
sahf
cmp
mov
outs
and
xchg
push
jo
ficomp
adc
sbb
(bad)
inc
jne
add
aam
addr16
inc
mov
push
push
inc
and
xchg
xchg
inc
mov
mov
adc
jno
out
mov
aad
inc
ss
mov
ror
ins
sahf
lods
adc
push
or
fbld
pop
popf
out
sbb
out
and
xlat
pusha
cmp
fdiv
test
mov
inc
sahf
pop
xor
div
retf
jmp
sub
inc
xor
xor
add
xlat
ss
nop
scas
aam
push
jle
pop
push
cmps
mov
inc
mov
stc
ret
cli
or
mov
dec
imul
inc
sub
cmc
mov
fist
add
in
mov
rcr
push
enter
and
xor
test
adc
je
adc
mov
dec
nop
cdq
icebp
stos
push
pop
ins
mov
push
aad
mov
loope
and
mov
cmc
inc
sar
cmp
movs
iret
(bad)
inc
push
fcmovnu
push
or
dec
data16
hlt
enter
and
dec
das
cli
push
mov
(bad)
push
test
(bad)
call
mov
enter
lds
mov
adc
xchg
mov
mov
pop
cdq
pusha
ins
dec
lahf
jns
push
sbb
in
sbb
fcomp
push
pop
retf
ins
mov
xchg
cld
inc
or
lods
and
mov
pop
in
xchg
movs
out
outs
adc
mov
inc
sub
xor
stos
mov
pop
jbe
ret
inc
cld
jg
inc
scas
mov
and
ror
pop
es
sub
dec
xchg
pushf
pop
stos
adc
jb
xor
test
cmp
jbe
es
mov
and
mov
xor
cmp
fsubr
xchg
in
cwde
dec
jl
hlt
adc
cmp
push
jo
xchg
mov
outs
mov
mov
loope
rcr
jns
mov
shl
in
(bad)
sbb
mov
fild
pushf
bound
add
push
sub
scas
mov
push
mov
and
movs
retf
stos
mov
fnstsw
jl
pop
push
xor
inc
inc
test
sahf
fstp
cmp
cli
mov
sub
arpl
cdq
leave
inc
dec
nop
dec
adc
dec
call
xchg
pop
imul
xchg
mov
(bad)
sbb
ret
pop
mov
jmp
sbb
push
add
pop
sbb
jo
mov
or
xor
jo
out
lahf
sub
cwde
stos
jbe
pop
sub
dec
sahf
push
jmp
out
lock
pop
adc
fistp
out
shr
mov
cmp
(bad)
stos
adc
mov
dec
sub
sub
or
into
dec
leave
jae
xchg
jno
mov
popa
xchg
jge
in
sbb
jnp
cmp
dec
or
inc
mov
fmul
popf
mov
xor
retf
inc
mov
mov
xor
or
push
out
xor
sbb
xor
push
test
and
dec
outs
jo
push
shl
push
or
pop
mov
xchg
xchg
lea
mov
popa
or
dec
or
out
and
and
xchg
std
fst
data16
scas
mov
mov
inc
(bad)
out
inc
jnp
jle
xchg
ins
pop
xchg
cmps
test
mov
ret
or
dec
cld
fcmovnu
fimul
ss
push
pop
in
les
mov
std
das
adc
cmp
ret
stc
lods
mov
ret
cmp
imul
(bad)
outs
adc
cmc
(bad)
jnp
(bad)
aad
lods
aad
stc
push
ja
les
jo
pop
cmp
fucompp
and
mov
push
push
or
shl
jb
or
inc
retf
sbb
lods
add
test
aas
ret
sbb
sbb
fimul
dec
mov
fistp
daa
jmp
or
push
lods
xor
cmp
sub
mov
push
jb
lea
fsub
(bad)
lahf
xchg
jmp
ds
cmp
mov
jnp
idiv
or
ja
fwait
lahf
jno
ss
xchg
inc
cld
push
leave
pusha
daa
sub
xor
bnd
pop
xchg
mov
adc
dec
cmp
ss
sub
int
adc
dec
outs
test
pop
iret
jp
xchg
dec
hlt
popa
out
imul
jnp
xchg
loop
dec
retf
mov
sbb
ja
mov
jle
pop
test
and
(bad)
fild
aas
lahf
shr
test
xlat
push
lock
xor
int
mov
out
pop
(bad)
pushf
adc
dec
lahf
pop
mov
jp
aad
cmp
jge
mov
imul
fmul
rcl
popa
sub
or
adc
push
fisub
push
mov
xchg
mov
cs
ja
sbb
lock
imul
sbb
mov
jl
call
frstor
sbb
mov
adc
sub
cld
xor
stos
adc
movs
scas
xor
mov
mov
mov
push
jb
push
lock
sti
or
mov
sub
int3
js
fld1
movs
in
adc
hlt
mov
clc
or
fimul
leave
jne
pop
xor
xor
sbb
out
mov
ins
(bad)
pop
sbb
div
enter
pusha
lea
mov
in
mov
or
shr
adc
enter
pusha
jae
mov
sar
cs
adc
fiadd
and
ss
sub
lods
test
popf
pop
pop
jae
fdiv
dec
jle
mov
push
jecxz
jne
inc
(bad)
lea
xor
les
xchg
popf
imul
lods
popf
dec
xor
add
daa
jmp
out
dec
xchg
add
sub
xor
adc
or
outs
xchg
lods
add
retf
mov
sbb
adc
mov
mov
mov
adc
inc
jl
and
xor
dec
fs
add
inc
sub
aas
xor
pop
imul
mov
cmp
fisttp
push
repz
leave
pop
and
mov
cmp
mov
movs
pop
out
popa
shr
and
out
adc
inc
dec
fisttp
cmp
cmp
test
imul
pop
mov
mov
cmp
adc
jge
mov
mov
or
(bad)
int
mov
ret
jae
jl
dec
int3
cmp
push
outs
shl
nop
pop
mov
inc
xchg
adc
pop
inc
aas
cmc
cmp
jbe
add
jmp
sub
mov
and
std
inc
lahf
out
jmp
mov
iret
repz
mov
int
xor
out
add
sub
test
out
cli
popa
jmp
cmps
jne
pop
enter
xor
rcl
ret
(bad)
mov
xchg
cli
cwde
in
push
dec
pop
hlt
aas
in
aam
icebp
adc
and
adc
add
sub
dec
jmp
pop
adc
mov
inc
stos
test
loop
imul
test
or
mov
sbb
aas
std
push
sub
lods
xchg
stos
test
call
shr
cdq
push
shr
sub
je
push
stos
push
lods
mov
mov
jp
daa
push
xor
test
inc
cli
add
and
mov
mov
push
sub
mov
into
cmps
lahf
jecxz
shl
iret
or
jo
inc
lea
int
mov
add
iret
leave
pushf
ss
dec
xchg
push
std
inc
mov
lods
loopne
iret
or
addr16
ds
jae
mov
(bad)
scas
int
xchg
call
repnz
or
cmp
(bad)
out
fld
sbb
pop
int
sub
adc
mov
popf
je
shl
pop
jmp
test
pop
call
ret
add
adc
je
xor
jl
mov
nop
clc
scas
int3
(bad)
sbb
sub
int3
icebp
pop
into
adc
mov
mov
or
mov
sbb
xchg
jne
pushf
lea
xchg
stos
popf
loopne
xor
bound
sti
push
sbb
repz
addr16
dec
sbb
dec
push
xlat
das
sub
jne
inc
test
cs
rcl
cmp
push
xchg
popf
inc
or
jle
mov
shl
push
xor
test
xor
(bad)
retf
or
inc
neg
jmp
lahf
and
cmps
scas
xchg
push
xchg
call
ins
mov
jno
outs
jle
mov
cmp
jno
leave
adc
adc
xchg
stos
ficomp
push
ret
cs
xchg
hlt
push
das
call
pop
jne
push
into
xchg
sbb
lods
mov
call
aam
iret
pop
mov
test
pushf
xchg
sub
jbe
xor
dec
fcom
std
scas
dec
mov
or
cli
pop
push
(bad)
push
mov
push
ins
xchg
das
(bad)
ffree
xchg
std
cwde
and
adc
cmp
movs
mov
xor
add
idiv
jo
jmp
scas
cmc
sub
sub
jge
stos
jnp
pop
add
nop
aad
cmp
or
pop
les
iret
stos
push
jb
jl
jnp
xor
xchg
popa
sub
xchg
push
movs
test
cmp
pop
add
pop
pop
pop
test
sub
pop
add
or
fwait
cmps
test
inc
pop
dec
mov
imul
sub
stos
jg
push
jle
je
cmp
in
inc
dec
and
cmp
(bad)
in
jle
add
dec
lds
iret
pusha
mov
cmc
bound
iret
cmp
pop
add
hlt
push
push
inc
push
arpl
cmps
pop
pop
mov
shr
int
cmp
arpl
aad
cmp
xchg
sbb
dec
lds
mov
fnstsw
(bad)
(bad)
call
inc
add
mov
xlat
cmp
jbe
lock
jb
movs
cmc
mov
push
xor
and
xchg
add
cmp
fnstcw
mov
sti
out
cmc
pop
dec
(bad)
(bad)
jmp
inc
rcl
push
loop
hlt
pop
pop
and
jp
inc
das
jmp
mov
lods
sub
ja
sbb
sahf
pop
daa
xor
xor
dec
popf
xchg
inc
stos
test
repnz
gs
and
leave
xchg
lock
mov
into
ficom
call
hlt
mov
ror
cs
mov
scas
ss
stos
pop
sbb
dec
call
retf
pop
xlat
jl
inc
aas
xchg
sub
xchg
adc
into
dec
cmp
inc
adc
sti
movs
cmp
movs
out
xchg
cs
jg
push
or
test
outs
and
cmp
adc
push
mov
rol
pop
call
cmp
test
outs
clc
jmp
jb
dec
sbb
jl
xor
cmp
(bad)
xlat
aam
sub
ins
add
mov
call
fwait
ds
loop
hlt
bswap
jmp
mov
enter
cld
arpl
dec
jae
inc
dec
popa
mov
pop
(bad)
es
xor
jl
paddsw
and
in
or
jmp
adc
and
data16
xchg
out
std
jmp
mov
xor
fst
or
fadd
and
out
je
fidiv
mov
test
jb
in
aad
mov
mov
add
pop
sahf
jnp
pop
(bad)
lock
adc
mul
fdiv
les
jb
add
mov
and
dec
mov
xchg
jo
ss
sahf
cmc
addr16
jo
jae
lods
xor
push
sub
sub
sub
call
xchg
aaa
dec
in
jo
aaa
in
cwde
stc
pop
lods
jns
mov
or
or
and
sub
sub
(bad)
dec
cmps
mov
ja
inc
gs
ins
popa
imul
push
dec
add
mov
pop
push
cwde
push
pop
xchg
push
adc
xor
mov
mov
mov
adc
fst
int3
pop
shl
mov
xchg
mov
sbb
cmps
out
dec
dec
pushf
fwait
ja
pop
dec
push
jbe
scas
std
lea
xchg
sub
dec
push
xchg
jp
lock
inc
dec
retf
imul
pop
aad
into
add
mov
(bad)
test
mov
enter
cli
frstor
push
aaa
(bad)
push
xchg
sbb
push
xchg
jbe
xchg
test
repz
xor
sbb
cmps
pop
out
xor
push
shl
add
cdq
cs
add
pop
mov
mov
jl
fwait
loop
add
and
mov
adc
aas
jg
dec
jbe
inc
icebp
pusha
dec
push
test
push
and
xchg
inc
lods
jge
stc
adc
cmps
cmp
test
outs
pop
adc
sbb
xchg
clc
aas
mov
mov
out
add
in
stos
cmps
test
sbb
je
jecxz
xchg
sub
cmovl
cwde
mov
loopne
std
push
in
movs
xchg
mov
adc
gs
mov
lahf
mov
xchg
ror
idiv
dec
adc
jnp
or
or
nop
mov
jg
mov
jecxz
in
pop
in
outs
mov
cmp
retf
push
out
sbb
int
jno
dec
fnstenv
or
retf
fiadd
cwde
push
int3
jo
xor
and
push
jbe
inc
dec
mov
icebp
fidiv
xor
or
js
mov
xor
push
push
rcr
int
add
push
or
mov
push
aaa
imul
daa
xchg
jp
fsubr
iret
fwait
dec
or
addr16
lea
mov
mov
sbb
stc
dec
call
jp
or
repz
mov
add
cdq
sub
into
jmp
arpl
and
inc
stc
les
cld
stc
adc
adc
xchg
adc
pop
jl
cmps
into
ja
inc
pop
lods
pop
imul
scas
cld
xor
repz
outs
fstp
stc
outs
jge
jae
add
pusha
jp
out
xchg
add
cmps
mov
std
xchg
mov
movs
push
and
jnp
test
(bad)
mov
xchg
je
pusha
call
mov
lahf
mov
xchg
xor
dec
inc
out
mov
daa
and
popf
xor
mov
xchg
mov
jle
sahf
adc
push
jne
adc
mov
mov
fnstenv
cwde
fs
das
add
out
je
pop
cwde
add
adc
inc
stos
jmp
add
ja
cmp
pop
dec
sbb
or
add
jns
retf
cld
popf
cmovne
inc
ss
(bad)
pop
(bad)
cmp
push
movs
fsub
aas
xor
inc
rol
iret
loop
popf
out
ret
rep
std
jg
mov
jge
lea
repz
add
movs
or
and
cmp
clc
sbb
repnz
clc
outs
aas
add
cmps
xlat
cmp
das
sbb
std
int3
cmp
stc
jns
aad
jp
push
cmp
push
xor
js
std
std
add
jbe
test
inc
ins
pop
dec
mov
retf
sbb
mov
nop
adc
xchg
leave
jp
mov
outs
inc
test
not
add
imul
sbb
lds
or
into
sti
rcr
push
mov
loope
adc
jmp
int
jb
cmp
pop
xor
popf
popa
adc
icebp
or
imul
push
cmp
push
jecxz
pop
in
cli
xchg
mov
push
inc
mov
jo
shl
sub
outs
and
jne
std
jno
cmp
cmp
push
sbb
adc
in
mov
push
pop
int3
mov
cli
nop
jo
sbb
dec
pop
aad
jbe
aam
jmp
int3
fs
mov
aam
lods
or
dec
jmp
mov
aas
and
outs
imul
inc
faddp
mov
(bad)
pop
data16
xor
dec
cmp
dec
jae
mov
dec
mov
cmp
sub
int
add
in
xchg
jge
aaa
cmps
inc
mov
push
jg
mov
iret
popa
or
push
inc
fist
xor
cmp
lock
push
push
cmp
jbe
lods
mov
je
int
sbb
inc
pop
fs
mov
lock
fdiv
adc
in
and
movs
in
mov
lds
les
dec
add
dec
mov
shr
idiv
lea
int
in
xor
and
clc
les
call
retf
jae
stos
or
nop
pop
mov
and
mov
inc
ret
mov
aas
add
aas
outs
inc
dec
xor
out
pop
(bad)
(bad)
scas
sahf
sbb
call
xlat
iret
neg
cli
mov
mov
call
loop
push
xor
xchg
mov
inc
scas
cmp
adc
inc
pop
in
enter
pop
xor
mov
loope
aam
sub
xlat
cwde
fistp
stos
xchg
neg
mov
jecxz
pusha
(bad)
fimul
or
imul
fdivr
stc
test
mov
and
push
sti
jp
pop
push
xor
stos
sbb
test
xchg
test
jmp
mov
push
ja
imul
sbb
pop
add
inc
aas
fdiv
ins
push
arpl
dec
int3
(bad)
xchg
int3
stos
pop
es
sbb
cmps
test
scas
pop
sbb
(bad)
ficom
ins
push
ror
push
mov
sbb
ret
mov
retf
js
daa
imul
repnz
outs
out
call
sub
xor
or
jnp
push
pusha
mov
call
(bad)
cmps
ins
mov
icebp
jae
cmp
inc
in
or
dec
fisub
repz
pop
cmps
xor
jbe
idiv
in
add
sub
mov
movs
in
sub
neg
push
shr
mov
fmul
arpl
jbe
fsubr
in
and
xchg
pop
pop
cmp
push
pop
add
xor
lods
test
pop
and
fdivr
xchg
fstp
sbb
jmp
mov
lock
cwde
data16
dec
and
adc
sbb
scas
adc
outs
loop
and
xchg
jecxz
adc
mov
adc
scas
push
mov
ins
mov
push
cmp
movsx
mov
sbb
neg
dec
adc
scas
fisub
inc
or
frstor
mov
movs
sub
pop
or
jo
jmp
adc
and
sub
ret
lds
mov
or
mov
push
mov
leave
jae
call
pop
test
push
add
aad
scas
mov
cmps
popa
sub
sub
daa
adc
imul
retf
jecxz
fisttp
push
pop
data16
mov
aas
mov
rcl
addr16
mov
dec
cmp
cmp
call
and
mov
or
arpl
push
adc
push
xor
mov
cwde
ins
aaa
mov
dec
popf
adc
push
adc
adc
or
fst
outs
push
pop
call
and
cmp
adc
scas
ins
mov
loopne
sbb
hlt
add
jno
stc
mov
stos
jp
idiv
lock
shl
out
arpl
xor
aaa
cmp
sub
cmps
and
or
inc
mov
hlt
pusha
aad
sub
std
mov
adc
js
cmp
adc
pop
enter
pusha
jb
movs
jbe
dec
in
fucom
out
shl
jae
cwde
hlt
or
shr
mov
pop
sar
cmp
mov
shr
jmp
stc
cli
mov
pusha
neg
test
in
seta
sbb
and
push
adc
movs
xor
test
xor
aaa
dec
pop
pop
cmp
aad
dec
mov
mov
out
mov
cmp
icebp
sub
cs
jle
and
lea
fnstsw
jnp
jb
pop
mov
(bad)
inc
pop
sbb
sub
adc
jle
into
shl
leave
arpl
sub
lea
push
ret
push
cs
jle
ret
inc
sub
pop
pop
mov
or
scas
xchg
retf
(bad)
call
xchg
test
push
stos
jge
mov
(bad)
adc
mov
enter
mov
popf
aad
aam
pop
lods
mov
dec
inc
xchg
xlat
add
xor
das
pop
inc
sbb
or
sub
in
and
movs
sub
push
enter
jecxz
and
xchg
add
sub
xor
push
mov
jmp
push
stc
mov
test
pop
stc
xchg
(bad)
pop
(bad)
mov
push
mov
pop
cwde
int
(bad)
mov
and
vmread
mov
jp
cli
adc
cmp
test
xor
in
leave
jmp
mov
sub
push
dec
mov
push
(bad)
loop
lods
sub
sbb
leave
mov
dec
stos
ror
mov
jp
and
lds
push
sub
out
(bad)
push
and
ror
jp
adc
out
sub
jecxz
in
not
fnstcw
cwde
scas
pop
jmp
stos
xor
add
int
mov
fwait
pop
outs
(bad)
cdq
movs
fdivr
sbb
jl
add
sub
cs
in
aad
cmp
jo
fnsave
rcl
fisubr
pop
and
repnz
cld
popa
xchg
rcl
push
or
popa
fistp
cmp
arpl
dec
add
out
pop
cmp
mov
inc
(bad)
mov
mov
push
jecxz
sbb
dec
pop
xchg
cmp
push
cmps
mov
mov
stos
sbb
pop
ins
xlat
loope
shl
shl
pop
out
sar
jecxz
pextrw
sbb
data16
mov
scas
sub
test
rcl
sbb
aaa
imul
sahf
sbb
es
jmp
xor
mov
pop
ds
xchg
lea
mov
imul
cmp
aam
arpl
test
icebp
xchg
push
push
icebp
loope
sar
arpl
lea
popf
in
sub
scas
fldenv
ins
push
mov
ins
jmp
repz
repnz
and
gs
inc
dec
dec
xor
mov
xchg
jae
sbb
mov
and
ins
adc
popf
dec
cmps
adc
nop
mov
add
and
dec
mov
clc
add
sub
ins
jp
xor
aad
sahf
sub
mov
into
scas
cmp
mov
hlt
inc
dec
jecxz
stos
jno
lds
and
test
in
stos
aas
test
mov
out
sahf
xchg
shr
add
mov
adc
add
jecxz
out
sub
jo
loop
sbb
mov
jmp
(bad)
rcl
dec
(bad)
mov
pop
push
neg
push
inc
mov
pop
jg
in
mov
push
adc
xchg
adc
cmp
shl
outs
inc
call
cmp
or
sti
mov
or
fs
cmc
add
ins
test
icebp
mov
sub
arpl
mov
mov
xchg
push
pop
(bad)
icebp
mov
cmp
test
adc
imul
add
mov
pop
les
xchg
imul
or
(bad)
xor
sub
inc
and
mov
shl
in
xor
dec
shl
mov
or
jae
dec
gs
or
rcl
aad
cmp
je
inc
mov
test
out
icebp
jecxz
sbb
add
mov
xchg
and
clc
cmp
nop
sub
adc
cmp
fwait
cdq
dec
push
push
mov
jb
rcl
retf
xchg
pusha
aad
inc
push
js
dec
loop
mov
pop
push
sahf
xor
mov
xor
loop
fld
mov
(bad)
stc
shl
pop
ss
(bad)
xor
xchg
mov
xchg
(bad)
fwait
movs
mov
jns
repz
int
xchg
jns
inc
stc
popf
bound
mov
ret
aaa
jle
test
(bad)
es
mov
adc
cmp
jmp
test
xor
ins
mov
or
jo
mov
push
pop
repnz
mov
xlat
movs
fimul
fnstcw
repnz
iret
shl
sbb
push
xchg
xchg
jnp
ret
in
xchg
(bad)
jle
push
ficom
ds
fsubr
push
out
ja
jnp
out
idiv
pop
int
push
dec
lods
icebp
dec
push
sbb
enter
lods
mov
int3
loopne
call
sbb
nop
je
in
dec
jns
pop
mov
xchg
sub
ja
sti
pop
push
not
out
xor
in
push
aas
aad
mov
xchg
das
(bad)
lods
ds
xlat
xor
cdq
jmp
mov
fwait
mov
xor
push
and
sub
cwde
mov
(bad)
xlat
sahf
fst
fwait
and
ds
popf
in
imul
push
xor
ds
pop
fstp
fisub
add
sbb
sbb
push
stc
mov
dec
xor
div
test
add
cwde
sub
or
dec
out
stc
bound
jae
sub
jg
movs
mov
cmc
inc
sub
dec
add
shr
je
fisttp
sub
rol
out
daa
call
cmp
fld
loop
gs
movzx
pop
xor
xlat
mov
leave
push
inc
mov
stos
dec
shl
jle
test
mov
xchg
fadd
out
cdq
push
scas
jp
mov
inc
sub
fidivr
inc
mov
lods
leave
cmp
sti
pop
mov
bound
dec
push
inc
mov
push
sub
xor
pop
inc
or
test
(bad)
mov
xchg
or
imul
int
aaa
xchg
pop
push
jb
sbb
mov
mov
pop
popf
dec
add
xor
jp
outs
(bad)
das
cmps
ret
pop
cli
xchg
mov
or
adc
cmc
scas
pop
aam
idiv
cli
mov
sbb
je
dec
sub
loope
mov
ss
xor
mov
push
jecxz
dec
clc
scas
aas
daa
arpl
jl
xchg
or
mov
cs
pusha
outs
(bad)
(bad)
ins
mov
mov
or
jb
outs
xchg
(bad)
mov
adc
mov
and
int
mov
and
mov
fwait
rol
mov
xchg
out
add
sbb
test
fs
ds
in
movs
popa
and
imul
sbb
sbb
iret
lods
cmp
xchg
inc
jl
nop
loope
aam
je
stos
into
cmc
mov
sub
adc
or
cmp
xchg
adc
mov
not
adc
jle
push
fidivr
dec
pop
xor
ret
int
inc
xchg
je
lds
retf
jns
xchg
popf
into
adc
fdecstp
sbb
xchg
arpl
ins
aam
pop
out
cmps
or
pushf
dec
mov
lds
fisttp
cmp
inc
out
jge
sub
add
aaa
sti
xchg
dec
push
lds
clc
std
xor
test
std
push
sar
iret
loope
adc
(bad)
sbb
scas
jge
sub
fisttp
(bad)
retf
cmp
enter
jns
inc
inc
aas
int
xor
loopne
outs
repz
cmps
and
push
inc
jns
sbb
ror
xchg
and
out
out
cs
sub
ret
leave
cli
push
or
das
mov
push
cmp
sbb
out
and
(bad)
ds
imul
push
int
sti
push
call
jo
mov
cmp
sub
jnp
add
pop
sub
aas
and
pop
xor
shl
and
and
xchg
loop
xor
nop
ja
inc
mov
call
fs
mov
inc
outs
cmp
sbb
movs
lock
movs
shr
imul
fcomp
xor
cmovns
aad
rcr
push
or
inc
xchg
push
dec
push
imul
sub
mov
sti
das
lods
fwait
xchg
rcl
movs
xor
stos
xchg
fnstenv
push
push
lahf
retf
lock
bound
and
xlat
mov
adc
(bad)
lock
inc
adc
pop
pop
cld
inc
dec
loope
push
pop
mov
ror
scas
and
jne
test
cmp
push
push
rcr
add
pop
sar
aad
push
lods
jg
and
pop
rcr
popf
mov
pop
or
dec
stos
fsub
dec
xchg
and
test
loopne
nop
js
sub
xchg
jmp
mov
jge
mov
int3
cmp
fs
cmps
popa
pop
add
mov
push
or
loop
ror
shl
stos
repnz
xchg
dec
ja
gs
iret
adc
inc
xor
pop
loope
add
sar
mov
ret
adc
adc
clc
fcomp
scas
fs
lahf
cmc
sub
xchg
outs
retf
push
test
sahf
inc
dec
or
sub
xor
and
or
cmp
sub
mov
mov
mov
mov
mov
cmp
cs
mov
repnz
mov
dec
dec
inc
mov
inc
(bad)
(bad)
sub
and
ficom
fst
xchg
neg
int3
pop
imul
inc
push
in
lahf
cmps
scas
dec
cmp
idiv
adc
mov
pusha
sub
pop
and
movs
test
sub
sub
sub
je
test
lahf
les
popf
and
sub
push
shl
lods
(bad)
(bad)
or
lahf
ss
data16
ret
xchg
rcl
inc
pop
fs
inc
mov
xchg
adc
idiv
cmp
mov
mov
aas
sub
sbb
xchg
std
bound
into
int3
mov
pop
ins
stc
call
pusha
adc
outs
pop
das
sbb
jns
add
mov
mov
(bad)
mov
(bad)
leave
loope
push
imul
jg
iret
lods
pop
dec
scas
cmc
mov
cmps
dec
dec
les
loopne
sbb
pop
jle
inc
in
and
push
push
jne
mov
sahf
dec
cmp
pop
retf
adc
pop
dec
fadd
pop
cmp
lods
loope
and
mov
dec
xor
ins
jne
push
loopne
or
leave
jmp
bound
pop
mov
xor
jmp
xchg
add
nop
jno
dec
sub
pop
cli
rcr
in
push
push
cmp
(bad)
in
jne
mov
push
cmp
fdivr
lds
fwait
scas
mov
jl
add
retf
mov
pop
pushf
mov
or
into
add
or
jle
hlt
add
add
sbb
retf
adc
xchg
stos
pop
pop
and
sub
(bad)
xor
fist
jae
lods
push
aad
dec
repz
arpl
and
stos
lds
sbb
mov
or
mov
add
cmp
int3
int
icebp
retf
inc
push
out
dec
add
or
push
and
push
dec
aam
or
mov
xchg
and
push
or
imul
xor
lock
arpl
or
push
inc
adc
cmps
add
pop
sbb
inc
hlt
mov
(bad)
jle
dec
fcom
push
fisttp
dec
ins
out
mov
pop
test
ins
pop
cli
jg
outs
movs
out
jle
mov
and
lods
or
cld
xor
adc
push
rol
gs
mov
or
test
popf
loope
xchg
fidivr
inc
sub
adc
jne
cdq
adc
jne
jns
fdivr
adc
and
les
lea
(bad)
dec
icebp
mov
add
xor
les
mov
bound
xor
push
in
cli
in
cmp
fisttp
cmp
xchg
xchg
int
xlat
sbb
dec
aam
into
inc
out
and
xlat
and
fwait
cmp
adc
dec
stos
cmps
jbe
fcomp
push
adc
shr
pusha
outs
ss
int3
out
push
popf
leave
dec
push
add
and
xor
clc
fdivr
sub
stos
or
call
jno
cs
cli
mov
rol
lock
and
movs
pop
int
sahf
push
jg
mov
leave
adc
or
aaa
leave
xor
adc
add
dec
mov
dec
inc
jp
jnp
dec
jmp
push
add
or
mov
fld
loop
mov
jmp
mov
mov
and
jmp
push
pop
out
jg
mov
or
adc
outs
xlat
pop
(bad)
repz
add
xchg
add
pop
adc
mov
push
(bad)
sti
mov
(bad)
sar
and
mov
mov
mov
pusha
cld
jnp
into
mov
clc
add
dec
mov
rcr
cmp
pop
ins
hlt
or
pop
scas
jmp
movs
es
pop
mov
mov
dec
fisttp
(bad)
lods
cmp
push
sti
rol
cmc
pop
rol
mov
lds
dec
aas
fs
std
fs
dec
pop
cmc
sub
lock
cwde
mov
push
jb
cld
jns
jmp
xchg
jp
test
lock
sar
sub
lods
sbb
call
pop
aaa
cmp
sub
stos
popf
jmp
add
jbe
jle
fstp
xor
gs
(bad)
xchg
cwde
dec
inc
clc
daa
ss
xor
dec
jg
add
xchg
cwde
neg
xlat
or
mov
mov
xor
jns
popf
jb
inc
in
test
dec
outs
sub
push
outs
pop
repnz
stos
ja
sub
dec
test
movs
test
loopne
mov
cmp
xchg
push
mov
(bad)
mov
out
inc
ret
mov
mov
dec
push
loop
sbb
movs
or
mov
cld
imul
dec
mov
jb
mov
sub
scas
dec
xchg
dec
add
mov
ja
std
adc
stos
sbb
xor
xlat
xor
in
sub
or
retf
ds
ror
(bad)
and
dec
int3
retf
mov
pop
cwde
into
adc
loop
jmp
cmp
mov
sti
enter
daa
pop
out
imul
mov
adc
mov
loope
es
dec
daa
xor
iret
dec
les
xor
jle
mov
call
cmp
xchg
jns
and
imul
jmp
in
aam
cmp
idiv
fist
stc
and
jl
sub
out
repnz
mov
cli
jg
das
(bad)
and
jmp
xor
cs
popf
pushf
inc
adc
cmps
and
lds
cmps
push
push
nop
sbb
test
icebp
popa
arpl
popa
mov
mov
ins
push
pop
popa
mov
xchg
(bad)
(bad)
jbe
dec
add
daa
push
call
xor
(bad)
mov
sub
movq
mov
scas
push
loope
xlat
out
test
jb
mov
pop
into
push
das
call
dec
adc
push
(bad)
pop
fiadd
sahf
mov
xchg
iret
das
sar
xchg
pop
fild
cdq
push
lods
mov
jl
jmp
retf
aas
mov
inc
inc
sbb
sub
and
cli
int3
in
and
test
pusha
or
dec
out
inc
lods
push
adc
fmulp
lock
push
pusha
mov
(bad)
in
imul
jo
out
loop
xor
mov
or
and
ret
pop
je
stos
jns
cdq
pop
pop
fwait
and
dec
loopne
daa
pop
je
icebp
inc
sbb
pmulhw
adc
scas
jae
aaa
mov
add
sti
dec
pushw
xor
adc
inc
push
and
push
mov
sbb
pop
xchg
shl
popa
stos
mov
push
mov
(bad)
(bad)
sahf
cwde
add
push
fistp
mov
aaa
cli
add
xchg
arpl
(bad)
and
icebp
xchg
imul
out
sbb
ret
push
shl
add
xor
test
jmp
push
retf
clc
pop
and
js
inc
inc
jb
out
paddb
mov
(bad)
cmp
pop
or
stos
mov
dec
xor
clc
les
pop
xor
mov
push
cld
daa
adc
xchg
mov
dec
sub
and
adc
pop
int
xor
adc
cmp
mov
adc
sbb
pop
sbb
cmp
dec
add
loop
stos
sbb
and
mov
mov
or
imul
mov
dec
aam
pop
cmp
xor
mov
fld
adc
add
imul
sub
pop
cmp
add
xchg
mov
pop
jnp
cmp
ffreep
(bad)
mov
cmps
push
idiv
fidivr
jo
movs
cmp
pop
stc
inc
adc
loop
dec
cmp
shr
adc
int
inc
aas
jno
mov
xchg
jo
jne
mov
pop
dec
rcl
ins
sbb
xor
dec
dec
pushf
das
sar
jl
stos
ss
jo
pop
pop
xchg
and
cmp
cs
pop
and
jge
bound
dec
das
retf
xor
es
cmps
or
sub
xchg
or
out
cmp
jmp
push
add
shl
pop
ror
std
lea
aaa
push
or
sahf
rcl
fdiv
xor
xor
ds
mov
jae
fnstcw
or
xchg
pop
test
js
dec
sub
or
fadd
inc
adc
push
call
sub
sbb
mov
pop
pop
test
jmp
push
(bad)
shl
jecxz
popa
jge
pop
in
arpl
idiv
test
(bad)
lods
push
pop
aaa
dec
xchg
aas
pop
push
sti
jae
pop
sub
push
push
and
and
dec
sbb
bound
ffreep
imul
call
inc
imul
out
into
int
cmp
mov
xchg
xchg
call
clc
adc
dec
scas
outs
mov
sub
out
lods
xor
stos
jno
dec
bound
mov
movs
jmp
int3
cmps
jmp
push
bound
lock
and
pop
call
out
xor
scas
mov
call
(bad)
aaa
jecxz
xchg
sub
add
lods
sahf
adc
cwde
cld
mov
fisubr
loopne
fcomip
add
shl
dec
xor
jmp
imul
scas
add
(bad)
rcl
jge
xchg
aam
(bad)
loopne
fild
and
dec
hlt
jns
mov
adc
xchg
(bad)
jmp
push
xchg
mov
dec
jmp
sbb
push
xchg
mov
jbe
pushw
pop
loopne
pop
(bad)
jg
mov
mov
adc
sahf
adc
mov
mov
sub
enter
inc
xchg
mov
ss
and
adc
jl
cmps
inc
xor
push
mov
xchg
xor
loopne
int3
xchg
dec
mov
jge
jmp
sub
sub
(bad)
int3
cs
jmp
dec
fisttp
mov
jne
in
cld
loopne
fldenv
pop
push
sbb
and
call
sahf
pop
mov
pop
jmp
xchg
push
dec
fsubp
imul
lods
fcom
xor
nop
jecxz
push
fistp
xchg
jmp
les
sbb
xor
jns
stc
int3
das
call
aad
mov
shl
pop
test
aaa
pop
inc
cs
xchg
dec
mov
in
push
cwde
xchg
xchg
adc
das
mov
push
out
mov
int3
in
jge
(bad)
in
les
in
js
push
add
mov
mov
inc
inc
(bad)
(bad)
pop
add
ret
dec
imul
push
ficomp
imul
sub
inc
and
bound
nop
inc
cmp
cmp
adc
inc
push
inc
or
sub
pop
sbb
fisub
data16
inc
retf
fwait
ss
add
mov
pop
or
xchg
test
stos
xchg
sti
pop
pop
(bad)
jno
pop
clc
je
jns
gs
pop
jg
adc
dec
fsubr
sbb
aam
cmp
std
std
adc
inc
push
cmp
cli
mov
jae
jnp
scas
jg
inc
push
aas
in
pusha
inc
div
(bad)
out
cld
and
mov
mov
jle
cdq
jb
add
and
inc
inc
adc
mov
mov
ins
int3
movs
pusha
mov
sbb
loopne
scas
popa
mov
hlt
test
sbb
lea
xor
movs
test
xchg
cld
hlt
js
mov
in
pop
(bad)
sub
jne
test
mov
repz
jno
fistp
adc
cld
dec
xchg
int3
dec
scas
enter
pusha
jmp
fcom
sub
lods
or
cmps
xor
and
sbb
mov
add
mov
xchg
jg
mov
ds
adc
call
and
mul
push
les
xor
or
dec
and
mov
psrld
dec
xchg
pusha
push
adc
sbb
sar
jmp
mov
rcl
icebp
xor
mov
cmp
push
mov
sub
ror
popf
jp
xchg
jns
pop
pop
call
inc
and
out
fucom
(bad)
jmp
stos
push
xchg
jecxz
xchg
movs
mov
xor
inc
inc
push
push
punpcklwd
fnstenv
pop
mov
retf
call
add
(bad)
cmp
or
adc
cld
sub
cdq
dec
and
cmp
inc
xchg
mov
mov
push
out
sahf
inc
test
ret
(bad)
dec
and
aaa
mov
hlt
daa
xor
test
and
pop
push
sub
jmp
push
add
enter
gs
xchg
pop
jmp
les
or
inc
and
mul
mov
xchg
out
outs
push
add
sbb
pushf
clc
push
xor
adc
mov
mov
cmc
int
ss
fstp
jmp
lahf
dec
sbb
popf
(bad)
cmp
xchg
pop
pop
sbb
sub
cmp
add
addr16
fisubr
dec
sub
inc
das
xlat
push
cmp
in
lods
shr
jne
test
inc
adc
pop
push
aas
nop
shr
jg
add
xor
sbb
xchg
fmul
dec
stos
inc
sti
ficomp
jge
mov
popa
sub
stos
mov
jnp
cmp
(bad)
cmp
xchg
jnp
out
push
nop
daa
dec
ret
add
xor
xlat
push
(bad)
loope
cmc
es
sub
popa
mov
sbb
pop
jns
repz
mov
in
push
nop
push
mov
push
inc
push
push
jns
ins
outs
sbb
adc
ret
xor
adc
leave
cmp
aam
mov
or
jle
sub
out
mov
rcl
loopne
ins
test
cmp
mov
not
adc
xor
mov
adc
mov
(bad)
aad
xchg
(bad)
jmp
loop
push
sub
out
jb
out
cli
and
rcr
ror
lods
aas
jno
loop
hlt
sar
and
adc
pop
xor
cmp
std
test
jb
popa
out
repnz
pop
mov
fidivr
sbb
dec
push
push
dec
rcr
jbe
ja
push
xlat
jnp
mov
add
xchg
in
cmp
das
into
mov
(bad)
cmps
lods
inc
dec
add
or
cmc
mov
pop
fdivr
imul
mov
mov
xchg
in
retf
stos
mov
jns
retf
out
mov
inc
and
outs
pop
adc
sub
and
dec
add
pop
pop
cmp
mov
pushf
lods
mov
les
cs
push
jl
or
mov
int
cmc
test
inc
dec
sbb
pop
pop
push
pop
fcmovbe
push
push
mov
nop
jbe
push
jae
cld
outs
loope
or
xor
mov
dec
inc
adc
movs
mov
ins
push
or
xor
mov
lahf
pop
pop
pop
je
push
and
xchg
push
mov
out
cmps
rcr
pushf
bound
popf
jno
push
jge
je
sub
push
fadd
clc
aam
sti
adc
inc
outs
mov
aad
aam
mov
(bad)
lods
popf
sub
jnp
xor
lock
test
xor
dec
mov
jmp
inc
outs
leave
stos
jge
cmps
pop
and
jecxz
xchg
in
and
arpl
mov
sub
adc
outs
std
je
add
mov
int3
(bad)
mov
in
jecxz
cmc
push
call
mov
and
enter
retf
inc
jns
sub
sub
retf
call
movs
clc
fwait
call
fs
inc
shl
out
test
shl
sub
or
(bad)
pcmpgtb
xor
push
jb
mov
fist
lock
dec
pop
mov
cmps
and
out
lds
(bad)
es
rcr
jle
xchg
pop
test
lock
aam
mov
push
es
push
mov
push
mov
mov
fsubp
retf
sub
outs
push
in
arpl
adc
cmp
imul
je
ins
cmp
push
jg
iret
inc
dec
xchg
adc
loop
movs
add
dec
inc
mov
(bad)
outs
mov
(bad)
jb
in
pop
pop
ret
aad
lea
inc
push
push
pop
sub
adc
cli
nop
hlt
lea
push
push
(bad)
jg
rcl
mov
xor
dec
cmp
sbb
mov
ret
cmp
adc
shr
js
pop
mov
in
xor
push
jb
sub
jae
xor
sbb
or
cs
dec
xor
push
gs
js
adc
ss
inc
pop
cmp
mov
xor
in
pop
or
or
(bad)
cmp
push
imul
out
jmp
xchg
mov
ins
movs
inc
test
loope
daa
mov
enter
(bad)
and
loopne
jns
fwait
add
stc
rol
arpl
aaa
fisttp
pop
pop
imul
add
mov
dec
loop
cmps
push
shr
std
(bad)
adc
or
aas
push
dec
xor
add
pop
xchg
push
jnp
aad
and
test
daa
clc
push
daa
dec
push
test
cwde
jl
adc
xor
inc
mov
lea
fdiv
sub
test
clc
pushf
imul
xlat
in
leave
stc
add
aam
mov
sbb
cmp
push
and
dec
jmp
mov
clc
test
cli
jg
dec
xchg
push
cmps
icebp
mov
push
mov
and
xchg
push
or
inc
test
push
add
xchg
push
or
xchg
std
lea
dec
mov
fs
pop
cmps
xor
fiadd
sbb
add
sub
add
mov
stc
rcl
xor
loope
xlat
pop
add
ror
pop
xor
push
arpl
push
repz
sbb
fsubrp
jmp
cmp
rcr
sbb
push
cmps
mov
xor
aaa
fstp
daa
pop
and
add
mov
pop
fwait
(bad)
adc
lock
inc
jmp
pop
int3
call
xor
shr
jecxz
iret
pushf
xchg
mul
pop
repnz
cli
aam
call
mov
iret
sub
adc
push
cmp
scas
inc
clc
popa
sub
push
mov
jae
in
and
repnz
add
in
ss
xchg
jecxz
outs
push
loopne
or
shl
or
inc
sub
xchg
and
sub
sbb
inc
jl
or
sti
popa
mov
data16
cmc
xchg
pushf
push
sub
or
sti
outs
jno
stos
fsubr
add
pop
pop
dec
adc
test
push
movs
stos
xor
push
or
jmp
sbb
sub
adc
icebp
lock
leave
xchg
push
test
pop
push
fistp
push
leave
jno
pop
jmp
inc
mov
outs
(bad)
into
(bad)
loop
(bad)
repnz
fisub
jle
mov
bound
and
test
sub
ins
cmp
pop
das
mov
push
(bad)
test
das
or
jnp
ins
push
adc
and
jmp
js
push
cmp
repnz
xor
or
leave
(bad)
mov
repnz
popa
push
(bad)
fnstcw
mov
or
clc
enter
inc
cmp
ret
jb
jns
(bad)
retf
mov
xor
aaa
stc
dec
scas
or
iret
sbb
push
call
push
add
fiadd
dec
imul
std
pop
sub
add
lds
jnp
fs
pop
lods
or
sbb
(bad)
and
fstp
test
cmpps
fcom
test
jns
out
test
daa
neg
aas
sub
push
inc
add
dec
cmc
mov
jbe
fidiv
(bad)
pextrw
xor
jns
jl
stos
fistp
or
xchg
(bad)
outs
imul
push
push
mov
jmp
test
sar
xchg
bound
scas
ss
in
push
pop
cmps
mov
or
push
loope
retf
test
data16
call
loopne
call
sub
jecxz
cmp
into
sbb
outs
in
push
dec
rol
std
out
ins
push
add
dec
adc
inc
adc
mov
(bad)
cmp
adc
pop
cmp
scas
cmp
ins
inc
je
repz
lods
push
xchg
iret
mov
shr
pop
test
add
mov
pop
clc
retf
ja
jmp
(bad)
aas
sbb
mov
pop
push
push
inc
inc
adc
jns
or
int
jge
cmp
ins
push
imul
popf
sbb
pop
jmp
mov
add
mov
jmp
mov
adc
aas
stc
ds
cmps
jp
ret
xchg
xor
adc
fdivrp
fadd
dec
or
(bad)
pop
rcr
rcr
shr
or
mov
out
in
dec
mov
jb
xchg
inc
lods
mov
std
clc
fdivp
stos
or
push
mov
push
and
fld
add
fst
and
adc
stos
add
xchg
fisubr
sbb
add
mov
ja
movs
push
hlt
add
rcr
push
sub
test
out
cmp
dec
jbe
sar
ret
jnp
iret
mov
fs
xchg
cmc
inc
fisubr
lods
adc
icebp
ds
mov
mov
xor
xchg
fld
jecxz
xchg
ss
cli
sub
call
out
loop
mov
adc
add
inc
pop
std
add
aad
mov
xchg
jae
clc
outs
sbb
test
mov
xchg
jnp
in
arpl
sbb
xchg
inc
fwait
mov
xor
loop
fisttp
leave
daa
mov
cld
je
dec
test
into
xchg
pop
or
cli
mov
mov
and
and
xchg
out
inc
es
loopne
mov
cmp
sti
je
dec
stos
jmp
sbb
mov
xchg
sbb
scas
popf
push
ret
out
mov
mov
mov
mov
test
jge
not
outs
scas
mul
icebp
add
xor
cmps
push
mov
aas
pop
jnp
mov
test
adc
dec
pusha
arpl
or
add
ins
shufps
popa
sti
inc
sub
jno
push
scas
inc
loop
or
adc
movs
or
cmc
mov
sub
dec
lds
sub
inc
cdq
js
ja
movhps
mov
sbb
mov
fmulp
push
addr16
inc
add
in
sbb
pop
rcl
xor
ret
mov
pusha
xchg
ins
lods
dec
push
(bad)
dec
sub
repnz
out
jns
in
imul
dec
cli
rcl
sbb
movs
xchg
mov
mov
and
mov
xchg
and
out
arpl
mov
adc
or
cli
pop
push
inc
sub
cld
and
cmps
fimul
loopne
sub
jno
mov
xor
adc
sub
fs
into
popf
sti
sbb
mov
retf
pushf
gs
pop
test
jp
push
aas
mov
loopne
mov
je
cdq
aaa
push
test
add
or
add
mov
inc
ja
dec
sub
push
xchg
fiadd
pop
push
dec
or
cmp
gs
jmp
ret
ins
mov
lds
or
xchg
jae
rol
int3
and
pusha
xor
popa
inc
adc
dec
je
xchg
cs
pop
(bad)
into
mov
in
add
(bad)
sub
xor
cmp
jge
mov
fcomp
fimul
arpl
mov
test
inc
mov
sbb
ins
push
mov
adc
cmp
test
dec
(bad)
xchg
and
xor
jbe
or
fs
mov
(bad)
lods
repz
xor
jge
popf
scas
sbb
call
and
mov
mov
sub
stc
cdq
sbb
mov
push
gs
outs
repz
shl
out
rcr
movs
jle
cdq
mov
mov
push
adc
pop
setno
call
lahf
xor
pop
lds
dec
out
out
ds
pop
mov
pop
adc
loopne
push
mov
gs
in
int
test
lds
adc
rcl
loopne
out
cmps
mov
inc
pop
(bad)
(bad)
or
sub
mov
mov
cmp
mov
in
(bad)
mov
pop
nop
gs
daa
and
dec
inc
jo
adc
jb
hlt
cmp
(bad)
stos
daa
mov
cmp
out
xchg
push
les
push
cmps
lahf
inc
sar
lods
out
push
mov
test
lds
mov
add
pop
lds
inc
inc
xor
jo
bound
xchg
pop
mov
xchg
aad
jbe
jecxz
scas
dec
mov
movs
dec
repz
imul
inc
pop
hlt
xor
dec
retf
(bad)
inc
push
or
popw
mov
icebp
in
aaa
jbe
data16
cmps
sbb
inc
ret
mov
dec
inc
fs
popa
mov
mov
jo
pop
mov
nop
cli
add
aad
mov
stos
ret
mov
sahf
shl
mov
sar
test
outs
(bad)
mov
cmp
mov
ins
fld
cmp
ret
or
xor
jcxz
les
push
or
mov
cmps
rcl
xchg
into
add
jmp
push
inc
shr
sti
call
push
sar
adc
jmp
push
xor
retf
xchg
dec
mov
shl
pushf
or
fsubr
arpl
cld
cmp
cmp
mov
test
ret
aam
icebp
aam
neg
jb
into
movs
mov
mov
mov
push
test
or
mov
fsubr
mov
adc
dec
out
lock
cld
pop
fs
sbb
adc
pusha
inc
bound
dec
sub
mov
je
mov
xchg
enter
or
cmp
and
pop
cs
popf
div
jno
out
in
je
stos
repz
je
outs
ins
popa
jge
fmulp
and
xor
pop
sbb
xor
jp
cmp
icebp
xchg
inc
mov
jb
mov
xchg
cmp
xchg
fwait
or
mov
cwde
movs
test
jnp
mov
cld
mov
add
or
cmps
repnz
cmps
fwait
adc
jp
dec
pop
out
(bad)
ins
enter
push
sub
std
inc
mov
shl
xchg
push
out
sbb
and
sbb
sbb
and
cli
xchg
mov
sub
xchg
aad
xchg
icebp
xchg
fcmovu
add
and
sbb
cli
xchg
jge
dec
xchg
mov
fsubp
or
xor
or
push
mov
xchg
jae
mov
sbb
movs
adc
clc
enter
retf
std
imul
adc
and
je
repz
mov
pop
jns
in
xchg
cmc
adc
aaa
lock
and
or
les
adc
movzx
and
shl
retf
lahf
repz
inc
pushf
mov
cmp
dec
mov
scas
jmp
pop
retf
test
es
rol
ror
or
mov
outs
pop
shl
push
mov
mov
loope
(bad)
or
mov
add
or
add
push
and
push
fdiv
jnp
gs
adc
cmp
and
stos
mov
pusha
mov
jge
cwde
push
cs
ret
fs
in
dec
test
adc
ss
sbb
jo
cli
seto
xor
cwde
sub
xchg
std
mov
sbb
pop
or
lock
sbb
xchg
gs
inc
ficom
pushf
adc
mov
jne
fsubr
or
xchg
fwait
stos
in
movs
inc
xlat
lahf
and
sbb
les
mov
mov
xchg
popa
pushf
mov
into
mov
fs
xor
int
add
mov
jmp
sub
sbb
call
mov
retf
sub
jmp
and
call
rcl
and
inc
xchg
push
add
stc
pop
push
push
xchg
pop
mov
pusha
fcomp
idiv
test
loopne
jbe
add
mov
pop
js
cwde
jge
fmul
test
iret
jge
mov
mov
test
fs
and
and
sbb
clc
sahf
enter
(bad)
retf
xchg
lea
sbb
js
jge
cmp
retf
push
mov
adc
sub
inc
jg
and
cmp
fcomip
retf
or
push
lea
(bad)
mov
or
movs
push
popf
ins
loop
and
mov
mov
lds
arpl
jmp
jbe
fild
sbb
cmp
fdiv
call
pop
cmp
lods
cdq
or
adc
cmp
push
or
jl
cli
cmovb
pop
jp
or
inc
inc
inc
jnp
data16
mov
mov
and
ds
sar
mov
shl
inc
inc
(bad)
dec
cs
jge
arpl
iret
add
frstor
and
mov
xchg
fadd
scas
jp
popf
jb
pop
sub
mov
mov
lods
int3
(bad)
push
jg
repz
or
leave
pop
in
pushf
and
and
pop
scas
repnz
(bad)
jae
mov
xchg
mov
pop
push
push
push
pop
mov
inc
xor
fwait
cli
mov
xchg
pop
retf
jge
xor
es
retf
xchg
push
mov
mov
pusha
push
ror
xchg
pop
mov
(bad)
pop
das
inc
in
inc
scas
les
ins
mov
jno
mov
jl
mov
fsub
inc
xor
outs
es
hlt
rcr
xchg
pop
dec
jae
shl
pop
push
dec
lock
push
dec
push
cmp
rol
push
jae
call
scas
fwait
cmp
and
iret
inc
and
lahf
stos
test
shl
xchg
and
mov
pushf
mov
outs
ret
dec
neg
popa
fidivr
jge
push
jbe
lods
imul
call
jo
adc
jb
jl
out
mov
cmp
push
push
mov
dec
jmp
mov
lods
cmps
leave
xchg
sub
ret
aaa
sub
das
mov
jae
sbb
(bad)
jno
and
lahf
clc
inc
xchg
cwde
repnz
scas
jae
movups
mov
(bad)
shl
popa
cli
cmp
fisttp
push
mov
or
mov
pop
and
jae
jmp
cld
adc
sar
retw
xor
imul
jb
mov
fcom
pop
jb
fs
repnz
jno
mov
loopne
test
or
ret
fldenv
jmp
mov
xlat
dec
(bad)
pop
hlt
sub
lea
sbb
mov
test
add
xchg
sbb
push
in
(bad)
leave
cli
jbe
fdiv
mov
or
sbb
jo
scas
pop
lock
and
xor
mov
outs
mov
push
test
sahf
adc
test
setb
(bad)
(bad)
cld
xchg
adc
nop
sbb
daa
adc
lds
jl
xor
mov
cmp
push
mov
cmp
bound
cmp
fidivr
pop
fld
scas
pop
or
xor
jg
lahf
sbb
(bad)
mov
hlt
add
enter
or
ds
jno
inc
fmul
inc
cli
xor
pop
loop
pop
cmps
out
jae
pusha
repz
retf
xlat
xchg
jp
jmp
or
lods
xchg
das
pop
push
mov
adc
into
mov
sar
push
icebp
scas
or
pop
rcr
bound
aaa
data16
sub
push
push
mov
rcr
cmp
iret
sub
mov
movs
scas
das
mov
int3
loop
inc
cmp
pop
pop
mov
xor
outs
cmp
call
cmp
mov
pop
scas
(bad)
fisttp
in
and
jecxz
inc
mov
in
xchg
mov
sar
movs
push
leave
cmps
es
ror
adc
jle
loop
lods
hlt
lods
in
jge
jb
mov
loopne
outs
call
inc
pop
xchg
add
push
in
imul
jmp
jmp
scas
sub
aam
mov
or
push
and
aam
call
dec
inc
pop
aad
(bad)
in
je
jl
adc
xchg
add
enter
and
and
(bad)
mov
into
cwde
call
pop
ror
cwde
xchg
and
add
sub
fs
push
test
std
and
mov
sub
inc
iret
popa
add
arpl
movs
ds
jmp
pushf
loope
mov
pushf
clc
inc
dec
cmps
(bad)
dec
lahf
pop
pop
out
jae
mov
pop
daa
mov
push
fs
sar
xchg
mov
nop
jge
cwde
pop
cmp
cmp
jle
enter
jbe
daa
push
leave
add
jmp
lahf
cwde
aad
push
das
or
mov
cmp
and
sub
in
and
jbe
paddusw
xchg
dec
xor
imul
call
ficom
jno
dec
mov
sahf
xchg
sub
call
jmp
jb
nop
repnz
fwait
jno
pusha
cmps
push
shr
mov
enter
retf
sahf
sbb
xchg
jae
mov
cdq
iret
push
push
sbb
call
into
test
fdivr
jle
or
stc
sub
jne
fsub
mov
xchg
xchg
xchg
cs
test
xor
mov
push
sub
lock
mov
push
mov
das
mov
push
mov
das
and
sub
or
repz
sahf
pushw
xchg
xchg
mov
cmpxchg
pusha
pop
jmp
in
jno
push
int
idiv
stc
test
cmps
xor
mov
loope
sbb
neg
ins
cdq
xor
test
jle
mov
aad
add
clc
cld
cmp
xlat
retf
dec
jnp
sbb
pop
sub
dec
sbb
stos
in
sbb
js
mov
dec
les
repnz
mov
inc
(bad)
aam
mov
xor
add
xor
out
(bad)
cs
loop
mov
or
mov
ss
fild
in
xlat
inc
or
pop
pop
loope
pop
xchg
(bad)
lahf
inc
ja
mov
inc
cmp
test
gs
xor
leave
inc
sar
inc
mov
push
fnstsw
test
jge
inc
jp
out
jb
fidiv
mov
dec
jmp
out
rol
and
jo
loope
adc
jmp
jo
inc
push
sub
pop
enter
(bad)
sub
xor
sub
jns
push
in
sahf
mov
arpl
push
lods
fcomip
arpl
leave
in
stos
cmp
ss
adc
mov
pop
push
mov
and
adc
sub
push
scas
lods
pop
ja
fstp
dec
adc
jle
fcmovb
popf
adc
lods
add
pop
jle
pop
in
retf
cdq
xor
mov
ja
adc
aad
sbb
arpl
jle
pushf
cs
inc
mov
in
jl
mov
jle
mov
add
ja
dec
xor
cmp
pop
imul
mov
cmc
sahf
out
mov
fisubr
movs
mov
(bad)
shr
aaa
jl
sub
mov
or
lods
pop
adc
dec
(bad)
push
cmp
lahf
cmp
je
push
xor
pop
repz
push
jmp
inc
mov
hlt
sbb
movs
mov
leave
scas
push
sbb
outs
popf
rol
pop
and
pop
les
push
je
(bad)
xor
cmps
(bad)
test
movs
push
add
and
pop
lahf
push
cmp
or
test
fwait
je
dec
outs
in
clc
mov
(bad)
mov
js
jbe
mov
add
shr
pop
cmp
fimul
push
imul
jl
sbb
pop
call
and
lds
lahf
and
ja
pusha
push
sbb
mov
cmp
stc
sar
push
add
rcl
xchg
jmp
push
jmp
or
je
popa
sbb
pop
jb
inc
push
ins
and
or
add
pop
mov
xor
imul
adc
mov
add
jno
adc
gs
ins
(bad)
fcmovb
dec
(bad)
outs
or
jle
inc
scas
dec
shl
out
mov
dec
sti
shl
sbb
mov
iret
ins
mov
mov
mov
inc
ret
pop
cmc
add
xor
or
outs
sub
cmps
ins
(bad)
popa
bound
mov
mul
iret
gs
cmp
repz
cwde
sbb
ficom
ss
mov
arpl
clc
test
sbb
xchg
fst
popa
sar
push
ja
and
adc
in
add
push
sti
or
loopne
pop
in
mov
add
add
mov
sbb
loopne
std
sbb
pusha
inc
mov
sub
imul
scas
dec
dec
call
(bad)
pop
sbb
inc
or
and
imul
ja
iret
xchg
fbstp
pop
mov
dec
xchg
lahf
mov
aam
cs
movs
es
push
sti
(bad)
push
mov
aad
outs
and
cmps
idiv
dec
popf
clc
inc
jne
cmc
lods
arpl
jnp
neg
push
xchg
aas
pop
mov
xchg
dec
hlt
scas
cmps
cmc
pop
or
dec
or
xchg
test
ja
pop
fld
enter
xchg
cmp
(bad)
mov
mov
jmp
call
test
call
out
aad
dec
ret
mov
in
cmps
cs
rol
jmp
lea
fcmovu
out
addr16
mov
xor
out
inc
mov
xchg
inc
mov
not
sbb
xchg
mov
dec
clc
lock
inc
clc
jno
mov
mov
js
xchg
and
cmp
add
stos
mov
rcl
sub
cmp
sub
jbe
and
mov
(bad)
cmc
adc
lods
mov
imul
cld
cmp
in
mov
sbb
push
jle
mov
retf
psllw
and
fild
pop
in
mov
int3
pop
test
mov
imul
sub
sbb
cdq
inc
pop
imul
cmp
xor
int3
ja
push
(bad)
xchg
imul
lea
jmp
lods
leave
ds
cmp
jnp
mov
pop
mov
adc
adc
dec
mov
sbb
push
mov
mov
sub
retf
xchg
cmp
loopne
mov
ror
sbb
push
jbe
test
mov
pop
mov
jno
inc
dec
leave
ss
inc
pop
add
(bad)
mov
call
(bad)
call
test
and
jbe
cld
call
or
xchg
ror
or
dec
cmp
out
xor
add
push
jg
and
pop
cmp
xchg
ret
adc
sbb
fnsave
sahf
shr
push
pavgw
(bad)
imul
and
fisttp
lahf
fwait
rcr
mov
dec
mov
jbe
fistp
inc
and
stos
cmp
into
adc
jmp
ins
call
iret
or
test
xor
dec
inc
pop
ja
push
and
sbb
cmps
mov
xchg
(bad)
jge
xor
jge
xor
lds
pop
inc
(bad)
pop
cmp
jo
jp
pop
dec
stc
das
mov
mov
test
xor
das
pop
sti
push
lds
out
fnstenv
push
sbb
(bad)
and
inc
pop
or
push
aaa
xor
je
(bad)
mov
pop
dec
jo
or
mov
aam
push
mov
xchg
dec
rol
pushf
cwde
and
xor
aas
enter
pop
retf
lods
cmp
cmp
xor
dec
repnz
xchg
shr
cmp
jg
into
(bad)
adc
xor
cmp
scas
ret
push
popf
dec
sub
stos
fwait
push
and
xchg
scas
ja
sub
pop
(bad)
jb
mov
dec
jne
inc
lahf
test
lods
lods
sbb
out
imul
jb
mov
inc
and
sub
jne
mov
je
mov
pusha
addr16
sbb
dec
xchg
xchg
ficomp
in
inc
inc
into
pop
push
xor
jae
mov
mov
fmul
inc
aad
dec
loope
and
(bad)
aaa
jmp
push
xor
and
ret
jmp
push
fucomp
movs
movs
aas
out
(bad)
(bad)
mov
sbb
mov
inc
iret
pop
pop
cmp
arpl
xlat
dec
sub
rol
xchg
cmp
mov
std
or
xor
push
into
movs
pop
repnz
(bad)
iret
out
jl
jns
mov
jb
mov
inc
adc
sub
push
inc
(bad)
mov
gs
fsub
and
mov
ins
movs
rcr
popa
inc
pop
(bad)
outs
xlat
or
int3
fwait
jne
pop
xor
mov
cmp
jle
adc
and
inc
mov
jne
mov
fs
inc
(bad)
(bad)
cdq
test
cs
mov
xchg
mov
jae
call
and
sub
lea
and
test
imul
out
mov
fisttp
loopne
sbb
pop
cmp
ins
and
idiv
pop
cmps
rcr
mov
sub
lahf
les
sub
idiv
mov
repz
cmc
jle
cmp
enter
cld
mov
jmp
and
enter
test
int
mov
outs
fbld
pop
mov
sub
cmp
sbb
mov
stos
and
mov
rol
inc
pop
rol
(bad)
dec
cld
std
neg
or
and
cmc
inc
(bad)
ret
add
mov
adc
pop
jb
cmp
and
or
cmps
test
fiadd
push
mov
cdq
mov
adc
dec
mov
mov
(bad)
mov
push
int3
cwde
and
jle
loop
dec
movs
ins
push
jne
cmp
int3
adc
aam
jnp
inc
outs
icebp
cmp
xor
stos
scas
sub
add
outs
(bad)
mov
xor
sbb
out
and
pop
shl
jb
out
shl
cmp
mov
and
pop
fwait
std
dec
mov
pushf
dec
test
cmp
dec
out
imul
pop
mov
mov
(bad)
mov
gs
pop
aam
jmp
pop
outs
idiv
sbb
sbb
sub
aad
repz
or
xor
cmps
xchg
aad
(bad)
jb
mov
mov
sbb
cmp
pushf
and
mov
adc
out
jge
jmp
push
scas
adc
push
inc
mov
and
fwait
jmp
lahf
cwde
loope
jne
inc
mov
sub
imul
test
stos
adc
vshufps
daa
loope
das
lods
(bad)
lods
sub
mov
lahf
ret
int
jnp
not
popf
jg
jbe
xchg
(bad)
mov
cmp
cmps
stos
xchg
mov
imul
call
xor
sub
pushf
iret
add
imul
addr16
gs
mov
test
(bad)
push
inc
or
push
scas
retf
sbb
sti
addr16
jecxz
mov
mov
sub
push
ficom
add
fnstcw
in
rcr
gs
addr16
push
adc
in
xchg
xor
dec
jo
xchg
hlt
ds
jl
or
outs
xchg
fstp
bound
pop
jge
mov
dec
push
je
jp
mov
and
xchg
rol
(bad)
popf
bound
out
retf
test
inc
dec
outs
lock
or
xchg
xor
stc
lods
xchg
pusha
call
popa
inc
inc
xlat
add
or
stos
fucomip
push
dec
outs
cmc
pop
mov
hlt
mov
mov
jge
xchg
call
les
das
add
jge
mov
sub
fdivp
sub
fmul
js
push
daa
lock
inc
ins
test
cli
js
cli
divps
or
retf
cmp
outs
addr16
mov
ds
(bad)
shl
imul
stc
push
xor
mov
and
ja
sar
clc
inc
cs
cmp
jb
sbb
es
and
sbb
dec
xlat
arpl
mov
ss
adc
loopne
sub
adc
cmps
loop
enter
xchg
xchg
movs
(bad)
daa
pop
mov
popf
mov
pushf
fs
aam
xchg
pushf
ret
fisttp
daa
cmps
jl
into
movs
and
fdiv
dec
push
jge
pop
je
cld
inc
jns
cmp
xor
ja
xor
pop
dec
cwde
loop
hlt
mov
push
mov
es
push
mov
pop
dec
adc
add
jmp
mov
sbb
and
test
pop
leave
jbe
mov
dec
rcr
cmp
push
lods
sub
sub
jo
dec
cmp
push
mov
jle
push
(bad)
repz
sahf
fnstcw
jecxz
add
scas
sub
push
adc
mov
aam
ret
mov
jecxz
in
pop
out
test
mov
js
sbb
xchg
push
mov
mov
call
rcl
fimul
pop
(bad)
jae
mov
xchg
xor
and
ins
add
xlat
retf
addr16
outs
xchg
ret
fistp
jmp
ror
jmp
mov
test
stos
jp
adc
imul
sub
pushf
int
in
loopne
ss
xor
int
fsub
arpl
rcr
aad
lea
outs
inc
jae
xchg
mov
or
add
nop
cmp
fldcw
sub
lock
lods
jecxz
push
ret
mov
dec
jns
ret
add
mov
add
cmp
jae
call
jmp
scas
bound
cmp
pop
cmps
pusha
outs
inc
mov
and
cmps
aaa
xchg
out
stc
mov
sti
test
cmc
fwait
cmp
xor
cs
or
outs
lock
xchg
addr16
add
aas
pop
adc
aas
mov
and
or
mov
mov
dec
and
mov
dec
push
(bad)
ja
rcl
lock
popa
shl
rcr
mov
pop
adc
inc
dec
(bad)
std
(bad)
clc
or
sbb
lods
pop
rcr
in
(bad)
push
pop
cmp
pushf
mov
out
mov
jae
jo
and
or
mov
push
jle
mov
call
into
jp
lock
into
nop
ficom
sub
movs
push
shl
dec
jns
stc
jbe
dec
sbb
movs
(bad)
stos
shl
fwait
cwde
adc
test
imul
arpl
dec
sar
cmp
cmp
jecxz
or
push
repz
xchg
mov
cli
push
(bad)
jp
dec
leave
fiadd
clc
dec
cmps
in
xchg
retf
mov
xchg
inc
in
or
xor
mov
cmp
loopne
push
or
rdtsc
(bad)
xlat
push
push
fist
cmp
loope
xchg
pop
out
inc
push
add
xchg
jge
rcr
jmp
xchg
mov
xor
js
mov
scas
ins
sub
test
xor
sbb
dec
arpl
int
push
dec
(bad)
movs
adc
adc
ret
fstp
out
loope
adc
pop
xor
xor
push
and
xor
fisubr
out
or
and
bound
repz
retf
xchg
stc
imul
dec
pop
sub
mov
mov
push
or
inc
jle
inc
jle
add
pop
icebp
dec
pop
push
or
fld
inc
sbb
(bad)
pop
and
into
neg
js
or
mov
ins
std
xor
outs
popf
xor
push
clc
mov
push
push
mov
lods
std
ins
outs
xlat
pushf
test
inc
ja
ja
sar
push
push
xor
leave
mov
sbb
rol
cmp
stos
and
retf
add
js
rol
or
xor
jnp
mov
dec
xchg
ds
fstp
dec
push
pop
sub
add
not
gs
mov
mov
movs
test
jo
or
scas
jmp
stos
loopne
mov
mov
retf
retf
dec
out
pusha
popa
test
call
or
mov
and
adc
mov
rol
mov
fistp
jmp
cdq
das
pop
adc
add
imul
lods
or
clc
push
stos
pop
cmps
je
in
mov
and
push
lea
loope
hlt
push
(bad)
jmp
cwde
test
mov
dec
hlt
aam
pop
stos
push
and
ja
ror
ss
jmp
sub
call
and
mov
pop
sbb
ins
es
movs
xor
neg
adc
xor
inc
nop
in
fimul
or
setg
icebp
call
push
movs
les
fmul
push
repnz
inc
sti
std
jge
jbe
mov
pop
and
(bad)
lea
sbb
add
sub
cmps
aas
adc
shl
and
add
sahf
ds
jmp
xor
ins
je
arpl
mov
(bad)
sbb
movs
jns
push
jnp
push
lock
inc
inc
outs
and
jp
adc
xchg
mov
push
repz
xor
inc
xor
mov
mov
xchg
mov
retf
fdivr
or
cs
rcr
mov
inc
dec
adc
fild
cmps
push
jno
mov
scas
movs
and
cdq
icebp
ja
aaa
or
push
lods
ins
in
sbb
fwait
xor
mov
rcl
inc
aaa
inc
sub
mov
out
dec
in
es
ja
mov
div
shr
retf
retf
lahf
mov
jp
xor
je
inc
into
mov
neg
jmp
cmp
unpcklps
or
xchg
ss
pop
cmp
add
jle
sub
rcl
cmp
mov
pop
call
test
pop
inc
jle
(bad)
jl
mov
aaa
xchg
(bad)
dec
jb
cmp
add
scas
test
cmps
mov
jge
mov
xlat
aam
test
mov
inc
cmp
jb
jecxz
out
popf
dec
add
and
frstor
dec
int
ja
mov
imul
pop
test
fild
aaa
mov
fs
jmp
inc
(bad)
xor
xchg
cmps
mov
es
pop
inc
int3
enter
cmp
pop
cmp
int
sbb
jo
mov
dec
shl
lods
push
addr16
int3
cdq
sbb
xchg
mov
stc
cmp
pop
cmp
in
ror
dec
fdivr
in
sar
aam
pop
call
push
mov
push
stos
out
or
mov
movs
inc
cld
(bad)
xchg
fwait
pushf
lea
cmp
and
push
cwde
sbb
add
xor
jp
pop
mov
out
push
pop
mov
mov
adc
push
cmp
jnp
stc
xor
cmp
retf
xor
ds
bound
xchg
dec
jbe
xor
jo
fwait
cli
mov
pusha
icebp
les
ret
xor
inc
rcr
sub
ins
cmps
fst
outs
jne
bound
loopne
fst
call
js
in
call
sbb
out
imul
cdq
inc
adc
cmp
pop
iret
js
jg
and
or
xor
loope
sbb
cs
sti
movs
jns
xchg
retf
ror
lock
inc
or
xchg
aaa
and
jl
xchg
aam
add
add
scas
outs
lods
lods
out
pop
cmps
scas
pop
inc
sbb
fadd
add
div
not
adc
out
jl
jae
popf
imul
mov
pop
cmp
rol
inc
enter
shl
sbb
jl
mov
pop
or
jne
mov
xchg
rcl
or
sahf
adc
xor
adc
push
pop
push
je
cmps
cmp
fist
cmp
sub
fmul
cmp
clc
fisubr
pop
leave
cmp
mov
mov
mov
or
jmp
and
repz
cmps
mov
xor
sbb
xchg
xlat
loop
mov
mov
mov
adc
stos
mov
jle
frstor
pop
ret
and
mov
test
or
in
inc
cmp
jmp
aad
loopne
adc
addr16
add
aam
lods
adc
rcl
xor
xor
push
sbb
mov
js
(bad)
(bad)
retf
inc
adc
push
xchg
aam
out
inc
rol
cmp
xor
sbb
xlat
fwait
hlt
loope
ret
iret
aas
cmp
int
in
cmp
or
and
movs
fwait
cld
cmp
in
pop
iret
push
clc
and
pop
dec
shl
mov
or
test
fdivr
movs
sahf
lea
push
sub
xor
in
mov
mov
jbe
call
gs
fwait
sub
push
mov
pop
mov
ss
scas
imul
in
dec
push
dec
and
and
and
add
mov
inc
sub
dec
add
push
in
mov
mov
mov
push
rol
lea
adc
sub
mov
cdq
and
mov
inc
(bad)
sahf
test
or
xchg
test
sub
dec
push
mov
das
jmp
mov
pop
or
mov
movs
js
mov
jae
scas
in
adc
jge
xchg
inc
in
ret
push
push
hlt
ins
adc
movs
bnd
cmp
cmp
adc
mov
mov
dec
mov
push
jl
push
leave
jg
xchg
add
pop
mov
jp
mov
gs
neg
mov
xlat
loopne
cmps
or
sub
sbb
push
jle
iret
mov
xchg
(bad)
push
std
stos
hlt
pop
cli
adc
sbb
ret
sub
cs
sbb
and
lods
adc
push
js
(bad)
retf
mov
subps
lock
sub
mov
sub
cmp
popa
les
mov
(bad)
data16
ror
inc
lea
les
jmp
sub
out
idiv
scas
and
inc
test
dec
mov
leave
mov
cld
add
xlat
call
fs
cmp
push
enter
pop
test
ss
inc
retf
loopne
and
daa
dec
clc
popf
adc
iret
mov
mov
push
dec
in
out
push
mov
cmp
arpl
mov
sbb
int3
push
mov
adc
sahf
shl
pop
cmc
cmc
pop
out
add
cmp
sbb
lahf
jns
daa
rol
push
xchg
movs
out
jmp
(bad)
push
jns
pop
jge
xchg
loop
outs
loop
add
cld
dec
leave
sahf
add
movs
fsubr
movs
mov
mov
div
ss
mov
fs
jmp
dec
cmp
sub
xchg
jno
jno
mov
inc
xchg
jnp
adc
jl
or
repz
mov
stos
ret
inc
mov
add
jbe
push
int3
jmp
ins
adc
ret
movs
sbb
test
addr16
shr
mov
mov
dec
add
retf
push
mov
loop
outs
(bad)
loopne
adc
es
aam
(bad)
adc
pop
add
repz
pushf
jae
int
cmp
mov
xchg
dec
pop
rcl
scas
cld
outs
adc
xchg
push
inc
pushf
shr
ret
call
aad
repz
daa
or
scas
inc
popa
fwait
jmp
cmc
data16
mov
clc
movhps
leave
aad
mov
jp
xchg
mul
sub
inc
cdq
cmp
aas
es
mov
mov
mov
mov
pop
push
sti
mov
in
and
xchg
jne
pushf
or
pop
jmp
cmc
pusha
retf
pop
inc
and
sub
lds
dec
xchg
cli
not
mov
jne
out
mov
cmps
test
add
and
arpl
mov
fmul
cs
sbb
or
mov
sbb
mov
stos
or
dec
fcmovb
out
mov
push
push
mov
sti
(bad)
in
push
and
in
add
mov
pop
pop
jp
sahf
int3
jge
jp
je
fstp
lock
mov
dec
mov
loop
hlt
xchg
mov
mov
(bad)
add
(bad)
jae
adc
sti
(bad)
push
pop
add
lds
inc
aas
or
pop
outs
push
jg
call
adc
ja
push
add
(bad)
cmps
fisubr
mov
fs
rcl
mov
in
arpl
inc
loop
dec
xchg
mov
xor
cmp
(bad)
mov
mov
(bad)
data16
inc
popa
jmp
in
out
cmp
test
es
add
or
adc
mov
or
rcr
mov
push
mov
ret
xor
or
(bad)
jno
add
xor
or
mov
retf
js
adc
cmp
dec
mov
out
push
jbe
xchg
inc
xor
out
mov
je
test
pop
and
cmc
xchg
in
jnp
sub
out
jmp
test
lods
cs
retf
vmovaps
add
repz
jns
jmp
sbb
inc
fxch
jle
push
out
mov
sbb
aad
inc
ds
push
test
mov
les
mov
mov
cmp
mov
sub
repnz
fmul
rol
mov
ds
stos
fdiv
cmp
imul
cli
fild
cdq
pop
add
imul
dec
cld
sbb
push
sub
xchg
pop
faddp
xor
mov
mov
gs
add
mov
inc
jae
xlat
cdq
adc
outs
sahf
cmp
inc
das
mov
xor
dec
pop
xchg
stos
xchg
pop
data16
and
or
cmc
ds
cli
push
test
aam
mov
xchg
sbb
push
push
nop
mov
imul
and
out
jle
lods
outs
fs
cld
aaa
inc
push
adc
dec
in
in
fsub
scas
or
pop
or
adc
cdq
aad
stc
and
aad
mov
aas
movs
scas
rcr
push
cmp
and
xchg
fcomp
lahf
fmul
ja
pmaddwd
mov
cdq
xchg
add
fistp
jl
daa
dec
cmp
dec
mov
or
adc
inc
test
nop
hlt
mov
mul
dec
cdq
jb
in
scas
lods
bound
(bad)
fcom
cs
cmc
adc
mov
cmp
xchg
sbb
idiv
mov
pop
fucomp
cmc
dec
popa
test
sbb
xor
jno
adc
jmp
pushf
scas
xchg
dec
out
mov
mov
mov
jmp
push
mov
stos
mov
in
daa
sbb
out
dec
lods
adc
pop
loop
pusha
std
mov
cmp
pop
cld
inc
mov
sbb
cmps
mov
mov
es
lods
jecxz
iret
ret
and
lods
imul
leave
cmc
xchg
dec
dec
cmc
push
popa
pop
xchg
icebp
scas
sbb
mov
push
scas
shl
cmps
push
icebp
hlt
adc
repnz
ins
in
into
mul
xchg
lods
mov
sahf
push
mov
jnp
or
xor
mov
and
movs
cmps
cld
mov
aas
lds
xchg
push
fsubr
inc
icebp
std
popf
push
daa
inc
dec
xchg
or
mov
mov
mov
mov
add
pop
popa
fild
sbb
mov
data16
addr16
jl
mov
mov
out
push
cmp
shl
pop
cmp
cwde
mov
add
popa
pop
sub
push
das
inc
fiadd
retf
imul
inc
outs
mov
sbb
hlt
call
or
in
stos
jne
push
pop
inc
fdiv
(bad)
inc
call
ret
mov
arpl
movs
or
cld
jne
jmp
pop
fidivr
out
lods
fisttp
mov
mov
jmp
jno
mov
cmp
jne
push
(bad)
popa
pop
jge
shl
inc
hlt
push
cmps
dec
push
sbb
daa
pop
push
jo
add
and
jae
lahf
ins
pop
sbb
or
ins
sub
sbb
inc
mov
scas
sbb
jmp
scas
sbb
xchg
dec
pop
and
fwait
dec
popa
or
hlt
sbb
cmp
jle
xchg
outs
pop
imul
and
or
jmp
sbb
pop
into
repz
rcl
mov
stos
(bad)
xchg
sbb
mov
push
int3
or
in
xchg
fistp
daa
cs
imul
repz
mov
cmps
in
test
into
addr16
into
xor
sub
test
scas
pop
xchg
add
repnz
and
push
lds
scas
es
xor
shr
mov
mov
out
leave
aaa
lea
iret
fwait
cmps
and
pop
xlat
sbb
push
pop
add
inc
outs
lea
pop
test
push
dec
outs
add
out
and
cwde
mov
in
out
inc
ret
add
and
ror
icebp
hlt
cmp
or
mov
and
pusha
test
cld
stos
js
enter
addr16
push
stc
hlt
mov
pop
jmp
(bad)
cmps
push
cmp
cmp
jmp
retf
pop
mov
hlt
(bad)
in
jmp
clc
xchg
push
push
mov
je
or
xlat
mov
fwait
push
mov
sub
enter
fdiv
sbb
dec
mov
add
xor
mov
and
ins
sub
movs
pop
jnp
loope
dec
div
ins
xchg
ret
inc
pop
neg
jle
outs
test
add
mov
push
sub
cmp
(bad)
repnz
in
ret
shl
call
add
or
aam
mov
adc
pop
aas
sub
add
popa
fild
sub
call
(bad)
stc
sahf
and
loopne
and
mov
cmc
push
outs
and
sub
movs
int
in
inc
popa
mov
ror
or
popa
(bad)
jno
push
(bad)
data16
ja
frstor
mov
sbb
jb
adc
div
adc
int3
dec
fsubr
retf
ror
jecxz
je
fbld
stc
mov
xor
sub
enter
enter
test
and
(bad)
out
ss
aam
mov
and
sub
mov
and
fisubr
xchg
rol
add
push
out
lods
daa
cmp
loop
add
int
and
shl
add
bndstx
add
or
jle
add
rcr
nop
sub
pop
fstp
ret
cmps
(bad)
ret
loop
and
pop
fimul
dec
inc
(bad)
xchg
inc
jp
aad
adc
add
aad
or
cmp
or
jmp
cli
mov
cmc
push
cmps
pop
out
push
push
mov
xchg
mov
out
ret
arpl
rol
and
fcmovbe
js
and
mov
jl
pop
or
xor
dec
sbb
retf
and
in
adc
inc
movs
imul
aas
or
and
daa
fstp
dec
jae
mov
aam
sbb
jmp
repz
mov
out
dec
loopne
int3
(bad)
pop
imul
mov
xor
pop
and
jmp
fld
iret
(bad)
repz
push
add
sbb
bound
mov
push
jb
clc
stos
scas
retf
push
sub
mov
std
aad
pop
and
mov
mov
and
into
popa
push
push
inc
lock
nop
inc
pop
nop
adc
and
(bad)
lock
fs
jmp
and
mov
xor
mov
sub
les
les
cli
jno
rol
inc
or
stos
and
push
pusha
movs
aam
in
sub
jmp
pop
fimul
cmp
mov
lods
int
cwde
(bad)
mov
jmp
(bad)
cmp
rol
mov
or
dec
outs
dec
push
cdq
je
mov
inc
daa
sti
addr16
push
inc
inc
es
jg
dec
js
xor
sbb
adc
adc
aam
(bad)
in
sbb
inc
jo
in
ret
mov
fimul
push
pop
xor
add
jmp
leave
and
inc
adc
pop
mov
push
call
dec
mov
cmc
repnz
sub
push
cmp
shr
popf
sahf
cmp
(bad)
mov
jo
pop
mov
sub
mov
loopne
test
adc
out
ins
dec
jo
mov
call
aas
pop
ret
outs
leave
fisubr
sti
je
dec
cmps
(bad)
jmp
fucomip
fimul
mov
out
(bad)
js
inc
dec
pop
push
jnp
nop
fincstp
(bad)
jl
ins
mov
int
rol
int3
adc
or
ror
es
xor
inc
xor
jne
push
and
out
pushf
mov
push
rcr
sbb
sub
push
jno
cmp
pop
enter
out
fnstsw
push
inc
jle
les
xor
pop
mov
sahf
and
cld
add
in
loopne
cmp
cmp
outs
dec
je
std
pop
sar
sub
push
inc
dec
lds
cmps
fstp
push
int
pop
rcl
pop
pop
jne
mov
(bad)
popf
shl
jecxz
adc
das
rol
cdq
loop
ret
clc
add
rol
jae
xor
sub
pop
ror
dec
cmp
cmp
mov
inc
ds
or
or
mov
(bad)
stc
and
jnp
dec
bnd
cmps
call
add
mov
aaa
shl
rcr
loop
or
adc
jo
xchg
xchg
ss
in
ins
xlat
adc
add
mov
xor
cmp
push
mov
dec
jmp
xchg
mov
mov
daa
and
push
mov
push
addr16
dec
cli
add
pop
fwait
imul
scas
in
not
jno
popf
adc
mov
or
int
(bad)
xor
sbb
loop
sub
jmp
mov
mov
dec
jp
mov
and
xchg
loop
jg
bswap
jecxz
sub
into
mov
or
cmp
fadd
and
cli
fld
bndldx
fdiv
fiadd
adc
dec
jp
push
mov
lahf
loope
adc
ins
out
inc
repnz
ret
rol
(bad)
jecxz
dec
in
sub
stos
mov
mov
retf
hlt
scas
mov
hlt
xchg
mov
xor
xadd
cmps
push
mov
js
mov
or
lahf
(bad)
fnsave
push
jb
inc
ficom
rcr
jmp
fistp
xchg
es
jge
nop
repnz
xchg
mov
inc
fs
push
call
fwait
ss
dec
push
test
repz
outs
add
cmp
jno
call
dec
dec
ffree
mov
data16
int3
and
dec
repz
adc
dec
adc
nop
pop
dec
or
mov
(bad)
and
xor
mov
push
and
jmp
dec
xchg
jmp
sbb
lea
cs
push
int
mov
pushf
xor
adc
stc
push
jecxz
inc
jecxz
jle
outs
adc
mov
dec
imul
add
jl
ror
jecxz
rol
mov
push
push
inc
sti
cli
xor
inc
mov
and
jns
jns
mov
icebp
lds
xchg
sub
jns
jbe
jl
pop
mov
push
add
push
push
adc
dec
retf
mov
dec
jo
mov
sub
cmp
push
int3
loope
dec
or
adc
icebp
lock
lahf
test
mov
jb
push
sub
xchg
pop
and
inc
xor
shl
xor
stos
and
std
add
lds
iret
or
mov
mov
or
and
add
loop
dec
and
cs
xchg
(bad)
xor
mov
retf
syscall
pop
push
add
in
je
in
dec
aas
out
imul
arpl
lods
fsubr
cmovo
test
sub
sbb
or
cmp
lods
lods
dec
inc
rdtsc
pop
add
fiadd
comiss
fst
mov
pop
or
imul
fwait
adc
xlat
mov
test
cwde
or
mov
test
lds
les
cs
ins
or
xchg
add
push
cmp
inc
mov
jne
sub
pop
aad
stc
sahf
les
imul
sti
js
jmp
sbb
sub
sub
jbe
cmps
loope
nop
enter
sbb
ins
inc
ficom
pop
adc
test
jg
mov
div
test
sub
out
test
cmp
jg
jmp
jge
movs
mov
aam
xor
push
dec
xor
pop
dec
mov
mov
xchg
mov
bound
cld
xchg
and
addr16
add
push
adc
hlt
push
stc
mov
icebp
jl
jecxz
jbe
rcr
xchg
inc
(bad)
(bad)
mov
jl
dec
sbb
(bad)
enter
in
mov
mov
stc
cmp
mov
mov
push
mov
dec
mov
mov
adc
loopne
in
popf
sbb
jnp
movs
imul
inc
ja
loopne
dec
jno
int
mov
xchg
icebp
cmp
jecxz
in
adc
sub
ins
test
xor
or
push
(bad)
cmc
mul
stc
(bad)
inc
clc
pop
repnz
les
or
or
jb
inc
or
and
add
ins
push
mov
lods
pop
repz
aas
mov
cmp
call
shl
cwde
pop
xor
cmp
sbb
sahf
add
fist
je
mov
cmps
or
lods
retf
and
jmp
and
arpl
popa
jecxz
aaa
das
into
dec
mov
stos
inc
jmp
sbb
outs
inc
push
dec
sbb
sbb
ret
outs
sub
adc
push
inc
cdq
xchg
sti
ins
mov
sub
ins
fsubr
jno
hlt
inc
pop
imul
jle
xchg
mov
and
in
xor
ja
dec
call
jge
stc
lods
jne
sahf
jo
push
loopne
sub
test
cld
retf
push
mov
jecxz
inc
mov
xchg
shl
in
ins
leave
inc
out
jne
jg
ins
fwait
dec
adc
dec
out
xchg
sbb
adc
jmp
cmps
dec
cli
sub
and
test
scas
push
mov
sub
out
test
pop
stc
cmp
cmps
mov
enter
mov
pop
sbb
pop
mov
mov
jle
sub
cmp
addr16
lods
std
push
fild
or
cmp
mul
jne
ret
cmc
js
xor
loop
test
adc
ds
jecxz
xchg
ficom
jmp
call
ss
mov
xchg
inc
cmp
jno
xchg
and
inc
pop
popa
jne
xlat
mov
mov
(bad)
scas
push
push
fsubr
mov
addr16
cmps
mov
movs
and
add
adc
(bad)
arpl
jo
out
cld
adc
fst
fucomip
je
jo
dec
jl
popf
imul
xchg
xor
rol
stos
fsubr
mov
push
jne
in
addr16
push
or
rcr
cmps
add
and
inc
pop
sbb
dec
or
dec
test
mov
inc
mov
push
mov
rcl
cmps
pop
loope
lock
dec
pop
imul
daa
add
call
dec
mov
mov
retf
js
add
jecxz
in
fist
aad
imul
add
and
fisttp
inc
iret
pusha
xor
mov
pusha
xchg
xchg
in
add
dec
loope
cmp
jnp
test
xchg
popf
pop
jno
inc
jne
cmps
outs
pop
cmp
jae
jae
out
stos
inc
in
dec
or
push
mov
ss
inc
xor
and
pop
push
rol
mov
in
jg
stc
mov
mov
into
sbb
call
inc
fmul
movs
ja
out
(bad)
out
arpl
int3
in
dec
mov
stos
lock
push
fmul
lea
mov
(bad)
pop
jle
mov
shl
idiv
adc
or
rep
popa
sub
test
jmp
and
mov
add
sbb
repnz
pop
aas
out
lods
lods
push
xor
mov
test
(bad)
int
mov
mov
jbe
lahf
push
ins
sbb
sub
push
fist
inc
std
add
or
cli
mov
push
fisub
scas
inc
call
(bad)
outs
pop
or
pandn
fild
jbe
jne
out
aam
int
cmp
or
push
jae
mov
fcmovbe
xor
dec
sub
jbe
sbb
pop
retf
mov
mov
mov
pop
outs
adc
mov
mov
sahf
and
mov
xchg
scas
fimul
mov
inc
sbb
push
test
sub
mov
adc
arpl
jge
add
loopne
pop
dec
out
in
rcl
icebp
adc
popf
add
add
mov
or
pushf
mov
mulps
call
mov
or
cs
fmul
je
add
nop
in
loope
sbb
push
jmp
or
mov
jmp
sub
outs
cs
jmp
jb
les
dec
sbb
mov
push
pop
jp
or
pop
mov
leave
fadd
adc
ficom
gs
wbinvd
sub
lea
xchg
repnz
add
fadd
add
inc
out
lahf
sub
dec
mov
sbb
inc
or
pop
in
(bad)
mov
or
mov
loopne
in
repnz
imul
or
inc
vaddsubps
mov
jge
xchg
daa
imul
fst
mov
jae
stc
out
sbb
jge
push
ins
inc
jg
cmp
cs
lods
or
ins
xor
jg
and
arpl
xchg
xchg
adc
pop
mov
mov
clc
push
mov
sbb
call
and
and
rcr
in
cmps
mov
mov
fnstsw
call
and
lock
add
inc
jp
(bad)
(bad)
or
xchg
mov
lods
mov
dec
sar
test
mov
add
cmp
mov
fwait
lock
cmp
mov
dec
test
imul
pop
pop
mov
xlat
sub
xor
mov
sbb
inc
cmp
lods
imul
das
cmps
rcr
pop
or
inc
adc
push
aam
scas
mov
mov
xor
or
mov
scas
je
cdq
repz
mov
sub
push
gs
sub
leave
push
das
es
and
xchg
push
pop
out
mov
ja
push
jne
leave
ins
adc
add
fisttp
gs
add
rcl
and
mov
repnz
repz
stos
call
jb
dec
mov
mov
mov
call
fimul
mov
mov
pop
mov
cdq
push
dec
adc
mov
xchg
mov
popa
fcomip
sub
popa
lods
add
in
jns
and
in
jmp
inc
jg
inc
dec
fistp
rol
mov
mov
mov
or
fld
pop
sub
stc
pop
inc
pop
call
adc
sub
xchg
sbb
iret
xchg
pop
imul
mov
ja
leave
js
cmp
lea
ret
xor
mov
push
sub
loopne
push
fbld
push
cmp
gs
add
xor
pusha
cmps
sbb
inc
mov
mov
cmps
imul
sti
jmp
fcomp
mov
push
or
fimul
adc
lods
aas
outs
enter
ss
or
xchg
test
jp
mov
scas
(bad)
(bad)
jp
lea
icebp
cdq
ins
add
or
jecxz
adc
cmp
sbb
(bad)
xchg
data16
xchg
mov
pop
xor
jp
(bad)
pop
jge
outs
and
add
repz
cmps
xor
mov
mov
cmp
and
cmp
mov
mov
dec
clc
mov
scas
mov
js
push
sub
xchg
outs
adc
sbb
out
nop
xor
dec
cmp
cwde
jns
cmp
push
sahf
jb
push
mov
lods
push
sbb
std
addr16
mov
into
jp
cmps
jmp
call
mov
add
ins
test
hlt
push
cld
in
lds
mov
cmp
and
jl
loope
fld
pop
mov
add
test
cmp
jg
mov
lahf
jl
shl
and
sbb
aas
jp
mov
shl
(bad)
adc
mov
cmp
loope
pop
xor
sar
push
ds
into
popf
xor
xor
loop
aad
cmp
(bad)
jmp
xchg
push
sub
ret
out
ins
push
and
in
icebp
jo
and
add
push
sbb
ret
mov
mov
mov
xchg
jno
adc
popa
mul
test
inc
xchg
loop
cld
adc
daa
dec
and
ret
shl
cld
xchg
je
std
cs
jge
dec
mov
dec
cmp
in
(bad)
add
mov
lods
add
popf
pop
adc
das
sub
call
das
or
push
mov
cmp
mov
test
adc
shl
mov
sbb
pop
in
fimul
test
push
mov
movs
add
fistp
call
sbb
(bad)
sbb
push
mov
loope
mov
fcom
xor
aad
sbb
inc
jns
sbb
jmp
xor
pop
mov
mov
jb
fwait
imul
jo
imul
adc
daa
push
in
jno
adc
int3
sub
addr16
pop
rep
(bad)
mov
aad
dec
outs
mov
adc
dec
push
inc
mov
jecxz
pop
inc
pop
pop
ins
repnz
ret
mov
fisttp
adc
dec
mov
add
mov
and
imul
cmp
daa
dec
xor
pushf
cmp
popf
and
pop
std
mov
dec
mov
push
push
mov
sub
mov
fist
(bad)
xlat
(bad)
push
fdivr
or
into
retf
dec
and
inc
stc
(bad)
pop
aaa
cmc
ins
xor
addr16
cmp
fnsave
int
fadd
fcmovnb
push
jecxz
adc
pusha
(bad)
aam
jmp
popa
mov
xor
les
xchg
fstp
jae
fwait
addr16
xor
mov
push
cmp
hlt
pop
pop
jae
push
inc
dec
int3
int3
dec
(bad)
ins
jecxz
sbb
cwde
add
pushf
jp
stc
sub
push
mov
out
mov
jg
cld
xlat
pushw
fsub
dec
mov
dec
sbb
fmul
xor
cmp
ins
aam
pop
or
fadd
jecxz
fsubr
cdq
inc
or
lods
cdq
cmps
out
fcom
mov
pop
imul
mov
pop
and
lahf
mov
ror
push
cmp
outs
movs
sbb
ror
inc
inc
ja
xchg
leave
cld
test
mov
ret
out
push
das
add
lock
mov
out
gs
scas
cmp
mov
sbb
mov
jb
lods
scas
jb
mov
retf
inc
and
call
pop
adc
sbb
xchg
xchg
ins
and
js
sub
pop
jp
es
xor
add
mov
mov
xor
(bad)
adc
sbb
outs
out
sub
fadd
cdq
inc
and
pop
loopne
dec
jbe
(bad)
and
call
mov
fisubr
mov
imul
test
sub
jo
(bad)
cmps
mov
or
mov
lods
push
imul
jae
or
repnz
cmp
push
pop
push
mov
bound
mov
sti
mov
lock
xchg
jle
sub
mov
cmps
mov
push
push
cmp
xchg
clc
(bad)
mov
xchg
adc
mov
jmp
ins
xchg
fmul
out
ins
aaa
ja
imul
fisttp
cmp
or
jnp
push
fisttp
mov
daa
adc
stos
xor
mov
aaa
adc
(bad)
imul
movs
sbb
aad
data16
cmp
(bad)
lods
arpl
(bad)
mov
xchg
mov
and
or
adc
fldlg2
mov
pop
lds
iret
(bad)
retf
(bad)
inc
fdivr
std
push
ja
(bad)
fistp
sbb
add
cmp
xor
out
fidiv
repz
test
test
or
jge
add
inc
mov
jno
adc
or
aam
push
xor
or
and
and
int
arpl
outs
popa
(bad)
neg
test
pop
inc
cmp
stc
neg
jmp
or
repz
cwde
inc
cmp
push
out
cmp
jnp
add
jnp
or
ret
dec
test
aaa
sar
mov
push
icebp
mov
scas
push
jge
mov
out
pop
cmp
push
outs
rep
sbb
mov
mov
inc
test
scas
jl
stos
inc
rol
nop
movs
std
not
ret
sub
sub
pop
or
cdq
fwait
icebp
or
mov
adc
sar
pop
(bad)
xchg
push
in
push
dec
push
or
sub
push
xor
nop
mov
cmps
fs
inc
pop
cmp
adc
int
sbb
fs
xor
pop
in
add
cmp
mov
adc
xchg
push
sbb
jnp
scas
pop
shl
push
sti
xchg
cmps
hlt
xor
mov
or
and
test
imul
pop
clc
xchg
movs
sbb
pop
cmp
sub
cld
xchg
(bad)
push
sub
pop
cmps
jne
cli
xor
mov
xchg
aad
mov
add
fmul
mov
jecxz
stos
cmp
and
in
push
mov
and
dec
(bad)
aaa
mov
push
fstp
inc
pop
mov
or
push
inc
std
xchg
or
les
ins
adc
xchg
jns
fdivrp
mov
adc
dec
push
mov
inc
mov
cdq
retf
ins
daa
adc
jecxz
jno
fldcw
dec
push
mov
mov
push
lea
jbe
fstp
sub
clc
and
or
push
pop
movs
sub
pusha
rol
add
stos
pop
lods
mov
pop
(bad)
call
retf
in
mov
sbb
into
xor
inc
addr16
in
repnz
mov
xchg
cmp
fnsave
xchg
(bad)
mov
jmp
imul
push
jo
inc
loop
adc
into
add
dec
sbb
popf
push
adc
jl
jne
xor
and
sbb
into
push
popf
jp
xor
mov
mov
sahf
outs
add
add
leave
sbb
push
aad
out
(bad)
and
test
add
mov
pop
dec
pop
add
add
mov
xor
jg
add
jmp
(bad)
(bad)
push
push
adc
nop
push
movs
or
inc
in
xchg
cmp
xchg
(bad)
ds
pushf
mov
shl
sub
pop
sahf
dec
jmp
push
(bad)
in
cmps
imul
sub
shl
(bad)
push
stc
fs
cmps
ja
es
daa
or
sti
xor
lahf
addr16
or
xchg
or
nop
xor
cmp
test
jns
and
packssdw
and
mov
icebp
sbb
push
scas
add
cs
loop
or
or
cmc
jmp
stos
sub
sbb
xor
jne
rol
or
(bad)
cmp
scas
jne
mov
stos
jmp
addr16
pop
test
retf
mov
mov
inc
jge
push
sub
ins
inc
jae
repz
loopne
or
mov
push
push
inc
mov
add
faddp
sub
xchg
jg
and
cmps
and
add
sbb
ffreep
push
and
gs
ret
daa
jl
in
mov
mov
dec
mov
jae
in
fidivr
mov
(bad)
xchg
push
mov
mov
sub
cmp
pop
xor
out
out
mov
xor
out
ja
cmps
cmc
and
or
xor
adc
dec
pushf
sub
mov
stc
cs
mov
sahf
mov
aas
xchg
jbe
jo
mov
inc
jae
pop
cmp
fwait
bound
push
mov
mov
pop
pop
(bad)
mov
pop
sub
pop
daa
(bad)
pop
xor
jg
adc
push
in
pop
pop
ud2
repnz
hlt
(bad)
cdq
scas
(bad)
xlat
add
call
xchg
shr
std
adc
xchg
jo
scas
loopne
in
mov
iret
mov
sbb
pop
push
inc
cmp
xor
jl
inc
pop
in
fs
scas
ss
sub
into
stos
cmp
inc
fldenv
adc
cmps
mov
out
(bad)
cmp
ret
xchg
cld
das
retf
das
ins
outs
popf
add
sbb
sbb
stos
mov
mov
lahf
imul
mov
push
or
adc
xor
dec
cld
mov
sub
mov
clc
mov
idiv
out
lock
leave
stos
test
shl
pop
push
push
cmp
std
test
sub
aas
aad
sbb
in
icebp
push
pop
dec
add
dec
mov
add
xor
out
pop
inc
xor
jmp
sbb
arpl
cmps
xor
pop
inc
test
and
sbb
sub
rol
xchg
jg
cmp
pop
ins
or
cs
add
repz
jne
push
and
sbb
pop
sahf
mov
dec
cli
sub
nop
ret
push
stc
sbb
and
dec
xor
cmp
xor
and
sbb
or
cmc
push
mov
les
imul
mov
jmp
xchg
cmps
and
js
and
mov
hlt
cmp
mov
xor
pop
inc
and
mov
inc
jmp
pop
pusha
xchg
or
push
adc
repnz
sub
test
xchg
call
mov
call
fwait
in
das
push
cwde
ss
xchg
fst
add
fmul
inc
ss
gs
(bad)
in
cmc
cmp
nop
fdiv
ror
fisttp
or
mov
cwde
jnp
fwait
inc
pop
loopne
mov
adc
sub
add
mov
mov
pop
cmps
xchg
xchg
pusha
jmp
test
xchg
xchg
jg
pop
call
aam
scas
jne
fistp
loope
jne
xor
cmps
sub
dec
pop
test
mov
cmp
dec
vandpd
cmc
jbe
adc
and
addr16
sub
push
pop
adc
sbb
cmps
and
fdiv
fdivr
into
shl
outs
jmp
sub
call
pop
jne
add
fld
and
in
and
mov
scas
xchg
pop
xchg
pop
cdq
inc
pusha
icebp
(bad)
imul
mov
cmp
psubusw
and
or
test
das
and
rcr
cs
jl
clc
movs
mov
cmp
xlat
out
sub
imul
popa
pop
push
mov
cmp
adc
je
movs
mov
test
loope
and
je
xor
test
adc
xor
mov
dec
sti
push
dec
je
lahf
fiadd
push
in
add
cmps
mov
xchg
hlt
test
mov
jp
xchg
sbb
out
adc
cmp
or
or
pusha
push
push
mov
jno
xlat
shr
retf
jmp
nop
sub
mov
xchg
fst
enter
adc
xchg
push
mov
mov
retf
add
jo
(bad)
clc
jge
xor
mov
jmp
cmp
xor
mov
or
mov
and
popa
jae
mov
jge
jl
mov
add
hlt
(bad)
retf
or
jl
dec
pop
fwait
pop
xchg
inc
xor
jg
jbe
and
lods
cmp
jo
int3
xor
cmc
jmp
imul
aaa
in
std
inc
xchg
cmp
dec
rcr
pop
retf
out
dec
mov
test
es
outs
sub
jne
and
daa
sub
std
outs
cmp
and
xor
add
xchg
and
dec
fld
push
cmp
mov
mov
xor
not
fsub
ins
push
(bad)
es
mov
test
cmp
enter
mov
push
mov
sar
push
adc
in
dec
or
mov
mov
call
gs
clc
(bad)
hlt
mov
pop
ds
xchg
ror
rcr
js
out
add
sub
bswap
mov
add
arpl
(bad)
dec
or
mov
into
sbb
inc
in
mov
retf
sbb
fidiv
cld
jne
enter
lds
mov
jge
xlat
ret
xchg
bnd
ror
aam
pop
arpl
jl
push
inc
dec
fistp
xlat
movs
sbb
sub
daa
jecxz
mov
sub
or
scas
out
mov
push
adc
pop
push
jl
fmul
pop
retf
bound
cs
xchg
popf
sbb
or
retf
xor
sbb
cmc
add
inc
and
sar
mov
out
xor
push
push
jae
cli
cwde
mov
hlt
cmps
cld
aam
cmp
jnp
dec
xchg
loopne
bound
(bad)
stos
dec
enter
pusha
cwde
js
dec
shl
dec
dec
jns
pop
xchg
outs
in
daa
xorps
pusha
sbb
mov
jl
and
sbb
fwait
sbb
or
fcomp
loop
(bad)
in
repnz
movs
or
jo
loop
(bad)
movs
xor
sub
jmp
jge
xor
loop
clc
ds
pusha
out
cmps
ja
fiadd
jns
dec
jmp
rol
shl
bound
dec
mov
out
xlat
int
mov
mov
xchg
ds
movs
mov
stc
mov
jg
jmp
clc
mov
inc
jmp
retw
cwde
ja
int
test
jmp
xlat
mov
jne
or
xor
test
outs
inc
mov
pop
add
(bad)
out
dec
pop
cld
jnp
test
gs
jge
out
dec
mov
jmp
std
popa
jl
fst
pop
outs
int3
mov
shl
cmp
loop
jnp
test
mov
mov
iret
jae
and
daa
icebp
fwait
scas
dec
cld
(bad)
xor
test
dec
cmp
sbb
mov
cmp
pop
jle
and
fmul
push
(bad)
out
dec
jne
psadbw
fwait
or
xor
xchg
dec
fisub
cs
lods
neg
inc
mov
int
(bad)
dec
ret
fcmovb
jb
ins
xchg
sbb
cmps
xchg
int
push
and
push
jl
bswap
pop
jg
test
sahf
sub
pop
jb
mov
test
in
in
sbb
mov
shl
jge
push
ins
ja
add
push
test
test
js
jg
mov
push
inc
xchg
or
or
gs
sub
mov
arpl
inc
xchg
and
std
jl
pop
enter
pop
std
cs
(bad)
mov
popa
dec
xor
std
aam
ins
adc
xchg
jne
stos
mov
cmp
mov
leave
xor
cmp
xor
jg
jmp
xor
push
pop
retf
add
ja
retf
mov
mov
gs
pop
fdiv
pop
mov
mov
and
xchg
gs
(bad)
dec
add
mov
lock
das
sti
sar
adc
dec
pop
call
add
mov
adc
xchg
add
in
mov
(bad)
push
or
mov
adc
dec
sub
inc
pop
or
mov
pushf
xchg
sbb
aaa
call
dec
mov
pop
lds
(bad)
mov
cli
mov
jno
nop
rcl
jmp
pop
pop
pop
pop
jmp
xlat
aaa
cmp
call
cwde
cmp
pusha
jl
js
mov
and
mov
mov
or
add
mov
jl
das
lock
fdiv
test
push
sub
jle
jmp
pop
sub
cmps
sbb
pusha
sbb
pop
jns
movs
mov
daa
into
mov
inc
les
mov
xchg
aam
push
movs
xchg
add
repnz
inc
push
stos
sbb
jb
fisttp
sbb
dec
popa
ret
cmp
mov
or
mov
out
or
es
ds
ret
gs
pop
adc
lds
iret
cmp
jecxz
push
xchg
pushf
fisttp
add
mov
scas
(bad)
push
pop
mov
and
xchg
dec
cmp
daa
mov
mov
adc
int3
nop
sub
xor
out
add
ja
xor
sub
(bad)
(bad)
jl
xchg
dec
jbe
pop
repnz
dec
lea
dec
cmc
mov
inc
into
ja
dec
jae
ds
dec
lods
and
jg
iret
jge
(bad)
dec
ret
aam
or
mov
xlat
cmp
fidivr
inc
jae
std
mov
push
lods
push
xchg
mov
movs
sub
pop
or
inc
adc
add
push
jl
test
sti
into
and
idiv
out
xlat
pop
cmp
or
loop
das
lea
adc
push
out
jmp
sub
sbb
adc
arpl
shl
ret
mov
mov
fsub
(bad)
mov
iret
adc
adc
test
imul
arpl
repz
add
pop
mov
cdq
fisttp
(bad)
ins
xor
fidiv
mov
stos
cmp
xchg
mov
jp
popf
jns
cs
xchg
adc
mov
and
(bad)
std
sub
dec
adc
(bad)
fsub
mov
inc
lahf
rol
push
je
adc
int3
add
sbb
or
add
imul
out
mov
pop
imul
call
add
stos
mov
dec
cmp
jbe
ret
test
cmp
jae
outs
cli
sbb
jecxz
cwde
out
popa
js
sar
jmp
out
mov
gs
enter
jno
ss
fwait
addr16
pop
or
adc
test
loopne
jns
ficom
pop
leave
hlt
dec
mov
not
es
mov
arpl
dec
(bad)
lods
sahf
fsub
in
and
xchg
adc
push
in
call
add
and
or
push
in
in
mov
mov
push
add
pop
adc
push
bound
retf
scas
aas
jnp
pop
sahf
cmp
pop
fidiv
shr
out
push
icebp
pushf
dec
fsubr
sbb
jl
mov
int3
mov
sbb
adc
xchg
mov
and
xchg
add
stos
push
mov
lds
pop
adc
aas
mov
sbb
mov
ds
ja
(bad)
mov
(bad)
mov
add
sbb
shr
lods
mov
and
and
xor
iret
sahf
(bad)
push
dec
fisubr
test
xor
jmp
adc
inc
movs
je
sub
mov
iret
xor
pop
pop
scas
mov
mov
xchg
aas
sbb
adc
pop
cld
les
les
cmp
push
mov
sar
pop
sub
adc
aad
and
cmp
mov
mov
rcl
jecxz
inc
push
fwait
mov
pop
fcomp
add
outs
jae
xor
push
fldcw
cmp
add
or
loope
fs
out
into
cmps
xchg
jl
cs
sbb
repz
and
push
cmp
stc
jmp
mov
pushf
test
dec
mov
popa
outs
add
adc
and
fsin
cmp
mov
arpl
lahf
mov
push
jmp
jnp
adc
push
jae
or
fist
dec
mov
jg
cmp
pop
cmp
mov
test
out
add
jb
dec
fidivr
enter
in
cld
xchg
popf
and
push
mov
daa
ins
repz
stc
add
(bad)
loopne
icebp
sbb
lock
xchg
outs
mov
sub
inc
lods
std
lods
sbb
out
mov
push
sbb
xchg
sbb
lock
lods
cdq
cmp
mov
popa
ins
push
sub
shr
daa
fidiv
js
out
lods
sbb
sbb
jae
or
cmp
sbb
mov
fadd
adc
sub
shl
adc
pop
inc
cmps
mov
xor
jae
adc
scas
hlt
outs
xor
cmp
inc
xor
cmps
dec
pop
pop
and
pop
mov
xchg
leave
scas
dec
pop
movs
call
mov
push
mov
push
mov
stos
jle
cmp
push
add
add
repz
scas
and
sub
popf
pop
xor
xchg
rsqrtps
cdq
call
dec
sub
cmp
aam
ret
mov
test
add
leave
and
outs
push
add
pop
adc
push
xor
stos
lock
cmp
nop
rcl
sahf
out
fild
stos
cmp
push
test
adc
sbb
repz
cmp
pop
add
jae
jbe
call
in
cs
sub
push
mov
jns
jmp
sub
int
sar
(bad)
xor
fimul
out
xchg
cmp
dec
cmc
inc
cmp
jno
imul
jns
(bad)
pminsw
scas
xchg
cmp
adc
dec
aaa
or
and
sub
sub
push
push
aam
ja
push
out
jecxz
inc
fldcw
mov
out
adc
(bad)
pop
cmp
out
sti
sti
(bad)
lahf
add
in
adc
add
pop
ror
adc
out
mov
lahf
mov
fidivr
stc
jne
sub
int3
and
jle
sbb
jbe
out
cmp
pop
lds
mov
and
sbb
sti
or
aam
loopne
outs
(bad)
aad
inc
movs
and
and
dec
(bad)
stc
or
mov
movs
mov
xor
cwde
lods
(bad)
div
cmc
clc
dec
rcr
dec
mov
leave
jl
lea
cmp
cwde
mov
mov
add
inc
aam
nop
jl
fcom
mov
jmp
das
cmp
mov
xchg
rcl
ret
call
mov
cmp
jnp
inc
jo
mov
push
fmul
xchg
sub
fdivr
push
sti
in
leave
ins
icebp
movs
adc
jg
sti
in
bound
mov
ror
mov
xchg
and
pop
dec
aas
lods
adc
pop
add
adc
cmp
cmp
les
iret
retf
cmc
cmp
xchg
sub
in
enter
dec
xchg
adc
in
ret
pop
into
jmp
push
outs
out
das
mov
cmp
xchg
cmp
sbb
nop
daa
(bad)
jecxz
push
repz
lds
add
xor
fsubr
movs
repz
jg
enter
xchg
sub
mov
xor
mov
dec
ds
repz
sbb
jl
call
je
adc
(bad)
in
clc
jmp
mov
sbb
sbb
xor
test
jo
das
and
jne
sbb
dec
jmp
imul
mov
adc
cmp
and
sub
jnp
cli
push
inc
ds
push
icebp
jae
jecxz
loop
test
sub
(bad)
push
scas
sub
pop
fld
je
iret
jns
in
out
and
shr
sahf
rcr
leave
xor
sbb
pop
pushf
pushf
fisttp
movs
pop
pop
mov
jecxz
paddw
add
jg
fnstenv
mov
fwait
cmp
ret
scas
jp
sbb
jge
jge
push
shl
(bad)
or
ret
push
pop
les
lea
scas
retf
mov
repz
fdivp
dec
fstp
fwait
pop
mov
or
ins
mov
fwait
mov
push
fcom
cld
and
mov
mov
xor
mov
jp
mov
clc
popa
(bad)
mov
adc
push
je
scas
cmps
call
push
inc
or
sub
or
jno
inc
das
adc
lds
cmp
fidivr
adc
push
xor
mov
imul
in
mov
pop
mov
cmc
mov
dec
imul
or
outs
retf
(bad)
retf
jecxz
mov
push
(bad)
jl
imul
stos
out
mov
or
mov
ds
or
mov
in
sar
fst
cmc
jb
pop
data16
shl
cld
loop
imul
and
xchg
adc
mov
stos
add
mov
sbb
in
outs
fsub
cld
push
push
jecxz
jns
sbb
arpl
mov
mov
hlt
add
cmc
sti
sub
inc
(bad)
jne
xor
jne
loopne
aas
call
cmp
inc
add
lods
push
pop
lea
stos
jmp
and
mov
mov
sub
inc
sub
fbstp
ret
out
sub
jo
psubusw
aad
push
lods
xchg
xor
sbb
out
lock
bound
(bad)
push
xchg
and
add
(bad)
lock
enter
js
(bad)
jmp
es
push
pop
outs
stos
retf
push
sti
adc
xor
cmp
or
jno
in
call
push
lds
test
lds
pop
mov
mov
inc
or
cwde
lahf
je
push
jne
loopne
xchg
ss
data16
addr16
jg
pop
lea
movs
sbb
stos
sbb
mov
inc
xchg
xor
(bad)
add
enter
mov
out
mov
cld
pusha
out
inc
retf
nop
rcr
test
adc
cli
(bad)
add
pop
sbb
scas
dec
add
neg
adc
in
mov
pusha
sbb
add
and
mov
adc
sbb
mov
push
loop
push
xchg
or
mov
pop
(bad)
push
xor
dec
xor
sahf
xor
loop
in
jns
cs
adc
pop
fld
jns
stos
or
adc
(bad)
std
sub
addr16
gs
mov
shr
sbb
cmp
push
mov
or
popa
cmp
pop
daa
ror
pop
cmps
es
pop
cmp
jnp
jge
scas
sbb
fs
cmp
xchg
loope
mov
or
mov
pop
inc
or
adc
pop
xchg
jae
loop
mov
sbb
ficomp
dec
(bad)
out
hlt
je
cli
xchg
mov
retf
popa
ret
xor
or
push
jmp
mov
sbb
dec
xchg
sub
and
or
mov
cmp
outs
sub
and
les
or
cld
push
test
sbb
xchg
scas
xchg
gs
xlat
repnz
fs
sbb
pop
push
movs
jg
lea
fistp
out
mov
jne
xchg
add
jnp
stos
out
push
sbb
loopne
mov
push
cld
int3
mov
stos
jns
stos
pop
fidiv
cmp
mov
mov
sub
pop
std
ror
mov
pop
aaa
pop
mov
pop
sub
cmp
bound
xchg
mov
stos
mul
mov
xchg
lds
mov
std
pop
mov
clc
(bad)
sbb
pop
loopne
je
arpl
bound
sub
ss
jo
ins
xor
movs
mov
test
movs
test
jbe
cmp
sub
in
dec
add
fs
and
push
scas
(bad)
adc
clc
enter
icebp
pop
pop
or
leave
or
call
les
xchg
adc
in
adc
inc
cmp
int3
xor
in
mov
mov
ss
shl
sub
icebp
pop
cli
adc
mov
ja
add
pop
test
dec
push
and
outs
pop
in
in
mov
div
test
rol
inc
je
adc
in
and
scas
dec
repz
add
addr16
imul
mov
add
mov
(bad)
inc
mov
mov
sbb
inc
fsub
ins
add
push
or
jp
lea
test
jmp
iret
sub
arpl
add
jecxz
fdivr
(bad)
mov
xchg
je
mov
or
in
es
in
out
stos
cmps
mov
aad
js
mov
push
cmp
sub
lahf
das
push
mov
mov
inc
adc
std
push
lea
in
cmps
in
test
or
adc
inc
mov
repnz
xchg
(bad)
(bad)
dec
mov
mov
cmp
sub
ins
das
add
xchg
or
dec
sahf
mov
ss
les
sub
sub
mov
hlt
push
dec
jo
mov
pop
mov
sti
mov
pop
jno
sub
cmp
mov
pop
call
inc
popa
pop
cmp
inc
retf
into
lock
stos
repz
cdq
cmp
fs
repnz
jge
mov
mov
cmp
js
or
push
pop
fild
dec
test
or
shl
sub
xor
fwait
dec
setg
arpl
bsr
fsubrp
inc
and
sub
push
enter
xor
gs
add
js
clc
dec
cmp
jmp
cmps
call
(bad)
mul
ficom
lea
loop
add
sar
dec
sub
pop
push
mov
and
fist
mov
call
inc
call
aad
arpl
jmp
mov
lods
fild
addr16
in
(bad)
sar
mov
push
push
mov
(bad)
push
les
xchg
xchg
pop
(bad)
aaa
dec
lea
adc
xchg
adc
shl
mov
repz
push
retf
jo
inc
inc
adc
mov
stos
xor
mov
out
rcl
fcmovne
push
xor
sub
sbb
dec
rcl
lea
rcl
xor
imul
imul
inc
adc
and
jno
test
mov
sub
movs
dec
dec
mov
clc
rcl
loopne
sti
sbb
or
ins
test
xchg
adc
cmp
pop
adc
aas
daa
es
push
retf
xchg
jle
test
outs
jne
leave
push
enter
xor
test
push
mov
pop
push
scas
xchg
fs
mov
mov
cmps
imul
aaa
jp
fmul
cmc
mov
add
into
lock
jl
fcmovnbe
in
jno
test
adc
pop
add
push
sub
sub
or
adc
mov
data16
jnp
and
cmp
jge
sub
leave
push
loope
mov
mov
xchg
mov
popf
dec
push
inc
push
and
sahf
popa
movs
arpl
cmp
push
cdq
xchg
fbld
iret
fidivr
add
jno
pop
sub
add
inc
pushf
inc
pushf
arpl
imul
xor
scas
cmp
mov
nop
sbb
push
arpl
dec
or
jp
es
sub
in
inc
arpl
pop
add
add
mov
cmp
push
sbb
jnp
pusha
mov
and
cmps
fs
call
push
jg
retf
add
adc
cmp
mov
mov
iret
shl
inc
(bad)
hlt
out
pop
mov
inc
push
xchg
pop
adc
adc
or
test
jecxz
jp
pop
pop
ret
sub
das
mov
lods
adc
jg
add
repz
mov
and
mov
mov
out
lds
cmp
ss
stc
iret
fbstp
pop
cmp
pop
xor
mov
stc
cwde
jo
add
shr
retf
addr16
repnz
xchg
jnp
test
leave
cmp
mov
xchg
fidivr
(bad)
into
daa
cmp
jne
xor
pop
jnp
xor
shr
pop
(bad)
in
pop
cmp
sbb
(bad)
mov
add
imul
inc
ins
fnstsw
jmp
int
fisttp
stos
ds
ret
adc
imul
cli
pop
mov
aad
pop
sbb
and
enter
ss
test
pop
and
cmp
popf
int
fcmove
push
in
(bad)
stc
adc
rcl
pop
pop
jns
or
stos
inc
push
inc
retf
repnz
shl
mov
mov
call
inc
jl
jo
(bad)
mov
inc
add
sbb
dec
loopne
mul
jne
add
mov
leave
not
add
clc
out
sub
cmp
and
or
jno
mov
mov
cmp
sbb
xor
fdiv
inc
retf
cli
repz
xlat
ins
push
xchg
les
push
inc
aad
rcr
mov
dec
outs
call
mov
gs
sbb
in
fwait
push
mov
in
mov
cmp
mov
out
add
mov
ror
fisub
cmp
scas
mov
cli
ds
cmps
nop
fwait
in
dec
orps
cmp
adc
into
jmp
mov
int
scas
ret
xchg
sub
cs
inc
inc
mov
(bad)
push
lock
inc
xchg
outs
sbb
mov
lahf
sbb
xor
inc
pop
lock
ret
fisttp
dec
dec
or
jno
xchg
xchg
add
cmc
xor
repnz
add
xor
out
cmps
sbb
iret
jmp
mov
add
rol
imul
mov
call
cmps
out
dec
add
ss
into
adc
jmp
or
ja
and
push
test
dec
shl
xor
mov
mov
mov
fiadd
retf
jae
mov
or
lods
pop
cmp
jmp
bound
cmp
ja
xchg
push
mov
mov
lods
test
inc
mov
ins
jne
pusha
popf
sbb
cdq
aad
and
fs
inc
rep
test
cmc
sub
sub
sub
mov
mov
cmp
jmp
into
aaa
add
repnz
sub
dec
and
or
ffreep
adc
out
xchg
mov
push
mov
mov
adc
mov
outs
cmp
sbb
imul
inc
sub
iret
xchg
pusha
nop
std
aad
jmp
ror
and
ja
jp
shl
mov
rcr
jno
push
cmps
mov
sbb
fwait
movq
inc
mov
or
test
les
xchg
bound
jo
std
xchg
data16
push
xchg
aas
test
sub
pop
outs
sub
xor
xor
adc
mov
repz
and
loopne
xchg
hlt
repz
pop
xchg
dec
pop
xor
ret
cmovns
addr16
xchg
jmp
das
pusha
repz
in
gs
and
mov
add
adc
ds
dec
popf
xor
dec
out
shl
push
test
fiadd
inc
outs
fdiv
mov
pop
sub
pop
mov
scas
test
aaa
pop
pop
or
mov
loop
in
cmp
hlt
jo
(bad)
ins
and
movs
xor
add
or
mov
fwait
stos
mov
ds
sbb
cld
pop
movs
mov
cmp
jp
sub
dec
popa
push
pop
call
xchg
rcr
mov
jb
push
pop
in
ins
into
or
adc
out
call
int3
pop
bound
push
ds
data16
dec
ja
cmp
sbb
outs
ficom
xchg
int3
outs
cmps
add
or
scas
push
imul
xor
or
mov
sub
pop
(bad)
fcom
adc
sub
sti
mov
sub
jne
adc
mov
cmp
cmp
and
mov
xchg
hlt
inc
out
cmps
add
stos
adc
mov
xchg
add
int
stos
fidiv
ins
imul
pop
mov
inc
push
sar
push
jge
jae
pop
push
pusha
cld
and
mov
mov
mov
xchg
or
mov
adc
fbstp
lahf
cmp
mov
out
cmp
push
jmp
fwait
mov
xchg
in
mov
jno
pop
pop
in
push
jno
xchg
shl
movs
repz
xor
xor
xchg
ds
ficom
rol
ins
cld
movs
js
pop
stc
icebp
jp
cs
pop
add
fist
cmp
inc
iret
mov
pushf
inc
dec
pop
dec
add
iret
int3
and
pop
popa
sbb
pop
mov
add
cmp
add
in
cld
(bad)
cmp
and
ins
les
push
repz
adc
pop
cmp
xor
rcr
in
pop
aam
adc
es
xor
sbb
xor
jecxz
cwde
mov
sub
jne
imul
cmps
fsubrp
arpl
sbb
daa
(bad)
or
mov
fnsave
ret
mov
(bad)
adc
(bad)
stos
mov
xor
imul
in
das
add
xor
dec
jb
sahf
inc
push
mov
gs
pushf
aam
jg
adc
xchg
inc
push
mov
adc
ror
or
and
push
(bad)
mov
enter
mov
ins
inc
scas
rcl
dec
(bad)
mov
mov
js
shl
in
pop
popf
sub
ret
sbb
sbb
push
mov
call
pop
fmul
xchg
(bad)
movs
add
test
or
aam
sbb
loope
add
add
xor
mov
gs
ins
jge
and
fcom
add
popa
dec
pop
or
push
push
xchg
xchg
xor
adc
movs
jbe
adc
out
std
mov
sbb
movs
loopne
sbb
call
and
sub
aaa
push
mul
xor
add
fs
sbb
mov
aam
fwait
aas
in
test
out
ja
xor
scas
push
xor
pop
aam
push
push
mov
aaa
retf
les
shl
jne
pop
out
popa
dec
jecxz
pop
adc
pop
inc
add
adc
cld
nop
mov
mov
mov
sbb
mov
push
xor
and
gs
sbb
cmps
mov
outs
xor
(bad)
(bad)
pop
out
add
movs
add
scas
test
loopne
sub
(bad)
pop
xor
aas
cmp
hlt
push
dec
imul
jmp
fdivr
xor
arpl
dec
adc
mov
mov
icebp
pop
dec
cmps
push
cmps
pop
sub
xor
loop
and
cli
fwait
ror
sub
jge
mov
aas
xor
fdivrp
dec
dec
rcr
in
out
call
adc
popa
in
xor
fstp
dec
(bad)
and
push
jle
ss
pop
hlt
mov
vpaddsw
adc
icebp
mov
jp
in
icebp
inc
pop
loop
lahf
push
adc
das
pop
mov
sbb
xor
xor
xchg
hlt
mov
mov
in
xchg
int3
push
lahf
xrelease
jmp
jmp
add
xchg
mov
pop
lods
and
popa
inc
addr16
push
or
push
enter
xchg
mov
cmc
add
mul
movs
out
jmp
adc
or
retf
icebp
dec
adc
enter
mov
mov
and
repnz
rcl
fwait
test
cli
xchg
(bad)
push
sub
icebp
jmp
mov
not
lock
or
jns
lock
fldcw
sub
jo
push
into
sbb
and
and
mov
test
mov
pop
pop
push
inc
mov
call
fbld
(bad)
cmps
xor
sub
cmp
mov
mov
cli
lods
sub
setb
int3
lods
mov
sub
test
aaa
dec
adc
jp
mov
dec
lods
in
dec
cmc
jae
cs
xchg
mov
and
movs
jmp
sti
fwait
js
mov
and
inc
dec
push
mov
push
hlt
inc
fcomip
pop
push
mov
aam
call
push
pop
sbb
push
call
imul
loop
rcr
jo
imul
sbb
test
jno
xchg
lods
into
sbb
es
mov
xor
rcl
imul
adc
push
jl
xor
loope
mov
push
(bad)
mov
cmp
arpl
stos
add
mov
mov
fcmovne
lds
ja
xchg
mov
es
inc
mov
cs
ins
fstp
into
fild
stos
dec
sub
mov
(bad)
sub
inc
push
pop
clc
enter
loope
mov
xlat
mov
sahf
mov
movs
stos
xor
je
(bad)
cwde
sbb
sbb
movs
mov
sti
hlt
ret
ret
or
mov
shr
fnstenv
loope
pushf
jne
jbe
adc
or
out
mov
test
fwait
(bad)
movs
adc
fld
(bad)
mov
push
imul
xor
sbb
sub
int3
xchg
div
xlat
fmulp
movs
loope
repnz
test
mov
rcl
mov
push
lods
ds
fmul
dec
das
hlt
add
movs
dec
mov
sbb
cmp
dec
xor
(bad)
xor
sub
sbb
push
(bad)
adc
and
push
sbb
retf
lock
adc
push
xchg
sub
mov
cmp
dec
int
js
pop
mov
sar
fmul
iret
nop
dec
cmp
pop
(bad)
mov
out
sub
pop
push
pop
(bad)
gs
cmps
out
sbb
dec
inc
and
or
add
mov
ins
and
inc
les
js
jg
sar
push
mov
mov
and
fidivr
xlat
shr
push
out
pop
stos
cmp
into
push
cmp
sbb
(bad)
cwde
ror
cmc
lods
add
lds
pusha
aaa
call
pop
lods
dec
mov
xchg
dec
leave
and
lock
mov
xor
adc
nop
retf
xor
xchg
cli
push
add
mov
pop
inc
and
and
jmp
cmp
fiadd
mul
into
add
int3
xor
push
mov
adc
adc
cmp
in
cli
(bad)
in
pop
pushf
xchg
pop
out
jne
enter
lods
out
imul
push
fistp
jnp
ja
aad
fbstp
sbb
pushf
jg
ds
sub
push
inc
daa
mov
ins
sub
(bad)
out
xchg
inc
imul
loop
js
dec
xadd
dec
mov
xchg
div
test
push
inc
aad
ror
imul
and
imul
pushf
cmp
les
add
add
sbb
(bad)
fistp
xchg
adc
out
stos
aam
sbb
xor
push
ds
pop
adc
xchg
dec
out
fs
leave
out
rcl
add
add
adc
mov
mov
enter
ret
int3
daa
in
test
sahf
scas
dec
(bad)
cmc
(bad)
lods
dec
mov
gs
push
out
cmps
cmp
cmp
mov
adc
push
or
xor
sbb
jl
push
sub
lds
xchg
sub
jns
xor
(bad)
cmp
mov
mul
jns
(bad)
aam
adc
mov
xchg
sar
fs
bsf
(bad)
ja
jo
inc
xchg
inc
pop
out
cmps
inc
cld
adc
mov
ret
(bad)
xchg
xor
mov
cmp
inc
rol
ins
(bad)
cmp
mov
adc
repnz
push
mov
stc
add
sti
movs
mov
or
out
jbe
cmp
or
out
xor
data16
sub
or
or
test
neg
jo
cmp
fadd
and
jns
cmp
nop
adc
lds
mov
push
data16
test
mov
cmp
lods
and
sar
fs
xchg
xchg
pop
int
jp
inc
sub
ds
fnstsw
out
movs
pop
mov
and
and
xchg
xchg
mov
and
sbb
out
data16
add
mov
data16
pop
push
mov
(bad)
pop
jnp
mov
call
adc
xchg
fmul
or
pop
pop
ins
push
jae
cmp
or
inc
mov
out
fld
repz
je
jmp
cmp
imul
push
out
jg
clc
mov
loopne
add
out
enter
or
movs
lods
addr16
arpl
mov
sbb
and
cwde
pop
test
ss
cs
loop
lods
int3
imul
adc
iret
lock
call
pop
test
repz
mov
add
jno
aam
cwde
out
mov
cdq
divps
push
lock
repz
fisttp
mov
inc
mov
fst
arpl
xlat
cmp
aas
js
inc
lods
push
sbb
arpl
sbb
xor
or
lods
sbb
mov
add
jp
popa
dec
inc
adc
sbb
shl
or
retf
pop
sbb
mov
fisub
pop
cli
btr
shl
xchg
push
dec
dec
mov
hlt
mov
in
push
mov
jle
retf
mov
iret
mov
mov
stc
adc
add
data16
jg
and
mov
jo
dec
inc
nop
pop
pop
and
es
pop
dec
jge
sahf
mov
dec
test
or
or
mov
sub
adc
in
mov
xchg
and
retf
rol
pop
xor
add
call
adc
mov
ss
sbb
inc
dec
dec
cdq
call
mov
xchg
imul
in
sar
mov
inc
test
(bad)
cmps
and
push
mov
(bad)
push
push
jl
adc
call
call
adc
cld
aad
out
out
add
loope
fist
ja
dec
stos
js
movs
in
std
rcl
or
add
mov
jge
pop
push
loop
sbb
outs
sub
es
in
and
or
and
or
sbb
retf
dec
je
push
fwait
pop
mov
inc
lea
lods
fxsave
imul
mov
and
inc
xchg
pop
imul
test
xor
dec
dec
xor
pop
int
jne
or
sub
scas
and
jg
ficomp
adc
mov
arpl
pusha
es
loopne
into
adc
pop
and
pop
mov
mov
iret
enter
dec
dec
cwde
xor
movs
popf
leave
cmps
dec
lock
cmps
or
mov
pop
fcomp
sub
push
push
mov
push
pop
cmps
xor
repnz
push
add
mov
icebp
pop
xlat
fistp
dec
xchg
mov
rcl
xchg
data16
sbb
pop
dec
inc
sub
repz
sbb
addr16
cli
mov
pop
cwde
xchg
mov
fsubrp
lock
xchg
xchg
xchg
nop
add
jnp
push
sbb
add
pop
xchg
movs
xchg
push
mov
pop
dec
(bad)
ficomp
xchg
nop
xor
daa
jae
in
pop
dec
mov
xchg
cmp
sbb
(bad)
clc
push
jecxz
in
pop
xlat
cwde
push
pop
mov
fadd
mov
and
or
jb
(bad)
ins
add
adc
jle
mov
jmp
mov
inc
add
xor
push
(bad)
addr16
shl
lea
cmps
das
cmp
xchg
rcr
pop
ss
sbb
aaa
pop
std
mov
movs
ins
dec
fisub
add
lahf
out
mov
dec
rcr
scas
sbb
cmp
mov
les
loop
adc
lock
fisub
pop
std
xchg
sahf
shr
mov
test
addr16
jmp
lea
imul
fs
call
repnz
mov
fnsave
inc
les
add
xlat
add
dec
inc
mov
retf
scas
aad
inc
daa
cmp
adc
aam
add
xor
mov
cmp
inc
out
xchg
jp
sar
retf
mov
mov
jae
sbb
repz
int3
jne
push
in
inc
lds
adc
dec
cmp
sti
jb
ret
cmps
xor
cdq
aad
scas
movs
inc
pushf
pop
pop
mov
loopne
adc
or
xor
mov
sub
push
xchg
dec
outs
inc
in
cmc
and
xlat
dec
mov
iret
rcr
mov
ret
mov
aad
xchg
or
ss
mov
repz
ds
and
ds
cld
push
add
mov
cmp
dec
rsm
mov
jge
js
mov
adc
cs
jg
or
or
xor
call
ror
jb
sbb
shl
push
and
pop
cmp
data16
loopne
cld
dec
sub
movs
pushf
mov
or
sub
das
inc
int
movs
sti
arpl
push
call
and
jnp
adc
in
(bad)
mov
outs
cwde
push
(bad)
pop
inc
mov
sbb
xor
and
jo
repz
sub
imul
mov
cli
jo
mov
data16
pop
mov
cwde
mov
xor
loop
aas
xchg
in
cwde
out
int3
nop
repnz
mov
inc
add
pop
(bad)
mov
outs
test
sub
stos
push
push
adc
push
add
stos
jg
push
ins
out
inc
outs
jp
fs
(bad)
lahf
adc
out
xchg
xor
mov
outs
inc
dec
jmp
outs
(bad)
jge
(bad)
pop
es
out
add
jg
pop
sti
jne
cmp
faddp
fist
mov
jns
retf
add
retf
daa
imul
loopne
or
outs
adc
adc
cmp
cli
inc
dec
std
aaa
inc
ds
adc
cmps
rcr
pop
cld
loop
movs
sbb
sbb
add
(bad)
sub
call
push
or
add
push
push
inc
shl
shl
popf
std
mov
sub
jae
and
loop
out
les
add
mov
xor
inc
mov
sub
xchg
test
jnp
stc
repz
les
cmps
movs
jbe
mov
fs
aam
pusha
clc
push
lods
fisttp
inc
sub
mov
xchg
cwde
xlat
icebp
mov
pop
pop
sub
cdq
popf
pop
jnp
jo
xor
cmps
push
and
out
out
inc
int3
xchg
(bad)
outs
mov
mov
daa
push
push
test
push
mov
cmp
push
ret
stos
and
pop
xor
pushf
xchg
adc
sar
cdq
and
ins
xchg
xor
push
mov
clc
or
mov
out
cmp
mov
adc
aaa
inc
jcxz
jnp
repz
inc
push
imul
mov
add
enter
pop
cmp
imul
adc
mov
xor
cwde
lahf
loop
mov
and
sbb
call
xor
jp
repnz
adc
les
jmp
jp
aam
sar
inc
ja
mov
icebp
bound
cmc
into
pop
pop
mov
enter
xchg
jle
jmp
cmp
jg
(bad)
in
add
call
cmp
dec
ins
inc
adc
lods
sbb
pop
jp
cmp
in
and
movs
ins
xchg
inc
pop
inc
out
push
dec
cmp
jae
or
add
call
push
jmp
mov
push
mov
lds
sbb
retf
dec
mov
ja
push
pop
fucomi
test
jle
sbb
test
fcom
fist
lock
dec
adc
mov
xor
pop
in
mov
loope
daa
pushf
xchg
mov
outs
leave
push
cmp
cdq
sub
dec
fmul
out
xchg
mov
(bad)
adc
sbb
ds
add
mov
or
mov
mov
pop
add
out
pop
jge
jno
jl
cmp
fcom
mov
movs
retf
ficom
ds
repnz
outs
inc
push
inc
movs
jmp
loop
pop
dec
outs
enter
pop
movs
jl
enter
popf
imul
sti
adc
in
test
dec
ret
ret
mov
mov
test
add
enter
outs
movs
lods
icebp
test
xor
out
sbb
sbb
and
pop
in
aam
aaa
icebp
mov
(bad)
push
test
(bad)
lea
pop
add
repz
sbb
shr
(bad)
jae
jmp
jmp
pop
jbe
mov
add
cmc
movntq
(bad)
in
lods
or
cmp
adc
and
xchg
and
fdiv
fs
sub
jl
lds
pushf
mov
push
inc
add
sub
cmps
add
gs
nop
inc
prefetch
ror
fcmovnb
mov
dec
pusha
fs
or
xchg
jns
mov
mov
lds
inc
in
lahf
mov
cmp
xchg
mov
cmp
cs
mov
(bad)
std
fistp
fnstsw
pop
(bad)
out
xchg
add
fstp
and
(bad)
inc
or
or
lgs
mov
bound
(bad)
sbb
mov
add
mov
add
into
cmp
int3
outs
jp
stos
jmp
repnz
cmp
or
lods
push
sbb
in
ds
out
fstp
test
pop
xor
inc
sub
jmp
lea
mov
mov
mov
xor
mov
pop
xchg
push
fisub
inc
xchg
repz
mov
int3
out
(bad)
cmps
mov
mov
ins
push
xchg
ficomp
fldl2e
jge
cmp
std
dec
mov
ins
mov
inc
sbb
in
fidiv
or
pop
iret
js
sbb
scas
into
fmul
shr
jbe
cli
sbb
adc
dec
daa
xchg
add
add
jmp
xchg
fcom
jnp
or
clc
sbb
mov
popa
and
test
push
inc
push
xchg
jle
ret
mov
imul
cdq
mov
sub
fnstcw
jmp
sbb
cs
mov
xchg
dec
ret
or
cmp
mov
outs
rcl
(bad)
daa
jp
fs
mov
fadd
and
push
fild
sar
adc
fwait
and
mov
repnz
jg
retf
movs
mov
dec
and
ins
xchg
or
retf
(bad)
scas
and
inc
xchg
inc
scas
cwde
dec
js
xor
ret
sub
mov
push
pop
es
jbe
mov
xlat
cs
cmp
fdivr
inc
repnz
cmp
push
mov
push
and
int3
call
jno
test
cmp
pop
jne
clc
cmp
(bad)
adc
mov
adc
pusha
sti
ins
loope
shl
mov
les
inc
cs
call
inc
scas
xchg
daa
test
(bad)
pushf
lock
loop
(bad)
mov
dec
(bad)
in
inc
jp
loope
dec
cs
pushf
mov
inc
add
xchg
push
mov
sti
push
in
xchg
inc
mov
ss
loopne
sub
push
push
leave
test
daa
jmp
cmp
ds
pop
shl
cmp
jbe
popa
call
pop
call
pop
leave
inc
mov
pop
pop
sub
sub
popa
xor
cmp
outs
sbb
mov
in
lock
je
xchg
push
push
call
movs
in
mov
xor
xlat
inc
in
jecxz
movs
jne
imul
test
out
fdiv
adc
mov
cmps
cmps
inc
int3
adc
and
cmp
adc
pop
sub
movs
(bad)
bound
adc
imul
or
jnp
dec
adc
scas
jnp
xlat
out
xchg
loop
stc
cld
push
pop
or
mov
adc
dec
mov
je
inc
aam
mov
shl
adc
out
cmps
sahf
retf
mov
retf
shr
push
test
sbb
les
retf
cmps
sar
cwde
inc
xor
or
mov
push
mov
mov
int
push
xchg
sar
add
mov
test
jae
mov
adc
push
jno
mov
mov
lds
stc
mov
jbe
ins
fwait
mov
push
dec
cmp
push
sub
fwait
add
bound
lock
les
aas
int3
cmp
sub
add
inc
cmp
or
in
aam
dec
stc
mov
popa
cmp
nop
mov
jmp
cmps
lods
jo
retf
fisub
shl
lahf
rol
sar
shl
jo
push
in
ins
mov
jge
mov
pusha
mov
inc
add
pusha
push
jge
psubb
adc
and
call
add
lds
jp
por
mov
ins
cmc
loopne
in
mov
push
xchg
pop
jecxz
adc
ret
(bad)
jmp
imul
xchg
out
ficomp
js
(bad)
xlat
dec
scas
or
mov
shl
pop
sbb
sbb
icebp
jl
mov
popf
add
(bad)
pushf
ins
pop
pusha
xchg
aam
jae
push
popa
push
mov
test
ins
js
in
scas
xchg
(bad)
(bad)
adc
dec
pop
sbb
xchg
or
jmp
imul
cwde
int
std
mov
pop
sbb
and
jmp
sbb
sbb
inc
fcmovne
retf
jbe
push
mov
fdivr
ficomp
jns
shl
adc
xor
es
add
push
xor
dec
outs
dec
push
mov
out
(bad)
cs
jge
jne
int
xchg
jae
(bad)
mov
pop
bound
leave
fwait
xor
or
or
or
push
enter
outs
xor
aad
push
mov
dec
nop
or
in
out
test
ret
lods
inc
cmp
mov
pop
sbb
imul
(bad)
jp
gs
push
add
adc
or
sub
mov
adc
pushf
or
iret
or
mov
jnp
fwait
mov
or
xchg
inc
scas
sti
popa
push
xchg
dec
push
jns
xor
sub
enter
(bad)
stc
add
mov
pop
packuswb
and
pop
nop
inc
inc
mov
mov
ds
sbb
mov
push
push
popa
(bad)
les
xchg
cmp
ror
cmp
pop
sbb
ins
mov
adc
aas
cmp
pop
jns
and
clc
stos
repnz
out
fidiv
jg
cmps
push
out
cmp
dec
not
add
sbb
jle
sbb
and
ret
cmp
leave
leave
dec
cmp
in
jmp
mov
jb
add
xor
xor
les
addr16
(bad)
cmps
cld
add
sbb
enter
scas
mov
push
loopne
cmp
test
pop
sbb
xchg
jg
mov
mov
pop
jne
hlt
mov
mov
ss
data16
out
movs
jmp
out
mov
ins
in
jbe
inc
(bad)
das
mov
pop
cmp
hlt
mov
sub
or
and
in
test
lods
push
mov
xchg
fstp
or
jl
cs
int3
out
pusha
xor
cwde
sub
or
pusha
sahf
push
mov
shl
lods
push
fsub
mov
jno
dec
fldenv
ror
dec
sar
dec
xlat
add
mov
mov
ins
mov
inc
cld
call
call
xchg
je
ret
sbb
pusha
push
inc
dec
cmp
cmp
push
push
ficomp
or
lock
cld
in
mov
cmp
in
cmp
push
(bad)
(bad)
xor
pop
sbb
aam
sub
les
pop
gs
iret
adc
scas
mov
add
lahf
xchg
les
pop
jns
bound
jle
push
xor
push
in
adc
popf
and
lds
fidivr
xchg
xchg
add
ror
(bad)
mov
dec
jle
push
mov
push
lea
mov
lods
inc
jnp
leave
pop
mov
jns
xchg
repnz
jle
fnstsw
aaa
test
and
jns
sbb
dec
movs
lea
dec
sbb
push
push
or
pop
push
pop
jmp
jo
gs
xor
pop
jb
ret
clc
push
ins
out
imul
xchg
loopne
push
icebp
mov
enter
ficomp
dec
xor
xchg
js
dec
sbb
jns
or
inc
in
(bad)
imul
test
push
sbb
lahf
or
add
ret
lds
test
mov
jns
loopne
loopne
cwde
xor
retf
lods
push
movs
push
js
fs
je
(bad)
retf
hlt
into
inc
cs
mov
pop
inc
sub
cmp
mov
mov
sub
dec
fld
cmp
fsubr
pop
xchg
out
shr
cmps
jmp
ror
shl
ins
sbb
shl
jb
(bad)
iret
adc
sub
aam
push
je
cmp
mov
ret
aas
lea
cmc
mov
jo
fwait
js
push
loope
xchg
(bad)
pop
cmp
imul
jns
sbb
fs
sbb
or
stos
sahf
sbb
adc
sti
push
sub
adc
mov
push
scas
bnd
xchg
and
outs
inc
pop
inc
pop
xchg
mov
xchg
push
mov
cs
mov
out
push
mov
fnstenv
sub
cmp
dec
mov
dec
pop
sbb
jmpw
stos
repz
test
xor
push
es
push
ret
fistp
add
dec
pop
ret
cmps
dec
fsub
mov
push
or
and
fs
xchg
jecxz
shl
push
lea
popa
aad
push
pop
pop
jmp
pusha
inc
sub
call
repz
xor
push
push
(bad)
ds
out
jge
gs
mov
movs
mov
sub
sub
bound
das
mov
dec
scas
add
mov
xor
pop
sub
les
ins
pop
mov
sbb
in
pop
and
cld
mov
and
(bad)
and
xchg
ins
sbb
sub
lods
aam
add
add
sub
sub
jbe
mov
addr16
imul
push
in
pushf
adc
daa
adc
(bad)
dec
xchg
mov
dec
aaa
jno
pop
icebp
or
push
push
xchg
push
int3
pop
push
xchg
imul
xor
push
jbe
(bad)
cmp
mov
ins
fdiv
cmp
std
mov
ficomp
rol
ret
sub
xor
inc
sbb
scas
pop
or
jns
mov
inc
add
retf
in
retf
movs
ins
loope
sbb
outs
cmp
stos
xchg
inc
pop
mov
pop
mov
ja
and
int3
sub
add
lock
daa
or
pop
ret
mov
cmp
ficomp
lea
pop
jns
xlat
hlt
gs
popf
mov
push
push
data16
inc
cmps
and
jl
ds
clc
ss
xchg
sbb
int3
mov
pushf
into
imul
outs
out
jge
in
or
mov
loopne
and
loopne
inc
(bad)
jns
inc
inc
xor
f2xm1
std
jo
xor
cmp
cs
pop
jge
cdq
xor
daa
jo
fneni(8087
in
add
mov
cs
add
jmp
cmp
out
shr
leave
mov
mov
ret
dec
test
cmpps
stos
(bad)
test
or
push
nop
loopne
leave
data16
sbb
pop
mov
pop
cmp
jo
sub
and
dec
push
lahf
sbb
mul
imul
inc
fild
(bad)
sub
sbb
fst
xchg
lock
and
xchg
arpl
inc
in
sub
ins
xchg
in
push
sti
gs
or
iret
fsubr
sti
sbb
scas
cmp
pop
xchg
pop
shr
sub
cdq
sbb
out
popa
mov
push
xchg
sti
movs
xchg
gs
cmp
test
ret
jno
mov
adc
mov
push
popa
cmp
push
mov
xor
stos
sub
inc
ror
mov
call
pop
pop
dec
movs
imul
in
clc
test
mov
sub
call
mov
retf
mov
xor
sub
repnz
cmp
popa
pop
das
mov
fwait
dec
pusha
jbe
in
sub
jecxz
mov
sub
mov
xlat
jg
adc
mov
jnp
pop
pusha
jne
js
bound
or
add
outs
clc
je
cmp
ret
sub
outs
retf
(bad)
cld
aaa
int
jecxz
scas
xor
into
adc
pusha
xor
sti
mov
and
inc
mov
rcr
dec
es
cmp
mov
push
aaa
cmp
ins
gs
inc
mov
repnz
sahf
std
daa
inc
or
arpl
or
fcomp
sbb
je
mov
gs
jb
std
mov
jno
cs
je
outs
dec
push
inc
in
fcomp
pop
shr
pop
fsub
inc
cwde
lods
push
jbe
test
retf
add
sbb
or
mov
ror
pusha
mov
dec
pop
ficomp
xor
push
cmp
lea
and
push
sbb
xor
in
inc
test
adc
mov
sub
or
mov
out
add
jl
add
pop
shr
shl
stos
mov
ds
in
daa
fistp
clc
mov
bound
in
rol
cmp
xor
outs
and
leave
aaa
adc
rol
mov
sbb
or
push
pop
fistp
jle
push
or
push
ffree
mov
repnz
jne
retf
nop
jae
mov
stos
sbb
inc
jmp
dec
and
mov
xlat
mov
out
xchg
push
leave
adc
mov
test
test
ds
pop
(bad)
push
jns
movs
rol
in
into
xchg
xor
sub
pop
loope
lods
repz
pop
mov
inc
retf
popf
sub
cmp
sahf
or
test
adc
push
call
sub
push
sub
mov
and
shr
cmp
pop
dec
mov
dec
mov
popa
mov
and
iret
cmp
xchg
ins
and
cmps
nop
outs
pop
adc
push
add
sub
and
enter
pop
or
jb
sbb
xchg
add
pop
mov
sbb
mov
int
outs
aad
int3
adc
inc
mov
xor
push
les
cdq
mov
(bad)
idiv
in
xchg
stos
mov
cmps
div
mov
mov
inc
dec
jl
mov
mov
pop
sub
pop
dec
and
push
les
leave
pusha
sub
lea
call
and
dec
xor
push
retf
cwde
in
mov
adc
mov
ins
test
fdiv
mov
mov
fmul
inc
jns
adc
lahf
in
pushf
movs
add
push
shufps
call
mov
sub
mov
mov
ins
dec
pop
or
(bad)
cli
pop
inc
mov
cs
inc
out
mov
(bad)
ja
hlt
mov
add
scas
lea
cli
push
adc
jb
jo
ss
(bad)
in
pop
add
push
shl
and
mov
fidivr
and
loope
or
xor
iret
jge
xor
wrmsr
(bad)
inc
js
lea
pop
loopne
out
add
jo
xor
ds
and
out
(bad)
ror
mov
bound
leave
fs
push
mov
pop
ret
mov
add
jmp
cmp
mov
pop
xchg
fwait
or
mov
imul
cmp
push
push
cmc
sub
test
nop
js
add
repz
sbb
movhlps
imul
sti
pop
sub
sbb
shl
not
lock
cmp
jmp
push
iret
or
mov
cli
out
(bad)
or
xor
fwait
mov
es
xor
sbb
pop
push
dec
pop
pop
xor
dec
push
jge
aad
(bad)
mov
dec
xor
sahf
lods
inc
xchg
and
cwde
call
inc
and
mov
rcr
jne
cmps
lods
mov
(bad)
xchg
pop
sbb
loopne
pop
sbb
mov
mov
xor
sbb
mov
cmp
jmp
pop
test
inc
xchg
scas
pop
mov
test
push
jg
aaa
jge
cdq
mov
into
xchg
in
mov
aaa
sub
pop
xor
enter
xor
add
icebp
rcr
ret
mov
pop
xchg
xor
add
or
popa
sub
add
sub
mov
stos
push
mov
pop
sub
dec
inc
int3
push
bound
in
fmul
dec
fisub
xor
jle
test
push
pop
mov
int3
pop
mov
ss
je
cmp
ret
jo
ds
push
popf
div
cmp
int
movs
mov
xchg
gs
cs
add
inc
cmp
lds
adc
mov
xchg
pop
(bad)
stos
mov
and
ret
hlt
or
mov
jg
es
outs
mov
pop
ret
stc
mov
push
pop
push
rol
repnz
jge
sub
xlat
sbb
popf
add
stc
add
aaa
pop
mov
mov
push
push
or
jmp
jge
mov
jmp
sub
push
(bad)
aas
inc
push
loop
xchg
iret
mov
xor
adc
cmp
frstor
inc
adc
(bad)
(bad)
aaa
repnz
push
jmp
xchg
mov
pop
ret
mov
mov
xor
add
movs
inc
fstp
adc
ins
mov
cmp
adc
dec
cmp
rol
xor
pop
cmp
pop
aas
or
popf
out
fldenv
sub
ins
and
xlat
sbb
popf
mov
mov
stos
dec
pop
jo
dec
je
in
jns
stos
pop
mov
ins
inc
and
stos
into
loop
mov
cdq
(bad)
jle
mov
mov
ficom
cli
fwait
inc
adc
and
adc
std
adc
mov
mov
sub
ret
adc
out
cs
or
xlat
cmp
inc
(bad)
movs
ins
dec
enter
xchg
sub
iret
push
inc
dec
adc
jp
fld
out
sti
sub
es
push
data16
mov
xchg
xor
jl
(bad)
fstp
and
add
and
sbb
enter
stos
cmp
and
add
cwde
dec
or
xor
cli
or
jecxz
jp
lock
add
pusha
inc
push
xor
call
and
add
push
repnz
inc
imul
cmp
or
cmp
sub
xor
out
in
mov
pop
and
and
dec
in
pop
mov
ror
add
pusha
sub
or
outs
stos
sub
mov
lahf
mov
mov
pop
addr16
loope
shr
fild
sar
pop
ins
ret
mov
xchg
xchg
fnsave
sahf
ret
push
adc
jne
jbe
adc
(bad)
dec
hlt
aas
jecxz
pusha
sbb
ret
dec
xchg
bnd
scas
data16
stc
(bad)
jecxz
add
xor
ror
jl
cmps
pop
cli
inc
dec
or
ins
cdq
xchg
nop
jge
icebp
ins
outs
jecxz
dec
mov
(bad)
shl
push
aad
inc
(bad)
add
arpl
jmp
movs
cmp
pop
ret
sub
jle
lds
and
jns
sbb
mov
mov
dec
and
nop
pusha
daa
inc
aam
sbb
mov
dec
xchg
xlat
mov
mov
ficom
jle
sbb
neg
push
pop
dec
and
into
push
cmp
and
stos
fwait
ret
loop
mov
xchg
or
push
mov
data16
bound
in
mov
mov
pop
and
inc
dec
push
enter
pushf
enter
cdq
ss
lock
stc
jnp
cmp
aad
clc
retf
and
add
inc
xchg
dec
fst
repnz
jne
ret
mov
xlat
in
sub
gs
jecxz
mov
retf
xchg
inc
sahf
pop
fld
lock
inc
xchg
or
nop
pop
sti
sahf
out
pop
inc
jno
adc
dec
(bad)
mov
je
shl
sbb
jo
repz
mov
nop
ins
sti
xchg
pop
push
gs
cdq
(bad)
dec
sub
jg
popf
pop
mov
jnp
sub
xchg
iret
mov
and
mov
pop
xchg
icebp
fbstp
push
repz
adc
mov
pop
cmps
mov
adc
fstp
mov
inc
sbb
jmp
lods
sbb
sbb
push
dec
fcomp
push
pop
push
movs
sbb
test
arpl
and
fmul
mov
ins
out
shl
mov
pop
inc
test
pop
(bad)
aam
scas
fs
xor
dec
in
add
icebp
and
fisub
lahf
(bad)
fucomp
mov
retf
sbb
and
shl
shr
movs
scas
pop
inc
fucom
test
jg
pop
pop
or
sahf
js
je
adc
push
lods
les
fistp
push
sti
loop
mov
lahf
sar
out
fidivr
xchg
scas
jle
int
pop
fwait
mov
or
and
adc
jecxz
(bad)
and
sbb
test
cmp
sbb
fsubr
pusha
pop
mov
stos
loop
loopne
enter
push
pop
sub
sub
fnstsw
mov
cmps
inc
pop
shr
adc
xor
arpl
jmp
rol
or
pushf
add
fmul
fist
adc
xchg
call
add
jmp
repz
gs
rcr
mov
mov
add
gs
imul
jecxz
into
xor
mov
adc
mov
in
xor
aad
cmp
adc
inc
in
jmp
sbb
fwait
jg
clc
fidiv
popf
inc
test
adc
(bad)
sub
mov
fsubrp
pushf
shr
and
call
cmp
pop
xchg
and
pop
(bad)
mov
in
call
sbb
adc
xor
mov
imul
(bad)
push
movs
push
daa
push
mov
mov
mov
jne
mov
inc
adc
int
xor
(bad)
cli
fcom
inc
pop
daa
imul
sar
push
aam
test
pop
inc
movs
jmp
push
scas
enter
sbb
mov
popf
cli
sti
mov
addr16
push
in
ins
ret
pop
mov
cmc
mov
add
push
test
adc
(bad)
ja
repz
arpl
xchg
adc
push
adc
sbb
add
outs
or
dec
pop
xchg
cmps
rol
cmp
sbb
retf
sub
fcmovu
mov
rol
cmp
adc
and
jno
retf
pop
or
cmp
and
(bad)
push
cmp
adc
lock
mov
ficom
and
xor
inc
push
add
adc
movs
adc
clc
jno
in
xor
loop
sahf
push
pushf
bound
jg
aam
std
xchg
push
lods
retf
jle
loope
(bad)
hlt
sub
jne
outs
mov
pop
pop
icebp
fs
sahf
ins
iret
xor
scas
jb
inc
xchg
rcl
shr
pop
adc
pop
push
add
sub
test
ret
xchg
fisttp
sahf
lea
(bad)
mov
movs
pop
sar
push
out
adc
or
hlt
xchg
xchg
cwde
push
dec
cmp
mov
movs
add
mul
xor
mov
mov
mov
pop
push
jle
sub
inc
lds
and
dec
push
xchg
(bad)
xor
and
jae
les
ret
mov
gs
pop
add
xor
jecxz
sbb
ds
and
vmwrite
inc
aaa
mov
je
xor
or
mov
jbe
push
mov
in
or
pop
shl
mov
pop
xor
dec
push
ror
dec
xor
inc
mov
stos
pushf
cwde
pop
sub
add
jmp
push
add
push
xchg
adc
es
mov
ja
sub
iret
add
mov
or
add
out
cwde
sub
sub
pop
inc
xor
out
mov
sbb
or
sbb
cmps
fsub
outs
aam
inc
mov
repz
jp
fcmove
lock
dec
and
mov
add
sbb
(bad)
ja
push
sti
or
rcr
jns
push
idiv
call
hlt
cmp
mov
outs
ror
inc
push
mov
dec
sbb
into
jg
xor
test
rcl
icebp
bound
jno
mov
mov
adc
mov
jge
jno
push
stos
dec
sbb
mov
arpl
add
adc
mov
invd
sub
das
popa
jge
push
push
pop
fmulp
jmp
lods
cmp
cmp
jns
push
push
(bad)
daa
jle
fxch
sbb
dec
lock
add
call
loopne
and
jb
loope
aam
ds
test
pop
sar
inc
xchg
xchg
sub
out
push
jae
not
xor
pop
cli
daa
push
push
xor
cdq
iret
push
jmp
push
pusha
jo
test
cmc
push
sub
ja
daa
rol
cmp
es
jb
test
mov
hlt
cdq
in
sar
gs
jns
xor
ret
fisttp
lahf
mov
xchg
sbb
arpl
xchg
(bad)
lods
ins
push
push
fadd
mov
stos
stc
(bad)
ud2
loopne
and
jmp
sbb
nop
movs
loop
arpl
repz
clc
xchg
stos
das
push
mov
mov
retf
mov
add
mov
dec
lock
cmp
mov
mov
mov
fwait
ins
mov
gs
push
mov
sbb
gs
loope
cdq
mov
push
hlt
mov
jne
jne
dec
push
test
sbb
push
jns
or
lds
sub
sbb
or
and
test
push
push
mov
call
imul
sub
sub
arpl
jns
xchg
push
repnz
call
sub
pop
shl
push
lahf
mov
or
mov
lock
jg
add
ins
adc
push
push
add
add
ins
int3
sub
popa
jbe
leave
out
cmp
test
cmp
daa
je
call
push
aam
dec
rol
cmp
jnp
(bad)
movsx
(bad)
neg
cmps
test
cmp
dec
outs
aam
cmc
out
add
popf
mov
sub
or
call
xchg
adc
lahf
ficomp
sbb
add
and
and
xor
arpl
js
xchg
sub
xchg
enter
stos
dec
pusha
aaa
lds
sbb
ins
das
repz
popf
retf
push
stos
stos
sbb
and
outs
mov
out
gs
inc
test
test
das
data16
xlat
or
daa
imul
movs
mov
and
outs
ret
cli
add
xor
adc
stos
rcl
push
pop
xchg
not
xor
xor
icebp
add
mov
ret
aaa
fwait
test
aas
pop
sbb
xchg
test
cmp
sbb
lahf
cmp
aam
inc
inc
pop
cmp
sbb
jns
cmp
(bad)
mov
xor
adc
jmp
ins
in
call
sti
(bad)
mov
jmp
loopne
add
(bad)
mov
and
pop
dec
cs
inc
add
ss
imul
mov
sbb
adc
ss
add
jle
sbb
jp
xchg
lods
fadd
das
mov
test
mov
sub
int
mov
cli
fdivr
pop
xchg
xor
lea
fs
lods
add
xchg
jb
cmp
mov
out
push
and
jmp
or
out
mov
movs
clc
mov
aaa
loope
xlat
mov
test
inc
lds
mov
movs
inc
cmc
xor
xor
ins
dec
es
fisub
inc
and
stos
mov
inc
pop
add
rcl
gs
imul
cmp
test
std
jle
dec
jle
pop
inc
mov
lahf
inc
jp
push
mov
scas
mov
xchg
les
push
(bad)
and
mov
nop
dec
movs
ss
adc
pusha
pop
or
cmp
add
cld
jl
push
arpl
pop
out
mov
jle
imul
std
mov
jo
hlt
cmp
xor
mov
inc
ja
out
push
lea
aas
adc
cmp
xor
sub
cmp
les
mov
jno
loopne
cmp
and
sub
pop
inc
inc
bound
les
pop
(bad)
jbe
add
xchg
fwait
mov
sub
dec
lds
inc
xchg
xor
xlat
dec
push
(bad)
xchg
test
mov
pop
imul
fisubr
out
imul
leave
cli
push
mov
or
push
das
mov
pushf
sub
ja
fld1
leave
repnz
stc
(bad)
mov
xchg
push
loope
sbb
add
dec
fucomi
not
nop
pop
mov
jle
(bad)
ffreep
add
(bad)
retf
add
in
pop
(bad)
into
int
ror
pop
sbb
add
rol
dec
lock
leave
adc
xor
mov
clc
in
ins
add
push
js
mov
aaa
call
inc
cli
mov
jbe
jg
inc
je
mov
inc
and
xchg
arpl
stos
add
inc
xchg
xor
data16
jp
and
mov
shr
jo
mov
sbb
les
adc
test
mov
mov
imul
sar
mov
mov
inc
jg
pop
adc
add
outs
mov
sbb
and
sbb
fimul
mul
and
mov
mov
jp
mov
mov
mov
pop
push
xchg
jp
retf
lahf
pusha
pop
aas
adc
mov
mov
bound
inc
mov
loopne
out
ins
(bad)
jmp
jecxz
mov
out
(bad)
cwde
imul
and
pop
ss
test
mov
add
dec
cmps
dec
mov
jo
ror
imul
jmp
xor
sahf
dec
shr
push
dec
loopne
adc
aam
loopne
xor
cld
cdq
add
xchg
pop
clc
pop
push
mov
and
das
arpl
imul
rcr
aam
xchg
adc
add
mov
(bad)
fisub
mov
push
adc
movs
out
out
or
mov
shl
mov
and
out
sub
inc
stc
push
or
pop
mov
jb
ins
jecxz
mov
in
jmp
add
and
out
jae
in
rol
xlat
lahf
int3
stos
lock
mov
inc
cld
sar
sub
mul
je
dec
cmp
pop
jecxz
jle
add
cmps
pop
pop
fstp
fild
or
jle
dec
cs
jmp
ret
jbe
(bad)
jnp
mov
or
xor
(bad)
aad
js
outs
lea
add
pop
or
sbb
loopne
in
stc
(bad)
mov
sub
inc
gs
push
push
popf
dec
cmps
call
mov
iret
pop
lock
aad
jge
loope
pop
xor
cmp
int
push
or
sbb
rcr
xchg
mov
adc
movs
pushf
jo
outs
sbb
mov
ret
xor
jae
popa
ret
outs
inc
sbb
mov
push
jmp
ja
lock
pop
xor
jmp
nop
addr16
call
ds
jnp
and
lahf
int3
icebp
dec
sbb
inc
rol
dec
cld
addr16
inc
or
jp
bound
es
cwde
pop
jecxz
adc
or
jge
add
mov
cmc
(bad)
mov
mov
jp
std
test
dec
je
ror
inc
int3
test
pop
lea
xor
pushf
jno
arpl
push
jl
xor
aaa
mov
push
adc
mov
ret
dec
fs
and
mov
retf
sub
vmovaps
inc
xchg
jl
clc
into
and
scas
shr
jbe
and
xchg
pop
xor
mov
repnz
push
jo
jnp
pop
outs
pop
hlt
fidiv
cmp
les
inc
mov
mov
pusha
dec
imul
clc
cld
leave
retf
inc
scas
sub
movs
sbb
add
jge
rcl
push
stos
push
into
lea
enter
in
push
pop
test
frstor
fmul
add
leave
ss
pop
int
pop
lods
dec
repnz
or
xchg
push
push
(bad)
push
mov
loop
cld
ja
jne
dec
lock
xchg
push
or
mov
imul
pop
ret
int3
cmp
sti
ins
lock
mov
aas
push
outs
loop
add
push
push
inc
dec
(bad)
pop
pop
fild
pop
sbb
or
adc
pop
jl
push
(bad)
clc
in
sahf
pop
sbb
xchg
mov
loop
sbb
les
bnd
mov
clc
call
inc
mov
jns
jle
out
fdivrp
xchg
aad
in
inc
or
dec
sti
adc
iret
push
ss
dec
mov
jns
popf
pop
jmp
mov
mov
loope
inc
sbb
stc
pop
movs
cmp
dec
test
jno
and
sbb
mov
inc
mov
xchg
xchg
inc
outs
pop
or
mov
push
pop
int3
test
pop
push
pop
imul
fs
push
sbb
adc
xchg
sub
lods
ja
inc
(bad)
adc
lods
cmp
xor
(bad)
ret
xlat
mov
ins
sahf
jne
jg
fld
cwde
pop
pop
push
mov
mov
aaa
cmp
lds
cld
push
dec
mov
push
outs
in
out
jl
push
stc
arpl
iret
pop
out
sbb
and
mov
int3
(bad)
push
rcr
cmp
xchg
stc
and
jb
inc
outs
or
retf
push
mov
cli
push
mov
mov
int
fwait
aad
mov
sub
loop
in
push
sbb
repnz
hlt
push
dec
inc
mov
xchg
pop
cmp
mov
xchg
jns
pop
ds
sahf
lods
mov
popf
aaa
test
rcl
adc
int3
jne
xor
fisttp
aas
sub
daa
loope
nop
out
(bad)
or
add
iret
pusha
(bad)
aaa
xor
adc
shl
stos
stos
cmc
sbb
movs
(bad)
cmc
or
or
rol
mov
ins
push
lods
or
leave
sti
dec
call
fstp
sbb
xor
popa
push
dec
outs
cdq
jmp
fcmovnb
push
nop
in
and
ret
adc
out
out
pop
sahf
aad
mov
mov
jmp
jae
cmps
pop
xchg
or
sub
push
sbb
out
repnz
fisttp
push
mov
cmp
and
push
outs
adc
cmp
call
pop
mov
dec
fisubr
push
or
mov
nop
retf
cmp
dec
imul
gs
gs
xor
add
adc
test
test
fstp
jae
add
cmp
dec
sub
(bad)
xchg
sub
fwait
cmp
fcom
cmp
test
out
lea
inc
and
xchg
leave
fst
mov
pop
sbb
and
outs
mov
mov
imul
xchg
bound
cmp
add
sub
xor
mov
cmp
adc
outs
push
cwde
cwde
out
or
cmp
mov
sbb
sbb
mov
fs
push
or
bound
push
xor
mov
cdq
jp
out
sub
jb
jmp
ret
dec
cmps
cmc
es
into
adc
mov
jmp
lods
imul
jb
add
pop
pushf
xchg
loopne
jmp
mov
sbb
rcl
pop
xchg
(bad)
js
xchg
cmp
(bad)
es
cmc
mov
sub
jno
ret
cmp
push
cmp
sub
js
cmp
mov
jae
push
int
popf
jmp
or
push
mov
sub
mov
mov
cmc
pop
pop
inc
xchg
pop
test
xchg
push
and
mov
add
aas
mov
(bad)
mov
(bad)
jmp
daa
pop
and
call
out
pop
lods
push
pop
jo
push
fldenv
sar
cmp
dec
push
add
jp
fsub
push
and
mov
fcom
nop
xchg
imul
popa
dec
and
pushf
popa
shl
lahf
inc
sub
xchg
and
jbe
pop
sti
gs
push
push
fst
push
aas
hlt
test
shl
xchg
test
xchg
leave
int
arpl
or
pop
std
movd
push
xchg
in
jno
retf
xchg
and
mov
leave
loop
sub
mov
xchg
mov
adc
cwde
out
es
mov
les
xor
pop
ret
cdq
sub
sub
fimul
jecxz
sub
icebp
mov
cmp
out
pusha
mov
or
adc
pop
loopne
pop
xor
inc
and
out
push
xor
and
and
lock
fbstp
rcl
sar
aas
pop
cld
jecxz
push
push
adc
ins
fnsave
xor
add
fneni(8087
xor
cmc
xchg
stos
test
icebp
stos
lods
es
pop
add
xchg
and
(bad)
mov
push
rol
in
jnp
sti
in
cs
mov
test
push
push
loop
sub
movs
mov
xchg
aad
push
jmp
leave
scas
adc
mov
and
xor
inc
arpl
mov
ffreep
dec
lds
scas
inc
jmp
mov
mov
enter
and
popa
jbe
pop
inc
mov
inc
mov
out
test
xor
fcmovnb
inc
mov
push
sub
imul
and
(bad)
fdiv
cmps
add
(bad)
sti
xor
nop
leave
call
fwait
xor
xchg
mov
in
cmp
jb
sbb
aas
imul
sbb
aam
hlt
cmps
cld
jl
not
xchg
mov
out
xchg
and
fmul
adc
pop
aad
lea
pop
pop
push
je
push
shr
push
int
into
sbb
ja
ins
mov
or
add
mov
call
lods
inc
in
jne
push
out
sbb
xor
xor
and
stos
mov
adc
xchg
push
std
push
add
jmp
repz
push
aad
retf
cli
(bad)
cwde
jae
inc
clc
xchg
test
jmp
xchg
xor
jg
push
push
xlat
xchg
jp
mov
popf
push
mov
mov
cld
dec
push
dec
cmp
aas
mov
int
mov
daa
loope
sar
push
push
mov
out
mov
(bad)
xlat
daa
retf
stos
repnz
cmpxchg8b
mov
pop
pop
jle
mov
outs
icebp
call
sub
ret
mov
fldenv
es
cld
shl
cs
xchg
push
xchg
mov
add
ret
xchg
mov
pop
mov
push
adc
jmp
add
and
sbb
rcl
jae
cmps
icebp
das
aam
pop
cli
jecxz
adc
add
out
std
sar
call
xor
sahf
stos
xchg
inc
jno
rcr
dec
cmp
cmp
sub
call
loop
and
mov
cmp
inc
xchg
add
sub
pop
push
scas
mov
out
xchg
je
fimul
repz
sbb
cwde
and
push
sub
pop
or
mov
outs
sbb
out
dec
bound
pop
aad
ss
pop
movs
mov
movs
jne
sbb
jmp
sub
sbb
push
inc
mov
xor
iret
(bad)
test
repz
in
pop
xchg
stc
loopne
and
retf
stos
sub
in
pop
arpl
jns
fdiv
adc
addr16
sbb
inc
imul
and
sbb
sbb
stc
mov
in
loop
inc
pop
mov
mov
xor
pop
fwait
mov
or
sub
sub
dec
adc
(bad)
push
mov
pop
dec
xchg
gs
mov
ret
je
shl
retf
ins
sub
out
adc
popa
shl
(bad)
mov
xor
push
stc
retf
fidivr
pushf
xor
rcr
ret
arpl
mov
add
std
lods
int
push
mov
test
mov
mov
dec
cmp
test
dec
or
cld
ss
jp
pop
cmps
fidivr
sbb
stc
fs
pop
inc
dec
ret
enter
scas
xchg
inc
mov
popa
das
lods
inc
popa
loopne
ja
outs
xor
cmp
jp
dec
dec
dec
mov
rcl
mov
out
xor
or
sahf
aam
movs
ss
cdq
ficom
les
xor
clc
add
fs
fwait
sub
je
sub
lock
and
sar
pop
mov
mov
mov
ds
pop
sbb
push
arpl
iret
ss
mov
mov
shl
es
mov
gs
fisubr
arpl
enter
cmc
js
movs
cmp
pop
pushf
ror
jno
movs
and
and
loop
call
pop
frstor
lods
mov
xchg
adc
popa
xchg
data16
push
mov
or
sbb
pop
outs
je
or
pop
popa
inc
jne
pop
fwait
pop
nop
popf
xchg
test
test
push
push
ins
and
je
(bad)
call
mov
xor
(bad)
imul
adc
fmul
mov
xor
adc
daa
xchg
and
add
icebp
loopne
inc
rcr
loopne
movs
shl
pop
add
xor
in
aas
daa
sahf
mov
add
and
mov
out
push
jb
addr16
jbe
add
rcl
lahf
ja
fisub
mov
pop
mov
xchg
cdq
xlat
push
in
dec
loopne
mov
xor
cld
fisttp
js
inc
xchg
cmps
sub
dec
in
xor
(bad)
adc
mov
retf
test
mul
jbe
sub
(bad)
and
fld
bound
xor
pop
fnstenv
mov
jae
add
mov
jmp
jmp
icebp
clc
rcr
xchg
mov
cld
xchg
call
adc
and
push
test
in
mov
jns
xchg
pop
adc
dec
xor
sub
retf
sbb
out
lods
mov
ret
lock
mov
sub
mov
ss
jp
pop
push
popa
sbb
inc
dec
out
dec
push
stos
inc
es
sub
(bad)
mov
neg
and
sbb
retf
packuswb
aas
sub
adc
pop
out
(bad)
mov
xchg
les
ret
dec
cmp
loope
pop
inc
jo
jmp
dec
or
mov
jmp
stos
mov
add
add
add
mov
jo
xor
loope
adc
xchg
pusha
jg
mov
jl
pop
mov
je
mov
pop
cmp
ficom
sahf
aas
push
ss
pop
rcr
inc
sbb
mov
das
mov
fstp
icebp
lock
xor
gs
or
cwde
add
mul
adc
popa
inc
xor
push
push
(bad)
repz
dec
sub
jecxz
lahf
dec
mov
jle
mov
int3
ret
mov
and
push
mov
int3
out
push
(bad)
mov
add
inc
sbb
aam
adc
mov
jmp
push
xor
mov
cmp
fwait
mov
loopne
das
jecxz
and
pushf
out
adc
push
mov
xchg
add
dec
pop
out
pop
sub
call
jb
push
inc
push
psllq
inc
imul
push
and
adc
jo
movs
jno
add
add
adc
cmc
pop
push
xchg
jecxz
fcmovne
in
cmp
mov
gs
xchg
pop
cmp
cmp
cmp
out
mov
hlt
dec
retf
dec
jae
imul
dec
aas
lds
fbstp
adc
popa
push
punpckhdq
sar
pop
arpl
dec
add
outs
jmp
and
pop
div
cmps
in
dec
sar
jmp
jecxz
mov
mov
add
mov
fdiv
cmp
sbb
fiadd
daa
aas
push
clc
call
xchg
mov
clc
scas
cmc
rcl
mov
jno
inc
fsubr
cmps
dec
cmp
int
sub
dec
jns
pop
in
lock
dec
add
and
push
shl
lahf
ficom
push
popf
popa
jns
std
lds
mov
inc
(bad)
rcl
shl
call
and
xor
push
mov
xchg
mov
rol
jmp
jge
mov
mov
(bad)
call
pop
fwait
ins
adc
or
xchg
fwait
scas
mov
sub
or
xor
imul
mov
sub
sar
xchg
mov
and
aam
and
push
movs
mov
adc
sbb
fimul
sbb
jmp
mov
cmp
dec
sub
test
(bad)
ins
scas
cmp
cld
mov
push
xor
fmulp
pop
mov
cwde
mov
leave
mov
(bad)
int
inc
arpl
mov
sbb
ret
cmc
out
pop
mov
push
push
shr
test
clc
xchg
rol
mov
repz
or
outs
rcr
or
lods
pop
cs
std
inc
in
in
retf
dec
pop
vmovsd
push
sub
outs
inc
adc
dec
jbe
adc
sbb
hlt
mov
or
inc
cmp
leave
push
fcom
xchg
sub
add
stos
mov
ret
dec
or
call
pop
arpl
xchg
ror
jmp
xchg
scas
loopne
xchg
mov
hlt
push
movs
test
out
dec
lods
xor
cmps
and
or
xor
cmp
push
sub
movs
gs
add
loop
mov
cs
cs
test
sbb
inc
imul
push
jne
movs
xor
(bad)
pop
inc
sbb
or
in
mov
push
jmp
std
nop
pop
inc
xchg
call
push
inc
cmp
xchg
loopne
jnp
retf
int3
out
mov
pop
jnp
rol
in
stc
shr
sbb
test
rcl
and
daa
pushf
pop
pusha
mov
call
loopne
stos
inc
xchg
add
mov
mov
sub
retf
push
cmp
imul
std
xchg
fwait
outs
int
fwait
ds
adc
stos
stc
sub
clc
in
fld
lock
daa
leave
popf
popf
in
push
es
mov
test
dec
sbb
je
fs
mov
pop
int
movs
leave
xor
cs
addr16
push
or
inc
jge
test
dec
jne
xchg
add
js
mov
add
ss
pop
add
jne
sub
and
lock
js
pop
fldenv
aas
add
pop
push
mov
(bad)
jecxz
push
outs
mov
jne
dec
and
push
adc
dec
iret
jmp
cmp
mov
fbstp
inc
fdivr
mov
adc
sub
push
sar
inc
cmp
add
aaa
ss
hlt
outs
in
and
add
xor
rcl
mov
xchg
jno
push
push
jp
sahf
sahf
cmp
(bad)
mov
cmp
sbb
sbb
jmp
jns
pusha
pop
or
adc
lea
call
js
retf
sar
or
scas
jmp
in
mov
lds
jmp
mov
vucomiss
lahf
addr16
xor
push
sbb
popf
scas
imul
mov
scas
fwait
inc
mov
scas
push
xchg
inc
push
bound
mov
xchg
repz
dec
js
daa
sbb
loope
dec
push
adc
pop
push
cli
movs
shl
dec
xchg
sbb
sahf
inc
push
or
mov
pushf
ds
or
xor
xor
mov
jl
test
fwait
xor
cs
(bad)
mov
cmps
popf
adc
retf
dec
inc
fidivr
sub
test
int
jl
pop
ins
xor
popf
scas
bnd
mov
dec
js
push
pusha
xchg
xor
(bad)
mov
aas
push
sub
aam
xor
loop
inc
cmp
in
std
jge
adc
scas
clc
add
arpl
dec
jmp
adc
pop
jbe
mov
cmp
mov
pop
push
add
imul
pop
inc
dec
repz
push
mov
aas
les
(bad)
cs
lahf
lea
retf
dec
push
dec
inc
aas
sub
out
xor
mov
xor
rol
fwait
cmps
xchg
sbb
into
in
(bad)
mov
cmp
and
mov
sub
sub
and
jns
popa
mov
out
mov
sbb
addr16
mov
sub
push
adc
and
mov
sub
aad
cmp
nop
lahf
jge
cld
jmp
dec
mov
mov
push
sub
push
dec
cmp
pop
dec
fs
leave
call
sbb
mov
rol
bound
xor
enter
jne
(bad)
cmp
jns
adc
(bad)
jle
and
push
lods
dec
cmps
adc
mov
hlt
sub
adc
sti
pop
or
mov
(bad)
popa
repnz
(bad)
int
cdq
ds
pop
mov
out
sbb
mov
jns
es
cwde
push
rcr
pushf
jns
mov
cli
xchg
jnp
ror
inc
rcr
xlat
cdq
mov
and
sbb
idiv
sub
psllq
mov
mov
enter
xchg
push
jnp
sub
pop
pop
xlat
out
shl
jge
cmps
outs
dec
sbb
sbb
ret
faddp
fild
cmp
out
inc
cmp
aas
dec
aas
mov
fstp
call
popa
call
mov
pop
mul
fbstp
je
shr
int
mov
push
data16
mov
retf
jle
inc
jmp
inc
add
movs
fisttp
(bad)
mov
sahf
loope
inc
and
in
and
push
adc
xchg
jbe
pop
(bad)
or
test
inc
pop
mov
cmps
mov
lds
push
ja
jb
js
adc
pop
mov
iret
jge
mov
rcr
sar
retf
shl
xchg
push
xor
pop
(bad)
stc
mov
cmp
cmps
aad
fisubr
cmp
push
xchg
sbb
or
pop
es
inc
cmps
dec
jns
xor
mov
push
sbb
std
inc
or
ins
int3
push
and
sub
ds
mov
xor
fisub
pop
push
mov
stos
scas
int
xchg
sbb
sahf
(bad)
adc
retf
mov
sub
rol
push
adc
add
mov
and
nop
push
mov
dec
loop
sbb
imul
outs
push
les
int
adc
in
push
out
push
aaa
mov
dec
mov
dec
mov
inc
stos
jbe
xor
leave
les
aaa
jne
mov
sar
and
(bad)
fwait
add
into
mov
dec
loope
sub
lahf
jle
test
into
cmp
fdiv
imul
add
cmp
(bad)
xor
(bad)
mov
arpl
adc
shl
imul
dec
ror
shr
xchg
push
inc
adc
les
lock
cmc
add
jmp
out
inc
arpl
shl
daa
push
sub
rcl
pusha
sub
or
pop
mov
or
clc
aad
retf
sub
aad
mov
jle
xor
and
adc
(bad)
div
mov
test
cmp
push
mov
paddsw
mov
fisttp
adc
shr
pop
push
mov
dec
pop
mov
cmc
pop
inc
mov
mov
xor
int3
xor
sub
push
fs
scas
add
cli
ins
mov
jae
xor
mul
pop
out
pop
mov
aas
out
pop
mov
mov
cmp
jge
fild
(bad)
jl
add
add
rcl
jge
push
jno
mov
push
ss
or
xor
xchg
pop
pushf
popf
aam
mov
cmp
mov
aad
mov
pop
clc
out
push
out
inc
fdivr
std
cld
dec
sub
test
and
loope
(bad)
pusha
or
fisttp
test
in
mov
aas
ror
sahf
cwde
xor
call
test
push
sub
jecxz
add
(bad)
inc
dec
shl
out
pop
mov
and
mov
or
xor
rol
imul
push
push
ss
push
mov
or
jg
xchg
and
rcl
in
mov
dec
jb
push
lds
or
inc
pop
and
inc
cmps
stc
sbb
and
push
cdq
jmp
ss
jb
(bad)
adc
(bad)
adc
repnz
dec
xor
sub
cmp
retf
ins
arpl
or
cmp
mov
stos
repz
sub
add
and
xchg
cmp
nop
jno
mov
ss
mov
and
lahf
cs
test
xchg
mov
mov
dec
xlat
xchg
sbb
fistp
pop
mov
into
(bad)
(bad)
addr16
jecxz
in
mov
sbb
loop
mov
dec
outs
dec
call
dec
out
mov
call
jno
fsubr
inc
dec
or
aam
pop
or
call
cmps
cs
add
mov
aaa
inc
cmp
lods
pushf
and
pop
add
mov
mov
iret
jo
gs
ret
ins
push
dec
and
fstp
pop
mov
nop
cdq
push
pushf
adc
sub
jbe
aam
stos
lods
test
ja
jle
sbb
lahf
cmps
mov
add
mov
push
xchg
jmp
inc
test
jge
arpl
mov
jle
cld
shl
psubusw
int3
adc
pushf
xchg
fistp
ror
xor
push
or
iret
ffreep
sti
push
and
retf
lock
ins
xchg
sbb
addr16
jo
in
fadd
fwait
dec
add
pop
mov
xor
xor
sbb
mov
int
das
pop
inc
test
cwde
aaa
ins
into
ja
xor
jge
push
dec
or
aas
jbe
ins
push
sbb
and
jns
xchg
js
mov
pop
lock
cmps
inc
iret
fnsave
mov
shl
pop
sbb
inc
jg
outs
add
stos
push
stos
ins
mov
pop
pop
jno
dec
rcr
std
mov
movaps
and
aam
loope
ins
ror
sub
sbb
sub
or
jle
aaa
push
stos
xchg
lahf
mov
sub
aad
bound
sub
scas
xor
sahf
or
ret
add
or
stc
out
aas
pop
cdq
int
xchg
push
je
cmps
fs
sbb
mov
dec
xchg
or
xchg
sbb
sub
sub
test
push
imul
jmp
mov
movs
jb
jp
stos
retf
add
in
sbb
dec
in
dec
sahf
ds
int3
lea
mov
xor
jne
fldenv
ficomp
sti
in
dec
mov
push
inc
ss
and
jge
mov
scas
xchg
lds
test
xor
ins
adc
push
or
mov
cwde
sbb
scas
mov
aam
cmp
test
inc
int
ins
sub
jo
ret
fdiv
out
retf
jbe
xor
and
in
js
inc
xor
push
sbb
jecxz
je
cmp
sbb
imul
mov
adc
popf
pop
xchg
aam
mov
mov
xor
loopne
adc
xchg
xchg
push
mov
pop
test
mov
jmp
hlt
mov
sti
xor
shl
cwde
xor
int
in
and
push
shr
out
sub
and
jnp
daa
mov
fisubr
xor
jne
cmp
sbb
inc
test
jmp
jl
sub
jb
retf
xchg
adc
call
cmc
push
jge
adc
push
cmp
(bad)
fcmovnb
cli
inc
mov
sbb
arpl
and
test
push
pop
popa
xor
loopne
ficom
inc
push
and
dec
mov
xlat
cmps
fdivr
es
xchg
fstp
add
leave
and
pop
adc
inc
add
cwd
jmp
int
enter
cli
test
xlat
mov
mov
dec
(bad)
and
into
inc
shr
xchg
xchg
enter
int
call
(bad)
rcl
adc
jo
mov
cmps
(bad)
stos
push
dec
xlat
sbb
inc
sbb
sbb
dec
adc
stc
int3
pop
cwde
sbb
ficom
adc
lea
mov
and
fwait
retf
sub
mov
jmp
mov
sar
pop
xchg
xor
aas
pop
cli
retf
xchg
jmp
lods
cmps
bound
dec
test
test
xor
mov
clc
lds
fsub
mov
mov
out
mov
inc
mov
mov
icebp
aad
(bad)
imul
les
inc
jo
or
sbb
mov
mov
pop
aaa
fst
xor
jae
mov
fcomp
cmp
mov
adc
jg
sbb
(bad)
test
push
add
dec
jecxz
xor
(bad)
ffree
mov
jb
daa
cld
sub
stc
test
xchg
sbb
jmp
ins
or
adc
xchg
dec
test
pop
repz
cmc
ret
adc
and
xor
ss
pop
add
adc
adc
cs
ficomp
mov
xor
add
iret
iret
retf
icebp
xchg
imul
aam
aaa
fcmovb
lahf
push
(bad)
(bad)
mov
push
(bad)
sbb
stc
push
inc
or
es
test
sbb
stc
xor
fdiv
ret
out
or
gs
jno
mov
jecxz
inc
jg
mov
mov
mul
ror
jne
int3
scas
test
cmp
xchg
and
xchg
sbb
mov
repz
ret
addr16
or
scas
inc
dec
push
jmp
aaa
sar
popa
test
fisttp
mov
pop
xor
jo
imul
pop
call
push
dec
ret
mov
pop
sahf
repnz
adc
ja
jl
(bad)
sub
iret
stc
pop
xchg
dec
test
adc
push
test
es
out
fmulp
cmp
scas
xchg
call
ret
dec
outs
mov
or
push
mov
aam
mov
cmps
(bad)
(bad)
jecxz
ret
adc
fwait
xor
lods
shl
cmp
and
mov
xchg
gs
jle
sbb
ja
mov
repnz
jg
pop
mov
pop
out
sbb
jge
or
leave
add
cmp
dec
inc
movs
cmp
pop
ficomp
les
push
int
mov
lods
test
jle
jno
push
fstp
jb
lods
pop
test
sbb
test
cmc
sub
and
inc
mov
mov
xchg
xor
aam
addr16
mov
imul
sbb
cmps
mov
shr
les
stos
sub
out
push
and
mov
outs
lahf
mov
lds
push
enter
lock
(bad)
sahf
stc
cwde
arpl
jge
sub
xor
popaw
inc
push
retf
jg
sbb
pop
daa
nop
(bad)
ror
(bad)
adc
jnp
cmp
cli
das
sub
push
cmp
jmp
(bad)
idiv
cmps
pop
and
pop
jmp
in
cmp
(bad)
loope
xchg
sub
scas
xchg
popa
gs
push
dec
mov
leave
addr16
push
mov
cmp
sbb
mov
fmulp
adc
loopne
jge
fs
clc
mov
fcmovne
push
sar
loope
cmps
arpl
daa
pop
mul
daa
pop
push
dec
(bad)
lds
out
inc
cmp
pop
int
popa
cmps
movs
std
das
xchg
jle
mov
jmp
cmp
mov
sub
push
mov
pop
nop
xchg
and
mov
iret
test
in
push
sbb
jae
inc
imul
retf
push
add
ins
std
fild
movs
xor
fmul
inc
jecxz
mov
je
fadd
les
in
cwde
xor
(bad)
pop
data16
test
jno
shl
adc
pusha
jmp
movs
mov
add
adc
sahf
es
addr16
cmps
dec
adc
into
mov
cmp
fcmovnu
or
outs
iretw
pushf
xor
in
inc
out
sahf
sbb
mov
inc
adc
outs
xchg
test
repnz
dec
dec
adc
jl
repz
push
push
xlat
lea
aaa
sbb
jecxz
xchg
mov
lock
mov
xor
mov
push
inc
mov
xor
xchg
xchg
jb
xchg
pusha
mov
popf
rcl
fstp
ins
sbb
leave
mov
or
xchg
xor
ficom
pop
imul
mov
add
not
inc
nop
jne
push
loopne
les
sub
stc
mov
(bad)
push
sub
inc
movs
out
sar
imul
xchg
call
das
xor
mov
jecxz
stos
jle
dec
inc
mov
repnz
jl
cmps
and
mov
int
shl
sub
sar
(bad)
mov
icebp
scas
ret
push
out
out
add
adc
mov
jnp
xchg
pop
xchg
shr
mov
push
div
popa
(bad)
pop
inc
pop
bnd
jmp
jmp
ret
bound
jle
cmp
xchg
out
sar
mov
test
stos
add
jae
cli
sbb
stos
ror
xor
enter
add
cmp
xchg
mov
js
outs
jnp
jnp
pushf
mov
(bad)
lods
fdiv
cli
push
mov
inc
pop
mov
ror
mov
push
and
adc
rcr
in
jae
jmp
inc
sub
add
cmp
push
add
bound
xchg
(bad)
(bad)
mov
sub
addr16
inc
mov
xor
retf
mov
into
inc
mov
xor
and
not
shl
push
test
dec
int3
push
and
xor
out
rol
stos
fist
fldcw
imul
mov
mov
leave
into
leave
mov
aam
test
stos
outs
sar
pop
mov
jae
call
out
stos
jmp
dec
jmp
inc
jb
(bad)
lea
jmp
adc
fisub
push
loopne
in
pop
or
into
jmp
dec
lods
inc
les
mov
push
and
repnz
shr
jne
inc
mov
add
loop
std
outs
jmp
loop
fcom
movs
jne
xchg
add
pop
in
pop
sub
xchg
push
sbb
dec
rcl
aaa
or
mov
jmp
xor
inc
mov
scas
xchg
out
pop
stos
sar
cmps
scas
lds
call
enter
inc
push
in
lock
fsub
mov
mov
adc
shl
mov
int
test
sbb
ins
out
jmp
(bad)
cs
jmp
movs
cmp
pop
and
xchg
jae
call
mov
xor
xchg
push
lds
lds
xchg
mov
cmp
test
mov
(bad)
cmp
xchg
ins
inc
call
or
mov
cmp
inc
test
(bad)
mov
mov
xor
push
ins
inc
dec
add
dec
mov
pop
pushf
bound
lahf
scas
shl
inc
stc
jae
fwait
jo
call
pop
add
xchg
sbb
mov
je
jnp
shl
(bad)
inc
cmp
fsub
jl
sub
or
xchg
bound
pushf
inc
push
movs
adc
outs
sbb
test
mov
jno
shl
inc
cmp
aaa
int3
into
cmp
push
sub
xchg
loope
push
inc
mov
fld
idiv
stos
mov
push
jne
cmps
inc
mov
inc
(bad)
ja
test
outs
jne
cmp
in
mov
jns
aas
retf
pusha
lock
sub
outs
xor
sub
mov
stos
mov
mov
ins
mov
hlt
push
in
jge
mov
movs
mov
stos
or
data16
adc
movs
inc
mov
xchg
fcomp
xor
jo
in
push
ret
push
sub
movs
dec
push
lahf
push
and
push
adc
imul
inc
call
scas
cmp
add
outs
mov
jecxz
sub
mov
loop
fbstp
test
xor
xchg
xchg
(bad)
mov
(bad)
jnp
je
jo
mov
pop
lahf
sbb
ja
inc
pop
pop
outs
lea
fcom
sbb
sbb
loopne
lods
pusha
jno
rcl
adc
push
dec
ja
fcom
das
inc
test
(bad)
mov
dec
sub
mov
xchg
in
dec
js
pop
push
xchg
adc
lock
lds
bound
outs
xchg
clc
mov
sub
xchg
or
xlat
jbe
inc
(bad)
jns
push
call
test
dec
jle
test
pop
repz
or
aas
loop
and
and
push
lahf
push
push
je
push
pop
jno
or
or
(bad)
xlat
xchg
fsubp
int3
sbb
sbb
(bad)
fldenv
mov
pop
test
lds
mov
aas
or
push
mov
lods
(bad)
add
mov
pop
daa
inc
xor
das
add
adc
ja
jnp
pop
neg
mov
jmp
mov
jnp
or
or
stos
lea
xor
jns
mov
pop
or
jbe
inc
push
add
mov
add
pop
push
sub
dec
xlat
xchg
fcmovne
add
mul
rol
inc
(bad)
(bad)
dec
dec
push
sbb
pop
call
or
mov
in
dec
fdiv
std
jl
cmc
inc
fxch
jne
and
repz
rol
outs
neg
push
jae
jmp
and
jmp
adc
inc
mov
enter
jae
push
cmps
mov
lock
js
iret
popf
xchg
rol
pop
ret
xchg
loopne
pop
test
mov
enter
xor
jp
bound
aam
ins
nop
fisttp
inc
xor
xchg
mov
pusha
inc
daa
out
lahf
sti
mov
clc
sub
cmp
pop
mov
fnstcw
dec
fsubr
je
mov
loope
jne
xor
jge
fs
ret
icebp
cli
stos
mov
test
inc
and
cmp
ret
jg
jmp
mov
scas
fwait
jge
xchg
jb
dec
xchg
out
push
xor
out
inc
fidiv
dec
dec
int3
sbb
jp
cmp
jno
inc
mov
movntq
movs
sub
sbb
push
outs
push
out
ror
in
ins
fimul
fsubr
in
cwde
stc
in
rcl
mov
jns
fwait
pop
inc
xchg
sti
ins
clc
xchg
jbe
add
sbb
jg
fwait
xor
test
scas
xchg
loop
test
imul
mov
xor
ret
call
push
test
push
inc
pop
scas
addr16
lahf
mov
fst
and
mov
xchg
cmp
jge
lea
xor
jmp
adc
js
cs
int3
mov
cmp
mov
jmp
call
imul
ficomp
jl
rcl
push
leave
ss
adc
inc
arpl
jmp
mov
iret
jle
out
call
mov
sub
adc
pushf
pop
lea
pop
sbb
fild
ret
fst
adc
and
mov
inc
mov
cmp
rol
mov
aam
inc
std
or
xor
mov
mov
fisubr
xor
cld
mov
jo
sub
call
sar
xchg
cdq
and
xor
shl
inc
inc
jmp
mov
repz
push
cmovs
add
cmps
mov
pop
mov
stos
sbb
or
pop
movs
jbe
push
push
sti
ret
inc
push
pop
ds
aad
jbe
inc
sahf
cmp
jl
(bad)
in
(bad)
loope
outs
mov
pushf
sbb
mov
jo
sub
cmps
cmp
xor
mov
test
invd
adc
out
std
sahf
mov
adc
push
jno
vpor
and
test
(bad)
shl
les
es
or
mov
adc
jle
ins
test
pusha
sub
cs
jns
daa
icebp
outs
cmp
push
cli
pop
adc
daa
xor
pop
mov
xchg
inc
cmps
rol
aaa
and
mov
cmp
test
jge
test
enter
inc
std
cmp
je
in
add
fstp
adc
std
repnz
or
test
and
ficomp
pushf
in
cmp
cwde
out
xchg
outs
jbe
pop
dec
inc
push
pop
adc
js
call
mov
dec
and
enter
mov
fisubr
fadd
imul
mov
sbb
fldcw
mov
inc
adc
sar
ds
repnz
and
(bad)
dec
or
mov
repnz
aas
mov
mov
push
pop
adc
sti
jg
enter
ret
test
pop
(bad)
cli
pop
fwait
xchg
mov
call
push
lock
pop
pop
mov
jne
or
jge
jno
scas
adc
cli
sahf
out
js
cmp
inc
sub
and
pop
ror
jecxz
cli
sbb
(bad)
pop
mov
aam
(bad)
fdivr
push
inc
(bad)
sbb
retf
lods
adc
stc
mov
fisttp
hlt
outs
push
xchg
adc
jbe
inc
lds
push
dec
cmp
ds
in
cmps
pushf
add
jne
inc
xchg
popa
jns
jecxz
mov
shl
(bad)
pop
push
ror
mov
repz
xchg
(bad)
jb
sbb
mov
into
xchg
push
lahf
cli
dec
in
pop
push
push
fwait
jns
mov
inc
push
cli
std
add
ins
pushf
cmp
fwait
jne
cmp
mov
xchg
jns
addr16
xor
aas
xor
(bad)
std
mov
add
adc
ret
push
sbb
jns
push
mov
jmp
cmp
iret
das
aaa
pop
mov
shl
hlt
(bad)
dec
inc
jmp
jno
jae
push
jb
jno
enter
int3
test
cmps
stc
(bad)
mov
mov
pushf
mov
lock
cmc
mov
mov
sbb
rol
xlat
push
cmp
xor
ins
idiv
adc
aaa
movs
push
test
fdivr
rol
in
push
mov
fsubr
and
sti
jns
ins
xchg
fwait
or
add
repnz
clc
mov
outs
inc
push
into
or
pop
(bad)
pop
jb
and
and
sub
jnp
cmp
jo
leave
outs
add
fstp
hlt
push
in
mov
clc
add
inc
cmps
pop
jo
loope
cwde
cdq
das
xor
mov
jmp
ins
data16
aam
rcr
push
adc
pop
jp
outs
(bad)
pushf
adc
pop
jl
test
(bad)
dec
sahf
cmps
out
mul
or
adc
fcmovb
sar
xor
sub
jo
inc
lock
add
test
pop
popf
les
adc
mov
test
mov
dec
daa
rcr
sbb
pop
das
sub
loope
ins
mov
pop
dec
dec
adc
add
leave
xlat
neg
xor
loopne
sub
push
repz
push
adc
sbb
hlt
sub
out
rol
adc
push
jl
retf
xchg
or
cs
cmp
push
dec
ins
and
sub
pop
lods
xlat
dec
sbb
cmps
out
lods
test
push
es
adc
out
jae
dec
bound
sub
sbb
inc
fsubr
mov
mov
xchg
test
xchg
lods
sbb
js
pop
in
call
and
pop
adc
pop
inc
popa
aas
cmp
lods
or
aam
pop
test
enter
xchg
xor
mov
gs
jg
retf
push
adc
out
cli
sbb
jmp
push
and
or
out
outs
jno
xchg
ret
hlt
cdq
popa
jb
psraw
cdq
call
and
fadd
jne
and
pop
and
xchg
ins
rcl
loope
sub
pop
and
mov
xchg
clc
push
ja
pop
out
dec
sbb
loopne
cld
jmp
stc
mov
in
pop
cmps
adc
add
fmulp
mov
push
ja
in
cs
bound
mov
push
adc
cld
xchg
int
pop
xchg
into
aad
out
xrelease
test
xchg
call
xor
or
inc
cmc
sahf
hlt
lahf
and
push
pop
lea
in
mov
mov
push
loopne
mov
and
dec
jmp
sti
dec
int3
sbb
bound
sub
fnstsw
xchg
clc
jb
scas
mov
arpl
(bad)
dec
sub
movs
sbb
sbb
dec
sub
popf
iret
test
sbb
(bad)
addr16
mov
es
retf
cmp
inc
sub
out
jle
cs
in
add
icebp
jmp
outs
pop
jae
call
mov
je
sahf
and
int3
ficomp
cld
aaa
xchg
or
adc
push
fcomp
push
and
push
not
push
push
inc
or
jle
movs
in
sbb
push
loope
arpl
push
push
cmp
push
add
add
pop
loop
lahf
jg
xchg
cmps
or
std
sbb
cmp
pop
xor
sub
sub
ror
and
mov
jmp
mov
push
shl
repz
or
loopne
push
ins
(bad)
adc
loop
retf
add
bound
push
mov
in
bnd
cmp
leave
jne
mov
gs
mov
je
fsub
neg
jle
and
(bad)
stos
loop
add
cmp
test
shl
movs
add
sbb
not
popa
(bad)
dec
mov
inc
shr
daa
test
(bad)
(bad)
jmp
lea
scas
dec
cmp
mov
cmp
ret
fwait
in
lock
daa
xchg
pop
mov
sbb
sar
lock
imul
mov
pop
xchg
push
cs
mov
stos
cmp
stc
ss
loop
aam
popa
sbb
int3
xchg
je
clc
(bad)
lods
int
lods
outs
push
push
jmp
int
cld
dec
jmp
les
shl
mov
sbb
movs
fiadd
sub
les
and
out
call
adc
pop
mov
dec
ss
ret
lods
xor
inc
jb
jecxz
pop
jp
sub
mov
ins
adc
adc
mov
mov
outs
mov
push
lea
aam
out
iret
push
push
(bad)
iret
sub
movs
xor
shr
lock
loop
inc
je
les
push
aas
nop
out
fwait
dec
hlt
sub
adc
push
clc
pop
daa
bound
int3
mov
sbb
sub
out
push
bound
sub
mov
lock
push
mov
mov
dec
lock
lea
es
test
loop
mov
lahf
sbb
xor
in
fistp
or
aad
test
in
push
mov
dec
add
popf
push
mov
cli
adc
pop
ds
outs
jecxz
ins
jmp
sub
iret
iret
cmps
icebp
std
imul
sbb
sub
daa
sub
int3
ss
adc
adc
std
retf
push
out
cld
daa
call
sbb
cwde
xchg
into
pop
dec
aaa
or
push
sub
imul
mov
jmp
test
in
inc
syscall
popf
(bad)
pop
arpl
jp
xchg
ret
inc
stos
je
fs
or
out
inc
(bad)
pusha
adc
push
jmp
inc
aaa
pop
inc
int
aad
loope
or
or
jge
fld
inc
mov
dec
repz
pop
cli
fistp
ds
dec
pop
mov
outs
jno
das
and
aad
pop
clc
ins
call
fcomp
retf
fs
adc
hlt
in
or
repz
imul
pop
adc
cs
and
(bad)
mov
popa
sub
iret
cmp
add
pusha
ficomp
in
test
cmp
icebp
in
or
and
jge
mov
jbe
lods
lock
cmps
jns
ds
mov
add
stos
xchg
jae
xor
push
repz
cmp
sub
sahf
add
pushf
xor
push
mov
shl
inc
(bad)
dec
xchg
adc
push
(bad)
aad
push
xchg
mov
inc
ins
ins
inc
mov
test
shr
cmp
les
div
sar
jmp
aad
xchg
adc
pop
repnz
jae
jg
and
xor
push
mov
movs
rol
jmp
jle
xor
xor
stc
loop
xchg
jmp
inc
imul
or
fdivr
shl
xchg
push
lods
mov
addr16
fsub
mov
out
rep
sub
add
fsubrp
js
mov
std
jmp
push
adc
icebp
jle
sbb
stos
add
(bad)
jmp
cmp
jmp
fwait
aam
aad
pop
mov
add
jne
in
sub
sub
shl
mov
or
cmp
aaa
mov
push
movs
dec
rcl
push
sbb
cwde
test
mov
push
int
jnp
cmc
mov
push
(bad)
push
mov
or
mov
je
add
xchg
sbb
in
jno
or
xchg
mov
ins
mov
movs
aas
fstp
mov
push
scas
outs
mov
push
cmp
pop
cmp
(bad)
int
jnp
ja
push
mov
jb
xor
out
mov
sar
add
cli
int3
cmps
aad
stc
fisttp
dec
out
jecxz
xchg
and
pop
(bad)
or
adc
xchg
mov
(bad)
and
(bad)
(bad)
mov
adc
es
adc
sbb
mov
sbb
loopne
sbb
sub
dec
(bad)
jmp
jmp
inc
sub
call
add
xchg
mov
mov
std
dec
pop
pop
sub
xchg
inc
add
retf
adc
adc
out
ret
pusha
imul
sbb
shl
inc
pop
push
ds
add
or
in
loope
or
push
or
ds
lahf
std
sbb
and
xor
retf
mov
xchg
jecxz
fst
retf
aam
sbb
push
int3
cs
les
jp
jmp
aam
mov
mov
std
dec
arpl
cdq
or
arpl
inc
aam
mov
push
mov
std
inc
xchg
xor
mov
xchg
repnz
jge
in
sub
call
outs
and
jo
in
xor
mov
gs
add
pop
or
add
mov
sub
cmp
dec
inc
pusha
retf
mov
loope
mov
cmp
cmps
ret
cmp
adc
sub
int3
enter
mov
dec
push
jp
mov
and
sbb
mov
fiadd
xchg
inc
add
daa
jns
sub
add
test
leave
iret
fld
adc
adc
stos
stc
sub
repz
jnp
sbb
and
cli
add
push
enter
cmp
fidiv
push
jae
pop
push
shl
stos
cmp
jo
mov
imul
inc
rcr
lahf
rcl
adc
(bad)
add
cmp
dec
lds
loope
pop
sub
fst
cld
or
pop
clc
retf
xchg
xor
fcomi
pop
addr16
call
lods
js
aad
xor
imul
hlt
adc
retf
shl
stos
mov
into
and
ins
cmc
jmp
sub
mov
mov
xchg
les
adc
(bad)
call
iret
mov
add
aam
mov
mov
pop
in
add
mov
outs
jns
ror
arpl
mov
ss
call
cmp
rol
mov
ins
pop
popa
out
ja
jmp
fisttp
or
(bad)
lods
cli
repnz
inc
or
jle
dec
xor
dec
sbb
xchg
fistp
push
dec
out
je
imul
inc
fwait
mov
dec
mov
xchg
cmp
mov
lods
dec
xchg
mov
lods
(bad)
repz
xchg
mov
repz
stos
push
(bad)
and
nop
mov
daa
aad
jo
cmp
mov
adc
pop
nop
fidivr
outs
loop
mov
xlat
fisttp
dec
or
inc
(bad)
cs
mov
retf
xor
mov
xor
pop
icebp
dec
rol
mov
sbb
inc
xor
loopne
add
cdq
cli
iret
pop
mov
push
cmp
cwde
inc
outs
arpl
(bad)
jge
dec
into
mov
bswap
xor
stos
pop
mov
mov
mov
mov
mov
out
cli
adc
popf
fild
mov
or
fldcw
xchg
dec
lds
sub
inc
and
fs
mov
das
lea
imul
popf
mov
call
push
hlt
sti
mov
cwde
scas
stos
or
rol
mov
push
mov
fimul
(bad)
(bad)
enter
mov
imul
jno
ins
movs
xchg
fs
mov
push
cmp
inc
pop
int3
lahf
int3
pusha
mov
mov
loopne
mov
aam
add
(bad)
out
rcr
cmps
dec
xchg
jmp
add
out
mov
jne
js
data16
imul
jno
arpl
call
xchg
leave
dec
cmp
mov
fs
and
frstor
pop
dec
inc
in
shl
pusha
pop
adc
cmps
lods
rep
in
xor
lock
pop
sub
xor
ins
data16
test
mov
mov
dec
or
je
ret
outs
mov
or
cmps
jg
push
out
and
inc
lock
scas
movs
rcr
fstp
movs
xchg
shl
cmp
jge
fadd
xchg
imul
mov
mov
lds
push
fidiv
push
mov
pop
lahf
xchg
inc
inc
test
fcomp
mov
cmp
psubusw
pop
xchg
and
inc
popa
rcl
mov
xor
lds
ret
sbb
push
push
pusha
cmps
jnp
dec
cli
outs
leave
mov
cmp
inc
aam
ja
sbb
std
inc
mov
fstp
imul
pop
dec
(bad)
sbb
test
aam
mov
imul
push
mov
sub
mov
mov
call
(bad)
aad
out
enterw
(bad)
and
jb
xchg
add
(bad)
pop
out
cli
cmp
inc
loop
out
loopne
jl
lds
lods
add
add
sbb
jo
mov
movs
fidivr
pop
nop
ss
loopne
and
or
mov
or
push
sub
add
mov
lock
(bad)
je
std
sub
xchg
lods
stos
jecxz
xor
scas
mov
sub
push
push
(bad)
mov
cmp
outs
xchg
jno
mov
aas
push
cmp
push
adc
js
push
addr16
mov
pop
int
in
pop
jns
cdq
add
ins
and
hlt
shl
push
dec
xchg
and
lods
cmp
and
iret
inc
push
call
movs
popa
cmp
dec
inc
fcom
inc
xchg
xor
sub
ss
fs
or
div
arpl
lock
sub
cmp
mov
xchg
retf
jnp
fwait
shr
icebp
imul
cmp
add
dec
pop
cwde
dec
gs
cs
(bad)
and
jmp
xlat
loopne
lods
xor
test
push
call
out
hlt
mov
cmp
sbb
mov
cs
push
adc
stc
xchg
hlt
ds
(bad)
ins
add
dec
xchg
std
sbb
mov
test
in
xor
xor
pop
test
sub
aad
call
frstor
push
aaa
push
out
imul
ja
jo
add
and
ins
xor
std
jo
push
dec
cmps
movs
icebp
in
xchg
mov
int3
mov
in
sbb
push
dec
and
jle
mov
mov
fwait
movs
add
shl
mov
test
mov
fincstp
add
call
fxch
mov
sub
cmps
mov
push
push
dec
xchg
cmp
cdq
jb
sub
xchg
outs
cmp
xchg
inc
mov
and
hlt
lahf
rol
add
mov
test
icebp
ds
fwait
int
adc
jnp
clc
out
in
iret
mov
xchg
out
sub
mov
stos
or
ret
push
stc
icebp
cdq
sbb
or
pop
adc
jl
pop
clc
push
repnz
sbb
cs
mov
sbb
pop
sbb
mov
xchg
jnp
xchg
pop
push
sub
clc
ret
cmp
ror
dec
add
(bad)
out
mov
xor
gs
xchg
in
jmp
xchg
xor
xchg
cmps
pusha
xor
sbb
xor
pop
dec
xchg
pop
xchg
(bad)
test
stc
mov
stc
jo
jno
test
shl
(bad)
sub
call
xchg
xor
sar
dec
lods
push
push
push
stos
mov
dec
sti
cli
in
je
jmp
push
int3
xchg
repz
mov
push
lahf
aad
ffreep
out
xor
pop
outs
test
inc
dec
or
sub
fbstp
jge
push
js
jb
imul
shl
mov
adc
fild
popa
jle
sti
ins
in
push
ds
adc
imul
jno
and
es
sbb
aas
cwde
fadd
mov
popf
mov
mov
das
(bad)
mov
shl
and
mov
(bad)
xchg
dec
shl
mov
mov
repnz
stos
loope
stos
rol
je
test
push
pop
leave
sbb
mov
fcom
mov
ins
push
enter
add
xor
jmp
jg
inc
add
cdq
xor
ins
test
xchg
jg
pop
inc
inc
push
outs
aam
jb
mov
jle
bound
adc
adc
push
into
or
test
stos
loope
in
xor
repnz
xor
xor
jge
pop
or
xchg
call
loope
jb
push
cmps
call
fnstenv
mov
sub
xchg
cwde
mov
js
pop
test
xor
and
arpl
(bad)
or
fs
or
pop
mov
pop
dec
pop
push
scas
test
push
pop
imul
jo
push
or
jecxz
cmp
ins
mov
sub
rcr
sub
sub
ins
mov
mov
push
ja
rcl
inc
or
ds
mov
daa
lahf
fsubr
push
mov
inc
add
aaa
pop
stc
xchg
pop
loop
iret
mov
aam
mov
call
push
out
pop
mov
add
or
add
nop
out
mov
sbb
fldcw
and
cdq
fldcw
add
movs
mov
into
and
icebp
scas
adc
push
jbe
aam
sub
xor
sub
stc
xlat
lahf
jge
sub
xchg
mov
sbb
(bad)
imul
dec
(bad)
sbb
aad
and
(bad)
(bad)
sti
loopne
push
fld
inc
aam
cmps
fdiv
scas
hlt
imul
push
pop
cmp
xor
lea
gs
shr
xchg
(bad)
jp
neg
lods
jno
jle
js
mov
pop
and
iret
sub
push
xchg
aad
gs
jecxz
imul
int3
cmp
jns
mov
test
lds
dec
retf
aam
jmp
cdq
push
dec
jecxz
jl
jle
sbb
outs
mov
adc
inc
retf
add
in
add
xor
pop
icebp
scas
outs
in
hlt
cwde
mov
neg
xchg
movs
movs
(bad)
jmp
rcr
outs
mov
pusha
jp
arpl
sbb
ins
pop
(bad)
movs
and
je
scas
mov
in
imul
xor
iret
das
push
in
retf
xchg
dec
cmps
jmp
push
inc
jmp
dec
test
mov
fcomp
and
add
push
setp
mov
xchg
adc
add
xchg
jnp
push
daa
outs
inc
mov
xor
repnz
in
cli
stos
jg
pop
xchg
rcl
push
shl
xchg
mov
cmp
jbe
ficomp
(bad)
in
cli
fst
or
push
mov
dec
sub
js
out
movs
pop
push
daa
and
enter
cmp
or
add
mov
pop
pop
sbb
div
sub
fst
test
lds
mov
inc
adc
idiv
add
sbb
cmp
mov
outs
daa
jp
pop
mov
ss
ja
fdivr
repnz
fwait
fs
sub
xchg
adc
sahf
jno
pop
push
fs
ret
sahf
sbb
(bad)
mov
mov
mov
or
mov
mov
fcom
and
jp
mov
ja
push
fldenv
pop
mov
cdq
push
fimul
mov
popa
movs
fdivr
jle
mov
dec
cmps
sti
(bad)
and
jns
pcmpeqw
out
push
or
jecxz
stc
inc
jne
cmps
(bad)
daa
stos
or
cmp
(bad)
movs
add
mov
push
jns
push
cwde
leave
aam
stos
out
adc
retf
sub
xor
pop
lods
out
lock
xor
xchg
sti
adc
sub
stos
dec
jle
mov
leave
jnp
inc
dec
inc
pop
sbb
push
sub
push
mov
mov
mov
jge
loope
mov
cmps
sbb
in
mov
dec
div
aaa
jne
sub
add
dec
loop
loop
mov
fldenv
jnp
cs
sub
and
push
in
xchg
jg
inc
mov
in
adc
(bad)
push
stos
mov
into
cmp
rcl
repz
rep
xor
push
lds
add
pop
push
aam
mov
jle
pop
shr
sbb
or
add
sub
out
push
add
mov
dec
mov
inc
cmp
dec
jnp
into
(bad)
ret
sbb
mov
push
push
mov
jle
stc
cmp
fcom
adc
stc
sahf
mov
fsubr
movs
inc
sbb
loope
sar
enter
push
xchg
stc
mov
call
loope
add
mov
aam
das
cmc
mov
inc
lods
or
mov
sub
jmp
xchg
inc
dec
dec
and
jno
aam
pusha
mov
cmp
ins
lods
pop
ins
inc
iret
(bad)
adc
leave
jns
pop
sub
jo
cli
enter
dec
jg
div
(bad)
dec
jl
mov
mov
pop
and
test
mov
jg
pop
push
fbld
sub
inc
inc
mov
add
sbb
pop
outs
clc
xor
pop
cmp
mov
or
not
add
test
repz
jbe
or
mov
ins
call
or
out
(bad)
in
inc
push
iret
rdpmc
shl
fnstenv
pop
ins
in
or
clc
fdivr
pop
and
stos
ss
adc
mov
adc
cwde
jb
nop
mov
mov
add
adc
or
add
mov
sti
shl
cmp
adc
in
adc
fld
rcr
xlat
mov
in
das
xor
fwait
outs
shl
fnstsw
jmp
mov
leave
adc
mov
push
mov
dec
(bad)
xor
rcr
fwait
mov
inc
pop
ror
or
lds
rol
mov
xor
repnz
dec
mov
outs
jbe
fs
xchg
add
xor
rcr
dec
leave
(bad)
sbb
adc
dec
and
imul
mov
and
cs
ja
sbb
mov
imul
xor
in
or
fs
ret
jmp
sub
sbb
xor
sbb
sbb
out
inc
rcl
jb
jae
lock
popf
mov
imul
aas
fwait
add
xchg
psrld
cmp
inc
inc
and
lock
add
xor
in
movs
arpl
inc
test
(bad)
mov
mov
sub
cmp
dec
or
mov
mov
sub
mov
out
adc
cmc
add
repnz
int
inc
adc
shr
lds
imul
nop
adc
adc
test
cmc
ror
daa
stc
mov
cmps
hlt
(bad)
pop
lods
and
pop
mov
pop
aas
fst
retf
retf
inc
rep
imul
inc
push
add
mov
pusha
(bad)
cmps
mov
frstor
gs
sbb
inc
dec
inc
jo
or
mov
in
fdivr
outs
dec
sub
dec
add
jnp
cmp
xchg
xlat
add
mov
push
pop
push
push
mov
popf
and
cli
test
std
inc
ror
pop
call
jp
mov
xor
lahf
cmps
push
call
mov
sbb
jno
push
leave
into
lock
les
add
imul
xchg
sahf
mov
dec
inc
push
inc
pop
push
scas
in
adc
popa
addr16
sar
jbe
dec
sbb
cmp
sbb
push
cmc
inc
sti
jmp
xchg
rcr
sub
dec
or
jge
mov
nop
xor
mov
xor
xor
je
inc
push
mov
cld
fwait
cwde
dec
(bad)
cmp
dec
sbb
mov
xchg
xor
std
test
xor
jns
repz
inc
or
mov
in
xchg
add
or
inc
fimul
ja
sbb
jecxz
test
cmp
js
or
xchg
pop
and
jbe
popf
data16
xchg
sub
ret
sti
fistp
mov
les
xchg
mov
rcr
xor
or
clc
jg
in
xchg
bound
adc
out
jle
dec
popa
xor
mov
shl
ins
fimul
leave
xchg
jmp
mov
repz
mov
repz
xlat
add
inc
lahf
sahf
xor
cmp
pop
jno
or
cmp
lods
shr
cmp
mov
dec
push
dec
iret
mov
mov
cwde
call
mov
test
mov
adc
test
and
test
mov
xchg
aad
or
cs
or
movs
cmp
dec
mov
in
mov
loope
lods
push
add
arpl
xchg
imul
xor
movs
pop
xor
inc
dec
add
mov
pmullw
sub
mov
leave
jmp
in
add
sub
ror
sub
and
mov
cmp
mov
or
fimul
push
push
and
and
clc
in
and
add
mov
shl
push
dec
movs
xlat
pop
loopne
loope
outs
dec
imul
push
adc
pop
das
jne
mov
xchg
fadd
sub
outs
scas
cmp
xchg
stos
lods
outs
jg
mov
mov
test
ficom
pop
push
or
xchg
mov
loope
adc
dec
(bad)
fs
out
jl
test
push
ja
adc
mov
or
mov
sahf
jno
loop
out
push
push
ret
adc
scas
nop
inc
fsubr
pop
ror
call
out
mov
ds
mov
dec
iret
test
in
(bad)
pop
(bad)
(bad)
mov
js
addr16
pop
pop
dec
retf
xor
retf
(bad)
aad
jnp
lods
push
lds
adc
stos
add
jmp
sub
ds
sbb
mov
pop
xor
imul
movs
mov
daa
and
jp
jg
push
jns
push
out
inc
dec
in
mov
pop
(bad)
and
cmp
xlat
or
mul
mov
imul
(bad)
ror
jne
scas
(bad)
retf
ins
cmp
stc
cmps
add
aam
nop
mov
add
mov
fisubr
xor
into
or
mov
sahf
add
mov
movs
xchg
sbb
outs
icebp
xchg
pop
sub
(bad)
push
(bad)
ds
sub
xchg
mov
xor
cmp
outs
js
fcom
icebp
(bad)
stos
cs
and
adc
ret
inc
test
ds
(bad)
jecxz
lods
and
xacquire
adc
in
xlat
xor
jmp
test
daa
loope
cmp
and
cmp
mov
pop
mov
cli
not
ja
aad
inc
rol
adc
and
enter
ins
pop
mov
gs
xor
mov
out
test
dec
ds
ins
or
js
(bad)
xor
fstp
jbe
out
cmps
jmp
jb
(bad)
in
retf
or
inc
sub
xchg
pop
adc
mov
cmp
sbb
pusha
xchg
sbb
in
mov
mov
aad
dec
retf
lods
or
mov
dec
lds
mov
push
mov
iret
xchg
fcomip
dec
sub
push
pop
cwde
inc
push
sub
scas
pop
movs
jg
pop
scas
(bad)
ja
bnd
es
test
mov
dec
mov
rcr
icebp
cmp
or
add
jae
mov
sub
xchg
pop
sub
not
adc
cmc
int
into
sub
xchg
jle
in
outs
rcr
mov
push
xchg
pop
stos
fwait
retf
ror
sbb
xchg
sub
pushf
add
inc
sbb
repnz
outs
fwait
add
xchg
repnz
fidiv
call
imul
mov
ret
ss
loope
in
aas
(bad)
inc
dec
jg
push
shr
add
dec
adc
in
push
fisubr
cs
call
repnz
dec
mov
jae
push
mov
fiadd
data16
rcr
xor
repnz
fsubr
imul
and
cmp
lods
fbld
(bad)
mov
(bad)
jmp
inc
xchg
mov
scas
xor
fdiv
dec
or
rcl
sub
mov
or
mov
sbb
rol
mov
enter
or
iret
int3
inc
push
add
retf
movs
(bad)
or
sub
push
lods
and
inc
and
and
std
mov
in
jns
pop
sub
mov
cmps
je
mov
imul
ja
inc
addr16
pop
or
xlat
lods
inc
stc
test
ins
(bad)
ins
or
clc
jns
(bad)
in
dec
retf
int3
inc
adc
xchg
push
jmp
mov
sbb
and
mov
arpl
or
xor
dec
into
add
add
add
push
daa
fs
fwait
push
aam
xchg
push
jns
das
dec
jmp
std
xchg
dec
mov
shl
pop
stc
pop
xor
je
dec
loop
dec
or
sbb
mov
sub
pop
outs
xchg
jmp
int3
stos
jno
stos
in
ret
xchg
or
mov
data16
lods
sub
cmc
dec
xchg
jge
popw
pop
aad
fldenv
push
out
xor
mov
jl
stos
fs
es
jl
(bad)
in
push
cmp
push
std
enter
sub
mov
cs
dec
xchg
movs
dec
aas
mov
jb
cmp
outs
inc
xor
out
scas
xchg
jge
fistp
iret
sbb
jo
mov
push
or
add
jecxz
xchg
mov
adc
test
sbb
adc
push
sahf
enter
push
cmp
inc
pusha
sahf
call
aam
retf
mov
(bad)
cdq
dec
or
fucomip
inc
inc
inc
dec
pop
call
dec
neg
sub
sub
jl
pop
ror
dec
cmp
stc
loopne
push
sbb
mov
add
jno
mov
dec
cmc
scas
and
scas
add
xor
sub
leave
ret
lods
or
leave
mov
scas
mov
jmp
mov
jb
sub
add
ror
push
mov
loope
stos
push
ja
sbb
xchg
mov
iret
or
call
dec
jbe
imul
fnstcw
add
popa
cmp
stos
ins
in
call
and
inc
push
call
mov
cwde
and
xchg
fild
test
ja
mov
dec
mov
bound
pop
jns
data16
mov
jge
movs
jmp
cld
pop
in
add
inc
outs
cmp
div
push
(bad)
push
les
xchg
test
adc
add
mov
and
test
out
jo
mov
cmp
jnp
pushf
dec
mov
add
inc
les
sbb
push
pop
push
ficomp
or
jle
adc
cld
test
aam
xor
sahf
or
(bad)
pop
ss
cmp
arpl
jnp
fsubr
call
je
scas
ja
aas
into
mov
and
popf
mov
test
std
dec
sub
add
stos
sub
cmc
cs
sbb
adc
xchg
rol
ret
cmps
push
in
(bad)
ins
jl
imul
loopne
cmp
fs
cmp
mov
xchg
jns
add
test
pop
in
neg
inc
(bad)
pop
ds
mov
adc
cmp
jb
test
adc
cmp
scas
call
dec
lock
loop
mov
out
in
les
or
fdiv
push
sub
sub
sbb
cwde
sub
xor
cmp
pusha
inc
push
mov
push
fisttp
and
mov
jle
sbb
pop
dec
pop
xchg
adc
stc
cmc
jp
xor
inc
mov
pop
sbb
pop
fldenv
and
loope
mov
mov
sahf
int
(bad)
sub
scas
adc
xor
(bad)
or
icebp
push
mov
xor
shl
inc
shr
jnp
adc
jge
xchg
mov
inc
cs
adc
sub
in
test
loopne
cwde
arpl
add
stos
mov
(bad)
enter
lea
mov
pop
or
sar
cmp
addr16
pop
mov
shl
add
test
(bad)
stc
jmp
add
loop
pop
xchg
in
add
xchg
xchg
dec
xor
add
mov
ja
pop
adc
dec
jp
jmp
adc
push
xor
sub
aad
or
or
push
or
sub
es
mul
inc
mov
int3
or
fimul
arpl
push
sbb
in
pusha
je
mov
add
dec
xchg
xor
mov
mov
inc
(bad)
stos
adc
pop
adc
imul
sub
test
sbb
cmps
pop
loop
jle
psubd
lds
cmp
or
lahf
enter
sub
imul
sub
das
sub
inc
arpl
imul
and
(bad)
mov
rcr
(bad)
std
mov
add
push
jg
mov
cdq
stos
lods
int
cmp
cmps
(bad)
and
add
test
dec
jge
into
ins
cmp
repz
imul
lds
leave
inc
mov
test
dec
(bad)
lahf
outs
adc
inc
mov
mov
jns
dec
adc
out
retf
inc
ret
or
xor
call
mov
fwait
mov
stos
or
cmp
repnz
aaa
int3
shr
(bad)
jp
dec
imul
sub
mov
out
xlat
cmps
jnp
lods
mov
add
clc
mov
in
mov
add
cwde
push
inc
xchg
cwde
xor
push
sbb
retf
adc
mov
les
lahf
call
dec
mov
iret
mov
iret
lods
pop
cdq
cli
jmp
(bad)
je
mov
ja
mov
imul
and
(bad)
jmp
add
bound
cmc
out
shr
mov
push
push
push
and
cmc
repnz
mov
inc
jmp
jmp
mov
jg
fimul
xchg
add
cmp
push
repz
adc
aam
jno
fwait
mov
mov
test
cmp
dec
cmp
sbb
or
xor
add
jno
mov
fwait
lea
dec
mov
ret
dec
lods
in
retf
in
out
ror
fs
dec
fwait
out
cmp
push
xchg
in
(bad)
jbe
and
loop
mov
inc
pop
push
push
(bad)
call
and
xchg
push
mov
push
cmp
call
and
sub
jge
stos
iret
pop
fisubr
(bad)
push
fwait
enter
popf
shl
popa
fsub
dec
ror
(bad)
xchg
arpl
jns
cli
jnp
mov
mov
ret
and
jmp
pop
aas
daa
jmp
nop
mov
pop
aad
call
push
aaa
ror
sub
pop
into
mov
push
sub
dec
push
popf
and
shl
mov
or
std
push
or
not
xor
dec
mov
jb
pop
loope
fcomp
repz
popf
cmps
cs
push
mov
gs
call
and
and
nop
pushf
sub
test
sar
xor
ret
pusha
push
mov
in
xchg
test
xlat
fsub
stc
inc
test
push
push
shr
loopne
push
cmc
inc
xor
(bad)
push
adc
adc
dec
lods
out
mov
int
sbb
lods
sbb
cld
sbb
jecxz
stc
pop
sti
(bad)
sbb
pop
adc
mov
add
inc
add
in
ds
out
adc
loope
clc
cmp
cdq
xor
xchg
shl
xor
into
popa
inc
pop
jae
aad
xor
mov
lods
test
sbb
pop
xchg
imul
mov
adc
(bad)
ror
stos
mov
and
out
jp
xchg
pop
mov
ret
test
sub
mov
sbb
inc
mov
jbe
outs
xor
dec
inc
inc
repnz
xlat
icebp
enter
lods
and
cmp
inc
inc
iret
add
(bad)
jg
movs
push
jb
retf
cmps
xchg
std
enter
dec
sub
xchg
cmps
or
loop
mov
lahf
pop
adc
pusha
inc
and
push
sbb
cmp
pop
fdivr
sub
ja
call
stc
sbb
and
or
fwait
dec
test
adc
pop
pop
xchg
out
cwde
xchg
(bad)
mov
(bad)
lahf
push
and
cdq
daa
or
jge
push
(bad)
dec
inc
xchg
sub
int
neg
in
dec
rol
xor
sbb
mov
or
jbe
push
test
pop
lds
push
lods
mul
mov
(bad)
dec
mov
and
mov
inc
les
inc
ja
das
mov
xor
xor
loop
push
cmc
push
jnp
adc
(bad)
fisub
mov
mov
int
shl
rcl
retf
pop
xchg
mov
pop
(bad)
jge
fdivr
xchg
inc
cli
jle
pushf
sub
sbb
sub
dec
sti
fbstp
outs
pop
pop
mov
pop
adc
push
pop
mov
aad
add
daa
std
mov
fild
rol
or
push
mov
xchg
clc
jnp
pop
cwde
mov
jmp
dec
pop
or
(bad)
push
sbb
in
or
and
adc
and
fldcw
cmovl
cmp
scas
fsubr
inc
in
pop
mov
ds
dec
fldz
push
push
cmp
pop
cmc
lods
(bad)
add
fnstcw
stc
(bad)
test
fnstcw
add
mov
adc
pop
jbe
shl
fisub
mov
in
call
in
add
retf
js
jmp
(bad)
neg
dec
inc
xchg
inc
test
dec
inc
test
mov
or
ins
and
test
int3
cmp
pop
in
pop
movs
aaa
or
in
mul
lods
(bad)
clc
sar
into
lock
ficomp
arpl
add
mov
pusha
std
mov
pusha
ds
inc
jnp
mov
adc
mov
jecxz
jo
clc
out
mov
jmp
hlt
(bad)
cdq
loop
xlat
jbe
imul
cmp
call
mov
inc
sbb
jno
inc
(bad)
mov
xlat
mov
sub
rcl
mov
lods
enter
jl
push
std
and
inc
mov
pop
sbb
dec
inc
(bad)
xchg
pop
push
sub
aad
dec
pop
cli
cmps
push
lock
pop
dec
out
retf
mov
push
sub
dec
pop
cld
(bad)
ins
or
div
jecxz
mov
dec
xchg
inc
and
cmc
jge
lods
cmp
lock
mov
xlat
sub
mov
sbb
sub
stos
sbb
int3
sbb
adc
aas
adc
ret
cmp
jmp
inc
or
cmps
sbb
and
mov
mov
or
inc
mov
imul
mov
and
popa
int3
push
cmps
fwait
imul
add
sub
xchg
push
jno
mov
shl
and
lds
(bad)
pop
pop
cmp
sub
dec
dec
in
lds
adc
sti
mov
xchg
cmp
lahf
push
repz
test
mov
xor
in
push
clc
sub
inc
cdq
call
data16
xchg
ja
ret
jecxz
sahf
fadd
dec
rol
jle
xchg
xchg
retf
fnstsw
push
add
cmp
jo
out
inc
xacquire
pop
dec
fistp
jno
nop
push
mov
outs
out
aam
mov
dec
or
repnz
jns
push
es
call
jmp
or
mov
mov
adc
push
movs
pushf
dec
(bad)
popa
imul
mov
jg
retf
adc
dec
inc
cmp
push
outs
rcr
stos
or
nop
movs
add
(bad)
das
bound
aaa
fnstcw
int
pop
cld
(bad)
pop
jmp
mov
aaa
push
loopne
(bad)
daa
ss
(bad)
xchg
push
inc
pop
pop
or
aam
pop
push
push
movs
pop
cmp
push
push
bound
ds
imul
outs
dec
loopne
adc
out
lea
sub
adc
pop
or
mov
jp
xor
add
inc
repnz
jp
inc
(bad)
xor
jno
stc
push
sahf
test
pusha
mov
push
ror
mov
pop
sar
jmp
js
in
inc
mul
movs
std
mov
xchg
pop
adc
pop
je
fldcw
inc
psrlw
dec
int
dec
mov
and
inc
jnp
loope
mov
retf
(bad)
sub
icebp
inc
popf
push
rcr
inc
jno
xor
sub
sbb
jbe
pop
mov
xor
mov
stos
push
fstp
popa
test
lds
xor
mov
add
push
test
dec
ds
cld
clc
mov
jnp
fcomp
xchg
add
mov
lock
out
xor
clc
jge
outs
inc
or
lahf
(bad)
sub
out
sbb
add
test
mov
xor
xor
dec
fst
ja
fsubr
inc
jnp
cmp
or
icebp
jmp
push
sti
mov
mov
cmps
cmp
push
inc
pop
mov
daa
ins
jmp
push
mov
sar
sub
cmp
add
mov
sbb
jg
icebp
mov
ds
jmp
fsubr
clc
push
pop
mov
add
add
repz
fdivr
dec
cdq
imul
mov
add
pop
mov
aas
je
jne
mov
pop
ret
ins
or
aas
js
stos
cld
inc
out
nop
fidiv
mov
jnp
ror
sub
cmp
aas
out
push
inc
inc
push
adc
sbb
cwde
push
mov
or
imul
adc
jmp
imul
es
sbb
popa
adc
jle
jg
adc
jbe
pop
xor
cmc
imul
lds
sbb
mov
or
icebp
cmp
mov
(bad)
in
add
pop
xchg
lahf
dec
pop
out
cs
out
jns
add
pop
out
push
and
mov
cdq
or
adc
pop
sbb
xchg
adc
fwait
mul
aas
ja
pop
cmp
call
(bad)
popf
loop
adc
mov
xor
jp
xor
pop
out
or
xchg
mov
fstp
or
out
mov
sbb
lock
sbb
ror
fs
aam
jae
jo
xor
stc
cmc
hlt
sub
xor
mov
xor
inc
xchg
cld
sbb
(bad)
iret
dec
pop
lods
das
xor
push
inc
dec
mov
iret
lock
add
dec
cs
int3
inc
dec
nop
lea
lds
jge
test
ror
sub
gs
xor
retf
or
rcr
call
pop
jmp
dec
cld
sti
push
cld
jbe
ja
sub
cld
add
xchg
in
fcmove
dec
dec
js
inc
mov
push
cmp
and
sub
dec
sahf
lods
(bad)
jns
and
jl
je
jmp
rcl
xchg
call
xor
jmp
sbb
test
stos
jmp
and
cmc
xchg
jl
dec
mov
xchg
mov
mov
adc
retf
out
popf
mov
xor
in
sahf
adc
mov
cmp
jmp
inc
mov
inc
jmp
jns
fild
sti
js
movs
mov
jb
jbe
dec
mov
push
fdiv
inc
addr16
cdq
fmul
or
mov
sbb
(bad)
mov
dec
sub
sub
sub
pop
das
jb
es
dec
lahf
cmp
loop
je
cwde
data16
pop
or
call
leave
xchg
mov
fisub
mov
test
popa
rcr
adc
repz
dec
sbb
ret
in
(bad)
fwait
stc
out
push
stos
stos
inc
leave
mov
mov
rcr
adc
add
mov
add
and
adc
adc
adc
mov
dec
fdivr
mov
sub
pusha
mov
ins
(bad)
outs
mov
xchg
lahf
jl
xlat
inc
push
std
imul
push
xchg
mov
fxch
int3
fcomp
push
stc
push
hlt
cli
or
cmp
jmp
(bad)
bts
mov
inc
rcr
lods
jbe
inc
push
mov
fucom
out
jo
adc
imul
ja
sub
jmp
xor
lds
ret
rcr
test
xchg
sbb
push
and
or
jg
mov
call
out
stc
push
push
xor
js
jp
jmp
inc
inc
jnp
xchg
fcom
popa
add
fstp
jl
xor
mov
enter
sbb
mov
push
scas
in
xchg
call
mov
out
es
mov
add
xor
jb
clc
ins
jecxz
cwde
mov
mov
mov
mov
loop
fcmovnu
es
mov
sbb
nop
pop
hlt
cmp
push
outs
and
inc
push
xor
mov
adc
leave
loopne
push
ja
ds
lock
lods
call
scas
(bad)
jl
inc
pop
inc
push
sub
dec
add
pop
jo
pop
jnp
int
mov
test
popa
arpl
or
sbb
inc
scas
enter
mov
imul
xchg
mov
idiv
and
ficom
out
xor
cmp
cs
xchg
outs
inc
retf
cmps
and
and
out
loop
dec
xlat
aad
or
shl
scas
(bad)
mov
cmp
sbb
inc
mov
sbb
gs
jg
in
or
sub
out
in
cld
loopne
test
inc
mov
popf
adc
int3
mov
xchg
mov
xchg
xor
lods
push
adc
xor
and
sbb
out
imul
fst
(bad)
mov
xchg
pop
mov
lods
dec
sub
xor
dec
inc
ja
add
jmp
mov
xchg
mov
ret
xchg
pop
test
inc
shl
das
cmps
sub
movs
int3
lods
xchg
jp
mov
in
(bad)
hlt
aad
xchg
ins
shl
inc
rcr
mov
or
hlt
inc
cmp
clc
sahf
xor
sahf
sub
stos
pop
xor
add
mov
push
or
sub
retf
jo
push
aam
bound
data16
(bad)
jmp
xor
cmps
pop
adc
jmp
mov
cmps
xchg
xchg
push
xor
add
sub
mov
xor
cmp
push
(bad)
loope
add
sub
call
shl
xor
pushf
adc
push
pop
cld
mov
aad
jns
mov
cmp
jo
xchg
test
scas
mov
add
and
in
fnstcw
out
sub
cmp
scas
xlat
fldcw
sub
jp
jecxz
ja
adc
push
sub
arpl
js
mov
mov
or
and
adc
jge
inc
mov
test
adc
lahf
dec
mov
(bad)
mov
icebp
add
out
fs
mov
inc
das
mov
mov
(bad)
je
mov
sar
xchg
mov
sub
inc
pushf
lods
pusha
icebp
enter
out
les
mov
sbb
mov
mov
mov
les
cmp
dec
ss
add
int
mov
mov
imul
dec
iret
lea
or
into
sahf
shr
dec
shl
stc
arpl
pop
sub
cld
xchg
adc
lods
sbb
or
jmp
shl
ror
(bad)
in
cmp
mov
mov
popf
mov
inc
cmovns
adc
(bad)
sahf
or
inc
push
popf
and
adc
push
jmp
arpl
mov
(bad)
daa
repz
in
mov
out
inc
push
out
iret
cmps
cs
ja
pop
adc
cwde
push
ds
push
or
aam
add
loop
stc
in
cmc
out
sar
and
mov
mov
nop
in
push
fldenv
xchg
xor
in
push
movs
mov
adc
xor
jecxz
pop
xchg
pop
sub
cmp
push
jl
xor
dec
ja
ins
xor
ja
lds
push
fisub
out
fcomp
daa
inc
sub
imul
jl
jg
mov
cmp
jno
adc
jnp
mov
(bad)
lock
or
call
ins
cmc
daa
mov
push
mov
fcmovb
fidivr
dec
add
jge
jmp
iret
sar
outs
test
lods
daa
jecxz
add
mov
loopne
jnp
and
sahf
sbb
xchg
js
mov
and
pop
movs
pop
mov
adc
jno
cmc
je
data16
cmps
fadd
in
cli
inc
cmp
push
mov
pop
cmps
mov
dec
fldenv
mov
sub
fmul
mov
jmp
or
and
xor
jnp
aas
loopne
cs
xor
popa
test
fsubp
inc
in
jo
inc
stos
in
cmp
jo
call
(bad)
mov
and
mov
mov
fwait
mov
pop
add
je
popf
add
int
jns
test
mov
cmp
out
into
or
push
mov
sub
lods
mov
sahf
pushf
push
push
enter
mov
sub
out
gs
adc
jnp
sbb
lea
std
pop
int3
sub
popa
idiv
cwde
adc
xchg
dec
out
cli
ror
repnz
je
leave
in
push
fnstenv
cmp
repnz
dec
xor
popf
pop
or
mov
push
adc
(bad)
adc
push
aad
mov
std
or
sti
jbe
outs
fld
iret
mov
loope
mov
inc
movs
sub
fwait
add
add
sbb
(bad)
movs
adc
cmp
pop
shr
ret
pop
push
shl
xchg
loope
out
push
sub
pop
sub
nop
push
pop
rcl
mov
cmp
das
mov
push
xchg
inc
xchg
mov
mov
add
mov
pop
and
lds
jge
dec
std
iret
add
push
jge
fdivr
int
cmp
call
hlt
mul
rcr
mov
out
js
inc
lods
push
adc
pusha
pop
adc
xchg
add
xchg
xchg
sub
jno
arpl
fnsave
mov
std
retf
imul
push
cmps
shl
fisubr
rol
in
mov
arpl
js
dec
xchg
sbb
(bad)
fnstsw
sub
mov
mov
pusha
repz
or
push
std
popf
sbb
jge
cmp
sbb
fist
lock
fcom
mov
in
hlt
pop
arpl
inc
xchg
(bad)
sub
popa
mov
je
push
jo
lods
ficom
fstp
dec
mov
mov
mov
sub
(bad)
cdq
inc
adc
xchg
cmp
jle
cmp
aad
mov
pusha
xchg
mov
dec
pop
sub
ret
mov
jae
sbb
xchg
gs
fnsave
jne
adc
test
xchg
add
xchg
out
add
adc
pop
ss
mov
ret
addr16
pushf
daa
popa
pusha
mov
movs
jg
stos
mov
hlt
cld
dec
pop
cmp
add
fdiv
fs
hlt
icebp
js
jno
xchg
pushf
aam
mov
pop
xchg
leave
cmp
sahf
jl
out
mov
or
(bad)
shr
mov
cmp
pop
out
imul
cld
mov
jmp
test
rcr
mov
sub
std
pop
in
pop
mov
or
sbb
sub
or
in
pop
(bad)
cld
das
popa
(bad)
sub
mov
mov
imul
dec
fxch
jl
std
gs
stos
fst
adc
sub
int3
imul
adc
sbb
js
jmp
rcr
cmp
inc
test
imul
int3
cmp
add
and
sbb
sub
mov
clc
add
cmps
cmp
inc
sbb
mov
jns
fwait
sub
push
or
pop
test
clc
pusha
rcr
fsub
mov
xchg
jmp
stos
inc
adc
and
mov
popf
imul
cmps
xchg
adc
in
mov
jl
and
ror
sti
imul
loope
mov
xchg
ss
je
and
add
mov
adc
fmul
clc
movs
pop
leave
sbb
repnz
repnz
mov
mov
out
test
xor
mov
mov
aaa
sar
dec
imul
aaa
dec
and
inc
xchg
pop
int
and
movs
inc
mov
adc
dec
inc
enter
mov
cmps
or
pushf
dec
fdiv
gs
repz
mov
call
bound
ins
imul
jno
mov
es
in
push
fnsave
xchg
mov
loopne
aad
jne
xlat
out
mov
pop
sub
inc
rol
in
push
(bad)
fdivr
lea
or
movs
jo
mov
adc
icebp
int3
cwde
hlt
repz
mov
adc
mov
call
sbb
pop
sbb
xchg
or
dec
push
xor
(bad)
and
push
xlat
jge
jmp
add
mov
sahf
xchg
lock
dec
push
cld
jp
pop
mov
ins
sbb
iret
sub
in
(bad)
cmp
push
dec
jecxz
mov
pop
cmp
(bad)
loope
enter
(bad)
mov
test
sbb
xor
jmp
or
adc
inc
mov
cdq
inc
outs
daa
shl
mov
jl
fisttp
mov
sub
ror
fdivr
pop
push
inc
jbe
jo
mov
rol
mov
cs
fist
inc
mov
popa
or
pop
mov
mov
ror
push
xlat
test
xor
sbb
cmp
into
pusha
mov
mov
mov
sti
call
xor
add
ja
mov
push
pop
xor
rcr
inc
adc
fdiv
(bad)
fnstenv
jb
(bad)
pop
dec
in
cmc
fldcw
push
jns
xor
mov
push
sar
xor
jmp
clc
out
ins
dec
pop
fcmovnbe
cmp
test
cli
jp
test
ret
xor
js
pop
jne
jmp
sbb
sbb
lock
inc
dec
es
dec
jno
dec
retf
lock
add
out
cli
push
and
aad
dec
call
or
inc
stos
jg
hlt
arpl
rol
pop
sub
nop
cmp
pop
cld
xor
add
les
add
inc
fwait
js
or
jno
jle
xchg
jno
sub
push
pop
add
pop
jb
std
call
inc
inc
inc
push
addr16
shl
adc
in
jmp
std
xchg
dec
dec
sub
jnp
push
add
cmp
xor
mov
ror
lds
pop
outs
mov
adc
xchg
pusha
mov
fbstp
stos
adc
sbb
pop
popf
pop
dec
aas
pmaxsw
outs
jg
jecxz
pop
popf
mov
pushf
nop
sub
aad
jg
call
popa
pushf
add
bound
inc
jb
jmp
push
pop
mov
gs
dec
push
cli
mov
push
push
mov
hlt
stos
retf
sbb
mov
sub
cmc
and
push
in
cmps
imul
std
push
xor
add
xchg
dec
push
call
fidiv
retf
mov
sub
mov
hlt
mov
mov
cld
pop
out
pop
xchg
sbb
in
xor
repnz
and
test
jae
imul
xor
icebp
dec
in
jmp
inc
enter
mov
stos
push
call
pop
ret
xchg
xchg
adc
jne
aam
cli
cmps
iret
jb
jnp
call
call
aas
cmp
dec
push
test
int
and
(bad)
cmp
jnp
and
jl
popa
fist
ret
fimul
jp
add
ja
xchg
jae
test
sub
sub
test
dec
pusha
dec
sbb
mov
push
outs
cmp
sbb
push
push
das
or
jmp
stos
mov
cdq
add
or
cli
xchg
mov
mov
or
mov
mov
fs
pop
mov
jge
std
sbb
mov
int3
scas
(bad)
imul
rcr
vshufps
adc
sar
xor
inc
nop
mov
fist
out
push
icebp
cmp
xchg
(bad)
(bad)
and
jb
xor
mov
inc
dec
push
cmp
sub
mov
lods
xchg
cmp
sub
add
arpl
test
loop
push
push
pushf
loop
adc
push
inc
jge
pop
in
jp
dec
mov
aaa
out
dec
(bad)
jecxz
nop
jmp
jg
mov
lds
mov
rcr
nop
push
sbb
rcr
inc
inc
in
mov
mov
les
add
outs
push
cmp
cmp
xchg
in
ins
ja
sub
aas
pop
dec
sbb
mov
scas
and
in
retf
mov
sbb
mov
es
push
sub
pop
push
lods
push
or
ja
fdiv
test
ins
mov
in
arpl
scas
sub
or
(bad)
jp
push
mov
ds
push
push
outs
cli
inc
adc
test
xchg
out
(bad)
imul
sub
xchg
xchg
xor
sub
sbb
jno
jg
loope
nop
stc
add
dec
add
add
cmp
aaa
xor
inc
fadd
ds
fnsave
mov
pop
hlt
mov
mov
push
and
loopne
jne
sbb
out
fwait
repz
nop
xor
inc
call
sub
lds
jno
mov
rcr
cmp
sbb
movs
push
pop
add
mov
and
mov
out
out
adc
retf
push
sar
int
and
iret
xchg
outs
mov
stos
lods
cld
mov
xor
cli
sub
mov
call
jmp
cmps
jnp
ins
xchg
aaa
sbb
mov
mov
mov
shl
(bad)
(bad)
adc
bound
aaa
jno
in
xchg
adc
pop
nop
push
xor
fistp
retf
sbb
or
shl
sbb
mov
push
cmps
mov
(bad)
mov
sub
adc
mov
jmp
(bad)
xor
sbb
pop
push
gs
xchg
sub
hlt
cli
std
jb
lods
and
pop
rcr
repz
loop
inc
mov
xchg
dec
push
scas
clc
mov
stos
xchg
add
pushf
cmp
popf
xchg
stc
fstp
fldcw
call
xchg
out
(bad)
adc
loopne
cmp
xchg
in
aaa
in
xor
stos
icebp
adc
and
mov
mov
jge
clc
adc
jnp
push
cmps
add
and
dec
movs
mov
out
hlt
rcr
fisub
and
xor
movs
call
xor
mov
sub
mov
add
mov
leave
mov
fnstsw
mov
movs
jbe
xor
jle
mov
sub
repz
push
enter
push
jnp
aam
pushf
in
fisttp
ds
repz
cmp
mul
mov
mov
aam
inc
ja
mov
pop
imul
clc
mov
data16
stos
(bad)
mov
das
addr16
lea
loop
mov
pop
pushf
xchg
sysexit
and
inc
mov
pop
adc
pop
add
xchg
ret
fbld
int3
hlt
push
inc
shl
mov
cmp
adc
pushf
and
(bad)
mov
mov
xchg
mov
fild
xchg
jg
dec
pop
adc
lods
add
cs
sbb
je
jne
and
cmp
pop
or
jl
fdivr
dec
aad
mov
mov
cs
sbb
inc
mov
push
fst
mov
mov
jne
or
test
cmp
or
push
rcr
cmp
push
addr16
dec
jb
stos
mov
sub
jp
icebp
or
(bad)
int3
push
lock
inc
mov
inc
in
xchg
xchg
push
sbb
pop
das
ds
imul
adc
or
cmc
mov
push
lods
xor
les
jg
push
fld
push
xlat
pop
bound
je
adc
pop
adc
jne
jg
cs
dec
inc
mov
aas
dec
xor
add
xor
retf
push
xchg
test
pop
mov
and
(bad)
je
sub
in
rcl
aaa
sub
sbb
ins
fdiv
mov
jecxz
adc
xor
sub
sbb
jge
dec
jb
fldenv
mov
scas
aaa
pop
sahf
dec
jmp
loopne
fadd
cmps
mov
div
push
pop
fiadd
outs
cld
leave
push
mov
outs
loope
sub
(bad)
mov
mov
test
lods
shr
xor
xor
pop
(bad)
push
inc
test
mov
xor
xor
adc
adc
inc
icebp
push
sar
xlat
mov
cwde
pushw
cmp
sbb
push
inc
out
lahf
mov
and
xchg
adc
push
push
add
mov
repnz
loope
sub
xchg
lds
adc
sub
cmps
stos
arpl
aas
sbb
js
enter
push
pop
push
out
sbb
dec
ds
push
jg
mov
push
inc
retf
shl
cmc
sbb
jg
into
push
lock
push
les
cwde
pop
dec
add
xchg
mov
jno
sub
sti
cmp
fwait
push
dec
aad
(bad)
clc
mov
test
bound
mov
retf
push
sti
fs
movs
outs
sub
jge
mov
jmp
push
mov
jnp
mov
int
das
fcmovnu
pop
or
rol
sub
sub
mov
push
fs
div
mov
mov
movs
xchg
cdq
aam
push
mov
scas
pop
stc
sbb
aaa
cdq
imul
jp
cmp
sbb
pop
mov
icebp
in
jmp
lds
pop
pusha
and
xor
cmp
and
mov
xchg
adc
mov
rol
sti
sub
cli
xchg
hlt
hlt
out
pop
ins
mov
movs
out
jns
pop
jbe
mov
sbb
cmp
add
fwait
xchg
mov
js
and
sbb
std
fdiv
xchg
mov
push
icebp
mov
lds
inc
(bad)
out
sub
add
cmps
ins
iret
call
push
lds
out
sub
sbb
jmp
add
addr16
mov
push
lahf
adc
jno
mov
and
xchg
into
pushf
loope
jp
inc
and
(bad)
int
jp
loopne
rcr
sahf
xchg
int
push
pop
test
mov
jne
dec
inc
add
and
inc
hlt
mov
mov
mov
xor
cwde
dec
fistp
push
sbb
stos
jo
in
jge
mul
sub
cdq
call
(bad)
fist
and
xchg
jge
pop
add
je
sar
lock
jl
sti
call
inc
or
push
shl
xchg
rcr
ret
adc
adc
xchg
or
rol
test
movs
loope
xchg
gs
stos
out
inc
cmc
dec
jb
adc
rol
push
inc
pop
scas
xchg
je
pop
jecxz
mov
ss
rol
das
mov
out
mov
push
inc
jl
fidivr
jmp
mov
pushf
int3
cwde
cmps
mov
and
jmp
jp
loope
lea
pop
lock
cli
jo
sbb
sbb
inc
sbb
loope
nop
js
(bad)
cld
icebp
ss
jl
pop
xchg
(bad)
cmp
mov
(bad)
les
xor
movs
retf
cmp
les
ja
sar
test
ficomp
test
xor
push
push
jmp
(bad)
sbb
mov
sbb
inc
mov
mov
idiv
adc
dec
or
xor
add
aaa
cdq
inc
aaa
stos
in
(bad)
shl
mov
push
movs
test
shl
mov
and
das
ja
les
retf
scas
mov
movs
add
mov
xor
sub
and
mov
jo
aaa
adc
cwde
mov
lea
pop
bound
xchg
cmp
addr16
jg
or
sub
in
jae
mov
ss
cmps
cmp
outs
cwde
fisubr
jle
pop
arpl
xor
and
sbb
mov
or
push
add
adc
push
in
icebp
arpl
pop
dec
inc
cld
add
mov
cmp
arpl
push
mul
xchg
mov
adc
jmp
jmp
fwait
cmp
shl
sti
sub
(bad)
loope
imul
xor
ret
aaa
icebp
jo
test
xchg
test
cmps
loopne
and
cmps
bound
aam
ror
push
xchg
movs
jle
fdivr
mov
mov
rol
jle
dec
in
xchg
jb
add
fnstcw
add
jmp
mov
push
out
mov
aaa
mov
es
cmp
add
dec
enter
cmp
loop
xchg
mov
fwait
xchg
fwait
and
sub
cmp
mov
xchg
inc
sti
xchg
cs
outs
mov
mov
inc
inc
jmp
or
or
adc
add
sbb
push
pop
sahf
retf
cmps
inc
loope
add
int3
jp
pop
aam
aaa
int
cdq
sub
cld
or
daa
cli
out
dec
imul
inc
enter
xor
pop
inc
ss
jg
outs
xchg
sub
loopne
inc
pusha
xchg
fmul
add
aas
repnz
int3
pop
(bad)
xor
xchg
adc
jne
push
jmp
xchg
outs
rcl
mov
add
fstp
add
mov
jno
daa
and
std
or
xchg
push
sbb
dec
pop
or
jo
gs
inc
dec
dec
xlat
push
push
lock
fild
pop
mov
push
adc
mov
jmp
div
mov
sub
mov
xchg
movs
xchg
jmp
mov
jl
jl
pop
aam
int3
loope
(bad)
stc
fwait
(bad)
lea
inc
xchg
cmps
mov
pop
mov
xchg
cwde
jecxz
or
sub
aaa
add
ror
jmp
mov
aam
push
mov
xor
push
ins
mov
sub
cmp
pop
fild
and
push
sub
clc
cmp
ror
fist
out
mov
xchg
or
jmp
inc
gs
popf
test
test
je
stc
cmp
pop
loope
ss
pop
bound
enter
dec
stos
pop
out
jl
fnstsw
push
call
and
mov
adc
sahf
and
xor
sar
jb
ins
cli
xor
push
and
inc
loopne
push
jmp
cli
inc
and
add
dec
push
jecxz
push
sbb
xor
sbb
mov
es
add
fldenv
mov
mov
jbe
int
pop
or
xchg
mov
scas
ins
mov
jne
mov
imul
call
shr
cmps
lds
push
(bad)
fcomp
lahf
cwde
add
(bad)
movs
sub
int3
xchg
ret
sbb
pop
pop
stos
pop
aaa
jbe
or
loope
dec
mov
cwde
mov
push
mov
cmps
ficomp
adc
nop
xchg
lds
aaa
jp
cmp
cmp
scas
xlat
dec
rol
sbb
cmp
fist
cmp
into
(bad)
mov
cmp
(bad)
in
mov
cmp
iret
xor
int3
mov
cmp
xchg
dec
call
or
mov
cmp
cmp
clc
popa
mov
xchg
or
mov
push
adc
lds
jmp
sbb
ret
aaa
and
out
and
ds
fld
stos
dec
fimul
jns
fimul
cs
test
cmp
dec
jge
cli
inc
sub
adc
cmp
adc
push
rcl
scas
dec
(bad)
pushf
sub
dec
hlt
shr
cmps
(bad)
sbb
xchg
adc
or
aam
setb
sub
fimul
sub
fcom
push
imul
inc
call
cmp
add
imul
bound
loop
rcl
or
popf
push
adc
gs
loope
outs
rcr
xchg
shl
mov
jmp
inc
loope
mov
fdiv
aad
cmps
inc
ins
mov
sub
cs
mov
inc
pusha
rol
push
fwait
adc
or
inc
or
dec
(bad)
fldpi
lahf
out
xchg
inc
cmp
xor
repz
shr
cmp
and
jnp
inc
in
mov
cmp
cli
mov
xchg
add
test
sbb
jne
cmp
(bad)
or
(bad)
loop
mov
cmps
aad
movs
sti
iret
sub
(bad)
cli
add
dec
pop
sbb
sub
(bad)
sbb
push
adc
jmp
mov
inc
cs
iret
std
call
push
loope
idiv
and
pushf
add
or
int
fdivr
jmp
rcr
imul
ret
nop
aad
inc
adc
test
xchg
add
dec
loopne
stos
scas
fwait
xor
cmps
popf
fild
adc
push
test
dec
inc
jno
push
pop
push
cld
jne
and
mov
push
jl
sbb
int3
ss
xchg
test
push
ds
ds
push
and
mov
mov
xchg
inc
sti
adc
movs
jae
adc
ret
inc
pop
xor
mov
and
fidivr
std
sub
push
pop
(bad)
jne
hlt
jnp
add
fiadd
fsub
mov
mov
mov
repnz
cld
mov
imul
mov
sbb
adc
mov
in
out
dec
loopne
push
outs
mov
mul
mov
cmps
mov
adc
movs
push
inc
ins
(bad)
loope
jmp
ret
popa
dec
rcr
stos
sbb
mov
out
jmp
ins
mov
test
leave
shl
ins
mov
cmp
arpl
out
cmp
movs
pop
cmps
lods
in
jae
call
push
out
dec
into
jno
shr
iret
scas
inc
arpl
pop
pop
pop
push
fisttp
cwde
(bad)
test
jmp
jmp
mov
sbb
and
jbe
daa
dec
rcr
lahf
sub
jae
push
adc
addr16
adc
out
mov
dec
sub
in
and
sub
scas
(bad)
popf
cmp
inc
mov
dec
mov
cli
jp
out
xchg
add
mov
loope
aam
push
and
hlt
push
cwde
jle
inc
out
xlat
repz
daa
dec
popa
or
jne
std
mov
ins
sbb
test
icebp
push
movs
mov
loop
out
push
and
mov
inc
jge
pop
and
je
clc
jecxz
mov
rcl
cwde
xor
ror
not
add
push
sub
xor
outs
jecxz
loope
pop
pop
call
repnz
mov
lahf
shl
jo
cmp
fild
fisub
mov
and
daa
retf
mov
cmp
pop
or
mov
aam
inc
idiv
sbb
arpl
int
cs
stc
inc
std
xchg
test
and
inc
test
sub
pop
into
pop
cmp
in
sub
mov
cli
dec
cmp
pop
inc
lock
xchg
lock
mov
mov
aas
cmp
xchg
movs
jmp
jle
imul
ret
mov
jmp
cmp
enter
sub
jle
sbb
jmp
pusha
push
push
mov
pop
das
movs
je
jns
pusha
pop
into
movs
and
xchg
add
outs
mov
sti
add
mov
imul
outs
pop
leave
mov
mov
(bad)
enter
icebp
aam
push
sbb
add
pop
jne
or
jl
adc
sub
inc
fist
inc
add
loopne
test
mov
cmp
in
or
and
sahf
mov
sub
mov
or
mov
adc
in
push
pop
pushf
aad
ins
jae
popa
adc
sbb
mov
in
nop
dec
iret
xchg
fidiv
adc
xchg
fsubp
ins
aam
add
push
jnp
lock
mov
xlat
or
icebp
dec
hlt
xor
pop
add
fbstp
mov
ds
fbld
sbb
sub
stos
movs
jne
lock
cmp
fnsave
xor
ja
xor
retf
mov
xor
jmp
mov
mov
jmp
stos
ins
add
xlat
mov
sbb
inc
pop
lahf
shl
mov
cmp
xchg
xlat
mov
imul
sti
lock
imul
inc
sar
add
addr16
stos
cmp
imul
or
retf
pop
jmp
pop
sbb
sub
cdq
movups
gs
adc
pop
dec
and
cdq
xchg
mov
adc
pop
cmc
loope
les
xchg
rcr
aam
int
rcr
xor
into
push
fiadd
push
mov
movs
mov
xchg
into
fidiv
arpl
add
pop
push
mov
adc
or
adc
or
dec
jne
adc
push
push
push
pop
mov
clc
fwait
dec
xor
outs
enter
pop
stos
sub
lea
push
adc
jno
lods
rdpmc
jge
pop
sbb
mov
or
fmul
jmp
sub
retf
cmps
fisubr
ss
lods
lahf
cmps
xor
rcl
jns
hlt
fstp
cmp
pop
pop
ret
cwde
loop
cmps
das
popf
push
shl
xchg
leave
pop
jecxz
dec
sbb
push
add
sahf
test
xchg
ds
adc
ret
adc
xor
inc
js
repz
push
(bad)
fdivr
loop
mov
sbb
adc
inc
mov
pop
(bad)
jmp
and
xchg
and
and
ins
inc
test
xchg
jae
fimul
xchg
jl
pop
(bad)
mov
je
add
jge
push
enter
xor
test
sbb
nop
lods
outs
dec
push
mov
push
xor
(bad)
xchg
pop
dec
sti
mov
hlt
dec
mov
pop
cld
fist
loopne
jecxz
mov
cli
popf
mov
xor
xor
movs
cmps
dec
mov
ret
pop
add
adc
xchg
push
dec
pop
xchg
push
ficom
inc
sub
mov
mov
inc
mov
cmp
out
sbb
push
leave
sub
aaa
inc
and
test
inc
xor
add
cs
push
add
dec
test
das
out
xchg
jne
mov
mov
push
sub
add
mov
mov
shl
add
push
imul
mov
cdq
cdq
dec
aaa
adc
jge
aas
cmp
pop
jb
aad
call
jge
imul
repz
(bad)
aas
mov
call
das
sti
inc
pop
popf
ds
inc
sbb
dec
retf
jmp
ds
jae
push
mov
popf
sub
mov
lods
test
fstp
sahf
or
mov
jmp
fwait
iret
push
mov
ficomp
xor
push
add
adc
(bad)
xchg
jb
int3
ret
pusha
xchg
cmp
push
sbb
pop
mov
jbe
pop
jno
stos
cmp
jae
(bad)
out
call
inc
movs
mov
test
aas
xor
fisttp
jecxz
mov
xor
cmps
and
sbb
(bad)
clc
xchg
arpl
test
(bad)
inc
std
fidivr
addr16
sbb
cmp
adc
or
imul
(bad)
fnsave
cmp
shl
lock
jns
adc
xchg
rol
mov
scas
mov
ja
and
or
add
and
je
(bad)
not
das
cmp
xor
xor
dec
test
in
inc
push
loope
nop
aam
stos
push
ret
adc
daa
pop
mov
mov
sub
jle
out
xchg
fsub
sbb
cli
fimul
mov
xchg
scas
(bad)
scas
sub
mov
ret
lock
(bad)
lock
adc
fcmovbe
and
(bad)
jb
dec
push
popa
nop
inc
popf
push
stos
pop
sbb
xchg
or
mov
call
test
in
jmp
dec
dec
add
jne
mov
ret
inc
movs
dec
xchg
shl
xchg
mov
xchg
dec
sub
jmp
std
retf
xor
test
call
cmp
aaa
xchg
mov
pop
dec
test
adc
xor
int
adc
add
push
jns
jns
outs
xor
jge
or
sub
fdivr
and
daa
scas
mov
jae
sti
pop
imul
xchg
ds
je
push
pushf
jo
xchg
jnp
push
pop
imul
movs
pop
movs
dec
adc
xchg
jns
fcmovnu
mov
jne
cwde
xchg
pop
mov
push
add
cmc
sahf
test
mov
cmps
pushf
sti
out
adc
cmp
mov
iret
lods
sbb
sahf
mov
hlt
(bad)
jmp
cmp
xor
retf
adc
aaa
mov
inc
inc
ret
xor
call
aas
jmp
push
(bad)
mov
mov
cmp
dec
mov
lock
mov
popf
es
sar
cwde
xor
es
inc
xor
rcr
cwde
scas
pop
clc
jg
or
std
fimul
enter
pop
std
and
pusha
lea
je
or
xchg
xchg
lea
dec
imul
scas
push
in
push
and
cmp
push
lds
fst
pop
in
popf
push
loop
push
sti
sbb
or
add
mov
(bad)
ret
aad
dec
push
jno
adc
jae
aad
push
fucomp
out
shr
ror
lock
dec
aam
adc
push
xor
mov
movs
(bad)
(bad)
pop
dec
jno
pop
add
push
loop
xor
test
xchg
cmp
sub
or
into
xchg
fiadd
xor
xor
popf
hlt
mov
mov
adc
push
sbb
jb
pop
push
bound
sub
add
psrld
mov
cs
in
pop
mov
(bad)
out
push
jge
fcomp
inc
xlat
xlat
push
ins
or
jmp
mov
jmp
movs
mov
sub
ins
and
stos
leave
or
fwait
dec
dec
add
and
add
push
lds
xor
push
push
adc
ror
loope
sahf
aas
inc
jmp
inc
jmp
fcom
test
pop
mov
lock
dec
into
push
inc
ror
pop
rcr
fwait
add
rcl
out
lahf
push
and
mov
push
rcr
in
loopne
fsubr
cmp
add
rep
mov
sbb
sbb
addr16
xchg
or
test
aam
les
fisttp
pop
dec
stos
cmp
push
jb
and
xor
jb
sub
jno
mov
or
cmp
inc
fs
sbb
mov
call
cmp
fstp
sbb
pushf
pop
bound
push
mov
push
iret
enter
stos
add
adc
repnz
mov
push
push
push
jle
inc
imul
mov
shl
push
int3
sub
gs
push
(bad)
mov
inc
hlt
das
ja
xchg
xor
ret
and
sub
jbe
inc
push
add
nop
sar
es
sub
or
jnp
popa
xchg
or
xchg
dec
xor
jns
fistp
nop
and
mov
add
bound
sbb
and
mov
sbb
xchg
shl
push
pop
push
xchg
addr16
jbe
sahf
mov
bound
in
enter
adc
fcom
jecxz
pusha
xor
aas
hlt
aaa
ja
dec
xor
add
imul
and
out
sbb
loop
stos
jo
into
loope
jnp
jge
pop
scas
fwait
add
pop
out
mov
sbb
shl
pop
mov
add
cmp
jne
xor
out
jecxz
repnz
sti
(bad)
call
cli
push
lahf
add
pop
dec
int3
and
ficom
mov
lahf
dec
mov
clc
mov
sbb
push
and
push
outs
adc
aam
mov
aam
pop
xlat
lds
sub
jle
inc
mov
mov
out
inc
mov
add
sahf
fiadd
mov
imul
je
push
in
rcl
xor
mov
sub
pop
jbe
pop
pop
pop
dec
xor
mov
pop
js
and
dec
aaa
xchg
icebp
push
test
pop
dec
popf
xlat
outs
xlat
call
(bad)
(bad)
adc
mov
add
cmp
push
add
push
in
pop
retf
int
dec
and
push
dec
pop
outs
xchg
pop
in
pop
out
mov
gs
retf
mov
sub
cld
or
xor
in
sbb
aas
iret
imul
push
nop
jle
movs
call
inc
xor
fimul
lea
jae
sbb
lods
fsubr
or
loope
rcl
std
xor
mov
cmps
fsub
xchg
fistp
mov
js
mov
cmp
imul
adc
mov
icebp
pop
add
adc
int3
or
xchg
jecxz
int3
test
jno
scas
fucomip
inc
and
lahf
inc
imul
scas
add
pop
sbb
inc
(bad)
xor
mov
test
ins
aas
movs
nop
xor
jnp
xor
inc
es
sub
aas
and
test
jae
push
push
sub
jno
or
and
scas
cld
or
push
sbb
jo
mov
movs
(bad)
cmp
nop
ja
fs
pushf
in
adc
test
mov
fsubrp
xor
pop
test
push
cdq
mov
xor
(bad)
cmp
push
test
push
out
lods
sbb
idiv
sbb
fidiv
xchg
popf
(bad)
cmp
jecxz
mov
hlt
mov
jp
loope
or
stos
(bad)
sub
mov
mov
sti
push
test
in
push
dec
pop
mov
xor
or
xchg
inc
cmp
add
and
into
(bad)
jnp
je
fcomp
outs
cmp
seto
ret
sub
and
gs
mov
mov
mov
mov
adc
popa
xor
push
add
in
push
xchg
in
pop
lods
fwait
aam
add
shl
push
adc
ret
dec
hlt
inc
ret
xchg
les
pop
jg
mov
cmp
fsubr
push
or
inc
push
jne
sub
add
(bad)
jecxz
or
gs
mov
or
jae
mov
retf
sbb
mov
sub
and
fisttp
jbe
ss
xchg
(bad)
pushf
stc
test
mov
inc
xor
mov
or
cmp
sbb
shl
retf
jb
adc
fscale
adc
sub
mov
test
out
sbb
nop
push
ins
push
es
or
inc
fld
rol
push
repz
shl
cmps
imul
xor
aas
and
push
xor
mov
jge
loop
imul
add
lock
push
ins
mov
pusha
loopne
mov
lock
jmp
call
int
ss
test
loop
xchg
cdq
scas
or
ins
sub
shl
fwait
dec
sbb
mov
add
cmc
sbb
add
xchg
mov
outs
cld
arpl
scas
mov
fld
pop
add
int
int3
jg
push
xor
dec
or
leave
jecxz
jge
add
call
or
(bad)
xchg
clc
inc
jg
mov
mov
repz
popf
cld
jl
out
fstp
in
shl
jno
ret
ret
sahf
dec
xor
call
xor
sbb
test
dec
stos
jno
iret
in
sbb
loop
jecxz
mov
sub
xor
push
pop
inc
dec
and
mov
retf
xor
adc
lea
daa
mov
int3
and
mov
xchg
neg
jle
pushf
mov
icebp
(bad)
scas
or
xchg
fiadd
(bad)
leave
xor
cmp
rcl
outs
mov
mov
(bad)
push
push
int3
push
leave
and
lds
adc
fld
(bad)
xlat
mov
inc
jmp
mov
enter
ror
jne
sbb
adc
clc
in
fwait
dec
inc
mov
dec
(bad)
popa
or
adc
jmp
jmp
popf
dec
push
retf
call
cdq
mov
inc
xor
arpl
rol
das
mov
mov
push
stc
dec
cmps
(bad)
push
mov
xchg
sahf
sub
jge
(bad)
cmp
jae
je
repz
ficom
lds
cld
mov
mov
retf
inc
mov
loope
out
shl
add
jne
mov
cmp
hlt
jge
mov
cmp
mov
jb
push
in
and
out
mov
mov
and
jns
(bad)
add
mov
loope
and
add
jnp
lods
jbe
jle
loope
dec
sub
fnstenv
retf
cmp
outs
cmps
into
fistp
fldenv
adc
sbb
sub
and
loope
add
jmp
shl
popa
dec
xchg
cmps
loope
icebp
fwait
and
scas
(bad)
jmp
fs
mov
cmp
or
lea
ret
xor
jmp
jbe
(bad)
movs
mov
adc
mov
xlat
leave
mov
mov
clc
ds
dec
xor
sub
dec
in
cs
pop
call
or
cmp
dec
dec
sbb
lds
ret
shl
adc
mov
addr16
sub
hlt
cmp
cmp
hlt
push
add
xlat
das
xor
movs
mov
test
jl
outs
sbb
shr
sbb
sub
shl
xor
jns
jecxz
sbb
out
add
and
pop
mov
loopne
ret
clc
or
pop
add
add
dec
je
lock
(bad)
cmp
sub
shl
adc
retf
xchg
cmp
sbb
and
jecxz
aad
rcl
dec
jo
retf
sbb
ss
and
xor
outs
xchg
in
and
mov
xchg
jnp
inc
or
test
retf
das
ins
in
sub
fwait
das
lods
(bad)
lds
jnp
push
rcl
pushf
data16
jnp
repnz
mov
mov
fsubr
or
mov
or
cmc
cld
cmp
nop
retf
inc
(bad)
aad
push
adc
lahf
int3
mov
push
iret
dec
fdiv
popf
mov
arpl
es
mov
sub
and
cwde
test
hlt
mov
mov
inc
outs
adc
ins
jmp
lea
dec
not
aaa
mov
pop
mov
cmp
jne
jb
fisttp
pop
jg
out
stos
stos
dec
mov
push
pop
outs
ficom
xchg
xchg
stos
inc
sbb
sbb
dec
cmp
cdq
enter
(bad)
xrstor
xchg
adc
neg
ret
adc
retf
push
sbb
in
push
sar
data16
xor
(bad)
pop
add
leave
je
(bad)
cmp
inc
xor
outs
lds
(bad)
mov
sti
jbe
pushf
jne
push
sub
mov
fwait
push
mov
addr16
test
repz
fld1
push
xor
and
pop
pop
adc
je
and
cwde
adc
add
xchg
ror
inc
adc
jnp
in
dec
mov
xor
sub
xlat
bnd
inc
sub
repnz
mov
or
clc
pop
mov
int
icebp
add
aad
call
jp
rol
jge
adc
sbb
cmp
daa
push
in
cmps
jb
mov
fwait
jns
shr
out
inc
add
sbb
lahf
fs
dec
int3
pop
cs
test
aas
and
int
aam
and
inc
gs
pop
(bad)
aad
jmp
mov
ins
es
jnp
add
mov
push
push
sbb
data16
pop
sahf
pop
dec
out
xchg
pop
cmc
in
int
aad
push
or
mov
(bad)
mov
(bad)
push
xor
fwait
and
and
xor
ret
stc
adc
lmsw
mov
add
rcr
jge
mov
mov
or
std
dec
loopne
sub
push
dec
(bad)
lea
(bad)
adc
cmp
jp
clc
hlt
imul
cmps
ins
(bad)
pop
xchg
pop
dec
push
pop
sub
mov
test
addr16
mov
jmp
inc
mov
xor
push
in
call
or
rcl
loope
mov
sahf
sbb
jg
inc
hlt
jecxz
out
test
fwait
inc
fdiv
js
push
mov
inc
arpl
xchg
fucomip
push
and
fldenv
xchg
mov
mul
adc
push
mov
push
addr16
retf
sbb
cld
pop
jmp
mov
lods
inc
jmp
addr16
and
pop
add
out
nop
mov
dec
arpl
icebp
stos
mov
js
std
jecxz
sbb
ret
cmp
jp
cmp
inc
retf
sub
mov
call
mov
cmp
sbb
dec
in
gs
es
inc
mov
sub
xchg
in
scas
mov
and
pop
inc
push
pop
cwde
and
mov
shl
push
mov
adc
loopne
sub
and
cmp
je
mov
cmp
sub
shr
adc
retf
mov
xchg
dec
leave
mov
fild
jae
jnp
adc
xchg
xchg
dec
rol
cdq
pop
nop
and
fisubr
cwde
sub
in
loop
daa
aad
les
pop
jmp
mov
in
mov
pop
xor
das
sub
dec
stc
mov
retf
loopne
fwait
push
ja
push
and
popf
dec
mov
rcl
xor
jge
data16
push
pop
sbb
cmps
mov
add
jle
movs
lahf
pop
inc
int
mov
inc
movs
in
pop
mov
push
push
pop
nop
stc
push
adc
sbb
sub
aaa
repnz
loope
out
mov
ficom
push
mov
sub
inc
lods
inc
bound
lods
fstp
sbb
cmps
or
(bad)
jbe
cmp
dec
xor
(bad)
scas
call
mov
iret
call
(bad)
retf
cmps
popf
dec
test
push
repz
(bad)
push
leave
xor
movs
sbb
pop
pusha
or
jecxz
icebp
fcomip
scas
outs
shl
jns
sbb
push
pushf
popf
in
(bad)
xlat
add
pop
xchg
out
mov
pop
xor
jo
movs
sub
movs
clc
sub
cmps
xor
and
into
fcmovne
or
jg
jge
int
shl
adc
(bad)
add
or
jo
shl
(bad)
add
(bad)
shr
xlat
data16
jno
push
xchg
mov
sahf
mov
gs
add
inc
add
hlt
pop
dec
std
ins
test
pop
or
mov
pop
in
scas
push
jno
sti
jecxz
or
add
daa
pop
out
je
loope
pop
pop
lods
mov
fstp
dec
sbb
or
and
adc
movs
ror
mov
pop
test
outs
adc
and
xchg
jbe
sub
mov
and
add
mov
xchg
bound
sbb
fistp
cs
mov
xchg
das
push
das
dec
rcr
clc
js
retf
push
lock
fwait
or
or
(bad)
in
cmc
shl
pop
in
and
mov
fbstp
shl
push
(bad)
or
pop
pop
xchg
xchg
adc
xchg
nop
(bad)
es
or
xchg
jge
mov
push
cmp
add
loop
lods
in
mov
addr16
aaa
retf
popf
add
xor
aaa
rcr
inc
xor
and
jnp
bound
outs
out
sub
loopne
out
in
pop
cmp
push
jmp
in
fdivr
lods
dec
and
jmp
call
jb
xor
or
jo
add
mov
cmp
enter
test
scas
fstp
cmp
dec
adc
xchg
jbe
mov
mov
push
and
dec
push
adc
cmp
mov
and
xchg
rcl
hlt
cld
dec
test
jmp
push
pop
cmps
test
push
jb
jb
jp
jno
fwait
aaa
mov
and
mov
xlat
mov
cs
pop
out
jmp
shr
jge
mov
cmp
mov
int3
pushf
nop
inc
cli
push
cmp
fidiv
mov
in
xor
mov
loopne
push
je
sbb
pop
push
cmps
loop
jb
mov
sub
retf
out
xor
dec
fwait
inc
mov
loopne
cmp
ss
in
mov
gs
leave
out
pop
jmp
and
inc
imul
aad
inc
add
adc
push
xlat
repz
pop
push
mov
out
ds
fisub
sbb
call
inc
mov
mov
add
imul
adc
das
fnsave
call
mov
and
fstp
scas
add
sub
pop
jecxz
add
inc
adc
pop
movs
pop
ror
sub
bound
cs
push
imul
pop
mov
popa
daa
adc
mov
adc
fcomp
aam
pop
and
outs
test
mov
mov
sahf
lods
jo
retf
inc
fwait
sub
sahf
sbb
mov
push
push
xor
iret
jo
clc
loope
adc
mov
cs
pop
es
xchg
push
pop
jmp
adc
sbb
imul
xor
cmp
pop
sub
loope
inc
scas
std
adc
sub
test
or
push
inc
mov
or
(bad)
adc
arpl
shl
xchg
cmp
adc
add
push
(bad)
(bad)
push
cmps
stos
adc
mov
adc
(bad)
add
ror
std
inc
movs
adc
or
jns
jnp
mov
or
in
dec
stc
inc
sti
adc
adc
arpl
push
(bad)
loopne
adc
(bad)
dec
sbb
inc
out
(bad)
(bad)
nop
mov
xlat
inc
dec
out
rcl
fs
jo
pop
imul
sub
cmc
movs
cmps
(bad)
xor
es
cmps
movs
cmp
add
clc
call
jp
fdiv
pushf
pop
and
and
fist
pop
add
jmp
sub
mov
call
out
stc
(bad)
fbld
div
xchg
mov
ss
mov
in
test
imul
ret
aas
lods
outs
cmp
scas
pop
icebp
mov
mov
pop
inc
in
and
into
inc
pop
out
sub
jb
mov
jmp
and
xor
pushf
adc
jle
fldcw
loop
hlt
jp
imul
mov
int
ja
push
dec
dec
jg
out
lock
push
mov
and
ret
call
dec
icebp
mov
jl
jno
jmp
cmp
push
cmps
mov
or
pushf
pop
sbb
fisub
call
jg
mov
pop
aas
call
das
or
fidivr
ret
push
xor
pop
(bad)
jmp
jecxz
push
call
xchg
daa
sub
push
imul
dec
ins
out
mov
int
call
push
movs
dec
pop
dec
inc
lds
xchg
fnstsw
mov
sbb
stos
popf
stos
xchg
xchg
retf
add
jnp
cmps
pop
(bad)
imul
cmp
add
lods
mov
mov
xlat
test
mov
ret
mov
mov
mov
adc
dec
jbe
mov
adc
shr
push
out
test
fs
imul
pop
cmps
sub
cwde
rcl
inc
adc
lock
jbe
and
in
add
cmps
test
sub
sub
cmc
call
xor
aas
fisub
mov
pop
jg
fs
pop
cmc
call
inc
hlt
shr
dec
iret
adc
test
xor
dec
add
mov
aaa
xor
xor
dec
cld
enter
mov
push
dec
cwde
imul
into
xchg
and
mov
out
lods
aam
xor
sbb
push
scas
or
pop
loopne
jb
sbb
out
ret
test
jmp
lahf
pop
inc
cmp
(bad)
not
mov
les
sbb
arpl
push
cs
jo
bound
xor
add
jb
(bad)
mov
outs
sbb
dec
into
ins
es
neg
scas
and
cmp
push
aas
push
rcr
dec
dec
sub
sub
lea
or
test
jecxz
pop
out
sbb
pop
sbb
les
jmp
mov
mov
cmp
and
lahf
sub
sbb
daa
xchg
or
mov
ret
shl
jne
iret
inc
neg
dec
push
inc
add
pop
js
xor
imul
lds
bound
xchg
inc
and
pushf
dec
inc
push
or
sti
or
push
enter
jae
(bad)
loopne
mov
jb
dec
jae
lock
sar
or
push
push
inc
test
fs
outs
jge
dec
icebp
neg
nop
and
scas
pop
jmp
and
push
mov
sti
sub
mov
ja
or
icebp
xor
mov
adc
jb
sub
add
mov
fsubr
adc
mov
cmp
xor
ret
fild
test
repnz
dec
xchg
rcr
add
jp
mov
and
and
call
in
loope
fild
ret
lock
(bad)
cmp
jmp
das
xchg
mov
jno
pop
mov
pop
mov
enter
test
cdq
mov
push
call
mov
in
jnp
ror
pop
cmp
sbb
sub
jo
shl
pop
or
(bad)
pop
xor
jmp
pop
icebp
mov
movs
dec
sbb
push
mov
and
xchg
scas
xlat
and
sbb
clc
inc
or
push
push
xchg
mov
mov
lea
and
retf
jmp
adc
mov
sub
into
and
sub
mov
repnz
in
movs
pop
sar
cmps
jg
cdq
iret
pop
fcmovnbe
js
je
neg
fistp
push
fist
pop
call
cmps
jbe
pop
push
stos
sbb
fist
mov
or
add
jl
scas
movs
push
push
fs
sub
cmp
push
inc
xchg
jle
mov
jge
call
mov
pop
stos
jp
leave
repnz
sbb
add
and
inc
xchg
sbb
rcr
push
mov
loope
cli
outs
jmp
jge
stos
jb
and
pop
test
ret
cmp
lods
or
(bad)
fmul
mov
dec
mov
or
mov
push
push
fld
cmp
daa
jg
adc
sbb
fimul
xchg
or
add
fs
inc
sbb
cmc
aam
jg
shr
cmp
test
pop
rol
bnd
fisubr
js
adc
lds
paddsb
arpl
jge
cmp
pop
pushf
icebp
popf
adc
mov
cmps
aas
daa
mov
into
sub
xchg
inc
jmp
push
xlat
add
sub
inc
mov
jae
fidivr
push
out
clc
inc
test
cdq
mov
mov
inc
inc
jmp
cdq
ss
push
cmps
jecxz
lods
sti
scas
bound
popf
movs
jp
bound
sbb
clc
je
inc
das
mov
mov
sbb
push
cmps
xor
and
adc
inc
mov
fadd
(bad)
jno
xchg
ins
push
inc
neg
pop
sub
xchg
mov
adc
div
push
lds
cmc
xor
lds
call
or
pop
cmps
addr16
mov
jp
dec
lods
lods
push
dec
fimul
fidiv
ins
out
mov
(bad)
cmp
cmp
add
inc
push
pop
ds
sub
push
or
xchg
fisttp
push
xlat
scas
(bad)
cmp
les
xlat
pushf
stos
repnz
dec
sbb
add
int3
xor
mov
or
push
add
pop
dec
hlt
inc
iret
jae
jl
cmp
pop
mov
cmp
leave
xchg
push
cld
fbld
and
xor
sub
in
inc
(bad)
or
int
dec
sti
dec
mov
enter
mov
mov
or
xlat
mov
adc
retf
xor
jmp
push
cmp
call
ja
mov
aas
mov
add
arpl
xor
das
xchg
inc
pop
xor
call
sar
dec
jnp
xchg
cmp
adc
test
sar
mov
add
pop
fnstsw
push
lahf
jns
mov
push
fcom
push
test
inc
sbb
xchg
pop
cwde
xor
push
scas
aad
cld
bound
or
sub
daa
aad
fxch
dec
inc
push
or
pop
iret
pop
fmul
arpl
mov
ds
fsub
enter
addr16
imul
jp
push
movs
out
mov
lds
sub
daa
bound
arpl
and
loopne
scas
inc
cmp
mov
ja
and
(bad)
xor
lahf
jnp
sub
inc
jmp
ins
xchg
xchg
rcr
mov
(bad)
rol
cmc
jl
cmp
ins
mul
jmp
mov
fbld
or
cdq
clc
mov
sub
mov
jbe
aam
repnz
je
imul
stc
xchg
std
ficomp
(bad)
jns
scas
out
add
jge
(bad)
imul
push
adc
push
or
or
inc
mov
retf
mov
ds
popa
mov
fbstp
cmp
imul
ret
pop
sbb
pop
js
(bad)
in
inc
test
jb
(bad)
adc
and
cld
and
and
ja
ins
xchg
popf
movnti
(bad)
or
jg
xchg
ret
add
and
into
adc
or
push
leave
mov
out
push
mov
mov
push
loope
movs
adc
call
jae
movs
adc
pushf
cdq
cdq
(bad)
sub
stc
cmp
pop
jl
dec
imul
shl
xchg
xor
xchg
mov
xchg
jmp
mov
ficom
jmp
adc
cld
add
retf
xchg
std
cld
shl
in
xchg
sbb
cmp
repnz
cmp
or
mov
call
addr16
daa
and
jb
or
test
out
adc
jge
dec
iret
and
or
ret
je
dec
sahf
add
and
dec
ud0
pop
popa
mov
mov
scas
xor
fwait
mov
add
sti
adc
out
mov
ins
push
inc
out
jp
or
loope
ss
fcomp
cmp
ja
in
hlt
mov
imul
stos
sub
imul
and
dec
sbb
rcl
data16
gs
test
cmp
xor
stos
push
pop
mov
fld
es
xchg
cmp
or
mov
mov
stos
pop
and
lock
icebp
imul
into
shl
push
fisttp
daa
pusha
stc
jnp
or
sbb
retf
push
(bad)
add
call
xchg
or
aad
pop
ja
(bad)
rcl
or
sub
std
addr16
repnz
arpl
mov
repnz
arpl
inc
mov
cmc
push
in
test
inc
adc
add
in
popa
push
cld
ja
sbb
lea
stc
add
inc
mov
mov
jmp
iret
mov
pop
pop
in
fsubr
xchg
or
js
or
(bad)
or
push
cli
movs
stos
jo
add
fisttp
xor
adc
test
adc
push
mov
sahf
sub
stos
mov
test
pop
or
ss
xchg
outs
sub
dec
scas
daa
mov
scas
rcl
(bad)
loope
ror
push
test
xlat
mov
int
xchg
mov
jno
fdivr
push
mov
adc
mov
xor
push
sbb
scas
aas
es
mov
cwde
or
loopne
cmp
pop
ficomp
sbb
(bad)
xchg
out
stos
cmc
popa
data16
repz
std
dec
movs
sub
(bad)
loope
outs
xchg
sub
mov
ret
fnsave
jae
clc
ret
xchg
retf
cmp
(bad)
jmp
pop
cmp
lods
repnz
fistp
daa
and
xchg
jo
inc
dec
lds
div
dec
hlt
enter
mov
stos
add
nop
mov
mov
jle
nop
sbb
or
test
xor
popa
add
pusha
ss
je
mov
aam
cmp
pop
pop
aam
jmp
retf
test
mov
das
es
pusha
pop
cmp
loope
cmp
mov
arpl
mov
push
fisubr
sbb
dec
xchg
jp
add
loopne
cmp
lods
jecxz
outs
stos
inc
jne
add
mov
addr16
cmp
fcomp
fdiv
dec
xchg
push
mov
sub
seta
or
in
inc
outs
adc
rcl
nop
sub
pop
ds
addr16
sub
xchg
pushw
adc
xchg
loop
cmp
jnp
or
xchg
inc
pop
cmp
add
retf
jo
or
scas
xchg
pop
mov
iret
mov
and
rcl
mov
rcl
push
ret
mov
inc
jnp
dec
mov
fist
push
pop
xchg
add
fwait
dec
dec
push
cmp
mov
inc
cmp
dec
int
ficomp
mov
inc
mov
mov
in
sub
int3
push
add
cld
push
and
imul
ret
arpl
mov
les
ins
xchg
mov
adc
retf
(bad)
repnz
outs
stc
pop
out
ins
mov
rcr
sti
sbb
mov
popa
rep
outs
in
push
mov
mov
adc
and
mov
dec
or
xor
lds
dec
std
or
stos
ins
sbb
mov
aad
mov
test
xchg
adc
pop
imul
(bad)
mov
dec
cmc
inc
dec
pop
test
mov
inc
adc
or
mov
pop
or
push
push
push
mov
sbb
xchg
adc
push
mov
mov
pusha
adc
push
xchg
sub
mov
test
cmps
stos
cmp
cld
dec
push
xor
jb
aaa
mov
sub
inc
shl
xor
adc
sti
cmp
mov
sbb
inc
jnp
scas
cmp
xchg
or
mov
into
adc
pop
mov
mov
ds
movs
push
test
int3
xchg
adc
test
add
jl
pop
aam
lahf
pusha
push
ins
xor
dec
lds
aad
sbb
cmp
data16
jl
xchg
cmps
xlat
and
xchg
test
dec
jecxz
dec
push
fstp
and
addr16
sub
scas
xchg
push
leave
call
ror
push
pop
loopne
pop
mov
jge
dec
mov
add
mov
mov
push
dec
xor
aas
data16
cmps
fidivr
gs
fs
fisub
cmc
inc
mov
cld
adc
xor
lock
jbe
mov
mov
iret
mov
jle
jp
in
(bad)
adc
pop
pop
adc
mov
scas
das
xor
push
imul
daa
jnp
xchg
rcr
cs
xchg
lock
shl
pop
pop
jmp
sub
pusha
rcr
stc
cli
sub
(bad)
icebp
and
movs
push
pop
mov
xchg
push
ds
dec
leave
push
pop
dec
imul
sub
or
movs
pop
dec
loopne
imul
out
in
sar
pop
daa
jb
ss
mov
and
sub
mov
cmps
xchg
add
cmps
out
xor
test
popf
pop
mov
call
xchg
xlat
dec
dec
sub
adc
std
scas
jecxz
xchg
jb
aad
(bad)
inc
retf
adc
stos
stc
pop
sbb
sti
mov
movs
sbb
repz
xchg
dec
dec
sahf
inc
lock
mov
jae
jo
(bad)
aad
repnz
inc
stos
adc
push
push
test
fs
jp
cmps
std
cmps
sar
dec
ds
rcr
jbe
aad
inc
scas
loop
cwde
outs
out
movs
dec
ds
dec
stos
mov
push
pop
pop
jle
sub
sahf
mov
nop
mov
data16
cmp
cmp
js
mov
sub
or
stc
pop
add
adc
ss
mov
arpl
ret
pop
cmp
cdq
or
push
pop
cmovg
push
in
mov
aad
int
cwde
sub
retf
push
adc
sub
in
sti
pop
sbb
sbb
xor
inc
or
sti
ret
fisubr
mov
add
frstor
call
out
popf
sbb
ret
mov
sbb
jno
jns
jmp
dec
das
(bad)
mov
lods
jle
cmc
dec
in
jnp
jnp
cs
cmps
xor
adc
or
sbb
mov
iret
hlt
(bad)
pop
inc
fadd
adc
pop
iret
pop
cli
adc
cdq
jl
mov
adc
cmc
add
mov
(bad)
arpl
movs
retf
repnz
mov
pop
jl
mov
sbb
in
ja
jecxz
push
dec
arpl
push
cmc
psrld
dec
cwde
push
loope
pop
dec
and
and
dec
or
ds
fs
stos
ins
sub
xor
adc
pop
mov
add
mov
xor
aam
out
je
lods
aam
add
jmp
xlat
cmp
sbb
mov
dec
mov
cmp
xchg
xchg
nop
adc
shl
sahf
shl
fisubr
dec
adc
imul
loope
sub
ror
scas
push
jp
jp
jb
ja
add
or
rcr
sbb
or
push
arpl
pop
das
mov
lahf
and
sahf
cdq
into
fiadd
fisttp
adc
fld
(bad)
adc
adc
mov
xlat
loopne
add
add
nop
cmp
fcomp
pop
scas
rcr
loopne
xchg
jae
in
ret
clc
adc
sbb
gs
ret
push
push
pop
pusha
jge
mov
mov
scas
loope
daa
push
fistp
mov
inc
popa
mov
sub
mov
mov
hlt
lds
pop
push
popf
cmp
gs
inc
sub
inc
js
mov
jg
push
rol
(bad)
mov
test
fcom
pop
cdq
jg
hlt
push
mov
mov
xchg
push
sbb
fist
aas
mov
lds
mov
rol
xor
loopne
xchg
data16
jl
add
xchg
mov
mov
xchg
xchg
stos
shr
ds
int3
adc
das
ror
(bad)
retf
or
retf
sub
push
jp
std
into
iret
adc
dec
or
fsubr
imul
pop
js
xor
sbb
dec
xlat
clc
sbb
ret
xor
xlat
pop
movs
xchg
mov
leave
add
or
pop
(bad)
loopne
pop
stos
mov
and
inc
addr16
cmp
jge
iret
movs
shl
jp
shr
addr16
push
jg
add
sub
sbb
and
dec
adc
sti
mov
cmp
inc
dec
into
mov
test
enter
jl
jns
mov
inc
popf
jp
lods
ror
adc
mov
dec
xchg
xchg
rcr
jno
mov
pop
test
clc
test
movs
cmp
mov
sahf
retf
mov
or
inc
sbb
ins
pop
jmp
xchg
mov
stc
(bad)
stos
sahf
adc
je
jmp
(bad)
outs
sar
and
sbb
inc
ss
mov
dec
out
pop
ficom
jle
rol
in
ret
lds
cmc
std
mov
pop
iret
cmps
dec
fsubr
data16
jo
jmp
xlat
push
dec
imul
push
mov
fistp
sub
(bad)
add
sub
in
add
mov
stos
daa
push
push
or
pop
(bad)
mov
dec
sahf
push
inc
pop
sub
inc
popf
and
sbb
bound
jmp
iret
iret
retf
test
(bad)
sahf
mov
add
or
jne
fidivr
mov
in
aaa
fdiv
inc
push
aam
mov
xor
inc
push
xchg
pop
mov
jge
or
xor
out
and
cmovs
cmp
dec
push
xchg
push
xchg
xchg
push
in
add
mov
cmps
xchg
lock
mov
mov
ds
sub
adc
push
mov
sbb
jae
mov
pop
xchg
pop
xor
imul
add
jle
out
neg
push
push
bound
and
cmp
bound
jl
and
cmps
mov
lock
sbb
out
aad
cmp
and
sub
add
imul
test
jp
fst
stos
pop
lea
mov
ss
mov
add
in
mov
mov
or
sbb
sti
stos
sub
les
lods
aad
out
inc
ins
iret
or
push
jmp
jecxz
inc
mov
call
dec
idiv
mov
test
enter
(bad)
fiadd
mov
inc
xlat
jge
or
int
pop
jg
and
and
test
(bad)
dec
inc
daa
inc
and
and
jmp
cli
push
aas
cdq
sub
dec
icebp
push
clc
mul
cmp
mov
in
sbb
shl
mov
or
stc
lahf
outs
xor
xor
mov
jmp
and
push
dec
shl
mov
les
push
out
jle
fstp
stos
cmps
test
inc
je
jp
add
pop
or
xor
mov
fwait
mov
dec
push
jo
cmp
mov
fstp
inc
outs
loopne
or
loope
mov
les
in
loope
inc
div
xchg
lods
mov
mov
stos
cs
scas
and
adc
adc
mov
fidivr
mov
pop
rcl
les
arpl
bound
jge
push
mov
add
sahf
sub
addr16
and
jmp
sbb
sbb
xor
mov
lock
fnstcw
cld
sub
es
sub
nop
dec
data16
sub
scas
inc
out
inc
xchg
mov
ins
ja
mov
test
and
mov
movs
push
push
test
push
inc
mov
test
iret
out
mov
sbb
xor
dec
pop
pop
mov
test
push
mov
js
das
sbb
pop
popf
push
push
mov
vunpcklps
and
js
dec
inc
sti
test
(bad)
jecxz
not
or
adc
leave
mov
js
and
dec
inc
inc
repz
psraw
jae
cmp
jns
pop
rcl
mov
pushf
movs
shl
in
or
(bad)
push
out
nop
cdq
or
cmp
imul
push
es
cld
sar
data16
cmps
scas
les
adc
mov
shl
fstp
scas
inc
jae
cmp
inc
or
call
movs
dec
mov
fsub
sbb
data16
std
enter
pop
xchg
fsub
or
push
icebp
push
test
jne
adc
mov
dec
stc
mov
and
fdiv
mov
loope
outs
adc
popf
push
push
test
cmp
lock
fst
cmp
das
inc
dec
xchg
mov
test
stc
jns
pop
sub
mov
iret
adc
dec
je
fs
xor
test
push
cmp
mov
xor
int
movs
sub
inc
adc
out
lods
(bad)
push
and
pop
add
push
shr
add
mov
jno
mov
ins
retf
in
pop
bnd
xchg
arpl
cwde
push
(bad)
dec
add
xchg
and
xchg
inc
dec
push
jmp
les
jmp
test
and
add
cmp
xchg
hlt
xchg
add
and
or
es
pop
jnp
clc
sahf
push
pop
jbe
dec
or
push
pop
addr16
iret
leave
test
xor
cmp
inc
out
sub
sbb
cmp
in
xchg
movs
cdq
mov
mov
clc
fnstenv
adc
sti
je
pop
jmp
sub
push
pushf
dec
jne
mov
sti
clc
outs
cs
push
xchg
dec
sub
push
push
div
pop
pusha
inc
xor
popf
xor
(bad)
sar
inc
mov
loope
sub
cmp
es
or
sbb
movs
out
sti
or
mov
cmp
mov
push
and
lods
pop
shl
lds
mov
dec
inc
lea
cmps
or
push
inc
cmovb
sub
mov
mov
movs
test
push
scas
push
sub
and
fdiv
adc
jns
xor
js
data16
and
cmp
mov
pop
adc
aad
jo
fs
push
int3
adc
jmp
call
push
add
mov
jg
in
jbe
cwde
xchg
test
inc
add
in
add
jle
add
push
ss
scas
xchg
cdq
imul
jle
and
ror
out
or
jl
cmp
mov
mov
jo
into
xlat
push
sbb
xor
or
mov
fld
xchg
xchg
mov
pop
mov
jb
mov
add
fist
xchg
call
fidivr
outs
xchg
dec
cmp
or
nop
sbb
mov
mov
js
dec
mov
xor
xchg
dec
enter
aam
sete
push
mov
push
shl
xor
mov
in
mov
gs
aaa
cli
test
cs
in
xchg
xor
pop
in
push
fisttp
push
xchg
adc
and
cmp
dec
and
sbb
iret
mov
test
movs
or
loope
leave
mov
ss
loopne
outs
jbe
cli
adc
sbb
push
pop
mov
mov
sbb
jbe
out
test
sbb
pop
sar
adc
jge
in
loope
sub
div
mov
mov
sbb
cmovge
cmp
fldcw
adc
xor
out
dec
fwait
push
movs
adc
xor
lahf
cmp
lds
push
js
mov
mov
mov
test
mov
or
(bad)
jp
in
inc
mov
frstor
loop
xchg
rcr
sub
fcomp
xchg
inc
pushf
xor
adc
cmp
mov
inc
enter
pushf
aas
xchg
mov
mov
sti
sahf
imul
test
or
jl
scas
out
adc
lock
les
mov
sbb
fcmovnb
pop
mov
sahf
scas
pop
xor
repz
mov
adc
or
test
clc
ins
jbe
pop
sbb
mov
ins
push
jne
sub
test
pop
outs
and
add
adc
dec
xchg
push
repnz
scas
or
mov
ret
not
mov
mov
xchg
lock
sti
mov
cmp
cwde
mov
out
cmp
inc
cmps
jo
cmp
scas
out
lock
pop
inc
scas
push
pop
inc
cmp
retf
adc
loop
push
jb
jnp
adc
xchg
rcr
jge
std
int
or
pop
inc
loop
mov
xchg
push
dec
or
jne
xor
sbb
dec
adc
sbb
lods
jge
add
xchg
or
mov
pop
stc
(bad)
out
jae
iret
mov
dec
loopne
icebp
scas
xlat
out
movs
cmp
mul
ins
push
addr16
xor
jecxz
and
xor
cmps
adc
add
or
adc
add
xchg
push
pop
jno
(bad)
jg
call
jecxz
sbb
aad
cmp
sbb
xor
mov
call
jbe
push
aaa
mov
or
adc
xchg
push
pop
or
jno
shl
cmp
ja
gs
cli
adc
mov
loop
ret
pop
mov
mov
inc
test
and
int3
jmp
retf
jo
aas
outs
and
data16
bnd
adc
mov
movs
aaa
or
mov
jmp
fcmovnb
cmps
test
mov
xlat
jp
(bad)
mov
pop
addr16
fidiv
outs
sub
nop
jbe
imul
cmp
inc
ja
push
mov
scas
cwde
jmp
push
std
test
pop
or
pop
mov
mov
cmp
sbb
jle
lahf
sub
jae
sbb
scas
jle
imul
push
gs
adc
scas
adc
xchg
aam
cmp
xor
aas
sbb
cdq
mov
sbb
mov
jecxz
or
cmps
rcr
mov
nop
mov
and
(bad)
stc
movs
or
ss
fdivr
iret
mov
mov
xor
out
loopne
dec
dec
push
loop
inc
je
gs
jmp
dec
fs
lods
outs
jnp
ss
enter
lahf
jmp
loope
fstp
fwait
sbb
inc
pop
in
cmp
scas
adc
cld
jno
mov
cmps
xchg
push
mov
xchg
in
fild
xor
nop
push
adc
mov
xor
cmc
(bad)
jmp
pop
cmp
inc
mov
sub
mov
pop
mov
icebp
sti
push
pop
jmp
call
sbb
push
pop
std
and
sub
test
into
pop
imul
xchg
sahf
repz
out
jge
pop
sub
out
jne
and
mul
pcmpgtb
nop
jmp
shr
mov
fdivrp
out
push
or
dec
leave
cmp
fistp
pushf
add
jl
cdq
repnz
call
cmp
cs
xor
or
xchg
pop
push
fidiv
sbb
sub
(bad)
repnz
mov
cmp
adc
pop
adc
push
mov
ficomp
jmp
imul
stos
cmp
pop
cs
cmc
imul
cmp
jecxz
rol
mov
aad
inc
xchg
(bad)
div
and
push
xchg
jmp
out
sub
shr
push
sub
fucom
test
movs
xchg
fcom
jno
sub
xchg
in
stos
sbb
xchg
cmp
icebp
out
cld
js
(bad)
leave
push
icebp
jmp
xor
in
movaps
push
out
and
mov
cmp
xor
cmp
in
loopne
ins
cs
mov
or
mov
fadd
push
test
inc
outs
popa
lods
cmp
pop
dec
fimul
xor
int
loope
mov
imul
cmps
dec
lods
and
nop
mov
(bad)
jbe
mov
dec
push
not
loop
mov
das
movs
push
sub
and
mov
ret
and
jo
dec
add
xchg
mov
ret
nop
pop
mov
fwait
lods
cld
mov
inc
push
(bad)
data16
int
xor
jo
imul
mov
icebp
mov
cmp
xchg
push
jb
scas
sbb
cli
jg
push
nop
mov
mov
inc
in
sahf
stc
and
loop
(bad)
int3
dec
mov
call
jbe
push
imul
dec
mov
adc
cmp
xlat
jb
cdq
dec
pushf
test
int3
ret
xchg
add
inc
retf
pop
push
(bad)
jle
push
push
cdq
mov
fadd
jg
test
mov
xor
sub
mov
and
mov
imul
cmp
push
jne
sar
jbe
xor
test
pop
sbb
ret
cdq
lods
dec
mov
mov
pop
loope
int3
push
movs
out
mov
das
out
test
cmp
loopne
retf
inc
fldenv
loope
mov
or
fmul
push
add
bound
adc
leave
lds
movs
mov
adc
daa
ret
popf
sub
mov
pusha
and
loopne
stos
stc
push
lods
inc
jmp
jo
inc
sub
fadd
xor
test
ins
gs
jmp
push
pop
and
and
int3
(bad)
lock
jge
ret
sub
lahf
inc
pop
fild
jecxz
test
xor
loop
mov
retf
(bad)
shl
xor
clc
addr16
jo
inc
push
sub
add
fidiv
pop
add
mov
test
adc
xor
jnp
and
push
jb
xchg
repnz
jo
aad
addr16
xor
push
add
sub
fs
cmp
mov
sub
lock
mov
(bad)
pop
jg
push
sub
mov
test
pop
or
cdq
pop
xor
jmp
jmp
xchg
cs
(bad)
call
nop
sub
sbb
inc
repz
(bad)
out
mov
pop
repz
stos
xchg
or
movs
addr16
jge
retf
in
int
scas
cs
xchg
enter
cmps
jnp
enter
pop
je
enter
rcl
jb
pop
adc
jns
div
cmc
pop
mov
mov
ret
das
and
repz
dec
push
mov
aaa
sub
xor
jle
cmp
neg
xchg
jmp
mov
sti
adc
adc
add
shl
pop
ins
leave
sub
push
gs
pop
cmps
imul
bound
clc
mov
inc
cmovl
fimul
cmc
out
mov
jae
ficomp
rcr
out
movs
cmc
cmps
cmp
scas
not
jb
pushf
sbb
inc
test
or
lds
mov
(bad)
sub
ss
int
mov
test
mov
rcr
mov
retf
jmp
sar
mov
sub
adc
mov
dec
dec
push
test
aam
jns
xor
sub
jge
xchg
popf
outs
shl
cmc
mov
sar
je
stos
movs
pop
repnz
xchg
dec
sub
or
adc
cmps
jl
scas
nop
(bad)
mov
inc
movs
sub
mov
jp
pop
in
adc
sbb
(bad)
mov
xor
inc
pop
ins
push
push
aaa
sbb
cld
push
stc
std
push
cwde
cmp
pop
js
or
jmp
inc
mov
dec
jmp
(bad)
test
mov
pop
xchg
jmp
cmp
ret
pushf
lods
leave
mov
inc
sub
fsubp
xor
or
mul
push
mov
stc
fucomip
adc
sub
loope
(bad)
inc
push
pop
nop
sbb
mov
les
xchg
jl
(bad)
pop
out
mov
scas
cwde
imul
(bad)
in
jo
stos
mov
in
fnstcw
adc
sub
nop
imul
ret
pop
sbb
imul
sub
xchg
retf
push
(bad)
pop
int
ins
sub
gs
cdq
sub
in
jmp
xchg
in
sub
das
bound
stc
mov
aaa
dec
test
and
jb
adc
mov
bound
mov
or
add
pusha
cmp
sub
jp
xor
test
add
mov
sub
adc
pop
out
mov
or
push
ror
dec
sub
sbb
mov
mov
cmp
imul
nop
cmp
imul
shl
inc
out
inc
push
push
cmps
sbb
call
in
or
popa
test
dec
push
mov
aam
inc
dec
sbb
push
jmp
in
es
sbb
xor
daa
mov
sbb
cs
pop
adc
fisttp
out
adc
cld
jns
icebp
mov
fucom
inc
cmp
cmp
arpl
jns
imul
dec
xor
das
push
push
aas
cwde
push
jl
les
or
or
stos
aaa
into
fs
mov
test
mov
call
cmp
and
fisttp
cli
setno
call
push
nop
jl
aas
psubq
jle
adc
and
or
jb
or
mov
xor
mov
in
sti
cdq
mov
aad
xchg
sti
inc
(bad)
(bad)
pop
int3
push
data16
mov
sbb
xchg
sub
fld
adc
sar
scas
add
std
popf
pop
pop
dec
sub
popa
rcl
call
xchg
jns
mov
mov
in
out
rcl
std
add
xchg
pop
rol
sbb
loop
iret
cmps
mov
outs
fsubp
test
cmp
cdq
cli
sbb
lea
test
lods
pop
xchg
mov
call
dec
add
fbld
repz
add
bound
sub
pusha
sbb
mov
push
clc
test
pop
or
aas
sti
cmp
push
mul
and
lods
pop
mov
fld
push
pop
xor
in
scas
out
cmps
mov
fsubr
out
in
je
push
xchg
jae
xor
mov
adc
push
clc
leave
out
int
jge
sub
adc
dec
xchg
daa
lods
dec
jmp
gs
dec
scas
mov
lock
out
int
sub
cwde
ror
dec
mov
dec
cmp
iret
or
mov
or
mov
ror
pop
jp
adc
pop
push
jp
mov
mov
adc
add
or
xchg
mov
pop
test
jg
push
ins
inc
sub
gs
int3
cmp
movs
jp
pop
addr16
and
xchg
lods
xor
loope
xchg
xor
clc
jle
pusha
and
inc
je
stos
push
lahf
jecxz
pop
lock
(bad)
fwait
push
outs
mov
repz
movs
ror
imul
lock
(bad)
pop
mov
inc
pop
gs
repnz
jb
cdq
into
ficomp
and
inc
test
xor
or
lahf
push
lock
leave
loope
fldenv
adc
psrlw
add
scas
mov
lds
(bad)
fcom
xor
enter
sub
(bad)
int3
shr
cli
call
(bad)
js
shl
lds
jmp
mov
ins
mov
xor
mov
movs
jle
jbe
fwait
shr
mov
mov
push
(bad)
not
stc
xchg
inc
into
gs
or
push
sbb
movs
(bad)
push
add
enter
popf
or
addr16
mov
mov
mov
mul
retf
call
sbb
in
cmp
cmc
add
cmps
mov
pop
pop
sbb
sub
into
out
xchg
pop
pop
xchg
shr
pop
add
jbe
out
fidivr
xlat
inc
outs
adc
outs
dec
into
mov
cwde
sbb
pop
xchg
mov
imul
aam
mov
div
hlt
fisttp
jle
push
fldcw
mov
jmp
fst
xor
sbb
push
add
cmp
jb
sti
pop
cmps
cmps
jne
add
(bad)
pop
ss
aas
add
dec
rcl
jmp
push
jp
or
cmps
inc
adc
es
int
or
into
jno
(bad)
pop
stos
inc
cmps
xor
lds
push
mov
pushf
test
pop
adc
cmc
xor
ds
cmp
lods
pop
arpl
cmps
pop
(bad)
cld
stos
int3
not
dec
jo
jne
mov
or
jecxz
and
mov
movs
shr
arpl
adc
aam
dec
sbb
aas
and
xchg
test
push
jnp
sbb
cmps
mov
push
mov
das
cmp
sahf
cmc
cmp
fist
mov
mov
sbb
jmp
sahf
dec
out
mov
sbb
dec
dec
imul
jae
jg
xchg
fucom
jae
sbb
mov
sbb
fstp
loopne
data16
push
(bad)
movs
jo
and
fbld
xchg
sub
std
inc
pop
dec
imul
sahf
fwait
jns
dec
push
mov
popf
sar
and
lods
push
cmps
and
mov
dec
cmc
test
out
jno
cdq
jle
sub
and
in
mov
call
fs
icebp
mov
adc
ss
inc
(bad)
in
retf
sub
(bad)
in
jno
dec
jge
fldcw
push
xor
fistp
lods
push
mov
jecxz
lea
mov
dec
scas
pop
or
xchg
retf
adc
pop
test
inc
inc
push
loope
jmp
retf
cmps
fld
outs
pop
cmp
out
jmp
ja
add
mov
and
or
jno
or
inc
adc
mov
pop
scas
sti
popf
(bad)
in
movs
jb
shl
jp
loopne
movups
inc
lods
mov
pusha
fistp
call
rcl
add
(bad)
mov
or
sub
xchg
popf
inc
push
retf
cwde
and
xlat
mov
jle
sub
(bad)
pop
push
pop
ret
cmp
outs
aad
sti
jp
ret
mov
inc
iret
icebp
inc
xchg
ret
ror
test
cmp
sbb
and
mov
or
aam
jae
inc
sahf
mov
mul
cwde
test
into
and
fnstcw
push
(bad)
add
in
mov
adc
pmuludq
and
ins
mov
cmp
jmp
jecxz
repz
ror
cmp
mov
cmp
pop
daa
mov
dec
adc
and
es
inc
mov
mov
add
dec
pop
rcl
and
push
add
mov
and
and
outs
jne
test
mov
xchg
jbe
mov
ds
fistp
leave
xchg
mov
pop
int
rcr
dec
dec
dec
jns
lods
sub
out
adc
mov
cdq
sbb
push
fisub
lahf
jecxz
(bad)
out
or
and
fisttp
js
out
dec
js
out
inc
mov
sahf
je
int3
xchg
jo
and
inc
push
int
jmp
xchg
mov
xchg
push
adc
js
jge
or
hlt
imul
xchg
inc
push
pop
das
rol
xor
div
cmp
outs
(bad)
(bad)
fisttp
imul
fidivr
stos
es
push
bound
idiv
clc
inc
gs
retf
jno
int
and
xchg
sbb
push
popa
mov
xor
call
ja
sbb
das
sub
cli
call
hlt
add
ins
rcr
clc
out
push
sti
in
sub
xor
aad
pusha
mov
test
or
mov
enter
test
pop
pop
push
mov
sub
iret
dec
into
mov
test
xchg
das
faddp
mov
xchg
call
inc
mov
pushf
lods
and
dec
jg
ins
and
(bad)
loop
xchg
jne
cmps
mov
xchg
mov
cli
sbb
jle
add
xchg
or
pusha
imul
jmp
dec
cli
add
cmp
pop
int
mov
dec
mov
dec
cmp
lock
gs
leave
xor
sbb
push
rcr
cdq
ins
push
cwde
and
sbb
ret
sbb
adc
aaa
cmp
shl
xor
cli
sbb
stos
and
loop
dec
aam
sub
les
mov
rcr
lods
add
outs
add
pushf
sahf
pop
xlat
dec
xor
sbb
sahf
rcl
or
cmp
aaa
cwde
mov
loope
stos
in
mov
xchg
or
and
retf
mov
mov
pusha
dec
mov
sti
lea
js
lea
les
lods
mov
fldl2t
ds
sahf
sbb
add
push
mov
push
out
out
jo
test
sbb
ins
inc
mov
mov
test
mov
pop
imul
mov
aaa
sbb
and
das
inc
popa
sbb
cmp
or
pop
adc
shl
sub
or
sub
mov
push
inc
popf
pop
pop
ja
mov
loope
in
(bad)
shl
mov
aad
add
mov
mov
add
outs
add
aaa
popf
pushf
inc
inc
sub
aaa
sub
xor
xchg
cmps
add
or
outs
test
iret
arpl
jne
aam
daa
or
push
pusha
fistp
or
lock
in
fcomp
loope
jl
int3
and
and
pop
pop
xchg
test
mov
jmp
mov
je
dec
sub
jae
shl
xor
push
sbb
pop
ret
and
push
xor
jo
test
scas
test
cmp
(bad)
daa
push
sahf
movs
pop
fwait
loopne
arpl
jo
sbb
out
in
test
push
adc
push
mov
enter
xor
mov
repnz
cmp
jae
movs
pop
(bad)
cmp
dec
or
into
popf
bound
test
and
jg
sub
movs
fs
mov
pop
cmp
mov
jbe
mov
or
jo
mov
mov
push
mov
imul
xor
sub
mov
pop
and
or
js
pushf
add
mov
ds
xor
les
fcom
int
popa
aam
in
inc
xchg
mov
(bad)
imul
retf
and
mov
adc
ss
gs
pop
sub
xchg
cwde
mov
push
in
movs
xor
push
mov
sar
sbb
and
pop
push
movs
scas
test
icebp
aas
in
lock
hlt
pop
xlat
mov
jge
adc
sbb
fwait
mov
mov
and
sahf
lahf
cs
int3
shl
inc
das
dec
dec
jns
cwde
sub
push
inc
std
dec
fisub
xchg
sub
aad
stc
or
int3
(bad)
and
lds
in
pmaddwd
and
call
add
fisttp
cmp
mov
xlat
cmp
cdq
mov
adc
mov
xchg
jns
xor
cmps
xchg
or
std
out
lds
add
add
cmp
mov
retf
jp
cli
pop
(bad)
push
pop
jb
mov
xchg
outs
mov
sub
mov
xlat
jge
xchg
clc
bound
idiv
inc
jge
imul
lods
cdq
inc
nop
lods
jmp
inc
fmul
cdq
cmp
in
push
xchg
cmps
dec
pop
add
stos
add
mul
xchg
xor
push
retf
stos
xchg
test
mov
dec
stos
push
pop
or
pop
jb
(bad)
pusha
es
aas
imul
inc
push
lds
fbstp
sbb
mov
mov
clc
or
mov
aas
jl
dec
inc
push
fisub
pop
inc
jp
popa
jae
xlat
(bad)
pop
cmp
adc
movs
mov
pushf
pop
fcom
mov
jmp
and
int
cmps
mov
xor
xchg
jbe
pop
bound
or
lods
mov
aam
stos
mov
jnp
jecxz
push
and
(bad)
mov
mov
jg
push
lods
ja
lahf
mov
xchg
fisttp
sbb
add
call
fild
push
jb
into
les
mov
cmp
fsubr
std
repz
(bad)
test
xchg
nop
dec
fistp
push
jmp
sbb
and
mov
and
mov
and
cs
push
retf
cs
mov
rol
mov
in
push
xchg
inc
rcr
fld
cmps
jno
dec
test
ret
aaa
jle
push
push
mov
dec
dec
popf
xchg
fdiv
cmp
loope
push
sahf
add
push
(bad)
cs
(bad)
push
fisub
lods
cmps
stos
and
jnp
cwde
mov
aad
out
jp
and
lea
jae
mov
test
shl
fwait
pop
mov
sub
in
sbb
push
fmul
dec
pop
ficomp
mov
add
pop
add
movs
and
add
lds
mov
sbb
(bad)
rcr
and
xchg
mov
rol
mov
ret
cmp
imul
xchg
ins
push
push
adc
ins
sub
mov
or
push
cmc
or
pop
mov
mov
inc
mov
aad
sbb
iret
xor
sbb
fcomp
movs
xlat
movs
ins
xchg
and
int3
jb
xchg
add
movs
xor
dec
retf
movs
aas
xor
sub
dec
repz
dec
jae
ja
push
add
imul
mov
mov
pop
mov
inc
xor
lea
mov
cmp
push
sub
sub
mov
adc
mov
cli
call
stc
lock
loop
dec
js
sub
sub
pop
mov
push
sub
jg
and
test
xchg
jae
jno
lds
test
fisubr
hlt
xchg
(bad)
cld
in
bswap
or
sbb
sti
mov
mov
pop
test
(bad)
mov
mov
std
lahf
imul
addr16
sub
sbb
adc
pop
xor
div
sub
test
loope
jg
sbb
sub
jmp
shl
xchg
xchg
jl
aas
iret
mov
aas
scas
int3
imul
mov
sbb
lods
push
xchg
lock
or
xchg
jbe
dec
repz
inc
mov
aaa
fsubp
adc
sub
inc
and
xor
add
add
dec
dec
and
sbb
icebp
jp
jns
scas
jecxz
and
and
inc
adc
jb
pop
sti
mov
out
add
dec
xor
adc
push
adc
or
xor
xor
cmp
cmps
xor
nop
mov
cmps
shl
imul
cmps
mov
inc
pop
cmp
adc
test
cmp
mov
and
jmp
sub
sub
sbb
sbb
push
ficom
call
xchg
(bad)
dec
jmp
mov
shr
pop
adc
mov
push
xlat
std
(bad)
jb
cmp
push
jae
inc
cmp
stos
repz
mov
and
movs
cmp
(bad)
in
pop
xor
jae
jle
ds
loope
and
loop
xchg
cmc
rcr
push
leave
dec
push
movs
cmps
sahf
je
aam
gs
and
and
daa
fnsave
idiv
pop
mov
movs
ror
push
push
push
jns
lahf
xor
stos
jnp
ror
into
inc
push
inc
dec
push
xlat
xchg
jns
cmps
shr
repz
ret
aaa
shl
and
pop
clc
dec
jg
retf
pop
jae
add
das
inc
adc
(bad)
bound
ss
addr16
xor
test
cdq
xor
pop
mov
jns
pop
add
ret
cmp
xchg
push
mov
and
ds
inc
adc
xor
(bad)
push
cmp
inc
cmps
and
(bad)
xchg
(bad)
sub
scas
jae
push
and
cmc
and
gs
rep
mov
mov
rcr
scas
cli
sar
in
int
cmp
(bad)
dec
jg
ja
xor
test
das
push
mov
cmps
mov
mov
sbb
ret
test
inc
cld
sbb
jle
and
xchg
jmp
les
aad
push
push
xchg
ins
push
jmp
cmp
dec
repz
xchg
push
aam
lods
xchg
xchg
pop
icebp
cmp
mov
movs
xor
call
iret
cdq
pop
xchg
adc
dec
or
cmp
inc
cmps
icebp
popf
(bad)
ds
xor
movs
dec
cmps
add
mov
test
push
fisub
inc
fdivr
jg
ins
es
jg
cmp
scas
in
movs
jg
data16
loope
mov
push
aam
dec
sbb
(bad)
fs
in
adc
sub
cmp
bound
sub
xor
dec
add
inc
mov
jne
ret
ficom
push
or
stos
or
adc
xchg
lahf
add
or
cmps
sub
test
(bad)
js
mov
call
scas
(bad)
fcomp
icebp
mov
xor
retf
xor
mov
jg
inc
mov
bound
mov
sub
mov
ins
cmp
(bad)
test
fdivr
in
mov
pusha
and
outs
(bad)
push
daa
test
(bad)
xor
jp
ss
adc
sahf
hlt
inc
lods
jo
pushw
scas
sub
or
(bad)
imul
(bad)
sbb
dec
enter
push
es
pop
add
push
leave
and
pop
fldcw
jnp
into
shr
mov
in
in
or
push
and
call
sti
call
lods
and
or
xor
mov
jo
in
retf
nop
imul
repnz
clc
add
cmps
and
lock
cmp
and
in
cmp
jb
mov
scas
in
fild
mov
cli
mov
mov
repnz
loope
adc
fmul
std
or
(bad)
mov
or
jns
pop
iret
push
test
stos
pop
fwait
out
push
inc
fnstenv
aam
pop
xchg
into
push
add
sub
pop
mov
es
mov
stos
retf
mov
dec
xor
movs
cmp
sbb
out
mov
neg
mov
mov
mov
lahf
in
dec
jmp
or
mov
cmp
dec
xor
in
cmp
and
mov
fcmovu
(bad)
pop
pop
ror
ffree
out
mov
fistp
or
popa
inc
cmps
scas
xor
fld
cli
(bad)
mov
dec
mov
sub
in
std
pop
jge
and
mov
mov
pop
and
sar
fs
inc
in
les
call
inc
mov
sahf
inc
mov
rcl
sub
inc
loopne
xchg
xor
inc
test
int
mul
aas
mov
les
inc
pop
mov
bnd
xlat
test
sub
jo
popf
mov
mov
and
js
out
mov
xor
adc
fucomi
mov
jne
gs
dec
inc
lods
gs
cmp
aad
push
cmps
sar
jmp
cmp
fwait
push
or
add
xlat
and
add
mov
movs
ret
mov
into
frstor
aas
jmp
ds
inc
adc
dec
fst
sub
pop
cmp
out
fisttp
push
add
pop
xchg
int
daa
inc
fisubr
and
ins
das
sahf
out
cmp
aad
into
and
lahf
mov
cmps
lock
sbb
shl
add
dec
xchg
mov
jg
or
mov
push
test
shl
es
xor
and
lahf
xor
cmp
shl
outs
mov
mov
out
daa
mov
mov
and
mov
cmp
(bad)
pop
sub
mov
sti
pop
gs
sbb
and
test
xchg
fwait
sub
test
sbb
adc
or
cmps
ja
out
sar
gs
ja
cmp
cmp
lea
rol
stos
test
mov
adc
aad
jo
xchg
jne
pop
enter
mov
mov
xor
fadd
push
mov
test
push
int3
xchg
cmps
mov
xchg
dec
jbe
mov
xor
pop
xor
cmp
cmp
mov
adc
add
mov
mov
and
cs
add
loop
(bad)
lea
pop
fstp
adc
scas
push
dec
jg
loopne
mov
scas
out
and
pop
jnp
stos
and
test
fisubr
aad
jmp
int
dec
dec
pop
cmps
iret
nop
popa
into
push
sbb
mov
add
cmp
jmp
mov
add
adc
push
stc
pop
mov
into
xor
mov
adc
(bad)
or
jns
out
stc
ret
jae
aaa
xchg
mov
data16
add
rol
scas
sbb
sub
psubb
popa
inc
jb
mov
or
or
inc
adc
(bad)
std
cdq
push
add
ror
push
cmps
loopne
cmp
es
loope
adc
mov
movs
pop
fwait
call
xchg
sbb
sbb
xlat
mov
dec
ror
mov
push
adc
cld
adc
add
inc
cwde
sbb
sub
jecxz
sbb
out
sub
mov
inc
mov
xor
lock
dec
jae
retf
ds
cld
inc
movs
or
pusha
adc
push
out
jb
add
jo
(bad)
in
rcl
movs
jmp
clc
mov
cmp
jg
fldl2e
stos
pushf
jne
dec
movs
add
or
icebp
jmp
adc
pop
(bad)
xrelease
xchg
mov
xor
mov
jns
pop
pop
ds
and
fdivrp
call
adc
cdq
pop
jnp
and
ins
icebp
pinsrw
adc
lock
cmc
call
jb
in
fstp
and
inc
addr16
je
mov
pop
lock
cmp
je
lock
xlat
out
mov
push
dec
pop
data16
ss
pushf
out
xchg
jb
test
adc
iret
cmc
push
pop
dec
stc
cmp
ins
jne
out
or
sbb
jae
add
test
neg
in
sbb
fldcw
ja
in
mov
lds
sahf
js
push
dec
(bad)
mov
test
xchg
fistp
scas
(bad)
jmp
pop
arpl
fabs
ds
arpl
cmps
into
and
adc
sbb
adc
(bad)
sar
or
or
cs
inc
dec
cmc
or
mov
inc
sahf
imul
(bad)
inc
fisubr
nop
data16
adc
mov
fwait
add
bound
std
nop
test
jo
pop
daa
jmp
(bad)
rol
out
mov
xchg
fwait
xchg
cmps
test
xor
repnz
jge
cmc
pop
js
jno
cdq
jmp
xchg
and
bt
dec
push
test
popf
push
or
popf
adc
add
fcmovnu
adc
in
aaa
(bad)
hlt
xor
add
aad
daa
mov
xor
sub
xchg
in
imul
add
stos
shl
bound
or
mov
ins
or
stos
xchg
ficom
cmp
xchg
push
lds
xchg
lds
mov
pusha
rcl
ror
xchg
xchg
add
popa
movs
aaa
rcl
repnz
mov
daa
pusha
push
push
loop
adc
jae
nop
scas
les
dec
and
test
add
mov
stos
sbb
pusha
test
jp
iret
push
lahf
push
cwde
movs
adc
fwait
ret
pop
out
adc
xchg
mov
sbb
imul
in
xchg
int3
gs
mov
(bad)
xchg
lahf
test
jno
sbb
pop
push
nop
sbb
retf
pop
dec
fiadd
add
push
push
daa
cmp
dec
push
cmp
or
cli
dec
lds
inc
push
out
(bad)
iret
jl
xor
xchg
sbb
scas
shl
lea
scas
fld
xor
call
ficom
out
dec
dec
xor
cmp
sbb
js
pop
test
jnp
jo
add
bound
rol
adc
and
std
call
mov
sbb
pop
(bad)
fwait
test
xchg
xchg
cmp
xor
loope
sub
mov
lahf
sahf
sti
xchg
cmp
or
into
xchg
sti
mov
adc
mov
xor
out
int3
popa
cmp
outs
adc
xchg
aad
pop
or
pop
enter
jmp
popa
int
rcl
pop
or
fist
mov
pop
enter
mov
jle
(bad)
cmp
mov
mov
addr16
out
pushf
(bad)
jmp
popf
inc
jmp
inc
add
pop
popa
add
jns
aas
add
lods
sub
xchg
enter
push
cmp
add
or
dec
cmp
xchg
cmp
dec
hlt
repz
mov
lea
test
pop
dec
inc
ret
hlt
hlt
shl
scas
(bad)
les
addr16
and
mov
push
mov
fistp
sti
mov
cmps
sahf
cmp
icebp
scas
in
sbb
in
test
popf
or
add
dec
add
mov
xchg
cmp
cdq
call
adc
lock
cmp
ins
cli
adc
bound
xor
sbb
(bad)
push
(bad)
xor
mov
retf
cmps
stos
cld
xor
dec
fst
fisttp
pusha
add
jb
mov
lds
jae
mov
jno
push
xchg
or
out
xor
ror
loope
pusha
xchg
aaa
sbb
fcomp
and
mov
stc
inc
test
and
jmp
(bad)
icebp
xchg
imul
adc
ins
cld
inc
adc
pop
scas
dec
jge
cs
jmp
inc
dec
sub
pop
add
je
cmp
pop
mov
jg
ret
cmp
(bad)
cmps
mov
aad
out
hlt
sbb
push
dec
cli
sbb
dec
aas
aam
jmp
xor
push
fisubr
xchg
or
(bad)
fimul
lock
add
call
dec
sub
(bad)
cmps
movs
sbb
jns
setno
add
ror
out
ror
push
inc
pop
call
dec
scas
mov
enter
mov
add
aaa
and
cwde
fld
arpl
iret
iret
lock
pop
mov
adc
pop
icebp
fisttp
xchg
adc
mov
push
iret
xchg
or
test
xchg
cmp
dec
or
cs
or
jo
je
je
and
mov
and
ffreep
out
jp
jge
xor
pushf
imul
cmp
inc
sub
pop
add
dec
rol
push
fist
sub
or
or
bound
gs
jg
mov
movs
jge
xchg
mov
icebp
mov
cmp
mov
lock
cmp
push
or
xchg
ins
cmc
xor
shl
int3
retf
into
or
ss
jb
mov
inc
xor
(bad)
aad
jle
sbb
cli
push
mov
cdq
mov
sti
enter
and
adc
xchg
ins
add
fisub
inc
cmc
pusha
shl
xor
fmul
adc
loopne
fadd
adc
xchg
outs
lods
cmp
call
inc
xor
jge
lock
dec
fsub
sub
movs
cmp
(bad)
dec
fisub
scas
in
pop
xor
sbb
adc
enter
jge
push
mov
loope
lea
pushf
xchg
jno
adc
cmps
or
pop
nop
(bad)
adc
popa
outs
aas
outs
into
aaa
and
push
jae
mov
or
pmaxsw
jae
hlt
fimul
cmps
loop
movs
jae
and
inc
mov
sti
lds
int3
mov
jns
rcr
push
sub
jp
(bad)
fdivr
cs
fist
sti
xchg
outs
bound
push
xchg
pop
sahf
sub
addr16
int
lahf
jnp
or
icebp
sti
pop
push
add
or
rcr
xor
(bad)
ffree
lods
ins
bound
loop
xchg
sub
inc
ret
mov
fdiv
ss
pop
mov
cdq
daa
pusha
mov
mov
ret
mov
xor
sar
cmp
outs
dec
lds
xor
jge
les
(bad)
xlat
inc
adc
je
(bad)
mov
sbb
jne
jb
cmp
and
dec
(bad)
adc
aam
stos
xor
mov
std
stc
pushf
mov
scas
xor
adc
xchg
mov
outs
mov
cdq
in
fist
in
xor
dec
movs
or
inc
cld
rcr
test
adc
mov
xchg
es
scas
sbb
mov
mov
inc
neg
mov
addps
or
inc
in
in
add
sbb
mov
pop
lds
mov
pusha
(bad)
xor
imul
push
mov
das
mov
in
loopne
sub
jne
add
add
mov
adc
xor
mov
pop
inc
das
leave
popf
ret
cwde
lea
mov
mov
loopne
or
int
pop
pop
adc
pop
xor
(bad)
out
repnz
sbb
sbb
xlat
sbb
ins
ror
cmp
das
add
outs
mov
xchg
jns
add
jl
inc
push
cmp
(bad)
leave
jne
mov
gs
or
and
inc
ret
mov
imul
xchg
in
retf
and
xor
inc
or
movs
loop
push
add
cmps
neg
scas
pop
jne
jo
call
arpl
jb
scas
popa
ret
jo
xchg
inc
fisub
mov
fwait
clc
mov
and
ret
inc
addr16
mov
push
mov
mov
scas
sbb
sub
(bad)
aaa
and
dec
outs
push
inc
pop
arpl
neg
in
test
mov
push
stos
clc
lds
jae
cmps
out
sti
push
lods
test
inc
repnz
or
mul
loope
mov
outs
mov
call
call
outs
mov
cmp
adc
cwde
pop
push
cmp
imul
mov
test
sar
sbb
mov
or
mov
outs
jp
mov
sbb
mov
rcr
jb
or
lock
cli
jmp
push
mov
push
push
xchg
shr
fnstenv
imul
add
les
leave
jb
and
pop
xchg
inc
mov
mov
xor
xchg
mov
sbb
out
sub
sti
pop
cmp
cmp
stos
or
out
xlat
inc
movs
pop
sbb
adc
push
pop
cvttps2pi
mov
add
mov
test
pushf
addr16
xor
push
mov
out
nop
fild
mov
in
sub
iret
jb
pop
sub
push
outs
clc
mov
jae
stc
out
push
dec
or
inc
shl
mov
aad
sub
cmp
js
xor
cmp
repnz
test
lea
pop
fcomp
xor
shl
loope
jp
mov
aaa
add
pop
loop
push
inc
out
push
pushf
cdq
fs
dec
sub
inc
leave
ds
mov
test
cmp
jg
fisttp
push
sbb
sub
mov
lea
or
dec
xor
jb
stc
adc
into
hlt
cdq
mov
cmc
out
test
xchg
jb
in
xchg
daa
or
(bad)
sub
shr
and
xchg
call
mov
sub
cmp
leave
int3
or
pop
cmps
or
jne
xchg
cmp
and
stos
cmps
mov
mov
mov
(bad)
sub
in
sub
or
into
data16
add
fwait
shl
sub
sbb
inc
test
(bad)
cli
jns
bound
in
(bad)
pop
je
jo
mov
cwde
sub
xchg
sub
in
ror
dec
adc
cld
adc
repnz
push
and
push
xchg
test
dec
xchg
in
or
mov
ret
rcl
cmp
imul
test
mov
push
pop
jge
cmc
ins
jge
(bad)
movs
mov
into
cld
xor
mov
sbb
enter
cdq
cld
inc
test
jge
fisttp
daa
cmp
pushw
sbb
or
xchg
int
xchg
shl
pop
xor
inc
test
call
in
scas
ins
js
pop
(bad)
popa
or
ret
jmp
jl
xchg
mov
movs
cli
inc
out
push
jle
xor
ror
cmp
or
adc
sub
jecxz
jle
lea
lds
loop
ret
or
cmp
cmp
fsub
sbb
jp
push
add
pop
pop
or
ficomp
into
adc
stos
mov
in
in
sub
mov
iret
pop
pop
loop
mov
jns
pop
jmp
adc
xchg
cld
std
add
rcr
popa
out
into
and
add
sub
xchg
and
in
and
sar
dec
mov
adc
or
hlt
ror
cmp
dec
or
pop
dec
test
mov
(bad)
icebp
sbb
mov
popf
mov
pop
getsec
sbb
pop
pop
movs
push
jl
cld
test
mov
sub
mov
mov
rcr
loope
or
xor
add
pusha
mov
lea
sbb
jp
mov
sbb
mov
xchg
or
out
das
not
ret
jg
mov
jbe
fidiv
or
aaa
out
cld
into
inc
cmc
(bad)
retf
push
or
or
add
inc
xchg
loop
mov
sbb
test
data16
std
(bad)
cmp
sbb
cs
ja
pop
dec
adc
jecxz
mov
pop
mov
mov
cld
rcr
lds
xchg
sub
inc
in
sub
bound
add
push
scas
ret
cli
loope
jecxz
or
lods
imul
bound
pusha
inc
cmps
aam
and
and
sbb
and
adc
xor
mov
fwait
xchg
mov
or
stos
push
push
mov
mov
or
fcmovnbe
cmps
rol
mov
dec
mov
ds
cmp
mov
(bad)
pusha
mov
xor
sub
dec
mov
xor
in
mov
cmp
and
jb
mov
cdq
test
addr16
or
mov
jb
(bad)
loopne
or
stos
test
push
mov
outs
sti
cmp
push
(bad)
xchg
push
ins
push
ror
out
sbb
aaa
push
sub
sub
cdq
mov
sbb
add
or
adc
imul
jb
call
mov
and
hlt
jmp
add
loopne
mov
scas
aaa
xchg
jne
xchg
adc
sub
push
sti
sub
mov
call
outs
sti
xchg
adc
les
std
or
fsubp
cmp
push
js
push
sbb
mov
mov
dec
xlat
mov
int
lds
and
xchg
imul
movs
pop
inc
es
mov
sub
pop
pop
pop
gs
aam
adc
push
xchg
mov
pusha
test
pop
clc
leave
mov
sub
pusha
mov
or
dec
imul
or
or
call
fstp
pusha
arpl
cmc
or
add
sub
pop
mov
repz
fistp
adc
ja
in
aaa
bound
pop
mov
popf
inc
daa
inc
mov
cdq
in
or
and
sahf
shr
pop
jo
test
ficomp
mov
or
or
jge
call
mul
or
gs
test
adc
inc
dec
fcmovne
sbb
mov
mov
hlt
and
(bad)
mov
hlt
xchg
sub
and
int
imul
movs
retf
test
cmps
cli
iret
mov
adc
pop
sahf
pop
sub
(bad)
sti
pushf
fwait
inc
enter
std
jmp
lods
loopne
je
out
jecxz
mov
dec
enter
and
xchg
in
jmp
scas
imul
clc
jle
pusha
dec
pusha
push
data16
cmp
add
lds
cli
test
pop
and
je
clc
add
add
jecxz
adc
pop
arpl
ja
jg
stos
xchg
cmps
sub
lods
mov
scas
xchg
cdq
xor
(bad)
and
bound
fistp
jg
(bad)
mov
dec
test
push
or
xlat
mov
inc
stc
mov
sbb
scas
pop
or
std
aas
(bad)
mov
and
sub
or
sbb
divps
and
xchg
dec
rol
popa
adc
dec
mov
ret
mov
cli
xor
and
cmps
xor
push
mov
jns
mov
movs
data16
and
adc
dec
sub
imul
test
leave
(bad)
std
mov
cwde
pop
sbb
lds
mov
sub
push
enter
js
jnp
in
addr16
mov
dec
inc
addr16
retf
stc
pusha
push
sbb
mov
fwait
imul
mov
pop
inc
xor
imul
and
clc
push
es
lea
xor
inc
cmp
fsub
in
ret
xor
or
(bad)
dec
or
push
add
inc
xchg
das
mov
push
nop
add
dec
inc
imul
bound
or
test
adc
sahf
inc
(bad)
fwait
(bad)
pop
push
and
cmp
or
xchg
cmp
imul
sbb
cld
lahf
inc
(bad)
jns
sub
add
jb
dec
cmps
gs
out
adc
xor
xor
lods
or
ficomp
loopne
fs
pop
mov
mov
data16
dec
xor
rcr
mov
jae
test
cmp
sahf
lods
(bad)
inc
clc
ins
jmp
or
xchg
fdivr
xchg
xor
dec
dec
pop
push
cmp
daa
add
xchg
test
movs
icebp
cmp
les
dec
push
and
mov
bound
lea
adc
cmps
call
xchg
adc
cli
inc
dec
mov
sbb
push
mov
sahf
lods
jmp
cmp
ffreep
cdq
mov
aaa
(bad)
lock
out
ja
call
pop
arpl
xchg
xlat
mov
mov
out
sbb
mov
sar
lock
xchg
jmp
and
mov
xchg
jmp
sub
cdq
dec
stc
xchg
(bad)
jl
xor
loopne
xchg
into
dec
xchg
dec
mov
mov
dec
lods
mov
mov
push
icebp
sub
sub
inc
int
sbb
xor
add
(bad)
ss
and
fisttp
adc
xor
loopne
mov
jae
mov
xchg
push
or
int
dec
imul
mov
sbb
mov
lock
dec
xchg
cmp
jns
loope
fdiv
xlat
cmp
(bad)
jne
cdq
sbb
inc
add
push
or
loopne
shl
pop
ins
or
adc
or
(bad)
daa
mov
and
pop
xchg
jmp
pop
ins
xchg
jmp
sbb
cmc
out
ins
push
inc
sbb
cmc
pop
xor
lahf
cwde
mov
ret
aad
repz
pop
sbb
lods
fcmovb
je
inc
push
add
or
xchg
ficom
mov
and
(bad)
stc
imul
int3
sahf
(bad)
cld
adc
daa
ficom
mov
sbb
sub
sbb
in
mov
clc
and
add
dec
mov
psllw
les
sbb
dec
or
or
scas
std
test
lods
ds
loopne
jge
jno
pop
add
(bad)
lods
inc
pop
dec
cs
push
arpl
sbb
rcl
nop
inc
lahf
pushf
pop
jmp
das
xor
add
xor
cld
mov
pop
fnstsw
mov
lods
mov
and
mov
das
dec
mov
sub
(bad)
mov
int
mov
mov
out
out
pop
repnz
mov
mov
leave
adc
push
call
es
(bad)
sar
shr
mov
mov
lds
add
paddsw
xchg
fs
repnz
sub
aam
arpl
enter
cmc
jp
in
fisttp
jns
in
movs
dec
xchg
cmp
ja
dec
imul
not
sbb
mov
cld
and
dec
pop
inc
adc
fcomp
(bad)
scas
(bad)
mov
push
aaa
and
or
je
mov
out
mov
dec
inc
push
or
in
es
scas
ins
pop
mov
outs
jns
mov
cmp
mov
scas
pop
(bad)
enter
cmp
and
mov
clc
sub
xor
xchg
jg
mov
fmul
push
fdivr
inc
or
ror
sbb
jns
push
in
mov
cdq
dec
xchg
shl
push
test
inc
cwde
xlat
jg
js
iret
inc
mov
push
mov
sbb
cmp
push
fnstcw
cmp
js
rcl
lock
mov
fwait
and
push
aas
popa
and
add
mov
mov
mov
adc
dec
dec
aam
rcl
shl
inc
push
and
iret
arpl
repnz
mov
stc
cmps
jb
in
adc
mov
jmp
sub
(bad)
sbb
repz
lods
mov
fstp
xor
shl
mov
sub
and
push
pop
xlat
jb
xor
in
sub
sbb
enter
mov
or
sub
or
fistp
ja
lock
xor
add
inc
mov
push
lods
jmp
xor
inc
inc
mov
and
imul
mov
fcomp
push
xchg
add
push
push
xor
scas
call
fwait
out
push
pop
ss
lods
imul
and
jnp
jmp
jl
(bad)
sahf
pop
shr
add
mov
adc
jb
cmp
test
sub
fnstcw
std
add
jb
jnp
push
sbb
cdq
rcr
xor
jnp
add
adc
pop
push
das
pop
movhps
(bad)
lahf
loopne
repnz
or
dec
mov
inc
jno
push
cli
jle
nop
std
sahf
push
les
cmp
js
pop
push
pop
clc
and
cmp
pop
inc
mov
fiadd
push
jne
test
and
xor
and
outs
(bad)
cmp
sub
push
iret
mov
loop
dec
shl
popa
xor
dec
leave
pop
pusha
jmp
sbb
adc
jp
cmp
mov
jo
shr
jo
stos
call
sub
add
xchg
cdq
ins
call
push
fld
sub
inc
ret
adc
es
inc
dec
sub
mov
and
mov
lods
popf
mov
inc
stos
adc
inc
stc
jl
mov
(bad)
aam
fdivr
adc
ret
call
pop
adc
mov
test
mov
push
cmps
inc
push
js
out
cmps
leave
mov
cmp
sub
mov
fsubp
(bad)
sbb
loope
jno
fst
sub
xchg
cmp
cwde
loop
jno
icebp
inc
sub
into
push
movs
adc
fs
retf
(bad)
lods
adc
sbb
jo
sub
not
dec
jmp
pop
or
or
test
(bad)
mov
imul
push
push
test
aam
and
add
ret
(bad)
push
jns
jbe
xchg
and
ds
sti
cld
ins
sbb
clc
or
sbb
inc
cmp
test
and
nop
sub
iret
inc
sbb
mov
xor
mov
xchg
aaa
out
out
aas
shl
xchg
sbb
popf
fwait
mov
arpl
(bad)
or
movs
cmp
dec
sbb
pop
jns
and
sub
push
arpl
sti
test
(bad)
push
cmp
and
push
in
pop
sbb
test
cmps
cdq
cmps
fld
popa
push
sub
clc
das
retf
push
xor
mov
(bad)
nop
or
adc
mov
in
dec
in
dec
add
mov
sub
ins
outs
and
mov
jbe
mov
test
mov
cmp
bound
aam
add
pushf
push
xor
lahf
(bad)
(bad)
test
push
or
sti
popf
inc
cwde
push
les
mov
sbb
pushf
int3
in
push
imul
popf
repnz
pop
jne
cld
pushf
das
jnp
xor
sbb
pushf
outs
packssdw
mov
(bad)
enter
gs
test
dec
(bad)
pop
sub
sub
sub
pop
test
sub
push
iret
and
(bad)
add
pushf
mov
imul
mov
enter
mov
(bad)
push
sar
movs
jge
mov
gs
pop
xor
aaa
mov
pop
bound
in
sbb
xchg
or
push
scas
test
and
daa
jae
test
imul
cmp
shl
pop
xchg
or
pop
pop
adc
mov
sbb
rcl
out
and
enter
adc
add
(bad)
shr
adc
or
pop
aad
push
or
mov
rol
xor
lahf
sbb
test
push
sbb
xchg
adc
stc
dec
shr
sub
data16
add
ins
shl
pop
sub
fstp
mov
xchg
lock
mov
fneni(8087
clc
pop
or
pop
mov
xor
lods
and
cmp
or
js
mov
and
push
mov
jnp
stc
lods
cmp
ss
dec
mov
adc
or
xor
mov
cli
adc
add
gs
shl
xchg
sub
lods
int
and
sbb
test
dec
(bad)
pop
rcl
cmc
aaa
xor
pop
sbb
aad
retf
jbe
cmc
arpl
repnz
fdivr
add
lods
inc
aam
cmps
(bad)
mov
lea
dec
mov
mov
ds
sub
mov
cwde
inc
hlt
push
sbb
loop
add
mov
pop
sbb
mov
mov
and
jge
xchg
cmc
movs
leave
movs
mov
popf
xlat
and
fsub
jmp
mov
or
rol
popf
and
fdivr
adc
and
inc
jns
xchg
call
pop
pop
ins
adc
mov
push
pop
fist
in
sub
mov
loop
cld
iret
cmp
lods
scas
dec
repnz
aam
and
mov
adc
mov
movs
dec
jns
push
jmp
fs
xchg
cdq
fist
arpl
call
mov
push
or
mov
jne
cmp
jp
ret
jmp
lods
not
ss
std
leave
pop
and
add
ja
cmp
push
sub
out
xchg
jb
lods
loop
fldenv
sbb
push
(bad)
push
sbb
sahf
in
jp
iret
ins
push
add
sub
adc
cmp
pop
sbb
sbb
and
mov
mov
dec
push
retf
iret
dec
(bad)
mov
mov
add
and
xchg
cdq
fwait
rep
push
retf
jnp
dec
dec
xchg
bnd
mov
inc
dec
or
ds
test
call
mov
xchg
inc
inc
test
push
xchg
push
sub
cmp
inc
std
mov
mul
jae
push
mov
dec
push
jo
and
outs
add
(bad)
push
xchg
mul
jns
xchg
and
jb
lock
inc
scas
push
and
or
cmp
jno
fadd
in
cmc
add
adc
jae
mov
adc
ret
call
test
jno
lods
es
mov
mov
bound
mov
lea
pop
pop
mov
add
sbb
test
(bad)
mov
stc
sub
in
xchg
xchg
scas
push
call
jg
mov
mov
cli
jbe
nop
(bad)
aad
inc
stos
mov
add
dec
dec
lahf
push
stos
or
not
retf
dec
div
inc
sub
xor
sub
mov
inc
jg
xchg
je
(bad)
leave
push
fimul
stos
fwait
loop
xlat
jl
and
hlt
(bad)
sbb
jno
cmp
out
div
xor
nop
jne
fild
stc
ret
stc
sbb
adc
lock
ja
popa
loop
jb
sti
push
mov
mov
aam
into
xor
popa
jmp
cmp
pop
jo
test
aad
push
pop
dec
cmp
sbb
pop
enter
mov
jns
sub
into
ret
push
adc
push
sub
jg
xchg
cmps
xchg
mov
adc
shl
ins
lock
sbb
mov
xchg
or
jp
inc
and
popa
retf
cs
jecxz
mov
pop
sbb
call
es
outs
xchg
scas
or
xchg
cmp
fdiv
adc
mov
int
inc
jbe
das
loope
ins
cmp
inc
stc
jge
sbb
cmp
mov
xchg
gs
jecxz
gs
ret
movs
dec
fild
or
jno
icebp
(bad)
jmp
repnz
clc
jp
movs
cmp
jge
pop
pusha
or
imul
mov
xor
pop
xchg
adc
mov
ins
sub
cmps
mov
outs
sub
jmp
adc
sub
pop
aad
pusha
inc
or
out
inc
mov
cs
ins
adc
inc
dec
and
mul
iret
icebp
test
aad
mov
scas
xor
ret
(bad)
in
fisttp
and
xchg
mov
xlat
and
pop
mov
pop
adc
mov
adc
fistp
push
pusha
inc
imul
sub
daa
push
test
(bad)
enter
mov
lock
es
lods
cwde
pop
push
stos
sbb
(bad)
mov
xlat
mov
sub
or
fsubr
adc
sahf
xchg
stc
push
inc
mov
push
popf
fisubr
jnp
push
movs
xor
push
mov
push
int3
lods
(bad)
jo
cmp
jmp
jb
push
or
movs
retf
pop
fisubr
mov
add
xor
test
xchg
out
in
cmc
aas
and
push
dec
pushf
mov
out
adc
pop
xchg
imul
xchg
js
jne
dec
popa
sub
jns
lock
addr16
mov
dec
popf
sub
nop
push
inc
js
cs
retf
call
jmp
jmp
out
mov
out
div
xor
mov
mov
jmp
or
icebp
add
pop
ss
xchg
cmp
xchg
js
into
repnz
push
pop
xor
mov
add
ror
call
addr16
ins
fnstcw
cs
jg
adc
std
inc
in
loop
xor
in
hlt
pop
into
lahf
cmps
ret
pop
sub
in
bound
mov
pushf
push
fsubr
test
aaa
sahf
and
push
mov
call
xor
rcl
sbb
jg
mov
sub
shl
int3
stos
pop
das
and
pusha
inc
jle
xor
stos
mov
sub
push
push
jbe
mov
das
pop
fild
sbb
pop
mov
sub
dec
pop
(bad)
mov
cs
xor
rol
mov
sub
out
or
inc
fcomp
inc
popa
adc
leave
xchg
loope
test
cli
sti
call
push
inc
jnp
xor
int
test
fmul
dec
shl
sti
in
xlat
aad
mov
jo
or
push
sbb
stos
pop
callw
cmp
repnz
lea
mov
into
idiv
pop
loopne
arpl
sub
out
loop
hlt
sbb
ds
push
sbb
rol
outs
push
xchg
aaa
std
xchg
movs
inc
sbb
(bad)
xchg
pop
inc
cmp
add
mov
std
sub
mov
push
in
das
rol
rcl
push
add
push
xchg
daa
cli
pop
jb
in
jo
add
mov
rcr
adc
xchg
sub
cmp
shl
push
adc
in
dec
push
xor
js
shl
jl
add
xlat
test
mov
and
sub
push
jae
into
popf
jae
movs
push
mov
aad
mov
sub
push
cdq
adc
dec
add
hlt
cmp
cmp
xchg
cwde
scas
fild
test
test
ja
inc
(bad)
ja
xor
jns
mov
sbb
or
daa
adc
xchg
xor
pop
in
push
int
into
inc
sub
ret
mul
icebp
mov
pop
fadd
fistp
mov
sub
scas
pop
es
test
rcr
leave
mov
sbb
add
cli
retf
mov
jns
push
sbb
xor
test
sti
and
inc
push
lds
movs
pop
iret
xor
push
jmp
mov
jns
(bad)
repz
(bad)
cmps
mov
dec
cmc
inc
scas
xor
sub
inc
pusha
rcr
push
data16
imul
push
push
add
cmp
dec
pop
movs
mov
cmp
xchg
movs
(bad)
inc
xor
ret
pop
dec
push
fwait
jo
mov
outs
mov
cmp
pop
jp
pop
aaa
mov
movs
loop
dec
retf
stc
sbb
or
popf
jno
call
cwde
scas
loop
shl
push
icebp
fadd
cmp
dec
pop
add
pop
mov
cdq
fcom
lock
loopne
push
call
rol
xchg
dec
adc
sahf
repnz
mov
dec
arpl
loope
loop
fld
stos
arpl
fist
frstor
push
cmp
adc
xchg
shl
ja
retf
leave
std
enter
xchg
adc
push
sahf
cmps
or
psrlw
xchg
out
mov
mov
mov
test
mov
cmps
jbe
loopne
lea
sbb
or
sti
jns
inc
xor
mov
mov
loopne
jbe
movs
call
out
lea
inc
data16
aas
xor
xchg
pushf
test
fsub
es
push
pushf
stos
jo
hlt
rcr
movs
mov
or
inc
inc
or
jg
mov
je
sbb
mov
mov
inc
in
(bad)
fs
cmp
clc
in
lahf
jl
pop
sub
cmps
mov
add
xchg
inc
xor
inc
cmp
test
sbb
push
mov
cmp
stos
ret
cld
out
fwait
jbe
stos
and
mov
sub
xor
sbb
pop
not
ins
test
sbb
jmp
aam
shl
add
adc
sti
stc
push
cld
imul
sbb
std
push
jle
(bad)
fwait
add
mov
inc
xor
fild
popa
lods
xor
pop
adc
xchg
ret
mov
push
dec
retf
dec
sub
cwde
inc
pop
icebp
add
leave
push
sti
sub
repnz
rcr
sbb
das
xchg
mul
add
jo
mov
ror
(bad)
jle
mov
fisub
cdq
ins
fldcw
sub
in
jmp
and
jl
je
or
fimul
sub
sub
adc
mov
cmps
sub
xchg
pop
add
cmp
loope
mov
xchg
cld
xchg
mov
int
mov
fiadd
cmps
shl
psllq
bsr
mov
adc
out
bound
pop
div
movs
cld
cmp
mov
sbb
pop
ret
inc
push
in
leave
in
enter
pushaw
push
jo
pusha
pop
mov
aad
sbb
fnstcw
(bad)
mov
inc
adc
push
adc
push
rol
das
inc
inc
jo
ja
outs
imul
dec
mov
mov
and
fstp
xchg
mov
xchg
dec
jmp
dec
out
pop
retf
pop
xchg
or
into
mov
sti
xchg
pop
cwde
inc
icebp
test
xor
aam
test
in
jmp
aas
and
inc
and
or
or
jbe
dec
pop
ret
aas
sbb
and
sub
sub
cmp
out
fnstenv
stos
mov
jb
fs
lahf
jg
in
pop
(bad)
out
mov
push
mov
into
cmp
cmp
xchg
mov
xor
aaa
aam
out
(bad)
imul
add
mov
mov
nop
out
xor
mov
xchg
gs
fisttp
shl
test
(bad)
scas
mov
push
mov
xor
mov
xchg
enter
(bad)
sar
(bad)
cli
xchg
xor
xlat
shr
push
in
and
mov
clc
adc
inc
outs
and
sub
les
lds
call
ficom
and
mov
imul
mov
(bad)
inc
icebp
dec
fst
call
and
(bad)
repnz
nop
inc
repz
ficomp
nop
test
(bad)
inc
fwait
pushf
mov
inc
call
or
sub
iret
cs
mov
retf
repz
push
js
std
sti
imul
data16
inc
xchg
sub
xchg
std
jmp
fwait
sub
jecxz
xor
sub
mov
pop
ret
cmp
fs
pop
fidiv
jo
mov
add
pop
lods
push
pop
and
jge
jb
popa
enter
jo
jmp
loope
call
or
xchg
cs
jg
std
jbe
sub
push
pop
inc
(bad)
(bad)
scas
mov
dec
xchg
fldenv
addr16
ds
xchg
mov
int3
xchg
mov
mov
lods
mul
mov
inc
push
cdq
xchg
sub
nop
or
lock
push
add
add
sar
pusha
std
les
mov
bts
sbb
cdq
frstor
cmps
pop
jo
mov
pop
xor
mov
shl
mov
cwde
int3
pusha
ret
mov
add
lock
fld
xchg
lods
adc
cli
adc
mov
test
inc
mov
cmp
ins
imul
shr
pop
cmp
mov
aaa
xchg
pop
xchg
xlat
mov
mov
nop
and
push
inc
rcl
fdiv
xchg
push
cmc
out
sub
jno
aaa
cmc
pop
xlat
xchg
mov
push
shl
test
(bad)
(bad)
mov
retf
in
stos
dec
retf
pusha
ja
sub
jno
ins
cmovl
loopne
sub
push
adc
jmp
push
mov
shl
jmp
enter
mov
out
or
sbb
or
jmp
inc
jne
jnp
mov
stos
js
or
rep
jg
or
rcl
mov
cmps
pop
push
sbb
jmp
loope
gs
sub
cmp
inc
mov
xor
push
movs
adc
call
data16
push
pop
jnp
xchg
push
jecxz
sub
inc
or
mov
cmp
push
scas
stc
inc
shl
outs
or
adc
mov
cmp
lds
jmp
das
pop
jg
jns
movs
clc
out
(bad)
out
mov
jl
and
xchg
pop
fadd
inc
mov
ficom
inc
(bad)
mov
jg
dec
std
cli
in
jmp
in
shr
scas
rcl
and
inc
sbb
pop
in
or
pop
leave
lea
and
jnp
add
nop
jg
rcl
outs
sub
dec
cmp
mov
or
(bad)
sbb
jno
inc
adc
jl
retf
icebp
cmp
iret
cmp
fdiv
mov
xlat
loopne
mov
jnp
lds
mov
mov
mov
or
add
rcr
or
mov
jb
jp
push
movs
dec
cmovae
ret
cmp
mov
jge
(bad)
test
mov
xor
aaa
push
lea
jne
push
or
ds
fs
or
ret
and
div
pop
inc
cld
cmp
in
js
ret
or
mov
push
mov
ins
fdivr
or
pop
outs
cdq
sub
mov
loop
add
sbb
cmp
loopne
cli
stos
out
jl
pop
xor
scas
cmc
cmp
rol
push
mov
fnstsw
lds
stc
shl
push
inc
test
push
mov
ret
popa
mov
add
cmps
cmps
xor
rcl
stos
data16
lods
pop
adc
fsubr
out
out
add
mov
jmp
bound
and
aaa
adc
iret
jecxz
mov
jge
leave
int
popa
pushf
fst
fcomi
mov
and
sub
dec
or
add
movs
sub
jnp
xor
ins
lea
mov
mov
inc
mov
or
push
lahf
push
jbe
inc
push
ret
mov
inc
inc
repnz
bound
pop
popa
xor
and
daa
out
add
mov
jno
xchg
sub
pop
rol
jecxz
std
ret
shl
loopne
add
adc
xchg
test
mov
add
dec
jnp
xchg
dec
inc
js
mov
sbb
add
stos
sti
dec
cmps
mov
inc
daa
std
inc
push
out
cmc
jnp
movs
es
jle
and
or
aam
sbb
xchg
xor
add
sub
mov
int3
push
add
out
out
fidiv
dec
xchg
add
idiv
test
je
mov
fidiv
adc
mov
jg
lods
or
stc
mov
adc
push
mov
sbb
pop
test
dec
adc
in
int3
into
mov
retf
and
push
imul
add
lods
sbb
adc
push
inc
xchg
fnsave
push
mov
cmp
mov
icebp
es
enter
sar
sub
dec
jg
jle
mov
stos
or
(bad)
mov
dec
clc
pop
fnstcw
mov
jmp
mov
jecxz
into
add
aam
pop
stos
mov
mov
repnz
and
test
jae
sbb
std
xor
cmp
sub
pop
sbb
dec
dec
jno
jmp
and
cmps
adc
movs
add
pusha
fild
jns
icebp
out
add
(bad)
pop
cs
(bad)
xchg
les
fcmovu
mov
pop
ret
imul
mov
adc
pop
dec
outs
sbb
xlat
lods
pop
sub
cs
fcom
cmp
mov
aad
push
push
jge
pop
xchg
sub
call
cmc
mov
cmp
cmp
xor
fimul
lock
mov
push
jmp
lods
sbb
add
outs
xor
sbb
jmp
add
aad
movs
add
sbb
(bad)
push
or
call
(bad)
pop
pop
cmp
push
lods
int3
mov
jae
retf
loop
mov
add
psubw
pop
dec
xlat
jae
xor
mov
xor
popa
js
dec
xchg
addr16
ins
inc
add
cs
sbb
dec
add
mov
push
jmp
(bad)
mov
shr
daa
inc
stc
and
mov
add
xchg
mul
(bad)
dec
cmps
sahf
cmp
push
mov
and
mov
sub
outs
leave
dec
into
fs
dec
mov
push
pop
call
adc
clc
jmp
mov
call
int
or
pop
fld
inc
ins
(bad)
adc
or
es
add
rol
or
inc
shr
(bad)
cmc
cmp
icebp
jmp
xor
xor
mov
movs
pop
das
pusha
jle
in
sbb
xor
mov
cmc
cmc
lods
adc
mov
mov
dec
ret
sbb
sub
dec
cmp
mov
or
jnp
(bad)
jns
les
ss
and
(bad)
jmp
(bad)
or
inc
sbb
mov
jmp
xchg
cwde
jne
outs
lahf
adc
pop
pop
xchg
push
pop
leave
or
cmp
dec
(bad)
in
lahf
fsub
mov
cmp
leave
adc
inc
int3
pop
mov
xor
jns
lahf
mov
xor
(bad)
push
jg
push
inc
std
or
mov
inc
or
pop
(bad)
ficomp
ret
adc
mov
ss
icebp
xor
inc
or
movs
cmps
mov
pop
(bad)
in
sub
adc
pop
fist
test
push
dec
ror
mov
pop
pop
and
shr
movs
(bad)
fstp
dec
out
imul
ds
xor
test
xchg
inc
jecxz
jp
cmc
add
sar
in
pop
cmp
xor
xor
xchg
pop
fwait
sahf
or
mov
or
jb
push
(bad)
cmp
fidiv
or
ja
mov
dec
aaa
test
loopne
imul
inc
aaa
push
or
push
adc
add
jmp
xchg
mov
sbb
add
std
pop
mov
loopne
ins
int3
scas
sbb
mov
dec
push
fst
nop
icebp
ficomp
cli
popa
adc
repnz
jg
and
aam
mov
data16
inc
cs
scas
stc
mov
or
mov
ret
call
ss
movs
arpl
pusha
mov
cmc
xor
pop
scas
rcl
pop
dec
sbb
stos
mov
in
mov
loope
jno
mov
stos
sub
pop
xchg
inc
ret
jae
push
(bad)
push
xor
jmp
sub
stos
mov
int3
push
nop
add
and
mov
in
je
je
inc
xor
adc
pop
sahf
ror
in
sub
nop
sub
fisttp
(bad)
gs
nop
(bad)
jns
outs
cmp
adc
cmp
call
xchg
mov
jp
in
fwait
sbb
pop
cmps
add
mov
add
(bad)
enter
mov
push
dec
dec
add
cmp
push
xchg
xor
enter
xchg
test
xlat
mov
mov
data16
jl
out
cmp
outs
popa
arpl
push
sbb
add
inc
(bad)
push
(bad)
nop
sub
fwait
pop
push
loop
add
jl
out
sbb
test
or
je
imul
popa
fcomp
push
xor
push
jno
adc
inc
int
sub
cmp
fstp
jecxz
jae
mov
sub
imul
adc
jnp
cld
or
mov
test
cld
and
cli
out
fwait
xchg
fistp
cmc
ins
sbb
ret
gs
pop
mov
xchg
pop
or
aam
in
pop
fmul
dec
addr16
inc
sbb
enter
test
or
pushf
xchg
mov
pop
adc
fstp
jle
out
push
(bad)
adc
push
inc
test
pusha
mov
mov
in
scas
dec
adc
mov
mov
iret
hlt
(bad)
jne
adc
test
mov
sub
sbb
je
adc
pop
adc
jmp
xchg
jno
imul
jecxz
xchg
in
xchg
in
mov
xlat
movs
sub
inc
out
ror
push
out
mov
(bad)
pop
fnsave
ds
fstp
dec
les
cmp
mov
push
or
out
sub
add
ins
adc
retf
imul
daa
mov
iret
xor
ret
dec
leave
test
sti
fcomp
adc
sar
dec
xor
mov
fwait
outs
or
jecxz
test
mov
aam
sub
mov
iretw
lds
retf
(bad)
push
mov
dec
mov
popa
jg
sbb
pushf
icebp
lods
fwait
jmp
adc
push
data16
not
or
add
jns
jb
sbb
movs
sub
out
shr
push
inc
xor
mov
cmp
loope
jmp
sbb
(bad)
ins
and
dec
test
adc
(bad)
pushf
jmp
push
sub
pop
aaa
jne
cmp
(bad)
aas
imul
int3
mov
cmp
outs
mov
jns
fwait
cmps
jge
push
jge
(bad)
jg
iret
cmp
adc
mov
lods
rcl
xor
dec
push
mov
inc
jmp
push
jae
fwait
jno
add
cdq
loope
shl
mov
xor
ds
dec
push
aam
fs
sub
mov
jne
xchg
mov
add
int
fild
daa
test
xchg
or
adc
push
mov
pop
imul
dec
push
push
outs
sub
push
fdivr
repz
fimul
sub
out
cmc
push
ss
adc
(bad)
sar
pop
fbld
push
jb
hlt
stos
fbstp
push
test
neg
push
add
xor
or
int3
das
mov
adc
add
xor
push
dec
sbb
jmp
sub
test
popa
dec
inc
adc
fidivr
pop
mov
addr16
xchg
imul
cmps
sub
cdq
mov
or
or
enter
out
jo
fadd
nop
mov
call
daa
aaa
pop
in
or
(bad)
stos
ins
xor
and
mov
ret
mov
shl
sbb
jp
shr
mov
jge
push
sub
test
add
hlt
in
jge
and
add
and
je
or
sar
jle
add
sub
push
mov
test
test
push
xchg
xor
mov
sub
popa
and
jl
pop
ins
lods
sbb
cmp
add
jmp
nop
ja
lahf
ror
stc
fiadd
push
movs
(bad)
ficom
ret
ins
inc
stos
pop
shl
popf
cdq
push
add
jecxz
lea
xlat
xor
dec
loop
jg
outs
and
ins
cwde
mov
mov
adc
les
inc
loop
push
fmul
xchg
retf
jmp
das
stc
shl
jmp
inc
pop
mov
adc
jecxz
cmc
jmp
mov
jnp
jle
fldcw
adc
pop
fnstsw
inc
pop
aaa
mov
mov
dec
push
mov
push
rol
cld
inc
mov
sub
mov
jbe
daa
cli
xchg
pop
jl
adc
and
inc
in
cmp
inc
test
(bad)
fstp
movs
cdq
xchg
xor
fwait
movs
arpl
lods
add
sub
fldcw
cmc
data16
pop
(bad)
pop
mov
movs
dec
inc
push
(bad)
aam
daa
leave
pop
jge
call
or
inc
gs
mov
mov
inc
push
xor
(bad)
imul
jecxz
ins
cwde
or
lea
test
mov
add
iret
(bad)
push
loope
into
mov
adc
pop
mov
mov
push
inc
inc
je
fnstsw
mov
xchg
lea
jns
xor
imul
icebp
jns
outs
sub
jg
iret
add
imul
add
arpl
inc
retf
sbb
call
mov
fnstcw
xor
outs
outs
dec
mov
mov
mov
out
and
xor
sub
nop
inc
in
mov
in
inc
inc
iret
mov
gs
push
inc
xchg
adc
xchg
in
and
mov
in
jge
gs
jge
icebp
loopne
shl
dec
repz
sbb
xor
leave
in
pop
or
and
pop
cmp
push
imul
pop
mov
xor
jo
mov
inc
xchg
push
push
out
pusha
shl
mov
and
loopne
fsubrp
sbb
out
push
jge
test
loopne
cs
dec
mov
sahf
xchg
jmp
scas
xchg
(bad)
dec
pop
in
inc
mov
or
imul
add
aas
adc
jl
push
in
mov
mov
add
push
mov
in
pop
push
stc
sahf
jae
mov
pusha
das
fmul
(bad)
dec
gs
je
je
fidivr
mov
test
push
cwde
sub
gs
mov
mov
push
les
pop
inc
xchg
pop
adc
mov
add
mov
lock
pop
stos
cmp
js
and
push
int
arpl
adc
ins
xor
adc
xor
dec
pusha
rol
enter
in
jae
sub
fs
mov
xchg
mov
cld
push
sub
stos
aam
and
retf
rol
inc
push
xchg
mov
outs
jne
and
mov
xchg
test
lds
xor
xchg
in
xchg
retf
jp
cmp
dec
fwait
lahf
shr
rcl
out
retf
inc
add
push
mov
scas
pop
push
mov
sbb
sbb
dec
sub
dec
add
adc
retf
ins
dec
sbb
rcl
mul
daa
sub
aas
pop
xchg
pop
ja
jmp
mov
or
mov
dec
aam
sbb
aaa
stc
sub
lods
xchg
(bad)
clc
popa
mov
in
gs
test
push
mov
push
js
in
pop
and
stos
sub
cmp
jecxz
sbb
clc
pop
xchg
bound
cmps
test
ror
and
mov
aaa
mov
and
mov
inc
popa
ja
jl
push
or
cmps
xor
leave
pop
lods
aam
mov
test
call
sbb
xor
cmps
(bad)
call
call
mov
xor
dec
inc
adc
in
pop
sub
cmp
cwde
rcr
rcl
push
dec
lahf
and
mov
loope
cmp
push
popf
pop
sahf
push
ror
out
adc
stos
xor
xchg
ins
add
out
in
aas
push
mov
mov
inc
test
adc
fst
jg
sbb
mov
pop
pop
xor
(bad)
scas
and
nop
sub
sbb
fidivr
scas
ds
loopne
out
jg
dec
(bad)
xchg
pop
test
shl
cwde
in
in
daa
(bad)
mov
xor
in
cmp
mov
jbe
adc
or
stos
mov
jmp
rol
fdivrp
mov
cmp
inc
cli
inc
or
mov
add
div
into
jnp
adc
sbb
sub
rcl
clc
dec
mov
mov
mov
and
jno
xchg
or
stos
dec
(bad)
push
or
xlat
in
dec
sub
fwait
mov
stos
xor
jne
mov
push
or
pop
fld
sbb
push
in
lods
ss
cmps
ins
and
test
les
ds
or
icebp
aas
pop
cwde
lods
mov
sub
call
or
or
adc
dec
je
xor
pushf
in
mov
xor
lds
icebp
xchg
xor
xchg
mov
push
mov
call
test
adc
adc
mov
das
dec
neg
push
pop
sbb
mov
push
mov
inc
lds
xchg
dec
sbb
pop
icebp
jnp
inc
shr
inc
jbe
and
xchg
push
mov
jl
inc
hlt
pop
jnp
dec
add
aam
out
push
stos
fldcw
and
rcl
mov
push
js
popa
int
xchg
pop
in
mov
cmp
mov
adc
bound
sar
mov
ret
aad
mov
and
aaa
cmps
xor
scas
and
ret
sti
or
in
sbb
mov
adc
pop
mov
stos
sub
jns
and
or
jle
pop
xor
dec
loop
and
mov
adc
jnp
fidiv
pop
mov
and
daa
rcl
fwait
push
mov
cwde
push
pop
js
repnz
movs
xor
gs
xor
pop
or
popf
out
jne
adc
ret
call
mov
jno
push
inc
fwait
mov
cmps
cmp
jb
lods
test
inc
sub
rcr
sbb
adc
mov
and
gs
sbb
pop
nop
movs
mov
repnz
adc
loope
add
dec
lds
push
rol
mov
and
inc
cli
mov
cmp
mov
push
stos
ins
push
pop
enter
xor
add
or
dec
mov
sar
pop
gs
mov
push
pop
ror
out
aad
popa
out
mov
sub
pop
xor
popf
shl
aam
mov
fs
scas
jp
pop
scas
xor
outs
cmp
pusha
cmps
mov
out
xchg
cmp
jge
stc
cwde
pop
gs
retf
and
inc
dec
xor
rcr
mov
add
inc
push
pop
xor
pop
aam
xchg
xor
add
sbb
fs
cld
neg
iret
leave
jge
fimul
mov
cld
stos
mov
hlt
mov
sub
sbb
push
aas
bound
mov
(bad)
mov
scas
mov
outs
mov
mov
test
adc
and
xchg
jbe
jmp
adc
scas
mov
(bad)
mov
lods
mov
mov
repnz
mov
add
movs
push
in
test
jns
and
cmc
mov
rcr
push
lock
xchg
mov
je
pop
jg
imul
das
sar
inc
bound
in
pop
xchg
iret
pop
sbb
ret
ja
pop
mov
mov
add
xchg
jecxz
add
xchg
daa
enter
inc
mov
into
aaa
shl
in
cmps
sahf
data16
add
aam
je
push
mov
lock
das
call
(bad)
je
aad
jmp
add
int
scas
xchg
lods
xchg
ret
xor
into
dec
call
mov
xchg
ins
sbb
gs
cmp
jnp
lea
into
xchg
mov
pop
push
pop
mov
inc
scas
fidiv
ret
push
push
call
ds
or
sbb
cmp
and
sbb
arpl
jp
xchg
out
out
call
and
mov
mov
ret
inc
inc
call
mov
imul
fcom
or
cld
mov
in
push
jo
cmp
xchg
mov
mov
add
xor
in
and
les
fwait
push
and
leave
out
cmp
cmp
and
ja
mov
lods
ret
xor
test
and
fisttp
add
cld
ficom
out
dec
add
add
and
pop
fwait
mov
mov
repz
in
fsubrp
push
pop
aas
ja
mov
movs
stc
push
adc
sbb
pop
fxam
ldmxcsr
cmp
ins
dec
movs
int
imul
pop
test
retf
leave
push
lahf
pop
clc
pop
push
xor
add
stos
and
mov
gs
pop
hlt
fstp
arpl
mov
adc
jae
sbb
inc
sub
pop
mov
mov
mov
pop
pop
sub
or
enter
stos
xor
and
loope
xchg
leave
adc
aas
xor
pop
cmp
pop
sub
shl
loop
lds
xchg
mov
mov
ins
mov
sub
push
jmp
dec
sahf
xor
cli
cwde
cmp
sahf
(bad)
dec
(bad)
cmp
xchg
fstp
retf
imul
in
and
outs
mov
inc
pop
jne
icebp
push
fcomp
das
lahf
adc
jb
jo
inc
(bad)
adc
mov
neg
ret
inc
xor
mov
jo
hlt
icebp
fbld
xor
cmp
daa
ret
ins
sbb
push
mul
adc
test
jns
sti
mov
pushf
jp
stc
ds
lods
mov
xchg
dec
and
xor
xchg
fsubr
jo
out
fisubr
dec
ins
mov
and
mov
sbb
xor
jne
or
iret
mov
mov
cld
int3
jnp
(bad)
fiadd
mov
sbb
jo
fisttp
sub
pop
lahf
hlt
test
xor
mov
lahf
nop
and
leave
cdq
xchg
outs
mov
addr16
frstor
push
jp
or
inc
mov
(bad)
cwde
loope
(bad)
not
xor
add
pop
in
ficom
xchg
cld
mov
or
dec
push
push
ror
icebp
loopne
mov
fidivr
and
lods
and
cmp
push
cmp
pushf
mov
inc
xor
xor
call
xchg
iret
ret
cmp
cmp
inc
std
push
test
pop
stos
adc
rcr
scas
xchg
pop
mov
mov
lock
mov
cmp
adc
add
cli
jmp
out
int
lods
in
and
rol
and
bound
popf
scas
push
xchg
xchg
jmp
sbb
xor
jb
in
or
and
cmps
ja
inc
sbb
mov
xchg
add
inc
lock
mov
fild
sub
or
cmps
xor
mov
stos
pop
jno
leave
call
mov
pop
fild
dec
inc
adc
pxor
xchg
jle
mov
movs
nop
rcr
pop
dec
(bad)
cmp
or
pop
inc
sbb
dec
aam
imul
add
and
dec
dec
inc
cmps
test
jns
pop
sbb
iret
sub
add
movs
inc
sub
lods
push
dec
shr
pop
mov
push
xchg
or
stos
and
loopne
outs
mov
out
ja
je
sahf
push
xor
mov
or
jge
in
mov
xlat
scas
sbb
pop
out
out
pop
outs
stos
jge
ja
outs
movs
mov
jae
inc
stos
or
popf
icebp
bound
cmc
jmp
sbb
cmp
mov
pusha
and
jnp
loope
repz
jae
xchg
or
out
aas
call
lock
das
aad
adc
and
inc
imul
repz
rcl
sbb
mov
mov
jb
in
out
pop
dec
imul
mov
popf
test
test
mov
repz
mov
mov
dec
sahf
xor
mov
(bad)
xor
ret
(bad)
test
push
out
ds
aad
push
in
shl
sbb
nop
lds
xor
pop
add
popa
jp
dec
push
mov
out
retf
mov
pop
int
test
or
fstp
ret
imul
sub
pop
js
jmp
jge
iret
adc
mov
retf
mov
loop
icebp
shl
pusha
dec
mov
pop
ja
and
repz
mov
xor
test
jle
cmp
stc
dec
inc
pushf
pusha
xchg
jb
test
xor
xor
es
inc
movs
push
sahf
mov
test
inc
movs
or
mov
pop
test
adc
iret
jne
int
jnp
into
ja
pusha
retf
out
jnp
movs
dec
push
xchg
push
mov
and
cld
mov
cmc
adc
mov
jle
or
ins
les
or
push
lods
imul
jmp
cli
(bad)
ins
loopne
clc
inc
add
and
jns
pop
dec
jno
lds
adc
xchg
push
ins
stos
push
dec
popa
jne
push
or
jmp
mov
fst
ds
pusha
shl
idiv
lock
and
cld
jp
repz
sub
ins
sub
in
mov
popf
dec
pop
xor
mov
loop
or
jge
cmp
sbb
ins
iret
xchg
mov
das
imul
dec
sbb
mov
cmp
pop
cmp
xor
jne
push
xor
xor
pop
ds
xchg
scas
fbstp
jns
(bad)
jno
and
ins
mov
and
icebp
popf
jns
inc
rcl
fld
fdiv
imul
loope
test
cdq
bound
cwde
or
dec
sub
imul
jmp
pop
out
shl
(bad)
stos
in
loop
movs
pop
mov
adc
mov
pushf
bound
cmp
ins
inc
ja
mov
mov
inc
adc
or
mov
sub
outs
jl
dec
enter
lea
daa
mov
imul
dec
(bad)
sbb
lahf
dec
jne
cmp
xchg
std
jecxz
frstor
jmp
inc
mov
(bad)
aaa
and
push
test
xchg
dec
xchg
sahf
movs
xor
adc
(bad)
or
push
rcl
mov
adc
rol
jp
add
pop
arpl
dec
clc
rcl
dec
dec
rcl
out
test
scas
cmc
stos
mov
inc
sahf
pop
mov
adc
rol
sub
mov
and
aam
leave
push
ss
lea
sub
dec
(bad)
cs
or
scas
inc
or
xor
retf
shl
fldenv
out
call
push
cmc
mov
call
adc
fisubr
pop
sub
ds
push
sbb
in
xchg
adc
arpl
jae
add
sub
fiadd
inc
jmp
cmp
scas
mov
not
inc
outs
je
xor
loopne
dec
adc
add
ret
jecxz
dec
xor
test
jbe
add
adc
pop
int
jp
mov
int3
mov
ins
lahf
int
cmp
sbb
and
mov
pop
cmp
mov
mov
ins
loope
sub
imul
push
ss
pop
lock
xchg
test
inc
fadd
nop
dec
xor
pop
dec
mov
mov
mov
jp
cli
mov
pop
push
mov
or
cmp
rcr
enter
pop
or
ror
pop
push
imul
loopne
call
movs
sub
stos
in
test
cmp
ins
mov
(bad)
and
mov
pop
cwde
mov
das
pop
sbb
stc
inc
shr
adc
aas
test
xor
and
mov
gs
sbb
call
nop
cmps
mov
cli
dec
jmp
xlat
fsubr
sub
clc
stos
shr
loopne
test
mov
fstp
ins
cmp
icebp
inc
sub
mov
xchg
adc
loope
sbb
loop
sbb
push
aam
and
dec
and
cmp
mov
dec
xchg
mov
inc
sub
ja
dec
int3
cmp
push
cmp
jmp
push
add
push
das
mov
(bad)
sub
ret
icebp
and
test
pop
push
frstor
fwait
ret
sub
lock
mov
ds
sti
sub
call
jne
mov
sub
sbb
xchg
jns
cmp
add
jg
les
adc
push
or
sbb
cli
jp
leave
xlat
cdq
pusha
pop
in
call
dec
push
jmp
dec
out
adc
jns
lods
gs
mov
or
les
xchg
aaa
call
movs
push
push
rol
mov
sub
scas
cmp
adc
mov
retf
ds
jno
jnp
ins
mov
xor
sbb
inc
daa
lahf
dec
imul
fwait
movs
xlat
loope
outs
(bad)
mov
in
and
sub
pop
cmp
jmp
xor
adc
jbe
cdq
repnz
dec
push
fbstp
mov
loop
(bad)
test
js
in
sbb
fisttp
(bad)
lea
sub
hlt
int
jae
jb
retf
xchg
sbb
fidiv
pop
xchg
outs
mov
add
sub
sub
jecxz
jne
pop
div
mov
dec
mov
jmp
test
jg
add
test
ror
dec
scas
dec
cmps
cmp
shl
xchg
aam
out
ins
test
adc
inc
cmc
les
aas
cmps
jbe
into
rep
cmp
fcmove
into
dec
push
test
enter
pop
sub
sbb
dec
fnstsw
pop
mov
add
mov
loope
mov
dec
loopne
popa
fld
mov
(bad)
push
dec
mov
rcr
mov
jnp
pop
mov
int
aad
test
sti
mov
push
nop
add
add
sbb
mov
int3
cmp
xlat
enter
sub
pusha
in
(bad)
jg
pop
jp
ror
test
cmp
fisubr
push
(bad)
repnz
push
xchg
in
sub
lods
mov
enter
add
loop
popf
push
call
fdivr
push
rol
or
mov
adc
aam
mov
jle
dec
and
fcmovnbe
fst
jmp
lods
add
inc
and
mov
mov
push
mul
mov
in
or
xchg
cmp
cli
jae
ds
int3
adc
cmp
pop
pop
test
stos
lods
adc
iret
(bad)
push
out
call
(bad)
adc
stc
jmp
xor
pop
dec
dec
jae
(bad)
scas
mov
movs
cmps
xor
xor
aad
dec
add
rcr
jmp
stos
adc
inc
or
inc
pop
mov
leave
jns
icebp
sub
dec
movs
aaa
pop
and
and
test
jl
shl
(bad)
hlt
cmp
lahf
cs
into
or
inc
loopne
push
sbb
sbb
or
mov
push
je
and
mov
std
(bad)
retf
and
call
in
dec
shl
jnp
sub
test
jno
test
cmp
shl
(bad)
or
out
int3
dec
push
inc
adc
inc
push
jmp
jmp
cmp
shl
sub
clc
jbe
jge
dec
fs
ret
sub
sbb
inc
jo
loopne
jbe
or
fidiv
mov
mov
fs
(bad)
(bad)
cmp
or
loop
jb
push
push
ret
imul
sidtd
leave
xor
adc
or
adc
and
xor
mov
cmps
sub
xchg
jno
jbe
into
xchg
cmp
int3
push
sub
sub
test
jmp
scas
push
mov
mov
adc
mov
mov
mov
das
sbb
pop
cwde
lds
pop
aam
loope
(bad)
cwde
cmps
cld
aaa
imul
inc
rol
push
xchg
mov
test
xor
sti
add
inc
in
push
or
adc
dec
pop
dec
sbb
retf
fcomp
dec
movs
push
mov
(bad)
js
mov
into
pop
jno
dec
jbe
mov
cmp
out
outs
jne
(bad)
mov
adc
xor
stos
(bad)
push
xlat
ret
jae
cmp
jbe
lock
cmp
call
or
rcl
jge
inc
xchg
and
inc
pop
xchg
loop
dec
enter
ins
in
cmp
int3
rol
stos
sub
in
(bad)
call
mov
movs
frstor
cmp
(bad)
and
mov
or
inc
inc
(bad)
adc
les
ja
imul
addr16
inc
dec
leave
mov
mov
fs
ret
in
je
imul
sti
mov
rcr
(bad)
mov
push
inc
scas
or
mov
cli
mov
cmp
jmp
(bad)
outs
push
dec
shl
test
adc
(bad)
loop
fild
js
pop
jmp
or
aad
mov
imul
cmps
iret
stos
mov
inc
inc
push
inc
mov
sar
das
push
movs
push
inc
push
cdq
shl
cs
and
inc
mov
and
mov
int
aad
(bad)
lahf
call
add
fist
cmp
xor
push
jle
sbb
bound
hlt
xchg
add
(bad)
jmp
hlt
les
in
ins
xor
sbb
fwait
mov
dec
neg
mov
mov
arpl
imul
scas
call
add
ins
(bad)
xor
or
outs
je
xlat
mov
fidivr
adc
push
push
add
enter
sahf
xchg
shl
and
or
or
std
data16
shl
inc
test
stos
lods
sbb
mov
mov
pop
addr16
mov
aam
les
and
out
in
sti
jb
iret
dec
fild
loope
mov
sbb
inc
movs
or
ret
mov
jno
sbb
lea
sub
mov
fild
call
fidivr
or
call
call
inc
push
cld
or
dec
ret
dec
mov
aas
mov
(bad)
or
retf
cli
shr
hlt
or
cmc
mov
sub
jmp
int
dec
imul
enter
mov
and
or
inc
loope
jnp
repnz
stos
or
ss
or
sub
jg
div
dec
aas
(bad)
mov
nop
sbb
sbb
xor
dec
xchg
jp
push
xchg
hlt
lds
test
mov
mov
(bad)
inc
imul
add
rcr
cdq
xchg
fs
jmp
addr16
scas
in
lds
inc
inc
arpl
loop
mov
iret
int3
call
push
inc
leave
ffreep
sti
pop
jns
loope
cmps
dec
(bad)
jp
push
xchg
mov
xchg
bswap
dec
xchg
lods
movs
ins
retf
sub
push
mov
dec
std
jmp
loope
es
add
inc
outs
mov
xchg
(bad)
cmp
sub
movs
pushf
bound
fsubr
std
nop
cmp
jecxz
or
arpl
mov
dec
cmc
icebp
loop
js
pop
mov
cli
lods
cmp
mov
inc
xor
push
sub
adc
and
dec
mov
and
dec
fwait
imul
sbb
test
cmp
add
enter
push
shr
cli
mov
sub
xchg
fisubr
aam
dec
dec
fcomp
sbb
sub
cli
jg
fmul
sbb
(bad)
scas
stos
push
and
push
adc
and
add
add
or
fist
or
lahf
xchg
xor
inc
push
xchg
call
ins
clc
aaa
retf
shl
in
(bad)
jnp
add
(bad)
sbb
bound
out
push
push
test
push
ja
and
xor
fs
mov
(bad)
push
dec
push
movs
lods
push
xchg
popa
mov
or
pop
mov
pop
push
mov
mov
pop
out
hlt
cmc
out
js
mov
test
cmp
rol
dec
mov
xchg
mov
imul
mov
outs
sbb
(bad)
pusha
aam
aas
xlat
and
mov
pop
pop
inc
pop
adc
scas
jmp
(bad)
sbb
xchg
jns
(bad)
push
lods
jle
out
and
and
xchg
xor
mov
jb
ret
add
fwait
loop
js
idiv
mov
inc
out
dec
push
xor
sahf
jne
pop
adc
fcomp
pop
aas
sbb
stos
xchg
nop
add
mov
xchg
into
push
test
cmps
out
xlat
movs
ja
mov
mov
push
mov
and
in
ins
adc
fadd
js
gs
mov
rcr
push
dec
icebp
in
imul
mov
push
fld
loop
xor
(bad)
cwde
repnz
call
data16
or
movs
into
xchg
lds
out
jge
repnz
sbb
int
pop
sub
cmp
push
dec
sub
xchg
inc
sbb
std
mov
pop
dec
aaa
cmp
out
push
sbb
lds
aaa
fsub
pop
jl
and
(bad)
shl
(bad)
out
aam
push
test
add
dec
xchg
movntq
or
mov
ja
ds
xor
xor
sbb
sub
rol
cdq
jb
mov
shl
div
lahf
mul
push
fmul
call
push
mov
push
xor
loope
mov
xor
enter
push
scas
add
fmul
inc
push
(bad)
popf
push
push
adc
and
mov
adc
xor
mov
sbb
or
mov
repz
jno
jno
add
retf
fsubr
and
dec
pop
jmp
scas
out
pop
adc
cli
jmp
test
mov
int3
push
fimul
dec
fld
push
cmp
mov
out
push
mov
arpl
mov
retf
sub
mov
iret
or
sub
jmp
pop
jp
dec
xor
inc
mov
int3
daa
fnstsw
xchg
retf
ja
or
xor
lods
bound
pop
push
mov
loope
cmp
div
in
cmp
or
lea
into
int3
les
cmp
cs
shl
jle
(bad)
push
lahf
push
adc
push
cmp
loope
push
sahf
mov
add
push
cwde
jecxz
shr
or
movs
cmp
inc
scas
jnp
jae
mov
ror
mov
sub
push
and
mov
ror
pop
xlat
mov
inc
sub
pop
cmp
jg
fcompp
xor
push
push
jl
sbb
mov
push
cmp
in
cdq
inc
rol
ins
out
lock
mov
hlt
das
push
mov
aam
jecxz
mov
out
or
fs
aad
pushf
adc
push
ds
lock
sti
xor
fistp
push
hlt
pop
mov
imul
rcr
inc
or
pop
mov
(bad)
aad
mov
mov
xchg
and
push
mov
xor
loope
mov
jmp
or
in
pop
lahf
mov
xlat
jmp
jecxz
das
push
cmp
retf
inc
jae
dec
pop
cmp
push
inc
pop
retf
and
mov
fsubr
or
inc
xchg
fucomi
ins
fbstp
push
iret
jmp
mov
ficomp
shl
jmp
or
out
stos
lods
jmp
mov
adc
hlt
xchg
mov
int
mov
mov
popf
rol
and
cmps
ds
int3
and
adc
push
loop
cmp
or
lea
jne
sub
not
std
mov
(bad)
sbb
xor
jecxz
push
jo
mov
or
add
es
mov
pop
inc
sar
out
sbb
inc
cmc
add
adc
sbb
xor
aas
jge
repz
xor
push
rcr
sub
enter
aam
and
clc
aaa
and
sub
inc
in
inc
xor
mov
pusha
sbb
popa
lods
xor
mov
jmp
dec
inc
fcomp
sub
cmps
inc
rol
inc
pop
cmps
sub
mov
rcl
iret
cs
and
xor
dec
aad
dec
xor
push
into
fidivr
pushf
mov
repz
fbld
pusha
add
jns
cwde
outs
out
cs
add
stos
loope
pushf
mov
imul
ss
sti
jp
cmps
or
imul
push
jecxz
cs
ret
test
mov
inc
ja
test
mov
inc
cvtdq2ps
jmp
in
adc
in
dec
imul
sbb
mov
sbb
repnz
call
jnp
lahf
cld
push
fstp
cmp
cmps
stos
pushf
(bad)
cli
pop
clc
inc
sub
jge
in
retf
outs
js
push
cmp
jp
push
(bad)
jo
xchg
shl
(bad)
outs
adc
mov
sub
fst
inc
pushf
inc
mov
icebp
js
xor
out
mov
add
cmp
dec
retf
xchg
add
ret
push
(bad)
jl
adc
xchg
fadd
cmc
xchg
push
(bad)
ror
loop
push
sub
and
in
sbb
jb
fidivr
or
arpl
xchg
xchg
in
loopne
push
pop
pop
mov
pop
sub
(bad)
and
sub
and
adc
out
cmps
retf
(bad)
sbb
dec
aad
mov
sti
jno
push
mov
push
sbb
dec
bound
jmp
stos
or
stos
out
stos
aam
jp
inc
out
loop
push
sub
retf
dec
push
sbb
rcr
inc
pusha
popf
and
mov
(bad)
and
(bad)
fwait
cmp
hlt
or
add
test
mov
ret
std
shl
xchg
leave
or
jle
imul
jns
jno
in
(bad)
arpl
sub
aad
jae
xor
aam
out
xchg
jno
loop
cs
data16
lods
repz
lea
add
lods
je
pop
mov
shl
cdq
inc
jmp
inc
fdivr
cli
add
loop
pop
mov
popf
mov
movs
lods
mov
test
mov
cwde
ja
xor
and
pop
dec
inc
mov
ret
stc
inc
dec
sahf
mov
movs
adc
idiv
in
sub
lock
push
mov
jp
jecxz
mov
outs
jge
jl
sub
cmp
xor
ror
and
mov
fcmovnb
lods
outs
push
hlt
cmp
xlat
(bad)
pop
aaa
push
int3
(bad)
pop
and
ret
jbe
xor
cmp
mov
or
out
cwde
scas
push
add
adc
jbe
add
ds
jnp
and
stos
rol
xchg
(bad)
aas
fistp
int
in
mov
adc
enter
jno
leave
xchg
(bad)
mov
cmp
pop
cmp
push
das
or
iret
dec
sbb
cdq
jge
mov
jge
dec
jecxz
or
fidivr
cdq
nop
xor
fidivr
mov
pop
mov
sub
scas
xlat
je
sub
and
stc
clc
and
outs
cwde
(bad)
fnstsw
cmp
test
adc
sbb
push
call
dec
mov
pusha
pop
ret
xchg
jnp
sbb
dec
iret
jmp
sub
inc
(bad)
cmps
pop
into
xor
mov
fdiv
pop
push
addr16
rcr
jae
fnsave
pop
test
and
ja
scas
pop
add
loope
retf
rcl
pusha
jbe
jb
ds
call
les
xchg
movs
(bad)
js
das
sar
repz
push
and
pop
mov
mov
movs
mov
outs
adc
add
xor
movs
dec
fcomp
shl
fdivr
cmps
or
(bad)
int3
ret
jecxz
push
js
push
lods
popa
in
mov
dec
fmulp
fld
ret
imul
xlat
inc
mov
popa
xchg
cmp
hlt
adc
(bad)
inc
test
sub
inc
adc
stos
fcmovnb
cs
(bad)
in
out
aad
sahf
jb
add
cmp
mov
and
pop
ss
sar
or
in
dec
out
xor
xchg
arpl
lea
addr16
pushf
outs
(bad)
mov
fbstp
add
iret
dec
sbb
jl
pop
test
mov
inc
adc
movs
adc
push
xchg
fisub
(bad)
ins
les
out
aaa
cmp
mov
sub
clc
mov
in
push
pop
bound
sbb
fs
mov
push
(bad)
inc
fwait
int
and
sahf
popf
je
or
(bad)
or
test
lea
adc
mov
xchg
das
ficomp
mov
aad
sbb
jo
mov
jp
and
rcl
icebp
xchg
fwait
sbb
jno
enter
ret
mov
ja
popa
inc
pop
cmps
fcomp
fs
push
icebp
aad
fadd
in
addr16
ret
cld
sbb
xchg
bound
mov
jp
inc
cmp
cmp
ja
jecxz
mov
and
int3
mov
jbe
mov
xchg
aaa
xor
mov
fdiv
aam
out
add
test
fcmovnu
loopne
mov
sub
stc
dec
and
jne
out
cmp
mov
stos
mov
cmp
sbb
repnz
js
dec
jmp
cmp
cdq
je
cs
loop
fadd
cli
pop
dec
xchg
mov
xor
fidivr
mov
popf
repz
dec
xchg
dec
lods
jmp
into
(bad)
or
xchg
es
add
mov
outs
popf
xchg
and
cmc
xchg
add
(bad)
sbb
in
push
jae
push
sbb
sub
cdq
pushf
mov
rcr
rcl
ins
xor
xor
mov
popf
adc
push
hlt
mov
adc
in
clc
sti
shr
test
pop
dec
or
cmps
push
add
punpcklbw
sub
rcr
sbb
das
mov
inc
popa
sub
or
iret
jae
push
loopne
jecxz
jge
cdq
sahf
add
ds
(bad)
push
ins
int3
cli
or
(bad)
retf
cmp
inc
and
add
test
push
xchg
inc
outs
gs
jp
das
jb
neg
add
push
(bad)
cmp
jns
sbb
bound
or
push
out
(bad)
aad
mov
xlat
xchg
sbb
mov
or
dec
sti
imul
sub
jb
cmp
scas
les
int3
fadd
aam
add
sub
js
mov
inc
xor
jmp
lahf
das
psrlq
inc
fdiv
or
idiv
mov
shr
mov
lock
stos
(bad)
push
sub
jo
jmp
xchg
mov
iret
xor
mov
loope
jecxz
xchg
xchg
enter
movs
pop
loop
cmp
subps
fld
jle
jg
pop
push
jmp
jle
xchg
dec
loop
xor
cli
jo
and
add
mov
sbb
rcl
sub
pop
sar
mov
adc
data16
add
shl
dec
movs
cmp
cmp
push
lock
and
out
push
and
fsubrp
das
mov
mov
fcmovu
cwde
fwait
aad
aam
inc
imul
aas
xchg
les
outs
cli
test
mov
cmp
fild
xchg
sub
jnp
loopne
test
sahf
sub
cmp
jmp
xor
and
dec
mov
test
int3
add
fdivr
add
add
and
movzx
sub
int3
push
lods
cwde
xor
cdq
aas
push
pop
frstor
out
sub
mov
jle
imul
mov
repnz
push
xchg
cmps
inc
xor
dec
cmp
not
cwde
mov
jle
add
dec
xor
sbb
js
lea
adc
sub
fwait
mov
(bad)
and
retf
in
inc
adc
fld
pop
aad
mov
pop
repz
lea
jmp
iret
or
xchg
and
dec
mov
or
xchg
sub
push
je
jno
mov
mov
pusha
test
pop
sbb
les
xlat
and
mov
(bad)
cdq
dec
xchg
out
push
out
mov
cs
inc
mov
dec
js
imul
or
inc
call
or
loop
fisttp
mov
(bad)
cmp
hlt
mov
mov
lahf
mov
ja
cmp
aaa
adc
inc
movs
stos
es
xchg
mov
push
mov
adc
inc
pop
iret
int
mov
dec
js
push
aad
xchg
mov
cs
mov
dec
out
adc
call
jle
jnp
nop
pop
jg
mov
push
lods
cmps
in
xchg
(bad)
mov
std
jmp
int
xchg
mov
push
cmps
pop
xor
(bad)
enter
xchg
gs
xchg
inc
push
sbb
jne
loope
sahf
push
imul
sub
mov
mov
push
pop
add
mov
lock
fs
dec
not
pop
xchg
cmps
imul
add
ss
xlat
rcr
out
xor
cwde
sub
fiadd
push
and
mov
mov
mov
inc
sub
push
dec
repz
fdiv
inc
fistp
and
in
cld
retf
or
fs
xchg
add
cli
cs
pop
ss
lods
adc
and
mov
adc
fcomp
mov
cmps
cmps
retf
lea
mov
push
mov
fs
sub
inc
inc
lods
and
xchg
sbb
shr
imul
push
xchg
pop
test
pop
push
lea
sar
gs
daa
mov
scas
fild
scas
pop
adc
sbb
inc
sahf
jmp
mov
xor
inc
adc
and
aad
mov
fld
pushf
loopne
xchg
xor
jg
or
movs
xor
pop
jg
call
(bad)
push
xchg
lahf
xchg
cmp
cdq
lahf
fild
ja
jle
ud2
pop
repnz
sub
popf
add
in
adc
cmps
xchg
dec
pop
mov
aaa
xor
pop
xor
xchg
adc
test
inc
js
xchg
adc
outs
fwait
mov
jle
test
movs
xchg
scas
pushf
jecxz
popa
jbe
ret
xchg
fsub
mov
mov
imul
js
sub
arpl
or
scas
sub
cwde
ret
movs
or
sub
xor
push
jecxz
(bad)
push
push
and
xor
in
aam
call
(bad)
jp
imul
inc
jge
cwde
and
cdq
mov
mov
sbb
ins
xor
lock
jmp
sub
(bad)
(bad)
fnsave
push
sub
jns
test
jns
cmp
(bad)
(bad)
in
fs
mov
push
sbb
cmp
popa
shl
pop
fcmovnbe
ret
and
ret
cmc
fwait
sbb
lock
and
lock
out
test
outs
pop
nop
test
pop
jp
mov
adc
cs
mov
jmp
scas
and
push
scas
pop
fisub
arpl
retf
lfs
call
and
in
retf
jle
mov
adc
xor
pop
les
and
out
(bad)
cmp
jge
xchg
xchg
xchg
xchg
jae
sbb
mov
stos
sbb
sub
mov
push
and
jo
je
scas
mov
pushf
mov
or
retf
nop
xor
jb
adc
pusha
push
sub
jo
sbb
jl
call
aaa
rcl
ja
mul
mov
aaa
and
pop
(bad)
(bad)
jge
pushf
leave
jle
dec
div
inc
add
aam
outs
and
ret
pop
call
ins
clc
and
or
dec
addr16
fist
in
jg
cmp
sub
arpl
fs
mov
jo
mov
jle
mov
xor
ins
xchg
push
(bad)
fnsave
fmul
ret
movs
xchg
dec
push
out
cmps
mov
jno
and
in
mov
pusha
(bad)
add
dec
fsubr
mov
add
inc
dec
nop
lea
popa
mov
pushf
retf
and
(bad)
retf
jmp
adc
sub
out
pusha
dec
movs
xor
mov
cmp
jp
ds
jbe
out
jmp
add
jl
xor
jl
ins
out
stos
mov
scas
dec
push
rep
leave
push
in
adc
cmp
mov
mov
inc
scas
ins
mov
sti
inc
scas
xchg
sbb
pop
pop
dec
pusha
add
call
les
rol
mov
xchg
mov
push
std
ins
out
mov
mov
aaa
retf
mov
push
leave
mov
sahf
test
xor
and
mov
cli
push
sub
dec
ss
ror
xchg
cmp
mov
loop
rol
push
cmps
and
push
dec
into
ins
xlat
out
test
sub
jmp
pop
xchg
movs
xchg
test
call
sbb
inc
xchg
cmp
cmps
jo
inc
adc
sbb
shl
fsubr
int
cmps
mov
fsubp
aas
and
ja
bound
dec
add
mov
jmp
pushf
(bad)
add
mov
push
(bad)
ins
les
icebp
das
inc
pusha
or
and
mov
mov
mov
int3
imul
ror
xchg
ficomp
sbb
test
mov
push
xchg
xchg
adc
push
movs
addr16
(bad)
bound
sbb
ret
sub
fdivr
ja
jmp
je
in
sbb
test
pop
sub
pushf
mov
and
loope
fidivr
dec
or
std
push
xchg
jns
iret
pop
mov
cmps
mov
jmp
leave
sahf
pop
mov
mov
sbb
test
xor
aas
cmps
movs
fwait
add
pop
pop
fimul
stos
faddp
or
out
push
dec
adc
call
add
push
xchg
or
pop
mov
inc
repz
fadd
lea
fbld
dec
retf
(bad)
jg
jmp
mov
xor
and
ins
mov
fmul
(bad)
cdq
sub
push
push
add
cmp
pop
int3
repnz
dec
mov
clc
dec
(bad)
clc
add
xlat
pop
mov
dec
inc
cmp
lods
and
cmp
aam
sub
daa
shl
mov
lods
ret
je
mov
mov
sbb
jno
push
fwait
mov
mov
lods
push
cmp
mov
cli
mov
inc
test
jae
inc
pushf
fs
int3
xchg
mov
xor
test
pop
icebp
je
sub
and
pushf
mov
jg
adc
xor
aaa
retf
inc
sbb
mov
add
push
test
mov
mul
xor
sahf
(bad)
nop
mov
(bad)
stos
xchg
adc
nop
sub
pop
daa
adc
hlt
aad
pop
les
loop
daa
mov
sbb
dec
and
adc
int3
daa
test
pop
fdiv
xor
cmps
xchg
out
(bad)
stc
xor
inc
cwde
xchg
in
jbe
pop
mov
ja
push
dec
xchg
sub
ret
pop
pop
cmp
mov
cmp
(bad)
push
sub
xchg
cmp
sbb
cld
nop
iret
outs
mov
rcr
add
(bad)
movs
adc
mov
mov
gs
repnz
addr16
mov
mov
xchg
mov
or
hlt
ds
outs
into
push
mov
cmp
dec
push
jnp
cwde
cmp
jns
sbb
and
loopne
xor
xchg
and
outs
dec
pop
dec
fs
data16
stos
std
out
sub
icebp
enter
lods
retf
pop
adc
mov
daa
iret
into
(bad)
bnd
xchg
mov
bnd
mov
pop
jnp
push
xchg
fdivr
pop
loopne
outs
stc
das
sbb
ins
push
mov
ror
clc
cdq
mov
sub
mov
adc
dec
les
psllq
sub
mov
sti
(bad)
push
stc
in
ret
xchg
(bad)
jl
test
xchg
mov
sbb
movs
adc
push
jb
add
pop
or
jo
ds
pop
shl
test
dec
cwde
aad
mov
and
add
xchg
popa
mov
xchg
shl
sbb
mov
fcomp
das
pop
call
xchg
xor
and
rcl
xchg
or
add
inc
adc
jecxz
je
cmp
test
mov
xchg
push
or
push
pop
wbinvd
dec
iret
pushf
inc
outs
jge
(bad)
xor
cli
jns
sub
(bad)
into
stos
adc
into
cdq
pop
or
pop
jne
imul
test
outs
xchg
hlt
dec
rcl
pop
jl
es
rol
add
jl
jg
sbb
sub
lahf
test
jmp
jmp
gs
pop
cmp
popa
xchg
jae
out
imul
inc
fldcw
mov
and
fcomip
lea
hlt
xor
mov
ret
inc
cmps
mov
sti
mov
mov
int3
jns
and
push
jne
sbb
lea
mov
pop
push
jnp
shl
sub
mov
shl
xchg
xor
dec
push
add
xor
inc
inc
aaa
sub
fdiv
xchg
inc
rol
push
in
inc
xchg
cmc
jle
inc
movs
out
xor
mov
push
xor
shl
mov
xchg
dec
stos
inc
cli
inc
adc
push
xchg
xor
arpl
inc
inc
sbb
push
jle
cli
add
push
xor
mov
fcomp
inc
repz
leave
or
add
jle
jo
adc
(bad)
pop
add
cmps
xor
int
pop
pop
inc
mov
inc
int3
rcl
inc
inc
daa
cwde
xchg
rcl
test
mov
stc
jmp
lds
aaa
leave
loope
adc
jl
iret
add
xor
outs
mov
push
aad
sub
loopne
add
test
(bad)
imul
mov
adc
push
and
test
imul
pop
cmp
xchg
ret
or
ret
arpl
mov
xchg
mov
xchg
jge
scas
xchg
loopne
xor
fsub
jb
or
or
pop
push
shl
jmp
ror
mov
pusha
mov
mov
xor
hlt
sbb
xor
pop
cmp
pop
jmp
inc
mov
aam
mov
mov
push
fs
fistp
popa
jae
retf
inc
je
and
add
unpcklps
jp
xchg
jno
jne
ret
into
data16
sbb
sub
push
shl
shl
sbb
push
inc
pop
inc
fld
ins
pop
lahf
out
ss
mov
mov
fsubr
clc
out
loope
dec
and
xchg
gs
mov
cli
push
pop
cmp
test
aaa
loope
int
or
cmp
mov
cdq
cmp
sbb
push
(bad)
cld
fild
ss
aad
jp
popf
pop
mov
jp
inc
sub
xor
fist
stos
repnz
les
imul
and
retf
das
xchg
es
push
aam
in
ret
rcr
jecxz
out
jp
outs
idiv
xor
push
aas
das
out
ins
lds
lds
adc
je
jp
ret
inc
ret
scas
pushf
movs
mov
aam
mov
push
daa
xchg
cdq
out
dec
adc
(bad)
(bad)
test
gs
fld
fstp
xor
shr
mov
jg
fcomp
sub
add
in
sub
dec
scas
cld
jno
mov
mov
mov
add
sub
mov
inc
not
push
push
inc
repnz
stos
in
cld
adc
nop
add
inc
cmp
mov
imul
fwait
test
bound
inc
push
(bad)
xor
out
ins
movs
xchg
loopne
ds
or
rcr
rcr
add
int3
test
int
mov
adc
mov
les
jge
lock
and
xor
mov
mulps
ret
(bad)
inc
lods
pop
mov
(bad)
pushf
jecxz
ins
(bad)
mov
daa
rcl
jne
imul
rcl
add
ins
in
retf
push
fstp
xor
popf
pop
call
mov
cmp
pop
ins
cld
jbe
sbb
or
aaa
mov
inc
xchg
into
mov
inc
inc
repnz
mov
dec
(bad)
in
xor
jecxz
adc
ficomp
jno
ror
arpl
sbb
enter
add
mov
jns
adc
jecxz
xor
inc
loopne
call
les
or
nop
clc
arpl
mov
lahf
and
push
lods
cmc
pop
sub
xchg
ja
adc
add
xchg
daa
mov
data16
jl
mov
hlt
fdivr
inc
push
pop
repnz
outs
ret
stos
dec
xchg
mov
cmc
js
mov
fidivr
jno
cmc
hlt
and
xor
sub
bound
mov
lods
ret
add
ret
jl
call
inc
sbb
leave
mov
cmps
jecxz
addr16
ins
sbb
jmp
pop
xor
dec
and
xor
sub
jecxz
data16
retf
shr
or
outs
jae
imul
sub
mov
xchg
push
loop
aas
cwde
mov
xchg
call
xchg
add
add
js
in
shr
cmp
lea
or
pop
xchg
dec
popf
neg
out
loopne
arpl
popa
mov
scas
pusha
push
cmp
enter
and
xchg
imul
inc
mov
xlat
pop
xor
out
push
out
adc
mov
add
and
or
iret
addr16
xor
mov
nop
mov
aas
xor
shr
fimul
adc
sub
lock
adc
sub
outs
pop
cmp
rol
or
inc
xchg
imul
cmp
fucomip
or
ja
add
mov
sar
mov
out
mov
cmp
lods
jne
mov
mov
cmp
repz
std
out
mov
mov
pop
jmp
lahf
cmps
nop
mov
mov
rcr
sbb
mov
repnz
aad
xchg
loope
mov
sub
scas
or
out
sahf
jge
sub
bound
pop
push
push
jne
inc
cmc
sbb
enter
mov
ins
mov
dec
mov
ja
fadd
cmp
fwait
stc
cmp
jnp
lods
mov
movs
std
and
mov
test
inc
and
adc
iret
pop
stos
mov
(bad)
xor
cwde
inc
inc
scas
ret
cmp
and
jmp
mov
(bad)
mov
mov
frstor
fmul
cwde
sub
cmp
pop
pop
xchg
adc
out
stc
mov
cwde
in
or
loope
cmp
inc
sti
xchg
aad
daa
mov
xor
push
loopne
in
mov
push
sbb
sub
fnstcw
test
pusha
int
dec
mov
daa
add
les
dec
or
push
or
movs
mov
jbe
xor
shld
and
pop
scas
mov
ja
sub
xchg
je
icebp
jmp
js
push
lock
test
cmc
push
ret
xor
jge
jno
add
push
fneni(8087
popa
test
fdivr
push
jp
movs
pop
mov
les
mov
xor
pop
add
sbb
dec
and
and
add
mov
scas
mov
ror
movs
inc
push
xchg
add
stos
bound
mov
push
fxtract
push
aaa
es
add
fnstsw
and
pop
stos
std
mov
adc
mov
aad
pop
cld
lds
pop
xchg
dec
stos
cmp
dec
dec
mov
nop
mov
outs
or
add
push
mov
cmps
xor
lods
clc
andnps
ficomp
ss
jecxz
pop
pushf
jo
(bad)
out
loop
stc
gs
mov
jge
push
xchg
movs
cmp
std
stos
adc
pop
add
ins
iret
fiadd
cmp
mov
mov
std
lods
lods
jle
cwde
pop
(bad)
and
fldpi
pushf
and
(bad)
mov
pop
imul
neg
add
add
test
aam
xchg
mov
and
inc
lock
clc
cli
ss
iret
mov
int
cmp
push
mov
cmp
xor
push
pusha
hlt
sub
add
aam
cmp
cs
out
xchg
xor
js
aam
mov
inc
adc
mov
dec
into
out
test
mov
call
jae
stc
das
adc
loope
aam
jge
call
bound
add
push
pop
push
dec
mov
sub
adc
(bad)
xor
jp
mov
dec
das
pop
mov
fsubr
int3
or
inc
jnp
mov
mov
test
add
scas
out
retf
cdq
sbb
xchg
sub
out
push
jno
mov
push
imul
fcom
cmps
adc
pop
mov
sub
sub
iret
sbb
jmp
mov
repnz
ret
xchg
mov
dec
xchg
or
xor
(bad)
test
xor
mov
dec
jns
push
out
sbb
mov
imul
or
or
pop
jecxz
and
adc
sub
shr
popf
dec
pop
cmp
sbb
call
pop
xor
pop
hlt
inc
cli
inc
fdiv
int
retf
inc
scas
sub
sbb
xlat
inc
dec
mov
(bad)
push
scas
push
fst
lea
and
jno
lahf
jns
arpl
cmp
sti
xor
sbb
xor
inc
and
cmp
aam
xor
jg
push
cli
data16
repnz
mov
rcl
inc
loopne
inc
pop
enter
sub
and
jmp
pop
xchg
call
frstor
cmc
test
jecxz
inc
cmps
call
xchg
pop
push
push
(bad)
sbb
loopne
cld
scas
cmc
mov
lods
test
add
jp
add
jmp
adc
outs
push
test
dec
mov
mov
dec
adc
ins
pop
mov
scas
or
or
lea
inc
js
xchg
js
shl
fld
movs
mov
xchg
test
ret
sti
sbb
sub
inc
mov
sbb
gs
sub
rol
mov
lea
lods
xor
dec
pop
xchg
jne
pop
cmp
and
and
daa
les
das
leave
pop
pop
pop
mov
iret
pop
je
icebp
call
add
sub
(bad)
not
jbe
test
not
in
scas
sbb
xchg
fisub
adc
xor
jmp
inc
adc
or
popa
aam
push
xor
inc
(bad)
jmp
mov
push
pop
jle
ror
sahf
lods
and
mov
jb
rcl
mov
(bad)
fbstp
pusha
lock
sbb
retf
jp
retf
and
setl
mov
popa
popf
or
daa
mov
and
push
fdiv
movs
(bad)
xchg
popf
mov
mov
xchg
inc
mov
leave
jle
hlt
sub
pushf
stos
fldenv
rep
jne
push
push
adc
call
das
scas
jp
jle
je
fiadd
loop
jns
test
mov
aad
sti
inc
sbb
mov
(bad)
repz
outs
mov
imul
push
aaa
and
fidivr
cmp
icebp
shl
jnp
int
les
cs
push
stos
call
fisubr
inc
or
popf
or
sub
and
jmp
icebp
xor
mov
(bad)
neg
or
push
sahf
dec
out
fdivr
sbb
and
dec
sbb
or
cmp
fild
mov
dec
cwde
enter
cwde
add
xor
cmp
push
sub
xor
dec
aaa
dec
ins
jle
imul
fdivr
lahf
jmp
sub
daa
dec
cmp
jae
sar
jg
out
sti
push
inc
lock
push
push
pop
cmp
lea
(bad)
fs
js
jo
call
push
imul
shl
xor
nop
dec
repnz
fdiv
dec
jne
cmp
fldcw
rol
pop
adc
and
test
xbegin
ficom
jbe
hlt
jle
ins
mov
sub
es
dec
xchg
call
lahf
shr
stos
sbb
into
add
sti
jo
adc
std
loope
lods
push
hlt
jb
xchg
sar
imul
inc
stc
mov
or
call
fwait
mov
mov
xor
ror
pusha
(bad)
adc
add
mov
xor
(bad)
aas
xor
fstp
adc
pop
call
add
sbb
inc
dec
out
and
movs
mov
jle
lock
mov
sub
push
movs
mov
pushf
push
dec
cmp
pop
ja
lds
jo
jnp
jnp
jns
jmp
xchg
sub
mov
es
add
pop
fwait
xchg
cmp
out
out
imul
mov
adc
mov
jne
sbb
je
sub
call
jmp
test
fistp
outs
ds
rcl
sti
push
int
bound
jno
out
push
js
jno
retf
xchg
inc
lock
dec
fnstcw
or
mov
loope
push
xchg
add
test
or
sbb
sub
sbb
movs
call
out
mov
inc
ret
(bad)
pop
das
ins
inc
adc
or
ror
xor
cmps
cmp
mov
(bad)
inc
cmps
repz
jne
aad
sbb
movs
pop
mov
xor
loopne
jge
aas
cmp
in
ins
int
daa
jg
xchg
gs
aad
hlt
lock
pushf
lods
push
mov
cmp
loopne
inc
loopne
or
imul
mov
lahf
in
fimul
cs
mov
push
fcomi
push
fistp
int3
adc
mov
jg
(bad)
mov
mov
mov
jle
jae
mov
adc
sub
fdiv
pop
xor
inc
jge
scas
push
data16
ja
movs
sbb
and
daa
xchg
pop
cld
xor
pushf
adc
xchg
cmp
ficomp
xchg
pop
add
adc
push
mov
dec
movs
loopne
jmp
dec
and
(bad)
aaa
retf
(bad)
xor
jae
add
pop
mov
ficomp
xor
add
out
addr16
rcr
xor
aad
push
fs
(bad)
push
jge
loop
adc
imul
pop
or
jne
or
and
inc
test
cmps
shl
ret
dec
(bad)
cmp
fdivp
ret
lods
ins
dec
das
ja
mov
add
movs
mov
inc
mov
or
retf
adc
adc
push
jecxz
cli
ins
mov
inc
sub
fdivr
popa
in
retf
imul
aam
push
das
cld
sbb
mov
add
mov
jb
popf
clc
or
push
int
dec
pop
and
out
mov
adc
xchg
int
or
and
stc
movs
add
or
(bad)
icebp
mov
mov
mov
arpl
cdq
rcl
popf
mov
ins
inc
hlt
aaa
xor
std
pop
mov
daa
dec
mov
sbb
jmp
or
cwde
xchg
rcr
adc
jmp
cli
mov
(bad)
int
std
mov
mov
out
(bad)
cmp
jmp
enter
sti
hlt
int
mov
push
retf
jno
clc
mov
mov
sbb
(bad)
sub
pop
jmp
push
dec
xchg
or
push
and
or
sbb
fnstenv
stos
sti
cmp
ss
sti
xor
push
xchg
sbb
cmps
jns
sti
(bad)
xchg
inc
aam
fdivrp
movs
pop
mov
mov
pop
lahf
adc
mov
adc
jg
(bad)
mov
loope
cmps
ret
cmp
iret
into
dec
xor
jae
mov
das
sbb
or
mov
xor
jnp
dec
sbb
inc
outs
movs
add
xlat
stc
pusha
push
loope
or
cmp
fdivp
push
into
xor
inc
push
jnp
or
popa
sub
stos
and
mov
mov
cmps
push
dec
jb
stos
jo
xchg
gs
(bad)
mov
arpl
shl
in
mov
add
cmp
(bad)
fld
dec
ss
test
mov
lods
mov
fsub
adc
mov
dec
les
xor
mov
loope
iret
and
cmp
int
retf
xchg
sub
jne
pop
add
(bad)
jecxz
xor
sbb
push
sub
adc
in
xchg
dec
pop
inc
aam
jecxz
add
fst
lds
in
outs
rol
inc
cdq
loopne
jg
dec
sub
sbb
call
gs
mov
ins
stos
fidivr
adc
cmp
sti
dec
push
mov
dec
sub
xchg
call
scas
mov
in
or
imul
retf
dec
popa
push
adc
jbe
xor
add
and
enter
pop
hlt
(bad)
ins
cmp
lds
stos
(bad)
popf
or
pop
cwde
or
pop
(bad)
jb
and
loopne
pop
scas
std
mov
lds
dec
adc
repnz
lds
jg
leave
rcl
cmps
adc
mul
scas
shl
stc
mov
repnz
mov
out
ins
aas
push
mov
inc
push
hlt
add
push
leave
inc
fld
ss
mov
mov
mov
adc
adc
data16
or
xchg
cmps
pushf
pop
lods
lahf
mov
outs
fiadd
or
cmp
mov
popa
mov
mov
inc
mov
push
addr16
pop
jecxz
repz
lods
out
test
out
pop
(bad)
sub
cdq
call
push
mov
cld
stc
ficom
enter
push
mov
loop
imul
and
adc
sahf
push
bound
mov
fmul
std
adc
jae
adc
xlat
(bad)
pusha
outs
sbb
push
popf
sbb
loope
jbe
and
shr
sbb
dec
mov
rcl
pop
mov
sbb
mov
repz
les
jns
stos
push
mov
aaa
cs
ret
jg
ret
(bad)
icebp
pop
inc
aad
pop
jo
cmp
inc
push
push
inc
lahf
out
add
xchg
sbb
sub
clc
loope
dec
test
das
std
inc
pop
fisub
sbb
sbb
outs
mov
cld
add
sub
mov
dec
cwde
dec
test
daa
outs
mov
pushf
adc
call
dec
cld
sub
cmp
jg
adc
sbb
or
aad
inc
retf
xchg
fwait
mov
xchg
pop
iret
movs
int3
mov
test
xlat
mov
mov
scas
out
ins
push
jo
or
push
sbb
sbb
jbe
jns
cmp
jmp
gs
iret
jnp
adc
call
and
imul
aad
scas
push
mov
inc
test
nop
lea
add
popa
lds
push
xlat
mov
out
xchg
jne
iret
add
jmp
test
sbb
inc
inc
popa
clc
test
jnp
and
sbb
loope
gs
and
xchg
sbb
adc
sbb
sbb
pop
adc
fist
xchg
shl
cli
outs
popf
cli
add
cmc
lds
push
push
xchg
pop
clc
aas
dec
mov
sub
inc
add
lock
sub
add
lods
sbb
jne
in
pushf
iret
enter
leave
adc
aam
sub
daa
mov
mov
push
dec
xchg
daa
mov
clc
dec
xchg
call
outs
add
mov
ror
or
xor
loop
out
jno
ret
add
cmp
mov
scas
(bad)
push
dec
mov
lods
or
xor
xor
xchg
int3
iret
rcl
sub
outs
push
xchg
loopne
data16
(bad)
fistp
ins
xor
xor
scas
jg
lahf
push
cmp
jmp
mov
push
sub
cmp
mov
loope
sub
stos
mov
shl
xor
test
jo
cmp
add
jae
and
mov
ins
js
pop
jecxz
pop
push
sub
out
jecxz
call
outs
mov
xchg
call
dec
mov
lods
dec
xchg
in
push
ins
stos
jnp
mov
add
or
push
mov
sbb
call
das
sti
sub
or
push
outs
dec
call
or
add
mov
lahf
movs
repz
ret
aas
mov
test
adc
ret
jp
xchg
cmp
dec
jle
jecxz
outs
nop
xor
call
je
repz
dec
arpl
(bad)
js
or
loope
loopne
aam
xor
pop
inc
add
call
or
sbb
sbb
shl
imul
add
add
add
push
push
sbb
adc
add
dec
xchg
scas
sub
jne
mov
mul
push
loop
out
sar
dec
retf
push
mov
adc
push
sub
cs
pop
fistp
out
sub
xchg
xchg
cli
xchg
fst
and
iret
(bad)
in
mov
mov
pop
xchg
inc
xchg
xchg
fwait
pop
lock
shl
sub
xchg
shr
daa
sub
xlat
retf
inc
add
retf
cmp
inc
ficomp
cmps
into
adc
rcl
mul
cld
data16
xchg
pushf
xlat
fs
repz
xchg
and
aad
xor
fisub
mov
xchg
xchg
(bad)
adc
sbb
shr
es
jae
outs
sub
sti
loopne
and
(bad)
ficomp
xlat
jmp
dec
sbb
dec
add
pop
or
mov
stc
addr16
adc
popf
sar
xchg
rep
dec
dec
gs
cmp
mov
mov
xor
cmps
dec
sub
xchg
dec
mov
xor
ins
sub
leave
jno
cmc
xchg
nop
push
std
or
sbb
pushf
pop
inc
mov
inc
pop
add
dec
stc
sub
jg
test
mov
sub
imul
pop
rol
mov
sub
cld
sbb
loop
jmp
pop
jnp
aad
rol
pop
lods
mov
(bad)
or
outs
aam
mov
jecxz
out
pop
sbb
sbb
mov
mov
mov
jae
call
cmp
outs
adc
cmp
mov
and
xchg
jl
or
ss
stc
cmp
ss
sub
in
xchg
movs
aaa
sbb
iret
add
unpckhps
setb
out
ds
add
cmc
pusha
mov
lods
arpl
outs
shl
pop
div
mov
jne
sar
pop
push
sbb
arpl
ficomp
jnp
lock
mov
sub
jmp
mov
shl
xor
fistp
rcr
ret
fs
stc
in
(bad)
retf
or
cmp
lahf
jmp
lahf
push
ror
popf
(bad)
add
jb
push
les
shr
(bad)
lods
mov
dec
jl
xor
push
inc
push
imul
shl
aad
cmp
adc
jp
jg
inc
adc
cmp
pop
out
jmp
adc
xor
jb
pop
in
cmps
sbb
mov
jg
dec
adc
pop
add
stc
push
ins
aas
or
das
add
sbb
imul
mov
xor
sub
es
and
sbb
pop
xchg
push
sub
test
int
(bad)
cmp
add
clc
int
mov
jg
fistp
cmps
push
idiv
cmps
dec
cmps
sbb
mov
push
cwde
fsub
arpl
jns
xchg
jo
push
dec
xchg
mov
xchg
dec
cli
mov
(bad)
xlat
aad
ins
pop
push
das
(bad)
outs
xchg
add
push
out
and
inc
cmp
mov
idiv
int3
sub
jecxz
jnp
into
or
mov
xor
in
mov
cmc
mov
push
push
xor
pop
add
test
loope
pop
in
adc
imul
sub
mov
cmp
push
div
jae
fst
jmp
pop
pusha
sbb
pusha
jns
fcom
ds
cdq
ja
dec
cmp
test
jg
jb
(bad)
imul
out
xchg
popa
xchg
fist
mov
test
out
add
sahf
sub
mov
jae
mov
dec
retf
sub
cs
adc
dec
rcr
std
loopne
jg
jo
fadd
mov
loope
cmc
test
mov
aas
ins
xchg
pop
adc
dec
adc
sub
push
pop
pop
pop
bound
inc
stos
aam
jae
pop
mov
mov
das
mov
fst
mov
mov
fisttp
mov
shl
repnz
inc
push
cmp
fnstcw
push
rcl
retf
movs
mov
xor
pop
xor
out
push
int3
push
push
jle
sub
mov
push
lods
sub
sahf
sti
cld
mov
pop
call
rcl
in
out
pop
jle
cmp
(bad)
pop
je
je
fisubr
xor
lock
adc
xchg
int
aaa
clc
cli
(bad)
mov
ds
fadd
aam
(bad)
pop
or
mov
loopne
push
jo
jne
push
cmp
(bad)
cmp
js
xchg
loope
pop
aas
js
scas
sub
adc
xchg
jge
or
xchg
and
outs
data16
inc
int3
popa
jmp
mov
les
fld
retf
xchg
or
sub
inc
dec
cmp
lods
mov
or
cmp
int
xlat
cmp
xor
or
xchg
mov
inc
add
dec
pop
gs
(bad)
mov
jb
scas
(bad)
dec
ds
hlt
cs
pop
sub
jmp
fcomp
xchg
sbb
push
scas
data16
xchg
pop
orps
mov
fdiv
xor
adc
push
xor
inc
and
loop
lods
sbb
jg
fistp
pop
adc
cmp
sbb
push
jge
push
xlat
or
(bad)
jmp
pop
xchg
sub
or
pop
(bad)
int
ins
pop
int3
sbb
cpuid
std
aas
scas
bound
or
scas
dec
dec
lea
sbb
or
pop
ss
xor
imul
and
dec
push
les
dec
in
mov
inc
mov
out
mov
pop
dec
imul
inc
sub
repz
daa
cli
and
add
shl
push
stos
cmp
mov
test
cmp
movs
xor
pop
jmp
out
inc
mov
or
dec
sti
sub
add
icebp
and
mov
xor
jae
add
xor
rcl
sbb
test
nop
sub
imul
scas
pop
retf
(bad)
lahf
sbb
cmp
ins
inc
test
dec
jp
call
ins
push
pop
into
or
dec
pop
int
sbb
je
jae
fist
aad
add
sub
cmps
loop
mov
stc
jmp
push
mov
in
in
sbb
retf
jnp
(bad)
mov
mov
add
int
push
retf
fimul
jg
xor
leave
mov
(bad)
mov
inc
push
inc
sbb
std
mov
mov
lock
xor
repnz
sbb
adc
lods
mov
stc
push
icebp
mov
pusha
(bad)
fstp
fdiv
or
rcr
clc
xchg
inc
inc
sub
outs
sahf
mov
loopne
sbb
loop
pop
fmulp
cmps
fadd
jnp
xchg
int
mov
cld
xlat
mov
inc
popf
jns
into
ja
dec
int
icebp
sbb
pop
out
inc
mov
adc
dec
cmp
fwait
add
dec
es
sub
stos
outs
jb
mov
int
and
push
mov
ja
pusha
mov
inc
ja
push
bound
lock
jbe
stos
push
cmp
add
ds
jp
jle
mov
clc
fldl2t
or
dec
push
or
jb
es
int3
inc
rcl
add
(bad)
jne
xchg
mov
shl
lods
xchg
or
aaa
aam
cmps
cwde
jmp
fidivr
cmps
xor
outs
aad
jb
cmp
jle
push
inc
ret
push
mov
or
add
xor
xor
sub
push
dec
fs
xlat
dec
ja
and
and
retf
xor
es
pop
sar
xchg
push
inc
repnz
out
popa
and
mov
les
jbe
ins
mov
mov
and
and
sub
pop
xchg
ja
xchg
in
mov
jle
lods
inc
loopne
mov
stc
add
inc
in
xchg
and
dec
mov
add
arpl
and
mov
nop
(bad)
cli
dec
pop
(bad)
dec
js
xor
sbb
outs
mov
test
xlat
ret
repnz
sahf
sti
stos
dec
shl
cmp
in
popf
stos
pop
cs
in
shl
gs
sar
sub
outs
or
lds
pop
push
imul
stc
xor
xchg
dec
sub
cwde
pop
cdq
mov
outs
pop
sbb
mov
loope
enter
shr
dec
or
adc
jp
es
fild
push
mov
jg
add
lock
add
bound
push
imul
pop
push
dec
test
dec
cmps
mov
imul
inc
add
inc
out
les
iret
into
jecxz
pusha
cmp
(bad)
fbstp
xchg
push
stos
cmovno
adc
sbb
rcr
loope
out
mov
mov
lods
push
imul
aas
push
jae
xchg
xlat
sub
enter
imul
xchg
xchg
inc
cmps
retf
iret
xchg
pushf
lock
push
mov
(bad)
jbe
xchg
sub
outs
into
add
adc
mov
cdq
sbb
mov
jnp
in
xchg
lock
jns
lock
pop
shl
leave
js
and
jmp
lock
(bad)
pop
pop
dec
movs
clc
cli
pop
sub
jmp
add
shl
outs
mov
or
outs
push
loop
push
push
xor
into
ins
mov
push
add
and
inc
mov
sub
shld
push
repz
in
in
popf
cmps
pop
loopne
lods
cdq
pop
dec
loop
loope
jge
out
adc
stos
and
jb
push
mov
sub
jb
rol
pop
popa
xchg
test
mov
xchg
fdivr
(bad)
dec
push
fcom
pop
push
jle
fnstenv
xchg
mov
sub
imul
loopne
cld
pop
jge
gs
sbb
sar
jp
mov
sahf
sub
pusha
push
and
mov
movs
pop
icebp
pop
xchg
or
aaa
push
push
xchg
std
cli
sub
jmp
test
push
inc
repnz
dec
mov
xchg
fmul
cmp
int3
xchg
dec
sbb
push
push
sbb
iret
mul
ds
mov
push
(bad)
outs
call
push
fwait
pop
in
dec
add
adc
call
mov
ret
cmp
xchg
out
sub
fistp
rcl
jne
(bad)
xor
add
je
aam
or
and
mov
test
and
das
and
jae
into
cmp
cs
adc
add
pop
outs
in
fbstp
jb
stc
adc
addr16
cld
sahf
aad
outs
and
cmps
mov
test
pushf
jne
jbe
mov
dec
les
mov
pop
test
js
lds
jecxz
push
pop
(bad)
jbe
jnp
cmps
repz
inc
or
call
xor
mov
dec
retf
add
retf
adc
stc
shr
ss
inc
cwde
enter
iret
push
in
ins
cld
fbstp
repz
outs
jne
cmp
cmps
cmps
pop
movs
mov
or
cs
fild
out
jmp
test
shr
out
push
push
sub
fcomi
mov
frstor
xchg
adc
stc
js
sub
jbe
sbb
fist
pop
es
aas
ret
and
std
push
xchg
inc
or
dec
scas
push
xor
pushf
retf
ret
(bad)
cmp
push
leave
outs
inc
and
stos
pop
inc
fst
dec
jecxz
adc
jno
retf
sbb
inc
in
test
popa
mov
pop
or
add
sub
es
or
cli
mov
fistp
add
ja
test
cmp
xlat
call
in
mov
mov
ror
and
sub
popa
retf
adc
mov
sbb
mov
call
mov
cs
and
dec
pop
scas
lods
outs
lock
mov
mov
std
jmp
pop
cld
mov
cs
xchg
mul
mov
or
scas
movs
bswap
push
test
cmp
ficomp
jnp
pop
mov
xchg
mov
mov
and
mov
inc
pop
cli
pop
out
jae
(bad)
adc
dec
push
mov
pop
sub
fs
xor
cld
and
lods
(bad)
ja
sbb
pop
je
out
cmp
inc
adc
inc
ja
stos
lods
mov
sub
mov
mov
mov
dec
inc
mov
cmp
push
inc
inc
push
stc
into
daa
sbb
inc
push
adc
fdiv
add
ret
jmp
pop
sub
nop
lea
cld
xor
adc
sub
fs
outs
inc
pop
inc
(bad)
daa
or
mov
mov
(bad)
movs
pop
push
dec
ror
inc
pandn
loope
ja
(bad)
lods
ficom
into
push
popf
mov
xor
mov
add
sbb
das
ds
test
ficomp
lea
inc
aad
fsubr
ins
fucomi
jo
sbb
mov
xor
loope
sahf
mov
ss
mov
mov
bound
clc
rcl
xor
push
and
pop
scas
mov
(bad)
out
stos
ss
nop
daa
xchg
nop
popa
aas
push
and
mov
mov
sti
retf
mov
mov
loop
sar
fdivr
xor
aaa
mov
jne
push
push
pop
cmp
xchg
test
ficom
xchg
loop
or
cmp
into
fsub
ins
jmp
outs
xor
iret
pop
test
or
aam
hlt
js
cld
xchg
stc
dec
imul
(bad)
fist
sti
in
cmp
add
cdq
push
xchg
int3
mov
push
fnstsw
clc
fisub
in
inc
int
rcl
ds
ror
loop
jge
call
imul
and
stc
call
pop
xchg
ret
inc
xchg
cmps
xor
add
push
out
mov
dec
cmps
dec
pop
xor
xor
push
ror
mov
and
lea
fucomip
dec
xchg
sahf
pop
imul
loope
icebp
cmp
mov
(bad)
mov
and
add
jp
outs
jae
div
or
add
int
jg
push
ds
push
xchg
es
or
call
pop
inc
imul
(bad)
pop
iret
arpl
(bad)
cs
test
cmp
mov
fmul
(bad)
xor
pop
mov
mov
push
arpl
and
cmps
cmc
jne
xchg
xor
shr
test
jmp
call
fidiv
es
adc
(bad)
xor
pop
mov
add
and
movs
aas
push
icebp
mov
mov
sahf
sbb
or
sbb
mov
icebp
push
or
je
sti
pop
mov
icebp
jge
(bad)
fwait
div
je
(bad)
jo
cdq
cdq
out
mov
inc
jg
sbb
xor
xor
cli
jnp
jbe
mov
xor
xchg
dec
inc
or
cmps
add
(bad)
repz
adc
mov
loopne
stc
jno
and
out
test
jmp
cmp
scas
outs
packsswb
out
cmps
ktestw
movs
mov
push
ins
retf
adc
or
pop
je
fwait
xchg
xlat
mov
cmpxchg
lods
in
inc
adc
mov
adc
(bad)
mov
pop
bound
stc
js
retf
jl
cwde
out
in
xlat
mov
hlt
sahf
fnstenv
add
rol
(bad)
in
in
adc
push
jbe
cmp
mov
adc
aas
nop
cmp
sahf
sti
mov
shl
or
dec
mov
xor
call
xlat
mov
xor
mov
mov
mov
inc
iret
add
push
adc
hlt
adc
das
lea
sti
jp
pushf
pusha
rcr
push
jle
cld
pop
fcomp
xchg
pop
cld
mov
(bad)
jle
or
shl
aad
movs
cmps
sti
sbb
sbb
adc
fisub
imul
xor
int3
popa
ds
jne
mov
push
mov
mov
or
cld
xchg
push
sahf
push
jmp
mov
mov
add
in
dec
pop
push
fnstsw
push
or
dec
jmp
pop
ret
test
xor
mov
neg
and
div
or
jecxz
dec
push
jno
loop
jns
stc
loopne
je
xor
fs
mov
xchg
sar
jo
inc
push
cdq
mov
fcmove
xor
sbb
or
pusha
xchg
pop
lds
or
repnz
stos
sti
xchg
sbb
jmp
jbe
pop
or
mov
sub
mov
inc
mov
xor
sbb
ins
xchg
shr
in
mov
jl
lahf
xor
jl
inc
outs
xor
test
xor
or
or
cwde
jg
in
add
add
int
in
int
xchg
and
mov
in
dec
imul
inc
in
push
push
mov
and
mov
popf
push
ficomp
add
aam
call
adc
jb
mov
mov
mov
lods
cdq
popa
mov
cwde
push
inc
js
mov
bound
sbb
dec
adc
pop
dec
xor
movs
push
push
dec
jmp
aas
xchg
mov
sub
pusha
pop
in
and
je
dec
aas
push
sti
adc
scas
jns
jg
imul
mov
mov
xchg
int3
into
imul
mov
arpl
popa
adc
and
mov
sub
jne
mov
xchg
popf
pop
jb
jg
xchg
adc
arpl
(bad)
movs
test
jo
fwait
jno
jl
jmp
cs
or
mov
xchg
add
mov
jecxz
jge
mov
retf
and
cmp
sbb
mov
les
xchg
retf
sub
popf
les
adc
(bad)
icebp
in
add
inc
or
lods
in
add
int
jno
ror
loop
stos
jecxz
jg
and
or
call
ja
test
inc
inc
push
hlt
jns
or
fiadd
and
mov
adc
jmp
xchg
cmps
mov
std
and
jge
aam
xor
push
shr
sbb
push
(bad)
fadd
sub
into
dec
cmp
daa
das
pushf
mov
gs
jns
sti
jb
movs
aam
or
into
and
mov
adc
mov
js
xlat
xor
adc
sbb
ret
scas
push
in
stos
mov
inc
lds
mov
or
mov
ds
mov
jg
add
ja
fincstp
ins
aam
inc
dec
dec
jnp
and
rcr
cli
iret
or
mov
push
xchg
xchg
dec
cs
int3
xor
xor
xchg
push
xor
mov
loope
cmp
mov
aad
lahf
and
fldenv
in
pushf
test
jno
mov
mov
fs
jo
xchg
lea
mov
cmps
sbb
jl
push
mov
(bad)
jno
ss
mov
xor
xor
(bad)
xor
pop
enter
cmp
jae
psubq
mov
test
and
jl
cli
jl
sbb
push
sbb
add
and
or
sbb
scas
and
mov
test
std
pusha
sub
inc
add
jge
cmc
add
aad
sub
jno
pop
nop
fcmove
dec
push
push
dec
enter
jnp
push
sbb
adc
inc
ror
inc
mov
(bad)
enter
dec
in
xor
add
aas
mov
(bad)
cmps
or
call
push
and
mov
movs
xor
xor
int
ins
jo
fisub
xor
xchg
popa
and
mov
das
dec
cli
icebp
outs
js
dec
and
push
inc
push
lods
fdivr
(bad)
pop
dec
popf
call
stos
(bad)
jno
fidiv
aas
inc
push
mov
xchg
inc
bound
mov
pop
add
(bad)
xchg
cmp
out
in
or
sbb
adc
aad
div
or
pop
out
xlat
imul
sub
push
enter
sbb
or
push
enter
mov
aam
out
or
aas
js
mov
mov
mov
pop
cmp
out
call
inc
push
pusha
rcr
sbb
movs
imul
xchg
pop
sti
fldenv
cld
mov
int
mov
std
xchg
or
movs
xchg
stc
lock
das
jne
fbstp
pop
inc
call
stos
mov
jecxz
jb
xor
push
pop
ficomp
mov
jp
sbb
sbb
xor
adc
daa
xchg
sub
jmp
inc
mov
bound
in
gs
outs
add
out
adc
out
xor
rcl
and
pop
jmp
inc
mov
movs
cmc
(bad)
cwde
inc
mov
out
cmps
jmp
popf
scas
into
xchg
hlt
nop
pop
scas
fwait
cwde
and
cmc
add
xor
inc
(bad)
ficom
ins
fidiv
inc
hlt
retf
int
pop
and
inc
jl
scas
idiv
sub
cmp
aad
and
out
repz
inc
mov
(bad)
loopne
ja
(bad)
out
xlat
pusha
mov
add
out
pop
fnstsw
jle
pop
pop
in
adc
pop
cmp
test
(bad)
push
test
add
sub
sub
addr16
out
(bad)
icebp
in
sub
loop
xchg
inc
imul
mov
jp
cs
(bad)
dec
(bad)
retf
cmp
call
jmp
jg
std
mov
cmc
lds
dec
es
aam
sar
test
mov
aaa
iret
sbb
dec
xor
dec
push
cmp
inc
cmp
mov
adc
call
ja
loop
in
pushf
imul
mov
mov
mov
mov
push
or
jmp
or
sbb
xchg
xor
das
jmp
mov
mov
(bad)
sbb
sub
call
lods
ds
pop
xor
rcl
repz
aam
aaa
(bad)
leave
pop
mov
dec
ret
fdivp
pop
fs
clc
mov
aaa
inc
leave
inc
mov
push
in
enter
pop
xor
sub
movs
movs
(bad)
lds
xchg
shl
add
mov
cmp
sbb
lea
push
into
pop
jmp
xchg
and
dec
mov
fwait
int
or
add
jbe
jbe
mov
(bad)
imul
es
jmp
ror
adc
mov
std
leave
imul
cmp
data16
mov
mov
or
sbb
int3
pop
div
inc
aaa
push
sub
or
adc
cli
jbe
lahf
pop
fld
sub
out
pop
mov
ss
pop
psubsb
dec
outs
aas
ss
sbb
sbb
mov
and
inc
jp
pop
mov
lods
(bad)
xchg
inc
adc
loope
sahf
mov
cli
(bad)
fbld
call
pop
(bad)
cmps
cld
call
mov
jecxz
jmp
shl
pop
or
ins
rol
out
pop
rcr
in
cmc
pop
jnp
mov
mov
mov
add
mov
das
fistp
pop
pop
cmovl
mov
push
xchg
jmp
shr
xor
out
in
sbb
push
xchg
sbb
adc
add
mov
es
call
mov
mov
push
adc
sub
inc
mov
enter
cli
ret
fstp
pop
add
jg
sbb
lock
cdq
loop
in
aad
push
into
lods
push
sub
data16
repnz
clc
loop
mov
popf
cmp
cmps
push
neg
lods
loope
sbb
sub
xor
jge
mov
pop
pop
cld
inc
enter
mov
addr16
(bad)
mov
out
xor
in
jmp
cdq
scas
in
sub
fnstenv
jno
mov
lods
xor
movs
cmps
aas
lahf
test
sbb
scas
dec
or
imul
rcl
mov
fsubr
popa
mov
fidiv
iret
or
cs
pminub
(bad)
inc
xor
pop
nop
jg
loop
pop
xor
jbe
dec
jmp
jo
sub
sahf
cmp
mov
ds
ror
fs
repz
test
or
push
cmp
(bad)
jnp
mov
xor
add
rcl
icebp
pop
xor
push
xor
jae
scas
mov
cld
push
fcom
push
cmp
add
adc
push
call
mov
or
(bad)
loopne
dec
cmps
and
cmp
push
inc
stc
jmp
fimul
add
push
fdivr
mov
sub
pop
jle
aam
xor
or
jne
adc
les
repz
cmp
add
jge
add
mov
dec
push
cmp
add
scas
push
xor
ja
and
fbstp
pusha
cmp
shl
mov
fcomp
fs
loope
xchg
cmps
fcmove
pop
xor
call
pushf
shl
sbb
cdq
cwde
shl
mov
mov
adc
mov
movs
pop
push
ror
mov
xlat
xchg
jnp
faddp
cmp
xor
cli
adc
repz
push
mov
cmp
xchg
into
(bad)
xchg
in
inc
jmp
xor
cmp
inc
inc
call
aas
pushf
xchg
xchg
ins
enter
mov
jmp
cmp
cmp
popa
mov
lahf
cdq
fbld
imul
sub
cld
not
movs
out
dec
mov
addr16
sbb
fmul
cmp
sbb
push
scas
mov
test
sbb
je
sbb
ja
pusha
sbb
xchg
fld
in
les
xor
cwde
dec
lock
and
mov
dec
cs
dec
jmp
sbb
sbb
call
es
inc
adc
fwait
mov
loop
mov
or
ret
sahf
and
jmp
sahf
inc
jg
into
shl
idiv
in
(bad)
loop
and
es
aad
xor
dec
std
dec
cmc
or
mov
xor
bound
fwait
mov
jp
or
pop
pop
adc
add
enter
sar
adc
imul
scas
or
sbb
jns
popf
rcr
sbb
and
adc
scas
mov
inc
inc
imul
(bad)
mov
repnz
shr
loopne
pop
mov
jmp
in
div
xor
xchg
test
outs
ins
mov
(bad)
xor
sti
add
call
ret
pop
imul
(bad)
xor
sub
cmp
sbb
pop
cwde
sti
pop
sub
xchg
cld
inc
arpl
(bad)
dec
das
jecxz
jl
mov
push
icebp
sub
dec
bound
sub
shr
stos
test
adc
and
cmps
cmp
inc
sbb
xor
icebp
inc
mov
push
jo
push
or
jmp
rol
es
jns
(bad)
jb
sub
(bad)
out
cwde
cmps
inc
fmulp
pop
jo
or
push
mov
je
mov
int3
inc
adc
inc
shl
out
pop
dec
addr16
xchg
sub
adc
xchg
mov
push
xor
es
add
cmc
push
mov
xchg
ss
mov
dec
sbb
pop
and
mov
push
nop
cmps
test
popa
adc
fmul
inc
and
push
jmp
push
imul
cmc
inc
repz
outs
call
lahf
jmp
xor
cwde
dec
test
lock
sbb
or
fcomp
mov
or
mov
jecxz
cld
outs
outs
adc
mov
sbb
into
or
add
push
and
push
test
xor
movs
mov
fincstp
cli
ja
pop
fldenv
mov
mov
pop
pop
mov
xor
jb
repz
cmovno
and
sbb
add
cwde
lds
int
xchg
dec
jno
loop
mov
movs
rol
pop
pushf
ret
popf
jmp
sbb
push
sub
mov
push
push
jbe
push
jmp
jbe
sti
mov
test
push
imul
jmp
retf
pop
call
(bad)
sti
push
aas
outs
mov
mov
pop
mov
dec
and
cmp
push
jecxz
push
loop
jno
push
hlt
inc
iret
adc
rcr
xchg
test
sbb
sub
popaw
stos
jg
ficom
aam
pop
jecxz
push
push
sbb
cdq
retf
push
jge
adc
shr
aas
cli
mov
sahf
mov
in
std
daa
fcmovu
inc
dec
cmp
add
push
lods
jecxz
pop
mov
bswap
jns
into
jae
and
adc
cmp
push
mov
lahf
(bad)
push
or
out
or
or
stos
pop
cmc
xlat
inc
jns
pop
adc
addr16
xor
and
hlt
jnp
jnp
push
ds
jmp
fnstenv
dec
fsub
or
inc
xor
fsubr
repz
pop
aaa
dec
sbb
loopne
add
aad
sub
xor
lods
jmp
xor
dec
iret
push
mov
push
imul
dec
shl
outs
std
sub
xchg
pop
hlt
inc
sub
das
fimul
iret
add
cmc
dec
cdq
stos
int3
inc
fwait
dec
pop
mov
jmp
stos
mov
sbb
and
test
xchg
mov
xchg
mov
sbb
dec
push
pop
test
add
rol
push
pop
or
sub
hlt
data16
add
dec
sub
iret
xor
jg
xor
push
adc
hlt
div
pop
mov
in
pop
cmps
xchg
stc
das
jb
adc
fnsave
and
pop
(bad)
aam
mov
cmp
adc
push
or
test
sbb
ror
push
pop
out
mov
out
clc
xchg
mov
pop
or
or
imul
jp
push
jle
mov
jnp
adc
lahf
ss
mov
jnp
xor
ds
jmp
shl
xlat
js
add
shl
xor
rcl
mov
mov
mov
mov
cmp
(bad)
mov
dec
fs
cmp
sar
xchg
xlat
and
aas
inc
out
sbb
cmp
jmp
sub
mov
push
inc
cli
cmps
fnstsw
lods
dec
mov
outs
add
adc
cdq
popf
cmp
(bad)
cwde
and
and
cmp
mov
sub
mov
bound
loopne
jecxz
xor
cld
cs
xlat
call
clc
xchg
dec
es
pop
(bad)
ret
mov
repz
dec
jl
int
addr16
add
cli
jg
and
cmps
scas
xor
sub
out
add
jno
dec
push
cmp
push
and
movs
or
dec
out
hlt
or
and
and
push
dec
outs
cmp
ss
sbb
push
dec
add
lahf
mov
mov
cmp
xor
ins
lea
shl
bound
aaa
sbb
lahf
fld
cmp
icebp
mov
pushf
inc
inc
jle
sub
cmp
mov
push
xor
sar
cmp
jp
adc
int
mov
int
aaa
fwait
xor
dec
arpl
hlt
loop
inc
adc
inc
xor
test
(bad)
adc
mov
aad
inc
push
xchg
xor
add
jns
daa
mov
jne
fsub
aad
lds
adc
out
and
jb
xor
fld
movs
or
lods
and
lods
out
loop
or
jecxz
ret
xor
cmp
add
int
sbb
jo
mov
ret
addr16
push
mov
xchg
push
outs
ja
std
ret
xor
faddp
jo
or
call
mov
ds
movzx
push
xchg
cmp
inc
fistp
cwde
adc
add
pop
ret
push
xor
leave
mov
jg
scas
scas
and
push
adc
mov
cwde
push
int
ds
(bad)
adc
loopne
push
mov
xchg
jo
pxor
outs
pop
xchg
mov
pop
mov
jne
je
cmp
fistp
rcl
repnz
jnp
out
unpckhps
in
push
sbb
xor
push
xlat
push
mov
dec
in
adc
xchg
dec
xor
(bad)
sub
adc
pop
mov
and
fcmovnu
js
lods
mov
adc
fisttp
call
fild
hlt
in
movs
sti
mov
fdivr
jecxz
sbb
loope
cmp
(bad)
icebp
mov
aam
pop
jp
and
jge
pop
out
cmp
cmp
mov
out
(bad)
jp
outs
jle
out
popf
and
mov
in
xchg
shl
cdq
je
and
(bad)
popf
inc
inc
xchg
dec
or
push
jp
fild
out
xchg
cmp
or
jb
and
mov
lahf
je
mov
(bad)
jb
xlat
jnp
or
shr
jmp
sub
scas
add
xor
pop
retf
out
loop
jae
xor
cmp
lds
mov
mov
out
fadd
and
pushf
inc
adc
cli
(bad)
fdivr
gs
sbb
pop
jmp
fiadd
cmp
mov
add
jb
cmp
cs
retf
les
test
in
cs
jno
adc
adc
test
outs
mov
pop
lods
mov
sub
cli
xchg
cmp
dec
loopne
scas
dec
out
or
lock
call
aad
ds
sub
fsubr
or
inc
sbb
adc
adc
and
gs
not
jns
jns
pop
add
push
cmp
mov
push
call
xor
mov
cmps
jge
sahf
(bad)
sbb
jge
cmp
xchg
add
ins
js
jmp
repz
push
imul
pop
sbb
mov
sahf
mov
rol
sbb
js
std
leave
fild
stos
and
jl
pop
xlat
xchg
cmp
add
adc
cli
push
xor
lock
sub
mov
outs
xchg
vmread
dec
in
mov
pop
les
dec
div
cmp
pushf
les
inc
xor
test
js
add
fs
xchg
arpl
and
inc
push
test
and
movs
out
mov
(bad)
xchg
add
sbb
out
or
or
arpl
shr
sbb
pop
add
add
mov
movs
push
int3
stos
inc
xor
jecxz
mov
int
(bad)
adc
jecxz
sub
and
mov
dec
leave
xchg
stos
cmc
mul
in
inc
cmp
jo
xchg
rcl
add
fisub
adc
jno
in
call
pop
mov
es
push
es
sbb
inc
mov
jmp
das
fild
retf
test
movs
and
scas
in
(bad)
pop
fisub
aad
aaa
mov
or
xor
pop
mov
lods
xchg
adc
std
gs
and
inc
inc
sbb
std
into
je
cmp
xchg
pop
cmps
out
call
mov
add
ror
ins
hlt
pusha
xor
stc
push
rcr
sub
jae
popf
nop
mov
jge
mov
xchg
fld
or
in
inc
push
das
xchg
ds
xchg
cmp
movs
cmps
xchg
mul
inc
cmc
out
sub
push
loope
(bad)
iret
push
cmp
sar
les
jge
inc
iret
push
or
push
jnp
or
xchg
je
jnp
jle
imul
ds
imul
pushf
jo
ror
ss
inc
repnz
clc
pop
(bad)
out
push
fild
aaa
popa
xlat
mov
or
pop
loope
iret
pop
daa
inc
push
out
or
jge
ret
mov
cmp
in
popf
popf
pop
scas
inc
outs
cwde
and
arpl
or
cld
xor
in
xor
je
cmc
jmp
adc
loopne
cmc
inc
das
loopne
sar
(bad)
call
push
mov
pop
inc
cli
jg
mov
xor
dec
loopne
sbb
pop
push
jmp
mov
clc
(bad)
pop
shl
shl
add
int3
test
loop
les
pop
std
pop
push
lods
aaa
pop
aaa
hlt
loopne
cwde
and
test
push
push
push
sub
repz
add
fs
push
mov
jns
in
movs
and
sub
sbb
rcr
push
fisubr
add
mov
sar
lods
jmp
push
jne
scas
mov
pop
lahf
aad
cld
mov
ins
adc
fs
cmp
push
push
jns
or
and
outs
outs
pop
mov
fs
into
sbb
sbb
nop
lods
dec
fsubr
pushf
loop
popf
out
cmp
jmp
mov
mov
imul
or
xchg
sbb
movs
ficom
leave
popf
push
add
repnz
out
out
xlat
cmp
imul
pop
idiv
inc
xchg
fsubr
adc
xchg
mov
jae
xchg
jle
lea
xor
scas
in
mov
test
arpl
xor
mov
pop
cmp
dec
fs
loope
pop
fisttp
lods
inc
loop
push
stos
inc
icebp
jns
movs
outs
or
fwait
cld
push
ins
iret
cld
repz
(bad)
gs
push
dec
pop
fwait
mov
and
in
and
mov
mov
sub
mov
out
les
dec
inc
cmp
sbb
sar
call
mov
movs
pusha
sbb
push
popa
pop
jb
xor
cmp
pop
popa
or
(bad)
iret
adc
in
fcmovbe
adc
inc
cmp
int3
cs
arpl
sar
mov
mov
das
jl
add
mov
imul
pop
mov
aam
cmp
fiadd
in
pop
iret
ss
inc
sbb
mov
data16
push
mov
mov
xor
sub
aaa
int3
outs
jnp
inc
aas
and
xchg
ret
mov
aad
ja
shr
jb
xlat
std
in
(bad)
xchg
je
push
sbb
in
in
mov
sahf
mov
in
cmp
cmp
and
or
or
imul
xchg
and
dec
xor
repz
popa
je
mov
push
or
mov
add
adc
sub
jmp
les
out
or
pop
popf
ja
cmp
xchg
je
stos
or
and
test
jg
scas
cmp
aam
cmps
cwde
stc
jmp
sti
jne
push
daa
xlat
dec
sub
mov
push
call
dec
cmp
inc
ret
scas
mov
pop
lock
add
inc
cdq
rsm
loop
jnp
or
lea
je
inc
das
pop
mov
mov
enter
nop
retf
sar
test
inc
and
push
mov
cmps
(bad)
dec
add
lods
fidiv
pushf
repz
std
hlt
in
or
std
xor
sub
cmc
push
shl
sub
jo
and
pop
mov
aaa
pusha
xchg
(bad)
aaa
xchg
leave
dec
(bad)
adc
xor
lahf
mov
daa
add
dec
dec
sub
nop
inc
mov
imul
movs
ret
lods
and
(bad)
jg
push
fist
cmp
cmp
jl
(bad)
jmp
push
sbb
retf
xor
jmp
adc
cmp
jmp
fimul
in
jge
retf
cld
jmp
mov
cwde
cmp
inc
cmps
push
in
aas
fimul
cmc
xchg
mov
aad
leave
pop
adc
push
cmp
nop
xchg
fdivr
std
mov
or
ins
mov
cmc
arpl
fsubr
or
lods
stos
cmp
add
jne
inc
sub
jecxz
stc
inc
sbb
dec
imul
out
out
mov
fdiv
push
(bad)
ss
es
jmp
adc
in
sub
jne
lock
not
mov
or
adc
into
jmp
xor
call
inc
out
pop
mov
shr
jecxz
sahf
retf
icebp
mov
aas
cld
inc
and
test
popa
sub
fistp
es
adc
or
sub
mov
aaa
dec
and
cmp
retf
and
stc
cmp
lods
xor
test
inc
test
cmp
ffreep
popf
rcr
add
or
shl
(bad)
icebp
mov
out
adc
out
retf
cdq
sbb
pop
test
adc
cmp
sub
lock
and
mov
mov
out
xor
mov
adc
sbb
adc
ret
mov
in
repnz
jmp
arpl
cmp
lds
push
cmps
sub
adc
sbb
xor
inc
inc
loope
mov
addr16
pop
cmp
ret
cmp
clc
xor
scas
rcr
and
xchg
xchg
jmp
pop
mov
add
ret
paddsb
ss
mov
nop
ds
outs
dec
aad
cmc
mov
ret
outs
cmc
sti
push
push
ret
pop
pop
cmp
test
iret
cdq
pop
or
jl
leave
xor
cmp
loope
aaa
ja
imul
and
dec
xor
mov
and
jl
or
inc
jl
push
and
pushf
mov
sub
jne
dec
jmp
call
adc
cdq
push
movs
sbb
movs
sbb
movs
cli
cmp
and
call
cmp
mov
ret
sbb
hlt
sub
fs
aas
fiadd
(bad)
push
cmp
fimul
test
retf
xchg
pop
xor
or
stos
and
mov
loopne
cmp
cmps
and
cmps
inc
enter
cmps
adc
pop
popa
pop
cmps
pop
test
jnp
jle
(bad)
dec
(bad)
cs
adc
les
add
(bad)
xlat
jnp
fistp
ret
les
ds
loope
fwait
adc
test
mov
jmp
pop
ficomp
xchg
mov
icebp
loope
sbb
stos
popf
div
lahf
xchg
or
cmps
aam
in
dec
ret
pop
lods
adc
arpl
jno
inc
ror
push
pop
cmc
sbb
mov
imul
push
push
add
sbb
xchg
das
call
in
sti
pop
out
inc
aaa
popa
aaa
enter
call
nop
aaa
pop
aad
and
push
dec
(bad)
fmul
fmul
test
ds
inc
inc
les
cdq
xchg
mov
push
imul
xchg
out
clc
das
ret
xchg
sbb
inc
and
cmc
push
repnz
mov
or
ror
dec
add
jo
jnp
cmps
jl
jmp
add
ins
loop
out
mov
xor
mov
and
dec
lods
xor
retf
pop
add
and
callw
adc
nop
push
jnp
sahf
cld
ds
fsubr
movs
lods
pushf
out
xor
iret
jo
dec
pop
stc
sbb
mov
dec
rcl
sahf
inc
pop
lahf
sub
sub
adc
jle
cli
sbb
enter
les
aad
aad
dec
outs
rol
out
fstp
inc
shr
fwait
(bad)
inc
adc
sbb
loop
push
fidiv
jno
dec
call
fcmovnb
mov
mov
add
(bad)
iret
int3
mov
xchg
arpl
into
sub
iret
mov
xor
iret
test
les
cmps
sub
mov
punpckhbw
push
retf
cmps
jmp
loopne
mov
or
inc
pop
jns
mov
(bad)
or
cs
movs
adc
sti
mov
iret
sbb
movs
pop
push
add
shl
mov
and
jg
xchg
sbb
stc
inc
outs
clc
mov
xchg
div
inc
mov
adc
int
push
push
iret
aam
sbb
loopne
fwait
mov
popa
lods
in
call
mov
mov
push
imul
xchg
out
dec
repnz
pop
jle
dec
jne
add
pop
sub
jp
sti
jo
push
cmc
cmc
inc
push
in
fs
jb
push
daa
inc
sar
shl
test
pusha
ret
je
fsub
push
cmp
test
adc
cmp
ficomp
or
jno
imul
fbstp
and
repz
mov
sbb
or
popa
jecxz
or
popf
jmp
dec
jno
fs
pop
adc
jmp
call
dec
cmc
es
xor
sti
retf
leave
or
inc
sbb
push
push
xor
inc
pop
in
or
sti
mov
int
push
mov
sti
rol
bound
fist
jge
(bad)
hlt
ret
les
push
inc
stc
sbb
lahf
mov
out
jmp
je
adc
inc
inc
cmp
xchg
fsubr
movs
pop
test
jecxz
push
jge
lds
xor
movs
movs
ret
sti
push
scas
(bad)
int3
mov
dec
mov
add
mov
or
pop
cmps
cmp
jp
add
mov
adc
push
jno
lea
popf
aaa
inc
retf
lods
jle
mov
fisub
sbb
mov
scas
scas
js
int3
and
xor
sbb
je
popf
jbe
jmp
test
dec
and
inc
ss
inc
pop
pop
leave
sar
and
push
int
cdq
dec
pop
lods
mov
dec
loop
or
or
inc
xlat
dec
dec
das
mov
or
cmp
inc
fist
push
xor
and
fisttp
sahf
push
rcl
cmps
push
sub
jb
pushf
mov
ins
or
mov
xchg
dec
icebp
mov
add
aas
(bad)
jp
pop
mov
sahf
ret
adc
clc
dec
and
repnz
mov
shl
adc
enter
pop
sub
dec
mov
repz
dec
cmp
(bad)
ja
dec
push
push
stc
out
ins
retf
sbb
xor
ret
xor
mov
arpl
test
mov
retf
adc
mov
push
leave
xchg
es
ss
test
inc
scas
in
loope
cld
adc
or
shl
jae
xchg
js
xor
popf
cmp
fimul
jp
packssdw
scas
cmp
add
outs
sub
lods
mov
and
iret
pusha
arpl
in
pop
(bad)
stc
sbb
and
add
and
sbb
dec
dec
ja
sub
dec
outs
call
inc
or
add
and
pushf
mov
inc
pop
lods
inc
ins
push
jmp
jmp
xchg
dec
cdq
sbb
dec
adc
mov
adc
stos
xchg
daa
fcomp
mov
sahf
xchg
mov
js
sub
jle
or
xlat
add
pop
dec
mov
add
fdiv
arpl
sbb
mov
push
inc
inc
mov
aas
jns
popf
ja
dec
aas
or
mov
sbb
int3
jmp
pop
inc
jmp
scas
(bad)
sahf
sub
shl
ins
js
out
jne
mov
dec
loop
sbb
mov
or
fadd
push
push
jmp
je
ins
or
enter
mov
repz
jge
mov
test
smsw
test
jo
int
in
test
fwait
hlt
dec
pop
sub
movs
jl
lock
dec
xchg
(bad)
mov
jnp
add
push
in
sub
jmp
dec
cdq
ror
popa
jle
xor
mov
and
stos
push
in
pop
nop
or
ret
pop
stc
mov
daa
and
(bad)
jecxz
and
ds
jg
repnz
icebp
repz
jae
nop
pop
jbe
cmp
retf
iret
nop
std
mov
and
movs
xchg
gs
retf
loop
and
cmps
fcom
mov
fstp
and
sbb
adc
push
mov
adc
fwait
aaa
dec
or
lock
jno
not
mov
in
and
js
enter
cli
retf
fnstcw
test
dec
dec
retf
(bad)
lds
sbb
int
aaa
ja
in
xor
adc
cmp
data16
test
mov
scas
test
mov
shl
sub
xchg
gs
mov
jb
loop
out
in
bound
cmps
cmp
mov
pop
bound
(bad)
cmp
int
cmc
sub
sub
retf
nop
cmc
xor
(bad)
push
dec
push
in
jae
rcl
xor
pop
mov
cs
pop
or
popf
in
lods
es
or
mov
pop
jbe
sub
je
(bad)
pop
dec
jbe
jmp
cs
sbb
xchg
mov
sbb
adc
sub
or
cdq
jl
loopne
ss
cmc
out
clc
enter
jecxz
popa
cmp
ins
bound
hlt
popa
sub
xchg
add
(bad)
retf
xchg
repnz
sahf
and
mov
cmp
sub
sub
mov
fs
xchg
push
jno
fs
je
or
push
push
cmc
sbb
clc
cmp
mov
out
mov
cmp
ja
sub
adc
movs
cmp
jmp
or
xchg
dec
icebp
sbb
movs
push
in
(bad)
xchg
sbb
or
pop
loop
call
lahf
or
repz
adc
xor
shr
xchg
push
and
dec
ret
stos
gs
pop
dec
aam
inc
jnp
pop
push
inc
cmp
dec
ins
daa
jmp
jo
fldenv
inc
daa
mov
call
(bad)
cmc
adc
bound
les
jo
mov
xchg
xchg
jnp
push
mov
cmp
std
fcom
gs
fs
push
xor
mov
jae
xor
mov
dec
add
add
stos
aas
dec
add
pop
and
jno
inc
push
scas
mov
out
test
jae
bound
cld
mov
pop
in
and
daa
xchg
dec
(bad)
das
push
pop
push
gs
call
stc
imul
pop
icebp
in
add
push
wrmsr
pop
sub
sbb
xor
pop
mov
test
or
mov
adc
test
stc
and
mov
fistp
cmps
pop
push
inc
inc
les
inc
pusha
cdq
test
data16
fadd
lods
adc
push
xor
addr16
repnz
xor
mov
loope
ror
outs
mov
sub
mov
add
repz
dec
cwde
dec
adc
mov
sub
push
cwde
push
outs
stos
pop
jne
push
pusha
fisub
(bad)
push
dec
out
and
add
test
fld
mov
test
xor
ficomp
cwde
dec
adc
jl
and
sub
std
retf
stos
xchg
mov
push
jmp
add
cmp
jmp
pop
ss
mov
fnstsw
dec
sbb
sti
jp
xchg
jg
stc
cmc
movs
into
pop
adc
dec
jns
jg
jge
or
or
sar
test
inc
les
sub
dec
sub
cmp
jl
jmp
cld
sub
leave
mov
or
push
cmp
aad
es
test
dec
popf
sub
loope
xchg
jne
out
daa
mov
sbb
jg
dec
and
mov
xchg
std
mov
imul
jo
(bad)
shr
sub
retf
outs
cdq
and
sub
je
rcr
and
cmp
sbb
imul
adc
cmp
dec
dec
nop
nop
cmp
ins
mov
add
sub
inc
xchg
sub
popf
mov
mov
xchg
popf
or
cmp
jne
addr16
mov
(bad)
in
(bad)
out
or
or
xor
in
sub
xor
imul
adc
mov
sar
mov
nop
test
inc
ret
xor
ins
repnz
leave
in
popa
xchg
repz
and
outs
clc
ja
or
test
xor
fld
jns
jmp
in
fnstcw
fs
mov
dec
mov
into
jmp
fcmove
(bad)
aas
cmps
push
fsubr
mov
fnsave
leave
cdq
movs
push
sbb
(bad)
dec
mov
(bad)
xor
adc
pop
in
stos
mov
jbe
jb
sahf
adc
cld
pop
loop
sahf
add
xor
aad
mov
inc
mov
stc
pop
cmp
pop
xchg
or
dec
fs
movs
ret
test
mov
out
and
jl
pop
pop
push
scas
mov
xchg
test
xchg
dec
sbb
cld
ret
popa
fsubr
push
ret
rcr
sub
push
push
ins
movs
leave
adc
call
inc
les
cmps
jg
mov
xor
mov
push
and
rol
test
jae
xchg
xchg
ds
inc
icebp
ins
outs
xchg
cmp
jmp
retf
call
shl
cld
push
add
mov
dec
dec
sbb
jb
mov
into
ja
add
ror
xor
pop
sbb
jmp
cmp
adc
sahf
pushf
dec
inc
and
fsubr
jmp
dec
jbe
(bad)
cmps
xor
iret
xchg
repz
sahf
add
ror
xchg
fiadd
and
cmp
sahf
push
in
cmp
inc
sub
pop
div
dec
dec
jl
push
popa
scas
inc
mov
xchg
mov
outs
jle
jle
repz
and
add
pop
shl
daa
popf
cmp
iret
repz
or
cli
cmp
adc
ret
inc
imul
xor
scas
push
fcom
out
fwait
stc
jnp
mov
shl
setae
xchg
sbb
aaa
cmp
ins
xlat
dec
push
mov
inc
cmp
lods
mov
add
cmp
(bad)
cmp
cmc
and
jae
xor
mov
movs
push
jmp
jmp
add
jp
scas
pop
(bad)
scas
push
retf
cwde
daa
cwde
into
jno
push
jge
aam
out
cmp
mov
fsubr
mov
inc
lfs
mov
mov
fimul
pop
icebp
inc
cmp
add
ret
cmc
add
lods
xchg
(bad)
jae
jg
lods
fs
xchg
jmp
jecxz
int3
imul
stc
cwde
inc
shl
fst
inc
cwde
or
loop
xor
mov
scas
icebp
inc
xchg
xchg
sbb
fistp
and
inc
jmp
call
and
add
repnz
es
sub
test
or
ins
mov
cld
or
pushaw
mov
or
dec
inc
push
jae
mov
adc
ss
sbb
fist
test
xchg
jg
sub
or
mov
mov
ins
or
and
ror
pop
push
dec
cs
add
adc
xor
jp
or
icebp
mov
outs
push
outs
lds
jne
xchg
sub
or
xor
mov
inc
push
es
nop
nop
out
adc
mov
clc
out
inc
cmp
or
mov
dec
cld
sar
aaa
push
repz
sar
jmp
add
sbb
inc
pop
cmps
or
mov
mov
jns
fidiv
fs
rol
and
mov
dec
and
lods
cmps
mov
jae
mov
ja
pusha
cmp
sahf
sub
fimul
adc
nop
mul
push
cmp
inc
cmc
pop
mov
rcl
lods
test
mov
mov
push
sub
(bad)
js
mov
xlat
jp
ins
pusha
xor
(bad)
jmp
fistp
jmp
cmps
pop
push
cmp
mov
or
in
cmp
jg
xchg
jbe
add
pop
(bad)
or
or
add
icebp
xchg
std
mov
fwait
xchg
or
test
bound
jl
fist
fs
push
shl
imul
mov
sahf
xchg
add
dec
and
cmp
dec
sub
xlat
mov
xor
mov
jns
fild
pop
call
add
fisubr
mov
mov
jbe
stos
cs
pop
sub
test
not
xor
lahf
aad
mov
xor
pop
sbb
mov
mov
popf
(bad)
fs
mov
dec
pusha
retf
adc
xor
add
mov
mov
loop
mul
xchg
imul
sub
aam
mov
je
add
cmc
sub
sub
pop
cmc
dec
jl
cmp
es
cmp
push
mov
xchg
mov
inc
cmc
mov
sbb
mov
xchg
in
stos
cmps
fdivrp
mov
sbb
(bad)
cld
daa
adc
cli
ret
xor
jo
out
iret
and
call
sbb
sub
jmp
dec
std
cli
sub
sub
psadbw
and
jl
inc
and
mov
push
frndint
jecxz
cmp
sahf
stos
pop
sbb
sub
mov
int
out
xchg
(bad)
gs
and
loop
ffree
pop
(bad)
xchg
dec
loopne
mov
movs
xor
out
jb
cli
and
outs
pop
cmp
push
leave
sub
dec
cmp
mov
and
pop
scas
mov
mov
or
mov
sar
ret
dec
fidiv
mov
in
jecxz
xchg
and
test
adc
pop
adc
pop
ja
test
and
add
or
ss
mov
adc
pop
pop
(bad)
ins
add
std
dec
rcr
fsub
mov
sbb
sub
std
sti
fld
stos
test
ins
fwait
in
inc
fwait
bound
xchg
pop
inc
mov
inc
popa
xlat
das
lods
aam
into
imul
mov
xchg
dec
xchg
pop
jmp
addr16
ins
lods
pop
sbb
lods
fwait
cld
hlt
test
xchg
hlt
and
div
mov
dec
xor
pop
jp
in
mov
mov
fdiv
test
lods
mov
cld
xor
xchg
fwait
or
cmp
cmps
lahf
and
(bad)
in
add
lock
ret
sub
jbe
fdivr
sub
fs
mov
imul
xchg
imul
cs
pop
retf
mov
retf
dec
or
lods
push
cmps
mov
add
jmp
mov
fist
pop
ret
ja
aam
mov
stos
shl
in
jo
cmp
and
out
retf
xlat
sti
fimul
sbb
push
dec
cli
mov
xor
inc
popa
xchg
iret
and
into
jae
mov
cmp
out
mov
pushf
add
icebp
movs
inc
js
fisubr
cmp
into
ja
xor
jnp
or
jp
enter
in
movs
mov
inc
xchg
sub
pushf
repnz
loopne
xor
cmps
jnp
sub
pop
repz
mov
push
call
leave
adc
mov
cmp
in
neg
or
push
ins
dec
es
mov
mov
xor
push
or
dec
aaa
das
mov
and
add
xor
repnz
jne
(bad)
in
fucomp
pop
iret
add
xor
jecxz
lea
loop
repz
pop
imul
mov
jo
rcr
or
xchg
rcr
je
sub
adc
xor
mov
mov
aam
xor
jno
arpl
imul
xor
mov
call
add
and
js
rol
add
add
dec
add
js
ret
pop
xlat
popf
leave
push
jecxz
mov
call
adc
popa
mov
mov
push
sbb
adc
pop
popa
int
and
bound
cwde
daa
iret
fiadd
jo
jl
cmps
pop
adc
mov
stos
mov
outs
mov
add
loop
cmp
cwde
xlat
jl
pop
out
mov
lods
or
mov
aad
xchg
adc
or
ins
inc
mov
inc
fst
push
mov
or
jge
mov
cmp
xchg
sbb
dec
sub
jae
dec
cld
pop
aad
and
mov
push
pop
call
jae
ds
push
dec
sar
jp
rcl
rcr
test
push
push
cmp
mov
pop
enter
pop
sbb
add
xor
sub
popa
lods
cmp
push
push
push
pop
in
mov
jge
mov
jmp
xchg
in
xor
xchg
pop
call
addr16
mov
jmp
ins
and
push
stc
mov
das
scas
cli
scas
rol
mov
mov
aad
scas
mov
jmp
movs
mov
arpl
mov
imul
stc
loopne
sbb
sbb
add
pop
lods
sub
xor
jmp
push
stos
ret
or
xchg
ins
jno
movs
mov
sbb
pop
mov
cmps
cmp
pop
mov
je
and
mov
and
into
pop
scas
loope
mov
je
out
push
jnp
push
jge
pushf
mov
adc
jge
retf
add
push
xlat
test
test
inc
mov
jo
sahf
sub
cmp
and
jg
push
test
xchg
push
jmp
jl
loopne
leave
call
sub
or
jle
fcom
push
jne
movs
into
mov
jl
icebp
inc
imul
lods
xlat
mov
adc
mov
les
adc
xchg
aas
pop
push
mov
ins
adc
jns
jp
push
push
xor
xchg
aad
in
and
test
(bad)
sbb
mov
mov
jne
cmp
inc
sub
ss
fcomi
into
xor
xchg
jne
xchg
dec
mov
add
or
lea
(bad)
mov
or
xchg
int3
cld
mov
sar
popa
mov
xor
mov
shl
fldcw
jl
xor
cmp
add
in
mov
or
out
jne
cmp
inc
(bad)
cmp
mov
mov
or
in
dec
jnp
pop
popa
icebp
dec
leave
sub
aas
fst
add
out
sub
imul
stos
or
ss
jo
push
sub
push
jecxz
test
fidiv
call
dec
mov
lock
add
ins
xchg
ret
mov
mov
adc
les
xchg
cmps
movs
clc
daa
icebp
out
into
and
fisttp
outs
leave
rol
movs
push
inc
adc
ror
cmp
jmp
in
xchg
ja
loop
clc
jle
adc
(bad)
xor
into
shl
adc
inc
mov
stc
inc
leave
div
fucomip
call
pusha
aas
jp
fwait
or
add
pop
dec
jbe
cs
xchg
arpl
mov
xor
sub
xor
arpl
jb
aam
aad
pop
fcomp
jnp
mov
fsub
vdivss
jb
mov
sub
fsub
dec
movs
jmp
push
mov
ds
jb
adc
or
fadd
jno
fcom
mov
gs
adc
out
fs
js
sub
sub
jb
cmp
stc
xor
mov
add
sub
xlat
sub
jo
mov
rcr
push
shl
(bad)
test
lods
sar
adc
sbb
push
pusha
repnz
cmp
mov
test
jns
inc
(bad)
fld
mov
add
les
pop
push
out
sub
sbb
inc
daa
data16
and
dec
dec
cmp
push
push
dec
(bad)
jb
or
int3
pusha
iret
lock
sbb
jmp
test
push
xor
rcl
sahf
call
lock
cmp
xchg
ja
mov
xchg
loopne
inc
cld
pop
imul
xor
dec
mov
popf
js
push
lea
icebp
loope
mov
mov
sbb
inc
clc
mov
push
fst
pop
std
pop
inc
jnp
std
or
dec
in
jmp
xchg
mov
lods
pop
out
push
jns
sub
repz
loopne
jl
lea
push
xor
jmp
call
mov
cmp
movs
(bad)
ret
or
in
and
(bad)
out
js
aaa
mov
xor
lock
enter
(bad)
cmc
mov
jno
(bad)
pop
mov
sub
push
cmp
xchg
hlt
enter
loope
loop
shl
xor
mov
(bad)
enter
repz
add
jbe
cdq
and
pop
jge
je
push
jne
pop
ja
stos
clc
push
rol
ja
xchg
stos
xchg
call
xchg
and
call
sbb
aad
sub
fimul
enter
mov
jmp
add
add
bnd
es
xchg
or
add
outs
xchg
adc
icebp
imul
push
or
mov
iret
(bad)
mov
inc
mov
sub
test
push
jno
fcmovu
pop
ins
xor
outs
pop
sub
push
test
push
or
cld
loope
add
outs
stos
mov
fcom
dec
add
xor
push
cmps
stc
sub
pop
icebp
mov
ja
push
inc
fidivr
pop
rcr
in
(bad)
adc
retf
xchg
cmps
add
or
loop
fld
(bad)
in
ror
out
call
jg
push
repnz
aas
cs
loopne
mov
mov
xchg
mov
sbb
pop
cwde
mov
lahf
mov
jno
lahf
inc
add
mov
or
leave
pop
adc
(bad)
mov
imul
add
adc
jge
das
mov
shl
out
fidivr
test
adc
sub
xchg
int
push
add
mov
je
push
ret
sar
arpl
jmp
stc
adc
mov
out
sub
shl
cmps
inc
push
or
ss
aaa
sar
push
dec
cmps
inc
and
pop
or
mov
cwde
pop
mov
cmp
jmp
xchg
out
js
sbb
out
test
add
out
ror
es
mov
stos
sub
xor
and
xchg
dec
mov
fwait
int
mov
pop
jnp
das
inc
adc
sbb
jmp
es
cdq
push
jns
push
dec
jne
js
test
nop
imul
add
pushf
rol
mov
or
pop
sub
mov
jne
fcmove
adc
sbb
out
sub
out
enter
into
es
jns
ja
(bad)
fnstcw
rol
jno
jp
ss
pop
fldcw
xchg
sbb
dec
fucom
into
test
(bad)
stc
jo
sahf
sub
test
loop
fdiv
inc
xchg
jnp
cmps
pop
sbb
xor
sti
sbb
cli
pop
xlat
movs
and
sbb
xchg
jge
fisubr
mov
loope
dec
sbb
pop
(bad)
sbb
dec
sahf
jae
sbb
das
das
mov
cmp
leave
sub
adc
push
pop
ret
add
out
mov
movs
idiv
fisttp
jg
cmc
es
xchg
jbe
fistp
(bad)
sub
fcom
dec
xor
sar
push
ss
add
and
call
(bad)
mov
and
mov
cmps
pop
jmpw
shl
sub
sbb
daa
sbb
xor
arpl
(bad)
js
sub
inc
fcmovnb
add
adc
cmp
inc
mov
test
std
outs
rol
repz
rcl
iret
add
sar
sub
mov
movs
cmp
push
jl
mov
and
int3
mov
jge
cmps
ret
gs
sub
mov
push
mul
sbb
push
jo
inc
and
dec
add
psubq
(bad)
loop
ins
adc
pop
jge
(bad)
das
jne
fld
int
xchg
in
into
fiadd
xchg
cmp
push
mov
jge
cmp
pop
xchg
pushw
fstp
pop
add
imul
(bad)
mul
shl
xchg
xchg
inc
and
xor
pusha
dec
push
call
std
jg
mov
test
pop
adc
mov
(bad)
push
push
sub
sahf
lods
cli
mov
or
ror
stos
add
mov
lock
pop
dec
addr16
in
dec
inc
ins
clc
(bad)
mov
ss
jb
jmp
dec
xchg
mov
popa
mov
add
inc
inc
push
pop
hlt
mov
imul
daa
lahf
movs
jno
inc
mov
pushf
jnp
es
and
cmc
fs
dec
out
test
call
add
(bad)
mov
mov
mov
cwde
fistp
outs
mov
je
mov
(bad)
push
int3
xchg
mov
retf
push
hlt
sbb
out
shl
(bad)
pop
push
sbb
sahf
imul
addr16
in
mov
adc
xchg
popf
pop
call
aad
pop
mov
(bad)
mov
sahf
mov
mov
add
pop
cmp
cs
sub
jmp
add
(bad)
ficomp
mov
ror
in
call
add
push
movs
pop
xchg
mov
adc
mov
in
(bad)
sbb
(bad)
dec
cwde
nop
idiv
pop
or
sbb
adc
inc
xlat
jne
in
in
outs
xor
mov
push
jmp
or
cs
xor
dec
enter
and
mov
stos
or
push
cwde
cmp
mov
fwait
jmp
mov
jg
sub
and
inc
dec
push
rcl
pop
pop
pop
mov
add
rol
add
mov
stos
inc
lods
fstp
(bad)
aas
ds
nop
scas
xor
push
mov
out
inc
mul
inc
mov
cmp
std
movs
xchg
ins
addr16
loop
or
jae
nop
inc
mov
cmp
mov
call
pop
das
mov
inc
ins
xchg
mov
fist
push
daa
push
cli
mov
ja
pop
jge
bound
jl
add
and
pusha
lods
add
test
jne
adc
ins
pop
nop
shl
into
push
jge
dec
inc
inc
push
cmp
fs
outs
pop
xchg
or
dec
pop
test
add
mov
mov
push
mov
mov
inc
jne
dec
fisub
(bad)
pop
xchg
inc
in
xor
je
aaa
push
jle
mov
jb
clc
nop
je
inc
add
sub
mov
mov
inc
lock
lock
mov
cmp
call
or
stc
loope
pop
scas
lods
pop
mov
ja
addr16
ja
pop
add
aas
mov
push
nop
inc
aam
or
push
or
outs
movs
add
test
inc
and
jb
and
data16
jb
pop
xor
shr
ret
inc
das
rcl
in
lea
cmps
xchg
cwde
ds
jns
mov
pop
inc
into
mov
fst
outs
push
in
sbb
mov
mov
add
(bad)
call
iret
mov
push
fisttp
call
leave
dec
fmul
fs
sub
jp
stos
or
pushf
leave
nop
cmp
or
aad
sub
pop
inc
pop
add
jns
in
(bad)
cmps
and
rcl
enter
sar
mov
in
in
mov
retf
xchg
dec
lods
enter
and
clc
(bad)
push
inc
add
and
mov
push
xchg
push
(bad)
fdiv
jmp
repnz
mov
push
ins
sbb
fidivr
fldcw
jns
push
arpl
test
outs
lock
inc
pop
(bad)
leave
clc
enter
int
mov
out
jae
ret
ret
(bad)
enter
inc
xor
jge
or
leave
aas
movs
lahf
cld
adc
mov
add
inc
lea
add
cmp
outs
jnp
mov
push
stc
test
or
movs
pop
cmp
sar
push
pop
mov
inc
pop
inc
or
imul
push
pop
ret
mov
mov
xchg
xchg
inc
out
into
(bad)
mov
sbb
sbb
mov
inc
fadd
(bad)
jmp
pop
sbb
inc
ins
cmp
and
cmp
ret
pop
fidiv
mov
data16
aaa
scas
call
aaa
inc
shl
jmp
addr16
(bad)
push
test
stc
jmp
sbb
add
loopne
push
outs
jnp
mov
adc
mov
mov
stc
aas
jle
shr
test
xchg
mul
inc
popf
mov
inc
push
sbb
in
dec
dec
push
data16
xor
jg
push
push
mov
fidivr
test
push
xor
(bad)
mov
outs
aas
xor
leave
jnp
or
ins
mov
add
xchg
add
and
(bad)
mov
sub
pusha
and
hlt
pop
sbb
and
clc
lds
pusha
out
not
test
mov
sbb
(bad)
dec
mov
mov
lea
div
jg
jbe
mov
icebp
ins
jno
push
pusha
mov
lods
jmp
pop
out
add
(bad)
sub
sbb
cmps
mov
xchg
or
ja
jg
mov
jmp
push
or
or
dec
adc
dec
push
data16
push
and
out
mov
test
in
shr
mov
mov
or
ja
xchg
push
outs
fisttp
(bad)
xor
sub
jbe
js
aas
adc
stc
retf
jae
les
ds
mov
xchg
cmp
int3
push
aad
(bad)
aaa
pop
adc
sub
pop
sbb
adc
pop
ins
loopne
xlat
inc
sbb
pop
mov
fs
rol
mov
fisttp
ficomp
xchg
mov
popa
mov
sbb
sti
popf
hlt
stos
adc
push
or
and
loop
into
cmps
(bad)
test
adc
pop
fsubp
(bad)
(bad)
pop
xor
add
mov
mov
test
xor
jge
inc
mov
ret
out
sbb
inc
pop
push
dec
lea
(bad)
cmc
rcr
sbb
dec
mov
xchg
lock
jno
or
jge
ins
push
and
or
stc
add
shl
jbe
(bad)
int3
leave
xor
icebp
adc
fwait
push
push
call
hlt
or
add
ror
fmul
jb
sbb
mov
pushf
xchg
call
out
cmp
fisttp
adc
lods
(bad)
mov
mov
int3
inc
or
mov
retf
jmp
and
adc
pop
mov
mov
ret
cmp
lds
stos
loope
mov
xchg
mov
cmp
(bad)
scas
add
sysexit
sbb
pop
mov
cmps
pop
dec
fmul
les
fdiv
pusha
lock
mov
mov
int3
or
xor
fst
xchg
sub
ficom
fnstcw
push
mov
cmp
cmp
dec
stos
into
or
pop
or
jg
push
or
and
cmp
loop
stos
pop
test
adc
fsubr
(bad)
jg
imul
sbb
pusha
mov
in
(bad)
ss
pop
cmp
mov
sub
ret
lahf
jbe
daa
cmc
or
pop
pop
mov
ror
mov
scas
fmul
sub
dec
jns
inc
stos
dec
pop
jmp
clc
cdq
popf
and
in
mov
mov
pop
es
push
xchg
cmps
push
xchg
ins
jmp
add
call
jns
pusha
jo
dec
mov
in
repz
pop
loopne
pop
movs
sub
sub
aaa
cmp
retf
fst
stos
add
mov
mov
and
in
push
sbb
mov
inc
xchg
pop
(bad)
jns
sbb
inc
out
lea
out
pop
pop
les
push
push
jns
xchg
pop
sar
adc
mov
xor
or
push
cmp
sbb
sar
push
fcmovnu
cmp
add
mov
inc
jg
imul
sahf
adc
mov
fst
push
cli
pop
jg
dec
pop
inc
sar
xor
sub
mov
mul
(bad)
dec
lea
mov
adc
adc
jmp
add
std
push
cmp
mov
into
(bad)
out
and
push
pop
popa
add
sbb
ret
adc
lahf
or
scas
and
push
js
and
cmp
push
out
ret
es
aam
nop
gs
xor
add
dec
cmp
jmp
sbb
mov
pop
mov
imul
leave
add
hlt
mov
dec
xchg
add
inc
jnp
add
pop
adc
pop
xor
mov
inc
xor
push
push
(bad)
loopne
repnz
xor
dec
pushf
je
mov
popa
pop
daa
mov
repnz
test
dec
xor
xchg
xchg
and
mov
push
rcr
mov
jnp
nop
dec
dec
cmp
dec
pmaddwd
jo
inc
jl
or
xchg
(bad)
lock
bound
enter
mov
cs
pop
xor
sti
aaa
fisttp
clc
cmps
sahf
jle
stos
test
bound
movs
cmp
loopne
pop
inc
mov
adc
fisttp
cmps
dec
aas
xchg
sub
fwait
sub
mov
imul
aad
pusha
clc
mov
dec
test
add
cmps
fdiv
movs
adc
retf
push
ds
push
sub
fnsave
xor
lock
cld
leave
cmp
les
sahf
cli
imul
(bad)
mov
jg
push
sti
mov
lahf
xor
stos
push
test
in
jecxz
fs
mov
(bad)
jp
pop
or
push
iret
iret
mov
and
adc
mov
pop
mov
cmp
jmp
test
and
xor
mov
loope
es
aam
pusha
dec
call
dec
addr16
mov
jnp
adc
add
test
mov
jmp
fdivr
in
lds
mov
dec
enter
cdq
add
xor
and
xchg
push
xor
cmp
mov
std
and
xchg
jns
test
hlt
aam
cmp
repz
call
xlat
nop
mov
cmps
dec
sbb
xchg
sub
mov
shr
xchg
jo
dec
ficom
fild
stos
mov
push
mov
mov
rcr
cmp
repz
popa
mov
in
sub
jle
xlat
ja
mov
rol
cmp
in
gs
retf
pop
jo
into
inc
cmp
jb
xor
sbb
rol
push
arpl
fcom
push
addr16
not
lods
and
retf
mov
jns
or
ins
(bad)
imul
lock
sbb
int
add
sar
and
or
cmp
lea
jmp
push
jp
sahf
ins
mov
inc
ds
mov
test
ficom
pop
xchg
jl
cmp
cdq
stos
enter
xor
sbb
or
nop
out
push
xchg
loope
cmp
sub
lods
jg
jns
push
ja
mov
mov
and
xchg
dec
jp
adc
push
mov
outs
xor
inc
fldcw
push
sub
shr
xchg
rep
fs
mul
cmps
imul
pop
sbb
leave
push
cmp
call
push
jecxz
jne
inc
jg
into
mov
cmp
inc
out
mov
adc
pop
idiv
or
jg
push
ret
sub
jbe
xchg
add
xchg
adc
mov
jmp
jb
xor
out
mov
rcl
or
cmc
aam
dec
and
pop
sub
pop
mov
ins
lods
jns
fs
or
ja
sbb
stc
dec
invd
or
out
mov
dec
add
add
icebp
mov
imul
pop
push
enter
cmp
std
inc
fisttp
xchg
fld
sahf
ret
pop
gs
out
(bad)
sub
push
je
jg
or
add
repnz
(bad)
sbb
fidiv
repnz
and
mov
mov
int
nop
mov
or
test
mov
xor
pop
ins
sbb
imul
mov
call
inc
jne
or
mov
or
test
cmp
repnz
mov
sub
push
xchg
cs
pusha
mov
pop
es
ret
fadd
mov
mov
pop
(bad)
xchg
pop
les
mov
out
nop
stos
mov
xchg
das
sbb
retf
fcomip
bound
cmps
mov
jmp
sbb
repnz
data16
and
pushf
dec
xchg
loope
pop
mov
aas
and
pop
in
ins
(bad)
cmp
ss
int
adc
loopne
shl
inc
gs
or
jae
scas
std
mov
enter
stos
cmps
cwde
and
es
sar
scas
mov
mov
lods
xchg
stos
inc
mov
mov
leave
shl
and
iret
data16
xor
jmp
retf
and
(bad)
hlt
fiadd
jne
ficomp
mov
pop
ficomp
js
mov
xchg
mov
rol
pop
(bad)
(bad)
call
call
(bad)
mov
cdq
or
jecxz
and
or
sahf
clc
mov
inc
imul
imul
mov
hlt
or
push
mov
mov
iret
mov
loopne
adc
inc
mov
cmp
ficom
(bad)
js
loopne
sbb
jns
sub
popf
cmps
jle
fisub
aam
xlat
das
movs
push
imul
ret
xor
inc
imul
and
ins
popa
sbb
js
in
xor
je
sub
push
xor
cmp
jl
pop
call
mov
movs
clc
and
in
pop
sub
fs
and
pushf
jmp
mov
pop
jge
jecxz
push
addr16
outs
jmp
pop
push
jle
fsub
xchg
das
retw
les
loop
ror
dec
jp
cdq
les
test
ds
or
dec
and
jns
adc
and
retf
pop
pop
xlat
(bad)
ss
call
pop
push
ffreep
out
dec
clc
pop
mov
in
adc
cmps
sub
push
cdq
sbb
jmp
ret
lods
adc
inc
mov
scas
mov
mov
adc
lods
das
out
ds
mov
test
and
test
jmp
fcmovbe
ret
jle
shld
test
fisub
(bad)
sar
arpl
fimul
fs
rcl
adc
bound
pop
jbe
jg
loopne
xchg
push
loopne
call
std
hlt
fbld
jmp
and
stos
sub
mov
jae
jg
sub
inc
out
adc
push
mov
mov
cmp
lods
loope
loopne
inc
mov
pop
inc
mov
ins
dec
(bad)
fldenv
mov
test
mov
sub
or
shl
jbe
(bad)
dec
xchg
je
mov
cs
pop
neg
iret
int3
int
stos
popf
enter
inc
scas
test
xchg
bound
or
popf
adc
pop
ret
aad
in
jmp
lds
arpl
mov
fdivr
cmp
xcrypt-ecb
cmps
push
xchg
cmp
test
dec
enter
dec
int3
lods
add
sbb
mov
mov
sbb
or
or
mov
mov
push
inc
jecxz
cmps
mov
xor
(bad)
xchg
mov
lea
or
test
push
inc
lods
jp
mov
mov
sub
adc
dec
mov
(bad)
push
add
mov
(bad)
mov
adc
dec
and
push
mov
lds
adc
cmp
fsubr
mov
jl
pop
dec
mov
call
sar
push
mov
addr16
iret
or
jne
xchg
leave
aam
int3
ins
and
sti
rcr
lods
inc
sub
test
dec
xor
cmp
and
test
adc
repnz
sub
(bad)
fs
inc
adc
or
sti
fnstenv
sbb
(bad)
call
std
ja
adc
jb
sbb
stos
test
mov
nop
xor
mov
fidivr
add
cdq
jmp
lea
mov
fmul
add
mov
stos
outs
loopne
cmp
jne
inc
sub
pusha
push
fiadd
fwait
ss
das
xor
push
and
(bad)
fidiv
pop
outs
in
sub
or
push
pop
ret
inc
xchg
add
mov
retf
xchg
imul
lods
sbb
and
rol
sbb
out
add
add
mov
jbe
lods
inc
in
rcl
sbb
mov
inc
mov
movs
mov
stos
or
sbb
fnstsw
add
dec
jmp
aad
mov
push
or
xor
out
aaa
icebp
inc
push
pop
fcomi
pop
adc
or
lahf
ret
sbb
mov
jp
jno
inc
or
lock
cmp
sbb
inc
(bad)
xor
mov
scas
jecxz
mov
ins
xchg
call
ins
xchg
ror
das
cwde
fisub
fwait
outs
das
or
adc
fs
jno
test
pop
push
mov
jo
loope
push
inc
aaa
cmp
dec
leave
and
pop
out
test
in
cdq
fistp
fwait
xor
pop
xor
pop
ficom
out
fidiv
stos
ins
lods
fsubrp
js
xchg
fidivr
shl
pop
bound
retf
pop
cmp
rol
popa
inc
sbb
push
add
je
js
mov
mov
fnstenv
addr16
adc
fild
push
sbb
loopne
cwde
or
xor
rcl
mov
sbb
dec
or
mov
rcr
jl
inc
mov
in
add
dec
sbb
les
mov
pusha
lods
hlt
xor
aaa
jecxz
outs
ds
mov
xor
pop
daa
imul
jae
loopne
pop
frndint
xor
movs
adc
pop
xchg
bound
add
ins
sub
shl
imul
cmc
test
pusha
retf
jbe
retf
and
push
jle
sub
jle
or
mov
cmp
sbb
test
push
dec
push
sub
add
rcr
(bad)
pop
fnstcw
xor
sub
push
add
pop
mov
call
cdq
cdq
mov
mov
pop
adc
mov
gs
jmp
add
call
push
loope
cmp
pop
movs
mov
add
pop
jnp
sbb
mov
and
mov
test
pop
xchg
push
ss
dec
gs
stos
add
clc
das
(bad)
fidivr
fwait
mov
jo
(bad)
lahf
retf
gs
xlat
cmp
popf
dec
lods
sub
fisubr
ds
and
push
fwait
(bad)
rcl
ins
mov
jne
inc
daa
adc
mov
mov
xor
mov
xor
or
fiadd
shl
and
call
daa
in
adc
adc
lahf
int3
test
mov
scas
icebp
imul
mov
inc
add
mov
scas
pushf
and
lds
fcom
mov
jl
dec
sahf
out
pop
std
data16
gs
jb
mov
inc
in
xchg
aas
cdq
sbb
dec
mov
cmps
mov
(bad)
sbb
aad
sub
retf
cdq
in
jo
adc
pop
push
jge
dec
jl
adc
or
lods
mov
inc
or
pop
xor
pop
enter
nop
sbb
xor
xor
movs
mov
cmp
out
sub
leave
sub
push
mov
test
mov
jge
xor
out
pop
es
loop
ret
jae
cdq
ficomp
fs
push
mov
inc
cmp
(bad)
pop
mov
pop
jmp
push
(bad)
pop
gs
ins
xor
ret
rol
xchg
and
int3
or
(bad)
jl
loope
ret
call
pop
mov
push
movs
cmps
loop
and
rcl
push
pop
out
ror
arpl
repnz
xchg
mov
mov
scas
pop
ror
ret
dec
inc
and
(bad)
data16
and
dec
shl
xor
imul
out
in
mov
lea
pop
add
cmc
cmps
aad
sub
pop
xor
mov
or
retf
sub
mov
(bad)
aam
mov
sbb
and
dec
mov
repnz
shld
xor
in
push
adc
xchg
jbe
scas
inc
mov
das
mov
inc
out
push
add
je
mov
mov
or
scas
(bad)
sbb
sub
pop
inc
loopne
and
daa
cmp
mov
aaa
inc
inc
jmp
loop
in
dec
pop
inc
jnp
aaa
cmp
xor
in
aas
mov
aaa
addr16
mov
mov
adc
cli
shl
sub
adc
pop
lahf
loope
xor
mov
dec
inc
xor
fnstsw
mov
adc
(bad)
jmp
jp
jmp
fimul
sbb
xchg
data16
iret
adc
jns
scas
mov
lahf
xor
dec
test
movs
mov
add
jecxz
push
add
jle
repz
in
in
aad
sbb
mov
sub
pushf
cmp
sti
jecxz
pusha
data16
inc
add
inc
in
(bad)
cmc
addr16
xchg
fdivr
dec
sub
pushf
addr16
mov
xchg
push
mov
dec
fld
sbb
jle
out
lods
mov
cld
loop
neg
test
mov
or
inc
ror
jb
pusha
adc
out
jns
sub
push
sahf
jno
sbb
pushf
jp
call
loop
ja
mov
xor
push
inc
movs
mov
fild
adc
ficom
sub
jp
(bad)
imul
cs
in
iret
mov
mov
mov
and
leave
add
out
fdivr
mov
iret
js
dec
push
sti
nop
pop
add
aad
mul
push
mov
add
jle
add
add
mov
xor
sbb
adc
jmp
xor
fbstp
daa
shl
cmp
loop
mov
xchg
out
sbb
in
xlat
xchg
arpl
repz
div
push
aam
mov
pop
imul
push
and
pop
pop
add
nop
xor
iret
ds
cmp
pushf
scas
push
push
aaa
mov
sbb
and
inc
xchg
inc
inc
in
xor
iret
cli
cmps
not
mov
add
inc
push
mov
fwait
(bad)
lahf
dec
fstp
push
into
dec
arpl
call
push
jno
sar
sbb
add
inc
aas
pushf
inc
push
ss
das
jle
xchg
iret
loopne
cdq
pushf
dec
std
xchg
or
jno
ins
hlt
jo
adc
mov
or
sahf
xchg
push
mov
bound
xchg
mov
outs
add
inc
and
inc
outs
push
sub
in
pop
hlt
xchg
enter
ins
xchg
ds
add
rcl
rol
fdiv
test
mov
pushf
div
jae
cmp
cmp
imul
push
sub
idiv
dec
jne
addr16
(bad)
scas
rcr
cli
fld
dec
ficomp
data16
push
cld
sbb
push
aad
mov
mov
mov
test
aas
ror
adc
xor
popf
es
dec
repz
mov
pusha
lods
arpl
enter
sbb
dec
adc
shr
lahf
jo
call
dec
add
pop
out
jmp
mov
enter
cmp
xlat
stos
push
popa
mov
repz
enter
hlt
dec
inc
shr
aam
jge
wbinvd
out
out
mov
popf
xchg
mov
mov
push
and
dec
aad
xor
punpckhwd
ffreep
jae
(bad)
in
out
movs
mov
or
inc
aad
and
jmp
and
in
pop
jp
aas
clc
sub
bound
pop
or
ficomp
inc
pop
sbb
xacquire
sahf
mov
push
pop
icebp
mov
sbb
adc
adc
imul
outs
xchg
ss
inc
mov
ins
xor
ins
ja
and
push
adc
ins
retf
mov
(bad)
cmp
inc
out
cmp
pop
ror
or
aaa
enter
xlat
jp
and
les
mov
test
mov
sbb
sbb
cs
retw
out
dec
outs
jle
scas
mov
rol
push
fisttp
shl
mov
mov
lea
daa
and
dec
add
mov
sub
inc
sbb
out
pop
gs
dec
dec
add
mov
sub
and
mov
mov
inc
adc
sub
adc
xchg
xor
cwde
xchg
xchg
push
add
fs
sub
daa
mov
rcl
sub
int3
pop
mov
jae
or
inc
pop
sbb
xchg
jl
pop
mov
ror
dec
int
jae
stc
rcl
push
push
aaa
adc
xor
adc
mov
mov
je
shl
stos
xor
hlt
ja
sub
inc
pop
repz
dec
sti
jbe
push
addr16
dec
sbb
adc
cdq
ins
push
or
push
repnz
sbb
sar
add
or
xchg
cmp
sub
dec
inc
cmps
js
dec
xor
push
pop
mov
mov
out
mov
jp
sbb
ja
popa
pusha
pop
xor
sbb
cmp
mov
add
mov
cs
mov
xlat
sbb
scas
jge
inc
imul
sbb
push
dec
test
aad
stc
and
fnstsw
icebp
push
add
call
cmps
call
cmps
jae
imul
lods
rcl
popf
out
aaa
sti
loop
out
stos
test
xor
mov
mov
push
adc
lods
push
and
pop
scas
pop
mov
(bad)
test
dec
(bad)
jnp
test
inc
mov
ins
inc
inc
js
test
push
jno
fcom
pop
cmp
fnstenv
mov
aas
jp
add
in
(bad)
sbb
mov
mov
leave
clc
mov
cmp
mov
jge
leave
cmp
dec
mov
pop
cmp
pop
ss
mov
cmp
leave
and
outs
scas
fs
cmp
std
mov
aaa
int3
ficom
les
add
sub
icebp
lea
(bad)
fwait
(bad)
ror
xchg
js
adc
and
push
pop
in
outs
cmp
lea
mov
dec
std
or
xchg
sub
push
sar
retf
sub
ret
stos
dec
jle
outs
stos
or
mov
scas
cmp
fwait
adc
movs
gs
mov
sbb
pop
cmp
sub
into
fmul
mov
add
pop
in
ret
cs
sub
adc
out
outs
lods
loope
dec
sub
call
mov
sub
sub
push
mov
retf
call
and
xchg
fidivr
into
es
cmc
xlat
push
xchg
pushf
jecxz
cli
dec
sbb
sub
sub
adc
adc
cmps
iret
cmp
cmc
cmps
push
mov
push
fld
mov
xor
aaa
adc
test
sti
mov
mov
mov
mov
ds
inc
hlt
adc
out
aad
cmp
jns
cdq
clc
xchg
(bad)
outs
test
test
daa
cmp
outs
sahf
pusha
xor
arpl
dec
rcr
mov
repz
mov
push
mov
(bad)
sub
jns
push
cmps
movs
pxor
lahf
cmp
inc
xchg
jp
cmp
jns
jne
dec
ss
xor
ror
and
jle
adc
sbb
jo
dec
iret
or
and
imul
sbb
(bad)
pop
push
movs
arpl
fcmovu
sbb
bound
dec
mov
pushf
mov
xor
test
icebp
dec
(bad)
in
mov
je
mov
mov
sbb
clc
inc
push
scas
pop
mov
outs
retf
cmp
jmp
and
xchg
mov
pop
xor
dec
retf
add
mov
xchg
push
(bad)
scas
leave
mov
(bad)
cmc
jbe
mov
mov
in
mov
xchg
pusha
pop
xchg
add
nop
xor
jl
inc
addr16
push
jmp
push
or
dec
jmp
das
mov
sbb
add
jg
pop
(bad)
hlt
(bad)
(bad)
ins
xchg
dec
jecxz
cmp
shl
addr16
mov
dec
popf
js
mov
loope
or
stos
and
pushf
inc
sbb
das
mov
outs
cwde
mov
xor
ficom
femms
ins
loop
mov
scas
dec
in
je
popa
es
inc
rol
jg
add
cld
cmps
fwait
cmp
out
nop
sub
mov
pop
rcr
lock
je
in
mov
mov
loopne
mov
or
jae
pop
pop
mov
shl
retf
jno
jl
mov
mov
adc
fst
test
sbb
pop
hlt
gs
xchg
push
aam
rcr
mov
loop
xchg
xlat
in
lea
add
stc
adc
ja
pop
cmp
ffreep
mov
adc
dec
xchg
xor
fwait
mov
sub
fxch
stc
std
repnz
xchg
push
cld
mov
retf
jg
mov
inc
pop
int3
out
cli
dec
fcompp
xor
mov
enter
mov
mov
loope
mov
into
call
ins
ds
mov
imul
addr16
in
and
and
ret
xchg
aam
push
ins
cmp
adc
sub
mov
pop
mov
test
sbb
cmps
dec
pop
das
cmp
cmps
cmps
fistp
push
pop
popa
jo
inc
mov
jl
iret
sub
rcr
bound
imul
call
and
jnp
jmp
mov
jbe
jge
xchg
xchg
rcr
and
hlt
mov
ds
sbb
sti
push
sub
or
sbb
loop
test
sub
fucomi
push
rol
movzx
mov
sti
adc
ror
into
ds
add
fucomi
ins
loopne
xor
xchg
sbb
xchg
retf
fisubr
int
mov
pop
stos
push
pextrw
dec
and
ret
jno
inc
push
mov
push
pop
into
inc
pop
jg
fiadd
stos
jae
mov
mov
out
sub
ret
sar
and
(bad)
sub
adc
test
ret
mov
sub
jns
in
cmp
mov
push
lahf
stos
popf
cmps
jns
xchg
shr
and
movs
adc
or
xchg
je
lea
xor
adc
das
mov
fild
cmp
pushf
ins
mov
movs
xchg
in
push
or
nop
nop
pop
dec
sahf
mov
sub
clc
add
loopne
test
sub
xor
bound
add
(bad)
fisttp
retf
adc
lods
inc
jge
dec
movs
pop
cmps
lahf
cvtps2pi
adc
out
in
jbe
es
icebp
ds
push
movs
sub
jno
cs
fidivr
mov
repnz
inc
xchg
data16
pop
lahf
cmp
dec
xchg
jmp
xchg
jns
int
xchg
outs
ja
scas
leave
jne
popf
(bad)
adc
jle
inc
out
ds
outs
adc
(bad)
pusha
in
or
dec
xor
sti
sub
fistp
adc
sbb
int3
adc
add
inc
pop
sti
aaa
dec
xor
mov
sar
xor
pusha
add
sti
add
in
out
icebp
jns
adc
lods
jmp
or
mov
pop
adc
lds
test
lods
cmp
or
clc
cld
push
jno
cmps
repnz
pop
mov
out
mov
call
fwait
jb
xor
(bad)
cmp
test
cmps
jg
ret
cdq
into
lahf
cdq
pushf
(bad)
sub
fs
jnp
adc
into
pusha
dec
data16
(bad)
push
jae
push
pop
(bad)
push
out
push
ror
xor
cdq
add
and
inc
aaa
sub
adc
sbb
xor
imul
push
scas
and
xchg
pop
stc
sub
mov
ror
mov
mov
push
xlat
scas
rol
push
iret
lods
sbb
xor
mov
pop
mov
adc
mov
cmps
jo
test
cmp
sbb
int
(bad)
test
sub
clc
sbb
jae
xlat
shr
ss
jno
ja
ins
or
data16
jnp
(bad)
mov
jae
shr
cmps
xchg
jno
ins
or
push
and
jmp
push
sub
popa
jns
sub
scas
sti
popf
jo
push
pop
fstp
(bad)
sahf
in
out
adc
inc
or
js
cmp
xchg
int
mov
mov
repnz
sahf
xchg
jg
add
in
test
adc
cmp
or
mov
xchg
lea
sti
outs
enter
and
sbb
sbb
mov
test
cmc
sub
into
mov
test
pop
bnd
push
je
aaa
mov
inc
pop
jge
scas
add
jmp
mov
das
ss
pop
inc
pop
dec
jb
add
les
bound
lods
fsubr
push
stos
in
scas
popa
or
and
lds
in
fbld
sbb
sar
xchg
dec
lds
push
test
gs
test
adc
dec
rol
push
xor
stc
mov
cmps
clc
and
jge
xchg
(bad)
stc
pushf
sbb
inc
adc
enter
fwait
pop
out
inc
ja
mov
dec
add
and
sub
out
pop
adc
mov
(bad)
sbb
adc
cli
inc
pop
inc
lods
and
sahf
or
mov
and
stc
out
sub
cwde
mov
fstp
loop
mov
or
and
addr16
hlt
aas
ins
(bad)
fstp
hlt
fisub
lea
cmp
outs
loop
or
sbb
xchg
addr16
scas
sub
xchg
aam
sub
add
push
sub
push
out
push
sti
push
lds
lods
mov
pop
sub
sar
cmc
mov
sub
push
lahf
pop
std
mov
jns
push
push
mov
hlt
cdq
(bad)
(bad)
mov
imul
mov
popf
fmul
inc
test
and
(bad)
xchg
cmc
and
inc
or
addr16
iret
pop
xchg
sbb
mov
ins
cmc
shl
cmp
inc
add
cs
out
iret
sti
shl
xchg
dec
repnz
mov
sbb
xchg
xchg
adc
test
bound
or
dec
outs
pop
fcom
mov
cmps
dec
jbe
fiadd
sub
mov
sbb
push
mov
test
sar
movs
repnz
(bad)
retf
pop
dec
pushf
shr
out
aas
and
iret
xchg
cli
dec
arpl
ret
push
sub
push
or
clc
test
fadd
enter
movs
inc
icebp
cmp
xor
out
popa
enter
pop
fchs
xor
and
div
jb
mov
cmc
(bad)
(bad)
or
vshufpd
mov
bound
and
xchg
loope
pop
je
jg
dec
lds
mov
movs
push
retf
sahf
into
dec
jl
outs
xchg
enter
jl
sbb
jl
jmp
lds
mov
loopne
mov
mov
lock
es
xor
and
or
jns
jg
(bad)
add
jle
inc
sub
mov
adc
and
inc
mov
mov
add
cmp
movs
test
mov
cwde
mov
pop
jmp
test
icebp
fidivr
and
popa
sar
push
xor
(bad)
mov
popa
jl
std
aaa
dec
enter
cli
popf
push
mov
add
cmps
arpl
jge
pop
add
mov
jbe
inc
dec
mov
pop
inc
fs
in
jae
cwde
js
mov
data16
lods
outs
push
es
ds
inc
mov
aas
and
push
mov
lahf
int3
push
sbb
xchg
aam
ss
(bad)
mov
rol
sbb
popa
cli
jno
sbb
lea
lods
inc
adc
call
test
fcomp
ffree
gs
push
clc
or
outs
inc
icebp
fs
in
retf
mov
test
repnz
pop
into
stos
scas
pandn
loop
(bad)
mov
mov
in
neg
xor
inc
mov
add
sbb
cdq
ds
add
xchg
inc
fsub
jmp
mov
xchg
mov
retf
test
sbb
mov
mov
scas
inc
sub
scas
(bad)
and
icebp
cdq
xchg
ins
mov
jge
pop
fisub
mov
mov
or
push
fcom
std
retf
jb
push
scas
and
dec
je
and
iret
sub
test
pop
mov
mov
je
loopne
retf
mov
jns
or
xor
mov
ret
lds
mov
pop
cmps
cmp
sub
mov
mov
jo
or
adc
cwde
out
jp
sub
icebp
aas
dec
mov
mov
cmp
bound
call
inc
scas
push
and
outs
clc
scas
push
ins
pop
ret
xchg
cmps
mov
mov
mov
clc
or
in
jge
arpl
out
xor
xchg
add
add
rcl
or
popf
js
adc
out
(bad)
ss
fs
popf
bound
jmp
add
dec
cli
popf
ficomp
cs
repz
iret
dec
cwde
mov
inc
out
sbb
mov
bound
add
adc
dec
dec
xchg
mov
mov
ror
aas
pop
in
sbb
mov
add
xor
movs
fsub
icebp
lock
add
xor
ss
mov
pop
sbb
call
lods
in
sub
call
xor
arpl
cmp
sbb
xor
(bad)
cmp
int3
hlt
mov
push
sbb
add
mov
jbe
or
fcomp
mov
aas
aaa
cs
scas
pop
jge
pop
push
sahf
or
pushf
xchg
in
aam
hlt
movs
int3
adc
retf
in
sub
mov
mov
xchg
inc
cli
shl
idiv
jmp
dec
inc
xor
adc
not
popa
retf
inc
movs
pop
inc
jmp
jmp
sbb
mov
js
sar
mov
(bad)
out
pop
leave
sub
fiadd
out
enter
sbb
cmp
pop
jle
sbb
mov
hlt
int
and
div
mul
add
in
adc
jbe
add
and
sub
out
aas
retf
xchg
fsubr
xor
(bad)
iret
jns
fistp
pop
mov
mov
inc
adc
mov
aad
fisub
leave
jb
xor
aam
sahf
mov
fisttp
push
outs
rcr
push
mov
xchg
call
mov
stos
mov
mov
xchg
mov
cwde
mov
movs
ret
dec
mov
sbb
mov
pop
jnp
and
(bad)
retf
stc
mov
mov
popa
rcl
in
scas
lock
cs
mov
jmp
sub
jno
cmp
add
mov
mov
nop
mov
pop
int3
movs
popf
aad
xchg
(bad)
jmp
jl
push
(bad)
sahf
fs
int3
xor
xchg
inc
and
pop
dec
mov
lods
leave
inc
stc
jb
jnp
adc
outs
mov
not
sub
jo
xor
mov
imul
sbb
aad
sbb
fmul
jmp
mov
add
xor
bnd
pushf
rcl
cmp
cmc
cmps
xchg
sbb
rcl
fisubr
jle
in
popa
add
sub
shr
dec
in
out
sbb
jmp
push
aad
add
or
sti
mov
lods
bound
pop
inc
aaa
fstp
inc
dec
pop
fstp
hlt
sti
sub
int3
into
xchg
adc
dec
hlt
jnp
out
ror
fstp
popa
mov
mov
(bad)
cmp
mov
retf
lock
and
xchg
lds
sbb
mov
jg
jl
jg
js
xor
pop
mov
hlt
lahf
sub
call
pop
lock
mov
dec
test
cld
clc
fdivr
popf
(bad)
sbb
mov
adc
sbb
xrelease
inc
fld
push
jno
push
popf
dec
imul
xlat
xchg
jbe
mov
mov
daa
js
jmp
pop
mov
ret
xchg
dec
sbb
dec
in
(bad)
retf
movs
or
sub
push
fwait
or
push
sub
inc
mov
pop
xchg
mov
inc
fwait
ror
out
xchg
or
jae
ss
pop
push
mov
rcr
lea
int3
pop
movs
mov
mov
mov
aaa
jmp
mov
xor
push
mov
xor
dec
fnsave
jg
idiv
cmp
add
movs
inc
aaa
push
out
mov
nop
fdivr
push
mov
gs
jmp
lods
jecxz
and
test
xchg
cmp
leave
ins
push
mov
arpl
lods
cmc
push
jnp
sar
retf
push
sub
dec
sub
outs
mov
push
push
fwait
jmp
retf
pop
xor
xchg
call
push
retf
stos
jle
les
mov
stc
push
mov
fcomp
add
in
pop
out
movs
sub
sbb
imul
inc
xlat
sbb
inc
mov
inc
popa
fst
fdiv
test
push
aas
sbb
ror
xlat
ss
aad
mov
leave
cmp
and
shr
and
hlt
sbb
add
das
sbb
mov
out
mov
mov
dec
or
mov
in
cdq
ror
jle
xchg
push
mov
pop
adc
pop
ret
cmp
(bad)
scas
aas
xor
fcom
fbld
mov
loope
es
cmp
xchg
push
je
jecxz
xor
add
in
inc
add
xor
mov
das
(bad)
test
adc
adc
(bad)
adc
aad
adc
jae
js
xchg
push
add
jp
sahf
(bad)
je
sti
out
mov
mov
inc
or
addr16
mov
fisttp
add
loopne
mov
add
cmp
(bad)
sub
std
push
xor
pushf
mov
pop
outs
in
add
in
or
out
cld
mov
inc
rcr
adc
repnz
out
retf
cs
enter
sub
xchg
in
jne
add
out
dec
push
dec
fucomi
sbb
push
push
mov
xchg
mov
(bad)
sbb
mov
add
push
mov
ins
bswap
inc
in
xor
mov
sbb
cdq
push
push
retf
retf
test
popa
cmp
sbb
nop
mov
std
xor
data16
xor
mov
popa
jo
mov
popf
push
sub
fist
xchg
mov
add
mov
(bad)
js
lock
mov
fidivr
jo
test
pop
enter
xchg
les
push
mov
jmp
adc
inc
sahf
dec
inc
sub
sbb
(bad)
jg
pop
(bad)
inc
and
jmp
jne
pop
and
sub
movs
out
push
fmul
xchg
adc
pushf
push
sbb
pop
leave
repnz
mov
pop
fistp
int3
lods
iret
ret
je
xchg
cld
cmp
sbb
outs
fld
ja
test
cmps
lds
shl
push
and
repz
jmp
rcl
outs
test
ret
dec
mov
push
mov
arpl
inc
les
mov
fwait
mov
inc
xor
mov
xchg
cmp
out
das
das
xchg
sahf
(bad)
out
mov
xor
test
sub
ins
jb
push
pop
jecxz
and
cld
cmc
cmc
push
or
and
mov
or
mov
cmc
icebp
sbb
dec
push
dec
mov
mov
jne
and
jae
or
or
nop
dec
xor
mov
push
in
fstp
cmc
mov
jecxz
adc
jns
xor
pop
jmp
jo
xchg
fnstsw
nop
and
clc
aad
and
push
sub
push
jecxz
loopne
fwait
popa
test
cmp
xchg
fnstsw
nop
mov
cmp
adc
ret
pop
ins
iret
mov
lods
jne
mov
fdivr
(bad)
push
cld
std
and
xchg
jmp
shl
push
std
jne
movs
and
mov
add
push
adc
neg
sub
jmp
push
mov
(bad)
xor
test
stc
and
lahf
mov
inc
mov
push
shr
js
push
jmp
mov
push
test
push
out
pusha
mov
jns
out
inc
stos
sub
(bad)
call
cmp
pop
fild
xchg
scas
mov
xchg
fcom
les
push
mov
and
test
jno
xor
xchg
ja
mov
push
imul
call
inc
push
xchg
push
mov
in
push
xchg
mov
rol
cmp
cmp
loopne
mov
mov
outs
int3
fstp
cwde
adc
out
ins
shl
adc
adc
fisttp
in
pop
retf
push
cdq
jo
push
addr16
aam
lea
dec
push
mov
ret
mov
inc
push
jne
xchg
je
(bad)
push
push
lods
sbb
inc
cli
cmp
cmp
pop
xchg
fwait
jnp
mov
pop
xchg
jne
push
xor
loopne
shl
pusha
js
cmps
stos
test
mov
and
lods
aam
jno
and
js
pop
(bad)
cdq
fdiv
jg
fdivr
fidivr
cmps
les
imul
mov
arpl
pusha
fild
in
popa
sbb
cmc
test
scas
cmc
sub
les
popf
lods
aaa
push
cld
cs
imul
ss
and
sub
ins
ja
mov
(bad)
mov
enter
xchg
xor
scas
cmp
fsubr
cmp
dec
and
sub
sub
xchg
pop
inc
jp
pop
dec
xchg
das
pusha
inc
jg
cmp
std
jmp
dec
jmp
adc
bound
cmps
scas
das
add
push
sbb
repz
mov
cmp
inc
ror
repnz
pop
mov
xlat
xchg
shl
or
inc
adc
mov
jmp
bnd
addr16
retf
dec
imul
xchg
inc
cmp
mov
loopne
in
je
xchg
sub
pop
add
jecxz
ret
arpl
xchg
push
iret
lods
mov
mov
aas
xor
std
cmps
xchg
dec
cwde
call
(bad)
es
mov
sti
rcr
jecxz
sub
cli
stc
fist
(bad)
arpl
in
pop
and
jo
sub
cmps
dec
clc
(bad)
jne
je
es
imul
ss
cwde
jg
adc
arpl
jo
popf
push
ficom
cli
dec
xor
or
pop
mov
inc
sub
mov
push
add
mov
or
stos
inc
fimul
inc
scas
ds
lahf
ins
stos
es
inc
or
cmps
and
pop
mov
rcl
cmp
arpl
mov
pop
stos
xchg
iret
jg
mov
fs
cmp
cmc
adc
rcr
test
shr
imul
imul
cs
pop
in
push
add
and
pop
in
(bad)
mov
and
in
push
adc
xchg
sub
icebp
push
outs
fimul
push
jge
imul
addr16
pop
rcl
clc
in
jg
lods
sahf
loop
mov
std
pop
repz
pop
lahf
fs
push
cs
jb
pop
jmp
add
jmp
mov
lods
sbb
je
mov
fnstenv
xor
xor
cli
jmp
fwait
retf
mov
push
std
mov
push
aaa
add
in
xor
scas
movs
stc
adc
into
ret
mov
std
jne
fucom
jge
jb
cwde
fwait
mov
mov
aad
daa
dec
cmps
add
nop
int
and
ret
or
pop
jbe
and
call
dec
xor
push
jl
dec
push
out
lods
fcmovb
jl
out
xchg
stos
mov
and
in
test
mov
and
lods
lds
jle
not
pop
popa
out
test
or
rol
lods
mov
and
jo
or
lods
mov
inc
in
call
xor
add
pop
jg
mov
dec
xchg
int3
mov
push
outs
xchg
pop
mov
dec
add
push
jno
retf
mul
loop
iret
icebp
adc
jne
mov
cmp
ins
arpl
(bad)
lods
imul
invd
enter
inc
daa
dec
hlt
xor
ret
retf
jmp
in
in
dec
push
in
mov
mov
dec
ss
sub
std
out
movs
sbb
xchg
(bad)
mov
test
add
call
xchg
out
je
jmp
pushf
mov
fcmovb
rcl
inc
jge
mov
sahf
test
shl
lea
mov
push
out
fcmove
sbb
dec
dec
sub
fisttp
arpl
dec
jle
int3
daa
xchg
cmp
fldenv
das
push
jl
inc
sti
arpl
movs
sub
icebp
dec
push
int
(bad)
(bad)
fs
add
jge
add
das
push
add
and
and
enter
mov
mov
dec
xor
aas
(bad)
lock
mov
sbb
dec
pop
sar
ret
xchg
cmp
push
sbb
inc
repnz
sub
data16
xor
(bad)
cmc
test
shl
pop
or
imul
adc
inc
pop
mov
test
jle
cmp
mov
jns
jle
data16
adc
push
and
aas
shl
(bad)
lahf
ror
adc
out
pop
(bad)
in
imul
add
iret
adc
adc
cmp
pop
pop
pop
rcr
cmc
sub
pop
xor
pop
mov
int3
jp
in
pop
addr16
call
xchg
push
lods
sub
push
mov
scas
jg
push
mov
push
xchg
daa
mov
push
scas
popa
sbb
push
push
leave
out
jge
add
and
xor
sbb
jmp
pop
jbe
lock
mov
mov
mov
dec
sbb
in
xor
daa
push
push
cmp
xchg
mov
dec
add
xchg
mov
pop
(bad)
dec
loop
xor
mov
fs
jl
xor
int
mov
push
ins
and
adc
out
cld
cmp
xchg
ds
mov
mov
lods
mov
retf
push
arpl
pop
ficom
inc
(bad)
lods
add
popa
fmulp
test
je
push
dec
mov
loope
(bad)
int3
rcl
inc
mov
mov
outs
mov
push
cmp
jmp
xor
(bad)
daa
cld
sbb
aam
inc
sub
test
add
cwde
mov
inc
adc
lahf
pop
inc
popa
or
cmp
jmp
pop
ficom
ror
inc
out
rep
cmps
test
ins
shr
xchg
mov
xor
out
scas
mov
repnz
pop
pop
mov
dec
sub
jo
push
fldcw
inc
mov
lock
cmps
mov
rol
popf
lahf
jae
and
mov
jmp
pusha
test
ja
pop
fdivr
cwde
inc
(bad)
test
in
sbb
and
outs
sub
add
shl
(bad)
jns
(bad)
out
xchg
pop
inc
push
push
into
es
mov
inc
adc
jecxz
jns
les
out
cmc
popa
bound
clc
jmp
inc
push
pop
(bad)
xchg
xchg
and
dec
sbb
add
xchg
inc
sbb
leave
xchg
std
mov
xor
call
cmp
dec
sub
leave
mov
movs
gs
mov
mov
mov
inc
pop
aad
adc
jo
mov
dec
jmp
jp
sahf
add
in
mov
js
and
js
ret
iret
push
ins
and
add
neg
pushf
ret
push
mov
aam
imul
and
add
fisub
je
aas
test
or
jmp
imul
lock
in
dec
js
jo
pop
xchg
push
fs
mov
dec
out
(bad)
xlat
and
and
inc
inc
mov
dec
pop
mov
repz
bound
retf
test
hlt
cmp
idiv
es
inc
std
pusha
add
and
pop
dec
pusha
cld
mov
test
je
cmp
inc
or
jae
js
(bad)
je
(bad)
mov
adc
int3
push
int
adc
setno
push
dec
push
test
repz
push
adc
(bad)
sub
xchg
popw
popf
outs
hlt
in
into
test
fs
and
push
mov
mov
sbb
scas
push
mov
dec
push
jmp
xchg
(bad)
fstp
rcr
push
das
jp
sahf
cmp
outs
adc
jnp
pop
out
js
call
stos
out
pop
jnp
mov
xchg
xchg
stos
mov
retf
pop
je
cld
mov
jbe
dec
std
jns
scas
mov
mul
icebp
add
into
mov
hlt
add
add
in
jno
enter
pusha
addr16
je
mov
xchg
(bad)
adc
stos
repnz
add
repnz
das
pop
xchg
mov
jbe
pop
inc
push
fisttp
adc
icebp
mov
mov
enter
ss
xor
pushf
push
jae
mov
hlt
mov
pop
or
or
mov
lea
mov
out
pop
push
js
das
xor
jecxz
in
mov
sub
enter
mov
sbb
in
xchg
les
cmovs
add
adc
xchg
sub
mov
inc
ror
popf
mov
gs
xor
ins
inc
dec
push
push
and
inc
mov
call
cmp
mov
pop
mov
cmp
cmp
loop
mov
mov
loope
cld
add
xor
(bad)
cli
retf
jae
arpl
sbb
dec
mov
enter
add
add
fs
xchg
dec
push
inc
inc
inc
je
in
jb
adc
and
push
inc
mov
xchg
fistp
pop
paddw
imul
xchg
xchg
add
adc
add
std
es
inc
or
jnp
lods
gs
fcom
ds
add
fcomi
dec
clc
sar
pop
sar
cmps
sbb
fwait
repnz
mov
or
pusha
xor
popa
and
and
inc
or
pop
and
call
das
dec
add
xchg
das
loope
int
into
pop
jecxz
xchg
inc
fcom
rol
sbb
cmps
push
dec
sti
ret
xlat
xor
jp
jo
mov
movaps
nop
inc
mov
cvtpi2ps
out
ja
add
and
imul
jg
call
lea
inc
retf
popa
paddusb
xchg
(bad)
cld
jl
lahf
clc
rcl
mov
dec
xlat
popa
in
(bad)
and
add
sbb
(bad)
push
push
ds
sub
push
mov
into
fcom
sti
(bad)
arpl
into
pop
mov
repz
lea
dec
mov
mov
ret
test
repz
ss
inc
ret
or
push
push
in
pop
outs
pop
test
shr
fst
cmp
mov
inc
xor
xor
cmps
adc
ins
daa
into
and
addr16
jmp
xor
mov
rol
icebp
loopne
and
push
xchg
test
cli
xlat
push
jp
fmul
mov
pop
leave
push
(bad)
pop
jecxz
stos
xchg
mov
aaa
jbe
sbb
int
xor
jmp
dec
xlat
pop
sub
xor
in
fst
push
xor
nop
shl
std
sbb
retf
push
and
inc
aad
jns
and
aaa
sbb
test
std
xor
aas
jle
xchg
test
outs
std
xchg
cmp
xchg
xor
jle
xor
int
ret
shl
retf
call
or
pop
in
pushf
scas
movs
pop
push
lods
out
je
mov
mov
push
sub
lds
pop
je
jae
repz
rol
std
jge
jb
pop
fmul
lods
in
push
icebp
int
xchg
stos
mov
ss
inc
sub
sub
sub
ret
test
inc
xchg
cmp
cld
dec
sbb
mov
shl
xor
sbb
and
inc
xor
jmp
lods
push
xor
inc
adc
and
mov
jb
loope
fnstenv
add
add
pop
(bad)
aaa
and
addr16
and
(bad)
fldenv
mov
popf
shl
pop
cmp
jmp
dec
pop
adc
cmps
addr16
mov
(bad)
mov
sar
or
xor
push
test
mov
xchg
cli
stos
ret
sbb
and
jnp
mov
pop
xor
dec
cs
or
or
in
fild
nop
lds
dec
sti
daa
pop
sbb
je
sub
loop
or
pop
cmc
retf
mov
xor
adc
xchg
pop
inc
les
or
mov
sbb
out
hlt
in
push
in
loop
or
pusha
pop
pushf
push
into
pop
xchg
push
mov
out
sbb
cmp
test
lock
adc
adc
sbb
inc
add
call
jle
adc
add
dec
popa
push
push
push
pop
pusha
call
mov
(bad)
int3
mov
xchg
or
lahf
jle
(bad)
pop
arpl
adc
test
jge
pop
push
fs
xor
bound
jne
retw
add
movs
(bad)
and
mov
xchg
mov
stos
mov
clc
add
mov
add
xor
jmp
(bad)
and
in
imul
or
xchg
mov
mov
xor
pop
jp
popa
jns
mov
in
xlat
inc
mov
test
jne
sub
cld
lods
inc
xchg
push
in
scas
mov
or
jle
inc
xchg
add
test
xor
mov
dec
pop
adc
dec
jg
adc
daa
lds
xchg
jbe
jnp
mov
leave
repz
or
in
enter
aaa
push
and
mov
or
movs
call
and
pop
cli
lahf
sbb
popa
mul
icebp
les
int3
mov
mov
or
sldt
cmove
outs
xchg
xchg
test
imul
(bad)
mov
pop
arpl
pop
xor
outs
mov
pop
xor
add
dec
sbb
and
imul
or
in
sbb
adc
in
mov
cmps
or
dec
jmp
jne
pop
int
fstp
inc
mov
retf
adc
mov
dec
neg
inc
mov
push
aad
dec
daa
test
mov
pop
jo
lea
and
pusha
out
push
loopne
xchg
pop
adc
dec
mov
adc
adc
xor
jae
xor
jmp
pop
jae
and
adc
stc
mov
or
jle
in
inc
mov
dec
(bad)
sbb
push
mov
jns
dec
and
inc
xor
daa
data16
ficom
into
pop
std
aad
out
ins
jge
retf
push
jecxz
pop
pop
faddp
pop
lea
pop
xchg
cmp
cmps
inc
and
inc
(bad)
jns
push
xlat
inc
xor
addr16
hlt
adc
out
mov
nop
mov
xchg
add
mov
jl
in
adc
add
adc
or
mov
mov
add
call
je
sub
mov
jge
xor
and
cld
pop
in
in
sub
pushf
mov
push
scas
hlt
xchg
std
mov
pusha
push
jo
jmp
mov
xchg
push
test
pop
rcl
daa
push
push
ins
pop
arpl
dec
or
push
and
repnz
sub
daa
xor
imul
jno
mov
(bad)
shl
sbb
sbb
push
pop
inc
stc
jmp
push
add
xor
adc
inc
xor
addr16
xor
fadd
lods
add
loopne
sub
mov
adc
inc
jge
js
and
mov
div
(bad)
mov
pop
dec
(bad)
cld
sub
adc
sbb
enter
and
out
fisttp
dec
push
(bad)
movs
sar
xor
cmp
xchg
or
lahf
mov
ins
dec
cmp
scas
sub
sahf
scas
jp
mov
call
adc
(bad)
test
cmp
aad
fimul
add
jmp
sbb
push
sbb
mov
aaa
inc
aas
mov
inc
push
add
mov
(bad)
test
pop
enter
stos
in
dec
xchg
xlat
fdiv
inc
mov
stos
inc
xor
pusha
inc
jle
jg
xchg
xchg
inc
rcl
and
xor
sbb
jae
push
aam
mov
shl
jno
sbb
js
sub
xchg
lods
ins
rcl
dec
aam
std
(bad)
cmp
xchg
xchg
mov
out
call
xchg
xchg
xchg
and
xchg
loop
mov
xor
cmps
outs
jmp
mov
xor
cmc
fcom
lea
retf
ins
pop
bound
add
and
bnd
dec
mov
mov
ins
jecxz
cmp
fsubr
dec
mov
mov
shr
pop
mov
mov
xchg
sbb
sahf
pop
adc
stos
dec
xchg
imul
sub
cmp
imul
scas
mov
and
fiadd
push
sub
sar
xor
loope
arpl
inc
fs
sbb
retf
(bad)
movs
jl
inc
xlat
push
out
inc
mov
inc
nop
jmp
pop
das
cmp
cld
inc
pop
or
iret
iret
pop
int
hlt
out
lahf
adc
adc
jl
push
scas
cs
or
push
xchg
fst
xchg
mov
repnz
mov
xor
push
not
dec
and
iret
mov
push
jbe
out
mov
inc
(bad)
frstor
or
xor
sbb
pop
ja
xor
into
inc
ficomp
cld
(bad)
sbb
mov
(bad)
push
mov
mov
dec
mov
mov
cmp
dec
mov
in
int
cli
push
and
sub
push
test
xor
inc
out
jmp
pop
adc
or
popf
das
ror
not
dec
xor
xchg
fsub
sar
jno
aaa
(bad)
cld
mov
xchg
cdq
lock
test
cmp
mov
(bad)
in
in
jnp
push
loope
sub
rol
pop
fs
jb
rol
(bad)
neg
xor
scas
std
icebp
test
mov
add
aaa
xchg
jne
inc
ja
sbb
es
push
pop
sahf
addr16
out
test
aad
push
cmps
out
cmps
xchg
pop
mov
nop
jmp
retf
fdivr
aam
push
jns
js
cld
out
movs
dec
js
icebp
popa
mov
daa
and
stc
cdq
test
adc
jnp
hlt
jmp
and
call
sub
inc
push
idiv
je
dec
out
inc
sbb
dec
pop
xor
or
mov
out
retf
push
push
repz
sub
lods
fist
icebp
fsubr
dec
mov
int3
adc
sub
ds
(bad)
stos
pop
jl
(bad)
dec
int3
push
jge
jb
retf
push
or
mov
mov
idiv
inc
fisubr
in
xchg
(bad)
repnz
and
cmp
add
push
nop
lock
jle
fst
test
clc
aam
mov
hlt
cmp
ins
dec
push
mov
enter
mov
call
fwait
jbe
sub
jecxz
scas
cli
add
jb
call
fist
cmps
stos
and
inc
enter
sub
push
stc
ret
cmps
loope
sbb
sbb
xor
jmp
stc
lock
cmp
pop
(bad)
cld
adc
int
repnz
call
bound
and
in
ins
and
stos
add
rcl
xlat
sub
push
in
push
je
inc
sub
or
add
(bad)
mov
fadd
adc
xchg
hlt
or
add
shl
outs
aad
stc
sbb
loope
daa
add
addr16
add
stc
dec
xor
mov
jecxz
mov
inc
aaa
xor
fwait
mov
mov
data16
imul
ret
push
xchg
xor
mov
mov
inc
pop
dec
sub
or
pop
rcl
pop
push
adc
outs
xlat
pop
idiv
ror
xchg
daa
inc
popf
fild
mov
xchg
jg
sub
lods
retf
pop
repnz
dec
mov
sub
lods
jmp
out
jno
call
test
push
mov
mov
mov
ror
loope
xor
adc
adc
das
movs
jge
mov
sbb
ds
mov
and
sub
loope
loopne
and
aas
fnstcw
xor
inc
repnz
or
push
adc
mov
retf
imul
sbb
jo
xchg
dec
ret
xchg
scas
cmp
dec
add
adc
cmp
cdq
adc
or
int3
pop
mov
icebp
out
or
call
adc
push
dec
xchg
xlat
cmp
imul
mov
dec
jle
jecxz
jecxz
sahf
push
adc
stos
mov
mov
dec
or
push
iret
inc
cld
(bad)
jo
and
dec
dec
push
mov
mov
out
fistp
adc
pop
bsr
cwde
mov
mov
call
jp
mov
xchg
call
cmp
mov
jp
rsm
pop
dec
jbe
(bad)
out
xor
xchg
in
fld
dec
mov
es
push
xchg
sub
jl
mov
mov
or
leave
push
mov
inc
popf
adc
(bad)
mov
outs
xchg
add
xchg
and
hlt
and
mov
add
push
retf
retf
or
push
pop
icebp
mov
rol
or
into
gs
and
cwde
ds
sub
je
mov
fsubr
icebp
adc
daa
ret
pushf
test
mov
inc
js
fldcw
aad
xchg
pop
sahf
lods
pop
or
inc
lahf
fstp
mov
enter
jge
mov
sub
add
in
and
mov
(bad)
pop
test
fmulp
mov
push
stc
fwait
lahf
lock
pop
sub
xor
test
or
and
inc
xor
inc
lods
push
iret
add
scas
or
or
dec
add
and
cmp
ret
dec
cld
or
dec
dec
cmp
popf
test
sub
mov
subps
aaa
sbb
in
ror
dec
pop
es
pusha
(bad)
stos
push
test
repz
and
pop
add
cmp
in
mov
jmp
retf
(bad)
add
pushf
cmp
ja
loopne
dec
dec
cmps
add
dec
xchg
ror
add
mov
jbe
mov
cld
loope
jae
test
push
sub
es
call
je
ret
mov
mov
scas
std
sub
inc
mov
ret
in
jno
or
out
add
popf
xor
push
out
pop
push
ja
inc
and
sbb
pop
mov
pop
pop
in
push
les
xchg
outs
pop
test
jge
fbstp
pop
gs
or
fldcw
xchg
push
das
pop
adc
xchg
ficomp
or
fadd
push
movs
pop
lods
lock
mov
cmp
in
retf
dec
xchg
je
test
fidiv
mov
scas
push
adc
xchg
adc
aas
mov
mov
sbb
data16
(bad)
jp
stc
add
xor
jae
fsub
xor
adc
adc
pop
mov
inc
jl
das
xor
fdivrp
push
sbb
mov
xchg
sub
ror
cmps
xor
lds
adc
jnp
in
and
xor
shr
jno
push
mov
das
outs
cmc
outs
pop
cmp
pop
stos
call
dec
add
mov
sbb
mov
xchg
adc
pop
or
pop
mov
and
jno
aad
xlat
lods
clc
pop
sbb
or
fidiv
jo
sub
push
in
out
or
adc
mov
js
jecxz
ret
xor
js
or
pusha
mov
dec
into
add
jno
mov
dec
adc
push
mov
je
cmp
xor
fistp
sub
clc
and
bnd
or
lock
push
push
sub
retf
add
add
inc
loopne
or
cmp
mov
jle
mov
(bad)
(bad)
cmp
rcr
retf
pusha
xor
repnz
out
sub
xor
pop
aam
out
lock
loope
xor
lea
inc
fist
add
ins
data16
retf
lahf
ret
xor
imul
cmp
retf
out
and
dec
add
jl
sub
in
mov
pop
lods
jecxz
xchg
ins
pop
push
add
les
movs
test
leave
call
(bad)
push
push
sbb
push
sub
cld
mov
fstp
sub
xchg
and
adc
jg
dec
sbb
adc
rol
mov
cmp
or
ror
sub
xchg
cdq
outs
dec
add
fisttp
cli
mov
setg
mov
xor
dec
das
cdq
pop
push
pop
and
mov
add
mov
lahf
dec
cld
ret
aad
and
sub
mov
retf
mov
or
sbb
adc
mov
inc
sbb
test
in
fstp
xlat
push
daa
lods
jns
retf
push
lahf
pop
push
or
mov
pop
ja
js
inc
cmp
xchg
push
clc
jb
dec
dec
pop
fs
push
xor
stc
cwde
mov
or
mov
mov
retf
pop
xlat
bnd
inc
adc
cld
fist
mov
out
out
pusha
cmc
adc
inc
push
jmp
mov
jl
in
mov
mov
nop
xor
stc
movs
stc
mov
pop
lahf
cli
(bad)
mov
fwait
jno
and
push
ins
outs
lahf
ds
lods
in
test
jo
pop
push
lods
sub
xor
adc
cmp
movs
fs
imul
dec
pop
dec
mov
scas
(bad)
je
ret
mov
push
std
push
cmp
or
add
push
not
loope
mov
jecxz
out
lock
ror
sbb
sbb
outs
iret
or
ror
cmp
les
inc
sti
xchg
imul
adc
aad
inc
mov
in
shr
xor
ja
push
inc
shl
leave
in
int
push
xchg
daa
xchg
inc
jge
iret
int3
xchg
push
dec
test
adc
add
sbb
mov
dec
cld
and
jle
dec
pop
dec
icebp
cmps
fwait
xor
sbb
ins
mov
sbb
aad
adc
outs
fiadd
out
ret
call
jge
inc
sub
lea
jae
imul
pop
adc
inc
leave
push
imul
mov
sub
mov
mov
cs
cmps
push
cmp
movs
nop
sbb
push
mov
scas
(bad)
lahf
mov
push
movs
outs
inc
push
dec
movs
ret
pop
and
into
std
mov
repnz
enter
pop
xlat
ins
pop
pop
retf
jae
imul
mov
(bad)
mov
sub
hlt
cwde
sti
es
in
pop
jbe
xor
mov
aam
lods
cmp
xor
cmp
hlt
mov
aad
add
test
sahf
aad
jp
jns
mov
mov
(bad)
sbb
jmp
test
mov
jnp
(bad)
(bad)
push
into
popf
(bad)
fisub
mov
pop
inc
sub
and
test
add
cmp
jmp
jo
jnp
les
retf
push
inc
cmp
xchg
iret
sahf
ret
fiadd
movs
add
jp
out
int
leave
sbb
aad
fistp
(bad)
leave
ds
bound
out
jmp
ret
cmp
add
mov
popa
stos
pop
pop
jae
in
imul
mov
push
arpl
pop
jecxz
cwde
mov
leave
repz
jb
add
push
pop
sbb
sbb
mov
loop
aaa
sbb
cmc
sub
add
and
retf
jbe
in
dec
inc
ss
dec
xchg
pop
enter
mov
or
push
imul
xchg
jo
pop
dec
add
out
gs
dec
and
rcr
sub
xchg
jnp
inc
test
pop
jmp
shl
mov
fst
leave
or
push
inc
or
(bad)
icebp
(bad)
repnz
push
or
neg
ds
movs
not
bound
add
pop
cmp
mov
mov
xchg
xor
push
sbb
mov
add
jg
xlat
je
jle
mov
sahf
cs
mov
pusha
jp
fnstenv
xor
bnd
jp
inc
xchg
mov
aad
mov
mov
mov
ds
xor
js
jl
push
add
in
add
outs
dec
and
ret
mov
outs
xchg
sub
cmp
add
mov
or
pop
cmp
push
lahf
xor
rcl
sub
sub
iret
sbb
sbb
mov
sahf
pop
or
dec
adc
fwait
pop
mov
call
pop
push
dec
sub
sub
lods
out
mov
push
xchg
std
dec
push
(bad)
int
aam
or
pop
jmp
jmp
(bad)
lock
pop
and
leave
cli
frstor
push
paddb
push
outs
clc
push
inc
or
add
mov
imul
bnd
dec
in
imul
dec
clc
shr
pop
shl
mov
xor
or
cmps
push
loop
in
add
lds
pop
fnstenv
mov
dec
fdivr
push
xchg
pop
pop
push
imul
add
mov
mov
pop
push
outs
cmp
dec
das
cmp
pop
xor
test
das
jmp
add
pop
out
jmp
mov
rcr
mov
mov
add
loope
cmp
icebp
lea
call
jne
in
loop
mov
out
xchg
or
cmp
aaa
sub
loopne
fnstsw
sub
(bad)
or
aas
ficomp
scas
mov
mov
mov
ins
or
xor
or
push
rcl
enter
push
cmp
outs
jne
rol
sbb
lock
push
mov
jmp
shr
pop
mov
push
out
sahf
daa
es
push
test
pop
mov
inc
sub
or
ss
push
push
call
shufps
loop
xor
das
retf
inc
inc
and
mov
out
cmps
and
rol
cmps
jl
(bad)
mov
or
adc
loope
fcom
bswap
lds
mov
sar
or
mov
sub
mov
sub
add
adc
scas
jo
sbb
je
xor
aaa
test
mov
push
in
add
fbld
push
fisub
pushf
stc
stos
aam
dec
test
and
cld
cmc
xchg
jp
imul
les
mov
out
xchg
loop
imul
(bad)
mov
or
jnp
sub
mov
jae
ja
loop
outs
bnd
mov
mov
out
cli
jl
call
repz
or
rcl
(bad)
cmp
rcl
or
dec
fs
or
push
jno
in
add
pop
adc
loope
jecxz
in
ja
movs
mov
and
pop
xchg
lods
outs
and
cmc
push
sbb
cmps
popf
outs
mov
shl
sbb
lds
jns
jmp
pop
imul
test
mov
(bad)
repz
mov
in
clc
inc
pop
clc
sub
push
ja
jbe
cdq
fwait
bound
dec
mov
in
std
loope
sbb
rol
sti
ret
pop
dec
xor
ds
mov
cmp
or
adc
add
or
dec
xor
ret
clc
xchg
inc
pop
mov
xchg
sbb
adc
adc
or
dec
mov
in
pop
mov
inc
fmul
sub
push
ficomp
jle
in
xchg
cmps
adc
mov
add
dec
dec
mov
inc
fcomp
sar
add
in
xor
cmp
mov
or
dec
xor
jle
cmp
aaa
std
ror
psrlw
mov
adc
push
push
xchg
movs
das
int
mov
cmp
or
mov
push
mov
(bad)
es
add
mov
fist
cmp
dec
lds
add
enter
push
sar
hlt
cli
and
jb
mov
sbb
mov
xchg
cdq
pop
xchg
in
fild
jne
dec
retf
jle
xor
in
retf
xchg
sub
ds
and
ins
dec
jmp
sub
sbb
xor
sti
js
xor
pop
fldenv
cmps
xor
pop
inc
sub
das
xchg
sub
adc
mov
scas
loopne
lods
gs
and
and
xchg
cmps
sahf
int
xchg
stos
sbb
sub
mov
repz
enter
push
sahf
cmp
mov
(bad)
loop
mov
dec
pop
cmps
ins
cmp
in
movs
retf
addr16
pusha
xchg
add
test
stos
inc
inc
les
imul
sti
dec
jae
arpl
fldlg2
loope
jge
inc
sub
add
(bad)
mov
jmp
sbb
jmp
das
jbe
mov
fwait
das
das
int3
mov
pusha
mov
fidivr
ret
and
xor
fmul
pop
ins
mul
mov
leave
sbb
mov
retf
inc
leave
cs
ja
scas
out
push
lods
mov
arpl
lods
xchg
(bad)
jnp
cmp
pop
xor
inc
retf
inc
and
adc
and
lea
(bad)
loopne
inc
ss
pop
call
cli
into
or
rcl
call
sar
jae
pusha
bound
loopne
loope
mov
dec
lds
jns
mov
xlat
std
xchg
ror
mov
aam
clc
jnp
push
sbb
mov
ror
cmp
add
imul
push
mov
inc
ss
fwait
inc
cmp
cld
(bad)
ins
mov
xor
int
mov
push
and
repz
cmp
inc
bound
jno
mov
aas
in
xchg
mov
imul
jmp
(bad)
jmp
push
icebp
stos
out
in
inc
or
imul
js
cmp
or
sbb
test
les
retf
sub
retf
sar
ficom
mov
sub
sub
aaa
repz
xor
daa
(bad)
mov
xor
es
out
adc
ja
mov
and
lods
les
sub
lea
push
jo
xor
aam
retf
xchg
leave
mov
sub
mov
xor
adc
push
cld
ins
pop
xchg
xor
fdiv
mov
movs
shl
add
xchg
retf
call
xchg
cli
mov
dec
xor
push
sub
and
stos
xor
sub
(bad)
pop
inc
aas
inc
and
lods
xor
out
pop
lahf
cld
std
sbb
push
cmc
pop
into
aad
jge
fiadd
(bad)
mov
jnp
ftst
dec
pusha
and
ins
inc
push
jp
pop
aad
test
xor
jno
or
xor
aad
div
iret
jmp
sti
cwde
push
sbb
mov
leave
nop
pop
rol
adc
int
mov
push
lahf
scas
xor
add
(bad)
in
sbb
and
xchg
sub
lahf
dec
ret
mov
adc
fsubr
stc
xor
bound
pop
fisttp
dec
adc
retf
mov
cwde
mov
dec
(bad)
shl
xor
cmp
mov
xchg
or
sub
cmp
sub
fs
hlt
push
sbb
xor
fsub
jbe
jmp
pusha
and
sahf
fnstsw
(bad)
adc
xchg
mov
mov
inc
mov
out
or
mov
inc
cdq
xchg
sbb
std
les
xchg
mov
stos
adc
ds
ficomp
movs
inc
imul
retf
leave
xor
scas
adc
shr
out
push
xchg
add
inc
or
fimul
push
rcl
and
cmp
mov
push
sbb
fwait
popf
addr16
and
scas
mov
mov
jno
fcmovne
adc
into
cmp
(bad)
push
lods
ins
(bad)
hlt
pop
iret
sbb
das
ficomp
mov
mov
jno
inc
pop
push
scas
or
stc
movs
idiv
lahf
xchg
jle
es
inc
lods
pop
fucomip
cmps
xchg
adc
test
in
jnp
xor
enter
shl
(bad)
mov
pop
shl
pop
(bad)
mov
int3
into
jg
mov
xlat
pop
inc
dec
sbb
adc
add
imul
ror
and
jp
mov
push
out
mov
shl
push
adc
mov
add
dec
xor
add
aad
adc
pop
dec
fwait
sub
test
xchg
or
add
pop
dec
test
push
xchg
xchg
jno
arpl
dec
out
mov
aad
mov
pop
leave
mov
popf
push
test
adc
xlat
push
pop
fdiv
mov
icebp
dec
sbb
jp
push
sahf
adc
cld
in
pop
sbb
jge
das
cld
jnp
retf
loop
stos
jmp
jno
cmp
inc
ficom
push
cld
push
mov
xchg
pusha
xor
fs
sub
(bad)
add
jmp
xchg
xchg
retf
jne
dec
test
les
test
jl
pop
jno
jmp
inc
cdq
fldenv
test
out
add
fild
xor
outs
popf
mov
pushf
pop
pushf
adc
movs
icebp
sbb
or
das
or
sub
mov
clc
(bad)
mov
fbld
adc
inc
or
or
(bad)
mov
mov
push
xchg
hlt
xchg
jl
stos
stos
mov
cmp
in
sbb
sbb
xchg
pop
imul
xchg
mov
enter
lds
cmc
push
push
shr
fidivr
ins
call
or
mov
or
loopne
push
xchg
fcmovnbe
sub
sbb
idiv
xor
dec
lock
lods
aad
stos
xlat
or
sar
mov
lock
adc
jmp
loope
add
mov
inc
(bad)
fimul
call
out
popa
(bad)
shl
cmp
fdiv
(bad)
pop
sbb
imul
jnp
test
pop
sti
repnz
dec
mov
and
or
nop
push
xor
outs
std
into
jo
fwait
or
dec
lods
adc
mov
fld
or
cmps
test
retf
mov
sub
sbb
rcl
sahf
jnp
xor
mov
jg
xor
push
xor
cld
pop
test
lock
fimul
mov
fwait
scas
loope
xor
(bad)
pop
clc
cmp
adc
fild
lods
bndldx
push
push
sub
mov
xchg
adc
test
adc
jnp
cmps
fdiv
adc
fnsave
push
dec
inc
jae
mov
int
sub
sub
cli
push
dec
sti
xor
jge
daa
inc
push
push
inc
dec
cmp
xchg
dec
jns
test
jnp
repnz
retf
jo
bswap
sbb
cs
iret
cmp
sbb
pop
pop
dec
dec
into
js
and
cmp
add
mov
jmp
cmp
xor
push
pop
(bad)
stc
push
push
xor
lods
inc
xor
les
cmp
and
xlat
dec
gs
cmp
cmp
into
fs
out
sub
jp
fwait
(bad)
and
std
loopne
dec
ins
cmp
jmp
js
jo
and
pop
mov
jae
jge
aas
movs
add
pushf
rol
outs
xchg
(bad)
loop
(bad)
pop
jnp
fwait
outs
fnstsw
xchg
pop
iret
jg
and
mov
daa
call
retf
loop
sub
jne
xchg
pop
(bad)
(bad)
ins
nop
jb
dec
icebp
push
repz
fadd
(bad)
fbld
adc
jp
(bad)
shl
push
(bad)
sbb
or
adc
outs
xchg
sub
rcl
sar
and
jle
sar
test
mov
or
shl
(bad)
outs
adc
pushf
icebp
jb
(bad)
dec
popa
pop
mov
add
mov
cmps
mov
aas
jmp
and
out
pop
fstp
mov
jp
adc
and
in
fnstcw
sbb
test
xchg
enter
loope
lods
xchg
fadd
mov
push
loop
add
scas
pop
pop
mov
push
jne
xor
push
imul
es
(bad)
jg
out
inc
js
imul
sti
sbb
xor
loopne
(bad)
je
xor
sahf
mov
pop
push
sbb
sti
mov
mov
test
push
arpl
push
int3
push
(bad)
push
ins
iret
xor
xchg
pop
jmp
retf
or
out
gs
xor
mov
js
mov
push
pop
lahf
xor
add
mov
cmp
sub
sub
(bad)
dec
or
fxch
inc
loop
and
(bad)
lods
mov
jmp
in
mov
es
mov
(bad)
adc
pop
and
adc
pop
ffreep
int
xlat
fcomip
pop
push
dec
into
hlt
dec
cmc
jl
push
pushf
push
mov
js
xchg
out
push
test
xchg
sbb
xchg
mov
xor
xchg
inc
cdq
mov
jne
jecxz
shl
(bad)
mov
jg
(bad)
shl
sahf
xchg
push
int3
mov
mov
push
push
mov
sbb
mov
es
(bad)
out
jmp
js
lock
jmp
ror
js
pop
clc
jne
int
push
aaa
and
aaa
and
cmp
or
lahf
je
in
jno
pop
pop
lock
inc
mov
jmp
ss
std
and
(bad)
into
sbb
push
mov
xlat
and
adc
fcomp
in
mov
dec
je
clc
xchg
leave
dec
push
cmps
xchg
mov
aam
clc
or
jmp
jmp
push
sar
cmc
test
mov
or
sbb
mov
dec
or
mov
dec
push
xor
or
adc
xor
loop
or
(bad)
mov
jge
mov
pop
mov
pmaxsw
sub
loope
adc
(bad)
data16
xlat
out
and
into
in
mov
movs
imul
sub
and
stos
cmp
add
inc
(bad)
ficomp
add
std
jp
inc
pop
jg
pop
xchg
mov
xchg
inc
xor
cmp
call
movs
bound
aad
jns
sbb
xchg
je
add
xchg
fld
pop
and
and
and
pusha
rcl
cmps
xchg
cmp
mov
xor
das
jl
jle
mov
xchg
in
je
imul
mov
jmp
mov
cwde
fdiv
dec
jmp
iret
bound
add
adc
sub
inc
lods
jb
test
jg
fcomip
rcl
xor
or
dec
mov
adc
fcmovnbe
movs
or
mov
les
call
inc
sub
fdivr
pop
pop
outs
sbb
lock
cmp
pop
xor
pop
push
call
or
mov
and
bound
push
iret
inc
pop
mov
daa
cli
sbb
mov
mov
pop
inc
jg
clc
test
aas
cmp
xchg
daa
ins
mov
outs
jecxz
vcomisd
cmc
inc
mov
test
cmc
jge
add
shr
sbb
push
es
inc
das
int3
jl
mov
push
imul
inc
ins
loope
xlat
sub
pusha
addr16
in
add
lods
js
ret
dec
mov
clc
adc
test
loopne
pop
and
out
in
mov
pop
bound
and
cli
xchg
jae
arpl
add
cwde
jno
rcl
push
add
push
out
dec
and
mov
inc
pushf
push
ins
adc
fld
cmp
dec
dec
repz
and
loop
adc
loopne
js
lods
js
mov
xchg
jbe
jae
jb
neg
sar
cmc
dec
lds
cld
or
lahf
mov
mov
out
inc
mov
imul
xchg
adc
xchg
adc
(bad)
enter
mov
lock
sub
dec
and
dec
push
addr16
or
mov
push
jecxz
out
mov
ficom
es
xchg
push
fmul
jnp
cli
mov
iret
and
dec
xchg
mov
scas
jne
in
push
jnp
cli
cli
push
mov
ds
pop
adc
and
push
adc
jg
mov
adc
ss
mov
call
fistp
xor
in
push
push
mov
cmp
stos
or
sub
(bad)
adc
sbb
jbe
push
in
mov
mov
mov
daa
sub
aad
mov
add
out
jnp
stos
mov
in
mov
xchg
dec
xchg
enter
xchg
outs
(bad)
fmul
jnp
push
dec
in
sub
in
cmp
sbb
lea
(bad)
xchg
fild
ror
adc
add
ficom
sub
ins
push
cmps
cmps
xor
lea
jmp
adc
jb
mov
mov
out
aad
jnp
rol
push
jmp
in
push
shr
mov
fs
mov
push
xchg
jg
mov
ins
push
outs
into
or
cld
and
push
test
push
sbb
jmp
mov
push
push
jbe
test
cwde
(bad)
cmp
das
out
add
cmp
test
sbb
push
cli
cmp
je
xchg
sub
xchg
shl
mov
push
cmp
inc
fcom
adc
call
outs
sbb
das
aam
bts
pop
add
fisub
pop
ror
sbb
cmp
mov
call
aam
mov
shr
icebp
jne
mov
fld
clc
jb
les
mov
(bad)
cmp
push
lea
fwait
mov
rcr
les
xor
jo
and
mov
into
add
adc
mov
sub
addr16
cmp
mov
jne
loope
pushf
pop
pushf
aas
out
dec
xor
push
inc
jbe
mov
(bad)
call
out
xchg
test
rcr
fwait
out
jne
jns
lods
and
int
ror
push
and
add
sbb
xchg
(bad)
scas
mov
add
mov
test
fcom
(bad)
div
imul
adc
mov
xlat
bound
mov
clc
mov
adc
icebp
push
and
int3
dec
mov
and
and
mov
xor
adc
jns
xlat
(bad)
mov
pusha
lds
ins
fs
(bad)
je
cmp
jne
sbb
push
adc
(bad)
mul
mov
setb
gs
sub
lock
sbb
mov
push
fsub
push
jb
leave
inc
push
jmp
pushf
js
fimul
pop
nop
int
jne
ins
fild
cmp
push
aam
xor
loopne
jns
(bad)
idiv
not
sub
test
data16
push
js
pop
or
cwde
jae
daa
lea
jle
lahf
jo
sbb
xchg
ret
out
add
push
test
(bad)
(bad)
inc
call
mov
pop
pop
pop
ins
jg
and
aam
cmps
mov
dec
add
ds
mov
bound
outs
cmp
lahf
or
fidiv
add
cld
stos
int3
lods
leave
or
jno
loopne
and
jmp
xchg
pop
and
stc
cmp
js
mov
push
in
movs
mov
dec
fstp
and
out
outs
mov
lahf
inc
stos
or
jo
add
pop
imul
dec
and
stos
int
mov
int
push
dec
cmp
es
out
xchg
adc
aas
sub
mov
enter
jmp
das
sbb
sahf
jo
mov
rcr
jecxz
sbb
std
das
or
jno
icebp
inc
rcl
es
jecxz
dec
or
out
inc
shl
xchg
jle
loopne
mov
test
cs
cmp
add
sub
adc
jbe
cmp
mov
adc
dec
xor
fmul
xor
xchg
retf
cmp
(bad)
mov
cmp
xchg
(bad)
fnsave
sbb
push
add
mov
sahf
sub
add
mov
jg
imul
pop
outs
or
xor
push
sbb
pop
mov
sbb
iret
sbb
adc
sbb
sbb
jmp
jmp
push
pop
or
xor
jl
ficomp
js
or
mov
xor
test
movs
mov
sar
push
fidiv
xchg
pop
push
iret
or
mov
jns
hlt
retf
aam
or
mov
jmp
jg
xor
ret
mov
into
inc
xchg
adc
jae
arpl
adc
outs
bnd
lock
push
das
mov
in
ror
adc
jnp
mov
inc
mov
xchg
outs
sbb
jnp
mov
je
(bad)
and
adc
scas
fsubr
xchg
cmp
push
pusha
pushf
pop
add
push
push
xchg
mov
pop
sbb
jle
mov
cwde
inc
xchg
popf
add
cmp
out
rcl
pop
push
ins
rol
cmp
mov
and
nop
mov
sahf
and
fsubrp
into
arpl
cmc
imul
jb
imul
dec
adc
dec
imul
inc
loope
cmc
in
aad
loop
mov
add
std
mov
pop
pop
inc
jmp
xchg
inc
and
and
fisub
out
je
mov
or
add
jnp
mov
xor
pop
mov
push
adc
sub
cli
test
retf
mov
aaa
aas
adc
push
mov
inc
inc
xchg
stos
sbb
retf
lods
lds
leave
jecxz
push
jnp
ss
xchg
pop
mov
scas
(bad)
addr16
movs
adc
sub
sbb
pusha
xchg
out
dec
cmp
inc
jecxz
call
int
in
sbb
jg
imul
or
mov
call
scas
cli
inc
mov
enter
pushf
xor
mov
or
mov
clc
stc
pop
jecxz
xchg
(bad)
(bad)
jg
inc
pop
sahf
loop
xor
test
fs
rcl
out
xor
(bad)
(bad)
scas
add
cmp
cmps
jnp
ret
pop
sbb
dec
out
neg
dec
xor
les
test
mov
jl
mov
pop
cmc
jb
mov
frstor
popf
and
xor
cmps
fnsave
cmp
or
dec
sbb
loop
repnz
inc
pop
mov
es
aad
xorps
call
xchg
xchg
add
adc
mov
movs
cmp
sar
jb
dec
jge
sbb
scas
test
mov
push
mov
cdq
ins
jns
fisttp
sbb
jno
dec
mov
mov
scas
pop
and
xchg
sti
inc
dec
fist
push
call
mov
add
xchg
push
(bad)
pop
mov
enter
dec
xor
dec
or
pop
rcr
push
dec
(bad)
imul
movs
sar
jae
push
jge
lds
out
out
sub
xchg
iret
jle
js
push
sbb
lock
sub
icebp
repnz
sub
repnz
inc
rcl
dec
in
push
or
and
sbb
add
and
adc
fs
js
sub
jno
or
ror
push
add
out
ins
mov
pop
jecxz
mov
into
test
xor
fild
xor
or
xor
repnz
sub
inc
pop
neg
jle
mov
add
dec
or
cli
fs
and
dec
fs
sub
into
jne
addr16
call
xlat
push
jmp
jne
outs
sub
movs
stos
pop
or
fcmovbe
mov
data16
outs
sub
inc
imul
adc
or
sub
stos
mov
push
ins
cmps
xor
sub
and
cmp
aam
(bad)
dec
xor
jae
dec
dec
inc
mov
xor
jmp
pop
mov
pop
aaa
jns
repz
xor
imul
les
mov
fmul
dec
inc
in
inc
sub
clc
fadd
inc
pop
pop
scas
pop
in
jno
jmp
xchg
sub
retf
push
fs
pop
add
pusha
outs
call
lods
cmps
movs
test
mov
and
out
leave
ja
sbb
xor
arpl
push
les
lods
pop
or
dec
pop
sub
mov
out
jle
data16
jae
dec
sub
or
mov
icebp
in
push
int
pushf
xchg
aad
fisttp
cmp
xchg
sar
stc
pop
rol
rcl
push
sub
pop
iret
mov
mov
lock
frstor
out
and
cmc
push
test
call
fsubr
shl
or
jo
sub
mov
mov
and
es
lahf
sbb
or
inc
mov
stos
in
repnz
call
push
inc
cmps
(bad)
ss
not
push
mov
adc
ja
sub
jae
xor
or
std
test
rcl
jae
jmp
mov
std
jle
stos
mov
rcl
push
mov
nop
lahf
mov
lea
mov
movs
pop
adc
adc
cmp
cmp
ss
fdivr
xor
ds
bnd
fptan
pop
in
mov
xor
mov
out
mov
pop
icebp
mov
test
addr16
inc
dec
outs
dec
mov
mov
lahf
lods
fnstenvw
mov
cdq
jns
inc
push
aam
cli
iret
and
icebp
clc
pushf
ret
leave
sub
or
ins
test
sti
and
cmc
jns
enter
sbb
scas
scas
in
cmp
sbb
xor
sbb
imul
or
das
stos
cmp
idiv
or
jnp
stos
jp
xor
jnp
sbb
push
cdq
sar
js
mov
push
sbb
adc
loopne
test
xchg
dec
dec
sub
mov
sbb
je
cmp
mov
int
sub
inc
int
scas
mov
loop
inc
shl
mov
mov
cmps
fld
loop
rcl
dec
add
mov
pop
sysenter
jg
adc
jmp
imul
mov
(bad)
dec
cli
rcr
and
add
shl
nop
pop
dec
mov
mov
dec
ins
addr16
shl
and
call
popa
inc
ficom
push
xor
adc
retf
pusha
push
ret
jns
fnstsw
sbb
add
add
rcr
movs
clc
lods
cld
or
cmps
mov
dec
inc
push
sub
dec
mov
ja
pop
dec
jmp
xchg
jnp
mov
imul
cdq
cli
jg
cmp
fcomp
push
repnz
cmp
sub
push
mov
or
xor
int3
popa
hlt
sbb
imul
pop
dec
mov
shl
es
jmp
hlt
mov
cmp
cmp
dec
sub
cmp
int
mov
cli
lds
add
test
ffreep
mov
fstp
test
adc
push
gs
shl
movs
mov
or
js
push
jnp
add
cmp
test
retf
or
addr16
mov
push
mov
jnp
popa
inc
jb
push
adc
pop
out
pop
adc
xchg
sub
mov
adc
cli
sti
(bad)
ins
ficom
add
pop
popa
imul
sbb
movs
js
sub
xchg
ret
adc
or
jl
shr
and
push
or
out
xor
jo
(bad)
cmps
daa
movs
sbb
shr
inc
or
push
sbb
(bad)
ret
mov
xor
and
cmp
in
mov
(bad)
fsub
and
bound
and
cmp
xlat
scas
add
loope
jb
mov
push
lods
add
enter
in
popf
add
push
js
add
lds
lods
sub
aaa
xchg
cmp
sbb
adc
outs
retf
mov
inc
scas
add
mov
sub
ss
ja
les
cmc
push
dec
push
pop
dec
jnp
cli
aad
mov
pusha
adc
mov
and
lds
lock
(bad)
out
rcr
jo
scas
mov
rcr
outs
xor
mov
xchg
fldcw
push
fs
mov
dec
pop
xor
aam
sti
fisub
(bad)
pop
mov
inc
jae
add
cmc
fbstp
(bad)
sbb
sti
loope
bound
test
dec
jno
pushf
pushf
or
mov
and
xchg
les
push
ins
mov
test
xchg
sbb
sub
fstp
or
xor
add
out
rol
into
fwait
push
lea
adc
ins
pop
outs
adc
sub
pop
inc
push
inc
ins
mov
dec
test
stos
sbb
inc
inc
mov
mov
push
or
sbb
dec
sbb
mov
add
arpl
sub
xchg
push
retf
aaa
sub
popf
xlat
pusha
inc
mov
aaa
push
mov
clc
cld
inc
cdq
and
test
cs
idiv
cmps
mov
and
xchg
adc
ins
xchg
jnp
das
mov
dec
cmp
push
xchg
xchg
out
mov
push
jnp
not
sub
jle
test
or
test
lods
and
enter
pop
mov
fwait
sub
mov
dec
pop
mov
call
dec
or
repnz
hlt
stc
adc
stos
(bad)
mov
dec
dec
mov
mov
mov
sbb
repz
lock
xlat
cmps
cmc
dec
in
jo
adc
mov
sub
lods
push
pop
jmp
out
xchg
fcmovbe
out
cli
xor
jmp
push
sub
push
lock
mov
enter
pop
jae
jae
js
xchg
cmp
data16
int3
(bad)
ret
sub
push
cs
sbb
mov
or
retf
xchg
mov
lea
sub
pop
cmp
sub
in
pop
push
ins
sbb
loop
mov
or
or
das
and
cmp
push
scas
aad
cmc
fsub
push
loop
enter
adc
jecxz
(bad)
stos
clc
push
sub
dec
ss
add
mov
popf
lea
sbb
pop
fwait
ins
jp
int3
cdq
mov
cmp
mov
aaa
fldenv
fxch
inc
mov
push
loopne
std
add
pmulhuw
cmps
ss
div
push
fsubr
ins
shr
adc
pop
shr
push
mov
pushf
or
mov
lahf
aas
je
movs
loope
fld
hlt
mov
(bad)
aam
stc
out
pop
js
sub
aaa
jmp
(bad)
out
call
xchg
mov
sbb
mov
mov
jnp
cmp
mov
xor
jmp
sbb
adc
scas
adc
xchg
cli
mov
sahf
sbb
(bad)
mov
xchg
add
(bad)
jmp
lea
scas
rcl
pop
sbb
fdiv
imul
mov
(bad)
and
das
adc
loop
sub
test
aad
mov
cmp
or
pop
sbb
jmp
adc
pop
push
pop
or
push
lahf
movs
ja
test
ror
mov
adc
adc
lock
mov
in
test
sbb
vpmaxub
sub
mov
fwait
adc
add
dec
jle
adc
(bad)
(bad)
sahf
fld
push
scas
xor
add
inc
lea
mov
push
outs
inc
test
stos
add
push
fwait
dec
adc
jle
add
jmp
ss
pop
sbb
cmp
iret
jae
pop
or
and
in
or
mov
ret
test
fcomp
out
(bad)
ss
xor
mov
stos
xlat
stos
stos
out
pushf
loope
jnp
(bad)
mov
lds
fs
cwde
mov
pop
dec
jnp
pop
fild
pusha
ret
and
mov
mov
add
jno
(bad)
dec
adc
inc
inc
sub
adc
lds
mov
retf
xlat
jo
aam
push
loop
jmp
sub
fstp
(bad)
enter
fld
jge
popf
inc
(bad)
jbe
dec
out
lock
sbb
shl
shr
jle
pushw
sub
jb
out
xor
and
(bad)
jnp
sbb
sar
push
ins
je
ins
neg
jne
pop
imul
push
shl
mov
test
xor
out
push
sbb
shl
sub
loop
fdiv
enter
imul
cwde
xchg
scas
xchg
mov
dec
xor
jp
mov
mov
into
fwait
cmps
ins
ins
add
push
int
pusha
push
jmp
aam
or
mov
jmp
jne
pop
call
cmps
mov
inc
inc
fcmovb
out
test
cs
fimul
mov
xchg
les
ror
mov
mov
les
cmp
mov
sub
jae
push
daa
(bad)
mov
leave
jl
sub
(bad)
sbb
in
not
repnz
cmp
jg
mov
fidivr
adc
sbb
add
dec
and
push
(bad)
movs
cmp
add
jo
retf
xchg
or
mov
xchg
aaa
mov
int3
(bad)
aam
repz
pushf
leave
stc
fimul
jno
ins
jmp
push
or
add
sbb
and
mov
jo
repz
jl
pusha
pop
adc
arpl
in
sub
lds
(bad)
loope
push
xor
retf
or
call
outs
cli
pop
leave
sbb
icebp
sbb
pop
daa
jle
dec
sub
div
xor
arpl
je
sub
ins
cmp
into
rcr
or
mov
lods
in
out
adc
or
(bad)
adc
pop
and
dec
cli
out
or
xchg
sub
cmp
in
inc
pushf
out
lods
stos
ss
or
hlt
cmp
fsubp
or
js
aad
inc
adc
test
xor
test
into
pop
data16
fs
mov
xchg
outs
mov
add
leave
sbb
pop
xchg
mov
add
xor
test
in
mov
or
imul
inc
dec
je
stos
or
ror
cmp
pop
push
nop
sbb
out
add
lea
aaa
out
mov
clc
mov
ret
aad
in
xchg
dec
sub
gs
imul
mov
shl
xchg
pop
cld
jbe
jle
mov
mov
push
iret
out
adc
daa
pop
pop
scas
cmp
pusha
sub
mov
xor
es
pop
mov
jno
cld
mov
cmp
mul
and
push
mov
dec
stos
fnstsw
xlat
popf
cdq
sbb
out
mov
mov
fild
push
jbe
nop
les
inc
cmp
(bad)
outs
xchg
les
jecxz
out
int
loopne
add
iret
fisubr
or
pop
push
ss
pop
cli
popf
imul
movs
sti
out
jmp
push
cmp
adc
imul
xor
mov
call
add
jns
mov
or
jge
add
arpl
cmp
test
inc
loop
enter
adc
pop
jle
pop
and
cmp
xor
dec
mov
(bad)
push
cmp
sahf
push
outs
adc
clc
cwde
sbb
jp
xchg
or
enter
pop
xchg
jno
push
fstp
imul
mov
add
xor
add
nop
popa
xchg
cmp
adc
inc
(bad)
add
clc
mov
inc
sbb
sub
js
xor
aam
jae
jae
ins
jmp
aam
shr
or
jle
jge
jmp
mov
dec
jnp
popf
sub
xor
inc
nop
ret
(bad)
js
fs
add
rcr
or
aad
repnz
push
loop
cmp
push
sbb
or
shl
jmp
out
add
xor
inc
xor
xchg
in
cmps
sub
fmul
push
xchg
pop
sbb
jae
test
cmp
jnp
sbb
xor
jbe
mov
out
xor
push
cmc
or
bound
cmp
mov
call
shl
loop
sbb
dec
cwde
dec
mov
add
sub
push
mov
dec
scas
cld
jecxz
inc
or
popf
sub
push
arpl
inc
xor
jle
cmp
inc
in
mul
push
mov
jl
retf
in
jae
jecxz
pop
mov
jbe
mov
in
sbb
ficom
push
mov
fcmovne
add
fwait
sub
out
or
sub
push
bound
jbe
in
(bad)
cwde
and
cmp
mov
jecxz
ins
test
mov
(bad)
jnp
call
mov
loopne
sbb
loope
out
cmp
xchg
push
imul
aad
jp
mov
pop
adc
inc
fisttp
(bad)
pushf
les
ror
ja
out
in
test
pop
xchg
inc
adc
pop
mov
shl
push
adc
xor
out
nop
mov
or
hlt
dec
mov
test
pmaxsw
(bad)
aaa
push
xlat
jo
sbb
ins
enter
fdivr
test
cwde
mov
jae
aad
imul
jo
xor
cmp
xchg
ret
fcmovnu
mov
ins
dec
pop
nop
push
sub
xchg
rcl
das
push
rdmsr
cli
dec
ror
push
xchg
ja
and
mov
pop
jg
call
adc
outs
shl
cmp
or
xchg
(bad)
push
push
fcmove
imul
pushf
js
push
daa
pushf
movs
icebp
sub
push
add
mov
dec
jo
mov
lahf
cmp
dec
or
and
ss
jmp
inc
cmp
inc
aas
xchg
rcl
les
ds
lahf
pop
ret
jg
mov
out
pop
out
aam
adc
adc
xchg
xchg
icebp
aad
jns
jg
adc
dec
pop
mov
loopne
test
push
add
outs
push
mov
jae
clc
add
add
push
inc
cmp
test
adc
push
mov
jecxz
sub
ret
sub
cmp
rol
jnp
add
in
push
push
mov
fist
call
clc
xchg
lds
inc
jmp
lods
js
lahf
push
adc
sbb
pop
rcl
mov
xchg
and
mov
sbb
imul
cmp
sti
dec
sbb
cwde
dec
into
add
mov
mov
inc
xchg
dec
lods
mov
movs
mov
sbb
jl
xchg
and
sbb
dec
mov
in
outs
dec
sub
pop
and
js
xor
dec
pop
dec
add
mov
xor
or
imul
xlat
scas
and
int
int3
pop
push
push
jb
(bad)
aaa
ja
aas
and
cmc
jp
cs
ds
in
sbb
test
jae
bound
adc
xchg
jp
frstor
mov
out
and
xchg
(bad)
daa
icebp
cmp
daa
xor
mov
pop
or
cmp
push
jmp
add
cmc
mov
(bad)
out
aaa
add
push
outs
sub
cmps
fistp
loopne
inc
or
and
push
pop
dec
adc
mov
sub
es
std
xchg
sar
je
into
mov
cmp
jp
inc
inc
jg
mov
neg
mov
pop
jns
jp
(bad)
lods
sub
push
sbb
dec
(bad)
cs
movs
inc
sbb
shl
pop
pop
sub
lfs
sub
hlt
popa
push
mov
mov
out
mov
ins
xlat
mov
pop
jmp
fstp
xchg
pop
xchg
pop
mov
sbb
test
cmp
and
mov
into
in
js
out
rol
jecxz
cmp
and
retf
pop
movs
ss
idiv
aas
int
pop
jle
stc
xchg
pop
ins
hlt
lahf
xchg
call
jae
pop
sbb
inc
mov
inc
mov
push
shl
rdpmc
test
xlat
cmc
mov
mov
xchg
xor
sahf
jnp
mov
sbb
xchg
xrelease
cmp
dec
in
add
sub
mov
test
push
ins
or
sub
lods
(bad)
in
cmp
xchg
popa
jmp
sbb
or
mov
cs
leave
pop
inc
adc
pop
cmc
ds
fisttp
pop
push
repnz
in
mov
or
nop
fdiv
xor
sbb
(bad)
sub
push
daa
push
addr16
pop
lods
fucom
sub
xor
pop
cmp
mov
lods
je
sub
mov
xor
inc
fnstcw
dec
mov
or
pop
cmps
mov
test
dec
lea
or
add
cmps
bound
cmps
in
ret
fist
or
adc
jno
out
sbb
add
push
cmp
into
addr16
jns
inc
jg
push
inc
xchg
xor
mov
add
fadd
out
fnstenv
sar
imul
imul
adc
adc
inc
mov
inc
cmp
out
mov
cld
push
jmp
inc
lahf
pusha
int3
in
inc
dec
ja
pop
mov
test
shr
inc
outs
inc
push
scas
mov
jno
nop
icebp
rcl
fild
inc
imul
push
jmp
sub
imul
push
xlat
mov
lods
mov
add
inc
mov
fdivr
mov
std
or
pop
add
push
(bad)
in
sti
jge
scas
mov
xchg
jmp
add
xor
scas
dec
sar
mov
xor
fidiv
xchg
xor
dec
mov
mov
repz
das
cmp
mov
pop
jecxz
cmp
repz
mov
(bad)
jae
in
mov
aaa
pushf
mov
shl
fcom
pop
enter
or
leave
sahf
xchg
test
fcom
mov
mov
xchg
sbb
call
movs
adc
sar
xor
dec
int3
cmp
xor
(bad)
xor
lahf
adc
sub
dec
xchg
push
inc
mov
adc
loopne
mov
pop
loope
icebp
dec
in
retf
sub
inc
mov
pop
mov
mov
leave
popf
ficomp
jae
test
jge
out
and
adc
xchg
jo
jmp
jb
cmp
inc
ret
adc
or
dec
or
adc
pop
loopne
outs
dec
pop
popa
cmp
dec
daa
shl
imul
fcom
mov
popf
inc
ficom
mov
and
popf
add
icebp
dec
xlat
nop
mov
hlt
add
repz
call
dec
add
fsubrp
imul
cli
repnz
ds
movs
enter
retf
(bad)
xchg
xchg
lea
jbe
fnstenv
retf
test
leave
or
dec
aas
pop
inc
scas
mov
stos
jg
out
mov
les
sbb
mov
(bad)
rcr
int3
mov
fmul
aam
push
add
shld
in
imul
fst
dec
fiadd
inc
jnp
nop
mov
sub
push
sub
retf
scas
or
aad
xor
inc
dec
xchg
xchg
cmc
or
mov
push
pop
sbb
aas
mov
in
js
std
scas
fadd
push
mov
bound
sub
sbb
jno
imul
dec
or
xor
or
adc
cmp
clc
xchg
es
sub
push
inc
jge
sub
ins
mov
sbb
cmp
mov
in
xlat
enter
and
sub
aam
cmp
mov
sub
retf
movs
mov
shl
inc
mov
xor
hlt
loop
sub
sub
sbb
aaa
int
mov
scas
je
jl
xor
add
and
dec
jmp
inc
mov
and
retf
(bad)
and
enter
out
imul
mov
cld
cmp
pop
test
inc
hlt
pop
repnz
int
mov
iret
sbb
adc
and
xor
mov
adc
retf
add
xor
jmp
push
push
in
xor
xchg
pop
or
inc
fldenv
in
shl
ss
mov
daa
adc
mov
rol
cmp
jl
xchg
outs
fs
fcom
mov
data16
ins
xor
gs
inc
clc
(bad)
xchg
out
push
(bad)
xchg
pop
and
les
enter
int
pusha
pop
or
jmp
lock
cmc
add
icebp
imul
sub
xor
or
mov
fst
mov
popa
pop
loopne
arpl
cdq
push
sbb
(bad)
mov
pushf
jnp
sub
inc
xor
stc
cmp
and
mov
inc
sub
mov
fdiv
mov
popa
or
call
fsub
mov
lods
rcr
(bad)
call
add
dec
pop
arpl
loop
pop
retf
out
pop
xchg
nop
mov
gs
mov
scas
in
sub
push
sub
pop
into
xchg
out
shr
cmp
jns
add
adc
mov
loop
xor
dec
retf
sti
(bad)
cmp
jp
(bad)
push
xchg
outs
sbb
stos
jbe
mov
lea
rcl
es
imul
sbb
add
mov
outs
fcom
stos
test
add
shl
inc
retf
adc
sar
out
ficomp
adc
pop
or
and
addr16
imul
loopne
xor
movs
leave
repz
dec
nop
mov
push
and
in
mov
adc
mov
jl
or
mov
in
ficomp
call
dec
in
stos
data16
out
out
lock
outs
xchg
hlt
mov
fs
mov
mov
xchg
fs
sbb
enter
(bad)
fstp
pop
popf
jmp
cmp
test
xchg
adc
cmc
pop
xchg
retf
fs
out
(bad)
je
and
cmp
pop
ins
mov
mov
clc
mov
xchg
lock
pusha
or
retf
xchg
xchg
cmp
push
shl
jecxz
mov
inc
sti
and
mov
mov
test
sbb
fucom
shl
shl
scas
sub
fs
jbe
sub
mov
pusha
adc
lock
push
jmp
mov
mov
inc
xchg
mov
jns
scas
sar
xchg
test
jae
cmps
inc
std
lahf
inc
cld
sti
mov
cmp
or
dec
dec
push
inc
repnz
scas
pusha
hlt
rcr
call
test
(bad)
mov
gs
push
js
sbb
(bad)
sbb
jecxz
mov
(bad)
out
ror
lods
sub
xchg
or
mov
movs
and
dec
sar
xchg
cli
push
call
call
mov
mov
add
fcomip
ror
(bad)
lahf
xchg
xchg
cmp
mov
in
mov
adc
std
jbe
push
xor
in
inc
adc
addr16
dec
and
int3
(bad)
push
addr16
cmp
mov
shr
loop
add
xor
ret
test
loop
bswap
jae
stos
adc
push
std
adc
cli
(bad)
arpl
mov
shl
jmp
(bad)
xor
adc
sub
push
dec
mov
pusha
loopne
jne
and
jbe
sbb
dec
inc
sub
das
cli
xchg
and
pop
loop
sbb
pushf
sbb
mov
push
pshufw
test
inc
mov
ret
mov
sub
inc
sub
hlt
xor
les
mov
jp
jmp
xchg
(bad)
xchg
adc
outs
mov
test
add
sub
fistp
xor
or
mov
push
jecxz
add
push
push
(bad)
rcl
fstp
sub
in
jl
(bad)
shl
iret
(bad)
fs
cs
mov
popf
pushf
mov
enter
(bad)
fcomp
popa
push
cwde
outs
mov
push
and
mov
xor
movs
adc
shr
ret
pop
xchg
xchg
(bad)
mov
mov
jae
add
jmp
out
cmp
jmp
aaa
js
cwde
movs
add
sar
fistp
movs
mov
sbb
stos
adc
or
lahf
mov
add
push
push
inc
pop
(bad)
jno
push
test
je
push
aam
stc
repnz
ja
lods
sbb
mov
inc
mov
dec
imul
inc
sub
dec
jmp
ds
ss
inc
cmc
nop
jg
push
mov
fistp
jg
adc
xchg
daa
(bad)
in
fs
inc
imul
dec
jbe
and
call
xchg
jb
inc
jmp
add
cld
and
xor
adc
fld
inc
gs
outs
or
test
fstp
jecxz
sub
push
push
dec
fdiv
and
scas
push
jnp
mov
call
into
pop
aaa
daa
pusha
pushf
test
push
xchg
push
jl
adc
les
ja
sub
mov
test
imul
shl
mov
cmc
out
inc
cmp
js
call
ror
(bad)
cwde
and
cmps
cdq
pop
call
jns
mov
lods
icebp
cs
sbb
adc
hlt
cmps
cmp
scas
and
push
ror
adc
test
stc
adc
add
das
inc
dec
xor
jae
xchg
sbb
(bad)
addr16
xchg
cmp
stc
xchg
retf
icebp
in
les
in
push
mov
in
aas
scas
and
cmp
retf
inc
test
mov
xchg
fimul
add
push
cmp
sbb
lds
icebp
out
aaa
dec
loopne
jmp
or
retf
jo
xor
popa
cmp
fnstenv
sbb
inc
xchg
jmp
fist
mov
or
aam
mov
jge
mov
sbb
cmp
bound
sar
aad
adc
or
and
adc
(bad)
ins
mov
aad
or
or
rol
shr
inc
jle
ret
fnstenv
sbb
pop
shl
push
xchg
iret
and
pop
lea
cli
inc
xchg
adc
jmp
sahf
push
inc
push
cmp
out
or
pop
iret
test
and
cmp
xchg
and
adc
jbe
inc
test
mov
mov
int3
push
inc
es
cld
nop
mov
sub
sahf
lods
(bad)
cmp
arpl
outs
adc
xchg
shl
pop
and
dec
push
aas
les
xchg
inc
add
sar
ds
push
adc
cli
mov
lea
and
imul
add
stos
das
(bad)
and
inc
add
cmp
aaa
sub
fimul
loopne
cmp
dec
lods
add
xor
cmp
repnz
out
leave
dec
sbb
xchg
sbb
cs
mov
lods
pop
inc
inc
ds
rep
lock
bound
cmp
xlat
retf
dec
jns
add
mov
loopne
lds
fs
ins
cmp
ins
aad
aaa
cli
inc
sbb
test
jo
push
add
scas
mov
outs
inc
sbb
ins
and
fild
(bad)
(bad)
sub
ja
cld
cmc
imul
pop
mov
mov
(bad)
leave
cmc
cmc
push
mov
adc
bnd
mov
sub
push
scas
stc
jno
retf
mov
fwait
hlt
sbb
imul
xchg
dec
icebp
sbb
mov
inc
stc
mov
scas
pop
mov
rcr
mov
icebp
aaa
(bad)
ret
or
stos
cld
inc
add
mov
dec
xor
out
(bad)
std
cmp
je
stos
fnstenv
scas
stos
dec
push
jmp
(bad)
fist
bound
push
lods
and
cwde
in
shr
(bad)
cmp
dec
xchg
lods
scas
pop
mov
xor
push
movs
stos
sbb
mov
mov
dec
mov
sbb
fdiv
adc
adc
dec
ins
fwait
daa
call
in
pop
mov
mul
cmp
jae
loopne
push
movs
pop
and
dec
ret
adc
pop
xchg
jl
rcl
fxch
shl
pushf
mov
xchg
cmp
mov
jmp
pop
mov
adc
lods
daa
xchg
test
lds
pushf
rcl
jecxz
mov
test
jb
in
das
jl
rol
movs
sub
fnsave
jno
es
imul
or
sbb
sub
push
add
and
(bad)
sbb
xchg
ret
cwde
stc
inc
dec
pop
cmp
pop
sahf
xor
mov
or
dec
dec
popa
iret
icebp
cld
rol
fwait
pop
add
out
cdq
jge
loope
add
mov
add
jbe
sub
mov
inc
in
stos
sub
dec
popf
mov
pop
imul
cmps
jmp
pop
jle
jmp
out
fwait
xor
(bad)
test
add
inc
(bad)
adc
pop
addr16
fidiv
mov
nop
imul
mov
pop
sbb
jb
push
movs
mov
loop
fcomp
les
ret
jle
xadd
add
and
daa
cmp
sbb
mov
inc
ss
repnz
cmps
mov
rcl
aas
xor
add
cmps
ret
cmp
xor
ja
int3
daa
mov
sahf
and
in
jb
adc
shl
bound
or
sbb
xchg
sti
lea
lock
add
fcom
xchg
call
mov
aam
ret
inc
inc
sub
pop
icebp
cmp
std
iret
mov
sbb
xchg
xchg
jl
adc
ins
lods
jno
bswap
pop
jmp
call
lods
out
mov
xor
mov
repz
sub
sub
rcl
mov
sub
and
(bad)
sti
or
rcl
sbb
and
pop
mov
sub
pop
loopne
fcomp
int
ret
xor
int3
in
pop
sub
ds
ret
idiv
rcr
unpckhps
and
jb
sbb
in
jo
xor
mov
sub
jge
movs
enter
or
scas
cli
xchg
and
pusha
add
cmp
sub
iret
loope
or
(bad)
jno
nop
push
pop
cmp
mov
or
fwait
shl
sub
xor
or
dec
pusha
cli
xchg
mov
sbb
mov
cwde
rol
mov
xchg
pop
add
mov
jmp
mov
pop
ret
xchg
xor
in
icebp
repz
push
(bad)
iret
fidivr
dec
dec
cmp
lock
rol
adc
xchg
sti
inc
mov
iret
jl
sahf
inc
(bad)
jmp
inc
outs
sbb
inc
adc
push
div
sbb
lahf
fnsave
mov
sbb
add
pushf
mov
js
into
mov
mov
in
sub
in
fistp
scas
inc
ins
pushf
sub
push
ret
fidiv
les
aas
nop
out
dec
stc
js
xor
gs
cmps
mov
es
mov
arpl
out
xchg
mov
mov
lods
jae
test
and
cmps
cld
out
xor
in
cmps
sbb
jb
fidivr
jp
mov
xchg
mov
inc
push
adc
push
ja
imul
ins
ret
jbe
xor
cmp
out
or
test
sbb
int
add
test
pop
icebp
fiadd
jl
xor
add
cmp
(bad)
xchg
(bad)
popf
inc
and
ficomp
lods
js
jmp
fisttp
xor
mov
mov
jge
inc
popa
mov
jnp
rcl
les
out
cmp
sub
lods
imul
mov
xor
repnz
ja
fisub
jb
popf
inc
inc
dec
mov
cmp
xchg
sbb
push
add
ja
pop
mov
inc
(bad)
pop
push
inc
cmp
cli
dec
inc
pop
mov
lock
adc
dec
pop
ret
ret
mov
dec
and
add
xlat
sbb
push
mov
jb
mov
push
data16
lods
adc
lods
sar
repz
inc
sahf
mov
dec
aam
sub
out
jo
xchg
pop
loope
and
add
fcomi
xchg
xor
dec
pop
mov
and
jecxz
mov
out
inc
jne
retf
jecxz
gs
xor
aam
adc
out
inc
sbb
adc
and
imul
pop
or
inc
mov
out
xor
shr
push
and
pop
outs
cmp
mov
sub
jmp
data16
mov
mov
inc
retf
imul
rol
ror
sbb
in
lahf
les
test
jmp
mov
sbb
and
cmp
xchg
cdq
jns
into
pop
dec
and
shl
popa
mov
js
test
mov
and
pop
push
mov
outs
sbb
test
cmps
test
in
scas
add
or
out
xchg
scas
xor
jle
in
std
mov
inc
jge
sbb
mov
jnp
inc
pop
mov
sub
inc
loopne
test
push
ds
mov
retf
aas
cmp
popf
mov
jns
xchg
scas
pop
mov
adc
sti
sub
sti
cmps
(bad)
mov
fnstcw
push
adc
iret
ret
(bad)
cmp
and
call
or
loope
int3
ja
xor
cwde
mov
pushf
sub
nop
test
add
sbb
popa
fs
imul
fst
and
adc
pop
pushf
mov
add
rol
jb
sbb
pop
fldenv
mov
dec
cmp
ss
dec
fucomip
out
shl
xor
gs
sbb
out
mov
mov
out
xor
fidivr
std
sbb
adc
scas
ins
and
js
add
lock
mov
addr16
mov
mov
jnp
imul
fist
jae
hlt
xor
scas
and
push
loope
dec
test
shl
bound
jns
mov
adc
sbb
pop
imul
lahf
jns
push
sbb
push
clc
xor
imul
push
imul
inc
ins
cmps
les
pop
in
pushf
sbb
stos
mov
pop
sbb
pop
fldenv
or
mul
ror
mov
call
jno
sti
push
adc
test
jmp
dec
push
test
pop
or
je
lds
dec
sbb
and
and
dec
inc
cwde
inc
sbb
int3
mov
ins
cs
(bad)
ins
loopne
add
popf
mov
mov
push
mov
out
int3
push
adc
xchg
or
loope
add
shr
add
and
mov
shl
xor
cmp
jge
mov
sbb
je
adc
add
and
sbb
push
pop
xchg
movs
xor
sub
push
fcmovne
cld
lahf
pop
(bad)
fcomp
xor
mov
cdq
mov
outs
loopne
daa
inc
xchg
add
retf
fwait
out
jge
xchg
jge
(bad)
cmp
sbb
mov
retf
xor
push
movs
inc
mul
push
pop
scas
lods
hlt
fmul
jns
adc
adc
cmc
sub
cld
cmp
enter
mov
ret
dec
cmp
xor
out
test
(bad)
loop
leave
jne
inc
mov
add
out
adc
std
es
pop
xor
pop
mov
mov
jae
xor
loope
push
lods
ins
add
xchg
push
cmp
push
pop
mov
out
lea
(bad)
popa
add
push
mov
push
or
sbb
pop
push
lea
push
push
jo
(bad)
adc
ins
pusha
push
xor
mov
push
movs
cmp
mov
sahf
jo
or
je
or
pop
mov
data16
dec
cli
or
(bad)
jns
mov
mov
out
cmp
mov
loopne
(bad)
jg
ins
add
jmp
movs
inc
pop
fadd
jb
scas
loop
in
fild
xchg
scas
loopne
sbb
push
and
push
cmp
jmp
fbld
ins
andps
push
movs
fild
push
mov
sbb
jae
jge
jmp
daa
jg
cmc
mov
ror
add
loope
neg
cmp
ret
shl
repz
repz
fild
mov
sub
inc
scas
cs
adc
and
cmp
daa
cmps
mov
inc
mov
pop
pushf
fcom
int3
sbb
push
bound
mov
xor
in
xchg
pop
int3
(bad)
cmps
mov
xlat
fcomi
or
cli
div
adc
mov
adc
ror
dec
mov
in
scas
out
aam
scas
nop
pop
pop
pop
pop
sbb
ja
and
or
stos
inc
dec
mov
scas
add
adc
dec
xchg
(bad)
int3
jp
jmp
sub
xchg
lods
out
mov
test
or
push
cs
jne
push
cmps
in
xlat
or
mov
jne
add
aad
push
cmp
(bad)
enter
lds
jp
jle
mov
and
es
scas
push
push
mov
jnp
mov
or
inc
inc
xor
mov
aas
movs
sbb
xor
nop
shl
and
xor
out
(bad)
sbb
fcmove
loop
rol
jp
mov
cmp
push
adc
arpl
stc
push
cmps
stos
sub
mov
lock
xor
cmps
(bad)
test
mov
adc
fs
hlt
mov
push
mov
cmp
push
mov
fbstp
mov
cmp
push
mov
dec
test
fimul
lahf
test
adc
shr
adc
jbe
dec
into
xor
in
push
xor
inc
jns
xor
add
add
fdivp
stos
and
sbb
sub
inc
push
int3
jnp
movs
jecxz
movs
repnz
pop
sbb
jle
cmp
enter
in
lds
adc
fld
paddusw
add
leave
ret
mov
inc
jne
hlt
rol
outs
adc
stos
mov
jno
mov
dec
test
or
(bad)
mov
mov
inc
fild
inc
jae
adc
ror
in
dec
adc
adc
daa
pop
xchg
sbb
pop
popa
lock
push
gs
mov
or
out
retf
adc
and
push
mov
js
cwde
popa
cmp
(bad)
repnz
outs
xchg
add
sbb
push
repnz
rol
pop
sub
fbld
int3
jp
push
sub
pop
push
stos
imul
and
lock
out
dec
add
jbe
mov
mov
dec
scas
cmp
pop
mov
loop
je
lods
aad
pop
call
mul
scas
loope
cmps
scas
pop
mov
stos
mov
js
sub
mov
cmp
sbb
sub
push
fdiv
call
mov
(bad)
push
repnz
mov
adc
jmp
jecxz
je
mov
jno
gs
xor
movs
icebp
sahf
ror
adc
ins
(bad)
dec
in
cdq
pushf
mov
pop
cwde
push
nop
ins
scas
cli
cmp
dec
dec
cmp
add
adc
xlat
sbb
xor
mov
test
mov
mov
ret
cli
call
or
call
cld
xchg
loopne
imul
jo
ret
and
(bad)
jb
fbld
icebp
ja
sub
dec
hlt
call
adc
stos
leave
cmp
cwde
adc
dec
aas
pop
and
and
adc
sub
test
pop
ins
fiadd
push
arpl
sbb
std
cmp
pop
retf
sbb
fcomp
mov
lds
fsubp
in
xchg
call
clc
in
sbb
aad
sbb
or
bound
(bad)
cli
mov
sub
mov
inc
or
test
xlat
ret
push
add
cmp
inc
clc
sub
sbb
dec
retf
mov
ret
call
add
push
mov
mov
out
and
cmps
cmc
mov
mov
xor
push
mov
popf
sbb
repnz
imul
es
loope
mov
push
loopne
into
adc
cmp
jns
fmul
in
outs
in
mov
xor
fcmovb
mov
inc
push
or
nop
ret
xor
out
gs
push
jge
push
inc
add
das
arpl
dec
pop
xor
popf
dec
imul
dec
bound
dec
jge
js
in
repnz
jo
mov
xor
je
pop
sub
mov
imul
iretw
pop
or
movaps
xor
and
dec
cmp
mov
xchg
out
nop
cld
ret
mov
push
and
inc
inc
xchg
enter
dec
pop
mov
sub
dec
dec
sub
call
sbb
retf
aaa
adc
scas
sbb
cs
stos
mov
or
or
ds
cld
inc
inc
xchg
clc
test
mov
mov
in
dec
xchg
fnstenv
repz
or
jns
pop
imul
add
pop
enter
lods
adc
inc
pop
or
das
loope
idiv
push
test
imul
sbb
mov
mov
xor
popa
mov
es
push
arpl
add
popf
mov
lahf
sbb
clc
mov
and
push
pop
xchg
test
scas
(bad)
xor
sub
and
pop
hlt
mov
cwde
test
lds
loop
jmp
jb
ffreep
xchg
clc
(bad)
fdivr
retf
sti
dec
ins
or
pop
push
leave
add
jmp
in
adc
int3
shl
mov
xchg
jne
adc
xchg
ret
dec
inc
xchg
inc
cmp
push
inc
daa
xor
fnstenv
popf
or
and
sbb
cdq
test
(bad)
call
scas
nop
sbb
fs
stc
ins
sbb
mov
jmp
adc
ret
adc
mov
call
or
pop
fld
std
xor
popa
loope
pop
sbb
or
pop
pop
pop
mov
(bad)
sub
or
arpl
rcl
adc
mov
jae
addr16
cdq
mov
cwde
lahf
es
and
sbb
ror
adc
test
scas
call
ins
call
mov
(bad)
sbb
retf
pop
ins
push
jmp
inc
xor
fistp
mov
daa
(bad)
bound
std
ins
adc
les
(bad)
sub
push
and
(bad)
outs
pop
mov
fidiv
xchg
call
int
fsubr
xchg
xchg
(bad)
dec
sbb
je
mov
pop
xchg
or
adc
popa
pop
daa
seto
mov
adc
fiadd
not
outs
dec
jae
or
shr
xchg
inc
xor
or
imul
shl
stos
pushf
loopne
sub
cmc
mov
fs
mov
inc
or
iret
fdiv
xor
mov
shl
push
or
addr16
mov
cld
and
lods
mov
fnstcw
sbb
stc
fisttp
jbe
mov
sbb
gs
je
pushf
fs
mov
fistp
ret
fcomi
aad
stos
cmp
sub
cmp
xor
jb
lahf
(bad)
mov
lock
push
mov
ins
add
sub
sahf
push
xlat
btr
add
add
pop
and
loop
xchg
pushf
nop
sar
mov
ss
test
fld
and
ror
and
fcomp
test
add
jge
sub
lahf
sub
cmp
inc
call
shl
dec
adc
dec
mov
icebp
outs
pop
call
(bad)
cmp
sbb
fst
mov
fld
cld
js
rol
lahf
jecxz
in
cmp
dec
jl
test
or
sahf
adc
fsubr
mov
mov
mov
push
xor
cmp
nop
mov
pop
push
mov
dec
fidivr
cmp
inc
push
push
int
inc
stc
cmp
aas
fimul
call
mov
enter
mov
pop
les
sub
add
inc
pop
mov
aam
in
ins
mov
enter
add
push
popf
jp
sbb
ins
mov
jl
shl
xchg
mov
xor
rcr
mov
inc
sub
or
aaa
and
cwde
(bad)
jg
fs
cdq
outs
fisubr
aas
sar
mov
loopne
add
mov
add
lahf
fs
xor
mov
das
mov
jle
pop
mov
push
dec
rcr
mov
mov
nop
jp
mov
xchg
add
(bad)
mov
sub
in
push
pop
push
fld
jmp
add
or
retf
jae
enter
jmp
les
(bad)
pop
addr16
xor
xchg
arpl
ret
xchg
jge
mov
mov
iret
xchg
mov
dec
mov
(bad)
or
adc
jl
and
mov
dec
les
mov
push
cwde
sub
lods
aam
cmp
jp
and
mov
cmp
pop
xchg
fldl2t
jo
push
nop
jne
push
(bad)
ja
pop
mov
out
nop
mov
leave
xchg
sti
retf
jns
cmp
hlt
xlat
frstor
mov
retf
lods
pop
pop
sub
pop
sar
popa
dec
jne
loopne
push
ficomp
xchg
shl
jno
lods
adc
mov
adc
mov
shl
pop
mov
pop
sar
dec
clc
fwait
cmp
cwde
sub
ins
jge
sbb
inc
pusha
out
ror
add
in
mov
add
bound
xor
scas
imul
and
push
into
(bad)
inc
mov
mov
lahf
push
(bad)
cld
jne
fdiv
and
iret
bound
scas
pop
mov
fdivr
aaa
scas
mov
cmp
leave
mov
cmp
shr
add
mov
shr
ins
aaa
cmp
loop
or
js
xor
pusha
cmps
loopne
lods
pop
mov
stc
not
xlat
adc
arpl
jbe
and
jne
dec
pop
pop
pop
inc
div
sbb
inc
js
outs
lea
xor
pop
dec
mov
pop
cmps
test
fsubr
or
pop
test
adc
mov
pop
das
and
in
(bad)
xor
mov
test
add
cmp
scas
sbb
sbb
and
add
sbb
sahf
pusha
call
or
cli
fadd
mov
and
push
add
jne
ds
inc
cmp
(bad)
dec
xor
ja
stos
pop
or
adc
xor
ret
in
lods
shr
ret
ds
lahf
add
and
sti
or
retf
add
xchg
cmp
ds
adc
pop
push
cli
mov
dec
pop
call
stos
adc
inc
and
test
aad
inc
pop
or
mov
jl
add
loope
in
mov
cmps
test
xchg
in
jg
int
mov
(bad)
gs
cmp
sbb
cmp
or
jns
shl
xchg
mov
fcmovbe
fisub
mov
idiv
cmps
xchg
imul
inc
mov
dec
mov
or
sub
jmp
jl
jb
stos
mov
cmps
pop
ror
ret
sbb
or
sbb
dec
in
cmps
adc
pop
out
dec
ja
outs
nop
call
aam
cmp
cmp
mov
xor
movs
pop
xchg
int
retf
fdivr
mov
or
mov
shl
int3
pusha
js
dec
lahf
arpl
ss
mov
(bad)
pop
cmp
rol
xor
cmp
arpl
inc
xor
mov
lea
or
push
or
js
pop
pushf
ja
popf
les
jae
and
mov
sbb
outs
add
mov
pop
out
addr16
push
dec
or
(bad)
aad
pop
loope
push
mov
in
mov
sbb
imul
jg
(bad)
jmp
sub
int3
jns
pop
mov
ret
push
jmp
push
arpl
addr16
ret
jne
jbe
and
rol
sbb
movs
aaa
iret
xor
jmp
xchg
push
ret
adc
dec
mul
mov
xchg
rcl
dec
retf
cmp
jecxz
pusha
lds
add
push
mov
lds
inc
mov
inc
(bad)
test
and
inc
or
pop
pop
pop
jp
add
pushf
fadd
dec
mov
mov
lea
mov
sub
ins
add
and
out
cmp
mov
(bad)
sti
(bad)
jl
pop
fldenv
mov
mov
cmp
add
sub
lock
jnp
mov
aas
push
retf
fs
push
or
sub
xchg
cmc
jae
push
add
add
mov
mov
int3
push
pop
mov
or
push
retf
paddusw
sub
pop
push
arpl
rcl
imul
scas
dec
cmps
adc
popa
fadd
cmps
mov
jbe
xlat
lods
fsub
(bad)
cs
imul
mov
mov
inc
fs
cmp
sti
add
dec
or
pop
inc
iret
mov
and
or
das
les
or
jl
pop
movs
retf
pusha
mov
push
ror
or
outs
sbb
cmp
dec
mov
loop
add
mov
fwait
arpl
jl
mov
push
sar
mov
in
sub
in
add
imul
mov
xchg
in
iret
jne
xor
xchg
cmps
jne
adc
les
dec
xlat
and
fcomi
fild
mov
mov
add
mov
mov
cmp
dec
loop
lods
fidiv
dec
push
cmp
mov
cmps
and
fidiv
sbb
adc
jle
test
das
icebp
push
dec
ins
pop
push
iret
adc
sub
gs
inc
push
sub
add
adc
aaa
fild
push
xchg
test
popf
sub
jp
jl
adc
push
in
xor
xlat
lock
or
test
arpl
data16
mov
test
mov
cmp
in
add
pop
adc
stc
pop
inc
arpl
pop
or
jo
mov
aam
xor
mov
fst
loope
movs
xor
jbe
or
cwde
xor
xor
jle
inc
cmps
add
push
adc
outs
stos
mov
call
dec
mov
ss
cmps
sbb
fs
scas
aad
mov
jecxz
jae
(bad)
sar
and
loopne
hlt
dec
xchg
rol
xchg
popf
rcl
test
jmp
dec
and
sbb
fisubr
xchg
push
add
mov
adc
shr
enter
aaa
ins
stos
repz
mov
pop
mov
aas
mov
inc
jge
add
inc
pop
jno
mov
dec
dec
jl
or
sub
jno
fmul
mov
std
imul
jns
movs
dec
call
ret
rcl
out
sbb
lock
cmp
cld
add
jl
push
lock
int
data16
mov
(bad)
int3
and
push
das
xor
popf
outs
(bad)
fimul
leave
lds
popa
or
cmp
inc
xchg
es
mov
cli
ret
mov
(bad)
retf
mov
xchg
inc
push
push
mov
xor
jl
pop
into
cmp
mov
mov
dec
nop
cmps
sti
sbb
mov
pop
rep
pop
mov
xor
out
mov
scas
call
adc
push
mov
xchg
xor
mov
mov
out
mov
leave
imul
fist
mov
add
adc
cmp
ftst
push
pop
pop
rcr
ror
fwait
popa
mov
les
xor
dec
sub
add
sar
aaa
aam
dec
outs
(bad)
xchg
xor
pop
iret
and
mov
fwait
mov
inc
shr
fsubrp
pop
or
les
xchg
or
sub
xor
adc
mov
lds
fld
pop
and
aaa
test
mov
pusha
inc
mov
mov
xor
push
call
fisttp
es
aad
add
jecxz
sar
in
call
jmp
push
ret
and
mul
or
fsubr
test
test
lock
adc
data16
std
(bad)
push
(bad)
pop
sub
push
sbb
pop
inc
cmps
jp
adc
jae
mov
pop
jo
pop
pop
(bad)
dec
jbe
push
fcom
and
mov
and
nop
cmp
add
loopne
inc
lahf
add
sub
mov
sbb
xor
test
or
lock
jnp
jg
fnstenv
je
adc
pop
push
add
movs
iret
jmp
xchg
ror
jle
push
and
loope
adc
lds
imul
xchg
mov
xchg
push
jbe
pushf
fadd
pop
mov
xor
out
into
(bad)
lods
inc
xor
xor
outs
ins
outs
dec
mov
mov
test
or
jmp
and
test
or
xor
xor
xchg
pop
outs
xchg
test
jmp
cwde
add
fsub
es
imul
xor
jle
cmps
xchg
mov
mov
mov
sbb
and
arpl
js
xchg
(bad)
nop
sub
mov
test
cmc
fimul
outs
mov
xchg
jmp
sub
(bad)
loop
pushf
mov
mov
xor
cmps
xor
leave
shl
inc
cmps
cmp
sub
mov
mov
and
jp
icebp
mov
push
ror
sub
cld
dec
xchg
into
mov
push
add
data16
xchg
mov
xlat
push
dec
ror
or
xor
lods
fdiv
push
js
mov
fwait
mov
in
mov
jae
in
rcl
xchg
sbb
xor
pop
icebp
mov
inc
les
fwait
call
xor
mov
in
sbb
(bad)
lods
test
(bad)
jo
dec
add
imul
adc
ds
adc
cmps
sbb
or
cmps
jnp
jp
mov
xchg
xlat
ja
data16
imul
(bad)
in
inc
and
xor
sub
mov
jp
clc
jle
dec
daa
es
push
call
stos
push
(bad)
inc
or
outs
lods
mov
fidiv
mov
cmp
add
mov
loope
mov
popf
push
cmp
xchg
jns
int3
push
cmp
scas
pop
mov
(bad)
mov
mov
nop
mov
push
pop
fist
inc
test
ss
ja
xchg
mov
xor
push
pop
fwait
or
mov
out
stos
sti
call
add
loop
add
xchg
mov
mov
dec
pop
inc
mov
(bad)
mov
or
out
rol
push
adc
test
and
lahf
jp
call
or
popf
lods
mov
enter
jl
call
retf
sahf
sub
jg
cmp
sub
in
inc
mov
idiv
xor
into
sub
and
hlt
jnp
fs
jno
inc
push
in
push
xchg
jmp
pop
dec
inc
jecxz
js
aas
push
xchg
mov
loop
je
and
add
clc
arpl
cmp
ficomp
pushf
inc
and
out
and
mov
inc
pop
and
lahf
inc
in
xlat
mov
jbe
mov
push
aad
ss
stos
fnstcw
or
fcomp
cmc
sbb
mov
mov
shl
sbb
pop
sub
or
mov
imul
add
pop
push
add
push
sub
outs
nop
and
retf
dec
lds
xlat
(bad)
mov
mov
push
adc
push
pop
dec
test
lds
push
mov
xchg
mov
loope
and
out
cs
and
jle
dec
mov
add
out
mov
xor
pop
jmp
(bad)
in
mov
test
cmp
(bad)
jno
jp
pop
outs
add
push
(bad)
adc
xchg
and
cs
lock
test
iret
sub
jbe
out
pop
ret
mov
sub
jp
jmp
data16
mov
loopne
mov
ds
loop
lods
dec
test
out
jae
push
je
ja
out
dec
mov
outs
jl
xchg
push
les
xchg
imul
aas
xor
movs
mov
jecxz
mov
xor
sub
es
pop
sub
imul
fstp
and
add
sbb
adc
mov
add
adc
and
or
les
scas
adc
shr
pop
push
inc
mov
stos
xor
push
out
jb
(bad)
jge
adc
sbb
dec
(bad)
inc
lea
sbb
jne
test
inc
inc
shl
(bad)
test
push
xchg
mul
ja
mov
(bad)
mov
lock
fisub
vmulps
dec
movs
dec
sub
add
std
mov
fwait
dec
mov
inc
and
cld
jp
es
(bad)
neg
or
sub
dec
push
inc
and
adc
mov
fnstsw
sub
test
xor
xor
push
or
mov
outs
push
inc
push
cmp
jge
mov
aas
js
mov
movs
jg
sbb
push
(bad)
mov
mov
add
mov
fbld
sub
xchg
cld
pop
inc
js
(bad)
gs
adc
dec
les
shl
lahf
daa
fadd
mov
sbb
jp
mov
(bad)
out
cmp
and
inc
jbe
pushf
jno
and
push
loope
test
fisttp
ss
xchg
sbb
add
fdiv
stc
xchg
xor
mov
pop
mov
jle
lock
sti
out
jle
sbb
xor
sbb
sahf
push
sbb
rcl
xchg
repz
std
loope
ins
mov
add
dec
(bad)
daa
pop
movaps
xchg
outs
push
sbb
inc
stos
push
mov
mov
fild
push
and
(bad)
lahf
rcr
adc
push
das
inc
sahf
xor
cmp
jne
pusha
jp
lock
push
movs
retf
mov
iret
sbb
int
prefetch
and
jmp
sbb
mov
rep
xchg
clc
adc
lock
sbb
loop
cmp
add
sub
das
xchg
sub
or
mov
mov
mov
xor
mov
mov
es
cmp
pop
jmp
or
ins
mov
dec
push
sub
retf
sub
add
andps
jle
mov
pop
jno
std
mov
adc
mov
call
inc
pop
in
popf
rol
test
(bad)
outs
mov
pop
lds
loop
nop
sti
ror
xor
ins
or
adc
int
int
sbb
jnp
mov
push
mov
stos
mov
jno
cld
cdq
ret
mov
dec
lds
imul
ja
pop
loope
movs
or
loop
adc
rol
sbb
es
enter
jecxz
dec
sub
jns
pusha
fmul
jno
lods
cli
adc
dec
jge
fadd
or
add
adc
sbb
cmp
cld
out
outs
sbb
mov
xor
sub
aas
dec
cmp
ret
jns
jno
arpl
push
xchg
aaa
pushf
and
pop
ret
add
jae
int3
and
out
in
pop
mov
push
sbb
inc
xor
or
lds
cmp
add
adc
test
dec
and
xchg
nop
xor
add
sub
nop
mov
nop
push
sub
xchg
mov
xchg
ror
and
test
push
pushf
sbb
jecxz
sub
push
xchg
lock
push
ficomp
sub
out
mov
dec
cs
xor
rol
xchg
pop
out
sub
mov
cmp
xor
int
jno
xor
cwde
fsub
(bad)
aaa
int3
fldenv
mov
mov
jg
stc
push
xor
test
lods
inc
xlat
or
scas
cli
sbb
cwde
mov
aad
inc
xchg
lock
pop
test
cli
cdq
mov
push
gs
pop
push
repnz
push
fs
sbb
xor
repz
push
xchg
in
std
in
mov
popa
pop
stc
daa
mov
jl
adc
lods
mov
cli
std
cmps
push
out
std
xchg
in
mov
ja
repnz
gs
pop
jmp
push
jp
push
aad
test
mov
jecxz
sbb
sar
sahf
inc
je
stc
loope
nop
or
pop
call
test
push
pushf
retf
(bad)
mov
scas
mov
pusha
or
inc
int3
xchg
lods
repnz
sbb
test
or
xchg
adc
fsubr
icebp
sub
fst
repz
jle
ins
cwde
xchg
and
(bad)
enter
popf
imul
sbb
movs
xor
xchg
lods
xor
xchg
jno
(bad)
jg
or
fstp
inc
adc
jae
repnz
test
sub
mov
xchg
push
add
arpl
ficom
jne
sub
fistp
adc
retf
mov
mov
shr
(bad)
jge
and
imul
fisttp
stos
popa
pop
xchg
sbb
data16
test
jle
pusha
retf
pushf
or
sbb
pop
jbe
out
sahf
xor
rep
adc
ret
cmps
ins
xchg
aaa
pop
dec
xchg
adc
ds
mov
jmp
push
daa
std
fcmove
mov
shl
or
ror
cmp
and
test
mov
lock
xor
and
push
and
xchg
scas
scas
sbb
js
lahf
cmps
pusha
mov
loop
push
cmps
add
into
ss
or
lods
iret
(bad)
loope
jecxz
ficomp
ret
mov
sbb
mov
iret
xor
and
test
jb
bound
enter
(bad)
aam
(bad)
movs
dec
mov
and
jle
loopne
xchg
not
in
and
or
int
cld
movs
(bad)
xor
loopne
jle
inc
icebp
iret
mov
call
pushf
jne
xor
fldcw
sub
inc
mov
adc
std
clc
pop
jo
or
sbb
arpl
repnz
push
sub
loop
mov
push
sub
cmp
std
push
aaa
mov
push
stc
cli
fdivr
cmc
ja
adc
or
sbb
add
inc
sbb
enter
cwde
(bad)
push
(bad)
jns
xchg
sub
pusha
or
popa
or
leave
daa
or
mov
movs
shr
int3
fsubr
push
fwait
cdq
loope
test
scas
cmc
pop
jmp
scas
fimul
pop
fbld
mov
pop
mov
pop
es
popw
in
test
jb
pop
iret
sub
movs
add
adc
aam
add
xchg
lea
call
shl
adc
pop
cli
mov
jnp
inc
(bad)
add
pop
add
adc
cmp
adc
mov
and
into
ins
test
nop
or
sub
xchg
mov
jecxz
pop
icebp
lods
or
fneni(8087
fiadd
mov
ja
(bad)
pusha
xchg
scas
and
rcl
aam
cmp
push
rol
xchg
inc
xchg
sub
popa
in
pop
jg
fs
bnd
std
pop
lahf
cdq
fs
fsubp
pop
mov
movs
mov
clc
push
out
bound
push
out
in
(bad)
(bad)
lods
mov
iret
cld
mov
adc
cwde
call
mov
scas
jmp
hlt
stos
sbb
int
stos
add
(bad)
stc
or
sbb
cmp
xchg
jmp
pop
mov
mov
sbb
(bad)
retf
xchg
mov
sbb
adc
or
pop
jae
add
test
(bad)
ret
jbe
sbb
xor
adc
shr
cvtps2pd
xor
jl
(bad)
mov
imul
add
dec
pop
mov
push
cmp
adc
xor
mov
js
rol
mov
mov
nop
popf
adc
sbb
mov
sahf
or
sti
pushf
imul
adc
pop
xor
imul
cmps
sbb
loope
pop
int
mov
(bad)
push
pop
and
xor
outs
sar
pop
sub
loopne
xlat
and
test
lea
pop
std
push
scas
adc
jb
retf
ror
arpl
outs
hlt
(bad)
inc
loope
or
dec
xor
pop
enter
cmp
jb
mov
out
jb
ins
cmc
sbb
adc
mov
xor
shl
jmp
mov
add
mov
cld
jae
adc
cmc
imul
add
xchg
dec
mov
jmp
mov
das
mov
int3
test
in
xor
and
mov
pop
lds
and
or
sbb
cld
lods
jno
pop
mov
sub
outs
mov
dec
and
inc
cmp
ret
jg
out
mov
jns
mov
mov
push
fwait
out
jp
pop
xchg
repz
mov
push
ror
sub
mov
adc
pop
mov
xor
imul
mov
lods
cmp
mov
lods
sti
adc
sub
mov
and
jle
mov
sbb
or
test
or
sbb
inc
in
mov
movs
mov
(bad)
ret
mov
inc
add
xor
mov
dec
jmp
cdq
mov
les
dec
xor
cmc
ret
adc
jl
push
les
xlat
cmp
shr
das
icebp
fbld
call
loope
xor
lods
mov
dec
out
sbb
inc
popa
(bad)
in
and
fs
sbb
pushf
jge
(bad)
cwde
imul
push
mov
xor
mov
imul
xor
inc
push
jae
mov
inc
(bad)
bound
sub
and
aas
jns
inc
(bad)
sbb
stos
retf
xchg
mul
ja
xchg
inc
cmp
frstor
bound
sbb
retf
popf
xchg
iret
fstp
out
fisub
mov
or
ins
add
mov
test
fisub
and
cmp
cmps
imul
xor
cmp
and
movs
dec
inc
push
xchg
outs
cmps
adc
mov
inc
inc
push
inc
mov
inc
loop
or
xchg
scas
popf
mov
inc
jle
push
mov
scas
(bad)
or
jnp
mov
push
jbe
sub
pop
dec
and
cli
xor
cld
or
pop
push
mov
shl
call
mov
ret
jo
retf
push
mov
push
xchg
bound
add
out
dec
sub
sbb
dec
jl
jae
cli
sbb
push
(bad)
pop
loop
sahf
and
ins
jle
xchg
inc
outs
daa
jecxz
dec
jecxz
dec
arpl
nop
xor
cdq
cdq
test
pop
mov
fsubp
adc
sbb
dec
sub
repz
push
xor
jecxz
call
test
fldcw
cmp
cli
and
inc
adc
pop
mov
(bad)
popf
xor
sar
cmp
(bad)
xor
pusha
fdiv
stc
cdq
hlt
adc
mov
inc
aaa
lods
pop
mov
(bad)
adc
inc
dec
fist
in
imul
out
cmps
jle
shl
fwait
cld
or
das
iret
mov
dec
gs
pop
mov
pushf
ror
and
loopne
shl
jnp
ja
shl
movs
movs
pop
(bad)
repnz
mov
xor
pop
cmp
dec
jl
mov
and
push
dec
jmp
mov
fnstcw
imul
adc
inc
lea
fucomp
mov
and
jp
(bad)
cmp
mov
(bad)
loopne
dec
test
ret
mov
add
adc
pop
cmp
or
cmc
dec
xchg
pop
xchg
sbb
out
xlat
pop
mov
dec
xor
es
and
dec
test
xchg
jmp
fisttp
inc
fisubr
push
out
pop
imul
clc
neg
test
xchg
int3
push
pop
mov
pop
mov
push
rcr
(bad)
push
sbb
mov
push
push
mov
mov
popf
push
add
cs
loope
sbb
movs
and
retf
inc
cmovge
mov
ins
into
add
out
mov
xchg
pop
sbb
xor
fidivr
dec
xor
out
(bad)
cdq
or
(bad)
xchg
aam
int
and
into
lock
out
mov
cmp
(bad)
jge
aas
jno
mov
cwde
test
jmp
(bad)
jno
ja
mov
sub
mov
aam
mov
test
loop
sub
mov
dec
jge
mov
inc
sbb
inc
dec
imul
mov
ficom
mov
mov
lock
jo
adc
jl
push
in
push
xor
xchg
cmp
push
push
mov
add
in
(bad)
inc
and
jbe
cmp
cmps
repz
pop
xor
icebp
div
pop
pop
or
jnp
mov
(bad)
dec
add
add
push
mov
out
popf
or
sub
mov
icebp
imul
dec
push
sub
dec
ja
inc
loopne
mov
aam
cs
mov
xor
push
sbb
je
dec
repz
repz
inc
popa
pop
leave
lods
cmps
push
cmc
shl
adc
mov
test
jnp
pop
outs
sahf
mov
cmps
jge
cld
(bad)
and
add
jno
xchg
sbb
lods
and
pop
hlt
aam
sti
dec
inc
push
or
and
sub
inc
mov
movs
add
push
ds
retf
cmp
test
mov
jbe
mov
popf
xchg
(bad)
mov
je
in
cmp
call
or
enter
add
repnz
in
rcr
ins
ja
jmp
mul
sbb
fistp
cs
jl
dec
cdq
pop
dec
adc
lahf
adc
loopne
rol
mov
xchg
add
imul
jecxz
xor
inc
ret
jo
(bad)
jb
enter
rol
mov
mov
cs
or
scas
ffree
lds
test
retf
int3
(bad)
push
rcl
mov
inc
fs
ja
sbb
cmc
iret
ja
sar
pop
xor
cmp
cmp
daa
js
not
xor
inc
shr
loopne
mov
jnp
adc
data16
out
test
adc
(bad)
call
cs
and
clc
rcl
pusha
add
adc
add
xchg
pop
mov
test
mov
jne
test
shl
inc
cmc
sub
sbb
push
scas
xor
xchg
xchg
push
or
clc
dec
xor
push
imul
and
das
mov
jns
bound
aad
xor
pop
adc
mov
lock
std
sub
loope
mov
or
sahf
sbb
jnp
xchg
push
push
fdiv
dec
clc
pop
je
out
mov
push
jmp
shl
adc
ja
xor
jb
fnsave
add
jb
inc
data16
ds
test
ret
sub
call
iret
in
iret
scas
and
mov
aad
sbb
xor
dec
out
jbe
jmp
sysexit
sbb
sbb
mov
adc
cmp
mov
outs
sub
inc
adc
jne
push
sub
jge
inc
sbb
aam
cmps
inc
inc
push
add
popf
pop
xchg
aas
jae
repz
outs
adc
in
les
lds
sub
sub
out
stc
repz
aam
xor
rcl
cmps
(bad)
lods
and
ficom
(bad)
rcl
fld
xlat
pop
popf
retf
mov
cmp
stos
pop
bound
pop
ret
jecxz
in
xchg
out
xchg
sar
pop
imul
and
cmps
push
mov
mov
scas
out
mov
push
mov
dec
cmp
push
jmp
push
hlt
sbb
mov
cmp
adc
icebp
mov
dec
int3
test
hlt
mov
inc
cli
retf
mov
lea
cli
jge
jmp
lahf
shl
dec
add
xor
ret
cdq
and
mov
repnz
(bad)
aaa
adc
push
fsub
sbb
mov
inc
adc
mov
shl
rep
jg
xchg
in
inc
adc
dec
hlt
mov
lods
mov
fcom
push
push
or
sbb
push
sbb
add
xor
push
inc
xor
scas
es
xor
fimul
movs
(bad)
pop
xchg
mov
xchg
cmp
es
mov
aaa
pop
mov
inc
dec
dec
mov
push
add
aaa
sub
or
cmps
push
sbb
mov
or
inc
xor
ja
jg
mov
pop
xor
or
in
div
movs
mov
jl
sub
rol
push
dec
add
cwde
mov
push
xchg
add
sub
xchg
xor
cmc
ins
fistp
fdivr
push
icebp
jge
fist
mov
gs
(bad)
cld
std
in
call
mov
daa
mov
mov
jno
fcomp
daa
jmp
and
je
(bad)
jmp
inc
push
jb
sti
ss
push
sbb
or
inc
sbb
mov
clc
icebp
inc
or
push
dec
cli
mov
test
jne
push
and
(bad)
jg
adc
pop
mov
add
je
mov
(bad)
shr
bound
dec
outs
(bad)
jno
sar
in
jns
cdq
aaa
fcmovne
or
out
push
packsswb
dec
scas
xor
test
dec
dec
xor
jecxz
out
xchg
rol
int
cmp
pop
(bad)
leave
cdq
clc
cmps
scas
push
jo
mov
mov
add
dec
stos
fwait
or
mov
test
test
jmp
jmp
mov
vmwrite
inc
and
movs
add
jo
pop
jns
hlt
pop
push
in
int3
inc
out
jo
mov
ficom
mov
ret
and
imul
(bad)
out
(bad)
cmc
add
dec
cs
repnz
ret
xchg
loop
dec
es
mov
and
push
(bad)
jp
cli
xchg
mov
call
mov
mov
ja
iret
cmp
fnstcw
or
or
test
(bad)
adc
jne
cli
sub
push
inc
cmps
push
xor
pop
ins
xchg
test
test
push
(bad)
out
in
mov
dec
into
dec
lods
mov
push
out
aas
retf
dec
imul
ja
lods
mov
inc
xor
jbe
pop
sbb
outs
push
mov
retf
push
(bad)
sar
out
or
fmul
add
adc
sbb
out
sub
not
scas
xchg
dec
mov
cmps
jo
xchg
mov
jle
mov
inc
add
cmp
mov
test
lods
in
int
(bad)
lahf
cmp
dec
xchg
dec
mov
daa
jne
retf
inc
mov
mov
pop
stc
jo
xchg
add
loopne
dec
popf
test
es
xchg
scas
nop
xor
daa
shr
in
or
into
pop
mov
in
jecxz
jmp
push
or
retw
fild
adc
push
mov
enter
sub
loopne
mov
repz
cmp
leave
inc
mov
xchg
or
psrad
push
mov
frstor
add
xchg
push
dec
jg
scas
out
jp
pop
sub
sub
pop
outs
(bad)
loopne
(bad)
aaa
cmc
dec
shl
jae
dec
fcom
or
mov
pop
test
sub
jne
sub
mov
jb
into
loopne
sahf
popa
es
xor
cmps
hlt
in
test
sub
sub
sub
int
sbb
loopne
ds
stos
mov
xchg
inc
xchg
pop
add
jle
xchg
xor
(bad)
aas
adc
data16
pop
cdq
mov
add
pop
adc
(bad)
cmc
push
stos
in
dec
inc
inc
xor
js
mov
mov
dec
mov
jns
rcr
or
inc
xor
bound
loopne
scas
popa
sub
(bad)
xchg
out
pop
mov
push
cs
lods
mul
gs
adc
scas
sbb
and
loop
pop
les
cdq
sbb
ins
adc
lds
addr16
lods
push
mov
cld
xchg
out
mov
sub
inc
jae
ins
ins
sub
mov
pop
loop
call
inc
mov
clc
sti
pushw
fimul
in
mov
mov
mov
lods
dec
ins
in
add
ret
pop
push
lahf
ins
push
pop
ror
ds
les
dec
push
dec
mov
(bad)
dec
ja
lds
test
and
stos
ret
(bad)
push
sub
ja
xor
dec
mov
mov
xor
cmp
push
jp
outs
repz
jb
pop
mov
xor
arpl
xchg
sub
pop
jl
cld
leave
xor
sub
mov
add
int
loop
lahf
int
jae
push
push
stc
xchg
or
inc
mov
mov
mov
adc
ss
jle
pusha
rol
data16
inc
cld
outs
sub
xchg
dec
pop
adc
in
scas
fidiv
repnz
sub
jbe
in
jno
push
js
inc
xchg
add
adc
js
leave
mov
mov
sahf
loop
imul
(bad)
(bad)
iret
sbb
nop
data16
or
popf
ja
pop
outs
jno
inc
cli
jmp
mov
or
int
dec
or
push
xchg
iret
popf
xchg
hlt
sub
bound
pop
ror
sub
push
sub
pop
push
push
jle
adc
pop
pop
clc
sbb
les
xchg
lods
ret
jg
sub
outs
sbb
fidivr
addr16
inc
pop
xchg
mov
cmp
(bad)
lods
adc
adc
jo
movs
pop
out
nop
xchg
loope
dec
aaa
mov
xchg
xchg
mov
test
dec
mov
sahf
mov
test
jnp
movs
rcr
inc
(bad)
retf
repnz
hlt
sub
lea
fsub
mov
fwait
stc
jg
mov
jae
pop
imul
add
jl
inc
sar
push
xchg
in
mov
scas
mov
pop
(bad)
out
pop
add
push
std
push
daa
popa
cmp
movs
cmp
xchg
fiadd
(bad)
dec
xor
xor
leave
jl
in
cmp
jb
hlt
aad
mov
jl
loope
mov
sub
jmp
mov
jg
mov
int
movs
retf
mov
pop
and
retf
pop
(bad)
retf
mov
stos
icebp
mov
cld
and
fdiv
xchg
and
fdiv
fs
cmps
inc
fs
add
mov
in
dec
push
and
push
popf
scas
ret
add
out
mov
jo
dec
lock
rcr
ret
jge
and
sub
cmp
(bad)
sar
xchg
cmp
dec
sbb
xor
dec
add
dec
test
pop
fdivr
dec
xor
push
xchg
test
pop
jge
mov
jb
dec
(bad)
lods
push
mov
neg
inc
ror
hlt
xor
pop
jnp
inc
jmp
sbb
call
cwde
sub
lods
add
stos
jecxz
cmc
fcmovnb
mov
cmps
or
xor
call
movs
shr
xor
test
div
xchg
shl
loop
xchg
retf
sbb
mov
es
add
push
retf
(bad)
cmp
xor
inc
push
addr16
out
jo
sub
test
fs
(bad)
fnsave
push
ds
sbb
outs
jbe
inc
icebp
adc
sub
in
fistp
imul
adc
into
mov
data16
mov
xchg
xchg
inc
(bad)
inc
push
ins
lds
pop
scas
das
jle
xchg
xchg
lods
fdiv
push
xchg
call
sti
ins
jo
outs
pop
cmp
shl
inc
pop
pop
jnp
push
dec
ret
adc
mov
aam
push
xchg
xor
push
(bad)
sar
out
push
lahf
shl
cmp
mov
fcomp
mov
cs
push
ftst
adc
sbb
repz
mov
(bad)
fcmovb
out
bound
mov
or
sar
jmp
in
mov
ret
jmp
adc
jle
inc
aam
idiv
xor
cwde
pop
add
sub
jl
dec
dec
xchg
adc
push
adc
cmc
lods
shl
std
cmp
popa
test
(bad)
nop
push
gs
rcr
movs
adc
pop
dec
cmp
xchg
mov
arpl
or
xchg
cld
add
dec
mov
inc
loope
stos
or
xchg
mov
int3
push
xchg
or
mov
jge
repnz
mov
mov
jp
and
adc
repz
fwait
adc
pop
cs
cdq
inc
mov
mov
fs
and
xchg
cmp
int3
div
mov
pop
dec
jb
sbb
(bad)
loop
(bad)
push
leave
in
jns
dec
rcl
jne
lods
xchg
outs
dec
fsub
in
retf
cmc
jns
mov
les
inc
dec
adc
and
stos
cmps
pop
shl
fs
pop
or
push
fcom
jmp
pop
pusha
and
jnp
test
iret
cmp
jb
inc
jb
iret
cmp
loopne
mov
sub
leave
(bad)
adc
je
mov
je
pop
mov
retf
stos
cmp
imul
pusha
cmc
mov
sub
lock
retf
inc
add
enter
(bad)
rcr
pop
scas
jmp
jmp
push
mov
inc
xor
test
xchg
mov
imul
into
ret
repnz
xor
xchg
dec
mov
add
sub
aaa
lds
fimul
mov
clc
es
cdq
imul
retf
mov
sar
out
or
xchg
cmps
retf
loopne
lock
and
push
push
loop
push
(bad)
in
cmp
push
jp
je
push
xor
xor
mov
push
movs
ror
enter
add
mov
sbb
add
or
imul
repnz
sbb
out
test
or
in
jnp
data16
out
mov
lock
repz
fst
mov
sbb
jg
adc
mov
pushf
movs
(bad)
add
jne
push
loopne
(bad)
out
std
ror
clts
into
adc
add
movzx
xchg
and
jmp
dec
inc
pop
push
(bad)
rcr
pop
aad
adc
or
jo
loopne
sahf
mov
ret
test
jno
mov
or
fst
out
inc
dec
sbb
push
(bad)
adc
fwait
mov
sti
xor
dec
retf
jnp
rcr
dec
cmps
mov
bnd
das
pop
xchg
pop
pop
std
nop
inc
cmp
or
lock
xchg
or
dec
imul
mov
sub
icebp
xchg
cmp
xor
in
inc
mov
lds
cmp
fwait
jnp
xchg
int3
adc
jo
mov
xchg
out
xchg
rol
push
jecxz
cmps
aaa
pop
(bad)
push
inc
mov
xchg
lods
ror
ds
push
xor
sbb
int3
pusha
sub
push
or
adc
jmp
aaa
jmp
mov
add
clc
jle
mov
cwde
cld
dec
pop
loope
push
(bad)
mov
shl
pusha
pop
jle
xchg
inc
dec
icebp
stos
stos
hlt
push
data16
lea
bound
daa
xchg
ss
pop
aas
stc
mov
aam
pop
pusha
jl
daa
mov
ins
xor
mov
xchg
lods
cmc
(bad)
inc
cdq
mov
xchg
jbe
cmp
cdq
pop
pop
loope
lods
loope
ins
ds
fcomp
sub
fst
mov
ins
jmp
pop
jbe
cwde
sbb
xor
or
cmp
pop
mov
test
mov
pop
ins
xlat
jnp
inc
and
mov
inc
jno
inc
(bad)
pop
jmp
adc
dec
add
imul
imul
mov
out
loope
mov
retf
xor
shl
sbb
nop
stos
cmp
out
xor
jl
push
cdq
inc
mov
icebp
test
lods
cmp
or
push
inc
cmp
fst
mov
mov
div
pop
jl
imul
outs
stos
shl
aad
sbb
es
dec
ret
or
cmp
mov
lahf
clc
shl
pop
sub
fldcw
mov
mov
adc
movs
into
lahf
mov
dec
pop
mov
fidiv
push
jb
repz
in
pop
sub
jo
mov
std
fst
adc
add
and
gs
inc
sbb
mov
pop
mov
push
adc
mov
mov
mov
outs
mov
sbb
out
jae
dec
cld
sbb
fs
into
or
jb
cld
in
jns
aam
push
add
out
je
loop
xchg
xor
hlt
loope
out
cmp
lea
jns
xchg
arpl
popf
call
ret
mov
scas
cmp
out
cwde
fwait
div
add
push
cmp
pop
retf
outs
aam
stos
xor
cmp
movs
push
fcomp
fmulp
shl
pop
pop
adc
xor
jb
mov
js
call
jo
pop
mov
in
inc
cli
xchg
retf
fbld
jecxz
xchg
sub
or
push
dec
and
push
push
hlt
popf
mov
xchg
xchg
clc
ret
lods
xor
pop
das
or
repz
sar
cmp
xchg
xor
jns
add
cmp
pop
pop
pop
inc
push
or
test
dec
inc
rcl
arpl
adc
jp
popa
dec
aaa
xor
dec
cmp
mov
mov
cwde
dec
scas
push
mov
nop
imul
and
cs
cmc
rol
jmp
mov
jae
stc
push
sbb
lea
hlt
ins
xchg
push
cmp
pop
aad
enter
and
stos
fsub
or
dec
push
idiv
sub
loop
lods
ret
dec
imul
and
inc
sbb
mov
and
nop
sar
push
and
cmp
add
fs
jecxz
mov
jb
sti
hlt
test
std
cs
(bad)
hlt
rcr
xor
dec
push
rcr
adc
hlt
in
jbe
xchg
or
in
dec
jge
cmp
dec
mov
outs
and
pop
dec
xchg
leave
aam
add
and
fwait
push
jge
mov
inc
mov
cmp
add
(bad)
mov
xchg
and
dec
and
loopne
pop
jo
cmps
aad
in
fist
push
mov
out
cwde
push
pop
(bad)
imul
cmp
popa
jl
mov
mov
cmp
jge
push
push
pop
ds
cmp
push
out
sbb
adc
xor
jg
pop
adc
ror
movs
lods
lods
jne
xor
ret
xor
mov
xor
stos
inc
jbe
out
adc
jnp
adc
add
mov
pop
push
test
pop
sti
jge
ds
mov
xchg
xor
ins
sub
jbe
pusha
mov
aas
imul
inc
repz
add
xchg
jp
(bad)
mov
fwait
sub
in
sbb
fld
test
dec
repz
adc
scas
push
mov
mov
test
sbb
jp
ins
call
sbb
and
xchg
popf
inc
cdq
jmp
in
or
sbb
push
(bad)
xchg
ds
adc
into
aam
mov
cmps
sahf
nop
sub
(bad)
loope
mov
cmp
shl
aad
dec
xchg
ror
cmp
xor
loop
fucomi
xlat
cs
fidivr
fstp
jge
xchg
mov
jmp
push
lods
fisubr
pusha
hlt
push
jmp
xchg
sub
push
jg
mov
cmp
or
adc
pop
sbb
or
dec
jae
dec
stos
loope
and
push
adc
mov
mov
test
test
sbb
add
mov
fdivr
in
push
adc
pop
pop
ins
lea
mov
das
lock
movs
adc
ficom
fimul
cmp
add
stos
xor
sub
jno
loope
test
shl
xor
cwde
hlt
pop
into
fdivr
mov
stos
sbb
aaa
or
xchg
jecxz
jmp
popf
popa
imul
cmp
mov
add
pop
dec
xchg
mov
ret
gs
mov
hlt
add
inc
jmp
or
rcr
mov
sbb
(bad)
imul
call
mov
icebp
push
jg
jmp
dec
mov
gs
cdq
push
aas
subps
xchg
les
sub
sti
jo
not
imul
scas
ds
test
or
imul
call
loopne
int
xchg
mov
shr
or
push
test
rcl
push
mov
test
loop
and
popf
call
xor
movs
or
push
dec
xlat
mov
pop
int3
aas
sbb
adc
sbb
je
mov
out
repnz
and
je
mov
jne
mov
imul
(bad)
out
add
lods
xchg
sub
adc
jmp
aad
sub
mov
xor
push
cld
jg
xor
jmp
fs
popf
push
adc
cmc
xor
in
jo
jnp
and
sub
(bad)
xor
fs
push
adc
add
jne
out
rcr
cld
cdq
stos
or
add
div
mov
call
mov
dec
dec
adc
inc
cmc
cmp
mov
mov
cmp
inc
ret
mov
ret
adc
clc
inc
xor
jmp
fsubr
inc
sahf
and
push
mov
sbb
clc
pusha
or
xchg
dec
pop
int
cli
jp
lock
mov
dec
sti
xor
mov
and
xchg
loope
les
jecxz
pop
dec
pop
popf
jns
mov
xchg
call
inc
sbb
movs
lock
mov
pop
inc
cmp
pusha
enter
fdiv
out
jae
xchg
inc
daa
inc
mov
push
sti
icebp
pop
test
lahf
jl
adc
adc
call
add
and
sbb
cmps
jb
in
repnz
retf
(bad)
out
push
or
fild
dec
in
xchg
jne
nop
xchg
xor
psrld
sub
call
lods
and
and
je
sbb
call
call
lods
adc
das
push
lods
push
repz
loop
test
push
lock
je
and
lods
es
push
in
cmp
push
sbb
scas
push
imul
xor
addr16
jbe
pop
movs
and
sub
cmp
adc
sahf
es
stos
mov
sbb
dec
fsubr
cli
pusha
jle
cmp
add
jno
add
jae
enter
in
repz
push
pop
xor
arpl
sti
gs
loopne
jnp
xchg
cmp
call
cmp
neg
pop
es
cmp
dec
mov
mov
pushf
fwait
xor
pop
pusha
pop
scas
rol
mov
repnz
jmp
mov
fist
mov
xchg
adc
push
mov
pop
cmps
jo
das
mov
xor
sub
add
pop
mov
jb
mov
adc
adc
mov
push
sub
jno
sub
adc
and
mov
push
xor
or
push
pop
shr
lods
jbe
mov
adc
gs
jmp
mov
or
mov
fstp
and
inc
cdq
div
ret
das
mov
or
jmp
sub
retf
add
add
enter
push
test
jo
or
fsub
cwde
es
pop
dec
dec
aas
cmp
mov
xlat
dec
les
loopne
push
add
sub
das
icebp
mov
xor
jle
scas
lds
and
fpatan
push
dec
mov
sbb
sbb
lods
mov
mov
sub
idiv
mov
pop
mov
retf
mov
push
sub
popa
aam
or
fld
add
test
adc
loop
bound
mov
xchg
shl
sbb
add
inc
jnp
pop
outs
fcmovb
or
push
popa
out
out
jo
ret
dec
vpshaq
pop
mov
xchg
sahf
dec
adc
ins
push
or
cmc
(bad)
and
push
jmp
mov
shl
fmul
fisub
jns
and
xchg
push
mov
push
cli
in
call
xchg
or
mov
mov
inc
aaa
dec
mov
mov
in
inc
push
mov
fisttp
das
xchg
test
cmp
pop
pop
pusha
add
adc
cdq
outs
repz
(bad)
scas
push
jb
jge
mov
leave
or
jmp
ds
mov
cmps
daa
mov
pop
adc
repz
jo
out
aad
imul
pop
je
mov
daa
push
imul
out
sti
sbb
lea
or
cmp
and
pop
or
lahf
pop
sub
fmul
iret
cmp
mov
cmp
loope
jmp
pop
iret
xchg
push
xor
or
ss
pop
jl
retf
fadd
jg
in
sar
xchg
aas
mov
stc
(bad)
loopne
push
cmc
pushf
mov
test
xor
stc
ja
test
out
inc
inc
cmc
mov
push
movs
ror
(bad)
mov
adc
xchg
cmp
dec
call
push
push
push
dec
(bad)
iret
cmp
xchg
pusha
xor
xor
test
enter
mov
pop
lods
mov
aas
gs
pusha
mov
adc
clc
sti
sub
outs
jmp
mov
mov
stos
pop
or
add
sbb
dec
sub
mov
cdq
xlat
xlat
pop
or
cmp
add
xor
mov
dec
fild
inc
inc
arpl
add
mov
mov
mov
push
cwde
push
fcmovnb
sbb
sbb
inc
dec
mov
pop
sbb
outs
cmp
das
icebp
inc
add
ds
stos
inc
iret
aas
mov
mov
or
xchg
repnz
jge
and
push
aas
sbb
(bad)
out
and
(bad)
push
sbb
dec
les
clc
sbb
mov
lea
add
xchg
mov
lock
ja
rcr
xor
mov
into
daa
sbb
mov
adc
sbb
sbb
mov
in
in
mov
inc
es
hlt
sub
cmc
movs
(bad)
adc
jl
mov
cmp
jp
lds
push
js
mul
push
pop
xchg
dec
sbb
xor
iret
mov
mov
add
adc
pop
ret
mov
jae
xchg
or
stos
(bad)
jmp
cmp
jl
fsubp
push
pop
(bad)
stc
fild
cli
mov
call
push
pushf
mov
arpl
sbb
out
jbe
retf
jp
jns
into
cmp
inc
popa
xchg
ins
cwde
(bad)
sub
addr16
shl
cs
mov
mov
(bad)
(bad)
out
cmps
add
imul
aam
jl
in
fild
(bad)
dec
ins
push
and
mov
rcl
movs
stos
dec
or
cmp
pushf
mov
clc
add
loopne
clc
mov
xchg
int
lea
xchg
xlat
imul
adc
mov
xor
add
popf
fldenv
stos
xchg
dec
xor
mov
test
mov
lea
push
xchg
cmp
in
push
sbb
push
push
inc
ficomp
aas
mov
adc
push
retf
xchg
out
pop
fs
cmp
pushf
dec
mov
xor
jmp
jo
icebp
sti
push
stc
jg
and
jmp
push
lahf
cmp
dec
jmp
dec
mov
(bad)
mov
add
call
push
test
mov
mov
repz
test
(bad)
arpl
dec
(bad)
out
or
dec
push
jo
dec
popf
add
int3
rcl
pushf
fst
xor
ficomp
ss
xchg
xor
fwait
sti
icebp
in
dec
stos
mov
ins
cmp
cli
jb
mov
ret
cmp
(bad)
retf
sbb
aaa
mov
mov
pop
or
sar
and
push
std
jmp
popf
lods
lahf
mov
pop
rcr
(bad)
mov
pushf
clc
leave
inc
push
pop
dec
ins
jnp
xchg
stc
mov
dec
add
(bad)
(bad)
fst
cdq
test
idiv
mov
jno
loopne
push
cli
hlt
push
out
xchg
aad
xchg
popa
movs
jb
lods
cmp
pop
push
jbe
(bad)
and
mov
xchg
popa
int
xchg
fidiv
test
int3
cmp
and
add
cmp
icebp
push
sahf
mov
jmp
sbb
pop
leave
pshufw
pusha
popf
mov
in
xchg
rcl
mov
inc
mov
sbb
adc
ffreep
imul
xor
cdq
call
out
add
xor
cmp
stos
cmp
add
sub
xor
mov
rcr
cmp
shl
pop
outs
jo
sub
pop
push
adc
into
jns
aam
ins
xchg
push
retf
shr
fbstp
inc
add
sbb
inc
aad
mov
jns
aad
mov
mov
mov
clc
gs
test
mov
xchg
push
inc
add
mov
in
push
cwde
test
(bad)
fs
out
sub
or
sbb
push
sbb
aad
frndint
(bad)
pop
mov
mov
mov
cmp
in
cmp
cmp
je
jbe
shr
xor
das
push
sbb
pop
pop
cmc
pop
mov
dec
xor
sub
test
div
push
jl
punpckhbw
pop
popa
inc
push
retf
dec
test
mov
test
pop
ror
test
test
xor
jo
add
xchg
xchg
pushf
ret
lds
das
sub
rol
mov
out
test
movs
mov
aaa
test
and
cmp
rol
adc
aam
jnp
xchg
ss
ds
stos
mov
dec
sahf
les
ficomp
xchg
ds
push
add
lods
test
dec
jo
add
sbb
je
cmp
(bad)
popf
mov
cdq
jnp
ret
arpl
mov
sub
push
add
sub
jae
stos
(bad)
or
push
mov
inc
mov
mov
stos
push
(bad)
bound
mov
cmp
dec
cmps
pop
cmp
sub
mov
xchg
jb
xchg
test
sbb
add
sar
std
je
push
int
cmp
jmp
mov
fnstcw
lea
fidiv
(bad)
stc
mov
sbb
(bad)
cmps
shl
and
xchg
push
inc
push
and
mov
jno
aam
jg
in
cdq
frstor
mov
test
mov
movs
popa
es
push
cmp
pop
pusha
adc
mov
adc
inc
shl
ds
fsub
adc
jne
sub
mov
gs
adc
fldlg2
in
xchg
or
mov
jnp
aaa
xchg
mov
adc
adc
and
jbe
ja
mov
jmp
repnz
(bad)
imul
std
cwde
shl
(bad)
in
pushf
mov
pop
push
sbb
add
outs
push
stc
add
pop
(bad)
movs
lock
cmp
push
push
in
jl
cmp
sub
fdivr
std
mov
fsqrt
mov
cs
inc
pop
shl
sbb
or
mov
ins
push
xor
push
mov
(bad)
push
arpl
cmps
mov
push
clc
je
pop
(bad)
aaa
jbe
scas
or
sub
pop
scas
pop
pop
jae
stc
and
adc
pop
jmp
addr16
dec
cs
jge
sub
push
fisubr
jo
adc
or
inc
xchg
lahf
es
push
in
stc
push
or
sbb
jb
in
je
test
fadd
inc
and
push
xor
push
sub
mov
mov
lds
mov
rol
pushf
sar
imul
push
mov
shl
and
jp
jl
out
popa
cmps
maxps
sbb
dec
xor
inc
inc
loopne
out
(bad)
iret
pop
movs
jmp
leave
cmp
scas
add
das
shl
loope
mov
cld
or
pop
jmp
pushf
std
xchg
movd
pop
test
fld
test
jge
mov
movs
loopne
inc
(bad)
sbb
sbb
pusha
jl
rol
jne
ds
pushf
fadd
cmp
mov
mov
mov
stos
test
sub
push
cmps
popa
pushf
mov
jp
dec
mov
and
mov
pushf
jnp
arpl
iret
fadd
or
in
icebp
xchg
rcl
nop
cmp
jno
push
xlat
mov
or
loopne
js
adc
leave
adc
lds
jo
mov
arpl
push
loope
pushf
les
vmovntps
add
inc
shl
test
daa
sahf
and
sub
xchg
imul
mov
xchg
inc
frstor
jnp
mov
adc
(bad)
out
stc
cmp
inc
scas
xchg
lods
sub
or
loop
f2xm1
fbld
dec
or
and
cmp
(bad)
push
arpl
scas
loop
adc
mov
arpl
call
sbb
ds
shl
mov
adc
mov
add
int3
cmps
cmc
and
push
mov
pop
mov
addr16
(bad)
xor
jp
push
fadd
es
jecxz
sub
outs
mov
test
fadd
cmps
test
mov
fsubr
int3
cmp
mov
push
aam
inc
ret
call
movs
dec
mov
fwait
out
mov
sub
or
jecxz
stos
(bad)
xchg
int
jp
mov
leave
push
jl
adc
mov
lock
mov
and
nop
frstor
and
mov
jp
fsubr
sar
and
mov
aaa
das
mov
pop
mov
cmp
and
cld
jo
aas
in
hlt
push
addr16
repz
shl
cmp
fwait
and
(bad)
xchg
imul
push
lock
js
sub
pop
call
or
push
inc
ret
jnp
test
xchg
enter
sbb
mov
fucom
in
push
cmp
lahf
dec
xchg
jmp
(bad)
lock
call
xor
or
pop
out
addr16
out
mov
fcom
fisub
adc
mov
fistp
imul
pushf
hlt
pop
daa
xchg
mov
(bad)
hlt
lods
jo
int3
or
add
clc
adc
push
das
cmp
push
sub
jo
outs
mov
sub
aaa
inc
adc
sahf
aam
dec
nop
call
cli
hlt
push
mov
test
inc
mov
adc
push
lods
call
(bad)
je
int
cmps
scas
mov
adc
push
inc
pusha
ins
mov
sub
ins
xor
jb
int3
not
idiv
push
ja
cs
cmp
repz
cs
inc
lahf
jl
mov
or
sub
jl
arpl
add
jmp
rcr
mov
ds
aam
movs
xchg
ds
in
sar
mov
sahf
inc
xlat
inc
sbb
inc
dec
xchg
mov
and
stos
cmp
aam
sar
(bad)
sub
fcmovu
dec
fist
jns
xchg
fldenv
in
ret
cmp
cmp
jg
cwde
mov
adc
ret
das
aad
pop
jp
call
xor
outs
mov
xor
repnz
in
mov
mov
lea
pop
imul
dec
repz
add
mov
loope
cmp
jle
les
je
adc
and
add
sbb
lock
jo
and
push
(bad)
je
pop
pop
lea
adc
ffree
jmp
sub
es
sbb
inc
xchg
fwait
shl
inc
hlt
ficomp
inc
ins
scas
cmp
leave
ins
adc
adc
call
js
push
jmp
(bad)
retf
dec
das
jae
pusha
xor
mov
repnz
cmp
inc
xor
push
mov
jnp
jle
or
xlat
sub
sub
lahf
ret
cmp
inc
prefetch
xchg
icebp
stos
lods
dec
xchg
mov
icebp
cmp
movs
jo
mov
hlt
mov
retf
dec
fist
sbb
sbb
cmc
loop
or
xchg
daa
inc
arpl
cdq
imul
push
in
cmp
xchg
xor
mov
jne
js
call
dec
test
(bad)
aas
mov
pop
push
aaa
sahf
gs
(bad)
pusha
fld
loope
and
sbb
inc
adc
mov
adc
stos
mov
icebp
shl
call
cmp
scas
call
mov
jmp
in
pop
lea
mov
sbb
ret
lock
mov
adc
fchs
inc
hlt
jnp
imul
jns
mov
fnstsw
data16
mov
pop
jmp
dec
sub
sar
adc
out
or
mov
mov
push
or
aas
mov
sbb
sar
jne
or
in
pop
jnp
cmc
movs
(bad)
call
jno
ins
cwde
(bad)
dec
sub
xchg
enter
inc
fdiv
sahf
mov
sbb
pop
xor
std
retf
xor
adc
jb
test
ds
das
sub
jo
movs
je
test
repz
shr
xchg
test
je
jmp
push
inc
push
pop
xlat
push
lods
int3
mov
jb
and
sbb
xor
sbb
mov
pop
imul
pop
push
rcl
mov
stos
xor
addr16
push
imul
xchg
(bad)
popf
(bad)
adc
adc
pop
fmul
ror
jge
mov
push
inc
mov
lea
push
fldcw
mov
jb
xor
sub
sub
jmp
xchg
xor
int
mov
test
sahf
jb
xchg
or
aas
pop
pop
dec
xchg
inc
inc
sub
push
jecxz
cli
push
and
fild
inc
adc
mov
or
inc
push
ret
xchg
cmps
arpl
push
push
xchg
ss
xchg
xlat
div
mov
or
or
inc
mov
jb
fdivrp
inc
pop
pop
jnp
les
ds
(bad)
mov
adc
jmpw
ja
jo
fadd
xor
cmp
dec
jge
addr16
pop
jo
or
pop
div
iret
sbb
dec
dec
xor
pop
mov
ret
fdivr
push
lahf
movs
and
stos
ja
mov
mov
retf
cmps
test
and
push
mov
rcr
or
ja
out
add
popf
jg
ins
jnp
xor
mov
rol
shr
cmc
xchg
pushf
jge
inc
cmp
push
data16
pop
inc
xchg
mov
enter
aad
sbb
dec
push
adc
(bad)
out
fwait
icebp
mov
push
inc
xchg
sti
shl
pop
aaa
and
jmp
fdivp
push
(bad)
inc
pop
cdq
mov
sahf
out
loopne
(bad)
sub
mov
xor
retf
xor
push
dec
dec
mov
inc
repz
sub
scas
lods
rcr
jmp
push
clc
fnsave
inc
jo
mov
enter
xchg
out
out
loop
and
ffreep
and
movs
dec
popw
jg
out
shr
in
pop
(bad)
das
sbb
inc
cli
or
aad
into
push
dec
jb
or
fcmovnu
xor
and
inc
inc
pop
dec
mov
lea
mov
pop
popa
rol
sbb
mov
mov
cdq
fdiv
in
xchg
out
or
addr16
mov
push
rol
in
cli
or
xchg
js
ins
mov
jl
jge
and
test
adc
and
cmp
mov
mov
in
push
rol
jp
and
lods
js
or
shr
fwait
cmp
xor
icebp
lea
nop
dec
push
das
jmp
sub
mov
mov
mov
jo
bts
sahf
out
pop
xor
sbb
add
push
scas
mov
mov
test
xor
out
out
test
dec
adc
mov
mov
adc
sti
(bad)
fdiv
mov
pop
xor
add
xchg
fdiv
mov
inc
sub
push
push
fild
jle
mov
ins
das
scas
mov
xchg
stos
push
repz
lds
push
or
ret
jmp
fsub
mov
fwait
cli
dec
ss
mov
mul
adc
lock
frstor
jecxz
adc
inc
pop
mov
mov
repnz
(bad)
icebp
xchg
pop
push
push
adc
sti
add
dec
inc
sbb
and
push
fisubr
jmp
adc
jp
jb
movs
out
lods
jecxz
add
jl
adc
imul
(bad)
popa
mov
mov
popa
aas
xchg
mov
inc
(bad)
cmp
sti
call
sbb
retf
xchg
cmps
pop
pop
dec
lock
adc
xchg
mov
aaa
int
dec
mov
lods
shr
call
xor
jmp
dec
repnz
xchg
push
jae
out
dec
sub
leave
imul
xchg
pop
mov
sbb
add
lahf
stos
and
lahf
stos
mov
sbb
pop
out
ins
inc
nop
retf
pushf
add
cmps
cmps
rcl
add
aas
popf
fsub
rcl
iret
inc
out
mov
std
jnp
cld
jmp
mov
mov
xchg
mov
cdq
(bad)
push
xor
jbe
sahf
in
mov
fbld
fdivr
and
push
dec
cwde
sar
cmps
mov
or
cmps
xor
gs
cmps
cmc
ret
inc
(bad)
stos
inc
jge
push
sbb
sahf
cmp
mov
cmps
xlat
cmp
jge
(bad)
or
mov
je
lahf
rcr
psrlw
pop
stos
dec
std
repz
adc
ret
imul
mov
xchg
jle
ret
xchg
sbb
push
bound
rol
jb
mov
add
(bad)
adc
iret
add
ja
dec
adc
xor
jae
mov
jmp
in
inc
ss
icebp
leave
sub
mov
cmps
fs
scas
rol
(bad)
popf
mov
push
adc
mov
psubusb
inc
sti
add
iret
cmp
cmp
adc
out
retf
inc
imul
pushf
mov
xor
mov
xchg
mov
pop
not
fistp
xchg
dec
neg
stos
neg
inc
bound
or
or
push
mov
or
dec
xor
in
pop
sbb
mov
cmp
sbb
outs
pushf
call
popf
out
fdiv
mov
mov
xchg
xor
movs
retf
lods
bswap
mov
in
daa
cmp
and
sub
(bad)
dec
sub
pop
out
shl
add
xchg
dec
cmps
clc
jne
addr16
inc
jmp
js
mov
jne
xchg
pop
sub
(bad)
js
push
arpl
push
iret
ins
cdq
pop
stos
in
(bad)
ins
dec
int
jecxz
(bad)
jnp
hlt
cmp
and
daa
pop
jmp
add
mov
push
mov
xor
pop
mov
fwait
cmp
pop
iret
lds
push
(bad)
ret
ja
pop
sbb
inc
sbb
pop
(bad)
mov
fcomp
ficom
and
jmp
sbb
mov
mov
add
aam
ret
nop
clc
sbb
stos
cmps
or
jo
in
lds
rcl
mov
mov
dec
sbb
push
mov
loop
jbe
int3
scas
fist
arpl
(bad)
jp
pushf
out
mov
and
dec
ficomp
sahf
rcr
sub
dec
adc
xchg
inc
ins
and
out
mov
mov
outs
shl
sahf
movs
out
or
jne
xchg
jae
jnp
or
ds
cmps
ins
(bad)
leave
sub
inc
pusha
sbb
ds
pop
mov
jmp
outs
ja
into
or
lea
mov
ror
pop
and
push
add
mov
mov
jns
mov
jno
into
in
cmp
pop
add
mov
mov
iret
out
xchg
inc
xor
mov
mov
clc
cmp
dec
mov
clc
stc
(bad)
imul
xor
fdivr
xchg
mov
adc
xchg
ja
into
test
jne
pop
ror
xchg
rcr
cmp
in
pop
fild
je
add
stos
into
sub
std
xchg
repnz
gs
(bad)
lods
xchg
cwde
repnz
lods
lds
sub
dec
pushf
fistp
or
inc
jae
int3
cwde
test
jl
jne
stos
mov
jecxz
and
je
and
mov
das
inc
fcmovb
repz
mov
pop
pop
and
push
in
hlt
dec
aas
adc
add
and
jbe
and
push
and
mov
push
and
sbb
add
sbb
mov
lds
adc
sbb
jmp
movs
jbe
int
(bad)
and
jne
inc
or
clc
dec
push
mov
and
push
test
ror
mov
test
adc
mov
mov
sbb
inc
mov
es
aas
sbb
xor
ret
(bad)
cmp
pop
call
xor
and
mov
jmp
and
repz
mov
test
movs
cmps
loope
int3
jno
or
das
push
test
aam
mov
mov
pop
daa
mov
sub
xchg
popa
sub
js
push
retf
(bad)
mov
pop
imul
rcr
test
jge
mov
jge
jg
je
(bad)
lods
arpl
mov
mov
aad
out
or
adc
jle
sbb
xchg
rol
aas
loopne
leave
cmp
test
cmp
popa
(bad)
and
inc
sub
mov
push
cmps
xor
adc
adc
dec
xlat
inc
inc
inc
(bad)
sub
or
and
loopne
mov
iret
add
(bad)
push
cmp
mov
ds
in
mov
leave
data16
pushf
or
out
adc
fs
clc
test
mov
rcr
(bad)
and
ficom
cld
lods
mov
loop
bnd
pop
adc
add
out
sub
icebp
adc
adc
cmps
dec
push
mov
je
pusha
int
cs
push
mov
jbe
fist
inc
mov
jp
pop
in
add
ret
(bad)
(bad)
movs
out
mov
mov
mov
ja
xor
jle
test
pop
(bad)
fbstp
add
rcl
sub
nop
cmp
outs
ret
push
jno
pop
cmp
loop
inc
jae
lods
loope
adc
sbb
sub
jg
aam
mov
xor
mov
imul
mov
popa
ret
shl
sar
jns
jp
mov
pop
ja
push
(bad)
inc
fiadd
bound
sti
pop
shl
mov
adc
int
xor
sahf
lds
pop
fild
rcr
jp
mov
jo
adc
pop
jmp
push
or
aam
in
adc
loope
mov
test
pop
aaa
push
gs
xor
sar
outs
out
lods
push
out
cdq
fidivr
or
pop
dec
xchg
es
ret
cs
imul
(bad)
push
imul
mov
pop
sahf
fldenv
xchg
adc
xor
cmp
fs
jae
mov
or
call
inc
xor
xor
sbb
fld
mov
fs
adc
ins
ret
mov
push
pop
add
(bad)
cdq
es
cmps
pop
pop
dec
push
mov
fdivr
add
call
dec
addr16
adc
in
mov
xchg
lds
aaa
jnp
cmp
or
out
lea
dec
push
cmp
xor
mov
pop
jge
sbb
stos
mov
mov
mov
mov
jb
cmp
sbb
cmp
inc
pop
mov
jl
retf
cwde
mov
mov
les
es
(bad)
stc
jnp
xor
jne
imul
mov
mov
mov
pop
xor
retf
inc
dec
aas
mov
dec
mov
addr16
mov
repz
push
out
repnz
or
jmp
imul
hlt
call
repnz
ja
push
lds
cmp
aam
(bad)
cmp
pop
push
pop
dec
into
or
cmp
and
pop
mov
dec
dec
cs
add
retf
mov
dec
ss
and
ret
ds
and
hlt
push
sub
mov
mov
add
or
sbb
lods
addr16
sub
push
pop
cmps
sbb
push
mov
jecxz
cmp
xor
gs
xchg
xor
and
or
js
jnp
cmovno
adc
pop
lahf
push
lea
cmc
stos
mov
pop
xchg
mov
data16
je
jl
mov
movs
fnstenv
xchg
mov
rcl
cmp
cmp
mov
lahf
and
fst
adc
xchg
lahf
enter
jns
xchg
cmp
ror
push
fsub
and
mov
lea
retf
jmp
mov
movs
pop
imul
cmp
bound
out
out
out
mov
(bad)
jno
ret
clc
arpl
push
aas
push
imul
add
jne
mov
test
retf
out
daa
sbb
cs
mov
cdq
inc
div
out
jb
cs
and
add
xchg
mov
dec
fisub
aam
test
sbb
test
icebp
lods
xor
mov
sahf
add
clc
shr
adc
clc
out
inc
fistp
clc
int3
test
out
les
xor
and
add
icebp
xor
pop
sbb
sbb
sbb
lods
test
out
xchg
jmp
push
cmc
test
push
stos
jne
mov
push
sub
push
div
aas
mov
jg
mov
dec
icebp
cmp
test
and
adc
push
movs
mov
push
mov
fcmovne
jnp
or
xchg
jbe
pop
push
cdq
mov
ds
mov
(bad)
pushf
ret
xchg
jmp
sub
sbb
(bad)
out
push
inc
ret
add
neg
inc
add
or
sub
cmps
iret
in
out
xor
sub
gs
jne
add
retf
aad
cmp
aam
dec
pop
div
push
push
push
into
pop
adc
sub
cmp
cdq
mov
movs
fidivr
hlt
mov
adc
mov
dec
stos
inc
dec
popa
pop
push
add
xlat
mov
shl
std
popa
das
movs
ret
imul
js
xor
retf
cs
add
xchg
in
and
cmc
and
fbld
xor
push
out
fwait
push
outs
aam
mov
jo
jns
bound
call
or
push
es
jg
test
iret
fild
cmps
push
mov
dec
or
sub
xor
xor
mov
dec
sub
mov
mov
bound
inc
adc
jb
enter
test
iret
pop
(bad)
adc
lods
movs
icebp
cmp
nop
arpl
daa
inc
inc
(bad)
pushf
sbb
sbb
mov
fs
xchg
add
inc
nop
dec
jl
push
movs
test
adc
xor
mov
out
adc
mov
(bad)
xchg
jl
or
jb
psrlw
int
mov
pop
aad
cwde
repz
enter
aaa
sub
arpl
jle
cmps
setne
xchg
xlat
adc
nop
xchg
retf
mov
call
ret
add
stos
jmp
pop
xchg
pop
enter
(bad)
mov
sbb
call
loop
adc
push
call
ja
or
mov
pop
mov
push
adc
imul
cmps
rcl
cmp
push
sub
shl
lea
dec
and
movs
cmc
pop
adc
popa
inc
les
push
shr
cmps
pop
or
pusha
dec
aas
cld
cmp
cwde
pusha
lock
jge
pop
and
sbb
rcl
lahf
aaa
xor
xor
mov
sbb
jg
cmp
scas
sbb
imul
pop
call
sahf
rcl
jbe
inc
dec
sbb
dec
and
sbb
sbb
retf
fwait
mov
into
(bad)
add
fwait
iret
idiv
jne
sub
mov
(bad)
pop
loop
xor
push
mov
xor
mov
pop
shr
call
xlat
xchg
ret
data16
icebp
jecxz
mov
std
daa
das
jns
ds
sbb
in
pop
stos
xor
clc
push
sub
sub
and
mov
ret
ret
repz
retf
repnz
adc
jecxz
test
arpl
sar
and
in
aaa
mov
add
(bad)
mov
inc
mov
jnp
xchg
rol
xchg
jecxz
ds
leave
js
jecxz
fst
add
pusha
pop
gs
(bad)
dec
int
pop
rcr
mov
and
mov
jmp
ror
adc
js
push
xor
lods
prefetchw
fwait
ss
sbb
sub
xchg
sar
jnp
rcr
mov
xor
push
fisubr
pop
jg
cdq
std
(bad)
ins
ret
ficom
adc
sbb
xor
repz
sbb
mov
jecxz
stos
int3
pop
mov
cs
ins
xchg
fnstcw
movs
mov
sbb
dec
or
inc
jge
sbb
sbb
pop
out
ja
enter
jmp
out
dec
(bad)
icebp
sbb
js
push
cmp
inc
pop
sti
rcl
xor
mov
int
cli
push
pop
cwde
int3
je
loopne
add
add
not
rcl
mov
js
popf
inc
lds
add
test
inc
sub
sub
movs
lods
mov
xchg
inc
adc
loope
mov
fs
call
adc
adc
outs
and
sbb
inc
push
pushf
add
mov
or
jecxz
(bad)
frstor
dec
xor
ins
jnp
mov
stos
push
ret
jl
xor
pop
jne
mov
pop
xchg
cmp
mov
xchg
sub
pushf
xchg
aaa
pushf
xchg
pop
xor
icebp
dec
mov
in
loopne
jg
pop
pop
stos
sbb
pop
ins
bound
(bad)
imul
xchg
mov
push
ret
scas
adc
sbb
aad
sbb
dec
push
or
mov
push
gs
test
stc
xor
daa
xchg
cmp
es
pop
pop
or
xor
aad
aaa
or
sbb
repz
retf
cwde
cmps
ins
jb
xchg
mov
dec
cmp
push
pushf
ss
inc
iret
shr
cmp
cld
mov
xchg
cs
sar
cmp
mov
xchg
fcmovb
loop
imul
cmps
mov
mov
pop
jmp
jl
pop
dec
nop
inc
push
adc
(bad)
jp
(bad)
mov
adc
cmp
xor
aad
inc
popa
sbb
push
add
push
cmp
loop
mov
xor
mov
in
dec
xchg
push
dec
cmps
retf
mov
sub
test
mov
fild
int3
scas
enter
(bad)
mov
cmp
aaa
inc
(bad)
in
xor
jnp
mov
sbb
add
fnstenv
stc
inc
aaa
inc
push
ret
sbb
push
push
cmps
repz
xor
jbe
add
fsubp
sub
das
ja
and
push
dec
dec
jmp
aas
inc
test
cmp
xor
pop
pushf
or
mov
dec
mov
call
or
out
or
push
idiv
adc
push
pop
jnp
sbb
je
ficomp
(bad)
clc
xor
int3
adc
jle
mov
mov
push
xor
inc
test
xor
jnp
sbb
and
nop
xchg
push
push
fist
repz
rcl
fwait
in
sar
ins
and
mov
sub
in
sub
cwde
mov
ins
outs
fst
(bad)
sbb
and
pop
pop
mov
in
or
or
pusha
mov
or
nop
push
mov
out
in
retf
inc
scas
aad
sub
loopne
aam
bound
loop
retf
add
push
fisttp
gs
aam
mov
(bad)
pop
mov
jg
jp
cmp
xlat
out
rcr
ret
adc
mul
ins
(bad)
loope
pop
rol
(bad)
and
mov
imul
loope
imul
add
adc
call
push
mov
cli
adc
mov
retf
iret
inc
ss
inc
or
adc
(bad)
mov
lock
icebp
pop
lock
push
sub
popf
dec
mov
push
jecxz
jno
int3
popa
pop
gs
xor
push
mov
add
xchg
stos
cwde
mov
into
iret
movs
add
cmp
cmps
cs
cmp
xchg
and
in
xor
hlt
push
test
sub
sbb
dec
rcr
pop
jo
sbb
push
repz
or
aad
test
mov
repnz
pop
push
imul
test
pop
call
jge
test
jg
cdq
and
lds
imul
inc
dec
aaa
cmp
cmp
das
push
pop
aad
mov
fild
xchg
out
and
and
jge
sti
sti
mov
or
lds
fwait
adc
add
mov
and
scas
es
nop
jnp
inc
push
mov
dec
loop
push
cdq
mov
jl
sbb
dec
lods
mov
mov
xchg
jecxz
push
jne
inc
sti
adc
retf
loope
scas
iret
retf
jmp
xlat
xchg
sub
mov
mov
retf
cmp
sbb
cmc
xor
test
pop
fcmovnb
and
mov
movs
xchg
inc
mov
sahf
inc
fmul
sub
mov
ins
in
add
adc
inc
and
dec
xor
lock
pop
aas
mov
gs
(bad)
adc
jmp
popf
pop
sysenter
ss
and
das
pushf
(bad)
sbb
outs
mov
pop
es
int3
xchg
push
dec
xchg
mov
pop
cdq
fstp
mov
pop
outs
pop
ds
(bad)
lock
cmp
add
and
ss
je
std
add
push
cmp
pop
aaa
jnp
push
pop
fs
repz
xchg
aas
repnz
stos
mov
in
mov
mov
loopne
mov
mov
call
out
xchg
dec
or
cld
push
inc
mov
cs
dec
add
in
je
sub
inc
ret
mov
js
xchg
sub
mov
fisttp
mov
bound
inc
jmp
pop
shl
out
xchg
(bad)
popa
cld
arpl
sbb
int3
cmovb
sub
add
jns
movs
dec
or
lock
in
lds
retf
jl
pop
cmp
cmc
test
dec
gs
adc
pop
test
sub
nop
(bad)
call
push
push
mov
in
hlt
adc
into
ror
outs
xlat
xor
cmp
sahf
fisttp
bound
sub
hlt
push
push
pop
inc
mov
cmp
lea
xchg
and
mov
data16
into
jle
mov
jmp
sub
scas
dec
repnz
stc
loope
push
inc
imul
jmp
inc
retf
fisubr
pop
inc
sub
fwait
jmp
scas
mov
sti
adc
pop
push
int3
push
frstor
dec
sub
push
mov
pop
fwait
out
loope
out
and
xchg
fist
mov
jecxz
cdq
adc
ins
mov
mov
in
jae
mov
outs
xor
push
xchg
sbb
movs
popf
mov
jmp
sti
xor
lods
push
push
mov
and
inc
xchg
cmp
or
loopne
movs
jnp
jl
cld
repz
jmp
leave
pop
out
test
mov
sub
cs
pop
rcr
jg
jle
pop
fscale
xchg
xchg
add
in
aam
call
dec
push
loopne
dec
imul
xor
sub
stos
sub
pusha
inc
mov
setns
inc
adc
sahf
sbb
mov
add
push
sbb
fisubr
(bad)
mov
adc
dec
neg
cmc
ficom
mov
ret
or
test
push
enter
ins
mov
add
mov
jne
mov
ins
stc
in
adc
xchg
xchg
add
jo
leave
xlat
stc
sbb
cwde
add
add
sub
and
mov
out
push
cmp
sbb
sahf
idiv
sbb
popf
and
add
xchg
dec
push
iret
adc
aad
cmp
data16
les
adc
mov
test
in
sub
pop
sti
bswap
fstp
push
sub
fisub
call
sti
adc
jo
(bad)
idiv
in
jno
bound
xlat
arpl
jmp
ficom
outs
mov
cmp
lock
and
stc
xor
cmp
adc
das
sub
sbb
addr16
or
js
movs
ja
ds
inc
mov
(bad)
out
scas
cli
cmps
mov
test
sbb
(bad)
jns
hlt
inc
std
cli
sti
inc
pusha
jmp
cs
push
fist
adc
test
(bad)
iret
cwde
pop
mov
out
in
and
(bad)
into
cmp
and
adc
pop
das
(bad)
div
stos
push
fdivp
jo
or
pop
gs
movs
jl
call
aam
cmp
add
lds
push
pop
sub
adc
cli
retf
add
repnz
les
xchg
jmp
cmp
stos
shl
(bad)
mov
inc
and
out
and
pushf
push
mov
push
and
fst
fcmovbe
add
cmp
mov
pushf
sub
inc
(bad)
neg
adc
cmp
pop
jmp
iret
sbb
sbb
mov
and
push
into
nop
add
scas
test
xor
(bad)
std
xchg
push
push
and
mov
adc
xchg
cmps
mov
mov
adc
sbb
cld
push
push
clc
pop
outs
add
popf
call
(bad)
stos
popa
mov
rol
test
sbb
jae
repnz
xchg
idiv
push
outs
adc
xchg
and
sbb
mov
(bad)
sub
sub
cs
stc
test
push
fbld
dec
repnz
mov
or
sbb
aas
mov
inc
call
arpl
inc
jp
adc
push
cmp
or
lods
clc
push
pop
nop
retf
div
mov
and
mov
push
xor
inc
mov
leave
cli
ficomp
inc
pop
add
xchg
stos
call
inc
call
je
ss
enter
sub
sub
jp
mov
add
popf
cli
mov
jnp
dec
in
cmc
aaa
sbb
dec
dec
sub
xchg
stc
enter
pushf
push
mov
inc
mov
xchg
sbb
xor
imul
or
js
or
pop
into
arpl
test
cmc
inc
sbb
sbb
xchg
call
aam
xchg
or
mov
arpl
jb
sbb
scas
fisttp
pusha
sub
mov
stc
movs
jne
nop
pop
or
dec
idiv
shl
pop
pop
mov
mov
push
cmp
retf
push
shl
hlt
add
add
jae
clc
dec
jge
sbb
je
loop
mov
call
jecxz
pop
cmp
dec
in
dec
mov
inc
jmp
pop
jbe
fs
je
dec
xor
std
jl
jle
sub
and
push
mov
xor
aad
jl
ins
inc
mov
and
fild
movs
out
clc
sti
xchg
or
jecxz
sub
stos
fstp
das
retf
fidivr
sbb
scas
cs
adc
outs
rol
enter
mov
std
call
ret
pop
cmp
or
mov
and
repnz
clc
mov
lds
mov
sub
dec
push
mov
or
arpl
dec
call
dec
es
ds
(bad)
loope
jecxz
add
repz
and
and
mov
sti
dec
iret
sbb
in
daa
ficom
mov
(bad)
ins
out
adc
out
in
xchg
sbb
push
inc
mov
or
mov
mov
cs
mov
adc
int
dec
cmp
mov
jmp
adc
push
mov
and
mov
out
ret
or
pushf
into
inc
dec
sbb
jnp
inc
mov
icebp
nop
das
or
mov
les
jo
mov
xor
pop
js
adc
xor
lds
cwde
cwde
inc
or
push
hlt
in
test
jno
jmp
mov
mov
scas
or
shl
push
out
or
xchg
lahf
pop
shl
adc
ss
pop
stc
dec
lds
push
ins
inc
xchg
in
and
dec
gs
in
xchg
popa
inc
jl
sahf
cmp
mov
(bad)
xor
push
fwait
cmp
adc
xor
cld
daa
mov
and
cmp
mov
test
ja
add
jb
cli
and
bound
aas
adc
addr16
cmp
jmp
cmps
mov
retf
enter
jne
out
jbe
mov
inc
test
les
and
fidivr
ins
jmp
imul
mov
js
fisubr
cmp
arpl
sub
push
adc
cli
push
sbb
cmp
push
push
(bad)
arpl
push
adc
pop
repnz
dec
sub
enter
(bad)
sbb
sbb
mov
mov
int3
xchg
inc
push
adc
dec
addr16
inc
fs
sub
dec
cld
icebp
mov
cmp
ss
dec
sbb
ret
bswap
pop
sub
add
add
mov
push
jg
out
sub
rcr
jnp
xchg
jmp
sub
out
(bad)
jno
dec
test
stos
pop
push
jnp
sbb
outs
lods
movs
cmps
inc
xchg
pop
call
(bad)
enter
shl
repz
(bad)
aaa
imul
fs
loope
(bad)
mov
pop
jb
fld
pop
jecxz
dec
dec
mov
xlat
fxch
pop
or
shr
mov
sbb
or
icebp
or
out
hlt
mov
scas
sahf
push
mov
and
test
xor
jle
cmp
sub
call
inc
(bad)
pop
mov
jl
mov
inc
pop
mov
nop
cmp
xor
and
lea
pushf
ffree
test
nop
outs
sbb
xor
je
call
cmp
inc
retf
idiv
or
sti
loop
ror
sbb
(bad)
stos
ret
mov
xor
mov
fnsave
call
mov
xor
lahf
enter
(bad)
adc
daa
inc
push
sar
add
or
cli
mov
jp
or
or
in
rcr
aam
mov
pop
rcr
popf
fincstp
sub
pop
icebp
push
inc
retf
sub
sbb
out
repz
or
add
xor
pop
in
xor
sti
sbb
sub
jb
clc
mov
imul
mov
scas
jbe
add
sub
inc
ins
xchg
sub
xor
push
mov
mov
test
or
out
mov
sbb
jge
pop
fidivr
pop
mov
jns
test
cmp
push
sub
cmc
pop
hlt
add
(bad)
xchg
push
loope
xor
jbe
mov
adc
pop
scas
loopne
sbb
fnsave
mov
cmps
pop
xlat
jl
push
lock
mov
xchg
xchg
xor
fisttp
cmp
test
pop
sbb
sub
sti
aad
mov
retf
cli
xchg
jle
cwde
das
push
mov
jmp
push
mov
xor
inc
lea
dec
mov
mov
aaa
sbb
and
test
mov
mov
test
into
or
pop
and
push
adc
cmp
inc
sbb
fs
and
mov
jbe
sar
push
fcomi
lea
xchg
bound
add
xchg
ror
jb
jl
shl
mov
xchg
cmp
stc
fbld
retf
cmps
enter
cdq
and
(bad)
call
retf
mov
and
push
and
ja
xchg
imul
mov
int
mov
aam
in
inc
or
outs
cmp
fisub
leave
ss
(bad)
jae
add
imul
mov
sbb
pop
or
mov
push
and
fadd
cmps
cvtps2pi
fdiv
push
outs
in
sbb
push
push
inc
in
add
and
add
pop
adc
sbb
dec
js
repz
ins
ins
mov
mov
push
into
mov
xchg
or
inc
mov
ins
test
and
adc
repnz
adc
out
sbb
push
outs
movs
add
pop
mov
adc
mov
fcmovb
fistp
scas
jl
sbb
div
pusha
imul
xchg
add
jo
or
loop
mov
ja
repnz
push
ins
mov
fild
rcl
cmp
sahf
dec
nop
das
lock
cmp
sbb
aaa
or
sub
pop
jbe
mov
loopne
pop
mov
cmps
jg
xchg
or
or
mov
inc
mov
mov
sbb
jg
inc
cmp
into
mov
pop
push
std
test
fst
dec
push
retf
lods
test
mov
mov
in
jbe
pop
int3
jb
fld
(bad)
retf
fbld
call
sbb
fiadd
xchg
test
ds
(bad)
bound
push
add
xchg
jle
imul
(bad)
sbb
or
out
fidiv
push
jge
mov
adc
jbe
(bad)
pop
loope
sbb
(bad)
in
mov
xor
fdiv
lods
popa
xor
out
or
mov
(bad)
std
cmp
dec
(bad)
mov
push
loopne
inc
clc
jb
jmp
jae
aas
xchg
fisttp
or
sbb
adc
sbb
jp
cmp
stc
and
adc
cmp
popf
aaa
iret
cli
ror
fabs
movs
bound
mov
in
idiv
loopne
mov
mov
fisubr
jmp
in
push
mov
out
mov
dec
cs
add
repnz
mov
jnp
fimul
rol
adc
hlt
loope
mov
jl
push
sbb
mov
xchg
test
(bad)
pushf
cmps
in
jecxz
xor
outs
in
call
xchg
out
jbe
cmp
xchg
cmps
push
or
xchg
pop
mov
out
sbb
cmps
sahf
jp
xor
das
xor
shl
mov
cmp
nop
test
call
ds
cmp
(bad)
sub
adc
loopne
pop
outs
inc
bound
scas
stc
adc
(bad)
pop
push
lahf
(bad)
mov
nop
ja
inc
stos
or
xor
pop
repz
scas
mov
mov
and
outs
xor
jae
lock
sahf
mov
dec
ja
sbb
retf
sbb
push
sbb
stc
bound
call
cmp
mov
lds
outs
push
push
xor
inc
sub
mov
mov
push
sub
mov
mov
inc
stos
xlat
ret
dec
adc
push
out
test
or
daa
dec
adc
loop
xchg
push
je
dec
jg
xor
in
and
leave
adc
inc
test
mov
and
and
call
mov
inc
or
js
or
div
sbb
int
stos
push
outs
sub
adc
test
xchg
sub
aam
(bad)
xor
inc
fidivr
repnz
jmp
aam
aaa
data16
mov
cld
pusha
stos
or
add
or
cmp
mov
push
jmp
add
enter
xchg
inc
push
push
lahf
cs
xchg
pusha
xor
xor
or
xchg
jle
jg
push
mov
call
aas
ja
dec
loop
add
test
enter
cmp
stos
jae
jg
pmulhuw
xchg
pop
push
xor
sbb
cmp
cmp
loopne
sbb
cld
lock
mov
inc
sahf
mov
adc
jne
mov
cmp
push
jecxz
pop
cwde
nop
push
add
data16
fnsave
retf
sbb
mov
popf
jns
je
in
mul
and
fimul
inc
jo
stos
add
push
add
push
pop
leave
push
inc
pop
retf
or
mov
push
rcl
mov
sbb
jae
ja
push
aaa
ret
cdq
pop
jns
adc
inc
or
cmp
cmp
xor
jae
adc
popa
and
aam
sbb
sub
and
pop
sbb
mov
imul
jge
(bad)
out
mov
or
mov
inc
and
not
push
repnz
popa
loopne
xor
iret
add
gs
stos
sbb
gs
inc
xor
mov
and
adc
stos
adc
cmp
js
jle
loope
js
push
js
imul
popf
sar
stc
out
mov
cmp
enter
mov
sbb
fs
clc
ficomp
add
(bad)
aaa
dec
xchg
xchg
frstor
sub
lock
add
xchg
mov
and
loope
xor
dec
or
and
mov
sub
mov
adc
call
xchg
cs
pop
shl
arpl
retf
cmp
cmovns
sti
add
cmps
jns
push
retf
lods
adc
add
jmp
mov
bound
inc
xor
sti
xor
out
movs
sub
pop
jo
outs
aad
and
adc
stc
xchg
out
adc
arpl
dec
outs
shl
cmp
jle
or
push
stos
jl
or
and
or
cdq
xchg
mov
lods
sub
and
xor
ins
jmp
inc
pop
or
and
cwde
fild
sbb
mov
add
hlt
stos
fs
loop
xchg
cmp
arpl
movs
(bad)
sub
mov
stos
xor
mov
pop
mov
lods
cdq
sub
inc
cmp
inc
fdivr
jno
repnz
xor
(bad)
inc
and
sub
rcr
add
(bad)
jmp
dec
sahf
push
les
repnz
dec
cli
gs
out
push
and
push
dec
jle
lods
inc
xchg
dec
push
call
imul
shr
xchg
jmp
inc
mov
jecxz
and
addr16
mov
or
push
and
mov
jno
mov
or
inc
add
sub
ret
push
jecxz
ret
scas
inc
sti
imul
repnz
loop
jb
sub
dec
sahf
xchg
ds
outs
xor
in
xchg
leave
jns
adc
sbb
xor
cs
mov
xchg
adc
inc
cmc
bound
xchg
mov
test
mov
call
and
mov
icebp
int3
cmp
stos
jbe
fcomp
mov
pusha
cmp
jo
xor
sub
mov
inc
cmp
std
fiadd
mov
cmps
leave
mov
xchg
fdivr
imul
int
repnz
jl
and
pop
xor
push
ret
daa
lods
cmc
pushf
movs
xor
sub
mov
pop
fnstsw
push
adc
pushf
cmp
lods
mov
repz
retf
loope
aaa
sub
fwait
imul
mov
gs
or
mov
daa
and
add
add
xchg
xchg
xchg
or
xchg
mov
sti
mov
ins
cs
scas
fcomip
rol
or
fwait
xor
pop
pop
jp
pusha
fistp
movs
std
adc
inc
fisubr
mov
push
inc
sub
mov
push
mov
fldenv
sub
es
jno
lods
sbb
push
pusha
ror
mov
adc
into
in
sbb
jmp
jnp
ins
cmps
and
sbb
test
dec
xchg
jp
cs
push
dec
dec
ret
sbb
jae
xor
enter
icebp
dec
int3
push
inc
retf
sub
jmp
test
repz
add
call
dec
and
and
enter
xchg
pop
jmp
mov
or
dec
fst
fcomp
retf
in
jo
out
mov
inc
inc
push
sub
push
lods
mov
xchg
dec
dec
jmp
adc
cmp
cmps
push
push
inc
add
mov
add
jle
movs
loopne
stos
movs
(bad)
xchg
sar
shl
nop
pop
shl
clc
nop
dec
ret
mov
sbb
xchg
shl
jbe
(bad)
jnp
popa
mov
mov
movs
or
or
(bad)
es
pop
int3
(bad)
frstor
scas
sub
test
mov
fidiv
pop
mov
adc
or
xor
popa
es
push
jne
xchg
xchg
int
mov
jecxz
dec
add
cmps
mov
mov
dec
lds
cmp
sbb
inc
in
int3
push
lahf
repnz
cmp
shr
jmp
cld
xchg
inc
scas
in
test
les
dec
shl
mov
sub
push
inc
push
jns
rcl
stos
push
pusha
pop
shr
jae
xchg
mov
retf
sub
fbstp
repz
xor
mov
adc
(bad)
jle
mov
das
cmp
jle
sub
pusha
fldcw
lods
mov
xor
jmp
aas
ds
adc
sub
ret
das
in
into
fcom
sub
clc
pop
adc
movs
sbb
daa
sub
mov
mov
mov
cmps
stos
xchg
test
sbb
sbb
dec
test
clc
sbb
or
jns
fsub
inc
stos
sub
movs
push
sub
sbb
fldcw
or
js
fs
test
pusha
or
xor
mov
sub
test
outs
sbb
shl
dec
xor
mov
aam
and
adc
jl
imul
mov
test
xor
inc
add
das
sbb
cld
hlt
inc
add
clc
mov
sti
(bad)
loopne
push
inc
(bad)
jl
cmps
int3
ret
add
add
pushf
inc
jne
and
js
loop
and
pop
mov
pop
jg
ror
test
xlat
rol
jno
xchg
aam
sub
call
loop
and
lds
test
mov
(bad)
jmp
inc
call
(bad)
mov
xchg
out
pop
cmps
cmps
mov
sbb
loopne
and
rcr
outs
ficomp
inc
loope
add
pop
pminub
and
mov
daa
jnp
lea
stos
(bad)
(bad)
aad
mov
pop
pop
packuswb
xchg
je
or
or
(bad)
sbb
ret
jmp
pop
xor
leave
cs
(bad)
stos
mov
sar
repnz
movs
or
push
pop
dec
into
jo
mov
push
jmp
std
mov
das
cmp
jmp
dec
ffree
cld
and
jl
movs
mov
mov
adc
and
xchg
mov
add
lock
or
sbb
push
(bad)
jno
dec
push
cld
xchg
lods
or
mov
sub
sbb
sar
ja
mov
add
and
dec
cmp
jge
outs
xor
lahf
jl
push
nop
imul
adc
push
inc
cmc
or
xor
sbb
lea
jnp
xor
add
sbb
repnz
adc
data16
test
fild
js
push
xor
imul
cmp
or
(bad)
(bad)
mov
leave
xor
fsubr
scas
sar
mov
pop
mul
push
sbb
dec
paddw
xor
mov
outs
jl
inc
inc
mov
mov
setne
dec
mov
in
stc
pop
je
sbb
(bad)
repz
dec
(bad)
popa
jmp
pop
jl
sub
inc
sbb
fucomi
jecxz
add
push
scas
pop
pop
leave
xchg
mov
aaa
push
dec
sub
xchg
push
mov
mov
fwait
rcl
push
ret
mov
cmp
into
out
loop
xor
lahf
inc
inc
jo
in
scas
adc
push
loop
jo
mov
ror
pop
xor
jmp
mov
or
fcomp
cmp
retf
xchg
in
mov
fisttp
retf
xor
pop
xor
mov
jbe
add
add
xchg
clc
dec
mov
mov
loopne
out
push
xchg
mov
cmp
outs
cld
cmc
ret
pop
in
leave
adc
gs
xchg
popf
std
int3
nop
inc
jp
data16
inc
dec
mov
mov
stos
fcomp
fild
(bad)
rcr
jp
ret
aad
jae
sub
and
push
ret
iret
xchg
inc
in
mov
(bad)
or
lds
loopne
shl
xchg
push
inc
dec
fisttp
jne
mov
not
xchg
fstp
mov
or
or
add
xor
loope
mov
jl
adc
xchg
push
xor
js
and
xchg
jecxz
pop
test
sub
cdq
push
fsub
dec
cmps
(bad)
ror
dec
rcl
inc
fimul
jmp
inc
xchg
jno
mov
inc
test
xor
test
xchg
scas
cmp
adc
push
fst
dec
inc
cmp
test
pop
xrelease
retf
stc
hlt
xchg
loopne
scas
das
sbb
push
ja
ss
cdq
mov
xchg
mov
mov
rcl
mov
shr
mov
mov
test
pushf
fbstp
jno
call
adc
dec
addr16
cmp
inc
cmp
push
pop
inc
es
out
imul
push
fild
call
or
(bad)
rcl
into
clc
or
lds
mov
test
jo
ret
mov
daa
aas
jg
sbb
into
push
pop
mov
cmovo
mov
adc
mov
fwait
pop
ja
imul
out
std
sar
push
pop
sub
jg
in
xlat
iret
or
loope
push
js
pusha
xchg
scas
fwait
arpl
in
dec
popa
int
xor
repnz
mov
ret
aas
loope
mov
xchg
not
push
mov
leave
inc
dec
shr
xchg
out
cld
mov
in
rcr
fdivp
jle
cmps
mov
mov
xor
adc
inc
push
sub
mov
pop
push
rcl
mov
jb
push
pop
mov
std
push
clc
inc
call
push
outs
adc
icebp
lahf
mov
dec
mov
mov
mov
cmp
movs
and
js
retf
sbb
test
cmps
fld
xor
je
xchg
shl
pop
cwde
mov
out
or
ja
inc
xchg
fdiv
sbb
mov
ret
pop
mov
enter
outs
xor
push
push
jb
fisub
sti
push
mov
mov
out
cwde
mov
inc
or
xchg
rdpmc
sbb
imul
je
fsub
xchg
jp
loop
xor
pushf
inc
mov
popf
add
inc
data16
dec
daa
or
lods
add
xor
jbe
test
mov
ds
int3
pushf
popf
(bad)
push
dec
or
mov
mov
test
fstp
test
mov
lods
mov
jne
test
vpunpcklwd
jg
in
add
popf
add
mov
stos
dec
push
adc
inc
clc
and
push
push
fld
pop
jb
add
ds
sbb
pop
and
pop
repnz
mov
sbb
ins
loopne
xchg
lahf
xchg
sub
pop
mov
rol
outs
jno
push
sub
test
fdivr
inc
xchg
in
pusha
xchg
jle
leave
cmp
test
xchg
lods
mov
test
or
shr
scas
loop
and
jg
cmp
test
hlt
jl
fld
dec
repz
add
jmp
ror
pop
add
movs
mov
dec
repz
in
jmp
sub
cmp
aam
rcl
adc
push
adc
fmulp
push
clc
jp
and
push
mov
cmp
jno
(bad)
fdiv
ret
push
je
stos
jg
pop
sbb
test
aad
pushf
pop
mov
leave
inc
je
repz
xchg
jo
sub
cmp
cmps
inc
dec
adc
xor
mov
imul
imul
scas
mov
into
sahf
adc
in
sar
mul
xchg
or
add
test
dec
test
mov
cmc
iret
adc
xor
mov
sbb
je
stc
dec
push
in
xchg
ficomp
ins
push
or
xor
and
sahf
pop
in
je
(bad)
and
faddp
inc
add
pop
movs
sbb
loopne
into
push
mov
lea
push
jb
sar
adc
repz
adc
mov
fdiv
ret
popa
push
(bad)
cmp
rcl
inc
dec
jne
inc
fs
test
adc
dec
inc
repz
push
test
jg
or
jbe
(bad)
lods
dec
or
ins
mov
in
inc
pusha
out
adc
mov
pusha
push
sbb
pusha
add
push
mov
stos
jle
lahf
cs
lahf
mov
(bad)
mov
fbstp
mov
fldcw
mov
xchg
xor
gs
push
rol
jmp
repnz
(bad)
push
bound
push
shl
stos
mov
pop
jo
xchg
sub
xor
push
jecxz
pop
test
dec
jo
mov
mov
(bad)
call
mov
jecxz
inc
cmp
das
add
jns
dec
mov
outs
out
pop
(bad)
jo
ja
imul
mov
leave
mov
adc
(bad)
int3
es
pop
mov
push
mov
les
push
and
mov
sub
ins
loope
pop
fcomi
push
jb
sbb
mov
or
mov
push
dec
cmp
retf
xlat
add
int3
cmps
pusha
enterw
and
push
sub
sar
xchg
inc
fs
adc
mov
fsub
cld
xor
out
mov
cmps
push
aam
jns
pop
mov
mov
leave
jge
mov
call
inc
imul
jno
shl
adc
data16
inc
fnstenv
jns
lods
adc
out
sbb
mov
cld
sub
cmp
jae
mov
shl
loope
rol
movs
push
ins
repz
mov
test
sub
cmps
lahf
push
xchg
dec
pop
sub
fs
ret
call
dec
leave
add
jnp
or
aam
in
inc
in
icebp
jbe
dec
ins
and
(bad)
adc
cmps
cmps
int
movs
xchg
jb
xor
hlt
scas
xor
cmp
fsubr
push
es
push
pushf
(bad)
retf
mov
push
adc
or
cmp
(bad)
lods
ja
rol
jp
stc
jb
sbb
lods
fwait
jnp
(bad)
aad
xor
push
icebp
jnp
mov
addr16
or
jp
jl
sbb
pop
je
mov
std
xchg
mov
movs
in
cmp
mov
dec
and
(bad)
stos
push
cmp
(bad)
jmp
std
aaa
push
inc
cld
jge
jnp
das
mov
test
(bad)
push
mov
rcr
pop
mov
mov
jb
arpl
mov
cmps
lds
inc
ja
lods
lahf
sbb
lock
mov
push
pavgb
and
xchg
dec
sti
scas
push
add
and
xchg
add
in
imul
test
cmps
jae
iret
scas
xor
nop
mov
imul
cmp
adc
mov
out
mov
or
rol
aad
cdq
pop
inc
mov
mov
lods
movs
or
sub
push
ret
sti
push
lea
jle
pop
ins
in
iret
imul
scas
icebp
adc
je
test
ins
mov
loope
stc
adc
(bad)
xor
jle
enter
jl
xchg
out
stos
mov
loop
popa
scas
ds
and
dec
pop
repnz
inc
xchg
mov
or
sbb
jge
cmps
imul
std
outs
ret
mov
fcmove
push
rcr
daa
add
stc
imul
addr16
xchg
xor
out
xchg
adc
cmp
xchg
sbb
mov
cmp
outs
cdq
dec
adc
pop
pop
xor
sbb
fisubr
aas
fwait
scas
mov
call
inc
loope
pusha
sbb
into
mov
mov
mov
shl
pop
cwde
sub
(bad)
dec
xor
fwait
int3
inc
out
leave
mov
into
xor
ja
pop
inc
adc
jae
fmul
or
imul
sti
aad
aam
jge
fimul
std
sti
inc
xchg
fldcw
rcr
lock
inc
(bad)
pop
push
fcmovu
mov
cmp
pop
sbb
and
mov
jne
xor
dec
lock
hlt
movntps
fistp
cmp
pop
mov
sub
imul
add
stc
jnp
inc
mov
movs
sub
cmp
daa
dec
mov
aad
mov
sbb
push
cmp
in
jo
scas
jmp
mov
push
popa
pop
pop
sahf
ret
jno
jnp
adc
jg
adc
fnsave
lahf
out
lahf
out
mov
dec
push
(bad)
(bad)
daa
out
xchg
fcom
int
xchg
and
imul
clc
out
cmps
jmp
inc
in
add
cmp
in
repz
mov
div
popf
mov
adc
aam
fld
push
loope
int
mov
xor
(bad)
add
mov
inc
push
inc
mov
sbb
jge
fisub
xor
xor
add
sbb
pop
sub
or
fiadd
pop
xchg
push
scas
out
xchg
(bad)
jp
mov
xchg
fwait
mov
lea
jge
cmp
fdivp
add
stos
(bad)
jno
or
in
sub
jecxz
sbb
push
int3
dec
stos
sbb
mov
je
jmp
xor
adc
test
pop
mov
and
cmp
repz
out
xorps
out
mov
and
ins
sbb
mov
arpl
mov
xchg
dec
je
adc
movs
jp
ins
in
cwde
xor
rcr
adc
sub
out
sahf
mov
retf
es
inc
add
outs
rol
je
(bad)
stc
xor
mov
mov
es
out
mov
push
retf
xchg
(bad)
push
add
(bad)
mov
push
fld
lods
dec
outs
je
xor
es
jno
mov
push
in
adc
mov
test
in
shl
popf
hlt
inc
call
jo
cmp
clc
jno
adc
out
add
jno
xor
icebp
push
repnz
test
sub
(bad)
in
shl
rcr
outs
in
inc
fst
pop
dec
pop
mov
shl
inc
lds
call
ins
out
sbb
mov
pop
xchg
add
pop
push
mov
and
mov
push
jno
and
dec
xchg
mov
pop
(bad)
hlt
sbb
push
out
loope
cmp
jne
add
inc
int
clc
mov
ins
jmp
test
or
and
adc
mov
rcl
outs
gs
test
retf
push
and
jmp
push
das
add
inc
in
xor
xchg
dec
jno
push
cmp
xchg
mov
jg
push
leave
(bad)
cdq
cmp
gs
xchg
xchg
or
aad
add
fistp
inc
pop
pop
mov
pusha
xor
push
and
ins
sbb
push
(bad)
push
pop
loop
sbb
sbb
or
cmp
xor
xor
stc
add
cmp
lods
sub
outs
jl
xchg
inc
pushf
ins
sub
aad
fnstenv
daa
repnz
retf
dec
movs
add
cmp
mov
mov
xchg
mov
inc
das
push
imul
in
push
sbb
sbb
mov
dec
aaa
jbe
(bad)
push
pop
enter
add
int3
mov
mov
sbb
mov
std
sbb
xor
out
mov
jns
mov
(bad)
push
clc
pop
fldenv
pop
out
icebp
cwde
mov
test
js
jg
aad
adc
js
stos
dec
pop
add
jmp
mov
inc
clc
sbb
fild
cwde
loop
and
and
xchg
stc
pushf
xor
pop
add
cmps
repz
jg
cwde
and
or
out
pop
adc
or
adc
jge
iret
popa
(bad)
rol
ror
sbb
push
cmps
mov
icebp
push
aam
dec
into
stos
mov
sahf
stc
push
inc
mov
call
xchg
jp
aaa
stos
(bad)
div
add
cdq
(bad)
pop
call
aad
out
lock
xchg
fwait
movs
mov
mov
push
jo
mov
fidivr
pop
add
in
es
mov
or
push
push
call
sar
adc
or
and
fsubr
fs
push
or
mov
sub
push
imul
and
dec
cmp
fs
fldcw
popf
push
dec
aad
add
fbstp
and
imul
mov
mov
test
rcl
xor
jae
mov
xor
dec
cmp
jmp
popa
xchg
cld
sbb
lahf
mov
leave
addr16
enter
push
or
leave
out
add
sub
int
(bad)
(bad)
ret
xlat
je
xchg
add
(bad)
pop
xchg
inc
comiss
movs
jnp
jg
or
scas
imul
out
daa
nop
ja
(bad)
gs
push
or
pushf
(bad)
mov
das
cld
cmc
je
ficomp
xlat
(bad)
xlat
push
es
xor
sub
je
sbb
mov
imul
mov
mov
in
jno
mov
aas
and
jg
clc
in
and
daa
jae
stos
test
pop
cmp
test
pop
fbstp
and
xor
mov
lods
jns
clc
aad
aad
adc
call
test
pop
in
out
inc
(bad)
pop
(bad)
pop
sti
stc
out
in
loopne
cdq
(bad)
int3
in
cdq
mov
daa
loope
add
or
mov
stc
sbb
xchg
movs
xor
adc
mov
cli
shl
lock
in
test
and
jl
pop
push
dec
ficom
fidiv
dec
lds
pop
mov
sbb
call
cmp
call
je
sub
scas
jmp
test
jge
cmp
xor
inc
inc
inc
dec
loope
jne
xor
mov
cmp
mov
out
ja
pop
fisttp
xchg
push
daa
int
cmc
push
cmp
pop
(bad)
jno
inc
pop
sti
mov
push
cmps
dec
leave
call
shr
adc
adc
(bad)
repnz
add
dec
mov
push
aaa
in
dec
and
iret
test
jge
(bad)
pusha
dec
inc
das
mov
in
xchg
fidivr
(bad)
fwait
or
(bad)
push
inc
mov
jns
(bad)
not
sbb
or
push
push
add
les
xchg
xchg
xor
add
push
xchg
mov
ja
loopne
ins
mov
aaa
mov
repnz
sti
int
sbb
test
stos
cmc
mov
sub
mov
ret
out
call
xlat
loop
(bad)
lds
mov
das
mov
aaa
push
jle
inc
aaa
fnstenv
add
movs
add
jne
cmp
mov
inc
cmp
(bad)
xor
call
jb
in
mov
jbe
jp
and
xchg
jge
imul
scas
rcr
in
mov
jle
cwde
push
enter
out
dec
sub
cmp
sar
arpl
mov
out
adc
sahf
xchg
xchg
sub
sbb
pop
jl
in
ins
cmp
xchg
or
loop
cmp
cmp
jmp
push
ds
mov
icebp
and
sbb
push
sbb
dec
(bad)
cs
shr
daa
push
cmps
pop
loopne
xchg
int3
push
fdiv
icebp
ins
ins
ss
xchg
popa
hlt
sub
ds
in
mov
pop
cvtpi2ps
mov
lea
out
and
mov
sar
sar
cmps
push
jns
mov
dec
adc
and
les
push
stos
popa
mov
pop
cs
mov
pop
inc
ss
xor
out
sahf
sbb
test
das
cli
shr
mov
mov
in
pop
ja
xchg
popf
lahf
jl
loopne
mov
dec
into
sub
pop
add
jo
cmp
aad
dec
and
fimul
push
add
jno
lods
mov
pop
movs
mov
hlt
sub
sahf
(bad)
cmps
aaa
adc
loop
dec
out
push
sub
in
mov
mov
scas
push
mov
les
cmp
xor
aaa
imul
retf
sub
movs
sbb
cs
jmp
or
push
cwde
scas
jle
and
adc
test
mov
in
adc
shr
jge
cmp
sbb
in
jbe
ins
push
cli
test
call
loopne
push
adc
sub
loop
ret
inc
cmp
lods
mov
push
sbb
sar
je
jl
sbb
xchg
ret
pop
xchg
iret
sbb
mov
ds
clc
xchg
rep
in
mov
adc
ss
xchg
shl
cld
ret
jge
push
jb
push
pushf
push
mov
pop
sbb
in
dec
sub
gs
inc
pop
push
mov
aas
mov
rcr
and
push
jne
int
cmp
inc
pushf
dec
in
loop
ds
aam
int
push
ss
adc
pop
mov
call
inc
adc
add
mov
pop
rcr
pop
jmp
inc
fsubr
call
sbb
out
sub
xchg
outs
loope
ja
aam
add
ja
rcr
sahf
(bad)
fsubr
pop
adc
mov
test
adc
xchg
ss
push
test
and
stos
pop
test
retf
add
cwde
sbb
add
sahf
rep
inc
out
clc
imul
call
call
arpl
pop
push
sbb
xor
sub
dec
sbb
lds
test
dec
sbb
mov
add
enter
test
jmp
cmc
cs
mov
retf
test
ficomp
rcr
das
xor
cwde
mov
fcomi
mov
fwait
add
pop
sbb
std
das
mov
cld
inc
cmp
dec
xchg
or
fs
ds
mov
or
cmp
xchg
inc
outs
sbb
mov
mov
sub
stc
(bad)
mov
and
or
fcom
ins
xor
lea
or
mov
(bad)
sbb
fwait
ds
sahf
test
retf
neg
jge
fstp
jmp
mov
jle
dec
test
repz
fsubrp
lahf
sub
out
cdq
pop
inc
call
inc
aam
ds
cdq
lods
fistp
in
lea
pop
aam
sbb
es
int3
call
jle
sub
fwait
jmp
(bad)
fdiv
jae
cmp
xor
mov
adc
and
fwait
xchg
adc
and
dec
fmul
addr16
adc
jle
ss
(bad)
fwait
jno
sti
dec
pop
jge
cmp
dec
jp
(bad)
dec
ret
ss
xor
add
movs
repnz
jo
jle
xor
jmp
pop
inc
mov
(bad)
imul
add
into
add
sub
ret
std
adc
(bad)
xchg
ret
and
cli
push
jno
or
jns
(bad)
jl
xor
aaa
and
jp
iret
push
inc
aaa
jae
push
cwde
test
cs
arpl
test
dec
pop
xchg
cmp
data16
fld
movs
shr
mov
mov
push
jge
aam
out
pop
jmp
mov
rcl
loop
xchg
dec
mov
fisttp
aad
stc
sbb
fisttp
mov
je
mov
xchg
sbb
cmp
or
cmps
jl
(bad)
cdq
scas
sbb
xlat
mov
cmc
cmp
adc
inc
bound
push
sbb
push
adc
jnp
lods
cwde
pop
xor
imul
cmp
dec
mov
mov
jbe
add
scas
vpcomd
mov
adc
add
mov
xor
adc
test
cmp
nop
imul
jle
(bad)
sub
or
pop
adc
xor
out
jbe
aad
addr16
(bad)
repnz
inc
out
jmp
gs
cmps
add
test
(bad)
push
xchg
loopne
fisttp
mov
scas
movs
sub
xor
lock
arpl
cdq
sar
test
push
sbb
sar
mov
push
and
mov
xor
popa
jae
cmp
dec
xchg
test
into
mov
imul
cmp
rcr
dec
sbb
test
mov
arpl
mov
(bad)
jmp
mov
jo
cs
fisub
arpl
fwait
push
in
mov
pop
ja
xchg
pusha
dec
dec
mov
inc
dec
jae
push
fiadd
xor
or
adc
adc
mul
jne
pop
or
pop
int3
(bad)
jmp
jl
out
pop
dec
adc
lods
rcr
fstp
push
jp
or
push
ficomp
push
jmp
hlt
sbb
mov
movs
cli
mov
jae
nop
pop
(bad)
in
ins
imul
fidivr
sub
fnstsw
jo
xor
xchg
jmp
sub
pop
and
outs
enter
pop
add
jecxz
in
cwde
pop
mov
les
test
cs
es
jmp
pop
xlat
mov
and
test
pop
test
xchg
mov
fs
out
fcmove
push
xor
xlat
aas
mov
inc
cmp
sub
out
outs
in
or
popf
rol
in
adc
cli
sub
mov
loope
ins
or
dec
add
data16
dec
mul
repnz
jecxz
(bad)
pop
outs
ins
mov
je
call
mov
add
fldenv
push
push
retf
out
pop
pusha
inc
popf
mov
cmps
imul
fsub
mov
cmps
hlt
test
pop
pop
pop
lock
cmp
inc
add
inc
mov
cmp
sahf
dec
rcr
adc
out
fmul
fisub
or
nop
mov
fimul
ficom
xor
out
dec
(bad)
pop
and
mov
push
cs
retf
pusha
(bad)
cmps
mov
mov
xor
sbb
dec
pop
pusha
sub
or
push
xchg
mov
cld
cmc
icebp
xor
dec
lock
imul
sub
mov
cwde
xor
dec
out
dec
jge
je
push
push
shl
mov
push
cmp
outs
lods
mov
mov
inc
and
mov
push
std
xchg
fbstp
ins
dec
fmul
fs
jno
das
pop
aad
leave
mov
cmp
sbb
push
xchg
push
xor
pop
xor
mov
xor
test
sbb
ds
test
mov
inc
jmp
ins
pusha
pop
fnsave
cmp
cmps
pop
push
mov
(bad)
xchg
clc
outs
(bad)
cmp
sub
fs
stos
or
in
imul
mov
dec
sar
cmp
pop
shl
mov
dec
sar
push
movs
mov
jno
pop
cmp
jno
sbb
rcr
dec
in
fcom
mov
mov
in
and
mov
xchg
dec
ins
das
adc
xor
lahf
test
test
pop
in
mov
scas
imul
call
fsub
mov
gs
and
enter
std
cwde
lods
or
pop
out
cmc
mov
mov
jbe
loope
mov
dec
call
fidivr
cmp
dec
jo
idiv
unpcklps
mov
mov
shr
jge
ss
rcl
(bad)
addr16
mov
or
dec
div
xchg
and
cmps
jnp
ins
or
out
rcr
gs
hlt
sub
xchg
and
into
pop
outs
rol
cli
mov
lahf
ftst
pop
call
adc
iret
xchg
test
rol
sub
test
fwait
outs
push
and
arpl
inc
or
cmps
inc
test
ret
dec
mov
retf
cmp
movs
jae
inc
cmp
push
je
(bad)
shl
or
leave
bound
out
test
shr
xchg
sub
out
hlt
movs
pop
rcr
xchg
fs
(bad)
dec
hlt
mov
inc
cmp
pop
adc
lea
(bad)
call
int
shl
out
dec
nop
jmp
xchg
mov
sbb
or
sbb
jbe
mov
mov
and
pop
dec
js
das
test
push
shr
leave
and
int3
xchg
daa
add
test
(bad)
jb
sbb
and
cli
cwde
aam
push
xchg
pop
aaa
xchg
adc
push
shl
nop
out
popf
retf
jae
(bad)
ret
mov
data16
and
addr16
push
cmp
inc
mov
test
inc
leave
hlt
cmp
pop
push
es
xchg
fnsave
inc
loope
cmps
lods
mov
or
xchg
inc
(bad)
push
retf
cli
mov
rcl
inc
xor
ror
fs
sub
outs
leave
inc
outs
call
inc
(bad)
arpl
loope
sbb
dec
sbb
and
or
or
inc
sti
adc
xor
jmp
cdq
arpl
fs
or
out
sbb
xor
les
and
jns
cmp
jmp
jmp
adc
mov
jmp
or
inc
in
dec
aad
ret
sub
xlat
(bad)
imul
mov
cmp
xchg
push
push
cmp
pop
daa
xchg
retf
shr
sub
xor
fst
test
sti
daa
xor
mov
gs
dec
or
or
sbb
add
ret
cmp
cld
call
pusha
inc
aas
push
cmp
jns
lock
push
fsub
adc
dec
(bad)
and
(bad)
in
aam
loopne
jp
dec
data16
jne
push
js
popf
sub
jo
pop
inc
sbb
mov
mov
pushf
(bad)
pop
ja
cmp
fisubr
xlat
out
cmp
cmp
ja
fs
in
call
pushf
movs
pop
sti
ret
and
jle
cmova
push
pop
jnp
bound
jmp
xchg
push
fisttp
dec
fsub
mov
dec
dec
mov
rcr
jbe
dec
aam
mov
retf
out
mov
adc
push
gs
or
fsub
aam
mov
xor
push
jae
cs
fisttp
call
jb
int
(bad)
jmp
out
fwait
jb
fisttp
fild
clc
mov
pop
popa
movs
stos
mov
out
jg
out
in
cmps
xchg
push
xor
mov
popa
jge
or
es
test
dec
jno
loopne
in
fisttp
add
rcr
(bad)
xchg
pop
daa
or
arpl
cmc
and
aam
lds
stos
aad
add
pop
mov
enter
mov
push
push
cmp
mov
ss
gs
push
(bad)
call
mov
je
add
or
(bad)
jle
fidiv
and
push
fsub
stc
ds
sti
xchg
ins
out
xor
mov
dec
out
and
in
pop
imul
inc
inc
aad
rcl
inc
addr16
imul
jl
popa
fmul
jp
pop
int
test
(bad)
mov
jno
pushf
int3
adc
inc
popf
cvtpi2ps
lahf
pop
aas
pushf
add
gs
lea
movs
mov
shl
xchg
cmp
popa
mov
test
xchg
je
fiadd
push
jl
push
sti
stos
jbe
sbb
pusha
sub
jecxz
(bad)
adc
lahf
xor
jg
xchg
jge
jp
xor
and
int
inc
xchg
movs
cmps
nop
(bad)
or
das
adc
xor
push
and
rcr
and
pop
dec
mov
push
cmovns
sbb
lds
push
fld
cmp
pop
sbb
jae
xchg
fwait
iret
push
push
cmp
out
(bad)
cmps
and
ret
cmc
adc
lds
in
and
inc
pop
push
ins
dec
jmp
iret
mov
adc
into
xlat
cs
and
or
lods
xor
adc
mov
leave
arpl
pushf
adc
push
mul
add
sub
pop
xchg
push
mov
push
dec
mov
retf
gs
fisub
add
addr16
test
out
jnp
loopne
lea
dec
inc
ficomp
cld
jns
sub
popa
pop
adc
sahf
or
or
pusha
test
mov
pop
test
jns
call
mov
pop
shl
sub
mov
and
adc
jno
cli
adc
pop
push
int3
mov
test
sub
lea
push
pop
and
fnsave
rol
mul
mov
mov
call
shr
in
dec
cmp
xor
jmp
data16
push
test
loopne
ja
or
sbb
lods
mov
int
push
xchg
mov
lahf
sbb
mov
jl
scas
jae
dec
cdq
out
inc
cmp
icebp
lods
jae
retf
rcr
repz
outs
dec
clc
stc
and
add
fs
loope
jmp
call
xchg
xchg
xor
sbb
or
add
pusha
fsub
stc
pop
stos
sbb
loop
adc
enter
stos
hlt
mov
les
push
arpl
mov
enter
daa
(bad)
out
and
(bad)
jge
out
cmps
mov
(bad)
call
jg
sub
cmp
cmp
pushf
cmp
retf
cmp
cmp
jns
fs
mov
mov
lods
mov
aas
cwde
sbb
xor
dec
mov
fdivr
int
rcl
ret
dec
xor
retf
cdq
cmp
fadd
jno
or
shl
mov
in
lods
jns
or
adc
jl
cwde
dec
add
dec
adc
pop
test
mov
loope
addr16
out
mov
adc
push
leave
stc
sahf
push
mov
jb
jb
pop
ins
ja
xor
test
aam
lock
arpl
enter
pop
call
loope
inc
enter
fwait
and
and
adc
int
inc
sub
test
stos
in
sub
shl
or
jnp
or
push
ficom
mov
mov
neg
inc
lods
ja
mov
data16
mov
and
xor
arpl
sbb
mov
pop
add
mov
sbb
mov
sub
fdiv
jp
cmp
out
pop
leave
push
sub
push
xchg
mov
icebp
xor
arpl
not
push
leave
jbe
sar
imul
adc
cmp
and
pop
jo
dec
and
inc
ror
add
dec
jnp
loope
pop
pop
aaa
mov
jl
aam
mov
into
jle
movs
sahf
data16
inc
(bad)
jno
aam
dec
cdq
push
push
xor
jmp
sti
icebp
sar
inc
pop
mov
pop
sbb
cmc
pusha
adc
stos
sub
mov
cwde
mov
sbb
daa
int3
sbb
sub
dec
fstp
push
mov
add
loope
push
ja
mov
imul
iret
call
mov
mov
xchg
mov
movs
xor
ss
xchg
sbb
sbb
adc
icebp
arpl
stos
mov
div
push
in
out
fst
mov
cmps
and
(bad)
(bad)
mov
pop
div
xchg
cmps
sar
jg
dec
sti
iret
das
int3
ds
cmp
pop
adc
push
fs
xchg
jl
rol
das
add
or
dec
jecxz
mov
cmp
(bad)
jg
dec
mov
icebp
add
mov
les
dec
cmp
inc
loop
jge
and
xchg
btr
fs
fucomi
dec
or
pop
call
test
sub
ins
pop
fldenv
mov
je
mov
and
pop
add
cmovno
fistp
leave
push
cmc
push
xor
aam
cdq
mov
stos
sti
xor
add
sub
lahf
repz
push
cmp
xchg
xchg
(bad)
pop
popf
mov
jns
mov
bound
sub
pop
daa
cmp
ss
out
retf
mov
ins
out
add
xor
and
loop
inc
dec
cmps
in
leave
mov
outs
repnz
in
test
movs
xchg
test
xor
xor
repz
mov
pop
neg
mov
hlt
cmps
inc
push
leave
test
pushf
jle
pop
fisub
(bad)
mov
cmp
xchg
mov
xor
inc
inc
xchg
push
(bad)
int
repz
std
(bad)
push
call
cs
push
daa
movs
data16
xor
(bad)
sbb
jnp
addr16
mov
inc
dec
data16
push
dec
rol
adc
sub
lock
int3
or
fcom
pop
xchg
push
div
test
enter
push
cmp
cmps
jmp
mov
movs
aaa
dec
cmps
mov
int3
mov
jmp
mov
jae
sbb
dec
pop
pop
pop
bound
gs
mov
adc
adc
cwde
seto
inc
push
mov
add
retf
adc
cmp
inc
movs
jbe
pop
mov
imul
jne
cmp
cmps
pop
test
ficom
scas
cwde
ja
loopne
pop
and
imul
xchg
sub
add
jmp
mov
jo
sub
inc
jmp
xor
jbe
dec
pop
push
fistp
leave
add
jns
jno
pusha
pop
mov
les
mov
sbb
jmp
mov
out
cmps
clc
xchg
jnp
ss
pushf
inc
fidivr
sahf
pop
fadd
shl
pop
test
dec
in
or
inc
mov
mov
mov
or
dec
xchg
addr16
push
mov
jae
loop
cld
jno
push
mov
cs
inc
mov
shl
sbb
cmp
(bad)
push
jns
xchg
div
cmp
cs
call
(bad)
fidiv
cli
bound
and
arpl
mov
(bad)
pop
push
inc
adc
(bad)
es
and
stos
dec
repz
ror
push
jne
popa
call
aam
test
adc
mov
mov
hlt
popf
fucomip
xlat
xchg
popf
ja
push
cmp
jge
add
jbe
mov
inc
nop
in
les
sbb
mov
mov
sub
inc
mov
mov
imul
pop
lds
xchg
rcl
imul
rcl
fdiv
in
push
xor
pop
cmps
movs
fimul
and
xchg
and
dec
or
icebp
xor
mov
aam
inc
fwait
nop
mov
mov
or
pushf
call
(bad)
loope
shr
ret
jb
dec
mov
mov
movs
mov
add
xchg
sub
les
repz
icebp
pusha
mov
ins
(bad)
fimul
movs
and
mov
cmp
cwde
inc
(bad)
and
jle
xor
lahf
movs
jo
adc
xor
mov
stos
out
xchg
jno
ds
jmp
enter
jo
out
clc
sub
pop
push
mov
mov
and
std
ss
pop
mov
pop
ret
sar
xchg
adc
jbe
sub
push
mov
fsub
rcl
cmp
sbb
jmp
dec
mov
cmp
push
stos
arpl
and
aam
sbb
and
cmp
or
inc
repnz
cs
stos
std
fbstp
lods
ss
aad
mov
sbb
int
jg
inc
sti
les
into
cli
and
mov
sbb
lods
add
jb
add
dec
cmp
sbb
push
aad
fidivr
or
push
jnp
add
jle
mov
adc
and
push
and
mov
aad
push
cmps
test
loope
inc
cmp
xor
retf
and
iret
and
sbb
mov
mov
and
mov
test
cmp
sbb
bound
stos
js
jle
pop
adc
(bad)
xor
inc
fwait
pop
fucomi
das
arpl
jle
fmul
fadd
dec
fisttp
xor
enter
int
mov
inc
in
loope
push
and
fsub
in
sbb
push
setno
push
and
mov
shl
pop
jmp
push
retf
inc
inc
adc
out
xchg
inc
fwait
clc
pop
jo
movs
dec
sub
pusha
jp
and
and
pop
adc
fisubr
and
cld
shr
(bad)
pop
std
call
and
dec
cmps
push
jle
jl
loopne
sti
and
pop
xchg
xchg
inc
xchg
sub
mov
dec
pop
inc
or
les
push
push
retf
xor
dec
mov
jno
xchg
sti
popa
(bad)
mov
mov
cmp
in
mov
shr
(bad)
out
pop
mov
add
push
jne
pusha
cmp
movs
push
inc
daa
int3
add
jmp
call
pop
jne
pop
les
push
mov
rcr
xlat
push
dec
jnp
neg
sub
jns
mov
pop
into
pop
lock
xor
mov
jp
fmulp
cmps
and
aam
mov
cmp
push
push
mov
mov
into
movs
or
mov
and
dec
push
and
pop
mov
repz
mov
call
jae
lea
lds
sahf
jbe
dec
ret
mov
les
loope
lds
lods
push
add
fsub
fs
test
pop
arpl
iret
xchg
jmp
push
adc
ja
repnz
nop
cwde
outs
pusha
sbb
sub
shl
fidivr
dec
daa
or
cmp
test
call
pop
inc
nop
push
addr16
in
sub
lock
lds
retf
dec
and
test
clc
into
ror
sub
nop
jge
push
dec
dec
and
test
ret
fiadd
cli
in
retf
and
cmc
jns
icebp
jecxz
xor
push
cs
xor
xchg
xor
xchg
mov
scas
sub
jmp
mov
xor
dec
cmp
in
into
dec
retf
iret
lsl
dec
lds
cmc
push
push
xchg
(bad)
aad
xor
ins
push
jb
les
add
sbb
pop
dec
and
fs
and
scas
loope
out
lods
les
outs
gs
jmp
mov
out
mov
rcr
out
and
dec
ret
cli
shl
enter
jns
cmp
pop
mul
fist
int3
loopne
div
xor
adc
adc
add
jns
xor
retw
adc
jo
scas
push
inc
pop
and
jmp
addr16
sbb
mov
jg
cmp
inc
mov
out
push
loop
pop
inc
push
sub
dec
scas
stc
into
push
sbb
jmp
sbb
jae
pushf
push
(bad)
jle
mov
out
js
add
mov
int3
iret
loope
add
or
fst
in
xchg
fcom
mov
pop
sbb
mov
cmp
call
js
mov
lock
inc
jmp
inc
xchg
ins
and
mov
scas
inc
sub
mov
(bad)
xchg
retf
mov
push
adc
retf
push
push
loop
rol
cmp
mov
std
imul
iret
cli
cmp
cs
add
rcl
push
mov
push
ret
adc
or
test
mov
fbld
pop
ss
scas
xor
mov
fsubr
sbb
ins
adc
sbb
out
push
mov
scas
fmul
xlat
dec
jg
aaa
mov
fs
hlt
outs
pop
pop
xor
rcl
scas
movs
iret
mov
jmp
push
cdq
jns
mov
add
add
je
retf
xor
adc
push
data16
out
jmp
push
bound
repnz
xchg
push
xchg
add
inc
mov
lea
sbb
arpl
inc
or
sbb
inc
test
dec
add
retf
inc
cmc
push
stc
add
jb
jo
out
jo
pushf
retf
cmp
and
adc
lods
add
shr
add
inc
add
mov
fstp
(bad)
and
pop
repz
outs
les
nop
pop
xchg
stos
into
pop
jae
jmp
call
cmps
mov
lock
mov
xchg
dec
inc
add
xor
xchg
sbb
fadd
lahf
sbb
sub
loope
mov
ror
test
cld
imul
fxch
loope
shl
pop
pop
or
movd
jge
pushf
imul
test
jmp
xchg
and
or
push
mov
jnp
or
add
sahf
pop
ror
cmps
fld
inc
push
inc
adc
fld
dec
fisubr
adc
fisubr
cmp
or
sub
add
adc
xlat
and
fs
inc
inc
daa
mov
int3
lea
inc
scas
out
xchg
push
dec
mov
xchg
loope
mov
dec
cmps
xchg
or
fsubr
(bad)
in
xchg
enter
mov
lods
mov
aaa
cmp
data16
inc
sub
or
or
pushf
jge
rol
test
inc
cmps
add
sub
popf
jecxz
push
mov
daa
ds
sub
sbb
(bad)
jmp
pop
xchg
inc
out
cdq
xchg
movs
add
jmp
pop
fistp
mov
cmp
push
fldenv
sub
and
pop
xlat
or
(bad)
and
mov
mov
or
xor
pop
rol
mov
(bad)
xor
(bad)
mov
sahf
sbb
add
adc
inc
dec
cmp
(bad)
mov
movs
sbb
mov
add
pop
sbb
adc
loope
dec
and
mov
jnp
(bad)
cmps
inc
xchg
pop
dec
push
(bad)
bound
mov
inc
pop
mov
in
fxch
icebp
sub
mov
cmp
mov
neg
jl
bound
aaa
mov
test
fs
lahf
fs
cs
push
mov
pop
mov
test
jae
cmp
aas
jb
mov
arpl
inc
sbb
hlt
push
loopne
jne
out
test
xlat
retf
bound
mov
pop
mov
sbb
je
(bad)
(bad)
test
jb
fcomp
cmp
imul
sbb
movs
mov
inc
std
add
enter
scas
sbb
pop
push
stos
(bad)
and
add
lahf
mov
pop
in
(bad)
imul
test
js
add
push
scas
(bad)
jecxz
jns
lahf
mov
jmp
or
es
in
or
inc
pop
fsubr
xchg
mov
inc
jns
or
enter
lock
mov
into
mov
out
push
push
sub
push
xchg
pop
std
cmp
jo
out
add
js
imul
inc
cmp
out
das
lea
inc
arpl
jmp
push
scas
sub
push
inc
leave
cdq
scas
mov
jge
pop
out
mov
xchg
adc
popa
mov
pop
retf
add
mov
mov
inc
call
push
mov
rol
repz
pinsrw
or
movs
adc
jne
mov
dec
in
das
mov
mov
cmp
dec
mov
mov
movs
fwait
mov
mov
ds
sub
jl
or
cdq
inc
mov
add
or
ret
shl
cmp
add
mov
(bad)
jbe
sbb
test
loope
ja
(bad)
push
rol
jnp
iret
loopne
and
or
sbb
adc
push
pop
ret
sbb
add
je
int
call
fucomip
push
jnp
fwait
push
cmp
pop
inc
and
ret
cmp
cmp
call
sbb
jno
leave
xchg
push
fst
mov
sub
(bad)
and
adc
mov
or
adc
pusha
call
inc
and
call
cmps
aad
xchg
clc
sbb
call
xchg
out
mov
ins
mov
push
in
inc
mov
mov
push
retf
mov
movs
pop
rcl
push
arpl
repz
jl
dec
repnz
leave
adc
in
mov
rol
popa
shl
fadd
ret
inc
das
mov
(bad)
lock
ficom
stos
mov
jge
test
sbb
arpl
aam
cwde
add
mov
int3
or
xlat
sub
adc
and
mov
popa
pop
mov
sub
cmp
push
iret
and
adc
test
ss
outs
jbe
push
mov
lock
inc
cmp
sbb
push
and
jmp
jecxz
mov
push
mov
cld
repnz
cld
dec
cmp
fsubr
fistp
lahf
push
retf
cmps
ret
xlat
and
nop
dec
loope
shl
int3
stos
sbb
mov
mov
(bad)
xlat
pusha
sbb
cwde
pop
mov
gs
fsub
mov
sub
fidiv
mov
cmp
adc
icebp
es
fisttp
mov
test
lahf
push
add
mul
scas
out
movs
or
xchg
out
push
sub
sahf
in
scas
aas
xchg
ss
mov
(bad)
dec
mov
std
sbb
xchg
and
pop
inc
cmp
mov
mov
push
add
call
popa
outs
push
cmc
retf
icebp
inc
(bad)
pop
ror
or
shl
ds
xchg
outs
adc
and
cmp
das
adc
xor
push
lahf
repnz
rol
lds
retf
add
or
popa
xor
imul
dec
dec
das
jp
mov
xchg
sbb
sub
mov
xor
sub
das
jmp
inc
iret
test
clc
jnp
fcom
mov
jmp
das
pop
mov
(bad)
in
repnz
xor
xchg
push
mov
push
mov
push
or
dec
jbe
ret
jg
adc
mov
add
xchg
mov
push
imul
outs
and
push
inc
mov
stos
sbb
repz
jae
scas
and
ret
adc
adc
pop
ds
sti
cld
pushf
sbb
pop
cmp
bound
jg
xchg
dec
mov
stos
xor
mul
cmp
adc
xor
ror
je
(bad)
sub
loope
or
inc
int3
xchg
mov
pop
bnd
cdq
scas
lods
mov
test
sub
test
rcr
dec
repz
ret
retf
ret
pusha
lds
jne
fdivr
lods
add
mov
add
pop
lods
cs
jg
fisub
xor
int3
push
cmps
sub
add
mov
dec
pusha
sbb
ins
je
movs
add
int
test
push
rol
fs
retf
inc
loopne
gs
mov
mov
in
cli
or
ins
inc
xlat
scas
add
jbe
enter
popa
(bad)
arpl
ja
inc
movs
fild
push
pushf
js
push
xchg
stc
fwait
and
push
call
es
fldcw
repnz
sar
outs
ja
dec
cmps
dec
mov
jmp
mov
sub
cmp
mov
and
mov
xor
movs
or
mov
jmp
sbb
add
or
outs
mov
mov
fs
ins
push
ret
hlt
pop
and
sbb
(bad)
iret
ret
and
test
jecxz
retf
out
mov
and
arpl
add
xor
push
enter
aam
in
lea
xchg
mov
outs
xchg
icebp
add
fdiv
pop
dec
movs
mov
je
mov
inc
movs
int3
mov
adc
jl
lods
fs
in
push
lods
pop
sub
jno
inc
mov
and
pushf
mov
aaa
ja
push
mov
sub
addr16
sub
adc
popa
jl
iret
stos
stc
jno
sub
xchg
mov
stos
jnp
loop
outs
and
repnz
add
xor
sbb
push
(bad)
mov
inc
mov
xor
leave
pop
dec
movs
xlat
xor
in
cmp
cmps
sbb
aad
jecxz
fnstenv
xlat
sub
fidivr
sbb
cmp
cmp
enter
add
or
inc
shl
je
push
popa
test
mov
nop
out
push
(bad)
or
arpl
repz
pop
movs
jb
jno
sbb
scas
test
adc
mov
std
inc
lods
pop
pop
in
call
xor
js
ret
pop
push
inc
xchg
pop
cmps
aaa
sub
inc
jno
pop
outs
rol
adc
jo
jns
pinsrw
mov
icebp
xor
loope
add
imul
and
iret
jle
jb
dec
fnsave
inc
push
inc
add
loopne
cwde
adc
gs
loop
and
cmps
stos
imul
ficomp
es
mov
outs
cmp
mov
jg
or
mov
cli
dec
mov
cmps
das
shl
pop
mov
cmp
mov
lock
out
inc
es
mov
outs
lds
mov
(bad)
sbb
(bad)
ficomp
ss
retf
fstp
lds
outs
icebp
sbb
jae
jle
push
popa
add
imul
inc
adc
push
std
ret
pop
jle
sahf
mov
mov
xchg
in
xchg
xor
mov
mov
lea
test
xor
jmp
jns
and
jmp
or
mov
ins
xchg
mov
pop
jmp
gs
sar
jmp
mov
cmp
call
movs
jo
pop
lock
sbb
out
pusha
xor
sub
dec
jecxz
aas
inc
mov
mov
in
pop
sub
jmp
mov
je
jne
push
outs
pushf
stc
cmp
push
or
clc
je
mov
lahf
loope
push
fs
adc
int
mov
rcl
leave
mov
jnp
(bad)
mov
inc
mov
retf
inc
push
xchg
mov
gs
and
mov
xor
ror
jle
test
loop
dec
ret
inc
cmp
xor
inc
xor
int
cmp
bswap
inc
fucomi
cmp
in
(bad)
loopne
mul
out
pop
jno
(bad)
sti
ror
xchg
pop
xchg
mov
iret
jb
xchg
mov
xchg
mov
adc
cs
cmp
sub
outs
mov
pop
addr16
lods
or
push
and
push
inc
cld
inc
sbb
sti
pop
inc
add
(bad)
call
lods
or
cmp
mov
pop
in
pop
mov
push
loopne
leave
dec
cmps
or
inc
and
mov
mov
jmp
jb
stos
adc
shl
mov
add
and
mov
ins
adc
punpckhbw
jno
pusha
xor
inc
rcl
dec
adc
or
jle
arpl
add
mov
es
dec
sbb
outs
jmp
stc
sub
and
jne
add
sti
aaa
push
jle
stc
scas
sub
idiv
pop
neg
and
inc
sub
retf
test
sub
dec
out
or
stc
imul
pushf
pop
cmp
xor
or
fimul
fidiv
cmc
lock
(bad)
cwde
push
pop
scas
mov
in
adc
shl
pop
pop
loop
xor
(bad)
cmp
push
sub
mov
ins
pop
call
imul
leave
mov
outs
push
test
xchg
pop
xor
aas
inc
out
xor
cmp
dec
test
mov
mov
sti
les
add
xor
mov
add
adc
sbb
out
icebp
leave
sar
cmp
xchg
rol
xlat
cmp
test
or
movs
call
push
mov
hlt
xchg
dec
and
js
movs
sbb
add
(bad)
push
sahf
rep
jge
adc
outs
cmp
jge
pop
jecxz
lds
mov
aad
adc
add
outs
mov
pop
jb
icebp
add
xor
int
outs
xchg
add
test
sbb
jbe
in
leave
(bad)
repz
jp
ror
mov
xor
mov
ins
inc
pop
jb
mov
cld
ficomp
cmp
xchg
pushf
push
std
or
inc
mov
inc
cmp
and
and
inc
(bad)
pusha
jmp
int
imul
cdq
enter
retf
or
rcl
pop
cmps
add
mov
adc
and
add
lds
pop
mov
icebp
popf
lea
rcl
jae
sub
cmp
shl
sti
mov
push
imul
jns
cld
and
jns
or
(bad)
call
idiv
adc
loope
cmp
cld
fld1
mov
clc
xor
pop
pusha
(bad)
lods
scas
xchg
mov
mov
jnp
inc
in
sbb
enter
jnp
dec
movs
bound
leave
pop
add
adc
dec
imul
gs
data16
dec
pop
xchg
xchg
xchg
leave
popf
xchg
inc
sub
lahf
scas
je
or
and
add
push
inc
inc
sahf
and
pop
rol
adc
call
push
jns
xchg
inc
ret
cld
test
mov
sti
sbb
xor
shl
lahf
ds
lds
cmp
sbb
cs
dec
adc
or
sbb
icebp
xchg
mov
into
inc
(bad)
xor
mov
pop
jle
in
cmp
test
in
jmp
mov
fisubr
leave
stos
push
(bad)
in
aad
mov
fnsave
(bad)
sbb
mov
in
mov
movs
(bad)
repnz
lods
cmc
hlt
jmp
xor
jo
cmp
(bad)
cmp
loop
add
icebp
lea
outs
cdq
mov
sti
icebp
xchg
sub
hlt
sbb
jbe
frstor
stc
pop
test
pop
dec
neg
cmp
inc
and
sbb
xchg
and
hlt
sti
and
(bad)
std
ins
int3
dec
cmc
jmp
out
sub
jno
loop
test
sbb
sbb
sbb
mov
cmc
aam
cmp
bnd
push
out
sbb
out
into
mov
shl
push
adc
popf
lods
push
repnz
or
shl
cmp
shl
ja
sbb
stos
shl
pushf
ja
sbb
lahf
es
mov
mov
push
shl
xchg
mov
add
out
jne
and
fild
xor
jl
fld
imul
xor
add
outs
hlt
lods
in
(bad)
popa
jge
into
sbb
mov
cli
(bad)
push
loope
inc
dec
cmps
test
daa
popf
dec
jno
cmp
xchg
lds
dec
push
sub
daa
xor
sti
clc
mul
and
std
das
imul
jle
inc
sbb
mov
loop
inc
pop
imul
(bad)
mov
mov
mov
push
rcl
leave
dec
mov
cli
pop
sbb
mov
lds
mov
sti
inc
aas
jae
sbb
stos
sbb
push
jbe
mov
sub
aad
xchg
xchg
push
push
cld
sub
int3
mov
dec
(bad)
jmp
push
mov
jbe
dec
loopne
mov
pusha
sbb
fst
mov
push
adc
push
or
or
and
(bad)
shr
xchg
sub
call
pop
mov
push
shl
ss
bound
add
dec
loopne
pop
sbb
shl
clc
inc
add
push
inc
ins
aam
cmc
push
rcl
ret
and
mov
mov
(bad)
add
(bad)
jno
or
mov
cs
cs
xchg
adc
xor
int3
sub
jmp
in
adc
xor
lea
loopne
dec
movs
sub
xor
adc
lods
inc
movs
pop
inc
lock
xchg
pop
jae
dec
loope
push
outs
sub
test
imul
cmp
pop
jo
sub
(bad)
clc
and
sahf
out
mov
sbb
inc
loop
nop
(bad)
cli
and
xchg
push
and
stos
shl
arpl
mov
ret
scas
retf
test
or
(bad)
or
dec
fidiv
in
loop
js
jnp
xchg
test
test
in
add
mov
xor
sti
mov
test
add
pop
mov
retf
in
push
jo
xchg
(bad)
clc
mov
clc
and
fisttp
adc
arpl
jle
in
inc
leave
(bad)
cmp
jb
mov
and
push
mov
lods
sbb
mov
pushf
mov
(bad)
out
or
scas
clc
dec
dec
cmp
xlat
imul
dec
fstp
inc
jb
leave
sbb
out
add
(bad)
cmp
fnstenv
cmc
or
add
and
adc
add
jle
and
cmps
dec
dec
movs
and
jne
fdiv
xor
cld
outs
inc
mov
js
push
dec
test
rcl
mov
pop
xchg
sbb
rcl
loop
jbe
mov
mov
jmp
pop
dec
jle
jmp
xchg
xor
stos
sti
daa
and
inc
pavgb
adc
movs
scas
lock
push
mov
pop
aaa
sar
xor
fdiv
lds
scas
and
and
add
icebp
xor
dec
stos
mov
pusha
adc
jbe
inc
jl
addr16
jno
outs
(bad)
sbb
js
sbb
sbb
push
pop
test
push
mov
call
push
std
sahf
int3
fwait
mov
sbb
push
or
xor
mov
fwait
jp
sub
add
fcomp
and
or
es
dec
xor
jbe
and
jmp
add
fcmovb
pop
cs
movs
icebp
std
jmp
inc
mov
and
fisubr
icebp
out
dec
ss
jmp
pop
sahf
xchg
inc
js
sub
int
fwait
sbb
gs
mov
ret
xor
mov
movs
(bad)
in
add
or
movs
aas
push
sbb
push
inc
jg
xchg
add
out
sub
add
ins
jp
arpl
sub
jecxz
sub
dec
dec
in
fidivr
aas
and
dec
pop
pop
loop
adc
pop
inc
mov
retf
lds
setns
test
imul
mov
add
fmul
test
inc
retf
mov
jg
xor
fdivr
cmp
std
cmp
rcr
add
aas
fld
push
sub
mov
and
pop
and
cld
add
add
fldenv
push
into
and
mov
sar
icebp
xchg
mov
rcl
jp
xor
push
ins
arpl
push
mov
dec
inc
xchg
fwait
inc
movs
push
retf
inc
cmp
xchg
mov
dec
lock
scas
loopne
repnz
fsub
mov
xor
mov
ret
inc
sbb
mov
push
fwait
and
jne
jmp
cmp
pop
or
mov
dec
daa
sub
movs
sbb
or
dec
rcr
fdiv
sub
mov
scas
stos
add
clc
add
popa
mov
push
jge
repnz
push
outs
jns
movs
xchg
mov
cmp
sub
ds
mov
ret
mov
retf
sub
(bad)
sbb
ror
sbb
rol
inc
cmps
es
test
pop
popa
ds
sahf
adc
pop
loope
sar
vpunpcklqdq
and
inc
scas
add
lock
and
pop
pop
test
pop
std
inc
inc
add
jnp
jmp
dec
lea
frstor
jb
es
dec
adc
addr16
movs
jmp
xchg
xor
pcmpgtw
ja
cmps
push
aas
push
cmp
mov
(bad)
cdq
cwde
dec
cmp
jg
cmp
adc
add
dec
pop
add
aas
dec
mov
loop
adc
cmp
cmps
icebp
ins
mov
test
add
and
and
pop
pop
adc
scas
into
ds
sar
fbld
mov
es
jmp
and
dec
jbe
or
jge
popa
cmps
xor
mov
dec
sub
fiadd
add
mov
aad
inc
lods
pop
inc
jg
dec
pop
cmovge
adc
jecxz
sbb
test
sub
mul
(bad)
fidiv
push
lods
mov
add
popf
dec
lea
loope
outs
or
sbb
push
jne
push
popf
mov
sub
jns
repz
fild
lea
adc
scas
in
call
adc
iret
xchg
shr
ins
aam
adc
mov
test
inc
dec
or
je
imul
repnz
popa
add
cmp
adc
mov
cmc
mov
pop
xor
mov
loope
xchg
mov
jnp
inc
loopne
xchg
fs
cmp
mov
inc
xor
or
mov
pusha
cdq
icebp
sar
jecxz
add
lock
sub
jns
sub
fwait
sbb
mov
adc
adc
xor
mov
arpl
inc
ror
mov
or
pop
aam
cmp
mov
in
xor
bound
aas
and
mov
jnp
cmp
adc
add
dec
mul
clc
adc
sub
stos
in
fs
pop
jmp
in
lds
out
mov
loopne
movs
dec
pop
pop
fist
imul
popa
pop
jb
sbb
add
dec
stos
out
aam
aas
leave
or
adc
lock
pop
push
xchg
sbb
mov
inc
sub
nop
es
jbe
sbb
out
inc
fsubr
sar
movs
or
ficom
retf
pushf
and
jecxz
add
inc
xchg
xchg
pushf
call
inc
sbb
mov
cmp
sub
or
xchg
mov
mov
leave
rol
mov
test
push
ins
lods
int3
adc
(bad)
fistp
imul
mov
mov
or
jg
push
call
pop
sahf
push
dec
out
jne
push
lock
out
and
jne
push
lods
jae
adc
(bad)
cli
cmp
cdq
idiv
and
mov
es
lds
sar
stos
push
pop
adc
fdivr
scas
push
cmc
(bad)
inc
stos
or
mov
ret
sub
test
ficomp
in
test
std
ins
pop
and
les
in
adc
sbb
dec
jae
pop
sbb
jg
sbb
ss
or
out
jnp
imul
adc
xor
mov
inc
pop
retf
lds
out
les
sub
test
enter
ins
pop
imul
stc
mov
mov
fistp
pop
loop
xor
xor
xchg
sbb
call
ins
add
cmp
pop
leave
lods
mov
shl
and
pop
lahf
in
dec
pop
cdq
fcomp
fimul
stos
setle
retf
jb
loope
inc
ror
sar
inc
xor
mov
xor
sbb
in
out
(bad)
mov
outs
fs
call
cmp
mov
add
mov
pushf
int
inc
pop
mov
movs
add
les
mov
sbb
call
add
cmp
(bad)
dec
lods
in
or
jg
out
mov
out
pushf
adc
repnz
test
sub
ss
mov
repnz
jle
mov
idiv
pop
lods
stc
retf
mov
and
rol
ret
mov
jg
ja
and
pusha
leave
fstp
and
sub
or
(bad)
repnz
pushf
mov
xchg
in
inc
push
jns
mov
inc
sub
fisub
(bad)
clc
adc
dec
mov
sub
jbe
inc
out
dec
push
add
imul
mov
mov
dec
imul
xor
addr16
sbb
add
sub
sub
xchg
(bad)
sbb
cs
xor
push
mov
cmp
out
addr16
dec
arpl
jp
mov
sbb
retf
sub
mov
enter
rol
sbb
push
lds
retf
sub
and
add
fnstenv
push
jno
pusha
ss
add
cmp
outs
call
lock
sahf
addr16
mov
or
jo
sbb
pop
or
push
out
and
test
xor
ror
repz
xlat
stc
sti
sbb
jmp
add
cwde
xchg
adc
retf
retf
add
lods
lods
mov
ja
in
pop
or
mov
(bad)
xchg
add
out
xchg
jp
pop
shl
or
rcl
fcomp
pop
sbb
adc
sti
pop
adc
clc
cmps
in
test
shr
out
addr16
lods
dec
dec
popa
or
jno
xor
rcr
mov
push
aam
dec
push
mov
sbb
and
push
xor
inc
clc
(bad)
add
sub
int3
(bad)
lahf
fcomp
nop
and
dec
mov
cmp
or
(bad)
cs
fisub
mov
ds
mov
pop
rol
in
pop
movs
std
(bad)
jecxz
icebp
in
mov
aad
repnz
(bad)
push
cmps
pop
xsaves
mov
call
adc
cld
shl
arpl
lods
sbb
dec
je
mov
cmp
(bad)
cmp
push
hlt
mov
pop
push
aad
bound
pop
cs
rcl
ret
cli
mov
cmp
loopne
xor
push
aam
enter
or
jns
xor
sahf
and
jg
lock
(bad)
stos
and
out
loop
mov
mov
xor
or
push
fdiv
cmps
xchg
adc
fldenv
add
repz
pop
adc
and
jg
cmp
popf
(bad)
sahf
daa
push
fwait
rcr
int3
loopne
es
icebp
push
jl
popf
call
pop
aaa
(bad)
push
sahf
dec
loope
test
pop
hlt
ins
fbld
std
icebp
and
and
xlat
pop
lods
adc
es
outs
dec
mov
mov
pusha
mov
sar
mov
ss
imul
pop
xchg
cmc
xlat
mov
movs
into
adc
add
movs
hlt
jns
sti
cli
pop
pop
rcl
lock
or
jp
(bad)
adc
stos
int
jne
xor
mov
mov
cs
arpl
retf
jl
jns
jo
jae
mov
ins
jle
hlt
fdiv
jmp
inc
xlat
in
add
scas
loope
or
ins
jge
int3
movs
and
shl
mov
stc
repz
xchg
push
pushf
popf
push
out
adc
or
fs
pop
push
cmp
pop
(bad)
xor
das
mov
fld
xchg
addr16
cmp
xchg
and
push
clc
jb
push
test
cld
lahf
sbb
retf
addr16
xchg
xchg
add
in
call
sbb
repnz
ss
test
(bad)
mov
loope
jo
in
mov
and
retf
sub
psrld
mov
fwait
or
mov
outs
mov
inc
data16
popf
(bad)
scas
jnp
arpl
add
rcr
in
fild
push
mov
mov
cmp
stos
sbb
inc
daa
add
icebp
add
adc
xchg
sbb
mov
sub
sub
adc
sub
and
dec
cdq
pop
push
adc
mov
mov
in
dec
cmps
out
outs
stos
sub
loopne
or
arpl
callw
mov
xchg
sbb
mov
xchg
mov
stc
or
jmp
xor
test
inc
jecxz
outs
add
lea
xor
xchg
test
rcr
mov
and
rol
mov
rcr
add
xor
div
xchg
xchg
loopne
inc
bnd
and
(bad)
pop
xchg
push
enter
sub
xchg
add
pop
arpl
test
push
div
xchg
sub
iret
xchg
sbb
push
mov
aam
push
das
push
jl
stc
add
lahf
in
push
scas
enter
or
inc
arpl
movs
or
int3
inc
ret
or
pusha
xor
jne
rol
bound
push
outs
sub
pop
out
das
xor
mov
(bad)
xor
sbb
jns
test
aam
mov
add
xor
cmp
repnz
lods
push
dec
lahf
push
add
pop
sti
cwde
jmp
xor
pushf
push
pop
adc
xchg
repnz
inc
push
inc
adc
loopne
sub
dec
pop
sub
inc
pop
or
add
mov
clc
adc
test
imul
push
ss
dec
sbb
scas
push
scas
int
shl
pop
clc
and
mov
or
retf
ds
push
sbb
cmps
or
mov
div
sub
jp
cmc
dec
aas
inc
cmc
aad
push
jnp
mov
mov
pop
test
pop
pusha
push
hlt
xchg
call
lock
push
mov
or
xchg
sub
movs
mov
mov
in
mov
dec
push
iret
retf
nop
popa
lds
mov
add
ret
jo
push
adc
push
mov
sub
mov
into
push
push
xchg
inc
push
test
and
add
mov
pop
sbb
fadd
out
inc
sbb
add
xor
sbb
jge
in
aad
cmp
or
sbb
push
es
popa
std
aaa
adc
jmp
and
sbb
xchg
xchg
sbb
daa
pop
mov
shl
sub
sbb
dec
add
mov
mov
clc
dec
or
loope
cmps
and
pushf
dec
or
aas
or
repnz
cmp
xchg
xlat
sbb
movs
adc
push
ins
lods
scas
sbb
sbb
lods
jp
mov
mov
pop
sub
mov
mov
int3
and
inc
(bad)
retf
out
inc
mov
cmp
or
inc
inc
cwde
mov
es
sti
loop
dec
cmps
push
shl
imul
neg
push
add
sub
bound
imul
jmp
inc
push
shl
inc
jb
or
stos
cmps
mov
loope
xor
in
mov
push
jp
repz
sub
xor
fmul
ins
sbb
div
push
xor
sub
in
push
jb
fidiv
mov
xor
or
and
sub
shl
mov
mov
ret
xchg
jmp
xchg
mov
ret
xor
sub
ins
xchg
aam
icebp
sbb
rcl
repnz
push
lea
cmps
je
mov
mov
pop
sahf
xchg
test
sbb
adc
(bad)
mov
lahf
(bad)
jl
popa
mov
xor
add
lahf
(bad)
mov
jmp
outs
shl
mov
push
inc
out
sub
and
mov
cmp
inc
sbb
in
sbb
inc
add
mov
add
sub
test
pop
jle
dec
mov
mov
retf
cmp
in
and
and
inc
mov
dec
pop
adc
imul
out
(bad)
and
add
cwde
inc
dec
cld
mov
mov
sbb
cmp
fwait
jle
jl
push
popa
cmc
or
ins
lods
aad
mov
in
cmp
lods
cmp
(bad)
or
adc
inc
cwde
loopne
or
(bad)
(bad)
(bad)
into
fdiv
outs
push
es
ins
retf
jae
jmp
push
int3
inc
jp
adc
das
pop
push
mov
nop
mov
into
xchg
jb
mov
jp
jb
loope
pop
pop
add
or
xchg
or
in
out
cld
es
ret
pop
out
loopne
add
mov
ss
movs
out
aad
fwait
fs
pop
and
movs
clc
xlat
xlat
in
add
mov
jo
shl
in
std
push
xor
adc
outs
or
cdq
mov
popa
shr
pop
mov
cmp
scas
outs
aas
lods
repz
leave
pop
xchg
sbb
mov
aad
jmp
jno
or
sbb
repnz
cmp
xlat
js
push
les
mov
int3
add
ja
(bad)
out
stc
xchg
inc
inc
xchg
scas
jl
push
imul
cld
mov
(bad)
ds
fs
inc
arpl
imul
stos
and
xchg
push
cmc
pop
lods
fcmovbe
shr
sbb
pop
ret
cs
repnz
mov
inc
pushf
stos
ret
(bad)
fcomi
imul
movs
and
xor
div
ss
icebp
scas
shl
(bad)
aam
pop
and
add
out
mov
cmp
lock
ja
in
mov
mov
cmp
inc
cli
aaa
push
adc
xchg
ja
xor
mov
mov
out
mov
dec
sahf
inc
xchg
dec
cmp
and
js
adc
test
addr16
mov
loope
fild
mov
stos
ins
jg
ffreep
or
hlt
call
mov
cli
jb
enter
cmp
adc
or
mov
sar
inc
mov
inc
cmp
nop
lahf
cmp
or
dec
mov
adc
pop
icebp
sbb
mov
and
call
jge
call
adc
dec
div
cli
outs
push
xor
adc
mov
icebp
mov
jg
sbb
sbb
dec
inc
retf
and
mov
xor
and
iret
jp
mov
rcl
xchg
movs
int3
adc
cli
xchg
adc
int
xchg
ss
inc
fimul
ins
test
mov
dec
sbb
stc
mov
mov
add
cld
jb
jp
jne
push
sub
jno
imul
fld
cmp
xlat
jp
mov
pushf
jmp
sbb
pushf
mov
push
mov
inc
cdq
imul
add
ds
stos
mov
pusha
rcl
stos
push
or
(bad)
adc
fimul
mov
cdq
pop
(bad)
lea
mov
mov
lock
retfw
ret
xor
push
xchg
jge
cmp
xchg
pop
sbb
inc
push
pop
int
pop
push
inc
cwde
mov
mov
scas
dec
sbb
xchg
mov
movs
gs
jo
sub
pop
push
inc
xchg
rcl
push
out
jg
cmc
or
enter
retf
pop
cmp
inc
dec
cmps
test
cld
mov
movs
in
pop
lock
mov
mov
div
jmp
push
push
push
movs
in
inc
out
dec
scas
add
push
in
(bad)
cld
imul
stos
sar
add
xchg
retf
bnd
int
cmp
xor
ins
cld
sbb
cmps
mov
push
mov
lods
mov
pop
cmp
and
push
push
mov
iret
sti
stos
adc
cld
push
ds
push
pop
int
es
fsub
aam
xchg
sub
push
sub
mov
in
mov
mov
xchg
jmp
daa
mov
mov
adc
mov
movs
fsubr
std
dec
ror
jmp
push
jle
mov
imul
add
shr
dec
or
mov
sub
jae
adc
mov
scas
dec
sbb
or
xor
mov
dec
in
out
mov
sbb
sub
dec
stc
cmps
jge
lods
adc
push
xchg
pop
sbb
inc
dec
or
aad
(bad)
(bad)
xchg
push
mov
cmc
pop
inc
stos
pop
mov
enter
rcl
sti
mov
and
xor
xor
rol
mov
iret
sub
inc
fisubr
fs
dec
arpl
cmp
push
ficom
inc
or
jmp
sbb
jp
inc
and
mov
mov
(bad)
fwait
jp
les
sahf
and
pop
movs
jno
push
cmp
std
mov
sub
jnp
mov
mov
add
mov
add
lahf
int3
in
bound
test
jae
pop
aad
scas
xchg
sub
stc
mov
jg
in
or
and
sub
fnstsw
mov
aaa
out
xor
call
and
test
xchg
arpl
jno
and
aam
sbb
push
in
call
cmp
ins
dec
xlat
jp
iret
pop
std
std
xor
(bad)
aas
inc
inc
or
mov
leave
rol
jae
cmp
(bad)
test
out
sub
mov
and
add
shr
in
lds
(bad)
cmc
lea
mov
ss
dec
fisubr
cmp
jge
in
loope
ins
lahf
push
dec
je
mov
or
std
bound
les
xchg
push
fsub
jecxz
ret
in
jnp
jb
hlt
imul
ror
test
inc
mov
ja
iret
clc
cmp
enter
inc
sub
lahf
mov
pop
fwait
movs
sbb
jo
icebp
das
clc
sar
mov
adc
cmp
gs
pop
pusha
ins
push
fld1
jbe
xchg
(bad)
jmp
mov
pushf
jecxz
sti
pop
leave
mov
fwait
push
shr
add
bnd
dec
icebp
dec
push
(bad)
push
xchg
ret
mov
jae
xor
sub
and
jmp
and
std
mov
mov
repz
pop
push
cs
jge
into
fld
xor
call
arpl
xor
or
cmc
push
dec
shl
pop
mov
cmps
clc
icebp
jo
jae
pop
popa
das
stc
dec
mov
out
sti
int
(bad)
icebp
(bad)
mov
out
test
movs
mov
loopne
pop
cld
jnp
(bad)
adc
mov
mov
jp
dec
xor
cli
les
les
pop
jne
push
ss
loopne
push
add
cmp
dec
shl
ins
xor
lods
(bad)
xor
hlt
jmp
mov
push
aad
ror
call
(bad)
into
xchg
push
push
shr
xor
dec
dec
add
adc
loopne
loop
mov
outs
sub
sbb
vshufps
lds
bound
xor
loop
push
and
cmp
bound
jmp
jb
es
xor
add
(bad)
fucomi
and
aaa
inc
push
sbb
inc
call
out
add
repz
dec
pop
das
je
sbb
add
ins
test
(bad)
jecxz
test
jecxz
and
icebp
sbb
je
jmp
retf
dec
pop
shufps
cmp
mov
jo
pop
in
and
push
xor
add
mov
aad
shl
inc
sahf
xchg
inc
aas
fst
scas
mov
mov
mov
add
mov
pop
adc
ret
inc
ret
dec
jnp
sbb
lods
adc
daa
push
int3
mov
retf
rcl
scas
iret
cwde
rcr
xchg
mov
aad
cmp
dec
adc
mov
subps
cmps
test
in
dec
shl
(bad)
sbb
dec
sbb
sbb
ss
mov
fmul
scas
cmp
push
out
js
and
pushf
cld
sub
popf
mov
sub
sub
test
fs
adc
les
add
inc
adc
repnz
mov
mov
int3
xchg
stos
inc
push
arpl
mov
cmc
scas
test
ss
cmp
sub
jns
inc
call
xor
sbb
adc
mov
addr16
jge
imul
xor
jns
pushf
xor
cmps
je
mov
aam
iret
cmp
mov
xor
inc
push
ror
add
rol
jne
mov
mov
cmc
xor
imul
adc
inc
bound
movs
jne
std
out
fwait
and
jmp
jl
pop
fdiv
sbb
lahf
gs
push
adc
dec
daa
mov
cdq
sar
fnstcw
push
cmp
mov
pop
(bad)
add
and
mov
scas
(bad)
gs
xchg
mov
popf
ret
jo
jmp
xor
scas
cmp
dec
cld
mov
aaa
daa
jb
fwait
jns
jmp
mov
and
idiv
jne
cmp
scas
inc
ficom
mov
aas
xor
adc
cmp
ficom
outs
cmps
test
mov
fsub
sahf
push
sub
ss
div
fwait
ror
pop
jge
mov
fisub
mov
jg
sbb
or
xchg
pop
aad
ins
add
xchg
movs
fldl2t
push
push
pop
arpl
(bad)
lds
fstp
andps
jns
js
je
mov
dec
mov
dec
dec
repnz
push
mov
xor
cmp
mov
out
lea
ja
pop
sbb
or
scas
inc
lods
or
jle
(bad)
inc
nop
mov
sub
pop
or
pause
stos
jae
out
jge
adc
or
ret
test
loope
mov
outs
xor
pushf
sub
retf
jne
jb
jmp
mov
loope
dec
test
(bad)
jne
jl
pusha
leave
out
inc
mov
sbb
stos
and
retf
jo
or
pop
adc
mov
cmp
and
mov
movs
sub
(bad)
push
push
xor
ja
div
in
pop
es
inc
jo
lods
adc
fistp
lods
pop
sub
fcmovu
jbe
or
xor
outs
popf
sub
and
loop
xor
xlat
mov
ficom
push
adc
idiv
or
ins
ins
repz
lods
cld
lahf
jo
pop
ds
inc
in
aad
test
sbb
xchg
adc
rol
cmp
sbb
sbb
cmp
jmp
neg
jge
out
repnz
sbb
push
push
xchg
xchg
cmp
add
adc
push
adc
test
test
mov
(bad)
repz
inc
(bad)
push
shl
mov
mov
inc
ret
ja
gs
sub
loopne
aam
push
aad
jbe
retf
pop
pop
mov
push
ret
enter
test
mov
lock
inc
stos
lods
daa
fnstcw
in
neg
test
cs
daa
sbb
shl
mov
(bad)
repnz
add
push
jl
aaa
dec
ins
inc
movs
sub
cwde
push
sbb
mov
jle
scas
popf
push
jb
mov
cwde
ds
rol
inc
cmp
repnz
sbb
imul
aas
loopne
and
repnz
or
std
pop
stos
mov
ret
fiadd
mov
fwait
daa
mov
adc
test
sbb
ja
sub
sbb
int3
stos
mov
add
(bad)
sti
or
scas
pop
adc
in
add
push
cmp
loope
(bad)
shr
loop
add
push
popa
jmp
xchg
mov
movs
xchg
(bad)
in
cmp
and
aad
rcl
shr
and
cli
pop
(bad)
jns
mov
(bad)
imul
rcr
pop
jns
into
addr16
hlt
jecxz
sub
sub
dec
or
popa
popa
dec
lods
mov
cdq
jb
out
daa
das
xor
stos
in
push
test
push
stc
out
dec
push
sti
std
shl
in
or
inc
adc
and
mov
fisttp
cdq
je
cmp
call
fist
or
(bad)
pop
xor
mov
dec
in
adc
fmul
adc
pop
xor
xchg
lds
mov
adc
mov
test
or
pusha
popa
pop
adc
imul
cdq
les
gs
sub
jo
sbb
cmc
mov
mov
xlat
push
jb
fwait
or
test
int
mov
pop
inc
ja
scas
push
and
or
push
xor
ins
leave
jno
mov
fs
rol
mov
fisub
leave
out
adc
data16
jg
rcr
dec
jns
pop
xchg
or
push
add
ret
pusha
jmp
xor
scas
dec
jbe
jp
cmp
ror
push
xor
cmp
push
repnz
bound
shr
push
and
lods
and
pop
int
out
dec
cmp
(bad)
mov
xchg
stos
xchg
sahf
lahf
jmp
xchg
jb
shl
xlat
bnd
retf
add
loopne
fmul
mov
xchg
jmp
adc
ret
test
lock
jb
retf
lahf
pop
jmp
and
lock
retf
mov
mov
inc
or
cs
cmp
and
xchg
jecxz
mov
icebp
mov
xchg
dec
jb
adc
mov
jp
sar
loopne
test
(bad)
nop
push
jle
hlt
ins
dec
cmp
and
mov
cmp
sti
jp
cmp
push
imul
and
dec
or
and
int
into
mov
jno
repz
fsub
push
inc
mov
pushf
shl
mov
cmp
jmp
mov
mov
xchg
test
(bad)
test
imul
movs
mov
(bad)
sub
sbb
(bad)
fucomi
shr
out
jmp
(bad)
scas
push
mov
adc
cli
jne
cdq
nop
mov
(bad)
sub
iret
mov
cmp
pop
jp
pusha
push
popa
ss
stc
sbb
push
fldcw
cmps
inc
pop
sbb
fsubr
mov
and
call
imul
pop
pop
out
jecxz
sar
fs
sbb
and
cwde
pop
xor
cwde
repnz
leave
mov
cld
imul
xchg
arpl
or
fcom
iret
icebp
loope
sbb
sbb
ds
sub
sub
test
pop
mov
retf
xchg
test
mov
(bad)
or
xchg
push
fiadd
xchg
js
loopne
cs
stc
loope
jne
xchg
loop
adc
mul
stos
hlt
mov
(bad)
cmp
dec
mov
jmp
pop
lds
mov
shl
mov
enter
(bad)
xor
vmovaps
je
inc
cs
ja
addr16
mov
(bad)
adc
push
jl
inc
mov
sbb
imul
fwait
sti
lock
ss
scas
jbe
push
jb
addr16
xchg
mov
adc
data16
pop
xor
call
(bad)
mov
out
shr
das
jecxz
data16
xor
inc
jb
arpl
xor
add
push
aam
(bad)
mov
cmc
repz
xor
(bad)
call
sub
or
jae
mov
out
sub
popa
adc
adc
sub
ja
xchg
pop
xor
add
xchg
sbb
rcl
push
mov
fnsave
and
out
arpl
and
pop
push
cmp
jb
shl
shl
fdivrp
or
xor
inc
ret
jae
iret
js
jmp
push
loope
mov
addr16
pop
xor
repnz
ffreep
adc
in
dec
or
jns
xchg
inc
sub
mov
xor
or
xchg
cmp
and
in
ins
(bad)
imul
inc
in
(bad)
sti
adc
cs
sbb
sub
pop
in
shl
pop
lods
jns
int
adc
repnz
push
clc
add
ret
sub
cmps
lods
jmp
lock
push
mov
movs
int3
stc
(bad)
sar
fiadd
mov
xchg
push
aaa
test
jle
lods
movs
shr
cwde
ins
adc
jmp
inc
or
mov
inc
cdq
fstp
icebp
imul
call
adc
stos
fs
and
push
int
data16
sub
cs
fdivr
out
lods
bound
sahf
adc
or
mov
loop
sub
cmp
loop
inc
xor
push
push
dec
std
fbld
mov
lods
or
inc
cmps
loope
popf
mov
aas
or
aam
mov
lock
sub
xchg
mov
sbb
ficom
sbb
inc
add
jo
adc
mov
mov
add
push
or
mov
mov
mov
push
push
imul
mov
or
jmp
es
test
mov
push
push
mov
out
pop
sbb
push
stos
int
jo
int
pushf
adc
or
push
push
retf
mov
pop
dec
ror
xchg
sub
fs
icebp
pop
imul
mov
cmc
bound
repz
or
jbe
in
dec
ja
cmp
cmc
mov
sub
mov
xlat
or
aaa
ficom
xchg
mov
call
xchg
push
(bad)
call
outs
dec
xor
cmps
cmp
loopne
mov
out
aaa
cmps
daa
repnz
shr
sbb
or
jmp
or
xor
pcmpgtd
mov
jmp
or
cmp
in
pop
xor
je
adc
jmp
pop
std
push
add
add
shl
inc
sub
jbe
jmp
mov
ds
adc
fsubr
dec
cmp
pop
pop
inc
sbb
jae
ss
jno
jl
xor
outs
mov
inc
sub
test
lea
push
fild
rcr
retf
ins
icebp
mov
aam
cmc
or
div
(bad)
pop
arpl
out
or
and
iret
movs
mov
xchg
xchg
icebp
cs
xor
(bad)
dec
(bad)
stos
and
push
aas
cld
std
lods
in
sbb
sbb
push
addr16
pusha
sub
dec
jmp
arpl
push
retf
ret
mov
sbb
sbb
push
xchg
xchg
and
adc
adc
arpl
push
test
fisttp
pop
lods
sub
movs
push
mov
jp
mov
or
test
jae
retf
or
(bad)
nop
outs
mov
ins
shl
sbb
mov
mov
leave
into
inc
div
and
aad
or
sbb
test
lock
rcr
mov
mov
dec
or
neg
rcl
mov
sbb
mov
loopne
ret
jns
mov
test
xor
or
clc
setne
and
pop
pop
aad
popa
or
rcl
adc
sub
popa
enter
mov
pushf
cmp
sub
mov
out
xor
cmp
or
and
sti
adc
add
push
js
cmp
addr16
cmps
in
xor
lea
xor
in
and
sub
gs
sti
cli
xchg
pop
int3
xchg
hlt
mov
cs
push
(bad)
bound
mov
fimul
mov
(bad)
mov
int
je
jge
mov
adc
push
xchg
in
fsubr
or
or
xchg
inc
mov
dec
popf
lock
outs
stc
cmp
in
push
addr16
out
add
das
cmp
mov
ins
rcr
push
dec
xchg
out
cmp
push
outs
lds
fdivr
push
nop
mov
sub
icebp
popf
inc
adc
loopne
pop
(bad)
xchg
sub
iret
jge
cmps
fs
call
sub
dec
lds
inc
xchg
mov
or
popf
inc
pushf
add
lea
fisttp
adc
xchg
sub
push
xchg
dec
fwait
cmp
or
mov
lods
mov
ja
or
sahf
and
(bad)
pop
dec
mov
inc
(bad)
add
test
rcl
lahf
iret
dec
inc
dec
cmp
aas
mov
xchg
mov
rcl
push
mov
stos
das
push
pop
loope
pop
add
leave
cmp
cmc
sub
and
pop
int3
cmp
in
dec
pop
aam
in
(bad)
popa
pop
bound
(bad)
pop
retf
pop
sub
call
in
and
shl
push
addr16
sub
iret
jl
aam
sbb
sar
or
lock
div
lods
push
jb
jle
adc
push
gs
xchg
sub
push
push
loop
jmp
inc
in
and
outs
mov
ficom
call
push
inc
lods
push
pop
cmp
addr16
ins
cmc
test
jno
ds
jne
push
pusha
mov
in
or
ds
aam
shl
xor
inc
sar
mov
pusha
inc
push
loope
jb
cmp
lea
sbb
mov
stos
cdq
rcr
aam
pop
push
mov
cmp
xchg
mov
fs
icebp
xlat
sub
dec
cwde
xchg
fucomip
scas
nop
stc
push
shl
aaa
or
jnp
and
(bad)
out
mov
mov
pop
div
stos
rcr
xor
popa
jg
mov
fisub
push
jle
nop
add
pop
outs
dec
sbb
ins
push
sbb
cli
jnp
retf
inc
imul
sti
jg
and
dec
mov
rcr
arpl
popf
in
mov
fmul
xor
imul
sub
cmp
xchg
fsub
out
or
fsub
sbb
mov
shl
mov
sub
and
mov
and
mov
dec
test
inc
jle
xlat
cmp
clc
inc
fwait
daa
out
xchg
or
xor
sar
(bad)
ror
dec
sub
ret
daa
or
adc
mov
sub
bound
pusha
iret
jno
ja
pop
jl
mov
cmp
push
pop
shl
xor
jmp
and
add
add
dec
add
add
pop
jmp
xchg
jle
push
mov
dec
mov
cmp
pop
ins
adc
add
inc
sbb
icebp
cmp
add
pop
inc
mov
ficom
push
jmp
aam
out
ins
jno
push
jmp
mov
lahf
jns
jecxz
sub
nop
dec
push
and
loope
adc
fwait
les
cmps
xor
outs
ficom
mov
push
lock
ja
test
fstp
nop
hlt
xor
iret
repz
aas
dec
sbb
inc
stc
in
fs
aad
mov
mov
add
mov
sbb
pusha
(bad)
fimul
cmp
or
jae
dec
mov
in
jmp
mov
xchg
out
lods
scas
cwde
ins
or
ja
dec
sub
sar
sub
xor
sti
call
push
adc
jns
(bad)
xor
mov
mov
xor
(bad)
mov
sti
imul
(bad)
jns
out
mov
icebp
or
cmp
movs
call
in
fadd
cli
test
mov
and
nop
pop
mov
fisttp
cs
movs
int3
sahf
ja
call
mov
into
pop
repnz
shl
add
dec
cmp
call
jmp
and
push
test
in
daa
pop
inc
cmps
fs
mov
mov
xor
adc
and
jge
movs
popf
icebp
mov
pop
lahf
push
fidiv
and
jne
adc
jecxz
mov
leave
mov
mov
in
pop
int3
fidivr
call
nop
call
sbb
pop
jl
fwait
popf
shl
lods
dec
ds
xlat
mov
stos
jl
in
int
mov
fs
daa
lahf
cs
mov
push
fsubr
sbb
adc
inc
movs
push
mov
jne
sbb
fs
sub
xchg
clc
cmp
ja
xor
loopne
arpl
dec
adc
xchg
out
pop
adc
mov
dec
xchg
jl
cdq
fldcw
or
mov
test
dec
mov
pop
xchg
sub
inc
loope
add
cld
mov
xchg
cmc
call
xchg
or
ret
and
fwait
mov
inc
add
loop
adc
bound
push
jge
inc
inc
cmp
or
retf
stc
lods
add
inc
or
out
daa
popa
jnp
fld
sub
dec
jae
ret
aaa
sub
mov
pop
mov
xchg
push
(bad)
shr
mov
test
inc
jne
pop
invd
or
add
nop
sahf
inc
and
mov
inc
or
xchg
or
pop
adc
popa
stos
push
stc
xor
jmp
xchg
sub
and
ret
jge
pop
pop
pushf
push
or
pop
les
jb
xchg
jno
adc
lods
in
lahf
mov
push
xor
fwait
call
adc
ret
out
mov
sti
sub
push
push
call
push
sub
adc
mov
jmp
fmul
xchg
sbb
jns
into
ret
jnp
sbb
jae
imul
mov
mov
pop
sub
adc
ja
bound
mov
pop
(bad)
call
stos
sub
push
push
adc
in
jmp
inc
sub
and
inc
in
cmp
je
push
(bad)
pushf
mov
iret
pop
jns
pop
mov
and
(bad)
jns
cmps
test
(bad)
add
ss
es
push
into
ret
mov
xchg
lods
sbb
not
or
push
jle
(bad)
ins
xor
(bad)
sub
pop
and
push
sub
sub
mov
pusha
movs
jae
ss
jmp
xchg
stc
pop
sbb
inc
add
ja
bound
xchg
je
mov
(bad)
icebp
in
pusha
xchg
pop
or
les
addr16
out
inc
push
xor
push
mov
rcl
movs
jge
stc
lock
mov
mov
and
mul
dec
stc
add
mov
ret
jp
movs
mov
lods
(bad)
adc
stos
jl
in
add
cmp
push
push
test
mov
scas
jp
jne
leave
xchg
rol
ror
cmp
sbb
aam
out
in
jmp
jl
popf
aad
imul
scas
cmps
fs
mov
outs
out
and
mov
push
aad
inc
push
mov
test
loop
movs
iret
sbb
xor
fild
pop
(bad)
jo
mov
aaa
push
dec
or
lahf
test
sub
cwde
pop
icebp
pop
mov
xchg
push
fsubr
leave
mov
xchg
inc
sbb
aad
and
mov
inc
movs
sbb
lods
scas
or
cmp
(bad)
scas
or
mov
fwait
int
hlt
sub
(bad)
pusha
test
out
mov
movs
mov
xor
inc
sbb
cmp
mov
push
outs
pop
jne
ins
cmp
and
mov
and
pop
int3
mov
push
lds
es
int
jo
mov
push
pushf
int3
push
sub
sub
inc
pop
sub
into
int3
jge
jb
mov
cmp
pop
repz
dec
or
clc
pusha
or
icebp
pop
jge
sub
lods
and
fcomp
mov
pop
push
cmp
jle
push
jl
adc
cs
imul
dec
call
push
dec
rcl
stos
xchg
(bad)
stos
xchg
push
sbb
cmps
out
push
or
jmp
xor
ins
jl
sbb
imul
dec
ds
jno
sbb
jns
cli
mov
dec
gs
jmp
fild
fdivr
(bad)
stos
push
xor
inc
aas
addr16
stc
repnz
fsub
popa
jmp
push
pop
jmp
mov
aam
retf
add
call
inc
mov
mov
push
enter
cmp
das
and
es
add
add
outs
xchg
std
mov
aad
jp
(bad)
xchg
(bad)
cmp
out
fisub
movs
fisub
dec
xchg
jp
mov
aad
push
dec
popa
add
loopne
sub
mov
scas
mov
je
das
cmp
rcl
retf
jge
push
jbe
adc
das
mov
popf
arpl
mov
je
push
pop
xchg
cmp
push
fst
inc
stos
fmul
adc
jg
mov
movs
int
fiadd
and
push
(bad)
xchg
into
push
loopne
enter
add
sbb
ret
jo
loopne
jle
lock
mov
jae
shl
sub
mov
pop
sbb
shl
hlt
test
movs
out
jp
jge
jmp
sub
jecxz
ja
mov
push
outs
or
sar
adc
movs
mov
sub
test
loopne
push
movs
lods
ins
push
cli
and
imul
xor
add
push
ds
mov
xchg
and
cmp
popa
outs
dec
mov
mov
jnp
(bad)
and
pushf
aam
fcom
push
pop
cmps
(bad)
repz
in
inc
jg
xchg
mov
or
mov
mov
fild
stos
scas
adc
mov
push
aam
cwde
jmp
cwde
es
lods
inc
add
xchg
jl
pop
inc
shr
jmp
push
popa
test
lods
dec
or
mov
movs
xor
dec
leave
test
dec
aad
cwde
pop
in
outs
dec
and
out
scas
fs
push
dec
nop
cmp
test
pop
jg
js
cmp
sbb
ins
arpl
mov
jle
arpl
leave
inc
push
or
sub
or
shl
int
adc
adc
adc
lods
dec
add
int3
lock
mov
clc
(bad)
pop
out
and
add
popf
or
xor
or
shl
aaa
xchg
mov
add
and
in
mov
mov
rcl
gs
add
bound
fiadd
icebp
jge
dec
cmp
cmp
jbe
fidivr
mov
ret
cdq
jne
lea
int3
pushf
(bad)
gs
div
(bad)
add
mov
sbb
rep
or
xlat
add
(bad)
push
fwait
xor
push
and
lahf
mov
mov
push
add
dec
push
sbb
push
cli
push
pop
dec
pushf
bound
push
jb
daa
cmp
xchg
or
mov
dec
(bad)
pop
dec
mov
sub
or
loop
cwde
loop
cld
mov
mov
or
add
mov
jo
into
jg
cwde
sub
jo
pop
mov
ficomp
loopne
add
xor
mov
add
push
outs
pop
ins
hlt
dec
repnz
dec
loope
push
dec
fcmovnu
sbb
xchg
call
sub
mov
sbb
xor
push
ins
test
inc
push
jp
mov
xor
mov
je
jg
call
int
xchg
das
mov
rcr
mov
xchg
movs
pop
dec
and
loop
jecxz
popa
cmp
retf
xchg
mov
sub
xor
xchg
cmp
in
imul
jmp
and
loope
jno
cmp
push
paddusb
sub
and
call
test
and
(bad)
fisub
cs
mov
push
(bad)
repnz
sbb
out
mov
mov
arpl
je
jo
nop
pop
stos
fdiv
movs
push
and
outs
mov
pop
call
pop
test
xor
aam
mov
stc
in
pop
lock
inc
jg
sahf
jg
mov
add
mov
fist
enter
mov
push
or
dec
jl
std
pop
jmp
inc
(bad)
dec
jmp
and
sar
sub
icebp
mov
shl
mov
sar
aad
in
scas
shl
sub
(bad)
xor
call
cmp
push
xchg
push
into
cmp
es
push
jno
adc
or
jmp
and
mov
in
repz
sbb
scas
loope
aad
xchg
loopne
adc
pop
xchg
cmp
jnp
das
pusha
cmp
add
add
push
jl
jp
lds
ins
shl
pop
repz
mov
aaa
aas
repz
(bad)
adc
pop
pop
lods
scas
fdiv
ret
xor
je
jp
fld
ret
test
add
jecxz
clc
rol
jno
addr16
aad
test
enter
cld
add
jbe
sbb
imul
jp
and
and
movs
icebp
adc
shl
cmp
inc
leave
cwde
stc
mov
cmps
std
dec
push
sub
int
mov
adc
repnz
inc
mov
adc
mov
js
cmp
or
mov
enter
or
std
test
in
inc
inc
or
aad
inc
mov
inc
ret
xchg
cmp
jmp
xlat
repz
xchg
lds
out
and
or
out
out
in
xor
jns
sti
mov
leave
mov
test
or
cmp
popf
cmp
arpl
xchg
xchg
pop
push
cmps
pusha
sub
rcl
fsubrp
iret
adc
daa
mov
shr
mov
and
sub
jbe
adc
cmps
repz
dec
test
xchg
xlat
jne
mov
xor
fimul
push
sti
mov
in
aad
outs
fs
mov
ja
pop
aaa
jns
mov
dec
push
bound
in
add
ins
retf
mov
dec
push
fisttp
push
out
jb
xchg
test
les
js
leave
mov
adc
push
ds
hlt
and
xchg
jae
push
shl
adc
loopne
jge
arpl
hlt
push
and
jmp
pop
iret
inc
mov
shl
mov
or
xchg
dec
stc
js
adc
push
dec
mov
js
pop
out
ficomp
adc
adc
dec
stc
out
xchg
shr
sub
jp
in
dec
jbe
(bad)
rcr
jne
ret
shl
xchg
retf
sbb
xchg
es
cwde
push
pushf
out
adc
mov
xchg
jmp
data16
push
pop
into
inc
lods
xchg
outs
in
cmp
mov
pop
xchg
cdq
adc
rol
sub
in
mov
inc
inc
mov
in
nop
(bad)
add
xchg
pop
std
loop
mov
fdiv
xchg
ins
dec
sub
adc
call
stc
xor
sbb
es
outs
movs
(bad)
mov
test
pop
jne
or
hlt
ret
arpl
pop
xchg
cs
inc
imul
xor
dec
scas
rol
int3
pop
pxor
mov
fst
mov
jg
ds
data16
fmul
aas
arpl
jnp
jo
add
xchg
popa
sti
pop
or
scas
rcr
in
aaa
(bad)
jmp
nop
add
retf
cli
cmps
mov
xlat
stc
fwait
cmp
xchg
je
leave
scas
jmp
mov
je
lea
dec
scas
fwait
in
push
dec
xchg
in
and
or
xchg
inc
dec
sti
ja
cs
or
into
xchg
pushf
jmp
xchg
ror
inc
mov
(bad)
enter
(bad)
xchg
sbb
mov
xor
and
jecxz
cmp
arpl
push
mov
neg
sub
hlt
dec
je
adc
popa
or
mov
mov
mov
in
iret
out
sar
pop
mov
jo
js
push
pop
mov
push
add
mov
jbe
mov
into
fidiv
mov
lods
push
add
popa
bound
fcomp
jmp
inc
xchg
adc
dec
test
aam
scas
mov
and
ret
mov
cdq
cdq
ds
movs
std
shr
or
call
xor
jle
sbb
adc
je
adc
dec
ficomp
arpl
or
mov
ret
pop
pop
je
xchg
jp
or
push
loopne
sub
add
sbb
leave
mov
(bad)
cld
or
jns
pop
mov
push
loop
test
sbb
into
pop
repnz
mov
or
mov
xor
pop
aas
sbb
inc
jne
out
(bad)
and
xchg
and
or
mov
adc
enter
adc
gs
in
push
repz
add
inc
not
pop
mov
xor
mov
pop
inc
adc
icebp
movs
sub
in
mov
call
mov
adc
mov
jecxz
dec
mov
add
ficomp
and
push
cmp
inc
das
clc
xchg
(bad)
mov
push
into
xchg
cmove
jge
cwde
and
fscale
gs
(bad)
fcom
push
jecxz
aas
adc
xor
(bad)
loopne
cwde
pusha
or
ins
dec
push
clc
jns
jl
pop
and
dec
add
ja
and
add
pushf
lods
xor
js
scas
sbb
or
jae
lahf
or
inc
mov
out
je
(bad)
cmp
sbb
fisub
mov
or
movs
or
mov
xor
out
fisub
lds
xor
xor
dec
shl
ins
mov
es
mov
xor
push
fwait
outs
add
pop
pushf
cmps
xor
add
movs
mov
sbb
jne
das
xor
mov
les
test
scas
int3
iret
mov
les
mul
(bad)
lock
cmp
retf
dec
sub
mov
sbb
adc
mov
xchg
in
repnz
cli
js
and
dec
sub
pop
(bad)
adc
xchg
retf
sub
leave
xor
aaa
fstp
clc
push
mov
retf
imul
jmp
repz
rcl
and
inc
sahf
add
mov
out
(bad)
push
mov
mov
mov
mov
cwde
arpl
fmul
pop
shl
mov
mov
retf
in
inc
mov
fimul
stos
mov
inc
pop
jecxz
push
fsub
scas
jmp
call
add
rcr
add
dec
sahf
mov
mov
in
cmp
sub
sub
ins
loop
jmp
mov
jno
daa
je
test
sbb
add
mov
adc
or
aam
popa
leave
in
mov
push
(bad)
ds
inc
pop
sahf
ud0
(bad)
push
push
sub
or
clc
cmp
retf
inc
mov
mov
xchg
lea
push
lods
jne
xor
daa
enter
ret
mov
mov
cli
in
call
into
pop
stos
add
cwde
jo
lahf
out
repz
and
(bad)
cdq
imul
call
std
mov
pop
pop
ret
pop
fwait
and
retf
shl
cld
int3
add
dec
jle
int3
dec
sub
icebp
xlat
cmp
push
pusha
ret
outs
call
push
and
(bad)
outs
mov
push
sbb
jbe
std
and
outs
mov
test
sub
mov
in
sub
push
mov
push
dec
fcomp
movs
jns
xor
inc
test
push
ret
dec
jmp
(bad)
jl
cmp
imul
loope
ss
in
rcr
mov
cmps
mov
fwait
cmp
push
push
lods
or
or
cmp
xlat
cmp
jl
add
rcr
repnz
imul
jle
and
shl
fs
mov
fild
dec
mov
or
jmp
shl
cmc
jmp
loope
pop
out
mov
jge
pusha
ret
int3
fimul
aad
loop
bswap
int3
clc
inc
xchg
cld
xor
cmc
and
add
push
daa
inc
and
nop
scas
sub
sub
ins
(bad)
jp
daa
xor
ret
fistp
adc
jno
inc
adc
dec
mov
push
dec
pop
and
mov
icebp
jmp
das
sahf
mov
mov
mov
xchg
push
dec
lock
loope
xchg
fild
dec
inc
inc
je
jmp
jo
xchg
sar
(bad)
hlt
lahf
js
repnz
xchg
pushf
sbb
repz
cmp
sbb
into
push
scas
test
dec
fs
push
xchg
aam
cs
std
fild
aaa
pop
inc
bound
push
aas
retf
inc
jmp
stos
pusha
js
lods
shl
call
pop
nop
pshufw
out
mov
xchg
inc
cmp
or
pop
retf
into
and
jg
das
aas
ds
fst
gs
pushf
gs
mov
retf
adc
fdivr
iret
push
adc
jno
sahf
dec
scas
jl
and
push
sub
mov
popa
dec
mov
fldenv
pushf
lock
pop
(bad)
fwait
xchg
inc
mov
ins
sbb
outs
retf
and
ret
add
sub
repz
pop
inc
pop
leave
mov
inc
inc
push
pop
xchg
mov
xchg
imul
xchg
push
js
fst
mov
fidivr
jne
jbe
inc
fisttp
push
(bad)
pop
aaa
gs
push
push
pop
rol
cmp
dec
jno
call
and
std
shl
icebp
jnp
out
in
cmp
inc
dec
push
jo
mov
and
sub
mov
jne
sub
loopne
push
xchg
jp
das
mov
xchg
popf
pop
or
and
xchg
scas
fmul
push
pushw
pop
aad
stos
sahf
and
je
fs
jb
out
jp
popa
movs
jae
mov
jle
test
daa
add
fild
or
dec
mov
dec
shl
test
icebp
push
mov
sbb
mov
push
add
sbb
xchg
fadd
xchg
ins
or
sbb
or
jp
sbb
into
out
rep
lods
cmp
xchg
fs
add
cmps
dec
fild
enter
mov
frstor
pop
jmp
outs
test
xor
mov
and
dec
sbb
add
jmp
jbe
xor
lock
retf
cli
xor
dec
dec
adc
xor
imul
adc
lds
movs
mov
stos
mov
and
hlt
pop
mov
movs
mov
adc
bound
mov
scas
popf
mov
adc
adc
jecxz
mov
call
jmp
aam
mov
mov
fwait
jp
fnstsw
(bad)
sti
int3
out
stc
add
mov
stos
inc
or
nop
es
or
out
dec
pop
pop
xor
adc
sbb
jno
pop
xor
jl
lahf
scas
jo
arpl
out
adc
add
push
mov
pop
push
cmp
test
pop
dec
push
scas
jmp
std
adc
or
fcom
mov
mov
inc
xchg
scas
push
push
inc
sar
call
retf
cmps
hlt
and
sbb
gs
inc
push
mov
xchg
pop
scas
inc
push
and
add
clc
ret
jbe
std
pop
cmps
lods
xchg
inc
std
cs
adc
dec
cdq
jo
pop
lods
mov
or
mov
ja
jl
les
lods
mov
mov
fs
ja
push
mov
mov
dec
rol
inc
sar
ins
cmp
sub
ret
cdq
std
fisttp
xchg
loop
mov
call
mov
adc
sbb
jne
ja
cmps
xlat
(bad)
mov
add
push
dec
fwait
mov
mov
daa
push
(bad)
mov
aas
(bad)
or
add
dec
movs
mov
dec
xor
cli
je
fistp
push
dec
iret
(bad)
cmp
into
sbb
les
xchg
add
movs
add
(bad)
xchg
jae
popa
mov
shl
push
inc
pop
add
scas
inc
mov
and
inc
call
loope
adc
(bad)
test
mov
dec
out
fcompp
sub
dec
adc
jmp
inc
push
in
mov
add
pop
sbb
pop
adc
std
stc
xchg
je
call
dec
aad
mov
out
xchg
mov
push
cmp
ds
pop
push
pop
scas
jge
mov
rcl
outs
add
sub
mov
and
xor
mov
mov
fstp
mov
mov
mov
(bad)
popf
icebp
cmps
mov
retf
jecxz
retf
outs
shl
in
and
or
test
xor
ja
or
xchg
cmps
mov
aam
dec
mov
pop
pushf
mov
pop
dec
push
cli
outs
int
nop
pop
jp
movs
lods
fdivr
inc
fwait
jmp
or
mov
rol
pop
(bad)
retf
stos
into
mov
scas
and
dec
push
adc
or
ds
mul
sbb
(bad)
hlt
outs
fisttp
mov
repz
js
movs
out
jmp
lds
repz
out
pop
jns
(bad)
mov
gs
daa
jge
xor
dec
dec
mov
pop
sbb
xor
test
cmp
int
loope
mov
xor
gs
loope
dec
lods
xchg
ret
lods
inc
hlt
cmp
aam
mov
xor
cmc
and
mov
xor
aad
xchg
rol
adc
sub
adc
sub
jmp
mov
jg
hlt
jno
jno
dec
dec
or
lea
mov
int
adc
xchg
adc
pop
pop
cli
dec
sbb
mov
ret
out
clc
jmp
dec
push
push
and
into
xchg
jl
enter
cmp
add
jecxz
sbb
(bad)
loope
xor
xor
and
scas
je
std
jbe
or
mov
add
cdq
jp
mov
inc
std
cmps
push
and
cwde
sbb
jo
cmp
(bad)
ror
inc
jnp
aaa
push
mov
cmc
adc
sub
pop
stos
mov
sti
into
pop
retf
adc
push
js
cli
push
mov
sub
inc
xor
xor
and
jae
lock
clc
adc
mov
mov
push
sbb
add
jb
js
add
cs
mov
rcl
sti
sbb
push
in
sbb
test
mov
sahf
popf
aad
fld
inc
mov
inc
xor
inc
movs
in
out
mov
mov
cli
nop
icebp
mov
lds
and
sahf
jns
dec
sbb
xchg
mov
cmp
adc
mov
cmps
mov
xchg
fmul
dec
bound
ins
push
mov
pop
jle
add
cmp
push
and
xchg
dec
(bad)
pop
ret
mov
adc
int
mov
sbb
jbe
adc
neg
pop
ret
sub
movs
push
ficomp
in
cmps
jp
and
cmp
fdiv
push
mov
or
mov
xchg
call
sub
(bad)
stc
repz
call
push
xor
mov
ret
aad
in
ficomp
fs
ins
ja
inc
mov
ds
add
nop
hlt
push
(bad)
adc
not
pop
and
mov
cmps
leave
cmps
mov
jmp
add
mov
cmp
sub
clc
into
repz
popf
sahf
mov
test
dec
daa
xor
imul
push
ds
mov
cld
ins
push
rcl
push
fisub
adc
xor
arpl
repz
mov
pop
test
pop
addr16
lahf
into
cmp
ja
pop
shr
sar
sahf
mov
xor
jbe
aas
out
loope
push
push
mov
push
or
addr16
mov
push
mov
test
mov
repnz
dec
into
dec
adc
mov
test
mov
push
jmp
ror
add
outs
fld
mov
and
mov
lds
push
and
xor
loope
pop
rcr
sbb
xchg
imul
pop
fs
xor
xor
pop
and
ss
jo
ins
push
xor
and
sub
pushf
adc
or
or
xlat
push
mov
fild
cmp
repnz
inc
aad
xchg
loopne
test
pop
mov
enter
cmc
sub
add
arpl
jl
sbb
push
neg
sub
sti
mov
mov
add
mov
xchg
push
push
outs
ja
mov
(bad)
mov
lock
outs
hlt
sbb
pop
or
push
js
lea
xchg
push
pop
dec
jmp
jmp
inc
into
sbb
js
cs
or
mov
xor
scas
addr16
in
mov
ins
adc
jno
or
mov
ins
shl
jno
inc
and
cmp
iret
or
jmp
xor
inc
dec
ss
mov
cmp
cmps
add
inc
xchg
mov
pop
das
ins
ds
sub
outs
add
pop
or
jns
xchg
or
mov
jge
std
cld
icebp
mov
rcl
jecxz
stc
push
and
jp
mov
cmp
jle
sbb
scas
sub
xchg
loope
fild
sub
stos
or
mov
or
mov
jb
ins
inc
mov
push
ret
add
jge
inc
adc
mov
outs
jge
or
inc
mov
in
inc
jmp
push
pop
sbb
in
int
jl
push
test
cmp
daa
enter
cmp
lds
test
test
mov
mov
or
ret
ss
leave
pop
sbb
movs
mov
adc
ret
ror
outs
dec
pop
popa
sub
pop
in
jecxz
call
mov
and
fiadd
push
sahf
or
sub
mov
fst
sti
imul
std
jl
or
out
popa
sbb
test
xchg
test
dec
leave
mov
mov
push
mov
sub
fmulp
and
cmps
cmps
dec
xor
inc
movs
mul
push
jp
dec
adc
ss
ss
xor
in
cwde
call
mov
push
fadd
pop
rcl
mov
and
data16
data16
sub
mov
sub
into
mov
or
inc
mov
dec
mov
mov
dec
sbb
adc
sbb
mov
int3
ss
rcl
cmps
ja
pop
cmps
les
push
ins
inc
mov
mov
or
mov
fcom
lods
shl
fimul
(bad)
pop
or
adc
das
dec
inc
mov
cmc
cmp
movs
add
push
and
mov
test
out
or
movs
inc
retf
int
pop
mov
mov
outs
inc
mov
pop
xchg
mov
test
cmp
imul
je
xor
(bad)
sbb
repnz
xchg
cdq
jnp
cmp
and
aas
jge
mov
daa
xchg
jns
mov
addr16
lock
nop
iret
inc
fmul
xor
loope
push
sub
pop
add
jp
aam
push
adc
or
nop
lock
or
push
adc
push
imul
stos
fisttp
inc
jnp
movs
mov
enter
cmp
cmc
mov
shl
sar
sbb
lock
mov
inc
mov
xchg
(bad)
mov
vpshlq
not
jle
gs
cli
into
xor
mov
push
cmp
mov
mov
enter
(bad)
sbb
aas
and
(bad)
iret
into
pop
dec
inc
sub
cdq
das
sbb
aam
sub
xor
mov
mov
pop
push
dec
fmul
ror
push
mov
jp
nop
cmp
jbe
fsubr
sahf
push
jmp
sub
(bad)
mov
jecxz
pop
mov
mov
stos
scas
cdq
xchg
dec
movs
or
cmp
push
les
(bad)
push
mov
sub
test
cmp
(bad)
lock
xchg
sbb
xlat
push
mov
push
sbb
out
mov
out
mov
mov
sub
jae
js
jmp
push
test
lea
push
(bad)
ja
leave
pop
aad
popa
lds
loope
push
ret
jno
jle
cmps
les
popa
imul
pop
push
add
out
outs
adc
adc
fldenv
dec
call
sbb
xchg
dec
mov
jb
dec
xchg
pop
inc
adc
scas
cmc
dec
mov
xor
pop
cmp
jp
jae
popf
movs
mov
mov
mov
repz
fbstp
outs
jg
mov
stos
or
ror
shrd
sbb
arpl
popf
out
loop
sub
clc
rcl
xchg
in
frstor
dec
inc
mov
xlat
addr16
and
fild
(bad)
mov
popa
mov
icebp
(bad)
in
xchg
int
xchg
int
dec
dec
jbe
jnp
leave
ret
int3
es
jbe
jmp
mov
push
inc
(bad)
call
shl
lds
jl
xchg
add
cmp
sbb
je
xchg
add
adc
ret
mov
int3
cld
cli
add
xor
fisttp
mov
sahf
cmp
adc
jne
call
add
adc
mov
xlat
cmp
ins
imul
add
std
imul
push
dec
out
mov
xor
out
ins
mov
fist
dec
test
cmp
push
add
sbb
mov
mov
aas
mov
sbb
fstp
sub
xchg
lods
push
arpl
xchg
mov
pushf
test
int3
jb
sub
cld
or
inc
cld
bound
scas
hlt
clc
mov
sti
xchg
(bad)
stc
fstp
jnp
xchg
mov
ficomp
into
jno
(bad)
mov
add
and
jmp
mov
clc
lock
loope
add
je
and
cwde
fsub
inc
nop
in
add
gs
push
cmps
aad
cmp
add
fwait
inc
retf
hlt
loop
adc
retf
mov
and
push
xlat
repnz
and
cli
xchg
rcr
jecxz
fnstsw
fnstsw
aas
pop
inc
popf
mov
addr16
mov
push
cmp
out
in
lea
jp
xchg
jl
add
call
popf
cmp
xchg
mov
cld
retf
rcl
fadd
fild
or
sub
cmps
pop
sbb
jmp
mov
inc
out
jbe
outs
inc
jp
xchg
and
xor
dec
shr
xor
aas
xchg
cmp
shl
xlat
mov
vpsubq
sub
ret
std
leave
pop
add
leave
iret
sub
mov
ins
test
xor
rol
fistp
add
push
leave
div
sbb
jmp
lock
adc
mov
cmp
cdq
mov
sbb
cmp
out
loopne
sbb
dec
jecxz
pop
jno
shl
inc
mov
cli
inc
not
cmp
mov
mov
retf
popa
push
icebp
nop
clc
mov
dec
movs
sbb
jns
loope
mov
jns
and
ds
idiv
sub
mul
bound
push
or
jmp
xor
loopne
out
cdq
jmp
sub
xchg
dec
cmps
push
adc
pop
inc
sub
ss
jle
jbe
cmps
(bad)
inc
jg
mov
xchg
sub
mov
mov
retf
pop
fcomi
shr
push
push
or
shl
jno
aas
push
loopne
addr16
(bad)
call
sbb
add
ror
test
sti
clc
in
cwde
loop
jmp
pusha
cs
jmp
jmp
retw
int
in
push
push
mov
cli
mov
jb
int3
xchg
adc
int
mov
mov
mov
call
loope
iret
out
push
cmp
retf
fcomip
jp
int
shl
enter
dec
mov
xor
imul
xor
xchg
push
outs
pop
mov
pop
(bad)
cmp
rcr
mov
sbb
sti
ror
shr
mov
add
mov
iret
movs
push
xlat
fidivr
jo
jmp
lea
or
mov
sbb
sbb
adc
sar
adc
mov
addr16
add
sbb
mov
mov
fist
cmp
add
mov
(bad)
popf
cmp
inc
retf
cmp
adc
xor
inc
dec
aas
or
mov
mov
out
push
xchg
and
aam
fwait
mov
and
or
in
mov
outs
add
xlat
sbb
(bad)
pop
push
enter
or
sbb
outs
jmp
adc
mov
mov
loop
pushf
test
sub
dec
mov
jle
repnz
mov
xchg
icebp
cmp
in
or
hlt
or
fs
mov
and
ds
jp
fld
add
or
retf
pop
(bad)
lahf
dec
cld
pop
rcr
clc
outs
repz
ins
test
cs
xchg
inc
mov
fdivr
addr16
fcmovb
inc
cmps
and
retf
hlt
add
jmp
lods
cmp
leave
cmps
sti
fs
pop
sub
cmp
rcl
scas
daa
es
pop
shl
ficom
pop
add
add
cmp
push
push
outs
sbb
ins
pusha
fmul
hlt
pop
imul
test
or
push
repnz
adc
out
xchg
fmul
adc
(bad)
xlat
xchg
pushf
pop
in
enter
xchg
cmps
mov
gs
pop
repz
mov
test
in
jns
out
inc
mov
test
jnp
xchg
rcl
shl
data16
jge
push
add
test
dec
cwde
and
sub
mov
add
inc
rcl
sbb
mov
jb
ret
xor
push
pop
fisubr
jp
pop
icebp
xchg
fs
arpl
pop
iret
push
imul
out
ds
ficomp
mov
mul
xchg
xor
dec
sbb
fimul
xor
mov
and
cli
outs
test
and
xor
or
cmp
in
int
(bad)
mul
push
mov
push
mov
jg
cmp
add
or
jb
or
(bad)
pop
adc
aam
cmps
call
mov
push
movs
push
adc
or
push
inc
xor
mov
ficomp
sbb
add
push
xor
jmp
rol
push
sub
jmp
js
dec
pop
jns
cli
into
aam
sub
or
cmp
inc
test
cmp
xlat
ret
mov
sbb
sbb
jb
pop
test
hlt
inc
stos
lods
sub
pop
scas
test
push
inc
sbb
xlat
sahf
xor
movs
pop
add
mov
call
pop
sahf
xor
mov
jg
ror
jmp
lahf
mov
jmp
pop
xchg
pop
inc
jnp
into
add
leave
mov
cdq
out
in
xor
cmps
rcl
(bad)
xchg
xchg
xchg
or
test
push
pop
in
sub
push
mov
pop
in
ins
jecxz
ret
inc
cmp
ret
dec
clc
sub
stos
rcl
(bad)
sar
jl
mov
sbb
pop
ja
(bad)
jecxz
mov
jbe
or
out
cld
or
aad
cld
xor
xor
fstp
dec
stc
adc
movs
test
data16
adc
cmc
cwde
cmp
sbb
and
call
rol
push
add
sub
push
push
cmc
push
jmp
inc
imul
jnp
cs
push
sub
and
lea
xchg
cmp
mov
pop
push
neg
jo
ins
sbb
repz
xlat
and
xor
jb
jmp
(bad)
sbb
mov
ja
lahf
shl
dec
xchg
xchg
mov
ja
popf
lods
sbb
jmp
test
loopne
sub
adc
jge
dec
or
add
push
add
pop
xor
aam
cmps
aad
in
daa
adc
sbb
ret
cmp
sti
dec
pop
loop
pop
cdq
into
pop
mov
mov
movs
in
cdq
push
sar
lahf
clc
cmp
adc
pop
mov
es
stos
sbb
out
popa
sub
dec
daa
adc
and
call
push
scas
jl
pop
mov
rol
mov
scas
rcr
adc
dec
(bad)
mov
movs
pop
daa
test
jnp
jge
add
and
pop
push
(bad)
cmps
mov
mov
xlat
pop
pop
jbe
xchg
hlt
xchg
cmp
popa
loope
mov
pushf
and
test
enter
xchg
gs
out
ja
xchg
ins
std
shr
inc
cdq
test
je
add
pop
mov
jo
mov
popf
in
cwde
mov
fldcw
retf
rcr
adc
out
xchg
test
sbb
test
inc
sub
xchg
dec
aad
jno
out
test
or
push
cmp
mov
mov
jecxz
adc
push
pop
movs
sahf
repz
test
(bad)
sub
pop
mov
test
fs
popa
or
out
call
mov
lahf
mov
pushf
jbe
mov
xchg
mov
pop
ins
stos
inc
loopne
outs
ss
xor
rol
dec
xchg
cld
or
adc
jae
movs
add
add
mov
jmp
aas
rcr
daa
in
and
or
sbb
mov
xor
clc
inc
sbb
ins
stos
sub
sbb
(bad)
(bad)
cli
sbb
rol
call
push
push
pop
adc
push
jae
cmp
rcl
mov
mov
jg
leave
in
shl
aam
sub
mov
dec
bound
popa
ds
hlt
cli
mov
adc
inc
lds
sbb
cmp
inc
dec
or
stc
xchg
mov
push
jecxz
ins
pop
fdivr
jno
shr
in
(bad)
mov
int
xor
push
add
cmc
inc
loopne
lahf
xchg
pusha
or
push
mov
pusha
inc
aam
xchg
mov
push
mov
icebp
cmp
inc
cmp
fimul
mov
mov
push
mov
mov
repz
push
add
add
mov
adc
retf
mov
sub
fisubr
ja
int3
jle
xlat
add
nop
dec
push
mov
add
ja
daa
dec
pop
mov
(bad)
fnsave
test
mov
push
std
repnz
fucomip
neg
xchg
pop
push
(bad)
rcr
and
mov
cli
leave
inc
push
sbb
adc
fmul
push
jmp
mov
jecxz
push
jb
stos
in
and
xor
xchg
jns
push
popa
into
ret
mov
mov
push
in
cmp
dec
jae
add
psubb
mov
scas
mov
retf
push
lock
fcom
gs
popa
lds
cmp
mov
sub
xor
jnp
sub
test
push
dec
jl
aam
out
cmp
lods
pusha
xchg
outs
xchg
adc
shl
and
hlt
push
push
xor
movs
pop
or
lods
aas
pop
mov
shr
add
mov
inc
push
adc
push
add
push
cwde
xlat
mov
or
pop
adc
(bad)
in
push
out
leave
loop
loop
in
not
or
icebp
xchg
icebp
xchg
add
sbb
enter
aaa
outs
and
xchg
sbb
sbb
mov
cmc
cmp
hlt
inc
iret
hlt
cmps
outs
rcl
je
and
push
xlat
adc
mov
jb
push
jae
ret
push
cmp
add
test
cli
dec
mov
add
addr16
cmp
call
adc
mov
sub
fisttp
mov
iret
mov
push
jmp
fld
js
jl
sbb
pushf
daa
and
add
pop
cmp
mov
pop
xchg
fisttp
pop
xchg
imul
call
mov
adc
jae
mov
push
jl
mov
pop
xchg
aam
test
mov
shl
or
xor
call
push
out
in
jbe
icebp
repnz
cwde
add
push
add
repnz
mov
jge
jae
lock
xchg
inc
jmp
scas
je
sub
or
ret
adc
shl
jg
pop
mov
outs
aad
int3
mov
data16
lea
(bad)
pushf
lahf
jecxz
pavgw
or
pop
js
jmp
mov
std
sar
test
add
ret
sub
inc
or
clc
push
jo
jge
stos
add
sbb
pop
stos
icebp
in
std
adc
frstor
cmp
rcl
jb
cs
int
mov
cs
mov
mov
jmp
push
inc
sti
jae
mov
push
xor
outs
sbb
les
xchg
loop
mov
jne
sub
or
adc
outs
push
jge
or
fistp
rcl
mov
loope
xchg
ins
pop
inc
mov
popa
jecxz
mov
push
push
cdq
ret
jl
xchg
jo
ret
inc
mov
pop
ja
sbb
and
xchg
sub
cmp
jecxz
xchg
xchg
mov
and
mov
mov
hlt
mov
out
push
lock
jns
rep
xor
rcl
push
jge
ror
mov
in
sub
pop
jmp
stos
push
mov
pop
data16
xchg
cld
xchg
jae
call
pop
dec
cmps
bnd
sbb
popa
leave
jmp
cmps
and
(bad)
retf
lahf
cmps
mov
retf
fidivr
sti
pop
inc
jno
and
jae
shr
sub
(bad)
hlt
jle
and
cli
rcr
bts
(bad)
leave
mov
and
pop
xchg
call
loope
push
fcmovnu
pop
inc
rol
fbstp
pop
into
push
scas
cmp
int
ret
lds
jno
jns
lods
es
ja
ror
ficom
(bad)
push
add
push
leave
adc
push
push
fwait
hlt
mov
stos
cmps
ds
sub
cmc
pop
push
xchg
pusha
les
pop
stos
cs
push
leave
xchg
jo
mov
cmc
ins
(bad)
jp
sbb
les
mov
retf
test
mov
leave
jne
mov
les
jmp
add
xchg
stos
loope
leave
cwde
cdq
loop
pop
rcr
jmp
sahf
in
test
inc
jl
xchg
jmp
ds
js
xchg
or
call
mov
jae
push
cs
ja
fcmovu
inc
pusha
cli
mov
ret
not
in
adc
push
add
and
jmp
jmp
bound
push
sbb
shl
and
ret
lea
(bad)
mov
push
xchg
push
jns
jo
out
push
fwait
sub
adc
xor
lea
inc
add
pop
(bad)
adc
add
adc
xchg
arpl
daa
add
xor
xor
sub
mov
mov
repnz
cld
or
inc
mov
mov
and
test
xor
mov
mov
pop
cmp
scas
imul
jle
stc
push
lock
mov
clc
mov
les
adc
lds
call
retf
mov
pusha
fdiv
fstp
repnz
xchg
enter
mov
mov
mov
or
and
test
mov
push
cmc
sub
(bad)
pop
adc
jmp
xchg
dec
xchg
mov
icebp
add
lea
jg
push
mov
xor
dec
xchg
xor
jnp
sub
and
jge
fisttp
sbb
mov
scas
cs
test
adc
sbb
push
jno
sbb
and
ins
cld
mov
loopne
fistp
test
and
adc
gs
ja
mov
movs
adc
xlat
movs
pop
pop
cmp
out
inc
out
pop
mov
push
mov
dec
mov
fs
add
stos
dec
adc
ret
jmp
(bad)
popf
xor
(bad)
jns
push
mov
jns
mov
add
iret
cld
out
sbb
leave
inc
fstp
out
imul
pusha
cs
add
cmp
cli
rol
mov
cwde
data16
dec
push
pop
cmps
sbb
ins
dec
mov
test
cmc
mov
inc
ss
int3
or
mov
jo
jmp
out
inc
add
bound
inc
pop
enter
sbb
in
pop
xor
xor
adc
jo
test
out
sti
pop
cmp
or
cld
scas
jecxz
jl
stos
xchg
xchg
enter
data16
fsub
and
add
test
shl
mov
mov
mov
xchg
fdivr
fprem1
add
pusha
jg
xchg
and
xor
movs
test
rcl
sti
xor
call
stos
loopne
or
and
inc
aam
addr16
inc
aad
cmp
jp
rol
mov
das
dec
ficomp
outs
lahf
mov
add
mov
mov
cmp
rol
aaa
stos
call
mov
test
mov
dec
aas
sbb
push
adc
mov
mov
pop
aad
repz
push
repz
dec
or
fimul
mov
or
movs
lds
test
lahf
aas
ss
sbb
mov
es
shl
jbe
lds
dec
push
outs
xor
sub
or
popf
mov
test
aam
shl
fistp
pop
sbb
mov
loope
mov
movs
int3
call
mov
mov
dec
jp
push
sub
pop
retf
jns
jo
dec
cmp
lahf
sar
jae
iret
mov
pop
shl
mov
jle
lods
adc
popf
xchg
dec
in
es
xchg
fcomp
mov
ja
sbb
in
shr
cwde
sbb
movs
nop
sar
xchg
shl
pop
push
daa
sbb
fdivr
mov
mov
pusha
pusha
xor
nop
or
sub
push
std
loop
call
arpl
jne
clc
mov
outs
js
jnp
xor
adc
xor
push
adc
ins
mov
ins
int3
lahf
outs
sbb
push
mov
test
mov
push
fdivr
pop
lock
pop
sub
or
ffreep
xchg
add
sub
(bad)
retf
lods
out
and
add
lds
xor
xchg
push
push
push
inc
ss
and
out
jnp
xchg
inc
fwait
cmps
jecxz
repz
pop
test
(bad)
fldenv
clc
xchg
das
push
xchg
mov
jne
xchg
ret
inc
outs
push
stos
cmps
adc
rcr
fmul
lods
imul
sub
(bad)
sbb
out
(bad)
ss
aam
pop
jne
int
mov
adc
inc
push
xchg
loopne
fcmovu
inc
or
test
ret
enter
cli
push
mov
sub
loopne
add
xor
adc
mov
sbb
outs
inc
jp
xchg
repnz
or
mul
and
sub
xchg
out
fdivr
xor
push
fimul
sub
addr16
dec
dec
sub
ret
jl
pop
inc
sbb
daa
or
lods
pushf
setae
jns
shl
outs
lahf
pushf
or
std
cmp
(bad)
das
mov
xor
or
mov
pusha
in
mov
sti
cld
and
retf
cmp
mov
inc
cmp
fdivr
or
fnstsw
cmc
sub
mov
lea
mov
xor
jg
dec
(bad)
jb
enter
cmp
jecxz
nop
into
sub
push
xchg
(bad)
test
add
dec
and
cmpxchg
fs
jmp
(bad)
loop
mov
mov
mov
dec
add
int
fidivr
pusha
or
and
repnz
lds
or
stos
lock
or
pop
in
clc
sbb
sub
clc
push
pusha
mov
cld
aam
ret
mov
ret
push
jmp
in
in
jnp
pop
ror
push
mov
rcr
lahf
jl
mov
mov
out
cmc
retf
arpl
fsubr
ins
or
add
mov
mov
push
pushf
call
push
in
js
cdq
cwde
imul
sbb
js
clc
aad
dec
mov
mov
sbb
jne
sar
lahf
es
fwait
push
mov
icebp
cld
inc
push
push
add
rcl
(bad)
int
int3
(bad)
sar
cmp
sub
(bad)
push
add
retf
cmp
xor
imul
stc
mov
mov
leave
push
and
and
adc
ret
aaa
lods
ja
or
pop
mov
outs
sub
xchg
std
out
adc
aad
or
pop
movs
and
popa
(bad)
(bad)
adc
std
mov
mov
jmp
daa
inc
push
ficom
dec
sbb
push
inc
mov
cmp
call
sbb
mov
ret
xchg
mov
mov
int
fild
jmp
addr16
pop
jg
call
cmps
pop
push
add
(bad)
dec
and
ins
jnp
pop
mov
into
cdq
lea
fs
popf
adc
mov
mov
fsubr
ss
aam
stos
add
xor
xchg
pop
fadd
loope
lahf
repnz
pop
movs
cmp
pop
push
ret
cmc
mov
fst
iret
xchg
daa
push
in
pop
shl
dec
jo
pop
sbb
dec
es
popa
fwait
in
or
mov
add
in
pop
dec
std
add
inc
stos
ret
cmp
xchg
(bad)
ins
inc
int3
out
(bad)
pop
ret
pop
int3
loope
retf
cmp
das
xor
ffree
xchg
lods
jl
sub
lea
cwde
stos
mov
mov
sub
inc
inc
mov
loop
xlat
inc
inc
ss
loope
and
cmp
test
inc
jns
ins
mov
and
mov
mov
icebp
lea
sub
adc
fcomp
mov
sbb
dec
push
mul
(bad)
call
add
(bad)
push
xchg
pop
pop
add
out
sbb
jle
test
sbb
iret
adc
mov
fs
fwait
and
push
push
mov
pop
inc
dec
mov
fistp
mov
in
stos
jle
out
jecxz
mov
aaa
shl
mov
jg
out
loope
rcr
xor
mov
push
adc
rol
jge
ins
xor
popf
push
frstor
outs
inc
arpl
ficomp
xchg
addr16
lock
imul
pop
cs
pop
ficom
data16
ret
jle
jecxz
jbe
sub
sbb
rcl
push
mov
adc
mov
std
popa
mov
mov
mov
aas
add
ror
movs
xor
and
push
jle
fistp
jmp
mov
or
jne
in
test
dec
out
xlat
jge
cmps
lahf
mov
sbb
nop
mov
pop
xchg
sbb
jb
jbe
jmp
call
stos
xor
cmp
retf
movs
jmp
mov
ds
(bad)
(bad)
(bad)
loopne
mov
test
nop
xchg
popa
fst
scas
adc
lea
cs
das
std
addr16
and
jbe
call
mov
sahf
mov
popf
cld
or
nop
mov
mov
push
push
adc
mov
iret
xor
cmp
(bad)
lods
arpl
inc
add
stc
sub
test
xchg
test
nop
call
push
inc
or
xchg
push
loope
ds
cmp
inc
pop
xchg
in
xor
les
shl
inc
mov
(bad)
call
test
rcl
sbb
pop
fadd
push
mul
inc
popf
loope
bound
mov
popa
pop
fmul
dec
lds
(bad)
or
cmp
jp
scas
sar
xchg
dec
or
xor
fwait
into
sti
or
cli
test
out
loopne
cdq
xor
sbb
test
int3
iret
aam
aas
adc
ret
jmp
pop
mov
mov
adc
xchg
cmp
test
movs
xor
repz
push
and
inc
jne
jne
outs
dec
loopne
test
test
pop
call
xor
int3
out
outs
fist
repz
int
dec
int
push
pop
data16
mov
(bad)
and
pop
or
xor
and
popa
cmove
dec
xchg
cmps
xchg
gs
pop
test
fwait
add
fucomi
addr16
inc
lods
dec
add
fidivr
cmp
mov
(bad)
sbb
inc
xchg
jecxz
pop
jl
adc
pop
je
jb
sbb
and
fs
push
mov
fs
in
jg
or
xlat
test
mov
data16
(bad)
mov
outs
sti
cmps
push
mov
cmp
xor
ja
es
aaa
daa
add
adc
clc
cmp
push
imul
xchg
nop
xchg
pop
pusha
in
mov
fsub
shl
jne
push
xor
ds
push
add
call
xchg
cwde
int3
cmp
and
mov
stc
fninit
fstp
loopne
fisttp
movs
out
aas
dec
jg
lds
sbb
int
mov
out
addr16
cld
jae
xchg
test
xchg
mov
lea
scas
gs
mov
xchg
xchg
and
shr
inc
dec
and
inc
inc
daa
jne
hlt
imul
inc
je
push
mov
jo
cdq
loop
imul
cmps
adc
arpl
mov
test
shl
dec
test
adc
adc
cmp
call
mov
or
xor
mov
xor
add
loop
fst
(bad)
pop
ret
or
movs
stos
mov
jb
or
mov
or
fist
xchg
lods
push
jnp
and
out
or
repz
out
push
sbb
push
jl
inc
lds
mov
jo
jp
sbb
xchg
rcl
xchg
inc
in
ss
hlt
xchg
mov
pop
jge
add
sahf
or
add
inc
xchg
cmp
pusha
call
or
pop
rep
jae
outs
jge
adc
cmp
jae
bnd
fiadd
or
data16
mov
inc
mov
dec
mov
repz
push
test
(bad)
cmp
ds
fcomp
arpl
sbb
ja
aas
pop
test
dec
mov
pop
xchg
and
loop
movs
es
bound
pop
pop
jno
pop
sub
xchg
jmp
push
imul
xchg
push
xor
enter
mov
sti
or
inc
rcr
pop
and
cdq
loop
fwait
xlat
test
into
adc
xchg
stos
mov
inc
test
shl
adc
push
out
dec
(bad)
xlat
prefetchw
xor
sbb
xchg
enter
jge
push
pop
jb
sub
xchg
cmp
inc
cmc
in
adc
sub
or
adc
movs
movs
mov
loopne
mov
dec
(bad)
call
mov
inc
in
or
lahf
xchg
jecxz
lock
jmp
out
push
ja
out
sub
dec
adc
lods
cld
mov
add
pop
or
iret
dec
rcl
rcl
adc
int
cmps
push
test
add
push
shl
pop
or
xchg
cmp
icebp
push
test
inc
inc
cmp
and
(bad)
es
int3
inc
popf
sub
jp
ss
jnp
xchg
mov
inc
(bad)
push
lods
or
hlt
ret
test
xor
sbb
xchg
and
hlt
sbb
jbe
xor
aad
hlt
mov
or
ss
dec
loope
(bad)
ins
fstp
push
shl
pop
xchg
jne
adc
out
fcmovu
out
cli
jg
jne
scas
mov
xchg
jg
push
bnd
scas
mov
push
(bad)
mov
mov
rcr
lahf
cli
clc
and
mov
loop
movs
out
mov
xor
pop
inc
pushf
imul
sub
or
leave
loopne
cmp
mov
retf
shl
je
and
out
fstp
add
cld
dec
or
(bad)
xor
in
inc
or
sbb
mov
aam
(bad)
ins
or
mov
adc
pop
call
inc
or
push
repz
stos
adc
inc
popf
sub
(bad)
xchg
xchg
sbb
test
gs
xor
enter
and
xor
(bad)
cmp
push
es
loope
mov
imul
lods
pop
addr16
mov
shl
push
sub
jo
dec
les
push
mov
mov
mov
iret
loop
and
mov
and
ins
xchg
pop
mov
retf
loope
dec
mov
xchg
or
xor
and
daa
and
hlt
out
fsub
ja
clc
xor
fxch
data16
fwait
xchg
fisubr
fmul
imul
out
dec
arpl
shl
aaa
xor
int3
and
jmp
int3
aaa
cmp
addr16
and
scas
inc
push
add
rcl
and
add
sub
jecxz
call
xor
xchg
scas
in
mov
sbb
sbb
xchg
out
call
les
fisub
mov
push
mov
pop
dec
mov
retf
outs
inc
into
dec
xchg
sahf
jo
sbb
je
loope
xchg
(bad)
das
add
popf
inc
popa
jecxz
cmp
mov
fldcw
movs
not
cmp
ret
mov
arpl
pop
test
leave
addr16
loopne
dec
mov
sar
shl
xor
mov
repz
xchg
adc
lods
ret
add
dec
lods
mov
pop
call
and
jle
add
stos
adc
std
push
and
ss
lods
cmp
mov
cmc
and
arpl
jge
jmp
cli
xchg
jns
dec
push
jecxz
mov
clc
mov
loop
mov
adc
stc
fwait
inc
cwde
mov
imul
repnz
stc
push
std
cmp
cmc
dec
inc
mov
pop
ins
or
sbb
or
scas
mov
dec
cwde
pusha
xchg
rcl
jmp
adc
mov
test
xor
popa
push
or
adc
sub
mov
addr16
mov
enter
lea
jnp
int3
jb
inc
int3
ret
push
mov
sub
pop
call
mov
pusha
(bad)
scas
test
retf
and
lods
push
rcr
and
in
add
mov
jge
jmp
mov
mov
fdivr
pop
adc
jb
mov
out
jp
pop
sub
jns
jo
movs
aam
dec
inc
sbb
cli
lock
das
out
mov
lea
shl
gs
fidiv
adc
push
sbb
call
jo
retf
cmp
icebp
xor
das
fmul
pop
jo
add
jecxz
inc
cmp
jbe
sub
int3
retf
pop
jbe
inc
out
ror
fdivr
clc
inc
in
mov
rcl
(bad)
les
daa
pop
inc
(bad)
jl
mov
seto
add
fmul
jbe
cmp
and
ja
test
sub
inc
xor
stos
out
sub
push
lahf
mov
mov
pusha
ret
sub
jo
mov
push
shr
cmp
sub
inc
sbb
into
daa
das
out
and
pop
pop
out
xor
xor
les
adc
pop
sti
and
sub
loope
test
or
mov
jl
add
jmp
sbb
pop
shl
ficom
stos
out
mov
ins
pop
mov
and
loope
mov
adc
inc
test
test
pop
punpckhdq
aas
mov
sbb
cmp
or
push
(bad)
xchg
and
je
pop
fdivr
cmps
jge
fldcw
add
std
shl
cld
scas
pop
jg
mul
loope
out
and
cmp
adc
xor
(bad)
in
push
repz
dec
sbb
push
mov
pop
pop
ja
push
xchg
mov
adc
retf
xchg
enter
push
(bad)
vfrczsd
sbb
and
cwde
cdq
push
ds
call
sbb
enter
jno
push
gs
mov
fcomp
outs
outs
leave
into
pop
sbb
add
out
mov
cmp
loope
dec
outs
call
dec
ret
(bad)
sbb
shr
mov
inc
dec
js
in
rcl
rol
add
mov
mov
push
xor
xor
pop
leave
dec
inc
adc
clc
jmp
pop
js
jl
jo
add
jb
push
aaa
ror
addr16
rol
pop
sbb
jbe
hlt
pop
mov
mov
or
jnp
out
imul
cs
hlt
sbb
enter
xchg
fst
dec
in
dec
dec
pop
sub
cmp
test
mov
mov
addr16
or
add
enter
lds
out
inc
sub
mov
aad
mov
jo
lods
adc
imul
or
pop
bound
mov
add
(bad)
outs
sbb
mov
push
icebp
mov
imul
xor
popf
nop
mov
push
add
imul
daa
lods
sbb
lock
jnp
ror
xor
adc
cmps
mov
push
xchg
int3
sahf
fs
andps
pop
dec
mov
dec
lods
retf
push
sahf
mov
in
mov
add
bound
push
inc
dec
mov
jp
sti
rep
dec
es
dec
daa
in
addr16
lds
jle
scas
adc
ds
ja
sbb
lahf
push
fs
jmp
mov
xchg
stos
ins
aam
clc
cmp
fadd
mov
inc
mov
test
loop
jns
aaa
leave
add
jne
nop
call
mov
xchg
mov
sti
push
sub
rol
and
pushf
and
mov
addr16
aam
mov
popf
xchg
xchg
push
and
cmp
sub
push
fsub
es
push
outs
inc
(bad)
lods
mov
shl
cld
sub
pop
imul
gs
add
xchg
jl
arpl
inc
cmp
scas
inc
push
push
sub
cmp
dec
retf
fwait
je
sub
out
cmp
push
and
retf
dec
mov
sub
jmp
popa
jecxz
and
xchg
(bad)
js
sar
into
and
test
scas
sub
mov
mov
push
add
jp
xchg
adc
ret
cmps
lods
(bad)
gs
neg
popa
out
jmp
adc
scas
jno
out
pop
pop
pop
push
sub
ror
pop
addr16
mov
fwait
mov
sar
mov
pusha
ret
mov
fcom
jmp
arpl
mov
inc
mov
sub
retf
cli
add
mov
push
gs
in
lods
sar
cmp
mov
xchg
sub
stos
inc
popa
xchg
scas
mov
stos
xor
or
scas
or
mov
jg
icebp
or
test
fadd
adc
out
dec
movs
jne
jge
mov
and
xchg
push
test
inc
add
repz
pop
and
aad
xchg
push
out
lods
in
sub
mul
aas
retf
sbb
retf
(bad)
je
cmc
push
out
mov
adc
data16
icebp
or
aaa
xchg
mov
fadd
cmp
or
repz
jnp
jae
push
cs
retf
movs
dec
cmps
clc
xor
retf
inc
pop
in
(bad)
scas
ds
imul
and
inc
push
jl
data16
mov
enter
pop
sbb
clc
and
int
xor
push
mov
sub
adc
icebp
push
jo
sbb
jne
aad
jmp
dec
arpl
lahf
push
sbb
fnstcw
loop
cmps
pop
and
les
cwde
push
das
push
jmp
inc
dec
dec
fdivrp
dec
ins
adc
vdivps
aaa
push
cmps
pop
sub
pop
jg
xchg
mov
fwait
and
aas
arpl
sahf
inc
xchg
and
push
dec
nop
ror
sahf
es
(bad)
cvttps2pi
(bad)
jb
mov
setno
sub
mov
cmps
ds
xlat
pop
lods
or
ins
daa
rcr
inc
std
inc
push
loop
jle
cs
add
ja
adc
pop
mov
mov
inc
fs
dec
repnz
push
jns
xor
and
jb
jp
push
sub
leave
jo
dec
xchg
pop
int3
arpl
jge
cmc
xchg
cmp
(bad)
je
ja
mov
neg
pop
mov
out
imul
fs
dec
pusha
std
scas
pop
mov
fisubr
rcr
adc
aad
sbb
mov
arpl
jne
cmc
sahf
mul
pop
xor
movs
iret
push
xor
je
dec
sub
out
retf
movs
(bad)
jmp
pop
mov
fisttp
int
(bad)
dec
cmps
cmp
icebp
cmp
arpl
cmp
mul
pop
xchg
call
jmp
push
arpl
sbb
sub
loop
pop
jecxz
hlt
(bad)
rcr
je
pop
and
inc
push
rol
and
jmp
dec
outs
xor
imul
jmp
inc
in
lock
cmp
ins
xchg
jae
repnz
inc
cmp
ror
ret
mov
repz
imul
cmp
mov
jge
ja
outs
cmp
stos
and
and
stos
push
outs
pop
adc
stc
xchg
push
push
dec
repz
cmp
xchg
ret
stos
xor
imul
push
ror
mov
mul
ins
pop
and
adc
repz
scas
mov
push
mov
ja
cld
and
mov
loopne
lods
cmp
xchg
adc
lods
sub
and
cmp
cmp
adc
xchg
push
xor
test
sbb
pop
popa
(bad)
xor
push
arpl
retf
sub
mov
mov
(bad)
fcmovu
xor
dec
std
sbb
dec
push
es
and
or
jae
mov
jnp
aam
push
push
pop
mov
hlt
outs
cwde
aad
or
into
js
mov
test
ret
sub
int
loop
call
int3
push
jno
adc
fild
jmp
test
out
inc
mov
cmp
jb
(bad)
fisub
ds
inc
cs
pop
psubq
hlt
xchg
fadd
scas
jnp
nop
pop
fisttp
fimul
mov
movs
scas
or
stc
cmps
sahf
stc
test
add
dec
dec
outs
pop
lea
cmp
shl
push
retf
inc
sub
arpl
aaa
add
pop
into
(bad)
adc
lea
jno
jl
clts
lods
inc
fidiv
loop
test
inc
ret
ret
cmp
lock
imul
xor
pop
sbb
icebp
cli
dec
cmp
je
sub
xchg
xchg
sub
jmp
xor
and
xor
cld
mov
xor
sar
pusha
mov
inc
adc
cmp
ds
fmul
mov
jo
add
mov
sbb
popa
cwde
pop
in
scas
les
mov
enter
cmps
mov
js
fstp
mov
xchg
mov
repz
shr
xor
ins
das
add
dec
add
stos
test
shl
in
scas
and
push
or
mov
pusha
stos
aam
push
jb
cli
jp
pop
enter
cmc
inc
mov
nop
cmp
sub
adc
jmp
inc
pushf
pop
xor
fidiv
mov
adc
ret
or
into
cli
push
and
pop
ror
je
ss
add
push
out
adc
daa
in
stc
rcr
les
jo
adc
fwait
pop
dec
dec
int
mov
ret
push
push
stos
sbb
push
int
imul
add
dec
cmps
xor
push
adc
into
xchg
mov
clc
out
ds
xor
(bad)
fsub
pop
sbb
(bad)
cli
mov
sub
jl
mov
sub
scas
pop
shl
adc
cli
pop
jb
mov
ds
dec
dec
or
(bad)
and
cmp
test
inc
pop
movs
mov
or
pop
add
xor
js
and
mov
(bad)
xor
nop
pop
add
lds
push
jnp
xor
loope
rcr
inc
add
jecxz
adc
std
jg
sub
sbb
mov
mov
cmp
movs
xchg
loopne
stos
add
mov
shr
(bad)
arpl
push
outs
dec
inc
xor
clc
add
loop
mov
mov
pop
not
cwde
mov
push
mov
jae
cmp
add
jnp
popf
fst
xchg
out
push
sub
mov
add
loopne
sar
xlat
xor
outs
(bad)
iret
mov
cdq
mov
out
inc
dec
push
popa
jmp
and
xor
sub
sbb
pop
mov
int3
or
or
inc
mov
fdiv
cli
fadd
xchg
or
sub
hlt
jne
es
fistp
and
cwde
xchg
rcl
push
mov
and
(bad)
jl
ficomp
xor
or
cwde
inc
or
mov
xchg
cmp
sahf
loopne
mov
cmp
push
scas
ret
pop
mov
out
outs
fwait
jo
xchg
aad
scas
js
xchg
mov
mov
sub
aas
mov
push
sar
ror
aas
into
and
mov
(bad)
mov
jo
xor
(bad)
xor
jle
jmp
scas
dec
dec
mov
stos
add
and
mov
(bad)
mov
ins
fsubr
(bad)
cld
out
imul
push
out
imul
cmp
pand
mov
push
add
call
js
and
inc
ja
shl
dec
lods
inc
retf
lds
(bad)
repz
cmps
int
scas
push
push
int3
movs
jl
call
js
jp
or
lods
xor
outs
mov
dec
jns
dec
cmove
dec
jns
sub
or
push
push
scas
fld
sar
test
push
test
gs
dec
fs
inc
push
test
pusha
clc
sub
retf
and
push
sub
pop
add
inc
xchg
dec
scas
and
adc
out
and
(bad)
cli
retf
mov
fisub
pushf
push
retf
retf
je
leave
add
loop
cmps
movs
(bad)
jmp
mov
mov
jns
fcomp
dec
inc
dec
push
lock
jecxz
or
bound
fucompp
xchg
jae
out
out
cmp
lds
ud0
pop
mov
mov
repz
(bad)
xlat
sub
mov
bound
pop
cli
inc
mov
and
stos
lahf
scas
add
movs
rcr
fimul
or
sub
pop
push
pop
cli
push
pop
fisub
xchg
(bad)
stos
xor
test
ret
imul
dec
jge
out
ret
stc
dec
or
and
out
popa
sbb
popf
and
cmp
xchg
adc
cli
mov
je
daa
cld
icebp
jmp
or
stos
jge
mov
daa
add
leave
jge
mov
sti
in
xor
push
cs
loop
pop
cmp
stc
imul
cs
cmp
sbb
ret
cmp
push
fcmovu
jae
fild
sub
mov
fnstsw
nop
and
add
sbb
cmp
test
fcmovnbe
cmp
dec
cs
arpl
sbb
in
mov
test
cmp
and
adc
rcr
shl
fs
sbb
xchg
in
add
int3
out
sub
add
outs
xchg
fild
inc
push
cmp
xchg
aaa
xchg
mov
and
fld
ins
pmulhw
adc
cmps
mov
adc
cmps
scas
push
sub
test
addr16
imul
mov
inc
call
test
rcl
mov
aaa
in
mov
mov
out
push
addr16
pusha
js
xchg
mov
pop
mov
es
test
inc
in
ror
sub
push
inc
stos
pop
in
xchg
and
xchg
xchg
and
(bad)
fld
iret
mov
inc
in
cmp
mov
xor
mov
jl
dec
aaa
sbb
neg
dec
mov
loope
inc
xor
jae
push
movs
jl
mov
push
bound
inc
popf
(bad)
mov
mov
vmovdqa
les
mov
or
xchg
aas
(bad)
xor
jne
imul
stos
sbb
jg
lods
mov
sbb
adc
pop
mov
jge
xor
mov
loop
retf
mov
push
sbb
shr
stos
fwait
lea
call
cdq
nop
and
rol
push
test
leave
call
dec
in
in
push
adc
ja
lods
adc
sub
fsubr
sbb
dec
stc
inc
rcr
sar
cdq
mov
or
mov
sbb
les
cdq
ret
imul
xchg
pop
mov
jne
pop
inc
dec
inc
fwait
sbb
dec
sbb
xchg
in
(bad)
and
repnz
add
movs
mov
add
mov
and
scas
stc
enter
pop
or
mov
pop
xor
sub
sti
outs
(bad)
arpl
sub
adc
fsubr
dec
(bad)
stos
add
or
cwde
xchg
pop
push
ins
popf
cmp
add
sub
clc
xchg
pop
dec
leave
dec
adc
mov
fiadd
test
sbb
in
sbb
loopne
pop
test
fcom
(bad)
sub
jb
xchg
or
dec
push
dec
jno
hlt
bound
xchg
cmp
mov
xor
lds
mov
out
xor
rcr
xchg
into
mov
jns
and
popa
jecxz
sar
or
jmp
sub
cdq
repz
cld
inc
sub
aam
dec
je
cli
pop
inc
push
or
xchg
call
iret
xchg
xchg
repnz
cmp
xchg
xchg
dec
jb
out
call
(bad)
jecxz
mov
repz
cmp
out
int3
fnstenv
mov
outs
cmps
addr16
mov
cwde
das
cmp
icebp
or
jecxz
adc
inc
sub
in
cld
dec
stos
pop
mov
mov
pop
sub
add
inc
add
cmc
mov
cmps
cmp
push
ficom
loopne
push
retf
(bad)
inc
imul
jge
xchg
cmp
les
cmc
mov
test
stos
jne
retf
mov
and
aam
aam
pop
and
ror
dec
or
(bad)
lods
ret
xchg
jecxz
adc
sahf
pop
in
push
(bad)
clc
movs
push
jae
sbb
dec
add
stc
ss
push
push
mov
stos
pop
inc
cmp
retf
xchg
and
dec
pop
mov
(bad)
ja
cmp
test
clc
lds
mov
cmp
inc
jb
popf
sub
loopne
hlt
rcl
jle
adc
test
pop
and
test
and
imul
and
cs
pop
enter
pop
xchg
push
in
mov
push
fistp
(bad)
out
lahf
(bad)
lock
ja
mov
neg
sbb
xor
inc
std
int
sti
retf
pop
out
dec
sub
xchg
lahf
mov
mov
pusha
hlt
sub
outs
das
dec
push
dec
sbb
leave
call
bound
loopne
aam
lahf
(bad)
(bad)
loopne
mov
push
or
mov
xchg
mov
psraw
cld
push
mov
nop
sub
inc
arpl
ret
cmp
popa
mov
xchg
or
xchg
ins
xchg
mov
jl
jg
gs
rcr
out
adc
sahf
fs
in
ror
dec
pop
fld
jge
pushf
sbb
inc
mov
lahf
cmp
or
es
(bad)
loope
je
idiv
push
sbb
movs
movs
mov
jecxz
out
sub
out
add
sahf
xchg
pop
call
or
je
ja
(bad)
mov
jbe
loopne
pop
or
dec
inc
xor
inc
or
sub
hlt
enter
jno
mov
mov
and
mov
mov
push
sbb
in
push
mov
or
dec
mov
or
and
inc
aas
stc
xor
les
push
cmp
dec
and
out
cmps
adc
pop
data16
jo
rol
mov
icebp
rol
(bad)
fs
mov
mov
xchg
je
mov
fdivr
mov
mov
mov
out
mov
pusha
pop
xchg
lods
sahf
mov
inc
sub
nop
add
cmps
jmp
outs
xchg
je
pop
lea
loopne
sbb
xor
aad
pop
dec
add
lock
jmp
xchg
sbb
rol
dec
mul
cdq
out
mov
jg
sub
sub
lods
mov
xchg
mov
xchg
enter
pop
push
inc
imul
(bad)
inc
xchg
pushf
mov
jp
add
(bad)
std
(bad)
idiv
jp
in
inc
add
fs
call
mov
cmps
outs
movs
rcl
fdivr
xor
push
pop
popf
out
mov
rol
pusha
jbe
fild
jmp
lods
jl
push
aas
xchg
es
pop
pop
retf
in
xchg
test
xchg
repz
data16
test
out
sbb
xor
and
mov
xchg
xor
or
jb
push
jmp
sub
(bad)
fdivr
add
push
bound
sub
mov
mov
mov
scas
(bad)
jb
fdiv
mov
hlt
cmp
sti
adc
xor
(bad)
xlat
scas
test
idiv
mov
jl
add
mov
or
bound
dec
inc
or
movs
pop
xchg
lds
push
div
push
data16
pop
fld
pop
adc
inc
mov
mov
lock
mov
jg
ss
add
fistp
sub
loop
and
dec
aaa
mov
lahf
loop
aad
xor
dec
rol
pop
xchg
cmps
aaa
imul
and
add
outs
mov
mov
jg
sub
add
jmp
mov
ror
adc
popf
xchg
clc
xchg
push
xor
or
fidiv
sub
je
mov
test
xchg
mov
dec
fnstenv
and
ret
or
pop
xor
aaa
test
popa
retf
mov
stos
adc
mov
sbb
pop
dec
xchg
sbb
jnp
je
jl
inc
mov
clc
hlt
add
(bad)
mov
idiv
rol
bound
or
xchg
cmp
loopne
sub
push
jno
xchg
xchg
jb
adc
pop
jne
out
test
pop
loopne
ja
dec
popa
xchg
jmp
adc
mov
mov
ret
lods
and
in
and
imul
(bad)
push
lods
repz
push
add
stos
out
repnz
inc
jl
aas
lock
and
cmc
in
xchg
idiv
lock
enter
scas
mov
sub
test
jmp
add
mov
cs
std
xor
inc
rcr
sub
mov
cmp
test
xchg
in
add
aas
inc
ds
out
mov
mov
or
push
jns
mov
cs
lahf
dec
jp
pop
imul
xor
push
jecxz
jb
pop
add
jg
into
fdivr
inc
movs
sbb
dec
fcom
fsub
rcl
fs
sub
jecxz
push
xor
sbb
movs
inc
dec
xor
sbb
pop
mov
addr16
mov
or
sbb
mov
test
and
inc
mov
sub
aaa
ror
pop
mov
cmps
mov
pop
xlat
xchg
jns
xor
rol
std
pop
cmps
pusha
sbb
outs
xlat
fiadd
in
or
out
aaa
clc
mov
js
das
push
fldcw
jmp
jl
aas
mov
mov
xchg
push
dec
sub
mov
int
adc
test
sbb
sbb
add
inc
add
mov
and
fistp
bound
jl
mov
mov
xchg
mov
aaa
test
lock
sub
add
fild
sahf
mov
iret
inc
ret
stos
push
imul
mov
das
or
jmp
adc
scas
ja
push
fdivr
and
scas
push
js
cld
hlt
ds
mov
je
(bad)
shl
add
mov
pop
xor
fst
adc
fcomp
mov
cmp
xchg
push
xchg
ins
xor
mov
cwde
call
daa
in
mov
add
mov
(bad)
jno
pushf
xor
push
nop
(bad)
pop
loopne
sub
sbb
ror
lds
stos
movsx
push
mov
cmps
adc
and
cmp
adc
adc
repz
cmp
pop
scas
sbb
scas
pop
sar
movs
mov
movs
gs
outs
rcr
or
neg
fistp
ds
pushf
es
mov
cmps
mov
clc
push
dec
push
cmp
shl
rol
out
push
out
in
xchg
cdq
fisub
cmp
dec
push
pop
je
fbstp
sbb
sub
inc
retf
fisub
int3
push
mov
cmc
or
into
sahf
movs
sub
or
inc
(bad)
push
int
inc
mov
fistp
call
retf
add
jb
sbb
cmp
jg
push
in
or
dec
aam
adc
icebp
pop
rol
out
or
jmp
idiv
xor
pop
mov
add
dec
sar
mov
in
repnz
sub
pop
aaa
mov
ins
add
repnz
rol
dec
(bad)
fcomp
mov
push
cmp
mov
dec
fwait
xchg
mov
fs
sub
xor
aas
icebp
jp
jae
adc
xor
fidivr
pop
shl
cmp
in
iret
pusha
les
dec
jl
push
repnz
push
lods
mov
(bad)
mov
ret
or
jg
mov
mov
ins
out
jecxz
hlt
sbb
and
push
pop
push
arpl
mov
mov
lea
and
adc
jo
jo
sub
aad
cmp
scas
sub
in
mov
dec
add
xor
loop
daa
or
sub
mov
xor
push
out
mov
fstp
cli
or
mov
cdq
std
aad
sbb
pop
ret
aaa
lldt
jb
loopne
pushf
cmp
das
cmps
test
popa
jmp
push
mov
jmp
push
sbb
fldcw
inc
jb
inc
popf
shr
es
addr16
and
das
(bad)
or
adc
xchg
iret
cs
jg
mov
mov
ja
popf
mov
xor
lods
sub
call
push
repz
int
pop
rcl
jmp
lahf
int3
aaa
in
and
sbb
imul
push
pop
jge
xor
or
add
cmp
fwait
pop
mov
retf
push
pushw
scas
dec
mov
ret
popa
leave
push
cmp
fucomip
xchg
popa
jp
(bad)
enter
xchg
add
movs
test
lods
lods
mov
pushf
sar
or
mov
pop
cmp
pop
retf
push
bound
out
dec
cmps
dec
inc
in
jns
cdq
or
push
call
std
dec
rol
sub
aaa
mov
jg
iret
xchg
jmp
mov
out
xor
sub
xor
imul
push
daa
inc
xor
out
dec
inc
lods
jns
imul
add
or
or
mov
pop
cmp
dec
test
add
add
js
test
add
out
mov
sbb
std
adc
mov
sbb
shl
xchg
fnstcw
imul
dec
and
enter
jns
adc
push
nop
jl
gs
sbb
loop
mov
xchg
push
adc
(bad)
jmp
and
shr
mov
outs
sbb
scas
fld
cs
push
mov
leave
mov
xlat
and
lods
arpl
outs
dec
outs
and
inc
inc
dec
cmp
pop
or
jmp
xchg
cmp
sub
jmp
xchg
movs
cmps
lock
xchg
and
or
popf
or
hlt
dec
add
call
sub
arpl
push
push
and
or
push
fistp
aad
stos
inc
cmps
sub
mov
inc
adc
outs
mov
data16
push
jge
mov
adc
mov
js
pop
push
add
xor
pop
popa
data16
xor
outs
xchg
mov
pusha
dec
pop
xor
mov
retf
sbb
jns
outs
xor
mov
adc
pop
mov
test
add
nop
cld
xchg
jg
test
xchg
mov
xlat
and
push
popa
jno
shl
xor
jae
adc
xchg
repz
hlt
mov
jb
bound
cwde
stc
cdq
and
lea
xchg
mov
fbld
mov
add
mov
std
pop
xchg
ja
dec
pop
push
pop
pop
int
lahf
mov
push
sbb
movs
int3
jbe
mov
xor
add
cmp
loope
push
mov
mov
(bad)
xor
or
test
or
lods
mov
or
jno
mov
mov
dec
cmp
sbb
in
stos
adc
lods
sub
dec
(bad)
aam
push
jge
out
addr16
adc
inc
(bad)
xor
into
sub
gs
add
mov
push
in
push
cmp
mov
sar
add
push
dec
movs
ret
dec
push
mov
mov
imul
cmp
ja
cmps
loope
push
ret
jbe
add
inc
sbb
call
je
mov
in
lds
cmp
fld
inc
mov
adc
mov
jg
ret
cmc
icebp
or
popf
das
scas
cmp
ins
adc
leave
jge
fwait
xchg
mov
ror
call
cmc
aaa
fst
and
les
jg
push
scas
xor
call
jl
dec
pop
push
ret
call
dec
sar
dec
loope
inc
jbe
lock
xlat
adc
shl
pop
enter
xlat
adc
push
adc
jno
es
cmp
xchg
adc
add
(bad)
pop
sub
fs
push
push
retf
inc
mov
ins
push
in
cmp
in
sahf
xchg
sub
inc
call
(bad)
xchg
lods
jns
es
inc
jmp
and
loope
scas
jno
jle
in
loop
adc
imul
aam
pop
jnp
aam
(bad)
mov
add
cmps
dec
dec
push
mov
cmc
push
adc
clc
xor
ins
push
js
popf
in
mov
xchg
test
push
rcl
je
mov
pusha
sbb
jle
jg
bound
stc
mov
(bad)
jge
loope
addr16
add
cmp
push
sbb
push
(bad)
(bad)
xchg
push
nop
add
xchg
push
and
or
or
pushf
or
jle
jmp
mov
lods
shr
jae
sub
ins
nop
and
stc
and
cmp
shr
call
mov
inc
sub
push
push
shl
adc
push
sub
(bad)
jmp
test
(bad)
mov
repz
jbe
mov
ss
outs
mov
ficom
ret
cld
pop
pop
or
aad
fmul
cmp
repnz
mov
mov
repz
fild
pop
mov
inc
xchg
pop
fld
and
jecxz
ds
xor
mov
xor
mov
sbb
mov
add
dec
jno
jne
cmp
pop
pop
dec
dec
sub
iret
sar
mov
dec
les
fist
lock
sub
mov
test
movs
sbb
repnz
loopne
jne
inc
aam
popa
int3
or
shr
push
jae
jmp
mov
fcom
xchg
jg
xchg
fs
xchg
sub
scas
imul
dec
add
xor
pop
imul
bound
or
ja
mov
push
in
ds
add
sbb
jle
jg
icebp
sahf
xor
int3
sbb
retf
arpl
add
or
adc
mov
imul
div
cmp
xchg
fild
arpl
dec
xchg
ror
fnstcw
shl
xor
add
aad
and
and
mov
cmp
xor
sti
pop
pop
mov
push
fld
xor
mov
xchg
mov
call
adc
dec
jg
ret
retf
xchg
ror
ror
movs
push
adc
sar
xor
call
shl
pop
popa
add
push
retf
(bad)
mov
dec
in
sbb
arpl
pusha
xor
push
in
xor
inc
mov
sbb
lock
sub
push
clc
pop
lock
push
call
dec
outs
out
or
cmp
mov
stos
(bad)
in
sbb
dec
cmp
jns
ret
test
jge
sub
dec
call
lods
fwait
inc
sbb
es
xor
fwait
adc
imul
aad
dec
and
sbb
stos
add
repnz
pop
dec
xor
push
sub
push
iret
cmp
jb
loop
icebp
inc
xor
fprem
push
ss
mov
scas
mov
or
retf
test
push
hlt
inc
es
sub
pop
out
fidiv
jb
sbb
stos
dec
add
push
(bad)
int3
loop
add
push
xor
outs
test
mov
aas
js
retf
fist
xchg
or
cmp
nop
xor
outs
movs
ins
xchg
je
xor
mov
pop
mov
cmps
dec
jecxz
push
out
xor
ret
dec
xor
test
pusha
out
scas
adc
push
(bad)
pop
cdq
pop
lods
mov
push
in
xchg
and
or
dec
push
aad
movs
sub
xor
jg
add
scas
add
cmp
in
mov
xchg
pop
push
mov
sub
add
imul
push
lods
dec
imul
sbb
call
fsub
pop
jnp
adc
clc
xchg
push
pop
xor
cdq
cmp
mov
xchg
cmp
jmp
(bad)
mov
rol
dec
out
pop
mov
lods
mov
je
jge
and
or
arpl
push
sub
add
stos
xchg
test
out
mov
add
icebp
inc
ror
add
int
cwde
loop
push
jge
lds
fld
(bad)
out
inc
popf
add
xor
sbb
inc
iret
xchg
pop
cwde
adc
inc
cmp
lods
xchg
mov
cdq
push
xchg
mov
fcmovb
push
int3
dec
mov
sub
rcr
or
pop
mov
test
cli
mov
cmps
lea
mov
push
adc
inc
push
ins
push
jecxz
jmp
mov
dec
xchg
xor
fwait
aad
loopne
sbb
sbb
rol
popa
repz
mov
out
jne
out
cmps
jae
jbe
js
test
fdiv
pop
mov
shl
or
xchg
mov
adc
inc
jno
xchg
xchg
call
sub
popa
rcr
cmc
dec
mov
rcr
add
retf
xchg
call
push
mov
hlt
(bad)
std
stos
xor
dec
ins
cmp
cli
xor
cs
(bad)
lods
lods
test
xor
push
sbb
js
sar
jae
into
mov
inc
call
inc
or
and
add
out
mov
dec
sar
mov
jge
idiv
inc
xchg
push
jmp
or
std
and
fmul
jb
pop
test
scas
mov
jbe
cmps
fidivr
int
xchg
addr16
push
mov
xchg
push
retf
cmps
push
and
xchg
lea
push
aaa
or
clc
mov
xchg
(bad)
fld
lods
sbb
pop
inc
mov
push
fst
out
pop
fstp
cmp
push
lods
xor
in
outs
push
push
push
in
or
adc
aas
clc
test
pop
push
(bad)
clc
cmp
sub
dec
shl
and
jns
or
movs
aam
push
jo
sbb
sbb
lds
fst
mov
sub
fwait
mov
fwait
adc
sub
sub
xlat
and
pushf
jge
leave
sub
mov
jno
cmps
dec
mov
and
out
pinsrw
mov
fistp
or
ficom
fild
aad
test
xchg
(bad)
cmp
fcom
enter
test
push
xchg
idiv
xor
pop
ret
cmp
nop
pop
sar
mov
jecxz
gs
jne
jmp
sub
dec
js
addr16
loopne
ss
jno
rep
pop
inc
(bad)
jb
es
cld
cli
or
push
inc
mov
fcom
imul
or
push
cmps
jno
hlt
cmp
jle
mov
adc
fcomp
cwde
adc
repz
pop
add
dec
outs
cmp
push
push
into
shl
lahf
retf
je
rcr
sub
mov
sahf
sbb
dec
adc
sub
xor
out
jb
pop
mov
mov
fidiv
in
fdivr
rol
inc
xor
(bad)
pop
mov
ret
pop
loopne
and
inc
sub
inc
or
mov
data16
xlat
jmp
pop
imul
ss
imul
shr
(bad)
lods
pop
lock
into
add
movs
loop
push
and
inc
adc
push
pop
mov
(bad)
and
and
jle
adc
lea
outs
inc
in
or
sub
loopne
xchg
popf
shr
jae
out
mov
mov
sti
adc
cdq
xor
and
shl
adc
js
xor
pop
jb
xchg
out
leave
mov
out
xchg
xchg
ret
lods
mov
test
(bad)
cmp
fmul
and
arpl
inc
xor
jmp
sub
test
jo
adc
outs
mov
cmp
cmp
stos
mov
neg
mov
ins
mov
lea
cli
inc
loop
sbb
call
mov
call
sbb
int
xchg
mov
mov
xor
add
mov
push
arpl
in
add
call
cwde
xor
imul
pop
(bad)
push
imul
cmc
cmps
pop
movs
(bad)
sar
pop
mov
outs
dec
xchg
in
jg
xchg
js
cld
fist
dec
lock
push
sub
inc
sbb
rcl
adc
dec
mov
mov
shl
or
into
xchg
or
mov
int3
mov
outs
jbe
mov
jae
xchg
gs
push
mov
fadd
cld
es
leave
mov
mov
jae
pushf
inc
gs
dec
pop
test
popa
mov
jnp
ret
mov
cmp
or
cmps
ret
push
fadd
pusha
push
pop
mov
jne
mul
hlt
(bad)
(bad)
sub
jg
sbb
test
iret
rcl
(bad)
popa
mov
cld
pop
hlt
outs
rcl
mul
(bad)
mov
dec
call
sub
js
jb
movs
addr16
fisttp
push
in
jecxz
out
scas
clc
cmps
mov
retf
xor
test
jb
ja
je
cmp
dec
push
cmp
lods
aas
and
aam
sbb
das
outs
pop
jbe
add
into
inc
dec
hlt
and
push
cmp
push
push
lahf
scas
mov
pop
mov
out
pminub
and
shl
push
(bad)
sub
sti
iret
lahf
add
js
cli
les
mov
xor
js
loope
mov
cmps
sub
retf
lods
mov
sbb
adc
xor
mov
stos
daa
inc
pop
aad
(bad)
or
xor
mov
mov
inc
jo
imul
mov
and
(bad)
mov
stc
xchg
std
mov
xlat
push
xor
cdq
sub
cmp
pop
arpl
dec
xor
fwait
pop
push
adc
lahf
mov
in
scas
js
test
mov
fcmovnu
dec
mov
sub
push
movs
js
popf
pavgw
inc
push
push
adc
mov
or
cmp
mov
mov
ror
mov
mov
or
mov
dec
lahf
outs
jecxz
enter
out
sbb
pop
xor
(bad)
push
mov
adc
neg
mov
xor
dec
xchg
pop
push
mov
mov
(bad)
clc
lock
dec
in
mov
lds
pop
mov
jb
or
inc
out
or
mov
pop
jns
adc
sub
inc
dec
push
sub
dec
inc
push
hlt
ret
cld
lds
outs
in
repz
inc
cdq
mov
bound
pop
sbb
inc
or
xor
mov
pop
stc
inc
sbb
add
xor
int3
mov
add
popf
xchg
push
out
test
xor
adc
and
jl
push
sub
aam
and
sub
mov
(bad)
dec
out
ds
das
in
shl
retf
fimul
and
push
dec
push
push
pusha
leave
inc
cmp
inc
cmp
in
cmps
out
add
cmps
xchg
iret
mov
shr
pop
mov
mov
stos
add
retf
fisub
(bad)
jge
cmp
ror
mov
xchg
sbb
mov
addr16
lea
arpl
fisttp
push
mov
xor
inc
je
add
dec
xor
sub
adc
xchg
loope
aam
adc
xor
cmp
cmp
and
sub
cmp
imul
inc
aam
fidivr
add
sub
adc
mov
bnd
jne
loopne
push
pop
jge
jmp
enter
sbb
rcr
xchg
int3
mov
ins
cmps
ror
pop
repz
cmps
dec
sub
jno
je
jbe
or
ins
or
or
mov
hlt
sub
shl
sub
nop
sub
mov
cld
shl
pop
push
repnz
adc
cld
and
retf
jg
jnp
(bad)
cmp
adc
dec
mov
mov
mov
push
repnz
int3
(bad)
pop
stc
push
xchg
jno
repz
sti
jmp
cmc
jns
mov
sub
fbld
js
sub
in
add
enter
movs
(bad)
cmp
fnstsw
pop
sub
or
or
jno
js
in
cmps
ror
ss
adc
cmp
sub
xlat
gs
shr
inc
push
outs
fwait
adc
outs
dec
xchg
push
ret
enter
sbb
shl
adc
pop
in
(bad)
cmp
test
xor
dec
stos
loopne
int3
xchg
or
xchg
pop
inc
cmc
fild
adc
pop
cmc
call
pop
dec
fcomp
fisub
popf
js
and
inc
int3
dec
in
ror
addr16
xor
dec
ds
cmp
icebp
stc
cwde
dec
xchg
dec
retf
nop
fdivr
pop
xchg
pop
fimul
out
mov
jo
jle
pop
mov
popa
ds
pop
mov
mov
jmp
je
into
push
add
clc
scas
pop
mov
pop
lods
cwde
cmps
pop
mov
pop
or
mov
imul
(bad)
cmps
inc
loopne
fmul
popa
jl
data16
xchg
adc
add
cmps
shr
dec
call
push
push
mov
es
hlt
and
pop
and
jo
push
add
shr
lea
sbb
and
mov
mov
(bad)
inc
punpckhdq
inc
mov
int
sub
pop
cmps
dec
imul
pop
cmc
out
inc
pusha
push
rcr
sub
sbb
dec
mov
int
lock
inc
xchg
pop
ror
mov
test
xchg
inc
sbb
jne
pop
and
fisubr
loop
sbb
inc
jno
into
inc
jns
adc
jecxz
fldenv
shl
fwait
or
js
add
jmp
mov
xchg
add
pop
jo
ror
mov
mov
cmp
outs
inc
into
cmp
cmp
out
push
jns
mov
mov
stos
ins
(bad)
sub
adc
(bad)
xor
call
jecxz
jge
xor
push
out
aam
pop
dec
dec
lock
jo
pushf
jl
xchg
das
mov
cli
fwait
cmp
mov
loope
mov
jbe
out
rol
push
add
leave
fsub
test
fisubr
retf
fsub
lds
mov
into
push
pop
jecxz
iret
xchg
repnz
(bad)
sub
dec
sbb
sub
and
cmp
pop
pop
jbe
xchg
jp
lods
pushf
mov
dec
cli
cmp
or
daa
jne
clc
cmp
out
inc
and
hlt
mov
xor
adc
popa
call
stos
adc
mov
popf
or
fdivr
cmps
or
retf
int
jbe
jbe
push
pop
or
cmp
xor
imul
mov
bound
pop
or
sbb
addr16
or
adc
iret
ja
and
and
jns
ret
jns
das
movs
cld
dec
popa
pop
fcom
cs
and
add
shl
mov
std
(bad)
dec
adc
and
fs
je
sti
ins
push
ins
mov
xchg
ret
imul
in
sbb
(bad)
or
push
push
js
ret
sbb
fldcw
(bad)
pushf
stos
imul
mov
xchg
loope
scas
pop
sbb
mov
lds
mov
jg
inc
arpl
push
lea
ja
sub
scas
fild
add
bound
sahf
xor
in
mov
stos
je
stc
jmp
fisubr
dec
fistp
cmp
into
(bad)
mov
dec
stos
sub
add
pop
lods
(bad)
retf
jne
lods
jo
cmp
lock
not
dec
jecxz
mov
add
push
add
add
rcr
adc
add
cwde
jno
test
movs
cld
rcl
mov
adc
inc
test
imul
jae
jne
inc
or
push
jo
movs
aaa
xor
fmul
es
call
adc
inc
jne
inc
xor
add
ror
jns
pop
mov
fisubr
ds
push
mov
adc
inc
jne
and
imul
iret
mov
push
das
mov
cmp
sub
and
in
push
mov
jno
jne
xchg
xchg
jp
add
sbb
cmp
test
int
cwde
daa
pop
cmp
out
adc
iret
sbb
or
fidivr
cmp
aad
pop
xchg
lods
rol
mov
outs
movs
ds
enter
inc
jbe
and
or
wrmsr
jg
mov
ds
push
dec
aam
je
push
lods
cwde
push
xchg
(bad)
pop
lods
and
gs
shl
xor
lds
push
sbb
sti
imul
inc
pop
out
cmp
xchg
mov
mov
pop
add
or
dec
or
push
ja
les
fcom
lea
lods
mov
mov
sbb
or
sub
dec
and
out
leave
(bad)
out
inc
mov
aam
adc
cs
jl
push
sub
and
sub
idiv
or
dec
inc
pmaxsw
dec
ds
cli
pop
mov
or
mov
mov
je
imul
in
jnp
jl
lea
fistp
bnd
xlat
les
out
test
cli
hlt
and
ins
mov
mov
mov
stos
add
jo
vzeroall
xchg
rcl
ins
xchg
rcl
out
lods
sub
adc
sahf
dec
(bad)
fldenv
sbb
rcr
cs
jg
inc
and
sub
pop
ss
(bad)
mov
fistp
fidivr
fwait
mov
jmp
fstp
shl
in
je
add
arpl
push
jle
(bad)
outs
nop
xor
mov
out
push
sahf
ds
or
inc
mov
jno
rcr
movs
scas
pop
cdq
sbb
out
add
or
mov
fsub
jmp
xor
out
(bad)
sbb
hlt
mov
or
xor
ja
imul
das
inc
cmp
scas
inc
xor
and
adc
int3
js
call
mov
fsub
pop
lods
in
pop
pop
std
pop
and
inc
data16
inc
fild
bound
xor
xchg
js
out
fimul
mov
add
stos
inc
scas
dec
sub
sub
in
add
and
add
iret
mov
mov
adc
addr16
push
mov
xchg
aam
fist
in
jecxz
jbe
out
js
xor
stos
add
xchg
adc
and
pop
pop
mov
mov
inc
loopne
mov
ds
adc
adc
popa
mov
cld
mov
xchg
pusha
movs
mov
and
push
add
mov
retf
add
add
inc
xor
add
push
add
sbb
popa
jle
test
popa
sub
cdq
cmp
adc
dec
popf
shl
jg
sbb
ror
xor
jg
jecxz
fs
mov
stos
mov
add
dec
xchg
sahf
cdq
sti
sbb
and
adc
faddp
lea
ja
sbb
add
sub
cmp
shr
sub
loopne
and
and
push
cs
cdq
jnp
or
icebp
mov
mov
cmp
mov
retf
and
pusha
ret
jp
adc
fiadd
rcr
mov
outs
jl
rcr
pop
push
dec
sub
loop
scas
mov
jge
sub
and
ret
outs
data16
mov
mov
aam
aas
cmp
jmp
push
cmps
xor
and
repz
push
arpl
xchg
mov
in
mov
cdq
adc
mov
mov
shr
dec
xchg
sbb
not
mov
cli
xchg
jmp
fmul
mov
sbb
adc
fld
inc
and
and
int
mov
test
pop
loopne
mov
ret
ret
add
sar
shl
jnp
fcom
fwait
stc
imul
popa
pop
mov
xchg
xchg
pop
int3
out
inc
mov
movs
shl
mov
out
mov
jle
int
loop
add
call
push
scas
clc
lods
movs
scas
push
sbb
xchg
popa
xchg
shl
test
pop
xchg
fsubr
cmps
cmp
and
fdivr
sbb
retf
or
push
mov
xor
push
cld
inc
mov
push
inc
aam
ret
and
out
mov
dec
jb
scas
stos
jmp
cmp
inc
popa
and
mov
pop
out
jmp
sub
jg
mov
loop
or
fidiv
std
mov
cmp
int
gs
pusha
cdq
pop
adc
mov
pushf
loope
imul
push
jmp
pop
jg
adc
in
xchg
push
repz
(bad)
jns
push
loope
test
lds
cwde
xor
adc
mov
jo
mov
mov
loop
dec
jb
xor
xchg
fnstenv
or
jmp
repnz
cmp
or
sub
(bad)
in
in
popf
inc
int3
cmc
dec
nop
cmp
sub
jecxz
pop
mov
cmp
cwde
mov
push
or
mov
retf
xor
cs
jbe
cmps
pop
clc
or
or
sar
xchg
jb
push
adc
fild
cmp
pop
addr16
retf
in
cmp
das
cdq
inc
(bad)
stc
clc
cmp
xchg
enter
push
mov
loopne
mov
pop
lock
push
jne
sahf
mov
jae
fldcw
add
sub
cmc
add
xor
adc
mov
test
iret
out
inc
dec
xlat
or
test
inc
sbb
int3
dec
xor
out
dec
add
pop
push
enter
mov
in
push
xchg
pop
push
push
movs
les
loope
mov
retf
xor
fs
mov
ins
mov
sub
pop
cmps
sbb
clc
das
and
lock
pop
mov
push
add
mov
xchg
movs
push
mov
xchg
push
loopne
data16
je
test
jle
sub
cmp
stos
dec
test
icebp
shl
add
sub
into
std
add
pusha
mov
pop
sbb
iret
(bad)
(bad)
repz
setns
mov
cmp
inc
repnz
test
push
ret
fdivr
push
xor
mov
xchg
cmp
xchg
jbe
outs
enter
sbb
sub
push
xor
jecxz
addr16
jmp
pop
inc
mov
inc
xor
mov
push
pop
xor
retf
xchg
cld
inc
mov
mov
adc
(bad)
cmps
mov
push
test
(bad)
clc
imul
sub
icebp
jg
mov
cwde
inc
adc
or
inc
mov
js
test
cs
in
push
aam
jecxz
inc
js
in
test
xchg
add
fisttp
clc
jb
jp
or
fwait
retf
mov
dec
sub
jne
ret
push
xlat
mov
popa
hlt
fwait
xchg
mov
cli
nop
xor
mov
dec
test
enter
sbb
jbe
mov
sub
mov
int
push
pop
sub
retf
icebp
outs
jmp
cmp
add
lds
push
pop
sub
cmp
shl
lahf
adc
repz
aam
mov
fs
mov
pop
cmp
loope
or
xor
jne
fwait
js
test
push
ins
mov
ss
sub
jne
xchg
shr
dec
in
push
adc
jno
mov
jb
adc
cs
nop
mov
sahf
stos
adc
jecxz
push
mov
or
or
pop
mov
mov
fadd
inc
cmp
popa
int3
mov
gs
(bad)
xchg
vpshufhw
mov
xchg
jo
xor
mov
imul
xor
aam
out
inc
stos
outs
(bad)
fadd
sub
sbb
or
out
(bad)
jge
dec
sbb
sbb
inc
aas
test
pop
les
add
nop
mov
nop
ret
xchg
shr
(bad)
in
cmp
xor
jne
test
dec
rcr
jae
jge
pusha
mov
fild
sub
mov
out
sbb
in
hlt
xchg
rcr
syscall
rcr
pop
push
adc
call
and
jp
shr
sahf
sub
popa
push
mov
aad
pop
sub
pandn
pop
xor
sub
jno
aaa
sub
cli
xchg
xchg
pop
xor
mov
in
(bad)
(bad)
sub
push
rcl
sub
xor
dec
pop
lods
(bad)
sti
push
mov
mov
or
adc
cmc
outs
cmp
pop
add
stc
push
dec
and
jno
mov
dec
pushf
xchg
pop
dec
xchg
(bad)
sub
imul
(bad)
call
xor
daa
inc
inc
dec
mov
sbb
in
in
sti
fwait
mov
gs
repz
std
in
pop
shr
or
add
les
add
std
pop
js
fwait
cmp
xor
scas
(bad)
push
pop
rol
(bad)
mov
pop
ds
xchg
rcr
xchg
jp
inc
push
outs
pop
arpl
aas
fist
mov
adc
outs
call
jmp
xor
(bad)
call
movs
movups
test
sub
mov
pusha
dec
or
mov
sbb
cwde
jmp
inc
les
adc
loop
dec
outs
movlps
movs
or
jp
fcomp
pop
out
shr
scas
pusha
ror
int3
jbe
or
clc
test
mov
ss
mov
xchg
movs
icebp
inc
jns
add
int3
or
jbe
int3
xchg
dec
or
call
jbe
jecxz
sti
inc
and
sbb
push
bound
cmp
dec
xlat
popf
xchg
icebp
mov
and
enter
xchg
jnp
pop
push
loopne
dec
lahf
jb
pop
fld
(bad)
push
sub
imul
cmc
dec
cmp
jmp
cmp
xchg
fxch
imul
jmp
xor
loopne
icebp
movs
(bad)
in
push
fs
cs
pop
jge
and
aam
cmp
sti
out
jp
and
shl
scas
xor
mov
and
iret
mov
dec
in
aam
sbb
cmps
pop
or
adc
push
in
cmp
int3
cmp
fldln2
adc
push
dec
xchg
mov
jno
lods
jl
ins
or
pop
(bad)
pop
div
addr16
retf
inc
ss
dec
outs
clc
dec
mov
sub
jb
jnp
cld
push
jmp
mov
stos
dec
pop
cs
cmps
jno
mov
stos
xchg
pusha
out
sbb
enter
mov
enter
bound
xchg
sbb
push
fcomp
mov
aam
clc
lods
rol
sahf
fdivr
aas
rcl
pop
fs
test
ins
lods
jno
or
sbb
adc
je
pop
and
xor
sub
loope
or
in
call
jp
out
pop
mov
jge
add
xchg
loopne
stos
jmp
xlat
and
imul
ficomp
fild
ret
cli
cs
js
mov
push
inc
push
cs
dec
test
cmp
jae
sbb
push
cmp
mov
fisttp
loopne
lds
pusha
std
jae
or
ret
cmp
xchg
dec
pop
das
into
mov
cmp
mov
pop
aam
jne
stc
pop
cmc
push
hlt
mov
pusha
pop
jmp
mov
cs
mov
xlat
or
or
test
inc
fstp
push
stos
pop
sbb
loopne
lods
jl
sub
scas
aad
nop
lahf
dec
mov
test
cmps
mov
sbb
pushf
jl
not
mov
xchg
in
aaa
jno
stos
xchg
ins
es
mov
push
inc
popa
jns
not
int
pop
sti
pop
inc
(bad)
cli
stos
sbb
xlat
mov
cwde
out
mov
fwait
xchg
mov
xor
cmp
cmp
ret
mov
xor
scas
lods
mov
das
sbb
pop
gs
jne
mov
rcl
mov
cmp
jp
nop
clc
pop
dec
add
sub
test
add
pop
sbb
scas
push
mov
mov
push
mov
inc
scas
out
jp
repnz
stc
call
jmp
cld
and
lds
sub
mov
jnp
or
cmps
(bad)
xchg
or
dec
mov
stos
pop
jne
pusha
lods
shr
pop
(bad)
pop
cld
adc
and
xchg
mov
jge
dec
inc
cmp
mov
mov
xor
outs
scas
mov
dec
call
adc
fwait
dec
cmc
mov
mov
mov
xchg
out
push
test
addr16
push
fldenv
fist
icebp
jmp
dec
dec
xchg
mul
xor
ins
xchg
xor
add
popf
out
pop
jmp
fcomi
mov
pusha
jg
jo
dec
sbb
dec
mov
mov
mov
imul
adc
fistp
xor
lea
lods
ror
scas
add
ficom
xchg
out
fild
jl
cmc
or
lock
sbb
loop
and
push
jns
inc
cwde
pop
mov
mov
outs
mov
add
adc
in
mov
dec
cmp
loope
mov
fimul
add
into
push
adc
sub
push
mov
and
jmp
xchg
scas
repz
addr16
imul
pop
pop
jno
xor
xor
ret
out
test
or
dec
cld
cmp
mov
sar
xor
pop
inc
(bad)
cdq
lods
clc
sub
nop
sub
jno
shl
outs
pop
dec
bound
fsub
ret
sahf
sahf
push
adc
test
push
push
bound
mov
ja
call
mov
push
dec
mov
jae
rcl
mov
dec
or
dec
inc
arpl
stc
rcr
cmp
int3
cmp
mov
cmp
ss
sub
dec
push
push
lods
cmps
stos
mov
add
mov
test
fistp
enter
dec
inc
jge
sbb
push
mov
ins
jb
cli
adc
hlt
inc
sti
mov
sub
add
lock
ror
imul
jbe
mov
dec
(bad)
das
ret
ficom
xor
aad
pop
push
mov
out
xor
daa
out
fiadd
out
jo
(bad)
popa
pushf
xchg
push
pop
or
dec
push
popf
in
xchg
inc
xchg
enter
sbb
jne
adc
or
xor
mov
sbb
sahf
jle
mov
out
mov
cmp
or
cdq
sub
cli
bound
add
es
into
pushf
push
fisubr
shr
(bad)
jge
jle
ja
into
dec
aad
mov
fnstsw
sbb
mov
xchg
aas
add
mov
mov
sbb
jmp
cmp
mov
(bad)
call
sub
in
xlat
test
mov
and
pop
adc
sub
fidivr
push
lods
jmp
push
xor
mov
cli
sub
mov
jmp
push
std
in
stos
ret
shr
sbb
sub
fsubr
push
cdq
aad
mov
ins
or
fsub
pop
int3
sbb
femms
sar
pop
jae
dec
outs
cmp
pusha
xchg
cmp
pop
pusha
and
pop
in
mov
call
push
or
mov
xchg
in
xor
les
jns
pop
mov
cmps
fst
add
mov
mov
xchg
mov
fwait
mov
xor
adc
pop
sbb
inc
push
dec
ret
dec
hlt
iret
pop
icebp
movs
push
arpl
leave
jecxz
mov
stc
cmp
xor
inc
sub
ins
xlat
mov
cwde
in
mov
pusha
imul
sub
(bad)
sbb
leave
in
jl
repnz
inc
in
ret
lahf
jecxz
or
pushf
retf
sbb
sub
outs
jmp
(bad)
je
pop
inc
mov
ret
lods
in
jle
add
fwait
es
mov
and
mov
push
imul
add
jbe
bound
xchg
int
out
out
or
enter
sub
pop
test
mov
lock
jmp
stos
cs
popa
int
pop
push
and
push
clc
loopne
nop
push
movs
jmp
push
fisubr
cmp
pop
xchg
jl
(bad)
or
jb
rcr
or
outs
repnz
or
push
out
jno
(bad)
mov
(bad)
dec
mov
shl
out
mov
(bad)
jo
adc
mov
dec
in
pop
jmp
push
jmp
leave
sbb
mov
adc
push
mov
ja
shr
ins
lock
add
dec
pop
dec
and
movs
mov
mov
je
or
and
call
mov
add
push
ret
enter
jp
jns
pop
and
mov
aaa
cmc
shr
add
cmp
arpl
cmps
fcomp
mov
cmps
call
into
dec
in
addr16
adc
push
in
cld
adc
add
sti
inc
cmps
out
push
into
retf
push
imul
call
mov
div
fwait
lods
call
push
mov
xor
mov
push
xor
mov
jae
jecxz
or
test
lahf
or
jno
lock
dec
push
sbb
iret
sub
dec
out
xlat
push
add
aaa
test
pusha
inc
sub
loop
repz
fs
mov
xor
inc
adc
mov
call
loop
mov
inc
push
mov
fiadd
or
int3
cmp
mov
(bad)
lock
xchg
jl
mov
lock
mov
in
and
ja
out
in
mov
jecxz
dec
mov
pop
out
jbe
pop
jae
push
mov
pushf
jg
dec
(bad)
ss
and
es
push
fbstp
(bad)
movs
fmulp
adc
imul
mov
lahf
push
jle
or
in
hlt
push
and
out
enter
mov
xchg
mov
xlat
or
sbb
add
sahf
enter
sub
sub
imul
fwait
lahf
push
cs
inc
pop
cmp
push
jnp
jne
repnz
ins
fwait
ret
ret
ds
xor
aad
imul
pushf
mov
jp
and
mov
in
jbe
lds
jg
mov
in
jns
sar
test
ss
in
cmp
data16
mov
aaa
adc
xor
retf
add
dec
add
add
lock
push
dec
cs
jle
jnp
mov
cmp
sti
push
out
pop
xor
fld
mov
jp
jnp
repnz
mov
(bad)
adc
mov
jb
das
add
inc
sub
cs
arpl
and
sub
ret
add
frstor
bound
call
jne
jp
(bad)
nop
hlt
sbb
or
pop
inc
clc
xchg
xor
mov
in
test
inc
(bad)
mov
mov
sbb
cs
movs
sti
aad
add
xchg
popf
mov
out
inc
cvtdq2ps
fs
icebp
jnp
add
(bad)
neg
add
out
jg
fucomip
adc
ret
(bad)
xor
jns
lahf
loop
cmpps
call
inc
dec
test
xchg
push
xchg
inc
mov
sbb
js
jmp
mov
lock
inc
hlt
add
xor
sub
lods
push
rol
and
mov
pcmpgtb
(bad)
call
arpl
pop
sbb
cmc
and
xchg
cld
jmp
je
push
jle
cmp
jbe
sub
in
mov
out
inc
call
ret
xor
fnstcw
loopne
inc
jg
push
jne
and
sub
std
hlt
inc
int
fldcw
outs
adc
cld
dec
loop
sbb
add
mov
push
cdq
or
mov
(bad)
jmp
es
fild
arpl
cmc
imul
xor
icebp
sbb
mov
mov
mov
iret
pop
pushf
test
mul
pushf
push
push
sbb
lahf
fild
jno
cld
mov
and
xor
lock
(bad)
xchg
xor
fld
push
aas
shl
pop
sub
ds
xchg
jl
fisttp
cdq
mov
sbb
dec
imul
ficomp
nop
shl
leave
mov
pop
add
mov
ret
cmp
out
adc
jge
add
push
rcr
retf
mov
cmp
and
mov
ds
fisttp
aas
sub
mov
sub
sub
loopne
mov
fwait
pop
mov
lods
movs
mov
jo
out
cdq
jle
cs
jae
pop
arpl
je
das
cli
xor
into
cmp
outs
or
mov
inc
mov
daa
mov
ds
push
mov
std
ins
ret
jmp
inc
jecxz
cli
mov
add
shl
dec
mov
jge
fild
(bad)
mov
inc
test
or
std
pop
mov
sbb
ret
xor
cs
dec
mov
iret
xor
and
imul
mov
cld
and
dec
pushf
jecxz
fild
lds
dec
pop
inc
cmc
(bad)
xchg
scas
outs
jg
lds
loopne
sbb
out
cli
out
sti
rol
lahf
sbb
push
xor
jecxz
pop
gs
push
cs
dec
mov
push
pop
stos
mov
fcom
mov
inc
sub
xor
mov
mov
in
or
sbb
pop
mov
mov
cdq
dec
dec
pusha
jp
and
ror
cmp
pop
lods
fiadd
cdq
call
jle
test
ds
mov
jbe
dec
mov
in
mov
push
xchg
pop
pop
popf
ret
sub
jbe
adc
je
push
cmp
or
fimul
sar
jbe
(bad)
push
mov
lods
or
cs
or
repz
xor
fisubr
and
aad
stos
xor
adc
sar
leave
mov
ficomp
pop
mov
stos
cld
leave
cdq
in
adc
cmp
fmul
arpl
(bad)
sub
out
xchg
es
adc
xor
add
and
add
and
xchg
cmp
test
pop
in
adc
cmp
dec
pushw
mov
mov
(bad)
adc
outs
mov
ins
inc
add
xchg
jns
mov
hlt
cmps
movs
pop
jmp
pop
and
mov
xor
jae
les
inc
shl
mov
(bad)
sti
lahf
push
cli
jo
cli
dec
sub
ret
ss
retf
jb
stos
push
repnz
cmp
jnp
dec
xor
or
mov
add
into
push
fmul
mov
movs
dec
jne
std
sub
cmp
popa
mov
add
sbb
ss
xchg
dec
push
xchg
inc
or
in
pop
into
ins
xor
mov
and
sbb
test
dec
dec
add
jp
mov
idiv
sub
fimul
icebp
dec
dec
mov
pushf
mov
jmp
cmc
mov
mov
add
pop
cmp
je
mov
adc
cmp
jecxz
pop
jg
scas
cmp
pop
mov
cmp
add
xor
sub
sub
xchg
mov
mov
jae
sub
aas
lea
sbb
sar
(bad)
jp
cmp
inc
int3
or
inc
fsubr
pop
cli
std
inc
cmp
movs
retf
or
sti
push
xchg
pop
pop
sub
pop
fs
outs
mov
xor
mov
out
cmp
fist
mov
jae
xor
and
shl
retf
jmp
inc
cmps
push
add
adc
pop
(bad)
fdiv
sub
cmp
dec
into
add
shr
mov
sub
rcl
movs
movs
pop
pop
aam
stos
push
clc
(bad)
loope
inc
pop
sub
jl
pop
sbb
jecxz
sub
adc
cmps
and
ja
les
lods
stos
cdq
adc
(bad)
mov
mov
or
shr
inc
lods
pusha
push
pop
push
es
aaa
out
nop
sbb
imul
xchg
retf
mov
ds
std
inc
out
xor
xchg
adc
in
sbb
mov
inc
sbb
xchg
ds
push
out
or
sbb
mov
out
mov
(bad)
add
scas
push
pop
in
imul
aaa
aas
lea
jns
inc
nop
xchg
ins
popf
cmp
test
jbe
fadd
ds
loop
xor
xchg
cmp
cmc
mov
mov
ror
enter
cmp
stos
dec
jmp
mov
xchg
loop
out
dec
gs
je
test
and
jbe
and
int
inc
arpl
movs
lahf
daa
add
aaa
and
ret
cld
jne
imul
push
call
xchg
pop
shr
mov
movs
or
dec
mov
jae
cmp
inc
lods
pop
push
movs
cmp
sti
out
addr16
xchg
mov
inc
in
cmp
mov
(bad)
sub
mov
cli
lahf
inc
les
add
stc
push
push
xchg
adc
xor
movs
mov
mov
adc
lds
scas
(bad)
mov
ja
mov
ja
daa
loopne
push
out
push
and
js
ja
pop
stos
and
xor
inc
or
sub
jo
fld
push
xchg
test
daa
aad
stos
call
mov
mov
(bad)
in
jecxz
and
cmps
leave
xchg
loope
push
adc
pop
push
lods
jge
lds
mov
inc
or
dec
fs
fndisi(8087
and
pop
test
mov
xchg
adc
lods
and
add
pop
xor
inc
(bad)
jp
jle
inc
mov
iret
mov
ss
lds
retf
push
pop
cld
cmps
mov
or
xchg
dec
fnstcw
add
jo
rol
sti
mov
fs
xchg
inc
frstor
ret
push
rcl
in
add
xor
fbstp
inc
push
leave
cmp
mov
sbb
ins
loopne
cmp
lahf
push
pop
mov
repnz
xchg
sub
aam
movs
fsubr
pop
aad
loopne
pop
cwde
sbb
into
pop
pop
imul
fstp
jnp
push
sar
pop
loope
aaa
hlt
test
ret
inc
icebp
xchg
push
sbb
lds
xchg
hlt
outs
add
cmc
jbe
xchg
push
cmp
(bad)
in
lods
fs
adc
(bad)
call
fucomip
push
and
mov
or
sti
mov
enter
rol
jmp
mov
sbb
sbb
fcom
xor
lea
repnz
stos
stos
je
mov
and
test
push
push
das
ror
fisttp
repz
push
in
test
fstp
push
push
fnstcw
sub
mov
sub
adc
mov
mov
movs
inc
(bad)
jge
(bad)
or
inc
or
or
push
jl
std
and
out
push
push
arpl
xchg
stos
cmc
in
lods
push
stos
add
pop
in
shr
push
mov
add
adc
or
pop
std
dec
out
inc
and
adc
aaa
xor
(bad)
arpl
movs
jp
dec
cli
sub
inc
add
sub
xchg
je
add
sub
jo
(bad)
pop
jl
cmp
into
test
out
dec
xor
repnz
movs
push
(bad)
sub
pop
loopne
mov
mov
inc
lahf
les
adc
fcmovb
(bad)
xchg
ins
stos
mov
lds
imul
mov
sar
add
xorps
and
jae
out
shl
dec
popa
(bad)
adc
xor
mov
cld
mov
outs
jo
jno
fsubp
out
and
jne
lods
mov
push
in
push
aad
dec
das
xor
fbld
(bad)
mov
and
mov
bound
jmp
out
cmps
movs
test
mov
mov
pop
pop
inc
fsubr
or
adc
adc
push
adc
adc
imul
stc
ret
shr
add
inc
in
pop
push
cmp
imul
cmps
dec
push
mov
inc
inc
jo
add
cmc
add
sbb
sub
or
movs
retf
cmp
xchg
mov
adc
sub
lahf
popf
mov
or
inc
xchg
fdivr
lods
cmp
mov
div
jb
call
jge
or
pop
inc
lds
mov
pop
stc
mov
and
add
mov
lea
fcmovbe
and
pop
test
ds
adc
in
dec
icebp
aad
aad
pop
jp
pop
push
movs
data16
pop
mov
xchg
sub
jo
mov
add
retf
sub
add
test
mov
mov
retf
outs
sbb
nop
int
retf
ss
fild
outs
repnz
and
mov
mov
aas
xor
aas
cmp
and
mov
mov
cs
dec
shl
retf
pop
pop
mov
pop
outs
popa
sub
test
sub
cdq
pusha
mov
pop
shl
aaa
mov
and
or
fdivr
mov
push
inc
pop
mov
stos
pop
cmp
pop
sbb
cwde
pop
mov
mov
mov
loopne
mov
sub
mov
test
jo
jnp
pop
je
in
mov
xchg
or
xchg
pop
and
int
lods
sub
pop
jno
mov
or
xlat
pop
xor
or
std
jle
jmp
daa
aam
pushf
mov
ins
nop
out
ret
popa
movs
and
test
test
sub
jae
inc
fwait
sbb
mov
jle
scas
push
mov
stos
sub
jp
cmp
xchg
pushf
test
into
outs
sahf
or
dec
cmp
(bad)
pop
idiv
aam
mov
leave
scas
xor
js
inc
lods
(bad)
loopne
popa
dec
cmp
cmc
sub
and
std
sub
imul
and
pop
enter
xchg
add
push
scas
push
neg
mov
sahf
cmps
aas
out
mov
jno
call
and
and
jp
xor
(bad)
push
push
push
rcr
arpl
cli
movs
iret
aad
mov
ins
call
mov
jbe
pushf
pop
add
dec
in
cmps
scas
inc
sub
xchg
rol
dec
cmp
dec
adc
inc
push
and
cwd
push
jp
adc
add
add
mov
cmps
outs
jge
test
movs
lods
cld
sbb
add
lock
cwde
xor
icebp
es
adc
das
push
jmp
shl
mov
mov
xor
jmp
mov
mov
jne
or
scas
call
xchg
loopne
push
sub
push
adc
inc
jp
sub
or
cdq
ins
cmps
inc
outs
gs
nop
mov
stos
out
gs
push
(bad)
mov
adc
clc
dec
movs
mov
test
cmc
mov
inc
sar
and
movs
jb
cli
leave
or
aad
into
sti
jg
loop
retf
addr16
push
daa
std
lods
pushf
inc
cwde
mov
maskmovq
mov
inc
push
call
jge
xchg
repz
out
movs
and
stos
mov
sub
pop
jg
jmp
adc
test
hlt
dec
or
out
xlat
ret
xor
in
sub
mov
or
adc
add
lea
imul
lods
mul
mov
loope
bts
mov
jne
cmps
push
xlat
push
inc
mov
pop
mov
lods
xor
cmp
push
jg
pop
cmp
mov
xor
add
mov
mov
jns
and
sbb
push
cmp
sbb
arpl
ret
fldenv
sbb
sbb
out
pusha
and
mov
fs
in
cs
inc
inc
dec
and
inc
popf
dec
bound
jnp
dec
inc
loope
mov
(bad)
mov
jp
jp
gs
or
xchg
aad
jmp
xor
retf
mov
push
jae
scas
movs
and
add
scas
cmp
loope
(bad)
pop
fcmovu
ja
test
retf
std
or
push
push
sbb
jbe
(bad)
mov
int
mov
xchg
(bad)
and
test
jo
shl
mov
call
jbe
cmp
xlat
adc
repnz
lods
hlt
dec
mov
and
mov
nop
jbe
shl
popf
inc
or
inc
mov
dec
cmp
xchg
pop
fisttp
test
in
ret
cmps
dec
inc
ss
mov
mov
push
lahf
leave
xor
out
jg
jl
shr
fwait
or
(bad)
xor
dec
cmps
mov
movs
add
xor
jo
inc
jg
call
sub
pop
sub
sub
mov
xlat
adc
mov
jae
cmps
test
pusha
xlat
push
mov
js
or
adc
into
cmc
jp
dec
cld
out
fwait
xor
dec
jmp
sbb
add
(bad)
pop
inc
stc
cwde
mov
xchg
scas
pusha
add
inc
sbb
inc
sbb
mov
xor
pop
mov
mov
adc
loop
nop
imul
or
icebp
fs
push
gs
mov
out
pop
xchg
sar
hlt
ins
arpl
jae
adc
pusha
pop
int
fild
stc
test
dec
stos
imul
sar
mov
ins
mov
jo
div
in
and
std
xor
aaa
mov
fwait
pop
push
and
push
gs
jg
pop
test
jae
prefetch
call
mov
int3
jnp
fsubr
cwde
enter
add
ss
pavgb
push
cmp
add
mov
or
test
dec
inc
lds
cmp
mov
inc
dec
pop
xor
adc
fstp
mov
gs
cmp
das
add
dec
rcr
je
aad
stos
pop
sbb
xor
push
rcl
adc
outs
push
(bad)
cld
stc
retf
push
pop
pop
out
ds
out
sub
jno
cli
in
inc
add
cld
lds
adc
push
idiv
je
rcl
sahf
shr
mov
mov
test
loop
idiv
enter
push
jns
aas
clc
lahf
cmp
pushf
or
push
inc
or
pusha
or
repnz
xor
jecxz
xor
push
push
sub
rcr
mov
push
rcr
sbb
test
push
and
xlat
cld
mov
push
into
and
cmp
mov
pop
push
mov
imul
imul
stos
outs
repz
add
mov
jo
xor
lods
repz
sar
std
call
jbe
fild
ins
push
dec
cdq
mov
sar
stos
push
iret
jbe
stc
inc
adc
mov
mov
push
shl
and
mov
mov
xor
cdq
test
mov
repnz
push
bound
add
or
rcl
xor
lds
mov
fld
scas
add
add
or
loope
test
repnz
jle
(bad)
mov
xchg
fstp
pop
ins
push
sbb
into
cmps
out
and
jae
jae
jns
std
cmps
jmp
imul
repz
jne
push
dec
stc
jbe
pushf
int3
pop
dec
cmp
lock
dec
aas
lock
sub
push
fs
or
and
add
popf
dec
push
add
cld
mov
sar
mov
cs
lahf
xchg
add
ins
dec
in
lock
movhps
jp
xor
cmp
jb
dec
push
aas
dec
or
push
(bad)
sahf
add
out
call
icebp
pop
sar
inc
ret
push
ror
adc
xor
jb
(bad)
jns
jae
and
test
xchg
pop
pop
test
ins
adc
das
inc
in
add
es
je
es
(bad)
adc
mov
retf
lods
mov
sysret
ret
cmc
outs
xchg
sub
icebp
sbb
sar
jbe
cmp
mov
sahf
retf
mov
aaa
popf
cld
iret
test
push
mov
mov
pop
test
out
in
push
ja
fstp
imul
lods
imul
es
xchg
push
ins
lds
push
xchg
cmp
push
cdq
mov
mov
inc
rol
and
movs
pushf
add
rol
(bad)
aad
mov
ss
aad
mov
(bad)
push
sahf
push
js
jl
inc
scas
ins
neg
sub
sti
mov
mov
push
loope
jp
retf
inc
or
std
loope
mov
scas
pop
gs
mov
in
or
shr
sbb
and
pop
adc
mov
push
push
adc
mov
dec
pop
ror
fmul
push
xchg
fistp
stc
xchg
cmps
cmp
iret
imul
push
sti
push
sbb
daa
and
jno
test
mov
arpl
inc
into
je
mov
cmp
sbb
pop
mov
jecxz
jg
mov
cmp
(bad)
call
retf
jle
or
fsub
push
pop
inc
mov
hlt
fst
cwde
ss
leave
inc
lods
retf
push
imul
inc
imul
in
and
scas
xor
inc
lea
xor
mov
loope
in
push
adc
mov
sub
or
mov
mov
sub
xor
mov
push
and
mov
mov
jno
out
xchg
jmp
push
cwde
jecxz
sbb
jnp
jno
adc
in
inc
add
mov
xchg
add
imul
dec
loope
hlt
pmulhuw
push
xchg
rol
cmp
jl
pop
mov
mov
cmps
repz
sub
mov
movs
rcr
sub
sub
push
jg
ds
(bad)
mov
js
push
mov
jecxz
ins
push
cmp
cmp
inc
es
div
ficom
ja
mov
cmp
movs
in
fwait
cmp
and
sub
and
mov
aas
mov
adc
ret
jl
pusha
idiv
xlat
xchg
jo
js
popa
mov
inc
pop
mov
in
gs
cmp
sbb
aam
jb
stc
loopne
cmps
movs
push
pop
test
imul
pop
jl
(bad)
or
enter
(bad)
xor
and
inc
and
and
ja
fadd
cli
mov
inc
cmp
xor
jmp
icebp
mov
and
jne
test
popf
push
test
and
jbe
push
repz
add
add
sbb
add
ja
xchg
mov
fsubr
ror
pop
sahf
dec
call
daa
loopne
xchg
scas
sbb
xchg
cmp
stos
ror
aas
imul
cmp
adc
arpl
mov
leave
lahf
and
lods
mov
les
ja
xlat
and
inc
ja
mov
into
mov
fmul
scas
stos
dec
cdq
xchg
aam
xchg
xor
mov
xor
movs
(bad)
shr
mov
loop
movs
inc
pop
sub
push
cmps
pop
sbb
retf
inc
pop
mov
movs
cdq
mov
int
add
xor
in
dec
xor
leave
outs
mov
iret
push
loope
xchg
push
push
or
adc
cmp
push
movs
cmp
pop
test
cmc
jns
and
and
sbb
mov
icebp
lss
jp
stos
int
adc
and
fist
rcr
jbe
call
shl
loop
sbb
and
cld
sub
rcl
mov
inc
lods
pop
imul
jmp
fisub
inc
pop
ja
ret
and
dec
push
cmp
enter
ror
pop
lock
dec
bound
pop
pop
lds
into
iret
mov
sbb
push
push
xchg
mov
jns
sub
mov
in
sbb
mov
out
mov
jbe
add
lea
adc
push
jnp
pop
in
sub
xchg
loopne
arpl
cmps
push
jnp
xchg
stc
mov
(bad)
mov
mov
adc
arpl
xor
jne
in
int3
in
or
mov
test
dec
lods
fistp
mov
inc
test
cwde
xchg
dec
ja
and
xor
test
sub
hlt
sub
sbb
jnp
xchg
adc
adc
push
mov
mov
test
inc
push
in
ret
bound
(bad)
scas
adc
or
push
enter
shr
cdq
das
dec
sub
add
xor
inc
ds
mov
fs
jmp
dec
pop
popf
add
adc
movs
aaa
retf
jb
pop
mov
es
mov
mov
lods
pop
ret
and
inc
pop
jp
adc
dec
dec
or
leave
and
mov
jnp
and
push
sbb
add
ss
xor
lods
pop
fbstp
lods
mov
add
jne
xchg
cmps
add
hlt
adc
xor
add
js
(bad)
jmp
jp
mov
retf
es
pop
jb
xchg
mov
mov
pusha
xchg
in
push
fnsave
(bad)
adc
fs
xchg
rcl
ins
cmps
xchg
in
xchg
dec
jmp
jne
fisub
mov
int
retf
jle
(bad)
jle
or
fdiv
push
pop
arpl
cmp
test
cmp
ins
in
fiadd
xchg
cmp
push
cmp
add
pop
sub
das
mov
push
push
mov
scas
cmps
or
neg
sar
jge
shl
fwait
imul
lods
es
fsubr
sub
mov
lods
cmp
pop
lods
shr
pop
jne
sub
cdq
mov
xor
xor
mov
cmc
retf
repnz
imul
cmp
mov
aad
pop
lahf
arpl
jae
aad
pop
sub
and
movs
outs
fs
adc
mov
sub
js
xor
ror
push
cmps
rcl
(bad)
je
mov
sub
popf
mov
sub
dec
dec
jne
add
leave
mov
fdiv
retf
in
fnstsw
cmp
ins
movs
xchg
int
test
or
repz
mov
cmp
ror
iret
test
mov
stos
jle
push
mov
mul
mov
daa
mov
int3
jo
pop
in
stc
fcom
fdiv
stc
mov
xchg
sub
(bad)
sti
xchg
int3
fbld
mov
in
fdiv
mov
lods
ja
cmp
push
mov
rol
fwait
jmp
jb
mov
mov
pop
fwait
jle
sti
mov
cmp
mov
add
or
mov
cmp
test
aas
sahf
cld
outs
jae
sub
add
js
(bad)
dec
aaa
mov
stos
in
out
dec
mov
retf
addr16
imul
xchg
pop
ror
std
int3
and
or
lods
mov
mov
sub
cmps
imul
fs
mov
inc
cmps
mov
inc
sti
jnp
inc
nop
sub
cmp
lsl
jge
call
mov
mov
iret
ds
cmp
fisubr
sti
jle
lock
and
ins
in
dec
arpl
shl
frstor
aas
dec
push
mov
cmp
cmp
daa
mov
xchg
loop
out
jp
mov
and
mov
test
mov
loopne
iret
push
scas
sbb
add
imul
fs
adc
fld
cmps
cdq
mov
dec
imul
int3
out
push
ss
fwait
cmp
loop
scas
inc
mov
mov
pop
add
out
(bad)
cdq
test
sub
mov
nop
pushf
adc
cld
mov
sbb
jecxz
es
in
loopne
push
stos
lock
ins
add
lea
ja
sub
pop
pop
dec
loop
in
mov
std
fwait
or
jg
fld
mov
xchg
ins
aas
ror
and
ja
out
sub
lea
inc
sub
in
and
or
dec
cmp
ret
mov
xor
push
sub
ja
add
jo
add
int
call
(bad)
sbb
and
daa
clc
push
jne
jecxz
sbb
cld
imul
scas
or
call
(bad)
das
leave
dec
cli
pushf
or
mov
inc
mov
jmp
imul
shr
add
sbb
(bad)
and
cmp
loopne
hlt
adc
in
adc
ret
inc
jmp
jl
popa
fbld
push
nop
sbb
adc
inc
adc
aam
jp
movs
clc
push
loop
fabs
leave
fidivr
jge
rcl
retf
and
(bad)
push
hlt
xchg
scas
nop
add
add
jb
jle
daa
sti
inc
mov
mov
pop
retf
xchg
sbb
test
popf
add
pop
pop
dec
and
sub
out
jle
sbb
cmp
mov
in
push
into
leave
mov
enter
and
mov
gs
add
jbe
test
sub
je
mov
or
inc
xor
dec
sbb
mov
outs
pop
xchg
jmp
mov
xchg
fnstcw
test
add
fld
inc
repnz
(bad)
or
into
sbb
xchg
dec
push
jne
xor
mov
(bad)
imul
rcl
jg
and
xor
sahf
ret
mov
cli
and
test
icebp
cmps
test
adc
loopne
sub
daa
pushf
or
imul
js
cmps
dec
mov
movs
push
fistp
psllq
outs
jb
shl
xor
pop
mov
lods
push
inc
inc
xor
ret
push
push
inc
je
(bad)
fdivr
lds
cs
outs
jo
scas
inc
pusha
cmp
xor
ss
retf
push
pop
data16
dec
fild
push
cdq
cmp
cmps
les
int
(bad)
mov
xchg
test
and
sub
jo
cmp
ret
inc
arpl
ja
je
add
cmp
dec
sub
cdq
mov
test
leave
icebp
hlt
pop
or
or
xchg
je
(bad)
into
sub
and
inc
cmp
mov
gs
push
ja
dec
clc
pop
popf
addr16
call
retf
call
sub
jmp
adc
rcl
pusha
das
add
(bad)
ficomp
lods
mov
jl
int
cmps
movs
enter
cmp
scas
(bad)
or
cld
and
cmps
daa
movs
shl
test
pop
fsub
add
pushf
sbb
sbb
nop
mov
xor
mov
(bad)
mov
jmp
popf
repz
jmp
inc
pop
pop
out
dec
retf
mov
jl
out
int3
mov
popf
shl
cli
ret
push
sub
cmps
call
arpl
(bad)
ja
or
je
sbb
inc
dec
inc
popa
cdq
fsub
fcomip
and
xor
dec
shr
and
ret
dec
jno
sub
popf
push
sar
ret
std
sub
and
cmp
sub
jmp
leave
imul
jg
xchg
lds
sbb
sub
std
mul
loop
mov
inc
dec
lahf
in
and
lds
jb
int
ror
dec
mov
mov
jmp
out
pop
jb
lods
push
push
pop
cmps
pop
push
sub
scas
inc
nop
cdq
xchg
xor
sbb
int
dec
or
mov
imul
enter
movs
mov
add
xchg
adc
sbb
jbe
add
jb
shl
js
loope
adc
xchg
loopne
mov
lods
jne
fsubr
cdq
adc
div
xor
std
jecxz
sahf
jecxz
(bad)
emms
fisubr
cli
jecxz
mov
ret
inc
(bad)
xor
mov
sbb
and
fwait
cmc
cmp
cmp
adc
xchg
adc
bound
cmc
in
jge
dec
retf
stos
jecxz
(bad)
cmc
ret
xor
call
dec
shl
movs
jbe
jmp
repnz
sti
sub
stc
movs
xor
mov
mov
(bad)
pushf
sub
stos
xor
mov
mov
adc
aam
xchg
out
add
shl
jle
mov
daa
push
push
or
imul
push
(bad)
fldcw
fcomp
xor
lock
or
sbb
adc
out
cmps
out
adc
js
and
inc
sbb
or
in
dec
jg
setno
and
xor
sbb
sub
test
mov
adc
push
pop
ins
pop
sbb
into
stos
mov
lahf
clc
push
pop
push
std
xchg
addr16
(bad)
adc
shl
push
adc
jp
out
inc
xor
shl
test
lahf
popf
cmp
aad
push
in
inc
js
stos
adc
mov
cwde
or
add
rol
cs
out
jp
mov
cmp
loope
stos
cmp
pop
sahf
rol
add
fsub
lea
jle
test
cmp
aas
bound
repnz
rcr
sbb
push
mov
pusha
sbb
idiv
in
aas
and
adc
test
xchg
add
dec
sbb
lds
(bad)
xchg
call
mov
out
cmp
adc
movs
mov
stos
lock
fsubr
bswap
pop
mov
lock
mov
lea
sar
add
add
daa
jmp
inc
mul
int
sahf
hlt
loop
stc
sbb
imul
aam
inc
push
and
sbb
jge
in
ror
xchg
dec
loop
mov
inc
mov
(bad)
xchg
mov
out
js
add
xor
movs
popa
iret
sub
inc
mov
cmp
xor
out
pop
push
sub
data16
add
sbb
sub
pusha
xor
retf
jns
mov
in
in
lea
je
adc
xchg
mov
das
daa
repz
inc
add
js
pop
mov
pop
or
cli
jae
(bad)
mov
push
sti
sub
stos
sar
pop
ret
ins
pop
int3
fdivr
dec
call
push
shl
mov
test
loopne
and
inc
retf
add
pmovmskb
fwait
xchg
jo
das
cmp
push
cli
fld
fst
mov
dec
and
nop
ret
inc
(bad)
fmul
and
ror
cwde
jg
stos
test
xchg
rcr
and
xchg
add
jmp
fiadd
push
cmp
jle
nop
sahf
jnp
movs
cli
retf
pop
ret
push
sahf
and
pop
call
push
pop
cmp
(bad)
inc
adc
inc
push
fwait
outs
xor
rol
pop
out
pop
push
xchg
test
cmp
gs
cmps
cmps
aaa
mov
in
aad
pop
dec
push
push
pop
dec
pop
add
mov
or
add
xchg
and
xor
in
rcl
jl
mov
jecxz
ss
mov
cmp
jns
fcom
icebp
test
out
mov
leavew
xchg
cmps
dec
mov
xchg
xchg
out
mov
movs
int
aas
cmp
in
add
sar
xor
sub
sbb
not
scas
or
dec
push
xchg
lds
rol
mov
pop
inc
imul
sti
imul
loope
inc
xchg
data16
(bad)
jns
shl
dec
sti
aaa
cmp
mov
std
cs
mov
das
jne
in
lock
scas
mov
sti
mov
(bad)
hlt
sub
and
and
mov
push
mov
inc
fld
cld
out
cmp
mov
xchg
pop
pop
and
mov
adc
in
jg
or
enter
jae
arpl
daa
cmps
ror
call
lods
das
clc
cmc
adc
loop
jle
loopne
adc
dec
dec
push
xchg
or
outs
mov
pusha
in
mov
fidivr
add
pop
xchg
cmp
leave
inc
ss
ins
mov
mov
mov
sar
mov
jecxz
out
arpl
js
loope
mov
ins
pop
xor
dec
sub
scas
inc
mov
add
add
and
jb
movs
mov
gs
ins
in
mov
mov
fadd
or
jmp
jecxz
xchg
stos
add
lods
add
fist
je
lds
das
pushw
sub
dec
mov
adc
pop
addps
mov
cmps
and
mov
fisubr
mov
and
in
mov
inc
rcl
lods
pcmpeqd
cwde
xchg
pusha
fdivr
addr16
inc
movs
retf
cwde
and
xor
jmp
(bad)
pop
or
pop
ror
adc
arpl
jmp
stos
sbb
push
imul
retf
sub
pop
inc
cmp
sub
sti
mov
mov
fiadd
sbb
cmp
call
xchg
jno
dec
mov
jp
shl
fwait
sub
stos
xchg
jmp
sub
sub
test
outs
lock
pop
xor
out
fisttp
(bad)
sbb
mov
test
xchg
adc
jl
xlat
or
leave
data16
ja
mov
cmps
push
xor
jl
inc
cmp
stos
jb
and
imul
int3
ins
ret
shl
into
or
cmps
pop
fidivr
adc
pop
sbb
dec
and
sti
xchg
sub
and
imul
push
sbb
or
das
in
and
xor
dec
loope
stos
inc
repz
(bad)
ror
push
pusha
xor
ins
lods
jo
pop
cli
jg
(bad)
or
cs
push
lahf
test
arpl
sbb
dec
icebp
inc
bound
pusha
data16
inc
fs
fs
mov
sbb
cdq
test
ds
or
jle
cmp
addr16
aas
rcr
(bad)
pop
gs
ret
gs
ror
jg
push
jge
fiadd
mov
pop
js
adc
pop
lock
loope
dec
add
pushf
fimul
enter
iret
repz
xchg
retf
popa
or
and
(bad)
stos
jge
jle
mov
(bad)
jo
cmps
push
dec
sbb
sub
push
add
xor
test
push
(bad)
ins
add
sbb
adc
repnz
neg
or
cmp
pop
cmc
dec
outs
mov
imul
or
js
mov
push
xor
outs
mov
push
xchg
push
inc
push
hlt
mov
and
retf
mov
jnp
xor
daa
mov
outs
aad
mov
call
mov
and
ds
cdq
rcl
sbb
and
push
and
loop
pop
fisttp
and
adc
inc
inc
lahf
mov
cmp
dec
mov
fnstenv
xchg
in
dec
test
xchg
push
xchg
fdivr
test
xchg
sbb
into
inc
aaa
mov
push
rol
and
stos
repnz
bound
push
movs
imul
inc
push
mov
push
xor
mov
mov
stc
outs
into
mov
test
cmp
lds
sahf
shr
movs
push
into
ins
sbb
pop
imul
pushf
std
pop
xchg
xchg
retf
mov
not
push
push
fsub
mov
mov
xchg
into
add
adc
scas
ins
push
ins
inc
rcr
js
outs
in
je
sbb
call
je
pop
nop
jl
pop
jecxz
dec
jns
call
mov
loopne
cmp
in
push
pop
xchg
push
add
test
push
push
pop
int3
adc
es
mov
imul
mov
or
cld
push
xchg
icebp
(bad)
xchg
xlat
dec
rcl
sub
jns
out
push
mov
cmp
and
cld
movs
cmps
mov
jmp
in
push
aaa
inc
movs
fcom
xor
imul
aad
cmp
int
inc
loope
ror
dec
out
dec
push
sub
inc
mov
push
movs
aad
push
xor
enter
pop
movs
sti
adc
stc
ins
sar
inc
push
push
jg
adc
scas
jle
dec
movs
(bad)
scas
cmp
add
outs
stos
cmp
add
mov
mov
shr
jb
sbb
and
sbb
loopne
sub
push
rcl
repnz
jne
add
push
cmp
out
xor
jg
je
mov
mov
outs
add
pop
pop
mov
mov
add
inc
shl
das
or
cmp
push
push
sub
into
mov
pop
ins
in
cmp
xchg
pop
ret
test
hlt
(bad)
in
ret
mov
push
pop
xchg
push
add
pop
outs
cli
pop
enter
dec
stc
jno
ds
int3
or
sar
mov
lahf
rcr
adc
lahf
aaa
das
jle
or
aad
dec
add
adc
dec
std
test
fadd
fwait
pop
mov
dec
xchg
and
ins
fist
inc
mov
inc
pop
mov
aas
into
jno
lods
dec
and
add
pop
mov
cmp
adc
inc
pop
push
cs
daa
stos
inc
mov
xchg
push
test
fistp
mov
iret
cs
stos
xor
(bad)
mov
outs
add
xchg
add
call
or
lods
cmp
jge
lock
mov
bound
mov
sar
stos
mov
push
push
arpl
imul
adc
pop
fcom
sbb
lahf
not
ins
repz
ins
mov
jae
bound
jns
js
sahf
aam
inc
push
sub
jg
mov
jno
dec
pop
xor
(bad)
movsx
xor
stos
mov
xlat
mov
cli
xchg
inc
pop
fldenv
fbld
bound
cs
rcl
out
mov
push
push
bound
fiadd
sub
and
fs
and
mov
add
push
les
dec
sbb
dec
sub
ret
jne
(bad)
fs
sub
mov
push
pop
dec
sub
sti
push
outs
shr
mov
sub
cmp
aas
nop
pop
xchg
int3
pushf
cmp
lods
ficomp
std
xor
sub
dec
mov
and
jno
imul
out
leave
(bad)
lock
mov
jae
in
iret
jbe
das
or
rol
out
ds
pushf
pop
jmp
dec
or
mov
imul
das
out
mov
and
dec
push
mov
dec
icebp
test
mov
mov
mov
lahf
int3
sub
outs
popa
mov
movs
sub
mov
repz
cmp
pop
(bad)
jnp
xchg
out
mov
sbb
in
clc
inc
imul
div
adc
popa
jb
int3
xchg
xchg
fist
add
dec
xchg
leave
ss
xor
dec
jge
jge
std
rcr
cmp
mov
pop
inc
lock
imul
or
xor
push
and
or
aas
daa
scas
pop
add
lahf
ja
jl
pop
sbb
pop
pop
pop
jmp
sub
jae
and
pop
inc
out
pop
pop
dec
shr
dec
pop
sbb
scas
or
fcomp
xor
sbb
retf
mov
adc
sar
adc
sbb
mov
sbb
jecxz
outs
cmc
mov
mov
mov
xchg
dec
test
mov
and
mov
imul
in
push
inc
jle
mov
fstp
push
add
inc
pop
in
arpl
enter
sub
out
loop
loopne
add
(bad)
int
fisttp
dec
inc
or
inc
fdivr
int
in
fwait
retf
push
or
jmp
xor
scas
jecxz
add
fist
jo
sti
push
es
movs
out
inc
retf
imul
loopne
jp
push
adc
xor
loop
mov
push
sub
jmp
xor
psrld
das
test
xchg
imul
test
sbb
shl
retf
push
cli
imul
cwde
and
pop
scas
aas
xor
lahf
dec
xchg
mov
test
and
aam
mov
mov
adc
mov
jb
dec
cs
cs
addr16
mov
fucom
mov
mov
and
inc
mov
xchg
(bad)
out
cmp
sbb
gs
jg
mov
bound
in
inc
jge
xchg
fnstsw
loopne
adc
dec
cmp
push
sub
xor
adc
idiv
addr16
repz
inc
fcom
(bad)
pop
scas
push
or
dec
call
mov
cmp
inc
nop
movs
(bad)
test
fcom
pop
scas
lock
mov
dec
adc
inc
jno
dec
mov
inc
clc
inc
pop
mov
clc
xchg
sbb
mov
int
ret
jnp
enter
sbb
jbe
xor
mov
or
je
movs
test
xor
retf
add
or
cld
inc
cld
fdiv
test
push
inc
ins
iret
push
pushf
xchg
sub
cmps
inc
xchg
ins
icebp
out
mov
adc
adc
lds
es
lods
jge
movs
sub
fisub
int3
mov
push
adc
mov
dec
mov
stc
test
stos
dec
es
pop
bound
test
sub
movs
js
scas
(bad)
mov
inc
pop
add
(bad)
xchg
push
sbb
pop
xchg
adc
sbb
es
sub
push
xor
push
cwde
jbe
xchg
xchg
lds
xchg
dec
pop
ins
arpl
xor
pop
aam
xchg
adc
je
jp
dec
imul
jge
sahf
adc
or
xchg
cs
mov
or
pop
inc
ficom
pop
popa
movs
jnp
repnz
call
inc
push
xchg
sahf
xchg
ja
into
fisub
fdivr
xor
ret
add
jecxz
mov
call
(bad)
jmp
test
add
outs
jecxz
sar
sbb
aaa
and
jbe
jno
sbb
cmc
stos
test
jp
add
cli
dec
mov
int
mov
icebp
test
push
mov
add
cmp
and
repz
mov
jp
sbb
aaa
pushf
stc
or
mov
sbb
add
cli
jnp
xor
in
dec
sbb
test
xor
xlat
sub
push
cdq
inc
out
into
std
jae
aam
lds
ret
dec
ror
adc
ror
ret
or
sub
jp
mov
cmp
sub
in
ja
int
scas
test
mov
inc
loopne
fbstp
cld
sbb
(bad)
mov
or
xor
clc
or
jmp
xor
in
movs
adc
not
or
(bad)
dec
xchg
mov
mov
scas
lds
div
xchg
cli
lea
inc
xlat
repnz
xchg
xor
push
mov
or
or
mov
daa
fsub
push
xchg
jo
test
mov
inc
ficomp
adc
push
cmp
adc
inc
in
dec
pop
or
pop
and
xchg
and
pop
das
imul
or
mov
inc
add
mov
mov
fs
(bad)
and
cmps
dec
test
sub
inc
out
(bad)
retf
movhps
xchg
pop
xor
leave
fdivr
jne
stc
leave
xlat
push
clc
pop
adc
inc
sub
gs
test
inc
fstp
sub
mov
pop
push
add
jb
xchg
inc
dec
cli
les
add
call
mul
arpl
inc
jmp
pop
dec
adc
arpl
xor
aaa
int
imul
mov
push
nop
ins
inc
(bad)
sbb
xchg
ja
add
aam
or
inc
(bad)
jno
mov
fidivr
xchg
pop
adc
jmp
inc
dec
rep
jg
fadd
jns
int3
das
jg
jb
aam
xor
imul
in
shr
or
jle
sub
jmp
stos
popf
sub
inc
add
jecxz
push
add
mov
cmp
sub
xchg
jl
js
jae
iret
push
jge
test
add
adc
jp
test
jo
repz
inc
jp
push
sbb
lahf
dec
arpl
test
sub
push
push
aas
dec
std
pop
jne
pop
pop
out
adc
mov
adc
sbb
xchg
daa
rcr
test
inc
mov
adc
fs
push
scas
xchg
dec
fst
cmp
add
pop
sbb
stc
add
inc
mov
sbb
cmp
cli
shr
out
stc
mov
xchg
xchg
sbb
push
loopne
add
dec
mov
sub
mov
(bad)
inc
fld
ret
cmp
iret
sub
setp
mov
cs
in
cmp
cmc
pop
mov
dec
call
mov
repz
xor
in
stc
xor
add
push
repnz
jmp
test
jmp
add
lahf
stos
mov
dec
fmul
mov
lds
loopne
or
pop
int
sub
jmp
in
addr16
dec
push
adc
xor
scas
ds
repz
xchg
in
or
inc
add
ins
jo
shl
add
push
jmp
dec
adc
push
popf
stc
xchg
outs
out
and
push
pusha
lahf
test
adc
push
popa
retf
xchg
push
or
test
xchg
xor
mov
pushf
and
retf
imul
adc
pop
addr16
push
inc
cmp
inc
call
shl
mov
mov
mov
test
daa
ja
cmc
popf
jmp
sar
cmp
cmps
stos
shl
data16
mov
inc
stos
dec
xchg
fidiv
pop
xchg
rol
arpl
pushf
dec
cmp
jno
jl
push
and
mov
bound
scas
in
sbb
add
rcr
xchg
sub
and
inc
cmp
outs
inc
scas
inc
add
xor
lahf
dec
sbb
mov
inc
inc
das
cmp
leave
test
push
cmp
ret
dec
aas
sbb
mov
dec
mov
out
call
mov
or
adc
inc
in
mov
push
jle
jns
adc
(bad)
lock
and
jecxz
ret
jbe
cld
lock
xlat
xlat
inc
pushf
mov
mov
lea
shl
clc
inc
ret
mov
cmps
out
ficomp
lods
bound
dec
or
hlt
mov
dec
xchg
lods
pop
mov
mov
sbb
(bad)
out
outs
scas
cmp
pop
ret
adc
cmps
repnz
ja
xchg
(bad)
jbe
dec
sti
fld
push
xchg
add
sti
jmp
repnz
mov
pop
mov
jno
xchg
retf
and
mov
push
adc
mov
jo
cs
add
je
mov
shl
jnp
fiadd
sbb
into
push
sti
icebp
jmp
add
sub
rcl
mov
repnz
rcr
push
mov
sub
adc
dec
aam
fnstsw
mov
(bad)
mov
int3
cmp
out
or
fwait
dec
cld
test
xchg
xlat
pushf
js
dec
repnz
shl
xchg
dec
push
ret
xchg
imul
or
mov
ins
push
add
mov
xchg
stos
dec
loop
jmp
(bad)
mov
mov
xchg
add
or
mov
or
lahf
not
(bad)
adc
mov
fiadd
out
repz
cdq
mov
ins
xor
pop
iret
rcl
(bad)
test
cmp
test
leave
retf
push
xchg
ja
call
ret
mov
jge
adc
mov
mov
out
xor
lods
out
xchg
mov
pop
mov
outs
stos
push
sub
stc
fnstsw
fwait
xchg
xchg
outs
inc
jae
jge
call
push
jnp
pop
jno
cwde
or
inc
ins
js
fnclex
aad
scas
icebp
dec
stos
retf
cmp
retf
xor
sar
fistp
push
cli
jns
or
pop
jl
stc
movs
popa
sbb
sbb
and
popf
sub
lahf
cmp
imul
ret
or
xchg
scas
cmc
or
or
aam
jae
push
cld
adc
bound
mov
loop
imul
in
mov
mov
jle
daa
dec
mov
dec
outs
dec
xchg
cmp
add
and
mov
xchg
cmc
cmc
push
fs
leave
jmp
sbb
in
iret
inc
xchg
mov
rcl
arpl
and
aam
jne
pop
pop
retf
mov
inc
xor
mov
fadd
je
lds
(bad)
mov
int3
cmp
popa
fiadd
push
out
jmp
loopne
adc
push
mov
adc
mov
cmc
hlt
push
iret
mov
daa
xor
push
aam
and
or
cmp
es
push
xlat
out
cmp
dec
fsubr
pusha
mov
retf
pop
push
jae
ins
push
push
adc
adc
fwait
popa
mov
out
sub
mov
sub
jmp
or
lds
sub
ror
xor
popa
call
jl
cmp
adc
sbb
sub
add
mov
bound
movs
push
out
xlat
mov
ds
dec
mov
std
es
xor
push
not
inc
or
jo
adc
sub
int3
out
adc
es
call
mov
add
test
je
push
cmps
jb
push
pop
(bad)
lahf
push
jmp
dec
pusha
repz
push
iret
mov
xor
or
in
mov
daa
inc
data16
inc
in
jmp
sbb
jg
pusha
and
ss
and
push
mov
std
cmp
pop
sbb
leave
dec
es
dec
jecxz
adc
pop
push
pop
and
cmp
repnz
mov
cmp
xor
mov
into
fcomp
call
fwait
push
dec
adc
in
push
into
lea
sti
or
in
xor
(bad)
jmp
mov
fldcw
sbb
pop
xlat
fcomp
sbb
lea
jo
push
mov
xchg
cmp
stos
in
push
aam
inc
loopne
adc
fcom
test
cmps
adc
cmps
inc
mov
mov
movs
data16
cmp
add
pushf
scas
mov
push
xor
pop
fwait
test
icebp
and
sbb
push
mov
xor
sbb
enter
mov
iret
xor
jne
and
adc
adc
icebp
in
movs
xor
mov
enter
mov
xchg
push
xchg
cli
movs
and
push
push
jl
div
mov
popf
mov
adc
or
push
sub
and
push
mov
shl
inc
xor
test
ds
sahf
push
(bad)
xor
fisubr
(bad)
jp
retf
pop
sub
cmp
das
mov
sub
jnp
push
stos
addr16
cdq
out
push
dec
dec
lods
fistp
pop
shl
push
lahf
int3
push
dec
aas
add
loop
xor
push
dec
jnp
fiadd
mov
push
lock
scas
(bad)
add
loopne
adc
jnp
push
xlat
dec
mov
adc
add
jle
test
adc
sti
jecxz
xchg
jg
and
or
mov
aam
mov
jb
inc
adc
adc
push
inc
outs
out
outs
ret
adc
mov
arpl
daa
cmc
mov
int
ins
sbb
pop
stos
mov
enter
jg
loope
das
in
adc
stc
inc
xchg
pop
xchg
fcmovnbe
push
push
add
(bad)
cmps
cmp
adc
aam
imul
aaa
fdivr
fst
popf
stos
xchg
(bad)
rcl
mov
jne
jae
add
add
retf
int3
jmp
es
aaa
stos
fwait
jg
push
jge
xor
adc
call
loopne
adc
daa
pop
ret
xchg
xchg
div
xchg
adc
add
test
repz
ins
xchg
xor
int
inc
test
lods
adc
or
stc
imul
sub
stos
pop
jg
mov
mov
or
mov
dec
add
and
adc
mov
sub
dec
arpl
push
mov
pop
aad
jae
sub
cmps
and
xlat
xor
add
sbb
ins
jnp
ss
adc
push
jns
cmp
mov
add
movs
mov
xor
pushf
ja
or
xlat
sbb
mov
mov
mov
xor
mov
xor
pop
cmp
xchg
jns
test
imul
dec
(bad)
or
cld
loopne
and
scas
xor
xchg
push
popa
and
jge
jge
fbstp
adc
or
scas
inc
jno
mov
and
popf
inc
das
sub
add
ss
xor
ret
fmulp
cdq
inc
jae
std
ds
push
mov
out
sub
jno
nop
pop
add
in
out
and
push
inc
cs
dec
xchg
(bad)
add
or
inc
and
pop
or
outs
ins
mov
push
(bad)
ins
adc
lea
lahf
jbe
push
xor
fadd
sar
sbb
mov
shr
dec
imul
xor
mov
imul
cmp
aas
sub
mov
faddp
add
stos
stos
pop
pop
sbb
out
xlat
imul
push
jae
pop
push
scas
idiv
sbb
imul
in
data16
inc
dec
sub
les
out
mov
shl
xchg
(bad)
xlat
dec
jp
loopne
leave
jle
ds
sahf
out
xor
push
dec
pop
jno
push
push
test
and
lea
pop
push
xchg
sbb
scas
cs
sti
adc
sub
lods
adc
pop
cwde
pop
sbb
or
ror
ret
in
stc
cmc
fwait
xchg
addr16
les
sar
clc
pop
mov
cmp
push
scas
(bad)
mov
pop
or
push
jmp
repnz
mov
jl
mov
add
sub
sahf
and
out
icebp
adc
mov
push
test
ja
cmp
ja
mov
xchg
jmp
out
push
repnz
cmc
xchg
out
jmp
jnp
and
mov
fisubr
fs
dec
fwait
xor
inc
fsub
clc
mov
mov
rcl
mov
fwait
push
pop
sbb
mov
mov
pop
xor
ds
jecxz
hlt
mov
bnd
xchg
xor
cwde
pop
(bad)
cmp
sub
fxtract
ins
scas
outs
sbb
shl
cli
in
jbe
in
mov
data16
test
rdtsc
in
imul
es
push
js
vaddsd
fwait
and
inc
xor
les
cmp
mov
dec
fwait
cmp
pop
popa
dec
sbb
imul
inc
mov
mov
fisttp
add
call
sbb
ret
or
loope
pop
xlat
jl
cmps
ja
inc
ret
imul
and
shl
in
sahf
call
mov
jp
fwait
or
mov
cmp
jo
xor
scas
xchg
and
retf
xor
mov
std
sub
(bad)
jmp
popa
xchg
ins
dec
or
dec
push
(bad)
jge
mov
shr
std
adc
into
test
ficomp
nop
lods
rcl
loop
mov
xchg
bound
adc
sbb
xchg
ret
adc
mov
std
xor
push
rcr
xlat
inc
jge
push
arpl
outs
dec
inc
ins
lds
jne
mov
iret
mov
loop
movs
pop
aaa
ins
in
push
push
aam
jle
adc
cmc
and
sbb
dec
aad
dec
xlat
dec
xchg
mov
and
sti
dec
mov
repz
mov
out
outs
(bad)
inc
stos
push
jl
retf
mov
hlt
pop
add
cmp
mov
call
inc
jae
cmp
test
and
mov
ror
and
fistp
adc
test
mov
std
enter
xchg
nop
cmp
sahf
adc
fwait
test
push
or
cdq
sbb
sbb
repz
lods
mov
lods
sub
lds
push
mov
dec
shl
enter
dec
jmp
scas
jp
fldenv
or
test
cmc
pusha
lea
ss
push
inc
(bad)
jecxz
je
xchg
dec
adc
iret
push
mov
jle
sub
sahf
popa
jmp
mov
cld
mov
xchg
(bad)
mov
pop
pop
xor
cmp
or
repnz
ja
sbb
call
loope
xor
data16
leave
mov
sti
xor
push
sbb
mov
icebp
aas
jg
xor
or
daa
ja
sar
mov
sahf
xor
xchg
lahf
rcr
js
mov
jle
daa
xor
ins
jp
and
push
push
test
jne
aaa
mov
rol
xchg
inc
stos
jl
cmp
or
ins
aad
jnp
sar
adc
neg
push
xor
loope
mov
mov
xor
scas
aad
dec
and
pop
jae
(bad)
gs
pop
xchg
es
inc
imul
mov
mov
inc
jns
sahf
ds
mov
pop
adc
jbe
retf
xchg
adc
mov
icebp
mov
in
out
pushf
push
ds
push
push
inc
adc
call
dec
sub
outs
mov
ret
int3
cmc
mov
xchg
mov
dec
or
(bad)
cmps
in
shl
xor
ret
inc
sbb
xor
enter
mov
dec
cmp
sub
inc
mov
shl
xchg
mov
inc
mov
xchg
out
jmp
mov
cmp
out
cdq
adc
mov
idiv
std
fucomp
pushf
xchg
ret
lods
mov
add
jno
pop
cs
mov
jnp
dec
inc
std
xchg
cmp
into
xor
xchg
call
adc
mov
call
test
js
js
pop
sub
push
cwde
mov
mov
out
es
dec
xchg
inc
inc
outs
xor
nop
sub
lods
pop
xchg
adc
cmp
dec
outs
xchg
mov
adc
lods
ret
lea
push
jge
sub
fild
(bad)
xor
push
scas
ja
ins
cmp
dec
jmp
or
dec
(bad)
dec
test
xor
pop
sub
sub
aas
dec
scas
cmp
add
or
fnstcw
inc
fs
push
pop
xchg
arpl
sbb
mov
jae
jb
ret
dec
jle
jge
fnsave
jno
and
sub
(bad)
aas
cld
stc
xchg
jb
cli
ror
push
jns
leave
dec
sub
stc
mov
jl
adc
dec
loope
fst
stos
pop
nop
pop
ja
movs
iret
mov
lahf
sub
sbb
loope
push
mov
push
xor
sahf
jmp
scas
pop
js
sbb
mov
call
repnz
push
push
sbb
jmp
out
mov
(bad)
push
adc
fwait
shl
cwde
push
retf
mov
in
shl
or
(bad)
dec
push
pop
js
jmp
fwait
loope
in
dec
mov
aam
and
adc
test
or
(bad)
sbb
cmps
int3
xor
jns
jno
popa
and
push
pop
jmp
stos
out
movs
or
dec
data16
pop
pushf
pop
in
imul
pop
mov
push
sbb
adc
jl
jb
outs
push
jnp
in
ins
xlat
fs
jno
push
cmc
fisub
nop
fabs
xchg
inc
and
idiv
xor
aas
and
or
sub
push
dec
dec
test
mov
adc
shl
pop
inc
data16
mov
lea
push
jle
rol
push
sti
xor
xchg
pushf
into
rsm
rcr
jb
das
sub
xchg
sbb
in
in
(bad)
jae
into
ret
inc
bound
mov
ret
aad
mov
mov
mov
push
outs
mov
repnz
test
(bad)
in
fidivr
mov
shl
arpl
dec
outs
adc
xor
dec
cld
movs
cmp
stos
iret
popf
repz
push
bound
and
fiadd
or
add
add
cs
into
cwde
lods
mov
mov
fs
popf
mov
test
hlt
gs
(bad)
fisttp
add
ins
jecxz
ins
in
pop
mov
fyl2x
cmp
dec
xor
mov
inc
nop
add
mov
add
pusha
push
add
mov
adc
je
mov
sbb
push
shr
adc
outs
movs
or
ss
hlt
fmulp
sub
out
rol
retf
fs
(bad)
jmp
mov
mov
shl
mov
sub
mov
sar
push
cmp
cmps
mov
push
ror
and
push
and
and
cmps
shl
mov
xor
cdq
mov
(bad)
es
jae
movs
cmp
(bad)
mov
leave
mov
test
xor
xor
mov
adc
aaa
shl
mov
rol
loope
bound
js
xor
enter
cmp
cmp
xchg
aaa
repnz
dec
sbb
push
adc
adc
pushf
outs
xor
out
dec
inc
cld
mov
dec
out
inc
adc
mov
sub
push
sub
or
shl
sub
loop
dec
out
jmp
fidivr
mov
test
push
or
arpl
mov
or
ss
fld
std
ret
jge
sub
imul
aam
cmp
test
sbb
out
or
xchg
jno
add
outs
inc
in
lods
push
sbb
call
inc
push
scas
ins
adc
dec
xor
sub
sti
bound
pushf
jp
scas
push
aam
xchg
movs
cmps
repnz
dec
inc
sub
jnp
pop
cwde
push
repnz
dec
bound
mov
jb
test
adc
(bad)
jmp
mov
pop
sbb
sub
ret
das
sahf
lock
mov
cvttps2pi
inc
rcl
in
inc
mov
iret
adc
(bad)
out
nop
mov
lods
xchg
les
add
mov
ja
inc
mov
jae
pop
xchg
scas
push
fwait
pop
sbb
mov
xor
addr16
in
ret
call
push
pop
cmp
ror
and
repz
sti
and
aas
shl
loopne
in
jg
shr
ss
dec
movs
jbe
cli
add
and
rcl
xchg
shl
scas
pop
sbb
pop
ins
xchg
mov
xchg
push
je
sbb
lock
test
pop
and
push
shr
loop
mov
mov
sub
shr
pop
cmps
xor
out
adc
cs
sub
cmp
cdq
fistp
or
(bad)
and
mov
mov
stos
test
xchg
daa
test
call
in
mov
dec
lds
push
ins
dec
xchg
rcl
call
or
add
sub
pop
idiv
add
inc
ror
pop
leave
add
cmc
adc
mov
dec
in
lock
pop
xchg
mov
dec
adc
cmp
outs
mov
mov
cmp
xchg
push
sbb
xchg
xchg
adc
jne
inc
pop
pop
mov
cmp
and
neg
imul
push
call
or
cmp
js
mov
sbb
mov
fist
pop
sub
mov
mov
outs
jl
push
(bad)
mov
xchg
addr16
mov
jo
not
cmp
int3
leave
ja
retf
mov
sub
cmp
fxch
dec
dec
scas
push
xor
cld
aam
mov
mov
aad
jno
sub
cmc
mov
shl
lock
(bad)
gs
or
or
jp
push
loop
add
jns
cmps
mov
jno
push
dec
sub
call
sbb
jmp
ja
sub
movs
cmp
cmp
faddp
fbld
jne
test
jo
es
ja
dec
popf
sar
shl
addr16
push
cmp
mov
pop
repnz
fwait
mov
mov
pop
mov
mov
lods
cld
xchg
ins
ja
add
pushf
fimul
mov
dec
into
neg
and
fild
(bad)
jmp
jp
inc
push
scas
push
and
dec
cmp
fstp
clc
jp
into
inc
pop
movs
adc
jae
or
cmp
fwait
loope
mov
inc
mov
popa
outs
push
jp
and
lea
pop
les
inc
mov
lods
in
scas
xor
inc
add
sub
xor
fsubp
sbb
xor
xlat
out
inc
les
les
repz
aas
dec
add
add
or
mov
dec
rcr
stc
clc
xor
cmp
in
pop
dec
test
pushf
add
lock
jnp
and
loope
cwde
ds
adc
push
ret
loopne
out
int
fdivr
jp
stos
in
std
and
es
out
loop
inc
xchg
ins
sbb
into
out
je
icebp
pop
and
xchg
shr
sub
imul
or
dec
mov
cwde
jns
shl
adc
xor
jns
icebp
and
sbb
outs
jle
shl
adc
pushf
xor
sbb
add
cld
sub
cmp
sahf
outs
mov
sub
jg
fdivr
dec
call
mov
int3
ds
dec
cmp
xor
ds
iret
sar
int
popa
mov
jo
mov
test
mov
and
jmp
and
neg
mov
xor
mov
push
fdivr
cmp
push
mov
ss
(bad)
cdq
sbb
mov
stos
jbe
dec
dec
sbb
test
imul
xor
jge
test
ficom
loop
or
adc
dec
sub
in
mov
dec
lods
pop
(bad)
sbb
ffree
mov
mov
fldcw
in
and
cmc
mov
xor
push
nop
sbb
ret
mov
mov
adc
pop
xor
mov
ret
pop
xchg
sti
loope
inc
aaa
retf
jns
cwde
xchg
mov
call
mov
scas
mov
push
and
iret
mov
cmps
or
mov
adc
mov
int3
pop
dec
mov
adc
mov
ret
dec
inc
std
mov
pusha
pop
sbb
jae
mov
int
mov
push
cmc
cmp
hlt
add
push
and
or
cmp
xchg
popa
std
cmps
stos
sar
arpl
or
(bad)
dec
mov
cmps
or
and
inc
sbb
jnp
xchg
call
jnp
or
or
lea
or
or
mov
push
mov
fld
popf
in
not
mov
lahf
pushf
inc
call
out
pop
xchg
nop
aam
sahf
or
or
loop
arpl
sti
jmp
dec
dec
jo
call
fwait
sbb
pop
inc
retf
sub
ja
(bad)
lods
(bad)
ins
add
mov
cmp
push
xor
mov
out
mov
xor
xor
lds
retf
push
inc
jmp
jmp
ds
dec
sub
loope
repz
and
lock
rcl
xor
and
mov
push
cli
cld
test
adc
sbb
popa
call
das
sub
cli
nop
inc
(bad)
aas
cld
jae
fadd
int
adc
dec
fwait
test
cld
push
cmp
xchg
sbb
aam
sbb
and
mov
cmps
mov
xchg
sub
scas
lea
mov
adc
fst
and
scas
pop
ret
jle
jl
stos
ss
mov
call
push
out
pop
movs
sub
in
push
xchg
sub
int3
mov
mov
(bad)
outs
lea
loop
mov
push
jae
cmp
repnz
xchg
in
jmp
mov
push
nop
jnp
pop
mov
movs
or
inc
fist
pusha
inc
inc
inc
test
push
test
mov
out
hlt
add
xor
rcr
jbe
ficom
add
loopne
xchg
ret
and
mov
lock
inc
add
enter
xor
sbb
dec
dec
xor
sbb
loop
stc
outs
lods
mov
cwde
jne
in
mov
shr
add
adc
mov
add
das
dec
cmp
xchg
stos
dec
cli
push
scas
xor
xchg
push
xor
loop
(bad)
popa
add
lahf
sbb
xchg
jbe
ret
inc
inc
or
add
sbb
pop
jb
or
fiadd
sbb
pop
cmp
repz
ds
xchg
adc
(bad)
or
mov
ja
or
idiv
or
cmp
movs
adc
mov
jbe
push
xchg
pop
into
push
mov
test
xor
mov
sub
leave
lahf
inc
mov
or
dec
das
lahf
pop
xlat
add
nop
dec
xchg
out
pop
xchg
out
xlat
ret
or
scas
or
pop
pop
inc
not
arpl
and
(bad)
xlat
arpl
fwait
stos
and
push
dec
iret
jns
pop
mov
nop
aaa
xor
ins
dec
shl
leave
cmp
test
jle
xor
iret
js
test
ss
stos
pop
ret
data16
pop
dec
mov
pop
pushf
je
jns
sub
stos
fsubrp
(bad)
pushf
rcl
xor
push
repz
je
rol
adc
cli
neg
fisttp
ret
inc
cmp
or
or
ins
outs
sub
add
test
ror
std
sub
outs
sub
inc
mov
mov
cmps
(bad)
leave
out
jmp
in
fs
jp
fs
inc
xor
sub
add
pusha
enter
adc
aad
push
data16
pop
pop
add
out
jno
mov
pop
dec
ror
xor
rcl
mov
jecxz
inc
fld
cmps
jecxz
or
xchg
adc
pop
jns
sub
cmp
mov
std
dec
nop
bnd
cwde
and
ret
adc
jle
mov
jp
jg
xchg
and
leave
loopne
or
adc
or
ror
dec
loope
test
push
push
mov
jl
addr16
and
in
jg
sub
jecxz
repnz
pop
dec
mov
push
lea
sbb
pop
fwait
sbb
hlt
xor
push
stos
mov
lock
inc
aaa
ja
std
or
call
xchg
dec
popa
cmp
sub
dec
pop
pop
sub
or
in
mov
sub
sbb
xchg
sbb
mov
ds
ret
mov
mov
jmp
inc
and
enter
pop
sbb
ret
fistp
pop
xchg
repnz
int3
push
mov
jo
mov
sub
bound
nop
aas
mov
test
sub
dec
mov
jge
dec
cs
push
pop
retf
movs
iret
rcl
cmp
enter
and
pop
std
sbb
jge
jmp
sub
xchg
ds
adc
es
sbb
dec
mov
xchg
enter
sub
lea
out
push
and
mov
jmp
ficomp
ja
sbb
inc
shl
popf
push
mov
(bad)
(bad)
mov
mov
fwait
jbe
push
inc
jle
lods
std
adc
int
call
push
pop
imul
mov
js
shl
jb
mov
fs
stc
xchg
inc
cmp
adc
mov
js
jae
mov
lods
mov
xor
inc
test
lea
call
int
pop
push
jge
dec
push
mov
ins
sbb
into
or
add
in
ins
lock
mov
xlat
dec
cs
xor
cmp
xor
sbb
jl
mov
dec
lahf
mov
out
pop
pop
data16
sbb
int3
inc
jo
sub
scas
cli
hlt
pop
lock
xchg
ret
cmc
bound
call
jecxz
push
cmp
jmp
xchg
sbb
mov
inc
cli
arpl
pop
push
mov
inc
cwde
jno
(bad)
adc
jmp
mov
cmc
push
push
cld
inc
jnp
sbb
pop
xor
xchg
and
bound
jo
lods
add
xor
mov
fistp
and
ficom
sbb
arpl
mov
lahf
test
pop
mov
(bad)
stos
or
and
add
adc
mov
cmp
sub
in
rcl
lea
into
inc
push
inc
ret
scas
cmp
sbb
xor
aas
push
xor
cmps
outs
push
test
add
sbb
cmc
cmp
shl
es
and
inc
jg
(bad)
sbb
mov
xchg
imul
push
rol
inc
sbb
jne
mov
loop
xchg
mov
push
pop
ror
xchg
int3
pop
push
sbb
jle
rcr
sub
pop
xchg
adc
jle
loopne
out
xor
mov
inc
adc
sbb
push
fst
das
pop
sub
cmp
xor
mov
adc
stc
ds
cmps
(bad)
movs
xchg
xchg
cld
sub
jno
cdq
hlt
in
mov
clc
out
(bad)
fistp
dec
dec
push
push
inc
fwait
mov
inc
cmps
xchg
add
fist
imul
(bad)
int
lods
fxch
cmp
out
fadd
mov
push
imul
mov
sub
sahf
push
cmc
cmp
ret
fidivr
jecxz
iret
pop
mov
jno
inc
dec
into
gs
int
scas
stos
fwait
cmp
inc
(bad)
xchg
cmps
mov
add
mov
ret
sbb
mov
call
call
data16
ja
leave
cmc
mov
ss
push
stc
push
mov
ins
sahf
call
inc
outs
pop
xor
adc
cs
mov
scas
arpl
test
js
xchg
popf
stc
jae
stos
or
dec
(bad)
dec
jb
xor
stos
add
mov
jb
movs
push
cmp
repz
cld
sbb
mov
test
pop
ret
push
fwait
xchg
test
mov
sbb
sbb
or
add
test
pop
mov
cmp
inc
inc
mov
inc
call
or
push
or
dec
test
loopne
scas
les
call
inc
ss
nop
jmp
cmps
and
pop
xchg
mov
sbb
loopne
js
jl
cmps
call
dec
jle
mov
inc
jns
(bad)
aam
cmp
scas
icebp
and
jmp
mov
sub
jl
push
or
or
mov
clc
retf
cmps
outs
mul
push
lods
in
mov
out
bound
movs
mov
mov
mov
idiv
push
imul
push
mov
(bad)
idiv
pop
cmp
mov
dec
push
xor
out
cwde
fldcw
mov
sub
pusha
mov
jg
and
dec
test
bound
mov
push
fwait
xlat
movs
adc
nop
repnz
mov
ss
por
push
xchg
xor
out
into
rol
xor
or
scas
jmp
adc
xchg
aam
mov
dec
push
gs
bound
ret
cmp
aad
or
leave
mov
xchg
jo
jmp
add
mov
mov
test
mov
outs
cmp
xchg
mov
test
mov
adc
fisubr
xor
fs
xlat
test
mov
ins
sbb
jbe
push
test
inc
pop
(bad)
fld
rol
add
and
mov
call
inc
scas
ror
adc
std
cmp
popa
call
arpl
fild
jbe
xchg
out
aad
inc
sbb
mov
jp
mov
pop
inc
cmp
adc
imul
imul
xchg
cmp
icebp
push
into
ror
adc
jl
sbb
add
pusha
cwde
leave
fisubr
loope
mov
sub
cmps
ret
cmp
into
rcl
int3
leave
mov
imul
ficomp
cld
and
loopne
xor
or
into
scas
mov
sbb
retf
fild
inc
fimul
(bad)
sbb
shl
dec
icebp
aaa
sub
(bad)
xchg
push
push
mov
mov
test
lahf
enter
pop
fisttp
jge
fxch
and
retf
cmp
test
adc
add
arpl
xchg
ja
add
jmp
mov
mov
loopne
bnd
mov
xchg
neg
inc
ds
xchg
dec
mov
aad
loope
popa
add
jns
les
stos
pop
cmp
outs
push
jle
outs
call
cmp
push
jne
jl
(bad)
es
and
adc
movs
test
push
sub
movs
lods
dec
or
repz
popf
das
push
pop
mov
mov
mov
int3
jb
sti
lds
int
jl
sub
sbb
mov
sub
sub
add
push
and
push
pushf
out
inc
inc
lea
ret
enter
sub
add
in
outs
rcr
aas
jmp
jecxz
rcl
sub
cdq
call
xor
push
(bad)
jnp
xlat
adc
jle
fisubr
push
push
jae
or
jae
mov
dec
test
dec
fcom
(bad)
mov
sub
daa
retf
(bad)
pop
adc
adc
mov
ret
shl
jnp
outs
or
mov
sub
pop
inc
push
aad
lods
vmovaps
ss
xchg
pop
mov
int3
loop
inc
xchg
sahf
popf
cmp
push
inc
or
cmps
test
adc
dec
outs
lock
sbb
iret
sti
push
and
in
(bad)
aas
inc
retf
jecxz
add
xchg
push
inc
dec
add
sub
scas
push
cmp
ror
push
mov
retf
sub
aaa
add
cmp
xor
fisub
sbb
jmp
jno
mov
mov
sbb
test
test
push
lods
push
mov
nop
pop
sbb
xlat
cmp
repnz
cdq
push
mov
jg
sahf
and
mov
(bad)
cs
pop
call
cld
inc
push
cs
dec
cmp
and
mov
push
sar
cmp
ret
jl
and
js
mov
lahf
add
inc
xor
inc
fs
das
inc
push
pop
and
adc
xchg
push
mov
cmp
mov
xor
add
xor
imul
mov
les
cmp
jmp
loop
neg
or
push
addr16
lahf
mov
push
clc
pop
sub
or
adc
cs
sar
xor
int3
lds
(bad)
cs
(bad)
xor
jo
ret
dec
dec
hlt
mov
lock
mov
pop
pextrw
xchg
(bad)
in
cmp
push
xor
cmp
jne
mov
cmp
and
test
mov
js
fsub
dec
dec
ror
das
repnz
fcmovnbe
xchg
(bad)
or
leave
mov
mov
cs
mov
cmp
mov
lods
jo
sub
pop
jmp
sbb
lods
int3
out
lahf
nop
lahf
mov
dec
fwait
out
js
jnp
les
push
rol
inc
sub
sbb
mov
mov
inc
mov
and
xchg
push
clc
(bad)
mov
xchg
sbb
mov
jg
push
jecxz
pop
outs
es
sub
jmp
pop
jecxz
ins
leave
push
jno
pop
imul
mov
jmp
mov
iret
repz
je
pop
mov
mov
stos
dec
push
cmp
push
xchg
lods
sbb
mov
push
xor
repnz
lods
pop
sub
inc
inc
dec
push
(bad)
mov
ja
out
mov
adc
or
jl
xlat
sbb
push
test
mov
test
addr16
fwait
and
sbb
and
fild
fild
(bad)
inc
gs
lods
and
fsubr
jp
dec
sbb
aaa
std
xor
xchg
xchg
mov
mov
data16
jmp
xor
adc
add
aad
neg
arpl
test
sbb
lahf
mov
shl
ins
fsub
les
xor
push
xchg
or
stos
loopne
inc
or
dec
jo
mov
pop
or
cmc
add
push
push
pop
mov
jae
ja
aam
je
nop
arpl
fmul
movs
and
jb
fadd
xor
cmp
cmps
sar
pushf
xchg
pop
ins
xchg
adc
cmp
not
in
and
add
in
mov
pop
(bad)
icebp
dec
xor
shl
rcl
push
aaa
push
out
frstor
or
mov
push
add
jg
lahf
cs
rcr
mov
xor
lock
test
out
add
inc
call
test
jb
push
std
mov
div
and
xchg
or
loope
stos
leave
mov
rol
dec
adc
xor
mov
loope
mov
jmp
(bad)
mov
xor
test
test
out
sar
mov
xchg
sbb
icebp
jnp
and
icebp
std
sbb
int
cmps
xor
xchg
mov
lds
outs
mov
mov
mov
adc
adc
adc
ins
add
loop
mov
xchg
jae
das
test
in
mov
cmp
dec
mov
out
sahf
sahf
add
retf
test
mov
sub
int3
add
add
cmp
cmp
pop
div
sub
jmp
sub
retf
dec
sbb
and
div
jmp
xchg
ss
push
(bad)
aad
inc
xor
daa
lahf
xlat
mul
bound
fstp
mov
inc
lods
inc
iret
push
xchg
dec
push
cmp
pop
popaw
fcomp
call
test
dec
repnz
mov
(bad)
iret
mov
adc
es
mov
dec
pop
or
lds
ins
pop
inc
mov
sti
add
lds
jnp
mov
or
and
xchg
jmp
in
jp
mov
adc
jbe
xchg
nop
retf
add
cmp
sbb
cmp
jmp
or
ret
xor
fs
movs
hlt
in
and
fwait
and
repnz
ror
mov
jnp
mov
adc
lds
cmp
and
or
xor
and
iret
fcom
imul
dec
jns
out
mov
(bad)
or
imul
mov
inc
dec
mov
lea
push
adc
xor
mov
dec
dec
sub
adc
stos
xchg
leave
push
xor
sub
pushf
sub
mov
mov
adc
push
ja
loopne
popa
pop
add
fdivr
and
test
mov
pop
mov
out
imul
ror
imul
daa
shr
jmp
loope
mov
inc
mov
and
cmp
shl
jno
scas
clc
ror
xlat
cli
(bad)
aam
push
jmp
and
mov
lahf
jne
call
xchg
cs
or
cmp
pop
xchg
dec
jmp
push
aad
adc
or
sbb
loop
movs
mov
(bad)
scas
mov
mov
dec
pop
mov
adc
mov
mov
push
pop
rcl
outs
sbb
inc
inc
popa
hlt
sbb
movs
push
adc
add
pop
inc
xlat
mov
push
ror
push
cld
xor
loopne
sub
icebp
xchg
scas
adc
data16
push
(bad)
sub
sti
ins
popf
sbb
shl
cmp
lea
jae
jle
sbb
fisub
inc
ror
cmp
mov
mov
sub
and
add
cmp
push
mov
ror
into
xchg
jmp
push
cwde
es
jne
pop
cld
ret
inc
jecxz
lods
dec
dec
add
int3
into
jle
dec
jne
mov
ret
imul
jns
push
clc
aad
xchg
sub
jmp
call
adc
add
jg
push
iret
xchg
xor
loop
xchg
jnp
and
jo
es
outs
stc
dec
inc
sahf
dec
imul
push
xchg
sar
enter
fiadd
addps
mov
shr
outs
cli
pop
movs
call
stos
add
cmps
retf
ins
mov
outs
xchg
sbb
xchg
cli
fidiv
fbld
jle
ret
dec
rol
jae
repnz
bound
outs
jge
cdq
inc
add
dec
pushf
mov
(bad)
daa
outs
test
or
jle
out
cmp
out
call
retf
icebp
pop
fild
push
icebp
mov
inc
shl
sub
call
mov
mov
jns
out
add
ins
popa
mov
je
cmp
js
fld
pop
call
rcr
add
push
dec
mov
mov
and
jo
dec
imul
push
dec
out
xchg
lods
test
xor
pop
aas
in
dec
sub
out
and
xchg
xor
mov
aaa
jb
pop
outs
add
out
push
fwait
(bad)
sti
mov
ins
sti
mov
imul
(bad)
adc
pop
in
add
inc
mov
sub
jle
nop
add
dec
jns
mov
lods
lea
es
sub
or
pop
mov
mov
loope
xor
xchg
popa
add
or
fdiv
test
clc
jns
aad
and
out
dec
fsub
jo
xchg
popa
lods
inc
sbb
ret
mov
pop
repz
push
(bad)
mov
jge
pop
shr
pop
mov
push
or
jns
adc
mov
inc
mov
mov
push
iret
out
cld
or
out
inc
mov
xlat
sbb
mov
push
and
fimul
sbb
xor
movs
add
stos
dec
inc
(bad)
adc
or
dec
mov
cmp
fld
dec
adc
and
add
stc
xchg
retf
jmp
mov
dec
movs
jge
jno
mov
xor
(bad)
push
dec
push
pop
sub
cmc
gs
cmp
mov
push
or
test
inc
mov
push
ror
inc
jae
gs
add
add
jmp
xor
sub
mov
xchg
adc
out
pusha
shl
xchg
xchg
rcl
aad
adc
mov
push
shr
jb
js
push
jmp
mov
jmp
add
jmp
(bad)
imul
mov
adc
cli
fcomi
and
push
iret
iret
int3
or
int
add
mov
es
sbb
sub
jmp
and
mov
push
imul
mov
adc
jo
xchg
sbb
addr16
scas
cwde
xor
mov
icebp
(bad)
mov
stos
leave
add
cdq
mov
fadd
icebp
ins
imul
ins
push
call
push
and
aam
ds
push
test
ret
shr
dec
xor
adc
call
pop
pop
gs
xchg
cmp
fs
imul
aad
jp
and
out
sar
fmulp
jg
fsubr
retf
jmp
cmp
or
jb
das
cmp
fdiv
cwde
mov
mov
cmp
dec
add
cli
ds
cmp
pop
or
and
test
aas
jbe
dec
add
sahf
shl
push
nop
cmp
and
mov
push
aaa
bound
pop
ror
cmp
out
push
xor
int
outs
sti
imul
shl
ss
jne
pop
sbb
ins
jbe
hlt
xchg
pop
and
in
lds
or
xchg
sbb
mov
adc
sahf
mov
cmp
cmp
add
addr16
add
mov
shl
mov
mov
aam
test
les
mov
and
push
dec
in
in
jno
push
outs
lock
dec
test
push
hlt
cmp
xchg
or
ror
add
cmc
lods
pop
add
aas
inc
jl
dec
or
xchg
pop
in
rcl
push
push
scas
lock
pop
jle
xlat
enter
outs
jecxz
enter
ror
retf
jmp
aas
mov
fimul
or
add
or
popf
je
push
bound
xor
aaa
repnz
xchg
add
and
iret
dec
push
aas
in
adc
add
test
cs
sbb
cmp
pop
sbb
jae
dec
mov
inc
repnz
mov
mov
xor
mov
and
je
mov
mov
push
imul
jge
ss
jbe
ret
xchg
inc
xchg
mov
xor
call
scas
movs
popf
add
hlt
push
sub
push
mov
adc
xor
arpl
lock
push
pushf
and
mov
bound
inc
les
movs
and
or
xor
dec
leave
stos
or
xchg
cmp
lds
jmp
dec
cli
mov
fldcw
retf
shl
push
scas
push
mov
lea
cdq
inc
call
ret
adc
arpl
sbb
retf
div
sbb
pop
arpl
lods
mov
mov
mov
mov
cmp
xchg
stos
int
sbb
aad
sub
fsubr
and
jb
movs
test
cli
sub
pop
or
stc
jge
scas
data16
push
std
movs
test
int3
and
and
add
repnz
add
xlat
sub
mov
aam
fwait
retf
xor
in
(bad)
cmp
rcl
sti
and
pop
mov
rcl
and
add
push
je
test
data16
mov
dec
mov
adc
shl
lock
cs
sbb
cs
lds
ret
cwde
(bad)
mov
pop
xor
push
dec
cli
or
out
ja
jbe
mov
enter
(bad)
inc
int3
retf
lods
lock
scas
push
dec
mov
retf
fnstsw
(bad)
pop
jns
stos
xor
jmp
ror
xchg
mov
enter
ds
jg
sbb
add
call
cdq
cld
ds
push
mov
or
or
cli
sub
inc
wrmsr
fstp
sbb
jne
mov
int3
fist
test
cmp
mov
mov
sar
dec
jb
push
imul
les
cs
pop
fst
fnstenv
inc
add
inc
popf
cmp
sbb
shl
jbe
push
sub
out
cmp
imul
fild
out
dec
ds
pop
es
cmp
jbe
sahf
retf
xor
in
inc
mov
iret
cs
cmp
fnstsw
mov
iret
daa
out
push
cmp
imul
jg
jb
repz
lds
mov
jecxz
stc
popf
mov
cmp
data16
lahf
cmp
sub
add
mov
lock
pop
cmp
push
or
and
mov
mov
std
stc
mov
sub
std
repnz
in
fs
loope
sub
ficom
movs
shl
mov
mov
push
leave
js
in
cmovp
pop
(bad)
jmp
dec
lahf
gs
scas
rcr
pop
add
in
loope
iret
or
rcl
loope
loop
scas
xor
lds
push
rcl
or
dec
xchg
cmp
mov
mov
out
inc
bound
out
aad
push
into
adc
cmp
lods
enter
(bad)
cmps
and
addr16
pop
into
mov
sub
jmp
cwde
mov
cmp
mov
movs
xchg
int
push
cmp
std
xlat
je
mov
pusha
or
dec
xor
pop
call
push
mov
stc
nop
push
jl
mov
pop
dec
loope
xchg
pop
sbb
cmp
retf
push
xchg
and
int3
aas
mov
jge
ins
push
cmp
stos
cld
jae
(bad)
out
pop
sub
xchg
test
aam
lock
fist
inc
js
cli
xor
sahf
inc
js
inc
mov
and
xchg
das
sbb
cwde
or
fistp
mov
mov
push
xor
loope
leave
push
jae
sbb
pop
call
mov
scas
ror
hlt
xor
jo
mov
jno
stc
outs
jnp
adc
add
inc
sahf
retf
push
xlat
push
arpl
clc
pop
jae
test
cmp
mov
dec
aas
jne
dec
pop
fiadd
sbb
imul
(bad)
fwait
pop
arpl
ret
dec
inc
lea
test
call
sub
jmp
add
mov
out
cmp
mov
ja
dec
mov
inc
popf
sub
and
(bad)
mov
shl
add
push
push
xchg
mov
rcl
add
clc
mov
push
or
mov
pop
sub
call
dec
jp
lods
mov
cmp
(bad)
(bad)
aad
pop
xchg
pop
jg
push
jl
lds
test
cmp
in
sbb
retf
stos
aad
stos
pushf
inc
retf
call
add
sahf
stc
mov
jb
mov
loope
ja
shl
inc
cmp
enter
aaa
or
rcr
enter
lods
lahf
pop
push
cmps
pop
cmp
jbe
ror
cli
add
sbb
pop
nop
loope
lea
scas
retf
mov
xor
xor
nop/reserved
outs
clc
shl
daa
call
mov
(bad)
xchg
sub
mov
xor
sti
lds
(bad)
xor
dec
js
jge
cmp
mov
(bad)
pop
xlat
push
jb
test
icebp
inc
fld
mov
sub
popa
imul
lea
in
mov
jno
add
mov
dec
stc
int3
adc
pop
neg
sbb
xor
xchg
push
test
shl
pop
adc
neg
jl
or
arpl
pop
xchg
cmps
lds
clc
arpl
movs
test
inc
dec
ret
mov
mov
addr16
mov
sub
jg
and
push
pusha
std
and
out
xchg
dec
mov
cwde
mov
mov
xchg
mov
jmp
jl
out
pop
imul
push
hlt
(bad)
out
and
add
frstor
sbb
dec
data16
pop
add
daa
enter
push
pop
iret
lock
mov
jb
cs
mov
aaa
inc
in
repz
dec
xor
cmp
test
arpl
setg
jnp
(bad)
and
jnp
fabs
sti
pop
in
out
(bad)
outs
aad
stos
je
out
inc
retf
push
inc
pop
test
ins
dec
lds
stos
xchg
push
dec
xor
dec
lods
sbb
push
enter
mov
pop
cmps
dec
xchg
cmp
scas
loop
stc
out
test
adc
jbe
inc
cmps
mov
mov
addr16
adc
and
jg
mov
(bad)
adc
stos
pop
or
add
pop
pusha
inc
dec
pop
adc
and
cs
ss
jp
mov
mov
xor
mov
gs
in
cwde
outs
and
dec
inc
mov
pushf
inc
fdivr
retf
cwde
iret
mov
add
fbld
jo
cmp
rol
and
and
push
dec
clc
(bad)
pop
and
cli
cmp
jns
outs
ror
out
repz
xchg
mov
add
(bad)
push
test
mov
js
rcr
pop
pop
call
jae
aad
pushf
stc
dec
cmp
lds
call
cmps
into
hlt
add
int3
stc
shl
jp
mov
aas
jae
adc
mov
pop
xchg
out
mov
je
add
xchg
movs
lock
cmp
retf
das
cmps
sub
pop
hlt
cdq
fild
add
pop
push
jae
sub
or
(bad)
jnp
lock
int
out
scas
shl
adc
iret
xchg
in
jl
lds
sub
push
scas
aas
rcl
in
daa
mov
sar
aam
jg
test
sbb
fdiv
into
imul
and
(bad)
xor
rol
out
sbb
cmp
jecxz
imul
test
mov
loopne
cld
sar
cmp
xchg
dec
cdq
add
in
ret
into
xchg
xchg
mov
jle
inc
cmps
fwait
mov
movs
ds
push
jecxz
pop
mov
push
iret
outs
rep
push
out
cmp
leave
mov
mov
dec
dec
shl
xor
dec
dec
push
mov
aaa
jns
mov
jmp
mov
or
jecxz
mov
and
leave
movs
jne
pop
(bad)
xchg
pop
fs
jo
add
shr
jmp
xchg
xor
dec
mov
adc
cmps
or
jns
cmp
add
inc
in
jo
rcr
mov
mov
push
or
dec
and
push
cld
les
xchg
mov
je
mov
or
test
add
xchg
add
js
das
sub
imul
test
push
adc
imul
adc
(bad)
adc
sbb
mov
mov
mov
sbb
dec
mov
arpl
clc
add
fild
dec
sar
push
test
icebp
(bad)
std
(bad)
mov
mov
adc
push
cmc
nop
daa
or
and
je
cmp
dec
retf
or
scas
xchg
ds
or
popf
leave
jb
add
lahf
mov
sbb
mov
(bad)
xchg
pop
ret
sar
test
cmp
repnz
and
jecxz
pop
sbb
fstp
cmp
mov
mov
or
rol
cmp
or
lods
popa
or
out
xchg
pusha
jno
in
nop
loope
adc
retf
or
je
sub
test
outs
cmp
lods
xchg
pop
leave
or
jg
mov
sti
pop
imul
pop
ret
js
pop
pop
push
jbe
xlat
lea
pop
sbb
cmc
ins
jg
ret
pop
dec
xchg
jnp
clc
mov
pusha
sbb
popa
std
jns
sbb
cdq
outs
push
shl
and
push
xor
stos
(bad)
mov
inc
mov
xchg
mov
mov
pop
mov
xchg
add
lods
adc
fst
sbb
xchg
loope
xor
push
sbb
adc
cli
inc
sbb
pop
push
mov
scas
sti
retf
jge
test
fdivr
xchg
push
pusha
dec
inc
daa
add
pop
xchg
mov
aad
pop
mov
hlt
sbb
movq
inc
dec
arpl
mov
fcom
adc
mov
test
add
inc
loop
int3
pop
xor
aas
in
repnz
repnz
xor
stos
jo
test
in
into
xchg
imul
pop
mov
lock
les
js
mov
push
mov
cmp
(bad)
push
jbe
mov
or
jle
push
in
push
cmp
inc
xchg
adc
xchg
jecxz
inc
int3
rcl
ins
loope
cmps
cmp
popf
popa
xchg
jl
fnstsw
sti
bound
dec
fs
push
push
lea
fcomp
pop
xor
push
int3
pop
test
inc
jno
out
xor
pop
push
cmp
pop
mov
push
sub
push
xor
mov
mov
and
shl
add
shr
clflush
mov
sbb
or
mov
(bad)
and
mov
push
dec
xchg
pop
repnz
in
shl
jge
(bad)
mov
jmp
inc
out
scas
mov
hlt
pop
in
jl
add
lods
xchg
call
fldcw
adc
loopne
jg
or
stc
xor
test
mov
out
adc
mov
mov
jp
repnz
mov
not
mov
(bad)
fs
jae
js
xor
imul
fidivr
inc
xchg
shr
mov
aam
int
and
aam
jne
inc
adc
repnz
les
(bad)
in
aas
cmp
mov
inc
es
ret
mov
pushf
dec
retf
outs
imul
adc
jae
add
sbb
push
sti
(bad)
ja
in
dec
rcl
cmc
jae
push
mov
or
ins
sbb
cmp
(bad)
int
add
popf
popf
ret
inc
daa
xor
add
mov
cmp
xor
ins
cmc
loopne
int
scas
mov
ja
jo
in
jp
lods
scas
ins
or
and
adc
mov
in
mov
icebp
add
and
fsubr
pop
pop
mov
pop
push
gs
call
pop
mov
mov
add
sbb
jbe
mov
mov
fmul
lds
retf
cs
mov
add
sbb
addr16
retf
pop
in
pop
add
xchg
sar
push
neg
sbb
sar
cmps
xchg
sti
cmp
jo
cmps
dec
push
cmp
fidivr
xchg
dec
pushf
jp
or
out
mov
adc
bound
int3
and
out
movs
mov
fwait
jmp
imul
pop
shr
test
adc
mov
xor
mov
jmp
mov
xchg
int
test
push
jp
or
repnz
ja
mov
(bad)
retf
scas
xchg
push
push
enter
bnd
jl
pop
ss
stc
inc
out
outs
sti
ds
sub
lock
movs
sahf
nop
push
loope
dec
imul
adc
aas
and
jle
mov
mov
into
mov
push
fld
fdivr
les
fstp
not
pop
sar
pop
cdq
dec
dec
xor
push
(bad)
enter
inc
xchg
mov
sub
or
xor
mov
das
jecxz
call
xchg
movs
sbb
push
dec
leave
mov
out
enter
dec
jecxz
fcomp
xchg
mov
cmp
test
ss
mov
mov
out
xchg
ja
out
fild
out
xchg
nop
mov
jo
add
fwait
int
xor
imul
shr
mov
mov
or
ds
push
sbb
or
mov
aaa
mov
das
jno
loope
push
mov
cmp
test
dec
aam
push
outs
ret
test
cs
push
push
(bad)
and
dec
jne
fnsave
lock
(bad)
lods
je
mov
adc
push
daa
add
mov
inc
mov
sub
inc
mov
mov
or
inc
int3
(bad)
icebp
ins
sub
adc
fld
ja
push
lock
mov
add
cmp
mov
into
retf
cmp
movd
add
sar
push
hlt
xor
and
dec
xor
adc
dec
cmp
call
dec
push
jmp
iret
pop
inc
ror
lods
int
lds
jbe
ffree
xor
dec
lahf
fadd
cmp
bound
(bad)
mov
dec
das
add
pop
clc
in
push
aas
cmps
xchg
aaa
les
js
add
dec
or
cdq
mov
or
mov
test
mov
mov
loop
xchg
pushf
test
sbb
push
ins
inc
push
repz
push
nop
in
sar
in
jmp
mov
add
push
or
jg
inc
mov
ins
pop
mov
mov
adc
shr
adc
cmc
inc
dec
xchg
pop
mov
xor
out
jg
jno
mov
outs
and
xchg
add
cdq
fs
xchg
jg
adc
and
(bad)
add
jge
(bad)
icebp
and
dec
mov
adc
rcr
cmp
push
mov
stos
push
hlt
imul
cmp
add
int3
or
rol
sub
adc
shl
pop
pop
cli
shl
cmp
pusha
sbb
loope
nop
xchg
inc
rcl
fisubr
add
int3
add
mov
cld
and
aad
shr
ss
pop
jne
fcom
pushf
clc
call
pushf
sbb
jae
push
adc
pop
arpl
cmp
lods
mov
pop
cmp
xor
outs
enter
scas
sub
mov
push
xlat
(bad)
xor
cmp
fs
lahf
and
std
loope
fiadd
mov
arpl
test
adc
cmp
xor
nop
sub
dec
sahf
xchg
rcl
sbb
iret
sbb
inc
cmps
arpl
jl
fnstenv
mov
(bad)
mov
out
jle
shl
stc
push
add
jno
js
inc
pop
rol
adc
inc
xchg
mov
inc
rol
sbb
or
lods
retf
cmps
mov
jl
dec
aad
(bad)
movs
out
sub
test
add
mov
cli
lds
gs
mov
push
mov
push
inc
xor
ffreep
mov
jae
xor
mov
pop
xor
add
mov
jno
pop
retf
inc
add
mov
xor
and
stos
gs
addr16
inc
cmp
jle
sub
xchg
dec
pop
imul
push
jne
xchg
and
iret
mov
sti
leave
mov
call
or
jl
bound
rcl
and
sbb
push
imul
inc
sbb
daa
sbb
out
adc
cmp
shl
cmc
ficom
ret
dec
loopne
nop
dec
xor
stos
pusha
mov
fldenv
shl
je
retf
ins
push
jg
mov
ret
inc
mov
and
ins
(bad)
(bad)
sbb
jle
xor
mov
int3
push
cmp
mov
xchg
(bad)
loopne
sbb
loop
mov
dec
repnz
dec
xchg
test
pop
cmp
push
ss
sti
xor
ja
pop
repz
aam
pop
mov
push
lahf
outs
cmps
push
cli
ror
xchg
or
or
retf
addr16
repnz
xchg
daa
in
pop
iret
scas
scas
ds
les
mov
es
lea
loopne
jae
test
ins
into
fld
gs
call
push
mov
or
in
loop
push
sub
jo
add
inc
dec
outs
jno
mov
out
push
scas
jnp
inc
lods
adc
sub
jnp
lahf
mov
mov
dec
mov
jns
jg
ret
xchg
dec
es
mov
imul
test
clc
xchg
(bad)
in
xchg
or
inc
push
retf
dec
inc
xor
outs
xchg
adc
or
in
ss
js
dec
cmps
cs
and
dec
xchg
xor
mov
adc
repnz
iret
js
(bad)
outs
push
repz
imul
inc
xchg
repz
(bad)
xor
adc
loopne
pop
mov
cmp
pop
and
add
mov
les
popf
jb
mov
in
fs
jle
aaa
add
jmp
stc
ret
cmp
repz
outs
call
aam
and
sub
xchg
add
jnp
ds
repnz
push
cmp
pop
adc
pushf
jne
shl
xor
mov
rcr
sbb
enter
adc
mov
es
outs
dec
jns
xlat
lods
jmp
cld
mov
mov
int3
imul
jne
mov
in
sbb
cli
outs
and
push
adc
push
cmps
dec
cmp
pop
imul
sub
mov
jl
mov
lock
repz
add
mov
jge
cmc
hlt
inc
push
fcmovbe
add
loopne
inc
out
ins
mov
lods
sub
cmp
and
mov
sub
mov
mov
fidivr
jb
mov
inc
fidivr
stc
cmps
addr16
push
dec
sub
xor
mov
or
lea
cmp
push
adc
inc
cmp
jb
outs
imul
sub
rcl
icebp
ss
sub
std
ja
xor
call
sbb
shl
lods
jmp
inc
aam
mov
pop
test
aam
and
xor
mov
sbb
jnp
cmp
(bad)
pop
mov
push
mov
dec
mov
push
sbb
fs
idiv
pop
icebp
das
xor
lods
push
inc
jae
mov
lods
sbb
ins
rcl
(bad)
or
out
jno
dec
jbe
inc
mov
add
pop
jne
adc
jno
arpl
and
cmp
pop
mov
scas
jp
scas
sbb
dec
mov
div
mov
lods
mov
add
fst
sbb
mov
xchg
push
sub
jle
cmps
aas
sub
icebp
sub
mov
push
mov
add
int3
aas
bound
pop
push
int3
cmp
mov
pop
(bad)
push
test
dec
(bad)
cs
(bad)
es
int
dec
stos
mov
stos
jo
sbb
jb
shl
fisttp
jb
and
pop
mov
pushf
inc
(bad)
mov
cmp
inc
aas
push
cmp
(bad)
add
rol
sub
imul
cmp
test
and
and
mov
test
jne
pop
jmp
push
and
mov
mov
out
or
mov
mov
jo
addr16
inc
xchg
shr
bound
enter
loope
mov
mov
scas
ja
cmp
lock
lea
or
enter
jecxz
inc
retf
out
sar
ins
cmps
jno
in
pop
leave
fist
push
les
or
add
ss
popf
rcl
push
imul
mov
mov
jmp
mov
aaa
jge
sbb
mov
inc
sbb
xor
push
icebp
cmp
jo
ds
aas
mov
loopne
cmps
sbb
(bad)
es
cwde
and
push
in
test
loopne
cmp
out
sti
jl
xor
popa
adc
and
ds
cmp
inc
js
mov
xor
cmp
fcom
mov
add
inc
add
stc
(bad)
std
in
imul
enter
pusha
or
jbe
mov
test
out
movlps
jbe
test
push
in
(bad)
std
xor
mov
xchg
into
jb
nop
pushf
sbb
xchg
push
icebp
(bad)
mov
iret
in
xchg
push
push
xor
fisubr
xchg
pop
bound
or
add
repz
sub
jns
adc
loope
add
sub
pop
retf
push
into
aaa
gs
call
cwde
push
mov
(bad)
fcmovnb
cmp
jecxz
test
jg
sbb
xor
adc
(bad)
push
es
push
out
or
scas
mov
stos
hlt
pop
and
into
mov
pop
pop
ret
xor
mov
or
cmps
fst
pop
mov
mov
popf
movs
xor
mov
jmp
rcl
(bad)
or
lea
xchg
and
nop
cld
dec
push
sahf
add
or
(bad)
xchg
mov
mov
fs
fnsave
test
and
cld
je
xor
retf
mov
popa
sbb
and
(bad)
mov
cmps
xchg
stos
inc
push
ins
mov
dec
jl
dec
and
das
(bad)
inc
pop
jp
aad
adc
(bad)
adc
cld
jbe
fwait
xchg
sbb
ret
pusha
jge
sub
push
pop
sub
(bad)
mov
es
add
test
mov
retf
add
int
aam
xchg
jge
out
int
xchg
xor
pop
in
std
gs
jg
xchg
jmp
repnz
dec
xchg
cld
ficomp
xor
pop
xor
and
add
mov
int3
adc
mov
add
bound
pop
or
lahf
fucom
mov
clc
ror
lods
jge
adc
(bad)
bound
and
cli
pop
add
or
inc
imul
js
iret
faddp
push
cmp
cmp
js
or
cmps
lea
or
in
iret
scas
es
mov
lds
cmp
call
xchg
inc
mov
imul
scas
jmp
sbb
mov
jae
dec
pop
lock
and
loope
mov
out
pop
jp
mov
push
cmp
inc
jp
daa
lea
repnz
lods
pop
dec
in
test
cwde
and
stos
xor
adc
div
and
mov
(bad)
daa
sbb
pop
in
cmp
loopne
sub
fmul
fistp
daa
ret
sahf
adc
push
int3
xlat
outs
mov
aad
push
aad
adc
and
jae
lods
mov
jge
shl
sub
or
std
jmp
jmp
enter
loope
fdivr
cmc
in
pop
cmp
mov
test
outs
push
xlat
and
fs
sbb
jecxz
not
push
mov
add
cmp
sbb
jle
adc
adc
leave
out
out
cdq
pusha
popa
pop
cmp
xor
les
add
pop
movs
std
push
and
and
test
xor
fst
movs
loopne
popf
or
or
ja
(bad)
mov
adc
or
icebp
sbb
movs
nop
test
and
fisub
add
add
js
stos
jnp
pop
sbb
sub
ror
adc
and
pop
sbb
je
fneni(8087
mov
leave
iret
mov
mov
test
adc
cmps
fdivp
cmp
test
sbb
retf
ret
rcl
call
inc
mov
aad
adc
dec
dec
cwde
mov
lods
arpl
stos
bound
js
shr
enter
inc
and
repnz
pop
jnp
xchg
or
adc
inc
add
(bad)
fst
scas
or
jno
(bad)
xchg
and
push
push
pushf
push
jmp
push
inc
movs
or
les
pop
stc
sbb
cmc
aas
not
xchg
dec
push
jge
lahf
add
pop
stc
push
out
inc
adc
jb
fstp
fistp
sar
add
rol
pusha
fs
hlt
iret
arpl
inc
rcr
scas
lods
dec
pushf
cmpps
std
test
jl
fwait
cmp
or
gs
mov
in
rcr
fisub
cmc
shl
dec
or
loope
fwait
into
(bad)
pop
push
fidiv
loope
mov
lea
lods
jno
jmp
and
aas
push
mov
mov
cmc
rcr
imul
add
mov
cmps
idiv
push
dec
sti
jmp
popf
inc
rcr
addr16
jnp
mov
xchg
or
jmp
push
push
cmc
leave
add
or
es
out
jle
rcr
movs
xchg
xor
sbb
not
add
cli
inc
stos
sbb
pop
jmp
push
cmps
xchg
out
fstp
xor
lods
push
ret
test
inc
and
sets
imul
sbb
sub
dec
pop
dec
mov
add
(bad)
fist
adc
sub
lds
test
and
and
shl
loope
push
xchg
sbb
es
mov
es
cs
call
xor
sbb
xor
js
jge
int
inc
or
aad
mov
xchg
cmp
xchg
push
loope
pushf
cs
jbe
mov
repnz
mov
aas
call
push
dec
arpl
jae
inc
jecxz
add
mov
bound
addr16
test
mov
ds
(bad)
loopne
jo
loop
(bad)
dec
add
add
mov
pushf
nop
xchg
pop
leave
das
pop
mov
mov
fbld
or
and
cli
mov
mov
lock
sub
dec
dec
iret
call
inc
fucomp
sub
pop
hlt
jbe
mov
mov
repz
addr16
popa
dec
xchg
std
mov
jno
mov
xor
jae
push
stc
mov
retf
adc
(bad)
stc
adc
push
jae
mov
inc
loope
push
add
pop
xor
shl
inc
lea
mov
sub
jns
mov
dec
adc
jnp
clc
test
sbb
and
mov
mov
xchg
mov
js
fisub
xchg
xchg
pop
(bad)
into
out
xchg
mov
stos
aaa
and
sbb
xchg
(bad)
movs
mov
ins
retf
imul
xor
inc
ror
outs
imul
shl
in
sar
adc
cwde
xor
popf
je
data16
xor
mov
xor
call
jno
xor
jl
cwde
adc
imul
fldenv
scas
ror
aaa
sub
or
aam
or
enter
nop
iret
push
mov
aaa
cmps
jl
fiadd
xchg
sub
or
gs
clc
mov
xchg
adc
inc
push
jp
pop
mov
inc
jo
cmp
mov
loopne
dec
aaa
xor
mov
cmp
sub
out
and
into
ja
fst
add
mov
mov
xor
push
imul
clc
jle
fld
add
dec
or
pop
dec
dec
lahf
or
retf
jb
and
aas
in
mov
push
pop
int
push
jbe
js
or
es
sub
adc
call
add
cwde
xchg
xchg
sbb
mov
popa
test
add
packuswb
nop
or
stos
xchg
pop
push
aaa
mov
add
(bad)
enter
push
cmp
jae
movs
push
jmp
or
das
out
aaa
fmul
xchg
adc
jmp
push
xor
push
mov
pop
sub
lea
inc
hlt
sub
ja
cmp
xor
and
add
jge
stos
and
call
inc
jecxz
es
test
jb
retf
or
jb
ss
push
hlt
aas
pop
sahf
adc
loope
push
push
sbb
adc
pop
or
stc
xor
jmp
pop
icebp
popf
and
or
stos
sti
ins
jns
clc
mov
jg
pop
jge
sbb
pop
cs
push
mov
xor
cmc
cmp
cs
out
mov
ret
cmps
cmp
pop
mov
xchg
in
sahf
inc
pusha
mov
(bad)
ror
ds
dec
fst
stos
adc
inc
xchg
pop
in
retf
jp
xchg
pop
inc
in
ror
push
mov
repnz
rcr
mov
push
enter
dec
xlat
pop
pushf
daa
sbb
(bad)
inc
out
jg
pop
add
xchg
rol
xor
vmovdqa
push
aam
test
or
pop
push
inc
or
retf
fs
icebp
lods
dec
mov
or
or
pushf
inc
mov
test
inc
mov
ficomp
retf
(bad)
jae
mov
push
enter
out
push
jle
pop
sub
mov
push
jl
cmp
retf
xchg
addr16
xlat
test
xchg
aaa
pop
aas
cmp
rcl
in
(bad)
push
movs
pop
push
dec
cmc
inc
or
mov
test
pop
inc
jle
shl
mov
inc
sbb
movs
sbb
(bad)
dec
imul
cs
jge
mov
bound
pop
mov
into
push
dec
lds
into
call
pop
mov
hlt
jbe
(bad)
adc
push
jbe
lahf
stos
mov
push
mov
imul
(bad)
jl
mov
cmp
rcr
fcmovu
outs
pop
jle
or
frstor
push
(bad)
sbb
iret
in
inc
loope
adc
ret
and
aam
sub
dec
iret
rcr
aaa
xchg
retf
pushf
sbb
movs
cli
jae
xlat
dec
loopne
mov
dec
xchg
xchg
push
mov
pop
cli
test
into
fisub
enter
mov
mov
hlt
shl
(bad)
in
in
sbb
add
cld
xchg
popa
jle
(bad)
xlat
dec
outs
lds
or
push
loop
outs
ficom
dec
mov
push
adc
dec
ins
jge
imul
xlat
sub
jmp
jns
out
push
mov
xchg
out
je
dec
mov
repnz
xchg
xlat
xor
jmp
ss
std
mov
loopne
dec
fs
cmps
sbb
cmp
cmp
je
stos
mov
adc
fbld
dec
mov
inc
out
or
jb
xor
xor
lea
dec
push
sub
cmp
in
in
mov
and
xor
mov
and
stos
ret
pushf
xchg
loope
xor
jnp
cmp
mov
shr
enter
push
int
adc
sti
xchg
ins
sbb
dec
inc
push
inc
mov
push
mov
arpl
scas
addr16
(bad)
(bad)
xchg
scas
jge
cmps
dec
mov
imul
aad
std
out
xor
into
retf
loop
mov
test
xlat
imul
in
or
jmp
movs
stc
pusha
mov
arpl
mov
cmp
mov
nop
xor
push
jae
jo
and
arpl
xor
shl
and
fs
fbld
rcr
xor
nop
jmp
lahf
jnp
test
jp
xor
dec
nop
xchg
(bad)
stos
mov
cli
sub
cs
repnz
out
movs
sbb
jae
iret
pushf
pop
fwait
outs
cmc
sub
and
daa
push
ret
jne
shl
jno
(bad)
pop
mov
adc
sub
add
cmps
daa
sub
jb
or
jbe
xchg
mov
or
mov
cwde
iret
ins
(bad)
jp
enter
and
test
add
icebp
ror
hlt
cmp
sub
std
dec
call
fnstsw
push
jno
mov
jmp
sti
call
xor
mov
inc
into
sbb
mov
sub
push
lods
cmc
stos
sbb
xor
add
mov
mov
rol
sbb
add
loope
pop
out
je
jl
out
in
mov
adc
xor
xchg
fbstp
call
xlat
and
dec
inc
dec
push
xlat
inc
mov
js
inc
dec
repnz
and
lods
test
mov
jne
ss
call
test
lds
aad
adc
adc
inc
loop
xor
mov
sbb
and
sub
scas
push
(bad)
mov
mov
and
push
mov
ins
addr16
stos
out
in
sub
mov
sahf
cmc
outs
hlt
jmp
ret
sub
hlt
sysenter
and
inc
inc
retf
fmul
xor
jg
xor
or
pop
jnp
call
xchg
push
and
ja
xchg
xor
shl
jmp
cmc
ret
mov
jmp
cwde
in
call
jne
jae
call
lock
push
or
cmp
rcl
fdivr
and
jl
sar
jmp
sbb
dec
aam
dec
movs
stos
cmc
inc
xchg
pop
ret
cmp
push
dec
loop
xor
inc
into
jle
cmps
jbe
push
movs
out
inc
pop
xchg
jmp
fs
mov
popf
stos
int
mov
stos
lahf
pop
ret
js
jl
lods
call
sub
jns
scas
xchg
xchg
leave
jnp
mov
sbb
lods
hlt
movs
and
or
fcomip
loop
std
arpl
ror
push
and
stc
sar
loope
(bad)
gs
ficomp
inc
rsqrtps
sbb
pop
ds
jmp
and
sub
loopne
sahf
sbb
test
sti
ins
lahf
fs
repz
shl
mov
in
repnz
jg
inc
sub
sbb
add
and
jge
cmp
jecxz
xor
pop
mov
retf
gs
mov
push
add
lock
push
repnz
xor
loope
jg
dec
dec
or
mov
mov
sub
pusha
into
jp
mov
dec
test
psubusb
mov
dec
or
imul
add
mov
in
sub
ins
xor
pop
cwde
stos
inc
inc
ins
shl
shl
xchg
lods
and
and
addr16
jo
mov
and
icebp
pushf
push
out
add
leave
test
cmp
sub
mov
jb
mov
mov
mov
mov
leave
in
dec
jnp
sub
cmp
pop
sbb
shl
dec
loope
lods
or
sbb
out
jmp
ds
jecxz
bswap
aad
jp
out
stos
call
mov
and
retf
mov
jmp
cdq
ret
dec
dec
jp
or
mov
lock
test
maxps
fild
not
adc
xchg
std
xor
gs
jl
xor
loopne
mov
int
jmp
fwait
mov
inc
and
mov
clc
push
xchg
sahf
pop
and
adc
jbe
aaa
das
in
pop
sub
or
pop
jne
std
ins
icebp
ror
cmp
in
aas
sub
lea
cmp
lea
test
loope
add
ins
sub
scas
xchg
add
int
adc
dec
add
scas
mov
jne
mov
loopne
mov
pop
test
outs
retf
shl
test
es
aaa
mov
cmc
cmp
jno
mov
imul
or
fs
pop
repz
test
call
lea
movs
adc
pop
clc
int
(bad)
pusha
jle
or
jecxz
jbe
jb
cwde
ffree
mov
add
rol
push
out
mov
jbe
dec
mov
pop
ins
fwait
clc
ins
cdq
nop
sub
data16
dec
jne
jmp
imul
les
aaa
push
ret
lock
cdq
lock
dec
pop
out
dec
mov
out
clc
jns
jne
xor
adc
mov
aas
in
sbb
movs
(bad)
pusha
cwde
movs
pop
add
add
(bad)
add
jle
inc
(bad)
ins
push
pop
push
out
ficom
es
ins
cmps
call
and
mov
not
cmp
push
push
mov
sbb
push
mov
or
xor
lods
mov
dec
sub
or
mov
stos
out
dec
sub
sbb
inc
daa
call
dec
ror
pop
or
pusha
jo
mov
pop
fbstp
or
popa
xchg
jmp
pop
mov
fprem1
jecxz
cmp
fiadd
sub
in
xchg
repnz
add
fdivr
inc
inc
jge
adc
push
inc
stos
sbb
sbb
xor
add
dec
js
cmp
movs
das
repz
xchg
int
mov
dec
pop
sbb
mov
mov
jmp
jnp
dec
push
push
mov
push
loope
aad
(bad)
loopne
mov
mov
ficom
popa
adc
jo
int3
lahf
(bad)
mov
fs
mov
repz
sub
adc
push
mov
cdq
push
mov
or
ins
pop
sub
push
mov
mov
out
add
adc
xor
rcl
and
inc
mov
lahf
imul
popa
sub
cmp
add
mov
hlt
adc
push
jae
nop
mov
inc
and
out
lods
xchg
gs
or
xor
rcl
loope
jae
pop
das
push
test
ret
cwde
or
adc
mov
fsubr
test
data16
xor
retf
in
mov
bound
add
(bad)
out
push
imul
int3
movs
adc
cmc
enter
add
mov
mov
inc
je
adc
retf
pop
jnp
pop
inc
pop
push
shl
mov
mov
pop
mov
mov
mov
xchg
inc
mov
dec
arpl
xchg
sub
sub
js
or
test
shl
je
fst
jmp
pushf
retf
xchg
xchg
fsub
aas
retf
inc
dec
cmp
bound
cmp
aam
stos
push
pop
mov
pop
cli
(bad)
cli
inc
popf
xchg
jecxz
xor
add
xor
es
js
or
into
xor
dec
xchg
xchg
into
sub
mov
mov
mov
xor
ins
push
mov
dec
addr16
loop
xchg
jo
cmps
jns
data16
xchg
mov
(bad)
jb
mov
push
cmps
retf
xor
(bad)
js
cmps
cmp
mov
inc
ja
add
popf
push
(bad)
jle
push
pop
pop
mov
sub
cld
lods
push
cwde
jmp
jb
jne
aas
jo
sub
jmp
imul
add
xchg
ret
push
xchg
dec
cmps
pop
dec
rcr
jle
dec
mov
int
inc
sub
add
out
push
jae
xchg
repz
cmps
dec
cmp
dec
xchg
xchg
mov
mov
fistp
inc
sbb
push
cli
pop
push
dec
in
fisubr
sub
mov
mov
push
cmp
cld
xchg
scas
pop
mov
aas
sub
mov
push
pop
fcomp
push
cld
(bad)
iret
out
in
sbb
adc
imul
cmps
adc
cmp
xor
fbstp
lds
jg
adc
test
fisttp
movs
inc
jne
rol
std
stos
pushf
push
push
pop
adc
gs
repnz
jle
movs
in
ret
pop
sub
popa
mov
mov
retf
push
dec
daa
fwait
scas
lods
test
sti
scas
sti
sbb
lea
sub
cmps
je
cmp
dec
dec
arpl
call
cld
mov
test
mov
xchg
ins
js
out
xchg
in
(bad)
js
sub
aaa
sbb
mov
aad
loopne
aam
push
cli
mov
aaa
mov
push
jno
fst
out
int
(bad)
(bad)
outs
jle
jmp
lods
dec
test
jb
dec
inc
or
push
sub
push
(bad)
push
lds
adc
(bad)
(bad)
jb
adc
int3
xchg
inc
imul
test
int
jmp
popa
cmp
out
jmp
push
sbb
outs
movs
mov
mov
dec
xor
(bad)
xor
jmp
xor
xchg
gs
jecxz
mov
push
(bad)
xor
and
cmp
inc
sahf
fistp
or
ror
cmp
scas
sahf
cwde
pop
dec
adc
sti
mov
stos
ss
inc
(bad)
jns
jmp
pushf
fs
data16
inc
jmp
dec
int3
cmc
mov
scas
std
out
fisub
std
movs
add
enter
mov
mov
xchg
push
mov
mov
popa
jns
stc
fld
das
add
mov
push
sti
jmp
dec
dec
es
cmps
nop
xchg
cmp
inc
retf
ffreep
jp
lahf
clc
call
cmp
sub
push
jb
dec
mov
fild
pop
div
mov
ret
ror
jne
int3
and
sbb
(bad)
sahf
cmp
push
int3
popf
std
jp
xchg
push
mov
and
pop
xchg
int3
dec
outs
xor
ins
in
mov
cmps
jmp
dec
cdq
popf
inc
cwde
cs
inc
mov
addr16
adc
dec
jle
ins
imul
sbb
out
or
out
cdq
bound
xor
dec
and
cmps
loopne
inc
mov
ja
jo
sbb
jg
gs
les
cmp
repnz
data16
movs
nop
mov
push
and
fsubr
push
mov
rcr
inc
dec
mov
cld
adc
mov
shl
sbb
push
retf
mov
rol
jecxz
movs
and
jl
ss
push
dec
mov
xchg
sub
sbb
(bad)
xlat
or
pusha
and
cmps
jae
leave
pop
inc
neg
pop
adc
adc
jecxz
mov
add
cmps
(bad)
out
inc
pop
push
push
dec
imul
mov
sbb
pop
call
(bad)
not
xor
popa
int3
pop
iret
mov
hlt
popa
and
mov
ror
and
mov
movs
ret
cs
cs
sbb
push
and
mov
ja
fdivr
push
(bad)
js
pop
sbb
cmp
xchg
and
test
xchg
inc
cli
mov
add
dec
dec
lods
test
mov
mov
lods
xchg
fwait
ret
mov
sub
add
mov
mov
or
cmp
fisttp
adc
sbb
jae
cmp
loope
xor
xchg
jmp
out
jne
adc
int
pop
cmps
jae
loope
call
mov
es
call
adc
cmp
jle
jge
in
cmp
jp
stos
lds
xor
sbb
adc
adc
push
lahf
movs
push
inc
cmp
daa
pop
ss
(bad)
adc
les
and
mov
mov
ins
test
enter
iret
lds
jg
aas
mov
sub
inc
(bad)
jp
cmc
sub
jmp
cs
and
lods
sub
mov
mov
pop
or
xchg
and
js
inc
dec
popa
mov
retf
scas
mov
cwde
fwait
xchg
sub
cmp
mul
mov
jecxz
xchg
sbb
inc
stos
ret
cmp
mov
sbb
shl
fld
add
leavew
aam
clc
ins
adc
mov
out
call
xchg
stos
daa
(bad)
adc
mov
jmp
cmp
cwde
mov
je
pop
or
cmc
xor
xor
test
pop
je
inc
inc
sbb
or
or
pop
mov
and
clts
cmp
jae
hlt
dec
popf
sbb
(bad)
pop
cmp
test
add
or
popa
cmps
adc
or
shl
fbld
jg
xor
inc
jmp
ss
xchg
xor
jae
loope
cmp
ficom
in
scas
and
cmc
or
xor
or
paddb
push
popa
jae
push
inc
mov
and
mov
sbb
mov
or
or
cmc
scas
inc
inc
loop
aad
mov
repz
sbb
sbb
mov
adc
push
sti
in
enter
sub
xlat
syscall
sti
stc
je
pop
imul
push
imul
or
jg
rcl
popa
mov
jae
xor
or
sar
cs
mov
inc
in
into
cwde
cmc
pop
sbb
test
xor
mov
adc
(bad)
adc
add
addr16
test
leave
mov
out
pop
xor
lds
cmp
pop
hlt
ret
xchg
ret
mov
or
fs
inc
sub
mov
push
sub
jo
inc
out
mov
mov
and
sbb
mov
add
adc
push
stos
xchg
aam
add
add
loope
mov
jl
adc
dec
es
mov
(bad)
mov
xor
push
pop
cmp
add
or
icebp
sub
ret
cwde
cmps
inc
jmp
and
cmp
push
push
not
jns
jle
mov
xor
fld
add
xchg
arpl
fndisi(8087
pop
iret
cmc
aam
ins
jno
out
cmps
fmul
push
sub
mov
push
out
int3
mov
push
pop
jnp
push
mov
adc
sbb
mov
das
(bad)
fcmovbe
xchg
jno
push
add
loop
loopne
add
sub
cmp
icebp
mov
js
jo
dec
lods
cmp
add
mov
(bad)
clc
les
retf
pop
fiadd
pop
jbe
sub
mov
mov
data16
dec
and
fisttp
adc
pop
pop
scas
sub
cmps
je
(bad)
push
xor
movs
sbb
cmp
mov
inc
(bad)
stos
cmp
inc
mov
dec
jp
mov
(bad)
fldenv
mov
cmps
sub
pop
mov
test
xchg
jge
jmp
scas
(bad)
imul
pop
dec
mov
jnp
std
dec
and
je
mov
sub
or
add
retf
test
stc
and
xchg
pop
push
pop
out
push
inc
or
push
adc
mov
int3
into
jp
jns
bound
cmp
loopne
dec
add
imul
sbb
pop
hlt
jns
mov
daa
mul
cmp
fst
jne
sbb
es
push
adc
or
cmp
pop
inc
imul
jne
or
sbb
test
ss
and
mov
aad
ins
fld
sbb
pop
clc
outs
jno
es
add
push
(bad)
aam
dec
aaa
ss
and
fistp
mov
sbb
dec
in
xchg
shr
dec
(bad)
push
adc
(bad)
cmp
xor
iret
iret
cmp
cmps
retf
sbb
push
jns
ret
pop
leave
dec
scas
fist
sub
push
mov
push
sbb
aaa
add
mov
mov
clc
(bad)
xor
arpl
pop
call
sub
push
cli
sub
movs
mov
mov
pop
push
inc
ja
push
retf
dec
cmp
adc
inc
cmc
or
jmp
cmp
shl
sbb
cwde
cwde
xor
pop
and
mov
sub
xchg
push
into
ja
dec
push
xchg
aad
sub
sub
and
lods
or
xchg
adc
add
inc
push
mov
push
pop
add
nop
sub
or
loop
jmp
fisubr
sbb
(bad)
int
out
inc
ss
sub
pushf
xchg
dec
pop
add
or
out
and
in
frstor
test
data16
adc
pmullw
rcr
enter
dec
xor
mov
retf
hlt
pop
stc
cmps
cld
movs
and
pop
mov
enter
mov
adc
push
pop
shl
add
test
xchg
mov
arpl
adc
add
cmc
xor
stc
push
fnsave
(bad)
fist
addr16
lds
or
aad
mov
movs
fsubr
cmp
pop
scas
(bad)
rcr
fdivr
mov
sbb
pop
loop
repz
sbb
mov
pop
inc
mov
mov
jbe
lea
cld
push
shl
lods
adc
mov
push
sub
(bad)
aam
mov
sub
mov
stc
scas
jmp
adc
adc
int3
movs
in
scas
adc
mov
es
mov
pop
and
xor
call
cmp
xchg
mov
sub
pop
(bad)
out
xor
xchg
pop
ret
sbb
jg
rcl
xchg
cli
xor
(bad)
jae
push
loop
(bad)
cmps
stos
cli
sub
pushf
push
push
sub
mov
popf
mov
mov
xchg
seto
rcl
fild
jns
cmp
mov
add
add
jmp
sub
cmp
pop
cmp
and
lock
adc
xchg
loopne
pop
xor
pop
mov
call
sti
mov
sbb
push
lds
sbb
dec
jbe
dec
(bad)
in
mov
hlt
mov
fdivrp
inc
push
sti
aas
repz
repz
test
mov
aaa
mov
jl
inc
sti
mov
pop
dec
and
pop
(bad)
nop
test
mov
xchg
aad
adc
in
aad
add
jecxz
ficomp
fldpi
adc
(bad)
rol
jmp
fimul
imul
call
sti
lods
or
fnsave
repnz
leave
push
aam
aam
nop
and
mov
test
mov
inc
mov
fild
sub
out
inc
fistp
pop
mov
push
pop
jl
xchg
xchg
retf
cmp
mov
scas
(bad)
hlt
mov
adc
jl
je
jne
jl
sbb
(bad)
pop
lahf
pop
mov
loopne
inc
stos
cmp
mov
sub
loop
sub
jno
inc
mov
scas
mov
cmp
dec
enter
mov
adc
movs
gs
xor
mov
inc
ss
mov
or
scas
mov
adc
ss
dec
and
mul
inc
pop
stos
mov
mov
mov
or
(bad)
mov
psrlq
inc
arpl
clc
ret
(bad)
and
repnz
test
ror
or
retf
add
dec
mov
pop
inc
imul
jo
push
(bad)
pop
push
popfw
or
jo
je
xchg
loop
xchg
jnp
pop
aas
lods
jne
adc
xor
mov
xor
icebp
or
sbb
xor
sub
pop
paddusw
shr
or
call
clc
in
mov
in
jmp
fidiv
pop
cmp
aaa
aaa
jge
cmp
adc
mov
inc
or
push
pop
dec
mov
fldl2t
inc
es
adc
and
mov
pop
push
adc
pavgw
xchg
jp
push
mov
sbb
jno
mov
jl
adc
push
adc
cmp
lea
mov
ficomp
push
outs
sbb
inc
jle
fst
dec
xchg
xlat
xor
jae
lea
fisub
inc
js
neg
dec
mov
out
sub
xor
cld
jmp
(bad)
movs
jb
pop
mov
jge
test
xor
pop
add
aas
dec
or
shl
pusha
xor
outs
icebp
adc
aas
fs
pop
adc
lods
and
or
sbb
pop
xor
xchg
out
adc
cmp
retf
fisttp
jecxz
mov
shl
in
sub
pop
test
mov
adc
loop
inc
cmc
cmp
test
or
push
iret
icebp
xor
(bad)
pop
inc
rcl
fistp
push
adc
ror
hlt
fcmovu
mov
and
pusha
mov
fisttp
push
cmp
rcr
pop
into
sub
sub
mov
jae
xchg
test
and
out
jb
jns
jns
pop
adc
sti
sahf
sub
pop
xchg
fld
push
pop
inc
xchg
mov
jmp
sti
inc
inc
add
mov
leave
xchg
bound
sbb
mov
call
ret
div
fisub
(bad)
mov
test
pop
mov
cmp
pushf
int
stos
xlat
jo
inc
jp
xchg
sub
scas
cmp
daa
sub
icebp
repz
inc
fisub
mov
xchg
stc
fisub
fstp
pop
push
adc
in
lahf
mov
or
jno
movs
push
mov
aaa
and
mov
cmp
das
cmp
mov
rol
cmc
fadd
cli
and
sub
pop
aad
cwde
in
int
push
out
ins
in
int3
es
test
inc
push
daa
xor
push
rcr
dec
pusha
int
addr16
mov
mov
ficom
mov
out
not
dec
dec
addr16
js
sbb
in
cmc
push
retf
mov
aas
xchg
jecxz
xchg
add
jmp
sbb
and
(bad)
ss
int3
in
push
aas
je
mov
mov
call
outs
sti
cmps
(bad)
loope
fsin
je
push
sbb
cmp
mov
ficomp
repz
dec
dec
jbe
xchg
in
hlt
(bad)
arpl
std
xor
sbb
dec
data16
add
sbb
mov
aaa
pop
(bad)
aaa
push
push
icebp
clc
icebp
sbb
adc
mov
int
sbb
and
fisub
push
(bad)
outs
dec
xor
scas
nop
cmps
adc
std
sbb
push
lock
jle
xchg
nop
(bad)
pop
sbb
sub
in
in
pop
mov
loopne
icebp
in
and
fwait
stos
xor
ds
cmp
cmps
in
fwait
(bad)
pop
xlat
pop
ds
xchg
js
xor
cmp
in
cmp
xchg
adc
sub
popf
mov
lods
cmc
cmp
sbb
adc
dec
rcl
pop
icebp
push
call
outs
lock
push
fsubr
(bad)
dec
sahf
pop
rcl
cld
addr16
clc
or
dec
jecxz
fdiv
mov
cmc
xor
sahf
(bad)
into
jl
in
lock
jle
xchg
mov
mov
mov
jl
dec
int
mov
pop
fst
xchg
leave
int
pop
test
mov
sti
dec
test
nop
loopne
mov
mov
push
push
jae
sub
adc
fld
std
xor
fidiv
(bad)
iret
lahf
bound
jecxz
mov
outs
pop
xchg
outs
or
aas
pop
loopne
fcom
lea
xor
cmps
sti
into
ins
sub
xor
xchg
mov
mov
pop
ins
pushf
daa
push
xchg
jecxz
shr
pop
dec
cmps
test
pop
fnstenv
push
jmp
jle
pop
adc
dec
xchg
imul
xchg
mov
sbb
jecxz
popf
cwde
ja
lea
cvtps2pd
jnp
xor
mov
test
add
push
fbld
push
pextrw
xchg
enter
add
clc
stc
ret
xor
(bad)
or
lahf
xor
dec
and
out
xlat
call
xchg
dec
call
dec
cmc
fist
pop
push
mov
xor
inc
rcl
jecxz
(bad)
fdivr
into
pop
es
pushf
imul
cmc
fidivr
sub
cmp
xchg
mov
xlat
inc
add
push
(bad)
(bad)
gs
(bad)
adc
jl
int3
sub
pop
xor
inc
ins
sbb
idiv
in
mov
jg
call
test
aas
xchg
idiv
lahf
mul
inc
mov
mov
sbb
in
mov
mov
sub
lds
sbb
mov
int
fidivr
ret
sub
cwde
jne
mov
cmp
stos
imul
mov
aaa
test
cmp
daa
fmul
dec
(bad)
push
mov
xor
gs
sti
inc
adc
dec
dec
pop
mov
mov
jo
jmp
push
nop
sbb
test
mov
push
inc
or
ficom
and
cmp
pop
jp
jns
inc
adc
dec
or
cmc
test
add
sti
mov
sbb
iret
adc
dec
ds
stos
mov
ss
and
fcmovbe
cmp
inc
fstp
repz
(bad)
loopne
pop
(bad)
out
adc
loope
mov
mov
ror
dec
fcmovnb
fnstenv
cdq
data16
push
sahf
retf
mov
cdq
xor
rol
ss
push
pop
add
xchg
pop
cli
shl
std
aaa
xchg
xor
pop
std
push
xchg
sar
call
ret
add
inc
bound
cmp
inc
nop
inc
popa
(bad)
and
and
lea
jp
lods
xor
and
pop
(bad)
or
jb
pop
test
ds
sbb
(bad)
leave
retf
test
dec
xchg
adc
mov
imul
aam
rol
retf
ror
lea
mov
jnp
out
arpl
or
add
les
push
adc
lods
xor
and
inc
fidivr
les
imul
fisubr
xlat
and
pop
scas
jne
xchg
cli
in
inc
pop
push
shl
and
pusha
(bad)
mov
pop
mov
cmps
(bad)
adc
adc
inc
pop
pop
mov
jb
jmp
jle
jbe
push
pop
in
mov
jno
fwait
push
sbb
(bad)
mov
mov
fidiv
mov
js
imul
pop
xchg
jb
cmp
nop
(bad)
in
mov
dec
test
or
iret
cmp
push
dec
dec
or
dec
int
outs
js
clc
imul
pusha
sbb
jl
xlat
das
outs
movs
stos
sbb
or
mov
shl
and
sti
imul
jns
ret
call
test
js
ss
pop
dec
inc
shl
cdq
sbb
mov
inc
rol
repnz
nop
lock
dec
pop
xchg
scas
aaa
mov
jb
mov
aas
or
nop
xor
mov
in
cmp
ss
out
inc
xor
xchg
lds
cli
pop
adc
outs
add
xchg
mov
sub
hlt
xchg
sub
mov
pop
push
cmp
inc
inc
push
ret
push
ret
or
daa
cmps
inc
xchg
pop
cmp
movs
push
cmp
mov
jae
jmp
adc
test
sar
xor
dec
daa
push
and
or
hlt
ret
cmp
(bad)
add
aam
pop
dec
ret
aaa
in
add
sbb
push
pop
ss
fisubr
mov
test
cdq
sar
in
push
mov
frstpm(287
test
adc
cmc
fist
xor
aam
mov
cli
pop
test
retf
and
inc
cmc
mov
jl
jae
into
daa
js
inc
jb
push
xchg
addr16
mov
xor
out
jmp
in
push
je
fldlg2
hlt
outs
jle
fbstp
mov
test
fcmovne
ss
ins
mov
out
call
ret
and
scas
jns
sti
push
sub
or
cmc
sti
cmp
fistp
imul
jae
bt
loopne
call
push
and
aas
les
push
pop
dec
test
mov
pusha
dec
pop
daa
sub
add
aaa
mov
ins
hlt
dec
sub
pop
loope
rol
mov
mov
ss
pop
lahf
mov
push
mov
mov
mov
cwde
mov
int3
bound
fist
inc
cmps
and
cwde
dec
fmul
push
adc
push
add
lods
dec
dec
jecxz
mov
(bad)
xor
mov
mov
mov
ret
icebp
jp
aaa
popf
add
push
retf
movs
(bad)
sbb
xor
aam
xchg
sar
fwait
xor
orps
dec
jl
pop
jns
jo
mov
sbb
mov
push
xor
hlt
add
push
enter
pusha
retf
push
push
mov
fcom
stos
sbb
dec
test
aad
xor
lods
push
push
cli
mov
cld
xchg
cli
adc
std
rcl
gs
enter
push
cwde
fcomp
fisub
in
sbb
jne
ins
jmp
mov
inc
clc
xlat
cmc
enter
lahf
and
ins
popf
or
stos
mov
mov
das
add
into
or
adc
stos
(bad)
stos
mov
add
das
add
stos
arpl
stc
neg
and
cli
icebp
ret
fdivr
es
add
sar
push
clc
imul
repnz
adc
in
jecxz
test
sbb
out
lahf
lock
popa
daa
pop
jl
or
xchg
xchg
into
(bad)
xor
pop
loopne
fs
mov
sbb
mov
xchg
inc
pusha
xchg
cmp
jb
out
or
and
or
mov
pusha
lahf
cmp
(bad)
mov
sub
dec
jmp
rcr
dec
scas
stc
or
stos
and
cli
stc
pslld
sbb
inc
mov
fwait
cmp
idiv
ja
test
mov
push
fisttp
(bad)
mov
inc
(bad)
push
xchg
repnz
ins
push
xor
icebp
mov
das
icebp
ds
cdq
ja
gs
pop
ret
dec
fwait
test
repnz
push
or
pop
cmp
dec
xor
pop
inc
xor
je
scas
dec
sbb
out
sbb
push
stos
mov
xchg
and
out
test
fisttp
sub
pop
sub
sub
sbb
mov
popf
lock
or
xchg
push
adc
shrd
xor
or
repnz
std
and
mov
pushf
je
cmps
jbe
or
mov
pusha
bound
cmps
fsub
mov
adc
test
lods
xor
pfrcp
mov
mul
push
ss
lahf
stos
out
jo
cmps
or
test
movs
outs
sub
jg
out
repz
fild
loope
arpl
stos
outs
jg
push
jp
sti
imul
loopne
xchg
lods
mov
mov
pop
sub
cld
dec
xchg
dec
outs
int
inc
cmp
xor
xchg
outs
push
push
sbb
add
hlt
mov
cwde
sbb
not
pop
cmps
pushf
mov
adc
sbb
test
idiv
jb
cmp
fidiv
adc
je
push
hlt
or
test
or
ret
fs
mov
ret
pop
push
mov
or
sti
mov
movs
pop
dec
mov
out
add
xor
cmp
push
not
jno
pop
ins
pop
aaa
(bad)
cmps
(bad)
sub
scas
in
sub
push
(bad)
cld
cmp
pop
mov
jne
lods
call
mov
je
imul
mov
and
scas
out
sbb
and
pop
pushf
test
jo
les
jae
iret
push
lods
fdiv
dec
ror
mov
pop
jecxz
cs
fild
pop
or
sub
mov
xchg
adc
(bad)
iret
fdiv
xor
pop
xlat
icebp
pop
xor
aas
inc
xor
xchg
xchg
(bad)
(bad)
push
xchg
gs
fnstcw
sbb
inc
push
push
loope
inc
mov
lock
popf
imul
push
inc
push
movs
xlat
push
hlt
push
jae
int
dec
cs
sbb
aas
xchg
enter
fiadd
mov
and
pop
push
fwait
(bad)
(bad)
pop
fcom
push
fwait
mov
retf
pop
dec
mov
into
inc
xlat
mov
pop
vpackssdw
push
and
inc
dec
sbb
xor
xor
scas
call
lods
dec
mov
cmp
dec
sub
sbb
dec
addr16
out
aam
mov
sbb
and
loope
jmp
icebp
scas
jne
pop
adc
mov
(bad)
and
jmp
call
inc
xor
dec
jecxz
inc
inc
call
and
xchg
sub
xlat
fwait
sub
es
add
fist
xchg
stos
inc
daa
mov
inc
mov
test
ds
(bad)
pop
outs
std
ins
js
dec
adc
bound
mov
adc
std
imul
test
sub
xchg
lods
push
adc
repz
or
cmp
pop
scas
jl
aaa
jl
push
sbb
rol
dec
or
adc
sub
call
test
hlt
loopne
and
pop
add
ss
sahf
xchg
jbe
pushf
sar
(bad)
scas
sub
xchg
rol
mov
out
mov
jg
outs
cli
jo
dec
retf
retf
adc
data16
std
xchg
push
inc
in
loop
mov
sbb
add
jb
jb
es
arpl
daa
test
pop
inc
adc
and
aam
fld
adc
and
in
jnp
into
push
xor
icebp
aaa
sar
in
adc
cmps
jp
or
dec
jb
scas
jns
ja
push
jl
sbb
sbb
push
into
test
aaa
mov
scas
shl
in
mov
sub
jae
mov
sbb
cmp
repz
push
lea
sbb
outs
adc
jmp
mov
xchg
jg
inc
lahf
popf
cmps
xchg
push
in
push
push
pop
pop
sahf
out
ins
xor
ins
push
xor
inc
xor
mov
jb
or
(bad)
lods
add
cmp
or
mov
popf
add
aad
(bad)
out
and
mov
hlt
pop
ret
adc
fwait
call
jl
sub
and
inc
xchg
sub
sub
inc
retf
test
push
ja
mov
sub
adc
mov
cdq
das
sub
xchg
cmp
repz
cmp
pop
das
pop
test
in
retf
add
cmps
xor
into
out
adc
jp
data16
stos
cmp
es
xor
test
lods
ret
(bad)
push
repnz
popf
outs
fidivr
fmul
inc
dec
call
movs
adc
out
push
lock
in
mov
arpl
jge
in
test
mov
daa
sbb
popf
repz
mov
scas
adc
es
pop
cmps
outs
mov
(bad)
dec
mov
xor
sub
stos
js
mov
mov
sbb
jo
jl
sbb
xchg
cmp
cmp
loop
adc
rcl
dec
jle
out
shl
adc
push
pop
mov
push
mov
shl
inc
mov
mov
xchg
ret
in
mov
call
pop
movs
xchg
mov
jl
fld
test
int
dec
push
not
or
outs
(bad)
jecxz
push
xor
mov
sub
xchg
xor
lea
push
xchg
int
sub
stos
and
mov
dec
xor
mov
mov
fstp
or
sbb
jmp
movs
inc
or
sbb
xlat
mov
xchg
mov
and
in
fidiv
or
jl
or
div
jle
arpl
adc
ins
dec
(bad)
(bad)
mov
xrelease
jnp
sub
mov
pushf
popf
ret
in
mov
sub
inc
sbb
xor
mov
cmp
or
mov
repz
adc
iret
movs
fadd
mov
lock
lahf
xor
jecxz
in
sahf
push
in
or
jb
mov
cs
out
popa
dec
xchg
sbb
jnp
ror
lods
push
arpl
icebp
cmp
and
adc
xor
xchg
fwait
lock
lock
inc
mov
call
sub
mul
dec
icebp
in
cli
in
pop
and
dec
mov
ins
(bad)
and
mov
xor
outs
imul
dec
xchg
jmp
sub
js
retf
repz
add
js
mov
cli
sub
sahf
jp
add
mov
bound
mov
dec
sbb
dec
sbb
sbb
lds
loopne
xor
repnz
push
push
push
cmp
out
repnz
les
movs
inc
fst
outs
sti
scas
or
sub
xlat
jo
imul
sbb
mov
push
pop
jae
xlat
ret
daa
sahf
test
cmps
xchg
mov
cmp
rol
iret
call
push
jbe
jg
sub
mov
bound
adc
pop
inc
dec
pmaxsw
sbb
sub
lock
fnclex
or
cli
enter
test
cmp
mov
add
pop
fs
js
sbb
clc
lds
mov
jno
jl
mov
add
movs
pop
pop
fcomp
push
loop
mov
xor
xor
sbb
sub
ss
into
iret
pop
xchg
out
xchg
push
push
rcr
xlat
push
aad
movs
dec
leave
jl
and
xor
inc
cmp
test
xchg
adc
je
push
mov
push
sbb
xor
daa
mov
or
cmp
inc
xchg
mov
call
neg
cmp
stos
ins
push
jle
and
pop
ins
test
mov
cmp
add
pusha
xchg
lock
jnp
popa
fidiv
xor
retf
stc
vorps
popf
cmp
inc
add
cwde
cwde
(bad)
fsubr
lea
jmp
xchg
sub
in
data16
cdq
jno
dec
adc
push
add
cmc
add
cmp
mov
push
clc
cld
iret
push
and
inc
xchg
das
add
inc
fs
jae
fdivr
mov
sbb
dec
xchg
or
sbb
push
pop
mov
mov
adc
out
mov
mov
jns
dec
jl
(bad)
stc
js
pop
outs
pop
(bad)
mov
cmps
aas
fwait
pop
jmp
test
push
jp
inc
repz
sbb
sar
out
in
mov
loope
adc
(bad)
fiadd
jo
stos
fnstcw
outs
push
fwait
retf
movs
popa
les
add
hlt
repnz
jg
into
repnz
out
mov
and
adc
rcl
pop
out
push
repnz
nop
sbb
xor
out
mov
sub
mov
movs
jnp
fist
inc
dec
into
sti
pusha
fiadd
and
push
and
cmps
dec
lods
adc
xor
xchg
or
data16
daa
mov
adc
cld
mov
add
lea
cmp
dec
sub
inc
ds
push
cwde
pop
in
push
call
adc
sub
mov
push
jecxz
cmp
mov
xchg
push
jg
push
mov
fstp
push
(bad)
jmp
sahf
fwait
(bad)
jmp
sbb
in
mov
mov
aad
push
iret
xor
xchg
loope
retf
mov
sub
cmc
out
popf
(bad)
out
movs
cmps
jp
add
pop
movs
mov
(bad)
adc
shl
xchg
es
sub
jge
xor
inc
xor
(bad)
imul
int
std
jae
jns
jmp
pop
and
sbb
mov
in
pop
test
mov
xor
aaa
jbe
inc
xor
and
mov
mov
fsub
sub
ss
stos
loopne
jns
leave
adc
dec
jnp
add
cmc
jns
dec
pop
add
xchg
dec
inc
adc
xchg
fwait
xchg
aas
cmc
mov
mov
out
cli
mov
in
test
fbstp
(bad)
not
retf
push
repnz
(bad)
in
(bad)
mov
inc
mov
or
enter
adc
bound
inc
xor
faddp
out
xchg
(bad)
cmp
xchg
arpl
jmp
adc
or
int
je
sub
jecxz
out
ret
adc
sbb
dec
cmp
daa
and
scas
cmc
call
retf
cmp
xchg
arpl
in
dec
rol
fnstcw
mov
test
xchg
fisubr
iret
(bad)
xchg
mov
cmp
(bad)
(bad)
or
and
in
cld
sar
or
jecxz
daa
xchg
retf
mov
jmp
pop
mov
jecxz
std
cmp
push
mov
lds
mov
icebp
je
cmp
xchg
clc
mov
xchg
shl
(bad)
out
enter
sub
adc
lock
daa
cmp
pop
mov
xor
push
ja
dec
jecxz
dec
xor
fcmove
stos
popf
fbstp
in
dec
(bad)
ja
dec
xchg
sahf
loope
inc
jno
dec
fnstcw
cld
dec
dec
push
sub
das
hlt
pop
cld
mov
shl
pop
and
minps
retf
jge
mov
cld
inc
fbld
arpl
mov
(bad)
pop
cdq
fsubrp
mov
sub
or
jle
pop
mov
xchg
jl
repnz
shr
add
mov
aaa
fwait
ja
pop
lock
cmc
scas
bt
mov
call
retf
and
outs
out
xchg
dec
push
lahf
mov
xor
(bad)
xchg
push
(bad)
test
push
adc
setno
push
cdq
aaa
shl
xchg
cmp
fidivr
push
js
and
aaa
fisubr
test
sbb
cmp
mov
mov
pusha
xlat
cmp
push
jae
jne
push
scas
mov
mov
bound
je
stos
scas
sub
jmp
jmp
and
shr
aas
or
sbb
xchg
xchg
sbb
shl
sub
pop
fwait
jg
pop
push
fs
mov
add
sub
outs
jge
rcr
adc
push
mov
into
sub
inc
xchg
jmp
mov
jno
jl
arpl
out
and
push
push
sub
adc
repz
iret
cmp
fwait
int
sti
fcomi
jmp
imul
and
pop
or
sbb
mov
sti
sub
ficom
sti
push
cmp
mov
ins
loop
mov
pop
movs
mov
shl
xchg
pop
shl
cmp
or
out
and
mov
test
loope
jnp
mov
lea
adc
inc
pop
mov
hlt
add
js
cs
arpl
enter
mov
inc
or
sbb
fimul
push
(bad)
jae
xchg
ss
push
ret
in
push
jbe
das
or
dec
retf
dec
fist
cld
addr16
push
push
push
sbb
nop
jmp
sbb
mov
retf
pushf
aaa
out
adc
jo
push
mov
sahf
call
aaa
xor
jae
mov
(bad)
sub
je
retf
add
inc
sub
(bad)
outs
or
jns
jmp
dec
jno
mov
jne
inc
mov
in
test
add
int3
gs
pusha
ins
js
jae
aad
in
or
test
fwait
cmp
push
pop
sub
loope
(bad)
push
(bad)
hlt
out
out
dec
push
call
push
aam
mov
mov
sbb
rcr
dec
ins
mov
ins
shr
dec
dec
mov
test
mov
mov
fwait
adc
aas
outs
rcr
int
adc
outs
mov
mov
rep
inc
jecxz
retf
sbb
lahf
adc
(bad)
leave
std
out
mov
data16
add
repz
mov
mov
addr16
and
xchg
jae
es
int3
mov
sti
mov
or
dec
test
popa
xor
test
aad
dec
inc
push
add
jmp
xor
arpl
cmp
(bad)
cmp
mov
ds
mov
frstor
je
push
adc
(bad)
(bad)
push
mov
cs
adc
dec
test
aam
shl
scas
sub
xor
gs
push
xor
dec
cmps
push
bound
pushf
push
inc
movs
jbe
jo
mov
mov
movs
mov
push
inc
or
in
pop
pushf
xchg
fimul
inc
sub
jb
in
xor
mov
rol
jns
cmp
loope
aas
pop
mov
dec
js
push
fs
add
movs
ror
xor
cs
and
inc
loope
add
popa
jmp
repz
into
inc
mov
mov
sbb
xchg
pusha
mov
sub
xchg
fldcw
pop
xor
mov
cmp
xchg
test
sbb
aaa
dec
movs
cmps
retf
shr
adc
jo
pop
sub
iret
mov
(bad)
mov
shl
or
push
xchg
mov
shr
add
inc
cli
jae
jnp
jg
sbb
lods
xor
pop
and
imul
sub
add
mov
shr
out
test
inc
jbe
pop
jne
popa
add
pop
adc
out
adc
fwait
(bad)
push
sahf
jo
cmps
xor
cmp
rcr
dec
mov
(bad)
and
sub
push
pop
pop
mov
pop
push
cmp
xor
dec
out
(bad)
outs
add
rol
mov
adc
(bad)
stc
imul
adc
mov
(bad)
sub
mov
add
adc
jae
mov
(bad)
add
dec
adc
icebp
or
jmp
aaa
cli
sub
movs
and
or
jle
movs
jl
inc
mov
test
jecxz
out
sti
lds
hlt
fild
bound
mov
retf
ja
xor
fild
bound
adc
pop
sub
dec
or
stos
xchg
dec
jne
out
jo
adc
pop
jecxz
outs
call
cmps
(bad)
pop
mov
or
js
add
ja
leave
cmc
pop
jne
mov
mov
or
sub
arpl
pusha
(bad)
sub
nop
pop
test
retf
gs
and
xor
jno
pop
shr
xor
loope
clc
pop
push
jnp
aam
jg
sbb
pushf
mov
mov
or
mov
enter
es
jl
mov
inc
fcomp
into
popa
and
sub
retf
loop
inc
out
clc
push
pop
lahf
sbb
les
mov
je
or
sub
(bad)
pop
mov
jp
xchg
nop
in
adc
xchg
jno
and
or
mov
mov
and
ret
aaa
dec
dec
dec
push
loope
shl
ins
call
popf
fstp
add
push
hlt
sti
xchg
arpl
xchg
sbb
inc
cmp
mov
fsubr
xchg
sub
out
test
(bad)
dec
out
mov
push
adc
and
mov
bound
test
enter
cs
cmp
(bad)
push
xor
sbb
cdq
stc
lock
rcr
ins
ret
rcl
mov
jg
rcl
adc
push
xor
jmp
daa
xlat
push
xchg
jge
icebp
push
movs
push
push
je
out
sub
test
mov
scas
call
(bad)
cmp
repnz
or
call
loopne
jbe
inc
(bad)
addr16
lock
movs
push
fnstcw
test
mov
jl
pop
mov
and
jg
mov
push
sbb
test
daa
ja
adc
inc
pop
rol
mov
mov
scas
loop
sbb
jnp
adc
pop
xchg
dec
sbb
retf
mov
outs
out
inc
stos
fsub
test
pop
mov
aas
stos
pop
dec
push
jle
retf
call
inc
jge
inc
les
mov
adc
ret
aam
jne
lock
sbb
je
xor
add
or
nop
jp
test
jae
push
mov
jno
aas
xchg
sbb
jle
rcl
popf
xor
data16
adc
cwde
jbe
or
mov
lea
hlt
mov
xor
(bad)
pop
mov
scas
xchg
dec
outs
(bad)
in
or
cld
sbb
test
mov
add
mov
dec
cmp
push
imul
retf
mov
je
push
lods
fbld
push
es
pusha
scas
push
push
fcomp
into
loopne
pop
cmp
lock
ret
xchg
in
das
test
jge
pushf
jmp
jp
jmp
sub
loop
add
jge
pop
les
and
out
mov
mov
inc
int3
pop
push
jmp
int
loop
xor
out
pop
jnp
mov
dec
pop
pop
sbb
xchg
(bad)
aad
ja
and
xchg
push
mov
mov
xor
leave
cmp
fistp
or
mov
aas
mov
fdiv
xchg
out
data16
inc
mov
sbb
and
pop
jecxz
mov
jp
lock
in
test
js
in
jno
data16
imul
xchg
cmovge
add
xor
push
jmp
mov
into
push
mov
dec
shr
or
les
arpl
push
aad
loope
test
or
mov
dec
mov
movs
das
leave
jnp
adc
sub
arpl
scas
(bad)
aad
inc
xchg
sub
pop
sbb
adc
movs
dec
mov
jnp
cmp
mov
imul
pop
push
inc
mov
add
xchg
sub
fild
pop
in
aaa
push
push
add
loopne
mov
(bad)
(bad)
jns
and
xchg
mov
sub
and
or
out
xor
out
test
jge
push
mov
fild
jne
dec
and
xor
sbb
push
xor
scas
mov
xchg
sti
out
push
jmp
cmc
push
(bad)
idiv
adc
dec
mov
icebp
fimul
adc
mov
mov
js
push
fdivr
les
pusha
jnp
sbb
das
gs
jns
or
ins
or
fwait
pop
jb
test
xlat
js
int
mov
sbb
mov
aam
xchg
push
dec
sub
scas
mov
lea
sahf
lahf
and
adc
push
out
clc
sub
adc
sub
mov
xchg
repnz
jecxz
xchg
xchg
dec
loop
fldenv
push
xchg
sub
adc
cdq
jbe
xor
mov
push
add
gs
(bad)
mov
out
xor
aaa
rep
cwde
pop
adc
ret
mov
jno
prefetch
jp
rcl
pop
inc
out
lds
dec
add
pop
inc
inc
cmp
push
fdivr
mov
xor
adc
cdq
fldcw
cdq
cmp
sub
jl
cmp
xchg
rcr
cmp
add
scas
push
imul
mov
pop
das
mov
push
dec
inc
fidivr
mov
icebp
popa
or
dec
icebp
addr16
push
movs
cmps
sub
push
cmp
dec
in
pushf
sub
fcomp
mov
mov
dec
out
leave
shl
bound
push
adc
pop
jg
jge
push
jmp
sub
stc
cli
add
fidivr
mov
stos
ret
dec
pop
push
sbb
in
cmp
xor
mov
pop
imul
cdq
push
dec
idiv
push
jle
movs
and
xlat
xchg
(bad)
jnp
div
int
push
jge
push
sub
jns
cmp
xor
lds
and
mov
mov
in
dec
sbb
fisubr
ret
imul
shl
fmulp
shl
xchg
daa
fst
pop
add
cmc
push
icebp
sbb
mov
sbb
fmul
xchg
inc
xor
loope
sub
lea
test
dec
arpl
mov
imul
xchg
pop
cs
add
outs
mov
pop
pop
int3
retf
outs
add
repnz
sahf
out
jne
jne
movs
sti
adc
ficom
in
pop
or
pop
xchg
mov
push
inc
fnsave
adc
aad
push
cld
das
shl
inc
inc
mov
jle
mov
fcomip
(bad)
(bad)
in
stc
jnp
ror
pop
mov
sub
dec
mov
iret
frstor
mov
and
call
ins
ja
push
int
and
jnp
cli
jecxz
inc
xor
pmulhw
mov
fmul
dec
or
outs
mov
data16
dec
cmps
mov
cmp
sbb
imul
push
dec
push
xor
in
enter
cwde
into
cmps
mov
stc
shl
sbb
inc
mov
pop
inc
out
lea
daa
add
xchg
adc
add
loopne
es
xchg
add
jb
pop
push
adc
pop
cli
pop
sar
inc
fwait
test
dec
scas
shl
jle
(bad)
retf
mov
popa
xor
jl
pop
inc
ficomp
mov
push
pop
pop
mov
dec
iret
xchg
mov
and
fmul
mov
or
fcomp
loope
inc
retf
mov
(bad)
cmp
fwait
mov
adc
in
jae
xchg
xor
mov
loop
js
push
mov
push
inc
ja
imul
mov
ins
jo
or
inc
pop
pushf
retf
push
ins
adc
jmp
add
jmp
pop
sub
dec
sbb
retf
int3
test
push
out
movs
inc
xchg
and
mov
retf
xchg
add
or
cmp
dec
jp
sahf
or
addr16
js
out
xchg
test
mov
push
fild
cmc
es
cmp
pop
aam
popa
repnz
jl
into
xchg
data16
push
fld
push
push
in
stc
shl
mov
and
push
add
jp
in
enter
jmp
mov
test
xchg
repz
rcl
mov
push
je
sub
in
iret
aaa
push
aad
pop
fcomp
in
fisub
int
fs
out
push
cmp
push
dec
cwde
jecxz
and
addr16
rcl
dec
add
mov
dec
arpl
sub
push
ror
push
and
dec
test
xor
outs
out
sahf
sbb
call
imul
jno
jne
retf
gs
stos
(bad)
pop
mov
test
ins
sub
rcr
std
and
ds
iret
movs
push
ret
inc
mov
and
sub
ins
cld
add
dec
loopne
fadd
(bad)
sbb
lock
(bad)
jbe
mov
arpl
push
enter
sub
cdq
push
mov
xor
bound
jl
ficomp
mov
cmc
mov
sub
int
mov
das
xlat
sbb
cmp
aam
xchg
dec
fstp
sahf
daa
pop
scas
fwait
(bad)
(bad)
les
mov
jne
ret
push
add
outs
das
xor
scas
push
cmps
push
call
mov
test
and
ins
ds
mov
and
dec
fild
push
push
push
stc
in
dec
mov
xor
inc
(bad)
pop
push
sbb
dec
mov
cdq
add
xchg
sbb
inc
adc
out
pop
jnp
stos
xchg
mov
adc
dec
adc
and
fisttp
arpl
sbb
add
inc
fninit
hlt
or
pop
sub
iret
test
jp
dec
inc
ss
cdq
repz
daa
cs
adc
jbe
inc
dec
popf
and
sub
nop
and
or
xchg
mov
push
(bad)
(bad)
fisttp
fisub
sbb
mov
movs
adc
cmp
test
aaa
loope
sbb
int
push
or
push
inc
and
sbb
mov
int
add
(bad)
call
iret
arpl
addr16
push
mov
cmp
xlat
xor
push
retf
dec
loopne
imul
jne
in
jae
shl
push
xor
cmp
add
(bad)
sub
out
jmp
stos
and
xchg
stos
pop
mov
lods
push
fwait
shl
out
xchg
mov
