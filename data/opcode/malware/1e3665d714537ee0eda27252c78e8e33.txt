mov
inc
cmp
lea
add
cmp
pop
pop
nop
jnp
lods
pop
shl
call
mov
jle
push
dec
mov
jo
dec
mov
jecxz
sub
lods
xor
fst
mov
imul
pop
jp
lahf
push
mov
shl
ja
test
lahf
sbb
out
jle
mov
daa
(bad)
cli
jmp
movs
fs
inc
push
xchg
mov
adc
out
por
aad
ss
xchg
push
adc
jecxz
cmp
pusha
fwait
jg
fsubr
stos
cmc
cmp
jge
mov
push
add
stos
xor
xchg
jmp
repnz
sbb
popf
push
mov
push
sub
and
push
out
in
jecxz
loop
imul
(bad)
push
push
dec
ret
cdq
popa
jle
sbb
call
test
ret
sub
inc
stos
cld
mov
test
lds
daa
mov
inc
fadd
sbb
cdq
out
push
mov
xor
sahf
pop
aad
push
lods
je
adc
data16
xchg
data16
xchg
xor
sub
(bad)
repz
shr
fs
xchg
sbb
call
mov
pop
xchg
rcl
push
mov
jnp
cmp
aas
dec
(bad)
pop
rcr
push
jb
push
or
gs
(bad)
std
xchg
das
cdq
push
push
sbb
jmp
pop
xchg
je
aas
pop
mov
(bad)
jl
out
test
xor
xor
loopne
std
pop
movs
ror
mov
xor
inc
add
sub
lock
jmp
or
jno
fisttp
add
pusha
lds
ret
mov
call
mov
and
sub
jne
add
jmp
add
test
lahf
cld
mov
mov
fmul
dec
adc
pushf
clc
retf
imul
lea
test
or
daa
int
clc
dec
fs
loope
shl
ds
movs
dec
jns
stos
or
xor
xor
in
(bad)
pop
or
and
inc
aas
mov
sub
into
and
movs
test
les
mov
push
prefetchwt1
or
rol
sbb
repz
adc
ret
mov
add
jbe
out
cmps
and
neg
mov
add
adc
dec
out
mov
sbb
(bad)
cmp
push
in
cmps
sti
push
jle
(bad)
repnz
cmc
pop
call
lea
in
cmp
icebp
adc
stos
and
hlt
sub
jbe
dec
push
inc
add
leave
dec
out
lea
mov
pop
mov
test
je
pop
add
jne
adc
mov
and
jno
sbb
mov
sbb
cli
dec
push
(bad)
mov
aam
inc
pop
or
sbb
fsubr
popf
sahf
data16
rcl
cmps
(bad)
pop
arpl
xlat
fsqrt
mov
sub
loope
je
mov
cmp
mov
mov
lock
mov
rcl
xchg
mov
sysenter
xor
and
test
ss
and
sub
neg
pop
in
push
mov
pop
mov
push
pop
out
pop
leave
les
push
fld
jo
repnz
xor
pop
or
inc
popa
(bad)
push
mov
pushf
cmp
stos
jbe
mov
hlt
sbb
imul
out
push
inc
imul
test
inc
sub
mov
xor
sbb
xor
xor
sub
xchg
lds
sbb
dec
clc
scas
test
cmps
lds
les
dec
(bad)
les
pop
cli
dec
(bad)
fld
push
(bad)
cdq
xchg
jl
cdq
nop
xchg
xchg
xchg
mov
pop
out
outs
dec
hlt
cmc
std
mov
aas
jmp
aaa
jl
mov
jnp
in
sbb
mov
cmp
cmp
mov
mov
js
ins
repnz
popa
pop
cld
inc
mov
or
jae
sub
sub
jns
mov
cmp
sbb
popa
dec
adc
lods
neg
or
cli
(bad)
dec
push
xchg
add
ja
fidiv
mov
push
jp
lods
add
or
rcl
jge
aaa
add
add
pop
and
cmp
sub
in
dec
test
sbb
add
ret
mov
lea
clc
pop
ins
mov
jg
lds
sub
dec
push
sbb
and
inc
mov
push
js
push
pop
(bad)
imul
xor
pop
push
pop
and
mov
inc
sbb
clc
and
cmp
xor
push
jno
jne
jmp
ret
add
jns
je
ja
inc
ds
sub
in
or
int3
mov
add
scas
in
jns
lahf
mov
test
inc
outs
pop
xchg
int
repz
es
inc
dec
ds
mov
es
jo
pop
shr
mov
inc
pop
aaa
mov
stc
jle
cmp
and
icebp
dec
add
popf
(bad)
cmp
in
enter
(bad)
cwde
ret
mov
data16
rcl
ins
ja
adc
std
pop
pop
cmc
fnstenv
(bad)
dec
mov
pushf
iret
push
xlat
adc
(bad)
aam
ins
stos
data16
or
arpl
jg
push
and
push
mov
int3
(bad)
push
add
fwait
or
xor
lods
test
dec
clc
sub
out
icebp
push
jle
inc
jg
movs
popf
into
stc
lock
mov
aas
inc
in
mov
cmc
out
push
(bad)
push
pop
arpl
das
pop
out
cwde
inc
jbe
out
adc
pop
fwait
je
loop
fmul
jo
int
fwait
retf
pop
sbb
pop
das
jmp
in
leave
mov
les
inc
(bad)
aas
cmp
mov
test
in
syscall
adc
nop
das
int3
(bad)
and
std
push
js
dec
movs
popa
push
xchg
(bad)
xor
push
mov
stos
jae
or
pop
inc
in
shl
inc
jmp
xor
inc
adc
or
xor
jns
out
jae
das
mov
sub
pop
sbb
popf
jmp
push
xlat
sub
ret
sub
fisub
add
test
pop
cmp
sub
xchg
stos
jl
and
lods
mov
(bad)
lock
std
add
push
cs
add
sbb
lods
jo
mov
jae
fwait
xor
fs
inc
daa
nop
loop
pushf
push
mov
leave
fwait
and
in
push
imul
jp
pop
sbb
cmc
push
repz
into
jle
dec
push
ret
inc
xchg
adc
fild
mov
xchg
sub
xor
mov
mov
hlt
xlat
sub
pop
mov
fwait
(bad)
mov
outs
ins
sub
or
adc
pop
add
xchg
jbe
movs
pop
adc
or
push
xchg
adc
in
and
push
out
or
dec
cmp
mov
or
mov
ret
xchg
mov
jmp
xor
pusha
pushf
xor
ds
or
dec
jmp
aad
shl
movs
mov
sbb
or
int3
(bad)
pop
sbb
push
imul
add
bound
test
mov
xor
jle
out
test
or
ror
sub
sbb
cmp
out
push
jl
cdq
cli
jg
pop
push
or
outs
popa
cmp
outs
inc
xor
iret
jne
mov
cmp
pop
jl
test
pop
push
enter
(bad)
cs
dec
xor
push
jmp
sar
rol
pop
and
dec
ds
adc
iret
jl
jae
sub
mov
push
jmp
nop
mov
out
pushf
xchg
sbb
push
mov
mov
xchg
es
daa
fwait
dec
outs
int
cmp
test
mov
dec
jl
mov
xchg
xor
xor
sar
mov
push
cbw
xor
mov
adc
daa
cmps
and
pop
in
(bad)
pushf
cmp
inc
cmc
push
adc
push
pop
stos
push
iret
ret
pop
cs
push
or
cmps
lock
jle
jp
and
xchg
xchg
push
and
movs
movs
nop
loop
test
cmp
and
aas
jmp
xor
jmp
mov
jg
fldln2
cmp
dec
push
enter
jmp
in
ret
ins
clc
pop
stos
dec
mov
pop
xchg
das
pop
jo
mov
push
jnp
sub
lds
out
push
in
pop
iret
fs
aam
sbb
cld
inc
jge
das
ins
loop
dec
test
jns
jecxz
push
cmp
out
mov
cmp
inc
shr
pop
imul
or
pop
scas
lods
push
xlat
jecxz
and
dec
(bad)
jp
(bad)
fs
mov
dec
xchg
imul
stc
jbe
imul
mov
into
push
fisttp
dec
ret
mov
pop
loop
iret
out
xchg
mov
and
add
jo
das
rol
pop
jnp
jl
xchg
sbb
cmp
sbb
sbb
stc
fsub
cli
and
ss
cdq
jbe
scas
xchg
hlt
sahf
mov
shl
pop
xchg
enter
(bad)
mov
jmp
test
push
push
mov
jecxz
in
mov
cmp
add
ret
aam
lahf
retf
mov
fsubr
loop
inc
(bad)
sti
inc
xor
adc
nop
in
or
sbb
imul
mov
scas
test
mov
or
cmps
mov
je
bound
ror
sub
iret
mov
lods
popf
fsub
sub
stos
and
repz
dec
mov
lods
sub
popa
jle
jge
lahf
int3
add
mov
sub
sub
xchg
retf
xchg
pop
jnp
or
mov
cmp
ja
xchg
pop
std
std
icebp
sub
(bad)
add
retf
cli
jns
(bad)
ds
out
cmps
(bad)
aam
data16
ins
inc
icebp
mov
mov
push
add
inc
repnz
daa
enter
jg
jno
jecxz
dec
bound
js
and
sub
int3
daa
aad
lea
cwde
dec
mov
lds
or
sub
push
or
xchg
(bad)
mov
jo
lods
jns
arpl
inc
cmp
cld
data16
imul
adc
pop
mov
gs
cmp
je
add
enter
test
enter
ficomp
shr
je
enter
jmp
jo
mov
push
sub
icebp
addr16
dec
and
aam
mov
call
dec
push
aam
test
jge
sub
ss
and
movs
sbb
pop
dec
hlt
fstp
cmc
dec
jle
pushw
test
mov
fmulp
cmps
mov
test
inc
das
mov
(bad)
fisub
add
push
sub
and
push
(bad)
neg
lock
int
int
jge
mov
fwait
mov
fs
clc
sar
jae
pop
cld
test
push
(bad)
mov
mov
ds
pop
mov
push
xor
jmp
inc
sub
cmps
retf
ret
dec
test
pop
pop
in
push
pop
aaa
pop
inc
loop
loop
pop
rcl
in
inc
push
dec
xchg
aad
pushf
add
lods
sti
xor
aam
stos
cmps
in
call
call
in
outs
fmul
iret
dec
adc
ror
mov
mov
xor
push
shl
fwait
enter
sub
cmc
test
sbb
inc
sahf
pop
adc
popa
add
xchg
jg
or
mov
add
gs
(bad)
lods
lahf
sub
or
(bad)
mov
dec
push
imul
pop
stos
jg
mov
dec
xlat
pusha
rol
int
dec
push
(bad)
mov
mov
mov
inc
pop
xlat
xchg
pop
iret
out
in
sti
das
icebp
add
scas
(bad)
icebp
mov
aaa
sahf
lods
jmp
test
xor
leave
mov
rcl
adc
cmps
dec
pop
test
iret
sub
cmp
(bad)
lea
push
imul
scas
cmc
call
vmwrite
aas
push
test
add
push
dec
pop
vminps
mov
int
mov
pop
mov
repnz
add
lods
nop
fwait
xchg
aad
push
out
jp
in
or
or
enter
xchg
call
mov
aam
dec
rcr
ret
sub
jns
cmp
popa
mov
pop
inc
adc
das
cli
jb
inc
rol
loop
mov
jmp
rcl
pop
mov
mov
dec
mov
pusha
xchg
jp
in
cdq
xchg
loopne
pop
jns
clc
popf
outs
lods
rcr
pop
or
ins
jno
ja
pop
cmp
retf
mov
mov
mov
xchg
pop
mov
sbb
add
rcl
repz
int
jns
dec
cmp
xchg
jnp
xchg
push
inc
xor
lock
mov
cmp
(bad)
mov
jg
sub
sbb
push
jle
fist
test
cmps
xchg
out
jno
jp
rcr
lock
mov
xlat
ror
add
inc
pop
repz
(bad)
lock
jg
jo
inc
jmp
push
movs
imul
cs
shl
shl
dec
jp
mov
jl
add
jmp
push
aam
jne
cmp
jmp
pop
cmp
cmp
stos
in
into
into
js
adc
push
je
repnz
(bad)
jecxz
nop
sbb
pop
push
loop
push
cmp
(bad)
hlt
loopne
cmp
int
xor
sub
push
and
add
push
data16
or
push
retf
mov
pop
mov
call
push
mov
std
jg
add
push
out
bound
push
nop
jno
scas
unpckhps
or
inc
fsubr
mov
test
or
in
dec
jecxz
xor
lock
jbe
or
mov
cmps
inc
cmp
adc
push
cmp
sub
shr
sub
xchg
lahf
mov
shl
xchg
mov
mov
add
ret
adc
outs
sbb
sub
sbb
and
cmps
cmps
int3
int3
ffreep
sbb
imul
add
arpl
inc
lea
adc
adc
or
jp
out
in
dec
enter
gs
or
stc
les
pop
fmul
das
in
es
into
push
addr16
xchg
cmp
imul
test
add
or
popa
mov
imul
pushf
outs
mov
mov
sbb
bound
dec
pop
ds
mov
pop
mov
mov
adc
jg
int
xor
stos
mov
mov
add
dec
mov
fmulp
and
cmp
call
jae
out
les
jg
adc
mov
pushf
push
int
xchg
int3
pop
xor
mov
into
mov
repnz
xchg
lahf
adc
xchg
aas
in
out
dec
sub
adc
cmps
add
add
xchg
daa
sub
imul
stc
adc
outs
sti
adc
out
mov
pop
push
adc
je
push
push
stos
jp
xor
mov
fidivr
push
push
cmp
fisub
test
call
dec
movs
test
sub
fwait
outs
ss
jbe
xchg
xor
jno
hlt
fisttp
xchg
xchg
xchg
sbb
jle
arpl
stos
adc
jno
loopne
push
mov
(bad)
jne
push
dec
dec
ss
and
adc
and
push
jne
add
dec
in
cdq
sahf
stos
int
stos
push
pop
gs
das
out
sbb
and
scas
test
(bad)
call
jns
mov
in
sbb
sub
lock
data16
daa
les
jge
jne
iret
pushfw
fild
mov
cli
sub
sbb
cmps
push
lods
adc
sahf
aam
inc
aaa
or
mov
lahf
(bad)
retf
add
mov
mov
push
loope
ja
xchg
dec
call
ins
mov
and
xchg
lock
mov
dec
add
xchg
es
dec
lahf
in
add
imul
fldenv
jb
(bad)
push
xchg
iret
mov
mov
ficomp
aad
or
in
fld
jle
bnd
xor
push
pop
jne
dec
cmp
sub
jecxz
sbb
pop
or
scas
and
and
cld
jnp
(bad)
les
ins
push
shr
jp
mov
nop
pop
inc
and
mov
adc
push
movs
icebp
daa
mov
mov
fs
shr
not
cmp
lds
iret
push
mov
outs
retf
sti
test
sbb
adc
sub
stos
ffree
popa
push
sbb
les
arpl
js
sbb
lahf
in
out
lock
inc
push
add
into
popa
mov
sub
(bad)
sub
aad
fwait
pop
shl
push
pop
push
mov
add
pushf
lds
(bad)
sahf
ret
mov
push
cmp
leave
ret
inc
js
xchg
neg
scas
mov
ret
and
bound
inc
or
push
or
sub
movs
es
jns
cmps
xor
loopne
pop
xor
fild
in
cmp
push
push
scas
jecxz
bound
mov
or
and
repz
dec
jmp
clc
adc
jno
jne
xor
aam
sar
pop
or
fnstsw
push
into
push
xchg
adc
xchg
jmp
test
clc
mov
inc
inc
out
out
sbb
lock
cmp
sti
mov
xor
scas
xchg
and
aam
xor
dec
jmp
push
cmp
dec
imul
mov
jg
fistp
sub
push
sbb
mov
xor
adc
dec
push
jge
add
mov
or
mov
dec
dec
add
int3
retf
mov
into
push
lds
fwait
call
lods
mov
fwait
aaa
stos
iret
(bad)
push
adc
mov
and
clc
sub
cmc
call
sub
inc
dec
xor
(bad)
xchg
rcl
adc
cmp
icebp
mov
bound
push
(bad)
aas
mov
inc
movs
retf
jns
mov
scas
fcom
pop
pop
jecxz
push
push
leave
jg
ror
jne
inc
pop
push
ret
jmp
mov
dec
inc
jo
sbb
adc
cmp
or
shl
outs
push
cmps
jns
stc
aad
jo
mov
stc
or
mov
push
lea
mov
stos
or
xchg
fs
adc
mov
pop
mov
in
mov
enter
fiadd
sbb
idiv
xchg
retf
in
fidivr
fisttp
dec
into
pop
fdivr
ins
mov
pop
xchg
xor
mov
ds
mov
icebp
xor
aad
sar
stc
sub
rol
test
test
fcmovnb
out
mov
push
sbb
jmp
out
add
xor
int
aas
jbe
dec
ins
fistp
call
sub
push
mov
fimul
sub
inc
pop
jbe
xchg
adc
cmps
and
xchg
pop
shl
sub
(bad)
add
call
inc
cmp
leave
fild
xchg
and
sar
xor
cld
shl
pop
jmp
and
jae
dec
das
jmp
and
fnstenv
test
xchg
cmp
pop
ret
inc
mov
sub
cmp
inc
adc
sbb
enter
jg
inc
cmp
test
cmp
test
push
sub
mov
test
inc
inc
mov
out
es
popf
jl
pop
push
xchg
push
sti
ins
sub
mov
fild
mov
jmp
jns
jno
into
sub
mov
and
xchg
lock
jg
retf
jmp
mov
cmp
or
mov
daa
call
out
mov
ficomp
mov
inc
mov
push
ja
and
arpl
bound
and
cmp
cwde
add
cli
cmp
jg
pop
cs
xchg
mov
push
pop
push
cmps
fbstp
ds
arpl
pop
or
hlt
call
cmp
out
or
and
xor
inc
push
sub
in
mov
inc
pop
jnp
repnz
shl
and
nop
popa
(bad)
adc
test
into
clc
inc
mov
lods
in
push
pop
mov
add
push
fisttp
scas
push
loop
mov
daa
cmps
jmp
in
push
lds
rcr
sbb
int3
ret
sbb
lods
or
gs
ret
cmp
ins
jbe
or
idiv
pop
pop
cmp
stc
(bad)
xchg
and
(bad)
mov
or
add
daa
xor
lahf
icebp
push
js
shl
lahf
imul
mov
or
xchg
sbb
and
loopne
lahf
push
test
add
cmp
imul
or
je
mov
push
sub
mov
push
mov
call
jae
cmp
loope
dec
es
(bad)
pop
inc
call
sti
jmp
fiadd
adc
dec
mov
js
daa
xchg
ret
je
sbb
mov
cmc
jl
push
inc
fidivr
mov
or
stos
mov
sbb
popa
(bad)
dec
add
pop
mul
push
xchg
(bad)
loopne
jae
test
mov
rcr
retf
ins
jecxz
stos
dec
inc
pop
dec
mul
loope
and
mov
xchg
jmp
jnp
mov
sbb
test
sbb
pop
stos
and
adc
lods
or
ficom
or
je
push
test
cmps
das
imul
adc
mov
add
jl
repnz
cmp
cmp
pop
fcom
or
jno
sub
sbb
push
imul
dec
jle
ret
sbb
or
out
inc
push
movs
loope
nop
icebp
out
dec
outs
shl
mov
das
in
out
adc
xor
adc
pop
lock
in
lea
mov
test
scas
jae
dec
in
xchg
add
ds
push
in
mov
outs
imul
sbb
mov
inc
ret
daa
xor
inc
stc
in
mov
in
xor
daa
inc
pop
jmp
add
mov
test
dec
cmp
mov
adc
in
xlat
xabort
fstp
jb
xchg
mov
jmp
mov
ins
pop
retf
ret
cli
push
test
jo
jmp
mov
js
(bad)
test
std
(bad)
adc
inc
jo
lock
out
lahf
into
enter
xchg
jne
pop
mov
inc
mov
push
inc
movs
push
cmps
ret
xor
enter
jne
in
sahf
jmp
sahf
loop
sub
sub
mov
sbb
mov
xor
sti
pop
xchg
ficom
add
pop
pop
or
lea
pop
popa
mov
pop
sbb
lods
sbb
rcl
int3
in
movs
gs
jg
dec
jbe
pop
jge
push
cdq
and
adc
mov
inc
pop
adc
pushf
rol
data16
js
mov
cld
sub
in
cwde
je
in
mov
sub
adc
cli
and
mov
mov
xchg
nop
mov
out
push
xor
(bad)
std
(bad)
mov
mov
xor
xchg
adc
mov
cli
movs
dec
adc
mov
mov
(bad)
dec
jmp
sub
out
loopne
ins
lock
pop
cmp
call
test
dec
(bad)
clc
shl
and
pop
lock
(bad)
stc
mov
mov
pop
neg
iret
mov
push
les
test
lock
push
push
xchg
cmp
jae
fldcw
jne
div
cmp
mov
outs
fs
mov
jmp
add
sub
sub
pop
cmp
sbb
sub
mov
pop
ret
add
xor
dec
sar
jbe
mov
xchg
movs
aas
xchg
imul
and
sbb
push
push
jmp
jae
xor
or
and
mov
sbb
inc
retf
pusha
cs
sar
fimul
pop
mov
inc
sub
xchg
outs
push
cmps
std
stos
stos
repz
inc
jg
retf
dec
or
iret
icebp
ins
jge
jmp
jmp
and
dec
std
pop
dec
rcl
and
mov
mov
mov
(bad)
outs
inc
stos
test
mov
sub
add
cmps
outs
out
neg
ins
aad
out
cmps
psrlw
int3
scas
fist
sbb
push
loopne
ficomp
jae
out
and
push
sahf
mov
jo
outs
jle
jnp
repz
(bad)
mov
and
add
lock
dec
xchg
dec
mov
push
dec
push
movlps
mov
xor
imul
inc
jecxz
sub
mov
jecxz
outs
mov
and
jp
hlt
popa
movs
in
or
xor
(bad)
imul
or
inc
pusha
pop
cld
test
icebp
imul
and
jl
dec
xchg
xchg
push
mov
inc
inc
mov
and
ins
adc
add
cmp
sbb
int3
add
rcr
push
fcomp
cld
jle
pop
dec
mov
idiv
test
jecxz
add
int
dec
cmps
xchg
in
call
and
fldenv
hlt
sub
or
bound
test
add
lahf
xchg
mov
xchg
in
jp
push
sub
fwait
cwde
mov
std
pop
cld
out
xor
inc
aas
retf
pushf
mov
mov
adc
scas
inc
clc
test
lods
stos
(bad)
shr
pushf
shl
cmps
jns
pop
fldcw
mov
dec
fcom
repnz
mov
ret
(bad)
pushf
ja
cmp
out
cmp
sbb
xchg
jl
xor
sub
jp
sub
adc
and
xor
xchg
xor
fsubr
sahf
xor
xchg
test
stos
mov
jae
mov
sub
rol
mov
mov
movs
repnz
dec
hlt
gs
sar
sub
or
mov
dec
inc
std
aad
ds
stos
mov
jmp
sub
(bad)
cmps
lds
aaa
out
and
push
das
cdq
ret
pusha
xor
and
jb
loopne
in
jmp
mov
inc
fisttp
sbb
sbb
push
add
ror
pushf
xlat
sbb
(bad)
loopne
fdiv
pop
ss
or
xchg
push
mov
outs
push
push
or
cmp
pop
cld
out
cmp
int
xchg
daa
in
idiv
pop
mov
rcr
fild
mov
or
fcomp
mov
test
cdq
jecxz
push
dec
push
pop
iret
mov
sub
push
cmp
adc
inc
mov
jg
aam
test
ret
lds
retf
adc
cmps
adc
ja
popa
rcr
js
lock
(bad)
jmp
pop
jne
and
mov
pop
mov
inc
ss
fsubrp
xlat
adc
mov
mov
pop
mov
inc
and
push
xlat
stos
mov
inc
rcl
jmp
pop
scas
mov
xchg
lods
inc
dec
mov
pop
sub
mov
enter
sar
lea
push
adc
pop
and
cmp
ds
cwde
cmp
iret
fmul
ins
movs
xchg
(bad)
pop
ins
int
mov
cmp
mov
cmp
pushf
or
fisttp
leave
pop
adc
ja
cmp
sbb
xchg
mov
push
jle
jecxz
das
jmp
pop
(bad)
and
xchg
and
mov
idiv
mov
test
addr16
fadd
push
sbb
jge
xor
pop
xchg
sbb
icebp
or
dec
mov
bound
xchg
stc
jb
mov
mov
mov
inc
outs
fwait
push
or
movs
jg
loopne
cmp
push
pushf
es
leave
lods
jmp
(bad)
bound
std
loope
cdq
xchg
and
arpl
adc
loop
xor
jmp
jl
xchg
sbb
fstp
es
outs
mov
sbb
es
sbb
in
dec
movs
(bad)
iret
lahf
ja
std
xchg
(bad)
lds
mov
and
lds
neg
pushf
xor
xchg
push
push
sbb
in
push
daa
inc
aam
ds
cld
xchg
or
mov
push
cli
adc
movs
mov
rcr
adc
jl
nop
pop
js
mov
stc
push
mov
jg
jno
dec
(bad)
std
gs
inc
in
das
in
test
pop
sbb
pop
les
adc
cld
fist
dec
adc
mov
ret
stos
(bad)
jb
mov
and
jae
test
xor
(bad)
pop
lock
mul
mov
and
jns
and
(bad)
push
mov
test
bound
dec
outs
and
loopne
mov
sub
out
adc
cmc
add
movs
retf
rcl
mov
cs
test
popa
pop
jne
fimul
mov
fiadd
cmps
and
stc
pop
add
loop
add
pusha
and
cmp
shl
mov
inc
data16
cmps
and
pop
inc
mov
cmp
dec
cld
adc
(bad)
in
pusha
mov
je
das
jne
push
lock
or
int
shr
imul
movs
jmp
xchg
push
(bad)
inc
jbe
out
pushf
push
dec
fsubr
mov
call
sub
addr16
push
mov
jns
retf
popa
leave
clc
push
jns
push
xor
xchg
shl
inc
sub
jmp
mov
add
fst
das
cld
mov
cmp
cmc
xchg
pop
mov
out
sbb
ret
push
jmp
pop
dec
ss
das
movs
lahf
xchg
out
icebp
sahf
xor
retf
and
push
fsubr
inc
out
ins
adc
pop
xchg
mov
cmp
ret
inc
and
mov
push
sub
outs
imul
and
in
add
(bad)
or
fidivr
cmc
mov
pop
repnz
neg
sub
scas
mov
test
push
or
enter
fmul
mov
cmps
adc
lea
into
sbb
cmp
fbstp
push
cmc
mov
push
ss
cmp
mov
clc
in
fs
sbb
pop
pushf
ficomp
or
push
push
xchg
pop
push
frstor
cmp
mov
retf
xor
or
std
mov
push
sbb
out
rol
aam
cmps
cmc
data16
xor
lahf
xchg
pop
fld
inc
mov
mov
outs
jo
icebp
dec
cld
in
sub
pop
lds
js
xor
inc
inc
fisubr
cmp
int3
pusha
(bad)
jno
data16
jne
inc
stc
jbe
pop
fcom
or
sub
add
lahf
mov
or
mov
rcl
adc
and
mov
daa
jbe
xchg
mov
popa
mov
dec
mov
push
add
loopne
pop
ror
sub
cld
pusha
inc
cmp
mov
call
stc
jo
sbb
sub
sub
sbb
rol
dec
xor
push
sbb
jnp
inc
mov
xchg
pop
popa
jb
xchg
inc
mov
adc
test
es
retf
sbb
xchg
inc
clc
test
test
mov
(bad)
ss
jo
sahf
sar
or
sar
xor
sbb
add
sbb
leave
sahf
xchg
inc
push
jns
dec
sbb
(bad)
and
outs
push
retf
fisubr
xor
add
popf
dec
jg
mov
mov
fidiv
xor
fistp
or
or
jecxz
mov
imul
add
cmp
es
movs
retf
push
jne
ret
sbb
lahf
rol
mov
mov
xchg
mov
or
sahf
xchg
jle
into
xchg
lods
lods
inc
sbb
call
call
jmp
or
pop
xor
fst
(bad)
jl
add
and
cli
adc
xlat
mov
nop
push
lahf
cmc
cmp
cld
push
(bad)
inc
das
dec
in
sub
clc
jmp
ins
push
mov
dec
and
iret
xor
fadd
mov
jbe
outs
add
inc
pop
test
ret
or
ficom
mov
mov
dec
(bad)
adc
iret
or
repz
cmp
mov
out
jp
mov
stos
mov
shr
mov
ret
lock
mov
inc
xchg
dec
cmc
(bad)
jno
xor
jl
mov
dec
xchg
xchg
sbb
stos
test
in
push
test
movs
mov
fwait
mov
sub
cdq
cmp
xchg
leave
or
mov
mov
add
add
out
dec
jp
cld
je
and
ds
jbe
xor
xlat
mov
adc
push
sub
cmp
jmp
adc
inc
and
push
nop
adc
js
loop
(bad)
or
imul
out
xor
xchg
pop
push
loopne
cmc
gs
add
movs
icebp
div
xlat
dec
xor
or
sub
mov
mov
xor
jmp
retf
sahf
es
mov
das
dec
rcr
sub
fwait
iret
or
push
xchg
add
int3
mov
ja
fs
cmp
pop
stc
sti
push
vmovss
push
hlt
cdq
inc
cmp
add
lock
and
jge
inc
or
lods
mov
add
xchg
jmp
daa
xor
cmps
ret
cmp
mov
push
mov
iret
stc
push
sbb
and
or
sub
in
fnstcw
(bad)
xchg
mov
dec
mov
dec
and
into
and
push
ds
(bad)
pushf
pop
ud1
fnstsw
movs
fstp
jmp
push
aam
sbb
dec
pop
in
mov
ret
mov
cmp
cmps
adc
pop
xchg
sub
push
or
xor
pop
mul
lods
jnp
push
jns
push
popf
in
jecxz
and
les
push
mov
mov
aad
pop
mov
add
mov
sbb
cmp
(bad)
enter
mov
cmp
pop
pop
shl
xor
jl
jmp
or
and
inc
imul
cmp
fisubr
jnp
inc
cmc
ss
inc
jmp
dec
movs
hlt
mov
outs
mov
(bad)
mov
jae
cdq
fiadd
sbb
or
je
jge
repz
ror
pop
xchg
cmp
jecxz
cmp
inc
cmp
fs
mov
div
retf
push
aam
xchg
fnstcw
scas
call
fisttp
sbb
hlt
rol
je
mov
dec
hlt
fwait
pop
je
mov
ins
lock
and
mov
fidivr
rol
loope
out
pop
cmc
mov
mov
out
(bad)
cs
aad
mov
out
ss
scas
jbe
test
inc
sbb
clc
fwait
jmp
mov
retf
mov
fild
adc
sar
push
sbb
movs
in
push
dec
sub
test
retf
retf
mov
idiv
gs
pop
adc
sub
mov
inc
fnclex
pop
je
(bad)
cmp
(bad)
shl
inc
adc
xchg
jg
sub
(bad)
xor
adc
cli
and
inc
in
mov
jl
push
xor
shl
test
lds
xor
sbb
mov
into
mov
movs
jb
dec
jne
xchg
sub
cld
movs
xor
aaa
sub
xchg
fild
mov
arpl
push
and
addr16
jle
pushf
pop
mov
dec
movs
or
or
or
mov
in
cli
popf
pop
xchg
sub
sub
iret
rcr
jae
inc
fmul
push
sub
aad
jmp
nop
and
(bad)
pop
mov
movs
retf
neg
jmp
fisub
xor
rcr
cld
mov
fstp
dec
adc
pop
in
shl
or
mov
js
push
int
sbb
lahf
dec
pop
add
sub
push
mov
cmc
imul
jo
pusha
(bad)
hlt
and
cdq
call
(bad)
hlt
movs
add
dec
mov
cmp
pop
sub
es
pop
mul
push
inc
cmps
adc
sub
jo
pop
(bad)
dec
ss
jp
mov
not
adc
das
sar
ror
aaa
and
sar
stos
sub
jne
mov
pop
mov
and
mov
aaa
mov
mov
xor
jne
add
jne
mov
(bad)
dec
inc
xor
pop
xor
cld
imul
xchg
jne
arpl
push
in
xchg
add
pop
dec
mov
aaa
repnz
sbb
inc
adc
in
sub
popa
inc
push
pop
retf
adc
jmp
sub
sbb
jl
push
shl
or
out
push
dec
call
or
inc
mov
int3
sbb
adc
jl
fdivr
jno
(bad)
loop
pop
jmp
movs
mov
in
mov
or
adc
mov
add
xchg
fisub
ins
mov
mov
shl
pusha
mov
scas
and
test
sti
das
jp
test
ins
push
jb
xor
js
in
jmp
nop
(bad)
loopne
cdq
push
shl
mov
cmp
fild
inc
xor
das
cmp
dec
ret
or
dec
call
mov
and
xor
in
in
jecxz
sbb
ss
or
mov
fld
inc
lahf
sbb
jns
push
ins
jg
pop
addr16
clc
push
jae
mov
or
mov
push
push
add
sub
and
and
or
and
dec
mov
mov
adc
in
mov
mov
push
out
cmc
(bad)
push
sbb
jmp
adc
sbb
aam
cmp
sahf
inc
(bad)
test
sub
or
inc
sbb
ret
dec
jno
adc
add
dec
push
adc
xchg
adc
out
mov
mov
cld
cdq
jmp
add
shl
mov
and
cwde
mov
xor
lds
dec
lock
sbb
hlt
or
jp
int3
sub
mov
push
aaa
mov
pop
mov
ss
add
fcmovu
rcl
dec
adc
sub
push
sub
mov
sub
jmp
mov
mov
stos
mov
pushf
std
pop
inc
inc
pop
mov
jns
jge
mov
sbb
cmp
and
mov
pop
push
pushf
push
shl
add
push
and
cdq
stos
mov
not
iret
prefetcht2
ins
sub
arpl
fadd
inc
push
sub
js
push
pop
outs
outs
adc
add
mov
js
fild
test
lea
xchg
sub
cmps
jecxz
test
call
push
ret
xchg
or
in
es
mov
addr16
pop
and
or
out
sub
(bad)
or
int
inc
call
(bad)
frstor
outs
jmp
push
mov
dec
fdivr
push
scas
cmps
ret
into
dec
cmps
dec
pushf
sbb
or
dec
cdq
cmp
scas
inc
or
and
cmp
movs
fld
sub
aad
cs
mov
jo
outs
shl
adc
and
cmp
in
dec
pop
dec
inc
scas
pop
stos
pop
ja
cmps
adc
dec
ds
scas
pushf
inc
jmp
lds
push
ins
movs
sub
idiv
sbb
xchg
mov
mov
js
push
mov
or
fmul
add
lahf
mov
into
jb
es
pusha
js
pop
mov
repnz
jecxz
mov
mov
jecxz
daa
mov
cmp
test
fsubr
scas
xchg
nop
jbe
je
bound
mov
(bad)
ins
cmps
sub
inc
or
mov
mov
dec
push
jecxz
cmp
push
adc
(bad)
push
mov
ja
mov
sbb
call
sar
push
test
fistp
adc
leave
or
popf
dec
cld
aam
test
xor
pop
loopne
adc
adc
bswap
push
cs
cs
inc
stos
fisub
jmp
mov
push
pop
sub
stos
cmp
clc
je
xor
pop
cdq
dec
cdq
cmp
aaa
das
jmp
sub
mov
dec
scas
xchg
fisttp
pop
mov
xchg
adc
jmp
mov
mov
pusha
push
xor
out
loopne
daa
popa
xchg
xchg
inc
or
mov
icebp
movs
and
std
pop
js
dec
dec
dec
pusha
clc
data16
pushf
cmp
xchg
sbb
xchg
push
in
mov
(bad)
mov
xchg
not
fsub
sbb
mov
stc
es
sbb
adc
cmp
adc
mov
xor
outs
int
jbe
dec
mov
movs
ja
push
rol
and
dec
or
stc
stos
or
mov
shl
inc
fwait
movs
jo
and
repnz
xchg
mov
bound
xor
sbb
jmp
adc
cmp
ss
popf
push
lods
or
outs
stos
cld
pop
cmps
jl
push
fmulp
mov
or
xchg
test
lods
push
mov
ret
jnp
mov
mov
dec
push
xchg
in
cmc
mov
dec
in
std
call
cwde
inc
outs
imul
adc
movs
(bad)
xlat
inc
adc
or
aaa
dec
xor
bound
sub
in
ret
mov
shl
jo
adc
neg
cmps
outs
jne
inc
jge
pop
jno
stc
addr16
adc
pop
mov
out
mov
jbe
push
and
dec
add
popf
and
mov
xchg
mov
dec
jb
and
add
ins
inc
sbb
mov
sub
push
iret
inc
ret
hlt
not
push
daa
sub
jnp
test
sbb
aaa
sub
jmp
push
jecxz
pop
mov
adc
loope
xor
fst
xor
sub
inc
leave
dec
test
jb
test
fmul
ficom
xchg
xor
pop
aaa
movs
or
push
int
lds
neg
dec
cmp
mov
inc
mov
int
add
pop
(bad)
fidiv
dec
scas
inc
xor
hlt
pop
popf
mov
ret
js
stc
scas
adc
add
mov
jle
mov
sub
ins
hlt
into
sub
lds
pop
repnz
movs
adc
mov
or
xchg
sbb
jnp
or
jge
and
(bad)
pop
fcom
jo
push
pusha
inc
or
(bad)
lds
jp
nop
jmp
scas
retf
popf
or
sub
push
sbb
imul
mov
retf
pop
outs
adc
test
cmps
retf
push
out
loop
std
and
lds
jno
cdq
xchg
call
mov
cmp
rol
int3
mov
xchg
inc
pop
add
xor
pop
std
xchg
mov
mov
mov
(bad)
rcl
add
xor
(bad)
ss
mov
pusha
sti
sbb
xlat
jno
add
test
fnstcw
sahf
into
in
xor
mov
movs
ret
iret
int
xchg
sti
mov
sbb
je
or
movs
repnz
outs
outs
or
retf
div
(bad)
aas
push
test
pushf
mov
in
and
sub
pop
call
adc
icebp
cmp
jge
push
cmp
add
inc
mov
and
sbb
(bad)
imul
fwait
adc
test
pop
es
stc
xchg
std
mov
ja
bound
les
inc
lahf
inc
mul
mov
outs
push
arpl
sbb
outs
pop
fistp
jnp
outs
sar
or
inc
loopne
stc
pop
daa
xor
sti
dec
rol
scas
ror
dec
pop
hlt
fs
aam
and
frstor
sub
in
cmps
ret
jp
test
and
cmp
or
fprem
push
repnz
xchg
add
enter
mov
dec
add
inc
lds
mov
aas
ds
(bad)
dec
in
pushf
out
mov
outs
movs
lahf
loop
mov
paddd
aas
dec
dec
jb
mov
in
dec
lahf
stc
jno
push
inc
add
jg
add
cmp
(bad)
sub
pop
in
aam
xchg
mov
xor
cli
rcl
xor
sbb
adc
test
lods
ret
pop
mov
jae
push
adc
dec
dec
jne
jl
dec
inc
add
add
jo
out
xor
pop
mov
ds
pop
rcl
lock
int3
stc
push
adc
icebp
cmp
gs
aaa
test
cwde
outs
bound
pop
call
xor
rcr
lahf
ins
dec
aad
mov
mov
fisubr
sub
dec
jle
push
xchg
stc
push
or
shr
ret
dec
pop
sub
mov
sbb
pop
fild
iret
movs
pop
test
es
out
pop
pop
cwde
jle
jl
scas
mov
jns
(bad)
xor
push
dec
aad
dec
nop
mov
mov
(bad)
into
icebp
sub
and
arpl
inc
cmp
test
mov
pop
push
mov
or
sar
inc
xor
cli
aas
adc
dec
inc
mov
call
jle
lods
inc
mov
(bad)
sbb
popa
sti
into
daa
dec
xor
scas
sbb
sub
into
(bad)
int3
mov
xchg
imul
adc
ret
adc
std
xlat
out
and
icebp
popf
les
in
adc
mov
xor
mov
jo
stos
pop
lds
mov
mov
and
sti
test
nop
fld
mov
icebp
scas
fmul
sbb
xchg
icebp
retf
pop
push
adc
(bad)
test
int3
out
sbb
xchg
gs
cmp
push
sub
retf
ret
fistp
jbe
ds
jp
lock
push
mov
lea
loop
fcom
or
movs
loopne
sub
mov
push
add
cmp
scas
sub
fsub
mov
dec
push
pop
popf
dec
mov
inc
cmp
sbb
pop
mov
mov
imul
dec
mov
ror
xor
mov
ret
in
mov
ja
mov
xor
mov
fistp
xor
jns
cs
dec
stos
daa
wbinvd
push
add
add
or
jmp
fcomi
dec
push
jmp
(bad)
push
shl
jns
ds
add
push
fdiv
addr16
cld
pusha
xor
mov
ret
or
jl
mov
sbb
xchg
fwait
jge
and
outs
fstp
arpl
push
mov
xor
push
xlat
mov
sub
add
fdivr
bswap
lahf
nop
int3
mov
or
wrmsr
and
mov
daa
lods
fisttp
cdq
sub
xlat
icebp
sub
jns
fsub
fcomp
in
mov
pop
xchg
push
cld
lods
lods
dec
loope
xor
stos
das
in
int3
cs
js
pusha
scas
pop
mov
das
dec
imul
pusha
dec
nop
push
cmp
or
cmp
jge
pushf
gs
int3
int
repz
dec
sub
xchg
or
mov
cmp
cmp
inc
push
push
add
xchg
ins
or
inc
add
mov
cmp
rcr
sti
and
daa
sbb
or
mov
arpl
int
add
call
mov
mov
and
inc
sub
push
push
(bad)
jmp
mov
dec
push
in
mov
mul
daa
stc
sub
fld
test
jmp
xor
movs
fnstcw
dec
imul
inc
sbb
or
mov
push
movs
xchg
rcl
(bad)
xor
movs
cmp
stc
or
xchg
mov
xchg
cmp
ins
jl
sub
xor
xchg
jle
shl
adc
and
cld
xchg
call
scas
dec
sub
mov
push
push
popf
or
sub
(bad)
jg
imul
in
shl
xlat
mov
fs
inc
xchg
(bad)
and
(bad)
movs
push
aam
pop
push
sbb
(bad)
mov
mov
ds
pop
xchg
and
xor
xlat
mov
sbb
or
icebp
ja
or
mov
into
rol
stos
fdivr
addr16
(bad)
sub
and
jno
jecxz
cwde
mov
adc
jmp
test
addr16
cmp
test
bound
adc
push
inc
mov
not
mov
ins
xchg
inc
movs
lock
outs
out
cmp
mov
xor
mov
cmp
pop
add
and
ror
fmul
pop
jmp
xchg
es
pop
sar
or
in
hlt
mov
pop
push
xchg
mov
sbb
sbb
mov
pop
nop
fidivr
and
lods
sbb
sub
mov
cli
loopne
pusha
xchg
xor
sub
dec
push
mov
xchg
mov
cmp
into
lods
adc
pop
aas
mov
popf
aas
shr
add
in
lods
jbe
lock
ds
jge
imul
sbb
push
dec
dec
adc
mov
adc
and
cli
in
out
rcl
sbb
jnp
mov
mov
sbb
in
xor
xchg
inc
push
pusha
jne
and
mov
(bad)
(bad)
loopne
push
fisubr
imul
mov
and
ins
push
mov
out
or
mov
jmp
inc
out
push
jl
(bad)
repnz
jo
js
(bad)
pop
bound
ins
loopne
test
ret
nop
(bad)
sub
jae
or
enter
popf
cmp
mov
jno
inc
rcl
repnz
xchg
movs
mov
jmp
pop
jecxz
or
pop
addr16
adc
xor
js
sub
xchg
dec
and
and
sbb
inc
xor
bound
ret
mov
ret
mov
sti
xchg
mov
(bad)
rcr
xlat
mov
and
rcr
push
fstp
js
mov
in
gs
mov
mov
rcl
adc
sbb
push
nop
sub
push
add
pushf
mov
clc
stos
sahf
pavgb
(bad)
int
out
inc
jl
cmp
cmp
and
dec
loop
sub
and
out
fcmovnb
cmp
rcr
pop
out
repz
add
inc
clc
jae
inc
iret
mov
cmp
loope
push
push
out
add
sti
or
std
or
xor
clc
ja
cmp
xlat
mov
jl
push
std
mov
pop
imul
popf
inc
mov
aaa
mov
add
xor
xchg
sbb
add
mov
in
mov
xlat
mov
push
and
into
push
cwde
or
fld
ins
sub
call
and
push
push
and
and
sub
data16
in
mov
cwde
mov
push
sbb
scas
add
and
dec
ja
into
and
lea
and
pushf
push
pop
gs
repnz
dec
fisub
adc
enter
stos
mov
xor
push
push
push
inc
fmul
inc
mov
cmps
cmp
imul
and
shl
and
cmps
sbb
mov
add
in
pop
jb
adc
frstor
clc
inc
aad
jnp
add
push
mov
(bad)
jne
(bad)
aam
imul
sbb
leave
sub
mov
ret
pop
xor
and
aaa
dec
rol
vpmadcsswd
add
mov
pop
(bad)
(bad)
sub
into
loope
lea
push
pop
mov
jo
lock
cmp
movs
mov
jno
aaa
cmp
jo
fisttp
xor
retf
imul
add
pop
inc
sub
lds
aad
iret
jmp
gs
sub
pop
adc
mov
pop
fild
add
push
in
or
aaa
sti
cmps
(bad)
cmp
frstor
dec
sbb
cmp
mov
sbb
mov
pusha
push
push
add
pushf
xor
repnz
into
push
mov
xchg
jns
cmp
(bad)
js
inc
and
xchg
dec
in
test
retf
mov
fld
xchg
idiv
push
push
jg
mov
jae
xor
mov
adc
jge
jmp
jle
cmp
mov
dec
sbb
lds
lods
pop
dec
ins
xchg
and
adc
mov
push
cmp
adc
lock
or
jmp
call
jnp
stos
aas
fidivr
sub
test
(bad)
jne
xor
sub
jg
nop
sub
out
lds
pop
into
cmps
mov
int3
ror
mov
test
adc
ds
les
push
fnsave
xchg
push
inc
cmc
inc
movs
jecxz
popf
repnz
jge
inc
outs
inc
xor
adc
mov
xchg
or
dec
sub
ins
adc
sti
push
cmp
mov
icebp
outs
pusha
inc
je
adc
sbb
xchg
mov
jno
sar
ror
fistp
popf
push
mov
arpl
push
inc
outs
mov
mov
imul
xor
call
stc
call
or
pop
jg
push
in
push
cmp
dec
call
mov
bound
fst
mov
add
xor
fwait
or
inc
pop
cmps
ins
(bad)
jmp
int3
mov
(bad)
ret
aas
outs
gs
daa
and
push
in
inc
js
pop
dec
mov
push
jle
cwde
imul
jns
mov
les
adc
xor
wrmsr
(bad)
xor
adc
cmp
dec
and
xchg
or
hlt
xor
add
scas
or
push
jl
xchg
adc
and
adc
adc
jns
fsubr
mul
les
dec
jb
call
neg
aaa
xor
push
jb
add
cmp
jle
cwde
lods
mov
aas
repz
into
aad
push
mov
out
dec
mov
sti
loopne
push
jmp
rcl
cwde
xchg
push
test
loope
jns
sbb
aaa
(bad)
jne
cwde
or
mov
cld
test
aad
mov
sar
scas
inc
mov
int
pop
xchg
and
rol
mov
and
pop
int3
jl
out
jnp
adc
pusha
jo
ret
pop
dec
out
out
xlat
add
jp
and
pop
dec
add
jnp
leave
mov
test
(bad)
jl
cli
pop
mov
out
aam
mov
adc
add
inc
inc
xlat
push
test
mov
and
cmps
in
ret
dec
push
dec
es
sub
popa
pop
xchg
rcr
mov
add
call
popa
jmp
test
jle
mov
jge
and
pop
shr
cmp
or
adc
popa
adc
jo
lds
call
rcr
jecxz
int3
mov
test
aad
int
cmc
jle
jmp
(bad)
imul
add
popf
pusha
mov
movs
call
rcr
add
and
sub
inc
icebp
and
ror
xlat
or
cmp
mov
jecxz
aaa
push
cmp
imul
jns
pushf
mov
rcl
xchg
or
jp
call
test
ins
pop
shl
pop
dec
js
push
mov
xor
pop
movs
lahf
(bad)
sbb
inc
lea
call
vphadduwq
sub
mov
cdq
adc
popf
mov
imul
dec
scas
push
cmp
add
pop
sub
and
or
sub
mov
mov
aad
inc
mov
sub
jbe
xchg
inc
mov
mov
fcmovnbe
and
(bad)
fld
and
bound
or
and
(bad)
jns
cs
adc
(bad)
lock
push
gs
scas
aas
pop
adc
movs
movs
scas
mov
sbb
mov
imul
mov
arpl
mov
or
bound
mov
ror
mov
ins
dec
test
add
mov
adc
icebp
iret
push
stc
cdq
les
mov
cmp
inc
mov
lods
cld
mov
push
ins
pushf
push
icebp
pop
xchg
cmps
enter
div
and
mov
bound
jae
loopne
call
popa
icebp
cmp
push
cli
movs
push
mov
scas
cs
loop
jno
scas
dec
je
adc
inc
and
repnz
subps
mov
inc
mov
or
cmps
mov
fimul
outs
fsubr
cmp
leave
fidivr
mov
mov
xor
push
push
sbb
test
shl
jae
ss
push
ret
popa
ror
paddusw
pop
push
retf
dec
inc
add
sub
ins
mov
jecxz
sahf
fisubr
or
sub
(bad)
xchg
(bad)
mov
cwde
inc
push
sahf
pop
not
pop
sbb
inc
leave
rol
in
xor
or
jno
xchg
inc
cmp
sbb
add
mov
(bad)
push
mov
test
dec
loope
add
pop
and
adc
sbb
or
fdiv
ss
dec
out
loop
out
push
push
or
pop
sti
adc
lock
cwde
sti
jns
xor
cs
inc
imul
neg
inc
in
retf
jae
bound
pop
mov
jne
shl
push
mov
dec
stos
jmp
pop
es
mov
mov
in
push
test
popa
xchg
pop
cmc
(bad)
call
sti
das
daa
cmp
dec
pop
out
mov
jle
mov
or
imul
je
std
dec
pop
fild
mov
sar
retf
jne
push
pop
lahf
mov
pop
dec
pushf
mov
fistp
push
push
inc
and
pop
int
shl
jecxz
or
call
xor
inc
jne
(bad)
jecxz
(bad)
repz
inc
push
call
push
imul
or
(bad)
pop
mov
mov
push
add
lods
push
iret
ds
fisub
dec
test
inc
aas
fwait
xor
out
aad
xchg
into
jle
adc
mov
cmp
lods
mov
loope
iret
adc
sbb
mov
mov
sbb
xchg
mov
pop
loop
mov
out
out
mov
jge
push
adc
lods
sbb
movs
jl
adc
xchg
dec
jbe
mov
aad
in
sub
inc
mov
jmp
sar
(bad)
and
test
je
inc
movs
ret
adc
les
stos
push
sti
push
jo
out
sbb
(bad)
cmp
xchg
inc
fist
xor
pop
xor
mov
addr16
test
jg
scas
in
jge
stos
std
jmp
les
push
aad
in
adc
(bad)
std
lea
inc
jnp
jl
outs
fisttp
int3
retf
ret
cmp
cli
pushw
push
loopne
push
push
cli
aas
popf
call
test
sub
mov
push
sub
lock
sub
rcl
dec
cwde
mov
adc
adc
sbb
add
mov
cmp
inc
nop
dec
lods
jne
mov
sbb
jle
jg
xchg
mov
lds
adc
pop
or
adc
inc
xchg
test
aas
inc
push
loop
jno
je
mov
sbb
or
repnz
xchg
mov
push
into
mov
and
repnz
xor
jae
int
call
push
mov
fstp
xlat
add
mov
rcr
jno
xchg
ins
cmc
push
retf
jae
aas
fdivr
outs
pop
das
push
add
inc
xor
adc
cli
mov
xchg
push
dec
call
mov
fld
mov
jo
cmc
lea
mov
push
push
lock
bound
cwde
sbb
lea
ins
neg
mov
(bad)
pop
mov
aam
push
in
out
xchg
es
adc
jle
xchg
mov
call
jae
call
or
out
in
dec
mov
xor
fisub
ret
outs
lods
data16
lods
add
mov
pop
and
std
push
cmp
mov
cwde
dec
push
call
push
iret
vcmpss
out
mov
cmps
pushf
ins
sub
mov
cmp
xchg
fistp
cmp
adc
int3
push
movs
call
movs
out
cwde
inc
add
push
in
jmp
fucomip
pop
sub
push
mov
lods
ret
fmul
mov
daa
and
inc
jp
mov
or
jle
xor
jge
int
loop
mov
push
jl
(bad)
pop
add
aad
aaa
fcmovnb
pop
sub
(bad)
dec
int
lahf
sub
(bad)
pusha
aad
mov
xchg
lods
loopne
dec
daa
xchg
into
stc
jl
xchg
ins
ds
outs
or
pushf
hlt
mov
push
jno
(bad)
xor
inc
or
jl
or
cmovle
cmp
dec
and
xchg
xchg
lods
adc
pop
mov
dec
aam
push
call
dec
test
inc
or
xor
pushf
xor
mov
mov
mov
xchg
lods
das
sub
lods
push
inc
jle
enter
mov
add
repz
movs
xor
daa
mov
xor
fistp
(bad)
jb
mov
out
jmp
retf
scas
inc
jne
cdq
mov
popf
pop
cmp
or
(bad)
test
movs
adc
adc
aaa
scas
sbb
mov
jbe
lods
aad
mov
jne
cmps
pop
jnp
movlps
sub
pushf
repnz
add
js
leave
dec
ret
or
popf
inc
sub
dec
push
or
mov
aaa
dec
dec
neg
div
rcl
ins
movs
lahf
pop
dec
xchg
sar
cdq
out
add
imul
retf
scas
mov
add
mov
jge
mov
icebp
outs
dec
hlt
retf
pusha
adc
jno
stc
xchg
movs
ss
popf
mov
mov
xchg
mov
and
ret
cmp
add
shl
icebp
mov
out
stos
retf
jecxz
and
addr16
aaa
movs
xchg
mov
out
std
xlat
inc
sbb
cmp
jg
xchg
mov
jbe
in
rol
or
cmps
push
adc
and
adc
jo
outs
popf
push
mov
sbb
fiadd
xor
lods
add
push
sbb
test
xchg
aad
ret
fstp
pop
add
pop
cmp
(bad)
add
bound
cmps
mov
mov
(bad)
ins
mov
scas
(bad)
push
sbb
rcr
mov
mov
or
(bad)
push
ret
ins
jne
sbb
fdivp
mov
loop
adc
test
inc
out
fist
pop
arpl
cli
lahf
add
cmp
add
and
idiv
fs
cmpxchg
sbb
cmps
xor
data16
sahf
shl
cmps
shl
add
out
scas
stos
and
mul
mov
and
or
mov
and
icebp
dec
shr
adc
loopne
inc
or
std
jmp
hlt
dec
ins
push
aad
xchg
mov
mov
mov
int
ss
dec
sbb
arpl
hlt
push
pop
and
xchg
mov
sbb
and
sbb
dec
scas
cmp
fild
fistp
stos
daa
mov
dec
arpl
cmp
and
mov
inc
sbb
aaa
clc
xor
cli
mov
sub
xor
std
mov
mov
mov
popa
aam
push
adc
(bad)
pop
fcomp
and
fidivr
jge
retf
hlt
pop
adc
sbb
pop
scas
rcr
gs
adc
cmp
jecxz
mov
(bad)
mov
mov
sbb
pushf
jecxz
mov
push
into
cmp
aas
inc
dec
mov
jmp
pop
scas
(bad)
leave
shl
sbb
dec
test
shl
adc
movs
fidivr
adc
sub
pop
or
xchg
adc
mov
mov
int3
hlt
scas
scas
push
clc
das
jo
ins
and
inc
xchg
movs
jp
xchg
pop
push
iret
aad
int
jp
mov
sub
mov
push
outs
in
cmps
je
test
mov
test
pop
mov
lods
or
int
outs
mov
xlat
aaa
sbb
sub
or
mov
fbstp
mov
into
mov
xchg
push
mov
sahf
enter
adc
loopne
xchg
adc
stc
outs
call
xor
bound
out
inc
pop
xchg
mov
push
pop
and
mov
and
aam
xor
int
sub
xrelease
shr
jae
les
retf
fcomp
retf
xchg
jp
adc
repz
popf
std
push
xchg
jo
imul
ss
(bad)
xor
or
dec
loope
dec
xchg
or
ficomp
pusha
imul
out
test
dec
shl
jns
ror
push
repz
push
test
push
or
jge
push
jo
xchg
xchg
push
and
pop
or
mov
daa
push
and
aaa
(bad)
ss
push
inc
add
test
cmp
jp
loopne
inc
ds
icebp
mov
cmps
call
cmp
int3
sub
lea
mov
cdq
sbb
vunpckhps
xor
(bad)
jp
adc
stos
xchg
sub
mov
inc
mov
jae
jmp
or
xchg
jbe
and
inc
cmp
jmp
mov
and
lahf
mov
adc
jmp
es
ins
nop
mov
fadd
inc
test
and
cmp
xor
aam
je
jle
imul
loopne
outs
bswap
cmp
in
adc
push
in
mov
dec
push
xchg
jl
inc
jo
or
movs
scas
dec
repz
dec
std
(bad)
fst
adc
aad
mov
icebp
aad
fld
pusha
inc
dec
aaa
mov
or
out
or
je
ins
cdq
das
jecxz
push
and
inc
lock
xchg
enter
sub
push
(bad)
arpl
or
cmc
jo
adc
inc
aad
out
push
jmp
clc
inc
out
mov
push
jne
mov
mov
(bad)
dec
es
mov
push
dec
loopne
movs
fbld
jl
imul
dec
sbb
in
jnp
and
adc
cmps
std
ret
loope
pop
loope
mov
and
adc
and
(bad)
popa
out
and
rol
mov
in
or
arpl
es
out
pop
pop
mov
ins
shl
dec
pop
stos
cmp
push
jnp
nop
daa
arpl
pop
pop
test
aas
movs
xor
pop
shl
mov
movs
aam
imul
retf
sub
mov
scas
and
arpl
push
sti
cwde
cld
sbb
add
pop
fistp
test
push
popa
out
lods
jne
push
xchg
push
ficom
inc
in
(bad)
outs
mov
sar
jnp
jmp
push
dec
mov
cli
lock
jp
je
and
and
lds
in
pop
fs
adc
or
in
jle
and
icebp
aaa
or
mov
clc
aas
cmp
inc
xchg
out
jne
and
scas
push
xchg
xchg
icebp
les
das
psllw
mov
jne
mov
movs
fild
jmp
shl
sbb
xchg
(bad)
adc
push
jne
out
pushf
add
or
aam
mov
das
add
jae
out
and
fadd
dec
imul
mov
and
cmp
mov
outs
sub
xor
pop
push
outs
adc
mov
dec
ss
std
mov
mov
mov
iret
aas
enter
xchg
xor
pop
ret
mov
add
int3
repz
xor
jecxz
lock
sbb
mov
sbb
dec
outs
(bad)
push
repz
xchg
mul
mov
push
xchg
and
inc
add
adc
jecxz
jb
rol
js
in
jecxz
push
sub
out
add
pop
fisttp
dec
push
pop
(bad)
lock
imul
push
sub
xchg
mov
iret
jb
jo
in
or
mov
push
push
shr
ret
mov
imul
xlat
push
xor
es
push
inc
dec
dec
sub
add
fisub
lods
inc
mov
mov
dec
mov
lea
stos
cmp
popa
add
into
xor
retf
aas
and
push
retf
jl
(bad)
inc
iret
fcom
xchg
mov
cmp
mov
rol
cmp
jo
aam
data16
(bad)
loopne
jmp
(bad)
inc
dec
rcl
mov
pop
mov
aas
sbb
repz
jg
outs
mov
sbb
or
jno
jle
repnz
in
dec
jns
enter
cmp
mov
in
mov
ins
xchg
ss
(bad)
loope
call
dec
mov
push
sub
adc
aad
clc
xchg
and
push
xchg
inc
xlat
lahf
lods
enter
cmp
scas
sar
repz
jno
sbb
cmp
retf
(bad)
lahf
test
aaa
jp
dec
push
addr16
sub
push
aas
jg
inc
(bad)
jne
adc
and
dec
outs
imul
and
cmp
scas
dec
out
xchg
test
popf
test
adc
jge
inc
dec
xchg
or
ror
sbb
ret
bound
je
sbb
push
xchg
into
jecxz
cwde
pop
pop
or
xor
add
call
xchg
adc
(bad)
fsub
rcl
push
inc
es
push
mov
inc
sbb
idiv
loop
imul
test
dec
fnstenv
pop
mov
and
dec
les
jno
cld
shr
jne
jg
sub
inc
mov
punpckhbw
and
mov
push
and
xchg
std
cdq
pop
ins
sub
adc
jecxz
mov
stc
lods
pop
add
mov
jno
test
sbb
mov
or
jmp
jmp
repnz
dec
dec
adc
ja
push
lds
fwait
sti
cmps
mov
enter
mov
adc
inc
jo
xor
xchg
leave
shr
ja
mov
and
(bad)
fdivr
sbb
and
push
iret
popa
cmp
scas
ja
ss
adc
ret
cdq
ficomp
pop
sbb
dec
pop
outs
pop
inc
dec
adc
out
mov
pop
cmps
or
jmp
inc
lea
cli
inc
into
xchg
mov
add
xchg
jp
and
cmp
in
enter
test
fld
fiadd
ror
sub
xchg
pop
in
sbb
push
mov
push
out
mov
push
or
(bad)
frstor
dec
dec
mov
leave
loopne
or
push
shl
xchg
aas
and
push
movs
cs
les
sub
push
mov
jge
popa
pop
add
sti
test
(bad)
rcl
pop
add
(bad)
fistp
sti
add
test
sub
leave
add
inc
xor
inc
imul
mov
xchg
jnp
cmps
retf
pop
inc
dec
and
in
pop
lahf
arpl
stos
xchg
daa
xchg
or
out
push
mov
push
dec
adc
xor
call
loope
xor
inc
jp
jl
mov
movs
daa
mov
shl
stos
cmp
mov
sbb
sahf
and
xchg
xor
jb
(bad)
out
mov
mov
mov
jns
xchg
sbb
jnp
mov
push
push
inc
mov
jno
retf
loope
push
test
xchg
mov
mov
cmp
mov
jnp
push
dec
cmp
cwde
ret
call
pop
push
xchg
push
pop
stos
sbb
imul
call
jnp
push
leave
sub
hlt
xlat
push
data16
lods
mov
cmc
adc
xchg
ficom
jmp
(bad)
xor
xchg
data16
jecxz
scas
imul
loopne
int
xchg
lods
adc
pop
gs
mov
cld
lahf
aad
push
pusha
nop
pop
push
pusha
mov
mov
push
xchg
int3
ret
test
test
int
cmp
loop
popa
cmps
inc
jl
pop
rcr
mov
out
ror
jo
mov
mov
loop
inc
cld
xchg
in
or
ret
mov
jl
xchg
repz
cdq
jns
test
aaa
pop
leave
cmp
dec
std
add
sub
mov
and
inc
cwde
int
jecxz
inc
fld1
lea
sbb
clc
scas
add
je
xchg
shr
mov
jbe
scas
lock
js
pop
scas
mov
pop
xor
adc
xchg
push
dec
mov
push
shl
pop
ret
mov
stc
xor
add
push
pushf
dec
pop
add
xchg
cmp
jbe
jle
shl
sub
aam
aad
or
idiv
or
not
jbe
mov
faddp
and
pop
mov
rcr
ret
dec
xor
call
iret
xor
adc
or
int
movs
in
pushf
mov
cwde
repz
push
cmp
push
sbb
pop
inc
pop
xor
loope
pop
inc
push
iret
aad
mov
mov
iret
push
in
int3
adc
enter
ret
xchg
jno
call
imul
js
rcl
dec
xor
adc
inc
inc
push
and
inc
loope
cmp
sbb
xchg
fsub
xor
rcr
jg
movs
(bad)
mov
sub
aaa
test
jb
xchg
(bad)
xchg
int
xor
xchg
xchg
(bad)
std
clc
or
sti
push
dec
call
clc
lea
and
(bad)
mov
ror
int
sti
into
in
out
outs
icebp
mov
call
js
dec
push
iret
ret
popf
mov
ret
ret
enter
sar
lds
mov
adc
pop
sbb
push
stos
add
xchg
retf
loopne
dec
xchg
push
or
call
sahf
inc
loop
mov
out
cmp
cmp
int
leave
adc
cmc
daa
leave
adc
push
xor
test
adc
mov
cmc
ss
jnp
inc
aam
or
pushf
call
ins
(bad)
and
jne
imul
lea
add
xor
ds
call
dec
jmp
xor
test
mov
jo
sahf
pop
sar
adc
ds
test
out
and
mov
dec
pop
jne
jbe
not
push
cld
jnp
push
das
shl
xor
pop
dec
inc
inc
and
mov
and
fsubr
push
mov
sbb
pushf
jbe
sar
inc
jns
cdq
leave
lods
ffreep
inc
outs
push
scas
fs
cmp
sahf
adc
fidivr
(bad)
xor
inc
rdmsr
dec
pop
out
sbb
mov
push
sar
jmp
mov
inc
enter
dec
mov
scas
clc
neg
jb
out
pop
and
cdq
pop
inc
daa
sub
fistp
pop
call
adc
bound
(bad)
out
arpl
push
xchg
js
inc
sub
push
pusha
sub
clc
out
jl
shr
int3
daa
int3
dec
dec
sbb
shl
lea
push
and
sti
or
xor
hlt
and
sub
pop
pop
pop
sbb
aad
cld
ins
mov
adc
and
mov
push
jl
mov
mov
and
lds
test
xor
mov
add
ja
aad
or
mov
xlat
dec
test
jmp
(bad)
je
call
clc
and
jb
mov
loope
xor
dec
adc
rol
inc
inc
and
retf
rol
ficom
sub
push
jb
cdq
mov
push
out
outs
aaa
cmp
dec
sahf
or
outs
lahf
mov
fldcw
out
or
test
jecxz
mov
lahf
shl
mov
aaa
add
mov
sbb
mov
loopne
fs
bound
jb
mov
pop
retf
push
mov
daa
push
adc
push
add
retf
jae
mov
dec
imul
adc
test
fldcw
sub
push
mov
fst
out
arpl
mov
loope
mov
or
call
fld
call
pop
test
das
cmp
dec
push
sar
mov
cmps
popa
jg
repnz
fild
int3
in
pop
and
or
inc
cmc
dec
mov
call
out
add
sbb
inc
cmps
push
imul
enter
add
cmp
jbe
out
clc
addr16
cmc
aam
lock
xor
iret
out
mov
sahf
push
jae
fwait
or
dec
xchg
call
dec
sti
push
jnp
mov
ret
faddp
stos
movs
mov
jl
jecxz
xchg
aaa
iret
xor
imul
inc
sub
and
test
jae
cmps
mul
shl
lahf
int
aas
(bad)
ror
ret
fstp
or
xchg
and
js
leave
fsubr
push
retf
sbb
jmp
xchg
loopne
int
(bad)
mov
loopne
cmp
xor
sbb
mov
cli
mov
(bad)
(bad)
adc
out
add
pop
add
stos
and
fadd
(bad)
sub
xor
test
pop
repz
pop
es
cmp
xchg
mov
jmp
popa
add
mov
xlat
clc
fisttp
es
mov
xchg
gs
mov
dec
test
cmp
pop
cmp
addr16
inc
retf
movs
fstp
push
mov
je
imul
adc
aas
adc
xor
scas
(bad)
fisubr
mov
xor
dec
mov
pusha
push
add
jns
jno
pop
mov
inc
add
dec
fdivrp
and
leave
cmp
pusha
pop
in
fadd
div
cmps
stos
sub
and
dec
cdq
xchg
arpl
aas
out
pop
pop
jmp
retf
call
cmp
and
ins
js
enter
pushf
not
pop
(bad)
neg
jb
ins
icebp
pop
test
dec
inc
fisub
xor
pop
scas
ret
in
mov
mov
nop
pop
pop
bound
inc
repz
leave
loop
fsubr
sub
repz
ficom
fidiv
loopne
call
mov
or
xchg
repz
pop
jecxz
sbb
mov
xchg
push
mov
mov
pushf
fst
pop
mov
mov
rol
int
data16
lods
sti
mov
(bad)
mov
sbb
mov
adc
leave
xchg
jno
data16
std
(bad)
adc
test
jbe
sub
and
out
adc
out
add
(bad)
neg
xor
push
out
in
cmp
repnz
add
mov
std
out
sbb
sbb
les
retf
out
xchg
lahf
push
aas
(bad)
inc
add
pop
xchg
jnp
or
sbb
xor
mov
dec
pop
lods
in
sub
mov
push
mov
xor
mov
or
jno
(bad)
cmp
sbb
lahf
jecxz
ja
sar
lods
in
rcl
xor
dec
mov
cmps
pop
pop
cmp
js
jne
pop
lds
and
sbb
sub
cmp
cmc
std
xor
cmp
arpl
jl
ss
jbe
jno
and
pop
(bad)
ret
jge
and
stos
pop
mov
sub
fsubr
pushf
dec
mov
clc
push
mov
dec
test
std
cli
sub
les
stos
jmp
xchg
xchg
add
cmc
xchg
in
or
mov
fwait
fwait
cs
dec
fwait
ds
jmp
inc
mov
inc
xor
out
mov
test
stc
das
xchg
sbb
push
xor
xor
mov
add
scas
xchg
mov
cld
xchg
inc
scas
jmp
push
adc
adc
scas
fld
add
into
sub
test
sub
mov
mov
adc
(bad)
rol
inc
pusha
dec
cmps
pop
dec
push
mov
sbb
les
pop
or
or
in
xor
mov
int3
fimul
mov
pop
sbb
ss
add
test
lods
sub
cs
mov
shl
gs
daa
dec
push
pop
imul
push
neg
add
mov
fcmovb
sahf
pop
hlt
pop
and
sbb
mov
int3
jmp
test
or
je
push
push
jo
fcmovbe
call
cmpxchg
sti
ret
cmp
sub
int3
jge
mov
inc
sbb
sub
xor
dec
addr16
mov
bound
mov
xchg
mov
mov
inc
sub
hlt
iret
loopne
(bad)
jae
call
pop
adc
bound
sbb
cmps
(bad)
push
mov
fldpi
or
jne
movs
mov
inc
push
adc
lods
enter
adc
add
push
jmp
pmulhw
shl
fldpi
and
mov
fs
lock
out
xchg
sub
ret
fild
test
sub
clc
popf
and
jl
push
pop
lock
mov
(bad)
in
jp
gs
dec
in
pop
bound
popf
jecxz
cli
and
leave
push
je
in
loope
ja
mov
stc
adc
push
sub
cmps
mov
inc
cmp
and
shr
sub
imul
dec
imul
ror
mov
and
mov
jb
adc
xor
cs
mov
jecxz
test
mov
test
stc
cs
(bad)
retf
mov
xor
aad
gs
or
(bad)
mov
into
retf
add
sbb
xchg
div
fild
scas
mov
stos
add
jle
lds
enter
leave
or
pop
xchg
clc
pop
xor
jle
aam
ja
inc
rcl
std
fwait
push
int
add
std
xlat
xchg
sbb
aam
xor
xor
ins
mov
or
retf
jecxz
ret
lds
fs
std
dec
xor
inc
jmp
(bad)
dec
push
test
jge
rcl
pop
lock
add
int
mov
(bad)
scas
sub
sbb
or
loop
cmp
push
cdq
js
inc
push
(bad)
aam
push
xor
xchg
stc
fmul
jo
pop
xchg
pop
cld
dec
pop
pusha
aam
sahf
jbe
cdq
push
cdq
scas
aas
scas
sbb
not
rol
pushf
jo
int3
mov
fst
in
scas
xlat
div
pushf
sub
(bad)
and
push
aaa
mov
jae
in
dec
cmp
and
das
jle
cld
out
dec
or
in
push
mov
and
pop
jo
mov
and
lock
shr
dec
cs
push
icebp
mul
lea
pop
icebp
sub
push
sub
mov
cmp
loopne
pop
cmp
out
jnp
mov
ds
loopne
jno
ror
mov
sub
cmp
ins
loope
push
popf
sub
mov
mov
cmp
xchg
sbb
jge
cmp
outs
jnp
push
mov
cli
enter
xchg
push
or
into
add
cmp
sub
sar
gs
call
jl
push
ror
jbe
sbb
cmp
and
inc
push
ret
jns
push
loopne
js
pop
into
cdq
js
push
inc
cmps
or
dec
cmps
enter
or
inc
hlt
mov
xor
cmp
fcom
cli
cmc
cmps
or
xor
lods
(bad)
mov
xchg
call
xor
lods
dec
stos
xchg
sub
add
dec
fcom
gs
aaa
sahf
and
adc
and
les
aaa
iret
inc
mov
or
(bad)
cmp
add
xchg
xor
pop
fidivr
fsubr
loope
push
ds
dec
adc
cli
lock
in
(bad)
jae
cs
lea
stos
xchg
mov
shr
adc
inc
mov
xor
cmp
imul
ins
or
sbb
add
xor
addr16
adc
or
add
sub
xchg
mov
adc
or
outs
cmp
mov
in
push
xor
sbb
imul
imul
jl
mov
pushf
inc
add
in
dec
mov
mov
xchg
xchg
cmps
aam
fadd
xor
pop
mov
rol
cs
jns
mov
mov
xor
mov
cli
dec
inc
jecxz
stos
out
outs
xor
test
mov
mov
(bad)
test
fld
in
jl
xor
shl
lods
cmps
push
out
and
repz
mov
aam
push
fnstsw
xor
inc
cmp
in
sub
cmp
addr16
lods
fadd
loope
cmp
fcomp
jmp
dec
(bad)
jge
sar
mov
xchg
out
gs
jmp
jp
lock
inc
jmp
out
add
bound
mov
call
jbe
cs
xchg
adc
add
push
mov
cmp
fst
int3
cmp
hlt
xor
jge
dec
movs
daa
test
pop
rcl
and
(bad)
push
(bad)
push
sbb
mov
mov
lods
cmp
or
test
cmp
ret
inc
jg
mov
xchg
mov
daa
stc
outs
xchg
mov
mov
sbb
jmp
cmp
les
push
and
into
shr
or
push
jne
fwait
cld
enter
inc
clc
push
ins
popa
call
fs
jecxz
push
add
sbb
xor
xchg
leave
aaa
and
pop
sub
iret
xor
add
jecxz
int3
mov
or
push
out
sub
(bad)
sub
sar
mov
cwde
jle
xor
(bad)
out
pop
mov
mov
les
or
lds
hlt
loope
adc
(bad)
fimul
jle
ins
pop
sbb
fstp
push
dec
push
repz
mov
or
jnp
fs
jg
das
movs
and
pop
repz
int3
mov
add
adc
mov
jmp
pop
cmp
sahf
int
sbb
cmp
add
imul
cmp
inc
shr
fbstp
in
stc
dec
jp
push
sub
xor
shl
or
repnz
xor
imul
cmp
mov
leave
xchg
xchg
mov
pop
sbb
adc
add
or
xchg
and
mov
dec
aas
pop
and
fnstsw
leave
dec
repnz
inc
in
mov
(bad)
pop
pusha
push
adc
lahf
out
rol
mov
jmp
cld
(bad)
repz
cmps
sbb
jge
dec
leave
mov
pop
jae
daa
dec
lds
je
jle
aam
xchg
ret
rol
xchg
fcomp
stos
adc
int3
mov
shr
(bad)
mov
or
push
mov
mov
daa
cmp
xlat
pop
add
xchg
cmp
push
sub
sbb
sbb
adc
adc
test
dec
mov
lock
push
ja
(bad)
mov
add
jo
push
and
sub
adc
daa
sub
sub
ins
mov
shl
adc
hlt
dec
push
mov
std
movs
(bad)
in
mov
dec
clc
nop
pop
jmp
sub
ja
out
call
clc
cmc
scas
repnz
inc
call
nop
mov
and
dec
inc
xchg
imul
and
arpl
jle
dec
add
sub
adc
enter
cmp
pop
loope
lods
cmp
lods
arpl
mov
pushf
stc
repz
stos
sbb
add
xchg
ins
lods
pop
add
jno
rcr
dec
pop
in
imul
retf
adc
data16
out
cli
jae
cmp
xor
fistp
adc
(bad)
cmp
cmp
pop
or
dec
rcr
or
pop
fcmovu
loop
ins
ds
xchg
adc
pop
push
pushf
leave
cdq
lods
cmc
jp
cs
adc
push
fidiv
shr
pop
or
call
out
fwait
(bad)
jbe
mov
cmp
inc
std
icebp
retw
sub
mov
lahf
xor
cmps
fisub
xchg
pop
dec
jg
mov
in
jmp
mov
inc
xchg
dec
cmp
sbb
inc
cmp
ficomp
mov
cs
scas
fs
ret
dec
lea
xchg
mov
cmc
push
dec
fs
xor
stos
loope
(bad)
out
cld
sub
adc
inc
cli
mov
pmullw
push
mov
jns
jae
ficomp
fldenv
push
xor
jmp
inc
or
sub
xor
es
mov
pop
cmps
push
repz
pop
ret
retf
sub
jnp
and
aad
mov
leave
in
leave
sbb
adc
fisubr
aam
ins
add
fs
pop
pop
mov
push
push
jnp
inc
mov
dec
push
push
cmp
xchg
add
outs
pop
stos
jnp
dec
sub
mov
add
mov
fcom
repz
jl
mov
hlt
sub
cmp
pop
fldenv
jl
adc
jbe
out
cs
cwde
mov
pop
adc
int
mov
mov
add
inc
sbb
imul
fsubr
stos
sbb
(bad)
scas
repnz
and
inc
push
add
dec
cwde
xchg
jns
dec
iret
ficom
mov
push
test
mov
cmps
clc
or
fnstsw
xor
imul
xchg
shr
les
or
mov
fist
xchg
fiadd
sbb
push
xchg
scas
mov
out
shr
ret
adc
loopne
inc
pop
pusha
push
and
xchg
jbe
stos
xchg
inc
loopne
dec
sar
out
inc
mov
push
pusha
add
lahf
pushf
popf
(bad)
dec
xchg
mov
ficom
mov
fiadd
mov
mov
data16
fs
add
pop
adc
xlat
mov
mov
enter
pop
xchg
mov
je
fldl2e
adc
jecxz
sahf
pop
int
cmps
leave
loop
xor
push
nop
in
loop
mov
outs
gs
(bad)
fcomp
idiv
add
xchg
xchg
mov
out
inc
bnd
mov
add
repz
dec
jbe
dec
fld
push
imul
mov
push
in
imul
sub
iret
add
adc
ficom
sbb
xorps
mov
adc
xchg
xchg
outs
inc
xchg
push
out
jb
mov
jmp
ret
jne
mov
pop
cmc
push
stos
into
lock
pop
ja
(bad)
jno
mov
out
loope
sahf
mov
mov
xchg
add
loop
and
ret
in
mov
ret
sbb
sub
mov
xchg
jmp
jnp
pop
gs
call
shr
mov
cmps
(bad)
cmps
lds
enter
xchg
and
nop
(bad)
cmp
xchg
pop
ja
leave
fisttp
push
loopne
jo
push
xor
cli
or
or
ret
xchg
jmp
cmps
xor
jb
jg
mov
adc
jb
jae
pusha
lock
jb
push
cmp
js
rcl
xor
pop
xchg
add
les
jl
fbstp
jmp
xchg
xor
lock
aam
mov
add
jbe
jbe
std
loop
add
into
cmp
in
or
aad
add
jno
data16
ror
pop
scas
mov
sahf
in
je
or
xor
(bad)
pop
push
int3
push
test
sub
mov
xchg
mov
clc
cmp
or
dec
mov
dec
mov
repnz
je
into
cwde
sbb
cwde
mov
mov
cmp
fs
pop
sbb
dec
mov
retf
(bad)
push
call
imul
jne
mov
cld
stc
fisttp
add
or
dec
push
fmul
bound
loope
dec
in
adc
arpl
inc
jle
ret
push
aad
adc
jp
xor
pop
push
mov
(bad)
fs
pusha
sub
ins
dec
jmp
mov
push
ror
pop
add
ficom
nop
jns
jae
imul
mov
icebp
shl
(bad)
jmp
mov
or
mov
fbstp
mov
std
loopne
add
and
mov
mov
mov
cmc
sbb
or
inc
sub
push
xchg
cli
mov
out
jbe
outs
or
add
jns
jns
pop
cmp
or
cmp
or
(bad)
ficom
and
push
adc
outs
sub
jae
in
push
hlt
adc
pop
and
cmp
and
fldenv
fmul
mov
inc
fadd
jb
in
js
lods
pop
pop
mov
pop
inc
cmp
in
push
mov
push
dec
xor
mov
icebp
(bad)
sub
xor
imul
mov
push
test
push
into
adc
aad
xor
xchg
popf
pop
sahf
lea
fist
push
fnsave
nop
pop
cmp
pop
and
in
ss
mov
adc
sub
or
and
sub
ja
or
push
retf
dec
mov
jno
fst
cs
arpl
pop
test
add
dec
mov
pop
sub
add
test
mov
jle
and
jecxz
out
lods
loop
or
mov
mov
mov
cmp
(bad)
adc
(bad)
sub
int3
adc
mov
push
lods
inc
loope
gs
push
cmps
in
push
inc
scas
xchg
lods
jl
add
jne
cmp
(bad)
fnstenv
add
cli
loopne
mov
sub
add
sub
hlt
stos
add
mov
push
cmp
das
test
mov
sar
and
push
mov
jae
add
add
std
inc
cmp
lods
or
imul
add
sub
mov
cdq
adc
mov
jecxz
pop
jno
test
cwde
fwait
push
cmc
inc
push
lea
lahf
lock
repz
call
jmp
adc
stos
sub
sbb
loope
pop
add
and
cmps
add
jp
add
repz
imul
and
inc
into
jne
dec
popa
dec
shl
xchg
std
mov
mov
fstp
ret
retf
popa
mov
dec
loope
mov
mov
push
cmp
test
pop
xor
cmp
ds
cmp
pop
int3
sbb
test
push
data16
mov
cmc
pop
sahf
fmul
or
das
fnstenv
arpl
jno
repnz
(bad)
jmp
mov
mov
jae
aaa
push
jae
dec
mov
add
lods
xlat
cdq
mov
cmp
mov
and
inc
icebp
and
xchg
dec
std
(bad)
cmp
sahf
add
shr
mov
hlt
cmps
into
mov
cmp
jecxz
rcr
sub
mov
rcr
mov
jnp
clc
push
outs
in
xchg
mov
and
adc
xor
(bad)
fld
mov
jp
add
jno
ins
sbb
loope
inc
movs
mov
pop
xor
add
xor
add
loop
pop
and
mov
cmp
inc
call
sub
jns
cmps
xchg
pop
outs
ins
mov
mov
vmovmskpd
not
jp
cwde
retf
test
out
sub
outs
xor
out
clc
call
jb
add
(bad)
sub
hlt
cmp
cmp
jb
jg
push
fild
(bad)
fld
or
into
xor
pusha
sar
dec
sti
fcmove
sbb
js
xor
xor
mov
and
es
pop
lock
js
es
jg
inc
push
icebp
je
cmpps
out
adc
inc
pop
out
in
dec
shl
pop
pusha
pop
outs
mov
pusha
sar
mov
in
dec
cs
lea
add
or
or
test
push
jno
aas
outs
ds
jmp
les
ins
dec
movs
psrlw
sub
punpcklbw
cmp
or
mov
mov
dec
jne
rcr
lods
sub
push
cmp
iret
xor
add
cdq
pop
lds
rcl
and
mov
push
add
sbb
mov
rcl
and
loop
int
mov
aam
test
addr16
cli
dec
std
aam
icebp
pop
lods
sub
adc
push
vpcmpeqw
pop
js
shr
stos
js
mov
fcomip
das
mov
push
push
xor
pxor
mov
aad
inc
(bad)
cmps
int
sbb
inc
add
stos
mov
cmp
pop
lea
mov
mov
push
dec
fld
add
and
test
jl
jb
sbb
and
nop
retf
pop
ficom
push
sbb
sahf
xchg
mov
sbb
dec
mov
dec
loopne
push
push
cmc
lahf
sar
pop
outs
sbb
cld
aad
dec
mov
jle
jecxz
sbb
or
xchg
cmp
clc
cmp
ja
sahf
dec
(bad)
call
xchg
add
xlat
stc
mov
and
jg
pusha
or
push
cli
(bad)
push
scas
mov
or
adc
ins
sbb
jae
std
nop
jbe
out
scas
imul
sub
(bad)
gs
aad
out
and
cmp
repnz
jge
or
cmp
ja
mov
hlt
aam
inc
lds
repnz
ret
or
push
mov
or
rol
(bad)
outs
sbb
pusha
sbb
arpl
leave
sub
mov
or
fstp
jg
jnp
call
mov
xchg
or
data16
mov
and
aas
dec
movs
shl
xchg
cmp
ret
gs
jbe
cdq
loopne
stos
(bad)
dec
movs
fiadd
sbb
pop
jnp
into
xchg
jmp
pop
add
fisttp
pop
dec
and
pop
xor
je
ins
(bad)
pushf
pop
ret
jo
retf
and
mov
push
pop
and
xchg
aam
jae
jns
inc
jb
cmp
sti
sbb
sbb
pop
dec
out
aas
or
inc
adc
clc
pop
(bad)
scas
mov
popf
jb
push
imul
icebp
(bad)
fcmovnu
cdq
into
(bad)
cli
or
pop
retf
lods
test
cmp
int
push
xor
cmp
dec
imul
aaa
and
pop
ins
ds
mov
imul
inc
mov
mov
cmp
add
fidivr
push
adc
push
push
aas
inc
sub
inc
cmp
ror
sub
xchg
lahf
ficom
repz
jp
out
push
xchg
push
sbb
cmp
frstor
popa
or
add
movs
test
sbb
fnstsw
and
add
mov
xchg
push
add
data16
sahf
sub
repz
out
xchg
mov
mov
lods
and
popf
mov
fcom
jle
in
mov
nop
nop
xor
xor
mov
in
xor
push
xchg
mov
pop
int
cmp
(bad)
out
call
jae
(bad)
push
inc
outs
daa
or
popf
sub
test
ins
stos
pop
stos
mov
sub
sub
mov
mov
fldenv
xor
mov
xor
lahf
jmp
pushf
pop
ds
lods
xor
xor
mov
int
(bad)
sbb
pop
pop
loope
xor
jecxz
dec
test
mov
and
inc
loopne
mov
cmc
mov
xor
pop
stos
mul
adc
in
rcr
test
add
push
mov
cmp
loope
repz
add
cs
data16
mov
inc
jo
mov
jg
outs
cmp
(bad)
out
loope
xchg
in
das
mov
mov
sbb
sbb
sbb
pop
jmp
jne
fstp
or
adc
jmp
jno
jg
sub
push
loop
shl
xor
fsubrp
loopne
psubusb
(bad)
arpl
sub
pop
dec
mov
and
adc
jmp
sub
add
dec
sar
repnz
(bad)
call
fwait
int
test
push
test
fsub
mov
mov
call
mov
mov
jae
adc
push
loop
pop
xor
xor
call
jno
mov
mov
int
bound
cmp
test
inc
ficomp
xchg
pop
pop
or
xor
repz
mov
inc
in
das
pusha
pop
(bad)
fdiv
out
test
repnz
push
ins
dec
jbe
ret
cmps
in
xchg
pop
add
cmp
iret
jle
inc
sbb
scas
lods
aad
ds
add
nop
pusha
mov
ret
adc
lods
loope
cmps
jb
leave
test
repz
(bad)
dec
mov
shr
push
fsubp
pop
psubsb
pop
add
cmp
mov
ins
sbb
xor
fsubp
sub
das
in
jae
xchg
add
pop
out
ins
iret
dec
loopne
fimul
jae
mov
enter
in
enter
mov
rcl
pop
jmp
inc
push
inc
mov
jmp
mov
mov
mov
aas
(bad)
cs
repnz
out
int3
clc
push
or
ins
mov
popf
cmp
mov
push
cld
and
test
xlat
std
sub
mov
mov
div
sar
into
(bad)
addr16
int
jg
nop
jl
mov
mov
pop
xchg
mov
xchg
inc
push
sbb
jb
sbb
or
inc
push
mov
aaa
das
nop
lea
repz
dec
das
cmp
fucomi
ret
pop
jnp
or
cmp
push
and
adc
mov
push
mul
sub
out
fs
mov
int
and
cld
adc
ds
aad
js
and
push
lock
(bad)
fstp
and
xchg
inc
fstp
inc
and
mov
sub
jb
jmp
jmp
push
arpl
xor
pop
rcr
ins
jg
retf
dec
sar
jmp
jmp
sub
dec
mov
sub
sub
and
ja
call
movs
scas
mov
(bad)
dec
ret
(bad)
mov
adc
loop
das
jl
(bad)
sbb
mov
dec
bswap
std
xchg
lock
ret
adc
push
sbb
pop
fmul
shr
mov
in
(bad)
js
nop
(bad)
sub
cmp
fisub
inc
and
and
lods
xchg
cmp
push
inc
xchg
fisub
rcl
sar
jge
pop
mov
mov
jns
mov
sbb
jmp
xor
inc
xchg
inc
cwde
leave
cmp
adc
mov
lods
sbb
sbb
nop
call
sub
fdivr
(bad)
ins
sub
cmp
cmp
bndldx
pop
sub
xor
ss
mov
xchg
lods
pop
sub
imul
add
data16
push
lods
movs
jns
mov
fisttp
jno
jnp
int3
or
das
pop
call
inc
dec
or
fwait
cmps
daa
cmp
or
mov
dec
scas
jmp
fwait
addr16
repz
jbe
or
jb
mov
inc
add
sub
cwde
(bad)
push
sub
cwde
and
add
pusha
cmp
sti
hlt
std
ja
std
retf
(bad)
dec
cmp
mov
ret
or
fdivr
in
sub
push
mov
int
stc
(bad)
adc
pop
cmps
fwait
int3
(bad)
fwait
and
out
rol
cmc
mov
out
cmp
pop
scas
mov
cmp
clc
popf
or
cld
jge
xor
dec
and
test
pop
inc
or
aas
cs
clc
mov
inc
fiadd
xor
push
loopne
jae
popf
mov
cmp
or
pop
stos
and
shr
push
adc
sbb
mov
call
sub
jl
test
mov
mov
add
xchg
bound
test
test
push
jb
aas
stc
test
mov
(bad)
sti
sbb
jl
loope
fptan
sub
ins
jmp
(bad)
mov
jo
push
pop
jecxz
je
and
jp
add
jbe
mov
xor
das
aam
iret
jge
jle
out
add
jmp
xchg
xlat
sar
pop
sbb
xchg
sbb
or
mov
mov
fs
sub
sar
push
lods
shl
add
dec
mov
xchg
hlt
ficom
push
inc
xchg
stos
mov
jnp
cmp
mov
xchg
xor
pop
imul
fisttp
and
mov
sbb
push
in
mov
cmp
pop
pop
sbb
les
pop
lods
cmp
or
adc
sbb
leave
pusha
rcl
mov
dec
std
int3
mov
cmps
retf
mov
mov
xchg
and
or
lock
jnp
int
dec
inc
cmps
mov
int
shl
stc
rcl
scas
pop
ja
scas
fst
mov
mov
mov
mov
lea
rcr
aas
adc
es
call
inc
and
jecxz
push
or
ins
pusha
pop
fldenv
mov
test
hlt
shl
push
(bad)
in
ret
or
jmp
in
daa
push
aam
shl
cmps
pop
jg
inc
adc
stc
adc
or
mov
inc
inc
adc
mov
outs
(bad)
sti
sbb
sbb
arpl
pop
push
sbb
sbb
aas
lahf
or
or
xor
mov
(bad)
sbb
push
fimul
add
shl
add
sub
fcmovb
imul
(bad)
mov
pop
inc
dec
int
inc
lahf
aad
cmps
ret
cmp
xor
js
cdq
xor
and
test
lahf
into
neg
jae
daa
sbb
lods
ins
das
pop
xor
test
jbe
sbb
dec
and
or
shl
mov
xor
sub
dec
sbb
ret
inc
mov
adc
cmps
push
cmp
mov
mov
xor
outs
mov
or
and
mul
xchg
cld
je
iret
retf
stos
jmp
stos
(bad)
scas
cmps
test
cmp
xchg
sub
or
dec
xor
jl
jecxz
js
xor
cmc
out
adc
sbb
je
dec
sub
sub
cwde
mov
jmp
std
sbb
fadd
mov
loope
mov
sub
sub
popf
cmc
add
gs
push
fwait
pop
ret
or
(bad)
stc
(bad)
call
stos
stos
stc
push
pop
adc
mov
ret
adc
cmp
jecxz
stos
and
jmp
iret
in
push
in
addr16
je
sar
mov
sbb
dec
xchg
loop
cmps
ficom
xor
push
mov
xchg
mov
sub
loopne
sbb
test
popa
sti
inc
leave
push
idiv
jmp
inc
fstp
inc
in
movs
fs
mov
repz
mov
out
ret
inc
data16
inc
test
imul
data16
mov
and
inc
or
mov
fucom
mov
and
xchg
xor
push
jl
lea
daa
leave
mov
test
inc
sub
cmc
enter
dec
or
outs
mov
ret
mov
jbe
or
sub
arpl
or
mov
loop
mov
leave
mov
aas
in
dec
sbb
cwde
add
test
neg
adc
pop
das
retf
cli
add
aas
outs
xchg
jp
loop
inc
cwde
aam
(bad)
jno
shl
popf
jecxz
popf
or
bound
push
ins
xor
mov
shr
pusha
stc
in
shl
mov
into
mov
mov
(bad)
mov
dec
daa
xchg
jnp
inc
ds
hlt
jmp
in
add
mov
adc
add
xor
cmp
xlat
pusha
inc
les
mov
jg
shr
bound
inc
mov
push
sbb
push
retf
int
icebp
clc
push
ins
push
bnd
jge
xchg
lock
push
(bad)
out
loop
iret
sbb
inc
push
jg
lock
inc
xchg
jg
test
shr
cmp
and
repnz
ret
xchg
pop
loop
shr
mov
fnstcw
sbb
pop
inc
loope
adc
(bad)
loopne
and
cmp
retf
push
fistp
shr
in
mov
xchg
cdq
add
inc
push
leave
pop
ja
fbld
and
xchg
fisub
lods
add
sbb
shr
xchg
pop
ja
dec
or
bound
mov
mov
cmp
leave
mov
out
movs
or
outs
xor
out
pop
sbb
pop
int
pop
(bad)
fld
xchg
push
mov
sub
adc
enter
pop
add
cdq
pop
cmp
jge
test
xchg
pop
cld
sbb
inc
aad
cs
test
adc
rcl
dec
add
jg
test
push
mov
mov
call
jp
shl
pop
outs
(bad)
mov
jmp
gs
sub
sbb
jp
lea
sbb
outs
push
cmp
lods
es
fwait
mov
lahf
int
pop
nop
ins
xchg
mov
ss
ja
arpl
jg
sub
push
xor
(bad)
sbb
push
inc
loop
add
and
inc
jl
xchg
(bad)
cmc
jecxz
push
and
xchg
into
enter
mov
lahf
or
sbb
fucomi
dec
xor
pop
cwde
stos
movntq
dec
inc
test
cmp
push
xor
out
nop
push
pop
mov
cld
ins
int3
sub
dec
pop
sub
dec
scas
test
mov
xchg
mov
xchg
sub
cmps
out
fiadd
arpl
jle
div
lds
cmps
shr
cld
jge
pushf
sti
rol
push
mov
xchg
fs
mov
cs
inc
push
test
cwde
stos
inc
hlt
clc
cdq
jmp
mov
stos
xchg
or
jae
popf
scas
cmp
jae
push
sti
cmps
sub
cmp
ja
or
sahf
xor
xor
mov
sbb
sbb
aas
push
movs
repz
jnp
cmp
cmp
out
dec
enter
loope
cmp
add
mov
mov
or
xchg
fwait
dec
sub
call
popa
dec
xchg
mov
test
mov
inc
std
sub
dec
jl
or
xlat
mov
sub
fild
mov
ds
mov
arpl
mov
cmps
repz
jno
push
sbb
sar
pop
inc
push
or
ss
pop
mov
ja
leave
xor
mov
call
cmp
xor
popf
inc
mov
mov
mov
retf
fs
lods
sbb
mov
cmp
push
std
pusha
das
or
inc
imul
imul
neg
sub
inc
xor
pop
dec
mov
push
or
call
xor
add
popa
push
add
rcr
mov
add
daa
fadd
(bad)
push
mov
cdq
mov
test
sbb
push
sar
add
in
push
mov
sbb
jns
add
ins
push
not
xor
rol
rol
mov
lahf
add
sar
fdivr
loopne
xchg
xor
call
push
push
mov
leave
adc
mov
jge
mov
push
retf
xor
(bad)
cmp
enter
cwde
fcom
dec
pusha
fs
inc
mov
sbb
rol
sub
inc
mov
scas
das
iret
mov
sub
and
mov
cmc
add
push
icebp
mov
ror
cmp
jecxz
jg
jns
lahf
pop
cmp
fst
(bad)
push
cs
test
outs
mov
xor
push
sub
lock
cmp
ja
popf
sub
pop
jo
pop
cwde
xor
cmovno
cs
pop
in
lods
inc
bound
je
push
cmp
sub
out
sub
cmps
mov
dec
inc
scas
add
push
add
mov
loopne
stos
js
pop
sbb
test
mov
ins
cmp
movs
adc
lea
stos
push
mov
clc
lods
dec
shl
repz
daa
pop
jle
mov
xchg
lods
test
jp
dec
je
std
pop
pop
fcom
pop
sti
xchg
pop
lods
retf
test
imul
bound
or
push
xor
jle
xchg
test
mov
pop
fst
out
cwde
rcl
jle
sbb
popf
pop
cmc
mov
lods
sti
ss
cmp
cmp
push
jp
movs
mov
sbb
ret
dec
inc
push
jbe
mov
push
xchg
scas
cmps
jle
in
xchg
bound
jp
jne
push
xchg
sub
into
inc
add
das
push
mov
cdq
mov
fcom
jo
push
jmp
dec
jae
aaa
fcomp
(bad)
fist
xchg
sahf
dec
mov
and
mov
lds
mov
dec
xchg
(bad)
into
ins
or
movs
xor
outs
retf
stos
je
jbe
mov
cwde
ins
xchg
jno
test
test
in
mov
nop
icebp
xchg
inc
mov
aaa
cmc
mov
push
add
hlt
push
sub
or
lds
inc
sbb
cmc
cmp
int3
and
xchg
ret
inc
lahf
push
cwde
add
cmp
enter
sbb
int
ss
jmp
int
jns
sub
xor
fsubr
ins
ins
sub
sbb
addr16
mov
sub
xchg
test
pop
lea
daa
nop
cmp
sahf
xchg
push
cmc
iret
push
cli
add
and
mov
aad
(bad)
push
hlt
xchg
dec
mov
fdivr
jae
mov
cmps
dec
add
arpl
sub
popa
sbb
pop
or
xchg
(bad)
xor
push
add
div
inc
add
inc
mov
int
pop
ret
shl
sub
int
test
pushf
sbb
mov
repz
stos
jne
mov
dec
cmp
fimul
mov
inc
(bad)
sti
in
xchg
inc
xor
cmp
int
pop
xor
xchg
js
mov
push
jo
(bad)
fistp
in
daa
xor
lock
dec
add
clc
sbb
and
cmps
jmp
ins
scas
sbb
(bad)
enter
clc
dec
fdivr
psrad
loop
jge
popf
xor
inc
shl
xlat
lock
pop
test
mov
add
mov
dec
es
call
mov
adc
movs
xchg
push
mov
jbe
bound
adc
and
lods
push
xor
xchg
movs
je
popfw
outs
aam
cmp
sti
sti
fstp
add
sahf
adc
mov
or
inc
pop
rol
(bad)
popfw
loope
test
stc
gs
ins
mov
test
test
imul
jle
mov
push
aaa
or
inc
add
jne
pushf
imul
or
inc
jle
mov
xchg
dec
xor
push
ds
jb
popa
sub
mov
push
scas
cli
lods
(bad)
push
cmps
test
std
sub
jno
push
xlat
retf
pushf
jnp
or
mov
xor
cmp
repz
(bad)
bound
pop
je
sub
or
adc
nop
jno
int
add
pop
push
jne
jmp
pop
mov
mov
xchg
sub
aad
add
or
pop
xchg
push
mov
repnz
(bad)
mov
imul
lods
sbb
sbb
add
cmp
dec
mov
mov
push
jne
xchg
mov
pusha
cdq
add
cmc
jl
jo
cmc
mov
imul
test
cld
std
pop
jnp
inc
xchg
sbb
loop
or
in
mov
mov
dec
ins
ins
lock
xchg
dec
outs
popa
xchg
sbb
jecxz
test
(bad)
call
mov
jp
popa
xor
scas
int
leave
into
ret
push
xchg
mov
sub
(bad)
jbe
adc
in
cld
dec
ffreep
das
mov
push
les
inc
int3
sub
xchg
sub
mov
lock
ficom
inc
xor
xchg
xor
xor
adc
lock
int3
sbb
sahf
inc
xlat
pushf
fwait
mov
pop
xchg
ja
sbb
jg
and
add
bound
js
and
mov
pop
or
cmp
mov
xchg
mov
push
sbb
dec
jle
stc
lock
jp
sti
mov
xor
das
popa
les
out
pand
enter
push
fwait
adc
xchg
dec
inc
sbb
scas
inc
jle
lods
rep
scas
nop
jmp
pop
cli
xor
dec
ror
in
add
jge
mov
jbe
add
imul
push
adc
mov
xchg
mov
sub
and
repz
cmp
jmp
pop
or
fsub
push
ret
fdivp
ss
std
push
daa
scas
loopne
jb
jo
enter
hlt
(bad)
lods
test
pop
adc
pop
mov
or
into
pop
pop
jnp
test
mov
mov
cmp
or
cmps
mov
cmp
xchg
sub
dec
stos
into
pop
pop
or
adc
mov
mov
inc
mov
out
adc
cld
inc
push
mov
jbe
fstp
inc
pop
leave
hlt
and
out
jnp
push
ins
adc
xor
mov
jb
inc
jmp
mov
sbb
sub
jae
mov
fwait
bound
mov
and
iret
push
fwait
out
neg
cmp
std
int
mov
or
jecxz
adc
loope
movs
jle
pop
and
cmp
or
or
jmp
pop
(bad)
dec
jns
popf
add
movs
add
pop
jns
data16
clc
and
xrelease
and
push
add
cdq
sti
leave
aam
test
pop
test
neg
inc
xchg
lods
pusha
mov
lock
add
xchg
test
imul
push
xor
cdq
in
ins
test
stos
xchg
sar
pushf
mov
aas
add
add
cwde
(bad)
loope
pop
pop
xchg
add
sar
repnz
lods
fnstsw
int
dec
mov
mov
jl
or
cmc
out
push
mov
ret
int
sbb
cmps
and
xor
pop
inc
popa
in
add
jbe
cmp
xchg
and
mov
fdiv
sbb
mov
inc
call
and
arpl
loopne
mov
push
xchg
sbb
pop
fs
mov
les
mov
sub
pushf
fs
mov
div
and
lahf
push
or
inc
les
jmp
mov
fcomp
adc
mov
scas
push
movs
mov
mov
cs
(bad)
lds
lock
je
ja
sbb
lahf
jmp
mov
ret
pop
(bad)
pop
pop
push
mov
ins
dec
icebp
dec
int3
cwde
add
push
push
cwde
ins
fdivr
loope
inc
stos
test
pop
scas
inc
icebp
jnp
adc
and
add
(bad)
shl
call
pop
mov
or
ins
pop
shl
fs
inc
cmp
mov
shl
mov
mov
add
ins
into
dec
sub
rol
mov
and
sbb
retf
mov
adc
mov
imul
ins
inc
push
int
xchg
lea
mov
pop
aad
or
jg
mov
sub
hlt
inc
add
mov
das
jmp
icebp
pushf
sar
pop
or
ins
sub
jmp
mov
sub
cmp
push
mov
adc
ins
or
xlat
dec
pop
inc
aam
jmp
js
(bad)
shl
mov
push
popf
inc
push
pop
popf
pop
jmp
es
add
out
inc
mov
fistp
pusha
lea
leave
add
cli
fcmovb
inc
sbb
and
cmc
or
inc
xor
dec
mov
loop
ss
shl
jns
push
cwde
or
rol
test
sub
ss
dec
and
repz
push
sub
rcr
lds
call
sbb
ja
jo
mov
sub
repnz
and
dec
stos
aad
sahf
aaa
aas
lods
or
cwde
stos
and
imul
and
test
cmp
dec
xor
sub
jo
xchg
sbb
pop
daa
or
xor
push
call
jmp
mov
sub
mov
movs
popf
popf
dec
mov
nop
repnz
xlat
bound
jbe
pop
mov
push
xchg
sub
mov
pop
sbb
jge
inc
push
push
jno
lods
fs
rol
fwait
(bad)
aas
push
xlat
mov
arpl
lea
popf
and
arpl
loopne
aam
loopne
mov
or
loop
into
(bad)
mov
push
mov
movs
into
xor
lea
mov
jmp
mov
in
pusha
loopne
fs
push
shl
push
xchg
mov
sar
ss
push
les
(bad)
leave
xchg
ds
pop
add
jns
(bad)
fs
jge
imul
and
rep
addr16
ficomp
popf
enter
adc
or
fwait
inc
inc
inc
hlt
mov
in
icebp
in
push
jecxz
call
dec
inc
jno
dec
push
cwde
sub
mov
and
cmps
mov
retf
hlt
or
aas
cli
lds
fidivr
stos
cld
les
cld
shl
lock
pusha
xlat
aas
dec
xchg
in
aaa
mov
cli
sub
imul
pop
xchg
and
ret
iret
mov
les
mov
js
sahf
test
fdivr
mov
xlat
stos
cmp
jo
mov
adc
sbb
mov
out
xor
in
cdq
ffree
mov
adc
stos
mov
pop
push
fld
cmp
sub
mov
mov
push
rol
mov
dec
mov
call
inc
push
inc
inc
fldcw
call
pop
pop
mov
scas
cmps
add
dec
mov
jl
fstp
repnz
xchg
dec
icebp
aam
cmp
push
xlat
or
cmp
pop
xor
pop
xchg
mov
test
xchg
mov
lds
call
sbb
jp
mov
fmulp
dec
in
(bad)
pop
and
and
das
lods
mov
cmc
imul
sahf
outs
imul
ja
mov
pusha
pop
push
imul
repz
dec
leave
mov
xor
and
dec
adc
jns
push
sub
push
xchg
jg
ja
mov
ins
test
aam
or
retf
lea
push
inc
fist
pop
xchg
neg
pusha
clc
or
sub
mov
cmp
fidiv
icebp
jle
aaa
xchg
push
mov
call
cs
test
out
das
and
lds
pop
rcl
dec
and
int3
fs
mul
dec
daa
inc
retf
inc
xchg
xchg
es
push
out
jmp
mov
cmp
movs
pop
cdq
mov
(bad)
adc
je
stos
pop
add
std
add
test
es
imul
xchg
cmp
sbb
inc
mov
cmp
add
sbb
cmps
nop
jnp
sar
jp
xchg
nop
sbb
movs
stos
(bad)
mov
mov
adc
mov
shl
repnz
inc
push
xchg
and
pusha
add
inc
clc
icebp
icebp
out
inc
in
shr
sub
add
mov
mov
push
cmp
loopne
add
inc
mov
shl
jbe
mov
sbb
and
mov
xor
pop
push
and
mov
xchg
dec
ins
jno
push
leave
mov
mov
pushf
scas
pop
nop
pop
lea
push
das
(bad)
ins
xchg
in
cmp
cmps
mov
gs
retf
shl
dec
shl
call
pop
hlt
mov
fld
mov
lahf
add
sbb
lds
popf
stos
repz
push
data16
mov
fs
arpl
and
out
adc
xchg
leave
(bad)
jnp
pop
mov
and
mov
push
inc
mov
sub
adc
std
add
inc
mov
and
(bad)
popa
mov
xchg
sub
add
sbb
fisttp
pop
stos
jl
lea
push
mov
pop
cmp
inc
jp
or
mov
nop
inc
add
ins
test
pop
mov
adc
and
retf
in
in
mov
fistp
add
mov
loopne
stos
and
add
jbe
sub
lea
mov
push
sub
pusha
fcom
xor
cli
xchg
pop
(bad)
out
test
stos
sbb
(bad)
fldcw
cdq
or
loope
cmps
push
and
ficomp
inc
out
imul
dec
adc
enter
dec
pushf
aam
aad
cld
sbb
mov
xlat
push
add
jo
jecxz
and
call
push
sub
ret
mov
das
adc
movs
add
jb
pushf
int
add
adc
inc
add
xor
clc
fbld
dec
iret
adc
cmp
xchg
es
fwait
das
(bad)
lahf
cli
aam
inc
sbb
popf
mov
jp
add
mov
push
mov
dec
cld
xor
out
enter
aaa
dec
add
push
sub
out
mov
ja
lds
fist
daa
cmp
xchg
sub
mov
nop
arpl
retf
mov
sbb
ins
clc
or
in
hlt
aad
(bad)
dec
rcr
push
aad
fisttp
cmps
out
adc
sti
fwait
mov
or
pop
or
fldcw
add
inc
ds
sti
repnz
fmul
in
in
sti
mov
jg
pusha
mov
mov
mov
or
fisttp
dec
sub
sbb
mov
mov
and
mov
mov
xor
(bad)
cmp
or
cwde
pop
push
imul
mov
(bad)
sub
xor
jbe
dec
test
pusha
scas
xchg
shl
iret
cmp
(bad)
imul
or
inc
sbb
out
push
cmps
xor
jo
cmpxchg
sub
cmp
mov
add
loopne
jle
loope
test
dec
pop
call
fs
jle
fdivr
out
in
adc
jmp
pop
xchg
lea
xchg
jnp
add
sub
lods
xchg
pop
(bad)
xlat
popa
jg
(bad)
jmp
scas
cld
pop
add
mov
sub
pusha
cli
or
sub
cli
lea
xchg
cmp
and
retf
pop
data16
and
pop
aam
adc
xchg
out
jno
stos
dec
stos
add
push
bound
jg
sub
mov
retf
jno
div
add
lock
push
mov
outs
scas
add
or
lods
daa
out
enter
out
iret
aad
scas
ds
push
out
push
push
sahf
jne
cmp
mov
and
int
xchg
(bad)
sar
test
add
mov
sar
ins
stos
inc
lds
xor
mov
jno
js
pushf
jecxz
or
stos
test
sub
xchg
in
push
or
sub
dec
xor
or
jo
dec
jg
mov
cdq
jae
mov
fild
mov
clc
dec
push
dec
sahf
cmp
add
lods
cdq
add
push
je
mov
or
xchg
push
pop
arpl
stos
loope
cmc
xor
mov
imul
pop
test
jnp
(bad)
stc
in
and
dec
or
xchg
pop
addr16
mov
add
mov
jns
(bad)
mov
and
push
push
lahf
cmp
mov
mov
retf
clc
inc
je
das
fidivr
(bad)
cwde
scas
jns
jmp
jns
push
outs
dec
and
sub
jb
dec
jo
(bad)
inc
loope
call
jmp
inc
or
push
in
outs
mov
out
inc
push
outs
xchg
sub
dec
jl
(bad)
icebp
test
inc
pop
fimul
adc
retf
xchg
into
xlat
or
mov
xor
mov
xor
push
adc
(bad)
pop
or
cmp
leave
test
push
push
ficomp
or
push
or
dec
ds
push
ss
mov
and
call
push
gs
movs
aaa
lds
les
jp
push
int
push
xchg
xchg
jnp
cwde
test
or
and
sub
xor
enter
mov
xor
xor
ret
enter
dec
popfw
xchg
and
loop
sbb
dec
call
or
loop
push
imul
and
mov
jp
mov
lods
mov
mov
stc
ins
jno
dec
in
lds
sahf
scas
mov
mov
out
pusha
in
sahf
out
fsub
mov
mov
pushf
fisub
lods
xor
jbe
imul
cmp
stc
add
aas
mov
neg
stos
add
lods
pop
fwait
js
js
(bad)
push
mov
pop
stos
add
mov
or
jae
mov
pop
push
das
sar
or
and
hlt
push
jo
mov
bound
inc
cmp
cmp
sub
adc
pop
lds
mov
lock
shl
fsubr
add
mov
in
out
(bad)
adc
pop
arpl
nop
pop
jp
xchg
ficomp
outs
pop
sub
jno
adc
mov
adc
mov
mov
xchg
sbb
mov
jns
xchg
fistp
fs
enter
jecxz
outs
hlt
mov
add
loope
aaa
lea
add
ins
push
push
mov
mov
dec
mov
and
rol
ins
sub
(bad)
lahf
mov
icebp
push
xchg
cmp
sub
into
jmp
push
xor
and
out
or
or
(bad)
dec
nop/reserved
cmp
mov
jp
mov
es
std
pop
push
jb
or
rol
test
mov
xor
push
inc
or
sti
jae
inc
add
push
mov
lods
cmp
pop
ins
pop
clc
outs
cmc
push
or
shl
jb
jbe
out
mov
xor
sbb
pop
add
scas
shl
mov
sub
cli
inc
bound
sti
cmp
ret
lock
jle
sub
inc
aaa
test
(bad)
xchg
or
and
movs
push
rol
push
fadd
leave
fimul
mov
mov
clc
popf
cmps
(bad)
cld
inc
ss
bound
or
dec
jecxz
push
sbb
shl
enter
or
mov
mul
sar
loop
sbb
or
mov
movs
sbb
mov
addr16
lods
int3
dec
jb
xor
lahf
(bad)
aaa
outs
or
mov
out
push
rol
mov
jecxz
das
pushf
xor
xchg
hlt
outs
loope
retf
inc
jb
xchg
mov
push
repz
bound
(bad)
sbb
pop
pop
movs
cmps
popf
(bad)
adc
test
fild
jmp
push
test
push
loopne
in
cwde
sub
fist
xchg
cmp
push
scas
add
sub
rcl
xor
sti
aam
xor
dec
loope
push
adc
iret
scas
push
push
inc
loope
dec
mov
pop
cmp
adc
das
or
out
push
iret
push
jns
retf
sar
xchg
pop
lahf
add
push
popa
imul
call
mov
aas
test
xor
iret
add
mov
sbb
mov
add
and
mov
out
ret
sub
(bad)
out
ds
mov
and
cmp
cmc
cld
les
dec
ret
in
loope
ret
out
jne
cmc
pushf
call
aas
repz
mov
in
mov
loop
sahf
ficomp
xor
bound
fstp
loope
aam
(bad)
out
sbb
push
mov
in
movs
xor
stc
pop
mov
loopne
scas
(bad)
or
rcr
fwait
ds
aad
sti
ficom
fld
push
out
cmp
scas
dec
add
das
je
scas
lods
mov
idiv
js
inc
xchg
mov
xchg
test
aas
test
lea
out
call
pop
xchg
sbb
push
jge
dec
and
ja
retf
inc
pop
call
loope
stos
mov
dec
inc
je
xor
sub
add
xchg
std
push
xchg
pop
push
pop
and
out
mov
mov
test
mov
add
add
adc
xchg
cs
sub
fcmovbe
push
inc
mov
nop
bound
pushf
test
sbb
jnp
ret
push
fisubr
cmc
cmp
push
push
sub
pusha
pop
mov
(bad)
adc
mov
add
int3
fisttp
or
jb
test
push
and
repnz
out
mov
sub
xor
jno
mov
in
mov
mov
stos
pop
or
and
(bad)
outs
sbb
adc
cs
and
int
inc
popf
jge
(bad)
pop
mov
push
clc
repnz
js
pop
aad
jl
std
stc
fld
sub
mov
xor
add
xor
cli
int3
popa
cdq
aaa
add
sbb
mov
or
add
inc
js
push
xor
pop
sub
inc
dec
or
pop
sub
std
push
mov
inc
sti
mov
sbb
sahf
pop
dec
mov
and
pop
sub
fistp
and
test
aad
into
fdiv
mov
sbb
jo
mov
test
sub
(bad)
out
or
pusha
dec
or
mov
imul
inc
mov
mov
or
mov
ret
test
lods
hlt
xor
and
mov
cli
ja
cmpxchg
enter
sub
stc
sbb
in
xor
mov
xchg
adc
dec
sub
and
(bad)
pop
addr16
(bad)
sbb
inc
sub
into
sbb
and
xchg
add
rol
mov
call
jmp
push
xor
and
dec
mov
loopne
mov
adc
inc
xor
sub
jge
lods
jl
cmp
iret
xchg
retf
fidiv
mov
mov
pop
shl
sbb
dec
int3
xchg
jmp
push
test
outs
dec
(bad)
sti
inc
push
hlt
mov
push
pop
adc
inc
jo
ficom
sub
cmp
ins
pop
adc
mov
mov
dec
push
sbb
mov
inc
xor
cmc
loope
rcr
aaa
fcomp
bound
cdq
dec
outs
cmp
push
mov
stc
adc
sub
out
enter
mov
push
push
inc
lahf
push
pop
iret
inc
jbe
dec
xor
mov
int3
stos
push
jmp
inc
jg
push
jmp
fiadd
push
ja
test
sti
test
mov
jae
arpl
sbb
data16
cli
cdq
xor
ret
iret
bound
jbe
sbb
(bad)
sub
push
fcmovb
repnz
das
leave
pop
push
mov
js
mov
aas
rcl
(bad)
call
jge
sub
int
cli
in
and
and
mov
xchg
inc
(bad)
or
cli
sar
jecxz
ss
gs
loop
loope
in
scas
mov
or
sub
lock
jnp
xchg
adc
inc
jnp
scas
call
test
jae
adc
or
xchg
jmp
push
push
sub
inc
aas
aaa
stos
xchg
and
out
pop
push
jo
mov
mov
test
aaa
mov
sbb
cmc
jns
sub
int3
(bad)
shl
cmp
or
jecxz
cwde
and
xor
jp
fwait
xor
mov
inc
(bad)
enter
inc
sub
or
lea
popa
pop
rcl
jns
inc
push
cmp
arpl
xor
sub
cmp
in
xchg
mov
ins
cmc
daa
jmp
and
push
mov
sbb
test
fstp
bound
leave
fld
jmp
xchg
out
adc
loopne
imul
and
pop
and
idiv
xchg
aad
dec
xchg
popf
pop
mov
push
jge
sub
stos
hlt
inc
or
clc
and
push
push
mov
enter
sbb
lods
inc
jnp
xor
lea
ins
add
sbb
fisubr
mov
popa
sbb
xchg
movs
mov
mov
daa
lock
dec
cs
ror
test
xchg
adc
cmps
gs
lods
pop
ja
fmulp
pop
jl
and
mov
pop
xchg
xor
push
dec
mov
in
push
or
inc
jg
ret
cmp
movs
sar
cmp
pop
cmp
add
jbe
shr
in
shr
or
mov
pop
(bad)
repz
push
push
popa
xor
(bad)
mov
lock
inc
dec
aas
into
sar
inc
push
lock
mov
popa
repz
retf
nop
mov
inc
jl
jg
imul
rcr
fwait
dec
jp
xchg
mov
jecxz
or
ret
cmps
inc
retf
into
bound
xchg
data16
push
popa
pop
mov
pop
push
xchg
icebp
fiadd
mov
push
sub
inc
or
rol
icebp
fistp
in
adc
xchg
ja
imul
add
call
rol
bnd
inc
daa
popa
fwait
or
hlt
test
dec
jnp
xor
loopne
dec
jo
(bad)
mov
(bad)
dec
or
les
jl
fcom
jl
jecxz
ja
dec
and
inc
and
jnp
retf
mov
in
xchg
es
cli
mov
mov
js
dec
dec
adc
mov
jmp
fwait
push
outs
sti
fs
lock
add
mov
inc
enter
pop
cmp
dec
sub
dec
mov
bnd
scas
loop
pop
loope
push
sti
lods
push
repnz
xor
(bad)
test
fcom
cs
sbb
inc
mov
popf
add
inc
xchg
mov
pop
std
call
iret
pop
ds
sbb
and
mov
test
sahf
push
jbe
sub
js
(bad)
kortestw
dec
data16
clc
adc
pop
push
xor
pop
sbb
js
jp
movs
scas
outs
mov
sub
scas
pop
xchg
sar
outs
sub
sub
pusha
in
scas
xchg
adc
jae
icebp
imul
lods
and
dec
arpl
xor
dec
int3
jle
cmc
out
cdq
mov
cmps
into
ficom
lahf
scas
cli
xor
(bad)
(bad)
out
inc
stos
daa
and
pop
mov
ins
pop
fisub
sbb
cdq
cmp
(bad)
std
gs
test
sub
sub
enter
(bad)
cmp
pop
xor
es
mov
cmp
rcr
sub
sbb
push
lods
bound
mov
mov
ret
mov
imul
lods
mov
outs
mov
jnp
icebp
mov
pushf
movs
bound
outs
aaa
(bad)
dec
daa
data16
fwait
stc
ss
rsm
pop
xlat
and
loope
(bad)
pop
(bad)
dec
lods
xlat
add
push
out
pusha
jg
jle
add
push
movs
pusha
pop
sub
mov
pop
jg
jg
push
inc
mov
push
mov
pop
dec
push
inc
icebp
or
cdq
push
mov
ficom
sub
inc
arpl
dec
jo
jbe
lods
mov
jne
sub
sub
test
mov
inc
imul
mov
js
sbb
jo
nop
icebp
hlt
(bad)
sbb
adc
mov
mov
or
pop
sub
ror
jp
pop
xor
and
sbb
dec
mov
inc
aad
xor
bound
les
or
fwait
(bad)
cmp
pop
jns
retf
pop
fisttp
add
jg
out
imul
cmp
out
dec
lock
arpl
mov
(bad)
ret
les
rol
enter
das
mov
xchg
adc
sub
xor
xchg
(bad)
sub
adc
push
push
out
pushf
pand
ror
leave
cmp
mov
stos
hlt
mov
mov
inc
cmps
rcr
outs
adc
(bad)
and
scas
mov
push
in
loopne
mov
ficomp
shl
sbb
and
pop
(bad)
jnp
dec
fwait
push
pop
pop
adc
fild
sub
in
int3
or
push
pop
xlat
and
jo
adc
imul
mov
dec
lea
enter
xchg
dec
jne
pop
out
sbb
jns
push
das
push
xor
push
mov
cwde
int
cmp
bound
inc
int3
mov
aas
ret
sbb
lahf
lods
mov
ins
popa
std
pop
pushf
jl
mov
mov
ja
sbb
adc
(bad)
ins
jmp
jnp
cmps
pop
into
mov
push
bound
adc
test
test
loopne
mov
aad
popf
xchg
fild
in
call
lahf
jecxz
push
add
sbb
leave
cmc
jo
pop
stos
push
or
fwait
repz
into
lods
jecxz
pop
pop
pusha
dec
daa
call
rol
sahf
sbb
nop
loopne
push
movs
ins
es
std
mov
popa
fwait
loop
in
mov
push
lds
mov
aas
inc
mov
into
push
outs
inc
xlat
mov
imul
cdq
inc
push
push
mov
adc
test
call
inc
mov
xor
loope
mov
sub
add
in
nop
(bad)
jl
fld
in
int3
sub
mov
cmp
cmps
ins
ret
jo
mov
cld
pop
vcvtpd2dq
ret
je
push
lods
aaa
loopne
lods
addr16
dec
shr
popf
retf
test
xor
inc
and
test
inc
into
jne
dec
shl
addr16
fcomp
inc
sub
retf
sbb
mov
daa
mov
sbb
dec
loop
movs
pop
(bad)
out
or
ja
jmp
mul
mov
int3
mov
add
or
lea
call
in
call
push
les
sub
inc
jo
push
sub
test
sbb
pop
gs
push
das
dec
mov
jne
lods
jb
out
daa
add
xchg
call
jb
push
mov
or
inc
mov
mov
mov
mov
sahf
jmp
cs
imul
mov
mov
int
push
pop
adc
aas
mov
mov
mov
sar
pop
xchg
mov
jno
les
ins
dec
stc
lahf
cmc
mov
xchg
aam
pop
dec
sub
cwde
dec
andps
ret
fld
cmp
adc
mov
mov
ja
mov
data16
mov
xchg
adc
mov
add
or
cmp
aad
jo
dec
and
nop
ficom
mov
or
jbe
bound
cs
sub
rcr
add
icebp
aad
dec
sub
sbb
and
mov
mov
stc
jne
aaa
fcom
out
pushf
mov
ds
mov
push
rol
push
loop
push
(bad)
cmp
fs
cld
call
sbb
pop
es
arpl
in
adc
sub
push
es
mov
ret
pop
in
xor
jl
stc
push
add
imul
xlat
jbe
test
jb
dec
retf
outs
jl
daa
call
xor
pop
stos
adc
sbb
mov
jp
leave
int3
retf
xchg
or
jge
pop
pop
mov
sbb
cli
push
(bad)
mov
mov
popf
inc
std
lods
out
(bad)
pop
fcom
loope
mov
shr
into
popa
mov
fcompp
mov
cmp
inc
icebp
hlt
int
and
xor
sub
inc
call
mov
shr
out
mov
cmp
fsub
inc
in
pop
sbb
scas
lahf
xchg
fwait
rcl
aam
adc
retf
std
sahf
xchg
in
fsubr
cmp
or
loope
push
stos
mov
inc
jmp
fdivr
fucomi
mov
daa
ins
adc
jge
adc
adc
retf
inc
rcr
mov
xchg
sub
and
lea
fsubp
push
ror
mov
xchg
int
push
mov
sbb
cmp
ja
mov
pushf
xchg
imul
outs
repnz
push
or
sub
jmp
jge
loopne
fsubr
(bad)
mov
jecxz
mov
mov
retf
and
jp
mov
xchg
idiv
(bad)
fadd
xor
movs
adc
push
sbb
mov
and
adc
pop
mov
jbe
dec
clc
xor
popf
push
shr
xchg
mov
fisub
mov
icebp
repz
and
adc
fcom
or
fcom
(bad)
mov
repnz
icebp
cmp
mov
cld
dec
or
jle
dec
push
sbb
(bad)
mov
daa
aad
sbb
ret
(bad)
mov
cld
(bad)
popf
jbe
sbb
pop
es
in
and
clc
test
push
fldenv
and
imul
mov
dec
out
mov
and
mov
ret
push
inc
inc
pop
xchg
push
xchg
fild
and
shr
neg
jo
xor
fmul
in
nop
mov
add
xlat
cmc
push
sbb
pop
add
aas
int
dec
and
sbb
xor
loopne
je
xor
out
scas
ret
or
in
push
mov
xchg
fld
cwde
and
fdiv
imul
xchg
stos
sbb
pop
jle
inc
call
adc
lar
rcl
adc
out
mov
mov
das
adc
xchg
pop
inc
and
jl
loop
clc
fs
stc
sub
xor
in
add
and
out
pop
mov
mov
pop
pop
mov
call
mov
(bad)
aad
loop
cld
dec
mov
dec
or
inc
sbb
aam
lahf
js
push
fsubr
mov
bound
mov
pop
dec
out
inc
rcl
push
jecxz
outs
std
mov
add
popf
push
sbb
xchg
inc
cli
cmp
mov
jmp
cmp
cli
jecxz
popa
loope
inc
outs
mov
jmp
cmp
test
pop
push
push
outs
jg
push
(bad)
jmp
fwait
fs
xchg
cwde
fistp
std
xchg
push
push
addr16
sar
out
int3
fistp
sbb
lds
(bad)
jne
jp
int3
popaw
arpl
mov
mov
adc
push
loopne
outs
add
out
xor
add
push
inc
in
aad
movs
out
and
retf
dec
aad
ja
mov
sbb
mov
ret
loop
(bad)
call
fwait
out
test
sar
mov
data16
and
test
cwde
scas
or
jl
add
add
cmp
shl
rcl
mov
inc
xor
jmp
sahf
movs
and
jmp
mov
jmp
jne
sar
arpl
pop
fcomp
add
xchg
cmps
dec
inc
inc
daa
push
cmp
sub
sub
pop
adc
popa
jmp
xchg
sbb
xchg
(bad)
mov
in
imul
adc
(bad)
add
popf
outs
add
retf
sbb
or
sub
into
rcr
jmp
xor
push
retf
mov
(bad)
push
mov
pop
mov
dec
fisttp
push
aas
mov
xchg
mov
mov
not
out
sbb
cmp
jg
pop
nop
mov
outs
xchg
dec
jmp
mov
mov
jp
popf
repz
jmp
xchg
mov
inc
xchg
jmp
lods
and
sub
imul
jl
lods
fsubr
shl
into
ins
call
shl
jl
cli
sti
xchg
inc
clc
xchg
or
les
ret
clc
test
pop
pop
mov
cmps
sti
popa
imul
inc
ret
shr
ins
xchg
mov
sar
pop
shl
js
sbb
mov
(bad)
fsubr
leave
(bad)
jbe
add
fisttp
push
pop
dec
popa
or
ds
cmps
lods
adc
xchg
sahf
iret
pop
mov
pusha
gs
or
js
ret
mov
(bad)
jl
nop
mov
imul
aam
mov
jns
int
lahf
shr
sbb
or
mov
pop
jns
sahf
mov
pop
test
(bad)
push
inc
dec
xchg
movzx
inc
ret
cmp
rcl
inc
jb
fsubp
pop
push
mov
stos
inc
je
mov
jg
mov
push
mov
sbb
xor
add
sub
or
cmp
jae
pminub
push
push
icebp
xor
push
dec
mov
retf
iret
pcmpeqb
imul
ss
or
js
imul
sbb
jo
pop
mov
mov
add
xchg
ficom
jl
ret
push
test
es
scas
pop
jg
jb
adc
pop
push
cwde
enter
jecxz
nop
ds
retf
mov
out
movs
(bad)
or
push
dec
loope
push
in
add
movs
inc
cmp
in
popa
les
push
push
xlat
sub
mov
sub
aaa
xlat
pop
(bad)
mov
dec
popa
pop
sbb
jne
mov
adc
clc
scas
push
fsub
int
lea
jnp
mov
xor
cdq
inc
scas
push
idiv
inc
data16
cmp
pushf
sbb
adc
loope
push
pop
hlt
das
stc
or
pushf
shr
out
out
and
jno
mov
cmp
pop
enter
mov
push
je
out
(bad)
aas
dec
lahf
or
das
int
mov
inc
loopne
mov
ret
call
jbe
cli
inc
(bad)
sub
dec
das
push
pusha
in
jl
mov
jns
jmp
cmps
mov
sub
sub
and
sbb
test
or
int
cmps
rol
ficom
sahf
(bad)
shl
mov
and
je
es
jl
xchg
fwait
sbb
cmp
jp
sub
mov
fdiv
daa
daa
scas
bound
arpl
rol
sbb
test
mov
cld
pop
scas
sti
or
jmp
sub
sub
mov
es
clc
loope
inc
jmp
rcl
dec
ins
fstp
dec
jno
nop
sahf
aad
stos
mov
cmc
dec
fs
dec
rcr
pop
mov
imul
jp
aad
das
mov
ret
stos
add
iret
add
inc
xchg
(bad)
and
(bad)
mov
aad
jp
and
or
pop
or
cmp
fdiv
mov
aad
push
out
in
mov
and
and
cdq
jl
jne
push
int3
ja
cmp
mov
fild
sar
cmp
jno
or
sti
add
xor
xchg
aas
xor
loopne
shr
test
sub
ja
aaa
add
fwait
dec
mov
sahf
pop
icebp
mov
into
dec
popa
add
(bad)
(bad)
pusha
lea
pop
fisubr
cdq
scas
and
loopne
push
sbb
jmp
jle
dec
dec
ins
ja
out
es
repz
mov
(bad)
xchg
lock
mov
dec
sbb
popf
fstp
cmc
mov
add
mov
xor
cmc
push
push
jge
retf
push
int
leave
stos
sbb
xor
pop
lahf
add
mov
sbb
cmp
jmp
and
cmp
mov
popa
cli
and
aad
mov
push
sbb
ds
mov
push
mov
movs
sar
in
daa
xchg
gs
mov
stos
(bad)
fptan
punpckldq
or
xor
mov
dec
nop
xchg
imul
jb
cwde
mov
xor
jb
out
xchg
inc
and
ins
retf
jge
mov
mov
(bad)
fnstenv
inc
(bad)
cmp
push
push
adc
mov
pop
sbb
mov
inc
lea
cld
popa
lahf
mov
or
lea
rcr
(bad)
icebp
dec
xchg
das
xor
or
xchg
xlat
jbe
pop
movs
xchg
cdq
test
xchg
call
xor
(bad)
call
rcl
add
adc
fnsave
shl
lods
push
dec
push
add
xor
or
sbb
xchg
xchg
or
sbb
sub
test
mov
add
sub
cmc
rcr
jne
fcomp
pop
outs
push
test
(bad)
xchg
mov
cmp
sub
jge
jnp
sub
iret
and
mov
cs
out
frstor
and
int
cdq
fadd
sbb
mov
vmovaps
fs
adc
inc
xlat
inc
mov
sbb
xor
sti
jo
or
sbb
sbb
fist
lea
ins
rcr
jnp
loopne
in
enter
adc
and
js
adc
inc
lea
jae
in
bound
adc
xchg
mov
in
mov
push
sub
inc
mov
dec
out
add
mov
mul
lock
ins
pop
pop
add
mov
pop
mov
pop
std
sbb
aas
xchg
mov
jnp
push
xchg
ins
arpl
das
sub
sub
and
aaa
std
cmp
fldcw
call
xchg
mov
sbb
adc
aad
push
inc
and
cmp
sbb
push
pop
fistp
out
sbb
pop
popa
(bad)
dec
cwde
aas
(bad)
rcr
inc
pop
rcl
cmp
scas
sub
(bad)
sub
fwait
cmp
mov
or
xlat
pop
cmps
dec
jg
and
jb
mov
inc
ret
inc
mov
call
iret
pushf
sbb
repz
mov
adc
retf
ffree
inc
gs
lods
xchg
mov
aam
sar
inc
sbb
dec
cs
icebp
in
fst
add
push
add
or
daa
iret
add
and
out
sbb
adc
ja
xchg
pop
sub
das
mov
fcmovnu
xor
dec
movs
or
mul
mov
int3
cmp
push
aam
out
iret
pop
pop
and
sub
fisubr
jno
mov
stc
cmp
out
dec
sbb
scas
out
sbb
and
or
sti
adc
cmps
and
add
movs
pop
xchg
mov
xlat
repnz
in
das
cmp
mov
fisttp
mov
xchg
nop
cmc
mov
mov
in
aam
mov
retf
test
rcr
lock
mov
add
rcr
pushf
sbb
add
mov
gs
push
sub
outs
stc
xor
out
jg
je
std
fstp
sar
pop
popa
sub
xchg
popa
inc
xchg
push
repnz
gs
ins
dec
mov
loop
xchg
inc
test
mov
es
stos
and
fild
inc
push
inc
cld
fnstsw
xchg
mov
aad
push
mov
dec
or
rcl
call
jecxz
es
jbe
je
scas
add
popf
out
and
mov
adc
add
js
add
mov
mov
inc
ins
mov
(bad)
and
shl
ret
cli
jmp
shl
mov
xchg
cs
mov
daa
jge
cmps
(bad)
sbb
mov
out
xlat
cmp
sub
fcmovne
jg
cmp
out
sub
in
test
xchg
jno
popf
or
or
popa
arpl
ja
jns
test
and
mov
pop
movs
scas
pop
mov
xor
mov
xor
movs
stos
push
ds
repz
repnz
fcom
mov
and
clc
daa
push
pop
dec
dec
test
jne
add
sbb
push
inc
cld
div
aad
xor
lods
(bad)
in
xor
jmp
add
push
js
je
dec
sbb
scas
or
add
scas
lock
shl
mov
pop
shl
js
and
push
dec
iret
mov
add
in
inc
movs
(bad)
std
scas
or
pop
add
dec
add
inc
adc
cmp
enter
pushf
adc
adc
int3
retf
js
jo
jge
test
mov
jge
and
imul
push
cmp
push
push
addr16
sbb
mov
adc
inc
iret
mov
pop
bnd
shr
sbb
jmp
xchg
(bad)
test
aas
and
inc
add
test
jmp
imul
cwde
lods
push
cs
vpxor
aam
in
or
mul
int3
ret
aaa
iret
sub
mov
rcl
or
movs
adc
outs
mov
jae
dec
in
jmp
mov
(bad)
fist
mov
jp
dec
push
mov
pop
loop
push
pop
or
clc
jns
pop
xor
leave
(bad)
and
shr
sub
jae
push
mov
xor
pop
fistp
jnp
cmps
(bad)
push
or
jne
push
sbb
jg
push
lods
xchg
xor
pop
int
inc
cvtdq2ps
add
test
call
mov
xor
aad
xor
shr
imul
mov
pushf
xlat
jno
pop
in
jmp
pushf
aad
or
sahf
and
outs
add
cmps
aas
mov
push
ins
and
test
or
push
rol
test
add
clc
imul
xor
rol
or
cs
mov
mov
es
cmc
rcr
cli
test
push
or
and
(bad)
jbe
sub
into
mov
jmp
and
scas
outs
adc
push
sub
arpl
add
jmp
aaa
xor
pop
mov
mov
xor
xchg
rcr
aad
push
daa
sahf
inc
test
enter
mov
popa
scas
prefetch
sbb
inc
lahf
daa
data16
loopne
in
push
push
push
cmp
adc
lods
sar
shl
ins
call
cmp
hlt
mov
dec
pop
dec
mov
cdq
pusha
xchg
stos
cmp
lea
add
aam
mov
push
pushf
inc
push
in
fld
mov
jmp
inc
cs
mov
dec
movs
lea
sub
xchg
dec
xchg
sub
xor
add
jne
push
sub
jbe
aas
imul
mov
push
sub
fcmovne
mov
loopne
shl
xor
mov
mov
nop
mov
add
movs
inc
xchg
push
push
mov
in
loopne
mov
fcom
sbb
or
jle
fwait
pop
push
ins
pop
jnp
jmp
mov
popf
mov
jmp
mov
push
lods
inc
popa
mov
mov
(bad)
pop
sahf
pushf
das
lea
jg
mov
(bad)
ins
adc
or
das
mov
or
dec
leave
pop
sbb
fist
pop
test
cmp
jmp
ss
loope
push
imul
pushf
pop
repz
push
xlat
pop
pop
mov
xlat
or
mov
and
daa
(bad)
add
cmp
sub
dec
push
inc
sbb
das
ds
or
iret
xor
mov
xchg
lahf
cmc
jbe
pushf
inc
sbb
cwde
int3
(bad)
inc
xchg
adc
or
inc
loopne
and
pop
arpl
or
xor
pop
imul
push
xor
cs
sti
fbld
(bad)
jo
sbb
repnz
inc
jmp
sub
leave
call
(bad)
aas
mov
jecxz
repz
jns
mov
xchg
sbb
mov
push
jnp
test
(bad)
retf
and
pop
mov
out
and
in
push
movs
xchg
cld
shr
mov
imul
or
test
sar
mov
push
jmp
cmp
leave
cmps
push
aaa
ror
xor
add
fs
mov
fisub
pop
stos
sbb
pushf
push
popf
test
mov
adc
jne
test
or
jle
xchg
scas
adc
shr
sbb
bnd
adc
pushf
sub
add
add
mov
(bad)
push
mov
add
adc
aas
mov
pop
ja
cmp
dec
xchg
pusha
pop
inc
aam
cwde
(bad)
(bad)
sti
out
inc
je
sbb
lds
add
lahf
outs
push
out
(bad)
dec
inc
pushf
loop
dec
dec
mov
in
or
mov
push
lds
js
aam
in
cmp
or
adc
jo
loope
inc
les
test
jecxz
dec
inc
in
pusha
cmp
je
sub
dec
aaa
pop
int3
or
arpl
hlt
ins
mov
cmp
pop
(bad)
jmp
xlat
cdq
and
in
cmps
mov
inc
lods
nop
adc
dec
pop
aad
pop
sub
pushf
dec
adc
movs
ret
sbb
cld
mov
pop
push
and
jge
jp
sbb
xchg
xor
test
mov
sub
lods
inc
es
sub
movq
xor
mov
or
adc
movs
loop
pop
(bad)
rcl
or
clc
lods
int3
aad
jb
enter
pop
xchg
rol
lea
int3
jbe
rcr
pop
call
fisttp
aas
nop
jne
call
push
daa
fs
les
mul
cdq
sub
pushf
test
lea
dec
mov
pop
jmp
inc
(bad)
jns
xchg
aaa
fisub
push
mov
mov
pop
scas
adc
dec
cs
iret
scas
repz
js
mov
mov
xchg
fdivr
lahf
push
jnp
clc
push
pusha
fs
push
mov
inc
cmp
(bad)
jge
repnz
ja
cli
pop
mov
js
and
retf
jbe
adc
out
ja
sbb
enter
jnp
fdiv
ficom
xor
fwait
cli
aaa
ds
push
pop
xchg
outs
out
int3
adc
cmp
pop
push
push
std
or
inc
iret
push
loope
sahf
out
cmps
hlt
dec
inc
pop
xchg
les
xor
pusha
xchg
mov
not
mov
mov
jo
xor
pushf
mov
sbb
and
mov
pop
js
dec
ins
dec
mov
jp
push
bound
std
clc
dec
add
mov
in
pop
add
imul
(bad)
cs
sti
sbb
dec
mov
retf
fld
sahf
imul
enter
jge
push
inc
test
pushf
sbb
cmp
pushf
cmc
ds
mov
mov
shl
mov
inc
sub
fwait
cmp
mov
cli
pop
cli
fcomp
add
jecxz
out
ss
aam
cmp
pop
mov
(bad)
xlat
jnp
stos
shl
int3
inc
mov
mov
mov
popa
push
outs
cmc
push
pop
movs
leave
aam
call
dec
mov
stos
xchg
gs
lahf
xchg
inc
fwait
and
inc
shl
mov
and
add
js
popf
loop
mov
xchg
std
in
and
xchg
push
icebp
sub
push
push
cmp
jecxz
adc
push
push
pop
adc
mov
xor
enter
icebp
jmp
retf
pop
inc
xchg
cmp
mov
and
test
call
xor
stos
adc
push
fwait
jge
ror
jecxz
pop
xchg
push
cld
nop
je
or
outs
enter
push
cli
cli
push
int
xor
fisttp
addr16
dec
jl
or
dec
loop
(bad)
out
mov
int
lods
icebp
(bad)
pop
and
sbb
sti
rol
and
call
jg
bound
popa
icebp
xchg
push
xor
test
cwde
inc
mov
(bad)
xchg
mov
lds
lahf
dec
xor
fild
dec
mov
lods
je
push
jg
sti
xor
pop
or
push
add
pop
xor
jmp
dec
outs
cmp
in
fbld
call
stos
in
inc
inc
jne
mov
mov
(bad)
neg
(bad)
sar
add
jecxz
test
add
add
inc
imul
cmp
add
call
out
dec
jne
or
das
push
xchg
(bad)
inc
pop
cmps
mov
dec
or
int3
push
int3
outs
pop
add
sub
into
fwait
call
fcmovu
sub
inc
mov
fcmovu
or
fwait
je
sub
lea
mov
mul
fucomp
add
sbb
mov
push
add
mov
adc
mov
int
push
sar
cmp
stos
ja
dec
stos
or
xor
ret
adc
push
inc
stc
test
fimul
fs
add
cmp
or
inc
jb
inc
test
jl
cmp
xor
adc
pusha
scas
mov
inc
cmc
dec
or
idiv
leave
adc
jbe
in
pop
push
xchg
cmp
gs
sbb
push
in
add
lea
iret
retf
loopne
pop
pop
fist
push
(bad)
fucomp
xlat
imul
lahf
push
sub
(bad)
aad
out
xchg
fld
add
mov
out
ret
bound
push
mov
mov
ins
sub
xor
je
pusha
fs
cmp
add
dec
das
sub
cli
in
xchg
inc
mov
mov
add
rol
hlt
fcmovne
cmp
adc
dec
xor
shr
add
adc
loop
mov
shr
mov
ins
jmp
xchg
add
daa
cdq
int
(bad)
popf
fmul
in
and
arpl
sub
repnz
pop
pop
fdivr
cmc
pop
sub
popa
ret
fnsave
ss
xor
in
sub
test
cmc
jp
adc
fcom
and
lahf
(bad)
repnz
cmp
rcr
imul
and
mov
cmp
imul
inc
icebp
aad
mov
(bad)
sahf
sub
pop
mov
pusha
mov
inc
sti
mov
sub
aaa
ret
mov
arpl
mov
fdiv
push
enter
xchg
cmp
cmps
out
rcr
cmp
outs
sub
inc
sub
pop
fsub
mov
mov
int3
(bad)
out
mov
inc
sbb
es
sbb
and
pop
mov
js
jb
push
sub
pop
mov
int3
retf
push
repz
pushf
mov
(bad)
xchg
addr16
aad
daa
rcl
loop
cmp
cmps
stos
cli
imul
push
xor
mov
call
dec
sub
mov
dec
cmp
add
or
stos
in
repz
xor
ds
loope
xchg
pop
(bad)
xchg
jo
and
sbb
sbb
xchg
or
mov
mov
mov
movs
jle
lods
xchg
inc
add
leave
xor
sub
pop
dec
inc
pusha
movs
imul
push
cmp
fimul
xchg
mov
add
popf
xchg
in
mov
sbb
sbb
and
mov
loopne
cli
sbb
adc
sbb
ret
xchg
cmp
xchg
pop
imul
outs
cdq
jge
dec
sub
emms
call
cmps
cmc
xchg
pop
pop
pushf
std
xor
iret
push
ret
pop
cmps
xlat
xor
ret
aas
adc
sub
ret
inc
cmps
jns
imul
push
xchg
pop
(bad)
(bad)
jle
mov
and
jecxz
xor
ja
addr16
(bad)
adc
mov
mov
repz
adc
xchg
jmp
pop
cmp
(bad)
mov
(bad)
mov
adc
mov
in
inc
enter
das
fist
arpl
inc
das
push
or
and
cmps
stc
jle
mov
sbb
(bad)
retf
lods
sbb
or
neg
cmp
stc
mov
mov
jle
inc
leave
cmp
mov
mov
es
xlat
dec
ret
jne
xchg
sbb
sbb
cmp
sub
bound
xchg
icebp
lahf
out
cmps
ds
mov
pop
fldcw
test
enter
sub
inc
fs
cmp
push
push
xor
xor
shl
cmp
jo
add
loope
sbb
fst
test
add
cmp
push
loopne
adc
jl
mov
int
ret
cld
ja
jge
add
and
push
shl
rcl
xchg
xchg
or
jg
sti
cmp
outs
adc
in
clc
jmp
rcl
xchg
pop
or
dec
xchg
pop
pop
push
push
jnp
std
xor
je
rcl
fcmovnb
daa
mov
fcom
out
jnp
adc
add
xchg
push
popa
sbb
fcmovb
sub
std
push
in
sbb
xchg
cmps
fcomp
cld
mov
pop
adc
test
(bad)
popf
rep
in
jbe
retf
sbb
mov
sub
dec
mov
(bad)
cs
sahf
retf
sub
ins
mov
and
imul
loope
iret
mov
(bad)
sbb
xchg
mov
sti
retf
shr
mov
xor
push
lds
jns
xchg
aas
adc
cwde
sbb
dec
test
pushf
(bad)
xchg
retf
in
mov
xchg
mov
xor
sbb
jno
inc
cmp
enter
pusha
cmp
sbb
outs
dec
pop
lods
jmp
cmc
xchg
and
and
in
aas
inc
sub
test
mov
daa
add
mov
mov
push
fs
inc
sbb
push
dec
loop
fsubrp
jo
pop
out
xlat
call
xor
push
sub
mov
or
push
xchg
sub
pop
jl
aad
imul
and
pop
push
add
mov
ds
faddp
cmp
or
mov
jmp
call
push
(bad)
mov
std
(bad)
pop
pop
gs
scas
std
xor
push
cmp
sti
jle
dec
mov
cmps
add
cli
ret
cmp
push
sbb
sahf
push
adc
pushf
xchg
cwde
shl
xchg
mov
push
mov
jl
imul
iret
pushf
inc
xchg
lods
ins
fild
xchg
pop
shl
jb
ss
mov
adc
mov
stos
pop
(bad)
sbb
jg
es
adc
scas
fidivr
xchg
or
sub
xchg
push
jge
fdivr
inc
sub
aas
sbb
push
ss
mov
shr
test
mov
jl
add
shr
or
jbe
mov
cld
jne
mov
cwde
(bad)
push
loop
scas
push
xor
sbb
xor
out
jmp
sub
xchg
test
jno
mov
xor
mov
mov
rol
cli
jp
dec
lea
pop
stos
icebp
push
jmp
mov
pop
sahf
loope
outs
loop
pop
imul
hlt
jae
fucomp
xchg
imul
pop
int
adc
push
add
jnp
or
shl
sbb
cmps
in
outs
outs
pusha
sbb
xlat
cmp
and
pop
sar
leave
fisub
jbe
mov
es
call
int
jg
mov
pop
inc
xchg
nop
ror
jns
mov
or
ret
mov
sar
and
mov
(bad)
xchg
clc
mov
cmp
lds
lock
mov
add
loope
mov
jge
jp
jmp
fild
pushf
lods
fwait
daa
es
sbb
icebp
out
cwde
fidiv
add
ss
imul
sbb
push
pop
mov
jl
mov
lahf
cmp
jno
mov
mov
xchg
mov
sub
jns
imul
aas
mov
jbe
or
xchg
mov
mov
sub
cs
mov
adc
pop
xchg
pop
pusha
cmps
pop
jae
popf
cmps
les
push
fidivr
sub
add
inc
add
cld
mov
adc
pop
lahf
clc
mov
dec
stos
fstp
std
frstor
and
rcl
ins
(bad)
bound
add
outs
mov
imul
mov
sbb
cmp
inc
cdq
pop
(bad)
sub
sub
ret
fwait
ins
cmp
mov
mov
inc
adc
cmc
jnp
jg
lods
repz
in
sub
or
dec
fcom
push
mov
ror
xchg
push
lods
sub
dec
fs
cs
arpl
out
add
and
lea
(bad)
sti
xor
fisub
pusha
imul
push
std
setnp
fisub
lds
popa
xchg
imul
sbb
jns
out
push
cmovge
retf
and
sub
or
js
mov
mov
and
imul
and
cmps
inc
pop
sub
adc
adc
int3
sub
mov
mov
mov
ins
mov
pop
cmpxchg
loop
fisttp
mov
cld
inc
outs
xchg
sbb
cmp
add
push
(bad)
into
aad
sbb
popf
add
xchg
hlt
movzx
imul
jne
rol
sbb
icebp
cmp
nop
das
mov
pop
repz
mov
test
(bad)
or
and
add
aad
mov
push
cmc
mov
mov
out
loop
sbb
ret
push
jmp
pusha
adc
add
stos
mov
in
enter
leave
fnstenv
push
jno
nop
rcl
dec
aaa
xchg
add
data16
icebp
loopne
fcom
push
adc
push
add
adc
adc
pop
jg
call
shl
jmp
(bad)
iret
xor
sar
into
cmps
lahf
jle
push
jmp
and
cmp
or
cmps
nop
mov
dec
(bad)
iret
pop
enter
cld
xchg
mov
addr16
pop
jmp
jp
push
loope
cli
jl
mov
sahf
mov
mov
cmps
mov
mov
cmp
iret
test
mov
out
cmp
mov
sub
push
mov
pushf
or
pop
cmps
lock
adc
or
adc
or
fmul
inc
mov
int
and
sub
retf
arpl
add
push
and
xchg
push
adc
mov
sub
push
dec
ds
inc
add
movs
sub
repz
std
and
jno
mov
lock
or
rol
sub
sub
add
pop
inc
add
jae
scas
inc
jmp
repnz
popa
add
test
push
clc
sbb
pop
adc
int
xor
daa
ficom
sahf
sub
aas
inc
bound
xchg
sub
cmp
push
(bad)
sahf
aad
sub
add
mov
jp
jo
fcmovnb
mov
in
popa
scas
jmp
dec
or
popa
cmp
sahf
inc
jo
in
sti
mov
jno
xchg
std
out
and
popa
sub
inc
jo
and
xchg
pop
pop
stos
cmp
cmp
push
not
mov
out
lods
push
jno
jne
stos
pop
xor
pop
(bad)
sar
sub
mov
mov
rcl
sub
and
xor
ret
jnp
pop
cmc
sbb
xchg
add
dec
lea
add
je
clc
mov
dec
xor
call
int
sbb
mov
sar
stos
inc
and
mov
inc
aam
xor
je
pop
and
int3
jp
xchg
js
sub
pop
sbb
lods
leave
out
jns
stc
xchg
movs
arpl
aas
imul
(bad)
outs
sti
jecxz
das
and
dec
inc
popa
jg
retf
mov
icebp
cld
add
adc
icebp
(bad)
xchg
loopne
in
(bad)
int3
push
int3
sub
xlat
inc
jp
mov
mov
mov
or
daa
movs
cmps
loope
push
sbb
mov
frstor
neg
std
pop
xor
inc
dec
inc
push
mov
sub
push
xor
xor
sub
and
xchg
and
repnz
xchg
(bad)
fst
addr16
imul
les
or
jmp
and
mov
sub
in
push
out
(bad)
jmp
(bad)
imul
fsubr
sahf
fcos
bswap
dec
dec
jle
mov
das
jecxz
pop
jge
jmp
cdq
inc
add
cmp
pop
mov
cmp
mov
mov
inc
sahf
ins
addr16
(bad)
cmp
mov
mov
ret
pop
stos
xor
jmp
je
mov
mov
and
or
jg
jmp
test
out
cld
jne
dec
mov
pop
lea
outs
sub
xor
jae
add
popa
inc
fisttp
ret
mov
dec
stos
cmp
rcl
add
jmp
cs
and
in
dec
and
sar
mov
fdiv
cmp
(bad)
push
jns
sbb
and
push
xchg
bound
dec
pop
add
cmp
pop
pop
enter
mov
ret
mov
cmp
outs
xchg
xchg
push
scas
(bad)
sti
sub
fwait
std
push
jb
push
mov
aaa
inc
dec
inc
aas
pop
ja
push
outs
popa
scas
add
or
mov
add
stos
daa
movs
fld
(bad)
adc
repnz
outs
retf
ror
shl
mov
int3
pop
scas
xchg
xchg
push
mov
movs
sub
sub
das
pop
and
sub
popf
mov
push
push
xchg
cmps
or
mov
mov
mov
retf
jg
xor
sub
xchg
inc
das
stc
cwde
xchg
cmp
popa
mov
aaa
ins
jo
sub
sub
(bad)
ins
outs
es
das
mov
adc
mov
lahf
ins
sbb
sbb
inc
push
scas
sti
cwde
mov
movs
fild
inc
cmp
call
movs
fucomip
pop
jp
cs
icebp
sub
push
inc
jns
lahf
or
pop
mov
mov
sub
pop
rcr
aas
inc
push
test
adc
out
int3
out
pop
jo
movs
retf
xlat
pop
jb
push
movs
sub
sahf
push
dec
(bad)
and
jecxz
dec
jmp
mov
ss
jmp
repz
(bad)
aam
test
pop
adc
xchg
ins
retf
or
out
arpl
jmp
jmp
cmp
dec
retf
popa
push
fs
push
(bad)
jo
xchg
std
movs
push
adc
int3
fwait
arpl
and
cmc
or
jg
ins
sbb
pop
inc
xchg
pop
add
sbb
(bad)
xchg
push
dec
test
fs
scas
and
icebp
mov
movs
pop
ja
fwait
sbb
jmp
shl
cli
pop
mov
in
xor
lahf
scas
pop
jnp
jns
mov
xor
out
adc
inc
push
sbb
fmul
cli
adc
jp
push
int
scas
cmp
and
xchg
sbb
cmp
xchg
mov
test
push
pop
mov
jnp
mov
pop
pop
scas
push
mov
scas
or
adc
mov
xchg
jb
push
inc
and
jge
jecxz
ficomp
sbb
lods
sti
in
xor
sahf
add
push
dec
scas
jne
test
movs
sub
fsubr
mov
call
lahf
enter
clc
dec
das
jp
or
cmps
add
aam
mov
adc
hlt
sub
inc
in
jo
iret
ss
cmp
jno
sbb
or
mov
jl
mov
scas
cmps
mov
cmp
fnstsw
into
add
aam
cmp
cmp
aam
jg
test
jmp
imul
push
call
mov
pop
int
cdq
mov
jge
ds
or
(bad)
sbb
sbb
arpl
xchg
pusha
loope
ins
sbb
aad
jmp
popf
xchg
fldenv
clc
mov
movs
out
push
(bad)
in
mov
sub
repz
push
jmp
fild
push
jns
pop
dec
pop
les
aas
xlat
test
shl
cdq
ret
iret
and
ins
mov
jg
jae
test
lods
mov
and
movs
ret
pop
sub
push
cmps
sbb
into
out
pop
xor
pop
dec
(bad)
shr
xor
les
cmp
sub
inc
jl
push
in
xor
xchg
lds
push
dec
js
pop
pop
dec
aad
push
push
ins
and
or
mov
mov
icebp
rcl
sbb
jns
sub
hlt
test
adc
and
out
or
inc
ds
jmp
and
push
mov
push
inc
arpl
mov
pop
(bad)
jns
push
add
retf
mov
daa
shl
or
ja
mov
je
lods
popa
push
fcmovne
mov
mov
fs
mov
jge
push
stos
jno
xor
outs
cmp
retf
(bad)
push
dec
mov
xchg
shr
fcomp
jmp
out
stos
sub
fwait
jbe
mov
or
push
jmp
cmp
sti
call
xor
xor
pop
mov
into
push
into
pop
loopne
xor
fdivr
jae
or
xor
fisub
cmc
leave
inc
das
and
lock
ror
sbb
pop
push
pushw
or
in
mov
stc
add
or
jmp
ds
iret
leavew
jb
aas
jg
(bad)
mov
retf
cmc
ins
sahf
dec
outs
adc
push
loope
in
clc
mov
jl
stos
mov
pop
sbb
push
(bad)
cmc
jge
fidivr
cmp
int
shl
(bad)
cmp
jle
mov
aam
js
shl
mov
push
outs
pop
cmp
(bad)
inc
fs
push
imul
(bad)
das
(bad)
jns
pop
scas
arpl
xor
or
hlt
rcl
popa
stos
pop
cmc
mov
sar
pusha
das
push
push
dec
sbb
fist
jne
iret
push
(bad)
xchg
jns
pop
loope
cli
ds
dec
mov
pop
in
add
stos
call
xchg
jl
xchg
adc
(bad)
scas
and
fwait
push
sub
cmp
push
sub
dec
loopne
inc
clc
popf
bound
jae
shl
add
and
das
loope
pushf
xchg
ins
addr16
add
dec
test
and
xor
or
or
add
div
mov
inc
jne
xchg
push
xchg
pop
cdq
rol
mov
pop
or
mov
js
(bad)
retf
add
outs
rol
lods
dec
pop
or
imul
and
cmp
fs
push
imul
inc
add
push
adc
loopne
pop
mov
loop
add
mov
nop
ja
and
mov
ffree
outs
mov
dec
xor
pop
sbb
inc
stos
or
es
loop
push
or
mov
jb
outs
test
imul
in
jecxz
mov
adc
lock
inc
xchg
fcomp
addr16
fs
pavgw
daa
pop
mov
push
cwde
div
push
call
mov
mov
addr16
stc
cdq
sub
mov
jl
xchg
retf
sub
lods
pop
fstp
syscall
pushf
dec
jbe
add
dec
call
cmp
outs
outs
push
mov
aam
mov
mov
push
imul
xor
sbb
xlat
adc
mov
mov
pop
sbb
jae
push
sar
add
mov
adc
jbe
mov
pushf
and
gs
add
aaa
ret
jae
pop
dec
jl
mov
test
addr16
repnz
sbb
add
(bad)
dec
push
les
add
mov
xchg
out
rcl
(bad)
dec
xor
sbb
sub
pop
inc
jo
or
xor
sbb
sub
push
(bad)
bound
in
pop
sar
out
sbb
xor
in
jnp
pop
aam
sahf
push
(bad)
fild
mov
icebp
cmps
lock
push
and
push
call
ss
pop
pop
cmp
fucom
dec
mov
pop
mov
jg
jb
mov
popa
inc
push
inc
dec
loop
mov
jmp
cmp
retf
add
out
ficomp
sub
or
and
mov
hlt
mov
dec
xchg
sti
retf
push
mov
and
push
scas
xlat
or
or
and
mov
clc
sbb
inc
loopne
ds
xchg
call
mov
and
fnsave
in
(bad)
arpl
imul
push
and
and
dec
mov
mov
mov
lock
sar
lods
shr
sub
dec
retf
adc
mov
rcl
sbb
out
mov
daa
dec
stc
pop
mov
loop
mov
push
pushf
arpl
in
repnz
push
lods
adc
mov
cmp
sub
das
sub
adc
xor
push
jb
sbb
retf
push
cmps
cmp
rcl
cmp
repz
add
sbb
jno
mov
push
or
arpl
rcl
les
in
retf
loop
in
adc
or
ss
xchg
cs
movs
cmp
fadd
je
and
mov
sbb
and
ins
mov
loop
ror
pop
mov
into
call
add
dec
ret
inc
push
stc
push
sub
into
mov
sub
jge
aas
mov
jmp
bound
pinsrw
jbe
inc
test
mov
push
adc
cwde
fcomp
cmp
adc
add
cmp
xchg
pop
push
jno
push
push
mov
add
lods
lods
or
sbb
leave
sbb
cmp
in
xchg
dec
ja
and
mov
cwde
xor
and
add
mov
cmp
test
(bad)
adc
aaa
je
sahf
lea
xchg
repz
(bad)
cdq
bound
das
clc
cwde
outs
(bad)
cwde
fldcw
or
pop
add
inc
mul
cmps
xor
hlt
cmc
push
inc
add
or
pop
mov
inc
das
fidivr
gs
mov
cli
aad
addr16
jo
push
dec
clc
mov
loop
push
push
ds
aad
pop
(bad)
cmp
test
dec
lods
adc
mov
xchg
lds
xchg
mov
xor
in
adc
stos
jmp
pop
xor
push
stc
pop
jl
and
inc
test
sbb
mov
push
ja
adc
mov
pop
scas
shr
push
xchg
xchg
ins
ret
add
or
(bad)
out
xchg
pusha
test
dec
scas
fiadd
cmp
jg
xchg
mov
cmps
pop
cmc
or
lods
je
pop
mov
shr
xlat
inc
inc
push
mov
mov
pop
ss
icebp
retf
iret
xor
imul
ja
jge
popa
int
push
or
scas
cmp
imul
arpl
or
jecxz
cmps
sub
add
in
and
test
icebp
in
or
sub
fwait
xchg
jo
loop
cmp
mov
fadd
pop
mov
cmp
das
ins
inc
pop
in
inc
nop
das
test
mov
xor
clc
adc
call
pop
jmp
cli
and
adc
xchg
push
cmp
xlat
ins
push
fld
mov
ins
dec
sbb
fistp
cwde
and
das
dec
aad
mov
pop
adc
dec
gs
dec
mov
jle
jno
cmps
or
movs
pop
je
(bad)
dec
jl
mov
fwait
es
cli
xchg
mov
retf
cmp
inc
je
cmp
jns
xlat
or
jns
jmp
xor
adc
cmps
jb
mov
rol
xchg
fwait
inc
xor
les
fstp
aas
mov
mov
ret
xor
in
aas
pop
cwde
add
xlat
or
sbb
xchg
mov
or
push
mov
lea
clc
pop
jo
cmps
stos
fsub
cwde
mov
punpckldq
mov
rcl
lods
xor
sub
js
hlt
pop
dec
mov
repnz
mov
cmps
mov
daa
inc
inc
push
pop
push
fs
cmp
std
sbb
in
push
fucomip
pop
into
test
push
retf
sbb
jp
xchg
popa
mov
int3
in
jns
xor
push
sbb
std
out
jo
sti
sahf
pop
shr
movs
lea
adc
push
mov
push
sub
pop
pop
mov
mov
cld
xchg
mov
inc
sub
dec
jmp
adc
js
mov
rcr
repnz
cmp
adc
(bad)
loop
into
add
gs
push
push
in
cmp
(bad)
push
iret
sub
pop
fcomp
and
xor
(bad)
adc
fmul
ins
xchg
or
jmp
fistp
jmp
les
xor
cmps
imul
outs
jmp
adc
popf
jno
push
sub
push
in
inc
or
retf
add
fisttp
cld
cli
lahf
mov
pusha
jl
cmp
stos
xchg
ins
adc
pop
mov
or
in
daa
or
je
shl
les
retf
out
idiv
or
mov
ss
mov
sub
cmp
scas
sub
fxtract
pop
int
push
fs
sbb
push
outs
inc
lods
or
lods
lods
(bad)
ret
out
dec
xor
pop
jns
(bad)
mov
fwait
divps
scas
mov
cmp
add
add
aas
jg
arpl
pop
inc
jp
push
ja
and
inc
mov
aas
std
(bad)
out
leave
fcom
shl
movs
loope
(bad)
and
int
inc
fcom
add
in
or
jbe
je
fsub
sub
sbb
repnz
xor
stc
rcr
shr
daa
aas
fs
cdq
jnp
mov
inc
cmc
xlat
inc
out
inc
add
ret
cld
test
data16
movs
jno
inc
daa
sar
inc
pop
jmp
sbb
iret
add
xchg
sub
push
mov
outs
sub
and
dec
stos
jmp
aad
cmp
cmp
out
adc
inc
sbb
or
xchg
jge
mov
hlt
enter
call
push
sub
push
in
outs
das
(bad)
xchg
pop
xor
aam
out
es
and
pop
mov
imul
pop
push
sub
adc
call
icebp
mov
aad
pop
mov
in
adc
pop
cmp
mov
fdivr
(bad)
out
inc
(bad)
call
jmp
inc
inc
sbb
cwde
sbb
std
and
cs
jmp
sbb
nop
call
cmps
cmp
je
lods
scas
xor
mov
outs
mov
rcl
adc
push
sub
ja
clc
and
and
sub
inc
sbb
add
(bad)
fist
cmp
add
adc
in
sar
add
clc
sbb
cld
mov
(bad)
mov
or
lds
inc
jmp
inc
lock
add
mov
sbb
loopne
je
add
dec
mov
dec
(bad)
add
mov
(bad)
jg
dec
lods
mov
xchg
and
fwait
pop
adc
adc
and
push
retf
inc
xchg
pop
lock
xchg
push
jb
les
pop
hlt
fimul
xor
(bad)
data16
mov
adc
adc
test
fwait
mov
ret
pusha
pop
bsf
inc
stc
mov
xor
inc
mov
cs
xor
call
fstp
lods
hlt
lea
je
iret
cmp
mov
add
and
(bad)
mov
xchg
mov
out
jp
repnz
iret
xor
mov
fs
daa
and
cmps
push
inc
xor
pop
cs
ds
shl
xchg
or
pop
mov
xlat
sti
xor
sbb
xchg
dec
pop
js
xchg
(bad)
push
push
fxch
jl
fild
in
xchg
std
mov
and
retf
in
fistp
scas
mov
retf
xchg
pop
xchg
pop
xlat
sbb
movs
jns
shr
stos
xchg
cmc
dec
jnp
out
sahf
lods
cmps
ret
movs
jnp
push
adc
retf
sbb
push
mov
pusha
adc
xchg
ds
or
jbe
add
adc
scas
das
inc
mov
xlat
ds
mov
ss
les
and
dec
push
or
ficomp
fadd
xchg
jae
lds
mov
inc
adc
inc
pop
mov
call
jae
xchg
cwde
leave
dec
sbb
ins
push
mov
fucompp
iret
inc
cmp
addr16
mov
jmp
mov
je
mov
mov
xchg
pop
out
or
daa
mov
mov
cmps
or
push
dec
sub
test
(bad)
mov
sti
jne
mov
pop
imul
pop
pop
cwde
(bad)
mov
add
aad
and
loop
xchg
xchg
dec
and
xor
xor
or
or
inc
xor
adc
pop
call
cmps
add
in
jae
sub
js
add
sti
cmps
outs
jg
jle
(bad)
js
test
shl
rcr
test
scas
adc
sti
and
add
int3
dec
cmp
leave
in
(bad)
fistp
movs
jmp
ins
je
add
test
aas
pusha
dec
pop
xchg
ret
nop
(bad)
rcl
xor
je
les
imul
add
xor
jbe
mov
call
and
adc
jmp
loopne
push
jbe
(bad)
cmp
retf
loope
jae
in
inc
(bad)
cs
retf
xchg
xchg
xor
vpshaq
mov
pop
jb
adc
vmovdqu
push
fstp
cmps
mov
fisubr
push
xchg
ror
or
sbb
inc
loop
adc
movlps
jno
mov
test
test
adc
cwde
pop
fs
test
mov
mov
nop
loope
int3
cs
stos
mov
mov
sar
out
shr
sbb
clc
dec
ret
mov
pop
adc
mov
push
xchg
shr
jmp
adc
and
(bad)
stos
repz
dec
es
jo
adc
mov
call
push
sub
dec
movs
inc
and
in
sub
adc
inc
add
mov
xor
daa
mov
leave
arpl
dec
xchg
xor
mov
jns
int
mov
loop
mov
mov
jns
dec
jo
xor
push
jae
retf
or
mov
mov
add
sahf
popa
ror
mov
data16
mov
adc
mov
xor
les
mov
jnp
stc
imul
fidiv
ds
add
mov
imul
push
add
xchg
jae
push
outs
loopne
cmp
pop
popf
push
call
cmp
jns
test
sub
mov
iret
jmp
pop
scas
retf
pop
ds
xchg
popf
ror
push
rcr
retf
lock
sbb
mov
shl
jg
mov
aas
les
ins
jo
jl
xchg
test
xchg
fdivr
mov
cmp
in
out
stos
mov
xchg
test
xchg
div
arpl
mov
jge
stc
pop
pop
xchg
call
imul
bound
ret
adc
mov
cld
leave
mov
sub
aas
sub
sub
push
fmul
aad
imul
test
xchg
addr16
mov
mov
push
(bad)
lahf
jbe
cmps
jns
and
fist
or
dec
push
pop
or
jle
(bad)
inc
cmp
inc
scas
ds
fadd
xchg
pop
popf
pop
cli
iret
fidivr
adc
xlat
cmps
int
cmp
jb
mov
jbe
(bad)
inc
sub
xchg
push
xor
xchg
je
push
enter
adc
pop
inc
fcom
dec
cmp
sbb
xor
out
enter
xchg
(bad)
outs
movs
mov
pop
rcr
dec
pop
ins
sar
push
xor
mov
dec
in
mov
mov
aas
jmp
mov
or
mov
mov
cmc
mov
jne
and
mov
push
cmp
gs
mov
add
sbb
in
mov
cmps
push
jbe
movq
in
push
mov
repnz
je
adc
or
adc
in
mov
pop
add
or
push
lods
push
adc
mov
test
jns
hlt
int
jp
xchg
fld
inc
add
jmp
pop
push
jmp
adc
inc
mov
mov
add
lds
adc
lds
lods
pop
mov
ins
mov
(bad)
mov
xlat
xchg
rcr
jmp
test
inc
jecxz
pop
xor
push
stos
or
or
mov
xor
inc
ror
jbe
push
mov
and
add
ficom
inc
and
mov
mov
retf
sub
mul
cmc
adc
das
dec
cmps
stc
and
push
out
lahf
and
inc
idiv
enter
mov
push
dec
xor
push
shl
jg
mov
addr16
stos
dec
jp
scas
loope
mov
push
add
outs
adc
inc
mov
ds
mov
dec
inc
push
xlat
pusha
in
cmp
gs
in
hlt
push
push
sbb
cmp
stc
lock
cli
enter
call
sbb
add
fs
pop
mov
pop
das
dec
xor
push
test
(bad)
pop
add
out
out
and
call
dec
xor
or
dec
test
mov
jl
mov
push
call
xchg
sbb
call
xor
jns
lods
mov
adc
scas
add
sbb
movs
loop
jmp
test
test
ins
add
add
inc
test
mov
inc
and
cmps
stos
xchg
scas
test
lods
std
jp
add
sub
mov
shl
sbb
fisttp
not
retf
add
sti
test
inc
and
sub
pop
lahf
test
xor
leave
inc
push
mov
xlat
into
xor
cld
cmps
lods
pop
out
xchg
ss
add
or
sbb
jns
jecxz
jo
jmp
xchg
fcmovbe
add
scas
xor
movs
mov
addr16
retf
loopne
cs
lahf
cs
in
push
inc
daa
ror
push
sub
xchg
fadd
xor
mov
ins
stos
dec
lahf
sbb
push
aas
jmp
ins
(bad)
jnp
and
fcos
xchg
(bad)
push
jmp
jecxz
ja
rol
leave
mov
or
repz
aam
xchg
xor
mov
movaps
pop
mov
ds
popa
hlt
out
xchg
pop
mov
and
(bad)
test
out
cwde
stos
or
jne
clc
aaa
jb
outs
push
sub
or
mov
outs
cld
inc
cmp
stos
repz
push
fcom
cld
cmp
aam
lea
retf
xchg
and
push
sub
sbb
call
loop
pushf
(bad)
movs
mov
lea
leave
jns
clc
inc
std
cmp
add
xor
add
movs
inc
shrd
cmp
push
sub
mov
arpl
aam
sbb
sahf
fwait
lds
sbb
(bad)
aaa
lahf
scas
xchg
push
(bad)
leave
push
fst
mov
mov
inc
mov
cdq
dec
add
pushw
jno
cmp
test
int3
gs
retf
mov
std
loop
xor
xchg
aaa
push
sub
shr
jb
outs
xchg
daa
mov
imul
pushf
pop
jmp
stc
es
shr
jg
inc
ins
push
cld
fisttp
popa
jnp
push
es
or
nop
inc
adc
inc
xor
sbb
pop
scas
sbb
aam
mov
sbb
loopne
(bad)
pop
(bad)
cmps
and
dec
cmps
loop
imul
sbb
or
inc
int
xor
aaa
movs
ds
ja
in
scas
add
stc
mov
cmc
adc
jmp
aam
mov
or
and
sub
aas
mov
hlt
adc
sbb
int
jp
lods
mov
push
pop
mov
mov
sbb
scas
ins
push
fisttp
imul
lods
aam
cmovl
jge
leave
mov
js
pop
jge
mul
mov
fisubr
movs
fstp
xor
rcr
stc
in
outs
ins
daa
mov
fsub
(bad)
clc
fwait
jmp
sub
pop
pop
jnp
pop
mov
pop
je
mov
sbb
push
adc
fistp
mov
loopne
mov
jecxz
pop
xor
inc
sbb
inc
mov
lods
(bad)
xlat
imul
mov
jb
adc
sbb
fs
sar
arpl
fld
cdq
cmp
jmp
into
ins
jb
ftst
xchg
leave
add
push
int3
cwde
jmp
add
jp
lea
cs
aas
hlt
ins
jo
test
test
ins
pop
in
pop
hlt
(bad)
sar
mov
push
and
inc
pop
xor
sub
out
into
cwde
push
pop
push
inc
inc
imul
scas
push
aaa
adc
cmp
aas
adc
xchg
fldl2t
(bad)
in
or
mov
in
nop
in
mov
add
bound
add
push
pop
aad
hlt
mov
mov
aaa
loopne
mov
xchg
in
jbe
mov
mov
cmp
push
leave
scas
push
xrelease
inc
add
fimul
jnp
cwde
push
mov
int3
sar
cmp
mov
int
hlt
xor
inc
and
xchg
das
mov
mov
rcl
mov
xor
jno
daa
push
mov
stc
mov
xchg
es
xor
mov
and
cmc
stos
and
dec
fndisi(8087
mov
cmc
js
cmp
call
cmps
cmp
repz
clc
nop
sub
cmp
mov
adc
xor
int
pushf
fidiv
or
stos
test
mov
mov
inc
push
xchg
(bad)
out
inc
das
and
and
jb
xchg
inc
rcr
fsubr
mov
scas
stc
adc
push
lods
in
or
inc
push
dec
ret
push
push
fsubr
mov
push
icebp
dec
mov
daa
dec
shl
loope
and
sti
sbb
cmp
loope
jne
stc
mov
pop
in
and
push
jo
hlt
sbb
mov
xchg
pop
js
iret
jp
int3
outs
dec
addr16
inc
data16
aaa
cld
or
setge
add
adc
dec
cli
mov
lods
aam
pop
idiv
pop
sbb
and
or
adc
mov
sbb
sbb
sub
aaa
mov
sbb
pop
shl
adc
pop
cli
neg
dec
jbe
pop
pop
aas
mov
jae
xor
fistp
div
jmp
fs
scas
sbb
test
adc
mov
aad
in
ret
dec
stc
ror
push
rol
jno
sbb
xchg
jmp
jae
xchg
mov
movs
jp
inc
popa
jmp
pop
jmp
mov
push
rol
lea
sub
imul
pop
aad
fstp
ret
fcomip
push
(bad)
xor
xchg
fmulp
xchg
mov
int
sub
mov
stc
cmc
or
fs
lods
push
outs
sbb
sub
scas
push
cmp
or
xchg
(bad)
or
(bad)
jle
mov
rol
dec
cs
or
adc
(bad)
or
mov
call
mov
push
out
mov
push
jge
mov
adc
cmp
das
inc
jmp
inc
sub
xor
js
mov
add
push
test
push
cmp
fimul
pop
std
mov
aad
xchg
mov
pop
pop
xor
test
js
cdq
outs
les
add
jp
pusha
fdivr
sbb
pop
cld
sbb
ret
in
xor
popf
test
inc
mov
inc
push
mov
inc
in
or
jp
jne
std
pop
and
push
or
fldcw
adc
lods
test
mov
ins
aam
mov
inc
jl
loop
icebp
(bad)
sub
out
jno
ins
iret
pop
sub
fsub
jp
mov
inc
push
dec
mov
aaa
(bad)
push
mov
daa
xchg
gs
inc
neg
inc
adc
fwait
repnz
xor
in
stc
in
bound
inc
out
push
inc
inc
xchg
cmp
or
xor
nop
mov
mov
mov
ins
dec
test
shr
sub
and
out
inc
or
dec
ret
jmp
and
fsub
sub
pop
cwde
mov
inc
mov
rol
and
and
xor
in
adc
in
or
jo
std
push
popf
xlat
mov
and
lahf
sub
cmps
dec
in
mov
xor
push
(bad)
js
fdiv
ds
ret
popw
enter
lods
lea
pop
in
inc
inc
in
out
or
repnz
cli
jnp
xor
or
push
jg
test
(bad)
xor
aad
enter
jae
jl
xchg
pop
dec
in
ss
inc
arpl
pop
je
ins
cmp
mov
add
pop
jnp
or
mov
mov
rol
aaa
sub
push
jb
rcr
outs
rcr
icebp
xchg
std
cmp
or
xchg
shl
fimul
outs
cs
hlt
push
xchg
cmp
push
push
lods
dec
rcl
dec
out
jno
ror
adc
adc
(bad)
jl
or
mov
ss
scas
push
je
dec
sbb
mov
or
jnp
cmc
cmp
dec
frstor
jno
test
pop
mov
add
inc
cmp
xor
jb
adc
mov
cwde
xchg
xchg
pop
icebp
pop
bound
lahf
add
test
cs
inc
stos
(bad)
gs
sub
outs
out
fidiv
xlat
hlt
xchg
loop
out
repz
add
jne
stc
out
cld
push
movs
cmp
daa
xchg
xor
sub
rcr
pop
sub
loopne
add
das
popf
pop
loop
pop
push
push
dec
(bad)
ss
jo
adc
cmps
icebp
sti
sbb
pusha
xchg
(bad)
adc
inc
pushf
fwait
lock
outs
outs
jb
or
cmps
and
cmc
shl
mov
mov
jle
pop
in
pop
mov
stos
aam
in
stc
push
pop
repnz
push
ret
sahf
and
or
(bad)
sbb
cmps
sub
das
mov
xor
mov
clc
(bad)
xlat
or
xlat
dec
pushf
add
and
(bad)
mov
mov
mov
nop
and
adc
outs
ins
xor
test
outs
xchg
in
push
sar
mov
cwde
movs
outs
jno
mov
clc
rol
ds
mov
sub
test
dec
xchg
pop
ret
jle
mov
dec
int
mov
fld
adc
mov
push
lahf
das
mov
movlps
mov
inc
or
push
cmc
fs
nop
mov
sub
pushf
jp
les
pop
movs
imul
cmp
(bad)
jge
jg
jg
xchg
retf
jo
adc
je
cmp
clc
fisub
sbb
adc
cmp
or
push
adc
test
mov
movs
cmp
ror
xchg
sbb
bound
movs
ja
stos
lock
icebp
add
push
ja
sub
(bad)
jp
stos
xchg
mov
sub
xor
popf
pusha
mov
jmp
push
lods
in
stos
mov
aam
ds
jg
push
push
inc
adc
les
popa
retf
cdq
push
add
cmp
inc
fsub
mov
fcom
in
data16
aaa
hlt
add
inc
aad
ror
jge
inc
jo
lods
cmp
popa
xchg
loop
sar
mov
pusha
adc
or
sub
sub
cmp
mov
mov
mov
inc
mov
stos
xchg
add
leave
xor
lea
mov
bound
cmp
lahf
jne
popf
push
jg
cmps
clc
mov
ret
ror
add
xchg
out
not
mov
xor
add
mov
std
and
or
jecxz
add
jns
enter
adc
push
cli
lods
sub
add
pusha
and
inc
push
mov
addr16
js
jb
and
dec
cmp
movs
adc
test
xor
aad
std
mov
push
(bad)
mov
cmps
loopne
add
sti
push
add
cmp
sbb
add
sar
adc
jecxz
sub
and
add
sub
inc
test
or
popa
add
xlat
ins
sar
test
shl
aaa
sbb
enter
sbb
ins
or
pop
int
adc
jbe
rcr
dec
mov
pop
sub
sub
cmp
adc
sbb
nop
cli
shl
mov
cld
jns
jns
in
test
out
ffreep
push
adc
mov
scas
mov
mov
lods
add
cmovg
jo
mov
mov
or
loopne
fcomp
inc
or
mov
jle
in
out
pop
inc
mov
or
aam
out
nop
stc
btr
jbe
mov
jmp
lock
out
sub
mov
(bad)
stc
pop
add
outs
add
test
addr16
push
imul
pop
push
adc
adc
mov
or
mov
mov
mov
dec
cwde
lock
jnp
scas
retf
push
sub
mov
sub
dec
pusha
and
cli
xor
cmp
mov
popa
stc
div
rol
ins
mov
dec
in
in
push
inc
pop
xor
add
dec
sub
mov
sub
jle
addr16
(bad)
shl
fnsave
jo
adc
ror
in
inc
jbe
outs
add
retf
sub
stos
or
retf
leave
gs
or
mov
and
clc
and
mov
pop
arpl
or
sbb
adc
mov
mov
into
inc
stc
cmp
dec
push
dec
and
add
bound
mov
cmp
(bad)
xchg
adc
pop
inc
xchg
jmp
(bad)
mov
push
mov
add
popf
ins
jne
dec
movs
xor
pop
lods
lods
xor
jb
test
test
xchg
push
xchg
mov
stos
ffree
jns
sub
imul
mov
push
pop
and
fidiv
jecxz
cmp
ss
lock
das
xchg
dec
add
add
mov
clc
test
rcl
mov
xor
inc
jae
add
push
sbb
or
fsubr
das
jmp
jecxz
call
jbe
push
mov
jg
rcl
adc
fisubr
pop
sub
mov
es
jmp
lahf
out
xchg
inc
cmp
mov
lahf
inc
in
mov
push
add
or
retf
cld
fimul
mov
cmp
sub
mov
mov
and
pop
and
mov
gs
xor
addr16
push
in
sub
mov
mov
jae
inc
inc
fild
jno
push
xor
in
jbe
fwait
or
loopne
cmp
add
test
pop
movs
sbb
and
pop
add
fwait
int
bsf
pop
std
inc
mov
leave
or
push
mov
inc
inc
pop
sub
nop
xchg
mov
jecxz
push
adc
bound
inc
pop
jno
dec
mov
iret
fistp
xchg
mov
jb
sub
dec
xchg
loope
xor
mov
mov
sar
aaa
stos
jg
push
and
sbb
cmp
or
jnp
nop
loope
in
mov
sar
imul
jae
xchg
jno
mov
mov
dec
cmp
jae
xchg
mov
fbstp
enter
jb
lahf
aas
cwde
mov
adc
sub
leave
stos
outs
out
and
cli
lahf
leave
loop
out
data16
lock
test
or
pmuludq
or
fimul
xchg
aam
cmps
outs
enter
mov
call
test
cli
sbb
out
pop
push
jno
popf
ds
xchg
fucomp
mov
push
enter
jno
pop
cmp
data16
out
dec
mov
test
fdivr
sub
inc
pop
pop
shl
inc
mov
xor
test
mov
jns
popa
jp
mov
cmp
cmp
fild
pop
retf
mov
mov
in
mov
lock
popa
pop
pusha
retf
inc
les
ss
loopne
push
xchg
inc
inc
rcl
or
cwde
and
rcl
int
sub
movs
push
push
push
mov
out
test
imul
and
test
push
(bad)
jo
call
jge
mov
aas
inc
sti
mov
lds
push
icebp
test
sub
stc
rol
or
aas
dec
sub
mov
jae
xor
fwait
jo
ja
(bad)
gs
add
lahf
test
xor
xchg
inc
xchg
push
jmp
dec
xchg
lds
outs
movs
loopne
fldenv
pop
or
jp
adc
sbb
and
fst
jnp
push
les
mov
mov
dec
sub
int
adc
push
(bad)
lahf
mov
inc
pop
mov
and
mov
aaa
test
cmp
xor
add
sbb
scas
pop
add
jns
mov
dec
mov
hlt
sub
fsubr
pusha
pop
lods
(bad)
int3
adc
xchg
sub
movs
mov
jmp
adc
inc
nop
pop
cmc
jnp
mov
push
xchg
lock
ins
pop
lds
retf
sub
out
(bad)
and
or
jnp
sbb
jae
mov
xlat
xor
jo
call
jmp
mov
outs
les
out
push
enter
xchg
sbb
push
xor
xor
mov
fdivr
fsubp
dec
cmp
mov
add
jno
or
inc
sysret
inc
cdq
cld
push
jle
xchg
popa
and
xchg
loope
mov
inc
adc
adc
and
call
out
repnz
mov
in
frstor
dec
test
dec
adc
push
ror
jecxz
sub
jge
pushf
in
mov
hlt
fst
or
jns
adc
test
in
scas
mov
into
inc
cld
add
cmp
clc
rcl
xchg
mov
cmps
out
cmp
iret
sub
pop
pop
aas
xchg
vmovddup
dec
add
sbb
mov
pop
out
(bad)
mov
mov
mov
in
pop
dec
addr16
outs
addr16
popa
mov
out
sbb
mov
cli
fild
mov
in
in
retf
adc
mov
fsubr
mov
imul
jae
les
pop
retf
and
imul
retf
xlat
dec
daa
xchg
pop
mov
push
sub
fld
jno
out
ins
movs
dec
repz
mov
xor
jp
mov
sub
sbb
cld
out
out
push
and
add
adc
pop
sub
loope
xchg
xchg
cmp
cmp
js
ret
add
push
loop
lahf
mov
fdivr
shl
ja
(bad)
xchg
mov
push
and
jmp
jmp
(bad)
mov
sti
call
mov
jmp
and
dec
xor
mov
push
add
xchg
gs
mov
loopne
push
add
retf
fstp
inc
gs
sub
or
push
retf
jmp
test
dec
xchg
add
or
ss
jge
or
aad
and
ror
add
leave
mov
mov
ds
ins
bound
mov
dec
or
xchg
icebp
adc
jle
imul
dec
add
inc
dec
popf
lods
push
add
pop
mov
jne
ss
push
xchg
pop
cs
or
hlt
mov
add
cmp
sub
stos
cmps
aad
xchg
push
pop
sbb
pop
dec
in
push
std
cmp
test
and
add
pop
sbb
push
leave
xor
fucomp
stos
sub
mov
inc
in
in
mov
inc
sub
mov
push
sub
in
cdq
daa
scas
add
icebp
pop
into
sbb
stc
pop
jo
dec
ror
dec
sbb
call
(bad)
gs
cmp
daa
stc
mov
outs
push
fadd
outs
sbb
pop
hlt
cli
lock
add
sub
clc
out
jge
add
pop
shl
adc
sbb
mov
mov
ins
xor
(bad)
mov
leave
push
leave
idiv
xchg
pop
sbb
sbb
push
adc
sti
stc
xor
or
mov
push
pop
xchg
add
dec
std
mov
dec
mov
jns
fcomp
push
out
dec
or
add
jno
mov
pusha
mov
or
test
push
push
fcomi
or
add
ret
add
leave
push
arpl
je
popf
gs
dec
aam
sub
mov
cmps
scas
out
xchg
sub
(bad)
cs
jne
loopne
iret
popf
sti
mov
jl
outs
adc
jo
mov
in
pop
aaa
xchg
or
add
fs
jns
cmp
scas
mov
sbb
cdq
lods
mov
mov
dec
inc
ror
stos
and
mov
add
stos
test
retfw
(bad)
daa
stc
or
push
and
xchg
jp
hlt
dec
push
push
sub
mov
jmp
ins
out
aam
in
fisub
pop
sub
mov
dec
shl
fld
gs
add
jb
dec
test
mov
hlt
add
mov
mov
jo
mov
dec
popa
fidiv
(bad)
aam
fdivr
rcr
ror
mov
std
(bad)
mov
and
stos
leave
imul
iret
push
scas
mov
jecxz
jbe
push
pop
ret
outs
mov
sbb
mov
lock
mov
bsf
enter
cmp
push
rcr
mov
cmp
and
call
bnd
pop
xor
les
je
fwait
mov
dec
lods
aam
lea
sub
dec
xor
pusha
or
dec
int
out
xor
sbb
jge
mov
add
dec
je
cmp
in
cwde
cmp
sahf
int3
xor
adc
adc
or
lahf
stos
fsubr
lock
je
js
pop
xchg
out
mov
and
sub
pop
(bad)
ds
and
mov
xor
push
ins
(bad)
cmps
cld
xchg
xor
or
and
dec
(bad)
sti
adc
in
mov
inc
sub
mov
cs
in
cwde
push
lea
sub
sti
mov
in
arpl
push
add
pop
xchg
add
retf
arpl
ficomp
daa
sbb
sbb
dec
and
fidivr
push
sbb
fisttp
(bad)
mov
test
sbb
add
fstp
ins
jmp
sahf
push
sub
imul
add
push
rcr
rcl
pop
pop
mov
fsubr
pop
cmc
test
cmc
cmps
cwde
movs
mov
jae
push
mov
and
and
imul
jmp
push
jb
and
jae
out
ds
xchg
mov
mov
add
test
cwde
push
push
imul
or
rcr
sti
sub
add
sar
xor
cmp
push
inc
aas
jb
mov
out
push
inc
dec
bound
lock
mov
xor
in
mov
mov
fdivr
loopne
and
ins
mov
not
pop
ror
push
movs
test
pop
jb
scas
out
adc
outs
xchg
es
cld
mov
fwait
dec
mov
jmp
add
cmps
test
out
adc
cmp
js
dec
add
cmps
pop
outs
out
fstp
xchg
iret
loope
push
xchg
or
pushfw
jbe
xchg
ins
mov
hlt
mov
jo
test
sbb
mov
aas
sub
pop
pop
jo
mov
not
inc
pop
ss
xchg
xor
mov
mov
enter
rcr
daa
mov
mov
lea
push
pop
inc
div
das
or
jno
adc
not
inc
jl
push
iret
pop
nop
in
or
mov
sbb
or
lods
mov
bound
mov
sar
xor
test
dec
les
pop
push
fist
jle
jno
jne
cmps
cwde
sbb
jb
mov
mov
test
mov
or
arpl
ins
mov
jb
push
call
push
test
mov
dec
daa
pop
ss
sti
subps
lods
push
xchg
pop
push
loope
int3
adc
iret
and
xor
xchg
imul
aaa
fistp
mov
aad
ins
lahf
in
cs
xchg
scas
cmps
mov
xlat
in
cmp
mov
mov
push
shl
push
repnz
mov
jno
test
push
dec
mov
(bad)
push
adc
push
arpl
stos
cwde
pop
in
push
repz
cmp
dec
jo
xor
out
stc
inc
cld
xchg
sub
or
int3
repz
xchg
mov
scas
inc
mov
ror
fisttp
adc
fadd
out
gs
sbb
mov
adc
xchg
sbb
jbe
pop
sub
nop
and
inc
mov
sbb
add
add
test
cmp
sub
pop
xor
xlat
loopne
cmc
push
clc
mov
mov
(bad)
fld
inc
jbe
add
ret
adc
and
std
int
xchg
sbb
push
shl
or
jl
(bad)
mov
out
xchg
and
das
dec
mov
inc
shl
dec
xchg
popf
pop
retf
aad
std
(bad)
adc
mov
mov
sub
pusha
call
dec
jae
push
cmp
mov
out
jno
jecxz
aaa
cmps
mov
ins
test
inc
inc
xchg
mov
lock
mov
call
(bad)
jno
xor
fisttp
xchg
jae
stos
aam
jge
or
or
repz
push
mov
mov
in
je
sbb
sahf
mov
mov
fsub
pop
leave
jns
loope
out
(bad)
mov
mov
loopne
into
push
ss
mov
into
jo
jbe
xor
outs
sub
sbb
or
sub
and
add
or
je
into
pop
push
cld
push
sub
ins
dec
dec
sub
je
rol
xchg
push
ja
hlt
xor
sbb
mov
ret
shl
jmp
addr16
add
push
mov
sub
es
ror
sub
cwde
xor
pop
fmul
fcomp
mov
add
stos
icebp
outs
aaa
push
out
add
fisubr
sbb
adc
mov
mov
sbb
leave
mov
retf
pop
out
jnp
test
xchg
and
jl
xchg
int
push
push
leave
dec
or
add
ins
int3
adc
cmp
xor
push
cs
aam
xchg
js
in
sbb
pop
inc
jmp
fcom
cmps
lods
mov
sbb
test
shl
int
and
(bad)
adc
fcomp
call
xchg
cmps
sbb
inc
inc
inc
xor
mov
xchg
xor
in
dec
js
ror
rol
pushf
mov
mov
out
dec
or
data16
fdivr
adc
int
sbb
das
scas
adc
or
sbb
and
(bad)
dec
mul
in
(bad)
pushf
imul
mov
dec
or
jb
(bad)
mov
(bad)
(bad)
stos
cmp
test
aad
dec
test
dec
ins
lds
out
gs
xchg
jp
in
inc
or
jle
push
mov
popa
not
adc
aad
out
pop
int
mov
mov
(bad)
xchg
push
(bad)
sub
pop
add
push
in
jns
(bad)
pop
test
or
out
sbb
or
imul
dec
ret
out
or
ja
jne
call
loope
mov
arpl
(bad)
push
push
std
inc
jge
and
add
aam
imul
stos
mov
stos
mov
sti
dec
int
into
dec
jp
(bad)
dec
in
and
mov
(bad)
aas
push
cmp
xor
or
ja
jmp
shl
ret
and
call
sahf
in
sub
in
out
xchg
repnz
push
and
sbb
add
(bad)
xor
pop
test
cmp
jle
jge
adc
cmp
xchg
mov
add
mov
je
(bad)
fmulp
cmc
fldenv
shr
fist
repz
mov
mov
sub
sub
hlt
adc
pop
pusha
loopne
jb
mov
push
jbe
ins
jno
clc
push
sub
test
mov
jnp
loopne
push
jmp
inc
jmp
out
dec
scas
ror
fdivr
xchg
movs
xor
mov
out
push
and
or
mov
jle
mov
stos
cwde
stc
or
in
dec
adc
fisttp
daa
xchg
adc
cmp
cmp
xlat
(bad)
sbb
sbb
sub
loop
jo
cmp
lods
add
xchg
rcl
div
cdq
mov
adc
(bad)
in
jecxz
cwde
cmps
(bad)
jmp
add
pop
sub
inc
retf
add
cwde
xchg
loop
xor
pop
dec
jnp
xlat
cli
and
add
leave
mov
mov
or
movs
sahf
(bad)
mov
(bad)
jb
dec
mov
hlt
test
outs
pop
pop
mov
ins
push
cbw
or
mov
retf
and
rcr
jmp
and
mov
imul
jbe
fadd
xchg
inc
jmp
aaa
mov
jmp
ins
fsubr
or
(bad)
pushf
add
push
(bad)
movs
sub
push
and
inc
jb
sub
js
xchg
(bad)
sub
in
xchg
sub
add
add
cld
mov
not
sub
test
inc
mov
std
jne
icebp
test
fisubr
inc
jl
and
rcr
sub
loop
aad
or
xor
jbe
and
mov
and
call
(bad)
mov
sbb
cli
cmps
fadd
cmp
das
fwait
mov
mov
mov
popf
sbb
xor
mov
mov
pop
sbb
cld
mov
cmp
pop
in
in
imul
and
mov
xchg
fucomp
jp
push
xor
pop
inc
test
dec
jg
mov
pop
cmp
stos
popa
stos
cli
mov
bswap
cwde
arpl
inc
dec
aam
jo
mov
sbb
dec
mov
xchg
sub
aaa
fdiv
mov
xlat
fcom
pop
cmp
das
mov
in
test
out
and
mov
fstp
fstp
loope
call
jo
or
adc
add
bound
sti
and
lock
adc
inc
xchg
lahf
test
and
adc
jne
aaa
shl
xchg
mov
push
sub
push
jae
out
xchg
ja
outs
mov
jg
outs
loope
test
in
loope
jle
cmp
repnz
cs
arpl
icebp
and
cdq
in
(bad)
out
aas
dec
fnstcw
jmp
rcl
dec
or
and
mov
ret
sbb
adc
xor
mov
cmps
shl
mov
inc
sub
pop
mov
push
pop
adc
loope
mov
ins
ss
jle
xor
xchg
lods
lods
push
mov
ror
push
jmp
fsubr
stos
pop
inc
or
je
inc
out
pop
mov
pop
jo
xchg
test
or
js
fld
outs
sar
(bad)
jae
inc
xor
dec
xchg
jns
and
jmp
dec
sub
scas
sti
mov
imul
inc
push
pop
inc
adc
mov
ret
imul
sub
cmp
repz
outs
imul
retf
xor
cmp
xlat
sbb
fs
adc
movs
push
inc
aas
sub
fld
pushf
mov
jnp
xchg
icebp
aad
cmps
dec
inc
fadd
test
call
adc
cdq
dec
rcr
std
(bad)
jmp
mov
sbb
ds
and
nop
sti
add
xlat
sub
jg
lods
sbb
(bad)
sub
stc
dec
sub
add
fld
jb
inc
mov
jl
sub
and
shl
mov
mov
dec
xor
mov
icebp
ret
and
repz
sub
mov
sti
outs
hlt
adc
lods
cld
adc
and
mov
out
pop
fild
sub
pushf
sub
adc
ret
push
in
int
dec
mov
mov
(bad)
in
ret
rcr
aaa
cmp
pop
hlt
out
hlt
or
shl
adc
xor
iret
sti
pop
jbe
lock
jnp
outs
jne
out
add
xchg
aad
cmp
mov
push
inc
mov
jmp
or
cli
mov
enter
rcr
bound
mov
xchg
arpl
std
or
jne
retf
movs
inc
mov
cdq
mov
dec
dec
fsub
enter
(bad)
aam
fisubr
dec
sub
inc
or
cwde
rcl
jmp
adc
push
clc
or
jo
cli
mov
nop
inc
aad
xchg
jmp
daa
loopne
adc
hlt
out
pop
jb
cmp
ss
dec
mov
mov
scas
pop
push
mov
inc
or
jmp
test
cmp
or
mov
pusha
pop
add
arpl
loope
cmp
(bad)
in
out
xchg
out
jg
mov
pop
js
xor
cmps
movs
xchg
mov
push
add
adc
inc
push
sbb
cdq
xchg
mov
push
xchg
cmp
ins
mov
fwait
ret
inc
mov
push
pop
test
mov
xchg
lods
pop
lods
mov
inc
pop
push
add
cmp
inc
int
aaa
(bad)
xor
and
inc
stos
dec
lahf
xlat
push
cld
dec
xor
ins
pop
add
inc
ret
test
mov
inc
cmp
pushf
xchg
dec
jb
scas
jl
jge
cli
adc
cmp
sub
movs
mov
cmps
dec
sar
jbe
sub
iret
pop
xor
or
sub
das
test
xor
sub
out
(bad)
push
cmp
jo
jne
xor
pop
aas
ret
std
jnp
movs
(bad)
dec
inc
int3
retf
pushf
ret
xchg
fidivr
mov
jbe
gs
in
int3
fidivr
int3
sbb
adc
xchg
pushf
sub
sub
sti
sub
iret
pop
loop
lods
aaa
or
leave
mov
cwde
push
inc
call
pop
(bad)
jmp
push
mov
movs
xchg
out
ja
inc
ss
sbb
xor
stos
in
lods
sbb
ret
xchg
dec
mov
cmp
je
sbb
jbe
dec
and
out
imul
mov
js
sub
clc
mov
fistp
enter
xchg
fucomip
pop
push
dec
or
ret
stos
sbb
cmp
ins
je
cdq
mov
shr
sub
mov
adc
fs
out
and
push
push
daa
jo
lds
add
cmp
test
call
(bad)
scas
sub
fsincos
pusha
xor
in
push
sbb
xchg
push
sub
(bad)
jmp
xchg
inc
imul
xlat
mov
stos
inc
fdiv
add
adc
call
sub
mov
mov
cmp
retf
ret
loop
mov
fst
arpl
cmp
or
mov
cwde
aad
enter
dec
(bad)
jge
sub
pop
sbb
popf
or
loope
add
xor
js
stos
(bad)
mov
out
mov
push
mov
xor
mov
mov
cmp
sbb
add
lods
lods
xor
mov
xchg
adc
xlat
aam
and
and
sbb
daa
js
push
dec
xlat
addr16
xchg
inc
inc
bnd
mov
push
inc
sbb
and
mov
into
and
mov
xchg
into
mov
mov
test
frstor
mov
jbe
mov
outs
inc
add
sbb
mov
mov
int
adc
shl
add
fisubr
or
mov
cmp
movs
jnp
std
retf
popa
sub
mov
repz
rol
addr16
cmc
inc
rcl
add
pop
add
pop
test
iret
inc
std
jmp
cmps
jbe
in
int
push
mov
inc
and
ss
rcl
cmps
fisttp
push
or
dec
pop
or
pavgw
sub
repz
adc
pop
data16
cmp
retf
stos
or
mul
push
fist
bound
inc
fidivr
xchg
or
stos
mov
mov
sbb
jge
push
test
lods
inc
mov
ss
inc
mov
shl
into
ficom
repz
div
loope
(bad)
mov
jns
sbb
xchg
test
out
jnp
rol
lock
inc
mov
push
xchg
in
mov
mov
jne
add
pop
dec
add
xchg
pop
inc
mov
mov
out
data16
xchg
and
inc
add
dec
xor
sahf
push
scas
mov
mov
mov
mov
loope
mov
add
in
mov
dec
mov
xchg
push
icebp
fcomp
pop
cmp
scas
cmps
mov
lock
lahf
mov
retf
call
push
cs
rcr
mov
push
and
les
adc
pop
bound
mov
dec
(bad)
repz
out
pop
(bad)
sub
ret
dec
jns
(bad)
outs
in
adc
scas
rcr
das
push
(bad)
stc
sbb
inc
cwde
sbb
jmp
push
mov
les
retf
push
inc
aam
jbe
rol
sub
xchg
shl
fyl2xp1
(bad)
xor
mov
add
outs
stc
adc
sbb
inc
jb
call
js
jecxz
les
ficom
sar
fadd
out
sbb
jno
ror
and
call
ja
ins
cmp
movs
sub
push
call
push
xchg
dec
xchg
push
fld
pop
loope
adc
sbb
push
call
imul
sahf
loopne
rep
push
adc
or
add
ss
(bad)
push
je
jns
mov
mov
aam
mov
or
imul
out
push
bound
in
nop
cld
and
stos
fimul
jecxz
push
les
inc
xchg
out
push
cld
pop
sbb
cmp
jecxz
or
fisttp
test
(bad)
(bad)
ja
leave
ins
lods
adc
cli
mov
mov
jne
loopne
getsec
icebp
dec
mov
dec
cmp
int3
xor
adc
push
lds
adc
push
mov
popf
or
repnz
ja
push
stos
pop
push
loope
ds
enter
cmp
(bad)
popa
stos
mov
iret
and
and
fadd
mov
es
and
push
cmps
dec
cmps
mov
je
lahf
cmc
add
or
xor
aam
cld
in
movs
push
dec
adc
stos
popa
or
fmul
xor
pop
ins
add
dec
xchg
adc
rcl
mov
mov
loope
outs
sub
push
mov
push
and
outs
cmp
and
into
sbb
pop
adc
(bad)
jmp
loope
loope
test
mov
shl
leave
jb
fisttp
mov
popa
lds
mov
push
adc
and
and
xchg
shl
dec
and
call
and
pop
mov
shr
sub
test
clc
loop
inc
les
das
out
js
jns
repnz
xor
add
push
mov
scas
lea
cmp
pop
mov
cs
push
ins
cld
sbb
ret
imul
pop
outs
(bad)
or
mov
fs
cmps
xchg
and
pop
dec
and
call
ins
das
jb
jmp
jmp
push
jg
fs
push
xchg
dec
mov
jo
test
frstor
loopne
inc
push
jmp
repnz
sub
add
(bad)
int
fidiv
test
xor
jmp
jae
addr16
jb
mov
jmp
sbb
(bad)
mov
pop
lds
jae
outs
inc
sub
push
and
xchg
out
jnp
clc
jmp
call
push
test
je
inc
leave
scas
mov
push
push
scas
dec
sti
loope
dec
pop
mov
mov
scas
cmps
jp
add
lds
cmp
out
sbb
aas
pop
fild
(bad)
jbe
adc
into
stos
dec
pushf
cwde
xchg
scas
outs
push
not
ja
cmps
pushf
mov
shl
jne
aam
sub
xor
nop
mov
cmp
jmp
scas
sub
mov
push
jmp
ret
int3
call
inc
fst
or
push
xchg
ret
mov
mov
pop
adc
pusha
mov
(bad)
xor
retf
push
fidivr
cmpps
xor
inc
or
sbb
dec
mov
fiadd
or
mov
pop
inc
fld
test
imul
fcomp
sub
jmp
les
repnz
imul
adc
lock
push
xchg
lahf
dec
pop
or
repz
ret
sub
and
mov
(bad)
inc
ror
jo
cmc
and
pop
adc
test
sar
jae
aaa
pop
mov
cmp
and
and
dec
dec
stos
in
fs
pop
mov
(bad)
mul
jecxz
dec
inc
iret
loopne
or
jae
xor
pop
jno
lea
loopne
lods
leave
in
stos
xlat
sub
neg
push
mov
mov
lds
mov
(bad)
cli
imul
mov
in
jns
mov
mov
rcr
jmp
movs
in
sbb
jmp
dec
popf
ins
xor
fst
jge
lods
mov
xor
in
add
mov
cmp
cmp
in
(bad)
jp
or
aad
cli
sub
mov
mov
dec
into
push
adc
nop
mov
ret
cmp
add
push
and
xor
inc
scas
retf
dec
mov
dec
xor
push
aas
js
mov
(bad)
push
sub
movs
icebp
int3
das
imul
and
sbb
xchg
inc
cmps
shr
push
in
fisub
xor
mov
dec
(bad)
cld
cmps
pop
mov
in
inc
pop
popf
or
add
fadd
pop
fld
dec
push
ucomiss
mov
cmp
and
(bad)
sbb
adc
add
sub
arpl
push
in
xchg
aad
pop
out
les
cmp
add
cmp
pop
icebp
bnd
test
(bad)
push
aas
push
jg
fiadd
pop
ret
call
sbb
mov
xchg
mov
js
das
mov
std
loop
retf
repnz
das
xchg
adc
fisub
mov
in
mov
and
stos
(bad)
call
ins
scas
and
add
inc
(bad)
stc
aas
nop
dec
pop
mov
test
mov
xor
mov
or
in
pop
dec
enter
xchg
iret
mov
outs
out
push
scas
jmp
mov
pop
gs
je
in
and
jmp
xlat
daa
shl
adc
push
push
add
clc
and
outs
xchg
mov
mov
test
loope
jb
mov
fdiv
lock
test
and
xchg
arpl
pop
shl
ins
ror
sub
loope
int
jo
ins
js
or
repz
fucomp
xchg
in
stos
inc
mov
inc
in
xchg
push
mov
mov
or
dec
mov
and
(bad)
psubsw
jmp
xchg
int3
fisub
or
mov
cmc
sbb
pop
jg
(bad)
repz
mov
dec
adc
pop
cmp
adc
aam
daa
test
mov
dec
jge
or
mov
fnstenv
push
mov
and
pop
enter
stc
mov
and
mov
and
enter
sbb
xchg
out
(bad)
cdq
push
retf
into
jecxz
adc
jno
hlt
mul
out
and
jle
or
cmp
push
scas
dec
mov
stc
lods
sub
dec
rcr
cmc
sbb
imul
mov
shl
xor
mov
lock
mov
les
and
lock
sbb
mov
xchg
dec
pop
outs
push
dec
lds
imul
push
frstor
lods
scas
mov
cmp
inc
imul
mov
repnz
bound
cwde
xor
aas
sbb
or
adc
lods
ins
iret
in
fist
and
(bad)
(bad)
push
mov
out
xchg
icebp
repnz
mov
movs
out
cli
push
xor
jmp
ja
mov
jo
push
or
pushf
jne
(bad)
dec
sub
fcom
(bad)
pop
cld
mov
mov
sub
push
add
push
jmp
je
jl
rcr
adc
leave
xchg
jge
push
stos
mov
dec
dec
push
push
cmp
dec
pop
sbb
sar
inc
imul
pop
fldl2t
jbe
sbb
xchg
fistp
cmp
xor
inc
xlat
or
push
fwait
mov
xchg
out
xor
jg
out
and
xlat
das
test
test
push
out
rcr
and
(bad)
fucomip
call
push
cwde
bound
ret
out
cmovl
cmp
leave
sbb
mov
cmc
shl
fnsave
imul
xor
sbb
xchg
pop
jnp
adc
fst
mov
test
or
fnsave
ret
and
int3
lahf
lock
sub
cwde
sbb
mov
jmp
adc
xchg
inc
(bad)
call
mov
sub
jmp
loop
das
cmp
test
pop
mov
(bad)
cdq
sbb
push
daa
fld
jno
int
call
nop
cmp
sub
daa
jmp
aad
pop
sar
xor
push
xchg
pop
test
(bad)
jp
mov
push
call
sub
out
das
in
sbb
push
jl
push
call
jno
hlt
jnp
mov
adc
sub
not
lods
push
int
arpl
push
not
pop
push
mov
(bad)
aam
mov
inc
call
push
sub
aaa
jb
mov
inc
add
mov
movs
sbb
movs
pop
lods
or
fs
and
sbb
addr16
cdq
mov
(bad)
out
shr
std
pop
mov
cmp
mov
add
cmp
inc
out
cmp
xchg
test
cmp
pop
bound
xor
and
push
(bad)
rcl
xor
mov
loopne
repnz
push
out
(bad)
fdivrp
adc
cmc
test
push
mov
out
mov
or
sbb
and
dec
jmp
or
jp
push
in
cli
cmp
sbb
movs
cmp
arpl
out
aaa
test
mov
dec
jns
mov
mov
mov
data16
mov
sbb
cmps
loop
stos
and
(bad)
xlat
sub
nop
pushf
mov
ss
inc
aas
push
xchg
repz
retf
inc
cmp
sti
and
call
movs
mov
jno
ins
pop
cmp
sbb
pop
lock
js
out
sub
inc
push
pusha
dec
fldenv
ret
outs
or
scas
movs
dec
jb
sti
push
sbb
imul
jno
arpl
jl
fldenv
and
mov
inc
dec
mov
push
and
pop
call
ja
xor
leave
outs
sbb
repz
sbb
mov
mov
ret
cld
jp
jbe
pop
div
sbb
scas
leave
loop
call
shl
aad
dec
pop
clc
sub
push
mov
je
jo
pop
js
cmps
inc
jne
jmp
out
sub
xchg
cmps
pop
sub
xchg
xchg
nop
addr16
and
inc
pop
std
das
jge
push
inc
mov
shl
std
test
mov
dec
fstp
icebp
push
pop
push
fbstp
add
push
pushf
popf
int
add
xor
push
jmp
or
outs
dec
jnp
jge
xchg
cmc
aam
fwait
mov
ficomp
mov
pop
sar
call
cmp
shl
jecxz
retf
xchg
iret
(bad)
pop
addr16
int3
mov
gs
das
call
mov
sbb
adc
push
std
xor
adc
dec
lods
stos
fidiv
inc
out
outs
hlt
and
cmp
std
int3
loopne
dec
rol
(bad)
mov
sbb
push
fcomp
fs
fadd
ins
and
xchg
sub
mov
repnz
pop
mov
enter
xchg
test
push
add
addr16
sbb
mov
jbe
and
outs
mov
mov
xor
jmp
xor
add
pop
add
cmp
inc
(bad)
and
mov
adc
mov
mov
adc
jl
int3
in
dec
pop
sub
cmp
aas
pop
cmp
sbb
popf
mov
fs
out
in
and
sbb
mov
and
aad
cdq
outs
(bad)
pop
xor
out
cmp
adc
popa
push
enter
sbb
in
mov
cmc
bound
xor
jno
rcr
adc
not
test
and
jno
stos
mov
aad
(bad)
out
lea
or
or
sbb
add
cmps
pusha
sub
pop
sar
inc
jecxz
test
aad
ret
shr
je
rcr
push
iret
dec
adc
mov
fld
mov
xor
std
test
in
in
out
ud1
mov
out
add
sbb
movs
inc
fstp
(bad)
mov
pop
out
fmul
in
div
jecxz
jb
cmp
xor
repnz
or
aas
repnz
scas
repnz
popf
dec
jae
out
and
jnp
and
std
mov
mov
pop
loope
ret
fistp
test
xchg
xchg
les
mov
adc
in
retf
ss
test
xlat
in
push
inc
add
dec
test
xchg
mov
pop
lea
pop
(bad)
mov
jecxz
adc
stc
push
loope
aas
xor
inc
iret
jmp
jnp
adc
dec
pop
jae
inc
adc
addr16
loopne
mov
jmp
pop
inc
jnp
movs
add
mov
pop
adc
and
scas
push
aaa
xchg
dec
add
xchg
in
cmps
sbb
add
stc
pop
xor
xchg
(bad)
cli
inc
ja
sbb
mov
in
jo
outs
xchg
cmc
push
add
dec
bound
jecxz
rol
in
or
ss
xor
xchg
into
out
ins
ins
icebp
jbe
xchg
int
leave
jmp
outs
outs
outs
and
fmul
cdq
adc
xchg
int
adc
lds
(bad)
dec
mov
inc
xor
push
jmp
xor
retf
push
aas
mov
xor
repz
cld
outs
aam
pop
cs
or
mov
fidiv
mov
in
imul
in
sbb
call
pop
mov
push
jmp
mov
pop
sbb
cli
mov
mov
sbb
inc
popf
adc
and
int3
jl
js
enter
int
mov
aaa
mov
xchg
mov
iret
scas
push
fsubr
sbb
adc
mov
or
fs
jae
and
pop
addr16
jmp
fiadd
lahf
add
xor
leave
fs
shl
movs
sub
jae
xlat
inc
cmp
xchg
mov
mov
ds
jg
mov
mov
cmp
in
pop
into
push
(bad)
movs
lods
mov
fsub
sbb
adc
dec
ds
jnp
jo
adc
xchg
daa
pop
or
cmp
xchg
je
adc
and
pop
(bad)
int
adc
sar
outs
data16
daa
jns
adc
lods
out
dec
add
fstp
push
aas
sti
jp
jg
add
loope
inc
neg
jo
xchg
in
clc
or
xor
mov
mov
mov
sbb
lods
mov
repz
push
idiv
and
(bad)
dec
xor
xor
lea
inc
pop
imul
push
lahf
popa
push
push
repz
mov
push
imul
lods
retf
outs
scas
push
mov
add
push
jp
xor
lods
mov
mov
stos
pop
pop
mov
bound
mov
adc
jg
(bad)
mov
retf
pop
fucomip
inc
and
mov
or
mov
comiss
lahf
arpl
daa
mov
pop
xchg
xchg
ss
(bad)
adc
push
fidivr
dec
and
mov
adc
push
rol
inc
int
fisttp
push
adc
push
jno
mov
cwde
and
gs
dec
outs
into
sahf
inc
js
scas
push
or
jl
mov
sbb
ret
mov
mov
mov
imul
or
sbb
movs
imul
mov
retf
push
jecxz
(bad)
lahf
xor
call
shl
xchg
sysexit
mov
icebp
cmc
pop
mov
or
shr
sbb
mov
pushf
or
adc
shl
push
int3
(bad)
enter
dec
mov
retf
fwait
in
rcr
pop
repnz
add
or
lods
push
cmps
pop
or
les
pop
(bad)
ja
adc
sbb
sahf
or
aas
ins
push
push
sbb
inc
push
add
pop
test
rol
(bad)
xchg
dec
add
retf
cmp
sar
pop
das
or
pop
es
bound
das
(bad)
xor
mov
mov
inc
xor
xlat
jge
inc
mov
popfw
in
or
cmp
xor
stos
std
in
mov
xlat
loope
std
xchg
sar
sbb
arpl
lods
mov
test
ret
shr
dec
adc
mov
rep
xchg
mov
pop
int3
popf
fbld
retf
pop
fistp
mov
and
out
outs
mov
xor
adc
mov
xchg
jg
cdq
ss
sbb
pop
outs
arpl
out
sahf
adc
sbb
add
in
imul
add
sub
pushf
pop
clc
scas
inc
aam
imul
add
jg
ror
in
mov
mov
inc
js
mov
cmp
mov
mov
cmp
test
cmp
push
mov
and
sub
mov
inc
mov
aam
pop
mov
pop
adc
cmp
cmp
pop
(bad)
es
nop
std
cmp
lahf
adc
int
xchg
pop
fild
daa
lods
stc
xchg
fs
loopne
and
jo
dec
push
into
adc
jno
xchg
mov
and
clc
dec
push
mov
fnsave
push
hlt
lock
xor
ror
add
sub
fxtract
repz
dec
mov
cmp
xor
jbe
lods
fbld
shl
and
sbb
(bad)
outs
shl
adc
jmp
movs
pop
call
cmp
mov
push
or
std
inc
jecxz
cmc
adc
test
jo
pop
aas
add
sub
(bad)
mov
out
lahf
push
adc
shl
scas
div
fwait
stc
mov
imul
pop
xchg
scas
in
(bad)
mov
inc
sbb
pop
popa
icebp
dec
dec
cmp
aaa
shl
iret
mov
pusha
xor
jbe
jae
adc
jmp
push
xor
rsm
mov
cs
leave
inc
test
aas
inc
je
ins
ds
or
mov
jmp
fs
(bad)
imul
xchg
pusha
arpl
call
push
daa
and
das
xchg
div
stos
imul
and
scas
inc
xchg
dec
jmp
sbb
call
push
leave
dec
rcl
jl
fs
jle
mov
push
or
bound
push
or
dec
pop
inc
cmc
fisubr
fwait
pop
cmp
scas
dec
pop
in
dec
retf
sub
pop
sbb
shl
mov
pusha
mov
dec
adc
adc
shl
mov
sbb
pushf
movs
adc
jl
cmp
(bad)
or
pop
dec
mov
and
mov
iret
mov
mov
nop
mov
sub
arpl
xchg
pop
dec
(bad)
xor
xor
push
sub
ret
enter
jo
sbb
adc
adc
loopne
cdq
xchg
fwait
lods
adc
test
cmps
pusha
fstp
mov
mul
or
xchg
dec
call
dec
and
push
mov
lods
(bad)
xchg
iret
xlat
and
xchg
enter
jmp
mov
xor
cmc
cli
test
popf
enter
cli
mov
movs
mov
push
call
inc
and
or
inc
cmp
xchg
pushf
pushf
and
fs
dec
mov
stos
push
cmp
nop
sar
adc
adc
push
(bad)
sahf
inc
in
dec
aam
leave
test
rol
fimul
mov
jmp
pop
sub
cmp
outs
les
je
scas
mov
or
outs
lahf
xor
xor
mov
adc
adc
mov
fld
fadd
aad
jne
jae
mov
fiadd
rcr
xchg
rcr
aas
pop
dec
cld
jae
xlat
adc
fimul
test
sbb
lds
fxam
xchg
add
mov
stos
popa
push
push
inc
loope
ds
ins
aaa
icebp
sub
pop
aas
push
outs
and
mov
xor
fs
xchg
xor
icebp
mov
icebp
dec
xor
stos
shl
jno
pushf
cli
mov
adc
aas
and
mov
in
popa
iret
or
mov
push
in
jecxz
cdq
out
cmc
cmp
xchg
pop
or
mov
or
jae
jae
jle
les
adc
add
jmp
sub
aad
pop
and
ja
fwait
in
repnz
lods
push
push
push
repz
xchg
test
outs
retf
test
or
lea
jmp
mov
xor
pop
mov
arpl
push
movs
or
inc
fidiv
scas
cdq
sub
inc
xor
mov
nop
mov
addr16
inc
into
pop
(bad)
arpl
xor
arpl
xchg
fdivr
dec
mov
into
arpl
push
sbb
jae
cwde
jle
int3
scas
add
test
pop
mov
push
scas
pop
ret
push
shl
daa
popf
mov
movs
dec
mov
xor
add
inc
cmp
xor
cli
cmps
pop
inc
js
mov
jge
mov
rcl
fiadd
and
xor
xchg
pop
out
add
shl
(bad)
pop
int3
int3
adc
xor
inc
lahf
push
jp
inc
in
ror
jne
xchg
aaa
push
and
leave
jmp
repnz
fcmovb
sbb
data16
iret
add
xor
scas
test
lods
pop
xor
es
mov
jecxz
jo
ret
aad
jl
push
push
std
jo
fdivp
ss
sbb
(bad)
fidiv
cmps
ins
push
mov
pop
call
cld
add
in
mov
(bad)
dec
cli
lods
enter
(bad)
mov
arpl
fnsetpm(287
dec
in
dec
xor
push
loopne
cld
jmp
aaa
or
loop
push
push
sbb
push
daa
movs
xor
loop
test
inc
mov
daa
aas
hlt
xchg
mov
mov
dec
ds
add
fimul
cld
std
ja
icebp
jle
hlt
sbb
fist
push
repnz
std
dec
pop
inc
aam
push
inc
xchg
dec
pop
(bad)
lods
repz
es
retf
fmul
add
and
je
sub
es
mov
adc
xor
add
loope
aas
pop
xchg
jbe
push
cdq
sub
mov
xchg
xchg
inc
dec
sahf
leave
dec
mov
mov
jmp
fdiv
jp
test
or
mov
sahf
retf
jb
fist
fidiv
mov
repnz
xchg
scas
add
mov
je
icebp
and
pop
inc
stos
sbb
pop
cdq
aam
mov
fldenv
pushf
test
mov
cli
ins
cld
je
add
neg
aam
mov
ins
cld
arpl
loop
mov
mov
stos
jmp
mov
test
pop
cmp
mov
jl
mov
and
push
push
mov
adc
jnp
jnp
test
stc
inc
cmps
adc
push
into
pop
inc
xchg
aas
dec
push
rcl
cdq
in
xor
push
fdivr
iret
or
add
clc
fbstp
loope
aad
and
mov
lock
xchg
lahf
loopne
ret
xchg
ins
(bad)
fist
test
inc
add
xor
jl
mov
out
or
retf
in
gs
(bad)
aaa
retf
cmp
call
mov
std
retf
test
fstp
fst
into
(bad)
sub
bound
fsub
mov
xchg
imul
add
arpl
sub
pushf
das
push
add
jmp
jecxz
stc
ins
repz
bound
xchg
sub
mov
pop
cmp
es
push
add
arpl
rol
jmp
xchg
mov
mov
fidivr
add
sub
ret
push
enter
sbb
stos
mov
cmp
pusha
cmps
mov
loopne
sub
lea
mov
mov
xchg
sbb
cmp
pop
lds
push
pop
pop
repz
push
outs
pop
pushf
xor
scas
or
sub
mov
je
or
jmp
sub
mov
push
dec
loopne
sub
mov
mov
mov
inc
or
les
inc
inc
ret
retf
cmps
mov
jecxz
mov
mov
pop
ja
and
(bad)
fwait
adc
fsubr
mov
fdivr
test
int3
ds
add
cmp
and
jmp
lds
mov
pop
fadd
test
cmps
fadd
and
or
or
rcl
inc
jecxz
sbb
addr16
push
pop
out
sub
(bad)
movs
ss
stos
mov
sbb
inc
push
scas
pop
push
push
jmp
aas
push
push
gs
ret
out
jp
xor
icebp
mov
and
(bad)
and
test
loope
mov
fisubr
scas
das
imul
push
sub
inc
popf
retf
test
mov
and
std
mov
inc
xchg
inc
jo
mov
mov
test
xchg
outs
sub
pusha
sbb
sub
repnz
icebp
cmc
cmp
pop
and
enter
fild
fisttp
push
inc
outs
dec
add
xchg
xor
and
or
data16
fdiv
mov
lds
pop
aad
mov
pop
jge
fld
mov
xchg
pusha
dec
sbb
or
call
in
and
sahf
add
mov
movs
xchg
or
dec
movs
and
outs
(bad)
ins
adc
mov
enter
pop
add
xchg
ror
inc
xchg
fwait
cmp
lds
mov
cs
neg
arpl
lock
dec
push
adc
shr
pop
(bad)
dec
push
xchg
icebp
pop
adc
daa
pop
cmp
jle
jmp
or
popf
xchg
mov
mul
out
mov
jmp
xor
fbstp
cmp
jo
mov
add
ja
push
fucomip
loope
dec
movs
mov
adc
mov
sbb
inc
push
cdq
dec
dec
sbb
inc
pop
mov
icebp
push
mov
or
xor
inc
sbb
xchg
dec
les
sub
or
fcomp
(bad)
bound
pop
pop
dec
inc
outs
fcomp
mov
push
pop
arpl
pushf
dec
push
fstp
push
jns
cli
adc
or
mov
add
inc
mov
loop
inc
mov
mov
and
sub
xor
add
sub
shl
mov
gs
sbb
ret
jb
dec
jp
in
test
or
retf
jne
(bad)
loop
push
mov
and
mov
sbb
ja
xchg
jae
cmp
sub
inc
lea
jle
dec
jle
add
lahf
xor
xor
rol
out
inc
mov
addr16
push
test
add
mov
dec
pop
les
push
aam
arpl
jg
xchg
xchg
jb
jmp
bound
int
mul
jne
das
pop
out
out
adc
inc
test
out
mov
xor
popa
xlat
cmps
fisttp
outs
mov
and
je
mov
cmc
xchg
mov
mov
xchg
in
ins
xchg
push
sar
in
int
int
mov
out
test
mov
(bad)
sub
mov
inc
mov
ret
push
or
xlat
dec
xchg
inc
xchg
test
pop
jbe
pop
sbb
out
scas
mov
xor
arpl
fld
xor
add
in
xrelease
leave
sbb
mov
fadd
mov
push
xchg
xchg
pop
cmps
loope
cmp
jl
fisubr
jbe
sub
dec
jno
mov
jmp
rep
mov
cmovnp
jg
scas
lea
xchg
into
push
fst
dec
push
call
scas
arpl
test
pcmpgtw
outs
push
mov
pop
dec
in
(bad)
jmp
sbb
pop
hlt
lock
push
inc
popf
mov
in
xlat
test
xor
daa
adc
inc
xor
xchg
dec
cmp
aad
add
fyl2x
push
inc
adc
ins
cld
mov
stos
fldcw
repnz
pop
shl
loop
in
jle
mov
mov
rol
fs
movs
jno
scas
or
fcom
inc
adc
js
dec
pop
cmp
call
xor
cwde
push
cwde
sbb
add
loopne
sub
cmp
pop
add
mov
imul
(bad)
data16
das
and
les
bound
in
arpl
pop
ins
jae
mov
sub
call
mov
xchg
rcr
imul
and
ins
xor
into
rcl
ror
dec
into
mov
and
(bad)
or
xchg
push
xchg
sbb
cmp
pushf
add
push
movs
hlt
adc
sti
push
fwait
test
popf
mov
mov
xor
mov
xchg
out
(bad)
push
mov
mov
mov
imul
pop
or
ror
lock
xor
xor
mov
xor
scas
push
sar
jne
std
dec
dec
xchg
dec
push
cmp
sub
loopne
mov
clc
test
ja
push
mov
or
jmp
ins
and
aam
iret
or
xor
icebp
sub
sbb
xor
inc
mov
adc
dec
inc
cmps
popf
popf
xchg
dec
movs
pop
cmp
out
fistp
add
fcmovb
pop
xchg
inc
int
rcr
dec
sub
pop
and
inc
fucom
jne
or
jecxz
aad
shr
popa
jmp
xchg
mov
jne
pop
sbb
movs
ret
jb
sbb
std
in
shl
xor
std
push
mov
adc
xor
fcmovne
mov
in
inc
adc
push
jmp
(bad)
mov
jnp
ret
mov
xlat
shl
call
repz
jp
mov
rol
ret
xor
in
sub
xlat
mov
inc
sahf
xchg
inc
jl
arpl
jnp
int
sub
xchg
or
repz
xor
in
push
mov
and
ins
push
jnp
aad
icebp
test
jmp
jg
fwait
in
outs
mov
jb
icebp
scas
ss
test
pop
jb
cmp
aad
push
adc
(bad)
(bad)
xchg
hlt
or
test
mov
stos
mov
jp
es
in
js
mov
push
adc
lock
mov
mov
mov
cli
mov
(bad)
rcl
mov
push
sub
add
je
fistp
xor
retf
and
addr16
out
xor
sbb
mov
jbe
loopne
push
dec
mov
je
cmp
mov
cs
js
scas
dec
aaa
imul
sub
xchg
inc
add
inc
lahf
lea
mov
jp
pop
popa
xchg
sub
mov
ins
sbb
cmp
pop
adc
inc
jne
loop
hlt
push
ret
ins
imul
rol
jge
sub
cmp
or
ror
dec
dec
adc
or
mov
push
js
fs
cmps
adc
in
xchg
(bad)
js
cmp
push
mov
inc
add
sub
add
adc
nop
push
int
mov
dec
(bad)
fldenv
xlat
aas
loopne
cmp
fdiv
stos
dec
lods
stos
je
cli
dec
dec
sub
jge
sub
inc
add
push
mov
into
jae
or
xchg
pop
push
repnz
or
and
dec
mov
or
xor
cs
jmp
inc
stc
mov
jmp
and
mov
and
bound
rcl
cmp
push
push
jmp
mov
jg
mov
xor
add
and
jle
test
pop
or
(bad)
xchg
sbb
jno
and
and
push
in
jmp
sbb
cmp
pusha
push
es
fiadd
sub
sbb
cmps
call
inc
inc
sbb
add
out
jecxz
(bad)
aam
sub
xchg
sahf
mov
pop
mov
fisubr
pop
or
ror
inc
test
fwait
jns
in
xor
repz
xchg
and
gs
adc
es
(bad)
fstp
outs
sub
jnp
adc
cmp
sbb
mov
inc
pusha
(bad)
fsub
push
not
push
jge
stos
push
call
mov
(bad)
pop
loopne
shr
inc
sbb
xor
mov
(bad)
out
jo
sub
ret
pop
jmp
pop
mov
sbb
and
js
aaa
loopne
retf
jo
scas
xchg
sbb
dec
mov
(bad)
lods
pop
in
(bad)
jmp
add
jg
sub
je
ret
add
lea
mov
movs
ret
(bad)
pop
mov
cmps
push
test
adc
repz
or
mov
into
sub
cmp
jns
ins
xor
push
stos
sbb
iret
pop
fs
pop
push
div
jbe
test
add
xchg
fidivr
push
lods
stc
iret
mov
sbb
mov
push
pop
cmp
xor
les
mov
xchg
pop
xchg
and
ret
ret
fist
adc
jmp
imul
add
test
ds
push
jbe
mov
dec
lock
(bad)
pop
imul
add
sbb
sub
mov
imul
(bad)
jnp
xor
into
or
out
jns
add
jge
out
pushf
jmp
test
jp
dec
jb
xchg
jne
jg
(bad)
data16
movs
std
mov
lods
pop
adc
adc
scas
enter
xor
shr
sar
and
stos
cmp
retf
scas
and
test
xor
mov
mov
adc
lahf
icebp
loopne
push
push
sub
pop
inc
stos
or
xchg
pop
fsubp
push
mov
out
push
and
mov
push
adc
add
hlt
mov
jnp
push
cld
xchg
inc
cwde
inc
(bad)
dec
pop
xor
xchg
daa
cmp
dec
int3
rol
add
int
ins
dec
xchg
ror
cld
inc
push
and
sbb
pop
jmp
push
pop
xor
xchg
add
pop
xlat
pop
sub
aam
mov
add
xor
pop
(bad)
popf
adc
loop
pop
jae
xor
iret
adc
mov
xor
or
pop
sti
jl
sub
shl
call
pop
mov
adc
sbb
cwde
int3
mov
ins
xchg
inc
pop
ret
sbb
clc
inc
xlat
jge
mov
in
or
or
push
push
dec
and
xor
push
dec
pop
push
sub
outs
enter
imul
pushf
jb
call
mov
cmp
popf
sub
std
cmp
loop
dec
into
out
dec
dec
inc
pop
xchg
adc
xor
fdivr
int
leave
aas
stc
stos
or
push
ss
aad
cmp
adc
pusha
(bad)
fidivr
ja
jns
xchg
das
cs
fcomp
les
pop
lods
mov
push
jmp
lock
nop
push
ss
hlt
test
xlat
lock
pop
fsub
mov
xor
mov
into
jmp
sub
bound
std
icebp
into
sub
cwde
lock
jl
(bad)
pop
out
mov
data16
xlat
rol
mov
rcr
fwait
or
iret
and
cmps
fisttp
dec
out
push
daa
push
pop
mov
dec
pop
dec
and
mul
mov
and
pop
out
std
add
mov
pop
imul
imul
mov
test
inc
mov
cmp
pop
inc
sub
sub
mov
and
mov
and
movs
mov
mov
cdq
scas
or
vandnps
pop
sub
ins
ds
in
jmp
push
int3
call
retf
dec
or
test
jmp
cmp
jg
xor
pop
sub
fist
fs
js
movs
and
push
pop
xchg
inc
loope
xor
jae
push
mov
(bad)
das
pushf
mov
adc
sub
and
bound
push
mov
xor
stos
je
pop
in
adc
frstor
in
mov
(bad)
les
inc
cmps
jne
mov
add
(bad)
xor
mov
xlat
out
sub
add
aas
xor
xchg
jg
data16
cmp
enter
pop
retf
xchg
adc
in
mov
aas
(bad)
xchg
cmp
int3
int
pop
xchg
gs
dec
pop
inc
push
sbb
outs
push
cmp
jno
sub
pop
sub
xchg
imul
jne
add
cs
lock
push
mov
jge
adc
fisubr
imul
setl
dec
repz
outs
dec
add
jp
xchg
dec
mov
cli
shl
sahf
dec
sbb
xlat
xchg
inc
sbb
lahf
ja
jb
and
repnz
jb
in
iret
fld
mov
xchg
sbb
and
sbb
rcl
mov
xlat
fidivr
daa
mov
in
xor
xchg
pop
jne
dec
icebp
mov
push
and
cli
popf
icebp
and
rcl
loopne
pushf
test
jno
dec
mov
(bad)
push
mov
mov
nop
sbb
add
sbb
or
add
jle
or
das
or
inc
stc
dec
(bad)
mov
xor
inc
std
dec
fiadd
shl
leave
(bad)
xor
mov
inc
cmp
jae
shr
xchg
add
xchg
je
(bad)
mov
jb
jns
scas
dec
push
xor
adc
cmp
mov
ret
shl
cmp
mov
jne
mov
mov
ss
mov
and
dec
gs
loope
inc
lock
mov
ja
dec
daa
sti
dec
add
add
jle
stc
imul
test
(bad)
stc
stos
mov
jge
adc
repz
or
mov
call
inc
push
mov
test
gs
push
sbb
addr16
adc
cmc
test
aaa
cdq
adc
cld
xor
mov
sbb
xchg
dec
mov
fwait
out
cmp
cmps
scas
add
mov
addr16
push
(bad)
pushf
mov
jl
adc
inc
jbe
push
pop
push
inc
imul
cli
jmp
xchg
xchg
(bad)
(bad)
xor
or
arpl
lahf
xlat
cwde
push
add
int3
ja
jmp
inc
inc
into
cld
pushf
lea
mov
movs
and
(bad)
in
mov
ret
pop
retf
adc
jle
or
ss
jge
mov
call
(bad)
push
xor
ins
imul
and
jo
retf
das
pop
retf
arpl
and
fild
fldenv
aad
mov
out
push
mov
xor
mov
push
dec
mov
jl
clc
pusha
jmp
dec
xchg
neg
cmp
pop
mov
cmp
xchg
test
or
js
adc
cmp
cmp
pop
dec
pushf
aaa
or
jl
call
(bad)
aaa
mov
xlat
aam
lahf
dec
and
pop
repz
sub
cmp
popf
call
or
fld
data16
sbb
jmp
xchg
sar
lds
popf
cmp
sbb
xor
or
or
inc
cmps
sub
lock
add
pop
or
lea
pop
adc
inc
mov
push
cmp
pop
movs
push
iret
popa
ins
and
aaa
out
stos
push
lds
add
push
mov
pop
add
ss
cmps
mov
pop
mov
pop
mov
xlat
in
inc
add
movs
and
hlt
pusha
(bad)
lods
mov
pop
aas
popf
dec
dec
xor
jle
add
push
dec
out
or
repnz
das
xor
xchg
out
iret
inc
mov
pop
mov
jl
or
sbb
test
ja
pop
inc
dec
inc
pusha
mov
(bad)
out
(bad)
retf
mov
mov
cmc
sar
psubsb
or
push
js
(bad)
aaa
loopne
loope
cmp
and
mov
mov
not
popa
movs
mov
pusha
jne
sti
retf
push
pop
push
shl
shl
pop
pop
mov
int
mov
sbb
xor
inc
bound
data16
mov
cmps
cdq
dec
jmp
test
jp
push
push
inc
adc
int
push
ret
jmp
cmps
jmp
push
xor
cmp
repnz
push
pushw
lahf
push
fimul
cld
aad
push
xchg
pop
js
test
fwait
mov
mov
mul
inc
inc
cmp
cmp
push
xchg
jbe
in
inc
cmp
or
xchg
retf
cld
pop
(bad)
fucom
cmp
repz
sbb
jmp
xchg
bound
push
mov
add
leave
mov
push
xor
std
mov
mov
pop
pop
cmp
and
add
push
pop
jo
jbe
push
test
jmp
and
shr
or
push
mov
stos
popf
icebp
push
mov
cmc
mov
xor
in
add
adc
test
(bad)
shr
mov
sub
imul
jnp
pop
lock
(bad)
(bad)
mov
call
scas
(bad)
outs
call
or
sbb
rcl
arpl
sub
sub
int3
ins
jb
add
and
int
test
loopne
mov
aaa
scas
mov
push
rcl
das
or
ret
cmp
add
cmp
pop
ret
or
jle
idiv
jo
mov
push
pusha
xor
lods
cmc
js
pop
xor
fmulp
and
scas
mov
sbb
jns
popf
inc
adc
in
mov
imul
jbe
fisubr
aad
lahf
call
ds
push
cmp
and
std
jmp
jg
pop
cmps
les
adc
loope
inc
inc
hlt
push
xor
out
stos
call
pop
sbb
bound
outs
out
outs
cmp
add
std
or
stos
xor
sbb
ret
sbb
xor
pusha
jecxz
sti
les
sbb
xor
ret
pop
(bad)
xchg
cmp
xchg
addr16
pop
xor
xchg
pop
mov
loop
je
loopne
in
std
jg
js
mov
mov
push
jnp
fcmovnb
push
fucomip
repz
cmp
loope
jg
or
das
sub
and
sbb
stc
pop
xchg
sub
jns
movs
fbld
jno
in
jnp
call
adc
cmps
or
dec
neg
mov
mov
and
jmp
call
lods
and
pop
inc
sub
aaa
xor
lahf
push
jle
add
fs
add
xchg
xor
xchg
xor
xchg
add
jmp
dec
inc
pop
ret
ret
outs
out
dec
sbb
mov
adc
cmps
iret
and
and
add
mov
xchg
inc
in
xchg
mov
outs
cmp
out
(bad)
fld
pop
shl
repnz
sbb
xor
outs
pop
in
jno
jno
movs
shl
cdq
mov
nop
fisttp
sub
jecxz
cdq
push
jmp
je
sbb
pop
daa
mov
or
xchg
push
lea
mov
in
inc
test
adc
icebp
or
ret
icebp
out
les
inc
push
push
pushf
mov
data16
rcr
stos
cli
jg
into
cli
pop
pop
or
mov
push
jmp
loop
xor
int
push
inc
sub
shr
adc
ja
pop
push
sbb
xchg
pop
jae
inc
push
sti
jl
push
out
jae
mov
repz
jbe
fwait
or
mov
fidivr
xor
jmp
inc
mov
jp
jb
retf
pusha
sbb
repz
lods
xor
push
sub
lds
jp
fdivrp
cmp
sbb
jg
mov
adc
ins
mov
or
movs
je
xor
retf
pop
cmps
stos
cdq
xchg
aam
aaa
pop
fimul
ins
inc
cli
jno
lea
inc
pop
add
add
jae
nop
mov
mov
sti
fist
add
cmp
inc
adc
mov
sub
imul
fld
rcl
or
dec
sbb
adc
push
ja
pop
int3
dec
aad
inc
movs
(bad)
fld
repz
or
je
ret
add
pop
mov
ds
daa
xchg
xchg
pusha
adc
sub
or
jecxz
inc
mov
or
jmp
outs
sub
sahf
cmp
fmul
(bad)
stos
push
or
stos
ins
stos
popa
rcr
int3
les
popa
jg
addr16
xchg
sbb
outs
jno
fbld
loope
push
cli
inc
inc
jg
out
mov
inc
pop
adc
xchg
cmp
mov
xor
aaa
inc
jno
and
sbb
arpl
sub
jb
mov
je
or
or
push
nop
sbb
sti
ret
(bad)
push
jg
and
and
xor
mov
stos
sub
adc
cmp
mov
cmc
mov
repz
sbb
and
cmps
mov
mov
ins
(bad)
lea
jae
lock
sahf
jecxz
add
xor
cmp
out
aaa
cmp
dec
dec
or
aad
push
mov
mov
outs
pushf
sbb
ins
std
xchg
xchg
repz
cmps
jecxz
test
clc
inc
lock
sub
popa
xchg
stos
mov
pop
(bad)
fld
pop
xchg
mov
mov
inc
adc
cmp
addr16
and
or
neg
mov
xchg
mov
sub
daa
xlat
sub
adc
daa
pop
(bad)
cmp
cmp
sahf
cmp
and
sub
add
inc
add
add
ret
retf
push
adc
mov
mov
aam
or
call
cdq
rcr
retf
lods
fldcw
pop
je
pop
jb
and
push
lds
sbb
mov
fs
mov
icebp
push
mov
fild
mov
add
call
dec
xchg
mov
aas
lds
js
loopne
mov
jb
(bad)
imul
fnsave
xchg
pop
jns
gs
mov
outs
jno
cdq
hlt
aas
dec
mov
pop
inc
pop
xchg
repnz
mov
push
add
jecxz
jnp
jmp
jbe
jp
fs
lds
sahf
mov
mov
xchg
leave
sub
inc
js
sub
mov
jmp
or
sub
lods
out
gs
rol
push
lods
pop
cmp
jnp
inc
(bad)
lahf
xor
push
and
sbb
xchg
cmp
out
test
out
in
jbe
sbb
mov
jl
inc
test
mov
pop
xchg
inc
push
out
inc
ss
mov
aam
jp
out
mov
pop
lahf
push
jecxz
mov
xchg
cmp
jne
in
imul
xor
inc
sub
out
and
(bad)
pop
push
inc
stos
sub
xchg
retf
(bad)
mov
das
sahf
out
call
inc
imul
adc
ins
pop
mov
mov
push
add
sub
outs
cmp
dec
aam
cmc
cwde
or
cmp
pop
imul
cs
xchg
inc
gs
gs
push
(bad)
jnp
(bad)
rcl
xchg
pop
test
and
mov
jmp
(bad)
mov
pop
jnp
sar
popf
retf
aaa
nop
sbb
mov
sar
cmp
inc
ja
jle
(bad)
aas
int
mov
inc
aas
sub
jbe
cmp
push
sub
push
cmps
add
aad
cmc
loope
ja
imul
cmp
jmp
sub
ins
in
push
iret
and
pop
mov
das
push
shld
enter
mov
jo
pop
jns
dec
pop
in
fisub
mov
dec
js
fidiv
cmp
mov
imul
idiv
dec
scas
cmp
mov
test
sub
pop
div
leave
adc
bound
xchg
addr16
jg
push
mov
mov
pop
adc
in
mov
aam
add
push
xchg
in
fndisi(8087
push
std
dec
xchg
mov
(bad)
into
out
and
lods
push
push
jno
fidivr
inc
push
mov
pop
fisttp
pop
sbb
fcom
mov
jp
aaa
test
sbb
pusha
cmp
pop
jb
jge
mov
cmp
pop
push
pusha
(bad)
cmp
cmp
or
test
daa
fcom
bound
sbb
into
rol
cmp
sbb
dec
mov
outs
out
nop
push
xchg
pusha
rol
aad
push
cmp
pusha
icebp
xchg
in
into
mov
xor
and
cwde
cmp
xchg
xchg
xor
xchg
dec
cdq
movs
inc
leave
mov
mov
outs
out
sti
mov
adc
push
test
xor
retf
inc
pushf
enter
int3
das
movs
adc
mov
mov
mov
stos
fcmovbe
out
xlat
aad
push
cmp
lahf
inc
mov
jge
push
and
lea
and
mov
(bad)
imul
sbb
hlt
jecxz
mov
jmp
in
or
inc
enter
pusha
out
cmp
sub
pop
xor
add
popa
rcr
dec
mov
pop
xchg
call
out
jge
sbb
out
hlt
loopne
rol
pop
push
xchg
clc
in
pop
fimul
xchg
and
lods
adc
adc
xchg
call
scas
mov
xchg
pop
and
mov
lods
clc
ins
and
sbb
mov
add
sbb
imul
repz
xchg
sbb
into
pushf
loop
add
push
mov
inc
mov
or
stos
xchg
pcmpgtb
cwde
adc
jg
mov
fdiv
cmp
scas
xchg
push
out
jb
mov
sbb
scas
mov
(bad)
repnz
add
xor
imul
mov
loopne
push
fist
test
cmp
inc
adc
xchg
mov
loopne
inc
jne
sbb
es
in
popf
xor
(bad)
pop
and
xchg
xlat
mov
rol
ins
in
mov
push
dec
xchg
cmp
push
gs
test
xor
pop
sub
dec
imul
loope
mov
aam
arpl
and
fld
push
lea
cwde
sub
mov
mov
mov
nop
int3
jae
push
push
mov
pusha
ret
rcr
sbb
and
sysexit
mov
retf
movs
xor
xor
fnsave
retf
int3
repz
scas
mov
dec
jbe
nop
dec
cdq
sbb
cli
push
cwde
loopne
cli
xor
dec
add
sti
pop
repnz
xor
shr
scas
stc
add
in
std
mov
daa
jge
xchg
mov
mov
sahf
out
push
inc
cdq
arpl
cwde
dec
sbb
mov
jge
sub
cmps
mov
mov
btr
sbb
les
cli
retf
sub
or
idiv
aad
cmp
mov
das
xor
push
cmc
mov
cs
dec
repz
pop
jb
pop
and
mov
jbe
fldenv
fcomp
mov
imul
fld
out
jl
inc
inc
es
aas
xor
adc
loop
dec
fwait
call
mov
mov
into
rcr
je
jmp
in
leave
xor
std
call
out
sub
int3
cli
dec
inc
mov
inc
stos
adc
andps
xor
call
repz
ins
clc
and
loop
fild
jmp
fisttp
mov
sbb
sbb
mov
jmp
xlat
mov
and
mov
xor
adc
or
sbb
and
xor
sub
not
push
mov
out
inc
or
ret
sub
stos
aam
xchg
mov
fisubr
dec
into
dec
jno
movsx
and
fisub
and
mov
int
sub
lahf
add
daa
push
sbb
in
add
hlt
test
xor
add
es
fbstp
out
mov
jnp
outs
repz
mov
sub
sbb
dec
xchg
jns
fldcw
add
ss
jmp
dec
icebp
ja
push
into
sar
in
jbe
adc
mov
out
loop
xor
lock
inc
and
cmp
xchg
add
in
mov
jo
pop
call
adc
adc
push
push
test
add
or
jle
push
cmps
adc
test
pop
inc
fiadd
(bad)
mov
add
add
jo
jne
xor
push
jno
xchg
(bad)
mov
popa
addr16
adc
sbb
ds
pop
fldcw
and
fadd
push
xchg
daa
in
lods
das
lods
jmp
pop
lock
sti
imul
push
mov
inc
fwait
pop
pop
bound
ret
pop
fadd
or
add
adc
jmp
xchg
dec
or
dec
repnz
shl
aaa
shr
movs
push
mov
mov
cmp
xchg
adc
mov
test
(bad)
or
or
imul
push
pop
es
addr16
sub
cmp
xchg
xlat
shr
pop
pop
into
xchg
packsswb
pop
adc
push
cs
out
jmp
inc
mov
pop
fcmove
inc
inc
movs
push
jo
and
movs
cmp
cmp
xchg
push
ja
xchg
sub
pop
sahf
xor
ret
xchg
or
sub
mov
sbb
sahf
mov
mov
inc
ins
cmp
test
add
es
fidivr
enter
mov
fsubr
push
mov
mov
cmps
out
sti
enter
fld
nop
jnp
push
adc
outs
or
inc
call
lock
xor
(bad)
sbb
or
add
pop
(bad)
in
adc
sub
cmp
mov
xor
mov
rcr
mov
ins
(bad)
cdq
add
shl
fbstp
mov
xlat
mov
stc
ins
and
fsubrp
out
inc
lods
pop
mov
mov
cmp
inc
push
xor
lods
mov
fmul
nop
push
dec
pop
shl
int
and
loope
sub
cld
(bad)
pop
push
repz
pushf
mov
xchg
bt
loope
mov
push
sub
call
test
imul
nop
cdq
je
jns
sub
aaa
dec
iret
or
add
adc
add
cli
call
pop
cli
fisubr
adc
fs
push
daa
rep
aad
shr
out
in
out
pushf
(bad)
test
inc
aad
or
repnz
repz
mov
xor
cmps
das
adc
mov
jb
xchg
loope
popa
cs
int
mov
mov
and
add
inc
ror
hlt
xchg
lock
(bad)
xlat
push
ret
fisubr
sbb
push
(bad)
lock
dec
and
mov
jl
push
out
ins
jecxz
cld
sti
jge
mov
sub
push
adc
and
cmp
sar
cmc
inc
adc
ss
pop
add
lds
mov
mov
shl
test
mov
popa
repnz
aaa
add
iret
mov
or
leave
jp
sti
push
(bad)
xor
outs
neg
adc
pop
push
int3
sbb
icebp
push
test
sbb
arpl
jecxz
inc
dec
or
cmp
leave
dec
lea
pop
iret
push
test
scas
movs
push
daa
add
push
adc
aam
pop
pop
mov
gs
lods
mov
mov
dec
push
xor
mov
inc
pop
pop
movs
xor
push
ret
pop
mov
test
test
cmp
adc
xor
cmc
outs
mov
arpl
push
add
cld
adc
retf
add
test
test
out
or
pushf
push
pop
dec
mov
repnz
inc
adc
movs
imul
fcom
ret
pop
pop
mov
out
jnp
cmp
adc
pusha
enter
or
inc
xchg
inc
es
std
mov
mov
sub
rcl
shl
popa
cmps
pop
mov
and
jle
ror
inc
mov
mov
dec
fcomi
in
pop
dec
pop
scas
call
sub
adc
mov
add
lea
and
pop
jp
rcr
xchg
mov
test
or
(bad)
mov
lahf
shr
dec
ret
movs
rol
jnp
pop
cmps
repz
sub
and
test
test
sbb
jmp
shl
dec
sahf
das
loop
adc
mov
push
add
pushf
nop
mov
cmp
fs
fcmovu
dec
mov
popa
xchg
arpl
push
xlat
(bad)
test
movs
sub
push
cs
adc
mov
and
popa
xchg
div
daa
or
mov
outs
or
sub
sub
(bad)
es
mov
nop
test
mov
cmc
dec
rcr
and
cmp
mov
mov
(bad)
xor
fnstsw
push
sahf
mov
cli
(bad)
sti
pop
push
inc
ficom
mov
xchg
cmp
jle
and
test
push
cmp
xchg
dec
xor
sti
pop
push
jmp
xchg
test
pushf
pop
mov
fcmove
loopne
or
movs
xchg
fist
shl
dec
xchg
adc
mov
daa
nop
fiadd
push
pop
hlt
in
push
mov
sti
xor
out
dec
cmp
fild
inc
sbb
add
jns
pop
jl
push
int
mov
popf
out
test
shl
idiv
push
push
sub
mov
and
hlt
push
mov
fisub
pop
inc
push
out
daa
pop
xchg
sub
cld
fimul
in
fmul
sub
stos
sbb
and
es
lea
adc
add
mov
cmp
xchg
pop
xlat
xchg
outs
(bad)
and
xchg
rol
mov
imul
ror
popa
ss
adc
push
mov
push
jl
je
jecxz
inc
dec
leave
mov
or
xchg
test
xor
xchg
sub
int3
adc
ds
sbb
xchg
pushf
test
imul
cmp
out
mov
adc
sbb
sahf
or
xor
pop
and
sti
fild
adc
in
and
fist
retf
mov
loope
lods
jge
out
pop
aas
mov
jnp
ss
jle
fstp
mov
push
sub
push
(bad)
xchg
dec
ret
enter
adc
push
mov
aam
ret
sbb
imul
pop
inc
stos
add
jno
push
pop
dec
jmp
fstp
mov
xchg
icebp
pop
pop
sub
or
(bad)
leave
aad
cmp
fist
gs
in
into
xchg
inc
test
mov
idiv
aam
jecxz
fs
aas
or
pop
mov
aas
dec
fdiv
ss
dec
dec
mov
std
mov
inc
dec
retf
jae
dec
xor
pop
xor
fs
out
popf
test
stos
sbb
and
inc
xchg
enter
push
inc
xchg
cmp
jl
adc
xchg
sahf
jns
mov
cmps
and
cmp
pop
sbb
push
sub
fsub
mov
pop
loopne
lods
or
sti
in
mov
jmp
jle
lahf
std
idiv
sar
dec
loop
mov
mov
fmul
sub
pop
stos
aas
add
inc
call
stos
sti
gs
inc
adc
jae
je
sbb
shl
inc
pop
les
daa
repz
call
mov
ja
mov
rcl
ss
mov
adc
ins
ja
adc
mov
loopne
mov
(bad)
out
lods
jne
pop
sbb
nop
and
xchg
push
mov
int
mov
ficom
pop
xchg
ret
stos
sbb
aam
(bad)
test
test
jns
and
mul
jg
push
out
jmp
nop
xchg
dec
aaa
retf
lods
add
adc
and
pop
dec
add
or
xor
push
loopne
xchg
mov
pop
repnz
and
cmps
ret
cmp
pop
jo
popf
xchg
ud1
mov
rol
xchg
in
add
bound
loop
popf
inc
sub
pop
add
adc
fwait
ja
mov
xlat
xchg
test
mov
jmp
xor
lods
pop
jno
push
xchg
nop
sub
or
mov
lods
mov
inc
xchg
dec
in
inc
sahf
jne
mov
adc
icebp
add
imul
xor
cs
jne
stos
adc
adc
retf
cmp
or
int
loopne
sbb
icebp
pop
fwait
std
or
sub
out
jbe
push
mov
test
data16
adc
in
dec
or
repz
and
add
into
pushf
sbb
aad
or
ds
jmp
mov
mov
cmp
test
and
pop
add
and
in
lods
fidiv
pop
inc
cmp
xchg
out
movs
mov
jp
add
or
add
jns
dec
mov
cld
fild
sub
push
add
lds
fstp
and
(bad)
pop
movs
add
popf
and
fistp
mov
jg
iret
or
test
push
outs
sbb
int3
pop
xor
push
sahf
ss
(bad)
fstp
cld
retf
add
mov
jecxz
lahf
mov
sbb
xchg
sbb
cmp
mov
mov
cdq
in
or
sbb
iret
and
mov
lock
xchg
inc
shl
inc
shl
fisubr
pusha
fidivr
cmps
cmp
push
ret
cmp
shr
imul
xor
jmp
cmp
hlt
cdq
ja
fcmovnb
mov
hlt
test
xchg
icebp
push
into
enter
mov
pop
inc
cli
jecxz
sbb
mov
cmp
retf
pop
sbb
jl
jp
mov
pop
loopne
cmp
stos
xchg
xchg
cmp
mov
cmp
ss
adc
jne
(bad)
and
xor
cmp
xlat
cwde
and
adc
imul
adc
sbb
fwait
mov
cmps
(bad)
cdq
cmp
xor
push
xchg
lock
mov
test
sbb
loope
enter
scas
sub
mov
inc
lods
(bad)
mov
add
push
loop
mov
xlat
xor
mov
xor
and
add
xchg
sub
xchg
not
dec
popa
stc
out
pop
cmp
sysenter
in
cmp
aaa
outs
mov
inc
test
mov
xor
inc
dec
push
inc
je
xchg
jecxz
sbb
or
mov
je
imul
pop
aaa
cmp
xchg
adc
mov
in
xor
ja
dec
fstp
gs
push
sar
imul
add
fcom
dec
in
mov
loopne
movs
loope
adc
into
push
daa
mov
mov
fstp
inc
imul
fld
repnz
cmps
add
or
loop
jle
je
jmp
aad
ja
pop
cld
outs
lahf
jg
mov
retf
jmp
cmc
je
cld
into
xor
lds
jns
sub
pop
jne
fisttp
frndint
xchg
retf
dec
xchg
imul
clc
sub
xor
xchg
mov
adc
mov
aaa
or
pop
jne
xor
stos
inc
jecxz
lods
sbb
xor
cmp
movs
in
movs
call
mov
addr16
push
out
dec
loope
les
dec
and
inc
or
pop
out
jp
scas
jl
jb
dec
xor
fnstenv
jb
push
push
ss
jecxz
xchg
sub
cmp
ins
sub
fs
xor
dec
inc
xor
pop
loope
mov
dec
jle
adc
xor
and
adc
pop
ja
lea
(bad)
minps
push
loope
rol
adc
rol
cmps
adc
or
loopne
pop
ins
int3
call
inc
stos
into
pop
add
adc
lock
jg
fld
leave
imul
add
xor
cwde
mov
xchg
sar
pmulhw
mov
imul
aad
stos
idiv
sbb
rol
gs
popf
cmp
(bad)
mov
mov
adc
inc
imul
cmove
das
cmp
fsubp
or
cmps
mov
movs
jns
cld
arpl
push
dec
push
jge
in
fadd
addps
adc
sub
(bad)
not
cmp
adc
cmp
jbe
mov
add
gs
push
pushf
les
icebp
and
xchg
(bad)
retf
fnsave
shl
push
in
add
dec
rcr
jge
jmp
jno
aam
cmp
xchg
and
mov
dec
mov
gs
pop
cmp
in
call
push
or
scas
push
adc
loop
bnd
shl
and
cmc
inc
mov
cmp
mov
fmul
call
repnz
mov
test
adc
and
pop
add
cmps
cmp
xchg
scas
sbb
push
in
loopne
pop
pop
fsubp
sub
test
pusha
pop
fcom
cmc
push
xor
mov
sub
das
push
jmp
into
cmp
jne
mov
mov
hlt
push
adc
dec
cmp
es
cmps
xor
mov
or
scas
stc
xor
aaa
fwait
imul
jmp
jnp
pop
xor
xchg
xor
daa
pop
add
popa
retf
dec
retf
js
dec
in
cs
mov
in
sub
outs
mov
xchg
pop
cli
mov
ins
jne
pop
les
and
jae
arpl
jp
stos
adc
out
sbb
dec
mov
or
pop
push
inc
fcom
push
fdivr
adc
out
sti
movs
pop
push
xor
aad
addr16
movs
scas
pop
jns
add
dec
xchg
mov
fdivr
or
cli
ins
push
jle
scas
xor
mov
scas
es
mov
xchg
sbb
mov
(bad)
mov
or
and
fwait
pop
mov
call
sbb
movs
(bad)
sbb
push
les
pop
jo
push
and
ds
jle
dec
das
aaa
add
jecxz
stos
sub
out
aaa
cmp
mov
pop
ins
xchg
shl
daa
(bad)
jmp
cmps
movs
cwde
neg
stc
dec
sbb
inc
hlt
push
not
xlat
jns
mov
push
xchg
sub
dec
or
(bad)
mov
mov
out
adc
out
bound
jmp
add
jecxz
jecxz
cmp
retf
scas
shl
outs
mov
fwait
mov
lahf
in
in
ins
inc
and
fsubr
jl
or
adc
and
push
mov
add
adc
loop
dec
ds
add
fild
xchg
mov
mov
add
mov
push
aas
test
cdq
inc
int3
and
movs
dec
in
in
pop
lea
or
fadd
jne
mov
nop
mov
mov
mov
or
and
adc
aas
push
cmp
and
xor
xchg
jb
or
jne
scas
mov
outs
rcr
adc
pusha
mov
xor
not
out
or
cmp
dec
xchg
inc
dec
xor
repnz
jmp
mov
fstp
stos
xor
jno
data16
sub
sub
jo
ret
mov
push
cld
ss
loop
push
inc
xchg
scas
add
icebp
nop
pop
gs
inc
int3
loope
mov
loope
jbe
add
add
ret
stc
jp
jb
shl
inc
not
repnz
and
add
rcr
inc
lahf
pushf
dec
pop
add
add
cmp
jo
cld
inc
mov
mov
add
je
inc
xchg
mov
daa
adc
xchg
pop
adc
mov
in
inc
mov
jne
xor
les
push
push
jb
movs
scas
add
jle
pop
sub
pop
enter
ror
cmp
push
pop
es
jo
mov
pop
sahf
xor
in
jmp
push
icebp
ja
cmp
dec
sub
xchg
jae
lods
sbb
pop
cmc
mov
pop
pushfw
lahf
pop
in
pushf
mov
call
cmps
(bad)
push
xchg
dec
in
sbb
sti
mov
jmp
xchg
dec
icebp
cld
(bad)
cmp
and
inc
pusha
add
outs
sar
lods
sub
loop
pop
test
cmp
sub
daa
mov
pop
into
adc
cmp
bound
(bad)
cld
(bad)
mov
ins
xor
add
mov
popf
push
push
gs
fsubr
je
add
es
rcl
loop
popf
xchg
xor
sbb
or
and
outs
adc
dec
rol
(bad)
popa
push
jnp
es
mov
push
or
out
jno
(bad)
push
adc
(bad)
call
int
jnp
cmp
je
je
hlt
fiadd
retf
mov
in
xor
mov
retf
lahf
iret
jnp
iret
sar
mov
push
and
add
arpl
les
sub
jnp
xchg
push
pop
and
int3
cdq
jo
pushf
xchg
test
sahf
ds
addr16
push
mov
push
adc
imul
push
les
data16
sub
sub
xor
imul
jmp
jns
mov
shl
adc
idiv
mov
xor
sbb
mov
sbb
mov
sub
retf
inc
(bad)
xor
pop
out
pop
fistp
icebp
push
or
cmps
xor
or
inc
mov
mov
shl
inc
inc
(bad)
std
loop
pop
lods
ret
push
or
push
inc
mov
mov
add
jmp
xchg
and
push
imul
push
je
dec
sub
stos
sub
pop
bound
sbb
push
sub
nop
dec
cmps
pop
scas
jns
jmp
lock
frstor
sbb
pop
adc
cmp
mov
cmp
fld1
mov
fadd
xchg
sbb
mov
lods
xor
push
out
fnstenv
xor
push
xchg
outs
int
or
mov
and
cmc
sbb
repnz
xchg
les
push
jmp
mov
je
add
popa
mov
ret
jnp
lods
cmp
enter
adc
test
and
stos
jp
js
cmp
mov
jns
sbb
sar
out
mov
pop
jecxz
cmp
clc
iret
mov
mov
adc
xchg
push
aaa
dec
shl
pop
push
ds
test
add
cs
inc
push
push
pop
fs
xchg
ja
popa
clc
pusha
xchg
adc
mov
enter
xchg
and
ins
ret
mov
jns
aad
dec
popf
inc
jns
out
push
lods
sub
and
jg
mov
ret
ret
out
adc
test
mov
xchg
in
retf
sbb
frstor
leave
push
push
adc
stos
shr
ja
cmp
add
push
push
and
cmp
mov
adc
mov
sbb
pushf
cs
add
aam
data16
jbe
jnp
sub
jecxz
test
xor
nop
js
not
push
in
mov
out
xchg
lea
xchg
cld
ficomp
mov
jecxz
lods
mov
dec
ins
pop
jmp
xchg
loope
call
loope
stos
rol
xchg
adc
popf
test
daa
sub
cs
pop
push
ins
rcl
sar
cmp
lock
mov
popa
cld
jno
sbb
test
outs
sub
mov
pop
inc
sub
loop
mov
das
jmp
jmp
xchg
test
(bad)
jmp
push
and
inc
(bad)
jne
mov
fcom
hlt
retf
push
jle
jmp
adc
cmp
adc
xor
mov
sbb
add
xchg
xchg
sub
rcl
cmp
and
pushf
loopne
mov
js
fld
mov
pop
inc
outs
or
repz
rol
mov
push
stos
mov
cmc
retf
mov
mov
call
jp
bound
aam
test
jae
mov
jl
mov
or
pop
pusha
add
gs
add
cmp
in
push
ret
loop
ret
popf
clc
fild
add
ret
mov
lahf
out
lds
popa
mov
xchg
and
dec
test
cli
test
xor
imul
stos
pop
out
mov
rcl
push
scas
test
pop
jge
jb
pop
xor
pop
sub
popf
ins
ins
inc
push
enter
xor
mov
mov
out
mov
int3
(bad)
(bad)
mov
xchg
in
cmp
mov
jmp
sbb
out
es
pop
addr16
icebp
mov
inc
jmp
add
mov
sub
je
push
inc
xchg
mov
xor
daa
cmp
in
push
mov
in
inc
mov
push
xchg
inc
les
cs
leave
fwait
dec
pop
js
pop
mov
add
pop
mov
pop
les
rcl
adc
loopne
stos
lock
jmp
mov
shl
or
adc
inc
loopne
lahf
scas
push
loope
cs
int3
lea
cmc
xor
cmps
push
mov
(bad)
rcr
mov
leave
xchg
add
mov
retf
pusha
imul
out
sahf
arpl
and
push
cld
jl
push
jae
pop
mov
in
add
sahf
jne
fwait
loope
pushf
dec
mov
scas
js
dec
or
hlt
out
(bad)
cld
fild
sbb
xchg
ins
pop
nop
adc
rcl
mov
xor
jmp
ret
pop
or
dec
data16
fdivr
adc
pop
jecxz
mov
jg
leave
imul
jmp
mov
call
jns
sbb
scas
or
test
push
mov
jg
jns
or
in
mov
stos
test
outs
adc
lods
mov
push
push
inc
jmp
sahf
test
lds
sub
in
out
stos
call
xlat
daa
(bad)
mov
xor
jecxz
pop
in
mov
in
dec
mov
cmp
in
cmp
outs
out
jb
rcr
mov
fiadd
add
xchg
(bad)
out
inc
aas
fstp
jecxz
popf
into
cdq
push
js
dec
sbb
ror
add
jecxz
dec
xchg
xchg
dec
push
lea
cmps
enter
out
sub
sub
in
mov
xor
add
test
cld
scas
into
xor
cmp
(bad)
sub
and
pop
cdq
add
div
sub
fstp
or
enter
mov
and
loopne
push
js
btr
mov
neg
jns
pop
xchg
pop
aad
mov
push
add
pushf
add
aaa
psrlq
xor
pop
into
in
sbb
repnz
push
cmp
jae
lds
(bad)
enter
pushf
sub
repz
(bad)
pop
or
sub
je
(bad)
cdq
pop
iret
add
and
fiadd
popa
push
fcom
in
mov
adc
mov
test
or
mov
pushw
add
add
or
jecxz
adc
xchg
adc
loopne
mov
outs
mov
and
adc
nop
sbb
outs
dec
sbb
(bad)
fsubr
repz
loopne
push
dec
retf
dec
pop
push
sub
mov
test
lds
adc
fwait
imul
test
mov
cmp
sub
mov
mov
adc
mov
imul
ins
pop
mov
jns
int3
mov
rol
sbb
sbb
adc
fild
adc
jns
mov
stos
pop
or
inc
xor
repnz
add
inc
pop
pop
mov
mov
in
stc
xlat
xor
loopne
sti
mov
cs
addr16
cmp
jecxz
ins
cdq
pusha
sti
out
push
push
dec
fisubr
ret
xor
sbb
push
sbb
inc
(bad)
push
ret
ins
dec
test
push
aad
xchg
jge
mov
js
sbb
cmp
ret
pop
push
push
push
in
inc
call
pop
push
lahf
sub
mov
xchg
jmp
adc
cmp
or
inc
aad
std
dec
adc
lahf
movs
data16
psraw
shr
ds
int3
pop
rcr
fsub
add
sbb
(bad)
loop
pop
icebp
aaa
aad
cs
arpl
push
xor
and
sub
aad
rol
jle
pop
pop
dec
fnstenv
mov
stc
std
pusha
sar
in
imul
mov
loop
mov
jnp
mov
mov
mov
adc
cmp
das
and
mov
push
push
dec
loop
jle
cs
js
push
jp
pusha
jmp
sub
sub
adc
mov
mov
push
xor
pop
adc
inc
cmp
push
add
bnd
test
js
or
mov
and
push
mov
cli
jne
ret
and
jnp
cld
push
xor
dec
call
fidiv
push
jg
cmp
jnp
(bad)
jbe
into
test
clc
mov
mov
shl
pop
pop
and
or
or
(bad)
stos
in
or
push
movs
mov
jae
mov
jmp
stc
call
mov
in
jns
stc
add
jo
imul
aad
hlt
and
pop
add
sti
call
cli
jp
scas
retf
or
cdq
bound
inc
mov
mov
push
cs
pop
ins
mov
call
cmc
jge
mov
(bad)
xchg
mov
xchg
jmp
jbe
fsub
cld
mov
xchg
cmc
add
aad
jle
sar
xor
sahf
lods
xor
xchg
jp
aam
sbb
dec
sub
sbb
test
in
and
ror
adc
fnsave
jb
mov
mov
jne
jg
in
cmp
(bad)
leave
adc
cmp
mov
sub
pop
sbb
sbb
hlt
xor
(bad)
xchg
sbb
mov
cdq
mov
xchg
test
arpl
loop
int
fxch
mov
lock
push
jmp
xchg
mov
xchg
inc
or
and
jle
inc
mov
mov
inc
sub
dec
push
mov
inc
das
sub
movs
or
adc
add
or
sbb
and
cmp
inc
xchg
ss
in
push
dec
int3
ret
cmc
mov
daa
xchg
cdq
cwde
imul
mov
cdq
imul
(bad)
mov
mov
(bad)
es
and
mov
clc
pusha
jl
cwde
fidiv
(bad)
xlat
outs
daa
adc
xchg
jnp
cmp
push
ret
gs
fcmovnb
mov
cmps
adc
push
pop
aad
leave
or
pushf
div
mov
xor
ins
sbb
or
and
inc
retf
dec
xor
mov
imul
dec
mov
fimul
cmps
dec
ds
mov
movs
xchg
nop
fstp
mov
jns
ins
repz
inc
fst
lds
sbb
cmp
fcmovne
cdq
pop
shl
pusha
test
in
add
test
mov
adc
popf
inc
nop
adc
adc
(bad)
cmp
imul
and
out
cmp
jbe
in
adc
push
or
les
dec
loop
movs
fist
cmp
(bad)
cld
repnz
leave
and
add
enter
mov
addps
in
fnstsw
add
ja
out
inc
ret
ja
aam
or
es
les
popf
mov
xchg
ror
pop
mov
or
loope
shl
lahf
loope
cld
adc
add
je
adc
mov
inc
cmp
(bad)
pop
cmp
cmp
cld
push
inc
fwait
inc
jae
fs
stos
(bad)
sahf
rol
pop
ins
pop
enter
aaa
or
cmp
(bad)
mov
inc
in
mov
je
mov
xchg
cmps
mov
add
add
mov
xor
sub
pop
outs
outs
and
sub
fnstsw
mov
pop
pop
pop
xchg
jle
pop
stos
lock
pop
inc
jmp
repz
scas
dec
add
repnz
mov
icebp
aam
enter
sub
ror
jmp
jne
pop
mov
jo
rcr
jecxz
bound
shr
or
test
loopne
push
div
jg
les
outs
ret
and
dec
sub
pop
push
daa
and
scas
ins
outs
jmp
or
js
mov
dec
test
inc
in
push
rcl
out
cmp
pusha
adc
push
pop
(bad)
mov
repz
mov
popa
sbb
dec
lahf
sub
fdiv
xchg
sub
call
popa
movs
outs
sti
fwait
cmc
ds
mov
repz
(bad)
cmps
pop
mul
mov
jns
das
(bad)
jno
mov
push
sbb
test
push
add
push
push
pop
jns
xor
push
xchg
fcom
lds
inc
rol
mov
test
dec
inc
jo
xchg
sbb
jo
shr
jmp
sbb
mov
(bad)
in
push
jg
and
dec
aas
fldenv
push
dec
inc
ftst
or
ins
int
mov
pushf
xchg
push
xchg
mov
call
les
sbb
add
add
push
mov
(bad)
pop
int
inc
sbb
push
sti
xor
in
das
xchg
xor
or
inc
xchg
fwait
mov
or
fsubr
push
xor
mov
ja
mov
mov
xchg
push
fld
pop
stc
push
out
jle
shl
out
mov
shl
jbe
dec
mov
and
sar
cli
in
cmp
or
and
jp
sub
jle
in
test
fs
mov
fadd
loope
mov
mov
gs
inc
loopne
jb
pop
(bad)
sub
jbe
sahf
scas
arpl
leave
cs
cmp
imul
add
pop
outs
push
mov
xchg
mov
inc
rol
xor
dec
or
lods
dec
arpl
push
add
mov
xor
movs
in
in
fcmovu
ret
repz
ss
sysret
add
lods
lea
call
xor
adc
xchg
or
inc
or
in
sbb
xchg
fstp
push
or
pause
push
jge
clc
or
(bad)
cmp
xchg
jmp
mov
out
sti
daa
sub
stc
xor
inc
enter
adc
xchg
sub
int
xchg
sub
add
add
add
sub
movs
mul
lahf
xchg
jne
jecxz
xor
test
push
loopne
and
sub
bound
imul
int
dec
adc
(bad)
mov
jns
out
jne
in
push
push
movs
add
jae
cmp
cmp
test
mov
or
mov
outs
inc
retf
cmp
(bad)
mov
test
outs
daa
sbb
popa
push
sub
xchg
clc
in
stos
or
pusha
mov
or
mov
rcr
(bad)
jmp
jns
or
arpl
mov
push
loope
push
push
push
jmp
cmp
fwait
sub
pushw
cmc
dec
popf
jns
xor
adc
and
mov
ret
shl
xor
cmps
ret
in
push
call
adc
mov
jmp
ss
push
mov
les
push
and
push
jle
sub
sub
pop
gs
stc
imul
fsubr
or
dec
scas
xchg
sbb
call
mov
cmp
(bad)
mov
inc
jno
jmp
ss
icebp
aam
mov
push
sahf
xor
pause
add
push
shl
std
xchg
inc
(bad)
mov
sbb
ror
fidivr
pusha
neg
jmp
xchg
dec
retf
(bad)
enter
pop
aas
cli
f2xm1
lock
loope
dec
fwait
inc
jnp
std
sbb
inc
mov
ins
cmp
shl
xlat
daa
dec
sub
out
ret
sub
out
sbb
jle
in
cmp
ja
rol
lock
ret
(bad)
mov
jecxz
aad
sub
or
pop
dec
sbb
xlat
sbb
or
push
lea
stos
popf
jg
fiadd
jge
retf
retf
bound
movs
or
xor
stos
bound
sub
inc
inc
cmp
in
cld
or
adc
mov
pop
push
jns
and
and
push
mov
(bad)
jbe
jg
aad
xlat
outs
cli
sbb
out
rol
imul
mov
inc
mov
ja
xchg
ins
and
in
mov
push
add
ret
inc
mov
and
xor
leave
and
xchg
sbb
int
hlt
and
jmp
xlat
test
xor
sahf
xchg
jmp
rol
out
fdivr
mov
ds
xchg
adc
cmps
lds
data16
or
call
into
or
in
inc
mov
imul
stos
ds
cli
xchg
fstp
mov
mov
and
in
xchg
outs
add
mov
adc
inc
adc
push
inc
ret
sub
push
cmp
ss
adc
xchg
pushw
ret
pcmpeqd
imul
xor
rcr
jp
pop
repnz
into
or
fnstenv
lahf
mov
pushf
xor
adc
dec
xor
fadd
mov
jo
and
dec
stos
(bad)
out
stos
retf
mov
mov
pop
xor
jae
mov
stos
xchg
mov
outs
mov
adc
mov
xchg
mov
push
nop
xchg
lods
inc
pop
jnp
pop
shl
add
icebp
fisub
jge
push
jge
jge
xchg
pop
jle
cmp
loopne
jge
retf
lds
sbb
xor
(bad)
movs
lods
imul
test
mov
ja
cmp
cmps
xchg
cmps
std
dec
adc
pop
sub
arpl
ret
fist
add
loopne
dec
xor
bound
scas
bound
ror
fistp
cdq
movs
dec
adc
ret
loopne
mov
add
xor
mul
in
(bad)
ffreep
clc
outs
mov
cwde
ss
mov
std
pop
jns
pop
pop
ret
out
inc
js
fmul
call
les
test
mov
cmp
loop
in
add
js
bound
adc
daa
js
pusha
mov
adc
nop
mov
or
jbe
sub
shl
call
idiv
mov
add
cmp
xchg
mov
loopne
test
arpl
dec
mov
mov
ret
or
fbld
(bad)
pop
pop
dec
adc
xor
out
pop
lods
test
fninit
fyl2xp1
aad
add
cmps
ret
shr
xor
imul
outs
ret
test
in
jno
cmp
mov
mov
in
xchg
dec
jae
data16
arpl
sbb
add
gs
enter
or
popf
cli
adc
inc
rcl
sbb
cmp
(bad)
movs
add
and
xchg
(bad)
sub
cmp
jg
(bad)
fisttp
mov
les
xor
sub
mov
fwait
mov
sbb
mov
mov
pop
push
mov
xchg
and
popf
(bad)
arpl
jp
adc
xchg
rcl
adc
pusha
push
sub
ja
leave
jle
pop
or
imul
cmp
into
and
cmps
outs
pushf
xlat
int
cs
je
mov
pop
adc
dec
xchg
lods
out
pop
daa
jb
nop
and
fs
mov
xchg
shl
mov
inc
fs
call
pop
pop
xchg
cmp
add
cmp
out
jle
add
cmp
or
xchg
movnti
or
lds
adc
bound
popf
sbb
cmp
ret
pop
inc
sbb
or
dec
push
int3
les
sub
push
int
mov
add
adc
mov
clc
pop
mov
scas
adc
setnp
mov
ficom
dec
jnp
dec
js
cmp
push
into
jl
imul
xchg
inc
and
psubw
lea
repz
int
daa
mov
out
jne
in
repz
push
jmp
sbb
mov
xchg
jecxz
int3
test
push
clc
inc
(bad)
xor
pop
xchg
in
ds
pop
push
or
cmps
jge
(bad)
jno
sub
and
mov
push
nop
dec
aas
mov
popa
dec
jp
scas
mov
and
cmp
or
jns
or
int
fild
ja
(bad)
mov
enter
sbb
mov
std
fisub
ds
fcmovnbe
sbb
aad
adc
mov
pop
lock
ret
mov
xchg
push
ret
xor
dec
ins
fiadd
jo
nop
(bad)
rol
stos
jns
mov
mov
pop
xor
mov
jecxz
mov
fidiv
mov
pop
pop
leave
fs
mov
sbb
jne
pop
xor
jl
hlt
test
mov
mov
mov
out
cmps
fidiv
addr16
push
imul
xchg
sub
(bad)
jle
mov
out
sub
movs
adc
fsub
mov
or
add
ret
rcl
fdiv
sbb
pop
mov
shl
push
(bad)
mov
mov
mul
bound
or
or
inc
cli
mov
mov
mov
popf
in
mov
cs
aad
xchg
ret
lock
pop
dec
xchg
or
and
mov
lods
test
mov
ror
and
and
in
mov
imul
fwait
les
push
lahf
xor
(bad)
out
pop
and
cmp
sub
sub
mov
sbb
xchg
test
addr16
mul
inc
imul
jae
outs
lds
fsubr
sbb
inc
or
push
(bad)
jno
xchg
mov
lods
push
push
mov
jp
cld
inc
mov
mov
in
test
and
mov
xchg
dec
xor
pop
sti
out
sub
cmc
jno
lods
xchg
loope
dec
ins
lods
lods
fsqrt
sub
mov
aaa
or
and
cmp
and
(bad)
sub
clc
cmp
pop
xchg
push
call
mov
sub
xchg
mov
and
xor
sub
jmp
sbb
xchg
pop
scas
fchs
movs
pop
enter
rol
xchg
pop
sub
test
(bad)
(bad)
loopne
adc
cli
jle
mov
sbb
pop
sbb
push
and
adc
mov
test
scas
gs
sub
and
sub
mov
jb
pop
mov
inc
mov
outs
pop
cmc
addr16
cmps
scas
aas
mov
aas
mov
jle
jbe
xchg
mov
fiadd
imul
ds
xchg
aam
out
cmp
mov
add
loopne
popa
movs
lods
cld
rcr
out
addr16
cld
jmp
enter
xchg
sbb
xor
jne
or
rcl
dec
cs
adc
jl
les
push
pop
scas
retf
outs
mov
outs
jge
adc
in
mov
ret
mov
fwait
inc
mov
hlt
mov
xor
movs
adc
dec
sahf
mov
mov
cwde
lea
push
enter
mov
jp
mov
jmp
push
call
iret
push
imul
cmp
sbb
pop
jge
call
clc
cmps
out
mov
popf
shl
adc
sbb
ss
das
pop
repz
xchg
aas
(bad)
imul
inc
adc
adc
aas
imul
in
sub
xor
arpl
fcom
sub
aam
mov
cmp
mov
push
push
les
inc
sub
jmp
jo
cmps
jbe
push
js
add
mov
lods
or
inc
jbe
movs
mov
pop
dec
fadd
(bad)
push
mov
cmp
xor
ins
xor
mov
fcom
push
mov
sbb
jmp
mov
dec
mov
or
fild
jbe
rcr
adc
cmp
popf
inc
sar
dec
lock
sub
cli
and
cmp
repz
push
(bad)
pop
inc
mov
add
dec
mov
std
stos
jns
std
mov
pop
sbb
hlt
sbb
push
loope
sub
jnp
cwde
out
data16
imul
int
jmp
and
lods
inc
xor
xor
jl
sti
jbe
(bad)
scas
fild
push
xor
sub
push
dec
lods
in
sub
cwde
loope
ins
cmp
outs
xchg
daa
adc
dec
push
push
test
push
xchg
ret
or
or
das
pop
mov
pop
pop
and
jl
lock
pop
or
lahf
inc
clc
adc
and
into
cmps
in
push
ret
jl
hlt
dec
mov
cld
xor
stc
pop
out
sahf
repz
push
jmp
adc
repz
shl
push
lock
(bad)
mov
rcl
sub
ror
in
(bad)
fdiv
inc
out
and
xchg
push
test
test
inc
and
pop
dec
imul
outs
imul
ins
and
ds
iret
cmp
sub
add
loopne
jbe
jnp
retf
(bad)
or
mov
add
mov
jbe
dec
movs
mov
mov
mov
jg
repnz
jne
mov
dec
shl
jmp
sub
and
pop
in
xlat
sti
sbb
sti
mov
xchg
xor
mov
mov
and
imul
push
pop
and
addr16
outs
adc
int3
into
das
lea
lods
xchg
xchg
jge
jo
mov
cmp
cmc
push
hlt
(bad)
pop
call
imul
mov
sbb
and
push
dec
nop
dec
cmc
or
jmp
jae
pop
aas
lahf
mov
aaa
and
popa
push
out
fcomp
pop
xchg
loopne
pop
pop
aam
sub
mov
mov
test
repnz
les
inc
mov
out
xchg
xchg
push
inc
js
add
pop
ficom
dec
or
xor
sar
call
(bad)
shl
sub
inc
cmp
int
fimul
or
ss
and
imul
movs
mov
(bad)
xor
push
(bad)
fmulp
mov
out
scas
mov
shl
inc
out
mov
(bad)
mov
xor
cmp
(bad)
jp
lock
(bad)
call
cdq
hlt
cmps
popa
jb
push
dec
push
ins
add
xlat
aam
outs
add
retf
popf
cmp
enter
sahf
ja
jmp
daa
cmp
mov
adc
push
cld
pop
jnp
mov
div
retf
add
les
add
enter
repz
inc
clc
dec
jecxz
add
cmp
out
cdq
outs
jae
xchg
adc
popa
mov
scas
mov
cmp
sub
pop
test
cmp
enter
xor
rcl
aad
jle
sti
repnz
jecxz
or
add
mov
sbb
(bad)
loope
imul
sbb
inc
clc
retf
nop
mov
sub
popf
es
arpl
push
and
add
les
cmc
mov
push
scas
mov
and
(bad)
inc
test
fnsave
(bad)
addr16
dec
jmp
ins
icebp
cmp
sbb
add
rol
int3
xchg
dec
jmp
call
add
mov
sub
push
pop
adc
xor
fcmove
jp
sub
call
sbb
sub
push
cmp
fs
cdq
mov
add
push
push
sbb
or
mov
imul
or
xchg
xor
or
mov
popa
jecxz
in
imul
outs
xor
imul
lods
fistp
lock
cmps
adc
cmp
push
iret
xchg
aaa
push
jp
(bad)
or
out
mov
dec
repnz
sar
stos
xchg
sbb
mov
in
xor
div
dec
mov
pop
or
mov
call
mov
js
xchg
push
fucomip
or
add
gs
mov
in
jne
inc
add
sar
es
in
das
sbb
dec
aaa
aam
lods
fidivr
fistp
jecxz
int3
xchg
mov
xchg
les
mov
sub
jnp
ja
mov
loopne
adc
fwait
popf
dec
add
scas
or
cmps
sbb
lods
aad
test
pop
add
jne
cmp
jb
inc
sbb
jbe
pop
bnd
cmps
in
scas
fld
xchg
cmp
mov
adc
je
adc
std
loop
popa
jle
std
test
movs
mov
pop
or
cmps
bound
pop
adc
out
ror
popa
inc
int3
pushf
mov
cdq
push
in
jp
fsincos
or
sub
jge
push
arpl
mov
das
xchg
push
inc
inc
cs
je
push
cwde
pop
je
xchg
out
xor
add
call
push
or
imul
and
inc
add
add
cmc
mov
xor
in
not
and
push
(bad)
outs
addr16
add
or
inc
pop
ja
rcl
in
test
pop
dec
mov
sti
ins
lods
jno
inc
xchg
(bad)
and
sbb
add
cmc
je
(bad)
adc
daa
arpl
sub
ins
aaa
ins
mov
sub
mov
xor
rol
mov
sbb
pop
xchg
scas
test
mov
ins
push
xchg
daa
clc
retf
pushf
cmps
cmp
mov
mov
mov
pop
sar
data16
movs
test
jl
push
cmp
xlat
add
mov
xor
pop
aad
inc
fdivr
ret
xchg
retf
dec
out
or
push
mul
out
aad
sub
push
jnp
mov
(bad)
js
hlt
push
js
loop
js
int
mov
sbb
les
in
ins
cmps
fild
pop
sbb
and
add
xor
push
fld
out
sub
test
cli
addr16
icebp
in
xchg
mov
je
std
push
and
call
pop
push
ds
sub
enter
ds
jmp
out
xchg
pop
outs
mov
jg
js
loopne
cdq
mov
sahf
test
fadd
pop
and
pop
call
test
mov
xchg
ja
punpcklwd
adc
mov
fdivr
mov
ror
and
mov
in
in
xor
adc
sub
mov
(bad)
mov
lock
addr16
add
xchg
and
mov
in
sbb
fsub
std
jge
idiv
scas
jp
jecxz
push
sahf
sub
out
inc
pop
movs
xchg
adc
mov
out
int
inc
or
loopne
aam
aam
cmp
ja
rcl
sbb
arpl
jmp
jb
mov
ins
clc
sub
sub
call
ja
(bad)
or
sub
sub
cmc
pusha
outs
clc
loope
adc
mov
dec
int
ret
jp
jmp
fld
and
in
jnp
xor
shl
mov
push
js
jmp
or
adc
bound
mov
push
aad
jle
lods
mov
sub
fstp
(bad)
fadd
aam
mov
imul
sbb
dec
jns
pop
fsub
jae
sub
cmps
dec
sbb
aam
ins
jmp
lock
xlat
inc
retf
lock
push
loopne
inc
sbb
mov
neg
mov
test
xor
push
fwait
mov
jbe
mov
mov
(bad)
sar
pop
je
outs
jg
push
retf
and
push
sbb
fs
arpl
push
ficomp
loopne
ss
sub
dec
dec
xor
add
mov
dec
sbb
cdq
pop
pop
xchg
fldenv
and
add
popf
mov
inc
pop
push
sub
add
sahf
stos
jo
stos
lock
xlat
fadd
sbb
retf
jle
sti
ins
mov
jge
fs
sti
stos
cmps
sub
sbb
inc
repnz
mov
clc
sar
push
mov
push
cmps
and
adc
test
aaa
mov
or
imul
loopne
cdq
aad
fwait
hlt
leave
enter
inc
fmul
mov
pop
out
dec
lock
sbb
sbb
cs
or
in
dec
adc
adc
xor
cmp
sub
add
call
lahf
push
nop
push
jle
jecxz
pop
call
mov
pop
retf
cdq
add
out
mov
jno
lods
out
arpl
cdq
adc
movs
idiv
test
(bad)
(bad)
imul
lock
sbb
adc
scas
cmp
shl
lods
mov
sub
(bad)
fdiv
out
inc
jmp
in
pop
mov
ret
xor
and
jge
cwde
mov
and
shl
mov
(bad)
push
add
lock
rol
hlt
mov
stos
mov
jp
add
out
inc
out
xchg
mov
test
rol
jmp
push
ins
mov
mov
js
leave
or
pop
leave
xchg
or
sub
popf
pop
mov
(bad)
sbb
sub
aad
pop
adc
xchg
inc
shr
and
or
int
push
push
inc
ficom
test
jae
repz
jmp
xor
(bad)
adc
and
pop
add
popa
pop
int
mov
outs
fs
ja
jb
sbb
outs
ret
inc
addr16
int
ins
fcom
jb
lds
lock
test
mov
pop
jecxz
add
sti
mov
sub
push
popa
xchg
jge
push
rcl
mov
inc
dec
xlat
ror
fild
push
sbb
xchg
inc
jno
nop
or
sbb
sbb
push
mov
pop
aad
jmp
mov
push
jmp
mov
sbb
xchg
add
addr16
aas
(bad)
xlat
add
inc
mul
adc
mov
aad
mov
in
std
pop
jle
ins
xchg
(bad)
leave
out
ins
std
loopne
int3
mov
or
xchg
inc
jge
pop
cmp
pop
outs
cdq
or
mov
shr
test
xchg
(bad)
push
inc
mov
xchg
and
cmp
push
inc
or
repnz
push
and
mov
into
or
adc
sar
pop
mov
(bad)
stc
je
dec
inc
pop
or
sub
pushf
int3
sbb
and
adc
mov
xchg
rcl
dec
or
sahf
(bad)
outs
enter
xchg
cmp
add
dec
aaa
adc
pop
lahf
dec
fwait
adc
xlat
sbb
pop
xchg
scas
jg
pushf
jp
iret
sti
call
les
out
jnp
mov
cmps
cdq
pop
mov
cld
rcr
add
movs
aam
in
mov
pop
mov
call
call
leave
stc
xor
daa
lock
leave
outs
xchg
pushf
mov
mov
or
mov
mov
inc
xor
pop
jmp
add
or
inc
cmps
repz
pop
add
cmp
outs
mov
dec
gs
jecxz
push
addr16
push
jp
aam
stc
aad
xor
xchg
push
movs
mov
lea
jbe
mov
push
and
add
adc
clc
dec
cmp
pop
idiv
jge
jne
hlt
adc
or
push
jecxz
shr
inc
cmps
or
(bad)
test
ret
cli
sbb
xor
sbb
pop
mov
pop
mov
xchg
inc
aad
jae
loopne
scas
inc
cwde
in
sub
xchg
adc
imul
inc
inc
call
cs
xor
jle
mov
xchg
aam
mov
xor
mov
dec
out
addr16
sbb
rcr
adc
xchg
js
cmp
mov
dec
dec
cmp
imul
out
cwde
fmul
cmc
retf
adc
push
fimul
or
mov
cwde
push
enter
int3
push
dec
cmp
cmps
mov
fcomp
call
cmp
mov
cmp
and
inc
shl
jmp
and
jbe
cwde
and
dec
add
std
cwde
sub
push
gs
sbb
clc
xor
xor
inc
cmc
ret
pop
mov
sbb
cmp
mov
addr16
jnp
(bad)
clc
xchg
bound
add
sbb
sub
fild
ror
push
scas
cmp
pop
mov
pop
or
cmc
jo
jb
inc
imul
push
repnz
mov
mov
add
mov
int3
ins
push
pop
xor
leave
scas
jecxz
inc
add
mov
loop
mov
(bad)
pop
int
xchg
sbb
xor
cdq
mov
inc
das
xor
jmp
in
fldenv
xchg
arpl
push
cmp
sahf
mov
dec
sub
sub
sti
push
fnstenv
lods
adc
jo
xor
and
sbb
(bad)
pop
xchg
jmp
mov
push
inc
jnp
ins
inc
inc
out
jl
mov
adc
mov
mov
scas
lahf
mov
jge
jg
pop
lahf
dec
xor
aaa
mov
scas
(bad)
clc
popf
(bad)
in
fucom
ss
pop
retf
xor
or
sub
das
xor
sbb
or
adc
rcr
xor
push
add
inc
pop
jle
or
sbb
test
inc
mov
xchg
daa
scas
and
or
cmp
dec
outs
inc
int
push
movs
div
jmp
int
outs
fist
shr
and
and
mov
pop
cli
stos
mov
mov
xchg
pop
fisttp
fimul
and
stos
jb
ja
push
cmp
repz
add
in
and
push
mov
rcr
retf
mov
mov
dec
(bad)
dec
out
xchg
ss
nop
cmp
(bad)
xor
push
test
mov
pushf
das
sub
xchg
add
push
adc
cmps
jnp
pushf
jecxz
jmp
daa
adc
fwait
aas
xchg
shl
or
aaa
popf
stos
mov
and
mov
sub
ds
aam
jmp
nop/reserved
lock
mov
jo
push
in
bound
cmp
test
ret
bound
push
pushf
stos
loope
fwait
mov
call
fld
and
adc
int3
sbb
cmps
pop
daa
adc
lods
fild
ins
ds
cmp
cld
sub
sub
push
(bad)
jbe
es
data16
inc
rcl
mov
aam
pop
in
sbb
push
mov
arpl
hlt
ror
or
xchg
ss
push
xchg
jmp
mov
jl
rcr
cmps
imul
inc
xlat
pop
iret
pop
push
mov
xchg
pop
sub
mov
pop
loope
out
aam
sbb
pop
mov
in
cld
mov
scas
ss
mov
stos
cs
(bad)
fmul
test
pop
add
aas
lahf
sbb
or
out
cmp
or
dec
inc
movs
dec
ja
(bad)
into
push
dec
(bad)
jo
adc
es
mov
jne
or
fdiv
or
loop
(bad)
mov
ror
jbe
pop
push
cmp
pop
adc
mov
dec
pusha
mov
shl
cmc
jmp
loopne
inc
sar
mov
mov
sbb
xor
(bad)
out
cmp
xor
inc
xchg
pop
lock
movs
js
and
xchg
lods
imul
xor
fwait
push
gs
pusha
retf
shr
adc
call
add
aaa
je
fmul
call
mov
out
push
int3
mov
sbb
cld
mov
push
jg
or
pop
stos
imul
cmc
mov
mov
or
mov
bound
xchg
not
pop
xor
jae
ins
fistp
pop
sbb
jb
cdq
mov
jne
mov
popa
adc
push
add
inc
push
mov
jp
je
pop
push
imul
fidivr
in
sub
dec
or
cmp
cli
mov
mov
jmp
jecxz
shl
mov
mov
and
jo
dec
fdiv
test
sti
jg
sbb
dec
icebp
jb
push
pop
lods
add
jge
shl
or
mov
mov
scas
adc
enter
movs
in
fs
ds
sub
js
mov
adc
cmp
xchg
pop
aad
dec
adc
or
dec
call
sbb
push
dec
add
bswap
or
mov
dec
inc
and
xchg
in
mov
sub
mov
int
cmp
dec
pop
cmp
bound
or
fisttp
ja
neg
adc
mov
mov
outs
out
xchg
or
xor
cdq
and
jge
in
sub
aad
dec
and
ret
daa
jg
popa
inc
imul
daa
sub
push
daa
and
loopne
cmp
mov
mov
jg
adc
dec
mov
dec
cmp
mov
jle
xchg
(bad)
(bad)
and
out
pushf
pop
aaa
mov
mov
sbb
mov
scas
push
leave
pop
into
adc
int3
in
sub
ror
popf
inc
mov
inc
ins
and
xor
mov
mov
cwde
push
pop
ret
shl
fs
hlt
fadd
bswap
xchg
cmc
fnsetpm(287
jns
sub
push
add
dec
sub
add
cmp
xor
(bad)
out
and
data16
arpl
out
xor
imul
call
inc
sbb
mov
fdiv
sbb
add
add
mov
push
adc
mov
and
add
fucomi
stc
dec
int3
xchg
idiv
sub
xchg
xchg
call
cmps
clc
aad
mov
adc
jne
es
iret
inc
inc
in
sbb
mov
repnz
lea
out
mov
aaa
int3
dec
sub
ret
outs
bound
dec
cmp
fwait
nop
stos
mov
mov
adc
ror
or
nop
dec
fdiv
xlat
xor
mov
clc
add
into
jns
jge
(bad)
test
aaa
(bad)
imul
hlt
jb
push
mov
cmp
inc
cmc
std
xchg
icebp
cmc
call
mov
xor
cmp
add
mov
pop
ss
xor
jbe
cwde
mov
movs
popf
sbb
and
sti
js
fs
std
nop
mov
xchg
inc
adc
mov
push
add
push
pop
inc
cmp
(bad)
xchg
cmp
push
jl
es
jb
call
xchg
mov
mov
sub
outs
std
arpl
xor
xchg
mov
inc
mov
mov
clc
cmp
cli
mov
fnsetpm(287
sbb
cs
test
mov
sar
enter
push
push
inc
push
mov
cmps
push
xor
aad
sub
add
and
(bad)
js
iret
add
int3
mov
cs
mov
pop
sbb
push
call
outs
jl
mov
fadd
(bad)
ins
cwde
push
mov
inc
test
add
jbe
or
dec
mov
lock
adc
ret
inc
jmp
xor
mov
sub
jo
dec
push
inc
xchg
test
xchg
lfs
xchg
cld
mov
pop
loopne
and
dec
jge
jge
test
pop
push
pusha
sti
lods
push
(bad)
push
push
xor
(bad)
xor
adc
dec
into
xchg
mov
outs
(bad)
jl
into
and
jns
cvtpi2ps
repz
stos
in
dec
add
retf
gs
enter
fsub
inc
cmp
(bad)
(bad)
xor
je
xor
(bad)
jae
je
fst
jo
hlt
or
mov
cmp
or
stos
push
repnz
scas
jp
inc
popf
add
arpl
jbe
les
push
and
xchg
popf
sbb
inc
mov
or
mov
shl
adc
aad
hlt
fucomp
mov
add
outs
frstor
jmp
daa
in
fld
xchg
sub
push
add
and
ins
inc
lea
cmp
inc
jle
mov
in
jae
xchg
pop
push
cmps
jp
popw
pop
jg
sub
xor
sub
jbe
arpl
shl
test
jp
retf
lds
(bad)
cmp
cdq
bound
sub
cdq
ret
sbb
jmp
mov
ins
test
imul
fdiv
ret
mov
call
ror
js
and
jns
or
cmc
adc
inc
dec
push
in
bound
mov
popa
mov
int3
xchg
dec
lock
pop
or
inc
std
aad
jne
cmp
out
dec
fimul
sbb
enter
sub
sub
cmp
shl
dec
cld
mov
mov
push
sbb
add
push
dec
sub
adc
or
push
sti
mov
push
inc
mov
xchg
shr
out
pop
jmp
pop
dec
inc
xchg
in
nop
add
movs
loope
in
out
pop
cmps
inc
jp
dec
sub
movs
sub
inc
cli
or
pop
lods
les
ja
inc
xor
cmp
xchg
mov
mov
imul
mul
push
pop
aas
fisub
dec
sub
jo
int
stos
repnz
into
imul
sbb
pop
jmp
mov
inc
mov
mov
xchg
jno
or
arpl
loopne
or
xor
popf
sbb
ret
sub
call
push
popf
jne
sti
pop
xor
inc
ffreep
fs
aad
cmp
and
mov
dec
xchg
inc
cmp
scas
push
int3
out
dec
in
push
jno
pop
mov
cmp
pushf
das
jl
jnp
shr
jl
outs
(bad)
mov
(bad)
pop
sub
call
call
cmp
mov
jg
pop
pusha
out
jno
fsub
xor
cmps
jno
not
data16
cmps
scas
rcl
sahf
emms
mov
dec
repnz
push
in
jnp
xchg
push
adc
mov
cmp
sbb
jns
repz
cmps
sti
sbb
mov
sti
mov
fisttp
arpl
pop
ret
scas
test
push
xchg
retf
das
xor
push
js
pop
sbb
push
inc
fidiv
and
cmp
and
jl
aas
mov
pop
adc
loopne
mov
fwait
and
push
or
stc
std
or
int
jne
and
add
shl
cmp
mov
sbb
pop
mov
rcr
jo
inc
dec
mov
mov
and
in
mov
aas
shr
rcr
push
add
mov
push
xchg
adc
pop
pop
sbb
inc
inc
and
sub
and
mov
push
int3
cmp
sti
rcl
and
daa
dec
cmp
jp
loope
or
retf
xor
xchg
push
pop
arpl
mov
cmp
ss
push
or
push
rcr
lock
fnsave
push
jecxz
jae
imul
rcl
aam
addr16
push
jb
xchg
stc
sub
cmp
repnz
ins
push
mov
or
xor
push
ins
adc
ds
sbb
ss
sub
aas
fisttp
adc
iret
call
push
loopne
cmp
inc
popa
div
sti
out
outs
push
pushf
into
sbb
xor
add
mov
daa
ret
lods
dec
out
xchg
ret
push
pop
mov
add
out
aad
je
mov
clc
hlt
add
jmp
hlt
mov
movs
fsubr
mov
int3
cmp
sbb
not
xor
idiv
sahf
gs
pop
jle
fnsave
jnp
data16
call
orps
push
(bad)
mov
cmp
xor
(bad)
sbb
shl
loopne
add
inc
fnstsw
lea
jbe
pop
outs
mov
loop
xchg
pop
pop
add
mov
pop
aaa
cmp
scas
aaa
call
cli
test
rcl
mov
jmp
shl
jmp
std
jmp
cdq
imul
push
in
push
add
cmp
mov
iret
sbb
mov
add
xchg
add
(bad)
dec
retf
scas
inc
and
xor
mov
jne
xchg
mov
retf
jae
adc
cmp
xchg
test
lods
mov
ret
call
neg
xor
push
mov
mov
jl
scas
push
shr
jl
sbb
fadd
xor
add
sub
add
fs
jle
xor
mov
pop
(bad)
mov
cmc
mov
xchg
enter
loope
cmps
fiadd
ret
sbb
rcl
movs
jl
xor
std
fadd
inc
jmp
jbe
repz
or
retf
retf
mov
mov
(bad)
nop
rol
xor
or
(bad)
xchg
cmp
jb
enter
shl
fwait
sub
js
stc
outs
push
jmp
call
stos
test
out
adc
push
out
add
fdiv
rol
xor
je
dec
stos
mov
push
movs
pusha
jmp
pusha
add
fidivr
cmps
jne
hlt
in
je
or
test
pop
ds
sti
call
and
inc
scas
sar
sbb
scas
add
pop
sub
sbb
(bad)
sar
xor
sub
add
aad
xlat
mov
sub
out
divps
iret
cli
inc
dec
mov
fldenv
add
ret
xlat
dec
adc
add
xor
test
dec
fistp
mov
pop
jge
mov
jno
xchg
in
add
test
imul
sub
xlat
fidivr
repnz
je
adc
jp
sub
scas
ja
(bad)
xchg
cmp
sar
dec
sub
dec
mul
mov
sub
ins
sub
mov
or
leave
push
or
lods
sbb
retf
test
(bad)
pushf
cdq
aaa
and
jne
pop
(bad)
fwait
xchg
inc
mov
sub
push
std
hlt
cmp
sbb
add
jge
bound
pop
dec
adc
cmp
scas
or
pop
push
les
(bad)
std
xchg
sar
mov
imul
dec
pop
dec
gs
xchg
mov
shr
jbe
popf
clc
ds
nop
cmps
cmp
(bad)
xchg
jmp
cwde
pop
or
jb
(bad)
in
into
sbb
xor
fwait
sbb
mov
mov
or
xchg
mov
sar
and
shl
lds
add
or
add
daa
icebp
ret
shr
test
ret
inc
add
dec
mov
imul
mov
adc
xor
stos
xor
or
push
inc
(bad)
jnp
ror
xchg
sahf
dec
mov
jne
inc
sbb
jp
pop
add
dec
int3
ss
enter
jns
mov
jno
jnp
inc
lods
jle
test
mov
(bad)
adc
adc
nop
add
pop
inc
adc
push
xchg
imul
mov
sbb
ds
sbb
sbb
mov
add
loope
add
clc
es
mov
cmp
cli
xchg
push
pop
mov
dec
cli
test
into
cmps
adc
mov
cmp
stc
sbb
shr
pop
push
out
bound
dec
or
pushf
(bad)
pop
cdq
arpl
pop
pusha
fnstcw
sub
jp
retf
jle
je
loop
and
jne
dec
dec
ret
adc
retf
pop
test
loopne
out
hlt
jle
movs
or
xlat
int3
xchg
wrmsr
jb
sbb
fldcw
sti
xchg
xlat
xor
ins
jg
inc
aaa
sahf
jmp
data16
ffreep
jno
pop
jg
xor
jle
sar
xlat
loope
pop
mov
push
ss
(bad)
and
movs
dec
and
add
mov
sub
test
sub
sub
or
(bad)
jno
adc
xor
push
mov
push
js
std
mov
xchg
pusha
push
mov
fs
inc
or
dec
je
cwde
sbb
push
adc
add
or
push
loope
fwait
jbe
sbb
jl
out
cmp
push
fstp
adc
fst
or
out
popf
mov
daa
xor
lods
fst
jge
push
dec
daa
and
mov
mov
xor
fcom
sar
xchg
xchg
push
in
push
xchg
iret
or
fadd
aam
cli
mov
mov
hlt
gs
js
xchg
popa
scas
sub
xor
jge
pop
lods
repnz
and
aaa
sub
repz
sbb
and
pand
repnz
in
inc
add
aam
lds
push
imul
add
mov
sub
mov
sbb
or
and
lds
ret
inc
xchg
inc
sbb
loopne
aad
into
lods
daa
pop
retf
sahf
clc
cmp
pop
in
xchg
jmp
push
mov
int
pushf
scas
loopne
dec
daa
sub
cmc
not
pop
pushf
xor
jl
push
dec
pop
and
ret
cli
pop
pop
pop
adc
sub
mov
adc
cld
imul
sub
movs
or
cdq
rcr
mov
pop
sub
(bad)
loope
cmps
in
loopne
call
clc
inc
adc
lock
daa
test
loope
pop
out
out
inc
sahf
bound
aas
dec
sbb
cmp
sbb
leave
jae
cmp
xchg
ret
inc
cld
mov
sub
sub
or
les
scas
push
xor
shl
jl
repnz
cmp
inc
aas
test
xchg
mov
stos
mov
adc
cli
aas
mov
dec
adc
loope
lds
jns
stc
pop
lea
ret
jmp
add
daa
bound
icebp
xchg
lahf
cwde
inc
and
add
ja
adc
push
movs
adc
or
(bad)
test
stc
sahf
jb
jno
es
lahf
std
push
test
sub
sub
(bad)
mov
aam
jmp
dec
sahf
sub
ret
loop
mov
cmp
jle
(bad)
xor
cmp
push
gs
xor
mov
cld
pushw
(bad)
imul
sbb
add
mov
jp
push
jae
jp
mov
dec
sub
jne
inc
rol
neg
add
mov
xor
push
pushf
xchg
push
or
lods
cli
and
loop
push
add
xchg
cmps
imul
pop
pop
loop
jg
cmp
sar
jp
mov
cmp
adc
cwde
xor
out
loope
push
ret
dec
icebp
xchg
push
into
mov
jmp
rcr
inc
xor
pop
fisttp
push
lods
rol
outs
sub
sub
test
sub
sub
pop
in
jp
xchg
je
adc
mov
aas
int
or
xor
or
jne
sub
sub
data16
ret
addr16
push
rcl
repnz
jmp
jb
xchg
in
fcomp
iret
loope
imul
int
push
(bad)
icebp
imul
lea
pop
adc
xlat
pop
stos
adc
xchg
inc
loope
ins
add
not
outs
out
push
icebp
rcl
ret
aad
mov
or
mov
jle
push
xchg
ins
int
xor
xchg
ins
dec
aad
xchg
and
shl
add
out
sub
ret
ins
cmps
test
sbb
or
arpl
lods
frstor
iret
add
and
(bad)
lds
ds
sahf
retf
fild
mov
pavgw
mov
test
das
add
jne
sti
mov
push
(bad)
fs
mov
xor
sar
push
push
or
push
xchg
aad
into
mov
xor
xor
cmp
call
adc
jo
push
push
ins
push
mov
xor
and
jp
jne
aas
test
stos
iret
pop
inc
pop
cmps
idiv
mov
enter
xchg
mov
mov
fldenv
and
pop
xor
pop
pop
ret
fwait
inc
fs
out
repnz
sbb
sub
retf
xchg
fcmovnb
pop
aad
mov
inc
adc
and
adc
scas
sub
jg
fisubr
sub
movs
fist
stos
in
sub
adc
ja
push
ins
je
and
mov
sahf
int3
ds
push
mov
fisubr
out
or
pop
push
mov
xor
aaa
mov
mov
arpl
addr16
fld
pop
fiadd
xchg
xor
aam
test
mov
and
dec
out
dec
or
aam
std
rcr
cmps
in
shl
in
push
movs
inc
gs
cmp
das
push
push
les
mov
or
not
imul
xchg
dec
inc
pop
aaa
mov
das
add
inc
or
cmp
fwait
jl
ret
retf
add
fadd
loope
add
les
mov
test
inc
out
sbb
cmc
stos
imul
pop
jo
sub
mov
jp
pop
or
aam
dec
push
xchg
jmp
mov
push
adc
scas
stos
adc
xor
scas
adc
mov
mov
fimul
(bad)
sub
xlat
mov
test
call
mov
sbb
mov
fimul
jle
mov
cwde
push
xchg
das
xchg
mov
push
addr16
ins
int
jg
jmp
ins
lods
adc
xor
mov
fadd
mov
adc
push
dec
and
and
sbb
sahf
mov
shr
mov
loop
adc
stos
fucomp
fidivr
inc
aad
and
fdiv
les
stos
cmp
xabort
or
xchg
pushf
or
jecxz
(bad)
pop
dec
push
ins
lods
addr16
rcr
inc
jge
out
fistp
xlat
lds
nop
push
fld
push
cmp
arpl
jmp
adc
add
sub
and
inc
std
mov
sub
jb
jmp
or
aam
xor
add
jo
clc
cdq
imul
(bad)
loopne
sub
xchg
retf
cmc
jle
or
dec
or
or
shr
mov
adc
and
xchg
mov
fild
test
div
jle
clc
sbb
add
xchg
cmc
retf
ja
sub
xor
test
(bad)
sbb
and
adc
sbb
mov
inc
adc
or
push
std
or
xor
out
xor
lds
test
aam
and
xchg
mov
mov
std
xchg
jge
shl
mov
add
scas
push
rol
sar
add
enter
mov
loop
and
stos
(bad)
in
jg
cld
cmps
arpl
pop
scas
pop
out
xor
retf
and
ja
fst
aam
lock
push
pop
test
out
lahf
cmp
push
in
inc
shr
das
adc
mov
sbb
popf
dec
out
add
daa
xor
clc
or
cdq
movs
arpl
add
es
adc
pop
loop
jle
data16
add
mov
push
cmc
je
leave
xchg
mov
jns
cld
jmp
je
inc
sub
out
jno
xor
mov
push
inc
aaa
aad
adc
xchg
pop
fwait
sub
fidiv
imul
mov
xor
lods
out
push
leave
pop
lds
call
jnp
ins
cmps
sub
mov
mov
jb
jl
adc
dec
test
dec
push
sti
dec
inc
cld
es
enter
pop
jg
xor
pop
test
jp
popf
inc
or
xor
rcl
sbb
mov
cmp
mov
(bad)
pushf
mov
out
push
loop
xor
push
mov
mov
mov
mov
adc
pushf
lods
mov
cwde
inc
cmp
jge
and
loop
xlat
mov
sub
push
loopne
push
cli
cmp
dec
cmp
sahf
mov
mov
mov
lods
pop
push
jno
jle
iret
sbb
cmps
push
mov
add
jne
aad
popw
mov
cmp
inc
inc
dec
pop
inc
xchg
pop
scas
inc
sbb
das
and
pop
mov
pop
mov
data16
xchg
mov
popa
adc
adc
repnz
push
push
and
mov
push
enter
push
shr
adc
mov
add
out
jp
out
jbe
inc
xor
adc
imul
xchg
push
icebp
sbb
inc
push
inc
(bad)
in
add
sub
int
adc
pusha
mov
ins
test
mov
pop
loop
lods
mov
push
mov
jb
sar
int3
dec
clc
test
xor
cmc
loope
inc
addr16
pop
sahf
mov
(bad)
cmp
jg
cmp
mov
adc
jl
mov
xor
cwde
(bad)
pop
mov
pop
ja
pop
mov
sub
mov
jl
test
xor
shl
push
aad
ds
push
inc
mov
push
addr16
(bad)
and
jb
add
scas
cmp
xor
xchg
shl
pop
popa
dec
inc
popa
or
jg
aas
int
cmp
or
fisubr
mov
loopne
movs
cmp
dec
push
add
rol
and
adc
ins
clc
cdq
pop
fdivr
cmp
dec
(bad)
pop
ins
inc
rcl
cmp
push
cmp
xchg
xor
arpl
bnd
int
cmp
idiv
jg
loope
push
std
xchg
jmp
add
inc
es
out
pop
(bad)
jae
or
mov
repz
mov
scas
popa
rcl
lock
jmp
push
pop
cs
imul
test
jmp
adc
out
lock
push
ror
xchg
inc
sbb
add
daa
aad
cmc
add
stc
fadd
icebp
cmp
daa
mov
je
push
xchg
dec
push
jb
in
mov
ins
daa
aad
mov
or
jle
mov
dec
sub
cmp
sub
sbb
mov
sub
adc
sub
nop
xchg
pop
sbb
pop
jp
les
sbb
push
test
and
lods
les
out
jp
inc
sbb
int
out
jle
jno
pop
and
mov
aaa
outs
neg
jmp
add
nop
retf
sbb
pop
jne
pcmpgtb
mov
inc
jno
mov
fnstenv
ds
cmp
aaa
lods
sbb
gs
adc
push
es
rol
inc
fwait
mov
loope
push
sbb
daa
stc
add
retf
adc
dec
push
and
inc
pop
mov
push
jbe
and
nop
mov
sub
test
jmp
out
jae
push
jnp
mov
adc
ins
mov
mov
les
or
pop
or
jp
mov
scas
call
stos
loopne
clts
call
fbld
iret
pop
mov
cmp
fst
inc
add
pop
and
dec
ret
test
inc
lea
pop
sub
jae
pop
add
sbb
pop
hlt
dec
and
int3
cdq
xlat
into
ret
stos
xchg
stos
push
xchg
rcl
popf
in
lds
arpl
jg
fwait
xchg
popf
push
jl
adc
xchg
inc
icebp
pusha
jmp
test
xchg
push
mov
loope
fwait
sub
inc
rcr
fmul
mov
adc
fs
test
dec
jl
and
mov
cli
bound
js
mov
fld
fucomip
imul
loop
adc
add
xor
aad
xchg
inc
sbb
adc
dec
test
sahf
mov
jbe
jb
jmp
lahf
cmp
xor
adc
ins
xchg
xchg
aam
mov
ret
int
or
int
lods
and
sub
push
(bad)
cmps
and
adc
or
jl
stos
and
test
ins
or
or
stos
out
mov
(bad)
sub
aaa
cmp
sbb
adc
jno
cmp
inc
mov
sbb
les
sub
push
cdq
repnz
jg
pop
in
dec
int
xchg
mov
and
push
shl
sbb
jae
sahf
and
dec
stos
sbb
movs
sub
inc
mov
jp
push
jne
and
(bad)
jb
movs
mov
sbb
or
mov
retf
sub
inc
inc
scas
fisubr
loop
xor
bound
in
jnp
mov
jle
sbb
in
pop
pop
dec
cmp
xchg
cmp
fst
add
(bad)
popf
std
les
cmp
sbb
and
cmp
pushf
pop
mov
mov
test
fsub
stos
test
xor
and
xor
sbb
adc
out
fisttp
sti
dec
mov
push
inc
leave
lahf
in
mov
mov
cmps
jle
les
xchg
cli
dec
retf
pop
nop
nop
mov
mov
gs
push
shl
push
mov
xor
cmps
xchg
ror
mov
cmp
dec
or
sar
cs
int3
fs
push
mov
xchg
imul
pop
mov
cmp
mov
or
sub
fcomp
jecxz
adc
sub
jle
popf
or
mov
sub
int3
loop
outs
jl
pop
sbb
enter
jl
in
repz
clc
pop
ins
popf
test
xchg
inc
mov
adc
sbb
mov
and
iret
pop
movs
mov
jne
sub
call
iret
shl
stos
cmp
js
jmp
inc
mov
push
test
push
push
mov
adc
shr
cmp
mov
out
pop
adc
or
and
clc
aam
and
sub
sti
inc
shl
jb
xchg
sti
xlat
cmp
out
mov
xor
lock
outs
test
inc
mov
jmp
or
test
cmps
fisubr
mov
push
(bad)
adc
mov
or
daa
xor
or
push
add
or
mov
add
mov
lock
test
fs
push
pop
mov
sub
hlt
aam
lds
mov
push
aad
xchg
sbb
sub
fdiv
sbb
xor
mov
xor
pusha
test
inc
sahf
cwde
mul
push
scas
ja
pushw
push
add
jmp
ss
mov
fstp
xchg
stos
add
outs
cmc
push
mov
sub
and
xor
adc
or
stos
or
xchg
adc
loope
idiv
icebp
sti
test
inc
mov
dec
add
imul
and
loop
out
cwde
mov
jmp
adc
xchg
jne
fcomp
ins
or
pop
ret
jmp
or
sbb
pop
lock
xor
xchg
iret
mov
inc
and
lea
sahf
jmp
mov
ja
push
pop
xchg
mov
es
mov
aaa
jb
cdq
or
popf
jmp
dec
mov
mov
sbb
or
pop
pop
hlt
xchg
xchg
cmp
jmp
xchg
mov
push
cmc
mov
popa
jne
es
int
mov
mov
imul
inc
sbb
mov
rcl
pusha
ins
jae
mov
add
test
movs
faddp
and
mov
or
cld
dec
cwde
mov
or
into
mov
jns
shl
ds
jecxz
retf
push
pop
dec
cmp
inc
repnz
inc
shl
jnp
xchg
je
fcomp
std
ret
mov
xchg
dec
jp
hlt
add
fist
bound
lds
out
cmc
xchg
add
jg
xchg
mov
xor
mov
call
fdiv
xor
pop
xchg
sbb
outs
fwait
dec
jp
arpl
(bad)
cli
pop
out
cwde
test
in
pusha
stc
cmp
lods
or
lahf
sbb
push
sub
and
mov
movs
sbb
inc
gs
mov
mov
push
pop
ret
xchg
scas
jle
int
or
vmread
jne
stos
cs
bound
mov
inc
bound
fcomp
or
jl
test
xchg
sub
cmc
fimul
push
adc
push
pop
rcr
sub
loop
sahf
jg
mov
pop
xor
mov
test
daa
retf
mov
pusha
lahf
mov
xor
sub
jns
sbb
in
sub
gs
jo
lods
push
outs
shr
fnstenv
mov
xor
scas
repz
daa
fnstcw
dec
pop
das
mov
jne
lahf
mov
xchg
cld
mov
sbb
and
fwait
jp
loope
inc
or
cmps
mov
pop
dec
push
loopne
pop
das
fbld
dec
xor
dec
in
test
mov
out
and
xchg
push
lock
push
xchg
cmp
repnz
sbb
mov
xor
push
cwde
jecxz
sub
ds
jmp
push
sbb
outs
in
aad
movs
or
pop
(bad)
(bad)
cmp
mov
mov
(bad)
int
cmp
stos
pop
pop
aad
cmc
pop
dec
sbb
add
retf
shr
jo
inc
dec
fsub
adc
sub
int3
aaa
mov
push
pop
adc
test
imul
lock
add
xor
out
inc
popa
sub
dec
enter
mov
cmp
fsubrp
sbb
pop
fimul
pop
push
inc
js
jo
jle
lock
and
and
ss
test
pop
cmp
xchg
movs
mov
inc
cmc
xchg
aaa
mov
mov
or
shl
mov
lahf
adc
(bad)
repz
mov
(bad)
or
and
cwde
ret
add
dec
shl
jae
es
push
and
pop
fisubr
in
cmp
aam
jb
int
add
mov
or
inc
in
test
mov
movs
dec
jnp
movs
(bad)
das
and
or
inc
imul
imul
jmp
fmul
iret
mov
cmp
clc
dec
jmp
shl
shl
mul
mov
ds
fisub
add
add
mov
mov
xchg
mov
loopne
dec
fist
int3
int
fwait
push
stc
mov
and
div
ret
add
mov
loopne
imul
movs
jg
test
dec
sahf
pushf
ret
or
push
mov
xchg
xor
mov
mov
mov
int
jmp
test
inc
mov
bound
push
mov
jmp
mov
aad
pop
cld
icebp
xor
or
std
xchg
fisttp
sub
and
test
mov
popf
retf
pop
gs
pushf
dec
ja
lods
and
stc
push
cwde
mov
or
push
xlat
outs
(bad)
iret
mul
bound
dec
arpl
dec
xor
xchg
inc
cmp
sub
or
pop
lea
push
ss
test
push
loopne
aam
and
xchg
sahf
fisubr
or
(bad)
fild
xchg
nop
pop
mov
sub
push
sbb
inc
sbb
gs
xor
xchg
test
push
loope
jo
repz
sbb
push
stos
outs
push
cli
int3
push
mov
sahf
imul
jae
fucom
popw
cld
or
push
fadd
shrd
inc
stc
stos
push
cmp
pop
cld
pop
cmp
cmp
inc
xchg
ins
imul
cmp
or
cmp
mov
mov
outs
mov
adc
inc
test
pushf
pushf
mov
cli
js
xor
push
lods
sbb
mov
sub
loopne
sub
ret
xor
push
mov
jnp
jecxz
in
and
pop
or
out
inc
mov
sub
fldenv
mov
and
push
icebp
xchg
cmp
inc
cli
sub
xchg
fcom
cwde
pop
ds
jle
and
jle
imul
pop
xor
jae
movs
nop
loope
mov
pop
mov
enter
test
lea
fwait
mov
or
(bad)
and
mov
outs
cmp
mov
adc
mov
dec
inc
cdq
fbstp
adc
dec
mov
jg
sbb
movs
mov
jmp
mov
shl
inc
imul
out
jb
jae
xlat
lds
pop
adc
rcr
pop
cmp
inc
lea
add
xchg
sub
push
pop
mov
adc
fadd
and
pop
inc
jo
movs
push
add
(bad)
test
ss
mov
adc
add
inc
cdq
sbb
push
(bad)
xchg
adc
lock
stc
or
mov
push
dec
dec
lock
outs
daa
shl
js
jl
repnz
mov
xchg
cli
clc
pop
(bad)
ds
or
push
lods
into
inc
sub
cmp
loopne
shr
cld
jg
dec
pushf
mul
jo
test
imul
fmul
dec
dec
cmc
mov
adc
sub
adc
jmp
cmc
mov
jmp
icebp
jno
cmc
int3
jb
ins
jecxz
cli
fcmovnbe
cdq
clc
mov
imul
add
pop
sub
push
mov
pop
add
pop
mov
xchg
inc
add
cmp
xchg
aam
stos
pop
gs
xchg
loope
add
into
call
fnstcw
in
lds
adc
(bad)
inc
mov
sub
xchg
jbe
sti
xor
and
mov
outs
or
int
test
ds
out
scas
loop
shl
loope
pop
icebp
sbb
or
adc
push
jno
jl
fsubr
adc
and
mov
add
sub
jecxz
retf
mov
and
leave
inc
out
mov
mov
dec
ds
jg
xor
mov
add
loope
xchg
inc
sub
jo
xchg
sub
adc
cmp
sbb
outs
es
mov
pop
cmc
sub
popa
iret
dec
or
fmulp
mov
ds
fld
mov
cmp
jmp
pop
inc
sbb
icebp
in
call
push
mov
lods
mov
jae
hlt
cmps
fs
retf
loope
shl
xor
fdivrp
cmp
add
adc
arpl
cmp
cmp
mov
inc
(bad)
sbb
mov
inc
outs
loop
dec
addr16
fsubr
push
and
movs
mov
xchg
add
and
mov
inc
push
movs
std
test
mov
shl
jmp
jmp
sbb
sbb
cdq
mov
hlt
popa
sub
and
outs
les
cmp
push
popf
xor
jmp
popa
mov
sub
scas
push
icebp
clc
add
scas
loope
mov
jl
imul
adc
test
jno
pop
push
ds
mov
(bad)
leave
sbb
dec
mov
ins
sbb
mov
lods
adc
repnz
jb
cmp
pop
aam
shl
jle
sti
add
call
sub
pop
mov
jp
paddusw
cld
imul
pushf
in
xor
sbb
mov
fs
xchg
fbstp
mov
addr16
jns
inc
jne
and
arpl
fidiv
imul
jb
sar
pop
xchg
xor
pop
bound
xor
xor
add
inc
rep
into
jns
fwait
jno
add
out
movs
loope
adc
mov
imul
inc
int3
jnp
mov
pop
xor
mov
xor
dec
cmp
and
inc
inc
add
inc
push
add
jae
jne
mov
loope
ret
fwait
sbb
push
loopne
pop
jp
mov
sbb
mov
bound
sub
into
xchg
or
mov
aam
xchg
fisub
fst
xchg
icebp
add
(bad)
pop
popf
jg
aam
test
pushf
movs
inc
rol
pop
lds
inc
xchg
mov
fidivr
(bad)
fs
or
test
adc
and
mov
pop
lods
loopne
cmp
stos
das
mov
mov
cli
xchg
jmp
loope
lock
int3
mov
add
pop
dec
into
sub
xchg
pop
xchg
pop
dec
rol
(bad)
jmp
mov
std
dec
fwait
mov
sbb
in
in
inc
push
call
loopne
(bad)
out
in
test
pop
stos
adc
test
cld
cmps
rol
add
sbb
jns
inc
mov
or
pop
stc
rcr
and
cli
jb
cwde
adc
and
scas
adc
or
sbb
sbb
mov
fsubr
repnz
dec
fidiv
loopne
xchg
pop
adc
dec
movs
mov
or
neg
push
add
aad
mov
jne
dec
pop
out
out
mov
mov
pop
dec
sub
nop
pushf
add
aad
xchg
in
popa
add
jmp
sbb
jmp
stos
mov
mov
cs
fidiv
fld
xchg
out
jmp
je
out
xchg
mov
xor
aas
dec
sti
and
call
or
sahf
inc
mov
outs
mov
jmp
imul
mov
(bad)
pop
or
xor
ret
add
sbb
loopne
call
aad
and
sbb
push
ret
jle
push
adc
jge
jge
jp
rcl
popa
loopne
adc
mov
hlt
rcr
repnz
sbb
ret
xchg
add
shl
pop
push
imul
sar
inc
inc
loopne
repnz
pop
lahf
jnp
mov
(bad)
sahf
jge
or
dec
mov
xchg
cmc
mov
mov
adc
stos
xor
sahf
dec
sbb
sbb
outs
mov
lock
in
mov
jp
data16
std
mov
cmp
dec
ss
pop
iret
lahf
(bad)
bound
mov
xor
mov
ror
inc
inc
fs
inc
dec
nop
push
push
dec
mov
repnz
mov
clc
clc
cmp
mov
cmp
or
push
push
dec
jb
in
ret
or
shr
sub
or
mov
cs
jmp
inc
sbb
pop
jl
cmp
mov
ret
pop
or
imul
(bad)
jl
mov
cmps
push
jne
mov
enter
sbb
adc
inc
aam
and
rol
mov
pop
xor
je
push
pusha
add
mov
(bad)
jp
xchg
cli
mov
push
mov
mov
mov
mov
les
call
test
xchg
fcomp
xchg
cmp
push
cmp
(bad)
(bad)
and
adc
sahf
fisubr
scas
cli
repnz
pop
lock
(bad)
scas
int3
out
(bad)
in
leave
xchg
into
popa
sbb
cs
(bad)
jg
in
xchg
dec
in
(bad)
lahf
mov
xor
adc
inc
xor
sbb
xor
mov
outs
hlt
(bad)
pop
movs
cs
jns
leave
dec
cmp
bound
data16
xchg
jl
mov
in
in
nop
pop
dec
out
stc
fdiv
adc
out
xchg
add
or
xor
sub
dec
mov
scas
xor
ror
push
inc
jl
cwde
mov
cmp
jge
lds
sbb
adc
xor
(bad)
inc
or
(bad)
inc
adc
pop
mov
sbb
pushf
outs
(bad)
(bad)
jbe
pop
test
mov
push
mov
(bad)
pop
pop
mov
fisttp
stos
add
push
cdq
ins
push
sbb
add
shl
aam
clc
inc
repnz
cmp
jnp
in
dec
sub
pop
fldenv
inc
dec
fistp
push
jge
lods
retf
(bad)
loopne
add
xor
push
xchg
shl
mov
xlat
out
sbb
dec
das
and
inc
cs
push
ficomp
in
jo
nop
inc
pop
neg
pop
mov
pop
dec
dec
icebp
and
sbb
jne
mov
add
fist
dec
mov
push
mov
repnz
xchg
outs
fist
and
push
mov
adc
in
and
lea
cmp
and
xor
jmp
shr
xchg
dec
mov
jb
xor
mov
ror
ins
add
sub
out
sub
mov
jb
push
iret
xchg
popa
jnp
int
setns
ja
add
jno
xor
xchg
retf
xchg
mov
icebp
enter
ret
call
movs
dec
scas
sbb
int3
sbb
jg
and
jmp
xchg
adc
ss
push
xor
icebp
out
in
aas
aam
xor
pushf
fild
mov
mov
mov
stos
shl
mov
aas
aaa
jge
icebp
or
in
in
push
sub
inc
data16
loopne
in
iret
nop
pop
adc
sbb
and
xchg
sub
or
test
sbb
inc
cmps
add
xchg
and
or
pop
and
sub
add
(bad)
fld
lods
nop
mov
repnz
iret
int3
scas
(bad)
pop
adc
jmp
sub
loopne
aam
jle
pop
inc
jno
jle
xchg
scas
dec
jle
jle
test
cmp
cmp
js
add
in
adc
xchg
pop
pop
scas
(bad)
aaa
into
sahf
mov
sub
inc
out
pop
and
mov
inc
int
xchg
in
fstp
dec
ret
repnz
es
sbb
add
ins
dec
int3
jae
arpl
push
int
scas
sbb
mov
sbb
sub
mov
outs
pop
mov
scas
out
std
out
dec
push
ja
aaa
sbb
es
adc
add
adc
ss
shl
es
push
(bad)
retf
mov
mov
mov
pop
xchg
dec
ret
imul
lds
movs
dec
inc
push
adc
sub
mov
adc
(bad)
outs
mov
aas
stos
inc
sub
out
xor
mov
adc
ja
sbb
dec
js
xchg
mov
xchg
sbb
or
pop
pop
ror
inc
je
mov
dec
mov
ins
int
pop
loopne
mov
xchg
or
inc
dec
inc
not
dec
imul
xchg
gs
ja
sahf
ja
mov
and
(bad)
std
test
cmp
fld
pop
out
cmps
dec
lods
jle
ss
xchg
fsubr
test
mov
xchg
cmp
imul
push
xor
out
sar
nop
mov
test
push
push
js
fldenv
dec
out
add
ins
fistp
mov
pop
pop
adc
add
adc
outs
or
jecxz
and
mov
mov
adc
jmp
es
xchg
mov
ret
dec
inc
sar
mov
fwait
inc
push
das
dec
ja
fcom
cdq
sbb
sbb
or
and
mov
ret
mov
and
push
cli
cs
or
mov
rol
inc
mov
lahf
out
sub
mov
push
(bad)
outs
xor
cli
ret
dec
imul
sar
sti
mov
xor
lds
test
lea
inc
mov
js
inc
xchg
sahf
mov
enter
imul
push
add
dec
icebp
add
retf
jmp
inc
cmp
int3
call
test
hlt
movs
mov
mov
ja
sbb
pop
inc
loop
out
ins
xor
shl
pusha
aad
sbb
dec
sub
jbe
fs
stos
add
or
sti
push
fadd
popa
cs
and
mov
push
and
int
sub
icebp
cmp
xchg
scas
sbb
shl
mov
outs
in
rcl
bound
jp
inc
scas
les
hlt
fistp
and
outs
xchg
pusha
mov
fdivr
ss
jmp
sub
xchg
inc
pop
retf
jmp
loope
add
iret
sub
and
loopne
fs
stc
ins
ins
out
punpckhwd
imul
dec
push
imul
ins
ret
cmp
es
das
dec
(bad)
push
mov
test
repz
cmpxchg8b
(bad)
pop
dec
dec
outs
subps
inc
movs
ins
lea
mov
stos
xor
push
ret
mov
lahf
daa
fcom
fbstp
dec
push
lea
cld
int3
ja
cli
add
adc
mov
popa
push
mov
or
jmp
(bad)
sub
xor
dec
jp
cmp
dec
int
xchg
dec
lahf
xchg
clc
pop
sbb
pop
mov
pop
clc
lahf
adc
fs
and
mov
out
jecxz
ins
sbb
lahf
imul
mov
pop
hlt
inc
hlt
pop
mov
ins
jno
inc
push
and
push
cmc
hlt
cmps
sub
(bad)
jbe
sbb
ret
in
sbb
ror
push
xor
movs
(bad)
fsubr
ret
pop
xchg
std
out
ins
push
imul
xlat
add
in
dec
jle
cmp
adc
push
inc
add
je
mov
movs
je
push
addr16
and
push
push
inc
cmc
fcom
leave
cmp
adc
retf
popa
push
dec
sbb
(bad)
or
dec
enter
push
inc
cmps
xor
sub
fs
xchg
add
movs
push
or
cwde
xchg
and
pop
mov
mov
inc
daa
repz
fcmove
push
pop
mov
ins
mov
lea
sbb
add
imul
gs
addr16
mov
pop
inc
or
repz
push
inc
mov
loope
mov
sahf
(bad)
cmp
or
jne
cmp
jbe
mov
cwde
and
dec
jnp
sbb
xchg
sbb
test
mov
mov
or
and
push
cld
cmps
mov
daa
xor
daa
xchg
lods
adc
push
(bad)
push
push
in
inc
push
mov
and
loope
cli
mov
ins
es
sub
jp
test
rol
pop
ja
push
lock
gs
cmc
jnp
mov
mov
mov
pop
xor
add
retf
pop
mov
sbb
inc
(bad)
loopne
inc
mov
lods
xchg
hlt
cmc
aam
movs
xchg
and
lock
mov
in
push
cdq
call
sub
jo
pop
and
cmps
shr
shr
and
repnz
mov
stos
gs
sub
cmps
in
repnz
pop
gs
add
imul
in
stos
jmp
xchg
adc
add
inc
adc
icebp
add
xchg
and
into
fmul
cmp
and
or
mov
cmp
(bad)
mov
or
js
xchg
add
mov
push
inc
mov
loop
js
sti
jg
push
fwait
pop
push
loope
leave
pop
mov
lds
lods
or
jmp
vucomiss
xchg
mov
mov
arpl
and
in
inc
jmp
mov
xchg
jnp
add
sub
jns
stc
pop
xchg
mov
aas
unpckhps
addr16
jae
enter
cdq
mov
pop
out
xchg
call
icebp
and
test
add
push
sub
test
fbstp
jmp
out
iret
push
ja
into
jg
cmp
retf
inc
retf
xlat
and
rcl
fwait
into
fs
mov
rep
aam
out
sbb
test
jp
bound
xlat
ret
pop
cmp
push
push
cmc
sub
jecxz
(bad)
outs
or
jge
add
and
push
or
mov
jle
cmp
push
sbb
push
fld
pop
push
add
mov
sbb
mov
mov
adc
cmp
pop
cmp
test
cmp
sub
aad
(bad)
call
xor
inc
lock
repz
inc
or
inc
fstp
ja
(bad)
jle
adc
sbb
pop
pop
ret
sar
and
ins
test
xchg
push
in
cmps
lea
push
mov
and
icebp
inc
jnp
mov
mov
xchg
(bad)
mov
push
mov
(bad)
sti
dec
mov
cmc
int3
movs
or
sbb
test
pop
and
mov
mov
xchg
mov
loopne
fadd
sbb
mov
mov
push
mov
outs
jp
outs
sbb
lods
dec
sub
sub
mov
sbb
and
inc
sti
pop
call
mov
retf
mov
(bad)
fisub
xor
ret
sub
ss
int
mov
and
or
or
call
xchg
or
push
iret
mov
clc
jp
shl
ucomiss
dec
inc
hlt
das
sbb
(bad)
inc
mov
scas
push
out
inc
pop
jno
jecxz
adc
(bad)
popf
ret
push
adc
pop
pop
adc
fidiv
dec
inc
adc
inc
data16
aad
aas
fbld
mov
dec
add
test
sbb
pop
cmps
adc
jg
jo
and
jg
xor
cmp
ds
pop
jae
mov
xor
out
push
cmp
mov
or
mov
faddp
dec
sti
je
je
into
mov
xlat
cs
inc
dec
imul
daa
fst
std
(bad)
movs
pop
jp
les
push
or
rcl
sub
scas
fsubr
adc
sbb
jo
add
dec
jp
mov
cmp
adc
lahf
jl
ins
xchg
jno
xchg
push
dec
mov
ins
cli
daa
mov
repnz
push
sbb
mov
ret
add
jge
std
fcom
int
dec
adc
xchg
inc
xchg
loop
mov
push
sbb
pop
popf
and
pop
sbb
mov
xor
(bad)
adc
mov
inc
jmp
and
mov
cld
scas
sbb
inc
or
and
mov
pop
call
loop
xchg
out
aaa
add
stos
rcr
clc
mov
jne
jl
sub
mov
sbb
neg
mov
push
or
mov
push
sub
enter
or
sbb
inc
mov
xchg
sub
data16
test
imul
xor
or
pop
enter
add
stc
adc
popa
mov
je
jae
pop
ds
or
inc
jp
repnz
cli
ret
iret
sar
and
xlat
add
ret
arpl
mov
add
cmps
imul
call
cwde
mov
sub
jmp
inc
mov
mov
aas
mov
push
jno
or
jle
mov
out
cmc
mov
xchg
jne
fisub
jns
jmp
ficom
clc
xor
rol
mov
dec
lds
mov
mov
(bad)
jl
neg
add
adc
jl
pop
aaa
xchg
xchg
hlt
push
ds
jmp
leave
add
cmp
mov
retf
cmc
popa
jns
or
xchg
inc
cmp
retf
mov
test
lahf
aad
xor
loopne
test
jmp
nop
xor
outs
retf
xor
fidiv
(bad)
movs
ffree
mov
dec
jg
cdq
cld
mov
loop
retf
inc
inc
call
adc
push
push
shr
stc
pushf
mov
xchg
inc
icebp
lea
(bad)
push
push
cdq
mov
shl
aad
out
adc
mov
mov
cmp
inc
out
xchg
mov
mov
rol
mov
jg
jmp
imul
pop
cmp
add
iret
(bad)
push
pop
call
neg
ret
inc
pop
hlt
and
cmp
icebp
pusha
mov
jne
or
pop
test
stos
ret
imul
sbb
add
inc
cli
mov
push
into
mov
cs
cmp
ds
xor
xor
mov
hlt
inc
retf
ret
cmp
retf
out
and
not
call
mov
aaa
pop
je
nop
cwde
outs
(bad)
xor
daa
imul
cmp
int3
cmp
add
mov
repz
cmc
mov
ins
not
fs
(bad)
scas
rol
pushf
sar
push
xor
test
pop
retf
pop
retf
pop
mov
std
mov
int3
fimul
mov
aam
sub
fisttp
mov
retf
inc
pop
sahf
es
call
cmps
jne
inc
mov
popf
add
int
test
mov
aaa
push
pusha
mov
xor
xchg
scas
out
test
xlat
(bad)
in
sbb
dec
ins
or
out
cmps
stos
inc
push
fstp
xchg
cs
cmp
scas
dec
xlat
add
cmp
cdq
jns
xor
enter
mov
dec
loopne
cld
add
movs
xor
imul
loop
dec
popa
dec
leave
dec
fs
push
mov
mov
mov
test
sahf
and
popa
sbb
mov
jb
xor
enter
cld
xchg
sbb
sbb
xor
add
dec
fidivr
inc
adc
in
js
vpmadcswd
add
sti
jl
hlt
or
aas
pop
sbb
or
mov
push
js
sbb
lahf
gs
dec
cmp
test
and
cmp
jle
clc
sub
mul
xchg
xchg
pop
dec
inc
sub
and
pop
pop
sahf
dec
jge
imul
push
rol
add
jo
sub
mov
data16
inc
sbb
mov
pop
and
mov
xchg
sub
mov
arpl
test
pop
mov
pop
push
call
and
and
in
movs
dec
mov
jbe
sbb
mov
in
jp
push
jns
mov
fnstsw
jae
ss
lds
jge
cdq
jb
mov
rol
rcr
(bad)
loop
mov
dec
mov
test
push
or
stc
add
iret
aam
repnz
xchg
adc
pop
int
and
xchg
pop
loop
dec
aaa
ja
fistp
out
cmp
mov
and
push
inc
inc
jno
in
xchg
scas
and
dec
movs
loope
sbb
stos
std
xchg
arpl
inc
cmp
dec
jne
repnz
add
adc
rol
enter
in
lods
mov
cs
fisubr
cmp
or
sub
jmp
cmp
fsub
push
dec
xchg
in
jbe
push
outs
cmps
pop
and
mov
xchg
cmp
jb
loopne
mov
jle
xor
cmp
(bad)
lds
arpl
jecxz
push
dec
push
js
inc
daa
loope
lods
xor
adc
xchg
xchg
(bad)
loope
pop
adc
imul
fsub
cld
test
iret
pop
dec
loopne
add
add
xchg
in
mov
jl
repz
xor
cdq
add
or
xchg
mov
jne
fisubr
mov
loope
mov
pop
or
push
adc
lahf
cmp
push
std
iret
rcr
mov
xor
push
pop
out
mov
gs
mov
enter
and
movs
xchg
pop
daa
aaa
scas
pop
and
shr
jp
jns
mov
sub
mov
sti
xor
dec
cmp
ins
aaa
push
xchg
daa
loop
jns
icebp
inc
imul
jnp
cwde
adc
into
mov
imul
adc
sub
clc
sub
setne
jo
or
add
fsub
xor
test
sbb
fimul
fdiv
dec
inc
lock
arpl
add
push
cmp
in
mov
rol
mov
jl
sub
inc
push
rcl
int
sub
inc
or
aas
xor
push
and
jno
add
mov
aad
inc
mov
mov
sbb
or
shl
add
xchg
fwait
movs
repnz
loopne
clc
and
sub
inc
push
fild
mov
jge
loopne
xor
cmc
cmps
mov
stc
hlt
jge
pop
or
in
adc
stos
cmp
cmps
std
(bad)
loopne
push
or
dec
xchg
sbb
scas
sahf
mov
sub
cmp
push
cmp
xor
sahf
xchg
pop
inc
inc
fwait
das
sti
mov
cmc
outs
test
sub
jno
mov
add
cmps
loop
cld
add
mov
aaa
das
sbb
dec
dec
ja
mov
mov
fcom
inc
cmp
cmp
(bad)
fdiv
out
mov
xchg
sub
dec
cmc
scas
mov
adc
xor
cmp
movs
popa
add
aas
das
push
mov
mov
jmp
inc
(bad)
xor
sub
loope
int3
or
scas
inc
pop
sub
mov
sbb
push
cmps
cmps
sub
adc
ds
jbe
xor
jmp
shr
mov
cmp
lahf
inc
sbb
sbb
pop
jl
mov
jg
pop
test
cmp
dec
in
retf
lea
sbb
push
fptan
stos
aad
sub
lds
pop
mov
lea
mov
dec
fdivr
test
imul
cmps
sbb
xchg
xchg
sbb
rcr
cld
call
arpl
das
pop
inc
retf
mov
mov
aad
ror
shl
mov
lahf
sbb
bound
aam
aam
pop
xchg
add
(bad)
retf
jecxz
xchg
jbe
and
jl
ror
pop
fsubr
outs
jle
inc
mov
xchg
mov
dec
lods
adc
xchg
icebp
sar
add
nop
sbb
inc
mov
add
arpl
cmpxchg
cmp
pop
ret
cs
cmp
sbb
or
pop
dec
fucomp
das
mov
jne
dec
xchg
popf
pop
shl
pop
mov
or
rcl
dec
mov
adc
fwait
xor
add
or
and
jo
in
xor
stos
xor
and
cwde
loop
aad
jbe
stos
mov
adc
cmc
adc
pop
mov
je
movs
or
xor
mov
in
out
fisttp
inc
arpl
mov
dec
adc
adc
out
inc
jmp
jmp
or
aad
mov
jg
pop
push
stos
dec
test
push
push
cs
(bad)
dec
and
loop
cld
xchg
fdivrp
sub
out
jle
and
pushf
push
imul
inc
(bad)
popf
out
push
cmps
mov
and
push
push
or
xchg
shr
fisub
sbb
sub
pop
jp
mov
xor
or
retf
and
xchg
(bad)
mov
shl
xlat
rcpps
lahf
and
je
mov
cmp
nop
call
cmp
sbb
sub
jge
mov
aaa
dec
pop
in
lahf
xchg
pop
cdq
(bad)
stos
add
pushf
pop
lea
in
repnz
pop
ja
movs
test
mov
jle
ins
rol
mov
add
fcom
cmp
pop
cmp
mov
inc
fcmovb
push
push
stos
inc
test
push
xor
add
imul
rcr
jb
ret
cmp
cli
pop
int
jmp
inc
cmp
inc
adc
add
adc
fwait
bound
div
jbe
test
jbe
fdiv
aaa
cmp
sbb
push
push
mov
addr16
retf
lea
xchg
stos
test
sbb
scas
daa
test
aaa
adc
icebp
mov
or
jno
popa
mov
sbb
ror
push
pop
xor
std
add
ret
sbb
mov
int3
out
pop
cs
arpl
ret
pop
jecxz
adc
push
add
cli
clc
icebp
popf
xchg
jns
cmp
out
adc
sbb
jecxz
iret
mov
neg
cmps
retf
in
and
jb
retf
push
and
and
loope
jae
ror
test
lea
stos
or
and
push
cld
ret
fnstsw
cmp
clc
mov
adc
sbb
mov
push
mov
ret
leave
jbe
test
xchg
in
das
mov
pop
mov
push
adc
jns
ja
cmp
push
pop
mov
jle
xchg
(bad)
xchg
push
neg
stc
inc
cmp
fcom
out
stos
pop
es
jp
add
xor
push
mov
inc
push
int3
(bad)
jmp
aaa
adc
fild
push
cmps
jae
push
cmp
inc
je
addr16
test
xor
test
mov
sbb
arpl
mov
inc
stc
mov
ror
cmp
jp
cld
jp
or
repz
js
sbb
aaa
fmul
and
or
stos
push
and
cs
aam
cmc
mov
cmp
jge
mov
mov
fsubr
out
imul
imul
dec
adc
xchg
jl
mov
fld
cmps
fiadd
mov
sub
fistp
jge
cs
fs
aam
sub
sti
jecxz
data16
pop
add
adc
ds
xchg
int
in
fxch
push
dec
sub
push
pop
and
and
sbb
jg
push
loope
push
cld
pop
xchg
nop
or
pop
mov
xor
pop
and
test
xlat
inc
stos
cmps
adc
pop
std
xor
cmc
call
mov
mov
aad
xlat
jnp
pop
out
mov
jl
outs
xchg
lods
iret
scas
hlt
xor
aas
sahf
cmc
mov
ins
pop
and
xchg
cmc
lock
push
jmp
repnz
movs
shl
cwde
xor
sbb
mov
pop
cld
icebp
inc
ss
aad
mov
xchg
push
dec
push
js
test
xchg
add
pop
adc
jle
outs
adc
push
dec
inc
sahf
xchg
enter
adc
mov
unpcklps
cmp
xor
jb
cli
popa
fnsave
lods
enter
cmp
adc
push
in
xor
xchg
ret
dec
fnstsw
dec
jne
(bad)
jg
inc
jne
fidiv
ds
mov
sub
call
pop
inc
das
in
lahf
movs
sbb
cs
lods
std
das
out
jbe
test
lea
dec
fldenv
in
test
mov
in
jp
ret
inc
iret
adc
jne
or
ds
jl
repz
mul
cwde
jle
jmp
popa
rol
or
fdecstp
idiv
cmp
dec
mov
add
push
sub
dec
jge
xchg
add
fs
pop
(bad)
fmul
inc
popf
xor
push
outs
(bad)
xor
into
fdivr
fimul
call
inc
xchg
mov
or
aam
movs
xchg
inc
push
cmp
jbe
add
dec
mov
popa
add
ror
sbb
fidiv
inc
and
or
sbb
or
and
mov
mov
fwait
popa
aas
aam
jmp
push
clc
push
xchg
ror
loopne
stos
mov
mov
mov
sbb
mov
adc
push
xchg
in
out
xchg
repz
test
adc
(bad)
fldenv
mov
xchg
sbb
inc
dec
xchg
push
adc
ror
outs
cmp
push
cmp
loope
es
dec
cmp
in
pop
mov
and
std
xor
sub
cmp
jle
mov
pop
jmp
popa
cmp
scas
inc
es
cmps
xchg
addr16
inc
call
ins
out
jmp
adc
popf
stc
xor
ffreep
dec
retf
movs
popa
xchg
or
nop
mov
out
cmps
sub
aam
xlat
mov
mov
sti
ret
aaa
pop
jmp
clc
sbb
push
hlt
adc
dec
data16
into
aas
inc
push
pop
mov
xor
sti
xor
mov
cmp
mov
mov
xor
jl
mov
leave
xchg
ror
jmp
bnd
mov
and
daa
or
inc
test
mov
xor
mov
pushf
ja
jmp
test
xchg
jg
mov
cs
lock
add
sbb
or
push
ins
or
inc
pusha
(bad)
call
push
(bad)
pop
ja
dec
mov
xor
jmp
clc
loop
rcl
test
lds
(bad)
in
xchg
mov
jo
out
mov
(bad)
cmp
loopne
ins
xchg
and
xor
push
pop
inc
loop
sti
jae
ret
mov
sbb
aaa
xor
cmps
gs
adc
mov
adc
shr
bound
movs
adc
sti
xchg
std
mov
hlt
fwait
inc
add
sub
call
(bad)
aaa
sti
push
sbb
mov
push
push
sbb
lods
loop
xchg
repnz
mov
clc
add
inc
inc
imul
or
cmps
dec
mov
pop
or
xlat
nop
xchg
push
and
sbb
mov
not
xchg
les
inc
or
pop
xchg
test
dec
into
es
adc
push
mov
pop
jns
push
pop
stos
repz
imul
pop
pusha
jmp
out
xor
cdq
mov
out
aad
ret
adc
inc
push
jg
shl
inc
idiv
cdq
inc
pop
cmp
(bad)
out
xchg
pmaxsw
cmp
xor
inc
cs
bound
call
mov
cmp
adc
sub
ror
cmp
div
xchg
mov
mov
ficom
sub
dec
jne
fcomp
cs
pop
mov
cld
add
js
scas
std
mov
mov
adc
movs
cmp
sbb
lods
jmp
mov
call
inc
mov
rol
mov
cli
cli
test
out
xchg
jl
xor
xor
mov
retf
mov
call
arpl
jo
adc
mov
aad
push
cmc
fidiv
cmp
popa
sti
test
(bad)
jl
nop
mov
lahf
lea
mov
leave
ja
xchg
enter
jge
mov
pushf
and
add
sub
clc
retf
push
ins
mov
push
push
call
push
dec
sbb
ror
cmp
dec
cmp
jmp
pop
sbb
push
mov
jg
inc
cmp
mov
dec
cmp
fwait
into
inc
mov
js
icebp
mov
push
cdq
fsub
aas
jmp
inc
cli
fbstp
in
and
out
jmp
jnp
push
mov
sbb
rol
mov
cmps
aas
fbstp
add
out
repz
adc
movs
push
jmp
mov
inc
and
cmps
fcomp
sbb
mov
fild
dec
xor
xor
(bad)
and
clc
(bad)
movs
xor
xor
scas
pop
add
cmp
mov
sti
stos
aad
fsubp
xchg
push
sbb
jmp
fstp
dec
sub
(bad)
pop
scas
not
mov
leave
pop
nop
mov
mov
dec
or
test
and
mov
add
jb
jo
test
jo
pop
rol
movs
jmp
push
mov
mov
pop
cmp
and
dec
les
fst
addr16
xchg
ds
loop
in
into
fnstsw
jmp
xchg
sub
dec
cmp
outs
movs
int
clc
fisubr
jl
mov
mov
inc
nop
pushf
loopne
xchg
sbb
push
cs
jbe
rol
lods
push
movs
xchg
inc
jae
sar
cmp
call
jp
mov
fwait
aam
stos
mov
xchg
(bad)
ds
sahf
addr16
out
xchg
sub
mov
jbe
je
push
ja
and
js
pop
div
and
gs
jmp
lods
mov
pusha
ss
popa
jge
fs
imul
cli
add
xchg
pop
jo
mov
adc
dec
icebp
call
push
(bad)
cs
and
fsub
push
(bad)
shl
sti
push
cdq
mov
(bad)
fld
or
xor
fwait
(bad)
jbe
mov
bound
mov
fstp
mov
lock
inc
mov
jmp
mov
fld
jle
or
or
pop
xor
pushf
jmp
push
sahf
fidiv
ss
add
xor
fcomp
(bad)
lahf
sub
jle
repz
je
mov
inc
pop
inc
xchg
mov
cmps
xlat
neg
fcom
dec
push
inc
stos
jp
call
push
rcl
jp
ins
ja
std
sbb
ret
sub
aas
xor
in
in
inc
or
dec
pop
sub
push
imul
sub
dec
dec
out
sub
in
lds
cmps
bsr
std
jmp
jg
push
sbb
repz
mov
imul
mov
rep
pusha
cmc
inc
lea
fwait
ss
popaw
mov
jno
xlat
fldpi
mov
jmp
sbb
push
sub
lds
inc
sub
das
adc
lock
mov
popa
sub
dec
sub
test
pop
cmp
add
mov
les
xor
xchg
sub
enter
cmp
adc
cmps
fcmovu
push
cmp
std
mov
xchg
dec
nop
pop
mov
cmp
out
mov
dec
push
outs
aad
cmp
loopne
and
repnz
sub
mov
mov
outs
lds
ror
add
sbb
movs
in
xchg
xchg
sbb
dec
aam
cdq
or
cwde
pop
pusha
ja
lock
sub
stos
ror
cmp
adc
mov
sub
cld
mov
pop
mov
daa
or
pop
(bad)
jmp
fimul
pop
jo
lea
aam
jge
pop
add
dec
sub
gs
out
in
jb
enter
sub
fcom
mov
adc
push
in
jge
call
xor
das
mov
ds
fcom
or
imul
push
lea
xor
adc
jmp
xchg
jae
dec
(bad)
adc
into
or
ret
adc
dec
mov
and
(bad)
inc
cmp
add
and
js
repnz
mov
test
or
mov
xor
pop
mov
mov
sub
shl
sahf
inc
retf
mov
adc
mov
inc
inc
mov
jb
add
or
out
pop
or
lea
sub
in
aaa
add
add
cmc
xor
push
test
scas
pop
shl
dec
mov
clc
pop
cmc
and
jnp
lods
popa
xor
into
retf
js
lea
outs
xchg
push
mov
bound
pop
dec
inc
fimul
fst
xchg
lahf
in
xor
das
pop
sub
pushf
mov
cs
push
ins
mov
in
ja
xlat
test
push
adc
test
dec
lahf
jmp
addr16
push
in
push
call
js
push
aas
mov
jbe
neg
jg
pop
fs
jmp
test
push
fisttp
inc
(bad)
stos
loop
cs
in
pop
jmp
xchg
test
dec
adc
jmp
jg
sub
xor
jne
rcl
inc
cwde
ds
imul
sbb
imul
push
cmp
xchg
add
frstor
int3
mov
xor
and
jp
dec
call
lds
push
add
cmp
movs
cld
jmp
add
lea
xchg
je
arpl
adc
call
mov
cmp
push
xor
sub
sbb
movs
xchg
pop
jnp
mov
stos
push
dec
mov
jae
jb
mov
jl
in
pushf
pop
pop
and
inc
imul
into
pushf
retf
add
add
cmp
cmp
ficomp
ret
push
and
stos
es
outs
sahf
ds
jle
push
adc
ins
mov
pop
cmp
loope
rcl
in
pop
aaa
add
push
mov
lahf
test
outs
sti
retf
stc
int3
lea
cdq
fimul
or
pop
mov
dec
adc
retf
inc
pop
mov
push
cld
and
xor
sbb
(bad)
add
inc
dec
pop
popa
dec
lods
(bad)
ficom
mov
jg
add
rcr
add
int3
ror
sub
inc
xchg
pop
jo
outs
std
sbb
add
or
pop
push
pop
jmp
cmps
push
scas
push
sub
leave
in
xor
add
jne
or
retf
mov
inc
shl
adc
loop
mov
jno
cld
xchg
js
addr16
jae
clc
repz
outs
sbb
and
pop
int
cmc
push
xchg
jbe
inc
sbb
adc
cmp
dec
xchg
shr
xchg
imul
mov
test
push
jge
or
sub
mov
mov
pop
pusha
icebp
dec
and
push
xor
jecxz
add
test
stos
push
mov
fst
xor
xor
pop
shr
popa
rcr
out
xchg
fsub
(bad)
stos
mov
retf
push
(bad)
push
add
rcr
dec
jg
mov
pop
sub
fst
push
or
sub
add
inc
call
push
scas
mov
imul
and
call
xchg
adc
in
cmp
adc
ins
jae
mov
pushf
dec
pop
cld
ror
pop
mov
shl
mov
(bad)
add
les
and
jnp
push
push
and
stos
sub
lods
mov
xchg
push
and
lock
movs
sets
movs
aaa
jl
add
jmp
and
scas
fstp
enter
movs
pusha
pop
mov
push
ret
and
push
dec
test
aaa
addr16
xor
jo
mov
mov
(bad)
lock
fstp
(bad)
mov
jl
ret
shl
sbb
adc
fwait
or
fsub
pop
cmp
adc
es
inc
enter
dec
test
fild
rcr
retf
mov
jmp
push
into
mov
mov
pop
jmp
mov
add
call
(bad)
bound
xor
(bad)
jmp
or
aam
mov
loope
retf
sahf
pop
push
in
retf
mov
xchg
cmp
or
dec
(bad)
jle
imul
pusha
in
add
das
loop
pushf
sub
(bad)
xlat
scas
rcr
sbb
lds
inc
inc
lock
(bad)
js
addr16
jo
mov
or
adc
nop
xchg
dec
mov
adc
gs
repnz
cmps
xor
fistp
(bad)
(bad)
(bad)
(bad)
mov
sbb
jae
test
ss
and
out
or
xchg
cli
les
sub
mov
cs
sar
ret
inc
outs
es
push
or
outs
retf
fadd
ss
(bad)
mov
xchg
pop
psubw
mov
scas
sub
mov
adc
inc
loope
add
or
pop
inc
xchg
jns
dec
shr
jno
dec
call
aam
push
(bad)
mov
popa
dec
adc
jmp
fld
cmp
scas
ret
dec
mov
pop
dec
cmp
into
mov
hlt
inc
jo
add
dec
xlat
nop
call
hlt
fild
retf
xchg
adc
rcr
popa
shl
pusha
jae
cmp
stos
(bad)
xor
ins
adc
dec
inc
sub
(bad)
pavgw
push
and
adc
pop
dec
jnp
lods
cdq
push
(bad)
push
(bad)
xlat
sbb
dec
jl
xchg
jge
mov
(bad)
pop
push
or
movs
outs
mul
das
scas
sub
jno
jge
or
xchg
in
dec
lds
ins
sub
pop
adc
sub
dec
sar
in
in
sub
sub
sbb
or
jmp
xchg
pop
aaa
pop
push
enter
movs
lahf
cwde
xchg
dec
loopne
test
loope
scas
jge
xchg
bound
add
sbb
popa
fdivr
lods
push
cmp
jno
and
jb
mov
ja
xchg
mov
dec
jge
mov
dec
push
punpcklbw
inc
pop
bound
call
xor
xor
stc
nop
test
sbb
scas
movs
fcomp
out
dec
dec
jle
cmp
sti
dec
ret
dec
xor
pop
mov
dec
mov
and
adc
pop
(bad)
shl
movs
add
xor
scas
push
or
dec
xor
hlt
or
repnz
xchg
enter
(bad)
mov
dec
jbe
stos
jo
mov
push
pop
jmp
ja
mov
pusha
add
dec
mov
aas
adc
dec
mov
popa
cmp
loopne
inc
cld
call
out
repz
dec
shl
sub
ror
addr16
ret
scas
jo
cmp
xchg
dec
cmp
retf
push
xchg
pop
mov
imul
out
mov
leave
iret
xor
mov
push
jmp
dec
or
mov
aas
int
jno
jmp
jmp
dec
jp
sub
push
mov
gs
fs
xchg
jbe
mov
push
arpl
(bad)
js
cmp
sbb
xor
adc
dec
sbb
out
(bad)
pop
imul
add
xchg
lock
cmps
and
sub
dec
xor
stos
adc
mov
pop
mov
xchg
shl
les
push
aaa
mov
rol
mov
jmp
stos
xor
je
dec
mov
inc
in
add
jge
bound
push
int3
push
aaa
jge
jnp
sti
js
rcl
(bad)
cld
leave
xchg
repz
and
xlat
push
les
xchg
pushf
sbb
cmp
mov
fcomp
dec
nop
pop
addr16
sbb
shl
out
mov
mov
adc
jp
jle
hlt
sub
mov
mov
inc
pop
arpl
scas
jle
push
pushf
test
fucomi
mov
xor
fisub
aas
(bad)
movs
test
push
neg
jno
mov
les
sbb
sar
mov
out
sub
or
lea
push
imul
mov
movs
lods
test
imul
jno
fmul
mov
mov
fadd
xor
outs
push
ins
hlt
fs
add
test
out
call
inc
add
add
sar
ss
rcr
sbb
test
jl
imul
out
mov
push
jecxz
clc
or
pop
repz
js
mov
stos
pushf
(bad)
mov
test
movs
fnstenv
pop
fwait
jge
shl
(bad)
pop
xchg
push
lods
sahf
pop
dec
cmc
fidiv
push
in
arpl
das
aaa
(bad)
int3
or
dec
sbb
cmps
sub
sbb
pop
dec
es
xor
or
sub
mov
inc
mov
push
push
push
jb
dec
ror
les
mov
jp
call
scas
jmp
dec
mov
mov
enter
push
xchg
enter
loopne
lahf
jmp
sbb
push
out
lods
dec
jns
in
pop
pop
out
(bad)
ror
bound
pop
jo
sub
stc
bound
sbb
push
dec
pop
ins
aad
mov
fwait
jmp
cli
mov
(bad)
mov
cmps
ret
popf
mov
or
push
bound
ja
pop
pop
jl
pop
leave
and
jp
pop
mov
cmp
mov
sub
outs
aas
mov
aas
push
mov
adc
cmp
pushf
xor
shl
fstp
and
sahf
push
les
aad
adc
jne
mov
push
aam
pop
(bad)
push
sub
addr16
adc
int3
(bad)
dec
neg
add
sub
imul
(bad)
shr
in
popa
jle
rol
and
loope
dec
jmp
push
mov
not
mov
inc
inc
mov
or
mov
loope
inc
outs
pop
pushf
in
mov
call
sbb
xor
in
cmp
mov
imul
mov
pop
stos
jmp
out
inc
icebp
jl
xor
cmp
std
fwait
pop
adc
les
add
in
pop
mov
ins
jg
jmp
int3
add
lock
mov
jno
sub
neg
sub
ins
jmp
jp
dec
inc
and
mov
pop
xchg
nop
inc
jmp
fild
sbb
(bad)
jle
test
inc
mov
in
cmp
popa
mov
inc
pop
into
das
mov
enter
fwait
leave
das
sbb
mov
rcr
pop
pusha
pop
jmp
push
jne
je
add
add
sbb
jmp
dec
jg
xchg
push
jge
je
push
xchg
pop
shl
scas
push
sti
cmp
dec
aaa
xor
nop
add
jp
mov
cwde
xchg
sbb
jp
xchg
mov
cwde
sahf
loopne
rcl
pushf
xor
and
sub
sbb
loopne
push
cmp
mov
(bad)
lea
jne
sbb
das
xor
pop
imul
in
mov
and
nop
inc
fistp
jo
mov
mov
sub
imul
out
in
cwde
fadd
repnz
inc
cmc
or
mov
lea
xor
stc
xchg
mov
sbb
inc
stos
and
mov
inc
or
mov
ins
lahf
and
into
dec
mov
sbb
push
jmp
fmul
mov
int
inc
xchg
repz
push
and
cmp
sub
popa
push
sub
(bad)
repnz
and
push
retf
and
jns
stc
pushf
push
xchg
(bad)
into
or
clc
push
loopne
mov
cmp
loopne
fld
nop
cmp
loope
xchg
jmp
add
aas
jg
retf
rol
xchg
call
push
repnz
adc
sahf
push
aad
inc
inc
lods
dec
push
call
iret
int3
test
mov
div
(bad)
ins
jl
xchg
sbb
push
sbb
cdq
pop
mov
or
push
jl
adc
push
adc
mov
out
push
adc
ret
add
in
jecxz
mov
in
xchg
in
sub
cli
add
sub
jge
mov
xor
mov
or
jle
fidiv
add
push
(bad)
cmp
cmp
retf
shl
push
or
xor
pusha
mov
ins
js
push
gs
jne
cdq
xchg
(bad)
sub
dec
frstor
or
sub
jmp
lock
int3
popf
push
popa
jp
ins
jns
out
retf
sbb
mov
ins
in
xor
xor
add
dec
daa
sbb
pop
pop
fadd
sbb
ins
fisttp
jmp
xor
arpl
jl
movs
(bad)
mov
ins
xchg
add
clc
pop
pop
jo
nop
imul
ss
sbb
imul
jmp
inc
aad
add
scas
mov
and
push
dec
stos
outs
lods
and
addr16
push
rcl
iret
xchg
push
jae
mov
shr
outs
jg
jp
bound
aad
or
loopne
pop
dec
fcmovnu
test
or
aad
(bad)
rcl
(bad)
fidivr
stc
ret
mul
cdq
add
call
dec
scas
sub
icebp
fbstp
cs
push
add
cmps
enter
outs
xchg
or
ret
test
or
sti
cmc
call
or
push
stc
mov
adc
scas
loope
movs
push
in
sbb
xchg
mov
daa
es
cmp
jmp
pop
mov
lea
xor
loop
div
enter
ins
fcom
add
icebp
jo
sti
repnz
test
je
fdivrp
or
bound
cdq
aam
dec
in
xchg
sbb
pop
add
xor
and
sub
xor
les
jp
push
push
and
and
sbb
sbb
pop
dec
or
rcl
sbb
adc
dec
arpl
add
ret
lds
pop
push
cmc
cmp
and
sbb
lods
pop
lahf
sub
ficom
outs
push
in
shl
mov
push
frstor
push
into
mov
xchg
add
dec
sbb
mov
movs
inc
dec
stc
shr
push
clc
and
sahf
aaa
repnz
psrlw
fidiv
call
mov
or
out
xor
fisttp
rcr
xchg
stos
add
aam
sbb
dec
xchg
fs
shl
and
mov
jbe
pop
in
ficom
bound
xchg
push
stos
mov
jbe
xchg
mov
inc
add
sar
adc
and
push
je
das
adc
and
imul
jl
popf
dec
retf
sbb
int3
loopne
ins
shl
pop
cwde
movs
fisttp
jmp
sar
stos
mov
sub
sbb
xor
pop
jmp
mov
imul
jecxz
popa
repz
lahf
push
lds
push
sub
ss
jg
jp
mov
jle
aam
int3
test
mov
das
pcmpgtb
je
leave
mov
inc
js
call
cwde
in
pop
fwait
mov
inc
jno
mov
(bad)
dec
inc
add
jo
and
cmps
jb
hlt
cmps
and
pop
out
lods
mov
aaa
xchg
cmps
test
mov
ins
test
xor
mov
jg
or
xchg
xchg
dec
add
mov
cmp
dec
jnp
mov
scas
icebp
stos
add
jp
in
adc
xor
rcl
jbe
movs
jp
inc
cmp
fisubr
aas
sbb
ficomp
in
jno
push
inc
mov
in
adc
outs
xchg
push
cmp
into
push
repz
call
jg
xor
repnz
clc
jns
sbb
fwait
addr16
push
(bad)
and
data16
sub
inc
cwde
test
int3
shl
push
shr
cmp
mov
aas
pop
push
sub
lahf
daa
outs
out
mov
push
and
std
sub
dec
cs
push
ret
je
das
es
inc
test
repnz
lahf
sbb
mov
movs
cli
push
icebp
sbb
shl
push
mov
sbb
jl
inc
std
and
or
mov
sbb
jnp
dec
lds
jecxz
test
add
fdivr
test
std
sahf
sar
fbstp
push
xchg
mov
push
cmp
hlt
mov
cmc
adc
pop
xchg
mov
cmp
aam
mov
or
inc
stc
add
mov
dec
adc
aaa
and
push
imul
shr
or
test
mov
pusha
xor
clc
rol
push
cmp
jmp
mov
xlat
lock
ja
dec
dec
mov
push
in
cmp
jmp
ds
adc
xchg
pop
jmp
pop
sub
xor
lods
or
icebp
stos
je
jbe
call
movs
mov
test
fist
add
aas
pcmpgtw
push
or
pop
add
adc
std
fcmovnb
or
lods
shr
jae
shl
enter
mov
jno
test
pop
sub
push
stos
sbb
xchg
cdq
xchg
fwait
add
dec
mov
push
call
mov
xchg
dec
mov
jae
dec
test
and
cmp
jge
cmp
ret
add
ins
push
iret
mov
aas
fmul
popf
fdivr
mov
cmp
adc
call
subps
test
icebp
add
push
sub
add
retf
add
dec
push
adc
ds
je
repz
push
retf
dec
mov
pushf
add
das
(bad)
into
inc
adc
xchg
test
movs
push
adc
loopne
inc
xchg
mov
mov
and
mov
shl
cdq
xchg
in
push
pop
inc
xor
sub
cmp
dec
xor
adc
cli
je
add
mov
and
jecxz
out
push
ss
out
stos
jb
cs
pop
ss
test
sub
(bad)
(bad)
cmp
jno
xor
push
inc
stc
fld
xlat
in
test
aas
sete
(bad)
in
sbb
je
es
dec
xchg
add
adc
xor
scas
aad
inc
lods
sub
push
ins
nop
shr
dec
loop
lea
inc
nop
cmp
ret
movs
pop
arpl
mov
nop
int3
icebp
movs
xchg
les
mov
popf
fwait
cmc
mov
aaa
xchg
mov
(bad)
cmc
pop
and
mov
pop
jne
jae
test
loopne
hlt
pop
jle
mov
or
adc
and
adc
mov
out
push
int3
push
mov
stc
mov
imul
jno
rcr
dec
mov
ja
ror
jo
jmp
pushf
and
mov
data16
xor
ret
mov
es
imul
add
cmps
(bad)
gs
test
xor
inc
cmp
mov
call
leave
sahf
sbb
pushaw
cmc
out
test
cmp
icebp
setnp
cmc
jmp
push
daa
outs
test
cmp
aad
xchg
cmp
mov
test
iret
mov
popf
jge
mov
add
test
cmps
mov
call
popa
or
fldz
cmp
ss
pop
push
sbb
repnz
popa
dec
ret
sub
pusha
mov
(bad)
hlt
fs
in
outs
adc
jo
mov
jno
aam
mov
adc
pop
ins
jnp
call
sub
pushf
inc
cmp
ss
repnz
xor
jns
xlat
xchg
popf
pop
(bad)
mov
pop
lahf
mov
hlt
inc
xor
or
xchg
cld
sbb
ins
mov
push
pushf
xchg
push
div
lods
push
mov
mov
scas
jns
or
scas
cs
pop
mov
imul
ret
stos
jmp
add
push
mov
mov
dec
cmc
and
sub
lods
xchg
(bad)
in
push
test
lock
(bad)
and
xlat
lds
dec
repz
sbb
in
jns
and
jnp
inc
mov
ins
jecxz
popa
imul
in
stc
rcl
shl
lahf
jnp
pop
into
inc
rcl
push
add
fwait
or
add
cli
sbb
xchg
ins
retf
inc
repz
xchg
mov
xchg
mov
paddw
add
mov
add
pop
mov
dec
mov
push
dec
add
or
push
mov
mov
and
stos
in
aas
jge
in
dec
jle
ins
mov
cmp
lahf
dec
out
push
xchg
cmp
shr
mov
int3
mov
inc
std
retf
push
call
add
xor
scas
cld
aad
cmps
hlt
mov
pop
cmp
clc
add
mov
inc
test
fcom
mov
cwde
xchg
ins
(bad)
aas
xchg
lock
push
push
and
out
adc
jne
xor
and
(bad)
fstp
push
pop
and
add
jne
aam
sub
stos
mov
and
in
xchg
in
add
aad
lea
stc
xchg
jecxz
into
sub
xor
push
push
mov
call
xor
sub
pop
adc
leave
sar
jmp
repnz
ret
je
lods
xor
call
mov
inc
sahf
pop
aam
stos
xchg
sub
sub
add
sub
mov
sahf
cmps
adc
adc
and
pop
add
test
pop
mov
sub
sti
push
add
imul
dec
jmp
adc
or
adc
(bad)
mul
cmp
in
pop
sub
xor
push
cdq
cs
das
pop
pop
or
addr16
(bad)
dec
loop
div
repz
dec
fsincos
cdq
test
(bad)
lods
call
ja
mov
jle
lds
std
pop
jecxz
xor
pop
inc
and
xor
dec
pop
jb
mov
xchg
add
test
icebp
movs
imul
mov
pop
mov
push
jg
inc
cmp
adc
xor
pop
jnp
test
scas
xchg
scas
or
xchg
nop
adc
jmp
jle
inc
cmp
in
mov
add
xchg
sub
add
cs
inc
sti
rcr
add
xchg
cmp
dec
sti
push
jnp
dec
mov
push
lods
add
in
(bad)
mov
push
add
aas
adc
dec
jb
ror
movs
xor
lods
movs
push
aaa
or
jno
cmps
(bad)
lods
adc
mov
push
push
shr
hlt
cmp
fwait
push
dec
mov
scas
cld
je
mov
and
dec
lea
add
bound
dec
adc
rol
loopne
in
jbe
jg
xor
in
adc
fiadd
push
ret
and
mov
push
in
push
jecxz
pop
inc
jns
jg
cmc
stos
mov
pop
cmps
out
fcom
adc
daa
xor
stos
push
out
cmp
mov
dec
shl
inc
(bad)
sub
sbb
pop
outs
inc
jle
jae
shl
ror
xor
mov
ins
int3
mov
jo
std
arpl
gs
in
out
popf
stos
mov
push
aam
jl
outs
ret
sbb
loopne
adc
sbb
cmp
stc
sbb
sti
shl
inc
test
mov
or
mov
scas
btc
lock
in
repz
pop
ds
ds
into
fldenv
push
jl
push
add
push
into
jb
ins
xchg
inc
jecxz
aas
mov
add
mov
mov
cmc
jecxz
push
jno
inc
push
adc
adc
out
xor
pop
mov
sub
xor
dec
test
xchg
adc
push
sbb
cmp
(bad)
dec
aaa
sbb
pop
jb
jae
rcl
popa
popa
inc
test
aam
addr16
ja
or
out
arpl
fld
jb
call
leave
push
lods
cmp
call
add
mov
jl
mov
pop
test
daa
dec
sbb
(bad)
jnp
cmp
out
sbb
rcl
pushf
test
or
movs
rcl
stos
jmp
shl
stos
loop
jg
rcr
mov
push
sub
push
add
ret
xlat
es
call
retf
ror
mov
mov
hlt
push
inc
or
mov
lods
retf
jmp
add
lods
test
push
pop
add
xchg
mov
fadd
(bad)
imul
aaa
mov
addr16
cmp
xor
pop
add
mov
mov
leave
retf
movs
mov
scas
xchg
xchg
pop
lods
jae
cmp
mov
aaa
xor
sub
(bad)
push
mov
cmps
cld
ins
mov
out
test
dec
and
sbb
mov
sub
dec
(bad)
setle
inc
std
mov
inc
inc
popa
stos
in
cmp
mov
sbb
dec
lods
pop
inc
loopne
and
repnz
sub
mov
stos
jnp
push
shl
and
cmp
imul
sti
in
(bad)
cld
in
lock
sti
cmp
aas
mov
xor
mov
inc
cmp
jns
jmp
(bad)
push
iret
fs
les
mov
in
inc
mov
push
int
push
not
inc
(bad)
or
scas
fs
fwait
jmp
jae
femms
test
jnp
xor
test
lahf
fisub
mov
(bad)
sub
dec
mov
jnp
ror
test
jmp
rol
jae
mov
aaa
rcr
icebp
div
cmp
mov
pop
ret
sub
inc
shl
jge
push
ins
sbb
cdq
inc
ret
cdq
aaa
enter
pusha
adc
cmc
gs
pop
mov
adc
jge
cmp
out
aad
out
out
mov
cmp
or
test
scas
xor
and
fcomip
shl
inc
mov
pop
call
cwde
leave
js
icebp
push
test
pop
adc
lods
push
add
loopne
std
popf
ds
pop
movs
ror
mov
ds
jge
(bad)
adc
sar
pop
pusha
test
repz
cmp
xlat
dec
mov
out
aam
and
outs
test
lds
stc
(bad)
iret
mov
outs
or
aam
dec
in
lahf
icebp
addr16
addr16
rcr
enter
fs
test
adc
xor
daa
out
jmp
repz
bound
jl
cmps
xor
(bad)
vpcmpgtb
adc
pop
push
cmps
inc
stos
sub
cmp
enter
mov
jne
sbb
imul
mov
mov
push
into
out
rol
fsubr
dec
jbe
or
aad
push
call
push
add
sub
dec
fstp
popf
or
lahf
xchg
dec
add
push
in
or
jne
mov
cli
cmp
pushf
xor
pushf
adc
leave
data16
fwait
mov
fdivr
es
inc
pop
mov
cmp
daa
mov
add
jp
push
rcr
dec
sar
push
dec
sar
mov
lods
jecxz
xor
jp
adc
popa
cmps
push
dec
cmc
push
sbb
or
(bad)
in
out
hlt
jp
xchg
pop
scas
je
call
adc
test
std
clc
xlat
push
ins
pop
jp
adc
sub
sbb
cmp
and
mov
push
pop
mov
cwde
push
sbb
cmp
mov
and
or
push
pop
out
xchg
stos
jnp
jmp
mov
jb
mov
mov
mov
mov
movs
outs
or
retf
or
dec
hlt
neg
ret
push
pop
or
jo
push
xchg
pop
pop
shl
out
dec
fsubr
dec
in
inc
test
push
jmp
cli
(bad)
(bad)
cmp
(bad)
(bad)
cmp
mov
cmp
icebp
retf
sub
sbb
scas
cmp
fmulp
fisubr
mov
sub
sub
bound
push
lds
das
cwde
mov
iret
pop
sbb
jmp
mov
push
xlat
inc
or
fs
gs
pop
sti
(bad)
(bad)
mov
out
inc
inc
jp
in
fiadd
addr16
lods
sub
ss
add
mov
pusha
adc
sub
aas
daa
pop
retf
loopne
aam
inc
pop
mov
fcomp
out
xor
movs
mov
jmp
in
mov
pushf
imul
xchg
retf
outs
adc
sub
sti
jb
lds
adc
ins
aaa
dec
div
sub
jge
mov
ret
sbb
mov
mov
adc
xor
fld
jp
stc
call
xchg
add
ja
xchg
test
in
xlat
pushf
xchg
les
inc
cli
shr
add
call
shl
sbb
sti
push
mov
lods
stc
xchg
fistp
stc
jmp
cmp
cwde
out
sub
(bad)
or
imul
out
mov
jo
rcl
rcr
mov
inc
mov
add
xchg
cmp
fstp
test
cmps
mov
enter
xor
in
sub
jg
cmp
adc
ja
scas
dec
fsub
sbb
ja
test
call
push
aaa
cdq
xor
fsub
rcl
das
inc
popf
mov
shl
sub
pop
jbe
ret
je
xor
mov
dec
push
shl
(bad)
xor
sbb
mov
add
jbe
aad
inc
mov
and
repz
xor
push
mov
aaa
dec
movs
or
ror
gs
fsub
imul
sub
repz
inc
xchg
jg
cmp
mov
add
pop
das
mov
xor
lods
fld
cmp
or
setnp
rcl
ficomp
inc
mul
or
es
adc
push
cmp
pop
push
cwde
xchg
addr16
stos
(bad)
pop
push
les
dec
ins
icebp
xchg
adc
loop
push
or
fild
sub
pop
jg
in
in
cmp
mov
dec
mov
test
ds
xor
call
into
ret
inc
adc
inc
mov
in
cwde
jo
iret
sbb
test
inc
or
bnd
imul
push
jb
dec
movs
cmp
dec
cmps
fld
lea
mov
lods
add
loope
repz
xor
jp
mov
or
repz
movs
imul
sbb
leave
ins
xor
sub
leave
shr
cmp
mov
scas
repz
imul
addr16
sbb
popa
mov
rcl
stc
sub
sub
xor
mov
push
xchg
(bad)
cmp
bound
les
and
mov
popa
or
pop
rcl
push
cmps
dec
pop
popf
movs
aaa
in
mov
scas
sub
xlat
sbb
ins
imul
inc
adc
pop
mov
or
xchg
rcl
gs
mov
leave
inc
and
inc
ins
xchg
frstor
in
popa
outs
dec
dec
xchg
push
cwde
ret
lea
loope
xor
push
pop
inc
inc
stos
test
xlat
or
imul
sbb
and
push
mov
xor
push
xor
jno
xchg
mov
or
fdiv
xor
inc
scas
jo
ds
(bad)
dec
movs
and
pop
in
xor
mov
repz
jnp
add
xchg
stos
sub
lahf
cmps
jns
test
ss
nop
inc
nop
adc
jo
jp
sbb
stos
pop
cmp
inc
scas
pop
sbb
or
rcl
add
push
mov
mov
cmc
add
in
mov
and
retf
jmp
push
fst
push
out
sahf
xor
lahf
frstor
or
in
jmp
rcr
inc
sti
jl
xchg
fld
mov
inc
ins
sbb
and
outs
in
out
xchg
fwait
mov
mov
sub
mov
sub
loop
pushf
test
sub
cmp
cld
std
lahf
mov
mov
mov
sub
imul
xor
cmps
xchg
nop
test
cmp
push
sbb
or
scas
daa
cmc
mov
dec
mov
addr16
xchg
add
enter
add
add
mov
xor
adc
fadd
adc
jl
xlat
adc
f2xm1
call
sti
ins
add
and
adc
scas
cmp
cmps
or
fcomp
stos
out
mov
jg
cmps
fmul
xchg
(bad)
out
inc
sub
xor
sub
pop
stos
or
fwait
xchg
sbb
ja
cmps
retf
inc
mov
dec
in
push
test
dec
inc
inc
fistp
jnp
outs
test
mov
xchg
jg
or
popf
mov
mov
leave
mov
inc
in
add
nop
test
pusha
sub
xor
mov
mov
fdivr
mov
nop
shr
scas
mov
mov
rol
pop
in
xchg
xchg
into
and
(bad)
push
xchg
push
add
cmps
mov
cmp
jmp
xlat
xchg
add
ret
nop
xchg
std
add
adc
add
movs
sbb
adc
inc
push
add
xlat
xchg
je
cwde
cmc
imul
mov
jmp
lods
popa
fdivr
mov
mov
ret
mov
xlat
dec
cmps
fcmovu
push
mov
nop
pop
ret
imul
jno
dec
or
loop
mov
pop
imul
out
out
pop
mov
ret
icebp
lods
push
push
or
push
xchg
push
cmp
inc
add
xchg
mov
jge
movs
bound
pop
push
sub
sub
jno
or
sbb
in
xor
call
ret
pusha
mov
(bad)
mov
and
mov
lock
ret
push
fst
xchg
cmp
and
inc
adc
ins
dec
ins
push
hlt
fdiv
call
inc
popf
test
jg
adc
inc
xor
cmps
jnp
or
or
or
fnstsw
dec
pop
mov
sub
or
test
stc
inc
out
jno
and
mov
leave
aas
rcl
movs
push
mov
mov
push
retf
int3
stos
mov
ss
cmp
movs
or
sar
push
fwait
nop
jae
div
sub
add
mov
xchg
mov
push
ret
inc
mov
lods
jno
int3
xchg
dec
cmc
pop
or
jb
push
cmp
jmp
dec
bound
or
inc
push
mov
fwait
inc
cmp
xchg
ss
mov
ds
dec
adc
add
jno
test
mov
fcomp
imul
cmps
push
imul
dec
or
add
inc
in
adc
cmp
scas
add
ja
sub
aas
dec
and
into
mov
adc
xchg
sub
dec
jp
aas
mov
mov
retf
push
in
sub
gs
(bad)
inc
int
jmp
xchg
mov
(bad)
mov
push
push
xor
push
xchg
jae
mov
sbb
fstp
psubw
sbb
push
std
inc
hlt
mov
rol
sub
xlat
mov
arpl
mov
or
popf
pop
std
ins
je
add
adc
retf
pop
stos
outs
sub
test
xchg
push
out
sbb
sbb
adc
test
out
xchg
lock
or
push
or
and
inc
dec
(bad)
loope
stos
cmp
loope
xchg
repnz
and
neg
mov
out
mov
popa
aam
jo
rol
aam
sar
(bad)
movs
in
inc
mov
sbb
lds
jmp
pop
add
mov
out
icebp
mov
fdivr
xor
cmps
mov
loopne
ret
dec
push
mov
test
mov
in
xchg
div
in
lds
mov
in
cmc
fisttp
mov
popf
push
pushf
movs
mov
sbb
outs
pop
dec
or
xor
fcomp
pop
xchg
push
cmp
xchg
inc
stos
mov
push
gs
retf
pusha
jns
xor
mov
jb
mov
push
bound
clc
mov
xor
ins
imul
fstp
jmp
adc
test
lahf
dec
xchg
int
sub
cmc
sbb
inc
sub
je
xchg
or
xor
add
ins
inc
cmp
fistp
std
xor
add
add
cmc
adc
ret
and
jno
and
xchg
jno
aam
sub
push
cmps
pop
pop
dec
sahf
and
and
adc
std
into
push
push
inc
movs
add
cdq
inc
int3
xor
mov
shl
pop
repz
mov
in
neg
mov
mov
pop
ret
cmp
cli
sti
add
aas
adc
xchg
add
(bad)
inc
call
shl
sub
inc
add
xor
fsub
(bad)
lods
push
push
pop
dec
dec
inc
jns
sbb
add
xchg
push
std
je
xchg
jp
mov
mov
daa
loopne
push
iret
(bad)
add
loop
inc
movs
cmp
add
xor
(bad)
retf
push
js
adc
dec
push
dec
xchg
lds
jge
adc
sub
cmps
test
inc
scas
mov
pusha
call
or
jbe
ret
(bad)
mov
loopne
ror
movs
stos
push
pop
jle
(bad)
mov
repz
or
dec
jmp
jp
outs
stc
and
push
cmps
jbe
push
repnz
cmps
aam
jmp
add
popa
xor
inc
arpl
gs
lock
movs
ret
jp
push
jmp
int3
mov
jg
inc
xor
pop
imul
sbb
daa
add
outs
gs
repz
adc
add
add
and
mov
mov
cmp
and
lock
xchg
push
push
fst
adc
xor
pop
sbb
(bad)
retw
push
(bad)
push
and
adc
loop
cmp
js
jno
les
adc
sub
pushf
fcomp
ror
ds
and
mov
jp
dec
scas
cmps
call
into
aaa
(bad)
scas
popa
je
inc
adc
pop
xchg
add
in
jmp
mov
xchg
fsub
and
xchg
push
gs
xor
jno
sub
xor
scas
lods
and
mov
movs
cmp
and
out
mov
lds
inc
stos
out
aaa
dec
mov
out
sbb
outs
test
inc
mov
xor
sbb
(bad)
into
fcomp
test
or
mov
mov
mov
sub
pushf
sub
imul
mov
xchg
aas
or
fwait
daa
sub
push
jb
dec
xchg
test
pop
inc
or
pusha
ins
mov
add
stos
xor
das
fwait
gs
xor
mov
jl
movs
out
sub
mov
xor
ja
jae
loopne
sbb
push
jno
scas
std
clc
or
mov
icebp
jbe
cwde
xor
rcr
pop
sub
and
test
ss
rcl
cmc
sbb
icebp
rcl
(bad)
jb
dec
test
stc
imul
cld
cld
pop
arpl
pop
out
jbe
rcr
pusha
daa
push
fst
mov
cmps
in
push
and
ins
mov
sub
xchg
jge
push
cmp
inc
shl
in
jbe
push
hlt
(bad)
(bad)
shr
in
pop
sbb
jmp
and
ds
sub
mov
add
sahf
inc
out
or
stc
ss
jb
idiv
dec
push
nop
jecxz
inc
out
sbb
xchg
adc
pop
pop
push
out
addr16
lock
(bad)
mov
push
sbb
retf
jno
mov
dec
sbb
mov
xchg
test
fs
fwait
inc
xor
hlt
add
mov
mov
inc
xchg
adc
inc
cdq
pusha
sub
jno
retf
or
into
jo
cli
pop
call
pop
mov
je
out
retf
and
jmp
ror
mov
sub
push
sub
pusha
or
push
sub
retf
sti
mov
sbb
add
in
fisttp
xor
jno
mov
popf
scas
mov
(bad)
mov
ret
cwde
dec
(bad)
lock
stos
jnp
jnp
ds
(bad)
cwde
jmp
and
push
mov
pop
mov
xchg
lods
(bad)
je
mov
rol
ja
mov
inc
push
js
es
sub
fldenv
or
loop
je
mov
jg
dec
test
fwait
sbb
imul
arpl
inc
push
mov
retf
arpl
mov
add
in
push
test
and
xor
mov
fs
or
jp
fcom
mov
mov
mov
xchg
push
add
inc
cmp
mov
retf
push
or
xor
fld
sar
outs
xor
cmp
push
xor
scas
jb
push
jns
pop
mov
sahf
xchg
cmp
daa
xchg
mov
into
pop
rol
mov
sub
dec
mov
popf
aas
lods
jl
fbld
mov
cmp
add
or
pop
test
mov
fisub
dec
outs
xchg
in
inc
ja
(bad)
out
dec
xchg
ds
mov
retf
add
jo
add
cwde
jp
enter
inc
test
lock
dec
icebp
push
test
ret
mov
inc
in
push
jmp
xchg
mov
call
mov
xor
sub
dec
repz
push
dec
fs
sti
ja
ret
(bad)
mov
jmp
jbe
call
and
mov
xchg
es
cmp
in
mov
adc
mov
pop
push
push
lods
jne
fwait
add
sbb
cmp
inc
sbb
cmps
push
push
jle
(bad)
cld
stos
fcmovb
lahf
retf
les
fimul
xchg
push
js
sub
(bad)
jge
mov
ins
or
add
mov
outs
rcl
or
mov
fidiv
setb
cmp
cmps
xor
dec
mov
adc
inc
shl
mov
(bad)
out
add
adc
mov
push
xlat
fstp
cmp
jmp
mov
or
pop
jmp
adc
test
inc
sbb
mov
loop
shl
and
jmp
push
stc
xor
bound
shl
pusha
bound
cmp
(bad)
(bad)
cmp
popa
int3
mov
aas
fisttp
bound
push
cmp
xchg
div
add
loop
or
xchg
in
xor
jne
jmp
push
xchg
mov
or
pop
into
mov
pop
push
or
sub
(bad)
(bad)
aad
add
pop
fdiv
or
pop
outs
mov
movs
into
aam
scas
sbb
xor
fcomp
pop
jnp
pop
cmc
cmp
arpl
cmp
mov
int
outs
mov
pop
jno
inc
lahf
jmp
adc
cmps
pop
or
movs
ins
sub
lahf
mov
shl
mov
inc
jne
out
push
cdq
mov
aas
cwde
jp
movs
fdivrp
sbb
pop
sbb
mov
mov
int
lock
adc
jmp
(bad)
sub
sbb
ja
mov
aam
mov
xchg
xor
ins
js
enter
hlt
xor
mov
rcr
push
push
push
stos
fistp
ficomp
sub
mov
(bad)
mov
in
xor
into
sahf
xor
dec
jle
mov
(bad)
xchg
shr
jmp
add
lods
adc
mov
cld
jo
call
push
or
mov
dec
data16
sbb
pop
in
cmp
icebp
ret
xchg
mov
push
into
in
or
repz
(bad)
imul
mov
xchg
add
pop
(bad)
fiadd
and
cmp
mov
xlat
cmp
jns
jns
and
(bad)
mov
lods
xor
cld
sti
shl
fldcw
test
shr
xor
push
xchg
repz
jnp
out
aaa
push
push
and
jp
mov
add
dec
icebp
ds
loope
cli
jge
ret
loopne
mov
cli
mov
and
stos
mov
jle
stos
jmp
cmps
dec
std
xchg
cmps
jo
sub
xchg
aad
cmc
fbld
jge
test
add
jnp
(bad)
cdq
fdiv
inc
add
or
arpl
sub
bound
mov
inc
pop
icebp
(bad)
mov
movs
retf
(bad)
dec
addr16
add
leave
cmp
ret
inc
and
enter
push
mov
xlat
mov
mov
les
dec
push
ror
push
sbb
mov
call
cmps
bound
xor
rcr
dec
aas
adc
jbe
mov
xor
(bad)
and
push
(bad)
fisubr
push
lods
jb
jp
jmp
dec
xor
xor
dec
adc
in
add
or
sub
add
dec
add
scas
popa
js
xchg
lds
mov
mov
dec
ret
dec
jmp
in
out
les
test
push
(bad)
in
in
adc
push
add
(bad)
fst
test
jmp
stos
adc
mov
sbb
(bad)
pop
fst
mov
add
loope
mov
icebp
add
push
outs
repz
ja
rcl
dec
mov
mov
movs
sbb
mov
out
pop
pop
mov
pop
cmp
adc
mov
pusha
ds
xor
jg
into
ss
pusha
pushf
adc
mov
pushf
dec
and
jecxz
mov
mov
push
mov
mov
fst
jb
call
mov
jno
(bad)
stc
fstp
jo
call
outs
cmp
adc
test
cmc
lds
(bad)
pushf
add
mov
xchg
mov
outs
enter
adc
sub
or
push
push
fwait
pop
sub
lahf
mov
std
leave
imul
mov
pop
ror
jp
cmps
sbb
fwait
rcl
mov
add
cmp
mov
mov
ficomp
pop
dec
imul
push
mov
xlat
xor
shl
mov
test
out
stos
sbb
or
and
adc
xor
scas
add
pop
std
shl
sub
mov
in
test
lock
in
movsx
enter
jo
inc
inc
pusha
jbe
dec
push
call
mov
inc
fistp
pop
and
scas
inc
sub
ds
and
mov
push
and
pop
bound
dec
aas
std
jmp
cmp
out
adc
and
sub
xor
sub
fisub
mov
retf
and
popa
mov
xlat
pop
jge
xor
inc
sbb
sbb
sbb
cwde
cld
push
ins
pop
adc
fisttp
mov
adc
sti
mov
lock
add
jnp
xchg
inc
sub
jb
dec
mov
push
push
cs
mov
mov
adc
mov
sbb
div
movs
pop
xchg
iret
(bad)
push
jle
adc
pop
imul
inc
mov
inc
pop
out
movs
mov
ret
dec
and
jne
dec
jae
inc
jle
inc
rcl
fbstp
cmp
mov
dec
movs
pop
push
dec
leave
stos
das
pop
das
push
pop
fwait
dec
add
adc
dec
and
push
into
(bad)
ds
ins
xchg
jnp
adc
shl
jb
sub
hlt
ins
push
(bad)
mov
ss
push
aas
jg
dec
loope
dec
mul
xor
enter
cmp
mov
lods
push
or
movs
mov
lds
inc
pop
imul
jne
cs
mov
outs
mov
test
pusha
movs
xor
xchg
ss
stos
add
sub
xchg
push
push
sbb
ror
dec
dec
lds
cwde
inc
pop
xor
push
xchg
hlt
(bad)
das
out
cmp
ror
data16
xor
stos
mov
sti
retf
lods
loopne
(bad)
mov
movs
stc
nop
ins
pop
and
mov
test
les
ret
jnp
mov
pop
pop
push
cmp
mov
rcl
test
cmp
push
test
test
adc
xchg
xor
(bad)
ja
jp
xor
mov
jbe
stc
mov
retf
cmps
shl
dec
jle
jb
push
mov
mov
sub
mov
inc
dec
clc
and
pop
sar
rcl
mov
push
cmp
xor
imul
sub
sbb
push
or
jno
jo
data16
test
xor
aam
mov
rep
movs
mov
inc
int3
(bad)
fidiv
pop
icebp
dec
pushf
hlt
pop
cmps
push
mov
aaa
rol
xor
xchg
and
mov
cli
push
call
push
pop
sub
loope
add
or
inc
inc
stc
sub
fcmovu
into
lock
(bad)
cmc
in
mov
(bad)
jns
and
les
out
pop
jge
daa
mov
cmps
stc
push
mov
jne
pop
mov
dec
sar
and
ficom
test
jns
cmp
xor
and
xor
ret
jnp
lods
mov
jmp
push
in
mov
pop
mov
pop
adc
push
mov
sar
sub
out
ins
frndint
loop
mov
(bad)
pusha
mov
ins
mov
nop
in
pop
xor
sar
movs
(bad)
xchg
push
ror
jo
pusha
mov
cld
pushf
test
mov
in
xchg
fbld
gs
retf
push
mov
mov
dec
jecxz
dec
pop
push
stos
mov
jo
fmul
jne
fsub
mov
pop
pushf
xor
xor
ror
cmc
shl
gs
sub
cmps
push
(bad)
mov
outs
xchg
jge
mov
inc
sub
imul
ja
mov
je
xchg
sub
scas
call
and
cmps
fdiv
inc
and
dec
pop
pop
pop
lods
pop
ret
adc
and
xchg
push
sbb
clc
(bad)
dec
or
jno
cli
lea
jmp
test
rcr
test
xchg
dec
sub
cmp
push
cli
ja
fsqrt
pop
push
mov
int3
jge
jl
ins
pop
or
sahf
inc
jp
sti
cmps
pusha
push
gs
or
js
pop
mov
fiadd
or
movs
mov
inc
inc
add
in
fwait
imul
mov
or
pusha
jne
repnz
mov
je
jmp
pop
je
add
inc
inc
(bad)
mov
xchg
js
jo
inc
or
sub
in
push
mov
pusha
mov
pushf
imul
adc
mov
(bad)
out
jmp
cmp
dec
sbb
aaa
stos
xchg
lods
mov
adc
(bad)
test
pop
cs
sahf
retw
and
xor
test
lods
push
and
iret
rcl
icebp
dec
or
add
out
mov
mov
jg
pop
fisttp
call
push
jge
inc
mov
fadd
mov
mov
stc
xor
dec
dec
in
icebp
dec
inc
jo
inc
mov
in
inc
std
xchg
sub
inc
xor
sub
xor
dec
gs
(bad)
pop
push
mov
and
aam
in
fisubr
adc
jg
xchg
mov
sub
mov
retf
cmp
add
lahf
inc
outs
inc
adc
xchg
out
push
dec
push
data16
dec
cli
cmps
cmp
dec
jbe
imul
loop
es
mov
pusha
xor
push
xor
cmp
and
dec
call
mov
adc
test
cmp
call
xlat
or
ss
inc
cmp
pop
ss
out
aaa
mov
and
xchg
mov
call
pop
add
push
fnstsw
jge
jg
and
nop
inc
push
mov
ror
add
and
jo
jae
inc
xchg
sti
test
dec
pop
push
js
push
dec
mov
ja
sar
shl
jp
clc
jbe
lods
push
aaa
loop
push
lods
or
fwait
(bad)
daa
pop
or
add
loop
mov
jecxz
sbb
push
jmp
or
enter
push
push
shl
and
adc
test
std
sar
mov
ins
mov
and
push
xor
sti
lock
in
dec
fistp
mov
jne
pop
mov
jecxz
ds
fisub
inc
adc
int3
add
adc
test
repz
out
test
cs
(bad)
push
add
shr
(bad)
xor
aam
mov
popf
in
inc
jmp
ins
in
mul
push
xor
div
or
hlt
les
fnstcw
js
mov
add
sbb
mov
mov
outs
and
fisub
fsubr
in
nop
adc
and
dec
adc
mov
adc
mov
xchg
inc
and
mov
js
popf
daa
sahf
shl
jbe
mov
xchg
ret
cmp
out
pop
ror
test
data16
sub
out
pop
mov
xor
ret
xchg
mov
jecxz
shl
xchg
dec
(bad)
mov
mov
cmp
push
(bad)
push
in
adc
nop
sub
loope
mov
(bad)
and
xchg
pop
mov
addr16
mov
sbb
lea
jecxz
mov
rcr
mov
mov
loopne
call
mov
in
stos
out
add
out
xor
aas
add
and
mov
push
nop
dec
jb
mov
ins
out
sub
dec
(bad)
out
ds
ja
and
js
dec
mov
pop
lods
pop
mov
cwde
fmul
dec
or
jb
xchg
repnz
pop
ins
call
or
pop
imul
adc
cdq
icebp
pop
int
sub
in
or
fistp
fidivr
aas
push
aaa
mov
dec
outs
retf
jo
stos
jmp
add
scas
sbb
mov
mov
mov
iret
(bad)
nop
clc
aaa
scas
add
pop
mov
in
lds
and
adc
jnp
or
jae
cmp
mov
adc
rcl
pop
xor
loopne
adc
fisub
and
aam
arpl
sbb
jb
xor
repz
adc
cmc
(bad)
mov
lods
xor
neg
cwde
loopne
adc
push
adc
daa
xchg
loope
mov
dec
or
push
or
rol
test
aaa
stos
cmps
mov
dec
ror
and
pop
push
es
mov
push
dec
pop
xor
rol
fwait
iret
jg
and
in
sbb
adc
cmp
mov
jl
xchg
cs
popf
xchg
ins
add
stos
inc
lock
(bad)
inc
ins
call
daa
rol
leave
jns
mov
push
mov
scas
push
jo
or
loop
in
mov
push
jge
stc
das
push
scas
ret
inc
scas
jle
int
cdq
not
fld
inc
or
xor
push
cs
ret
push
xor
enter
xor
retf
pop
ror
ins
(bad)
dec
jp
lahf
mov
cmp
cmp
inc
ss
pop
retf
inc
imul
pop
lock
enter
jno
mov
idiv
xchg
mov
test
mov
fidivr
aam
jecxz
mov
test
mov
sub
into
dec
mov
aas
dec
gs
arpl
fxch
push
js
dec
pop
test
test
lods
inc
inc
mov
(bad)
pop
xchg
pop
mov
xor
mov
dec
es
and
mov
mov
jg
xor
jecxz
add
adc
fisttp
imul
rcl
mov
ja
sbb
in
call
aam
add
mov
mov
push
push
ret
dec
(bad)
mov
adc
dec
mov
push
movs
pop
push
std
add
push
xor
fisttp
jb
sahf
dec
mov
outs
or
adc
and
call
inc
inc
push
sbb
cmc
xchg
fbstp
dec
cmps
sbb
mov
lds
je
cmp
in
clc
push
inc
push
inc
xchg
iret
retf
add
lahf
sbb
and
jmp
cwde
mov
fmul
leave
jb
cli
push
inc
xor
cmp
sub
int3
mov
das
jns
sub
jnp
add
loope
sbb
lea
stos
call
xor
shl
pop
push
mov
fs
aas
push
adc
jo
arpl
movs
push
test
das
in
in
mul
adc
out
loope
sbb
repnz
mov
bound
sub
vcvtsd2si
(bad)
sti
sbb
mov
nop
out
xor
(bad)
sbb
call
rcr
push
xlat
add
mov
addr16
mov
add
es
js
dec
xchg
cmp
mov
mov
cmp
(bad)
(bad)
fiadd
rcr
rcl
int3
lds
jmp
add
push
sub
xor
or
dec
(bad)
retf
mov
fist
sub
out
cmps
or
push
sbb
cmp
fimul
loop
mov
fwait
mov
push
mov
and
push
xchg
sub
popf
sbb
cmp
push
pop
in
or
dec
push
movs
cmp
adc
fidivr
push
cmp
stos
dec
or
cmp
(bad)
sahf
mov
sbb
pop
int
fdivp
sbb
jo
fadd
out
clc
jmp
push
jb
xor
movs
inc
push
xor
es
div
add
cs
loope
cmp
call
imul
mov
and
inc
jbe
and
pop
test
dec
mov
jl
and
jbe
lock
ins
xchg
popa
mov
sbb
sbb
or
jp
and
push
cs
jmp
fisubr
ret
xor
dec
push
jl
and
cs
into
fnstenv
jne
jmp
aaa
cwde
mov
outs
push
rol
cwde
xor
adc
ins
or
xlat
and
and
test
jle
pusha
dec
pop
pushf
push
imul
leave
aad
mov
std
jb
adc
sbb
cmc
scas
lahf
mov
(bad)
jg
adc
mov
push
mov
xor
or
sbb
pop
dec
xchg
ror
mov
jae
adc
lea
mov
dec
paddsb
jae
fmul
mov
aas
fisttp
sbb
retf
mov
jo
in
mov
sub
pushf
hlt
pop
sbb
fidivr
and
cdq
dec
cli
push
dec
scas
sub
cs
shl
mov
cmp
pop
xor
retf
mov
idiv
out
cdq
pop
fisubr
push
int
push
inc
pop
sbb
dec
push
ss
fimul
ret
xchg
cmc
aam
lods
call
xlat
ss
jno
add
aaa
jmp
pop
rcl
xchg
and
rcl
adc
pop
sub
test
cmp
push
and
jae
loope
pop
fld
mov
pop
inc
cld
test
popa
scas
and
mov
mov
call
pop
lock
fdiv
push
adc
bound
in
mov
out
adc
(bad)
and
ja
shl
inc
fistp
in
out
mov
loope
mov
stc
mov
and
data16
mov
mov
retf
cmps
jno
sbb
adc
push
lods
mov
test
ret
inc
sbb
jb
aas
inc
div
push
std
or
mov
sbb
imul
fiadd
repz
jae
ret
call
xor
mov
or
lds
inc
xor
lds
shl
fscale
jb
sahf
sub
and
xor
bnd
mov
push
jne
push
movs
sahf
add
mov
push
retf
aaa
dec
jmp
fild
pushf
nop
pop
fwait
out
leave
sbb
pop
dec
dec
mov
add
js
pop
(bad)
cmp
addr16
loopne
jl
movs
mov
cmc
mov
mov
dec
cmp
lahf
inc
or
fcomp
inc
idiv
fidiv
xchg
out
sbb
pop
int
cs
ss
repnz
mov
fcom
cmc
scas
and
mov
push
dec
mov
arpl
fadd
add
fld
fistp
stos
daa
and
jp
jbe
dec
or
aaa
mov
and
xor
outs
mov
mov
jmp
stos
sahf
and
retf
xor
pop
mov
or
out
in
xor
cmps
xchg
loop
mov
or
sbb
mov
mov
sbb
movs
sub
pop
mov
push
repz
mov
je
cmps
fistp
in
xchg
outs
xlat
iret
leave
lock
popf
int
outs
test
int
imul
pop
mul
cmp
clc
mov
jp
movs
js
mov
cmp
mov
push
dec
iret
rol
stc
nop
enter
xchg
sbb
xor
call
mov
push
mov
lahf
retf
gs
out
sub
sbb
fidivr
(bad)
aas
cmp
mov
sub
dec
js
sbb
xor
inc
cmps
call
push
dec
or
js
nop
call
shl
inc
fs
mov
and
inc
iret
enter
push
sti
xor
push
inc
xchg
xchg
sbb
popa
(bad)
adc
xchg
lahf
push
dec
repz
jmp
hlt
sahf
sub
fldenv
pop
mov
gs
mov
jb
mov
movs
mov
dec
pop
inc
pusha
loopne
or
jns
or
jmp
les
(bad)
cs
sbb
fcom
fldenv
dec
xchg
mov
sbb
pop
retf
xchg
fs
mov
int3
xchg
push
pop
mov
push
pop
sti
sub
scas
pusha
out
(bad)
xchg
aam
jmp
push
test
lock
dec
sbb
(bad)
rcl
mov
lea
jo
adc
jge
pop
in
ror
cmp
imul
cmp
jl
sub
jnp
mov
retf
push
push
or
pop
xchg
lahf
shl
fnstcw
jmp
dec
dec
in
add
std
jne
xchg
inc
dec
inc
enter
out
xor
inc
dec
sbb
pop
push
mov
xchg
(bad)
fbstp
mov
pusha
mov
(bad)
cwde
pop
imul
(bad)
sti
sbb
test
in
stos
inc
popa
in
repz
mov
out
push
sub
push
push
jnp
into
movs
ret
stos
dec
out
call
pop
mov
ins
push
cmp
mov
shl
pop
mov
inc
ins
cmp
push
mov
movs
mov
pop
jnp
mov
sbb
aam
jl
xlat
push
jb
xchg
push
pusha
and
ins
addr16
inc
ret
outs
pop
adc
fnsave
cmp
imul
dec
cmp
loopne
sub
cmp
call
cmps
push
mov
add
(bad)
add
aad
in
pop
dec
add
stos
hlt
js
ds
out
imul
xor
fsub
add
adc
fisttp
fdivp
in
popf
dec
push
js
inc
or
sahf
fucomip
loopne
xchg
sbb
popf
cdq
push
jecxz
jle
rol
(bad)
(bad)
jl
aas
cli
(bad)
imul
push
idiv
adc
push
mov
cli
mov
push
(bad)
(bad)
mov
inc
pop
xchg
sbb
dec
jmp
retf
pop
ss
cmp
pop
arpl
jle
xor
cmp
std
mov
cdq
dec
outs
pop
mov
and
ins
popf
in
adc
mov
stc
movs
xchg
dec
outs
shl
imul
je
mov
add
and
push
sub
dec
mov
stc
retf
pop
sub
push
jno
sbb
cmp
jl
pushf
mov
jg
cld
jle
cmc
test
xor
mov
test
add
gs
sbb
or
mov
dec
fs
inc
add
mov
add
shl
fs
or
(bad)
popa
call
test
pop
adc
shl
repnz
xor
imul
sub
mov
imul
jge
mov
mov
jl
sbb
sbb
dec
pop
les
loopne
dec
stos
lahf
lods
mov
push
in
pop
adc
retf
dec
(bad)
inc
add
cmp
mov
sub
fld
push
mov
jb
leave
mov
cwde
cmp
(bad)
(bad)
sub
mov
dec
mul
ret
mov
mov
sbb
cmp
or
icebp
sbb
movs
leave
or
mov
neg
jle
lea
jmp
xor
jecxz
dec
jmp
test
xchg
sbb
jle
dec
mov
loopne
in
test
(bad)
or
mov
inc
daa
push
fnstenv
and
push
or
(bad)
sbb
dec
mov
adc
je
xchg
adc
mov
sti
outs
mov
mov
leave
and
test
ror
cmp
and
pop
(bad)
mov
clc
lods
rcl
and
adc
out
inc
fwait
cwde
lods
and
mov
jmp
mov
adc
adc
adc
mov
lock
call
jbe
push
nop
cmp
jp
jno
push
jae
push
adc
mov
hlt
in
mov
mov
adc
sub
int3
out
retf
cmp
mov
adc
into
scas
mov
jmp
cmps
std
and
in
nop
movs
push
sbb
pop
hlt
adc
mov
imul
cmp
sub
mov
mov
mov
in
sbb
jbe
ins
inc
jmp
imul
jmp
jl
add
call
add
jo
xchg
(bad)
aas
dec
lds
imul
add
push
cmps
jo
in
sub
and
rcl
xchg
jae
cmps
xchg
test
inc
pop
add
cmovns
xchg
adc
clc
ret
nop
imul
(bad)
pushf
mov
std
dec
data16
sbb
fldenv
inc
xlat
call
movs
test
jno
xchg
dec
pushf
call
in
xlat
bound
pop
scas
in
addr16
or
adc
push
or
jmp
jbe
les
sub
adc
jae
(bad)
fcomp
xchg
xlat
mov
jge
fbld
xor
cmp
inc
xchg
xchg
and
inc
sbb
sbb
aam
rcr
cmp
push
in
fidivr
call
cmps
xchg
ja
jmp
or
les
add
add
sar
loope
pushf
ror
out
inc
enter
je
jmp
cmp
std
inc
cmc
or
pop
adc
mov
cmp
bound
push
aaa
and
inc
jg
loope
jnp
stos
push
clc
(bad)
loope
stos
shl
push
jle
fsubr
out
call
cdq
push
retf
xor
push
mov
loopne
dec
int3
scas
ds
mov
dec
sub
popa
and
mov
test
push
mov
mov
daa
fsubr
mov
mov
ficomp
push
lahf
adc
mov
and
inc
movs
add
pop
cmp
rol
fs
in
addr16
jle
scas
dec
and
mov
rcl
lock
(bad)
sub
clc
jp
jmp
mov
push
jecxz
jne
(bad)
sbb
(bad)
dec
(bad)
stos
add
jo
xlat
sti
jb
enter
out
mov
(bad)
jbe
mov
pop
xchg
and
push
mov
es
ret
or
mov
inc
jno
mov
sar
mov
dec
and
push
data16
fbld
movs
add
fmul
idiv
jns
push
ins
xor
or
jbe
cmps
in
ret
retf
add
jb
loope
in
dec
pop
sar
pop
xchg
hlt
ret
pop
loopne
push
popf
dec
xor
push
and
push
sub
xchg
enter
jg
cmp
xchg
je
fimul
mov
js
(bad)
dec
jno
ror
setge
dec
sbb
fucomp
(bad)
fmul
cmp
fisttp
ret
(bad)
dec
(bad)
stos
int3
into
inc
mov
bound
sub
imul
push
cmp
in
xchg
mov
int3
inc
push
cmp
shr
sahf
mov
test
cmc
and
sahf
adc
mov
mov
retf
or
rcl
or
mov
add
jl
or
cmp
scas
add
mov
mul
(bad)
sub
jecxz
popf
jg
inc
mov
popa
test
sub
retf
cmp
fbld
xchg
pop
call
adc
adc
cmc
or
cmc
xchg
push
inc
add
int3
fs
mov
add
ja
enter
fdivr
ficomp
ja
cmp
repnz
push
adc
clc
xor
pop
sub
fsubr
adc
das
lock
push
mov
push
inc
scas
mov
dec
enter
or
test
jmp
or
mov
mov
fsub
repz
stc
mov
aad
test
sbb
fcmovnu
jns
scas
jmp
or
sbb
xlat
cld
mov
pop
cmps
jmp
arpl
in
gs
fcmove
imul
ins
lahf
sahf
mov
cmp
sbb
pusha
into
mov
imul
out
push
sub
jle
mov
je
cmp
or
mov
cmps
push
jg
push
repz
inc
cmp
retf
add
push
cmp
inc
mov
xor
pop
int
inc
not
mov
mov
sbb
dec
cli
std
xchg
cmp
lahf
push
dec
popf
sub
cli
xchg
inc
hlt
or
sub
dec
dec
es
mov
in
jecxz
push
ds
ret
stos
dec
in
push
nop
ret
fwait
cmc
pop
call
clc
jl
je
xchg
outs
clc
nop
cmc
sub
movs
std
(bad)
or
sbb
cmp
cmp
test
jmp
push
frstor
pop
and
aam
inc
xor
sub
adc
ror
scas
stos
cmp
xlat
add
pop
movs
cmps
int3
add
sub
(bad)
(bad)
fadd
cmp
shl
xchg
and
ja
repnz
or
movs
call
(bad)
push
or
jb
xor
loopne
sbb
xor
test
and
inc
xchg
add
lods
cmps
pop
mov
test
sbb
xor
xor
mov
mov
ret
and
out
add
sub
rcr
nop
xor
mov
or
sbb
push
sar
lds
push
xor
adc
sub
xor
lock
aam
and
mov
iret
or
mov
shr
(bad)
lods
or
mov
outs
sbb
scas
cmp
fimul
inc
es
test
cmp
shl
xchg
fisubr
adc
dec
mov
fnstenv
jle
enter
or
mov
hlt
cmp
int3
ja
push
dec
push
xchg
xchg
fldenv
dec
stos
or
or
sti
(bad)
in
mov
cs
ss
push
imul
fcmovnbe
fs
pop
fwait
shl
push
in
cli
popa
maskmovq
test
sbb
push
rep
inc
or
test
rcl
sbb
fcmovu
out
outs
outs
fldcw
popf
hlt
sub
xchg
lahf
sbb
jl
cwde
add
dec
mov
iret
cmp
mov
std
jnp
cs
pop
inc
ss
rcl
cwde
cmp
sub
add
aad
sar
mov
scas
rcr
and
ss
push
fadd
sub
sbb
mov
inc
lods
stc
or
cmp
dec
(bad)
clc
push
cmp
das
lods
loope
in
push
cmp
mov
jns
adc
mov
inc
mov
movs
das
push
mov
xchg
pop
fdivp
out
ja
and
cmp
jbe
gs
sbb
(bad)
push
aam
xor
cmc
mov
pop
in
jmp
cmc
pop
mov
dec
shl
ins
lods
sti
in
xor
daa
inc
(bad)
and
stos
in
sub
pop
call
dec
jae
mov
(bad)
xchg
dec
ins
bound
mov
cld
mov
mov
push
popf
push
les
xchg
dec
retf
loope
mov
retf
std
movs
jg
dec
lahf
test
cmp
cmps
pusha
cmps
mov
push
or
jae
mov
mov
inc
or
mov
hlt
push
mov
je
mov
xchg
inc
push
dec
dec
es
jl
cld
imul
fwait
cld
add
cmp
and
pop
or
loop
mov
adc
pop
test
add
xor
retf
out
inc
sub
cmp
inc
and
mov
lock
out
in
sub
retf
ficomp
inc
(bad)
(bad)
dec
pop
jb
add
fcomp
retf
jno
sub
pop
add
stos
cmp
pop
or
mov
jecxz
xchg
jmp
mov
rcl
aas
inc
xor
test
int3
in
add
lock
sbb
mov
call
or
in
jp
dec
xor
pop
inc
daa
sbb
jecxz
scas
add
clc
mov
pop
ret
(bad)
jmp
inc
pop
and
out
push
fld
hlt
outs
push
push
or
mov
mov
pop
xor
or
out
inc
add
xchg
pop
mov
add
fiadd
pop
cmp
mov
(bad)
ds
bound
add
in
adc
jl
cmp
cld
jecxz
or
and
pop
sub
(bad)
ret
and
out
sub
push
and
ins
scas
mov
shl
dec
aad
pop
or
adc
and
push
lock
(bad)
hlt
in
pop
ins
imul
mov
adc
mov
ss
neg
or
dec
push
daa
test
add
mov
sti
sub
sbb
pop
mov
jmp
test
cmp
ror
push
mov
sbb
sbb
ret
jns
jp
cmps
adc
movs
setb
ds
rcl
mov
ss
jbe
or
pop
add
cld
mov
jae
cwde
dec
cmp
das
xor
dec
shl
mov
mov
jmp
stos
in
xchg
push
jb
inc
pushf
sahf
adc
mov
mov
or
xlat
loope
sbb
inc
mov
(bad)
mov
dec
test
(bad)
sbb
dec
xor
dec
jb
stos
mov
nop
in
dec
mov
cmp
dec
pushf
jmp
mov
je
lods
pop
popa
push
pop
mov
or
cld
add
mov
add
shr
shr
repz
(bad)
shl
mov
iret
push
test
pop
and
cs
repz
sub
inc
jge
fld
cs
aam
clc
xor
sub
mov
push
mov
je
bound
pop
fidivr
mov
dec
inc
ds
imul
ins
cmp
sbb
cdq
mov
xchg
xchg
or
iret
popf
jp
cwde
mov
jns
enter
cmp
inc
and
jmp
xchg
sub
inc
mov
add
cdq
adc
movs
pushf
jae
add
mov
dec
out
hlt
adc
pushf
sti
sub
jp
fs
mov
ja
(bad)
pop
inc
cmps
test
int
mov
xchg
pop
ja
lods
addr16
out
ds
or
int
rol
mov
push
and
outs
mov
mov
add
out
and
les
or
push
jne
dec
aam
push
pop
das
cmp
sub
add
and
das
xchg
repnz
and
jne
in
mov
xor
mov
jbe
call
mov
shr
repnz
inc
jne
jns
aad
test
data16
pop
in
pop
div
push
push
jo
jecxz
loop
xchg
outs
dec
inc
mov
mov
iret
mov
lods
push
fsubrp
int
ss
jmp
das
xchg
xchg
adc
push
clc
jl
sub
mov
dec
and
lods
int
and
data16
push
inc
ret
push
loope
int3
aas
out
out
or
movs
mov
(bad)
push
call
add
(bad)
jo
pop
lahf
addr16
test
shr
test
outs
or
mov
lods
gs
dec
mov
jecxz
jp
jb
aam
fisub
add
or
mov
mov
or
sbb
call
pop
daa
jg
pop
jne
lods
xor
mov
jecxz
sbb
in
cs
add
dec
movs
lods
cmc
loope
add
cli
rcr
mov
push
inc
call
add
dec
popf
je
fidiv
(bad)
not
xor
mov
stos
cli
fwait
aam
movs
sbb
inc
jle
cmp
inc
xchg
xchg
inc
jns
ins
std
lods
adc
aad
aam
(bad)
stos
aad
dec
sbb
loopne
in
enter
cwde
pop
sbb
loope
mov
dec
xor
iret
lods
out
dec
lahf
ds
out
das
push
loop
fisubr
mov
out
inc
popf
mov
dec
xchg
push
sahf
xchg
xchg
sub
add
jae
jmp
in
nop
jmp
sahf
test
repz
fldpi
cs
in
pop
daa
pop
mov
sysret
pop
adc
outs
fs
scas
push
cwde
mov
inc
cmc
xor
xchg
ja
mov
or
jno
pusha
push
xchg
mov
ins
mov
xor
ss
push
fidiv
mov
mov
pushf
dec
sub
out
dec
jnp
aas
mov
shr
xchg
or
or
inc
imul
leave
push
pusha
mov
(bad)
mov
outs
and
push
jae
inc
and
stos
push
leave
mov
inc
jo
inc
mov
rcr
js
push
push
ins
add
xchg
xchg
retf
cmp
loope
mov
dec
dec
add
ss
mov
rcr
fild
mov
push
jp
push
cmp
push
popa
sub
jno
scas
or
(bad)
ret
bound
mov
xor
mov
icebp
fs
sub
cmp
cmps
rcr
and
pop
repz
pop
stc
div
dec
cmp
jnp
sub
addr16
lahf
loop
mov
into
mov
dec
ret
jae
int3
into
and
ficomp
cdq
push
sub
xchg
sbb
cmc
push
and
cli
adc
xchg
ret
dec
fidiv
pushf
add
jmp
mov
call
jmp
or
mov
or
adc
cli
pop
and
sar
outs
mov
mov
test
push
jp
pop
mov
cli
dec
push
pop
out
mov
inc
lea
movs
sar
xchg
inc
and
rcr
retf
inc
test
ror
cdq
jp
fsubr
add
mov
mov
ins
popa
iret
cmc
mov
lods
pop
and
sar
repnz
out
div
push
inc
pop
adc
sbb
inc
dec
push
mov
jns
(bad)
std
add
mov
adc
and
pushf
scas
jns
jle
push
or
xchg
sub
sub
mov
and
sbb
mov
into
and
push
or
push
sbb
jmp
adc
jmp
ds
and
mov
pop
cmp
pop
pop
push
xor
jmp
xor
ins
mov
xchg
(bad)
xchg
fld1
mov
adc
enter
jle
mov
es
pop
ins
adc
push
jbe
cmp
adc
outs
jp
sbb
jp
mov
xlat
and
push
hlt
scas
pop
jae
je
mov
stos
scas
mov
ss
out
mov
or
cmp
dec
dec
fs
ja
stos
test
out
scas
xlat
jns
and
jg
adc
mov
in
mov
inc
aad
mov
adc
xchg
xor
jmp
jmp
push
(bad)
std
ffreep
out
push
and
jno
pop
je
pusha
test
jecxz
dec
mov
mov
pop
outs
or
dec
ja
pop
and
neg
or
jmp
adc
fistp
jmp
jno
xor
leave
pop
shl
jno
cmp
add
or
xor
retf
cmp
dec
ror
pop
mov
retfw
push
xchg
mov
leave
dec
fsubr
add
cs
jge
and
repz
pop
das
mov
pop
mov
mov
fst
push
js
mov
adc
dec
xor
sahf
jp
pop
mov
cdq
daa
sbb
cmps
pop
jge
add
xchg
clc
dec
add
mov
cli
sub
xchg
jne
aas
addr16
dec
add
pop
jge
sub
ret
rcr
add
cmp
push
je
ficomp
test
iret
push
inc
outs
ss
scas
nop
jmp
add
cdq
lock
pop
jle
nop
mov
jne
pop
push
aaa
pushf
not
ds
je
pop
xlat
es
arpl
mov
xor
xor
xchg
push
shl
pop
outs
lock
sbb
fild
mov
push
or
push
dec
add
icebp
xchg
mov
mov
and
xchg
push
loope
std
ds
rol
lods
sbb
adc
outs
iret
inc
inc
mov
mov
pop
test
pop
cmp
xor
sbb
cmp
mov
adc
int
xor
das
mov
push
xchg
in
mov
mov
test
ror
cmp
pushf
mov
sbb
aas
(bad)
adc
aas
aas
xchg
and
push
int
fistp
cwde
icebp
push
test
mov
dec
movs
cwde
in
fcomi
adc
mov
test
icebp
mov
xchg
outs
rcl
mov
jl
inc
add
jb
push
test
xor
dec
(bad)
push
cmps
mov
adc
inc
jg
(bad)
sub
cmp
xor
test
sub
ins
cmp
ss
sbb
cmp
xchg
xchg
sbb
add
dec
ds
(bad)
pusha
jae
lods
xchg
jmp
adc
hlt
mov
aad
jge
das
aam
stc
sub
repnz
jle
hlt
mov
gs
jle
stc
mov
std
dec
in
outs
pop
les
mov
mov
data16
mov
mov
mov
fisub
ror
pop
cmp
in
sbb
sar
out
hlt
lods
push
fisubr
mov
and
xchg
fwait
pop
dec
ret
jl
sbb
into
dec
mov
aas
ins
inc
or
add
shl
pop
sub
imul
dec
lods
push
test
iret
movs
not
cs
inc
fidivr
jp
add
repz
jmp
test
ins
repnz
sbb
rol
xchg
mov
and
xchg
mov
pop
js
repz
lea
dec
pop
or
and
jnp
mov
test
adc
in
repz
sbb
add
test
mov
into
sbb
dec
push
ficom
cmp
and
sbb
add
fcmovnu
sti
inc
jnp
(bad)
rcr
int3
(bad)
(bad)
xor
retf
cmps
xchg
scas
adc
jno
lods
js
xor
or
ins
xchg
iret
mov
cmp
cmp
(bad)
stos
sbb
jae
or
test
push
pop
pop
push
inc
dec
aad
mov
pop
dec
jl
xchg
mov
imul
scas
cli
or
mov
xchg
and
xchg
test
test
xor
jge
push
out
rcr
or
sbb
repz
inc
cmp
fcmove
sahf
jmp
sub
jmp
pop
ror
mov
push
cwde
push
and
mov
pop
(bad)
pop
inc
arpl
jae
sbb
icebp
imul
and
fwait
test
inc
dec
mov
and
scas
cmp
out
cmc
stos
pop
test
sub
adc
call
repnz
out
pop
sub
jmp
add
cmp
jmp
aam
imul
dec
enter
push
push
mov
adc
imul
mul
xchg
jbe
sub
lods
mov
stos
test
cmps
hlt
popf
cmp
cwde
jnp
cdq
cmp
mov
xchg
popa
pop
adc
(bad)
scas
stos
push
icebp
xor
push
cmp
cwde
cmp
jnp
lea
or
hlt
stos
inc
jno
sub
dec
ins
dec
or
mov
cmp
dec
inc
jmp
mov
(bad)
mov
xchg
pop
shl
ret
or
iret
addr16
into
mov
sub
jmp
cld
and
imul
bsf
scas
lahf
test
jp
cs
jecxz
ds
(bad)
sbb
xchg
dec
pop
mov
fstp
in
test
mov
xchg
xor
cmp
cmp
repnz
cli
add
fidiv
lds
dec
inc
mov
and
push
cmp
sti
sub
dec
xor
lea
push
or
call
xor
fdiv
shr
xchg
mov
mov
and
jae
jbe
test
mov
mov
loopne
addr16
push
shl
push
out
cmp
fstp
dec
pop
jo
mov
sub
icebp
mov
aaa
repnz
push
sub
jno
test
xchg
test
into
out
fcmove
dec
not
int
data16
enter
push
xlat
ins
cld
sub
dec
(bad)
sub
mov
int3
mov
jp
sbb
and
add
xchg
cdq
sti
inc
xchg
or
cdq
(bad)
gs
les
arpl
fs
dec
int3
iret
mov
das
cli
mov
xor
clc
clc
mov
adc
cmp
ret
ror
out
das
std
sub
retf
mov
jo
add
sti
imul
vmovupd
call
ins
xor
and
bound
dec
jg
add
fiadd
sub
dec
(bad)
out
xchg
leave
add
lahf
or
xor
lock
and
mov
mov
repnz
push
jp
fidiv
push
cmp
and
and
sbb
into
xor
sti
movs
cmp
lds
add
push
mov
xchg
lahf
mov
xchg
cmp
xchg
dec
fwait
retf
cmovg
das
push
jb
dec
gs
or
jo
or
adc
je
mov
inc
repnz
iret
bound
inc
jge
xlat
rep
pop
add
xor
cld
fadd
xchg
icebp
mov
mov
push
sub
dec
out
data16
inc
js
aas
jmp
sbb
in
dec
(bad)
pop
out
jl
push
out
(bad)
mov
push
mov
outs
in
(bad)
dec
push
fs
loop
inc
je
mov
xor
push
push
mov
js
setne
scas
jmp
jl
stc
fistp
stos
adc
xor
mov
mov
ret
rol
js
(bad)
cmp
mov
aam
(bad)
arpl
xchg
adc
mov
sbb
nop
rcr
push
push
jo
ins
bound
push
jnp
fisttp
mov
xor
cmps
aaa
retf
in
dec
xor
sub
pop
pop
movs
dec
pop
and
and
out
movs
inc
push
xor
sub
loope
push
outs
lds
jns
adc
xchg
jae
and
pop
into
pop
fisttp
call
sub
aaa
(bad)
dec
sbb
enter
and
push
dec
push
loopne
ja
fisttp
mov
sti
clc
mov
pop
sub
mov
addr16
stc
rcr
dec
enter
push
add
adc
mov
push
leave
adc
mov
and
fild
test
sub
test
iret
jecxz
inc
xor
sub
mov
sbb
cmp
ret
sbb
in
call
loope
push
xchg
pop
or
xchg
call
scas
shl
xchg
or
clc
jns
mov
pop
fs
jle
cld
or
sti
mov
mov
enter
fsubr
fisttp
sub
rol
xor
(bad)
pop
pop
xchg
ds
loopne
daa
pop
mov
cmp
ss
dec
xchg
(bad)
aas
pop
pop
test
stc
data16
dec
sbb
pop
outs
call
jo
and
sbb
scas
fcomip
gs
aad
add
xor
gs
out
test
vpackssdw
je
jns
adc
ds
and
(bad)
cmp
jo
xchg
popa
enter
ret
sbb
jo
ss
push
fiadd
push
jnp
or
mov
inc
shr
arpl
fwait
cmp
mov
cdq
rcr
or
xchg
int
xor
xor
das
dec
out
adc
or
mov
xor
push
mov
xor
adc
int
add
jae
sub
cmp
adc
icebp
dec
xor
inc
test
mov
adc
cld
xchg
mov
call
cld
add
xchg
dec
aas
pop
int3
loop
out
rcl
(bad)
imul
sbb
push
fstp
sbb
add
ficom
add
dec
aam
cwde
inc
xchg
cmp
in
(bad)
int3
pop
(bad)
dec
stos
inc
ds
rdmsr
daa
xchg
sbb
cs
ds
inc
inc
daa
fld
sbb
inc
imul
jo
mov
jmp
cmp
pop
adc
loopne
ins
pop
cmp
lea
or
sbb
mov
inc
push
mov
aad
push
daa
scas
cmp
enter
movs
enter
jnp
xor
dec
jl
and
xor
in
bound
in
push
call
sbb
xlat
jle
call
test
xchg
ds
enter
mov
and
daa
in
and
shr
int
sub
jbe
das
adc
cmp
sub
iret
(bad)
jne
fdiv
jp
pushf
int3
loop
push
lahf
pop
mov
push
pop
call
scas
jmp
fs
add
std
popf
lock
mov
mov
retf
dec
pop
retf
mov
sbb
inc
xchg
cmc
je
ret
cdq
das
mov
and
dec
call
les
and
retf
fs
or
stc
in
retf
push
xchg
fisttp
push
loope
lods
inc
clc
fbld
fild
mov
dec
push
test
std
cmp
xor
jbe
pop
pop
(bad)
scas
pop
adc
out
test
xor
mov
push
stos
mov
fistp
stos
addr16
inc
jbe
je
push
push
and
adc
mov
sub
(bad)
cld
ret
shr
mov
xor
xchg
or
pop
popa
add
cdq
mov
fild
mov
xor
(bad)
and
popf
mov
mov
jo
aaa
mov
sbb
fcmove
push
retf
aas
fcmovbe
dec
xor
jns
xor
test
mov
dec
dec
into
xchg
mov
in
rcr
jmp
fdiv
or
sbb
mov
sbb
jbe
(bad)
mov
popf
bound
fwait
xor
out
test
ja
ja
out
adc
stos
fidivr
fwait
jge
sub
pop
arpl
adc
fsub
jns
gs
stos
imul
retf
(bad)
stos
adc
shl
sub
popa
test
or
adc
adc
scas
popa
lea
sar
sub
imul
hlt
jbe
push
aam
fcom
mov
cmp
ja
popf
or
mov
(bad)
jno
ret
nop
inc
and
or
data16
add
cmp
mov
ss
jnp
cld
je
ins
jbe
ret
fnstcw
div
fcmovnbe
jne
mov
rcr
jno
ret
mov
jns
dec
fwait
pop
sbb
mov
push
nop
pop
pusha
lods
add
retf
repz
sar
mov
adc
push
fld
scas
dec
mov
mov
fnstsw
jmp
pop
adc
push
aad
cmp
xlat
jl
pop
jno
adc
ds
loopne
adc
dec
xor
xor
adc
add
in
int
jle
ret
imul
push
and
mov
jge
scas
fadd
adc
mov
ss
mov
pop
cld
cmps
jmp
comiss
push
mov
jo
loope
enter
pop
mov
mov
in
mov
dec
retf
cmps
out
ds
out
fs
cwde
push
dec
sub
mov
and
pop
mov
cmp
mov
cmps
aaa
ror
cdq
aam
dec
fcom
sbb
jbe
enter
test
lds
js
mov
imul
rcr
dec
cmp
adc
mov
jb
(bad)
and
das
sbb
and
sbb
pop
icebp
stc
icebp
or
cmp
daa
mov
outs
nop
in
add
fsubr
pushf
mov
pushf
cmp
pop
aas
sub
sbb
cld
sub
(bad)
fist
les
fwait
cmps
and
fisttp
mov
jmp
adc
sub
ret
or
jbe
out
mov
cmps
int
retf
push
mov
and
cmps
into
sar
fld
sar
loop
push
xor
cmp
and
ds
cmp
mov
sub
xor
inc
iret
ror
or
push
jge
std
or
jg
cmc
jae
dec
mov
loope
mov
stos
dec
inc
daa
push
xor
dec
out
or
lahf
sub
test
add
xchg
scas
xchg
cmp
jmp
mov
popa
xor
popf
int
aam
stos
adc
xor
pop
dec
push
push
aad
inc
or
mov
(bad)
mov
xchg
and
mov
frstor
cmp
popa
lods
xchg
rcr
push
mov
mov
mov
adc
push
mov
frstor
(bad)
jb
and
mov
call
out
push
adc
and
outs
xor
popa
xor
jnp
or
in
sbb
sbb
and
mov
inc
mov
test
call
and
push
test
xor
adc
leave
(bad)
in
mov
cmp
hlt
push
dec
sar
in
mov
mov
popf
loope
mul
fmul
(bad)
(bad)
or
out
(bad)
sbb
hlt
add
shl
test
daa
inc
test
outs
sub
adc
push
push
stos
dec
sub
push
sahf
in
push
push
popa
scas
inc
scas
mov
imul
push
clc
xlat
fucom
hlt
push
sub
push
push
movs
jae
(bad)
mov
(bad)
loopne
movs
lods
(bad)
out
inc
sub
out
jmp
sbb
jmp
push
jnp
shl
xor
inc
xchg
jecxz
enter
mov
xchg
add
mov
mov
or
mov
popa
loope
push
jl
dec
mov
iret
and
mov
push
xchg
shl
nop
retf
icebp
xor
lahf
push
push
add
pushf
xchg
push
sbb
add
hlt
push
sbb
ins
in
aad
fidiv
inc
xchg
mov
imul
pop
movs
adc
(bad)
cli
push
mov
add
mov
shl
cmp
dec
movs
mov
or
js
inc
js
cmps
aad
nop
xchg
adc
pop
cmp
shr
lds
jecxz
mov
pop
das
fisttp
sti
inc
in
add
cmp
(bad)
scas
dec
stc
pop
adc
aaa
rcr
push
lods
std
pusha
sub
jge
jnp
loope
cmp
lods
rol
dec
clc
mov
mov
jle
and
mov
in
scas
mov
test
aam
mov
and
(bad)
outs
adc
xor
popa
dec
fstp
jmp
add
xor
and
ins
adc
sub
mov
inc
dec
outs
ret
pop
push
or
gs
imul
scas
imul
cwde
push
aad
cmp
or
out
ins
inc
call
inc
xchg
fnsave
dec
push
imul
stc
call
cmps
xchg
and
cmp
sub
fnstsw
in
xor
pop
jl
div
test
popa
sub
repz
mov
inc
sbb
push
sar
fdiv
mov
sub
push
add
mov
pop
push
xor
mov
pop
loop
ja
fisub
xchg
sbb
xchg
pop
mov
jb
and
cmc
jo
adc
out
pop
fimul
xchg
les
mov
pushf
mov
pop
xor
jg
inc
cdq
add
push
mov
pop
xor
jecxz
pop
sbb
jp
into
popf
jmp
je
jb
fld
mov
aad
jnp
sub
push
push
rsm
test
iret
aaa
and
pop
das
sti
mov
jo
pop
inc
lds
inc
popa
stos
jle
jp
fs
xchg
fisubr
and
jge
mov
fdivr
enter
rcl
dec
loopne
and
and
data16
call
adc
ret
retf
add
push
(bad)
cmp
jns
push
push
data16
stc
ss
and
leave
cmp
and
gs
vmovups
leave
popf
adc
pop
mov
ins
sub
(bad)
and
fdivr
ret
setae
sbb
popf
adc
fcom
aam
(bad)
mov
sbb
ds
out
rcl
nop
and
inc
inc
cmp
push
outs
jl
pushf
(bad)
aaa
push
out
xchg
mov
out
inc
lods
pop
push
pop
clc
js
mov
mov
sub
iret
xadd
rol
or
sahf
sbb
mov
inc
inc
loope
sbb
jo
dec
and
sub
movs
jae
sar
cli
xchg
call
ins
cmp
or
(bad)
cmp
arpl
add
cmp
mov
sti
fwait
gs
inc
arpl
rol
imul
call
fidiv
inc
in
and
push
ja
xchg
and
lock
and
mov
or
fisttp
dec
xchg
push
inc
hlt
mov
pop
aad
xor
into
pop
sahf
sbb
sub
dec
or
pop
das
out
push
sbb
std
call
int3
sbb
test
das
sti
nop
lds
push
dec
jge
(bad)
ret
ins
aam
outs
cmp
dec
pop
mov
in
sbb
adc
aaa
pop
wrmsr
retf
add
adc
or
retf
sbb
sub
enter
jb
ss
mov
and
into
addr16
shl
mov
stos
ss
mov
sbb
rcr
xchg
das
mov
movs
xchg
and
and
(bad)
mov
jb
inc
mov
aad
cmp
and
push
mov
pop
push
aas
stos
xor
jbe
and
cld
mov
mov
imul
sbb
mov
icebp
bound
psubsw
data16
imul
push
idiv
xor
fild
pop
push
sub
inc
xchg
movs
stos
fcmovb
push
mov
push
push
mov
test
sbb
jp
and
mov
and
ins
or
cmp
mov
std
xchg
ret
dec
aas
jg
les
xchg
fild
dec
int
repnz
mov
xor
cmp
sub
mov
adc
jae
add
cmp
repz
mov
sbb
sbb
fisub
pop
and
bnd
iret
mov
imul
xor
shl
or
jecxz
in
xchg
lds
mov
sbb
push
mov
popf
hlt
sbb
scas
loop
pop
or
xchg
xor
aaa
addr16
xchg
popf
add
stos
lds
nop
adc
cmc
mov
loopne
je
fbstp
cwde
(bad)
sbb
lods
lock
fadd
js
or
pushf
sahf
inc
aaa
sbb
sahf
push
sbb
and
jo
icebp
pop
cmps
out
jecxz
ins
add
in
inc
dec
mov
enter
inc
mov
jbe
xchg
add
out
adc
dec
cmps
mov
fxch
rol
cmps
mov
pop
dec
popa
aam
cwde
lds
push
mov
inc
lea
cmp
inc
pop
lds
cmp
mov
jae
cmp
repnz
(bad)
cmps
popa
rcl
aad
or
dec
out
adc
push
adc
jmp
arpl
adc
add
cdq
out
outs
mov
push
and
push
sub
pop
lock
into
dec
dec
jb
popf
cmps
push
out
imul
outs
ret
jle
mov
int3
mov
ins
out
fild
xor
jmp
sub
dec
mov
aaa
xchg
push
jno
xchg
cmp
fstp
push
add
push
mov
test
pop
aad
xchg
ins
iret
arpl
aaa
fs
fisttp
call
xchg
jmp
loope
icebp
movs
imul
jle
xor
adc
cmp
(bad)
stos
js
and
enter
mov
jecxz
outs
rcl
lods
pop
or
addr16
xchg
sbb
stos
xchg
iret
test
enter
xchg
sahf
pop
lds
js
sub
ret
cmp
mov
add
clc
sub
push
leave
pop
mov
xchg
rcr
out
and
mov
xchg
fnsave
xor
cmp
aad
mov
clc
xor
sti
mov
outs
cmp
outs
or
inc
jnp
loop
clc
inc
dec
mov
ret
out
adc
pop
push
jge
pop
mov
sbb
dec
dec
(bad)
jp
or
mov
popf
add
jge
mov
xchg
push
cli
loopne
sbb
lea
or
adc
mov
inc
stos
add
jmp
iret
jns
ins
jl
fadd
inc
(bad)
jbe
test
push
fucom
push
dec
es
and
jb
add
(bad)
daa
cmp
jp
pop
ror
imul
push
adc
or
push
adc
xchg
outs
inc
outs
xchg
popa
mov
cld
xor
xchg
mov
out
add
xor
mov
mov
imul
push
pop
mov
mov
jbe
mov
xchg
push
mov
xchg
call
cmp
push
in
movs
push
pop
out
cmp
scas
mov
dec
bound
stos
inc
sahf
dec
jg
add
in
push
add
pop
int
mov
adc
xlat
jge
fst
inc
mov
shl
sub
cmp
dec
sub
cdq
xor
xchg
bound
mov
and
popf
mov
neg
in
mov
dec
(bad)
pop
out
outs
pushf
xor
mov
inc
mov
test
test
jge
push
or
push
cmp
mov
xchg
in
fsubr
xchg
mov
cmp
mul
cmc
pop
in
dec
fcmovnbe
and
mul
fwait
lds
popa
shr
pushf
or
push
jne
adc
cmps
push
jmp
lea
pop
add
jle
or
daa
mov
jnp
cmp
fnsave
cmc
xor
cs
and
mov
lods
sub
xchg
pop
ins
leave
aaa
fs
test
das
xchg
or
mov
jb
cmc
outs
jp
or
adc
xor
cwde
ss
ffreep
xchg
call
jl
ficom
cmp
test
and
inc
pop
mov
popa
cmps
sub
das
lahf
xor
ins
xor
cmp
or
inc
pusha
push
shl
xor
or
(bad)
cli
dec
jmp
mov
inc
or
jge
dec
bndstx
cmps
push
int
aam
cli
dec
scas
and
mov
pop
mov
adc
mov
ror
in
js
ret
mov
and
mov
xor
push
jg
xchg
or
int3
xchg
pop
out
lahf
cmp
arpl
or
aad
mov
test
fmul
cmp
pop
scas
jecxz
adc
sub
push
mov
fimul
adc
jg
xlat
je
sub
sahf
dec
(bad)
mov
jno
inc
(bad)
jnp
and
into
and
in
outs
cmp
sbb
push
pop
cld
sar
shl
mov
cdq
inc
sbb
jge
jmp
sbb
fcom
cld
leave
push
(bad)
cld
or
add
jb
or
cmp
lods
jp
lds
push
jle
(bad)
sti
sub
xor
int
push
addr16
popf
pusha
push
mov
pop
jge
retf
jmp
ins
aaa
inc
(bad)
mov
sahf
test
dec
(bad)
mul
lods
loopne
fsubr
or
vandpd
js
cmp
mov
xchg
out
outs
lods
push
js
xchg
mov
mov
mov
das
xchg
and
aas
push
fcomi
nop
xor
enter
cmp
sahf
movs
push
xchg
and
js
call
mov
test
and
dec
and
ja
inc
test
and
(bad)
jecxz
sub
mov
jbe
xchg
mov
or
iret
sahf
fist
in
imul
loopne
sub
cdq
les
inc
ss
xchg
gs
(bad)
aas
push
mov
mov
(bad)
repz
push
sub
push
pop
cmc
or
popa
or
inc
addr16
out
mov
mov
jb
inc
lahf
or
adc
das
movs
sbb
pushf
in
mov
xchg
add
xchg
sub
idiv
push
mov
sar
repnz
js
bound
sub
mov
pop
and
(bad)
movs
arpl
test
mov
pop
dec
nop
adc
mov
adc
mov
jns
dec
jg
add
dec
pop
lods
sub
sub
jl
inc
pop
dec
jmp
jnp
and
sub
(bad)
push
push
bound
rcl
push
sub
cmps
jnp
mov
and
pop
arpl
shl
and
push
fsub
out
dec
push
mov
(bad)
int
add
or
loopne
inc
add
pop
je
aad
pop
push
push
adc
xchg
cli
sub
test
aam
icebp
fwait
sub
addr16
mov
addr16
add
lds
test
test
push
xchg
fcomp
mov
iret
inc
fstp
adc
pop
out
sahf
mov
loope
add
mov
and
loop
mov
xlat
cdq
(bad)
or
cwde
lds
aam
jbe
mov
jge
mov
mov
pop
mov
xor
ror
push
into
call
pop
(bad)
fidivr
imul
xor
xchg
enter
inc
dec
(bad)
mov
or
(bad)
shl
jnp
in
outs
or
(bad)
int
(bad)
cmp
stc
xor
shl
xchg
shl
xchg
fs
mul
in
lods
ror
pop
jmp
fbstp
(bad)
repz
mov
je
jmp
inc
xchg
dec
adc
mov
inc
xchg
jnp
sbb
sbb
xchg
hlt
mov
push
sub
loope
push
inc
cmp
ret
out
ins
mov
push
cmp
cmps
pop
inc
jb
jbe
or
inc
cmp
sbb
push
lea
in
pop
or
fldcw
push
out
es
aas
shr
sar
cmps
pop
or
or
(bad)
push
mov
pop
and
cmp
pushf
inc
cdq
out
mov
lods
outs
ss
dec
jg
mov
add
retf
(bad)
fwait
aas
in
cwde
mov
push
xor
out
push
jb
popf
imul
leave
and
xchg
sbb
jl
leave
xor
pusha
mov
pop
loope
test
and
ret
dec
(bad)
fild
cmp
push
xchg
jnp
jo
lods
jp
inc
call
lea
outs
inc
fist
xor
push
dec
fisub
das
movs
mov
mov
test
xchg
sub
cli
and
sbb
xchg
retf
sbb
and
clc
loope
shl
sub
pusha
(bad)
in
stos
xor
mov
iret
mov
xchg
ficomp
xchg
lahf
scas
imul
add
cdq
xor
push
and
repnz
adc
outs
cld
push
adc
mov
loope
add
cmps
arpl
(bad)
repz
popf
add
and
inc
outs
mov
iret
aad
mov
add
xor
cmc
pusha
add
mov
jne
call
dec
and
jg
test
lods
sbb
in
test
int
dec
xchg
jg
adc
mov
(bad)
sahf
cmp
add
(bad)
xchg
clc
sbb
sub
fbld
jge
shl
ja
pop
dec
xchg
xchg
out
cmp
retf
cmp
jge
fs
cmc
xor
rcr
jnp
cld
and
push
loope
dec
or
mov
pop
movs
aam
daa
test
mov
fdivp
mov
call
inc
cs
iret
jb
out
aaa
stos
pop
cmp
push
out
out
xor
lahf
add
into
fisttp
mov
push
jl
les
aaa
xchg
jg
dec
jp
add
mov
or
xchg
dec
movs
push
out
jbe
retf
enter
fwait
inc
jb
add
inc
xchg
add
loope
cmp
mul
aad
fisub
and
leave
jae
cli
sbb
xchg
dec
adc
sar
outs
loopne
and
ret
fucomp
cmc
mov
push
pop
xchg
and
push
lods
(bad)
mov
push
adc
mov
mov
adc
out
and
and
add
fucomp
outs
sbb
xor
xor
test
pop
pop
pusha
retf
push
sbb
inc
test
pop
not
mov
push
(bad)
mov
movs
cmp
mov
adc
fiadd
hlt
out
lds
ins
mov
jo
pop
xchg
mov
xchg
(bad)
push
jecxz
add
enter
les
je
and
add
movs
cli
retf
inc
sbb
push
gs
pop
jo
fnstsw
pop
loope
mov
mov
popa
cmps
stos
add
and
(bad)
ds
outs
xchg
repz
jmp
fiadd
mov
fscale
pusha
in
jnp
rol
mov
add
imul
cmp
mov
fcomip
stc
popa
and
cmp
popf
ds
pop
ja
aaa
and
aas
gs
jl
inc
cmp
bound
xchg
adc
sub
push
outs
sub
aam
ins
ret
iret
inc
mov
loop
adc
dec
jo
xor
cmp
and
mov
out
cmps
pusha
mov
xor
sub
sbb
dec
mov
shl
sub
dec
and
pop
sub
xor
inc
inc
cdq
jae
xchg
sbb
inc
jbe
leave
cmp
fs
loop
test
aaa
outs
push
popa
jmp
xchg
nop
mov
out
jg
xor
add
adc
dec
fnstcw
mov
in
jns
and
push
sar
pop
sysenter
ja
inc
fnstenv
imul
push
push
sbb
dec
adc
and
out
lea
mov
sti
cs
push
or
jp
adc
out
xor
retf
mov
fdivrp
lds
xor
mov
xor
ret
push
outs
repz
adc
bound
adc
push
das
stc
xchg
imul
inc
sbb
jae
movs
jae
pop
into
clc
inc
fisttp
add
adc
test
xchg
cmp
rcr
fdivrp
iret
(bad)
sub
fistp
sub
outs
xor
dec
nop
xchg
jo
outs
das
or
mov
dec
inc
out
xchg
cli
or
test
and
sahf
mov
xchg
lods
stos
inc
aad
or
(bad)
mov
add
inc
mov
push
fst
(bad)
pushf
fwait
add
jle
or
sub
inc
xchg
(bad)
enter
(bad)
xchg
mov
paddsb
push
mov
fs
and
scas
push
(bad)
xor
aas
clc
gs
mov
fisub
mov
or
xchg
mov
pop
sub
mov
fnstsw
shr
push
mov
and
or
sbb
call
mov
retf
leave
mov
xlat
xchg
xchg
cmps
xor
retf
(bad)
sar
cli
lods
and
sbb
pop
add
sub
das
pop
(bad)
ficom
(bad)
clc
scas
ret
rcl
cmp
jp
scas
gs
les
jae
cli
gs
lods
pop
div
js
jg
sub
dec
ja
xor
shl
push
cmp
addr16
mov
mov
xor
add
scas
cs
sbb
cs
out
sub
dec
imul
clc
dec
nop
scas
xchg
sbb
mov
inc
or
(bad)
(bad)
sub
arpl
pop
(bad)
lods
jae
scas
pop
sub
mov
adc
jl
and
mov
and
ins
xor
mov
pusha
call
pop
inc
xor
sar
in
inc
jmp
pop
lahf
mov
pop
dec
cli
jbe
(bad)
dec
mov
adc
sub
imul
hlt
ja
dec
adc
xor
dec
sub
sub
and
push
jmp
(bad)
bound
xor
mov
mov
ror
ja
(bad)
xor
pop
dec
leave
in
hlt
mov
mov
jb
sbb
out
js
popf
push
sbb
retf
add
mov
cwde
mov
inc
xor
lahf
xlat
mov
cmps
jmp
mov
jne
jb
imul
mov
inc
pushf
xchg
push
sub
cmp
loopne
lods
mov
push
xor
in
mov
dec
scas
gs
(bad)
jo
data16
dec
push
pop
xor
cmps
out
dec
or
add
xor
rcr
push
cmp
push
in
sbb
push
jae
loop
mov
(bad)
push
in
pusha
or
sbb
retf
ficomp
loop
sub
fisub
das
retf
mov
mov
mov
mov
mov
inc
call
and
sub
dec
cmp
pop
fisttp
ret
call
pusha
jbe
pop
cwde
fld
out
imul
retf
jns
jl
add
sbb
pop
lods
push
stos
inc
fstp
(bad)
sbb
stc
and
inc
movs
fwait
mov
lods
minps
mov
or
pop
stos
call
adc
xor
sbb
repnz
sahf
ds
mov
ret
jne
scas
dec
clc
(bad)
pop
outs
retf
int
out
mov
out
pop
rol
mov
dec
fucomi
mov
mov
mov
outs
jmp
xor
adc
stos
ss
push
aam
divps
push
pop
mov
adc
lods
sbb
dec
daa
sub
push
imul
clc
push
sbb
icebp
enter
lds
xor
(bad)
icebp
mov
sub
push
xchg
push
neg
lds
repnz
sub
dec
jne
sbb
ins
pxor
dec
test
pop
repz
push
int
leave
jg
arpl
sti
mov
sub
(bad)
pcmpgtb
or
jno
or
mov
ret
dec
mov
std
and
cmps
data16
mov
test
xchg
repnz
mov
ja
popf
aaa
mov
mov
pop
out
aam
es
xchg
lock
add
mov
push
mov
out
test
stos
lock
xor
mov
popf
mov
dec
outs
pushf
xor
jg
cmovge
fdiv
mov
scas
sub
in
into
inc
jge
jb
mov
adc
call
jecxz
xchg
inc
cld
cld
sub
pop
movs
sub
inc
daa
fs
add
sar
icebp
repz
and
xchg
pop
mov
jge
in
jmp
lock
dec
inc
ret
dec
pop
inc
in
popf
dec
pop
(bad)
loopne
dec
lods
push
mov
mov
push
test
and
add
(bad)
out
cmp
test
loopne
dec
mov
pop
repz
push
add
div
jle
out
push
ins
add
mov
pop
push
dec
daa
ss
lea
mov
inc
or
inc
and
jecxz
aas
shl
std
inc
fidiv
pop
cmp
mov
adc
mov
jnp
xchg
enter
xchg
dec
mov
repnz
mov
cmp
loope
(bad)
inc
int3
mov
aas
mov
ja
lods
ret
push
lods
jmp
stc
and
and
cmp
lea
sub
jmp
jno
xor
or
or
fisttp
fsubr
xor
ins
jge
push
ins
mov
out
push
sar
dec
out
into
and
sahf
sub
dec
xchg
rol
in
dec
fadd
xchg
mov
lods
je
sub
cmp
in
mov
clflush
(bad)
push
add
(bad)
cmp
pop
bound
fidiv
popa
nop
idiv
jle
cdq
test
add
mov
add
xor
aaa
adc
sub
ins
ret
adc
cmp
retf
mov
mov
ret
mov
sub
movs
add
scas
test
cld
and
out
(bad)
sbb
mov
push
add
shl
in
test
add
pusha
das
sbb
rol
aas
ins
mov
xor
push
mov
ret
mov
enter
repz
cmp
pop
cmp
mov
test
mov
scas
xchg
cs
ins
int
adc
cmp
and
dec
jmp
add
mov
jns
sar
aas
(bad)
mov
jns
pmaddwd
xchg
or
xchg
rcr
push
call
or
iret
pop
in
and
call
mov
adc
frstor
mov
ficomp
jo
repz
dec
jmp
add
cmps
cmp
xor
cdq
jmp
inc
mov
(bad)
or
ins
xor
mov
es
popf
inc
stc
rol
movs
cmp
(bad)
mov
mov
adc
or
cmc
jmp
call
in
lods
cmc
sbb
jne
imul
mov
rol
cmp
xor
call
mov
dec
pop
sbb
sub
stos
out
js
lahf
xchg
fimul
dec
jmp
jl
stos
lahf
cmp
dec
pusha
pop
outs
mov
inc
aaa
mov
icebp
pusha
add
mov
js
jne
dec
jo
je
outs
add
lock
ja
scas
jmp
adc
xchg
mov
cmp
push
mov
mov
fbld
ins
jae
lock
mov
pop
add
mov
pop
pop
and
retf
scas
add
in
shr
mov
sub
(bad)
pop
xchg
rcr
xchg
sbb
iret
aaa
and
push
pop
cmps
adc
and
fst
mov
retf
inc
add
sar
test
sbb
dec
sub
jne
xchg
mov
and
data16
jno
aam
loope
mov
fcom
pop
lahf
enter
cmp
dec
push
or
or
or
js
sbb
out
cli
fld
call
xchg
test
cs
js
sbb
add
cwde
in
jns
xor
mov
cmps
nop
stos
shr
or
call
add
jnp
and
repz
mov
(bad)
sar
pop
loopne
repnz
jbe
xchg
lods
pop
dec
cmp
loopne
leave
std
cmp
cs
xchg
fcomp
sahf
fsubr
mov
adc
pusha
cmp
mov
shl
(bad)
ins
fstp
or
jae
fld
jnp
pop
fwait
mov
hlt
arpl
sbb
mov
test
mov
mov
lock
pop
aas
sub
cmps
add
jl
add
repnz
imul
ins
mov
jne
or
xor
mov
and
pop
fld
fst
lea
fbstp
inc
lods
mov
mov
mov
xchg
mov
pop
jbe
dec
xor
pop
outs
das
jmp
inc
dec
fwait
mov
mov
retf
(bad)
outs
mov
aad
shl
js
rcr
pusha
cmps
push
(bad)
mov
jp
push
ins
add
sbb
jo
mov
(bad)
loopne
jge
clc
mov
outs
pop
xor
pop
sbb
mov
mov
(bad)
test
or
addr16
or
pop
sub
shl
sub
fmul
mov
scas
aas
cmp
icebp
dec
and
or
loop
push
clc
lods
or
mov
add
sar
pop
push
stos
mov
imul
aad
imul
jbe
adc
mov
ds
mov
fisub
lods
pop
(bad)
or
inc
rcr
or
jns
pop
and
mov
cmp
push
dec
scas
mov
sub
jnp
out
mov
jecxz
jmp
add
or
jmp
dec
lea
adc
add
cmps
out
shl
iret
cmp
cmp
push
pop
mov
sbb
or
sub
ds
add
cmp
pop
test
sub
mov
daa
jno
dec
fmul
stc
and
xchg
test
or
call
sar
out
jge
test
mov
in
push
js
ds
lock
mov
in
sahf
scas
bound
js
jo
adc
cmc
arpl
mov
push
clc
xor
rcr
jmp
push
in
jae
mov
xchg
xchg
cmps
adc
push
fidiv
inc
adc
je
movs
sub
aas
repz
daa
add
add
test
or
ret
push
arpl
xor
and
(bad)
dec
add
aas
nop
addr16
pop
fldcw
xor
int3
inc
jmp
mov
push
cmp
arpl
add
scas
jg
xor
xchg
iret
mov
jl
xor
js
into
outs
push
ss
sbb
into
mov
pop
lea
push
adc
test
adc
pop
adc
jecxz
daa
cmp
add
or
shr
cmp
xchg
push
push
jne
lods
push
push
xor
adc
pusha
mov
jne
cli
aas
(bad)
es
cli
into
push
inc
(bad)
adc
in
cmp
jg
pop
inc
sub
jge
movs
addr16
ja
mov
test
cmp
add
inc
sbb
imul
jbe
xchg
inc
(bad)
bound
test
retf
imul
pop
add
repz
(bad)
into
lods
cmps
jb
sbb
cmp
mov
pop
mov
xchg
lds
js
cli
(bad)
sub
sbb
cli
cmp
inc
cmp
inc
cmp
aam
xchg
push
out
retf
sti
sahf
mov
jmp
daa
or
mov
rcl
add
aad
test
cmp
movaps
fadd
out
jmp
inc
and
cmp
sahf
sahf
dec
movs
loopne
inc
(bad)
mov
cld
rol
popf
ds
pop
ret
mov
xlat
test
movs
push
pop
sahf
sub
sub
jmp
dec
mov
aam
stos
mov
sahf
aas
mov
sbb
sbb
cld
cmps
inc
in
rcl
test
outs
pop
cdq
pop
adc
add
ds
and
inc
mov
outs
push
test
(bad)
ror
mov
adc
mov
add
jl
push
aam
sub
xchg
pop
cs
push
ret
mov
popf
call
inc
lock
dec
mov
mov
popa
or
xlat
inc
das
ja
jl
dec
mov
and
sbb
data16
xor
add
jnp
imul
jg
nop
jb
jo
retf
jp
popa
cdq
sub
loope
ins
shl
xor
dec
test
mov
cwde
jb
fcmovb
inc
mov
sbb
jmp
std
ins
out
cmc
jmp
mov
test
sti
aaa
cwde
inc
mov
or
rcr
xor
bound
jge
fisttp
sub
xchg
(bad)
fwait
pop
int
pop
adc
daa
and
cdq
mov
or
out
fs
mov
(bad)
push
test
fidivr
pop
scas
into
repz
ins
outs
push
mov
scas
in
fistp
adc
add
jno
cmp
push
add
leave
mov
jns
sub
sar
loope
fmul
add
add
ss
repnz
dec
cld
mov
xchg
jg
call
(bad)
cmp
(bad)
fimul
aam
sbb
xchg
xor
stc
sbb
xchg
dec
(bad)
sub
mov
test
les
bound
sub
je
mov
int3
popf
je
pop
lds
sub
in
movs
div
mov
out
std
jns
stos
mov
in
jo
loope
cmp
int3
pop
xor
jmp
loopne
mov
sub
aam
ret
test
mul
in
xchg
retf
and
shl
test
aas
dec
rol
hlt
jecxz
mov
shl
fiadd
sar
(bad)
repnz
push
mov
in
jne
fidiv
inc
cs
shr
retf
dec
push
or
push
or
push
or
mov
mov
pop
jno
out
adc
cmp
xor
and
or
pop
jmp
push
lods
sbb
adc
pop
jb
out
js
out
add
jmp
mov
fwait
xchg
popf
and
stc
mov
(bad)
jge
bound
xlat
mov
sbb
test
scas
in
add
xchg
or
jb
dec
scas
int
stc
dec
or
outs
movs
lock
in
cmp
mov
int3
mov
(bad)
je
in
sbb
inc
call
jge
and
popa
lahf
xor
fmul
les
(bad)
clc
repz
pop
(bad)
in
mov
repz
(bad)
sub
(bad)
ins
jae
nop
or
(bad)
je
mov
(bad)
jne
pop
sbb
jb
sub
pusha
inc
adc
and
js
add
fcomp
icebp
pushf
jecxz
fidivr
mov
cmp
sbb
inc
call
push
jecxz
mov
inc
xor
inc
fiadd
sub
movs
je
mov
or
push
push
mov
and
std
xchg
iret
inc
mov
(bad)
inc
cld
sbb
sbb
mov
arpl
into
int3
mov
jns
stos
int
push
mov
jae
adc
(bad)
pop
ret
dec
sub
sub
rcr
in
test
jns
push
push
les
mov
pop
ss
push
dec
cli
adc
(bad)
outs
inc
cmps
push
(bad)
not
sub
mov
imul
cmp
jle
std
inc
jle
sub
xchg
outs
inc
or
aaa
movs
cmc
pop
sub
xchg
xor
shl
mov
fxam
or
sbb
xlat
(bad)
clc
adc
xor
or
and
(bad)
inc
cwde
jnp
(bad)
cmps
mov
retf
jp
pop
mov
fist
inc
sbb
out
add
ds
ret
adc
inc
or
into
in
loop
imul
add
pop
inc
mov
out
inc
pop
ficom
push
xchg
ficom
and
lahf
jo
enter
pop
call
jae
fwait
mov
push
push
cmp
push
pusha
xor
je
popf
mov
sbb
jnp
mov
adc
je
inc
sbb
out
pop
xchg
in
js
int3
lock
pop
inc
xchg
(bad)
fisub
inc
loope
sub
dec
jle
jl
jbe
cmp
in
loope
cdq
sub
jne
push
das
aaa
stos
sub
call
mov
xchg
jl
rcl
jb
mov
adc
sub
cmp
cli
rcl
add
clc
inc
mov
sbb
das
leave
ficomp
nop
cmps
addr16
fist
imul
or
pop
mov
ja
and
(bad)
xchg
fidiv
gs
hlt
icebp
shl
push
jecxz
cmc
cs
or
stos
mov
lds
jecxz
idiv
out
push
push
jne
cmp
xor
cli
fldenv
inc
ins
in
and
aaa
inc
pop
cmp
mov
and
pusha
aas
out
scas
cld
adc
std
dec
(bad)
sbb
test
shl
stos
jp
push
stc
mov
aam
inc
or
int
cmp
repnz
push
xchg
iret
or
pop
xchg
sub
nop
(bad)
mov
push
daa
mov
in
mov
imul
in
pushf
sub
add
sub
xchg
fmul
cmp
and
fdivr
xchg
fisttp
sahf
cwde
arpl
(bad)
in
scas
inc
sar
or
lds
jns
pushf
xchg
out
inc
test
outs
(bad)
mov
push
pop
neg
xor
mov
xchg
(bad)
leave
add
arpl
and
int3
jg
loop
jo
jb
ins
mov
mov
sahf
push
xchg
xchg
add
cli
jo
dec
std
ds
shl
and
dec
jg
jns
xchg
out
test
and
rcl
mov
stc
daa
loope
test
aam
jne
sbb
stc
push
adc
and
(bad)
out
pop
jecxz
fdiv
sbb
mov
xchg
jle
pop
xor
inc
mov
loope
repnz
cmc
jp
sbb
int
jg
fild
mov
repnz
and
pop
pop
aam
push
jae
jp
push
aam
push
add
repz
enter
add
adc
jns
ds
aad
vmread
mov
cmp
sub
inc
pop
cmps
sbb
mov
leave
dec
cld
ja
inc
out
cmps
or
mov
(bad)
sub
dec
retf
pusha
mov
sub
mov
dec
inc
fdiv
pushf
jge
xor
mov
pop
pushf
stos
xchg
popa
jmp
out
mov
test
sbb
push
xchg
inc
test
lea
ficomp
mov
cmp
out
xor
fs
pushf
and
mov
add
(bad)
jo
xchg
das
lea
inc
mov
imul
mov
xor
sbb
jb
mov
or
mov
mov
fisubr
into
outs
push
mov
mov
mov
and
mov
nop
popf
adc
push
in
cli
mov
jo
and
cli
and
fs
sahf
int
es
or
out
aaa
sub
mov
jmp
test
in
inc
repnz
jp
cmp
ins
ins
repz
push
mov
jmp
mov
inc
sub
pop
dec
into
out
sub
aas
fwait
ss
retf
(bad)
ror
mov
jne
je
or
ret
fwait
scas
imul
imul
xchg
mov
mov
jns
cld
xor
mov
push
jl
cli
sti
add
dec
mov
fs
popa
inc
adc
push
mov
(bad)
repnz
pop
repnz
(bad)
fild
xor
or
setno
stos
enter
push
scas
outs
push
fiadd
mov
inc
es
ja
out
or
icebp
sahf
push
or
jns
push
repnz
in
pop
int3
fistp
jl
loop
or
ins
mov
into
dec
pusha
xor
xlat
cli
mov
add
fs
adc
dec
daa
adc
add
dec
(bad)
pop
jl
movs
mov
out
lods
xchg
cmp
retf
test
sti
dec
push
stos
inc
lock
xchg
jns
fst
xor
jge
sub
loop
and
lock
jge
fld
dec
test
sbb
int
pop
sub
and
mov
rcr
jmp
imul
push
mov
lods
bound
mov
cmps
jl
jns
(bad)
xchg
data16
int
inc
xor
scas
out
dec
xor
pop
retf
movs
mov
cdq
pop
xchg
stos
and
das
cmp
jnp
xchg
and
xor
mov
jo
aad
retf
add
xor
and
sbb
(bad)
mov
loopne
and
and
sub
xchg
test
mov
sub
cmp
enter
cli
pop
rcr
adc
mov
adc
mov
adc
adc
jno
cmps
xchg
mov
(bad)
int3
sbb
or
fmul
dec
je
or
dec
pushf
scas
xor
xor
fiadd
add
jl
lea
xor
stc
xchg
xor
push
mov
mov
pop
mov
add
mov
aaa
adc
push
xor
inc
test
out
(bad)
mov
mov
dec
or
push
ja
pop
and
es
jp
and
bound
inc
mov
pushf
dec
mov
fwait
scas
cmps
or
sub
mov
adc
inc
jb
div
loopne
arpl
out
test
mov
stos
cli
loop
dec
fcomi
cmps
and
inc
xchg
mov
stos
les
add
push
push
jnp
adc
sti
fcom
add
jno
popf
sub
adc
icebp
or
or
ss
xchg
in
inc
les
sbb
sub
sub
adc
(bad)
clc
mov
jle
int
sbb
daa
sbb
pop
movs
mov
sub
fldcw
hlt
loop
push
loope
bound
test
ja
adc
cmp
retf
test
xchg
std
mov
idiv
push
stc
cmps
retf
stos
mov
lds
test
inc
ror
imul
inc
jl
cmp
aas
push
cld
mov
sbb
add
xchg
daa
inc
jne
ins
loope
cli
adc
(bad)
leave
mov
fistp
mov
or
pop
jae
dec
int
mov
or
pop
mov
mul
jle
xchg
push
sti
dec
cli
sbb
movs
pop
inc
add
test
sub
cmp
mov
push
out
loopne
xchg
inc
jge
in
mov
scas
cmp
cmp
add
outs
bound
lods
loopne
test
in
xlat
das
jmp
mov
or
xlat
mov
in
jno
pop
imul
mov
xor
push
ja
sub
xchg
loop
push
adc
dec
dec
outs
adc
jae
push
fs
in
adc
in
or
rsm
jno
(bad)
iret
jnp
xor
cmp
adc
pop
pop
cmp
pop
daa
fcom
ins
dec
paddusb
xor
fnsave
inc
sbb
test
add
jl
daa
mov
cmps
mov
sub
gs
jnp
dec
mov
xchg
fdivr
jns
pop
cmc
mov
mov
fwait
cmp
jno
les
xchg
fnstsw
mov
and
cmp
xchg
in
dec
outs
xor
add
fild
(bad)
xor
jmp
push
fiadd
jg
adc
xor
test
pushf
stc
cmp
push
ins
adc
mov
or
test
jecxz
jmp
aas
(bad)
dec
xchg
bnd
jmp
push
dec
add
out
xlat
push
xchg
shl
mov
and
and
and
(bad)
shr
movs
dec
mov
mov
ret
or
pop
xlat
(bad)
iret
xor
adc
xor
and
mov
in
jns
into
in
lahf
repz
pop
mov
test
sub
and
dec
xor
add
cmp
clc
retf
dec
aam
lock
das
fld
cmc
adc
(bad)
xor
jle
into
fcomp
into
or
aad
push
jns
mov
jge
jge
push
pop
mov
jno
jnp
out
cmp
pop
mov
xchg
jnp
sbb
(bad)
jns
pop
stos
out
loop
mov
push
mov
pop
ins
mov
stos
mov
inc
xor
mov
pop
xlat
popa
xchg
jmp
xchg
into
sub
cmps
pop
repnz
sar
mov
scas
clc
(bad)
fcomp
fbstp
inc
(bad)
cmps
mov
cld
nop
(bad)
ins
push
clc
push
ins
or
retf
sbb
or
shr
stos
ja
out
fldenv
sub
sbb
rol
jmp
cli
add
aas
push
or
repz
or
sub
mov
test
(bad)
je
in
jmp
push
inc
xor
sub
mov
mov
adc
ss
mov
xor
(bad)
repz
fs
mov
inc
lds
xchg
cli
les
aas
inc
call
stos
aad
daa
loopne
and
dec
ins
adc
shl
not
stos
lock
daa
sbb
mov
sbb
push
dec
and
add
or
mov
test
mov
dec
loope
sbb
(bad)
push
jg
ja
pop
fnstsw
xlat
ins
xchg
clc
cmps
jmp
pop
sti
stc
fdiv
push
inc
lods
and
xor
xor
mov
fbstp
mul
popf
or
enter
jge
fmul
sbb
inc
sbb
mov
aaa
jge
or
or
push
fstp
inc
pusha
or
pushf
sub
pop
push
and
mov
call
xchg
mov
(bad)
sbb
push
or
pop
std
or
out
dec
scas
out
fld
stc
movs
ficom
inc
(bad)
cwde
je
mov
sbb
mov
lahf
pop
push
outs
push
(bad)
xor
mov
adc
pop
fs
loope
jecxz
ror
mov
jge
mov
mov
dec
(bad)
test
add
sar
adc
(bad)
fld
jge
mov
cli
xor
sbb
mov
cmp
sar
jge
mov
ret
jp
mov
jl
push
push
sbb
test
pop
adc
dec
jno
rsm
test
mov
pushf
pop
sbb
push
jno
xchg
jnp
jb
in
dec
xchg
xlat
ss
enter
cmp
xchg
mov
pushf
ja
out
dec
and
push
loope
sbb
js
mov
mov
pop
or
adc
jecxz
and
add
sub
xor
inc
aaa
and
sbb
ja
push
pop
cli
jle
inc
scas
pop
dec
(bad)
or
leave
jmp
test
ss
idiv
lahf
cmp
sbb
sub
pop
dec
rol
pop
stos
mov
out
popa
clc
shl
inc
push
xchg
outs
sub
jae
mov
add
push
fdivr
pusha
and
adc
push
mov
in
scas
mov
jnp
mov
or
adc
div
enter
movs
enter
adc
fisttp
xchg
jp
add
enter
es
aas
xor
xor
mov
pop
ret
ins
ss
xor
jge
cli
jp
out
scas
push
jno
pushf
and
add
cs
cmp
f2xm1
cs
jnp
push
push
mov
or
outs
or
repnz
loope
fiadd
or
ret
push
cld
jl
sbb
jo
dec
cmps
cmp
gs
loop
xor
lods
pop
das
inc
dec
mov
inc
in
jge
dec
add
out
shl
int
mov
cmovl
ins
adc
ds
mov
lahf
adc
or
fwait
loop
stos
adc
jle
cld
fadd
std
adc
mov
pushf
sub
pushf
mov
aad
mov
add
mov
cld
outs
sbb
sahf
daa
into
fldenv
and
mov
sbb
adc
mov
in
jbe
(bad)
push
push
pop
mov
mov
jmp
sub
jb
shl
(bad)
push
(bad)
fdivr
jp
inc
sbb
shl
jae
(bad)
mov
clc
mov
push
mov
int
dec
and
dec
xchg
add
cmps
mov
push
push
cmp
sub
or
sub
xor
xchg
fsub
mov
lods
movs
mov
inc
xadd
jl
loop
imul
pop
cmp
xchg
mov
or
xchg
pushf
pop
sti
inc
inc
or
outs
dec
dec
inc
cdq
test
dec
mov
sub
(bad)
in
push
jae
sub
jns
js
cli
xchg
jb
std
jae
pop
cmps
addr16
push
mov
sub
cli
mov
or
stos
(bad)
push
pop
cmps
pop
mov
fnstcw
push
jne
mov
jecxz
or
dec
pop
sbb
sub
imul
sub
movs
lods
inc
call
repz
mov
pop
pop
outs
add
pusha
pop
je
test
push
retf
out
stos
jmp
es
xchg
scas
dec
mov
(bad)
xchg
dec
call
mov
ror
mov
jnp
pop
or
or
jmp
out
push
fnstsw
sub
xchg
dec
xor
cld
ins
lea
div
movs
or
aad
mov
and
push
push
sub
inc
mov
jo
jnp
sar
mov
ret
clc
lahf
test
shr
leave
sbb
loop
(bad)
jae
mov
mov
rcl
int3
pushf
into
cwde
push
cli
ds
test
inc
rol
fucomi
adc
sub
outs
sub
int
test
xchg
xchg
std
jp
sbb
enter
jl
mov
(bad)
jp
(bad)
(bad)
rol
test
add
sbb
sub
push
ror
fwait
sub
push
mov
push
sbb
pop
xchg
add
mov
mov
cmp
inc
imul
mov
lock
imul
fbld
and
pushf
fdiv
or
push
adc
imul
jle
mov
scas
arpl
cmp
push
inc
cwde
jne
mov
mov
jo
lods
dec
inc
loop
sbb
jb
push
pop
clc
test
sub
(bad)
and
stos
outs
scas
jl
pop
adc
xor
aas
or
sub
xlat
imul
mov
xor
inc
test
pop
popa
out
jnp
add
(bad)
and
fnstsw
mov
jb
inc
mov
sub
push
xchg
xchg
inc
xor
mov
adc
or
daa
sti
add
or
jl
jmp
mov
aas
push
jl
cmc
ja
mov
loopne
xrelease
in
in
jl
sub
jns
ds
fwait
add
mov
adc
rcr
and
jp
cmps
add
sub
nop
test
adc
add
add
fimul
(bad)
cmps
aad
ins
inc
or
aas
and
retf
push
outs
xor
jbe
pop
fisubr
cmc
pushf
cmp
pop
cmp
push
ins
fwait
pop
xor
jg
aaa
xchg
fnstsw
jno
push
dec
xor
mov
sbb
pop
rcr
dec
mov
hlt
int3
inc
or
xor
dec
sub
xlat
sbb
cdq
jl
pop
(bad)
sub
(bad)
inc
not
sbb
xchg
dec
mov
pop
bound
inc
pop
test
inc
jg
std
pusha
out
inc
mov
shl
xchg
aas
repz
pop
popa
xchg
cs
inc
out
outs
fnstcw
aad
pop
jge
cmp
pop
dec
inc
or
xchg
lods
push
pop
mov
fwait
std
mov
mov
or
mov
mov
in
(bad)
mov
xor
repnz
inc
mov
mov
jmp
and
xor
jae
jo
inc
fild
mov
jge
call
pop
fstp
cmp
or
or
inc
test
mov
sahf
add
push
mov
adc
jp
pop
cmp
jno
cmp
lods
sar
test
fisub
adc
imul
imul
fcmovnbe
xor
cmp
xor
repz
pop
(bad)
iret
push
push
ret
cmc
loop
ret
or
pop
loopne
lock
push
lods
jl
and
sub
sub
xchg
add
cmp
mov
mov
iret
sbb
xor
das
mov
stos
fisubr
push
imul
in
cmp
jb
and
and
dec
jecxz
jecxz
fdivp
jbe
icebp
pop
add
lds
sbb
adc
test
fwait
stc
or
mov
or
test
jg
adc
mov
inc
into
js
mov
jecxz
xchg
fst
fadd
sub
out
mov
call
cmp
push
inc
sti
push
sub
(bad)
mov
add
push
retf
sbb
loopne
ror
lock
dec
shl
inc
cli
xchg
inc
mov
fsubr
add
inc
daa
mov
daa
mov
stos
mov
popf
fmul
or
cmp
xchg
cs
xor
cmp
lea
mov
js
inc
cmp
call
mov
retf
xor
cmp
cli
add
into
push
aam
sahf
rcr
dec
push
and
mov
leave
leave
mov
outs
sub
(bad)
mul
aam
sbb
sti
sub
xor
xchg
sub
loopne
or
and
cmp
inc
aas
dec
lods
xor
or
dec
mov
dec
leave
sbb
inc
and
inc
imul
loopne
xor
xchg
cmps
inc
push
call
arpl
dec
loope
sub
aas
sbb
loop
xchg
pop
test
repnz
add
retf
mov
inc
push
or
fsub
sbb
aam
pop
mov
xor
std
cmps
(bad)
sti
int
ss
or
dec
inc
jg
ret
ds
fneni(8087
sar
mov
inc
mov
das
ret
xor
int3
inc
dec
and
push
and
test
xchg
mov
outs
test
and
push
ja
xchg
pusha
fcmovb
xor
iret
dec
iret
test
mov
dec
test
mov
pop
push
aaa
hlt
(bad)
test
imul
int
rol
jne
and
xor
pusha
push
xchg
stos
cmc
std
iret
xlat
(bad)
sub
stos
lods
mov
je
inc
cld
xchg
repnz
push
mov
imul
adc
or
mov
pop
ja
stc
scas
push
mov
loopne
cdq
mov
xchg
loopne
pushf
or
mov
(bad)
dec
pop
jge
mov
sbb
push
fmul
adc
mov
pop
push
pop
les
jmp
mov
(bad)
jo
test
or
inc
mov
cmp
mov
sub
push
pop
push
pushf
pop
out
or
jb
and
stos
(bad)
jmp
cs
push
(bad)
jmp
ret
(bad)
dec
imul
nop
push
mov
adc
inc
(bad)
call
ret
adc
xchg
mov
stos
dec
jno
inc
dec
mov
cmp
dec
hlt
dec
daa
test
hlt
ins
jge
out
fist
outs
sub
add
mov
test
leave
(bad)
aad
lds
ss
mov
sahf
aas
mov
cli
add
cmp
xchg
in
pusha
jl
into
dec
and
out
loop
rol
test
das
add
cdq
icebp
outs
mov
push
sti
pop
lock
push
je
jb
hlt
jns
(bad)
mov
pop
aam
sbb
out
and
lock
call
ret
loopne
stc
push
lock
xchg
pop
pop
push
add
inc
pop
adc
arpl
mov
lea
inc
push
fisub
xchg
je
and
pushf
jmp
mov
xor
fbld
js
dec
sub
int3
mov
jecxz
lods
and
jg
ret
pop
and
sar
int
add
or
nop
pop
cmp
dec
mov
rcl
sbb
push
push
popf
pushf
fs
rcr
retf
sbb
add
or
jno
mov
sub
pop
ins
popa
pop
cdq
push
stos
cmps
add
mov
ret
nop
dec
and
push
ret
lea
jg
jecxz
stos
retf
xchg
mov
push
and
mov
jbe
jp
push
inc
std
in
cmc
nop
cmp
or
repnz
xchg
jns
test
xor
sbb
xor
jecxz
sbb
xchg
aam
stos
lods
mov
jb
inc
xor
ret
jmp
test
aad
sbb
dec
jmp
mov
(bad)
test
ss
push
aam
jae
aam
out
rol
mov
dec
lds
xor
sbb
inc
mov
mov
pop
(bad)
outs
or
cmp
jno
shl
daa
dec
jb
leave
xchg
lods
adc
mov
mov
and
jge
xlat
sub
scas
xchg
inc
sbb
adc
mov
ret
push
das
dec
xor
fstp
scas
cmp
push
jmp
loop
sbb
ja
add
cmps
add
int3
jecxz
fmul
push
inc
lahf
pop
daa
sbb
fs
pop
add
pop
xor
push
and
cmp
jno
stos
pop
xchg
mov
fsubrp
out
cmp
sub
into
sub
or
(bad)
cmps
jne
pop
push
ficomp
sbb
je
mov
test
and
push
adc
xchg
sti
call
xlat
sub
jmp
lea
loopne
xchg
push
call
xlat
and
push
lahf
pushf
pusha
lahf
aam
mov
pop
fs
je
mov
pop
jae
jb
stos
jns
mov
sub
xchg
icebp
rcr
loop
dec
jno
mov
mov
mov
test
aam
and
xor
cmp
test
sbb
scas
mov
mov
es
outs
mov
in
scas
mov
out
mov
and
mov
cmp
push
inc
std
je
loop
std
jmp
lahf
hlt
bound
repz
imul
inc
cmp
jne
jns
or
idiv
sbb
xor
fisub
push
rcr
fsub
mov
dec
jl
jp
shr
mov
and
inc
adc
mov
lea
adc
lods
cs
xchg
int3
loope
gs
shl
mov
retf
loopne
lock
jp
and
and
dec
out
and
fimul
stc
fsub
sbb
std
(bad)
ja
and
mov
aas
aam
div
adc
sbb
jno
sub
sbb
lea
dec
fwait
jg
xchg
lds
dec
dec
(bad)
push
or
pop
sub
push
xchg
out
push
mov
lea
jb
or
adc
mov
pop
inc
ins
test
jae
inc
ja
or
mov
mov
ins
pop
pop
lods
xchg
adc
fsub
cmps
scas
ss
pop
call
pop
mov
push
iret
pop
fild
jmp
pop
push
mov
cmps
pop
jno
jl
lea
lea
test
mov
stc
sysexit
daa
es
pop
xchg
call
ins
shr
hlt
adc
inc
fild
es
test
cmps
xchg
push
mov
xchg
xchg
sbb
jns
ja
popa
or
xor
shl
outs
mov
and
add
rol
jl
in
out
mov
mov
int3
je
arpl
sbb
(bad)
sbb
aaa
daa
cmp
sbb
scas
ds
jno
xchg
js
push
and
xor
fidiv
push
inc
dec
enter
fiadd
js
popf
je
jecxz
pop
fidivr
cld
xlat
outs
cmp
inc
cmps
sub
je
lock
or
mov
push
lods
mov
repz
dec
push
movs
sbb
pop
in
pop
sti
out
mov
jbe
in
or
jmp
cmp
fmul
sbb
sbb
ins
jmp
dec
xor
sbb
test
mov
sub
test
rcl
out
xchg
sbb
test
das
xchg
lea
add
sti
ret
adc
pop
lea
and
mov
lds
xchg
add
jg
jae
(bad)
xor
add
lock
push
mov
xchg
(bad)
jb
inc
retf
iret
jmp
cmp
pop
cwde
mov
fiadd
or
inc
and
sub
js
mov
mov
adc
lds
fdivp
or
mov
(bad)
cmc
aas
ror
pushf
fs
cld
mov
cmps
pushf
and
shr
sub
and
frstor
into
xchg
aam
inc
ss
lods
pop
push
push
mov
sbb
pop
fsub
test
inc
sbb
scas
pop
int3
dec
imul
sub
loope
jmp
stos
ret
test
js
sbb
fld
in
(bad)
jle
sub
call
cmp
push
sub
add
dec
imul
push
in
cdq
jecxz
sub
inc
ins
mov
and
push
(bad)
(bad)
movs
int3
(bad)
mov
enter
(bad)
pop
loop
or
add
mov
bound
mov
retf
push
and
fdivr
cmp
fild
scas
(bad)
lmsw
jbe
loop
gs
data16
mov
in
or
dec
xchg
xchg
mov
scas
cmps
fs
in
hlt
dec
mov
push
xchg
mov
fwait
aam
or
es
fmul
cmps
pop
ret
mov
add
or
xchg
fs
fwait
cmp
mov
adc
in
es
add
sbb
and
pop
(bad)
in
xor
mov
movhps
inc
adc
int3
push
push
add
push
add
push
mov
call
cmps
xchg
in
cmp
movs
and
xchg
mov
ror
xor
sbb
paddsb
out
mov
stos
or
dec
test
fdiv
jno
pop
ret
shl
adc
pop
mov
mov
jg
sahf
and
ror
dec
(bad)
adc
leave
out
mov
sbb
stc
mov
fdiv
mov
jl
push
adc
jmp
dec
in
into
mov
je
fild
inc
push
lock
inc
retf
pop
and
xchg
jmp
out
adc
retf
lods
not
jmp
popf
add
imul
jb
(bad)
pop
xlat
scas
int
push
int
ret
fmul
jecxz
fdivr
or
addr16
mov
sub
test
push
gs
push
mov
jne
lock
outs
pop
cmp
out
icebp
out
mov
mov
or
jo
fsub
xor
jg
(bad)
inc
sbb
mov
fsub
push
xchg
imul
ds
stos
xor
sub
aam
push
sub
pop
icebp
jne
add
call
jp
in
push
xor
mov
jmp
pop
mov
out
dec
aaa
div
mov
cmp
fwait
add
(bad)
out
add
xor
and
xor
push
mov
into
je
mov
sbb
fst
sbb
loope
inc
sti
xor
push
ror
sub
adc
mov
dec
pop
in
sar
mov
jae
ror
xor
xor
and
gs
je
mov
and
mov
sub
scas
movs
add
or
(bad)
mov
and
and
cmp
jo
mov
cmc
jbe
pop
scas
pop
dec
inc
jle
sbb
jl
mov
ss
test
(bad)
xchg
shl
pushf
sbb
rcl
jecxz
mov
(bad)
push
sahf
test
push
push
in
push
push
(bad)
fwait
adc
mov
inc
aaa
aas
repnz
daa
mov
ret
rcl
push
lahf
mov
pop
mov
js
add
mov
imul
scas
mov
sub
jmp
xor
neg
pusha
xchg
iret
jb
sub
lock
sub
sub
mov
jnp
retf
shl
add
and
(bad)
add
cmp
into
loopne
(bad)
or
sbb
shr
dec
rol
inc
or
mov
pusha
in
out
jecxz
push
cli
mov
jmp
cmp
jbe
pop
bound
ret
cmp
mov
test
adc
jb
mov
sar
jle
popf
mov
or
les
dec
mov
adc
(bad)
stos
adc
jae
cmp
add
ret
mov
sub
(bad)
jge
enter
mov
out
jg
loope
push
xor
pop
(bad)
push
sub
scas
jge
mov
xor
jmp
jge
and
(bad)
jnp
lds
xor
cmp
push
jne
fs
push
mov
inc
jne
test
outs
scas
jb
dec
es
std
dec
and
mov
into
iret
jg
jae
out
aaa
popf
mov
jge
retf
call
mov
pop
cmp
fs
mov
retf
cmp
sbb
dec
push
cmp
js
jle
cmps
in
pop
pushf
test
pop
adc
mov
arpl
jle
jmp
adc
popa
jl
test
stc
mov
fadd
jne
jne
xor
retf
mov
or
dec
mov
sub
push
dec
popf
fwait
jae
cli
(bad)
xlat
shl
dec
test
scas
mov
hlt
ret
ret
in
mov
clc
cmp
ss
push
xor
add
aaa
mov
or
jae
sti
push
and
jbe
lods
out
js
sti
pop
ss
push
sub
loope
sbb
or
fcomip
ret
add
outs
cld
xchg
jecxz
mov
adc
xchg
jo
or
cmp
add
sbb
inc
sbb
pop
pushf
lods
push
cmp
jl
xor
xchg
dec
cmps
cmc
jne
mov
xchg
and
sbb
std
leave
out
xor
push
pop
add
jle
icebp
inc
cmp
jns
pop
imul
dec
(bad)
call
dec
push
xlat
dec
and
sti
frstor
adc
outs
call
mov
scas
ds
mov
(bad)
imul
arpl
stc
and
add
(bad)
repnz
int3
mov
(bad)
cli
lock
or
aam
scas
cmp
sub
xchg
popa
fcom
jne
xchg
rcl
jp
jae
dec
inc
dec
stos
xlat
lea
xchg
adc
into
jae
jae
inc
xchg
loope
add
inc
das
fdiv
dec
xchg
mov
push
xchg
jp
sbb
stc
fistp
cmps
jmp
cmp
inc
fsubr
mov
repz
sub
sbb
jo
pop
xchg
iret
cmp
stos
nop
mov
push
pusha
loopne
(bad)
and
or
neg
pop
mov
mov
push
or
xor
arpl
sbb
movs
mov
hlt
dec
rcl
dec
test
je
inc
mov
outs
aad
(bad)
push
or
xor
fadd
push
push
xor
add
dec
or
retf
xor
xor
push
mov
pusha
test
es
xlat
ret
sub
push
or
(bad)
jae
int
sbb
dec
mov
and
xor
cs
movs
fisub
jg
data16
(bad)
xchg
xchg
outs
lods
mov
jl
das
jmp
std
or
jmp
adc
int3
pusha
cli
mov
test
js
imul
cld
push
pop
rcr
or
rcr
sub
add
xor
push
jne
enter
cld
push
cmp
test
shl
cmp
hlt
retf
idiv
imul
inc
bound
pop
push
out
pusha
es
pop
cli
shr
je
fdiv
test
mov
cwde
cld
(bad)
lds
mov
rol
imul
call
and
mov
cmp
popf
rcl
stos
dec
sbb
sbb
cmps
mov
test
pop
iret
xchg
(bad)
mov
cmp
sub
call
or
or
or
sbb
lea
fs
push
cwde
enter
add
ror
hlt
retf
int
pop
std
in
test
xor
and
movs
push
xchg
sti
xor
pop
sub
out
fld
pusha
aaa
pop
fs
dec
and
enter
inc
adc
ret
and
push
sar
shl
jne
fwait
int3
gs
push
add
xchg
aas
jecxz
mov
mov
out
call
aaa
add
jp
mov
mov
mov
sub
test
cmp
cld
mov
push
push
xchg
js
dec
loope
or
sbb
adc
ficom
cmps
fnstcw
stc
fwait
ins
(bad)
out
sbb
pop
ins
mov
add
cdq
mov
ins
ins
imul
hlt
xchg
iret
int
mov
push
mov
fistp
mov
pop
xor
imul
jo
daa
pop
leave
aam
sub
jmp
mov
clc
in
xchg
ss
test
ret
icebp
aad
sbb
pop
jg
icebp
cdq
jp
retf
push
jae
dec
sub
push
jecxz
inc
pop
hlt
jge
cli
inc
fwait
test
mov
out
sar
mov
xor
cmps
cs
shr
adc
fmul
sahf
dec
sub
int
inc
dec
push
cmp
aad
pop
int3
das
enter
or
sub
add
add
jmp
or
bnd
into
jp
inc
cdq
mov
mov
test
in
pop
lahf
cmp
pusha
pusha
call
gs
rcr
push
sbb
scas
repnz
inc
into
and
cmp
dec
xchg
jbe
retf
mov
sbb
adc
js
das
xor
sub
fistp
int3
adc
clc
sbb
pop
(bad)
lods
xchg
mov
xchg
in
(bad)
(bad)
fucomip
(bad)
cld
push
gs
adc
push
in
adc
sub
pop
stos
push
cli
loope
jmp
push
mov
pushf
test
cmp
push
xchg
cmp
inc
pusha
(bad)
jbe
in
lock
lahf
xchg
push
jo
mov
push
mov
neg
push
lods
mov
push
mov
cmc
test
push
cld
es
or
push
std
jle
scas
pop
aam
in
push
out
test
pusha
imul
and
js
mov
(bad)
in
imul
pop
rcr
or
ss
dec
mov
and
and
jbe
dec
add
clc
mov
xchg
cmp
mov
les
ds
and
out
add
add
add
dec
leave
sbb
sub
(bad)
leave
out
dec
popf
inc
inc
adc
sbb
scas
outs
sahf
mov
int3
sub
pop
pusha
in
mov
mov
out
sub
xor
add
mov
outs
ss
shl
push
jne
inc
out
cmps
popa
fs
jno
sbb
inc
mov
sbb
leave
jbe
scas
sbb
or
rol
movntps
jns
cld
xchg
inc
repz
pop
cdq
movs
add
mov
imul
xlat
std
mov
(bad)
loope
ins
xchg
xor
push
fcomp
jbe
sbb
dec
call
push
xchg
mov
std
clc
popa
shufps
mov
in
jbe
inc
fdiv
add
add
pop
ret
out
adc
sbb
or
push
in
jp
lds
inc
mov
stc
cmp
(bad)
mov
daa
jmp
scas
xor
movs
add
jae
add
ret
out
mov
mov
sub
loope
cld
fs
icebp
(bad)
aas
in
icebp
inc
ss
mov
xchg
jecxz
sbb
out
sub
(bad)
popf
(bad)
sbb
jb
and
ret
sbb
jl
leave
cmp
stos
in
push
cld
add
sub
fwait
js
or
mov
xor
fptan
dec
push
sub
mov
dec
out
std
adc
(bad)
scas
mov
lods
mov
xchg
xchg
sub
adc
mov
adc
cmps
cmc
gs
lock
or
gs
test
aad
xor
inc
pop
cmps
push
ja
cwde
fsubr
and
movs
push
es
pop
inc
call
scas
loope
pop
jg
sub
jnp
jp
jnp
mov
mov
and
sahf
lahf
xchg
rcl
dec
test
pop
xchg
sub
mov
pop
lods
mov
mov
mov
adc
and
jb
xchg
mov
sub
pop
jecxz
adc
adc
cmps
sub
test
jo
(bad)
mov
xchg
adc
cld
mov
xor
and
pop
pop
aas
add
push
rol
inc
repz
out
int
loope
cmps
and
pop
mov
fistp
(bad)
dec
cdq
nop
rol
je
call
pop
push
xchg
and
sub
popa
mov
sub
out
loop
in
retf
scas
mov
mul
inc
in
cmp
inc
pusha
xchg
ins
int
call
and
mov
js
mov
in
push
dec
or
popa
shl
js
rol
xchg
push
call
add
stc
addr16
push
xchg
jmp
cdq
push
mov
pusha
xrelease
pop
(bad)
lock
sub
enter
xchg
movs
sbb
scas
das
jmp
fidiv
jle
pop
adc
aad
iret
pop
dec
rcl
(bad)
icebp
imul
arpl
jnp
inc
into
xlat
push
xchg
sbb
jmp
test
sbb
jecxz
(bad)
push
sub
cmp
push
cmc
ss
xchg
mov
ss
(bad)
call
div
sbb
push
inc
pusha
adc
cmps
xchg
imul
and
(bad)
cmps
xchg
xor
cmp
in
dec
dec
rcr
sub
test
xchg
shl
rol
jns
mov
js
pop
arpl
in
fldenv
icebp
or
stc
and
jge
xor
pop
jmp
cmps
cld
push
pop
mov
or
xchg
or
xor
jne
jbe
sbb
aas
vsqrtpd
(bad)
call
aaa
push
push
add
shr
mov
in
movs
mov
into
int
(bad)
xchg
pushf
adc
(bad)
jle
das
in
jns
mov
repnz
xor
cmp
cmps
aad
inc
push
ds
aaa
xchg
xor
jecxz
xchg
jle
(bad)
dec
and
fmul
inc
xor
pop
push
mov
mov
xchg
ins
rcl
mov
xchg
mov
test
add
data16
mov
(bad)
jne
repnz
push
int3
pop
xchg
cmp
jecxz
adc
or
mov
push
(bad)
xor
mov
or
push
setbe
outs
pop
mov
outs
cmp
repnz
cmp
ror
out
ss
sbb
sbb
cld
sbb
ins
mov
mov
or
cmps
cmp
cmp
jne
xchg
add
inc
rcr
(bad)
jmp
inc
sub
mov
adc
dec
sub
adc
xchg
sub
dec
push
call
xor
idiv
ret
xor
mov
leave
add
mov
jb
or
mov
mov
sti
or
imul
stc
mov
or
push
cs
xor
int3
dec
mov
test
test
std
jecxz
pop
pop
add
sub
mov
sub
test
fmul
enter
cmp
pop
or
jnp
daa
into
xchg
pop
and
and
lods
dec
inc
cdq
mov
add
pop
pusha
cmps
cmp
popa
outs
lock
and
jo
mov
loop
loope
test
shr
mov
xchg
cmp
daa
cmp
aam
jnp
stos
jno
je
push
sbb
data16
out
sti
mov
sbb
js
sbb
jns
scas
xor
and
jmp
xchg
jo
js
cmp
mov
(bad)
lahf
not
xchg
xchg
cmp
jne
push
ins
jmp
cmc
mov
xor
aad
test
stc
sti
mov
xlat
int3
inc
dec
mov
ret
xchg
dec
sub
outs
jnp
dec
iret
sub
push
mov
adc
mov
mov
mov
test
sbb
add
ds
pushf
lahf
mov
mov
adc
lods
call
and
jo
int
xor
in
in
fdiv
mov
fst
add
std
adc
and
jns
mov
fisub
inc
scas
test
xchg
je
xchg
hlt
inc
or
repnz
scas
sub
stos
leave
inc
fcmovnb
pop
jmp
dec
push
inc
push
push
inc
call
pop
push
mov
scas
mov
cmp
shl
mov
lods
in
ins
(bad)
fst
jne
mov
(bad)
ja
iret
outs
retf
imul
mov
xor
hlt
mov
cdq
xchg
push
and
xor
(bad)
aad
adc
shr
cmp
and
push
lock
jnp
std
sbb
in
adc
cmp
sub
jnp
imul
out
rcr
add
js
into
sub
cmp
cli
outs
clc
lea
mov
mov
mov
mov
mov
pop
sbb
xor
pop
or
popa
pushf
outs
mov
push
add
mov
jno
aaa
jmp
rcl
sub
jne
jg
xor
pop
cmp
inc
mov
cli
int3
stos
loopne
ins
adc
pusha
xchg
in
push
and
mov
pop
xchg
sub
clc
jp
adc
jbe
and
or
cmp
add
cmps
and
jecxz
sub
xor
les
out
mov
sbb
inc
xchg
mov
fisubr
dec
repz
push
cmp
aaa
pop
jbe
push
sbb
pop
arpl
cwde
sbb
adc
cli
xor
or
or
pop
xor
movs
xchg
push
int
in
push
sti
or
cmps
xchg
ins
or
push
lods
call
add
push
popa
adc
fnstcw
fdivr
fsubp
dec
jl
push
jge
inc
jo
jo
jmp
jb
out
or
jno
mov
pusha
mov
pop
mov
jg
inc
xlat
inc
or
mov
sub
sub
inc
xchg
jl
and
iret
mov
int3
sbb
or
pop
inc
data16
jb
test
mov
(bad)
hlt
mov
addr16
xor
mov
js
push
lds
test
xor
mov
loopne
test
jmp
adc
clc
sar
xchg
aaa
shl
retf
stos
jle
jg
loopne
xor
lock
aam
inc
mov
mov
into
xor
rcl
pop
pop
dec
or
(bad)
stos
inc
inc
mov
hlt
dec
push
xchg
inc
loop
jb
mov
out
add
fild
shl
js
les
repnz
mov
gs
cmp
lock
push
mov
clc
icebp
pop
dec
push
xchg
push
jns
dec
and
and
ds
push
arpl
bswap
push
xor
mov
scas
push
iret
mov
inc
lock
mov
adc
in
call
fwait
xchg
hlt
scas
imul
add
xor
xchg
add
jb
rol
stos
push
or
sbb
sbb
inc
mov
int3
in
daa
outs
aam
jne
cmps
jg
jne
pop
xchg
test
dec
adc
data16
push
add
es
or
lods
jno
sbb
inc
pop
mov
(bad)
pop
cld
xor
call
mov
push
in
add
stos
mov
pop
ins
jb
jne
mov
(bad)
cli
movs
shl
pop
xchg
in
inc
out
cmp
outs
enter
xchg
jle
adc
es
xchg
int3
cs
stos
jmp
fsubr
imul
mov
sbb
mov
mov
dec
jg
in
bound
cli
sub
xor
push
(bad)
aas
xor
aas
out
sbb
jno
loopne
retf
fldcw
cdq
enter
inc
les
shl
sahf
push
jb
sbb
dec
ds
cdq
mov
dec
rcr
loopne
in
or
clc
fnsave
jne
in
sahf
ds
sub
sub
push
adc
cmps
loopne
fisubr
ss
idiv
sub
aam
add
jl
out
jns
mov
test
and
sbb
mov
sbb
push
sbb
out
jno
out
cld
shrd
ins
cld
rol
sub
dec
bound
out
jecxz
movs
stc
iret
adc
jle
add
mov
aaa
imul
xchg
or
pusha
cli
mov
push
ds
test
sbb
call
xchg
clc
mov
mov
mov
sbb
cs
sub
mov
imul
(bad)
xor
jmp
fld
sbb
repz
repz
jge
sub
cmp
movs
jg
fwait
or
cwde
mov
enter
push
aas
adc
sti
inc
sub
(bad)
repz
shr
inc
add
push
pop
mov
pop
lods
fwait
(bad)
push
mov
dec
dec
or
or
xor
cmp
adc
cmp
mov
out
adc
je
shl
jnp
sbb
add
fwait
clc
or
inc
loop
sub
and
mov
int3
mov
scas
sti
jbe
mov
les
add
mov
ret
jl
mov
push
mov
je
gs
out
cmp
iret
fst
lea
(bad)
sub
jmp
mov
cmp
repnz
mov
cmc
scas
lds
sub
push
xor
(bad)
mov
ficom
cld
jecxz
or
pop
inc
jbe
(bad)
int
aad
(bad)
and
pop
bound
loop
push
and
push
jns
add
sbb
push
inc
mul
adc
dec
fcomip
lods
dec
cwde
inc
mov
xchg
jno
lock
retf
into
les
(bad)
rol
ja
jo
mov
add
push
shr
sbb
call
(bad)
fnsave
fsubr
fnsave
movs
push
icebp
les
cmps
stos
es
push
pushf
enter
cld
and
or
and
fistp
call
adc
xchg
ss
inc
or
inc
pop
push
sub
jecxz
sub
je
add
or
aaa
sub
inc
and
sub
ss
add
clc
xor
arpl
adc
cmp
cwde
fs
dec
aaa
(bad)
xchg
out
adc
dec
sub
and
push
xchg
mov
fmul
mov
push
sti
and
jae
imul
mov
mov
xchg
sbb
or
in
sbb
push
and
xrelease
dec
test
sub
stos
cmp
mov
pop
xor
imul
inc
mov
iret
jp
mov
xchg
js
and
push
or
stc
xor
sub
xchg
div
lds
stc
cmps
xlat
or
mov
leave
mov
(bad)
addr16
sub
inc
push
xchg
mov
inc
and
shl
and
add
lds
icebp
or
es
push
or
push
mov
out
les
repz
and
clc
imul
stos
into
in
jle
fistp
das
cmp
aas
movs
xchg
xchg
cmps
mov
popa
fptan
add
fmul
mov
mov
clc
call
xlat
mov
icebp
push
outs
push
or
not
push
sbb
inc
mov
sbb
outs
cmps
imul
sub
fadd
cwde
lds
sbb
cs
or
cmp
mov
jb
cli
push
repnz
mov
shl
or
xchg
lods
sbb
lock
mov
cmp
jp
lds
push
sbb
and
in
add
mov
outs
fld
mov
or
mov
icebp
pop
push
xor
cwde
lods
push
mov
jmp
xchg
test
sahf
mov
inc
into
or
or
cmp
shl
pop
push
leave
enter
xor
add
push
test
push
fsubr
mov
je
repz
sbb
pop
mov
pusha
jbe
adc
sub
add
add
test
(bad)
imul
lock
out
cdq
mov
popa
sbb
inc
inc
push
and
adc
jmp
dec
and
sub
fwait
aas
int3
xchg
sub
addr16
sub
sub
pop
mov
adc
(bad)
bound
cld
mov
push
sub
add
sti
mov
in
aad
cs
or
push
jmp
xchg
and
inc
test
xor
adc
ret
pop
push
lea
add
data16
mov
jl
xor
xchg
push
hlt
inc
push
mov
out
pusha
movs
ins
push
add
cs
jle
mov
xor
lahf
ja
je
pop
out
leave
pusha
mov
cmp
imul
pop
pop
iret
and
adc
fisttp
pop
add
rcr
xchg
sub
dec
loope
push
jge
push
or
add
xor
push
mov
cmc
dec
mov
movs
inc
daa
or
imul
(bad)
dec
push
mov
loope
out
and
mov
push
xor
dec
leave
push
jle
push
dec
pop
push
pop
movs
xchg
inc
pop
mov
fldenv
jecxz
fisub
pop
cmps
push
aam
pusha
scas
bound
add
in
imul
push
out
jl
repz
jb
sub
sbb
pop
inc
jb
mov
sbb
and
and
mov
sbb
and
jp
sbb
outs
dec
fcom
push
inc
sahf
push
mov
ss
or
retf
data16
xor
xor
in
ss
xchg
push
int
aaa
sbb
mov
les
sbb
sbb
inc
fcom
loop
pop
movs
(bad)
sbb
in
jle
jl
dec
sbb
ret
cld
adc
xor
ja
or
movs
popf
push
icebp
cmps
cmc
jge
pop
cld
add
jmp
push
ret
sahf
push
test
sbb
lods
xor
clc
rsm
mov
fld
push
icebp
or
dec
das
cdq
dec
rol
inc
imul
rol
cwde
mov
inc
adc
icebp
inc
add
fisubr
aad
mov
rol
popa
addr16
movs
iret
xchg
outs
xchg
xor
sub
loope
and
lock
cld
dec
xchg
ud2
loope
add
jmp
push
sub
shl
lgs
enter
scas
adc
dec
cwde
das
push
or
sahf
and
test
stc
mov
dec
sbb
pop
dec
jmp
sub
inc
cld
movs
cmps
in
mov
jnp
xchg
sbb
xor
lods
xor
mov
cs
sti
sub
in
jmp
fiadd
scas
je
rcr
lods
sub
out
dec
pop
mov
xlat
cli
jmp
inc
mov
(bad)
test
dec
push
sbb
xlat
cmp
ror
jo
xchg
mov
mov
cmps
dec
out
lea
push
ins
add
fnstcw
aam
loope
sub
sti
mov
aad
(bad)
movs
icebp
bound
pop
(bad)
mov
mov
xor
retf
inc
inc
mov
mov
int3
je
add
xchg
sub
int3
mov
or
daa
sbb
xchg
adc
adc
or
fs
mov
imul
loope
xchg
enter
inc
jle
adc
lea
jo
mov
sub
mov
retf
outs
push
enter
call
nop
mov
xlat
ss
stc
in
ins
fnsave
rol
sub
or
gs
add
call
jge
push
xchg
pop
loopne
xchg
rol
pop
add
push
jg
sbb
mov
dec
mov
xchg
mov
add
ficom
dec
repz
mov
jo
pop
mov
jbe
add
jmp
inc
test
adc
jae
sub
jno
xchg
push
cmc
adc
int
clc
jge
adc
and
out
(bad)
jp
mov
pop
jns
movs
mul
rcl
mov
mov
lods
push
sbb
pop
xor
inc
pop
jmp
aaa
adc
sub
dec
pusha
mov
mov
sbb
out
rcr
adc
ins
in
push
sbb
xchg
push
jo
jne
mov
and
cmps
ja
inc
into
cmp
push
int
sbb
mov
sbb
adc
jo
push
dec
push
push
inc
fld
fwait
pop
sbb
mov
push
idiv
popf
adc
inc
xchg
sbb
addr16
nop
push
addr16
outs
das
arpl
es
xor
lea
imul
jne
clc
sbb
inc
cs
ret
cmp
push
arpl
test
aam
pushf
in
or
pop
popf
push
dec
jmp
pop
(bad)
(bad)
lds
mov
jg
sub
xchg
in
mov
stos
ins
dec
mov
xchg
test
(bad)
mov
cmps
jle
in
das
inc
jne
inc
ror
lsl
lock
inc
adc
dec
aam
add
int
je
jle
mov
stc
mov
mov
dec
ror
mov
cwde
test
add
mov
pop
test
lods
mul
xchg
std
(bad)
xchg
lahf
xchg
pop
mov
int3
ins
es
shr
outs
jge
pop
imul
jno
data16
out
fnstenv
inc
mov
xchg
mov
leave
and
xor
and
or
bound
aad
sbb
cli
cdq
cwde
test
ret
hlt
sar
scas
ins
push
scas
addr16
mov
shr
ud0
push
enter
test
and
pop
cmp
push
pop
sbb
or
dec
aam
outs
ins
fs
xlat
cmp
int3
and
push
push
or
xor
out
sbb
std
cld
jo
xchg
cmp
lds
fst
mov
mov
cmc
xchg
movs
add
mov
stos
lock
lods
pop
cmps
sub
push
nop
bound
bsf
stos
add
in
push
inc
ud0
mov
mov
(bad)
sub
ret
push
adc
cld
mov
jnp
cmps
adc
(bad)
repnz
mov
sti
xchg
ss
(bad)
out
(bad)
xchg
mov
add
adc
jecxz
sub
dec
push
retf
xor
pop
ins
inc
push
cmp
inc
xchg
sub
cmps
xchg
cmp
repz
idiv
aas
sbb
pop
xchg
dec
sahf
mov
(bad)
imul
mov
mov
mov
ja
push
bound
jmp
rcl
les
cmp
fstp
push
sbb
dec
jecxz
push
lock
into
pop
add
and
daa
scas
or
ret
stos
jbe
push
test
jmp
inc
xchg
and
ss
push
sub
lods
imul
push
inc
fmul
aaa
dec
push
jle
test
enter
sub
mov
call
dec
je
jno
pop
sbb
std
push
mov
push
push
lock
mov
mul
cmp
mov
jno
cmp
mov
(bad)
mov
dec
sub
fild
pop
and
arpl
mov
mov
mov
mov
leave
cwde
and
ins
and
mov
mov
mov
iret
pop
and
jmp
xor
test
movs
mov
sbb
cmp
and
outs
leave
pop
data16
sub
and
add
xor
enter
pop
call
pop
cli
movs
ret
shr
cli
push
sub
push
pop
pop
repnz
mov
push
outs
push
repnz
jmp
bound
cmp
mov
add
jmp
clc
adc
in
push
jns
repz
or
lea
xor
cli
popf
xchg
clc
jbe
jo
in
inc
sbb
xlat
xor
inc
or
mov
outs
pop
lods
or
out
jg
xchg
add
iret
or
lods
iret
addr16
xlat
test
push
jnp
pop
push
(bad)
fmul
mov
adc
jne
test
outs
xchg
push
add
xchg
push
xlat
ja
inc
frstpm(287
(bad)
mov
(bad)
dec
cmps
(bad)
ds
pop
push
mul
data16
push
es
test
je
xor
and
lock
cmp
pushf
aam
xor
pop
cmp
jle
shl
pop
cwde
xchg
sub
or
or
sbb
je
mov
fucomp
repnz
adc
out
int
jmp
mov
xchg
fild
mov
das
addr16
cmp
leave
xchg
lock
stos
inc
mov
mov
or
icebp
(bad)
outs
mov
outs
ja
rcl
imul
cmp
and
call
repnz
jl
stos
pusha
and
arpl
sbb
cli
xor
in
jbe
bound
lods
mov
fisttp
ret
adc
jmp
idiv
es
std
into
xchg
xchg
or
pop
ret
mov
jl
in
or
mov
pushf
scas
ins
imul
clc
sub
iret
push
jno
dec
(bad)
daa
clc
xchg
mov
lods
xor
and
mov
sbb
dec
ja
sbb
jg
mov
fnop
in
scas
gs
sar
in
cmp
xor
pop
fwait
pminsw
(bad)
shr
les
push
(bad)
xchg
(bad)
fcmovu
mov
mov
cmc
mov
aam
scas
xlat
(bad)
mov
push
pop
call
call
cmp
inc
inc
xor
and
pop
ss
shr
retf
mov
rcl
jg
mov
dec
add
xor
int
mov
test
add
xchg
call
and
lods
daa
xchg
or
xor
in
adc
add
hlt
imul
mov
mov
pop
pop
sub
repz
or
cld
mul
outs
add
push
cmc
inc
pusha
iret
sub
inc
xor
or
fwait
add
jg
jb
lahf
pusha
push
outs
pop
jl
and
sub
mov
sbb
sub
jbe
adc
ins
test
nop
lock
ficom
inc
loopne
mov
je
fs
daa
(bad)
test
pop
ins
das
loop
test
imul
(bad)
icebp
imul
out
test
icebp
out
ins
lea
cli
xor
cmps
shl
adc
cmps
inc
out
mov
out
inc
lods
retf
xor
repz
jbe
add
scas
popf
out
mov
mov
cmps
jne
xor
mov
gs
and
cmps
loope
movs
sbb
mov
ins
push
je
and
push
out
mov
daa
lahf
sbb
shr
mov
retf
movs
jae
and
fcomp
mov
sub
push
int
cmc
(bad)
arpl
ss
and
in
stos
cdq
(bad)
push
rcr
xchg
test
inc
(bad)
rol
retf
xor
dec
inc
movs
adc
jbe
pop
cmp
or
push
xor
das
in
leave
fisub
mov
lock
into
adc
adc
or
loopne
(bad)
mov
jg
out
fdiv
icebp
rcr
mov
(bad)
js
or
cdq
dec
and
mov
add
sbb
xchg
pop
mov
adc
dec
sub
dec
sub
enter
sahf
in
stc
in
xor
add
lds
pop
sub
fwait
jge
outs
pop
test
cmc
sbb
mov
sti
cs
sbb
je
ret
ret
into
adc
nop
pop
inc
add
cmps
jns
pushf
lds
sbb
sub
jno
mov
stos
stc
and
ret
cmc
lock
push
pushf
int
sub
push
sbb
shl
xlat
ins
cmp
or
xchg
mov
ins
dec
ins
repnz
ret
out
dec
sar
scas
(bad)
jo
sub
or
dec
idiv
sub
jnp
inc
cmp
push
xchg
movs
inc
dec
jge
(bad)
test
ins
stos
ror
ins
sub
je
pop
fimul
out
or
cmp
xchg
pop
jo
jb
and
or
add
mov
mov
jo
push
(bad)
repnz
mov
sahf
xchg
fbld
repz
fcomp
push
sub
adc
gs
movs
pop
arpl
minps
and
or
cdq
jbe
or
scas
sbb
ret
jmp
cmp
push
xchg
aad
pop
push
ins
push
pop
jo
(bad)
in
mov
(bad)
mov
mov
sar
or
cdq
fbld
enter
fild
cmps
jle
cmp
shr
jo
ds
mov
dec
mov
fstp
add
dec
and
and
pop
fstp
dec
and
rcl
loopne
cld
bound
mov
and
jge
out
(bad)
repnz
push
jmp
push
out
xor
fadd
hlt
mov
and
xor
sbb
fs
in
inc
xor
or
aad
repnz
and
jp
fisub
enter
dec
cmp
adc
fimul
sbb
and
test
ficomp
pop
jg
inc
add
fcmovne
mov
sub
cmp
pop
or
cwde
dec
push
cmp
xchg
jmp
ja
cli
and
inc
sub
jo
(bad)
sti
fcom
(bad)
es
dec
push
shr
lock
jmp
sbb
xchg
cld
mov
test
xor
cmp
test
cmps
mov
mov
mov
mov
mov
mov
into
xor
mov
push
mov
std
mov
fisub
pushf
outs
inc
retf
loopne
adc
adc
mov
cmp
out
or
scas
int
cdq
add
sub
ds
xchg
repz
inc
popa
or
cmp
mov
dec
ror
sub
call
sbb
fld
int3
fisttp
mov
sub
popf
jmp
lods
mov
out
cli
sub
mov
stc
jp
pop
cld
ror
data16
int3
sub
jbe
fcom
push
dec
jmp
mov
movs
(bad)
push
mov
cmp
or
(bad)
dec
je
cld
in
js
pop
jno
aad
retf
loope
lds
fst
out
mov
in
sub
inc
sbb
sbb
imul
inc
arpl
popfw
(bad)
mov
mul
das
or
dec
jmp
(bad)
fwait
cmps
outs
aad
push
push
inc
xor
or
cmps
scas
int3
or
mov
xchg
xor
mov
jmp
sub
fucomp
add
clc
add
jmp
lea
fmulp
scas
xor
sti
stc
xor
jg
mov
leave
xchg
push
pop
lea
fnstenv
retf
or
xchg
mov
lock
mov
mov
adc
std
mov
adc
loope
js
push
aam
xchg
lods
xchg
hlt
das
dec
loope
xor
hlt
dec
and
scas
pushf
push
pop
sub
je
sub
test
sub
push
(bad)
into
and
mov
out
addr16
sub
mov
xchg
ret
mov
mov
nop
adc
out
xchg
(bad)
hlt
ja
jmp
ror
pop
call
add
fldcw
mov
add
xchg
and
pop
jle
shl
pop
movs
stos
jmp
lods
pop
repz
adc
push
or
inc
jg
mov
sar
jmp
sbb
cmp
dec
mov
cmp
or
loope
pop
out
mov
sbb
fcmovnbe
shl
mov
cmps
shl
aam
cdq
or
jnp
ret
push
fwait
or
ficomp
add
mov
int
aaa
mov
call
scas
shl
adc
pusha
xor
pusha
in
jmp
fbstp
push
arpl
jp
fwait
movs
fstp
add
fisub
dec
add
pop
aaa
in
cmc
adc
out
rcl
(bad)
mov
mov
xor
retf
jb
push
cmps
scas
aam
adc
pop
mov
iret
ds
xchg
and
jecxz
mov
das
pop
sub
xchg
push
fild
or
inc
movs
xor
test
neg
repz
pusha
mov
xchg
jno
arpl
arpl
inc
(bad)
inc
add
xor
inc
adc
pop
daa
js
ud2
jmp
mov
jle
pop
jae
xor
aad
or
xor
sahf
call
push
rcl
retf
push
inc
push
scas
daa
cmp
xchg
xchg
push
or
jmp
fnstcw
test
test
xor
sti
and
retf
test
cmps
and
lea
adc
cld
ins
add
fbstp
scas
lock
mov
push
cwde
or
xchg
xor
mov
sti
lahf
add
fsub
mov
cmp
ror
mov
icebp
inc
nop
pop
dec
mov
xor
repnz
cld
pop
leave
pop
xchg
cmp
(bad)
in
ins
in
mul
xchg
aam
call
in
inc
loopne
xor
out
jmp
xlat
je
ins
mov
movs
leave
mov
(bad)
cmp
cmp
std
shl
into
pop
ror
jge
inc
or
cld
mov
mov
into
mul
shr
loopne
stos
hlt
mov
add
and
mov
mov
fst
sahf
cdq
jns
jmp
movs
sbb
pop
lock
in
adc
pusha
es
push
xchg
pop
lea
movs
dec
mov
jne
bound
inc
iret
jle
dec
std
sub
stos
mov
mov
sbb
add
retf
test
push
sbb
add
dec
in
jl
test
movs
out
mov
pop
inc
pop
sbb
pop
or
iret
xor
push
(bad)
push
popa
jmp
inc
out
js
push
call
in
jle
mov
retf
mov
or
mov
mov
inc
int
xor
ja
jmp
das
xchg
or
popf
add
and
inc
pushf
clc
adc
mov
cmp
jge
xchg
stc
movs
push
xor
int3
js
movs
call
cmp
daa
inc
loop
xchg
pop
out
or
outs
jno
in
iret
sbb
push
add
mov
and
fcom
je
mov
adc
repz
repz
hlt
add
ins
dec
add
sbb
sbb
jle
mov
and
cmp
jmp
dec
push
lods
test
jecxz
gs
inc
mov
repz
cdq
retf
inc
sti
fstp
pusha
inc
out
bound
mov
jge
cmp
xlat
neg
xor
mov
test
add
xchg
fdiv
add
push
mul
xchg
inc
mov
jmp
push
adc
dec
pop
jl
daa
add
cli
lock
mov
cld
inc
add
push
test
mov
inc
lea
cwde
push
lods
pop
dec
fwait
test
je
das
or
es
(bad)
mov
inc
dec
pop
dec
adc
dec
dec
cli
lods
or
cmp
jge
or
and
imul
xchg
inc
dec
inc
jns
jmp
jmp
bound
lods
std
test
fmulp
retf
test
and
and
or
pushf
xchg
enter
mov
lock
sahf
pop
jecxz
mov
push
ins
lahf
in
jle
or
push
scas
ret
lahf
movs
xlat
xor
mov
pop
out
dec
or
lahf
ins
popf
inc
out
mov
mov
(bad)
pusha
pop
cmp
loop
cmps
add
cmc
movs
imul
aas
adc
inc
dec
or
ds
sbb
stos
ja
pop
fcom
mov
sti
movs
repz
push
fild
and
dec
mov
test
pusha
adc
mov
es
xor
push
xchg
cmps
and
movs
test
and
jmp
mov
jo
jo
sub
call
lea
sbb
and
or
or
sub
xchg
sub
mov
pop
cmp
jge
popa
cmp
xor
adc
xor
sbb
pusha
iret
fs
je
into
xchg
adc
inc
dec
jg
jae
scas
mov
ret
mov
xor
mov
fdiv
jmp
scas
fdiv
cdq
inc
or
mov
mov
and
sub
jno
lds
imul
outs
or
pop
adc
xlat
adc
xor
pop
mov
pop
shl
lds
rcl
xor
dec
push
pop
xchg
rcl
inc
inc
pop
test
mov
pusha
stos
xor
out
dec
int
popa
push
inc
icebp
xchg
movs
hlt
or
mov
fucomp
lea
mov
sbb
inc
lds
test
jbe
iret
adc
or
repz
add
mov
arpl
jmp
ja
ror
xor
xor
adc
out
loopne
inc
xchg
das
xchg
jbe
mov
mov
movs
cmc
dec
iret
dec
mov
inc
lds
jg
loopne
dec
cmp
inc
ds
movs
cmp
(bad)
lods
jae
mov
test
dec
mov
mov
bound
sahf
cdq
xlat
std
mov
push
push
sbb
nop
mov
mov
mov
sti
lahf
cmp
std
pusha
loope
jno
push
pushf
jbe
add
inc
sbb
dec
pop
int3
push
retf
mov
int
lods
clc
test
xchg
sub
and
or
stc
aaa
out
xchg
jno
js
inc
jge
xor
aad
dec
pop
(bad)
jg
ret
jne
xchg
mov
data16
(bad)
push
xchg
call
pop
mov
mov
stos
fnstenv
ds
xor
jl
sub
stos
cmp
xchg
shl
out
ins
xor
out
dec
jne
mov
and
dec
cmps
cmp
sub
adc
pop
popa
ss
mov
popa
icebp
out
fwait
inc
mov
jp
add
in
jns
xor
lds
add
pop
mov
dec
cmp
pop
cdq
xor
inc
cdq
inc
jns
in
test
xor
lock
loope
or
and
push
movs
dec
jmp
test
(bad)
mov
test
test
xchg
ins
mov
cmps
sar
ds
ins
cmp
or
addr16
daa
mov
mov
out
mov
(bad)
xor
xchg
xor
pop
xchg
push
movs
movs
xchg
icebp
or
cmp
out
add
rcl
add
inc
and
jnp
jl
or
fisttp
aas
lahf
adc
mov
ffreep
xlat
jge
iret
jle
sar
sbb
div
les
push
push
push
cmc
outs
push
mov
or
xchg
cmp
inc
ret
sar
add
mov
add
pop
add
push
and
xor
(bad)
out
rcl
aam
or
push
outs
xor
jnp
pushf
movs
jne
jge
imul
out
ud0
cwde
push
cmp
std
xchg
cmp
pop
arpl
and
mov
bound
jg
sbb
cmp
and
scas
xor
push
retf
sub
dec
dec
jmp
mov
mov
mul
mov
push
mov
rol
push
jbe
cmp
adc
add
not
mov
pop
enter
rcr
add
mov
mov
xor
inc
mov
idiv
ds
gs
add
outs
jmp
mov
push
enter
and
xchg
shl
ds
inc
mov
xchg
arpl
xchg
rcl
cmp
sbb
xchg
dec
rol
into
shl
and
xchg
inc
fisub
aaa
les
out
fist
jno
in
jge
aad
fimul
aam
xlat
gs
and
mov
stos
push
pop
sbb
dec
scas
loope
(bad)
scas
hlt
pop
out
xor
mov
push
cwde
std
scas
push
or
retf
xchg
push
dec
adc
fxch
mov
(bad)
push
mov
(bad)
sub
or
inc
int
ret
fmul
sub
dec
(bad)
js
ins
push
lods
pop
xor
mov
and
(bad)
pop
xor
out
scas
leave
jne
jae
fs
fisubr
mov
mov
and
and
(bad)
push
in
enter
push
jb
iret
pop
idiv
fld
sbb
jo
dec
inc
xor
pop
enter
lds
rcr
mov
push
mov
xlat
loopne
gs
push
sub
shl
int3
push
mov
mov
dec
ss
mov
icebp
mov
xchg
stos
xchg
or
ror
in
xlat
stos
adc
sar
iret
and
xchg
int
cdq
sub
dec
mov
in
retf
pop
sbb
inc
pop
mov
dec
pop
or
push
jg
call
cmp
mov
push
outs
test
(bad)
ficom
sub
cmc
retf
pop
xchg
jg
xor
mov
lea
data16
push
pusha
fiadd
xchg
mov
loopne
sbb
xchg
jg
jae
cmps
xlat
pop
mov
shl
fst
aaa
push
lea
add
lahf
outs
lock
ror
jbe
scas
inc
(bad)
nop
push
lock
call
pop
outs
aam
adc
pushf
mov
mov
clc
jb
bound
and
repnz
cwde
cmps
fs
mov
add
retf
xor
fld
leave
and
mov
imul
fwait
cli
fsubr
rol
dec
adc
stos
sbb
jb
es
mov
xchg
test
lea
xchg
xor
push
mov
or
(bad)
add
mov
clc
ja
setns
aad
pop
mov
xchg
lock
jnp
cwde
cmp
gs
outs
aas
adc
loopne
in
pop
std
scas
ror
inc
jae
mov
sub
(bad)
sahf
scas
(bad)
and
fs
and
inc
iret
(bad)
dec
sahf
ss
mov
ins
iret
dec
add
mov
xlat
inc
cdq
js
xor
pop
popf
mov
call
das
ss
jmp
cmp
sahf
mov
inc
xchg
rcl
mov
cmp
into
test
pop
and
pop
aas
cmp
mul
ds
pop
xchg
int
sbb
dec
mov
push
mov
movs
mov
stos
sub
sti
stc
mov
cdq
push
dec
inc
cmp
imul
mov
cmp
mov
int
lds
jp
(bad)
out
inc
adc
jo
sub
out
je
sub
jbe
ror
es
inc
xchg
pop
cmp
xor
mov
dec
fidivr
sbb
in
es
push
jecxz
sub
mov
dec
sub
jl
cs
xchg
aad
(bad)
and
jae
mov
jmp
jb
sar
icebp
into
pop
(bad)
pop
inc
pop
mov
rcl
inc
out
mov
stos
popa
pop
and
lods
add
(bad)
sbb
inc
getsec
aas
je
ret
ror
fidiv
addr16
fwait
pop
(bad)
ret
out
rcl
mov
fcmovbe
cli
imul
jmp
jae
pushf
fiadd
fdiv
dec
out
inc
inc
sbb
les
add
cli
in
movs
call
and
js
xor
fwait
pop
push
dec
test
cmc
dec
cmps
and
mov
add
push
mov
pop
cmp
mov
jno
loop
test
(bad)
jle
call
stos
repz
pop
add
inc
dec
addr16
or
adc
add
sbb
jne
adc
xlat
dec
rcl
push
call
mov
je
je
inc
sbb
inc
out
mov
add
jbe
call
sbb
in
stos
js
das
fsubrp
fnstenv
in
(bad)
aad
push
stc
or
or
pop
xor
mov
sub
sbb
sub
xor
jo
cwde
aas
lods
push
ret
in
push
adc
repnz
movs
and
loop
mov
adc
adc
jge
out
lahf
or
adc
inc
mov
pop
push
js
fadd
sub
sti
aas
retf
imul
ins
xchg
xor
pop
dec
add
sbb
mov
push
call
(bad)
sub
sbb
and
mov
xor
sub
adc
popf
pop
mov
add
out
pop
retf
stos
inc
mov
mov
call
or
add
fidiv
xchg
mov
add
fcomp
add
lock
adc
xor
ds
call
sbb
dec
shr
pop
mov
fist
jae
inc
push
or
xor
push
aam
jp
scas
and
jl
mov
lea
(bad)
add
dec
inc
xor
xchg
jns
mov
push
je
das
shr
sub
loop
sub
js
test
stos
xchg
(bad)
lock
sbb
jp
movs
ins
jle
movs
jge
inc
stos
pop
mov
mov
inc
repz
fldcw
or
outs
xor
repz
adc
mov
sub
mov
cdq
fdivr
mov
data16
xchg
and
cmp
pop
loopne
js
push
shr
xchg
mov
dec
mov
stos
cdq
fcomp
jp
and
mov
lock
mov
push
cmc
mov
mul
enter
or
in
sub
out
sbb
test
retf
push
cmp
int
jge
pop
cwde
inc
xor
mov
dec
ret
call
iret
mov
dec
mov
mov
iret
or
and
xor
add
fnsetpm(287
imul
cld
pop
jg
in
cmp
(bad)
add
in
pop
cmp
mov
imul
jbe
(bad)
div
mov
out
xor
or
rol
mov
or
xchg
neg
push
adc
jno
sbb
int3
je
pop
mov
jg
data16
ins
mov
dec
inc
std
xor
or
pusha
push
popa
mov
les
or
int
nop
jge
mov
add
dec
sbb
xchg
test
mov
inc
in
es
sete
or
sbb
mov
mov
enterw
push
jmp
xchg
das
fdivr
adc
leave
ds
aaa
sar
mov
cmp
sub
shl
and
sti
add
sbb
cmp
and
push
jle
push
cmp
xchg
lea
sar
ss
fld
movs
shl
cmp
dec
mov
mov
push
cmp
xchg
cmp
adc
aam
test
call
jl
jnp
fst
pop
add
jmp
aaa
adc
inc
cmps
add
adc
cmp
cmp
(bad)
cdq
sbb
(bad)
push
push
cmp
lahf
sbb
push
cld
or
adc
push
leave
sbb
into
xchg
lds
jmp
ins
test
or
aaa
lock
xchg
icebp
jb
fistp
cmp
adc
push
hlt
shl
xor
dec
test
push
dec
sub
(bad)
aad
mov
out
in
sub
js
je
iret
movs
sbb
mov
or
or
fild
(bad)
xchg
in
(bad)
pusha
xchg
fidivr
mov
addr16
xchg
xchg
xchg
aad
fsubr
(bad)
and
and
pop
aaa
add
scas
es
inc
jmp
in
xchg
scas
retf
push
call
ds
loope
cmp
mov
imul
retf
jnp
push
arpl
adc
inc
adc
mov
mov
call
mov
shr
jmp
retf
call
into
ja
arpl
out
cmp
pop
stos
stos
xor
pop
jmp
lods
loopne
xchg
mov
inc
aas
fisubr
popa
jecxz
adc
in
xlat
xlat
dec
(bad)
int
and
ret
push
inc
cmp
sti
daa
add
dec
fwait
push
xchg
mov
out
pusha
mov
or
daa
shr
xor
cmp
cld
jnp
je
sub
or
or
in
(bad)
in
data16
arpl
sahf
sbb
nop
stc
mov
loop
and
lods
mov
scas
imul
inc
leave
xor
xchg
lock
pop
and
cli
dec
add
or
xor
mov
aaa
sub
jl
sbb
xchg
test
jg
std
jmp
test
lea
or
sbb
cmp
(bad)
xor
jb
push
or
add
jno
cld
push
and
clc
addr16
jo
jge
ins
repz
xchg
cmp
mov
enter
xor
jle
fcom
sub
cmp
leave
popa
push
sub
enter
stos
repz
outs
adc
das
imul
or
arpl
cmp
push
inc
(bad)
cmp
dec
fcomp
clc
mov
ret
mov
scas
cmps
ror
xchg
mov
nop
push
cmc
(bad)
inc
movs
fnstsw
sbb
push
add
cmp
mov
mov
inc
or
loopne
dec
or
jmp
test
ja
mov
pop
and
out
lods
enter
xor
pop
stos
jge
clc
push
pop
xchg
aas
(bad)
jno
retf
add
xor
pop
pop
lods
mov
cmp
(bad)
xor
iret
xor
packssdw
mov
adc
sbb
xor
pop
sub
mov
push
or
rcl
push
retf
or
out
(bad)
sub
xchg
xor
scas
mov
retf
dec
and
mov
cdq
xor
inc
add
mov
inc
outs
dec
mov
push
or
popa
data16
ror
sahf
inc
scas
dec
fwait
mov
xchg
push
adc
jg
lock
add
iret
cs
hlt
pop
pop
in
xor
loope
push
call
je
dec
idiv
imul
arpl
pop
add
mov
mov
jle
pop
repz
mov
dec
push
into
jle
rcl
mov
inc
lock
mov
adc
mov
lds
mov
inc
mov
add
sub
mov
mov
pop
inc
cdq
add
imul
fmul
movs
popa
stc
dec
dec
push
ret
ins
or
push
sub
fsub
lahf
aas
retf
aaa
inc
sub
scas
fisub
ret
rcr
shl
inc
and
mov
push
je
add
repnz
dec
retf
sub
pop
pop
data16
jg
mov
xor
loope
in
repnz
outs
pop
dec
mov
dec
sbb
add
shl
jbe
jnp
mov
aad
mov
mov
pop
push
pusha
mov
les
and
sbb
cli
ds
cwde
push
ins
cmps
xchg
pop
cmp
mov
mov
aas
repz
dec
loopne
or
mov
mov
test
ret
ret
xor
pop
lock
cwde
jmp
jns
pop
mov
cmp
leave
xor
in
mov
jo
pop
sub
mov
imul
mov
xor
jl
add
or
shr
loopne
xor
add
jle
shl
aas
call
imul
mov
pop
addr16
aaa
mov
enter
push
mov
les
stos
test
xor
aam
jmp
add
jp
mov
and
pop
sbb
arpl
pusha
cmc
inc
push
or
fisttp
cwde
test
shufps
lods
and
gs
mov
imul
cmp
in
neg
fmul
(bad)
pop
pop
push
(bad)
mov
jb
adc
in
sbb
(bad)
fistp
outs
and
push
ss
ret
call
std
dec
sti
sahf
frstor
(bad)
jmp
mov
test
int
and
push
jnp
ins
cmp
ins
mov
icebp
(bad)
push
inc
cmp
dec
mov
push
pop
dec
cmp
sti
test
xor
cli
sbb
imul
push
icebp
and
dec
dec
sbb
mov
sbb
sbb
cld
out
enter
inc
daa
mov
and
mov
stc
iret
out
push
into
stos
sub
out
popa
aad
call
idiv
push
call
(bad)
repz
dec
dec
outs
cmps
repnz
or
pop
and
sbb
mov
cdq
cmc
stc
dec
push
sahf
add
mov
aam
sar
sti
push
mov
jl
jecxz
inc
in
cmp
cld
(bad)
and
mov
adc
in
xchg
aas
mov
xor
lods
inc
push
sub
and
in
pop
in
fstp
clc
fdiv
clc
daa
push
inc
popf
dec
cmp
dec
js
ss
fisubr
push
mov
rol
popf
jbe
jge
shl
test
les
in
stos
fnsave
jmp
xor
jne
pop
inc
pop
lods
mov
test
add
cmp
add
push
aaa
cmp
data16
mov
pop
xchg
in
dec
sbb
cwde
push
in
fiadd
fsubr
leave
inc
mov
pop
call
jne
setbe
call
and
mov
xchg
push
mov
(bad)
xor
jns
sbb
and
mov
mov
test
push
inc
and
lods
mov
jae
hlt
push
retf
jbe
ds
adc
loope
mov
push
sbb
pop
(bad)
and
xchg
arpl
xchg
dec
dec
add
push
jle
frstpm(287
iret
ret
sahf
and
mov
mov
xchg
aam
mul
and
test
sbb
dec
jge
push
mov
fistp
mov
sar
or
fldenv
inc
sub
(bad)
mov
pop
es
sub
test
lock
aas
add
push
push
adc
push
cld
adc
(bad)
and
(bad)
jns
pop
jecxz
retf
inc
cmps
add
stos
inc
inc
adc
xchg
(bad)
jl
fild
scas
mov
jle
jns
inc
sbb
or
cmp
and
test
dec
lods
ins
out
in
popf
push
and
pop
push
mov
stos
cwde
stc
fwait
loop
daa
push
aam
into
push
or
push
inc
iret
shl
or
and
fs
out
adc
sub
push
sub
jae
add
cmp
mov
fst
in
int
cpuid
fs
add
inc
in
out
pop
repnz
dec
stos
mov
in
repnz
cmp
cdq
test
rcr
inc
add
imul
inc
xchg
jmp
cs
push
mov
add
add
mov
adc
sbb
les
inc
mov
dec
cmp
adc
movs
inc
hlt
xchg
div
mov
jp
mov
pop
jnp
cmp
out
es
stos
and
imul
xchg
or
adc
imul
aad
push
pop
jbe
adc
jmp
mov
ins
sbb
(bad)
hlt
je
xlat
mov
into
fnstsw
or
pop
call
pusha
jo
xchg
mov
add
sbb
iret
hlt
nop
stos
popf
outs
cdq
sub
jne
mov
sti
mov
jecxz
in
into
jge
xchg
inc
test
pop
fwait
jg
js
in
jns
jp
dec
sbb
jno
jne
fcmovnbe
push
jae
push
fadd
mov
dec
mov
mov
mov
mov
adc
sub
imul
and
inc
scas
jne
cmp
add
adc
and
loope
jmp
push
jmp
xchg
pushf
sub
pop
sub
xchg
mov
push
push
imul
pop
aaa
inc
jge
mov
pop
or
std
in
int3
js
inc
stos
pop
call
or
rol
cmps
xor
test
ja
mov
sbb
mov
fs
or
movs
jp
jb
inc
or
cmp
imul
or
cmp
sub
cwde
cmc
dec
pop
sub
sti
mov
loop
nop
xor
cmps
outs
pop
ficomp
loop
inc
jnp
push
add
pusha
adc
fsincos
inc
xor
rol
repnz
cmp
mov
cmps
xchg
pop
or
mov
and
sbb
mov
and
pop
fdivr
mov
xor
sub
jne
mov
and
mov
push
sub
outs
aad
repz
repnz
out
daa
pushf
std
sar
push
xchg
push
mov
add
sub
mov
ror
je
(bad)
es
movs
les
sbb
fs
rcl
mov
stos
jae
loope
std
xchg
xchg
push
(bad)
inc
(bad)
xchg
cmp
test
mov
push
mov
lea
(bad)
(bad)
fidivr
daa
pop
push
mov
loopne
movs
xchg
mov
or
icebp
or
std
stc
addr16
pop
shl
and
xchg
js
out
fsubr
outs
fbld
mov
adc
or
dec
gs
push
int
mov
adc
hlt
addr16
out
or
cs
adc
mov
daa
je
add
repz
ds
mov
movs
repnz
repnz
add
xchg
push
mov
mov
(bad)
lods
sub
fs
push
or
inc
pusha
std
out
add
jg
test
int3
xchg
xchg
ficomp
pop
jno
rcl
lea
sbb
inc
addr16
movs
or
pushf
scas
loop
lods
mov
sub
clc
fld
shl
sbb
adc
into
inc
xor
(bad)
das
out
pushf
shr
and
inc
xchg
adc
loop
mov
(bad)
aaa
call
out
sti
push
in
int3
cmps
push
pop
push
jnp
shl
stc
push
hlt
adc
imul
sbb
mov
cmp
hlt
inc
test
xchg
pop
or
hlt
dec
lods
dec
mov
pop
jge
jbe
sbb
xor
(bad)
int3
jne
ficomp
shl
and
ja
inc
(bad)
idiv
lods
sub
fimul
adc
outs
bound
std
jo
pushf
mov
shl
cld
icebp
mov
add
jmp
pop
pop
imul
or
jbe
jmp
jecxz
out
call
fimul
jae
movs
stos
out
xchg
js
and
dec
xchg
jp
xchg
push
mov
addr16
clc
call
aas
mov
mov
and
jmp
mov
(bad)
pop
nop
push
mul
(bad)
shl
xchg
pop
out
xchg
pop
(bad)
frstor
mov
scas
pop
add
or
adc
test
jl
in
mov
xchg
movs
add
out
dec
or
xor
leave
fucomi
or
test
xchg
jns
and
push
xchg
dec
mov
dec
out
pop
aam
scas
push
call
retf
(bad)
jo
setns
out
xchg
in
or
aaa
xor
and
push
nop
adc
imul
sub
xor
dec
cmp
mov
shl
inc
push
cli
mov
pop
fld
mov
mov
popf
fwait
inc
or
cdq
jge
jne
into
and
xchg
xor
mov
jl
movs
lods
dec
inc
mov
push
add
(bad)
cmp
jne
mov
pop
push
fcmovnu
stos
jmp
outs
pop
inc
scas
jns
inc
sub
mov
inc
cwde
or
ret
push
mov
jl
push
dec
popa
xor
out
or
xchg
jg
pop
add
sub
stos
clc
inc
cmp
sbb
jb
(bad)
stc
mov
inc
or
rol
pop
fcmovnb
xchg
cdq
cmc
push
mov
cmp
jle
and
xchg
out
pop
dec
adc
inc
jmp
jl
pop
xchg
scas
fld
xor
pop
sbb
add
pushf
xor
mov
jle
in
pop
iret
or
mov
or
cmp
xchg
test
in
pop
hlt
(bad)
std
add
mov
cmc
add
mov
dec
add
outs
mov
xor
leave
retf
cmp
mov
add
cmp
das
mov
int3
sbb
lea
push
jmp
xor
sub
mov
aad
sub
aam
std
ja
mov
repz
push
scas
push
mov
bound
ins
xor
stos
fwait
push
fimul
cmc
adc
mov
push
and
shr
mov
or
pop
ror
push
push
xor
jo
icebp
cld
ja
push
mov
mov
sbb
int3
sub
cmps
popa
icebp
or
and
cmps
mov
dec
sub
sbb
das
movs
loopne
in
sbb
ins
xchg
es
into
in
jmp
cmps
pusha
inc
jmp
jae
inc
arpl
retf
lahf
add
xchg
xchg
shl
fcom
push
xor
shr
(bad)
neg
pop
or
pop
mov
and
add
inc
mov
xlat
idiv
pop
xlat
call
adc
ins
xlat
jge
cmps
xchg
stc
sahf
and
sbb
(bad)
sub
ja
jge
adc
mov
jnp
add
test
xchg
in
dec
xor
test
std
pop
ret
stos
mov
dec
cmps
test
cs
jp
aaa
fucomip
xchg
mov
sub
inc
and
push
jmp
cmp
pusha
cmp
repz
cmp
xchg
cld
lea
dec
pop
aaa
push
jbe
sar
dec
sbb
dec
xchg
addr16
add
icebp
xchg
dec
pop
repz
xchg
rcr
into
cmps
inc
mov
xor
or
sti
add
cmp
neg
sub
ins
cs
in
inc
xchg
and
(bad)
add
xchg
stos
mov
push
daa
xor
jno
push
jno
sbb
pop
fldcw
push
xlat
pop
fcmovnbe
(bad)
enter
xor
dec
adc
cmp
push
clc
pop
jp
inc
dec
loopne
dec
jge
test
jl
push
xor
idiv
stos
push
jne
pop
add
(bad)
fldenv
adc
push
loope
pop
ins
inc
or
call
and
fs
xchg
shl
and
xchg
mov
jns
not
cmp
stos
or
mov
ficom
sbb
push
int3
or
rcr
mov
enter
out
popa
jae
sbb
ret
mov
sahf
in
(bad)
fxch
mov
neg
jmp
nop
and
push
arpl
jmp
xchg
push
sub
(bad)
mov
inc
cld
out
adc
imul
sbb
mov
popf
lahf
aam
pop
jae
aam
sbb
ins
sbb
add
stc
popa
mov
sbb
out
mov
(bad)
movs
pop
(bad)
pop
dec
test
call
adc
push
cmp
popf
(bad)
sbb
stos
add
jnp
ret
aam
cmps
and
adc
adc
je
scas
(bad)
push
test
mov
inc
movs
mov
push
sahf
adc
xor
adc
inc
call
jnp
xor
loope
lds
(bad)
cli
sub
cmc
push
push
shr
pushf
cmc
cmp
inc
pop
pop
out
xor
or
pop
mov
mov
push
popf
xchg
out
in
adc
mov
call
xor
or
add
cmp
bound
rcr
mov
out
dec
pop
jl
sub
pop
pop
out
out
sub
stc
inc
ret
das
xchg
add
jp
adc
outs
daa
ds
cmps
and
jl
das
adc
inc
movs
(bad)
out
and
mov
mov
adc
loopne
ja
jne
and
push
fwait
hlt
ud0
aas
adc
mov
ins
mov
in
push
lahf
stos
mov
fidiv
dec
(bad)
ins
stos
(bad)
(bad)
lods
stos
(bad)
mov
das
xor
mov
retf
lahf
call
pop
loope
lods
pop
ret
sete
(bad)
mov
ja
(bad)
jmp
sub
push
out
sub
push
lds
cmp
js
jecxz
popa
enter
out
lock
(bad)
lods
pop
repz
out
mov
fild
(bad)
adc
ds
jp
jge
cmp
leave
mov
fnsave
jns
imul
(bad)
mov
dec
cmp
xor
mov
ret
dec
xor
dec
lea
out
(bad)
fisubr
in
aad
hlt
jg
gs
aas
test
aam
fsub
test
push
loopne
into
daa
inc
into
imul
mul
int
div
imul
add
sub
div
js
cmps
dec
mov
xchg
push
sub
xor
into
mov
jmp
cmp
pop
ds
rol
or
push
out
imul
mov
pop
pop
jmp
sbb
push
inc
jmp
popf
sbb
enter
fs
mov
(bad)
pop
mov
popf
add
or
pop
adc
repnz
imul
fcmovb
cli
jle
jmp
out
dec
test
adc
mov
pop
xor
mov
loopne
push
push
adc
call
lock
aam
mov
ror
in
cmps
nop
loop
ficomp
lea
(bad)
shr
xchg
scas
fwait
sub
enter
add
sbb
jg
add
jmp
scas
jo
or
xlat
das
sub
cli
aas
sub
out
push
scas
xchg
out
jne
jecxz
test
(bad)
xor
cmp
aaa
movs
xor
fist
ja
xor
imul
clc
fyl2x
mov
fs
aas
xchg
mov
stos
(bad)
jg
mov
fcom
xchg
test
(bad)
and
mov
jnp
mov
imul
fisubr
cmp
mov
mov
sub
test
ss
cld
mov
or
lock
add
sbb
icebp
hlt
fcomp
leave
mov
(bad)
xchg
sub
mov
and
add
dec
ja
jmp
inc
dec
test
cmp
iret
es
pop
xchg
mov
shl
ins
mov
ret
int
lock
pushf
iret
and
cmp
add
mov
sbb
mov
adc
(bad)
sub
inc
or
jmp
xor
push
jo
scas
xchg
outs
mov
imul
sbb
mov
(bad)
mov
mov
inc
sbb
retf
fisubr
or
jo
mov
mov
pop
adc
sti
jmp
fwait
adc
lods
fcom
push
push
popa
div
mov
dec
fadd
mov
push
and
popa
and
pop
jmp
fimul
xchg
lods
mov
cli
pop
pop
aad
or
ins
xchg
xchg
icebp
(bad)
pop
jne
fdivp
test
jbe
pop
add
out
mov
push
popf
inc
in
xor
add
pop
inc
shl
out
stos
outs
(bad)
mov
push
jge
adc
pop
in
mov
add
pop
sbb
mov
jmp
sbb
jge
sbb
or
or
sub
scas
imul
imul
out
cmps
pop
adc
cmps
xor
test
js
add
mov
inc
repnz
inc
and
daa
mov
sti
sbb
pop
fisub
pop
(bad)
cmp
(bad)
cld
push
or
xchg
arpl
push
dec
or
data16
mov
pop
int
cmp
pop
popa
push
jecxz
mov
movs
xchg
cmp
cmp
mov
je
ds
int3
mov
in
sub
sub
xchg
dec
add
adc
imul
xor
mov
sub
xor
adc
movs
retf
pushf
mov
inc
adc
sub
xchg
xor
pop
fwait
lock
loopne
out
std
aaa
add
push
dec
adc
pop
push
sbb
fs
fsub
aad
sbb
cmp
out
ret
movs
mov
icebp
cmp
add
mov
iret
sbb
mov
or
loope
loopne
dec
lahf
popf
xor
fld
sbb
sub
mov
mov
mov
push
dec
mov
call
mov
xor
adc
push
pop
xor
or
push
dec
adc
jmp
cmp
les
mov
dec
pop
xor
xchg
bnd
jo
dec
cmp
(bad)
test
rol
inc
adc
lahf
pop
add
clc
cmp
aad
pop
in
dec
clc
mov
out
sub
(bad)
call
adc
pop
leave
data16
or
sar
nop
lea
dec
pop
mov
in
ret
fstp
dec
lock
pop
mov
aas
mov
xchg
sub
sahf
adc
lock
xchg
outs
jne
xchg
mov
sbb
adc
sti
and
mov
clc
sbb
pop
test
dec
push
push
jecxz
lods
test
cs
mov
popa
pop
push
push
shr
shl
in
mov
aam
push
sbb
addr16
pushf
es
ds
hlt
lds
mov
adc
popa
push
ins
inc
pusha
not
out
adc
data16
adc
dec
dec
mov
pop
loop
in
es
jb
out
aas
push
test
mov
xor
cld
pop
xor
test
and
(bad)
lods
push
mov
rcr
xor
xor
(bad)
cmps
pop
call
fs
ror
fist
mov
loopne
jle
data16
cwde
enter
pop
es
jg
aam
ret
sub
enter
inc
inc
dec
lahf
stc
mov
lea
sahf
enter
xor
ja
add
leave
cmps
data16
icebp
sti
xlat
mov
ficom
jecxz
out
mov
add
jns
and
retf
int
cdq
scas
test
cmp
lahf
inc
hlt
call
shl
mov
fidivr
imul
fwait
inc
ja
sahf
inc
repz
xchg
sub
retf
cmp
add
jmp
jb
mov
(bad)
cmps
push
jno
jb
mov
icebp
sub
daa
movs
xchg
shr
xor
es
inc
out
daa
pop
fist
mov
mov
xchg
sub
jg
push
ror
mov
ss
rcl
jnp
out
and
sub
or
repnz
push
inc
lods
fs
and
neg
cmc
add
inc
jo
cdq
pop
xchg
test
sub
xor
mov
imul
sub
mov
pop
je
(bad)
cli
cmp
test
ret
cdq
loopne
lds
daa
sub
or
xor
and
enter
hlt
pop
sbb
(bad)
ss
dec
fidivr
bound
daa
adc
jae
repnz
ja
or
add
lds
xlat
sti
jmp
lods
jns
ins
cwde
jmp
inc
lea
stc
scas
pop
in
ret
repnz
mov
retf
push
frstor
sub
or
mov
sub
(bad)
mov
dec
leave
cmps
(bad)
or
xchg
add
test
push
xchg
cmp
cmc
sub
fxtract
fs
hlt
adc
push
jo
das
inc
cmps
push
adc
scas
cmp
mov
outs
dec
cmp
jmp
dec
mov
mov
pop
out
add
cdq
mov
loopne
fdiv
sbb
mov
or
aad
cs
out
jp
add
fbld
(bad)
jae
stc
dec
loopne
push
(bad)
fistp
add
push
add
push
fdiv
jns
cmc
into
mov
in
es
mov
or
cli
push
cmps
test
mov
popa
out
aam
in
jne
xor
aas
ds
add
mov
sar
shl
push
cmp
mov
jle
popf
mov
xor
xor
pop
mov
or
bound
sbb
popf
test
push
dec
sub
add
pop
xchg
jne
(bad)
(bad)
and
push
in
or
jmp
pop
ss
or
test
push
outs
mov
or
mov
rcr
sub
push
std
sub
movs
icebp
add
xchg
xchg
mov
jbe
add
popa
mov
sahf
mov
mov
mov
jae
in
mov
pop
out
sub
scas
pushf
push
and
push
sar
das
adc
pusha
retf
jbe
add
adc
pop
dec
shrd
inc
fwait
and
mov
movs
push
mov
pop
in
ja
sub
retf
out
retf
loope
push
xchg
in
jns
(bad)
xchg
fbstp
(bad)
leavew
fcom
xor
or
mov
scas
mov
sti
sub
bound
xchg
xchg
test
pop
mov
xchg
es
pop
mov
out
pushf
fwait
std
imul
add
and
inc
and
cld
jno
mov
fdiv
xor
test
push
or
jmp
push
mov
imul
push
mov
ss
cld
jnp
call
addr16
jge
mov
clc
sbb
mov
popf
sbb
loop
inc
repz
cwde
dec
jmp
pushf
mov
xor
inc
repnz
arpl
aas
leave
inc
outs
mov
ins
add
add
cmp
xchg
or
and
out
cmc
ret
clc
xor
pop
mov
xchg
mov
ret
mov
push
sahf
cmp
jae
mov
and
fimul
dec
dec
mov
pop
je
sbb
and
xor
dec
scas
jge
lea
cmp
pop
and
adc
xchg
xchg
sub
inc
jns
pop
cli
jns
and
jp
stos
jl
pop
or
inc
push
sub
mov
xlat
add
push
fcom
cli
pop
and
retf
dec
xor
stos
dec
jbe
and
shl
das
xlat
fdivr
adc
or
lods
add
xchg
out
test
test
inc
jae
xchg
cmps
loope
repnz
sub
rcr
test
xchg
aas
push
pop
push
fsubr
jecxz
dec
aam
xor
jp
sbb
adc
ret
nop
jg
movs
fstp
inc
test
shl
adc
inc
mov
push
mov
outs
xchg
(bad)
sbb
cli
xchg
mov
pop
adc
retf
dec
add
call
jmp
dec
dec
jbe
xor
movs
ds
stc
xchg
jp
int3
mov
out
mov
enter
stos
popf
pop
push
fyl2x
(bad)
fistp
icebp
arpl
retf
loopne
jl
xchg
mov
xor
sbb
xor
(bad)
sti
cmp
fst
mov
dec
cld
pop
mov
mov
cmovs
jne
(bad)
movs
sbb
and
xor
sub
adc
data16
(bad)
in
push
sbb
cmp
out
xchg
ror
add
dec
mov
test
push
mov
or
mov
xor
push
pop
hlt
xor
ja
retf
jbe
or
addr16
ja
sub
cmps
hlt
sbb
ffree
inc
fsubrp
adc
push
cdq
ins
xchg
cmp
gs
cli
out
cmp
in
(bad)
je
es
pop
push
jno
pop
mov
mov
es
push
push
call
loope
mov
jmp
arpl
movs
jl
dec
pop
sub
mov
jnp
movs
rcr
push
push
mov
xor
das
jmp
lods
call
daa
gs
or
popa
mov
mov
jmp
sbb
bnd
(bad)
ret
mov
add
dec
dec
int
jp
(bad)
xor
(bad)
rcl
cdq
add
push
mov
xchg
das
mov
aaa
push
cdq
cmp
mov
mov
mov
pop
ret
repnz
xchg
call
mov
jbe
sbb
adc
xchg
pop
repz
xchg
inc
mov
loopne
cmp
in
jp
push
adc
fwait
add
fidiv
shl
jge
pop
repnz
out
and
pop
sar
cmp
call
mov
fs
and
push
test
cmp
cmp
pop
pop
in
jg
jp
pop
dec
jl
pop
pop
sub
jbe
inc
mov
lock
loopne
push
hlt
or
arpl
jb
retf
scas
sti
jmp
add
sbb
jmp
hlt
add
add
mov
scas
cmp
jo
push
fiadd
in
sar
or
push
ds
hlt
and
xor
mov
jp
outs
cmp
pop
fisttp
and
je
mov
je
cmps
push
add
(bad)
sbb
sub
or
cli
cmp
push
je
mov
iret
mov
fdivr
mov
aad
test
inc
dec
repz
test
sub
xor
fldpi
out
mov
pop
mov
stos
sub
fwait
loopne
aaa
inc
xchg
hlt
cmp
inc
sub
repnz
cld
les
add
mov
int3
mov
icebp
push
mov
fistp
xchg
and
adc
shr
push
sbb
movs
pusha
mov
dec
out
adc
push
mov
iret
mov
out
pop
jae
xor
jne
(bad)
dec
mov
arpl
lds
sub
sbb
mov
ja
sub
xor
sub
jecxz
fadd
test
inc
fs
fstp
sbb
cmps
shl
dec
mov
test
sbb
mov
dec
(bad)
clc
jns
popa
cmp
(bad)
out
sti
(bad)
adc
sar
inc
jecxz
movs
xchg
fsubr
adc
vpaddq
and
sub
xlat
sub
add
hlt
sbb
in
pop
fldenv
inc
dec
adc
jmp
mov
out
(bad)
dec
bound
scas
push
or
es
add
adc
xor
in
push
enter
push
popf
retf
addr16
rol
mov
ja
je
mov
stos
jb
or
sbb
inc
mov
test
lds
add
add
pop
or
gs
stos
mov
aas
mov
pop
cmp
enter
stc
imul
inc
loope
sysenter
inc
push
mov
cmps
lahf
(bad)
out
pop
mov
and
fsubr
mov
pushf
dec
mov
fwait
jge
and
sub
mov
and
scas
or
dec
dec
mov
push
mov
cmp
dec
ret
or
dec
mov
and
push
add
std
dec
add
ins
inc
out
push
fcom
dec
lods
sbb
(bad)
ja
dec
scas
popa
loope
mov
int3
pop
loope
(bad)
std
mov
jnp
mov
(bad)
add
mov
add
call
xchg
in
bound
retf
stos
sbb
ret
lods
ss
arpl
sbb
leave
sub
rcr
ret
inc
xor
dec
(bad)
out
xor
cmp
in
jbe
jo
aad
sub
xor
adc
and
cld
and
pop
rcr
mov
stos
mov
sub
jno
(bad)
cmc
pop
push
pusha
xchg
daa
jmp
add
repnz
xor
outs
or
mov
into
loope
push
sahf
dec
mov
mov
cmp
mov
pop
aas
ret
rcr
bound
shl
push
push
ds
or
clc
mov
jle
loope
pushf
scas
add
stc
mov
test
test
lock
xor
jne
adc
test
ficomp
fistp
pop
sbb
ds
std
ficom
in
mul
stc
or
test
mov
loopne
pop
mov
pop
popa
pop
inc
jmp
jmp
shl
stos
lds
sar
icebp
in
xor
inc
mov
xor
pushf
xor
rcr
mov
mov
jb
(bad)
rol
(bad)
mov
std
stos
enter
dec
or
jb
outs
test
adc
pop
jg
inc
sub
inc
dec
icebp
jo
fisttp
jb
inc
ins
adc
sbb
push
jnp
loop
and
add
pushf
stos
push
push
mov
jns
clc
mov
test
jmp
push
(bad)
retf
sbb
push
dec
jmp
lds
cmp
test
loopne
and
or
cdq
push
cmp
scas
jl
fwait
movs
fwait
adc
cmp
jl
fadd
cmc
jmp
pop
int3
adc
adc
cmps
mov
or
sub
cmp
into
in
cmp
xor
(bad)
pop
shl
mov
add
sub
movs
dec
sbb
sub
out
sbb
out
mov
jo
inc
mov
xor
movs
mov
mov
push
and
and
std
push
sub
dec
shl
or
(bad)
fdiv
jno
mov
rcl
add
fdiv
xor
xchg
push
pushf
push
fld
popa
jmp
add
add
sbb
cmp
rcl
rcl
cmp
dec
stos
fnstenv
mov
cwde
push
ja
sbb
mov
ror
popa
push
add
ficom
xlat
adc
pop
retf
cwde
scas
sub
mov
or
cld
ss
in
fsubr
stos
and
sbb
es
jecxz
jl
cmc
push
rcr
sub
(bad)
int
xchg
addr16
popf
dec
mov
xchg
mov
mov
pop
int
jmp
call
(bad)
mov
dec
outs
nop
adc
and
arpl
pop
lds
addr16
test
and
add
inc
or
sar
aam
fistp
sbb
dec
sub
call
int
xor
ficom
ficom
mov
add
mov
mov
jb
test
call
mov
shr
loopne
jp
cmp
jo
jmp
xor
mov
movs
clc
pusha
je
fistp
dec
push
jnp
clc
inc
ja
mov
jge
xchg
xchg
sti
pop
daa
mov
jb
xchg
jmp
fmul
mov
ins
shl
sub
adc
push
cdq
jmp
sub
shr
fdivr
fistp
jae
mov
ins
jnp
cmp
mov
test
cmps
mov
add
pushf
pop
lock
leave
sbb
push
ret
rol
push
mov
mov
out
out
xor
and
or
dec
xor
movs
aaa
imul
mov
ss
rol
mov
jmp
mov
mov
ds
jne
xchg
sub
ret
je
push
dec
shr
pusha
test
ror
test
loop
repz
pop
xchg
aam
inc
lahf
mov
out
cld
pop
inc
faddp
out
jne
push
mov
icebp
jecxz
ret
jbe
ror
xchg
sar
cmp
rcl
into
std
in
xor
xchg
jns
jg
mov
add
adc
fmul
push
adc
xchg
gs
xchg
push
mov
icebp
pop
sbb
shr
out
xchg
inc
outs
mov
or
and
je
mov
mov
stos
or
clc
addr16
in
mov
aas
lods
xlat
dec
push
jg
popa
(bad)
cmps
sub
add
push
and
icebp
dec
inc
or
ins
pop
jmp
inc
push
and
sbb
sbb
adc
movs
and
adc
mov
mov
inc
mov
test
xlat
das
inc
or
fxch
xchg
call
(bad)
push
call
push
sub
idiv
ret
into
mov
mov
aaa
shr
sbb
add
dec
std
fisttp
addr16
dec
cmps
repnz
sar
mov
push
mov
in
pop
jp
mov
das
adc
loope
push
imul
jo
sbb
fld
popf
or
mov
rol
mov
popa
xor
cmc
mov
fnstcw
dec
retf
movs
dec
jne
mov
mov
outs
test
arpl
test
and
xchg
call
dec
sub
movs
and
cdq
jmp
inc
cmps
jp
(bad)
xchg
jne
bound
mov
and
test
mov
pushf
test
lock
das
xchg
ret
or
sti
xchg
cmp
sub
sbb
jmp
xor
repz
or
aas
or
popa
and
xchg
and
or
test
bound
std
or
dec
mov
imul
test
(bad)
push
movs
push
dec
(bad)
std
add
stos
sub
pop
dec
mov
in
repz
or
aaa
shl
mov
retf
(bad)
rol
or
pop
lods
add
imul
jae
push
fistp
loop
push
aad
les
cdq
test
pop
and
cmc
cli
into
cmp
xchg
jo
sub
lea
mov
mov
daa
call
mov
out
cmp
arpl
xlat
mov
cmps
adc
or
movs
pusha
dec
pop
rol
mov
pop
mov
pop
mov
pop
(bad)
push
jbe
pop
aam
cmp
daa
enter
in
jecxz
stos
sbb
cdq
sub
xor
call
jmp
loope
or
mov
(bad)
aas
enter
and
rol
loope
jmp
pop
jle
(bad)
inc
retf
call
loop
adc
mov
add
stos
sbb
ins
xor
retf
add
mov
mov
ja
bound
imul
dec
dec
sbb
mov
pop
popf
add
or
int3
mov
push
pop
ja
push
test
shl
xchg
add
mov
and
sub
dec
fnstenv
inc
mov
int
into
adc
sbb
push
ja
sub
add
jo
jl
outs
push
fistp
mov
adc
into
cli
mov
mov
les
popf
jmp
fisub
call
jne
cdq
cmc
idiv
(bad)
loopne
sti
test
pop
lahf
fs
movs
daa
sbb
pop
cmps
xchg
jl
imul
clc
stos
dec
aas
mov
out
dec
mov
clc
sub
push
sub
sub
dec
pop
sub
or
push
or
call
out
ins
mov
dec
add
and
aaa
(bad)
mov
pop
sbb
mov
nop
sub
add
test
sar
xor
fwait
xchg
sbb
cwde
cmps
fisttp
ds
and
mov
repnz
(bad)
jns
dec
clc
dec
fidiv
retf
fsubr
aad
mov
stc
cdq
clc
cli
sub
adc
hlt
adc
xchg
mov
adc
jne
fstp
add
movs
test
repnz
mov
pushf
out
dec
mov
stos
jno
mov
lock
dec
adc
fcmove
loopne
das
gs
mov
mov
mov
mov
xchg
sbb
mov
rcl
inc
or
mov
stc
ins
jno
fwait
xchg
mov
add
xchg
(bad)
ja
cmp
ins
popf
inc
and
jl
push
jecxz
or
int
int
cmp
in
mov
movs
mov
adc
neg
adc
es
mov
adc
into
cmp
cmps
jl
stos
jae
(bad)
jmp
leave
mov
les
out
mov
or
or
addr16
mov
add
inc
and
xchg
outs
int3
aaa
sbb
and
cmp
xlat
outs
dec
fld
cli
add
shr
mov
sbb
js
mov
sub
jb
jns
shl
dec
out
add
mov
mov
pop
and
mov
ror
sub
inc
or
xchg
xchg
mov
xchg
int
xchg
mov
jecxz
adc
fsub
cmc
mov
test
lods
cmp
outs
push
lock
movs
jecxz
outs
imul
or
ins
cmp
loop
int3
jns
pop
test
hlt
sub
mov
daa
aas
fidivr
shr
adc
inc
gs
cmc
or
fisubr
movs
fdivr
stc
addr16
mov
fstp
xchg
push
out
std
cmp
mov
inc
inc
imul
aad
add
jmp
imul
xchg
je
sbb
sti
add
dec
cmp
hlt
imul
ror
sbb
mov
aaa
push
clc
add
jle
(bad)
icebp
dec
sbb
push
cmp
jae
(bad)
das
mov
sub
xor
sub
(bad)
lahf
mov
lods
adc
jmp
sub
std
outs
xchg
and
jge
xchg
mov
sub
sar
mov
fwait
imul
pop
addr16
fs
js
daa
ficomp
and
imul
pop
cwde
cmp
std
out
pop
and
out
lock
call
jle
test
shl
add
mov
ror
rcl
jl
sbb
mov
(bad)
rcl
adc
mov
push
mov
hlt
pushf
mov
fadd
mov
adc
mov
ins
ss
sbb
cmp
cdq
push
fld
xchg
rcr
stos
and
mov
call
jo
aas
inc
(bad)
cs
mov
cli
(bad)
outs
cld
jmp
inc
mov
imul
fidivr
nop
xchg
in
xchg
fisubr
fyl2x
adc
push
mov
rcpps
stos
aas
cmp
inc
jns
arpl
test
mov
jmp
push
std
lods
xchg
push
cli
(bad)
(bad)
das
retf
iret
ins
lea
sub
dec
xchg
pop
cmps
sbb
jnp
movs
ror
sbb
loopne
cmp
loop
mov
cwde
and
or
inc
scas
cmp
call
fistp
pop
or
out
pop
mov
inc
pop
add
retf
aam
push
and
pop
iret
mov
push
movs
jnp
sbb
xor
div
sub
gs
push
sahf
mov
(bad)
je
mov
jb
in
sbb
pop
lods
dec
cmp
(bad)
ins
cmc
pushf
ds
pop
add
jecxz
or
sbb
and
mov
jl
dec
loop
xor
xchg
retf
addr16
ret
aad
sub
in
test
xchg
and
adc
shl
stos
mov
mov
add
popa
xchg
cmp
mov
hlt
cs
inc
out
or
push
(bad)
xor
icebp
jo
sahf
cmps
jne
ret
out
and
sub
mov
aaa
jbe
adc
xchg
jp
fnstcw
jmp
and
mov
jne
loop
add
or
sbb
in
xchg
stc
es
inc
aas
xor
cmp
adc
clc
js
scas
sub
cmp
cdq
aas
fistp
or
aaa
popf
xor
cdq
mov
jne
(bad)
ror
or
icebp
adc
in
rcr
lahf
cwde
gs
test
ss
sub
mov
div
(bad)
cmc
(bad)
ss
sar
push
loopne
sar
ror
jae
xor
jl
push
jbe
pop
mov
pop
push
mov
sti
test
test
ja
pop
gs
in
mov
ret
push
mov
mov
push
sub
xchg
jmp
pusha
inc
data16
mov
pop
push
out
and
sub
lahf
add
popa
push
add
es
cmps
cmps
imul
mov
loopne
sub
in
nop
lods
jae
clc
ret
inc
enter
pop
and
popa
mov
in
test
ds
jl
je
add
rcl
cmp
or
or
cwde
sbb
mov
rol
or
sbb
cmp
push
js
sbb
mov
imul
jg
call
test
jg
xchg
mov
dec
fcomi
repnz
add
int3
sub
stos
cmps
les
iret
retf
ret
iret
mov
int3
sub
xchg
pop
xor
xchg
push
and
sbb
pop
popa
mov
jae
mov
(bad)
scas
(bad)
and
xlat
test
pop
and
test
push
mov
dec
push
xchg
mov
and
or
jge
cmp
mov
js
stos
out
ret
sub
fs
out
and
mov
mov
test
movs
int
rcr
cmp
jae
enter
outs
jo
pop
mov
(bad)
rol
inc
lock
movs
ja
or
mov
and
dec
ins
pop
and
repz
inc
in
cmps
or
test
retf
rol
sub
(bad)
lods
iret
or
pop
dec
jmp
pushf
and
xor
jnp
not
scas
iret
mov
sbb
pop
test
cdq
sar
push
outs
xor
mov
ins
into
sub
xor
push
in
ins
jmp
cmc
sar
dec
jo
cwde
mov
mov
shl
stos
cmc
jge
cdq
xlat
mov
add
fwait
jne
jno
hlt
int
ret
or
xchg
push
and
and
and
xor
sub
mov
popa
and
jmp
adc
inc
xchg
fcomp
cmc
sbb
push
sub
push
pop
pushf
or
mov
mov
xlat
aaa
mov
inc
psllq
mov
and
out
je
mov
pop
cmp
jmp
cmp
xor
pop
and
push
pop
(bad)
mov
outs
mov
enter
mov
mov
icebp
fisubr
add
test
mov
mov
lods
and
xor
jecxz
(bad)
xchg
xchg
(bad)
inc
cmp
aaa
stos
jmp
mov
enter
adc
push
inc
fld
xor
sub
push
ret
jbe
scas
cwde
sub
sbb
xor
mov
in
xor
dec
ja
mov
test
lea
sar
sbb
ja
pop
pop
inc
jnp
mov
out
and
xor
push
or
sbb
rol
mov
movs
rol
test
outs
xor
sbb
ins
iret
adc
shl
pop
add
cmp
fstp
mov
jae
or
(bad)
into
retf
js
xor
push
push
push
js
push
inc
pop
mov
xchg
push
ror
lea
or
hlt
add
mov
(bad)
sahf
add
scas
iret
dec
rol
data16
das
mov
imul
popa
test
lods
vpmacsdd
fistp
or
xchg
mov
movups
and
mov
ret
push
lods
hlt
scas
or
push
mov
stos
hlt
sbb
adc
in
mov
cmps
dec
loopne
push
mov
popa
push
jo
cdq
mov
lods
nop
adc
sbb
jecxz
mov
and
aaa
dec
mov
push
cld
in
loop
aad
mov
push
iret
push
cli
js
mov
lods
inc
fidiv
push
sub
iret
icebp
and
jg
xchg
cmp
sbb
pop
sar
xchg
or
sub
or
cld
fwait
inc
aad
and
and
jp
add
add
cmp
adc
pop
xchg
mov
cli
adc
stos
push
xchg
stc
xrelease
xchg
cs
add
mov
push
cwde
add
(bad)
or
and
xor
sti
shl
arpl
add
jge
pop
pushf
pop
push
cmp
mov
movs
and
cli
ins
scas
pop
xchg
mov
rol
cwde
mov
xchg
ja
mov
or
xor
jmp
xor
test
jle
mov
add
dec
xlat
(bad)
xor
test
shl
cli
or
scas
mov
pop
outs
jmp
stos
fisttp
cmp
inc
sub
or
jae
lods
gs
repnz
jns
or
mov
lods
(bad)
sbb
pop
xchg
(bad)
das
pop
inc
or
sub
pop
xor
or
inc
mov
daa
std
sbb
sbb
data16
xchg
cmps
jle
push
xor
movs
test
sbb
cdq
shl
loop
(bad)
iret
mov
jmp
mov
inc
fwait
stos
loopne
mov
xchg
mov
mov
out
mov
mov
imul
dec
cmp
hlt
pop
dec
sub
jnp
xchg
mov
jno
sub
fcomi
sbb
push
inc
cmp
xor
mov
test
sbb
mov
jg
pop
sub
jno
sbb
push
xchg
inc
fs
(bad)
test
and
or
shl
or
mov
jg
jb
adc
xlat
out
movs
or
in
xchg
(bad)
jno
outs
jns
mov
movs
lahf
inc
and
adc
mov
sbb
out
std
in
sti
dec
cmc
scas
push
int
mov
add
mov
jmp
sub
mov
sub
and
dec
inc
xor
and
xchg
jno
int3
jne
push
lods
hlt
ds
cli
test
pop
scas
xchg
das
push
popf
xor
mov
sbb
aas
in
xchg
and
xlat
popf
xor
enter
test
retf
es
cmps
out
jl
mov
test
ss
rol
call
iret
sbb
jnp
sti
adc
iret
xchg
dec
(bad)
cmp
mov
in
mov
sub
loop
ja
pop
xchg
inc
sbb
test
mov
test
cmc
outs
jl
push
pop
daa
push
add
dec
cs
les
sbb
inc
or
outs
and
mov
xchg
scas
xor
and
and
push
clc
cmp
movs
xor
call
ins
(bad)
sahf
into
leave
call
dec
ret
lock
jb
lock
jmp
jecxz
gs
add
mov
cli
loopne
rcr
jmp
loop
or
dec
rol
int
(bad)
jno
test
call
lock
test
imul
in
sub
ficomp
fmul
pop
inc
inc
nop
icebp
mov
xchg
xor
mov
imul
adc
scas
mov
fcom
mov
xchg
jge
icebp
jbe
clc
enter
leave
(bad)
call
sub
test
clc
mov
cbw
in
rol
inc
movs
not
daa
in
ret
cmc
push
dec
cld
push
mov
sub
ret
add
sub
inc
enter
les
in
ss
cmc
inc
call
arpl
outs
sbb
cmps
push
je
(bad)
movs
adc
mov
ret
sbb
vmread
fwait
lock
sub
xchg
or
aaa
aas
sub
xor
sub
push
es
or
gs
sbb
sti
retf
mov
ins
sub
jl
aad
fcomp
loopne
loopne
jb
fs
dec
pop
in
data16
retf
cmp
enter
in
or
enter
push
pushf
cmc
add
cmp
mov
inc
out
xchg
pop
and
retf
loop
outs
jo
and
out
adc
ret
mov
movs
sub
test
mov
inc
cmps
lahf
in
ror
scas
mov
mov
inc
and
ds
test
xchg
fdivr
retf
popf
test
dec
sub
xlat
in
repz
imul
gs
sbb
ja
test
dec
cli
(bad)
cmp
dec
test
test
pusha
pop
xlat
mov
mov
and
js
je
retf
retf
dec
out
test
fsubrp
rcl
sbb
and
(bad)
mov
(bad)
in
jge
test
jae
jne
cmps
test
inc
int
mov
dec
ins
test
data16
ficom
mov
mov
cmp
jbe
arpl
stc
dec
push
sbb
inc
inc
mov
xchg
repnz
jae
sub
sub
or
add
test
daa
sub
lea
xchg
inc
push
imul
sub
push
adc
cli
jle
pop
(bad)
stos
bound
ror
push
mov
xor
xchg
in
pop
lock
pop
fisttp
out
stos
retf
inc
jns
add
sub
cmp
sbb
gs
xchg
arpl
xchg
pop
stos
cld
add
pop
lock
add
hlt
inc
cmps
clc
adc
scas
popa
mov
ins
cmp
adc
xor
or
call
ret
dec
aam
(bad)
xchg
mov
ins
mov
and
xor
out
dec
adc
lahf
repnz
jg
enter
pop
jle
push
or
or
mov
loopne
or
cwde
daa
movq
jbe
pop
test
push
les
dec
scas
ror
or
out
ja
gs
pop
lods
(bad)
mov
and
sbb
out
add
xor
inc
adc
mov
iret
adc
push
pop
xor
arpl
repz
rep
jno
ret
mov
push
fs
adc
iret
fisub
lock
cmp
fist
nop
and
jo
aad
cmp
mov
push
sbb
nop
repnz
int
ds
pusha
jge
movs
dec
lock
or
cmp
mov
sub
das
pop
test
cmp
ins
xchg
retf
add
lds
xor
and
mov
sub
pop
pop
pop
add
les
add
(bad)
push
inc
mov
sub
mov
clc
(bad)
adc
aas
cs
sub
push
fbstp
cmc
inc
retf
push
sub
cmc
(bad)
fldenv
xor
leave
jg
into
ss
repnz
or
xchg
add
call
inc
xchg
cs
xchg
jns
into
outs
dec
cmp
jmp
mov
(bad)
mov
movs
jae
stos
pop
or
aam
hlt
inc
out
cmp
pusha
mov
and
ins
pushf
cmp
cmp
clc
iret
sti
jl
xchg
sbb
add
rol
xchg
sub
lock
mov
std
in
pushf
inc
xor
pop
idiv
push
(bad)
retf
sti
pop
fcom
pop
inc
pop
mov
mov
inc
pop
stc
dec
jge
repnz
xchg
pusha
mov
dec
add
sbb
inc
daa
add
mov
cmp
stos
jmp
xchg
pushf
push
xchg
cdq
nop
sti
pop
aad
xor
enter
add
cmps
mov
inc
mov
lods
dec
jg
fmul
dec
retf
addr16
mov
and
test
movs
push
or
jp
and
test
addr16
jmp
movs
dec
bound
jecxz
fcmovu
xchg
mov
or
dec
sar
mov
cmp
scas
and
(bad)
sub
ins
pop
gs
cmp
mov
dec
and
cmps
add
ja
fs
out
push
jl
cwde
sub
mov
movs
sub
mov
ins
js
popa
jl
mov
iret
rcl
push
addr16
cmps
adc
fisub
jno
call
div
shr
mov
pusha
scas
jno
out
ror
fild
inc
bound
dec
inc
pop
and
test
enter
ins
ror
cmps
out
push
push
mov
jecxz
call
icebp
stos
sub
les
mov
daa
cmp
xor
inc
push
mov
leave
adc
and
test
mov
test
mov
cmps
push
inc
adc
icebp
das
jmp
popf
jne
push
sbb
fs
sbb
fistp
mov
fwait
sub
pop
mov
sub
inc
and
mov
xor
push
lock
jno
cdq
scas
(bad)
adc
cmp
into
add
imul
scas
adc
in
jmp
(bad)
push
push
mov
xchg
push
shl
add
call
push
jmp
pushf
push
sbb
sub
pop
inc
retf
mov
mov
popa
mov
shl
adc
packsswb
test
jge
jo
xchg
push
rcl
ins
popa
pop
add
mov
dec
fwait
movs
inc
lds
lock
cmp
pop
in
and
pushf
or
outs
enter
pusha
jmp
jg
add
dec
rcl
std
mov
shr
into
lock
sahf
ins
call
outs
cdq
dec
push
jg
cmps
mov
adc
cmp
jne
xchg
mov
sbb
add
adc
pop
je
pop
shl
lahf
(bad)
jmp
aaa
pop
inc
inc
int
xchg
mov
mov
dec
xor
scas
fmul
mov
pop
imul
pusha
xor
dec
cmp
fwait
test
(bad)
bound
xor
inc
pop
xchg
jbe
jp
cmp
dec
cmp
ds
inc
out
repnz
xor
pop
sub
pop
icebp
bound
retf
sbb
shl
(bad)
(bad)
pop
xlat
out
xor
pusha
xchg
and
push
call
fldenv
in
pop
lea
test
push
inc
ret
sbb
cmp
aas
sti
mov
test
cmp
and
loop
xchg
sub
mov
mov
sub
fcmovnb
xchg
mov
dec
sub
in
movs
sub
xor
imul
fs
pop
jmp
jmp
mov
aas
inc
fcomp
dec
retf
int3
or
mov
jmp
pop
pop
jmp
pop
add
out
int
push
mov
iret
push
movs
pop
test
test
mov
dec
sar
jno
(bad)
push
(bad)
or
mov
ss
pushf
fistp
cli
adc
push
aaa
push
pop
aad
int3
mov
sar
jb
(bad)
adc
in
cmc
retf
stos
cld
hlt
sub
call
cmp
retf
shr
inc
xor
mov
movq
add
xchg
dec
or
das
mov
js
clc
cmp
fldcw
mov
mov
imul
fcmovnb
mov
or
iret
inc
add
iret
cs
and
or
imul
pop
hlt
push
or
icebp
cmp
scas
mov
je
std
scas
and
xor
(bad)
out
stos
popa
call
fiadd
jo
jns
loopne
and
lock
stc
mov
ret
dec
lds
add
sub
es
fmul
jno
push
pop
data16
test
test
aad
pop
push
and
mul
xchg
sbb
pop
pop
in
gs
aam
sbb
int3
outs
in
push
xor
(bad)
jae
jge
int3
cmp
fist
inc
and
in
or
test
add
out
inc
loopne
rcl
out
test
les
pop
and
pushf
add
mov
mov
cmp
loop
cmp
mov
sub
daa
repz
stc
xor
dec
mov
adc
sahf
sbb
add
pop
enter
or
test
fadd
dec
(bad)
push
xor
pop
retf
or
aad
lea
pusha
fdivp
cwde
mov
iret
dec
cdq
add
xor
and
inc
fnstsw
(bad)
lds
iret
pop
int3
int3
les
cdq
inc
jmp
xor
mov
nop
gs
loope
fwait
lea
mov
(bad)
xor
xchg
cli
sbb
jmp
aam
les
pop
test
in
mov
shl
loope
push
mov
push
test
jmp
or
mov
ss
add
loop
cwde
not
jno
cmp
inc
stos
ds
outs
ds
xchg
sub
das
jbe
mov
mov
mov
aas
popa
ins
sahf
push
jl
inc
aas
repnz
repz
mov
mov
or
mov
xlat
je
addr16
dec
xchg
cmps
mov
dec
mov
jg
cld
in
(bad)
pop
add
outs
lods
(bad)
jnp
add
add
imul
outs
cmp
cwde
cmc
out
lahf
push
mov
adc
or
mov
push
mov
pop
push
icebp
inc
pop
add
imul
sub
or
pusha
pop
lock
retf
cmp
cwde
xchg
jnp
sbb
mov
or
dec
arpl
shl
xchg
xor
mov
scas
loope
fdiv
dec
and
inc
add
movs
aad
xor
mov
or
cmp
xor
or
(bad)
mov
lahf
rol
jne
lea
ja
lods
mov
(bad)
int
fsub
aaa
stos
fsubr
jo
fs
lock
mov
pop
xchg
xchg
xor
inc
push
std
cmp
rcr
(bad)
sbb
sub
aam
lahf
and
mov
mov
sbb
jne
cmp
dec
(bad)
lods
xor
test
xchg
mov
lock
imul
sar
jno
and
pop
push
dec
pop
icebp
iret
add
cmps
cmp
inc
pop
pop
jg
cld
inc
pushf
(bad)
cwde
ins
inc
inc
into
jmp
add
ds
jne
ja
push
in
mov
xchg
ficom
neg
mov
shr
ins
jg
or
(bad)
push
iret
mov
out
sti
jmp
push
aad
sbb
jb
call
retf
pop
fmul
sti
sub
jns
(bad)
sti
(bad)
loop
mov
jl
ja
enter
mov
sub
rcr
pop
outs
out
adc
fwait
cld
inc
test
div
xor
out
mov
jae
pushf
jo
adc
outs
fcmove
xchg
nop
out
cmp
pop
popf
lock
stos
clc
ins
stos
mov
int
or
dec
push
xor
jne
mov
test
or
icebp
mov
ret
lock
jmp
cmp
out
adc
push
pop
outs
and
inc
test
in
adc
xchg
jb
sub
leave
mov
ror
popf
sub
jbe
(bad)
pop
(bad)
cdq
jecxz
xchg
sub
outs
inc
hlt
fwait
mov
jmp
sub
ins
xchg
in
imul
and
pop
and
(bad)
sub
cmp
mov
cmp
into
mov
push
es
sti
jl
pop
in
mov
mov
(bad)
push
sub
mov
mov
adc
sub
stos
mov
cmp
out
mov
inc
mov
ret
enter
es
and
cli
stc
dec
in
jo
xor
loopne
pop
inc
mov
sub
mov
or
call
inc
fiadd
push
and
pop
retf
mov
in
mov
adc
sahf
sti
add
jl
(bad)
cld
out
dec
call
mov
jae
push
popf
cdq
push
push
xchg
push
out
sub
mov
scas
or
nop
push
xor
mov
dec
loope
sar
jp
inc
jp
or
(bad)
pop
dec
les
daa
shl
cmc
mov
inc
call
cdq
jnp
in
ret
inc
ja
jmp
jecxz
cwde
sahf
mov
inc
sahf
push
fidiv
mov
push
add
cmps
lods
jle
addr16
mov
fist
cmp
lods
mov
leave
cmps
imul
mov
cmps
cli
loop
pop
push
pop
call
rcr
das
mov
pop
mov
lock
ja
int3
test
or
aas
loope
int3
sti
jmp
nop
out
mov
push
jle
pusha
mov
pop
popa
movs
push
neg
repnz
mov
push
xchg
(bad)
call
xor
mov
inc
mov
inc
aas
fiadd
pop
scas
test
sub
cmc
(bad)
repnz
ds
outs
cmp
sub
pop
loop
jae
push
jl
std
(bad)
and
add
inc
stos
out
adc
mov
sbb
into
add
xchg
int3
das
jne
xor
fcomp
sti
xchg
sbb
inc
pop
mov
or
and
mov
repz
hlt
pop
fs
push
sub
data16
adc
call
xchg
mov
ds
bound
adc
sbb
push
sub
test
push
add
lods
cmc
push
push
mov
imul
stos
xor
or
xchg
push
repz
out
in
jbe
push
xor
mov
xchg
test
jle
add
pop
pop
les
dec
adc
scas
sahf
clc
(bad)
sahf
mov
in
cdq
repnz
xchg
stos
xchg
lods
adc
repz
gs
pop
jmp
retf
aas
js
push
mov
mov
call
jge
jns
arpl
or
das
mov
scas
ins
(bad)
jb
data16
jl
retf
dec
jmp
stc
mov
push
adc
xor
jne
mov
fnstsw
cmp
idiv
cmp
pop
xchg
popf
cmp
sub
mov
jecxz
add
adc
inc
mov
ror
hlt
mov
xchg
push
scas
xor
shl
jae
push
stc
bound
cmp
data16
retf
mov
aas
push
xor
push
call
(bad)
test
push
push
fisubr
cmp
out
test
push
dec
cwde
(bad)
in
fld
ret
ffreep
iret
pop
pop
out
adc
cmp
in
aas
rcl
scas
daa
cmp
pop
jmp
out
lods
inc
test
cwde
jns
jae
xor
clc
and
mov
adc
imul
lds
gs
fiadd
inc
shl
imul
sbb
lock
nop
jb
sbb
shr
loopne
enter
inc
pop
mov
sti
cdq
hlt
pop
push
push
ss
jle
mov
push
pop
mov
shr
pop
mov
jmp
(bad)
pop
inc
ss
and
push
xchg
add
leave
test
inc
mov
push
les
push
js
imul
pushf
aam
fdiv
int3
unpcklps
xchg
or
pop
fwait
jle
repz
popf
sbb
hlt
and
cmp
shl
(bad)
(bad)
pop
mov
(bad)
ins
sub
or
mov
cmp
push
out
sbb
mov
lea
mov
cwde
in
loop
fs
movs
mov
hlt
or
mov
cdq
dec
lods
cmp
in
les
ds
cwde
cli
aad
idiv
jg
pushf
sub
xchg
adc
dec
(bad)
out
adc
lods
out
scas
fistp
retf
(bad)
sub
(bad)
xchg
shr
jmp
es
addr16
xchg
mov
test
push
adc
(bad)
mov
mov
retf
jl
stc
scas
jae
pusha
mov
mov
js
popf
inc
jmp
enter
pop
call
test
push
aaa
shl
gs
fst
sti
and
jg
outs
pop
lds
out
push
ds
lock
and
bound
sbb
(bad)
xor
ins
shl
(bad)
jl
cwde
das
dec
out
imul
inc
lahf
jae
mov
jle
adc
mov
xor
aaa
mov
pop
sbb
jge
inc
data16
sub
jmp
sahf
sub
fdiv
icebp
mov
dec
inc
push
adc
sub
add
gs
and
pushf
pop
ins
cmps
xor
and
or
pop
addr16
or
or
mov
mov
push
and
xchg
inc
(bad)
in
call
call
xor
cmp
std
push
test
jne
mov
sar
add
gs
xor
mov
dec
inc
adc
test
mov
cmps
fidivr
ds
(bad)
je
bound
cmp
shl
xor
imul
movs
jp
sahf
sub
cmp
pop
jmp
and
xchg
mov
jne
add
push
clc
rol
(bad)
loope
jbe
inc
out
jmp
rcr
sub
push
sbb
std
lods
mov
arpl
sbb
outs
repz
aad
inc
add
push
ret
xchg
loope
dec
pop
movs
fldenv
popa
inc
inc
test
lock
loope
stos
test
imul
nop
mov
repnz
ss
sub
retf
mov
xchg
inc
xchg
out
ds
pop
pop
(bad)
mov
ret
imul
adc
xchg
outs
stos
sbb
lds
nop
push
adc
push
adc
pop
fimul
sbb
jp
je
aas
lods
call
lea
push
cwde
outs
mov
mov
pop
bound
xor
dec
sahf
push
mov
xor
sub
(bad)
leave
das
jnp
jmp
push
xchg
pop
retf
pop
cmp
faddp
push
sbb
pop
sar
push
mov
fiadd
adc
jno
mov
rcr
xchg
jne
sbb
es
test
xchg
xchg
jge
dec
and
mov
aaa
repz
ins
mov
cmps
popa
loopne
jmp
push
xor
push
(bad)
es
and
test
add
call
mov
aam
add
xchg
movs
adc
sti
jnp
xlat
rcl
ret
cmp
out
push
dec
push
stc
cli
mov
push
inc
mov
push
cmp
leave
enter
fyl2x
cmp
imul
cmps
mov
xor
add
mov
mov
(bad)
movs
rcr
or
xor
lods
xchg
inc
ins
adc
push
xor
pop
cmc
test
mov
sub
mov
iret
std
push
je
push
push
aas
test
ds
rcr
pop
call
neg
cmps
dec
mov
dec
aam
adc
mov
mov
xbegin
ins
mov
sub
dec
repnz
out
inc
ficomp
ss
(bad)
mov
stos
sbb
retf
jmp
in
jne
dec
or
inc
adc
push
push
popf
sub
lahf
cmps
and
out
jge
mov
je
xor
(bad)
push
xchg
pop
fst
neg
mov
les
push
or
aaa
(bad)
lock
xor
or
int
pop
shr
add
jecxz
(bad)
rcl
cmc
mov
jns
pop
(bad)
dec
cmp
into
scas
scas
mov
mov
xchg
fs
(bad)
and
inc
cmp
jmp
mov
jns
daa
inc
mov
adc
jp
jns
push
pop
or
or
test
mov
movs
bnd
mov
ja
add
inc
imul
sti
fldenv
rcr
adc
sbb
dec
cmp
outs
jmp
rol
repz
add
cmp
(bad)
neg
int
pop
xchg
dec
adc
jg
dec
fist
shr
xchg
repnz
fwait
push
les
or
inc
out
lahf
push
mov
nop
popf
(bad)
movs
adc
jmp
jl
ins
jns
outs
ret
outs
cwde
xchg
pop
xchg
pop
hlt
clc
rol
cmps
outs
movs
fisttp
aaa
in
adc
adc
sahf
mov
mov
sbb
out
push
inc
xchg
sub
sahf
pop
mov
mov
out
out
or
fstp
mov
cs
sbb
movs
dec
or
iret
jge
mov
dec
fcmovb
shl
mov
push
sbb
jmp
sub
lock
sbb
sub
or
gs
and
mov
jecxz
outs
push
dec
pcmpgtd
xchg
(bad)
(bad)
retf
dec
sbb
int
push
pop
fadd
icebp
jnp
xchg
inc
or
mov
rcr
xchg
fst
dec
test
cmp
sbb
and
idiv
adc
movs
(bad)
inc
dec
add
pop
add
jmp
and
or
lds
enter
mov
jmp
adc
sub
sti
mov
in
mov
mov
cmp
cli
xchg
dec
(bad)
mov
je
xchg
sub
or
xchg
test
and
ficomp
xor
xlat
push
js
aaa
jmp
imul
inc
jbe
clc
jle
sbb
or
sub
je
xlat
in
xor
mov
outs
fsub
cdq
mov
sbb
test
repz
cdq
and
or
enter
xor
out
fwait
jno
jl
test
push
xchg
xor
or
inc
psubusb
jne
or
xor
xor
call
mov
add
xchg
add
jne
test
es
icebp
mov
fsub
jecxz
std
pop
jnp
retf
xchg
dec
xor
gs
jb
repnz
jne
fidivr
shl
pop
fisttp
pusha
ins
inc
fwait
xchg
mov
sub
mov
push
out
jns
inc
cmp
pop
cld
outs
inc
cdq
or
mov
jo
iret
cmp
mov
imul
and
fcmovb
nop
in
and
inc
out
test
pop
jg
ins
out
mov
fadd
inc
sbb
push
xchg
inc
and
arpl
ror
pushf
lods
cmc
out
jae
add
or
rcr
mov
stos
pop
in
jae
and
lahf
into
jne
lds
ret
inc
mov
and
xchg
shl
les
adc
jb
outs
and
add
test
inc
or
pusha
inc
imul
push
mov
aas
and
xor
lods
cmc
push
cmp
shr
pop
je
inc
or
inc
les
jno
adc
mov
xchg
inc
inc
out
push
xor
sbb
daa
mov
adc
imul
pushf
loop
push
xor
loope
xchg
jnp
lds
push
out
or
loop
and
(bad)
mov
inc
pop
lock
add
inc
test
or
sar
add
add
sub
mov
xor
das
mov
dec
sti
xchg
mov
sbb
sub
push
xor
jmp
imul
fsubr
test
bound
sti
in
mov
jecxz
out
push
imul
sbb
sbb
loop
test
add
lods
rcr
cmp
pop
sub
or
jbe
movs
pop
add
push
in
xchg
addr16
shr
into
mov
jge
or
verr
adc
mov
test
ja
jecxz
dec
ins
(bad)
fiadd
scas
ins
dec
sbb
cmp
xchg
fstp
outs
cmp
jecxz
je
dec
jg
xlat
rol
mov
push
xchg
idiv
or
sar
ja
je
push
mov
sbb
fimul
add
imul
fdiv
xlat
push
pop
mov
out
xchg
push
pop
and
in
mov
cmp
pop
out
loope
ja
mov
aad
or
sub
out
scas
jb
popa
ins
pop
(bad)
aam
push
adc
mov
jecxz
add
inc
and
lods
arpl
mov
cmovnp
xor
ret
gs
pop
xchg
sub
cwde
mov
push
pop
sub
fstp
inc
icebp
pop
xchg
pop
pop
adc
xchg
mov
stos
test
push
das
fadd
add
pslld
mov
inc
cmps
xor
fdivr
or
aam
mov
xor
mov
push
mov
hlt
pop
adc
and
es
jae
sbb
arpl
sahf
jnp
pop
push
iret
xor
gs
push
inc
adc
js
push
out
test
add
push
pushw
adc
xor
fucom
call
mov
add
fs
pop
add
sbb
jmp
mov
and
shl
inc
loope
inc
ret
fmul
mov
xchg
shl
or
leave
call
jp
sub
or
icebp
adc
cmp
(bad)
movs
or
lock
sbb
xchg
mov
dec
into
mov
inc
out
mov
data16
mov
in
xchg
and
and
dec
jmp
push
push
idiv
inc
mov
scas
sbb
loop
cmps
add
push
xor
cdq
inc
mov
hlt
mov
mov
push
test
inc
ret
sub
jmp
clc
adc
movs
jl
jmp
mov
ss
push
jecxz
cmps
jp
fidivr
fistp
sahf
out
stos
pusha
adc
adc
fs
mov
xchg
xchg
fs
dec
jge
hlt
sub
sbb
sub
inc
cmps
mov
repnz
mov
cmp
xchg
mov
test
xor
fdiv
ss
ins
test
sub
fdivrp
mov
pop
inc
and
call
sub
out
jbe
pop
fcmovne
wbinvd
and
rcl
mov
push
dec
lea
mov
adc
mov
lods
inc
div
adc
push
mov
pop
rcl
inc
pop
push
pop
(bad)
mov
stc
cli
lahf
aad
cmp
dec
push
iret
cmps
dec
and
outs
loop
xlat
jge
jle
or
test
std
sqrtps
retf
call
mov
jo
add
jp
cmp
enter
pushf
es
pop
and
int3
inc
pop
xor
cmps
pop
sub
fsub
or
imul
pop
xor
mov
shr
inc
inc
mov
aaa
popf
in
lock
jg
mov
xchg
xor
retf
mov
popa
lods
xchg
xor
outs
inc
add
aad
push
sbb
clc
pop
mov
mov
adc
push
fisub
sbb
push
rol
in
xor
cmp
daa
mov
adc
dec
xchg
ins
sets
imul
mov
jae
pop
dec
into
cmps
or
shl
cwde
mov
js
aas
ret
push
jl
jns
mov
add
mul
pushf
retf
int
invd
out
xor
xor
xchg
sub
ds
rcr
and
mov
mov
jmp
fistp
out
inc
test
stos
adc
js
or
xor
dec
mov
cmp
fild
cmp
outs
sbb
pop
pop
push
inc
lock
scas
inc
in
test
jno
(bad)
and
inc
cld
neg
xor
add
adc
data16
push
popf
(bad)
cs
cmc
mov
inc
jmp
imul
add
or
add
ds
sub
sub
jle
mov
inc
retf
mov
call
push
mov
push
frstor
mov
push
loop
jbe
and
rcr
pop
and
adc
push
lods
mov
adc
mov
out
rol
jle
add
jne
fmulp
sbb
and
shl
mov
aam
mov
add
cmps
aam
and
dec
mov
jecxz
imul
iret
mov
lods
cmp
push
iret
test
or
cld
(bad)
xchg
(bad)
jecxz
cmc
(bad)
mov
adc
movs
icebp
test
gs
lock
ret
xchg
sbb
adc
fwait
jnp
out
sbb
sets
jns
xchg
push
data16
test
fisub
loop
pop
and
cdq
inc
push
lea
mov
mov
scas
mov
popf
xchg
or
jmp
pop
adc
sub
retf
imul
xchg
fimul
scas
inc
and
lds
jmp
pop
xchg
repz
pop
inc
xchg
pushf
inc
out
test
mov
xchg
movs
retf
or
mov
pop
sub
fldln2
pusha
sub
imul
sbb
push
lods
dec
div
jns
adc
xor
ret
jbe
mov
jp
iret
out
test
cmp
mov
lock
mov
jae
ret
add
xor
mov
inc
mov
std
movs
out
pop
popa
sti
inc
mov
add
outs
pusha
mov
lock
call
push
cld
dec
out
test
inc
hlt
push
dec
pop
ror
adc
push
rol
adc
push
sbb
mov
add
dec
push
icebp
outs
jbe
sub
iret
pop
stc
es
fnstsw
clc
jmp
jnp
shr
jns
cmp
ret
pusha
push
enter
cdq
icebp
adc
(bad)
neg
and
and
push
xor
adc
outs
ror
daa
retf
shl
test
sub
loope
popf
sbb
test
fist
jns
ja
adc
div
xchg
out
arpl
mov
dec
jnp
pop
(bad)
stc
dec
imul
adc
mov
mov
add
and
cmps
pop
jno
and
sub
mov
pushf
scas
push
inc
ret
scas
cmps
sahf
push
test
pusha
aam
imul
icebp
or
push
adc
scas
dec
sbb
ret
jbe
sahf
fs
cmps
inc
mov
cmp
push
add
retf
mov
int
push
mov
dec
js
push
push
push
dec
inc
cs
mov
cmps
(bad)
xlat
(bad)
push
and
leave
pushf
ins
pop
pusha
loope
shl
repz
sbb
fisub
shl
adc
cmc
in
add
pop
lea
xchg
and
cmp
jb
dec
sub
cmps
pop
adc
pop
cld
hlt
inc
or
movs
or
adc
movs
sub
xor
sti
out
dec
mov
and
pop
xor
inc
addr16
ror
adc
int
call
pop
lock
jg
add
mov
mov
punpcklbw
cs
jo
call
mov
mov
test
enter
sbb
mov
xchg
nop
int
inc
push
xchg
aaa
add
cmp
cmp
lods
mov
pop
xchg
sub
and
int3
out
dec
ins
mov
mov
stc
sbb
mov
sbb
ins
xor
push
sub
das
ja
aad
mov
in
adc
mov
imul
xor
xor
int3
mov
mov
or
xor
mov
lea
and
popf
and
in
ret
aad
xor
jbe
das
push
mov
mov
mov
scas
cmc
leave
or
push
(bad)
fs
cli
xor
enter
xchg
pop
hlt
add
movs
ja
jl
test
in
lahf
sbb
dec
das
jle
mov
jae
adc
movs
lea
inc
daa
mov
das
fcmovb
fcmovnu
sti
iret
mov
sbb
mov
inc
dec
dec
inc
fbstp
imul
cmps
inc
lahf
adc
adc
cmp
std
push
ficomp
daa
mov
fld
xchg
mov
add
js
popf
add
push
mov
rcl
mov
pop
sbb
and
push
movs
and
mov
rcr
lods
inc
pop
mov
popa
jmp
xchg
jb
add
xor
mov
lods
cmp
int
pop
frstor
outs
mov
sbb
pop
xor
mov
xor
fist
dec
div
jge
xlat
fst
jmp
and
xchg
jle
rol
mov
(bad)
and
xchg
fstp
xchg
mov
and
int3
cdq
int3
jge
jbe
std
data16
into
add
pop
cmp
leave
jbe
lea
je
movs
sub
sub
pop
and
add
jecxz
sub
lahf
inc
rcl
lods
lock
loop
sbb
lahf
mov
sub
inc
fs
ror
movs
push
xchg
sbb
pop
xchg
les
push
and
imul
cmps
test
push
push
loop
mov
add
jmp
push
jl
jae
cwde
and
movs
loope
retf
xchg
aad
dec
mov
jl
push
mov
mov
(bad)
mov
cdq
arpl
sub
scas
xchg
out
jmp
pop
rcl
pop
mov
mov
cmps
cli
out
gs
push
nop
push
sar
das
jne
add
xchg
push
cmp
ret
dec
int
push
pop
leave
test
jp
inc
cmp
retf
fist
and
sub
sub
in
sub
shl
adc
inc
(bad)
jne
cmps
rcr
shl
outs
fsub
pushf
popf
cmc
je
enter
xor
jbe
xchg
repnz
clc
or
cld
add
ret
mov
push
xor
pop
inc
dec
dec
xchg
(bad)
push
bound
dec
add
cmc
adc
retf
mov
jne
sahf
adc
daa
data16
or
or
xchg
les
push
sub
mov
jne
xchg
fist
or
test
retf
jbe
retf
xchg
jb
or
dec
dec
sub
jl
xchg
or
mov
test
and
cmova
cdq
shl
shl
mov
mov
punpckhbw
cmps
dec
icebp
xor
je
and
mov
mov
add
adc
sbb
xchg
test
in
je
add
movs
popw
push
jo
out
aas
cwde
dec
pusha
jns
addr16
push
xor
daa
or
lds
rcl
xor
cld
out
mov
jle
push
ret
ret
mov
adc
sub
ja
mov
movs
push
out
and
(bad)
cmp
mov
mov
in
(bad)
pop
and
loopne
or
test
cmp
loopne
mov
fcom
ds
fild
add
or
mov
ret
hlt
mov
jge
mov
mov
mov
mov
mov
add
cmp
ret
ds
or
in
xchg
push
adc
cmp
xchg
mov
ret
pop
aaa
jg
and
mov
or
mov
mov
(bad)
sar
xor
xchg
cli
pop
clc
dec
xor
loopne
inc
mov
xchg
call
and
cmp
sub
jmp
addr16
jecxz
in
shl
cld
mov
push
cmp
fdiv
dec
xchg
call
xchg
jmp
or
fimul
inc
ins
inc
dec
and
(bad)
jae
xchg
jb
inc
fiadd
aam
enter
adc
outs
and
loope
jmp
dec
call
dec
pop
les
and
add
jmp
jo
push
out
mov
inc
adc
xchg
inc
std
movs
mov
sub
outs
nop
iret
aaa
(bad)
imul
(bad)
fwait
aas
cs
nop
sbb
or
push
cmp
mov
mov
xchg
push
dec
into
clc
xchg
jb
push
mov
ins
xor
cmp
das
push
xor
cmp
push
cmp
xor
sub
popa
pop
jle
js
cmp
xchg
inc
js
sahf
xchg
adc
test
sub
or
xchg
fisttp
fxam
cdq
shl
mov
bound
jmp
lods
jae
pushw
fmul
call
addr16
mov
test
inc
int3
inc
cmp
daa
mov
cs
lea
or
(bad)
pand
in
data16
dec
sub
pop
mov
sub
jo
mov
loopne
xor
push
mov
mov
stos
mov
sub
dec
std
add
jge
imul
rol
sbb
call
cwde
out
arpl
repnz
hlt
ins
inc
test
(bad)
fcmovbe
jns
sbb
pop
mov
ins
cmp
pop
sub
xchg
repnz
setl
outs
mov
xchg
mov
mov
dec
adc
jmpw
es
pop
js
inc
cmp
inc
lds
jmp
rcr
cmp
sbb
sub
fsub
push
xor
fist
popa
cmp
mov
imul
xor
or
xlat
lock
ret
stos
sbb
dec
xchg
ss
mov
pop
sub
icebp
sti
inc
push
outs
xor
sbb
inc
sub
out
mov
cmp
mov
xchg
jno
mov
std
inc
(bad)
pushf
ret
xor
add
cmp
icebp
mov
sbb
aad
pop
lea
add
inc
das
or
mov
jmp
out
das
movs
ret
sbb
hlt
retf
jnp
mov
xor
pop
out
xor
xchg
xlat
sbb
jge
(bad)
inc
daa
test
xor
and
fidivr
icebp
dec
test
(bad)
xchg
mov
or
fwait
test
pop
jp
lods
ret
jecxz
push
pop
mov
dec
and
shr
push
pushf
cwde
xlat
stos
ins
rcr
xchg
(bad)
jno
fidiv
repz
dec
cmps
je
ins
xchg
sbb
or
sub
mov
std
data16
xlat
push
movs
test
adc
je
cmp
mov
ret
loopne
mov
pushf
aas
repz
jne
fidivr
int
mov
mov
fbstp
outs
mov
sub
xchg
pop
sub
xchg
jne
cmp
pop
hlt
test
shufps
mov
sbb
ret
inc
push
cdq
loop
leave
dec
(bad)
ins
pop
es
lds
ss
mov
cwde
mov
adc
retf
mov
dec
imul
das
repz
dec
sahf
(bad)
adc
cmp
jo
pusha
dec
test
arpl
mov
cmp
std
icebp
pop
sbb
and
xchg
call
ret
ins
mov
int3
rol
cdq
retf
cli
sar
cli
std
movs
(bad)
sub
mov
rcl
pop
sub
push
enter
cmp
scas
sbb
shl
popa
pushw
fdiv
mov
inc
std
jae
dec
leave
jo
push
push
jmp
sub
xchg
pop
xor
inc
or
dec
push
xchg
and
inc
push
jo
and
mov
data16
sub
xchg
in
or
movs
sbb
mov
sahf
add
mov
test
jno
cmps
sub
mov
addr16
(bad)
jo
movs
jg
pop
or
inc
mov
jo
push
adc
and
push
lds
sub
(bad)
mov
add
out
(bad)
xchg
jno
sbb
loopne
xor
xchg
jp
mov
mov
add
dec
jl
shl
mov
pushf
fistp
inc
lahf
fs
push
and
dec
mov
inc
push
es
rol
mov
jg
adc
mov
test
rcr
jns
and
test
popa
loop
mov
push
or
inc
and
jo
cmp
add
xchg
push
jo
xchg
push
mov
mov
aas
sbb
inc
ins
xchg
adc
xchg
sub
out
xchg
(bad)
push
lods
xor
lahf
(bad)
lods
lock
mov
and
sbb
je
push
iret
xor
sub
mov
xchg
cmp
std
cmp
retf
push
movs
cmp
lahf
push
scas
out
push
scas
jle
mov
jg
pop
jae
scas
mov
movs
adc
mov
jg
popf
and
dec
push
push
and
fistp
cmc
xchg
push
push
jno
in
repnz
inc
sbb
push
inc
and
or
sar
sub
outs
fidiv
push
data16
inc
cmps
sti
mov
push
cmp
int
popf
(bad)
jb
mov
cmps
sub
xchg
add
xchg
inc
pop
pop
mov
stos
pop
adc
mov
je
out
nop
js
es
fld
and
(bad)
iret
and
pop
sub
inc
xor
sub
xor
mov
cmp
mov
and
xchg
in
xchg
jle
lods
mov
retf
xchg
or
mov
sub
or
jmp
std
imul
out
rcr
test
cdq
ss
aad
in
es
cdq
mov
xchg
cwde
adc
int3
mov
jae
or
pushf
jne
push
and
mov
mov
add
mov
out
arpl
out
push
xchg
imul
rdtsc
and
jg
jg
sub
push
cmp
or
pop
ret
mov
(bad)
add
jnp
mov
movs
(bad)
mov
pop
fisttp
mul
mov
jecxz
pop
popa
mov
jecxz
push
out
aad
add
lahf
stos
cmp
adc
pop
iret
xor
cmp
mov
add
mov
dec
cld
add
(bad)
xchg
push
call
aad
cmp
inc
inc
gs
xor
in
xchg
and
ret
pop
jp
test
jbe
mov
jecxz
lea
push
cmp
popa
(bad)
xchg
mov
push
loop
shl
cmps
stos
mov
add
add
scas
jmp
adc
lds
sub
loop
call
pop
outs
dec
cld
aaa
out
xchg
dec
retf
mov
call
sbb
pushf
push
clc
sub
push
movs
xchg
sar
out
sub
dec
dec
jbe
scas
xor
mov
pop
jp
jle
sub
jae
xchg
adc
test
pop
xchg
daa
les
adc
xor
mov
fs
push
and
into
pusha
out
lahf
cld
sbb
mov
cmps
jns
xchg
dec
jb
pop
cdq
sub
dec
rol
test
call
rcl
fadd
xchg
inc
scas
ja
jecxz
add
repnz
popa
dec
dec
pop
cwde
add
pop
out
lds
push
outs
cmp
addr16
ror
mov
mov
sub
pusha
mov
imul
sbb
inc
data16
inc
adc
int3
mov
jno
out
es
cmp
and
fidiv
mov
mov
repnz
outs
test
gs
adc
gs
test
js
inc
fisub
or
ins
imul
pop
bound
pusha
les
test
lea
or
out
sub
jns
cmp
jmp
outs
jmp
das
cmps
sub
sbb
sub
mov
out
scas
(bad)
mov
mov
aas
jnp
std
xchg
xchg
inc
lock
pop
cli
fcom
push
dec
test
arpl
inc
jmp
std
sbb
je
pusha
das
xor
(bad)
lea
stos
rol
cmp
mov
jmp
rcl
out
jno
bound
xchg
or
movs
adc
fwait
push
int3
xchg
mov
mov
movhps
hlt
jnp
dec
mov
outs
mov
mov
test
push
dec
mov
push
jno
jecxz
sbb
xor
daa
pop
pop
fcomp
mov
stos
int
mov
ins
mov
pop
adc
mov
mov
mov
cmp
std
(bad)
mov
jle
or
cmps
mov
(bad)
stc
jbe
sub
xchg
test
jmp
push
mov
mov
push
mov
or
cmp
int3
cmc
xlat
push
inc
shl
bnd
pop
cmp
xor
getsec
bound
and
(bad)
mov
inc
dec
push
pop
popf
(bad)
push
hlt
in
fwait
jle
out
and
xor
add
repnz
cdq
imul
xor
mov
bound
or
aad
jle
push
ja
in
jne
sahf
add
jno
mov
sub
cmp
inc
or
xor
dec
or
jnp
mov
jg
shl
push
fcomip
mov
(bad)
jle
add
in
add
cmp
adc
aam
cmp
ret
xor
sbb
addr16
repnz
outs
bound
inc
ins
outs
jns
xor
loopne
mov
loopne
mov
and
xchg
mov
stos
push
push
mov
loopne
neg
xor
and
jg
fmul
aad
inc
or
mov
test
idiv
inc
stos
inc
bnd
or
jns
mov
out
lds
ds
icebp
iret
outs
ret
adc
rcl
loop
mov
sub
push
push
push
sub
push
mov
and
dec
mov
mov
(bad)
ficomp
push
mov
cmp
add
cdq
test
nop
dec
mov
icebp
dec
and
add
inc
xchg
mov
js
std
mov
sub
inc
cmc
or
jmp
aas
adc
es
stc
inc
sub
jae
fldenv
retf
mov
fbld
cmp
xchg
inc
lods
leave
lods
fmul
shr
out
pop
dec
fnstenv
out
fwait
sbb
ins
data16
pushf
mov
jle
call
mov
mov
mov
xchg
jg
add
into
inc
inc
sub
fcomp
add
pop
inc
mov
sub
and
dec
mov
imul
xor
or
rcl
xchg
ds
xchg
jge
ret
fistp
nop
rcl
ja
xor
cdq
and
dec
add
lahf
push
mov
jnp
shl
fstp
mov
imul
pusha
out
jns
or
movs
mov
imul
dec
pop
xchg
pop
out
pop
mov
std
jb
dec
add
push
lahf
jnp
ins
and
cmp
pop
pop
mov
pop
icebp
je
rcr
and
dec
mov
sub
push
(bad)
cwde
ins
jmp
and
out
and
(bad)
cwde
imul
test
outs
pushf
add
popa
inc
hlt
xchg
sub
sub
loope
jecxz
and
gs
cmp
scas
repnz
retf
dec
inc
fld
dec
add
cdq
movs
loopne
out
aaa
xor
cmp
in
lock
repnz
(bad)
idiv
sahf
pop
or
fwait
jbe
dec
inc
inc
in
jne
push
ret
push
in
mov
mov
cmc
sub
adc
mov
mov
xchg
xchg
jns
mov
cdq
add
xor
mov
inc
cli
dec
sbb
mov
jae
in
outs
push
fincstp
(bad)
and
adc
dec
gs
lods
pop
adc
jg
pop
test
add
push
cwde
ja
xor
shl
leave
loope
pop
leave
sti
push
enter
sbb
(bad)
icebp
sub
mov
dec
sub
adc
jp
adc
add
jp
push
in
out
aad
ror
push
add
jle
mov
cmp
aas
inc
add
add
cmps
ficomp
mov
dec
push
ins
cmps
mov
mov
push
movs
stc
jb
retf
rcl
inc
jne
hlt
fwait
shl
push
jge
test
add
ds
adc
rcr
loopne
sbb
mov
mov
fs
cmp
cmp
add
das
mov
icebp
shl
inc
sub
cmp
std
in
mov
inc
jmp
and
cwde
fisub
in
out
std
pushf
pushf
push
outs
lock
dec
mov
sbb
sbb
das
pushw
cmp
into
inc
mov
jnp
xor
jmp
mov
(bad)
cmps
adc
or
xor
dec
sub
movs
call
fs
lahf
movs
jbe
loop
ret
arpl
test
cs
cmps
inc
adc
fnstcw
jge
das
(bad)
inc
push
jne
es
add
repnz
lahf
popf
adc
jns
aas
sub
jbe
or
(bad)
mov
sbb
scas
dec
sbb
ja
in
xor
imul
aas
ins
and
xstore-rng
cmps
add
lock
xor
and
repnz
push
daa
fidiv
mov
or
xor
fdiv
push
jmp
in
sbb
adc
pop
xadd
call
mov
ret
ins
(bad)
or
add
sub
cmp
sub
jmp
adc
popf
mov
ffreep
dec
xchg
inc
sub
push
(bad)
pop
jnp
mov
pop
xchg
movs
xlat
xchg
jnp
jmp
xor
daa
cli
(bad)
popf
cli
ja
test
imul
and
sub
xlat
sbb
lock
mov
shl
sbb
xchg
pop
div
dec
xor
cmps
pop
and
ins
cmp
dec
loop
adc
push
push
and
jl
pop
mov
mov
in
adc
jns
pop
fdiv
cmps
ja
sub
adc
sbb
iret
push
pushf
stos
arpl
fs
outs
jnp
ds
add
xchg
push
out
xchg
xchg
sbb
mov
cmp
push
retf
popf
adc
scas
mov
pop
imul
inc
add
adc
adc
ret
ror
xor
sub
loop
into
movs
(bad)
push
out
stc
push
(bad)
ins
out
dec
outs
add
es
mov
pop
bound
mov
jno
mov
test
std
gs
add
leave
mov
sbb
mov
stos
retf
fwait
movs
xor
push
outs
push
fs
adc
loop
repz
xchg
sbb
in
cmps
cs
xchg
dec
std
or
mov
and
dec
sub
repnz
sub
inc
cmp
cld
adc
aam
hlt
cmc
inc
vmwrite
out
iret
cmc
inc
add
jne
out
and
cs
or
mov
sub
popf
rol
mov
sbb
pop
cmp
ins
dec
xor
cli
imul
mov
adc
inc
mov
lds
or
hlt
not
jnp
scas
and
je
xor
jl
cdq
push
sbb
mov
inc
ins
xor
(bad)
cld
cs
nop
in
inc
jns
dec
pop
rol
test
in
pop
out
lock
outs
fst
mov
mov
div
mov
mov
mov
stc
inc
in
dec
xor
popf
push
pop
shr
mov
(bad)
xlat
xor
inc
xchg
in
xchg
sbb
imul
jo
imul
dec
xchg
mov
or
out
(bad)
jnp
das
pop
std
push
out
pop
test
pop
adc
pop
push
inc
and
cmp
xchg
dec
popa
mov
xchg
xchg
add
cs
js
test
xchg
pusha
ins
movs
push
adc
fnstcw
mov
(bad)
mov
mov
xchg
movs
cs
out
push
push
nop
and
jg
mov
jl
jo
mov
mov
jae
push
cmps
mov
push
xor
xchg
dec
aaa
inc
mov
jo
test
xor
imul
xor
movs
movs
cld
div
rcl
in
push
xor
jb
lds
outs
dec
mov
lods
mov
mov
and
test
jmp
dec
xor
scas
push
xchg
cmps
popa
cmps
push
xchg
cdq
aas
clc
mov
iret
mov
fst
jp
emms
sub
inc
ins
in
xor
and
xchg
jmp
push
shl
push
sahf
jle
fiadd
jecxz
retf
mov
ins
imul
cs
and
or
push
add
ss
mov
sub
xchg
jo
mov
or
sub
(bad)
jl
ja
aas
mov
jae
(bad)
jmp
jo
popf
movs
repz
push
ins
dec
ins
sub
ins
dec
xchg
mov
(bad)
imul
fiadd
pop
cdq
fsubr
test
jmp
in
mov
shl
mov
mov
pop
iret
mov
fcomi
lahf
cmp
int3
xor
scas
cli
stos
test
inc
fsub
sbb
xlat
icebp
xchg
shl
ins
jnp
pop
xor
add
xor
adc
dec
aaa
sahf
mov
cmp
push
shl
jmp
adc
mov
sbb
and
or
cmps
inc
push
retf
mov
push
loope
mov
cld
das
sbb
repz
jns
sbb
cld
push
lods
cdq
dec
xchg
in
cmp
es
in
(bad)
retf
ins
pop
loopne
mov
int
mov
into
jle
pop
jge
and
dec
imul
mov
aam
jmp
pop
mov
arpl
cmp
out
inc
sub
aam
jbe
jg
add
pop
cld
gs
rol
into
clc
sub
test
jne
rol
stc
adc
cmp
mov
mov
jp
rol
xlat
cmp
pop
scas
pop
jb
sti
xor
xchg
ds
xchg
bound
cmovae
inc
enter
test
fwait
aad
or
pop
adc
test
lock
scas
ret
lds
pop
aaa
cli
jae
inc
push
jmp
arpl
jmp
mov
push
xchg
pop
test
mov
aam
adc
xlat
sbb
ret
das
loop
cmp
adc
mov
jp
mov
inc
ret
les
mov
cmp
lea
dec
mov
mov
dec
mul
imul
(bad)
add
jnp
clc
push
jge
outs
and
mov
sub
cmp
dec
ins
int3
sti
fwait
xchg
jp
mov
mov
xor
in
jne
retf
mov
inc
cmp
mov
imul
enter
jl
scas
int
out
pusha
pop
je
rcl
push
sub
mov
sbb
fdiv
sub
jge
imul
push
and
push
xchg
das
(bad)
stos
mov
in
xor
ret
jl
sub
sti
mov
inc
sbb
cmp
jp
mov
jp
push
inc
pop
cwde
jecxz
inc
and
xchg
cmp
push
lock
loop
stc
inc
mov
aad
imul
adc
call
repnz
sti
popa
and
inc
push
xor
jno
aad
retf
jge
and
movs
xchg
into
mov
xchg
xchg
cmps
pop
or
dec
mov
push
daa
adc
test
pop
mov
dec
data16
test
xchg
adc
call
mov
mov
xchg
push
mov
xchg
mov
cmp
jns
jmp
lock
or
jbe
bnd
call
sbb
sbb
test
xchg
xor
pop
test
and
mov
xor
mov
fdivr
xchg
bound
lea
fisttp
pop
cmp
inc
lea
mov
retf
push
add
pop
fdivr
bound
cmp
or
pop
jns
rol
sar
test
retf
aam
mov
xchg
sub
push
aas
inc
fld
jbe
cwde
push
test
addr16
lods
rol
jae
jge
ja
inc
mov
sub
hlt
or
mov
in
aas
pop
dec
xchg
call
int3
dec
mov
cmc
and
pop
sbb
aas
xchg
js
dec
pop
mov
mov
stc
or
push
test
sub
adc
(bad)
mov
and
out
mov
xor
inc
push
hlt
dec
pushf
div
dec
test
mov
jae
daa
fmul
adc
iret
adc
inc
mov
and
xor
adc
push
(bad)
int
ins
or
mov
lock
xchg
xor
inc
fmul
sub
stos
adc
push
mov
fldenv
iret
jns
adc
push
out
and
cmp
retf
fdivr
aad
push
cdq
scas
lahf
adc
out
jmp
sar
loop
push
cvtpi2ps
mov
mov
cwde
jmp
fwait
mov
push
shl
push
pop
out
loopne
lods
dec
dec
(bad)
fnsave
test
mov
movs
sub
leave
fld
add
outs
addr16
loope
ret
cmp
scas
xor
cli
pop
ins
mov
push
ror
ins
mov
jmp
ret
xchg
cmp
pop
and
sti
in
sub
mov
aas
in
jge
lods
out
and
mov
and
out
push
jle
mov
xor
in
sbb
push
xchg
test
pop
sbb
into
movs
pop
dec
add
xor
push
pop
push
lods
pusha
test
in
scas
mov
xchg
retf
inc
adc
or
in
scas
fidiv
fcmovne
push
adc
add
mov
shl
ins
mov
in
mov
jno
test
aas
rcl
fdiv
js
lds
sub
repz
mov
mov
int3
cmp
inc
cmp
xchg
ins
sbb
mov
loope
sbb
fdivr
call
or
fdivr
(bad)
mov
and
and
neg
mov
and
lods
sbb
in
popf
mov
mov
aas
jo
(bad)
mov
mov
cld
cmp
mov
(bad)
xchg
int3
inc
test
mov
adc
outs
mov
movs
scas
mov
enter
push
call
jmp
scas
fnstcw
fdivr
aas
in
aas
push
mov
in
ret
(bad)
ror
sub
mov
sbb
xor
cmp
xchg
out
mov
mov
xchg
jne
xor
out
repnz
sar
test
outs
int
arpl
repz
sub
add
lahf
popa
push
shl
adc
clc
das
adc
mov
cdq
inc
and
xchg
push
pop
xor
rcl
fld
inc
test
daa
in
rcr
movs
popa
iret
xchg
xchg
mov
push
int
mov
mov
push
and
sbb
jb
test
mov
jecxz
out
add
dec
sar
add
xor
mov
pslld
and
push
ja
out
enter
mov
popa
push
push
push
sbb
fild
jl
or
div
sub
out
test
lods
fld
jg
aaa
ror
mov
ret
js
lock
mov
or
jmp
push
lea
xor
jae
inc
je
inc
sbb
test
ins
add
jmp
add
pushf
and
ja
ret
xor
mov
xchg
xchg
iret
ror
aas
(bad)
or
jmp
clc
stos
pop
and
adc
xor
inc
ins
lds
adc
or
mov
add
mov
xor
pop
test
pop
fcomp
les
cdq
xor
push
sbb
sar
add
pop
sub
call
lock
jl
xor
hlt
mov
int3
or
push
arpl
(bad)
inc
in
xor
mov
rcl
mov
lahf
rol
sub
je
inc
and
mov
dec
out
mov
xchg
hlt
inc
into
aas
sbb
push
das
cmp
call
outs
inc
movs
inc
cld
aad
ins
sbb
push
inc
cmp
scas
adc
js
inc
(bad)
rcr
push
ror
ins
ins
shl
stc
lds
scas
sar
xor
retf
mov
xchg
sub
adc
pop
adc
mov
sub
xor
in
movs
in
xor
iret
jmp
jbe
inc
rcr
dec
add
cs
fwait
in
gs
jecxz
add
ror
aad
adc
mov
lods
inc
shl
jle
cwde
in
jne
es
cmps
aad
les
mov
xchg
xchg
dec
cld
sub
(bad)
push
sub
or
or
lods
sub
cmp
sbb
add
mov
push
jge
mov
jns
xchg
daa
adc
push
aam
stos
mov
stos
fist
lods
dec
das
fdivp
dec
push
sbb
rol
repnz
ins
pushf
fistp
ins
femms
(bad)
das
pop
(bad)
bnd
retf
mov
dec
leave
jbe
pop
imul
test
lea
jne
and
adc
xor
rol
cmps
nop
dec
popa
cmp
adc
jb
dec
stc
sbb
xchg
fcomp
add
fwait
mov
xchg
adc
add
xchg
adc
jecxz
mov
loopne
cmp
inc
push
popf
cdq
mov
xor
sahf
add
xchg
stos
orps
outs
pop
cmps
and
pop
jge
pop
lahf
mov
imul
dec
add
xchg
or
in
bound
cwde
push
jnp
out
inc
imul
jmp
fstp
ins
data16
or
rcr
stos
jmp
ss
push
xor
sub
and
inc
pop
(bad)
sar
adc
dec
sub
daa
pop
es
pop
adc
mov
ret
stos
ins
push
ficom
mov
ret
cmps
xor
lock
add
or
retf
pop
push
push
bound
test
dec
sti
xchg
dec
loop
sub
scas
scas
push
dec
cmp
(bad)
xor
pop
call
jns
mov
in
xchg
xadd
inc
inc
jmp
bound
jo
ret
sbb
cwde
nop
ins
push
leave
xchg
sub
sub
outs
cmp
mov
cdq
pop
sub
cdq
imul
or
fcmovnb
cmp
xchg
je
sub
sbb
dec
fstp
jge
sub
pop
cmp
mov
push
imul
fdiv
cmps
scas
sub
ja
xchg
jne
xchg
lods
add
into
jne
fwait
call
cmps
push
test
cmp
pop
aaa
fild
and
jmp
rcl
push
sbb
xlat
push
mov
pushf
inc
retf
mul
mov
sub
xchg
push
sbb
das
iret
xchg
adc
mov
imul
cmp
sub
and
push
outs
sbb
les
aad
cmp
mov
pop
or
sti
dec
jg
std
mov
xchg
gs
sub
pop
cmp
les
pop
jbe
movs
pop
and
aad
cli
iret
add
clc
cs
mov
imul
push
or
xchg
inc
mov
stos
inc
jnp
xchg
outs
ret
add
add
call
setno
add
inc
dec
mov
in
mov
in
and
cmps
fst
rol
hlt
adc
mov
dec
gs
sbb
or
popf
lods
mov
das
lods
push
xchg
movs
fsub
rol
aad
outs
test
adc
push
xchg
rcl
leave
cmp
cs
jmp
test
sbb
inc
push
ds
mov
xlat
inc
inc
shl
mov
retf
or
cmp
lods
cmp
je
mov
daa
ret
iret
xchg
mov
lods
jl
xchg
lea
inc
dec
dec
inc
aas
sub
lds
sahf
cmp
repz
aas
and
enter
ret
gs
aaa
jno
inc
cmp
add
stos
push
sub
add
fs
or
adc
dec
xchg
fwait
mov
inc
adc
mov
(bad)
ds
lds
pop
rol
pop
call
inc
imul
outs
cmp
pop
not
or
dec
mov
push
adc
(bad)
push
lods
shl
xor
pop
fstp
adc
shl
sbb
call
cmp
and
int
aaa
xchg
sub
or
mov
xchg
dec
daa
lahf
and
cli
and
inc
sti
lds
or
je
inc
ds
rol
xchg
jnp
in
dec
pop
scas
jmp
sub
cmp
enter
dec
pop
outs
mov
(bad)
add
jmp
in
sbb
movs
loopne
cs
js
ja
fild
outs
(bad)
adc
push
stos
cmp
ins
in
ins
dec
or
pop
lahf
xor
addr16
mov
pop
xchg
mov
out
lahf
mov
enter
cmp
hlt
gs
jmp
adc
sahf
fsub
adc
popa
pop
sub
shl
shl
je
test
pop
adc
retf
mov
mov
jecxz
mov
or
inc
fs
mov
aam
add
fisub
or
adc
lods
push
mov
mov
mul
pop
sub
aam
add
push
rcl
cli
jne
aam
xor
arpl
je
les
mov
fcmovnu
fs
add
popf
pop
addr16
pop
jbe
loopne
mov
scas
nop
mov
and
std
and
ffreep
add
ror
scas
mov
adc
neg
and
test
mov
push
test
(bad)
ins
or
jg
enter
add
pop
pop
inc
(bad)
scas
xchg
jp
sub
mov
aad
inc
sbb
pop
xor
movs
mov
xchg
leave
xchg
mov
push
out
loopne
in
xchg
cmc
movs
lods
aam
in
mov
out
cmp
or
ds
and
pop
mov
push
retf
mov
push
scas
dec
mov
inc
dec
(bad)
fwait
stos
movs
xor
mov
sub
xchg
les
ret
xchg
scas
jnp
add
(bad)
sub
out
iret
sub
movs
mov
popf
clc
jo
or
fdiv
cmp
push
adc
bound
fdiv
xor
in
inc
imul
dec
mov
add
ja
retf
xchg
popa
iret
stos
and
les
push
mov
in
jp
jb
repz
fwait
test
push
mov
pop
cmp
pop
cmp
mov
fdiv
push
xchg
mov
add
adc
cld
adc
add
movs
pop
mov
(bad)
and
std
stc
xchg
pop
inc
jno
or
in
sub
mov
enter
in
cdq
test
in
dec
jp
pusha
inc
(bad)
cmp
in
jnp
fstp
push
cwde
sbb
push
jp
in
test
xor
(bad)
cmp
ret
pop
sbb
adc
pop
std
stos
and
inc
sbb
inc
mov
push
retf
sbb
pushf
ins
or
into
call
js
in
js
frstor
push
nop
leave
cmp
in
lea
xlat
pop
les
inc
sub
adc
icebp
mov
in
aad
inc
aas
mov
nop
and
fidiv
inc
add
fstp
rcl
xor
inc
out
inc
ret
stos
call
stos
cdq
(bad)
iret
pop
inc
push
imul
outs
inc
and
cmps
aam
adc
mov
inc
(bad)
pop
and
and
xchg
mov
cli
jmp
sbb
mov
push
inc
and
imul
jge
mov
icebp
mov
or
jb
mov
fmul
pop
add
xlat
adc
mov
into
sbb
jl
(bad)
dec
mov
and
or
sahf
mov
ret
std
inc
retf
or
mov
mov
pop
test
jl
jns
ins
daa
mov
aaa
cs
sahf
shl
jne
mov
setns
sub
pop
cmp
loop
setnp
sbb
ja
fmul
mov
shr
mov
lds
outs
dec
js
xchg
adc
repnz
and
out
mov
cmp
jge
outs
lahf
mov
xor
gs
imul
and
sbb
adc
pusha
fcmovne
fcomip
leave
or
test
push
or
adc
pushf
aas
lods
sub
push
test
loop
outs
ret
and
(bad)
fld
jmp
jae
jge
pop
xor
retf
pop
mov
out
fcom
mov
loopne
test
into
call
ins
sub
jecxz
and
add
out
mov
call
push
and
mov
ds
mov
ds
push
sub
dec
mov
bound
adc
sub
jbe
outs
dec
stc
fisubr
jbe
mov
and
cmp
inc
nop
or
or
push
out
push
push
mov
or
(bad)
stc
sub
aad
xor
dec
pop
aas
push
imul
icebp
inc
push
dec
xor
pop
popa
fucomi
cmp
jg
fwait
cmp
nop
test
sbb
imul
div
daa
cmp
out
push
jg
dec
mov
inc
adc
gs
pop
jo
sbb
pop
or
test
dec
stos
fs
xchg
bound
inc
fisttp
add
push
xchg
jb
pushf
xchg
xchg
mov
icebp
fistp
sub
fwait
and
add
(bad)
and
cmps
cmp
or
xchg
int
not
bound
dec
pop
xchg
push
ror
loop
ds
mov
jno
adc
rcr
(bad)
nop
das
ds
scas
adc
jno
sub
aaa
and
xor
inc
fcom
leave
push
and
xor
push
popf
xchg
inc
test
sub
movs
push
inc
push
test
mov
cmp
mov
cmp
popa
inc
jne
fnsave
sub
xchg
adc
lods
out
inc
cmp
jl
add
aas
push
scas
sub
fs
or
int
cwde
inc
inc
daa
int
pop
mov
or
add
jno
ret
in
stc
ins
xchg
sbb
ins
in
mov
or
aam
es
(bad)
cmp
fcomip
les
add
cld
cmc
xor
sbb
dec
call
(bad)
add
popa
outs
pop
loopne
shld
scas
inc
cmp
push
retf
pop
mov
mov
and
cmp
retf
frstor
ds
add
mov
gs
cmps
scas
jns
and
pop
adc
sbb
inc
aas
enter
cmc
adc
ret
or
out
mov
xchg
cmps
push
imul
sbb
ds
or
popf
xor
jp
call
dec
test
pop
dec
les
retf
push
xlat
out
in
nop
mov
shl
in
mov
xchg
test
and
cmp
mov
in
pop
mov
jnp
push
push
push
mov
dec
dec
and
or
pushf
jmp
or
in
pop
movs
sbb
push
xor
div
push
cmps
ss
cld
bound
lahf
ss
xchg
fdivr
mov
test
and
xchg
inc
pop
add
mov
aam
push
out
push
cdq
xchg
fsub
inc
sar
sahf
pop
sbb
not
xchg
add
mov
shr
int3
js
vpshaq
sub
mov
mov
inc
add
(bad)
ja
dec
inc
inc
jmp
adc
mov
sahf
jae
lahf
out
and
xchg
xor
mov
lods
add
(bad)
xchg
retf
mov
ror
push
gs
dec
aas
test
add
jns
loop
dec
sbb
addr16
add
ds
mov
and
cli
scas
mov
jno
movs
addr16
pushf
cmp
fild
mov
fcomi
loope
adc
data16
bound
in
addr16
out
mov
dec
sbb
push
sbb
inc
clc
cmc
jp
data16
hlt
and
daa
imul
scas
inc
retf
in
inc
push
lods
popf
les
scas
nop
or
inc
arpl
(bad)
in
outs
imul
adc
(bad)
or
mov
cwde
stos
dec
add
mov
paddusb
push
fcmovnu
xor
imul
daa
xchg
sti
cmp
pop
adc
mov
mov
mov
push
repnz
fwait
lea
retf
into
sbb
dec
jbe
in
add
dec
push
test
aaa
sahf
adc
lea
aaa
pop
clc
push
pop
scas
adc
xchg
adc
ins
(bad)
ror
xchg
sub
mov
mov
call
lds
mov
cmps
sub
outs
scas
sub
int3
clc
loope
jb
nop
xor
pop
icebp
scas
and
fxch
sahf
or
hlt
stc
xchg
jae
and
dec
fadd
lods
xchg
loope
nop
sti
dec
(bad)
pop
fldenv
cmps
add
popf
adc
pop
adc
stos
adc
mov
mov
push
popf
lods
mov
push
xlat
mov
out
mov
pop
sti
push
jle
popa
sahf
or
cld
outs
outs
stc
push
fist
add
push
inc
sti
clc
addr16
fcomp
ror
jo
pop
in
pop
pusha
jne
es
fmul
out
int
sbb
rcr
push
fidivr
out
or
loope
jb
unpcklps
in
cmp
cmp
aaa
movs
retf
mov
add
(bad)
int
into
mov
push
mov
pop
mov
pop
push
jae
adc
pop
pop
enter
add
lods
loop
jge
mov
outs
mov
fnstsw
rcr
mov
mov
pop
rcl
imul
mov
dec
cmp
and
jge
xchg
cmp
imul
cmp
imul
or
add
gs
stos
pop
xor
sbb
jae
stos
clc
gs
inc
in
inc
add
push
ret
in
lods
in
sti
sbb
sbb
shl
dec
int
in
push
les
or
mov
loopne
xor
mov
push
jmp
xchg
ins
sub
mov
rol
add
fcomp
(bad)
fidiv
inc
(bad)
push
pop
xchg
mov
das
iret
rcl
jmp
adc
gs
cld
or
pop
aad
call
lods
aas
adc
nop
adc
lods
sbb
mov
adc
mov
aad
mov
adc
mov
movs
cmps
mov
add
in
mov
cld
mov
ss
xor
cdq
mov
daa
or
and
enter
lods
pop
xor
push
push
sub
push
add
cli
std
ins
mov
xchg
jns
mov
push
in
ss
in
out
xchg
mov
mov
pop
dec
gs
movs
mov
sar
jp
push
jecxz
jg
mov
hlt
mov
adc
fstp
aaa
sbb
add
cmp
sub
push
xchg
push
adc
dec
mov
push
sbb
ret
call
fs
sub
gs
test
nop
ret
push
cmps
inc
mov
aam
sub
dec
or
mov
cmp
adc
lea
dec
pop
test
sub
repnz
mov
cs
push
aaa
lods
lods
add
pop
not
je
xchg
scas
mov
clc
pop
js
(bad)
clc
mov
cli
(bad)
inc
ins
push
test
mov
(bad)
dec
repz
test
xor
and
push
dec
mov
test
add
or
mov
push
push
xchg
xchg
jo
bound
pop
or
inc
js
leave
inc
or
mov
dec
inc
push
stos
mov
jo
pusha
jmp
xchg
adc
sbb
cmp
inc
aas
or
mov
stos
pop
pop
jmp
imul
lock
mov
adc
es
in
icebp
sbb
mov
mov
cmp
(bad)
fistp
push
std
lea
pop
sahf
out
iret
mov
sbb
sahf
mov
lahf
push
test
das
push
fcom
and
call
mov
lahf
lods
(bad)
jno
mov
push
dec
frstor
fucom
fist
sub
test
in
mov
rol
outs
cmp
leave
bound
js
mov
test
shr
push
cmp
sbb
pusha
shl
sbb
jo
pop
pop
mov
mov
lds
mov
xlat
loopne
sbb
sub
lds
ret
add
jnp
mov
cmp
cmp
js
(bad)
out
out
dec
shr
leave
xor
retf
cld
mov
test
or
fnstcw
push
cmps
mov
pusha
dec
and
hlt
fs
js
dec
in
sahf
sub
jb
fs
js
test
mov
sbb
add
mov
dec
btc
cmp
push
add
inc
jmp
movs
add
in
xor
cli
xchg
gs
or
and
xor
jnp
pop
shl
pop
jl
add
icebp
xchg
nop
outs
and
inc
cmp
sbb
or
adc
add
je
call
or
jmp
jae
cdq
stos
imul
dec
rol
add
js
and
popf
pop
sbb
inc
fist
mov
jmp
movs
add
mov
cmp
dec
mov
lds
xchg
pop
lock
mov
movs
adc
ss
not
and
mov
mov
stc
mov
aam
inc
std
(bad)
lock
js
call
call
arpl
push
mov
push
push
retf
in
jmp
mov
cmp
(bad)
test
cmp
dec
and
adc
(bad)
sar
inc
dec
xlat
gs
cmps
pop
fwait
les
les
jne
cmp
ins
mov
jnp
mov
sub
call
jb
jb
daa
or
jg
mov
rcl
and
sub
push
jle
or
dec
and
and
and
fwait
cmp
fs
adc
out
bswap
push
xchg
(bad)
mov
and
cld
and
pop
imul
dec
in
popa
xchg
jne
daa
ret
cld
ficomp
loop
xlat
push
lock
fwait
or
repz
mov
jecxz
aad
or
mov
add
push
mov
mov
in
mov
push
push
stos
test
mov
ret
iret
adc
repnz
push
mov
dec
mov
jbe
ja
std
scas
xor
imul
inc
or
inc
scas
push
les
je
nop
fcomp
imul
outs
ins
xchg
arpl
mov
jnp
in
pop
test
pop
adc
or
mov
retf
outs
daa
retf
retf
cmp
lahf
sub
xor
gs
sub
shl
outs
push
out
xor
mov
adc
mov
cs
pop
(bad)
ror
mov
and
xchg
repnz
adc
retf
call
jmp
inc
js
jge
nop
ds
push
jmp
rcr
add
or
and
inc
xchg
pop
out
inc
sub
sar
cmp
pop
xor
xchg
(bad)
sbb
and
outs
push
and
loop
xchg
jne
mov
test
push
pop
or
ins
test
add
jp
pop
mov
inc
pop
adc
in
pop
mov
sbb
cmc
mov
dec
or
push
sbb
jo
and
pushf
(bad)
clc
stc
xchg
pop
mov
mov
lods
jo
mov
add
push
std
mov
nop
cmp
dec
push
retf
retf
jo
(bad)
jo
dec
loope
mov
ror
xchg
xor
xchg
aaa
mov
and
lds
lods
lock
bound
and
xchg
ret
pop
aaa
test
fwait
inc
int
cmps
sahf
iret
das
das
and
sar
push
pop
pushf
and
jge
sbb
xor
ds
mov
mov
add
cdq
pop
sbb
mov
or
jl
ds
sbb
add
std
lahf
(bad)
std
inc
push
cmp
cdq
mov
(bad)
jmp
jbe
mov
pop
mov
fdiv
outs
out
adc
call
in
aad
mov
jb
xor
xchg
ins
dec
inc
fiadd
push
fiadd
mov
lods
aaa
xchg
popf
test
adc
or
test
popf
pop
xabort
(bad)
mov
xor
pop
js
jge
retf
repnz
cli
and
cmp
cli
gs
ret
shl
imul
xchg
cmp
pop
xor
in
pusha
loop
pop
repz
inc
mov
jl
adc
or
popf
(bad)
sti
inc
fsubr
pushf
outs
ret
sbb
xor
lods
sub
out
(bad)
cmp
and
out
imul
mov
mov
lea
inc
into
popf
push
leave
loopne
das
jo
daa
add
mov
mov
inc
shrd
cmp
stos
aam
jbe
shl
daa
shl
cmc
jmp
les
ss
xchg
mov
mov
dec
push
fs
test
mov
lods
add
aaa
in
pop
xor
lods
cdq
out
or
xor
repz
dec
push
xchg
xchg
push
adc
scas
aaa
inc
je
and
xchg
imul
jg
mov
cmp
cmp
pop
jmp
in
rcl
ins
adc
out
inc
stos
fstp
pop
dec
pop
aam
sbb
push
pop
das
sti
in
lods
push
push
xchg
aas
push
dec
sub
imul
xchg
sbb
fidivr
rcl
adc
jae
sub
pop
imul
movs
xchg
cmp
lock
(bad)
push
daa
mov
add
in
xor
push
jg
inc
cmc
sub
mov
sbb
fwait
push
add
pop
adc
push
jb
idiv
cmps
push
pusha
mov
mov
jns
jl
pop
dec
retf
jle
jb
test
pop
ins
cli
mov
jae
mov
pop
inc
or
es
lods
les
sub
add
fistp
pop
data16
mov
cmp
popa
call
or
sub
in
ins
imul
fisttp
ins
pop
pop
adc
scas
daa
(bad)
cmp
inc
xlat
push
pop
or
and
stos
in
test
sbb
mov
enter
(bad)
adc
push
push
add
mov
(bad)
retf
das
retf
xchg
dec
gs
aaa
ror
pop
int3
out
xchg
mov
mov
inc
mov
lods
inc
mov
stc
jmp
outs
xchg
pop
sub
popf
and
add
xor
xor
mov
jmp
add
mov
sub
pop
sbb
cmp
jo
pop
dec
sbb
hlt
push
push
and
xor
cmps
pop
xchg
or
out
or
mov
rcl
sub
cli
mov
adc
je
xchg
xor
lds
jp
loop
gs
adc
lahf
xor
xor
test
push
repnz
fucom
sub
mov
loope
xchg
and
hlt
adc
sti
adc
cmp
popa
sbb
movs
mov
xchg
mov
rol
mov
pop
arpl
and
das
mov
fst
jecxz
cmp
jb
inc
cdq
jo
add
imul
cld
mov
sub
nop
mov
cmp
or
(bad)
(bad)
push
lods
inc
test
leave
cmp
push
pushf
push
cld
pop
push
xchg
mov
loop
jbe
and
retf
cmps
rcr
xor
imul
lock
adc
xor
adc
test
(bad)
mov
pop
arpl
es
pop
sub
pop
fisubr
dec
(bad)
out
outs
push
xlat
jl
loop
mov
js
add
arpl
cs
outs
jmp
shr
push
daa
icebp
mov
xchg
ss
cld
loop
pop
mov
mov
clc
push
xchg
ret
dec
call
jns
pop
cmc
xlat
mov
retf
(bad)
cmp
jbe
mov
inc
mov
adc
xchg
or
cmp
shl
mov
sub
and
xrelease
sbb
jge
adc
add
sub
mov
stos
mov
pusha
shl
cmp
arpl
cld
pop
shl
push
pop
push
repnz
sbb
mov
or
int3
pop
cs
cdq
mov
dec
out
ins
inc
cmp
add
inc
sahf
mov
dec
cld
dec
lock
popa
dec
dec
sbb
lods
mov
rcl
xor
fist
or
(bad)
and
lock
jl
iret
iret
aad
sbb
add
icebp
push
mov
dec
pop
mov
(bad)
nop
or
lea
sbb
cs
add
in
xchg
mov
mov
jecxz
shl
cwde
add
sahf
pusha
imul
jmp
fs
rcr
cmp
push
ds
loopne
ja
addr16
inc
pop
lock
cmp
cmp
les
test
es
iret
imul
add
pop
add
inc
mov
call
mov
sahf
(bad)
cmp
bound
out
xor
std
inc
loope
jbe
imul
loop
and
rcr
mov
iret
stos
xchg
sub
(bad)
lahf
not
test
xor
push
xchg
sbb
sbb
push
mov
mov
(bad)
mov
jmp
push
inc
and
mov
and
lods
or
pop
in
fstp
das
pop
jle
sub
cwde
and
or
mov
sti
xchg
imul
xchg
inc
ret
cmp
xchg
cmp
data16
imul
cmp
int3
lods
sub
les
into
stos
add
xchg
(bad)
out
sahf
mov
leave
nop
fimul
aam
or
inc
push
sub
xchg
mov
mov
add
repnz
dec
cmp
add
jp
cs
aaa
push
cmp
call
outs
xchg
xor
xor
ficom
pop
loopne
add
inc
pop
repz
mov
or
dec
imul
(bad)
aas
call
lods
shl
addr16
fstp
sbb
pop
adc
(bad)
out
clc
mov
and
arpl
adc
fcomp
pop
out
jg
int
test
inc
icebp
jle
arpl
pop
pop
push
repz
addr16
mov
jmp
inc
sub
or
fisttp
adc
repnz
mov
xchg
xchg
cmp
int3
adc
inc
inc
vxorps
outs
sub
out
pushf
mov
sbb
fnclex
and
mov
stos
cmp
dec
sub
mov
xor
lods
pop
sbb
iret
fs
shr
leave
repnz
dec
(bad)
pushf
aam
inc
inc
cwde
mov
or
ss
fs
mov
dec
sbb
mov
lods
add
pop
jne
cli
retf
sahf
fistp
xor
es
clc
xor
test
or
cmp
mov
mov
cli
mov
fld
cs
cmp
les
jmp
jle
cmp
push
neg
arpl
mov
loop
test
or
and
rcl
push
inc
shr
cli
mov
jle
ret
int
pusha
sar
sub
jmp
out
mov
sbb
xchg
data16
dec
and
in
test
push
xchg
mov
jg
add
lea
sub
std
shr
into
push
pop
pop
aam
test
xor
dec
pop
and
aaa
out
pop
test
es
mov
shl
and
nop
fdivrp
mov
jge
fadd
popa
mov
push
push
push
mov
rcr
fcom
jne
mov
call
outs
jp
mov
ins
pop
imul
int
push
aas
fsubp
ins
dec
retf
ins
cmp
push
out
mov
xchg
out
sub
setae
std
xchg
sub
push
popf
aam
adc
shl
f2xm1
lahf
xor
mov
adc
xchg
push
ror
frstor
in
dec
xchg
out
out
xor
hlt
lods
or
push
jno
xlat
push
inc
cmps
sbb
mov
out
(bad)
push
mov
jbe
in
or
fimul
and
and
jp
jmp
push
mov
fistp
xor
ja
fstp
mov
outs
sbb
push
xor
fldenv
daa
movaps
scas
cwde
add
fdiv
push
push
repz
mov
cmp
pop
outs
xchg
cmp
fcom
mov
add
push
pushf
iret
cld
fs
std
xchg
adc
sbb
or
mov
and
mul
fbstp
stc
xchg
movaps
push
cmp
lods
xchg
aad
pop
idiv
xchg
push
mov
xor
push
ins
sti
call
repz
sbb
out
or
pop
pop
mov
(bad)
pop
xor
inc
dec
in
inc
lahf
addr16
lds
sub
es
and
nop
cmp
fcmovnu
enter
xlat
int
pop
push
data16
ins
(bad)
dec
rcl
mov
iret
movs
dec
in
stc
dec
(bad)
imul
and
push
jl
fs
push
pop
js
cmovo
adc
test
das
sub
jo
cmp
dec
sub
add
cmp
xor
push
push
pop
and
push
dec
jle
jle
push
into
xchg
or
outs
mov
add
out
fdivr
cmp
les
call
pop
(bad)
add
jmp
add
sub
ret
shr
lahf
fmulp
fisub
inc
les
ins
int3
jmp
adc
adc
retf
dec
int
mov
pusha
sbb
dec
adc
sahf
mov
cdq
xor
data16
test
sub
rcl
inc
fisttp
mov
shl
ins
ror
or
lock
push
sub
aad
or
jl
fs
out
cli
test
push
retf
inc
inc
xor
pop
mov
aas
sbb
push
jae
movs
mov
jmp
xchg
fwait
jg
push
mov
push
sub
mov
cmp
mov
test
push
mov
xor
cmp
push
cdq
push
mov
xor
push
das
push
out
xchg
sub
(bad)
mov
aas
out
pop
jnp
outs
jo
inc
dec
xor
movs
adc
or
xchg
cmp
sti
aaa
mov
sub
out
aad
imul
cmp
aam
add
aam
hlt
push
inc
out
in
cmp
cmp
push
mov
pop
xor
cmp
mov
rcl
sub
fmul
adc
pop
out
sbb
(bad)
lods
pop
jb
sbb
addr16
loope
adc
push
push
sbb
cld
push
stos
fwait
cmp
aad
arpl
mov
sub
bound
lds
iret
inc
aam
mov
imul
jns
mov
sar
daa
fstp
jmp
pop
popf
cmps
ja
arpl
add
les
(bad)
int
adc
push
imul
pop
xchg
aad
mov
movs
sbb
and
lds
mov
fistp
inc
fimul
ins
inc
add
push
push
lahf
int
or
pop
mov
adc
shl
cli
pop
sub
les
inc
xor
(bad)
cmps
add
xor
dec
sbb
imul
test
pop
aam
std
inc
repz
adc
cli
loopne
push
(bad)
repz
ja
xlat
jl
int3
xchg
mov
inc
iret
mov
add
cmp
add
xor
pushf
aam
mov
dec
sbb
and
adc
add
cmp
xchg
sub
in
pop
movs
xchg
inc
mov
pop
pop
mov
jle
dec
sub
jno
push
enter
stos
sub
adc
js
btc
mov
popf
pop
out
cmp
adc
mov
inc
nop
out
pushf
fs
push
dec
xchg
imul
es
sbb
jae
fwait
or
ins
imul
inc
out
adc
xor
xlat
call
adc
sbb
add
xlat
sub
test
mov
xor
and
aam
sahf
outs
addr16
(bad)
xor
mov
sub
mov
fld
sub
ss
pop
fdiv
push
push
xor
dec
push
mov
pop
dec
dec
sbb
jecxz
xchg
xor
pop
adc
call
pop
mov
mov
mov
(bad)
xor
mov
mov
sbb
mov
ins
inc
pop
sub
lea
pushf
rcl
fwait
adc
pop
sub
not
sub
pushf
sbb
mov
add
movs
inc
and
jnp
push
pop
hlt
mov
in
shl
mov
ret
mov
xor
cmp
sbb
movs
pop
(bad)
out
push
cmp
sub
int3
mov
jo
pop
push
cmp
rcr
add
aaa
(bad)
xchg
std
adc
dec
js
call
sbb
sbb
scas
retf
push
dec
dec
movs
gs
lds
pop
(bad)
pop
aas
jno
or
pushw
xchg
xchg
cmp
(bad)
je
mov
inc
std
ins
inc
jg
clc
jmp
popf
retf
inc
icebp
jp
xchg
bound
dec
in
mov
jl
(bad)
or
jae
cmps
push
xchg
jns
in
vphaddudq
dec
mov
mov
push
out
fiadd
or
movs
pop
push
imul
aam
pop
vpcmpgtw
dec
inc
xor
repz
jne
scas
mov
push
and
xchg
dec
mov
gs
mov
xchg
cmp
adc
fs
dec
fdiv
test
push
psrlq
fsub
cmp
add
inc
dec
movs
lds
pop
dec
xchg
mov
sbb
scas
bound
push
sub
inc
xchg
or
mov
ja
mov
push
sbb
lods
or
xor
das
adc
jmp
mov
shr
jmp
xor
mov
jo
jg
mov
pop
jmp
adc
xor
push
outs
out
mov
mov
adc
stc
inc
cmps
test
inc
mov
fisub
aas
into
jns
neg
mov
cmc
xchg
sahf
xor
or
popa
outs
out
xchg
test
sub
mov
(bad)
xor
or
sbb
fiadd
and
shl
(bad)
dec
sahf
cmps
ret
cmp
xchg
dec
jbe
or
and
(bad)
xor
lahf
mov
mov
imul
jmp
adc
sbb
xchg
test
mov
and
push
addr16
mov
hlt
push
cmp
add
pop
es
jbe
shl
ret
xchg
idiv
test
inc
push
add
ret
xchg
and
movs
xchg
cmp
xchg
jo
adc
loopne
shl
cli
in
sub
in
push
mov
mov
adc
dec
push
adc
adc
xor
shl
bound
bound
loope
hlt
xchg
mov
pop
or
mov
je
pushf
and
jmp
pop
fwait
push
dec
sbb
mov
call
retf
push
retf
(bad)
rcl
xor
push
cmp
sbb
fmul
hlt
iret
push
imul
call
pop
push
adc
cdq
jbe
cmc
mov
clc
inc
into
mov
xchg
into
test
out
and
(bad)
or
(bad)
jmp
idiv
dec
bound
arpl
pop
out
xor
jp
popf
jecxz
cwde
xlat
sbb
idiv
mov
xlat
lea
fisttp
jne
fcomp
sub
jnp
xor
jl
and
jg
jbe
popa
jnp
push
mov
and
jle
xor
adc
into
ds
loope
mov
xchg
pop
(bad)
jge
repz
push
nop
adc
ja
mov
sti
fwait
and
adc
xor
(bad)
cmc
jg
push
mov
inc
les
sbb
hlt
xchg
jb
pop
cmps
sbb
push
xor
mov
and
mov
add
popa
cwde
xchg
sub
add
clc
jns
add
xor
iret
xchg
xchg
and
(bad)
(bad)
or
ss
test
mov
loop
shr
popf
pop
sub
xchg
aam
fsub
mov
gs
dec
leave
addr16
fimul
pushf
inc
push
jbe
xor
push
das
sub
mov
jo
fcmovbe
pop
mov
les
add
and
inc
pushf
and
or
dec
cmps
cmps
rcr
(bad)
gs
sub
or
pop
ins
push
inc
xchg
jb
popf
mov
(bad)
cmps
dec
jle
sub
lds
dec
jp
xchg
bound
sub
fwait
dec
scas
dec
push
pop
rcl
sub
div
call
cmps
hlt
loop
ficom
loope
and
movs
mov
push
mov
and
adc
jmp
sbb
or
push
(bad)
(bad)
retf
mov
sub
fsub
scas
xchg
adc
jo
inc
dec
lea
pop
cmp
in
push
nop
dec
loop
cwde
mov
rol
ret
(bad)
adc
(bad)
into
pop
retf
sbb
in
ficom
or
mov
jp
call
inc
sub
push
and
bound
inc
prefetchwt1
xchg
push
push
popa
das
in
sub
cmp
enter
aam
cmp
mov
ins
or
dec
jno
add
(bad)
pop
mov
jno
test
add
add
cmp
call
cmc
std
lds
call
xchg
or
add
sub
inc
int
bound
xor
sub
sbb
repz
pop
jne
call
aam
neg
xor
aaa
jnp
mov
daa
jae
jb
dec
out
sub
jmp
jg
xor
push
popf
xor
mov
jo
or
inc
fwait
and
int
pushf
inc
pushf
adc
add
adc
retf
push
pop
(bad)
sbb
sti
imul
jmp
xor
cmp
push
mov
repnz
in
div
in
xchg
outs
jmp
rcr
push
jo
fst
das
push
les
dec
nop
xor
(bad)
rol
sub
jns
add
pushf
or
out
jo
test
mov
fistp
push
or
sub
push
cmp
popf
inc
bnd
mov
fs
es
mov
scas
ret
dec
in
out
dec
clc
ret
add
cld
sub
js
mov
in
xchg
push
add
scas
(bad)
sti
or
cmp
(bad)
add
ja
inc
jmp
iret
loopne
(bad)
pop
lock
aam
iret
fld
test
into
mov
sbb
cmps
push
inc
fmul
jl
mov
mov
add
mov
xchg
movs
adc
jl
adc
jno
pop
xchg
sub
inc
xlat
dec
(bad)
ins
or
pop
inc
jmp
clc
mov
test
cmp
dec
xor
sub
or
adc
in
xchg
sbb
ss
imul
or
fsub
xor
ret
jge
add
js
sbb
adc
xor
mov
fs
cmps
aaa
sub
enter
mov
(bad)
sti
jb
pushf
jno
cmp
call
stos
aad
dec
inc
in
and
cmps
ins
pop
mov
stos
jno
stc
ret
pop
sbb
jo
outs
xlat
cwde
test
add
ror
(bad)
mov
ds
rcl
push
xor
out
sub
imul
and
mov
retf
jge
xchg
sbb
sub
mov
jnp
mov
jbe
arpl
sbb
push
and
lods
pop
jno
cmp
pusha
xor
xor
popa
je
mov
inc
test
clc
mov
xchg
js
test
(bad)
sub
fisttp
jle
shl
jne
xchg
and
fs
pop
xlat
test
retf
jnp
push
sub
cmp
pusha
sub
ds
jle
sub
inc
sub
retf
sbb
add
into
sbb
push
sub
inc
cmps
popa
push
inc
jecxz
sbb
pusha
push
mov
jl
inc
mov
ror
xchg
inc
lds
pop
mov
add
pusha
out
push
in
xchg
jmp
(bad)
sub
mov
inc
jg
mov
push
jg
int
outs
mov
jp
push
sahf
mov
das
dec
jns
nop
movs
sbb
add
scas
xchg
int3
xor
mov
ret
mov
fcmovnu
push
cmp
jo
fnstcw
cmp
test
shl
jbe
jl
mov
in
xor
pop
aam
push
push
popf
fcomp
stos
out
adc
jo
stos
xchg
mov
sbb
retf
lahf
sahf
mov
test
mov
gs
scas
movs
retf
jne
sbb
push
shld
aaa
and
xor
mov
push
fs
test
adc
pop
lahf
test
adc
add
dec
add
scas
stos
jecxz
xchg
gs
adc
mov
push
and
and
add
ror
and
mov
rol
push
pop
mov
mov
stos
push
out
retf
xchg
add
jg
or
call
sub
int
xchg
jo
in
js
stos
int
daa
shl
(bad)
xchg
jnp
pop
mov
aad
hlt
pop
cmc
jns
xor
cmp
add
bound
in
div
(bad)
cld
fwait
adc
and
xor
mov
pop
cmp
pop
test
js
cmp
sti
shl
nop
inc
repnz
popa
pop
cmp
and
js
test
xlat
mov
nop
sar
cs
test
cmps
arpl
les
and
fsubrp
ja
xchg
test
fs
movs
enter
or
ins
pushf
mov
inc
mov
ss
mov
das
cmp
or
and
shl
add
dec
adc
jae
(bad)
mov
xchg
mov
xchg
xor
aam
jg
adc
mov
cdq
xor
or
sar
repnz
xchg
adc
mov
pop
xchg
xchg
mul
ss
cmp
xchg
or
hlt
adc
mov
sbb
adc
pop
pop
jne
aas
lea
xchg
inc
shl
sti
dec
aaa
sbb
or
movs
stc
jl
test
jmp
call
adc
(bad)
(bad)
push
int3
mov
inc
pop
mov
int
mov
(bad)
jno
ret
dec
std
imul
jnp
lea
jp
mov
scas
push
shr
dec
repz
sbb
jge
pop
lock
or
clc
test
in
into
enter
enter
sbb
clc
movs
mov
in
mov
dec
inc
test
xchg
popa
xchg
idiv
xor
sbb
sbb
dec
imul
in
fisub
mov
mov
shl
and
sbb
jge
jno
sbb
fimul
mov
inc
jnp
lea
fmul
push
nop
or
add
ins
inc
jge
xchg
sbb
cmps
dec
push
xor
pusha
jle
retf
call
(bad)
popa
stc
jno
and
and
push
mov
in
and
cmp
and
mov
push
xchg
ss
pop
jmp
mov
in
sar
add
push
pop
inc
mov
jge
xchg
add
jp
pusha
xchg
iret
pop
aam
sti
add
nop
(bad)
es
clc
out
or
nop
aaa
sar
push
test
(bad)
dec
stc
jne
or
xchg
xor
ror
xchg
inc
mov
je
and
mov
pushf
pop
stos
lods
iret
loope
cmp
inc
xchg
clc
in
enter
int3
movs
and
xor
out
add
out
fcom
or
das
in
mov
fs
xor
ja
hlt
pop
or
jmp
aad
movs
lds
dec
fisttp
scas
mov
sbb
xor
push
cmp
sar
jmp
and
popa
push
push
leave
push
dec
xchg
shl
jg
sub
dec
arpl
sahf
lods
adc
stc
sub
ins
imul
retf
jp
pop
out
cli
(bad)
adc
test
fist
xor
push
mov
lea
xor
shr
retf
adc
jmp
jmp
cmc
scas
cmps
and
(bad)
push
mov
jp
jne
dec
out
retf
push
scas
mov
cmp
(bad)
or
xchg
xchg
and
in
cs
jo
es
ins
movs
(bad)
out
jmp
sar
jp
add
mov
cli
pop
movs
(bad)
cwde
inc
lock
jge
jp
pushf
mov
jno
icebp
std
sub
sbb
inc
mov
push
add
pop
mov
scas
sub
jmp
jne
in
sti
and
add
cmp
add
mov
sub
or
aam
push
cli
ja
or
or
or
pop
imul
aad
sbb
dec
aam
mov
dec
or
ds
jge
hlt
out
mov
adc
outs
mov
icebp
ja
jno
cmp
mov
cs
scas
add
les
dec
mov
repz
sbb
cwde
js
std
push
cmp
dec
ss
sub
into
je
xchg
scas
loope
addr16
sbb
test
retf
jo
scas
adc
xor
callw
sbb
out
fstp
mov
mov
fisubr
call
js
push
sbb
mov
mov
and
mov
lods
in
loop
xor
cdq
push
pop
mov
jg
loope
mov
popf
popa
test
mov
mov
shl
pushf
pop
sbb
dec
mov
xchg
jmp
jb
jns
adc
push
aam
(bad)
cdq
retf
in
inc
dec
and
je
jmp
cld
xchg
mov
sahf
or
inc
mov
dec
and
pop
cmp
test
test
mov
xchg
lods
mov
fisttp
push
add
push
push
inc
sar
ds
sbb
sub
shr
mov
xchg
ret
retf
outs
push
loopne
xchg
retfw
cmc
jl
shr
inc
cmp
adc
sbb
xor
and
imul
(bad)
mov
xchg
pop
fild
sub
pop
mov
in
cli
out
adc
mov
mov
and
cmp
out
ins
sbb
loopne
in
(bad)
fist
sub
lock
xor
pop
mov
pusha
dec
es
pop
mov
neg
mov
call
leave
add
xchg
jge
sbb
cmps
scas
int3
aad
out
ficom
sbb
jne
cmc
fwait
mov
add
mov
jecxz
pop
sbb
imul
jns
lods
inc
sub
mov
dec
sbb
push
add
test
dec
push
inc
scas
xchg
icebp
imul
imul
shl
arpl
jbe
clc
ret
adc
pusha
jne
and
lds
repz
js
and
sti
loop
pop
scas
cmps
jle
stos
ja
ins
and
mov
sub
jg
or
jg
fidiv
(bad)
cdq
cs
out
xor
(bad)
stc
in
into
out
mov
mov
and
sub
push
or
sub
or
faddp
pop
stos
movs
push
sub
test
push
jb
outs
push
sub
ffreep
mov
pop
sbb
es
dec
das
in
mov
(bad)
adc
enter
or
movs
xchg
mov
jge
inc
jbe
xor
sub
cmp
xchg
cmp
xchg
fcmovnb
(bad)
out
mov
(bad)
ja
cmp
mov
dec
retf
or
add
adc
nop
test
pop
dec
push
dec
sbb
sub
jg
dec
mov
jo
sbb
mov
xchg
fcmovnu
in
sub
and
inc
test
mov
or
nop
push
add
mov
data16
aas
fcmovne
inc
mov
bound
or
lods
out
add
jmp
fidiv
clc
call
stc
int3
fs
and
mov
mov
call
call
movs
or
daa
ret
jl
and
stos
in
mov
xchg
push
ret
cmp
scas
mov
sub
lods
xchg
push
inc
xchg
aad
mov
or
cli
cmps
fsub
xchg
fcomp
sbb
in
pop
ficomp
xchg
push
sub
movs
pop
ret
cdq
xor
inc
inc
push
stc
fsubr
add
mov
push
pop
jb
fwait
sbb
xlat
sbb
(bad)
adc
rcl
cmp
aam
stos
stos
(bad)
daa
sub
out
sub
repnz
ja
push
ss
pop
sub
xchg
xor
lock
fadd
lds
xchg
pop
outs
jo
sub
es
sbb
and
add
into
outs
fild
jle
popa
daa
add
lahf
cmp
std
sub
add
ret
dec
rcr
dec
scas
jp
pop
push
lods
xchg
test
gs
sub
je
(bad)
ss
pop
daa
loop
out
push
jno
inc
mov
jno
mov
or
sbb
rcr
ins
dec
outs
xor
leave
outs
mov
stos
push
xchg
sahf
mov
jae
test
sub
fs
outs
and
(bad)
rcr
hlt
in
cs
out
inc
pusha
mov
dec
dec
add
inc
xchg
cmp
cmp
jge
mov
add
dec
adc
pop
inc
in
xchg
pop
jo
inc
repnz
dec
std
or
sahf
mov
lock
cmp
arpl
cmp
jae
push
ins
lods
sti
xchg
ja
cmp
jecxz
in
adc
mov
inc
jecxz
mov
nop
cmp
scas
outs
pop
stc
not
xor
mov
inc
lea
sbb
xor
repnz
xchg
je
add
mov
jl
mov
or
and
jmp
push
sbb
cld
sar
(bad)
push
vsubsd
mov
cs
pop
stos
mov
fldenv
sub
mov
in
adc
ds
aad
xor
sbb
mov
pop
sbb
stos
push
arpl
xchg
popa
sub
shr
mov
fistp
ins
dec
out
in
xor
inc
push
xor
push
fwait
mov
inc
rol
and
cmp
adc
repnz
xchg
call
inc
repz
mov
sbb
adc
inc
lock
test
addr16
sti
hlt
and
fabs
mov
shl
xor
jle
sub
mov
jmp
push
xchg
fstp
cwde
sbb
(bad)
lods
mov
test
xchg
push
aam
cmps
sub
or
data16
lods
push
hlt
fwait
rol
imul
sbb
cmps
sub
(bad)
je
inc
bound
jmp
popa
test
cwde
mov
mov
xchg
ja
xor
or
xor
les
bound
iret
push
call
jns
push
test
cwde
mov
test
dec
popf
fistp
fld
and
jb
sbb
pop
ds
ins
xor
dec
and
push
ins
push
mov
fbld
mov
les
inc
cdq
dec
fimul
aas
or
xor
add
ins
mov
sar
mov
and
mov
jb
push
push
xchg
dec
push
int3
neg
pop
repz
pop
mov
cli
rcl
and
sub
pushf
leave
fcomp
jo
cmp
or
cmps
mov
imul
mov
(bad)
retf
pop
xor
retf
popf
cmp
cmc
push
sbb
jle
sar
bound
out
or
mov
daa
dec
add
call
xchg
scas
sbb
sbb
inc
mov
or
adc
sbb
cld
push
inc
aaa
pushf
inc
scas
add
xor
adc
push
arpl
and
push
mov
mov
lods
repz
xchg
fdivr
or
(bad)
dec
cdq
mov
mov
mov
mov
test
and
sar
adc
out
sti
in
push
dec
mov
xlat
adc
add
pop
cmp
mov
clc
push
sar
xor
pop
test
jns
cmp
mov
pop
xlat
lods
cmp
jp
pop
fsubr
fisubr
mov
(bad)
fisub
inc
cmp
std
sub
push
dec
sub
aad
mov
retf
js
lahf
ins
add
je
push
push
cmc
push
and
add
fcos
mov
pop
int3
rcr
jge
test
add
pop
shl
movs
or
hlt
rcl
jno
int3
lods
cmp
push
push
shl
sbb
mov
add
sar
rol
mov
adc
mov
sahf
inc
das
sub
sub
xchg
mov
xchg
xlat
sahf
les
sub
mov
xor
sbb
dec
mov
xchg
(bad)
pmuludq
push
sbb
sub
sbb
daa
ror
jl
push
call
jecxz
dec
(bad)
(bad)
or
and
mov
add
or
jecxz
push
sub
fdivr
dec
shr
repz
loope
cwde
mov
mov
repnz
sti
mov
stc
pusha
mov
jp
add
pop
ds
jb
cmp
addr16
fidiv
and
push
stos
push
into
xchg
adc
icebp
xor
add
jnp
push
or
xchg
add
push
das
pop
and
and
sahf
cdq
(bad)
cmp
test
cmc
sub
into
add
cdq
pop
les
repz
cmc
and
sar
xor
xchg
sbb
js
cmp
(bad)
jmp
xor
inc
pushf
inc
scas
add
(bad)
loopne
xor
push
push
(bad)
mov
xlat
inc
jns
xchg
inc
dec
(bad)
pop
pusha
test
sahf
add
push
adc
inc
sub
imul
mov
and
mov
and
arpl
out
jns
inc
pop
(bad)
into
mov
inc
aaa
fwait
int
pop
and
test
mov
dec
xor
and
cmp
push
popa
dec
fisub
mov
popf
sub
sub
xchg
ret
xchg
push
add
aam
das
xor
and
cmp
pushf
dec
push
imul
inc
sbb
sbb
cmps
cmp
sub
loope
bound
and
sub
inc
in
repnz
fsub
fwait
pop
or
sub
cs
jns
aas
mov
push
add
test
jmp
shl
test
test
cmp
imul
cmp
mov
and
sub
sbb
repnz
aam
in
in
push
jmp
aad
xor
jl
cmp
push
adc
std
jl
outs
mov
cs
aad
pop
ins
lds
lds
push
mov
push
mov
loope
repnz
push
lock
sbb
or
mov
push
dec
(bad)
aas
pop
pushf
loopne
push
add
mov
and
sub
sahf
xchg
leave
add
mov
inc
idiv
pop
scas
lods
sahf
jae
mov
cmp
xchg
ins
xor
push
mov
and
jnp
mov
add
addr16
add
test
dec
mov
scas
jb
leave
mov
push
mov
rcr
cmps
cmp
into
inc
adc
add
xchg
sub
and
xchg
and
fs
(bad)
aam
jb
inc
jnp
mov
mov
mov
mov
mov
sub
add
sub
(bad)
in
push
mov
(bad)
fadd
pop
retf
or
xchg
mov
mov
mov
push
(bad)
dec
pop
add
xor
pop
repnz
icebp
out
cmps
rcl
fsubr
or
out
scas
in
pop
jge
or
call
push
push
sub
mov
or
add
xchg
ins
adc
cmovge
inc
shl
shr
ror
jp
adc
cmp
out
scas
sub
mov
xor
(bad)
retw
cld
popf
mov
inc
int3
iret
mov
sub
push
clc
dec
jl
ret
xchg
or
test
nop
test
fild
mov
xor
in
or
and
icebp
mov
sbb
pop
jo
push
int
aam
adc
push
xchg
jmp
push
cs
add
mov
xchg
inc
and
xor
pop
cmp
mov
sbb
inc
jle
out
pop
or
fst
inc
lock
xchg
mov
nop
and
ds
bound
loopne
mov
aam
fwait
mov
push
inc
xor
mov
sbb
(bad)
test
jecxz
xor
aaa
movs
loop
jae
push
xor
inc
mov
mov
inc
xchg
push
xor
bound
jno
mov
xor
test
rcr
ss
cmp
mov
and
push
mul
push
je
mov
sub
icebp
aad
clc
cmp
adc
xlat
les
enter
mov
mov
dec
push
xor
jno
nop
push
pop
jmp
xor
test
pop
jno
addr16
scas
fld
movs
dec
inc
and
cwde
add
xchg
or
mov
ins
xchg
and
xlat
xchg
aaa
lods
jp
pop
scas
in
fmul
push
arpl
lock
lods
fistp
(bad)
popf
jb
aam
rol
dec
mov
inc
xchg
adc
shl
jmp
adc
shl
cmp
mov
shl
mov
inc
nop
ret
push
clc
pop
cmps
popf
arpl
gs
sub
ret
jb
sub
ret
inc
aad
sbb
movs
test
jno
add
scas
jle
sub
xchg
and
cmp
cdq
jo
cmp
inc
mov
push
mov
fsub
jl
ds
pop
inc
mov
xor
test
ret
dec
adc
repnz
ja
or
fwait
cli
xchg
push
add
jne
push
fucom
push
lods
fsub
loope
and
cmp
inc
sar
cmp
nop
mov
mov
repz
add
int3
add
and
(bad)
xor
jb
and
scas
shr
out
(bad)
stos
push
jle
push
test
mov
cmp
das
hlt
cdq
and
lahf
ret
cmp
pusha
mov
adc
out
and
xchg
and
int
push
sub
mov
mov
jmp
int3
push
push
inc
and
pushf
jnp
sahf
mov
mov
inc
jno
dec
test
mov
nop
pop
dec
add
cmp
xchg
xor
iret
and
aam
sbb
sahf
mov
pop
adc
fcmovnbe
mov
inc
pop
sub
adc
scas
fild
inc
dec
int3
retf
ins
test
mov
adc
add
cmp
cmp
hlt
movs
sub
lods
imul
enter
cmp
xor
loope
mov
jecxz
cmp
stc
mov
mov
push
cmps
test
inc
jnp
push
rcl
(bad)
cmp
test
movs
mov
and
outs
neg
in
pop
daa
aas
in
arpl
mov
in
loop
jl
cs
jne
sbb
(bad)
pop
dec
in
mov
dec
fmul
lods
mov
retf
call
add
call
mov
push
sbb
inc
dec
lods
jae
mov
ficom
enter
iret
nop
pop
cld
int3
jns
std
xchg
out
gs
bound
cwde
jecxz
jbe
cmps
icebp
mov
jb
inc
lods
loope
fwait
jb
ins
xor
in
cmp
aas
ds
(bad)
xchg
out
popf
ins
or
sub
pop
mov
retf
or
retf
fiadd
xchg
(bad)
pop
retf
ficom
add
mov
push
(bad)
(bad)
out
repnz
pop
ins
push
jns
outs
sti
add
(bad)
lods
jo
loop
pop
dec
pop
mov
jecxz
xchg
push
cmp
or
test
into
arpl
and
pop
into
cmp
popa
or
fsub
add
inc
sahf
(bad)
mov
sub
shr
outs
mov
scas
dec
shl
mov
add
mov
sub
xlat
xchg
sbb
push
sub
call
add
inc
out
pop
push
jo
xchg
xor
retf
xor
std
jmp
push
add
dec
lahf
dec
push
(bad)
sbb
gs
sub
jbe
mov
das
mov
mov
mov
(bad)
push
les
inc
adc
inc
shl
or
jne
add
adc
pushf
xor
sub
clc
sub
(bad)
jecxz
or
mov
jp
push
jg
pop
xchg
outs
cdq
dec
dec
arpl
jge
cmc
out
mov
aam
push
daa
daa
(bad)
cli
popf
repnz
dec
cmp
or
cwde
dec
jne
aam
mov
fld
and
mov
call
sub
sar
inc
push
xchg
jb
add
adc
(bad)
out
imul
sti
retf
sub
sbb
xchg
jo
push
shl
inc
out
pusha
out
mov
mov
jmp
iret
sar
push
movs
mov
ret
stos
mov
stos
popa
shr
fst
scas
mov
and
bound
(bad)
cli
inc
push
cmc
fdivr
push
ins
sub
and
sbb
inc
jae
mov
shl
jnp
es
ja
movs
sbb
jp
lahf
cmp
xor
dec
in
out
mov
aam
jmp
jnp
(bad)
out
cwde
les
data16
jno
ja
sub
and
out
xchg
inc
xor
mov
pusha
out
leave
cmp
mov
add
test
sbb
in
inc
retf
call
xchg
push
int
xchg
and
clc
add
pop
rol
fiadd
mov
mov
push
mov
jmp
fst
jmp
jno
stos
jle
jp
jge
dec
mov
mov
test
dec
movs
inc
cmp
sub
outs
cli
fld
rcr
ret
stc
mov
mov
cmp
fnstenv
jp
mov
sbb
sbb
nop
test
hlt
ror
out
pop
lahf
into
sbb
or
loopne
add
lahf
mov
add
xrelease
pushf
inc
adc
fcmovb
inc
push
and
(bad)
mov
mov
fs
push
xor
std
out
mov
aam
dec
outs
pusha
daa
test
jmp
sahf
ins
adc
das
out
inc
sub
call
cmc
pop
mov
push
xlat
outs
mov
cwde
ins
push
mov
ss
retf
sar
and
int3
pop
push
push
push
mov
mov
fild
pop
test
mov
bound
mov
int
mov
adc
movs
jp
dec
and
or
add
push
dec
jecxz
sub
popf
sbb
or
dec
pop
rol
add
add
adc
lock
inc
inc
shl
push
int
xlat
pop
in
dec
pop
fbld
int3
cmp
jle
inc
and
dec
sub
test
mov
xchg
mov
in
pop
mul
mov
hlt
das
fbstp
movs
outs
adc
pop
std
sub
call
addr16
inc
or
jge
push
(bad)
int
add
mov
or
cmps
int3
pop
in
jp
adc
and
(bad)
cs
jmp
dec
cmp
xlat
outs
add
je
and
les
xor
mov
imul
(bad)
jae
or
and
jle
hlt
es
sub
dec
pop
call
mov
(bad)
ss
add
out
sbb
lea
fidivr
shl
cdq
mov
push
in
push
fdivr
mov
jns
sbb
fnstenv
mov
repz
sub
xchg
pusha
adc
daa
mov
jns
xor
sti
lea
fisubr
or
clc
hlt
test
mov
and
xor
jge
xor
fld
aas
xor
out
lds
cmps
xchg
mov
imul
xor
outs
mov
les
cmp
out
cmp
jp
outs
or
int3
lods
adc
sub
cmp
fcom
fistp
div
in
aam
jb
push
out
jae
pop
in
add
ja
jno
sti
rcr
jmp
lods
cli
xchg
push
inc
pusha
or
sbb
mov
xor
pop
out
inc
cdq
sbb
mov
jns
fcom
int
aad
cwde
sbb
jne
and
jnp
jp
jmp
movs
push
add
adc
mov
ja
cld
or
aad
and
mov
fs
pop
pop
movs
mov
mov
outs
loop
jmp
jle
in
or
xor
enter
scas
sar
push
and
push
jp
or
sub
mov
pop
(bad)
jg
jbe
adc
sub
mov
fstp
hlt
jmp
imul
test
arpl
(bad)
cmp
sar
clc
and
pushf
cli
(bad)
push
std
addr16
xchg
and
mov
ret
imul
mov
mov
es
push
jmp
scas
push
js
ret
cmp
and
test
push
int3
push
fnstenv
xor
and
jmp
push
adc
in
jp
shl
retf
in
push
or
sti
inc
stos
fsub
push
mov
adc
mov
shl
cdq
dec
std
and
cmp
fwait
cmc
xor
push
pusha
mov
or
jnp
ins
inc
push
inc
add
mov
data16
dec
sbb
lods
scas
or
push
lods
or
loope
dec
pop
repz
arpl
or
jmp
xor
push
cdq
ds
cmp
xchg
jo
dec
lahf
cwde
push
or
sahf
sbb
loop
jne
ror
mov
(bad)
cdq
stos
pop
inc
mov
xor
pop
js
(bad)
jp
xchg
gs
sahf
pop
mov
ret
pop
pop
pusha
mov
ficomp
add
push
out
rcl
shl
xchg
jp
loopne
(bad)
adc
sbb
ror
and
adc
adc
test
aam
push
cli
push
push
inc
jg
sar
test
pop
cmp
lea
test
gs
ss
push
(bad)
int
leavew
pop
adc
aad
aas
cdq
addr16
out
xchg
shl
fild
scas
or
fbstp
push
inc
sbb
clc
sahf
mov
sub
outs
dec
lea
fwait
mov
outs
inc
int3
(bad)
ret
xchg
jo
pop
adc
add
data16
lds
and
shl
dec
cdq
int3
jg
jae
push
push
ss
movs
dec
xchg
mov
fild
icebp
push
js
sbb
mov
push
jg
pop
push
adc
and
sahf
add
imul
adc
rol
inc
dec
jp
bsr
iret
jnp
imul
mov
cmc
and
or
mov
popf
into
dec
ret
sbb
sbb
in
or
fsub
stos
jge
jmp
sub
data16
dec
leave
pop
test
in
cmp
add
lods
push
mov
fadd
test
inc
push
xor
jbe
int
and
and
movs
mov
jnp
cld
or
dec
jno
outs
pop
xor
stos
sbb
add
jne
xchg
popf
lods
sub
aad
mov
iret
imul
xor
neg
dec
xor
inc
loope
jbe
push
and
(bad)
adc
(bad)
aam
pop
lods
push
xor
call
xor
jo
scas
(bad)
jnp
jge
(bad)
(bad)
repnz
or
out
in
mov
mul
ss
jmp
(bad)
addr16
mov
fisttp
push
adc
jno
jae
and
sub
dec
mov
mov
ret
into
jo
aam
mov
loopne
xor
sbb
out
push
(bad)
and
add
dec
mov
adc
inc
fdivrp
std
jmp
adc
cmp
rol
stc
js
call
rol
and
test
mov
jbe
mov
mov
and
mov
shl
push
shl
aad
mov
fcomp
sahf
data16
and
jmp
popf
cld
lea
movs
sub
jb
push
mov
cmc
out
xchg
sub
xchg
mov
and
ret
cmp
fst
stos
push
jb
mov
push
sub
xor
mov
cmp
push
mov
xor
or
cwde
mov
or
in
xchg
cmc
mov
add
loop
fimul
outs
jb
ret
sub
inc
adc
aad
stos
pop
dec
cmps
and
xor
mov
mov
and
push
fimul
and
sub
pop
out
movs
cwde
pushf
inc
add
jp
or
fistp
push
push
add
pop
pxor
movs
jnp
or
fnsave
xor
mov
xor
add
jge
sbb
push
arpl
movs
ficomp
fst
stos
sbb
add
fadd
test
jecxz
pushf
mov
inc
push
and
mov
jbe
je
outs
sbb
mov
fs
pop
retf
jp
test
fwait
mov
daa
fnstcw
sbb
int3
iret
mov
push
(bad)
sbb
stos
push
lahf
push
jmp
or
test
mov
(bad)
cld
mov
adc
loope
iret
inc
push
add
mov
jne
add
jecxz
pop
loopne
cwde
mov
xor
int
inc
fwait
pop
xchg
ja
inc
mov
repnz
das
add
lock
push
cmp
cs
adc
lods
ss
mov
sbb
mov
aaa
pop
inc
sub
sub
push
pop
push
and
cli
ds
test
mov
lock
sbb
out
or
xor
mov
dec
add
in
jle
in
xchg
or
jnp
mov
std
cs
adc
js
sahf
daa
cld
fstp
inc
scas
jge
push
push
or
(bad)
out
cs
mov
mov
add
rcr
push
lahf
mov
dec
cmp
out
dec
mov
mov
pop
xchg
dec
jg
and
inc
mov
add
jns
xor
fisub
gs
xor
mov
pop
out
repnz
mov
sbb
lahf
dec
adc
clc
in
ret
push
dec
mov
mov
ins
or
lods
adc
pushf
scas
call
imul
xor
or
sub
ja
inc
sub
fmul
cli
les
adc
cmp
(bad)
jecxz
or
jnp
jne
adc
ja
mov
out
sti
xor
dec
mov
dec
cmp
or
push
enter
enter
pop
mov
iret
add
data16
or
cmps
sti
cld
sub
(bad)
popf
mov
cmps
faddp
xchg
stc
xlat
mov
mov
add
(bad)
aam
into
ficomp
xchg
pop
mov
cwde
repz
dec
jge
(bad)
test
xlat
jne
repz
aad
pop
sub
fidivr
dec
xchg
retf
mov
xchg
cwde
int
and
mov
push
shr
outs
nop
xor
ror
fild
mov
mov
in
adc
arpl
in
clc
ins
push
pop
hlt
push
loopne
lods
mov
cmp
ror
mov
cmp
pop
push
cmp
jle
adc
and
inc
shr
xabort
pusha
or
cmps
cmps
jmp
bound
sub
mov
out
frstor
mov
ficom
mov
jge
lods
mov
aad
xchg
mov
mov
sbb
fxch
jmp
xor
sbb
ret
mov
jmp
clc
pop
dec
ins
pop
dec
scas
enter
inc
sub
push
out
mov
adc
test
arpl
pop
xchg
lods
xchg
cmp
out
xor
cmp
cmp
xchg
jp
jo
test
or
mov
push
push
pop
out
rcl
dec
cmps
mov
cld
sub
fnstsw
xchg
mov
dec
adc
or
and
push
xchg
scas
mov
mov
dec
inc
pop
cmp
(bad)
out
or
inc
sub
cmp
js
je
imul
jle
je
pop
pop
movs
push
popa
xor
shl
rol
sbb
scas
push
push
sbb
xchg
loop
stos
cmp
enter
aad
stos
shl
pop
push
and
mov
xchg
test
xor
ret
int
aas
fwait
and
fmulp
mov
push
cdq
mov
xchg
cmc
imul
pop
imul
jns
ds
xor
and
mov
shl
dec
fwait
mov
xchg
mov
loope
test
xlat
and
and
inc
in
fistp
das
mov
dec
inc
xchg
arpl
jmp
cli
jmp
jns
and
pop
maxps
add
out
pop
stos
mov
dec
or
loope
xchg
xchg
outs
(bad)
pop
ret
adc
adc
jecxz
sub
pusha
inc
cmp
pop
dec
shl
xor
gs
add
add
pop
inc
push
xchg
outs
and
out
gs
jecxz
xor
iret
dec
iret
ins
loop
pop
movs
js
dec
movs
gs
aam
and
das
std
jns
xchg
dec
mov
pop
push
jmp
xlat
jnp
ins
push
arpl
sbb
in
lods
sub
enter
mov
jl
mov
mov
cmp
call
adc
out
sub
or
inc
ret
ficomp
hlt
sub
push
lods
and
stos
sub
(bad)
cs
imul
inc
cmp
test
dec
cld
cdq
mov
xchg
out
dec
dec
fmul
xor
lds
rcr
xchg
out
icebp
stos
call
sbb
dec
dec
sbb
in
gs
int
lahf
test
(bad)
loop
or
in
cli
ret
xchg
mov
cmc
ret
in
cmc
ret
dec
popf
movs
and
loopne
or
mov
loop
pop
jne
adc
mov
pop
movs
call
sub
inc
stos
sub
pop
(bad)
retf
dec
push
mov
mov
fwait
xor
mov
pop
mov
loop
push
pusha
xor
idiv
call
scas
call
call
aam
test
push
lahf
ror
or
mov
fisub
and
add
add
add
dec
je
mov
popf
movs
xchg
xchg
call
ret
icebp
xlat
jnp
sub
scas
cmp
adc
jns
xor
ficom
call
test
icebp
rcr
outs
cld
xchg
(bad)
mov
cmp
(bad)
fcomi
cdq
cld
cmc
mov
ror
adc
cwde
jnp
cmps
jmp
or
dec
cmp
xchg
jecxz
xor
test
xchg
loope
dec
repnz
jecxz
scas
into
and
sub
(bad)
int
loop
mov
leave
jno
(bad)
(bad)
sbb
jno
cmp
(bad)
cmp
and
push
sahf
push
jne
icebp
xchg
rol
dec
sbb
movs
imul
inc
data16
pop
add
int
std
mov
or
in
sahf
mov
in
fwait
jns
mov
add
fisubr
cmp
xor
mov
pop
loope
and
rol
xchg
fdiv
inc
cwde
add
(bad)
loopne
jmp
jbe
push
dec
pop
push
pop
lods
pop
pushf
jnp
xchg
sbb
jae
cli
mov
cmc
jmp
sbb
mov
mov
push
loop
repnz
xchg
in
mov
sar
push
outs
dec
push
test
ds
xor
push
xchg
ins
sbb
and
xor
clc
cmp
sbb
xor
pusha
bound
xchg
test
mov
addr16
stos
cdq
popf
dec
xor
inc
adc
bound
inc
cmp
xlat
fs
lea
std
add
aaa
mov
xor
dec
fisttp
test
(bad)
push
xor
test
fiadd
jbe
int
xor
jae
pusha
stos
mov
imul
add
pop
sahf
movs
imul
mov
push
cmp
jp
mov
mov
sbb
sub
pop
push
pop
jbe
push
mov
mov
or
shl
(bad)
retf
jbe
pop
aam
and
add
jae
popa
cmp
cmc
xchg
add
leave
call
out
push
mov
add
cmp
push
sbb
add
xor
movs
inc
dec
ficom
and
xor
inc
cs
(bad)
stos
jmp
jbe
xor
and
cmps
push
pop
js
jg
fwait
xor
(bad)
lods
int
data16
enter
jbe
xor
mov
inc
jecxz
pop
xlat
popa
dec
or
ins
cdq
pop
jl
fimul
push
and
pop
inc
(bad)
add
into
int
pop
pushf
inc
int3
mov
(bad)
retf
(bad)
out
mov
xchg
xor
(bad)
xchg
into
popf
mov
push
cmp
movs
and
mov
retf
shl
call
jmp
cmp
pop
jmp
ja
stos
mov
jae
fcomp
dec
call
mov
daa
das
adc
cs
sub
sbb
fist
jbe
inc
dec
dec
scas
ja
lahf
cmp
jmp
popa
and
push
add
sub
dec
dec
mov
xlat
and
xchg
push
jg
repz
in
mov
pusha
repz
push
xor
cmp
fs
shl
inc
sbb
add
(bad)
xchg
inc
ss
cwde
sub
(bad)
jge
scas
imul
andnps
into
jmp
mov
jp
push
stc
popa
out
jmp
jl
out
popf
nop
lods
retf
xor
jmp
(bad)
jo
or
loope
push
mov
fld
rcr
ja
push
xor
mov
mov
icebp
popf
nop
mov
bnd
je
popf
out
fild
test
imul
cmp
sbb
add
outs
cdq
sar
push
add
wbinvd
stos
lods
jbe
call
adc
ret
push
adc
retf
dec
(bad)
lea
push
test
stc
outs
push
xor
add
mov
add
or
and
and
out
cmp
rcl
inc
sbb
mov
movs
or
inc
sbb
out
sbb
clc
bound
or
push
lds
adc
addr16
adc
sub
loopne
push
cmp
jg
in
mov
mov
fwait
dec
add
mov
rcl
inc
test
ds
mov
xor
mov
fcmovnu
fdivr
retf
lds
sbb
inc
jo
outs
imul
pop
xlat
ins
outs
das
xor
push
xlat
inc
push
dec
pop
jns
scas
inc
inc
pop
ficom
jmp
dec
imul
rol
fadd
mov
pop
in
sub
jne
int
in
(bad)
jns
xor
inc
xor
sub
inc
les
pop
pushf
sbb
clc
adc
push
scas
mov
sahf
fisttp
stc
inc
iret
pop
mov
sub
and
cmps
retf
jp
adc
(bad)
cmp
test
inc
repz
xor
pop
push
adc
mov
cwde
sti
test
icebp
push
imul
mov
inc
in
mov
fisub
sti
enter
cmp
sub
cmp
test
fcomp
(bad)
jns
lods
cmps
dec
test
cmp
cwde
(bad)
mov
bound
inc
sub
cmp
es
fwait
jge
xor
cmp
in
sbb
xchg
or
daa
(bad)
xchg
and
jb
mov
ret
mov
cmps
ds
fwait
xor
das
cli
jbe
ret
push
mov
loopne
fisubr
push
gs
(bad)
repnz
ds
adc
mov
pop
std
sub
pushf
aam
cld
push
retf
push
push
cli
xlat
sub
cmps
test
pop
add
jp
push
add
bound
scas
xchg
pusha
clc
inc
pop
push
cmps
ficom
mov
jmp
cmc
cwde
or
inc
icebp
test
clc
xchg
test
es
adc
jbe
gs
aaa
inc
sar
and
test
ret
aad
fdivr
(bad)
gs
fimul
fsubr
out
jle
sbb
pop
gs
(bad)
sahf
pop
jl
aad
inc
das
ffreep
bt
jge
fild
fidivr
pushf
jmp
push
adc
aam
fldl2e
fnstcw
test
mov
loope
push
bound
lahf
ss
ret
mov
ret
mov
adc
mov
mov
leave
icebp
dec
fidiv
push
sub
out
lds
mov
push
cmps
xchg
inc
cmp
test
xor
(bad)
lods
mov
add
pop
scas
(bad)
or
mov
std
push
cmps
xchg
test
fnstcw
adc
fsub
aam
punpckldq
dec
int3
mov
stos
add
outs
or
mov
test
adc
pop
lods
retf
cmps
jae
adc
jns
and
retf
aas
xchg
add
lods
loope
or
xlat
pushf
and
rcl
(bad)
mov
adc
iret
aam
jg
lds
rol
mov
mov
mov
xchg
addr16
hlt
in
mov
shr
gs
dec
cmp
push
xlat
xor
dec
in
popa
repz
clc
leave
cmps
adc
jecxz
ins
cmp
sti
sub
push
xor
pcmpeqd
out
xchg
xor
add
neg
sbb
sub
imul
mov
xchg
pop
inc
add
and
mov
jae
sub
neg
retf
mov
ss
in
ret
pop
cmp
pop
mov
outs
aas
push
push
xchg
inc
(bad)
fdivp
ins
into
adc
popf
dec
mov
stos
test
cmps
stc
int
imul
in
and
or
dec
loope
test
sub
dec
pop
pop
mov
movs
push
pop
or
adc
add
xor
add
std
(bad)
icebp
sub
shr
cli
inc
pusha
push
ins
es
in
add
ins
loop
cwde
or
and
mov
icebp
jbe
out
jns
mov
sub
sub
push
cmp
jae
ret
pusha
mov
pop
(bad)
(bad)
or
mov
inc
leave
lods
sub
out
mov
iret
inc
out
xor
sub
movs
je
sar
(bad)
imul
ret
mov
mov
cmps
mov
or
inc
push
(bad)
out
add
aam
sbb
sti
pushf
push
adc
inc
out
jle
push
cmp
or
ss
sub
mov
lods
sti
mov
mov
and
or
int3
cmp
repnz
add
imul
rcl
outs
fisttp
scas
jo
or
push
popa
xchg
in
int3
jmp
dec
cmp
push
inc
add
dec
in
jmp
loopne
cmps
xchg
xchg
es
mov
imul
push
and
xchg
inc
(bad)
call
rol
scas
xchg
and
pop
mov
mov
pushf
push
xor
and
mov
or
lock
pop
aad
push
push
pop
xchg
test
adc
aaa
ds
nop
mov
add
adc
xchg
je
sub
retf
outs
cmc
xchg
movs
inc
dec
scas
mov
mov
sbb
mov
dec
mov
xchg
lods
aad
out
push
xchg
ss
pop
ja
popa
in
lds
fs
cmps
cmp
mov
daa
bound
sahf
jp
out
nop
adc
cmp
or
mov
pop
xchg
in
dec
mov
xor
stc
mov
bound
sbb
mov
arpl
inc
in
cmp
stos
movs
fbld
add
mov
xchg
outs
adc
loop
pop
sbb
sub
or
jge
cmp
adc
pop
cdq
jmp
mov
push
push
out
out
(bad)
fdivr
into
inc
or
mov
xchg
adc
retf
ds
sub
mov
ins
mov
test
popa
nop
cmp
mov
sub
jecxz
pop
inc
aad
leave
imul
and
jle
mov
call
arpl
out
cmp
movs
mov
ja
add
add
sub
shl
mov
gs
pop
and
rcl
clc
adc
and
jmp
adc
add
jp
push
cli
mov
jno
stc
add
or
or
mov
jne
add
popf
rcr
sub
lods
ret
stos
scas
shr
xchg
mov
pop
dec
dec
es
fistp
xchg
out
call
jmp
icebp
cwde
iret
mov
arpl
xchg
xor
stc
pop
pop
fsub
ret
(bad)
frstor
in
ror
mov
jecxz
fnstsw
in
outs
aas
and
mov
int3
xor
clc
inc
jns
sub
in
xchg
cmp
pop
ins
pop
mov
gs
jno
sahf
push
xchg
mov
pop
or
ficom
loop
call
mov
(bad)
jl
dec
leave
ror
mov
outs
sbb
sbb
in
inc
gs
xchg
inc
xor
pushf
enter
mov
scas
xchg
jecxz
jno
clc
ret
out
mov
ror
jne
loope
popa
rol
push
imul
push
out
push
pop
(bad)
adc
loope
sub
fs
outs
call
or
pop
pop
xor
dec
xchg
lods
dec
xchg
mov
stc
jmp
test
rol
mov
(bad)
mov
push
inc
stos
sti
mov
mov
das
mov
fdivr
jmp
or
icebp
xor
stos
out
push
ja
es
and
je
xchg
fs
loopne
clc
mov
push
je
imul
sub
fxch
or
ret
fisttp
pop
call
daa
inc
mov
and
add
movs
jecxz
or
dec
pusha
iret
enter
out
adc
adc
add
imul
test
pushf
(bad)
sub
dec
mov
in
xchg
mov
call
pusha
xchg
pop
fidivr
adc
xchg
dec
daa
shl
or
inc
pop
xor
push
mov
sbb
int3
sub
cmp
movs
adc
jecxz
icebp
loopne
jnp
mov
lahf
out
dec
mov
pusha
dec
or
test
jno
pop
add
or
xor
outs
mov
pop
inc
xchg
cmp
xor
and
mov
mov
into
push
imul
mov
dec
mov
mov
call
mov
mov
das
sbb
inc
ins
sub
ss
xor
test
cmp
xchg
adc
out
sbb
sbb
add
mov
sbb
push
jge
add
xor
ss
pop
jmp
hlt
push
out
push
ins
jge
das
jae
xor
add
jle
jns
mov
pushf
test
dec
movs
call
push
stc
xchg
std
adc
cmc
cmc
es
xor
repz
iret
sahf
pushf
cld
sbb
pop
out
scas
aam
call
sbb
fisubr
loopne
test
adc
les
inc
push
shl
push
test
lds
imul
cmp
xor
stos
mov
lea
and
or
int3
pop
ficom
xlat
pop
retf
fstp
cld
mov
jge
in
cmp
repnz
mov
in
movs
adc
aad
or
jo
push
test
add
in
push
inc
test
mov
cdq
and
int
das
mov
ss
out
fcomp
out
gs
stos
clc
mov
outs
jbe
(bad)
lahf
out
or
mov
iret
cmc
in
inc
stos
push
mov
push
std
fwait
loopne
leave
stos
inc
lods
push
or
mov
jmp
pop
fwait
cwde
jnp
sar
jns
and
sbb
lods
test
push
push
inc
push
arpl
xchg
aaa
lods
stos
mov
dec
mov
stos
call
add
jbe
fs
mov
push
xchg
dec
or
mov
jmp
int
mov
fild
call
js
fisttp
jl
daa
and
dec
jg
xchg
push
and
xchg
ror
neg
pusha
lock
pop
in
sti
pop
xor
push
loope
or
push
cli
push
sub
lock
ds
or
adc
mov
mul
out
jmp
cmp
dec
jmp
call
or
in
xor
iret
cmp
ins
cmp
sub
out
cmp
xchg
push
enter
adc
scas
imul
rol
dec
xor
clc
dec
lods
mov
loope
test
pushf
mov
xor
xor
sub
inc
dec
iret
retf
mov
out
or
mov
fidiv
mov
loopne
hlt
and
jge
fwait
or
jmp
shr
jmp
mov
icebp
pop
and
pop
cmp
xchg
pusha
loope
in
shr
stos
or
je
dec
and
adc
stos
int3
imul
mov
jmp
jbe
retf
inc
mov
adc
add
ss
sub
shl
xor
mov
cmps
sub
push
ins
test
jmp
sar
mov
cwde
int3
mov
sub
int3
xchg
cdq
inc
adc
hlt
pop
push
push
jl
adc
mov
push
jne
push
adc
popf
(bad)
mov
sbb
xor
cmps
xor
int3
fs
(bad)
xor
(bad)
push
jo
cli
mov
fstp
sub
icebp
cmps
sti
lea
dec
fdivp
aaa
push
loope
push
or
movs
bound
sub
ret
in
(bad)
ret
mov
fs
test
add
dec
clc
dec
inc
(bad)
cli
push
xchg
jecxz
mov
xor
cmps
lods
(bad)
jns
dec
cmp
dec
dec
je
retf
sahf
clc
cmc
movs
dec
lahf
out
jnp
xchg
lods
add
nop
adc
mov
jmp
xor
mov
jbe
mov
push
repz
xlat
cmc
push
xchg
sbb
xor
xchg
packuswb
jns
ins
sti
icebp
sbb
icebp
jge
int3
sti
call
push
add
int
push
inc
xchg
(bad)
jle
aas
sar
sub
mov
jo
push
ds
mov
outs
xor
mov
push
xchg
jae
mov
(bad)
in
retf
mov
mov
add
ret
mov
sub
stc
js
cmp
push
xor
or
jle
mov
push
xchg
scas
sbb
lahf
and
inc
gs
pop
test
pop
sub
mov
or
or
mov
pusha
fild
je
cmp
clc
xchg
jmp
ret
jae
repnz
pusha
pop
or
xlat
(bad)
retf
xor
out
push
cwde
mov
ret
jp
(bad)
fcmovnbe
retf
hlt
inc
xchg
inc
mov
push
jns
mov
sahf
mov
pop
mov
imul
lods
add
popa
and
lahf
xlat
mov
inc
adc
add
push
mov
mov
pop
bound
lods
lods
inc
adc
mov
test
lock
xchg
into
nop
movs
cli
xor
int
mov
es
push
call
xor
nop
sbb
mov
pop
jle
(bad)
jns
fldcw
xchg
sbb
jp
lock
lods
inc
fist
shl
leave
push
add
push
dec
aam
cmp
loop
mov
sub
rol
cmps
in
cmp
adc
mov
adc
and
arpl
xchg
mov
shl
push
mov
pop
add
retf
push
pop
push
imul
cwde
daa
aaa
imul
stos
outs
xor
js
ja
add
out
js
mov
movs
in
sub
jmp
inc
mov
fld
adc
sahf
inc
add
and
clc
mov
popa
(bad)
push
mov
sub
cmp
and
vunpcklpd
inc
pusha
cmp
out
add
and
and
in
add
sahf
arpl
jbe
std
mov
inc
jnp
xchg
pop
fcmovnbe
test
jmp
popa
(bad)
retf
fild
imul
adc
shl
sahf
mov
sbb
jmp
(bad)
jmp
xor
(bad)
daa
pop
cmp
fistp
jmp
push
mov
add
fnstenv
jns
imul
fcomp
inc
cmp
call
adc
cmp
add
pop
das
sub
aaa
xor
and
mov
cmp
push
ds
adc
fs
jnp
imul
and
mov
inc
(bad)
push
bound
jae
sbb
fistp
pop
mov
sub
shr
iret
outs
push
mov
scas
gs
or
jne
in
add
jne
retf
cld
xlat
loop
mov
sub
arpl
scas
and
lods
xor
repz
pop
adc
das
(bad)
dec
xchg
pop
adc
int3
pushf
adc
add
mov
sub
mov
and
dec
xchg
enter
stc
stc
jbe
and
lock
pop
sbb
(bad)
sub
icebp
mov
sbb
adc
fisttp
ss
xchg
xchg
pop
rcl
pop
in
mov
int
sti
jns
fisttp
push
dec
adc
das
or
inc
js
sar
out
inc
add
in
xchg
mov
popf
sub
test
cmp
or
mov
out
outs
mov
mov
div
mov
mov
shl
stc
mov
sub
adc
jl
fild
dec
mov
test
jae
xchg
mov
mov
push
or
jno
add
push
mov
cmc
inc
arpl
mov
mov
mov
neg
inc
pop
jle
aam
js
pop
or
dec
jge
cmps
mul
arpl
retf
sub
scas
iret
fcmove
inc
data16
lds
jae
lods
es
pop
jne
fsubr
or
sti
imul
push
movs
jne
stos
mov
js
sbb
adc
(bad)
js
cmp
pop
mov
and
sbb
popf
jbe
lock
jmp
es
inc
sub
push
(bad)
xchg
and
in
fdivr
lods
sbb
cmp
mov
(bad)
and
dec
rcl
cmc
mov
ret
mov
and
out
ins
call
mov
dec
mov
shr
je
icebp
mov
adc
cs
mov
outs
and
clc
pop
loope
cmp
daa
pop
lods
imul
ins
cs
mov
stos
xchg
fnsave
bnd
cmp
and
add
push
xor
mov
and
mov
push
adc
mov
adc
cld
jne
js
out
jo
xor
sahf
sbb
adc
xchg
fcom
shl
push
call
cmp
mov
xchg
in
inc
xchg
stc
outs
pop
shl
(bad)
xor
pop
inc
(bad)
mov
sbb
imul
scas
mov
daa
mov
outs
xchg
rcl
fstp
mov
cmps
mov
sbb
leave
mov
add
xchg
and
out
call
mov
or
pusha
(bad)
movs
push
jmp
outs
add
and
push
std
mov
js
in
je
ins
mov
xor
mov
xchg
inc
jno
scas
fsubr
jno
xor
outs
lock
and
out
(bad)
sahf
pushf
cli
cmp
xor
js
lds
(bad)
mov
es
mov
imul
adc
mov
mov
xchg
fwait
ret
imul
xchg
push
jmp
lds
cmp
dec
je
arpl
cmp
fcomip
mov
aad
or
repz
(bad)
pop
mov
or
mov
pushf
jbe
mov
rcr
inc
mov
mov
int
jb
sbb
adc
not
ror
lods
nop
jae
mov
fisub
cmp
xlat
lahf
dec
arpl
adc
popa
(bad)
out
cmc
ret
inc
cmp
test
or
jae
test
call
jns
push
cmp
lock
jno
push
stc
jno
in
dec
sub
ss
cmp
and
sub
mov
push
sbb
add
adc
pop
and
inc
sub
sar
pop
mov
in
ror
mov
sar
and
sbb
pinsrw
shr
sbb
mov
xchg
les
push
fwait
lahf
xchg
push
dec
pop
pop
jmp
mov
test
pop
rol
aas
lds
pop
jo
jp
ins
sub
icebp
jmp
ins
dec
shl
inc
mov
(bad)
mov
dec
sbb
fild
xlat
jmp
or
sbb
out
xor
jbe
xor
xchg
hlt
lds
jp
push
inc
bound
fsubr
out
push
dec
pop
outs
nop
imul
adc
push
imul
pop
mov
jne
lods
pop
sbb
mov
call
xchg
mov
test
pop
outs
push
mov
aam
xor
push
mov
sbb
arpl
mov
mov
inc
shl
sub
stos
xor
fs
push
iret
mov
or
aam
out
int
xchg
sti
aaa
inc
rol
fs
fild
mov
sbb
mov
add
push
cwde
or
ins
jb
cmc
and
add
pop
cmp
mov
and
fwait
jl
ret
xchg
xor
mov
mov
popf
or
nop
and
ins
or
cmp
lea
out
fcomp
das
ror
dec
mov
aas
gs
sbb
jbe
xor
pop
mov
fild
cmp
sbb
inc
lods
push
out
not
sub
push
sar
jp
xor
xor
ja
sub
adc
out
dec
pop
cmp
test
xor
xchg
sbb
jbe
dec
movs
mov
stos
iret
pop
inc
jns
fdivr
cmc
cdq
aas
mov
pop
inc
test
mov
mov
js
fild
pop
push
inc
cwde
jmp
addr16
adc
xor
cwde
add
jge
outs
and
pop
xor
(bad)
jl
inc
mov
in
mov
je
jmp
sub
shl
cmp
xchg
mov
jg
xor
inc
mov
outs
lods
retf
sbb
mov
ds
mov
lock
(bad)
shl
fidivr
in
sub
dec
fild
adc
jp
mov
mov
retf
test
fdiv
popf
mov
jl
sbb
or
xchg
test
sub
dec
xchg
xor
fnstcw
adc
rcl
pusha
pusha
xchg
or
or
test
dec
mov
pusha
out
in
mov
(bad)
jmp
cld
sahf
adc
shl
mov
push
ss
xchg
ins
mov
bound
call
jecxz
sub
cmp
sbb
jno
test
(bad)
scas
or
inc
test
cmps
jno
mov
test
or
and
aas
xchg
mov
fisttp
push
jae
das
stos
adc
cs
inc
out
and
xchg
test
pop
pop
fmul
test
ret
pop
mov
pop
ficomp
jno
mov
inc
or
ja
lds
stos
inc
adc
cli
test
ins
add
mov
and
and
arpl
gs
jmp
mov
xchg
cmp
test
push
pop
cmp
pop
jmp
push
mov
outs
(bad)
or
outs
sub
add
ins
xchg
jb
xchg
shr
popa
cmp
lea
clc
clc
icebp
loop
mov
push
adc
or
push
loope
mov
clc
aad
std
scas
pop
pop
push
push
outs
(bad)
xor
cmp
dec
and
xchg
add
adc
ds
sbb
dec
test
push
(bad)
(bad)
stos
jnp
scas
inc
xor
repz
mov
fiadd
jl
pop
stos
and
xchg
(bad)
repnz
loopne
sti
mov
mov
lds
call
push
xchg
fidivr
jecxz
mov
cmp
mov
sbb
dec
push
inc
sub
jne
pop
inc
imul
add
adc
mov
mov
push
xor
int3
adc
mov
push
dec
int
int3
test
xor
popf
scas
outs
loopne
loopne
dec
mov
and
aam
mov
cmp
sbb
xchg
pop
add
movs
sbb
retf
add
mov
jno
push
push
mov
xchg
imul
pop
nop
jle
pusha
movs
dec
xor
shr
dec
dec
jl
or
cmp
or
and
hlt
inc
pop
push
sbb
push
out
in
jns
cwde
push
sub
out
push
cmp
and
test
xlat
cs
rcr
icebp
xchg
sub
nop
movs
inc
mov
mov
pop
retf
fst
cld
cwde
icebp
pushf
rcr
xor
add
stos
ins
pop
mov
loop
in
mov
in
jle
and
ss
push
jmp
sbb
and
add
lods
sti
mov
lock
dec
jno
in
es
sahf
jp
or
stos
fcomp
test
mov
sub
cmp
(bad)
aaa
lods
lods
pushf
popa
inc
xor
shr
jge
rol
mov
inc
int3
pop
aaa
push
sbb
fisubr
jmp
push
mov
into
lods
pop
jmp
test
shl
jno
push
aaa
sbb
cmp
sti
aaa
push
sub
adc
ror
rcl
push
mov
out
push
rol
call
lods
scas
sub
fucompp
sub
fs
push
(bad)
shl
cmps
xor
xor
or
inc
(bad)
loope
loopne
or
mov
and
pop
addr16
sub
ficomp
xchg
xor
or
sbb
stc
dec
or
fyl2x
lea
std
push
jne
sub
mov
sahf
fidivr
fsubr
jp
imul
push
xor
mov
ds
sbb
das
push
les
sub
das
das
mov
or
fild
jns
repnz
xor
or
clc
inc
push
mov
call
and
add
mov
lea
cvttps2pi
sub
lds
(bad)
cld
not
jo
mov
inc
nop
les
sub
xchg
mov
stos
test
sub
popf
test
jg
repz
xor
loope
in
test
adc
add
fdiv
shl
sbb
sti
sbb
jle
mov
movs
adc
mov
pushf
add
push
stos
sub
cmp
shl
imul
jge
xor
cmp
push
xchg
clc
pop
aas
jb
addr16
or
cmp
data16
add
sbb
sbb
clc
rcr
inc
push
jns
xchg
inc
inc
test
out
or
mov
ret
and
mov
mov
retf
add
sub
in
jo
ja
cmc
lock
icebp
and
fisttp
pushf
jb
cmp
mov
push
mov
mov
mov
movs
sahf
or
xor
xchg
in
jne
push
adc
mov
jp
enter
ror
mov
ds
xlat
js
jg
out
(bad)
imul
dec
call
push
mov
nop
repz
hlt
outs
push
and
xchg
adc
(bad)
aam
bnd
sub
xchg
push
gs
loopne
hlt
adc
mov
popf
and
push
imul
cmps
(bad)
call
xchg
cdq
jnp
pop
popa
jbe
int3
or
ret
and
dec
push
add
cmp
dec
pop
lahf
and
xchg
js
push
shl
xchg
mov
xor
and
jmp
xor
xchg
test
rsm
pusha
int
lock
and
aaa
and
jmp
inc
retf
movs
add
add
push
sub
setns
add
dec
dec
mov
mov
push
repz
jns
add
cmp
not
jp
sar
pop
pop
jp
jmp
mov
fmul
push
mov
bound
mov
dec
fstp
xchg
pop
mov
cmp
sub
sub
leave
pop
mov
js
mov
sbb
cmp
imul
(bad)
push
sbb
fisub
fnstenv
cmps
push
repz
add
jp
push
int3
call
xchg
pop
mov
lods
popf
in
movs
aam
xchg
cmp
fsub
lea
lock
mov
mov
not
fs
dec
mov
(bad)
adc
je
sar
xor
and
pop
inc
pop
test
mov
xor
cmps
(bad)
push
mov
lahf
push
xor
je
imul
mov
je
icebp
or
mov
lock
mov
nop
jl
xor
lea
mov
loope
mov
sub
dec
mov
pop
xor
pop
jae
sbb
mov
ficomp
mov
sar
jmp
daa
jb
mov
push
es
xchg
outs
ret
iret
int3
push
(bad)
test
(bad)
out
stc
pop
fidivr
push
mov
lods
inc
lods
cwde
jbe
in
neg
jp
sbb
sub
outs
cli
shl
enter
stos
scas
enter
or
gs
pop
push
movs
(bad)
jmp
jb
inc
fst
aam
call
ja
and
nop
cmp
aam
sbb
pop
retf
push
mov
jle
xchg
gs
imul
jbe
in
shr
pop
or
jbe
mov
cdq
call
adc
leave
lods
push
hlt
retf
les
jg
mov
adc
in
inc
int
sub
ins
outs
xchg
adc
add
ja
and
mov
(bad)
xor
adc
jns
sbb
xlat
push
out
pop
js
and
inc
mov
inc
(bad)
rcr
push
in
test
mov
imul
jmp
inc
mov
(bad)
enter
stos
bound
dec
inc
add
out
add
push
mov
in
jle
fdiv
jmp
push
xchg
push
pop
cdq
(bad)
jle
cmp
push
mov
in
pop
scas
push
jg
cmps
push
jle
sar
jp
arpl
and
(bad)
ins
mov
mov
mov
iret
cwde
add
inc
fstp
das
xlat
test
icebp
cmp
retf
add
fbstp
gs
jl
aas
or
mov
sahf
xchg
pop
(bad)
fidivr
inc
sar
das
daa
pop
cmp
lods
fs
ins
test
mov
pop
test
xor
sbb
loop
(bad)
dec
outs
or
xchg
dec
and
jecxz
push
ja
dec
pop
sbb
inc
clc
jno
push
mov
pushf
into
jns
push
clc
fidiv
mov
pop
inc
ror
sub
xchg
lods
pop
cwde
push
loop
and
push
movs
cmps
out
cs
push
lea
ins
xor
inc
push
ds
(bad)
dec
xchg
ins
sub
mov
adc
lahf
inc
mov
or
lea
sbb
rcr
pusha
hlt
xchg
cmp
fimul
mov
and
sahf
sti
mov
std
repnz
sti
inc
stc
icebp
or
sub
jo
mov
ins
push
pop
ins
sahf
jecxz
jge
push
mov
adc
or
xchg
add
dec
sub
nop
add
mov
bound
mov
frstor
mov
push
jmp
stos
push
adc
adc
add
(bad)
pop
pop
js
scas
pop
rcr
test
adc
mov
aam
cmp
std
mov
pop
jp
and
pop
add
ins
daa
jmp
xchg
gs
push
cmp
fist
in
popf
push
jae
cmp
add
popa
add
mov
xchg
es
pusha
xor
fistp
in
test
mov
or
pop
adc
in
xchg
jge
cmp
push
sub
xchg
and
test
out
jp
data16
jmp
cs
and
sbb
xchg
test
cmc
jns
sar
cwde
xchg
rcr
xchg
or
outs
cwde
sti
jnp
das
ret
rol
cmp
je
(bad)
cmovbe
and
shr
aaa
into
movs
xor
lea
xor
ja
jbe
aaa
push
dec
fisttp
jne
pop
(bad)
in
iret
mov
or
mov
push
outs
test
jbe
cwde
mov
mov
sbb
test
adc
inc
inc
adc
xor
sbb
sbb
sbb
push
pop
sub
popf
call
jmp
retf
push
daa
push
xor
mov
mov
and
jl
rcl
add
ret
fcmovu
or
scas
call
dec
shl
mov
in
lea
mov
fcomp
lods
sub
movs
lock
(bad)
aam
lods
mov
mov
cmp
imul
mov
inc
pop
movs
shr
xchg
mov
popf
sub
push
xor
and
shl
mov
shr
lea
fidiv
call
and
inc
mov
mov
jnp
cmp
std
les
into
sbb
dec
mov
xchg
xlat
(bad)
cld
cmps
push
pop
xor
pop
stc
cmp
outs
and
jb
xor
out
jo
mov
lods
das
xchg
pop
sbb
aas
out
loop
jmp
xchg
out
xor
mov
js
shl
jmp
lahf
fldcw
ret
mov
out
stos
je
lahf
fisubr
movs
xor
jno
cli
cmp
add
mov
test
dec
xchg
xor
imul
or
xchg
dec
cli
jo
jp
icebp
inc
and
push
arpl
es
or
or
push
rol
add
and
jns
xor
jb
xchg
ins
scas
xor
shl
or
ss
jmp
cmc
push
jp
push
in
scas
mov
cdq
jp
mov
xchg
or
test
ja
inc
rol
lock
mov
pop
sti
dec
mov
jns
sti
jo
or
or
mul
call
lea
push
mov
cmp
rcr
in
mov
aas
or
push
ja
add
retf
imul
rcr
jecxz
pop
dec
jo
loope
mul
or
or
in
test
enter
fiadd
dec
clc
dec
adc
or
or
das
and
(bad)
stos
repz
sti
test
into
xor
cmps
sbb
imul
xchg
clc
xor
stos
lock
fwait
pop
fidiv
jl
sbb
mov
dec
mov
fdiv
mov
mov
inc
xchg
icebp
icebp
pop
mov
les
mov
fninit
mov
ja
jb
nop
pop
rol
jb
xor
jbe
jecxz
cmp
mul
into
gs
cmp
adc
sbb
in
ret
or
sub
clc
ror
call
ret
dec
lods
mov
mov
push
sub
adc
adc
and
out
movs
ins
scas
mov
mov
out
aaa
aam
fisubr
mov
sub
scas
fs
jle
mov
add
pop
fdiv
(bad)
xlat
mov
fbstp
sbb
sub
lods
gs
push
popf
es
mov
movs
imul
sar
cmp
push
popaw
pop
push
cld
clc
pop
mov
add
outs
push
xchg
pushf
adc
sbb
iret
sbb
outs
aad
test
inc
fidiv
mov
fistp
mov
loope
out
push
mov
inc
pop
inc
clc
pusha
outs
dec
push
dec
push
hlt
retf
loopne
push
mov
ins
dec
or
or
and
pushf
add
mov
inc
movs
or
mul
push
xchg
and
xchg
cmp
popf
int3
test
int
sar
ret
push
and
jl
mov
xor
out
dec
adc
xchg
pop
aas
sbb
push
icebp
popa
xor
sub
call
(bad)
jmp
cdq
mov
or
inc
and
(bad)
jmp
xor
xor
push
push
out
je
sbb
cmp
mov
jo
push
sbb
inc
jns
push
sahf
xchg
nop
add
sub
xor
popa
inc
sub
adc
sbb
jp
push
inc
lahf
mov
mov
ret
movs
add
mov
adc
xchg
push
jge
or
wrmsr
adc
xlat
mov
push
jmp
mov
dec
add
sub
push
push
pop
push
mov
stos
repz
(bad)
sahf
mov
push
mov
fisttp
pop
or
popa
push
xchg
mov
push
cld
pop
(bad)
inc
push
cmp
lahf
fstp
movs
add
ds
add
iret
and
sub
pop
imul
mov
push
jno
pop
inc
sbb
xchg
and
mov
inc
cwde
adc
mov
rep
jb
ja
shl
push
or
aam
std
add
xor
add
pushf
or
push
lods
xor
sbb
add
(bad)
adc
in
push
mov
mov
sub
sbb
out
mov
fadd
sbb
xchg
dec
cs
fsubr
jne
out
lea
popf
in
or
aam
lds
sbb
xor
cmps
xchg
push
adc
ficomp
xchg
xchg
sbb
jl
xchg
daa
das
dec
mov
(bad)
dec
jne
jbe
sbb
jmp
lock
out
xor
cli
add
call
mov
inc
xlat
xchg
stos
inc
mov
pop
jle
(bad)
aas
stos
outs
les
xchg
shl
sbb
inc
fs
repnz
and
push
or
inc
pop
cmp
aad
jno
out
stc
push
cmp
xchg
lds
pop
push
enter
es
and
lahf
add
rcr
ret
sbb
mov
inc
loop
aad
mov
aas
xor
xchg
idiv
data16
and
push
pop
movs
cmp
in
and
push
xchg
cs
test
addr16
ja
lds
xchg
mov
lea
jmp
je
push
mov
rol
pop
enter
jns
push
daa
push
shl
dec
jb
xlat
mov
mov
je
dec
fwait
adc
xor
xchg
gs
pop
mov
push
dec
and
mov
adc
lahf
mov
xor
pushf
mov
mov
scas
aam
lds
xchg
out
cmps
pusha
pop
jo
and
xchg
(bad)
ds
pop
dec
hlt
enter
out
inc
push
inc
ins
in
ret
mov
aaa
dec
ss
shl
push
cmp
inc
mov
sub
mov
ins
push
pop
mov
mov
mov
mov
retf
inc
ret
jecxz
jno
out
popf
js
jne
ret
aaa
repz
sti
lahf
sub
int3
movs
or
(bad)
cmps
js
data16
jp
cwde
daa
call
adc
push
daa
ins
icebp
aam
cld
das
xchg
inc
out
iret
cmc
pop
mov
bound
cmp
(bad)
cmp
mov
add
test
mov
xchg
mov
fs
xchg
gs
ds
ror
jne
iret
stos
pop
and
push
loopne
and
(bad)
shl
int3
div
pop
xor
fdivr
jle
mov
scas
mov
(bad)
xor
out
aas
popf
addr16
push
pop
cwde
dec
push
std
loop
fcmovnbe
add
cmps
ins
mov
sbb
sub
out
fwait
push
ins
leave
fs
mov
stos
push
mov
ds
inc
mov
out
sub
out
(bad)
or
icebp
arpl
js
adc
lds
pop
jo
and
cs
loopne
ret
test
sub
mov
push
push
call
push
inc
aas
sub
movs
dec
and
fnsave
imul
cmps
push
cs
xor
pusha
mov
cmp
jns
dec
xor
(bad)
push
mov
in
loop
sub
mov
push
in
sbb
xchg
or
or
push
bound
mov
adc
inc
add
mov
bnd
scas
imul
int
push
imul
repz
push
xchg
adc
mov
adc
xchg
xchg
and
mov
mov
xchg
(bad)
iret
mov
test
pop
mov
pusha
push
cmp
movs
xor
aas
mov
out
into
jecxz
adc
sbb
(bad)
mov
xchg
ret
das
jno
test
push
aad
and
addr16
cdq
push
or
ret
mov
std
mov
cs
(bad)
icebp
addr16
add
ins
push
icebp
(bad)
jbe
pop
ds
movs
jno
in
movs
aad
adc
add
pop
mov
mov
popf
cwde
rol
jbe
fisttp
mov
fld
jg
inc
shl
or
mov
mov
je
(bad)
scas
fs
push
xor
sbb
(bad)
in
jge
push
iret
sbb
push
fsubr
movs
push
outs
out
scas
jo
es
add
rcl
inc
fnstcw
pushw
push
adc
pop
sbb
cwde
call
pop
cmp
in
mov
mov
cwde
mov
sahf
stos
and
cmp
dec
(bad)
cmp
push
mov
stos
shl
lods
(bad)
icebp
pop
jl
cdq
cli
(bad)
ss
hlt
sub
pushf
mov
jbe
push
or
les
fisubr
in
call
cdq
adc
out
scas
js
nop
fidivr
icebp
rcl
add
xor
mov
clc
es
dec
test
cmp
ds
jmp
shl
data16
stc
cmp
mov
repz
xor
shr
(bad)
fistp
fcomp
inc
or
das
fimul
mov
jl
xchg
outs
(bad)
jecxz
cmc
fs
ds
fcomp
lahf
pop
cs
xor
or
jne
mov
mov
ins
xchg
popf
mov
adc
test
jno
repnz
call
jmp
xchg
loope
push
and
fidiv
sbb
inc
mov
shl
movs
fidiv
in
xchg
loop
sbb
mov
fstp
ins
cmp
test
xor
fwait
dec
(bad)
imul
movs
mov
scas
(bad)
pop
push
sub
inc
cs
jno
and
push
cdq
dec
xor
bound
dec
xchg
mov
outs
cmp
cmc
pop
mov
movs
not
jp
shl
mov
out
xlat
xchg
or
inc
add
or
adc
jg
sbb
les
inc
cli
jne
mov
mov
ds
sbb
stc
push
mov
jnp
mov
and
jo
xchg
(bad)
fdivr
retf
dec
int3
sub
data16
fnsave
jmp
cs
sub
out
inc
xchg
adc
mov
dec
dec
icebp
cmp
sub
bound
xor
imul
jno
loope
dec
fld
pop
or
(bad)
idiv
lods
and
arpl
and
jb
dec
mov
or
cmp
xor
adc
in
outs
jb
test
ret
pop
mov
add
jo
pusha
in
xchg
sub
iret
jmp
mov
pop
lods
enter
adc
mov
shr
dec
inc
movaps
add
jle
sbb
dec
test
imul
stc
inc
dec
and
dec
adc
xchg
(bad)
jmp
pushf
loop
or
adc
cmp
scas
fsubr
or
adc
retf
xchg
adc
imul
pop
mov
(bad)
not
ins
adc
and
and
mov
adc
stos
int3
cmp
out
fld
imul
shl
aaa
mov
pop
or
mov
sbb
push
sar
xor
std
jae
ds
sbb
push
loopne
mov
aaa
outs
in
push
push
stos
lahf
nop
ss
fldenv
ret
scas
sar
and
loopne
add
sub
mov
sub
scas
test
nop
adc
dec
jns
outs
sbb
mov
outs
inc
(bad)
mov
mov
rcl
ins
into
sbb
xchg
push
lock
leave
push
stos
mov
add
or
inc
mov
ret
call
in
or
dec
inc
jle
rcl
xor
imul
cs
inc
ror
jmp
ror
ins
inc
bound
(bad)
mov
xchg
xor
dec
ret
out
test
(bad)
aaa
add
movs
mov
inc
call
aad
and
cld
mov
arpl
aas
mov
cmp
aaa
push
jb
adc
xchg
inc
sbb
sbb
and
inc
pop
mov
scas
lds
xlat
shl
adc
out
loop
lds
nop
popf
add
adc
mov
adc
cmps
pop
push
sbb
jae
jae
mov
xchg
jae
sub
(bad)
adc
xor
mov
cdq
std
repnz
push
and
das
mov
jbe
cmp
xor
es
xchg
test
push
idiv
cdq
in
and
jmp
ds
jbe
cli
cmp
int3
in
jbe
adc
fcom
fsubr
retf
fist
jge
fdiv
jne
bound
scas
das
(bad)
iret
int3
mov
(bad)
test
fs
xchg
mov
call
jmp
(bad)
fiadd
(bad)
std
mov
lea
adc
xor
push
sub
data16
lock
adc
sub
jbe
daa
popf
dec
push
mov
add
adc
div
shr
shl
stos
sbb
(bad)
dec
adc
jmp
lea
cmp
(bad)
push
ins
mov
cmp
shr
mov
scas
popa
sti
push
inc
repz
xlat
mov
test
push
and
retf
sub
dec
popa
jecxz
repnz
retf
adc
or
inc
push
dec
test
gs
xchg
scas
test
iret
pop
(bad)
fisubr
ja
xor
out
pop
push
push
mov
out
mov
push
out
push
mov
dec
cwde
test
repnz
enter
mov
jae
je
cld
movs
das
sbb
bound
sbb
mov
mov
dec
call
or
jno
cmps
pusha
or
movs
js
pop
stc
or
lods
xor
ret
cmc
pop
and
popf
imul
cld
push
retf
je
inc
lahf
or
push
adc
sbb
add
push
shr
in
push
lea
jo
stos
ins
les
test
push
adc
cmps
add
mov
stos
cmp
and
sbb
mov
js
es
inc
jg
xchg
xor
aaa
jge
inc
add
(bad)
push
fmulp
mov
and
fmul
dec
jp
iret
fisub
sub
mov
or
inc
push
jbe
mov
adc
add
add
ja
push
jp
pop
mov
jmp
jge
ret
outs
cmp
es
jge
mov
pop
jo
mov
cdq
test
mov
xchg
test
push
call
int
mov
mov
fild
bound
mov
fcmovnu
jb
inc
rcr
mov
xchg
call
movs
mov
push
dec
loope
mov
jmp
sbb
repnz
fstp
cmp
and
push
jae
in
les
je
pop
sub
out
mov
aad
push
xchg
add
sbb
push
mov
sbb
jbe
dec
mov
sub
adc
jmp
mov
add
pop
ds
inc
arpl
dec
dec
out
fdiv
jecxz
mov
inc
out
lds
pop
dec
outs
pop
mov
jns
lea
or
mov
sub
retf
adc
pop
jl
in
hlt
sbb
cmc
cdq
arpl
ror
mov
dec
sbb
sbb
and
in
es
sbb
xor
sbb
dec
jge
pop
sub
jge
xor
fisubr
push
push
lahf
inc
mov
push
inc
or
pop
in
iret
cs
jmp
mov
sbb
and
cs
sbb
sub
movs
(bad)
mul
jnp
out
sub
out
inc
mov
cmp
add
lds
mov
mov
mov
jo
(bad)
out
icebp
test
daa
mov
pop
mov
leave
dec
pusha
in
js
fcom
in
data16
rcr
xor
out
test
call
std
jmp
and
stos
je
xor
dec
xchg
cmp
test
add
and
dec
pop
mov
fcmovnb
fimul
pop
mov
dec
push
pop
xor
inc
jle
cmps
cmp
pop
repz
jo
or
fiadd
adc
jmp
pop
(bad)
iret
(bad)
inc
shl
aas
push
(bad)
adc
sub
xor
cmps
out
ret
mov
dec
leave
add
movs
ins
sbb
and
mov
inc
nop
aas
push
(bad)
mov
mov
in
les
(bad)
fimul
leave
fmul
jmp
mov
xchg
xor
sbb
sbb
cmp
add
dec
jne
mov
fmul
shl
add
sahf
ss
add
retf
test
xlat
aaa
cmp
fist
sub
xchg
xchg
aaa
lea
add
aas
pop
fs
mov
movs
loop
pop
daa
mov
jb
pop
mov
add
cmovns
out
cmp
aad
jmp
fstp
enter
lods
cmp
fnsave
pop
das
mov
movzx
ret
ins
and
int3
push
adc
xor
test
out
nop
into
jbe
jmp
mov
mul
cmp
pop
(bad)
mov
xchg
sub
jns
inc
cld
sbb
cmps
in
fsub
jbe
das
push
jbe
and
fst
(bad)
jne
dec
(bad)
jmp
cmc
xor
mov
and
out
or
hlt
out
inc
sti
fstp
adc
std
jge
and
mov
inc
sub
data16
push
scas
xchg
jmp
pop
outs
sub
pusha
adc
xor
int
lods
ss
loope
pushf
jl
mov
mov
push
and
lds
aas
xor
hlt
jmp
or
cmps
and
mov
outs
xor
arpl
ja
mov
and
out
movs
stos
add
and
xor
and
int
jnp
pushf
lock
movs
div
mov
mov
jb
aad
sahf
scas
xor
adc
stos
icebp
lea
dec
adc
inc
mov
push
(bad)
pop
aam
inc
in
cmp
test
jmp
scas
sub
add
add
cmp
shr
(bad)
addps
ins
jo
outs
mov
cmp
pop
ret
ins
jmp
cwde
sub
test
add
xor
cmp
out
sbb
jae
xchg
dec
mov
mov
call
jmp
pop
stc
imul
sub
sahf
push
fcomp
cmc
ja
mov
add
fcom
pop
loopne
xchg
fstp
push
mov
es
inc
pop
das
inc
jbe
jne
adc
nop
cmc
es
sub
mov
pop
mov
pop
push
sub
push
mov
daa
stc
call
aad
mov
stc
daa
jae
lea
repnz
clc
js
outs
test
into
xor
sbb
cmp
repnz
int3
(bad)
out
out
imul
and
test
aas
iret
jge
and
cmps
repnz
adc
pop
dec
push
mov
xchg
nop
ret
adc
sbb
pop
mov
xor
pop
xlat
sbb
pushf
shl
cmc
xchg
xchg
rcl
outs
je
and
cmps
retf
xchg
push
mov
arpl
popf
test
adc
jl
fstp
jo
nop
or
cdq
ins
lods
stos
xchg
add
mov
pop
dec
into
inc
dec
sbb
(bad)
lahf
xchg
mov
cld
lock
nop
xor
aas
inc
(bad)
std
jne
mov
pop
and
dec
and
out
push
push
add
dec
pushf
mul
ja
shl
cwde
add
aaa
adc
aaa
or
push
jne
cld
mov
or
daa
aam
adc
xchg
add
mov
jmp
imul
sbb
push
jmp
scas
and
idiv
jp
mov
sub
ins
jmp
push
movs
push
popf
push
outs
das
cld
push
and
iret
pop
shl
out
add
dec
xchg
neg
xlat
cmps
jno
jae
fist
aas
jp
mov
inc
xchg
hlt
push
xor
push
sub
mov
out
je
sbb
shr
inc
push
lock
cmc
mov
xchg
fldcw
in
aam
aam
pop
mov
mov
dec
enterw
pop
mov
std
les
daa
jns
daa
adc
rol
shr
stc
push
push
cmp
test
mov
ffreep
cmp
hlt
push
sbb
and
adc
cmp
mov
cmc
pop
test
mov
lock
adc
cmp
imul
frstor
cmp
xor
mov
mov
ja
inc
inc
pusha
jge
ret
xchg
sbb
adc
or
sti
fnsave
push
packsswb
and
popf
xchg
inc
jbe
mov
jns
mov
mov
push
retf
adc
xor
mov
xor
inc
ret
and
aam
and
in
pop
cmp
test
inc
dec
pop
jmp
push
mov
push
mov
dec
mov
out
inc
jbe
movs
fwait
cmp
fstp
(bad)
std
frstor
xchg
out
out
es
in
leave
mov
cld
test
popf
pop
xor
(bad)
int3
and
not
clc
(bad)
cmp
cmp
aad
dec
xchg
fadd
add
popf
xchg
add
cmps
xlat
mov
lea
popf
or
or
test
test
cmps
and
daa
std
rcl
cmp
fsubrp
mov
lods
pop
push
push
loopne
mov
add
and
stos
es
rol
(bad)
jns
mov
pushf
xchg
jo
(bad)
add
fsubr
ror
push
pop
jecxz
xchg
popf
push
jge
sub
mov
push
sbb
stos
mov
cmp
and
(bad)
sbb
(bad)
imul
cmp
push
retf
mov
movs
and
sbb
ficom
daa
and
call
adc
cwde
sbb
sar
push
and
dec
sub
les
cmp
jbe
call
push
jle
jle
cmp
jno
jmp
les
adc
and
or
gs
(bad)
(bad)
clc
xor
push
popa
mov
cmp
loop
ficomp
mov
mov
imul
lsl
sti
out
aaa
aad
lock
xchg
aaa
push
mov
cmc
sar
(bad)
mov
xor
pop
dec
jne
repz
inc
inc
jmp
les
ins
xchg
mov
cmp
pop
movs
hlt
outs
cmp
or
pop
mov
addr16
add
movs
mov
sti
stc
and
or
jno
aaa
mov
jge
out
(bad)
in
pop
jge
sbb
push
(bad)
(bad)
mov
pop
hlt
add
sub
jmp
mov
inc
imul
call
xlat
xchg
cld
ins
jno
ret
(bad)
mov
test
jmp
ss
xchg
jnp
pop
(bad)
test
jmp
xchg
repnz
sbb
pusha
ret
mov
mov
dec
sti
push
inc
test
aas
cs
jl
mov
mov
inc
into
xchg
lds
fsub
mov
out
into
inc
mul
iret
aaa
push
int3
scas
adc
add
mov
test
iret
lds
cmp
or
cli
xor
inc
jmp
or
movs
xchg
inc
jge
lock
cmc
pop
imul
imul
dec
jns
push
xor
sub
leave
in
mov
pop
inc
aaa
cmp
arpl
sub
jp
cmp
jmp
mov
ds
xchg
inc
ja
jecxz
xchg
ss
ins
loop
retf
jecxz
shr
(bad)
push
pop
pop
xchg
nop
imul
inc
stos
mov
out
jne
push
cmp
xor
push
call
les
push
in
movs
jge
scas
ins
cmc
inc
imul
mov
xchg
pop
or
jo
das
jb
in
and
outs
xchg
inc
xchg
sub
repz
popa
cmp
loopne
mov
pop
push
and
pop
sbb
xchg
in
jmp
jo
int
xor
adc
add
sub
leave
mov
in
push
aam
lods
push
out
ficomp
repnz
push
fs
fisttp
mov
aaa
dec
sbb
das
lds
push
repz
pop
sbb
mov
adc
inc
push
test
inc
test
xchg
xor
adc
jno
cmps
inc
push
cwde
data16
push
loopne
jnp
mov
test
jbe
ins
out
xchg
sub
das
push
test
hlt
xor
outs
pusha
int3
jno
jnp
popf
pop
imul
cmp
in
mov
mov
es
loopne
stos
mov
int3
pabsw
movs
cmp
inc
xor
cmp
cmp
test
pop
jg
lods
jl
aaa
dec
stos
mov
xor
add
ins
ficom
jmp
stos
out
cmp
pop
fs
retf
in
sar
adc
xchg
(bad)
xchg
or
inc
sbb
xor
outs
mov
fimul
jmp
div
sub
jl
int
out
dec
scas
icebp
ds
es
repz
adc
shl
fdivr
pop
cmp
xor
test
mov
or
repz
cmp
jns
dec
icebp
sub
fisubr
pushf
cmp
xchg
mov
sbb
(bad)
cmp
mov
std
inc
out
inc
pop
or
jno
int3
stos
add
cmp
xor
push
int
xor
push
and
mov
pop
(bad)
icebp
dec
mov
xchg
xchg
push
mov
add
mov
push
add
or
pop
sbb
lea
and
scas
int
and
mov
jle
sub
push
inc
test
push
shr
push
xchg
jecxz
loope
xor
inc
dec
dec
jp
ins
repz
or
xchg
dec
add
pushf
mov
cmp
sub
adc
pop
adc
(bad)
pop
les
add
ds
push
sbb
xchg
lods
xchg
pop
jb
ffree
(bad)
into
retf
icebp
mov
data16
int
clc
push
xor
callw
pop
push
push
inc
pushf
je
stos
sbb
inc
inc
push
mov
xchg
add
cmp
iret
adc
out
jno
lock
mov
clc
addr16
jg
daa
xor
xor
dec
inc
adc
stos
fist
test
fisubr
out
push
dec
xor
hlt
rcr
push
mov
sub
jns
pop
daa
cmp
fimul
das
imul
jmp
sub
sar
push
adc
push
lahf
or
mov
and
mov
aaa
cld
cmp
or
adc
xor
sub
jae
in
aas
mov
std
push
push
pop
pusha
xchg
inc
js
hlt
inc
(bad)
pop
ss
ins
outs
dec
push
jp
imul
daa
div
in
aad
mov
ins
rol
popf
dec
mov
cmp
and
mov
jae
push
shl
sbb
mov
and
sbb
imul
js
pop
push
into
ja
cmp
ror
or
inc
push
pop
and
inc
or
mov
pop
adc
mov
pop
sbb
and
jns
paddsw
bound
mov
sbb
ja
pop
ins
imul
jg
xor
xor
frstor
lods
stc
adc
mov
aaa
into
jle
and
pop
push
jle
or
clc
push
pop
dec
and
out
dec
out
mov
mov
cmps
xchg
cmp
dec
and
movs
mov
xchg
in
popf
cwde
rcr
jmp
movs
pusha
repz
push
sub
mov
js
ins
out
icebp
inc
and
mov
or
mov
out
dec
xchg
push
movs
fdivr
add
lahf
dec
fisub
movs
data16
idiv
sub
loop
cmp
int
jle
xor
fs
shl
or
mov
mov
adc
dec
push
sbb
test
fdivr
(bad)
in
adc
ins
out
test
fs
mov
stos
ror
jne
jle
sub
push
nop
(bad)
cmp
pop
sbb
not
push
mov
clc
sbb
jns
jno
ror
mov
or
and
cmp
push
jmp
and
ret
stos
bound
xor
jbe
loop
jle
push
lahf
out
adc
xchg
pop
adc
or
daa
js
xchg
aam
ret
stos
inc
push
xchg
adc
ret
sbb
neg
mov
sbb
call
in
mov
add
and
fmul
push
fnstcw
push
neg
neg
loope
imul
cmps
lds
in
push
aaa
dec
jg
aas
inc
dec
inc
mov
pop
lods
dec
inc
mov
mov
mov
sub
and
loop
cmps
in
call
push
lock
bound
loopne
(bad)
ins
jmp
sbb
pusha
push
jnp
fnstcw
imul
push
mov
mov
jl
mov
jmp
outs
out
xchg
or
adc
sahf
pop
fist
mov
movs
push
sbb
pusha
dec
fisubr
daa
movs
push
lock
mov
xchg
pop
inc
int3
pusha
nop
jle
nop
mov
sti
lods
sbb
fstp
xchg
out
sti
push
out
jle
jmp
or
jb
scas
fsub
inc
mov
xor
dec
aaa
lahf
data16
cld
jmp
adc
cmp
or
call
shl
cmp
lods
mov
or
xchg
dec
push
fstp
xor
mov
push
pop
add
xor
fild
add
arpl
pop
push
cmps
scas
push
cmovno
rcl
rcr
popf
sbb
pop
sub
xchg
mov
frstor
rcr
jmp
xor
(bad)
adc
call
push
stos
mov
mov
cmp
out
stos
loopne
pop
or
sub
imul
add
jmp
aad
in
jo
stos
sbb
xchg
push
arpl
mov
cmps
fs
clc
or
out
jmp
cdq
sbb
fnsavew
push
xor
xchg
push
jmp
bound
ret
or
dec
mov
or
test
fadd
fcomi
inc
push
movs
xlat
xchg
add
out
add
out
cmps
sahf
pop
mov
dec
dec
dec
call
inc
cmp
retf
arpl
out
push
inc
mov
xlat
clc
retf
in
xor
and
jae
jnp
mov
in
das
imul
or
cmps
pop
jg
xor
cld
nop
push
jmp
push
nop
lea
cmp
ja
addr16
sub
inc
mov
rol
aas
xor
sub
dec
mov
adc
xor
(bad)
in
xchg
xor
addr16
add
mov
push
jg
cmp
retf
add
int
outs
xchg
push
cmp
mov
std
in
rcr
or
push
test
idiv
nop
dec
jno
pop
xchg
cmp
addr16
adc
mov
out
adc
and
ror
xor
xchg
test
jecxz
xlat
adc
jnp
aas
leave
test
push
repz
xor
sbb
pop
mov
arpl
adc
push
pop
pavgw
inc
or
lock
mov
push
sub
xchg
add
(bad)
neg
in
jns
xor
sbb
lods
pop
fs
cmp
sub
mov
movs
sbb
push
shl
adc
add
pop
icebp
ins
je
sub
inc
pop
push
scas
js
(bad)
mov
int3
repz
and
cmc
xchg
mov
sar
shr
mov
shr
lods
mov
adc
cs
repnz
add
out
push
enter
push
cmp
jae
dec
xchg
ror
pop
add
dec
popa
dec
mov
cli
mov
lea
aas
inc
push
jg
cdq
add
not
jmp
adc
daa
cs
jns
jl
sti
pop
mov
cmp
jb
ror
jno
pop
jecxz
inc
movs
sbb
pop
and
stos
out
or
in
rol
xchg
mov
in
mov
sar
lods
(bad)
ins
dec
dec
xchg
aam
retf
(bad)
sbb
shl
fist
inc
or
into
in
clc
and
jmp
pushf
or
int3
pop
adc
push
sub
mov
mov
or
push
loop
jecxz
pand
(bad)
out
(bad)
sub
(bad)
(bad)
jae
and
cwde
stos
psraw
in
jecxz
retf
pusha
jecxz
pop
rcl
cmps
push
(bad)
jbe
loopne
lods
or
xchg
int3
inc
(bad)
leave
xor
cmps
mov
inc
xchg
or
xchg
or
push
xchg
jae
(bad)
pop
iret
sub
ja
stos
xor
test
call
mov
adc
stc
cmps
aad
retf
leave
ret
xchg
rol
adc
sbb
addr16
fdivr
sub
retf
loop
repnz
cmps
jo
in
int
outs
loop
movs
mul
fbstp
je
dec
cld
aaa
mov
pop
ds
add
cmc
mov
pop
pop
sub
clc
mov
mov
sbb
mov
gs
jecxz
cmp
test
or
and
sti
xor
std
mov
or
frstor
scas
push
pushf
enter
leave
(bad)
mul
(bad)
repnz
outs
inc
dec
dec
push
xor
jle
stc
mov
retf
and
jae
add
call
cli
sbb
jl
mov
push
(bad)
fist
add
ja
in
dec
call
mov
xchg
xchg
or
pop
minps
mov
xor
jmp
dec
cs
(bad)
mov
cs
push
dec
hlt
aad
push
cmps
sub
scas
enter
or
mov
(bad)
pop
push
clc
mov
fbld
fldcw
rcr
jo
inc
ffreep
int
sbb
jmp
aaa
cmp
inc
jg
movmskps
cld
stc
hlt
outs
fisttp
pop
cli
mov
jo
and
jnp
mov
daa
daa
scas
sub
jmp
pop
jae
lea
inc
sub
mov
adc
jns
cmps
and
sub
jp
adc
pushf
cmp
push
push
xchg
inc
or
fdivr
pushf
in
and
aad
in
xchg
sbb
jge
outs
call
in
scas
call
lods
sti
cli
ins
or
adc
daa
stc
les
data16
dec
ins
inc
popf
jne
dec
adc
ja
adc
std
call
cs
cmp
imul
idiv
ins
jns
xchg
add
lock
out
call
cs
(bad)
aad
push
and
ja
leave
dec
and
xor
cmp
or
inc
sub
mov
retf
adc
or
jmp
jbe
adc
loope
jb
lods
int
push
sub
xor
adc
pop
xchg
mov
xchg
shl
or
inc
fidiv
inc
cdq
push
ins
xor
cmp
fistp
or
pop
in
cmc
rcr
xor
dec
fldenv
rcl
mov
je
mov
and
aas
outs
xor
mov
mov
jns
mov
mov
mov
push
inc
cmovbe
mov
int3
idiv
cmp
add
push
inc
or
add
leave
dec
push
mov
adc
test
enter
out
cmp
and
repz
jle
xchg
mov
mov
ins
dec
or
lods
pop
lds
fcom
daa
lds
or
push
call
jmp
adc
setge
mov
adc
cmps
add
in
loopne
data16
push
dec
and
push
push
mov
stc
or
stc
sahf
mov
popa
je
pop
stc
mov
mov
add
fidivr
movs
out
adc
xor
fwait
popa
dec
mov
add
inc
cmp
inc
out
inc
test
sub
test
leave
sub
mov
jne
push
addr16
jae
xchg
out
dec
xchg
xor
cdq
repz
jp
jmp
xor
or
cli
xchg
mov
mov
mov
stos
repnz
push
in
sub
loopne
fstp
mov
xchg
mov
cmp
call
pop
icebp
in
test
stos
ins
fdivr
aad
mov
sub
sar
cli
jl
scas
add
jp
(bad)
dec
inc
pop
xchg
sub
outs
in
pop
mov
(bad)
ret
xor
not
rcr
mov
push
out
popa
dec
lods
xor
sub
arpl
dec
sti
jmp
fstp
push
sbb
sbb
sahf
lods
sub
xchg
or
cmps
ja
adc
add
pop
fist
lods
aaa
dec
sti
lds
hlt
mov
mov
(bad)
std
jne
pop
push
mov
xor
or
pop
mov
pusha
(bad)
and
xor
push
push
popf
adc
mov
dec
popa
pop
pop
cmp
inc
hlt
mov
adc
push
outs
xor
sub
dec
jp
sub
fcomp
inc
call
es
or
add
cmp
or
int3
outs
push
pop
std
pop
aad
(bad)
dec
enter
test
into
mov
adc
push
aaa
pushf
repnz
in
rcr
icebp
dec
(bad)
xchg
push
pop
sub
mov
adc
xor
scas
mov
cmp
sbb
inc
dec
mov
jb
out
or
call
in
fldcw
mov
xor
daa
and
into
and
(bad)
movs
xchg
mov
sti
jne
add
sub
aaa
cmp
call
(bad)
push
lods
movd
cmp
popa
cwde
pop
in
pop
scas
xchg
mov
in
xchg
neg
push
icebp
dec
push
jle
cmp
test
pop
leave
pop
cdq
stos
fisubr
sbb
fiadd
inc
mov
sub
add
cmp
repnz
cmp
inc
pusha
xchg
dec
jle
into
ror
ret
adc
sbb
popf
cld
xor
adc
mov
adc
scas
aas
aaa
pusha
icebp
xor
data16
ins
push
add
pushf
js
cmp
lea
std
push
in
add
pop
mov
loop
mov
fadd
dec
cmps
mov
ret
addr16
enter
test
sub
sbb
fstp
xchg
rol
cs
jp
test
xor
jmp
inc
push
or
(bad)
ss
inc
xchg
sbb
cdq
dec
pop
std
lock
or
movs
out
retf
xor
cwde
jne
adc
add
adc
retf
js
ret
test
dec
sbb
addr16
pop
mov
rol
jecxz
push
pop
hlt
and
pop
or
push
mov
cld
dec
and
mov
xor
mov
lods
push
xchg
sbb
mov
xchg
shl
push
pop
sar
jl
jnp
fwait
pop
fmul
in
xchg
or
mov
cdq
mov
mov
daa
jg
dec
out
fcomp
daa
movs
adc
push
jae
lahf
add
xor
mov
loope
pop
movs
dec
popf
sbb
jg
retf
pushf
sub
mov
push
repnz
inc
jge
int
xchg
and
pop
adc
adc
shl
adc
adc
mov
test
mov
int3
out
dec
and
push
mov
push
repnz
lock
cmp
ret
xchg
popa
cmp
push
mov
inc
aaa
sbb
test
or
jnp
ss
call
sub
xor
test
xchg
outs
xchg
sub
xlat
call
out
jo
in
fs
pop
dec
cmp
push
stos
mov
popf
scas
into
ret
nop
sbb
ins
aas
jno
add
les
test
mov
or
push
push
sbb
test
sub
jmp
jb
scas
add
in
cdq
pminsw
inc
push
adc
outs
adc
outs
jg
jb
push
stc
xor
sub
xor
lds
fist
ret
push
mov
adc
adc
jns
not
mov
cld
inc
cmp
movs
mov
push
mov
gs
jbe
jbe
mov
mov
jno
jl
jb
fsub
idiv
mov
mov
loop
xchg
imul
or
les
mov
push
push
loopne
(bad)
xlat
int
dec
pop
outs
inc
and
les
retf
mov
push
mov
ret
push
lods
pop
ins
dec
js
push
outs
into
cmp
mov
jg
outs
or
fst
push
scas
push
cmp
cmc
into
xchg
fsubr
ins
add
add
cmps
cmp
bound
retf
ret
sbb
test
push
mov
loopne
and
jnp
mov
lock
pop
xor
dec
and
xchg
fimul
icebp
pop
in
pop
xchg
sub
inc
fs
enter
mov
lods
sbb
rcr
mov
mov
cmc
(bad)
push
lock
mov
call
call
and
inc
ds
jno
push
test
or
aaa
mov
dec
imul
pop
xchg
lods
lods
stos
xchg
cmps
xlat
(bad)
lock
cdq
jecxz
in
mov
dec
xchg
dec
push
xchg
(bad)
call
push
cmp
aas
ret
cdq
faddp
mov
movs
add
cdq
lods
sti
movs
or
dec
add
jg
xchg
sub
mov
clc
shr
cmp
mov
and
mov
stos
cmps
inc
and
mov
jae
xor
or
pushf
das
pop
mov
xor
xlat
scas
xchg
fmulp
cld
stos
mov
xchg
mov
mov
(bad)
imul
adc
or
shl
stc
scas
(bad)
fst
push
retf
mov
jns
ret
jp
push
loopne
mov
push
ret
scas
in
sub
mov
adc
je
cdq
movs
xchg
pop
ins
dec
sbb
or
xlat
xor
xor
fwait
mov
inc
test
sub
jge
ficom
pop
std
jb
adc
in
fwait
adc
mov
xchg
push
mov
mov
pop
loope
fcomp
mov
xchg
xor
bound
mov
addr16
xor
inc
das
std
xor
enter
(bad)
sub
fist
add
add
inc
or
addr16
push
mov
es
test
push
jns
test
mov
out
pop
pop
outs
outs
or
repz
repz
into
and
xchg
dec
cmp
mov
or
mov
rol
scas
or
dec
mov
call
repz
nop
mov
das
xor
push
and
push
push
aam
mov
movs
mov
shl
cmp
fnsetpm(287
mov
or
cld
scas
aad
jle
lahf
movs
int3
int3
cmp
je
je
mov
fstp
addr16
lds
xchg
sbb
sbb
mov
mov
lea
inc
scas
mov
test
pop
test
div
cld
mov
mov
(bad)
and
sub
stc
or
mov
dec
fs
pushf
xor
(bad)
data16
add
cmp
addr16
sbb
neg
pop
addr16
gs
mov
(bad)
mov
pusha
js
(bad)
vpavgb
add
call
mov
pop
jl
sub
xor
ret
(bad)
mov
ret
mov
or
mov
mov
pusha
mov
scas
stos
iret
xchg
jp
pop
pop
mov
std
jno
cmp
pop
imul
xor
jmp
mov
int3
cli
out
dec
sti
mov
pusha
xchg
rol
lods
cmp
pop
or
pushf
lea
xor
aam
cmp
pop
adc
jge
cdq
enter
jle
sbb
xchg
cmp
mov
xor
cmps
ror
mov
pop
(bad)
(bad)
fucomi
imul
(bad)
out
add
ficom
mov
ret
cli
fstp
mov
push
aas
sub
add
scas
in
xlat
lock
dec
cmp
mov
out
rcl
and
das
sbb
popf
icebp
mov
ret
popf
aam
cdq
pop
popa
fbld
adc
dec
pop
scas
inc
add
sbb
loope
ficom
mov
fwait
stc
push
xor
jecxz
and
aad
or
xor
out
mov
push
sar
test
call
pushf
stc
mov
cmp
xchg
pop
sbb
js
nop
xchg
push
(bad)
loopne
sub
out
dec
mov
les
mov
xor
dec
sbb
in
pusha
sbb
or
js
outs
addr16
out
push
inc
jnp
push
mov
dec
push
mov
mov
mov
out
sbb
dec
lea
inc
pop
mov
sbb
mov
fiadd
sbb
push
adc
add
push
add
xchg
adc
call
cmp
push
push
sti
pop
into
push
and
cmp
dec
jns
mov
mov
fidiv
dec
adc
mov
push
adc
ficomp
pop
sbb
loope
jno
and
es
lock
ja
test
fcomp
mov
inc
mov
jecxz
jge
shl
mov
mov
push
nop
aaa
push
xor
imul
icebp
jne
pop
dec
dec
push
(bad)
ss
fidivr
nop
sbb
xchg
xor
push
fnstsw
jmp
jecxz
iret
add
add
mov
es
adc
xor
adc
les
mov
fidiv
in
ins
inc
fbstp
dec
inc
ret
nop
jl
ret
dec
inc
mov
pusha
mov
dec
or
xor
mov
and
mov
cmp
(bad)
int3
pop
bswap
xchg
mov
mov
cmp
ja
ja
push
cmp
push
sub
adc
inc
push
xchg
mov
jne
lea
dec
inc
xor
jno
or
out
bsf
mov
push
jmp
sti
ret
aam
xchg
or
scas
mov
sub
int
daa
imul
jmp
sbb
pop
mov
movs
inc
aas
inc
aad
mov
ins
sar
cwde
ss
das
ret
xchg
pop
pop
mov
mov
mov
xchg
jp
pop
jmp
clc
test
pop
dec
sub
dec
push
jne
and
test
pop
dec
push
cmp
pop
jmp
out
jmp
cmps
or
rcl
xor
popa
ror
pop
dec
arpl
cmp
out
pop
push
and
retf
add
(bad)
jg
cdq
cmps
cwde
jne
jl
or
mov
cwde
inc
sbb
rcr
push
sbb
repz
pop
out
mov
cmc
adc
dec
inc
push
mov
push
push
adc
or
cmc
mov
sub
dec
adc
pop
mov
aaa
into
test
cmp
xor
sub
sbb
inc
mov
pop
pushf
shl
(bad)
jmp
xor
clc
jmp
pop
mov
sub
lock
repnz
out
leave
pop
xchg
xchg
xchg
and
lock
cmps
sub
dec
xor
call
xchg
pop
adc
shl
les
pop
mov
add
cmp
xor
pop
xor
cli
sbb
sbb
mov
xlat
(bad)
imul
mov
retf
adc
outs
push
cmps
pusha
xchg
inc
ror
scas
ss
mov
fs
int3
xchg
add
push
pop
push
jno
cs
int3
adc
jae
call
inc
mov
hlt
push
out
jecxz
adc
int3
and
mov
push
loop
daa
push
bound
fucomip
jmp
std
ja
stos
xor
or
dec
mov
in
fld
in
add
sbb
arpl
repnz
mov
aam
mov
sbb
jns
and
fwait
xchg
sub
and
lea
push
add
(bad)
(bad)
adc
daa
add
push
mov
out
or
adc
cwde
push
push
fiadd
mov
mov
add
sbb
test
inc
dec
push
clc
aaa
mov
popf
loopne
mov
popf
xchg
xor
test
dec
mov
(bad)
aaa
jg
ffree
stos
rol
push
mov
inc
idiv
mov
sti
adc
test
sub
dec
cmp
jnp
fnsave
cmp
dec
stos
add
inc
xchg
movs
inc
lock
and
adc
inc
xor
std
mov
jae
ss
shr
jmp
pushf
imul
inc
inc
and
cs
mov
mov
dec
jl
(bad)
ficom
cdq
pop
pop
mov
jp
xchg
xor
xchg
test
mov
and
push
cli
jg
or
shl
jmp
cmp
dec
(bad)
cmp
xchg
push
rol
aaa
push
lea
push
xchg
dec
sub
cld
cwde
jl
iret
jb
dec
lods
movs
xor
test
hlt
out
add
sbb
ds
mov
mov
not
jecxz
mov
or
arpl
ror
xor
xor
jmp
xor
mov
dec
(bad)
cmp
sti
mov
or
test
add
lods
cld
dec
xchg
outs
cs
and
jle
out
jg
mov
ss
(bad)
fidivr
xor
dec
les
dec
btr
shl
mov
ins
mov
popf
adc
(bad)
xor
add
arpl
sub
sbb
jg
test
pop
mov
sbb
(bad)
jno
in
add
jbe
jg
xchg
imul
xchg
mov
pop
popa
inc
(bad)
aam
add
mov
add
push
and
and
jbe
or
imul
sub
fmul
xchg
retf
add
mov
mov
movs
adc
inc
pop
jecxz
cmp
es
ins
(bad)
jmp
xlat
outs
add
jle
in
mov
xchg
repnz
push
stos
sbb
nop
mov
mov
adc
in
mov
shl
hlt
ja
ffree
imul
push
inc
cmp
sub
lea
stos
push
mov
inc
pand
sbb
mov
mov
icebp
loopne
cmp
push
cli
mov
lods
mov
js
lea
(bad)
clc
(bad)
inc
pop
aaa
mov
sbb
jo
and
pop
ins
imul
gs
movs
adc
loopne
pop
aas
in
inc
adc
mov
mov
mov
mov
(bad)
stos
cli
(bad)
rcr
push
pop
fld
dec
daa
pusha
js
push
(bad)
fstp
mov
push
adc
mov
mov
or
jne
mov
jg
hlt
mov
clc
cmc
mov
hlt
xchg
ffree
sbb
je
inc
or
sub
mov
and
pop
pop
push
in
scas
rcr
mov
push
and
inc
rol
pop
cld
xor
pop
ss
adc
out
jbe
pop
inc
cs
mov
icebp
cs
pop
pusha
std
xchg
xchg
imul
imul
ror
pop
daa
or
push
mov
int3
sub
(bad)
(bad)
xlat
pop
arpl
jmp
pop
popa
(bad)
out
xor
xchg
mov
(bad)
sub
cwde
fist
imul
pushf
adc
jl
ret
push
les
add
pop
mov
clc
jbe
mov
sub
xor
dec
xchg
add
mov
mov
aaa
iret
sub
movs
data16
push
and
cs
jge
pop
ins
pop
pop
imul
cwde
rcr
pushf
xor
jmp
in
(bad)
dec
xlat
cmp
inc
dec
pop
fmul
inc
xchg
arpl
jno
jmp
and
mov
aam
and
mov
sub
xchg
inc
and
pusha
jmp
stos
test
into
sbb
popf
(bad)
sbb
fisttp
scas
push
nop
sbb
outs
(bad)
or
xchg
scas
xchg
mov
add
pop
push
movs
in
mov
cmp
clc
cs
in
cmc
inc
nop
ins
xchg
dec
cmp
bound
movs
popaw
loope
add
pusha
or
rcl
(bad)
jg
cwde
lods
out
fcom
and
das
ror
or
sbb
dec
jmp
mov
and
test
or
clc
test
int3
test
(bad)
cmp
sbb
push
jl
call
dec
lahf
push
shl
pop
dec
inc
(bad)
mov
adc
add
mov
sbb
adc
cmps
call
cmp
in
gs
jl
gs
sbb
fisttp
fwait
inc
mov
jge
pop
adc
je
(bad)
mov
out
xchg
mov
fsub
loopne
aas
mov
mov
xchg
and
xor
call
fcom
push
jmp
pop
fs
pop
scas
mov
dec
(bad)
xlat
xor
push
sar
pop
bound
and
iret
inc
nop
test
iret
sub
jge
or
fs
dec
pusha
sti
es
loope
sub
aad
mov
mov
mov
fsubr
leave
popa
mov
into
fwait
mov
jbe
pop
cdq
pop
bound
iret
(bad)
lods
(bad)
mov
test
pusha
mov
xchg
call
adc
fwait
ds
jmp
std
add
jno
aam
xor
xchg
push
(bad)
mov
xor
clc
or
jmp
dec
mov
shr
lahf
inc
test
mov
icebp
or
enter
xlat
add
dec
sbb
out
fld
inc
sub
dec
test
das
outs
inc
pusha
adc
dec
mov
cmp
pop
lods
or
xchg
cmps
jg
inc
inc
sub
pop
jae
xor
cli
xor
jb
cmp
iret
fisubr
pop
(bad)
ja
lods
dec
pusha
mov
ds
out
mov
cmp
retf
xchg
pop
push
cdq
push
mov
or
jo
cmp
out
adc
int3
mov
adc
mov
retf
jle
push
push
(bad)
mov
das
or
push
movs
sub
mov
and
adc
or
or
sbb
mov
cld
jae
add
xchg
and
pop
mov
rcr
cmc
jp
loopne
jmp
pop
sub
inc
mov
rol
movs
xchg
retf
inc
int3
push
aaa
mov
aam
mov
arpl
push
cmp
stc
enter
sub
dec
push
xchg
sbb
call
fnstsw
push
xchg
ins
jnp
pusha
(bad)
in
jmp
in
arpl
pop
and
ror
pusha
jge
ins
jmp
cdq
jae
int3
add
les
or
in
arpl
into
leave
sbb
jae
mul
fxch
xor
pop
mov
inc
inc
xchg
push
sub
sbb
neg
std
xchg
test
push
xchg
jle
dec
loop
sar
sub
or
mov
lods
lods
nop
dec
inc
and
in
sbb
xchg
and
jno
pop
push
shr
mul
sbb
pop
mov
mov
addr16
ret
adc
adc
xor
xor
ret
inc
out
mov
mov
in
cmp
dec
add
mov
leave
pop
sbb
mov
mov
cwde
mov
retf
cli
out
add
cmp
mov
clc
sub
call
loope
aas
mov
sbb
xlat
pop
cwde
enter
push
jl
xor
pop
pop
pop
mov
xor
inc
inc
inc
(bad)
sbb
jmp
mov
or
in
inc
(bad)
mov
and
cmp
gs
jns
fcomp
inc
int
cld
(bad)
inc
jl
push
jne
adc
out
jl
scas
push
stos
xchg
adc
and
mov
push
orps
mov
scas
adc
cmp
push
mov
movs
pop
jmp
mov
stos
xor
in
ds
retf
ins
pop
ss
or
shl
pop
sar
pop
(bad)
ins
mov
sbb
dec
mov
(bad)
inc
and
mov
mov
adc
lods
cmps
or
adc
sub
cmc
mov
outs
clc
(bad)
clc
ror
dec
mov
inc
mov
add
jo
and
and
or
pop
ficom
push
ror
add
cmc
(bad)
xor
lds
push
cmp
jp
call
cmp
loop
ret
stc
and
add
pop
scas
in
xchg
das
mov
xchg
mov
cmps
cld
inc
sahf
mov
sbb
mov
sbb
sub
sbb
mov
into
cmp
jns
cld
dec
mov
push
inc
push
inc
sub
mov
and
push
dec
dec
mov
jg
(bad)
ds
shr
fistp
scas
lods
(bad)
and
jmp
ret
fisubr
retf
test
mov
cmp
aas
repnz
jp
fnstcw
loope
or
jo
cdq
mov
xor
cmp
fadd
jb
pop
mov
rol
clc
sub
clc
fdiv
sbb
fwait
pushf
retf
test
leave
cli
rcr
cmps
xor
ins
inc
dec
and
loope
cmp
mov
popa
jmp
cld
retf
or
rcr
les
fdiv
jno
push
cmps
mov
pusha
(bad)
out
cmp
xor
out
or
add
pop
shl
jge
dec
and
into
sti
adc
sbb
dec
mov
inc
into
mov
or
icebp
call
(bad)
mov
xchg
lea
mov
ss
sbb
stc
cmps
or
xchg
push
cmp
psubusw
aas
idiv
fistp
mov
xchg
sub
imul
retf
test
mov
call
test
retf
xchg
or
sub
bound
mov
xchg
cdq
mov
jg
aaa
add
jbe
sbb
fmul
(bad)
(bad)
fdivr
mov
xchg
adc
mov
push
pop
mov
pop
cmp
add
jp
aam
test
shr
test
shl
std
add
cmc
mov
mov
and
punpcklbw
stos
push
mov
ss
mov
push
imul
sbb
cmps
pop
mov
(bad)
push
(bad)
or
and
inc
loopne
scas
cdq
jbe
(bad)
push
xchg
or
sub
addr16
jl
scas
dec
jnp
idiv
ficom
shl
ins
iret
into
mov
int
sub
jmp
(bad)
jb
jmp
or
adc
sbb
jae
push
or
js
jo
sbb
jnp
mov
inc
push
rol
mov
test
xchg
test
and
into
in
and
cld
dec
cmp
mov
jnp
stos
and
or
out
jge
int
cmc
sti
lods
mov
sub
mov
xor
mov
pop
push
ins
mov
sbb
xchg
rcr
dec
(bad)
xor
leave
retf
cdq
mov
mov
sbb
stos
cmc
fnstenv
in
jmp
shr
and
push
pusha
imul
sbb
sub
dec
mov
es
ins
sub
mov
clc
push
pop
add
bswap
xchg
mov
xchg
sbb
push
test
scas
mov
pop
(bad)
sahf
retf
ds
push
addr16
xchg
mov
ret
js
int
add
test
jo
repnz
fld
dec
push
std
inc
or
test
fnstsw
fs
push
call
call
or
inc
(bad)
loope
stos
jl
cmp
hlt
enter
mov
hlt
mov
(bad)
dec
add
xor
cld
xor
jmp
pop
cwde
in
pop
ret
xchg
pop
xor
dec
fisttp
ins
out
mov
xor
aad
ror
xlat
hlt
add
lock
iret
les
push
das
or
shr
jo
(bad)
test
push
xchg
pop
and
sahf
pop
push
test
sahf
mov
mov
icebp
ins
jmp
xlat
dec
out
adc
or
dec
inc
inc
pop
je
in
into
xor
push
or
pop
sbb
mov
mov
loopne
fdivr
xchg
div
inc
cwde
call
je
icebp
fsub
jbe
sbb
out
(bad)
out
xchg
into
and
loopne
inc
xchg
mov
pop
(bad)
rcl
jge
pop
out
inc
(bad)
(bad)
cmp
ret
cmp
in
daa
arpl
mov
(bad)
sbb
xchg
scas
add
cmps
inc
cmps
or
aad
push
push
add
mov
outs
call
and
rcl
or
je
bound
ja
adc
lds
mov
add
push
xor
or
xor
jg
jnp
mov
xlat
xor
int3
xor
pop
leave
or
or
mov
cmc
scas
xchg
jo
out
pop
fsubr
in
imul
pop
mov
jecxz
mov
stos
xor
fbstp
dec
ret
jle
icebp
mov
stos
sub
mov
push
jp
(bad)
jno
or
imul
jle
sti
mov
(bad)
or
imul
push
scas
inc
push
mov
xor
mov
mov
call
cdq
stos
fisubr
adc
add
popa
xchg
mov
mov
add
in
fidivr
pop
dec
fcomp
popf
mov
mov
push
int
pop
scas
fdivr
mov
mov
(bad)
mov
call
ja
cmp
pushf
jmp
push
out
pushf
push
and
push
adc
jg
outs
jmp
aad
(bad)
xor
pop
jl
lods
jg
sub
push
or
cmps
push
out
jns
hlt
pop
adc
loopne
(bad)
sub
(bad)
out
js
inc
and
sbb
push
xchg
mov
shl
pop
pop
test
cmps
and
iret
mov
add
repz
adc
jmp
jmp
jbe
jnp
jno
sbb
sbb
mov
mov
dec
mov
jg
mov
test
add
ret
mov
inc
aam
imul
xor
push
mov
test
aad
and
jg
ins
pop
mov
cmps
inc
call
pop
cmp
pop
repnz
push
daa
in
mov
out
hlt
xchg
push
add
pop
out
ffreep
cmps
ja
gs
adc
or
hlt
std
inc
or
mov
xlat
push
ret
add
lods
inc
repz
push
dec
pop
jnp
ds
arpl
sbb
stos
fwait
mov
lods
mov
or
ja
(bad)
cli
and
jge
sub
mov
hlt
imul
and
movs
add
cmp
fst
aam
popa
repnz
pop
xor
dec
ins
push
cs
outs
and
dec
retf
dec
dec
retf
mov
pop
out
arpl
sub
and
jo
mov
movs
add
sar
arpl
cli
leave
adc
mov
pop
in
mov
jno
jl
(bad)
inc
xor
mov
popa
enter
cmp
mov
sbb
cmp
ins
mov
addr16
addr16
add
add
pop
(bad)
mov
ret
nop
push
stos
push
test
push
sub
push
pop
mov
add
les
add
dec
sub
retf
sub
adc
mov
scas
das
jno
pop
jb
scas
clc
aaa
sub
fdivr
in
mov
mov
mov
jl
test
mov
fld
mov
sbb
daa
pop
mov
retf
adc
jmp
cmps
sbb
lds
retf
mov
das
pop
call
sbb
ss
pop
inc
mov
(bad)
nop
jno
addr16
adc
push
sub
mov
jno
icebp
xor
pushf
sbb
out
or
shl
mov
pop
out
mov
in
arpl
xchg
mov
jmp
inc
js
jge
test
leave
clc
mov
fisttp
dec
repnz
inc
push
ret
sbb
xor
ror
push
sar
sub
lods
or
xchg
xchg
add
inc
adc
test
sbb
xor
cdq
lods
pop
movs
call
cmc
into
ficomp
imul
sti
dec
les
sub
inc
and
nop
fimul
popa
xor
aaa
cmp
sbb
cmpxchg
add
(bad)
movs
add
lea
and
jge
cmp
outs
sbb
fwait
dec
mov
pop
dec
movs
not
jns
jecxz
inc
aaa
mov
out
imul
lahf
movs
je
ror
xchg
out
leave
dec
cli
xchg
xchg
leave
dec
mov
jecxz
xor
jg
int3
pop
loop
scas
neg
jns
cs
mov
sub
lods
cmc
sbb
xor
sub
push
mov
xchg
push
out
push
in
(bad)
and
fld
scas
cmps
lods
mov
jmp
or
fcom
and
ror
ret
push
shr
pusha
pop
and
jns
ss
test
push
stc
sbb
(bad)
ror
mov
movs
jno
popa
scas
mov
add
nop
movs
mov
cmps
lods
jle
pop
hlt
jnp
push
in
mov
cmp
pushf
les
jmp
sbb
mov
in
and
mov
xor
add
popf
mov
mov
outs
mov
or
cmp
movs
cli
outs
sbb
ds
leave
stos
mov
test
hlt
clc
imul
xchg
add
sbb
cmp
jg
xchg
shl
inc
jg
lods
pop
mov
inc
int3
(bad)
mov
mov
mov
mov
bound
or
mov
mov
mov
mov
outs
inc
dec
aaa
jl
int3
xchg
jle
ror
cli
jmp
xor
sub
and
and
and
xor
cli
out
jmp
pop
(bad)
add
ins
pop
aad
stos
sahf
rcr
lea
icebp
jno
mov
jae
cmp
pop
hlt
pop
sub
lods
pop
mov
jnp
dec
xchg
mov
pop
or
stos
mov
and
sbb
repnz
dec
arpl
(bad)
push
mov
sbb
and
std
jmp
je
xchg
ss
pop
push
dec
jle
jne
sub
call
sub
jp
dec
fsubr
cmp
call
test
jnp
push
sbb
addr16
idiv
or
ja
adc
adc
mov
enter
adc
and
mov
sub
out
rcl
shr
stos
mov
pushf
imul
mov
out
(bad)
mov
pop
test
sbb
repnz
dec
cmp
sbb
hlt
sub
mov
loop
repz
sbb
push
scas
cmp
sti
movs
aad
push
mov
enter
repnz
pop
mov
repnz
add
arpl
cmp
retf
nop
lahf
icebp
ret
fld
jns
aas
lods
xchg
test
ficomp
sub
pop
lock
inc
pop
popa
sti
neg
out
dec
imul
xchg
outs
hlt
jmp
or
mov
xchg
xlat
xchg
xor
push
or
jge
aad
and
aaa
mov
pop
fbld
sub
xor
out
sbb
pop
inc
cdq
out
mov
retf
mov
pop
loope
in
sar
retf
fsubr
mov
cld
or
push
sbb
mov
cs
jl
cmc
loope
rcr
dec
aaa
(bad)
cld
xor
fild
lds
push
and
into
dec
pop
dec
sar
sub
sar
cmp
outs
pop
dec
fucomip
cdq
sub
fnsave
imul
bound
jp
ins
movs
mov
out
dec
mov
mov
sub
inc
add
mov
lods
outs
jp
push
sbb
mov
adc
sbb
xchg
add
and
add
movs
cmp
(bad)
popf
cmp
cwde
jmp
cmp
mov
add
mov
jne
popf
sahf
leave
and
loopne
inc
sti
ficom
xchg
jmp
(bad)
mov
cmps
stos
scas
scas
pop
cmp
(bad)
int3
ret
fsubrp
cmp
ror
jg
xor
aam
iret
clc
adc
inc
sbb
outs
std
xchg
fs
hlt
shl
push
out
js
mov
cld
push
mov
cmp
call
sbb
out
fwait
js
mov
sub
jno
(bad)
mov
or
pushf
mov
push
push
mov
mov
call
sbb
outs
loopne
stos
xchg
jg
sbb
add
test
push
push
pop
je
push
push
out
sub
and
xor
mov
jg
cmps
in
push
and
in
mov
data16
and
adc
ret
and
ror
mov
xchg
mov
cwde
loopne
inc
nop
xchg
mov
xchg
ss
mov
dec
mov
(bad)
jns
mov
call
scas
(bad)
mov
repnz
dec
jl
cmp
lds
out
sahf
cmps
inc
push
clc
mov
sbb
mov
or
inc
mov
dec
push
xlat
int
sub
jae
sbb
stos
out
mov
or
stos
lds
rol
fwait
jl
dec
inc
jle
xor
stos
dec
cdq
cs
sub
inc
ror
xor
ja
cmp
shl
mov
pop
fisub
ja
pusha
loop
mov
repnz
dec
push
cld
jmp
fsubr
xchg
pop
dec
cld
clc
cld
cmps
aam
mov
sub
xor
ret
sub
or
xchg
mul
cs
enter
adc
or
popf
ret
cmp
mov
dec
loop
enter
imul
cs
mov
pop
lds
sub
cdq
enter
cmp
test
inc
or
enter
mov
and
inc
rcl
pop
adc
popf
or
arpl
fiadd
jmp
inc
imul
or
out
(bad)
sbb
clc
mov
cli
(bad)
retf
fs
jg
enter
or
(bad)
jmp
(bad)
gs
into
jmp
sbb
and
add
xor
mov
push
in
sbb
jns
jle
lock
mov
mov
fmul
mov
fldcw
gs
mov
loope
xchg
out
inc
rcl
lds
pusha
mov
ror
dec
push
add
mov
mov
leave
fs
mov
sti
mov
jae
addr16
xchg
out
pop
test
push
(bad)
retf
jmp
mov
and
jp
push
test
leave
jmp
test
sahf
mov
clc
cdq
inc
adc
fisttp
cmp
and
xor
retf
and
mov
push
and
add
push
adc
inc
js
pop
inc
push
stos
cld
test
gs
inc
aam
imul
cs
mov
rcl
popf
push
(bad)
jmp
inc
cmp
ds
sub
inc
pop
lea
int
xor
xchg
popa
push
xor
push
xchg
ret
scas
jecxz
push
inc
je
gs
cmovno
sahf
(bad)
xchg
mov
inc
imul
pop
out
mov
mov
rcl
sub
gs
sub
pop
shr
and
mov
ret
(bad)
jae
dec
sub
repnz
mov
lods
movs
dec
sahf
popa
jbe
push
and
scas
pop
jge
sar
inc
cmp
add
popa
mul
int3
pop
push
je
lahf
fwait
aam
jmp
pop
loopne
cmp
sti
mov
add
xor
test
xor
lods
ins
xchg
repz
(bad)
out
loope
sbb
push
call
inc
mov
retf
dec
(bad)
mov
sahf
out
shl
ret
out
inc
nop
push
fwait
imul
es
imul
sbb
enter
mov
lods
popa
popa
je
lahf
popf
and
int
mov
fcom
adc
or
xchg
dec
call
cs
test
arpl
repz
ss
sar
mov
out
fnsave
mov
mov
(bad)
stos
and
jp
inc
xchg
add
dec
mov
sti
mov
movs
inc
push
adc
mov
push
cmp
or
(bad)
mov
and
cmp
jle
adc
ins
sti
mov
mov
aaa
int3
jo
cdq
cs
test
cdq
add
inc
(bad)
or
add
pop
ret
inc
jns
mov
ret
call
dec
in
pop
mov
inc
sbb
daa
jecxz
(bad)
adc
sbb
ds
lahf
or
jl
fs
xchg
xlat
(bad)
mov
jge
mov
xchg
pop
cs
xor
xchg
sub
lds
ins
add
pop
fisub
gs
div
xor
ja
jmp
pop
int3
scas
fadd
aaa
xor
cmc
scas
(bad)
outs
stos
and
test
in
shl
mov
pop
mov
ja
or
adc
ds
and
test
shl
mov
repnz
mov
out
xchg
std
push
xchg
fucomp
jae
adc
cmovp
cmps
push
dec
pop
test
(bad)
jl
pop
add
pop
mov
std
push
mov
cmps
mul
pop
sbb
mov
cmp
ins
mov
push
mov
cmp
test
dec
hlt
leave
aaa
sbb
mov
pop
imul
push
push
push
ss
dec
adc
je
rcr
sbb
jb
ror
fs
pop
mov
in
in
loope
movs
and
fidivr
popf
repz
es
xchg
mov
iret
dec
dec
pushf
add
imul
std
jb
mov
jmp
push
xchg
shr
or
push
sar
rcr
mov
inc
movaps
scas
in
dec
lods
and
inc
push
pop
cs
pop
or
hlt
aam
push
repnz
mov
std
fiadd
add
jp
aas
cld
in
sbb
xor
jl
cmp
aam
sub
sub
mov
mov
cmp
sahf
cmps
lahf
or
movs
gs
cwde
add
mov
pop
mov
jne
cmc
cmps
sub
xchg
dec
sbb
sti
or
xchg
sbb
cmp
push
rol
je
arpl
mov
shld
fdiv
sub
repz
pop
sbb
imul
jo
test
mov
push
test
test
(bad)
fsub
outs
cmp
in
nop
mov
adc
add
cmc
in
inc
cli
inc
inc
push
daa
add
jmp
xchg
mov
xchg
mov
in
dec
ror
jne
popf
xchg
jecxz
sti
pop
push
dec
rcl
cmp
inc
pop
sar
cwde
enterw
inc
add
test
xchg
cld
(bad)
mov
shl
out
jg
ss
(bad)
pop
rcr
outs
mov
movntq
push
daa
out
aaa
cmc
cmp
jecxz
cwde
mov
push
mov
inc
stos
push
retf
mov
and
add
fnstsw
lods
out
push
pushf
jmp
push
and
mov
pop
mov
mov
mov
jge
mov
jo
out
mov
fcmovb
in
mov
shl
daa
cmp
push
jmp
loop
inc
and
dec
push
repnz
xchg
icebp
cmp
add
outs
mov
push
dec
leave
cmps
(bad)
and
loopne
jo
add
rcr
push
mov
inc
add
jb
mov
xchg
cmp
in
jecxz
jg
bound
jno
inc
jb
data16
ret
fldenv
adc
loopne
repnz
or
test
and
lea
sar
jo
dec
and
icebp
cmp
les
retf
aas
or
ja
and
jl
and
dec
xor
in
adc
cmps
inc
(bad)
dec
add
daa
mov
jbe
imul
pop
xchg
test
xchg
and
and
xor
rcr
sbb
push
cmp
push
stc
or
mov
or
fwait
aam
ins
(bad)
sbb
mov
popf
jae
mov
mov
das
lds
mov
jecxz
sub
mov
ds
sub
rcl
cmps
add
sub
sbb
pushw
xor
fst
rcr
rcr
lods
cmp
add
cmp
std
cwde
jns
push
jg
add
into
pop
sar
sbb
into
retf
mov
scas
push
push
ret
stos
jl
jg
lahf
jno
cmp
xor
(bad)
shl
js
mov
xchg
je
js
clc
jns
add
push
mov
ja
mov
loopne
adc
data16
cmp
mov
push
retf
jno
mov
mov
sbb
leave
mov
and
sub
jmp
lahf
add
pop
push
into
out
das
sbb
and
ficom
mov
mov
lods
xor
push
mov
(bad)
mov
das
std
push
iret
cmp
or
push
jnp
mov
cmc
xor
mov
pop
mov
movs
sbb
cdq
or
hlt
iret
fsubrp
push
scas
mov
popf
push
sbb
pop
mov
sub
or
mov
push
sub
jbe
popf
sbb
mov
scas
cmp
cmp
out
fsubr
mov
adc
test
enter
sahf
mov
rol
inc
push
dec
aas
xor
mov
dec
rcr
and
rep
mov
cmp
xor
outs
push
xchg
mul
stos
sub
push
mov
addr16
xlat
jecxz
cdq
ds
ins
mov
cwde
push
(bad)
cmc
or
push
lds
cmp
out
jp
lahf
inc
xor
loopne
jmp
jg
rcl
or
adc
and
mov
adc
ret
mov
push
mov
repnz
sub
test
das
sub
cli
rcl
and
movs
popf
sar
mov
cmp
into
mov
xchg
gs
fsub
mov
and
mov
test
pop
les
rcr
icebp
hlt
lahf
retf
xor
aaa
ins
xor
stos
sub
jno
sub
add
outs
fwait
jge
sub
or
scas
sub
pop
push
(bad)
leave
or
neg
jbe
jbe
jg
lea
(bad)
daa
gs
ss
pop
mov
pop
inc
lods
pop
fcmove
(bad)
jbe
rcr
dec
clc
out
push
sub
xchg
pop
test
or
data16
and
(bad)
outs
aas
(bad)
out
sbb
int3
push
jo
and
inc
push
cmc
pop
daa
hlt
jl
mov
aam
xlat
dec
movs
xchg
popf
pop
popf
out
(bad)
jmp
lods
call
add
sub
(bad)
fcomp
jge
movs
xlat
das
fs
loope
ds
push
ret
in
xchg
pop
adc
mov
sub
fidiv
lods
ins
out
stc
sub
or
push
inc
jmp
out
mov
gs
or
out
inc
loope
fsubr
xchg
loop
icebp
add
push
in
ds
mov
mov
push
sbb
addr16
icebp
cmps
adc
test
xchg
(bad)
xor
stos
jg
sbb
adc
xchg
pop
xchg
(bad)
mov
in
and
loope
adc
out
or
lods
sub
pusha
jb
mov
jp
rcl
stos
add
adc
cmps
mov
js
lea
hlt
sbb
ss
push
jg
jmp
and
and
adc
leave
pop
add
test
push
call
xor
icebp
add
aas
sbb
fsubr
leave
xor
or
cwde
lahf
loop
aas
sub
cmps
dec
jne
xor
call
cmp
mov
sti
sbb
xor
outs
mov
inc
adc
cmp
lock
(bad)
addr16
mov
les
xchg
cmp
neg
mov
test
dec
test
inc
inc
retf
retf
cmp
fidivr
stc
mov
es
xchg
dec
pop
in
cmp
push
pop
pop
push
push
sbb
enter
outs
call
sbb
call
inc
jae
and
xchg
adc
and
(bad)
repnz
and
lods
test
aas
inc
pop
imul
add
or
and
dec
push
xchg
inc
sub
jnp
dec
push
fist
pop
(bad)
xchg
mov
cmc
push
ins
movs
add
scas
into
sti
(bad)
mov
(bad)
fcomp
and
loope
cli
clc
cli
fwait
pop
cmp
out
inc
cmps
in
mov
cmp
jae
(bad)
enter
adc
cli
add
mov
sbb
adc
retf
pop
mov
js
adc
fisubr
ins
jl
xchg
xor
jbe
ins
lea
inc
dec
adc
lods
nop
jne
dec
and
mov
sub
sbb
jg
icebp
dec
jg
xchg
cwde
dec
or
jge
in
outs
rcr
mov
rcl
adc
push
and
cmps
dec
push
into
pop
jb
stos
jmp
(bad)
fisub
cli
inc
sbb
(bad)
in
(bad)
in
push
pop
(bad)
fucomi
sbb
loope
inc
xor
(bad)
dec
push
push
(bad)
es
push
xor
jmp
aaa
add
add
push
mov
jge
sub
mov
out
adc
push
int3
cwde
push
dec
movs
cmovbe
pusha
pop
fwait
add
xchg
lods
mov
inc
daa
(bad)
movs
js
lahf
outs
or
and
mov
mov
test
gs
fstp
mul
icebp
pop
das
sub
movs
adc
fs
cdq
call
outs
rcr
or
js
sti
sahf
sti
xchg
sbb
lea
push
test
(bad)
push
imul
adc
lock
imul
pop
leave
movs
jae
sar
jnp
push
loop
mov
push
mov
int
mov
data16
push
mov
fiadd
imul
sub
dec
ins
adc
in
fcomp
stos
mov
dec
jmp
mov
sbb
jecxz
psubsw
push
jecxz
dec
loopne
not
cdq
outs
inc
mov
inc
mov
sub
adc
inc
pop
shl
imul
and
aas
push
ins
sbb
push
mov
std
inc
sub
ret
nop
jb
out
repnz
outs
out
jne
push
popa
sub
(bad)
and
iret
in
scas
je
dec
scas
js
and
jl
sbb
idiv
and
fs
xor
inc
test
mov
hlt
ror
retf
xrelease
inc
cmp
mov
clc
push
pop
call
sbb
xchg
test
ror
mov
pop
call
mov
icebp
pop
fwait
xchg
fisttp
iret
mov
mov
xchg
(bad)
and
std
and
push
adc
pop
xchg
lods
dec
cmp
inc
pop
and
arpl
das
in
pop
jbe
and
and
push
jae
push
jecxz
(bad)
fmulp
jns
rcr
sub
dec
es
jo
fstp
leave
icebp
ror
cmp
jb
int3
and
idiv
push
imul
icebp
lds
js
push
fidiv
inc
(bad)
inc
push
or
shl
and
fldenv
repnz
loop
clc
sbb
stos
test
std
dec
or
(bad)
xlat
movs
pop
mov
hlt
push
out
neg
jp
add
ret
ds
sbb
(bad)
xchg
adc
jmp
arpl
cld
dec
mov
out
cmp
jo
nop
dec
and
arpl
dec
cmp
in
or
lea
nop
sti
xchg
sti
lods
out
repz
test
(bad)
mov
jmp
adc
cmps
outs
push
gs
mov
xchg
jmp
nop
fmul
(bad)
jg
fmul
mov
push
adc
xchg
mov
sub
rcl
sbb
add
mov
jno
call
shr
retf
and
xor
lods
cwde
and
stos
adc
mov
mov
aam
dec
push
outs
shr
mov
jmp
jbe
pop
jle
dec
ins
jl
jp
repz
ret
shl
out
adc
sub
xor
jg
(bad)
fst
xor
jge
sar
jl
sbb
lea
xchg
pop
add
sub
sbb
xor
div
das
push
sbb
mov
mov
fs
je
imul
mov
rcr
push
sub
mov
pop
push
pop
push
xor
mov
pop
aas
dec
aaa
mov
mov
add
call
add
jb
sbb
sub
or
mov
cld
es
cmp
pop
pusha
data16
xchg
ins
psubusb
push
aad
iret
jne
xchg
lods
jp
popa
std
push
and
cmp
mov
sub
jno
cmc
and
dec
mov
cmps
leave
mov
test
sbb
cmps
adc
cmp
std
ja
xor
(bad)
shl
mov
mov
push
and
push
push
or
mov
jge
int
repnz
sar
out
stos
add
sbb
inc
or
xor
ja
and
ja
pusha
outs
xor
sub
xor
test
data16
mov
lods
and
sub
xor
pop
in
repnz
or
xor
or
pop
icebp
inc
stc
call
pop
cmp
int3
ret
push
and
xor
push
fsub
and
push
dec
loope
mov
(bad)
out
retf
cs
stc
cmc
popa
mov
mov
ret
fsubr
xchg
pop
sbb
mov
lods
pop
xchg
int
neg
mov
pop
jp
test
or
lea
cmp
push
push
adc
sub
pop
cmp
arpl
stos
push
cmps
xor
out
dec
mov
rcl
fs
mov
ja
jmp
add
sub
sub
pop
fisubr
mov
cmp
push
aaa
lahf
inc
and
shl
push
push
xor
cmp
call
dec
out
push
fwait
sub
or
mov
sbb
xchg
iret
push
ficom
pop
sub
and
stos
(bad)
addr16
loopne
push
jmp
and
sub
cmp
jle
stos
mov
aam
sti
cmps
fcmovb
pop
xchg
arpl
dec
jp
cmp
movs
in
test
(bad)
out
dec
(bad)
jmp
cmp
inc
ror
and
jno
fist
jmp
dec
adc
(bad)
adc
out
or
cmc
sub
pop
clc
mov
add
jecxz
sub
in
push
cmp
rcr
ret
sub
dec
pop
mov
cmp
pop
popf
add
lods
push
jne
push
mov
out
and
ror
fcomp
or
mov
inc
repnz
adc
jmp
pop
rol
adc
xor
pop
xor
sahf
jno
adc
sub
pop
or
mov
mov
pop
shl
pop
push
cmc
push
jno
popf
mov
cs
jmp
and
jo
aad
sbb
rcr
mov
or
lock
mov
cdq
dec
lea
xchg
inc
inc
sbb
sub
pusha
jo
or
scas
retf
mov
jo
jl
add
sub
sub
pushf
cmps
jmp
ss
nop
xchg
add
popa
mov
add
adc
stos
inc
cwde
pop
mov
sbb
mov
popf
xchg
sahf
push
out
xlat
xchg
popa
cwde
in
adc
jle
fdivp
adc
aad
sub
xor
je
iret
sub
loopne
out
push
arpl
outs
sub
int3
mov
jecxz
xlat
loopne
lds
shl
xchg
ret
in
inc
mov
cmp
fcmovnbe
ins
pop
xchg
mov
loop
dec
inc
cli
inc
hlt
rcr
leave
ja
lahf
sbb
push
sub
mov
rcl
dec
out
sub
test
push
mov
cmps
xchg
in
push
sub
test
imul
retf
pushf
mov
sub
cmp
sbb
mov
pop
outs
(bad)
mov
adc
push
mov
jmp
cmps
mov
sti
xchg
fadd
repnz
sbb
lods
or
adc
out
(bad)
(bad)
gs
ucomiss
sub
xor
jno
pop
popa
add
mov
arpl
test
popf
cmps
or
cdq
dec
jae
stc
mov
add
out
mov
xor
jmp
and
sti
xchg
psllw
mov
sbb
dec
enter
or
sbb
mov
mov
(bad)
xor
ins
aam
ja
pop
and
jnp
and
pop
enter
rol
(bad)
out
jnp
push
in
inc
and
pop
xchg
and
xlat
fsub
xchg
gs
xchg
ss
mov
jecxz
out
fst
aad
nop
mov
dec
fs
xor
loopne
cmp
push
jp
xor
cmps
jb
int3
or
sbb
ret
mov
or
pushf
lea
mov
sub
icebp
push
inc
push
mov
fs
cs
shl
mov
fwait
shr
pushf
ins
ror
mov
pop
push
pop
mov
add
mov
(bad)
and
inc
mov
fstp
cmp
adc
sub
cmp
fidiv
mov
adc
mov
in
ins
pop
cmps
dec
ins
xchg
retf
mov
xchg
mov
push
int3
imul
cwde
jns
adc
mov
retf
xor
push
inc
les
and
sar
push
in
dec
mov
(bad)
sbb
shr
nop
xor
sar
mov
xor
jg
mov
jmp
dec
aad
inc
cmp
xor
jae
bound
sub
jle
stc
shl
inc
(bad)
mov
stos
rol
adc
dec
icebp
and
(bad)
sbb
cmps
mov
ins
cs
push
(bad)
lods
push
xchg
cld
cmps
add
hlt
fst
shl
(bad)
outs
add
adc
imul
sbb
mov
dec
or
fisttp
mov
or
push
push
aam
mov
cmp
xor
sbb
xor
push
scas
lahf
or
xor
sbb
push
and
jg
xchg
jl
mov
pop
push
ins
sbb
lea
xor
jecxz
mov
in
xchg
xchg
shl
mov
pop
xchg
std
test
leave
mov
pop
popa
movs
jge
fisttp
xchg
jbe
jl
or
psllw
ret
js
pushaw
adc
movs
addr16
or
mov
pop
stos
mov
div
mov
aad
(bad)
(bad)
jne
loop
cmp
jge
les
xchg
or
movs
fcom
adc
and
push
pop
not
repz
add
jbe
bound
adc
cmp
pop
xchg
out
cwde
jge
rcr
and
push
imul
leave
fdivr
outs
rcl
or
xchg
ja
jno
bound
out
jle
adc
ret
mov
out
cmps
adc
shr
sbb
mov
add
push
sar
push
jbe
adc
inc
mov
lock
arpl
adc
cmc
fdivr
push
ret
and
(bad)
gs
nop
inc
adc
loop
jae
inc
adc
or
es
pop
ror
adc
xchg
int3
mov
sbb
aad
jno
test
jns
shl
mov
push
mov
cmp
popf
cld
fbld
xor
mov
cdq
sub
fistp
adc
icebp
scas
enter
mov
inc
push
jl
xchg
adc
sub
mov
sar
cli
ins
inc
imul
push
push
pop
xlat
mov
fcmovnu
mov
cmps
ds
ror
cdq
daa
dec
and
ret
add
(bad)
mov
inc
dec
fucomp
mov
fisub
in
dec
aaa
push
add
xchg
imul
mov
pop
xlat
xor
dec
aas
lds
loope
push
adc
inc
movs
xlat
in
je
mov
pop
inc
es
cmp
sub
sar
sub
sub
fiadd
push
fwait
inc
sub
jnp
and
mov
cmp
sub
mov
mov
inc
push
fcom
push
cmp
int
les
sar
jge
push
stos
int
das
push
sub
gs
int
and
retf
mov
dec
addr16
repnz
lods
nop
sub
and
dec
arpl
outs
xadd
sbb
xor
xchg
dec
cmps
aad
lahf
hlt
int3
xchg
sub
or
push
test
add
sbb
xor
fdivr
out
adc
mov
sar
mov
test
dec
inc
es
add
xchg
mov
push
in
xchg
hlt
xchg
pop
ins
mov
lock
mov
jecxz
scas
inc
mov
data16
inc
div
jmp
pop
(bad)
jno
dec
loope
ret
mov
test
xchg
jl
dec
dec
call
mov
cdq
ret
shl
and
push
sub
mov
jno
call
nop
jge
popa
push
aam
push
retf
jecxz
sbb
and
cmp
xlat
or
sti
pop
mov
cmp
mov
adc
mov
sti
cwde
mov
rol
in
jl
or
pop
bsr
inc
push
sbb
inc
inc
nop
or
add
push
stos
mov
mov
imul
pop
xor
push
into
stos
jecxz
cli
dec
dec
ins
call
mov
ficom
add
add
out
push
popa
xchg
cmp
sub
jmp
sbb
xchg
sbb
mov
pop
in
dec
add
mov
mov
jmp
push
cmc
std
mov
jle
jae
xchg
iret
cmp
jge
(bad)
repnz
jge
add
jno
scas
out
dec
sbb
inc
dec
cmp
push
test
rcl
mov
and
int
jl
push
pop
nop
mov
mov
xchg
(bad)
push
js
fsubrp
pop
mov
bound
lods
test
fidiv
(bad)
hlt
gs
sar
pop
les
repz
iret
xchg
jl
jb
pop
ins
out
bound
and
fdivr
scas
fucomp
loop
adc
jge
xor
add
xor
cld
mov
loopne
imul
sub
cmps
adc
mov
loop
mov
push
push
retf
out
jmp
mov
test
iret
xchg
shl
jmp
xor
leave
xchg
neg
test
(bad)
sti
xchg
pop
jecxz
int
cmp
pop
adc
xchg
fcmovnb
pop
sbb
xor
xchg
inc
sub
retf
(bad)
xchg
adc
adc
jecxz
rcl
cmp
call
xor
push
ins
pop
mov
fs
cmp
test
or
ret
hlt
pop
jmp
sbb
adc
movs
xchg
sub
inc
scas
pushf
scas
adc
pop
mov
out
dec
movs
call
sahf
inc
and
fs
mov
ror
add
mov
or
pop
fwait
scas
js
xchg
arpl
test
dec
loopne
test
push
xchg
lods
popf
adc
pop
jmp
test
dec
sahf
and
add
mov
xor
arpl
pop
mov
dec
lods
mov
(bad)
jmp
jle
mov
inc
inc
call
push
push
xchg
imul
gs
je
inc
push
(bad)
push
enter
push
inc
mov
mov
repnz
pop
icebp
or
push
lods
sbb
not
add
add
div
or
test
out
adc
outs
sbb
and
cmp
mov
mov
jnp
xchg
mov
or
cmp
xchg
dec
fs
into
mov
cmp
bound
mov
popf
(bad)
cmp
and
jge
push
movs
cld
sbb
scas
aad
push
mov
ret
mov
ds
pop
in
dec
aas
sbb
leave
or
jb
imul
ins
push
adc
cmp
mov
jns
push
(bad)
retf
js
pop
jmp
mov
sub
jle
dec
sub
xor
adc
mov
mov
mov
ins
loope
push
lahf
rol
ins
or
test
xchg
xchg
shl
jno
js
cmp
push
xor
jne
out
bound
inc
rcr
aam
sbb
inc
pop
xchg
xchg
mov
mov
cld
jb
adc
scas
mov
pop
cli
les
es
cmp
cmp
shl
xlat
sub
add
fsub
ror
dec
add
xchg
es
cmp
xchg
xlat
dec
pop
inc
fisub
jo
ret
test
xor
mov
sub
fcmove
jg
pop
xchg
lock
pop
mov
dec
xchg
(bad)
add
test
test
pushf
push
lock
rcr
xlat
outs
mov
not
push
ds
aad
dec
or
jg
mov
addr16
ret
jnp
add
hlt
xor
mov
xor
sbb
enter
xchg
adc
cmps
pop
push
stos
jl
dec
(bad)
xor
push
in
pop
xchg
mul
mov
and
mov
cdq
jae
loopne
sti
cmps
(bad)
cmps
fadd
(bad)
pop
cmp
inc
cmps
lds
clc
mov
jne
mov
sub
jmp
retf
jmp
test
xchg
sti
jb
ror
int3
add
pusha
out
xor
out
sub
pop
add
or
gs
data16
adc
lock
movs
xchg
test
test
xchg
and
push
mov
ret
stos
mov
jmp
cmc
test
aaa
stc
or
test
dec
pop
or
push
mov
loope
xor
test
jb
pop
ins
test
cmp
iret
pop
mov
sub
mov
div
out
mov
call
adc
lock
sub
imul
sub
inc
sbb
inc
repz
pop
pop
jae
xchg
arpl
stos
and
adc
adc
push
cmp
dec
add
sub
test
xchg
retf
pop
hlt
xchg
in
fcmovnu
adc
mov
cmp
aaa
aas
in
pop
add
xchg
xchg
cmp
arpl
xchg
mov
jecxz
mov
pop
stos
shl
cs
mov
scas
xchg
ins
sbb
sub
imul
mov
cwde
push
push
fisubr
inc
pop
inc
mov
int
adc
lahf
or
jne
xor
clc
jnp
ret
adc
xor
push
mov
push
shr
ror
jp
test
stos
sbb
ret
cli
dec
test
jne
mov
push
mov
aas
xor
or
jge
cs
adc
or
xchg
push
sbb
scas
pop
push
push
ss
in
fimul
aas
call
add
and
das
(bad)
adc
jne
sbb
not
sbb
jl
fst
cmp
js
push
stc
sub
int3
mov
ds
mov
imul
pause
sbb
subps
jmp
in
or
arpl
ja
lea
adc
push
cmp
pushf
leave
sub
lods
mov
in
adc
mov
inc
inc
daa
popf
js
out
and
mov
cmp
xor
sbb
jge
nop
(bad)
sbb
shr
mov
cmp
out
aas
ja
loopne
gs
cvtps2pi
sub
mov
shr
cmp
cmp
(bad)
xchg
out
sbb
and
adc
cmp
dec
or
mov
xlat
out
ja
cmc
fld
pusha
test
ins
xor
(bad)
xchg
stc
mov
jnp
mov
and
scas
in
mov
shr
repz
jns
movs
in
mov
xor
and
pop
push
hlt
lods
ss
fmul
xor
dec
add
pop
adc
cmp
das
popf
fmul
push
push
sbb
add
jl
adc
push
mov
pop
pushf
cmp
fnstenv
lods
mov
mov
mov
hlt
mov
and
fisub
pop
xchg
popf
jbe
scas
inc
or
xchg
xchg
and
daa
je
cwd
add
pop
pop
das
push
mov
dec
xchg
cmp
cmc
pop
call
in
jle
movs
xchg
mov
cmp
add
repnz
jne
cmp
(bad)
in
or
(bad)
cs
shr
add
and
rol
mov
data16
cli
mov
rcl
aam
adc
js
jne
push
popf
add
fwait
bound
test
data16
cmp
sbb
inc
out
in
ror
xor
imul
fnsave
pushf
push
das
sub
repz
imul
ror
cmp
daa
push
xor
ins
jecxz
push
and
mov
cmp
icebp
shl
aas
mov
push
(bad)
adc
mov
adc
lock
dec
or
and
mov
and
cmp
jmp
mov
cmova
leave
adc
inc
pop
ds
jbe
mov
loope
fimul
dec
das
jmp
outs
sti
inc
and
out
mov
xchg
in
lahf
in
ror
mov
dec
(bad)
pop
lahf
add
pop
retf
pushf
mov
jmp
shl
cmp
pop
into
jns
es
xchg
pop
shl
scas
push
mov
dec
add
inc
adc
(bad)
cmp
mov
iret
cli
sbb
stc
cs
lea
(bad)
fst
sbb
push
add
fimul
mov
sub
fld
rcr
ror
sub
mov
(bad)
mov
ret
xchg
dec
gs
xor
or
cmps
and
xchg
aam
pop
cs
in
fld
mov
out
jns
(bad)
mov
ja
daa
(bad)
dec
std
loopne
clc
add
mov
fld
inc
sbb
aas
adc
gs
push
xchg
jb
stc
fwait
nop
out
xchg
cmp
xlat
cli
sar
xchg
xor
push
sub
inc
inc
jl
sub
fsub
dec
inc
ffree
ret
ss
std
mov
cmps
sbb
mov
xchg
shl
mov
push
loope
pusha
in
mov
pop
mov
rcl
pusha
loope
jle
mov
xchg
aam
pusha
mov
jb
dec
into
je
push
aam
pop
push
xchg
mov
mov
fmul
cmp
pop
enter
mov
inc
xchg
(bad)
and
xor
jmp
dec
cmps
in
xchg
push
or
push
pop
sti
pop
cld
fwait
and
cmps
(bad)
sbb
push
mov
test
xor
(bad)
dec
ret
sbb
rcl
dec
fiadd
pop
inc
cwde
cmp
pop
xchg
ins
scas
xchg
inc
shl
lock
sub
cmp
addr16
mov
inc
imul
shr
arpl
mov
lods
pop
mov
and
pusha
and
pop
add
mov
inc
xchg
push
dec
lods
jecxz
movs
sbb
xor
mov
push
xchg
cmps
add
in
in
cld
and
add
jmp
and
or
leave
fwait
repz
jno
inc
call
dec
sbb
add
pop
loope
adc
fsubr
inc
(bad)
fld
rol
xchg
xor
in
movs
inc
popf
mov
cmp
ret
jg
scas
dec
jne
mov
mov
and
mov
ds
(bad)
jae
dec
pop
jmp
dec
(bad)
ds
clc
add
(bad)
in
push
imul
mov
inc
pop
in
pushfw
ds
jg
mov
mov
clc
xlat
lea
sbb
mov
ins
repz
sbb
or
mov
les
add
mov
retf
mov
cli
dec
and
xchg
into
imul
pop
fstp
imul
push
push
cdq
fcom
jle
adc
jnp
or
add
xchg
test
fs
jbe
sbb
jae
scas
xor
cmc
es
jmp
(bad)
or
lds
dec
mov
jg
or
fwait
inc
sbb
sahf
mov
inc
push
jecxz
je
popa
or
xor
adc
mov
mov
xchg
aas
pop
and
mov
xchg
jb
shr
and
xchg
jmp
movs
in
and
add
jno
mov
mov
xchg
scas
fild
mov
in
pop
sub
jno
cmp
inc
shr
int
int3
xchg
call
push
sub
ret
xchg
cs
fucomi
leave
and
and
jmp
mov
jge
inc
dec
adc
mov
stc
aam
ror
das
test
cdq
sbb
mov
shl
mov
and
adc
fsub
(bad)
dec
rcl
xchg
jg
test
sbb
nop
or
mov
adc
test
aam
inc
repnz
jmp
stos
sub
movs
movs
pop
mov
push
out
xchg
test
movs
mov
push
jae
push
out
push
push
(bad)
ret
sahf
or
aad
dec
arpl
pusha
pop
sbb
push
fwait
in
jg
mov
(bad)
add
add
lods
in
push
cli
cmp
mov
cmp
stos
and
ds
daa
dec
inc
(bad)
jnp
and
test
jg
pop
int
sbb
mov
out
dec
push
scas
mov
jmp
and
aam
and
retf
inc
cmp
mov
xchg
je
xchg
sbb
dec
and
sbb
dec
mov
jg
sub
or
rcr
test
pop
mov
push
fiadd
push
imul
xor
cld
gs
mov
test
jmp
into
mov
sub
fdiv
cmp
push
add
push
xchg
or
mov
cmp
cmp
movs
mov
inc
imul
(bad)
(bad)
pop
xchg
inc
jmp
add
test
hlt
(bad)
push
in
(bad)
outs
jecxz
dec
mov
test
into
mov
adc
jae
mov
jo
sub
dec
(bad)
sar
cs
adc
sbb
xor
outs
lods
sub
gs
cs
clc
mov
into
mov
ja
pop
call
or
clc
xor
sar
fiadd
and
sub
jge
sub
pusha
dec
xchg
mov
out
not
lock
movs
jmp
cmc
add
mov
push
jne
pop
cwde
lahf
cwde
fwait
das
imul
adc
(bad)
xor
xchg
(bad)
pop
adc
xchg
sub
(bad)
fsub
in
dec
imul
or
add
arpl
push
pop
mov
mov
xor
cmc
add
sub
js
fcom
push
xchg
pop
ret
pushf
mov
dec
(bad)
mov
mov
adc
dec
mov
xchg
mov
mov
loopne
sbb
mov
pop
pushf
pop
push
ror
or
lods
sub
xchg
or
loop
push
rcr
mov
xchg
xchg
ins
popa
stc
(bad)
not
(bad)
xor
cli
ds
push
mov
jge
mov
(bad)
jno
sbb
nop
in
mov
cmps
inc
jmp
mov
pushf
call
loope
xor
test
fnstcw
jmpw
ins
adc
xchg
mov
cmps
push
adc
dec
sub
scas
pop
mov
lea
mov
sub
and
inc
dec
loopne
pushf
jns
call
scas
in
jle
xlat
dec
push
into
into
adc
cdq
push
jnp
hlt
adc
sub
jo
xchg
and
xchg
inc
adc
xor
cld
adc
test
mov
cmc
dec
mov
mov
push
loop
pop
cs
or
fisttp
jno
push
cld
es
mov
jo
(bad)
mul
dec
stos
or
mov
jle
add
mov
out
dec
push
inc
mov
icebp
ja
les
sbb
or
inc
lahf
pop
js
pop
mov
xchg
inc
iret
gs
mov
test
cmps
mov
mov
inc
pop
ss
inc
out
push
jne
cs
adc
adc
mov
mov
dec
mov
add
(bad)
mov
mov
gs
mov
xchg
push
rol
dec
xchg
jns
or
jmp
iret
mov
dec
hlt
cmc
retf
jbe
lds
retf
lock
aas
push
test
repnz
cmp
add
push
push
arpl
jmp
imul
pop
xor
dec
fisub
or
jb
fidiv
cmp
ja
in
pminub
and
push
and
jmp
jne
sub
std
jecxz
jbe
scas
mov
aad
or
pop
scas
call
sbb
inc
dec
fs
dec
loop
push
or
out
(bad)
ror
outs
ss
sti
xchg
pop
xor
retf
arpl
sbb
xor
add
daa
mov
pop
dec
xlat
addr16
jle
iret
loope
adc
sbb
cmp
lods
out
pop
push
in
and
jle
test
jo
gs
mov
mov
aaa
xchg
and
cmp
test
mov
adc
sub
push
pop
or
out
enter
mov
pop
test
cmp
sub
adc
js
aaa
lds
test
bound
sbb
xor
outs
test
out
or
mov
cmp
scas
arpl
mov
push
aam
or
push
(bad)
loopne
jecxz
xchg
int3
push
or
add
xchg
and
test
jmp
mov
(bad)
outs
sbb
ror
addr16
sub
jge
pop
mov
mov
(bad)
and
mov
xchg
sub
sub
out
jbe
int
mov
rol
cdq
mov
pop
ror
hlt
and
sub
ret
sar
hlt
(bad)
xor
and
mov
int3
jp
mov
adc
(bad)
in
xor
jmp
movs
es
enter
es
push
or
pop
cs
push
loope
and
sbb
outs
mov
jge
loopne
clc
and
mov
sbb
push
push
cmp
mov
xchg
jae
pop
in
mov
inc
out
stc
and
adc
adc
nop
mov
or
in
out
mov
sbb
loopne
ja
fs
ftst
inc
lock
ret
ret
pop
or
and
xor
cmp
mov
inc
mov
loope
xor
and
dec
cli
mov
aaa
in
add
sub
pushf
js
enter
sub
stos
inc
int
add
xor
pop
shr
lock
ret
adc
and
das
mov
jbe
push
out
gs
mov
scas
adc
imul
and
mov
shr
dec
jmp
ins
or
jl
cli
pxor
xchg
cmp
cmp
sahf
pop
inc
ins
inc
sbb
inc
push
(bad)
(bad)
lods
xchg
imul
pusha
rcl
lea
push
dec
jge
adc
adc
push
push
fadd
outs
gs
test
std
out
pusha
test
xor
das
dec
jbe
into
jge
pop
call
jg
jmp
or
sar
dec
or
mov
inc
pop
sahf
test
arpl
pop
mov
imul
shl
push
sbb
popa
sbb
push
mov
fadd
das
jmp
mov
ja
out
fdiv
sbb
add
or
ins
mov
mov
test
ror
adc
out
sub
sar
mov
mov
loop
dec
cdq
repz
xchg
push
(bad)
int
clc
inc
cmp
in
adc
jns
mov
lea
test
stos
adc
jl
sahf
sahf
fwait
xchg
xor
mov
cmp
add
in
psrld
in
movs
jbe
add
lds
call
fsubr
mov
pop
add
rcr
data16
fidiv
sub
(bad)
sti
adc
outs
arpl
ins
mov
mov
pop
enter
fst
jle
xor
jp
and
inc
xchg
pushf
fld
aam
ret
mov
sbb
mov
pop
xchg
jecxz
sub
jecxz
dec
ins
aas
mov
push
dec
inc
sbb
je
lds
ret
mov
add
or
stos
js
ret
ret
popf
int
in
and
add
cmp
mov
jae
fdivp
fwait
mov
jge
daa
adc
cmp
xchg
(bad)
addr16
fsub
push
enter
xchg
dec
cmp
shr
mov
adc
xchg
and
mov
dec
fidiv
shl
fldenv
add
pop
pop
pop
pop
fdiv
sti
mov
or
mov
enter
mov
popf
repz
sub
(bad)
lock
cmp
push
cld
jg
adc
xchg
dec
and
inc
xchg
pusha
xchg
fstp
push
lods
in
cmps
add
ret
mov
adc
xor
jns
xchg
push
ins
int
mov
fcmovnbe
xor
jmp
mov
shl
arpl
sub
nop
sti
jmp
ficomp
push
test
cmps
stos
inc
xchg
mov
cmc
rcr
bound
xchg
mov
das
outs
retf
or
test
lahf
xlat
cmp
push
sahf
enter
cli
jmp
cmp
mov
cld
int3
add
in
into
aaa
sub
jmp
xor
adc
or
and
cs
dec
add
cld
lods
mov
sub
xchg
jnp
out
stos
int
dec
xchg
push
push
test
or
out
mov
inc
jp
lods
pushf
or
xor
sub
or
or
pop
mov
out
mov
daa
pop
rcr
jmp
pop
jbe
pusha
mov
sbb
fucomip
fld
mov
jb
aad
jmp
mov
mov
sti
test
sub
cli
adc
in
cmp
out
stc
adc
mov
lock
mov
retf
mov
ja
rcl
adc
cmc
out
push
ror
cmp
push
in
sbb
ss
push
push
imul
xchg
or
jl
outs
mov
lods
fisttp
and
and
fnstenv
sbb
pusha
add
xlat
xchg
ret
xchg
aaa
jae
stos
sub
vprotq
or
mov
cmc
sub
inc
arpl
pop
sbb
out
ror
jnp
push
mov
ja
inc
in
arpl
add
cmp
fdivr
js
ss
mov
lods
adc
mov
(bad)
or
adc
jne
mov
fwait
stos
loop
retf
fsubrp
xchg
pop
cwde
scas
pushf
sub
push
xor
int3
or
mov
mov
fwait
(bad)
push
mov
fist
mov
jp
pusha
lock
test
xor
pushf
jns
pop
xchg
push
jmp
stc
cmp
adc
jle
mov
adc
xchg
jp
sub
dec
sub
mov
call
outs
outs
loope
out
dec
in
mov
xor
add
test
or
das
mov
add
cli
lds
jbe
add
cmp
data16
inc
xchg
add
popf
aad
cld
xor
mov
push
sub
add
fwait
xor
add
jno
sahf
dec
(bad)
mov
sub
or
push
add
fcom
jbe
xchg
jne
movs
cmc
aam
jb
or
scas
nop
jns
aad
es
data16
push
push
cld
or
in
aaa
jno
ins
jns
inc
fst
lock
call
adc
and
mov
inc
js
mov
xchg
fdivp
jae
sbb
adc
mov
ja
stos
jmp
sub
call
xchg
lds
inc
pop
outs
repnz
stos
daa
jl
or
lock
jnp
ror
sbb
or
imul
aad
into
cmp
or
in
sub
xchg
xchg
mov
arpl
jp
jl
js
or
jmp
and
arpl
popa
aad
pop
clc
dec
pop
sub
xchg
adc
sub
(bad)
sbb
in
pcmpgtw
test
nop
jns
rcl
sahf
pop
lods
mov
xchg
push
pusha
and
or
dec
shl
mov
int
les
movs
jmp
sbb
jle
not
adc
sahf
jge
fwait
add
scas
add
xchg
stos
jnp
test
in
mov
push
sbb
push
out
cmovns
mov
ds
jne
fmul
push
(bad)
dec
cli
jge
xor
lods
xchg
data16
add
lods
inc
xchg
(bad)
cld
jmp
mov
jnp
and
repz
jmp
stos
inc
pop
push
mov
hlt
sbb
push
getsec
(bad)
fdiv
addr16
outs
movs
xchg
stc
aaa
mov
push
aad
sbb
cs
and
(bad)
cld
sar
lock
lock
shl
sub
shr
push
je
mov
inc
rcr
sub
pop
(bad)
test
dec
jne
retf
push
jno
es
call
inc
mov
or
jmp
inc
or
js
dec
inc
pop
addr16
cmps
adc
ret
jecxz
xor
daa
lahf
xor
or
out
loop
push
or
adc
je
inc
push
sbb
pusha
js
aaa
dec
fiadd
mov
pop
iret
cmp
shl
mov
mov
mov
cwde
ror
call
add
fild
xchg
ffreep
inc
sbb
pushf
dec
sbb
out
sbb
xchg
jmp
cld
cmp
gs
sahf
dec
xor
int
jmp
popf
cmp
pusha
pop
or
sahf
mov
sbb
cdq
jmp
ins
cmp
gs
add
xchg
stos
inc
cmp
out
push
xor
cli
cmp
lss
xchg
ror
data16
add
test
hlt
ret
mov
inc
xchg
pop
sub
cmp
mov
mov
aaa
cmp
outs
mov
or
inc
mov
push
mov
push
jb
icebp
rcr
movs
mov
inc
dec
stc
in
(bad)
movs
inc
dec
cdq
adc
xchg
jge
add
nop
cmp
jb
js
lods
xchg
lahf
test
add
repz
mov
xor
outs
fadd
pusha
inc
je
movs
inc
bswap
mov
jmp
je
pop
jmp
(bad)
stos
inc
fmul
cmp
mov
fwait
cmp
push
jo
pop
movs
pop
mov
loop
cs
dec
pop
mov
cs
movs
daa
retf
mov
adc
pop
ret
add
sahf
ds
pop
(bad)
scas
adc
xor
sub
inc
pop
xor
setl
inc
push
dec
inc
pop
pushf
sbb
and
stos
movs
jecxz
popf
push
xchg
fcomp
push
mov
stc
sbb
cld
cmp
sub
cmp
outs
adc
inc
ds
push
sub
mov
sbb
jno
xlat
jbe
mov
push
repz
aam
test
xchg
(bad)
fsub
mov
fsub
mov
cmp
out
cdq
loopne
cmps
cmp
cli
fwait
lods
sahf
adc
sahf
dec
add
inc
mov
push
fwait
and
(bad)
sti
mov
pop
xlat
cmp
xchg
hlt
test
jns
jb
adc
test
in
or
cmps
out
xchg
pop
and
sub
scas
jmp
xor
or
scas
in
clc
pop
xchg
mov
hlt
jge
add
cld
imul
mov
add
sub
cmps
ins
xor
adc
push
mov
add
daa
xor
loope
out
cmp
jl
lods
call
or
mov
out
test
ja
out
inc
pop
(bad)
dec
mov
sub
xor
movs
mov
ins
jmp
or
xor
jl
scas
out
f2xm1
push
shl
pop
push
mov
xor
pop
in
ret
cmp
pop
sbb
adc
pop
dec
push
push
and
mov
pop
fwait
adc
push
addr16
and
mov
js
mov
(bad)
cld
repnz
adc
hlt
adc
jnp
fild
jbe
sbb
cmp
rcr
lods
pop
cdq
dec
cs
ror
jno
mov
sbb
loop
rol
dec
clc
test
mov
(bad)
out
adc
xor
inc
mov
jbe
add
fst
inc
dec
push
cmc
ins
js
inc
sub
dec
sbb
ss
enter
fisub
lock
(bad)
out
(bad)
data16
pusha
and
or
in
lahf
in
dec
dec
ret
mov
xor
dec
cdq
pop
loop
jecxz
sbb
jne
dec
jnp
ficom
outs
mov
pop
(bad)
fsubr
fistp
and
out
(bad)
out
imul
mov
inc
fistp
out
sub
lock
aas
popa
dec
and
out
xchg
das
test
test
xchg
jb
cdq
xchg
cmp
ret
mov
in
pop
xchg
mov
pop
push
add
sbb
out
inc
mov
add
xchg
pop
sahf
push
add
mov
popf
fs
pop
adc
movs
scas
fisttp
pop
jbe
pop
mov
mov
sub
mov
fwait
jmp
aas
adc
daa
push
xchg
sbb
sahf
rcl
push
ficom
sub
or
das
inc
dec
jmp
push
dec
enter
shl
leave
icebp
add
out
aam
rcr
fadd
adc
push
push
mov
lods
cmp
ja
scas
in
cwde
xchg
or
adc
mov
inc
jns
mov
xchg
das
dec
or
stc
shl
jecxz
repz
xchg
and
or
sbb
imul
neg
pop
jb
push
sar
loope
test
mov
xchg
js
mov
or
into
mov
sbb
xchg
lods
adc
inc
icebp
inc
ficomp
lds
aad
or
mov
cli
xor
es
mov
je
fnstcw
push
xor
jecxz
add
fwait
jb
and
fwait
jo
xchg
or
xchg
and
mov
(bad)
cmp
or
mov
add
push
cmps
sub
and
out
xchg
mov
xlat
test
hlt
or
mov
scas
fld
inc
cmps
pop
dec
xchg
jmp
mov
cdq
rol
xchg
cmp
fst
lock
lea
jle
jmp
and
leave
mov
or
pop
jle
sub
push
enter
sahf
xor
or
sbb
mov
pop
std
fild
in
cmp
cdq
push
loopne
retf
pusha
dec
scas
daa
mov
std
push
in
push
jne
xchg
cmp
shr
jno
enter
jle
xchg
fwait
sahf
mov
jp
push
and
aas
xchg
(bad)
or
or
mov
retf
jae
dec
add
jnp
sbb
fs
aam
(bad)
fcom
fcomp
outs
add
mov
xchg
or
mov
xchg
push
mov
mov
xor
mov
hlt
cmp
xchg
adc
les
hlt
ret
mov
xchg
xor
push
adc
or
mov
cmp
xor
mov
(bad)
stc
or
pop
mov
mov
enter
rcr
imul
jmp
push
not
xchg
sti
les
retf
test
sub
push
shl
inc
jge
lods
aas
mov
mov
int
cmp
popf
push
jp
fucom
repz
retf
and
stos
(bad)
pop
cmp
cmp
sub
inc
jo
sahf
mov
shl
cs
and
cwde
shl
(bad)
in
(bad)
or
movd
and
sub
int
mov
adc
pop
adc
dec
xchg
mov
mov
je
push
push
mov
inc
adc
pop
cld
retf
js
hlt
jno
scas
cmove
jge
cmp
ins
xor
aam
add
fidiv
pop
cmps
xchg
push
(bad)
scas
push
sub
push
adc
add
mov
jmp
cmp
push
iret
(bad)
or
cmp
cmps
or
sub
or
xor
push
outs
mul
pop
sub
sti
test
in
push
lahf
cmps
daa
stos
dec
xchg
mov
retf
(bad)
xchg
mov
mov
das
xor
das
jp
setns
jg
mov
aas
stos
add
xchg
(bad)
(bad)
push
sbb
pop
out
xchg
ins
dec
bound
stos
sbb
fadd
int3
push
jge
inc
mov
sub
int
pop
mov
paddusb
pushf
ins
or
push
popa
push
sar
xor
add
push
fcomp
cld
push
sar
call
loopne
pusha
repnz
xor
test
inc
iret
push
push
or
(bad)
scas
sbb
pop
test
fst
sub
mov
mov
xchg
push
pop
add
inc
icebp
inc
and
jge
mov
adc
sub
xor
cmp
lods
jecxz
mov
ja
inc
daa
rcl
cs
(bad)
pop
in
fwait
stos
int
in
push
mov
fist
pop
test
sbb
push
xor
inc
cmps
cmp
xor
fs
xchg
in
movs
mov
push
(bad)
out
in
fsubr
repz
push
jns
mov
mov
adc
ret
mov
mov
pop
jno
sub
xchg
cdq
sub
jmp
adc
cmp
jbe
ins
cmp
dec
cdq
cdq
inc
sahf
pop
pop
xor
fidiv
sub
inc
mov
jno
mov
dec
add
push
lods
add
stos
repnz
ror
fwait
mov
mov
xchg
aaa
jno
ins
xlat
out
pop
adc
or
cdq
or
jno
fisubr
data16
and
xchg
add
or
aam
shl
arpl
adc
movs
xor
iret
test
leave
jl
fsub
addr16
dec
jns
ins
ret
xor
iret
jne
fxch
loop
(bad)
mov
out
inc
in
jecxz
lds
dec
or
inc
test
pusha
icebp
mov
aas
xor
mov
std
(bad)
cmc
push
xlat
or
idiv
pusha
dec
mov
dec
sbb
ret
xor
pop
mov
call
xchg
xor
daa
mov
mov
jae
push
aam
std
jecxz
(bad)
pop
sbb
stos
addr16
(bad)
xchg
xor
and
popf
cmc
(bad)
jecxz
push
xchg
push
dec
sbb
in
aad
sub
sub
dec
dec
inc
jge
test
xchg
mov
sbb
cmp
lods
pop
cmp
sti
mov
mov
cdq
fwait
je
xor
mov
sbb
mov
psubusb
xchg
and
mov
idiv
(bad)
push
shl
push
xchg
(bad)
jmp
dec
pop
or
jg
ret
dec
not
push
add
xor
dec
jno
sbb
les
mov
test
push
jle
xchg
sbb
push
and
push
mov
call
jne
xor
sti
jle
daa
pop
jno
ds
inc
pop
add
inc
sub
push
int
mov
push
jno
mov
mov
jl
dec
loop
cwde
or
cs
push
sahf
shl
xor
lock
push
pop
mov
data16
mov
fmul
dec
out
stos
mov
pop
ds
jmp
inc
int3
push
hlt
pop
mov
inc
cwde
pop
fcomp
cdq
bound
aam
xor
cs
hlt
mov
(bad)
loop
int
push
xchg
dec
sub
stos
sub
sub
ss
nop
cmp
retf
jge
mov
mov
imul
test
cmp
leave
aaa
outs
xchg
gs
pop
out
and
shl
cdq
mov
cmp
shr
shl
dec
ret
cmp
xor
pop
repnz
inc
mov
ss
sti
enter
(bad)
mov
cmps
mov
lods
inc
leave
loopne
sub
mov
leave
and
mov
fsubrp
jo
stos
push
or
jl
push
lahf
(bad)
cmp
jg
jle
cld
sub
jmp
push
adc
pop
mov
jne
push
mov
loopne
shr
leave
nop
pop
mov
cmp
int
xchg
data16
daa
mov
push
mov
imul
push
sar
mov
mov
stos
out
out
retf
sbb
inc
mov
hlt
adc
push
xchg
jmp
adc
ret
inc
(bad)
fimul
ins
data16
and
aam
icebp
into
pop
xchg
mov
pop
push
sbb
and
pusha
and
sub
adc
push
in
movs
ins
pop
ins
daa
movs
push
test
int
xchg
icebp
and
repz
loopne
add
dec
ror
fild
push
fisttp
std
xor
int3
popa
or
loopne
mov
add
pop
popa
fldcw
shl
add
cmc
test
inc
movs
rcl
adc
xor
pop
mov
adc
(bad)
jno
cmp
push
pusha
lahf
cmp
mov
mov
jge
cmp
call
xchg
ja
mov
daa
xor
push
mov
mov
repz
pop
jae
sbb
add
scas
pop
aam
pop
ss
mov
idiv
add
sub
xchg
ror
push
mov
jno
loope
fwait
cmc
ja
mov
xor
push
sbb
mov
cmp
push
es
and
xlat
hlt
imul
sbb
push
jle
cmp
inc
dec
xchg
sti
adc
loopne
mov
sbb
sub
fisttp
add
into
mov
cmps
sub
and
es
aas
cld
add
dec
or
int3
xchg
call
pop
cs
and
std
mov
mov
loopne
cdq
pop
ins
jle
aaa
fucomp
push
jg
mov
sbb
and
xchg
pop
jbe
xlat
cld
into
outs
jg
dec
in
push
ret
xchg
retf
(bad)
in
retf
adc
add
out
outs
xor
mov
inc
mov
retf
shl
(bad)
pop
ins
in
push
cmp
push
push
(bad)
sbb
xchg
repnz
jmp
inc
push
push
mov
jno
lds
idiv
call
sahf
add
jno
mov
inc
xchg
mov
inc
popa
push
int3
leave
jle
jle
pushf
cmps
leave
sbb
popf
xchg
sbb
and
imul
push
stos
and
push
loope
imul
fwait
pop
aas
jle
ins
adc
ret
ss
cmp
jl
push
push
(bad)
jmp
je
shl
outs
xchg
inc
cdq
(bad)
xor
cmp
mov
mov
(bad)
leave
loope
mov
rcr
div
jns
imul
jl
fld
scas
xor
sbb
xchg
aas
clc
idiv
(bad)
call
or
cs
call
movs
leave
push
retf
mov
sahf
add
rcl
push
aad
fisttp
imul
out
or
xchg
jmp
fdiv
cmps
dec
aad
pusha
fcmovb
jmp
inc
fs
fcmovnu
imul
ret
imul
mov
push
or
jne
jge
daa
enter
and
cmp
xchg
mov
call
stos
cmp
icebp
xor
dec
mov
loopne
cmp
cmp
repnz
gs
xor
jb
pushf
(bad)
into
add
scas
mov
ds
dec
and
add
or
pop
repz
fcom
test
mov
sub
loop
or
cwde
push
jg
(bad)
cmp
outs
call
ds
lods
add
mov
xchg
das
pop
or
cwde
cs
or
inc
jb
push
shr
jo
scas
dec
jp
push
ss
shl
dec
pop
add
xchg
mov
addr16
scas
push
mov
into
into
dec
mov
mov
mov
push
mov
push
cmps
test
push
retf
fsubr
cdq
inc
cli
fwait
jecxz
out
mov
mov
int
push
add
data16
push
out
enter
inc
jle
lods
clc
in
std
xchg
inc
scas
call
and
sti
sub
jg
pop
mov
xor
cmp
cmp
jl
fcom
shr
jl
push
cmp
ret
push
jecxz
and
adc
add
enter
(bad)
mov
out
pop
dec
retf
lods
(bad)
sub
rcl
cmp
sbb
mov
repz
jbe
push
cmp
xchg
mov
mov
add
mov
add
gs
push
inc
cmps
xchg
ret
ja
cmps
loop
loopne
sub
(bad)
mov
outs
pop
mov
retf
imul
out
jg
mov
dec
lods
pop
aam
call
lds
nop
add
mov
ret
xor
mov
mov
test
test
push
int3
dec
xchg
loope
shl
mov
scas
mov
jp
stos
in
xchg
jae
enter
ja
fdivr
lahf
stos
cmp
pusha
popa
rol
cs
hlt
les
cdq
mov
jbe
aaa
(bad)
aas
sbb
lock
xchg
cmp
jl
xchg
scas
jle
inc
mov
call
jl
cmc
push
jnp
push
xchg
mov
inc
ja
retf
out
addr16
jmp
and
clc
jp
lods
iret
outs
fstp
sar
mov
cmc
add
out
stos
push
fldenv
and
mov
das
fistp
lahf
fcmovnu
ds
jns
jno
pushf
jnp
adc
cli
mov
pop
mov
dec
mov
ret
cwde
(bad)
sbb
adc
jns
test
and
add
ins
push
dec
test
mov
dec
aad
pushf
jne
(bad)
aam
les
inc
sub
mov
enter
mov
js
fsub
xchg
push
push
lock
jb
push
xor
mov
test
(bad)
out
or
std
cmp
mov
mov
(bad)
fs
clc
push
fcomp
xchg
mov
jle
rcr
inc
cmp
push
add
loop
gs
outs
mov
sub
or
jge
sub
mov
loop
imul
daa
hlt
cmp
cmps
add
dec
lds
mov
daa
fbld
lods
popf
pop
js
and
hlt
dec
dec
ds
mov
adc
mov
sub
cmps
leave
xchg
xlat
dec
es
in
lds
xor
cwde
xchg
mov
neg
adc
gs
cmc
adc
cli
cdq
xchg
push
push
retf
adc
ret
lahf
xchg
sub
cmps
inc
xchg
mov
ds
sub
xor
dec
mov
xor
cmp
or
or
and
fdivr
outs
(bad)
call
push
out
dec
stc
jae
and
mov
aas
cld
mov
retf
fidivr
dec
push
dec
hlt
sub
pop
cmp
out
mov
scas
jb
movs
cmp
gs
cmp
add
or
mov
call
inc
xchg
cmp
cwde
xor
push
cli
mov
jae
mov
cli
add
mov
sbb
in
vsubps
(bad)
addr16
xchg
sbb
int3
xlat
das
dec
out
mov
xchg
pop
test
cvtps2pi
pop
mov
xor
loope
pushf
sbb
pop
int
dec
or
jp
jno
lock
pop
and
xchg
ret
test
out
mov
sub
push
test
xlat
sahf
cwde
mov
cmp
inc
call
cmp
add
(bad)
in
xchg
or
sub
and
lds
and
ret
std
mov
aas
cmps
add
aam
lock
xor
xor
jne
push
sbb
popa
xchg
jne
jb
or
fdivr
xor
mov
inc
xor
sub
xchg
pop
mov
sahf
mov
adc
cmc
xchg
sbb
mov
ret
xchg
pop
jmp
jecxz
data16
jne
mov
or
jle
dec
cld
test
add
in
movs
daa
pop
inc
xor
add
movs
jbe
mov
xchg
sub
sub
xchg
mov
mov
jns
cs
lods
mov
sahf
adc
cli
jmp
cmp
ror
dec
in
pop
adc
add
bnd
das
out
fistp
ss
mov
ds
pop
and
or
push
sub
pop
outs
xchg
daa
pop
xlat
cmc
cs
scas
ror
clc
ins
cli
scas
cmovnp
mov
loop
sub
adc
ss
(bad)
and
(bad)
mov
cmp
outs
ja
js
mov
mov
mov
(bad)
mov
scas
mov
adc
(bad)
add
lahf
xor
push
pusha
mov
in
add
jb
out
in
add
sbb
sub
dec
xor
cmp
sbb
or
dec
and
inc
xor
fisubr
push
xchg
lahf
dec
loopne
cmp
adc
lea
test
repnz
sub
lar
mov
(bad)
enter
mov
inc
cmp
pop
cmp
in
sub
outs
mov
jb
in
pop
push
sti
mov
int
in
ins
and
cmp
jae
mov
stc
mov
loopne
sub
ja
shl
xor
outs
or
mov
mov
add
mov
xor
mov
jbe
xchg
std
xchg
ret
sub
icebp
mov
push
and
dec
movs
mov
pop
cmp
adc
xor
ror
aas
fsub
gs
shl
mov
push
lock
dec
les
jp
cmp
mov
mov
fld
adc
dec
cmps
ss
out
mov
pop
pop
xchg
inc
in
repz
ror
cmps
fldln2
mov
(bad)
jo
add
call
rcr
xor
ffree
gs
push
xchg
mov
out
or
iret
mov
mov
mov
or
js
jge
and
test
mov
mov
clc
mov
test
shl
lods
inc
jne
gs
xor
rcl
ss
sbb
lods
pop
add
inc
or
js
add
and
and
pop
dec
cs
lea
sub
cmp
bound
cmp
jmp
jp
add
loope
scas
les
pushf
sub
inc
pop
pushf
pop
(bad)
out
lea
or
mov
int
dec
or
shr
scas
sbb
lahf
inc
pop
and
cmp
aas
and
fistp
retf
inc
out
sub
add
cmp
push
sar
push
popa
fiadd
cmps
or
rol
xor
push
out
inc
mov
(bad)
mov
sbb
rcr
fs
jp
mov
add
imul
sti
mov
mov
add
cmps
test
scas
mov
cmp
arpl
fiadd
fmul
jge
rol
adc
adc
in
lahf
sub
xlat
jb
jnp
or
mov
popf
scas
retf
into
cld
jg
mov
mov
cmp
jnp
(bad)
mov
loopne
pop
xchg
lds
sub
loopne
test
push
aaa
arpl
or
(bad)
rcr
fisttp
fisubr
in
hlt
xchg
cmp
fld
js
xor
adc
jg
sbb
xchg
adc
int3
out
or
retf
push
cmp
test
loopne
jge
cdq
mov
ret
add
inc
cwde
and
or
mov
jle
mov
pop
cmps
mov
xchg
in
xchg
shr
jnp
mov
and
ins
xchg
or
push
jae
repnz
cld
pop
std
cmps
mov
xor
mov
arpl
lods
xor
xor
jnp
int3
or
pop
sub
(bad)
sbb
popf
push
aam
mov
cmp
mul
xchg
mov
test
jne
fdiv
sbb
retf
lock
leave
push
push
mov
retf
jge
sbb
fist
loop
lahf
fmul
cmp
sub
add
loope
dec
ins
rol
jmp
clc
fsub
sahf
inc
cmp
xor
push
add
xchg
add
imul
jae
loopne
dec
loop
dec
addr16
dec
sbb
jmp
push
fcom
xchg
dec
jp
cdq
pop
inc
int
in
pop
xor
stos
pop
dec
xor
stos
mul
dec
fwait
xchg
or
repz
in
mov
mov
add
lahf
xlat
mov
xchg
and
lock
movs
mov
and
out
xchg
daa
add
xchg
out
xchg
outs
xchg
aas
icebp
(bad)
daa
mul
ds
test
lods
fnstsw
mov
push
mov
pop
retf
xchg
outs
adc
ins
xor
ret
xchg
push
adc
aam
fmul
xor
into
and
mov
sub
adc
or
jmp
pop
frstor
aas
(bad)
mov
(bad)
dec
xor
addr16
dec
outs
fild
xchg
cmps
mov
or
adc
mov
mov
jle
pop
mov
inc
mov
call
mov
mov
es
xor
rcr
shl
jmp
mov
das
mov
iret
(bad)
fistp
push
rcl
push
add
inc
scas
out
mov
sbb
popa
aaa
cld
or
push
or
pop
or
(bad)
sahf
(bad)
push
jbe
sub
clc
mov
jge
jge
cmp
xchg
fucomi
jmp
xor
fst
scas
int
jns
repz
pop
mov
sbb
jne
xlat
outs
lea
pop
sub
cld
jo
mov
imul
push
pop
mov
lods
add
imul
fidiv
pop
mov
shl
arpl
jb
enter
mov
(bad)
movs
stc
in
lock
push
(bad)
fadd
add
(bad)
dec
add
shl
mov
leave
cli
and
loope
fwait
imul
fsubr
sar
mov
stos
or
ret
retf
pushfw
jecxz
in
fwait
(bad)
fadd
fistp
popf
sbb
push
jp
pop
outs
les
sbb
fs
pushf
ins
test
mov
cli
ror
xor
fisttp
or
loope
cli
cmp
loope
push
popa
push
xor
movs
push
pop
mov
push
sbb
mov
push
out
pop
stc
adc
js
ret
adc
mov
push
ja
xor
aas
movs
das
imul
push
imul
lods
(bad)
sbb
mov
fwait
aas
popf
jmp
xchg
push
xchg
adc
jb
(bad)
cmp
hlt
outs
rcr
pop
repnz
mov
ss
movs
sbb
pop
sbb
retf
jnp
fsubrp
push
outs
pushf
cmp
mov
mov
xlat
lds
push
shl
adc
outs
sbb
mov
jo
(bad)
push
jae
adc
adc
addr16
jmp
sub
sub
sub
add
fnstsw
aaa
inc
out
not
enter
ret
nop
xchg
cdq
ins
xchg
icebp
sbb
fld
loop
push
dec
repnz
lods
outs
push
mov
cld
inc
mov
imul
(bad)
fmul
popf
aaa
lds
push
mov
pop
and
or
add
cdq
pop
mov
push
inc
mov
sub
push
inc
out
mov
push
jmp
push
retf
inc
jne
or
push
fbstp
jl
or
mov
cmp
mov
and
fnsave
leave
stos
lahf
(bad)
in
jmp
cmps
test
fst
fcomp
into
inc
xchg
fmul
test
push
mov
pushf
push
stc
test
xchg
call
push
leave
repnz
pop
and
xchg
dec
jg
dec
stc
pop
pop
out
stos
test
xchg
push
int3
mov
or
pop
xlat
std
pop
test
imul
ja
ss
dec
mov
retf
arpl
pop
jb
mov
and
push
imul
sbb
ret
mov
sbb
adc
outs
jge
sbb
or
push
out
fisttp
sbb
shl
jne
sbb
dec
sahf
push
push
push
xchg
int
mov
inc
xchg
bound
sub
jns
mov
sub
cwde
and
daa
mov
and
imul
and
adc
mov
cmp
jbe
aas
lods
lahf
jae
outs
mov
pop
mov
sub
mov
jo
push
inc
mov
lds
add
fwait
cmp
in
dec
inc
arpl
sbb
jb
neg
stos
mov
push
mov
(bad)
gs
mov
jo
push
scas
out
push
clc
movs
shr
mov
fwait
test
cmps
aaa
cmp
mov
bound
xchg
xchg
pop
sub
mov
jae
or
inc
mov
cli
mov
jle
pop
sub
cld
xchg
std
pop
pop
sbb
sbb
iret
mov
sub
mov
fsubr
in
je
mov
sbb
out
cmp
outs
xchg
(bad)
popa
fwait
sbb
add
arpl
adc
push
in
std
and
movs
movs
and
mov
lods
cld
xor
arpl
and
out
sahf
xchg
push
stc
cmp
js
mov
mov
adc
xchg
int
add
sar
mov
ret
jmp
jecxz
or
dec
es
push
mov
jnp
xchg
int
cmps
adc
inc
shl
repz
fwait
mov
add
inc
adc
pop
js
fs
push
mov
pop
fist
repz
or
daa
fnstenv
sbb
mov
mov
add
adc
fidiv
je
sahf
inc
enter
push
mov
jle
mov
fisub
div
push
enter
ret
popa
imul
out
pushf
cmp
mov
and
pop
dec
(bad)
je
call
test
int
mov
loopne
xor
adc
pop
fisubr
aas
mov
out
lds
inc
push
mov
outs
(bad)
pop
jns
loop
or
in
inc
adc
aad
lock
call
dec
push
xchg
mov
cmp
xchg
pop
fisub
add
pop
pop
sub
sbb
ret
jmp
mov
es
mov
mov
jle
stos
jecxz
push
xor
xchg
(bad)
jmp
adc
and
sbb
mov
rcr
popf
mov
xor
inc
in
and
ret
cs
cwde
and
jnp
lea
or
mov
cmp
enter
xor
push
retf
pushw
cs
or
push
mov
push
push
xchg
test
dec
and
stc
or
jecxz
push
sub
fwait
mov
sbb
cmps
scas
aad
mov
rcl
adc
sub
mov
xor
in
scas
and
fcmove
int
xchg
mov
ss
sbb
push
aam
mov
xchg
int3
xchg
(bad)
test
mov
dec
test
stos
jmp
mov
loop
push
aad
scas
das
retf
dec
test
mov
add
scas
jecxz
dec
mov
lock
sahf
mov
adc
dec
xchg
xchg
and
in
mov
pop
dec
cmp
popf
test
xchg
pop
rol
ins
iret
in
pop
sub
xchg
pop
mov
movs
sahf
push
mov
lock
add
je
sub
fistp
sbb
mov
cmp
jae
pop
adc
push
xor
in
adc
movs
test
ins
jge
xchg
pop
icebp
sub
aam
sub
adc
daa
inc
daa
shl
dec
sbb
iret
push
rdtsc
pop
dec
dec
adc
pop
mov
gs
js
and
fdivr
add
in
cmp
mov
call
test
fst
pop
or
out
and
lods
hlt
pop
dec
shl
call
ss
or
mov
test
aas
loop
mov
ins
mov
dec
fcmove
loopne
jg
push
loop
test
mov
jbe
inc
or
fwait
dec
rol
jns
fcom
or
nop
repnz
add
and
into
ret
dec
add
push
xchg
or
push
repnz
mov
xchg
or
adc
stc
inc
dec
or
cmp
xor
jnp
(bad)
call
pusha
movs
push
pop
dec
sbb
sbb
push
loop
push
sbb
aam
xor
jmp
out
test
jno
mov
(bad)
xor
and
mov
lods
xor
inc
mov
retf
pop
fsub
ret
mov
inc
mov
jne
add
inc
dec
xor
add
mov
xchg
test
mov
loopne
out
(bad)
fidiv
fwait
cmp
lds
pushf
sub
xchg
jge
sub
push
mov
sbb
mov
jns
out
jmp
leave
bound
jns
js
outs
cmc
lea
daa
leave
mov
adc
dec
xor
cmp
jmp
call
movs
cmps
fisubr
mov
mov
xchg
push
adc
sbb
adc
stos
sbb
lods
cmps
inc
js
xor
std
icebp
scas
sahf
nop
shr
fwait
pushf
movs
sub
in
lds
sub
mov
xor
lods
adc
clc
scas
push
pop
mov
or
pushf
icebp
and
xor
gs
adc
jg
call
out
pop
sahf
sbb
ret
lea
inc
mov
or
shl
mov
mov
test
adc
shr
jne
repz
fidivr
and
loop
dec
cmp
scas
cmps
or
xor
dec
inc
ss
movs
ins
mov
sub
jnp
mov
adc
jge
shl
and
adc
inc
addr16
aad
dec
lods
or
scas
cmp
stos
data16
pop
icebp
cmp
cmc
adc
inc
fist
and
add
dec
ror
xchg
pushf
stc
pop
sbb
push
retf
inc
jecxz
outs
xor
lods
dec
inc
or
xchg
cmps
mov
pushf
in
or
mov
sub
repnz
mov
cmp
pop
add
sbb
iret
sub
push
fsubr
pushf
adc
lods
leave
inc
mov
test
das
mov
push
mov
(bad)
movs
xchg
in
dec
mov
push
das
add
mov
mov
sahf
xchg
mov
cli
sbb
imul
xchg
movs
cmp
or
dec
pop
js
ds
lds
sub
and
push
xchg
in
ret
fcom
repz
push
(bad)
dec
cmp
fdivr
xchg
cwde
push
push
jno
in
shl
mov
rcl
rcr
ins
fwait
out
and
leave
fcomp
outs
rcl
in
xlat
inc
or
and
pop
aaa
sub
jmp
push
or
out
jmp
inc
cmp
cmp
fisttp
add
int
ja
jecxz
sub
sbb
stos
mov
ret
(bad)
mov
addr16
test
xchg
mov
sahf
(bad)
out
retf
adc
push
dec
push
out
fisttp
mov
sbb
leave
xor
push
jmp
inc
(bad)
sbb
retf
cmp
es
int
dec
mov
pop
test
nop
push
push
enter
pop
mov
xor
loope
and
cmp
imul
xchg
outs
outs
aad
or
pop
cmp
sub
dec
pop
(bad)
adc
and
or
push
gs
test
push
pushf
inc
popa
loopne
pusha
cmps
or
or
push
mov
mov
xchg
mov
sbb
out
jne
mov
cmp
mov
or
addr16
fisubr
jle
push
push
inc
hlt
imul
fst
cmc
mov
jo
shl
xor
gs
xchg
inc
ds
mov
sti
lods
sbb
xlat
aaa
push
sub
pop
pop
push
jle
or
mov
scas
or
adc
inc
out
xor
dec
or
pop
jae
pop
mov
repz
sahf
mov
adc
push
popf
mov
test
cmp
int
ja
shr
lahf
mov
ficomp
add
inc
dec
xor
jecxz
mov
push
push
pop
(bad)
pop
inc
or
mov
lea
xor
xor
imul
outs
jecxz
ins
dec
inc
mov
and
or
jne
lahf
cmp
outs
cmp
xchg
inc
lea
cmp
mov
mov
xor
xor
imul
pop
adc
cmp
popf
jae
test
in
retf
sbb
mov
repz
ret
jo
cdq
jp
retf
push
repnz
sub
push
xchg
in
pop
(bad)
test
xor
pop
sbb
mov
imul
jnp
jmp
mov
add
or
mov
cmps
adc
or
aas
xor
sbb
xlat
fst
pop
push
popa
adc
sub
lock
call
dec
sub
push
lods
(bad)
hlt
mov
into
pop
pop
fsub
rcl
lock
mov
nop
shl
push
push
xchg
jno
int3
inc
sbb
ds
mov
in
lock
cmp
fld
mov
mov
out
inc
and
lock
xor
xchg
ret
in
sub
jecxz
stos
stos
add
lahf
ins
ins
mov
or
(bad)
adc
ficomp
push
mov
sub
in
xchg
and
adc
xchg
retf
push
sbb
mov
push
jg
pop
loope
xor
cmovs
test
mov
sub
ret
jmp
add
mov
mov
jb
(bad)
(bad)
xchg
push
dec
in
dec
or
loope
cmp
jno
stos
ficom
adc
inc
movs
rcr
adc
lahf
xor
enter
fistp
scas
mov
xor
btc
xchg
jb
(bad)
lock
jmp
jno
mov
xlat
(bad)
out
es
sub
add
pop
bound
jl
sub
xor
out
aad
cdq
ss
out
stos
mov
imul
fdivr
xor
pop
or
jne
inc
pop
mov
xor
mov
mov
adc
retf
inc
add
fdiv
std
add
imul
in
lea
jno
out
ins
int3
cld
mov
dec
les
bound
push
fs
push
cwde
add
inc
push
inc
push
cmp
cld
push
add
and
mov
or
xchg
cs
push
outs
jl
pop
xchg
(bad)
loope
call
cmp
add
lea
or
ja
xchg
mov
xlat
dec
dec
(bad)
inc
xor
add
fisttp
xchg
(bad)
mov
repnz
shl
mov
mov
test
mov
add
repz
in
int
dec
les
and
imul
pop
jae
ret
loop
jmp
adc
sub
(bad)
cmc
mov
daa
sahf
or
mov
daa
xchg
sbb
push
test
push
inc
cmp
imul
xor
mov
xchg
and
push
fisub
mov
sub
add
mov
sub
push
lds
push
retf
mov
sub
sub
pusha
pop
mov
and
mov
xor
push
adc
fst
fist
pusha
mov
sbb
dec
mov
cmovno
cmp
add
aaa
stos
cmc
push
test
sbb
add
iret
les
or
adc
stc
cmc
and
jmp
repnz
pop
pop
push
popf
add
mov
inc
push
xchg
imul
pop
add
sub
mov
bound
xchg
aam
adc
ins
popf
or
ja
jmp
in
pop
or
lock
clc
ds
inc
and
fdivrp
cmp
and
lods
popf
xchg
inc
push
jge
fdiv
movups
idiv
rol
call
daa
sbb
push
xchg
adc
add
fsub
aad
jl
stos
jne
movs
adc
lods
ss
repnz
pop
mov
mov
popa
imul
and
retf
rol
mov
into
sbb
jecxz
sbb
fistp
pop
jp
xor
jmp
js
hlt
jnp
inc
addr16
les
sti
inc
sbb
mov
push
outs
std
movs
in
shl
xchg
inc
stc
mov
and
pushf
pop
xchg
imul
sete
xchg
mov
ror
inc
ds
mov
add
cli
std
fcomip
hlt
inc
(bad)
inc
push
xchg
xchg
test
mov
int3
sbb
cs
cwde
and
cwde
inc
add
loope
hlt
inc
mov
jo
test
push
push
add
fs
bound
repz
das
adc
inc
popa
mov
lahf
(bad)
int
arpl
cmc
xchg
mov
cld
push
mov
in
cld
repnz
or
sbb
test
rol
inc
and
cmps
enter
or
jmp
std
cs
imul
add
fs
ins
icebp
sbb
inc
cmp
inc
mov
mov
or
loopne
adc
dec
cmp
test
ds
jb
pop
pusha
scas
loop
and
cmp
rcl
test
mov
ins
pop
push
and
lock
cmps
lea
push
inc
hlt
mov
scas
aaa
push
inc
pop
mov
cmp
retf
lock
sbb
dec
icebp
mov
xor
test
xchg
fisubr
jge
sub
cmp
lds
dec
adc
cld
inc
aam
into
sub
retf
pushf
push
mov
clc
xchg
xchg
push
add
vorps
pop
add
jg
icebp
jae
mov
jg
mov
loop
cmp
xor
jmp
mov
std
into
xchg
mov
repnz
ret
(bad)
neg
mov
fisub
push
repnz
jmp
dec
mov
inc
dec
adc
add
imul
cwde
outs
stc
xchg
pusha
lods
and
cmp
es
fiadd
repz
adc
test
mov
pop
push
cmps
repz
xor
test
icebp
daa
cmps
shl
pop
mov
dec
test
jmp
dec
or
sub
mov
xchg
dec
cs
fistp
or
scas
dec
dec
xor
out
shr
adc
add
mov
in
movs
inc
mov
retf
pop
repz
mov
xchg
jno
pop
std
out
adc
jle
movs
cmps
xor
mov
int
lock
fcom
add
jg
fimul
inc
sub
call
or
push
jno
pop
test
dec
fcomp
ss
push
xchg
jmp
int3
je
inc
scas
push
push
sbb
test
cdq
dec
add
inc
fwait
inc
fnstcw
aad
xor
outs
dec
cmp
pop
je
push
mov
jmp
push
cmp
call
dec
or
add
mov
ss
xchg
ja
cmp
mov
dec
jmp
push
inc
leave
jo
pop
(bad)
outs
std
data16
and
inc
jmp
shl
pop
push
ret
nop
jnp
mov
jb
and
iret
popa
(bad)
sahf
sbb
add
jmp
div
mov
add
jle
inc
push
and
loop
and
rcr
test
popf
imul
js
lods
mov
xchg
inc
jg
jb
push
stc
dec
inc
in
das
aad
xor
mov
xchg
mov
ret
add
or
adc
pusha
enter
das
dec
call
or
fsin
dec
fisubr
cmp
push
sub
das
pushf
xor
mov
mov
add
out
cmp
mov
repnz
or
mov
arpl
mov
mov
sbb
gs
cmp
(bad)
and
xchg
or
or
icebp
(bad)
les
push
xchg
jns
xchg
scas
mul
inc
dec
inc
in
jle
pop
stc
jb
inc
jno
shr
or
outs
adc
fsub
bound
(bad)
je
in
mov
mov
sub
sub
je
les
add
jge
retf
add
mov
mov
mov
stc
lea
jb
or
jg
(bad)
push
pop
pop
add
xchg
sbb
xchg
push
mov
stos
jl
xor
sub
adc
sub
adc
xchg
xor
cmp
nop
jno
gs
fcom
adc
push
retf
xchg
inc
mul
outs
pop
jno
loop
int
mov
in
xor
xchg
cmp
stos
sbb
cwde
aad
fsubr
dec
sbb
and
sbb
inc
scas
xor
pop
gs
call
push
lods
push
jecxz
push
in
jmp
test
sub
je
dec
or
pop
in
lods
adc
out
and
pop
scas
and
in
movs
out
mov
loop
out
daa
mov
ficom
call
push
(bad)
jne
pop
inc
cld
inc
int3
neg
add
push
popf
lahf
fmul
jmp
inc
mov
push
frstor
adc
mov
xlat
mov
push
scas
shl
test
mov
scas
arpl
pop
test
adc
xor
dec
push
fmul
and
enter
stos
mov
jnp
push
adc
and
aas
sub
cli
ss
bound
fiadd
loopne
jmp
cmp
shl
pusha
lock
aaa
mov
imul
cmp
(bad)
rcr
sub
loopne
inc
pop
jbe
mov
aad
jg
(bad)
pop
popa
icebp
pop
es
or
and
xlat
imul
rcl
xchg
enter
mov
mov
in
xlat
pop
sbb
mov
push
or
or
push
dec
mov
pop
xor
mov
pop
pop
push
rcr
sti
aaa
fwait
xchg
jno
push
movs
retf
arpl
push
add
cmps
bound
ret
sub
ins
inc
icebp
xchg
scas
les
shr
cli
lea
mov
inc
xchg
add
fstp
xchg
dec
adc
retf
ja
pop
jae
mov
lock
push
pop
jl
test
push
mov
call
cs
mov
fisttp
jo
inc
loopne
push
mov
add
(bad)
gs
push
outs
lea
aam
enter
xchg
and
pop
jmp
xchg
das
call
aaa
inc
shl
das
adc
sbb
popf
fs
retf
scas
jmp
add
hlt
fnstcw
mov
test
sbb
std
in
js
or
pushf
dec
push
aam
std
iret
mov
loopne
add
push
mov
inc
ror
mov
xchg
push
shl
test
mov
sti
inc
in
sbb
sub
daa
push
js
aas
(bad)
movs
sbb
stos
stos
sbb
dec
mov
(bad)
add
sbb
cmp
into
mov
es
adc
push
xchg
mov
or
in
leave
call
in
dec
pop
sub
test
mov
das
call
cmps
in
mov
jle
aaa
mov
inc
xor
repnz
out
imul
aas
mov
pop
inc
sub
test
ret
inc
xchg
dec
(bad)
mov
aad
xor
pop
sti
cmc
shl
xchg
out
fs
scas
mov
mov
test
std
in
or
test
test
mov
and
nop
push
mov
(bad)
sbb
jmp
and
dec
(bad)
cmps
sub
add
ret
sbb
or
pop
ficomp
mov
inc
fadd
mov
bound
test
out
imul
(bad)
mov
(bad)
pop
mul
fisubr
lea
add
pop
rcl
call
mov
lea
ss
test
jae
repz
adc
mov
test
sub
push
push
inc
pop
adc
add
or
ficomp
in
cmp
in
jno
push
scas
popf
lea
test
mov
iret
adc
mov
sbb
dec
pop
push
cwde
or
mov
std
xchg
mov
sub
(bad)
cmp
sub
stos
pusha
xchg
outs
sub
mov
(bad)
cmp
popf
movnti
aas
gs
iret
xchg
mov
int
sbb
bound
pop
dec
cmc
out
inc
imul
arpl
mov
cmps
jmp
cmp
pop
or
test
dec
cwde
jl
xor
out
add
mov
adc
push
neg
add
sbb
lea
add
xor
arpl
pop
popf
fwait
ret
imul
cmps
pop
jge
mov
xchg
mov
xor
into
inc
mov
repnz
adc
sbb
adc
aad
mov
in
imul
(bad)
cmp
add
addr16
push
sub
repz
mov
mov
push
sub
and
hlt
push
int3
stc
fstp
repnz
cmps
sbb
dec
loope
fsub
movs
cmp
pop
xchg
inc
outs
push
aad
push
in
ret
aas
pop
xchg
imul
enter
fdiv
call
mov
adc
pop
pop
lods
mov
retf
pop
mov
adc
pop
sbb
cmps
int
jb
mov
xchg
cwde
(bad)
not
das
push
mov
retf
dec
adc
cwde
hlt
add
(bad)
jmp
add
push
pop
mov
pop
test
sbb
sub
mov
inc
mov
stc
sub
rcl
add
sbb
loope
xchg
mov
or
aad
xchg
sahf
jmp
gs
push
ror
into
movs
jmp
ds
mov
sbb
fisubr
or
adc
retf
mov
push
outs
jno
movs
out
rep
jbe
addr16
push
and
out
aam
pushf
sub
jge
sahf
mov
cli
push
icebp
push
rcl
push
xchg
dec
xchg
cmps
and
or
xor
xchg
fnstcw
inc
cld
xor
(bad)
inc
mov
ins
clc
test
jl
xor
add
or
enter
jge
jne
jns
and
fwait
xchg
pusha
rcr
dec
leave
mov
mov
int3
push
pop
or
inc
cwde
stos
lock
movs
loopne
fdiv
mov
add
pop
dec
push
pop
ret
cwde
in
mov
adc
stc
xor
test
sbb
stos
ror
mov
gs
inc
xchg
mov
jae
push
call
scas
arpl
mov
outs
movs
jo
xchg
dec
inc
and
jno
sbb
mov
sti
dec
lock
inc
sbb
and
retf
addr16
xor
and
in
test
push
jg
or
sbb
jmp
fistp
shl
mov
dec
jle
fs
xchg
mov
jmp
push
sub
aad
stc
bound
sub
mov
leave
out
mov
jmp
xor
cmp
fbld
jle
sub
cmc
(bad)
mov
loope
xor
and
call
inc
cmp
ror
add
add
call
pushf
cdq
punpcklwd
sbb
call
jns
jno
xchg
or
jmp
int
ds
int3
jns
fisub
or
ror
jbe
stc
retf
dec
sbb
(bad)
test
in
sbb
sbb
fcmovnu
fstp
movs
(bad)
lds
outs
movs
shld
sbb
dec
int3
cmp
add
xor
cmp
jae
das
dec
push
jne
adc
mov
or
rol
pop
jne
lock
test
push
popa
int3
xor
add
push
mov
ins
out
push
(bad)
fist
sar
ins
lock
nop
xchg
dec
pop
push
or
imul
push
out
cmp
rcr
xchg
dec
xchg
mov
push
pusha
and
lods
aam
jne
cmc
cmps
popa
mov
jg
sti
xor
or
jl
imul
xlat
push
lods
xchg
mov
or
add
push
push
jmp
jl
fild
cmp
jmp
jp
add
sbb
fidivr
neg
cwde
jne
add
jg
scas
xchg
lahf
in
in
test
jg
sub
sub
or
fistp
fsubr
sbb
out
cmp
add
shl
dec
adc
outs
pop
dec
mov
cli
mov
mov
fadd
rol
lds
ret
pop
int
enter
movs
arpl
push
mov
fst
loopne
rcr
sub
hlt
mov
popa
and
sbb
mov
sahf
(bad)
ins
movs
push
leave
inc
pop
xchg
sar
and
sbb
pop
mov
imul
xchg
stc
dec
cli
inc
add
jb
data16
sub
mov
inc
aad
sbb
popa
push
jnp
mov
ret
fisttp
sub
icebp
dec
enter
sub
aaa
mov
cdq
inc
sti
mov
inc
sub
or
ret
cmp
(bad)
aam
jne
mov
or
imul
add
mov
mov
mov
and
pop
push
jmp
mov
(bad)
lock
stc
adc
push
add
mov
retf
cs
add
push
dec
imul
jo
sti
mov
movlhps
mov
ja
jbe
adc
jmp
pop
push
mov
mov
adc
rol
fstp
cmp
fcomp
stos
repz
jmp
shl
movs
in
jno
mov
(bad)
icebp
push
test
dec
push
jmp
ins
mov
fwait
xor
mov
ins
or
mov
sbb
fadd
div
jb
inc
inc
scas
je
mul
xor
outs
and
in
and
sbb
pop
mov
or
ds
jmp
jb
mov
mov
scas
std
outs
lea
pushf
add
xchg
cmp
push
leave
xor
pop
vmovdqa
pushf
test
icebp
aas
xor
les
dec
in
jae
inc
mov
mov
jne
hlt
mov
cmp
ret
fbld
clc
popa
push
jmp
jge
adc
mov
xor
sbb
adc
stos
add
cmp
xchg
imul
mov
je
mov
lods
push
pop
xchg
mov
sahf
pushf
jle
cmc
int3
sbb
popa
jge
add
or
sbb
js
sub
add
movs
fld
lahf
add
aam
gs
sbb
jne
mov
push
imul
jmp
mov
ror
fiadd
into
dec
mul
dec
mov
or
lods
shr
dec
mov
pop
pop
xor
test
rcr
mov
test
enter
dec
jne
test
call
cmp
ret
das
push
pop
nop
js
(bad)
or
pusha
inc
ja
sbb
popa
jb
push
jl
fnstenv
fdivr
add
call
(bad)
sbb
inc
iret
imul
das
add
(bad)
scas
push
outs
arpl
loopne
and
mov
mov
mov
push
push
(bad)
pop
mov
dec
hlt
push
popf
dec
xchg
mov
ds
mov
pop
push
mov
cmp
in
lea
mov
scas
addr16
jns
daa
mov
inc
xor
fistp
int
mov
push
mov
or
dec
mov
mov
jg
jae
or
push
jb
mov
inc
stos
sbb
mov
fdiv
mov
lea
sub
setge
jb
pop
paddw
sbb
iret
xcrypt-ofb
cmps
imul
xor
in
(bad)
and
pop
cmp
pop
fwait
sbb
out
dec
xor
das
imul
aas
mov
or
or
ficom
fistp
in
xchg
pushf
pop
popf
mov
and
mov
sti
mov
cmp
sub
int
or
or
mov
sti
out
mov
ins
int3
push
cmp
mov
out
in
cli
jno
add
adc
mul
sbb
(bad)
inc
xor
and
lea
mov
js
daa
(bad)
mov
jl
loop
in
mov
std
lock
loope
clc
out
inc
add
(bad)
jns
jb
lahf
sub
push
shl
pop
sub
add
out
cmp
outs
daa
add
sbb
xor
push
retf
mov
or
or
xor
sub
jle
loopne
pusha
lock
sub
pop
jmp
push
jmp
add
adc
in
mov
mov
push
aad
mov
cld
sub
sti
test
jb
(bad)
jle
mov
xor
cmps
lea
stc
sar
cdq
dec
add
or
les
outs
push
sbb
pop
neg
pop
imul
and
test
mov
addr16
mov
movs
fcom
inc
shl
push
mov
inc
or
ds
sub
adc
dec
mov
inc
sbb
jl
out
or
xor
push
fimul
push
adc
ins
xor
pop
fstp
mov
cli
sub
outs
fldenv
jp
sbb
jo
inc
jne
ja
jmp
xchg
cmp
lods
sbb
dec
and
stos
mov
icebp
dec
sub
and
in
xchg
or
xor
add
add
or
mov
(bad)
xor
sub
iret
pop
nop
mov
cmp
mov
loop
adc
or
jl
jo
popf
nop
not
adc
push
xchg
sbb
leave
in
(bad)
or
push
push
and
cmps
sub
fwait
loope
push
jle
jge
jmp
out
mov
sub
pusha
mov
cld
sbb
push
imul
fnstsw
xor
inc
and
push
or
jae
imul
add
sbb
fadd
retf
xor
pop
cwde
cld
inc
rcl
stos
push
retf
loop
mov
out
js
sbb
aam
xchg
fcomp
mov
cmp
pushf
jp
int
shr
cwde
xchg
adc
sub
jnp
mov
push
pushf
je
adc
inc
push
jnp
and
shr
pusha
push
pop
cmp
shl
sbb
cmps
cmps
out
lahf
push
xor
mov
lahf
push
lods
mov
shr
fidiv
sub
loope
push
fdiv
or
jb
sub
xor
sub
and
in
add
sar
dec
(bad)
push
dec
sub
ss
push
int3
or
loope
test
jecxz
pop
add
dec
jb
push
ss
aas
in
xlat
gs
fisub
inc
jg
enter
and
pop
pop
mov
stos
mov
push
arpl
ins
and
neg
xor
sub
loopne
es
fwait
push
cwde
inc
(bad)
cmp
(bad)
cmp
mov
pop
retf
hlt
popf
cmps
mov
xor
aaa
add
stos
out
aam
imul
jo
cdq
pop
lods
mov
mov
xchg
cmps
add
loopne
scas
and
add
jno
push
test
adc
inc
xchg
dec
pusha
int
stos
push
mov
sbb
sbb
jb
jp
out
pop
add
jno
xor
cmps
call
or
loope
push
fist
dec
adc
cmp
sub
pop
push
ror
jg
sbb
out
adc
mov
leave
and
stc
out
into
loope
stos
mov
jge
inc
pop
cmp
daa
sbb
lahf
test
dec
inc
and
ds
push
int3
jmp
inc
loop
shrd
ret
rol
mov
push
in
push
mov
cdq
rol
or
mov
inc
xchg
daa
movs
iret
fwait
leave
sub
fstp
inc
and
popa
push
mov
jge
pop
stos
ret
jp
into
sbb
xchg
mov
mov
adc
mov
stc
je
movs
lods
push
leave
outs
mov
jae
mul
push
repnz
(bad)
mov
in
mov
add
push
jp
fnstcw
adc
push
fs
rcr
xor
fwait
out
mov
(bad)
int
ret
dec
mov
hlt
pop
ror
outs
cwde
fmul
jg
mov
jno
or
jbe
mov
scas
cmp
mov
push
in
stc
in
jmp
push
shl
(bad)
outs
inc
pop
jns
cmp
scas
sub
ror
inc
push
or
retf
push
sbb
dec
push
sbb
sbb
fxch
clc
ja
out
push
adc
pop
repnz
daa
jle
inc
inc
sar
push
sti
in
inc
push
(bad)
imul
stos
fs
lds
cmp
loop
add
or
pop
leave
push
lahf
mov
sbb
data16
push
xor
xor
sbb
shl
mov
adc
ficomp
cs
(bad)
pop
xchg
movs
sets
je
and
(bad)
cmp
or
xchg
pusha
pop
(bad)
call
sbb
inc
daa
movs
clc
out
push
mov
int3
mov
pop
out
je
sub
test
int
mov
mov
push
(bad)
ds
retf
jns
cmp
out
xchg
and
das
xchg
mov
xchg
(bad)
jmp
popf
mov
movs
retf
xchg
mov
jecxz
push
mov
sub
dec
cwde
pop
fadd
sbb
push
dec
inc
and
pop
mov
xchg
cwde
fcomp
jne
outs
mov
fisubr
int
cmp
mov
icebp
leave
fistp
es
cmps
push
mov
adc
cld
fdiv
ds
mov
xor
jbe
xor
push
(bad)
(bad)
fmul
inc
inc
sbb
inc
mov
cmp
dec
mov
sub
pop
dec
gs
out
dec
xor
mov
jmp
sub
or
mov
stos
adc
(bad)
fbstp
xchg
loopne
pop
jne
push
cld
xchg
fstp
inc
pop
mov
pusha
push
pop
push
(bad)
aad
sub
fimul
(bad)
mov
dec
inc
ror
test
stos
adc
inc
mov
sub
clc
xchg
inc
cmp
mov
repz
jecxz
pop
lahf
pop
or
icebp
xchg
dec
and
jmp
inc
jmp
fwait
and
and
out
cs
dec
arpl
aam
dec
jne
dec
bnd
sub
(bad)
ficomp
push
cld
fidiv
aas
loope
fs
push
xchg
add
not
and
jb
cmc
jne
inc
xlat
arpl
mov
cmp
xchg
neg
stos
ror
cdq
bound
out
les
push
jns
xchg
xor
neg
pop
in
stos
pusha
mov
inc
push
xchg
adc
or
pop
push
mov
inc
mov
and
jo
xchg
mov
fadd
in
inc
not
mov
lahf
pop
je
pop
jge
in
jmp
sub
mov
sub
std
xchg
mov
loopne
jp
add
adc
or
xchg
inc
pop
rol
add
in
mov
popf
in
shl
or
dec
repnz
(bad)
push
inc
pop
jg
xchg
xor
shl
(bad)
aam
add
jno
mov
inc
(bad)
fnstenv
cmp
mov
scas
ins
cmp
mov
sbb
addr16
mov
ins
adc
(bad)
pop
(bad)
sub
(bad)
dec
push
repnz
out
shr
jnp
adc
inc
push
jno
or
movs
fbstp
and
(bad)
stc
es
mov
loop
popf
rcl
sbb
lock
push
shr
call
popa
test
and
jmp
dec
and
rcr
sub
lock
je
jae
jle
gs
outs
jl
dec
xor
sub
inc
stos
adc
sbb
push
add
xchg
shr
sahf
sbb
sti
inc
lea
cmp
in
arpl
loopne
sbb
dec
sti
(bad)
cmc
fldl2t
or
mov
ja
mov
stc
test
ficom
fdiv
add
sbb
mov
js
int3
jp
ret
or
cdq
(bad)
mov
jo
(bad)
shl
jns
(bad)
scas
xor
cmps
sar
out
retf
je
jg
cwde
call
mov
pop
stc
out
add
inc
xchg
or
hlt
icebp
inc
jecxz
jmp
xchg
inc
aad
mov
ds
jmp
sbb
(bad)
fcmovnb
dec
xchg
jmp
fbstp
xchg
leave
lock
cmp
adc
(bad)
mov
sub
in
mov
jmp
mov
lahf
out
push
jne
lods
xchg
mov
pminsw
xor
and
xor
jb
pop
out
sbb
ins
mov
mov
ficom
test
mov
inc
sub
or
fscale
sub
imul
push
test
xlat
and
int
cdq
sub
xchg
scas
lock
stc
sahf
sbb
loop
or
aam
mov
and
pusha
(bad)
push
into
cmps
loope
out
pop
call
mov
imul
sbb
cdq
fild
icebp
pop
inc
sbb
inc
jp
and
retf
mov
iret
fadd
je
cmp
int
scas
test
mul
addr16
ret
xchg
pop
in
test
adc
jno
in
call
jl
mov
and
mov
jl
cmc
(bad)
mov
add
xchg
sub
xlat
and
mov
jmp
jp
popa
stc
xor
mov
pushf
scas
and
dec
out
shl
jle
pushf
push
stos
inc
jne
jb
push
mov
(bad)
jle
cmp
jecxz
cli
and
cwde
push
push
mov
sbb
cmp
pop
jns
in
daa
cmp
pushf
fisttp
stos
xor
adc
in
xor
mov
out
inc
fimul
ins
adc
fld
fstp
cld
jecxz
ins
retf
fimul
jns
pushf
(bad)
jmp
pop
pop
stos
icebp
push
mov
lock
push
adc
stos
call
rcr
fdiv
mov
pop
add
sti
dec
aas
test
test
push
ja
sub
cdq
fist
call
or
adc
(bad)
xchg
sbb
(bad)
fistp
test
mov
inc
xor
dec
test
je
cli
shl
call
push
add
or
add
repnz
pop
sub
lods
shl
sbb
gs
aad
inc
and
fcmovu
cmp
rcl
(bad)
add
fist
cmp
pop
into
into
leave
lock
cld
lahf
push
cmps
sbb
xchg
or
mov
ret
pop
leave
dec
aad
dec
push
mov
lea
fiadd
ins
outs
adc
cdq
cmp
push
push
adc
cmc
cmc
push
rol
xchg
jmp
scas
cld
dec
mov
and
into
stos
fisttp
ja
(bad)
in
jecxz
sub
dec
adc
(bad)
sbb
add
fscale
stos
push
je
fistp
retf
(bad)
jno
adc
xor
jg
mov
pop
out
cmps
rol
push
sbb
std
sub
fdiv
push
push
popf
sahf
stos
repz
mov
xor
adc
xor
mov
das
inc
sbb
pop
mov
xor
pop
sbb
jo
push
sbb
stos
sbb
add
stos
in
jno
mov
mov
sub
outs
xchg
or
dec
push
imul
fs
je
mov
hlt
mov
cs
gs
enter
pop
fisttp
call
fmul
pop
and
pop
rcl
inc
or
in
inc
dec
sbb
add
ins
sbb
mov
iret
retf
sar
mov
pop
add
out
sub
cli
mov
mov
push
jne
jmp
dec
loope
add
fwait
popf
nop
mul
add
dec
inc
push
(bad)
mov
cld
enter
test
sub
(bad)
les
ja
pop
nop
and
int3
test
not
bound
push
out
out
cmp
sti
mov
sub
scas
xor
xchg
inc
or
jne
je
pop
leave
movs
pop
movs
out
hlt
adc
js
xchg
jmp
enter
inc
das
dec
or
inc
out
not
xchg
ins
out
cmp
mov
dec
mov
rol
int3
into
leave
repz
push
sbb
adc
inc
ins
xor
dec
push
iret
mov
ins
sub
je
out
int
stc
fdiv
or
sahf
and
dec
sub
cmp
jns
in
addr16
dec
leave
xchg
bound
push
cmc
int3
jge
push
ins
shr
pushf
scas
add
xchg
xchg
shl
jl
ins
call
xor
mov
and
mov
sub
jmpw
jl
pop
pushf
adc
lods
push
cs
int
pop
jnp
cmp
pop
fdivrp
push
cs
inc
mov
mov
xor
adc
pop
cmc
cwde
je
jle
cdq
mov
cmps
add
jle
inc
cmp
es
ficom
cdq
xchg
push
push
movs
add
jmp
stc
xor
imul
ja
lods
xor
adc
xor
fwait
je
sub
dec
xlat
pushf
push
lods
fs
xchg
arpl
test
mov
jl
loopne
call
adc
xor
push
add
adc
dec
dec
imul
push
icebp
stos
(bad)
call
inc
sbb
(bad)
int3
or
pop
adc
nop
adc
(bad)
aas
lea
mov
pop
repz
(bad)
sub
jmp
mov
cmp
jmp
xchg
add
icebp
xor
ja
pop
mov
hlt
lock
xor
hlt
mov
jmp
popa
fidiv
in
addr16
jmp
adc
sbb
outs
mov
fnsave
push
sub
pop
xchg
dec
or
das
sbb
sub
ins
retf
ds
jne
or
jno
addr16
adc
sub
and
jecxz
in
fxch
sub
(bad)
sub
push
push
shl
mov
pop
xor
sar
fidiv
ja
xchg
ss
jne
call
inc
jb
cdq
sti
pop
iret
out
dec
mov
in
imul
outs
ret
pusha
mov
nop
mov
xor
jns
inc
aam
mov
(bad)
or
daa
arpl
inc
das
pushf
cmp
test
and
ins
pop
sub
sbb
cmp
inc
(bad)
enter
in
jns
sbb
xchg
(bad)
jnp
push
in
dec
shl
aas
gs
in
mov
sub
nop
push
or
ins
add
fwait
xchg
mov
sbb
xor
push
(bad)
sahf
lods
cmp
scas
pushf
xor
add
mov
xlat
dec
imul
in
mov
or
jl
mov
sub
mov
dec
jnp
mov
jp
enter
cmp
imul
sub
fmul
aad
int3
(bad)
dec
pop
repz
jns
das
push
popf
call
xor
sub
adc
sbb
stos
fbld
cmp
das
push
lahf
ret
or
pop
aad
pop
outs
daa
mov
das
dec
or
addr16
dec
mov
xchg
adc
fld
push
fwait
outs
dec
mov
std
mov
test
xchg
cli
popf
das
dec
dec
push
(bad)
sbb
mov
or
test
inc
mov
dec
cmp
fidivr
std
cdq
lods
aaa
cmps
jmp
dec
gs
lock
pop
scas
repnz
std
dec
movs
xchg
fmul
push
xor
inc
shl
lock
mov
jmp
cdq
retf
sbb
sub
cmp
in
and
test
mov
mov
push
sbb
mov
(bad)
push
push
test
xor
loop
pushf
arpl
jge
stc
sub
movs
outs
sbb
mov
mov
sti
bound
jno
xchg
jo
jae
ja
or
sbb
stos
imul
fcmove
xchg
dec
mov
jbe
fimul
pop
cmp
mov
(bad)
loope
(bad)
xor
test
adc
mul
scas
cld
(bad)
mov
xor
jmp
cmc
jno
test
cmps
mov
div
pop
cs
cmps
rcr
mov
or
jno
dec
movs
inc
push
or
in
jecxz
jp
add
shl
pop
fs
fist
jns
lahf
jo
push
or
leave
test
aad
xchg
in
fsub
cmp
push
jmp
ja
xchg
push
shr
pop
wbinvd
scas
int
gs
adc
ret
repz
mov
inc
imul
jns
mov
and
(bad)
sbb
add
(bad)
enter
jno
jmp
jmp
cdq
shr
xchg
dec
addr16
ins
out
push
or
cwde
adc
lahf
mov
mov
test
inc
call
shl
jmp
inc
adc
add
inc
fs
das
mov
xor
pop
jmp
push
data16
call
fs
fwait
jg
dec
pop
pop
clc
mov
fld
jge
xchg
inc
out
out
jnp
bound
jle
ficom
add
xchg
sub
mov
in
mov
mov
aaa
cwde
xchg
outs
(bad)
imul
mul
pop
xchg
xor
mov
mov
dec
push
mov
ins
mov
mov
repz
pop
pop
mov
(bad)
push
in
std
in
je
and
pop
test
xlat
fiadd
and
in
repz
adc
push
rol
in
xchg
or
iret
lods
or
(bad)
rol
and
fdiv
mov
cmp
cwde
stos
iret
inc
fsubr
sub
push
mov
fldcw
je
aad
xor
mov
mov
push
xchg
mov
push
or
cmps
aas
inc
ins
ins
push
sbb
iret
(bad)
retf
mov
inc
out
dec
addr16
ja
stos
push
sub
clc
pop
fistp
xchg
dec
inc
movs
dec
arpl
loopne
xchg
mov
popf
mov
data16
mov
stc
cmp
xchg
adc
xlat
mov
mov
cmp
(bad)
jmp
or
les
mov
xchg
fnstcw
xlat
std
imul
mov
add
pop
mov
scas
xlat
adc
mov
jmp
pop
scas
xchg
sahf
mov
rol
or
sahf
push
sub
mov
push
leave
pop
sub
pop
push
call
call
sbb
mov
cli
sbb
mov
nop
out
in
loop
xor
imul
ja
and
jb
movs
or
xor
fwait
jmp
(bad)
sbb
sbb
daa
popf
shr
mov
(bad)
lahf
xor
add
stos
out
cmc
lea
push
or
addr16
jne
imul
sub
sub
jae
loope
loope
lods
or
mov
fadd
mov
xor
clc
lock
call
mov
movs
inc
fcomp
push
add
sar
pop
cmp
push
bound
mov
test
xchg
fidiv
call
push
je
dec
mov
dec
xchg
das
cdq
mov
push
sub
add
in
lock
mov
ins
sbb
leave
mov
pop
sahf
and
sub
sahf
cmp
sbb
bound
jnp
idiv
jb
or
popf
stc
fidiv
loop
hlt
jbe
je
push
adc
jle
mov
lock
retf
dec
xchg
push
bound
sub
movs
cmp
iret
cmp
dec
cli
mov
repnz
leave
in
and
into
xchg
lea
inc
int3
movs
adc
(bad)
cmp
adc
jle
mov
stc
aaa
repnz
popa
outs
dec
int
movups
push
ins
push
push
pusha
mov
cs
jge
mov
xchg
fisttp
add
or
jp
mov
stos
and
inc
cwde
sbb
jge
adc
push
sti
sub
mov
popf
push
push
nop
clc
dec
(bad)
fmul
mov
add
cwde
(bad)
(bad)
push
fadd
push
jb
pop
xchg
sbb
dec
lds
mov
jne
mov
push
cmp
cmc
and
pop
mov
stos
pusha
aaa
int3
push
mov
jo
cmp
add
imul
out
cmp
outs
pop
fs
shl
jb
ret
sub
das
inc
repz
or
push
es
xchg
xchg
mov
pop
add
add
mov
inc
pop
daa
gs
jno
repnz
sti
mov
icebp
cmp
cmp
(bad)
xchg
mov
or
jp
mov
inc
inc
push
cs
es
mov
add
sub
push
stc
ret
mov
and
push
out
jnp
push
push
or
xchg
pop
sub
mov
xchg
ret
push
inc
cld
dec
arpl
test
mov
cmp
mov
test
call
xchg
out
inc
test
bound
sbb
out
mov
mov
rol
inc
sbb
je
push
(bad)
rol
jl
loop
pop
clc
inc
aam
nop
cmps
or
pmulhuw
cmp
cmps
in
or
test
push
popf
test
leave
scas
ja
jo
sti
sbb
test
cwde
xchg
loope
or
in
arpl
je
push
dec
jecxz
add
mov
push
mov
sub
lods
out
outs
es
xor
fs
adc
fidiv
fadd
xor
sub
ret
cmp
push
cld
stos
sbb
sub
retf
xchg
adc
inc
xor
cmp
xor
and
xchg
scas
call
int
and
fdivrp
mov
stc
rcl
aad
push
and
xchg
cmp
test
mov
(bad)
jnp
fnsave
test
xchg
dec
jb
mov
sub
(bad)
(bad)
and
inc
(bad)
cs
cmp
retw
cmp
push
retf
shr
sub
gs
mov
iret
xchg
and
xlat
pop
arpl
stc
mov
mov
jo
push
pusha
and
or
cmp
mov
jae
cdq
cmps
add
cdq
xor
pop
stos
out
test
outs
imul
pop
and
shl
or
sbb
jl
mov
jo
rcl
mul
add
cmps
mov
sbb
jmp
jne
rol
xchg
loop
mov
(bad)
ror
ja
mov
imul
adc
sub
pop
imul
mov
or
leave
push
test
in
dec
ins
(bad)
int3
push
mov
ja
imul
out
pop
imul
imul
ficomp
in
ret
dec
add
mov
inc
int
add
jl
nop
mov
in
sbb
loop
jno
stos
mov
sub
cmp
jl
int
push
cmp
pushf
mov
(bad)
popa
aad
pop
mov
xchg
mov
xchg
pop
mov
and
fisttp
or
pop
out
and
out
es
jb
pop
in
sub
push
pop
dec
icebp
sbb
jmp
popf
cmp
mov
and
dec
in
pop
pop
mov
inc
mov
pop
add
loopne
push
(bad)
cmps
sub
mov
cwde
mov
dec
out
outs
cli
or
add
mov
inc
sbb
pusha
retfw
or
dec
dec
gs
call
inc
sbb
add
pop
xchg
pushf
xchg
(bad)
dec
cmps
ds
sub
push
jae
inc
cwde
fsubr
cli
ins
dec
xchg
pop
pop
cs
and
jecxz
xlat
or
xchg
cmp
dec
dec
lods
ins
in
lds
sbb
mov
rcr
mov
cs
or
cmp
pop
jne
pusha
aaa
fisttp
addr16
adc
int
adc
aam
pop
js
adc
clc
and
ja
xor
add
fld
inc
inc
and
outs
adc
mov
sub
mov
fldenv
test
pop
inc
(bad)
mov
xchg
adc
int3
jp
(bad)
jb
rol
mov
pop
test
adc
cli
outs
mov
mov
push
mov
in
daa
pop
not
cmc
dec
inc
adc
xchg
sub
inc
loope
sub
xor
aaa
jmp
xor
xor
xor
xor
dec
je
mov
or
shl
cmp
cmps
mov
cdq
mov
push
pop
outs
add
outs
jbe
or
in
xchg
push
or
fcom
mov
(bad)
push
add
fild
(bad)
fcmove
repz
push
jo
inc
dec
xchg
jecxz
inc
test
stc
scas
xchg
rcr
sub
sbb
dec
fiadd
xor
inc
mov
shl
nop
push
push
mov
push
out
jmp
jp
sub
sub
fwait
call
sbb
pushf
inc
shl
push
pop
cld
sub
loop
(bad)
push
inc
inc
push
scas
ficom
call
cld
ins
mov
fld
jecxz
xchg
jbe
mov
aaa
mov
jne
or
mov
ins
out
retf
ror
lahf
mov
cmp
cmp
test
sbb
ins
test
mov
pop
inc
adc
dec
test
inc
outs
xchg
out
mov
mov
arpl
push
(bad)
push
mov
mov
sub
js
aas
nop
aam
or
and
cmp
rcr
push
lea
das
xchg
pop
out
addr16
cmps
sar
push
cmp
das
int3
daa
mov
dec
jmp
inc
lea
push
jmp
cli
jae
into
dec
test
jmp
movs
ss
sub
and
fcomp
push
sbb
jae
sub
not
push
and
sar
cmp
stos
and
sar
push
hlt
mov
iret
daa
sub
ret
mov
rol
daa
xor
xchg
inc
jle
(bad)
adc
pop
repz
and
fnstenv
cmp
push
in
(bad)
cwde
jmp
rol
push
xchg
imul
jno
cmp
mov
add
pushw
int
test
xor
jmp
scas
retf
fadd
push
je
dec
dec
cs
shl
sub
iret
inc
das
dec
jge
xchg
jmp
cs
(bad)
ins
and
mov
mov
pop
bound
dec
fidiv
jb
pushf
ror
test
(bad)
pop
icebp
jle
mov
das
stos
dec
mov
scas
push
ins
cs
fcmovnu
retf
lea
enter
push
pop
ins
add
mov
fld
cmp
or
ins
or
arpl
xor
cmps
(bad)
not
push
fsubr
lahf
inc
mov
fidivr
xchg
dec
cmps
and
pop
test
inc
int
add
(bad)
pop
add
jle
sbb
and
mov
push
add
sub
jg
sbb
ret
cdq
fsubr
retf
ror
mov
inc
dec
mov
test
xchg
cmp
pop
sbb
xor
xor
push
dec
dec
xchg
push
push
ds
add
or
dec
inc
push
sbb
mov
test
mov
int
daa
and
out
pop
dec
mov
cmps
fwait
xchg
or
inc
stos
mov
ret
add
sbb
sti
pop
mov
loop
pop
adc
sub
mov
xchg
enter
push
and
and
inc
pop
cmp
cmp
pop
out
je
push
jp
fs
sbb
adc
cmp
or
aas
inc
xchg
push
inc
dec
inc
sub
or
pushf
xor
jecxz
sbb
jmp
mov
sub
mov
test
jle
jno
das
repz
sahf
mov
dec
call
cmp
ror
data16
pop
push
into
jmp
ror
or
loopne
mov
imul
iret
add
ins
std
xchg
pop
sub
std
out
repz
fwait
cwde
movs
aam
xor
pop
mov
xor
lods
cld
add
clc
in
and
xchg
cld
scas
inc
xchg
retf
dec
scas
call
mov
xor
mov
sti
imul
jne
dec
push
push
push
aaa
push
arpl
push
push
repz
fstp
jmp
inc
and
xor
mov
mov
or
and
mov
xor
and
cwde
adc
aam
test
jns
push
mov
sbb
inc
inc
test
mov
cmc
dec
jns
push
cmp
xlat
push
inc
push
sbb
fwait
call
out
mov
cwde
or
inc
clc
(bad)
and
test
push
into
jne
mov
scas
iret
imul
dec
or
xor
jecxz
outs
sub
pop
arpl
shr
jo
lds
ret
stc
retf
add
out
or
pop
inc
inc
push
(bad)
std
inc
add
ins
lods
push
dec
retf
rcr
aad
mov
mov
dec
ror
movs
pushf
or
test
retf
inc
imul
sbb
daa
sbb
push
in
add
xor
pop
mov
inc
(bad)
mov
push
pmullw
xchg
vcvttsd2si
sbb
dec
pop
int3
aas
repnz
rcr
inc
pop
xor
inc
iret
(bad)
test
jmp
cs
scas
sbb
xor
call
test
in
and
pop
ret
fadd
cmc
shl
and
aas
(bad)
les
popf
(bad)
mov
cmp
xor
das
xor
loopne
push
(bad)
push
jno
jge
(bad)
push
xchg
pusha
pushw
xchg
outs
mov
popf
aad
inc
push
jmp
pop
jmp
loope
and
cmp
stos
dec
xor
or
adc
js
jp
shr
fs
cmps
pop
fxch
xchg
jnp
mov
int
and
retf
cmp
arpl
sbb
repz
jns
add
outs
outs
jns
retf
ins
(bad)
shl
and
stos
stc
lock
cmps
or
mov
mov
call
sahf
or
(bad)
cmps
cdq
sub
inc
pop
jg
test
retf
mov
cmp
xchg
mov
retf
mov
sbb
imul
or
jns
mov
mov
out
mov
sub
add
pop
or
popa
xchg
int3
or
push
sbb
(bad)
pop
fcmovnbe
cwde
vandpd
js
sbb
adc
(bad)
popf
mov
mov
xchg
and
jno
or
cmp
or
lea
ja
fwait
jae
popf
cwde
xchg
(bad)
mov
and
dec
popf
in
or
call
push
xchg
jne
pop
test
dec
adc
and
aas
cmp
arpl
in
push
and
add
shl
imul
iret
popfw
xchg
mov
inc
icebp
loope
inc
cs
pop
cmps
out
sub
scas
popa
cmp
sti
retf
fild
add
mov
inc
sbb
or
jle
pop
out
or
aas
jl
fcom
and
lea
push
aad
xlat
xor
les
mov
mov
or
stos
mov
mov
xsaveopt
xchg
frstor
mov
and
jmp
mov
movs
ror
call
push
cmp
repnz
outs
pop
pop
adc
out
mov
jns
imul
div
fwait
mov
adc
add
cmps
sbb
inc
retf
push
dec
ins
xlat
loop
fld
scas
out
mov
push
ins
mov
pushf
mov
mov
adc
(bad)
rcr
mov
cmp
ins
push
pop
pop
data16
jge
push
jmp
add
sub
sub
mov
inc
mov
call
test
in
add
mov
cmp
fild
sbb
xchg
dec
mov
xor
mov
jecxz
popf
sbb
jg
add
in
les
sahf
mov
pop
(bad)
out
or
jle
mov
add
jbe
dec
outs
(bad)
pop
pop
xchg
mov
or
mov
addr16
mov
sbb
scas
pop
inc
mov
xor
xlat
icebp
imul
pop
mov
mov
push
ins
movs
pop
or
adc
xchg
xchg
xchg
pushf
rol
mov
(bad)
cmp
arpl
test
sub
mov
fnsave
out
cmp
fwait
ret
jl
inc
inc
sub
enter
ds
xchg
stc
ret
(bad)
sti
mov
dec
push
outs
movs
pop
push
mov
xor
lds
lock
xchg
in
cmp
sbb
fisub
jg
xchg
rcr
and
cmp
adc
scas
dec
inc
hlt
cdq
cs
sar
out
or
in
cmp
mov
jp
jne
test
stos
sbb
fdiv
adc
(bad)
fld
rcr
pop
cli
sbb
mov
cld
xor
xor
fdiv
push
shl
sahf
sbb
fidiv
ds
js
xor
outs
fiadd
hlt
ss
adc
fbstp
jo
pop
jl
out
lahf
aas
adc
xchg
icebp
adc
mov
retf
inc
jmp
(bad)
fbstp
test
and
push
movs
pop
ds
cmp
clc
mov
ja
jne
rcr
xor
pop
pop
or
les
loope
jne
scas
cs
or
out
sub
arpl
mov
mov
cli
and
bound
repnz
dec
je
adc
cmp
push
pop
pop
fwait
loopne
xchg
cmc
mov
adc
test
pop
mov
push
movs
cdq
cmp
and
cs
inc
shl
mov
not
push
mov
dec
out
out
scas
mov
adc
mov
dec
jae
shl
mov
jg
nop
jb
sbb
outs
fwait
int3
scas
loop
xor
or
cdq
mov
fcmovu
push
dec
outs
pop
add
mov
addr16
sbb
jbe
lds
mov
adc
in
jno
mov
jle
and
call
xchg
sub
outs
leave
popf
push
test
pop
mov
rcl
jne
mov
call
sbb
xchg
xchg
std
out
sti
jo
push
out
dec
jg
test
adc
or
push
repz
pop
in
mov
cmps
cld
cmp
and
ins
fadd
aam
rol
int3
push
js
cli
sub
pop
sar
outs
push
loopne
pop
dec
dec
in
mov
lea
jne
push
pop
aad
sbb
pop
mov
mov
mov
xchg
adc
(bad)
xchg
cmp
call
adc
fld
push
pop
sbb
ror
ja
int3
xchg
pop
jle
xlat
enter
xchg
int3
mov
ror
nop
pop
imul
cmp
mov
out
lods
mov
in
jle
xchg
adc
mov
ins
fwait
int3
push
sub
dec
push
dec
xchg
jecxz
outs
mov
test
xchg
cmps
pop
cmps
inc
outs
xchg
jmp
or
add
(bad)
inc
lods
in
xlat
jecxz
xor
add
xor
jge
retf
(bad)
in
loop
mov
cli
cmp
or
mov
and
add
sti
pop
mov
lods
mov
jl
sbb
bnd
mov
scas
push
stos
inc
lock
jno
inc
mov
in
mov
shr
push
jae
dec
dec
pusha
imul
and
in
jle
or
lahf
jbe
push
inc
sti
and
ret
push
push
mov
inc
jl
jp
loopne
mov
(bad)
clc
dec
cmp
xor
(bad)
fidivr
rcr
and
mov
push
and
lock
and
lods
test
les
dec
jno
sbb
adc
dec
adc
aad
adc
dec
dec
sbb
xchg
adc
mov
mov
lods
or
iret
aaa
cmps
sti
mov
lock
cmps
loop
fs
stos
jp
mov
inc
mov
or
test
sbb
mov
mov
push
test
jmp
ss
ins
mov
adc
in
outs
inc
add
fidiv
or
sub
arpl
and
out
(bad)
in
in
repz
add
pushf
cmp
cmp
jmp
stc
bound
out
add
(bad)
jno
std
push
xchg
repnz
popa
or
and
xor
and
or
mov
or
jmp
push
mov
test
mov
loopne
sub
stos
das
mov
ret
in
mov
sbb
jl
push
sbb
lds
retf
xlat
adc
(bad)
sub
inc
jo
in
in
rcr
aaa
gs
lods
in
sbb
and
push
mov
add
xor
mov
xchg
pop
pop
xor
mov
or
cmp
rol
mov
std
pop
lahf
(bad)
rol
cmps
call
cli
xor
(bad)
pushf
mov
xor
mov
mov
push
push
std
es
jge
xchg
inc
enter
mov
mov
ins
cmps
jmp
pop
xchg
push
fimul
push
ins
arpl
in
cmp
ins
jle
mov
xchg
ins
clc
sbb
add
push
push
sub
outs
ins
clc
pop
hlt
jp
outs
adc
enter
jb
ret
movs
sub
jnp
mov
inc
mov
adc
test
or
jmp
jp
js
lahf
dec
bound
leave
ret
or
sahf
gs
fnstenv
cmp
add
aad
in
nop
sbb
jnp
or
push
mov
mov
nop
xchg
(bad)
mov
fwait
xchg
shl
xchg
call
mov
push
xchg
dec
and
sub
add
mov
repnz
jge
and
fcomp
loope
xor
jmp
arpl
cld
scas
jno
push
jb
or
sbb
push
and
pop
pop
xchg
mov
inc
mov
cwde
fwait
jmp
aas
clc
xor
addr16
shl
lock
fnstenv
jmp
out
push
dec
fidiv
lahf
mov
pop
xchg
arpl
pop
mov
test
push
push
xor
pop
or
jno
jne
dec
mov
je
sub
(bad)
les
fst
cmp
test
jl
pop
stos
in
(bad)
int
stos
dec
dec
iret
ins
shl
popf
inc
cmp
adc
inc
pop
cmp
rcr
mov
movs
movs
loope
xchg
jge
cmp
outs
mov
stos
data16
cmp
ds
pop
or
mov
js
hlt
mov
sbb
jbe
loope
inc
or
cmp
add
and
jge
rcl
stc
push
mov
icebp
das
dec
add
inc
mov
mov
popf
ficomp
ins
stc
dec
add
ficomp
jb
sub
dec
loopne
fld
lods
int3
lds
lods
and
mov
inc
sbb
pop
loope
or
or
shl
cli
mov
push
jl
lods
clc
(bad)
mov
adc
pop
bound
(bad)
adc
cmc
inc
inc
inc
dec
push
push
sahf
mov
pop
jns
mov
dec
stos
(bad)
jmp
loopne
fiadd
data16
push
dec
pop
inc
mov
std
arpl
cli
popf
cmp
outs
cmp
sbb
bound
int3
xchg
(bad)
pop
inc
push
imul
cld
lods
cmp
pop
inc
sar
cmp
cmp
pop
pop
or
cmp
out
and
repnz
jmp
sub
sbb
cld
scas
jo
aad
xor
test
sbb
push
ds
sbb
push
xor
lods
ja
mov
shl
mov
mov
rcl
rcl
call
lds
push
pop
add
retf
cmp
ds
mov
mov
mov
call
jno
push
and
or
movntps
scas
and
shl
xchg
mov
pop
and
xor
rcr
push
(bad)
mov
pop
mov
fist
(bad)
repz
jno
jmp
lds
inc
xor
cld
pop
pop
mov
data16
icebp
xor
xchg
ins
adc
leave
pop
std
mov
mov
lods
and
mov
scas
xchg
and
sbb
jle
mov
pop
pop
and
fisttp
sbb
in
enter
mov
fild
jnp
dec
int
int
push
outs
mov
pop
jle
(bad)
push
sbb
mov
and
scas
ret
mov
fist
xor
adc
adc
std
ss
aad
xor
out
mov
sub
fiadd
(bad)
xlat
imul
(bad)
rcr
jl
cli
sub
fwait
enter
rol
call
xor
mov
add
mov
ja
lds
inc
shld
mov
sti
pop
mov
movs
sbb
sbb
sub
loop
sub
xchg
jno
aad
cs
xlat
pop
loop
popa
fistp
repz
xchg
dec
int3
dec
pop
into
jmp
retf
jns
cmc
(bad)
mov
sub
and
adc
or
jbe
inc
mov
cs
sub
mov
inc
(bad)
or
push
cmps
add
fldl2t
arpl
call
inc
push
hlt
xlat
in
mov
and
in
inc
or
shl
mov
pcmpeqd
mov
leave
bound
sub
out
xor
ret
push
pop
mov
sub
ins
popf
(bad)
sar
stc
sub
in
ret
lods
in
mov
mov
and
call
rcl
push
mov
bound
arpl
ja
(bad)
mov
xchg
(bad)
jecxz
into
adc
ins
clc
dec
pop
ja
shr
aam
fsubr
dec
pushf
shl
jo
sti
movs
scas
arpl
xchg
test
popa
push
gs
jno
stos
pop
dec
scas
cmc
and
push
xor
or
(bad)
cmps
xor
xchg
mov
(bad)
jbe
fild
lea
pop
fsub
lock
enter
mov
cmps
jnp
dec
ja
xor
adc
std
mov
xchg
pop
sbb
dec
xchg
int
mov
mov
push
dec
cld
jle
xchg
loope
out
fidiv
jle
push
push
pop
cmc
pop
mov
xchg
cmps
jg
cmp
jecxz
mov
adc
out
or
xor
hlt
in
adc
adc
loop
aam
clc
lods
jmp
xor
retf
ror
outs
push
or
mov
jne
outs
bound
lahf
aaa
dec
repnz
call
xchg
push
daa
or
fdiv
dec
cmps
es
addr16
inc
nop
adc
sbb
cmps
inc
xchg
sub
sbb
mov
hlt
jns
jbe
aas
cld
mov
scas
mov
test
push
jne
jae
fs
mov
call
(bad)
lods
mov
bswap
mov
fbstp
jl
xchg
pusha
and
test
add
fadd
aam
add
jmp
pop
cs
sti
loope
sub
push
sahf
push
adc
repnz
push
shr
mov
dec
retf
test
dec
mov
cmp
push
sub
inc
sbb
cmp
push
xor
stc
rcr
add
or
xor
retf
and
arpl
test
aas
push
int
in
cmp
pushf
mov
cli
popa
pop
dec
hlt
jge
jbe
mov
pop
adc
je
mov
aaa
lea
push
jecxz
popf
inc
cmp
sub
push
jnp
clc
fwait
not
outs
mov
arpl
pop
shr
xchg
sti
jecxz
bound
inc
shl
mov
je
scas
pop
mov
punpckhbw
icebp
xlat
mov
dec
jg
icebp
cmp
cmp
mov
mov
pop
iret
fild
mov
rcl
lods
dec
mov
adc
cmps
repz
xchg
popa
iret
or
jecxz
dec
inc
scas
(bad)
daa
iret
cmp
les
jns
and
stos
neg
jg
mov
test
fsubr
jg
retf
mov
sti
mov
stos
cmp
mov
es
or
pushf
fistp
movs
fucomip
fs
std
xor
lahf
shl
das
push
push
dec
xor
je
ret
test
in
dec
ins
pop
adc
xor
or
cmps
pushf
and
lock
pushf
xor
nop
in
addr16
dec
pop
and
jbe
fmul
ss
retf
xchg
addr16
pop
test
data16
loopne
add
jbe
add
test
mov
test
stos
dec
movs
mov
repz
ins
pop
or
cmp
jns
ins
test
inc
test
adc
sub
xchg
(bad)
adc
xchg
idiv
adc
xchg
dec
stc
scas
or
pop
push
sbb
inc
es
xchg
pusha
push
sahf
loop
sbb
aad
xchg
dec
add
dec
cwde
mov
ret
xchg
aam
xchg
fnstenv
out
bound
xor
fmul
(bad)
cwde
xor
push
adc
lahf
mov
jb
push
jp
push
test
scas
dec
add
aaa
and
aad
push
lods
nop
(bad)
mov
jb
mov
jne
dec
push
cmps
addr16
dec
dec
mov
dec
pop
(bad)
jle
pop
adc
jno
push
cmp
inc
jbe
jge
cmc
lds
xor
dec
cmp
scas
cmp
mov
mov
mov
sub
cmps
or
fmul
adc
loop
hlt
hlt
inc
call
add
add
aad
push
fidiv
dec
js
jmp
xor
sub
cs
in
ss
ret
adc
mov
shl
aad
sbb
test
inc
xchg
sub
sbb
lods
loope
call
ss
mov
pop
ror
es
jl
popf
mov
xchg
stos
fmul
out
retf
aad
enter
inc
rol
dec
outs
push
mov
mov
arpl
loopne
jo
je
jnp
push
mov
out
mov
adc
xchg
pop
xor
sub
outs
dec
daa
xchg
pop
sub
lods
mov
das
pop
cmp
push
dec
push
sub
or
in
cmp
or
mov
jae
icebp
adc
ins
sub
arpl
mov
push
pop
int
pushf
mov
in
pushf
mov
push
scas
xchg
cld
jg
jmp
push
int
and
ins
js
mov
aad
mov
inc
push
(bad)
cwd
std
add
lds
outs
and
mov
cld
push
xor
popa
pop
mov
xlat
scas
daa
jp
xchg
sbb
cmps
es
xlat
and
cld
cwde
mov
cmp
fst
in
aad
fidiv
lea
sub
sbb
stc
(bad)
push
mov
popa
add
data16
imul
sar
test
sub
push
rep
stos
out
cmp
mov
jns
push
add
and
xor
out
in
sub
pop
fcom
test
mov
mov
ret
(bad)
push
scas
popa
jno
aam
mov
rcr
fbstp
cld
(bad)
ficomp
xor
(bad)
pusha
xchg
pop
adc
push
pop
jnp
mov
xor
out
and
mov
jo
mov
adc
out
sbb
dec
mov
cmps
(bad)
stos
shr
add
rcl
mov
sti
ja
js
(bad)
and
nop
loop
mov
or
mov
stos
aaa
lods
jl
sub
mov
sbb
je
xchg
sub
aad
jnp
retf
dec
add
cmp
mov
xchg
adc
call
push
lds
cld
sub
add
pop
xor
jo
push
fsub
jmp
ins
popa
out
and
mov
retf
adc
mov
push
add
(bad)
test
mov
call
sbb
loop
and
mov
xchg
pop
pop
mov
push
je
xor
sar
imul
push
add
jno
xor
mov
in
jns
push
ret
clc
sub
cmp
je
dec
out
mov
retf
fwait
xor
add
mov
aam
repnz
lock
push
xchg
adc
mov
mov
ins
cmc
loop
mov
mov
cmps
mov
lods
sbb
std
out
cmp
aaa
mov
adc
dec
jl
ret
mov
inc
repnz
xchg
lock
out
mov
cld
mov
out
arpl
xor
add
xor
push
dec
adc
mov
xchg
mov
stos
out
push
fst
add
ss
pop
cwde
xchg
inc
sbb
test
cli
and
in
mov
sbb
call
scas
in
aaa
pusha
lds
pop
fwait
push
popf
push
dec
lea
fsubrp
dec
adc
scas
xchg
fnsave
ss
out
jae
push
add
sbb
sbb
mov
pop
cmp
dec
(bad)
inc
stos
into
push
adc
stos
das
sub
inc
mov
pop
jge
lods
in
movs
mov
mov
dec
push
sub
int3
iret
pusha
ret
jl
mov
icebp
les
mov
add
push
cmc
adc
movs
push
imul
push
das
dec
mov
sbb
add
mov
xor
icebp
bound
xor
fisub
sbb
sub
xchg
in
push
loopne
sub
hlt
ret
ss
(bad)
enter
push
or
pop
bound
pop
stos
sbb
cmp
loope
fcomp
cmp
push
adc
sub
sbb
adc
pop
aas
out
xchg
pushf
sub
or
jnp
xchg
mov
xor
pop
fwait
xor
in
test
setae
inc
and
ss
sbb
rcr
xor
mov
mov
xchg
inc
loope
dec
lods
ss
retf
or
or
call
dec
arpl
sbb
repnz
xor
loope
jmp
add
or
push
and
mov
or
mov
scas
int3
outs
xchg
outs
jecxz
sub
inc
dec
lods
(bad)
dec
push
ss
jo
or
mov
pop
mov
jge
or
jmp
jnp
loop
mov
or
mov
daa
mov
mov
mov
imul
cs
xor
mov
and
pusha
in
fnstenv
aam
adc
int3
(bad)
cmps
mov
sbb
or
sar
jmp
mov
mov
ds
outs
or
jmp
outs
push
push
inc
repnz
(bad)
push
(bad)
xlat
add
push
out
aad
enter
enter
retf
push
xor
sbb
push
sbb
test
fcmovne
xchg
in
mov
add
in
and
js
neg
retf
jmp
lock
div
sub
jge
cmps
dec
mov
aam
mov
rol
xchg
iret
(bad)
pop
add
and
pop
fsub
lock
sti
dec
rcl
sbb
std
inc
cmps
and
cmp
cmp
push
xchg
and
dec
gs
inc
dec
mov
lods
lods
mov
shl
in
mov
mov
imul
les
fstp
xchg
jp
mov
mov
mov
xchg
inc
cmp
stos
and
cmps
popf
jnp
jnp
shl
test
jp
sub
dec
and
pop
adc
scas
push
ins
adc
cli
je
neg
mov
push
pop
xchg
xor
cmp
out
push
inc
add
int3
inc
xchg
aad
sti
mov
mov
mov
mulps
cmps
pop
cmp
lods
xchg
sbb
jge
xchg
pusha
pop
lods
je
mov
xchg
jnp
mov
mov
test
cmp
xchg
test
xchg
pop
xchg
rol
jae
fisttp
(bad)
ins
pop
into
(bad)
out
not
nop
js
call
fdivr
aas
jmp
pusha
sahf
icebp
dec
repz
or
adc
and
sub
pop
mov
inc
add
lahf
loop
popf
cmp
cdq
mov
movs
adc
mov
push
xlat
(bad)
in
(bad)
xlat
and
(bad)
mov
loope
pop
ficom
sbb
(bad)
in
cmps
mov
lahf
adc
push
(bad)
xlat
cmps
addr16
lds
mov
and
cmp
(bad)
push
mov
cld
ror
ins
jmp
or
sbb
data16
(bad)
icebp
(bad)
dec
dec
aam
cmovs
xchg
out
fimul
aam
pop
test
inc
add
mulps
xchg
cwd
rol
and
fs
repz
xchg
loop
add
push
inc
mov
sbb
adc
sbb
mov
cs
imul
adc
and
add
mov
ror
cli
outs
(bad)
cmc
stc
cdq
mov
mov
mov
retf
clc
out
imul
push
ja
repnz
mov
repnz
imul
ret
test
mov
sub
leave
clc
lock
mov
add
mov
adc
shl
pmaxsw
ret
gs
ficom
xor
add
push
gs
ss
jmp
call
(bad)
ret
popa
lods
lock
lods
inc
(bad)
fst
lods
sbb
mov
sub
pop
nop
dec
pop
es
sbb
jp
add
mov
push
jnp
mov
push
loop
xor
xchg
xchg
sub
xchg
fs
push
and
fxam
mov
js
arpl
dec
jg
and
inc
not
sahf
in
jne
dec
lea
push
pop
cdq
sub
xor
jbe
leave
bound
test
pop
push
in
test
inc
sbb
ret
stos
test
xor
adc
jno
inc
jp
xchg
mov
fisttp
jmp
nop
jle
mov
xor
mov
(bad)
and
leave
pop
pop
adc
jle
pop
jge
push
dec
movs
adc
mov
call
jecxz
stc
aad
test
lods
mov
lahf
stc
jmp
sbb
cld
mov
push
pop
push
or
xor
xchg
not
test
mov
or
loope
cmps
dec
mov
xchg
mov
cmp
sbb
or
ss
mov
mov
and
mov
leave
inc
and
cli
loop
and
outs
leave
mov
cmp
and
popf
sti
or
imul
xchg
test
hlt
fnsave
lock
push
push
push
cmp
fimul
fs
xlat
xchg
pop
data16
mov
int
jge
fdiv
pop
inc
lahf
jne
lods
ds
push
jo
sub
cdq
je
sbb
mov
add
or
push
sub
aad
mov
dec
or
hlt
test
dec
mov
sbb
push
daa
mov
dec
aad
xlat
sbb
jp
dec
xchg
loop
mov
iret
dec
pop
out
sub
sbb
mov
ret
mov
mov
out
leave
sti
cdq
je
xchg
xor
test
inc
mov
pop
cli
jns
cmp
push
pop
cmps
cmp
mov
sub
mov
or
pop
scas
iret
mov
aam
clc
ror
sbb
fidiv
dec
pushf
push
xchg
adc
ret
inc
loope
mov
popf
push
fidiv
call
int
stos
out
adc
lods
scas
stos
int3
outs
sub
jns
jbe
stos
xchg
repnz
sub
xchg
mov
stos
mov
maxps
cmp
ins
neg
and
mov
imul
sub
mov
jg
outs
popf
or
call
mov
xchg
call
mov
mov
fist
cs
mov
pop
mov
iret
xor
into
or
movs
push
dec
push
pop
push
xor
in
push
push
pop
adc
adc
dec
push
xchg
int3
push
mov
scas
dec
nop
addr16
mov
pop
push
test
xor
addr16
dec
cmp
jmp
out
loope
pop
add
or
jnp
sbb
aas
je
xchg
in
xchg
dec
dec
out
cmp
pusha
jne
cmp
pop
dec
push
sahf
popf
push
dec
imul
sbb
add
ss
outs
push
loope
fcom
movs
adc
sahf
sbb
aas
popf
loopne
cmps
stc
cmp
ficomp
fsin
bound
add
pop
mov
fnstenv
shl
xchg
pop
shl
aaa
inc
dec
ja
cld
mov
push
dec
dec
jl
jecxz
pop
inc
xor
or
cmp
fwait
das
ret
cmp
enter
jp
cdq
imul
inc
es
sysexit
leave
dec
sbb
std
retf
mov
mov
push
in
cmp
jp
in
or
pop
imul
pop
pop
cs
jl
loopne
rcl
outs
js
xor
adc
mov
les
mov
mov
sub
mov
mov
or
dec
sub
mov
xor
in
call
lods
pop
mov
cmp
mov
jno
fs
loopne
test
jle
xchg
ss
add
ds
mov
jl
fnsave
add
(bad)
(bad)
mov
dec
(bad)
xor
jmp
jnp
push
pop
repz
jg
test
dec
push
(bad)
cli
retf
jno
dec
cs
mov
bound
aam
hlt
mov
jb
mov
clc
push
jbe
and
or
add
hlt
dec
out
jae
pop
xchg
imul
out
stos
dec
addr16
mov
call
in
inc
xchg
ret
stos
imul
fldcw
ds
cmp
bound
into
lods
and
call
mov
jns
jmp
inc
mov
dec
lock
ins
adc
adc
jge
add
clc
(bad)
pop
jo
outs
pop
or
cwde
pop
rcr
mov
push
add
push
arpl
lock
sbb
push
fnstenv
ins
or
mov
xchg
jno
mov
test
pop
fiadd
inc
xchg
jne
fsub
xlat
inc
jl
adc
mov
cwde
inc
imul
pusha
jg
push
mov
push
sub
sti
pop
mov
xlat
loope
sahf
not
inc
push
test
fwait
and
xchg
(bad)
cmp
dec
inc
or
mov
lahf
js
pop
push
shr
aam
sub
mov
repnz
stos
test
jnp
sar
sbb
cmc
push
dec
fisub
in
test
push
arpl
pop
aam
xchg
mov
sub
fwait
inc
jo
int3
fwait
push
inc
add
(bad)
sbb
push
xor
lea
jle
xor
mov
cld
mov
mov
push
fwait
movs
mov
xor
push
int
inc
xchg
clc
mov
and
push
or
inc
inc
xlat
mov
outs
mov
mov
call
jg
or
and
xor
sub
aaa
int
push
sbb
(bad)
and
aam
push
xor
repz
or
mov
jns
shl
neg
pop
inc
das
adc
xor
lds
fwait
jb
jmp
aam
fst
push
scas
dec
cmps
pop
fimul
mov
jmp
push
loopne
jecxz
je
and
ror
pop
cmp
shr
test
call
pop
enter
push
push
mov
(bad)
push
div
xor
dec
mov
rcr
clc
mov
mov
sub
in
in
in
lds
and
loope
(bad)
fst
push
shr
cs
or
mov
mov
inc
jno
pop
mov
push
jno
and
and
leave
fs
lea
cmp
xchg
cli
cld
aad
or
test
int3
jg
shr
fisubr
repnz
mov
sahf
lods
popf
pop
(bad)
mov
stc
ror
or
jecxz
clc
cmp
jno
fcomp
cli
xchg
sub
xor
xchg
lods
xchg
mov
jae
(bad)
pop
jp
addr16
inc
cmp
xchg
cmp
xchg
pop
pop
shr
sub
movs
jmp
jns
pop
pop
and
and
cmp
arpl
test
arpl
adc
mov
and
jbe
xchg
iret
mov
sub
add
cmps
in
cmps
and
stc
inc
inc
rcr
pop
inc
scas
push
mov
popa
xchg
jge
jno
sub
fs
dec
daa
mov
pop
or
iret
enter
outs
dec
dec
jnp
sub
sub
js
pop
jae
nop
call
and
ss
repz
sar
cmp
xchg
lock
lea
add
inc
and
inc
mov
mov
lock
(bad)
mov
call
sbb
mov
or
ror
pop
js
cs
cmp
dec
cmovns
int3
mov
ror
push
dec
or
sbb
jo
mov
push
rcr
push
xor
pop
inc
or
sbb
gs
sbb
fistp
not
out
jbe
pop
cmc
retf
into
xchg
mov
xor
mov
fcom
retf
rcr
int3
shr
mov
mov
dec
ret
adc
mov
aam
dec
cmps
mov
jb
add
jne
shl
inc
rol
fidivr
ret
mov
mov
xchg
add
pop
inc
fdivr
ss
add
pop
pcmpgtw
push
mov
in
int
and
and
inc
hlt
ja
jae
in
fdivr
jne
ja
sub
adc
fistp
bound
dec
lods
jae
mov
add
pop
pop
sub
sub
retf
and
adc
hlt
adc
movs
mov
addr16
call
cmp
pop
mov
std
lods
push
outs
rcl
ffreep
aas
test
int
(bad)
xchg
mov
cmc
fstp
xor
adc
cmp
or
out
sbb
iret
pop
mov
pop
jns
xchg
mov
mov
test
ins
mov
cmc
outs
add
cmovge
jno
rol
jmp
sbb
sbb
jecxz
sbb
popa
cwde
inc
pop
cmc
(bad)
cmp
(bad)
lea
xlat
xchg
test
idiv
mov
jmp
dec
jnp
push
dec
mov
jmp
and
mov
and
aaa
into
(bad)
js
test
adc
cs
int
push
sub
mov
test
mov
xchg
push
arpl
adc
jl
mov
or
cmc
loop
or
jnp
int3
out
push
pusha
scas
jecxz
mov
mov
or
outs
or
jg
fmulp
aam
adc
mov
cmc
in
sub
shl
imul
adc
das
je
movs
jl
cli
scas
push
ret
fiadd
cmps
std
into
loope
aam
dec
hlt
jne
(bad)
sar
push
daa
mov
or
and
mov
mov
inc
push
loop
out
movs
aad
mov
mov
dec
adc
in
loope
and
sbb
cmp
(bad)
out
cmps
mov
std
mov
jne
ins
xchg
mov
les
icebp
cld
push
sub
or
jmp
sti
sbb
xchg
jecxz
or
rol
add
ja
ins
sbb
addr16
inc
repz
lock
imul
cmps
lds
(bad)
adc
sar
mov
sub
mov
lock
fwait
cmp
fs
sub
xchg
div
mov
movs
aad
cmp
outs
lods
push
push
mov
lods
fsub
cwde
sub
enter
dec
jecxz
add
pop
enter
sub
cs
cwde
push
cmps
add
xchg
std
push
xor
psrlq
lea
adc
push
xlat
pop
hlt
sub
xchg
fbstp
ss
jbe
out
dec
cmc
les
sub
fisubr
adc
sbb
test
shl
repz
repz
mov
pusha
push
or
call
sbb
jb
icebp
lds
dec
inc
imul
fisttp
pop
lods
jmp
jbe
rcl
pushf
ss
fs
add
push
call
push
xchg
sbb
jae
retf
mov
dec
cmp
dec
out
push
push
mov
ins
enter
sub
int3
mov
nop
fadd
jno
xchg
mov
fs
push
repnz
or
add
fstp
adc
fisttp
push
lods
sbb
xchg
sub
dec
cmps
add
dec
inc
pop
mov
les
adc
into
jne
add
aaa
repz
in
sbb
outs
es
scas
test
loope
or
jne
retf
xor
sub
xor
inc
pop
mov
addr16
lods
dec
sbb
cmp
dec
(bad)
jl
xchg
jno
or
test
enter
jp
inc
leave
adc
mov
mov
inc
imul
mov
push
xchg
jo
push
aad
add
push
lock
pop
inc
ins
xchg
xchg
into
xor
repz
std
push
jl
and
cmp
out
mov
push
fcomp
scas
aas
xchg
pop
sub
adc
push
jno
sub
dec
mov
pop
pusha
jp
fld
or
retf
(bad)
push
(bad)
cmc
mov
cmc
stos
dec
imul
push
pop
sub
jns
mov
jl
sahf
in
loopne
imul
ja
cmp
pop
popa
popf
enter
loop
mov
movs
and
outs
nop
aad
(bad)
xchg
jp
fld
std
cdq
arpl
lock
push
dec
xchg
ins
cmps
dec
dec
mov
sub
jecxz
fcomip
sbb
in
ja
push
(bad)
movs
js
sar
rol
or
movs
(bad)
stc
cmps
jae
aam
add
xchg
fdivrp
ret
sbb
imul
sbb
pop
dec
mov
ret
repz
jne
mov
fisttp
outs
sti
sub
test
cwde
cmp
pop
enter
jo
imul
(bad)
pop
inc
jmp
adc
add
arpl
imul
dec
mov
sbb
int3
pushf
push
adc
cmps
cdq
xchg
xchg
push
cdq
ins
mov
push
mov
shl
aad
or
(bad)
jae
and
xchg
in
push
jno
lods
mov
shl
pop
jns
(bad)
sbb
je
mov
jnp
sbb
mov
repz
mov
jmp
and
adc
xchg
mov
fs
add
ins
fndisi(8087
push
ret
cmp
scas
ins
das
mov
pop
add
aam
or
push
sub
dec
pop
pop
leave
test
int
out
stos
out
das
aam
in
das
popf
pop
iret
xchg
and
pop
shl
lea
xchg
mov
loop
das
cmps
mov
movs
push
ss
aaa
call
and
(bad)
ja
mov
cs
cmp
or
out
inc
jmp
cmp
inc
and
xchg
adc
xor
xor
adc
xor
mov
adc
imul
pop
je
dec
mov
push
dec
in
inc
paddb
jno
pop
sbb
out
stc
vmovntps
sbb
jae
push
push
add
push
aaa
jns
mov
leave
mov
nop
xor
mov
shr
cs
pop
stc
push
fist
inc
sub
popf
jo
pop
pop
inc
repz
or
aas
fwait
cld
mov
sbb
pminsw
inc
movs
dec
xchg
jmp
push
pushf
mul
pop
outs
mov
add
mov
out
dec
fst
data16
push
shr
in
add
add
push
mov
test
loopne
sub
pop
pop
xchg
and
push
xchg
jb
jmp
adc
je
pusha
aaa
scas
and
in
add
rcr
out
dec
test
adc
lods
sub
mov
stos
jge
pop
fstp
(bad)
(bad)
xor
nop
jno
mov
jae
adc
fimul
fidiv
mov
leave
aam
fiadd
imul
shr
and
(bad)
jge
inc
jns
stc
idiv
push
sub
enter
and
sub
ficom
out
add
add
js
mov
inc
cwde
cmc
out
loope
jecxz
cmp
jb
adc
test
cmp
push
dec
iret
daa
in
movs
add
mov
ss
fcmovnbe
pop
sub
add
jmp
xchg
add
jne
icebp
jb
xor
jg
movs
inc
cs
hlt
test
mov
das
enter
sbb
pop
aam
jo
mov
mov
mov
sbb
or
scas
(bad)
aaa
mov
enter
aas
sbb
or
mov
cmp
pop
leave
pop
stc
ss
cmps
cmp
ins
xchg
and
aam
mov
pop
mov
cli
sbb
pop
push
jns
mov
in
into
inc
(bad)
xchg
es
cmc
js
mov
adc
pushf
sub
stos
ror
xlat
push
inc
dec
fwait
mov
mov
loope
dec
into
int
mov
and
bound
inc
bound
je
imul
mov
cmp
push
fwait
jno
fs
pop
xchg
pop
inc
xor
fsubr
add
xchg
adc
les
not
out
xchg
addr16
stos
out
adc
enter
cmp
dec
idiv
sbb
clc
nop
pop
leave
sqrtps
jb
retf
or
dec
dec
pop
xchg
lods
addr16
xchg
jns
xchg
test
mov
test
add
frstor
cmp
aaa
push
popf
das
test
add
and
sbb
mov
(bad)
in
ficomp
mov
popa
xchg
ret
xchg
sbb
xor
or
test
mov
(bad)
push
push
xlat
fadd
fldcw
push
xor
sub
push
sub
shl
test
add
pop
xchg
arpl
pushf
neg
movs
and
enter
ret
or
out
popa
jnp
shl
xchg
or
jecxz
imul
xchg
jmp
inc
stc
fs
or
mov
(bad)
cmp
lea
pop
aaa
xchg
xchg
inc
xchg
inc
push
cmc
test
cmp
or
fisttp
(bad)
shl
sub
int3
mov
push
xor
sub
retf
sbb
comiss
mov
or
inc
xchg
lods
or
add
test
mov
cwde
jp
mov
test
jno
cmp
stos
dec
mov
in
inc
jnp
mov
je
imul
cmp
nop
mov
cmp
sti
jne
mov
pop
push
int3
fnstsw
or
jno
push
mov
pop
add
cmp
cmp
xor
lahf
sar
cdq
hlt
das
add
lods
adc
jbe
loope
and
sub
retf
or
ins
sub
push
inc
inc
push
cs
rcl
popa
dec
aad
inc
imul
(bad)
jno
clc
push
inc
xchg
dec
jnp
push
mov
shl
sbb
hlt
xor
push
dec
stos
mov
stos
pop
push
mov
shl
maxps
pop
jno
jle
adc
nop
mov
fisubr
dec
xor
loope
out
repnz
jl
sbb
cdq
xchg
addr16
xor
mov
push
sbb
mov
and
in
aam
inc
jge
js
cli
scas
xlat
mov
or
(bad)
cmp
je
xor
add
xor
push
outs
lods
scas
xor
adc
inc
jnp
sbb
nop
fld
in
jl
xchg
and
mov
aam
mov
add
rcr
pop
sub
jae
pop
in
adc
ret
gs
pop
stc
jmp
loopne
cdq
or
sbb
pushf
bound
add
rcr
(bad)
pop
cmp
sub
inc
movs
cmp
(bad)
sub
and
jg
scas
ret
mov
retf
xor
mov
or
movs
mov
dec
cmps
les
sub
out
push
je
movs
mov
mov
jl
cmc
daa
ins
push
jae
or
xor
mov
inc
loop
push
ins
dec
mov
out
out
adc
inc
fsub
sub
jnp
sbb
fadd
addr16
push
das
call
pop
and
div
mov
fild
sbb
mov
mov
ret
cmp
outs
test
retf
arpl
std
cmp
sar
outs
pop
push
test
sti
scas
sti
xchg
les
fnstsw
std
adc
rcl
jnp
test
sub
cmp
add
xor
lods
lods
jmp
ret
jp
imul
xor
stos
or
pop
les
aas
in
mov
fimul
pusha
nop
std
not
inc
ret
popf
(bad)
mov
mov
jnp
or
sub
cmc
jmp
stos
cmp
jp
out
mov
call
hlt
int3
or
xor
push
add
and
jecxz
cdq
jl
out
xor
xchg
sub
out
mov
adc
ja
mov
cwde
cli
repnz
add
shr
les
jo
sub
jns
xor
jge
fadd
jbe
sbb
std
lods
xor
call
pop
jle
aam
aam
mov
out
sub
mov
jg
gs
andnps
mov
icebp
push
rcl
dec
cmp
stos
mov
push
inc
cmp
fcomp
les
popa
jno
sub
ficom
shl
addr16
das
dec
jecxz
mul
xor
aaa
mov
cmp
outs
test
push
daa
pop
push
repz
adc
(bad)
sub
or
sub
lock
outs
shl
push
cwde
mov
js
arpl
sbb
mov
loopne
cmp
pop
hlt
test
xlat
ret
mov
dec
push
pop
daa
mov
mov
test
sub
jne
int3
mov
arpl
sti
xchg
popa
ins
in
push
sbb
in
push
rol
cmp
inc
aaa
xchg
test
xchg
icebp
pop
push
popf
jo
jns
fnsave
dec
shl
cmc
xor
xor
std
push
add
pop
jmp
das
sub
mov
and
xlat
push
in
xor
add
cdq
(bad)
scas
(bad)
and
pop
retf
repz
pop
bound
xchg
and
pushf
out
repnz
dec
adc
add
cmp
or
mov
push
das
mov
test
xchg
pop
xchg
jnp
std
jo
ins
sbb
loop
xor
sbb
sub
arpl
jo
retf
out
adc
jae
sbb
pop
test
dec
fst
dec
inc
and
add
and
iret
lods
(bad)
loop
lods
mov
int
fwait
dec
jg
in
lods
test
jmp
and
jne
fisub
or
jbe
fs
push
cli
cld
jno
jmp
pop
and
sub
fidivr
inc
or
ret
add
sbb
xor
sbb
xor
add
rcl
lods
sbb
(bad)
in
nop
out
pop
pusha
adc
sub
jb
dec
sub
out
aad
dec
rcl
retf
sub
fisttp
mov
out
adc
out
(bad)
cmps
cmps
fwait
xchg
sbb
setno
mov
sbb
push
push
pcmpgtw
iret
pop
(bad)
fnstcw
xor
pushf
and
sbb
xchg
push
into
jb
cld
lock
push
jae
jl
and
call
mov
repnz
enter
fsubr
retf
sub
adc
mov
icebp
adc
mov
jmp
cs
outs
pop
fucomip
jmp
and
xlat
das
fmul
sti
sub
fisttp
lock
sbb
jge
repz
xchg
(bad)
xchg
jo
je
std
(bad)
mov
int3
xchg
mov
pop
in
mov
push
jl
xchg
and
cmp
sbb
sbb
fimul
repz
in
xor
sub
shr
and
inc
or
mov
jle
cvttps2pi
loopne
or
inc
mov
dec
shr
adc
ins
dec
dec
xchg
sahf
xor
fild
pop
mov
add
push
not
mov
imul
not
mov
push
loope
retf
jnp
loopne
push
add
fadd
popa
inc
scas
sub
pop
or
xor
sbb
xchg
(bad)
in
jno
mov
add
xchg
mov
cmc
cmp
sub
cmp
sbb
movs
js
jmp
push
push
cli
mov
jno
pop
ins
mov
mov
test
shl
iret
in
push
es
sub
mov
pop
bound
fs
pushf
or
mov
sub
and
fcomp
jno
into
cmps
pusha
add
mov
pop
jecxz
push
fldenv
fwait
push
mov
in
push
sub
cdq
push
inc
jecxz
pop
test
add
adc
mov
int
or
imul
aad
lahf
adc
cmp
imul
pop
push
jmp
jge
mov
loopne
or
dec
fisubr
not
popf
mov
in
dec
xchg
repnz
nop
adc
icebp
lock
lock
sbb
jb
mov
inc
daa
dec
sub
cmps
sbb
(bad)
push
imul
cmp
jmp
fmul
sub
call
stos
fist
outs
pusha
ret
jmp
push
cmp
loopne
nop
jmp
dec
(bad)
popa
fcom
mov
(bad)
pop
xchg
sbb
xchg
pop
and
sub
xchg
adc
cmp
fisub
out
push
(bad)
mov
adc
ret
inc
test
sub
xchg
popa
mov
cmp
cmovs
repz
sub
jnp
mov
jne
addr16
sub
dec
push
outs
and
fdivr
inc
push
cs
les
and
jmp
cs
test
inc
shl
jb
out
jge
mov
test
pop
outs
loop
jns
ret
or
mov
jle
fcom
mov
jbe
popa
je
in
nop
inc
not
or
xchg
cmc
adc
dec
cmp
add
pusha
xchg
mov
(bad)
test
aam
push
fimul
aaa
xlat
sbb
inc
test
mov
fisub
retf
rcr
xchg
jbe
mov
inc
inc
sti
mov
sti
add
cmc
idiv
mov
pop
daa
mov
pusha
movups
scas
test
lods
call
sbb
pop
ds
shl
cmps
xchg
mov
adc
dec
stos
inc
sub
inc
scas
(bad)
pop
jecxz
shl
imul
pusha
shl
aad
lds
arpl
fcomp
retf
jns
mov
cmc
xor
inc
outs
add
outs
dec
mov
cdq
sub
out
ja
xor
mov
loopne
pop
push
clc
xchg
nop
pop
jmp
popa
call
cli
mov
sub
jns
xor
lods
fdiv
cmp
dec
lahf
push
adc
lods
daa
and
push
ins
cmp
or
pop
retf
sbb
sahf
add
push
les
inc
xchg
jmp
and
add
dec
in
inc
addr16
jg
out
mov
lahf
sbb
cmp
mov
call
fidivr
retf
popf
push
es
frstor
add
xchg
loopne
iret
scas
retf
or
mov
jne
cmp
mov
xor
stos
or
jae
icebp
int
pop
mov
mov
(bad)
jmp
sbb
pop
adc
xlat
push
(bad)
cmps
aad
mov
fs
xor
sbb
std
outs
and
push
test
fdiv
pop
dec
jns
jmp
or
cwde
mov
xor
cmps
sub
push
test
inc
push
sub
sbb
sti
ret
pop
pop
jmp
inc
(bad)
adc
add
aad
sbb
fcmove
movs
dec
pop
imul
call
cmp
stos
sub
xor
sub
add
inc
je
xor
popf
pop
jl
and
xchg
ret
cwde
popf
push
out
ds
test
jb
xor
je
mov
aam
in
pushf
fs
cs
std
pop
jo
cmp
out
mul
ins
cmp
mov
jb
cmc
cmps
xchg
xor
(bad)
cmc
cmp
push
mov
fwait
mov
cmps
jmp
out
or
lds
dec
daa
push
fsubrp
lods
and
nop
neg
cld
dec
aas
sub
xor
mov
push
aam
jmp
pop
push
add
pop
push
test
pop
mov
clc
fadd
retf
cmp
pop
ret
daa
push
or
fcmovbe
dec
jg
lsl
inc
xor
jae
mov
jno
dec
inc
pop
aaa
dec
inc
sbb
jecxz
pop
fs
push
xchg
mov
pusha
clc
in
xchg
jg
loop
and
mov
cdq
test
sahf
cld
cmps
test
push
ins
lea
test
aad
movs
and
dec
and
icebp
push
mov
pop
xchg
push
sbb
push
jo
popf
jae
data16
loopne
stc
jae
mov
push
popf
push
push
sub
adc
push
call
not
loopne
or
in
aaa
mov
popf
fsubr
inc
mov
loope
leave
jle
sub
mov
(bad)
aaa
test
inc
mov
fdivr
push
out
js
ds
aad
and
inc
adc
sbb
jmp
js
push
inc
mov
and
stc
fild
dec
push
cmc
sbb
add
dec
xchg
push
das
clc
shr
inc
xlat
jo
shr
mov
add
push
out
xchg
sbb
mov
bnd
mov
xchg
xor
leave
in
mov
clc
mov
jmp
in
and
adc
xchg
mov
mov
pushf
xlat
call
push
jmp
cmp
mov
jmp
add
repz
fisttp
fsubr
cmp
rol
cwde
inc
inc
fisttp
in
retf
cmps
test
push
mov
mov
or
cmp
ja
adc
mov
repnz
mov
mov
(bad)
adc
fld
sub
dec
std
jns
out
or
into
int
(bad)
frstor
jne
inc
and
(bad)
cmp
nop
push
cs
icebp
stos
addr16
and
inc
aam
xchg
adc
arpl
in
or
es
ret
xchg
pop
inc
stc
ss
cmp
sbb
push
adc
int3
ja
sbb
ret
pop
pop
in
cmp
dec
sbb
cmp
ins
ret
or
in
retf
and
adc
ins
push
outs
inc
push
pop
xchg
inc
xchg
push
mov
pop
out
enter
jo
enter
xor
cmp
mov
mov
cwde
dec
sub
out
(bad)
fucomip
mov
sub
enter
je
ror
mov
cmp
lods
aad
stos
mov
xchg
repnz
and
xchg
gs
cmps
xchg
fucomip
lock
jbe
adc
out
cmp
fcom
je
repnz
mov
push
mov
adc
cmp
mov
dec
sbb
into
cmp
and
xchg
xchg
cmc
pusha
xchg
mov
aas
cmps
sbb
pusha
(bad)
cmp
adc
fs
pop
stos
test
sti
mov
xchg
in
in
(bad)
cmc
repz
movs
inc
cwde
ds
clc
or
jnp
inc
mov
push
fwait
ds
rcr
mov
mov
mov
stos
mov
ja
mov
add
sbb
dec
mov
fsubr
sub
mov
sub
inc
push
pushf
imul
pop
sub
mov
cld
call
inc
clc
imul
das
faddp
fs
and
inc
or
fcomi
test
mov
scas
div
xchg
cwde
xor
mov
in
mov
pusha
xor
xor
sar
movs
pop
ret
sbb
mov
shl
mov
leave
push
mov
daa
cmp
pusha
mov
xchg
sbb
cmp
je
adc
cmp
jno
ret
test
add
out
(bad)
rcl
dec
and
in
loopne
jle
dec
hlt
dec
dec
dec
push
and
adc
xor
jmp
sbb
dec
jae
mov
inc
rol
add
mov
or
and
rcl
jmp
push
sti
loop
and
add
mov
mov
retf
inc
dec
maxps
fstp
xchg
js
mov
inc
pusha
sti
pop
adc
addr16
hlt
enter
push
xor
and
jp
jnp
adc
int
dec
fsubr
fisubr
mov
test
jne
jecxz
iret
movq
push
test
test
call
mov
addr16
xchg
cld
push
cmp
pusha
cmp
imul
paddusb
das
add
xchg
icebp
das
in
jle
(bad)
cmp
aam
push
(bad)
lds
out
sub
jl
dec
dec
cmp
cmps
push
xor
loop
inc
(bad)
gs
es
imul
sbb
push
jae
int3
imul
dec
pusha
jmp
(bad)
sub
mov
ins
shl
add
fnstsw
xchg
icebp
fnstenv
xor
xor
pop
sub
repnz
mov
jmp
aaa
jo
cmc
cmp
add
adc
arpl
cmp
xchg
call
or
(bad)
leave
leave
push
xor
fxam
mov
dec
fsubr
jg
in
mov
iret
dec
das
jl
lahf
jns
sub
xchg
das
(bad)
jmp
and
or
mov
jmp
(bad)
sti
mov
jb
inc
call
call
leave
retf
push
lods
cmp
stos
mov
pop
or
loope
in
add
sbb
out
inc
add
loop
ins
ja
outs
test
inc
inc
fcom
xchg
fist
fisubr
mov
aas
sbb
call
mov
pop
loop
ds
jmp
ret
out
pop
inc
jns
or
test
mov
cmp
sub
pop
pop
dec
jo
mov
pop
imul
mov
cli
mov
fdivr
cmp
into
ds
and
pop
std
push
jns
mov
ins
mov
or
mov
cli
jecxz
sbb
nop
lea
or
jne
sti
push
cmp
pop
add
mov
mov
pop
xchg
adc
xchg
cmp
and
in
aad
fistp
std
xchg
fidiv
jge
jns
fadd
pop
fwait
jmp
dec
xor
inc
xchg
inc
adc
shr
mov
mov
sbb
push
jg
push
cmp
mov
rcl
jne
adc
(bad)
lahf
add
dec
or
sbb
dec
push
test
lea
push
test
inc
movs
movs
sbb
adc
pushf
loop
xor
ds
outs
adc
cwde
jmp
leave
jns
hlt
aaa
cmp
std
pop
push
dec
call
pop
pmullw
ins
data16
sahf
lea
js
les
int
ins
call
jnp
ss
leave
mov
push
retf
inc
push
mov
xchg
bound
pushf
xor
pusha
pop
clc
inc
aas
scas
ret
loopne
cmp
mov
jle
cmps
dec
aaa
cmp
retf
cwde
cs
rcr
push
repz
scas
test
add
das
push
fisub
aas
int
mov
hlt
lds
adc
mov
lea
stos
idiv
pop
fwait
lahf
(bad)
hlt
jmp
lock
aaa
jl
dec
pop
dec
or
push
das
push
fsubr
mov
pop
fwait
call
lock
xor
sbb
pop
mov
bound
outs
rcl
pop
ja
icebp
dec
xor
adc
iret
shl
mov
addr16
adc
sbb
dec
addr16
in
in
xlat
out
js
ins
ins
rcl
popf
mov
neg
push
popa
fs
out
scas
xchg
addr16
fwait
push
sbb
inc
mov
(bad)
mov
push
hlt
lea
jmp
mov
mov
adc
xor
imul
test
adc
dec
mov
dec
sub
cld
or
xor
or
je
mov
scas
fstp
jb
mov
(bad)
cld
stc
inc
mov
pop
stos
pop
bound
lahf
pop
mov
fdivr
aaa
pusha
retf
out
xchg
fwait
inc
jns
jge
and
mov
sar
or
mov
add
outs
ficomp
mov
mov
test
sub
mov
fcom
sub
sub
aad
xchg
out
stos
add
push
xor
mov
repnz
push
adc
mov
sar
scas
inc
dec
and
data16
adc
fs
mov
arpl
inc
iret
jb
inc
xor
js
imul
mov
jns
sti
or
xchg
jle
bound
and
push
mov
in
sub
dec
(bad)
and
mov
aam
cmps
mov
push
dec
mov
repnz
push
cs
retf
or
mov
jmp
pop
into
std
and
push
mov
dec
cmp
ror
ja
xchg
xor
clc
pusha
retf
inc
sbb
xor
sub
out
adc
lahf
repnz
fldenv
push
push
adc
out
inc
not
cmc
cs
sahf
mov
jg
test
adc
mov
out
cmp
leave
out
add
cmps
movs
mov
xor
pop
adc
adc
std
jnp
jp
push
push
mov
push
popf
push
out
jb
cmp
enter
bound
mov
popa
les
mov
std
jbe
hlt
push
(bad)
loope
cmp
aas
sbb
stos
dec
mov
xor
imul
xchg
pop
arpl
ret
xor
je
sbb
mov
stos
mov
add
sub
and
mov
cmp
outs
scas
imul
xchg
sbb
ss
adc
leave
push
mov
push
and
cmc
fstp
call
push
cmp
jmp
and
mov
dec
ficom
test
jmp
jmp
addr16
adc
or
cs
(bad)
push
leave
sub
(bad)
bound
shr
mov
scas
std
inc
dec
mov
cli
jecxz
xor
ret
cmp
cli
jp
xchg
sub
fmul
jo
inc
xchg
(bad)
addr16
ins
mul
xchg
push
repz
js
lods
and
call
hlt
cmp
xor
shl
test
dec
pushf
loopne
pop
sbb
aaa
fidivr
inc
jmp
or
push
sbb
sbb
repz
pop
cmps
dec
xchg
xchg
sahf
test
clc
ret
out
push
fcom
adc
xor
repz
jmp
das
(bad)
cmps
jmp
loopne
(bad)
push
push
xchg
and
shr
test
cli
or
ficomp
mov
stos
sub
dec
inc
leave
add
push
push
dec
hlt
sti
xor
or
(bad)
movs
cmp
push
je
jno
sti
mov
dec
push
push
mov
ins
add
leave
in
jle
xor
mov
cdq
test
cld
xchg
ins
lahf
pop
sar
scas
cmp
popa
loope
mov
and
jge
nop
cmps
add
sahf
pop
stos
push
mov
mov
xchg
or
and
jle
or
in
and
fwait
jo
loop
xor
pop
inc
sbb
push
cmp
call
xlat
and
sahf
cmc
push
cmp
cwde
ss
inc
jge
(bad)
fild
ret
mov
inc
fwait
add
fsin
or
add
mov
dec
dec
xor
cmp
jb
jg
mov
push
lods
jbe
lds
cmps
mov
inc
jne
(bad)
lahf
mov
dec
jb
jno
cmp
lds
stc
mov
cmp
mov
sub
retf
jbe
loop
adc
fs
cmp
dec
scas
adc
sub
sbb
mov
movs
jo
pop
icebp
cmps
shr
jecxz
add
pop
call
pop
pop
cmp
adc
lea
ret
sbb
jge
xchg
adc
mov
call
cmp
dec
mov
fwait
mov
ins
mov
dec
iret
lods
out
xchg
sbb
leave
jl
dec
(bad)
movs
out
cmp
stos
adc
dec
sub
out
movs
(bad)
cdq
cmp
sbb
push
arpl
pop
mov
shl
lods
cwde
(bad)
jle
jmp
mov
add
cmps
imul
sub
xor
add
jae
jbe
cmc
pop
lea
call
pop
cdq
and
xchg
ss
pop
jno
sbb
in
rol
or
inc
inc
push
cmp
cmp
imul
sub
pusha
push
aas
fdivr
jbe
fisub
retf
jmp
or
mov
jmp
jb
xlat
push
pop
sbb
and
test
gs
pop
and
xor
rcl
mov
sub
sar
or
(bad)
lods
(bad)
push
bnd
xor
imul
sub
sub
and
jnp
and
pop
aam
ror
dec
sar
or
adc
(bad)
xchg
outs
stc
xor
pop
add
repz
dec
scas
pusha
cwde
mov
rcl
cmps
cmp
sahf
mov
xor
ins
jne
hlt
pop
loopne
mov
jb
imul
fwait
pop
push
push
mov
sahf
xchg
dec
xor
cli
je
lds
pop
add
iret
paddusb
scas
lods
stos
hlt
mov
mov
xchg
add
push
adc
pushf
inc
sub
mov
pop
cmp
pop
inc
push
add
and
mov
fs
adc
mov
adc
dec
inc
jae
loop
dec
cmp
and
or
mov
pop
test
sub
or
mov
jge
pop
and
movs
add
mov
jle
in
push
xchg
jge
sbb
sbb
push
pop
lods
push
or
call
xchg
pop
adc
dec
push
xor
inc
mov
(bad)
aam
or
mov
outs
aam
retf
mov
xor
rcr
mov
lds
xchg
js
jns
ins
js
jnp
sahf
je
mov
mov
jo
test
jbe
pop
xchg
bound
sub
mov
xchg
xor
cli
mov
outs
xchg
xchg
ret
gs
push
jnp
push
jb
add
add
arpl
mov
pop
mov
and
jmp
aam
cmp
lahf
jb
cmp
mov
cmp
add
out
or
(bad)
sub
inc
inc
sahf
test
ja
jg
das
xlat
pop
shr
and
out
mov
mov
std
inc
retf
xor
adc
push
or
xlat
mov
cmc
sti
sbb
daa
aam
mov
icebp
add
inc
jmp
sbb
adc
test
or
data16
push
jge
or
je
int
lods
(bad)
push
mov
cmps
cwde
xchg
mov
aas
fld
push
arpl
fcom
sub
cli
(bad)
(bad)
fidivr
fisubr
push
cmc
fdivr
and
mov
xchg
lock
fdiv
sub
push
fdivr
les
stos
ja
inc
push
fcomi
les
xor
mov
mov
pop
and
shl
mov
daa
cmps
xlat
mov
xchg
js
and
imul
int
into
pusha
int
or
rcl
xchg
cmp
cmp
aas
xchg
pop
ins
ficomp
stos
jmp
jo
mov
push
lods
jmp
xor
jns
jns
enter
mov
push
in
add
pusha
push
xchg
(bad)
dec
mov
popf
outs
push
adc
rcr
rcr
mov
sbb
retf
mov
mov
scas
dec
js
fsubr
and
shl
fcmovne
icebp
pcmpgtd
sub
xor
test
mov
cdq
cmp
lods
ror
(bad)
fcmovu
aaa
outs
scas
pop
mov
(bad)
cmc
pop
jbe
xchg
or
iret
dec
and
fadd
aam
xor
outs
fadd
shl
dec
or
rol
aad
aas
pusha
cmc
out
fs
fild
movs
and
(bad)
push
not
movs
xor
pop
ret
rcl
sbb
and
popa
je
sar
push
and
mov
je
fcomip
call
and
xchg
dec
cmp
fimul
cdq
sbb
mov
push
pop
in
enter
(bad)
dec
stos
addr16
or
pop
out
lahf
pop
xchg
sar
loopne
movs
xor
push
sub
int
sti
hlt
mov
mov
cmc
and
call
sti
out
scas
daa
pop
fidiv
adc
xchg
push
arpl
mov
jecxz
inc
sti
ds
ja
dec
mov
or
pop
xor
bound
test
cmp
jl
pop
dec
jnp
inc
xor
ret
sbb
jmp
into
push
dec
lahf
push
stc
fsub
push
inc
loop
ja
and
pushf
int
mov
pop
mov
ins
loope
into
sbb
pop
out
es
cli
mov
idiv
sbb
clc
dec
sub
shr
xchg
mov
movs
mov
leave
mov
fdiv
lea
jbe
mov
mov
sbb
into
pop
adc
es
add
xor
adc
mov
push
pop
ret
lahf
cmps
adc
(bad)
aad
movs
push
inc
(bad)
push
ror
push
and
jae
cmp
adc
mov
dec
je
cmps
sti
ins
lock
cmps
fidiv
add
sti
lahf
sbb
out
and
sbb
test
xchg
adc
jge
call
push
imul
lods
retf
pop
ss
stos
ds
lea
ds
and
call
loope
cmp
and
popa
stos
jnp
and
sbb
out
jb
lods
fisttp
add
pop
stc
push
std
add
mov
(bad)
adc
in
test
push
test
mov
dec
mov
enter
adc
pop
pop
sbb
mov
popa
pop
js
sbb
pop
or
push
movs
test
jnp
mov
cmps
int
add
arpl
dec
mov
jg
mov
ret
or
mov
ficomp
pop
xchg
fld
add
loopne
out
je
out
mov
jno
sbb
outs
cmp
mov
xor
ss
cmp
and
mov
pop
mov
jge
retf
fadd
(bad)
les
in
sbb
loopne
dec
aad
xchg
jle
jo
or
push
pop
jmp
cmp
pushf
or
stc
jns
adc
popf
add
dec
clc
adc
jle
mov
jo
jecxz
pusha
cmp
ins
mov
sbb
cmc
movs
pop
data16
lods
or
and
retf
gs
sbb
mov
sub
mov
(bad)
mov
jmp
dec
and
mov
fdiv
lahf
jmp
mov
icebp
out
stc
sbb
sub
push
clc
int3
jge
add
xor
xchg
pop
movs
fdivr
inc
call
xchg
in
xchg
daa
aaa
imul
cmp
mov
into
jb
or
sbb
pop
shl
and
mov
adc
sbb
call
aaa
hlt
call
mov
outs
push
pop
mov
sub
leave
sbb
push
jge
or
add
mul
xchg
fucom
dec
fsubp
or
stc
and
pop
mov
into
(bad)
call
jb
dec
sbb
aad
out
adc
xor
fild
mov
neg
stc
(bad)
js
push
mov
jl
js
out
sbb
fidiv
fiadd
xchg
pop
push
mov
movs
mov
xor
and
js
ja
movs
pop
fs
stos
lahf
mov
jne
pop
out
(bad)
scas
dec
mov
ret
mov
mov
dec
repnz
icebp
and
lea
xchg
pop
loop
inc
inc
scas
test
inc
les
sar
call
cmp
pop
cmp
pop
adc
test
das
mov
xchg
sbb
lock
test
dec
scas
in
jb
dec
xlat
fdiv
cmc
jg
outs
ins
out
xchg
cmp
retf
sbb
adc
cdq
mov
scas
loope
mov
(bad)
out
mov
mov
add
push
push
ds
push
data16
(bad)
fucomip
sbb
loope
push
dec
push
dec
sub
enter
xor
or
push
sbb
rol
dec
ins
out
pop
repz
je
das
or
jl
push
in
hlt
sbb
and
ds
and
xchg
dec
outs
cmp
ret
fs
inc
push
xor
aas
xor
loope
sub
adc
push
adc
cmp
mov
popf
push
das
cmp
rcl
push
inc
inc
mov
or
es
das
pop
and
in
sub
or
aas
das
clc
add
xchg
call
cwde
add
xor
and
inc
xor
adc
pop
dec
fsub
call
addr16
pop
mov
inc
push
pop
push
mov
inc
sbb
jmp
mov
repnz
jnp
mov
(bad)
outs
jo
and
ret
add
stos
mov
jg
cmps
xchg
iret
(bad)
in
test
push
sub
mov
or
pop
loop
je
je
sbb
jmp
stc
pop
outs
xchg
dec
inc
ins
test
mov
cmp
adc
lea
sbb
mov
sub
push
inc
loop
repnz
(bad)
cmps
cmps
mov
inc
xchg
push
jecxz
rcl
xrelease
ja
mov
mov
mov
out
fmul
add
fnstcw
xor
data16
imul
es
cld
sbb
shl
xchg
xor
pushf
loopne
movs
mov
jb
sbb
mov
rol
cwde
mov
dec
xchg
std
mov
sub
sbb
jb
pusha
ror
adc
push
sbb
ja
or
xor
adc
mov
push
add
ds
dec
dec
add
inc
mov
out
or
xlat
sub
sbb
movs
(bad)
sub
mov
jmp
ins
xchg
push
push
(bad)
enter
aaa
sub
test
sbb
ds
add
cmp
cmp
fwait
mov
sbb
or
push
sub
or
add
icebp
add
inc
test
(bad)
jg
outs
mov
stc
xor
mov
and
dec
mov
fisttp
dec
es
leave
pop
jp
out
add
jecxz
xchg
push
sar
sbb
jbe
inc
cld
fist
dec
sub
mov
add
mov
ins
cld
sbb
or
movs
(bad)
jae
cmp
pop
cs
packsswb
fcmove
pop
mov
xchg
fadd
mov
xchg
pushf
loopne
pusha
or
and
add
jns
xchg
pusha
in
pop
fisttp
ficom
je
ss
push
cmp
jbe
xlat
repnz
sar
adc
daa
mov
mov
ds
pop
std
cmp
out
mov
les
mov
or
ins
push
stos
push
(bad)
mov
aam
xchg
mov
fstp
ret
sti
mov
push
lods
sub
popf
mov
add
popf
xchg
mov
popa
aas
jle
inc
lds
pop
addr16
pop
sbb
xchg
icebp
enter
pop
sub
nop
mov
scas
mov
shl
bound
inc
dec
lods
rcr
add
mov
test
sub
clc
cli
xchg
jnp
jno
or
icebp
hlt
jl
and
neg
outs
mov
mov
popf
ret
js
and
mov
mov
mov
and
xor
rcl
pusha
into
dec
es
xchg
mov
shl
(bad)
adc
mov
push
xchg
push
loope
xor
popf
ins
dec
xor
xor
ins
(bad)
int
inc
rcl
dec
jmp
adc
or
es
cmp
shufps
push
lods
lahf
daa
loop
cdq
cld
out
pop
mov
shl
and
inc
(bad)
std
fcom
call
sbb
sbb
loope
aas
sub
ret
mov
inc
cmp
ret
or
jno
dec
(bad)
test
loop
and
xor
cmps
fisttp
(bad)
ss
outs
xlat
mov
les
les
sub
mov
fbstp
add
idiv
out
stc
(bad)
(bad)
dec
ja
dec
imul
in
sti
cli
sahf
sub
jae
adc
stos
clc
mov
lods
(bad)
sbb
sbb
cmp
add
sahf
pop
xor
sub
mov
cmp
jne
mov
fwait
stos
mov
sbb
and
mov
gs
cmp
jae
mov
iret
loopne
inc
mov
std
fistp
jmp
xor
mov
mov
jne
bound
add
rcr
mov
jp
fisttp
mov
call
neg
dec
xor
mov
cmps
sbb
sub
sbb
adc
cdq
jne
inc
pushf
clc
adc
and
scas
jle
push
shl
lea
push
cs
(bad)
bound
pop
sub
add
aaa
xchg
daa
push
rol
retf
mov
push
fist
adc
mov
out
sti
inc
iret
jmp
(bad)
repz
data16
call
mov
pop
mov
clc
mov
inc
inc
dec
gs
dec
cmp
or
repnz
mov
xchg
(bad)
outs
popa
mov
or
bnd
inc
mov
js
pop
push
icebp
xchg
loope
cmp
push
pop
inc
pusha
sub
push
(bad)
sbb
leave
(bad)
jno
jp
sbb
mov
or
sub
int3
jae
push
inc
mov
sti
mov
sbb
xchg
aam
cmp
sbb
jnp
add
out
mul
fcomp
je
repnz
sti
jo
jl
ret
cmp
rcl
pop
(bad)
lods
jo
stos
int
cmp
dec
inc
fldcw
inc
cmp
ret
add
(bad)
dec
fs
sub
jb
xchg
cmps
or
ss
adc
test
push
xchg
in
pop
stc
dec
or
and
ds
inc
sbb
dec
pop
in
cwde
cmc
pop
xchg
movs
scas
sub
(bad)
sub
les
stos
jno
stc
js
push
xchg
mov
dec
aam
(bad)
fs
mov
dec
mov
mov
popf
inc
cmps
pop
and
sti
aaa
(bad)
dec
inc
dec
stos
movs
imul
aaa
leave
xor
sub
adc
cmp
push
pop
loopne
test
into
mov
and
(bad)
mov
mov
adc
icebp
loope
mov
dec
out
push
mov
lods
cmp
dec
mov
mov
mov
mov
add
out
pop
pop
cmc
lahf
mov
xchg
repz
jmp
sahf
mov
xchg
pop
jb
sti
scas
and
sub
add
cmp
jns
dec
les
or
xchg
jae
sub
xor
mov
mov
nop
nop
mov
stos
xchg
add
xlat
aam
fwait
aam
push
lock
stos
mov
xchg
mov
mov
shl
add
add
and
aam
pop
sub
dec
mov
icebp
mov
dec
mov
push
pusha
fcom
js
push
(bad)
out
sar
xor
push
mov
mov
push
cmps
(bad)
add
movs
lods
adc
arpl
push
loop
ffree
mov
jnp
sub
pop
inc
or
imul
xchg
cmp
mov
scas
(bad)
pop
int3
push
(bad)
in
sahf
adc
mov
popf
jmp
jl
rcr
pop
ret
xchg
mov
lock
dec
add
adc
sbb
jbe
dec
add
retf
mov
push
add
ins
jmp
or
std
stc
ret
adc
jno
imul
xor
dec
jp
in
inc
mov
mov
into
(bad)
call
inc
test
lfs
aas
imul
js
ja
shl
pop
dec
dec
mov
or
and
retf
js
pop
rsm
xor
pop
sti
mov
bound
fimul
popa
cwde
cmc
or
push
fsub
lods
out
mov
cmp
pushf
(bad)
cmps
inc
ds
movs
dec
and
cmps
aas
cs
das
stc
push
movs
adc
in
mov
dec
sub
add
pop
nop
pop
add
or
and
fcom
test
dec
outs
stos
call
jmp
lock
inc
stos
aad
mov
pop
icebp
inc
adc
xchg
(bad)
xor
push
imul
or
int3
sbb
sub
or
stc
jmp
out
enter
push
pop
dec
adc
aam
das
xor
retf
ins
xchg
cli
dec
add
jmp
xor
dec
popa
pop
jle
pop
(bad)
ficom
push
aaa
ins
pop
push
xor
lods
ret
push
jnp
mov
xlat
mov
push
mov
adc
push
add
ja
cs
mov
sub
pop
daa
mov
scas
cmp
pop
imul
sbb
mov
add
jne
jns
in
outs
add
dec
inc
mov
cmps
retf
out
pop
ret
dec
lahf
sub
test
and
adc
and
sbb
inc
and
cwde
dec
sbb
mov
inc
dec
scas
dec
jb
shr
iret
push
retf
fidiv
inc
mov
mov
add
cmp
push
leave
fidiv
xor
jmp
cmp
push
jae
repnz
loopne
fistp
xor
fnsave
or
test
test
sbb
xchg
mov
in
inc
mov
(bad)
cli
jmp
mov
mov
ins
clc
jmp
sub
push
cdq
mul
fcomp
mov
lea
fist
cmps
sbb
xor
push
cmp
and
xor
dec
mov
repz
sub
bound
and
or
in
adc
jne
mov
lock
or
adc
es
mov
jl
sub
sar
cmp
cwde
mov
mov
js
pop
push
mov
div
sti
dec
cmp
xchg
add
pop
and
imul
mov
sbb
into
xor
jo
xor
xor
(bad)
pop
arpl
stos
mov
call
push
or
mov
or
mov
push
xlat
stc
push
rcl
enter
mov
inc
mov
dec
fild
push
shl
mov
dec
das
pop
jb
clc
cmp
cmp
(bad)
xor
pop
add
leave
iret
idiv
mov
repz
daa
ins
pop
jg
cmp
xor
test
das
(bad)
jp
hlt
sbb
pop
push
data16
lods
repnz
rol
call
mov
mov
aas
jmp
xor
xor
or
aaa
ds
cld
movs
mov
(bad)
sti
addr16
mov
mov
adc
ret
rcr
xchg
add
add
push
cmp
in
jne
pop
push
push
sbb
(bad)
pushf
push
pop
push
pop
inc
pop
mov
mov
in
ins
adc
jbe
sti
int3
outs
ins
mov
xlat
dec
sti
call
mov
sti
cli
mov
lods
not
mov
pop
mov
test
pop
addr16
lock
in
cli
repnz
mov
and
std
dec
mov
xor
inc
movs
add
pop
clc
adc
add
push
add
xor
add
shl
dec
inc
in
lods
aaa
ins
mov
adc
add
jmp
sbb
pop
int3
in
mov
ror
dec
sub
jl
daa
pop
mov
rcl
fwait
add
stos
aaa
pop
ret
daa
pop
xlat
sbb
imul
cs
bound
mov
movs
sub
jle
dec
inc
ins
mov
(bad)
rol
inc
mov
mov
mov
mov
scas
cmp
out
mov
sub
ret
clc
pop
pushf
mov
mov
and
mov
mov
sbb
mov
nop
hlt
addr16
movmskps
neg
mov
test
mov
dec
mov
fcomp
inc
scas
add
call
cmps
push
cmps
xor
sbb
dec
out
cmp
or
nop
xchg
mov
test
jnp
dec
pop
ja
jno
inc
in
pop
mov
dec
(bad)
adc
scas
pushf
or
mov
xor
pop
mov
mov
or
xchg
add
test
xlat
rcl
or
lods
cmp
std
loop
push
gs
pop
cmps
mov
int3
mov
in
cli
cs
push
fucomip
test
icebp
xor
sub
repnz
jo
int3
xchg
int3
push
xor
into
(bad)
mov
(bad)
fidivr
fs
inc
and
mov
dec
pop
or
and
daa
jbe
inc
imul
dec
nop
dec
or
sub
fisubr
cmps
mov
push
out
lea
mov
push
or
cs
nop
cwde
mov
xchg
fist
inc
mov
icebp
(bad)
mov
les
sbb
and
xchg
cmps
or
xchg
push
in
and
shr
sub
hlt
push
std
mov
lods
(bad)
mov
(bad)
push
jl
int
mov
add
pop
movs
mov
or
movs
aaa
sub
aad
repz
add
inc
xchg
stc
loop
and
jae
xchg
popf
repnz
aaa
cmc
add
es
imul
inc
or
retf
jmp
shl
and
sub
inc
fstp
repnz
mov
into
dec
test
lock
mov
ret
fnstsw
adc
cmp
push
(bad)
das
xor
adc
fisub
push
push
fstp
popf
cdq
cmps
pop
icebp
(bad)
cmp
xor
sub
test
pop
push
and
sub
mov
pop
jbe
std
jmp
cmc
arpl
gs
in
stc
pop
call
mov
(bad)
mov
push
push
mov
pushf
sbb
mov
and
jmp
pop
and
pop
shr
and
pop
inc
push
cmp
cmp
mov
mov
into
repz
xchg
and
movs
cmp
sub
ficom
dec
cmp
xchg
ja
fld
push
jmp
fstp
cmp
ins
push
test
fdivr
outs
cmp
(bad)
pop
push
push
loop
push
fistp
bound
pusha
mov
loope
dec
fdiv
add
adc
stc
pushf
mov
jge
and
mov
dec
mov
pop
bound
cmp
or
xchg
fucomip
inc
pusha
or
mov
out
xlat
pop
sub
mov
adc
or
mov
jmp
cwde
sub
adc
dec
in
sub
xchg
mov
jo
pushf
adc
and
jns
or
shl
outs
sbb
cmps
add
loope
or
icebp
(bad)
and
ins
sbb
add
push
inc
imul
(bad)
into
and
pop
test
fisttp
fwait
into
xor
outs
push
lods
lods
push
(bad)
lock
shl
ds
or
mov
jno
leave
jne
out
in
dec
add
pop
pop
xor
add
stc
es
or
cmp
xchg
push
clc
or
pop
ror
push
lds
sahf
push
sub
fisubr
(bad)
not
jl
pop
outs
inc
jg
inc
mov
mov
out
cs
xor
movs
fadd
(bad)
xor
push
imul
mov
retf
push
push
retf
and
sub
add
adc
mov
cdq
icebp
pop
pop
adc
push
jnp
adc
outs
lea
gs
add
xchg
lods
fcmove
sbb
stos
leave
test
push
int
stc
pop
enter
in
iret
fnsave
and
test
cmp
enter
push
fiadd
sahf
cmps
repz
ins
add
dec
loop
jle
movs
and
jmp
(bad)
cdq
lock
dec
test
mov
adc
aaa
mov
or
cmp
push
call
or
sub
jne
cwde
sub
dec
out
adc
jnp
and
cmp
je
mov
scas
loope
inc
sbb
icebp
daa
jne
fld
jle
mov
xor
stos
jecxz
add
xchg
xlat
cmp
jbe
mov
popf
test
jle
fsubr
(bad)
ficomp
pop
cmp
sub
loope
iret
xor
ins
mov
fldenv
pop
pop
movs
retf
pop
push
jnp
in
arpl
scas
or
pop
cdq
cli
(bad)
inc
daa
call
cmp
xor
mov
aaa
stos
sbb
cmc
into
sbb
cmp
xchg
outs
pop
dec
lock
cmps
mov
mov
dec
daa
dec
pop
pop
test
test
xchg
jmp
int
lds
mov
ret
out
shr
push
std
jnp
sub
sub
or
das
lea
fimul
jl
ins
xchg
dec
fdivr
xor
pop
dec
dec
fmul
sbb
and
movs
fiadd
ret
inc
jle
adc
(bad)
popf
rcl
or
mov
mov
cmp
int3
cmp
pop
loop
inc
xchg
nop
addr16
addr16
sbb
icebp
stc
dec
xor
jnp
dec
(bad)
sbb
and
jmp
pop
ja
call
xor
aam
dec
dec
call
jno
out
push
aas
jle
mov
xor
sbb
mov
shl
mov
fild
xor
sbb
sbb
push
add
xlat
sub
mov
lahf
(bad)
xchg
adc
or
mov
aam
and
(bad)
sti
jns
movs
sub
push
in
mov
mov
addr16
add
push
mov
and
shl
clc
aad
and
aad
cmps
xlat
shl
sbb
inc
xor
push
neg
and
bound
mov
or
inc
jp
cmps
lea
sub
add
neg
jnp
xor
in
repz
nop
sahf
repnz
fisub
jle
sbb
sbb
mov
or
pop
cmps
dec
jecxz
push
sub
mov
shr
loope
add
mov
imul
popa
jge
inc
xlat
aaa
sub
xchg
jnp
outs
jmp
das
mov
jnp
rcr
or
aaa
add
cmp
mov
ror
add
out
xchg
cwde
aaa
ja
or
mov
outs
jmp
xchg
icebp
idiv
loop
lds
mov
xor
bound
scas
retf
int3
mov
xchg
out
movs
push
sar
test
test
sub
xchg
mov
adc
pop
gs
mov
(bad)
mov
adc
call
cld
push
test
and
imul
addr16
jb
data16
and
and
test
push
in
stos
inc
ficomp
clc
inc
fbld
(bad)
shr
addr16
fisttp
add
inc
adc
fs
and
mov
xchg
rcl
je
mov
adc
push
repz
mov
push
inc
rcr
sub
or
cmp
lods
mov
dec
mov
test
lea
mov
outs
fiadd
iret
pop
lods
sbb
addr16
xor
shl
pop
movs
pop
ins
adc
loope
mov
cmc
dec
cmps
cdq
cmp
push
and
fnstcw
pop
xchg
dec
sbb
lahf
into
out
jae
jl
jp
mov
adc
cs
push
dec
add
iret
icebp
fwait
lods
or
in
jp
ins
cld
adc
daa
xchg
xchg
mov
and
enter
xchg
in
cmp
xchg
pop
outs
xchg
fld
xchg
movs
mov
jne
lods
cmps
jmp
leave
mov
adc
jl
test
adc
(bad)
push
push
add
int3
sub
es
pop
out
movs
out
inc
into
mov
push
mov
ds
pusha
pop
xchg
sub
inc
popa
xchg
xchg
mov
pop
push
push
adc
rcr
mov
push
retf
icebp
sub
ins
out
ja
inc
scas
(bad)
mov
pop
and
add
idiv
(bad)
daa
popa
shl
sbb
or
test
push
pop
cmp
gs
sub
scas
in
rcr
loop
ds
stc
add
scas
cmp
inc
call
dec
jns
repnz
mov
test
add
jmp
or
popf
pop
and
sub
jg
pop
xchg
xchg
dec
mov
and
inc
aas
rol
mov
cmp
mov
mov
movs
push
retf
(bad)
jae
jle
ret
inc
sbb
sub
mov
lds
in
jmp
mov
lods
test
out
aaa
pop
in
fnstenv
fsub
movs
adc
mov
scas
push
cmp
mov
cmp
mov
push
aam
xor
cmp
adc
fistp
lods
cmp
jmp
dec
popa
dec
mov
mov
hlt
stc
in
sbb
sbb
or
sub
mov
push
ret
test
mov
nop
push
add
or
mov
mov
ja
mov
imul
out
lahf
es
inc
and
mov
push
sub
aaa
mov
dec
aad
adc
sbb
or
aad
or
fwait
enter
pop
jae
ins
jmp
mov
repnz
jne
stc
adc
add
(bad)
sbb
(bad)
rol
imul
sbb
xchg
mov
mov
mov
pushf
and
fistp
dec
mov
(bad)
xor
push
push
mov
or
mov
inc
loopne
push
loope
int
fistp
push
add
lods
out
sbb
stc
jnp
hlt
fiadd
div
jbe
adc
into
jbe
stos
pop
les
mov
not
inc
dec
imul
and
aad
jo
push
movs
inc
movs
dec
jg
dec
je
pop
js
cdq
jg
shr
mov
ficomp
fcomp
dec
jl
aam
jge
ret
ror
mov
loope
xchg
add
dec
dec
jmp
dec
cli
ret
and
mov
xchg
jae
jne
enter
stos
in
push
les
ffreep
test
pop
fdivr
push
shl
dec
jmp
xor
xchg
(bad)
imul
mov
mov
mov
push
sub
pop
movs
and
inc
nop
out
adc
test
ins
inc
dec
push
cmp
aas
add
mov
mov
sub
dec
mov
adc
(bad)
sbb
jp
mov
lock
cs
shl
outs
popf
cmp
div
lods
rcl
pop
lods
imul
out
outs
xchg
dec
test
mov
jle
pusha
add
mov
pop
add
fs
fwait
scas
mov
mov
inc
call
sti
and
retf
icebp
mov
lea
pop
inc
(bad)
stos
(bad)
and
dec
lahf
pop
mov
popa
hlt
jg
cmps
sbb
inc
fsubr
leave
cli
out
cmove
push
dec
aas
inc
dec
dec
sbb
outs
lods
mov
add
xlat
xor
jge
test
nop
fcom
inc
dec
dec
mov
sbb
mov
xchg
lds
stos
push
push
dec
mov
daa
mov
sub
enter
sbb
cwde
add
(bad)
int3
daa
inc
scas
fsub
sub
mov
add
adc
fisubr
pop
mov
mov
xor
cmps
mov
in
or
test
pop
sbb
ja
xor
fcomp
xor
(bad)
cli
repnz
int
push
test
loope
pop
gs
mov
stc
sbb
cmp
cwde
mov
add
xor
xlat
fwait
xor
and
arpl
push
jle
xchg
mov
inc
jp
pop
retf
ror
jae
pop
cmp
or
int
mov
(bad)
shr
pop
call
jmp
add
adc
vrcpps
sub
mov
out
int3
cli
mov
test
stos
add
ror
sbb
(bad)
in
sahf
fisttp
adc
sbb
add
mov
adc
not
ret
xor
adc
clc
test
sbb
popa
dec
sbb
dec
inc
mov
sbb
jbe
(bad)
orps
ror
sar
inc
imul
gs
cmp
dec
sahf
mov
dec
add
fadd
mov
imul
mov
not
pop
inc
adc
nop
sub
data16
push
sub
pop
inc
fist
rol
les
push
adc
shl
dec
pusha
cmp
sbb
lahf
ins
pop
lods
mov
xchg
frstor
mov
pop
inc
lock
ret
movs
test
test
add
aaa
adc
add
dec
push
mov
push
adc
rol
cli
mov
daa
jmp
mov
fcom
mov
jecxz
je
in
(bad)
loope
dec
jge
push
ds
(bad)
xor
outs
dec
mov
sub
add
inc
aam
xor
dec
pop
push
enter
pop
push
cmp
add
xchg
iret
xor
dec
or
std
inc
inc
mov
ins
cs
dec
ficom
pop
and
lahf
pop
xchg
aad
mov
or
mov
mov
fbld
leave
enter
es
out
movs
aad
fmul
jp
ja
jge
or
loope
mov
mov
push
sub
sar
adc
clc
mov
mov
jmp
mov
jecxz
adc
retf
push
(bad)
mov
adc
xlat
or
sahf
lds
in
les
in
or
ss
pop
mov
xchg
loopne
mov
inc
js
in
retf
ins
push
mov
sbb
ins
je
lea
pop
test
pop
or
push
add
rcr
push
add
jns
aam
mov
ins
cmp
push
xchg
scas
pushf
(bad)
adc
xor
stos
jmp
jae
mov
or
gs
idiv
ss
add
and
sub
ins
and
jo
sub
test
mov
add
or
imul
cmp
add
mov
rcr
mov
push
imul
dec
(bad)
std
jnp
push
xor
jns
adc
and
sub
(bad)
and
aas
dec
push
jle
pop
jmp
mov
mov
jle
cmp
(bad)
inc
mov
push
dec
sub
and
add
push
mov
xchg
dec
retf
inc
xor
nop
ffreep
pop
hlt
dec
push
icebp
les
into
jg
dec
loopne
push
jmp
dec
test
inc
jp
lods
call
add
shr
(bad)
cmp
clc
xor
cwde
jecxz
sbb
aad
sahf
xchg
push
mov
or
xor
ror
sub
sbb
push
mov
repnz
lock
xor
inc
mov
sub
mov
test
dec
and
add
out
pop
test
(bad)
lea
out
cmc
xchg
bound
in
xor
ret
test
ins
dec
stos
pop
pop
nop
push
jmp
je
add
sahf
sbb
adc
cmc
sbb
dec
aad
sub
(bad)
xlat
cwde
call
push
jle
and
stos
sub
xor
mov
pmaxsw
jbe
in
inc
inc
int
mov
sbb
or
mov
dec
mov
out
add
movs
adc
dec
arpl
mov
hlt
jl
and
sub
dec
mul
rcr
in
jge
pop
std
push
in
(bad)
cmp
push
mov
jo
ret
or
pop
fs
in
xor
lock
in
fs
pop
jns
fxam
(bad)
inc
add
sbb
mov
pushf
es
std
mov
adc
dec
xchg
clc
imul
or
cli
jb
or
cmps
adc
lds
outs
fnstcw
je
push
mov
sub
push
sub
sub
sub
je
jnp
mov
daa
push
gs
aad
mov
rcl
jl
add
add
adc
ja
xchg
gs
adc
popa
aad
dec
scas
fist
mov
push
and
sahf
sbb
aaa
or
into
or
xor
jbe
adc
mov
repz
add
(bad)
rcl
fs
leave
fidiv
or
into
add
hlt
sahf
sub
enter
test
loope
xor
in
mov
xor
call
push
mov
mov
pop
stos
and
dec
sbb
shl
inc
outs
lahf
neg
mov
shl
ret
fwait
aaa
ins
je
outs
stos
add
(bad)
sub
ja
xchg
shl
jecxz
jmp
aaa
popa
je
adc
iret
or
imul
xchg
scas
sub
adc
inc
add
or
retf
neg
sub
out
hlt
pop
pop
sub
ror
mov
push
clc
sti
fwait
sub
pusha
jne
fiadd
fcmovnbe
dec
adc
pop
mov
sti
adc
std
cmc
add
loope
outs
(bad)
and
push
push
sub
icebp
cwde
aad
lea
sbb
mov
push
mov
mov
retf
cmps
outs
inc
xor
jno
in
fs
pusha
inc
(bad)
test
pop
fild
loope
fimul
xor
jp
inc
mov
pop
and
push
inc
adc
push
add
test
push
push
and
push
test
or
fld
fild
add
retf
sbb
sbb
icebp
les
les
mov
movs
and
lds
add
xor
sbb
add
mov
movs
into
dec
mov
pushf
jecxz
or
(bad)
das
and
imul
stc
dec
jno
mov
outs
loopne
cmps
xor
repnz
scas
cmp
popf
and
out
pop
into
sub
or
movs
(bad)
je
fs
dec
popa
loopne
(bad)
das
dec
mov
sbb
xchg
call
mov
daa
mov
ror
fsubr
mov
xor
rcr
add
cmp
daa
mov
adc
lods
sbb
les
add
push
imul
fwait
or
mov
mov
mov
imul
bound
jmp
xchg
jge
dec
fnstsw
les
dec
rcl
lock
and
out
test
mov
lods
mov
pusha
inc
dec
sbb
inc
aas
ret
cs
mov
ins
scas
imul
aad
cli
aaa
in
and
arpl
out
ins
out
movs
aaa
xchg
mov
test
mov
cmps
pop
cli
inc
fistp
add
inc
fistp
jnp
push
daa
stos
inc
sbb
leave
ins
add
scas
hlt
or
jne
xchg
jnp
ins
and
scas
xlat
inc
xor
sbb
mov
in
jno
sbb
mov
hlt
cmp
repz
mov
add
mov
jmp
out
pushf
leave
sub
das
ins
push
pop
mov
jmp
cld
adc
jmp
shr
sbb
or
sub
push
dec
imul
adc
retf
lock
sub
xor
mov
sbb
jbe
push
sti
mov
pop
inc
mov
stc
in
jmp
fnsave
sbb
dec
movs
xor
adc
stos
sbb
jmp
loop
sub
add
and
jb
push
imul
jmp
es
inc
mov
mov
loop
sbb
retf
and
xchg
fcom
jg
pop
jnp
int3
lods
clc
lods
inc
cmp
inc
fwait
sub
mov
out
mov
imul
mov
aam
sbb
rol
ss
xchg
jbe
pop
mov
or
adc
ss
or
inc
aas
xor
fwait
bound
(bad)
fidivr
push
jle
and
(bad)
jae
inc
js
cwde
cmp
jmp
cmps
icebp
sahf
rcr
jns
cmp
aaa
mov
mov
dec
je
fcomp
(bad)
push
sbb
sbb
dec
fwait
in
xor
push
arpl
fwait
(bad)
mov
hlt
pop
shr
dec
push
xchg
mov
jmp
push
fild
lods
adc
addr16
aaa
sub
dec
cmp
pusha
call
mov
xchg
loop
ins
jno
xor
xchg
cli
popf
imul
arpl
inc
sbb
dec
fs
cwde
push
add
clc
enter
xchg
cwde
xchg
mov
ss
loop
add
call
pop
popa
mov
sti
jmp
jo
lock
aad
inc
xor
sbb
fldenv
fcomp
sub
sbb
sub
push
sbb
cmp
push
mov
mov
(bad)
cmc
cld
push
out
sbb
push
add
push
out
das
inc
add
push
mov
pop
adc
dec
jae
clc
pop
(bad)
cmps
fs
inc
sub
into
or
mov
and
ja
pop
ror
imul
call
fcomp
repnz
mov
cld
mov
xchg
pushf
pop
sti
fadd
jbe
fidiv
cmp
icebp
fld
mov
mov
ja
pop
(bad)
mov
xchg
pop
out
dec
lods
jge
xchg
xchg
cmp
and
std
push
pushf
icebp
(bad)
xor
or
push
jle
mov
pop
ins
add
jmp
ss
test
lahf
aas
add
xor
scas
es
movs
jp
std
push
scas
out
pop
add
stc
gs
pop
mov
adc
lea
add
(bad)
cmps
hlt
stos
popa
dec
pop
xchg
jge
jbe
hlt
(bad)
call
sub
mov
push
pop
ror
sub
pop
popf
pop
and
xor
mov
cmps
das
mov
in
or
or
fidiv
pop
fstp
inc
pop
dec
scas
pop
mov
or
dec
or
inc
sbb
mov
dec
(bad)
mov
mov
cmp
mov
imul
das
daa
lahf
in
cmp
sub
stc
dec
adc
cwde
and
in
mov
test
inc
repnz
es
fcom
repnz
and
sbb
mov
repnz
test
xor
xchg
pop
ja
ret
push
push
cmovl
pushf
lds
(bad)
or
test
fldcw
mov
cmp
mov
(bad)
jo
mov
add
cmps
(bad)
test
mov
mov
jae
mov
ja
popa
shr
sbb
loopne
fisubr
dec
pop
call
(bad)
dec
jb
in
je
mov
cmp
fsubr
add
pop
cmp
movs
xor
fcmovu
(bad)
(bad)
fadd
or
shl
jbe
retf
dec
movs
into
stos
cdq
pop
cmp
and
jecxz
fimul
and
cmp
(bad)
loopne
movs
push
imul
stc
test
push
repz
stc
mov
rdtsc
movs
add
dec
mov
not
jmp
mov
adc
sbb
pop
scas
leave
mov
and
popf
mov
add
jo
pop
hlt
mov
xor
movs
inc
mov
div
xchg
pop
and
(bad)
mov
inc
mov
push
ret
fwait
rcr
imul
outs
test
(bad)
mov
cli
dec
arpl
xlat
es
xor
js
and
cs
popf
lods
xchg
cmp
sar
fidiv
pop
jp
dec
fild
jmp
das
cmp
jne
aam
lods
ss
in
imul
dec
in
shl
jbe
xor
or
pop
mov
adc
cmp
in
(bad)
fmul
and
xor
jnp
sbb
lock
xchg
push
add
mov
pop
mov
test
pop
cmp
and
push
nop
adc
sahf
fld
sahf
adc
mov
mov
mov
hlt
xlat
imul
aaa
jbe
inc
push
sub
mov
push
ss
push
pop
pop
sub
dec
cmp
push
(bad)
into
pop
loope
retf
test
es
add
std
int3
sub
pop
retf
cmp
xchg
sub
sti
ret
adc
ret
and
mov
push
daa
shl
adc
push
add
mov
int3
clc
inc
sbb
sahf
sahf
ss
dec
(bad)
in
cmp
leave
mov
mov
mov
fstp
scas
adc
push
lods
push
fadd
test
mov
jo
ds
clc
mov
loopne
scas
(bad)
inc
and
sbb
mov
push
sub
jge
loop
(bad)
fsubr
push
mov
pop
xor
shl
popf
push
xchg
retf
jl
push
xor
add
scas
lods
mov
xchg
fild
mov
out
je
mov
xchg
mov
push
shl
dec
iret
sahf
cmp
bound
in
jne
push
and
mov
fdiv
inc
mov
out
fmul
(bad)
cld
mov
data16
not
mov
jl
cmp
mov
mov
pop
xchg
pop
add
out
das
retf
ins
mov
fnstcw
pop
sub
out
call
adc
test
mov
arpl
add
mov
test
imul
(bad)
inc
push
and
lock
jge
mov
push
icebp
sbb
pop
or
outs
mov
not
stc
cmp
(bad)
call
add
(bad)
jecxz
jle
ret
fs
shl
xchg
pop
sub
mov
bound
cmp
lods
push
pop
inc
cmc
cmps
add
jmp
fbstp
fwait
jnp
mov
lods
cdq
or
aad
jne
retf
std
pop
sar
mov
les
jl
cmp
jne
add
add
adc
jae
fwait
and
mov
ret
cmp
mov
mov
ins
mov
or
sbb
ins
shr
adc
(bad)
in
mov
xor
push
imul
retf
mov
out
xchg
jmp
ret
int
shr
jle
cmp
fldz
test
mov
push
call
jecxz
(bad)
sbb
stos
jl
es
jmp
pop
mov
stos
add
retf
jcxz
fmul
pop
jb
call
pop
mov
cmps
dec
movs
hlt
(bad)
out
xchg
rol
add
mov
out
inc
in
pop
cmp
leave
popa
in
mov
fcmovnb
sub
push
inc
jecxz
outs
mov
shl
mov
rcr
lods
lahf
add
and
pop
mov
push
test
out
sahf
fstp
rcr
and
jmp
and
mov
push
bound
jb
xchg
mov
mov
rcr
add
sbb
inc
sbb
cmp
jge
popa
repnz
or
xor
sti
mov
lds
(bad)
or
xlat
mov
xor
xchg
out
or
inc
jge
data16
pop
cdq
xor
xor
xor
pop
inc
cmp
out
xchg
bound
hlt
pop
xlat
cmp
dec
mov
xor
fcomp
push
sti
in
nop
xor
jns
(bad)
jbe
and
jo
aam
mov
push
adc
jno
and
test
outs
cmp
idiv
xchg
jl
ins
mov
dec
sub
scas
pop
int
sahf
aaa
call
(bad)
cli
mov
mov
inc
adc
sbb
inc
ret
sbb
jns
repnz
movs
loope
sbb
pushf
jecxz
(bad)
rcl
inc
test
xchg
(bad)
mov
sar
jp
into
in
jle
sub
mov
xchg
lods
push
jae
mov
adc
fsub
movs
and
adc
inc
inc
dec
xchg
mov
inc
loope
ret
adc
es
outs
adc
jle
lds
shl
stos
mov
fdivr
pop
or
xchg
jle
mov
sbb
ins
adc
ja
sub
xchg
adc
or
mov
mov
lock
clc
jge
or
in
lods
leave
mov
ins
dec
mov
mov
call
mov
mov
mov
in
push
jmp
push
mov
jno
lds
mov
loopne
ja
nop
rdtsc
loop
and
out
sbb
pop
rcl
leave
push
pusha
sub
pop
and
pop
jmp
push
(bad)
jo
xor
stc
mov
and
dec
test
or
or
mov
and
ins
add
xchg
push
lods
sub
or
jp
push
sbb
mov
xchg
int
aam
jno
les
fsub
int
test
adc
and
sbb
push
js
pop
mov
fs
addr16
mov
(bad)
jo
sti
pop
mov
shl
nop
ins
jbe
dec
dec
imul
leave
(bad)
xchg
lods
cmc
mov
mov
fwait
inc
and
sub
js
jns
dec
jmp
and
xchg
mov
adc
sti
js
int3
push
es
fidiv
shl
aam
loopne
fisub
and
fwait
js
add
shl
mov
xchg
fidiv
in
mov
in
pop
cmps
jbe
jo
jecxz
int3
xchg
fidiv
shr
sub
inc
adc
jle
xchg
call
pop
gs
and
inc
mov
nop
inc
(bad)
ds
movs
jge
mov
mov
mov
xor
ja
test
outs
idiv
and
loop
pop
int
enter
movs
mov
mov
rcl
xchg
dec
daa
xchg
pop
pop
je
enter
mov
sbb
and
dec
push
les
jmp
ror
test
movs
or
sub
mov
lods
scas
mov
test
mov
movs
xor
mov
jno
or
(bad)
(bad)
leave
(bad)
sub
hlt
xor
adc
or
add
or
jg
pop
sbb
or
sub
xchg
or
pop
ret
xchg
fs
stos
push
jae
int
pop
imul
clc
xor
cmp
jle
rcl
into
xchg
jecxz
pop
popa
xor
pusha
mov
adc
into
movs
popf
(bad)
xchg
js
pop
and
adc
dec
pop
daa
gs
jb
or
fucomip
push
lahf
hlt
xchg
enter
movs
outs
pop
or
jns
lmsw
or
shr
push
push
dec
push
push
rcr
dec
fmul
xchg
mov
data16
iret
cs
xor
popf
fisttp
shr
outs
inc
ret
sub
pop
sti
test
pop
inc
sbb
cmps
add
jg
cld
pusha
cmp
xchg
setle
dec
sbb
xchg
test
ret
sbb
les
ret
cmp
cmp
xchg
push
shl
xor
adc
mov
cli
mov
ror
fstp
sar
mov
add
addr16
push
movs
push
test
mov
mov
xor
and
or
pop
mov
scas
mov
sbb
cmp
jb
bound
out
fist
shl
sub
mov
out
nop
stos
pop
ins
aam
jmp
push
pusha
cmp
arpl
xchg
mov
xchg
dec
aas
lahf
fnstsw
rcr
pop
stos
mov
(bad)
icebp
mov
push
in
and
mov
call
inc
or
call
cmp
mov
mov
inc
jnp
mov
add
scas
push
fild
imul
jl
xchg
add
test
xchg
ins
aad
jg
mov
shr
xlat
aas
dec
repnz
inc
loopne
and
push
dec
adc
push
push
gs
or
adc
jae
push
xchg
mov
cmp
inc
jns
cmp
out
mov
in
xor
sub
ins
inc
cs
retf
push
mov
out
daa
loope
cld
cdq
xchg
sub
mov
xchg
aad
xchg
movs
mov
sbb
popa
not
adc
jns
mov
iret
ins
adc
imul
inc
ret
add
pushf
cmp
add
push
jne
pop
ins
je
ins
fnstsw
sub
add
mov
jno
jl
lock
repnz
test
push
pushf
vmovaps
adc
sub
in
and
push
jae
or
jae
aaa
cmp
mov
mov
push
add
loope
inc
mov
lods
test
mov
cmp
stos
and
mov
pop
int
push
jae
inc
fxch
or
test
fwait
shl
mov
or
cmp
xchg
add
pop
and
push
inc
mov
loope
adc
or
fisubr
xor
in
jmp
adc
xor
stos
adc
mov
arpl
mov
mov
loop
rcr
mov
(bad)
lea
icebp
cwde
das
lock
or
pop
and
add
fld
or
sbb
adc
or
jmp
arpl
jns
sub
mov
mov
push
add
(bad)
leave
ss
mov
push
jmp
test
inc
or
mov
sbb
cs
sbb
mov
(bad)
out
jo
mov
scas
mov
push
push
xchg
inc
adc
ret
add
sbb
cmp
in
inc
xchg
xor
movs
pop
stos
pop
repz
je
pop
mov
mov
sbb
popa
leave
test
stos
lock
addr16
sbb
fcomp
leave
push
in
cmps
scas
jns
test
mov
jb
jecxz
mov
push
sub
inc
outs
mov
mov
nop
imul
cmp
mov
pop
es
outs
mov
out
jp
mov
out
cli
pop
add
mov
retf
dec
std
jno
rcr
dec
add
popa
cmp
mov
js
hlt
ret
xchg
ja
cld
cli
lods
sti
repnz
xor
(bad)
sbb
fild
mov
(bad)
fcomip
ins
sub
mov
ficom
jle
lahf
xchg
sbb
xor
movs
xor
mov
out
sub
outs
adc
stos
retf
mov
pop
add
nop
pusha
cdq
sbb
pusha
cmp
pop
int
out
push
jle
jmp
push
add
cmp
dec
adc
inc
or
bound
adc
xchg
mov
and
dec
and
xchg
cmc
inc
(bad)
aad
enter
inc
xchg
push
push
xchg
mov
(bad)
stc
mov
lds
into
outs
pop
popa
into
ja
ss
call
lahf
aaa
fdiv
adc
or
push
jge
sub
sbb
dec
mov
das
int3
test
sbb
fist
jp
(bad)
fadd
adc
inc
inc
and
mov
mov
xor
lock
push
pop
loope
mov
imul
jecxz
or
in
outs
push
fsubr
aad
adc
pop
cmc
ins
das
rol
dec
add
stos
sub
dec
add
or
sub
stos
add
cmp
xor
dec
and
int
std
mov
retf
out
dec
push
sub
push
pop
jno
bound
mov
aas
fcom
pusha
sbb
cs
mov
fmul
jge
add
pop
in
jnp
daa
scas
js
mov
push
bnd
or
aam
stos
or
lock
in
lods
mov
or
imul
cmps
and
mov
inc
sbb
cmc
fdiv
mov
int
aam
aad
sub
bound
or
ret
sub
aad
(bad)
push
adc
sub
mov
sub
push
and
and
hlt
gs
push
or
and
bound
cmc
lahf
test
dec
pop
mov
xor
push
outs
popa
(bad)
fild
ror
sub
sbb
sbb
daa
xchg
dec
stc
cmp
jmp
inc
dec
(bad)
xchg
ret
adc
add
add
xor
mov
lds
stc
adc
mov
movs
dec
inc
sub
mov
push
cmp
daa
test
pop
push
aam
jae
sbb
add
or
je
div
adc
mov
ret
test
test
sti
retf
aas
dec
xchg
xchg
adc
inc
jge
xchg
(bad)
push
cmps
sbb
push
adc
retf
mov
mov
or
cmp
sbb
sub
and
mov
rcl
sti
loopne
sub
jbe
and
pop
(bad)
ds
icebp
cmp
pop
jb
inc
cwde
shl
push
ret
sub
xchg
xor
mov
aam
or
(bad)
mov
outs
loop
mov
inc
mov
adc
data16
inc
mov
cli
jbe
add
and
rol
pop
int3
push
mov
je
sbb
call
data16
test
(bad)
daa
lods
lahf
xchg
mov
inc
cmp
pushf
cs
cld
mov
add
rcl
push
rcl
shr
mov
cmc
neg
test
push
dec
imul
fbstp
mov
inc
das
or
call
and
rol
and
dec
inc
xchg
inc
adc
or
pop
hlt
and
scas
jno
mov
cmc
xor
mov
push
mov
mov
inc
mov
push
or
rol
arpl
enter
add
push
mov
in
lock
cmp
stos
pop
sbb
in
sub
movs
arpl
call
mov
in
jb
fdiv
bound
dec
outs
mov
fs
adc
cli
jp
ja
add
mov
pop
mov
jmp
cmp
dec
pushf
imul
int
adc
cmps
cli
jle
sbb
fst
mov
enter
xor
xchg
dec
xchg
xchg
jne
cmp
fimul
push
fisub
cli
and
je
cdq
inc
scas
in
not
loopne
xchg
add
xor
inc
jecxz
ret
dec
(bad)
fistp
mov
xchg
pop
mov
jns
inc
imul
sbb
xchg
sub
jl
dec
pop
pushf
mov
sbb
inc
js
imul
rol
push
je
out
jns
cdq
pusha
jp
push
add
mov
pop
fild
push
pop
xor
push
sbb
xchg
inc
mov
or
jo
sbb
xor
and
xchg
popf
test
ret
es
out
mov
adc
xchg
mov
scas
sahf
imul
inc
dec
fwait
or
or
inc
cmps
inc
test
push
into
enter
jp
inc
jle
jle
rcl
adc
ins
inc
xor
jne
retf
or
loop
or
xchg
das
mov
push
push
jle
cmp
jo
jmp
xchg
xchg
pop
dec
pushf
int3
aaa
sar
inc
mov
push
mov
cmps
retf
jb
or
or
cmps
push
mov
icebp
push
icebp
and
jnp
jg
pop
call
adc
or
inc
fidiv
mov
test
push
add
popf
xor
(bad)
shr
and
mov
gs
loop
pusha
push
shr
dec
lds
popa
enter
lahf
push
mov
data16
dec
mov
cdq
xor
mov
cmp
mov
xlat
ds
leave
cld
mov
fucomip
pushf
jae
push
mov
xor
aaa
cmps
out
outs
pop
mov
ss
mov
leave
adc
mov
mov
cdq
fdivrp
cmp
add
and
mov
add
and
psubsw
push
cmp
and
mov
mov
adc
int3
retf
(bad)
inc
xor
mov
pop
loop
xchg
mov
push
imul
mov
jb
mov
fmul
mov
cmp
jle
out
pop
mov
xchg
pop
cld
lock
sahf
cs
pop
sub
jae
test
fsub
ja
xchg
jbe
inc
cmp
test
or
dec
cmp
mov
mov
in
inc
pop
and
mov
jno
mov
adc
icebp
pop
inc
xlat
clc
dec
sub
push
jp
cmp
push
add
pop
rcl
fs
inc
inc
mov
push
icebp
(bad)
mov
and
xchg
push
adc
daa
mov
in
call
mov
test
jge
ret
cmp
jp
nop
mov
sub
test
inc
mov
xchg
mov
or
hlt
imul
inc
inc
imul
cdq
push
adc
or
push
or
fidiv
mov
fsubr
fisubr
jmp
ins
(bad)
cld
add
dec
mov
adc
std
mov
cdq
cmp
gs
mov
hlt
add
aam
jecxz
mov
add
add
push
push
or
out
gs
lods
test
test
jnp
and
loope
inc
imul
adc
in
das
outs
stos
sti
test
mov
dec
cmps
jbe
jae
mov
push
in
xor
or
cmp
popa
data16
stos
je
sub
adc
ss
add
jns
lods
adc
out
inc
test
mov
outs
adc
leave
scas
mov
idiv
or
es
movs
arpl
push
xchg
inc
fdivrp
cs
ret
and
inc
jle
sahf
jne
lods
aaa
sub
inc
mov
mov
mov
cld
into
or
dec
ror
(bad)
in
aaa
or
pop
jb
pop
gs
xor
js
pop
div
adc
and
test
sar
mov
push
push
aaa
jb
lods
cld
dec
jns
jbe
push
mov
sub
(bad)
pusha
enter
sbb
(bad)
and
mov
retf
mov
int
stos
cmc
sar
and
xor
add
mov
mov
ret
lahf
push
out
call
fstp
xchg
and
call
aad
aam
out
sub
sub
xor
add
and
scas
(bad)
popf
sahf
add
mov
cli
mov
ror
pop
in
cmps
mov
(bad)
jb
lds
and
cwde
xchg
add
mov
sub
pop
dec
sub
push
stc
lock
adc
xchg
je
das
or
adc
sahf
call
xor
retf
rcl
push
mov
fs
arpl
test
and
fild
mov
mov
push
div
outs
(bad)
mov
into
lock
adc
lds
cmp
cmp
imul
or
test
sbb
jo
push
(bad)
adc
lds
inc
mov
mov
pop
fsubrp
push
push
sbb
mov
(bad)
pop
in
test
(bad)
mov
sub
inc
ret
or
test
pop
imul
jmp
xor
div
pop
dec
jo
dec
jle
stc
into
inc
and
pusha
push
(bad)
jno
lods
por
ja
mov
push
arpl
and
bound
jno
cld
mov
lock
repnz
sti
pop
push
adc
fdiv
add
sbb
jne
rcl
sahf
adc
out
add
stc
mov
pop
(bad)
in
jo
mov
or
adc
sahf
es
fdivr
pop
retf
push
nop
mov
jmp
add
shl
inc
adc
out
test
mov
inc
adc
sbb
jecxz
mov
inc
bound
push
retf
cli
dec
mov
test
or
cmps
mov
adc
cmp
push
mov
or
je
lock
jmp
pusha
dec
enter
add
repnz
push
add
out
in
shrd
add
stos
sub
ins
sub
and
adc
cs
idiv
xlat
cmp
(bad)
mov
add
inc
sahf
jmp
popa
das
out
add
iret
xchg
repz
gs
jno
ss
xchg
push
mov
sub
loop
dec
ins
outs
lahf
jle
jp
aas
into
rol
xor
mov
(bad)
data16
out
jb
ins
and
xor
imul
imul
pusha
popa
sbb
mov
int3
adc
test
xchg
cmps
out
pop
lahf
xchg
rol
lods
pop
int3
dec
or
pusha
in
xchg
adc
stos
ror
cmp
jp
or
mov
mov
push
sub
push
add
sbb
loop
cld
mov
adc
xor
lea
arpl
in
xor
jno
sahf
ds
or
mov
sub
add
aas
push
dec
arpl
push
fistp
cmp
or
mov
inc
int3
push
inc
clc
jge
cmps
sbb
dec
fst
pop
jmp
cdq
sub
xchg
(bad)
mov
mov
or
js
mov
jecxz
gs
xchg
or
jnp
daa
cld
adc
scas
push
dec
xor
jae
add
js
test
gs
mov
cwde
fst
mov
(bad)
lea
out
fxch
je
adc
xchg
icebp
push
jecxz
leave
sub
fs
xchg
sub
pop
push
inc
enter
inc
shr
pushf
xor
inc
or
inc
inc
rcl
in
and
sub
lock
sbb
test
mov
enter
popa
lock
jp
inc
xor
push
and
(bad)
or
out
sub
or
ss
cmp
dec
daa
aad
push
fs
data16
call
sub
sbb
cs
adc
cmp
xchg
pop
stos
jb
cmp
inc
in
lahf
je
push
imul
dec
frstor
cmps
sahf
enter
movs
fild
rcr
stos
jo
xchg
test
scas
adc
mov
ror
outs
inc
or
push
mov
jnp
mov
stc
xchg
mov
std
mov
fnstenv
add
sub
stc
inc
cmps
cmps
adc
add
pop
outs
or
push
mov
shl
pop
fucomi
mov
ins
dec
arpl
ins
adc
pop
cld
gs
pop
mov
arpl
bnd
mul
fwait
push
add
aad
mov
mov
jmp
cmp
mov
add
dec
pusha
cmps
or
es
or
mov
sbb
(bad)
ins
or
cmp
dec
lods
jbe
sbb
(bad)
out
pop
pop
js
repz
push
(bad)
imul
jo
sbb
call
lods
dec
mov
inc
cwde
in
push
lock
fwait
imul
add
in
iret
mov
enter
fidivr
pop
mov
pop
mov
mov
push
add
imul
out
push
inc
pushf
jns
xor
cwde
add
push
aaa
das
out
jmp
shl
dec
or
adc
adc
jl
test
add
and
and
sub
push
clc
mov
add
jne
or
mov
adc
inc
mov
leave
aad
cmc
push
mov
addr16
fdivr
jno
jno
icebp
fdivr
mov
push
test
push
push
test
mov
and
sbb
leave
or
jae
test
xor
jbe
push
xchg
sub
imul
xchg
cmp
jo
mov
jl
push
test
sbb
in
das
aaa
push
out
fs
or
mov
dec
xchg
aas
sub
dec
in
pushf
outs
and
dec
in
icebp
adc
(bad)
pop
jmp
mov
ss
adc
adc
cmp
fwait
retf
cmc
fisub
sub
fwait
cwde
call
retf
pushf
bndldx
in
outs
out
repz
push
jnp
jge
inc
mov
int
sbb
jmp
push
bound
movntq
fsub
jb
mov
mov
adc
jmp
xor
dec
(bad)
lds
scas
cmps
mov
not
ins
scas
mov
sti
lock
add
cli
xor
or
(bad)
sub
mov
jmp
xchg
mov
push
inc
or
jb
dec
les
repnz
and
test
or
nop
and
mov
add
adc
xor
movs
ins
mov
xchg
add
call
ror
div
pop
loopne
sbb
cld
xor
loope
push
ret
push
inc
jmp
mov
mov
in
jge
inc
xchg
xchg
and
mov
fs
dec
add
mov
call
das
bsf
cmp
xor
push
inc
stos
cdq
pusha
imul
mov
xchg
xor
push
inc
popf
into
data16
or
mov
mov
adc
inc
jne
adc
leave
and
retf
in
adc
inc
jnp
xor
out
push
xor
mov
fild
sub
xor
xor
push
mov
push
push
xor
pop
push
dec
out
stos
fcmovb
(bad)
fsub
sub
fld
mov
xor
sub
std
mov
je
sub
jns
mov
movs
ja
ins
inc
fwait
aad
fs
jecxz
mov
fcmovb
arpl
(bad)
ds
jnp
adc
and
les
push
in
rol
mov
pop
arpl
shl
inc
adc
leave
dec
cs
(bad)
jge
sub
in
cmp
inc
(bad)
xor
sub
sbb
jae
xlat
jmp
leave
sub
ds
push
mov
dec
xlat
mov
or
(bad)
pop
pop
into
loopne
dec
pusha
sbb
movs
inc
jp
and
aas
jl
stos
dec
mov
inc
sub
fnsave
shl
stos
pop
dec
pop
lods
push
cli
stc
push
(bad)
sbb
sub
ret
aad
dec
pusha
and
xchg
out
clc
and
mov
fimul
or
adc
xchg
fnstsw
je
push
mov
mov
mov
xor
sub
imul
(bad)
bswap
jecxz
mov
and
mov
call
jg
popf
inc
in
lock
mov
pop
push
int
dec
shr
xchg
mov
push
push
fcom
rol
xor
enter
sub
pushf
cmp
jge
and
jae
adc
push
jmp
mov
leave
fisttp
sbb
sub
aam
push
arpl
xchg
mov
mov
sub
adc
sub
jmp
out
dec
xor
cmc
das
and
adc
inc
cld
inc
adc
mov
in
test
mov
stos
sbb
cmps
push
sbb
bound
or
adc
stos
aad
push
adc
xor
and
dec
sub
cmp
scas
test
lods
call
popa
jno
aaa
sub
jbe
pop
dec
push
and
inc
and
xor
sub
jge
jmp
sbb
pop
cwde
mov
push
mov
sub
cmp
test
popa
outs
inc
arpl
inc
icebp
cmps
retf
xchg
cmc
mov
ror
jge
pop
ret
sbb
xchg
ins
sbb
mov
test
fmul
and
push
xor
or
sbb
dec
and
nop
jp
fisttp
adc
push
cs
stc
cmc
mov
(bad)
shl
dec
stos
aad
mov
add
push
into
(bad)
adc
fdivr
iret
jnp
imul
cdq
mov
add
sbb
mov
stos
and
jmp
and
popa
xchg
push
sub
fmul
cmp
cmp
jg
dec
outs
sub
rcl
test
jmp
fs
dec
into
dec
inc
(bad)
jg
xchg
mov
jmp
(bad)
jo
pop
outs
lods
popf
cmp
fcmovbe
push
inc
repnz
leave
ja
bound
shl
cld
dec
cdq
mov
aad
and
aaa
mov
pop
xor
xchg
and
sub
inc
pop
loopne
push
nop
mov
inc
aam
and
(bad)
rcr
out
mov
scas
imul
and
mov
mov
and
or
jp
data16
lea
jl
test
jne
sahf
pop
pop
dec
not
cmp
dec
xchg
stos
sar
push
xchg
dec
sub
jecxz
movs
jl
inc
sbb
ja
add
jle
xchg
aas
dec
(bad)
jb
test
add
mov
ret
sar
das
jp
push
or
pop
cmp
shr
jg
ins
sbb
sbb
je
sar
add
daa
inc
inc
inc
jnp
jle
stos
push
pop
loop
test
mov
xor
and
push
mov
and
adc
sub
repz
call
and
test
dec
fcomp
pusha
sub
fisubr
sub
or
mov
dec
adc
leave
jmp
aam
dec
(bad)
pushf
rcr
mov
and
mov
loop
sub
call
mov
cmps
push
pop
add
jo
lods
mov
js
mov
scas
loop
jmp
lods
cmp
es
call
ja
sbb
popa
xlat
dec
iret
xor
in
mov
fidivr
dec
sar
pop
sahf
push
(bad)
mov
mov
test
mov
xchg
or
mov
mov
xchg
push
sbb
daa
hlt
and
jg
lds
cmp
or
fdiv
sub
loop
xchg
aad
test
inc
pop
mov
jg
mov
mov
push
mov
mov
add
sti
mov
mov
sub
mov
sub
das
and
push
ss
mov
xchg
lods
and
int3
pop
(bad)
push
pop
push
push
int
pop
or
popa
(bad)
adc
gs
mov
or
in
mov
push
(bad)
mov
jns
sub
xchg
fsubr
mov
pop
mov
ret
inc
jns
adc
popf
jmp
sbb
movs
mov
xchg
sbb
jbe
and
dec
mov
out
push
or
out
sbb
in
push
jle
adc
adc
cmc
xchg
jns
jl
cwde
jo
push
mov
jo
xchg
mov
xchg
cmp
shl
xchg
out
cmp
adc
or
call
xor
std
sub
or
fwait
xchg
add
sbb
mov
push
or
dec
fidivr
pinsrw
add
mov
leave
adc
jl
ds
aaa
jg
adc
fwait
xchg
inc
pop
shl
adc
aam
push
add
or
pop
mov
sbb
push
popa
jbe
mov
xchg
or
sbb
xor
sahf
nop
pop
test
cmps
dec
push
push
cmp
enter
mov
and
xlat
ret
add
add
mov
ds
push
pushf
and
(bad)
dec
sahf
faddp
mov
stos
test
cwde
or
pop
adc
xor
push
rcl
pop
jmp
enter
push
bound
push
pop
mov
int3
test
loopne
mov
cmp
or
clc
mov
xor
adc
inc
ss
dec
js
xchg
mov
sub
push
xchg
fisttp
inc
rdmsr
xchg
fisttp
pop
inc
ins
push
or
(bad)
in
jmp
gs
pop
lock
pushf
repz
or
mov
lock
pop
sbb
inc
aaa
or
outs
lea
cmp
xor
mov
mov
sub
(bad)
std
sub
add
out
cdq
je
jge
call
xor
cli
push
jbe
xchg
or
stc
rcr
dec
mov
fisubr
es
stc
std
je
sbb
xor
xor
or
mov
sbb
(bad)
xchg
or
sub
mov
jge
stc
sbb
sbb
xchg
mov
mov
lahf
add
adc
lea
frstor
sbb
mov
dec
inc
add
add
scas
rcl
inc
xchg
imul
sbb
movs
dec
add
push
pop
mov
sub
cwde
jae
mov
dec
retf
cmps
mov
jmp
scas
jae
pushf
daa
jne
lods
(bad)
outs
shl
pop
inc
lods
jmp
cmc
ds
in
pop
outs
sbb
mov
clc
cli
fild
or
or
jmp
imul
mov
movs
ss
mov
sti
outs
stos
xchg
add
sti
out
lods
sub
movs
mov
(bad)
inc
sub
cli
data16
jnp
cdq
pop
mov
adc
sbb
leave
mov
ficom
cmp
or
sahf
cwde
cmp
scas
(bad)
cdq
xor
add
adc
fimul
cmp
jnp
ins
adc
je
out
mov
popf
cmp
sbb
hlt
mov
or
(bad)
pop
sar
add
pop
dec
lds
sub
push
xchg
rcr
movs
ret
jge
aas
gs
inc
out
inc
mov
mov
stc
and
imul
inc
dec
jmp
add
lods
xchg
cmp
jp
inc
mov
and
in
pop
sbb
add
push
ins
cdq
push
push
(bad)
ins
jo
hlt
ds
test
test
mov
add
jb
out
inc
les
xor
xor
dec
inc
push
mov
in
call
cli
and
pop
sub
mov
imul
pop
xchg
lea
add
add
aad
fimul
or
xchg
push
inc
dec
pop
int
(bad)
ins
pushf
mov
repnz
mov
and
jp
add
pop
std
mov
pop
jmp
pop
inc
fsubrp
bound
inc
sbb
lods
push
jb
into
dec
pop
mov
lea
aas
dec
jne
adc
fadd
xchg
jmp
loopne
aad
jbe
(bad)
(bad)
xor
movs
mov
iret
test
dec
sbb
jp
and
push
add
adc
and
inc
movs
sbb
add
call
test
fnsave
sub
sub
sbb
pop
test
xchg
sbb
dec
aam
dec
pop
jb
popa
pushf
div
push
adc
sti
ins
jp
pop
or
and
push
fstp
pushf
int3
in
ret
inc
xlat
inc
push
cmp
mov
clc
fwait
sbb
test
dec
ins
out
and
ficomp
cmps
ror
js
lock
retf
in
or
sbb
pop
xor
out
add
test
push
enter
int
jl
inc
xchg
sahf
adc
stos
mov
inc
test
test
adc
sub
in
and
in
push
jmp
sbb
inc
add
pop
sbb
mov
stos
loopne
mov
or
std
cmp
and
in
out
int3
in
pop
mov
arpl
aaa
push
adc
lea
icebp
inc
xchg
(bad)
sbb
adc
nop
mov
jmp
push
mov
and
jge
aam
retf
mov
cdq
fldpi
fs
jns
cld
add
fst
xchg
out
jmp
ffree
gs
add
rcr
xchg
inc
xchg
loopne
and
cmp
je
pop
mov
mov
sbb
cmps
xor
push
add
jae
pop
das
(bad)
mov
push
int3
adc
sub
mov
jnp
fcomp
int
push
(bad)
retf
or
pop
bound
pop
and
mov
and
fistp
aam
or
sub
jg
inc
loope
pop
push
mov
rcr
cmp
cmp
dec
arpl
in
adc
add
cwde
cmp
fsqrt
jo
int3
mov
movs
je
ja
xchg
lahf
or
mov
gs
cdq
and
inc
adc
dec
pop
inc
aam
ficom
jbe
ret
in
dec
fcmovb
cld
je
mov
add
pop
jp
sahf
scas
int3
in
jecxz
xor
and
adc
cwde
ins
push
or
push
push
lea
cmps
pop
(bad)
push
inc
jecxz
cmp
mov
inc
in
popa
push
loopne
sbb
mov
jne
adc
dec
add
inc
mov
cmp
or
mov
and
addr16
sub
xchg
fsubr
and
fnstcw
push
cdq
xlat
ds
lods
int
mov
sub
mov
std
xchg
mov
xor
ret
add
dec
pop
or
pop
sbb
adc
retf
push
jl
sbb
pop
pop
push
push
cli
iret
ds
aad
cmps
jmp
(bad)
mov
ret
gs
in
(bad)
jmp
adc
(bad)
mov
sti
jg
retf
push
cmp
fisub
jnp
retf
push
mov
inc
push
sahf
adc
jns
xor
dec
push
add
jl
inc
fbld
lods
cld
jmp
cmc
mov
and
or
adc
ficom
sub
psllw
jbe
fwait
stc
ins
inc
adc
in
mov
mov
push
lock
jne
addr16
cmp
sbb
das
test
imul
loope
pop
and
cmp
sahf
adc
add
add
xchg
js
fxch
ror
pop
cmp
jae
mov
sahf
daa
xchg
ins
jno
ins
hlt
imul
cmp
sti
sub
inc
jb
daa
xor
(bad)
aad
or
ror
jb
jbe
shr
dec
ret
or
add
leave
psrlw
xchg
xor
lods
out
sub
or
shl
adc
call
popf
sub
outs
adc
shl
push
out
xor
xchg
dec
and
ins
push
jl
adc
mov
movs
cmp
ins
xor
cs
add
mov
jne
out
xor
pop
cwde
push
push
inc
dec
pop
out
mov
sahf
xchg
jge
add
fiadd
jbe
dec
mov
movs
xchg
or
jbe
ds
nop
retf
inc
inc
xchg
aas
sbb
loop
ja
jmp
js
sub
mov
les
mov
or
cmp
cmp
rcr
and
(bad)
mov
fwait
sub
not
sub
sub
jns
dec
jne
jae
aaa
xor
jmp
xor
pop
pop
mul
xchg
pop
jle
addr16
pop
idiv
jns
mov
ds
(bad)
jnp
loop
fld
(bad)
std
scas
imul
(bad)
cld
retf
sub
or
add
xlat
adc
lods
shufps
adc
adc
sbb
in
rol
sbb
cwde
jo
movs
pushf
das
fwait
dec
pop
dec
cld
aas
dec
rcr
out
pop
mov
fwait
sbb
(bad)
and
mov
fdiv
(bad)
sub
mov
jb
mov
add
dec
cmovne
pop
sahf
and
je
aam
xor
mov
pop
test
sbb
fwait
and
push
enter
cmp
in
mov
push
inc
mov
or
outs
movs
dec
dec
in
std
stos
retf
iret
lods
sar
jge
push
or
in
inc
mov
sbb
pslld
and
xchg
test
xor
fisttp
pop
stos
fbld
xor
sbb
lea
mov
adc
jnp
(bad)
stos
pop
pop
or
push
inc
pop
test
loop
mov
ins
jno
fadd
xor
pop
rcl
xchg
pusha
rol
cli
push
fidivr
loopne
inc
push
jp
fwait
jmp
jbe
mov
ror
inc
add
push
call
push
or
jl
mov
outs
loop
aas
sbb
js
cmp
icebp
repz
fucomp
jno
shl
dec
aad
mov
shr
enter
out
push
mov
jmp
data16
movs
lea
lods
rcl
hlt
jae
pop
jne
adc
aad
aam
xchg
sub
cmp
popf
push
xchg
lds
out
mov
lods
jno
aaa
mov
rep
pop
and
shl
(bad)
push
mov
sti
(bad)
outs
inc
mov
or
sbb
aad
sbb
jmp
ins
retf
std
and
mov
sbb
xor
sbb
add
jbe
jmp
mov
loope
ret
icebp
pop
test
cmp
neg
call
cmp
adc
stos
mov
sbb
rcr
ret
sub
fwait
lock
test
or
les
retf
inc
sub
mov
xchg
jmp
xor
mov
dec
jbe
sti
jo
out
fcmovbe
xor
xchg
leave
cli
pop
add
xchg
pop
shl
xchg
in
xchg
call
mov
xchg
(bad)
popa
lods
in
sub
jae
(bad)
and
retf
fild
and
xchg
fidiv
rcl
cmp
cmp
mov
(bad)
iret
inc
pop
sbb
stc
loope
cmp
fs
call
ret
or
lods
and
fdiv
jecxz
cmp
xchg
or
(bad)
std
mov
mov
loopne
dec
cmps
adc
jmp
dec
int3
mov
imul
out
xchg
out
imul
(bad)
in
mov
ja
mov
inc
ret
cmps
into
nop
in
mov
not
mov
lods
mov
(bad)
sbb
xchg
out
ins
add
mov
adc
adc
pop
mov
jo
outs
and
adc
fs
jp
and
and
pop
daa
mov
xchg
ror
out
repz
mov
data16
rcr
adc
(bad)
mov
jne
loopne
jmp
dec
daa
cli
pop
push
idiv
popa
jno
into
mov
xor
in
push
mov
jmp
mov
or
adc
popa
sub
push
repz
mov
inc
sbb
loopne
mov
stos
inc
inc
je
pop
repz
mov
push
inc
dec
mov
sbb
mov
and
inc
mov
or
or
add
fiadd
jmp
(bad)
pop
mov
add
fmul
and
xchg
mov
push
test
sub
mov
adc
mov
das
mov
adc
fiadd
dec
int
mov
xchg
xor
in
nop
dec
lods
pusha
and
sahf
nop
xchg
aas
adc
je
ins
or
pop
into
xor
das
mov
sub
addr16
cmp
mov
mov
sub
leave
das
inc
stos
jge
ins
push
out
xchg
dec
dec
mov
frstor
pop
popa
rcl
ja
inc
pop
xor
arpl
push
lods
ins
jne
dec
hlt
js
mov
iret
jo
aas
or
jmp
fsub
inc
push
xchg
jp
and
pop
push
jo
das
sbb
outs
lahf
icebp
cld
fnstsw
ins
fdiv
xchg
push
aas
push
pop
das
dec
adc
pop
icebp
in
sbb
loopne
ins
or
in
xor
out
push
pop
test
daa
add
jg
rcl
jl
mov
xchg
ret
scas
xchg
xor
mov
int3
sbb
das
and
jle
mov
dec
adc
call
mov
into
inc
jmp
(bad)
cmp
jge
pushf
cmp
out
mov
pop
xchg
mov
xchg
sub
cmps
imul
repz
je
and
mov
fsub
fdiv
repz
jl
fwait
sar
jne
sti
sbb
pop
pop
mov
push
or
imul
add
pop
sub
push
adc
fdivr
xchg
dec
call
pop
ds
lods
mov
cmps
dec
xor
aas
mov
cs
xchg
popf
inc
xor
adc
ds
mov
cwde
repnz
adc
bound
cmps
or
lahf
scas
stc
dec
and
jmp
sbb
je
push
sbb
stos
in
cmc
rcl
sbb
es
lds
rcl
repz
jmp
imul
mov
lods
xor
icebp
mov
and
xchg
jne
leave
xchg
mov
jecxz
stos
pop
dec
push
and
add
int3
pop
out
rcl
mov
mov
and
scas
shr
fild
xor
movs
jae
in
in
jecxz
imul
mov
jp
test
pop
dec
imul
or
cmp
pop
fist
not
aaa
shr
or
movs
and
adc
icebp
jnp
add
or
in
cmp
jp
dec
jb
jg
cmps
vpsubq
out
adc
inc
outs
mov
or
pop
dec
sub
dec
sub
sbb
mov
mov
call
std
push
ins
aam
ds
dec
sbb
dec
div
popa
jecxz
nop
add
jge
popf
fwait
es
dec
jecxz
dec
sti
dec
push
ja
iret
or
pop
aad
cmp
cmp
imul
mov
inc
pop
mov
xchg
movs
cmp
das
mov
retf
sbb
test
gs
jl
je
ficomp
aad
leave
add
int3
add
ja
and
and
lds
xor
add
add
sub
mov
mov
mov
movs
push
scas
cmp
mov
pop
aam
jge
jg
retf
fidiv
ja
pop
retf
ror
mov
ret
lahf
ins
sub
pop
pop
add
clc
test
add
out
(bad)
dec
mov
or
xchg
inc
xlat
push
dec
ret
pop
mov
mov
cmps
adc
xor
jns
in
mov
add
mov
jae
js
cmps
addr16
mov
dec
call
add
loope
xchg
test
test
pop
clc
sar
inc
sub
adc
nop
push
in
popf
retf
push
(bad)
inc
(bad)
repz
dec
stos
xor
mov
into
addr16
in
sahf
neg
out
fidiv
test
pop
out
bound
pop
aaa
jnp
in
sub
push
mov
cmc
xor
daa
dec
push
js
mov
or
jno
inc
and
jne
hlt
aas
(bad)
lgs
out
pop
add
dec
sub
je
hlt
jb
xor
cmps
xchg
fstp
cmp
sub
pop
mov
fld
inc
ins
mov
cdq
jno
icebp
sub
(bad)
mov
jle
xchg
kxnorb
mov
mov
dec
mov
push
paddw
int
jo
mul
push
push
add
repnz
ss
or
xchg
cs
dec
lods
sti
retf
outs
stc
jmp
out
pop
xchg
movs
push
adc
icebp
call
inc
jmp
into
or
or
lods
mov
inc
adc
mov
(bad)
(bad)
adc
mov
cli
repnz
or
call
popa
nop
cli
add
scas
jge
push
and
mov
(bad)
cs
jnp
cmp
shl
out
xchg
in
aam
(bad)
or
and
dec
shr
jge
gs
shr
or
call
clc
arpl
std
mov
popa
loope
cdq
les
imul
bnd
mov
sub
pop
pop
mov
shl
push
dec
sbb
or
les
mov
fsub
fist
mov
sbb
xor
hlt
repnz
movs
gs
dec
clc
xor
push
xchg
(bad)
(bad)
mov
dec
jo
pop
sub
clc
mov
popf
mov
cmc
ins
ja
xchg
inc
and
imul
ret
inc
in
mov
sub
test
jecxz
sub
inc
adc
cmps
(bad)
and
xchg
in
or
ja
jne
cld
outs
stos
bound
or
adc
inc
xor
fwait
and
mov
inc
sub
call
adc
and
push
push
ss
retf
pop
leave
sbb
jne
xor
fidivr
adc
jns
sub
test
das
push
pushf
jmp
mov
and
xor
pusha
std
push
test
cmp
ss
sbb
add
jge
push
jl
mov
mov
es
adc
aam
lds
cmp
int
repnz
adc
xlat
or
and
mov
xchg
sbb
aas
push
sub
imul
stc
(bad)
popa
mov
lds
cmp
cmp
loop
pop
ret
loopne
sub
jge
mov
int3
sbb
mov
add
jg
push
mov
in
fsubr
jg
mov
jnp
jmp
loopne
test
ror
pop
cmps
xchg
shr
lock
jns
out
inc
jmp
cmps
(bad)
sti
shl
add
jae
dec
dec
mov
rcl
add
mov
dec
ins
int
xor
pop
lahf
scas
sbb
jp
pop
js
cmp
pusha
enter
pusha
(bad)
dec
popa
sbb
aaa
mov
jmp
mov
xlat
pop
cmp
pop
jne
jecxz
and
sub
(bad)
movs
iret
sub
lds
and
outs
adc
inc
call
repz
mov
mov
rol
sbb
test
dec
retf
xchg
add
movs
mov
out
stos
ins
and
mov
adc
add
repz
iret
mov
xor
shr
out
icebp
dec
inc
retf
cmp
ins
mov
jne
or
lods
daa
(bad)
adc
dec
inc
add
retf
lods
xchg
or
div
(bad)
mov
movs
pop
jne
enter
cmp
sbb
mov
mov
add
xchg
arpl
add
xchg
imul
test
shl
mov
es
aas
icebp
sar
mov
aad
sub
in
(bad)
mov
push
sbb
cli
fild
retf
jp
fst
pop
push
jle
movs
mov
movs
push
lods
sub
or
mov
lods
or
sti
test
cmp
push
mov
test
sub
mov
cmp
and
mov
adc
call
iret
cmp
pop
ja
mov
stos
and
and
or
add
or
in
test
cmp
fst
popf
dec
out
sbb
xor
loop
and
pop
adc
dec
sub
cdq
movs
push
sub
out
test
push
popf
in
sti
cmc
dec
sbb
lds
or
sti
repnz
xor
popa
into
and
dec
mov
mov
mov
push
inc
jmp
lods
dec
sbb
mov
cdq
lods
xor
leave
xor
(bad)
ins
fbld
pop
ds
sbb
sbb
lds
jb
ss
movs
add
xchg
sbb
push
mov
shr
scas
(bad)
xchg
jmp
ret
fdivr
lods
ja
js
outs
ins
mov
xor
push
test
mov
push
mov
push
sti
sti
mov
sbb
lock
aam
add
icebp
inc
sbb
ins
pop
stos
movs
mov
and
mov
add
push
inc
(bad)
gs
push
rcpps
cmps
xor
adc
pop
aas
adc
shl
retf
push
test
sub
enter
mov
cwde
dec
es
lds
ret
mov
inc
cld
rcl
inc
rol
call
add
ds
fist
mov
hlt
inc
adc
add
cs
(bad)
sbb
aad
je
imul
stc
in
lahf
sbb
sub
cmc
dec
mov
loopne
fmul
xchg
shl
(bad)
ss
daa
and
adc
mov
aad
pop
jmp
dec
test
xor
push
inc
xor
iret
out
jae
in
xchg
rcr
int3
popf
rcl
jb
inc
push
movs
sbb
sub
xor
pusha
repnz
mov
jg
fsubr
adc
mov
dec
jle
xlat
mov
into
fs
js
fwait
xchg
pushf
sahf
(bad)
dec
xor
xchg
cmp
adc
xchg
scas
addr16
lea
rcl
loope
sar
cmp
fdiv
jge
gs
out
xchg
mov
pusha
cmp
fs
addr16
lods
xchg
jo
pop
dec
shl
loopne
inc
dec
dec
pusha
test
cmp
das
pop
add
retf
lock
cmp
dec
dec
mov
xchg
movs
scas
jno
call
xchg
xchg
mov
pop
pushf
mov
xchg
inc
or
xchg
or
lods
cmp
add
shl
push
nop
loopne
pop
adc
push
push
adc
push
push
iret
rol
push
std
jmp
mov
sbb
adc
das
cli
xor
out
popa
iret
mov
or
cli
in
inc
inc
js
xchg
in
shl
out
mov
mov
adc
aas
mov
cmps
push
pop
pop
scas
push
outs
out
push
mov
(bad)
fdivr
aam
dec
cmps
cmp
rcl
scas
test
shl
xlat
adc
sahf
(bad)
push
in
cmps
lea
xchg
mov
jns
rcr
xchg
sbb
push
sub
sbb
sahf
mov
mov
jecxz
(bad)
mov
int
xor
xchg
mov
and
out
pop
adc
dec
jno
test
ja
mov
gs
aaa
shr
test
aas
out
push
pop
or
cmps
inc
cmp
xchg
mov
ror
dec
mov
in
jbe
or
or
stc
dec
push
leave
xor
sub
das
loop
in
jbe
lods
push
mov
inc
jecxz
fldcw
lods
repnz
mov
jecxz
aas
arpl
xchg
jmp
or
jecxz
scas
jae
lahf
(bad)
and
popf
push
push
pop
movs
(bad)
or
out
loope
push
test
xchg
fs
or
mov
les
mov
and
popa
or
mov
inc
outs
push
pop
aas
add
sahf
outs
sub
std
inc
or
cld
jmp
ins
add
int
adc
sub
lahf
sub
js
out
sbb
mov
mov
sbb
xchg
outs
scas
add
fcmovne
lahf
shl
pop
and
lock
cmp
lock
cmp
push
mov
(bad)
neg
mov
cli
faddp
cmp
iret
das
ret
mov
or
push
(bad)
in
retw
and
pop
cmc
aaa
sbb
push
int3
pop
rep
shl
sbb
cwde
push
lea
sbb
dec
ins
jg
xor
dec
jo
ds
out
lea
xchg
jge
cmps
scas
test
xchg
jmp
add
cwde
fst
test
or
adc
bnd
cmc
xor
lds
push
pushf
cld
pop
push
shr
fnstsw
loop
in
jno
call
aam
ss
jne
adc
adc
push
lods
inc
cmp
outs
fisub
mov
pop
xlat
pop
and
out
in
hlt
sbb
xchg
aad
mov
in
mov
lock
xor
jmp
dec
xchg
cwde
add
sbb
jmp
out
dec
(bad)
mov
(bad)
cmps
cli
pop
pop
ins
ss
ret
dec
mov
adc
sub
mov
mov
xchg
sub
jmp
jns
adc
test
pusha
sbb
leave
mov
push
xor
clc
in
in
shl
test
fwait
int
test
mov
pop
xchg
pop
push
cwde
inc
push
sub
adc
sbb
jg
inc
frstor
push
jnp
sub
stos
jmp
push
cli
pop
sar
inc
inc
clc
pop
push
push
aam
call
inc
aam
scas
xchg
pop
pop
xchg
mov
ja
cwde
call
dec
cmova
(bad)
adc
in
mov
xchg
ret
add
push
daa
sub
jl
mov
pop
xor
or
retf
iret
mov
fdivp
mov
outs
test
ror
inc
xchg
mov
adc
mov
adc
jno
push
imul
ins
test
jbe
xchg
out
mov
mov
push
enter
outs
mov
pop
sub
leave
dec
leave
dec
and
pop
xchg
inc
call
pop
es
rcr
iret
dec
xchg
jmp
cmps
and
dec
inc
pop
fisttp
jno
sahf
dec
fmul
pop
jae
cmp
shl
imul
dec
popf
sub
or
lahf
or
mov
xchg
sbb
push
ret
shl
inc
pop
pop
(bad)
in
xchg
rcl
fstp
cwde
xor
push
adc
imul
cmc
int
xor
xor
enter
outs
jns
aam
(bad)
xlat
jge
aaa
out
gs
into
pushf
es
sub
test
pop
jmp
int
aam
jle
or
push
xchg
test
daa
mov
jnp
call
pushf
adc
les
jge
lock
jnp
mov
pop
idiv
push
xchg
dec
je
out
and
mov
mov
retfw
call
cmp
sbb
lods
rol
xchg
mov
icebp
xor
and
jecxz
js
dec
mov
dec
loope
outs
lock
(bad)
sbb
pushf
clc
fadd
fidivr
neg
rcl
jns
fisttp
aaa
jo
dec
jmp
stc
xchg
inc
sub
jl
imul
retf
int
pop
fwait
and
or
mov
lock
fwait
mov
es
mov
and
pop
jmp
push
iret
mov
mov
cmp
adc
call
lds
push
bound
stos
arpl
fcomp
push
jmp
test
jbe
dec
sub
inc
nop
pop
pop
aaa
push
hlt
call
ret
sub
aas
js
lahf
sub
push
cmps
or
pop
int3
sub
cmp
pop
or
in
ins
add
repz
xchg
aad
push
test
cmp
add
ret
push
push
cmp
ss
test
sbb
cmps
call
add
add
fcom
loope
pop
add
mul
faddp
test
aaa
mov
pop
idiv
fwait
push
sub
xlat
into
inc
adc
xchg
xor
sbb
adc
dec
into
hlt
aad
daa
pop
movs
sub
ins
jle
push
mov
sbb
xor
adc
fstp
cmp
data16
xor
sbb
add
mov
dec
les
(bad)
jge
pushf
fsub
xor
pushf
frstor
les
in
jmp
xchg
frstor
push
and
add
sbb
fmul
fnstcw
rcl
cmps
enter
mov
stc
jno
xor
outs
pop
scas
mov
rcl
jmp
inc
sub
push
fiadd
inc
fstp
adc
and
in
inc
call
xchg
mov
repz
jb
pop
or
mov
int3
into
fiadd
jg
xchg
aad
ror
sub
sub
xchg
nop
fstp
push
popf
sub
cli
pop
cmp
not
psrad
xchg
movs
leave
sahf
mul
pop
and
pop
sbb
jnp
movs
call
test
sub
call
clc
jb
cmp
pop
xchg
dec
and
sbb
mov
es
les
and
jb
adc
push
dec
ficom
and
sbb
rcr
aad
sub
sbb
xlat
imul
out
push
fistp
icebp
aad
mov
in
cmp
mov
dec
jmp
inc
pop
jns
add
test
inc
call
fs
daa
retf
push
mov
call
aaa
mov
cmp
dec
daa
xlat
sub
dec
add
test
sahf
jae
mov
mov
outs
push
mov
stc
mov
cs
mov
call
push
mov
out
sbb
sub
fcmovnu
out
imul
lods
repnz
repz
data16
(bad)
pop
into
int
int
mov
add
inc
jmp
dec
adc
or
in
mov
aas
and
popa
sbb
or
mov
pop
push
pop
ja
cmp
sbb
xchg
mov
out
xchg
in
aaa
xor
push
aad
push
cld
jmp
in
ss
cmps
das
jns
ds
nop
mov
adc
push
jne
loope
mov
push
sub
and
mov
cmp
addr16
adc
cdq
es
and
bound
jne
lds
jo
mov
ja
dec
aas
inc
jae
adc
xchg
movs
jnp
out
mov
in
in
mul
adc
cmp
jge
fcmovnb
and
mov
push
pushf
push
es
rol
in
ret
rol
dec
xchg
push
cmp
and
outs
jo
add
cmps
adc
xor
cmc
fcom
pop
xchg
rcl
les
add
loop
sti
fmul
add
imul
cmp
mov
jl
xor
pop
mov
call
hlt
gs
jno
(bad)
sbb
cmc
push
loope
and
test
sub
ja
popa
sub
sahf
fcom
aam
jne
addr16
xor
add
mov
jmp
pusha
xor
jge
addr16
fdiv
xchg
push
inc
sbb
bound
scas
cmps
jae
lods
(bad)
and
inc
fwait
jnp
jnp
retf
mov
cs
mov
test
imul
movs
inc
dec
sub
cmp
aam
mov
repz
out
mov
cmp
push
push
repnz
jae
out
dec
fnstenv
(bad)
pop
inc
and
fist
lods
xchg
in
and
push
outs
shl
add
jb
mov
mov
popf
cli
and
mov
addr16
dec
mov
icebp
jle
push
cmp
movs
bound
enter
and
outs
pop
outs
sti
lock
adc
push
pushf
add
jnp
jge
mov
and
xchg
inc
scas
push
cmp
loopne
sbb
jae
int
add
adc
pop
push
mov
std
push
add
adc
push
xor
(bad)
and
xlat
scas
xchg
sub
sub
mov
fmul
cli
fld
jmp
sbb
push
fisub
cmc
sub
retf
fcomp
adc
mov
mov
js
dec
jae
arpl
cmp
bound
sub
shr
sub
add
adc
in
jp
scas
out
mov
sar
mov
dec
pop
jne
lods
xor
cmp
and
sbb
pop
cwde
dec
dec
je
movs
inc
jmp
mov
pop
mov
push
mov
loop
ins
ins
dec
mov
out
sub
sti
xchg
sub
repz
out
dec
(bad)
rcl
test
leave
fsub
xor
out
sub
add
call
imul
loopne
xchg
mov
push
pop
inc
add
into
mov
out
cdq
enter
retf
jnp
cmc
stos
nop
inc
ror
mov
inc
sbb
adc
ror
pop
repnz
mov
fld
repz
inc
and
test
xor
dec
lahf
mov
rcl
or
mov
sbb
pop
push
sbb
sbb
fbstp
sbb
or
push
adc
(bad)
fsub
xor
fst
lea
pop
std
mov
add
retf
mov
jo
icebp
push
dec
add
popf
mov
dec
into
jle
lods
xchg
int
sub
mov
outs
or
clc
into
fimul
mov
or
pop
pop
and
cmp
test
gs
mov
imul
ret
mov
push
sar
js
mov
sub
jae
les
dec
sub
dec
fld
xor
add
addr16
jl
shl
outs
add
sbb
fs
xchg
push
or
in
in
xchg
lds
int
jle
jp
loopne
call
cmp
(bad)
cwde
iret
push
and
mov
push
test
fstp
ret
jae
hlt
mov
xchg
xor
movs
adc
ficom
fs
cmp
fstp
imul
mov
adc
mov
mov
xor
jne
push
xchg
shl
mov
iret
rcr
mov
push
stc
add
bound
mov
dec
add
push
pop
aaa
lods
cmp
jmp
jb
inc
fidivr
push
out
jg
add
or
inc
sub
inc
cdq
or
fnsave
pop
lods
cmc
fimul
jbe
lea
sar
xchg
jo
mov
fld
fdivr
sub
hlt
int3
inc
jo
ins
add
mov
pop
dec
hlt
xor
xchg
jl
mov
inc
adc
mov
in
or
ret
and
pop
inc
add
jg
and
ret
pop
ja
ins
inc
xchg
push
lahf
lahf
mov
mov
pop
iret
mov
and
sbb
fwait
(bad)
mov
xor
cwde
sub
rcl
jge
pop
(bad)
mov
aaa
push
data16
test
cli
mov
cld
inc
push
xchg
ins
adc
sar
xchg
mov
sbb
jb
mov
cmp
mov
and
push
in
jl
mov
add
pop
repnz
mov
add
nop
imul
push
mov
mov
jno
cld
jo
(bad)
jge
test
loopne
jle
pop
cmp
enter
in
xor
mov
(bad)
mov
mov
stos
repnz
mov
dec
xchg
sbb
leave
arpl
mov
out
test
xor
lds
imul
les
(bad)
pop
add
cmp
pop
clc
(bad)
push
cs
sbb
maxps
int
and
stos
pop
sbb
push
lds
loopne
mov
push
(bad)
cmp
pushf
or
aas
(bad)
adc
imul
imul
sub
shl
push
cmc
mov
call
jmp
(bad)
cli
jl
out
cdq
push
jb
(bad)
stc
fdiv
fild
(bad)
test
gs
add
or
loopne
sbb
into
xor
test
cmp
push
push
mov
idiv
push
fs
and
xor
out
(bad)
xchg
adc
push
inc
or
pop
mov
pop
mov
mov
jbe
jb
popf
add
fcmovnb
fimul
out
stos
inc
pop
aaa
mov
stc
mov
out
dec
mov
xchg
mov
les
cmp
xor
aas
aam
jmp
fwait
adc
add
dec
fist
sub
pop
pop
sub
mov
inc
test
and
push
add
xor
adc
fcomi
sbb
mov
jge
mov
scas
push
pop
js
or
xchg
pop
lds
inc
(bad)
(bad)
or
cmp
mov
sahf
leave
push
ret
cmp
stc
std
cdq
add
pop
jecxz
lods
jnp
mov
jmp
imul
fild
sub
mov
dec
sub
loopne
scas
mov
(bad)
fisub
sub
add
add
xor
xchg
mov
add
push
jge
sbb
inc
jmp
sub
fmul
aas
cli
adc
xchg
dec
scas
jne
mov
push
cmp
and
adc
or
sub
jle
ja
add
push
adc
test
xchg
ja
cs
fisttp
mov
mov
ror
pop
dec
inc
xor
jmp
ror
inc
or
out
pop
out
lds
les
fsubr
xchg
mov
sub
adc
out
mov
fmul
push
dec
fiadd
(bad)
mov
mov
or
and
mov
scas
mov
xchg
jmp
sbb
push
pop
inc
sub
add
les
icebp
mov
xchg
mov
ret
stc
sahf
inc
iret
es
mov
xor
add
mov
cmp
jmp
xor
ds
dec
jmp
mov
push
jle
icebp
inc
or
inc
ret
jo
shr
fadd
pushf
fsub
xor
cmp
(bad)
lahf
sub
cmp
pop
loop
push
dec
mov
cs
pop
addr16
sti
pop
das
cli
jb
pop
fld
mov
xor
and
inc
push
pop
popf
mov
inc
sbb
mov
lds
cmp
fcomp
pop
add
mov
imul
sbb
mov
xchg
mov
(bad)
dec
cmp
pop
addr16
pushf
inc
shl
mov
mov
adc
movs
or
pop
mov
pop
adc
mov
xor
inc
clc
dec
nop
jne
and
jnp
mov
push
ds
repz
push
jg
cmp
clc
add
adc
xchg
es
push
int3
(bad)
dec
xchg
cmp
(bad)
push
lds
sbb
push
xor
call
mov
add
js
cmps
ret
stos
fiadd
pop
test
cmp
mov
lock
jmp
push
mov
inc
fs
stos
sub
sub
aas
add
aad
xchg
daa
in
aam
test
popa
pop
push
jmp
cld
dec
push
push
pop
and
fs
mov
lahf
pop
cmp
or
add
cli
dec
ret
add
jne
outs
jl
retf
push
xor
mov
xchg
movs
pop
adc
xchg
and
sti
clc
jmp
popf
in
add
les
js
xchg
add
cs
lock
mov
mov
and
enter
fwait
movs
fdivr
jns
pushf
outs
xchg
sbb
hlt
test
aam
(bad)
xchg
sub
jl
test
(bad)
cmps
pop
or
lods
jg
outs
xchg
or
sub
mov
xor
out
scas
cmps
jne
jecxz
inc
push
mov
jl
out
aaa
and
and
mov
adc
or
nop
inc
xchg
xchg
mov
ins
jmp
sub
or
lds
ds
push
pop
das
loop
mov
ret
xor
sub
dec
inc
push
shl
mov
aam
jecxz
loope
jmp
pop
retf
cmp
int
adc
inc
push
add
push
sub
cmp
in
xor
loop
cmp
xor
call
lds
push
or
adc
jmp
out
mov
aas
mov
pop
sbb
jbe
xor
xor
fimul
sub
nop
push
xor
and
inc
add
dec
clc
fadd
mov
xchg
push
out
(bad)
(bad)
sub
sub
adc
popa
mov
lods
mov
dec
cld
les
dec
fcom
mov
sbb
cmps
fwait
mov
lahf
pop
jg
jno
xchg
jmp
and
push
xchg
pop
leave
js
out
xchg
jmp
lock
cmp
stos
in
in
loopne
(bad)
aad
xchg
aad
sbb
scas
(bad)
dec
mov
xlat
fsubr
aam
push
dec
pop
jae
xchg
aad
bound
ret
ins
ss
out
add
cld
stos
jg
and
push
and
xor
(bad)
sbb
in
in
popf
mov
jmp
xor
xchg
or
inc
loope
push
sbb
out
movs
(bad)
and
inc
nop
sbb
fnstenv
in
adc
inc
jge
es
movs
mov
sbb
js
jo
dec
ficomp
cmp
mov
stc
inc
pop
loopne
xor
adc
and
inc
(bad)
jle
jmp
mov
int
lock
pop
and
ret
movs
inc
inc
push
and
fcomp
cmps
dec
xchg
jp
ins
sub
jbe
scas
push
or
and
jge
clc
and
xchg
cmp
inc
les
fld
pop
add
mov
movs
ds
xor
sub
mov
inc
push
dec
mov
mov
call
pop
mov
xchg
and
mov
xchg
ret
cmc
mov
mov
mov
fs
jg
in
je
gs
and
ret
into
frstor
popf
outs
mov
ss
adc
cmp
xor
pop
xor
jge
add
pop
inc
dec
fcmovnu
cmovne
inc
out
clc
jecxz
push
push
and
and
(bad)
push
cs
xlat
dec
or
adc
and
shl
aas
adc
aaa
ret
cmp
fnstcw
test
or
mov
das
test
xchg
inc
mov
inc
ss
lock
sub
sbb
add
jns
gs
out
inc
outs
jb
dec
xchg
cmp
add
pop
mov
cld
sbb
adc
xchg
push
test
jnp
sbb
jg
push
sub
push
sbb
and
scas
loopne
adc
push
mov
dec
inc
jg
sti
out
pop
add
dec
dec
(bad)
jg
out
cmps
mov
pop
cli
jo
(bad)
cwde
call
gs
daa
icebp
push
lock
jno
clc
and
mov
or
ja
dec
mov
inc
push
(bad)
arpl
adc
sbb
adc
popf
sbb
fsub
mov
ss
or
cdq
cld
cmp
sbb
and
pop
pushf
xchg
mov
or
or
outs
bound
add
in
lods
mov
lds
daa
mov
and
pusha
ins
jb
ja
outs
fcomp
xchg
add
mov
push
add
into
and
outs
ja
pop
xchg
iret
repnz
inc
sti
scas
mov
cdq
mov
outs
xchg
aad
repnz
scas
icebp
push
std
std
push
and
jle
add
bound
mov
add
cmps
gs
cdq
cmp
inc
mov
cmp
mov
in
pushf
out
or
outs
add
(bad)
ficom
out
movs
mov
cmp
fimul
or
pusha
(bad)
shl
fucomip
mov
pop
push
mov
sbb
sub
cwde
int3
sbb
pusha
addr16
inc
scas
stos
and
xchg
and
outs
pop
push
mov
pop
jl
(bad)
imul
popf
inc
popf
push
sub
aas
fisubr
outs
ds
addr16
imul
int3
xor
cmp
int3
sbb
(bad)
jge
imul
cmp
sub
fld
(bad)
into
test
mov
cmc
mov
lahf
pop
and
mov
movs
iret
call
dec
(bad)
pop
push
or
inc
jo
test
in
outs
xor
(bad)
cmp
ss
sbb
mov
mov
int3
cdq
pop
cwde
or
pop
or
push
pop
daa
inc
cmps
cmps
mov
aam
pop
ins
pop
mov
or
add
sub
bound
jmp
inc
cmps
xor
xchg
mov
or
cdq
scas
out
lea
pop
sti
fwait
call
mov
sbb
or
sbb
retf
or
add
inc
out
pop
fxch
dec
adc
xor
add
xor
test
push
sahf
mov
or
and
xor
int
jo
mul
dec
pop
jbe
pushf
sub
fldcw
in
sbb
dec
sub
(bad)
inc
inc
outs
xchg
out
outs
cdq
mov
jecxz
outs
cli
test
mov
inc
dec
aad
pop
add
pop
int3
test
mov
test
push
leave
pop
pop
jnp
xchg
les
xchg
mov
(bad)
xchg
fiadd
aas
(bad)
sar
xchg
jl
fbstp
xor
dec
and
in
repz
test
out
in
pop
test
pop
in
sysexit
retf
pop
cmps
push
iret
jl
lods
rol
inc
push
cmp
lods
push
dec
fdivr
sbb
leave
sbb
inc
fwait
pop
in
add
ret
push
icebp
aad
aam
and
out
adc
sub
pop
out
std
pop
jnp
in
js
jle
or
xchg
mov
adc
sahf
(bad)
xor
jl
adc
std
sub
mov
sub
(bad)
addr16
fwait
(bad)
cmps
in
pop
aad
fnstenv
inc
add
dec
sub
sar
iret
les
dec
and
push
retf
(bad)
and
sbb
cmps
leave
or
out
test
jnp
pop
or
retf
scas
repnz
loope
dec
push
sub
or
je
and
mov
dec
stos
cmp
in
and
leave
mov
and
pop
jmp
outs
stos
mov
inc
std
xchg
loope
jns
ins
mov
mov
add
jo
fdiv
pushf
mov
cmp
aaa
push
int3
pop
addr16
xor
ins
inc
cmp
add
pop
ins
retf
dec
xor
xor
int3
nop
mov
or
dec
jl
mov
(bad)
jge
adc
lahf
movs
mov
mov
inc
ret
jbe
das
cmps
xchg
ss
jb
ds
in
inc
test
xchg
data16
pop
pop
aas
es
cmp
(bad)
enter
mov
jecxz
ret
mov
mov
jo
adc
adc
pop
lods
sbb
call
aaa
mov
loopne
dec
loope
icebp
adc
out
or
mov
xchg
fsubr
xor
inc
adc
inc
or
inc
mov
cmp
pop
pusha
jnp
add
cmp
sti
in
fs
leave
mov
cmp
loope
sbb
retf
dec
adc
call
scas
cld
fs
cdq
(bad)
(bad)
arpl
sub
je
and
sbb
dec
push
icebp
or
dec
popf
jg
fild
or
mov
mov
adc
lds
inc
test
out
and
sbb
(bad)
loope
and
imul
or
js
into
adc
xchg
popa
pop
push
or
jmp
(bad)
fadd
pusha
inc
adc
xor
shl
iret
call
mov
maxps
into
shl
(bad)
jmp
pop
jo
adc
and
adc
loop
retf
jae
sbb
mov
psubd
test
in
popf
hlt
cmc
add
and
jp
pop
nop
sti
test
inc
mov
cmp
rcr
xor
(bad)
push
pop
mov
and
jmp
sub
ror
cs
adc
mov
ret
lods
iret
mov
ret
adc
outs
inc
push
mov
xor
adc
adc
mov
fucom
adc
cs
and
fcom
loope
push
into
daa
test
sbb
fld
outs
or
pop
mov
jne
scas
js
adc
mov
shl
jno
dec
xlat
pop
sti
and
das
aam
neg
ret
cmp
push
mov
cmc
sbb
adc
nop
scas
dec
shl
pop
jecxz
sti
outs
in
push
push
std
mov
or
jnp
scas
jno
stos
shl
dec
pop
retf
fs
mov
mov
(bad)
fild
cmc
inc
wbinvd
fadd
das
int3
pushf
and
jo
mov
pop
lods
test
sub
jp
and
aas
jno
and
out
daa
jecxz
lea
mov
stos
and
addr16
push
fwait
je
cmp
loope
(bad)
aam
mov
mov
retf
push
and
dec
mov
cmp
aad
mov
js
xor
fwait
outs
cmp
mov
xchg
sub
sub
mov
iret
fwait
jecxz
inc
push
mov
movs
mov
adc
cmp
cmp
adc
push
mov
dec
pop
mov
scas
jl
(bad)
fisub
xchg
mov
cwde
je
mov
gs
mov
bound
sbb
adc
pop
aaa
fcmovnbe
cmps
inc
sbb
dec
cld
inc
pop
add
xor
sti
push
loopne
data16
sti
and
xchg
(bad)
out
xchg
pop
das
and
xor
arpl
stc
inc
xchg
mov
push
jb
mov
add
fbld
push
out
test
jo
cmp
hlt
int3
frstor
in
(bad)
test
je
int3
jo
in
sub
add
out
pop
jle
cmp
dec
imul
mov
fmul
jno
xchg
cli
leave
jmp
enter
push
sub
fbstp
sbb
enter
mov
loope
les
addr16
mov
pusha
and
(bad)
jb
ficomp
test
adc
dec
or
push
sbb
loop
loope
inc
push
fimul
inc
fist
fmul
mov
cwde
push
out
ret
mul
add
shl
imul
in
or
adc
outs
add
xor
sbb
rol
aaa
mov
mov
push
pop
sub
(bad)
fcomp
mov
(bad)
ss
repz
jmp
mov
pusha
cmp
mov
mov
pushf
test
cwde
or
sbb
jno
(bad)
or
stos
jmp
jle
mov
jmp
pop
shl
scas
icebp
mov
mov
mov
gs
mov
push
loopne
fisubr
sbb
popa
cmp
and
mov
push
shr
jne
xor
cmps
cmps
xor
inc
push
lods
sbb
stos
jo
xor
pop
cmp
fmul
sub
jne
retf
jno
int
dec
out
popf
inc
shr
xor
or
dec
or
popa
or
push
pop
imul
dec
xor
dec
cli
sbb
push
(bad)
imul
dec
push
pop
and
jmp
into
sbb
adc
int3
repnz
pop
jne
push
or
or
inc
out
inc
dec
mov
jl
jno
sar
sub
stos
cmps
jnp
pop
sar
sbb
fiadd
aaa
(bad)
mov
rol
jne
pop
pop
mov
mov
xor
jne
pop
push
inc
mov
cmc
div
and
sub
and
and
int
add
xor
jmp
enter
add
mov
pop
movs
cdq
in
inc
ror
retf
jle
ret
xlat
out
xor
fisub
or
mov
scas
push
add
xchg
cmps
shl
adc
data16
xor
mov
sub
movs
hlt
shl
dec
stc
repnz
mov
scas
sbb
stc
pop
xlat
xchg
push
out
fcomp
sub
xlat
pusha
ja
out
push
mov
fisubr
cmp
push
pop
jb
xor
mov
mov
jae
dec
mov
dec
jo
xchg
inc
jo
not
aaa
xchg
inc
int3
or
ret
fcomip
or
jnp
inc
rcl
jl
fnstcw
adc
mov
ret
xor
push
lahf
int3
cmps
push
add
push
in
bound
aaa
data16
mov
sbb
add
add
mov
lds
test
mov
push
call
cdq
push
loope
out
mov
mov
loopne
fisub
loop
shl
ret
or
data16
or
ins
mov
fsub
inc
cmp
sub
sub
dec
add
cmp
rol
out
lea
jp
mov
add
or
jmp
push
sti
inc
rcr
cmp
(bad)
mov
popf
adc
jmp
sete
jo
or
pop
cwde
xchg
mov
lods
dec
sbb
test
inc
out
test
loopne
lds
jno
or
pop
mov
dec
sub
not
cmp
test
js
jmp
cld
stos
or
sub
clc
ret
test
cmc
and
rol
jbe
repz
jbe
repz
ret
dec
cmp
leave
ins
add
fdiv
sub
jp
retf
pop
xor
ret
outs
call
pop
mov
(bad)
test
pop
arpl
or
outs
pop
sti
mov
adc
add
test
inc
push
mov
sbb
(bad)
sub
mov
retf
push
loope
add
fs
mov
scas
add
or
int3
sbb
mov
repz
pusha
adc
(bad)
stc
lods
adc
push
pop
test
ds
ffree
adc
aas
sbb
xor
add
push
sbb
outs
adc
pop
pushf
mov
add
clc
push
fldcw
jns
adc
fst
pop
mov
add
mov
jb
mov
(bad)
cld
fiadd
pusha
mov
sub
mov
(bad)
fbld
sbb
cmps
xor
cs
lods
sahf
xor
inc
cwde
jb
popa
test
add
cdq
xor
mov
push
repnz
iret
mov
and
arpl
in
int
es
and
stos
add
push
and
mov
sub
adc
in
push
pop
scas
push
dec
cld
jge
push
add
xlat
mov
xchg
lock
jmp
stc
add
and
daa
test
dec
gs
xchg
add
jns
fist
jl
loop
ss
jmp
xchg
and
dec
in
movs
cmps
jle
mov
dec
mov
xor
fist
add
pusha
ins
adc
mov
push
dec
and
jle
lahf
sbb
(bad)
sbb
pop
test
cmp
mov
mov
jmpw
mov
jno
inc
popf
hlt
call
add
xor
nop
adc
pop
pusha
(bad)
cmc
cmc
xchg
adc
cmp
cld
repnz
int3
sbb
mov
push
into
inc
lea
xchg
pop
sub
stos
shl
sar
inc
cmp
sub
mov
and
rol
sub
inc
pop
popf
push
xchg
xor
pushf
sub
mov
dec
int3
pop
popf
bound
and
mov
mov
xor
push
cld
push
test
mov
push
mul
cmps
(bad)
pop
or
int
adc
out
and
retf
das
int3
xlat
jl
scas
xchg
xchg
dec
imul
jl
mov
and
cs
mov
lea
(bad)
cmp
xor
leave
dec
add
or
xchg
lods
scas
pop
cmp
push
(bad)
push
(bad)
add
dec
shr
ja
enter
mov
xor
mov
adc
jno
dec
outs
mov
inc
mov
dec
jnp
mov
call
mov
stos
int
sub
xchg
push
add
mov
into
dec
adc
pop
push
and
je
mov
xchg
arpl
mov
test
sbb
sti
ss
sub
push
xchg
or
retf
imul
inc
adc
dec
cmc
xor
inc
dec
jns
and
das
sub
test
inc
jne
out
ficomp
cmp
mov
pop
dec
dec
ds
iret
lea
push
sub
and
cmp
repz
adc
xor
xchg
pop
shl
mov
iret
and
mov
jecxz
sbb
popf
aad
shl
ins
xchg
pushf
sbb
cs
iret
pop
arpl
jnp
cmp
imul
fucomp
cli
sar
rol
std
sti
push
push
aam
in
stc
call
icebp
xchg
sbb
xor
inc
gs
(bad)
cmc
in
hlt
sub
retf
inc
cmp
pop
and
jae
inc
pop
sub
(bad)
and
lea
in
leave
push
xor
jmp
xchg
mov
push
mov
in
lds
loope
sbb
iret
fwait
ja
lahf
aam
ffree
ret
jl
(bad)
stos
cmp
jmp
inc
aad
lods
or
pop
or
mov
enter
dec
mov
jmp
push
dec
aaa
mov
pop
jp
add
jnp
add
xor
add
mov
stos
and
outs
and
inc
sbb
xlat
and
push
dec
jmp
add
aaa
push
mov
mov
and
cdq
mov
scas
addr16
sahf
pop
lds
adc
add
adc
retf
pusha
fcomp
cmp
or
cmps
and
popf
repnz
jp
je
inc
mov
sub
sar
xchg
push
pop
iret
jmp
dec
js
aad
push
outs
gs
pop
fbstp
imul
fwait
push
mov
repz
adc
ret
hlt
dec
rcr
push
mov
pop
sahf
(bad)
data16
in
mov
test
mov
cmp
lock
push
fld
sbb
(bad)
or
lods
imul
dec
jno
fcom
dec
int3
pop
jnp
rcr
outs
daa
mov
jmp
push
(bad)
in
mov
dec
dec
or
add
sti
sub
out
cs
(bad)
lods
clc
jmp
mov
and
mov
sbb
leave
imul
and
mov
jl
stos
dec
add
test
ficom
pop
jo
das
gs
popf
mov
(bad)
cwde
add
outs
fstp
retf
push
adc
mov
and
sub
jecxz
mov
xor
(bad)
push
mov
xchg
(bad)
jmp
dec
ja
outs
xchg
jae
daa
jb
ror
jle
sar
sub
add
fwait
xchg
sbb
pop
xor
aaa
jne
xor
nop
xor
shl
inc
les
out
cmp
or
dec
sahf
dec
test
ds
pusha
pop
dec
and
stos
inc
inc
jle
inc
loop
je
movs
mov
gs
retf
dec
lea
bound
add
ficomp
(bad)
push
out
xor
pusha
sbb
adc
(bad)
int3
in
cld
xor
shr
mov
test
hlt
sar
aam
test
and
sbb
shr
adc
cmps
jo
repnz
fadd
mov
sar
xor
pusha
outs
xor
adc
adc
dec
cmp
inc
mov
in
adc
jo
push
jp
hlt
test
sbb
ins
gs
cmps
jns
(bad)
popf
call
push
fwait
jmp
test
push
mov
push
(bad)
mov
int3
test
xor
push
popa
neg
imul
rol
add
retf
shr
push
mov
xor
inc
inc
ins
aad
rol
mov
inc
fdivr
mov
or
cmp
xchg
sbb
mov
add
and
xchg
dec
stc
(bad)
cmp
inc
mov
fs
mov
xor
mov
push
in
sti
test
mov
out
imul
push
and
and
clc
std
iret
push
mov
or
adc
iret
sbb
popf
push
xchg
or
adc
data16
in
test
and
cmp
xchg
sbb
out
dec
jecxz
lds
cmps
add
int
mov
retf
aas
in
mov
shl
add
ja
data16
push
push
(bad)
mov
in
add
jo
mov
jecxz
stos
in
mov
inc
or
mov
stos
sbb
(bad)
or
imul
sar
fistp
push
mov
outs
jmp
inc
mov
das
cmp
or
cmc
repnz
punpcklbw
loop
jge
xchg
loope
int
cwde
test
mov
sbb
push
gs
xor
cdq
repnz
jg
test
outs
inc
mov
inc
ja
inc
pop
popf
jge
cmp
cmp
ret
push
jns
ret
mov
jb
pop
iret
xchg
sbb
inc
ds
push
jmp
data16
(bad)
mov
mov
xor
jle
xor
int3
adc
popf
cdq
and
mov
adc
push
sbb
add
jnp
mov
push
pop
push
push
fwait
movs
stc
xchg
jecxz
ins
push
shl
jge
inc
cs
(bad)
ds
jge
xchg
inc
lea
or
jbe
(bad)
iret
mul
ds
adc
dec
cmps
popf
test
adc
gs
sbb
aas
sti
(bad)
xchg
push
ror
cmp
cli
xchg
pusha
inc
inc
or
mov
inc
xor
sbb
fs
cmp
es
ret
inc
es
test
jl
dec
and
inc
repnz
inc
sahf
fdivp
jmp
dec
mov
dec
push
sbb
jmp
in
xchg
bound
dec
pushf
inc
ds
xlat
loop
or
sti
dec
pop
jp
mov
xchg
stos
add
fs
mov
xchg
jecxz
push
stc
adc
stos
stos
lock
sbb
enter
mov
inc
xchg
(bad)
pop
jb
add
in
pop
data16
adc
or
retf
rdmsr
xor
lock
mov
movs
and
cmc
or
cs
jmp
sub
jle
nop
mov
jle
les
les
shr
loop
add
(bad)
stos
sbb
jecxz
stos
jmp
mov
pop
cld
adc
adc
leave
sub
adc
adc
out
test
popf
popf
fdiv
jl
push
pop
call
packsswb
or
push
add
in
cmp
imul
jno
jb
bound
pop
not
dec
rcl
and
std
rol
and
sbb
jl
stos
into
popa
test
rcr
inc
mov
mov
push
into
mov
mov
dec
ret
xchg
inc
retf
das
sbb
add
jp
pop
mov
mov
mov
mov
mov
add
call
es
mov
retf
push
mov
cs
mov
cdq
or
in
dec
(bad)
imul
ja
push
fnsave
movs
fst
xchg
cmovbe
shl
and
call
leave
jo
arpl
cmps
outs
xlat
popf
ins
add
push
enter
adc
addr16
rol
jbe
add
mov
movs
xchg
clc
out
cmp
mov
fmul
pop
xchg
movs
ja
icebp
pop
out
cwde
fst
jmp
dec
pop
cmps
mov
and
mov
xor
sti
shl
sub
fdivr
sbb
mov
jb
gs
pop
sbb
add
push
imul
test
sbb
sbb
addr16
mov
adc
cmp
dec
jg
sub
ffreep
jl
inc
dec
xchg
or
jne
jg
es
lock
imul
and
ss
out
add
xor
out
xor
pop
test
sub
stos
or
shl
ins
mov
test
cmp
out
(bad)
aam
rcr
ret
xor
sbb
jnp
adc
mov
retf
fdivr
fs
or
fwait
mov
mov
add
jno
push
inc
add
pop
sbb
push
lods
in
clc
(bad)
pop
fadd
call
pop
or
xlat
pop
popa
popf
neg
push
je
xchg
mov
popa
(bad)
push
rcl
mov
test
jecxz
mov
jnp
xchg
adc
sti
push
test
inc
retf
mov
mov
js
pop
xchg
in
mov
je
jge
mov
xchg
repnz
fisub
out
sub
lock
(bad)
ins
or
dec
lods
and
inc
jle
cmp
mov
or
loopne
mov
jg
aas
sbb
retf
xchg
int
mov
nop
stos
std
retf
mov
loopne
sbb
mov
dec
jnp
(bad)
or
and
mov
inc
hlt
dec
jge
popf
inc
adc
fucomi
inc
sti
dec
push
mov
dec
ret
dec
xor
and
mov
stc
or
lock
in
adc
push
cmps
cmp
mov
out
xlat
mov
ins
sub
mov
xchg
cs
push
pop
inc
popa
dec
mov
push
push
and
mov
sahf
and
jno
fdivr
jno
sbb
or
mov
cmps
shr
dec
sub
mov
lods
inc
lds
inc
jecxz
cmp
add
xor
loop
jae
xchg
push
repz
push
sub
call
sbb
dec
out
sar
cmp
push
dec
or
ss
retf
lds
pop
ins
xchg
jae
call
pushf
(bad)
fidivr
and
and
mov
dec
ja
movs
xchg
lock
in
and
and
inc
pop
push
adc
fadd
xchg
sbb
dec
push
jno
pop
mov
mov
ds
retf
pop
arpl
sbb
inc
cmp
mov
comiss
mov
sub
dec
ror
push
shl
enter
or
scas
fstp
cmc
push
push
inc
lods
push
lods
jle
enter
scas
sbb
bound
popf
dec
push
dec
out
bound
jge
cmps
push
loopne
fadd
shl
cmp
and
ficom
(bad)
stos
pop
out
mov
or
lods
test
sbb
dec
repz
lahf
cld
lds
adc
sti
mov
dec
call
jmp
and
jecxz
sti
jmp
out
scas
xor
aaa
fdivr
lods
adc
jbe
xor
clc
pusha
ret
pop
and
pop
sub
retf
fabs
mov
sbb
outs
and
stc
mov
and
add
int3
xchg
and
mov
jmp
mov
test
mov
jle
loopne
arpl
addr16
cwde
adc
adc
mov
test
push
addr16
leave
call
int3
xlat
enter
movs
in
push
sub
mov
aaa
mov
cld
mov
adc
push
cmp
scas
or
jp
ret
xor
push
xchg
shl
sbb
lods
fsubr
push
sbb
cli
cmp
and
sbb
ret
and
pop
(bad)
lods
or
fsubp
(bad)
jl
push
or
adc
ror
dec
pop
call
push
(bad)
sbb
inc
pop
mov
or
test
pop
cmp
mov
pushf
pop
div
cmp
jecxz
cmp
mov
jns
xor
inc
in
rol
in
inc
adc
xchg
dec
jecxz
aam
pop
jge
ffreep
push
mov
in
aaa
inc
mov
fs
jno
dec
add
sbb
pop
jno
inc
inc
xchg
add
fcom
scas
xchg
adc
mov
addr16
mov
cs
movs
inc
arpl
int3
(bad)
(bad)
mov
and
push
ds
pop
dec
jmp
sbb
in
mov
add
fild
fidivr
push
jb
and
addr16
jo
cmp
in
std
sub
mov
pop
rep
inc
ret
adc
push
sar
ficom
mov
cmc
jmp
ins
mov
nop
push
add
adc
or
repz
test
dec
mov
push
imul
int3
mov
push
cwde
mov
jb
mov
sbb
cmps
lock
addr16
add
cdq
pop
jmp
out
mov
loope
cs
lods
imul
call
sub
pop
and
nop
sbb
mov
dec
pop
mov
int3
sbb
icebp
pop
call
jge
xor
or
xchg
iret
adc
xchg
into
shl
out
or
aam
pop
mov
mov
xor
sahf
mov
aaa
jns
push
pop
pop
sbb
cwde
(bad)
jmp
(bad)
adc
sbb
ret
retf
mov
sub
push
fimul
lock
inc
dec
and
adc
mov
(bad)
sahf
int
add
mov
adc
jb
cmc
inc
push
mov
out
leave
push
jns
pop
mov
or
mov
lods
inc
sbb
mov
popa
pop
xchg
push
push
jmp
mov
cmp
sar
stos
and
xchg
movs
jb
cmp
jmp
lds
cli
and
inc
mov
add
scas
push
gs
or
cmc
pop
cmp
xor
mov
imul
aaa
hlt
sbb
jmp
dec
inc
mov
jmp
push
fcom
shr
popa
push
pushf
fldcw
imul
pop
addr16
mov
inc
fist
cli
pop
xchg
fistp
je
add
lea
jp
bound
dec
cmp
xlat
retf
dec
daa
xchg
mov
mov
(bad)
test
pop
push
test
xor
scas
call
mov
add
shr
dec
mov
pop
sub
mov
clc
push
dec
sbb
xor
mov
adc
inc
pop
sub
out
out
mov
aas
and
leave
push
les
sub
adc
mov
xor
mov
sub
aad
rcl
dec
into
fcmovnu
movs
jno
inc
ficom
sbb
push
(bad)
dec
popa
cs
fsub
pushf
xchg
arpl
std
push
loop
pop
loop
jle
sub
jno
push
push
sbb
retf
dec
mov
pop
jecxz
ss
fadd
enter
push
mov
cmovle
push
fisttp
lods
jg
not
adc
pop
jo
pop
cmp
rol
popa
int3
pop
xor
fwait
jp
jle
xchg
int
in
dec
int3
pop
cld
xchg
mov
mov
cvtpi2ps
push
push
jno
hlt
(bad)
jmp
jl
neg
mov
fldenv
fs
and
loopne
es
rcr
and
inc
cdq
mov
scas
inc
leave
xchg
sahf
loope
scas
inc
mov
jge
das
fcmovnbe
adc
push
pusha
out
aam
call
movs
mov
sti
fst
mov
mov
xor
in
xchg
and
sbb
jl
ins
inc
stos
jne
pushf
adc
pusha
pop
nop
mov
fld
clc
sbb
mov
cmps
(bad)
call
xor
ret
dec
in
repz
sbb
les
inc
add
arpl
push
sbb
add
lds
fdivr
addr16
iret
(bad)
jne
rol
int
xchg
icebp
push
pop
add
push
adc
mov
inc
cmc
mov
adc
pop
ja
arpl
es
into
jnp
pop
cmp
xchg
jb
gs
cwde
shl
pop
mov
pushf
jmp
jbe
cmc
cmp
(bad)
pop
push
das
push
sbb
sti
push
xchg
popa
or
cmc
in
jno
stos
cmp
xor
lods
dec
add
mov
cwde
div
jo
test
or
or
nop
retf
push
push
and
je
mov
dec
jmp
mov
dec
bnd
hlt
jns
jmp
loope
lods
adc
fistp
les
loope
pop
xchg
sub
leave
fwait
inc
repz
sub
xchg
imul
inc
and
enter
retf
call
enter
jge
leavew
jo
outs
and
mov
cmp
ror
push
sub
cmp
xor
call
jle
add
xchg
call
pop
mov
sbb
test
mov
jno
push
dec
xchg
daa
pop
in
pop
cdq
ret
push
fwait
(bad)
jmp
push
aaa
sbb
inc
xbegin
loope
xor
mov
popf
or
sahf
outs
add
fmul
push
xchg
stc
test
iret
movs
xchg
(bad)
mov
inc
pop
std
clc
rcr
pop
jmp
pop
cmp
ss
fwait
imul
outs
outs
dec
imul
ror
arpl
adc
sub
or
pop
test
add
test
mov
inc
daa
das
push
mov
push
jl
cmp
xchg
imul
or
hlt
mov
call
lods
mov
out
pop
movs
push
mov
loop
(bad)
mov
and
pop
sub
nop
ins
cmp
sub
inc
es
sub
mov
ret
leave
je
retf
xchg
pop
je
hlt
jo
mov
and
add
mov
mov
pusha
nop
test
or
xchg
push
dec
dec
out
retf
mov
in
data16
xchg
pushf
lahf
int3
(bad)
shl
scas
xlat
mov
pop
test
stos
xchg
aas
into
aaa
and
mov
pop
push
imul
dec
scas
mov
mov
cmp
lea
add
fmul
adc
ins
aad
idiv
addr16
push
add
arpl
aaa
mov
and
and
shl
sbb
into
cld
aas
nop
xchg
xchg
inc
pop
inc
push
gs
jle
test
loope
add
in
jbe
cmp
xchg
dec
mov
push
iret
data16
and
push
rcl
sbb
jmp
clc
in
jle
cmp
lea
pop
clc
out
cmp
sbb
xchg
gs
pop
int
out
je
cmp
mov
(bad)
and
sub
retf
jne
es
imul
mov
adc
mov
jmp
xchg
add
mov
mov
outs
sub
in
push
repz
mov
mov
xlat
dec
xchg
sbb
lds
sbb
je
or
and
jmp
xchg
mov
vpmaxub
call
mov
lods
adc
add
(bad)
imul
mov
inc
aad
sub
int
sbb
lea
in
ins
cwde
movs
xor
out
inc
retf
sbb
xchg
pop
sbb
lahf
imul
repz
sbb
sub
push
jns
iret
std
loope
aaa
push
das
dec
pop
rol
or
xchg
push
lahf
ins
mov
inc
sbb
dec
hlt
test
in
lods
jmp
jecxz
cmp
mov
ficomp
aam
mov
retf
xor
xor
pusha
cli
sub
push
xor
div
xlat
es
clc
js
iret
int3
cmp
xchg
xchg
push
mov
push
jns
mov
les
adc
lds
and
not
sahf
sub
or
xor
scas
leave
cmps
sti
xchg
popa
popa
neg
adc
xchg
pop
adc
ret
xlat
out
adc
adc
mov
mov
imul
add
adc
jmp
jle
jg
sahf
xor
inc
and
and
cmps
out
mov
xor
or
xor
enter
test
cmp
in
xchg
xor
fdivr
jmp
mov
dec
jno
iret
push
(bad)
dec
aam
sbb
jmp
adc
retf
(bad)
(bad)
sbb
or
sahf
cmps
xchg
xchg
int3
sbb
(bad)
int
(bad)
shr
fcomp
(bad)
sbb
out
pop
rcl
dec
hlt
mov
(bad)
int3
jp
popf
into
sub
cmp
mov
cmps
scas
and
out
in
mov
cmp
dec
pop
and
je
out
and
push
bsr
scas
xchg
mov
daa
jns
mov
xchg
aam
jmp
xor
retf
outs
or
sub
pop
xor
sub
(bad)
pop
pop
test
jp
mov
pop
add
inc
jns
mov
fistp
mov
mov
(bad)
cdq
mov
adc
sbb
cmp
pop
mov
xchg
add
dec
mov
mov
add
dec
mov
ins
daa
idiv
xlat
fadd
cmp
and
dec
ret
shl
int
pop
fs
int
fs
iret
inc
pop
adc
(bad)
jl
outs
imul
cmp
lahf
xchg
jp
xor
(bad)
cld
(bad)
jmp
rcl
fldcw
imul
pop
push
add
push
jg
push
data16
mov
xchg
mov
adc
rcl
mov
and
ins
fsubr
xchg
arpl
dec
outs
imul
xchg
pop
xlat
in
hlt
div
(bad)
mov
or
rcr
mov
arpl
dec
sti
xlat
clc
add
sbb
int
xor
addr16
leave
cmp
movs
jno
fdiv
pop
in
mov
jb
mov
add
dec
add
sub
cmp
dec
in
sub
fld
xor
or
sahf
sub
xor
inc
lds
pop
test
movs
sbb
out
pop
ja
dec
pop
int3
pop
cwde
pop
and
jae
mov
jno
and
(bad)
out
loopne
push
mov
xchg
mov
faddp
popa
mov
inc
shl
sbb
mov
pushf
pushf
or
jmp
clc
test
(bad)
in
push
pusha
push
jo
push
mov
jbe
retf
je
shl
inc
int
psubsw
jnp
rcl
vptestnmb
sbb
and
or
in
pop
sub
bound
popa
inc
mov
shl
movs
mov
adc
es
mov
in
cmc
jmp
cmp
add
inc
cdq
adc
(bad)
sbb
dec
mov
rol
adc
popf
jecxz
push
enter
out
in
xchg
jecxz
cmps
xchg
sub
dec
pop
mov
jnp
mov
(bad)
bound
clc
push
push
call
mov
push
into
sti
ret
jns
xchg
cmp
jmp
push
jb
or
cmp
dec
fst
jnp
cwde
jae
xor
pop
imul
sub
pusha
xchg
imul
fbstp
dec
mov
mov
mov
pop
cdq
popf
ins
cmc
xchg
push
sub
cmc
dec
mov
push
aas
test
xor
jo
cmp
scas
sar
fistp
hlt
mov
sbb
es
popf
in
adc
and
push
xchg
js
leave
mov
mul
push
pop
(bad)
mov
inc
pop
outs
ficom
xlat
pusha
popf
outs
(bad)
pop
xor
push
mov
and
dec
cwde
test
and
dec
mov
(bad)
stos
add
in
inc
cmp
xchg
loope
mov
adc
(bad)
fistp
aas
or
mov
fistp
(bad)
dec
fist
jns
mov
push
or
in
or
call
bound
push
sbb
daa
pop
(bad)
sub
jp
or
push
gs
in
and
mov
ret
xor
push
xchg
pop
sbb
es
inc
ficomp
lock
gs
push
in
sbb
mov
fistp
jae
idiv
pop
sub
pop
mov
test
cmp
repnz
inc
aaa
imul
outs
or
enter
mov
jns
repz
push
rcl
xchg
inc
and
aad
stos
xor
imul
add
mov
fcomi
rcl
ja
mov
jmp
pop
mov
mov
mov
ja
cmp
(bad)
lock
outs
mov
mov
jnp
out
sbb
fimul
push
pxor
cmp
or
xchg
loopne
test
or
or
sub
and
push
sub
jl
hlt
mov
imul
jmp
and
xchg
sbb
cwde
das
push
shr
fistp
icebp
in
cmp
retf
outs
mov
or
push
inc
cli
clc
or
and
sar
ds
cmc
inc
xchg
movhps
pop
leave
(bad)
sar
jnp
xchg
out
icebp
xchg
adc
add
lahf
stc
push
pop
bound
enter
cmp
dec
retf
cmp
call
add
std
fistp
sub
sub
pop
ins
lea
mov
push
add
(bad)
cmp
cmp
scas
es
outs
ret
ret
mul
addr16
jge
repnz
dec
pop
leave
imul
std
sar
movs
cld
pop
inc
and
adc
xchg
pop
cmp
stos
cmp
pusha
cmc
(bad)
sbb
inc
sub
divps
ret
xchg
adc
xor
loop
or
pop
xlat
dec
mov
cmp
test
pop
push
xor
cmp
and
test
dec
pop
and
dec
mov
ret
popa
stos
or
jno
jl
(bad)
loope
(bad)
fimul
fldenv
dec
mov
push
sub
(bad)
icebp
pop
mov
bound
xor
ins
fs
xchg
hlt
push
mov
cmps
dec
dec
shl
outs
inc
mov
adc
in
mov
rcr
cmp
call
push
fild
xlat
mov
cmps
adc
pop
loope
mov
jl
loopne
and
jmp
out
pop
mov
fist
jns
pop
les
mov
ret
rcr
daa
int
pop
fidivr
jae
xchg
cld
mov
xchg
fstp
adc
cmp
pop
xchg
push
cmps
mov
pop
sbb
pop
mov
out
rol
jp
xchg
(bad)
daa
jmp
popf
push
mov
jns
leave
adc
dec
xor
ret
xchg
pop
test
ins
popf
jne
add
jmp
and
dec
imul
in
or
jno
lock
rcr
mov
call
mov
jnp
ficomp
cwde
ficomp
xor
inc
xor
cwde
out
daa
loopne
das
or
aam
in
add
nop
lahf
les
cld
js
pop
xor
dec
aaa
push
xchg
jb
cdq
jmp
scas
mov
stc
push
daa
add
sub
sbb
mov
cmp
rcr
add
je
int3
or
ja
add
mov
jmp
xchg
out
sbb
adc
scas
jmp
scas
icebp
cmps
outs
mov
sbb
mov
aam
xor
mov
pop
mov
arpl
push
pop
xor
sbb
in
(bad)
adc
pmaxub
cmps
add
jnp
out
push
pop
xchg
push
je
icebp
stos
sub
dec
pop
push
test
mov
imul
xchg
je
xor
cmp
ins
jle
imul
and
aaa
pop
push
dec
gs
shl
or
js
js
or
mov
push
shr
sbb
pop
hlt
shl
dec
cmp
dec
stc
loope
stos
pop
adc
xor
mov
mov
push
and
push
outs
mov
pop
mov
xchg
add
aas
cmp
int
icebp
jno
lds
mov
cmp
cmp
jne
adc
mov
imul
adc
or
xchg
scas
add
loop
mov
das
and
and
xchg
mov
inc
and
inc
xor
or
shl
pusha
sub
outs
leave
in
icebp
sub
aaa
dec
or
ins
jg
daa
cmps
xlat
ins
pop
pop
jg
bound
jmp
retf
scas
out
and
ds
fldcw
xor
add
ins
ror
leave
cmp
fwait
das
add
rcl
and
mov
hlt
fsubr
mov
(bad)
in
push
ss
sub
add
test
sub
xchg
cmp
and
das
or
adc
scas
in
ds
xchg
push
cli
jo
data16
inc
xor
xlat
test
pop
push
xor
lahf
shr
outs
scas
inc
mov
push
inc
jns
nop
repz
cli
inc
(bad)
arpl
sbb
cmp
ja
loope
add
rcl
jle
lods
mov
fbstp
mov
shr
mov
(bad)
movs
mov
lods
push
pop
add
inc
xor
cmp
fisubr
xor
xor
push
mov
outs
mov
xlat
(bad)
fadd
aaa
jo
rol
(bad)
in
ja
cmp
not
fistp
cmc
fwait
pop
push
je
scas
iret
retf
xchg
cmp
call
cld
mov
mov
fld
inc
push
push
push
ficomp
push
jmp
sbb
jns
fwait
ret
dec
pop
(bad)
mov
xor
pushf
cmp
cmps
pusha
jl
(bad)
and
loope
outs
or
jl
xor
sub
xlat
cmp
add
jne
ins
(bad)
aad
dec
(bad)
jmp
enter
sbb
scas
inc
push
add
mov
adc
jmp
rcl
iret
cmp
or
out
jge
div
leave
mov
xchg
and
xchg
outs
aaa
xor
lock
hlt
sbb
cmp
lods
sub
fs
popf
inc
jle
sub
inc
inc
in
shr
cmp
adc
dec
cmp
inc
xor
cwde
push
mov
test
inc
adc
jl
ins
repnz
cli
rcr
fld
pop
imul
aad
addr16
jmp
inc
(bad)
cmp
pop
inc
test
es
or
imul
cmp
fstp
into
xor
aas
jb
ja
int
pop
pusha
cmovns
jae
scas
nop
xor
bound
cs
jmp
adc
adc
mov
fimul
pop
ins
pop
add
aaa
cmp
push
mov
cmp
ss
out
das
lock
pop
cld
pushf
je
stc
jl
aas
xor
cld
test
cmp
and
(bad)
sbb
dec
sub
movs
and
mov
int
pop
aam
xchg
(bad)
xor
rcl
push
cmovle
mov
inc
mov
push
(bad)
sti
scas
test
ja
ja
cmp
lods
and
sub
xchg
fs
mov
pop
loopne
xor
movs
inc
movs
add
into
sbb
fadd
nop
je
call
push
push
dec
mov
adc
cmps
xlat
dec
dec
aaa
sbb
jns
lock
push
sti
jmp
jecxz
addr16
in
push
mov
lods
scas
movs
fisub
stc
pop
and
or
int3
dec
cmp
xchg
xchg
mov
dec
das
push
repz
jl
mov
lea
add
loop
adc
imul
int
cmps
pop
mov
jno
daa
js
nop
outs
bound
add
jl
mov
and
inc
mov
(bad)
shl
sub
adc
sub
rcl
cmp
hlt
aaa
dec
mov
daa
mov
xchg
jnp
ret
jge
dec
sbb
das
cmp
lds
pop
call
ds
(bad)
dec
and
dec
setns
lods
test
xor
mov
or
sub
sbb
jbe
mov
dec
shl
je
and
mov
dec
xor
pop
loop
cmps
inc
repz
dec
jp
retf
add
ja
dec
lods
out
jp
mov
out
mov
dec
rcr
xchg
mov
mov
popf
push
stos
addr16
mov
scas
ret
sub
inc
aas
cwde
loopne
push
ins
jmp
jg
mov
aaa
mov
fwait
hlt
mov
xchg
fistp
or
(bad)
and
test
mov
jle
movs
cmp
aas
adc
adc
adc
jmp
and
iret
lds
and
out
enter
call
add
mov
stos
or
sbb
scas
out
pop
xchg
cmp
icebp
and
outs
adc
and
xor
adc
jo
jo
into
sbb
and
or
xor
movs
hlt
sbb
xor
bound
shl
push
test
sub
inc
mov
sub
lock
lods
aam
mov
lea
mov
rol
icebp
pop
aas
cs
mov
out
sbb
add
scas
push
jbe
loope
stos
mov
push
cs
sahf
and
adc
sub
inc
mov
or
jnp
xchg
mov
jp
fwait
mov
xchg
xchg
jp
cmp
push
fidivr
cmps
sti
push
mov
cmp
add
into
mov
stos
(bad)
sahf
dec
jbe
imul
xchg
aas
push
pop
sti
cmp
ins
xchg
out
adc
or
jmp
cmps
xchg
rcr
mov
adc
pushf
add
mov
or
aam
sti
inc
sub
mov
xor
cmp
lahf
int
fcmovnb
ror
gs
movs
cmps
test
mov
sbb
out
fldenv
xchg
sub
jge
cmps
or
mov
icebp
cwde
(bad)
(bad)
jle
icebp
in
mov
sbb
pop
sbb
fcomp
cmc
bound
in
imul
fs
cmp
std
mov
or
les
test
shl
and
pop
arpl
lahf
xchg
(bad)
rcr
dec
xor
cmp
cli
aam
dec
adc
and
mov
out
pop
hlt
popa
pop
mov
arpl
fcomp
sub
xor
jl
mov
test
in
add
and
je
addr16
mov
rol
adc
add
ss
push
rcl
mov
std
adc
cmps
sbb
dec
(bad)
sub
test
imul
pop
ins
mov
mov
mov
jbe
stos
mov
fpatan
mov
test
test
push
or
rcl
(bad)
xchg
add
or
and
sbb
pop
test
or
daa
push
push
sub
dec
sbb
inc
or
je
js
pop
js
stos
cdq
retf
mov
add
sbb
push
adc
lea
jmp
rcl
les
cmps
loopne
xor
stos
sub
inc
leave
aas
aad
jno
js
mov
shl
cdq
pop
cmp
les
push
xchg
int
pop
iret
sahf
sbb
dec
popf
int
jmp
jnp
imul
add
pop
mov
fdivr
pop
movs
add
jnp
lahf
jp
jmp
cmp
xor
scas
adc
ss
fisubr
mov
cmps
fnstsw
cmp
sub
or
pop
and
das
shl
out
enter
or
idiv
dec
cmps
pop
cmp
mov
add
aas
push
mov
lods
mov
dec
cmp
and
mov
pop
mov
popa
outs
jmp
xchg
xchg
and
xor
xor
jne
jle
adc
call
or
test
es
mov
add
push
xchg
mov
(bad)
aaa
mov
ffree
inc
mov
mov
cmp
iret
jmp
pop
loop
and
sub
or
ins
mov
pop
sbb
xchg
xchg
ins
jb
push
inc
aaa
xchg
lds
xor
cmc
pusha
pop
ins
aad
in
dec
mov
int
int3
sbb
(bad)
not
dec
mov
jmp
cmc
sahf
adc
in
sahf
addr16
(bad)
pop
add
movs
mov
add
jne
adc
and
ds
inc
xor
push
and
pushf
xor
xchg
mov
push
int3
rol
or
enter
dec
clc
fild
fld
mov
test
xor
ror
outs
fsubr
aaa
cdq
retf
enter
fcom
pop
dec
xchg
je
jno
push
loope
not
sbb
jmp
or
out
fcomp
inc
loopne
lea
xor
or
mov
frstor
sub
sub
arpl
and
clc
sti
mov
enter
test
xchg
adc
cwde
outs
repnz
outs
adc
mov
mov
and
adc
bound
inc
imul
test
cmps
xchg
xor
mov
gs
push
inc
enter
(bad)
lods
cmc
movs
aaa
cmps
cmp
adc
bound
loope
push
inc
into
jbe
add
pop
sub
(bad)
shl
(bad)
cli
in
call
ror
fistp
jne
test
in
dec
adc
xchg
lods
sbb
or
jb
xlat
add
adc
scas
je
xchg
add
cs
jmp
inc
loop
and
arpl
(bad)
ins
mov
mov
jge
stos
adc
and
push
cmc
inc
ds
cmp
inc
outs
mov
inc
sub
inc
fucom
pop
mov
test
xor
jno
adc
aad
je
movs
inc
pop
push
stos
lahf
retf
aas
push
sbb
shl
sub
jp
pop
arpl
xchg
(bad)
jl
and
dec
xor
and
mov
dec
aaa
and
push
sub
add
push
adc
xor
add
sbb
adc
pop
int3
dec
stos
sub
xor
and
add
mov
nop
push
cmp
sub
mov
xchg
enter
and
dec
test
je
out
mov
ret
or
loope
ss
add
fidiv
jge
dec
mov
in
xor
sub
cmps
inc
data16
pusha
scas
and
inc
jno
pop
inc
nop
pop
pop
mov
daa
push
or
(bad)
xchg
ja
xchg
fadd
lods
or
ret
push
or
loop
(bad)
(bad)
cmp
push
rol
mov
(bad)
mov
inc
sbb
jge
inc
pop
xchg
fisub
loope
fld
ficomp
je
dec
push
adc
jb
movs
in
jg
lahf
adc
aas
xchg
mov
inc
pop
enter
retf
or
push
adc
inc
cmp
sahf
fld
or
dec
shl
dec
ret
sub
(bad)
ds
and
cmp
jl
jnp
stc
out
mov
push
push
aaa
inc
xchg
pop
fcomip
push
sbb
adc
std
fs
mov
cli
js
pop
ret
shl
das
ficom
adc
pop
dec
jl
and
repz
lods
es
stos
fld
int3
sahf
fs
fdiv
inc
adc
or
shl
cmp
stos
in
aam
xchg
add
test
mov
aam
xor
xchg
fsub
mov
shl
mov
dec
imul
std
stos
iret
hlt
mov
mov
pop
pop
or
mov
xor
je
sub
mov
arpl
iret
movs
inc
lods
and
mov
fmul
inc
mov
cwde
sar
scas
mov
outs
pop
mov
inc
in
repz
dec
int
jbe
test
shl
and
clc
jp
jbe
lahf
ret
enter
dec
sub
sub
sbb
inc
inc
mov
jns
sar
setp
mov
mov
lods
test
mov
arpl
dec
adc
mov
mov
or
bound
aas
dec
and
clc
mov
lahf
add
inc
popf
add
xchg
or
fwait
bound
mov
or
ficomp
push
mov
ret
sbb
rol
fwait
inc
xor
push
arpl
cmc
mov
pusha
nop
iret
add
mov
stos
sub
and
ins
mov
dec
push
fadd
xor
xchg
call
mov
sbb
mov
cmp
mov
push
je
leave
push
add
lods
(bad)
push
mov
jne
in
pop
cld
pop
stos
cmp
aas
popa
mov
nop
js
leave
fimul
std
and
lahf
int
cmp
rcl
sbb
call
mov
in
xor
xchg
into
sub
jae
cmp
mov
aad
pshufw
xor
pop
xchg
add
xchg
out
pop
pop
xchg
xchg
push
(bad)
shr
xor
fild
mov
clc
add
hlt
dec
or
es
in
mov
push
mov
xchg
cdq
inc
not
adc
lea
ja
xor
and
mov
jge
mov
push
add
sar
pop
and
sub
adc
mov
adc
add
cmp
or
mov
dec
or
dec
dec
xchg
xchg
adc
dec
clc
add
icebp
in
add
mov
xor
test
sbb
inc
rcl
subps
imul
ja
jbe
cmp
xchg
add
pop
sub
mov
xchg
scas
sub
das
pusha
xchg
inc
pop
pop
xchg
fild
push
aad
cmps
cli
lahf
stos
ins
cmp
and
mov
cmp
imul
jg
dec
les
test
cmp
pop
jmp
leave
(bad)
stc
enter
jne
inc
iret
sub
enter
sub
jp
std
movs
sub
bound
lods
test
cld
fstp
mov
mov
xchg
mov
(bad)
iret
in
aam
cmp
pop
mov
push
stos
sub
movs
retf
pop
push
scas
dec
mov
popf
inc
outs
mov
hlt
out
pop
pop
loope
cli
add
or
cmp
lea
mov
movs
fwait
sub
(bad)
dec
and
cmovnp
mov
repz
cwde
add
cmp
fld
test
cmps
mov
add
adc
aaa
mov
push
cmp
dec
mov
adc
fwait
cmp
jbe
mov
mov
mov
dec
sti
pop
in
push
and
and
sub
xor
mov
mov
dec
sti
repz
pop
mov
mov
mov
mov
cmps
dec
aas
aaa
mov
or
mov
dec
push
ret
fst
cli
cmps
jb
jle
add
xchg
mov
int
leave
mov
outs
dec
pop
dec
in
sub
sub
or
adc
fcmovne
add
xor
push
outs
sbb
outs
(bad)
data16
add
aas
in
or
jae
push
jge
out
mov
mov
or
xchg
aad
sub
jmp
mov
inc
push
mul
jp
imul
test
mov
lods
dec
hlt
jb
clc
cdq
sub
out
int3
sbb
xchg
daa
sahf
sub
sti
clc
icebp
adc
add
sub
(bad)
push
push
sub
sti
mov
cmp
pop
aam
pop
sub
and
jnp
in
dec
pusha
popf
push
mov
dec
sub
leave
outs
(bad)
cmp
(bad)
aam
enter
add
cs
cwde
(bad)
pop
mov
stos
stos
sub
push
dec
in
inc
adc
dec
pop
fst
cmp
inc
aad
call
sub
arpl
nop
arpl
sbb
mov
adc
mov
call
mov
jle
dec
(bad)
xor
push
icebp
stc
int3
mov
mov
hlt
adc
or
inc
cld
sbb
lea
mov
mov
fistp
mov
pop
jnp
ja
xlat
xor
sahf
aam
es
jnp
mov
mov
lods
sub
stos
ficomp
jns
and
in
jle
cwde
xchg
mov
mov
xor
loop
inc
out
sub
call
or
push
ins
pop
mov
ret
hlt
mov
movs
scas
mov
push
push
adc
fistp
push
std
sub
lock
aam
lods
xor
cmp
dec
(bad)
dec
jmp
cmp
dec
adc
cs
cmp
lea
fprem1
jns
pop
push
(bad)
fdivr
add
stos
cmps
or
call
pushf
push
xlat
cmp
test
or
lods
fcmovbe
mov
push
call
scas
bnd
scas
leave
call
dec
adc
not
dec
xchg
fnstsw
xchg
stos
mov
mov
xchg
jle
clc
bound
aas
out
fsubr
sub
mov
(bad)
es
cmp
(bad)
std
rcl
cmps
push
das
(bad)
push
inc
daa
scas
or
mov
and
xlat
sbb
retf
mov
sub
push
sbb
call
or
jmp
and
imul
adc
cmp
sbb
fwait
inc
pop
rol
test
mov
and
clc
mov
adc
leave
fistp
ds
arpl
jno
ins
enter
jo
in
lods
ins
push
jl
add
fidiv
cmps
push
out
sub
mov
inc
pop
pop
and
push
inc
xor
mov
call
xor
stc
mov
pop
adc
clc
sub
popf
jnp
jno
push
cmp
cwde
mov
dec
inc
add
sbb
mov
mov
adc
test
jno
pushf
push
xchg
shl
jle
shl
add
push
adc
imul
mov
mov
xor
loop
add
loopne
retf
xchg
outs
aad
mov
mov
cmp
xchg
jp
fwait
cmps
stos
pushf
inc
(bad)
cli
adc
mov
fdiv
repnz
scas
add
fs
cmp
fadd
dec
sub
adc
scas
sbb
add
arpl
sbb
loope
mov
dec
sub
dec
mov
xchg
lahf
jmp
or
xor
cmps
inc
aas
mov
cmp
imul
mov
ins
sub
movs
pop
outs
push
mov
out
(bad)
mov
push
ficom
(bad)
dec
enter
ss
jnp
mov
cdq
clc
bound
cmc
pop
arpl
pop
mov
inc
mov
mov
repnz
arpl
xchg
arpl
mov
jnp
loop
ja
dec
in
outs
mov
leave
adc
add
stos
inc
sar
mov
jmp
fs
adc
sub
int
push
pop
sub
pop
mov
jle
retf
push
jp
mov
add
mov
lods
push
movs
out
in
std
ins
sbb
add
inc
xor
xor
call
adc
inc
xchg
or
retf
dec
mov
dec
mov
enter
ja
cmp
sbb
es
loop
mov
jl
cmp
cmps
out
adc
lods
inc
jno
inc
test
movs
mov
dec
mov
pop
pop
aas
jb
jno
jp
push
retf
mov
pop
adc
outs
inc
lock
mov
mov
sbb
pop
fdiv
mov
xor
xor
out
add
mov
call
mov
sbb
adc
(bad)
cmp
movs
jl
cmp
enter
addr16
mov
std
lods
and
fimul
out
test
in
call
add
pop
pop
dec
stos
cwde
sbb
call
push
ins
ss
ins
movs
jns
test
pop
xor
int3
mov
push
push
adc
leave
dec
push
aad
cmp
jbe
repnz
cli
and
bound
fmul
jns
sbb
stos
xor
sahf
ficomp
mov
jmp
mov
inc
pop
sub
inc
aam
sbb
sbb
add
mov
ja
cmps
jmp
call
popa
sbb
jg
out
loope
and
retf
loop
xchg
or
xor
scas
or
mov
mov
cwde
das
push
dec
das
add
mov
dec
cmp
sub
jmp
rcl
pop
sub
fld
lgs
lds
cwde
mov
(bad)
aas
sub
mov
lds
inc
cmp
not
xchg
jne
pop
adc
jg
scas
mov
push
mov
(bad)
daa
cmps
xbegin
call
sbb
push
ret
xor
xor
popa
pushf
dec
aad
std
and
sub
test
push
mov
in
push
dec
pop
aad
shl
pop
mov
inc
push
jmp
int3
adc
sbb
mov
shl
sub
repnz
js
jmp
bound
pop
repnz
inc
out
dec
repnz
stos
adc
pop
xchg
cld
sbb
scas
xor
fmulp
addr16
push
xchg
xchg
dec
sbb
adc
cs
sbb
rcl
inc
add
jl
inc
inc
stc
adc
test
push
leave
sub
ret
or
mov
sbb
aas
mov
or
cmps
mov
add
stos
cmp
push
push
sub
test
loop
dec
out
lds
sub
cmp
jbe
cmp
jo
mov
jecxz
push
xchg
jmp
test
neg
inc
pop
gs
adc
rol
je
stc
(bad)
mov
dec
push
or
jnp
movs
sub
jmp
and
and
xchg
test
and
pop
xor
xor
or
adc
mov
outs
mov
fimul
mov
push
out
bound
mov
adc
aad
leave
add
and
out
and
sbb
xor
scas
cli
cmp
xor
loop
das
xor
adc
(bad)
xor
and
out
cmp
std
mov
pop
push
jns
pop
mov
xor
(bad)
(bad)
or
add
push
and
push
push
enter
adc
push
outs
pop
xchg
stc
test
jmp
or
mov
push
mov
xor
fwait
dec
jbe
inc
int
jecxz
xchg
xor
mov
sub
mov
sub
rcr
hlt
xchg
sbb
in
pop
mov
outs
pop
mov
fsubr
inc
and
mov
imul
and
fisub
iret
adc
and
and
cmp
push
(bad)
sahf
(bad)
das
retf
stos
and
imul
call
imul
in
mov
sti
imul
out
imul
sbb
add
iret
rol
int
jmp
sbb
ds
repnz
hlt
inc
and
cdq
push
mov
loopne
inc
(bad)
cmc
mov
loope
das
ror
out
test
pop
mov
cmp
fcom
fistp
daa
sbb
(bad)
dec
movs
lods
je
fild
(bad)
lock
ret
leave
inc
dec
pop
sub
add
pop
cdq
pushf
test
jmp
mov
ja
iret
sub
addr16
pushf
inc
push
cmp
test
rep
mov
cmp
add
retf
call
jne
dec
jl
dec
arpl
xchg
(bad)
or
add
sub
nop
arpl
add
jo
or
push
retf
icebp
sbb
cmp
lods
mov
sub
das
xchg
rol
ret
int3
xchg
cmps
xchg
es
ficom
inc
push
add
push
sbb
xor
mov
arpl
sub
out
jl
imul
int3
aaa
loop
mov
pop
xor
pop
clc
mov
daa
sti
push
ficom
sub
rcl
hlt
xlat
jne
xor
mov
cmp
cld
(bad)
mov
imul
(bad)
repz
pop
dec
dec
mov
not
not
cwde
inc
sbb
dec
jg
mov
out
add
in
jle
shl
in
jo
pop
or
dec
sub
mov
hlt
(bad)
xchg
add
mov
xchg
scas
add
into
jecxz
imul
aas
xchg
mov
push
retf
daa
sbb
and
push
push
or
or
ret
das
xor
lods
cmp
push
movs
(bad)
rol
dec
push
mov
repnz
out
dec
inc
out
add
rcl
and
push
dec
sti
pusha
push
outs
imul
addr16
inc
outs
jne
xchg
cmps
rcr
sbb
adc
aad
arpl
fbstp
pop
stos
sub
imul
clc
sbb
mov
push
adc
push
repnz
mov
shl
ret
je
and
sbb
xor
xchg
test
jne
jecxz
xchg
and
mov
stos
sub
and
add
mov
and
stc
dec
dec
pop
cmp
test
xor
jecxz
lahf
sub
scas
mov
xchg
pop
aam
sbb
inc
push
lock
rol
scas
js
pop
dec
pop
hlt
cld
into
in
je
pushf
aaa
mov
push
jne
pusha
movs
test
cmp
scas
pushf
and
inc
xor
cmp
std
add
ins
mov
lods
sahf
lods
inc
or
call
inc
sub
ror
inc
(bad)
mov
push
sbb
xchg
pop
or
sti
mov
and
and
mov
dec
repz
fsubr
sub
sub
out
push
mul
(bad)
stos
jmp
push
xchg
cs
rol
(bad)
xor
pop
sub
jmp
and
mov
inc
pop
loope
shr
jle
aam
push
xchg
arpl
out
(bad)
cmps
push
inc
cmc
test
dec
jb
ret
outs
mov
vmread
lock
scas
sub
movs
not
or
push
mov
test
in
adc
mov
mov
es
fsub
(bad)
add
outs
and
cdq
or
lahf
cs
pop
cmp
inc
aas
mov
cmp
jns
ins
mov
ins
add
jbe
mov
lods
push
push
push
inc
and
jnp
pop
fs
cli
inc
dec
push
fld
ins
and
adc
std
cmp
add
sub
and
sahf
enter
pop
bound
pop
jmp
pcmpgtb
fimul
mov
lea
sub
sub
js
xor
mov
aaa
std
lods
cmp
cwde
pop
inc
popf
jge
dec
cmps
ret
pop
push
in
or
icebp
outs
aas
dec
jp
pop
mov
adc
es
aam
dec
sub
adc
rol
dec
inc
pop
pop
sbb
fsub
push
jl
sbb
push
adc
hlt
xchg
cmp
fs
out
repz
and
js
in
imul
mov
jne
ins
mov
xor
xchg
xchg
outs
(bad)
mov
test
in
scas
jp
(bad)
out
jmp
in
jae
or
movs
in
or
scas
ret
mov
pop
inc
es
(bad)
ds
sub
inc
ja
and
jne
ss
dec
pop
pusha
mov
adc
cmps
inc
mov
retf
push
sbb
mov
sub
sbb
and
push
jp
cdq
js
ja
stc
sub
es
add
xchg
adc
dec
pushf
ret
sub
loopne
inc
mov
xor
and
addr16
adc
ins
cmp
add
bound
repnz
inc
jnp
mov
scas
sub
mov
xchg
push
dec
scas
ss
ror
and
outs
fdivr
push
and
sub
and
rol
push
sti
jae
je
call
in
mov
sbb
je
nop
les
or
into
in
sub
das
(bad)
and
ficom
push
sbb
clc
popf
(bad)
sahf
jmp
rol
push
adc
mov
sbb
ror
popf
frstpm(287
test
cmp
test
mov
(bad)
aaa
sbb
add
xor
das
pusha
std
lods
aaa
mov
out
mov
xchg
jge
cmc
call
pop
or
aaa
outs
push
in
mov
xor
int3
(bad)
mov
in
dec
dec
test
mov
movs
dec
les
dec
sub
jecxz
jmp
mov
push
xchg
cmps
or
mov
cmp
inc
mov
cmp
cmp
retf
icebp
jno
fwait
nop
mov
addr16
xor
rol
popa
inc
sub
dec
cmc
test
adc
jb
ins
or
mov
shr
arpl
rcl
cld
lea
push
jle
push
fs
fmul
fadd
lock
jg
dec
jge
cmp
repz
inc
outs
addr16
out
addr16
(bad)
push
xor
pop
jmp
stc
cmp
pop
dec
add
sbb
pop
shl
mov
xor
push
inc
test
gs
scas
call
mov
das
or
test
xchg
lods
and
pop
mov
shl
dec
mov
adc
mov
test
(bad)
pop
stos
push
ss
in
mov
jg
adc
lds
jmp
lock
movs
bound
mov
adc
jmp
cli
pop
xchg
push
fwait
add
pop
pusha
push
in
xor
ret
jl
ins
pop
test
cmp
xchg
int
or
xchg
call
push
mov
into
cs
or
adc
daa
loope
jbe
les
jbe
xchg
(bad)
sub
add
mov
(bad)
test
scas
jbe
fs
clc
unpckhps
call
jo
add
(bad)
and
and
add
inc
jbe
sub
jecxz
mov
test
push
cmc
push
fisubr
icebp
mov
jno
mov
sbb
xchg
loope
xchg
jecxz
push
inc
(bad)
xor
mov
xchg
pusha
sbb
(bad)
mov
and
push
add
pop
pop
test
xchg
ret
push
ret
mov
cmp
xchg
push
data16
retf
addps
fdiv
out
add
or
jl
or
xchg
pop
fs
pushf
scas
xchg
scas
dec
in
inc
dec
fcomp
test
dec
dec
in
outs
scas
dec
cs
rcr
jns
(bad)
push
sub
ss
ds
xchg
adc
xchg
jecxz
repz
repnz
leave
jp
retf
jae
(bad)
test
adc
cmp
(bad)
fbstp
popa
sub
pop
imul
mov
cld
and
jl
mov
sub
lock
repnz
cli
mov
pop
lea
or
pop
mov
and
retf
into
lods
rol
or
mov
fidiv
leave
mov
lahf
cmp
dec
(bad)
adc
xchg
jae
ins
loope
sbb
mov
mov
push
dec
sbb
add
jbe
aad
jnp
fdivr
mov
adc
mov
sbb
lock
xchg
xlat
or
xor
fwait
xlat
rcl
bound
inc
add
pusha
pushf
outs
bound
mov
dec
xor
fidivr
repnz
mov
retf
ficomp
sub
mov
in
or
hlt
mov
fstp
jmp
inc
pop
dec
pop
icebp
stc
push
les
jl
in
(bad)
cmps
inc
sti
ja
jns
jge
xchg
in
jb
xor
or
fmul
shl
cmps
push
lahf
out
jmp
mov
adc
mov
mov
rcl
mov
aad
push
xor
repnz
div
leave
(bad)
mov
pusha
and
mov
stc
adc
out
bound
jne
pop
loop
movs
jle
inc
mov
adc
mov
mov
das
loop
clc
sub
cwde
aas
dec
cmp
call
bound
clc
or
pop
aaa
cwde
icebp
rol
and
cmp
pop
xchg
(bad)
scas
leave
and
sub
xchg
test
shr
arpl
sbb
mov
jmp
push
pop
xor
cmp
js
out
sub
(bad)
bound
outs
frstor
pop
pop
out
arpl
sti
mov
push
pop
add
or
sbb
jo
xchg
cmp
popa
xor
pop
and
int3
dec
pop
cmp
adc
or
sar
lods
rcr
outs
test
stos
aaa
pop
aam
sbb
xchg
mov
lock
fisttp
jmp
mov
jne
es
ficomp
mov
into
dec
jns
cmp
sub
fs
cmc
std
shl
jo
push
push
std
aad
push
adc
arpl
in
iret
add
xchg
mov
jmp
(bad)
pop
inc
pop
enter
jo
mov
(bad)
push
mov
outs
mov
in
stos
ror
les
(bad)
outs
sub
cs
outs
repnz
sub
cmp
movs
rcr
ret
jnp
stos
out
fsub
adc
daa
xor
in
mov
dec
push
ds
xchg
scas
rcr
jno
and
(bad)
xchg
retf
loop
int
daa
xor
dec
mov
cmp
xchg
nop
scas
int
(bad)
xchg
test
push
or
movs
pop
int
mov
ss
pop
xor
leave
sub
clc
arpl
mov
popa
adc
sub
inc
outs
mov
pop
push
pushf
fldcw
pop
addr16
into
int3
dec
inc
xlat
mov
cld
sbb
dec
and
inc
xchg
push
dec
leave
popa
fnstsw
inc
in
pop
icebp
sub
dec
rcl
aad
scas
push
ja
jge
inc
fs
enter
sub
sahf
mov
imul
loopne
and
jmp
loope
push
sub
das
lods
jo
in
and
mov
dec
popf
mov
adc
adc
mov
push
fiadd
fcmovnbe
pop
ret
xchg
jno
pushf
sub
adc
mov
es
movs
dec
adc
sbb
ror
mov
mov
call
lods
stc
mov
neg
mov
hlt
div
stos
adc
mov
movs
je
mov
ss
(bad)
call
shr
call
mov
out
xor
cli
mov
std
loop
or
push
mov
data16
jle
aam
and
or
push
cmp
mov
and
sub
cwde
cmp
dec
sbb
jmp
test
sar
push
mov
push
sub
inc
aam
mov
mov
ins
pop
push
pop
cs
sbb
test
aam
stos
push
jo
in
ins
lds
jo
sub
and
loop
popa
mov
mov
fidiv
sbb
xchg
das
ror
ja
xor
add
shr
aam
mov
rcr
retf
das
test
neg
(bad)
stc
mov
cwde
jns
pop
out
inc
pop
inc
cmps
sub
ja
pop
div
mov
ins
test
dec
dec
(bad)
and
sbb
mov
inc
inc
popf
jmp
jne
call
loop
cmp
loope
adc
retf
mov
lahf
inc
dec
mov
push
xor
adc
cli
out
mov
das
jl
inc
(bad)
(bad)
leave
jg
adc
xchg
inc
stos
popf
mov
jl
pusha
pop
fild
push
or
xlat
cmc
adc
mov
jmp
frstor
dec
dec
cmp
retf
retf
or
je
je
and
inc
or
lods
pop
rol
sbb
add
fldpi
or
cdq
ja
add
(bad)
push
dec
adc
cli
popf
push
fcom
in
cmc
fcomp
leave
test
mov
gs
mov
xchg
xchg
cdq
out
test
pxor
mov
add
cwde
imul
push
aad
imul
sub
or
in
bound
lahf
jle
pop
or
in
(bad)
in
neg
push
repnz
es
inc
mov
nop
and
inc
sbb
sbb
cmps
pushf
xchg
dec
mov
lock
xchg
mov
add
push
(bad)
shl
cmps
mov
xlat
push
lock
(bad)
mov
mov
nop
imul
inc
test
add
out
ror
mov
sbb
and
fcom
mov
xor
imul
inc
adc
push
lahf
jns
bound
xchg
loope
and
in
mov
and
cvtps2pi
mov
ins
push
mov
sub
int3
std
dec
push
pop
inc
jge
mov
and
lods
xchg
sub
int3
add
call
push
test
fs
or
sahf
retf
ror
lock
mov
xor
jne
inc
(bad)
jge
lods
mov
and
sbb
pop
push
mov
jns
mov
mov
xchg
mov
xchg
cmp
mov
adc
jmp
call
mov
aas
xor
hlt
inc
jg
or
mul
sti
daa
adc
cmp
cmps
jb
inc
pushf
push
dec
int3
mov
inc
pop
pop
inc
jno
int
pop
pop
out
cmp
outs
adc
imul
inc
or
push
xchg
jecxz
push
jg
or
jmp
jae
ja
push
inc
mov
inc
icebp
push
cwde
xchg
lock
inc
mov
mov
js
div
nop
fdivr
adc
repz
mov
inc
mov
dec
pop
adc
out
jno
jo
xlat
xor
mov
adc
test
add
add
cmps
test
add
push
rcr
int
jne
cmps
arpl
ret
sbb
dec
add
ret
cmp
imul
lea
icebp
pop
push
cmps
int3
or
xor
cli
jg
loope
(bad)
push
dec
fs
popa
and
pop
jge
dec
or
mov
push
lahf
in
push
or
xor
retf
(bad)
sub
cli
inc
adc
xor
stos
(bad)
in
pop
add
inc
in
(bad)
cs
push
cmp
pop
in
push
push
pop
xchg
sub
push
fdiv
out
das
pop
daa
daa
sbb
addr16
and
xlat
das
adc
xchg
sahf
push
(bad)
jge
pusha
add
(bad)
mov
je
mov
sub
lods
shl
lods
sahf
cmp
cli
daa
add
pop
idiv
mov
in
and
in
out
dec
scas
(bad)
sbb
inc
outs
loop
and
aad
xor
pop
in
and
mov
cmps
stos
mov
outs
mov
pop
fld
int
or
popf
pop
dec
sbb
jp
aas
ret
xchg
les
ror
inc
fild
mov
jg
int
imul
or
(bad)
xor
data16
mov
fdivr
ret
or
imul
mov
mov
xchg
sub
inc
dec
xor
out
or
mov
out
fwait
jl
enter
(bad)
jg
and
xor
in
xchg
xchg
mov
jecxz
and
dec
ror
jge
mov
mov
or
shl
hlt
pop
push
or
loope
ja
jne
mov
jle
pushf
jl
jl
mov
jo
fist
jg
sub
mov
inc
xlat
mov
mov
xor
rcr
xchg
out
mov
push
mul
push
xor
(bad)
dec
ret
in
sub
and
iret
adc
test
fmul
fnstcw
adc
gs
cld
and
in
loop
cmp
pop
add
retf
mov
push
(bad)
mov
mov
test
dec
out
sub
cmp
icebp
(bad)
(bad)
pop
retf
repnz
jns
mov
call
lea
inc
mov
add
scas
cmp
jo
or
cli
mov
mov
sub
add
(bad)
mov
(bad)
(bad)
rep
and
sub
jb
jl
fld
out
jmp
lea
xor
test
xchg
mov
xchg
xchg
or
push
ret
xlat
fidivr
aas
push
pop
mov
call
and
jnp
mov
jne
lods
mov
cmp
outs
popa
aam
mov
adc
mov
xor
and
mul
daa
push
xchg
test
retf
mov
cld
add
pop
add
ret
test
cdq
xlat
idiv
inc
in
xchg
enter
or
ror
and
push
call
push
mov
pop
dec
into
bound
gs
in
in
mov
or
dec
shr
call
stc
or
test
shr
xor
stos
pop
mov
mov
and
add
jg
sub
stc
stos
inc
inc
mov
shr
hlt
jmp
jb
test
pop
sbb
adc
sti
cs
faddp
imul
dec
xor
pop
call
add
pinsrw
cmps
pushf
hlt
cwde
test
push
xor
mov
stos
(bad)
xchg
sbb
pop
push
pop
dec
push
ja
fild
in
ror
add
and
add
xchg
push
(bad)
xor
popa
in
or
lock
lea
mov
stos
jmp
jle
xchg
div
and
jecxz
mov
mov
enter
retf
rcr
call
cli
sbb
out
call
xchg
test
dec
aas
ror
ret
add
jmp
xor
push
sbb
xor
cmp
add
cmp
loop
das
cld
movs
dec
sbb
and
in
loope
jp
(bad)
cdq
sub
adc
fwait
pop
and
es
add
jp
jmp
adc
adc
arpl
and
sbb
xchg
inc
arpl
mov
int3
mov
pop
dec
adc
mov
adc
(bad)
xor
inc
mov
xchg
pop
pop
shr
inc
cmp
retf
outs
call
or
sahf
out
push
add
jg
stos
stos
dec
call
jns
stos
jbe
jl
mov
push
pop
inc
sbb
sub
add
in
out
push
stos
push
or
push
call
pusha
mov
sub
retf
mov
xlat
jg
mov
fcmovnb
ins
and
call
sub
and
enter
mov
fadd
sbb
cmp
in
pop
stos
int
or
xchg
out
jbe
adc
mov
jmp
stos
mov
ret
pop
push
(bad)
add
movs
repz
xchg
jl
pop
adc
test
dec
xchg
sbb
dec
xlat
loop
dec
or
ja
nop
ds
enter
rcl
lods
outs
push
and
call
xchg
out
ins
ror
xor
or
pop
mov
and
inc
mov
ja
xor
in
adc
hlt
icebp
dec
pop
mov
sub
jmp
xchg
or
neg
jle
gs
ins
into
pop
fistp
out
xchg
add
mov
add
arpl
sbb
jmp
call
rcr
jnp
xchg
nop
jo
xor
xor
push
sbb
es
xor
mov
icebp
sar
jnp
daa
inc
daa
and
jno
dec
sub
outs
inc
cmps
or
ins
outs
movs
jmp
(bad)
bound
out
ja
xchg
mov
popf
push
push
pop
das
mov
popf
fild
mov
leave
inc
pop
cmp
mov
dec
mov
jbe
jo
jns
(bad)
data16
repnz
int3
hlt
mov
jno
sbb
mov
(bad)
jo
ror
cmp
adc
into
pop
in
mov
pop
mov
mov
mov
ss
adc
dec
sub
jb
fst
retf
adc
pop
jecxz
mov
xchg
mov
push
lods
jl
lock
push
std
bound
jecxz
popa
out
inc
push
mov
aad
fs
fld
test
in
cmp
mov
cmc
fucom
mov
shr
fnstsw
mov
add
xchg
push
inc
mov
stc
dec
jecxz
jae
pop
mov
xchg
or
push
fstp
xor
outs
and
push
jp
jl
sub
(bad)
mov
neg
inc
out
xchg
mov
sub
mov
dec
mov
add
jbe
adc
fadd
cmp
lock
js
push
leave
mov
jle
retf
pushf
jg
cmc
sub
jbe
cld
aam
cmc
or
xchg
fsubr
lods
aam
loope
fnstcw
imul
in
push
repz
ins
push
mov
fstp
jl
mov
inc
popa
mov
sub
add
mov
popa
pop
icebp
cmp
adc
scas
pop
jo
jno
mov
sahf
and
popf
jmp
daa
lahf
mov
ins
mov
adc
add
daa
push
xor
and
xor
pop
jne
lea
das
jp
in
push
sbb
xor
mov
add
leave
inc
xor
mov
fs
cmc
cmps
hlt
add
pop
push
and
popa
pop
in
or
xor
mov
stc
enter
or
cmc
call
mov
mov
jno
sbb
xor
fdivr
mov
mov
jne
add
xchg
mov
das
in
shr
add
cmps
mov
inc
addr16
clc
xor
inc
imul
mov
ins
iret
ror
pop
aam
iret
pop
add
push
imul
pop
les
inc
inc
add
imul
mov
pop
mov
es
loope
ret
(bad)
mov
pop
test
aam
inc
add
pop
cmp
dec
xor
pop
cli
or
fs
mov
add
xchg
test
pop
(bad)
(bad)
pop
mov
(bad)
pop
inc
xor
jle
int3
(bad)
sti
lock
xchg
sub
je
mov
cdq
imul
push
mov
push
lock
mov
in
(bad)
mov
sbb
mov
mov
pop
fwait
pop
dec
daa
add
xor
retf
jo
dec
mov
xchg
dec
jno
adc
std
loopne
inc
pop
int3
xabort
mov
xor
and
or
inc
sub
out
push
sbb
fbld
and
movs
xor
ins
adc
adc
lahf
in
outs
aam
loopne
pop
aas
fistp
ror
mov
dec
or
int3
dec
adc
and
mov
cmps
mov
adc
std
(bad)
pop
adc
push
sbb
data16
pop
sbb
jmp
repz
or
ja
sub
call
push
push
mov
scas
mov
imul
inc
xchg
sub
scas
jns
imul
cmps
mov
outs
xchg
xor
xchg
imul
push
mov
test
test
es
fs
(bad)
jae
jp
and
test
lods
mov
push
mov
test
(bad)
xor
and
mov
scas
push
push
dec
xor
stos
mov
cmp
test
push
pop
mov
push
scas
imul
ret
in
and
das
repz
(bad)
adc
pop
inc
sbb
fisttp
hlt
imul
out
cmovnp
aaa
pop
and
(bad)
ss
fucom
cwde
or
(bad)
scas
mov
mul
push
ds
add
daa
arpl
xchg
cdq
out
fs
cmps
das
sub
mov
jbe
push
fwait
mov
inc
jb
data16
std
jo
push
and
push
pusha
add
or
inc
jle
(bad)
popa
sub
sbb
xor
cmp
rol
or
pop
jae
cmp
push
sub
popf
cmp
loopne
out
bound
xor
push
ja
sar
cmc
push
movs
adc
sub
jnp
lea
pop
xchg
aad
scas
and
sbb
ins
(bad)
stos
cmps
lea
in
sbb
cmc
xchg
push
inc
mov
xlat
mov
jb
sar
jle
mov
neg
pop
xchg
aad
or
jge
cmp
jmp
jecxz
mov
push
jno
mov
inc
stos
inc
ror
sbb
sahf
inc
int
mov
xor
cmps
dec
sti
(bad)
mov
mov
adc
dec
dec
mov
das
inc
jecxz
sbb
stos
test
cmps
pop
push
mov
and
jl
and
into
sbb
test
outs
nop
enter
mov
das
out
jnp
sub
add
jbe
aad
and
sbb
sbb
fimul
sbb
ja
sub
pop
xor
sti
lods
loopne
jb
push
imul
je
jbe
je
sub
mov
and
pusha
push
push
and
lahf
ds
icebp
test
adc
mov
iret
or
imul
add
adc
mov
nop
fld
(bad)
es
les
cmps
pop
std
sub
or
fcomp
jbe
push
cmps
add
or
and
loopne
xor
pop
pop
xchg
jno
add
inc
sbb
inc
dec
pop
dec
cmp
nop
xchg
daa
bound
xchg
ja
int3
pop
mov
iret
push
pop
lods
fimul
arpl
and
leave
sti
cmp
or
inc
hlt
mov
mov
mov
loope
cmps
retf
mov
xchg
rcl
lods
cmp
sub
xor
sub
int3
outs
(bad)
out
adc
aad
dec
retf
and
(bad)
int3
xor
inc
in
pop
xchg
jne
xchg
pop
ja
outs
cld
push
mov
or
jmp
stc
dec
mov
in
nop
fbstp
jl
repz
imul
pop
test
aam
test
call
mov
inc
fbstp
jb
mov
xor
dec
mov
push
cdq
dec
or
add
mov
into
add
int3
jle
aas
sbb
ins
pop
jge
jae
mov
xlat
jg
inc
cmp
dec
add
push
jne
xor
adc
popa
(bad)
adc
jb
sub
loop
cmps
jno
sbb
iret
inc
bound
fcmovu
movs
sar
(bad)
mov
mov
xchg
xor
addr16
mov
outs
out
sub
sbb
fdivr
cmp
mov
push
out
shl
ret
in
mov
jl
xor
outs
mov
call
ret
aas
push
adc
push
retf
je
test
scas
mov
mov
xchg
add
and
outs
ss
nop
dec
pop
loopne
dec
lahf
stc
sbb
loop
dec
ds
test
and
pop
daa
mov
or
adc
cli
fnstenv
adc
cs
mov
jle
out
xor
loop
sub
shr
mov
out
push
scas
or
and
add
fisttp
fwait
mov
out
(bad)
mov
and
xor
mov
retf
jno
sub
pop
fcom
push
mov
and
mov
and
or
nop
fnsave
mov
pop
pop
sub
dec
repnz
and
imul
xchg
mov
mov
fld
stc
in
test
sub
add
adc
inc
ficomp
fsubr
and
dec
add
les
mov
inc
push
pusha
xchg
aas
in
or
or
push
dec
rcl
push
outs
jmp
add
inc
aam
(bad)
or
pop
sahf
sub
cmp
dec
jecxz
and
adc
mov
cmp
mov
sub
fucomip
ret
jmp
push
std
cwd
outs
pusha
adc
(bad)
or
(bad)
pop
ja
adc
repnz
fdiv
(bad)
imul
(bad)
outs
jg
(bad)
std
aaa
aaa
popf
cmp
jl
xchg
mov
mov
mov
jnp
int3
dec
out
xchg
jne
add
lods
aad
call
in
xchg
sub
jmp
retf
stos
mov
mov
loopne
mov
leave
(bad)
push
dec
push
xchg
sbb
and
dec
pop
out
sub
or
mov
jp
push
jae
pop
pop
fsub
add
inc
pushf
jl
or
cs
imul
aad
and
mov
ss
imul
push
mov
pop
and
cmp
adc
mov
cli
hlt
push
fnstenv
push
cmp
xchg
lds
and
push
mov
daa
pop
inc
inc
inc
jle
dec
push
sub
(bad)
fisubr
iret
sub
pop
sub
jecxz
loopne
out
icebp
sub
inc
(bad)
je
or
jo
pop
in
popa
ja
(bad)
scas
adc
cld
inc
sbb
or
mov
(bad)
cmc
cmp
and
sub
rol
sar
and
das
pusha
mov
push
js
movs
push
or
scas
retf
ins
int
pushf
les
inc
mov
push
sub
xlat
fbld
xor
test
(bad)
cmp
std
js
add
pop
dec
xor
adc
sbb
mov
mov
adc
rcr
enter
mov
test
cmps
add
adc
sub
sbb
cmp
xchg
(bad)
in
int3
(bad)
mov
mov
push
int
into
pop
loop
(bad)
fcmovnbe
mov
dec
mov
pop
jo
pop
iret
gs
pop
pushf
mov
pop
push
add
push
cmc
es
cmp
cmps
mov
imul
hlt
jmp
push
leave
mov
nop
test
xchg
adc
out
sub
popf
adc
dec
pop
(bad)
and
cs
call
sbb
inc
fst
adc
xor
daa
sbb
cmp
sbb
call
xchg
int
jb
and
icebp
frstor
jne
and
pop
pop
cmps
retf
xor
loop
aas
aam
enter
test
jg
pushf
sbb
add
std
inc
jbe
jne
inc
or
push
dec
add
jae
cmp
mov
cmp
inc
inc
jnp
pop
xchg
in
leave
jmp
pop
cmc
dec
outs
cdq
sub
add
jmp
xor
and
call
mov
mov
jo
les
stc
xchg
fist
sti
clc
pushf
inc
ret
pop
stos
xchg
leave
xor
fwait
test
xchg
push
mov
mov
fcomp
sub
xchg
xchg
xor
int
mov
mov
inc
xchg
jbe
or
push
mov
or
or
dec
or
jno
lock
cmps
popa
mov
pop
dec
add
test
or
mov
pusha
jne
mov
cmc
hlt
pusha
ins
dec
push
adc
popf
bnd
inc
(bad)
test
neg
(bad)
push
test
sbb
dec
dec
cmp
push
enter
jp
xlat
jno
repnz
mov
fdivr
pop
sbb
xor
outs
sbb
cmp
add
dec
push
cmps
fsub
xchg
ja
(bad)
aad
cmps
movs
xlat
sub
out
jo
into
inc
call
lods
add
dec
aam
xor
xchg
pushf
cmp
scas
fisubr
mov
icebp
add
enter
push
sub
ror
jae
mov
movs
adc
mov
xor
sbb
push
fcompp
dec
adc
jbe
(bad)
mov
push
call
cmp
call
in
mov
sub
arpl
test
jge
fs
mul
cmc
lea
sbb
retf
ds
sbb
jle
je
out
das
call
scas
jno
js
cmps
js
and
(bad)
test
sbb
sub
lock
or
push
inc
ja
pop
hlt
jmp
inc
cmps
out
jb
sub
pop
leave
push
ss
xchg
jbe
enter
pop
jbe
or
aaa
arpl
in
pushf
mov
add
sbb
or
cli
pop
fisub
in
jne
call
sub
cs
xchg
fcmovnb
sub
data16
jns
jmp
sbb
scas
jno
jmp
or
push
ret
in
(bad)
fild
clc
pop
dec
lea
push
and
sahf
xor
cmc
push
sbb
dec
lahf
into
sub
lods
xor
mov
pusha
push
and
test
inc
sbb
xchg
sbb
jae
xor
or
inc
sbb
adc
(bad)
mov
rol
jno
mov
jmp
out
dec
iret
lock
or
dec
stc
popa
into
cmc
mov
test
mov
dec
add
cmp
retf
dec
fwait
arpl
daa
loopne
pushf
test
std
inc
mov
mov
mov
lods
xor
sub
test
adc
sbb
and
pop
xor
fcmovbe
mov
fisttp
(bad)
or
ins
sbb
push
sub
shl
movs
mov
stos
imul
js
cmp
sbb
sub
push
or
(bad)
push
push
arpl
jg
out
adc
ins
jb
mov
push
enter
jbe
gs
sbb
cmp
fisttp
jb
cmp
cmp
jnp
inc
iret
dec
dec
(bad)
mov
cdq
mov
add
fdiv
lahf
out
jl
jmp
sub
clc
push
test
add
shl
out
scas
stc
inc
enter
(bad)
test
lods
sbb
leave
clc
jl
mov
fadd
stc
ss
inc
add
sub
ficom
pop
mov
pop
push
daa
and
sahf
das
sbb
or
add
push
push
lods
pop
and
jbe
or
mov
mov
rol
add
ins
out
pop
jmp
xchg
pop
in
sahf
(bad)
and
mov
lea
add
aad
or
mov
adc
gs
mov
pop
xchg
pop
mov
sub
dec
cmc
xchg
les
mov
sub
adc
cmps
lea
pop
std
(bad)
push
or
cmp
push
pushf
arpl
mov
(bad)
inc
mov
fisttp
or
pop
fld
or
xor
inc
mov
cli
bound
adc
test
lods
jmp
adc
mov
repz
xchg
sbb
adc
imul
pop
shl
scas
xchg
pusha
pushf
mov
xor
loope
jmp
dec
xchg
(bad)
call
cmp
test
mov
out
sbb
push
mov
fld
out
push
mov
mov
mov
jmp
ret
das
pop
retf
pusha
pop
xchg
ja
pop
or
outs
inc
dec
xchg
imul
(bad)
sbb
jbe
fs
movs
rcr
push
mov
push
sub
cmp
xchg
add
test
repz
ret
nop
mov
fidiv
adc
pushf
(bad)
jmp
mov
xor
aad
adc
mov
add
jae
iret
shl
xchg
mov
sbb
sar
mov
and
sti
xor
les
ret
ficomp
or
mov
outs
ret
inc
popa
aad
fdiv
pop
sub
pop
aaa
jmp
mov
gs
lods
imul
jmp
fwait
xor
movs
dec
mov
jo
cmc
xor
pusha
mov
shl
enter
mov
and
pop
ins
outs
mov
mov
cmps
cmp
add
push
push
fwait
sub
(bad)
mov
add
sbb
sub
ins
addr16
cmp
lahf
(bad)
cld
pop
cmps
sub
add
sub
xlat
not
or
push
lahf
(bad)
xchg
inc
sub
jb
jb
sub
jle
test
add
pop
add
push
and
mov
popf
fs
neg
adc
daa
in
push
add
xor
cmp
jb
add
int
outs
out
sar
inc
jl
rcl
in
popa
push
jne
in
retf
js
mov
pop
lock
mov
xor
sub
jg
push
addr16
call
mov
dec
retf
scas
jnp
test
stc
mov
repz
xchg
mov
in
mov
dec
fucomip
push
movs
adc
(bad)
rol
sti
jge
es
outs
(bad)
(bad)
inc
push
mov
jmp
jb
cli
aad
ja
out
mov
lahf
aaa
dec
mov
outs
mov
rol
mov
push
pop
data16
pushf
lds
loope
mov
les
aam
mov
xchg
mov
and
popa
mov
jg
cmc
sub
(bad)
pop
mov
fimul
mov
and
cmp
inc
fidiv
push
pop
loopne
call
mov
cmc
movs
xchg
mov
dec
xor
and
ins
jns
fist
mov
push
popf
or
mov
retf
hlt
stos
xchg
aas
dec
popf
cwde
ficomp
clc
push
adc
push
sub
sar
add
lahf
sbb
loope
aaa
mov
mov
xor
mov
sub
xchg
aaa
mov
cmp
into
in
push
int
test
sub
test
scas
pop
cmp
imul
jl
mov
loope
loopne
data16
shl
std
xchg
bound
mov
int
inc
lods
xor
add
dec
ror
sar
cdq
clc
add
xor
aam
pop
(bad)
shl
outs
test
cs
xchg
and
xlat
xchg
inc
push
or
dec
rcr
imul
jno
jg
xor
jnp
scas
cmp
add
lods
mov
and
sub
cmp
fdiv
(bad)
cmp
xchg
in
jecxz
sbb
in
fs
and
neg
shr
xor
dec
xor
lods
add
or
fld
fild
mov
sub
and
jnp
mov
(bad)
and
cmps
inc
mov
add
add
stos
in
inc
dec
mov
push
stc
ror
sub
push
test
xor
addr16
inc
push
bound
mov
jbe
in
cmp
int
mov
cmp
loopne
or
sbb
pop
fist
push
jmp
mov
aaa
push
xor
fild
repnz
iret
sub
cmp
cmp
js
sti
jnp
jmp
jnp
popf
mov
mov
xor
mov
aas
jae
jno
arpl
mov
xchg
jmp
mov
out
add
xchg
xlat
mov
xchg
xchg
xor
idiv
and
mov
mov
pop
xor
lock
lock
das
test
pushf
loope
iret
adc
sub
(bad)
xor
lods
fbld
adc
jo
stos
mov
jg
xor
stos
pop
add
or
pop
inc
js
push
xchg
sbb
sbb
mov
std
aaa
stos
push
jl
mov
test
cdq
out
ret
sbb
gs
lds
dec
xor
push
pop
pop
(bad)
(bad)
into
mov
fwait
les
push
jne
xchg
xor
mov
mov
jge
int
aas
jl
and
inc
test
adc
jb
js
inc
cmp
add
test
xor
gs
inc
outs
pop
xor
sbb
jmp
int3
fadd
inc
pop
and
dec
gs
pop
outs
pop
shl
(bad)
fdiv
cwde
fsubr
popf
cmp
out
mov
inc
rcl
mov
movs
mov
sar
retf
lods
cmp
mov
imul
fcomp
fs
mov
dec
cli
xchg
bound
xchg
cwde
sti
ins
pop
pop
fisubr
or
retf
std
das
es
retf
in
fist
pop
out
test
mov
sar
out
cmp
in
dec
inc
outs
mov
in
ja
arpl
inc
fmul
push
mov
cmp
iret
retf
sub
test
dec
jmp
sub
gs
das
push
and
mov
inc
dec
div
iret
repz
mov
mov
sbb
add
sub
dec
adc
(bad)
or
nop
push
or
pop
adc
int3
inc
pop
xchg
xchg
leave
sbb
mov
jb
scas
aad
in
inc
mov
dec
mov
es
mov
inc
and
(bad)
cmp
fwait
stos
jg
cmps
(bad)
pop
mov
jge
mov
jp
inc
(bad)
ins
sbb
ja
out
cs
(bad)
and
mov
mov
xchg
push
inc
dec
pop
pop
(bad)
mov
jecxz
jbe
hlt
sub
mov
inc
je
aad
or
mov
popf
inc
fmul
sbb
pop
push
loopne
ins
mov
jnp
pop
xchg
jne
mov
popf
call
or
xor
sbb
lds
in
mov
nop
cmp
xchg
(bad)
jno
xchg
push
xchg
push
add
scas
int
mov
fisubr
xchg
outs
fld
enter
adc
rcl
push
jns
push
cs
jae
lock
xchg
inc
ins
lods
adc
pop
sub
xor
adc
sub
outs
movs
cmc
movs
ret
js
in
mov
fiadd
sub
iret
mov
lock
fnstcw
or
sbb
cdq
or
push
inc
adc
in
xchg
sub
push
adc
jl
add
xchg
mov
fwait
ror
out
mov
addr16
shl
mov
sti
das
test
cdq
jp
jne
mov
stc
loop
rcl
repz
lahf
push
das
das
ja
add
fnsave
ficom
xlat
mov
mov
pop
xchg
mov
xchg
shl
call
xchg
retf
xchg
aaa
es
movs
xchg
in
pop
fwait
xchg
mov
ja
pop
inc
push
pop
or
hlt
and
(bad)
mov
ror
push
fimul
mov
mov
inc
sbb
mov
bound
cmp
je
jno
jge
or
fsub
mov
fnsave
jle
jp
test
pop
lock
jmp
call
stos
sbb
in
sub
retf
cmc
in
iret
(bad)
jmp
add
push
mov
lods
cmps
test
xchg
repz
add
sahf
jno
in
xchg
imul
jp
dec
jno
es
mov
inc
bound
and
cmp
adc
sbb
cmp
imul
jecxz
int
mov
adc
jnp
xchg
or
and
arpl
neg
lods
and
shl
cld
mov
inc
dec
ror
cld
in
inc
fistp
clc
jg
xchg
outs
jb
mov
idiv
stc
ds
sbb
sub
mov
aad
ins
sahf
movs
mov
aas
scas
sbb
jnp
adc
dec
mov
out
add
mov
inc
mov
ins
jmp
popf
div
pushf
jnp
int3
cmp
xchg
dec
or
mov
icebp
fcomp
dec
hlt
fcmovnbe
dec
cmp
jo
loopne
aaa
lods
nop
dec
xor
or
push
jnp
and
sbb
xor
push
pop
jp
sub
mov
popa
jno
and
hlt
aad
call
mov
inc
mov
fcomp
fwait
cdq
adc
call
mov
pusha
shl
les
jns
repz
xor
aaa
sub
sub
mov
sbb
jb
dec
jo
mov
in
push
jnp
adc
inc
sbb
or
or
xor
jp
out
mov
imul
imul
lods
shl
ins
out
imul
test
retf
ficomp
jp
(bad)
xchg
cmp
stc
mov
je
mov
jns
les
daa
(bad)
jo
gs
xchg
jl
mov
pop
ret
in
or
jl
cmps
dec
adc
xchg
fwait
sub
jbe
cmc
jmp
push
loop
or
or
dec
les
push
cmp
aas
js
push
cdq
vcvtss2si
mov
imul
nop
ins
inc
jae
imul
in
fadd
mov
retf
cmps
test
sbb
inc
add
cmp
mov
push
pop
inc
mov
out
dec
test
push
out
test
int3
push
pusha
push
xchg
loopne
popa
push
mov
imul
pop
xchg
(bad)
sub
not
xchg
xor
sub
sub
aaa
pusha
xor
mov
push
in
dec
mov
jmp
dec
shl
mov
aad
aam
outs
push
std
push
pop
aam
xor
int3
ins
adc
popf
or
ficomp
daa
sub
into
ror
sbb
int
sti
dec
adc
jge
pop
mov
shr
adc
shr
cmp
scas
fbld
jp
mov
cld
stos
push
mov
xor
push
jbe
xchg
fstp
ret
mov
sbb
mov
comiss
push
call
neg
sub
leave
cmp
add
sub
cli
daa
mov
xlat
push
adc
test
sub
and
push
mov
shl
jmp
mov
xlat
or
mov
(bad)
es
call
outs
std
add
mov
xchg
ins
xchg
xor
add
iret
outs
frstor
or
arpl
imul
fisub
and
adc
popf
inc
clc
or
jae
rol
mov
enter
fs
dec
add
movs
jge
adc
and
repz
adc
std
xchg
jecxz
test
retf
and
rcr
sbb
dec
repz
pop
pop
movs
mov
retf
call
or
pop
addr16
adc
data16
cmc
es
sub
xor
xor
mov
femms
test
adc
in
shr
dec
ret
sub
pop
fadd
pop
add
adc
dec
dec
or
jmp
in
jmp
(bad)
stc
and
cmp
sbb
and
call
pop
ret
sti
cmp
mov
mov
gs
sbb
add
push
lahf
mov
xor
dec
mov
out
dec
mov
or
data16
mov
sbb
adc
cmps
(bad)
popf
jno
inc
loopne
inc
mov
push
jmp
sbb
dec
ss
or
push
xor
addr16
inc
mov
pop
lea
sub
rol
mov
fistp
es
setge
nop
push
xor
mov
mov
xchg
test
clc
adc
pop
das
clc
sbb
push
mov
push
xor
cmp
jmp
mov
push
sub
test
pop
pop
repz
dec
xor
js
(bad)
pop
pusha
inc
and
mov
mov
jns
xchg
movs
jge
nop
test
mov
call
scas
sbb
outs
cmc
cmps
mov
test
in
in
pusha
div
lods
and
jmp
(bad)
loopne
jecxz
in
or
mov
shl
pop
ja
leave
pop
imul
or
retf
dec
data16
xchg
cmp
daa
es
cmp
or
div
fsub
mov
jae
das
fisttp
loope
loope
mov
ss
inc
mov
aaa
sbb
stc
(bad)
adc
mov
call
jno
fnstsw
icebp
mov
sub
imul
and
jns
pop
retf
(bad)
cwde
pushf
xor
sbb
mov
nop
retf
inc
daa
jmp
ret
std
(bad)
fwait
jle
loop
add
out
fisub
(bad)
xchg
retf
xchg
pusha
mov
mov
out
or
xor
clc
inc
icebp
arpl
std
xchg
xchg
sti
mov
jbe
and
fnstsw
xchg
add
xor
(bad)
jg
loope
sbb
inc
sbb
add
sbb
movs
aad
pushf
retf
(bad)
pop
xchg
xlat
outs
or
xor
jmp
xor
jnp
xor
nop
adc
fisttp
hlt
xchg
jo
fcom
inc
push
jb
pushf
jo
enter
rol
in
mov
jge
lock
mov
or
(bad)
repz
xor
cmp
inc
xchg
int
cld
jb
xlat
xor
add
pop
jp
sahf
test
out
mov
fimul
pop
mov
push
psllq
outs
jle
in
mov
pop
xchg
push
xlat
mov
and
(bad)
data16
sbb
(bad)
fdiv
dec
popa
stc
mov
mov
mov
clc
retf
push
jnp
aaa
outs
and
rcl
xlat
push
jae
push
sbb
sbb
sar
push
icebp
popf
in
sbb
fisub
rol
xchg
jb
push
in
jmp
jo
rcl
xor
push
repnz
jbe
push
imul
dec
mov
inc
call
mov
std
js
pop
lds
aad
pop
xor
(bad)
jne
cmp
pop
dec
dec
outs
lock
iret
push
sahf
dec
push
sbb
call
mov
stos
loop
jle
xchg
in
mov
dec
enter
jge
test
stos
mov
xor
adc
xor
aaa
mov
mov
mul
or
push
movs
imul
sbb
and
out
shr
shl
xor
sbb
xor
dec
repz
enter
mov
mov
outs
outs
push
jnp
pop
stos
pop
mov
shr
int
xlat
rcr
aam
add
inc
jb
sbb
imul
sbb
mov
sbb
sbb
inc
push
in
mov
xchg
cmp
sub
inc
xchg
mov
fcmovnbe
imul
ds
or
mov
add
dec
and
outs
xlat
xor
stos
retf
fs
(bad)
jmp
dec
xchg
movs
sub
and
lods
add
xchg
pop
cmps
jle
and
fs
sub
cmps
es
das
imul
pop
addr16
mov
retf
inc
(bad)
add
pop
cmps
in
add
out
push
ss
ss
or
add
xor
cmp
adc
iret
dec
retf
add
in
jl
add
jbe
(bad)
mov
je
or
xchg
cdq
push
loope
cdq
mov
std
ret
movs
rcl
adc
cmps
popa
fs
shr
sub
int
movs
or
dec
pop
fucom
adc
scas
je
lock
in
iret
call
and
or
shr
adc
je
and
push
stos
lds
mov
sub
adc
dec
push
jmp
hlt
jecxz
and
and
sub
cmc
mov
fwait
and
and
test
cmp
clc
mov
inc
inc
jo
cdq
cmp
sub
in
add
lock
add
in
mov
out
pop
push
pop
and
aas
add
imul
loop
pop
imul
and
js
pop
fsubrp
lods
xor
das
ficom
test
push
mov
dec
dec
lods
fisubr
rcl
loop
fs
ficomp
call
push
pop
sbb
push
jne
in
mov
out
mov
test
jne
aad
sahf
fdivr
xor
pop
out
(bad)
mov
sbb
ins
xor
lahf
pop
adc
mov
mov
rcl
jnp
outs
retf
stos
xchg
inc
stos
scas
inc
sahf
mov
mov
div
sub
sahf
mov
into
lea
jle
lock
aaa
xor
mul
dec
int
sahf
dec
and
mov
jl
loop
in
imul
nop
cmps
push
repnz
sbb
pop
mov
jmp
lock
rol
push
imul
cmps
dec
addr16
inc
fsubr
ret
pop
jae
loopne
fucomi
sahf
adc
inc
fadd
lods
mov
jl
adc
xor
cmp
mov
inc
jg
(bad)
add
stos
xor
cmp
add
dec
sbb
arpl
nop
add
mov
sbb
ja
vhaddps
xor
add
xchg
mov
jno
nop
add
dec
cld
mov
sbb
cmc
dec
cmp
repnz
sbb
sub
dec
sub
jg
dec
jge
ret
pop
bound
or
fcomp
loopne
push
aam
jg
mov
adc
in
jg
cld
jmp
lods
push
fcom
dec
xor
icebp
push
call
sub
call
hlt
sbb
bnd
sub
mov
sbb
inc
jb
sub
adc
and
(bad)
das
das
jge
test
jne
mov
call
(bad)
xor
pop
shl
add
and
or
inc
lods
lods
imul
in
push
add
loop
int
pop
push
scas
or
pushf
push
pop
js
retf
mov
jmp
mov
dec
xchg
retf
jns
xchg
mov
outs
dec
and
pop
jmp
std
cmp
push
xor
aas
mov
(bad)
jb
shr
fucom
push
sbb
sub
inc
xchg
xor
cmc
mov
mov
mov
sbb
mov
cvtpi2ps
loope
sahf
arpl
ret
arpl
cmp
imul
fidivr
add
(bad)
out
shr
pop
inc
fdivr
push
inc
loopne
mov
call
data16
loopne
sbb
pop
mov
inc
clc
je
inc
push
cmp
push
jg
das
loop
sahf
or
inc
cmps
push
rol
retf
adc
or
xchg
mov
push
and
scas
aaa
inc
sbb
loope
and
shr
mov
and
mov
inc
inc
sahf
enter
movs
xor
xchg
cmp
pop
je
jmp
sub
adc
fbld
sub
push
mov
jp
fadd
out
arpl
rcr
dec
mov
retf
retf
sub
dec
or
punpckhdq
mov
dec
push
xchg
das
jbe
push
mov
lds
loop
in
pushf
(bad)
leave
inc
stos
or
repz
and
or
ins
(bad)
pop
xor
je
sub
inc
sbb
or
test
mov
inc
lahf
xchg
scas
pop
add
mov
dec
ins
mov
arpl
jl
callw
pop
stc
je
call
mov
gs
rcr
dec
fs
pop
ss
inc
popf
and
or
mov
test
add
cmps
loope
jge
sbb
push
lahf
sbb
pop
dec
aad
jbe
xchg
dec
jecxz
pop
dec
(bad)
stos
std
or
xor
into
push
pop
lods
or
inc
mov
push
push
xchg
xlat
and
(bad)
pop
push
bound
push
mov
imul
retf
xchg
sar
lock
mov
enterw
rcl
loopne
jge
aad
jp
pop
jp
int
retf
fld
pop
ins
rcr
arpl
inc
dec
int3
les
dec
and
popf
out
adc
ficomp
call
ds
mov
sbb
sbb
inc
clc
int
lea
pop
pop
mov
jp
pusha
push
dec
jo
sub
cmc
scas
loope
xchg
jecxz
mov
xor
push
hlt
movs
ss
sub
or
retf
cmc
pushf
loop
mov
cmps
mov
stc
xlat
and
xlat
in
xor
mov
lock
(bad)
sub
mov
sbb
jmp
push
in
test
fidiv
repz
(bad)
mov
imul
pop
das
out
fs
adc
leave
daa
imul
cmp
mov
xchg
call
xchg
setle
repz
mov
scas
xchg
retf
pop
out
mov
cs
push
mov
sub
jbe
stos
cmps
pop
mov
test
fs
lods
and
and
cmc
paddusw
jae
xchg
pop
push
sub
push
outs
pop
pusha
aad
lods
inc
mul
(bad)
lods
cmps
mov
pop
fwait
(bad)
iret
data16
xrelease
mov
or
push
addr16
xchg
es
and
add
sbb
clc
and
ins
aad
shr
inc
adc
push
retf
push
and
(bad)
lea
push
stos
clc
lods
sahf
adc
xchg
adc
test
daa
push
or
jo
pop
fwait
push
cmp
gs
lock
pushf
and
mov
add
fbld
jns
add
xor
adc
push
jg
mov
mov
inc
popf
out
xor
inc
cmc
mov
and
out
adc
push
cmp
sbb
call
addr16
inc
pop
aad
and
addr16
(bad)
icebp
add
aaa
aad
push
popf
mov
sti
push
sub
enter
jmp
retf
shl
fisttp
mov
ins
aaa
imul
xchg
shr
cld
aad
or
dec
retf
mov
push
scas
jmp
outs
xchg
mov
imul
mov
cwde
nop
xchg
mov
sbb
aas
and
mov
fsub
popa
and
xor
or
mov
pushf
cmp
xlat
gs
pop
test
rcl
(bad)
nop
icebp
(bad)
ror
fistp
pop
outs
(bad)
mov
mov
add
and
mov
stos
sub
sub
jns
mov
ss
das
mov
xor
pushf
cmps
outs
dec
mov
in
in
jle
jne
adc
inc
in
call
loopne
jecxz
movs
dec
and
(bad)
dec
adc
mov
mov
fnstenv
adc
jbe
and
out
scas
repz
mov
pop
add
shr
push
loop
push
jb
scas
adc
(bad)
xor
pop
aad
jmp
or
fld
loopne
sahf
jmp
xchg
cwde
jecxz
xor
add
jns
sub
cmps
xor
sub
pop
mov
pop
arpl
hlt
ja
pop
push
popa
ins
adc
daa
idiv
aad
add
jne
scas
cdq
hlt
mov
push
dec
fcomp
dec
jnp
pop
sti
dec
mov
or
add
cmp
fsubr
(bad)
jg
xor
nop
xor
(bad)
xor
xchg
xchg
mov
cmp
popf
sub
in
and
loope
jmp
scas
shr
push
push
pop
mov
mov
add
xcrypt-ctr
cmps
sahf
cmp
jnp
iret
mov
fst
(bad)
bound
sub
sbb
loopne
adc
mov
mov
or
mov
or
or
shl
add
ret
dec
test
add
inc
jnp
add
rcr
mov
sahf
cdq
stc
push
cmp
ds
dec
adc
mov
pushf
and
mov
and
stos
and
sbb
nop
shl
jo
fwait
xchg
adc
dec
adc
adc
pop
adc
push
jbe
fwait
enterw
gs
and
movs
out
dec
es
ins
movs
fst
fstp
repnz
adc
mov
adc
mov
icebp
shr
mov
dec
and
add
dec
mov
mov
repnz
shl
push
scas
mov
add
xchg
inc
fs
je
retf
cmp
dec
aaa
mov
or
icebp
jmp
dec
pop
xchg
nop
jmp
sahf
and
add
mov
xor
dec
mov
(bad)
dec
call
mov
mov
mov
dec
mov
mov
adc
bndstx
sbb
push
or
cwde
lods
(bad)
repz
pop
es
mov
aad
xchg
pop
add
movs
dec
push
dec
out
pop
cmps
add
(bad)
retf
jmp
jecxz
lds
out
push
pop
xchg
sahf
or
(bad)
das
in
xchg
adc
test
pop
push
mov
mov
xchg
or
loope
dec
or
push
bound
dec
xchg
push
mov
cmp
and
imul
inc
dec
pop
lods
adc
imul
(bad)
and
push
jmp
or
in
and
sub
jae
xchg
daa
mov
adc
ins
or
jl
jg
ins
stos
pop
stc
fst
mov
popa
out
outs
in
ss
xor
and
jns
icebp
mov
(bad)
out
movs
inc
add
ror
ja
mov
loop
loop
movs
test
in
dec
xchg
test
popa
push
xchg
or
je
dec
popf
mov
stc
fwait
(bad)
(bad)
sub
push
stos
and
or
xor
mov
mov
mov
enter
loope
pop
xor
adc
scas
scas
adc
dec
in
inc
jecxz
imul
add
push
jns
jnp
addr16
fiadd
pop
mov
jno
xor
sub
cs
scas
and
jae
mov
push
cdq
sub
fild
inc
or
cmp
ins
mov
test
inc
cmp
fsub
fdivrp
int3
lods
ja
dec
xor
aad
mov
jae
mov
ret
ret
rol
movs
addr16
rcr
mov
mov
or
cmp
jg
loope
sub
retf
or
call
or
fxch
out
pop
je
daa
adc
pop
ins
std
jbe
sbb
cdq
enter
jge
mov
cmp
ret
cmp
dec
mov
call
add
mov
jmp
inc
jmp
std
f2xm1
icebp
out
jae
inc
mov
fcom
and
ins
ss
data16
lock
inc
inc
shl
lods
push
cs
rcl
shl
cmp
lock
mov
sbb
fs
sbb
in
mov
loop
mov
popa
add
or
loop
adc
iret
inc
sub
in
mov
leave
xchg
bound
mov
mov
cmc
cmp
lea
xchg
dec
js
mov
arpl
xor
mov
jmp
xor
dec
add
cmp
imul
and
and
cld
xor
stos
ja
xlat
cwde
mov
adc
je
mul
cmp
xor
adc
jge
xchg
cmps
pop
xor
sub
div
scas
adc
aaa
loopne
jle
es
shl
clc
or
add
lock
mov
imul
jp
mov
cld
jmp
in
lods
fnstcw
jnp
inc
mov
lahf
sbb
inc
sbb
imul
mov
or
jae
out
dec
test
in
xchg
leave
loop
mov
mov
jmp
mov
retf
adc
in
test
iret
rol
js
adc
xor
xor
test
sub
or
and
dec
inc
adc
cmp
xchg
inc
sti
sbb
sub
xchg
sub
aaa
call
push
pop
sbb
ja
jecxz
jmp
(bad)
test
daa
cdq
sar
fisttp
jp
call
pushf
sti
jno
jmp
pop
push
sub
add
ret
mov
loop
out
adc
neg
mov
int
jno
(bad)
cwde
sub
cmps
sbb
ss
pop
sub
mov
mov
mov
add
add
sbb
mov
scas
retf
iret
mov
xlat
rol
fcomp
pop
mov
cmp
jns
mov
pop
sbb
test
imul
sbb
sub
ja
inc
jo
push
and
(bad)
(bad)
pop
fucomp
icebp
retf
jo
push
jge
fimul
pop
mov
std
mov
mov
movs
cmc
ss
inc
or
sub
pop
(bad)
ds
inc
call
push
inc
sar
add
(bad)
xor
mov
ror
retf
(bad)
dec
cwde
jle
adc
adc
dec
lods
mov
test
aad
mov
mov
data16
ja
movs
adc
ja
fcomp
ret
inc
dec
int3
adc
test
cmps
cmp
push
pop
pop
loop
mov
pop
lahf
mov
je
jp
dec
stos
popa
ins
pop
clc
(bad)
mov
sbb
(bad)
push
mov
jmp
das
adc
cmp
adc
mov
add
mov
(bad)
mov
push
std
lds
push
adc
or
mov
(bad)
mov
je
in
adc
test
in
aad
xor
fs
(bad)
jmp
cmc
hlt
ret
mov
test
pop
mov
int
mov
mov
(bad)
ss
mov
inc
or
outs
pop
fdiv
xchg
aas
sbb
mov
add
js
aas
cmps
sub
pop
xchg
push
rol
js
cmp
sbb
sub
sbb
adc
xchg
xchg
inc
xlat
mov
mov
in
mov
cmps
out
sub
pop
push
test
mov
imul
jecxz
xor
xchg
ret
stos
mov
push
push
in
lods
xchg
test
sub
pop
jmp
add
xchg
(bad)
(bad)
out
and
lods
les
xchg
int3
inc
push
push
neg
ret
scas
stos
cmp
not
push
rol
mov
scas
movs
dec
mov
jb
mov
jecxz
sbb
xchg
or
inc
pop
adc
push
inc
mov
sar
and
sbb
les
shl
fs
popa
popa
xchg
sbb
push
inc
sub
cli
pop
push
aad
mov
jl
xchg
xchg
stc
cmps
inc
cmc
xchg
jp
push
scas
pop
mov
jbe
mov
das
mov
push
lods
mov
test
lods
enter
mov
inc
and
jns
push
jae
(bad)
loope
or
inc
retf
xchg
dec
(bad)
xchg
cmps
sbb
sub
or
push
adc
aam
out
scas
mov
xor
stc
and
pop
das
(bad)
rcr
jmp
es
sub
xchg
fcmovb
hlt
fistp
jl
in
pop
cmp
mov
fs
fs
cmps
jmp
jae
shl
add
mov
in
inc
jae
jg
mov
lock
retf
je
jecxz
pop
retf
iret
push
bound
and
nop
retf
dec
mov
out
enter
and
and
stos
cld
js
mov
xor
(bad)
cmps
ror
add
fwait
cdq
movs
out
icebp
test
jl
into
stos
sahf
xchg
add
inc
pop
sub
cli
inc
in
xchg
pop
add
pop
inc
lods
fwait
aad
mov
div
adc
or
scas
cld
and
jns
xor
or
jmp
inc
pop
jb
neg
in
mov
push
call
jmp
xor
add
gs
hlt
or
popa
jl
push
loope
mov
dec
int
jmp
lock
loop
add
cs
inc
inc
cmp
call
popa
out
leave
popa
enter
ret
push
fist
push
cmc
jmp
sahf
add
sub
out
xlat
pop
repz
dec
pop
mov
and
movs
or
pop
loopne
inc
xor
mov
lods
dec
iret
inc
jp
xchg
mov
lds
inc
data16
jo
ins
lahf
(bad)
fsub
stc
dec
sub
stos
mov
mov
aad
imul
cmp
sub
dec
sar
mov
pop
in
scas
jmp
call
add
mov
rcl
jmp
das
sub
scas
mov
out
std
jb
dec
fucomip
scas
das
jns
js
jne
movs
cld
jp
adc
add
pop
leave
movs
mov
lods
popf
iret
loop
(bad)
loope
bound
into
sbb
stc
xor
sub
loopne
fs
mov
mov
mov
dec
sbb
jge
ds
xor
int
xchg
push
bswap
lock
sub
and
and
or
or
push
cmp
fadd
stc
inc
aaa
aad
pop
adc
push
xlat
stc
cli
retf
xor
sub
retf
repnz
pop
int
arpl
imul
and
inc
adc
push
jne
adc
scas
mov
adc
leave
push
xchg
outs
ret
pop
push
mov
and
mov
push
mov
jno
sub
cmp
adc
mov
fdivr
lods
inc
lahf
fwait
stos
ds
adc
outs
sbb
iret
(bad)
push
fld
inc
lods
dec
cmp
add
lea
cmp
or
xor
pushf
sub
and
aas
push
fadd
aam
scas
sar
paddw
xchg
add
xchg
sbb
and
jae
fcomp
mov
icebp
cmp
imul
fsubr
add
test
ins
pop
pop
(bad)
fcmovnu
jmp
test
sbb
push
mov
pop
gs
and
inc
xchg
(bad)
sbb
push
mov
mov
push
add
pusha
ins
push
fsub
sar
pop
stc
gs
sub
xchg
shl
mov
mov
adc
sbb
outs
and
movs
push
retf
sbb
jle
adc
sub
jle
aam
mov
fmulp
jns
xchg
xchg
mov
pop
cli
and
mov
and
inc
mov
inc
jle
mov
(bad)
arpl
(bad)
out
push
popf
cmp
int3
jle
push
test
in
call
cdq
fisttp
dec
dec
retf
push
push
dec
jge
xor
pop
and
xor
lods
mov
scas
in
lods
cmp
mov
ins
adc
test
mov
sbb
loope
clc
(bad)
mov
(bad)
hlt
out
sbb
dec
sub
test
jge
fisubr
mov
hlt
(bad)
jg
jmp
mov
dec
pop
lahf
pusha
mov
es
bound
(bad)
adc
movs
int3
pop
nop
xor
push
scas
jnp
(bad)
int
xchg
js
mov
call
adc
push
out
repnz
push
in
mov
push
cs
loope
dec
imul
mov
loope
adc
mov
mov
push
pop
arpl
dec
add
inc
push
bound
cmps
lahf
jo
(bad)
xor
outs
icebp
scas
hlt
dec
test
clc
cld
dec
push
arpl
mov
mov
push
stos
jg
adc
sbb
adc
sub
adc
adc
cmp
test
lea
mov
jmp
pushf
push
jg
in
pop
ret
fisttp
idiv
sub
xchg
mov
mov
mov
add
loop
jnp
push
jno
ret
or
nop
pop
(bad)
gs
(bad)
out
rol
adc
inc
and
ss
mov
push
ror
arpl
bound
(bad)
mov
adc
mov
mov
lods
fxch
(bad)
repnz
dec
sbb
jp
(bad)
push
jecxz
nop
and
into
or
push
adc
jmp
cmps
ret
mov
pop
dec
add
sub
lods
pop
cmp
rol
das
jecxz
dec
movs
icebp
stos
jae
mov
push
push
pop
(bad)
cmp
hlt
enter
push
pop
or
aad
ins
add
jl
mov
and
xchg
pop
icebp
cmp
lahf
jae
les
sub
mov
xor
pop
mov
inc
ror
(bad)
ficom
mov
push
movs
jl
or
out
jmp
imul
data16
fdivr
sub
sti
dec
mov
inc
retf
pop
sub
shld
xor
inc
jo
lods
repz
in
mov
push
popa
fcmovb
fisttp
jmp
cwde
sub
imul
fs
jp
call
mov
and
fst
sbb
mov
test
or
popa
jge
dec
aaa
xchg
fs
pop
mov
ss
outs
push
cs
lods
add
mov
cwde
jg
loopne
(bad)
push
dec
mov
xor
pop
(bad)
(bad)
pop
cmp
push
loope
and
dec
les
aaa
mov
jg
test
retf
int
sub
(bad)
or
retf
loopne
add
scas
pop
jg
adc
pop
mov
cmc
sub
lahf
stos
fdiv
sub
pusha
or
sbb
jns
jae
jmp
aaa
add
(bad)
push
and
ror
std
enter
ret
fnstenv
ds
push
ret
push
push
sbb
sbb
fucomi
mov
xchg
cmp
mov
retf
inc
and
(bad)
outs
ficomp
mov
out
sbb
jbe
sbb
or
or
mov
xchg
or
loopne
pop
inc
retf
inc
stc
mov
or
fidiv
mov
gs
jmp
cld
dec
mov
(bad)
mov
ror
mov
jbe
shl
xor
add
mov
cwde
push
mov
mov
inc
fwait
xchg
add
nop
fbld
test
mov
scas
jb
sbb
movs
dec
hlt
push
jp
jge
imul
repz
push
mov
add
iret
push
int
sbb
xor
scas
and
pop
sub
loop
jbe
cmp
es
cmp
data16
and
add
mov
imul
(bad)
mov
cwde
stos
fsub
or
xabort
ret
scas
enter
sub
and
jmp
mov
ins
cmc
arpl
int
out
in
lahf
fldenv
xchg
cwde
iret
aaa
jb
xchg
movs
sub
sbb
xchg
fwait
std
mov
push
(bad)
retf
push
dec
inc
adc
xchg
pop
cmp
in
push
fsubr
mov
cmp
clc
xlat
push
jb
(bad)
lods
outs
mov
aad
xchg
dec
jbe
push
jo
call
push
add
adc
push
cmc
cmp
or
sub
xor
cmp
leave
xchg
test
pushf
fmulp
jmp
dec
jae
fwait
in
repz
add
jmp
sbb
fdivr
daa
push
in
retf
movs
add
lea
fs
lahf
stos
sar
lock
fld
or
xor
(bad)
loopne
outs
mov
call
iret
das
mov
mov
jmp
cmc
adc
sbb
sar
repnz
cmp
aad
inc
cmp
inc
adc
add
lahf
sbb
js
adc
push
pushf
test
or
movs
aaa
jl
mov
das
leave
mov
nop
movs
or
mov
outs
xchg
pop
pop
scas
mov
jge
pop
pop
ret
test
pop
mov
jg
xchg
popf
jmp
sub
and
jne
les
sub
out
(bad)
sbb
aad
and
sbb
(bad)
(bad)
xor
mov
jo
mov
mov
dec
jne
bound
xchg
mov
cmp
rcl
mov
jge
rol
cmp
repz
leave
fadd
(bad)
inc
sar
inc
stos
daa
and
xor
jp
pop
shr
test
loope
xchg
fisub
pop
xor
inc
sahf
jp
adc
daa
push
es
sub
xchg
aam
ret
sahf
hlt
not
add
arpl
and
pop
pop
xchg
das
xor
jne
or
and
aad
inc
test
or
push
out
dec
es
jmp
(bad)
jmp
fwait
cs
test
mov
jp
dec
pop
stc
mov
leave
push
inc
jge
lahf
push
xor
sti
mov
es
jecxz
jmp
call
push
and
mov
adc
push
int
aas
xchg
add
or
test
xlat
dec
sar
scas
ins
adc
(bad)
sbb
fs
mov
push
pop
call
mov
aaa
pusha
mov
test
adc
adc
xchg
mov
mov
lods
push
dec
sti
add
push
push
xchg
(bad)
jno
and
test
dec
loopne
in
fidiv
add
or
push
lods
cmp
sbb
mov
pslld
mov
mov
cld
xchg
xchg
ds
enter
jmp
lods
rol
adc
mov
retf
pop
dec
push
lds
and
fisubr
jo
and
repnz
sbb
imul
jae
pop
pop
or
sbb
shr
dec
test
mov
sbb
sub
jp
mov
mov
inc
je
out
das
aad
scas
scas
ss
repz
add
jnp
adc
pop
pop
xchg
imul
sbb
mov
shl
xchg
inc
lods
push
mov
call
and
adc
xchg
jge
loop
mov
push
ret
aas
hlt
jmp
test
or
cmc
inc
mov
mov
pop
rcr
sub
imul
mov
jae
mov
call
fucomp
inc
ror
(bad)
ror
add
ret
xchg
dec
inc
mov
mov
lea
jne
mov
and
sub
lock
push
or
int
jg
es
xchg
sub
dec
push
pop
test
pop
mov
dec
push
inc
adc
inc
sti
push
pop
out
movs
jne
pop
mov
xor
out
push
out
adc
push
outs
push
jne
iret
xchg
nop
mul
shl
or
scas
(bad)
or
mov
xor
js
push
retf
xor
mov
mov
out
lods
mov
xchg
cmp
jae
pop
mov
lock
push
call
int
outs
jp
pop
aaa
mov
test
sbb
leave
data16
lods
or
push
sub
push
outs
aad
pop
jnp
mov
das
pusha
dec
or
lds
aam
push
(bad)
dec
pop
add
and
sub
and
jle
(bad)
std
fist
repnz
retf
and
sbb
mov
dec
mov
mov
(bad)
das
ret
pop
cmp
inc
and
xor
int3
inc
cmp
test
jecxz
outs
inc
retf
rcl
lock
jne
fild
std
pusha
dec
adc
mov
in
shl
inc
xchg
push
call
mov
dec
jmp
xchg
mov
aaa
test
sbb
dec
mov
daa
pushf
mul
fldenv
jl
es
lods
pop
adc
scas
sbb
add
dec
push
or
mov
(bad)
daa
or
loope
cmc
das
fwait
rcr
lds
not
mov
mov
and
sub
xchg
mov
or
mov
xchg
lahf
inc
push
or
and
scas
xchg
mov
or
das
cmps
imul
mov
xor
mov
lods
push
clc
mov
and
test
adc
mov
and
loope
je
sub
mov
fs
retf
mov
mov
mov
(bad)
push
in
and
dec
mov
or
add
mov
fdivr
fstp
mov
iret
sbb
lock
cmc
ficom
xor
pop
inc
mov
stos
mov
xor
jle
mov
(bad)
cmp
movs
xlat
or
mov
adc
call
mov
xchg
or
clc
sub
mov
add
push
or
cmps
icebp
(bad)
fstp
xchg
fld
ret
and
in
shr
pop
sbb
ror
seta
sti
push
push
and
inc
mov
int3
mov
sub
aam
and
mov
cmp
mov
aam
popf
or
mul
(bad)
clts
outs
ret
jge
jmp
retf
cmp
push
ins
iret
hlt
add
jae
push
sbb
mov
movs
push
out
int3
gs
ds
pop
cld
test
sahf
cmp
ret
pop
ja
test
ins
dec
fild
loope
retf
mov
aam
jno
inc
xchg
lods
je
cdq
xchg
in
inc
add
inc
or
push
mov
fcomp
ficom
call
mov
mov
cmp
or
ins
mov
in
mov
mov
icebp
popa
inc
adc
ins
aas
adc
jbe
dec
xor
inc
add
test
mov
gs
js
js
pop
repnz
add
cwde
mov
mov
arpl
jg
mov
in
gs
std
cwde
stos
mov
test
sub
mov
aaa
jge
js
mov
pop
inc
sub
fs
mov
dec
sti
dec
add
scas
or
les
adc
pop
imul
sbb
mov
jbe
std
pop
sar
sub
call
push
inc
lods
lea
and
xor
jmp
repnz
lahf
pop
sub
jmp
loop
arpl
or
sbb
dec
fistp
and
in
shl
pop
cld
clc
cmp
ja
xor
jbe
into
xchg
dec
mov
inc
mov
(bad)
mov
iret
lds
ja
aad
mov
xchg
cld
add
sbb
dec
lods
pop
int
mov
jo
addr16
ficom
ss
clc
mov
cs
dec
cmps
popf
mov
jl
mov
adc
jne
dec
inc
xlat
ds
stos
lahf
jns
mov
add
push
cld
xor
jle
stos
addr16
mov
mov
arpl
mov
nop
add
(bad)
icebp
xchg
fsub
push
and
mov
pop
cmp
sub
jbe
test
xchg
stc
scas
mov
mov
imul
dec
popf
dec
hlt
sbb
ins
xchg
and
jg
loop
adc
cmc
lock
ror
lods
fimul
mov
dec
sub
(bad)
int
fnstenv
xchg
or
xchg
mov
dec
dec
push
push
mov
pop
(bad)
mov
(bad)
out
rcr
mov
iret
xchg
push
and
idiv
test
iret
pop
cmps
push
add
cmps
(bad)
push
lods
mov
jp
xchg
je
mov
sub
or
movs
hlt
lss
daa
dec
xor
or
xchg
rol
mov
std
pushf
loopne
dec
xchg
imul
test
mov
jne
add
adc
es
outs
adc
mov
cdq
mov
mov
adc
(bad)
rol
xchg
mov
mov
pop
dec
stc
shl
arpl
xor
adc
xor
cli
(bad)
(bad)
imul
enter
ins
ins
int3
cwde
(bad)
cmp
ja
daa
lea
shr
cmc
push
dec
arpl
stc
pop
(bad)
in
xchg
push
emms
sbb
pop
fidiv
xor
mov
retf
push
enter
mov
int3
inc
popa
or
adc
sbb
mov
mov
sub
xchg
sar
fcom
cmp
push
cmp
cmc
push
fsub
sbb
es
rol
stos
lock
jg
cwde
inc
inc
ins
mov
add
jmp
or
mov
mov
push
push
jbe
push
or
loope
scas
fimul
and
jbe
xchg
or
lock
mov
xor
xor
mov
cli
and
and
iret
mov
clc
fwait
repnz
pusha
sar
call
js
arpl
jbe
fsub
xor
out
das
mov
es
ficom
frstor
ss
lods
or
dec
add
mov
enter
mov
mov
neg
jg
lods
or
into
jle
jno
sub
mov
inc
ret
jg
lods
jmp
cmp
sbb
aad
loopne
add
cmp
test
push
cmp
das
mov
retf
adc
mov
mov
lock
pop
leave
mov
call
mov
and
mov
lock
xor
mov
lock
arpl
cmp
in
pop
addr16
mov
mov
jo
cmp
add
add
pop
test
xchg
or
ins
cmc
sbb
inc
int
xor
mov
xor
add
test
shr
std
arpl
iret
popf
dec
jmp
inc
cmp
sti
imul
(bad)
popf
push
(bad)
es
adc
mov
pop
adc
das
cmp
xchg
shr
frstor
adc
repnz
mov
xchg
ss
pop
out
pop
jl
fidivr
shl
or
rol
push
pop
mov
add
adc
sbb
push
pop
imul
jns
pop
jmp
mov
jo
mov
adc
fist
cmp
out
mov
cmp
mov
sbb
std
fnstsw
jo
(bad)
shl
sbb
rcl
mov
mov
bound
movs
jmp
pop
sub
lea
add
test
push
inc
jle
test
ins
mov
cmps
dec
push
push
inc
push
outs
jbe
sub
into
mov
or
add
add
mov
jle
rcl
inc
pushf
mov
fwait
imul
pop
popf
sar
dec
jle
add
rcr
sahf
adc
push
fadd
xchg
or
std
dec
push
inc
adc
mov
lea
pop
lods
bound
out
aad
scas
lods
lea
pop
mov
mov
cmp
loopne
pushf
lock
(bad)
in
add
inc
mov
ja
mov
(bad)
loopne
call
sub
mov
add
mov
dec
inc
xor
inc
lahf
jmp
out
jecxz
and
dec
inc
jge
sub
sbb
sub
dec
xor
add
aas
(bad)
xchg
popf
ror
stc
aad
or
dec
pop
lahf
iret
or
arpl
scas
jmp
push
jmp
mov
enter
cmp
push
adc
cmc
pop
aaa
test
call
mov
jb
sahf
in
loop
sbb
stc
inc
sub
xor
xchg
push
inc
imul
stc
jbe
neg
mov
xor
adc
jo
jmp
ins
cmp
push
mov
fstp
sahf
ret
shl
mov
mov
fwait
jp
mov
xchg
cmp
stos
dec
nop
fdivr
mov
in
jg
push
repnz
out
les
call
leave
ins
lock
outs
sub
mov
push
nop
imul
addr16
adc
inc
int3
jae
out
sub
fistp
(bad)
mov
or
mov
dec
cwde
sub
inc
xchg
out
mov
adc
(bad)
cli
push
gs
lods
jnp
adc
push
dec
mov
or
outs
icebp
call
popa
cli
or
icebp
repnz
iret
xchg
outs
stos
std
pop
pop
out
pop
inc
push
ss
cli
push
mov
jmp
outs
mov
rcl
or
das
(bad)
loopne
fwait
jnp
and
xchg
sar
push
push
je
adc
imul
jbe
ret
mov
(bad)
ret
xchg
jne
mov
(bad)
es
cwde
or
fdiv
(bad)
neg
imul
pushf
mov
ins
mov
mov
mov
inc
jmp
sbb
shl
adc
mov
add
imul
cmps
mov
xchg
mov
lds
sub
rcl
or
inc
ror
push
aad
pusha
sbb
cmps
cmp
and
fs
cli
xor
cmc
int3
xor
mov
stos
and
(bad)
sahf
imul
test
pop
jo
adc
call
or
jmp
pop
jecxz
jb
icebp
movs
outs
cmp
adc
xor
add
pop
mov
sub
inc
or
(bad)
in
clc
loopne
mov
dec
sub
mov
scas
inc
pop
xor
into
sub
jle
cmps
jo
les
pop
mov
xchg
call
int3
mov
push
retf
pop
inc
lods
cmp
lock
or
leave
xrelease
inc
mov
sbb
sbb
call
jle
cmp
pop
stos
fbld
lods
adc
jecxz
call
cs
mov
idiv
jbe
mov
add
add
mov
jge
inc
fwait
movs
mov
push
mov
out
push
outs
gs
push
ffreep
pop
mov
outs
imul
fdivrp
lods
out
dec
stos
call
jnp
cmps
or
cdq
loop
or
or
cwde
outs
and
or
sub
sub
mov
xor
adc
stos
cmc
js
ret
push
dec
jp
aam
mov
pop
add
push
lahf
and
mov
cld
xlat
popf
sbb
adc
es
push
in
and
ins
clc
xor
enter
sub
push
(bad)
push
imul
ins
sti
fisttp
push
ss
inc
push
into
ret
sbb
sahf
mov
fwait
push
pop
lods
jbe
retf
dec
sub
mov
jg
fisttp
cmp
jnp
mov
in
stc
movs
xor
call
adc
xlat
xchg
retf
xor
and
leave
cmp
or
xchg
gs
cmp
or
xor
mov
dec
push
jae
sbb
xor
add
and
adc
xchg
ds
movs
fnstcw
outs
scas
es
repnz
adc
xchg
dec
mov
mov
mov
and
fwait
cld
les
mov
push
xchg
enter
sub
xchg
fild
pop
mov
lds
int
sbb
ret
push
xchg
mov
and
mov
adc
adc
mov
sbb
repz
lods
ficomp
fidivr
and
es
pop
pop
faddp
mov
ror
call
pushf
rcl
rcl
ins
retf
cs
mov
xor
sbb
xchg
inc
mov
push
clc
lock
jl
xor
ja
pop
movs
loope
xor
jg
push
or
inc
aad
mov
repz
stos
mov
mov
cmp
add
mov
pop
push
out
test
pop
js
sub
(bad)
and
or
in
das
sbb
cmps
pop
stos
cmps
mov
fnstenv
rcr
sahf
dec
neg
sbb
mov
bnd
mov
mov
jb
mov
cmp
and
adc
pusha
xor
sub
and
arpl
mov
bound
sbb
enter
mov
mov
push
and
sbb
call
shl
popa
(bad)
push
dec
popf
adc
inc
in
lods
jmp
imul
mov
cmps
loop
ficom
std
movs
mov
ins
imul
out
pop
jnp
inc
jmp
sahf
ja
test
clc
push
lods
and
les
fdivr
mov
and
xchg
sub
stc
in
scas
nop
hlt
cmp
out
call
xchg
ins
into
adc
dec
aaa
nop
pop
es
cs
inc
xchg
sar
jge
pop
and
mov
or
mov
inc
repnz
loopne
out
scas
int3
imul
push
mov
in
leave
(bad)
jns
push
xor
cld
fsub
sbb
xor
jmp
add
mov
xlat
and
adc
jmp
mov
cli
mov
ror
cmps
xor
sti
push
sbb
cwde
push
scas
xlat
mov
xchg
enter
jle
mov
lds
lods
add
cld
sahf
inc
xlat
push
(bad)
xlat
fs
and
inc
outs
(bad)
xor
shl
stos
retf
xchg
xchg
dec
adc
sub
push
inc
push
push
in
or
ror
mov
xlat
pop
scas
add
pop
mov
fsubr
ret
test
popa
retf
cs
cwde
sub
push
xchg
aam
int3
js
xchg
xor
jns
les
jl
push
pop
xchg
fs
push
mov
cmp
or
dec
nop
cmp
nop
aad
in
lahf
out
push
loop
mov
out
xor
(bad)
jmp
push
icebp
hlt
mov
mov
ins
push
lods
mov
xor
rol
mov
jns
ds
aad
cmp
hlt
push
and
in
xor
jbe
movs
jns
pslld
aaa
mov
into
(bad)
pop
je
fidiv
jo
and
aam
pop
sub
jnp
pushf
jge
test
mov
mov
fimul
adc
inc
lods
mov
shrd
pop
(bad)
es
mov
add
xchg
aad
neg
in
xchg
call
jae
mov
rcl
shr
and
adc
xchg
ins
mov
adc
jmp
xchg
or
push
in
imul
push
cmp
push
test
pop
rcr
or
(bad)
mov
pop
fisttp
push
test
aam
cmp
pop
mov
dec
sub
repnz
mov
jo
sar
test
out
pop
mov
mov
xor
xor
jge
loopne
(bad)
rcl
sahf
mov
daa
(bad)
push
in
adc
movs
inc
stos
xor
push
rcl
xchg
call
popa
stos
in
in
xor
xor
and
jp
enter
test
retf
loope
push
out
outs
jne
outs
rcl
ror
push
or
jae
jecxz
push
gs
mov
(bad)
xchg
sbb
das
jg
or
sbb
cmp
loop
sar
and
cmp
or
cdq
xor
idiv
in
inc
add
adc
mov
das
mov
xor
dec
and
mov
push
shl
xchg
xchg
push
adc
cmc
push
xchg
pop
leave
sbb
mov
and
popa
ja
and
xchg
lods
xchg
imul
adc
jl
jbe
jmp
jge
mov
adc
jb
mov
out
xchg
arpl
jp
jg
ret
aad
and
fwait
pop
dec
mov
pop
push
out
cli
scas
fs
cli
mov
and
sub
lds
and
push
jnp
mov
inc
jne
add
push
xchg
inc
mov
enter
jmp
outs
in
fs
shl
cdq
adc
inc
cld
out
inc
jl
cdq
daa
imul
dec
imul
jp
sub
in
cmps
popa
pop
in
xchg
cmp
test
sbb
xchg
pop
in
jge
rcr
(bad)
xchg
in
push
fst
xor
jecxz
mov
xchg
into
fnstenv
inc
push
imul
xchg
dec
popf
repnz
daa
and
jne
outs
and
and
cwde
arpl
ins
pop
push
lock
add
sbb
data16
cmp
and
popf
icebp
in
xor
(bad)
or
rcr
jg
out
call
cld
addr16
adc
bnd
mov
pop
neg
mov
in
shl
lds
cmps
(bad)
adc
mov
adc
in
idiv
xlat
lods
loopne
cmp
mov
aaa
lods
pop
ret
jae
inc
add
sbb
aaa
inc
int3
adc
mov
ja
inc
retf
(bad)
sbb
adc
(bad)
jmp
call
adc
out
adc
mov
push
je
stos
adc
inc
shr
dec
xchg
rcl
cmovle
jl
cmc
jmp
cmp
pop
cmp
jb
xor
mov
and
mov
pop
sub
mov
retf
add
retf
data16
ja
mov
data16
fwait
dec
mov
pushf
popf
cmp
js
aaa
stc
popa
pop
sbb
stos
icebp
inc
xor
std
repz
push
mov
mov
add
xor
adc
enter
in
mov
rol
jae
sub
lods
loop
repnz
add
scas
out
and
xchg
(bad)
repnz
mov
rol
rcr
adc
neg
inc
clc
outs
inc
add
lock
(bad)
shr
dec
scas
jmp
ret
adc
dec
in
jecxz
lock
loopne
sar
jne
gs
fcmove
mov
add
mov
xor
and
jbe
jle
add
mov
sbb
fwait
icebp
push
loop
sbb
or
int
adc
xor
fwait
popa
repz
mov
adc
call
add
dec
jle
scas
shl
pop
cld
push
ja
(bad)
jmp
pop
shl
shl
pop
or
and
xor
test
mov
test
movs
xor
xchg
xchg
icebp
lods
mov
or
pop
sub
out
xchg
shl
push
jnp
call
in
xor
imul
mov
outs
push
je
and
cwde
mov
cmp
pop
xchg
push
push
les
aas
mov
cmc
rol
scas
add
mov
push
addr16
mov
xchg
jmp
mov
mov
aaa
mov
xchg
ss
cmp
cmp
in
push
and
pop
and
adc
xor
xchg
ins
sbb
gs
movs
call
hlt
pop
push
cmp
xchg
dec
or
stos
mov
inc
inc
inc
and
aaa
mov
pop
std
add
sti
popf
fwait
adc
push
mov
call
inc
add
xor
cli
inc
add
js
and
dec
(bad)
fcmovnu
aaa
sbb
mov
adc
fild
push
pop
xchg
push
xor
std
stos
jp
mov
shl
inc
cmc
sub
xor
int3
in
dec
sub
or
leave
movs
sub
jge
push
rcr
enter
mov
mov
out
movs
cmp
inc
dec
(bad)
inc
push
stc
pop
xchg
cmp
adc
adc
adc
or
inc
not
mov
dec
and
pop
push
iret
add
or
sub
inc
push
dec
cmp
mov
stos
jmp
imul
add
dec
jns
jg
loop
cdq
pop
add
jne
push
or
xor
sbb
repz
mov
mov
ds
ret
out
dec
sub
sbb
and
adc
xchg
jnp
ins
dec
sbb
or
gs
clc
jbe
cmp
paddq
sub
push
pop
or
(bad)
mov
pop
in
or
jbe
in
aaa
cwde
sub
leave
hlt
push
fimul
push
adc
mov
mov
cmp
lods
ret
loope
jl
or
mov
jle
cmc
push
addr16
push
inc
sbb
dec
cmps
mov
mov
push
popa
cmp
ds
adc
mov
fiadd
jne
adc
mov
into
and
push
(bad)
daa
ss
(bad)
sti
cld
jmp
mov
mov
fist
jecxz
out
(bad)
es
pop
mov
dec
jmp
popf
std
push
(bad)
adc
mov
mov
movs
out
ins
pop
cmp
push
xlat
pusha
sub
jbe
(bad)
aas
clc
(bad)
idiv
xchg
cmps
daa
xchg
shl
jge
call
mov
imul
rol
sbb
(bad)
fs
pop
es
xchg
fadd
sub
pop
mov
inc
push
inc
jg
xchg
jae
push
add
inc
(bad)
xor
clc
pushf
push
add
bnd
xchg
and
out
inc
mov
lods
lea
xchg
ins
ins
jle
cmc
aam
out
movs
js
mov
adc
and
(bad)
jo
jae
enter
faddp
jmp
imul
adc
cld
jns
and
data16
out
test
inc
xor
shl
shl
mov
inc
cmp
jns
pop
pop
sub
jmp
pop
fisttp
add
mov
jnp
imul
dec
pop
mov
jg
test
out
(bad)
cmp
mov
pop
push
xor
or
pop
enter
je
inc
out
pop
adc
xchg
cdq
dec
or
daa
xor
mov
adc
xchg
nop
sub
dec
lods
std
clc
pop
int
mov
movs
push
mov
rcr
push
push
leave
inc
daa
and
ja
cmp
adc
sbb
xor
movs
inc
hlt
rcr
imul
xchg
mov
lahf
and
leave
add
in
inc
ss
push
jne
push
mov
lods
mov
dec
test
mov
add
(bad)
jmp
call
shl
add
dec
xchg
mov
iret
add
mov
test
mov
jae
add
lock
sub
sbb
or
adc
jno
pusha
sbb
pop
mov
rcr
mov
out
mov
ret
cmps
cmp
mov
sub
lds
sbb
pop
gs
pop
lods
push
mov
das
in
retf
(bad)
pop
xchg
push
sub
inc
dec
pop
sub
in
or
pop
pop
mov
adc
dec
(bad)
pop
data16
dec
mov
imul
sub
jns
inc
and
dec
dec
test
repnz
inc
or
cmp
in
xchg
push
dec
push
lahf
mov
ss
sahf
mov
test
jno
cmp
mov
test
mov
sub
pop
ret
sub
jns
imul
fist
test
imul
or
mov
bnd
dec
out
cmp
outs
fisub
pop
sbb
add
or
data16
xchg
imul
pop
inc
ins
out
cmp
ror
pop
adc
shl
iret
stos
cmps
xlat
aas
jmp
call
push
push
movs
and
and
or
inc
xlat
lea
xchg
xor
popf
jbe
push
movs
cwde
mov
jp
sub
adc
jge
imul
and
jle
adc
jle
push
loopne
xchg
popa
mov
dec
stc
push
push
fnstsw
mov
adc
fs
jle
dec
das
mov
inc
jl
loopne
ds
enter
push
xchg
test
push
add
les
aaa
aad
repz
push
xor
pop
sahf
push
add
cmc
and
sub
stos
movs
jb
add
mov
add
jmp
xchg
stos
inc
and
xor
shl
jno
lea
jnp
dec
movs
jmp
xchg
sub
pop
mov
adc
sahf
repz
inc
sub
xchg
or
sub
dec
push
xor
inc
test
into
pop
test
popa
in
stos
add
hlt
adc
jl
mov
dec
rol
retf
cmps
test
jno
sbb
and
dec
adc
push
push
fist
jno
xor
(bad)
jg
jo
vcvtps2pd
les
ficom
push
test
nop
adc
popf
(bad)
jmp
repnz
mov
lods
mov
arpl
sbb
aam
pandn
cmp
mov
mov
add
mov
inc
push
add
outs
aam
dec
sbb
adc
iret
jp
jmp
outs
mov
fsubr
retf
sub
sbb
push
and
jns
loope
fs
stos
dec
popf
enter
lds
in
and
dec
mov
add
dec
xor
pop
ds
loopne
cmp
loope
imul
sar
xor
ret
xchg
sahf
mov
fstp
and
neg
sbb
push
imul
addr16
inc
sahf
das
mov
xchg
xchg
int3
retf
push
push
fdiv
mov
dec
push
mov
cmp
aaa
cwde
cld
scas
outs
inc
mov
mov
mov
xor
call
je
mov
push
push
dec
add
mov
xlat
mov
cmp
aaa
cmps
sbb
push
add
mov
inc
repz
push
pop
lss
stos
sti
adc
and
popa
dec
(bad)
xchg
pop
fisttp
hlt
jbe
push
popf
inc
xor
loop
in
ss
popa
push
cmps
cmp
outs
jb
or
mov
dec
stos
test
or
add
lds
jmp
fistp
sahf
std
dec
inc
pop
mov
outs
sub
jl
daa
aam
(bad)
icebp
cmp
add
mov
call
cmp
cmp
dec
mov
jo
mov
es
jb
cmp
js
add
mov
add
into
sub
cld
inc
sub
fs
cld
adc
mov
ja
fs
jmp
cmp
add
xchg
add
and
sub
jnp
xchg
xchg
dec
jp
imul
call
ret
arpl
out
jle
or
push
(bad)
in
push
push
ror
jge
pop
mov
(bad)
mov
xor
xchg
es
mov
movs
or
and
jo
xchg
jl
into
call
pop
push
mov
push
int3
cmp
daa
nop
in
dec
push
popa
popf
out
sahf
adc
add
xchg
movs
and
push
outs
js
out
sbb
cmp
jge
cmp
push
pop
sub
retfw
push
fcomi
mov
or
xchg
cwde
mov
pop
imul
pop
or
dec
cld
aad
lea
retf
test
mov
xchg
out
or
mov
and
sar
dec
fistp
adc
test
addr16
push
cmp
mov
and
loop
xchg
add
jecxz
lock
and
shl
push
fdivr
inc
shr
ins
jl
xchg
outs
inc
frstor
jp
adc
je
mov
dec
push
and
sbb
rol
jp
mov
xlat
and
sbb
fisubr
pop
push
and
pop
test
push
rcr
fadd
imul
jecxz
lock
loopne
(bad)
fwait
mov
pop
sbb
(bad)
out
jecxz
div
inc
jl
jmp
gs
lods
push
fidivr
dec
scas
sub
lock
cmp
jne
add
jmp
mov
add
push
bound
lods
inc
sbb
sbb
jecxz
add
ins
or
dec
pop
lds
data16
pop
enter
in
loop
mov
ret
add
test
push
mov
sub
inc
enter
loop
pusha
mov
fwait
add
and
or
retf
jg
fisub
bound
cld
mov
jns
mov
sbb
mov
sbb
dec
mov
dec
gs
addr16
dec
mov
push
mov
and
(bad)
iret
enter
xor
inc
scas
xor
sub
pop
mov
in
sbb
mov
popf
loop
sub
pop
push
pop
xor
ds
mov
dec
xchg
sbb
jb
sub
scas
jae
int3
mov
push
imul
sub
adc
xchg
ds
pop
ret
sub
out
stos
inc
mov
outs
out
pop
push
icebp
mov
mul
mov
mov
adc
mov
cs
into
aam
sub
adc
ds
dec
rol
mov
pop
push
xchg
or
sub
xchg
xor
pop
pop
call
adc
sub
fidivr
cmc
and
cli
mov
sub
xor
mov
or
psubusb
(bad)
int
cmc
xlat
push
lock
ja
ds
fcom
outs
lds
(bad)
sbb
and
xor
leave
ins
cwde
movs
les
pop
jl
test
(bad)
cli
or
push
in
push
and
cmps
push
ja
mov
fcom
xchg
out
xchg
adc
scas
jno
and
push
int3
sbb
popa
jbe
retf
or
rcl
inc
pop
adc
jo
rcl
cmp
aaa
cli
jge
repz
(bad)
js
dec
jl
jbe
mov
repnz
jp
shr
and
(bad)
mov
mov
enter
nop
sub
lods
xchg
xchg
nop
cmps
or
cwde
mov
call
out
inc
neg
xlat
nop
mov
imul
pop
cwde
les
pusha
imul
jmp
inc
mov
lods
pop
xor
outs
pop
ret
in
dec
test
dec
cmps
movs
push
inc
xor
cs
fist
jmp
das
push
xchg
push
ret
or
add
int
mov
cli
pop
aam
push
ficomp
jno
jmp
xor
in
xor
repnz
aad
push
dec
ret
or
sub
fwait
stos
xchg
cmp
push
mov
mov
and
fcomi
enter
xchg
mov
fmul
sbb
jmp
mov
loopne
rcr
jae
mov
and
sbb
aas
inc
pop
outs
aaa
ret
sub
ret
cs
xor
(bad)
int3
in
dec
(bad)
jnp
mov
xlat
rol
add
arpl
in
mov
out
js
stos
movs
and
mov
mov
sub
sub
rcr
adc
(bad)
leave
and
je
stos
mov
adc
push
xchg
sar
jecxz
mov
ja
inc
push
cmps
push
mov
sbb
gs
movs
add
xchg
div
int
imul
inc
mov
nop
(bad)
sub
sub
popa
fistp
xchg
push
fdiv
mov
nop
ds
push
shl
mov
cwde
xchg
retf
jne
lods
push
inc
fwait
push
ins
sahf
mov
in
stos
nop
jno
ret
cmp
jne
jb
out
(bad)
add
(bad)
ss
jbe
clc
int
aaa
dec
test
sub
dec
fistp
dec
pop
inc
dec
ins
jno
ror
jb
jne
mov
jbe
pusha
lods
and
inc
retf
pop
out
sbb
arpl
lods
cdq
or
pop
adc
pop
mov
stos
je
jmp
outs
sar
dec
or
sub
cs
call
sbb
push
xor
comiss
jge
inc
xor
inc
push
shl
push
sbb
inc
neg
adc
aaa
cmps
into
movs
shl
stos
xor
inc
js
stos
std
arpl
addr16
push
vmovd
or
jae
clc
and
cmp
(bad)
iret
leave
mov
and
jne
addr16
pop
repz
sub
aas
or
jbe
mov
sbb
daa
aaa
or
repz
rcr
out
xchg
push
sub
fidiv
jmp
dec
shr
addr16
sub
inc
and
sbb
and
in
sbb
push
jae
lahf
ss
push
and
push
xchg
in
cmp
push
scas
(bad)
stos
test
jno
inc
imul
(bad)
xchg
icebp
inc
pop
xchg
xchg
jbe
adc
lea
in
cwde
mov
add
jecxz
popa
dec
dec
outs
xchg
cmp
icebp
fmul
mov
shl
lds
test
in
lods
aad
pop
and
adc
cmp
imul
icebp
test
fdivr
movs
add
xchg
push
popa
cmp
or
popa
adc
loopne
push
ficom
rcr
or
stos
aas
mov
sub
(bad)
not
push
inc
push
imul
push
mov
mov
ret
xor
inc
cmc
or
mov
xor
mov
lods
jnp
popf
loope
add
push
loopne
add
push
stos
xlat
fisttp
lods
inc
jp
jge
cmp
pop
mov
movs
add
mov
xor
fmul
clc
push
dec
pop
jnp
jno
movs
pop
mov
cs
pop
imul
or
rol
push
xchg
push
mov
and
push
mov
adc
xchg
jnp
pop
(bad)
xlat
fimul
scas
outs
xchg
mov
fdivrp
aam
inc
push
sub
inc
mov
icebp
popf
sub
call
cmp
in
xchg
lea
mov
call
in
xchg
push
push
js
sti
arpl
(bad)
push
xchg
xor
inc
(bad)
shl
mov
mov
xor
gs
dec
push
and
pop
in
test
sub
out
int
ja
jmp
popf
xor
leave
rcr
cmc
repnz
ror
inc
add
in
int
daa
out
push
sbb
pop
mov
cmp
div
mov
ja
pop
and
(bad)
mov
frstor
mov
loopne
enter
sbb
repz
rcr
pop
or
rol
fidiv
popa
inc
aad
push
xor
std
and
movs
jno
aas
jns
xchg
into
jl
dec
fadd
ds
clc
call
mov
lods
mov
scas
out
in
pop
dec
cld
inc
outs
ret
aad
sub
gs
inc
pop
mov
(bad)
sub
mov
push
pop
push
xchg
fmulp
iret
fmul
ins
(bad)
dec
sbb
lods
loopne
(bad)
xor
in
je
loopne
push
jl
cdq
addr16
push
xchg
outs
test
cmp
cs
push
inc
loop
pop
or
inc
sub
push
out
stos
gs
es
xchg
shr
adc
in
and
jo
xchg
les
sar
sub
adc
xchg
inc
jmp
xchg
jge
repnz
pop
stos
imul
dec
or
cmp
sub
fisub
scas
inc
sub
mov
add
hlt
jp
rcr
fsubr
jle
push
mov
outs
stos
(bad)
and
fidiv
and
mov
pop
clc
mov
pop
jo
and
in
push
add
(bad)
jle
mov
das
inc
call
arpl
xor
inc
inc
aas
cmp
or
inc
std
mov
pusha
aas
adc
mov
shl
cmp
cmp
mov
cld
cdq
push
jg
xor
sti
mov
adc
(bad)
mov
mov
mov
push
mov
std
inc
popa
fcom
fdivr
xor
ficom
push
add
or
xchg
mov
cmps
dec
test
mov
pop
shr
cmps
es
(bad)
push
cld
ror
(bad)
cs
inc
push
pop
mov
or
out
mov
add
mov
loopne
std
add
xor
xchg
cmp
shl
aaa
clc
ins
daa
adc
cmp
es
movs
fidivr
push
cmp
mov
mov
cmp
xor
pop
retf
xlat
pusha
sbb
jg
inc
xor
cwde
mov
pushf
fs
shl
lea
cmps
icebp
mov
mov
mov
imul
pop
fidivr
push
and
sbb
cmps
add
ins
retf
and
ja
call
shr
xchg
in
or
xor
pop
imul
popa
neg
add
pop
adc
mov
loop
cld
popf
and
jb
sub
hlt
mov
jge
pusha
pop
inc
adc
iret
idiv
ja
cdq
out
in
pop
inc
mov
(bad)
mov
cli
xchg
pop
mov
mov
xor
cmps
pop
shr
shl
movs
nop
loop
mov
fdivr
(bad)
sub
dec
or
xlat
cmp
xchg
sub
in
hlt
aaa
and
je
outs
mov
jecxz
adc
test
in
sti
sbb
shl
out
repnz
fld
ds
repz
int3
xchg
xchg
call
fcom
or
mov
ss
lods
sub
and
aaa
mov
or
xchg
pop
jb
sar
out
sub
repz
xor
dec
add
mov
cdq
fdiv
(bad)
not
sub
jp
mov
jne
cdq
xor
pop
iret
leave
add
jmp
mov
mov
push
lods
jmp
add
and
mov
cmp
push
sar
jo
push
ins
hlt
stos
jnp
sahf
add
dec
pop
loop
push
jge
and
sbb
sbb
shl
jp
xchg
sbb
pushf
or
push
inc
lahf
popf
leave
jno
xchg
mov
loop
out
les
test
xchg
sbb
sar
mov
mov
mov
adc
mov
or
mov
lea
dec
or
ret
lods
shl
sahf
mov
xor
xchg
or
outs
enter
jmp
(bad)
pop
cdq
inc
mov
add
lock
fld
inc
cwde
ss
jb
aad
mov
std
pop
xchg
(bad)
adc
imul
daa
jecxz
in
jg
add
cli
movs
pop
xchg
add
adc
dec
daa
sahf
scas
cmps
inc
test
jb
dec
add
out
fimul
xor
pop
and
js
jae
addr16
(bad)
jmp
fld
adc
addr16
mov
push
movs
mov
es
add
mov
pusha
retf
iret
or
adc
jo
sbb
push
and
add
mov
lahf
cs
push
call
test
fist
mov
in
fwait
dec
mov
cmp
(bad)
fbstp
xor
mov
add
fnstsw
jge
movs
xor
je
dec
push
or
out
xor
xchg
mov
xor
mov
dec
push
inc
popa
or
fidiv
popf
stos
jecxz
push
repnz
shl
faddp
repz
xchg
dec
mov
mov
xchg
aas
ror
loope
arpl
xchg
pop
mov
push
adc
and
mov
leave
gs
dec
mov
mov
(bad)
pop
push
mov
add
test
cmp
add
add
(bad)
push
ror
rcr
pop
jmp
jecxz
cld
xchg
or
push
out
test
add
pop
outs
jge
loopne
sub
(bad)
(bad)
stos
add
jnp
mov
mov
or
or
jns
fnstcw
int
aam
(bad)
outs
fnsave
das
stos
movs
(bad)
retf
je
adc
sbb
rcl
in
test
xchg
sub
into
adc
or
std
sub
jo
mov
cmps
adc
or
shr
out
adc
xor
movs
shl
xchg
and
das
dec
jl
adc
jne
sbb
loop
mov
xchg
push
or
mov
pop
out
add
dec
add
or
mov
lahf
jo
dec
add
mov
add
xlat
test
mov
inc
or
or
(bad)
sub
int
inc
inc
mov
and
lock
in
data16
cmp
hlt
je
cli
sub
inc
cdq
(bad)
sar
mov
(bad)
es
sub
or
dec
cmp
push
jle
lods
mov
aad
and
or
cmp
xor
push
data16
lock
push
sbb
scas
cmp
fs
std
cs
inc
jg
inc
add
add
mov
and
sbb
stos
push
icebp
movs
(bad)
into
or
bound
mov
cmp
inc
jb
xchg
inc
push
fs
mov
jmp
sbb
and
jns
mov
jmp
xor
(bad)
cmp
test
frstor
fldenvw
mov
xchg
ret
cmp
cld
outs
fisub
pop
scas
pop
mov
cmp
jno
xchg
gs
cmp
int
jge
mov
xchg
push
push
mov
clc
inc
inc
(bad)
retf
mov
push
mov
pop
xchg
aaa
out
mov
repnz
fst
or
arpl
push
lods
dec
cmp
sub
xchg
and
cld
repnz
add
cmp
inc
mov
sbb
les
sahf
test
adc
mov
jl
leave
ret
imul
lock
hlt
sub
xor
popa
or
jno
mov
imul
and
ds
bound
lahf
cmp
imul
repnz
xchg
call
in
dec
pop
mov
mov
and
mov
mov
xchg
or
fld
and
scas
push
push
lds
cwde
pop
jmp
sti
stos
movs
mov
push
std
clc
xchg
cmc
cmp
push
ins
mov
jecxz
(bad)
push
iret
and
pop
dec
xor
dec
mov
scas
inc
xor
xchg
clc
loopne
push
scas
ficomp
xchg
arpl
sub
adc
or
xchg
push
mov
data16
pop
and
jg
sub
dec
rsm
pop
daa
loope
mov
int3
mul
ss
or
(bad)
ds
mov
daa
push
and
or
inc
shr
push
je
push
out
or
cmp
push
test
bound
pushf
xlat
inc
jo
cmp
nop
lea
dec
or
dec
sub
call
mov
call
(bad)
sbb
and
retf
sbb
and
sub
sbb
jmp
adc
push
pop
sti
das
xchg
inc
pop
bnd
push
test
inc
mov
push
jecxz
lock
cmp
mov
push
jno
or
inc
clc
loope
out
fsubp
xchg
mov
test
jmp
and
call
xor
xor
jbe
fcmovnbe
dec
xor
icebp
jae
rcl
push
mov
mov
scas
fst
test
(bad)
adc
xchg
fild
dec
dec
mov
jno
mov
aam
repz
popf
clc
in
add
mov
or
pop
into
inc
frstor
mov
in
cs
cmp
nop
cld
leave
mov
jbe
ins
xchg
jmp
pop
pop
(bad)
jge
dec
push
movs
sti
jle
push
xlat
and
int3
aam
or
ins
add
loope
into
test
nop
gs
inc
or
retf
jae
mov
pop
and
jbe
dec
js
sub
adc
call
inc
test
sahf
fcmove
mov
imul
(bad)
ins
inc
xor
or
push
inc
jae
sti
cwde
push
lods
sub
pop
lock
imul
fisubr
(bad)
ffree
fld
mov
movs
pop
mov
cmp
dec
add
int3
mov
fstp
popa
cli
jnp
test
pop
mov
int3
stc
sbb
mov
cwde
ins
jp
inc
push
lock
ror
out
sub
in
aas
cmps
xlat
cli
inc
inc
dec
mov
mov
int
jmp
and
push
stos
imul
adc
pop
enter
cmps
dec
pop
inc
pop
add
jo
jge
lods
int3
into
push
or
das
push
add
xchg
call
jmp
popf
or
sub
shr
xor
pushf
sbb
cmp
pusha
mov
fisttp
es
scas
cs
push
aad
push
inc
call
popf
mov
cli
dec
mov
repnz
pop
call
and
or
jb
js
loope
mov
(bad)
mov
call
inc
or
mov
xlat
int
call
push
xchg
inc
cmps
inc
cli
pushf
scas
jmp
xchg
inc
inc
stc
adc
fcmovnu
inc
push
mov
fiadd
push
adc
jno
es
mov
adc
(bad)
and
push
adc
fucom
rcl
iret
movs
xlat
in
adc
loope
add
(bad)
cli
js
xor
enter
dec
call
aas
add
inc
sar
(bad)
ins
pop
dec
nop
cmps
add
dec
sti
or
sbb
pop
push
pop
ins
mov
int3
psubsw
mov
popf
aas
pop
mov
push
xor
cmp
xchg
push
add
mov
cmp
ss
mov
ds
ror
xor
push
adc
sbb
or
test
pop
or
pop
into
cmps
inc
and
mov
adc
cmc
jne
icebp
loope
or
xchg
outs
dec
sbb
es
mov
xor
mov
in
aad
sar
dec
mov
ret
lds
leave
sbb
rcl
fld
jp
call
shr
mov
sbb
clc
add
shr
adc
adc
cmc
dec
mov
rol
mov
jno
push
pop
inc
ficomp
mov
sbb
stc
std
and
mov
mov
scas
mov
mov
enter
xor
cmps
gs
int
jmp
ds
scas
ret
repz
imul
daa
daa
test
jge
ficomp
jmp
xchg
test
pop
xchg
ins
adc
add
xchg
ror
das
stos
mov
pop
pusha
std
in
loop
mov
pop
sbb
push
jp
xchg
(bad)
push
sbb
and
dec
jp
inc
mov
shl
rol
mov
cmp
ss
add
shr
mov
cmp
aaa
sbb
out
mov
imul
inc
hlt
sbb
lods
cmp
hlt
fcmovb
pusha
loop
jbe
push
jp
xor
stc
std
dec
mov
pop
aaa
data16
jecxz
adc
int
(bad)
pop
jo
sar
ds
mov
out
pop
xchg
pop
mov
sti
hlt
xchg
mov
push
mov
int3
fidiv
jns
out
cmp
test
push
in
mov
mov
xchg
dec
dec
fcomp
in
mov
in
jmp
xchg
movs
ins
sub
mov
jecxz
int
sub
xchg
aad
mov
out
test
mov
dec
les
inc
pop
movs
mov
push
xchg
leave
jae
daa
sbb
(bad)
loop
xchg
ins
stc
add
ror
fsubr
mov
imul
into
nop
mov
adc
lds
add
retf
int3
and
imul
(bad)
or
mov
push
sbb
scas
fdivr
mov
mov
shr
fisubr
jae
fwait
or
push
test
jg
(bad)
mov
inc
dec
mov
mov
fistp
jbe
daa
and
jae
fwait
add
mov
pop
mov
sti
and
daa
outs
mov
stos
rol
hlt
cmp
(bad)
sti
add
movs
jnp
pop
mov
std
dec
push
mov
test
push
xor
pop
ss
inc
sahf
xlat
jg
adc
outs
mov
pusha
sub
ss
addr16
std
js
inc
fidivr
adc
rdtsc
ret
cmp
fcomp
fs
lods
into
sub
fnstenv
sti
imul
mov
fwait
pop
or
jl
mov
dec
loopne
jno
xor
jmp
add
push
repnz
and
push
push
mov
jbe
jp
sbb
inc
pusha
add
movs
pop
aad
gs
int3
(bad)
lahf
push
ins
push
jno
bound
sbb
imul
ins
cmp
loopne
cld
mov
adc
movs
mov
cmp
outs
xor
loope
cmp
aad
mov
jecxz
mov
fndisi(8087
hlt
add
push
jle
fcomp
sti
pusha
test
xchg
sub
mov
jo
push
imul
mov
xchg
sbb
mov
in
in
or
xor
test
or
popa
loopne
fmul
icebp
jle
shl
add
out
mov
dec
jo
pop
sbb
mov
sar
adc
int3
jmp
xchg
pop
(bad)
xor
sub
or
push
ror
xchg
shl
dec
and
or
pextrw
xlat
mov
adc
xchg
fmul
add
jbe
mov
sub
jns
in
jae
es
hlt
pop
fcomp
(bad)
into
adc
xchg
retf
and
sub
repnz
stos
lock
retf
clc
int
or
call
pop
hlt
mov
es
cmp
jmp
(bad)
mov
sar
call
cmps
and
sbb
ins
add
pop
pushf
les
(bad)
cmc
nop
leave
push
mov
jp
or
xchg
and
pop
mov
sbb
mov
int3
inc
sbb
xlat
leave
jnp
retf
and
pop
lods
adc
je
push
mov
mov
sub
xor
sub
repz
popf
xchg
fild
pop
mov
sbb
clc
shr
lock
mov
fidiv
push
jnp
cld
icebp
lea
push
mov
and
popa
stos
repnz
imul
dec
shr
xor
cmp
les
dec
in
popa
lock
xchg
out
push
dec
dec
pop
enter
scas
icebp
inc
push
sbb
cmp
outs
leave
pop
push
sbb
pop
outs
lahf
jle
ss
lods
ret
inc
pop
test
(bad)
(bad)
hlt
push
(bad)
(bad)
cmp
pushf
push
je
loop
cmp
mov
test
out
mov
int3
and
lock
jns
adc
inc
jmp
jns
imul
js
clc
sub
pusha
icebp
outs
movs
mov
cmp
(bad)
mov
nop
dec
mov
imul
(bad)
js
out
ins
aam
lea
call
and
aaa
das
push
xchg
rcr
adc
out
aam
sahf
pop
adc
mov
(bad)
sbb
mov
retf
push
int
and
xchg
test
outs
mov
iret
es
fld
dec
das
(bad)
(bad)
enter
lahf
lahf
jmp
in
dec
xchg
ins
xor
mov
mov
dec
sbb
loop
out
adc
jb
xor
(bad)
inc
cmp
dec
jbe
mov
aaa
or
mov
mov
sbb
and
bound
popa
jecxz
cwde
and
jge
jmp
sub
xlat
repnz
pop
cli
popa
in
push
lds
mov
mov
jecxz
xchg
adc
mov
ja
mov
and
into
pushf
je
jp
jns
je
or
test
xlat
jl
push
(bad)
loope
mov
mov
jmp
adc
inc
popa
gs
cmp
bound
adc
add
jle
cmp
adc
in
sub
sbb
(bad)
jbe
and
mov
jns
or
out
imul
lock
repnz
dec
jne
inc
dec
xchg
je
dec
call
mov
push
leave
jg
dec
ror
cdq
pop
pop
inc
add
pushf
(bad)
in
cmp
div
fisubr
mov
or
sub
sub
adc
sahf
fwait
push
cli
popa
clc
adc
xchg
push
in
inc
push
popa
int3
jg
je
adc
sahf
pop
mov
arpl
lods
call
sbb
xlat
call
mov
push
sub
fstp
das
mov
mov
cmps
adc
mov
pop
pusha
sti
mov
inc
ret
pushf
add
xor
or
rol
push
push
rcl
sbb
or
push
fist
or
data16
or
stc
or
pop
aas
xor
xor
(bad)
push
push
mov
(bad)
(bad)
fcomp
mov
push
jg
dec
mov
stos
adc
push
in
test
pop
daa
aad
outs
jo
inc
add
imul
xchg
shr
jg
push
(bad)
in
jns
shld
aad
adc
xchg
lock
popf
mov
adc
dec
push
xor
and
push
bound
rcr
jnp
mov
test
add
inc
arpl
dec
pop
scas
in
sub
pop
jg
ret
xchg
xchg
ficomp
div
(bad)
test
pop
adc
loopne
fs
add
inc
jmp
inc
or
cmovle
in
or
inc
adc
pop
repz
scas
sbb
out
mov
repz
nop
int
sub
push
ss
inc
and
dec
xor
inc
fs
test
ret
repz
out
pusha
test
cmp
or
dec
sbb
adc
je
sbb
mov
ja
sahf
pop
cdq
cld
out
pop
jecxz
cld
cmp
jns
dec
mov
pop
sbb
fucomi
mov
push
mov
mov
pop
test
inc
scas
pop
cmp
jle
and
adc
adc
ins
add
mov
cmp
repz
mov
stos
and
fcomp
pop
movs
add
aad
and
fwait
sbb
cmp
pop
jl
mov
int3
xchg
nop
std
fisubr
test
loop
sti
jne
sbb
imul
out
jmp
dec
nop
inc
sub
test
scas
pop
repnz
je
jbe
das
push
stos
xor
lods
or
jmp
add
rcl
lea
ins
or
adc
jae
inc
xchg
and
push
stos
sbb
cld
xchg
outs
cmp
push
lods
add
(bad)
mov
xor
in
sbb
retf
adc
adc
jno
pop
inc
pop
xlat
cli
test
ins
pop
imul
inc
pop
dec
cwde
or
sti
gs
aad
ret
inc
mov
cmc
shl
jl
jmp
xchg
(bad)
dec
outs
jno
cmps
addr16
xor
in
shr
int3
sti
jge
mov
test
fs
mov
pop
cmp
push
jmp
xor
out
and
gs
jo
xchg
dec
xchg
cld
in
outs
les
cmp
or
fstp
or
test
mov
xor
scas
sub
or
mov
adc
icebp
xchg
clc
push
jp
push
idiv
popf
sbb
push
aas
sahf
mov
or
cmp
mov
js
dec
ficom
mov
xchg
ss
push
inc
mov
lea
gs
in
(bad)
scas
into
and
repz
dec
nop
adc
mov
mov
pop
xlat
pop
test
adc
out
mov
adc
retf
adc
inc
cmc
movs
and
sar
lea
mov
into
addr16
das
sbb
pop
int
xchg
pop
test
cmp
mov
xchg
fbstp
fiadd
xchg
mov
das
nop
inc
shl
test
adc
add
jne
xchg
mov
inc
daa
das
call
jbe
adc
jae
test
and
(bad)
xchg
sbb
pop
iret
fldcw
cmp
pop
cmp
out
popf
pushf
mov
jb
loop
cld
mov
jae
ja
shr
jb
fadd
jbe
gs
jmp
pop
sbb
xchg
fdiv
push
lea
sub
pop
jno
push
dec
into
adc
dec
mov
push
xchg
shl
and
cdq
sar
mov
cmp
inc
mov
and
sub
inc
mov
xchg
cmp
mov
or
bound
movs
sahf
mov
fs
cmp
sub
push
mov
inc
shl
stc
adc
or
shl
pop
jbe
mov
cmp
sbb
and
aad
sub
adc
or
aas
and
icebp
inc
icebp
jnp
not
pop
out
mov
pop
pop
aam
mov
jmp
nop
inc
mov
push
out
pop
popf
es
adc
icebp
arpl
rcl
int3
inc
xchg
data16
ret
fist
or
out
add
inc
rcl
push
push
lock
sbb
fisubr
inc
xor
je
add
pop
bswap
mov
cmp
scas
fidivr
or
sbb
mov
mov
cmps
mov
enter
jns
inc
xchg
push
test
xlat
xchg
retf
inc
fwait
test
aas
xchg
pop
mov
xor
pmuludq
jmp
lods
jnp
mov
adc
les
cmp
or
lods
xor
test
int3
(bad)
test
lahf
lods
push
fwait
xchg
xchg
in
jecxz
sbb
push
sub
rcr
push
sub
test
mov
sub
(bad)
mov
add
loope
in
sar
fs
lahf
shl
sar
(bad)
cmp
push
int
rol
aaa
xor
aas
daa
jg
or
mov
mov
pop
nop
and
ins
push
test
(bad)
scas
adc
xchg
cmp
dec
pop
popa
inc
mov
push
mov
int
xor
sbb
in
(bad)
or
xchg
loope
xlat
aad
xor
dec
ins
mov
imul
scas
int3
xor
mov
push
push
jge
jae
add
add
and
ins
fsubr
push
push
cmps
fwait
test
sub
in
(bad)
and
dec
loop
inc
fcom
xor
(bad)
in
and
adc
popa
icebp
pop
mov
ja
test
mov
(bad)
cli
pop
jmp
pop
in
mov
enter
push
add
add
movs
pop
inc
adc
jnp
ds
iret
fucomp
mov
pop
dec
stc
pop
dec
ja
test
loop
sub
xlat
inc
imul
shl
lods
xor
sbb
sub
jo
mov
or
nop
jnp
adc
mov
push
inc
pop
mov
sbb
push
and
lock
popf
sahf
scas
bound
loop
movs
mov
bound
jne
jnp
ja
dec
das
push
call
push
arpl
fiadd
inc
es
aad
arpl
scas
aas
jbe
jmp
repnz
add
sahf
fist
arpl
aaa
push
movs
inc
push
push
in
movs
xor
shl
dec
push
jp
mov
fnstcw
outs
hlt
mov
add
scas
pop
ins
aad
mov
rcl
push
xor
test
stos
mov
ins
jge
out
pop
or
inc
mov
pop
retf
jg
out
pop
adc
add
stc
xchg
leave
sub
jne
out
add
lock
jo
jecxz
fdivrp
mov
adc
scas
shl
jle
inc
adc
aas
cs
popf
push
push
inc
fs
les
enter
adc
xor
sub
(bad)
jae
ins
cwde
inc
xchg
fucomp
jecxz
or
in
pop
mov
add
cmp
in
push
cwde
(bad)
arpl
xor
xchg
or
push
out
imul
sub
mov
mov
(bad)
push
cs
nop
dec
sub
es
xchg
ins
loop
popa
jle
fsub
dec
mov
push
xor
or
pop
call
cmps
jb
xchg
jmp
mov
xchg
adc
inc
mov
icebp
add
and
or
pop
mov
mov
mov
je
loop
jg
mov
clc
sbb
sub
mov
cmp
add
addr16
lock
mov
mov
out
shl
sbb
loopne
cs
cs
outs
or
out
xor
dec
adc
push
add
xchg
sbb
push
ror
mov
push
pop
cmp
pop
jb
pop
mov
and
test
jl
xor
mov
sbb
fidiv
repnz
mov
inc
mov
mov
sub
(bad)
xor
cs
xchg
xor
jg
xchg
ror
xor
sub
(bad)
data16
cld
mov
mov
pop
pop
(bad)
mov
sbb
nop
pop
push
enter
pushf
jmp
xchg
mov
(bad)
push
cld
sbb
push
ja
into
mov
test
xor
data16
ja
imul
mov
out
ret
jmp
loope
test
xor
es
add
jno
loope
adc
and
add
fs
and
cli
jne
add
addr16
imul
mov
or
outs
hlt
xchg
and
push
out
shl
xchg
or
sub
std
std
out
pop
add
cli
xor
sbb
in
add
sbb
jg
lea
scas
leave
je
scas
push
xchg
pop
and
sub
pop
(bad)
out
(bad)
dec
cli
sahf
pop
mov
cmp
xlat
dec
mov
push
mov
int3
mov
nop
mov
push
xor
data16
sahf
loopne
jnp
pop
lock
xchg
jae
(bad)
jmp
ror
call
jae
ja
pop
adc
xor
cmps
stc
(bad)
xchg
fdivr
cmp
and
aas
sbb
push
clc
xchg
fs
jmp
in
ja
xchg
mov
in
in
std
jne
out
mov
popa
dec
push
cwde
outs
sub
leave
xchg
sbb
mov
dec
rcr
rcl
jmp
adc
int
fwait
lock
ror
cmc
in
jle
xchg
cmp
inc
dec
pop
aas
inc
mov
cmp
pop
mov
stos
fisubr
shl
add
in
shl
sub
repnz
dec
jg
sahf
sub
mov
sub
into
inc
outs
cli
add
ins
arpl
fdivp
popf
jo
cld
test
sahf
ja
mov
inc
pop
dec
mov
arpl
imul
iret
pushf
pop
mov
pusha
lds
or
xchg
(bad)
push
mov
dec
and
fdiv
aas
push
sub
mov
and
bound
out
jo
inc
inc
(bad)
mov
aam
hlt
jne
push
ret
(bad)
adc
pop
push
sbb
pop
mov
adc
fucomi
movs
cmps
nop
or
scas
test
cmp
ret
leave
ins
ret
shr
fcomip
daa
mov
push
fimul
ret
mov
dec
sar
arpl
not
inc
pop
lea
pop
sub
mul
hlt
push
mov
xchg
xor
lods
ds
push
mov
hlt
mov
fiadd
pop
mov
repz
push
mov
push
leave
aam
cmc
cmc
adc
mov
sub
sti
sbb
(bad)
mov
(bad)
cmp
mov
rcr
aaa
adc
mov
int3
(bad)
jb
lods
fcom
cmps
push
(bad)
in
inc
jae
data16
outs
in
push
xchg
xchg
xor
or
inc
aas
fwait
or
(bad)
repz
cs
mov
(bad)
cmps
es
(bad)
ror
jmp
adc
xor
in
xor
cwde
adc
xor
out
call
nop
add
and
mov
push
and
fs
xchg
fwait
test
cmp
xchg
push
daa
loope
pop
in
xchg
fwait
enter
test
lock
and
mov
out
mov
mov
jmp
sti
mov
cs
adc
(bad)
jecxz
(bad)
sbb
and
(bad)
sub
das
push
cmp
sub
sbb
popf
in
xchg
mov
frstor
shr
push
inc
mov
addr16
fs
pop
ficomp
cli
fsubr
(bad)
aas
add
aad
(bad)
mov
fs
out
sbb
mov
mov
jno
std
or
xor
aad
sub
or
or
test
cli
ins
and
pop
in
dec
icebp
pushf
jl
inc
add
add
mov
sub
sbb
pop
sub
aam
(bad)
in
das
cwde
and
add
(bad)
push
add
test
repz
xchg
pop
push
int
rol
adc
leave
ficomp
inc
mov
mov
and
mov
mov
je
cmc
dec
xchg
xchg
ret
inc
test
clc
cdq
sbb
(bad)
stos
dec
rcl
sbb
inc
push
sbb
push
xchg
inc
pop
xor
mov
adc
lds
or
int
dec
push
adc
add
push
icebp
sbb
sti
xchg
xor
fdiv
inc
mov
and
loope
cmp
fistp
sub
fld
bound
loope
xchg
aaa
cli
adc
test
xchg
mov
add
aad
and
jp
sub
sbb
test
scas
(bad)
sbb
movs
xchg
cwde
sbb
ret
lea
cmp
sbb
pop
mov
rol
and
in
or
idiv
int3
and
jns
call
add
cmc
div
and
adc
jbe
in
mov
push
or
stc
or
jmp
call
gs
imul
jmp
lods
pop
std
push
stos
dec
inc
popf
dec
xor
lar
xchg
xchg
or
sti
(bad)
sbb
loope
imul
inc
aad
xchg
cli
clc
in
push
iret
sbb
popf
clc
fwait
pop
and
mov
cmps
or
xchg
jbe
leave
enter
push
or
cld
pop
xchg
push
aam
xchg
jns
pop
cmp
movs
adc
xchg
shl
jle
add
sub
fcomi
mov
push
xchg
pop
addr16
shr
idiv
gs
jp
sbb
xor
in
inc
sub
sub
or
pusha
fs
loop
xchg
jle
jmp
mov
aaa
adc
call
dec
out
mov
aad
mov
mov
jge
xor
push
test
repz
mov
gs
push
adc
pushf
cmpxchg
daa
or
nop
inc
inc
lahf
hlt
call
mov
dec
mov
(bad)
fadd
pop
icebp
or
dec
xchg
push
pop
cmp
jb
in
fldlg2
or
cwde
outs
dec
sub
mov
mov
rcl
jp
and
inc
rol
cmps
fidiv
or
popf
cmp
(bad)
mov
nop
pop
out
in
sub
mov
add
nop
stos
lea
repnz
sbb
jno
dec
mov
into
es
lea
inc
enter
or
dec
push
mov
ds
add
push
ds
loop
mov
nop
and
call
adc
fs
fsubr
mov
out
fldcw
call
imul
sahf
pop
mov
fisttp
repz
or
test
mov
mov
cmp
fcom
icebp
adc
cmps
xor
mov
loope
(bad)
jmp
(bad)
fucomp
jae
push
lock
call
and
sbb
jecxz
xchg
pop
pop
push
dec
fst
xor
leave
jecxz
ret
jns
or
or
retf
(bad)
out
loopne
mov
push
(bad)
fst
inc
pop
adc
cld
jo
or
shl
sub
ins
pop
je
call
out
pop
hlt
lods
jecxz
imul
cmps
cs
mov
dec
jp
lods
jb
pop
adc
pusha
je
pop
sub
in
dec
or
stc
int
jno
popf
pop
and
push
jle
das
push
test
ins
cmps
(bad)
int3
and
jge
out
mov
sub
fadd
inc
jmp
ficomp
pop
shr
mov
cli
mov
add
lahf
mov
adc
xchg
das
clc
adc
and
pop
jb
lods
xchg
je
sub
and
pop
retf
mov
mov
mov
out
cmp
idiv
dec
popa
pop
sbb
lods
push
pop
jmp
push
test
push
int
popa
mov
cs
push
les
jl
call
fmulp
sahf
mov
mov
push
lds
add
xor
pop
push
push
xchg
icebp
jg
(bad)
daa
outs
xor
data16
and
jmp
push
dec
test
pushf
jge
pop
repnz
sub
fwait
sar
and
and
mov
xor
mov
scas
add
mov
inc
(bad)
adc
cmp
xlat
(bad)
sub
mov
(bad)
(bad)
adc
ret
iret
aam
mov
cmp
cmp
mov
mov
mov
clc
ret
out
jg
pop
adc
and
ror
addr16
mov
mov
inc
inc
xchg
add
inc
lods
pusha
cli
cmp
push
sub
inc
(bad)
movs
push
iret
sub
shl
gs
xchg
fiadd
add
in
test
stc
or
pop
dec
ins
push
and
shr
cmp
popa
add
xor
stos
jmp
mov
push
jae
xchg
lock
jmp
lahf
int3
out
mov
sbb
stos
inc
ins
pop
adc
adc
aas
mov
mov
mov
retf
data16
xor
repz
pop
sub
mov
sbb
gs
lods
lea
out
int3
movs
int3
add
scas
jecxz
sub
pop
das
fwait
mov
pop
stc
lods
xchg
sub
aad
cmp
aad
push
or
xchg
mov
(bad)
imul
retf
imul
cli
(bad)
cmp
dec
pusha
jmp
pushf
pop
stos
daa
lods
mov
out
arpl
mov
mov
out
inc
mov
(bad)
sub
sub
xchg
cmp
pusha
sti
add
in
fst
jns
sbb
dec
jns
sbb
add
repz
aas
jne
jns
fild
mov
dec
push
loopne
not
xor
mov
or
(bad)
icebp
shl
cld
sub
leave
pop
xchg
cli
jmp
cmp
fnsave
gs
inc
mov
adc
mov
repnz
mov
cmp
adc
daa
dec
imul
xlat
test
das
rcl
push
cmp
adc
outs
and
sub
push
cmps
xchg
inc
mov
cmp
shr
dec
jb
and
or
jbe
cs
(bad)
fldenv
retf
fst
pop
jo
jmp
cmp
fs
mov
in
xor
mov
cmp
test
mov
(bad)
cmp
out
cmp
jb
ds
mov
cmps
and
and
add
imul
fistp
mov
(bad)
mov
in
inc
sub
in
nop
or
aaa
retf
aad
xchg
arpl
push
sub
pop
mov
out
movs
(bad)
mov
aad
js
or
push
jle
xchg
and
jge
xlat
shl
int
mov
mov
adc
pusha
loopne
call
and
jnp
xchg
das
ins
lahf
xchg
sub
dec
cld
gs
sahf
jp
dec
(bad)
mov
jmp
sub
cmp
mov
std
mov
aad
and
mov
sub
clc
mov
push
shl
push
or
out
repz
cwde
sub
arpl
mov
jb
dec
xor
mov
cmp
jbe
bound
xchg
xchg
mov
aam
add
adc
xchg
inc
mov
popf
jl
pusha
xor
imul
cmc
push
adc
rcl
jmp
or
pop
daa
or
in
mov
inc
in
cmp
shl
int
or
in
call
sub
imul
repz
or
sub
xchg
jle
hlt
bound
jb
stos
or
je
add
xchg
xor
mov
lock
jp
das
inc
or
mov
(bad)
fs
call
call
push
and
movs
push
js
pop
lods
pusha
add
push
mov
cwde
sti
mov
xor
repnz
inc
mov
lods
sti
call
sbb
rol
loope
out
fnstenv
test
xor
pusha
jmp
or
add
pop
int3
push
mov
out
ret
push
daa
sahf
ficom
ret
mov
adc
inc
sub
dec
daa
add
ins
mov
or
and
pop
mov
js
sbb
sub
xor
push
enter
(bad)
mov
fstp
dec
scas
cs
stc
and
add
pop
xor
in
inc
jp
leave
adc
xor
adc
pop
dec
test
bound
cmp
or
enter
jl
sub
mov
sti
jne
jnp
call
push
xor
push
aad
mov
add
inc
ds
adc
or
stos
pusha
pop
popa
leave
outs
ss
adc
int
aam
mov
ja
leave
xchg
or
pop
call
fsub
ins
xchg
mov
out
push
enter
add
and
call
push
hlt
ja
arpl
cmp
cmps
icebp
xor
xchg
lock
sub
fbstp
pop
adc
out
fnsave
test
and
in
xchg
daa
cmps
adc
das
fimul
mov
push
mov
mov
or
ret
lds
sbb
popa
cs
test
enter
jg
cdq
add
icebp
pop
and
pop
and
or
int
pop
inc
sub
cmp
in
lea
add
icebp
mov
cli
mov
leave
pusha
jne
inc
lea
aaa
fmul
lods
cmc
pop
cli
push
test
jo
cli
sahf
cmps
push
retf
and
and
retf
popf
fisubr
mov
test
inc
repz
add
iret
mov
mov
pushf
repnz
shl
scas
mov
pop
icebp
jmp
(bad)
jbe
mov
mov
pop
push
and
pusha
and
movs
test
adc
sub
mov
and
(bad)
loope
add
adc
add
jne
popf
lahf
mov
jbe
aam
inc
push
pop
aam
and
ins
ss
cmps
(bad)
enter
sar
xchg
sbb
test
xchg
cmp
aam
enter
(bad)
loop
rcr
adc
xchg
arpl
nop
push
adc
adc
loope
adc
pop
test
test
and
pop
stos
mov
push
out
push
std
shl
mov
lds
shr
fwait
and
mov
std
call
rcr
inc
mov
int
jle
out
out
inc
movs
les
mov
pop
rcl
movs
fsub
addr16
inc
inc
imul
add
out
sbb
pop
jp
sti
sub
xchg
or
test
jb
cmps
jne
mov
mov
xchg
neg
mov
adc
pop
fnstenv
out
inc
movs
ds
mov
fimul
and
adc
pop
xchg
lea
popa
retf
mov
rol
cli
mov
mov
ret
test
xor
xchg
xor
arpl
or
and
dec
stos
test
xchg
mov
dec
sbb
mov
mov
push
dec
(bad)
inc
jg
cmp
aaa
lods
je
in
cmp
js
mov
mov
sub
push
sub
cmp
sbb
inc
pop
(bad)
mov
rcr
loopne
mov
add
cmps
jmp
fs
lahf
cmp
mov
jp
and
in
jo
inc
jl
xchg
int3
sbb
aam
sbb
push
mov
leave
cld
test
mov
xchg
xlat
sbb
sub
and
adc
nop
xchg
xchg
sbb
gs
jo
aad
aas
popa
loopne
jmp
push
dec
imul
stos
mov
(bad)
loope
in
mov
std
(bad)
hlt
iret
dec
jae
test
imul
adc
into
xchg
shl
fwait
dec
add
cli
push
or
nop
sahf
sub
push
ret
cmp
enter
es
repnz
ror
adc
cs
jmp
add
sub
js
icebp
push
inc
mov
(bad)
pop
xchg
clc
xchg
dec
fild
inc
push
sbb
into
pop
cwde
lods
and
jg
and
pop
cmc
out
dec
mov
mov
and
xor
aam
cdq
in
repnz
(bad)
(bad)
or
or
fiadd
mov
mov
and
and
xchg
mov
(bad)
xchg
cmp
jns
mov
mov
pusha
in
cmp
mov
push
xor
jo
mov
test
jecxz
push
out
(bad)
add
test
loope
or
jo
xor
adc
ss
push
call
mov
push
xor
mov
std
lods
(bad)
push
addr16
jmp
fimul
pop
mov
sub
out
into
mov
push
lds
mov
push
xor
mov
mov
imul
and
jb
mov
lods
adc
imul
fcomp
shr
dec
pop
int3
xchg
nop
cmp
scas
in
mov
ret
add
and
movs
arpl
repnz
jo
aas
adc
dec
sbb
loope
or
mov
push
mov
cmc
jne
sbb
test
imul
lods
mov
test
mov
inc
and
add
dec
ins
mov
jae
mov
xchg
push
shr
mov
inc
icebp
stc
xchg
xlat
pop
push
jb
int
test
dec
xchg
daa
sbb
pop
sub
dec
imul
lahf
adc
add
and
or
and
dec
xor
adc
movhps
icebp
retf
dec
jnp
shl
jns
xchg
jb
dec
sub
xor
scas
push
retf
cwde
loop
sbb
(bad)
push
cmc
mov
enter
jp
dec
mov
cmp
popa
out
imul
arpl
xor
mov
add
ja
sbb
sub
aam
sub
adc
(bad)
cmp
push
xchg
into
arpl
retf
pop
mov
or
inc
shl
sub
add
psrld
(bad)
and
jmp
fist
jmp
aaa
mov
lods
neg
cs
movs
mov
shl
add
xchg
retf
mov
dec
outs
ins
cmp
jne
and
jnp
sbb
and
adc
les
sti
mov
xor
or
(bad)
in
jmp
cmps
ds
scas
mov
and
mov
xor
or
jne
gs
cld
test
mov
cmp
retf
mov
xor
test
es
test
sbb
ja
cmps
push
clc
idiv
fwait
aaa
sahf
outs
cdq
inc
test
out
sti
adc
and
jmp
nop
ins
scas
call
mov
dec
pusha
inc
push
sub
push
rcl
icebp
lock
jne
clc
mov
inc
push
pusha
shl
mov
sbb
push
fmulp
add
cs
bound
xor
jge
cmp
push
fst
adc
div
mov
cmp
adc
mov
(bad)
push
and
jns
push
ja
div
jmp
xchg
xchg
cmp
mov
pop
sub
xor
sar
adc
(bad)
int
xchg
outs
scas
sbb
sub
xor
data16
jecxz
movs
sub
xchg
mov
stc
cmp
dec
nop
inc
rcl
jp
xchg
call
xchg
sbb
jnp
mov
shl
leave
aam
dec
ds
xchg
fwait
push
jnp
imul
mov
les
xchg
es
pop
hlt
xor
(bad)
adc
cld
or
ins
popf
ret
or
pop
aad
pop
je
mov
fild
jl
addr16
mov
stos
mov
lahf
stos
inc
mov
mov
push
jg
cmp
clc
mov
loopne
lock
push
mov
mov
inc
enter
jp
retf
add
push
mov
mov
xor
test
sbb
ins
cwde
pop
dec
cli
ins
mov
pushf
mov
pusha
into
push
je
mov
(bad)
xchg
push
into
imul
pop
mov
imul
jb
mov
arpl
inc
mov
mov
ror
add
sub
cmp
je
push
adc
shr
inc
jae
dec
icebp
mov
out
dec
stos
jge
bound
mov
mov
int3
out
arpl
out
popa
inc
mov
movs
mov
enter
scas
sbb
add
xchg
inc
mov
fdivr
inc
pop
push
inc
rol
dec
dec
out
jecxz
pop
sub
scas
push
xor
cli
inc
jecxz
pop
aam
dec
div
add
and
scas
mov
into
sub
sub
ret
and
lds
mov
imul
and
fst
fbstp
push
ret
mov
and
mov
or
mov
sbb
xchg
pop
mov
cmp
clc
mov
lea
cmp
cmp
or
jecxz
and
stos
clc
mov
cmp
lds
and
leave
(bad)
ret
or
pop
sbb
in
mov
out
add
and
inc
rol
and
sub
repz
movs
mov
mov
cwde
fnstcw
jbe
adc
xchg
in
retf
mov
mov
inc
adc
test
cmps
not
mov
(bad)
jmp
mov
sub
je
pushf
js
lods
jge
es
stos
(bad)
nop
xchg
imul
adc
fucom
(bad)
(bad)
sbb
imul
sbb
push
dec
xlat
leave
mov
pushf
std
std
popf
sub
outs
mov
loope
test
or
xor
ins
mov
loop
mov
push
pop
call
sbb
inc
jecxz
push
jle
cmp
lods
(bad)
mov
jp
test
out
icebp
sahf
dec
dec
pop
jecxz
aaa
sti
cdq
jmp
loopne
fist
outs
cdq
add
sti
pusha
cmc
fwait
or
sub
cwde
cmps
dec
and
cld
into
test
add
es
jecxz
inc
nop
mov
push
ror
xchg
cmp
pusha
pop
fld
int
push
fmul
mov
scas
loop
sbb
pop
add
lods
push
sar
sub
mov
test
mov
scas
sub
jmp
hlt
int
inc
ins
in
jp
xchg
dec
stc
adc
mov
cli
pop
dec
xor
and
pop
adc
iret
daa
pushf
andnps
pushf
sahf
cmp
ficom
std
xor
adc
vmread
fwait
aam
call
test
jl
movs
push
fwait
ins
push
dec
test
pop
fidivr
iret
call
push
stos
dec
or
push
or
inc
add
ja
adc
and
xchg
out
and
adc
push
jmp
cmc
call
or
aam
xor
adc
cmp
adc
mov
mov
mov
xor
add
dec
scas
mov
dec
int3
dec
dec
sub
or
inc
inc
push
shl
adc
pushf
call
xchg
repz
push
mov
pop
mov
iret
ins
outs
jle
es
jecxz
push
out
add
and
adc
dec
xchg
push
fsubr
sub
(bad)
icebp
jne
jne
push
and
push
push
push
jl
dec
xor
adc
pop
repz
rcl
gs
xchg
addr16
call
clc
push
(bad)
dec
pop
dec
mov
cmps
retf
add
inc
in
push
js
cmp
mov
(bad)
cmps
loopne
inc
adc
test
imul
xchg
ror
repz
xchg
xor
in
movs
pop
mov
cmp
xor
and
sbb
imul
dec
add
fs
rcr
dec
ss
lock
out
mov
inc
pop
add
pop
pop
dec
xor
cmp
getsec
push
xor
shl
sar
adc
mov
pop
shl
in
fcomp
jp
in
jnp
stc
or
cmp
mov
repnz
add
xchg
sti
push
adc
push
dec
sub
xchg
mov
or
sahf
push
push
cmp
(bad)
movs
fidivr
out
and
daa
nop
push
stos
call
mov
test
sbb
mov
xchg
clc
out
(bad)
pop
(bad)
sub
daa
push
mov
ret
xchg
das
push
loope
loop
pop
add
sub
jns
nop
jle
mov
jl
push
mov
mov
jg
pushf
pop
pxor
ret
call
push
lds
add
popf
jge
mov
ss
push
mov
cmps
rol
hlt
loop
fucomi
jmp
cli
std
cdq
xchg
or
js
mov
retf
std
nop
mov
imul
inc
scas
shr
jno
sbb
push
into
dec
rcr
adc
dec
icebp
add
mov
pusha
stos
retf
mov
mov
xor
in
push
xchg
loopne
mov
int3
mov
rol
xor
dec
mov
cwde
add
xchg
mov
xor
loopne
arpl
aad
in
inc
inc
inc
sub
(bad)
mov
xor
push
sbb
(bad)
fisubr
pushf
call
xchg
(bad)
jae
push
sbb
jbe
adc
ss
jle
mov
test
outs
jmp
adc
sbb
and
adc
push
mov
movs
mov
fcom
jo
or
inc
inc
or
int
sbb
push
jne
cmp
cmps
ins
jmp
mov
pop
int
cmps
sbb
cdq
and
pop
push
aad
pop
test
add
push
xlat
mov
pop
mov
jo
push
dec
repz
movs
ds
sahf
jecxz
rcr
mov
jg
(bad)
jbe
add
cmp
xor
push
loop
push
jecxz
push
in
mov
pop
out
movs
or
shl
sub
iret
(bad)
popa
ja
pop
into
add
test
mov
fistp
or
jmp
mov
add
bound
push
push
inc
js
cmps
and
mov
mov
aam
cli
imul
cld
sbb
mov
mov
add
test
cmp
xchg
push
mov
mov
fnsave
(bad)
jle
fcmovb
lahf
call
push
dec
(bad)
mov
pop
clc
sbb
add
cmp
stc
das
mov
retf
cmp
test
xor
and
mov
add
mov
adc
mov
loope
adc
sub
fst
stc
shl
fidivr
jl
cmps
cli
jge
add
mov
push
mov
jb
lds
xchg
jns
cmp
pop
daa
repnz
jnp
add
lahf
sahf
in
xor
es
icebp
push
bnd
lods
mul
sub
cmp
and
and
cmp
ficom
cli
fiadd
aas
push
int3
inc
js
jne
xchg
inc
not
add
jne
out
pop
icebp
movs
mov
iret
cmps
ds
adc
xchg
nop
gs
xor
ret
mov
cdq
cwde
jae
cli
add
inc
xor
mov
mov
test
(bad)
mov
push
sub
out
arpl
(bad)
xchg
cmp
and
call
int
xchg
xchg
jnp
xor
add
outs
sub
cmp
sti
mov
sub
push
out
jns
sbb
mov
add
out
fsubp
jg
std
imul
pop
mov
das
or
(bad)
xor
or
nop
sbb
jecxz
arpl
ret
push
xchg
imul
bnd
lods
xor
test
xor
leave
fcom
push
pop
push
fsubp
outs
xchg
xchg
push
mov
in
icebp
inc
cmp
sub
clc
add
(bad)
sub
ficomp
fldenv
pop
jl
pop
inc
nop
adc
or
pop
push
ds
xchg
cmp
cmps
inc
pushf
in
test
mul
jg
das
les
ins
enter
arpl
ja
in
enter
ret
fcmove
mov
cdq
push
aad
push
ja
fwait
add
mov
movs
jmp
sub
and
sbb
jo
jl
xor
and
add
dec
sub
sti
mov
jbe
in
xchg
aam
clc
cmps
cld
or
xchg
and
in
mov
inc
xchg
pop
rcl
popa
lahf
shr
out
loop
jno
retf
jg
xchg
retf
les
jb
enter
and
mov
mov
xchg
inc
sbb
push
pop
fist
and
mov
sbb
test
cmps
stos
xchg
pop
fbstp
daa
cs
or
lds
leave
add
add
mov
cld
xchg
cwde
or
pop
push
dec
mov
mov
jl
cli
and
add
inc
pop
retf
mov
stc
mov
pop
ins
jns
mov
pop
jle
pop
inc
jb
cli
rol
test
cmp
ds
movs
pop
dec
ins
adc
mov
fistp
test
out
imul
xchg
push
lds
call
or
sahf
idiv
imul
xchg
addr16
jecxz
ins
lahf
and
jb
cs
jnp
jns
in
fidiv
out
push
sub
jle
dec
int
ins
cmp
pop
jmp
hlt
stc
sbb
test
scas
into
xlat
test
push
add
jne
jp
pushf
lahf
stos
push
cs
call
dec
push
mov
cmp
mov
mov
and
sub
cld
sbb
jnp
mov
aam
push
stc
jecxz
sub
(bad)
dec
mov
arpl
mov
pop
cmp
sbb
pop
push
mov
push
push
jbe
ret
mov
iret
or
sbb
xor
and
repnz
lds
jbe
push
dec
into
mov
xor
cmp
out
and
push
imul
popa
stos
jnp
mov
pushf
mov
cmc
fwait
sbb
in
les
or
lahf
(bad)
push
mov
jecxz
cmp
push
out
jmp
(bad)
fidivr
dec
repz
adc
xchg
push
mov
out
jno
js
inc
push
jae
out
adc
or
add
out
inc
or
les
xchg
inc
es
ins
cmp
fs
ficomp
ud2
add
outs
adc
movs
call
retf
sar
aam
shr
cwde
mov
ret
xchg
fist
test
jp
ret
push
int3
and
lds
rcr
cmc
(bad)
pop
or
push
int3
lods
test
jne
test
adc
or
jmp
jb
push
loopne
dec
sahf
mov
out
mov
bound
cmp
sbb
pusha
aad
push
je
and
pop
and
mul
pusha
ror
cmp
addr16
mov
cs
push
scas
gs
lock
lods
dec
outs
outs
push
xchg
pop
shl
inc
test
xor
mov
xchg
dec
inc
mov
arpl
mov
mov
lods
(bad)
leave
fsubp
loopne
inc
xchg
addr16
adc
gs
stc
xlat
hlt
mul
test
je
cmps
out
into
xchg
dec
outs
sbb
jmp
adc
jnp
xor
cmp
push
sub
mul
mov
xchg
scas
adc
pop
push
xchg
xchg
enter
inc
dec
cmps
call
dec
pop
ds
fistp
jmp
inc
mov
and
pop
sub
loop
push
ja
in
fwait
mov
stos
icebp
push
push
data16
cmps
daa
push
retf
sbb
pusha
pop
cmp
dec
sbb
xchg
in
pop
int3
mov
loope
xor
sar
fisubr
dec
fimul
sub
and
jo
sbb
or
loop
and
cdq
xchg
and
rcr
sub
or
imul
mov
mov
mov
xchg
mov
nop
inc
out
ja
int3
or
lds
push
dec
push
data16
xor
retf
and
push
mov
xor
mov
into
dec
inc
mov
test
bound
mov
out
sbb
ds
stos
mov
and
pop
xcrypt-ofb
cmps
imul
retf
jl
daa
lds
(bad)
loop
neg
jp
cdq
movs
push
aaa
xor
rep
or
adc
in
or
iret
aaa
cld
cmp
fcmove
cld
pop
sub
cmp
jnp
es
les
or
les
add
lock
ins
dec
daa
mov
imul
add
cmps
jg
test
push
jmp
aas
(bad)
mov
data16
(bad)
call
or
mov
call
mov
push
jae
pop
arpl
ins
cmp
int3
jns
aaa
adc
(bad)
js
xor
push
push
pop
pushf
mul
call
call
imul
arpl
mov
das
pop
nop
inc
or
iret
out
mov
(bad)
adc
and
call
and
(bad)
jmp
xchg
call
add
loop
xor
les
inc
repz
test
in
les
idiv
or
cli
retf
retf
outs
pop
or
mov
aam
cwde
outs
cmp
dec
cwde
aad
push
je
fdivr
test
push
popa
inc
sahf
std
mov
cmp
scas
dec
pslld
mov
pop
jmp
stos
adc
push
ret
xlat
pop
jle
pop
xor
pop
(bad)
(bad)
sbb
add
or
push
and
fcomp
jns
push
push
mov
xlat
dec
add
lock
popf
rol
adc
xor
retf
int
int3
or
in
adc
cli
add
cmp
ins
out
or
cli
xchg
mov
test
inc
pop
push
cmp
dec
push
ret
ror
jmp
sub
imul
add
call
ins
jb
(bad)
jns
retf
movs
sub
push
dec
push
das
inc
aas
pushf
rcl
jmp
lahf
shl
xchg
lock
nop
lea
(bad)
xchg
cmc
scas
xor
dec
cmps
mov
repnz
nop
addr16
mov
repz
xlat
xchg
lods
cld
add
nop
jnp
cmp
inc
xor
adc
nop
loope
dec
iret
daa
fmul
adc
daa
mov
call
push
int
xor
sub
push
or
inc
or
jp
lock
adc
jge
xor
aad
pushf
fist
fild
jb
jo
mov
sub
mov
retf
(bad)
loopne
cmps
sbb
in
cmps
inc
xchg
scas
sub
sub
cli
daa
xchg
pop
rcr
add
xor
enter
test
or
mov
daa
mov
mov
xor
xor
mov
pop
aam
jbe
aas
iret
push
push
inc
mov
daa
push
add
pop
cmp
lods
xchg
ror
aas
addr16
push
mov
mov
bound
jle
cmp
shr
and
mov
cmp
cmp
mov
or
pop
xor
ja
mov
(bad)
jmp
xchg
fiadd
in
mov
mov
lods
popf
add
movs
mov
loopne
enter
mov
inc
inc
mov
jns
or
mov
test
push
cmp
mov
jmp
cmp
jno
xchg
xor
fcmovnb
cdq
ret
aaa
lods
or
push
pop
cmc
dec
add
daa
xchg
mov
lock
scas
stc
mov
adc
das
icebp
or
push
aam
add
sbb
jmp
fucomip
adc
dec
call
sub
shl
test
sbb
and
enter
inc
neg
in
ins
mov
ret
mov
sub
and
or
(bad)
sub
mov
sbb
stos
or
adc
fadd
and
loope
push
or
adc
imul
and
add
sbb
xchg
mov
repz
sbb
push
fidivr
sti
lds
sub
mov
shr
jns
(bad)
xchg
add
popf
pop
add
jno
imul
xchg
adc
push
mov
mov
mov
call
dec
out
in
stos
jmp
inc
(bad)
out
cmp
push
jmp
pop
adc
(bad)
in
jb
(bad)
pop
mov
adc
jo
fst
jp
mov
es
cli
mov
sbb
xor
cs
jne
cmps
or
iret
add
mov
cld
mov
ret
jb
push
scas
inc
push
leave
ds
aam
mov
mov
ins
mov
clc
(bad)
out
cmp
xor
xchg
outs
test
add
arpl
stos
or
jecxz
cli
mov
xchg
js
add
xlat
ja
ins
add
mov
lods
pop
sub
shr
and
ja
xor
clc
dec
jnp
std
lods
sub
out
outs
jge
and
lods
sub
sbb
jne
pop
sbb
adc
and
mov
clc
push
and
leave
jecxz
inc
inc
cmp
xchg
xor
cmp
arpl
mov
push
mov
pushf
xor
sbb
jne
adc
ja
sbb
lods
ds
and
push
mov
mov
outs
imul
jbe
out
adc
push
adc
bound
push
cmps
jo
xor
std
cmp
adc
mov
fwait
rcl
mov
dec
es
jno
cwde
in
inc
cmp
sbb
or
and
sahf
shr
xor
sub
push
push
repz
(bad)
ret
in
(bad)
idiv
inc
push
pop
jp
sub
mov
and
fs
idiv
loopne
mov
xchg
dec
or
inc
mov
xchg
mov
or
mov
pop
sahf
xchg
push
or
test
rol
ror
into
movs
mov
pop
jge
mov
(bad)
push
dec
sub
mov
dec
mov
pop
into
mov
(bad)
les
pop
mov
or
aad
in
adc
inc
mov
dec
xchg
dec
in
jecxz
inc
inc
outs
push
scas
(bad)
mov
xchg
leave
or
ror
push
or
out
jmp
je
in
add
aad
scas
or
(bad)
aad
ja
loop
xlat
inc
jns
and
ds
mov
addr16
and
xor
lods
add
bndstx
leave
add
outs
mov
(bad)
xchg
mov
jmp
ror
rcl
dec
sbb
outs
lahf
movs
popf
cmc
(bad)
xchg
jle
xchg
mov
cmc
pop
sahf
mov
mov
jb
mov
ss
rol
xor
inc
jb
push
jge
jmp
mov
inc
gs
xchg
and
ret
cmp
cli
xchg
imul
into
cdq
call
fwait
neg
das
cmp
and
in
aam
aam
add
lock
popa
jmp
or
retw
out
mov
cld
repnz
pushf
pushf
xchg
adc
gs
inc
out
pop
mov
mov
and
sbb
and
fstp
jmp
mov
cmps
sar
cmp
bound
adc
(bad)
ret
out
stos
and
shl
adc
fisubr
rcl
xchg
push
arpl
cld
jo
or
aad
pop
add
cmp
rcr
adc
mov
jmp
not
and
fidiv
xor
retf
movs
cmp
imul
xchg
adc
dec
addr16
fmul
push
cld
add
adc
xchg
xchg
(bad)
imul
cmp
test
fst
cmps
pop
and
int
int
not
lods
or
dec
sbb
xlat
xchg
(bad)
ror
xlat
inc
dec
jg
dec
lahf
mov
jle
jb
adc
add
loopne
ja
ret
ja
ss
pop
mov
push
sbb
lods
leave
enter
sub
sbb
adc
mov
lds
test
fcomp
mov
sbb
hlt
mov
hlt
push
jmp
xchg
dec
jg
or
xchg
cmp
popf
sbb
ret
inc
pop
jb
imul
xchg
mov
mov
sahf
inc
test
and
pop
gs
inc
adc
pop
scas
mov
mov
jecxz
add
je
loope
lahf
hlt
js
and
push
sbb
ds
lock
push
add
(bad)
mov
push
mov
je
mul
add
jmp
cwde
setns
repz
sub
fwait
div
pushf
mov
(bad)
add
ins
retf
push
adc
push
sahf
push
cmps
sub
pop
xchg
repz
call
lea
mov
stos
in
retf
fimul
cmp
push
icebp
mov
std
adc
cdq
dec
ins
(bad)
dec
loopne
xchg
das
push
in
mov
or
mov
scas
ss
retf
mov
sti
das
sub
jge
sub
scas
jae
inc
sbb
cli
dec
cmp
(bad)
ds
outs
shl
xor
push
mov
lods
loopne
push
jb
imul
mov
and
cmp
test
outs
xchg
xor
clc
cmp
repnz
bound
sahf
mov
jmp
loope
sbb
jmp
mov
mov
sbb
add
inc
aaa
fsqrt
bound
out
mov
popa
push
lahf
dec
(bad)
xor
push
in
dec
mov
push
and
mov
push
mov
frstor
shl
xchg
or
fstp
push
add
ds
jg
out
in
lods
retf
clc
pop
mov
mov
outs
js
out
inc
push
add
inc
dec
(bad)
jg
cmp
inc
inc
mov
scas
pushf
jne
scas
push
inc
xor
push
xchg
retf
pop
xchg
push
jae
xchg
pusha
aaa
fstp
stc
cs
stc
mov
cmp
ret
rol
(bad)
fild
add
dec
mov
nop
xlat
(bad)
fisub
or
or
xchg
push
mov
pushf
jb
sti
int3
js
push
addr16
or
outs
xchg
jnp
push
inc
mov
retf
aaa
lahf
imul
movs
cmp
das
jle
js
sar
mov
sub
mov
fisubr
mov
inc
rcl
inc
mov
adc
inc
and
arpl
pop
sti
mov
jg
pop
fwait
sbb
xor
push
out
push
jns
ret
ror
scas
int
xchg
enter
cdq
call
outs
mov
pusha
fisttp
sbb
mov
lods
rcl
sti
aas
xchg
in
and
fcmovbe
call
cmc
outs
int
adc
aas
xchg
inc
push
pop
(bad)
dec
xor
sub
and
out
int
inc
out
mov
adc
push
test
fld
xor
gs
aam
dec
or
dec
sub
int
dec
push
jae
inc
push
iret
cs
pusha
sbb
sbb
add
call
mov
pop
mov
ja
xchg
mov
loopne
jle
shr
(bad)
mov
into
outs
xchg
adc
jmp
push
xchg
jmp
mov
jnp
dec
movs
and
fild
test
jb
mov
sbb
sub
add
ret
popf
int
bound
jle
scas
xor
movs
add
sub
sar
and
gs
jno
iret
lahf
mov
add
lock
(bad)
xlat
mov
cmp
rcr
stos
jae
daa
ja
and
jg
sub
or
jne
cmc
fmul
cmp
sbb
shl
push
call
and
sub
xchg
lahf
sti
sub
dec
inc
cs
dec
push
push
pop
mov
pop
out
icebp
(bad)
loope
les
pushf
dec
adc
mov
pop
inc
xchg
mov
jnp
inc
inc
mov
jns
pop
popa
(bad)
jl
ss
arpl
cmp
xchg
mov
ror
pop
cmp
ficom
mov
dec
jle
mov
pop
jp
stos
fucom
jb
lods
loop
sti
xchg
(bad)
jmp
sbb
xor
jns
push
(bad)
push
popa
pop
sti
fwait
sbb
push
push
aas
pop
mov
mov
add
arpl
pusha
faddp
pop
jmp
fild
je
ds
pop
ja
inc
les
or
pusha
aas
in
jne
lahf
rol
std
sahf
push
in
mov
addr16
cmps
pop
and
sub
outs
cmc
aad
or
jp
jle
jnp
inc
cli
in
imul
es
(bad)
push
add
or
jns
or
and
mov
cmp
or
pop
dec
cmp
out
mov
retf
sub
div
jg
popf
mov
jl
push
jmp
push
push
or
and
lahf
push
enter
cmp
mov
add
data16
lds
nop
xchg
xchg
shl
scas
lods
xlat
jl
repz
es
test
test
leave
cmps
in
loope
xor
ret
sbb
push
mov
and
scas
retf
in
jno
stos
sbb
push
outs
mov
cmc
ret
dec
mov
daa
cmp
xchg
imul
out
retf
jg
in
xor
icebp
daa
loope
mov
xor
aaa
out
test
stos
retf
dec
mov
cmp
out
fcomp
arpl
test
lods
adc
stc
adc
hlt
adc
les
in
jp
in
shl
call
xchg
int3
and
(bad)
mov
loope
ret
inc
sbb
xchg
mov
pop
mov
cmc
jne
sub
add
retf
jp
mov
(bad)
in
or
fidiv
call
cmp
push
retf
scas
dec
jmp
mov
popa
lods
movs
add
iret
inc
sub
push
adc
add
add
jecxz
lock
ficomp
mov
adc
data16
xor
push
(bad)
and
inc
jmp
add
sub
mov
fisubr
enter
mov
push
cmc
arpl
cwde
and
mov
add
sbb
nop
aas
fs
sbb
in
cmp
sbb
mov
in
into
push
in
push
mov
dec
dec
enter
sahf
dec
ret
fist
std
dec
inc
in
dec
ret
mov
sub
push
lea
fdivr
push
enter
iret
imul
mov
inc
push
pop
push
mov
xor
in
fcom
in
jl
test
int3
clc
imul
fnstenv
pop
into
sbb
daa
sti
out
dec
repnz
pop
pop
cdq
sub
scas
mov
aaa
stos
movs
lock
jae
push
movs
cmp
mov
pop
fsubr
mov
(bad)
and
cwde
lods
mov
(bad)
loope
and
dec
ins
fs
aad
(bad)
xchg
fidiv
loopne
(bad)
or
pop
ja
shl
dec
mov
mov
mov
fiadd
cwde
cmps
dec
cmp
add
popf
mov
scas
mov
push
hlt
xor
addr16
mov
and
push
pop
or
js
jg
dec
aad
js
lods
pop
push
mov
loop
xlat
icebp
xlat
lahf
pop
mov
xor
je
lods
loope
mov
out
push
mov
pop
cli
xor
mov
stc
xchg
mov
inc
mov
test
int3
cdq
lock
(bad)
cmps
jmp
shr
pop
retf
xchg
je
jg
popf
dec
je
pop
ret
popa
outs
dec
fidivr
mov
fs
pop
je
push
cwde
fwait
or
xchg
mov
clc
adc
(bad)
shl
fimul
mov
les
in
add
cmp
pop
push
xor
sbb
dec
add
test
mov
xor
data16
stos
push
ret
dec
mov
jle
lea
pop
inc
rol
popa
mov
and
imul
xor
jmp
add
outs
pop
sub
mov
fld
dec
stos
pop
cdq
xchg
out
das
inc
adc
outs
das
(bad)
(bad)
mov
es
movs
in
outs
add
(bad)
jmp
dec
xchg
in
gs
mov
mov
cld
xchg
std
and
mov
and
mov
lds
call
aam
inc
cs
outs
sbb
fs
jmp
push
popf
jb
adc
cli
div
ret
repnz
hlt
cmp
das
vaddsubpd
cmp
mov
sub
mov
adc
cmp
pop
sti
sbb
add
cmp
push
mov
xchg
jmp
xor
cmp
push
arpl
xchg
xchg
js
loop
dec
out
in
lea
sbb
mov
ja
mov
cmp
jl
(bad)
jmp
pop
cmp
dec
and
pop
add
xchg
ins
cs
mov
inc
xor
(bad)
xchg
sbb
and
jmp
aas
or
xchg
out
ss
icebp
out
idiv
jmp
sbb
dec
and
sbb
movs
mov
adc
xchg
into
mov
fiadd
jns
xor
jmp
jns
test
jns
outs
adc
mov
(bad)
and
or
xchg
mov
push
imul
out
gs
cs
pusha
test
sub
jecxz
aas
xchg
xchg
gs
popa
adc
cwde
pusha
add
js
outs
retf
or
fldcw
popf
sub
pushf
jl
inc
mov
mov
mov
mov
push
jbe
cmp
dec
cs
lea
xchg
retf
sub
adc
push
call
inc
call
lahf
hlt
js
xlat
scas
inc
cli
outs
iret
add
cli
std
outs
adc
mov
stc
test
mov
test
xor
repnz
add
adc
stos
jl
cmps
hlt
push
pop
call
jmp
fmul
inc
aam
fstp
retf
arpl
ins
aas
pop
popa
ins
mov
inc
mov
add
clc
jns
mov
es
daa
or
and
and
outs
push
fcom
push
or
nop
jp
stos
mov
jo
(bad)
sbb
dec
xor
mov
push
hlt
mov
out
in
movs
int
lahf
inc
pop
pop
sbb
loope
inc
mov
lea
call
sub
fst
pop
mul
xchg
mov
cmp
cmp
or
gs
(bad)
jbe
jl
push
fldenv
jo
fwait
push
push
push
xor
out
xchg
and
out
mov
call
jne
icebp
(bad)
jg
int
enter
add
cmps
mov
inc
mov
fs
xor
push
rcl
push
mov
mov
xchg
fdiv
cmp
fistp
sbb
repz
xchg
popa
jno
jmp
rcl
xor
loop
fsubr
mov
dec
xor
jg
inc
xlat
mov
sbb
shl
outs
push
in
dec
jge
add
(bad)
cmp
stc
fs
cld
fidiv
jnp
bound
jnp
add
mov
ret
retf
sahf
and
add
dec
mov
add
push
dec
aaa
add
inc
stos
adc
pop
stos
jge
cwde
dec
pop
mov
sub
jmp
je
outs
mov
mov
shl
or
mov
test
mov
js
aad
je
push
and
push
mov
and
push
inc
(bad)
clc
or
jnp
(bad)
in
dec
sti
jg
jmp
jmp
or
rcr
ins
inc
shl
out
dec
sahf
push
pop
dec
mov
aam
inc
cmp
push
or
ins
add
repz
add
(bad)
jg
aam
dec
mov
dec
xchg
aaa
and
dec
scas
push
scas
mov
pusha
xchg
scas
in
lods
mov
rcr
fnstsw
or
or
sar
out
arpl
lock
jns
jne
cmp
xor
movs
mov
mov
imul
xchg
fs
push
movs
ja
inc
mov
sub
or
xor
dec
mov
xor
imul
stc
xchg
push
pop
mov
mov
ja
push
xlat
mov
cld
add
bound
or
and
out
outs
adc
mov
fdivr
push
xor
and
fld
(bad)
mov
or
icebp
mov
push
ror
pushf
call
sbb
mov
(bad)
mov
xchg
int
popf
xchg
push
out
add
mov
push
cld
dec
dec
sbb
dec
or
cdq
loopne
ds
(bad)
push
addr16
stos
sbb
dec
dec
leave
outs
mov
mov
mov
repnz
xor
dec
mov
outs
inc
das
pop
test
popa
cmps
jmp
sahf
lds
sbb
sbb
lods
mov
aam
xor
neg
cld
mov
sbb
je
xchg
inc
inc
sub
dec
aaa
call
mov
push
fadd
test
inc
mov
sub
call
adc
(bad)
fild
adc
nop/reserved
shr
dec
cdq
dec
and
in
xchg
push
fs
nop
mov
fwait
aad
bound
in
push
mov
outs
cmp
inc
adc
sbb
sub
fnstcw
cmp
cmps
or
in
mov
stos
mov
add
mov
xchg
push
bound
pushf
outs
jl
imul
sbb
jnp
and
js
pop
lahf
daa
mov
xchg
sub
fiadd
aam
in
fcomp
mov
or
(bad)
enter
hlt
jno
cmp
test
and
mov
mov
add
(bad)
mov
cld
xor
pop
loop
mov
pop
(bad)
mov
adc
or
mov
cdq
xchg
inc
leave
dec
or
icebp
fld
shl
loope
call
mov
push
test
enter
push
daa
mov
aaa
mov
or
jle
mov
inc
bound
inc
sbb
xor
sub
inc
ret
fs
mov
jmp
aas
mov
xchg
or
cmp
xor
lahf
movnti
jle
sbb
jbe
mov
mov
add
pop
mov
lea
cmp
add
push
iret
add
and
jns
inc
out
ins
and
jle
aad
pop
cvttps2pi
push
retf
or
sub
and
adc
neg
or
in
int
pushf
and
test
jbe
clc
ins
repnz
push
cwde
jl
push
or
sbb
xlat
or
fistp
mov
pop
mov
inc
fldenv
pusha
not
mov
sbb
fwait
push
xlat
sub
stos
cdq
std
das
stc
mov
mov
pop
lods
mov
mov
scas
scas
jns
adc
nop
je
call
jb
jne
(bad)
xchg
loop
xlat
shl
out
nop
pusha
mov
or
call
scas
ins
mov
pop
sbb
sub
jg
mov
push
mov
push
(bad)
mov
cmp
mov
push
add
fwait
push
dec
cmp
push
pusha
mov
mov
jb
pop
inc
retf
and
mov
jb
shl
mov
cmp
pop
bound
(bad)
adc
(bad)
mov
fild
clc
xchg
mov
(bad)
xchg
jae
retf
mov
jge
push
jl
daa
mov
adc
sahf
fwait
jnp
and
jp
xchg
pop
shl
xor
mov
cpuid
nop
scas
sub
jae
jge
jae
(bad)
push
push
retf
jl
push
mov
cmp
in
ja
mov
(bad)
gs
lods
jmp
adc
in
pusha
sar
and
movs
int3
aad
aam
push
adc
push
rcl
popa
pop
adc
add
xchg
shl
lahf
xchg
loop
jmp
pushf
dec
je
hlt
mov
pop
mov
adc
jge
aad
int3
sbb
fwait
xor
sub
sub
iret
xchg
xchg
pop
fbstp
and
push
in
fisubr
jmp
and
mov
dec
xlat
cld
aad
or
mov
scas
ins
dec
push
mov
sahf
push
stc
xchg
cmp
sbb
xor
lods
push
mov
lds
sub
xchg
xchg
ds
and
frstor
jmp
adc
(bad)
stc
xchg
pusha
xor
mov
ds
mov
out
fimul
repz
pop
jmp
add
js
ja
gs
xchg
sub
dec
add
and
adc
mov
xchg
sub
(bad)
sti
and
aam
jp
(bad)
(bad)
int3
mov
xor
imul
inc
xchg
adc
push
add
jle
mov
inc
push
jb
add
inc
test
mov
xor
dec
loope
hlt
fimul
jb
popf
and
fidivr
mov
jl
test
xchg
cmc
movs
push
xchg
mov
iret
fdivr
sbb
push
sbb
xchg
jne
jge
arpl
fcmovnbe
mov
sti
clc
jmp
scas
(bad)
dec
or
or
dec
xor
xor
out
and
jp
xchg
inc
jp
sbb
loope
shl
mov
jo
shl
lahf
mov
push
test
daa
cmp
or
xchg
and
inc
mov
icebp
push
and
jle
jb
and
and
and
mov
xchg
dec
mov
xor
repnz
cmc
pop
arpl
or
or
inc
cli
scas
(bad)
lds
daa
mov
lods
sbb
or
xor
xchg
push
ss
mov
sbb
push
jecxz
mov
(bad)
jmp
add
jmp
out
add
imul
pop
add
or
clc
cld
pop
sub
dec
movs
addr16
pop
mov
(bad)
stos
add
adc
int
pushf
pop
ss
bound
ins
sbb
sbb
cmp
ins
mov
mov
cmp
(bad)
mov
enter
mov
ins
lods
arpl
mov
mov
(bad)
in
cmp
js
mov
dec
movs
sub
loopne
mov
shr
mov
push
sbb
mov
mov
loopne
fldcw
sahf
sub
(bad)
ins
adc
pop
adc
cmp
inc
adc
inc
popf
cld
stos
nop
movs
sti
xor
scas
and
(bad)
repnz
enter
mov
(bad)
loop
in
adc
mov
mov
into
rol
and
inc
retf
sbb
jecxz
or
dec
or
cli
pop
or
faddp
sahf
fadd
pusha
arpl
ficomp
or
(bad)
sbb
ret
mov
jb
div
xchg
add
sub
inc
mov
fist
sahf
aad
popf
cmp
imul
mov
popa
std
mov
sbb
sbb
or
(bad)
in
les
in
pop
dec
dec
clc
ror
aaa
and
in
call
cli
fadd
scas
jl
push
adc
jbe
xchg
mov
jbe
fdivp
stos
out
jl
dec
add
(bad)
(bad)
das
ins
mov
mov
cmp
mov
pop
sbb
jmp
push
jge
mov
sbb
push
xchg
mov
xor
inc
add
sbb
sbb
mov
pop
sbb
scas
sub
dec
xor
sub
out
xchg
mov
mov
sub
xchg
and
call
sti
sbb
repnz
dec
adc
jo
cmp
test
jl
lods
sub
sbb
add
jno
jno
int3
icebp
into
enter
hlt
push
push
(bad)
mul
sar
and
adc
and
jne
inc
lock
mov
fldcw
lahf
xor
dec
(bad)
xor
pusha
gs
ja
cmps
sar
jnp
ret
imul
cmps
push
(bad)
mov
shl
pop
and
pop
dec
jp
lds
xor
fcmovnb
retf
add
les
movs
out
ret
and
sbb
push
fisttp
test
xor
jle
dec
js
lods
xor
daa
lds
mov
dec
in
data16
sub
loope
add
sahf
sub
mov
repnz
add
sub
bound
nop
popa
adc
mov
cmp
lods
pop
push
jl
int3
add
mov
dec
mov
adc
xchg
add
cli
push
popa
ror
in
cdq
mov
test
(bad)
imul
(bad)
push
ds
cld
mov
mov
pop
cmps
adc
repnz
(bad)
(bad)
xchg
out
loope
cmp
mov
dec
bound
stc
lea
fsub
ret
sbb
repz
loop
mov
stc
or
in
mov
pop
jae
sbb
mov
jns
push
vpsubb
pusha
push
inc
adc
xor
pmullw
ss
sahf
out
aas
mov
xor
and
mov
imul
sub
in
loope
dec
pop
mov
pushf
push
lahf
(bad)
cmp
stos
js
push
jmp
loopne
test
in
cmp
pusha
and
add
stos
dec
lds
mov
add
xor
int
pop
fwait
sub
addps
repz
movs
sti
fs
bound
mov
test
mov
dec
sub
sub
mov
xchg
xor
icebp
add
or
sbb
jne
aaa
jnp
es
xor
rcl
aad
stos
and
call
jnp
mov
sti
leave
pop
imul
mov
pusha
shl
out
mov
mov
int3
add
out
inc
repz
jmp
gs
f2xm1
rcr
adc
fild
ret
cmps
mov
lods
fnstsw
test
pop
mov
mov
mov
rcr
jb
fist
call
mov
int3
dec
rcr
cmp
inc
int3
or
inc
cdq
push
sahf
or
cwde
xchg
mov
pop
dec
push
sbb
push
add
sar
test
inc
jmp
xchg
cmp
add
add
imul
push
fild
add
push
cmp
adc
retf
retf
dec
push
in
inc
enter
fnstcw
pop
xor
mov
in
gs
and
xor
call
sub
or
push
lock
jl
in
pop
jp
icebp
movs
ss
lods
mov
retf
mov
pop
cld
icebp
xchg
iret
xchg
mov
loop
or
add
push
mov
xor
sbb
imul
dec
mov
bound
jg
mov
int3
pop
mov
jbe
out
mov
jg
(bad)
cmc
and
bound
adc
push
push
out
and
popf
mov
push
ret
xor
jno
(bad)
call
cmp
lds
ror
outs
iret
ror
outs
sub
ret
sbb
cdq
inc
clc
pop
mov
bound
scas
add
js
imul
cwde
cmp
rdmsr
imul
dec
fistp
xor
or
cmp
das
mul
inc
and
in
loop
js
sahf
inc
lds
xchg
xor
mov
call
mov
out
xchg
and
popf
adc
sbb
jb
xor
out
mov
dec
arpl
rcr
in
mov
mov
leave
pop
ds
jo
pop
out
pushf
pop
(bad)
jnp
mul
adc
in
jmp
mov
pop
push
xchg
and
jb
mov
adc
sahf
lods
mov
dec
loop
add
call
aam
movs
jo
xor
rcl
movs
and
xchg
test
in
test
adc
lds
push
gs
(bad)
out
dec
xor
pop
mov
ret
dec
retf
mov
aam
repnz
popf
aas
cld
add
xchg
jno
mov
(bad)
fsubp
call
push
in
mov
loop
jno
jl
pop
(bad)
pop
leave
inc
jl
add
repz
leave
dec
aaa
iret
sbb
pop
scas
xor
or
inc
mov
(bad)
lea
je
mov
add
inc
and
pop
shl
mov
or
mov
test
sbb
ins
or
mov
mov
ins
mov
out
hlt
mov
ja
push
mov
fs
sti
es
push
aaa
pop
out
sub
mov
fmul
pop
cmp
dec
enter
pop
fidivr
dec
or
cdq
in
imul
push
cmovp
mov
or
(bad)
sub
pop
or
ja
cmp
fs
add
mov
xchg
cmp
das
lds
adc
inc
outs
(bad)
xadd
mov
xchg
mov
sub
inc
fidivr
dec
xchg
mov
dec
fs
out
push
scas
inc
xor
mov
pop
cmp
fs
popf
cdq
xor
movs
mov
sbb
cwde
sub
stos
push
mov
adc
inc
sub
cdq
ds
retf
ja
loopne
jne
scas
cdq
hlt
icebp
mov
mov
div
ror
sbb
jg
mov
(bad)
sbb
faddp
fist
push
or
push
cmps
hlt
and
xchg
ret
sbb
adc
pop
scas
and
cmps
iret
xchg
xchg
jbe
pop
lods
retf
cld
mov
jle
cwde
fisubr
xchg
adc
idiv
cmp
and
jmp
in
pop
and
fstp
cmp
and
stc
xlat
in
push
fs
int
addr16
rcr
je
call
push
mov
test
mov
cmc
inc
ja
jne
fwait
cmp
dec
out
jmp
mov
aas
dec
mov
add
fstp
lods
mov
add
icebp
mov
mov
std
popa
pop
test
mov
cmp
cmc
jae
pop
adc
jmp
xor
or
(bad)
or
into
adc
gs
pop
shl
pop
pop
fiadd
and
push
pop
mov
mov
(bad)
test
mov
mov
jle
lock
lahf
mov
call
inc
outs
push
(bad)
retf
addr16
pop
dec
jp
inc
and
fidivr
mov
shl
sahf
sub
lock
dec
jno
les
jb
dec
and
mov
push
enter
adc
in
inc
sbb
mov
icebp
jo
adc
fs
mov
test
ins
pop
retf
sub
dec
leave
nop
mov
icebp
xor
test
mov
movs
fsubr
dec
sub
std
mov
mov
sysexit
icebp
push
dec
jecxz
mov
fisttp
mov
and
retf
movs
shl
and
loope
sub
sbb
sahf
je
jmp
call
icebp
sub
adc
xor
(bad)
retf
repz
or
mov
out
movs
(bad)
(bad)
jmp
sbb
dec
mov
call
pop
pop
mov
sbb
sbb
mov
aam
scas
jae
cmp
pop
aam
mov
sbb
jge
(bad)
mov
and
call
or
rol
mov
pop
int
rcl
lea
adc
pop
add
push
or
dec
rol
hlt
(bad)
jmp
mov
mov
push
cmps
xchg
arpl
lea
push
dec
fwait
ret
jne
inc
jecxz
clc
cmps
xchg
hlt
add
mov
(bad)
lea
iret
cdq
cmps
in
fwait
in
xchg
nop
(bad)
shl
mov
sar
repz
pop
mov
call
test
call
cmp
dec
jle
cmp
push
sub
daa
dec
fidiv
pop
loopne
adc
outs
(bad)
or
push
xor
pop
test
outs
fwait
or
jmp
mov
or
jo
adc
jmp
xchg
sbb
push
adc
popf
and
xchg
test
cli
xlat
in
retf
mov
jo
inc
mov
aam
lods
loopne
outs
movs
stc
sahf
clc
test
mov
xor
popw
fstp
xchg
popf
mov
jb
popf
adc
inc
lods
inc
fdiv
mov
jge
xor
push
or
dec
push
jbe
test
je
scas
or
sar
mov
push
inc
test
jg
add
pop
and
jno
sub
js
aam
mov
mov
imul
shr
out
mov
jns
repnz
pop
or
mov
cmc
imul
fimul
pop
nop
cmp
popf
sbb
mov
iret
cmp
in
jp
xchg
fisttp
mov
dec
int3
jae
ret
in
sub
xchg
cdq
xchg
adc
rcr
inc
(bad)
not
push
sar
out
pop
xor
jns
and
shr
jmp
popf
or
(bad)
mov
sahf
inc
icebp
dec
rcr
jbe
push
fstp
ins
test
inc
in
mov
or
mov
call
or
(bad)
std
mov
push
div
nop
jns
push
mov
mov
je
add
hlt
in
sub
popa
out
gs
sub
enter
ret
nop
xchg
xchg
data16
out
mov
pop
stos
sar
gs
push
or
dec
push
std
mov
clc
loop
mov
push
mov
dec
pop
xchg
cmp
fadd
mov
psraw
div
cmps
pop
mov
call
or
inc
and
inc
(bad)
(bad)
mov
neg
bound
ret
leave
ret
mov
cmp
ret
imul
aas
les
imul
mov
aas
test
cmp
mov
call
cld
push
push
(bad)
out
or
test
sub
or
push
test
dec
clc
js
jae
retf
shr
imul
sub
inc
mov
xor
(bad)
int
jne
imul
mov
shl
cmp
add
cld
stos
jne
les
mov
imul
imul
mov
sub
jo
push
ror
xor
xor
xor
inc
iret
jae
inc
dec
mov
push
rcl
dec
out
in
pusha
jmp
inc
and
dec
cmp
pop
repz
mov
mov
retf
or
leave
xor
imul
pop
jmp
mov
jbe
(bad)
cli
mov
sub
shl
mov
ins
xchg
lea
adc
xor
out
add
in
sar
mov
call
loope
imul
rcr
dec
sbb
repz
lock
hlt
cmp
mov
lods
xchg
xchg
nop
sbb
addr16
push
lock
frstor
(bad)
out
xchg
int3
clc
sbb
fs
shl
(bad)
xlat
imul
inc
imul
mov
addr16
stos
add
push
and
dec
in
test
loop
repz
pop
mov
pop
mov
test
ins
dec
sbb
lods
mov
lods
mov
in
cmp
mov
mov
push
(bad)
adc
xchg
ins
ffreep
(bad)
cmp
loop
adc
mov
xor
jbe
or
rcr
fidivr
add
push
cwde
shl
cwde
push
out
ret
ds
dec
add
(bad)
(bad)
daa
adc
mov
rol
rcl
aam
neg
mov
sahf
dec
add
popa
ficom
ins
cmp
fdiv
jle
cmp
xchg
xchg
aas
jmp
gs
mov
retf
pusha
push
sahf
leave
ret
add
test
pop
test
and
pop
imul
fdiv
into
fwait
jl
loop
vpsllw
mov
cli
div
in
dec
out
mov
std
test
loop
loopne
mov
mov
and
mov
mov
sub
das
mov
sahf
mov
out
dec
fild
push
adc
pusha
inc
ss
lods
leave
lahf
dec
adc
pushf
xor
jae
adc
mov
pop
(bad)
clc
adc
gs
xchg
push
sbb
push
test
pop
retf
inc
push
push
popf
xor
aaa
jns
ins
popf
push
mov
loope
(bad)
mov
ror
inc
pop
test
push
pop
int
aad
mov
sbb
inc
push
pusha
aad
retf
push
dec
fild
mov
mov
jnp
test
mov
leave
jb
xor
ins
shl
sbb
mov
fist
aas
sbb
jl
pop
and
xlat
test
fistp
(bad)
xor
cmp
clc
clc
pop
cmp
mov
add
xchg
arpl
inc
fs
sub
dec
xor
fistp
imul
sbb
(bad)
jp
aad
or
or
std
cmp
inc
test
enter
test
in
add
jecxz
sbb
mov
mov
xor
iret
mov
add
(bad)
pop
jge
sbb
in
bnd
push
cmp
add
dec
dec
fwait
data16
adc
hlt
pop
inc
popa
test
test
out
(bad)
cmp
sub
ins
or
sbb
test
xor
jb
or
xor
or
add
xchg
ins
and
mov
std
fcomp
jns
fcom
adc
cmp
pop
retf
les
leave
jmp
ins
leave
and
cmp
push
cwde
mov
adc
ror
stos
test
fld
test
data16
rol
add
call
sub
lods
xchg
mov
aad
sub
mov
scas
push
xor
mov
and
xchg
cmp
(bad)
data16
outs
test
es
adc
jmp
sub
push
sub
mov
(bad)
sub
and
jae
retf
xor
push
mov
jmp
add
mov
inc
daa
ss
dec
sub
into
push
cmp
cli
mov
mov
sbb
push
js
popf
xor
pop
jo
cmp
call
popf
xor
sub
and
cmp
test
lods
dec
mov
cmp
push
xchg
out
int
and
sub
pop
imul
loope
scas
pop
or
push
sahf
pop
xor
loope
pop
ret
jl
dec
call
aaa
(bad)
sub
ret
aam
jge
outs
adc
loopne
push
sti
jnp
je
inc
(bad)
leave
cmps
clc
out
stos
test
adc
sub
or
nop
xchg
popa
mov
bound
into
(bad)
or
sbb
repnz
ja
xor
mov
das
cmp
fisub
mov
mov
add
clc
ficomp
out
or
cld
out
or
mov
mov
jp
popf
into
into
pop
jb
nop
push
enter
add
xchg
mov
mov
lahf
and
inc
hlt
and
push
pop
sub
cwde
out
jno
cmp
pop
add
dec
jo
loopne
adc
or
out
int
jnp
test
loope
sbb
in
jne
cmp
jmp
push
add
sub
push
jle
ficomp
iret
fild
jb
dec
xlat
push
push
enter
scas
ja
pushf
int3
sbb
cmp
pop
jnp
movs
and
mov
movs
cmp
into
mov
out
push
sbb
push
into
jmp
push
sub
mov
aad
scas
mov
data16
jge
or
shl
mov
xchg
into
inc
push
je
mov
pop
xchg
pop
stos
sub
sub
cmp
sub
dec
cmp
rcl
add
adc
add
nop
sbb
loopne
stc
outs
leave
mov
or
push
fild
test
add
popa
lahf
int
mov
shl
clc
ss
outs
cld
psllq
ret
in
mov
(bad)
mov
test
mov
pop
inc
pop
jge
imul
fwait
mov
repz
xlat
jecxz
xor
int
ds
mov
arpl
je
and
data16
or
mov
xchg
pop
sbb
jg
in
pop
mov
cmp
sub
gs
xchg
sbb
xchg
sub
pop
js
dec
mov
add
(bad)
adc
adc
stos
les
lock
xlat
xlat
and
cmp
fiadd
or
in
jne
mov
adc
xchg
sub
lds
sub
pop
data16
aaa
nop
mov
mov
retf
add
repnz
sbb
mov
pop
out
mov
mov
mov
fbstp
ret
sbb
mov
retf
and
and
dec
push
sbb
ror
add
jmp
cmp
je
test
repz
jp
jmp
cmp
dec
and
inc
icebp
cmp
iret
push
mov
inc
mov
pop
xor
sbb
fimul
pusha
int
sub
xlat
call
sbb
jg
sub
test
xlat
cmp
call
neg
ror
loope
aaa
fs
mov
and
mov
cli
xor
nop
in
rdtsc
(bad)
fld
or
inc
mov
inc
addr16
int
cli
iret
loop
shr
adc
pop
mov
push
inc
sbb
inc
adc
or
sub
out
and
dec
enter
xchg
(bad)
(bad)
fsub
adc
stos
mov
fnstcw
sbb
mov
test
in
sbb
inc
pop
int3
and
xchg
mov
xchg
pop
add
ds
inc
stos
xchg
jmp
pandn
in
push
and
mov
sbb
jmp
adc
adc
xor
out
push
dec
xor
jp
jmp
cld
add
add
shr
pop
xchg
retf
shr
cmp
cdq
(bad)
and
inc
sbb
adc
sbb
ret
cmp
out
(bad)
mov
sar
cmc
mov
sar
fs
jno
jno
mov
ss
push
mov
(bad)
jmp
gs
ins
mov
mov
out
loop
hlt
or
or
jp
pop
inc
pop
push
dec
int3
inc
or
add
xchg
or
add
jmp
xlat
fdivrp
xor
pop
cwde
lods
stos
aam
ja
test
push
pop
pop
aad
pop
test
pop
or
in
add
scas
mov
std
hlt
mov
clc
dec
push
stos
std
adc
out
adc
mov
(bad)
cmp
sub
out
pusha
inc
cmps
dec
pop
enter
in
cmp
pop
mov
and
repz
ins
sbb
jne
cdq
aaa
push
cli
jg
adc
scas
mov
fidivr
mov
adc
icebp
inc
sbb
dec
sbb
add
sub
add
push
push
cmp
pop
into
es
cmp
enter
jge
mov
mov
shr
scas
jmp
and
std
jo
daa
dec
xchg
enter
push
push
push
iret
xchg
mov
add
cmp
out
sbb
and
cmc
jnp
pop
mov
imul
popa
ss
push
ins
jmp
clc
pusha
sar
jg
cmc
jns
xchg
ror
outs
js
and
inc
adc
and
sub
or
retf
popf
mov
test
inc
fmul
ins
es
mov
ret
jb
scas
cmp
xor
loope
dec
mov
mov
les
inc
dec
push
cmps
and
mov
popa
lods
ficom
sub
test
icebp
das
call
xor
cmps
scas
push
pop
scas
adc
in
fistp
add
popf
or
icebp
(bad)
adc
mov
sbb
cmpxchg
popf
and
aaa
repnz
daa
in
cld
and
mov
shl
jno
(bad)
mov
or
push
call
in
arpl
int3
mov
movs
pop
lds
pop
(bad)
or
push
popf
shl
cdq
push
addr16
ins
sub
adc
adc
jnp
adc
jno
out
in
(bad)
std
pop
into
ror
or
or
aam
sbb
jb
ror
push
sahf
retf
pop
mov
xchg
dec
pop
xchg
mov
or
push
fcmovnb
jne
sbb
mov
ss
icebp
push
mov
int
and
ja
pop
pop
add
fimul
lahf
add
dec
div
xchg
(bad)
jmp
xor
addr16
lea
shr
mov
loopne
pmaxub
adc
adc
xchg
neg
jnp
add
shl
jo
out
and
addr16
push
mov
xor
xor
enter
mov
lods
fcom
mov
out
call
push
movs
ja
sbb
fbld
lods
or
nop
push
(bad)
xor
pop
mov
mov
cs
add
in
jl
xor
inc
mov
adc
jne
fwait
movs
sub
cmp
retf
mov
mov
popf
cli
mov
xchg
or
fsub
jne
(bad)
daa
add
dec
ret
ret
push
adc
iret
pop
adc
out
das
adc
mov
mov
mov
icebp
mov
or
mov
push
and
retf
arpl
add
stos
mov
jo
jns
and
xchg
mov
in
inc
shl
xchg
jo
or
jbe
cmc
pusha
pop
mov
les
arpl
loop
jmp
mov
jp
xchg
xchg
adc
cwde
fwait
movs
jno
fs
test
sar
fst
stc
dec
cmps
add
lods
mov
adc
sbb
dec
movs
pop
dec
int3
ss
gs
xor
sbb
mov
or
pop
ss
hlt
adc
xchg
sub
xor
and
jl
lahf
repz
pop
int
add
sar
push
or
movs
in
or
add
xchg
rol
call
mov
(bad)
fcmovnu
mov
mov
mov
xor
daa
jmp
retf
pop
sbb
mov
je
inc
vpmacsww
push
cmp
push
jge
dec
mov
mov
(bad)
leave
sar
push
inc
mov
sbb
xchg
aas
mov
pop
ins
repz
and
les
or
es
into
add
sar
mov
hlt
nop
stc
mov
xchg
jmp
mov
int
pop
jns
fcmove
(bad)
sbb
push
shl
mov
mov
(bad)
out
or
and
(bad)
sbb
fild
ret
cmp
shl
cmp
xor
lods
xchg
or
lea
and
popf
fmul
nop
dec
xchg
mov
sbb
push
(bad)
cmp
cdq
popf
sbb
pop
arpl
cmp
in
xchg
adc
pop
inc
pusha
cs
cdq
push
iret
mov
sub
mov
bound
(bad)
mov
adc
xchg
jns
test
loop
inc
push
cmp
test
jnp
sbb
imul
sbb
icebp
cmp
jp
pop
(bad)
aam
ins
repnz
push
(bad)
and
into
push
call
adc
push
pushf
lds
push
out
push
jle
push
cmps
xchg
loope
shr
cmp
jecxz
scas
or
lods
mov
das
bound
js
sub
aad
sub
rcl
push
inc
add
shl
or
call
or
push
lahf
pop
fistp
out
clc
dec
arpl
or
inc
mov
bound
jge
jns
call
icebp
xor
cmc
loope
dec
mov
out
cmc
pushf
cmps
lods
mov
push
sbb
out
loope
sub
in
inc
loope
ffree
jbe
loopne
sub
pop
sub
push
mov
aas
or
pusha
in
mul
stos
pop
jmp
lods
call
aas
int3
(bad)
and
mov
jp
mov
sub
sub
scas
std
mov
sbb
sbb
jno
cmp
call
or
aaa
ins
jb
mov
iretw
push
daa
sbb
sub
dec
loope
xor
pop
fcom
dec
inc
sub
mov
ror
in
int
(bad)
(bad)
xchg
adc
push
inc
aam
cmc
call
sub
pop
push
mov
or
call
inc
outs
dec
inc
repnz
es
outs
stos
pop
xchg
shr
nop
mov
cmp
or
mov
inc
push
enter
div
rcl
push
mov
or
repz
or
movs
pxor
or
add
pop
test
mov
mov
xor
(bad)
mov
add
sub
(bad)
ins
das
imul
add
icebp
daa
mov
jne
fwait
push
loop
addr16
aaa
aaa
popa
push
ins
into
out
mov
scas
mov
popa
daa
or
xchg
sub
leave
cli
lods
fistp
or
jle
add
xor
out
ins
imul
call
mov
out
fdivp
imul
jmp
or
dec
xchg
and
jecxz
jecxz
sub
add
ret
xchg
movs
or
mov
pop
por
rcr
and
xor
pop
xor
(bad)
jecxz
sub
xchg
in
sbb
daa
cmps
jns
sub
inc
aad
ficomp
mov
les
aad
and
js
outs
pop
dec
xchg
push
fnsave
test
test
lods
sub
mov
test
sub
retf
loopne
xchg
add
in
xor
mov
stos
mov
adc
cwde
dec
xor
test
ins
add
cmp
fld
ror
pop
sub
mov
scas
lods
jnp
shr
sub
push
retfw
jle
xchg
sbb
(bad)
ins
test
stos
leave
inc
xor
mov
mov
pop
mov
ficomp
jge
adc
cmp
out
daa
mov
or
mov
sub
std
push
jmp
rol
xchg
dec
mov
sbb
iret
idiv
xchg
hlt
int3
(bad)
in
(bad)
push
sbb
cmp
dec
add
sub
imul
ins
sbb
lds
pop
(bad)
js
dec
scas
outs
aas
pop
cmp
icebp
xor
pop
xchg
xor
(bad)
cwde
sub
push
inc
mov
test
ds
mov
mov
mov
push
jmp
push
lea
push
push
or
mov
pop
test
std
mov
sbb
(bad)
cmc
dec
(bad)
(bad)
ja
push
adc
(bad)
call
enter
test
adc
jno
fwait
inc
out
js
push
lock
data16
pushf
adc
push
dec
popa
add
into
clc
popa
cmp
aam
aad
mov
and
test
push
lock
mov
and
(bad)
js
mov
loop
mov
mov
pop
push
mov
lock
xchg
sub
jae
dec
dec
iret
mov
pop
jmp
adc
pop
call
std
lods
lods
cmps
push
ret
mov
dec
sub
ror
aaa
shl
jae
es
aas
out
and
ja
icebp
mov
out
popf
xchg
dec
or
mov
cwde
fwait
bound
fidiv
lock
fidivr
xor
dec
cmp
test
jmp
inc
lock
int
popf
loopne
mov
hlt
stos
sub
bound
dec
nop
div
xor
add
push
cmps
mov
cs
mov
test
movs
or
mov
jl
dec
xor
and
out
or
adc
adc
ins
add
adc
adc
into
push
fsubr
outs
(bad)
std
mov
sahf
adc
pop
fidiv
je
mov
xchg
dec
or
or
xchg
mov
pop
inc
imul
mov
gs
mov
pop
jle
pop
pop
call
and
outs
(bad)
push
jo
adc
push
aas
and
ds
sub
pop
sbb
cs
pop
daa
ja
imul
and
gs
sbb
test
ret
or
arpl
pop
mov
dec
std
outs
jge
(bad)
push
adc
lock
ror
pop
out
loope
mov
xor
jmp
mov
clc
xchg
and
sar
xchg
lahf
imul
retf
stos
leave
sbb
dec
xchg
ret
cmp
(bad)
in
push
daa
or
pop
inc
rcr
sub
lods
lds
mov
push
lds
pop
xor
ror
outs
push
enter
xor
sub
ret
push
test
ds
add
sub
addr16
movs
test
clc
mov
push
lahf
aas
jmp
shr
mov
xchg
in
neg
sub
inc
jle
xchg
or
cmps
inc
movs
mov
rcl
or
push
add
imul
fcomip
sub
jg
clc
push
mov
test
jmp
enter
pushf
inc
sub
cmovnp
inc
repnz
fcom
lock
fisubr
es
and
ret
mov
pop
int3
aaa
aaa
lahf
xor
les
add
sar
repnz
inc
scas
and
ror
pop
xchg
adc
cmp
in
or
gs
cpuid
fld
cmp
push
xchg
or
stos
stc
dec
mov
rol
fisttp
inc
out
dec
jmp
sub
fs
mov
jmp
not
adc
stc
dec
cmp
pop
jp
icebp
xor
ins
daa
idiv
addr16
jge
test
mov
sub
loopne
retf
ds
xor
fistp
stos
xchg
(bad)
test
dec
in
scas
js
adc
sbb
lea
(bad)
jge
jb
cmp
fs
xor
fnstenv
inc
icebp
xor
pop
sub
push
ins
push
mov
idiv
test
push
sub
outs
(bad)
push
cmp
rcl
dec
dec
gs
les
stos
fld
pop
fist
(bad)
(bad)
or
or
inc
mov
stc
sbb
jl
shl
retf
push
aas
sbb
mov
or
push
mov
in
in
addr16
les
mov
pop
call
movs
int3
ins
sbb
push
addr16
pop
sti
in
jne
sar
ins
lahf
out
jns
pop
in
out
mov
jnp
jb
add
jl
and
inc
jne
pop
scas
adc
ret
jmp
pusha
push
mov
jle
jl
fisub
clc
push
push
mov
sub
mov
adc
stos
(bad)
pop
and
mov
sub
shr
aaa
jnp
shr
add
into
fld
outs
cmp
leave
xlat
(bad)
ss
jb
shr
push
pop
xlat
fiadd
push
out
jp
inc
add
mov
faddp
test
call
rcl
mov
xor
ret
or
mov
mul
adc
dec
imul
jecxz
adc
and
push
inc
enter
sub
aam
pop
fidiv
in
(bad)
mov
in
gs
outs
pop
sbb
pop
fisttp
cmc
pop
mov
stos
lods
or
push
xchg
shr
xor
sub
test
jl
(bad)
add
xchg
xchg
pop
daa
jp
movs
fisub
cmp
cmc
add
jmp
pop
xor
call
(bad)
xor
mov
test
js
movs
test
jbe
dec
cmp
push
ds
rcr
xchg
(bad)
mov
and
mov
jnp
xor
sahf
popf
mov
aas
cmp
or
imul
add
mov
push
mov
push
push
(bad)
leave
and
mov
leave
sub
rol
fsubr
pop
xchg
jbe
into
add
jbe
add
sub
push
jae
xchg
dec
pop
sub
repz
rol
add
xchg
js
sahf
call
pop
dec
mov
daa
xor
mov
or
xchg
fnsave
dec
pop
push
mov
ficom
sbb
fucomip
inc
xchg
adc
imul
je
repz
pop
sahf
xchg
xor
and
dec
(bad)
out
lea
jecxz
add
arpl
push
pop
repnz
jnp
cmp
mov
nop
je
mov
or
xchg
fadd
add
popa
ins
mov
shl
pop
push
mov
std
mov
xor
test
pop
loope
les
dec
scas
push
int3
das
pop
and
inc
rcr
cld
lahf
mov
pop
data16
adc
es
mov
fucomi
and
pop
loopne
adc
hlt
ja
in
fbld
push
mov
push
rol
push
adc
mov
cmc
and
dec
jg
out
jmp
nop
test
and
jbe
jae
pusha
cwde
shl
xchg
add
lods
movs
leave
pop
inc
aad
dec
dec
(bad)
les
jae
push
fimul
and
mov
cmp
and
xchg
es
mov
sbb
stc
and
sti
out
jle
jne
sub
and
pop
jecxz
jp
mov
cmp
push
sbb
push
stc
adc
out
lods
push
xchg
mov
sbb
int3
stc
sub
addr16
fwait
lock
call
jo
cmp
add
jmp
dec
loop
not
and
ins
mov
(bad)
dec
das
xor
dec
je
popa
data16
add
sub
cmp
xchg
idiv
xchg
ror
sbb
or
bound
xchg
and
mov
test
or
mov
fisttp
popf
scas
dec
push
xchg
push
or
pop
retf
sbb
pop
loop
and
jle
movs
and
cwde
mov
lods
sub
lea
sub
pop
jg
mov
cld
xchg
sbb
fnstcw
push
push
push
jno
inc
cdq
xor
xor
enter
ja
lock
ins
sub
and
ret
and
sub
mov
xchg
push
add
mov
push
loope
mov
dec
sub
shr
fisubr
sub
sbb
sub
and
inc
sbb
jo
jbe
aad
inc
adc
jl
loope
adc
shl
or
cmc
mov
je
add
popa
and
mov
and
icebp
shl
call
cdq
pop
in
adc
cmp
or
sbb
data16
(bad)
cli
rcl
jl
mov
lods
xor
mov
or
outs
mov
pop
or
arpl
pop
ds
pop
nop
ror
jb
adc
ins
jae
je
add
inc
add
push
xchg
jnp
hlt
dec
sub
cmp
inc
add
loopne
pop
and
add
jns
leave
in
sbb
(bad)
ss
xor
cwde
int
loopne
cdq
mov
xlat
fnsave
and
sbb
cdq
mov
fwait
(bad)
jmp
sub
test
aam
sar
pop
lahf
xor
into
lods
stos
call
mov
or
into
mov
mov
leave
or
adc
ja
aad
pusha
es
adc
fcmovu
jo
clc
div
dec
push
cmp
test
retf
jmp
clc
pop
xor
inc
push
arpl
mov
(bad)
pop
ins
(bad)
add
jmp
iret
imul
fst
mov
push
daa
mov
inc
mov
mov
inc
addr16
add
xchg
add
stos
int
sub
mov
mov
scas
push
dec
and
sbb
fild
cmc
popa
sti
push
push
pop
pop
shl
push
fucomip
jle
ror
addr16
out
cmp
xor
jo
add
jecxz
in
outs
je
inc
clc
pop
in
sti
out
ficom
sbb
pop
loopne
test
lds
sbb
mov
retf
add
push
cmp
jae
add
fbstp
cld
jns
cmps
push
push
push
mov
in
js
movs
imul
and
fs
pop
mov
add
sub
(bad)
pop
dec
sti
test
or
pop
cli
call
enter
pop
std
aas
cs
xchg
test
test
push
fwait
xor
test
mov
sub
movs
outs
test
in
jns
sbb
sbb
sub
inc
push
in
xor
retf
pusha
push
inc
mov
(bad)
jmp
sub
movs
xchg
sub
cwde
add
inc
stos
(bad)
adc
outs
in
gs
cli
mov
sahf
shr
cmp
in
les
push
jle
adc
mov
xchg
retf
xchg
loope
and
push
or
push
push
jmp
sub
mov
in
cmps
add
nop
cmp
nop
imul
fistp
jbe
pop
dec
cmps
sbb
into
or
jp
xlat
jns
sahf
mov
cli
loope
push
cmc
sbb
push
mov
cmps
movs
sub
lahf
xchg
jecxz
mov
mov
ss
mov
pop
inc
retf
dec
push
sbb
or
std
xchg
mov
fisub
mov
mov
(bad)
fwait
dec
iret
push
inc
fwait
xor
sbb
xor
inc
add
loop
arpl
call
add
mov
pop
sub
mov
repz
aas
dec
(bad)
fadd
(bad)
mov
jae
pop
scas
fist
outs
popf
sti
fnstenv
sar
lock
bound
lea
imul
aas
es
xor
stos
dec
or
sar
loope
je
btr
sub
pop
(bad)
xchg
gs
je
dec
cwde
repz
cmp
cmc
jmp
ror
sub
mov
jbe
add
scas
int
jmp
cmps
std
cmp
ins
xor
mov
mov
das
push
pop
jns
add
cmp
fucom
sub
mov
(bad)
xlat
adc
int3
fwait
test
aaa
xchg
inc
shl
loopne
cmps
int
and
and
mov
in
sti
aas
jge
scas
(bad)
(bad)
(bad)
enter
test
fwait
div
sti
into
adc
mov
xchg
(bad)
aam
pop
xlat
mov
popfw
sti
push
xor
dec
(bad)
push
xchg
hlt
les
dec
cmp
gs
mov
mov
(bad)
jo
mov
xchg
sub
(bad)
mov
enter
mov
fsub
mov
pusha
mov
add
or
jle
lea
jno
mov
popf
stos
aad
fucom
clc
sub
cs
in
sar
mov
hlt
cmp
fnsave
aam
pop
mov
pop
push
rcl
loopne
cmp
sti
fistp
adc
mov
add
je
dec
stos
shl
inc
rcr
push
xchg
(bad)
icebp
dec
frstor
sar
xor
jl
push
clc
aam
pop
cmps
sbb
test
(bad)
fdiv
adc
pop
add
ins
adc
sbb
jle
pop
rol
xor
cmp
push
fdiv
xor
pop
cwde
push
fild
fsubr
add
and
ret
push
sub
push
jp
jge
imul
stc
pop
ins
out
clc
or
xchg
jns
(bad)
aam
outs
aaa
aaa
pop
bswap
adc
add
call
adc
sub
fidivr
xchg
sbb
pop
mov
dec
lds
adc
pop
add
adc
pop
jmp
or
jge
imul
loope
jecxz
hlt
int
test
ins
fistp
pop
xchg
and
test
and
push
xchg
xor
mov
repnz
fst
addr16
mov
scas
sub
js
cmp
leave
cdq
push
push
in
fcomip
scas
rcr
or
push
retf
add
inc
sub
add
push
repnz
xor
(bad)
in
imul
xor
mov
ss
out
pop
outs
mov
and
call
pop
jmp
push
fadd
stc
jns
jle
test
stos
es
aas
mov
gs
mov
jge
fwait
movs
xchg
add
(bad)
push
fimul
add
stc
aaa
movs
jmp
pop
das
loopne
adc
pop
push
inc
xor
stos
cs
jmp
mov
sbb
outs
int3
sbb
int
(bad)
out
pop
or
outs
fild
fisub
ror
and
adc
out
sub
jge
fadd
xor
scas
pop
shl
push
jmp
mov
(bad)
dec
cs
or
call
imul
cmp
xchg
dec
pushf
test
jns
mov
pop
retf
sub
out
cmps
add
cmp
rcl
jg
push
jb
fwait
cld
push
pushf
or
push
int
shl
pop
fcomi
and
ins
push
sahf
mov
and
jbe
imul
imul
jne
loope
ins
outs
jno
or
cmps
repnz
xor
mov
add
shl
xor
test
push
inc
dec
addr16
jp
push
cmp
add
fwait
push
add
xor
pop
sbb
sbb
cmp
fcom
push
retf
jle
mov
and
sub
inc
retf
pop
push
mov
(bad)
loopne
xor
cdq
movs
xor
and
add
cmp
push
leave
es
dec
mov
ins
or
sbb
dec
rol
loope
push
adc
leave
hlt
call
push
scas
inc
fwait
outs
jb
xchg
bound
and
sub
stos
lods
outs
inc
pusha
ret
add
fs
not
add
xchg
adc
call
mov
jecxz
push
jae
retf
add
jl
in
mov
xchg
add
sbb
dec
scas
leave
jmp
aaa
ret
or
in
xlat
or
(bad)
stos
pusha
(bad)
xchg
aas
push
mov
mov
lock
adc
pop
and
fnstcw
inc
(bad)
mov
mov
dec
retf
sbb
xor
aam
sub
jo
aas
cmp
pop
sbb
push
dec
and
xchg
icebp
and
sbb
iret
fcmovne
pusha
jg
inc
inc
cmps
jns
aam
push
fs
sub
cmps
ds
dec
cs
push
push
ret
lds
idiv
scas
adc
mov
hlt
and
ja
int
push
mov
ror
pop
add
scas
pop
xchg
mov
nop
lahf
xor
jecxz
aas
and
iret
stos
fsub
pop
cli
mov
cmc
addr16
mov
mov
test
xor
icebp
sub
mov
scas
sbb
xor
ins
cld
rcr
aad
addr16
dec
es
inc
call
fadd
or
loope
dec
cmps
aam
ret
inc
mov
jmp
imul
div
pop
pop
xchg
(bad)
hlt
retf
icebp
sub
(bad)
ret
out
and
imul
ficom
dec
cmp
inc
cmps
adc
and
pop
(bad)
mov
cwde
ror
cmp
lock
mov
adc
sub
sub
lds
sub
push
arpl
and
mov
ins
cmp
cld
jmp
js
pop
cmp
lahf
cmp
or
mov
arpl
adc
jno
pop
xchg
and
jmp
outs
jl
or
mov
out
xor
ss
dec
stc
popf
and
stc
ds
sub
daa
jmp
mov
out
adc
lock
adc
fadd
sar
movs
es
jb
call
sti
cmp
mov
cmp
xor
jo
in
int3
cmps
shl
cmp
ins
scas
dec
call
add
inc
xchg
lock
sbb
xlat
jo
or
mov
push
into
shl
pop
cwde
or
push
mov
scas
dec
push
out
data16
xor
adc
fild
adc
int
sub
iret
adc
aad
retf
add
xlat
xchg
mov
mov
cmps
jae
push
ja
rol
cli
jl
jnp
xchg
or
push
mov
ins
mov
cmp
sub
inc
pop
and
nop
call
cmp
adc
loopne
mov
pop
stos
popa
shl
xchg
or
or
arpl
je
dec
jecxz
cdq
call
sbb
xor
dec
popa
add
pop
cmp
mov
add
inc
les
lods
pop
fist
pop
xlat
cmps
outs
mov
fist
(bad)
call
pusha
adc
push
leave
mul
into
dec
jmp
sbb
fnstsw
mov
or
jo
xor
popf
(bad)
push
pushf
mov
out
imul
mov
cmc
pop
aam
mov
icebp
ret
out
dec
lock
or
in
(bad)
cld
mov
lods
mov
or
and
cmp
pop
pop
mov
xchg
mov
mov
xor
imul
mov
inc
(bad)
enter
aam
mov
cld
in
and
xchg
push
push
xchg
stos
aad
icebp
dec
jle
in
or
scas
arpl
lock
cmp
popf
or
stc
pop
mov
dec
mov
nop
cmp
xor
retf
into
mov
ret
imul
mov
pop
add
jo
leave
xor
pop
push
jg
inc
cmp
cdq
into
or
adc
imul
bound
lahf
icebp
jb
in
cwde
das
xchg
fcom
lods
pop
adc
jecxz
or
js
(bad)
cmp
mov
push
and
imul
sub
mov
fs
cmc
push
push
cmps
push
mov
or
dec
call
out
popa
shl
rol
adc
sub
or
(bad)
aad
enter
xchg
repz
inc
add
jl
int3
pop
fiadd
in
mov
imul
scas
or
shl
adc
lods
imul
rcr
add
adc
into
cmps
dec
clc
jmp
xor
shr
cmp
stos
in
popa
pop
or
loop
stos
into
and
mov
sub
push
cmp
mov
xchg
inc
rcl
jne
xor
movs
push
leave
lods
mov
shr
test
shl
out
nop
push
rcl
scas
outs
push
test
sbb
es
push
dec
sti
adc
jno
or
cs
out
push
sbb
pop
fucom
in
outs
cli
daa
ja
(bad)
shl
fldenv
stos
xchg
sbb
sub
mov
push
or
sbb
fnstenv
xor
mov
mov
push
fwait
xchg
imul
out
inc
iret
sub
mov
(bad)
jb
jecxz
ss
arpl
call
pop
jecxz
arpl
fdivr
retf
fistp
or
pop
fldcw
fsubr
or
push
jo
ret
(bad)
xlat
mov
lock
into
and
push
aas
jae
push
fsubp
mov
nop
push
call
jmp
leave
or
ss
in
fldpi
js
add
mov
mov
xchg
gs
mov
jecxz
mov
adc
cwde
daa
sbb
sub
xchg
xor
dec
fyl2xp1
adc
idiv
or
mov
inc
(bad)
fucomp
aas
out
jno
xchg
cwde
adc
jo
add
aad
dec
jmp
mov
mov
inc
cmps
gs
sbb
mov
dec
mov
ins
inc
jmp
fisub
inc
(bad)
sti
repnz
inc
jp
add
inc
or
jb
xor
inc
shl
pop
lahf
push
fsub
add
nop
std
test
pop
inc
movs
mov
leave
add
sub
int3
xchg
jae
loopne
loop
mov
jns
and
ins
outs
and
xlat
sbb
pop
lds
jno
cli
ds
fimul
and
gs
pop
add
popf
aam
adc
push
int
mov
mov
loopne
imul
inc
ret
mov
stos
aas
stc
mov
xchg
adc
jae
jp
mov
imul
cmp
add
mov
js
aam
cmc
jbe
xor
mov
or
scas
das
hlt
jp
les
retf
jmp
repz
int
dec
add
or
jecxz
ins
adc
out
cld
push
inc
mov
call
sub
xchg
(bad)
cmp
(bad)
or
pop
pop
jl
(bad)
loop
leave
pop
das
int3
icebp
fist
push
lods
inc
sahf
or
lods
popa
call
pop
aam
mov
sbb
ins
xor
add
dec
and
fidivr
jecxz
and
jp
cmps
dec
xchg
out
mov
mov
dec
out
adc
adc
sbb
test
dec
pop
jge
mov
jns
jae
ds
jmp
data16
stos
sbb
test
or
push
shr
jno
jb
outs
stos
sahf
(bad)
out
retf
mov
push
je
cdq
ret
mov
and
jns
aad
hlt
mov
ja
sbb
stos
std
jmp
imul
cmp
adc
pop
mov
cmp
fbld
jns
fisttp
xor
cmc
pop
jecxz
loop
mov
(bad)
cli
das
cmps
add
push
mov
mov
loop
sbb
shl
mov
and
in
cmps
push
xor
sar
or
in
xor
nop
jl
inc
mov
cmps
les
sub
leavew
ret
mov
idiv
aam
ins
(bad)
mov
jp
and
mov
pushf
fnsave
jp
test
lea
data16
pop
push
cs
push
(bad)
cs
aad
xchg
clc
or
hlt
push
dec
jb
xor
out
jno
leave
mov
je
loopne
cs
mov
sub
js
mov
lea
inc
and
mov
aaa
sub
mov
inc
jge
cs
inc
xchg
lock
xchg
dec
and
mov
stos
pop
jbe
test
(bad)
adc
mov
bound
xor
scas
xor
cmps
push
addr16
movs
mov
inc
mov
and
push
and
mov
or
aas
ret
cmps
inc
inc
ffreep
or
mov
jne
cmp
fiadd
sti
movs
xchg
nop
xor
cwde
aam
cmp
xchg
aas
daa
mov
jge
mov
fcmovu
xchg
or
(bad)
jmp
into
or
sub
pop
pop
jp
aam
nop
and
loopne
mov
imul
lahf
and
pop
jo
push
and
pop
hlt
neg
adc
mov
jb
pop
ror
jmp
mov
test
js
pusha
jne
push
push
add
repnz
arpl
push
inc
in
into
icebp
dec
add
cmp
lods
or
pusha
loopne
jle
cmp
adc
and
jne
inc
lds
test
mov
outs
test
repz
das
cld
jg
test
cmps
xchg
and
jmp
loopne
push
add
out
cld
(bad)
cmp
adc
in
and
test
push
cmp
cmp
xor
aad
push
(bad)
fisttp
mov
adc
inc
inc
jae
arpl
jae
jne
repz
(bad)
sub
mov
call
pop
jmp
rol
adc
popa
retf
dec
test
std
data16
xchg
pop
pop
lea
inc
stos
dec
retf
dec
in
add
leave
ror
mov
popa
shr
dec
jle
dec
xchg
xor
cmp
mov
(bad)
xor
dec
test
inc
sub
push
imul
es
pop
xchg
push
inc
ins
mov
pop
add
shl
test
mov
xchg
popa
mov
pop
jge
cmp
and
mov
mov
pop
mov
sbb
repz
adc
mov
stos
pop
adc
inc
ror
fistp
mov
inc
aaa
or
test
sbb
fs
movs
call
leave
mov
inc
lods
fldcw
ds
jae
cmp
fisubr
retf
sub
sahf
mov
xchg
rcr
pop
(bad)
or
repnz
jo
sub
pop
xor
xchg
test
cmp
cmp
jp
mov
lds
xor
movs
pop
mov
push
test
sar
in
add
push
aad
lahf
pop
retf
jno
repnz
(bad)
or
jp
inc
lahf
jnp
adc
and
push
fwait
out
(bad)
jmp
ins
(bad)
jmp
pop
pop
test
mov
xchg
pop
push
ficom
cmp
or
mov
jb
out
push
jne
cmc
jnp
icebp
cmp
int3
icebp
pop
dec
cmp
jbe
push
xor
xor
xchg
inc
int3
jecxz
mov
scas
inc
dec
les
lods
std
push
mov
fcomp
add
pop
ficomp
pop
test
dec
out
xchg
sbb
int
xor
cmp
mov
fldpi
cmp
xchg
or
mov
retf
aaa
inc
dec
or
add
imul
xchg
repz
in
mov
repz
cmp
dec
pop
fst
jmp
sub
popa
lock
bound
bound
popf
mov
fwait
stos
dec
jbe
inc
pushf
(bad)
shl
stc
fwait
add
push
push
retf
fld
sahf
iret
movs
sbb
loope
mov
lock
scas
test
stos
sti
cli
sahf
inc
jecxz
ficomp
and
stos
ss
(bad)
adc
dec
mov
sbb
cmp
xchg
inc
pusha
adc
imul
jb
cmovae
mov
xchg
cdq
add
repz
add
ins
xor
mov
mov
data16
sbb
int3
nop
in
push
hlt
inc
movs
dec
repnz
cld
dec
xor
(bad)
xchg
cmp
pop
cmpps
sahf
jne
mov
loopne
(bad)
ja
arpl
ds
fldpi
std
xor
aam
das
mov
inc
dec
pop
jmp
arpl
dec
dec
push
cmp
mov
mov
sahf
xchg
add
imul
dec
sub
fistp
cdq
dec
mov
dec
mov
pop
add
xor
xchg
mov
cwde
add
xchg
std
clc
xchg
xchg
xchg
mov
xchg
pminsw
pop
mov
push
xor
sbb
push
hlt
gs
inc
xchg
call
and
xlat
rcl
mov
lock
js
dec
xchg
sbb
in
fmul
je
call
cwde
sub
shr
pop
test
ror
data16
iret
adc
int
jns
rcr
and
mov
inc
test
add
ret
cwde
les
cmc
mov
(bad)
shl
jmp
idiv
or
ja
add
mov
rcr
and
jno
(bad)
adc
pop
mov
out
xchg
adc
sbb
push
stc
(bad)
pop
jp
mov
rol
(bad)
pop
jbe
movs
sbb
add
test
mov
jo
dec
shl
in
add
jg
pop
aad
adc
sahf
or
jno
das
or
stos
retf
aam
jb
or
setae
inc
call
fild
sub
xchg
pop
cmp
call
adc
mov
pop
push
inc
inc
adc
aam
idiv
dec
cli
or
and
mulps
cmp
inc
jo
in
cmp
outs
repnz
mov
adc
in
cmp
repnz
je
fs
jae
movs
and
push
mov
ins
(bad)
pusha
iret
mov
loop
pop
cmp
xchg
(bad)
xchg
stos
lods
sub
jne
add
test
daa
push
xor
ss
hlt
xchg
push
pop
xchg
pop
mov
jb
adc
push
lea
dec
jle
mov
cmp
xchg
and
cmp
loopne
jg
cmp
jo
(bad)
push
into
loope
ror
inc
or
cs
ret
jmp
mov
retf
xor
xlat
xchg
or
call
xchg
adc
dec
inc
lea
mov
dec
or
imul
rol
mov
sahf
jns
in
sub
fisubr
or
enter
div
sub
mov
push
xchg
xchg
out
scas
or
pop
loope
jb
clc
jns
outs
shr
adc
jmp
xchg
popa
mov
dec
push
pop
inc
dec
in
adc
cmps
dec
loopne
dec
pop
inc
stos
jo
xchg
mov
jne
scas
mov
inc
stc
xchg
cmp
add
repz
inc
push
daa
pop
inc
aaa
or
in
jb
push
jl
mov
cmps
cmp
push
push
arpl
or
or
push
(bad)
or
mov
sub
adc
loop
bound
dec
push
push
xchg
mov
adc
and
sbb
cmp
xor
mov
out
xor
call
jae
rcl
scas
push
adc
pop
inc
xlat
push
pusha
xlat
scas
int3
pop
rcr
pop
jmp
cmp
and
inc
in
call
cli
xchg
mov
aad
sub
loop
cs
sub
cmps
xchg
fidivr
pusha
jmp
pop
push
jb
jno
mov
jmp
mov
jmp
cmp
int
xor
(bad)
int3
iret
js
xor
(bad)
cld
nop
cwde
lea
mov
mov
test
adc
cli
push
or
xchg
mov
(bad)
movs
rcr
and
sbb
sub
cmp
es
repz
outs
cmp
aas
push
sbb
xchg
cmp
sub
cmp
jmp
call
movs
lods
ror
rcl
cmp
xchg
popf
int
in
mov
repz
sub
ret
(bad)
aad
mov
sbb
and
pop
test
xlat
inc
addr16
in
daa
dec
push
shl
retf
inc
add
pop
shl
mov
adc
pop
mov
dec
cmp
push
mov
(bad)
and
push
imul
mov
fsub
push
jnp
fbld
push
adc
cmp
pop
sub
scas
mov
movs
add
je
or
cmc
(bad)
loop
pop
(bad)
jle
in
std
loope
inc
jmp
sbb
mov
shl
movs
or
cmps
cmp
sbb
fimul
loope
and
or
std
loopne
iret
data16
dec
push
dec
xchg
cmc
outs
fld
es
xchg
push
push
jo
jbe
pop
test
cld
mov
dec
in
fmul
xor
dec
add
xor
hlt
das
push
mov
add
(bad)
fsubrp
mov
dec
mov
push
test
call
jecxz
imul
and
call
gs
push
cmp
xchg
jne
sbb
int
jle
sbb
fisub
cmp
or
(bad)
mov
jg
mov
inc
lea
fimul
sub
dec
mov
cmp
fist
sbb
cmp
in
enter
in
scas
std
into
mov
pop
rcr
mov
jns
or
stos
call
pop
push
loopne
cmp
ror
push
popa
and
mov
sbb
pop
jecxz
xchg
add
cmc
addr16
fnsave
mov
test
clc
aas
sub
clc
push
add
cmp
mov
stos
outs
jmp
in
out
(bad)
jno
jo
(bad)
aaa
jns
ret
loopne
dec
or
jp
cmp
jl
adc
xchg
cdq
add
dec
xor
ins
sub
push
retf
jbe
lds
arpl
mov
stos
dec
out
ja
mov
cmp
pop
ror
mov
dec
repnz
stos
mov
js
mov
or
(bad)
aad
and
mov
loope
loope
xchg
(bad)
jge
mov
leave
lods
rol
les
(bad)
rol
jae
outs
xor
mov
sub
cmp
jp
shl
mov
sbb
mov
shl
push
xchg
push
adc
cmp
sbb
adc
jb
pusha
inc
loop
test
mov
fs
mov
jmp
mov
xchg
in
and
mov
fsubr
dec
repnz
mov
popf
pop
mov
popf
sub
in
(bad)
sbb
dec
jno
mov
scas
cmp
jg
fild
sub
cmp
xchg
sbb
clc
push
jne
cmps
cmp
loope
bound
or
add
cmps
inc
lods
(bad)
cli
push
ret
imul
push
sub
int
pop
ror
lock
mov
retf
test
mov
inc
ficomp
fild
dec
sbb
pop
jle
xchg
int
xchg
imul
mov
icebp
push
inc
sub
test
xor
inc
(bad)
mov
stc
or
rcr
clc
or
call
mov
ins
push
pop
and
or
(bad)
stos
sbb
push
jle
xor
add
fistp
xchg
repnz
xchg
add
cld
sbb
dec
pop
jl
mov
popf
inc
outs
inc
and
enter
dec
dec
scas
clc
out
retf
shl
dec
cmps
rol
bound
xor
mov
adc
sub
xor
mov
sub
adc
push
inc
stos
(bad)
xor
add
adc
push
out
shl
lahf
cmps
scas
pop
les
mov
pop
loop
dec
push
push
lds
push
sub
in
pop
and
add
iret
push
inc
and
loop
mov
push
rol
imul
pop
sub
addr16
xor
inc
inc
ja
fcom
sti
push
stos
xchg
les
xchg
enter
rol
nop
stos
fld
add
inc
pop
popa
sbb
fs
fadd
pop
adc
pop
xchg
mul
jno
bound
lahf
mov
into
adc
push
adc
pop
xor
(bad)
ffree
xchg
call
mov
sub
push
cmp
ret
inc
mov
sbb
cli
mov
or
jbe
push
add
jmp
xor
jno
pop
scas
jle
clc
(bad)
adc
mov
push
push
enter
jl
mov
mov
push
mov
lock
pop
ret
rcl
dec
or
xor
mov
and
mov
aad
sub
mov
push
mov
xlat
and
inc
arpl
cmp
xchg
mov
pop
lods
sar
fcmovne
pop
xchg
loop
jl
dec
pop
xchg
xor
cmps
into
mov
push
pusha
mov
pop
push
lock
mov
sub
adc
pop
leave
shr
cmp
pop
out
and
shl
sub
xchg
push
scas
fild
push
jo
jmp
inc
loopne
jp
out
vorps
sub
or
and
mov
jle
jo
sub
(bad)
aad
je
je
out
int3
clc
pop
mov
es
fwait
lods
jmp
xlat
sti
inc
mov
outs
mov
sub
mov
xchg
lea
ret
std
pop
inc
push
mov
sub
test
xor
fs
(bad)
movs
sub
adc
mov
push
inc
nop
pop
add
addr16
jnp
int3
pop
and
push
cmp
mov
shl
mov
push
mov
jmp
mov
gs
fiadd
ffree
popa
push
push
shl
jmp
xchg
pop
ja
inc
dec
std
push
push
mov
jo
shl
cwde
shl
cmps
jmp
icebp
mov
and
pop
add
hlt
dec
and
push
adc
xchg
mov
sbb
pop
pop
mov
mov
popf
sub
fcomp
xchg
pop
aam
leave
and
adc
out
mov
and
and
lods
fimul
adc
aam
int
mov
das
stos
lods
mov
popa
outs
fisubr
test
lods
inc
push
outs
pop
(bad)
xor
push
vunpckhpd
adc
dec
lea
test
xor
mov
test
(bad)
imul
ja
int3
cdq
scas
push
shr
or
dec
(bad)
fist
cmp
adc
xor
jnp
test
sub
shr
icebp
add
mov
adc
daa
sti
ins
int
stos
test
jo
data16
in
mov
push
(bad)
in
repnz
test
out
div
mov
cmp
pop
repz
mov
popf
and
mov
jmp
out
pop
cld
dec
(bad)
sub
xchg
dec
mov
dec
sbb
sbb
inc
inc
sub
cli
xor
jno
xor
shl
dec
arpl
xor
mov
fstp
mov
jl
mov
fisttp
xchg
jnp
cwde
out
and
xor
data16
mov
loopne
pop
retf
out
neg
mov
xlat
cs
scas
xchg
jmp
xchg
or
outs
cmc
cmps
loopne
xor
pop
mov
adc
push
jge
adc
sar
adc
adc
sbb
xchg
(bad)
cmps
call
into
or
adc
out
add
jmp
shr
inc
fwait
stos
mov
push
outs
jl
or
mov
or
fwait
scas
pop
jo
dec
sti
inc
shl
pop
cdq
fs
setae
dec
es
jno
loop
or
and
ins
out
lods
aad
mov
mov
jb
mov
daa
cmp
or
cmps
and
xchg
aad
cmp
inc
retf
jmp
shl
jecxz
or
add
jl
jecxz
ins
lods
xchg
mov
xchg
cli
fcmovb
test
cmp
dec
es
jmp
jg
jb
cdq
mov
mov
fistp
fstp
loope
ret
in
not
inc
sub
lds
pop
push
aam
jp
xor
fisttp
push
rcr
sub
sub
jnp
jo
mov
adc
mov
pop
popf
pop
ja
push
jne
fldcw
pop
adc
cwde
jbe
mov
loopne
dec
sbb
cli
addr16
mov
pop
(bad)
lahf
addps
repz
pop
sbb
jecxz
mov
aam
mov
add
or
push
fs
xor
jg
repnz
(bad)
jg
jbe
adc
test
xor
mov
cwde
out
pop
arpl
movs
leave
sahf
retf
cld
mov
push
(bad)
jmp
out
mov
cmp
mov
in
dec
sub
mov
add
push
fstp
sub
jo
adc
push
shl
addr16
aaa
pop
jne
pop
jae
jbe
ror
test
dec
xlat
inc
hlt
fwait
lds
inc
xor
pusha
cs
iret
dec
mov
test
sub
pop
inc
mov
sub
inc
cmp
add
ss
leave
cmp
js
pop
jns
add
popf
or
pop
adc
dec
inc
push
dec
shl
or
call
add
sbb
adc
add
fldcw
stos
xor
not
pop
add
cwde
xchg
jno
sbb
sbb
int
jmp
lahf
and
pop
je
sub
push
xchg
pop
xchg
in
dec
mov
out
mov
jbe
out
and
sub
cmps
je
into
ret
xchg
pop
mov
lock
(bad)
cmp
js
sbb
cmp
dec
sbb
sub
jmp
mov
aam
mov
xor
dec
dec
loope
mov
addr16
fwait
cdq
lahf
pop
inc
mov
in
inc
sti
mov
movs
movs
add
pop
fcomp
test
mov
adc
(bad)
aam
mov
mov
inc
into
pushf
cmp
fst
and
jo
loope
in
(bad)
gs
sub
mov
and
push
mov
mov
and
test
addr16
adc
in
push
fsubr
aad
nop
rcr
pop
enter
(bad)
loopne
jl
mov
lods
movs
pop
sbb
mov
adc
cmps
and
sub
xchg
aaa
mov
mov
inc
fst
cmp
jmp
jg
xor
mov
ficomp
sbb
pop
inc
inc
push
add
pusha
ins
(bad)
xor
sti
imul
jb
mov
(bad)
pop
bound
dec
xchg
mov
scas
ins
pop
(bad)
imul
call
cwde
cmp
scas
xchg
push
(bad)
iret
jp
add
push
add
add
and
jns
ja
fldcw
std
mov
out
sbb
fdiv
cmps
add
xor
sub
push
mov
imul
es
aas
scas
iret
inc
aas
nop
mov
adc
jo
and
out
nop
repz
pop
jge
inc
in
inc
push
adc
jb
retf
arpl
xor
pop
(bad)
pop
pop
fstp
mov
fmul
jp
dec
jnp
xor
nop
out
dec
inc
(bad)
test
mov
and
sub
enter
pop
pop
repnz
call
loopne
add
adc
mov
inc
pop
test
push
inc
mov
or
shl
jg
adc
test
jno
jge
sbb
sbb
sbb
bound
in
pop
mov
pop
xchg
push
lea
lods
dec
cdq
aad
push
mov
scas
xchg
inc
jg
sahf
inc
addr16
addr16
fnstenv
and
sub
sbb
jne
int3
dec
imul
leave
clc
inc
call
sbb
aaa
test
xor
aaa
call
jge
xor
mov
imul
neg
cmp
xchg
sub
mov
scas
imul
mov
mov
ja
and
xchg
or
or
ins
mov
jne
cli
loop
mov
jns
pop
xor
sahf
retf
sub
cmc
nop
packsswb
add
call
cwde
fist
or
and
mov
adc
or
ret
ror
and
xchg
out
pop
into
retf
fmul
dec
retf
aam
cmp
cmp
fstp
(bad)
or
in
dec
cmc
loop
cs
adc
xlat
push
pop
cmp
adc
cmc
mov
adc
mov
jle
out
xor
inc
inc
jmp
mov
pushf
sbb
into
std
push
shr
and
adc
mov
dec
inc
(bad)
pop
adc
mov
imul
or
dec
xchg
mov
into
repz
mov
fldenv
xor
or
jae
sub
mov
push
sbb
neg
jp
jge
jp
or
sbb
push
sbb
fst
xchg
not
or
add
cmp
inc
std
call
cli
cdq
sbb
popf
xor
or
stos
jp
pop
jecxz
div
mov
clc
ss
rol
test
pop
push
aad
xchg
test
cmc
xchg
dec
jecxz
mov
lahf
jge
dec
lods
out
out
xchg
add
adc
repz
sar
hlt
dec
outs
pop
ja
sub
jno
dec
movs
dec
loope
jmp
jo
in
mov
mov
jge
fild
inc
xor
(bad)
cdq
sar
sbb
rcr
sbb
fisttp
push
int
std
mov
inc
sub
pusha
je
push
xor
popf
test
and
pop
iret
popf
mov
out
xchg
js
fwait
or
push
nop
or
(bad)
or
je
jne
bound
adc
and
test
retf
cmp
add
loop
int3
and
sar
retf
arpl
inc
and
xchg
xchg
cmp
mov
sti
push
mov
jns
cmp
sub
rsqrtps
shl
into
dec
or
cmp
cdq
shr
and
cmp
mov
mov
mov
and
mov
sub
push
nop
rcl
rcr
xchg
sub
shl
out
cmp
mov
ret
daa
lahf
lahf
inc
pop
push
xor
popf
mov
pop
sub
push
mov
or
xchg
sbb
(bad)
cmp
fbstp
sbb
sbb
imul
mov
jb
mov
aam
fwait
test
mov
aam
dec
mov
xor
out
rcr
sub
sub
xchg
in
and
adc
and
inc
mov
sbb
into
mov
test
pop
lods
paddusw
out
mov
js
gs
sbb
xchg
loopne
jne
ror
jmp
gs
shl
push
ret
sbb
pop
(bad)
loope
movs
fldcw
dec
popf
test
fnstsw
dec
pop
add
cwde
dec
rcr
mov
sbb
sub
lds
lock
adc
cmc
bound
push
push
stc
jbe
lock
ror
call
inc
mov
call
mov
mov
pop
inc
lds
fs
fldenv
fcom
sub
sub
cli
push
rol
and
xchg
sahf
inc
pop
scas
rcl
xchg
(bad)
cmp
scas
sub
scas
mov
das
push
fnstcw
mov
mov
mov
jmp
push
mov
lds
gs
inc
out
fmul
add
dec
(bad)
dec
push
out
fwait
scas
push
cmp
cld
sti
lea
mov
shl
hlt
adc
xchg
mov
add
aas
sbb
mov
aam
jns
pop
sar
in
retf
mov
jbe
in
cmps
jae
xchg
leave
sbb
adc
fs
mov
and
pop
mov
(bad)
cli
or
lds
cwde
pop
jno
cmp
mov
sbb
pusha
iret
xor
mov
jns
push
pop
xor
mov
jnp
ins
std
stos
dec
push
call
jl
lds
jns
out
or
scas
dec
or
jo
(bad)
pop
pop
and
imul
xor
inc
arpl
aaa
xchg
add
call
xchg
sbb
adc
cld
sbb
loopne
jne
or
xchg
cmp
xchg
jg
jb
aaa
movs
or
fwait
stc
repz
repz
sbb
sti
mov
or
add
cmp
js
mov
xor
(bad)
test
xor
hlt
pop
aam
push
mov
inc
xor
cli
xor
loop
xor
pop
(bad)
xchg
inc
xor
jg
xchg
lea
pop
sub
sti
mov
cmp
in
xlat
dec
cmp
mov
adc
or
pop
fld
mov
lea
jmp
(bad)
xor
cld
push
push
mov
jl
ds
push
xchg
inc
retf
hlt
mov
or
inc
mov
pushf
test
gs
ja
cmp
aaa
xchg
dec
stos
(bad)
movs
pop
adc
pop
dec
xchg
dec
shl
in
repz
adc
std
popa
dec
sub
ins
stc
rol
pushf
mov
xchg
cmps
jno
jns
fimul
pop
sub
or
stos
leave
xchg
mov
push
inc
sbb
mov
jge
sbb
add
cmp
pop
loope
lods
jbe
imul
cmp
lahf
xchg
inc
mov
and
aam
mov
xor
xor
xchg
xor
(bad)
adc
inc
or
retf
ret
cmp
int3
popa
gs
sbb
dec
dec
jge
std
adc
arpl
sahf
ret
inc
imul
inc
xchg
sub
rcr
out
fdivr
pop
xchg
(bad)
ins
mov
bound
es
jb
or
pop
pop
les
loope
jle
adc
fdiv
jl
push
icebp
cld
mov
outs
sar
ds
adc
shl
data16
sbb
mov
das
sbb
out
dec
mov
out
aam
xor
and
jb
loopne
jl
mov
out
je
mov
cdq
ss
sti
lahf
(bad)
fnsave
mov
mov
es
fldcw
push
pop
idiv
sbb
cmp
mov
aaa
in
sbb
mov
mov
int3
pusha
push
mov
jecxz
jg
xchg
pop
jne
jp
fldcw
cmp
mov
pusha
mov
pop
jge
sti
imul
fistp
loop
mov
sub
ins
xchg
cmps
scas
and
aaa
lahf
add
(bad)
pop
imul
sbb
shl
lods
mov
popa
sub
mov
pop
or
shl
test
mov
(bad)
pop
and
rol
jb
xchg
jp
test
or
(bad)
dec
mov
scas
enter
cwde
push
int
ins
mov
xchg
pop
pop
nop
mov
sti
sti
xor
outs
fist
cmp
test
test
pop
jmp
xor
pop
adc
inc
lods
lea
jp
or
hlt
pop
jecxz
pop
inc
xor
jl
sbb
xlat
push
fs
sub
push
into
xchg
or
loop
pop
in
cmps
jno
imul
adc
sub
in
scas
fdivrp
cmp
xchg
mov
lock
sbb
fist
fcmovu
lods
dec
dec
sbb
sbb
icebp
cwde
les
or
(bad)
sti
shl
in
dec
adc
and
arpl
imul
aam
(bad)
sti
loopne
xchg
adc
icebp
inc
xchg
jp
test
sbb
and
dec
push
or
mov
shl
or
es
or
loope
fisub
cmps
mov
test
push
jecxz
stos
mov
es
sbb
sti
movs
or
ja
and
push
push
ins
sub
sbb
add
cdq
test
add
icebp
sub
cli
popf
mov
cdq
mov
jmp
mov
mov
xchg
(bad)
ss
pop
outs
nop
xor
stos
or
mov
mov
lods
cli
out
lock
lock
xor
neg
pushf
jge
cdq
pop
xchg
cmp
or
or
leave
jp
shl
dec
ss
adc
cwde
push
sub
enter
mov
cmps
lods
ins
fsubr
sbb
test
or
mov
mov
xor
and
jo
das
cmp
sar
adc
frndint
stos
pop
xchg
mov
out
mov
xchg
(bad)
inc
dec
mov
sub
push
dec
push
std
or
sub
and
js
and
mov
sar
and
ja
scas
aad
mov
jmp
sub
jae
xor
femms
bound
sub
mov
mov
(bad)
push
mov
lahf
movs
sti
jbe
loope
(bad)
lock
sbb
je
and
mov
lahf
ret
or
outs
sub
fs
fst
in
xor
loope
imul
repz
sub
test
into
arpl
cwde
mov
sub
sub
gs
aaa
pop
xchg
out
leave
mov
sub
icebp
jns
mov
and
xchg
push
retf
retf
inc
fsubr
cmp
call
xor
inc
out
inc
jbe
xchg
mov
fs
sbb
jae
mov
es
sub
out
xchg
(bad)
fisub
push
lds
ins
or
mov
dec
scas
daa
pop
pop
aam
xor
push
in
das
xchg
cvtpi2ps
mov
outs
loop
mov
or
(bad)
mov
push
fsub
push
dec
js
icebp
fwait
sub
adc
dec
dec
ret
fwait
shl
mov
inc
adc
adc
fcomip
mov
pop
dec
cdq
loopne
imul
cdq
ret
retf
inc
repnz
loopne
mov
fsub
add
mov
out
adc
test
iret
ins
scas
in
dec
aas
fild
lock
mov
inc
or
fsubr
movs
outs
add
fldenv
xor
call
pop
pop
sbb
mov
lods
mov
popa
vcvtps2pd
sub
rol
leave
ficom
ins
jmp
cld
fwait
sub
mov
mov
or
out
out
push
jo
sub
clc
pop
pop
lea
pop
bnd
rcr
ss
mov
test
dec
fistp
rdmsr
jno
pusha
nop
call
(bad)
rol
inc
push
or
cdq
addr16
cmp
pushf
or
jnp
mov
mov
ins
jae
adc
mov
cmp
call
repz
push
add
xchg
stc
sbb
test
xlat
ret
pop
and
jl
push
out
cmp
dec
movs
nop
or
cld
pushf
imul
test
test
jecxz
in
add
mov
sbb
stos
sbb
das
out
aad
and
pop
push
xlat
ret
xor
and
jmp
jb
mov
sub
add
mov
fisub
or
jg
lahf
cmc
push
push
loope
dec
fs
iret
sbb
fsincos
and
ret
push
pop
push
lods
nop
aas
pushf
inc
mov
clc
hlt
sbb
aam
loopne
imul
xor
add
and
mov
jp
mov
in
int3
pusha
(bad)
ds
pop
sbb
aam
pop
stos
add
sbb
inc
adc
cld
sub
cmp
and
(bad)
mov
retf
pop
mov
mov
mov
xchg
inc
call
(bad)
aad
mov
repnz
inc
sbb
push
adc
pusha
dec
call
fst
inc
sbb
dec
inc
imul
jmp
out
enter
clc
mov
cmovs
aaa
push
or
and
mov
push
and
lea
fadd
jle
(bad)
out
xor
scas
jmp
ficom
(bad)
lds
jmpw
xor
mov
frstor
inc
pop
mov
mov
retf
repz
cdq
mov
jae
sbb
adc
mov
into
push
inc
daa
(bad)
(bad)
jbe
dec
push
loope
mov
cmc
sbb
jnp
and
test
retf
cmc
pusha
inc
(bad)
xchg
out
mov
xchg
adc
xor
pop
ins
mov
adc
test
push
gs
mov
xlat
jmp
xor
dec
lods
retf
out
ds
add
dec
or
and
test
lahf
je
stc
sub
call
sub
sbb
fmulp
inc
stc
(bad)
and
adc
mov
ins
arpl
mov
ins
vpand
jne
hlt
mov
push
or
sti
add
jle
into
popa
cmp
test
pop
push
sub
mov
or
sub
or
mul
mov
xchg
retf
jmp
sti
adc
or
pop
push
test
pop
int3
push
or
mov
sbb
sbb
shl
mov
xchg
push
int3
adc
fdivr
pop
ins
xor
ja
inc
adc
inc
pop
and
gs
inc
ja
inc
lock
dec
jp
(bad)
mov
mov
and
cld
dec
cwde
add
ja
or
retf
popf
shl
adc
mov
xor
mov
sbb
fiadd
mov
scas
jecxz
(bad)
pop
xchg
push
sbb
or
out
unpcklps
cmps
(bad)
rcl
mov
dec
fistp
xchg
push
sbb
mov
xor
ins
clc
or
dec
aas
cmp
dec
test
pop
dec
inc
mov
scas
lds
mov
jo
retf
nop
jbe
push
jmp
cmps
pop
jecxz
jae
cmps
or
outs
enter
iret
pop
imul
es
mov
aas
pop
jge
jp
cs
call
lods
sbb
mov
adc
out
iret
not
in
popf
(bad)
and
xlat
cmp
and
adc
into
loopne
repz
jbe
test
jmp
ror
das
dec
dec
imul
adc
call
sbb
mov
dec
cmovl
cmp
mov
fiadd
(bad)
fst
sbb
stc
fnstcw
and
fiadd
fdiv
jl
in
adc
jo
adc
cmp
pop
mov
sbb
sar
popa
popa
imul
xor
sti
aas
push
adc
shl
and
in
xor
jb
iret
fstp
rol
daa
in
data16
ins
ret
sbb
or
jp
mov
rol
add
lods
and
in
xor
ds
add
or
pushf
inc
mov
push
test
inc
leave
push
jmp
add
adc
retf
pop
or
mov
pop
js
inc
inc
xchg
mov
shl
js
arpl
inc
lods
stos
pop
nop
cmp
inc
les
lock
pop
jbe
scas
pop
add
add
mov
adc
mov
call
jno
mov
dec
xchg
mov
jmp
dec
outs
inc
xchg
add
pop
mov
cmps
addr16
jne
adc
stos
sub
xchg
dec
mov
dec
fs
loop
shl
push
repnz
jmp
cmp
push
pop
movs
(bad)
mov
sub
fucom
lea
push
pop
jnp
cld
iret
sbb
pusha
pop
mov
ss
pop
test
test
sub
shl
aad
nop
jnp
and
jmp
adc
imul
or
pop
jle
xchg
mov
mov
mov
out
xor
pushf
(bad)
dec
dec
loope
aaa
stc
cmps
in
enter
ret
test
das
dec
fld
dec
dec
loop
sbb
and
(bad)
jnp
outs
pmullw
fwait
dec
shl
jle
scas
pop
hlt
mov
aaa
mov
xor
xor
lods
push
gs
jne
das
inc
mov
loopne
shl
cli
sub
stos
and
fimul
retf
sbb
mov
sbb
xchg
push
mov
iret
gs
wrmsr
jb
dec
add
je
imul
in
jecxz
mov
fwait
aam
imul
sbb
pop
pop
dec
dec
adc
bound
lahf
jnp
cmp
sbb
pop
(bad)
int3
ret
mov
mov
(bad)
ror
push
cwde
mov
xor
cli
out
iret
sub
aaa
ror
imul
adc
mov
inc
and
mov
or
lock
sbb
jb
mov
adc
(bad)
push
shl
sbb
push
fbstp
(bad)
fs
movs
out
cmp
cmps
add
aaa
pop
dec
shl
in
inc
xor
push
xchg
mov
xor
in
cmp
retf
pusha
fmul
imul
fisttp
inc
and
sti
test
hlt
out
xlat
nop
js
les
into
cmp
pop
mov
ret
dec
test
lock
(bad)
data16
cmp
cmp
xor
push
push
mov
xchg
cmp
jae
ss
repnz
lods
sbb
mov
sbb
push
mov
movs
pop
in
sub
je
push
mov
push
lods
loope
jbe
fstp
jmp
add
in
imul
sar
int
add
out
pop
scas
sub
sbb
popf
mov
jb
daa
jno
test
shr
push
sub
adc
inc
adc
and
cmps
mov
mov
mov
lods
aas
popf
push
or
movs
(bad)
sub
stos
(bad)
fdiv
jle
lahf
inc
jns
add
(bad)
in
mov
cmps
mov
dec
add
repnz
or
outs
stos
fcmovbe
or
(bad)
addr16
and
and
mov
add
cmp
dec
add
mov
xchg
popf
mov
jl
sub
cmc
dec
xor
jnp
push
aas
mov
or
ja
cmp
or
mov
out
sub
mov
jbe
std
jmp
retf
jae
cmc
call
imul
adc
dec
lods
pop
test
mov
add
sbb
inc
(bad)
scas
xlat
shr
or
call
repz
inc
dec
imul
jbe
outs
push
call
sub
mov
cmp
retf
into
lock
daa
fwait
lock
jnp
jle
mov
xchg
mov
(bad)
(bad)
div
pushf
cmp
inc
in
push
push
xchg
xor
adc
mov
dec
mov
sub
(bad)
pusha
pop
je
shr
mov
in
outs
lods
inc
sub
js
das
in
out
adc
jo
adc
xchg
clc
jno
scas
(bad)
fwait
in
iret
shl
jge
add
mov
fabs
mov
jg
repnz
pop
daa
sub
sbb
mov
addr16
dec
adc
int3
pop
sub
iret
gs
push
dec
xlat
mov
mov
popa
mov
dec
adc
loope
ins
pop
bound
cmp
loope
ror
cmp
clc
shl
scas
stc
mov
vpunpckhbw
xor
popf
inc
mov
mov
ftst
pop
(bad)
loope
dec
in
outs
jmp
push
jl
push
adc
call
call
repz
mov
neg
nop
clc
imul
inc
inc
xchg
mov
data16
push
mov
cmp
push
mov
ret
jno
cmp
stc
xor
repz
ret
push
mov
aam
in
sub
retf
push
pop
shr
es
ficom
jmp
mov
ret
and
in
push
xchg
lea
shl
inc
fmulp
retf
push
xchg
push
pop
loopne
cmp
cmp
jecxz
data16
add
fdiv
mov
ss
jno
dec
aaa
retf
xor
movs
xor
std
pop
pop
cmps
ins
in
les
xlat
cmp
xor
dec
inc
cmp
mov
stos
pop
inc
jb
repz
xchg
sub
shl
test
pop
pop
dec
adc
loop
mov
fs
in
pop
mov
(bad)
cmc
or
cli
lea
push
ja
ret
(bad)
ds
dec
lea
mov
scas
mov
cli
sar
(bad)
ret
outs
call
dec
jbe
hlt
test
jmp
mov
ss
kmovb
aad
mov
lock
push
pop
mov
dec
xor
stc
pop
or
dec
xchg
sub
cmp
cmp
add
iret
mov
push
lock
fsubr
pusha
(bad)
lahf
and
test
sar
sbb
mov
mov
retf
add
stos
cwde
mov
xor
add
shr
pushf
dec
add
test
dec
xchg
pusha
add
in
into
(bad)
call
add
lahf
push
pop
lahf
das
lds
daa
push
fiadd
dec
fst
add
xor
sub
rcr
outs
xchg
clc
daa
fcomp
gs
scas
cmp
(bad)
push
mov
push
enter
loope
mov
xchg
lock
jmp
stc
pop
mov
mov
adc
mov
push
push
xchg
jle
jl
mov
loop
and
js
rdpmc
jae
inc
popf
test
cmp
icebp
ret
sub
jbe
pop
jbe
hlt
(bad)
pop
in
xchg
pop
sbb
in
(bad)
out
jmp
mov
cmp
mov
cmp
cmps
(bad)
retf
add
xor
jmp
movs
jae
jg
inc
cmps
mov
add
push
mov
int3
nop
div
pop
dec
push
les
sub
ret
lods
pop
data16
add
iret
lahf
xchg
cld
mov
adc
pop
js
sbb
cli
cmps
(bad)
mov
(bad)
adc
sub
stc
or
mov
out
call
cmp
call
je
loop
fistp
cld
cs
mov
scas
call
dec
and
cmc
mov
in
mov
(bad)
add
jae
pusha
jge
or
fs
sub
je
out
or
push
lds
jmp
mov
add
mov
fmul
push
out
test
fstp
mov
and
mov
call
mov
xchg
push
jmp
mov
cld
(bad)
jge
mov
imul
scas
retf
cdq
hlt
lods
lods
jbe
in
aad
inc
mov
or
jae
imul
mov
mov
xor
adc
jae
cdq
sahf
fdiv
fwait
mov
xchg
setae
dec
pop
mov
inc
mov
pop
push
mov
inc
sbb
mov
test
xor
push
es
lock
sub
int3
dec
add
stos
adc
and
dec
aas
movs
and
shl
js
pop
pop
icebp
dec
push
das
and
inc
dec
dec
sub
push
es
mov
nop
call
xchg
push
addr16
xchg
jns
xlat
xabort
xlat
inc
cmps
fdiv
test
enter
into
or
out
das
rcr
mov
out
and
and
scas
fcomp
inc
add
mov
mov
out
inc
push
in
adc
sar
mov
leave
pop
stos
xor
shl
jno
icebp
and
fdivr
test
dec
jecxz
mov
int
lock
cld
adc
sar
ins
dec
bound
pop
cmc
(bad)
add
outs
jae
(bad)
cmp
xor
ja
and
in
and
rcr
push
add
sti
xor
mov
popf
nop
cmp
or
sbb
bound
aad
(bad)
push
push
repnz
popf
mov
adc
gs
mov
fsubrp
rcl
shr
lock
or
stos
mov
test
adc
lahf
sub
sub
in
jne
add
outs
dec
pusha
mov
imul
cdq
sub
or
aaa
xchg
out
into
fs
cld
aam
faddp
sar
and
push
dec
ss
adc
sar
pusha
sbb
sub
adc
scas
mov
loop
xlat
stos
xor
imul
cli
fldcw
push
int
mov
mov
(bad)
pop
retf
mov
repz
sub
xchg
mov
rol
xchg
dec
das
mov
loopne
jge
lods
in
outs
rol
in
pop
mov
xor
setnp
cs
xchg
sub
int
sub
lods
adc
lock
sbb
nop
leave
sar
sbb
xor
popf
sbb
sub
dec
push
mov
int
mov
std
ror
push
mov
or
shl
sbb
test
jg
xchg
jmp
mov
cmp
pop
fidivr
dec
push
shl
mov
sub
dec
outs
(bad)
fldenv
test
ins
test
xchg
ins
cdq
ins
pop
leave
inc
adc
push
fidiv
push
adc
xchg
retf
xchg
adc
inc
(bad)
sbb
push
xor
popa
in
fistp
enter
pop
mov
psubd
mov
pusha
cld
popa
sub
xchg
je
fdivr
movs
mov
xchg
scas
lahf
into
cmp
jb
pop
jp
mov
cmp
sub
ds
mov
ins
movs
ret
lods
inc
or
scas
ins
xchg
test
repz
loop
sbb
mov
imul
or
mov
inc
(bad)
stc
mov
(bad)
push
add
ss
cmp
jno
pop
jb
or
xor
mov
ss
aaa
and
hlt
xchg
add
mov
mov
cs
jmp
and
mov
sar
std
in
hlt
push
or
adc
mov
stos
hlt
push
pop
adc
mov
(bad)
xor
jb
les
out
xchg
add
mov
pop
jbe
mov
rcr
jp
cli
ficom
popf
icebp
(bad)
retf
cmps
cmp
ds
movs
aaa
data16
or
popa
loope
add
adc
inc
mov
popf
ins
mov
call
in
push
sub
push
imul
sub
and
(bad)
rcpps
mov
sbb
rcl
adc
push
(bad)
jp
fcom
adc
push
sub
ret
sbb
rol
and
movs
push
dec
add
sbb
jmp
cdq
(bad)
leave
dec
lds
retf
ins
jnp
ja
dec
pop
ds
mov
ffree
in
dec
push
sar
movs
sub
sar
mov
cli
call
sub
push
out
in
sub
mov
mov
fmul
jns
sub
sahf
mov
aad
mov
jo
aaa
shr
aaa
loope
jle
int3
aaa
mov
dec
mov
push
jno
mov
adc
ret
scas
pop
push
sbb
cmp
(bad)
pop
and
push
mov
mov
pushf
jae
add
mov
shl
test
jno
inc
jnp
cmp
mov
mov
pop
loope
movs
mov
leave
sub
(bad)
aas
int
leave
(bad)
jp
ss
mov
dec
pop
arpl
push
xchg
add
call
gs
fwait
inc
sub
(bad)
inc
movs
push
and
xchg
test
xor
test
push
xchg
dec
xchg
push
into
leave
inc
mov
add
push
cmp
sbb
pop
mov
fwait
cmp
popa
mov
inc
scas
or
mov
dec
or
in
ins
push
imul
retf
aam
es
dec
sbb
cwde
mov
neg
pop
xor
clc
cs
outs
ss
enter
ins
add
out
sub
sbb
lock
div
(bad)
cmps
dec
xchg
ret
test
jge
push
fcmovu
or
mov
add
and
cmp
sti
ficom
adc
fbstp
js
into
ja
pop
mov
xor
stos
lds
xor
dec
fidiv
xchg
sbb
sar
shl
inc
or
dec
or
ja
loop
mov
add
call
push
(bad)
mov
call
lea
inc
cli
test
xchg
shl
ror
movs
(bad)
mov
sub
inc
outs
jb
sbb
mov
fcomp
xchg
sbb
(bad)
sub
adc
icebp
fs
fwait
jmp
inc
jbe
mov
shl
pop
dec
in
mov
push
inc
pop
js
pop
xlat
mov
pop
push
sub
cmp
clc
pop
mov
mov
ficom
add
mov
repnz
sbb
enter
sahf
push
xor
add
xor
mov
mov
ds
sub
sysexit
shl
(bad)
add
gs
popf
fucomip
icebp
or
out
sbb
push
sbb
pop
out
mov
add
mov
es
jge
or
cmp
mov
pop
push
lahf
ds
dec
cld
jp
call
jge
es
stos
lock
jmp
lahf
ins
leave
not
adc
movs
mov
ret
bound
sbb
xchg
loope
xchg
loope
add
or
push
and
aas
adc
outs
dec
and
fcom
aaa
mov
push
sub
lea
push
dec
cmps
dec
(bad)
sar
dec
neg
pop
inc
ret
sub
int3
into
pcmpeqw
mov
cmp
(bad)
dec
lea
out
call
cmps
das
push
jae
addr16
mov
repz
out
(bad)
pop
pushf
(bad)
nop
cmp
cmp
movs
ss
inc
adc
add
xchg
or
push
mov
mov
mov
ret
mov
xchg
ret
les
call
fild
add
pushf
test
cmc
test
jmp
sbb
sbb
addr16
adc
rcr
pop
mov
cdq
dec
adc
pop
jne
test
dec
cmp
enter
push
pop
jl
stos
retf
push
es
mov
sahf
xor
(bad)
shl
adc
pop
push
int
popf
or
imul
scas
push
push
mov
sub
out
(bad)
cmps
dec
sahf
sbb
add
xor
aaa
mov
adc
cmp
loopne
call
or
and
mov
stos
ja
aam
ins
or
or
inc
mov
sub
jmp
lods
pop
xor
xchg
push
dec
push
dec
add
pop
fdiv
cmp
push
sub
imul
int
push
dec
scas
data16
cld
das
dec
adc
inc
(bad)
xchg
call
pop
cmp
adc
mov
mov
sbb
nop
sbb
mov
mov
and
js
xchg
outs
cmps
test
test
mov
cmp
push
mov
cmps
sub
jns
pop
xchg
sbb
call
inc
mov
xchg
mov
in
movs
pop
loopne
mov
add
jge
cmps
sbb
mov
popa
lods
inc
aaa
add
xor
adc
loopne
push
and
sbb
xor
gs
jb
sar
retf
movs
daa
aam
mov
sbb
test
fdivr
xchg
popa
or
test
mov
mov
mov
imul
xchg
adc
repz
ror
cwde
xor
lods
imul
mov
lds
jl
in
hlt
jns
das
lods
sbb
(bad)
out
xchg
cwde
pop
xor
or
lds
aaa
adc
jb
xor
mov
in
push
adc
shl
jl
(bad)
dec
jmp
mov
xchg
sbb
jnp
out
retf
mov
push
xor
pushf
jnp
mov
dec
mov
xchg
inc
add
unpcklpd
enter
jb
dec
pop
jo
popa
popa
add
sbb
mov
call
pop
jnp
cmps
mov
mov
aas
pop
ss
bound
test
fs
or
pop
xchg
push
push
call
and
jmp
adc
or
ret
cmp
dec
mov
ds
loopne
(bad)
xchg
aam
or
ffree
hlt
(bad)
push
xchg
ins
and
sbb
inc
pop
mov
ret
dec
adc
adc
fld
ror
daa
fadd
(bad)
clc
add
popa
pop
add
xor
mov
enter
cmp
repnz
inc
xchg
cmc
shl
mov
mov
inc
loope
fs
bound
out
aad
sbb
mov
(bad)
cmp
mov
enterw
push
clc
mov
mov
jle
mov
rcl
adc
inc
in
push
and
push
cmp
sbb
sub
arpl
or
xor
lahf
jl
inc
dec
clc
or
gs
jo
and
sub
mov
call
push
test
dec
dec
int3
rcr
adc
leave
xchg
pop
mov
inc
(bad)
pop
pusha
sbb
retf
push
dec
xchg
jle
pushf
mov
xor
mov
push
add
dec
push
mov
adc
retf
in
inc
and
inc
xchg
adc
add
xor
fld
inc
lock
cmp
pop
out
sti
jae
mov
mov
sbb
xor
test
fnstcw
inc
xor
idiv
imul
add
inc
movs
mov
aad
xchg
scas
arpl
fistp
mov
ds
jnp
loopne
dec
rol
xchg
mov
test
cdq
xchg
lds
ret
icebp
adc
pop
push
sub
push
xchg
add
add
push
movs
stc
sub
arpl
mov
add
scas
xor
fadd
or
adc
pop
jno
nop
push
dec
test
jno
mov
dec
add
sub
mov
ins
sti
xor
test
rol
inc
lock
repz
int
add
cli
das
aaa
jae
clc
nop
jb
stc
jmp
push
jno
push
scas
prefetch
loopne
cwde
xchg
lahf
pop
call
inc
jmp
test
push
mov
ret
cld
adc
mov
mov
xor
mov
daa
push
pusha
sub
mov
pop
das
in
(bad)
pusha
cmovl
jnp
xchg
pop
inc
jp
data16
fisubr
rcl
ds
xchg
in
fnstenv
ret
bnd
mov
xor
out
gs
cmps
sbb
mov
sbb
and
mov
mov
fbld
not
pop
in
shl
xchg
push
popa
add
xor
nop
dec
outs
or
inc
or
arpl
in
xor
sub
pusha
jecxz
mov
out
pop
push
cmp
jmp
stos
aaa
add
jno
or
ss
sbb
lahf
popa
pop
pop
push
out
out
in
and
popf
dec
mov
fmul
mov
daa
and
mov
(bad)
ins
pop
repnz
jnp
sbb
xor
fldenv
cmp
retf
fnstsw
lods
in
pushf
in
pop
push
mov
adc
(bad)
(bad)
push
out
and
gs
jnp
sub
mov
fs
(bad)
rcr
(bad)
mov
in
les
mov
sub
mov
sub
fisubr
pop
pop
xchg
push
int
sbb
xrelease
(bad)
in
cmp
push
xor
mov
imul
pop
cld
inc
cmps
cdq
outs
gs
(bad)
mov
adc
dec
jle
cwde
ins
adc
inc
push
inc
loope
and
sub
mov
push
pop
xchg
fistp
ror
dec
scas
fist
into
cmp
jmp
pop
dec
pusha
cmps
xchg
cmp
mov
call
retf
daa
mov
jo
add
mov
scas
(bad)
jle
mov
ret
pop
pop
cs
stc
fiadd
adc
sub
sbb
jb
cwde
xchg
aam
inc
test
aas
mov
mov
jae
imul
inc
mov
sub
repnz
mov
adc
cli
or
xchg
push
fwait
or
xchg
xchg
pop
ss
out
mov
and
pop
or
pop
mov
cld
iret
dec
xchg
ficom
mov
adc
pop
xchg
mul
and
std
or
mov
stc
dec
xchg
add
sbb
bound
mov
sub
lods
lea
mov
pop
fnstcw
mov
in
cmp
adc
jle
inc
cmp
outs
and
push
nop
pop
ret
mov
mov
popa
out
mov
int
fadd
inc
dec
pop
sub
loop
jge
stos
imul
test
jmp
leave
and
xlat
ror
dec
mov
sbb
out
mov
xchg
or
push
mov
cli
iret
sub
into
sbb
sbb
mov
mov
and
inc
retf
add
sub
retf
jno
aam
pushf
shl
sbb
cwde
sub
stc
lock
mov
jg
sub
jp
jmp
shr
outs
mov
lods
pushf
dec
int3
jo
into
adc
cwde
cmps
adc
out
je
add
sbb
fisttp
jge
push
inc
test
inc
push
in
and
jne
cmp
test
ds
lds
shr
imul
inc
imul
cmp
push
loope
cli
or
dec
jp
pop
stos
add
xchg
and
cmp
push
xor
call
mov
or
sub
pushf
or
mov
mov
ins
or
mov
and
mov
xchg
jl
nop
adc
add
call
xchg
cli
adc
mov
out
jnp
adc
mov
and
jmp
sub
push
cmp
lods
cmp
adc
add
jmp
jmp
pop
movs
call
nop
sahf
cwde
clc
jge
cmp
xchg
mov
das
adc
mov
sar
mov
add
int
out
inc
aam
inc
mov
cmc
cmp
movs
cmp
push
xchg
dec
mov
or
data16
daa
pop
ds
jmp
xchg
or
lods
jmp
xor
ins
jo
(bad)
fidivr
mov
push
add
jns
std
popf
inc
shl
jle
dec
push
fnsave
cld
ins
clc
cmp
outs
jecxz
leave
loope
dec
fisubr
gs
jle
jmp
popa
lea
aaa
cmp
aas
push
lea
je
adc
out
dec
cmc
pop
shr
inc
scas
sbb
arpl
hlt
pop
add
jo
rol
xor
fs
sub
loop
call
mov
mov
sbb
inc
and
inc
fcomp
pop
fninit
or
cld
in
xor
shl
in
mov
ficom
cmps
(bad)
mov
jnp
aam
mov
push
fsubr
add
inc
data16
and
out
je
mov
jmp
cmp
jl
cmp
lods
jmp
push
add
jge
add
stos
sub
fld
or
jb
or
jle
dec
sub
xor
add
sub
fsubrp
pop
jo
cwde
ror
int3
adc
adc
mov
movs
stos
mov
or
or
xchg
jo
les
mov
fwait
imul
and
outs
xor
push
lds
jns
cmp
add
dec
add
cmps
das
xor
test
sbb
clc
pop
xor
cmps
lds
bound
cmp
fst
stc
mov
sbb
push
mov
icebp
jge
xchg
ret
push
cmp
jecxz
lods
ds
sbb
inc
cld
mov
push
cmove
push
mov
(bad)
xchg
icebp
cmp
dec
sub
(bad)
sub
inc
out
fsub
jecxz
fiadd
pop
sbb
inc
ss
inc
fs
int
out
jmp
fcom
add
adc
arpl
ja
into
cwde
jne
pop
jle
cld
(bad)
cmc
pop
pop
mov
adc
repz
or
adc
jae
hlt
(bad)
repz
pop
xor
mov
idiv
(bad)
iret
adc
jecxz
mov
jnp
leave
ins
(bad)
mov
mov
fmul
push
sar
mov
clc
push
add
fadd
push
adc
mov
jbe
jmp
jbe
ins
popa
stos
sub
pop
or
je
test
add
add
xlat
adc
cld
mov
or
lock
jle
cmps
dec
add
mov
mov
mov
sahf
stos
xor
inc
adc
imul
jg
dec
push
sahf
mov
jg
jge
add
(bad)
sub
rcl
in
popf
dec
adc
lods
xor
stos
mov
int3
mov
test
add
push
mov
ins
inc
mov
jno
push
jae
call
jge
mov
movs
fs
enter
(bad)
xor
or
lock
adc
fstp
cmp
dec
(bad)
(bad)
adc
es
repnz
pop
loope
movs
lahf
mov
scas
xchg
hlt
retf
dec
sahf
(bad)
test
(bad)
hlt
inc
addr16
in
pop
mov
paddsw
arpl
(bad)
cmps
shr
jo
add
xchg
scas
fstp
and
inc
fwait
sbb
(bad)
clc
push
xor
out
cmp
loopne
xor
(bad)
fist
test
mov
cmp
les
lods
aam
add
(bad)
repnz
in
pop
dec
mov
ss
jne
outs
xor
dec
xchg
inc
cmp
into
cmp
dec
jge
add
enter
iret
dec
icebp
sub
and
mov
psrlq
repz
sahf
sbb
cmps
out
mov
mov
popa
stos
push
mov
iret
rol
xchg
call
cmps
add
mov
mov
inc
mov
jae
xorps
in
cmp
xchg
mov
outs
(bad)
xchg
in
jecxz
jmp
push
push
mov
stos
leave
in
daa
mov
scas
or
shl
add
push
sub
cli
xchg
mov
fcmovnbe
pop
mov
mov
(bad)
call
jmp
lods
jne
in
dec
clc
push
cmp
mov
lock
xchg
jmp
dec
ds
inc
loopne
cli
jle
int
jecxz
add
cmps
fnsave
jb
inc
ins
sub
call
mov
push
dec
cmc
movs
imul
mul
pop
sub
push
rol
push
add
push
xor
mov
and
pop
sbb
mov
dec
in
ins
and
jg
push
in
xlat
fsubr
pop
jmp
mov
repnz
enter
ss
xlat
mov
fbstp
add
fnstcw
adc
mov
aad
aam
movs
movs
jmp
mov
scas
jle
inc
cwde
(bad)
retf
in
stos
jmp
hlt
cli
push
mov
imul
and
(bad)
adc
xlat
bound
xchg
in
jne
xchg
outs
add
ja
idiv
lahf
sub
loope
imul
int3
jbe
add
push
test
js
inc
cmp
imul
stos
imul
push
mov
sub
hlt
push
fcomp
mov
std
loopne
cmp
ss
sar
adc
dec
ins
push
add
sbb
repnz
or
cmps
push
call
dec
xlat
test
mov
ins
jns
dec
xchg
lock
cmp
(bad)
scas
ret
daa
out
mov
inc
icebp
mov
pop
push
push
scas
cli
cmp
and
xlat
push
inc
inc
mov
cmps
sar
sbb
(bad)
dec
xchg
jo
pop
fistp
mov
xchg
mov
add
sar
hlt
and
xchg
jmp
jl
cmp
cmp
mov
pop
(bad)
movs
push
pop
mov
inc
in
nop
xchg
ds
lahf
mov
sbb
jmp
dec
stos
sbb
sbb
mov
xchg
pop
rcr
test
fist
xor
mov
ret
mov
stos
dec
pop
sbb
jnp
dec
jne
out
sar
mov
and
sbb
aad
out
or
mov
mov
adc
int3
jg
adc
ret
shr
cmp
and
fist
lods
pop
jg
cmp
sub
ret
je
jecxz
js
jbe
and
mov
adc
(bad)
cmp
in
addr16
or
ret
jp
pop
pop
cmc
push
mov
pop
sbb
mov
jne
add
and
adc
xchg
inc
cmps
or
int
sub
shl
nop
in
xchg
add
pop
in
test
pop
push
shl
test
mov
movs
iret
sbb
pop
scas
inc
fs
sbb
cmp
inc
adc
or
xchg
mov
mul
push
push
mov
mov
dec
mov
(bad)
(bad)
aam
inc
and
adc
pop
loope
or
and
lods
cmps
sbb
leave
adc
ret
iret
ret
pusha
mov
jbe
mov
nop
cmp
add
popa
dec
dec
xchg
push
mov
popf
and
rcl
xor
addr16
mov
inc
push
push
retf
fimul
stos
mov
icebp
push
adc
mov
push
pop
pop
imul
mov
mov
sub
cmp
outs
scas
ffree
push
arpl
cmps
adc
jo
jns
les
push
dec
dec
sub
sar
imul
or
int
loop
xchg
daa
sti
(bad)
inc
dec
leave
shr
aam
mov
push
jmp
jo
hlt
shl
push
out
cmp
jl
cmp
and
(bad)
jns
cmc
imul
xchg
cli
fisubr
mov
xchg
xlat
or
in
inc
jl
repz
add
call
(bad)
(bad)
jmp
clc
cmps
push
xor
in
push
mov
mov
jecxz
inc
and
cwde
adc
ds
adc
adc
adc
and
js
movs
sbb
jmp
ins
ja
push
iret
jmp
cmp
mov
xor
movs
mov
pop
or
adc
sub
jmp
jg
mov
sti
pop
ds
out
mov
arpl
jae
pop
in
add
push
pop
xor
test
das
cmp
push
lods
mov
add
add
xchg
xchg
mov
pusha
in
stc
xor
into
and
sti
pop
cmps
cmps
popf
stos
mov
imul
ret
cvtps2pi
test
mov
ds
mov
pop
in
inc
icebp
mov
in
mov
inc
inc
sbb
inc
xor
adc
and
pop
fadd
sub
iret
inc
out
(bad)
sub
xchg
jp
adc
lods
repnz
jae
stos
in
and
in
ret
in
aaa
aad
aad
cwde
fidivr
push
cs
sub
fnstcw
test
cmp
fld
jno
push
mov
xchg
mov
adc
fdiv
jl
xor
xchg
call
push
pop
(bad)
and
cmps
(bad)
xchg
stos
in
inc
add
push
aam
in
fs
mov
retf
mov
push
cs
pop
sahf
imul
add
(bad)
cmp
xchg
inc
loopne
outs
sub
push
test
dec
aaa
adc
xor
dec
sbb
adc
mov
cdq
nop
sub
jecxz
sbb
jne
mov
jne
dec
cmc
or
xchg
in
movs
movs
sahf
push
scas
pop
and
mov
bound
inc
sbb
pushf
pop
mov
test
pop
xchg
setnp
ins
(bad)
int3
and
ja
inc
sbb
sub
dec
into
mov
aas
push
push
nop
retf
mov
sub
imul
or
or
xor
push
nop
dec
dec
ja
popf
(bad)
xor
rcr
dec
loop
pop
std
(bad)
lock
sbb
clc
outs
or
xchg
mov
test
neg
sar
pop
lahf
jmp
leave
mov
repnz
mov
dec
out
mov
inc
test
int
mov
xchg
imul
xor
push
fs
icebp
cwde
xchg
ss
cmp
call
sbb
jle
cmp
test
in
xor
mov
push
fwait
outs
(bad)
test
add
lahf
xbegin
mov
jl
push
div
mov
out
nop
imul
or
jp
std
idiv
push
test
xor
cmp
shr
or
push
pop
enter
push
jno
test
jg
inc
(bad)
rcl
outs
and
adc
icebp
inc
jnp
add
js
in
jo
push
add
sar
icebp
repz
scas
sbb
imul
adc
out
push
lea
push
sub
inc
add
test
mov
cmp
sti
out
call
jmp
or
cmp
sar
retf
xlat
jae
sbb
pop
imul
imul
mov
jecxz
mov
aad
mov
int
cmc
or
push
pusha
popf
movs
in
adc
and
cmps
push
arpl
jle
jns
add
adc
test
loop
xor
push
inc
ja
iret
jge
pushf
enter
push
mov
cwde
into
mov
mov
loope
pop
test
inc
inc
fsub
xchg
les
ret
test
inc
inc
pop
inc
xor
xor
movs
je
fidivr
outs
lahf
cdq
or
jmp
mov
aas
pop
or
inc
shl
xor
ins
add
or
push
mov
adc
and
icebp
pop
imul
test
dec
push
mov
push
mov
repnz
int3
pushf
repnz
ret
push
jne
inc
ja
cld
shr
popa
mov
mov
out
jae
pop
scas
mov
(bad)
push
int
and
jne
std
lods
dec
dec
ja
or
mov
enter
mov
fimul
(bad)
ins
ror
sub
cmp
and
dec
xor
pusha
mov
daa
jns
test
inc
inc
push
xor
(bad)
nop
sar
mov
jg
add
add
addr16
or
loope
lds
mov
loope
cmp
hlt
aas
sahf
ins
xchg
xor
jo
push
cs
inc
cmp
add
mov
sub
mov
rcr
or
mov
mov
jl
add
push
sbb
int3
call
inc
lock
jne
fs
sub
movs
pop
loop
or
xchg
rol
adc
add
mov
jb
inc
(bad)
jnp
lahf
imul
pop
aaa
data16
hlt
not
add
cmps
xor
xor
rcr
mov
add
sahf
push
xor
fidiv
pop
ror
pop
mov
ds
out
jge
nop
push
sbb
adc
loopne
jmp
sbb
xor
cwde
mov
adc
and
addr16
push
jnp
popf
and
add
sbb
cmp
stos
popa
mov
retf
pushf
push
into
adc
stos
aad
mov
mov
das
push
inc
outs
fwait
fs
hlt
adc
scas
mov
int3
and
sub
stos
sub
lds
xor
sbb
xchg
sbb
shl
scas
jl
es
cmp
mov
jae
pusha
pop
std
add
pop
or
retf
les
push
sbb
mov
pop
jo
sbb
xchg
addr16
sub
(bad)
pop
dec
sbb
jne
shr
mov
pop
fstp
popf
scas
and
stos
jns
pop
neg
data16
jbe
(bad)
out
jmp
mov
das
xchg
popf
xchg
(bad)
fdivr
xor
add
jmp
or
sub
push
mov
xor
imul
sahf
ins
fidiv
dec
jecxz
inc
shr
fst
out
sbb
popf
fistp
xor
outs
fstp
les
shl
push
fiadd
pushf
mov
pop
xor
mov
dec
inc
jmp
or
popa
mov
stos
inc
sub
push
rcl
adc
sti
push
and
nop
jge
in
sbb
(bad)
in
adc
push
inc
into
pop
test
xor
icebp
push
jmp
out
mov
std
test
dec
xchg
fs
stos
test
pop
stc
jno
sub
and
jp
je
fidiv
int
add
pop
inc
mov
rcl
and
xchg
mov
aam
int3
aam
sahf
test
stos
fidiv
in
arpl
mov
daa
jns
adc
push
lods
imul
test
into
test
jb
repz
(bad)
repnz
mov
push
dec
arpl
das
or
sbb
xchg
gs
jmp
pusha
iret
and
stc
sbb
sub
pop
dec
and
mul
sbb
xor
mov
lds
cld
ret
(bad)
es
xchg
mov
sub
(bad)
stc
fisub
test
sub
xor
xchg
mov
scas
(bad)
shl
mov
jmp
gs
xchg
sub
cmps
xor
ret
neg
and
scas
out
or
popf
lods
jmp
sbb
iret
aad
call
clc
dec
sub
lods
popf
fisttp
nop
dec
rcr
inc
js
mov
xchg
leave
xchg
or
gs
xor
sar
mov
cwde
dec
cli
movs
xchg
(bad)
inc
mov
fisttp
hlt
cmp
jno
test
stos
es
jo
and
enter
sbb
std
mov
xchg
push
push
adc
(bad)
and
(bad)
(bad)
sub
dec
add
movs
mov
movs
jge
ss
cmp
jo
and
mov
mov
xchg
imul
jp
rcl
out
xchg
in
arpl
addr16
push
dec
ffree
scas
cmps
pop
(bad)
rcl
test
or
inc
rcr
lods
push
xchg
jbe
sbb
xor
cmps
rol
ficom
sub
movs
jmp
in
mov
rcr
or
push
jbe
outs
pop
xchg
mov
int3
gs
add
inc
lds
pop
xor
adc
lds
fwait
xor
jge
pushf
dec
xor
shl
xchg
and
aad
call
pop
out
jne
outs
pop
sahf
in
or
fwait
dec
int
sub
lods
push
ins
scas
int
scas
outs
cld
je
add
xchg
data16
or
loop
push
mov
(bad)
mov
sub
adc
out
sar
imul
out
imul
lods
mov
test
pop
add
iret
fdivr
nop
pop
into
(bad)
sub
lods
pop
mov
add
jnp
add
push
sbb
mov
ins
test
loopne
movs
jbe
mov
test
sbb
dec
mov
xor
cmp
mov
dec
cwde
stos
mov
mov
or
paddusb
fisub
xor
cmp
rol
jl
xchg
adc
mov
aaa
sub
mov
lock
fnstcw
sbb
push
dec
(bad)
fwait
stc
imul
rol
fldcw
jp
in
fnstenv
adc
mov
dec
add
mov
fwait
and
int
sti
jmp
mov
test
adc
aam
push
out
dec
retf
mov
push
dec
bound
mov
and
gs
xlat
jbe
xor
cmc
xor
xlat
push
or
cdq
ins
add
mov
stos
mov
rcl
lahf
mov
xlat
mov
sub
je
mov
xor
push
or
ret
(bad)
fldenv
sbb
(bad)
push
movs
aad
call
out
cwde
add
sbb
xor
ror
bnd
xchg
inc
sub
or
out
push
test
data16
push
lock
retf
fdivp
in
arpl
add
mov
mov
xchg
movs
iret
pop
or
fstp
jno
inc
push
jg
addr16
je
mov
push
enter
jns
cdq
lods
inc
cmp
mov
mov
xor
sub
cmps
jg
dec
cmps
aaa
adc
ins
xchg
xchg
int3
mov
pusha
inc
adc
out
and
mov
and
fs
xchg
xor
fsub
jp
stos
cmp
mov
inc
add
daa
xchg
push
mov
mov
jecxz
pop
pop
jmp
push
mov
ss
mov
sar
loope
lods
inc
adc
mov
xor
ror
dec
icebp
loop
jge
push
sub
and
ffree
mov
dec
inc
test
dec
ret
je
outs
add
mov
add
add
mov
test
cli
add
popa
adc
cmp
xor
aam
sub
clc
mov
adc
jno
ret
mov
mov
jg
imul
sub
(bad)
xor
pushaw
lock
or
sub
inc
push
and
jmp
push
pop
cwde
fdiv
test
adc
sbb
ror
mov
stos
xchg
pop
mov
hlt
pop
sti
mov
sahf
jns
mov
mov
cdq
fistp
(bad)
stos
cmps
outs
leave
mov
in
add
lds
xor
out
je
mov
mov
loopne
xchg
scas
cli
cld
and
adc
imul
js
sub
mov
inc
ins
lock
xor
dec
adc
std
es
add
xor
test
push
call
lock
pop
mov
mov
dec
into
mov
adc
pusha
add
mov
ds
ins
xor
int
pop
lds
fsubr
push
fdivr
sbb
xor
push
les
sbb
(bad)
mov
mov
xor
dec
cmp
cmps
fwait
clc
clc
stos
sbb
dec
push
test
cmp
and
dec
std
ret
or
add
stc
mov
mov
dec
xchg
rol
scas
sub
pushf
add
ja
out
mov
shl
movs
and
in
clc
mov
jns
nop
and
repz
inc
jl
xchg
mul
test
repz
data16
cwde
and
or
push
ins
or
dec
lock
gs
ins
mov
or
fcmovu
ficom
cmp
lds
xchg
aad
clc
adc
or
out
xchg
test
shl
cmp
sbb
add
dec
sbb
sbb
ficomp
xor
pop
xor
mov
loopne
(bad)
inc
jl
xor
pop
adc
cmp
pop
mov
and
add
inc
test
cmp
cvtps2pd
cwde
jno
test
sbb
push
fs
sahf
xchg
cmp
fs
push
or
xor
repnz
jecxz
mov
or
(bad)
idiv
mov
dec
dec
add
repz
and
and
xchg
outs
pop
xchg
data16
mov
lahf
inc
ins
sbb
dec
sahf
out
das
es
popa
je
outs
cli
fnstsw
call
test
cmps
(bad)
mov
mov
cmps
jmp
xchg
mov
jns
push
push
pop
outs
cmp
inc
outs
stos
(bad)
cdq
push
loope
adc
test
dec
shl
adc
push
xchg
in
jae
cmp
xchg
sub
jnp
inc
(bad)
jno
call
sub
xlat
push
pop
sub
(bad)
jmp
pop
sbb
push
movhps
inc
mov
mov
nop
jb
jle
movs
mov
push
lods
int3
hlt
push
xor
gs
mov
push
or
cld
jno
push
stc
cs
ins
mov
adc
jb
(bad)
dec
pop
jb
jne
cmp
inc
cmps
and
inc
mov
call
adc
push
lods
mov
stc
xor
sub
outs
jl
js
bound
test
stos
mov
inc
fisttp
cmp
into
stc
iret
pop
popa
neg
adc
cs
sar
add
mov
and
mov
ins
scas
sti
jo
inc
mov
lea
int3
cwde
sbb
xor
outs
push
outs
push
loop
(bad)
rcl
cli
mov
mov
test
xchg
icebp
rcr
repnz
jle
xchg
push
lock
jbe
cdq
add
loopne
push
dec
rcl
out
in
adc
fadd
mov
lods
stos
cmp
jnp
xchg
fcomip
pop
and
jge
and
push
out
aad
in
int3
mov
into
xchg
adc
jns
add
mov
test
sub
das
xchg
cmps
in
loope
pop
cmp
mov
xchg
ret
enter
stos
cmps
cmc
xor
les
loopne
aad
push
fcomp
lock
push
or
xchg
inc
add
sbb
scas
xor
adc
xor
mov
mov
ja
mov
push
dec
jp
xchg
mov
test
xchg
(bad)
fild
mov
js
lods
sbb
stos
xor
jno
and
std
push
mov
bound
(bad)
test
push
nop
xlat
adc
icebp
sbb
fucom
xchg
mov
(bad)
sub
cmp
fs
fsubr
sub
cwde
and
fidiv
mov
mov
popf
jl
movs
(bad)
cmp
sbb
cmp
fs
(bad)
js
or
aaa
mov
xor
or
leave
ja
shl
jmp
(bad)
aaa
mov
xchg
xchg
inc
mov
jmp
imul
sub
fs
push
or
cdq
aaa
icebp
cmc
and
cmps
mov
cmps
cmc
mov
adc
loope
inc
and
pop
xlat
adc
mov
es
and
cmp
sub
mov
call
rol
dec
adc
pop
test
cli
cmp
sbb
add
out
adc
fmul
dec
push
push
in
cwde
scas
fisubr
pop
ins
bound
les
adc
stos
jmp
fcom
push
fild
xor
int3
add
or
xchg
retf
xor
mov
in
jp
lds
mov
mov
xchg
push
ret
push
mov
ss
sub
in
jl
in
sbb
jmp
mov
(bad)
pop
cli
xchg
fild
int3
retf
or
mov
mov
dec
cmp
mov
sti
jb
je
mov
loope
cmc
stos
sub
pop
jae
sbb
and
sbb
push
push
push
retf
fadd
leave
sbb
das
or
(bad)
stos
jg
cdq
add
adc
push
mov
push
mov
pop
sbb
ret
sbb
jle
jg
cmp
dec
fisttp
fldenv
(bad)
mov
mov
das
es
jb
arpl
adc
ja
jae
inc
lds
xchg
xor
jmp
shl
jmp
mov
test
cmp
cli
fwait
pop
outs
sbb
mov
sbb
in
lahf
shl
shr
jbe
cli
xlat
gs
pop
push
mov
xchg
jle
shl
mov
sbb
pushf
clc
shl
adc
push
fs
fstp
aaa
cmc
rcl
cmp
fsubrp
xor
lea
push
aaa
push
sub
cmp
pop
fwait
shl
fcomip
call
adc
cli
es
pop
pushf
cmp
sub
in
popf
loope
mov
lock
loope
push
je
cmp
ds
out
jle
pop
shl
loop
jo
and
fidivr
sub
movs
in
adc
push
sub
xlat
cmp
mov
das
je
mov
mov
or
mov
and
(bad)
pop
pcmpeqb
mov
into
std
sub
or
retf
imul
arpl
add
loop
loope
(bad)
jl
mov
cwde
sbb
xor
dec
jge
push
test
lahf
loope
mov
and
int3
pop
fiadd
int3
fsub
rol
pop
mov
cdq
pop
pop
mov
enter
and
or
sti
push
dec
pushf
pop
mov
(bad)
push
jmp
add
mov
push
shl
hlt
cwde
shl
inc
xchg
dec
call
cmp
int3
add
lock
test
aad
(bad)
mov
push
test
mov
jmp
sti
sbb
push
sbb
and
sar
es
inc
jecxz
shl
push
and
sbb
xchg
pushf
inc
ret
inc
loopne
cmp
cwde
push
in
lds
movs
jl
dec
punpckhwd
pop
adc
ficomp
std
mov
mov
repnz
repz
out
aam
xchg
xor
inc
and
adc
push
fcmovnu
fcom
call
cmp
retf
lods
shr
out
ret
add
aad
lock
push
add
repz
sub
aaa
adc
fs
xchg
inc
push
in
jne
mov
sub
sub
ss
push
cmp
push
or
(bad)
push
push
rcr
(bad)
mov
push
or
ret
mov
test
fwait
shl
pop
loop
scas
mov
push
cmp
mov
cmp
test
adc
mov
mov
cmc
shr
dec
inc
lahf
xchg
loop
int3
mov
jle
mov
xchg
stc
sar
fwait
stos
sub
into
scas
sti
pop
pop
hlt
push
jne
xchg
jno
sub
adc
jle
cli
shl
adc
retf
int
rcl
jmp
jo
in
inc
mov
fild
sub
stc
jp
and
ret
push
and
cmp
push
xchg
out
je
mov
xchg
ret
xchg
xor
jmp
loopne
outs
adc
and
dec
rcl
int
jae
dec
fbld
xor
lods
data16
xlat
inc
(bad)
jne
xor
push
xor
test
retf
and
scas
cmps
in
fidivr
jno
ror
stc
jmp
ret
and
(bad)
retf
data16
aad
fmul
call
(bad)
push
fstp
mov
aam
cwde
or
and
mov
or
push
or
rcr
bnd
outs
pop
out
push
pusha
xchg
inc
popf
test
loope
push
mov
loopne
sub
pop
outs
daa
pop
sti
push
adc
(bad)
mov
shl
scas
sbb
adc
rcl
mov
mov
sbb
jmp
cmp
pushf
push
xor
add
cmps
daa
or
lods
jne
pop
xchg
loop
xor
inc
icebp
(bad)
jae
repnz
ja
xchg
add
xchg
mov
push
scas
xlat
into
cmovbe
push
ds
(bad)
or
clc
mov
inc
fstp
xchg
cmp
retf
cmp
xor
dec
mov
sub
popa
shl
data16
push
(bad)
jo
shl
cdq
or
arpl
and
test
dec
cli
mov
sahf
js
lds
cmp
cmp
inc
dec
int3
repz
push
lea
fisttp
adc
xchg
push
aas
jbe
shl
dec
mov
(bad)
in
sub
or
push
cmp
ins
mov
jge
test
mov
in
cld
push
out
mov
sbb
mov
test
bound
jmp
sbb
stos
inc
imul
adc
lahf
push
popf
xchg
mov
mov
mov
in
xor
cmp
dec
and
cmc
stos
push
mov
add
mov
pusha
pushf
mov
sbb
call
jp
mov
shr
mov
inc
jg
mov
lock
mov
popf
dec
xchg
addr16
js
pop
pushf
repnz
clc
adc
push
add
jae
jmp
add
jns
mov
div
frstor
cdq
cmps
push
lods
imul
dec
and
add
fistp
(bad)
cmp
mov
ja
pusha
hlt
inc
xor
and
pop
bnd
rol
mov
dec
je
mov
xor
test
push
inc
and
ins
cld
adc
push
jmp
imul
loopne
cli
cmp
sbb
sbb
inc
push
add
or
jle
call
and
jl
inc
cmc
dec
add
inc
js
and
and
jno
shl
std
ds
nop
mov
into
jns
loope
shl
add
ficom
inc
sbb
inc
das
inc
mov
mov
outs
mov
fucomip
stos
add
pop
sbb
das
sub
push
mov
push
xor
aam
shr
dec
int
mov
data16
and
fcom
mov
into
lahf
loop
jae
shl
mov
jle
mov
ins
in
pop
test
rcl
mov
xchg
ret
(bad)
shl
jbe
push
loope
not
sub
jp
icebp
jmp
xor
fild
xchg
cmp
push
pop
or
pop
mov
jnp
xchg
les
push
adc
sub
das
push
adc
sahf
retf
cdq
or
sahf
and
gs
test
stos
or
fist
push
fsubr
cmp
lahf
pop
adc
pop
(bad)
lahf
add
mov
mov
inc
add
mov
push
loop
daa
dec
pushf
mov
ds
sub
jae
shr
xchg
sub
addr16
cmc
fidiv
bound
xchg
repnz
mov
adc
mov
sub
test
jae
daa
sbb
cdq
inc
xchg
lds
cmp
sbb
in
sbb
mov
sbb
mov
lock
arpl
push
push
dec
pushf
scas
lahf
popa
push
push
lahf
inc
xchg
xor
or
mov
mov
jo
sub
unpcklps
sbb
ins
xor
mov
ret
ret
pushf
mov
pop
sub
xor
rcr
fdivr
inc
xchg
outs
cmp
push
pushf
inc
test
add
les
sbb
mov
xchg
sub
jmp
cmps
inc
and
lock
sub
enter
mov
push
jb
xor
leave
int3
and
mov
sbb
push
jecxz
es
xor
jns
dec
and
adc
inc
sbb
jp
jne
out
jno
je
rcr
leave
mov
fs
das
in
lea
movs
fwait
les
sub
mov
cld
shl
jmp
lods
les
push
repz
or
cs
mov
pop
arpl
jns
mov
fbld
push
sub
cmp
or
xlat
stos
in
aam
ins
sbb
mov
clc
xchg
jge
pop
mov
push
jge
stos
cdq
mov
adc
pop
ret
dec
push
cwde
jmp
inc
iret
xchg
ja
inc
jmp
xchg
or
dec
mov
cmp
add
xor
into
xchg
add
xchg
into
push
inc
pop
sahf
inc
cmps
fnstenv
push
and
xchg
shl
hlt
add
jns
sbb
xchg
adc
push
adc
pop
and
jae
fs
mov
push
pushf
and
int
aad
or
imul
outs
test
add
sbb
xlat
add
in
pushf
hlt
or
test
xchg
pop
(bad)
cli
xchg
cs
lds
push
fidivr
out
loope
jbe
aaa
cmp
sahf
or
sub
xchg
xchg
cmps
dec
mov
inc
mov
xchg
push
or
xchg
daa
int
(bad)
jge
xlat
xchg
fnstsw
enter
in
xchg
call
and
jmp
sbb
es
add
xor
(bad)
out
stc
nop
pop
or
sbb
dec
into
repnz
inc
jne
push
(bad)
shl
sub
gs
add
mov
lock
int
daa
adc
pop
adc
mov
aam
mov
mov
cli
adc
push
push
sub
call
xor
repz
push
push
or
stos
cld
out
dec
mov
or
movs
loopne
push
rol
xchg
mov
and
add
add
and
jb
add
add
stos
sbb
cmps
and
dec
ret
pop
(bad)
mov
ins
xor
fld
adc
sbb
loope
dec
xchg
fdiv
mov
and
xor
cmp
push
mov
mov
jge
cli
dec
jle
jmp
jnp
js
cmps
pop
scas
stos
or
xor
sbb
mov
shr
dec
out
aas
scas
mov
lods
or
pop
mov
cs
jp
sar
mov
jo
adc
mov
mov
or
jg
cs
sar
xor
xchg
cmp
ss
daa
and
push
cmp
or
mov
inc
pop
inc
into
mov
loop
das
cmp
outs
push
sub
sub
mov
out
inc
call
dec
cmp
adc
mov
int3
popa
cmp
loopne
shl
bound
lods
fwait
mov
ret
shr
stos
pop
sbb
je
pop
arpl
sub
xchg
arpl
fsubr
add
sub
mov
dec
rol
jo
or
mov
jo
out
mov
mov
pop
xor
xchg
scas
adc
jne
sub
mov
cwde
aas
pop
std
pop
xchg
rep
retf
test
xor
xchg
push
mov
pushf
dec
dec
add
in
inc
cdq
mov
push
lods
mov
mov
mov
sbb
adc
adc
pextrw
xor
(bad)
xlat
push
xlat
ins
ds
idiv
(bad)
push
mov
popf
pushf
add
sbb
sub
push
lods
imul
aas
cmc
cmp
ja
jnp
xchg
ret
(bad)
fsubr
inc
xchg
ss
jno
jmp
cs
iret
mov
pop
cmp
nop
test
jnp
fnstenv
mov
retf
js
pop
imul
lds
xor
dec
jecxz
jp
inc
ja
in
cld
movs
jp
movs
into
(bad)
xchg
sar
leave
add
outs
test
std
pop
aad
jmp
or
neg
push
stos
sub
enter
shl
lea
movs
jle
push
mov
push
cmp
test
bound
inc
push
test
xchg
jge
imul
das
mov
lods
push
mov
and
or
xor
and
xchg
out
gs
xor
inc
repz
test
sub
xchg
pop
sub
add
push
jb
sbb
in
(bad)
push
push
jns
sbb
or
pop
in
movs
jl
mov
mov
sahf
fldcw
jbe
sbb
test
xor
retf
out
jecxz
sbb
ficomp
cs
in
pop
movs
sbb
bound
mov
call
cwde
pop
(bad)
cdq
int
push
jle
push
xchg
add
pushf
in
jmp
fwait
mov
ins
pop
cmp
data16
bound
(bad)
test
xor
sbb
fucomi
add
jmp
stc
outs
xchg
daa
ret
mov
in
cmps
push
int
pop
fadd
jp
nop
(bad)
jno
xor
stc
fwait
adc
data16
mov
into
outs
out
mov
mov
inc
int3
stos
fmul
mov
cwde
(bad)
dec
and
push
mov
aas
aam
push
inc
and
cmp
ds
push
dec
push
sub
rcr
sbb
jecxz
adc
gs
js
xor
mov
daa
ret
mov
das
pop
xchg
dec
sar
cld
adc
cli
ficomp
xor
push
int3
sub
test
call
cld
inc
add
(bad)
push
mov
ficom
push
jecxz
cmps
inc
pop
sbb
sbb
movs
lods
outs
mov
cmps
pop
sub
mov
aad
jae
aas
bound
mov
aaa
into
fucom
stc
mov
jbe
idiv
ds
add
outs
(bad)
icebp
add
or
jmp
sbb
imul
dec
aad
fwait
nop
push
mov
sub
ja
inc
add
jo
jecxz
icebp
aad
pop
jmp
adc
retf
cmp
jb
out
stos
data16
das
(bad)
(bad)
(bad)
aas
int3
or
mov
xor
ins
xchg
push
mov
jno
push
xor
jl
(bad)
mov
bound
adc
jl
fadd
data16
push
add
jmp
das
xor
jle
jg
(bad)
sub
std
ret
bswap
cmps
cmp
xlat
cdq
(bad)
sti
cmp
dec
out
fucomp
das
push
bound
inc
mov
mov
stc
push
xor
shl
push
sub
bound
adc
pop
sbb
cmps
leave
pop
inc
mov
and
repnz
pop
xchg
xchg
imul
retf
int
jle
push
adc
xor
mov
jl
jg
pop
push
jnp
mov
xor
retf
test
(bad)
scas
je
(bad)
pop
mov
add
mov
cld
hlt
test
inc
push
stos
js
cmp
mov
es
push
mov
not
je
mov
mov
sbb
mov
or
pop
xchg
xor
sub
div
mov
popf
jle
sar
in
xchg
inc
sti
jns
scas
popa
cmp
cmp
aad
dec
movs
movs
jnp
loopne
pushf
in
pop
je
push
int3
push
pop
movs
hlt
cmp
(bad)
mov
sbb
lea
dec
loope
loop
ds
cli
xchg
add
push
fstp
pop
fcom
add
aad
add
push
xchg
pop
and
ja
int
xchg
or
add
ror
pusha
jb
ins
mov
push
(bad)
(bad)
repz
gs
xchg
mov
cmp
into
(bad)
movs
stos
dec
jnp
imul
neg
xchg
lea
fcomp
cmc
stos
inc
lods
pop
clc
fwait
mov
es
mov
pop
(bad)
mov
xlat
call
push
mov
inc
push
push
and
imul
hlt
or
inc
inc
ret
and
sub
cs
add
scas
adc
sbb
pop
aam
mov
adc
mov
fsub
or
jae
xlat
pop
pop
pop
xchg
out
(bad)
mov
ja
dec
test
lahf
pusha
jno
add
sar
and
inc
(bad)
mov
mov
int
(bad)
push
pop
out
jecxz
adc
inc
mov
inc
into
sahf
and
mov
jg
(bad)
jle
xchg
imul
jo
ret
sub
pop
call
test
arpl
dec
(bad)
mov
xchg
xchg
xor
lods
adc
mov
sbb
(bad)
inc
pusha
mov
mov
cmp
mov
loop
jp
rcl
dec
in
cmc
add
dec
dec
popf
daa
je
jnp
push
adc
fiadd
pop
xchg
add
xor
push
ins
mov
in
rol
mov
pop
icebp
add
mov
push
int
imul
add
pusha
mov
es
push
and
ins
dec
push
loope
jge
jle
sub
or
arpl
hlt
mov
or
mov
cld
mov
shr
shl
lock
cmp
mov
xor
aam
lock
mov
loope
pop
addr16
adc
call
adc
sbb
adc
in
xor
sahf
movs
push
and
int
push
adc
aam
cmps
push
push
fs
ins
repz
xor
sbb
mov
cmps
jmp
jg
push
mov
in
loop
xchg
adc
or
je
sahf
push
cmc
mov
mov
add
pop
inc
stc
stos
pop
in
loop
or
movs
push
js
cld
and
fs
push
add
pusha
dec
aaa
add
stos
ficom
lock
test
push
(bad)
cli
(bad)
in
add
dec
jo
mov
mov
mov
jb
push
clc
add
jne
xor
pop
sbb
shl
pop
xor
in
xlat
call
sub
pop
jne
mov
imul
dec
mov
pop
mov
out
ror
scas
pop
loop
and
ss
jmp
dec
sbb
call
adc
mov
pop
leave
jge
cmps
add
sbb
xchg
jl
out
dec
xchg
mov
int
fs
mov
fsubr
outs
xchg
addr16
fcom
push
mov
add
mov
int
imul
ja
add
test
imul
daa
stos
fwait
xchg
or
jo
xor
xlat
pop
(bad)
push
scas
or
mov
mov
sar
jle
fcom
xchg
jmp
inc
cmp
(bad)
cmp
aad
fadd
in
ins
inc
dec
pop
arpl
in
add
int3
pop
jns
inc
aaa
test
aaa
jns
arpl
icebp
sbb
test
mov
pop
fisub
pusha
xor
loop
out
pop
push
ins
imul
add
inc
inc
dec
arpl
in
jmp
call
rcr
xlat
cs
inc
stos
mov
push
imul
push
push
jmp
sbb
inc
inc
add
icebp
arpl
push
repz
mov
(bad)
pop
push
add
cmps
push
(bad)
lock
mov
scas
lods
in
cmp
mov
std
or
pop
xchg
outs
and
push
ss
iret
dec
loope
add
jnp
pop
add
scas
dec
xchg
icebp
pop
test
iret
ss
stc
or
dec
push
ins
test
sahf
add
sub
lock
mov
push
loopne
xchg
xlat
ss
scas
jbe
pop
mov
outs
adc
mov
dec
lock
cmp
inc
(bad)
in
pop
sbb
js
aam
sub
add
arpl
pop
xor
push
mov
test
clc
adc
or
mov
and
cwde
jne
fs
call
retf
arpl
movs
inc
and
cmp
bnd
mov
in
lods
mov
imul
les
jo
sbb
push
xor
cmp
xchg
add
daa
xor
and
lds
in
sar
lahf
dec
xchg
cmp
adc
lds
sbb
jmp
retf
ss
scas
mov
mov
mov
jp
adc
or
addr16
jp
jp
push
call
sbb
into
arpl
sbb
xchg
fld
inc
scas
xchg
fwait
cwde
das
nop
jp
mov
add
rol
and
jb
mov
push
or
fisttp
add
fwait
adc
dec
push
sbb
add
sub
sti
xor
xor
jp
popf
loop
jp
retf
cwde
cmc
repz
out
mov
mov
mov
or
push
lea
jbe
mov
push
cmp
adc
cdq
popf
dec
mov
test
dec
ja
xlat
aas
or
outs
stos
pop
cmp
pop
das
sbb
leave
add
in
scas
jge
(bad)
(bad)
jecxz
sar
inc
mov
fxch
cmp
shr
mov
(bad)
movs
(bad)
xor
xor
xlat
cmc
stos
mov
mov
retf
pop
call
jne
ret
cmp
shl
cmp
lock
loope
frstor
fbld
mov
(bad)
push
data16
mov
sub
lock
(bad)
in
not
add
das
enter
neg
jmp
mov
fisttp
es
ins
xchg
sub
xchg
inc
outs
xor
adc
(bad)
mov
mov
add
in
xchg
in
xchg
(bad)
mov
iret
in
mov
push
mov
mov
xchg
cmp
in
add
es
sahf
out
and
jp
jmp
fs
mov
pop
xchg
xor
pop
jb
ins
imul
adc
push
jp
jecxz
sub
cmc
(bad)
mov
add
sbb
fisttp
loopne
iret
mov
retf
movs
enter
addr16
mov
js
outs
loop
push
jle
retf
xor
dec
scas
out
ss
in
adc
mov
jno
push
cdq
xchg
call
imul
test
cmp
lds
mov
push
call
test
add
(bad)
mov
mov
and
cli
test
push
mov
jae
repz
jne
jp
xchg
mov
and
out
push
cwde
xchg
shl
xchg
out
lea
adc
or
loope
xor
mov
dec
inc
shl
mov
cmp
fwait
jbe
pop
test
out
cmp
clc
adc
xor
jno
aas
shr
inc
retf
sti
mov
xor
sar
(bad)
(bad)
mov
(bad)
cmp
into
mov
push
test
and
add
sub
shl
popa
push
test
sub
sbb
pop
leave
add
fld
jb
loopne
loop
shl
mov
and
scas
ret
cmp
sti
inc
cs
in
std
scas
in
jo
add
gs
dec
test
jmp
js
les
rcl
jp
and
repnz
dec
add
out
xor
loop
xchg
dec
iret
jne
ins
loope
adc
cdq
mov
xor
out
lock
xchg
repz
mov
ror
ins
iret
jbe
or
inc
dec
mov
dec
fcom
lods
loope
or
push
stos
add
mov
mov
out
not
jnp
stc
inc
mov
jge
lea
inc
xchg
je
test
je
stos
ins
cwde
xchg
jo
fldcw
in
jmp
mov
sbb
jae
mov
sub
pop
popa
cmp
fwait
pop
iret
pop
push
pop
inc
popf
rcl
jo
jecxz
aam
pop
mov
jmp
(bad)
jno
xchg
pop
cld
sub
and
pop
rol
fdiv
(bad)
imul
ror
pop
and
lods
lea
hlt
pop
shl
imul
or
jle
pop
mov
sbb
dec
sub
out
jno
dec
sbb
inc
or
pop
jns
cmps
jg
mov
(bad)
icebp
es
sub
movs
daa
mov
cs
adc
fcomp
push
fdiv
push
sar
out
cwde
(bad)
icebp
xor
stos
mov
sub
ss
scas
and
sbb
pop
sbb
loopne
bound
sbb
mov
inc
das
pop
fcomp
mov
pop
push
pop
cli
ins
dec
xchg
pop
adc
cmp
xor
mov
(bad)
xor
xchg
sub
ror
xchg
sub
jl
sub
jae
(bad)
mov
ds
mov
or
jecxz
imul
add
into
xchg
loope
push
push
retf
mov
pop
leave
jne
retf
dec
mov
lods
and
xchg
mov
push
adc
loopne
push
out
fcompp
adc
jmp
daa
xor
sub
push
js
imul
jge
bound
js
pop
fs
sti
arpl
mul
aam
dec
mov
ins
mov
pop
das
mov
xchg
shr
imul
jmp
jns
cs
add
adc
sub
add
xor
cmovp
test
pop
and
xor
in
jle
aas
dec
icebp
and
dec
xor
(bad)
jno
xor
dec
mov
xchg
mov
dec
ins
pop
jp
out
lock
(bad)
es
mov
xor
(bad)
or
cmc
lods
push
sbb
xchg
or
or
or
ret
or
rcl
dec
pop
mov
aam
mov
sub
pushf
jmp
imul
sub
lea
sub
mov
std
and
mov
sub
mov
mov
stos
cdq
dec
jo
pushf
cli
icebp
dec
or
daa
rcr
dec
sub
xchg
ss
jns
leave
inc
test
mov
jo
dec
ffree
test
jbe
aas
mov
inc
sub
and
sub
sub
pushf
inc
cmc
loopne
fwait
dec
cwde
data16
fisubr
add
scas
loopne
aad
adc
xchg
lods
mov
dec
stos
lods
xchg
shl
inc
mov
inc
dec
jg
aam
jb
das
sbb
pop
out
stos
add
in
cs
cwde
and
cmp
cmp
sti
mov
test
adc
jmp
cmps
mov
cmp
test
mov
outs
sbb
dec
and
xor
dec
push
jle
es
test
mov
mov
push
or
(bad)
ja
ds
dec
fisubr
push
(bad)
jge
push
call
dec
jno
jno
sar
sar
fs
push
xchg
gs
mov
lods
mov
pop
test
dec
jp
sub
dec
inc
int3
xchg
sub
pop
je
jnp
mov
or
sub
add
mov
adc
and
pop
mov
leave
jo
xchg
dec
xchg
mov
and
(bad)
jns
fmul
cmp
jl
mov
jno
mov
and
(bad)
std
jb
pop
lds
or
idiv
aam
rcl
add
xchg
leave
repz
xor
xor
mov
ds
or
and
mov
pop
outs
ins
sub
xchg
aaa
je
aam
mov
(bad)
inc
inc
pop
push
jmp
iret
or
cs
xlat
jp
retf
loope
(bad)
jg
pop
mov
mov
retf
mov
popa
mov
fstp
add
sar
in
out
imul
adc
and
and
pop
daa
iret
ret
daa
retf
mov
cmp
push
stos
test
pop
adc
les
fstp
jb
jge
mov
push
inc
push
jo
sub
pop
push
scas
or
pop
push
mov
int3
ins
pop
je
inc
mov
add
rcr
enter
daa
outs
das
repz
loope
or
(bad)
xor
jo
mov
aam
sub
stc
mov
pop
add
adc
cmp
aas
lahf
test
fld
push
adc
das
not
imul
add
xchg
ss
js
mov
mov
imul
jp
(bad)
rcr
pop
ficomp
test
pop
retf
push
in
and
lods
(bad)
inc
add
int
pop
fmul
jo
(bad)
cmc
jmp
stos
in
mov
jmp
cld
jmp
xchg
js
jbe
cmc
pop
dec
gs
mov
jle
mov
and
stc
fisub
push
outs
nop
popf
inc
adc
icebp
dec
mov
push
or
cld
popf
mov
test
xchg
push
jns
(bad)
div
mov
mov
fcmove
lea
push
xor
xchg
mov
pop
rcl
or
or
push
popa
and
pop
sub
data16
sar
mov
inc
push
out
xor
mov
mov
lock
stc
fild
in
iret
pop
outs
xor
push
cs
popf
shr
dec
mov
push
jge
rcl
mov
mov
sub
js
in
int
inc
loop
jne
gs
jmp
mov
test
push
add
enter
dec
push
xchg
hlt
ret
out
fmul
mov
lods
test
xchg
inc
fsub
jecxz
test
or
das
sbb
push
bound
jmp
(bad)
js
rol
mov
xchg
push
adc
jo
push
ss
push
cli
mov
in
out
das
sti
fistp
add
jmp
mov
mov
das
mov
faddp
hlt
and
fs
clc
outs
loope
fisub
or
data16
fcom
inc
push
push
stos
inc
inc
cmp
repnz
and
ins
jo
loope
cmps
mov
inc
inc
push
dec
daa
(bad)
loope
addr16
in
mov
call
pop
in
les
std
loope
jg
ficomp
jns
ja
push
rsqrtps
xchg
movs
inc
jns
neg
shr
rcr
icebp
jp
fsub
shr
dec
sub
pop
fistp
dec
jp
ret
mov
mov
cs
int
out
pop
cmp
cmpxchg
mov
fwait
jle
cdq
fmulp
xchg
mov
or
movs
jne
xlat
xor
jo
mov
popa
movs
sub
xor
test
cdq
rol
jge
or
sti
jl
xor
in
and
in
ja
dec
ror
rol
ss
jae
push
jl
jns
sub
inc
jl
inc
or
pop
rcl
imul
sub
adc
fdivr
rcl
xchg
add
pusha
mov
lock
sar
ror
dec
lock
xor
xor
(bad)
jb
pusha
mov
ja
dec
das
addr16
ja
outs
add
sub
std
jmp
pop
inc
pusha
or
xor
add
cs
inc
mov
sbb
arpl
jne
nop
jg
jmp
rcl
aad
mov
jno
inc
test
arpl
pop
xchg
mov
inc
cld
adc
test
pop
ret
mov
neg
aaa
dec
sub
and
loope
mov
pop
or
add
xor
mov
ret
push
(bad)
cli
add
repz
iret
pop
pop
cmp
(bad)
pop
test
rcr
ret
rcr
pop
cmps
fbstp
pop
add
sar
xchg
int
xchg
test
cmp
fadd
in
inc
jmp
lods
mov
or
add
xchg
jae
ror
and
push
push
xchg
and
dec
pop
pop
hlt
xor
adc
out
shl
mov
jb
retf
pop
push
sub
cmps
jns
arpl
jbe
and
add
test
aad
mov
adc
sbb
cs
add
outs
inc
dec
push
push
ins
push
scas
sub
lahf
fidiv
fiadd
je
push
fs
or
adc
mov
xchg
scas
scas
sbb
jp
cwde
push
ror
aaa
lods
mov
mov
cld
jp
adc
mov
push
sub
ret
sti
add
mov
mov
cli
add
and
or
arpl
jmp
and
push
and
and
fdiv
addr16
not
mov
neg
jbe
fdiv
je
xlat
bound
retf
mov
mov
stc
jecxz
or
test
jp
sahf
inc
xor
dec
cmc
test
shl
dec
jmp
xor
jb
test
(bad)
ja
mov
add
pop
retf
cld
scas
(bad)
xchg
ss
fldenv
jmp
stc
push
hlt
aam
and
mov
jle
test
mov
scas
(bad)
out
sub
daa
fld
imul
addr16
lods
popf
ss
dec
bound
out
mov
sbb
jb
dec
call
inc
in
imul
movs
out
pop
cmp
stos
out
mov
stos
into
fcmovne
xchg
xchg
mov
jecxz
lds
jmp
aad
xchg
neg
call
pop
mov
and
daa
or
xchg
mov
in
xchg
stos
hlt
mov
rol
jecxz
lods
jno
mov
out
(bad)
call
push
jnp
stos
inc
es
dec
ins
mov
mov
push
movs
pop
add
pop
jl
scas
push
pop
adc
jmp
test
mov
stc
sub
out
xchg
ret
(bad)
jnp
mov
test
bound
jne
cmc
lods
xor
enter
pop
pushf
ss
lds
das
adc
pushf
leave
adc
sub
fisttp
rdtsc
rcl
jle
imul
pushf
sbb
out
imul
fcom
lods
cli
mov
std
adc
addr16
fcom
xchg
and
bnd
cmp
push
repz
sbb
or
mov
popa
(bad)
pop
std
leave
add
sbb
cmp
xlat
icebp
push
fdiv
mov
push
jno
dec
(bad)
jnp
test
inc
(bad)
aaa
mov
and
xor
jnp
pop
dec
adc
xchg
pusha
push
cs
pop
mov
jge
fild
pop
sub
cmp
mov
jecxz
mov
out
dec
jl
cs
aad
inc
pop
mov
loop
stos
in
sbb
retf
xchg
cmp
xchg
lods
xor
mov
mov
loopne
adc
and
pop
out
jns
fcmovnbe
xchg
data16
aas
mov
clc
and
xor
jg
and
and
xchg
aaa
outs
clc
jbe
push
lds
scas
xchg
aaa
daa
or
xchg
lahf
adc
push
cmp
dec
add
sbb
inc
ror
hlt
icebp
fisubr
and
lea
call
mov
fdiv
les
stos
dec
jp
and
cli
jg
cmp
push
arpl
jns
push
movs
(bad)
xor
mov
inc
pop
movs
push
cld
loopne
aad
gs
in
mov
mov
fwait
mov
xlat
out
add
push
scas
mov
push
scas
cld
pushf
jb
or
add
mov
test
inc
mov
cmp
xchg
scas
out
adc
adc
add
(bad)
and
push
sbb
inc
leave
jae
jg
mov
ins
call
cmps
in
jnp
fsub
es
movs
dec
xor
cmp
lods
push
push
jmp
jecxz
or
add
(bad)
imul
adc
adc
mov
adc
inc
push
rol
push
retf
in
imul
test
shl
ins
add
daa
ins
or
dec
dec
and
sub
not
xor
clc
cld
xchg
call
(bad)
rcl
hlt
nop
xor
daa
lods
loopne
xor
jno
xchg
cmp
mov
or
scas
shl
test
int
jecxz
into
dec
xchg
cs
sbb
stos
adc
fadd
mov
jge
adc
enter
add
cs
shl
shl
ja
lds
inc
js
test
push
mov
ror
pop
mov
sub
aaa
xchg
cmp
mov
mov
(bad)
shl
mov
cmps
test
fwait
pop
adc
inc
sti
push
repnz
fimul
or
cmp
xchg
dec
or
adc
mov
or
xchg
jp
test
vpunpcklbw
sub
cmp
jb
xchg
adc
cmps
add
lds
mov
jmp
xor
jo
in
jb
lock
pusha
cmps
js
fild
pushf
mov
fadd
cmp
sbb
or
mov
int3
ja
jmp
pop
xchg
pop
inc
sbb
frstor
mov
dec
cmp
mov
or
pop
jnp
(bad)
mov
ret
ss
dec
xlat
sahf
in
pop
or
mul
mov
sub
outs
push
retf
xor
repz
xchg
scas
frstor
stos
fmul
jnp
enter
repnz
push
movs
jl
dec
scas
push
sbb
fdiv
mov
add
adc
rcl
add
mov
xchg
jb
jne
ins
ss
jp
cmp
jne
and
rcl
sub
cmp
cli
pushf
mov
sub
pop
jnp
(bad)
nop
les
cmc
out
int
mov
repnz
mov
data16
xchg
pop
mov
(bad)
jg
popa
jmp
push
jae
les
loope
mov
push
call
mov
ins
push
(bad)
fwait
xchg
test
repnz
repnz
and
stos
daa
inc
push
cmp
out
mov
push
test
jmp
mov
sti
add
aad
cmp
call
lea
(bad)
xchg
add
xor
dec
jmp
xor
jecxz
mov
jl
js
push
push
mov
addr16
shl
jg
outs
shl
lods
cmc
sub
dec
jmp
(bad)
xor
mov
mov
lods
rcl
and
cwde
push
pushf
sbb
inc
pop
push
sbb
mov
dec
adc
(bad)
fldcw
or
sti
mov
pop
jecxz
jo
jb
out
bound
test
aad
mov
or
inc
and
rol
mov
rol
aad
pusha
int
and
xchg
inc
arpl
retf
cli
es
pushf
(bad)
shr
(bad)
fistp
in
sbb
lds
jle
push
mov
iret
(bad)
jno
scas
sahf
cmp
jmp
sub
js
(bad)
xchg
push
xchg
xor
mov
xor
ficom
mov
xor
lods
les
push
pusha
jbe
loop
jae
out
add
fwait
retf
cmp
add
aam
jbe
xchg
inc
add
iret
into
mov
push
adc
inc
mov
mov
and
lahf
movs
mov
mov
mov
mov
xor
lods
jmp
jae
div
lock
push
stos
retf
push
dec
movs
xchg
dec
bound
movntq
jb
mov
repz
sar
test
xchg
jg
mov
ins
dec
adc
movs
add
pop
jo
jecxz
pushf
out
pop
outs
ins
gs
call
lahf
repz
loop
push
mov
inc
or
movs
ret
pop
mov
xor
(bad)
push
popa
fs
test
loopne
sub
sti
outs
mov
add
jne
add
or
popa
repz
sub
cli
fmul
outs
leave
and
xchg
call
inc
jne
pushf
lock
sub
adc
popf
dec
mov
hlt
je
sub
lock
sbb
loope
in
ins
fwait
jge
dec
mov
xor
add
es
sub
addr16
jp
idiv
iret
push
rcr
sbb
pushf
adc
mov
sub
not
stos
test
lea
pop
fdivr
iret
sub
push
or
aaa
or
fs
iret
jge
mov
(bad)
sub
retf
or
mov
push
(bad)
mov
adc
cmps
sbb
push
pop
pop
and
js
xchg
mov
jecxz
int
sbb
imul
stos
lods
aas
or
sub
pop
lock
push
mov
fcmovnu
cmp
loope
pusha
lahf
mov
cwde
aam
xor
adc
int
sbb
sbb
(bad)
fldcw
lock
hlt
shl
or
xchg
push
cmps
leave
sti
shr
(bad)
mov
cld
sub
mov
fstp
out
push
xor
mov
dec
les
mov
leave
std
adc
test
int
jno
sbb
in
imul
push
adc
inc
adc
push
cmp
fist
cmps
sub
or
lock
push
int3
cmps
pop
adc
cmc
push
push
ror
ja
cwde
nop
inc
rcl
ret
in
push
les
jmp
xchg
inc
xcrypt-ctr
cmps
cwde
dec
gs
ss
loopne
cld
outs
and
cmp
lea
iret
cmp
sub
imul
movs
stos
imul
(bad)
mov
jle
jnp
or
sub
repnz
das
lea
pop
or
sbb
and
in
mov
fwait
or
sbb
sub
mov
(bad)
sub
adc
inc
mov
bound
inc
aas
push
add
dec
jg
sub
imul
(bad)
test
jecxz
sar
jnp
pop
(bad)
mov
add
xchg
add
pop
pop
mov
xor
mov
(bad)
mov
mov
cs
shl
out
int
aaa
cmp
sahf
cmps
mov
push
fst
adc
push
(bad)
movs
lods
fwait
les
push
inc
mov
mov
inc
ins
mov
scas
push
cmps
xchg
sub
aad
retf
gs
(bad)
out
ins
int
sub
xchg
cmc
add
hlt
adc
adc
daa
jge
aas
fst
sbb
fldcw
xchg
adc
push
or
adc
lods
inc
(bad)
mov
fstp
push
outs
mov
inc
rol
movs
push
imul
mov
adc
or
pop
dec
clc
pop
add
pusha
scas
jno
test
icebp
mov
repz
mov
xor
ins
fwait
es
imul
mov
scas
std
ret
jmp
cmp
cdq
not
fnstenv
jnp
xchg
jg
(bad)
sbb
sbb
ins
jb
aaa
push
cwde
sub
std
js
dec
sar
jnp
mov
sub
movs
inc
jmp
popf
(bad)
cld
mov
sti
push
daa
js
(bad)
test
loope
in
fidivr
retf
or
in
mov
dec
repz
inc
xor
ror
daa
loope
xchg
push
push
test
xlat
inc
cmp
push
mov
ds
xchg
int3
fs
out
cmp
clc
adc
rcl
rcl
add
(bad)
add
push
and
push
rol
repnz
mov
fs
gs
and
mov
pop
cmp
sahf
lods
push
mov
inc
call
fstp
mov
(bad)
js
mov
fld
ins
call
xchg
lahf
fs
mov
cmps
adc
push
lds
sahf
movs
pop
xor
out
push
xor
sub
hlt
(bad)
lods
mov
and
dec
cmp
mov
ficom
repnz
inc
into
std
mov
add
adc
and
ret
push
or
add
(bad)
jae
call
dec
scas
adc
xor
mov
jg
push
jns
push
push
mov
ja
rcr
sbb
popa
pop
mov
das
push
mov
or
lds
fcomp
mov
mov
je
ins
imul
mov
push
gs
push
call
mov
lock
scas
hlt
and
lods
pushf
cs
ror
jmp
add
xchg
cmp
adc
sub
gs
mov
xchg
loope
(bad)
out
repnz
xchg
and
ja
and
mov
in
sbb
ss
inc
dec
pop
mov
cmp
dec
xor
data16
dec
mov
dec
stos
mov
retf
test
pop
push
or
pop
lods
gs
inc
dec
dec
pop
sbb
retf
and
jne
retf
je
call
xchg
dec
sahf
call
arpl
or
and
or
cdq
int
xchg
jg
fadd
add
xchg
es
xchg
adc
mov
pop
xor
push
sbb
and
cmp
mov
imul
daa
test
mov
push
imul
fadd
xor
into
(bad)
out
out
adc
scas
imul
push
dec
xor
mov
pop
cmp
les
xchg
emms
xchg
xor
leave
jno
int3
repz
cdq
outs
pop
imul
dec
leave
pop
(bad)
pop
mov
inc
or
(bad)
or
push
jmp
or
test
dec
outs
lahf
push
(bad)
sti
xor
xchg
cld
nop
sub
pop
inc
pop
cmp
cmps
inc
dec
mov
lock
inc
scas
enter
push
xchg
jae
div
(bad)
jnp
aam
lods
xchg
in
fs
out
pop
xchg
xchg
enter
imul
sbb
aam
inc
add
test
loopne
push
mov
jp
mov
push
push
xchg
ficom
jge
jmp
in
xor
mov
and
das
mov
scas
cmp
xchg
cli
jns
inc
push
pop
out
mov
add
jp
xchg
loopne
repnz
push
sub
jne
adc
pop
jp
mov
cs
push
fidivr
push
cmp
popa
dec
ins
inc
scas
add
pop
or
out
fs
cmp
jge
xchg
lods
adc
xor
(bad)
out
sub
mov
or
lods
sbb
lahf
push
mov
addr16
mov
outs
test
cmc
retf
dec
dec
ins
jae
jmp
mov
cmps
inc
mov
test
jmp
fcmove
sbb
and
mov
push
movs
ins
mul
test
inc
pusha
mov
push
and
aad
out
mov
jne
ins
jge
push
fsubr
xor
dec
jnp
imul
add
xchg
dec
sbb
xchg
out
pushf
pop
push
adc
and
aaa
scas
scas
jl
inc
sbb
pusha
cld
in
shr
repz
xchg
dec
lods
xchg
or
push
inc
lods
push
sbb
mov
stos
dec
and
pop
push
fisubr
and
out
aam
test
loope
ins
aas
and
or
cmp
rcr
and
call
and
scas
push
lahf
cmp
xchg
sti
jg
dec
imul
(bad)
cmps
push
stos
je
sti
ret
stos
push
inc
ins
pop
ss
adc
cmp
pop
xchg
mov
or
shl
jo
jno
aad
call
push
cmps
push
cmp
in
sbb
dec
dec
mov
sub
sub
das
aaa
fisub
add
inc
adc
mov
sub
push
inc
fistp
pop
jns
adc
fisub
imul
push
frstor
and
out
push
addr16
imul
data16
call
addr16
cmp
gs
das
(bad)
adc
lods
or
mov
pop
jns
gs
push
fst
scas
ja
push
jbe
jp
out
push
push
and
xor
ret
adc
dec
fcomip
mov
test
retf
sahf
aaa
into
gs
not
outs
pop
lahf
inc
daa
(bad)
fidiv
ss
jecxz
fst
ins
shl
dec
xlat
loop
pop
fcomi
inc
stos
je
stos
and
adc
adc
fdivp
pop
ins
test
mov
lahf
cmps
and
mov
xchg
inc
xor
sbb
mov
movs
mov
test
dec
adc
lahf
jb
cmps
imul
mov
ins
pushf
ret
mov
ror
adc
mov
mov
jl
push
xor
push
arpl
cdq
jle
jne
fmul
nop
lds
pop
ret
repnz
jbe
push
inc
sub
mov
outs
push
add
pop
pop
das
int3
adc
sub
call
mov
and
push
(bad)
and
ins
add
xchg
sub
je
mov
xor
mov
ja
push
xor
lea
test
stc
xchg
jp
pop
out
add
shr
mov
aaa
push
lea
inc
cmps
sbb
mov
pop
and
mov
retf
loop
jno
pop
movs
jmp
imul
push
pmaxub
retf
loope
jns
ret
test
stc
mov
cmp
pop
shl
outs
mov
sbb
mov
sub
inc
in
xchg
push
inc
dec
arpl
mov
jne
ins
jp
mov
aad
jmp
fst
xchg
and
pusha
test
adc
mov
pop
pop
push
cdq
sbb
shufps
jns
push
popf
outs
movs
and
out
dec
(bad)
lea
ins
mov
sbb
das
cmp
imul
xor
cs
xor
dec
rol
mov
cli
push
lds
sar
xor
pop
rol
mov
daa
in
sti
iret
add
and
stos
sbb
mov
xchg
or
addr16
inc
ror
adc
int3
cmc
mov
jb
stc
cwde
loop
add
lds
push
jno
int
cmp
into
arpl
enter
dec
arpl
rcl
or
add
gs
sbb
xchg
add
sbb
pop
clc
cmp
mov
sahf
cli
jne
je
(bad)
imul
cmp
outs
das
sti
aam
(bad)
or
inc
out
lods
(bad)
not
in
mov
hlt
jp
frndint
std
rcr
push
ss
ret
mov
mov
and
test
test
enter
lea
sbb
mov
in
xor
ficomp
lods
inc
es
sar
sub
fcom
addr16
inc
xchg
sbb
dec
(bad)
push
in
cdq
lock
mov
mov
add
stc
xor
pop
(bad)
std
adc
cdq
inc
(bad)
fnstcw
pop
daa
dec
push
outs
cmp
bound
xchg
mov
outs
sub
repnz
adc
dec
pop
xchg
lods
cld
addr16
pop
cmp
mov
(bad)
aad
sbb
inc
adc
mov
mov
add
jns
pop
and
inc
pop
cmp
addr16
fwait
addr16
jbe
stos
and
xor
aam
ss
fsub
xor
sbb
(bad)
shl
inc
xchg
lahf
imul
je
push
mov
sbb
dec
pop
sub
(bad)
shl
cdq
in
pop
test
out
aaa
and
je
mov
mov
inc
lock
mov
fdivp
aad
adc
arpl
xor
imul
jl
cwde
retf
enter
dec
xchg
retf
jmp
inc
aam
jmp
mov
enter
fimul
xor
mov
scas
inc
jmp
in
add
dec
push
push
mov
je
(bad)
cmps
fisub
push
push
iret
cwde
imul
fidivr
scas
rol
(bad)
and
loop
cld
jmp
sbb
push
mov
ret
jbe
dec
pop
xor
(bad)
cld
dec
cld
inc
jno
addr16
mov
mov
add
out
rep
out
cmps
pop
mov
mov
pop
je
lods
push
jge
les
pop
arpl
jp
adc
out
push
(bad)
pop
daa
mov
popf
push
push
push
jmp
fdiv
jae
push
push
fcom
(bad)
daa
aaa
cmp
push
fdivr
fs
adc
add
loope
jecxz
push
sbb
or
sbb
popf
inc
hlt
mov
rcl
fs
adc
mov
test
cmps
mov
aad
push
fisubr
and
inc
xor
lods
fs
pop
fwait
(bad)
js
and
cmc
rol
aam
imul
into
xor
or
sbb
mov
push
dec
jmp
pop
inc
outs
and
in
and
in
rcl
mul
jo
inc
mov
iret
movhps
iret
jg
aad
inc
mov
stc
iret
add
test
push
add
mov
icebp
adc
or
sub
adc
out
mov
js
in
mov
add
test
call
movs
mov
mov
pop
push
aam
fdivrp
jns
mov
adc
das
add
pop
in
push
les
scas
test
shr
fstp
mov
movs
push
cdq
in
test
cmp
imul
and
and
out
pop
(bad)
sahf
sbb
ror
mov
popa
les
leave
mov
adc
call
sbb
rcr
cmp
inc
fistp
scas
push
sbb
pop
push
push
je
(bad)
pop
adc
jae
cs
mov
stos
adc
sbb
das
mov
add
cmps
call
sub
lahf
sub
xchg
pop
(bad)
cmp
fwait
ja
or
jo
push
mov
sub
xlat
mov
add
hlt
sahf
pop
mov
cld
dec
jbe
outs
pusha
sti
mov
lds
ret
inc
pushf
adc
xor
ret
(bad)
dec
xor
shl
jp
mov
(bad)
jns
mov
jge
sbb
sbb
(bad)
mov
jl
mov
cmp
lods
stos
add
adc
mov
stos
cmp
test
es
addr16
dec
in
pop
ret
movs
push
jle
and
retf
push
xor
lahf
jge
js
push
aaa
rcr
sbb
mov
pop
jl
cmc
mov
mov
call
cld
stos
xor
arpl
cmps
call
push
push
mov
or
or
xor
jle
inc
out
int
mov
mov
cmc
pop
inc
mov
pop
call
mov
dec
push
fisttp
aas
mov
pop
in
xchg
jecxz
aas
ins
dec
in
test
fist
xor
in
fdivr
or
jl
(bad)
icebp
xchg
ss
mov
daa
out
cmp
stos
add
out
xchg
mov
pop
or
cmp
push
jle
lock
ins
das
sahf
arpl
mov
stos
clc
loope
movs
pop
stc
les
outs
cmp
repz
into
inc
sub
stos
push
stc
mov
retf
rol
or
fimul
imul
out
lock
mov
mov
dec
add
std
mov
mov
repnz
mov
sbb
jmp
xchg
xchg
xor
or
push
cmp
or
std
pop
mov
not
mov
xchg
push
mov
and
and
cwde
push
sub
push
popa
push
jp
or
loop
fld
xor
jmp
in
sbb
popa
dec
dec
outs
inc
dec
call
inc
adc
jmp
arpl
mov
lock
push
inc
jecxz
jmp
xchg
retf
rol
scas
shr
mov
adc
cmp
pusha
jo
outs
push
mov
add
inc
mov
int3
jge
pop
pop
dec
dec
cmps
fnsave
xchg
popf
sub
mov
(bad)
in
rcl
cdq
adc
out
mov
jmp
mov
aas
add
inc
mov
stos
aas
and
addr16
add
movs
mov
xor
fs
test
dec
dec
inc
(bad)
loope
add
xchg
dec
xor
fdiv
xchg
(bad)
test
xchg
pop
add
in
jbe
adc
sbb
sbb
fwait
in
sbb
jg
and
push
sti
ja
cmc
(bad)
lea
mov
xor
push
leave
jb
fisttp
imul
sbb
lock
cmp
test
sub
add
add
nop
clc
mov
aaa
and
xor
and
test
test
cli
cmp
enter
int3
imul
fwait
xor
mov
cwde
push
mov
add
out
or
adc
push
dec
mov
cmp
scas
adc
addps
adc
neg
sub
clc
sbb
mov
sub
pop
aaa
jl
jne
mov
adc
loope
in
add
(bad)
add
xor
ficom
or
sub
fnsave
dec
out
cmp
jae
pop
pusha
enter
or
cmp
adc
or
sub
fild
(bad)
je
cld
pop
mov
xchg
or
pop
loopne
push
xchg
mov
enter
inc
loop
dec
scas
pop
jo
aad
retf
sub
sbb
cmp
aam
mov
fcom
pop
pusha
lods
cmps
jecxz
gs
xchg
out
dec
push
aad
xor
sbb
mov
and
(bad)
fidivr
inc
push
pop
inc
mov
je
in
retf
sahf
or
clc
mov
pop
sub
adc
jmp
jmp
jnp
jmp
mov
jae
mov
ins
lock
or
inc
pop
cmp
and
sub
and
mov
adc
cli
cli
cmps
nop
hlt
aad
xchg
hlt
jae
inc
jns
dec
push
xor
or
xor
test
in
or
pusha
cld
mov
pop
sbb
adc
outs
(bad)
push
mov
icebp
ins
test
jmp
xchg
call
in
(bad)
out
jle
xor
stos
fdivp
test
dec
cmovae
push
into
inc
mov
scas
pop
xchg
sti
leave
push
pusha
shr
push
ret
xchg
and
dec
sahf
enter
test
cwde
cwde
outs
inc
xor
mov
sbb
cs
adc
mov
inc
sub
push
push
out
cmps
sub
push
popa
push
movs
sub
(bad)
mov
fsubr
jge
(bad)
repz
pop
iret
sub
sbb
dec
cmp
into
xchg
les
mov
icebp
rcr
out
ja
xchg
pop
inc
and
jo
test
sub
(bad)
adc
inc
fisubr
jbe
jle
inc
aaa
sahf
movs
icebp
pop
fld
inc
pop
add
xchg
sbb
inc
hlt
popa
popa
fisubr
pop
fs
add
ins
lods
popf
jg
in
hlt
add
(bad)
int
lods
cmps
xor
cmp
jmp
xchg
adc
xchg
in
(bad)
mov
mov
push
xor
adc
add
pop
shl
aas
fnstcw
test
xchg
out
push
retf
mov
test
adc
leave
(bad)
jns
ja
les
ins
iret
dec
xor
pop
adc
or
push
aam
or
iret
pop
cdq
cdq
or
ds
loop
add
mov
or
stos
sub
cmp
stos
jo
js
mov
mov
add
nop
mov
outs
call
sahf
lods
nop
xchg
je
aas
mov
jns
out
sahf
add
mov
push
mov
scas
cmp
xchg
fmul
cmps
mov
pop
mov
cmp
fst
daa
test
add
jg
fs
pop
mov
psrlw
pop
xor
(bad)
fwait
sbb
test
inc
add
add
js
jg
rcl
mov
loop
loope
pop
mov
and
sub
adc
xchg
leave
in
add
inc
aas
sub
aad
push
dec
xchg
rol
retf
xor
lock
or
es
mov
add
btc
cmp
idiv
jge
pop
jl
dec
sbb
push
sbb
cmc
sbb
inc
pop
call
mov
mov
fst
sbb
cmp
push
ds
repz
cmp
sar
add
pushf
rol
lds
jae
icebp
mov
jmp
xchg
sub
ss
stc
inc
sbb
test
jl
mov
scas
inc
mov
mov
inc
push
es
(bad)
cmps
shr
jle
fiadd
ret
fwait
(bad)
mov
fbstp
inc
and
mov
lea
cmp
outs
lods
push
ret
bound
mov
lods
jge
jge
aaa
mov
rol
int
pushf
dec
test
mov
pop
cmp
xor
add
and
dec
inc
pop
retf
sar
mov
add
inc
fwait
popa
and
outs
mov
mov
or
popf
pop
cmp
retf
pushf
or
xchg
push
jbe
xor
call
sub
retf
dec
retf
push
ret
mov
das
imul
jecxz
push
sbb
and
out
out
sti
cmc
push
test
sub
and
or
cmp
pop
lods
push
or
rol
and
(bad)
xchg
fndisi(8087
xor
test
daa
imul
scas
inc
jno
push
mov
dec
sbb
(bad)
fadd
mov
test
hlt
aad
test
xchg
test
je
mov
sbb
mov
jmp
(bad)
pop
lea
cmps
fisttp
(bad)
push
out
xor
ret
cmp
stos
or
shr
or
jg
ins
inc
(bad)
mov
jb
mov
pop
sub
ret
push
retf
push
(bad)
ret
mov
ja
pop
inc
and
add
mov
push
and
rcr
mov
sub
gs
shl
sub
push
jge
test
add
popf
pop
xchg
lods
pop
(bad)
mov
enter
test
dec
pop
mov
dec
or
js
dec
popaw
add
mov
dec
cli
jmp
aad
loopne
int3
cmp
enter
mov
cwde
mov
sbb
loop
sbb
and
sti
pop
xchg
out
in
hlt
fsub
ret
or
push
ror
cli
sar
adc
shl
in
or
(bad)
stc
maskmovq
neg
lds
dec
add
add
dec
dec
pop
jns
sub
pop
ret
outs
jecxz
shr
cld
jae
sub
into
mov
xchg
or
addr16
xchg
xor
cmps
ret
(bad)
mov
mov
rol
ins
shl
mov
test
fisttp
mov
cmp
stos
(bad)
(bad)
rcr
jmp
arpl
mov
std
ss
in
retf
sub
je
adc
stos
push
shl
inc
adc
retf
pop
jle
inc
cmp
mov
loope
enter
mov
jl
stos
dec
popf
sub
ficom
dec
test
push
arpl
inc
sub
popf
imul
adc
xor
xchg
je
add
push
xchg
(bad)
retf
push
xor
push
push
les
ficom
xchg
inc
popa
lds
mov
jl
loopne
in
and
stos
int3
mov
adc
push
cmp
xor
popf
out
xor
sub
jmp
mov
loope
mov
mov
arpl
jne
push
xchg
or
pushf
test
retf
in
mov
out
arpl
mov
fmul
ficom
mov
jmp
jne
pop
jmp
mov
popf
shl
sbb
sub
inc
pop
inc
retf
mov
xor
jecxz
out
and
mov
lahf
pmuludq
adc
adc
mov
jmp
in
nop
stos
sbb
(bad)
mov
adc
xchg
pop
push
add
jg
inc
scas
stos
mov
dec
ror
mov
push
fisubr
adc
neg
mov
inc
fs
xchg
imul
das
shr
ret
mov
jnp
adc
sub
mov
xor
lock
in
sub
add
jnp
pop
(bad)
jle
fnstsw
cmp
inc
add
jns
scas
dec
das
mov
sbb
sbb
or
sub
dec
or
sbb
cmp
cmp
adc
xchg
in
push
ror
test
(bad)
aaa
mov
and
in
dec
cs
mov
dec
scas
movs
pushf
xor
into
and
jl
dec
sbb
sub
inc
xor
xchg
adc
push
and
xchg
xchg
jmp
enter
int3
cmp
mov
sbb
push
push
xchg
iret
repnz
out
xor
add
call
mov
jl
lea
jo
dec
jp
shr
cmc
inc
pop
add
test
(bad)
and
ins
inc
push
aas
test
out
inc
push
jo
or
jb
mov
das
imul
daa
stc
sbb
xchg
fwait
ss
cmp
cmp
addr16
arpl
fidiv
pop
arpl
sahf
lods
pop
mov
adc
mov
mov
imul
fsubr
mov
sub
rcl
outs
cmps
icebp
cwde
aad
mov
mov
pop
mov
mov
cwde
xchg
test
and
jae
push
adc
popf
jle
test
dec
test
inc
imul
mov
xchg
inc
dec
pop
shr
or
fstp
pop
iret
push
mov
bnd
push
jl
pop
mov
cmp
popa
addr16
fdivr
dec
stos
inc
jbe
and
nop
inc
(bad)
inc
int3
(bad)
cmps
pop
dec
mov
nop
into
aaa
xchg
pop
imul
cmp
cli
mov
jns
out
and
push
ret
scas
fsubp
mov
or
mov
fcmove
out
ret
push
and
inc
inc
loope
push
sbb
sahf
mov
mov
loop
movs
rol
outs
mov
cmp
xor
or
cli
test
cmc
dec
nop
pop
scas
and
xchg
xchg
pop
add
xchg
stos
mov
int
pusha
ja
xor
xchg
add
fbstp
out
sbb
jecxz
cld
jnp
popf
loop
mov
nop
outs
lock
mov
jne
shl
jo
nop
fdiv
cli
out
add
call
mov
hlt
add
push
(bad)
pop
sbb
ss
add
pop
ror
cmp
pop
mov
adc
cmp
push
das
call
xchg
mov
sbb
inc
mov
fadd
adc
add
jmp
cmps
xor
inc
mov
das
cmps
mul
in
adc
xor
cs
test
adc
popa
sub
push
gs
pop
mov
add
pop
dec
hlt
arpl
pop
pusha
pop
pop
ins
in
xchg
stos
add
(bad)
je
iret
jecxz
bound
out
es
sub
xor
push
test
popa
std
shl
cmc
inc
iret
push
jo
inc
or
sub
(bad)
pop
add
xor
cli
push
pop
and
ss
test
push
lea
cld
movs
mov
int3
jnp
loopne
icebp
sub
sbb
xor
out
repz
mov
jl
jge
push
pop
jmp
scas
sbb
outs
mov
or
or
push
lods
or
and
scas
imul
xor
add
jbe
or
push
and
lods
jnp
aam
ins
inc
repz
pop
xor
xor
sub
mov
ss
imul
or
add
(bad)
xor
xchg
fnstenv
call
cli
imul
pop
push
jge
pop
adc
xchg
xchg
or
sbb
nop
mov
push
into
icebp
cmc
out
popa
ds
mov
les
js
das
test
sbb
pop
mov
add
jmp
mov
lds
xchg
add
jno
bound
xor
inc
out
aam
xchg
mov
repnz
mov
nop
cmp
out
inc
xchg
sub
jecxz
scas
sar
stc
(bad)
pop
mov
mov
pushf
fimul
xchg
sub
pop
inc
adc
outs
xchg
aam
outs
nop
int
dec
or
imul
push
out
scas
(bad)
(bad)
push
mov
inc
sub
jg
push
pop
xchg
enter
(bad)
icebp
repz
cli
fisttp
pavgw
mov
int3
add
push
fmul
daa
dec
lock
sub
imul
adc
inc
xchg
enter
ins
xchg
cmp
jno
stc
les
mov
call
jecxz
fcomi
pop
push
std
stos
jbe
mov
dec
sbb
ins
movs
das
(bad)
inc
xchg
add
pusha
outs
leave
jno
stos
dec
fiadd
out
jle
(bad)
pushf
cmp
fist
fldenv
nop
mov
fsub
mov
and
jb
aad
mov
cmp
iret
addr16
int3
dec
(bad)
mov
sub
mov
xchg
sub
adc
sti
sbb
or
outs
sub
push
lods
and
inc
bound
push
lahf
ins
xor
in
imul
not
mov
popf
ins
sub
adc
mov
pop
stc
gs
loope
std
gs
pushf
fdiv
add
fs
test
or
mov
sub
test
adc
mov
lock
push
mov
nop
and
jne
sbb
cdq
mov
push
or
ja
fnstsw
xor
fadd
xor
or
jmp
jne
sub
jmp
push
sbb
xchg
xor
cld
inc
sbb
fsubr
jl
test
(bad)
xor
sbb
sub
inc
cmc
out
pop
call
jg
inc
rcl
add
adc
aad
or
test
out
dec
adc
xchg
push
test
cmp
xchg
test
and
mov
fsubr
imul
ins
sub
or
adc
out
(bad)
cmp
cmp
pop
push
mov
pop
mov
add
dec
pop
fcmovb
or
cwde
cdq
fld
ret
and
and
(bad)
call
lods
dec
cmp
stos
loopne
shr
into
bound
xlat
iret
sub
mov
ror
cmps
sar
(bad)
in
pop
add
pop
or
lods
sub
cmp
pop
lds
stc
call
out
inc
pop
push
sbb
pop
sub
test
scas
out
aam
inc
xchg
ins
fidivr
or
test
jmp
jmp
inc
(bad)
jmp
inc
addr16
mov
push
bound
push
out
sar
icebp
pop
mov
or
dec
jge
add
mov
fistp
test
or
and
and
std
sbb
cmp
int3
cmp
retf
add
fsubrp
mov
dec
and
add
lds
mov
pusha
mov
pop
pop
sar
push
jmp
pop
aaa
mov
cmp
loop
sub
pop
jmp
and
scas
dec
ds
xchg
push
inc
ds
(bad)
in
push
imul
scas
enter
imul
rol
push
adc
rcr
imul
mov
(bad)
stos
add
arpl
inc
call
adc
mov
in
dec
jmp
mov
loope
cmps
mov
mov
xor
nop
cmps
jmp
mov
test
popf
mov
push
xchg
sar
jnp
loopne
xchg
push
setbe
ja
xchg
mov
mov
push
mov
xchg
jnp
nop
mov
or
jb
jle
push
dec
dec
adc
push
inc
and
addr16
push
movaps
iret
push
sub
adc
test
adc
imul
les
jnp
mov
adc
dec
out
pop
adc
nop
add
cmp
call
xchg
mov
xchg
outs
jno
jb
dec
inc
sub
in
aam
add
sti
inc
js
fst
(bad)
les
xchg
loopne
or
cmps
push
mov
cmp
test
loop
adc
cld
clc
inc
ror
xor
rcr
inc
cmp
not
outs
stc
adc
dec
inc
jg
mov
ror
cdq
(bad)
clc
iret
ja
repz
jns
mov
inc
sub
jae
ret
lahf
dec
stos
imul
bound
or
sub
or
pop
inc
cmc
movs
sbb
xor
imul
ror
loopne
xchg
xchg
cmps
fld
sbb
retf
lods
jmp
cmc
xor
repnz
xor
sbb
pop
and
ja
imul
pushf
mov
scas
adc
cmp
dec
xchg
mov
push
mov
lods
jecxz
cmp
fistp
inc
lods
xchg
cld
adc
sub
jns
dec
push
dec
mov
jge
loope
dec
dec
sub
inc
adc
xlat
inc
daa
add
xor
lea
mov
and
xor
repnz
xor
das
sbb
sbb
mov
push
test
sbb
adc
shl
into
out
sbb
push
cmp
push
add
mov
punpckhdq
dec
xchg
outs
add
add
mov
and
scas
das
cmp
mov
sub
ins
fwait
stc
sbb
fldenv
add
jmp
jb
hlt
in
mul
pusha
pusha
fisttp
cld
jl
stos
push
mov
jg
scas
das
call
adc
mov
(bad)
in
(bad)
rol
sbb
fdivr
or
cmp
div
scas
mov
adc
dec
sub
pop
sahf
jno
adc
stc
sbb
push
adc
fidiv
sbb
sbb
xchg
or
jge
mov
push
inc
ds
leave
test
loopne
dec
iret
mov
es
test
cld
inc
arpl
adc
mov
dec
leave
lods
pop
xor
sti
cmp
mov
in
jmp
enter
fmul
call
imul
xor
stc
mov
movs
pop
stos
cmp
mov
xchg
shr
xchg
dec
ud0
sahf
jae
jns
pop
xlat
icebp
sub
(bad)
(bad)
sbb
cmps
inc
and
cs
jo
push
inc
popa
add
cwde
into
xchg
bound
sar
retf
call
mov
mov
and
pop
std
lea
mov
mov
mov
push
jge
lds
and
sub
fsubr
cmc
sbb
pop
dec
nop
fstp
call
je
mov
hlt
push
ficom
dec
je
pop
mov
cdq
mov
cwde
mov
pop
xchg
je
(bad)
icebp
into
data16
pop
js
pop
fnstcw
cmc
add
mov
bound
mov
movs
xor
sub
xchg
popa
xor
cwde
cmp
(bad)
nop
retf
scas
ror
mov
dec
rol
xchg
push
jne
and
call
movs
pop
adc
lea
ins
ins
xrelease
pushf
std
jecxz
repz
pop
xor
inc
loope
ins
or
lods
mov
je
jle
mov
cli
mov
call
mov
push
inc
or
movs
sub
fcmove
in
pop
ret
adc
cmp
adc
test
xchg
std
xchg
lea
push
sbb
xchg
ins
rol
hlt
ss
xchg
jo
(bad)
movs
xchg
dec
leave
pop
pop
xchg
jae
cwde
lock
movs
cmp
xchg
cmp
movs
add
imul
adc
xor
xor
and
cmps
stc
icebp
sbb
mov
sti
add
jmp
xor
fiadd
xor
sar
xlat
and
cmp
push
pop
cmp
xchg
mov
fbld
jmp
mov
inc
and
push
jae
dec
pop
out
mov
mov
cdq
mov
cmp
mov
push
push
push
jne
adc
call
cli
loope
call
aas
mov
jmp
push
xchg
jmp
jno
retf
add
sub
bound
out
popa
jp
loope
mov
pop
push
or
xchg
mov
dec
loopne
loop
in
addr16
xor
call
mov
clc
dec
jge
les
mov
sti
or
lods
pop
sbb
sub
cmovg
push
int3
outs
bound
fwait
pop
or
je
cmc
xor
or
mov
test
int3
aad
push
(bad)
jle
xor
repz
inc
stos
in
jns
out
je
cld
xor
xchg
push
jne
ja
cli
or
mov
test
or
rcr
ror
dec
repnz
lods
jg
xor
fsubr
mov
ret
push
mov
(bad)
ins
arpl
cmps
sbb
pop
(bad)
xlat
es
and
pushf
(bad)
ss
sahf
and
sbb
inc
dec
push
idiv
out
iret
jne
sbb
or
pop
jp
push
cmp
mov
push
pop
cmp
push
xchg
inc
call
dec
pop
popf
cmp
sahf
jno
movs
bound
cs
in
loopne
out
repz
gs
stos
adc
imul
popf
js
push
in
mov
mov
stc
test
sbb
xor
or
dec
es
popa
jns
daa
rcl
scas
add
clc
sbb
int
or
mov
leave
pop
xchg
inc
nop
movs
mov
mul
jbe
dec
cmp
enter
out
jnp
or
inc
gs
gs
in
stc
or
and
sbb
sub
dec
add
jns
scas
in
(bad)
bound
out
ficomp
jno
mov
or
or
std
mov
cmps
jnp
push
aaa
stos
movs
cli
add
pop
and
mov
cld
xchg
stos
dec
cmps
push
sti
mov
(bad)
and
adc
lea
add
mov
jge
loopne
jge
xchg
outs
ja
(bad)
pop
stc
push
call
dec
add
push
jmp
adc
je
sbb
xchg
(bad)
mov
mov
out
mov
or
sub
inc
int
cmps
jmp
aad
dec
dec
inc
ss
mov
and
mov
loopne
out
cli
mov
es
cmp
cmps
(bad)
in
movs
pop
in
sbb
out
lahf
jb
push
out
sahf
fst
cmc
dec
push
leave
out
xchg
add
sub
gs
push
popf
std
imul
jg
leave
push
test
mov
or
scas
movs
enter
imul
int3
or
mov
out
scas
and
sbb
and
xor
neg
mov
adc
mov
in
enter
imul
ror
sahf
xor
xor
lea
das
mov
jmp
scas
imul
jae
push
dec
div
dec
push
cs
adc
ins
jnp
adc
mov
jecxz
lea
sar
adc
mov
loop
test
imul
jbe
mov
mov
loope
retf
ja
pusha
cmp
pop
sbb
jns
aad
cmp
aad
jge
jae
sbb
add
jecxz
scas
jns
ret
sbb
popa
fdiv
or
es
pop
cli
inc
out
out
xor
cmp
pop
jae
or
sub
pop
popa
repnz
movs
dec
cld
out
daa
xor
and
mov
pop
std
imul
sub
push
loopne
and
test
(bad)
dec
adc
pop
and
xchg
push
jl
mov
mov
xor
repz
and
test
xchg
mov
lock
add
lea
xchg
mov
xchg
mov
ss
out
loop
mov
push
mov
mov
clc
sub
and
and
inc
sub
cmp
jg
xor
repnz
and
xchg
adc
out
fcmovb
pop
add
xchg
mov
test
add
and
test
cmp
out
int
pop
pop
data16
xor
mov
ins
and
add
or
push
mov
aaa
retf
xchg
fisub
ins
mov
cli
mov
mov
imul
ret
fdiv
scas
sbb
movs
ins
shl
push
in
leave
retf
lea
mov
inc
and
jne
dec
cld
mov
pop
int3
xor
jno
xor
pop
jbe
xor
pop
stos
push
push
(bad)
sar
dec
not
cmp
mov
dec
sbb
jb
aam
daa
clc
stc
fidiv
ret
jecxz
and
mov
rol
or
adc
sar
not
leave
ret
popf
fsub
jae
daa
adc
arpl
xor
out
jmp
xchg
adc
cmp
jg
test
inc
fadd
dec
jp
int
add
stc
daa
(bad)
test
aaa
rcl
call
and
push
jae
sar
clc
aaa
push
mov
push
or
xor
js
fwait
push
lahf
jo
or
sub
adc
sbb
adc
jmp
jmp
pop
hlt
mov
add
push
sbb
mov
push
out
adc
sub
cli
pop
push
fnstenv
je
test
in
int
(bad)
enter
stos
mov
add
xchg
lods
scas
pop
add
scas
ds
(bad)
dec
js
xor
adc
mov
xor
xlat
fcom
jbe
push
lods
daa
xchg
or
call
xchg
scas
stos
gs
shl
mov
js
lds
push
pop
(bad)
mov
cmovnp
cmp
mov
sub
cmp
retf
jecxz
popa
inc
ins
test
or
xor
in
push
cld
mov
mov
out
stc
mov
outs
and
inc
add
adc
and
jp
xor
(bad)
and
cs
cmp
lahf
inc
repz
mov
fsubr
dec
jne
mov
retf
jnp
(bad)
push
(bad)
add
xor
and
ja
add
in
sub
iret
stos
pushf
mov
repz
or
push
mov
cmp
jle
(bad)
ds
xchg
dec
into
aas
mov
xchg
daa
inc
call
movs
test
loopne
mov
or
lods
and
dec
mov
dec
inc
jae
xchg
cs
xchg
dec
outs
push
xor
scas
jp
push
mov
retf
add
iret
mov
mov
cwde
add
mov
mov
mov
imul
popf
push
mov
retf
shl
or
adc
mov
add
mov
push
xor
or
icebp
cmps
or
pusha
cmc
aas
imul
jnp
out
sub
js
mov
mov
sbb
jp
dec
push
(bad)
pop
ror
fstp
fdivp
push
lock
xchg
add
push
dec
sbb
(bad)
clc
push
sub
test
mov
add
cli
mov
sub
pop
pop
pop
mov
sub
loopne
js
int
push
lds
mov
fisttp
std
jne
arpl
dec
push
aas
sub
fstp
jg
into
scas
cmp
cmps
(bad)
jns
jbe
frstor
loop
mov
xchg
clc
jne
test
lods
inc
fdivr
jmp
xor
sbb
int3
mov
mov
popf
mov
(bad)
fldenv
xchg
adc
out
mov
scas
jo
sbb
push
mov
nop
pop
jne
out
xchg
dec
sbb
sbb
add
jns
jbe
inc
inc
hlt
add
push
cmps
stos
scas
jmp
xchg
xchg
imul
cmp
dec
add
je
dec
pop
retf
daa
addr16
enter
xor
ror
xchg
sbb
cdq
lods
pop
mov
hlt
jne
push
ds
fwait
pop
or
push
call
sub
shl
cwde
sub
adc
jns
(bad)
popf
loop
das
daa
les
inc
mov
mov
jp
mov
scas
pop
je
pop
test
push
sub
stos
sti
out
shl
aam
xor
cmps
push
and
xchg
inc
not
push
push
popf
or
mov
ret
pop
cmp
mov
push
stos
cmp
cmps
push
cmp
in
mov
pop
fst
sar
inc
mov
test
pop
hlt
dec
jmp
xor
test
sbb
cs
iret
mov
ins
loop
inc
jl
pop
and
addr16
xchg
into
fcmovnbe
imul
and
pop
sbb
ret
fs
cli
cld
ins
and
mov
add
mov
sbb
jp
xchg
pop
enter
push
mov
enter
pop
mul
test
pop
xor
fst
inc
lods
cdq
pusha
pop
jecxz
mul
icebp
arpl
inc
imul
loop
daa
pop
popa
and
pop
(bad)
icebp
jecxz
mov
dec
mov
sbb
cmp
popf
arpl
or
js
fcom
mov
fstp
imul
mov
pop
fisttp
add
xor
jle
test
jmp
push
mov
add
fsubr
inc
xchg
je
mov
ins
jns
push
nop
adc
shl
push
pop
sub
xor
in
test
xchg
add
mov
icebp
jns
mov
stc
nop
out
cmps
cwde
call
inc
jecxz
dec
push
addr16
jns
adc
gs
xor
mov
mov
ror
jle
add
mov
or
dec
inc
ret
in
dec
arpl
fild
push
and
push
test
shl
xchg
lea
mov
loope
and
inc
inc
cdq
data16
ss
arpl
push
loop
out
imul
data16
scas
adc
adc
fnstcw
fsubr
gs
cmp
test
push
adc
pushf
jmp
(bad)
rcl
pop
or
jg
fwait
jp
mov
xor
jnp
cs
or
push
mov
out
xor
xor
aas
ret
sub
pop
sub
push
adc
test
push
fist
jecxz
xchg
bound
push
mov
ins
cmp
ficom
mov
xchg
mov
pop
jmp
repz
lea
add
stos
or
ror
leave
cmps
and
cmp
mov
push
pop
and
inc
xchg
call
std
or
stos
test
mov
or
push
test
adc
rol
(bad)
fsubr
sub
sti
jno
or
or
lock
mov
les
or
sbb
outs
xor
int3
frstor
or
xchg
test
or
adc
ds
xchg
add
add
cdq
shr
jmp
cli
das
xchg
ds
daa
add
dec
fdivr
mov
popf
fistp
jecxz
popf
jle
je
jbe
and
rcl
out
in
and
adc
sub
sbb
hlt
loope
je
call
aaa
push
xor
push
sar
lds
nop
mov
mov
and
and
sbb
mov
fidiv
xor
and
bound
lock
aas
pop
shr
inc
pop
jp
and
imul
and
and
movs
int3
repnz
mov
fs
inc
ds
je
xchg
sbb
adc
fisubr
fcmovnb
jmp
pop
cmp
in
loope
mov
in
add
push
xor
daa
mov
or
jle
mov
jns
xchg
std
xor
adc
jmp
jbe
bound
sbb
sahf
and
adc
stos
call
mov
adc
cmp
cmp
cmps
ins
add
xchg
adc
js
into
sub
call
jge
iret
inc
sti
leave
cmps
pop
jmp
gs
(bad)
out
cmps
mov
sub
sbb
jnp
into
cmp
test
jmp
out
add
mov
push
xchg
(bad)
scas
pop
and
jns
mov
cmp
popa
hlt
lock
inc
mov
sub
inc
mov
jno
js
aad
mov
test
aas
adc
pop
jno
cld
into
and
sbb
push
jnp
mov
popf
xor
div
and
pusha
cmp
outs
jno
or
movs
adc
inc
stos
stc
ja
into
clc
cld
loop
cmp
in
sbb
inc
rcpps
and
scas
imul
cwde
dec
or
sti
jge
js
pusha
xchg
fst
in
add
leave
inc
aas
ins
cmps
cmp
scas
push
movs
mov
ins
aam
mov
daa
pop
cmp
into
and
scas
ins
shl
test
cdq
fs
jecxz
cmp
test
loopne
pop
add
repz
adc
pop
pushf
popa
inc
push
cdq
mov
inc
xchg
(bad)
pop
add
and
xchg
dec
adc
fild
into
outs
sti
xchg
lods
pop
daa
daa
les
fistp
into
out
cdq
shr
pop
or
xchg
test
inc
iret
adc
dec
and
jo
hlt
mov
jo
sub
sbb
outs
fidivr
pop
stos
jl
xchg
outs
and
mov
or
mov
jg
inc
jne
cli
call
nop
fcmovb
jmp
or
cs
lds
outs
mov
cwde
cmp
sti
xor
sar
xchg
fist
xchg
sbb
pop
scas
aam
pop
(bad)
sar
cwde
fadd
mov
ret
fimul
jge
adc
push
out
mov
retf
aad
push
ins
jbe
push
jno
dec
addr16
pop
adc
mov
imul
inc
outs
adc
loopne
cld
or
bound
pop
pop
popf
mov
xchg
push
add
jnp
sbb
mov
adc
into
and
stos
imul
call
test
and
ja
nop
or
pop
xchg
cmp
sbb
push
imul
mov
and
ins
clc
push
xchg
jno
neg
mov
popa
mov
jmp
jl
xchg
add
ins
xchg
out
imul
or
repz
pop
adc
popa
lods
out
das
(bad)
and
xor
push
add
cmp
add
je
repnz
push
sar
jl
dec
sti
cmp
pop
retf
mov
test
jns
sti
lods
(bad)
adc
out
repnz
aaa
cmp
(bad)
ficomp
adc
lods
cwde
mov
arpl
cmps
mov
jae
lgs
add
(bad)
pop
das
add
or
jne
test
dec
jns
emms
jmp
adc
add
pop
std
xor
aad
neg
pop
sub
mov
jae
or
dec
sahf
mov
adc
adc
adc
sub
cmp
aad
retf
push
(bad)
xor
aas
jg
cmc
cdq
cs
stos
inc
(bad)
cs
mov
movs
rcr
jecxz
adc
pop
mov
jg
dec
bound
sub
fadd
mov
mov
xchg
stc
loope
test
cmp
popa
inc
push
cmps
xchg
lods
jecxz
(bad)
push
jo
std
rol
inc
pop
push
and
jns
fbstp
aaa
fstp
gs
mov
enter
fadd
cmps
lods
pushf
mov
and
arpl
xor
stos
mov
inc
retf
fldcw
add
or
jle
push
gs
sub
add
sbb
loopne
sbb
add
mov
xchg
cdq
daa
int
into
xor
fsub
and
inc
fadd
retf
(bad)
in
and
fnsave
push
jns
inc
dec
adc
loopne
fdiv
inc
mov
pop
add
imul
sub
inc
mov
and
fcom
cld
in
vpmulhuw
dec
sahf
in
pusha
or
push
jmp
xchg
retf
add
xlat
aad
aad
repz
cmp
cmp
test
xor
mov
cmps
mov
fiadd
cmp
adc
mov
fisubr
mov
jmp
bound
xor
xchg
jo
inc
push
mov
hlt
xchg
sbb
imul
sbb
cmp
popa
sbb
ins
mov
les
lods
fld
cs
dec
mov
cmp
pop
clc
retf
xchg
loopne
pop
pop
add
jmp
xor
jb
imul
cs
or
je
pusha
xchg
movs
je
sub
push
add
adc
hlt
xor
push
repnz
push
fnsave
in
lock
out
xor
ins
cmp
iret
jbe
sahf
push
out
mov
(bad)
iret
mov
pop
shl
jb
add
jmp
pop
xor
mov
test
div
shl
sti
mov
jge
in
pushf
mov
imul
jne
xchg
sbb
addr16
call
xchg
outs
sbb
mov
pop
ret
mov
dec
jno
add
hlt
lods
xchg
sub
mov
xor
gs
sbb
and
mov
pop
bound
lods
mov
shr
add
div
(bad)
rol
ret
rcr
ret
inc
outs
mov
rcl
imul
mov
push
or
test
and
fwait
xor
dec
pop
cwde
cmp
xor
pop
test
sub
xor
mov
adc
adc
ins
mov
xor
pop
imul
or
and
aaa
fs
push
xchg
xor
jno
dec
sbb
mov
std
sar
shr
mov
das
ins
mov
add
mov
mov
xchg
pop
add
call
cmp
mov
loope
mov
mov
test
dec
daa
or
dec
in
add
fs
imul
mov
aaa
repz
pcmpgtb
ror
jb
push
add
or
mov
fwait
jmp
add
cs
stos
mov
push
clc
outs
push
mov
xchg
and
push
mov
pop
inc
inc
xchg
inc
mov
or
xchg
jno
out
mov
cld
in
sbb
fnsave
cmps
xchg
std
test
cli
call
add
imul
jp
mov
dec
adc
in
sub
bound
cli
dec
out
ja
add
mov
popa
and
jmp
mov
sub
cwde
adc
bound
pop
arpl
mov
call
loopne
stos
je
jecxz
or
lock
lds
cli
jecxz
daa
pushf
loope
in
fbstp
adc
inc
mov
outs
shl
into
movs
and
hlt
call
mov
cs
sti
mov
push
rcl
shr
add
(bad)
xchg
repnz
xadd
cmp
and
adc
xchg
adc
jnp
rol
call
gs
jmp
test
ds
sub
call
jb
xchg
imul
push
push
and
(bad)
add
fsub
int
aad
icebp
les
add
inc
jl
add
cmp
mov
shl
pusha
jns
mov
inc
inc
sub
into
push
pop
xchg
outs
jmp
mov
adc
mov
les
pop
inc
(bad)
xchg
and
mov
and
add
test
cmps
nop
and
and
sar
sahf
mov
fs
scas
cmc
push
or
and
jb
mov
dec
imul
js
inc
inc
xor
js
mov
jbe
cmp
jmp
popf
push
fbstp
xlat
and
or
xchg
ret
mov
pop
sub
sub
sti
cld
and
mov
scas
xchg
and
jb
ror
aam
sbb
aam
in
pusha
loopne
and
sbb
ss
dec
jmp
inc
sbb
and
mov
mov
dec
mov
mov
mov
fcomp
adc
repnz
dec
ss
add
stos
xor
pushf
jmp
scas
xor
pushf
scas
repz
sub
xchg
mov
lock
fimul
inc
les
lahf
mov
sub
xor
mov
ret
jle
outs
lahf
pop
pop
mov
inc
mov
outs
and
push
pop
test
enter
stos
sub
xor
push
scas
in
imul
inc
inc
xor
pop
or
jecxz
ss
xor
and
aam
inc
dec
es
add
sub
jno
(bad)
cwde
jl
popf
mov
shl
mov
mov
test
pop
pop
in
(bad)
frstor
pop
mov
cmp
push
xlat
out
sti
sbb
rsm
neg
or
push
sub
push
mov
out
in
pop
sub
xor
retf
leave
aas
sti
dec
inc
jmp
pop
(bad)
lahf
retf
movs
repz
sub
pushf
xor
pop
sti
pop
add
xor
pop
loop
dec
test
int
dec
cwde
call
mov
std
xor
lods
int3
mov
loope
frstor
aaa
push
cwde
ss
inc
inc
dec
les
test
pop
xchg
ret
in
daa
cmp
test
pop
and
add
loopne
test
xor
(bad)
mov
cld
aas
jb
adc
mov
cmp
pop
jecxz
(bad)
fbld
xchg
ret
sbb
sub
push
push
enter
fsubr
jns
in
jecxz
cmc
jbe
jle
das
sbb
mov
push
std
add
mov
mov
sub
in
sbb
push
adc
xchg
mov
aas
jne
dec
push
sbb
sti
adc
std
scas
push
mov
rcr
sbb
or
cmps
mov
gs
cli
stc
and
into
pop
in
fild
sbb
adc
and
lea
ds
aaa
adc
mov
test
clc
dec
scas
arpl
scas
cmp
mov
xchg
xchg
mov
xchg
mov
je
(bad)
dec
(bad)
cmp
jne
loope
retf
div
inc
data16
ja
lahf
pop
fimul
pop
adc
fnstcw
frstor
mov
cmc
dec
or
punpcklwd
cmp
push
xchg
ja
aam
sbb
pop
es
dec
push
test
mov
ins
mov
dec
inc
stc
push
xor
xchg
xchg
cld
imul
shl
(bad)
and
sub
mov
mov
jmp
fstp
ret
pop
aaa
xor
loop
or
in
or
xchg
(bad)
mov
mov
and
ret
push
adc
lods
jo
inc
jp
cmp
fsubr
xor
pop
outs
xor
mov
jge
aad
mov
out
sbb
mov
xchg
fdivr
test
ret
dec
jno
std
cmps
push
imul
push
fcmovnb
cli
inc
or
mov
(bad)
and
outs
jecxz
(bad)
jmp
jmp
inc
cs
inc
out
mov
dec
test
popf
pop
scas
pop
out
arpl
(bad)
fisub
mov
jg
fwait
into
push
lods
arpl
xchg
mov
clc
sub
pop
push
add
cdq
mov
cmps
fistp
push
sub
jnp
xor
push
retf
xchg
aas
aad
mov
pop
xor
xchg
cmp
clc
ins
inc
and
fld
cdq
jne
adc
retf
cmp
mov
and
mov
test
imul
mov
xor
xchg
rol
and
xlat
push
fs
mov
call
jge
(bad)
pop
add
pop
cld
mov
movs
mov
movs
inc
pop
or
gs
(bad)
rcr
and
dec
sbb
xchg
scas
jmp
fstp
mov
dec
and
and
pop
test
js
pop
lock
sub
dec
jp
and
pop
pop
dec
into
into
in
pop
scas
aas
ficomp
add
aam
iret
add
je
cld
adc
dec
out
sbb
push
inc
mov
sti
out
add
nop
fs
leave
test
mov
aas
bound
cmps
adc
and
and
arpl
stos
pushf
inc
arpl
dec
sub
pop
adc
cwde
push
jl
outs
xchg
aaa
xchg
jmp
cdq
pop
jmp
xchg
aaa
dec
adc
dec
ins
retf
adc
iret
je
jge
stc
push
hlt
and
js
dec
push
mov
xchg
movs
sub
or
xor
aam
push
retf
std
sub
nop
(bad)
int
les
jp
pop
aam
cmps
fidivr
sbb
gs
cdq
pop
jbe
test
sub
mov
push
and
push
xor
stos
or
pop
jbe
inc
mov
cmps
mov
jg
pop
(bad)
fcmovu
adc
adc
imul
or
mov
mov
ds
mov
out
fadd
fmul
mov
dec
xchg
iret
xor
and
sub
nop
scas
push
rol
retf
imul
adc
jmp
mov
add
(bad)
rcr
lds
in
cmp
(bad)
dec
mov
stc
into
mov
push
loopne
mov
lock
sahf
fstp
mov
dec
xor
mov
rcl
lahf
fst
sbb
cs
inc
mov
pop
inc
je
adc
(bad)
les
out
push
movs
sbb
and
sbb
jns
fdiv
leave
(bad)
sbb
repnz
test
pop
out
ins
push
pop
jno
icebp
cmp
push
add
or
dec
loopne
xchg
mov
out
sahf
lock
or
pop
and
dec
(bad)
mov
and
adc
fstp
and
jmp
shr
lods
nop
in
dec
into
jmp
lea
xor
jecxz
jp
mov
bound
mov
mov
sub
pop
push
add
shl
movs
fdecstp
xor
jecxz
add
fisubr
jns
int
inc
mov
jbe
jp
sub
in
jl
dec
jmp
xor
dec
(bad)
clc
std
adc
fs
or
je
cmp
inc
push
ja
aas
pushf
nop
movs
hlt
arpl
and
js
add
add
mov
mov
ds
cld
loope
sub
or
cwde
loope
add
sahf
adc
sbb
mov
retf
popa
loope
lods
stos
sahf
bound
lods
cmc
aam
mov
push
adc
add
movs
inc
or
arpl
mov
xchg
pop
test
les
and
repnz
mov
sbb
push
daa
jne
dec
xchg
cmp
or
lock
(bad)
sub
retf
ins
in
pop
fidiv
cli
or
pusha
les
movs
pop
sbb
or
or
xor
shr
or
outs
push
cli
sub
sbb
popf
(bad)
scas
js
std
push
fs
aam
dec
xchg
sbb
mov
gs
mov
(bad)
repz
mov
or
popf
jge
mov
lahf
cld
push
(bad)
fs
lahf
pop
add
movs
aaa
jne
dec
iret
or
inc
push
mov
cmp
cs
sbb
pusha
dec
pop
fsub
test
xchg
xor
xor
sub
pop
jle
adc
sub
jle
xor
inc
push
pop
into
leave
inc
shl
mov
cmc
popf
rcr
mov
sbb
nop
jae
adc
mov
outs
test
cmps
dec
test
or
jnp
aad
and
pop
shr
in
push
test
sbb
and
push
dec
rol
movs
iret
lock
xor
push
cs
out
inc
repz
xchg
cs
lods
or
pop
dec
push
xchg
stos
imul
lods
adc
in
cld
neg
push
or
or
jecxz
or
ss
xor
pop
out
mov
pop
add
and
jmp
adc
xchg
dec
xchg
sub
sti
popa
xlat
xchg
mov
xlat
loope
jne
sub
xchg
sbb
cs
mov
sahf
mov
inc
inc
add
inc
xchg
fs
xchg
in
pop
lds
ret
mov
mov
jnp
xchg
xchg
sbb
jle
scas
es
call
mov
xor
jmp
add
out
fisttp
mov
xchg
out
push
ins
xchg
pop
test
xor
jmp
loopne
push
cmp
add
shl
sub
jmp
mov
movaps
pop
xor
cwde
cdq
(bad)
dec
movs
(bad)
xchg
mov
data16
sbb
xchg
and
and
jge
adc
push
push
loopne
aas
or
add
add
jbe
jmp
(bad)
add
dec
dec
ins
push
xor
(bad)
fs
(bad)
lods
int
cmp
mov
gs
test
addr16
call
mov
mov
int3
in
out
aad
inc
jge
add
push
mov
jmp
mov
aaa
outs
stos
push
mov
add
xchg
gs
pop
xor
fisub
fisttp
cmc
outs
dec
pop
inc
xchg
adc
xor
xchg
cmc
dec
mov
push
jmp
or
push
les
fst
icebp
and
add
nop
xor
test
std
sbb
call
clc
out
xor
jecxz
adc
cmp
imul
lock
jae
lock
scas
add
jle
imul
xchg
mov
stc
mov
cmp
clc
jmp
adc
pop
ror
jbe
or
adc
sub
pop
icebp
dec
mov
adc
into
push
pushf
movs
sbb
pop
pop
add
test
clc
rol
cmp
loop
add
sub
ds
or
sub
(bad)
push
push
dec
or
nop
stos
pop
cmp
int
or
add
dec
dec
lds
loop
jl
pop
ret
pop
test
adc
jno
xor
je
repnz
pop
imul
loop
jne
push
xor
fdivr
add
mov
gs
push
ds
rcl
rol
addr16
test
stos
fisubr
test
dec
mov
push
adc
cmp
push
mov
add
xchg
adc
popf
and
mov
pop
jle
loopne
mov
mov
jmp
dec
test
arpl
dec
xor
pop
in
fisubr
add
mov
xor
pusha
arpl
and
mov
push
aad
cmp
xlat
or
and
movs
cli
popf
jp
test
inc
xchg
int3
xchg
adc
ins
in
ret
in
ss
sbb
or
lds
lods
xor
icebp
std
dec
or
cmp
mov
pop
push
retf
pop
mov
aas
jle
hlt
adc
mov
dec
not
mov
shr
lods
push
leave
call
xchg
(bad)
sub
ja
out
jge
pop
xchg
push
ss
cmp
call
lods
jle
test
sub
sbb
stos
addr16
outs
cmps
test
jns
stos
div
ror
jmp
mov
jmp
pop
dec
jnp
shl
mov
adc
ins
nop
push
jmp
idiv
popa
movs
mov
out
je
mov
out
cmp
sahf
xchg
mov
push
scas
cdq
xor
ins
push
outs
mov
sbb
mov
(bad)
in
pop
bound
es
fisubr
jmp
pop
retf
xor
call
hlt
push
imul
and
movs
add
pop
inc
add
lods
popf
pushf
and
cwde
ret
add
jne
aas
(bad)
js
fst
adc
adc
sub
jge
cmp
(bad)
outs
ins
xor
xor
xlat
mov
or
imul
sub
or
mov
pop
push
mov
dec
pop
scas
push
pop
int
jecxz
jle
fisttp
xor
hlt
aad
fcmovbe
push
cmp
dec
inc
in
stos
pop
imul
(bad)
out
addr16
sbb
idiv
test
in
addr16
sub
arpl
pop
imul
inc
(bad)
jmp
enter
add
loop
inc
jle
es
sub
fs
fucomip
stc
dec
aaa
cmp
inc
std
jnp
leave
mov
xor
ins
out
(bad)
ins
sahf
nop
or
mov
add
sbb
out
data16
adc
data16
sub
push
pop
loopne
out
bound
cli
clc
mov
mov
mov
in
inc
ja
dec
dec
mov
xor
xor
les
clc
sub
adc
or
dec
imul
nop
rcl
xchg
mov
mov
rol
cmp
fist
jbe
sub
adc
(bad)
retf
test
fisub
add
(bad)
jae
pop
mov
pop
ds
cmp
out
into
cmp
cld
cld
push
(bad)
sbb
fld
push
jbe
loope
dec
mov
ja
cmp
pop
push
call
shl
daa
push
jge
into
push
xchg
call
out
stos
loopne
movs
out
adc
jle
pusha
mov
sbb
xor
fnstenv
sbb
out
jnp
mov
ror
retf
cmps
jmp
shl
gs
xchg
mov
test
shl
les
shl
sbb
retf
popa
add
call
scas
popf
xor
pop
push
sbb
pop
loope
or
lock
xchg
add
inc
imul
inc
es
fisttp
jmp
shr
sbb
aad
jbe
mov
hlt
test
mov
adc
fs
sahf
add
dec
cmp
push
inc
push
xor
mov
out
inc
cmp
push
shl
cmp
sbb
sbb
mov
test
(bad)
leave
fwait
mov
jmp
hlt
aaa
and
push
push
call
add
stos
mov
movs
xor
cwde
(bad)
(bad)
out
dec
and
pop
xor
test
out
ins
adc
inc
fbld
imul
enter
gs
cmps
sar
neg
push
and
xor
int
xchg
mov
es
js
mov
sub
adc
fisttp
xchg
gs
mov
mov
xchg
stos
sbb
jbe
pop
add
mov
mov
ss
nop
mov
or
pop
popa
repz
inc
scas
dec
repnz
push
pusha
std
call
leave
sub
test
cmp
xor
push
push
mov
push
mov
cmps
add
jmp
adc
mov
cli
adc
mov
fdiv
es
ja
pop
mov
or
fldcw
cmp
out
aas
fnsave
or
cmp
cmp
add
lods
out
cld
ror
cmp
cli
sub
push
ret
xchg
cmp
rol
and
popa
and
sub
pop
inc
xchg
mov
and
mov
in
cmp
fimul
sub
sbb
fsubr
pushf
inc
repnz
loope
lock
rcl
aam
cmp
aam
out
inc
mov
das
sbb
push
push
lock
(bad)
retf
popa
jge
std
into
push
scas
stc
sbb
test
adc
jmp
ss
xchg
retf
out
pop
inc
adc
or
outs
inc
add
xor
stos
sar
add
xchg
movs
dec
xor
in
sbb
lds
stc
dec
lahf
push
inc
dec
repnz
adc
add
leave
sbb
jl
and
out
sbb
and
in
mul
push
push
and
xchg
push
mov
dec
test
and
je
dec
push
ins
cmp
mov
xchg
popa
js
ss
(bad)
data16
mov
adc
sub
push
rol
pop
call
mov
in
ds
inc
fisttp
cmp
int3
mov
and
lea
sub
lods
xchg
jl
ja
je
outs
sub
jnp
jns
pop
hlt
imul
cmps
test
add
push
cmc
cs
push
loopne
cli
jmp
and
fadd
iret
add
push
bound
mov
sbb
dec
jno
pop
jp
jo
fisubr
sbb
fs
jb
mov
mov
add
ret
int3
and
mov
push
xchg
sub
cmp
lea
sbb
push
mov
xor
out
inc
or
push
inc
stos
push
movs
mov
bound
pop
movs
and
inc
fwait
mov
push
movs
xor
push
cmp
fiadd
or
pop
iret
aas
or
sahf
sbb
and
add
mov
add
inc
mov
mov
jecxz
fs
push
pushf
push
sub
movs
div
mov
pminsw
push
inc
dec
fidivr
out
xchg
dec
cmp
adc
inc
sbb
call
push
pushf
and
jge
mov
jnp
or
dec
popa
cli
xchg
adc
inc
lods
cli
xchg
and
pop
sar
xor
and
cmp
imul
jae
inc
aad
jns
push
mov
jns
fcom
outs
pop
je
pop
xchg
dec
mov
mov
pop
or
sti
test
push
cmps
pop
lods
dec
imul
or
xchg
mov
outs
add
lods
mov
aam
cmps
fld
clc
loopne
dec
xchg
inc
ret
addr16
inc
mov
xor
xor
ret
movs
or
sbb
scas
inc
mov
pop
fistp
cmp
lock
addr16
in
std
inc
sbb
ss
pop
jl
fist
pusha
push
xor
cmp
movs
jmp
xchg
loopne
cmp
int3
sahf
jmp
scas
sub
adc
sbb
in
sahf
fldln2
loope
in
xchg
push
cmp
add
pop
adc
add
and
int
and
call
adc
hlt
mov
movs
mov
jle
and
sub
dec
push
xlat
cmps
add
test
loopne
inc
adc
test
rol
and
retf
aad
data16
inc
cs
out
mov
test
xchg
loop
(bad)
xchg
dec
cli
hlt
jmp
xor
neg
or
mov
out
xchg
jg
jns
das
cmp
je
cmps
push
daa
jb
mov
push
or
call
dec
mov
mov
movs
and
adc
in
jns
pop
mov
mov
cmp
sbb
pop
pop
movs
inc
aam
ficom
add
cli
pusha
jo
xchg
xchg
outs
mov
push
shl
pop
push
add
sbb
fdiv
adc
das
je
sbb
and
(bad)
mov
mov
xlat
jb
test
mov
loop
mov
ror
add
mov
pop
push
(bad)
mov
popf
in
stos
xor
adc
stos
lea
scas
adc
mov
jle
sub
jg
pop
pop
adc
neg
inc
inc
pop
int3
jno
cli
xor
out
xlat
pop
and
(bad)
mov
leave
dec
cmp
scas
pushf
sub
test
ja
adc
stc
fs
sub
jle
fidivr
pop
repz
inc
dec
int3
jnp
ffree
es
int3
xchg
jg
std
ins
ret
add
lea
leave
fcmovne
and
pop
dec
pop
aaa
hlt
pop
mov
add
ins
stc
jae
out
dec
or
jmp
adc
outs
scas
jae
mov
cmp
retf
sbb
mov
xchg
les
aaa
pop
sbb
pop
add
into
xor
xor
mov
sub
xchg
push
icebp
outs
imul
xor
shl
icebp
xlat
xchg
ss
arpl
inc
sub
xor
mov
leave
xlat
mov
add
push
add
in
test
stos
pop
enter
mov
or
xlat
or
push
jns
mov
cld
(bad)
or
mov
jge
fisubr
and
xor
shl
mov
mov
(bad)
mov
in
nop
adc
leave
sahf
out
and
inc
popf
mov
sbb
jbe
rcl
jne
inc
cmps
push
in
sti
scas
popa
fdivr
jle
cld
cmp
fld
cmp
addr16
mov
add
addr16
(bad)
mov
out
mov
xchg
leave
xchg
std
out
xchg
fnstcw
adc
bound
loop
push
(bad)
sbb
je
cmp
mov
(bad)
jge
nop
nop
jmp
push
shr
and
sub
xchg
fsub
cmp
mov
jmp
and
ins
sahf
inc
jmp
leave
pop
pop
inc
or
pmulhw
aas
pop
mov
repnz
stos
jnp
mov
sets
mov
dec
mov
test
add
out
hlt
mov
lahf
out
xchg
mov
les
push
jmp
daa
xchg
or
jg
cmps
out
lods
adc
and
or
div
ficomp
push
add
jno
(bad)
jp
test
out
or
sub
dec
push
les
inc
push
outs
(bad)
jbe
jge
in
cmp
ficom
inc
test
pop
ins
pop
loop
xor
pusha
or
lods
mov
(bad)
bound
test
jl
fisubr
xchg
mov
mov
xor
test
adc
dec
cmps
imul
clc
xchg
fimul
or
mov
shl
repz
mov
jl
ins
test
es
add
fwait
adc
xor
mov
imul
jae
pcmpgtb
data16
pop
pop
fsub
ror
push
popf
or
sub
call
mov
mov
outs
pop
xchg
mov
cmps
adc
pop
sti
out
das
cmp
add
mov
cmp
jne
stos
ret
add
or
push
fsub
xchg
retf
xchg
test
int
add
add
xchg
push
cdq
sti
pop
sbb
das
inc
pop
and
push
add
std
sbb
lea
ss
test
pop
dec
add
iret
add
dec
das
loop
jne
addr16
push
and
mov
pop
dec
arpl
adc
cmp
(bad)
popa
ffreep
or
xor
ret
xchg
ss
lods
push
loope
int3
dec
std
sub
mov
ret
(bad)
and
add
inc
arpl
movs
ins
push
call
out
sbb
das
fnstsw
ja
jmp
call
fs
adc
mov
xchg
sbb
lods
mov
adc
sub
(bad)
inc
mov
cmp
dec
jnp
dec
clc
dec
dec
sbb
pop
inc
stc
loopne
jo
mov
xlat
dec
mov
and
das
aam
sbb
enter
cld
ret
inc
push
int
cmp
into
es
in
add
fbld
in
jnp
pop
cmp
pushf
stos
aad
pop
mov
cmp
ins
shl
bound
div
iret
mov
push
shl
cmp
push
adc
push
mov
xor
add
or
mov
mov
aam
or
(bad)
popa
jns
call
mov
fdivr
mov
fs
cdq
int
fmul
jne
mov
enter
jp
push
test
jo
retf
xor
pop
mov
cwde
cmps
popf
call
push
mov
jle
sbb
dec
cmp
sar
xchg
fimul
mov
push
jg
pmuludq
sbb
and
mov
mov
mov
push
mov
pop
push
outs
xchg
aad
daa
jae
fmul
aam
mov
in
hlt
aad
xor
xchg
arpl
pop
cs
or
sbb
repz
test
ror
mov
dec
int3
cmc
test
ror
xor
pop
mov
mov
dec
push
xchg
jae
nop
daa
mov
mov
cli
mov
jp
mov
adc
xchg
jb
cmc
mov
cs
aas
lods
aaa
imul
ja
je
xchg
in
add
mov
in
jecxz
fs
xchg
push
imul
push
jo
fsubr
xchg
idiv
jo
cdq
repz
xor
(bad)
xor
call
or
test
leave
icebp
and
pusha
out
fild
sbb
inc
push
xchg
cwde
lahf
push
cli
ret
dec
pusha
lds
dec
not
adc
in
or
loop
dec
hlt
arpl
and
pop
or
sbb
repz
pop
push
inc
test
jecxz
fstp
cmp
neg
out
(bad)
mov
sti
ss
test
dec
daa
addr16
loopne
or
ret
mov
call
sti
mov
sbb
push
neg
(bad)
mov
call
bnd
hlt
cmc
inc
jnp
mov
pop
mov
sub
idiv
mov
test
cwde
fwait
or
fnsave
pop
out
inc
xchg
es
add
sub
push
js
pop
jge
into
sbb
dec
retf
cld
xlat
out
es
mov
mov
jmp
sbb
push
dec
loop
mov
push
dec
sub
das
arpl
mov
xchg
sbb
push
jle
mov
in
stc
push
cmps
hlt
sti
aas
add
cmp
dec
mov
push
and
and
rol
mov
in
sub
das
fs
add
adc
stc
inc
dec
pusha
add
jae
(bad)
mov
dec
sbb
adc
push
clc
mov
xor
mov
enter
not
adc
xlat
dec
dec
push
mov
sbb
ret
fwait
inc
fcomip
ja
inc
in
repz
dec
out
jbe
fwait
mov
sub
out
or
add
sub
test
rcl
sub
loop
jle
mov
test
jnp
stc
mov
jecxz
dec
mov
into
fst
and
jne
aaa
and
nop
loop
and
test
loopne
test
test
mov
push
sbb
mov
xor
push
or
mov
bound
xor
push
add
rcr
lea
ret
js
push
jns
test
loope
sbb
dec
sbb
dec
in
or
pop
div
dec
scas
mov
repnz
popa
xchg
mov
in
bswap
cmc
mov
ins
jmp
xchg
jmp
mov
call
js
imul
sbb
retf
test
mov
shl
pop
fcomp
les
dec
cli
sbb
inc
mov
ja
pop
pop
cwde
jae
xchg
scas
xor
shl
jae
mov
cmp
mov
sti
test
data16
js
(bad)
mov
(bad)
loope
mov
push
aas
add
jns
enter
arpl
imul
es
call
dec
xchg
in
retf
jp
push
jno
jmp
stos
ret
mov
mov
add
fmulp
imul
lock
mov
jmp
out
shr
vpcmpgtd
xor
test
repz
retf
test
fidivr
jmp
jns
mov
xchg
fmulp
mov
cs
je
push
lods
stos
call
sub
mov
stos
aaa
add
test
adc
ds
popa
push
mov
sar
retf
imul
push
add
adc
aaa
xchg
je
pushf
mov
push
in
cmp
jb
xor
inc
add
retf
or
push
out
pop
std
sub
ins
jecxz
inc
cmps
pop
push
or
dec
xor
push
movs
mov
add
mov
sbb
inc
adc
scas
adc
cmp
mov
stos
stos
mov
les
dec
ret
cmp
mov
push
xor
jge
psubsb
pop
mov
cmps
add
mov
push
call
scas
daa
fcomp
jo
mov
sbb
push
xor
xchg
lods
cmps
(bad)
adc
out
mov
cmp
pop
push
dec
xor
ins
pushf
pushf
adc
mov
out
cmp
aam
ds
shr
or
call
into
and
dec
inc
sub
xor
xor
jmp
retf
mov
nop
mov
mov
je
call
in
scas
adc
xlat
int
adc
push
inc
sbb
mov
ss
out
stos
stos
jl
mov
imul
pop
xchg
(bad)
xchg
cwde
mov
loopne
loop
and
sbb
enter
int3
pop
jp
and
mov
xchg
fdivr
out
into
push
xchg
dec
add
mov
pop
pushf
sbb
xor
fsubr
popa
push
jb
out
or
std
sub
fucomip
and
ja
push
iret
repnz
pop
push
xchg
dec
push
ins
push
push
mov
in
and
jno
add
pop
repnz
ins
mov
(bad)
cld
repnz
ss
retf
aas
ret
rol
xchg
cmp
sbb
pop
sti
cmp
adc
dec
pushf
jmp
loopne
xchg
lods
push
xor
inc
xchg
mov
pop
retf
jo
add
mov
xor
(bad)
mov
or
push
sub
pop
adc
pop
das
sub
jp
lods
mov
aas
and
lea
mov
clc
hlt
ret
nop
sub
and
mov
pop
inc
bound
mov
es
push
clc
adc
icebp
jge
dec
jecxz
cmp
mov
je
loop
(bad)
fist
push
jno
(bad)
ja
stos
pop
jmp
mov
outs
or
(bad)
ins
call
xchg
or
dec
sbb
out
je
and
xchg
pop
shr
mov
cmp
or
lock
mov
outs
scas
arpl
aaa
je
in
mov
das
ds
sahf
std
jnp
jmp
iret
xchg
dec
jmp
xchg
into
adc
pop
cli
and
sbb
sbb
adc
xchg
aaa
test
mov
adc
jae
xchg
and
in
push
xor
cmps
in
xor
inc
lock
and
dec
into
push
dec
jnp
adc
pop
dec
dec
pop
pop
jg
ja
test
jno
mov
call
ja
aas
int
pop
jo
mov
dec
cwde
mov
cmp
inc
lods
push
sub
jb
add
movs
mov
retf
or
dec
cwde
lods
mov
lds
dec
push
enter
loopne
dec
std
sbb
(bad)
pop
in
sub
xchg
daa
retf
rcr
rcl
push
sar
cmc
jle
sbb
pop
jmp
cwde
jl
jns
cdq
imul
imul
adc
test
mov
xchg
out
mov
imul
fbstp
das
neg
lahf
pop
sub
dec
push
pop
xchg
cdq
mov
inc
fcmovnu
or
sbb
stos
shl
or
sbb
dec
sbb
aaa
jns
inc
ss
in
(bad)
fcmovnb
sub
call
add
sar
in
jp
aad
out
in
fsub
(bad)
pop
push
mov
adc
or
inc
out
jnp
lea
ret
ins
popa
and
inc
jno
(bad)
neg
fistp
data16
fimul
mov
out
dec
jp
xchg
fnop
xchg
lds
mov
xchg
stos
pop
imul
neg
mov
call
push
movs
pop
mov
xchg
outs
pop
in
and
xor
pusha
mov
and
cmp
or
mov
in
jle
std
(bad)
addr16
and
lahf
sub
test
dec
push
xchg
push
and
scas
pop
xchg
std
sti
dec
adc
mov
mov
jnp
pushf
cmc
add
mov
movzx
sbb
or
dec
adc
mov
addr16
(bad)
sbb
loop
pop
sbb
pop
pop
pusha
nop
retf
pop
imul
mov
mov
mov
add
enter
(bad)
movs
retf
fiadd
ret
leave
push
inc
pusha
in
pop
pusha
cmps
ficomp
or
popf
sbb
sbb
je
outs
xchg
sub
js
cmps
jle
pop
out
fnstenv
or
xchg
xor
xor
mov
jp
stos
sahf
cdq
xlat
xchg
stos
imul
jg
fcomp
les
jbe
inc
mov
inc
mov
not
test
sti
rcr
ins
enter
movs
push
xor
iret
loope
xchg
cmp
mov
sub
or
mov
dec
mov
jo
jle
cmp
fwait
or
rcr
stos
leave
call
jecxz
jno
mov
jno
out
test
push
push
cmp
mov
sub
dec
sub
sub
(bad)
fistp
aas
retf
cmp
test
inc
push
jno
ins
cmp
rcl
or
jecxz
and
outs
pop
sbb
rcr
lods
lods
jno
aam
inc
lods
mov
pop
sbb
add
xchg
js
cmp
inc
lds
adc
cmp
cmp
and
jmp
jmp
push
push
dec
pop
mov
ficomp
(bad)
iret
aaa
mov
out
push
stc
addr16
push
push
das
and
dec
aas
dec
hlt
sub
jle
cmp
sub
ss
sub
dec
jp
pop
(bad)
or
je
rcl
dec
shld
xchg
pop
movs
xlat
push
mov
mov
cmp
mov
les
xchg
add
xor
cdq
scas
in
xchg
mov
dec
xchg
mov
in
or
jle
in
icebp
dec
ds
cmp
ins
lods
add
and
xor
std
push
xor
cmps
ret
dec
jns
pop
out
imul
movs
mov
sub
pusha
dec
xchg
jns
xor
ss
daa
test
adc
stos
sbb
ret
mov
retf
xchg
dec
jmp
outs
mov
fdiv
loop
pop
call
jp
rcl
out
push
popa
enter
mov
into
xchg
ss
fs
mov
mov
neg
paddb
jl
ret
out
add
push
rcr
dec
ds
out
leave
into
cwde
push
fucomi
xchg
push
sub
add
and
mov
or
dec
sub
fmul
loope
lahf
dec
mov
pop
daa
(bad)
dec
fistp
mov
shr
add
mov
outs
int3
jmp
into
mov
mov
data16
test
aaa
call
ret
(bad)
cli
and
(bad)
cld
leave
js
push
xchg
or
sub
scas
mov
into
sahf
rol
sub
mov
sbb
fisttp
ss
pop
es
mov
xchg
xor
icebp
loope
rol
std
sub
adc
(bad)
inc
loope
imul
dec
add
test
mov
out
xor
pop
mov
outs
push
mov
jne
ins
imul
jne
ffree
xor
stc
pop
mov
cwde
xchg
and
retf
scas
and
adc
test
and
dec
gs
sbb
or
push
int
xlat
xchg
cmp
std
xor
jno
add
xchg
add
or
and
dec
pushf
mov
outs
fcmovbe
sbb
mov
retf
mov
jp
leave
cld
outs
jbe
sar
dec
mov
call
inc
movs
sbb
push
sbb
push
leave
push
ret
sbb
jmp
sub
(bad)
shl
pusha
or
ds
ds
movs
cmp
scas
test
xchg
inc
sub
fs
in
adc
cs
nop
stos
ins
lahf
xlat
cmc
pop
out
xor
or
js
addr16
xchg
sbb
icebp
sti
repnz
push
mov
mov
es
and
repz
mov
mov
je
rol
or
push
xchg
pop
movs
jle
fimul
fnsave
mov
stc
jbe
push
aam
popf
or
mov
iret
ja
sahf
jmp
pop
daa
mov
or
lods
pop
shr
repnz
mov
sbb
xchg
icebp
test
push
jmp
ss
push
jno
std
test
add
retf
and
loopne
add
jmp
fisttp
mov
fmul
jb
cwde
in
dec
adc
lahf
imul
out
bound
mov
rep
cmp
cmp
xor
(bad)
push
mov
adc
(bad)
jg
mov
test
out
inc
jne
pop
repz
repnz
mov
sub
mov
sbb
xchg
xchg
mov
in
sub
push
repz
xor
pop
xchg
xorps
popa
mov
leave
push
and
add
jnp
dec
jns
retf
loopne
repnz
scas
dec
jns
aaa
xchg
imul
stc
scas
mov
icebp
mov
mov
clc
lods
inc
xchg
cmp
sar
add
out
xor
(bad)
push
imul
add
dec
and
hlt
or
dec
lods
test
std
lock
push
div
pop
or
inc
jb
fistp
cmp
popa
test
jp
add
pop
push
inc
call
cdq
push
jle
pop
in
xchg
jno
fs
or
daa
xor
out
cli
mov
dec
daa
xor
add
cmps
sbb
lds
imul
bound
mov
xor
sub
test
mov
hlt
xchg
pmullw
mov
ss
int3
ja
mov
int
sub
std
or
or
inc
jns
xchg
movs
mov
xor
aam
in
mov
add
push
inc
sbb
ret
push
mov
sub
adc
cli
mov
mov
(bad)
jns
jno
lahf
jg
sub
test
imul
fwait
rcr
or
bound
fstp
retf
sub
jle
add
xchg
movs
pop
inc
(bad)
(bad)
fidiv
inc
scas
and
sub
xor
and
jg
inc
test
out
cmc
clc
push
scas
lsl
and
adc
mov
mov
inc
mov
or
daa
sbb
mov
mov
inc
sbb
cmc
fwait
mov
sub
test
aad
sub
in
jmp
sub
mov
or
imul
mov
adc
jmp
aad
mov
mov
mov
sahf
add
hlt
repnz
push
imul
mov
aas
mov
xor
in
shl
sub
leave
push
mov
and
daa
cmp
in
ret
lods
mov
push
cmp
lods
test
push
sahf
retf
xor
pop
and
push
cmp
sub
xchg
ss
inc
or
adc
ds
shl
pop
pop
scas
rcr
mov
pop
addr16
mov
cld
xchg
shl
mov
daa
pop
sbb
jmp
sub
sbb
nop
hlt
retf
jmp
shr
(bad)
icebp
mov
inc
xchg
cmp
add
mov
xor
mov
jo
jp
ins
jns
loope
jge
inc
mov
out
jp
leave
add
push
dec
or
dec
add
jb
stos
mov
jecxz
cmp
sub
cmp
stc
mov
fucomip
into
dec
pmaxsw
mov
mov
(bad)
cmp
je
out
xor
aam
stc
mov
add
inc
(bad)
pusha
push
cmp
cwde
stos
pop
sub
push
enter
dec
mov
cs
and
repnz
popf
xor
sub
push
adc
xchg
pop
push
dec
sbb
sub
push
or
or
mov
fistp
inc
xor
pop
pop
(bad)
dec
push
test
ficom
fmul
daa
xchg
and
add
ja
call
mov
stos
inc
jg
es
adc
ror
jecxz
ja
add
mov
movs
in
inc
lock
cmps
cmp
xlat
mov
cmp
and
rcr
add
in
movs
fild
xor
in
and
dec
add
mov
imul
in
shl
or
imul
add
jp
rol
xor
xor
xchg
pushf
das
popf
into
dec
mov
(bad)
fistp
jmp
mov
xor
ins
sbb
(bad)
leave
xor
jg
shl
and
push
add
xor
xor
push
cld
jo
scas
or
xor
jecxz
push
jae
add
or
test
xor
ret
jnp
ins
shl
inc
dec
add
mov
jno
add
aaa
xchg
ins
dec
loope
pop
popa
(bad)
pop
cmp
mov
cdq
adc
adc
mov
test
adc
or
cdq
jp
clc
dec
(bad)
mov
lahf
fst
jno
add
sar
into
add
sti
leave
scas
xchg
jno
mov
pop
popa
add
mov
hlt
sub
push
add
test
mul
xchg
jle
hlt
sub
popf
pop
jg
mov
push
outs
ror
mov
dec
repnz
loopne
ret
int3
stos
xchg
sub
lods
test
mov
push
mov
cmp
in
jne
das
sbb
mov
inc
and
mov
lods
xchg
(bad)
retf
call
adc
rol
inc
ss
shl
inc
jmp
sub
xor
jmp
(bad)
int
xor
push
js
aaa
cmps
xor
call
repz
adc
gs
xchg
scas
(bad)
rol
sti
int
cmp
(bad)
call
ficomp
jle
ror
cmp
inc
mov
mov
inc
test
push
dec
pop
xlat
cmp
cli
xor
out
jb
loopne
adc
in
cdq
push
or
inc
fwait
and
pop
fisttp
mov
push
jmp
test
int3
fild
pop
nop
dec
test
push
pop
xor
sub
test
lds
jae
jmp
sub
rep
and
xchg
arpl
jle
adc
sub
cmps
jmp
xor
ret
push
push
push
ds
push
push
sbb
scas
dec
cmc
jge
inc
jge
jns
add
test
je
or
(bad)
xchg
ret
add
movs
fldenv
arpl
xor
xor
push
test
sahf
ins
push
sbb
lahf
cmps
push
lea
pushf
lods
ret
jb
daa
push
jns
sbb
xor
popf
or
test
push
cmc
add
rcl
add
mov
test
cmp
pop
mov
cmps
cmp
icebp
cdq
xchg
and
mov
std
(bad)
ror
popa
not
(bad)
mov
jmp
or
jae
nop
dec
xchg
cmps
sub
hlt
jp
and
gs
loop
retf
fimul
loop
scas
mov
or
cld
aaa
mov
jae
dec
add
call
in
jmp
pop
(bad)
sahf
and
push
jmp
pusha
add
out
daa
(bad)
adc
js
js
cmp
pop
shr
data16
inc
das
cmp
xchg
fwait
jo
adc
jl
sbb
sbb
cmc
mov
jg
aam
and
jne
movq
cwde
pop
xor
ret
ss
ins
sub
retf
ror
fcomp
data16
jmp
ret
data16
int
xlat
or
cmp
ins
pusha
bound
mov
dec
mov
mov
pop
push
je
xor
mov
cmp
push
mov
imul
test
mov
pushf
mov
addr16
int
jne
adc
stc
sbb
stos
cmp
xchg
push
(bad)
mov
mov
and
repz
push
mov
dec
aas
cmp
adc
cwde
pusha
cmp
mov
adc
in
hlt
mov
ins
data16
jmp
push
jbe
popa
dec
pop
clc
xor
aad
aas
fdiv
rcl
mov
(bad)
out
inc
sub
int
pop
fdivr
lea
and
js
pop
pop
and
add
outs
fcomp
(bad)
lods
dec
dec
push
sub
cmp
dec
add
into
scas
ds
jg
xchg
ja
jle
sbb
sub
sbb
jp
pop
jb
mov
and
mov
mov
pop
clc
dec
and
mov
retf
in
jle
daa
fidiv
and
test
in
mov
cli
les
sub
ret
outs
pop
inc
cld
cmp
out
nop
sahf
adc
jbe
inc
mov
(bad)
out
pop
dec
xor
adc
and
sti
out
jo
ret
mov
mov
in
(bad)
int3
packuswb
jo
mov
xor
jno
pop
jecxz
ret
stos
stos
add
cli
movs
mov
fsub
popa
xlat
aaa
fmul
sar
sahf
rcr
or
mov
and
pop
int3
out
xchg
sub
sub
add
jne
pop
push
loop
xchg
lea
repz
or
mov
xor
add
sub
adc
out
out
xchg
jo
mov
in
push
and
out
pop
pop
cmp
movs
adc
sbb
cdq
repnz
fs
inc
xlat
push
repnz
bound
arpl
add
movs
sub
adc
sub
inc
stc
push
inc
std
sbb
pop
mov
jo
psllw
(bad)
lds
push
fsub
(bad)
cmp
or
push
fs
jmp
sub
(bad)
(bad)
mov
(bad)
or
movs
dec
scas
add
pop
aaa
cmp
std
fisub
popa
repnz
xchg
xlat
and
repz
cmps
ins
jnp
fistp
mov
xor
call
jmp
add
inc
pop
pop
push
xchg
mov
bound
xchg
mov
sti
xor
ss
retf
sub
jmp
pop
into
and
push
adc
mov
xchg
adc
sbb
jmp
jl
cdq
retf
inc
(bad)
jne
sub
xchg
sub
mov
inc
js
loope
xchg
inc
fistp
or
loop
pushf
mov
lods
or
pop
sub
mov
test
loopne
or
cmps
sub
mov
xor
ins
mov
jg
pop
outs
or
scas
sbb
push
ss
std
call
fsubr
sbb
pop
add
push
mov
lahf
jl
push
jb
(bad)
stc
int
xor
mov
mov
loop
dec
sbb
mov
pop
test
fs
bound
lea
pop
in
cmp
dec
dec
pop
in
test
fsubr
je
lock
xchg
or
(bad)
addr16
mov
xchg
icebp
dec
xor
std
push
adc
(bad)
and
gs
cmp
and
push
(bad)
cmp
data16
push
cmp
jae
out
out
cwde
dec
(bad)
xor
and
fcomp
xchg
ins
push
in
(bad)
jmp
inc
je
pop
add
inc
lea
aaa
aam
xor
data16
lahf
jne
push
gs
xor
test
sar
xchg
xchg
imul
push
mov
pop
jle
sbb
xchg
dec
repnz
arpl
push
mov
stos
popa
ja
int3
sbb
or
scas
cmps
imul
pop
out
je
jl
jg
pop
test
(bad)
fdiv
movs
mov
int3
push
lods
(bad)
cwde
jns
call
ins
shl
nop
jmp
(bad)
dec
jns
jl
inc
and
add
leave
in
imul
ja
fidivr
jo
pop
add
mov
lds
mov
int3
and
inc
fimul
mov
shl
xor
inc
shr
dec
jo
scas
cmp
push
ret
dec
dec
cmc
out
popa
push
gs
jmp
icebp
inc
retf
push
ja
ret
test
jl
jbe
and
or
xor
sub
jo
push
rcl
mov
jae
(bad)
xor
leave
sahf
imul
or
jbe
or
mov
popa
pop
mov
mov
test
imul
sub
call
mov
mov
int3
(bad)
jmp
fs
mov
outs
pop
aaa
dec
or
int3
(bad)
call
cmp
sub
stc
sbb
xor
es
std
gs
sub
jo
clc
cmp
adc
mov
mov
pop
lds
and
(bad)
dec
add
add
int
enter
xor
or
cmp
xchg
jae
loop
add
es
mov
pop
push
popf
pop
test
aas
jnp
xor
inc
and
xchg
cmp
cld
adc
mov
pop
pop
loopne
dec
adc
jno
and
push
fst
sbb
popa
scas
inc
mov
(bad)
xchg
fstp
push
dec
(bad)
cmp
scas
push
or
out
adc
mov
push
nop
fstp
idiv
mov
addr16
dec
mov
jecxz
bound
and
cmp
mov
push
cmp
cmp
xor
jmp
push
(bad)
pop
cwde
cmp
xor
pop
or
data16
loop
dec
adc
loop
data16
push
std
fwait
jno
push
sbb
mov
lds
jno
mov
div
fs
repz
xchg
jno
dec
mov
movs
sub
fnsetpm(287
mov
pop
or
movs
jmp
(bad)
movs
push
and
sub
test
xor
loopne
jbe
adc
inc
and
mov
xor
xchg
pusha
push
add
(bad)
push
and
inc
fstp
mov
mov
int
mov
test
adc
mov
xor
fsub
push
or
add
imul
mov
push
or
sbb
add
lahf
(bad)
outs
pop
mov
imul
cmp
rcr
mov
mov
push
fst
lods
mov
outs
inc
add
mov
addr16
ins
iret
daa
in
dec
pop
pop
xchg
xor
inc
and
test
sub
cmp
push
jbe
ins
add
sub
mov
fs
push
sbb
int
dec
rcr
iret
or
arpl
ror
push
aad
cmps
sbb
call
out
pop
dec
push
hlt
and
push
or
add
cmc
in
and
dec
mov
cmps
and
push
hlt
mov
imul
(bad)
adc
(bad)
sbb
call
xor
into
adc
sbb
sar
pop
xor
jnp
cmps
or
outs
or
sub
and
xchg
cmp
mov
mov
jge
(bad)
sti
push
rcr
sub
das
cmps
cmp
mov
adc
(bad)
cmp
push
adc
ss
jae
rol
cmp
jno
sub
add
sub
outs
dec
and
cmp
mov
add
push
push
jg
pusha
fbstp
and
jge
mov
push
xor
stos
icebp
ret
jg
imul
js
repz
mov
mov
or
int3
sbb
xchg
sub
stos
loop
mov
mov
retf
cdq
mov
mov
ficom
or
mov
adc
lahf
mov
xchg
xor
hlt
jbe
sbb
fcomp
rcr
push
leave
out
ins
jp
in
stc
fiadd
call
or
imul
lods
add
imul
dec
nop
std
sbb
cwde
push
add
mov
inc
iret
mov
xor
sbb
stos
xchg
add
ror
push
je
mov
popf
fcmovnu
stc
adc
fdivr
(bad)
xchg
fwait
(bad)
and
jno
call
cli
dec
loope
mov
dec
and
mov
aas
pusha
in
jmp
dec
gs
(bad)
xchg
adc
cmps
dec
pop
sbb
jl
loopne
in
pop
cmp
ret
fisub
mov
loope
sbb
aas
outs
test
lods
jbe
jl
cmps
movs
xor
iret
jae
int
das
pushf
xchg
je
push
es
in
inc
ja
clc
test
mov
xchg
ja
ret
repz
pop
mov
ror
movs
popf
out
clc
cmp
xchg
bound
loopne
push
fwait
xor
(bad)
sub
adc
mov
lods
mov
hlt
and
cmp
cmp
cmps
leave
loopne
push
push
imul
jmp
mov
fadd
stos
and
inc
add
push
xchg
sub
(bad)
out
dec
pop
mov
xchg
sub
mov
dec
jp
add
jecxz
pop
fistp
xlat
ja
jmp
push
sub
jmp
xchg
xchg
imul
fsubr
jne
lahf
and
and
ins
jae
or
rol
sub
xor
les
not
shl
fs
aas
cmc
fisubr
sbb
push
(bad)
leave
enter
arpl
test
bound
lea
out
cld
xor
pusha
icebp
je
fistp
jmp
cli
repz
dec
popa
and
pop
cmp
scas
and
jo
mov
jno
repnz
fsubr
sbb
cmp
call
push
sti
cmc
stos
jmp
in
dec
std
sbb
xor
cs
aaa
retf
or
(bad)
sbb
pop
inc
xchg
inc
xchg
nop
mov
pop
aaa
add
stos
sbb
in
xchg
lahf
sub
cmps
push
mov
add
sahf
xchg
shl
dec
ffreep
xor
ror
pushf
ja
jl
mov
mov
and
ins
jmp
fsubp
jle
inc
outs
xor
pushf
dec
mov
lahf
aas
(bad)
inc
xor
sbb
clc
mov
jno
or
imul
or
pop
push
out
inc
ins
mov
dec
lea
les
push
jl
test
adc
repnz
mov
pop
xor
iret
and
mov
mov
jne
xchg
sub
dec
mov
inc
sahf
mov
jmp
stos
add
mov
dec
outs
loope
inc
sbb
dec
gs
out
mov
or
aaa
mov
in
test
push
cmc
or
daa
pop
je
int3
push
pop
das
ret
dec
mov
pop
sahf
movs
add
xchg
imul
cmp
push
cdq
packsswb
mov
mov
es
sub
pusha
mov
popa
popa
mov
jmp
dec
nop
popf
jb
out
add
mov
push
shl
ret
pop
mov
add
sub
push
pop
pop
xor
sbb
test
outs
xlat
mov
test
sub
mov
jmp
in
imul
fptan
adc
mov
or
shl
mov
adc
retf
int3
sar
rol
aam
adc
mov
mov
loop
int
int3
ret
mov
lods
sub
aaa
js
imul
push
mov
pop
fs
retf
xchg
(bad)
mov
jbe
jecxz
fbld
jo
adc
adc
sbb
jns
push
repz
xor
pop
dec
outs
into
scas
retf
lods
jge
ds
loope
xchg
mov
dec
adc
xor
leave
inc
cld
shr
jns
popa
ins
mov
pop
fst
add
jno
jmp
adc
leave
push
out
repnz
dec
int3
outs
push
or
into
adc
inc
cmp
daa
jle
cmp
ds
xchg
xor
sub
sar
outs
dec
jnp
in
fisub
jl
(bad)
aaa
aaa
pop
push
add
jecxz
push
sub
and
cld
fwait
ins
icebp
xchg
in
cmp
push
int3
pushf
sbb
pop
push
jg
mov
shr
jecxz
inc
xchg
push
call
inc
jle
out
pop
scas
mov
mov
retf
aam
retf
aad
sbb
pop
sub
leave
(bad)
jne
mov
ret
xor
jle
mov
cmp
dec
cmp
xor
xchg
stc
ins
jb
dec
or
xor
dec
pop
loope
je
mov
pop
jae
or
outs
mov
fcmovu
push
add
std
inc
push
add
mov
cmps
cmps
xchg
sbb
aaa
popf
fistp
(bad)
mov
dec
pop
and
mov
or
adc
mov
bound
pushf
retf
fisubr
xchg
push
(bad)
lahf
fidivr
jne
mov
nop
(bad)
call
das
cmp
test
jle
jmp
inc
clc
in
mov
push
adc
fmul
enter
rol
adc
ja
push
retf
ret
ret
push
pop
mov
ins
(bad)
fstp
mov
js
enter
adc
fidiv
pop
mov
adc
cmp
mov
adc
dec
fwait
jmp
push
cli
clc
mov
movs
call
outs
test
loop
jo
push
or
movs
sub
mov
pusha
add
mov
mov
cs
mov
mov
mov
mov
or
outs
lahf
or
mov
ja
fmul
fwait
js
cld
adc
sbb
dec
xor
mov
xlat
loope
outs
mov
shl
mov
xchg
les
xchg
retf
and
imul
test
xchg
enter
jecxz
rol
fidivr
mov
push
jge
iret
ins
mov
das
or
pop
adc
das
sub
xor
test
daa
in
and
xor
mov
jmp
inc
popa
in
in
cmp
into
add
cmps
sbb
repnz
mov
cmc
push
daa
adc
mov
clc
jg
dec
xor
mov
mov
ja
jae
cmp
call
sbb
adc
adc
inc
jmp
sub
stos
lock
sub
mov
fcom
stos
push
xor
jno
aaa
sub
lea
lock
xor
mov
jnp
aas
jg
xchg
mov
lahf
mov
enter
mov
mov
popf
aam
dec
and
lds
cmp
xor
xor
loopne
aaa
das
mov
push
push
and
movs
ja
push
data16
mov
inc
mov
outs
sbb
out
adc
sub
out
out
sbb
test
or
arpl
adc
add
dec
mov
cwde
dec
bound
rcl
aam
mov
jb
xor
cmp
adc
sbb
ffreep
(bad)
outs
mov
jge
jns
add
rcr
pusha
gs
and
mov
dec
sbb
or
or
(bad)
jnp
icebp
std
jmp
xor
data16
(bad)
push
ret
lahf
stos
mov
jle
mov
fsubr
cmp
adc
and
jb
inc
test
retf
sbb
inc
jne
cs
jl
stc
mov
ins
dec
mov
add
or
scas
push
mov
xlat
jne
mov
and
jbe
out
stos
sar
adc
pop
fdivr
mov
cmp
sbb
add
test
sbb
mov
xchg
pop
push
in
xchg
xchg
mov
call
lahf
imul
pop
scas
inc
leave
stc
cmp
jmp
xor
into
mov
xor
xchg
stc
mov
shl
xchg
test
aam
je
lods
jo
ins
push
in
cmp
fild
and
fist
push
sbb
jmp
push
dec
rcl
scas
and
jne
sahf
cmp
ds
cwde
xor
cmp
pop
dec
cmp
and
inc
mov
mov
or
jbe
loop
xchg
in
cmp
push
lods
add
and
xchg
sti
test
cmp
adc
int
aam
sar
nop
jmp
inc
ins
xlat
pop
test
retf
rcl
jg
loop
(bad)
std
aam
fwait
jbe
and
cmc
mov
punpckhwd
jle
neg
lock
sub
daa
pop
mov
dec
fwait
push
lods
hlt
dec
rol
es
cwde
ficom
xor
add
pushf
xchg
xchg
fidivr
push
outs
out
scas
adc
hlt
cmp
sbb
clc
fwait
inc
ficomp
mov
add
xchg
ror
and
icebp
popa
mov
inc
addr16
cmp
div
movs
jo
call
das
jl
add
mov
add
pop
add
xchg
inc
loope
dec
and
mov
repnz
bound
loop
or
iret
int
clc
pusha
stc
adc
pushf
cmc
mov
mov
pop
adc
js
inc
(bad)
adc
dec
lods
jecxz
mov
jns
repz
jp
adc
and
jp
aaa
jnp
jo
and
push
mov
mov
push
or
fs
popf
(bad)
cmp
out
dec
xor
push
or
sub
into
out
repz
rcl
mov
xor
pop
fcomp
out
cmp
or
int3
test
loope
ret
mov
mov
into
and
cmp
popa
or
pop
pop
nop
mov
ret
and
mov
fistp
push
je
lods
scas
dec
and
call
inc
mov
out
daa
pop
icebp
enter
in
mov
repnz
or
sub
add
jns
xchg
or
mov
ret
ds
lds
enter
ss
cli
pop
ss
idiv
mov
popa
ss
or
in
push
aad
jmp
sar
jecxz
enter
jns
sub
or
std
and
push
push
mov
repnz
mov
add
and
sti
or
jb
pop
mov
dec
mov
cmps
cmp
daa
je
loope
pop
mov
stos
sbb
pop
pusha
gs
out
scas
cmp
out
test
cli
cmp
mov
or
xor
mov
mov
pushf
pop
test
add
shr
pop
xor
push
pop
xor
push
test
sub
retf
dec
sub
lods
test
sub
test
call
mov
xchg
loope
dec
cmp
jae
cmp
shl
in
jae
and
daa
jl
icebp
ret
mov
push
push
gs
or
movs
dec
addr16
dec
daa
test
repz
pmuludq
ins
sub
push
mov
xlat
jns
pop
add
jmp
mov
es
cdq
rol
mov
dec
mov
pop
push
mov
fild
pop
fisttp
pop
daa
add
out
sub
call
mov
jecxz
adc
shl
jmp
sub
cdq
sbb
(bad)
repnz
push
jo
jae
int3
shl
sbb
or
adc
sbb
icebp
dec
cmps
cmps
xchg
jbe
pop
or
mov
frstor
xchg
dec
ret
cmp
test
(bad)
out
rcl
mov
inc
and
add
data16
retf
shl
sbb
in
(bad)
lods
or
add
push
adc
cmp
pop
push
dec
es
sbb
push
dec
(bad)
push
ja
fimul
daa
cmps
jecxz
jge
and
stos
outs
sbb
and
popa
inc
cmps
mov
jmp
and
pop
mov
jnp
jae
pop
pushf
add
aaa
int3
imul
js
adc
inc
cmp
(bad)
pop
cmc
hlt
rcl
cmp
(bad)
sbb
xor
and
fist
leave
push
push
mov
iret
or
jmp
retf
fdiv
fidiv
add
push
shl
outs
dec
dec
xchg
in
jns
(bad)
ins
push
and
aas
aam
or
jmp
push
push
shl
stos
stos
pop
jae
sub
pop
cmp
mov
mov
jns
pop
jo
adc
lods
les
fidiv
jnp
cmp
adc
outs
push
adc
jae
pop
add
imul
add
xchg
cwde
mov
and
ficomp
movs
sbb
into
outs
pop
pop
jb
mov
rcr
aam
sub
arpl
sub
loop
mov
stos
mov
push
mov
sbb
and
mov
xchg
xor
sbb
jl
inc
js
xchg
inc
std
sbb
loop
outs
mov
int3
xor
xchg
dec
test
mov
sbb
ss
dec
and
ret
inc
push
(bad)
mov
stc
clc
outs
test
xchg
and
add
adc
and
lock
dec
les
bndldx
and
push
imul
cmp
loopne
jecxz
xchg
xchg
popf
iret
test
test
mov
leave
icebp
adc
sub
xchg
xor
add
add
mov
ret
sbb
in
adc
add
or
xchg
(bad)
adc
repnz
xor
repz
add
ss
pop
xor
out
dec
ss
add
pop
inc
arpl
fcmovu
and
jbe
mov
ja
sub
cmp
frndint
push
inc
mov
test
mov
dec
iret
pop
mov
push
add
dec
xchg
or
aas
push
xchg
js
dec
and
(bad)
rol
stos
jb
popa
push
sbb
mov
adc
test
xchg
in
(bad)
mov
inc
push
push
int
aad
jmp
scas
add
xor
dec
fld
in
ja
fist
out
lea
pushf
lahf
(bad)
ror
cmc
xchg
jp
daa
xchg
ins
pop
in
ins
aas
ret
cmc
cmp
pop
lods
xchg
and
iret
rcr
cmp
or
or
neg
cmc
adc
or
xor
cmp
dec
lds
aaa
les
pop
dec
inc
out
sub
jne
or
jg
dec
das
shl
xor
out
fcmovbe
sub
mov
sbb
xchg
pop
push
xchg
xchg
inc
pop
call
cmc
stc
mov
fild
loop
les
fcomip
push
xlat
ss
or
test
retf
aam
pop
dec
mov
mov
push
sbb
lock
(bad)
fsub
lods
push
or
in
cmp
pop
and
popa
cmps
mov
mov
dec
mov
aaa
or
mov
push
mov
aas
push
cmp
push
out
mov
push
arpl
hlt
jne
jns
sbb
jl
adc
cs
movs
add
push
popf
inc
pop
add
inc
out
shr
in
outs
aad
add
inc
lahf
xor
and
jo
jo
pusha
pop
mov
inc
mov
repz
aas
mov
aas
jl
dec
fwait
xchg
test
push
fcom
xor
push
sbb
pushf
push
xchg
pop
bswap
outs
cld
clc
fdivp
and
mov
ja
push
lock
retf
(bad)
pusha
leave
xchg
cmp
mov
in
add
xchg
nop
mov
push
ds
and
push
jmp
adc
ret
popa
or
jg
lods
push
inc
dec
in
dec
push
inc
jmp
add
sbb
rcr
sbb
mov
add
fadd
dec
or
or
xchg
mov
clc
es
loop
fs
in
int
cmp
xor
mov
mov
and
xchg
test
adc
push
mov
mov
mov
pop
icebp
add
push
xor
mov
jns
aaa
jnp
or
nop
fwait
xchg
jb
jno
lock
sahf
mov
add
add
nop
inc
pop
arpl
leave
adc
inc
sahf
jl
push
inc
(bad)
cmp
jnp
xchg
cmp
mov
sub
pop
enter
push
or
mov
mov
arpl
push
call
loopne
gs
dec
fucomi
pop
mov
and
pop
or
mov
cs
enter
clc
or
jle
cmp
sbb
fstp
mov
inc
adc
gs
sbb
fwait
jnp
pusha
sahf
in
test
cli
out
or
sub
pop
int
dec
sub
call
pushf
sbb
push
cdq
mov
pop
push
push
mov
push
aad
cmp
stc
ja
fcomi
or
mov
lea
(bad)
mov
mov
mov
iret
cld
or
stc
xor
pop
rcr
in
sub
ret
xchg
or
outs
xchg
ret
adc
pop
out
xor
test
mov
inc
mov
pop
ret
cmp
xor
cmp
xchg
mov
or
ins
daa
mov
push
ins
in
sbb
adc
cmp
in
cmp
xchg
mov
inc
pop
ficom
enter
fst
fs
out
sbb
jno
xor
cmc
inc
movs
sar
cld
or
sub
test
nop
adc
or
call
out
xchg
adc
pop
and
jge
xchg
es
dec
xchg
mov
(bad)
sub
stc
inc
mov
cmp
sbb
fsubr
(bad)
push
cs
loope
dec
cmp
std
add
int
jmp
add
and
add
sahf
jae
and
sar
fmulp
xor
or
push
(bad)
mov
outs
sbb
aaa
sbb
lods
gs
shl
mov
and
mov
adc
mov
in
mov
mov
call
(bad)
dec
out
mov
mov
sbb
add
shl
shr
mov
sbb
mov
call
(bad)
push
mov
(bad)
and
sub
xchg
rol
ins
loopne
mov
hlt
fnstsw
rcl
add
mov
add
pop
(bad)
rol
popa
xchg
in
daa
jnp
sbb
neg
out
mov
xchg
inc
cmps
xor
stos
cs
addr16
fld
test
push
pusha
or
dec
call
inc
stos
and
cs
cmp
cmps
adc
adc
dec
or
jp
int3
ret
test
sub
icebp
ds
pop
lods
outs
mov
out
push
stos
xlat
loopne
and
call
int3
cdq
fidiv
jmp
retf
inc
or
out
outs
mov
jns
cmc
or
(bad)
dec
dec
push
inc
xchg
sbb
loope
push
sbb
fdiv
inc
adc
cmp
or
fadd
dec
sti
jo
fucom
mov
mov
adc
add
fstp
ins
sub
pop
test
or
(bad)
fwait
ins
mov
push
mov
mov
sub
fsubr
or
dec
test
mov
movs
mov
into
pop
fwait
sub
xchg
mov
inc
dec
dec
nop
sbb
dec
and
mov
pushw
dec
push
loop
retf
scas
pop
ins
mov
movmskps
sub
cmps
jno
and
outs
fldl2e
or
sub
dec
dec
dec
xor
mov
in
bound
inc
mov
cli
sbb
push
rcl
fstp
lods
pop
add
or
xchg
pop
dec
stos
(bad)
in
(bad)
fcmovne
cwde
add
push
pop
retf
jmp
fimul
push
cmp
cmp
shr
and
cli
mov
sub
add
ja
outs
and
or
fstp
or
jmp
mov
(bad)
movs
sbb
sbb
pop
pop
dec
pusha
ss
cmp
gs
jnp
adc
dec
ror
stos
lea
arpl
fisttp
sti
(bad)
aam
mov
push
add
xchg
or
jno
in
movs
movs
(bad)
cmps
push
xchg
inc
inc
sbb
xchg
and
loope
hlt
cmp
cmp
add
arpl
int3
out
jl
repnz
cmp
test
mov
inc
push
jne
xchg
into
push
cmp
jle
sti
mov
dec
fisttp
fsubr
ficom
xchg
xor
sar
pop
cmp
xor
in
cmc
popa
retf
movs
mov
ins
rcr
(bad)
mov
jns
inc
or
pop
mov
sbb
lock
sub
add
sbb
adc
cmp
(bad)
xchg
and
sbb
int3
pop
in
pop
jns
stos
sub
lahf
xchg
push
cs
xor
das
scas
fsub
les
or
and
sahf
jmp
ret
xor
retf
or
mov
cmp
jno
jecxz
sbb
add
pop
mov
xlat
shl
fcom
ror
pop
sub
inc
(bad)
mov
stos
adc
xchg
test
xchg
cmp
mov
dec
ret
int3
out
lods
lds
jecxz
pusha
adc
xor
retf
mov
sub
pusha
test
sub
or
push
adc
in
lods
shr
cmps
xor
and
sub
fucomi
or
icebp
xchg
sub
jmp
cmps
cmp
cmp
jmp
hlt
jne
lods
cmc
jmp
cli
dec
xchg
in
movs
int3
and
push
lds
test
gs
fiadd
pop
loop
or
xchg
pop
xchg
dec
ret
inc
ss
movs
ss
test
jno
mov
jae
sub
ins
psubusw
xchg
scas
fisttp
pop
push
push
rcr
or
(bad)
int3
sbb
sbb
(bad)
in
cmp
sbb
(bad)
fisub
mov
jo
test
loopne
fdivr
jge
jne
inc
inc
adc
xchg
ret
cmp
pop
fstp
mov
sub
outs
push
mov
loopne
jo
adc
fbstp
push
lock
xchg
into
inc
frndint
ins
adc
mov
scas
xchg
add
sbb
fcmovne
scas
push
(bad)
lods
fistp
(bad)
ins
xor
sbb
aaa
in
pop
push
jbe
mov
jbe
add
xor
fld
xor
lock
sbb
and
mov
mov
cld
add
push
jne
mov
and
inc
pop
jmp
pop
mov
jae
mov
repz
inc
iret
fisttp
jle
sub
add
mul
movs
not
sub
sbb
dec
je
push
les
mov
in
sahf
daa
mov
lock
fst
lds
or
pop
jae
sub
repnz
js
fdivrp
out
adc
add
push
or
nop
adc
and
ret
imul
inc
adc
cwde
mov
pop
ret
pop
iret
jg
pop
ins
or
bound
jge
add
mov
lods
or
popf
test
cwde
(bad)
mov
mov
dec
jns
mov
mov
add
sti
(bad)
rol
cdq
sub
or
loopne
inc
sar
push
popa
mov
iret
cmp
jl
adc
sahf
jne
lods
sahf
add
out
push
(bad)
out
cmp
or
sbb
sar
hlt
or
retf
cli
cmps
je
scas
and
push
add
repz
mov
or
lahf
add
ja
or
pop
aas
dec
sti
lahf
jl
xchg
jb
test
retf
mov
mov
outs
dec
leave
fdivr
mov
rcr
mov
in
(bad)
fisubr
xor
cmps
adc
imul
ret
loop
cmps
and
mov
repnz
jge
xchg
push
ds
jb
not
or
sbb
mov
pop
inc
gs
xchg
pop
mov
cmc
jmp
popa
cmp
and
and
jbe
retf
retf
fild
mov
push
(bad)
(bad)
fadd
jl
sbb
jne
in
ja
and
icebp
dec
sub
jne
int
mov
aam
mov
inc
push
mov
cdq
sbb
movs
fadd
sub
push
test
jmp
pushf
(bad)
mov
sbb
and
pop
dec
shl
mov
xor
out
cld
es
scas
nop
xor
sub
or
xor
out
push
das
ss
or
in
stc
out
cld
dec
mov
out
mov
sar
rcl
lds
mov
mov
xor
mov
das
xor
jp
stos
add
jns
pop
std
lods
daa
jmp
rcr
push
pop
push
ins
stc
jmp
mov
pushf
jns
or
retf
ror
xchg
movs
sbb
retf
or
std
jmp
push
not
or
and
out
or
push
add
xchg
lds
sbb
push
imul
les
cmps
or
mov
aaa
push
and
lods
cmp
in
xchg
sub
inc
mov
arpl
fldenv
pop
lods
int
push
jle
les
dec
and
pop
icebp
xchg
push
shr
push
cmps
out
test
or
(bad)
xor
les
and
add
fsub
nop
fnsave
mov
jno
nop
sub
sbb
jl
ins
mov
nop
or
mov
adc
mov
push
jae
dec
fs
jecxz
push
and
loope
dec
push
jbe
mov
pop
jne
or
mov
mov
sar
ret
clc
in
jno
or
push
ss
arpl
icebp
cmps
adc
iret
fnsave
and
sub
ins
mov
push
inc
scas
xchg
jo
fnstenv
adc
cwde
add
scas
cli
xor
rcl
stos
jns
mov
(bad)
retf
mov
sti
retf
mov
mov
(bad)
ja
xchg
cli
pop
push
add
inc
sbb
push
lds
ins
sub
shl
movs
gs
int
or
adc
push
push
push
sti
ja
jbe
pop
push
sub
sbb
add
ret
test
fnstcw
(bad)
jecxz
sub
cli
aaa
jge
loop
aam
push
or
xlat
loope
shr
pop
dec
or
xor
cmp
pop
xchg
inc
in
clc
aaa
inc
loopne
push
jns
call
ja
nop
inc
les
sbb
fwait
iret
aas
mov
xor
outs
jb
cmps
movs
dec
sub
or
xor
mov
inc
lock
ins
add
pop
adc
inc
gs
je
in
in
and
mov
dec
mov
xor
mov
outs
rcl
int3
xor
scas
push
addr16
push
rcr
mov
xlat
inc
outs
clc
std
push
das
dec
aas
nop
dec
jp
leave
mov
das
mov
mov
push
inc
sub
sub
xor
enter
fdiv
jne
add
dec
loopne
ret
stos
xlat
pop
call
adc
sub
jo
mov
std
push
das
enter
(bad)
loop
mov
jo
push
fwait
jge
push
push
xchg
ja
aad
push
pop
mov
sub
call
aam
(bad)
sub
mov
fwait
movs
or
inc
inc
es
add
push
rcr
adc
fnstenv
leave
pop
int3
sbb
test
and
jne
adc
clc
ss
in
cmp
sbb
(bad)
fst
stos
fisttp
out
stc
call
mov
jns
cmp
cmp
in
push
or
push
mul
inc
ss
pop
sub
xor
loope
cmp
cmps
or
(bad)
mul
push
dec
jp
inc
(bad)
push
shr
mov
fimul
and
adc
aas
add
nop
push
loop
int3
mov
dec
movs
shl
int
dec
add
mov
jmp
xor
es
mov
test
or
xchg
fwait
fwait
mov
iret
mov
sub
and
push
(bad)
(bad)
sbb
inc
add
add
imul
xchg
into
into
xor
jo
sub
out
xchg
and
mov
xor
int3
inc
mov
adc
jb
mov
loopne
push
mov
jl
dec
jno
sub
add
jmp
dec
call
push
rol
fcomp
sub
movs
or
loope
mov
ficomp
(bad)
ds
push
(bad)
(bad)
cld
int
mov
sbb
loop
sar
sbb
dec
cmps
rcr
add
out
cmps
sbb
jg
cmp
rol
sti
(bad)
cmc
ror
sub
mov
jae
scas
lahf
mov
fldcw
mov
xlat
adc
jo
shr
mov
pop
jns
push
lahf
or
xor
movs
(bad)
scas
inc
ss
pop
pop
cmp
xchg
cli
loop
repz
sahf
sbb
dec
and
lods
in
lds
daa
mov
mov
xchg
lahf
or
in
mov
les
cld
sub
adc
bound
and
test
cmps
add
adc
add
cmp
imul
icebp
fs
mov
push
mov
jns
sub
jne
adc
ds
pop
xchg
inc
cmp
ins
dec
or
fiadd
shl
js
dec
inc
push
mov
or
shl
push
cli
or
mov
jecxz
rcl
push
cmp
not
cld
ficom
push
or
(bad)
loop
cli
mov
push
repnz
jle
add
cmp
push
xor
mov
sbb
sti
push
xor
rcl
call
clc
out
lods
mov
lock
add
inc
(bad)
push
daa
xor
out
rol
aas
ss
pop
xor
les
ja
hlt
stos
iret
sub
loopne
jns
fisttp
(bad)
lods
adc
or
cmps
add
push
rcl
movs
fcmovbe
pop
xchg
xchg
xchg
(bad)
retf
mov
int
scas
adc
call
fcomp
test
mov
xchg
fidiv
cmp
cmp
push
or
mov
mov
imul
sub
or
out
pop
push
dec
dec
cli
xor
jecxz
fcom
push
push
xchg
xchg
out
out
sub
adc
int3
cld
aaa
xchg
in
test
inc
dec
call
jl
xor
retf
mov
jne
cmps
dec
mov
mov
xchg
daa
ja
scas
rol
sub
loope
(bad)
es
or
arpl
dec
cmp
push
out
jb
les
aad
and
xchg
pop
xchg
aad
outs
ins
xchg
shr
cmps
pop
je
or
std
inc
movs
bsf
loopne
aaa
push
daa
mov
loopne
xor
xchg
inc
out
lods
mov
nop
cmps
scas
icebp
out
mov
je
fsubr
test
aad
jmp
mov
rcr
fwait
pop
cmps
push
adc
cmp
ins
cdq
xchg
clc
mov
ficom
outs
popa
popa
mov
test
cmps
pop
adc
arpl
das
int3
cmps
lods
mov
test
adc
mov
movs
mov
jmp
sbb
jle
lods
jle
jb
and
xor
ja
cs
stos
adc
or
(bad)
pop
sub
sub
scas
push
sub
sub
aas
ins
ja
cmps
mov
bound
mov
test
shr
test
xchg
pushf
ret
dec
repz
jno
pop
lods
iret
cmp
imul
push
mov
loopne
xor
fimul
aas
add
jmp
mov
les
pop
sub
cmp
lods
(bad)
dec
repnz
adc
mov
repz
es
cmp
jl
mov
es
(bad)
movs
sbb
pop
movs
fst
loop
inc
scas
test
push
js
and
add
inc
adc
daa
rcl
sbb
sub
iret
jmp
pusha
cs
iret
je
jbe
nop
in
cmp
add
add
cmp
bound
dec
sbb
addr16
(bad)
out
sbb
loopne
push
fsubr
or
shl
jb
retf
dec
jmp
jno
xchg
test
adc
scas
daa
push
push
fs
mov
adc
dec
adc
ja
xor
mov
out
cmps
call
lea
sbb
adc
push
push
sbb
out
cmc
repz
lods
shl
mov
mov
movs
daa
sub
dec
xor
cmps
mov
mov
or
jmp
sub
add
pop
ss
inc
sar
cmps
pop
xchg
iret
mov
in
(bad)
enter
les
inc
jno
jb
test
(bad)
adc
xor
push
call
scas
ss
push
dec
ins
popf
pop
test
cmps
adc
xor
movs
sbb
push
enter
pop
movs
jmp
outs
ficomp
js
push
jecxz
ret
repz
dec
imul
repnz
inc
inc
cmp
sbb
adc
cmp
sbb
ins
mov
clc
imul
ins
sar
js
cmps
lods
dec
shl
xchg
xor
enter
xchg
pop
cmp
sti
adc
ds
sbb
call
xchg
or
dec
cmc
or
fsub
inc
shr
push
cmp
clc
rol
cmp
xchg
mov
sahf
inc
int
jne
mov
dec
dec
pop
adc
add
pop
sub
lods
push
call
ja
retf
ror
shl
and
in
jns
out
jno
shl
mov
push
xchg
mov
xor
push
dec
std
mov
scas
xchg
mov
sbb
mov
mov
pusha
test
pusha
push
add
lea
mov
imul
test
sub
cmps
movs
pop
adc
mov
jno
or
and
je
adc
adc
inc
cwde
jp
(bad)
ds
neg
lods
dec
and
mul
jno
cmc
jle
in
(bad)
pop
lahf
(bad)
jl
popf
mov
pop
cmp
idiv
mov
mov
fsub
xlat
xchg
retf
dec
push
stos
imul
xchg
cmovs
cmp
das
inc
rcr
out
jmp
mov
in
mov
xchg
cmp
jp
dec
(bad)
jnp
push
xor
mov
loop
loope
lahf
scas
pop
mov
jae
lods
inc
jbe
(bad)
jecxz
ss
aam
mov
loope
push
test
call
jp
leave
outs
and
out
fidiv
sub
push
imul
jge
cmp
icebp
rcr
lods
(bad)
ror
pushf
adc
mov
cmp
sub
dec
dec
xor
fmul
retf
test
jnp
or
fst
and
mov
sub
ja
inc
pop
dec
xor
call
cmps
jnp
cmps
test
icebp
inc
outs
ss
mov
or
lds
pop
mov
les
int3
adc
push
sub
push
mul
dec
sub
pop
inc
cwde
jb
aaa
ror
ja
or
fbld
pushf
fmul
dec
inc
int
push
test
mov
mov
mov
adc
scas
cwde
(bad)
aas
(bad)
sti
mov
xchg
cli
xchg
adc
jge
imul
(bad)
test
sar
xor
test
xchg
push
loopne
dec
inc
in
ret
test
cmps
sbb
adc
push
repnz
adc
data16
adc
stc
mov
mov
cs
xchg
xchg
mov
in
push
ins
adc
push
jnp
xor
add
adc
jo
vpsubd
int3
mov
push
loop
and
cdq
stos
(bad)
outs
inc
pusha
jb
or
jne
popf
in
scas
retf
std
mov
jno
jge
cmp
cld
push
mov
jecxz
add
out
stc
lods
xor
iret
adc
pusha
cmp
in
mov
(bad)
int
and
jmp
xchg
inc
add
aad
xor
ror
ret
iret
or
dec
jge
dec
jp
(bad)
in
sahf
jno
fisub
sar
je
xchg
add
or
jecxz
mov
cmp
pusha
jg
cmps
(bad)
fnstenv
sar
sbb
jno
out
pusha
int
sub
xchg
push
jmp
cmc
cmp
das
xchg
dec
push
xchg
out
ret
ret
fcmovnb
dec
add
and
test
in
call
mov
out
cmps
mov
xor
fist
ror
movs
dec
or
sbb
xchg
lds
pop
or
sub
mov
pusha
stc
inc
mov
jns
sahf
leave
stos
movs
lds
sbb
dec
movs
jmp
or
lds
dec
rol
jecxz
adc
push
mov
popf
hlt
mov
jg
dec
gs
ret
xchg
fcomp
pop
lsl
push
cdq
pop
jecxz
div
stos
add
add
or
mov
xchg
pop
pop
sbb
fs
mov
cmp
cmp
mov
xchg
dec
icebp
daa
je
pop
into
fcmovne
or
ret
pop
inc
sbb
jecxz
add
aam
cmp
cli
mov
jg
mov
mov
and
sti
adc
jg
mov
pop
es
ss
jb
xor
push
and
inc
scas
xor
clc
lods
dec
push
test
dec
addr16
fmul
js
adc
push
sbb
cmp
push
fisubr
adc
stos
scas
sub
out
(bad)
sub
add
mov
retf
test
cmps
dec
or
push
dec
mov
pusha
out
repz
cmp
add
les
rcr
and
js
push
nop
mov
test
pop
jns
inc
inc
inc
fnstsw
leave
scas
loope
fst
jne
repz
ret
ficomp
(bad)
out
hlt
int
call
sub
gs
dec
ins
pop
adc
mov
int
retf
fadd
cmc
xor
dec
dec
or
mov
adc
mov
or
leave
push
dec
repnz
inc
aas
sbb
in
fild
cdq
dec
popf
dec
sti
loope
push
and
adc
sbb
jmp
sbb
inc
sub
push
pop
push
ret
arpl
xchg
cmps
loop
jl
aaa
dec
xchg
repz
push
dec
cmc
fisub
mov
mov
sub
push
retf
push
cmp
lods
int3
inc
add
or
test
pop
add
sbb
test
sbb
add
push
and
movs
xor
adc
pushf
fild
cmp
or
xchg
ins
outs
les
fld
xor
nop
enter
adc
nop
pop
xchg
pop
inc
jno
sbb
pop
loopne
inc
repnz
inc
jge
mov
sbb
ss
movs
mov
dec
pop
shl
mov
sub
mov
xor
xor
push
mov
out
aam
mov
and
loope
imul
lea
mov
fcos
jp
bound
cmp
fdiv
and
xchg
mov
call
lahf
rcl
or
ds
fsubp
jecxz
test
adc
push
arpl
xchg
fwait
hlt
(bad)
outs
test
ret
or
js
mov
and
dec
adc
iret
lea
inc
cmp
hlt
test
dec
jg
rol
dec
xor
mov
popf
jl
add
mov
xchg
fld
(bad)
(bad)
jnp
(bad)
ins
je
stc
int
dec
cwde
or
data16
cli
adc
jbe
xor
xchg
adc
adc
push
mov
dec
and
pop
jo
cwde
das
or
mov
mov
sti
and
fnstenv
ror
pop
aas
xchg
scas
pop
jb
hlt
nop
jl
adc
jo
pushf
not
dec
mov
mov
iret
fxch
mov
jmp
mov
(bad)
stos
xchg
out
pushf
arpl
test
mov
push
test
dec
mov
inc
jo
nop
movs
add
test
call
jns
inc
icebp
in
sbb
adc
push
sbb
(bad)
data16
aaa
out
gs
jmp
std
or
xor
enter
pop
or
imul
jmp
xchg
and
stc
rol
(bad)
rcl
(bad)
iret
mov
mov
jmp
sbb
pop
xlat
lods
and
mov
and
out
push
fadd
mov
mov
push
inc
out
push
lds
mov
adc
sub
cmps
sti
jo
add
xor
cwde
aad
in
mov
cmp
push
sbb
fist
sbb
addr16
je
mov
or
mov
xchg
shl
arpl
scas
and
scas
sub
bound
pop
cmp
mov
lods
push
(bad)
mov
push
ror
popa
inc
sbb
mov
gs
sti
lds
dec
xchg
in
js
bound
push
mov
push
pop
cs
add
sti
jl
test
sub
pusha
dec
rcl
push
xchg
scas
cmc
add
push
push
popa
xor
mov
repnz
fldcw
stc
xor
test
rol
hlt
pop
enter
sbb
mov
rol
sub
push
scas
sahf
cld
cmp
scas
inc
jbe
push
dec
add
test
adc
inc
mov
and
ret
inc
retf
scas
ja
mov
cmp
(bad)
jg
pusha
lds
dec
pop
loopne
(bad)
shl
sub
cmps
popf
jbe
mov
cld
sub
xchg
push
xchg
mov
mov
and
sbb
sbb
bnd
dec
jae
pusha
and
cmc
push
imul
(bad)
aad
jg
shl
mov
fisubr
pop
or
stc
fdivr
push
test
stos
mov
mov
or
add
scas
das
pop
loop
jae
xor
leave
jns
loopne
adc
pushf
dec
in
mov
fst
loope
mov
test
sbb
xor
repz
sub
ror
(bad)
aad
aam
and
adc
sahf
mov
mov
add
xchg
mov
adc
fild
cmps
lock
neg
xchg
jns
sub
sub
dec
pop
jmp
fwait
add
js
inc
cmc
fdiv
or
(bad)
or
aas
pop
xor
(bad)
or
add
popa
cmps
scas
cld
xlat
les
dec
inc
dec
pop
aad
repz
aaa
int3
jmp
cmp
add
xchg
sbb
in
(bad)
add
sbb
sahf
mov
mov
in
ret
popa
fdivp
add
xor
test
call
icebp
cld
push
call
mov
je
mov
scas
mov
add
mov
pop
sar
cmc
add
jmp
pop
int3
adc
shr
fmul
lods
or
lds
and
cs
xchg
ds
ret
mov
in
jns
mov
popa
or
mov
leave
adc
loopne
test
push
cmp
mov
push
add
(bad)
(bad)
push
stc
(bad)
js
inc
clc
cmp
mov
mov
ja
in
(bad)
ss
ret
push
js
enter
mov
adc
adc
dec
xchg
gs
mov
sar
bound
adc
inc
xchg
stos
(bad)
inc
repz
jo
jge
xor
jno
sub
rcr
xchg
adc
gs
test
mov
call
mov
stos
mov
jbe
pop
xor
repz
in
sahf
or
in
ds
ffree
jmp
xchg
adc
enter
xchg
dec
rol
movs
xchg
or
or
sahf
cmp
loop
iret
shr
outs
xor
fdiv
repnz
adc
hlt
pop
inc
or
mov
push
push
pop
lds
dec
repz
iret
mov
test
xchg
dec
sbb
aaa
sbb
(bad)
pop
adc
idiv
scas
mov
sub
rol
test
loop
cmp
fild
xor
nop
ins
jle
mov
js
add
mov
dec
clc
adc
mov
shl
dec
inc
and
popf
sub
dec
into
clc
mov
push
shl
mov
xor
movs
or
mov
add
xor
inc
ss
push
dec
sahf
test
das
aas
mov
mov
mov
sar
mov
inc
fsubr
pop
xor
retf
fmul
mov
sbb
into
loopne
xor
iret
js
jl
fiadd
mov
xor
test
loope
xor
mov
sar
xchg
fcomp
or
mov
xor
rol
cmp
popf
inc
adc
mov
es
inc
push
xchg
movs
mov
mov
mov
inc
push
sub
(bad)
in
sbb
imul
call
adc
loope
(bad)
addr16
cs
fst
cmp
jo
popa
fsub
ins
adc
shr
es
cmp
xor
data16
pop
aaa
add
cmps
arpl
loopne
dec
iret
xchg
arpl
fwait
mov
loope
sbb
sbb
dec
jmp
pop
test
ja
out
cmp
imul
movs
repnz
stos
inc
add
imul
push
sti
rcl
inc
gs
mov
mov
test
pop
mov
iret
dec
mov
sar
mov
pop
dec
sbb
push
mov
ret
shl
fcomp
xchg
shl
sub
mov
daa
xor
pop
sub
into
inc
xor
ret
sub
adc
push
sbb
rcl
adc
vcvtsi2ss
push
adc
jo
jnp
or
cld
mov
icebp
fiadd
sbb
push
xchg
or
loopne
jge
in
mov
jno
cmps
adc
lods
sar
sbb
or
adc
mov
push
cmp
sti
push
sahf
mov
lods
xchg
jle
and
mov
cmp
mul
stos
outs
cwde
mov
test
pop
add
add
xor
mov
sbb
sbb
into
test
mov
jmp
out
cmp
test
pop
mov
xchg
and
adc
jnp
and
test
out
cmp
push
rcl
push
sbb
jb
loopne
aas
(bad)
enter
mov
out
imul
js
inc
leave
aaa
xor
cmp
sub
mov
ror
and
mov
aam
jge
hlt
adc
inc
ds
ret
mov
lock
es
sbb
mov
ss
xor
and
pop
sbb
or
mov
clc
pop
sub
xacquire
cmp
loop
sbb
inc
ret
(bad)
rcl
jno
sbb
movs
push
mov
pop
pop
mov
mov
xlat
retf
jg
fxch
sbb
mov
xor
jmp
sub
add
cli
push
mov
mov
ja
lods
cmc
ds
sub
repz
ja
hlt
jb
sub
sbb
dec
sbb
sbb
push
dec
ror
not
imul
mov
lods
aad
add
xor
push
retf
push
jno
jne
js
call
or
jb
mov
lods
es
or
pop
cmp
sti
xor
pushf
shl
cwde
lock
xor
not
pop
mov
aam
or
dec
imul
fwait
(bad)
(bad)
popa
inc
pushf
shl
sbb
mov
inc
fninit
or
mov
cmps
sbb
mov
and
rol
js
jmp
jl
inc
pushf
xchg
std
mov
jmp
xchg
fsub
jno
jbe
cmp
shl
dec
jbe
jmp
lea
(bad)
jnp
mov
xchg
pop
pop
pop
loop
jb
add
xchg
jge
push
cld
aam
dec
ficom
xchg
cmps
hlt
xor
mov
mov
inc
mov
mov
je
imul
loop
mov
push
out
in
push
inc
aad
pusha
out
pop
loopne
add
lahf
jecxz
mov
out
ins
bound
cmc
xchg
les
mov
mov
mov
sub
mov
mov
outs
jb
add
(bad)
das
push
sbb
sbb
dec
jmp
inc
test
adc
loopne
aaa
dec
into
or
stos
sti
pushf
pop
pop
cwde
mov
mov
lahf
aaa
jae
mov
pop
mov
mov
jno
pusha
jge
mov
xor
ret
cld
xor
xchg
ja
mov
push
in
fild
test
loopne
icebp
mov
cmc
jno
xchg
js
dec
xor
jns
not
xchg
mov
mov
jmp
xor
jno
xchg
(bad)
sahf
xchg
add
mov
push
mov
push
lahf
dec
pop
add
es
cwde
pop
stc
shrd
inc
jno
push
frstor
cmp
pop
mov
xchg
(bad)
mov
mov
test
dec
xchg
neg
add
inc
lods
pop
loop
xor
test
shl
push
push
ret
adc
add
pop
retf
out
add
pop
outs
sti
push
sub
mov
rol
mov
scas
cmp
cmc
pop
loop
nop
adc
xchg
pop
(bad)
aas
sbb
dec
(bad)
jmp
pop
sar
divps
push
adc
add
out
lahf
jno
adc
dec
in
retf
add
mov
mov
repz
lahf
xor
loopne
out
mov
pop
daa
aad
adc
dec
jg
in
add
mov
lods
retf
movs
adc
je
inc
fist
test
lahf
setns
jge
add
add
and
or
enter
mov
leave
jno
lock
into
inc
add
inc
ss
pushf
dec
mov
icebp
mov
sbb
out
jp
out
add
shl
leave
retf
sub
adc
mov
popa
cmps
dec
pop
xchg
popf
into
repz
nop
mov
mov
inc
add
cdq
and
out
mov
push
rol
inc
lea
je
jae
xlat
sub
xchg
in
loopne
push
cmp
sub
out
out
imul
sar
out
mov
aam
movs
test
sbb
aam
cmc
in
inc
lods
push
lock
mov
fs
jg
mov
test
test
ins
inc
scas
ja
leave
lods
lea
cdq
push
or
inc
mov
in
xchg
push
xchg
add
sti
call
sbb
inc
fdiv
outs
rcr
(bad)
jge
fild
or
mov
test
xchg
sbb
fbld
cmp
rol
add
lahf
in
mov
sbb
clc
jg
jle
adc
loope
add
dec
push
cdq
in
jmp
adc
into
ss
test
mov
rcr
sub
and
je
jge
aam
xchg
loopne
mov
rcl
dec
or
movs
add
out
leave
retf
mov
cmp
add
aad
xor
stos
jmp
push
(bad)
push
sbb
repz
test
cmp
xor
int3
xor
arpl
fs
jg
jbe
scas
push
popa
shl
push
cvtps2pi
jns
loop
jle
into
mul
mov
addr16
shr
ror
sbb
cld
mov
in
dec
jmp
mov
sti
div
aas
into
jno
cld
xor
mov
fs
pushf
push
cli
pop
or
pop
hlt
loope
or
push
(bad)
out
xor
push
cmp
out
hlt
inc
adc
push
(bad)
loope
hlt
(bad)
cld
ss
out
ds
mov
scas
ror
pushf
into
add
test
rep
shr
int3
retf
rcl
and
shl
sub
cwde
in
dec
xor
or
icebp
push
inc
cmova
lds
xchg
push
shr
lea
test
cmp
in
test
ja
repz
not
loope
jmp
jmp
aaa
dec
cmps
sbb
ds
lds
and
sahf
push
cmp
outs
lea
push
cli
call
push
cli
push
push
lds
cmp
cmps
sbb
or
std
push
stc
mov
cmp
cmc
xchg
in
adc
push
fimul
loop
test
adc
jmp
jmp
pusha
shl
xchg
fist
or
adc
sahf
mov
push
adc
(bad)
out
pop
jg
cmp
adc
cmp
mov
popa
cmc
mov
mov
add
mov
jnp
add
fwait
xor
push
out
dec
xchg
cmp
mov
repz
loopne
mov
icebp
xor
jns
std
pop
shr
cmps
adc
push
adc
mov
jns
adc
sub
cli
push
or
(bad)
xor
adc
inc
cmp
imul
ds
pusha
sti
(bad)
jne
ficom
mov
std
fld
cs
inc
ins
jae
xlat
lea
add
rcl
sbb
js
fdivr
lea
jbe
pushf
mov
add
push
cli
xor
fsub
jae
jp
mov
and
ret
inc
popf
mov
icebp
cmp
sahf
cmp
test
neg
mov
inc
hlt
cli
call
push
push
cmps
inc
inc
cmc
dec
adc
jp
outs
shr
mov
retf
fsubr
pop
inc
(bad)
lahf
mov
pop
imul
fstp
lahf
loope
mov
out
test
fstp
mov
(bad)
xchg
push
push
jne
lahf
fcomip
cmp
add
aad
in
lahf
aas
lock
je
test
loopne
ja
mov
clc
xlat
neg
jno
cli
fcomp
xor
xor
neg
and
inc
mov
xchg
out
sbb
sbb
cmps
(bad)
mov
retf
(bad)
iret
(bad)
or
jl
add
add
push
(bad)
mov
sbb
jnp
mov
mov
dec
aaa
sbb
cli
cmp
inc
in
push
call
push
push
mov
mov
jmp
jmp
push
sti
push
ret
inc
cli
mov
fcomi
mov
or
(bad)
clc
gs
sub
retf
xchg
cwde
xchg
jnp
jg
sbb
adc
mov
and
mov
jmp
and
inc
(bad)
lea
retf
stos
xchg
push
(bad)
(bad)
jle
repz
mov
push
call
movs
repnz
pushf
sub
or
push
scas
pop
test
pop
pop
inc
in
jle
push
aas
ror
xchg
jnp
push
test
call
sar
jge
test
call
jmp
stc
cmps
mov
xchg
or
jmp
fwait
(bad)
(bad)
stos
outs
sub
jmp
call
mov
or
fist
out
pop
inc
xchg
xor
dec
add
fiadd
je
imul
cs
int
cmps
sbb
shr
dec
cld
data16
rcl
adc
iret
and
cmc
je
(bad)
jp
jp
jae
mov
or
jae
or
sbb
data16
ret
ja
sbb
mov
adc
cwde
pop
jle
aaa
inc
xchg
push
sbb
test
jns
dec
daa
add
jle
cmps
scas
xor
lods
xchg
xchg
movs
out
cmps
movs
sbb
in
mov
sbb
jg
dec
fiadd
pop
retf
or
sar
ins
jns
mov
loope
sub
mov
mov
pop
imul
mov
scas
aad
(bad)
push
push
outs
cmp
push
mov
std
dec
inc
push
dec
cmps
cmp
jle
pop
sar
cwde
imul
cmp
sbb
outs
cmp
pop
mov
ss
jbe
jg
cmp
test
(bad)
sti
mov
push
lahf
std
add
jns
jno
(bad)
and
aam
sbb
jbe
fidivr
inc
fistp
jecxz
push
pop
dec
pop
xchg
xor
adc
aaa
jg
sub
jo
push
(bad)
jne
and
pop
xchg
or
or
outs
mov
adc
stos
cmp
test
mov
adc
fnstsw
out
mov
jo
xchg
dec
into
sbb
jno
inc
dec
xor
sbb
mov
pop
mov
test
sub
push
sbb
test
lods
push
outs
cs
add
jbe
dec
imul
adc
jb
les
mov
pop
cmp
ja
fucomp
cmps
mov
loopne
lea
inc
jns
sub
or
dec
xchg
bound
sbb
mov
mov
mov
dec
pop
outs
cdq
cmps
jmp
adc
cmp
or
sbb
aad
add
sbb
inc
jb
test
or
cli
call
cdq
push
mov
or
sar
cs
adc
scas
nop
xor
jnp
dec
aas
(bad)
jno
mov
cmp
cmc
push
jmp
cmp
jg
cmc
in
push
scas
ins
push
and
jmp
nop
push
push
push
sub
mov
jno
dec
mov
add
and
adc
add
test
aad
cmp
sub
xchg
xor
or
mov
das
pop
popa
cli
outs
mov
addr16
fcmovnbe
mov
inc
call
cld
stos
test
mov
sar
aad
xchg
jae
mov
(bad)
or
fwait
mov
rcr
test
xor
sahf
aas
gs
inc
dec
sbb
jb
imul
pop
pop
pushf
nop
jae
and
jecxz
pop
xchg
mov
xor
out
fdiv
retf
in
jmp
ins
fbld
pop
mov
dec
fimul
jno
(bad)
mov
into
test
pop
imul
outs
cmp
mov
nop
sub
mov
sbb
jge
nop
inc
cmps
xor
dec
scas
sub
fild
imul
or
cmp
arpl
add
cli
cli
mov
cmp
xlat
cmp
int
nop
cmps
int3
jecxz
mov
imul
add
imul
mov
fistp
push
push
push
push
out
stc
and
(bad)
ss
ficom
pushf
mov
(bad)
rol
(bad)
enter
repz
loope
into
dec
aad
fisubr
sbb
test
aaa
xor
addr16
jg
and
jp
pop
fs
dec
adc
xchg
xchg
std
mov
arpl
fidiv
push
fidivr
add
add
or
jbe
pop
xor
in
cmp
into
xor
dec
hlt
mov
int3
test
call
test
enter
shl
pop
jmp
add
mov
and
hlt
add
outs
fwait
mov
sub
dec
imul
in
pop
mov
jecxz
push
jne
out
dec
not
and
dec
jb
pop
ret
pop
(bad)
push
shl
mov
(bad)
dec
dec
test
dec
not
call
clc
aad
pusha
fs
xor
pop
out
push
push
lock
(bad)
jle
pop
xchg
mov
xchg
enter
or
xor
in
push
or
stos
jae
pop
not
pop
pop
mov
dec
xchg
sub
rol
ficomp
std
pop
jbe
mov
cmps
rcr
scas
ss
mov
mov
cmp
xor
fcompp
sti
inc
shl
outs
cmps
(bad)
hlt
adc
or
popa
in
cmp
mov
(bad)
mov
dec
xor
jg
lods
xor
pop
cmp
inc
lea
std
cmp
jae
mul
push
cmp
inc
aam
popf
push
push
(bad)
mov
cmp
(bad)
pop
xchg
int
inc
cmp
dec
mov
(bad)
iret
cli
sub
sub
sbb
nop
inc
pop
dec
xchg
sub
inc
add
shr
icebp
ins
xchg
mov
ror
out
jle
sbb
or
ss
dec
scas
ret
out
dec
cmp
add
into
lea
inc
mov
loop
cdq
push
push
lods
popf
push
data16
xchg
mul
jnp
xchg
cmps
mov
dec
adc
fistp
aaa
adc
inc
pop
jmp
mov
dec
push
pushw
mov
jl
mov
xor
leave
jl
jmp
(bad)
jbe
pop
jns
imul
xchg
ins
inc
mov
dec
pop
adc
outs
mov
sbb
cmp
adc
pop
or
mov
imul
add
pop
jp
call
sbb
clc
adc
mov
dec
das
xchg
sub
test
jg
mov
sbb
push
xor
enter
xor
fidiv
jle
stc
sub
add
add
inc
xor
in
mov
jno
jl
cli
xchg
jmp
jbe
cmc
mov
mov
cmp
mov
jp
xor
inc
adc
mov
jb
dec
or
outs
cdq
lods
imul
les
sbb
push
xor
or
push
out
dec
pop
adc
icebp
xor
out
inc
lods
jns
add
adc
cmp
push
icebp
fldenv
adc
into
sub
add
mov
sti
inc
sbb
jmp
fcomp
aam
loopne
call
pop
fadd
and
jbe
out
bts
sti
adc
in
push
int3
dec
call
cwde
call
sub
jge
rep
or
sub
xor
adc
test
fst
mov
sti
xchg
pop
repnz
xchg
cli
push
sbb
dec
clc
mov
pop
push
fmul
xchg
sbb
das
mov
jp
pop
ret
sub
add
shr
push
cmp
pop
adc
int
fadd
or
adc
dec
lds
loopne
test
out
test
lds
pushf
imul
cmc
cmc
lea
scas
cmp
shl
xchg
das
out
ffree
adc
add
loope
je
push
shr
mov
adc
add
xor
scas
lahf
call
sub
inc
movs
xor
outs
sbb
cs
or
sbb
jne
pop
es
mov
xchg
pusha
out
inc
mov
xchg
fwait
pop
loop
add
out
gs
std
ja
adc
sub
dec
std
lods
pop
cmp
fdivr
push
xor
sar
lds
not
je
pop
addr16
xor
ret
cmp
inc
jae
(bad)
ficom
xor
inc
nop
inc
loop
cmc
test
sbb
add
outs
xchg
push
xchg
es
cwde
adc
dec
(bad)
lahf
ja
mov
cmp
(bad)
enter
jg
and
clc
xor
(bad)
jmp
mov
and
fldenv
or
test
cwde
mov
dec
adc
rcr
xchg
in
xchg
fwait
cld
loop
out
out
push
dec
xchg
or
in
ret
sti
xchg
inc
cs
or
jns
leave
inc
test
std
xor
popf
jno
dec
pop
sub
retf
xlat
sbb
std
ja
into
les
sub
fist
mov
not
and
ret
cmp
jne
inc
ror
loop
pop
cmp
cmc
mov
ins
pop
jge
ja
pusha
push
daa
mov
cmc
inc
out
push
retf
xor
sbb
and
dec
(bad)
fdiv
(bad)
pop
mov
and
setl
mov
mov
adc
shl
das
clc
mov
sbb
imul
enter
xchg
(bad)
movs
mov
mov
leave
dec
xchg
sbb
jl
mov
xchg
retf
mov
and
shl
sub
cdq
mov
in
jmp
mov
inc
and
mov
hlt
sbb
or
or
outs
sar
fidiv
dec
push
sbb
ja
mov
out
mov
loopne
adc
std
stc
int3
dec
pop
(bad)
loopne
and
inc
(bad)
jg
pop
ror
leave
mov
mov
or
imul
ret
mov
aam
add
and
fwait
pop
jl
hlt
and
loop
fidivr
daa
dec
test
sub
jne
mov
mov
push
ffreep
mov
push
sbb
mov
or
fs
call
dec
jmp
fld
loope
addr16
fdivr
xor
add
add
sti
pusha
mov
lds
jp
(bad)
and
add
and
push
jecxz
stos
sbb
push
pop
xor
das
setl
jl
cmp
mov
cdq
pop
mov
arpl
cmps
xchg
jmp
pushf
pop
leave
inc
pop
dec
cld
push
in
fdivr
jmp
into
addr16
mul
fwait
jns
movs
mov
inc
mov
std
or
dec
mov
enter
dec
pop
xor
nop
mov
out
inc
ins
xchg
aam
imul
cmc
dec
ror
cmp
adc
pop
hlt
daa
pop
into
mov
enter
sbb
ins
call
cli
push
dec
movs
leave
retf
aam
inc
sbb
push
sar
jle
sbb
(bad)
adc
out
add
aas
jl
and
repz
pop
push
sub
xor
fwait
jecxz
mov
cmp
lock
or
push
or
aas
dec
shl
lea
push
push
in
icebp
dec
test
jns
add
or
dec
outs
inc
lock
ja
mov
aad
rol
int
in
enter
icebp
cmps
jo
movs
stos
scas
(bad)
(bad)
shl
adc
dec
or
jle
mov
stos
aam
sub
imul
and
out
inc
pushf
xchg
mov
adc
icebp
fwait
cmp
imul
or
jnp
pop
test
lods
sbb
dec
and
push
data16
shl
es
mov
daa
(bad)
int
stos
jecxz
pop
cmps
cmps
scas
xlat
pop
sub
rol
and
lods
aas
ret
mov
call
rcl
pop
les
ins
adc
push
shr
add
adc
(bad)
cmps
movs
inc
leave
or
arpl
repz
and
jl
aam
aad
sub
lock
inc
push
jecxz
test
les
and
jge
and
(bad)
fist
xchg
int
push
rol
or
xchg
mov
out
or
cmps
mov
sbb
(bad)
mov
pop
ss
loope
dec
push
adc
mov
mov
ds
pop
inc
in
(bad)
shl
pop
jge
and
inc
push
icebp
aad
ret
scas
pop
sbb
and
fcmovb
sbb
mov
pop
mov
scas
loop
adc
add
out
fidiv
sub
jmp
in
cmp
xchg
xor
pop
inc
or
push
mov
add
pop
xchg
aam
sub
push
ss
arpl
adc
jae
inc
jmp
shl
push
sub
ins
jae
xor
dec
jge
xchg
out
popf
out
xor
(bad)
dec
adc
xchg
xor
add
mov
inc
jno
or
adc
sub
(bad)
repnz
hlt
jne
rcr
cmps
push
jg
jns
push
jbe
sti
inc
popf
xchg
(bad)
setbe
dec
aaa
stos
adc
jp
jae
jo
loope
xchg
cld
outs
aas
cmp
iret
shl
cs
aas
movs
shl
xor
pop
rcl
(bad)
aam
mov
push
push
push
stc
arpl
fldenv
push
ins
sbb
cmp
mov
rcr
push
cdq
xlat
ja
(bad)
pop
dec
lods
cmps
xor
stos
sub
bound
(bad)
and
xchg
enter
mov
mov
add
in
into
adc
sti
inc
mov
pop
pop
dec
xchg
cli
push
pop
neg
lods
mov
jbe
xor
scas
fincstp
xchg
mov
fwait
call
xchg
cdq
sbb
out
xchg
push
adc
mov
dec
and
xor
stos
not
cmp
dec
sub
xchg
xchg
pop
mov
mov
adc
or
scas
mov
sbb
dec
dec
dec
ins
loope
mov
inc
jge
sbb
(bad)
cmp
fsubr
pusha
and
shl
int3
push
mov
stc
pop
add
int
sbb
hlt
pop
mov
inc
loop
ror
cmp
cmps
int3
bound
sub
jnp
clc
inc
mov
test
push
sbb
sub
and
sbb
jne
sti
bound
call
sbb
jmp
dec
cld
inc
and
out
cmp
jg
ins
cmps
jns
pop
jmp
and
out
(bad)
repz
inc
adc
pop
adc
push
push
jge
inc
in
jmp
popf
popa
repnz
aas
xlat
cli
pop
add
jbe
retf
test
fnstsw
cmp
in
out
or
xchg
not
adc
test
add
fcmovne
sub
jo
ficomp
out
push
sub
mov
in
jle
jne
mov
jns
pop
aad
jno
jmp
sbb
mov
leave
cmp
sub
push
pop
xlat
adc
add
in
xor
ja
and
add
rcl
les
fadd
call
mov
cmp
add
or
jl
inc
nop
jmp
icebp
stos
test
daa
js
cwde
sbb
pop
mov
xchg
cmp
stos
push
sbb
in
loope
mov
jp
daa
sar
hlt
push
jno
xor
inc
fadd
dec
pop
mov
dec
push
(bad)
std
icebp
adc
push
ss
dec
jg
adc
push
scas
sbb
hlt
mov
sub
dec
ds
add
loope
jecxz
jmp
jae
aad
ds
stc
dec
mov
ret
mov
inc
pop
sti
fimul
sub
enter
scas
int
das
shl
jge
jg
cmp
xchg
movs
jo
je
dec
add
dec
hlt
sbb
jne
jg
sub
rcl
scas
sub
pop
jmp
bound
movs
fmul
outs
je
pop
xor
dec
jae
cmp
loopne
push
jae
cmp
or
mov
jge
push
and
push
fmul
aas
adc
pop
mov
in
xchg
xchg
mov
xchg
icebp
or
fld
sub
iret
cmp
cli
call
cmp
ds
int3
in
fwait
xor
xchg
inc
jo
lods
das
jne
(bad)
xchg
cmp
pop
jmp
ret
(bad)
movs
int
sub
rol
repnz
sbb
mov
mov
nop
retf
fistp
aaa
icebp
mov
xchg
ds
and
sub
rol
mov
pop
cmps
xlat
mov
pop
aam
add
cmp
in
inc
inc
add
pop
cld
ds
(bad)
pop
jne
mov
xchg
and
and
lock
aam
mov
jbe
lods
dec
fs
fstp
add
add
data16
push
adc
aad
sbb
sub
lds
sub
or
push
push
(bad)
and
mov
cmps
lds
add
push
or
inc
push
mov
sbb
cmp
dec
sahf
frstor
pop
in
or
push
and
mov
pop
or
pop
sahf
sub
mov
outs
scas
push
mov
ror
das
push
stc
inc
dec
dec
fstp
in
sar
lods
push
neg
int3
mov
fist
push
xchg
dec
pop
js
xor
int
dec
stos
pop
xlat
or
add
rep
inc
aas
gs
(bad)
xchg
push
(bad)
stc
or
mov
mov
aaa
(bad)
jp
outs
pop
cmp
xor
retf
(bad)
imul
mov
inc
jbe
mov
sub
sar
and
cmp
mov
gs
xchg
hlt
rcr
aas
arpl
and
retf
add
pushf
addr16
(bad)
or
iret
adc
sets
xor
daa
es
in
ret
enter
or
push
dec
jmp
or
les
push
mov
pushf
into
mov
mov
sti
fcom
mov
push
int3
hlt
mov
push
(bad)
jl
clc
sbb
imul
mov
adc
(bad)
in
stc
enter
mov
xor
push
in
add
jmp
cmp
pop
(bad)
ins
xchg
inc
cmps
push
add
pop
cli
sar
clc
shl
mov
aaa
outs
inc
jmp
sub
sbb
outs
inc
test
cmp
ret
xchg
push
adc
aaa
mov
scas
add
adc
jl
push
data16
cmps
dec
test
sbb
jmp
pop
loop
enter
xor
push
pop
xlat
out
ins
mov
popf
sub
jb
out
test
nop
into
push
retf
push
nop
jae
mov
and
push
pop
cmps
(bad)
mov
adc
pop
into
mov
add
sbb
arpl
cmp
mov
push
and
inc
test
or
test
mov
into
pop
sub
or
cli
mov
leave
jmp
mov
stc
inc
retf
mov
loopne
ja
mov
fiadd
xchg
inc
pop
mov
sbb
ins
sti
in
sbb
out
xlat
cmp
xchg
and
and
imul
and
pop
in
and
cmp
pop
jle
sub
jl
push
scas
or
xchg
sbb
sub
xchg
addr16
out
sbb
stos
sbb
out
stos
lods
sub
mov
push
es
mov
jo
ds
jle
ret
add
data16
rol
mov
sbb
(bad)
inc
xlat
cli
pushf
jns
push
mov
jae
adc
leave
mov
retf
repz
fdiv
xor
pop
jbe
imul
mov
leave
push
add
mov
pop
sahf
dec
stc
or
sub
pop
mov
mov
loope
into
popf
fs
shr
adc
in
push
jl
sahf
push
pop
push
adc
fwait
adc
pop
out
push
mov
dec
ds
mov
ds
jbe
stos
repnz
rcr
mov
call
push
xor
les
(bad)
sbb
stos
stos
rcr
out
pop
(bad)
sub
push
or
mov
icebp
and
lods
push
jae
adc
inc
repz
cmps
xlat
add
dec
adc
pop
js
loope
pop
and
or
dec
dec
out
sti
adc
jae
out
or
movlps
pop
adc
add
nop
outs
push
sbb
mov
adc
fadd
jecxz
jmp
pop
icebp
jae
mov
cdq
test
push
inc
cmp
repnz
inc
out
mov
pushf
cwde
ficom
ror
call
mov
fnstenv
das
(bad)
(bad)
pop
mov
jle
es
fist
jmp
(bad)
or
sub
out
lds
cdq
or
loope
shl
ror
enter
adc
(bad)
leave
ds
mov
leave
enter
or
outs
cld
gs
and
jg
cmp
in
in
cli
stos
push
lods
push
jl
sbb
push
loope
gs
push
cwde
jl
fdiv
push
jbe
cmp
aas
mov
jne
clc
das
push
xor
stc
jge
sbb
cmp
mov
jmp
xor
bound
or
pop
fsubp
sbb
loopne
pop
push
or
sbb
xor
mov
xlat
pop
fist
or
into
in
jne
je
pop
nop
inc
cwde
push
stc
add
(bad)
jbe
mov
enter
jl
mov
pushf
fcom
and
scas
mov
add
ja
jo
call
pop
sub
push
push
mov
xchg
or
jo
xchg
dec
fidivr
xchg
fimul
sbb
ds
or
in
cmp
push
cs
js
bound
stc
inc
aas
push
inc
pop
lock
ins
sbb
xor
add
outs
mov
dec
sbb
jecxz
push
cmp
enter
dec
xchg
mov
add
outs
sub
jg
in
cwde
ud0
mov
repz
xor
loop
cld
pop
xchg
gs
mov
adc
push
mov
out
mov
pop
pusha
(bad)
jecxz
inc
int
adc
shl
xor
outs
ror
adc
add
jno
out
cli
fcom
dec
sbb
mov
or
stc
and
add
sti
sahf
xchg
ret
popf
imul
pushf
cli
fild
xlat
push
mov
mov
out
int
lods
cmp
cmp
jb
or
mov
jne
adc
mov
xlat
iret
inc
inc
lods
push
jmp
xchg
mov
fcomip
or
mov
dec
in
dec
xchg
mov
sub
mov
push
pusha
(bad)
xchg
(bad)
cmps
fcmovne
xchg
cmps
div
scas
test
xchg
push
pop
xchg
ror
xchg
out
jg
je
ds
add
stc
jmp
outs
movs
push
rcr
cmp
sbb
out
aam
push
pop
jne
sub
pushf
lock
mov
mov
pop
or
and
sbb
pop
leave
in
jne
popf
mov
or
jg
dec
inc
aam
cwde
cmp
fcomp
sub
cwde
adc
push
dec
lock
cmp
add
out
out
mov
xchg
fiadd
cmp
jb
pop
push
sub
sbb
mov
shl
pop
outs
add
pop
inc
call
fs
or
arpl
das
int
pusha
xchg
push
jmp
fistp
lods
sub
call
ins
outs
ja
sub
(bad)
jmp
mov
mov
loopne
test
stc
enter
and
retf
retf
cmps
mov
mov
adc
or
sub
mov
out
and
sbb
ins
inc
or
and
fs
(bad)
mov
scas
dec
out
sub
fstp
or
shr
jecxz
les
push
cmps
add
icebp
loope
cmp
mov
dec
div
push
and
sub
mov
mov
rol
xchg
mov
xor
jp
in
push
clc
nop
test
and
popf
arpl
jne
adc
adc
pop
inc
jns
push
pushf
shr
xchg
ret
mov
mov
out
sub
jns
inc
idiv
gs
jle
sub
xchg
pop
repz
adc
mov
jns
popf
test
call
pop
scas
jl
mul
fmul
xchg
sbb
sub
adc
fcmovne
(bad)
mov
jle
test
mov
cmp
cmc
cmp
xchg
pop
mov
jno
addr16
inc
mov
add
ret
dec
repnz
movs
and
repz
jl
int
dec
inc
mul
sub
imul
lahf
cli
loopne
es
mov
xchg
out
mov
cmps
out
mov
loope
dec
imul
loop
icebp
sbb
ret
xchg
jge
scas
outs
cli
rcl
addr16
xchg
push
xor
popa
pop
xor
adc
or
jne
sbb
dec
sub
es
neg
cmc
xor
icebp
pop
mov
fisttp
pop
push
mov
add
mov
jmp
mov
dec
cmps
pop
mov
sahf
pushf
add
loop
scas
jmp
add
cmp
and
push
cmp
lea
cmps
push
jmp
sub
xchg
or
test
arpl
call
push
xor
mov
inc
mov
xchg
rcr
std
loope
sbb
in
aas
bound
bound
fldcw
test
xlat
(bad)
jno
or
dec
dec
lods
test
outs
fst
js
jno
mov
pusha
mov
push
sbb
(bad)
call
sub
pop
aam
cmps
js
popf
mov
cmp
ins
cdq
jl
inc
and
mov
adc
push
jg
mov
xor
push
jge
scas
mov
and
mov
dec
mov
pop
adc
cli
adc
in
push
inc
cmp
stos
mov
cdq
sbb
and
pop
mov
xchg
inc
mov
(bad)
jo
ja
imul
pop
data16
ret
xchg
xchg
sbb
scas
jle
jmp
movs
adc
xchg
scas
xlat
add
jns
ins
push
xchg
push
cld
imul
mov
push
(bad)
jns
fs
pusha
mov
jmp
les
xchg
or
add
jmp
dec
(bad)
xchg
lods
mov
(bad)
je
cmp
fdiv
push
mov
pop
ins
cmp
imul
and
mov
cmc
mov
cld
ret
pop
nop
mov
sbb
jg
inc
inc
in
xchg
repnz
xchg
in
scas
test
mov
out
pop
mov
xchg
jns
mov
push
pop
mov
push
add
mov
add
inc
add
(bad)
pop
mov
enter
mov
fisttp
xor
pop
sub
sub
mov
pop
lea
push
in
and
mov
push
addr16
adc
adc
dec
pop
cwde
or
cmc
mov
mov
test
pop
rol
push
sbb
mov
jmp
fild
ja
(bad)
sub
idiv
mov
and
cli
sub
push
adc
sbb
jb
pop
fisubr
inc
inc
dec
movs
mov
in
dec
pop
call
push
push
cdq
clc
rcl
stc
js
mov
in
movs
(bad)
fstp
or
neg
adc
in
mov
repz
ret
and
ret
aam
mov
ins
mov
inc
sub
(bad)
cmp
out
mov
cdq
push
dec
dec
int3
(bad)
mov
sbb
imul
push
add
pop
jp
test
ins
int3
out
add
adc
rol
cmp
jne
ins
nop
push
mov
xor
mov
dec
xchg
push
xor
aam
inc
lahf
into
jne
mov
mov
enter
es
sub
mov
push
dec
js
push
fisttp
and
shl
hlt
(bad)
inc
push
in
inc
push
das
mov
enter
pop
mov
in
aam
cmps
sub
sub
scas
int3
lahf
ds
retf
and
stos
ins
sbb
push
icebp
ss
cdq
xlat
add
mov
pop
and
jg
mov
retf
ds
sbb
test
cmp
dec
aam
or
pop
sbb
bswap
movs
pop
out
aaa
xchg
xchg
dec
mov
xchg
fs
mov
mov
push
ss
scas
pop
push
mov
retf
js
mov
push
cmp
leave
add
push
test
retf
jl
adc
adc
aaa
ja
aaa
inc
mov
enter
pop
test
mov
ins
fiadd
rcr
inc
xchg
push
mov
enter
add
add
(bad)
push
xchg
test
xor
test
xor
adc
mov
pop
xchg
dec
dec
push
(bad)
jns
adc
sub
loop
fistp
mov
or
sub
mov
push
cmc
xor
adc
fdivr
lahf
cmc
push
mov
sbb
jecxz
add
or
movs
or
inc
test
push
in
mov
adc
scas
ja
into
pop
je
adc
in
cmps
sahf
dec
push
bound
sbb
push
cmp
mov
cdq
mov
mov
(bad)
addr16
and
icebp
out
aam
push
imul
mov
add
leave
pop
jb
rcl
push
ficomp
mov
(bad)
xchg
add
sub
gs
imul
je
cmp
mov
pop
(bad)
adc
outs
outs
popa
push
aam
cld
add
xchg
jle
data16
mov
push
test
btr
cli
xchg
mov
mov
jmp
fmul
add
xor
xor
mov
pop
and
pop
icebp
push
jmp
outs
mov
pop
ret
lock
movs
dec
and
mov
repz
stos
je
mov
stc
pushf
pop
cs
lock
cld
inc
ror
cdq
push
mov
movs
mov
shl
sbb
in
mov
mov
lds
movs
dec
cli
ja
adc
push
mov
dec
inc
fnsave
(bad)
in
and
dec
dec
adc
sbb
fwait
shr
sbb
sbb
mov
pushw
inc
or
test
nop
sbb
add
sub
pop
mov
cli
cmp
sahf
mov
xchg
inc
push
fisubr
(bad)
adc
clc
mov
stc
into
cwde
mov
out
cmp
pop
mov
imul
gs
sbb
sbb
enter
xchg
sub
xchg
cmc
daa
ds
jmp
fist
fcom
mov
pop
dec
adc
movs
or
mov
retf
pop
dec
jns
push
add
outs
cmps
jnp
inc
icebp
repnz
call
fisttp
js
mov
ja
cmps
gs
mov
test
out
retf
int3
mov
rol
hlt
jecxz
pusha
mov
cdq
push
sbb
dec
leave
shr
leave
or
and
xchg
push
sbb
add
adc
adc
aam
ss
dec
sbb
mov
cli
ds
and
dec
mov
cmc
rcl
sbb
inc
movs
sbb
enter
popa
and
int3
loope
sub
adc
sbb
mov
test
pop
mov
push
inc
fcmove
aaa
pusha
sub
fsub
add
lods
lea
adc
addr16
and
mov
retw
adc
(bad)
sbb
outs
fisttp
fstp
aad
pop
push
es
dec
mov
iret
xor
push
in
and
push
pop
or
cmp
mov
call
cmp
dec
lds
mov
jns
jmp
jae
cwde
ret
sbb
es
xchg
call
or
int
or
push
dec
(bad)
cld
mov
or
cmp
out
daa
mov
mov
lahf
and
pop
jp
lods
mov
fild
ficomp
inc
mov
mov
add
mov
xlat
neg
mov
iret
js
or
cld
scas
push
fcomp
mov
cmp
std
cmp
dec
mov
(bad)
dec
fild
cmp
xor
and
fcmovne
push
cs
or
xchg
pop
dec
jmp
repz
lock
retf
and
(bad)
mov
imul
push
int3
test
mov
add
scas
xchg
rol
cmp
loopne
jmp
xchg
popa
dec
add
sub
mov
xlat
(bad)
(bad)
in
mov
sbb
fstp
inc
adc
ss
dec
movs
mov
or
shl
pop
xchg
inc
cld
sub
mov
xor
mov
dec
(bad)
addr16
jno
inc
push
retf
xor
jnp
adc
test
push
and
push
neg
sbb
xchg
fdiv
or
ret
out
dec
xchg
push
pushf
cld
out
pop
out
xor
retf
cmp
cmps
out
(bad)
jbe
into
inc
mov
aas
movs
pushf
enter
jbe
jbe
fidiv
jl
mov
dec
xor
inc
sbb
aam
pushf
sub
jae
inc
adc
adc
lea
test
retf
(bad)
sahf
test
rcl
inc
mov
(bad)
std
stos
imul
xor
retf
xchg
pop
imul
cwde
mov
retf
push
mov
pop
fs
sub
push
dec
int
repz
mov
sbb
scas
pop
jecxz
push
pop
xchg
jg
cmp
test
and
cdq
dec
push
push
mov
or
imul
xor
mov
jecxz
xchg
jl
mov
sub
inc
imul
jmp
inc
jno
idiv
pop
(bad)
and
cwde
cld
sub
(bad)
inc
pop
lock
sub
leave
call
rcl
arpl
adc
imul
push
inc
adc
outs
sbb
or
xchg
add
test
scas
inc
xchg
out
mov
xchg
pushf
cmc
into
or
or
dec
es
(bad)
mov
xchg
les
out
js
shr
test
mov
xor
mov
xchg
arpl
xchg
adc
pop
or
xor
sbb
dec
push
push
or
pushf
mov
psubb
int
sbb
push
push
push
(bad)
mov
and
call
cli
mov
xor
jmp
pop
cmp
pop
sub
pop
push
dec
pushf
pop
dec
pop
dec
retf
or
xor
sbb
adc
bound
ror
mov
jno
pop
push
jle
xor
inc
xchg
rcl
and
dec
push
les
adc
aaa
jecxz
fst
mov
xchg
push
jb
add
push
popa
xor
xchg
cmc
cwde
imul
pop
xor
jge
push
imul
fcmovnbe
jmp
mov
sbb
xchg
lahf
(bad)
not
xor
sub
xchg
(bad)
and
test
mov
pushf
mov
dec
(bad)
push
mov
and
pop
sub
pushf
out
or
or
push
jle
in
xchg
sahf
shl
mov
xchg
xchg
push
jge
icebp
push
(bad)
push
mov
iret
out
outs
in
mov
push
xchg
jle
dec
les
pop
cwde
ja
imul
sti
mov
mov
lahf
push
mov
add
xor
adc
adc
out
imul
es
sub
pushf
or
push
dec
fisttp
int
xchg
loop
adc
popa
jp
and
loopne
out
pushf
out
mov
cmp
(bad)
xchg
psubusb
xor
clc
(bad)
mov
arpl
iret
rol
in
ds
push
pop
icebp
std
call
inc
ins
adc
jge
jbe
outs
cwde
iret
movs
cmc
ja
adc
js
cld
cmps
mov
out
aaa
sbb
xchg
dec
mov
mov
ret
cmp
ret
push
rcl
mov
and
cmp
jne
loop
sub
inc
xor
ds
jl
xor
daa
pop
movs
inc
xchg
mov
dec
stos
xchg
shr
fidiv
sbb
mov
push
test
jno
mov
add
adc
ja
pop
or
mov
ja
(bad)
fmulp
add
add
ud2
cdq
add
loop
jle
retf
sub
or
cs
cmp
jne
mov
(bad)
push
sub
and
ins
stos
push
lahf
adc
lods
mov
gs
addr16
movs
mov
sbb
mov
mov
js
jne
pushf
call
xor
in
nop
imul
test
xchg
test
inc
pusha
mov
pop
and
scas
mov
mov
xchg
xchg
pop
xor
mov
jmp
push
jmp
pushf
fcomp
out
sbb
jae
scas
fcomi
cmp
loop
mov
jge
jle
(bad)
icebp
push
mov
sahf
mov
mov
inc
imul
out
dec
clc
push
xchg
or
out
cmps
daa
mov
and
jle
dec
cmps
outs
push
adc
stos
mov
sub
dec
sbb
stc
mov
ins
neg
popa
mov
xor
jge
(bad)
push
pop
adc
dec
xor
cs
cmp
or
pop
or
rcl
pop
fmul
outs
cmp
mov
inc
(bad)
push
mov
rcl
inc
aam
mov
adc
cmp
sbb
xor
pop
les
clc
inc
cmp
xchg
div
jnp
adc
push
es
sti
mov
xor
(bad)
inc
outs
jo
add
outs
in
retf
pop
mov
pop
adc
or
mov
les
xor
sub
pop
mov
cmp
inc
add
sahf
cmp
sbb
jg
sbb
je
adc
adc
call
mov
neg
or
inc
pop
fdiv
xor
cmp
fisttp
lea
out
adc
in
adc
push
in
rcl
retf
push
mov
fcomi
cs
leave
bound
pop
lahf
fwait
xor
dec
xchg
cmp
pcmpeqw
bsr
sbb
(bad)
out
stos
inc
and
pop
jbe
or
xor
jb
(bad)
mov
jne
inc
inc
mov
(bad)
lea
repz
in
or
enter
pop
push
jns
mov
dec
fs
movs
add
adc
mov
xchg
repnz
div
sbb
test
push
scas
shl
loopne
mov
loope
push
ret
cmc
ss
subps
std
cmp
mov
ins
mov
loope
pop
(bad)
jb
push
call
dec
idiv
aad
aam
mov
mov
cdq
cmp
cmp
inc
ret
mov
jo
push
cmp
ss
or
test
cmp
xor
mov
ins
stos
push
popa
popa
mov
movs
mov
test
sub
loope
clc
mov
xchg
sbb
stos
test
repz
sbb
jns
test
ss
dec
out
sbb
xchg
xchg
cmp
popa
(bad)
mov
mov
dec
cmps
sub
jno
push
xchg
arpl
jecxz
mov
xor
mov
(bad)
cmp
push
inc
jg
jmp
fstp
or
in
test
cld
loope
shr
xlat
xchg
iret
das
arpl
pop
(bad)
lea
xchg
(bad)
jmp
fist
xor
cli
inc
push
jo
xor
mov
frstor
pop
adc
cmp
addr16
mov
and
std
xor
call
lds
push
outs
fistp
push
int3
add
jmp
test
push
cs
aam
add
jp
and
dec
mov
aas
cmps
pushf
adc
fs
jns
loopne
adc
mov
mov
jmp
cld
dec
imul
repnz
rol
retf
stc
mov
fdivr
adc
retf
rol
add
icebp
sub
iret
mov
push
xor
jno
xor
fcomp
and
sub
ror
lock
adc
cmp
test
mov
shr
sub
push
cmp
jmp
int3
stc
push
or
int
(bad)
ins
mov
add
add
sub
mov
cmp
adc
dec
cmp
fstp
(bad)
cwde
js
or
jne
adc
fild
in
cmp
push
out
into
out
dec
lahf
cmp
mov
or
sahf
jle
or
jbe
mov
div
sub
das
pusha
cmps
dec
fs
ss
popa
add
in
pop
(bad)
xchg
dec
dec
ror
adc
mov
dec
cmp
aas
jmp
inc
stos
stc
jge
and
out
push
inc
and
(bad)
nop
sub
in
sbb
repnz
add
and
shl
xchg
pop
mov
xchg
cmps
test
jl
mov
out
xor
shl
mov
std
shr
jbe
test
sbb
das
mov
and
iret
mov
gs
pop
out
mov
inc
out
adc
retf
out
jb
movs
dec
adc
inc
(bad)
sub
scas
adc
ja
rcr
xor
xor
ret
sahf
sbb
inc
sub
sub
ja
test
mov
and
mov
test
or
clc
jae
inc
clc
jb
imul
rol
fsub
std
jbe
aas
dec
xlat
xchg
shl
mov
ins
mov
rcr
pusha
mov
test
(bad)
cld
stos
xchg
mov
push
out
xor
mul
outs
dec
test
retf
shr
ret
sbb
or
les
or
inc
adc
pusha
aaa
fiadd
(bad)
stc
sahf
test
fist
cmp
dec
stc
shl
ins
cs
out
sbb
fidiv
lds
pop
xchg
pop
retf
pushf
imul
cmp
xchg
sbb
ins
pop
push
mov
xchg
push
xchg
mov
pop
out
ret
mov
pop
mov
imul
mov
ss
fnstenv
leave
int3
push
cmp
movs
les
jge
fwait
pop
ror
int
sub
push
stos
push
test
xor
cmp
sbb
xchg
out
xchg
sbb
xor
out
cld
out
or
in
adc
or
loope
frstor
addr16
jp
ins
daa
jo
popf
sbb
rol
and
ret
push
inc
rcl
cwde
sbb
xchg
ins
lahf
or
and
outs
cmp
push
clc
fs
jecxz
movs
es
pushf
xchg
sub
sub
mov
push
stos
sub
daa
mov
out
ins
add
sub
xor
adc
mov
cmps
sub
test
ins
sub
or
std
push
in
adc
and
ins
ret
adc
mov
push
nop
xchg
test
xchg
sub
ret
dec
mov
and
adc
cmps
add
(bad)
gs
mov
or
in
cmp
nop
aaa
loopne
cmp
mov
enter
mov
xor
mov
xchg
fsubp
rol
adc
add
in
lahf
xor
xchg
xchg
and
aam
jae
int
das
(bad)
fmul
sbb
ss
repnz
push
fld
stos
mov
xor
bound
mov
(bad)
fs
cmps
xor
sahf
lods
ret
ret
push
lahf
in
cmc
xchg
mov
mov
iret
jp
xor
add
pop
inc
inc
sbb
out
push
mov
push
repz
sti
popa
adc
sbb
scas
fisub
das
xchg
add
ret
sahf
(bad)
cmp
retf
or
sbb
nop
loopne
dec
inc
xor
ffreep
popf
fwait
pop
add
or
mov
pop
call
inc
xor
cmp
adc
jl
add
scas
mov
xchg
cli
arpl
push
jae
retf
(bad)
cmp
lds
lea
jge
mov
ja
xchg
hlt
and
ja
inc
dec
cld
sbb
enter
(bad)
mov
into
inc
jne
retf
movs
aaa
xchg
test
inc
out
ficomp
enter
jmp
sahf
mov
(bad)
pop
loop
push
mov
(bad)
sub
dec
mov
mov
and
js
fldcw
lods
popa
pop
dec
xlat
xchg
mov
popa
push
shr
sahf
sub
enter
or
movs
stos
ja
or
adc
cmp
push
mov
sbb
and
mov
jecxz
sahf
add
sbb
inc
push
inc
ins
pushf
cmps
std
jg
pop
jno
xor
jnp
arpl
cmps
les
retf
jl
adc
inc
cdq
xor
in
ins
stos
gs
jg
jmp
daa
sub
mov
jp
in
xchg
out
jns
(bad)
adc
repz
xor
xor
mov
mov
mov
inc
inc
ror
inc
movs
bswap
or
xchg
mov
mov
pop
mov
jne
repnz
fstp
std
aas
ins
out
pop
pop
stc
or
mov
xchg
cwde
(bad)
pop
mov
lahf
mov
xchg
call
dec
sub
jle
inc
inc
jmp
mov
gs
adc
scas
(bad)
fcom
ja
mov
jae
ins
enter
adc
push
jno
stos
lods
cli
push
add
sbb
dec
loop
mov
fstp
inc
jmp
add
add
mov
push
test
pop
push
sbb
adc
repnz
dec
les
add
(bad)
or
mov
jmp
fcom
pop
add
scas
mov
ror
jl
mov
ins
pop
cmp
test
and
(bad)
adc
cmps
xor
dec
mov
pop
test
sbb
aaa
jo
add
push
push
mov
ins
xchg
mov
and
mov
and
or
imul
jge
cli
hlt
leave
and
lea
jae
inc
popa
out
sbb
sub
and
jns
leave
bound
dec
sub
shl
inc
stc
jns
popf
iret
fwait
pop
outs
mov
inc
xchg
cmp
push
push
movs
stos
jmp
adc
add
clc
popa
fcom
add
mov
push
sbb
mov
cmp
loop
sbb
out
fidivr
mov
call
inc
aaa
mov
sahf
hlt
sbb
xchg
and
sbb
dec
and
psraw
lods
stos
mov
xchg
inc
jmp
movs
or
scas
cmp
fwait
pop
cmp
pop
test
sub
shr
lods
adc
cmc
pusha
es
fdivr
sahf
cdq
ins
arpl
in
mov
std
mov
sub
sbb
mov
or
stc
sbb
retf
lods
push
iret
mov
and
push
js
movs
or
jae
add
push
int3
sub
fimul
stos
mov
mov
cmp
inc
push
shl
mov
sbb
inc
test
loop
fst
xor
xor
in
test
xor
xchg
(bad)
cdq
fscale
(bad)
and
push
mov
mov
push
fdiv
frstpm(287
jns
rcr
mov
sbb
stos
xor
scas
push
add
inc
cmps
ins
rcr
adc
nop
cmp
inc
not
pop
xlat
sub
test
fld
in
sbb
lods
cmp
sahf
mov
mov
pop
push
jmp
xlat
inc
dec
addps
and
out
popf
sbb
sbb
test
jae
cmp
pop
jmp
(bad)
mov
call
mov
test
sub
push
in
sbb
xor
fwait
dec
pop
ror
js
mov
sub
or
clc
inc
movs
push
stos
clc
and
call
push
in
retf
sub
outs
cwde
loope
jecxz
fsubr
pop
rol
sub
or
or
sbb
xchg
bound
fist
jg
cli
stos
(bad)
(bad)
xor
inc
ins
mov
push
fmul
mov
in
pop
cwde
push
mov
cmp
ss
xchg
adc
jle
sbb
pop
adc
pusha
mov
mov
retf
ret
push
xor
sub
dec
pusha
add
sti
mov
inc
cli
xor
sbb
(bad)
cmp
cld
jne
mov
jb
cld
dec
lods
mov
sub
push
mov
and
mov
hlt
retf
jo
sub
sub
jmp
xor
xchg
fwait
inc
cmp
arpl
mov
dec
mov
rcl
bound
clc
clc
sar
cmps
loop
outs
ja
test
mov
pop
push
push
rcl
jae
pop
or
push
repnz
mov
fld
adc
inc
gs
inc
outs
or
add
(bad)
in
xor
jne
xor
jb
and
jmp
(bad)
call
sub
sbb
in
add
iret
shl
ds
in
add
push
or
mov
add
frstor
jnp
cmc
cwde
loopne
mov
loop
sbb
pop
movs
popa
outs
loopne
std
push
out
mov
jl
jmp
ss
adc
push
mov
repz
ja
mov
movs
add
das
outs
add
pop
popf
mov
cmp
jp
test
fld
adc
out
cmc
jmp
push
sbb
or
movs
adc
sub
mov
cdq
push
mov
inc
imul
fmul
(bad)
out
(bad)
(bad)
int3
mov
daa
fdivp
jp
addr16
pop
inc
nop
call
lock
add
xchg
call
xchg
rol
fs
mov
add
mov
ins
sbb
jle
aaa
jns
dec
pop
es
outs
ins
mov
mov
inc
imul
in
xlat
jl
mov
pop
and
in
cmps
inc
mov
call
pop
sbb
sub
sub
dec
jns
into
sub
iret
stos
sti
lock
aaa
jmp
in
mov
hlt
movs
mov
mov
push
pop
xchg
stc
rcl
repz
(bad)
pop
inc
inc
outs
jle
mov
jecxz
int3
in
dec
ficomp
and
leave
cmp
es
and
jb
iret
jl
popa
push
xchg
sbb
dec
out
mov
dec
jns
out
sbb
int
sub
lods
inc
out
pop
mov
inc
sbb
jno
xchg
mov
test
push
mov
mov
(bad)
stc
stos
div
inc
lock
(bad)
hlt
sub
mov
cmp
adc
add
or
std
(bad)
sbb
int3
stc
fdiv
push
xor
aad
(bad)
mov
ins
movs
call
push
ror
dec
(bad)
enter
sub
addr16
dec
int3
aam
jae
push
jle
mov
lods
and
nop
inc
add
cmps
daa
mov
popa
mov
pop
pop
scas
pop
mov
stos
out
(bad)
xchg
in
out
sbb
idiv
clc
cmc
mov
stos
mov
popf
addr16
mov
jo
cmp
add
rol
call
inc
mov
mov
clc
mov
pop
pop
jbe
ret
loopne
imul
fadd
imul
fld
arpl
inc
ret
push
and
pushf
adc
add
stc
or
xchg
ds
mov
inc
jl
rcl
fwait
inc
and
push
mov
pop
xchg
inc
xchg
cmps
push
push
lods
pop
dec
fdiv
lds
add
mov
cmp
repnz
scas
js
xchg
xor
push
xor
and
retf
loope
(bad)
jmp
mov
in
outs
gs
ret
ins
dec
or
pop
shl
sub
sbb
jne
movs
xchg
mov
or
leave
and
and
es
mov
pusha
jecxz
into
cld
popf
loope
dec
mov
jmp
push
mov
dec
in
inc
mov
inc
ss
xchg
add
nop
push
cmp
fnsave
dec
sub
sub
cdq
pop
sub
stos
mov
mov
mov
(bad)
mov
jb
dec
sti
sbb
pop
or
xchg
add
push
lock
xchg
cli
nop
aam
rol
xchg
pop
mov
mov
and
cs
lea
cmp
cdq
sub
pusha
scas
sahf
(bad)
mov
add
in
std
pop
pop
enter
and
icebp
(bad)
xor
sub
push
and
ja
sbb
dec
retf
gs
repz
sar
div
loop
rol
jp
mov
xchg
pop
stos
dec
ret
lods
cmp
scas
enter
int
mov
lahf
sub
fsub
outs
outs
mov
out
repz
inc
and
int
hlt
(bad)
shl
fcomp
hlt
nop
cmp
jns
inc
pushf
adc
jo
dec
mov
sub
int3
jl
add
adc
jo
push
fisub
cmps
(bad)
data16
mov
fcmovnb
cs
daa
movs
cdq
lods
out
jo
dec
or
xor
aaa
cdq
jb
cmps
fdiv
ins
cmp
xchg
jae
and
mov
mov
or
into
lar
addr16
loope
inc
push
mov
sti
mov
mov
push
sbb
add
push
mov
jmp
mov
loop
sub
into
xchg
add
mov
out
sub
es
jmp
fsub
push
mov
sbb
jecxz
nop
jne
dec
cmp
add
mov
mov
out
push
cmps
mov
out
xchg
sbb
in
test
jae
adc
jge
repnz
cmp
dec
jb
imul
stc
sar
rcl
mov
lea
mov
xor
inc
jl
jo
mov
jns
mov
call
adc
movs
ret
in
push
adc
aaa
icebp
movs
xor
sbb
shl
mov
xor
cmp
in
adc
retf
sbb
mov
sti
mov
in
sbb
or
rcr
gs
fcom
xchg
xchg
rcr
das
or
adc
push
or
jl
sahf
add
and
daa
fdiv
test
adc
mov
pop
push
in
mov
push
sbb
inc
lds
sbb
pop
mov
mov
add
inc
adc
cmps
imul
lods
jne
shl
test
js
popf
mov
or
xor
(bad)
inc
or
(bad)
cld
ss
cmp
daa
pop
imul
dec
push
mov
(bad)
cs
ror
gs
jge
jmp
js
pop
dec
add
sbb
fst
outs
test
jmp
add
jmp
es
or
mov
and
sub
push
inc
enter
out
jne
jns
or
pop
cmps
mov
mov
and
fsubr
mov
clc
ja
retf
mov
int
int
dec
inc
mov
div
data16
andps
clc
hlt
mov
push
fstp
jecxz
dec
inc
pop
push
in
add
stos
scas
pop
jl
lds
pushf
ins
clc
call
jge
mov
pusha
ins
sub
sbb
xor
push
and
lahf
loope
call
adc
ret
enter
movs
ret
iret
pop
mov
out
fcmovne
push
push
enter
loope
imul
in
into
sbb
add
pop
jnp
shl
bound
and
daa
pop
ret
ror
sbb
jmp
mov
mov
push
dec
push
call
scas
cmp
loope
jo
cmp
add
adc
xor
push
and
rcl
clc
out
pop
addr16
imul
mov
or
jp
rol
ds
fnstsw
aas
imul
inc
mov
mov
fs
pop
jp
cs
in
loopne
shr
cmp
or
xor
not
xchg
rol
pop
ror
mov
out
rol
mov
scas
aam
popf
sbb
mov
sub
(bad)
pop
xor
sahf
cmp
xor
mov
add
push
add
sub
adc
leave
cld
xchg
int
and
pop
lds
(bad)
call
push
inc
cmps
rcr
sbb
ins
mov
mov
push
(bad)
or
push
scas
mul
add
mov
sub
push
xchg
stos
cdq
mov
cli
cs
dec
mov
push
xor
xchg
push
aaa
in
pop
sbb
pop
xchg
adc
sub
sahf
sahf
ret
xchg
popa
into
or
add
xchg
cmp
fbld
repnz
mov
add
fdiv
jns
lods
cmps
rcl
jae
popa
cmp
mov
pushf
and
jmp
add
jae
popf
dec
int
adc
out
sub
adc
pop
das
in
mov
jns
xchg
fwait
push
xchg
or
in
add
xor
sbb
xor
jbe
fld
(bad)
dec
rcr
xchg
inc
loope
or
or
or
and
(bad)
push
fdivr
adc
jns
into
push
and
mov
mov
or
stos
lods
outs
jae
push
hlt
xor
adc
mov
das
xchg
sar
in
(bad)
(bad)
test
aaa
cmp
mov
push
cmp
out
not
mov
stos
xor
enter
in
lock
stos
scas
in
int
or
pusha
enter
ds
inc
hlt
ss
push
nop
rol
imul
pop
xchg
xchg
xor
rol
scas
or
int3
sub
rcl
push
sbb
inc
mov
popa
(bad)
pop
(bad)
dec
and
dec
and
fsub
imul
or
out
rol
mov
enter
and
mov
add
mov
jp
lock
cs
addr16
arpl
popfw
pusha
inc
stos
pop
setnp
pop
movs
jns
fisttp
cmc
pop
sub
es
loop
enter
repz
ds
mov
popf
push
xchg
inc
call
out
sar
dec
and
in
call
hlt
dec
add
jns
add
pop
xlat
scas
sahf
(bad)
and
pop
fmul
mov
outs
mov
add
sqrtps
mov
xor
dec
out
fstp
cmp
test
push
in
shl
sahf
(bad)
sub
jbe
aaa
jmp
mov
adc
cmc
adc
xchg
imul
mov
ins
clc
lods
push
loope
mov
mov
fdiv
or
mov
es
xor
jge
jnp
add
fist
pusha
sbb
mov
test
inc
ss
outs
pop
lods
sbb
mov
push
xor
push
jle
adc
mov
repz
aad
xor
xlat
ror
push
out
icebp
lock
cs
dec
sub
xor
adc
push
popf
adc
push
fld
lock
adc
adc
add
repnz
fbstp
imul
sbb
aas
mov
add
push
mov
sbb
es
dec
xor
outs
mov
xchg
xlat
popf
mov
cmps
and
popa
(bad)
mov
mov
mov
test
mov
and
add
push
aaa
and
shr
adc
sbb
push
fwait
add
jl
or
dec
lahf
and
push
mov
(bad)
enter
and
mov
or
ins
movs
xchg
into
sub
pop
mov
pop
inc
daa
js
sbb
cmc
into
shr
or
imul
pop
test
mov
(bad)
shl
fiadd
les
inc
and
add
rcr
rcl
push
xchg
mov
push
scas
sub
repnz
fsub
inc
xchg
and
sub
mov
xor
ret
outs
adc
adc
dec
xchg
pusha
arpl
cld
xor
cli
push
clc
adc
mov
mov
ficomp
push
fdivrp
sbb
cmp
movs
adc
popf
repz
pop
mov
pushf
leave
push
pop
dec
lahf
(bad)
fdivr
(bad)
test
jge
out
add
xor
cs
fidivr
push
stc
push
sub
in
xchg
jnp
jg
fnsave
fldenv
cmp
fdivr
xchg
lahf
enter
inc
movs
mov
mov
es
dec
call
mov
sub
int
sub
loope
push
jle
jns
ss
es
shl
nop
xor
add
(bad)
add
(bad)
dec
cwde
push
ja
outs
fstp
pop
(bad)
outs
mov
(bad)
(bad)
pop
sbb
push
adc
sbb
out
stos
enter
daa
ror
adc
adc
repnz
adc
adc
je
mov
cmp
sbb
inc
xor
push
icebp
ja
or
dec
lock
push
xchg
jl
pop
adc
push
hlt
in
push
ins
sub
outs
mov
cmp
out
movs
xchg
lock
jae
iret
mov
mov
fs
pop
movs
xlat
jg
retf
xor
sti
arpl
adc
or
nop
lahf
sub
rol
rol
out
iret
dec
xor
pushf
cmp
mov
movs
lods
stc
arpl
iret
enter
rcr
xor
ret
pop
push
dec
fnsave
xchg
pop
and
stc
mov
movs
mov
mov
mov
loope
inc
push
mov
and
pop
popa
aam
inc
cdq
fisttp
dec
pop
ins
pop
jge
or
es
in
ror
xchg
mov
xor
ss
es
mov
sbb
lock
or
add
out
fdiv
jb
ins
jmp
cmp
xchg
sar
std
mov
cmps
repnz
mov
cmps
or
clc
cmp
shl
test
call
cld
push
and
or
scas
ret
jnp
add
dec
retf
(bad)
idiv
bound
(bad)
or
aas
sbb
int3
dec
stos
sbb
fwait
push
cmps
add
jmp
xchg
jbe
leave
adc
add
mov
and
push
jae
popa
inc
jg
scas
arpl
in
aad
jb
jne
sub
retf
cmps
pop
and
ret
sahf
mov
cmps
test
dec
ja
mov
inc
into
icebp
push
mov
clc
jmp
cmp
cmc
jno
and
pop
shr
sbb
mov
xchg
inc
mov
rol
cld
jns
in
push
sub
movs
popa
in
sub
shl
sub
mov
fsub
pop
fwait
push
sahf
jo
pop
fwait
cdq
movs
inc
xchg
sub
test
fiadd
in
jmp
or
es
jmp
adc
xor
sbb
cmps
push
and
inc
push
adc
call
call
mov
(bad)
jle
xchg
movs
jge
rcr
lods
test
push
dec
xchg
xchg
pop
aam
sub
(bad)
jl
jno
or
cdq
pop
and
pushf
adc
clc
mov
les
push
cmp
movs
lock
mov
bnd
jb
pop
out
dec
or
mov
mov
and
leave
or
fsubr
add
dec
mov
loop
inc
stos
jmp
iret
cli
push
not
pop
cmp
mov
popf
movs
xor
sbb
shr
iret
jns
mov
inc
fs
push
xchg
movhps
xor
(bad)
jae
sti
cmp
lods
lods
inc
mov
or
lds
(bad)
popa
mov
add
push
jmp
sub
push
pop
fmul
jno
sub
repnz
or
movs
push
xlat
test
mov
je
sub
pop
call
sbb
mov
fist
mov
loopne
in
push
mov
xchg
jmp
ins
(bad)
mov
add
mov
and
xor
xor
fnstenv
cli
out
sbb
inc
aam
sub
aad
mov
je
je
outs
cmp
out
mov
pop
xchg
dec
(bad)
pop
cmp
mov
inc
adc
ficomp
xor
imul
sbb
sar
stc
js
sub
pop
or
adc
push
aaa
add
(bad)
and
hlt
dec
dec
sbb
sbb
dec
xchg
mov
or
xor
pop
stc
clc
mov
arpl
add
cmp
hlt
xchg
push
add
je
loop
popa
cwde
pop
popf
ret
adc
fwait
xchg
pop
aaa
adc
mov
adc
leave
fimul
arpl
daa
jns
ret
cmp
cmps
and
mov
inc
pop
cmp
push
lea
or
xchg
xchg
or
sub
retf
jb
arpl
jl
pop
lds
pop
into
sbb
out
push
stc
pop
cli
sub
inc
icebp
pop
add
xor
fdiv
adc
and
clc
xor
adc
mov
xor
jmp
rol
mov
mov
mov
lds
les
cdq
adc
xlat
leave
mov
pop
cmp
cmp
xchg
loop
and
leave
dec
push
fwait
add
movs
(bad)
jecxz
into
out
bound
scas
inc
outs
arpl
cli
call
and
das
lea
and
pop
test
dec
stos
push
scas
clc
sar
cli
daa
ins
or
sub
stos
jp
rcr
out
test
fiadd
xchg
xchg
cmp
test
fdiv
sub
ins
jp
fst
pushf
scas
(bad)
pop
pop
push
pop
sub
ins
ja
xor
xchg
call
mov
pop
ret
mov
test
cmps
mov
imul
mov
mov
shl
out
adc
fisttp
fcmovbe
or
mov
dec
add
iret
mov
idiv
inc
(bad)
jecxz
pop
repnz
dec
lods
retf
inc
dec
sar
and
mov
je
repnz
adc
data16
cmps
imul
xlat
retf
ficom
out
adc
sub
mul
xlat
xchg
xchg
movs
les
bound
or
xchg
and
mov
bound
not
lock
aad
fs
repz
sti
dec
jmp
iret
mov
lock
sbb
cmps
cmp
int3
test
out
daa
pop
call
dec
xor
or
ins
xchg
stos
es
pop
loopne
(bad)
adc
push
push
push
shl
out
mov
sbb
xor
rol
mov
mov
iret
std
xchg
les
sti
int
mov
test
sbb
push
jle
cs
push
sbb
adc
lea
or
inc
cmp
ret
sub
out
sbb
sbb
clc
push
inc
sar
sub
inc
int
pop
inc
jbe
retf
mov
jnp
mov
cmp
pop
inc
dec
mov
out
fs
dec
outs
in
shl
arpl
les
imul
lea
or
xor
(bad)
pushf
inc
repnz
pop
mov
in
and
mov
and
repz
gs
sub
mov
and
ins
shl
loope
xchg
mov
xchg
in
and
icebp
dec
imul
sbb
jbe
xor
add
jnp
jo
iret
lods
call
inc
inc
cmp
cld
or
cwde
cmp
int
cmp
cmp
test
sbb
test
push
mov
fnstsw
mov
leave
sti
or
jb
and
adc
and
mov
out
mov
iret
pop
outs
ds
pop
push
add
and
mov
fwait
dec
push
jl
repz
aaa
(bad)
push
mov
inc
sbb
adc
lods
sub
cmp
dec
ja
adc
mov
cwde
pop
inc
mov
mov
push
in
cmp
jo
jne
in
mov
test
mov
popf
pop
fadd
data16
and
jge
or
inc
mov
dec
test
inc
int
in
pop
ror
push
mov
addr16
jbe
sub
pop
sahf
retf
mov
nop
mov
das
imul
mov
inc
xor
add
xor
pop
out
adc
cmp
mov
xchg
(bad)
inc
or
(bad)
ds
mov
les
mov
xor
je
pop
int
cld
movs
(bad)
cwde
mov
mov
mov
jmp
in
xor
shr
xchg
xchg
or
mov
or
loop
fmul
mov
mov
cld
dec
std
mov
inc
jle
in
out
das
ss
dec
ja
mov
ret
mul
xor
sub
(bad)
rcl
push
lock
mov
pushf
push
or
hlt
adc
sub
dec
ss
jno
cwd
mov
out
(bad)
shr
rdpmc
or
sahf
jo
cmp
pop
int
mov
mov
mov
xchg
dec
bound
cmp
lods
cwde
(bad)
fwait
daa
push
jge
cmp
inc
ret
mov
mov
pop
xchg
xor
sub
jmp
mov
jl
call
cmp
cmp
stos
(bad)
mov
fisubr
jmp
xchg
jecxz
shl
add
add
push
es
fsub
inc
cmp
inc
outs
dec
movs
sbb
int
push
and
cmpxchg
jns
adc
mov
push
stos
mov
retf
imul
ins
pop
int
sbb
ss
xor
cs
bswap
(bad)
loopne
movs
jmp
mov
pop
xchg
call
push
or
pop
add
sbb
pop
mov
(bad)
fbstp
push
mov
xchg
dec
cmp
lock
les
push
jp
mov
jg
jmp
sahf
stos
ins
mov
cmps
mov
inc
adc
xchg
push
adc
shr
add
cs
mov
mov
xchg
js
inc
add
jnp
fimul
fnstcw
dec
mov
dec
jns
xchg
sub
xchg
xor
in
cmp
lods
pop
cld
push
test
sub
clc
mov
push
fcom
or
or
xchg
scas
add
leave
(bad)
inc
push
mov
and
dec
aaa
(bad)
int
out
lea
xor
xchg
pop
or
outs
ret
mov
out
xchg
bound
lods
btc
aaa
inc
mov
mov
jns
(bad)
dec
sbb
cwde
pop
mov
mov
mov
dec
xor
xor
sub
int3
push
inc
call
and
mov
sub
mov
sub
mov
adc
dec
jmp
jae
and
mov
scas
push
sbb
pop
jnp
push
shr
retf
cmp
icebp
not
mov
xor
and
sbb
cmp
mov
jmp
mov
in
mov
add
wrmsr
lds
test
xchg
fadd
sbb
or
and
cmc
call
stos
jg
in
xchg
popa
das
mov
int
or
adc
dec
(bad)
rol
cmp
scas
mov
shr
or
sti
daa
pop
in
pop
ret
cmps
scas
mov
sbb
or
retf
mov
popf
sub
sbb
leave
je
and
mov
leave
je
jmp
adc
push
xor
add
leave
adc
mov
jns
inc
pop
mov
add
inc
mov
retf
pusha
pop
jecxz
sub
and
push
js
mov
rol
mov
rcr
add
ds
xlat
ret
fistp
push
sub
push
mov
in
pop
inc
fisttp
shl
mov
cmp
fnstenv
test
(bad)
cmps
dec
and
add
add
inc
in
ja
loope
pop
and
enter
push
add
push
shl
into
out
ret
push
sub
dec
sti
jbe
call
dec
mov
aas
call
bound
jp
cmp
push
push
sub
jecxz
and
int
push
push
or
ins
inc
scas
push
mov
inc
jo
ss
sbb
mov
je
push
mov
mov
bound
adc
sbb
ins
push
cmps
push
lods
retf
cs
fs
jle
mov
aad
push
rol
(bad)
push
jge
das
jnp
adc
sub
inc
jno
push
mov
mov
and
shl
add
push
movs
in
xor
lahf
dec
xlat
add
jo
enter
test
lods
in
sbb
sbb
mov
pop
xor
pusha
push
add
cmp
ss
or
cli
jnp
lods
push
stos
js
mov
xchg
ins
xchg
push
out
cmc
pusha
sub
rol
test
mov
retf
adc
inc
repz
push
and
ret
mov
xor
call
lods
jne
mov
add
inc
push
jmp
outs
fst
stos
mov
nop
mov
ror
push
and
call
jne
loope
out
hlt
imul
sbb
movs
mov
jbe
(bad)
(bad)
test
and
adc
movs
mov
aaa
das
sbb
ficomp
mov
(bad)
loopne
xlat
sbb
pop
add
out
sbb
push
retf
jbe
pushf
mov
mov
xchg
ret
push
iret
movs
push
jns
mov
xor
fidiv
pop
xchg
enter
xlat
jl
jp
xchg
xchg
mov
pop
push
cmc
add
nop
mov
inc
pop
adc
test
mov
bound
jns
in
pusha
out
push
int
idiv
outs
xor
aad
sbb
push
out
sar
ja
idiv
fucom
cmp
lods
inc
sbb
jecxz
test
adc
ret
mov
cmps
push
and
or
dec
jecxz
les
pop
jecxz
outs
mov
inc
leave
sbb
and
cmc
sbb
fwait
mov
aam
int
ret
push
sub
add
mov
mov
cmps
sub
jb
jmp
mov
add
mov
pop
mov
in
pop
jnp
shr
fsubr
jmp
xchg
inc
pusha
xor
pop
test
cmps
jle
repz
xchg
sub
rcr
add
test
mov
push
and
shl
xchg
inc
outs
jns
or
shr
(bad)
cmps
push
push
jmp
jle
mov
sbb
movs
inc
or
int
aas
movs
or
cmp
mov
dec
test
mov
fs
loop
into
cli
push
add
pop
shr
jnp
jmp
test
cmp
outs
jmp
push
out
add
(bad)
sbb
inc
add
stos
pop
sub
cmp
sahf
les
push
cmc
push
dec
cmp
inc
adc
mov
xchg
pop
sbb
push
push
cmp
pcmpgtb
in
push
xor
ins
mov
dec
adc
pop
movs
repnz
(bad)
jl
or
push
or
leave
xor
loopne
xchg
push
cli
adc
inc
shl
mov
pop
arpl
mov
movs
test
inc
mov
and
test
mov
inc
in
movs
cdq
xor
and
pop
sbb
das
and
(bad)
scas
add
cmp
inc
nop
shl
sub
hlt
mov
xor
pop
cli
mov
icebp
or
mov
aas
jno
sti
push
inc
mov
or
and
sub
dec
mov
jnp
jne
push
scas
jne
mov
cs
iret
jmp
xchg
sti
jno
mov
test
adc
ret
add
loopne
and
inc
inc
int3
clc
xchg
loope
xor
gs
call
xchg
sub
adc
das
cmps
push
gs
pusha
lods
ror
sar
icebp
and
push
aam
not
outs
ret
je
fbld
popa
add
dec
xchg
pop
mov
(bad)
fst
mov
shl
mov
or
push
dec
jmp
adc
call
in
xor
(bad)
mov
ret
pusha
pop
jns
sbb
xlat
or
cld
sahf
jns
lods
sahf
retf
mov
std
xor
pop
leave
mov
mov
sbb
stc
retf
add
jmp
jmp
pop
pop
dec
ret
test
sub
push
shl
es
mov
xchg
mov
mov
(bad)
lock
jp
out
cld
es
out
jp
cmp
fdivr
mov
lds
dec
les
sub
pusha
mov
and
sub
xchg
cdq
ins
dec
mov
stc
iret
and
out
in
jecxz
dec
xchg
dec
les
test
ret
push
fmul
loope
pusha
cs
sub
or
jb
sub
jmp
mov
mov
jae
mov
imul
add
jo
mov
js
jmp
fiadd
outs
ins
icebp
jne
imul
dec
imul
and
xchg
call
cli
and
xchg
imul
shl
cdq
mov
shr
gs
adc
in
add
xor
out
int
fnstenv
mov
mov
outs
add
(bad)
fsubrp
stc
fild
adc
mov
mov
jmp
sbb
xchg
pop
mov
ds
inc
in
or
push
mov
retf
(bad)
add
lea
adc
out
jb
or
pop
xor
cli
inc
sub
adc
xchg
dec
and
push
push
push
aas
fdivr
loop
lods
aam
in
mov
pop
dec
and
cmp
fwait
xlat
mov
clc
mov
dec
dec
retf
jmp
ret
add
push
jle
pop
or
retf
retf
mov
rol
test
retf
jns
sub
or
add
mov
mov
dec
sbb
ins
xor
inc
retf
mov
push
mov
popf
addr16
aam
ins
jnp
cwde
stos
pop
fisubr
dec
cmp
fcom
sub
ja
rcpps
and
xor
xchg
stc
in
repz
leave
(bad)
sbb
aas
fdivr
cmp
lods
sbb
xchg
push
jle
gs
pop
mov
loopne
lods
adc
mov
clc
cmp
cmp
xchg
xor
and
jg
sbb
lods
test
popf
loope
sahf
or
pop
cmp
(bad)
mov
push
ss
mov
and
push
sbb
int
scas
adc
push
mov
fnsave
adc
gs
(bad)
(bad)
sti
xor
lds
pushf
pusha
jnp
fadd
inc
push
not
popa
mov
addr16
sub
fwait
adc
lahf
add
push
add
cmp
add
xor
cmp
loopne
movntps
in
lea
xor
aaa
fisubr
sti
scas
ficom
push
mov
fcomp
mov
(bad)
int
cld
adc
(bad)
push
mov
aam
test
xchg
lds
xchg
fwait
mov
ror
or
sar
sar
(bad)
jns
add
jmp
imul
or
ja
sbb
pop
hlt
idiv
cmp
mov
mov
aam
adc
adc
clc
fld
adc
add
out
pusha
fs
dec
sbb
mov
std
mov
or
sbb
adc
push
add
stc
cli
arpl
push
jo
addr16
add
pop
xlat
xor
pop
push
mov
mov
add
imul
xchg
fwait
push
das
movs
mov
cmp
js
xor
jp
sub
push
mov
(bad)
popa
sub
loope
inc
dec
pand
mov
das
pop
and
cmp
inc
mov
adc
popa
fucom
cmp
xchg
stc
sti
mov
adc
jmp
data16
fild
repz
xchg
mov
pop
sub
mov
mov
stos
in
jp
xor
hlt
inc
dec
ins
call
jp
cmps
outs
mov
arpl
fwait
xor
(bad)
xor
hlt
dec
lahf
mov
bt
and
or
add
xor
into
jno
jmp
js
mov
fs
adc
and
lds
jecxz
push
jb
jmp
retf
in
cmp
in
mov
jae
sub
lods
jmp
imul
ja
sub
sub
gs
(bad)
lea
cmc
out
rdtsc
and
dec
ins
sub
shr
imul
in
inc
les
mov
ret
xor
jl
jecxz
xlat
mov
push
jnp
mov
(bad)
sar
stos
add
out
xlat
and
test
out
xchg
dec
cmp
jp
push
jo
int3
mov
dec
sbb
stos
daa
popf
lods
pop
cmps
sti
fisttp
add
(bad)
push
dec
jnp
in
gs
std
mov
push
(bad)
into
and
bound
inc
inc
dec
mov
xchg
rcr
mov
push
push
dec
and
daa
sbb
cmova
mov
xor
das
cli
sub
sub
cwde
ds
ss
fistp
pop
dec
mov
or
jp
shl
cmp
in
sbb
fadd
jecxz
cmp
loop
cmp
shr
int
mov
cld
cmc
sbb
(bad)
jns
xor
mov
mov
sbb
push
dec
pusha
xor
lea
sbb
aas
jge
and
and
es
ss
mov
adc
adc
imul
mov
rcr
jo
pop
inc
and
(bad)
cwde
int3
xchg
in
in
xor
xor
xor
adc
js
jb
sub
inc
imul
mov
mov
ins
ret
inc
inc
shl
(bad)
sti
cmp
push
test
(bad)
aad
mov
in
icebp
test
mov
aam
(bad)
fdiv
(bad)
jnp
ds
mov
test
mov
push
sbb
sbb
lock
inc
xor
shr
jbe
cmp
adc
adc
push
and
inc
jno
lea
jmp
mov
mov
and
xchg
fadd
iret
push
push
xchg
aam
jecxz
pop
iret
cli
and
stos
fistp
xor
cli
mov
test
ficom
cmc
dec
mov
sbb
jns
mov
adc
in
outs
daa
jl
scas
mov
lahf
pop
cwde
or
push
push
xchg
cld
xchg
sub
jmp
xchg
inc
ja
mov
test
fcom
sub
lods
inc
int
aas
xchg
pop
cmps
iret
out
rol
pop
mov
dec
fsubr
rol
adc
sar
or
adc
sbb
stc
shl
or
sub
lock
dec
inc
xchg
std
sbb
jecxz
popa
aas
ins
daa
push
stos
push
outs
inc
pop
pop
lds
(bad)
out
sub
int3
in
sub
jne
(bad)
jg
add
les
cld
mov
xchg
mov
or
dec
mov
lahf
out
push
jno
fst
push
xchg
jno
mov
and
cmp
add
mov
out
ret
aad
loop
mov
imul
loopne
sub
data16
movs
ins
xor
retf
xor
jecxz
mov
in
loope
xchg
test
ins
pop
out
dec
dec
pop
sub
(bad)
aam
pop
mov
test
xchg
jmp
mov
movs
and
ret
nop
lds
xor
jae
mov
push
mov
xchg
daa
or
mov
int3
cmc
xchg
and
scas
xor
adc
cld
iret
and
sub
mov
mov
cmp
jle
mov
cmp
in
pop
jl
mov
jge
addr16
inc
sbb
fs
loope
xchg
jecxz
push
lods
mov
dec
ja
cmp
and
inc
and
into
and
mov
gs
sbb
imul
loop
jg
dec
dec
out
lock
add
inc
lods
rcr
in
outs
cmp
cmp
hlt
ror
sbb
mov
lods
out
scas
repnz
sar
xor
outs
outs
add
push
test
aad
sbb
sub
(bad)
lods
in
pop
hlt
leave
loopne
mov
sub
ins
int
retf
adc
test
or
setb
leave
mov
bound
push
iret
xor
sub
leave
lods
dec
jp
in
jg
test
jecxz
mov
stos
and
lods
in
sbb
mov
lods
mov
or
in
dec
xchg
and
inc
or
test
fisttp
je
sbb
sti
dec
sbb
xlat
adc
(bad)
cmc
cdq
sbb
pop
cs
jle
mov
fistp
jne
ins
jno
neg
cmp
jmp
mov
mov
clc
xchg
cdq
ja
mov
cmp
push
pusha
pcmpgtb
shl
dec
fsubr
mul
cmp
retf
cmp
push
imul
in
adc
pminub
hlt
stos
sar
pop
in
imul
xchg
mov
cmps
and
xchg
inc
dec
xor
pop
mov
push
fcomp
cwde
lods
add
shr
pop
mov
adc
(bad)
push
pusha
(bad)
dec
iret
(bad)
sub
dec
ror
mov
mov
push
daa
cmp
sbb
jns
add
lea
scas
cmp
out
pop
(bad)
xor
pop
loopne
jnp
js
mov
cs
pusha
dec
cwde
or
inc
sub
mov
aaa
dec
jl
or
cmc
or
(bad)
daa
imul
daa
dec
rcr
pusha
rol
aas
dec
(bad)
stc
inc
push
ds
sti
and
cmp
(bad)
cli
cmp
js
repz
jecxz
mov
test
stos
aas
sbb
pushf
sbb
xchg
mov
mov
cmps
and
sbb
cdq
ret
ja
cmps
adc
dec
mov
mov
mov
test
(bad)
and
sbb
cli
lea
cmovge
repz
jge
xchg
jbe
cmp
jecxz
mov
sbb
push
shr
ins
inc
mov
mov
inc
mov
lahf
ss
cwde
adc
das
inc
fdiv
jno
int
dec
push
cmp
popf
test
bound
fidiv
jp
in
lahf
stos
daa
les
mov
or
pop
jae
push
jb
pop
mov
fwait
dec
and
(bad)
pop
jmp
stos
or
stos
stos
das
xor
test
gs
jno
mov
xchg
mov
xor
cmps
add
and
adc
ja
(bad)
dec
std
adc
jb
gs
mov
jg
pop
ret
(bad)
aaa
jae
leave
idiv
push
gs
dec
(bad)
jle
fidivr
(bad)
(bad)
jb
mov
inc
or
data16
rol
sbb
push
cli
dec
mov
int3
mov
imul
out
jle
mov
out
jl
adc
or
movs
lds
xchg
mov
sahf
sub
xlat
enter
adc
retf
std
or
loop
or
out
add
jns
retf
(bad)
xchg
push
jge
(bad)
dec
or
pop
jmp
mov
aad
je
or
inc
in
cwde
movs
fwait
nop
cmp
mov
sbb
inc
test
repz
mov
daa
jl
mov
push
addr16
adc
cwde
cmp
sub
jl
jbe
mov
in
ret
xor
daa
push
jns
ds
sub
movs
dec
popa
pop
or
or
or
sbb
iret
aad
rcr
cmp
and
mov
icebp
leave
(bad)
fist
inc
add
nop
adc
rol
mov
stos
aad
cld
adc
div
add
sbb
fiadd
out
test
fwait
push
push
retf
push
and
movs
aad
dec
xchg
in
stos
cld
mov
or
popa
mov
loope
sbb
xchg
xchg
mov
or
jb
retf
push
push
std
dec
enter
or
outs
inc
addr16
lods
push
lahf
add
loopne
fcomp
clc
aaa
test
mov
mov
lea
repz
xor
and
inc
xchg
ret
les
push
jg
push
mov
add
cmovle
pop
sub
int3
sbb
cmp
push
push
call
js
retf
xchg
je
into
add
pop
mov
sbb
hlt
mov
into
xor
cwde
in
jg
cmp
dec
jecxz
mov
inc
arpl
pop
jp
ja
adc
pop
out
dec
dec
mov
sub
xchg
mov
lods
cmp
push
dec
push
jle
cmp
push
sahf
sti
stc
inc
mov
push
pusha
mov
repnz
mov
jecxz
adc
cmc
mov
sbb
cmc
push
inc
or
or
ja
outs
aas
pop
mov
inc
in
in
dec
cwde
mov
pop
sti
not
mov
xchg
dec
fcom
xor
(bad)
mov
aam
fimul
push
or
sbb
jne
test
ficom
pop
imul
outs
lahf
rcr
and
inc
cmp
or
xchg
cmp
rcr
mov
sbb
push
mov
fwait
adc
xchg
fistp
mov
cmp
push
stos
pop
cs
js
js
ret
movs
pop
sbb
loopne
ret
sub
test
xor
xlat
scas
push
cmp
and
xchg
push
iret
je
rol
xchg
(bad)
cmp
or
dec
dec
add
mov
shr
ja
popf
retf
movs
inc
pop
inc
je
add
xchg
mov
outs
mov
push
push
test
xchg
inc
(bad)
push
out
mov
or
les
lds
out
rol
push
cmp
dec
jl
stos
push
dec
pop
xchg
stc
add
mov
sbb
cwde
(bad)
bound
in
icebp
ret
xor
int3
js
(bad)
cdq
pop
dec
ret
mov
data16
sub
cli
mov
repnz
xchg
mov
mov
mov
jnp
in
bound
(bad)
push
xchg
xlat
adc
ret
inc
dec
test
xor
clc
pop
cdq
pop
iret
test
out
inc
cli
scas
gs
and
cs
or
cmp
(bad)
and
mov
je
ficomp
xchg
sbb
ret
fsubr
or
repz
xor
adc
sub
aaa
test
gs
pusha
mov
push
xor
sbb
cwde
adc
push
inc
out
add
adc
sbb
mov
xchg
adc
push
xor
pop
mov
xchg
inc
add
push
and
daa
stc
dec
enter
sub
mov
mov
les
mov
sbb
(bad)
(bad)
loop
into
test
imul
push
inc
xor
hlt
cli
clc
das
dec
cmp
push
pop
adc
xor
mov
and
and
icebp
or
popa
sbb
cmp
adc
add
add
int3
sub
xchg
adc
mov
ss
mov
ror
and
mov
ins
jmp
pop
dec
es
inc
push
xchg
xchg
cmp
and
sub
and
and
(bad)
rcr
test
cs
xor
stc
and
add
pop
xchg
leave
add
loopne
mov
(bad)
jns
imul
ss
pop
and
call
cmc
loopne
pusha
and
mov
jae
(bad)
les
and
sbb
mov
jmp
xchg
sub
pcmpgtd
jns
(bad)
and
ret
ds
jae
aad
sbb
cmp
shr
stos
rcl
mov
mov
fs
movs
shl
movs
sbb
std
aaa
mov
pop
cmp
les
mov
add
loop
mov
fimul
mov
adc
xor
pop
rcr
in
or
cmp
movs
add
in
xchg
inc
ins
sbb
cmp
inc
adc
xor
loope
fdivr
jae
scas
cld
je
int3
push
mov
dec
inc
(bad)
call
mov
cmp
clc
pop
mov
fidiv
fisub
add
iret
rcr
leave
popf
test
test
loopne
retf
aas
push
push
je
inc
cmps
scas
in
pop
xchg
xor
fisub
sar
mov
mov
or
push
jmp
scas
(bad)
ss
es
sub
shl
in
lahf
std
jl
loope
call
inc
aad
mov
lahf
(bad)
xor
into
cdq
cmps
mov
rol
jb
and
gs
ss
movs
mov
jbe
vandpd
mov
enter
inc
jmp
jno
add
sbb
mov
xchg
das
or
jge
(bad)
stc
daa
or
nop
cwde
xor
xor
mov
movs
fwait
daa
out
sahf
and
ret
sbb
shr
call
imul
inc
mov
mov
(bad)
arpl
or
and
jne
and
jae
fistp
lea
sbb
mov
xchg
adc
dec
or
mov
scas
or
fidiv
mov
out
dec
shl
jge
arpl
jge
xchg
out
inc
repz
xchg
ret
xor
xchg
ja
cmps
inc
pushw
cmps
inc
push
add
inc
lods
add
stc
and
xchg
mov
push
mov
jmp
fldenv
(bad)
inc
cs
inc
cmp
(bad)
imul
sub
fild
mov
test
mov
jg
xor
paddsb
inc
daa
fadd
pop
inc
mov
dec
test
movs
jae
aas
add
xlat
test
fnsave
jnp
sar
push
pop
xor
ror
inc
dec
dec
shl
or
adc
mov
xchg
jo
ss
sbb
adc
sub
ret
adc
sub
loop
mov
andps
inc
xchg
scas
adc
mov
es
sub
xchg
sub
and
pop
xor
inc
popa
pop
popa
sbb
movs
sbb
pop
and
and
mov
fwait
(bad)
ds
xlat
gs
ficom
mov
mov
inc
retf
icebp
cmp
xlat
mov
stc
xchg
daa
xor
test
(bad)
out
xchg
stc
gs
loop
dec
dec
popa
push
inc
out
(bad)
mov
dec
xchg
xor
push
pop
loop
xor
out
js
push
and
mov
mov
cmc
xor
xchg
pop
loope
call
nop
imul
call
ja
dec
pop
xchg
xlat
popa
adc
jecxz
repnz
sar
xor
stc
cmp
bnd
les
enter
push
xor
mov
out
fst
sub
in
and
ret
in
dec
mov
lods
loop
fnstenvw
xor
(bad)
or
call
cmps
in
idiv
cmp
popa
lods
pop
ror
in
push
or
popf
call
mov
lea
mov
xor
jge
pusha
jmp
(bad)
mov
mov
ja
aad
pop
sub
cmpxchg
pop
mov
xor
cmp
or
popf
fidiv
imul
cwde
mov
jp
dec
ja
fidiv
js
stos
cld
add
ret
jo
sub
jl
sub
adc
enter
push
fdivr
cmp
or
mov
jne
lock
mov
retf
imul
push
ficom
sti
(bad)
(bad)
fcomp
stos
in
shl
jb
inc
mov
movs
les
push
mov
sbb
or
mov
jmp
fwait
jnp
and
int3
jle
loop
push
into
sar
adc
outs
scas
lahf
fstp
xchg
movs
sbb
sub
sub
es
imul
xchg
imul
test
inc
push
mov
aam
jmp
jnp
js
fwait
je
sub
pop
stos
mov
push
sbb
mov
inc
mov
nop
call
add
jb
sub
jb
dec
inc
stc
pop
or
test
and
(bad)
push
mov
lahf
mov
pop
xchg
jge
xlat
scas
xchg
fist
idiv
mov
or
mov
add
ret
fwait
(bad)
fst
clc
inc
imul
aaa
das
xchg
sahf
adc
sub
call
sbb
push
in
(bad)
mov
retf
mov
push
mov
and
sub
stc
adc
add
inc
clc
cmp
mov
dec
xor
xchg
jge
mov
or
fsub
sub
lea
call
or
pop
cwde
xor
sub
pop
sbb
cmps
and
jns
pushf
mov
arpl
xchg
add
out
xchg
pop
xchg
(bad)
and
movs
cmps
dec
jb
push
jae
cmc
loop
sub
stos
adc
and
xchg
cmp
cmp
adc
xlat
test
add
mov
(bad)
iret
mov
mov
(bad)
mov
mov
cmp
cmp
lock
mov
in
ins
ret
daa
leave
repz
out
add
out
sbb
push
sub
and
popa
pop
adc
leave
out
sub
mov
push
cmp
mov
in
je
push
pop
and
and
jle
sbb
push
stc
jo
cmp
add
adc
int
sbb
or
outs
(bad)
nop
push
arpl
add
sbb
retf
addr16
leave
(bad)
cmc
push
dec
ja
fimul
xchg
inc
sbb
ins
cmps
mov
push
adc
inc
cmp
mov
out
xchg
ret
xor
mov
add
or
mov
scas
fabs
add
push
in
(bad)
call
jg
(bad)
repz
sbb
pop
movs
xchg
push
ins
mov
ret
lods
jbe
inc
test
lock
mov
jmp
outs
mov
into
test
int3
sbb
int
adc
enter
push
lods
inc
push
dec
inc
dec
sub
xor
das
retf
inc
adc
pop
push
pop
mov
cmps
daa
dec
and
adc
ss
ror
mov
(bad)
rol
inc
mov
dec
jge
ds
ror
mov
push
fsubr
inc
push
push
xchg
jns
enter
(bad)
xchg
add
aaa
mov
dec
jle
lock
xchg
cwde
ror
mov
mov
enter
idiv
push
ja
clc
or
stos
sub
sahf
fadd
aad
inc
pop
inc
adc
aas
sbb
sbb
adc
cmp
cli
ret
enter
call
ss
stc
aam
jmp
pop
lds
sub
or
sbb
mov
int3
add
test
test
pop
jo
es
loop
clc
jbe
nop
jp
ret
rcr
int
out
add
inc
retf
push
out
add
cli
sub
arpl
jne
xchg
xor
cmp
add
lods
ins
fmul
fs
jo
mov
mov
ins
mov
and
pop
fisub
adc
mov
(bad)
movs
idiv
dec
cmp
sbb
pop
jp
aaa
sbb
(bad)
fild
fdivr
cwde
cmp
xlat
sahf
(bad)
sbb
and
jno
fst
ss
int3
jnp
pushf
mov
jmp
add
adc
adc
imul
xchg
ret
sbb
stc
jb
cmp
xor
jle
add
dec
das
jnp
in
lahf
pop
ja
pop
clc
push
fisttp
rol
mov
pop
stos
call
popf
inc
push
xor
not
mov
and
out
sbb
mov
icebp
stos
add
bnd
xchg
dec
stos
test
jmp
addr16
(bad)
pusha
js
mov
mov
pop
cld
dec
adc
and
cdq
inc
aam
pop
xor
sub
mov
in
out
or
aas
int
cmp
cli
out
adc
sub
shr
in
mov
adc
jo
jnp
pop
loope
icebp
and
push
dec
and
pop
lods
pusha
xor
cs
cli
icebp
imul
add
loope
push
sub
xor
std
sar
mov
je
cmp
dec
adc
or
mov
shr
leave
xchg
cwde
cmps
and
mov
inc
or
popf
inc
inc
adc
sub
(bad)
adc
movs
shl
xor
shl
lahf
push
neg
adc
cli
push
call
cmp
ins
lds
shr
mov
add
test
and
dec
adc
xchg
sbb
lahf
inc
(bad)
fadd
xor
jae
mov
xor
lea
jno
xlat
mov
push
fsubr
scas
sahf
(bad)
jmp
lock
imul
jecxz
loopne
fcmovnb
and
add
mov
sub
out
iret
dec
sbb
lds
popf
aad
push
jmp
outs
lds
mov
(bad)
dec
pop
in
mov
and
in
arpl
adc
das
cdq
pop
popf
xchg
add
sub
aad
out
add
jp
js
enter
sub
mov
pop
push
sahf
ret
stc
in
jge
stos
cmps
imul
arpl
sti
cmc
ret
retf
jno
sar
jo
xchg
xchg
dec
pop
push
jg
cmp
addr16
out
push
push
sbb
mov
xor
adc
jge
inc
stos
xchg
sub
arpl
mov
pop
aaa
rcr
cmp
cmp
sub
add
add
xchg
mov
mov
adc
std
mov
(bad)
jmp
mov
test
hlt
xor
xlat
add
les
fdivr
mov
cmp
xor
icebp
push
stos
sub
xchg
mov
cwde
inc
inc
gs
xor
leave
fcomp
pusha
mov
mov
inc
push
mov
cmc
ret
mov
aas
hlt
sbb
xor
jo
mov
pop
cmp
or
inc
fwait
cmp
mov
lahf
in
push
sbb
jp
shr
adc
cmp
sbb
adc
add
or
add
jp
and
inc
out
mov
int3
jmp
shr
pusha
mov
shl
cmp
ins
test
sbb
pop
sbb
gs
lds
cld
out
ins
xchg
dec
lods
outs
xor
imul
cmps
jae
inc
addr16
imul
dec
push
xor
add
inc
(bad)
lock
(bad)
and
xchg
push
aam
or
ficom
or
mov
test
fwait
rol
mov
fldcw
sub
loope
xor
es
loope
push
push
lahf
fs
pop
fwait
mov
mov
scas
jle
mov
inc
dec
popa
imul
(bad)
das
aam
pop
sbb
mov
ret
cmps
out
mov
mov
mov
jecxz
mov
or
mov
push
mov
sub
xor
into
cmc
push
pop
jne
call
mov
push
jge
int
jnp
popa
int
fld
xor
rcl
xchg
and
cmp
adc
(bad)
hlt
mov
mov
ja
shl
loopne
cmps
sahf
idiv
outs
out
jge
jne
adc
adc
cmc
inc
inc
rol
sub
(bad)
jns
imul
inc
mov
adc
retf
je
call
push
or
gs
imul
ins
push
sub
mov
dec
adc
push
push
pmaddwd
fsub
dec
(bad)
out
xchg
mov
hlt
inc
inc
aas
push
repnz
inc
or
mov
cmp
xor
je
xchg
clc
or
jmp
rep
neg
or
outs
gs
inc
pop
fidiv
cmp
mov
pop
or
jnp
jno
push
(bad)
(bad)
in
jnp
enter
xchg
imul
mov
jb
or
(bad)
and
cmc
xchg
sbb
out
pop
stc
mov
shr
(bad)
and
lods
retf
ins
in
test
test
movs
adc
push
xor
fsub
jb
sahf
jbe
movs
cmp
adc
ficom
push
mov
lock
xchg
stos
test
enter
pop
mov
test
mov
out
xor
or
inc
push
mov
sbb
cmp
test
xchg
jmp
jns
movs
dec
scas
pop
in
adc
or
cmp
jmp
add
stc
cmp
mov
std
mov
cmp
test
lods
in
mov
out
mov
movs
jo
lods
sar
mov
or
je
add
fcmovnu
push
pop
inc
and
(bad)
pop
jmp
test
je
test
jne
mov
(bad)
rcl
or
mov
rcr
or
data16
inc
xchg
xor
sti
mov
inc
js
ins
cmp
ja
mov
stos
inc
adc
shr
imul
stc
movs
mov
lock
xchg
lds
fs
mov
sub
or
aaa
cmp
mov
jne
test
fcomp
lods
ds
inc
mov
sub
sub
add
inc
leave
fadd
jb
es
icebp
add
jecxz
or
ins
xor
in
mov
mov
in
cwde
push
mov
in
(bad)
fild
xchg
sub
and
lea
test
mov
clc
in
ins
dec
jnp
loopne
bound
dec
mov
cmp
mov
cmp
in
ins
mov
mov
std
les
imul
nop
add
jg
pop
imul
mov
aam
retf
sbb
push
mov
inc
xchg
adc
rcl
out
dec
enter
into
sub
int3
mov
lahf
inc
mov
xor
xchg
sub
mov
dec
jmp
push
jno
scas
in
mov
xchg
int
nop
and
js
mov
stc
outs
jbe
cmp
sbb
pop
ror
adc
mov
es
pusha
push
pop
mov
pop
push
in
loope
cmp
(bad)
xor
sbb
cmc
into
pop
ss
or
cmp
aad
ret
pop
fwait
add
mov
sbb
pop
ror
jmp
push
sub
add
adc
mov
stc
mov
sub
fldenv
ss
in
add
ficom
jne
cdq
(bad)
jmp
mov
add
push
les
sub
sub
pop
scas
icebp
pop
sbb
in
fs
cmc
or
mov
mov
rcr
movs
sub
xchg
jo
xchg
(bad)
jmp
jne
cwde
fs
pop
add
and
mov
pop
cdq
cli
mov
enter
push
or
pop
mov
and
pop
loop
mov
ds
mov
into
push
add
ja
gs
clc
mov
dec
pushf
fmul
sub
test
and
fwait
dec
adc
jmp
mov
add
movs
push
adc
(bad)
adc
push
jo
stos
aas
inc
mov
and
or
imul
adc
iret
out
inc
jle
inc
hlt
jno
mov
les
mov
push
imul
outs
sar
stc
pop
fidivr
push
mov
or
xchg
push
aad
and
pop
cdq
mov
cli
or
jmp
out
mov
mov
xor
call
jg
ja
(bad)
popf
je
or
jbe
mov
jnp
inc
sub
fs
shl
bound
and
loop
icebp
enter
xlat
test
add
(bad)
addr16
rcr
dec
test
inc
adc
aas
add
push
popa
dec
pop
mov
cmc
push
cmp
pop
add
pop
pop
cmp
cmp
or
sahf
mov
mov
xor
pop
ss
das
call
push
jb
jmp
shr
loopne
dec
xchg
cli
jo
int3
mov
gs
sub
mov
in
in
jl
sub
jl
inc
scas
ins
js
push
cmp
repnz
stos
pop
outs
les
mov
in
cmp
ret
daa
popa
shl
fcomp
adc
xor
int
outs
cmp
out
test
mov
jbe
cmp
pop
fwait
in
xor
jle
iret
jne
mov
mov
cmc
sbb
data16
xchg
sub
mov
mul
or
xor
cmps
jbe
cs
fwait
jnp
jae
jg
into
xchg
pop
pop
inc
fcomp
ins
cld
mov
mov
sbb
xchg
or
xor
pop
add
add
stos
jecxz
jecxz
sub
sub
movs
add
cmp
mov
stos
les
push
push
or
jb
aad
ja
xor
dec
jge
int
mov
xchg
push
jmp
(bad)
jmp
(bad)
std
push
fidivr
mov
mov
nop
test
cmps
or
inc
sub
add
push
add
fmul
jae
jmp
mov
daa
iret
push
popa
mov
mov
shl
inc
ds
pop
cmps
rol
add
push
push
mov
ret
cmps
pushf
fcom
dec
push
stos
inc
loopne
outs
test
pop
cs
nop
repz
scas
add
rcr
dec
out
and
jl
out
xchg
sar
and
xchg
aas
inc
jb
push
inc
into
outs
sub
or
inc
inc
push
aaa
rol
and
loope
pop
mov
adc
add
jmp
mov
pop
add
fucomp
adc
mov
xor
test
adc
xlat
mov
or
push
adc
out
cmp
aaa
cmc
retf
cmp
shr
mov
je
fs
mov
rcr
mov
xchg
das
rcr
hlt
les
jecxz
sti
fld
es
push
cwde
lahf
icebp
ins
xchg
pop
shr
mov
add
and
xchg
add
push
dec
les
mov
jg
pop
rep
xor
push
fisttp
(bad)
dec
mov
lods
cmp
jge
mov
fcom
shl
scas
or
movs
push
out
pop
fldenv
imul
pop
in
stc
out
xor
sbb
mov
outs
push
cld
and
push
adc
les
in
in
loopne
ins
jne
xchg
jbe
mov
mov
out
jge
adc
inc
ins
jbe
pop
in
test
sbb
fdiv
shr
pop
out
data16
xor
leave
lods
dec
in
rol
inc
in
ds
(bad)
cmp
and
xchg
push
ds
ds
in
xor
jo
push
(bad)
rol
scas
outs
cmps
add
sbb
pop
pushf
xchg
std
hlt
jbe
nop
xchg
pop
pushf
adc
xchg
mov
fnsave
inc
mov
mov
pop
shl
neg
push
adc
inc
add
popf
je
shl
xchg
mov
nop
out
hlt
dec
xlat
dec
shl
in
movs
mov
jns
and
or
and
cwde
dec
mov
addr16
jns
xchg
cmp
push
mov
mov
in
or
adc
out
add
adc
and
(bad)
clc
pop
out
pop
js
inc
hlt
dec
retf
mov
inc
sub
cdq
cmp
xchg
scas
xchg
cmps
pop
xchg
test
adc
adc
mov
(bad)
repz
out
mov
in
cs
push
fist
push
or
cmp
xchg
int
cld
and
sub
mov
fcmovbe
dec
sbb
push
xchg
rol
rcr
ds
pop
sub
out
add
int
xlat
inc
mov
das
rcl
and
add
in
mov
sti
xchg
scas
add
xor
lock
cmp
mov
pop
leave
ffreep
(bad)
fprem
push
inc
mov
push
add
movs
imul
add
pop
xor
and
fwait
sbb
mov
stos
or
mov
in
mov
jmp
fist
fidiv
leave
aas
mov
xchg
or
jg
and
xor
in
sbb
popf
mov
cmc
and
fsub
dec
in
mov
not
pop
xor
cli
xlat
lock
into
add
movs
push
hlt
ins
shl
jmp
je
fsub
popf
mov
cs
dec
sub
fnstsw
sub
cwde
dec
inc
pop
loopne
popa
dec
cmp
out
dec
fisubr
shl
push
sub
and
ret
mov
(bad)
jmp
jmp
ds
push
pop
mov
pushf
adc
jo
cdq
ja
add
xchg
dec
lods
and
cmc
push
lds
jg
fiadd
jae
add
iret
int
push
out
push
lds
inc
outs
repz
enter
add
mov
pusha
lods
test
(bad)
lods
or
inc
mov
cli
jg
dec
jp
mov
jne
cmp
jno
test
dec
das
adc
outs
and
(bad)
clc
push
jmp
pop
or
jno
ins
push
test
inc
pusha
dec
lea
mov
int
and
in
in
loopne
xor
movs
mov
leave
sbb
sub
add
cwde
fstp
sbb
into
bound
retf
pop
mov
loop
or
mov
inc
aad
data16
dec
mov
jae
arpl
sbb
sub
xchg
aaa
xlat
fsubr
movs
mov
xor
movs
xchg
pop
int3
inc
adc
push
jnp
mov
cld
mov
mov
lods
test
dec
mov
fadd
and
clc
and
inc
out
fisub
adc
test
xor
xchg
loop
jg
push
pop
arpl
cld
pushfw
mov
mov
int3
nop
pop
mov
cmp
inc
add
add
add
cmp
int3
lahf
mov
(bad)
iret
or
and
xor
mov
(bad)
push
mov
and
pop
movs
inc
jnp
add
test
mov
mov
sbb
mov
pop
scas
test
pop
test
int3
inc
xchg
(bad)
dec
inc
cmp
retf
push
jo
gs
cli
scas
mov
cdq
sbb
cmp
pop
idiv
mov
fsub
mov
mov
bound
xchg
shr
test
add
in
in
pop
mov
sub
inc
pop
mov
dec
inc
jmp
mov
js
cmp
fst
or
fnstcw
rcl
fs
mov
jne
push
mov
test
xor
mov
xchg
repnz
rcl
xchg
js
xlat
idiv
cmp
jo
dec
mul
clc
add
nop
cmp
sub
mov
jl
cmps
push
(bad)
sbb
jns
(bad)
xor
call
into
lahf
(bad)
mov
stos
adc
fwait
and
jo
push
call
test
ds
stos
lds
cli
outs
dec
popf
xchg
mov
fimul
cli
dec
inc
xchg
inc
out
jae
test
ss
in
jb
fwait
jbe
es
inc
mov
out
mov
lock
ds
cmp
dec
push
(bad)
sti
jno
mov
sbb
pushf
ret
adc
and
test
fisub
jp
add
ucomiss
add
scas
out
popa
and
pop
pop
sbb
out
cmp
dec
inc
xor
mov
jmp
loope
pop
data16
sbb
push
fst
cmps
pop
leave
xor
add
jmp
or
pop
fcmovu
push
inc
sbb
xor
scas
push
cmc
rol
cmp
in
in
setae
push
sbb
xchg
cmp
sub
out
ins
(bad)
rol
xor
imul
call
push
cwde
add
mov
inc
push
and
sub
inc
sti
in
cmc
push
std
out
into
or
jle
adc
cmovno
out
pop
out
test
mov
sub
mov
repnz
jmp
xchg
xchg
pop
fnstenv
repz
shr
test
xchg
fs
jo
arpl
out
mov
mov
push
jl
shl
or
sub
repnz
js
and
xchg
inc
cmps
and
scas
mov
mov
into
xor
mov
xor
xchg
add
test
int
inc
and
cmp
imul
retf
repnz
sub
cmp
aas
shr
add
fimul
int
fstp
mov
xchg
xor
in
xchg
mov
test
dec
xor
add
adc
pop
jmp
scas
add
inc
cmps
jle
shl
dec
xor
out
scas
mov
add
aas
cmps
cld
sub
jne
cdq
jmp
sar
fwait
cwde
movs
ss
pop
call
cmps
push
mov
stc
pusha
imul
aam
cdq
ss
popf
add
and
sti
retf
sbb
leave
imul
loop
pop
movs
out
xchg
cmc
dec
movs
mov
mov
fidiv
adc
mov
fwait
lahf
imul
push
xor
inc
je
cwde
(bad)
aam
pop
xor
lods
xor
push
add
inc
and
sbb
ja
daa
vminpd
cmps
push
(bad)
fbld
addr16
sbb
jnp
and
jo
dec
out
push
rcl
in
or
repnz
call
inc
shl
xchg
dec
mov
ins
or
in
ins
dec
gs
popf
mul
jo
iret
xor
fwait
mov
mov
sub
push
cmp
xlat
bound
test
sbb
ret
and
and
sti
pop
push
mov
lock
mov
scas
xor
or
mov
sbb
lods
iret
cmp
push
jno
sar
mov
and
dec
xor
in
test
iret
js
gs
xor
(bad)
in
sbb
in
cmc
push
fstp
call
test
nop
pop
push
mov
push
add
arpl
jne
and
add
xor
fs
cmp
sbb
cld
fcomp
push
js
shr
xor
lahf
bound
xchg
inc
jmp
out
cmp
test
sub
push
div
int
outs
hlt
mov
xor
sub
adc
sub
bound
cmp
mov
sub
retf
ror
int3
dec
add
das
mov
jno
scas
dec
in
call
movs
mov
imul
add
inc
imul
enter
mov
push
test
sar
scas
std
cs
mov
call
pop
push
ficom
repz
push
jg
fldcw
imul
cmps
add
les
push
aad
xchg
ds
adc
push
xor
test
test
xor
jmp
iret
lods
aaa
sbb
out
mov
in
call
and
jnp
push
sub
out
les
cmc
mov
xchg
jle
dec
pop
ins
popf
add
fs
cli
mov
inc
inc
pop
enter
jno
inc
scas
imul
mov
and
mov
cmp
or
pop
fdiv
add
mov
lahf
pop
inc
cdq
mov
mov
jmp
jns
fs
sar
jle
xchg
or
dec
dec
mov
loop
mov
dec
dec
loopne
mov
mov
pop
sbb
imul
inc
or
inc
dec
xor
jo
mov
stos
pop
add
adc
pop
adc
push
(bad)
(bad)
pusha
fisttp
(bad)
jp
or
mov
enter
scas
(bad)
mov
fdiv
fmul
inc
jg
in
(bad)
pop
(bad)
icebp
fbstp
cmc
call
in
xor
dec
mov
or
and
jbe
sub
xchg
std
test
push
sub
sbb
and
mov
aaa
stos
mov
cmp
(bad)
push
sub
cmp
adc
sub
push
mov
dec
bound
push
shl
ret
jg
xor
js
pop
mov
out
pop
or
sub
fdivr
adc
mov
cmp
inc
rol
pop
retf
push
imul
pop
std
stc
rcr
cmp
push
in
sbb
pushf
fist
pop
lods
cmp
cli
iret
loope
shr
dec
jb
adc
push
and
mov
sbb
ret
mov
dec
xchg
ficom
sub
sub
sbb
mov
arpl
sbb
(bad)
jne
aad
fadd
jb
cmps
push
add
rol
cmc
push
push
and
and
mov
inc
mov
adc
jp
inc
xchg
call
ins
sbb
push
call
cmps
pop
imul
in
(bad)
add
add
jmp
inc
push
rol
cli
mov
cmp
cmp
pop
add
in
fcom
sub
sbb
jno
test
xor
out
sub
fstp
xchg
jne
jecxz
push
jno
pop
cmc
in
cs
fild
cmp
jns
aas
fs
out
sbb
cmp
inc
or
out
in
mov
xchg
adc
outs
dec
loop
fs
xchg
loopne
jno
daa
aas
xchg
leave
mov
cmp
mov
pop
cmc
pusha
push
dec
xchg
aas
fnstenv
idiv
push
ja
add
add
push
(bad)
lahf
add
inc
aad
dec
sub
jne
ror
inc
mov
or
inc
scas
xchg
inc
sbb
or
mov
add
xchg
pop
xor
push
dec
add
ror
jmp
cmp
nop
lea
mov
xor
push
cmp
test
lahf
je
xchg
adc
and
pop
jae
jne
adc
or
mov
inc
adc
ins
push
fwait
mov
dec
or
pushf
mov
jg
pop
arpl
xor
imul
mov
outs
nop
mov
popf
sbb
pop
xchg
inc
and
cli
sub
dec
sti
aaa
sub
neg
shl
enter
popa
sub
xchg
jnp
jp
jg
test
adc
or
aam
shl
in
data16
inc
inc
cmp
xchg
mov
dec
gs
scas
jmp
cmp
ret
cs
repnz
sbb
inc
imul
pushf
fcom
lods
stc
push
in
sub
idiv
ins
adc
xor
(bad)
shr
xchg
jb
jb
leave
nop
aas
jge
sti
cmp
xor
push
cdq
loopne
pop
popa
add
and
(bad)
xlat
xlat
adc
inc
push
sbb
out
stc
loopne
mov
and
sub
pop
imul
sbb
pushf
xor
test
inc
imul
xchg
cld
xchg
pushf
xchg
test
add
cld
and
push
mov
and
js
sub
pop
push
push
jg
mov
inc
(bad)
fild
xlat
push
add
push
xchg
mov
cmp
sbb
dec
adc
mov
xor
jmp
cmp
in
in
cmps
scas
adc
pop
cld
popf
ss
mov
pop
mov
jns
mov
mov
xchg
ja
cmp
and
jo
test
jnp
(bad)
adc
imul
adc
jb
sbb
(bad)
mov
arpl
mov
shl
ret
push
or
adc
push
cmps
addr16
mov
aad
mov
xchg
jmp
ret
aad
mov
pop
call
add
aad
push
(bad)
pop
adc
cdq
je
sbb
add
jle
cmps
dec
stos
call
mov
lods
shr
repnz
adc
xor
ja
push
int3
mov
retf
xor
adc
and
cmp
inc
push
test
sub
iret
jle
jp
or
sub
mov
cmc
cmps
in
stos
pop
clc
adc
sub
cmp
pop
aas
ins
push
stos
fwait
rol
or
test
cmp
data16
add
mov
pop
push
fmul
shl
lods
mov
jb
loop
dec
outs
inc
repnz
retf
jecxz
lods
cld
outs
inc
mov
out
arpl
and
mov
ret
adc
(bad)
jl
push
sbb
adc
and
(bad)
xchg
ja
dec
jns
fstp
lods
or
add
or
scas
adc
cmc
std
(bad)
daa
mul
daa
lahf
or
sub
dec
jmp
movs
sub
(bad)
lds
mov
jl
lea
and
leave
jno
add
stos
xchg
ins
int3
int
in
adc
push
or
ins
mov
jnp
(bad)
pop
mov
addr16
jb
rcl
addr16
adc
addr16
push
add
jmp
(bad)
inc
js
cmp
cmp
cmp
jge
dec
ss
jecxz
push
mov
pop
pop
mov
sbb
popf
cmps
outs
add
xchg
mov
addr16
fwait
lds
add
pop
sbb
jge
div
adc
pop
movs
xchg
jae
test
jp
gs
jg
ins
addr16
test
ins
cmp
int3
out
dec
ror
jle
and
lea
loop
outs
ins
cmps
enter
jbe
mov
or
fidiv
sbb
mov
in
jo
sub
sbb
sbb
add
mov
cmp
xor
cmp
imul
sub
loop
cmp
mov
push
popa
dec
pop
mov
rcl
std
cli
jmp
push
mov
outs
imul
cmps
jae
mov
mov
pop
pop
or
call
xchg
(bad)
stos
icebp
sub
or
arpl
or
sbb
into
not
xchg
cmp
stos
loop
mov
and
scas
mov
jns
arpl
gs
lock
sbb
outs
xchg
push
addr16
mov
hlt
nop
stos
cmp
jno
dec
test
xchg
int3
dec
mov
pop
pusha
movzx
retf
scas
push
sbb
pop
mov
jae
popf
jg
adc
jne
das
sbb
test
xor
mov
cdq
retf
cdq
dec
cmp
push
mov
push
sbb
sbb
out
adc
cmp
stc
in
mov
xchg
mov
xchg
mov
fldcw
mov
sbb
lods
push
ss
std
mov
inc
les
in
pusha
shl
sbb
js
repz
add
pop
jge
add
icebp
inc
cmps
jge
in
jno
xchg
cmc
scas
mov
jecxz
pop
pop
add
int3
and
lods
xchg
pop
mov
dec
jecxz
arpl
jge
sbb
xchg
adc
cmp
loope
icebp
mov
mov
push
add
adc
pop
jl
jecxz
lahf
mov
sub
adc
jns
bound
jno
mov
rcr
inc
push
clc
cli
lea
repnz
sbb
out
push
pushf
mov
mov
push
mov
out
ins
addr16
movs
adc
xchg
and
xchg
mov
cmps
ret
jb
xor
inc
and
jnp
add
pop
and
repz
cmps
lahf
push
pop
sbb
fstp
shl
fnstcw
ror
pop
test
outs
sbb
jne
outs
es
int3
mov
nop
nop
jmp
dec
dec
mov
popa
repnz
dec
movs
xchg
sar
sub
push
sub
or
dec
cmc
das
dec
push
mov
(bad)
(bad)
jnp
int3
sub
dec
in
dec
jmp
daa
mov
jecxz
fisubr
out
xchg
jge
dec
or
retf
and
(bad)
dec
cmc
(bad)
loop
cs
mov
mov
lock
mov
jo
cmp
adc
lock
enter
loop
lock
nop
sahf
rol
xor
das
or
xor
fdivr
pop
rol
pop
ins
pop
push
cmp
push
pop
and
or
push
inc
sub
sbb
ret
pop
add
adc
lods
icebp
sub
add
mov
and
movs
dec
mul
jne
idiv
scas
(bad)
push
jbe
jmp
xchg
push
jp
ret
cmp
movs
shl
push
pop
in
jo
call
test
add
sub
sub
xchg
cmp
(bad)
imul
sbb
ds
sbb
sar
mov
popf
std
cmp
mov
cmc
push
jnp
xor
imul
adc
std
(bad)
stos
mov
imul
int
aad
loop
mov
ror
add
jo
in
inc
cdq
(bad)
fdiv
mov
mov
dec
movs
and
(bad)
mov
cld
dec
cli
(bad)
out
push
retf
jnp
addr16
rol
scas
xchg
ficomp
pop
rcl
or
jg
jnp
out
lods
mul
ret
dec
retf
adc
jmp
sub
mov
inc
pop
jl
sbb
sbb
(bad)
cli
les
cmp
les
loopne
adc
ret
in
mov
stos
push
out
jl
fadd
mov
pop
aas
rol
sub
sbb
repz
sub
mov
sub
call
daa
mov
jb
pop
mov
test
jmp
push
xor
repnz
or
lds
xchg
das
fwait
movs
ret
add
cmp
test
dec
out
xchg
jo
mov
cwde
mov
or
mov
and
pusha
cmp
push
sbb
add
pop
mov
jecxz
xor
loope
popa
retf
push
and
lods
arpl
mov
pop
stos
add
stc
push
sub
sub
in
mov
or
inc
mov
lods
mov
or
dec
enter
push
jno
xchg
and
(bad)
add
outs
fst
xchg
inc
cmps
(bad)
(bad)
sbb
cs
sahf
mov
popf
stos
mov
jns
(bad)
ds
push
fmul
in
jb
call
xchg
push
xor
jg
mov
int3
or
imul
add
add
das
adc
in
mov
xchg
cmp
xor
sub
inc
dec
hlt
pop
dec
jbe
adc
pop
fmul
push
sub
pusha
test
sub
mov
inc
sub
jae
sub
out
sti
bound
xchg
xchg
mov
mov
mov
pop
push
(bad)
test
repnz
addr16
pop
jne
daa
lds
mov
repz
adc
sub
dec
or
test
adc
rol
cmp
(bad)
std
inc
push
repz
dec
(bad)
(bad)
rcr
and
and
mov
add
hlt
sti
dec
mov
push
mov
mov
mov
sub
pop
xor
and
mov
cdq
dec
xchg
leave
add
jo
push
inc
pushf
in
xchg
cld
ret
out
ret
inc
(bad)
repz
call
jl
fbstp
mov
and
xchg
scas
mov
pop
add
lea
lods
cmp
dec
sub
call
xchg
jno
rol
or
dec
aaa
int3
ds
mov
outs
pop
hlt
sbb
mov
cmp
jnp
push
movs
sub
sub
aas
inc
cmc
mov
push
pushf
sub
mov
aad
fidiv
push
inc
xchg
or
pop
cmp
mov
mov
mov
std
cmps
xor
sahf
int3
add
mov
cli
xlat
mov
sti
jmp
ret
aas
cmp
adc
push
stos
push
movs
xor
aam
nop
xchg
or
xor
hlt
pusha
pop
jo
sar
popa
push
fcomp
repz
push
xchg
xchg
add
stos
hlt
xchg
pop
lods
leave
mov
mov
lds
enter
inc
fist
gs
(bad)
cmp
adc
inc
pop
outs
pusha
inc
out
mov
dec
jmp
xor
loope
inc
shl
inc
xor
lods
add
push
popf
loope
in
mov
pop
or
xor
sub
and
les
out
sti
jmp
je
add
clc
popf
js
addr16
ret
addr16
call
iret
lahf
mov
add
or
test
lods
adc
icebp
hlt
fstp
and
add
stc
cmp
ret
cli
int3
scas
jge
xchg
push
je
lods
repnz
in
mov
mov
and
neg
and
call
push
pop
int3
shr
mov
and
(bad)
jns
into
inc
push
ret
cmp
sub
pop
scas
jns
jg
mov
test
pop
and
adc
ja
stc
dec
jecxz
pop
jnp
or
sub
push
push
dec
sub
mov
(bad)
ror
repz
mov
dec
mov
sbb
dec
mov
and
mov
xchg
push
test
sub
sbb
cmp
jnp
push
jmp
pop
into
adc
mov
push
retf
imul
dec
cmp
pop
(bad)
call
pop
or
jno
xor
ins
push
repz
mov
push
call
mov
adc
int3
cmp
add
push
inc
ins
pop
fimul
rol
mov
jnp
push
xor
sar
cmps
sbb
mov
bound
rcl
popa
rol
stos
popf
mov
data16
cld
mov
fild
xchg
mov
ja
mov
lds
pop
int
mov
mov
mov
ficom
aas
mov
mov
bound
leave
aas
jmp
dec
shl
(bad)
mov
int
or
retf
pop
inc
neg
fs
mov
xchg
sbb
mov
push
stc
dec
mov
mov
adc
dec
and
(bad)
push
icebp
jo
or
sar
hlt
or
mov
add
fdiv
stc
fimul
push
push
dec
cmp
outs
leave
push
inc
popf
add
add
mov
sbb
jecxz
cwde
bound
adc
mov
cwde
xchg
fwait
in
fdiv
ds
lds
inc
cmc
sub
mov
loop
cdq
pop
dec
xchg
inc
pop
out
push
sahf
repnz
mov
sub
push
bound
and
push
mov
sub
jb
mov
xor
daa
add
mov
outs
mov
adc
push
sbb
fwait
xor
or
mov
pop
or
xor
fwait
aad
icebp
inc
aas
sti
(bad)
cld
scas
fsubr
xchg
loope
(bad)
(bad)
mov
(bad)
int3
in
(bad)
lods
xor
dec
mov
outs
scas
sub
pop
jo
jae
sbb
xchg
push
adc
jno
pop
xor
add
lds
rcr
ds
or
sub
push
shr
aas
retf
push
loopne
push
retf
sbb
leave
ror
in
adc
sub
out
add
dec
cwde
std
xchg
lods
clc
mov
xchg
mov
popaw
or
cwde
fwait
sbb
arpl
adc
jno
inc
and
dec
std
jmp
pusha
mov
cli
or
fdiv
xorps
jnp
xchg
xchg
test
fld
mov
pop
movs
xchg
jmp
jne
ja
sub
call
jae
or
jle
mov
xchg
xor
(bad)
mov
jnp
icebp
movs
pop
add
int
cmps
lods
aam
add
lahf
loope
xlat
fisttp
jg
and
aaa
pop
outs
pop
inc
in
hlt
ins
test
movs
xor
lods
jl
ss
add
ins
dec
pop
scas
inc
dec
ss
lods
jecxz
xor
xchg
enter
test
cmp
push
xchg
mov
xor
test
shl
pop
xor
test
xchg
xchg
js
mov
cmps
jle
jge
dec
cmps
jae
sti
addr16
cli
or
and
(bad)
cli
jmp
dec
icebp
movs
iret
in
sysret
add
or
push
jno
sahf
jnp
pop
mov
jns
mov
imul
xor
cmp
xor
mov
push
dec
fisubr
mov
fadd
jb
and
(bad)
shl
mov
mov
je
ja
repnz
icebp
push
imul
add
stos
out
xor
ficom
sbb
jbe
pusha
int
adc
mov
adc
pusha
fsubr
pop
cdq
dec
add
lahf
push
sub
jmp
std
dec
dec
lods
push
cmp
hlt
call
in
in
mov
aaa
stc
call
push
test
or
jb
xchg
outs
lods
push
inc
mov
xchg
out
push
arpl
ret
xchg
shl
test
add
pop
mov
jnp
stc
jge
repz
(bad)
mov
ds
shl
sbb
sbb
and
hlt
(bad)
jmp
test
xchg
pop
xchg
loope
mov
and
jne
jb
add
repz
or
push
jno
cmpxchg
dec
xor
or
inc
fst
adc
adc
cli
push
mov
xchg
repz
jae
popa
(bad)
into
sub
cmp
pand
xchg
in
cmp
ss
dec
mov
int
or
clc
jmp
jne
ret
shr
push
imul
pusha
xchg
gs
inc
int3
inc
cdq
in
mov
lahf
jge
test
je
jmp
jae
inc
xchg
repnz
mov
mov
fiadd
mov
sub
inc
mov
fisub
push
out
mov
cmp
push
mov
push
fldcw
jbe
test
leave
inc
adc
mov
jb
jmp
sbb
cmp
fld
mov
push
push
int3
cld
stos
ror
push
aaa
cmp
les
in
pop
sub
repnz
mov
out
dec
mov
ja
mov
movs
pushf
push
ret
and
pusha
cwde
ror
sub
xor
mov
mov
mov
mov
dec
mov
push
std
shl
sub
dec
mov
add
arpl
dec
sbb
stos
and
adc
add
jmp
aaa
vpshlq
pop
jae
xor
adc
out
cmp
outs
pop
into
sbb
jne
xchg
cmp
out
ja
ja
fcomi
dec
pop
imul
push
loope
fsubp
movs
(bad)
hlt
cmp
(bad)
mov
xchg
rcr
sbb
adc
sub
scas
fld
out
cdq
into
and
icebp
loope
jnp
frstor
xor
push
sub
ror
xchg
xchg
mov
pop
icebp
push
and
call
mov
stos
cli
pop
fisttp
jbe
push
scas
sti
jb
call
sbb
ins
or
(bad)
cld
sbb
add
mov
int3
(bad)
mov
cli
icebp
test
inc
adc
xor
mov
aaa
mov
jnp
or
add
mov
fs
add
ret
jb
pusha
sar
(bad)
addr16
adc
inc
les
or
jne
lahf
push
call
pop
mov
stc
addr16
in
jge
ds
mov
inc
(bad)
sbb
pusha
sub
cwde
rcl
cmp
adc
test
pop
add
(bad)
mov
or
sahf
retf
neg
pop
sahf
push
or
out
jo
push
jb
cmp
xchg
cli
mov
aaa
into
(bad)
push
iret
jp
outs
test
rcr
rcl
inc
sub
add
cmp
pusha
pop
inc
test
jne
dec
and
lahf
test
adc
ja
jne
mov
mov
fnstsw
or
shl
hlt
jbe
mov
cmps
bound
out
inc
das
cmp
sbb
ret
mov
icebp
pop
sti
fldcw
lahf
jge
je
jge
jmp
push
jmp
imul
xchg
pop
or
pop
ret
mov
mov
pop
xchg
pusha
jmp
lea
imul
push
imul
hlt
jns
scas
xor
shr
mov
xor
sub
cmp
ret
sub
inc
pop
mov
cmp
repnz
or
xor
frstor
lods
mul
xchg
cwde
daa
inc
push
movs
jl
mov
hlt
adc
xchg
dec
sbb
pop
mov
cli
pop
push
inc
sub
in
aam
sbb
pop
mov
call
dec
icebp
mov
test
pop
xor
nop
mov
loop
icebp
xor
inc
daa
cli
and
push
(bad)
repz
daa
dec
mov
out
(bad)
repnz
or
cdq
add
fxam
arpl
xchg
sbb
jb
mov
in
lea
inc
sbb
xor
das
push
retf
fwait
mov
cli
scas
add
les
(bad)
in
jns
nop
shl
ja
mov
sub
das
adc
mov
sahf
push
(bad)
push
fbld
xchg
ja
pop
add
cli
pusha
cli
jae
repz
and
mov
jg
ins
jmp
iret
xchg
lahf
cs
mov
mov
mov
repz
add
xchg
jb
xchg
scas
mov
stos
jmp
repnz
or
mov
jg
sub
cld
hlt
ss
add
sbb
cmp
pop
stos
or
inc
imul
outs
mov
add
pop
dec
sub
sub
retf
fs
or
dec
mov
add
sbb
shl
xor
inc
int3
pop
(bad)
dec
aad
ret
pop
std
add
inc
xor
dec
(bad)
repnz
movs
aaa
jmp
inc
push
test
sahf
dec
aas
sbb
mov
pop
cs
or
sub
sub
fsub
mov
enter
xchg
mov
inc
inc
jb
sub
jmp
imul
shl
add
repnz
xchg
jp
jns
cmp
mov
mov
mov
cdq
out
hlt
adc
jge
xchg
sub
add
push
pop
cmp
dec
outs
lods
push
clc
push
mov
icebp
hlt
in
dec
in
in
rcl
sub
pop
mov
add
add
sub
shr
push
mov
adc
cmp
out
dec
mov
jo
jmp
jns
add
cmp
mov
popf
lds
dec
icebp
stc
inc
(bad)
lock
and
sub
add
clc
adc
ss
mov
ins
fisttp
retf
inc
add
xor
in
call
iret
stc
mov
sub
mov
mov
daa
adc
aaa
mov
into
jne
sahf
jns
out
sbb
hlt
jne
mov
pop
and
sub
jne
adc
jnp
int
adc
repz
cli
lahf
add
shr
adc
mov
dec
pop
std
sbb
add
add
les
or
add
sbb
stc
or
arpl
or
retf
push
or
inc
adc
movs
fcmovu
cmp
dec
dec
inc
inc
or
cmps
push
pop
and
fdivrp
loop
dec
jmp
sti
adc
pop
cld
add
add
pop
ret
mov
retf
mov
xor
js
mov
jmp
lods
cld
and
pop
out
arpl
test
aad
push
lds
loopne
mov
sub
dec
jns
dec
inc
lods
cmps
xchg
ja
enter
cdq
inc
push
movs
enter
push
(bad)
shl
dec
sbb
push
dec
xor
out
aad
mov
push
adc
loop
daa
jg
adc
push
sbb
sti
leave
fcomip
jmp
inc
outs
xchg
xchg
ja
jns
add
mov
es
mov
jns
sar
scas
out
sbb
inc
mov
or
(bad)
sub
aam
out
sbb
xchg
repnz
sahf
hlt
cdq
lods
mov
push
jmp
arpl
jp
data16
(bad)
or
sar
jnp
cmp
rcr
push
test
cmps
and
neg
push
cmp
adc
scas
mov
inc
jle
pusha
fidivr
push
and
jg
daa
loopne
jb
mov
mov
test
xor
in
out
mov
mov
scas
std
(bad)
xor
leave
cmp
movs
fld
xor
push
scas
loope
mov
inc
out
jmp
mov
(bad)
es
inc
mov
(bad)
bnd
mov
lods
sti
popf
lock
mov
outs
push
lods
(bad)
mov
dec
aaa
jl
sbb
adc
or
cmps
mov
aaa
and
mov
ja
push
jnp
stc
lahf
rcl
sbb
imul
outs
loope
add
xchg
push
sub
fimul
mov
cdq
or
shl
cli
and
sub
mov
cmps
adc
loopne
sub
(bad)
mul
pusha
nop
adc
ret
mov
or
repnz
int3
std
jecxz
or
cld
add
xor
adc
xchg
inc
into
fidivr
(bad)
popf
add
cmc
imul
jo
int
jnp
jnp
xor
inc
mov
test
xchg
test
and
cmp
add
xor
mov
xor
shr
sbb
test
lods
jno
jmp
outs
popf
cmp
scas
jge
inc
(bad)
repz
push
les
push
in
ret
xor
movs
dec
adc
outs
lock
or
sbb
fisub
mov
clc
retf
shr
cmc
sub
xor
jb
and
test
xlat
mov
ins
push
mov
enter
int3
(bad)
mov
and
jmp
adc
xchg
ficom
jae
enter
jecxz
jmp
jg
or
sub
mov
jmp
mov
jo
ins
sub
or
push
pop
popf
xor
js
loopne
cmp
(bad)
xchg
pop
and
outs
clc
sbb
stos
mov
cmps
and
call
stos
adc
pushf
pop
inc
sbb
push
aaa
out
fptan
fwait
sahf
fld
loopne
inc
(bad)
push
sbb
mov
xor
lahf
mov
retf
cmps
xor
int
sub
add
pop
jnp
lock
mov
or
clc
adc
aas
dec
jns
mov
jnp
jmp
inc
push
icebp
sahf
sbb
outs
cmps
or
sub
or
lods
push
shl
cmc
call
out
shr
in
ds
cld
xor
mov
cdq
sbb
or
scas
inc
jne
adc
add
cwde
add
imul
xchg
mov
aam
push
loope
sub
fld
sbb
jmp
sub
add
loope
lea
leave
push
call
stc
jl
pusha
sbb
adc
adc
js
je
sub
popf
pop
xor
das
mov
fidivr
or
adc
sbb
xlat
repz
mov
js
adc
add
push
sbb
pushf
cmp
mov
mov
imul
repz
push
push
iret
bnd
xor
fcom
nop
sub
call
addr16
out
adc
add
(bad)
jmp
jle
loope
icebp
popa
fucom
mov
pop
nop
sbb
xor
out
or
pushf
fyl2xp1
gs
jno
cmps
jle
pop
rcl
fwait
adc
scas
data16
or
iret
(bad)
into
lahf
(bad)
xor
add
out
push
bound
out
cli
les
jge
and
mov
sbb
mov
addr16
repz
hlt
clc
inc
jmp
(bad)
push
mov
xchg
mov
add
frstor
pop
sahf
movs
outs
daa
push
jno
dec
lds
adc
stc
or
mov
xchg
jp
(bad)
popa
push
cwde
jmp
jg
lods
jno
jmp
pusha
aaa
scas
out
aad
and
fistp
sub
(bad)
cmps
cmps
jnp
fsqrt
jecxz
lods
jns
ins
stos
adc
icebp
mov
pop
and
sbb
jmp
jno
std
add
mov
xor
out
(bad)
cmps
dec
push
gs
add
inc
jbe
scas
and
mov
test
ret
sti
out
inc
lahf
jp
ret
(bad)
aam
xchg
pop
mov
aas
cmp
stos
loope
cmp
loope
xchg
out
adc
lods
and
pusha
das
enter
add
push
sbb
mov
stos
mov
mov
dec
out
jb
xchg
scas
mov
iret
les
cwde
outs
cmp
ret
cmc
cli
push
adc
pop
jne
xor
lea
mov
jle
test
popf
mov
mov
push
pop
xlat
retf
add
jo
xor
lea
sbb
cdq
inc
pop
fdiv
cmp
mov
adc
sbb
ja
cmc
sbb
mov
mov
pop
repz
imul
out
aaa
jmp
out
cld
cli
push
lds
int
scas
loop
sti
xor
xchg
movs
or
pop
mov
sar
dec
sahf
adc
mov
cmps
enter
imul
xor
cdq
mov
jecxz
rcl
push
xor
loop
jnp
in
mov
test
mov
outs
cmps
push
xor
gs
jp
dec
cmc
add
jno
movs
out
or
add
leave
mov
sti
clc
pop
lea
and
xchg
dec
cmp
ret
ret
xchg
ins
repz
mov
clc
clc
ret
dec
fild
loope
add
or
int3
add
adc
push
cwde
out
inc
xchg
nop
jle
xor
test
punpckhbw
and
cmps
add
mov
push
adc
xchg
xchg
jae
repnz
pop
lods
push
cmc
jns
or
icebp
fs
cmps
add
fisub
clc
or
retf
cmp
push
mov
or
call
jmp
addr16
lods
push
shr
std
(bad)
pop
mov
pop
add
arpl
dec
dec
sbb
push
push
or
lods
adc
test
pop
gs
sub
and
jae
xchg
test
adc
sub
sbb
xchg
iret
push
dec
scas
and
ds
xchg
add
je
adc
pusha
cmp
in
std
cdq
and
inc
ins
push
rcr
shr
mov
mov
inc
xor
fiadd
pop
sbb
and
add
retf
jo
sbb
mov
cmp
in
push
push
scas
fwait
stos
pop
jae
sbb
loop
sub
jecxz
fnstenv
add
add
xchg
and
mov
sub
xor
jne
shl
mov
repnz
pop
xor
push
sbb
(bad)
jp
pop
dec
rol
cmp
sub
mov
pop
xchg
sub
sahf
xor
mov
jp
(bad)
ret
imul
mov
pushf
cmp
fs
loop
pop
int
sti
fneni(8087
or
or
inc
cmp
cmc
and
jmp
lahf
jo
xchg
dec
loop
sbb
jmp
inc
stos
jne
or
loopne
dec
adc
push
pop
pop
stos
xchg
jnp
jle
mov
push
scas
mov
push
mov
jae
je
scas
mov
(bad)
or
aaa
dec
das
out
ins
shr
jecxz
fild
stos
arpl
hlt
xchg
(bad)
scas
out
(bad)
ror
fstp
mov
xchg
pop
imul
pop
pop
sbb
adc
mov
nop
push
push
jp
pop
bnd
sbb
repz
adc
rcr
mov
cmp
dec
aad
pushf
mov
jns
mov
mov
in
xor
test
inc
adc
and
stc
or
sbb
jbe
in
aam
jnp
mov
sti
sbb
sub
pop
lock
loope
push
in
xchg
dec
push
sbb
retf
sub
enter
mov
xor
pushf
mov
sti
sub
jmp
pop
jmp
mov
in
call
dec
(bad)
adc
adc
retf
push
mov
cdq
mov
adc
in
sbb
call
push
cli
mov
dec
(bad)
xchg
cli
and
lahf
xor
retf
pop
dec
sub
(bad)
and
push
scas
enter
lahf
jbe
cmp
hlt
push
inc
popf
adc
in
loope
jge
xchg
sbb
mov
cmp
idiv
push
xchg
leave
stc
js
popa
push
sub
stos
adc
out
outs
aaa
ret
(bad)
push
das
ds
loop
fidivr
cmps
mov
jp
cmp
dec
mov
and
xchg
aam
sub
xchg
sbb
shl
adc
data16
fs
xor
push
adc
cmp
push
jbe
cmp
in
std
pop
fstp
add
mov
xor
push
lods
sahf
pop
jb
test
cwde
call
push
pop
call
outs
or
jo
cmp
lods
mov
mov
lahf
cmp
cmps
rcr
sub
lods
or
inc
mov
scas
dec
add
mov
les
bound
ja
xchg
sub
shl
push
push
jg
push
xchg
ds
pop
(bad)
xchg
and
and
out
or
sbb
jno
outs
cld
into
mov
cmps
es
inc
mov
in
(bad)
frstor
and
fwait
sub
fcom
in
cmp
or
and
or
(bad)
inc
mov
rcr
pop
xchg
cmp
aaa
sti
es
(bad)
pop
in
push
or
mov
cmc
jmp
add
ss
dec
mov
shl
push
int3
or
xchg
pop
stc
cdq
or
gs
fild
movs
iret
fcmovne
pop
mov
ret
mov
xchg
ror
sub
mov
fbld
push
fwait
cmp
pusha
clc
xchg
adc
into
gs
div
cmp
pop
push
ret
imul
and
adc
imul
loope
push
mov
out
in
adc
jge
add
dec
add
out
dec
loop
aaa
xor
mov
ins
cmps
out
or
pop
dec
add
lahf
inc
push
sbb
mov
stos
add
nop
mov
mov
mov
imul
sub
mov
push
xchg
adc
cmc
or
xchg
add
rcl
cmp
fucomip
in
and
cs
adc
in
popa
(bad)
mov
sar
out
add
and
mov
iret
test
adc
mov
test
mov
stc
cmp
sbb
mov
ins
sar
jne
adc
push
cmp
lds
dec
jnp
mov
pop
test
lods
jb
xchg
or
lea
hlt
and
mov
inc
push
push
icebp
daa
test
mov
rcr
add
xchg
in
adc
xchg
add
and
scas
xchg
fs
jg
and
adc
pop
add
lods
retf
mov
mov
loope
ja
push
pop
dec
mov
sub
mov
and
and
jle
inc
sbb
fistp
sub
(bad)
je
push
arpl
outs
sbb
sti
out
repnz
cmc
mov
movs
mov
inc
push
stos
outs
and
gs
rol
stc
popf
dec
mov
leave
movs
xchg
mov
or
sbb
popf
dec
pop
xchg
sub
sahf
and
hlt
test
stos
call
lods
cdq
mov
outs
xor
(bad)
mov
punpckhwd
out
cmp
movs
inc
imul
jns
inc
sbb
std
adc
mov
movs
ins
mov
xchg
outs
sub
outs
dec
mov
mov
rol
(bad)
jg
ret
movs
out
(bad)
ffreep
push
neg
aad
cld
push
scas
(bad)
fdivr
sti
test
cmp
fidiv
repz
(bad)
jge
sub
xlat
(bad)
dec
push
push
enter
pushf
sub
scas
cmp
pop
adc
push
jge
cmc
xor
out
sbb
or
sub
sbb
mov
in
or
rcr
hlt
xchg
dec
jno
pop
xor
int3
pusha
sahf
loope
aas
jl
sub
imul
dec
sbb
cwde
sar
(bad)
out
gs
mov
xor
out
mov
test
out
pop
jnp
gs
cmp
cmp
arpl
nop
movs
ss
jmp
mov
in
jmp
call
sbb
sub
psubusw
sbb
add
cmc
mov
adc
sbb
mov
ss
pusha
sub
iret
dec
xor
or
sar
and
push
rol
and
adc
movs
nop
(bad)
ja
stc
xor
adc
mov
fucom
mov
xchg
adc
stc
adc
push
data16
push
rcl
rcl
inc
(bad)
arpl
xchg
fneni(8087
fistp
pop
adc
pop
mov
xor
cmp
int
xor
aam
pop
sub
nop
imul
add
lock
mov
sub
dec
gs
fiadd
mov
sub
mov
sub
or
(bad)
xor
aam
repnz
add
push
xchg
test
(bad)
cmps
in
sub
jmp
nop
movs
loop
icebp
pushf
add
lahf
call
sti
stc
cs
imul
in
mov
loope
push
scas
mov
mov
fnstenv
lods
(bad)
and
outs
xor
rcl
fldcw
imul
pop
ret
lock
cmp
adc
addr16
add
rcl
(bad)
jmp
test
and
dec
arpl
rcl
test
mul
fisub
imul
mov
push
jle
sub
and
data16
dec
sbb
lahf
retf
pusha
add
xchg
lea
sbb
and
and
ins
pop
and
jae
pusha
sub
mov
mov
(bad)
cmps
mov
push
add
xor
cmp
xchg
les
push
pop
sub
int3
lea
sub
and
xchg
sbb
jle
mov
jb
mov
xor
in
dec
jbe
jo
sub
out
add
sub
aam
rcr
jmp
stos
xor
in
jo
(bad)
cwde
or
xchg
cmp
ds
je
mov
pop
into
add
dec
(bad)
jno
arpl
push
add
mov
repz
inc
cs
std
stos
mov
dec
adc
jb
in
push
ins
xor
stos
mov
(bad)
xor
and
inc
(bad)
jmp
sahf
push
cs
neg
sbb
cmps
daa
lock
inc
pushf
call
mov
call
mov
mov
dec
out
iret
jns
push
pop
lahf
enter
mov
test
pushf
imul
icebp
fstp
push
popa
inc
and
data16
sbb
adc
iret
leave
add
cmp
jecxz
int3
adc
inc
inc
sub
mov
jl
mov
and
sub
shr
dec
out
bound
into
push
dec
add
(bad)
cmps
pusha
push
cmps
lds
pop
cmp
mov
sub
cdq
sahf
and
push
xor
jae
dec
mov
dec
call
fsubr
into
rcl
cwde
ds
clc
je
cmp
jle
ja
xchg
sti
les
push
(bad)
cs
test
sbb
dec
leave
retf
cmp
jne
xor
jo
ret
cmp
mov
js
add
mov
push
aas
sub
pop
push
je
int
out
and
dec
sbb
inc
cmps
cld
and
or
adc
push
xchg
or
outs
pop
imul
in
sub
inc
ins
shl
sub
mov
add
or
or
push
xor
out
(bad)
loop
xlat
cli
arpl
fsub
sub
dec
or
fld
sub
mov
jae
push
mov
dec
push
lods
imul
arpl
inc
test
enter
and
(bad)
outs
imul
sub
jbe
push
cmp
lods
inc
xchg
into
fsubr
sbb
fwait
test
mov
push
and
jno
push
add
ret
mov
inc
sar
mov
dec
and
dec
lods
mov
mov
retf
or
mov
scas
inc
inc
mov
push
inc
popf
inc
pop
add
test
daa
std
pop
sbb
inc
ret
dec
mov
outs
add
add
push
add
inc
or
pushw
aam
cwde
cmp
fild
cmp
push
jl
idiv
rol
push
mov
ss
imul
adc
sbb
into
pop
(bad)
aaa
adc
popf
aad
inc
lock
push
cmps
pushf
jb
sbb
call
test
fnstcw
xor
mov
scas
mov
inc
pop
sub
or
and
push
pop
imul
rol
popa
jae
mov
jl
ss
inc
vmwrite
jmp
(bad)
sti
loopne
test
xchg
nop
js
gs
and
das
push
shl
retf
xchg
sub
ins
cmps
or
popa
cmp
jbe
lods
mov
(bad)
dec
mov
movs
cmc
fwait
pop
mov
ror
and
cs
xor
cli
sbb
out
mov
add
into
leave
fst
mov
cmp
ss
inc
nop
fwait
adc
cmps
xchg
out
in
imul
inc
sbb
jl
pop
stos
jl
stos
enter
into
loopne
xor
cs
out
iret
add
rcl
or
add
test
jle
mov
pop
or
rcr
loop
pop
and
pop
adc
cmps
sbb
aaa
ficomp
test
(bad)
sub
in
jne
retf
fwait
and
xor
fistp
pop
mov
sub
clc
in
loope
int3
or
sbb
dec
mov
stos
xchg
cmp
cmp
ret
cs
push
loop
in
pushf
cmp
in
cmc
aam
mov
mov
add
call
push
popa
mov
or
shl
rcr
push
test
push
sub
xchg
rol
cld
rcl
dec
dec
test
into
xor
fild
jns
xor
cdq
jg
sub
pop
loope
or
popa
add
mov
jnp
xchg
jmp
mov
adc
mov
daa
jl
clc
jo
adc
pop
xor
outs
pop
je
add
shl
push
ins
fdivr
xor
cmp
pop
ins
xor
fmul
in
push
mov
mov
jmp
push
xor
jl
fnstenv
test
mov
push
aaa
jo
not
pop
(bad)
ja
pop
push
mov
in
push
and
mov
cld
adc
je
push
add
add
pushf
test
repz
imul
pop
mov
ins
test
leave
jmp
dec
test
fwait
push
pop
sbb
in
push
aad
sub
dec
or
push
fucomp
cmp
add
cmp
xchg
gs
sti
clc
dec
dec
out
mul
call
jmp
and
jmp
xor
sub
outs
mov
(bad)
mov
add
xor
bound
push
lods
dec
xor
pushf
in
adc
fld
loope
fiadd
xor
loopne
lds
jl
in
jno
div
pop
jb
rcr
and
jl
inc
(bad)
loop
xor
sub
aas
lea
sub
push
popa
add
repnz
fwait
adc
outs
ficomp
jl
pop
mov
and
push
xchg
sahf
jl
popa
test
or
pop
fimul
fxtract
mov
pop
stc
push
pusha
cmp
retf
pop
cmp
push
xchg
(bad)
and
and
or
arpl
lahf
jb
call
dec
movs
mov
lea
sub
clc
push
or
mov
lahf
outs
pop
mov
sar
push
fsubr
push
mov
xchg
dec
js
test
jge
add
rcr
xchg
lds
mov
mov
sbb
leave
cmps
das
outs
(bad)
hlt
xor
mov
add
cmp
pop
leave
jl
test
jb
dec
inc
sub
jbe
fistp
push
inc
xor
shld
outs
nop
pop
jmp
shr
mov
xor
mov
add
dec
jp
adc
fwait
mov
xchg
ret
daa
sti
dec
dec
mov
mov
mov
dec
mov
add
inc
hlt
push
js
popa
jle
dec
(bad)
xchg
iret
xchg
imul
sbb
or
pop
mov
push
out
cmp
mov
call
sub
pop
in
out
pop
xchg
adc
stc
cmps
inc
movs
xor
ins
mov
lahf
popf
sbb
fcom
pusha
sbb
mov
cmp
into
pop
mov
adc
adc
push
jbe
jbe
shl
jp
mov
xchg
cmp
ja
rol
mov
out
in
sub
adc
popf
je
(bad)
mov
cli
retf
call
icebp
mov
sbb
and
xor
push
imul
xchg
jecxz
inc
cwde
adc
add
xchg
inc
loop
out
test
cmp
pop
sbb
inc
adc
add
test
mov
cmp
je
dec
ins
idiv
push
push
cmps
call
loopne
adc
cmp
shl
jmp
scas
xchg
inc
movs
mov
mov
or
add
and
xchg
mov
(bad)
ror
adc
sub
shl
sbb
inc
imul
sub
movs
xor
mov
pop
pusha
add
jge
add
out
sub
inc
sbb
add
mov
cmp
pop
cmp
ins
(bad)
push
mov
mov
in
inc
data16
or
das
fcomp
or
push
cmps
adc
jg
mov
ret
xor
xchg
and
std
push
(bad)
cmp
(bad)
sbb
inc
pushf
inc
lods
and
jae
sahf
jns
dec
imul
out
or
aas
mov
jne
out
popf
retf
push
leave
shl
loope
mov
dec
repnz
popf
push
popw
jg
fwait
out
test
sub
mov
hlt
popa
test
not
mov
dec
addr16
out
stos
(bad)
sti
mov
jp
mov
mov
jmp
cmp
loop
push
xor
pop
jnp
call
push
xor
cmp
(bad)
mov
add
fwait
or
adc
aaa
popf
jo
je
and
mov
aam
(bad)
mov
and
jne
inc
sti
imul
push
mov
inc
mov
test
cdq
cmp
int3
cdq
add
xchg
dec
xor
leave
shl
mov
mov
shr
rcr
(bad)
mov
daa
loop
and
mov
dec
sbb
(bad)
pop
dec
in
(bad)
cmc
cmc
out
cmp
dec
inc
nop
or
mov
or
stos
ror
push
xchg
aad
enter
jle
(bad)
mul
mov
int3
adc
ss
adc
outs
inc
xor
push
pop
push
mov
xchg
mov
(bad)
push
ret
movs
push
das
adc
repz
cs
add
and
inc
pop
je
(bad)
mov
push
mov
jnp
ins
aad
mov
ins
xor
sub
push
push
out
shr
mov
cmp
out
or
mov
add
cmp
shr
mov
mov
(bad)
and
pushf
(bad)
xchg
dec
pop
cmps
call
cs
xchg
mov
sub
(bad)
xlat
pushf
leave
clc
lods
lods
or
fndisi(8087
sub
or
pop
rcl
ds
(bad)
in
pop
enter
stos
iret
push
fidivr
cwde
into
into
sbb
mov
xlat
or
out
jle
xor
dec
cmp
mov
adc
ins
jl
mov
or
fbld
lods
sbb
or
loope
loope
and
fs
js
movs
push
cmp
(bad)
in
sub
xchg
mov
mov
stos
mov
mov
mul
outs
stc
xor
or
mov
lods
aaa
sub
xchg
cwde
test
sahf
pop
or
in
pop
and
pop
pop
pop
xchg
mov
sbb
xchg
cmps
jb
outs
test
popa
and
lahf
mov
sub
cmps
pop
pop
fnsave
xchg
or
jl
and
pop
mov
push
xchg
cmps
out
fwait
in
jb
outs
lea
jmp
push
xor
in
imul
ret
sub
mov
adc
mov
ss
or
sub
mov
or
mov
inc
in
mov
pop
xor
or
mov
adc
loopne
sbb
popf
cli
aas
cwde
or
mov
jns
pop
loopne
pop
xchg
repnz
addr16
add
xor
push
xor
int3
push
sbb
jns
jp
bound
cwde
or
add
les
mul
jmp
push
xchg
lds
jp
cmp
jo
in
call
and
leavew
lock
mov
hlt
inc
or
in
xchg
push
jle
test
pop
and
jecxz
mov
or
jne
icebp
push
jmp
mov
jecxz
cdq
popf
push
into
cmp
and
fsub
or
scas
out
clc
add
les
xchg
cmp
add
sub
pusha
inc
pop
mov
dec
inc
mov
mov
in
in
pop
daa
inc
ret
mov
xor
sub
inc
arpl
test
shl
retf
jmp
adc
xchg
cmp
stos
icebp
push
jnp
jno
push
arpl
sbb
call
dec
gs
(bad)
cmp
add
jecxz
ret
push
cmc
ss
mov
lods
mov
add
xchg
push
mov
enter
pop
cmp
pop
pop
and
out
test
rol
(bad)
shl
adc
mov
(bad)
fbstp
jbe
xchg
(bad)
leave
ss
mov
test
push
ret
aaa
mul
call
sbb
adc
jmp
ret
fstp
cmps
(bad)
loopne
adc
inc
jbe
add
cmps
jge
ins
and
push
out
shl
bound
imul
mov
ror
or
sbb
sbb
lea
push
push
mov
lock
or
mov
aas
or
and
mov
add
jmp
cwde
stos
sub
inc
or
mov
fcomp
not
nop
cld
mov
pop
loopne
mov
test
jle
sub
and
sbb
jb
or
dec
cmp
cmp
xlat
dec
push
add
add
mov
fdiv
mov
pop
push
rcr
mov
cmc
and
ret
not
scas
xchg
jl
ret
mov
cmp
xchg
adc
fimul
jle
shl
jl
fimul
adc
stos
push
scas
das
clc
jmp
inc
inc
cdq
(bad)
mov
test
xchg
test
xor
and
retf
pop
dec
fisttp
mov
sub
xchg
mov
out
xor
pop
xor
sbb
mov
mov
lods
std
scas
jmp
int
add
jo
mov
cdq
in
lea
fs
pop
inc
cmp
sub
xchg
data16
adc
push
pop
fnstsw
dec
inc
jge
jg
mov
fsub
cmp
stc
mov
in
xchg
jp
pop
inc
icebp
iret
inc
mov
clc
jmp
and
js
icebp
xor
aas
push
add
in
mov
inc
push
cli
pop
push
push
add
hlt
cld
or
pop
mov
jmp
mov
cmps
clc
and
inc
jecxz
std
shr
mov
enter
nop
sbb
or
fidivr
loope
and
cld
neg
lea
mov
cmp
push
pusha
cmp
fwait
dec
pop
shr
inc
adc
cmps
push
and
mov
(bad)
sti
sub
adc
dec
lahf
jae
imul
xchg
pop
or
push
pop
jns
retf
nop
pop
pusha
outs
pop
call
ins
push
in
jo
xchg
mov
out
daa
(bad)
out
in
cmc
retf
dec
pop
mov
popf
repz
and
or
xlat
mov
sub
cmp
xchg
(bad)
push
xor
mov
mov
repz
in
dec
jns
ror
les
mov
jp
std
or
test
out
popf
repnz
mov
pop
jge
ja
xor
pusha
mov
inc
int
sahf
or
mov
in
push
daa
loop
mov
mov
shl
lahf
cmc
ins
dec
adc
test
cmc
fld
mov
cmp
add
xchg
and
stc
sbb
loopne
lods
int
les
ror
ret
cli
jo
movs
f2xm1
mov
xchg
sub
popf
out
add
into
push
rol
enter
xchg
ror
stos
ror
inc
out
cmc
add
stos
repnz
clc
out
ss
cmp
enter
jmp
dec
xor
inc
je
pop
add
(bad)
call
leave
xchg
outs
dec
sar
inc
cmp
int
push
(bad)
fcmove
jmp
dec
push
or
push
add
ins
out
or
cmp
loopne
mov
jge
sar
mov
movs
pop
mov
bound
cmp
pop
xchg
cmp
mov
stc
outs
ins
push
push
sbb
adc
xor
cmc
rol
iret
loope
lock
xlat
inc
push
repz
out
xchg
dec
mov
push
cs
mov
iret
cs
fadd
adc
(bad)
repnz
pop
cmp
into
cmp
js
add
ret
call
nop
cmp
lock
pcmpgtb
in
push
fst
and
mov
lea
inc
mov
cmp
push
les
(bad)
or
or
clc
push
imul
pmuludq
mov
out
xor
mov
xor
imul
mov
push
sub
mov
mov
jbe
das
push
mov
cs
daa
fs
adc
(bad)
mov
adc
jno
jecxz
retf
(bad)
(bad)
ficomp
fist
xchg
out
push
xchg
pop
cmp
push
or
sbb
cli
pop
dec
ins
inc
cld
xor
loopne
push
mov
push
scas
stc
inc
mov
fisttp
dec
sahf
or
ins
test
or
push
cmp
cs
out
add
xchg
daa
sub
or
adc
test
sub
push
rcl
sub
xchg
clc
test
cmp
mov
sub
mov
sbb
push
push
clc
icebp
mov
ins
push
dec
test
or
mov
aam
jg
and
test
pop
push
cli
pop
inc
out
xchg
push
inc
mov
push
pop
and
jo
sbb
pop
and
fnsave
jne
mov
jne
sbb
inc
and
das
dec
fidivr
jne
cmp
add
dec
mov
push
cmp
(bad)
std
adc
jno
scas
jae
lds
or
retf
mov
addr16
xor
adc
into
sbb
push
inc
mov
and
dec
es
jmp
adc
push
push
sub
mov
jns
pop
jge
inc
pop
rcl
xchg
pop
shl
jmp
loop
xchg
movd
jmp
and
mov
sub
adc
cmp
stc
cmp
ret
pop
repnz
scas
cwde
xchg
imul
scas
leave
push
cmp
(bad)
out
cmp
fs
cli
ins
cmps
lock
push
out
sahf
mov
sbb
or
push
and
adc
aad
lods
add
data16
adc
mov
jecxz
push
jb
push
or
pusha
loope
movs
push
mov
dec
jbe
or
imul
pop
cld
sub
sbb
add
xor
cmp
cs
fnstsw
outs
push
(bad)
(bad)
pop
ret
arpl
adc
xchg
pushf
mov
aaa
push
test
mov
mov
xchg
test
je
ret
sub
(bad)
popa
movs
jl
dec
(bad)
dec
loop
dec
loopne
pop
imul
loop
in
pop
jp
fdivp
mov
xchg
mov
xchg
scas
jmp
push
add
ret
and
sbb
sbb
xchg
cmp
idiv
pop
mov
push
popf
in
mov
mov
pop
push
cmp
ds
fist
mov
fisttp
add
ret
xchg
pop
test
xchg
sbb
lahf
cmps
stos
dec
mov
or
pop
daa
mov
imul
jno
mov
sahf
add
add
fcomp
cmc
inc
aam
mov
xor
enter
push
sar
sbb
(bad)
std
mov
imul
cmp
in
push
in
stos
add
mov
mov
dec
pop
push
outs
mov
sbb
in
cmps
and
fdivr
jbe
cmp
(bad)
push
nop
shl
or
xadd
or
sar
inc
in
loop
jae
inc
jge
adc
pop
add
lock
das
ror
inc
ret
outs
js
test
mov
iret
or
imul
sub
pop
mov
loopne
push
into
inc
xchg
(bad)
fsub
cmp
sti
push
fdiv
out
mov
sub
mov
cmps
push
and
jnp
movs
popf
mov
lahf
mov
cmp
pop
sti
mov
xor
(bad)
mov
iret
ins
stc
mov
xor
fwait
cmpxchg
and
repz
gs
xor
xchg
and
add
addr16
add
xor
ins
sahf
je
into
dec
lods
repnz
push
and
and
inc
push
addr16
movs
xchg
and
ror
adc
into
xor
mov
pop
xor
(bad)
push
clc
mov
mov
push
push
mov
mov
(bad)
mov
sub
in
fs
cwde
mov
movs
sar
imul
imul
jmp
mov
mov
dec
dec
hlt
sbb
cmp
adc
stc
mov
clc
inc
sbb
aas
outs
cmps
push
pop
cmps
(bad)
cmp
(bad)
icebp
mov
add
in
or
aad
shl
arpl
cmp
jne
ds
xor
fild
xlat
push
arpl
dec
push
(bad)
clc
movs
movups
jbe
dec
lahf
scas
sbb
scas
jb
aad
jne
and
jmp
or
pop
inc
mov
mov
mov
inc
sbb
adc
(bad)
jae
addr16
dec
mov
dec
mov
mov
lock
push
lea
sub
cdq
in
int3
not
dec
xlat
sar
addr16
mov
push
je
lods
push
cmc
add
cs
sub
adc
sti
mov
mov
pusha
int3
sub
jmp
aad
pop
pop
xchg
mov
ror
loopne
push
inc
loop
sub
test
or
xor
sti
xchg
push
mov
rcr
jl
mov
mov
xchg
mov
je
adc
inc
call
daa
xchg
jb
mov
popa
sub
push
add
jb
mov
adc
mov
xor
fld
lahf
cs
scas
xchg
je
cmc
push
(bad)
ret
mov
cmp
fs
pop
ffree
cmc
aas
dec
rcl
xlat
inc
mov
aad
push
sub
cmp
pop
scas
push
mov
cmp
and
mov
imul
pop
sahf
out
aam
ficom
cdq
fwait
xchg
ja
test
xor
cmp
push
add
cmp
sub
(bad)
xlat
test
dec
inc
sbb
je
mov
jae
int
jo
add
or
jo
bound
retf
add
xchg
xchg
and
loopne
fldenv
enter
test
xchg
xchg
adc
(bad)
jecxz
sub
jge
idiv
mov
sub
sahf
fs
or
(bad)
mov
add
outs
je
mov
ror
retf
pop
mov
lahf
cli
xchg
sbb
fisttp
iret
(bad)
popa
push
mov
cwde
jnp
stos
nop
cwde
add
or
test
jecxz
pushf
dec
mov
mov
sub
les
mov
aaa
and
jmp
adc
xor
mov
or
add
outs
sub
pushf
sub
shl
std
je
in
mov
in
sub
ins
ret
fadd
xor
imul
aaa
scas
cmp
movs
pop
pop
adc
outs
mov
push
fsubr
or
sbb
daa
(bad)
mov
pop
std
jne
mov
push
pop
push
repnz
xchg
push
es
and
ret
cld
and
jmp
xchg
int
add
test
(bad)
mov
(bad)
test
ja
or
mov
add
ret
sub
cmp
pushf
mov
dec
mov
and
cmp
sub
ret
je
test
lahf
std
cmp
outs
addr16
sub
fadd
push
cli
xor
mov
rcl
repz
mov
adc
xor
cmc
cld
push
fiadd
inc
xchg
fs
jecxz
sub
js
push
xchg
iret
scas
push
(bad)
inc
popf
js
mov
(bad)
test
pushw
int3
jns
mov
ins
jnp
sbb
push
cmp
and
pop
aad
sub
repnz
push
push
fstp
fdivr
pop
(bad)
mov
imul
and
pop
xchg
in
xor
cmp
ss
push
sbb
jecxz
fwait
sti
fsubr
xor
sub
dec
adc
into
pop
cdq
gs
popf
cmc
shr
pop
sbb
mov
icebp
push
sub
xchg
clc
xchg
(bad)
mov
mov
mov
aad
inc
fisub
(bad)
push
pop
dec
lods
fnstsw
enter
cmp
adc
imul
cmp
(bad)
ret
cdq
jp
sti
sub
xlat
pushf
jb
int3
push
pop
aaa
fwait
enter
sub
adc
xchg
imul
test
push
ins
jmp
adc
mov
ja
and
imul
test
inc
jmp
jecxz
scas
mov
jno
pop
or
test
adc
mov
push
pop
ret
test
repnz
test
xor
sub
retf
xchg
stos
(bad)
loop
cmp
xor
push
mov
nop
dec
out
pop
dec
out
icebp
sub
add
mov
inc
in
popa
or
push
xchg
(bad)
fcom
jge
cmp
rcl
mov
rol
sub
leave
ds
mov
fimul
lds
pop
jno
pop
jp
dec
mov
je
cli
je
jge
ds
pusha
loopne
jmp
not
(bad)
out
jae
xor
adc
call
cmp
inc
cmp
mov
jae
mov
adc
(bad)
gs
aaa
mov
mov
xor
rol
xchg
sbb
hlt
jns
into
int3
adc
cmp
sbb
mov
or
xchg
xor
loope
push
stos
xchg
ss
mov
(bad)
cli
push
mov
retf
out
gs
and
ror
test
mov
in
jle
sub
in
shl
jo
mov
xor
shr
sbb
imul
aam
retf
outs
xlat
jno
xchg
dec
sub
push
mov
sub
pop
mov
inc
(bad)
stc
ins
(bad)
add
pop
pop
sahf
push
mov
fiadd
dec
jbe
cmp
inc
inc
ret
ret
dec
popa
in
cmp
ins
inc
xchg
mov
imul
outs
pop
dec
fist
aas
jo
stc
cmp
add
xor
cs
retf
pusha
sbb
inc
dec
xchg
add
mov
sub
mov
cmp
mov
mov
inc
cmps
popf
and
add
dec
fcomp
inc
mov
loop
sbb
cwde
lock
mov
add
jae
xchg
xor
or
inc
dec
in
cmpxchg
es
dec
fidiv
in
mov
sahf
jae
imul
sbb
leave
js
arpl
fwait
cmc
cmp
add
jo
push
xor
jae
(bad)
jp
test
inc
push
in
sub
(bad)
mov
cli
push
jae
jmp
push
or
push
loope
xchg
sbb
push
push
cmps
aad
std
call
test
pop
ffree
sub
out
jno
push
pop
lods
(bad)
mov
test
pop
daa
xlat
sub
stos
aas
fwait
jmp
test
mov
dec
xchg
push
push
add
fsub
push
rep
fadd
jl
lds
repnz
push
div
xchg
(bad)
mov
arpl
mov
addr16
cmp
in
add
outs
neg
mov
movs
mov
dec
mov
lock
push
add
cli
jne
mov
mov
fadd
and
out
mov
fidiv
imul
call
iret
xchg
fld
sub
imul
outs
inc
mov
ja
das
push
inc
nop
mul
dec
pop
mov
scas
lods
sahf
ja
scas
mov
inc
jg
push
lock
push
addr16
iret
aaa
dec
inc
(bad)
jae
stos
pop
or
das
inc
lahf
or
shl
mov
dec
cmps
mov
push
mov
jg
test
retf
arpl
fwait
mov
adc
hlt
xchg
test
mov
fwait
push
ror
sub
lahf
add
shl
add
cmp
mov
call
pop
stos
mov
ror
jecxz
cmp
adc
aaa
cmp
mov
call
enter
and
and
push
aaa
or
cmp
popa
cmps
dec
sub
pop
outs
scas
xor
outs
inc
std
cdq
xchg
loop
cmp
sub
sub
lea
retf
mov
mov
jmp
in
mov
pusha
fcmove
mov
pop
loop
jnp
ret
stos
pushf
cli
ins
fwait
out
data16
retf
into
fld
adc
cmps
and
iret
test
inc
fldl2t
jns
inc
hlt
int3
stc
cmp
lods
lods
mov
xchg
add
pop
dec
mov
pop
add
dec
ja
es
xchg
aaa
mov
jne
lahf
loopne
gs
xor
imul
(bad)
test
ret
imul
push
aaa
(bad)
push
enter
stos
inc
xor
sar
push
icebp
inc
pop
ss
rcr
in
outs
mov
out
push
adc
pusha
icebp
aam
cs
call
cmc
mov
dec
push
ffreep
adc
out
pusha
sbb
pop
jp
mov
mov
icebp
jmp
xor
into
mov
je
inc
sub
jnp
jmp
jl
neg
aas
test
pushf
and
imul
mov
sbb
fs
jbe
mov
push
dec
in
xor
sbb
in
sub
add
sahf
mov
pop
fld
and
cmp
fnstsw
dec
leave
dec
int
imul
gs
test
into
(bad)
ds
ds
inc
adc
pop
je
addr16
popf
sub
pop
push
int3
adc
aam
inc
xchg
adc
xor
dec
mov
push
std
ss
sub
fsub
aas
call
add
pop
jnp
mov
adc
popf
rol
mov
jl
call
arpl
mov
xchg
ds
fdivrp
(bad)
jmp
or
mov
(bad)
inc
sub
xchg
xor
std
loop
daa
icebp
push
mov
icebp
sub
ja
int3
mov
mov
cmp
aaa
dec
fst
mov
rol
and
xor
xchg
jmp
mov
shr
aad
push
popa
popa
pusha
enter
pop
jp
pop
pop
sar
ret
fwait
and
pushf
addr16
inc
mov
inc
jecxz
out
sbb
xlat
sti
fnstcw
(bad)
push
xchg
outs
inc
(bad)
pop
adc
test
mov
hlt
stos
scas
push
popa
inc
fdivr
add
jg
jge
test
mov
sub
push
inc
xchg
sub
mov
xor
int3
push
pop
fcom
cli
loopne
loope
icebp
iret
fs
inc
inc
rol
mov
inc
test
push
test
pop
fwait
xor
jmp
scas
daa
jle
pop
not
xchg
leave
and
sub
mov
jl
jg
fild
pop
mov
(bad)
loop
fsub
inc
sub
mov
ins
sub
push
pusha
imul
stc
fidivr
pop
adc
movs
xchg
mov
in
ss
sbb
sbb
or
icebp
cmp
jl
fwait
jbe
popf
in
ins
mov
push
push
adc
or
xor
dec
mov
(bad)
cmp
mov
outs
cmc
xor
mov
adc
mov
push
sbb
int3
xchg
setl
hlt
cmps
push
or
lock
int
out
aas
aas
ror
push
pop
push
fiadd
jp
inc
inc
(bad)
push
enter
stc
sbb
clc
jb
and
sar
xlat
int3
and
push
(bad)
add
cli
adc
jp
fisttp
movs
jae
push
pop
jo
lock
enter
test
jecxz
or
jmp
push
cmp
cli
adc
xor
and
xor
sub
dec
stos
popw
std
loopne
ds
enter
fistp
je
retf
stc
popf
lahf
jns
mov
ret
sub
and
and
adc
cdq
(bad)
ss
nop
es
fsub
outs
(bad)
sti
pop
(bad)
lods
xchg
xchg
pushf
ins
add
dec
push
icebp
aad
scas
and
adc
dec
cmp
pusha
jbe
in
fmul
and
pushf
jecxz
daa
or
test
pusha
mov
cs
cmp
aas
daa
ret
sar
mov
rol
push
ret
and
xlat
retf
pop
xchg
into
fidivr
ss
jp
xchg
add
mul
mov
and
retf
aaa
ret
xchg
sub
push
cmps
shl
test
adc
xchg
test
add
push
mov
out
mov
push
xor
push
out
loopne
xor
inc
mov
(bad)
lods
mov
out
(bad)
fdiv
mov
push
jmp
push
retf
adc
mov
loopne
xchg
lahf
in
mov
pop
jle
sub
shl
dec
sar
in
arpl
add
mov
add
ins
xor
sahf
xchg
mov
mov
cmp
(bad)
in
pop
dec
ficom
mov
cli
int3
sbb
add
popa
popa
les
cld
push
mov
lods
jno
and
mov
sbb
jne
and
sti
(bad)
(bad)
pusha
inc
add
dec
jmp
cs
dec
scas
test
mov
cmp
lock
leave
pslld
mov
cs
pushf
shl
cmp
add
jnp
dec
out
dec
sub
repz
mov
imul
cmp
cli
test
ins
call
pop
jmp
jae
mov
call
adc
in
pushf
and
xor
cmp
sub
out
sbb
pop
pop
and
mov
add
imul
dec
dec
std
push
inc
clc
data16
add
nop
jg
push
pop
iret
ja
movs
out
mov
xor
mov
add
rcl
dec
shl
and
mov
fbld
icebp
pop
push
(bad)
mov
pop
ja
adc
(bad)
sar
mov
jo
jp
fisttp
out
cmp
sbb
jnp
lahf
icebp
jns
dec
shr
xchg
xor
mov
mov
cmp
adc
call
mov
push
push
add
rol
outs
cmp
fcomp
inc
cmp
add
(bad)
mov
and
mov
xchg
cmp
sbb
adc
arpl
call
jb
in
sub
xor
test
mov
call
adc
retf
ror
movs
retf
sbb
outs
std
les
cs
out
mov
mov
bound
daa
sbb
push
lock
and
es
ror
push
dec
add
inc
clc
leave
fmul
sub
fimul
les
sahf
and
mov
test
inc
mov
and
nop
cwde
sbb
shl
shl
push
out
nop
mov
aas
adc
xchg
shr
jmp
scas
mov
dec
stos
mov
in
aad
xor
adc
stc
sbb
js
push
push
pop
cmp
iret
retf
mov
xor
xlat
inc
loopne
int
mov
dec
mov
inc
xchg
jnp
ins
inc
pop
jmp
sub
outs
mov
retf
push
cld
sub
mov
xchg
sbb
or
sub
movs
cli
mov
daa
ret
rep
sub
mov
and
in
les
rcr
scas
push
dec
ds
jnp
pop
jae
mov
popf
jmp
xor
jmp
inc
adc
mov
xchg
xchg
mov
cld
xchg
mov
les
shr
jle
and
test
sub
mov
dec
clc
xor
cmp
jnp
js
add
cmp
jbe
std
in
enter
or
dec
sti
mov
mov
adc
or
out
call
cwde
pop
jbe
cmp
aam
push
jno
in
mov
xchg
or
sbb
push
jmp
ret
pop
xor
dec
adc
dec
arpl
jmp
xchg
push
scas
sbb
popf
or
(bad)
enter
fistp
adc
sub
push
cmp
sbb
xchg
inc
push
aas
outs
and
lea
out
push
or
jbe
push
xchg
inc
pusha
loope
pop
mov
scas
xor
loop
adc
dec
xchg
inc
mov
ror
and
repnz
iret
adc
in
mov
call
aam
and
shl
pop
xchg
cmps
call
lock
mov
sub
lods
xchg
je
mov
mov
xlat
xchg
push
push
rol
sub
out
rcr
fisubr
imul
sbb
add
add
xlat
cdq
mov
mov
lahf
mov
xor
jg
mov
mov
mov
jo
dec
add
into
fst
jo
or
jns
xchg
xor
xchg
sbb
mov
adc
mov
pusha
xchg
sbb
repnz
sub
cs
rcr
push
cmp
pop
dec
loope
mov
data16
sbb
dec
hlt
lea
pop
jns
iret
dec
loope
(bad)
cmps
push
out
cmp
push
sub
iret
imul
mov
pop
mov
sbb
and
adc
mov
repz
das
pop
cmp
push
les
fwait
lods
outs
add
adc
mov
lock
std
iret
mov
lea
add
push
xchg
in
in
loope
ss
inc
sub
and
sbb
pop
mov
aam
in
inc
xor
inc
repnz
add
aaa
or
jmp
or
shl
and
call
and
(bad)
push
cmps
lods
dec
imul
sub
jg
sub
movs
inc
pop
xchg
into
out
adc
ss
mov
cdq
pop
cmps
dec
mov
adc
pusha
sub
mov
aad
dec
inc
xchg
lds
stos
retf
adc
je
mov
gs
test
mov
es
pop
jecxz
sbb
push
xor
sub
jbe
mov
adc
mov
mov
jecxz
fwait
adc
ds
xchg
mov
inc
ds
xchg
sbb
mov
cs
scas
(bad)
ficomp
or
pop
jae
ds
stos
inc
sub
enter
aaa
jp
retf
push
pusha
dec
sbb
out
sub
das
aad
scas
jo
and
icebp
xchg
ins
xchg
add
loopne
cli
sub
mov
mov
mov
shr
pop
nop
fadd
push
mov
push
pop
loope
cmp
(bad)
jge
xchg
dec
mov
test
lods
scas
adc
ja
push
in
push
jb
mov
stos
jl
inc
pop
addr16
xor
mov
jbe
cmp
out
jnp
pushw
mov
dec
rcr
mov
push
push
rcl
bound
push
inc
retf
(bad)
cmp
mov
lock
inc
cmp
pop
cmp
pop
jmp
pop
pop
inc
or
dec
push
mov
push
jle
adc
mov
mov
sub
cli
mov
mov
call
sahf
rol
jns
call
mov
(bad)
mov
pop
mov
mov
daa
sub
shr
into
add
xchg
pop
retf
ins
and
std
adc
jmp
pop
pop
mov
cdq
xchg
stos
jne
ds
sbb
push
or
ficom
push
jecxz
mov
daa
mov
fsqrt
xacquire
cmp
adc
adc
hlt
xchg
ds
add
outs
fistp
cmp
outs
xchg
add
jl
rcr
or
repz
in
push
jge
(bad)
retf
sbb
xor
shl
movs
mov
outs
mov
inc
xor
fidivr
jp
ror
daa
pop
pop
push
pop
enter
mov
sub
push
adc
pop
outs
jge
jbe
and
dec
add
js
jmp
dec
or
dec
xchg
lahf
sub
pop
cmp
jl
adc
bound
push
jb
inc
int3
popf
add
out
cmp
xchg
cwde
(bad)
xor
push
sti
or
es
cmp
pop
xor
test
hlt
out
dec
div
(bad)
hlt
push
cwde
cld
paddsb
out
cmp
sub
xor
clc
jo
mov
repz
xorps
out
mov
(bad)
xlat
aad
or
push
arpl
neg
push
test
push
push
push
aas
jl
aad
jno
ds
popf
out
mov
xchg
test
push
sbb
mov
push
neg
fcomp
ds
cmp
das
adc
adc
repz
pop
sbb
retf
xchg
ss
mov
mov
jae
popa
stos
ret
test
mov
ret
call
mov
dec
sbb
cmp
sub
lods
retf
out
jns
pop
jecxz
jg
fimul
mov
mov
cdq
dec
push
sbb
add
jne
loopne
dec
leave
bound
leave
cdq
stos
pushf
mov
fisttp
stc
aaa
(bad)
popf
cmp
jge
mov
dec
and
sti
add
mov
les
sub
or
cli
and
sbb
push
mov
ud1
icebp
out
cmp
adc
clc
fs
call
scas
dec
jp
jo
in
xchg
add
and
pop
jecxz
jne
sbb
out
fild
(bad)
inc
add
xchg
push
sbb
iret
and
sub
mov
test
ss
loope
fcom
xor
leave
or
mov
inc
mov
rcl
outs
mov
inc
jl
cmp
or
add
idiv
xor
pop
jne
adc
jg
ret
sub
dec
out
mov
inc
pop
or
pop
jns
out
sub
pop
cmps
div
jno
inc
or
cdq
sub
or
sahf
daa
adc
je
and
inc
xchg
add
pop
cld
or
sub
mov
fnstsw
dec
mov
cmp
sub
inc
outs
push
xchg
mov
cld
push
sub
(bad)
and
and
clc
(bad)
push
jno
xor
xor
mov
lea
je
xchg
sub
mov
jno
push
xor
mov
call
scas
int3
popa
jg
mov
dec
popa
mov
pop
and
sub
inc
fcmovu
scas
or
jle
nop
sbb
inc
inc
out
enter
rep
inc
enter
push
dec
sahf
div
fild
fdiv
scas
scas
sbb
lods
gs
fnstenv
add
sub
outs
dec
sub
lahf
sbb
mov
cmp
cmp
push
adc
(bad)
in
rcr
ret
xchg
push
mul
mov
dec
out
mov
jmp
outs
mov
mov
imul
icebp
ficomp
into
xor
xchg
mov
dec
mov
cdq
mov
fdivr
jne
cdq
out
arpl
fcomi
lea
push
movs
dec
mov
xor
mov
in
push
rcl
nop
fsub
ficomp
outs
mov
fidiv
sar
in
pop
vpaddsb
or
(bad)
aam
lock
ins
scas
and
repz
out
icebp
aam
pop
mov
jne
je
mov
addr16
xchg
dec
push
and
xor
adc
cwde
push
inc
sub
gs
jp
aam
imul
bound
mov
cmps
mov
xor
mov
(bad)
arpl
loop
(bad)
imul
dec
sub
(bad)
add
mov
add
adc
mov
mov
scas
mov
ret
rol
fadd
lods
dec
sbb
std
mov
repz
getsec
cmps
mov
pop
out
mov
inc
sbb
sub
pop
xor
pop
inc
mov
repnz
shl
shr
adc
push
dec
stos
fld
mov
inc
mov
push
mov
sbb
(bad)
push
daa
lds
push
je
enter
xchg
xor
xor
and
lahf
stos
popf
ret
pop
iret
mov
ds
add
and
pop
xor
or
adc
retf
les
mov
arpl
inc
inc
xor
mov
jmp
jae
mov
jns
jno
cli
retf
xor
inc
jnp
mov
rol
int
cli
cmps
pusha
cmp
pushf
push
adc
fstp
inc
test
imul
pop
pop
and
sub
in
push
pop
cmc
mov
mov
jmp
lock
bsr
sub
xchg
ins
loope
fsubr
add
test
clc
mov
addr16
adc
sub
out
jnp
cmp
loope
inc
mov
xor
mov
ins
test
xor
sub
jbe
loope
stos
mov
xchg
fldenv
mov
push
scas
ja
pop
ds
dec
dec
sbb
pop
sub
cmp
sub
ret
repnz
sub
retf
add
(bad)
aas
gs
adc
retf
inc
inc
mov
lods
aas
retf
ja
cmp
(bad)
imul
push
call
sahf
pop
and
out
xchg
xor
cmp
adc
pop
mov
xchg
jl
fild
test
rcl
nop
lea
dec
outs
or
dec
jbe
jnp
ror
xor
cdq
or
xor
inc
xor
push
mov
push
and
adc
(bad)
mov
cli
mov
nop
cmps
fisttp
dec
mov
stc
inc
fsub
xlat
jae
ds
std
lods
inc
fnsetpm(287
ror
jecxz
jl
xchg
repnz
xchg
data16
in
cmp
cwde
xor
nop
outs
rcl
data16
repnz
xor
and
aam
call
ins
and
ins
adc
push
or
jp
cmps
in
outs
add
loopne
leave
mov
fisub
cmp
pop
in
arpl
adc
jge
mov
pop
cdq
pop
push
cdq
gs
aas
dec
lods
test
addr16
rcl
sbb
mov
jle
aad
xchg
push
mov
shl
das
in
dec
inc
ret
clc
inc
ins
scas
jb
test
cmp
repnz
fistp
push
xor
cmp
jns
xor
cmp
pop
sub
jns
mov
mov
stos
and
add
sti
ins
call
xor
sub
add
lahf
jnp
adc
iret
inc
add
sub
jmp
clc
xor
jno
dec
mov
rcr
int3
push
pop
push
xchg
mov
mov
mov
in
leave
jp
leave
sahf
out
mov
les
repnz
adc
inc
mov
retf
pushw
sbb
es
mov
leave
cmp
push
and
jne
xchg
mov
lock
jmp
mov
and
cmp
ins
data16
cmp
mov
xor
(bad)
fadd
iret
ret
inc
std
jmp
frstor
icebp
xchg
cwde
bound
cld
pop
int3
jl
pop
dec
jnp
movs
arpl
xor
sbb
push
rcr
stos
ds
out
cld
test
jp
test
push
add
jl
cmps
mov
mov
pop
and
bndldx
data16
lahf
rol
enter
test
outs
call
mov
push
sbb
mov
cmp
mov
xchg
das
xchg
gs
loop
or
stc
xor
sar
jbe
inc
jo
dec
out
in
push
jmp
xchg
in
fadd
adc
data16
xor
repz
add
mov
cmps
xor
fdivr
add
data16
out
or
ja
jmp
out
or
pop
out
inc
add
ret
mov
cmc
pop
shl
xchg
popf
leave
movs
les
xchg
add
xor
(bad)
mov
mov
call
imul
pop
shl
outs
push
push
ja
test
dec
xchg
jo
and
jo
jno
ficomp
clc
inc
mov
popa
es
outs
cmp
fld
mov
pop
push
pop
push
sub
pop
sub
inc
inc
enter
retf
iret
sbb
and
or
lock
mov
scas
cmp
add
pop
or
pop
sbb
ds
and
xor
mov
inc
add
outs
in
and
jno
jnp
dec
pushf
aam
in
jmp
sub
(bad)
sbb
jg
push
adc
out
inc
hlt
inc
ret
or
or
(bad)
and
jns
mov
out
jmp
push
xlat
adc
loope
push
pop
aaa
jg
loopne
cmp
cld
movs
push
retf
sbb
adc
shl
lahf
loope
aaa
sub
je
sub
in
mov
fs
ss
jo
jno
pusha
lds
mov
mov
out
add
pop
push
push
lahf
jle
inc
ret
mov
or
dec
sbb
jno
jne
xchg
dec
push
loop
push
ja
shr
pop
jb
(bad)
in
out
xchg
mov
(bad)
adc
mov
loope
je
shl
sbb
rcl
add
inc
or
jno
(bad)
xor
ja
js
test
out
and
dec
push
adc
sbb
stos
retf
mov
std
mov
jecxz
lods
push
icebp
mov
js
and
adc
and
ror
aaa
retf
xchg
add
in
loope
cmp
repnz
mov
and
jge
mov
sub
mov
jb
loopne
mov
lock
sti
lods
adc
inc
mov
adc
xor
enter
clc
test
aad
cli
fist
push
dec
add
rcl
outs
out
into
xchg
iret
icebp
out
clc
xor
cdq
or
mov
inc
cld
pop
add
fisub
ror
xchg
sub
int
xchg
add
and
add
cmp
push
mov
push
test
xchg
stc
mov
movs
xchg
fidiv
push
pop
sbb
adc
sbb
xor
jp
adc
stos
shl
rcl
mov
pop
inc
leave
pop
das
cmp
add
mov
aad
cs
outs
jae
fild
add
add
dec
xor
mov
out
loopne
repz
cdq
lahf
dec
scas
adc
push
out
xchg
(bad)
pop
mov
enter
out
sub
pop
sbb
cmp
add
pop
dec
ins
bound
xlat
test
cmp
push
cvtps2pd
icebp
mov
out
adc
es
inc
pop
cld
sahf
and
adc
sub
pusha
fadd
pop
xor
mov
jge
mov
sub
xchg
sub
data16
jle
repnz
imul
inc
test
loope
test
ret
or
dec
dec
mov
dec
shl
cmp
and
out
mov
gs
dec
mov
xchg
mov
es
sbb
mov
fxsave
add
test
jnp
loopne
into
test
mov
and
xlat
rol
in
loopne
imul
push
jb
dec
jge
xor
adc
clc
adc
cli
nop
cmc
pushf
mov
retf
xchg
pop
jg
sbb
(bad)
std
(bad)
cmp
push
or
ins
cmps
imul
sti
inc
imul
adc
add
or
imul
test
daa
popf
in
jl
scas
aad
jo
jb
or
std
xlat
pop
xor
pop
fdiv
dec
aaa
add
dec
nop
arpl
sahf
inc
retf
sub
and
sbb
in
xlat
jl
movs
cs
aam
add
stos
cmp
mov
pop
push
add
push
cmp
mov
nop
mov
outs
xor
mov
inc
mov
mov
pop
mov
int
xor
pop
out
stc
dec
inc
xchg
cmp
xchg
push
in
sahf
push
aam
out
pop
or
inc
ins
fiadd
adc
mov
pop
mov
mov
loop
in
nop
in
push
push
cmp
mov
jnp
sub
jno
mov
jne
mov
sbb
sub
jmp
xchg
adc
test
outs
xlat
bound
mov
push
retf
loopne
clc
add
sub
pusha
jecxz
cli
ret
(bad)
cmc
ds
or
data16
jbe
stc
mov
movs
imul
fwait
imul
das
fisub
pop
xchg
add
pop
iret
sub
jnp
cmps
mov
repnz
inc
jmp
stos
xchg
pop
xor
xchg
dec
jnp
loope
cmp
pop
push
push
inc
rol
jns
in
cdq
shr
mov
loop
sahf
sbb
mov
xor
mov
scas
xchg
loope
xor
xchg
pushf
mov
dec
popa
(bad)
or
mov
(bad)
xor
(bad)
jbe
fstp
xor
inc
(bad)
lds
imul
test
hlt
jnp
xchg
push
and
scas
xor
movntq
push
out
sbb
xchg
je
(bad)
fistp
sbb
jl
movs
ret
push
sub
mov
mov
inc
jnp
and
dec
and
xchg
mov
jbe
cld
in
nop
aas
and
cld
aad
test
push
xchg
call
cmps
out
loopne
or
adc
pop
enter
mov
add
jnp
mov
xchg
add
and
shl
outs
fstp
sbb
jp
retf
ret
add
mov
psubq
add
push
call
enter
or
pop
ret
mov
jns
je
xchg
jg
mov
add
cmps
lds
outs
test
inc
pop
nop
push
sbb
movs
ds
sbb
pushf
nop
xchg
pop
je
inc
outs
mov
and
jns
outs
xchg
call
xchg
jb
ja
out
outs
loope
cdq
rcr
sbb
xor
pavgb
repz
lock
std
repnz
je
dec
xchg
xchg
ins
cli
fs
pop
dec
pop
jle
mov
sti
mov
mov
dec
cmp
push
hlt
shl
mov
cdq
inc
inc
xchg
cmp
gs
mov
mov
sbb
cmp
test
pop
retf
call
mov
ss
fld
arpl
push
inc
cmp
(bad)
fisub
mov
push
(bad)
(bad)
leave
mov
jno
leave
lea
in
int3
and
std
(bad)
les
jbe
clc
sub
test
rcl
xchg
push
jb
jg
test
inc
(bad)
pop
mov
mov
setge
jmp
push
mov
push
mov
push
and
jl
jmp
je
retf
or
pop
clc
add
icebp
push
jno
dec
lahf
mov
pop
push
or
jp
(bad)
aaa
push
pop
jle
addr16
int3
or
sbb
sahf
adc
jge
push
loopne
in
and
cmp
repz
dec
enter
leave
repz
adc
call
cs
add
mov
inc
(bad)
inc
cmp
out
xor
jns
jns
cli
push
jae
out
movs
cmps
sub
enter
test
fld
pop
shl
mov
js
data16
dec
repnz
mov
cmp
sbb
or
(bad)
call
push
fwait
stos
cmp
ss
jecxz
adc
stc
ror
push
jb
fst
mov
imul
xchg
pop
cmp
ss
xor
ret
jg
es
mov
call
sbb
hlt
ins
ja
into
int3
outs
loope
mul
arpl
inc
test
loopne
js
ret
(bad)
mov
sti
mov
fs
cmp
bound
aas
dec
stc
xchg
cli
adc
sub
stc
jg
js
sub
cmc
test
loope
pop
pop
ret
inc
rcl
lods
jo
in
lds
aaa
std
push
ror
sub
cmps
sbb
cli
or
mov
sbb
or
stos
push
lock
inc
lods
sbb
fs
xchg
pop
test
mov
mov
dec
clc
lea
fsubr
stos
sbb
xrelease
mov
or
sbb
pop
sub
mov
fidiv
add
pusha
or
cmp
and
sbb
or
ret
jge
dec
ins
jge
xchg
jnp
dec
mov
imul
and
pop
in
test
xor
pop
sub
fsubr
fcmovb
mov
inc
pop
inc
push
inc
mov
jmp
dec
cmp
out
adc
xchg
push
fisubr
stc
add
push
mov
and
lods
loope
inc
inc
fstp
push
push
aad
xor
push
call
aas
xchg
add
fldenv
jns
cmp
aaa
outs
addr16
mov
push
or
sbb
or
scas
daa
je
mov
and
add
dec
scas
mov
jle
xor
clc
ds
cmc
ins
(bad)
sbb
jnp
mov
jnp
std
push
pop
movs
rcr
leave
cmp
pop
fsub
jbe
fs
mov
xor
jl
add
mov
iret
inc
dec
jmp
ins
xchg
sub
xlat
cmps
dec
stos
fst
cmps
mov
xchg
std
out
xlat
jge
adc
mov
jp
lods
adc
retf
inc
movs
(bad)
mov
(bad)
xchg
inc
cdq
pop
pusha
sahf
iret
mov
in
pushf
push
repnz
or
inc
xor
test
mov
shl
nop
push
addr16
outs
jecxz
das
mov
mov
je
sub
jno
xchg
stos
js
push
mov
pop
cmp
nop
mov
inc
imul
icebp
icebp
and
hlt
cmp
adc
push
cwde
jmp
add
and
aaa
xchg
cwde
cmp
sbb
mov
xor
jnp
jle
xchg
das
mov
or
lahf
outs
das
inc
or
out
xchg
push
in
jmp
lea
jno
movs
inc
push
and
add
pushf
cmp
std
sub
fstp
idiv
fst
mov
mov
xchg
fcomp
dec
enter
sbb
pop
add
pop
xchg
push
movs
inc
fdivr
ja
dec
sahf
sub
lods
fld
dec
mov
jl
add
test
xchg
test
sub
outs
xchg
push
rcl
sbb
in
push
add
sbb
xor
cmp
(bad)
cmp
mov
bound
fs
into
fst
imul
add
sbb
lock
mov
in
xor
inc
pop
mov
adc
mov
xchg
mov
xchg
pushf
or
dec
cmps
pinsrw
das
and
int
outs
push
ud2
fcomi
test
xchg
jnp
out
dec
inc
cmp
and
xchg
lock
sub
or
into
xor
idiv
pop
scas
sbb
jmp
je
mov
jo
test
sbb
sbb
stc
cli
inc
sub
(bad)
push
gs
fs
xchg
pop
(bad)
jne
sbb
mov
or
jmp
add
jmp
mov
pop
add
xabort
inc
push
mov
shr
mov
repnz
xor
inc
add
xor
mov
or
(bad)
pop
outs
inc
mov
fistp
mov
jge
aas
addr16
xchg
adc
scas
pop
gs
imul
sub
shr
nop
xchg
(bad)
(bad)
jmp
mov
mov
je
and
lock
mov
aam
cld
xor
xor
stos
inc
cld
sub
xchg
mov
or
es
pop
inc
aas
xor
dec
out
call
sar
std
mov
add
sbb
xor
sub
inc
xchg
mov
sub
sahf
sub
or
push
imul
mov
(bad)
bound
pop
sbb
pusha
ins
cmc
sub
or
inc
imul
jae
ss
ret
and
mov
stos
sbb
ds
ins
mov
out
mov
cs
(bad)
shr
mov
popa
inc
and
cmp
aad
mov
sbb
lea
xlat
add
imul
push
add
sbb
xchg
add
push
lahf
sub
cmp
xor
ret
dec
enter
out
pushf
ss
mov
mov
adc
pop
das
xor
xchg
test
jle
jmp
rol
iret
shr
ret
(bad)
adc
mov
cmp
pop
loope
or
sub
add
call
cli
push
sub
pop
loop
mov
add
arpl
sbb
sub
stos
(bad)
(bad)
push
pop
cmc
push
mov
out
(bad)
(bad)
test
std
outs
hlt
mov
or
in
jg
(bad)
sub
sbb
dec
cmp
sbb
xlat
or
in
(bad)
xchg
mov
test
and
cdq
fld
sbb
loope
inc
jo
sbb
or
cli
imul
loop
mov
push
aas
pop
popf
push
cmps
fst
faddp
lods
xchg
sbb
popa
mov
mov
jge
inc
push
push
lods
or
into
ds
xor
stos
or
rol
cmc
imul
aad
mov
jg
mov
shl
sbb
inc
sar
mov
test
neg
pusha
xor
fsubr
pop
sub
test
cmc
xor
and
sar
loopne
inc
add
sbb
jnp
cdq
jl
ss
sub
stc
xchg
mov
aaa
mov
jne
test
or
sub
jns
jecxz
fcmovbe
add
or
xchg
stos
cwde
sbb
dec
int
out
mov
cdq
add
mov
jge
or
pop
and
pop
or
sbb
xchg
or
mov
adc
add
movs
pop
adc
cmp
xchg
or
fsub
jnp
mov
retf
out
xchg
push
sahf
ds
mov
out
ss
inc
ins
jecxz
lods
mov
or
add
inc
test
test
jb
ror
iret
int
cmps
aam
scas
xchg
xlat
adc
shl
jge
int
fcomp
push
loop
mov
es
or
movs
rol
xor
push
add
dec
aam
lahf
mov
inc
add
inc
(bad)
iret
movs
div
mov
loope
push
adc
int
mov
sti
push
mov
ds
enter
add
push
mov
pop
xchg
or
dec
jo
fucomp
push
inc
fisub
jmp
add
mov
inc
and
lods
inc
cmps
or
hlt
sbb
add
jecxz
mov
push
(bad)
cmc
loop
out
mov
or
mov
sbb
xchg
cmp
movs
jmp
mov
push
lahf
xor
adc
xchg
mov
pusha
inc
pop
mov
adc
adc
fistp
ins
or
out
out
(bad)
xor
cwde
(bad)
gs
jl
(bad)
out
mov
out
cmps
stos
add
repz
lahf
movs
test
mov
cmp
mov
fiadd
mov
pop
je
xor
push
inc
(bad)
xchg
fcomp
xor
fdivp
xor
test
rcl
push
mov
out
out
adc
repnz
jne
jp
jle
pop
(bad)
cli
daa
inc
call
mov
adc
ret
fldcw
leave
xor
xchg
and
sub
push
jle
ins
shl
mov
mov
std
ins
dec
xor
addr16
push
jecxz
cmp
mov
add
sbb
loopne
bswap
cs
mov
rcr
cmp
cmp
data16
or
or
fsincos
cmp
pop
(bad)
jmp
adc
pop
es
sub
test
adc
sbb
pushf
ret
cwde
adc
and
aas
jns
es
dec
sub
push
or
popf
orps
sbb
inc
xchg
xchg
add
inc
stc
outs
idiv
inc
jne
data16
mov
push
sahf
adc
test
(bad)
and
je
(bad)
loope
test
pop
(bad)
shl
push
xchg
je
jg
pop
inc
ja
rcl
mov
mov
push
pop
jne
movs
lods
dec
int
ret
push
lea
aad
dec
or
imul
and
fcomp
(bad)
aaa
add
adc
es
sub
mov
mov
jne
jle
mov
jae
je
mov
sub
dec
loopne
call
hlt
enter
push
pop
sbb
sbb
dec
ins
lods
fcmovb
mov
dec
add
dec
inc
jnp
cmps
test
cmps
jns
mov
ins
fidiv
fmul
and
cmp
jae
mov
push
push
cwde
pusha
xchg
test
and
imul
push
in
jo
popf
push
into
fwait
inc
jns
nop
call
mov
pop
into
lock
pushf
xlat
call
xchg
inc
loopne
les
mov
leave
jae
cmp
mov
daa
je
es
or
(bad)
loop
sbb
jmp
inc
and
mov
cmc
xlat
xchg
retf
shr
mov
mov
jnp
push
dec
sub
cmps
sahf
pop
push
ins
shl
test
sahf
jnp
(bad)
test
test
mov
fnsave
imul
in
ror
sub
pop
inc
mov
xor
push
mov
mul
and
push
jl
in
daa
push
js
jmp
jnp
call
mov
sbb
pop
add
lods
mov
add
jno
cmp
movs
xchg
pop
cdq
outs
mov
pop
inc
rol
sbb
(bad)
mov
lock
(bad)
movs
fcmovnb
fwait
jne
hlt
cmps
mov
adc
push
fmul
cmps
push
test
push
pop
mov
jmp
addr16
push
adc
push
dec
sti
mov
adc
add
fild
or
mov
jle
push
add
pop
hlt
push
jne
ds
pop
out
push
jge
xlat
sub
stos
test
sbb
in
ds
loopne
adc
mov
mov
inc
or
sar
xchg
sar
and
aas
xchg
hlt
je
das
shr
mov
test
jmp
js
mov
mov
inc
mov
inc
lock
leave
movs
mov
xchg
test
add
cli
loope
sbb
jg
mov
and
pop
xchg
gs
repz
inc
in
xlat
pop
pop
xchg
mov
or
adc
data16
pxor
inc
movs
adc
in
imul
stos
dec
xor
test
mov
fucomi
sbb
jle
retf
push
mov
stc
jns
fsubrp
xor
sub
jecxz
inc
div
movs
sbb
rcl
in
pusha
jb
jmp
push
and
jg
les
aas
stos
dec
call
shl
bound
aam
and
inc
push
mov
push
jns
in
mov
(bad)
cmps
ins
xchg
sti
xlat
movs
out
sbb
mov
stos
inc
cli
ret
fst
push
xchg
mov
fsubr
add
je
push
int3
cmps
mov
and
pusha
imul
xchg
ins
sbb
sbb
jno
xor
dec
push
repnz
test
cdq
stos
xor
rol
and
pmulhw
shr
sti
adc
dec
call
mov
daa
movs
test
sub
inc
push
sahf
sbb
scas
inc
ja
push
retf
aas
loop
imul
adc
add
xchg
loopne
xchg
ins
ror
pop
jp
imul
ret
jae
sub
stos
jb
cmc
jae
mov
cmp
xor
movs
inc
aas
into
loopne
pop
and
push
test
lods
rcl
pop
cwde
xchg
outs
out
push
sub
int3
bound
stos
or
jo
sbb
and
ror
scas
jae
fsub
lods
mov
stos
add
movs
rcr
inc
xchg
sbb
jno
data16
aaa
inc
pop
nop
or
js
ret
clc
add
mov
cmp
cs
popf
xor
mov
in
sub
hlt
adc
mov
sti
push
jns
aam
retf
rcl
adc
loop
mov
sbb
fsub
(bad)
fdivr
and
push
es
outs
outs
mov
or
je
(bad)
repnz
sub
and
pop
pop
movs
shl
pusha
push
push
cdq
imul
daa
(bad)
shl
js
or
lahf
mov
xchg
inc
test
add
and
fnsave
hlt
adc
mov
sub
mov
sahf
in
pop
loop
in
pusha
jecxz
mul
inc
fsub
aam
fwait
sbb
loopne
dec
mov
cmp
mov
fbld
jnp
inc
sbb
add
add
sub
fld
mov
sbb
inc
push
dec
dec
inc
sbb
xor
push
adc
and
(bad)
loopne
sbb
out
lods
in
imul
pop
retf
cdq
jnp
cmp
and
dec
iret
sahf
div
js
enter
jb
jle
pop
jo
and
(bad)
gs
push
retf
(bad)
xor
and
mov
inc
hlt
push
(bad)
jmp
push
inc
sahf
ins
das
adc
mov
jne
(bad)
int3
mov
sub
adc
repnz
std
cmp
out
cmp
jg
loop
push
mov
ins
lock
and
dec
int
cmp
scas
call
(bad)
aaa
repnz
push
bound
push
inc
mov
ror
and
push
test
adc
inc
dec
inc
stos
jecxz
xchg
cli
ds
cwde
nop
mov
shl
inc
push
dec
or
in
addr16
xchg
test
cli
adc
pop
mov
into
fist
xchg
pop
pop
es
inc
pop
(bad)
shl
pop
add
cmps
jbe
pop
rol
out
push
les
inc
fwait
cmp
ins
mov
sbb
cwde
cmp
xor
int3
bnd
jmp
inc
xchg
sub
pusha
lods
push
or
shl
add
aam
and
and
rcr
sbb
jmp
cdq
xchg
fistp
or
sti
add
or
pop
mov
pop
cmps
mov
jno
push
loope
sub
xor
jb
pop
pop
fwait
jp
pop
lea
mov
int3
dec
pushf
pop
dec
daa
adc
add
push
adc
sub
fwait
es
push
daa
lods
dec
xor
adc
fld
and
test
stos
fisubr
sbb
mov
leave
repz
mov
imul
aam
(bad)
dec
jno
call
sbb
dec
movs
xor
rcl
mov
xor
mov
cmc
push
outs
and
jmp
movs
int3
jmp
push
std
or
pop
inc
fwait
jp
(bad)
or
dec
ds
arpl
cld
push
shr
xor
or
(bad)
jmp
and
or
cmc
in
out
jecxz
std
mov
lds
xlat
push
cdq
lock
mov
arpl
inc
rcl
pop
push
jne
xchg
push
(bad)
xchg
and
outs
les
mov
mov
mov
and
or
dec
fiadd
mov
cmps
cmp
or
clc
mov
(bad)
movs
and
jle
int
imul
pop
push
in
push
test
imul
pop
rcr
scas
mov
and
pop
mov
or
adc
cmp
push
fwait
cwde
(bad)
pop
push
scas
pop
daa
addr16
(bad)
loope
sbb
div
icebp
inc
stos
xchg
loop
add
movs
and
je
clc
inc
jo
add
pop
or
add
iret
rcl
call
cmp
(bad)
jns
pop
jns
cs
jecxz
pop
xchg
dec
push
movs
pop
ret
xor
out
add
sub
cmp
sbb
mov
nop
pop
inc
les
sti
sub
mov
sub
sub
ds
repz
add
mov
fistp
ror
xchg
daa
dec
xchg
xchg
and
cmp
xor
mov
mov
pop
shr
jmp
ins
(bad)
dec
test
stos
mov
stc
pop
and
sbb
inc
lods
(bad)
mov
inc
jnp
push
add
sahf
lds
in
sar
push
loop
std
jl
retf
(bad)
inc
adc
mov
aad
dec
repnz
lds
pop
pusha
mov
jbe
cdq
jno
xor
hlt
in
add
imul
add
mul
add
fiadd
dec
inc
loope
arpl
sbb
sar
add
movs
adc
call
mov
mov
je
push
sahf
mov
fdiv
inc
xor
cli
stos
add
rol
mov
sbb
into
loopne
push
mov
stos
test
dec
ds
dec
pushf
mov
hlt
pop
or
jmp
cwde
out
ret
(bad)
rol
(bad)
jns
and
out
cli
mov
hlt
xor
cmp
mov
xor
lahf
push
std
repz
pop
popa
enter
call
jmp
retf
pop
clc
mov
int
add
or
sahf
xchg
mov
js
push
es
and
jns
es
and
xchg
ja
call
inc
shr
in
rol
mov
mov
sbb
jnp
inc
mov
sub
jl
shl
adc
jle
cmc
jmp
sbb
adc
pop
test
xchg
pop
test
adc
je
call
fadd
pop
into
sub
adc
cld
mov
rol
lods
adc
cmp
jb
xchg
ror
(bad)
mov
nop
fisubr
stos
jge
xchg
out
clc
lods
test
ds
hlt
sti
cmp
cmps
cwde
movs
add
rcl
and
das
ins
retf
mov
mov
pop
ins
adc
cmc
mov
jno
ret
jns
mov
shr
jb
jge
fsubr
addr16
push
inc
out
jp
adc
inc
jmp
inc
lods
daa
sub
in
ins
mov
jmp
fsubr
xor
int
jno
inc
push
ficom
shl
in
inc
mov
stos
pop
inc
sahf
mov
lahf
mov
call
aaa
mov
adc
ja
rol
inc
mov
in
mul
mov
rol
data16
ss
(bad)
lods
and
es
mov
adc
jecxz
sbb
mov
adc
and
jp
mul
sti
ins
adc
dec
adc
mov
fcom
mov
mov
leave
xor
mov
pop
push
scas
call
fs
shl
sbb
daa
push
or
pop
fsubr
dec
jno
mov
sbb
or
test
inc
in
cmp
mov
mov
sbb
inc
ror
mov
clc
pop
pusha
in
pop
fs
pop
and
shr
into
in
popa
and
add
neg
rcr
add
push
lahf
xchg
pop
fisttp
(bad)
lods
mov
jbe
out
stc
(bad)
jbe
loopne
mov
in
outs
xor
inc
fnstsw
adc
xchg
imul
mov
cld
cmp
mov
cmp
fdiv
int3
inc
add
inc
dec
int3
shl
cmp
mov
xchg
push
test
or
scas
pushf
xor
push
int3
hlt
adc
xor
(bad)
retf
leave
ss
(bad)
inc
xchg
cld
adc
mov
and
push
add
loop
adc
mov
xchg
pop
sbb
adc
lahf
stos
scas
sbb
cmc
cmp
add
inc
test
adc
in
mov
je
fdivr
mov
and
add
adc
jg
sub
sub
scas
and
sub
movs
push
sub
xor
mov
pop
scas
test
(bad)
retf
fimul
fs
xchg
ins
std
dec
gs
push
dec
lods
push
mov
push
adc
fnstcw
pop
jp
sbb
adc
jo
stos
adc
mov
push
jne
into
fidiv
jns
jns
ds
cmps
jmp
iret
sbb
mov
mov
pop
in
jbe
pop
int3
sqrtps
outs
iret
popf
mov
ins
cmp
jb
add
gs
loope
jnp
lea
loope
icebp
enter
cdq
dec
pop
imul
inc
mov
int3
and
mov
jl
fnstcw
mov
xchg
sbb
test
cwde
jp
jp
pusha
push
cmp
jnp
xor
xlat
fidiv
mov
pop
jg
fiadd
jnp
aad
test
dec
and
sahf
add
push
std
out
push
push
jbe
cmps
mov
in
ror
mov
adc
adc
jne
jo
(bad)
add
scas
mov
push
(bad)
into
nop
mov
das
ret
or
push
fcmove
add
fcom
dec
mov
sub
xor
stc
ds
xchg
xor
dec
adc
jmp
pop
mov
fld
pushf
add
push
cmps
adc
add
call
inc
out
pop
jg
inc
xor
ins
fisubr
mov
push
gs
call
pop
or
xchg
cmps
mov
or
dec
dec
xor
test
out
dec
push
rcr
adc
adc
mov
jns
mov
dec
jae
mov
jmp
adc
mov
mov
mov
xchg
add
sub
jo
outs
mov
pop
xor
pop
repz
ds
and
rcl
fidiv
cmp
pusha
in
cdq
or
jge
xor
enter
push
(bad)
sbb
sub
lahf
call
add
cli
adc
test
adc
inc
mov
shr
sti
cmp
or
mov
lock
imul
and
(bad)
push
pop
cld
imul
mov
hlt
xchg
and
dec
xchg
stos
mov
jg
ror
xor
ja
aas
sbb
and
shl
nop
(bad)
test
xlat
pop
push
jecxz
les
adc
pop
outs
ret
mov
call
mov
aas
ds
adc
je
or
xor
test
jne
aas
add
outs
xchg
aas
sbb
std
ret
cdq
(bad)
stos
xchg
add
int3
push
outs
pushf
bound
xchg
mov
(bad)
xchg
(bad)
icebp
jle
jecxz
adc
adc
mov
mov
pop
fwait
in
push
pop
lahf
(bad)
movs
pop
adc
mov
movs
xchg
gs
ins
or
retf
out
scas
outs
clc
das
sub
xor
xchg
and
rcl
jge
mov
movs
jecxz
shl
jno
ins
adc
sbb
mov
cmc
or
push
loopne
push
out
into
bound
out
dec
rcr
outs
stc
inc
js
dec
sub
or
xor
out
loop
xor
and
mov
sar
inc
dec
fist
imul
jno
adc
adc
imul
xchg
mov
pusha
rcr
dec
lea
out
adc
test
(bad)
jmp
or
std
dec
or
out
mov
jmp
int
mov
sti
lea
std
test
sub
(bad)
bound
aam
or
cmp
(bad)
mov
sub
push
sub
mov
stos
jbe
mov
cmp
test
mov
hlt
daa
jecxz
shl
mov
int
jmp
mov
sub
hlt
push
(bad)
ds
addr16
mov
nop
in
lock
iret
sbb
aad
inc
bound
aaa
push
push
cmp
inc
mov
jo
push
pop
nop
sbb
out
and
add
push
call
not
cmp
(bad)
push
push
xchg
movs
fild
xchg
jmp
outs
pop
enter
sti
pushf
mov
fimul
mov
loop
add
jmp
je
push
adc
cs
add
(bad)
outs
mov
push
adc
sahf
cmp
jne
mov
jb
arpl
jmp
xchg
jecxz
inc
dec
rol
mov
icebp
and
call
or
push
mov
add
xor
cmp
out
or
pop
mov
call
ficom
cdq
mov
test
pusha
fistp
push
mov
dec
xchg
movs
jo
bound
cli
xchg
xchg
ss
adc
adc
scas
mul
push
inc
mov
test
sbb
xor
aam
xchg
xor
into
xor
push
dec
mov
xchg
dec
arpl
push
aad
xor
or
inc
js
jo
cmp
xchg
jp
cli
leave
aas
inc
sub
jge
xchg
int3
pop
and
add
ins
xchg
mov
push
push
or
mov
movs
fidivr
or
aam
faddp
ins
adc
test
(bad)
outs
scas
popf
adc
mov
ins
dec
mov
inc
xor
stos
or
adc
movs
push
outs
and
push
cmp
xchg
rcr
or
jb
(bad)
popa
cmps
adc
adc
xchg
enter
xor
shr
and
add
xchg
inc
pop
loope
jmp
xchg
cmp
sbb
pop
fisubr
push
push
sbb
adc
loopne
jo
gs
or
inc
fild
(bad)
bound
jnp
and
inc
mov
mov
add
xchg
or
adc
inc
or
mov
inc
inc
sub
lahf
ja
gs
mov
xchg
test
xchg
(bad)
mov
dec
xchg
push
mov
mov
xchg
fcom
movs
lock
hlt
cmp
mov
xor
imul
cmp
dec
nop
call
pop
mov
(bad)
dec
mov
fsubr
dec
loopne
cmp
loope
jge
movs
enter
in
(bad)
lods
not
xchg
test
adc
pop
in
ins
and
push
jae
imul
or
ds
out
(bad)
(bad)
mov
lahf
cmps
loop
lds
or
cmp
mov
(bad)
and
ds
inc
push
int3
cmp
addr16
(bad)
aad
pop
aas
enter
pop
stos
dec
ds
mov
aas
cmp
sub
aaa
mov
sbb
das
adc
add
mov
mov
cmp
sub
mov
mov
push
(bad)
daa
mov
mov
jae
jl
or
pop
cmp
ret
inc
popf
jns
loopne
sub
iret
mov
pusha
push
mov
adc
ja
pslld
jle
add
fisub
leave
mov
aas
xor
aad
stos
loopne
retf
dec
imul
jmp
mov
cmps
dec
inc
sbb
jnp
pushw
dec
pop
mov
int3
mov
push
fwait
rcr
clc
ret
jp
add
gs
cmp
stc
call
push
jle
pop
sub
jecxz
sbb
ins
stos
test
or
or
daa
ins
je
and
pop
js
leave
dec
(bad)
ins
call
xchg
into
add
push
cmp
ret
es
cs
or
shl
jns
stos
cld
cmps
ret
mov
adc
in
sbb
and
mov
call
add
xor
inc
ret
imul
loop
fisubr
cmc
leave
icebp
jmp
adc
stos
add
loope
add
sub
cmp
ins
addr16
in
or
lock
fxch
push
sub
mov
dec
pop
gs
test
mov
mov
inc
push
mov
push
cdq
ret
nop
sbb
fldcw
icebp
jp
inc
and
inc
jmp
test
aas
adc
rol
icebp
jns
push
push
cwde
mov
jmp
xchg
jp
ins
stos
pop
mov
or
loope
(bad)
popa
jbe
pop
int
idiv
push
jge
push
cli
cmc
aam
dec
fisttp
xor
push
int
pop
retf
inc
test
dec
clc
out
mov
fcom
jae
mov
imul
ret
(bad)
and
enter
dec
push
adc
inc
das
mov
or
(bad)
movs
es
xchg
mov
test
add
push
bound
stc
repnz
mov
out
dec
mov
mov
adc
retf
cdq
bound
sub
sbb
xor
and
jecxz
sbb
aas
sbb
test
xor
ficomp
add
inc
xor
out
lea
das
fsub
mov
push
cmp
(bad)
xchg
or
sub
and
xchg
sbb
and
out
pop
push
sbb
stos
pop
cmp
ins
sub
sub
dec
in
sub
adc
add
xchg
sub
pop
mov
dec
sar
jl
pop
cmp
(bad)
push
mov
mov
inc
icebp
sub
es
inc
cld
jle
jns
mov
mov
mov
aaa
xor
xchg
jb
xchg
adc
hlt
jge
jge
into
xchg
push
pusha
pop
inc
ficomp
cmp
mov
sbb
(bad)
mov
sbb
fwait
push
push
mov
sbb
pop
and
mov
ret
and
(bad)
aaa
lods
or
arpl
imul
scas
(bad)
shl
xchg
test
mov
(bad)
xchg
cli
popf
retf
iret
xor
div
jae
mov
ja
mov
ja
repz
xor
(bad)
ins
or
add
push
je
and
add
push
cmps
mov
xchg
cwde
mov
jne
stos
push
cmp
xor
nop
dec
lea
pushf
pcmpgtd
mov
(bad)
sbb
mov
jp
dec
jae
or
cmp
dec
daa
or
or
pop
shl
test
dec
pop
xchg
daa
pop
jp
in
jp
dec
push
in
and
push
add
into
push
ds
not
clc
mov
jecxz
mov
adc
fiadd
sub
rcr
in
jae
je
dec
scas
shl
call
jno
xor
add
fnstcw
mov
mov
out
dec
ins
inc
ds
cli
ins
icebp
mov
jmp
xor
sub
xor
pop
inc
sahf
lea
sti
xchg
pop
pop
test
sahf
push
push
arpl
(bad)
adc
les
add
mov
dec
jl
add
fucomi
sbb
xchg
mov
out
outs
mov
iret
cmp
cli
aaa
ins
pcmpeqw
lfs
xor
push
add
dec
test
mov
add
sbb
push
cli
enter
and
sbb
add
test
xor
sub
inc
mov
cmp
in
in
xor
rol
jg
test
inc
mov
inc
xor
fadd
jno
lods
lods
sub
ins
(bad)
mov
mov
(bad)
scas
(bad)
repnz
sub
xchg
sbb
inc
repz
xor
fcomp
arpl
es
aad
fwait
out
retf
dec
adc
out
lds
mov
in
fldenv
out
hlt
and
in
arpl
cmp
mov
(bad)
sbb
pop
shl
icebp
daa
push
sbb
xchg
cmps
and
adc
mov
cli
mov
adc
jp
cwde
cld
inc
jnp
and
imul
mov
addr16
xchg
loopne
dec
mov
(bad)
jns
(bad)
enter
nop
fisttp
sub
call
outs
gs
xchg
les
lods
mov
push
inc
lods
pushf
mov
rol
xchg
ror
xchg
add
or
xor
fisttp
sahf
out
jae
test
pop
scas
cmp
inc
inc
or
push
ds
mov
aad
mov
inc
enter
mov
and
inc
popf
pop
jl
dec
mov
sbb
fmul
jb
adc
adc
in
mov
xor
popa
pop
mov
out
xchg
mov
xchg
(bad)
hlt
fnstenv
test
mov
sahf
cdq
add
hlt
cmp
xor
push
sysenter
pop
out
imul
inc
cli
(bad)
movs
inc
add
sub
cdq
jmp
hlt
xor
xchg
movs
mov
sbb
out
ffree
pop
or
in
sbb
cld
sbb
mov
movs
movs
mov
adc
loop
and
lds
xor
rcr
and
(bad)
scas
cli
sub
hlt
inc
into
hlt
loope
adc
sbb
imul
lods
(bad)
sub
out
jp
retf
fwait
cmp
pop
cmp
inc
dec
push
test
sub
loope
fs
adc
into
cmp
xor
pop
jg
ret
or
call
out
test
lahf
arpl
repnz
fdiv
test
push
mov
xor
mov
mov
aas
test
pop
shr
add
sbb
or
and
sbb
dec
jo
jle
xor
mov
icebp
repz
mov
mov
je
mov
mov
fwait
hlt
ret
ret
cmp
aad
ss
sets
test
jmp
xchg
das
cld
adc
loopne
adc
pop
cs
and
in
out
aas
aas
xchg
mov
add
mov
sbb
mov
push
jnp
fisubr
dec
ins
pop
call
scas
clc
sti
ins
aad
repnz
cmp
inc
int3
xchg
leave
or
pop
push
bound
cmp
sbb
icebp
pop
push
cmp
cmps
shl
and
adc
jno
adc
shl
out
stos
test
push
inc
mov
mov
push
mov
jo
push
mov
in
sbb
sub
or
dec
mov
mov
test
xchg
outs
pop
xlat
cmc
lds
push
fdivr
icebp
jnp
out
les
mov
mov
(bad)
test
ret
dec
int
ins
dec
sbb
mov
cwde
enter
call
push
mov
jb
or
lods
shr
sbb
adc
test
jno
cmp
sbb
mov
retf
mov
setnp
nop
mov
inc
inc
popa
sbb
scas
cmp
and
mov
xchg
inc
mov
inc
sbb
jae
mov
aam
add
jle
sub
add
and
adc
and
xor
mov
xchg
(bad)
and
push
sbb
inc
(bad)
jmp
cmp
into
sub
fidivr
fldenv
dec
cmp
lods
adc
jp
inc
adc
movs
mov
into
rol
hlt
lods
test
(bad)
jb
jmp
and
arpl
leave
movs
push
sub
inc
push
fld
loope
or
cmc
jne
mov
pusha
ss
jne
sbb
add
xorps
fidivr
fisub
xchg
jbe
mov
sub
jno
ja
or
or
inc
cmc
pop
mov
bndldx
mov
popf
sbb
in
shr
mov
je
cli
push
jp
in
outs
lods
lahf
push
fmul
movs
cmp
pop
sbb
fldenv
and
xchg
in
int
xor
add
in
sub
test
xor
mov
adc
dec
call
push
pop
ror
(bad)
sbb
cmp
pop
adc
xchg
adc
sbb
mov
enter
inc
(bad)
(bad)
aad
dec
addr16
aam
fmul
xchg
mov
and
stc
mov
jge
xor
xor
js
push
call
mov
mov
jecxz
(bad)
dec
fmulp
xchg
xchg
scas
ret
out
(bad)
pop
push
stos
lea
sbb
cli
xor
pop
add
mov
outs
int
mov
and
mov
jecxz
xchg
push
sbb
push
xchg
xchg
movs
enter
mov
pop
push
lods
daa
ds
retf
jle
jo
push
mov
add
adc
or
das
ds
pop
push
sbb
dec
sub
add
add
out
test
(bad)
fisub
outs
mov
test
dec
cmc
xchg
adc
dec
out
(bad)
fstp
xchg
push
call
call
pop
inc
xchg
jg
arpl
mov
fiadd
push
cmps
ds
sbb
mov
std
mov
adc
aam
idiv
add
mov
cmp
and
in
jnp
push
push
js
jmp
iret
sbb
je
retf
or
mov
mov
mov
mov
jg
ror
in
push
int3
inc
stos
xchg
mov
retf
mov
es
dec
ins
jns
addr16
pusha
ds
jl
or
or
or
retf
mov
adc
repz
(bad)
repz
pop
(bad)
sar
or
stc
lea
xchg
xchg
shl
jb
ret
mov
das
mov
call
mov
jg
pop
push
mov
push
mov
adc
sahf
ret
cld
pop
mov
imul
xchg
les
aam
mov
outs
rcl
dec
jl
jge
hlt
sbb
mov
dec
retf
adc
int
retf
push
rol
neg
ret
bound
dec
fst
out
clc
mov
pop
repnz
or
fbld
add
cmp
jns
mov
ja
cmp
mov
push
add
add
fiadd
cmps
lock
ja
jbe
xor
pop
jbe
adc
inc
stos
cmps
stos
mov
fild
stos
movs
bound
pop
push
loopne
adc
dec
ret
imul
iret
mov
popf
icebp
in
and
popa
adc
mov
sbb
shl
cs
and
adc
pop
pop
(bad)
jnp
mov
(bad)
xlat
lahf
iret
cmp
pop
push
cwde
cli
and
xchg
repz
cmps
push
xlat
mov
scas
inc
fbld
xor
push
sbb
push
(bad)
retf
push
addr16
scas
mov
iret
les
cmp
adc
loop
fistp
inc
ds
push
mov
xchg
ret
and
dec
mov
bswap
inc
adc
mov
xchg
outs
js
cmp
imul
add
outs
(bad)
fisub
pop
jns
or
mov
mov
mov
fcom
retf
ins
loope
adc
outs
sbb
cmp
adc
adc
sub
ret
cmp
cmp
mov
cdq
adc
sub
in
xchg
xor
or
xor
sbb
or
jae
dec
das
leave
(bad)
push
dec
cmps
dec
add
jnp
push
ss
cmp
std
pop
adc
pushaw
mov
cmp
jge
popa
cli
push
(bad)
or
xchg
sahf
add
test
lahf
cs
lock
mov
xchg
arpl
imul
out
lods
mov
pushf
(bad)
push
xchg
in
jp
cmp
jle
jne
mov
cmp
aas
cmp
or
(bad)
hlt
mov
aaa
hlt
leave
inc
out
jmp
sbb
xor
or
push
cmp
or
add
sbb
shl
arpl
mov
mov
mov
scas
imul
in
or
sub
cs
out
out
xchg
daa
mov
xchg
xchg
jne
sbb
cmps
pop
test
movmskps
test
mov
mov
push
ror
repnz
hlt
aad
dec
dec
mov
pop
mov
push
push
jecxz
mov
and
icebp
xchg
pop
fbstp
mov
sub
fidiv
test
mov
sbb
pop
sbb
outs
mov
push
pop
and
xchg
mov
and
sub
clc
mov
mov
fsubr
out
iret
sub
jl
inc
cmp
aam
mov
and
and
pusha
jmp
shr
pop
push
mov
popa
sub
adc
fisub
sub
popf
cli
arpl
call
dec
mov
fldenv
push
es
sbb
jbe
jb
inc
sbb
xchg
inc
cwde
push
loop
repnz
movs
hlt
sub
mov
or
enter
pusha
mov
ds
mov
ret
ds
inc
cld
out
jl
shl
sub
pop
mov
cmp
fstp
mov
unpcklps
inc
mov
dec
cmp
sti
push
mov
pop
mov
mov
outs
div
(bad)
and
xchg
rcr
in
push
jg
jp
lds
jbe
sbb
jno
mov
pop
mov
add
leave
mov
sti
in
dec
aad
cli
(bad)
adc
xchg
fmul
cmp
bound
mov
and
pop
rol
ret
inc
dec
xchg
mov
mov
pop
adc
sub
loopne
js
jns
or
jb
cmp
mov
jmp
test
jae
cdq
test
(bad)
and
mov
(bad)
xchg
pop
sbb
mov
push
fistp
mov
pushf
add
gs
loope
fwait
movs
inc
stos
scas
(bad)
adc
pop
sbb
lds
mov
xor
rcl
ret
add
xchg
fldenv
nop
pusha
mov
xchg
outs
fxch
aad
dec
push
jle
in
jne
xchg
inc
(bad)
pop
sbb
fist
dec
fist
dec
aad
add
clc
mov
(bad)
xor
jno
arpl
sbb
mov
aad
ss
imul
test
and
xchg
ret
repz
adc
xor
and
stos
cmps
inc
xchg
adc
aam
pushf
xchg
jmp
outs
adc
cwde
mov
push
dec
test
sbb
nop
mov
cmp
mov
sbb
jp
xchg
push
cmp
mov
out
mov
ins
push
jno
jg
sub
outs
aad
xor
dec
mov
aas
cmp
scas
fst
or
leave
push
add
(bad)
sbb
mov
aam
jne
in
shr
call
ror
xchg
aaa
mov
dec
push
xlat
ja
xor
and
sbb
xor
test
pusha
jge
inc
cmp
sbb
test
inc
mov
cmp
push
pop
lds
or
xor
add
mov
dec
test
cmp
cdq
sub
sbb
sti
imul
adc
jp
dec
push
movs
ss
loopne
mov
jp
push
vmwrite
call
jo
push
mov
push
push
mov
loopne
test
pop
xor
call
stc
or
or
dec
jecxz
pushf
(bad)
push
xchg
mov
fdiv
ret
or
pop
sub
sbb
inc
in
popf
cdq
pushf
popa
jno
adc
pop
loope
xor
leave
xchg
arpl
pop
push
call
leave
stc
fiadd
out
test
(bad)
fisub
ins
shl
xchg
cli
daa
jp
hlt
repz
push
lods
popa
cwde
sbb
xor
adc
sbb
test
cwde
mov
add
mov
das
mov
loop
jae
or
movs
and
sbb
fs
mov
jp
scas
call
inc
add
movntps
js
in
mov
repz
fdiv
sub
push
sub
test
sbb
cli
cdq
cmp
js
mov
nop
push
iret
ffreep
mov
mov
xchg
test
cmp
or
imul
xchg
jp
sbb
xlat
daa
inc
jae
and
jmp
mov
std
cld
out
mov
sbb
jge
xor
inc
adc
mov
cmp
push
adc
add
sub
mov
ins
xor
mov
data16
icebp
xor
jge
test
or
and
out
addr16
fidivr
xor
mov
lahf
scas
sbb
cmps
int
lds
sbb
mov
inc
jae
xor
sbb
mov
sub
xchg
fisubr
out
pop
add
shr
sahf
mov
mul
movs
ins
mov
cmc
xchg
fst
repz
cmc
jmp
(bad)
jmp
sbb
mov
stos
push
sub
inc
loope
inc
sub
sub
in
adc
sbb
leave
imul
xlat
and
aaa
mov
iret
pop
hlt
out
nop
xor
sahf
movs
outs
mov
cmp
test
pop
mov
mov
add
push
clc
mov
sub
sbb
clc
clc
push
sub
xor
nop
xor
shl
xor
leave
scas
push
fld
fs
jp
clc
xchg
jg
les
loopne
mov
stos
inc
std
(bad)
and
aas
lods
add
mov
xchg
jge
xchg
push
shr
(bad)
(bad)
in
shl
imul
jne
pusha
xchg
cmp
jo
ins
je
xchg
mov
inc
ds
xchg
and
xor
lahf
imul
mov
push
lock
imul
and
dec
enter
loope
and
popa
int
mov
xchg
and
sbb
push
sar
adc
push
jle
xchg
into
jbe
loop
cdq
xchg
mov
ja
outs
inc
and
sub
push
call
jae
add
(bad)
jmp
jg
xor
and
aas
pop
mov
sbb
xor
(bad)
loop
adc
push
mov
pop
cmc
std
inc
iret
into
push
(bad)
cld
nop
out
shl
mov
push
add
mov
repnz
ffreep
out
xor
stc
push
ins
and
push
das
(bad)
pop
adc
loop
retf
mov
int3
push
adc
jae
cmp
sti
in
sub
imul
fcomp
int3
sbb
dec
cmp
fcmovnbe
(bad)
cld
push
loope
repnz
mov
aad
push
mov
jecxz
push
addr16
fbstp
(bad)
cli
ja
mov
fst
icebp
jmp
add
and
ja
pop
(bad)
out
push
and
or
push
mov
sbb
mov
sbb
sbb
jmp
int3
push
mov
sub
test
lds
cmp
sahf
mov
repnz
stos
cmps
jns
cwde
test
dec
lods
jne
mov
in
add
or
rol
sub
lahf
jl
mov
ret
xchg
in
inc
inc
push
test
arpl
xor
xchg
or
jo
jno
(bad)
or
push
dec
dec
jnp
cmps
mov
fdiv
xor
xlat
dec
(bad)
les
adc
imul
ror
pop
pop
int3
inc
cmp
adc
(bad)
ja
ret
(bad)
pop
ficom
adc
push
test
sbb
push
movs
mov
and
mov
fisubr
pop
push
ja
aad
rcl
sahf
mov
scas
xor
push
and
pushf
add
loop
(bad)
xor
cmp
sub
cmps
iret
add
pop
es
sbb
xchg
jle
data16
sbb
xor
mov
jbe
or
push
adc
in
call
mov
xor
jbe
cmp
sti
fwait
(bad)
xlat
cmc
inc
xchg
(bad)
movs
push
and
stos
jmp
add
leave
xor
in
pop
pop
idiv
ret
adc
loope
fldenv
hlt
(bad)
jne
sti
xchg
not
mov
adc
aaa
xor
and
loopne
push
adc
popa
bound
cwde
mov
(bad)
fcmovbe
inc
js
jmp
loopne
xchg
add
call
adc
movs
popf
icebp
in
sbb
inc
xor
or
cmp
(bad)
push
fcomp
and
push
push
stc
gs
loopne
sbb
mov
dec
inc
call
push
(bad)
jmp
je
clc
xchg
pop
xchg
in
or
mov
sub
(bad)
mov
jg
test
sub
dec
mov
mov
inc
pushf
adc
call
jmp
fisttp
mov
outs
in
int
cmps
sbb
loop
sti
loope
jl
sub
inc
or
bound
std
push
addr16
push
test
out
dec
into
xchg
jns
lock
out
loope
rol
adc
loopne
cmps
cwde
ins
dec
mov
mov
push
neg
les
add
enter
inc
dec
inc
push
(bad)
out
arpl
fs
loopne
mov
add
in
outs
and
lahf
cdq
or
in
fidivr
mov
pop
hlt
out
jno
inc
adc
xor
(bad)
iret
rol
les
cmp
or
bound
mov
fcomp
mov
out
ins
dec
aam
dec
jae
cmp
ins
es
fbld
add
xor
xlat
retf
out
cmp
push
addr16
retf
(bad)
repnz
push
pop
mov
ja
xor
das
loopne
adc
jmp
stc
test
cdq
push
pop
out
sbb
mov
xchg
xchg
dec
out
jo
sbb
mov
call
mov
in
lahf
sbb
push
retf
add
call
popf
sub
pop
add
test
pop
add
fnstcw
sbb
(bad)
jmp
lahf
sbb
stos
or
in
ds
(bad)
lods
call
sbb
inc
xor
pop
push
retf
xor
stos
mov
leave
jno
mov
enter
push
xor
adc
nop
shr
jle
out
shl
push
cmp
mov
(bad)
stos
mov
inc
fdiv
mov
lods
(bad)
jp
xor
inc
sub
adc
xor
ds
repnz
sub
sahf
fldcw
enter
shl
xchg
cmp
call
adc
sbb
sbb
jo
pusha
xchg
lods
inc
stc
adc
aam
les
iret
add
arpl
xor
ins
adc
dec
ror
out
nop
cmp
and
retf
shr
pusha
mov
xchg
or
int
scas
dec
jle
jne
js
push
hlt
inc
jp
pop
or
jg
out
dec
xor
mov
xchg
not
jg
in
dec
and
daa
loopne
sbb
mov
nop
rcl
jle
(bad)
mov
nop
sub
aad
sbb
dec
pop
xchg
icebp
push
pushf
js
cdq
mov
push
mov
and
xchg
(bad)
or
test
cmp
push
leave
sar
inc
mov
cs
sbb
ret
push
in
cwde
add
mov
jnp
mov
mov
adc
mov
push
pop
and
in
sub
jl
mov
ret
stos
inc
(bad)
dec
add
fucom
mov
inc
das
sub
sahf
or
sub
jge
sbb
inc
cmp
pop
(bad)
aaa
int3
dec
add
popa
fidivr
aas
cmp
(bad)
cmp
mov
std
mov
jnp
xchg
jae
inc
lahf
mov
jmp
inc
cli
cmp
inc
add
mov
cmp
push
rol
es
out
ja
add
and
pop
jge
retf
jbe
leave
dec
push
gs
xor
inc
test
inc
mov
pop
test
jae
jg
push
jle
adc
ret
xchg
call
sar
popf
dec
call
pop
(bad)
cmp
cmp
cmp
imul
and
enter
add
xchg
push
retf
lods
adc
or
(bad)
fisub
xchg
inc
popa
fs
mov
popf
fs
inc
movs
ins
ror
xchg
mov
sti
adc
mov
test
sub
shl
sar
js
cwde
push
mov
or
fsub
in
fmul
test
mov
not
leave
out
imul
mov
sub
(bad)
or
js
imul
xor
jnp
test
pop
jb
or
sbb
dec
push
pop
sahf
aaa
arpl
in
pop
in
call
and
xor
test
shr
push
(bad)
dec
stc
cmp
cdq
sub
push
adc
and
not
or
cmp
sub
(bad)
cli
or
xchg
aas
push
adc
in
fld
data16
mov
popa
loop
xchg
sub
stos
cmc
movs
xor
mov
mov
jnp
jmp
cwde
jle
and
les
cmp
test
retf
icebp
cmp
out
jl
adc
dec
jle
push
pop
dec
dec
les
mov
cmps
cmp
xlat
(bad)
leave
jo
imul
sbb
jb
fist
inc
inc
jp
mov
test
arpl
adc
imul
mov
mov
mov
mov
mov
push
rol
clc
or
(bad)
out
into
jns
(bad)
ret
mov
push
fsubr
inc
jae
bound
mov
movs
es
outs
xchg
mov
sbb
cmp
push
cmp
jle
retf
adc
or
hlt
jge
fstp
or
test
add
and
fdiv
cmps
loopne
loopne
leave
mov
jns
scas
mov
pop
hlt
mov
mov
movs
sbb
imul
pop
add
mov
adc
mov
(bad)
xchg
mov
inc
imul
call
aas
xor
in
into
pop
out
adc
jecxz
push
cli
(bad)
and
(bad)
jmp
jb
dec
movs
mov
cwde
pop
aam
jne
and
xor
lahf
dec
scas
(bad)
and
inc
test
nop
or
or
sbb
lahf
push
repz
adc
and
retf
or
push
jo
pushf
cs
movs
idiv
mov
pop
and
cli
psrld
repz
mov
mov
lock
add
jg
mov
mov
addr16
adc
pop
cmp
sub
and
clc
les
rcl
and
out
jae
sub
ret
call
ret
add
cmp
mov
inc
in
or
inc
in
or
fdiv
sti
pop
shl
add
enter
jnp
mov
clc
push
xor
ds
lahf
jns
pop
aaa
push
sub
jle
add
pop
pop
xor
inc
xchg
sti
cmps
cdq
mov
ret
push
sub
mov
cli
mov
ror
ja
mov
or
cmp
(bad)
xlat
dec
sbb
push
mov
inc
fidiv
push
mov
pop
out
lds
out
aam
sti
inc
dec
ret
cmps
cmp
(bad)
or
retf
les
push
jle
sbb
test
sub
std
popa
mov
add
out
retf
daa
jnp
jne
dec
adc
jl
not
jnp
mov
mov
push
xor
popa
or
or
(bad)
sti
fisttp
(bad)
repnz
jecxz
stc
or
movs
ins
adc
frstor
jecxz
div
sub
pop
fdivr
sahf
jge
lods
cmps
lea
pop
mov
repnz
jb
mov
add
dec
adc
xor
fldcw
or
xchg
cmp
test
leave
daa
sbb
jmp
rcr
dec
popf
sti
icebp
pop
test
ss
xor
movs
out
pop
gs
xchg
lahf
or
xchg
ss
shr
icebp
mov
dec
stos
sar
mov
mov
outs
sti
out
pop
aas
jmp
mov
mov
cs
aas
inc
mov
push
loope
pop
test
push
popa
loopne
cmc
cs
loopne
div
mov
mov
test
jmp
into
sub
push
dec
scas
lahf
mov
in
adc
xlat
in
xor
cmp
stos
cdq
or
leave
int
test
sub
popf
mov
mov
and
cmps
mov
sub
out
outs
lods
imul
push
stos
imul
stos
jb
mov
lods
in
jmp
sbb
mov
mov
cmp
push
cmp
push
mov
dec
rcr
into
pop
pmaddwd
bnd
popa
add
fdiv
pop
jne
fstp
sub
sbb
repz
dec
or
cmp
pop
dec
sbb
fistp
cmp
cmp
shl
loop
cdq
fsubp
cdq
aas
xor
inc
dec
retf
sub
jnp
xchg
add
mov
sub
dec
sti
mov
push
loop
xchg
mov
cdq
and
stos
test
push
jp
and
and
mov
add
mov
repz
movs
pop
test
xchg
out
cmp
jg
fnstsw
js
mov
xlat
(bad)
rcr
sahf
jp
mov
fs
inc
inc
pop
or
hlt
dec
js
dec
movs
movs
in
mov
das
push
xor
cmps
fnsave
cli
xor
mov
imul
xchg
jmp
mov
sub
and
pop
stc
dec
rcr
mov
dec
cwde
leave
(bad)
jae
jne
mov
inc
push
cli
rcr
mov
stos
or
fdivr
pushf
xchg
and
inc
pop
or
mov
pop
lahf
xor
cs
test
jge
add
mov
mov
mov
in
ret
fldcw
(bad)
xor
adc
jge
fisttp
inc
add
ins
jecxz
call
scas
add
lea
push
mov
repnz
aas
jae
ja
add
inc
js
cmp
jne
fst
imul
sar
adc
test
mov
das
ds
mov
mov
shl
bound
sti
lods
into
xchg
push
lods
inc
loop
lock
xchg
push
jp
pop
bound
aad
(bad)
movs
test
out
mov
rcl
mov
push
sbb
inc
adc
pop
rol
les
or
push
imul
add
add
pop
in
jns
bound
out
das
retf
sbb
and
hlt
sbb
in
add
sbb
sub
and
xchg
sbb
xchg
mov
add
push
fisttp
cli
out
shr
lock
aad
mov
pop
mov
push
add
jg
outs
(bad)
xor
das
es
test
and
in
cs
mov
mov
ins
mov
into
pop
inc
jl
push
cmp
push
(bad)
ins
sub
retf
fsub
add
and
xor
dec
sar
aad
jmp
push
scas
(bad)
mov
aam
push
pop
out
dec
mov
aad
inc
das
bound
in
and
aad
jnp
jmp
fild
dec
or
mov
int3
dec
test
jnp
bound
xchg
dec
mov
cmp
sti
cld
sub
setae
mov
jl
pop
adc
sbb
(bad)
loop
push
mov
inc
(bad)
(bad)
cdq
and
jg
pusha
stos
add
icebp
(bad)
scas
gs
dec
outs
jb
cmp
cmp
in
dec
add
xchg
std
clc
sbb
jnp
dec
ret
loopne
call
les
test
pushf
or
mov
jmp
pop
fidiv
pop
aas
or
dec
popf
int3
jmp
addr16
mov
inc
xchg
mov
repz
inc
retf
ret
inc
inc
data16
(bad)
dec
push
add
outs
(bad)
movs
xor
adc
or
lods
pop
xlat
adc
jne
ror
mov
bound
adc
stos
pop
fbstp
retf
jecxz
les
inc
(bad)
mov
outs
and
pop
jns
cmp
call
pop
inc
popa
pop
mov
fimul
cmp
mov
stos
jp
push
out
cmp
sub
mov
xchg
push
fs
or
sti
push
loop
movs
mov
(bad)
and
pop
inc
cmp
add
outs
daa
push
retf
scas
loope
add
sbb
in
out
sbb
dec
mov
mov
lods
xor
dec
movs
pop
push
push
fdiv
fnstenv
sub
xchg
dec
adc
dec
jbe
std
cmp
imul
neg
push
jae
cmc
mov
mov
xor
fcmovnb
push
xor
scas
mov
cli
pop
imul
jmp
jg
into
scas
repz
mov
mov
inc
pop
mov
fbld
outs
das
jo
into
push
(bad)
jbe
xlat
out
push
popa
adc
xchg
fist
in
pop
imul
inc
lods
xor
xchg
cli
push
les
adc
xchg
fs
mov
mov
or
mov
(bad)
mov
mov
inc
(bad)
in
dec
out
xchg
push
das
adc
inc
rol
aaa
fwait
callw
mov
cmc
in
xchg
cmps
jmp
std
repnz
and
repz
mov
fwait
cmps
mov
mov
(bad)
jne
(bad)
xor
aaa
jl
aam
mov
sbb
mov
inc
add
test
push
mov
shl
xchg
cs
outs
mov
cmp
aas
test
add
dec
sub
mov
adc
inc
adc
nop
sub
retf
mov
pop
mov
jg
xchg
xor
aad
jl
imul
dec
shr
xlat
cmp
fsub
fs
popf
mov
xlat
pop
loope
jmp
jo
push
jecxz
push
cwde
dec
and
jmp
jbe
leave
aam
pop
in
jg
test
and
ret
mov
mov
sbb
jmp
add
xor
mov
xchg
cmp
sbb
mov
mov
daa
fbstp
sbb
sub
cmp
mov
add
fisttp
cmp
xchg
rol
ds
push
pop
push
shl
clc
ins
stos
ds
sub
cld
inc
and
aam
cmp
retf
push
(bad)
imul
or
das
jbe
cmp
jae
mov
lock
sbb
add
pop
pop
inc
jl
inc
cmp
shl
call
shl
out
lds
mov
les
cmps
pop
sbb
bound
dec
xchg
xchg
mov
xchg
jae
ins
pop
pop
mov
bound
push
je
leave
js
out
or
cmp
fistp
mov
fisubr
mov
(bad)
hlt
jmp
in
cdq
(bad)
mov
inc
mov
mov
lea
sub
pop
movs
fisttp
addr16
mov
ror
xchg
jmp
sub
sahf
jo
in
add
adc
sahf
push
mov
push
int3
ss
or
sbb
ficomp
cmc
aad
enter
mov
cmp
xor
pop
mov
pop
movs
scas
cmp
pop
inc
mov
les
add
and
lds
mul
test
fcomp
lods
pop
(bad)
mov
cmp
mov
push
sahf
call
test
sahf
adc
jns
retf
fdivr
lea
sahf
mov
or
in
pop
or
(bad)
pop
push
out
pop
popa
in
xlat
jo
(bad)
(bad)
sub
fcom
mov
ds
in
leave
mov
ror
ins
mov
(bad)
call
mov
movs
sti
adc
ja
sbb
out
mov
pop
in
dec
outs
pop
clc
sbb
mov
adc
inc
inc
adc
gs
inc
xor
repz
out
inc
(bad)
rcl
cmp
(bad)
xor
xchg
sub
loop
mov
sub
into
in
imul
dec
in
mov
std
jns
add
sbb
push
cmc
scas
(bad)
dec
mov
dec
pop
loope
cmp
fistp
jl
mov
(bad)
mov
mov
out
cmp
push
js
popa
xor
dec
push
jecxz
mov
adc
sub
(bad)
pop
and
fs
ds
retf
bound
pop
addr16
cmp
push
fist
hlt
aam
jl
inc
dec
push
xchg
pusha
adc
pop
ins
popa
fs
retf
bnd
mov
sbb
ret
jp
cdq
mov
loop
(bad)
call
or
mov
dec
sub
cmps
mov
jo
sbb
cwde
fwait
mov
sub
loop
stos
scas
fistp
push
jg
ror
mov
(bad)
mov
call
gs
(bad)
sahf
adc
inc
sahf
les
mov
or
jl
xor
mov
and
adc
sahf
fstp
out
popa
retf
mov
mov
xchg
fimul
pop
dec
mov
call
shr
enter
xlat
stos
test
sbb
(bad)
inc
or
mov
inc
dec
and
das
sub
jns
mov
out
jge
out
or
jns
cs
rol
(bad)
aad
sub
jo
neg
jl
lock
sbb
push
test
push
cmp
add
push
(bad)
mov
cmps
repz
in
clc
dec
pop
shl
sbb
loopne
(bad)
add
sbb
pop
aaa
repz
mov
inc
xor
cmp
xor
pop
cmp
imul
pop
(bad)
mov
out
test
cwde
ror
arpl
mov
lahf
push
xchg
(bad)
test
lods
jecxz
shr
mov
outs
sub
popf
jo
fdivr
xchg
pop
adc
inc
(bad)
xlat
cli
movups
sti
lahf
dec
pop
stc
or
mov
ins
and
jae
jo
xchg
mov
xchg
dec
icebp
inc
test
popf
sbb
cmps
sub
div
jp
popa
inc
and
imul
dec
scas
stc
(bad)
sub
inc
pop
or
add
inc
repnz
div
mov
mov
inc
in
inc
sbb
adc
test
or
imul
jo
mov
call
mov
xchg
pop
cmp
adc
popf
jmp
lods
adc
xor
mov
das
ret
mov
in
fstp
sub
mov
push
mov
pop
nop
nop
xor
cld
popa
cmp
push
repnz
jns
mov
add
mov
jo
cmp
sti
jne
rcr
jne
enter
or
xor
cs
ror
retf
imul
inc
jp
adc
sub
not
cs
lahf
xlat
xchg
pmaddwd
cmps
fsubr
or
js
jno
cmp
(bad)
push
sbb
cmp
mov
jne
mov
jg
ror
fisubr
jge
sub
add
hlt
sub
inc
xchg
cmp
and
sub
scas
dec
add
fsubp
cmp
(bad)
imul
cmc
dec
mov
mov
jbe
jnp
repz
jg
xchg
cdq
inc
ins
push
enter
stc
clc
dec
xor
out
sahf
cmc
movs
cs
pop
outs
dec
enter
dec
inc
hlt
or
mov
or
jmp
pop
popa
test
ret
dec
inc
ret
mov
inc
dec
lahf
cmp
add
sub
cmc
dec
sahf
fmulp
mov
enter
cmps
pop
setp
es
inc
fimul
int3
push
les
sbb
dec
fisub
push
mul
mov
lods
ds
dec
ins
aad
sub
pop
pusha
pop
idiv
ror
int
test
aam
mov
mov
imul
out
(bad)
es
xchg
sub
xor
and
icebp
adc
retf
sub
push
stc
sar
and
push
aaa
outs
not
mov
test
and
pop
xchg
movs
nop
inc
popf
add
stos
jnp
cdq
test
pop
popf
adc
jo
adc
out
dec
shl
lods
mov
push
stos
mov
add
lods
mov
in
cmps
jae
and
arpl
sub
and
enter
aad
sbb
(bad)
adc
out
inc
fcomp
mov
cmps
sbb
bound
jbe
pop
pop
pop
mov
pop
xchg
mov
or
inc
pop
mov
jns
or
out
(bad)
jo
dec
inc
cmp
js
(bad)
push
out
loopne
fild
and
nop
sub
add
pcmpgtd
loope
sbb
fisubr
(bad)
stc
push
push
inc
mov
shl
push
ret
xchg
jecxz
adc
inc
dec
adc
and
or
mov
pop
mov
pmaddwd
mov
leave
ins
jb
neg
adc
(bad)
sub
push
loope
dec
mov
enter
in
push
jp
push
add
scas
pop
xor
xchg
xchg
js
cmp
call
loope
test
push
leave
pop
fild
pop
mov
mov
dec
rcl
cmps
out
add
jo
retf
xor
and
inc
jmp
adc
stos
jne
and
int
imul
jbe
mov
or
mov
add
adc
push
jl
adc
xchg
pop
pop
push
inc
pop
arpl
iret
xchg
jae
jae
xchg
mov
inc
xor
lods
iret
fs
in
sub
mov
sub
std
in
nop
cld
fbld
xchg
sub
enter
imul
ins
mov
test
mov
xlat
sbb
sub
cmp
dec
sar
pop
dec
dec
inc
test
ret
cmp
sbb
in
mov
xchg
sbb
scas
rcl
rol
mov
jns
mov
jb
or
inc
mov
add
js
inc
cld
imul
xchg
loope
add
mov
pop
lods
shl
fimul
fadd
jg
or
jle
int3
push
and
mov
adc
lods
nop
sbb
das
xchg
mov
lea
retf
or
push
(bad)
(bad)
push
mov
inc
mov
std
pop
retf
(bad)
cmp
dec
mov
cmp
push
mov
neg
gs
mov
dec
clc
gs
sbb
(bad)
dec
push
sub
mov
jnp
push
xchg
sti
cwde
adc
icebp
push
jmp
push
mov
xor
and
rol
sar
shl
iret
adc
push
fucomp
loop
mov
mov
int
and
inc
xchg
dec
hlt
fsubp
outs
cmp
xor
fsub
icebp
mov
out
ins
xchg
dec
call
or
lds
stc
lds
or
sbb
(bad)
(bad)
sub
mov
mov
scas
cmp
sbb
cmp
and
loope
popf
adc
or
adc
sub
clc
xor
sub
shr
out
ret
push
neg
inc
and
retf
add
aam
inc
jns
stc
mov
(bad)
adc
add
por
xchg
outs
in
jb
mov
stos
push
ja
mov
clc
es
ret
sub
sar
cmp
pop
or
vpmacswd
mov
xlat
sbb
mov
ins
pop
fcomp
dec
retf
pop
inc
sub
in
mov
and
mov
jo
retf
pop
jmp
jo
stos
lds
pop
shl
outs
js
(bad)
sbb
mov
mov
stos
xchg
cmp
pop
mov
sub
inc
movs
test
aam
cmp
push
jmp
inc
mov
retf
xlat
dec
xchg
or
dec
and
sbb
shl
dec
add
or
jb
mov
sar
jbe
xor
and
fcmovbe
adc
mov
call
addr16
pushf
out
jnp
cmp
inc
sub
dec
cmp
cmp
cwde
adc
dec
inc
aas
test
sbb
hlt
or
adc
push
lods
sti
cmps
(bad)
xor
aam
gs
xor
scas
enter
frstor
es
(bad)
jl
sbb
and
mov
xchg
xor
xor
cld
call
movs
cs
push
ficom
out
and
out
pop
pop
out
xchg
sbb
cmp
ror
jmp
imul
dec
jnp
stos
ja
gs
sub
lock
fisub
sub
push
mov
das
cmp
xchg
xchg
outs
pop
cmp
outs
in
(bad)
pop
jp
or
popa
stc
sti
shr
nop
mov
dec
xor
mov
lahf
or
sbb
in
xor
pop
addr16
add
push
aam
stc
mul
jne
dec
or
(bad)
arpl
inc
scas
and
fnstenv
mov
fdivr
(bad)
mov
xchg
cmc
pop
inc
icebp
cld
dec
cmp
mov
daa
out
fnstenv
lods
imul
adc
arpl
dec
pop
sub
scas
outs
cmps
ret
jne
into
push
movs
add
mov
sub
and
repz
xchg
add
xor
test
stos
outs
cld
test
popf
pop
adc
ds
popa
mov
jmp
movs
add
xlat
mov
add
fdivr
inc
ins
inc
rcl
out
or
pop
ds
cmp
or
inc
mov
or
mov
sub
pop
jns
xchg
dec
lods
cmps
xor
or
jmp
pop
inc
add
ss
fmul
les
sub
scas
stos
cs
push
cmp
add
imul
push
inc
mov
mov
rcl
das
js
sahf
mov
lock
imul
loop
fldz
pop
add
sar
jecxz
jns
adc
cmp
cmp
inc
fadd
inc
shl
test
jg
daa
mov
mov
jmp
sub
std
inc
jb
or
mov
dec
aad
mov
int3
push
repnz
hlt
leave
xchg
inc
sar
push
jp
mov
cli
movs
xchg
jnp
cmps
movs
(bad)
ficomp
out
mov
cs
xor
call
jge
fild
and
loopne
mov
lods
xor
xchg
int
scas
xor
shr
inc
xor
arpl
inc
dec
xchg
les
pop
je
mov
inc
mov
outs
push
pop
mov
mov
and
inc
jmp
push
pop
aam
mov
(bad)
add
fisub
inc
cmp
into
lahf
add
or
cdq
retf
cmp
xchg
dec
cmp
mov
popf
push
loop
xor
pop
in
xor
add
call
xchg
rcr
fist
in
push
dec
imul
jno
xchg
jge
iret
push
inc
data16
fwait
lea
mov
mov
or
cli
pop
lahf
sub
icebp
test
sahf
or
in
hlt
ins
stc
movs
stos
push
and
xchg
dec
jmp
pop
pop
mov
pop
sub
jecxz
pop
cdq
out
ds
push
das
push
out
mov
pop
into
mov
dec
jns
jle
clc
xchg
lods
retf
jo
dec
pop
fld
jg
dec
not
mov
xchg
mov
and
xchg
xchg
sub
or
push
(bad)
sbb
mov
sub
cld
pop
and
or
sbb
sbb
imul
or
cli
adc
xchg
pop
adc
add
ficomp
pop
mov
or
clc
aam
xchg
outs
(bad)
lds
xor
mov
mov
mov
(bad)
mov
sbb
inc
call
pop
aad
and
or
push
pop
xor
loope
add
shr
(bad)
out
dec
call
cmp
ss
push
aad
popf
jge
loop
bnd
call
bound
jno
cmp
jo
xchg
aaa
nop
fwait
sub
cld
sbb
(bad)
frstor
pop
and
sbb
cmps
jl
cwde
retf
test
cmc
mov
(bad)
dec
in
call
pushf
lods
mov
pop
jmp
in
movq
icebp
dec
stos
imul
call
xor
int3
scas
(bad)
push
sub
in
(bad)
sti
add
nop
cmp
bound
fiadd
gs
aam
ret
popa
jb
out
push
sbb
pop
clc
les
pop
shl
pop
scas
stos
aas
popf
jns
arpl
dec
fs
mov
xor
pop
jle
sub
icebp
and
icebp
add
xlat
cmp
dec
jns
sbb
and
movs
iret
mov
lock
scas
sub
cmps
xchg
adc
or
out
out
mov
aad
enter
lock
leave
leave
stc
fistp
inc
mov
adc
mov
repz
adc
pop
cmp
pop
inc
cwde
push
xchg
daa
xchg
js
lahf
cmp
sub
cmp
adc
jle
xor
retf
push
fist
adc
pop
jns
inc
lods
int
loopne
mov
inc
push
movs
lahf
ret
sub
sub
push
or
outs
fcom
imul
cvttps2pi
sub
addr16
mov
mov
popa
xchg
pop
mov
xchg
hlt
pop
xor
loop
lahf
push
hlt
or
sub
sbb
(bad)
adc
ins
test
mov
sbb
inc
push
and
sbb
sub
cld
mov
mov
pop
imul
sti
dec
out
pop
aaa
test
(bad)
cmp
xor
loope
jno
ret
call
mov
or
mov
xor
dec
cdq
mov
mov
test
test
pslld
cmp
add
imul
aaa
pop
pop
or
movs
jl
shl
mov
jl
(bad)
mov
sbb
stos
sbb
stc
cmp
cmp
adc
pop
jb
push
or
and
add
test
mov
jg
loope
pop
icebp
inc
stos
js
mov
scas
and
cmp
cli
iret
cmps
mov
and
push
and
push
mov
lock
pop
repz
or
mov
xchg
std
ja
jb
aas
arpl
push
(bad)
dec
adc
sub
add
xor
(bad)
(bad)
sub
add
jb
cmp
out
pop
jne
fdiv
jg
push
cmp
mov
cwde
shl
int3
lds
pop
pop
pop
movs
fmul
push
imul
imul
and
adc
fimul
(bad)
ja
and
cmp
push
inc
cli
fs
icebp
les
test
and
pop
out
rol
sub
mov
xor
gs
cmp
imul
pop
mov
es
(bad)
jp
inc
adc
std
ret
mov
pop
mov
pop
pop
and
sahf
sbb
mov
loope
aaa
xchg
dec
scas
ror
xlat
xor
mov
xchg
inc
sub
and
push
pop
sbb
dec
out
loope
dec
pop
adc
pop
jo
fwait
gs
dec
(bad)
nop
(bad)
push
pop
push
push
(bad)
dec
xchg
push
shl
dec
test
jno
inc
pushf
pop
cmp
jno
es
icebp
cmp
xchg
int3
call
js
rcl
jnp
jl
xchg
daa
loop
(bad)
into
(bad)
jb
imul
inc
lahf
das
in
je
int
push
dec
jge
out
lock
popa
xor
cli
fnsave
(bad)
movs
push
or
fst
movs
cdq
(bad)
sbb
fwait
and
sub
out
push
adc
adc
in
jnp
outs
fistp
mov
cmps
push
mov
add
(bad)
hlt
adc
sahf
mov
sub
mov
ficom
jo
and
adc
push
rcr
pop
xchg
adc
jl
mov
jo
cmp
out
mov
cwde
xor
jb
out
and
xor
fs
pop
aas
sub
pop
shl
push
pop
push
sahf
repz
pop
retf
mov
repz
shl
imul
js
outs
sar
in
ds
int
jecxz
aam
enter
test
ficomp
daa
scas
push
out
sbb
shl
in
mov
outs
cdq
add
or
adc
adc
inc
xor
cmp
aas
repz
ret
scas
repz
jmp
out
icebp
pop
aad
nop
add
add
push
cwde
adc
cs
ficomp
nop
dec
cwde
jp
call
jge
jbe
cmp
pop
dec
mov
enter
xchg
(bad)
pushf
push
jmp
or
fistp
mov
dec
push
fsubr
test
push
mov
and
cmc
push
stos
nop
cmps
clc
and
pusha
jb
call
test
ret
fwait
scas
retf
push
inc
add
rol
mov
loope
jp
test
mov
mov
add
clc
add
mov
sti
outs
or
lock
jo
outs
push
outs
jno
lods
test
and
cld
shr
inc
push
mov
mov
stos
aaa
imul
adc
jp
mov
clc
pop
sbb
mov
dec
aaa
imul
jno
cmps
in
jmp
mov
fstp
loop
push
inc
loop
mov
mov
and
mov
aad
mov
popa
inc
xor
cli
les
jl
gs
repz
leave
mov
(bad)
jle
(bad)
dec
adc
add
stos
push
neg
mov
adc
pop
add
jmp
lods
inc
lods
mov
jbe
inc
jne
lods
xor
mov
sbb
cli
fstp
sub
sbb
fcmovnb
int
xchg
dec
enter
inc
adc
mov
xchg
pop
mov
push
shr
pushf
xchg
dec
jns
sub
mov
mov
sub
pop
or
xor
pop
movs
mov
and
add
cmps
scas
dec
loop
jmp
xor
mov
mov
out
gs
jb
pop
retf
mov
cdq
fidiv
jns
stc
movs
xchg
rol
icebp
loopne
rol
pop
pop
scas
xchg
shl
dec
cs
maskmovq
push
mov
sub
push
stos
or
xchg
inc
(bad)
jl
cmp
cmp
pop
int
inc
sub
mov
out
push
sub
retf
and
pop
cmps
test
and
sub
stos
into
or
lahf
push
fs
sbb
and
inc
cmp
and
jmp
(bad)
sbb
das
lahf
pushf
scas
jb
push
int
cmp
push
pusha
gs
inc
sub
xchg
jae
add
arpl
mov
cmps
gs
aad
rcr
lds
xor
(bad)
sub
cs
cmp
pop
mov
in
push
aaa
out
ret
xchg
test
mov
push
or
add
pop
and
cli
ret
(bad)
call
jle
pusha
js
add
hlt
scas
sbb
xor
imul
loop
out
retf
jl
sub
or
fdivr
das
lds
jl
out
xor
dec
stc
aaa
test
inc
xor
xor
adc
aam
jo
xchg
imul
ins
jge
push
or
ins
and
hlt
push
test
fwait
adc
mov
mov
mov
mov
sar
fsub
dec
add
(bad)
jecxz
xchg
and
mov
inc
adc
stc
add
loope
(bad)
int3
fild
aad
sahf
jnp
pop
retf
dec
jbe
push
mov
add
aad
jbe
arpl
xchg
aad
or
push
not
inc
out
sbb
sub
stc
fistp
sbb
jmp
inc
fst
cmps
(bad)
cmp
idiv
into
iret
add
push
imul
and
jp
adc
mov
test
sti
jb
mov
(bad)
and
inc
mov
or
mov
pop
cmp
fild
es
loopne
inc
and
inc
call
jecxz
retf
inc
es
or
mov
pop
mov
dec
mov
loope
mov
mov
mov
in
xor
imul
mov
ror
lahf
cdq
fnsave
fsubp
cmps
mov
mov
dec
neg
inc
jb
mov
cld
xor
mov
push
add
retf
ins
or
and
lds
xlat
loop
and
test
aam
jecxz
(bad)
cwde
dec
or
cli
mov
mov
cmp
mov
repnz
and
lods
xchg
mov
ja
movs
inc
jge
std
(bad)
fisub
rcr
inc
pop
gs
call
fstp
inc
cwde
push
add
cmp
jl
test
xchg
push
push
call
pop
add
popf
xchg
int3
lea
icebp
jne
mov
mov
or
enter
stc
push
cmc
sbb
sar
adc
push
cli
xchg
pop
inc
xor
out
out
(bad)
xchg
adc
lock
add
adc
fcmovu
fucom
rcpps
repz
js
adc
int
add
cmp
sbb
fldcw
sub
stos
xor
addr16
xlat
retf
push
cmc
fmul
bound
stos
js
sti
outs
push
sub
cs
out
push
loopne
dec
mov
xor
fcmovne
pop
push
das
outs
dec
daa
fmulp
out
popf
lods
xchg
and
ret
cmp
jp
sub
xor
adc
push
das
push
retf
fnstcw
scas
call
mov
movs
pop
mov
fdivr
and
mov
xchg
mov
repz
jnp
inc
(bad)
sahf
push
mov
mov
mov
fucomip
adc
out
push
mov
push
scas
cmp
daa
and
ss
ror
ret
pop
sahf
push
(bad)
xchg
xlat
mov
sahf
jb
mov
mov
imul
aad
mov
in
pop
out
mov
xor
and
mov
fstp
sub
movs
dec
pop
push
fistp
xchg
push
xor
xchg
mov
in
ins
pushf
and
mov
lods
enter
leave
jnp
cmc
loopne
stos
xor
push
shl
in
sbb
ins
outs
or
pusha
mov
cs
sti
lock
push
ja
das
cmp
jns
mov
pop
dec
int
mov
push
das
popf
ins
inc
imul
jb
mov
add
jecxz
js
iret
mov
(bad)
int3
out
fs
cmp
hlt
mov
and
cmps
and
(bad)
inc
pusha
cmp
rol
or
pop
fldcw
addr16
in
adc
push
push
sahf
mov
xchg
and
mov
dec
xchg
mov
in
mov
mov
mov
stos
push
jmp
mov
push
xor
out
or
or
and
cmc
dec
mov
les
xor
and
sahf
fwait
add
mov
cmp
push
and
mov
jmp
dec
movs
jmp
lods
sbb
inc
pop
scas
mov
daa
mov
leave
outs
mov
mov
xor
inc
sar
sbb
mov
mov
xor
xchg
popf
push
pop
mov
cmp
and
cmc
mov
inc
dec
mov
fwait
retf
xor
mov
movs
and
mov
pop
lea
cli
stos
jnp
push
(bad)
push
dec
fisttp
out
rol
mov
nop
mov
jo
popa
in
das
mov
or
ds
cld
icebp
out
aam
rcr
xor
inc
cmp
inc
fstp
imul
aad
xor
sub
mov
mov
dec
addr16
add
inc
jns
arpl
xor
cmps
enter
mov
into
pushf
cli
mov
xor
and
xor
test
stos
sbb
sub
push
cmps
push
lds
mov
call
in
jecxz
xchg
or
push
jge
in
pop
das
jns
inc
add
inc
add
add
sub
adc
jnp
ds
ins
das
das
or
ja
and
fcmovnu
cmp
pop
hlt
shl
push
cmp
mov
loop
rol
iret
out
sar
add
jg
and
loope
call
fst
gs
pushf
xchg
aam
add
sbb
dec
mov
xchg
mov
in
clc
or
add
sub
mov
ret
fwait
cld
jbe
dec
pop
data16
lods
sub
inc
xor
fbstp
fs
push
push
add
sub
sub
xor
adc
inc
int3
test
arpl
loope
mov
push
mov
loop
inc
cwde
xchg
aam
cmp
mov
jge
pop
add
jge
fld
inc
loopne
nop
sub
test
dec
sbb
data16
and
je
and
aad
into
std
leave
sahf
jp
mov
and
(bad)
mov
mov
stos
cmp
int
xor
fisub
out
imul
jnp
in
pop
pop
fadd
ss
pop
mov
dec
shl
dec
mov
fst
jb
out
sbb
lods
cmp
push
mov
rcr
push
out
fwait
out
into
adc
and
dec
clc
or
ds
dec
cs
(bad)
jmp
jg
pop
lods
push
and
jg
or
adc
inc
out
out
inc
dec
aam
or
cmp
repz
mov
in
je
movs
push
xchg
xchg
fdivr
mov
or
jns
aaa
bound
lock
out
out
dec
ret
scas
lahf
or
mov
push
cwde
sbb
push
jmp
repz
(bad)
mov
nop
add
xchg
lahf
sbb
sbb
or
test
(bad)
lods
xor
outs
std
mov
add
inc
mov
loop
add
cmps
mov
test
cmp
mov
cmc
mov
leave
data16
dec
push
dec
mul
pop
xor
dec
push
xor
(bad)
adc
lods
dec
xchg
rol
jo
push
fist
add
add
mov
popf
cmp
pushf
fsub
int3
cmp
pop
pusha
and
pop
pusha
mov
fisttp
mov
dec
jbe
(bad)
out
fdivr
push
push
test
into
mov
movs
fistp
arpl
cs
xchg
pop
mov
hlt
xchg
aas
aas
sub
inc
push
stos
xor
je
pop
ror
(bad)
(bad)
(bad)
mov
ret
repnz
test
ds
lahf
stos
test
adc
cs
test
not
dec
dec
cmp
movs
pop
pop
ins
adc
jbe
into
shl
sub
jmp
xchg
mov
mov
leave
or
adc
sbb
jp
mov
jg
pop
call
(bad)
(bad)
fnstsw
sbb
add
stc
push
add
(bad)
jge
sbb
pop
les
es
jge
dec
icebp
pop
rcl
out
gs
xor
xor
cmp
scas
lahf
pop
and
sub
inc
xor
ins
(bad)
and
loop
push
scas
sub
cs
lock
out
(bad)
xor
mov
cmp
and
or
mov
cmps
or
cmp
icebp
and
push
inc
dec
add
jne
in
cmp
push
inc
daa
pop
jno
lahf
out
inc
gs
bound
push
mov
(bad)
mov
add
adc
ret
aam
adc
pop
push
je
mov
sahf
imul
bound
dec
hlt
loope
push
cmp
push
xor
dec
sub
jmp
jmp
(bad)
add
mov
pusha
pushf
call
jno
cmp
ds
lods
sahf
jmp
sbb
rcl
push
pop
in
adc
sti
jl
mov
mov
adc
pop
add
das
jge
dec
pop
rol
mov
(bad)
cmps
sbb
xchg
jle
loope
or
and
mov
ss
stos
xchg
cmp
push
mov
lahf
(bad)
sahf
pop
cmps
jb
retf
(bad)
mov
xor
nop
jns
cmp
add
cmp
daa
add
loope
jno
or
inc
jbe
data16
cwde
jno
pop
call
mov
addr16
mov
test
mov
jge
jns
adc
add
(bad)
je
lea
clc
test
call
xchg
mov
sub
jmp
push
sub
outs
dec
dec
test
and
addr16
lock
mov
pushf
mov
pop
jge
push
push
imul
add
(bad)
add
lahf
test
and
mov
cld
pop
push
pop
push
cmp
add
cmp
jmp
xchg
add
jmp
mov
aas
add
mov
cmps
cmp
ret
fcomp
add
cld
popa
push
push
cmp
mov
push
aad
mov
call
pop
retf
add
cmp
dec
add
fucomi
neg
ret
imul
ret
push
and
cwde
xchg
cdq
sar
dec
xchg
sbb
pop
out
pop
(bad)
xor
cmp
mov
mov
fdiv
call
imul
movs
jne
push
pop
fld
inc
xchg
xchg
mov
cld
and
sar
ror
mov
or
inc
int
sub
sub
mov
jle
or
push
imul
scas
clc
sub
or
lods
ja
scas
ja
stc
and
out
sbb
and
imul
(bad)
inc
push
push
inc
mov
inc
fnstcw
fist
stc
lock
mov
inc
mov
movs
push
pop
cmc
jno
cmps
mov
(bad)
lock
test
cmp
fs
hlt
int3
movs
xchg
sbb
xor
fsub
push
ss
shr
jo
inc
ficomp
xor
or
push
(bad)
arpl
pop
mov
or
inc
sar
cmp
add
mov
jns
sbb
dec
icebp
sbb
das
mov
mov
sub
mov
and
movs
stos
ds
xchg
push
mov
mov
sub
cdq
mov
cmp
mov
movs
fld
adc
rcr
lea
inc
js
dec
jno
push
jmp
xchg
sti
sbb
fdivr
and
outs
or
jns
addr16
adc
pop
dec
ret
dec
mov
inc
add
popa
(bad)
cmc
add
into
inc
cmps
out
(bad)
xlat
xchg
(bad)
cmps
adc
and
in
int
fs
cwde
std
(bad)
sahf
xchg
pop
fidiv
popa
das
sub
adc
inc
mov
das
and
(bad)
pushf
pop
xchg
cmp
cmp
and
jae
arpl
pusha
(bad)
jmp
dec
fimul
dec
imul
jnp
cld
out
ds
cld
aad
loopne
ins
test
cmp
out
lods
xor
ret
cmp
or
movs
retf
sub
cmp
sub
test
nop
stos
jmp
xchg
popf
xor
inc
shl
pop
or
mov
stc
rcl
jmp
aaa
test
jo
xor
mov
xchg
push
ffree
jmp
jo
pop
cmps
fisttp
and
in
dec
les
outs
mov
pop
xchg
hlt
fs
and
xchg
or
out
call
inc
fwait
mov
add
pop
ja
xchg
xor
jno
icebp
(bad)
ja
inc
pop
sub
or
sub
mov
stos
push
mov
ret
sub
ss
jne
inc
jb
movs
cs
sbb
enter
ror
popa
fucomi
mov
scas
sbb
sbb
in
out
sti
add
pop
sub
sub
repnz
dec
or
adc
scas
inc
pop
dec
push
cld
lahf
jmp
push
fnstcw
shl
and
ret
test
add
mov
jae
or
push
cli
ja
jmp
mov
adc
adc
pop
not
stos
pop
or
mov
or
sbb
fsub
je
nop
add
fild
bound
(bad)
fisub
jns
not
xchg
jne
jge
(bad)
mov
sub
ret
loope
dec
mov
xor
xor
xor
push
ss
dec
jle
jnp
popf
popf
mov
pop
(bad)
movaps
lds
xchg
xor
xlat
dec
sub
les
pop
les
outs
popf
idiv
scas
je
jbe
push
neg
add
push
push
inc
in
(bad)
adc
jae
mov
push
pusha
sbb
xor
xchg
cmp
mov
shr
je
cli
jmp
adc
cs
nop
ja
call
sbb
mov
outs
daa
popf
stc
push
xchg
movs
adc
out
cmps
mov
movs
pop
push
jmp
inc
sbb
add
sbb
sub
cwde
rcl
mov
sub
xor
fdivr
dec
jmp
mov
and
or
test
in
xchg
mov
adc
(bad)
sti
inc
xor
(bad)
push
pop
sbb
fld
dec
cwde
xor
outs
fidiv
sub
fidiv
sbb
pop
xor
add
out
add
das
jmp
xchg
push
jo
outs
pop
push
(bad)
ficomp
repnz
out
sbb
xchg
movs
out
jecxz
fdiv
push
je
icebp
or
add
sbb
adc
xor
pop
mov
inc
sbb
outs
push
repnz
add
shl
and
clc
aad
or
loopne
mov
jmp
jo
jns
cli
and
dec
inc
push
stos
pushf
test
std
xchg
imul
xchg
bnd
sub
jae
and
add
cmps
and
inc
adc
push
cli
stos
adc
push
xor
dec
dec
fwait
xchg
mov
retf
stos
cmp
and
mov
arpl
or
jnp
add
frstor
xor
rcr
mov
mov
stc
cdq
dec
test
cmp
dec
inc
and
add
movs
stos
dec
into
aad
xor
add
movs
dec
jno
adc
dec
push
test
mov
in
push
push
in
ins
xor
mov
jecxz
rcr
shl
inc
(bad)
xor
fild
iret
pusha
mov
sub
stos
mov
cmp
(bad)
jg
mov
in
push
lock
call
(bad)
and
xchg
int3
popa
bound
stos
pop
in
pop
and
(bad)
fist
inc
add
lahf
add
jecxz
pop
mov
sar
sahf
jge
cwde
push
fstp
into
arpl
out
dec
xor
lods
add
mov
xor
pop
or
jae
push
mov
das
aas
cmc
and
adc
pop
rcr
cs
dec
cwde
jmp
xor
(bad)
and
mov
mov
fadd
repz
shr
mov
mov
add
adc
cmp
jbe
stos
or
stos
push
in
push
test
mov
xchg
retf
jge
fld
mov
out
xchg
sub
test
dec
jbe
sub
sub
mov
mov
xchg
lods
mov
pop
imul
xor
sbb
xchg
inc
in
mov
aam
imul
mov
sbb
neg
sbb
call
outs
icebp
pop
call
xchg
jmp
in
jg
icebp
mov
push
adc
sub
(bad)
lock
xor
popa
cmps
ficomp
push
or
ret
dec
stos
das
push
test
sub
enter
dec
adc
ficomp
fdivr
test
(bad)
mov
outs
ins
cmps
mov
push
in
retf
leave
xchg
mov
push
bnd
sar
pop
rcl
jae
xor
neg
fdiv
std
xchg
xor
pop
push
fwait
ror
aam
or
in
pop
jge
ja
dec
push
lahf
mov
lea
jp
jle
imul
inc
mov
mov
xchg
mov
and
sub
sbb
adc
xchg
and
push
loop
inc
xchg
icebp
retf
aam
mov
sar
or
stos
sub
sub
imul
adc
test
xchg
ja
adc
jge
push
jbe
dec
pop
sub
mov
xchg
hlt
adc
adc
dec
dec
pop
mov
sub
mov
fdivr
mov
ja
sub
sub
cs
fnstcw
aad
int3
xor
and
cmp
out
add
add
test
(bad)
jp
stos
cmp
mov
jecxz
gs
repnz
cmps
pop
out
inc
(bad)
cli
pusha
in
icebp
(bad)
mov
(bad)
jmp
fmul
sbb
xchg
clc
jbe
jnp
scas
mov
scas
cmp
int3
call
xor
cmps
mov
shl
or
sub
sar
fwait
cmc
push
pop
jae
fsubr
or
jp
cmp
jecxz
pop
pop
jb
lahf
mov
and
xchg
push
pop
cmp
stc
push
out
adc
xchg
xor
movs
scas
imul
or
or
lahf
sbb
stos
loopne
jmp
adc
mov
icebp
cmp
frstor
je
out
retf
or
fdivr
inc
rcl
fistp
sbb
add
shl
lock
sub
cmp
stc
mov
dec
popf
pusha
popa
jnp
cmp
lea
sub
faddp
or
mov
and
pop
jo
xchg
aas
xor
sbb
mov
fsub
ja
dec
pop
and
ss
and
fmul
movs
movs
xor
jno
bound
jmp
add
jp
add
jns
jae
sti
adc
jo
or
xor
arpl
jl
ss
stos
inc
mul
out
stc
icebp
pushf
xchg
cmp
push
mov
call
jnp
add
shl
adc
out
mov
cmps
mov
xchg
fimul
and
cmp
(bad)
mov
std
std
aas
jb
cmp
arpl
sahf
push
jns
push
movs
es
(bad)
(bad)
dec
mov
push
scas
shr
xor
ds
pop
xor
lods
cmc
popa
bound
popa
out
push
mov
pop
sbb
pushf
outs
and
fmul
addr16
or
shl
pop
(bad)
push
into
ds
jo
fcomp
pop
jl
mov
fwait
xlat
xchg
lods
mov
push
repz
hlt
add
lea
dec
in
lods
xchg
aaa
adc
shr
repnz
jno
sbb
adc
aad
lea
fs
xchg
push
out
lock
mov
fdiv
ins
mov
cdq
add
inc
and
(bad)
adc
stc
mov
imul
leave
inc
cmp
inc
in
movs
inc
jbe
retf
and
repz
jmp
loop
dec
punpcklbw
xchg
or
sbb
jp
arpl
jmp
test
loopne
mov
and
pop
arpl
mov
xor
in
xchg
xchg
pop
push
loop
clc
xor
loope
fcom
sti
jge
pop
icebp
test
add
inc
aam
mov
ja
stc
popf
jb
pop
shr
rcl
sub
stc
xlat
sbb
retf
add
jae
jae
in
mov
and
pushf
je
aad
inc
mov
das
mov
inc
ret
out
pop
fld
pop
lahf
lahf
movs
xchg
js
cwde
xor
add
dec
fcomp
mov
fs
inc
xchg
sub
(bad)
in
loopne
push
pop
loope
fcomip
rcl
(bad)
out
stos
dec
mov
jne
call
in
scas
xchg
xchg
push
dec
jmp
lahf
sub
dec
push
je
mov
xchg
cmp
inc
sbb
outs
pop
add
mov
sub
push
lods
cmp
mov
fisub
and
repnz
or
js
int
out
or
int
xchg
add
xchg
xchg
or
mov
xchg
out
cmc
inc
in
xchg
cmp
cwde
lods
movs
or
rcl
add
mov
push
dec
aad
pushf
lahf
add
pushf
fnstsw
not
mov
(bad)
cmp
mov
(bad)
cs
int
out
xchg
(bad)
in
fadd
leave
adc
xchg
lods
inc
and
outs
int
(bad)
lods
pop
sub
gs
in
stos
std
mov
mov
mov
(bad)
outs
or
fwait
enter
jmp
add
xchg
pop
test
add
pushf
sti
out
call
mov
xchg
pop
sub
pop
inc
ja
(bad)
mov
dec
call
imul
add
arpl
jne
mov
mov
cwde
daa
sub
dec
cmps
test
cdq
and
push
or
cmp
lock
lea
test
outs
xchg
movs
jae
lock
sub
add
jmp
xor
pop
cmp
and
not
pop
repnz
sub
movs
dec
(bad)
jmp
and
pop
xlat
pop
add
pop
dec
leave
test
mov
test
xor
mov
movs
dec
test
jno
and
loop
pushf
adc
leave
outs
leave
pushf
xchg
loope
mov
movs
popf
xchg
pop
push
cmp
jle
arpl
xor
jge
pusha
sub
mov
ret
inc
mov
sbb
dec
mov
cmps
xchg
dec
retf
(bad)
pop
xor
rcr
sbb
or
jmp
pop
lahf
pop
popf
movs
xchg
pop
outs
int
adc
fdivr
jg
adc
add
add
mov
call
outs
(bad)
push
je
pop
std
mov
cmp
je
sub
repz
inc
jmp
jmp
sbb
inc
xor
xchg
pop
iret
into
retf
test
movs
sahf
jl
aam
in
lds
nop
clc
lods
push
mov
mov
pop
push
arpl
scas
xchg
repnz
(bad)
jg
test
test
inc
imul
ss
cmp
mov
dec
mov
sub
jb
sub
rcl
and
mov
push
mov
jne
adc
gs
not
sub
ror
loope
xor
js
fiadd
aas
(bad)
je
leave
or
add
mov
bound
cmp
(bad)
mov
mov
nop
push
addr16
mov
xchg
iret
cwde
retf
mov
cmp
nop
mov
lea
pop
in
fadd
mov
ret
cmp
push
mov
cli
cmps
cmp
and
(bad)
inc
pop
xchg
gs
rol
fnstsw
mov
mov
mov
pop
jmp
adc
sub
sbb
and
shl
mov
stc
pusha
mov
pop
in
icebp
cmp
push
(bad)
inc
and
loopne
inc
test
dec
add
sar
xor
sbb
mov
pushf
mov
rcr
xchg
and
push
fist
mov
and
adc
sar
scas
sti
jl
lock
aam
push
aam
sub
mov
and
cdq
std
add
mov
fldenv
xchg
shl
xchg
sar
ficom
imul
or
addr16
test
je
jecxz
loope
jl
xlat
loop
in
fs
xor
cmp
lods
inc
inc
dec
gs
jle
(bad)
inc
adc
lds
repz
and
in
jbe
outs
loopne
jbe
aaa
jb
mov
retf
cmc
bound
in
jns
jg
and
inc
mov
or
and
iret
(bad)
(bad)
ins
xchg
test
mov
outs
stos
ret
mov
sbb
nop
enter
into
adc
and
xor
int
mov
call
ins
or
dec
pop
sbb
adc
dec
(bad)
outs
xor
add
fadd
daa
mov
clc
mov
cmp
jmp
loop
les
scas
pop
not
inc
into
stc
jb
fdivr
rcr
xchg
aas
jne
cmp
fwait
inc
mov
int
pop
ds
add
mov
xchg
jbe
out
aas
bound
inc
and
inc
scas
mov
sahf
add
dec
mov
adc
jg
jmp
inc
mov
cdq
mov
jmp
movs
mov
jp
leave
push
ja
pusha
xor
jp
mov
stos
pop
fiadd
cmp
inc
clc
ins
call
and
repz
js
pop
imul
cmp
test
cli
(bad)
mov
bound
imul
lods
mov
and
cdq
jmp
mov
jge
outs
stos
push
and
jp
push
cmp
jb
fwait
adc
(bad)
(bad)
adc
imul
cli
shl
call
loope
cmp
cmp
aas
out
mov
in
inc
cmps
mov
outs
mov
dec
fld
movs
push
outs
repnz
add
fild
shl
and
shl
cmp
mov
ret
hlt
es
add
push
ror
sbb
push
mov
out
daa
cmp
dec
and
push
adc
fxch
int3
cmc
aam
xchg
push
push
jns
int
out
mov
pusha
pop
dec
ja
dec
pop
fadd
mov
jle
push
add
add
inc
(bad)
push
test
cmp
or
dec
fstp
mov
mov
mov
cmp
movs
mov
or
sbb
imul
add
inc
inc
add
dec
inc
popa
sub
adc
repnz
ret
out
test
push
lea
jle
nop
xchg
lock
mov
mov
mov
cmps
popf
rcr
mov
not
movs
fiadd
pusha
dec
add
push
dec
dec
cli
data16
bound
adc
mov
xor
inc
jmp
or
es
into
mov
dec
fchs
sbb
data16
lock
dec
mov
mov
jns
test
ds
aaa
cmp
mov
les
push
dec
xchg
pushf
jge
(bad)
loopne
push
sub
ret
int3
ja
xor
push
pop
dec
adc
fs
sahf
cmp
mov
jns
sbb
xchg
mov
xchg
retf
mov
repnz
jno
(bad)
pop
or
or
sub
add
enter
jnp
les
jmp
ret
in
jl
jbe
lea
or
fistp
call
pop
add
(bad)
arpl
or
xchg
pop
popa
not
jbe
cli
dec
cld
pop
movs
out
pop
adc
jmp
push
and
mov
jp
sub
pop
arpl
cld
sti
int3
jno
das
loopne
fcom
test
lods
xor
movs
mov
push
or
pop
adc
sub
scas
mov
add
jl
lahf
and
adc
lds
bnd
or
add
and
add
loope
rol
in
sbb
popf
cs
ror
and
stos
fld
adc
and
mov
test
fsubr
push
xchg
cmp
ret
sbb
fsub
add
add
popa
stos
cmp
clc
imul
mov
loope
and
mov
or
mov
adc
mov
mov
pop
cmp
arpl
mov
adc
out
cwde
mov
data16
dec
seto
adc
xor
movs
in
test
int3
into
jnp
jo
mov
aas
es
push
push
fisub
pop
cmp
inc
mov
inc
enter
push
imul
mov
xchg
repnz
leave
mov
pop
gs
cmp
cmp
add
jno
or
mov
mov
and
push
test
add
fs
sahf
or
(bad)
and
(bad)
dec
push
retf
xor
push
lahf
mov
xor
test
pop
int3
xor
sub
cmps
pop
(bad)
clc
xor
push
(bad)
out
add
adc
jo
scas
sub
pushf
push
(bad)
cld
push
or
push
gs
sub
xor
mov
cmc
std
push
jg
lods
repnz
jnp
bound
cmc
call
leave
repnz
dec
cli
add
icebp
in
or
and
sbb
leave
jecxz
mov
dec
mov
add
fdiv
pop
pop
fisubr
mov
or
and
jmp
inc
cmp
shl
cli
fcomp
add
xchg
ins
xor
js
sahf
std
xor
retf
ss
adc
test
ds
mov
inc
dec
jae
hlt
jmp
add
cmps
leave
jne
jp
out
ins
data16
shr
add
retf
bound
popf
das
fisttp
mul
mov
dec
mov
fiadd
shr
gs
clc
pop
jle
jae
jnp
mov
dec
lods
mov
mov
push
aaa
add
mov
add
jno
enter
dec
rcr
mov
test
push
in
push
inc
mov
pop
jle
in
jle
adc
adc
jno
jbe
cmps
and
xchg
stos
rol
jge
idiv
inc
rcl
ror
sub
dec
cld
cmp
mov
mov
mov
imul
aas
and
ja
inc
bound
xchg
xchg
dec
sar
xlat
xchg
add
dec
dec
sbb
push
dec
imul
inc
scas
inc
mov
xor
mov
lahf
pop
xchg
ins
mov
cdq
mov
repz
mov
rcl
pushf
std
pop
sub
les
pop
mov
add
retf
fiadd
add
mov
cmp
mov
pop
push
mov
lock
cmp
jmp
rcl
jl
cld
xor
in
dec
inc
fcmovb
cmp
outs
xlat
mov
xlat
jns
sahf
sbb
test
dec
(bad)
dec
scas
jb
xchg
in
in
jl
test
jp
test
aad
std
cli
mov
dec
pop
xlat
dec
adc
fisubr
mov
and
popf
add
mov
adc
inc
fist
push
loop
pop
jl
xor
retf
(bad)
repz
push
ins
jmp
shl
adc
mov
ja
sub
out
aad
daa
pusha
les
xchg
push
sub
push
je
jmp
imul
imul
xchg
jg
pop
mov
dec
cmp
mov
call
pushf
clc
lds
test
mov
pop
repnz
pop
mov
push
xchg
(bad)
and
cmp
out
cdq
cmps
pusha
inc
and
fwait
rcr
push
mov
inc
fisub
adc
test
cmp
shl
arpl
push
fisttp
js
push
add
fidivr
xlat
in
push
inc
dec
cmps
xchg
aaa
push
cmp
retf
mov
jne
das
pusha
mov
call
pushw
mov
dec
lods
loopne
mov
dec
int3
(bad)
push
loopne
dec
cdq
jns
das
cmp
retf
bound
pop
aam
inc
test
add
xchg
dec
add
call
dec
sub
jge
lods
xchg
int
xchg
jmp
mov
mov
ret
(bad)
and
xchg
lock
pop
sub
gs
mov
or
mov
mov
sti
pop
enter
ins
inc
aam
leave
xchg
loope
jno
xchg
ror
push
mov
push
mov
mov
sti
outs
retf
cmp
out
fidiv
mov
(bad)
cmp
or
(bad)
out
sub
mul
add
xchg
test
inc
dec
jmp
mov
scas
pusha
pop
pushf
sbb
dec
cmp
sar
sub
arpl
outs
or
rcl
stc
imul
mov
adc
dec
out
in
mov
add
stc
scas
push
lds
mov
jns
imul
adc
cmp
mov
cmc
pop
out
push
jmp
idiv
shl
and
push
test
fwait
ja
das
test
mov
pop
push
dec
push
fnstenv
push
lea
mov
adc
xchg
stos
clc
push
xor
mov
push
push
or
into
jmp
push
pop
retf
aaa
kmovw
leave
adc
pop
dec
pop
jnp
sbb
mov
push
aaa
imul
shr
idiv
mov
dec
fdiv
outs
mov
aas
aad
out
pop
retf
int
xlat
push
push
jb
cld
inc
sahf
add
(bad)
outs
das
jb
div
adc
test
jle
mov
gs
mov
jnp
pusha
repz
es
test
sub
ins
sub
(bad)
dec
imul
lock
aam
loopne
stos
jle
xlat
sub
cdq
push
mov
sbb
add
fcom
pop
xchg
call
loop
idiv
and
out
enter
and
and
outs
jnp
pop
mov
lods
inc
scas
xor
je
add
repz
fs
sbb
das
cmps
(bad)
mov
mov
dec
pop
lds
iret
pop
sub
cmp
mov
xchg
mov
popf
mov
lods
test
sub
jg
push
push
loopne
das
ror
cmps
mov
inc
ret
dec
outs
sbb
fist
shr
xor
je
jp
adc
jge
cmps
loope
mov
test
std
and
je
cmp
or
ja
xchg
mov
adc
cmc
test
mov
fwait
nop
adc
pop
call
sub
adc
cmp
loope
xor
sub
push
int3
xor
out
jmp
jecxz
aas
out
je
aaa
jecxz
shr
inc
xor
jne
add
inc
pop
mov
loope
add
loopne
in
gs
and
lds
jne
daa
sbb
and
adc
xchg
movs
mov
cbw
xor
nop
sbb
jae
data16
data16
push
dec
out
iret
call
cmp
xchg
movs
adc
ja
cmp
xchg
ds
test
lahf
add
fldcw
aam
sub
inc
sbb
dec
sbb
xor
and
imul
dec
mov
inc
(bad)
addr16
dec
push
imul
push
outs
jge
xor
mov
aas
shl
loop
cmp
and
cmc
jg
push
sbb
mov
je
jg
div
sbb
cmp
dec
pop
sbb
daa
fmulp
push
ss
movs
popf
fsubr
fimul
into
mov
push
sbb
mov
mov
(bad)
fs
pop
fidivr
or
jo
frstor
ror
lods
mov
jno
pop
ror
sbb
sub
stc
pusha
sbb
inc
scas
hlt
mov
movs
cmp
sbb
(bad)
fadd
movzx
(bad)
sbb
sbb
cld
inc
pop
add
fistp
xor
xchg
mov
(bad)
leave
(bad)
xchg
cmp
call
mov
sar
and
(bad)
and
inc
push
stos
cmp
push
in
or
js
std
inc
bswap
sub
pop
mov
dec
push
add
outs
leave
push
pop
mov
les
ret
sub
cmp
xchg
int3
rcl
ret
jnp
inc
lds
ss
popf
mov
iret
adc
stc
xchg
push
add
in
sub
add
or
cmps
sub
xchg
xchg
(bad)
fcmovu
out
ret
in
cli
clc
and
jae
cmps
jecxz
(bad)
adc
pop
mov
fstp
ret
cmp
add
push
jno
cmp
loope
scas
into
mov
xor
mov
or
push
test
test
cmp
or
mov
outs
lods
ret
mov
jno
lods
cmp
test
fmul
scas
div
pop
xor
call
in
sysexit
mov
xor
rol
mov
sub
sub
jns
fsubr
jmp
outs
dec
jge
mov
inc
xor
push
pop
ficomp
lea
jge
pop
repnz
adc
or
jecxz
mov
cmp
adc
xor
sub
lock
sub
int3
aad
cmp
xchg
iret
push
out
jb
fist
jg
pushf
adc
inc
cmp
(bad)
fmul
mov
or
and
and
add
inc
outs
add
xchg
dec
mov
(bad)
imul
arpl
mov
imul
dec
dec
push
imul
enter
add
xchg
dec
adc
int
inc
jp
dec
shl
and
(bad)
jb
fs
daa
lea
adc
scas
dec
mov
rol
and
ret
jle
adc
test
mov
pusha
call
or
mov
add
aad
ret
in
scas
mov
push
cmp
aas
mov
push
or
jmp
push
adc
or
out
or
retf
(bad)
mov
out
mov
loopne
imul
pop
stos
in
push
frstor
dec
push
lods
or
xchg
adc
repz
dec
xchg
pop
cmc
push
or
out
xor
(bad)
out
push
into
mov
mov
lea
xchg
adc
jae
sub
lahf
jnp
lahf
jmp
add
pop
stos
sbb
xchg
jns
pop
ss
sbb
mov
fs
iret
cmp
xchg
mov
jmp
mov
mov
cmp
and
xor
inc
out
dec
xchg
iret
mov
mov
sub
mov
cmp
int
loopne
adc
stos
pop
fs
shl
neg
mov
sbb
stc
mov
mov
int3
outs
daa
fsubr
test
retf
lods
(bad)
fwait
xchg
popf
(bad)
mov
call
ret
adc
adc
cld
cmp
adc
cmp
mov
ret
cmp
mov
sub
xor
ins
sbb
mov
addr16
push
rcl
jb
ds
call
test
lock
hlt
inc
movs
fist
pop
dec
outs
cmp
sar
daa
dec
retf
(bad)
or
inc
push
push
mov
mov
jno
cmp
add
inc
xor
(bad)
data16
popa
test
xchg
dec
mov
or
mov
or
mov
jecxz
cwde
mov
call
das
xor
mov
cmps
ds
xor
call
and
dec
jnp
ins
sbb
xor
leave
ins
adc
xor
xchg
sysret
sub
shr
iret
dec
loop
pop
popf
in
xchg
cmp
clc
test
sbb
mov
ja
push
mov
mov
mov
in
mov
into
and
mov
jge
jnp
sar
xchg
fstp
cmp
push
inc
mov
cdq
cmp
push
jecxz
test
adc
ds
mov
add
push
xchg
mov
out
out
xor
xor
xor
clc
mov
mov
mov
add
retf
mov
and
jo
jl
push
pushf
lock
push
(bad)
xchg
or
xchg
push
jge
dec
xchg
pusha
(bad)
or
ror
fsubr
sub
mov
iret
lock
jne
xor
arpl
jg
(bad)
loop
jae
push
sbb
push
sahf
scas
mov
mov
sbb
mov
fadd
add
dec
push
arpl
sub
adc
mov
xchg
(bad)
(bad)
or
xor
push
mov
sub
mov
pushf
or
mov
adc
out
in
sub
xchg
loope
(bad)
mov
int3
dec
pop
push
(bad)
sti
xchg
cli
xchg
dec
out
outs
mov
mov
cmp
ret
bound
test
pop
enter
sahf
retf
lock
jg
push
fdivr
inc
mov
pop
add
enter
xchg
cmp
jle
mov
mov
xchg
lods
mov
cli
mov
ja
movs
sub
pop
les
mov
sub
pop
dec
xor
mov
inc
ficom
sar
imul
test
out
aas
(bad)
nop
pop
(bad)
test
sahf
repz
dec
add
sub
push
adc
ret
dec
scas
adc
xchg
inc
xor
das
lods
or
loop
or
in
adc
and
in
dec
xchg
push
in
retf
fadd
inc
jg
jmp
pop
xchg
dec
ja
pop
es
sahf
and
stos
jl
jmp
mov
pop
mov
cs
and
xchg
or
les
add
xchg
scas
cmc
inc
jno
mov
add
pop
test
retf
sub
cld
cmc
sub
xchg
jle
fs
add
mov
adc
pop
mov
jns
mov
ja
pop
fdivr
inc
out
mov
retf
cld
sahf
cmp
or
add
ror
push
lds
clc
je
xchg
or
or
fldcw
or
arpl
std
enter
mov
push
not
jns
or
add
push
cmp
js
sbb
je
pop
cld
sbb
dec
in
push
stos
aaa
(bad)
push
scas
mov
pop
mov
sar
daa
push
jmp
ds
xchg
les
fistp
jae
mov
rol
test
leave
cmp
jecxz
cmp
movs
cmp
out
in
cmp
in
sbb
cmp
jnp
push
cmp
jg
adc
jnp
mov
cmp
ss
or
add
mov
aas
mov
out
pusha
cmc
xor
in
sub
xchg
and
dec
sub
add
mov
mov
loop
and
cmp
xchg
retf
dec
add
mov
adc
mov
(bad)
sub
hlt
ins
jbe
or
adc
aad
imul
mov
mov
adc
jecxz
int3
hlt
fdiv
and
mov
mov
xor
xor
mov
cld
push
ret
js
ds
in
test
xchg
mov
push
das
test
mov
adc
or
pop
inc
sub
cdq
adc
mov
fwait
sub
sub
gs
aaa
or
sbb
push
cld
icebp
cs
jmp
nop
or
hlt
and
mov
jmp
and
push
inc
xor
fistp
mov
rcl
pop
cmp
cdq
push
pushf
mov
idiv
mov
mov
xchg
dec
sub
add
and
es
mov
sbb
xchg
xor
int3
mov
mov
mov
jne
sub
je
sub
and
sahf
jns
gs
push
sub
ss
dec
pop
mov
cs
push
mov
jb
sbb
test
inc
pop
call
push
mov
mov
enter
push
in
(bad)
mov
(bad)
sub
add
push
mov
ss
cmp
sbb
pop
(bad)
xchg
call
and
xchg
jb
repz
outs
dec
fwait
cmc
jl
outs
cld
lods
mov
std
dec
in
and
ret
repnz
sbb
push
dec
fcomp
out
mov
test
push
and
add
fdivrp
imul
push
push
jns
mov
lods
popf
or
lds
loopne
inc
in
push
mov
xor
test
sar
les
cmp
addr16
jbe
jnp
out
(bad)
xor
pop
ret
push
xchg
aas
lock
sahf
xor
xchg
jmp
mov
jmp
or
fmul
xchg
in
hlt
adc
std
mov
and
cmp
enter
loopne
mov
movs
hlt
mov
add
jbe
lods
pop
loopne
mov
fsubr
sbb
ja
nop
jmp
mov
scas
push
xor
xchg
and
loope
int3
sbb
mov
xor
xchg
scas
sub
test
add
jmp
sbb
popa
mov
jmp
sbb
inc
pop
push
in
adc
jb
adc
jne
inc
jle
in
mov
inc
sub
ret
sub
rcl
nop
mov
scas
aaa
jp
add
xchg
scas
pop
pop
push
mov
xchg
jge
pop
repz
scas
sbb
sub
call
aad
(bad)
mov
shr
inc
cvtdq2ps
adc
cmp
xchg
or
sti
pop
xor
cmp
(bad)
jge
mov
loop
das
hlt
rcr
(bad)
popf
into
sub
jg
je
loope
mov
xor
shr
out
push
scas
pop
pop
(bad)
inc
adc
and
(bad)
lds
scas
fmulp
xor
std
loop
jbe
js
lahf
cmc
sub
stc
mov
lea
(bad)
stos
cmp
or
aad
lock
and
mov
sbb
cmp
add
ds
bound
pop
lods
loop
ds
retf
mov
inc
cmp
dec
and
mov
ror
mov
cmp
xor
test
fmulp
loop
sahf
test
sbb
mov
loope
out
dec
icebp
rcl
mov
cli
dec
ja
add
icebp
or
stos
adc
push
dec
shl
out
mov
push
jp
adc
xor
sub
leave
ins
out
loope
loop
jmp
and
mov
addr16
ficomp
sub
div
inc
inc
mov
add
iret
gs
clc
fiadd
or
call
push
ja
in
aam
ficom
cmps
inc
add
push
aas
xchg
xchg
xor
icebp
cmp
or
fs
push
sbb
mov
mov
mov
or
aad
push
pop
loop
outs
js
xor
push
adc
xchg
cmps
jns
cdq
mov
jns
ins
imul
sub
daa
xor
stos
imul
or
shr
add
sbb
xlat
retf
dec
fld
int
sbb
jg
inc
and
push
inc
sub
js
lea
lds
mov
inc
in
rol
mov
call
mov
pop
dec
lock
in
dec
loope
aam
leave
push
mov
mov
idiv
xchg
jecxz
ins
mov
das
inc
jecxz
jg
ins
and
pop
mov
es
inc
in
lock
sar
repz
int3
and
push
jle
sbb
xor
cli
fisttp
xchg
mov
cmp
xchg
in
adc
sub
fs
sbb
and
sbb
dec
adc
retf
(bad)
hlt
jb
enter
and
stc
movs
xchg
push
adc
out
push
js
pop
xchg
fbstp
cli
or
and
les
lock
dec
stc
or
inc
nop
cs
fidiv
pop
adc
and
in
leave
(bad)
fld
or
push
es
cmp
xchg
in
sbb
add
test
aam
mov
push
fiadd
hlt
jge
push
sbb
and
or
pop
adc
repnz
mov
and
ins
jmp
mov
inc
xchg
xchg
cwde
out
rol
iret
pop
fcomi
(bad)
xchg
mov
enter
dec
dec
sub
pop
test
stos
pop
adc
iret
jmp
ss
in
js
mov
mov
jo
dec
pop
sti
ss
xchg
bound
(bad)
sub
add
inc
xlat
jmp
int3
mov
dec
iret
out
call
jg
and
xchg
jb
pushf
icebp
cmp
adc
xchg
and
pop
daa
fisub
xchg
fsub
xchg
mov
push
mov
sub
(bad)
inc
inc
in
push
and
arpl
lods
xchg
(bad)
scas
push
pop
enter
loope
std
aaa
fadd
test
cmps
enter
cmps
sub
imul
(bad)
je
cwde
and
ret
or
(bad)
fdiv
fsub
mov
add
adc
es
(bad)
shr
cmp
adc
jno
mov
push
repz
inc
inc
mov
push
add
std
and
xchg
or
mov
jl
ret
sbb
call
jle
sub
and
shl
out
jne
call
and
loopne
aas
(bad)
pop
pop
xchg
push
cmp
stos
in
loop
cdq
dec
mov
test
mov
or
lods
pop
test
xchg
gs
imul
rcl
push
pop
ror
xlat
push
mov
call
mov
dec
mov
push
mov
xchg
fdivr
mov
inc
call
push
push
or
cmp
test
das
adc
mov
cmp
js
xchg
pop
mov
cld
jno
xchg
cmps
imul
jecxz
jle
pop
stos
or
in
shr
out
mov
sub
shl
arpl
xor
add
arpl
sub
(bad)
cmps
mov
push
fucomp
rol
mov
sub
fcom
mov
push
xor
sbb
shr
push
jno
or
fild
pop
mov
out
icebp
mov
inc
in
push
inc
dec
out
push
pop
jbe
push
mov
pop
cmp
fsubp
(bad)
add
mov
outs
cmps
pop
fidivr
jg
xchg
cli
mov
lea
jae
mov
sub
movs
mov
vpmulhuw
dec
ss
fadd
push
(bad)
pop
(bad)
in
xor
mov
inc
shl
jle
(bad)
icebp
loopne
push
dec
dec
clc
lock
xor
outs
faddp
fwait
pop
jg
mov
aam
(bad)
lods
and
shr
push
jmp
out
repz
cmp
pop
ins
fnstcw
dec
sahf
add
(bad)
pop
sub
inc
das
adc
retf
dec
add
inc
dec
daa
sbb
(bad)
pop
or
gs
imul
outs
sbb
fist
xchg
lods
mov
cmc
sub
(bad)
ficom
dec
cmp
mov
mov
mov
lds
cmp
mov
mov
pop
xor
sbb
xchg
mov
dec
xor
and
pop
pop
adc
push
cmp
cmp
(bad)
ja
cmp
gs
and
and
push
xchg
push
xchg
cmp
lock
cli
shl
sbb
dec
ja
es
mov
pop
out
push
push
sub
or
sub
dec
out
ds
adc
xchg
mov
lock
jle
jmp
mov
mov
dec
in
js
pop
jno
pushf
and
enter
inc
jmp
pop
mov
packuswb
mov
xor
jno
push
dec
or
add
jbe
inc
inc
inc
dec
mov
xchg
sub
rol
mov
xor
pop
pop
add
std
cs
hlt
xlat
sbb
repnz
and
test
adc
mov
sub
mov
sbb
xchg
and
jp
sahf
xlat
sub
scas
ins
dec
div
cld
push
sar
inc
dec
call
retf
lods
imul
ins
mov
or
movs
cli
fiadd
and
idiv
jns
add
cli
inc
std
sti
add
cli
stos
push
imul
into
call
test
imul
retf
(bad)
loopne
pop
fchs
scas
pusha
cmp
mov
out
test
xchg
not
pusha
xchg
push
cmp
pop
pusha
loop
sar
push
jmp
mov
cld
loop
in
dec
adc
or
push
(bad)
scas
xor
loop
icebp
or
jno
add
inc
add
sbb
pop
mov
rcl
sbb
out
retf
mov
or
ja
loop
add
mov
call
bound
jb
jo
scas
sub
loopne
sbb
rcl
(bad)
fstp
fdivr
bound
adc
bound
adc
xor
repnz
icebp
fild
leave
pop
push
mov
add
sbb
jecxz
fs
stos
jp
pop
frstor
mov
sbb
adc
int3
jo
dec
aas
aas
movs
arpl
add
and
cmps
jno
add
ret
stos
daa
xor
add
sahf
mov
test
aad
add
xchg
lahf
sti
imul
mov
idiv
movs
push
xor
iret
mov
fnsave
cmp
push
out
dec
jae
hlt
pop
dec
test
push
and
ss
enter
cmps
rcl
mov
dec
call
mov
ret
inc
xchg
pop
mov
or
sti
add
ror
les
bnd
lods
mov
stc
arpl
cdq
lods
popf
xchg
shl
test
into
arpl
retf
pop
jl
cmp
mov
dec
or
mov
sub
retf
mov
xchg
pop
test
dec
push
xlat
pop
cwde
hlt
dec
push
(bad)
sbb
xchg
add
mov
leave
popf
ret
sbb
xchg
mov
mov
mov
fst
aam
(bad)
xor
sbb
add
xor
movs
cmp
fisubr
in
test
push
ins
stos
pop
in
xchg
push
jecxz
popf
daa
(bad)
in
cmp
aam
cli
adc
jo
inc
mov
test
stos
xchg
fwait
ins
adc
pop
and
xchg
and
in
mov
enter
mov
mov
movs
sbb
cmp
fwait
jo
pop
sbb
call
jge
and
and
mov
xchg
jmp
ins
dec
pop
rcl
lds
pop
mov
add
js
test
(bad)
push
mov
pop
mov
in
icebp
jecxz
das
dec
out
inc
std
cmp
in
loopne
adc
cmc
mov
cld
fcmovb
sti
jle
imul
jae
movs
nop
inc
sbb
mov
and
sbb
jno
ror
pop
sbb
lahf
jae
inc
xchg
and
nop
inc
and
int3
les
movs
add
sbb
add
ficom
cli
add
cmp
push
out
inc
stc
retf
push
jg
lods
jmp
mov
scas
pop
add
or
lods
imul
jne
and
push
jnp
inc
ins
test
leave
push
lea
jne
out
pop
mov
push
ins
cmp
xchg
test
add
push
daa
mov
sbb
push
(bad)
fs
add
pushf
lahf
push
(bad)
cld
jno
ds
shr
stos
sub
inc
fmul
scas
xor
(bad)
xchg
mov
mov
call
mov
sub
or
nop
jne
jnp
inc
out
dec
xor
cmp
movs
js
test
adc
pop
mov
fisubr
jg
adc
cwde
sub
mov
fwait
(bad)
pop
stc
mov
div
mov
jae
fild
jmp
inc
jmp
xor
dec
inc
aam
sbb
mov
xchg
sub
fdivr
sbb
jb
push
std
out
inc
mov
popf
lods
(bad)
inc
xchg
push
outs
push
sbb
shl
jecxz
mov
(bad)
scas
mov
and
outs
(bad)
(bad)
jns
mov
adc
mov
movs
test
shr
push
dec
jmp
xchg
push
fdiv
push
shl
inc
inc
xchg
mov
mov
cmp
mov
xor
cli
js
push
call
add
aam
daa
sbb
(bad)
push
and
mov
call
out
pushf
inc
iret
add
stos
test
xor
push
add
and
mov
push
mov
jb
or
adc
ja
lods
scas
cmps
pop
fstp
xchg
test
push
cmp
fs
or
sub
mov
pop
xor
out
fst
out
in
push
fucompp
ja
dec
not
fisttp
cli
mov
arpl
push
ret
daa
adc
jbe
int
cli
and
inc
cwde
adc
sbb
loope
add
nop
je
(bad)
pop
jnp
lock
dec
hlt
aas
sar
cmp
add
movs
cld
mov
push
mov
xor
dec
lods
mov
mov
in
adc
fcmovnb
stos
sti
sub
hlt
pop
pop
xor
scas
pop
sahf
xchg
mov
out
ret
ja
clc
adc
ss
fist
lods
adc
mov
leave
add
cmps
adc
cmp
sub
(bad)
xchg
and
sbb
shr
stc
mov
jl
adc
loop
push
jns
ss
push
mov
lock
in
es
adc
cmp
push
and
mul
sahf
mov
outs
cld
in
or
jnp
dec
daa
fbld
arpl
and
mov
adc
cmp
out
or
dec
sub
push
aas
scas
movs
push
rol
sub
arpl
jecxz
dec
sbb
loope
popa
arpl
popf
pop
mov
pop
push
push
push
adc
stos
imul
inc
cld
and
push
loope
addr16
es
ins
jle
pop
ss
(bad)
movs
call
test
lods
daa
sub
adc
xchg
jmp
inc
cmp
mov
stos
lea
movs
repnz
or
retf
mov
mov
fadd
stc
cmc
mov
hlt
bound
or
gs
es
inc
outs
pop
aas
retf
lea
ds
and
mov
mov
pop
jae
mov
test
(bad)
mov
je
aad
cmp
das
ins
loopne
jno
repz
mov
pop
ds
mov
jle
cld
fstp
or
scas
xchg
sar
sbb
(bad)
dec
pop
sbb
pusha
push
adc
lock
or
push
or
sub
movs
add
dec
sub
cmc
add
mov
movs
popf
inc
fsub
pop
jmp
pop
fidivr
imul
mov
out
inc
and
sbb
push
dec
rcr
cwde
add
sub
dec
fwait
xlat
jmp
xlat
pop
aam
sbb
fcom
xor
in
(bad)
loop
adc
mov
dec
ins
addr16
repnz
loopne
in
(bad)
xchg
push
in
dec
push
push
je
add
gs
sbb
hlt
shl
mov
(bad)
nop
outs
inc
inc
stc
sub
mov
pushf
mov
aaa
out
sub
jl
std
mov
outs
ins
add
test
jp
mov
outs
nop
jae
movs
pop
xchg
sbb
sbb
mov
sbb
sbb
bound
jo
unpcklps
xchg
sub
mov
out
adc
icebp
into
and
aaa
(bad)
std
call
add
adc
inc
imul
sub
retf
xor
mov
ins
cli
dec
adc
shl
scas
(bad)
lea
pushf
pop
cwde
cmp
xor
push
push
adc
frstor
ss
sbb
movs
jo
out
hlt
mov
jb
pop
add
outs
out
cld
adc
cmps
dec
xor
or
adc
fcmovb
and
dec
and
ins
mov
jae
adc
fdivr
jns
push
leave
pop
ja
test
adc
pop
push
call
loopne
mov
pop
xchg
mov
adc
xchg
pop
neg
sti
push
fst
sbb
push
add
retf
or
js
push
test
int3
in
ins
or
je
and
jmp
ret
cwde
push
cwde
mov
jmp
xchg
lds
ds
pop
and
jo
sub
pusha
retf
rcr
(bad)
retf
in
jno
jbe
cdq
lea
cdq
leave
or
mov
mov
dec
ins
add
in
dec
(bad)
(bad)
loope
aam
lods
test
scas
fmulp
inc
movntq
out
fidiv
push
cld
jo
xchg
loope
pop
xchg
das
nop
cmps
dec
shr
fcom
or
in
dec
add
ins
push
cmp
jg
pop
pusha
mov
jnp
sbb
adc
dec
jg
retf
cdq
push
fmul
(bad)
inc
add
repnz
sub
lock
push
cld
lods
pop
dec
add
adc
pop
movs
mov
aad
mov
sbb
cld
ret
mov
adc
call
push
jno
dec
sub
std
data16
mov
test
fisubr
outs
jge
popa
add
mov
mov
and
sbb
(bad)
out
jge
jl
jnp
aas
call
inc
or
sti
cmps
ret
jns
adc
fs
or
xor
pop
std
xchg
xchg
mov
movs
lods
aam
push
push
outs
xlat
iret
repz
pop
xchg
minps
xor
(bad)
xchg
ret
push
fstp
mov
xchg
int
mov
pusha
ss
push
inc
addr16
pop
sbb
mov
add
pop
add
out
daa
bound
(bad)
popf
mov
cmp
sti
pop
fs
push
add
mul
jns
leave
shl
mov
xchg
pop
int3
ins
push
jnp
inc
test
ja
jo
mov
jne
fimul
es
outs
into
mov
sbb
lahf
push
adc
add
mov
out
pop
cmp
pop
pop
push
data16
pop
mov
lahf
aas
xor
ins
xor
inc
icebp
xchg
jnp
das
adc
stc
dec
ds
mov
xchg
ficomp
enter
mov
xchg
sub
mov
mov
imul
cmp
aam
inc
xchg
lock
stc
(bad)
xchg
(bad)
dec
xchg
dec
mov
mov
fsubr
fstp
test
mov
imul
pcmpeqd
mov
popf
or
dec
pop
and
pop
adc
aaa
bound
pop
and
test
arpl
cmc
hlt
xchg
mov
idiv
adc
pop
mov
not
ja
call
int3
and
std
xchg
das
dec
out
lahf
cmp
aad
mov
movs
mov
pop
dec
fs
pop
test
push
xor
scas
out
stos
adc
or
mov
fsubrp
int
add
std
scas
into
or
dec
rol
stos
add
popa
pop
adc
pop
pop
pop
xchg
gs
cs
mov
idiv
dec
xor
fs
push
and
or
mov
xlat
mov
push
jle
movs
mov
push
and
ins
ss
outs
xchg
and
stc
mov
loop
cmp
(bad)
mov
pusha
sbb
ret
pushf
iret
scas
loop
inc
fild
xchg
outs
xchg
or
pop
sbb
fucomip
es
jle
push
mov
xchg
lock
cmp
stos
bound
imul
outs
jp
jnp
inc
cs
pushf
xchg
mov
sti
pop
and
adc
jae
imul
dec
adc
jmp
(bad)
js
sbb
add
lahf
cmp
sbb
mov
mov
jbe
sub
aaa
(bad)
sahf
xor
out
gs
pushf
pop
mov
addr16
mov
xchg
fcomp
ss
inc
movs
adc
imul
(bad)
movs
push
lock
stos
or
mov
mov
dec
fdiv
xor
aaa
cmp
mov
mov
push
add
ret
call
pusha
and
inc
enter
jo
or
inc
pop
cdq
imul
add
fwait
outs
jne
inc
popa
mov
add
adc
or
shl
cli
sbb
in
and
jne
cmps
adc
xor
adc
mov
mov
inc
cld
fst
dec
sbb
shl
push
mov
xor
cmp
pop
sub
push
mul
scas
fs
xor
outs
dec
ret
fs
pop
ins
(bad)
jnp
jne
adc
mov
mov
or
test
sbb
mov
fisub
into
jae
leave
dec
sbb
or
sub
popa
fwait
jbe
jl
and
es
enter
ins
test
and
cmp
imul
pushf
ins
loopne
inc
jae
fcmovu
mov
xchg
push
jp
retf
xchg
and
cs
loopne
mov
pop
rcl
cmp
and
stos
pop
and
and
xchg
dec
iret
fwait
jae
shl
cs
dec
add
push
jg
push
add
fisubr
mov
dec
mov
add
call
out
mov
add
fwait
mov
pushf
and
outs
and
cwde
mov
mov
test
cli
and
fwait
rol
inc
dec
or
and
cmp
fcmovne
jbe
je
ret
cmp
add
mov
movs
cmp
cli
ja
jl
push
clc
sub
out
jmp
popf
pushf
inc
jbe
pop
mov
push
scas
cmp
mov
xchg
scas
loope
(bad)
jmp
xlat
or
mov
add
lahf
mov
movs
arpl
ja
test
mov
xor
sbb
icebp
and
jmp
dec
jns
pusha
js
ins
out
or
int3
inc
pop
cmps
ins
test
add
shl
repnz
enter
push
adc
jb
jecxz
(bad)
scas
ret
adc
inc
stos
and
sar
dec
mov
jg
adc
sbb
dec
mov
jmp
or
pop
mov
outs
xchg
xor
fst
mov
rcl
xlat
mov
enter
adc
imul
and
jle
push
xchg
in
leave
push
inc
js
shl
sub
lods
xor
cmp
fdecstp
test
push
push
dec
inc
sub
push
call
xor
ins
xchg
xchg
das
rol
xchg
jo
and
xor
ret
into
lock
dec
aas
mov
aas
mov
jbe
int3
or
cmp
jge
adc
into
push
out
ret
es
push
xor
inc
mov
(bad)
(bad)
cmp
cmp
jbe
dec
aad
in
sbb
xchg
xchg
arpl
sub
outs
sub
jmp
mov
mov
mov
add
clc
imul
pop
in
stc
lods
sbb
popf
stos
mov
jne
xor
dec
sbb
mov
adc
in
fsubr
or
jge
sbb
inc
(bad)
jnp
xchg
push
enter
in
inc
cwde
sub
sbb
and
(bad)
shl
mov
mov
or
into
push
dec
rcr
jb
fnsavew
popf
(bad)
jg
mov
pop
adc
push
and
mov
mov
xchg
pop
and
ds
leave
adc
aas
push
pop
inc
pop
pop
out
mov
mov
sti
cdq
xchg
sbb
mov
dec
in
int
loop
ret
and
jge
scas
(bad)
jmp
push
addr16
cld
aas
jl
fisub
mov
sbb
or
and
ret
lea
or
iret
sbb
outs
or
rol
enter
fisub
leave
call
pop
mov
xor
out
inc
and
push
or
pop
ss
adc
add
les
fsub
loopne
je
sub
ret
adc
nop
scas
push
xchg
mov
mov
xlat
sti
fidivr
enter
call
bound
xchg
mov
jb
loop
and
cmp
adc
add
add
es
adc
loop
loope
ins
fcmovb
or
dec
jne
das
out
lock
lods
mov
jno
lods
inc
sar
jmp
adc
mov
stos
sub
ins
mov
out
or
jae
add
(bad)
ret
mov
mov
movs
mov
or
xor
loopne
and
loope
cld
inc
mov
inc
pop
add
ss
fstp
mov
mov
fdivr
jno
sar
jne
div
mov
and
icebp
sub
and
mov
bound
loope
inc
call
pushf
mov
inc
je
push
pop
dec
mov
bound
stos
cmp
or
pop
cmc
fs
push
xchg
inc
and
sbb
out
xlat
jnp
and
push
inc
push
imul
mov
aam
cdq
lea
mov
loope
push
jecxz
test
(bad)
mov
enter
xchg
mov
cmp
call
push
inc
std
push
ror
mov
mov
sbb
xchg
mov
push
push
push
arpl
or
add
sahf
fdiv
pop
xor
mov
(bad)
or
test
imul
adc
sbb
ret
in
repz
push
cmps
adc
test
in
mov
and
cwde
sahf
out
or
rol
cwde
mov
jl
fidivr
sar
dec
test
pusha
sbb
sbb
xchg
lds
imul
mov
adc
xor
push
and
mov
mov
sti
push
push
lds
bound
jo
arpl
xor
dec
dec
inc
jae
stc
cdq
add
sti
cli
(bad)
icebp
arpl
and
jp
dec
popf
jbe
sbb
jnp
xor
cwde
mov
push
imul
add
call
ds
repnz
imul
or
stc
sub
mov
jmp
scas
int
mov
mov
sub
in
mov
or
inc
sub
xchg
test
test
popa
sbb
jl
mov
mov
ret
leave
or
mov
mov
lods
cmp
in
mov
inc
loope
lock
cmp
and
jge
mov
and
lock
and
jns
mov
mov
inc
mov
popa
pop
retf
push
pop
mov
je
inc
pop
sub
jns
add
sub
and
push
adc
sahf
and
outs
lds
lods
pop
mov
push
jb
aaa
push
int
imul
nop
xchg
adc
lods
inc
add
adc
jg
call
mov
call
mov
sub
stos
sar
stc
leave
cs
pop
dec
cli
sbb
loope
sahf
jne
retf
push
or
loop
mov
cmps
and
ss
jmp
or
xchg
mov
not
mov
pusha
jecxz
mov
sbb
jmp
sysexit
sub
sub
(bad)
leave
stos
push
push
addr16
sbb
in
jmp
inc
(bad)
in
cli
and
cld
lods
pop
jmp
ret
adc
jno
aas
sbb
jbe
sub
dec
mov
mov
mov
push
sti
out
(bad)
out
aam
and
jne
aad
scas
pop
jle
pop
sahf
inc
out
mov
cdq
xchg
mov
adc
add
dec
jg
outs
push
jo
dec
movs
jmp
cmp
scas
and
fcmovu
movs
gs
data16
mov
push
or
icebp
pop
bound
call
sete
xor
iret
push
cmp
jbe
test
sub
imul
hlt
out
out
sub
xchg
xor
aaa
pop
dec
scas
push
test
push
ficom
mov
cs
ja
sahf
push
nop
or
das
push
mov
or
ror
out
mov
cli
xchg
inc
cmp
push
adc
fwait
or
or
je
dec
popf
sub
(bad)
ret
aam
jo
inc
int3
into
push
scas
lahf
push
push
aam
aaa
cmp
out
stos
movs
pop
adc
ins
or
inc
mov
push
sbb
mov
ficomp
retf
inc
(bad)
sbb
and
pushf
xor
das
stos
add
and
pop
rcl
fldpi
cwde
call
inc
call
ror
lods
dec
mov
lds
aas
sbb
jge
mul
mov
scas
rol
inc
cmps
(bad)
mov
dec
fs
mov
cld
or
mov
add
mov
pop
mov
out
mov
pop
ja
push
outs
or
(bad)
pop
push
mov
cmp
jnp
inc
jne
stc
ins
jo
retf
mov
lods
imul
mov
(bad)
frstor
(bad)
cmp
xchg
aad
fld
pop
sub
pop
xchg
es
pop
mov
movs
sbb
test
and
dec
mov
fadd
gs
cmp
jp
sbb
xlat
stos
dec
ficomp
ja
mov
push
cmp
cmp
xor
jl
or
movs
mov
jle
add
mov
ins
pop
or
lea
inc
adc
retf
adc
jae
gs
retf
in
inc
jl
lock
jp
rcr
push
and
call
pop
int3
jmp
or
outs
mov
xchg
ins
sar
sub
push
push
xor
dec
xor
retf
ins
movs
push
test
aaa
inc
cli
icebp
sbb
add
and
push
xchg
mov
xchg
pushf
dec
pop
cs
cld
fadd
inc
cs
mov
push
pop
adc
in
and
push
jg
ja
shl
or
and
nop
jae
cli
retf
scas
les
fcomp
or
int
cli
adc
add
je
icebp
fild
ret
enter
mov
cmc
stos
test
adc
iret
cmp
ror
cmc
inc
jge
icebp
jp
adc
out
fst
xor
adc
(bad)
push
loope
nop
inc
xchg
cmps
pop
adc
dec
js
(bad)
push
sbb
xchg
and
ja
dec
sub
pop
je
xchg
fild
loopne
and
rcl
mov
enter
fldcw
push
push
fisub
fstp
xchg
add
xchg
mov
shr
ja
sub
pop
movs
sub
sti
sub
jmp
sub
out
nop
sbb
mov
mov
js
in
test
inc
jbe
cmp
jo
xor
jmp
push
pop
ds
xor
lods
les
mov
xchg
dec
stos
ins
mov
lods
xchg
dec
mov
pushf
cmp
leave
xor
xor
gs
inc
sbb
ins
fcom
mov
and
lahf
ret
mov
call
das
call
sbb
sar
mov
int
and
cmp
pop
icebp
xor
or
iret
in
sub
into
je
mov
jo
ror
add
dec
ret
inc
cmp
aad
call
lods
and
shl
imul
retf
aaa
movs
xor
mov
mov
sar
inc
mov
xor
aad
dec
not
cmp
inc
ins
leave
clc
retf
in
push
in
les
cwde
(bad)
test
(bad)
stos
stos
jns
lahf
pop
cmp
call
dec
xchg
loopne
gs
and
jne
or
fld
add
and
movs
xor
cmp
ret
jns
mov
sub
jecxz
faddp
je
dec
push
add
sbb
clc
call
mov
into
pop
cmp
test
std
pop
inc
inc
pop
jge
inc
pop
mov
pop
push
ja
rcr
jo
xchg
mov
and
mov
(bad)
adc
push
sar
sar
ss
sub
dec
loop
push
adc
popf
sbb
inc
into
mov
es
or
les
ds
cs
xchg
xchg
dec
push
and
ins
xchg
rcr
mov
mov
and
mov
add
loopne
mov
jb
pop
mov
gs
mov
inc
out
stos
loopne
test
pop
out
rcl
mov
lds
adc
(bad)
mov
enter
push
cwde
mov
jbe
jle
and
ja
dec
popf
or
neg
cwde
pop
sar
mov
mov
mov
mov
stos
jne
add
mov
pop
inc
cmp
or
push
repnz
cmp
mov
mov
mov
cmp
xor
test
xchg
aaa
push
push
mov
nop
cmp
(bad)
push
mov
out
lea
pop
outs
push
push
sahf
popf
hlt
in
test
jb
les
loopne
div
mov
push
sbb
das
mov
stos
sbb
sbb
aaa
jb
sbb
arpl
ret
mov
push
shr
int
jno
fistp
imul
retf
cli
fst
dec
jae
pop
vsqrtsd
sbb
sti
xchg
or
popf
inc
das
push
cdq
mov
fidiv
sub
push
ret
out
loope
and
std
les
cli
cmp
rcr
jp
iret
rcl
or
lds
xor
(bad)
cdq
mov
mov
out
or
xchg
add
mov
cli
cmps
mov
shr
repnz
mov
enter
in
and
(bad)
fidiv
cli
pop
cmps
sti
aad
ss
out
movs
or
mov
ficom
and
cs
pushf
iret
jnp
xchg
mov
loopne
mov
sub
jmp
sub
sti
jns
movs
sub
mov
cmp
pushf
cwde
mov
dec
wbinvd
std
jecxz
mov
push
repz
pop
mov
pop
shl
out
dec
call
adc
and
cmp
add
mov
and
sub
xchg
sar
in
scas
mov
inc
pop
dec
mov
(bad)
mov
mov
call
sahf
js
pop
cmp
je
push
pushf
fbstp
aam
adc
aad
das
mov
sti
mov
sbb
int
cmp
ret
push
mov
jae
loope
loop
dec
(bad)
sbb
jge
cmp
pop
add
xchg
fstp
sub
test
movs
out
jne
shl
out
mov
sbb
popa
fs
mov
(bad)
cmp
adc
outs
aam
xchg
inc
mov
push
mov
cmps
out
sbb
xchg
push
push
adc
movs
dec
mov
lock
push
or
mov
rol
mov
out
push
inc
jg
inc
jbe
les
in
dec
(bad)
xor
pop
cli
loopne
add
jbe
rcl
ret
lds
les
sbb
popf
dec
repnz
sbb
mov
in
mov
inc
in
out
ja
mov
shr
in
adc
cli
cmp
mov
ror
dec
jae
lea
pop
adc
hlt
inc
adc
xchg
call
in
xor
pop
lods
push
pop
sti
push
test
imul
xchg
into
loopne
idiv
and
sub
addr16
xor
sbb
sub
dec
push
add
or
dec
in
jae
or
out
inc
pop
adc
out
jns
cmp
jl
xor
add
or
js
hlt
fnsave
dec
xor
mov
xchg
cwde
out
iret
out
and
enter
add
add
out
and
neg
xor
ret
mov
or
sub
popf
dec
and
fwait
je
sbb
es
xor
js
or
mov
retf
xor
mov
mov
pop
sti
aam
mov
push
dec
sar
dec
adc
sbb
rcr
xor
inc
(bad)
jmp
jb
mov
xor
xchg
addr16
(bad)
aas
dec
test
rcl
test
mov
ds
mov
imul
movs
jg
js
lods
sti
xor
adc
pop
sub
lods
xor
shl
int3
push
dec
cmp
shl
mov
cmps
pop
add
(bad)
ficomp
fldenv
dec
movs
xchg
jne
sub
xchg
mov
sar
pop
push
inc
dec
sahf
cwde
gs
mov
sub
inc
std
push
pop
mov
or
push
add
daa
in
cdq
call
mov
mov
inc
int
mov
iret
int
ins
test
shl
inc
pushf
jne
jl
(bad)
fcmovbe
pop
in
mov
pushf
jge
mov
jbe
lea
dec
mov
sbb
(bad)
test
pop
aam
jmp
adc
sbb
int
xchg
into
hlt
ret
and
mov
jmp
adc
xor
rcl
not
mov
and
dec
sti
repnz
sub
cmp
mov
push
dec
jnp
inc
xchg
pop
pop
mov
jne
dec
mov
mov
sub
bound
sub
mov
mov
shl
xlat
(bad)
mov
push
stos
(bad)
fwait
inc
add
imul
(bad)
xor
fwait
xchg
and
push
bound
arpl
push
pop
mov
adc
shl
mov
aaa
mov
clc
sub
sar
mov
jne
fiadd
outs
push
xchg
inc
pop
sub
sbb
xlat
adc
into
int
jge
xor
pop
rcr
arpl
pop
or
es
push
lods
rcl
xchg
outs
and
add
fs
pop
pop
inc
mov
jl
add
sbb
call
(bad)
sub
fstp
(bad)
mov
sub
hlt
(bad)
or
pop
sbb
cmp
lock
push
xchg
(bad)
jg
xchg
xchg
adc
jbe
xor
xor
fiadd
xchg
mov
popa
jbe
je
jb
mov
in
rcl
push
clc
sahf
int
push
sbb
inc
cli
mov
inc
pop
fadd
mov
ss
dec
cs
lahf
mov
leave
push
aas
mov
nop
cwde
ss
xor
int3
push
jp
mov
xchg
in
xchg
in
jle
cld
and
pop
movs
retf
cwde
mov
xor
add
icebp
xchg
mov
ja
push
dec
jmp
into
mov
les
out
fs
sbb
jb
cmps
cmp
retf
fs
mov
aaa
or
imul
dec
xor
int
and
mov
or
push
jno
mov
push
push
inc
shl
hlt
xor
sahf
push
mov
ret
shr
jbe
addr16
and
adc
pop
pop
push
movs
inc
pop
cmp
shl
in
add
sub
inc
sub
jle
mov
jbe
out
cmp
mov
jbe
mov
daa
cmp
push
xor
and
or
lock
jp
dec
out
sub
dec
sbb
dec
into
into
stos
out
add
mov
sahf
inc
pop
pusha
mov
mov
mov
adc
call
imul
data16
shl
dec
(bad)
mov
push
cmps
push
mov
or
and
add
pop
inc
and
sbb
rcr
pop
push
mov
sbb
(bad)
rcl
mov
inc
cld
dec
iret
outs
mov
push
outs
and
rol
enter
out
retf
adc
mov
inc
fsubr
fdiv
sbb
jno
aam
dec
xlat
test
inc
iret
data16
jne
test
mov
test
aad
and
fstp
(bad)
sti
sub
mov
daa
xchg
(bad)
jmp
push
inc
xchg
sbb
add
into
xor
push
adc
inc
and
int3
or
mov
inc
or
aam
push
or
xor
sbb
(bad)
into
mov
add
sbb
(bad)
les
retf
add
pop
out
ss
jl
sbb
jmp
test
cmc
(bad)
xor
outs
aaa
ret
mov
xchg
add
jo
mov
ins
out
push
(bad)
aam
nop
shl
into
out
xor
stos
xor
in
mov
jb
and
(bad)
outs
cmc
mov
lock
mov
movs
mov
mov
push
jmp
adc
adc
mov
cmp
push
call
push
js
lds
(bad)
in
bswap
(bad)
mov
fcomp
fdivr
mov
pushf
(bad)
dec
dec
dec
mov
jo
ret
(bad)
mov
mov
loopne
inc
xchg
cld
imul
loope
xchg
pop
popa
pop
xor
(bad)
imul
add
mov
shr
std
ins
pop
jl
cmps
and
clc
imul
mov
cli
xlat
cs
push
push
push
and
inc
add
add
dec
add
pushf
std
pop
js
es
out
ins
jmp
inc
xchg
lods
pushf
push
dec
fmul
cmps
and
adc
test
dec
popa
xchg
add
test
adc
inc
xchg
call
retf
pop
push
push
clc
out
popa
mov
jl
push
mov
xor
mov
and
mov
addr16
and
loopne
sbb
add
aam
inc
aas
js
ja
call
call
popf
mov
lock
cmp
dec
pop
cmc
mov
cmp
cmp
jbe
jle
js
jb
out
test
jb
xlat
xor
inc
mov
movs
adc
movs
push
mov
xchg
xchg
clc
jbe
dec
call
imul
dec
adc
pop
push
mov
addr16
and
scas
cwde
cmp
inc
sbb
sub
stos
or
in
mov
out
jmp
inc
test
stc
sub
aam
sub
dec
sahf
sahf
mov
pushf
ins
in
pushf
pop
(bad)
and
xor
in
fadd
pop
inc
xchg
ds
div
mov
inc
pop
scas
das
dec
adc
and
jns
outs
dec
lahf
push
inc
push
mov
aas
inc
je
lods
lahf
lahf
pop
popa
pop
push
ja
jb
out
xchg
je
ret
inc
ret
push
ds
inc
scas
xchg
cmp
(bad)
aad
call
rcr
and
stc
icebp
xchg
sbb
xor
stos
pop
adc
pop
add
fstp
loop
outs
xor
and
xchg
stos
mov
xor
ja
gs
sbb
out
cdq
xchg
retf
(bad)
imul
pop
(bad)
mov
iret
xor
cmps
out
sbb
ja
sbb
adc
jecxz
ja
sar
ja
sti
shr
jmp
or
pushf
push
adc
xchg
mov
stos
imul
and
push
xor
leave
sbb
inc
adc
mov
test
or
in
xchg
into
mov
or
jg
ins
icebp
pop
add
xor
repnz
and
mov
mov
dec
dec
add
jmp
push
jle
sbb
and
mov
xchg
xlat
push
rcl
adc
retf
scas
jno
fist
icebp
mov
and
jg
loop
test
mov
jmp
retf
ss
das
jae
outs
stos
cmp
(bad)
div
mov
sbb
pop
push
adc
mov
xchg
in
and
popf
adc
loop
jmp
jne
repz
neg
push
loopne
and
mov
adc
rol
bsr
mov
mov
jecxz
retf
(bad)
rcr
xor
jl
jmp
cli
out
in
int3
and
mov
retf
aam
push
ret
les
leave
sbb
cmps
cmp
dec
mov
pushf
pop
jne
in
sub
pop
xlat
(bad)
jl
(bad)
mov
iret
or
sbb
inc
sub
mov
in
mov
jle
and
movs
int3
call
or
sahf
jecxz
cwde
cmp
push
xor
cwde
fld
adc
aad
aad
mov
sbb
addr16
mov
mov
cmova
pushf
fcmovnb
mov
mov
add
repz
adc
retf
mov
sbb
es
or
shl
aaa
pop
xchg
xchg
fcmove
or
push
lea
or
or
out
jmp
push
das
rcl
xor
pop
sbb
dec
lods
pop
cmp
cmovl
push
js
mov
imul
push
mov
nop
stos
ins
in
ds
lods
inc
cmp
dec
cmp
mov
push
adc
sub
or
nop
jnp
jmp
in
pop
out
push
pushf
mov
push
je
fadd
pop
cmp
fistp
mov
fwait
in
jecxz
popf
in
add
dec
inc
(bad)
xor
inc
scas
cmp
cmps
in
jo
push
ins
inc
jmp
fucomip
ja
jg
sar
sub
mov
in
and
sbb
cmps
or
or
(bad)
jne
pop
inc
imul
dec
ds
push
hlt
sbb
xchg
mov
jmp
pop
xchg
push
in
jno
inc
xchg
push
movs
loop
leave
hlt
xor
xor
ja
test
and
or
cmp
pushf
repz
pop
dec
mov
adc
xor
jns
cmp
nop
cli
sbb
pop
cmp
jmp
bound
scas
popa
imul
jmp
cmp
or
xchg
call
retf
or
adc
sbb
xchg
lock
jo
les
inc
aas
sti
mov
cmp
(bad)
dec
mov
shr
and
dec
jmp
lods
mov
retf
rcr
cwde
jmp
xchg
mov
adc
push
inc
or
(bad)
jno
push
and
adc
add
mov
in
inc
lea
sbb
sub
rol
leave
inc
cmp
sbb
inc
clc
and
imul
leave
mov
push
pop
div
hlt
xchg
addr16
test
jne
sub
jb
mov
jnp
lods
repz
(bad)
push
div
fstp
pop
sub
or
das
neg
in
mov
ret
dec
and
dec
outs
mov
out
(bad)
sti
push
scas
dec
out
xchg
add
icebp
out
retf
jmp
inc
xor
scas
inc
mov
mov
out
cs
adc
jg
in
inc
imul
mov
dec
fcomp
je
push
cmp
pop
or
aaa
sti
retf
push
ficomp
pop
xchg
and
jns
stos
push
iret
mov
or
movs
mov
inc
cs
xor
adc
cmp
in
add
or
inc
cmp
sbb
push
pop
sbb
sar
cmps
bound
imul
xchg
daa
neg
mov
sbb
(bad)
sub
push
call
mov
xor
out
jno
in
js
mov
jns
in
pusha
fnstsw
pop
push
cmps
in
mov
jno
out
frstor
(bad)
mov
cmp
sbb
dec
mov
int3
add
push
and
cwde
ss
repz
loope
je
jae
fwait
(bad)
pop
stos
mov
xchg
pop
sahf
mov
cs
sub
push
enter
and
adc
pop
jb
cmp
nop
push
dec
mov
pop
mov
cwde
aas
add
sbb
(bad)
lock
pop
hlt
dec
add
cmp
push
lods
mov
fs
and
push
leave
dec
outs
push
(bad)
mov
fs
cmp
sub
stos
icebp
stos
cmp
ins
enter
add
imul
jecxz
sbb
and
and
fdivr
cdq
loopne
xchg
sbb
mov
mov
push
mov
imul
cwde
movs
into
lahf
xchg
repz
or
jns
cli
dec
adc
dec
sbb
lds
outs
xchg
cmp
ret
cmps
gs
pmaxub
(bad)
jns
(bad)
and
mov
jmp
icebp
mov
jecxz
rcl
push
push
mov
sbb
(bad)
jecxz
xchg
or
inc
repz
or
xor
bound
fidiv
jbe
js
out
adc
jbe
pop
int3
popa
rcl
push
sub
adc
bound
fucomi
lahf
lea
xchg
sar
pop
outs
stc
pop
mov
sar
(bad)
mov
xchg
shl
les
add
or
push
packssdw
fldcw
xlat
add
cmp
sbb
sbb
outs
mov
jbe
rol
xchg
int
xor
lock
push
sti
inc
adc
sbb
adc
add
loope
add
dec
popf
inc
nop
pop
mov
adc
retf
mov
sub
mov
xchg
div
xlat
cs
push
mov
icebp
mov
and
stos
mov
pop
ins
inc
mov
dec
ins
or
imul
fs
push
cli
and
cdq
xchg
jp
lds
cmp
sub
jb
sub
retf
xchg
dec
push
mov
adc
imul
or
test
sahf
mov
push
mov
stc
dec
jmp
iret
data16
add
pop
jbe
mov
imul
shl
mov
cmps
jbe
or
scas
retf
mov
jle
cli
inc
mov
cmp
add
ds
xor
enter
stc
or
adc
or
(bad)
lock
dec
adc
mov
rol
sbb
outs
out
enter
(bad)
jb
xor
gs
outs
lahf
push
push
js
add
mov
rcl
push
adc
xor
cld
xor
adc
inc
mov
add
nop
imul
xchg
out
xor
out
aam
xor
(bad)
mov
and
inc
stc
pop
sbb
fcomi
sub
outs
dec
sub
xor
out
jbe
sub
popa
mov
sbb
dec
sbb
ret
idiv
lea
rcr
jmp
jbe
xor
lock
add
mov
lea
sub
fidivr
div
addr16
ss
dec
or
jmp
fwait
push
push
pop
mov
dec
sub
add
dec
(bad)
adc
gs
jmp
sub
cmp
div
jmp
int3
jg
dec
sub
retf
add
xchg
push
sub
jno
cmc
and
pop
data16
fmul
add
pop
nop
xchg
jmp
hlt
mov
idiv
es
push
xor
add
movs
add
adc
xor
push
pop
mov
adc
les
sub
mov
cmp
jnp
and
imul
mov
or
(bad)
mov
mov
push
std
ja
int
xlat
mov
cmc
ret
frstor
imul
in
cli
stos
fstp
test
pop
push
bound
call
mov
xchg
shl
std
inc
jns
aad
mov
outs
and
sahf
sbb
call
pushf
jle
inc
add
xchg
cmp
sub
add
aad
dec
outs
cmp
in
gs
bound
and
jnp
mov
scas
data16
iret
jno
xlat
cdq
mov
cmp
mov
pop
js
leave
dec
inc
inc
inc
pushf
shr
sub
xchg
mov
pop
lahf
shr
xor
shr
push
or
mov
loop
aaa
push
add
aaa
mov
and
mov
mov
mov
lods
test
pop
cmp
out
mov
mov
fwait
lea
add
cwde
jns
shl
nop
sub
xor
cmp
call
aaa
cmps
jb
std
jmp
or
aam
imul
or
mov
fcmovnbe
enter
lea
popa
cmp
in
push
sbb
loop
fwait
and
mov
sub
(bad)
jg
add
inc
aad
inc
stos
inc
mov
add
add
and
cmp
dec
(bad)
pop
ja
cmp
inc
jmp
or
pop
or
pmaddwd
inc
loopne
test
xor
(bad)
shr
icebp
shl
mov
jb
fwait
xchg
add
std
mov
inc
jno
mov
inc
scas
aaa
adc
adc
inc
jmp
repnz
and
sub
cmp
shr
push
xor
mov
out
rcl
lock
jns
sub
sbb
mov
movs
jnp
xchg
add
fisttp
pop
fidiv
cld
mov
fs
retf
jne
push
dec
les
sub
push
xor
pop
cmp
add
test
xor
loopne
inc
mov
je
sbb
repz
int3
mov
jnp
sbb
fstp
mov
rol
cmp
mov
or
pop
leave
fwait
ret
dec
pushf
sub
sahf
hlt
mov
test
lock
cld
in
pop
mov
mov
int
out
xchg
add
ret
icebp
pop
add
add
xor
cmps
outs
mov
fisub
fstp
adc
imul
mov
pop
das
test
sub
fsub
bound
push
inc
ret
fisttp
fstp
inc
dec
outs
stos
inc
imul
test
xor
mov
xchg
push
push
xor
out
dec
je
out
pop
mov
rol
pop
xor
xchg
mov
xor
outs
jl
pushf
cld
sahf
es
nop
sbb
inc
loop
push
(bad)
cli
shr
call
jns
push
jnp
xchg
out
mov
push
mov
in
inc
das
stos
mov
fdivr
adc
ror
mov
shl
xchg
push
mov
and
fcomp
inc
lea
push
mov
js
pop
ret
adc
pushf
jg
inc
jo
loopne
aas
xchg
(bad)
pop
jg
ins
add
(bad)
hlt
jnp
dec
dec
push
pop
add
push
push
pop
jge
xchg
je
repnz
and
mov
and
and
mov
int
in
(bad)
xchg
bound
inc
dec
inc
aam
cmp
or
jmp
pop
xchg
movs
rol
push
push
or
jb
sti
inc
sti
dec
enter
xor
inc
lods
sub
fstp
push
es
mov
and
jp
adc
call
xor
ret
test
das
mov
call
aaa
cmp
mov
push
and
pop
dec
cmp
sbb
add
call
push
mov
xor
jl
ret
in
sub
cs
clc
loope
inc
packsswb
call
into
cmc
and
aad
add
mov
sbb
out
stos
fsubr
push
push
cli
xchg
into
mov
shl
cmp
mov
and
mov
in
and
imul
and
cdq
pop
xlat
adc
xchg
cdq
jge
mov
pusha
repz
pop
leave
cmc
sbb
push
in
cmp
in
aam
xchg
or
imul
shl
outs
mov
mov
sbb
mov
push
mov
xor
pop
imul
inc
cmp
nop
fucomp
xor
clc
pop
xchg
mov
rcl
icebp
mov
and
push
pushf
mov
jecxz
rol
jg
call
fwait
iret
aad
sbb
dec
fimul
mov
push
int
mov
ins
addr16
arpl
cmps
in
ret
ins
pop
sahf
xchg
xor
push
xchg
icebp
sub
adc
push
push
mov
or
or
sbb
popa
adc
mov
inc
mov
add
sti
pop
imul
sbb
mov
xor
aas
test
movs
out
dec
push
sub
sub
xchg
retf
mov
fwait
(bad)
xchg
shr
xor
and
jae
aad
or
shr
mov
out
push
mov
add
mov
mov
adc
sub
adc
pop
adc
jle
ins
mov
fisub
adc
movs
mov
je
mov
jns
aad
adc
pop
fiadd
mov
pop
or
sbb
pop
test
fnsave
sbb
sar
stos
test
or
in
sbb
pop
test
ret
cmps
test
imul
dec
or
stc
inc
out
les
xchg
push
movs
xchg
push
fstp
mov
sub
stos
je
stos
ds
(bad)
lds
bnd
leave
sbb
mov
retf
add
dec
adc
cmp
stos
ficom
ss
iret
xor
popf
nop
pop
sahf
jmp
jge
xchg
stos
or
jmp
mov
sub
xchg
aas
fisttp
out
mov
xchg
inc
repnz
lea
imul
test
sbb
adc
lea
test
imul
push
cmps
aam
push
mov
scas
ret
and
sbb
std
cmp
shr
fcomp
dec
outs
ja
push
sbb
repz
call
ds
push
inc
loope
sti
dec
test
loop
cmp
imul
test
aam
xchg
xchg
mov
pushf
fsubr
popf
and
push
jb
retf
lods
js
bound
stc
in
int3
fst
aam
push
mov
stc
jne
adc
pop
(bad)
and
mov
cmc
test
test
into
inc
dec
pushf
repnz
mov
adc
ror
mov
popa
stos
pushf
or
imul
mov
jb
call
cld
or
js
sub
fmulp
sbb
sbb
cwde
into
pop
sub
push
test
dec
(bad)
ficomp
test
mov
or
mov
daa
dec
mov
xchg
shl
sbb
pop
cmp
outs
js
std
inc
scas
adc
pop
loop
mov
pop
out
stc
out
add
(bad)
cld
cmp
cld
pop
adc
rcl
aam
aas
clc
(bad)
push
add
pusha
push
xchg
test
sub
clc
and
retf
imul
aas
jo
mov
add
jge
xchg
adc
dec
shl
movzx
fcom
adc
adc
sub
add
mov
test
into
mov
out
dec
dec
or
movs
(bad)
lock
xrelease
shl
adc
stc
mov
mov
sub
pusha
iret
out
cmp
(bad)
fimul
jge
xchg
retf
sti
daa
or
sub
pop
mov
push
nop
bound
inc
call
mov
es
jmp
push
daa
mov
aam
pop
or
jae
pcmpgtd
aam
adc
mov
mov
test
pop
xor
cmp
lahf
loopne
xchg
or
sar
(bad)
call
mov
pop
retf
mov
out
xchg
jo
ret
push
sub
test
(bad)
rcl
pop
js
jne
xchg
adc
ins
aas
aad
jmp
in
in
stc
loopne
adc
stos
sbb
es
je
push
xchg
cmp
aad
test
jmp
pop
or
jbe
jo
pop
xchg
xchg
mov
fdiv
retf
loopne
stos
and
push
xchg
adc
adc
addr16
jo
sub
outs
ret
mov
and
lock
adc
rcr
sub
rcr
sub
push
lss
cmp
shl
into
pusha
mov
push
xchg
std
popa
nop
fsub
jle
add
dec
push
xor
test
mov
retf
jecxz
pop
cmps
pop
jae
xlat
movs
pushf
lea
scas
test
dec
jnp
pop
and
daa
cmp
and
pop
dec
mov
adc
sti
call
pop
add
push
xchg
adc
xchg
mov
xlat
adc
xor
cli
cld
xchg
std
js
adc
sub
add
lods
shl
fs
and
and
js
gs
push
add
ret
sbb
ins
mov
mov
sbb
popa
popa
push
push
cmp
xor
mov
lods
and
jnp
push
pop
test
outs
cmp
in
lds
add
cmp
ficom
inc
sbb
sub
mov
jg
pop
or
dec
sbb
cmp
and
sbb
add
shl
ins
fst
jo
cld
mov
dec
test
(bad)
outs
clc
mov
sbb
in
ss
jg
cmp
pushf
shl
inc
dec
rcl
sbb
mov
ret
aaa
mov
pop
fs
ret
lea
out
rcl
fist
loope
out
enter
retf
push
call
jge
mov
out
pop
dec
fsubr
frstor
fs
jmp
(bad)
retf
mov
ror
sub
xchg
mov
aad
xchg
xchg
jecxz
retf
loopne
(bad)
ffree
iret
pop
mov
shl
add
aas
addr16
dec
ins
mov
iret
mov
add
rol
inc
repz
jo
int
imul
xchg
add
into
cli
int3
test
sbb
bound
das
(bad)
fisub
mov
dec
pop
jmp
out
in
adc
je
lods
xchg
div
cmp
and
mov
jns
ins
sbb
dec
xchg
xlat
push
and
into
xchg
addr16
fwait
mov
jmp
cmp
cmc
mov
adc
xchg
jmp
jo
enter
clc
ja
pop
pop
mov
pop
rcr
gs
and
sub
iret
push
xchg
xchg
jecxz
cmps
ds
dec
adc
popa
dec
call
cli
jb
int
push
scas
sub
mov
cmp
popa
cmps
mov
mov
les
movs
sbb
add
popf
in
popf
push
pushf
mov
cmp
lods
push
addr16
cli
mov
enter
bound
push
scas
mov
(bad)
mov
(bad)
rol
ret
retf
mov
mov
sar
push
ret
scas
xchg
xor
xlat
fisub
call
imul
pusha
and
cmp
push
jmp
out
cdq
pop
fsubrp
loop
loopne
fild
adc
or
mov
(bad)
out
jne
in
and
adc
mov
in
pop
in
fwait
mov
pop
int3
add
dec
cs
fbstp
push
dec
ja
xor
daa
add
cmps
sub
movs
add
xchg
xchg
js
xchg
inc
(bad)
sbb
shr
rcr
push
push
xor
cmp
ds
or
pop
pop
cli
aaa
movs
and
sub
les
adc
int3
xor
jge
imul
push
and
mov
loope
ret
rcl
push
xchg
or
std
(bad)
pop
ret
mov
(bad)
xor
lock
icebp
cmp
pop
mov
imul
xor
sub
push
test
push
xchg
mov
in
pop
ret
dec
cld
mov
and
push
or
push
mov
mov
pop
or
and
jge
jle
jo
or
push
xor
sbb
or
push
fstp
mov
fcomp
or
adc
xor
sbb
dec
lods
mov
add
lahf
push
outs
gs
jge
repz
push
cmp
adc
xor
mov
sub
cdq
and
ins
data16
jo
test
test
fldcw
push
bound
test
jmp
ins
cmp
dec
xchg
loope
xchg
and
cs
xchg
inc
inc
int3
ds
adc
ss
(bad)
aad
adc
iret
gs
sbb
add
imul
gs
push
clc
ret
pop
lahf
cli
js
test
cld
dec
adc
test
jno
mov
push
lods
pop
mov
cmc
or
test
dec
mov
pop
mov
cmps
xchg
rcr
int
sub
sar
jle
push
mov
sub
int3
cmp
mov
in
adc
dec
scas
test
pop
pop
sbb
mov
and
(bad)
xor
std
aas
movs
cmp
jmp
fxch
ds
inc
bound
mov
cmp
faddp
sbb
sti
bound
and
rcl
adc
mov
xchg
push
or
mov
jle
add
lea
fld
cdq
stos
mov
mov
cdq
in
push
enter
mov
sub
sub
loop
jb
adc
xchg
in
aas
movs
push
aad
adc
mov
sbb
in
call
ins
mov
mov
cmp
xchg
push
inc
jb
fild
(bad)
les
push
dec
sbb
inc
je
add
in
(bad)
in
out
lock
xor
stc
pop
sahf
pushf
retf
push
jne
scas
fisttp
psubq
(bad)
dec
call
mov
mov
cs
das
mov
outs
pop
inc
cmp
gs
mov
in
fidiv
and
mov
xchg
inc
inc
jmp
xchg
pop
dec
mov
shr
mov
pop
mov
ja
(bad)
push
sbb
outs
mov
mov
ror
shl
(bad)
jmp
inc
test
xchg
icebp
push
push
pop
or
cmp
shr
scas
jae
aaa
sub
jge
cwde
inc
stos
push
cmp
pop
outs
cwde
ja
cmp
(bad)
nop
or
cmps
xchg
sub
jne
dec
outs
in
jecxz
mov
ret
cmc
cdq
xchg
push
add
xchg
pop
loope
mov
jnp
dec
sub
pop
dec
fcom
out
or
scas
addr16
shr
std
add
sti
loop
sub
(bad)
addr16
stos
xchg
xchg
lock
push
cmps
xor
xchg
jmp
cdq
push
ins
lahf
mov
cmp
arpl
dec
ficomp
sbb
push
pop
sbb
arpl
adc
mov
adc
idiv
xchg
xor
push
cmp
push
dec
ret
push
adc
das
adc
cmp
hlt
loop
into
fnstcw
sbb
dec
mov
xchg
mov
xchg
mov
daa
pop
ret
in
mov
addr16
int
and
mov
loopne
pop
jl
sbb
ret
sbb
(bad)
mov
xchg
dec
(bad)
mov
and
mov
cmp
adc
lds
jnp
scas
jns
jns
es
sub
adc
in
je
js
les
not
inc
out
mov
in
mov
adc
push
jl
mov
ror
out
rol
cs
push
inc
cmp
cwde
xor
enter
loop
mov
adc
test
pop
mov
ds
jge
ret
sahf
cwde
shl
cmp
or
xor
cmp
jns
inc
jns
sahf
mov
lahf
push
repz
inc
xchg
mov
dec
out
pusha
call
cmps
xor
xchg
xchg
ja
sbb
pop
pop
push
neg
daa
mov
sti
pusha
mov
(bad)
and
xchg
sbb
cs
cmp
sar
push
push
cmovs
inc
dec
ss
mov
(bad)
xchg
lahf
int3
adc
xor
pop
rol
pop
cli
movd
cbw
push
movs
add
cmp
dec
xor
push
sub
push
retf
inc
mov
fwait
or
and
inc
cmps
ja
(bad)
xlat
mov
mov
and
xchg
inc
inc
jns
ds
mov
je
lahf
in
test
and
addr16
or
mov
fisub
or
loop
add
xchg
(bad)
call
mov
inc
xor
mov
test
addr16
sub
test
out
out
movs
jmp
(bad)
cmp
ret
(bad)
mov
fld
pusha
xor
sbb
jae
xor
dec
scas
push
xchg
mov
jg
dec
xchg
dec
add
inc
fcomp
inc
inc
adc
add
imul
popa
adc
loop
call
pop
mov
xor
inc
xlat
cmc
or
das
ret
movs
lods
scas
jl
inc
mov
imul
mov
add
scas
and
sbb
repnz
jno
in
dec
pop
aam
data16
and
mov
sub
test
rcl
cld
push
adc
adc
jge
jmp
(bad)
or
inc
stc
outs
in
or
mov
dec
out
add
lea
pop
cs
les
push
aas
aas
into
push
(bad)
xchg
xor
cmp
push
dec
inc
dec
jno
scas
shl
mov
inc
mov
mov
jbe
iret
xchg
inc
pop
cmp
xchg
imul
cs
sub
rcr
test
fldenv
xchg
fld
add
sub
xor
shl
jae
cs
xchg
pop
push
cmp
scas
inc
int
ja
out
sbb
mov
sbb
ja
jmp
mov
sub
movs
addr16
test
mov
mov
ja
push
test
(bad)
div
cli
ret
mov
push
repz
jmp
push
or
outs
jmp
adc
cmp
push
xlat
push
std
pop
mov
ficom
lea
pop
xchg
and
gs
add
adc
nop
cmc
mov
arpl
mov
mov
test
idiv
inc
jmp
jcxz
fs
sbb
icebp
adc
popf
popa
adc
dec
pop
dec
enter
test
dec
pcmpeqd
addr16
retf
mov
paddw
clc
add
call
add
mov
aas
test
dec
lock
dec
test
pop
and
mov
lds
mov
les
push
mov
leave
pop
and
shl
lock
ret
das
sub
inc
scas
aam
mov
std
clc
adc
mov
fdivr
or
loope
aaa
and
lea
in
mov
out
push
fs
test
mov
mov
nop
push
sbb
fdiv
sub
test
mov
xchg
imul
fwait
jo
retf
cli
ret
mov
lods
movs
pop
mov
push
sbb
pop
(bad)
stos
push
outs
in
mov
ins
and
shl
pop
mov
lods
cmp
sbb
pop
pop
(bad)
aam
js
aam
out
pusha
imul
jo
das
loope
or
fbld
out
and
push
xor
in
or
aaa
fucomip
pop
fmul
add
scas
sub
cmp
cmp
imul
jp
jo
mov
retf
pop
sbb
mov
mov
les
pop
stos
add
push
retf
les
aam
(bad)
fist
and
xor
xor
popa
inc
mov
je
xchg
inc
std
in
fwait
cmp
mov
in
in
mov
sar
xor
pusha
data16
push
outs
rcr
mov
outs
mov
and
dec
fnstsw
pop
pop
pop
push
stos
ret
mov
cwde
mov
jecxz
ror
mov
adc
in
fldenv
jle
push
add
jl
das
lahf
rcr
call
and
aas
inc
mov
stos
test
bound
ret
push
clc
ss
unpckhps
jg
sbb
ds
mov
scas
jnp
push
pop
in
mov
add
mov
xchg
cli
cdq
retf
out
mov
and
sbb
pop
loopne
jge
ins
pushf
and
bound
ds
add
xchg
data16
push
ins
xchg
imul
mov
xchg
aam
xor
push
test
add
xchg
iret
sub
sbb
push
bound
pop
(bad)
xchg
dec
inc
ror
mov
sub
sbb
push
cmp
or
popf
sub
sub
jle
and
int3
hlt
inc
mov
pop
call
sbb
stos
jmp
clc
bnd
push
fwait
test
icebp
inc
mov
xchg
inc
(bad)
mov
sub
xchg
retf
mov
aam
scas
cwde
addr16
nop
mov
xchg
ss
jle
sbb
adc
and
mov
push
dec
(bad)
test
pop
push
sbb
stos
ins
xchg
int3
cmp
js
jle
sbb
push
sbb
cwde
das
ins
(bad)
in
cmp
mov
mov
cmps
lock
dec
sti
mov
inc
jns
loopne
or
retf
in
(bad)
dec
add
mov
loopne
stos
into
sbb
sub
jb
cld
sbb
adc
arpl
aas
or
mov
inc
xor
bound
imul
int
jae
mov
es
add
xor
sub
stos
inc
adc
je
adc
out
cmp
dec
dec
popf
mov
cmp
jge
inc
push
inc
pushf
and
(bad)
pop
ror
ret
jno
(bad)
ss
jl
fidiv
ret
aaa
jns
ss
push
jecxz
pop
sar
data16
cmp
xor
shr
mov
dec
cmp
ret
out
dec
sbb
adc
pop
fld
jmp
in
push
stc
xor
cmp
cmps
cli
dec
shr
mov
hlt
mov
je
pop
mov
jb
into
add
je
outs
push
mov
add
repz
cli
cmps
enter
add
cmp
xchg
fs
imul
clc
mov
push
jmp
and
pop
int3
pushf
dec
sar
sti
cmp
mov
hlt
push
(bad)
or
nop
sbb
xchg
loopne
push
cmp
jp
push
mov
push
stos
addr16
mov
mov
popa
sbb
mov
aad
ins
outs
pop
jbe
sub
sub
add
stos
sbb
in
cmp
sar
cdq
or
mov
xor
jo
xor
fwait
imul
mov
cmp
outs
mov
(bad)
xchg
xchg
cld
mov
(bad)
fcomp
add
fdiv
inc
push
xor
and
push
(bad)
mov
adc
cmp
int3
inc
sub
mov
aam
test
js
adc
fild
imul
leave
iret
sbb
push
inc
adc
jns
ins
test
sub
adc
out
lock
push
and
jmp
mov
test
jo
push
jmp
xor
jecxz
push
xor
sub
xchg
xchg
mov
add
popa
in
or
and
cmp
in
adc
je
xchg
pcmpeqw
fisttp
jnp
and
xor
fadd
jns
mov
or
ins
lock
pop
retf
push
in
loope
xchg
aad
cmps
lods
mov
xchg
hlt
sti
and
rcl
sbb
les
adc
movs
leave
cmp
jns
ja
stc
lods
imul
jg
jbe
call
repz
imul
sbb
pop
imul
das
add
pop
in
or
(bad)
mov
loope
sar
cwde
ss
or
pop
imul
xor
pop
and
xor
jae
(bad)
cmp
out
push
add
ja
test
add
xchg
jne
je
ja
add
popf
xchg
js
mov
xchg
bound
jecxz
in
jmp
xor
in
mov
pop
add
cmp
ins
or
sbb
dec
(bad)
jecxz
js
bound
cdq
cmp
sar
sbb
push
jg
arpl
adc
loop
pop
fbstp
sub
mov
jp
adc
mov
data16
push
call
aad
sub
iret
jle
jns
adc
into
repz
add
fsub
jb
mov
push
or
dec
movs
mov
aas
test
mov
inc
test
mov
rcl
lods
(bad)
ret
cs
pusha
fadd
sbb
adc
gs
int3
xor
popa
mov
in
mov
adc
jecxz
es
loopne
sbb
jmp
fcom
add
add
pop
sub
call
leave
xlat
das
out
xor
sub
adc
mov
cmp
call
in
xor
xchg
mov
les
xchg
jnp
add
xchg
jp
add
mov
es
daa
aam
cmp
add
inc
js
loop
out
mov
or
and
cmp
push
jae
dec
stc
sub
mov
sbb
sar
cmc
loop
inc
int3
lahf
fs
inc
aaa
mov
jnp
xchg
daa
jge
and
stc
inc
(bad)
ss
loopne
les
in
imul
jne
rcr
adc
sar
repz
inc
jb
dec
push
in
ss
enter
push
data16
cmc
jge
jp
sbb
out
icebp
fs
mov
and
xor
jns
faddp
sub
aaa
xchg
pop
jl
stc
push
fs
(bad)
fiadd
shr
lock
outs
aas
adc
rol
adc
xchg
mov
mov
pusha
dec
addr16
retf
ins
(bad)
(bad)
and
das
and
retf
cmp
(bad)
ror
scas
enter
pop
sar
inc
popa
out
(bad)
pop
add
(bad)
out
pop
in
cmc
adc
add
repz
in
aam
stc
enter
clc
cmovns
jp
xor
push
jle
mov
in
movs
dec
push
mov
lds
and
(bad)
icebp
fisttp
into
fsubr
adc
neg
mov
test
mov
xchg
sar
push
pop
xor
stos
xchg
or
jnp
add
test
cs
or
cmps
pop
pop
push
daa
push
inc
js
adc
iret
xchg
shl
loopne
cmp
outs
inc
shr
and
and
(bad)
lods
in
loope
hlt
mov
and
mov
xor
sub
add
cld
pop
or
push
(bad)
dec
fs
adc
test
in
popa
loope
mov
out
sbb
or
push
repz
test
inc
mov
mul
out
jg
stc
and
enter
stc
pushf
cmps
bts
rol
and
push
adc
jmp
inc
ss
jl
mov
loop
sub
in
out
push
dec
pop
aad
pusha
(bad)
xchg
push
gs
fst
xor
(bad)
pop
cmp
lea
push
retf
pop
xor
add
dec
cmp
sbb
pop
cwde
or
das
mov
push
jp
add
mov
call
lock
xor
xlat
push
jecxz
jle
outs
sar
xchg
sub
add
retf
stos
mov
(bad)
fdivr
adc
ja
sub
mov
in
cld
xchg
into
popf
cmc
mov
pop
xchg
lds
and
jns
mov
add
loop
lds
pop
pop
xchg
adc
rcr
in
popf
sar
xor
rcl
lods
sar
sub
shl
sub
rcl
repnz
lahf
add
loope
cmp
or
pop
mov
cmps
push
jne
or
pusha
scas
mov
cvtdq2ps
dec
xor
xor
arpl
add
sbb
adc
(bad)
neg
movs
mov
call
mov
push
and
fnstcw
test
jo
dec
add
loopne
and
rcr
(bad)
pop
scas
(bad)
ret
cmps
lods
xlat
popa
ja
mov
adc
fs
jno
and
retf
mov
cwde
inc
sub
ds
int3
int3
repz
in
and
enter
ss
std
cwde
pop
xchg
cmp
pushf
mov
push
cmps
repz
sbb
pop
mov
jb
sbb
push
dec
out
push
je
mov
jmp
dec
and
adc
mov
and
fmul
aam
xchg
jcxz
scas
dec
bound
lock
je
xor
jge
(bad)
icebp
adc
scas
mov
leave
inc
jo
cmp
int3
and
xchg
in
inc
clc
inc
xor
mov
inc
jbe
cmp
call
or
cmp
dec
cmp
frstor
mov
setns
mov
cli
mov
adc
mov
add
pop
pop
lds
push
pop
sub
imul
mov
xor
and
sbb
push
inc
inc
push
mov
xlat
inc
jmp
sbb
hlt
in
jbe
cmp
hlt
push
cli
mov
mov
addr16
aas
js
or
xlat
add
leave
sub
ret
adc
push
pop
cmp
rol
clc
sbb
lahf
cmp
fmul
repnz
gs
and
inc
pop
mov
mov
jmp
je
push
(bad)
xchg
sub
or
popaw
test
mov
loope
call
mov
sbb
jno
test
jo
add
pop
pop
ds
fiadd
mov
xchg
retf
cmps
dec
out
mul
int
mov
jmp
int
cmc
push
dec
pop
mov
ins
sbb
push
sahf
xor
mov
pop
xchg
clc
and
pop
sub
ret
cld
xchg
and
mov
jne
out
dec
in
icebp
retf
inc
add
pop
lds
out
jns
lock
retf
out
xchg
or
xchg
ins
pop
lahf
ins
xor
arpl
addr16
or
mov
add
call
xlat
(bad)
sbb
sbb
out
inc
mov
sub
repz
add
lock
mov
cs
int
and
xor
call
aaa
call
fucomp
xchg
lods
and
inc
aaa
shr
fild
inc
popf
aaa
jmp
in
or
div
dec
cld
push
adc
popf
push
mov
and
std
inc
ins
mov
int
or
pop
mov
adc
(bad)
jb
iret
(bad)
(bad)
mov
(bad)
popa
in
fistp
push
pop
adc
add
addr16
mov
xor
sub
imul
lgs
mov
popa
enter
xor
mov
hlt
pop
push
fild
fidivr
adc
(bad)
jl
sbb
inc
lods
inc
cmps
lea
fldl2t
retf
shl
dec
in
push
mov
inc
sub
dec
call
inc
in
sti
out
mov
rol
mov
cmp
mov
xchg
rol
push
cs
fst
rcr
(bad)
push
and
mov
ja
mov
mov
push
pop
mov
pop
dec
lods
test
mov
dec
xchg
dec
mov
lahf
sbb
(bad)
cwde
clc
ret
inc
pop
es
cli
int3
mov
(bad)
jne
adc
pop
(bad)
jmp
pop
cmp
ret
test
daa
add
cli
arpl
xlat
jbe
mov
in
ins
popa
inc
jne
push
(bad)
pop
aaa
push
fisubr
gs
ret
outs
fcmovbe
lods
pop
pusha
cs
xchg
push
push
aas
pop
mov
sub
popa
mov
dec
cs
fisubr
sbb
inc
test
inc
mov
scas
sbb
leave
ret
cwde
repnz
sbb
inc
into
xor
icebp
dec
into
mov
loop
imul
cdq
mov
bound
fsubr
inc
ins
in
xchg
aaa
pop
jge
test
mov
in
lods
mul
mov
jbe
fcomip
hlt
leave
push
or
mov
push
xchg
mov
add
repnz
xchg
xchg
pop
mov
movsx
or
and
jecxz
(bad)
sub
jo
xlat
test
loope
fmul
mov
aad
mov
retf
icebp
xchg
dec
xchg
inc
adc
mov
imul
pop
iret
cdq
mov
dec
sbb
cmps
jl
mov
mov
xchg
aaa
mul
movs
mov
mov
outs
jmp
je
mov
mov
inc
cmp
lods
dec
push
sbb
repnz
cmps
ret
leave
pop
xchg
mov
and
jnp
in
xchg
mov
sahf
sbb
xlat
div
leave
push
ds
lahf
mov
jae
pop
aas
jne
mov
xchg
inc
hlt
cmp
pop
add
lock
push
repz
jb
and
fs
sub
in
dec
imul
jmp
xchg
or
rcl
sbb
and
rcl
or
fwait
pop
jo
push
loopne
pushf
or
dec
ret
dec
imul
xor
shr
into
stc
sub
sub
or
xor
cdq
push
push
push
mov
fnstcw
les
call
fild
mov
mov
sub
adc
cmp
fadd
aas
arpl
(bad)
(bad)
mov
push
mov
sub
outs
sbb
in
mov
ret
jae
or
xchg
xor
ffree
dec
sbb
fwait
and
cmp
cdq
cmp
jne
mov
xor
dec
shl
dec
add
addr16
adc
into
mov
int3
sbb
cld
xor
dec
jae
call
dec
pop
sub
arpl
cdq
jl
inc
ins
in
cdq
or
push
fdiv
jno
sbb
inc
and
repz
pop
aas
ins
js
adc
out
shr
aam
mov
jne
mov
in
and
dec
jmp
push
adc
mov
push
xor
lea
jo
and
retf
mov
pop
cmps
call
rol
les
popa
and
push
add
iret
dec
sub
ins
cmp
out
lock
rcr
jb
into
and
inc
stos
stc
into
popa
or
popa
push
mov
inc
stc
inc
or
dec
dec
icebp
fcomp
dec
ficomp
lock
sub
mov
sbb
(bad)
adc
neg
ss
add
sub
pop
and
push
adc
loop
test
lods
mov
xchg
or
sub
jmp
add
mov
xchg
mov
push
sbb
or
cld
push
call
call
mov
fild
xchg
pusha
adc
jne
stc
and
setg
push
stos
mov
movs
(bad)
inc
(bad)
sti
push
gs
ja
mov
jge
pop
(bad)
cmp
inc
fst
inc
xchg
sbb
call
jns
cmp
sub
sbb
and
fdivrp
jg
adc
iret
(bad)
jg
sub
sub
aaa
mov
ror
imul
dec
fimul
push
push
addr16
xchg
fild
arpl
xchg
retf
adc
daa
mov
and
hlt
push
inc
push
call
fs
pusha
jne
push
xchg
scas
lea
jmp
inc
sahf
out
lea
movs
fs
dec
fst
cmc
sahf
mov
sub
xor
mov
dec
pop
loop
pop
xchg
bound
fiadd
or
adc
mov
lock
sbb
(bad)
pop
jb
push
loop
sbb
xor
or
call
push
cmps
out
sub
jge
add
cwde
(bad)
imul
adc
xchg
call
mov
popf
rol
jae
add
arpl
sub
xchg
sbb
lock
pop
jno
enter
je
inc
stos
fdivr
fwait
xor
mov
jl
push
jo
or
and
call
out
into
pop
ins
out
in
pop
div
xor
(bad)
jge
mov
ror
rcl
mov
mov
adc
add
push
mov
adc
int3
aad
mov
retf
ror
les
imul
retf
out
shl
sub
xchg
fnsave
or
and
das
sub
push
std
sub
mov
ret
add
bound
fcomp
xchg
mov
xchg
jl
(bad)
jecxz
add
add
sub
xor
enter
fsub
xor
test
popa
neg
add
mov
cmc
gs
mov
repz
leave
cs
cmp
sbb
hlt
fsubr
mov
sub
cs
je
call
sbb
jg
(bad)
(bad)
cmp
aaa
push
mov
push
sbb
out
sub
and
jp
jb
fimul
in
push
sub
pop
push
popf
nop
outs
jns
jns
lahf
daa
call
jno
jae
test
pop
or
(bad)
(bad)
inc
test
xor
jae
push
call
jmp
and
mov
push
shr
cld
or
cld
retf
mov
mov
sar
in
outs
dec
xor
add
aaa
leave
std
shl
shl
mov
aam
(bad)
clc
test
xor
jns
rol
int3
sbb
mov
push
enter
xor
xchg
mov
xor
push
lock
dec
aaa
jp
xor
pop
mov
retf
out
stos
jecxz
jnp
adc
push
inc
aad
mov
cmps
mov
loopne
cmp
in
cli
fnsave
cmp
fiadd
push
stos
stos
fwait
jo
je
shr
jle
and
int
sub
adc
fld
xchg
popa
fwait
cs
pop
mov
test
sar
dec
dec
aam
pop
or
inc
xchg
mov
xchg
loopne
das
in
adc
jg
ret
sbb
test
mov
retf
mov
nop
and
lods
cmps
in
cmp
inc
push
(bad)
jo
push
mov
cmp
popf
stos
movs
adc
stc
jbe
pop
mov
xchg
mov
fisub
pop
mov
fs
in
push
popa
mov
sub
sar
or
inc
pop
sbb
scas
lahf
jno
mov
dec
jo
sar
movs
clc
mov
js
push
mov
outs
mov
adc
inc
dec
lock
js
in
(bad)
or
fist
shr
popa
xor
cwde
out
sahf
out
add
(bad)
fnsave
jl
xor
adc
test
into
xchg
inc
push
pop
aad
dec
push
pushf
(bad)
je
dec
cli
ficom
xor
dec
(bad)
rol
pop
adc
imul
lea
cmps
shl
push
nop
jg
(bad)
xor
jne
jne
push
mov
cmp
mov
(bad)
stos
dec
lahf
xchg
pop
(bad)
xchg
fs
dec
xchg
mov
ins
in
lods
rcl
xor
aas
int
div
add
in
push
mov
js
jp
ins
data16
and
retf
sar
cmp
or
dec
jmp
icebp
pop
xor
jge
clc
loopne
icebp
inc
pop
dec
call
call
xchg
push
leave
sbb
mov
and
add
xchg
ins
mov
pop
cmc
clc
xor
mov
dec
mov
jmp
pop
iret
inc
mov
sbb
or
fidiv
pop
adc
les
xlat
sbb
mov
and
das
mov
sbb
cmps
jb
(bad)
int
mov
add
popf
bound
sbb
retf
cmp
test
or
call
(bad)
fistp
inc
hlt
enter
push
popf
inc
xchg
or
loope
into
cdq
mov
dec
out
sub
in
inc
add
and
jne
stc
leave
fsubr
push
std
adc
cmps
pop
inc
call
push
xor
adc
pop
push
mov
sbb
mov
mov
mov
add
inc
add
cld
rol
push
outs
lods
popf
jecxz
cmp
mov
out
and
adc
push
shl
ins
add
in
movs
in
rcr
sub
sahf
in
and
test
icebp
loop
sar
scas
jno
push
fnsave
cmp
push
iret
sub
bound
dec
arpl
lahf
scas
inc
(bad)
xlat
shr
or
push
and
cmp
mov
xor
outs
sub
inc
hlt
pop
sbb
and
mov
imul
push
retf
xchg
push
les
xchg
iret
adc
add
in
test
mov
rcl
jle
sub
outs
xor
dec
push
dec
dec
xor
or
scas
sbb
out
(bad)
dec
imul
loopne
or
push
ins
rol
test
cli
dec
mov
mov
retf
adc
(bad)
int3
jbe
xchg
aas
and
push
aam
gs
pop
mul
cmps
scas
sub
(bad)
jns
dec
cwde
xchg
pop
dec
dec
ja
mov
cdq
cmp
rol
jp
mul
dec
push
jae
push
xchg
or
les
xor
mov
jecxz
repz
cmps
js
push
dec
scas
into
int3
fild
(bad)
outs
lods
ror
scas
mov
mov
jb
push
push
pop
sbb
out
mov
mov
fcom
adc
cmp
imul
aad
sahf
mov
jbe
std
cmovg
push
out
jb
mov
or
xchg
out
je
dec
lods
ficom
sar
or
pop
jnp
test
pop
ins
out
or
push
xchg
repz
inc
loope
and
iret
lods
(bad)
and
popa
mov
adc
(bad)
ins
jo
mov
(bad)
add
mov
sub
xchg
push
fisub
jmp
bound
inc
mov
mov
lods
not
add
loopne
arpl
pusha
mov
ret
sbb
sub
jge
mov
ins
inc
ins
test
sub
add
popf
mov
lds
sub
cmp
jne
sub
cmp
push
or
dec
sub
add
xor
ficom
push
adc
and
cmc
jge
ja
sahf
repz
icebp
popa
sbb
jno
adc
mov
jl
sbb
iret
out
add
sbb
mov
mov
cdq
or
xchg
sbb
rcr
mov
js
jbe
mov
mov
push
mov
mov
test
ficomp
scas
pop
scas
(bad)
mov
pop
outs
jmp
pop
dec
pushf
xchg
adc
lods
adc
movs
scas
jae
jge
outs
enter
xor
mov
and
into
das
mov
je
ret
mov
dec
add
add
add
xor
mov
pop
cdq
je
pop
mov
stos
pop
fmul
ret
ins
icebp
xor
xchg
jmp
mov
pop
shl
inc
mov
outs
mov
xor
adc
push
add
sub
cmp
std
lahf
aas
(bad)
fimul
sub
and
or
xchg
clc
stos
add
mov
fldcw
push
inc
pop
movs
arpl
(bad)
jle
xchg
dec
ret
lahf
mov
cmp
push
jns
xchg
mov
jmp
test
sbb
rcl
ins
or
inc
mov
icebp
cmps
stos
push
jmp
cmp
lds
sar
dec
pop
sti
aad
(bad)
xchg
pop
rcr
call
sbb
nop
loop
jnp
mov
cmps
nop
push
inc
test
push
std
mov
inc
push
push
pop
and
or
mov
mov
pushf
mov
xor
xchg
cmp
repz
pushf
push
jecxz
inc
daa
popf
adc
lods
inc
mov
pop
fwait
mov
pop
and
xor
in
popa
cmp
mov
sti
imul
repz
mov
jo
jns
popf
mov
adc
xchg
and
iret
dec
enter
stos
pop
repnz
lods
(bad)
dec
pop
rol
sub
jbe
push
mov
xchg
adc
xor
push
in
sbb
dec
gs
sbb
xchg
popa
or
inc
ror
loopne
sub
popf
xor
pusha
mov
gs
and
xchg
test
xchg
lock
jbe
mov
inc
adc
cmps
stc
push
pop
jle
fdivrp
bound
cmp
xor
mov
xor
jb
cld
cdq
outs
fnstenv
repz
push
loopne
jge
dec
and
mov
repz
outs
ror
sbb
mov
sub
and
inc
xchg
js
sub
dec
rol
into
push
fwait
add
inc
sbb
push
outs
push
and
scas
lgs
das
pop
mov
mov
inc
dec
(bad)
cmp
test
mov
adc
in
ins
and
cmp
(bad)
loope
mov
pusha
test
lock
mov
adc
mov
inc
sub
inc
mov
mov
xchg
(bad)
cmc
or
call
gs
xchg
mov
mov
iret
inc
(bad)
cld
mov
mov
imul
and
mov
retf
mov
in
and
dec
jg
in
mov
dec
cdq
jo
mov
in
in
and
cmc
stc
inc
xchg
cmp
jae
xor
mov
cmps
jecxz
out
aas
xor
inc
das
(bad)
cmps
sbb
adc
adc
fsub
gs
inc
push
pushf
jmp
sbb
push
iret
add
int3
daa
pop
and
lea
arpl
lods
xchg
cdq
push
mov
mov
call
std
gs
imul
adc
or
adc
jge
daa
(bad)
inc
push
jp
aaa
xlat
pop
ret
sub
adc
call
stos
sbb
in
mov
and
(bad)
(bad)
dec
(bad)
mov
pop
and
cmc
jle
sbb
repnz
iret
mov
ja
adc
cmp
jp
addr16
out
int
sub
push
xchg
lock
outs
jne
bswap
iret
fst
fisttp
xor
pop
retf
mov
movs
ss
fadd
sbb
xchg
mov
mov
jmp
fcmovnu
test
pop
sar
sahf
mov
pop
xchg
jmp
test
inc
in
cdq
out
and
jecxz
ja
iret
ja
mov
inc
xchg
add
int
loopne
imul
or
(bad)
dec
mov
sbb
leave
icebp
inc
test
int3
ret
pushf
push
dec
sbb
aas
xlat
sub
or
stos
stc
mov
or
and
leave
xor
mov
cmp
xlat
jo
aam
in
mov
inc
jecxz
fwait
lods
lahf
or
popf
sub
and
pop
xchg
test
ja
lea
mov
daa
dec
mov
cmps
fisub
nop
push
add
jge
hlt
lds
xchg
cli
loopne
lahf
dec
push
xor
mov
push
into
in
and
add
sti
stos
pop
(bad)
movs
ret
fldcw
(bad)
aas
nop
(bad)
es
enter
xchg
jno
push
fsubr
mov
stos
adc
(bad)
add
cmp
mov
jnp
or
push
jne
in
jne
(bad)
movs
push
and
sub
push
scas
in
xchg
shl
adc
pop
cmp
mov
clc
test
dec
aas
mov
popf
(bad)
idiv
(bad)
xor
lds
outs
inc
jge
jno
mov
adc
sub
mov
mov
xchg
(bad)
leave
and
out
or
adc
xchg
xor
adc
ins
jnp
sub
ror
xor
ss
xor
jns
popa
mov
sub
push
inc
js
(bad)
pop
(bad)
or
outs
sbb
int3
mov
into
sub
cmp
or
mov
add
mov
fidivr
repz
cwde
movs
inc
jno
add
mov
xchg
add
clc
dec
jge
fsub
test
and
sub
push
or
shl
in
cmp
add
lock
ja
mov
inc
jmp
mov
stc
pop
mov
out
push
add
mov
inc
call
popa
lods
(bad)
loope
cmc
sbb
loopne
cmps
cmp
or
fadd
sahf
aad
fmul
lods
(bad)
and
push
inc
add
lods
cmp
ret
cmp
nop
jmp
sbb
dec
sti
push
or
pop
jp
shl
popf
cdq
add
lahf
mov
push
and
mov
outs
fs
das
ror
jo
dec
jbe
out
jle
jns
mov
arpl
jp
push
(bad)
pushf
mov
push
addr16
jecxz
inc
aaa
xor
ins
xor
dec
push
aam
pop
xor
inc
xchg
pop
call
mov
test
sub
lods
mov
dec
cmp
jne
imul
je
ret
frstor
rol
cli
int3
inc
iret
xor
mov
jnp
xchg
push
lods
aam
mov
xchg
dec
sub
pop
sub
pop
(bad)
fisubr
mov
jle
shr
pusha
ret
mov
sahf
mov
cmp
xchg
stos
xor
sub
sti
dec
pushf
shr
(bad)
call
mov
cmp
mov
ret
xor
cmp
jg
push
loop
mov
outs
retf
sub
push
out
and
fmul
rol
xchg
mov
ret
dec
cwde
loope
in
cdq
fcomp
jp
pop
cmp
daa
inc
imul
push
push
div
fdivr
leave
in
(bad)
cmp
jp
jmp
jge
mov
jnp
xlat
repnz
inc
ja
jmp
into
mov
pop
mov
add
sti
mov
fmul
scas
test
sbb
mov
push
sub
call
add
icebp
push
es
daa
sbb
(bad)
dec
dec
outs
arpl
or
ret
inc
loopne
fwait
mul
push
sbb
push
push
mul
adc
(bad)
mov
push
imul
jmp
sbb
mov
scas
pop
pop
or
dec
xor
jmp
jp
int3
fs
ja
dec
scas
std
xchg
lock
xchg
push
inc
mov
cmps
push
and
mov
push
int3
dec
mov
jge
stos
pop
cs
push
popf
push
out
lods
sbb
mul
sbb
jge
js
rcl
adc
test
jbe
sahf
imul
idiv
add
movs
rol
(bad)
adc
cmp
cmp
add
dec
je
sbb
dec
(bad)
pop
dec
sbb
mov
repnz
jl
xchg
das
adc
cs
inc
or
inc
mov
sahf
cmp
inc
ja
push
jne
aad
jle
and
push
shl
mov
aas
xchg
movs
out
sub
and
dec
(bad)
aad
ss
sti
jno
es
jmp
mov
mov
dec
xor
xor
push
test
in
aas
js
sbb
and
push
(bad)
in
idiv
add
lods
addr16
add
sbb
pop
and
frstor
stos
outs
jl
shl
mov
setp
lods
aas
xor
push
sbb
pop
dec
sbb
aad
mov
arpl
inc
out
lods
in
mul
jecxz
inc
adc
(bad)
jnp
xor
jns
mov
mov
or
inc
cs
add
por
je
jns
int3
cmp
and
mov
sub
sahf
sub
sbb
je
test
lods
mov
imul
jp
and
jo
push
mov
push
jecxz
inc
jle
outs
stos
push
stc
adc
inc
cld
outs
loop
ins
adc
adc
(bad)
je
shl
pop
push
dec
jp
xor
xlat
(bad)
push
or
inc
jbe
add
imul
inc
sahf
hlt
push
in
inc
add
pushf
push
jmp
push
mov
fnstcw
dec
adc
je
enter
icebp
push
jnp
retf
push
gs
loopne
jge
(bad)
sub
and
lea
shl
sub
daa
ds
add
dec
fsubr
adc
mov
gs
fimul
jge
fldenv
stos
cmp
jbe
scas
shl
jl
imul
div
inc
cmp
cmp
pusha
stos
inc
add
jno
mov
push
mov
sbb
jbe
pop
std
mov
or
nop
loope
jp
mov
lods
loope
cmp
popf
test
iret
cmc
mov
mov
pop
add
mov
dec
jo
loope
cmp
les
dec
xchg
sub
enter
das
out
push
cmc
adc
sub
aas
in
mov
movq
sub
lods
popf
or
sti
loopne
dec
mov
jecxz
repnz
movs
leave
data16
int
movs
(bad)
aad
jo
jecxz
or
nop
lods
rol
sub
outs
mov
popa
rol
sbb
sub
mov
inc
xchg
test
sbb
cmp
adc
(bad)
hlt
fisub
mov
icebp
xchg
mov
fstp
inc
jns
retf
dec
push
push
ret
mov
and
ret
fs
mov
out
je
out
push
push
loope
jl
xchg
and
test
and
das
stos
sub
loop
sub
cwde
add
outs
pop
or
push
pushf
call
pop
or
std
dec
outs
sbb
fld
(bad)
mov
xor
adc
sub
(bad)
out
xchg
pop
in
xchg
iret
stos
call
lahf
inc
pop
jo
push
aas
and
scas
sub
mov
jl
rcl
sbb
jmp
fs
sbb
push
pop
hlt
jae
or
leave
rcr
mov
ins
push
xchg
shl
pop
es
cmp
dec
inc
xchg
jnp
inc
dec
das
out
pop
cmp
clc
loopne
add
push
xchg
arpl
mov
jmp
data16
in
icebp
stos
xor
push
pop
dec
enter
xchg
ss
mov
daa
and
sahf
jge
fbld
adc
pushf
mov
or
jno
push
and
test
fwait
in
cdq
xchg
es
sub
scas
xor
fdiv
pop
and
addr16
push
dec
cwde
into
into
test
pusha
in
in
out
or
mov
shl
mov
out
mov
mov
movs
mov
mov
aas
cwde
adc
sub
jmp
push
mov
sub
xlat
inc
rol
cmp
pop
xlat
fmul
js
imul
mov
sbb
push
jge
mov
js
rcr
dec
repnz
cmp
add
dec
gs
fnstenv
mov
hlt
jp
je
mov
push
pop
lock
push
repz
mov
mov
test
aad
xor
or
outs
dec
mov
sbb
fadd
pop
inc
nop
sub
sub
test
dec
neg
mov
fidiv
lods
mov
push
xor
add
cld
dec
mov
int
inc
inc
ja
mov
mov
pop
popf
clc
xor
scas
xor
js
shl
sti
je
mov
loope
shr
pop
clc
seto
or
mov
loope
jmp
iret
fldenv
(bad)
in
adc
push
mov
mov
xor
mov
ins
lahf
adc
add
fild
xchg
lods
pop
aam
mov
cmp
cmc
push
push
gs
dec
imul
push
dec
retf
pop
jl
jbe
int3
call
xor
into
xor
add
cmc
pop
adc
cmp
retf
popa
or
pop
adc
ret
imul
call
test
pushf
test
mov
out
jns
push
in
mov
stc
jg
xchg
retf
cmp
add
sub
jo
fdivr
mov
push
nop
sbb
data16
push
or
xchg
xor
mov
jp
xor
push
loop
pop
jp
adc
addr16
(bad)
fmul
(bad)
adc
in
cdq
bound
cld
push
push
pusha
bound
(bad)
lods
pop
movs
xchg
repz
mov
sub
jle
jnp
hlt
inc
cs
clc
rcr
lods
jb
mov
arpl
push
inc
add
sbb
jno
shl
and
push
sbb
xchg
dec
add
dec
stos
jb
xor
jb
icebp
jmp
retf
dec
push
jbe
dec
and
repz
fdiv
cmp
nop
lahf
jb
jmp
jp
pop
lods
es
movs
movs
shr
xor
xlat
dec
fcmove
lds
pop
ins
mov
mov
loopne
cmp
jnp
add
mov
loope
mov
je
mov
popa
pop
mov
bound
or
sbb
sub
mov
xchg
dec
push
jne
popf
add
pop
aaa
push
js
or
sahf
push
xor
nop
xchg
retf
mov
cmps
sub
dec
inc
fstp
cmp
(bad)
mov
shl
div
dec
inc
jb
test
cmp
cmps
cmp
fs
(bad)
pop
in
jecxz
xor
outs
xor
mov
add
ss
sbb
jno
jne
icebp
jno
int
dec
ja
fcom
jge
scas
cmp
pop
xchg
lods
xchg
daa
ret
push
js
repz
imul
loop
daa
iret
(bad)
and
mov
cmp
sbb
jecxz
popf
call
adc
les
daa
adc
sub
div
or
mov
test
push
(bad)
aaa
xor
inc
add
(bad)
into
inc
loopne
add
stos
jmp
sahf
mov
scas
fistp
fsub
push
cmp
out
into
ret
adc
sbb
retf
dec
and
dec
call
outs
jnp
(bad)
(bad)
mov
(bad)
fs
fst
xor
push
inc
jmp
mov
sbb
icebp
mov
pop
movs
mov
ins
xlat
mov
rcr
xor
outs
sbb
je
mov
addr16
jg
mov
mov
dec
dec
mov
ins
cmp
pop
or
push
popa
into
jp
xlat
cld
pop
imul
arpl
or
push
jnp
xchg
aam
xchg
aad
cmp
imul
mov
push
and
stos
inc
jge
push
stos
sar
into
sbb
lods
ins
sbb
push
jle
jmp
out
sbb
jmp
movs
(bad)
jnp
cmp
rol
xchg
clc
pop
mov
pushf
mov
push
jbe
mov
das
icebp
or
xchg
popa
mov
aam
xchg
dec
jmp
inc
sar
stos
xor
pop
xor
push
mov
ins
push
sbb
sbb
push
adc
fs
aam
xchg
mov
pcmpgtd
repz
mov
loopne
xchg
xor
jg
sbb
lds
xor
push
(bad)
nop
push
rol
pop
mov
and
adc
mov
jne
clc
push
or
loop
or
cmp
(bad)
cmp
push
inc
lods
add
sbb
adc
gs
xlat
mov
imul
in
rcl
sbb
xor
aam
cmps
rcl
mov
xor
ins
sbb
into
jno
add
add
lock
push
jg
inc
jno
sub
jbe
aas
dec
sub
movs
icebp
hlt
cmp
ret
jecxz
mov
movs
cmp
sahf
mov
and
sub
xor
mov
fdiv
inc
xchg
add
add
dec
sub
xor
imul
jmp
push
nop
sub
pushf
test
dec
dec
jmp
dec
lods
dec
jb
shl
inc
or
rep
mov
aaa
pusha
div
cmp
loopne
or
mov
shr
adc
mov
fistp
sub
fst
outs
mov
dec
lahf
cmp
sbb
pushf
jp
das
imul
stos
lea
mov
pop
xlat
addr16
loop
scas
xchg
adc
add
xchg
or
dec
cli
xchg
adc
sub
inc
add
mov
push
ret
test
or
fdiv
repnz
adc
or
add
int
ret
(bad)
cmp
jmp
stos
inc
fsubr
scas
lods
(bad)
sbb
mov
je
mov
mov
fcmovnb
daa
jecxz
in
iret
out
iret
pop
adc
mov
dec
or
aas
mov
lock
mov
jp
mov
adc
(bad)
push
sub
into
icebp
popa
dec
jge
adc
inc
outs
repz
xchg
(bad)
loopne
ret
mov
sub
(bad)
mov
rol
dec
dec
adc
dec
cmp
push
push
push
(bad)
mov
mov
repz
movs
inc
cmp
(bad)
sub
add
pusha
jno
xchg
call
stc
cmp
mov
add
inc
ret
jb
mov
cmp
arpl
xchg
mov
push
(bad)
cmps
sub
(bad)
(bad)
les
cli
push
xor
out
or
push
mov
pop
loopne
mov
or
loopne
dec
or
cmps
xchg
mov
mov
rol
imul
stc
sbb
xor
mov
sti
push
cmp
into
popf
xor
xor
or
add
ins
mov
jge
and
cmp
mul
sti
mov
push
lea
test
mov
popf
dec
aas
and
sub
imul
es
sar
jge
or
push
sub
fcmovne
fisttp
inc
adc
ja
inc
sub
adc
outs
adc
or
ins
and
(bad)
cmp
xor
test
and
aad
push
adc
(bad)
and
mov
jp
dec
pop
adc
sbb
sub
xor
jmp
push
sub
popf
rol
clc
cdq
push
xlat
sbb
xchg
bound
jnp
ss
arpl
shl
in
mov
mov
jmp
sub
cmps
mov
jle
jge
(bad)
mov
dec
push
test
inc
leave
hlt
sub
jo
xor
push
sbb
add
shl
out
pop
ja
add
iret
adc
test
ror
push
push
ins
frstor
inc
xchg
mov
mov
fimul
sub
jle
mov
les
ror
adc
add
adc
push
fnsave
adc
stos
out
cwde
xchg
jmp
ds
cwde
fnstsw
mov
jmp
mov
lods
mov
ins
shl
inc
pusha
test
push
push
cmps
push
xchg
and
xchg
ret
test
rcr
lods
pop
or
sub
xchg
dec
inc
ss
ret
je
es
jl
loopne
retf
mov
dec
fmul
dec
xchg
out
mov
push
or
inc
push
push
das
dec
ss
aam
fld
dec
pushf
inc
cmps
dec
and
or
mov
bound
(bad)
push
pop
lods
and
and
(bad)
mov
gs
fs
xor
rcr
adc
loopne
or
fld
loope
loop
sbb
dec
sub
adc
sti
mov
shl
adc
and
cmp
ins
xor
int3
cli
cs
and
jae
add
les
test
scas
mov
cmps
int3
cmps
outs
jno
push
fcom
jl
and
push
add
ja
inc
inc
outs
stc
popa
cmc
sbb
adc
cmp
mov
mov
dec
sub
pop
shr
fld
adc
jl
mov
push
xchg
jle
jnp
aad
out
and
jne
or
or
jle
ss
in
sbb
pop
mov
pop
mov
jmp
or
xor
loopne
iret
out
movs
adc
cld
test
pop
in
pop
je
mov
mov
xchg
outs
scas
xchg
or
jmp
test
fs
push
push
inc
sub
adc
and
sub
dec
inc
dec
and
xchg
push
aas
arpl
fadd
bound
jne
pmulhw
rol
xchg
aad
mov
aam
shl
sqrtps
push
add
jbe
jmp
rol
and
jecxz
in
cmp
push
sar
call
adc
xchg
cs
inc
jmp
jo
fsubr
lock
mov
xor
pop
outs
jnp
dec
mov
mov
mov
cmps
sbb
xor
out
xchg
int3
mov
sti
inc
adc
sbb
sahf
cmp
arpl
test
mov
pop
jmp
push
dec
jae
dec
push
ret
inc
jg
add
jbe
mov
or
mov
lods
out
mov
dec
and
es
add
xchg
adc
add
sub
jno
repnz
jg
adc
mov
sub
out
adc
jl
enter
cld
dec
mov
jge
je
stc
mov
stos
mov
adc
sbb
aas
cmp
out
adc
popa
repnz
fwait
lock
pop
inc
jmp
or
iret
outs
or
sub
xchg
inc
daa
mov
rol
jmp
inc
push
push
mov
std
in
pop
xchg
mov
mov
call
pusha
push
sub
and
call
push
pop
outs
dec
mov
and
cmp
aam
mov
outs
mov
ret
mov
xchg
cdq
movs
cmp
test
out
push
aad
int3
fdiv
pushf
out
mov
retf
jbe
out
fnsave
inc
pusha
adc
js
and
hlt
imul
sbb
sbb
dec
sbb
mov
hlt
xchg
or
sbb
push
leave
adc
stc
popf
jmp
mov
jg
int
ins
pop
mov
retf
pusha
inc
jae
xor
movs
xchg
(bad)
and
mov
call
jge
and
dec
push
js
mov
repz
and
mov
and
lods
cmp
jae
rcr
adc
(bad)
je
rcl
test
push
aad
test
mov
push
ins
and
lds
cmc
pop
adc
mov
out
dec
add
mov
jecxz
cld
mov
xor
loopne
push
fcmovbe
in
out
push
cmc
out
and
das
in
and
mov
cdq
jmp
inc
lock
xor
aam
xlat
dec
push
(bad)
xchg
repnz
popf
add
add
cmp
loopne
pop
test
out
fwait
cmc
or
mov
inc
sub
adc
dec
fdiv
ffree
or
adc
ja
cli
test
outs
add
jne
int3
std
fnsave
jno
mov
stos
mov
cli
in
xor
aad
shl
cdq
xor
daa
shr
jo
push
rol
mov
icebp
or
pop
nop
mov
sbb
scas
(bad)
lea
cmp
cdq
xor
sbb
jl
stos
jmp
aas
mov
lahf
push
ret
fs
dec
shl
push
and
or
push
into
icebp
push
ins
pop
and
movs
jecxz
mov
loopne
call
retf
loope
aas
jno
dec
mov
push
jle
stos
inc
mov
or
mov
(bad)
lds
popa
aaa
add
fdiv
jnp
lods
mov
dec
rcl
sbb
popf
test
sub
pop
jle
sub
aam
mov
sbb
addr16
(bad)
ds
arpl
arpl
jae
mov
mov
dec
out
sti
mov
mov
jne
leave
ss
ret
in
aas
mov
pop
js
dec
add
sbb
xchg
push
outs
test
jg
mov
rcl
idiv
mov
adc
sub
hlt
cwde
pop
repz
push
stc
mov
xor
out
mov
xchg
mov
add
mov
sbb
inc
mov
xor
ror
pop
enter
mov
jmp
jb
pop
adc
mov
sub
dec
aas
or
pop
mov
xor
push
cmps
or
and
pop
and
lods
cmp
push
or
fld
mov
push
fcomp
mov
rol
lods
stc
adc
faddp
lods
jae
mov
stc
or
ja
test
push
fwait
clc
add
das
(bad)
fs
mov
jmp
jg
mov
bound
repz
nop
push
push
out
popf
jle
ins
xchg
lods
inc
sahf
popa
mov
jmp
sub
mov
mov
or
popf
fadd
shr
scas
jmp
scas
cld
ret
nop
pop
addr16
cld
pop
mov
(bad)
call
jg
retf
jb
out
jo
hlt
es
int
fist
xchg
int
rol
in
cmp
imul
xchg
add
int3
(bad)
cdq
add
cmp
ss
sbb
loopne
dec
mov
lods
mov
out
pop
cmp
mov
fmul
or
push
sar
jle
movs
shl
retf
scas
pop
sbb
inc
inc
pop
leave
push
stos
retf
jb
mov
mov
cdq
ins
xor
call
inc
aas
push
lds
outs
pop
push
xchg
lds
(bad)
dec
pop
clc
sbb
test
cmp
xchg
movs
js
push
add
cmp
inc
(bad)
ss
cmp
mov
mov
push
inc
mov
jmp
push
fisub
push
rcl
out
or
dec
mov
fdivr
and
(bad)
adc
fisttp
or
sar
jmp
lock
push
test
push
sbb
fdivrp
nop
xchg
inc
not
inc
cmps
xchg
loope
sbb
sti
adc
add
mov
adc
int
mov
mov
sbb
nop
cwde
or
inc
xchg
aas
ret
push
mov
retf
inc
push
stos
xor
mov
in
dec
xor
out
mov
sub
mov
mov
jmp
fnsave
jl
mov
call
int
mov
das
push
arpl
in
mov
or
stos
dec
pop
jo
xor
inc
popf
sbb
in
pop
fwait
adc
test
out
mov
adc
pop
sbb
imul
sbb
pop
test
(bad)
(bad)
pop
cmps
dec
xchg
xor
daa
xchg
cdq
popa
lock
and
pusha
test
adc
je
xor
push
in
(bad)
shr
(bad)
fs
ja
ret
xchg
cmp
sub
push
loope
jbe
mov
jno
xchg
cmp
mov
cmp
jmp
fnstsw
pop
lea
jp
ror
mov
dec
das
mov
xor
stos
jp
push
fld
ins
push
push
out
lahf
out
or
aaa
loop
cwde
push
(bad)
mov
movs
or
pop
sbb
repnz
mov
pop
mov
xchg
mov
xchg
mov
sub
and
xor
pushf
icebp
dec
cmp
ds
retf
stos
aas
ss
mov
and
mov
popf
jmp
or
mov
daa
fdiv
bound
xlat
and
sbb
aad
sbb
xor
das
iret
sti
rol
mov
ror
and
stos
rcr
cmp
out
cmp
mov
call
inc
inc
mov
(bad)
fstp
(bad)
lods
in
shr
mov
jne
push
adc
std
lods
(bad)
pop
inc
je
adc
mov
and
inc
inc
rcr
mov
popf
jb
cmp
jbe
in
movs
lds
mov
or
(bad)
dec
sbb
aad
xor
or
ffree
jp
and
fs
(bad)
(bad)
cmp
fisttp
(bad)
cdq
xchg
aaa
jnp
push
mov
push
mov
movs
sbb
movs
mov
pop
dec
push
and
lods
int
inc
push
jmp
adc
dec
and
or
loope
jl
mov
imul
nop
inc
add
adc
jp
shl
aam
pop
aam
mov
mov
jge
(bad)
scas
pusha
pop
xchg
push
or
inc
and
inc
cmps
xchg
cmps
or
das
je
add
sub
cmps
adc
or
or
cmp
fs
popa
pusha
imul
sbb
lods
std
mov
stos
stc
nop
pop
or
test
push
xor
ja
jmp
cmp
add
or
adc
xor
xchg
add
cmp
repnz
mov
retf
dec
mov
mov
mov
push
inc
sahf
jmp
imul
jecxz
dec
xchg
add
(bad)
out
dec
jnp
push
test
mov
movaps
sbb
pop
stos
test
cmp
sub
add
dec
mov
out
shl
std
and
and
hlt
fnstcw
and
lea
push
jo
fldcw
iret
pop
sar
sub
mov
add
stos
mov
inc
sub
pop
pop
int
fninit
movs
xchg
mov
adc
hlt
cdq
push
mov
jecxz
hlt
repnz
jmp
adc
(bad)
nop
pop
mov
into
mov
fidivr
xor
ss
cmps
adc
iret
mov
stos
xor
data16
or
out
add
and
adc
not
inc
xchg
sbb
mov
mov
rcr
sub
pop
xchg
inc
adc
and
jp
sbb
rol
out
fucomip
or
jge
test
in
mov
jle
rol
mov
jecxz
dec
pop
mov
jle
push
(bad)
repnz
jge
adc
vmovdqa
(bad)
jne
loopne
inc
mov
mov
inc
mov
and
xchg
sahf
or
mov
jbe
pop
cmp
mov
mov
cmc
mov
aaa
idiv
pop
xchg
xor
pop
jbe
xlat
or
rcl
cmp
cmp
pusha
out
mov
or
mov
outs
jmp
inc
jmp
cmp
or
js
(bad)
(bad)
call
xchg
xor
jne
mov
or
in
mov
call
popf
adc
pop
or
mov
push
xchg
xchg
jecxz
ss
and
dec
in
clc
aaa
setg
ficom
jmp
mov
enter
push
xor
(bad)
dec
loopne
in
sahf
sub
fstp
(bad)
lods
lock
mov
or
push
or
inc
jns
out
jmp
push
xchg
jb
push
mov
aam
leave
cli
gs
xchg
mov
ret
push
mov
fcomp
lahf
fcmovb
pop
xchg
aam
aas
jl
add
mov
jl
cmps
clc
imul
not
pushf
fwait
adc
ret
mov
pop
jecxz
pop
js
daa
pop
inc
pop
sahf
mov
jne
cwde
call
sbb
xor
repnz
mov
jbe
inc
sbb
shr
icebp
in
add
ins
push
(bad)
jns
fucomi
dec
sub
mul
mov
fmul
sub
jno
stos
leave
pop
leave
fsubr
rcl
nop
aaa
iret
popf
enter
push
test
xchg
and
cmps
jg
dec
mov
sub
mov
dec
mov
call
sub
cwde
test
adc
add
fst
pop
xor
or
xchg
mov
repnz
cmp
inc
xlat
mov
out
int3
inc
mov
and
fcom
ins
das
or
loopne
jns
shl
into
add
xchg
ss
or
and
scas
xchg
sbb
sub
shl
inc
fisub
inc
sbb
sbb
mov
jb
(bad)
in
add
inc
xchg
adc
scas
repnz
into
mov
adc
push
add
push
jp
mov
cmp
sub
push
out
retf
jbe
test
test
pop
push
daa
dec
xor
mov
xlat
push
retf
sbb
(bad)
les
punpckhbw
cmc
in
add
hlt
inc
xlat
jp
sbb
push
push
data16
sar
fcomp
pop
and
gs
xchg
sub
mov
pop
xor
std
adc
retf
and
ds
daa
mov
cdq
pop
push
(bad)
into
mov
mov
xor
movs
sahf
(bad)
loop
pop
(bad)
mov
imul
mov
jl
mov
adc
scas
xor
cld
mov
or
int3
mov
add
mov
jbe
(bad)
xlat
xchg
or
test
js
fst
loopne
lods
sbb
scas
jb
pop
(bad)
ror
pop
sub
ret
rol
pushf
sub
fucomip
mov
push
dec
xor
cmc
push
aad
cmps
and
cld
mov
mov
cdq
shr
mov
loopne
pop
out
call
lahf
aaa
xchg
push
mov
xchg
jns
push
adc
mov
adc
mov
loopne
popa
aad
or
sbb
push
or
cld
popf
sub
imul
stos
or
dec
out
aam
xchg
lods
or
aam
ja
inc
lds
jge
call
(bad)
fwait
dec
add
fcomp
and
pop
push
or
mul
lods
mov
out
imul
inc
ror
and
lahf
dec
mov
sbb
fisub
daa
mov
jmp
imul
loop
cmpxchg8b
push
leave
or
ds
rcr
inc
idiv
push
xor
sub
jmp
test
cmps
jge
hlt
hlt
rol
stc
mov
into
rcr
sbb
movs
mov
pop
jg
jae
scas
jmp
push
popa
xor
mov
adc
aaa
(bad)
int3
sub
lods
sti
pop
mov
mov
adc
leave
(bad)
retf
jb
pop
mov
out
stos
outs
aas
lds
cmp
fnsave
inc
test
aad
fwait
dec
mov
mov
and
jle
cld
(bad)
js
bound
push
sahf
adc
cld
dec
ret
inc
inc
mov
mov
mov
xchg
dec
inc
sbb
xor
jbe
popf
arpl
hlt
cli
inc
minps
push
adc
mov
inc
mov
into
retf
test
mov
adc
jae
cmp
or
out
stc
sbb
or
ret
retf
(bad)
mov
or
rol
gs
push
popa
popa
aam
adc
push
push
pushf
cmc
sbb
nop
cmps
xchg
pop
xor
or
shl
xor
dec
sbb
mov
jge
mov
and
xor
jb
inc
jle
in
pop
cmps
fdiv
jle
cli
rcl
cmp
push
dec
out
mov
cmp
xchg
dec
jp
mov
add
out
xchg
retf
jg
daa
mov
std
push
leave
ret
mov
adc
clc
cpuid
sbb
or
dec
push
movs
sub
sub
lahf
sub
sub
out
sbb
int3
mov
dec
js
pop
push
add
push
push
fst
pusha
inc
imul
push
leave
or
gs
mov
shl
std
mov
js
add
fwait
(bad)
xlat
inc
dec
jo
mov
and
dec
ret
pop
push
dec
loope
jnp
mov
lds
or
push
mov
cmp
mov
jo
js
mov
or
mov
xor
fnstcw
mov
push
add
xor
jmp
xor
dec
inc
into
xor
jmp
sub
push
loopne
inc
xor
adc
mov
out
or
sub
jb
bound
or
pop
mov
xchg
mov
aad
mov
fdiv
push
sar
mov
cmc
sbb
xchg
sbb
cld
cli
repnz
mov
add
mov
repnz
sub
and
xor
call
cli
jnp
(bad)
adc
cwde
add
cld
aam
popa
jb
push
popa
or
pop
jb
jns
(bad)
xchg
jno
sub
jmp
sbb
inc
pop
and
xor
sub
outs
inc
pop
fbld
sahf
and
sub
aas
jp
cmp
pop
mov
adc
mov
ja
aas
dec
push
xor
movs
aas
sub
lahf
xchg
sub
xlat
cmp
ins
push
sahf
mov
inc
repnz
sbb
test
popa
ficom
mov
and
ret
or
ficom
and
cs
jne
fnstsw
jp
outs
and
imul
sbb
sbb
jae
stc
ins
add
add
push
inc
sub
or
xor
je
test
cmps
fwait
adc
push
js
sbb
and
test
and
sahf
pop
fld
add
and
rcr
mov
repz
ins
xor
pop
iret
mov
fcmove
ins
push
sbb
shl
jns
cmp
mov
popa
test
mov
or
sbb
mov
push
mov
jle
jl
mov
pop
dec
sbb
pop
jae
xchg
and
push
mov
add
jecxz
mov
(bad)
(bad)
mov
mov
jp
adc
sub
fs
ja
mov
(bad)
mov
pop
cmc
push
mov
sti
xchg
adc
or
mov
sar
sbb
jp
pop
sub
data16
and
in
jne
enter
aas
aas
jg
pop
fiadd
and
cdq
lods
cmp
mov
xor
adc
xchg
int3
rol
cld
in
and
mov
xchg
push
lds
inc
call
jns
cmps
lods
jns
sbb
adc
inc
ret
aaa
(bad)
lock
aaa
sub
fldcw
dec
cdq
push
mov
arpl
ret
loop
inc
cmp
daa
mov
cmp
add
xlat
inc
cwde
rol
dec
scas
xchg
into
inc
xchg
test
push
sbb
pop
mov
push
ja
aam
stc
jecxz
lea
pop
or
sbb
je
in
fs
loopne
pop
inc
jge
or
dec
(bad)
push
inc
cld
repz
pop
call
add
mov
push
and
loop
leave
cs
fsub
popa
in
push
push
pop
js
enter
add
retf
push
sahf
pop
mov
(bad)
push
fnstenv
retf
fbld
aas
mov
pop
into
jmp
std
bound
cmp
jge
hlt
adc
stc
sahf
stc
popf
shl
jo
push
(bad)
mov
jmp
push
aad
fcomp
xchg
inc
xlat
scas
lahf
xlat
inc
arpl
sar
inc
call
out
add
sti
adc
call
sti
push
jno
sub
aad
retf
pusha
dec
push
inc
and
or
xchg
(bad)
mov
pop
dec
fisub
sbb
inc
add
and
add
xchg
test
lods
dec
pop
sub
sar
jl
inc
mov
test
or
cs
in
shl
(bad)
and
adc
push
iret
mov
mov
jmp
mov
mov
jno
enter
(bad)
ja
add
in
in
sbb
lea
rol
stos
dec
inc
rcl
jo
xor
or
pop
out
cs
or
adc
arpl
loop
sub
jmp
add
add
loop
sti
or
aad
pushf
mov
mov
dec
fbstp
imul
in
or
nop
sar
popf
cmps
dec
ins
inc
int3
bnd
sbb
jl
sub
ror
jb
cli
ins
scas
push
test
and
jnp
push
push
xchg
sbb
in
in
xchg
mul
jae
xchg
pop
push
cmp
mov
sbb
ins
pop
cmp
xchg
pop
fisttp
sub
mov
iret
xchg
cdq
inc
cdq
fidiv
add
call
cmp
sub
popa
test
push
fs
rol
inc
(bad)
mov
xor
dec
call
xchg
call
in
jnp
pop
push
pop
daa
lock
(bad)
fucomi
out
lea
or
jbe
stos
cdq
gs
stc
icebp
popa
sub
das
mov
lock
repz
mov
sti
inc
mov
mov
cld
das
ja
ds
jb
(bad)
retf
mov
pop
xchg
xor
(bad)
int
cmp
pop
iret
push
lds
dec
js
sar
sub
rcl
scas
mov
shl
in
outs
mov
int
je
xor
fsincos
dec
mov
jmp
pop
mov
aas
cli
adc
dec
dec
clc
cmps
ins
inc
jle
jl
leave
sar
pop
iret
or
aad
outs
jns
or
aas
mov
repnz
sbb
fild
rcr
sbb
popf
in
mov
pop
out
ins
loope
scas
push
scas
or
(bad)
daa
daa
cmp
sub
jmp
adc
inc
jl
das
in
(bad)
and
mov
ins
push
out
test
sub
xlat
sbb
sub
loopne
cdq
adc
fwait
int3
imul
cmovbe
stos
std
enter
psubb
xor
stc
push
dec
mov
(bad)
mov
or
fdiv
jb
mov
fisubr
add
mov
sti
xor
jnp
jge
mov
jns
enter
mov
(bad)
inc
inc
inc
mov
push
xor
pushf
pop
sti
mov
ret
stc
sbb
mov
cwde
inc
sub
add
jle
icebp
dec
pop
sub
jp
adc
jo
fisttp
and
mov
dec
xchg
bound
ror
cmp
sub
cmps
movs
mov
bound
jno
and
ins
jle
arpl
jmp
sti
add
or
xchg
cmc
sbb
int
xor
sbb
shl
add
mov
stc
test
mov
mov
fcomp
push
sub
xor
sub
add
or
shl
or
and
xchg
sbb
xchg
dec
stos
or
cmps
add
popa
sub
mov
dec
jmp
sbb
mov
int3
dec
dec
lock
mov
aam
inc
inc
inc
idiv
xchg
and
dec
add
arpl
xchg
adc
push
nop
lock
jo
imul
mov
xchg
into
cs
cmp
mov
or
sub
test
xchg
or
popa
mov
retf
xor
mov
xor
jns
jl
fldenv
sub
ins
cld
xchg
push
xchg
jo
adc
jb
bound
data16
bound
mov
(bad)
loop
jbe
popf
(bad)
cmp
sbb
rep
inc
mov
cmp
jbe
(bad)
adc
mov
lods
lock
inc
test
mov
in
jecxz
mov
jle
push
sub
ins
push
push
lock
mov
and
inc
jbe
mov
retf
hlt
mov
xchg
(bad)
fild
push
mov
add
push
lods
inc
retf
retf
sbb
arpl
dec
mov
fdiv
cwde
add
mov
or
popf
mov
mov
xor
add
cmp
jge
mov
cmp
mov
outs
xor
mov
adc
sbb
cli
jo
fwait
xchg
pop
imul
and
shl
jmp
outs
inc
not
rcl
sub
sub
retf
sub
xor
cmp
out
jp
aad
xchg
pusha
xchg
ror
repz
mov
jmp
inc
pusha
mov
and
xor
pop
cmps
in
sahf
and
imul
repz
jge
mov
sub
jns
aam
(bad)
cmp
push
pop
cmc
xor
jnp
xor
or
mov
dec
push
or
or
pop
mov
(bad)
dec
jnp
and
popf
xor
push
sbb
push
pop
and
and
jnp
les
mov
mov
mov
retf
fsubr
out
cmps
adc
int
jge
sbb
adc
iret
push
inc
mov
cmc
movs
adc
inc
push
or
push
iret
rol
push
sbb
jbe
in
xor
pop
cmc
sbb
inc
aaa
inc
bound
mov
pop
mov
fstp
pop
int3
xchg
mov
mov
jge
sub
or
iret
push
div
hlt
addr16
sub
push
clc
adc
jmp
sub
sub
call
daa
in
(bad)
ins
sbb
jbe
dec
mov
fstp
push
clc
pop
fidiv
in
stos
xor
dec
sub
push
test
rcl
or
sbb
cld
ficomp
inc
popf
mov
shl
iret
(bad)
mov
out
push
dec
fst
loopne
es
add
pop
into
inc
inc
les
dec
pop
jmp
(bad)
je
(bad)
mov
mov
mov
popf
ja
shl
add
xor
cmp
pushf
xchg
xchg
pop
lods
push
sbb
push
mov
(bad)
adc
mov
rcl
dec
mov
cli
out
or
add
scas
jb
(bad)
cmps
and
dec
inc
sar
fcomp
pop
adc
pop
mov
sub
ins
mov
mov
push
jle
pop
xchg
int3
or
push
xlat
mov
push
or
lahf
(bad)
mov
mov
pop
cmp
int
stos
movs
adc
sar
outs
loop
popa
jecxz
shl
sbb
mov
enter
pop
mov
add
aam
pushf
cli
clc
lods
mov
mov
pop
jg
mov
scas
sbb
dec
test
mov
fdiv
sub
(bad)
mov
add
inc
aaa
ins
mov
adc
mov
movs
sbb
add
mov
call
ins
(bad)
mov
popa
fbld
jmp
pop
outs
or
je
pop
imul
cmp
mov
call
fld
dec
les
xchg
add
add
inc
(bad)
int3
push
mov
xor
xchg
test
inc
xchg
dec
int3
xor
(bad)
or
daa
movs
fisttp
cmp
pusha
xchg
pusha
sub
adc
jo
jmp
jg
repz
sbb
jmp
std
lock
xor
sub
loope
jl
repz
push
movs
xchg
or
cmp
movs
xchg
in
adc
(bad)
aas
cld
or
repnz
mov
inc
mov
jecxz
push
push
sub
push
(bad)
inc
push
shl
adc
and
inc
outs
gs
mov
mov
fcom
ins
inc
push
fdivr
xchg
das
inc
inc
cmp
test
mov
jp
ja
test
add
scas
sti
bts
in
sub
xchg
jmp
jb
cwde
jb
mov
or
fincstp
enter
(bad)
scas
fdivr
hlt
loopne
xor
jge
mov
inc
and
xor
movs
movs
ret
mov
iret
retf
into
pop
add
out
or
adc
mov
fnsave
out
movs
in
and
ficomp
mov
or
or
retf
jge
bound
js
sub
inc
aas
popa
ficom
cwde
js
push
mov
lock
and
test
push
xchg
sub
mov
push
sbb
mov
repnz
aas
(bad)
enter
fld
jb
ds
and
sbb
cmp
jl
cs
call
in
cdq
lea
retf
repz
mov
cmp
jb
loop
arpl
jmp
mov
cli
dec
sbb
outs
add
popf
mov
jecxz
xchg
loopne
test
and
jbe
xchg
test
call
fstp
xor
nop
sahf
and
out
pusha
test
iret
popa
sub
sbb
fist
or
in
add
in
dec
push
push
adc
(bad)
pop
mov
push
popa
and
aas
jae
push
sar
inc
retf
pop
adc
inc
lahf
cdq
push
dec
push
call
repnz
imul
fwait
stos
std
paddusw
sub
rol
stc
adc
add
push
icebp
xor
and
and
jp
into
arpl
cli
add
and
xor
imul
pushf
push
cmp
dec
les
rcr
sub
pop
movs
fucomi
dec
inc
jbe
jmp
jecxz
cmp
xchg
jle
int
mov
fwait
sti
sbb
mov
stos
cmc
add
call
es
push
jb
xchg
adc
mov
xlat
es
dec
sbb
mov
cmp
sbb
mov
or
into
dec
dec
mov
jge
ret
mov
in
into
repz
iret
lods
call
inc
outs
jno
inc
cmp
out
jp
rol
popf
push
sbb
cli
(bad)
out
out
push
cli
sub
repz
ins
cmc
xor
pop
gs
scas
pop
enter
lods
mov
jbe
add
xchg
das
inc
gs
or
cmp
es
cdq
mov
stc
test
dec
pop
mov
test
mov
xchg
jno
push
ja
int
jecxz
jne
test
push
test
pop
dec
aad
rcl
xor
mov
pop
addr16
push
call
ins
mov
sahf
inc
(bad)
jge
and
lds
xor
or
mov
fisttp
mov
(bad)
or
adc
les
in
bnd
lds
out
xor
xchg
xchg
or
or
jae
test
mov
clc
add
fs
inc
push
pop
clc
sbb
mov
push
pop
add
sub
addr16
inc
mov
jns
fiadd
pmaddwd
sahf
ret
ins
dec
cwde
scas
movs
scas
fstp
lods
aad
in
cmp
loope
mov
add
and
push
mov
and
(bad)
outs
int
or
aaa
or
aaa
les
inc
out
inc
rcl
shr
push
dec
jmp
in
sbb
fstp
adc
in
sub
pushf
sub
shl
xchg
push
int3
jb
mov
xor
cli
rcr
sub
out
es
repnz
cmp
mov
mov
iret
xor
sbb
push
xchg
dec
out
test
(bad)
sbb
adc
pusha
inc
std
shl
dec
push
mov
aam
xchg
push
idiv
pop
pop
xor
ffree
sbb
xor
cli
mov
adc
outs
push
fsubr
xor
push
outs
data16
sbb
(bad)
push
js
mov
push
cwde
cdq
arpl
push
hlt
iret
aam
jb
mov
inc
adc
cmp
add
add
adc
xor
mov
push
or
mov
stc
sti
sbb
adc
push
js
cmp
sub
and
push
mov
cmp
sub
jge
or
jb
sub
retf
mov
outs
add
loopne
xchg
xchg
call
mov
mov
dec
cmc
daa
fwait
inc
jno
pushf
pushf
sar
adc
scas
or
xchg
rcl
push
pop
push
jmp
jle
cld
repz
shl
and
fild
out
(bad)
hlt
push
mov
adc
jbe
mov
mov
xor
inc
pop
out
jo
or
in
sbb
sub
out
icebp
ret
mov
test
sar
sub
push
dec
dec
jmp
mov
sub
movs
mov
jle
xchg
iret
dec
repz
sub
pusha
and
nop
mov
push
pop
mov
iret
mov
mul
adc
rcr
fistp
jg
(bad)
call
xchg
scas
adc
add
mov
cmps
enter
mov
enter
popa
jae
xchg
pop
fbld
pop
cmp
clc
scas
in
cmp
push
pop
mov
xor
dec
and
cmp
mov
xchg
fcomp
sbb
cmp
imul
pop
loopne
popa
(bad)
cmp
mul
or
cmp
inc
cmp
sbb
shl
adc
aaa
push
fidivr
jmp
sub
retf
sahf
pushf
sahf
mov
or
jb
(bad)
sbb
bound
adc
pop
or
in
mov
shr
cwde
mov
test
mov
mov
iret
aas
xchg
pop
ror
mov
jno
push
pop
adc
mov
cli
dec
aad
cmp
push
mov
inc
ficom
mov
dec
sahf
adc
add
mov
sub
mov
arpl
call
cmp
test
clc
pop
push
sub
dec
lods
das
scas
pop
jne
outs
scas
(bad)
push
mov
and
movs
jae
in
jb
fldenv
mul
cmp
stos
inc
or
push
sahf
lods
out
sbb
call
cs
cmp
hlt
cmp
mov
sub
stos
dec
mov
pop
mov
pop
cli
mov
xor
aam
cmp
mov
(bad)
xor
stc
push
ret
and
aam
das
and
sub
mov
inc
repnz
pop
and
outs
jo
pop
lds
loope
scas
fistp
in
sar
aad
cmp
daa
add
mov
jg
hlt
sbb
xor
hlt
push
lods
jmp
and
mov
sub
les
jl
(bad)
xchg
aas
jp
int3
js
shr
(bad)
fild
fimul
pop
out
outs
push
and
cmp
inc
xor
loope
pop
jne
ins
push
inc
out
es
jmp
xor
mov
fsub
cmp
ror
adc
or
jmp
sub
push
jo
jmp
sbb
xchg
sub
xchg
aam
cmc
push
mov
icebp
pop
enter
pop
addr16
jmp
pop
cdq
in
fnstcw
add
push
call
jmp
movs
xlat
dec
and
lods
push
mov
cmp
cmp
add
mov
push
cmp
sbb
not
push
cdq
clc
aas
mov
bnd
cwde
in
loopne
aad
push
adc
out
mov
test
xor
push
adc
popf
je
adc
xor
(bad)
sub
call
push
movs
pop
add
add
mov
mov
sbb
hlt
dec
rcr
outs
mov
not
mov
or
ja
scas
cmp
jmp
std
inc
pop
into
mov
or
xor
cli
mov
sub
(bad)
xlat
das
inc
out
mov
sbb
xor
push
das
fisttp
cmp
test
add
and
jo
xchg
outs
out
mov
push
scas
lahf
(bad)
sti
adc
int
add
mov
popa
sub
add
lahf
pop
pop
push
shr
adc
(bad)
rcr
inc
scas
or
inc
ins
cwde
sbb
ret
cld
dec
pusha
fs
mov
data16
ins
repz
mov
xor
jno
cmps
adc
jae
inc
iret
cmps
dec
fdivr
jp
cli
adc
or
adc
dec
push
lea
rcr
pop
cmps
push
not
test
push
pop
daa
mov
out
scas
shr
jmp
sbb
clc
shl
or
mov
lahf
adc
test
ds
sti
add
add
or
cmp
adc
iret
push
call
stc
das
fld
mov
xlat
lods
lds
std
jns
dec
sub
mov
jae
jne
dec
push
nop
adc
and
ds
mov
push
outs
cs
test
and
xchg
xchg
and
push
mov
xchg
mov
push
mov
xchg
outs
std
repnz
lods
jno
fwait
in
test
xor
sbb
ins
sub
in
add
sbb
pop
jne
xchg
xchg
adc
mov
ss
pop
leave
adc
cmp
pop
sbb
test
xchg
jb
sub
int
and
push
sub
(bad)
pop
cdq
cmp
mov
pop
mov
mov
icebp
lds
xchg
(bad)
mov
jle
cmp
imul
and
ins
ret
adc
bound
(bad)
das
loope
or
or
mov
out
cmc
push
jo
std
xchg
xor
sub
mov
out
mov
xchg
xchg
ins
mov
inc
sub
enter
xchg
mov
push
jmp
cli
fiadd
(bad)
aam
push
cmp
xchg
push
xchg
sbb
(bad)
pop
idiv
in
adc
aad
inc
add
in
jl
sub
adc
push
jmp
xchg
jns
pop
and
das
out
inc
sub
bound
ret
jno
cmc
ja
xchg
xchg
out
jmp
in
ret
ins
test
mov
je
mov
cmp
xor
mov
add
not
mov
inc
mov
scas
shl
push
adc
push
in
test
pop
data16
add
fcomp
fwait
jle
mov
cmp
dec
adc
sub
push
in
pop
or
(bad)
scas
fstp
jmp
adc
call
push
xchg
cmc
inc
rol
pop
jnp
mov
sbb
and
jbe
mov
cmp
shl
pop
test
daa
out
mov
nop
fstp
push
inc
les
xchg
int
dec
mov
dec
not
daa
lock
dec
add
imul
in
out
mov
add
fisttp
dec
fucomi
pop
scas
jnp
retf
mov
jae
imul
cli
add
clc
das
pop
js
jge
loop
xchg
sbb
loopne
xchg
mov
stos
gs
je
ss
loopne
nop
pop
dec
xchg
ret
jg
adc
out
jns
arpl
push
xchg
sbb
loopne
(bad)
scas
xor
test
mov
daa
push
outs
clc
and
std
cmp
and
cdq
imul
jb
fist
fldenv
jmp
outs
add
cs
fld
hlt
mov
movs
inc
cwde
pop
mov
sub
cli
dec
mov
pop
dec
fsub
stos
xchg
or
add
es
dec
popa
sti
(bad)
out
(bad)
xor
leave
fstp
mov
das
repnz
out
mov
out
push
dec
cwde
xor
into
(bad)
out
icebp
call
cld
enter
repnz
cmp
out
mov
int
xor
cs
out
mov
lea
xchg
in
movs
add
sahf
iret
mov
add
or
push
dec
out
mov
or
inc
xchg
ja
mov
jmp
out
mov
clc
adc
mov
pushf
push
lock
push
int3
or
cld
adc
jg
jno
lods
(bad)
inc
in
bts
push
push
xor
push
fcmovne
fsub
aaa
fs
or
and
das
(bad)
js
std
daa
xchg
add
jg
int3
cmp
data16
xlat
ss
add
jno
lods
fcompp
cmp
pop
push
pop
and
mov
adc
ins
jb
lock
adc
mov
mov
push
jmp
(bad)
mov
repz
call
int3
or
loop
push
ins
push
pop
iret
cld
je
cmp
fstp
outs
mov
out
pop
loopne
scas
xor
add
call
inc
je
(bad)
out
mov
movs
adc
dec
loope
test
xchg
or
ja
pop
lea
xchg
push
xchg
mov
xchg
jle
sbb
cld
call
loop
inc
mov
test
push
aaa
ins
xchg
dec
mov
push
mov
cli
das
sub
sbb
ror
xor
dec
xlat
in
bound
jno
scas
cmps
into
sub
dec
cmp
outs
mov
pusha
(bad)
test
sbb
mov
sub
push
push
scas
into
(bad)
in
cmp
ds
and
sbb
push
retf
jae
jae
retf
shl
jmp
pop
sub
pusha
ret
xchg
push
xor
sub
es
jecxz
push
push
dec
or
xor
cmps
sub
repnz
mov
sti
movs
ins
rcr
mov
jb
out
xor
jbe
ss
leave
iret
dec
ds
iret
xor
mov
xor
call
dec
sub
mov
pop
ret
pop
fnstsw
lds
leave
cmps
and
icebp
cli
fild
std
cmp
pop
test
inc
retf
in
mov
mov
mov
mov
lods
and
arpl
mov
or
loopne
adc
icebp
dec
fs
inc
ja
pop
push
adc
xchg
mov
popa
cmp
not
pop
push
mov
add
inc
jecxz
movs
mov
adc
out
cmps
and
fs
or
pop
in
(bad)
cmp
(bad)
fs
(bad)
sbb
daa
mov
mov
jle
daa
xchg
loope
sub
retf
xchg
ja
jb
in
(bad)
jae
inc
mov
sbb
xchg
and
inc
pop
push
ret
fcom
sbb
inc
repz
xor
aam
nop
mov
cmp
data16
sub
inc
stos
adc
push
adc
mov
scas
or
and
imul
stos
xor
jecxz
jmp
mov
push
sub
iret
xor
pop
jbe
xchg
add
fcos
sbb
sbb
xchg
pop
adc
adc
retf
clc
cmp
pop
int3
loope
repz
jl
adc
jne
(bad)
loope
sub
jp
sub
mov
and
mov
xor
inc
cmp
jo
adc
loop
or
mov
stos
pop
int3
fsub
xor
jmp
(bad)
fadd
and
(bad)
xchg
je
sub
or
or
lock
cmc
xchg
scas
aaa
push
sbb
mov
jmp
scas
loope
dec
(bad)
fisubr
(bad)
jmp
mov
inc
bswap
dec
scas
stos
pop
add
push
push
mov
dec
xor
ds
js
movs
ficomp
pushf
mov
xchg
enter
add
add
xor
fcom
mov
push
out
loope
mov
adc
loopne
sub
and
les
fisubr
mov
(bad)
jmp
(bad)
jmp
fdiv
ret
out
mov
cmp
mov
nop
jge
or
pushf
cmp
out
jp
daa
jno
sub
sbb
repz
fiadd
cmp
xlat
loop
adc
inc
mov
rol
pop
mov
retf
mov
adc
adc
jo
sbb
lock
cs
push
jecxz
ds
push
xor
mov
loope
out
test
icebp
addps
mov
cmp
or
adc
sbb
loop
cmc
cmp
xor
inc
gs
fbld
int3
pushf
jl
mov
fadd
mov
outs
cmc
xchg
ins
inc
daa
jecxz
fist
mov
out
add
dec
sbb
or
ins
sbb
sub
pusha
(bad)
xor
loop
xchg
das
xchg
retf
add
jo
les
or
pop
sub
lds
inc
mov
sti
in
jno
test
jns
or
dec
adc
xor
sub
scas
jge
lods
or
push
adc
pop
ds
stos
in
push
aas
xchg
lahf
pusha
push
adc
aad
test
mov
js
jmp
lds
lea
mov
js
and
retf
and
lock
mov
dec
sbb
xchg
cdq
or
loopne
in
loop
out
pop
jl
les
or
out
push
outs
mov
dec
add
fdivp
cwde
mov
adc
cmp
or
pmullw
xor
xchg
fisub
sahf
icebp
mov
sti
jecxz
push
push
ds
and
clc
or
or
bound
pop
add
out
dec
std
or
cmc
sbb
cmp
adc
jmp
jl
adc
bound
mov
sub
pop
add
jmp
jle
mov
xor
mov
or
xor
stos
outs
cmps
test
imul
adc
and
add
inc
lds
scas
xchg
jne
mov
xchg
mov
add
or
sub
ss
dec
push
pop
push
adc
xchg
test
jge
sbb
out
and
sub
arpl
lods
mov
adc
ret
call
daa
daa
cmp
cmp
jmp
push
xchg
out
test
cmc
out
push
push
out
cmp
sbb
pop
fstp
push
push
lahf
cmp
lods
lods
daa
fst
dec
fcmove
ret
mov
mov
js
in
outs
jbe
mov
push
xchg
retf
cmp
mov
inc
push
xor
les
lahf
mov
idiv
xchg
hlt
shl
xchg
jge
sub
stc
or
rcr
push
dec
adc
sub
icebp
mov
push
adc
les
xor
mov
stos
outs
arpl
adc
(bad)
data16
xchg
push
inc
sar
ins
sub
ss
cli
std
leave
adc
ret
mov
sub
dec
je
cmova
dec
test
xchg
mov
push
stc
push
addr16
cmp
sbb
adc
call
mov
mov
inc
inc
mov
sub
xor
fcmovbe
sub
nop
fist
add
retf
jl
xlat
test
shr
or
in
mov
or
cs
jb
sub
shr
inc
scas
clc
xor
cmp
maskmovq
pop
xchg
fisubr
pop
jbe
daa
cmp
or
es
aam
jae
dec
repnz
vmwrite
jg
push
stos
pop
out
pop
sbb
lods
int
fisttp
push
imul
push
adc
das
pop
and
movs
xor
icebp
xchg
aam
stc
rol
dec
push
lods
fld
and
sbb
pop
addr16
pop
mov
cmp
sahf
bound
mov
mov
xor
test
xor
movd
mov
and
sbb
sahf
cmp
pop
push
test
cld
jb
cmp
fnstenv
jg
fdivr
adc
sbb
ins
adc
add
xchg
jmp
test
cmps
inc
imul
repz
in
jge
sahf
sub
jg
adc
sub
mov
fadd
xchg
xchg
dec
xor
fs
into
idiv
jne
adc
sub
movs
jb
mov
addr16
in
ja
mov
adc
xlat
stos
loope
out
(bad)
ret
sbb
mov
leave
dec
push
sub
(bad)
push
lods
faddp
push
add
pop
inc
fdivr
stos
stos
mov
push
add
fld
jne
cmc
mov
lods
cmp
pop
adc
push
outs
retf
pop
xchg
lock
cld
adc
aas
daa
add
callw
jge
mov
mov
jl
test
int
cwde
sub
pop
test
mov
cmp
(bad)
push
leave
cld
dec
add
fcom
scas
mov
cmps
jmp
lods
xchg
push
aaa
lahf
iret
add
loop
in
add
movs
pop
das
hlt
ror
ds
in
repnz
xchg
out
xor
xchg
(bad)
jg
inc
or
xor
in
sub
or
adc
sub
enter
in
cs
xchg
jmp
or
jae
push
push
push
nop
loop
dec
inc
ss
lds
inc
cmp
es
ror
jl
cmp
pop
mov
inc
push
(bad)
jbe
fdivr
sub
cdq
mov
mov
fistp
out
push
enter
jle
cli
cwde
push
xor
clc
mov
mov
xor
jnp
xchg
inc
xchg
jle
push
mov
push
inc
(bad)
test
shr
mov
rol
test
pop
outs
cmp
aam
dec
pop
in
jb
dec
fs
dec
inc
adc
(bad)
sbb
push
push
or
xchg
inc
and
ins
popf
cmp
popf
mov
(bad)
lds
dec
(bad)
xor
xchg
jmp
inc
frstor
and
(bad)
ja
inc
sbb
jns
ret
repnz
iret
push
jge
mov
pop
ins
dec
das
jge
cwde
sub
retf
fcomp
bound
push
fucomi
call
pusha
or
hlt
leave
sub
sub
or
xchg
stc
out
xchg
xor
popa
mov
cli
sbb
mov
sbb
xchg
and
arpl
fsub
shr
ss
(bad)
into
cmp
in
dec
int
je
mul
pop
xor
in
xor
cmp
xchg
inc
jne
inc
int3
dec
out
movs
cmps
pop
mov
stos
pusha
sbb
or
lods
jle
inc
int
call
push
pop
mov
mov
test
out
or
sbb
out
sbb
fwait
add
(bad)
(bad)
out
fld
popf
arpl
jnp
xchg
mov
paddsb
faddp
sub
into
and
and
fs
dec
xchg
imul
enter
mov
ret
lods
push
cmp
neg
mov
dec
cli
cmp
clc
or
mov
mov
xor
loopne
movs
cmp
mov
inc
rcr
test
sub
and
sub
call
into
pop
add
push
test
mov
xchg
leave
mov
outs
mov
mov
lock
xchg
(bad)
in
mov
nop
xlat
(bad)
push
mov
in
jecxz
inc
pop
push
cwde
xor
int
fwait
loope
pop
rcl
sbb
retf
fiadd
int3
out
loopne
or
cmp
dec
(bad)
mov
mov
cmp
xchg
push
or
sti
ja
dec
jb
fnstsw
shr
dec
(bad)
jmp
leave
dec
and
(bad)
stos
cli
pop
sbb
push
pop
push
inc
(bad)
cmp
sub
ret
jb
in
ja
add
fldenv
adc
sub
outs
pushf
daa
or
mov
into
iret
or
out
sub
movs
cmp
std
push
cld
in
je
ror
mov
loope
icebp
inc
push
mov
inc
push
push
mov
repz
jnp
inc
ins
cdq
xchg
adc
xchg
xchg
stos
pop
sub
mov
shr
lock
cmp
and
lods
xor
movs
popa
pop
pop
jle
shl
(bad)
loopne
inc
stos
add
jne
(bad)
ror
jmp
xor
in
in
mov
pop
jbe
jl
mov
rcl
adc
xchg
sbb
jmp
in
or
pop
push
sti
cmp
icebp
dec
add
add
cli
fs
ins
xchg
inc
inc
adc
and
and
pop
mov
sub
mov
pop
xchg
pop
aas
(bad)
sahf
nop
jl
and
dec
or
(bad)
pop
inc
lods
cmp
pop
sub
xor
inc
retf
adc
jmp
scas
imul
(bad)
popa
or
outs
test
(bad)
shl
xor
xchg
scas
sbb
push
scas
sub
in
pop
(bad)
mov
cdq
movs
popf
jmp
push
lea
sub
data16
mov
or
pop
and
rol
push
cmp
shl
inc
jmp
std
sbb
mov
(bad)
test
(bad)
mov
jae
pop
(bad)
loop
les
out
stos
in
lock
in
loope
(bad)
or
pop
lods
out
or
daa
adc
in
(bad)
jmp
jmp
cwde
mov
mov
mov
pushf
jmp
jl
jg
lods
adc
sub
mov
out
dec
jno
pop
inc
xchg
fidiv
cmp
add
and
mov
push
mov
call
mov
xchg
int
sbb
std
xor
mov
mov
call
jge
xor
aad
xchg
adc
jnp
icebp
and
fiadd
xchg
and
sub
mov
dec
cmp
sbb
test
in
mov
mov
pop
ror
(bad)
out
and
or
or
xchg
fsub
or
adc
xor
arpl
inc
js
(bad)
scas
mov
out
js
xchg
jae
pop
push
push
cwde
and
push
mov
loop
imul
push
mov
push
cmp
lahf
(bad)
int
dec
push
movs
movs
enter
cmc
lea
cmp
push
push
adc
aam
jne
push
and
mov
mov
mov
rcr
fstp
jp
xchg
adc
xchg
mov
mov
enter
in
xor
(bad)
or
adc
stos
int3
jo
mov
in
sbb
daa
test
jmp
add
ret
repnz
jns
lds
mul
cli
fistp
fdiv
mov
cmp
fucom
dec
int3
inc
push
jb
in
mov
fst
cld
pop
retf
cmps
fdiv
pop
int
cmp
aaa
sbb
xcrypt-ctr
cmps
sbb
and
adc
adc
jl
push
test
in
je
imul
xor
in
mov
mov
jl
adc
jmp
retf
inc
ja
sbb
push
and
(bad)
std
xor
dec
cdq
repnz
and
imul
inc
fcmovu
aad
lods
or
ins
js
pusha
mov
dec
inc
(bad)
mov
xchg
sti
mov
add
xor
in
jmp
xor
xlat
movs
mov
xor
inc
in
rol
xchg
pop
pop
and
mov
add
rol
push
lea
outs
sub
retf
scas
add
int
cs
rcr
and
iret
sbb
loopne
ret
sar
xor
add
loopne
in
push
jne
pop
xor
loop
sbb
loop
and
xchg
and
dec
adc
test
out
ds
mov
in
ins
in
mov
ss
jbe
cmp
sti
dec
mov
fld
std
xchg
xchg
rol
fs
ds
or
pop
div
sub
sub
mov
xor
jmp
xchg
sbb
pop
aas
xchg
ss
out
sub
mov
lea
mov
fdivr
dec
and
test
cli
jnp
xchg
mov
fisubr
mov
cmp
pop
cmps
dec
mov
data16
and
daa
iret
stc
fbld
xor
xor
mov
mov
mov
jle
adc
or
(bad)
out
cmp
sbb
lods
ret
and
nop
sbb
bound
add
test
pop
lods
mov
jle
push
add
dec
pop
push
sbb
jecxz
lahf
in
or
push
add
cmp
enter
pop
pop
loop
pop
dec
cmps
test
mov
pushf
dec
xchg
fwait
enter
cmp
sahf
lods
jp
mov
icebp
xor
das
repz
imul
mov
xchg
cli
sti
(bad)
cmp
rol
push
out
push
dec
ins
fisubr
or
cs
cld
pushf
inc
xchg
push
ja
daa
fcomip
inc
xor
data16
mov
xor
dec
cld
sar
push
push
(bad)
mov
pusha
pushf
push
cmp
scas
(bad)
xor
inc
je
xchg
xchg
js
sbb
test
ss
pop
das
jg
call
add
mov
into
repnz
leave
inc
mov
jne
xchg
stos
mov
lahf
ds
(bad)
ins
sub
push
push
div
mov
imul
jl
dec
enter
sbb
in
mov
in
jge
sub
frstor
add
push
call
gs
adc
repnz
and
or
dec
jecxz
mov
push
xor
cmp
push
cmp
cmp
mov
push
mov
cmps
add
ret
jb
pop
aad
daa
retf
mov
fs
into
mov
ins
int3
iret
or
xchg
mov
inc
cs
jnp
ss
bound
add
adc
popf
call
jle
cmc
popf
(bad)
(bad)
jno
es
push
cs
xchg
pop
cmp
ror
js
pop
xchg
lods
add
jns
fild
adc
imul
jbe
push
adc
xor
cmps
xchg
retf
push
xchg
jno
jp
jmp
sub
les
jle
pop
nop
xchg
das
(bad)
test
cs
test
xchg
(bad)
lods
push
mov
and
(bad)
adc
ror
adc
jecxz
test
lods
pop
dec
pop
xor
or
imul
push
int3
mov
xor
jb
stos
xor
fidivr
mov
cs
xor
mov
mov
xchg
js
and
pop
mov
loop
lock
shl
sub
mov
push
not
xchg
mov
cld
push
inc
or
call
cld
cmps
mov
test
imul
inc
push
cmps
pop
data16
in
outs
ins
(bad)
mov
out
outs
loopne
mov
lods
in
jae
out
xor
es
push
dec
mov
sbb
mov
shr
push
cdq
jl
aam
pushf
int
pop
arpl
dec
or
retf
in
and
retf
sbb
rcr
cmp
dec
gs
cmp
xor
scas
jg
in
push
das
popa
mov
punpcklwd
or
fist
jl
cmc
in
mov
xchg
jbe
in
jg
adc
pcmpeqb
rol
rep
rol
or
in
test
outs
xchg
in
fwait
aaa
xor
mov
push
in
aaa
push
add
ret
lods
inc
cmp
and
ins
add
sub
pushf
pop
xchg
pop
pop
dec
jns
fcom
test
fild
mov
fwait
and
ins
mov
(bad)
or
loop
sbb
mov
push
jle
sbb
cbw
jns
aas
std
(bad)
fmul
mov
ds
inc
add
add
scas
test
ja
cli
(bad)
stos
imul
xor
ja
retf
pop
ja
adc
mov
lods
jo
hlt
pop
xchg
mov
mov
in
add
out
repz
pop
imul
mov
test
fsub
mov
popf
add
inc
ret
iret
push
(bad)
aas
(bad)
push
mov
lods
sub
mov
xor
js
pushf
imul
aam
sbb
pop
inc
push
mov
fs
(bad)
iret
push
inc
bound
dec
add
sub
stos
fisubr
cld
cmps
out
pop
add
mov
mov
inc
fdiv
in
test
inc
inc
jg
or
and
ins
repnz
mov
inc
mov
cmp
mul
fidiv
add
jle
pop
js
ret
fst
(bad)
loop
jbe
push
add
or
lds
in
dec
xor
es
sub
pop
cmp
nop
push
sub
fdivr
push
mov
cmps
fwait
cpuid
cs
mov
daa
call
test
and
in
xchg
cmps
std
std
jmp
mov
(bad)
ss
ret
in
mov
inc
cdq
fld
cmc
aam
cs
jle
or
cmp
div
or
xchg
lahf
sub
dec
imul
mov
push
xchg
cmc
jmp
repnz
pop
cmp
dec
mov
out
cmp
sbb
cwde
mov
xchg
dec
add
or
adc
dec
scas
or
out
or
mov
popf
icebp
popf
in
inc
jecxz
(bad)
sti
lock
mov
mov
(bad)
outs
aaa
pop
xchg
(bad)
fidivr
add
popa
out
ins
or
lods
in
cmp
call
add
std
push
xchg
push
imul
lods
xchg
add
sbb
leave
and
daa
retf
in
dec
sar
aad
int
inc
scas
pop
fstp
mov
cmp
lods
ficomp
clc
lods
mov
test
jmp
jns
jp
ins
xchg
inc
sbb
inc
dec
xchg
and
dec
pop
arpl
sub
outs
imul
test
cmp
push
pop
outs
mov
fs
jnp
test
hlt
xchg
iret
ja
xor
fild
js
mov
ret
mov
es
push
aas
aaa
test
sbb
or
sub
rcr
lods
add
das
int3
and
xor
jb
hlt
jle
aad
pusha
push
ins
sub
loop
mov
jl
pop
outs
aas
or
jge
dec
mov
push
loope
in
rcr
ds
sub
cmp
sbb
mov
mov
push
jmp
jge
cld
add
jp
addr16
push
in
sub
cwde
adc
mov
shl
jle
sbb
cmp
jmp
cli
xor
pop
mov
std
daa
mov
adc
sbb
dec
int3
xchg
lock
dec
int3
popf
cmc
cmp
outs
xchg
cli
jmp
fld
pop
loop
sbb
sti
cmp
in
jmp
dec
fcmovnu
retf
data16
xlat
dec
and
aad
mov
outs
jp
and
xchg
add
xchg
push
and
sahf
jmp
mov
out
ret
sub
(bad)
xor
aad
int3
call
fistp
or
jg
bound
mov
neg
lods
or
lea
imul
sub
repnz
(bad)
arpl
mov
not
xchg
and
(bad)
idiv
mov
in
cmps
pop
sbb
or
dec
mov
xor
pop
out
push
mov
int3
test
dec
cmp
fcomp
js
loopne
stc
outs
mov
jecxz
jne
push
push
mov
hlt
mov
cmp
cmp
ss
mov
nop
xlat
sbb
aad
mov
ret
pusha
mov
stos
and
xchg
pop
fisub
aad
mov
sbb
sub
mov
into
push
popa
cmp
jne
jl
aad
mov
ss
and
pusha
sub
jb
sbb
pop
fld
outs
mov
imul
and
mov
outs
inc
jg
popf
aas
cwde
call
mov
jb
daa
gs
xor
pop
imul
sub
ja
imul
test
rcl
aas
xor
mov
push
js
stos
inc
dec
aad
ss
mov
inc
stos
outs
gs
push
push
lahf
test
cmps
pop
dec
sub
mov
inc
jl
pop
icebp
ins
push
pop
clc
shl
loope
cmps
pushf
add
test
add
test
call
push
ja
mov
dec
outs
aas
adc
into
mov
imul
xchg
bound
sti
(bad)
test
mov
rcr
int
inc
jl
dec
cld
test
std
clc
pushf
pop
into
fist
sub
clc
sub
loope
xor
dec
cmp
aaa
mov
jp
pusha
lock
aas
rcr
push
pop
fwait
sub
cmps
adc
jge
cmp
fwait
pop
cmc
test
movs
sbb
xchg
pop
xor
sar
fmul
mov
cmovne
inc
cmp
adc
mov
ins
pop
mov
shl
in
push
jb
add
xchg
jle
pusha
cmp
shl
ins
hlt
ret
add
in
jmp
push
push
cmps
daa
jle
and
and
push
add
mov
xor
inc
xor
inc
xchg
(bad)
(bad)
jnp
jbe
cmp
(bad)
stos
imul
fld
mov
js
jle
fidiv
push
cmc
hlt
imul
repz
mov
sbb
ror
sbb
or
xchg
mov
fisttp
sti
mov
pop
mov
mov
jmp
scas
add
dec
scas
mov
fdiv
ror
(bad)
push
dec
mov
dec
xor
pop
add
ret
jmp
fistp
mov
fwait
add
(bad)
out
add
adc
lock
adc
inc
aad
loopne
fdiv
cmps
push
sub
jmp
in
sbb
mov
sbb
inc
scas
retf
stos
lds
sbb
jl
stos
dec
test
xor
out
das
and
mov
and
test
xor
inc
shr
lock
arpl
and
stc
push
push
repnz
int3
repnz
push
cmp
(bad)
or
(bad)
add
ja
mov
push
pop
jg
jo
mov
xor
push
add
fs
rcr
aaa
xlat
inc
xor
push
mov
jge
inc
sbb
cmc
call
ds
imul
stc
cmp
jae
aas
sbb
nop
xor
mov
mov
popa
jo
dec
cmp
cmc
push
sbb
in
jo
inc
lock
dec
enter
adc
dec
inc
adc
jb
aam
mov
mov
(bad)
loopne
mov
xor
into
dec
xor
add
xchg
sbb
mov
hlt
lods
mov
lea
(bad)
shr
push
cdq
or
and
or
daa
cli
mov
ins
push
cmp
mov
push
cmp
jnp
push
add
xor
scas
pusha
dec
push
call
(bad)
push
jnp
call
sub
outs
mov
std
inc
sbb
cmp
(bad)
int3
mov
les
outs
or
cmc
(bad)
retf
sub
xor
sbb
ret
test
mov
scas
out
ret
mov
xor
shr
in
shl
ss
mov
mov
push
into
(bad)
or
dec
mov
imul
shr
retf
sbb
loopne
mov
outs
adc
mov
shl
dec
(bad)
scas
or
xchg
aam
xor
cs
push
jmp
cwde
inc
mov
jno
pop
mov
mov
jecxz
lea
cmp
cmps
xchg
out
enter
adc
jecxz
mov
jo
movs
lock
in
pushf
xor
jo
es
dec
gs
mov
mov
(bad)
cld
xchg
jne
fld
rcl
pop
lds
movs
lahf
pop
aaa
lods
xor
bnd
fstp
jnp
and
push
fs
data16
inc
push
mov
inc
jecxz
push
imul
lods
mov
xor
repz
adc
jnp
jnp
aam
adc
jae
jecxz
jne
dec
mov
push
or
scas
pop
imul
mov
sbb
fistp
shl
ins
stos
mov
fs
mov
jb
(bad)
loopne
mov
dec
imul
jo
lds
int3
add
cmc
ds
jb
out
iret
inc
dec
icebp
or
jae
aam
add
stos
(bad)
and
and
dec
sbb
jle
mov
fidivr
mov
dec
js
imul
ficom
sub
inc
push
jbe
push
adc
into
inc
jp
retf
cmc
fsubr
sub
mov
stos
adc
xlat
mov
iret
xor
mov
int
jl
cwde
hlt
out
fs
aad
mov
mov
test
mov
mov
test
idiv
xchg
cmp
mov
sub
xchg
xor
and
imul
push
xchg
fcmovne
cmp
mov
pop
pop
push
mov
mov
fsubr
or
in
and
inc
jmp
outs
cmp
or
cmp
gs
test
sub
dec
jmp
hlt
add
in
push
mov
jns
test
arpl
(bad)
dec
push
int
(bad)
not
mov
cli
sub
outs
fistp
aad
inc
xor
push
ror
out
fnstenv
or
pusha
pop
ud1
sbb
ror
add
cli
pop
or
pop
add
jb
hlt
shl
not
loop
mov
xlat
mov
sbb
scas
mov
imul
sub
push
xor
inc
stos
rcr
movs
add
pop
sub
jnp
mov
fs
jmp
adc
push
push
pop
and
xchg
adc
lea
(bad)
(bad)
adc
sub
mov
hlt
icebp
rcl
(bad)
shl
in
xor
shl
or
and
mov
call
das
mov
arpl
mov
cld
out
imul
cmp
aam
xchg
jns
lahf
in
and
jecxz
into
pop
scas
mov
inc
iret
push
inc
ds
adc
inc
addr16
pop
and
inc
add
lea
hlt
pop
std
dec
loope
mov
dec
rcr
and
in
jo
xchg
ins
cmc
mov
sub
sbb
and
in
pop
ss
scas
arpl
push
icebp
imul
shr
mov
or
aas
sub
rcr
and
sub
mov
xchg
xchg
jmp
mov
dec
cmp
xchg
(bad)
pop
std
mov
ror
mov
(bad)
jmp
(bad)
nop
jno
je
gs
and
fistp
sbb
daa
adc
ror
sub
ins
(bad)
out
or
mov
es
das
cmp
sbb
gs
pop
xchg
sar
int
jg
xchg
cmp
push
out
fbld
les
cmp
jo
iret
out
pop
jg
ss
adc
ret
ss
out
(bad)
mov
into
fwait
aaa
leave
jle
dec
icebp
mov
inc
jge
and
into
fisttp
jnp
sti
inc
jge
(bad)
call
nop
push
data16
inc
xchg
xchg
sbb
mov
dec
ror
popa
ds
mov
cmp
mov
pop
xchg
and
and
xor
push
push
stos
ins
int3
or
inc
add
xor
xchg
je
adc
push
dec
rol
popa
pop
jp
dec
mov
mov
sbb
outs
clc
mov
arpl
mov
sbb
sub
pushf
mov
call
outs
push
outs
mov
cwde
data16
aas
mov
mov
xor
out
inc
ins
push
mov
sub
cmp
fs
loop
xchg
adc
sahf
lods
mov
jg
ss
inc
imul
(bad)
dec
imul
jno
inc
and
in
test
dec
sbb
inc
sar
dec
dec
test
cmp
cmp
movs
sub
popf
xchg
sbb
jae
push
xor
jl
add
jne
mov
add
cmp
shl
(bad)
cmp
out
addr16
mov
add
mov
inc
push
sar
push
test
sub
mov
int3
cdq
test
mov
mov
mov
bound
cs
sub
add
or
dec
fisubr
outs
xchg
sti
ret
rol
imul
push
mov
clc
xor
xor
aas
cmp
sbb
fwait
test
adc
jno
xor
push
popa
ss
dec
xor
dec
pushf
fistp
add
dec
adc
sub
pop
into
iret
inc
cli
loopne
je
jae
sbb
repz
dec
out
sahf
in
popa
mov
push
push
dec
dec
pop
ins
cwde
movs
xchg
jle
xor
mov
dec
es
xor
loope
cdq
pop
or
mov
clc
stc
sahf
inc
jecxz
in
in
mov
inc
and
push
adc
or
jmp
dec
jecxz
or
jne
(bad)
add
loop
sbb
scas
in
aam
or
scas
sbb
jb
retf
adc
movs
fisttp
stos
cmps
or
mov
movs
xor
cmps
in
mov
test
out
mov
cmp
and
sbb
icebp
mov
retf
out
call
sbb
mov
into
xor
fdivr
sbb
shr
arpl
xchg
out
adc
push
retf
repnz
arpl
pop
sbb
sbb
sub
mov
cmp
adc
out
inc
lods
loop
cld
mov
and
pop
popf
mov
in
shr
not
fdiv
pop
sahf
retf
rcr
pop
es
ds
nop
mov
adc
mov
jmp
lds
or
pop
mov
lods
push
adc
js
xor
hlt
adc
je
aam
and
xor
arpl
aam
mov
bound
not
in
int3
ins
shr
inc
jle
ja
ss
imul
and
mov
rcr
and
add
jbe
pushf
cmp
sbb
mov
hlt
out
shl
fisttp
mov
cmp
fisub
jg
push
enter
sahf
sub
cmp
test
lds
mov
lahf
call
cmp
sti
nop
mov
dec
dec
pusha
call
jge
jne
out
pop
xor
mov
pop
jl
test
add
or
cdq
xlat
fsubrp
mul
(bad)
enter
es
mov
ds
sbb
mov
ret
cmp
sub
sbb
(bad)
xor
mov
sbb
xor
add
xor
into
dec
clc
inc
cdq
test
fidivr
addr16
jge
inc
(bad)
push
xor
xchg
mov
mov
in
and
lods
jl
cli
movs
jl
and
mov
sub
dec
inc
cmp
push
mov
adc
dec
(bad)
mov
ret
mov
fstp
jae
scas
pshufw
test
and
ret
mov
call
clc
(bad)
jl
add
jp
push
int3
fstp
(bad)
sub
and
fsubrp
adc
jmp
or
sbb
xor
xchg
mov
and
sub
ret
mov
jmp
shr
mov
mov
inc
and
shl
mov
aaa
fcmovb
fbstp
xor
icebp
cmp
and
sub
push
fild
not
push
mov
shl
cmps
clc
cmps
stos
jbe
and
sbb
in
fistp
pusha
daa
pop
jnp
(bad)
mov
outs
cmp
in
xor
mov
test
mov
(bad)
mov
mov
inc
jbe
jl
sti
jae
xchg
ins
push
add
pop
ins
test
stc
add
fst
fstp
mov
out
imul
xor
xchg
jle
(bad)
fs
aad
mov
stos
sti
(bad)
jmp
or
xlat
pop
xor
push
jmp
mov
inc
lods
out
sbb
stos
xor
pop
gs
mov
fdivp
aam
adc
ja
gs
lods
in
lods
cmp
xchg
mov
add
push
hlt
enter
test
repz
sbb
lock
pop
test
mov
loope
lock
inc
add
loop
fmul
xor
mov
jmp
daa
inc
and
add
sbb
fnstsw
xor
inc
rcl
jecxz
adc
mov
test
mov
out
jae
dec
lahf
dec
dec
test
mov
mov
gs
pop
int
jbe
fmul
xchg
mov
cdq
test
sub
jge
imul
jns
cld
adc
pop
or
(bad)
jge
push
jnp
push
fwait
adc
dec
in
mov
push
out
ror
rcl
pushf
and
dec
out
arpl
sub
lods
nop
jae
jecxz
push
call
mov
jmp
push
xor
imul
sahf
xchg
stos
aas
adc
push
popf
pop
pop
jg
xchg
sub
outs
daa
cmp
push
lea
push
or
fist
pop
push
(bad)
mov
dec
xor
sub
jp
sbb
aas
mov
addr16
mov
mov
in
mov
mov
ret
and
cmp
nop
xor
adc
cmp
movs
rcl
lods
cmp
push
push
push
adc
xor
mov
rcr
sub
jmp
iret
add
push
sub
dec
sub
xor
cmp
in
xchg
stc
movs
nop
mov
out
add
pop
adc
mov
jl
mov
dec
out
sbb
frstor
push
push
pop
sbb
sbb
out
inc
cmp
dec
inc
jmp
xchg
adc
jmp
jg
lods
pop
repnz
inc
xor
inc
jae
inc
cmp
dec
xchg
cmps
push
pop
dec
dec
sbb
cmp
mov
cdq
and
aas
data16
and
das
inc
mov
(bad)
rcr
push
xor
movs
mov
lahf
sbb
jns
mov
clc
push
js
mov
dec
sti
mov
test
loop
sbb
ret
add
jae
fwait
movs
jne
inc
sub
(bad)
cmps
xchg
jnp
inc
and
lock
std
dec
mov
mov
das
sbb
cmp
nop
push
cmp
and
adc
dec
mov
push
test
cmp
xor
mov
ja
jae
sbb
pop
xchg
shl
(bad)
mov
repz
fneni(8087
popa
add
sbb
pop
xor
xor
and
push
xchg
jno
sbb
lods
and
dec
hlt
add
jp
repnz
vunpckhps
idiv
add
fnsave
pop
sub
loopne
fdiv
and
sbb
loopne
sbb
std
fwait
or
sbb
iret
mov
popa
popf
rol
mov
jmp
push
jmp
jmp
mov
push
js
cmp
cmps
push
rol
mov
lds
push
lock
cli
arpl
push
cmovge
cmps
icebp
xchg
xchg
or
aad
out
push
cmps
mov
dec
mov
mov
movs
dec
mov
mov
sti
pop
cmc
inc
(bad)
pushf
xor
stos
(bad)
in
jecxz
jbe
xchg
sbb
push
xchg
jle
mov
push
cs
jbe
repnz
pop
or
stc
jae
ins
push
stos
jp
repnz
mov
push
push
adc
jo
aad
dec
and
xor
cwde
xlat
popa
out
ins
int3
sub
jb
lahf
pop
ss
xchg
loopne
fsubr
cmp
xchg
mov
repnz
mov
test
dec
js
dec
and
mov
das
shl
in
jge
sub
es
movs
imul
aad
outs
lea
popf
jb
mov
xchg
ror
jmp
and
leave
sbb
push
int
mov
jle
imul
or
dec
xlat
push
lds
mov
jne
adc
lods
ficom
pop
sahf
jl
push
pusha
nop
scas
cmp
cmp
lods
inc
lds
loopne
xor
repz
movs
scas
in
xchg
and
dec
xor
fwait
xor
mov
ins
fstp
popf
lods
cld
repnz
loope
mov
push
and
jmp
adc
cmp
enter
xor
ret
jmp
push
adc
jbe
lea
(bad)
xor
xor
or
(bad)
pop
mov
arpl
push
loope
aaa
fistp
push
jg
sti
imul
pop
mov
aam
adc
cld
in
adc
out
pop
sbb
jns
mov
xchg
(bad)
(bad)
jno
ficomp
add
inc
mov
retf
xchg
jp
fstp
clc
scas
stos
lods
retf
xor
fucomp
fld
add
sbb
or
sbb
inc
or
dec
dec
xchg
into
sbb
fisttp
data16
jnp
dec
out
cmp
pop
(bad)
outs
add
in
xchg
mov
pusha
push
adc
jb
mov
aam
out
fist
dec
jg
pop
sbb
into
cld
aam
daa
push
pop
push
enter
fs
mov
xlat
in
xchg
push
adc
xchg
mov
outs
movs
pop
xchg
fs
mov
inc
xor
rol
cdq
cld
jne
mov
or
aad
mov
repnz
movs
retf
mov
int
call
pusha
inc
jae
pop
dec
aaa
pop
outs
outs
test
repnz
sbb
popa
inc
jle
adc
inc
mov
adc
loopne
mov
stc
push
add
enter
jmp
pop
and
shl
ja
sbb
lock
mov
lock
inc
pop
cmps
test
lods
push
xor
psrlw
xchg
mov
mov
sbb
cmp
cmp
repnz
add
fild
ror
mov
clc
std
bound
mov
fisttp
addr16
push
es
ffreep
pusha
dec
sbb
sbb
xor
imul
jno
xchg
pushf
xlat
mov
lahf
aas
rcl
in
in
sub
fcomip
cwde
cmp
dec
jge
mov
out
jle
add
adc
cdq
jne
(bad)
out
or
add
mov
sbb
adc
popa
mov
push
bound
(bad)
lea
push
in
bound
popf
retf
mov
sub
push
and
daa
cmps
mov
fdivr
jmp
inc
(bad)
dec
test
mov
(bad)
inc
into
jge
test
test
fnstenv
sub
and
mov
out
(bad)
cmp
pusha
retf
mov
pop
add
push
add
aas
(bad)
xor
test
cdq
ss
and
daa
ss
push
dec
dec
test
aas
mov
sbb
push
jo
and
xchg
xor
pop
adc
pop
add
int
inc
mov
sbb
cdq
adc
cmp
inc
imul
std
cmp
cmp
test
std
nop
iret
add
fwait
xor
jle
jb
jl
or
pop
or
ror
add
xor
imul
pusha
fs
les
fldcw
mov
popf
dec
cwde
adc
mov
pusha
jp
xchg
xchg
scas
add
dec
jge
cmp
inc
inc
cdq
mul
fs
not
hlt
lock
sbb
mov
sbb
mov
or
loope
xchg
xor
fsubr
dec
fs
inc
leave
jmp
mov
pop
mov
adc
jg
sub
test
mov
jo
cdq
retf
mov
and
call
push
cdq
in
jne
fs
cmp
push
xchg
imul
mov
cmc
aam
scas
push
cmps
cmc
cmp
mov
push
pop
inc
push
dec
jne
aam
or
fs
lods
jle
pop
repz
out
ret
ret
cdq
sar
out
mov
mov
sub
bound
mov
fisttp
test
pop
jg
dec
sbb
nop
xchg
les
or
xor
xchg
mov
mov
mov
cld
ins
test
and
aas
xor
inc
sbb
adc
and
or
adc
out
outs
or
into
jp
cmp
pusha
cmc
retf
sub
dec
add
mov
ror
dec
(bad)
and
repz
in
inc
sahf
out
and
and
fcomp
cmp
dec
pushf
mov
test
push
xchg
lods
je
mov
neg
push
jns
mov
push
aam
lock
cmp
lods
mov
popf
cmp
idiv
fmul
cwde
or
mov
jge
sbb
sbb
cmp
xchg
repz
retf
xor
ds
adc
xchg
jne
jp
or
sub
and
mov
arpl
sbb
(bad)
imul
pop
fucom
pop
and
les
inc
sub
lods
not
into
or
push
push
mov
sbb
or
scas
div
xor
retf
(bad)
mov
cdq
mov
jp
lds
sbb
jp
mov
adc
push
jl
jne
jnp
push
(bad)
lahf
fwait
inc
ds
sbb
scas
shl
out
das
mov
call
aam
inc
loope
(bad)
aas
stos
fnstcw
add
leave
xor
xchg
mov
retf
(bad)
jnp
and
push
inc
dec
popf
mov
or
(bad)
es
iret
iret
in
aaa
xchg
pop
dec
cmp
call
cs
xor
ror
xadd
outs
sub
retf
or
mov
xchg
movs
ss
xor
and
push
clc
shl
lods
jns
in
xchg
int3
movs
pop
dec
jl
push
fs
shl
jno
aas
in
iret
cld
mov
xchg
and
lahf
mov
in
push
push
xchg
mov
movs
xlat
retf
fisttp
cmp
or
adc
xor
scas
retf
loopne
fwait
repnz
jbe
lahf
add
mov
daa
cs
xor
sbb
inc
push
xchg
and
mov
fisubr
and
es
les
mov
fdiv
movs
test
mov
lods
sub
jmp
jns
inc
cli
aaa
test
fs
or
xchg
and
inc
sbb
sub
popf
icebp
inc
sbb
adc
int3
dec
repz
and
push
fs
popf
sub
in
adc
xor
push
xchg
imul
in
lods
pop
ja
into
cmp
push
xor
mov
into
(bad)
cmps
pop
(bad)
hlt
rcl
or
dec
cli
adc
int
fmul
push
jmp
cld
jb
fnstenv
sub
jns
movs
imul
stos
fs
outs
inc
push
fbld
cli
pushf
mov
fwait
and
sbb
mov
push
pusha
push
in
ja
jmp
dec
loope
ds
shr
push
cmp
pop
ja
mov
lock
les
mov
fucomi
sub
pop
push
dec
neg
cli
bound
es
and
ror
loope
sbb
rol
stc
test
sti
out
(bad)
cld
test
imul
cmp
mov
mov
mov
pop
(bad)
adc
adc
cdq
stc
xor
outs
dec
ret
adc
ficom
sbb
adc
pop
push
sbb
daa
sbb
or
push
test
dec
mov
and
fist
push
pop
fdiv
(bad)
jns
jecxz
int3
(bad)
mov
aaa
or
push
push
cmps
push
pop
push
lock
pop
ds
stos
out
sbb
jmp
push
arpl
scas
add
and
or
shl
mov
mov
mov
or
addr16
pop
test
and
mov
pop
mov
outs
in
and
or
and
ins
gs
inc
(bad)
pop
push
loope
mov
push
popa
sub
xor
ins
stos
xor
and
repnz
cld
retf
ins
mov
dec
test
ss
add
loope
or
xchg
mov
fisub
mov
sub
mov
add
add
movs
int
iret
jg
(bad)
jno
and
xor
stc
pop
xchg
xchg
(bad)
lahf
mov
jne
jecxz
mov
mov
lods
xchg
shl
pop
xchg
sbb
loop
pop
fist
scas
daa
mov
ss
and
js
mov
or
xchg
push
dec
not
inc
call
mov
imul
inc
cwde
pushf
mov
idiv
test
inc
lock
add
sbb
sbb
push
clc
xchg
add
dec
jo
scas
xor
ror
cmp
pop
retf
mov
test
mov
push
mov
add
pop
xchg
push
hlt
jns
mov
pop
xchg
ret
bnd
or
test
add
inc
xchg
hlt
jns
shl
mov
ficomp
dec
mov
mov
dec
in
enter
jecxz
cmps
(bad)
sub
jecxz
ficom
cmp
cmc
shr
pop
jmp
inc
jmp
(bad)
sub
fdiv
mov
sub
mov
call
lahf
popa
fwait
and
mov
dec
sti
int3
ret
sub
jne
out
(bad)
sbb
or
scas
aam
shl
adc
scas
idiv
sti
inc
btr
adc
jns
dec
ds
inc
push
mov
es
fs
or
pop
sub
push
leave
xchg
out
mov
cmp
sbb
jno
bound
xchg
repz
cmp
push
lods
cmps
cld
or
mov
jbe
mov
data16
or
mov
mov
loop
cmp
cs
add
rcl
mov
mov
into
fstp
cmp
cli
dec
sbb
mov
push
xchg
xchg
pop
aaa
neg
cli
jno
or
add
fbstp
mov
adc
jl
adc
sbb
icebp
push
dec
jae
cs
stos
mov
jnp
mov
sbb
sbb
(bad)
or
out
mov
lds
lods
mov
ins
lods
inc
pop
icebp
fst
sub
jg
xchg
sbb
enter
pop
inc
in
inc
mov
push
cmp
sbb
imul
jne
xor
mov
out
sahf
and
cli
ja
mov
movs
inc
dec
jmp
sub
jae
(bad)
(bad)
dec
cmp
leave
adc
sbb
mov
jl
je
and
push
test
adc
nop
and
rcr
test
cmp
sub
out
test
cmps
repnz
inc
jg
mov
fs
adc
push
stos
jge
popf
xchg
aam
sub
push
xchg
fadd
pop
mov
cld
jle
mov
pop
das
shr
and
push
outs
outs
(bad)
add
push
pop
inc
push
add
cli
popf
stc
(bad)
adc
dec
push
cmps
js
sbb
retf
scas
ins
sbb
cwde
mov
xchg
xchg
cwde
(bad)
adc
cmp
imul
sbb
out
inc
ins
icebp
mov
pop
ret
push
aam
adc
clc
mov
mov
push
xor
lds
jb
sub
outs
fimul
out
and
cmp
mov
stc
inc
mov
out
xchg
add
cmp
jp
add
(bad)
(bad)
or
or
xchg
int
ret
jmp
xor
std
mov
xchg
test
movs
daa
push
hlt
les
scas
(bad)
xchg
add
cmc
int3
jmp
not
scas
cmp
adc
mov
iret
gs
jb
movs
mov
pop
lea
retf
out
ud1
fwait
jnp
mov
sbb
(bad)
in
jne
and
enter
mov
das
nop
in
(bad)
fisub
dec
repz
dec
popf
daa
xor
pusha
jne
xchg
movs
aaa
(bad)
jge
or
icebp
sub
out
inc
repz
call
in
mov
int
pop
(bad)
(bad)
sub
sahf
fstp
int3
dec
stos
and
inc
enter
jl
adc
xlat
ficom
in
sub
or
scas
jle
outs
(bad)
xchg
repnz
xchg
jno
mov
xchg
(bad)
jns
imul
xchg
rcl
fcmove
push
mov
and
loop
sbb
cli
stos
mov
sub
imul
mov
stos
xor
mov
adc
movs
xchg
loope
dec
sub
loop
(bad)
into
jb
es
pushf
loop
mov
(bad)
das
inc
leave
mov
dec
(bad)
pop
test
sbb
mov
movs
add
adc
or
pop
mov
fcmovnbe
lea
dec
inc
maxps
or
push
mov
push
les
mov
clc
and
jb
movs
sub
sub
sub
or
outs
mov
mov
popa
push
xchg
out
mov
loop
pusha
ret
xchg
fdivr
in
stc
xchg
ficomp
cmc
cmc
jne
les
jmp
or
int
jl
clc
fiadd
gs
mov
and
adc
mov
add
push
pop
inc
inc
adc
add
popf
mov
sti
frstor
aam
les
mov
(bad)
dec
in
dec
and
inc
shl
movs
xchg
inc
inc
aad
retf
or
fsubr
call
xchg
push
shl
jmp
xor
and
sub
push
in
push
fsubr
dec
xor
inc
lock
fisubr
mov
push
(bad)
sbb
add
ds
adc
clc
and
xor
inc
lahf
push
pop
enter
mov
inc
out
mov
xchg
es
adc
adc
xchg
adc
mov
push
and
mov
xor
shr
mov
dec
sbb
sub
enter
enter
pop
and
xor
or
call
movs
dec
pusha
dec
xchg
fsubr
mov
iret
imul
outs
dec
sub
push
les
push
rcr
sub
mov
aam
or
sub
mov
in
xchg
pop
test
dec
icebp
push
xchg
sub
inc
repnz
into
aad
cmp
cmp
xor
pop
jp
pushf
mov
jno
cmp
jnp
sub
inc
adc
call
cmp
test
sbb
aas
enter
jmp
mov
fbstp
push
mov
outs
cld
icebp
sbb
sbb
inc
ss
or
mov
jmp
or
cmp
adc
mov
mov
(bad)
jmp
gs
mov
add
xchg
inc
jne
pop
fisubr
sbb
cld
(bad)
stos
xchg
xor
cmp
pop
idiv
pop
into
dec
adc
pushf
(bad)
js
fcomi
cli
cmc
and
inc
mov
push
sahf
inc
inc
lds
mov
and
or
cdq
add
mov
push
jecxz
mov
lock
jmp
xchg
sti
stc
iret
imul
and
(bad)
call
pop
mov
sar
enter
xor
xchg
pushf
cmp
push
pop
fld
out
jno
push
adc
rol
lahf
js
push
loop
pushf
sbb
dec
mov
rcr
jl
sbb
fwait
dec
mov
out
imul
pop
aam
inc
sbb
movs
pcmpgtb
push
retf
xor
pop
pop
mov
xchg
and
mov
or
pusha
cwde
xchg
or
xchg
push
inc
push
pop
jg
add
addr16
adc
mov
add
adc
fimul
outs
xor
mov
xchg
ret
ja
or
lea
das
ret
add
out
int3
sbb
in
push
loope
dec
push
stos
aas
out
dec
jmp
shr
aas
fs
xchg
loop
in
mov
in
pop
ret
test
mov
jge
fcmovnb
xor
mov
dec
int3
sbb
mov
lods
mov
std
mov
mov
xlat
push
mov
xor
mov
adc
sbb
test
pop
mov
push
loop
imul
fisttp
inc
push
movs
imul
pop
je
jo
or
enter
mov
mov
jge
and
mov
and
rcr
repnz
sbb
mov
aaa
inc
jl
es
hlt
mov
jbe
stos
lock
cld
mov
push
fcmovnb
out
jmp
inc
out
push
push
mov
pop
add
retf
add
and
and
and
dec
test
imul
icebp
and
dec
pop
mov
ja
xor
inc
retf
popa
in
push
outs
inc
xchg
cmps
fscale
loop
nop
dec
repnz
sub
and
arpl
xor
jnp
cmps
pusha
sqrtps
ror
dec
jmp
inc
repz
bound
mov
fisttp
and
xor
sar
stos
data16
mov
inc
cwde
in
enter
mov
sub
mov
repz
and
sbb
mov
cmps
and
mul
in
bound
and
fdiv
dec
mov
mov
sub
and
cmp
icebp
pop
arpl
pop
push
ret
retf
jns
hlt
cmps
dec
add
mov
(bad)
mov
gs
loope
div
sbb
jno
nop
aad
(bad)
jns
xchg
int
lds
stc
inc
je
popf
xor
mov
xchg
pop
pop
sub
fstp
das
imul
jp
(bad)
in
push
popf
int
cmps
mov
cmps
add
adc
fwait
and
je
mov
cmp
rol
cwde
std
cmp
sub
inc
jne
aaa
cmps
shl
sti
sahf
add
mov
icebp
dec
test
sti
push
call
adc
pop
repnz
std
sbb
pop
cmp
or
add
push
sbb
lds
add
xchg
mov
add
ret
iret
cmp
xchg
xor
mov
sbb
pop
cdq
sbb
ins
pop
adc
mov
and
mov
ins
or
lea
inc
dec
lea
int3
jns
popf
add
ins
out
mov
inc
lock
into
pop
retf
jae
mov
cmp
dec
in
adc
jne
neg
rol
cmp
loope
fbld
pop
xor
ins
and
mov
movs
mov
sbb
outs
lahf
vpaddsb
out
pushf
(bad)
push
or
in
ins
fisttp
dec
sub
cmp
inc
in
xor
jmp
mov
(bad)
push
repz
sub
lahf
fmul
inc
mov
or
nop
and
fucomp
(bad)
push
or
cmp
dec
push
int
mov
rcr
inc
xchg
sbb
mov
in
cmp
fs
fwait
jmp
lahf
xor
aas
pop
out
mov
sub
adc
xchg
xchg
test
retf
test
jecxz
inc
test
add
push
(bad)
outs
inc
arpl
xchg
loope
dec
rcl
push
adc
sub
ror
xor
popf
inc
in
(bad)
cli
dec
mov
push
pop
mov
jb
jno
sbb
ss
cmps
mov
push
push
mov
or
mul
ins
add
stc
movs
jmp
pop
cli
push
pop
cmp
add
enter
jbe
adc
sbb
adc
add
dec
cdq
mov
pop
call
les
sbb
mov
mov
push
dec
inc
stc
mov
xlat
int
dec
outs
test
sbb
loope
pop
movs
(bad)
and
mov
in
mov
ret
std
rcr
sbb
ret
mov
nop
mov
sub
cmps
or
fistp
inc
cmp
stos
jb
mov
(bad)
cld
jo
test
and
or
jecxz
cs
std
inc
nop
cmps
nop
imul
cli
jbe
push
loope
dec
mov
(bad)
aaa
ds
test
(bad)
add
push
retf
nop
fstp
movs
mov
inc
sbb
(bad)
int
popf
lea
ins
jl
sbb
call
mov
arpl
push
test
sbb
movs
retf
cmp
mov
cmp
pushf
lds
inc
adc
call
pop
stos
mov
inc
icebp
dec
sbb
ret
scas
xchg
jne
fs
call
retf
lods
cmps
test
imul
mov
xor
pop
xchg
pop
pop
les
mov
inc
push
sbb
gs
and
pop
jmp
lea
xchg
jl
cli
and
out
and
add
jo
test
mov
test
in
xchg
xor
cld
dec
int3
mov
push
sahf
adc
jge
mov
(bad)
mov
ret
out
mov
ror
pusha
or
and
mov
jnp
div
test
push
lods
jge
mov
ins
adc
loop
js
or
mov
pop
xchg
inc
(bad)
icebp
sbb
sub
sub
dec
mov
movs
pop
adc
sahf
sub
imul
inc
js
cmc
adc
sahf
jge
sbb
in
retf
sar
movups
retf
push
add
and
jns
add
sbb
sbb
mov
cmps
adc
mov
push
mov
mov
cmp
out
pop
loop
cdq
dec
xchg
ficom
jbe
xchg
int
pop
out
fldenv
clc
mov
test
dec
cld
fwait
mov
pop
data16
inc
mov
stc
mov
lahf
pop
mov
scas
pop
stc
imul
fsub
in
inc
ficomp
xchg
xchg
ins
ret
es
push
cmc
test
push
call
inc
movs
gs
and
mov
jno
or
jno
xchg
lods
add
loopne
xor
cmp
inc
xor
pop
mov
je
and
and
dec
push
mov
jno
xor
retf
gs
jo
mov
xor
mov
jno
pop
and
add
neg
jae
ds
repz
dec
hlt
cwde
shr
xor
call
xchg
daa
out
adc
in
jbe
ja
mov
loope
push
xchg
in
push
pop
jmp
dec
cmps
mov
inc
xlat
cmp
mov
loope
pop
test
cdq
pop
arpl
jne
jg
test
aad
inc
fsub
push
jmp
imul
xor
out
std
shr
fimul
icebp
xchg
xchg
out
push
lods
mov
push
mov
dec
loope
sbb
mov
ds
sahf
in
inc
leave
pushf
lods
xchg
(bad)
xchg
push
xor
jno
in
aaa
xor
stos
xchg
sbb
or
push
rol
in
fs
je
aas
xchg
(bad)
fcomp
inc
(bad)
cdq
sub
fld
lahf
mov
and
into
hlt
inc
dec
push
stos
dec
icebp
jns
pop
retf
ds
xchg
mov
cmps
jecxz
stc
jg
cmp
push
add
xacquire
jle
pop
movs
jne
mov
mov
sbb
arpl
adc
lods
data16
cmp
dec
pop
je
sub
das
es
dec
and
mov
pop
xor
adc
call
or
adc
pop
mov
pop
cli
cmp
mov
inc
and
adc
fimul
mov
dec
leave
hlt
or
test
mov
pushf
iret
xor
scas
mov
or
fdivr
xor
pop
xchg
inc
scas
and
sub
repnz
movs
out
inc
test
(bad)
shl
xchg
adc
sub
jnp
in
jb
push
ss
sbb
pop
test
lahf
call
lea
sbb
hlt
pop
cwde
inc
jg
mov
in
push
lea
push
jae
test
ret
hlt
js
loop
sub
call
retf
data16
sub
push
add
xchg
pop
lods
retfw
cmp
jp
das
or
test
jg
push
test
les
loope
fstp
cld
mov
or
daa
xchg
add
mov
sahf
sub
je
inc
xchg
(bad)
sub
sbb
(bad)
(bad)
push
(bad)
ror
paddsb
or
in
std
test
pop
movs
mov
in
gs
outs
mov
int
add
sub
imul
ins
shl
nop
cs
pop
jnp
push
repnz
jecxz
popf
xchg
adc
das
arpl
adc
xor
dec
in
aas
pop
outs
lock
imul
in
cs
jl
arpl
in
or
dec
and
inc
jg
xchg
mov
inc
ud1
and
mov
mov
shl
mov
jbe
push
retf
push
outs
not
xchg
ret
das
fistp
mov
push
or
loope
push
lock
xchg
fld
stc
clc
mov
outs
repz
retf
mov
(bad)
into
push
xor
jle
ret
fsub
mov
call
sub
xlat
mov
sar
inc
aaa
(bad)
mov
fisub
mov
cmp
fisub
ins
xor
sub
cmp
retf
mov
cmp
cwde
adc
push
pop
pop
leave
repnz
enter
enter
xor
push
mov
push
and
loopne
mov
pop
lock
mov
mov
imul
or
adc
jne
xor
or
mov
push
cmp
sub
jbe
jnp
dec
movs
nop
loopne
pusha
dec
fnstcw
enter
mov
inc
cmp
addr16
ret
xchg
dec
and
popa
pusha
xor
or
cmps
je
jle
dec
in
bound
and
ror
inc
push
lock
dec
test
test
les
fidiv
jmp
cmps
out
je
and
mov
mov
lahf
add
dec
adc
(bad)
ins
ss
bound
xchg
retf
rcr
push
xor
xchg
call
in
bound
sbb
retf
add
jp
cmp
out
add
cmp
push
or
movs
shl
dec
mov
mov
or
call
xchg
pop
(bad)
inc
nop
sub
je
pushf
loop
add
loope
mov
out
imul
ret
jecxz
pop
movs
push
cli
loop
cld
or
and
arpl
es
dec
lods
sti
(bad)
js
inc
test
repz
mov
or
or
jne
add
mov
jle
dec
loop
mov
inc
mov
mov
pushf
popf
ror
xchg
mov
mov
hlt
fsub
xor
out
pop
ja
xchg
add
out
pop
aad
lock
ins
sub
adc
push
or
(bad)
ins
mov
jmp
dec
mov
outs
jl
cmps
dec
push
ret
imul
(bad)
js
sbb
xor
fwait
jmp
retf
enter
mov
pop
ja
xchg
outs
jmp
or
push
pop
or
icebp
and
movs
jns
imul
lods
div
pushf
out
sbb
aam
adc
push
stos
call
xor
mov
sbb
repnz
sub
push
pop
out
adc
cmp
xor
sbb
jae
es
dec
push
cmp
cmps
out
leave
repz
mov
push
enter
mov
fs
inc
or
pop
cmps
mov
xor
retf
repz
mov
jne
sbb
test
cmp
sub
fadd
sbb
iret
out
cmp
inc
inc
xor
repz
div
icebp
dec
pop
retf
nop
or
xchg
out
push
stc
inc
pop
add
mov
data16
mov
add
jbe
mov
or
fstp
sub
rcl
adc
xor
xor
add
popf
shr
in
lock
or
sbb
cmp
test
jg
jge
out
stc
cmps
mov
cmp
inc
jg
inc
das
in
sahf
xor
jne
in
popf
repnz
mov
imul
aaa
jge
mov
pop
es
pop
or
sbb
and
jle
ror
fstp
scas
clc
or
xor
je
mov
sub
add
mov
hlt
(bad)
out
sub
xlat
mov
es
test
xor
xchg
and
inc
or
cmp
sub
add
in
lock
shl
mov
push
inc
icebp
imul
mov
xchg
aas
or
in
out
div
pusha
mov
cmp
out
push
fdivr
sub
pop
(bad)
adc
add
xlat
sub
push
movs
push
shl
out
shl
sahf
aad
retf
je
(bad)
retf
mov
inc
out
iret
and
dec
ss
cld
xor
ins
adc
push
ds
jl
shr
dec
inc
cdq
mov
xchg
aas
leave
xor
push
mov
mov
or
pop
pop
mov
jecxz
test
and
push
ror
sub
repnz
dec
cwde
or
shr
ds
aas
test
out
std
retf
arpl
xlat
push
popf
add
shr
js
inc
cmp
xor
iret
mov
pop
or
frstpm(287
push
lods
fnstsw
jae
and
mov
push
sbb
nop
push
jg
add
mov
fwait
jb
add
adc
lea
xor
adc
or
add
inc
sub
fcom
js
mov
stos
mov
pop
and
add
and
sub
outs
mov
lods
push
mov
icebp
sbb
inc
add
push
jle
ficom
adc
dec
popf
mov
test
(bad)
mov
fucomi
in
adc
jae
mov
mov
dec
jmp
clc
(bad)
mov
push
icebp
popa
push
aad
cmp
mov
repz
mov
jns
sbb
lds
test
sti
mov
mov
ss
div
outs
rol
push
xchg
adc
imul
das
mov
enter
pusha
xor
inc
bound
(bad)
xchg
cmps
ja
push
fs
pop
and
jg
xlat
mov
push
sub
jmp
fisttp
sub
jnp
ds
lock
xor
cmps
outs
rdpmc
ds
in
cld
das
jmp
test
pop
inc
mov
les
adc
aam
stos
adc
push
mov
mov
mov
inc
das
aam
jl
jmp
xor
sbb
dec
test
shl
daa
mov
retf
or
stos
push
add
and
xbegin
sahf
nop
jg
push
mov
inc
ret
dec
stos
js
je
and
jge
ror
pop
fs
xchg
and
dec
out
stos
and
push
push
dec
inc
mov
fnstcw
jecxz
out
fnstenv
xchg
shl
fisub
stos
xor
xchg
xor
sahf
or
push
out
mov
adc
call
fist
xchg
inc
scas
inc
pmaxub
iret
sbb
sbb
xor
jge
cli
cmp
add
cmps
stc
xchg
mov
sub
or
add
into
xchg
jns
outs
addr16
cmps
stc
aam
jl
jnp
aam
fisub
cli
push
push
imul
and
mov
xchg
bound
ret
and
out
aas
loop
jns
fsubr
das
jg
mov
ss
repz
out
cmc
mov
pop
mov
ret
inc
movs
movs
push
or
out
repz
sub
push
sub
call
ret
push
dec
pushf
xor
pop
pop
push
dec
mov
cmc
xchg
ss
fcmovnbe
rol
sub
cmps
stos
jl
(bad)
sti
lahf
mov
jae
std
cmp
dec
out
push
push
in
lock
lock
push
ret
xchg
outs
push
pushf
leave
jmp
and
test
push
jmp
jl
aaa
es
cmps
jge
push
ret
mov
push
cmp
test
repnz
sbb
pop
xchg
sub
stos
pop
mov
fwait
mov
ficom
mov
mov
sub
inc
popf
gs
outs
inc
(bad)
pop
ins
or
cmp
inc
aad
sub
stc
sub
leave
push
push
jmp
mov
add
xchg
pop
pusha
push
rcl
cli
jns
dec
sti
sbb
cmc
loope
popf
pop
and
int
cmp
rcl
das
mov
sub
cmc
sbb
sbb
xchg
push
xchg
leave
pop
mov
or
(bad)
push
cmp
ror
mov
jnp
lds
or
pop
mov
loopne
ss
and
bound
mov
mov
mov
add
cmp
ss
int3
repz
lods
inc
ins
fs
and
jns
xor
pause
arpl
xor
scas
movs
fcomp
inc
sub
int3
out
nop
push
jb
xchg
dec
mov
mov
push
das
or
cwde
xchg
arpl
in
add
and
jae
add
add
sub
push
dec
or
lds
xchg
das
push
xor
xor
push
cmp
ror
jg
xchg
sti
adc
pop
add
cmps
xor
jnp
xchg
call
cld
(bad)
or
add
jo
or
inc
pop
hlt
mov
mov
in
rol
xor
ret
outs
es
cmp
xchg
push
mul
xor
jbe
xchg
idiv
out
push
xchg
jns
mov
lods
mov
ret
shl
std
dec
mov
stc
adc
into
adc
push
dec
cs
mov
fistp
jae
adc
cmp
and
cli
dec
sbb
cmps
mov
mov
sbb
inc
dec
inc
mov
xlat
jp
add
jg
pushf
popf
out
jmp
data16
stos
or
stos
jnp
std
imul
add
addr16
test
mov
fst
add
sbb
cmp
test
mov
mov
inc
cmp
aaa
inc
cmc
mov
jmp
cdq
push
fnstcw
xor
xor
mov
push
loope
retf
xor
pushf
repz
fidiv
dec
mov
cmps
ret
pop
jno
mov
clc
jl
js
leave
(bad)
jb
dec
cld
aad
pop
div
lods
mov
mov
cwde
push
out
lods
bound
jl
mov
inc
push
mov
aam
hlt
bound
xchg
mov
and
push
stc
sub
jae
aas
popf
adc
ret
aam
xchg
loopne
fcomp
aad
shl
loop
rcr
lods
or
retf
inc
(bad)
in
xor
push
fstp
xchg
xchg
addr16
lods
cmc
aam
pop
pop
les
leave
rep
pop
je
dec
xchg
iret
xchg
sub
mov
ret
inc
xor
call
test
push
lock
sub
add
stc
jb
inc
mov
(bad)
retf
cmp
or
(bad)
fisub
(bad)
lock
imul
daa
fs
and
popf
mov
mov
push
in
in
pop
aad
xor
ja
jnp
dec
xlat
ja
aaa
jns
push
or
das
call
mov
jmp
mov
inc
addr16
call
mov
jns
mov
je
ret
fwait
cmc
in
xchg
push
jae
ret
sub
shl
add
lods
sbb
int
add
xchg
sbb
cmp
mov
add
(bad)
cld
add
and
leave
int3
push
pop
call
or
fidivr
daa
cmp
(bad)
and
pop
je
mov
out
stc
pop
shrd
ror
mov
popf
pop
sar
js
xchg
cmp
sub
idiv
jne
xchg
pop
push
sahf
cmp
xchg
push
sbb
xchg
dec
in
pop
xor
pop
lahf
enter
jae
sub
mov
mov
push
xchg
nop
pop
jns
in
lock
jle
movs
addr16
scas
out
(bad)
in
ror
pop
add
arpl
sbb
jecxz
jmp
fcomip
ret
dec
out
scas
cmp
mov
not
inc
jmp
jne
out
pop
jge
ins
cli
fs
xchg
ja
mov
outs
jecxz
lds
dec
mov
xchg
jae
in
mov
push
test
or
aas
(bad)
push
popf
mov
jmp
jle
mov
out
loopne
lea
stos
xlat
ins
dec
jecxz
stc
cld
add
out
adc
sbb
mov
adc
lds
adc
xchg
pop
call
scas
fcomp
mov
daa
es
mov
outs
cwde
push
jno
jp
mov
mov
mov
mov
inc
out
in
jne
and
nop
push
xchg
xor
push
outs
jae
rcl
fbld
dec
loopne
cli
mov
inc
push
lods
mov
cmp
(bad)
iret
and
lds
(bad)
mov
int
retf
fldcw
sbb
pop
inc
add
repz
xchg
mov
ins
jne
push
fstp
push
loop
fidivr
lds
cmps
loop
std
ret
push
push
jecxz
inc
fwait
pusha
mov
pushf
rol
pusha
pop
or
cwde
pusha
sbb
pop
cmp
call
loop
dec
mov
xor
fst
sbb
fimul
jl
or
xor
xor
movs
xor
daa
test
ss
pop
call
sub
clc
pop
dec
sbb
iret
lahf
(bad)
rol
enter
mov
mov
push
leave
jno
add
and
mov
call
and
xor
test
dec
push
dec
jnp
data16
movs
push
test
xchg
jbe
sbb
pop
mov
(bad)
addr16
dec
scas
leave
sbb
pop
adc
in
lock
dec
sub
and
out
sub
sub
dec
xchg
repz
push
addr16
dec
jno
cmp
xlat
(bad)
sub
adc
sti
xchg
cmp
test
out
mul
sub
jmp
(bad)
dec
ins
or
lahf
ins
add
adc
dec
popa
mov
or
enter
shl
lahf
xchg
xor
jno
and
jae
out
cmp
frstor
push
dec
cmp
or
fwait
xor
mov
enter
add
in
bound
dec
fwait
or
in
add
cmps
push
pop
pop
cmp
mov
jo
sbb
or
sub
xchg
or
sbb
or
jl
sub
jno
jb
loope
ss
enter
mov
or
cmps
xchg
jle
mov
test
add
stc
in
outs
in
xor
add
jnp
cmps
inc
aas
push
popf
xchg
(bad)
sub
jmp
sub
push
ret
and
mov
push
dec
and
mov
fisubr
ror
sbb
ffreep
mov
xor
loop
test
mov
shl
inc
lahf
and
icebp
rcr
(bad)
xor
dec
call
pop
cs
loop
daa
and
xchg
push
pusha
dec
xchg
test
sub
mov
and
cdq
adc
adc
mov
inc
xor
jo
xor
and
es
fs
mov
push
scas
mov
jmp
add
aad
stc
mov
xchg
out
xor
outs
jle
out
push
add
or
pushf
xchg
rol
xchg
cmps
test
pop
fdiv
repz
les
or
popa
dec
test
out
sbb
lds
js
jecxz
mov
sub
mov
cmp
ficom
xchg
push
inc
pop
idiv
aam
sbb
daa
popa
gs
push
js
cmp
imul
and
cld
sbb
push
es
cld
jg
(bad)
cli
lods
(bad)
xor
mov
aaa
mov
mov
imul
xchg
sub
in
inc
dec
hlt
inc
in
pop
sbb
cs
repz
xchg
xchg
sbb
dec
in
dec
retf
cmp
and
and
push
repnz
test
adc
and
fild
mov
and
cmp
add
stc
push
sub
jle
test
jge
add
sbb
mov
aaa
icebp
retf
inc
les
ins
mov
mov
mov
adc
loopne
ficom
ja
imul
inc
mov
push
mov
sub
push
push
pminsw
movs
push
jb
xchg
movs
shl
add
push
daa
mov
movs
push
cdq
push
mov
stos
mov
clc
and
les
dec
xchg
mov
cmp
dec
and
stc
inc
clc
inc
test
jle
hlt
cmc
jnp
rol
pop
(bad)
jbe
xlat
aam
add
shl
pop
cmc
clc
sbb
sbb
mov
push
ret
push
icebp
fnstsw
xchg
xor
jne
sbb
out
inc
push
sbb
cmp
jns
adc
pushf
mov
fist
and
and
pop
or
lahf
and
sbb
out
mov
icebp
mov
arpl
xchg
or
rol
lahf
pop
cmp
jo
ror
dec
fld
mov
cli
shr
jns
xchg
push
xlat
jl
in
jge
mov
add
cmp
and
movs
(bad)
movs
push
xchg
in
fidivr
xchg
jne
fadd
aaa
mov
push
imul
inc
pop
mov
or
aad
jne
push
and
ds
jp
and
add
jecxz
xchg
fiadd
push
inc
int
test
imul
jbe
jns
jbe
or
cli
test
jo
cwde
push
mov
push
pop
aaa
and
fmul
into
fld
pop
popf
loope
(bad)
fsubr
(bad)
out
inc
in
test
adc
sub
fiadd
sub
das
fstp
int
inc
mov
shr
mov
cmc
pop
sub
aaa
inc
aaa
popa
(bad)
fisttp
mov
int
adc
fld
pusha
cmp
pop
xchg
pop
imul
shl
stos
add
mov
push
ss
and
mov
jnp
mov
jmp
lods
add
(bad)
push
adc
push
sbb
fst
cli
add
jge
fldl2t
aaa
push
inc
fisttp
not
cmp
mov
cli
dec
adc
mov
mov
leave
push
and
cld
cwde
bound
jb
and
xor
je
rep
mov
xchg
xchg
push
jo
sub
jmp
cmp
nop
test
mov
mov
fimul
in
mov
call
test
push
jns
shr
imul
add
push
pop
adc
imul
es
sub
test
inc
fisttp
ror
pop
or
jge
push
icebp
mov
into
sahf
xchg
sub
add
pop
fcomp
xchg
hlt
scas
vmovaps
jbe
push
retf
fs
fs
pop
unpcklps
push
xlat
or
add
pop
lods
into
cwde
imul
(bad)
out
mov
dec
xor
jno
sub
call
inc
sub
or
xor
add
pop
sbb
and
xrelease
sub
xchg
push
leave
lods
jae
pop
retf
mov
int
fbld
gs
mov
int
dec
pusha
mov
pusha
out
pusha
dec
in
mov
out
test
imul
adc
add
repnz
mov
push
aaa
int
cmp
(bad)
sbb
outs
add
sahf
test
cwde
loopne
mov
rol
pop
jl
lods
les
out
xchg
and
jns
aam
lea
pop
ror
jb
dec
adc
sbb
cmp
xor
add
cmp
aad
div
pusha
mov
cld
pop
sbb
ss
mov
hlt
enter
repnz
repnz
mov
mul
mov
lods
push
out
sbb
adc
into
dec
es
inc
lock
and
es
sti
leave
in
sub
int3
jg
and
mul
xchg
shr
fcomp
push
sub
lahf
in
movs
adc
pop
jnp
scas
jno
jmp
ret
pop
and
jle
xor
pop
outs
jp
iret
test
xchg
inc
out
pop
push
(bad)
add
(bad)
(bad)
jb
rol
rol
mov
out
jp
add
add
retf
xchg
mov
push
push
fpatan
scas
in
xor
sub
cmp
mov
aam
jns
in
and
pushf
mov
mov
scas
inc
sar
push
bound
mov
add
pop
lahf
(bad)
pop
pop
push
inc
dec
pusha
movs
adc
rol
push
cmp
int3
dec
daa
jecxz
je
add
xchg
add
adc
mov
ins
cmp
add
xchg
in
stc
mov
jg
adc
je
sbb
pop
inc
mov
mov
out
add
ficom
shl
or
into
repz
mov
mov
stos
aas
jle
(bad)
xor
sub
test
mov
jo
rcr
retf
(bad)
mov
mov
dec
pusha
cmp
not
sti
mov
scas
aas
inc
std
das
outs
or
test
xor
ror
adc
push
js
mov
hlt
fmul
rcl
repnz
sbb
das
jmp
ins
adc
test
pushf
retf
lods
jnp
jnp
sar
fs
popa
sub
mov
in
cmp
test
inc
cwde
int
adc
clc
pop
push
gs
inc
sar
dec
xor
dec
loop
cmps
jne
imul
jmp
sbb
std
sbb
mov
imul
jmp
cmp
popa
sub
in
loop
lods
les
fiadd
cmps
fcom
mov
or
(bad)
shr
pop
fidivr
call
xor
jno
push
xchg
call
int3
sbb
sar
mov
cwde
movs
mov
or
retfw
add
push
inc
outs
xchg
(bad)
js
sub
aas
call
or
mov
lods
xchg
(bad)
sar
rcr
mov
push
mov
inc
arpl
cmc
call
syscall
fdivr
(bad)
dec
sbb
sbb
pop
call
out
fldl2t
inc
mov
cmp
loop
push
cmps
mov
cmps
push
fsub
xchg
inc
sub
movs
mov
(bad)
call
pusha
cmc
adc
xor
icebp
pop
add
fisttp
and
mov
data16
ss
imul
xor
cmp
and
iret
cmp
movs
mov
std
lahf
out
xchg
icebp
fidivr
mov
inc
leave
cmps
fidivr
inc
dec
inc
pop
pusha
loop
and
jo
add
inc
lock
push
iret
sub
mov
ins
imul
outs
cdq
jmp
dec
fisttp
jecxz
push
mov
push
mov
call
pop
mov
or
cmps
xchg
add
mov
movs
in
and
dec
push
adc
mov
mov
stos
jae
call
fisub
mov
mov
jl
aaa
outs
adc
retf
inc
lds
stc
jbe
sbb
add
ss
and
jl
cmp
push
xchg
lock
outs
ja
xchg
out
add
shl
sti
std
xor
es
cmp
nop
dec
out
mov
stos
jp
loopne
add
mov
mov
fstp
sub
pop
(bad)
fst
xchg
jmp
adc
int
outs
sbb
or
fst
xlat
xor
cmp
(bad)
mov
dec
fisttp
jns
test
adc
sar
or
cmc
mov
cwde
pmulhuw
out
lock
xor
add
fwait
cmc
mov
xchg
scas
jle
or
cmp
add
leave
or
into
das
aad
cld
sub
jbe
add
push
mov
add
ins
jno
retf
push
or
and
mov
pop
scas
xchg
jmp
cli
sub
sub
add
sub
or
jle
sqrtps
(bad)
sub
push
stc
xor
pop
repnz
fnsave
pop
mov
pop
inc
icebp
adc
mov
lds
jmp
adc
mov
mov
(bad)
bound
jne
jb
mov
sbb
sahf
shl
or
(bad)
inc
xchg
jb
xchg
fwait
sub
inc
and
es
mov
inc
pop
sub
pop
pop
xchg
cmps
fwait
or
add
xor
xchg
add
loope
mov
pop
ret
and
xchg
sti
repz
adc
(bad)
stos
test
cld
ror
dec
test
retf
add
mov
sub
cmps
test
or
in
test
ss
popf
xchg
xlat
xchg
or
das
iret
add
sbb
add
xchg
cmps
mov
adc
mov
pop
lahf
sub
(bad)
push
mov
and
test
inc
lods
cmps
jns
loopne
ss
ins
mov
scas
mov
repnz
movs
fcom
pop
adc
pop
pop
add
and
ret
(bad)
push
in
ret
cs
aaa
mov
test
es
push
test
xor
test
call
dec
mov
sbb
loopne
jmp
pop
bound
cmp
xchg
shr
enter
into
fiadd
sbb
(bad)
arpl
(bad)
loope
aad
push
and
xor
push
aam
cmp
mov
xchg
dec
(bad)
mov
les
mov
inc
pop
fld
inc
dec
and
add
mov
fs
adc
lea
and
cmp
push
fld
mov
inc
push
jmp
ret
mov
stos
mov
call
inc
xchg
mov
pop
js
adc
mov
push
or
sbb
sti
mov
add
outs
sub
pop
push
iret
xor
inc
cld
push
jo
ud2
mov
cld
fs
je
(bad)
fld
dec
inc
dec
and
and
xchg
cmp
and
xchg
pusha
out
fidiv
sbb
into
push
and
pop
and
ror
ret
int
outs
mov
sub
and
rcr
sub
stos
fadd
sub
dec
rcr
or
xchg
inc
sti
pop
cmp
sar
mov
inc
arpl
xor
cwde
test
push
push
loop
aas
lds
and
mov
mov
xor
sub
push
pop
mov
(bad)
sbb
push
add
pop
rcl
xchg
add
inc
mov
inc
dec
jno
lahf
mov
inc
fwait
rcr
or
adc
int3
rol
jmp
pop
mov
faddp
jmp
icebp
lds
xchg
mov
shr
sahf
mov
fsubr
push
push
add
adc
and
jl
(bad)
test
cmp
lock
sub
xchg
popa
dec
cmp
les
xchg
aad
std
data16
push
test
shr
leave
sbb
xchg
div
xor
mov
add
pop
jecxz
or
fwait
retf
push
dec
pop
mov
in
std
lahf
xchg
mov
mov
jge
cmp
mov
pop
in
jo
add
mov
ss
add
push
aas
dec
test
cmc
mov
inc
cmp
shl
jmp
mov
fimul
mov
xlat
js
push
jecxz
mov
jb
push
push
(bad)
mov
jge
mov
fisttp
jns
stos
daa
xor
div
test
lods
jge
mov
ret
sbb
adc
sbb
pop
xor
mov
clc
mov
mov
xchg
(bad)
jns
push
pop
xchg
test
inc
pop
fcomp
test
and
nop
xor
mov
(bad)
mov
nop
mov
sar
mov
loope
jecxz
xor
cmp
push
add
je
cmc
push
cmc
repnz
add
dec
ss
pop
xor
xor
push
jns
adc
std
add
retf
pop
xlat
mov
pop
dec
popf
jbe
loop
inc
push
push
into
xor
inc
popf
(bad)
out
lahf
cmp
(bad)
jne
test
adc
sub
daa
adc
sub
aad
(bad)
(bad)
mov
in
sub
std
es
push
retf
cmp
shl
mov
and
cmps
xchg
jge
adc
sub
sub
dec
mov
jmp
mov
je
imul
sub
pusha
cmp
icebp
cmp
and
inc
(bad)
cmps
cmc
jmp
inc
pop
cwde
sbb
enter
and
mov
jg
test
sbb
xchg
mov
(bad)
mov
adc
jb
cld
push
cld
call
je
push
das
das
mov
pop
rcr
push
(bad)
(bad)
inc
push
jmp
(bad)
cwde
js
out
ja
cmc
int
movs
cmps
dec
jnp
pop
jae
fcmovu
xor
and
pop
call
js
pusha
stos
pop
and
or
inc
xchg
lods
mov
arpl
pop
xor
lock
pop
mov
ins
xchg
mov
pop
jmp
mov
ins
jo
mov
stc
dec
lods
mov
stc
and
add
arpl
lea
and
(bad)
mov
fstp
push
and
ss
push
inc
sbb
in
adc
fs
hlt
xchg
push
jmp
cmp
loop
dec
and
mov
or
or
xor
mov
mov
mov
and
xchg
fbstp
xchg
adc
xor
retf
fsubr
ins
pop
hlt
jmp
movs
pop
push
(bad)
or
rcr
repnz
lock
aam
xchg
imul
loope
inc
repz
sub
mov
leave
outs
dec
mov
js
xchg
aas
adc
stos
mov
test
add
sti
aas
mov
(bad)
xchg
rcl
jns
dec
int
inc
cwde
hlt
jb
add
jl
or
sbb
pushf
pop
mov
xchg
mov
enter
les
xor
out
xchg
inc
bound
in
cmp
enter
sbb
nop
push
fsub
movs
test
pop
xor
es
clc
lea
push
mov
push
pop
das
mov
xor
cli
inc
inc
mov
cmp
jl
ret
sub
or
or
pop
int3
fsub
fdivr
call
dec
ja
in
ja
outs
outs
icebp
lods
ret
dec
cmp
pop
cmp
xor
push
push
fbld
adc
out
icebp
adc
jp
inc
rcr
sub
loope
adc
mov
faddp
rcr
sbb
addr16
sbb
push
imul
movs
ret
dec
fsubr
stos
dec
mov
add
push
push
stc
adc
push
in
fs
mov
(bad)
xor
je
or
dec
cdq
cmc
xor
loopne
xchg
outs
mov
mov
and
xchg
test
pop
inc
cdq
das
stos
sbb
adc
fsubr
adc
and
mov
(bad)
test
or
pop
shr
scas
cmps
ret
push
pop
sub
xchg
sbb
adc
dec
add
sar
loopne
jecxz
ins
pop
cmps
mov
popa
push
xor
sub
dec
(bad)
mov
inc
pop
in
add
sub
add
test
in
aad
je
adc
out
and
test
stos
aaa
dec
cmp
sub
xor
dec
jno
fcmovnbe
scas
push
stos
dec
in
xor
xor
xor
adc
(bad)
sbb
fistp
cld
popa
sub
ds
ror
pusha
arpl
pop
or
test
cmp
push
fldln2
push
imul
xchg
aad
jle
fst
fisub
and
sub
pop
and
inc
iret
mov
or
inc
fisub
fcomp
pop
retf
imul
and
(bad)
mov
jmp
xor
inc
fwait
xchg
call
add
jge
ds
dec
inc
sbb
xlat
and
push
push
je
xor
outs
add
cmp
jp
push
rcl
jmp
call
leave
cmps
out
inc
jmp
mov
imul
gs
shl
mov
add
xor
jae
mov
test
mov
outs
mov
repnz
inc
mov
popa
je
or
ss
xor
mov
xor
pop
add
dec
fs
and
pop
js
jo
sub
out
xor
sbb
inc
xchg
add
sbb
and
sbb
and
push
movs
loopne
addr16
xchg
inc
pop
out
stos
ins
sbb
in
ficomp
enter
sbb
pushf
xor
and
mov
mul
push
sub
scas
int
loope
push
les
icebp
cwde
adc
movs
cmps
push
(bad)
stos
or
jle
les
loopne
dec
sahf
mov
jb
inc
add
call
dec
test
daa
dec
jge
(bad)
fimul
pop
mov
pusha
push
sub
xchg
adc
(bad)
sahf
xor
es
outs
in
pop
xchg
pusha
retf
push
fcomp
xor
call
imul
pop
nop
push
sbb
mov
or
add
out
hlt
cmc
jae
jne
xchg
aad
inc
aas
mov
pushf
xor
add
sbb
sub
mov
inc
xlat
in
xor
xor
sahf
mov
shl
mov
jl
push
inc
ins
inc
sub
cmps
outs
push
les
pop
shl
sub
and
nop
sub
cmp
xchg
ret
jns
in
pop
movs
test
not
fidiv
fiadd
sahf
loope
dec
or
sub
stos
and
adc
sar
cld
push
jp
push
pop
jae
jo
add
loopne
ss
xchg
scas
mov
adc
xchg
movs
sub
push
pop
(bad)
jb
push
mov
sbb
outs
sub
or
fst
pop
adc
es
cdq
test
pusha
stc
mov
push
xor
lods
test
mov
stos
pop
mov
(bad)
sbb
lea
aas
icebp
leave
retf
xor
push
fisubr
xor
movs
mov
ret
ds
xchg
mov
cwde
(bad)
adc
mul
mov
adc
out
cmp
ret
mov
movs
add
shr
mov
ja
fisttp
cmp
scas
outs
loopne
adc
jae
sbb
lahf
aaa
inc
neg
jns
xchg
cmp
inc
fs
sbb
pushf
daa
ins
arpl
scas
jp
test
dec
(bad)
stc
scas
sbb
sub
push
push
cs
jnp
pop
in
jg
push
fstp
aaa
data16
push
mov
cli
and
scas
xor
or
enter
call
(bad)
dec
scas
add
test
rcr
and
push
rcr
test
arpl
dec
adc
int3
mov
xor
xchg
rep
mov
fsincos
lods
mov
pop
in
and
int
push
loope
mov
dec
and
pushf
out
mov
sbb
or
jecxz
fimul
pop
cmp
test
push
scas
rcl
sbb
inc
mov
outs
pop
xchg
(bad)
ds
cmc
(bad)
retf
not
mov
frstor
les
or
scas
jg
addr16
jecxz
push
or
xor
retf
retf
sub
enter
out
not
or
mov
out
jbe
dec
mov
inc
mov
inc
call
pop
inc
aad
in
cld
daa
jno
mov
stos
cmp
shr
inc
or
pop
mov
sub
mov
stos
push
(bad)
pcmpgtd
loopne
lea
mov
push
dec
mov
xor
lock
icebp
push
push
in
push
push
test
(bad)
mov
xchg
jno
sub
sub
pop
push
fistp
shl
or
sbb
lods
push
cld
xor
fisttp
pop
cmp
sub
xor
add
jne
cmc
xchg
iret
jmp
jmp
js
fst
xchg
mov
and
xor
retf
fstp
sub
dec
rcr
pop
shl
mov
outs
in
lahf
repz
push
and
xchg
jp
stos
gs
inc
inc
std
jmp
sti
mov
je
jno
dec
sbb
pop
sbb
mov
jmp
div
les
mov
outs
test
or
mov
cmps
fcomip
fist
outs
push
adc
gs
xchg
xlat
push
mov
lahf
loope
add
repz
and
loopne
and
add
mov
xchg
aas
cdq
jp
imul
outs
in
inc
pushf
adc
sub
fsubr
cmps
addr16
or
lods
test
ja
mov
enter
ins
enter
das
std
rol
xchg
fstp
arpl
outs
iret
ja
mov
or
ins
inc
adc
inc
mov
stc
sub
mov
sub
cs
mov
in
mov
jle
sbb
xchg
popf
adc
retf
xchg
cmp
pop
loopne
or
mov
adc
cmovle
fsubr
(bad)
in
mov
iret
fwait
mov
cdq
sbb
pusha
mov
cwde
in
jmp
outs
or
cld
fidivr
in
xchg
pop
test
aas
adc
sbb
dec
push
(bad)
pop
add
retf
pop
push
pop
into
fsubr
jns
dec
in
push
or
in
icebp
movs
lods
ror
adc
into
cmp
dec
jl
lds
inc
dec
cdq
cs
jne
adc
lods
in
cmp
add
lock
jae
inc
repnz
push
fistp
cmps
les
mov
jecxz
push
add
sub
inc
jnp
mov
(bad)
movs
or
xor
fsubr
cmp
cwde
idiv
(bad)
pop
dec
(bad)
mov
daa
mov
pop
xchg
movs
jmp
(bad)
ds
mov
dec
out
cmp
jmp
add
pushf
add
xchg
das
mov
mov
pop
adc
and
sub
out
mov
add
sahf
(bad)
push
xchg
lea
push
fadd
cmp
retf
adc
and
add
fiadd
fist
mov
(bad)
and
repnz
push
cwde
pushf
arpl
mov
movs
ja
mov
xor
mov
movs
cli
aad
mov
xor
not
shl
and
test
sahf
jb
mov
push
pop
adc
add
ficomp
call
push
sub
adc
or
dec
lahf
test
mov
push
xlat
mov
pop
fwait
aad
push
xchg
cmp
mov
push
dec
je
stos
inc
aad
sub
fld
gs
repnz
or
add
sub
(bad)
mov
ret
mov
es
cmp
inc
push
aas
in
cwde
xor
lods
inc
cmp
lock
out
jnp
clc
icebp
mov
mov
jge
leave
push
inc
lock
lods
(bad)
jle
inc
das
jecxz
mov
xchg
add
mov
or
sbb
inc
cmp
or
xor
pushf
inc
add
sub
(bad)
or
sub
sub
push
sti
pop
jmp
cmp
xchg
fnstcw
push
sbb
jmp
mov
xor
stc
xchg
out
scas
mov
push
retf
push
movs
fbld
dec
or
jge
lods
or
imul
push
test
inc
sbb
sub
dec
mov
idiv
adc
mov
mov
add
das
xchg
cmp
in
jno
inc
ret
mov
(bad)
sbb
xchg
pop
arpl
jo
call
(bad)
mov
int
outs
adc
clc
daa
push
loop
repz
xchg
mov
shr
das
imul
sbb
cmp
mov
and
and
shr
adc
pop
icebp
add
(bad)
mov
cmp
repz
pop
xchg
jnp
shl
leave
mov
adc
iret
mov
sbb
jae
or
test
fmulp
ins
fwait
mov
cmp
push
add
call
(bad)
mov
adc
add
cdq
add
inc
xchg
call
mov
ds
scas
iret
cdq
test
jns
out
sub
adc
sbb
leave
scas
sbb
mov
pop
ficomp
add
pusha
xchg
ins
pop
in
jb
add
mov
inc
pop
outs
lds
sub
jns
dec
addr16
mov
ret
test
jecxz
sahf
je
dec
mov
inc
dec
adc
rol
mov
lahf
push
pusha
in
inc
call
(bad)
popa
sub
test
mov
ins
test
stc
jbe
cmp
scas
jg
outs
sbb
inc
xor
xchg
adc
nop
popf
sahf
or
jge
int
sbb
sub
stc
pushf
cli
xchg
and
ror
adc
xchg
pop
xor
ins
cmp
pop
movs
nop
cmp
add
repnz
enter
clc
clc
mov
ror
out
dec
into
das
add
jnp
dec
ss
mov
pop
outs
(bad)
das
cmps
loope
in
mov
pop
imul
cwde
xlat
aam
adc
xor
ins
jae
rep
outs
iret
fwait
cmps
daa
(bad)
jo
les
fsub
pop
outs
ins
jmp
jbe
xor
mov
ret
inc
push
cmp
push
jecxz
(bad)
js
inc
repz
or
push
and
push
cmp
aaa
or
stos
in
or
loopne
int3
inc
sbb
lds
cmp
stc
xchg
and
cmps
and
ficom
mov
mov
sahf
ret
mov
sbb
call
cmp
or
test
xor
sub
neg
repz
arpl
mov
push
push
adc
xor
cmp
inc
xchg
jne
mov
xchg
cmps
adc
rcr
xor
push
xchg
jnp
dec
dec
or
inc
stos
cmp
inc
pop
mov
popa
xor
mov
mov
cmp
mov
add
lea
loope
cdq
out
sub
adc
das
popa
ret
popa
loope
int
xor
adc
(bad)
dec
mov
mov
inc
sbb
mov
cmp
or
jg
dec
cld
and
mov
and
cmps
cmp
xchg
adc
imul
add
pop
sbb
jmp
loope
push
push
adc
add
pusha
pushf
lods
test
dec
mov
pop
mov
ud0
sub
xchg
int
sub
(bad)
fptan
jns
cmp
jg
adc
inc
in
shl
mov
pop
mov
cmp
loope
addr16
loope
dec
add
mov
mov
jg
add
test
call
bound
das
inc
iret
mov
fcomp
cmp
jmp
cmp
icebp
dec
mov
mov
adc
dec
cmp
out
js
and
arpl
js
and
clc
ret
lea
adc
mov
sbb
sub
pushf
test
jnp
in
mov
xchg
das
repz
jecxz
push
cmp
out
cmps
scas
push
mov
sub
push
mov
mov
pusha
xlat
xor
dec
fistp
dec
loopne
sahf
push
pop
scas
sub
arpl
ret
in
xchg
js
or
push
jle
ds
or
push
jbe
cwde
rol
scas
cmp
shr
lock
sbb
adc
loope
jbe
test
or
cmp
dec
mov
jmp
inc
fcmovnu
cmps
aas
ret
es
dec
inc
int3
das
jne
sub
dec
sub
mov
cmp
cmp
jl
loop
test
mov
movs
fxtract
xor
outs
pop
and
ss
cmc
cwde
adc
push
mov
mov
outs
sub
push
mov
sbb
cmp
mov
test
in
fs
dec
test
sbb
loope
sub
mov
sub
cmps
loope
jo
xor
and
cmps
and
movs
jecxz
outs
repnz
sub
adc
test
cmps
lds
es
out
sub
pop
lods
fsubp
mov
add
lock
xchg
xchg
cs
ja
push
ins
jg
mov
and
fadd
push
or
into
mov
ret
hlt
sub
and
popa
iret
mov
cld
arpl
inc
test
xor
out
repnz
add
pop
xor
jno
fs
sub
int
sti
in
inc
sbb
mov
dec
pop
mov
xchg
fucomi
and
lahf
repnz
or
fwait
push
cmp
mov
xor
jg
jo
xchg
shl
les
(bad)
xor
clc
cld
sub
jae
fisub
cdq
pop
inc
(bad)
je
sub
dec
add
call
rcl
mov
or
scas
jp
jmp
popa
sbb
mov
out
mov
mov
sbb
jo
retf
int3
repz
mov
js
ret
out
imul
dec
div
mov
retf
mov
xlat
mov
call
lea
aaa
pop
test
add
bswap
test
push
cld
(bad)
jnp
add
cwde
add
add
pop
call
loope
mov
test
hlt
cmc
push
mov
scas
les
push
xchg
dec
out
push
(bad)
jae
test
xor
adc
mov
mov
imul
ins
cmc
mov
retf
lods
retf
pusha
jo
lds
add
(bad)
jmp
in
adc
xor
cdq
jl
mov
shl
dec
or
inc
sub
inc
inc
test
ja
mov
and
ja
xchg
jp
mov
xor
jae
hlt
loope
jmp
sub
and
mov
mov
and
push
push
push
jnp
ss
mov
in
call
shl
stos
enter
mov
stos
outs
jge
jle
es
not
repnz
sbb
test
and
dec
mov
lods
int
dec
mov
adc
adc
dec
xor
ret
sbb
jl
add
sub
movlps
in
pop
add
push
sub
or
rol
pop
cmp
mov
mov
mov
lock
push
sbb
popa
nop
sti
add
inc
xor
or
fninit
imul
or
movs
mov
or
sbb
inc
aad
xchg
gs
dec
arpl
or
sbb
leave
push
push
sbb
xchg
add
xchg
(bad)
cmp
(bad)
mov
in
sub
ds
dec
mov
push
lea
sar
test
in
sub
mov
adc
hlt
test
neg
repnz
and
(bad)
adc
fcmovbe
aas
mov
sahf
iret
call
test
mov
inc
in
mov
sub
nop
cmp
and
xor
out
pop
test
iret
sbb
mov
push
mov
stc
rcl
outs
sar
cmc
push
cmp
hlt
inc
(bad)
rol
pop
cli
stc
mov
push
xlat
xlat
sti
and
stc
lods
fisubr
mov
sub
stos
retf
int
jecxz
dec
ret
mov
sub
shl
sub
jl
adc
xor
cmp
psubusb
lahf
jb
mov
test
push
stos
pop
mov
loop
sar
xor
add
add
stc
out
mov
rol
adc
pop
movs
int
dec
mov
in
clc
(bad)
mov
dec
int
jecxz
mov
stc
adc
push
jl
lahf
cwde
mov
in
inc
or
sbb
mov
dec
ja
mov
sub
fiadd
imul
sbb
leave
cmp
push
xlat
jg
mov
mov
out
jne
inc
cmp
add
dec
daa
rol
scas
mov
inc
mov
mov
jp
clc
sbb
inc
xchg
and
scas
adc
mov
lods
and
rcl
ins
(bad)
int
pop
pop
inc
jmp
cmc
dec
fst
inc
stos
sbb
dec
std
inc
mov
ins
push
fstp
cmp
mov
mov
dec
pop
fld
cmpps
es
pop
movs
xor
addr16
aam
mov
xchg
sub
pop
aam
pop
(bad)
adc
add
dec
xor
retf
retf
mov
adc
aad
cld
or
repz
xor
mov
sub
jbe
mov
pop
out
(bad)
sbb
lock
out
sahf
adc
mov
(bad)
sbb
add
jne
xor
int3
add
in
inc
mov
sub
test
std
add
shr
cmp
lock
rol
shl
je
mov
lock
scas
out
out
cmp
adc
vfnmsub132ps
mov
sar
xchg
(bad)
shr
(bad)
jmp
jae
xchg
les
inc
xchg
xlat
enter
enter
and
inc
push
lods
(bad)
sbb
xor
loop
sbb
jb
adc
retf
daa
jb
or
test
mov
pop
add
and
sbb
daa
test
and
sar
add
fdivr
push
shr
mov
mov
cdq
imul
popa
popa
and
push
fadd
jge
lods
sbb
xchg
repnz
xchg
push
push
loop
jo
or
ds
dec
in
and
shl
stc
pop
and
pop
mov
add
pusha
rol
int
pop
test
cmp
xor
mov
stc
jg
mov
sbb
dec
pop
outs
cmp
xchg
(bad)
jns
(bad)
xor
push
scas
lods
(bad)
das
ja
cmp
and
dec
mov
lods
xlat
ja
or
nop
push
retf
scas
or
imul
add
mov
xchg
lods
mov
cmp
push
fs
jb
cmp
xchg
shl
fidivr
popa
xchg
xor
inc
stos
std
mov
call
mov
dec
call
jbe
repnz
xor
sbb
pusha
aam
sbb
scas
fnstenv
mov
out
cli
mov
loopne
in
in
and
shr
xchg
dec
repz
jmp
push
nop
cmp
sti
dec
add
xchg
inc
jnp
jno
sub
dec
jo
les
mov
and
aad
jp
jmp
xor
fs
loop
dec
add
fldcw
je
fs
pop
gs
mov
xor
inc
mov
and
es
or
xor
push
mov
adc
ins
sti
daa
add
xchg
aam
and
jmp
shr
in
sbb
cmp
clc
fisub
iret
or
dec
je
xlat
add
mov
ins
inc
aas
jne
push
add
fisttp
push
push
jmp
jne
and
sahf
retf
xor
dec
jmp
mov
popa
loop
xchg
sub
xor
or
les
pusha
push
test
mov
xlat
add
adc
dec
dec
icebp
nop
test
test
int3
in
(bad)
jg
mov
mov
fnstsw
mov
xor
fsubr
movs
jae
pop
inc
cmp
inc
pop
xor
push
cwde
dec
push
jae
pop
dec
loope
scas
pop
std
mov
push
mov
inc
iret
(bad)
xchg
mov
aad
add
leave
sub
sbb
ja
cmc
mov
dec
or
xchg
add
into
aaa
fnstsw
add
xchg
cmp
mov
xchg
mov
aaa
fs
cmp
inc
fidivr
fisttp
imul
add
push
sbb
mov
fisttp
les
enter
jno
add
cli
mov
repz
aad
adc
ss
or
and
and
push
push
hlt
pop
mov
fcmovnu
mov
scas
aam
jecxz
push
shl
jg
in
pusha
mov
test
xchg
xlat
outs
cmps
lods
push
ficomp
imul
sbb
clc
test
aam
mov
mov
fldenv
sub
push
push
out
cmp
sbb
cmps
adc
cmp
std
addr16
dec
xor
inc
out
mov
(bad)
push
data16
leave
pop
enter
js
sbb
xor
setae
data16
loop
inc
fnsave
out
sbb
mov
add
loop
lock
sbb
out
mov
lods
mov
out
jae
iret
out
out
inc
fmul
mov
rol
xchg
int
ins
test
ins
fdiv
(bad)
adc
inc
jne
jecxz
out
mov
adc
test
xchg
cmp
dec
push
cdq
rol
rcr
es
pushf
jp
lds
mul
mov
inc
mov
xchg
add
inc
mov
fidivr
inc
mov
jo
or
lea
lea
mov
mov
jnp
dec
dec
cmp
sub
xor
leave
inc
(bad)
das
add
lds
(bad)
sub
add
fdivr
jo
mov
xor
mov
cmp
xchg
add
cmp
sahf
div
or
fisubr
inc
test
std
mov
fmulp
xchg
shr
sbb
mov
ss
mov
dec
fiadd
mov
ds
mov
repz
(bad)
lds
pop
mov
and
jl
cmp
bound
ret
out
pop
(bad)
dec
cli
test
mov
mov
pop
mov
jg
aam
sti
dec
ror
add
(bad)
cmp
aad
into
xlat
mov
cmp
ins
mov
dec
stos
ror
fucomp
(bad)
rep
dec
je
rcr
test
out
call
jge
push
outs
or
test
rep
pop
xchg
pop
sbb
push
into
int3
inc
inc
out
ins
outs
xor
fdivrp
jecxz
int3
push
sbb
mov
adc
and
sahf
shl
xchg
cmps
das
aam
ficomp
arpl
in
call
fmul
inc
dec
pop
adc
dec
adc
sar
mov
mov
scas
mov
xchg
pop
xchg
or
jb
fidiv
push
inc
jns
cld
sub
call
idiv
jge
daa
or
xchg
mov
cmps
loope
ins
jbe
jl
pop
mov
fiadd
push
add
fwait
xor
aas
aam
fwait
push
shl
bound
lock
pop
mov
dec
test
dec
lds
shr
adc
test
call
mov
sahf
xor
retf
sub
adc
cli
add
mov
inc
adc
cmp
xlat
adc
pushf
dec
je
sub
fdiv
pop
ficom
cmps
mov
mov
ins
das
sbb
inc
push
inc
push
mov
call
ror
cmovb
mov
jo
repz
cs
into
sbb
loopne
dec
cmp
mov
mov
cli
loope
out
push
clc
jecxz
inc
mov
popa
lahf
or
jne
cli
call
retf
aad
icebp
repnz
outs
imul
ins
xor
pop
repnz
pop
sbb
cmp
not
cmp
add
mov
pop
inc
push
ins
jnp
or
sub
js
js
lahf
jnp
lods
and
push
sub
push
xchg
ror
fadd
popf
sub
mov
cmp
pop
cld
push
mov
push
mov
rcl
cmp
mov
cli
mov
pop
jne
shr
mov
popa
add
in
mov
push
mov
and
(bad)
cmps
outs
jns
(bad)
ss
adc
mov
out
add
jp
lock
mov
movs
sahf
sbb
cdq
dec
push
and
out
mov
sbb
iret
xchg
jmp
xor
or
or
and
inc
aam
pop
mov
inc
movs
dec
cwde
adc
lods
pop
xchg
jecxz
and
sahf
mov
ss
retf
add
rcl
and
retf
test
inc
dec
push
stc
(bad)
sti
es
add
jg
mov
fs
scas
ja
je
test
cwde
add
and
mov
adc
cli
nop
aas
scas
stc
lea
jo
add
das
sahf
adc
jno
xchg
test
push
jmp
sub
fldcw
int3
inc
sbb
adc
mov
aam
fdiv
data16
mov
push
cmp
xor
mov
cmp
xor
lock
out
pop
mov
(bad)
rcl
daa
popf
(bad)
(bad)
fcom
xchg
dec
mov
inc
fidivr
ror
dec
sar
or
in
sbb
jbe
pop
cmp
adc
adc
pop
(bad)
fld
gs
inc
ins
mov
push
push
push
or
das
cmps
ror
mov
in
sahf
add
and
ds
sbb
cdq
jne
push
push
add
pop
mov
jb
ficomp
ins
xor
add
hlt
mov
inc
push
and
jne
or
ins
fisub
icebp
into
test
in
mov
ja
and
adc
jl
or
xor
lods
test
shl
and
sar
cmp
inc
mov
sbb
mov
dec
add
pop
movs
xchg
dec
aad
sti
or
add
outs
ss
(bad)
jmp
and
push
outs
outs
inc
pop
hlt
cmp
push
xchg
stos
mov
mov
jg
dec
in
pushf
pop
adc
and
cmp
cmp
sub
pop
cmps
loop
adc
pop
ror
nop
lods
sti
cmp
jle
pop
icebp
or
mov
add
test
cli
inc
inc
inc
not
sbb
into
add
cmc
fadd
dec
pop
mov
repnz
jg
mul
hlt
outs
pop
lea
sub
push
mov
jae
lock
push
leave
dec
pop
sub
inc
pop
or
outs
scas
jbe
push
std
and
xchg
das
sbb
out
pusha
ins
movs
mulps
jnp
xor
addr16
or
mov
jb
jno
scas
pop
mov
sahf
mov
xchg
and
pusha
shl
(bad)
(bad)
repnz
push
mul
push
add
js
loopne
jge
xchg
push
cdq
jns
lock
int3
dec
xchg
hlt
movs
push
lahf
xor
fild
lea
push
push
push
aam
dec
push
lea
shl
push
pop
mov
fisub
ret
jp
mov
ret
pop
sub
cmp
das
mov
rcr
mov
retf
push
push
mov
test
add
push
stos
test
dec
xchg
popf
sub
pop
retf
add
hlt
test
ror
push
or
into
dec
loop
arpl
sub
movs
ins
jne
fstp
add
in
int3
sti
clc
ret
mov
cmp
push
stc
shl
retf
and
or
cmp
in
xor
or
xor
test
sub
push
jnp
inc
(bad)
enter
xchg
mov
out
sub
xchg
shl
cmp
cmp
adc
add
stos
jecxz
or
or
imul
(bad)
adc
push
aad
inc
xor
cld
aaa
mov
inc
adc
icebp
mov
xchg
push
jl
(bad)
jp
jns
cmp
lds
test
cmp
into
jnp
and
xor
jb
and
sahf
push
data16
add
cmp
mov
aam
xchg
jae
test
mov
inc
cmps
mov
xor
ins
(bad)
stc
mov
std
xor
pop
or
ror
jmp
mov
pop
outs
aam
or
xchg
jns
push
mov
mov
or
mov
popa
jae
push
popf
test
lock
mov
xchg
sar
and
in
adc
sbb
lahf
dec
sub
mov
xor
push
push
and
push
push
cdq
and
mov
push
jg
les
gs
and
cs
ds
dec
iret
jbe
xor
add
jecxz
jl
ins
inc
mov
test
push
mov
sar
test
mov
frstor
cmp
mov
in
pop
xchg
adc
mov
(bad)
int
sub
lds
out
lahf
in
xchg
mov
imul
lea
dec
mov
frstor
ficomp
sbb
(bad)
int
jae
mov
dec
into
clc
xchg
or
xchg
xor
jno
inc
add
sub
(bad)
aas
pusha
inc
add
push
int
and
inc
mov
mov
sti
cmc
pop
jnp
mov
(bad)
and
out
pop
sbb
fwait
cmp
sub
shl
(bad)
cli
mov
lds
jns
cs
pop
or
dec
sbb
bound
dec
nop
pop
(bad)
sub
or
lea
jo
sub
call
popf
inc
ins
pop
jae
test
and
addr16
sbb
mov
sbb
in
aas
push
bound
cwde
adc
loope
mov
iret
jp
add
int3
xor
mov
mov
scas
xor
arpl
or
frstor
lods
fs
ja
cmp
xchg
jp
sti
(bad)
dec
adc
mov
inc
xor
or
(bad)
xchg
xchg
adc
dec
mov
retf
push
outs
es
aas
mov
int3
and
xor
mov
jae
mov
mov
fs
or
inc
xor
clc
test
mov
test
in
dec
jl
mov
les
xchg
int3
imul
add
push
int3
mov
jecxz
stc
mov
mov
js
xchg
sbb
js
jl
dec
dec
and
dec
shl
ins
mov
aaa
out
lods
mov
ret
dec
sbb
call
cmps
lods
fisttp
jl
stos
daa
jmp
(bad)
aas
mov
js
mov
push
jae
jb
sub
sbb
cmp
outs
mov
pop
in
lea
in
push
in
ja
scas
push
pop
std
clc
mov
addr16
mov
test
and
jle
adc
(bad)
push
mov
call
mov
mov
imul
addr16
pop
pusha
mov
ins
(bad)
int3
repnz
inc
or
dec
js
repnz
dec
mov
sub
out
sbb
pop
test
inc
fiadd
retf
dec
jmp
loope
(bad)
in
sub
push
test
or
sahf
mov
imul
inc
movs
or
push
lahf
(bad)
mov
add
add
enter
push
inc
mov
push
sar
cmp
ins
pusha
(bad)
les
aam
cmp
mov
pop
and
jmp
sahf
xlat
cmp
sub
and
mov
retf
adc
iret
mov
fstp
mov
pop
sbb
pop
lea
push
dec
xchg
sbb
add
xor
xor
out
dec
pushf
lods
into
push
mov
daa
xchg
cmps
addr16
mov
lods
cmps
sbb
outs
fidiv
jb
xchg
scas
add
push
popa
test
scas
ss
add
jg
sbb
push
pop
leave
sbb
hlt
inc
lahf
mov
mov
dec
dec
sbb
imul
mov
cmp
inc
outs
xchg
jo
jb
pusha
scas
arpl
xchg
push
push
mov
pop
in
sti
jnp
add
push
cmps
xor
sub
ret
or
inc
inc
xor
test
nop
dec
mov
pop
out
push
sub
and
(bad)
and
jo
imul
imul
mov
dec
(bad)
and
mov
inc
add
mov
jp
xchg
ror
mov
push
adc
(bad)
popf
add
xchg
mov
jg
nop
mov
daa
rcl
test
ja
leave
mov
inc
push
and
push
outs
cwde
popa
push
sub
push
cmps
cmc
inc
lahf
push
ror
push
adc
dec
xchg
push
sbb
rcl
jb
xlat
mov
shr
lods
in
int
lods
loope
call
gs
xor
mov
jno
mov
push
inc
and
cmps
push
pop
mov
push
cmp
mov
sar
ficom
or
inc
mov
mov
xchg
sbb
sar
mov
sbb
out
in
cmp
sbb
movs
pop
clc
inc
enter
jo
adc
lds
sbb
imul
cmps
pushf
jb
out
xchg
enter
dec
push
(bad)
out
hlt
outs
(bad)
cmps
fld
lea
mov
fwait
ins
xor
jecxz
bndldx
fbld
pop
mov
pop
retf
sbb
add
inc
mov
test
inc
xchg
pop
aad
pop
iret
daa
cmp
out
add
lea
(bad)
push
outs
sub
test
mov
ins
dec
mov
or
aaa
int
arpl
cmp
mov
pusha
mov
xor
xor
sub
gs
lea
dec
(bad)
sbb
and
mov
js
add
outs
xor
or
in
sub
cmp
mov
mov
jecxz
out
add
inc
pop
data16
(bad)
xor
jo
xchg
into
adc
daa
mov
jno
cmp
hlt
jg
nop
xchg
loope
ss
mov
xor
sbb
mov
lods
(bad)
and
loope
inc
mov
mov
outs
cmp
push
mov
mov
pop
push
jp
dec
cmp
mov
sbb
mov
lock
xor
push
enter
cmp
cmc
and
xor
iret
inc
mul
in
dec
xor
imul
dec
or
in
imul
jl
rcr
jle
mov
fild
outs
ja
sub
xlat
mul
ds
jmp
out
test
dec
dec
out
xchg
xchg
push
cld
add
enter
frstor
mov
leave
and
pop
lods
das
in
or
add
dec
mov
jb
adc
jmp
xor
add
adc
cs
jb
ret
ret
and
jecxz
jb
loope
xchg
xor
icebp
sbb
mov
call
loopne
stos
or
xchg
js
stos
xchg
leave
out
(bad)
ja
fsubr
and
fcomp
pop
add
mov
dec
xchg
sub
dec
lahf
dec
inc
sub
xlat
test
scas
push
ss
mov
push
stos
sub
jbe
ret
sbb
in
(bad)
jns
add
push
scas
mov
adc
test
cmp
addr16
(bad)
inc
and
add
test
mov
push
imul
or
into
xor
bound
rol
dec
aam
cmp
add
sub
dec
push
cld
or
in
mov
(bad)
mov
loop
xor
scas
shr
jge
cmps
sub
jecxz
bound
in
popf
jp
dec
jnp
and
je
and
push
jmp
push
loop
sub
push
mov
jp
fs
mov
aaa
test
add
out
ret
in
lods
push
mov
leave
or
ficomp
(bad)
adc
test
sbb
addr16
xchg
mov
sbb
test
nop
test
push
xchg
ret
int
pop
leave
add
push
call
retf
test
ss
adc
pusha
out
pusha
or
jo
pop
cmp
xor
shl
leave
push
mov
imul
fild
(bad)
ds
or
(bad)
jg
aad
lock
push
and
inc
xchg
sbb
jecxz
cmp
jno
push
mov
out
xchg
dec
pop
or
popa
daa
cmp
xor
sbb
pavgw
in
test
sub
imul
fnstenv
sub
hlt
call
jmp
aas
xor
jo
repz
retf
or
cmps
push
pop
cli
add
xchg
imul
popf
ficom
stos
mov
es
mov
retf
dec
xchg
fadd
jne
sahf
ficomp
gs
and
xor
imul
and
(bad)
mov
xor
cli
push
hlt
and
fcom
in
push
jne
scas
(bad)
fcom
mov
pushf
xor
sub
cdq
cmp
(bad)
mov
cmps
sbb
cdq
cmp
out
ficom
xor
cmps
fidiv
add
add
jb
movs
(bad)
shl
or
push
adc
dec
or
or
in
(bad)
dec
mov
std
stos
int3
cmp
mov
pop
and
in
sub
and
pop
fldl2e
add
sbb
sbb
and
mov
jle
cmps
lods
hlt
add
in
sbb
lods
mov
pop
xchg
in
push
test
inc
pop
dec
pop
push
popf
bnd
es
rol
mov
in
test
call
loop
ja
lock
pop
jbe
mov
stos
mov
sub
push
xor
pop
cmps
ret
inc
mov
js
out
gs
es
xor
in
push
mov
lods
cmp
in
xor
neg
and
arpl
pop
cmp
lock
sub
mov
bound
pop
sub
repnz
xchg
mov
add
sbb
aaa
xlat
rol
add
cmp
push
enter
mov
add
sbb
imul
sub
inc
(bad)
enter
dec
ja
mov
je
loope
sbb
ret
inc
cmp
aam
add
push
jmp
into
lods
inc
pop
outs
outs
retf
push
pop
pop
and
das
pushf
push
arpl
into
pop
xchg
shl
out
aad
stos
cmps
jl
ss
aaa
scas
fidiv
adc
sbb
fsub
sbb
cmp
xor
stos
jnp
lods
cmp
test
sub
push
fwait
ja
push
fnstenv
(bad)
mov
jmp
sub
adc
push
ficom
call
pop
call
getsec
xchg
push
jb
(bad)
popf
or
xlat
xor
cwde
out
pop
and
jecxz
loop
xchg
lds
jmp
fnsave
pusha
fs
dec
repz
ins
cmps
ins
and
fwait
xchg
add
mov
cli
imul
cmps
pop
(bad)
mov
or
scas
push
int3
fnstenv
iret
loop
cmp
mov
xor
mov
dec
fbld
jae
or
aad
rol
push
mov
push
pop
imul
fimul
loopne
inc
add
test
mov
sub
or
adc
ret
sbb
inc
fldcw
(bad)
in
xor
push
pushf
jns
hlt
test
pop
rcl
repz
cmp
(bad)
mul
int3
push
fwait
xchg
(bad)
into
div
mov
push
cmp
pop
mov
dec
lods
or
out
loopne
pushf
cmps
xchg
inc
cli
push
adc
iret
adc
inc
or
jb
nop
pop
ja
ficomp
jle
adc
fadd
fldenv
movs
add
xor
pop
arpl
or
mov
dec
in
mov
lds
in
pop
call
cmp
mov
enter
fsub
adc
push
inc
stos
mov
fld
ins
push
add
addr16
push
ret
in
imul
lods
test
cmovs
cs
mov
std
cmc
mov
stos
lods
call
adc
jnp
adc
fdivr
addr16
jp
pop
adc
test
mov
pop
sbb
cli
inc
jns
cdq
loop
aas
retf
lock
ins
mov
xor
and
cmps
fsubr
dec
add
(bad)
ins
add
mov
inc
arpl
inc
retf
xor
jle
scas
dec
bound
imul
xor
jbe
lods
push
sbb
loop
mov
je
fild
rcr
test
fwait
jp
pop
adc
or
dec
out
xchg
and
push
xchg
test
xor
pusha
add
mov
in
pop
test
push
push
leave
xor
scas
adc
loopne
pop
cwde
add
clc
fs
(bad)
pop
and
imul
nop
lock
xor
jns
push
mov
daa
cdq
jae
push
inc
mov
cli
xchg
enter
fsubrp
adc
push
in
xchg
test
fsub
sub
cmp
out
dec
xchg
pop
pop
in
gs
add
sbb
pop
push
in
cli
sbb
xor
retf
push
xchg
shr
mov
pop
xchg
add
inc
ins
mov
popa
test
xor
jmp
int
jb
mov
retf
loopne
adc
rcl
fsubr
mov
push
cmp
(bad)
out
sahf
mov
inc
test
cmps
and
sbb
mov
xor
jb
xchg
scas
cld
stos
rcr
cmp
adc
or
movs
movs
push
mov
jno
mov
ror
pop
cmp
ss
idiv
xor
(bad)
out
pop
jb
out
and
ds
cld
xchg
sub
(bad)
cmp
adc
adc
sbb
dec
pop
std
pop
gs
cmove
mov
inc
cs
jo
pop
inc
xchg
sbb
arpl
pop
xchg
aaa
stc
cmp
add
dec
ret
cmp
mov
jmp
xchg
dec
xchg
sahf
retf
mov
popa
sub
retf
or
lods
js
lea
inc
ret
jno
retf
loopne
dec
adc
push
fnstenv
stos
shl
cmc
push
adc
or
jmp
ret
in
push
rcr
sbb
pop
xchg
test
and
in
test
sbb
pop
ret
rcr
sub
retf
dec
into
leave
pop
sub
repnz
das
test
in
and
scas
inc
pop
test
dec
dec
push
dec
cmovne
sbb
sbb
jmp
xchg
ins
jnp
scas
mov
xor
mov
nop
jmp
popa
lock
fs
repz
push
nop
jne
jae
sbb
ds
in
outs
mov
inc
pop
mov
jg
je
jns
repz
fistp
mov
lods
add
fsubr
adc
mov
je
pop
rcr
div
mov
lock
mov
(bad)
jg
cmp
jp
daa
icebp
adc
dec
lock
out
out
mov
adc
lea
test
scas
cli
xchg
adc
test
rcr
and
(bad)
(bad)
sub
shl
mov
ins
test
xchg
adc
dec
aas
sub
or
fucomp
mov
cld
lea
sub
adc
loope
push
pop
in
pop
movs
or
fstp
mov
mov
pop
bound
sub
sahf
push
fdiv
mov
dec
or
push
stos
shl
cdq
mov
in
enter
lods
out
pop
out
fbld
fstp
pop
mov
mov
push
jmp
das
jno
sbb
push
xor
pop
dec
lods
cmp
retf
jp
das
ins
dec
test
test
push
mov
fimul
dec
add
adc
out
mov
sbb
mov
cdq
mov
xchg
aad
adc
into
push
mov
shr
in
mov
push
mov
scas
push
sub
in
cld
outs
inc
xor
pop
(bad)
scas
mov
aas
dec
scas
jge
xchg
pop
movs
cwde
les
add
ins
dec
clc
dec
fisttp
lods
fist
sub
cld
pop
loopne
jl
inc
jp
jnp
sar
and
mov
aam
in
in
cmove
and
add
mov
jne
add
in
sub
nop
fcmovne
inc
cmp
xor
or
xchg
fstp
mov
movs
rcl
fisubr
cwde
mov
push
gs
inc
data16
xor
jmp
repnz
cli
and
dec
push
(bad)
cld
pusha
cdq
call
jne
sub
jae
icebp
mov
jecxz
retf
repz
pusha
cs
call
add
xchg
pop
jmp
adc
sbb
jg
mov
(bad)
enter
fwait
xchg
jbe
loop
mov
movs
jnp
push
xchg
mov
rcl
mov
sub
dec
pop
push
cmps
push
sbb
jne
rcr
inc
inc
outs
retf
jmp
and
jmp
arpl
adc
cmovg
dec
mov
mov
sub
cmp
movs
push
push
cwde
bound
push
cld
mov
add
nop
adc
sbb
cmp
sub
popf
xor
int3
dec
xor
adc
and
push
or
pop
jl
shl
xchg
mov
add
mov
retf
fisub
jp
push
les
in
daa
iret
pushf
jbe
jae
data16
je
adc
aaa
dec
add
ja
aaa
inc
push
sub
neg
inc
adc
mov
and
sbb
test
hlt
shl
(bad)
xor
addr16
xchg
jns
push
movd
xchg
push
xchg
test
jne
xlat
lods
call
pop
sub
sbb
shl
nop
mov
in
xor
sahf
mov
outs
or
mov
jno
test
js
cmp
shr
push
int3
jns
adc
sar
jnp
stos
inc
into
movs
mov
and
test
xchg
fsub
in
cmp
sbb
aam
push
lods
movs
mov
mov
cmp
sbb
lea
fnstsw
or
lods
call
pop
xchg
mul
(bad)
loop
or
sar
push
push
mov
or
mov
jno
jp
jle
push
add
cmp
lea
cmp
mov
inc
adc
or
rol
nop
sbb
fwait
jae
daa
dec
sub
mov
dec
iret
daa
aas
stos
mov
repnz
les
arpl
xchg
sub
cmps
jmp
and
shl
pushf
pop
in
dec
sar
cld
inc
stos
in
cdq
popa
cmp
sub
jg
sub
into
xlat
cmc
sub
mov
mov
and
repz
(bad)
inc
lods
push
movs
and
inc
out
cmps
and
jmp
in
in
ss
jns
sub
adc
fcom
popa
and
in
dec
xor
ds
cwde
mov
add
mov
mov
sub
inc
and
dec
push
push
jns
mov
sbb
out
push
inc
jle
addr16
les
inc
inc
mov
(bad)
retf
test
sub
add
retf
pushf
(bad)
adc
movs
pop
mov
cmp
stc
pusha
and
imul
xchg
adc
pop
sti
push
cli
jmp
jo
sub
or
addr16
adc
call
add
ret
push
daa
cmps
lods
retf
pop
or
inc
and
cmp
mov
or
mov
pop
and
mov
mov
jg
mov
mov
lea
inc
push
mov
in
sar
pop
pop
jmp
loope
repz
add
icebp
nop
int
cwde
(bad)
push
ficomp
push
nop
xchg
adc
push
push
sbb
add
adc
mov
popa
pop
pop
adc
mov
pop
int
or
pop
push
(bad)
xchg
popf
stc
(bad)
addr16
std
push
or
mov
ficomp
outs
pop
dec
mov
jg
or
cmp
pop
push
sbb
mov
imul
mov
loope
jecxz
mov
dec
enter
lock
aaa
cmp
in
add
adc
cmp
adc
cdq
xchg
pop
lahf
xlat
addr16
mov
(bad)
jmp
mov
mov
jle
mov
ret
jne
ror
jno
fisttp
adc
add
push
inc
pop
jb
xor
lock
sub
pop
push
xor
push
(bad)
rcr
pop
ins
sbb
imul
inc
mov
adc
jno
cmp
test
jmp
sbb
mov
cmp
int3
fcomp
lahf
or
or
cmps
pushf
inc
sbb
pop
push
ror
mov
jmp
mul
hlt
in
mov
jb
or
dec
dec
jmp
jle
cli
icebp
push
push
xor
and
outs
inc
aas
das
imul
cmps
ins
push
repnz
pop
push
push
add
inc
js
pop
into
hlt
mov
add
mov
ins
xor
pop
dec
inc
xor
adc
popa
outs
ja
jmp
inc
shl
xor
dec
jnp
xchg
sbb
nop
mov
into
loop
dec
xor
inc
mov
cmp
lahf
(bad)
loop
mov
lock
shl
addr16
jle
je
bound
in
mov
jmp
mov
dec
xchg
jns
pushf
pop
and
sbb
sub
ret
sub
pusha
lds
mov
in
mov
add
scas
fwait
mov
inc
pop
ror
pop
jecxz
rol
cwde
fsubr
pop
pop
inc
pop
fwait
mov
mov
sti
xchg
add
push
nop
f2xm1
cmp
xchg
pop
add
nop
cmp
dec
or
(bad)
xchg
fistp
jmp
mov
pop
adc
cmp
iret
repz
or
hlt
ror
and
neg
movs
cmp
adc
or
out
fsubrp
(bad)
ds
(bad)
jmp
inc
add
pushf
sbb
std
cmp
jo
push
fadd
sti
movs
ins
psrlw
outs
int3
ret
int
adc
mov
mov
int3
push
jno
jge
push
out
pusha
aas
test
in
mov
xor
xchg
inc
loop
imul
mov
adc
cmc
shl
xchg
jle
dec
or
dec
or
push
mov
scas
lods
inc
in
lahf
out
loop
cdq
mov
fmulp
bound
add
test
xchg
pusha
and
icebp
add
and
xchg
add
inc
call
and
cmps
retf
bound
inc
adc
jae
or
add
push
pop
jecxz
pop
sbb
jmp
push
or
cmp
xlat
lods
push
xchg
xor
sbb
into
or
(bad)
cld
bound
and
popa
push
push
into
hlt
(bad)
imul
aas
popf
sub
mov
repz
test
and
pusha
jmp
dec
pop
retf
jmp
push
or
add
and
shr
lods
adc
imul
and
fisub
jno
jl
push
xlat
push
and
sub
mov
imul
xchg
outs
pop
sub
xor
cs
call
idiv
arpl
xchg
js
dec
inc
pushf
loope
rcl
rcr
jb
pop
(bad)
mov
dec
dec
sub
xor
mov
jmp
popf
ins
adc
pop
mov
jbe
sbb
neg
dec
sbb
cmp
dec
fwait
out
and
pop
js
(bad)
adc
mov
rsqrtps
popa
pop
xor
dec
sub
xchg
jle
test
xchg
push
(bad)
sub
pop
push
call
xor
popa
lahf
popa
ins
inc
test
inc
(bad)
mov
int3
and
mov
push
inc
inc
repz
pop
jecxz
sub
inc
push
mov
repz
std
dec
das
fimul
push
sbb
ins
mov
pop
aam
retf
enter
xlat
leave
jo
addr16
pop
jmp
sbb
inc
lods
scas
push
(bad)
mov
rcl
retf
jge
fadd
stc
lock
repz
repz
pop
jo
nop
jbe
xor
sbb
push
test
fs
push
cmp
mov
xchg
inc
(bad)
or
sub
push
test
in
jecxz
xor
sbb
xchg
push
push
test
cmp
std
loop
dec
mov
push
out
loope
bound
mov
dec
cli
inc
mov
inc
(bad)
mov
push
shl
xchg
xchg
mov
adc
out
mov
retf
mov
(bad)
jmp
mov
dec
aaa
cmc
movs
sti
loop
inc
movs
mov
ins
mov
or
inc
mov
xor
jns
xlat
arpl
loope
mov
mov
fsubr
inc
xchg
push
ret
xor
xchg
nop
pop
aam
dec
lahf
cdq
sub
xchg
sub
mov
mov
in
je
fstp
push
cmp
(bad)
mov
fcomi
sbb
jmp
add
mov
dec
xchg
in
test
mov
rcr
ja
mov
mov
jbe
sti
and
jne
repz
hlt
fs
nop
add
inc
mov
push
and
idiv
pop
test
jmp
mov
lods
daa
jp
in
enter
cmp
xchg
mov
or
repz
(bad)
or
(bad)
loope
bound
xor
jle
pop
add
not
(bad)
or
pop
push
inc
or
or
mov
jp
push
movs
sti
pop
add
adc
outs
stos
mov
or
jle
push
adc
ret
mov
inc
xchg
mov
jne
ss
add
ret
call
xchg
pop
outs
mov
jl
and
and
out
(bad)
sub
(bad)
addr16
ror
xchg
(bad)
cdq
sbb
xchg
cmp
jne
rcl
mov
hlt
test
sub
dec
fwait
push
and
clc
ror
loope
fmul
inc
sbb
mov
mov
repz
jbe
sahf
push
xchg
jge
cld
inc
sub
loop
push
inc
scas
or
sbb
pusha
xor
shl
pop
mov
psubq
mov
scas
test
bound
aaa
arpl
xchg
repnz
in
push
jns
in
xchg
cld
js
mov
popa
mov
add
popf
or
push
neg
pop
xchg
test
xchg
xor
les
add
ror
push
out
and
popf
push
xchg
sub
mov
sub
popa
xlat
dec
push
int3
fadd
stc
or
std
clc
xor
mov
push
adc
xchg
jb
mov
xchg
ja
mov
pusha
mov
dec
cli
xor
and
xor
pop
xor
(bad)
pop
xchg
leave
cmp
call
popa
lahf
loop
rol
shl
mov
inc
stos
repnz
jb
push
push
call
js
cdq
retf
aas
sub
mov
repnz
jp
and
pusha
inc
xchg
xor
scas
jmp
xchg
in
mov
out
repz
mov
push
in
inc
sub
jp
sbb
and
cmps
mov
cmp
push
sbb
in
fcomi
and
jg
push
dec
fcmovnbe
push
test
inc
xchg
imul
mov
fild
rcl
in
cmp
and
fwait
leave
pop
imul
into
fwait
sar
sub
xchg
pushf
xlat
push
das
das
das
jno
mov
repnz
mov
xchg
loopne
jb
push
inc
(bad)
sbb
mov
nop
movs
push
ficom
cmp
iret
dec
std
lods
mov
adc
mov
in
pop
fs
out
ss
cmp
es
enter
dec
add
loopne
and
es
(bad)
and
(bad)
movs
bound
xor
jg
sar
xchg
test
rol
push
adc
mov
mov
loop
mov
xor
pop
scas
(bad)
push
mov
out
(bad)
xchg
jmp
imul
out
jne
push
addr16
jb
add
scas
add
mov
adc
inc
retf
xor
fld
dec
scas
jb
scas
xor
jecxz
movs
cmp
js
shl
outs
xor
hlt
cwde
ss
je
out
ja
scas
ret
sbb
imul
pop
shl
cmps
dec
shr
aas
aaa
or
rcr
jle
push
push
dec
adc
push
xchg
out
xor
sbb
not
std
sahf
test
pop
xor
ins
inc
ret
retf
xor
add
outs
pop
jmp
test
and
add
xchg
adc
pop
fistp
push
ds
out
lods
loopne
sub
popa
jo
mov
rcl
fstp
cs
cmp
cmp
jp
jl
(bad)
retf
jb
aas
rol
aaa
loop
jo
repz
jl
sub
cmp
lods
sub
mov
or
call
xchg
sub
clc
jecxz
add
mov
popa
outs
pop
stc
xchg
and
test
out
push
xchg
pop
xor
clc
outs
fisttp
or
jo
mul
in
sar
mov
jae
adc
and
arpl
xchg
adc
inc
cmps
out
and
ret
jne
mov
fisttp
pop
test
cmps
es
add
call
jbe
cdq
aas
nop
(bad)
dec
shl
aas
add
push
sbb
adc
nop
sbb
in
cmp
mov
mov
imul
cmp
xchg
xlat
imul
inc
es
dec
mov
and
mov
and
(bad)
out
es
push
cmc
shl
lahf
jmp
sub
(bad)
in
mov
xchg
shl
repnz
mov
out
into
rcr
das
lds
mov
ficomp
fidivr
sub
xor
dec
retf
xchg
lea
sbb
ja
imul
cmp
retf
dec
aam
mov
dec
lods
je
ins
into
xor
fldcw
cwde
pop
(bad)
push
fbld
lods
and
push
cs
dec
xchg
idiv
into
sub
stos
sub
call
or
les
cs
push
cmp
jg
xchg
push
stos
mov
cmp
daa
inc
cmps
stos
dec
iret
pop
xor
mov
(bad)
out
sub
xchg
(bad)
sar
adc
out
cwd
in
aad
(bad)
mov
addr16
scas
bound
or
cld
add
ins
cmp
aam
fld
hlt
xor
xchg
in
pop
sbb
daa
sbb
(bad)
mov
or
rcr
pop
neg
sbb
cmp
inc
jl
xlat
lds
adc
shl
inc
sub
aas
dec
idiv
dec
aad
inc
arpl
mov
or
push
cwde
cld
ja
xor
popf
(bad)
xor
and
xor
repz
into
add
mov
jl
adc
enter
test
sbb
out
iret
(bad)
sbb
dec
adc
and
iret
mov
js
ins
mov
cmp
push
(bad)
movs
in
outs
call
out
aad
int
retf
push
sahf
ins
mov
js
out
stos
pop
movs
xor
int
sahf
add
mov
and
mov
push
cmp
xchg
test
sbb
adc
and
fmulp
cmp
cdq
mov
or
test
lea
ror
movs
lahf
int3
mov
xor
xchg
pop
xor
pushf
jns
adc
push
mov
jmp
pusha
push
fnstenv
jns
addr16
xlat
jecxz
push
call
mov
sub
in
out
jl
and
mov
data16
sbb
daa
test
in
loope
mov
push
dec
adc
(bad)
mov
addr16
lds
jge
add
jmp
loope
sti
ret
into
dec
lea
aaa
movs
xor
xchg
sbb
sbb
mov
mov
lds
fimul
cmp
mov
out
mov
call
jno
mov
sbb
jnp
adc
js
div
ret
inc
out
mov
aas
jo
or
inc
arpl
cmp
pop
mov
mov
xor
jecxz
leave
ins
push
inc
jmp
out
adc
dec
js
add
cmps
addr16
je
test
sub
push
cmc
int
es
(bad)
into
fs
jle
les
xchg
jo
mov
fcmovne
cwde
push
ja
pop
xor
mov
mov
or
sub
adc
je
dec
fs
jne
ins
cmp
and
pusha
pushf
(bad)
(bad)
jmp
mov
pusha
sbb
hlt
xchg
cdq
xor
jecxz
cmp
inc
xor
sbb
xor
jno
or
push
imul
imul
mov
dec
push
repz
sbb
add
xchg
xchg
fwait
mov
rcl
dec
adc
pop
mov
icebp
dec
adc
jmp
repnz
movs
frstor
mov
lea
and
pushf
jbe
test
scas
fmul
sub
jmp
lahf
aam
in
xchg
mov
mov
jl
jnp
(bad)
stc
push
cli
xchg
stc
enter
outs
jl
jmp
mov
test
mov
arpl
add
dec
arpl
cmc
sbb
or
xor
aam
or
jmp
aas
xchg
xchg
jo
adc
pop
call
test
or
inc
dec
sbb
cmp
fadd
dec
adc
aam
jg
xchg
sar
rep
test
mov
jecxz
inc
(bad)
iret
mov
or
(bad)
dec
mov
aam
les
push
movs
adc
cmc
mov
xchg
js
or
cmp
add
cmp
mov
sbb
arpl
in
mov
cld
in
fist
jecxz
cwde
mov
cmp
fs
iret
mov
cdq
data16
xchg
loopne
mov
mov
mov
sub
inc
(bad)
div
or
stos
sub
int
push
imul
sahf
fstp
test
push
popf
pop
xchg
in
ror
dec
pop
jo
mov
fidiv
in
repz
inc
dec
mov
sbb
stc
dec
pop
mov
ss
mov
inc
jo
mov
jmp
outs
(bad)
pslld
addr16
and
pop
dec
movs
shl
dec
test
outs
ret
mov
call
mov
shl
mov
(bad)
call
and
addr16
jne
jmp
xor
pop
nop
jbe
mov
cld
mov
push
ja
ja
sub
xor
jae
rcl
mov
mov
shl
jo
cdq
leave
push
jmp
xor
inc
movs
jo
mov
mov
pop
jmp
imul
adc
cmp
addr16
or
mov
retf
xor
out
mov
call
daa
test
loopne
cmc
push
sar
or
ss
ins
adc
mov
fmul
shl
jae
dec
loop
movs
push
xchg
pusha
inc
(bad)
in
mov
dec
push
shl
into
fisub
arpl
adc
xchg
into
repnz
or
enter
daa
jno
cld
cwde
pusha
test
jo
mov
pop
mov
lods
and
sbb
enter
xor
imul
(bad)
rcr
adc
out
in
pushf
pusha
xchg
in
push
push
mov
pushf
outs
test
jmp
cdq
or
jmp
enter
in
push
shl
push
out
pusha
sub
jnp
push
adc
mov
fs
cmp
jne
enter
sbb
fisub
add
inc
xchg
mov
push
jmp
jno
dec
and
(bad)
and
jl
lock
(bad)
fld
fs
scas
or
cli
mov
das
rol
add
lea
fnsave
pop
add
sub
jne
pop
int
or
adc
cmp
test
movs
mov
xor
gs
sub
(bad)
jns
inc
adc
mul
sbb
add
adc
pop
mov
xchg
xor
jmp
mov
shr
fisub
and
test
mov
(bad)
xor
pop
sti
pop
(bad)
inc
adc
xchg
mov
clc
enter
loope
movs
out
mov
(bad)
inc
rol
sub
jno
stos
stos
(bad)
mov
lods
test
scas
cmp
push
inc
mov
nop
jns
sbb
pop
cmp
popa
jecxz
pop
mov
aas
div
push
lods
stos
jmp
cmp
or
mov
push
aas
test
mov
inc
inc
jmp
enter
hlt
mov
ret
dec
(bad)
sub
test
sub
jg
adc
fild
mov
push
imul
mov
push
ja
in
hlt
jg
dec
dec
sub
iret
inc
cmp
and
cmp
loope
pusha
enter
jle
cld
add
push
movs
fmul
int3
scas
in
cs
xchg
push
mov
jl
adc
mov
xchg
push
fyl2xp1
mov
mov
sbb
push
xchg
bound
idiv
adc
push
or
xor
loope
mov
mov
popf
fiadd
xor
repz
xchg
in
daa
mov
inc
xchg
jl
or
lds
lahf
cwde
idiv
jb
xchg
ret
push
stos
loope
aam
or
inc
scas
out
and
rol
lods
jl
retf
clc
stos
sti
xor
call
fldenv
sbb
cmc
cmc
ret
shr
mov
mov
fwait
lock
std
pop
pop
and
js
jne
inc
stos
mov
fnstsw
add
in
in
lods
cs
xor
inc
xor
int
mov
pop
call
shr
loope
pop
mov
pop
in
push
mov
leave
imul
inc
fwait
mov
imul
dec
dec
lock
cdq
mov
or
lea
xor
adc
in
sub
pop
(bad)
enter
loop
imul
inc
popf
mov
sbb
jno
dec
mov
stos
sub
mov
sub
int3
mov
cmp
mov
mov
(bad)
jp
push
ins
mov
scas
adc
in
fs
cmp
sub
and
jge
push
int
inc
sbb
jmp
jmp
xchg
movs
and
hlt
fistp
(bad)
repz
mov
cmp
mov
mov
sub
mov
mov
inc
out
sub
add
mov
fst
adc
push
push
pop
cmp
call
ret
repz
mov
dec
ja
add
sbb
ror
into
mov
dec
sub
inc
sbb
jl
lds
scas
mov
jge
repnz
adc
push
mov
sti
mov
in
imul
push
jl
xor
inc
nop
cmp
pop
pop
dec
xor
and
dec
std
xchg
ins
popa
frstor
mov
xchg
sbb
jae
scas
push
popa
push
clc
loopne
sahf
pop
jge
xor
aas
in
inc
and
les
shl
add
clc
and
fsubr
ret
or
add
stos
adc
out
cmp
adc
movs
mov
mov
aad
and
mov
adc
jnp
out
out
pop
adc
lea
stc
das
rcl
and
mov
cmp
xchg
and
fwait
inc
pop
loopne
test
pop
xchg
sahf
scas
mov
fadd
or
aam
mov
mov
(bad)
jmp
and
xor
inc
jg
pop
dec
jae
loop
adc
call
int
pop
out
or
ins
push
shrd
out
mov
icebp
loope
popf
jge
cmp
push
fwait
mov
push
dec
les
lods
(bad)
das
cmp
inc
and
repnz
data16
pop
mov
gs
lods
mov
inc
sub
ins
sbb
mov
repnz
cmps
add
jns
push
bound
lahf
jns
loop
sbb
and
(bad)
je
mov
loopne
cwde
fistp
jl
sub
test
aam
stos
sub
mov
mov
add
inc
mov
adc
or
orps
(bad)
loope
mov
lea
xchg
stos
in
popf
outs
pop
xchg
add
ins
mov
add
popf
(bad)
pusha
sbb
ret
adc
xor
mov
aad
cmps
fsubr
push
iret
test
xchg
adc
rcr
test
mov
mov
push
aam
mov
jecxz
jb
cmp
inc
ret
scas
inc
inc
in
in
mov
jb
add
lods
mov
xor
lock
fisub
mov
loopne
mov
addr16
pop
(bad)
aam
popf
stos
mov
not
clc
pop
jbe
lahf
stc
cmp
push
test
add
(bad)
hlt
mov
fs
xor
xchg
sbb
sub
push
jg
mov
add
mov
pop
cmp
push
out
das
mov
ret
out
adc
inc
ins
adc
push
push
rcl
(bad)
xchg
or
ds
loopne
in
dec
jl
cmp
xor
jle
sub
call
cmp
dec
int3
xchg
sub
cmp
shl
mov
push
mov
ret
cmp
jne
pop
xchg
test
mov
rol
sahf
ror
fwait
pushf
cdq
add
add
in
test
adc
frstor
mov
mov
pushf
mov
mov
mov
pop
dec
push
call
clc
addr16
xor
outs
rol
in
scas
repnz
daa
ret
in
sahf
mov
retfw
mov
inc
jmp
push
fld
and
xchg
adc
or
and
or
mov
mov
mov
cwde
mov
jae
xor
daa
cmp
lods
sub
xchg
call
ins
jns
pop
outs
sbb
jne
fidiv
push
call
mov
push
loope
lea
leave
je
mov
adc
arpl
inc
mov
(bad)
xor
in
cmps
pop
jg
rcr
ins
xor
stos
xchg
inc
add
jmp
loop
jb
and
or
jbe
out
jo
je
cmp
out
das
xor
test
jle
add
and
bound
stc
adc
ja
xor
xchg
fdivr
add
xor
push
lods
jo
div
inc
in
retf
hlt
mov
or
xor
retf
test
sub
or
les
out
add
mov
outs
xor
rcl
push
mov
dec
jmp
dec
inc
xchg
outs
adc
lock
mov
in
xchg
sub
jb
mov
mov
ds
mov
jno
(bad)
jmp
outs
cmp
pop
fnsave
(bad)
dec
sub
out
xchg
mov
aad
fs
adc
stc
into
lock
xchg
mov
in
gs
js
ret
iret
out
test
shl
js
aaa
call
inc
jle
imul
pushf
mov
out
(bad)
pop
not
add
mov
mov
xor
xor
fcom
mov
sar
pushf
rcr
mov
jno
ins
ret
cmps
in
xchg
idiv
jge
sbb
fadd
push
mov
and
add
cdq
cdq
test
mov
add
sub
push
(bad)
je
or
cwde
sti
int
in
dec
xor
ds
sti
fdiv
outs
xor
gs
mov
cs
imul
outs
cmc
or
rcr
fs
in
in
inc
push
cmps
lds
jge
out
mov
mov
js
dec
mov
sbb
aas
in
ret
jmp
out
arpl
and
mov
shl
std
cs
fst
inc
mov
jno
sub
dec
adc
sub
cmp
in
(bad)
fst
or
dec
call
push
lods
xchg
xchg
add
or
int3
movs
push
je
loope
clc
sub
sbb
xchg
mov
cwde
mov
mov
sbb
and
push
dec
int3
out
je
or
test
cmps
lods
pushf
push
mov
add
jmp
xchg
test
movs
push
push
(bad)
imul
and
popf
js
mov
clc
inc
rcl
sub
pop
daa
or
jecxz
and
div
out
out
cld
dec
mov
es
lock
sub
hlt
xor
cmp
jg
push
clc
mov
push
mov
rcr
cmp
xlat
jbe
sub
jmp
jp
popa
in
inc
enter
push
bound
stc
push
pusha
lods
mov
cmc
pop
add
ins
js
mov
mov
imul
(bad)
sti
clc
(bad)
mov
fcom
xchg
push
(bad)
int3
or
xlat
mov
in
mov
lock
mov
clc
cld
call
fst
fisubr
sub
es
(bad)
nop
sub
or
mov
dec
inc
retf
ss
mov
daa
jmp
cmp
loope
(bad)
pop
cmp
sbb
jno
fwait
outs
xor
lds
mov
mov
cs
xor
inc
lods
pop
stos
add
repnz
out
sti
outs
sub
mov
pop
push
sbb
xchg
push
test
xchg
loope
(bad)
mov
fidivr
mov
mov
aam
mov
pop
push
aaa
xchg
test
aad
or
push
push
movs
in
in
or
ret
inc
and
shr
jbe
adc
jl
psubd
cmc
scas
sub
dec
lds
mov
aad
leave
call
loope
add
fimul
and
inc
repz
icebp
inc
mov
fsubr
cmps
call
inc
rcr
push
out
loope
retf
sbb
jno
lea
mov
(bad)
and
mov
outs
aaa
xor
sub
push
lock
movs
mov
mov
leave
nop
inc
lock
and
je
xlat
sti
mov
dec
(bad)
and
fdivr
mov
gs
sahf
adc
sar
sahf
sbb
jle
jp
movs
call
and
add
dec
sbb
imul
sbb
cmp
mov
retf
xchg
push
fwait
jb
repz
je
popa
mul
jg
lods
adc
and
icebp
push
(bad)
movs
mov
xor
and
imul
xor
ss
sahf
sahf
loop
mov
mov
jecxz
fstp
das
jno
dec
cld
fs
xor
ret
jb
inc
je
(bad)
idiv
pop
ffree
pusha
scas
icebp
jns
mov
dec
addr16
cmp
pushf
ret
adc
mov
mov
xor
call
daa
sar
xchg
ins
pop
inc
les
mov
push
hlt
mov
jno
test
adc
pop
inc
ja
mov
mov
rol
adc
mov
mov
push
add
jg
movs
or
jno
push
xchg
push
inc
inc
movs
shr
clc
jle
dec
nop
mov
in
xchg
jnp
jmp
mov
jae
pusha
add
(bad)
enter
xchg
or
sub
call
dec
push
(bad)
aaa
jecxz
adc
sbb
repnz
add
jae
jp
jmp
rol
adc
sbb
std
cmp
(bad)
xor
xlat
cmp
inc
add
je
lods
push
pop
xor
mov
lahf
jmp
fmul
jns
test
adc
cwde
(bad)
retf
je
adc
sar
retf
jnp
ror
fcom
xchg
sub
mov
jl
out
and
loopne
mov
add
xor
jmp
jmp
inc
sub
dec
push
imul
sub
(bad)
jge
pop
mov
js
sbb
jg
aam
dec
pusha
xlat
rcr
sub
jb
add
scas
dec
push
push
loopne
and
mov
rol
stos
(bad)
push
movs
sbb
sub
xchg
adc
or
outs
test
mov
mov
cmp
mov
pop
push
sub
fcom
add
mov
mov
aas
push
pop
aam
lahf
pop
and
jne
jmp
lods
mov
(bad)
out
jle
data16
xor
ror
push
and
jae
jb
(bad)
in
shl
(bad)
mov
(bad)
imul
test
dec
mov
mov
fsub
dec
and
sbb
arpl
sub
pop
mov
push
cdq
adc
movs
mov
stc
xchg
mov
inc
pop
dec
dec
mov
and
repz
adc
cmp
lods
inc
mov
arpl
mov
jb
cdq
and
or
(bad)
gs
test
adc
in
fnsave
ins
sub
cmps
jo
rol
inc
js
inc
rcl
aam
pop
xor
repnz
sbb
inc
or
jmp
and
fiadd
outs
dec
sbb
add
test
ret
popa
shr
jae
(bad)
cmps
cmp
mov
movsx
add
inc
cmp
or
mov
es
aas
pop
xchg
enter
in
nop
and
mov
or
sbb
jge
jb
pusha
cmp
aad
mov
pop
out
inc
pop
xchg
or
or
push
pop
pop
jge
pop
inc
jb
ror
das
test
dec
retf
mov
mov
retf
cmp
into
into
jle
cmc
dec
jmp
add
adc
cmp
cmp
add
mov
lock
scas
and
jmp
mov
mul
cmps
or
mov
outs
psubusw
xchg
xor
jno
adc
cmp
cmps
fcmovb
mov
mov
mov
fild
add
jle
les
push
nop
push
daa
push
in
test
push
push
dec
pop
arpl
out
mov
pushf
loop
out
push
popa
jp
mov
(bad)
lock
leave
mov
sub
mov
into
stos
pushf
je
cmps
sub
dec
push
push
inc
aam
and
(bad)
xchg
lea
add
imul
push
dec
add
push
(bad)
retf
mov
jnp
push
push
inc
in
(bad)
pop
cmp
shl
lock
mov
lahf
daa
outs
ret
add
dec
sub
fst
mov
push
xchg
xchg
ror
ss
leave
mov
xchg
adc
mov
js
int3
popf
lods
(bad)
out
jne
mov
push
mov
mov
out
xor
jmp
inc
lods
ja
push
xchg
mov
push
mov
push
cmc
cmps
jecxz
mov
mov
cmp
mov
ja
imul
(bad)
push
dec
stos
pop
in
les
pop
daa
cwde
in
in
lahf
and
jb
xor
inc
nop
sbb
stos
mov
aas
mov
adc
jns
fsubr
dec
cwde
sub
loopne
sub
loope
or
mov
sub
adc
(bad)
pop
adc
xchg
push
xor
mov
ror
std
ret
scas
and
xchg
sbb
push
push
xor
ins
stc
sub
xor
(bad)
test
mov
xchg
and
cdq
rol
add
test
jae
shl
sahf
cmps
cmp
mov
arpl
(bad)
and
repnz
inc
gs
lock
dec
mov
dec
inc
movs
or
add
and
and
fwait
outs
sub
push
or
cmp
test
add
and
sbb
add
and
inc
mov
cmp
lods
scas
leave
fsub
mov
sub
nop
xlat
dec
retf
les
sbb
ja
pop
xchg
add
sub
aam
(bad)
lock
fisubr
jl
out
cli
inc
out
clc
js
das
jb
aaa
pushf
cmc
sub
sbb
popf
sti
aam
xor
sbb
dec
in
ror
rol
mov
outs
jne
mov
sar
xchg
jb
mov
mov
gs
pushf
fcmove
pop
stos
jb
inc
sbb
test
shr
mov
jmp
jno
xor
push
mov
movs
sub
adc
or
and
outs
pop
enter
popf
pop
shr
or
xor
pop
ror
push
mov
and
add
inc
mov
cmps
(bad)
fld
mov
pushf
and
out
or
sub
jbe
mov
movs
xchg
push
mov
adc
(bad)
jg
push
sub
daa
call
mov
and
dec
js
push
addr16
loop
push
cli
retf
cmc
test
mov
xchg
cwde
jbe
inc
sub
fwait
mov
mov
mov
jle
loopne
sahf
dec
int3
xor
mov
hlt
pop
mov
and
adc
pushf
repz
sub
push
popf
lahf
inc
shl
sbb
out
mov
(bad)
jg
push
test
cmp
mov
xchg
pop
(bad)
(bad)
fimul
push
test
mov
sub
xor
and
ja
in
ret
xchg
xchg
outs
data16
add
xchg
xor
or
mov
popa
jnp
sbb
cld
fiadd
fidiv
push
in
push
repnz
xchg
int
nop
cmp
xor
(bad)
push
inc
adc
vcvttpd2dq
(bad)
add
xchg
sbb
or
aaa
test
push
(bad)
pop
scas
inc
cmp
add
or
bound
cmc
imul
lea
ins
rol
sbb
add
ret
pop
out
js
aad
dec
scas
and
mov
sub
ss
ins
lahf
and
xor
add
push
push
xor
sub
and
sbb
fcom
add
nop
gs
mov
repz
outs
mov
adc
movs
gs
outs
lods
out
or
xor
or
stos
cmp
add
aam
es
mul
inc
addr16
inc
fdiv
mov
xor
sub
test
rcl
rol
adc
jb
shl
mov
jb
pop
jne
cmp
int3
jg
push
mov
rol
or
std
inc
ret
fld
out
sub
scas
inc
mov
jp
ins
das
sbb
cmp
dec
into
cmps
mov
ror
mov
jg
loopne
stos
jecxz
scas
cs
clc
cmps
jb
jle
fnstenv
(bad)
out
inc
inc
fcom
xlat
loop
sbb
xlat
(bad)
xor
pop
xlat
imul
inc
or
adc
xor
sub
push
xor
pop
int3
xor
icebp
sub
outs
add
pop
shl
ja
and
shl
inc
inc
push
and
fnsave
mov
pop
xlat
retf
ret
push
and
popf
mov
repz
mov
sbb
aad
mov
mov
pusha
xor
retf
imul
adc
lea
aaa
mov
inc
je
add
lods
test
push
mov
pusha
out
adc
gs
int
dec
cmp
je
xchg
dec
mov
sub
popf
dec
mov
outs
gs
sub
push
ds
jb
mov
jg
sti
out
fdiv
sbb
push
push
(bad)
mov
pushf
cmp
xor
mov
push
cmps
(bad)
test
jge
push
cs
lds
adc
ins
jp
sub
cmp
cmps
stos
xchg
sti
outs
mov
mov
mov
dec
aas
fs
stos
lahf
xchg
movs
int
fistp
sbb
(bad)
jg
mov
cwde
add
cmp
mov
mov
mov
mov
inc
push
das
and
xchg
cmp
outs
pop
jbe
fstp
mov
std
fisubr
out
pushf
xor
test
and
fdivr
jae
cmp
jmp
cmp
rcr
xchg
mov
jecxz
xchg
aam
pushf
jle
pop
lahf
jl
fsubr
adc
push
in
xor
xchg
pop
mov
dec
xchg
jmp
pop
or
movs
out
scas
dec
sub
hlt
mov
je
std
std
test
int
jns
sub
fwait
dec
in
pop
(bad)
mov
cmps
sbb
mov
popa
pop
adc
cdq
inc
mov
push
mov
push
stos
mov
lock
xchg
pop
cmp
out
add
les
jmp
push
xor
fldcw
cld
ins
jge
mov
mov
cmp
pop
aad
shl
loop
(bad)
arpl
hlt
scas
test
jo
enter
or
fsubr
xor
test
ins
es
cli
xchg
inc
scas
cmp
jmp
cdq
movs
lock
jno
and
pop
xchg
inc
mov
fdiv
pop
(bad)
mov
fst
mov
jbe
cmp
sub
in
push
xchg
xchg
int3
pop
cmp
inc
and
sbb
das
xchg
imul
stc
ret
xchg
dec
inc
ret
sbb
xchg
and
xchg
mov
xchg
mov
xchg
mov
push
daa
xchg
push
fldenv
cmp
push
fwait
in
cwde
ds
sub
mov
ss
or
mov
add
pop
pop
or
(bad)
mov
in
and
hlt
pushf
sub
inc
and
or
mov
adc
stc
mov
push
repnz
ret
push
cmp
mov
cwde
call
mov
(bad)
int3
pop
ffree
clc
jns
cmp
cmp
aad
imul
cwde
nop
cwde
in
imul
inc
outs
ret
mov
inc
sub
dec
adc
add
movs
cmp
inc
xlat
cmp
pop
lahf
xchg
mov
mov
(bad)
scas
push
(bad)
add
pop
jb
mov
mov
push
dec
cdq
imul
push
adc
loop
cmps
jnp
jno
stos
mov
out
test
sub
retf
sti
sbb
push
les
or
push
cwde
fist
arpl
loope
retf
and
test
pop
mov
and
outs
pusha
or
cdq
dec
xchg
or
ins
jno
and
or
push
sbb
push
jp
and
xchg
adc
imul
jmp
jmp
add
fmul
sub
popa
jecxz
jnp
jne
jmp
ja
scas
into
mov
mov
loopne
sbb
xchg
loop
push
inc
mov
pop
sti
div
cmp
fild
jne
out
sbb
jno
lea
cwde
or
iret
fstp
mov
sbb
sahf
stos
inc
push
add
sub
outs
mov
xchg
mov
(bad)
xlat
jo
lahf
scas
or
aas
rol
pop
je
push
pop
xor
jl
lds
mov
push
push
xor
jmp
arpl
xor
mov
arpl
jne
lahf
mov
fs
std
outs
push
iret
dec
xchg
cmp
fidivr
mov
iret
cmps
icebp
iret
xchg
(bad)
outs
xor
shr
jge
cdq
rcr
addr16
sub
jns
dec
ins
sub
add
sub
push
test
cmc
add
rol
mov
jmp
aad
dec
xor
test
or
xchg
push
imul
fld
sub
and
xchg
mov
pop
out
xor
retf
popa
les
and
mov
lods
inc
adc
sar
ret
adc
ficom
push
loope
mov
xlat
xchg
cmp
add
(bad)
adc
test
ja
mul
or
into
xor
inc
lods
or
jns
push
out
stos
test
pop
div
cmp
mov
mov
popa
pop
shl
das
fmul
in
test
(bad)
adc
dec
add
js
and
call
sbb
test
mul
pop
push
or
mov
add
mov
scas
mov
lea
and
cmp
xchg
inc
lea
sbb
pop
fdivr
arpl
xchg
loopne
adc
mov
adc
inc
fwait
add
in
stos
push
repnz
mov
ror
cmp
sbb
daa
xchg
aaa
retf
call
mov
push
xchg
cld
das
push
xor
data16
clc
inc
or
scas
je
daa
imul
or
sub
cmp
mov
cdq
cmp
dec
or
call
push
cmp
pop
dec
add
inc
lods
nop
icebp
mov
sbb
cdq
cmp
nop
pusha
repnz
xchg
xchg
adc
and
xchg
jae
pop
stc
ja
mov
retf
jle
push
movs
jne
in
mov
lods
aas
xchg
and
jbe
popa
sahf
inc
cli
sub
daa
pop
scas
xchg
push
and
add
mov
call
pop
sbb
stos
sbb
pop
xchg
or
cmc
push
cld
xchg
int
mov
imul
xchg
call
adc
call
cmps
mov
jge
std
test
scas
data16
adc
cmp
sahf
xor
and
ins
mov
imul
and
mov
rcl
adc
mov
cld
clc
adc
pop
dec
ss
push
or
mov
pop
aam
adc
sti
mov
sub
jmp
in
jo
(bad)
mov
test
mov
(bad)
pop
jg
scas
(bad)
fdiv
push
xor
mov
jecxz
ss
adc
inc
mov
adc
pop
cmc
clc
jecxz
jbe
dec
mov
imul
leave
xor
test
mov
cli
or
xchg
(bad)
mov
dec
test
rcr
mov
pop
adc
ret
sub
mov
jmp
int3
add
xor
dec
idiv
push
ror
cmc
mov
jmp
hlt
mov
or
icebp
cmp
ret
shl
mov
add
add
add
jge
mov
dec
mov
pop
push
jmp
sar
mov
ret
scas
xchg
or
rcl
popf
loope
mov
mov
xor
call
ins
pop
adc
pop
xchg
push
push
pop
mov
dec
jl
xchg
dec
enter
out
sahf
int3
adc
inc
imul
jnp
es
jmp
sbb
mov
pop
adc
sbb
cmp
rol
lock
inc
adc
in
test
add
imul
pop
cmp
ret
scas
pop
(bad)
sub
cli
arpl
sub
xor
test
inc
lods
add
inc
loopne
adc
(bad)
xor
dec
aad
jecxz
mov
add
xchg
dec
xchg
sbb
xor
xchg
enter
ss
mov
inc
(bad)
mov
sti
clc
les
lods
clc
cmp
movs
cmp
nop
enter
mov
mov
sub
push
jo
int
daa
fstp
inc
adc
pop
mov
imul
mov
dec
pop
je
into
sbb
out
xchg
sti
or
jno
jp
push
nop
(bad)
out
dec
jo
std
sti
daa
xchg
push
test
jcxz
sahf
fs
mov
adc
mov
jo
call
retf
adc
(bad)
mov
ret
sbb
inc
retf
ins
outs
cmc
stos
into
fstp
and
fisttp
fwait
or
push
mov
out
out
fs
pop
(bad)
fld
adc
(bad)
pop
cmp
lods
cmp
adc
push
call
mov
push
dec
out
lahf
adc
xor
xor
fst
xchg
das
cmp
push
dec
mov
in
icebp
(bad)
mov
sbb
pop
sbb
jecxz
lahf
jle
add
imul
mov
(bad)
sti
popa
mov
pusha
xor
pop
mov
fcomp
ins
pop
aad
mov
mov
mov
out
and
fs
enter
mov
xor
mov
inc
sbb
dec
sbb
jae
arpl
add
xor
out
mov
adc
(bad)
in
(bad)
fiadd
ret
stos
or
push
jecxz
retf
or
pusha
mov
xor
lods
aaa
xchg
jo
call
call
retf
push
pandn
fwait
inc
cs
or
dec
mov
retf
inc
mov
mov
int
sbb
push
sbb
or
push
xor
add
jbe
out
mov
sub
test
mov
push
adc
rcr
lods
add
(bad)
sbb
and
lods
dec
into
pop
mov
pop
sbb
inc
push
ret
push
mov
cwde
and
mov
scas
sub
addr16
inc
je
xchg
inc
in
sub
out
jmp
fimul
mov
(bad)
pop
rcr
push
scas
je
add
aad
repz
sbb
pop
jo
push
mov
jp
xor
cmc
sbb
sti
push
out
shl
cli
add
repz
scas
dec
stos
nop
ins
ins
sub
cwde
lods
jmp
adc
push
repnz
aaa
jae
dec
mov
loope
lds
rol
stos
jne
pop
mov
stc
mov
call
ficomp
(bad)
lock
(bad)
out
mov
aaa
sbb
xchg
or
sbb
jge
xchg
and
xchg
pushf
sbb
in
jnp
test
sbb
sti
mov
lea
adc
pusha
mov
adc
push
pop
mov
xor
ret
ja
mov
pop
xor
or
sbb
jno
dec
cmc
sbb
ds
lock
das
mov
mov
dec
and
and
fld
and
pop
xchg
and
clc
adc
fwait
or
in
jne
inc
push
jl
xchg
xor
pop
pop
sub
popa
call
dec
out
mov
jbe
pop
out
mov
xor
xor
(bad)
adc
sbb
mov
push
sti
popa
sbb
xor
lahf
or
inc
mov
push
inc
sub
fcomp
push
data16
push
sbb
sbb
pop
int3
movs
movs
aad
loop
xor
pop
inc
push
fs
icebp
jg
nop
jno
push
jae
aas
mov
xor
and
mov
push
push
pop
inc
xchg
push
shl
test
cmps
sar
in
and
pop
dec
sub
push
ins
aam
add
and
sub
pop
ss
jl
test
fild
and
jg
mov
xchg
inc
repz
mov
sar
mov
cmp
mov
das
leave
sub
fnstsw
mov
jecxz
js
aam
je
mov
dec
aaa
addr16
sbb
sti
loope
sub
mov
sbb
pop
int3
call
dec
in
xchg
sbb
xchg
mov
mov
inc
xor
cld
xor
add
fist
mul
int
cmps
cmp
test
push
cmp
std
daa
sahf
and
mov
enter
adc
pop
pop
cmp
cmp
popf
lea
icebp
out
in
les
inc
cs
and
jae
sub
xor
jle
inc
sbb
push
bound
xor
mov
mov
cwde
mov
and
sub
sti
dec
mov
test
push
adc
push
jo
sbb
inc
add
aas
in
outs
push
movs
gs
nop
push
inc
jl
fwait
jmp
mov
pop
js
out
loope
sub
push
xlat
hlt
movs
lea
pop
mov
xor
dec
sub
sbb
pop
out
sub
pop
xor
mov
xchg
xchg
icebp
mov
inc
mov
xchg
in
add
pusha
movs
call
shr
or
loope
mov
inc
lods
xor
pop
sub
div
loopne
loopne
test
les
and
movs
fwait
jecxz
cmp
aaa
fs
sub
adc
call
jae
fs
xor
push
jbe
or
adc
ffree
loop
add
and
add
mov
add
nop
and
arpl
aad
cli
pop
retf
call
add
call
cmp
mov
jae
test
xchg
jo
jo
aad
inc
xor
ja
add
xchg
mov
aam
hlt
and
mul
fsub
cmps
mov
sbb
test
cmp
jo
mov
add
bnd
inc
push
test
mov
cmp
jae
jmp
sub
fsubr
push
dec
sbb
cwde
pop
push
iret
fisttp
mov
and
fs
dec
cmc
sub
mov
dec
adc
or
adc
jmp
sub
lock
or
sub
std
mov
push
sub
xchg
test
dec
jnp
xchg
mov
stc
adc
inc
shl
iret
mov
cmp
das
push
and
add
iret
pop
je
push
stos
data16
cli
sbb
and
into
mov
aaa
and
adc
(bad)
retf
jmp
sbb
and
sub
inc
jno
es
xor
ret
pop
mov
dec
pop
and
sub
popf
iret
jge
mov
dec
ja
mov
sti
or
and
retf
mov
aad
xchg
xchg
sbb
imul
push
mov
loope
arpl
(bad)
ficom
stos
push
cs
pop
aam
fsub
mov
pop
fisub
rcl
push
xchg
push
leave
push
fisubr
sub
sbb
stos
out
xchg
test
lods
xchg
fdiv
cmp
push
sbb
int
out
or
clc
mov
cli
cmp
out
jne
shl
jnp
les
adc
(bad)
jo
cs
leave
cld
loop
mov
mov
sbb
inc
jmp
shr
cli
dec
cmp
aaa
push
scas
pushf
jecxz
ret
sub
rcl
sbb
vmovaps
dec
(bad)
cs
dec
inc
cmp
mov
cs
adc
not
mov
fsin
movs
or
jmp
add
sbb
or
inc
inc
ja
movs
jmp
call
cld
mov
fwait
xchg
mov
daa
cmove
mov
inc
arpl
cmp
xlat
pop
jnp
(bad)
inc
bound
fldcw
jnp
inc
pop
or
loope
xor
movs
(bad)
mov
leave
or
cli
xchg
push
dec
ja
push
jmp
lods
inc
aam
pop
push
add
aaa
inc
cmp
xor
ds
cmp
sbb
jb
fidiv
xchg
cmps
mov
mov
jb
push
push
in
adc
xor
inc
cmp
(bad)
rol
dec
pushf
out
xor
mov
jge
pop
and
les
push
pop
jne
retf
sub
pop
je
add
call
xchg
cmp
(bad)
jmp
or
pop
xchg
xlat
out
shl
test
mov
inc
popf
lods
pop
scas
cld
jle
cmp
push
mov
sbb
addr16
inc
(bad)
(bad)
inc
push
lahf
mov
(bad)
lock
imul
jg
daa
in
pop
inc
fbstp
xchg
mov
adc
mov
nop
and
or
adc
mov
mov
in
pop
sub
xabort
fdivp
cld
cmp
stos
bound
loope
push
dec
or
repnz
inc
fsub
(bad)
stos
test
ret
test
mov
in
pop
xchg
das
pop
push
nop
add
out
cli
leave
arpl
xor
push
outs
dec
xor
mov
nop
js
add
or
pop
out
fstp
jecxz
ins
jg
out
ss
mov
xchg
and
clc
into
or
xchg
sbb
xlat
stos
stc
sti
xor
pop
pop
mov
cmp
outs
mov
mov
sbb
xchg
push
cwde
mov
add
push
or
mov
lock
in
test
mov
nop
loope
int3
adc
movs
fsubr
imul
xor
dec
das
push
sbb
shl
test
add
(bad)
pop
dec
xchg
enter
ret
test
xchg
enter
fsubr
mov
sub
jge
lea
inc
push
data16
mov
cld
or
jmp
ja
popf
add
int3
out
pop
(bad)
push
and
or
(bad)
mov
mov
hlt
mov
and
popf
pop
gs
xor
lods
adc
js
jle
jne
push
jmp
stos
es
push
pop
fidiv
mov
lds
setp
mov
or
dec
and
out
jecxz
mov
arpl
cmp
sahf
mov
add
inc
xchg
sbb
push
(bad)
rcl
in
leave
clc
jge
mov
fild
sub
sti
mov
mov
jno
jno
or
loope
mov
inc
int
loopne
jge
cmp
ss
fwait
(bad)
loope
ret
mov
pushf
ja
inc
cmp
pop
jl
xchg
mov
mov
jnp
mov
cld
sbb
mov
cmp
sub
mov
scas
loope
cmp
and
push
(bad)
mov
sbb
jmp
fbld
inc
mov
ins
loop
ins
mov
xchg
ins
cmc
or
dec
adc
jbe
mov
imul
int
pop
imul
rcl
jbe
adc
jmp
in
mov
daa
cmp
dec
dec
ins
fistp
int
in
sbb
call
out
movs
inc
icebp
imul
je
pop
mov
mov
dec
mov
sbb
cld
outs
or
not
and
pop
push
ja
jbe
js
push
cld
mov
and
mov
jnp
hlt
mov
out
ds
sub
enter
push
repnz
jg
and
mov
fimul
xchg
adc
jb
call
and
or
mov
and
clc
sub
or
jp
fcomp
cld
iret
add
scas
fs
inc
xlat
pop
imul
(bad)
cmps
push
adc
adc
aas
add
jne
mov
stc
and
(bad)
pop
or
or
retf
loope
xchg
fdivr
fwait
xor
mov
jbe
pop
pop
fnsave
mov
jmp
dec
xor
adc
pop
adc
add
jmp
mov
das
dec
mov
and
sub
mov
or
sbb
test
retf
adc
mov
sbb
call
pusha
cwde
scas
cmp
retf
scas
in
jo
sahf
xchg
jmp
mov
in
cwde
mov
call
call
fadd
cmp
mov
push
es
or
popf
mov
(bad)
imul
lods
dec
movs
aaa
fnop
sbb
ss
cmp
leave
stc
pop
xlat
repz
xor
jmp
loopne
xchg
lea
in
mov
es
dec
iret
pop
pop
xchg
pop
sti
cld
ds
jg
inc
cmc
add
push
dec
lahf
mov
loop
xchg
and
or
pop
mov
in
mov
and
imul
mov
loop
xchg
(bad)
jns
and
mov
ss
and
dec
adc
lea
ja
cmp
add
or
sahf
addr16
jns
adc
mov
dec
repz
bnd
inc
jns
inc
call
test
mov
xor
dec
pop
mov
inc
mov
fs
std
ss
loop
fwait
or
jge
xor
add
popf
jp
mov
dec
imul
out
ins
push
stos
cdq
dec
mov
mov
push
sub
sbb
int
mov
aaa
mov
rol
or
jae
mov
mov
push
push
fs
push
stc
xchg
int
aas
sbb
sbb
mov
mov
xor
sbb
or
xor
mov
xor
out
retf
iret
xchg
jnp
xchg
mov
and
jmp
fst
pop
jae
adc
cmp
pop
push
es
adc
outs
dec
jnp
outs
sub
mov
fsub
lods
retf
(bad)
jge
out
lea
es
push
mov
(bad)
push
mov
push
iret
adc
scas
pop
lds
jne
push
jne
and
fst
push
mov
fdiv
or
mov
mov
scas
push
neg
mov
(bad)
xchg
dec
pop
popf
fs
inc
ds
retf
sbb
in
push
icebp
cmc
ret
pop
adc
and
stos
mov
lahf
(bad)
xchg
in
xchg
test
repnz
imul
loope
cmps
nop
sar
daa
jg
add
pop
dec
lock
xchg
and
mov
inc
push
push
scas
pop
add
xor
cmp
mov
push
stc
imul
test
jne
dec
enter
cld
rcr
(bad)
int3
loop
and
add
cli
popa
sbb
pusha
scas
cmp
cmp
sbb
sahf
ret
push
rcl
retf
push
dec
leave
mov
pop
mov
xchg
sub
(bad)
sbb
sbb
out
adc
loope
add
adc
mov
imul
jo
push
add
and
test
das
push
nop
inc
add
inc
fwait
inc
mov
cmc
dec
push
or
xor
pop
jnp
dec
pop
test
inc
out
cmp
(bad)
or
xor
(bad)
out
hlt
mov
loope
call
inc
iret
jp
outs
ret
pop
sbb
jmp
inc
mov
cwde
add
retf
push
not
(bad)
movs
cli
xor
sub
dec
mov
(bad)
dec
jl
int3
push
xor
sbb
js
movs
lea
pop
(bad)
call
jge
dec
sub
add
sub
sbb
jno
inc
xchg
mov
mov
adc
or
(bad)
icebp
sbb
dec
jl
sbb
xchg
jg
xor
js
mov
mov
jmp
or
in
dec
into
adc
jno
inc
lods
ja
ret
test
sbb
mov
ss
mov
ins
and
retf
(bad)
sbb
mov
pop
sbb
mov
out
imul
fstp
jp
mov
mov
cmc
push
jmp
stc
pop
sub
imul
lea
inc
jp
movs
jl
dec
(bad)
in
or
movups
mov
mov
and
imul
push
je
sbb
fbld
movs
sbb
xor
or
gs
(bad)
(bad)
mov
jge
lods
iret
push
push
xchg
inc
inc
fisttp
ret
fcomp
sub
xchg
adc
je
mov
stos
jmp
(bad)
push
sub
mov
fld
mov
sub
in
mov
in
inc
mov
aas
sbb
(bad)
hlt
inc
sub
push
stos
mov
sbb
bound
pop
mov
aad
loop
bound
add
cs
push
mov
sub
icebp
mov
loop
aam
xchg
leave
jnp
jnp
daa
jbe
shl
mov
ficom
out
(bad)
fcmove
and
pop
sub
xchg
add
(bad)
addr16
popa
aam
inc
arpl
(bad)
ins
lods
fld
add
jg
push
mov
scas
dec
dec
pop
xchg
bound
dec
xchg
loope
xchg
outs
add
inc
pop
jecxz
sub
jb
xor
mov
shr
mov
loop
pop
and
jg
repnz
pop
jecxz
in
scas
mov
sub
je
jecxz
mov
jecxz
sbb
(bad)
loopne
les
cld
mov
mov
idiv
or
sub
push
or
and
int3
pop
inc
daa
sti
push
scas
cmps
xor
in
pop
retf
push
mov
adc
cmp
mov
and
xchg
and
retf
in
add
aaa
(bad)
dec
add
sub
rol
mov
data16
mov
popf
aaa
and
pop
lds
sti
fcomp
ins
not
push
inc
xchg
xchg
pop
mov
js
rcr
mov
retf
outs
popa
ins
cli
dec
inc
and
fdivr
stc
fdivr
es
fidiv
push
jge
mov
sbb
and
xor
out
adc
pop
xor
and
fst
cmps
jnp
add
(bad)
jmp
push
leave
inc
xor
popa
sub
pusha
lahf
push
das
inc
hlt
cmp
call
retf
mov
pop
pop
mov
xchg
cdq
pop
add
adc
not
stos
push
sbb
push
into
sahf
mov
jge
sub
or
sbb
test
cmp
xchg
movs
sub
loope
int3
bound
clc
movq
test
xchg
adc
push
clc
cmp
inc
xor
dec
inc
dec
or
inc
out
aas
adc
imul
adc
cli
mov
sbb
push
inc
fmul
repnz
mov
or
sbb
push
(bad)
jmp
adc
adc
out
sti
cmp
push
cld
xchg
add
(bad)
sbb
inc
daa
mov
sbb
loopne
test
aad
cmp
or
inc
les
out
(bad)
and
push
lods
sub
aam
(bad)
mov
jecxz
mov
(bad)
std
or
sub
aad
fwait
shl
faddp
jbe
add
sbb
lds
stc
push
fsubr
pop
or
movs
stos
ror
ret
adc
ins
dec
pop
fidiv
imul
fld
and
push
mov
ins
ds
lahf
xchg
pop
test
imul
pop
push
dec
retf
movaps
into
jne
add
pop
call
pop
fwait
jne
jecxz
loop
aaa
clc
mov
mov
jo
out
add
adc
jnp
cmp
mov
call
(bad)
shl
xchg
sbb
mov
les
pop
mov
jmp
shl
fisub
mov
cld
pop
mov
sbb
out
cwde
mov
sti
loop
clc
fs
inc
cs
sub
mov
inc
sbb
mov
lods
lock
pop
je
mov
fmul
out
idiv
fs
pop
adc
push
xor
test
data16
mov
rol
in
mov
ss
pop
mov
std
loope
cs
pop
adc
inc
mov
add
inc
mov
mov
dec
scas
mov
jp
mov
(bad)
cwde
aas
and
push
cmps
icebp
xchg
ja
dec
mul
mov
pop
js
inc
push
mov
pop
clc
daa
sub
lea
add
dec
dec
std
dec
jmp
test
scas
ror
sub
pop
retf
push
out
shl
sbb
imul
adc
mov
mov
push
repz
ret
and
out
movs
sub
ret
push
retf
nop
push
aad
push
cmp
into
cmps
aad
pushf
scas
dec
movs
scas
sbb
mov
retf
sub
xlat
jae
arpl
mov
sub
clc
jp
push
repnz
and
ss
push
fstp
lea
das
or
ror
ret
pop
(bad)
xor
add
(bad)
nop
push
lds
shl
test
mov
arpl
mov
repz
dec
sub
adc
push
fcmovu
pop
xchg
lds
push
mov
stc
movs
cwde
mov
lahf
jno
fmul
(bad)
shl
dec
nop
or
fsubr
enter
inc
nop
ins
or
ret
add
mov
dec
int3
outs
or
and
lods
gs
arpl
gs
inc
imul
shl
xchg
push
or
or
std
push
xor
mov
(bad)
xchg
mov
push
addr16
mov
test
scas
mov
bound
xchg
cmps
loopne
xor
mov
in
fcom
pusha
push
jg
sbb
add
cmp
(bad)
lods
test
pop
mov
jg
cld
mov
push
pusha
xor
pusha
fwait
push
xor
fcmove
pop
xchg
inc
retf
or
sbb
mov
sbb
fdiv
icebp
xor
jle
(bad)
jns
out
lods
ret
xchg
mov
loope
xlat
fsubp
or
sub
cmp
out
inc
pusha
ins
xor
push
cwde
ss
(bad)
retf
ins
mov
pushf
outs
gs
pusha
movs
pop
jmp
mov
in
loope
ja
push
adc
mov
ja
pop
xchg
and
jae
push
mov
test
mov
cld
sub
xor
adc
ret
inc
ins
add
test
jb
add
loop
cmp
(bad)
ja
movs
sbb
fcmovnu
pop
call
aaa
xor
add
fiadd
pop
dec
inc
aad
scas
mov
scas
push
cmp
push
mov
mov
(bad)
jg
dec
cmp
or
mov
lods
das
dec
push
lock
push
push
adc
inc
dec
dec
aam
push
dec
mov
and
rcr
sub
sub
sbb
add
ss
test
aas
push
data16
pushf
loop
xchg
mov
jp
rcr
mov
pushf
cmp
or
cmp
repz
and
adc
test
cdq
jae
fwait
cli
pslld
ss
adc
pop
ret
inc
jne
test
out
outs
(bad)
push
stos
push
mov
adc
xchg
push
add
sub
int
mov
jecxz
outs
xchg
dec
xchg
lods
jne
arpl
push
mov
lock
bound
cmp
(bad)
cmp
adc
iret
inc
sub
and
das
dec
xor
cmp
sbb
ds
loop
sub
lea
int3
xchg
push
sub
mov
push
jns
cwde
nop
mov
ds
pusha
sub
lds
sti
lock
push
pop
aam
push
mov
jmp
push
ss
pop
cmc
and
lods
sbb
dec
inc
lea
push
mov
sahf
mov
mov
adc
mov
test
add
dec
cmps
xchg
pop
pop
in
leave
js
call
retf
(bad)
fst
hlt
sbb
(bad)
(bad)
mov
outs
mov
ret
cmp
ror
test
jae
or
push
test
dec
pop
(bad)
jno
pushf
movs
mov
rcl
imul
cmp
iret
pop
fnstcw
sbb
sub
jge
popa
and
scas
test
xchg
dec
push
nop
add
sub
xor
int3
dec
int3
repz
push
(bad)
out
(bad)
enter
add
lock
jne
mov
cmp
or
out
sub
adc
fs
sbb
and
push
sbb
mov
and
pop
xchg
mov
mov
and
mov
xchg
jle
add
mov
pop
xchg
jle
xor
dec
dec
add
retf
cli
bound
jp
push
std
(bad)
mov
lea
mov
cdq
aad
adc
jl
jge
loop
call
xlat
fnsave
mov
cli
bound
cld
push
idiv
mov
mov
leave
(bad)
xchg
ret
test
adc
clc
adc
push
adc
in
add
aaa
pop
add
sbb
fs
idiv
hlt
mov
push
jl
add
push
lea
hlt
popa
mov
sub
cvtdq2ps
fist
leave
leave
sub
retf
repnz
stos
mov
je
xor
mov
mov
xchg
mov
pop
js
cmps
in
(bad)
stc
mov
shr
popa
adc
xchg
inc
imul
add
ss
dec
test
adc
(bad)
mov
fcomp
rol
adc
push
and
adc
mov
and
stos
hlt
or
xchg
sub
in
fld
cmc
adc
push
cld
add
xchg
dec
mov
aam
(bad)
loope
mov
fldenv
push
cmp
pop
das
mov
add
jno
addr16
iret
icebp
sub
and
test
setle
ret
adc
push
fst
clc
jo
jno
cmps
mov
sub
sub
and
push
add
lods
outs
in
pop
div
(bad)
cmp
dec
dec
adc
pushf
loop
xor
add
js
pop
cmps
mov
dec
cmp
xor
pop
rcr
pop
mov
pop
scas
cmp
iret
es
aad
push
pop
add
enter
lock
and
cmc
dec
xor
outs
ins
dec
sti
jno
adc
and
sbb
test
xor
sub
xchg
mov
push
xchg
push
mov
xor
repnz
(bad)
aad
shl
stc
fldcw
das
cwde
imul
(bad)
pop
jne
popa
sub
imul
fsub
in
in
in
push
sbb
or
xchg
(bad)
mov
dec
scas
emms
outs
dec
bound
cmps
dec
test
push
dec
stos
hlt
mov
jns
cmp
(bad)
outs
(bad)
int
test
inc
ins
out
leave
pop
pop
mov
(bad)
(bad)
cmp
mov
aas
retf
(bad)
adc
push
cmps
pop
lock
pop
mov
test
xchg
sbb
xchg
stos
repz
jmp
mov
into
mov
ret
fld
or
add
mov
out
sub
pop
mov
jno
aam
or
call
dec
pop
xchg
test
sbb
fld
sub
outs
in
popf
push
dec
paddusb
jns
out
jae
repnz
sub
dec
jns
test
cld
push
call
sbb
xor
pop
dec
push
or
out
jg
cmp
js
dec
(bad)
sub
aam
pop
sbb
pop
jb
frstor
mov
mov
dec
add
call
mov
(bad)
pop
mov
mov
std
inc
xchg
test
pop
fnstsw
sahf
aam
fs
adc
sub
mov
retf
jle
adc
or
fstp
mov
xchg
scas
(bad)
retf
add
jmp
mov
mov
push
sub
push
mov
popf
or
inc
ins
inc
jg
xor
repz
jl
fs
ja
mov
push
xor
inc
test
and
aad
jnp
and
cld
fs
xor
adc
xor
xchg
ret
or
cmps
js
out
add
jo
popf
xor
sbb
lahf
push
mov
mov
test
jbe
inc
adc
(bad)
sub
sar
stos
and
sub
mov
sub
ja
cli
dec
jae
or
jmp
push
and
cmp
cwde
dec
lahf
outs
das
fistp
mov
out
scas
dec
(bad)
push
popa
out
jno
(bad)
dec
adc
fnstenvw
mov
add
inc
ja
adc
das
add
pop
inc
retf
xchg
or
sbb
rol
adc
mov
dec
and
xchg
into
fwait
int3
cmp
adc
(bad)
mov
fs
mov
or
cmp
cmp
aas
cdq
jp
add
fsubp
mov
push
push
or
dec
ja
es
aam
xchg
shl
iret
aaa
mov
cdq
mov
pushf
enter
loopne
xchg
test
mov
retf
scas
adc
icebp
sbb
push
fs
dec
aas
retf
jg
sti
sub
sbb
popf
cmp
hlt
ins
jnp
push
or
dec
dec
mov
mov
xlat
push
sbb
loope
shl
push
jmp
xchg
adc
mov
jl
stos
imul
xlat
fidiv
or
pslld
(bad)
inc
jmp
psllq
fnstsw
cmp
and
and
jne
(bad)
mov
in
das
pop
movs
fld
mov
div
aam
fstp
mov
rol
test
or
pop
or
maxps
lea
cmp
sbb
jbe
sahf
push
push
xchg
(bad)
popf
sub
paddb
xchg
xor
imul
mov
aaa
pop
push
fild
dec
jmp
das
or
sub
iret
les
mov
mov
gs
gs
imul
std
push
inc
popa
cmp
jmp
add
and
fs
mov
pop
out
dec
fimul
cmc
jl
xor
stos
jae
aam
cmps
push
cwde
(bad)
mov
test
aad
push
(bad)
out
jbe
aas
mov
xlat
fs
push
mov
pop
jmp
or
dec
adc
popa
mov
sbb
xchg
jl
inc
aas
shl
test
(bad)
shr
repnz
mov
xor
enter
jge
int
cwde
inc
not
push
mov
sbb
retf
fwait
loopne
xor
icebp
in
test
push
push
lock
and
iret
test
fwait
cmp
dec
sbb
scas
pop
iret
mov
add
inc
retf
fwait
sbb
sbb
outs
pusha
leave
leave
inc
retf
sub
aad
mov
mov
sub
retf
push
scas
inc
ss
push
fild
sub
pop
cmp
push
sbb
push
sub
retf
mov
ss
push
xchg
dec
inc
leave
and
pop
shr
cmp
cmps
loope
(bad)
aaa
js
inc
fild
(bad)
sti
push
sub
push
xor
je
(bad)
pop
js
(bad)
jmp
fs
xchg
pop
mul
and
je
xchg
pop
push
cld
push
fwait
mov
inc
aaa
xchg
cmp
out
jmp
movs
inc
inc
and
imul
mov
rcl
jno
inc
out
xchg
mov
and
jl
fcom
rol
sbb
loop
sbb
pop
or
xor
les
sub
push
int
test
inc
call
or
jl
(bad)
outs
xor
clc
mov
ja
stos
sub
retf
lea
mov
imul
xor
and
push
pop
jns
ret
scas
inc
fnstsw
mov
mov
xor
xchg
ret
repz
dec
outs
inc
push
mov
xlat
and
mov
test
pop
and
sti
and
and
pop
and
and
(bad)
call
xchg
push
xchg
das
idiv
xchg
xor
js
pop
add
push
cmp
ffree
out
jge
repnz
dec
neg
lods
xor
mov
loopne
pop
push
stc
stos
jp
adc
lahf
lock
jne
stos
imul
lea
dec
pop
repz
aas
test
arpl
test
hlt
adc
sub
cmps
lock
neg
jecxz
out
jns
scas
fsub
shr
jbe
inc
jecxz
frstor
jnp
sub
inc
add
fwait
pop
leave
jmp
nop
hlt
push
aaa
retf
pop
inc
xchg
dec
dec
sbb
jge
adc
mov
int
dec
test
or
inc
sub
test
adc
adc
movs
xor
lods
dec
stos
out
mov
sbb
sar
pop
dec
pop
pop
jnp
int
mov
jmp
aad
in
into
popf
pop
sar
add
mov
in
mov
daa
cmp
jno
fdivp
rcr
sub
inc
xor
arpl
inc
in
xchg
ins
xor
std
shr
inc
jecxz
rcl
mov
inc
aas
das
mov
xor
inc
adc
and
test
push
test
cmps
imul
mov
clc
movs
and
into
mov
ret
inc
mov
pop
mov
push
mov
inc
add
popf
jns
ins
lahf
aaa
and
mov
jl
jl
inc
jns
jmp
pop
cli
jecxz
addr16
stc
pop
scas
dec
push
push
sub
or
push
in
mov
sub
lds
outs
fwait
sti
aad
loop
loopne
mov
shl
ret
mov
cmc
mov
sbb
xor
loope
dec
adc
push
cmps
or
push
cmp
pop
mov
sti
into
inc
xor
inc
xchg
inc
call
pop
or
fst
push
ss
pop
test
jb
movs
mov
arpl
pop
push
not
dec
jb
mov
and
or
push
daa
pop
enter
cmp
mov
inc
jle
loop
je
mov
mov
push
adc
push
hlt
pushf
lods
mov
mov
iret
and
mov
je
sub
pop
mov
addr16
sbb
mov
jns
fimul
lods
cs
pop
cs
pop
mov
dec
xor
cli
sub
movs
pushf
mov
xor
ss
call
(bad)
xor
leave
imul
mov
xor
pop
out
mov
xchg
push
sbb
xchg
pop
sbb
and
out
outs
enter
scas
in
mov
or
or
popf
(bad)
cmp
mov
push
push
push
and
xor
adc
fwait
push
(bad)
xlat
je
rol
aas
pop
pushf
add
fisub
mov
lea
lods
mov
arpl
cld
jmp
jecxz
in
repnz
test
call
dec
imul
push
cmp
push
pop
in
sbb
gs
inc
jl
mov
inc
xchg
nop
push
ins
dec
clc
mov
aaa
fild
add
movs
fistp
adc
fsubr
je
aam
leave
adc
jmp
into
rol
dec
ss
pop
not
ret
sahf
shl
mov
je
and
sar
daa
jns
pop
mov
jp
or
jl
lock
rcr
jecxz
push
rol
loope
jle
or
(bad)
in
xor
inc
(bad)
(bad)
push
xchg
inc
ret
or
ret
not
dec
gs
mov
sbb
movs
and
das
hlt
fimul
(bad)
add
out
jmp
pusha
cmc
mov
leave
in
aad
aaa
push
mov
dec
xchg
xor
sbb
xor
out
out
daa
aaa
adc
push
mov
inc
nop
sbb
xor
jae
shl
push
jnp
fist
fisttp
mov
add
or
ss
call
nop
into
jbe
hlt
mov
outs
push
ror
clc
ret
(bad)
push
add
(bad)
jnp
mov
adc
int
jo
cmp
inc
jnp
inc
and
xor
test
jo
scas
mov
les
hlt
xlat
ins
hlt
sbb
mov
scas
jmp
loopne
out
ret
call
xchg
jns
jo
pop
aam
mov
add
imul
lgs
scas
add
pop
push
gs
call
adc
mov
out
(bad)
push
cmp
xchg
xchg
sbb
add
or
cmp
jne
jge
inc
add
and
push
pop
(bad)
sub
and
cmp
cmp
mov
cld
call
shl
sets
mov
mov
sub
lahf
ret
xrelease
shl
jb
mov
jl
dec
ins
push
cli
push
adc
arpl
rol
cmp
adc
fs
mov
sub
mov
not
in
jb
inc
pushf
pop
dec
xchg
mov
js
mov
mov
mov
xlat
sbb
iret
mov
ret
imul
data16
jl
cmp
out
aaa
xchg
test
cli
lds
es
aad
sub
xchg
push
push
(bad)
int3
push
les
xchg
or
std
mov
lods
inc
xchg
push
sar
out
cwde
cwde
xor
mov
nop
das
aam
sbb
(bad)
lock
ins
jp
push
jg
icebp
les
ss
mov
add
sbb
lods
push
ins
mov
cld
sub
out
or
mov
mov
dec
pop
fucomip
cs
cs
into
push
push
xchg
xchg
push
xchg
imul
(bad)
sbb
and
pop
push
pop
add
loop
jo
dec
jp
dec
cmp
outs
xor
mov
leave
call
mov
imul
mov
data16
shr
push
inc
mov
dec
pop
mov
in
mov
movs
pop
test
push
ins
hlt
pop
mov
push
shl
lea
loopne
push
cmp
xchg
das
push
aad
jo
call
jg
hlt
lds
xchg
push
fld
jle
aaa
sti
sub
dec
and
lock
out
xor
lea
push
cmp
xor
test
add
loop
nop
xor
js
sar
shr
push
cs
gs
std
pop
mov
lods
retf
push
dec
mov
cmp
mov
jne
push
popf
(bad)
(bad)
aam
fist
leave
aaa
push
hlt
inc
push
dec
push
push
sub
push
inc
loope
test
mov
mov
mov
out
(bad)
aas
in
pop
mov
std
mov
addr16
pop
add
repz
call
or
or
movs
repnz
retf
ins
push
imul
mov
xor
mov
retf
mov
pop
push
xchg
lds
das
sub
loop
sub
mov
push
mov
mov
xor
mov
dec
test
mov
sar
sbb
in
cli
retf
repnz
mov
out
rol
mov
aaa
mov
daa
jns
jmp
xchg
fxch
shl
pushf
ja
pushf
push
or
bound
mov
jmp
fs
ins
adc
aam
fisub
fs
cmp
jecxz
cmps
outs
retf
imul
out
iret
push
loopne
xchg
sbb
add
imul
jae
add
(bad)
movs
pop
ret
cmp
jmp
stos
jle
dec
movs
add
dec
fimul
fdiv
aaa
mov
mov
data16
leave
out
mov
jae
or
and
jg
cmp
daa
inc
add
xchg
fiadd
push
inc
push
inc
call
xchg
jmp
inc
cld
in
cmc
outs
int3
xchg
inc
adc
add
push
loope
xor
xchg
sbb
xlat
dec
cmp
repnz
popa
push
aas
dec
jle
jecxz
or
cmp
cmp
mov
div
cld
mov
mov
mov
lds
pop
popf
fiadd
jge
pop
aas
jecxz
mov
cmps
push
loope
add
movs
add
aas
jbe
int3
sar
popa
mov
push
ds
and
ins
test
dec
sbb
int3
push
mov
addr16
in
add
retf
mov
cwde
mov
lea
fisttp
lods
and
mov
pop
sbb
lea
daa
call
xor
add
dec
sahf
mov
sub
lock
jp
loop
sub
test
sub
sahf
lods
inc
and
ja
cmps
outs
ror
ss
sbb
pushf
lahf
mov
lods
mov
adc
sub
mov
retf
jnp
dec
and
shl
fsub
push
call
lahf
xor
push
xchg
jne
sbb
addr16
pop
and
push
outs
(bad)
mov
sub
dec
cs
cmps
sub
sbb
ss
fild
inc
dec
in
cmp
imul
mov
cs
mov
addr16
jmp
push
pop
or
ror
pop
imul
nop
inc
ror
dec
jns
pusha
mov
jg
retf
mov
outs
(bad)
lds
sub
in
loop
mov
shl
stos
pop
cmp
movs
jne
lds
fild
jnp
stc
xchg
pop
mov
data16
fucomp
not
cdq
popa
mov
cld
pop
(bad)
call
cs
sub
call
out
(bad)
test
xchg
jbe
xchg
dec
scas
mov
mov
and
sub
and
ret
es
sub
or
mov
sub
out
pop
outs
call
cmps
push
(bad)
in
call
ins
pop
ss
mov
mov
fwait
ret
xor
sub
adc
ja
fnstenv
pop
repz
or
and
mov
dec
xchg
repnz
stc
(bad)
aad
xor
and
pop
lods
jle
inc
lods
xchg
jb
mov
ins
popf
jo
movs
mov
dec
inc
sub
mov
jnp
jno
je
dec
or
xchg
pusha
sbb
mov
iret
cli
(bad)
in
jl
pop
mov
hlt
mov
nop
and
push
mov
fbld
(bad)
dec
push
stos
mov
push
sbb
xlat
push
pop
mov
out
push
fld
shl
arpl
and
fstp
mov
sub
push
(bad)
jle
lds
mov
jnp
test
popa
je
and
sbb
adc
data16
movq
retf
pop
mov
into
xchg
popa
imul
xlat
push
jbe
mov
(bad)
enter
lds
mov
push
es
jmp
test
out
fs
sbb
push
jns
adc
jmp
bnd
jne
cld
push
inc
nop
mov
js
add
add
push
sbb
or
inc
xchg
popa
dec
jne
mov
sub
sub
pop
xlat
sub
pushf
shl
xor
enter
sbb
aad
or
dec
push
ins
shl
or
push
cmp
mov
icebp
inc
jmp
mov
test
ja
movq
mov
inc
test
xor
jecxz
adc
push
dec
dec
or
in
loopne
xchg
inc
sahf
pop
mov
cmp
cdq
adc
sbb
call
dec
int3
cmp
mov
mov
test
sbb
mov
lahf
push
(bad)
in
pushf
(bad)
jp
and
fidivr
pop
movs
mov
pusha
pop
clc
sbb
(bad)
dec
into
std
fsubr
and
dec
dec
jns
inc
std
or
sbb
es
jns
jno
xor
ficomp
sbb
stos
popa
or
(bad)
xor
mov
mov
lahf
sar
sbb
imul
sbb
daa
add
daa
retf
pop
movs
in
ds
or
add
outs
rcr
lock
sbb
cmp
ja
pop
xchg
jmp
pop
test
jo
leave
div
ja
adc
adc
jne
push
sbb
iret
pop
sbb
mov
dec
retw
test
xor
push
lahf
test
nop
mov
jecxz
daa
jle
xchg
jle
enter
mov
shr
pop
fdivr
xor
jmp
pop
jl
adc
push
icebp
add
jnp
xchg
cwde
ins
sti
into
dec
lea
sbb
in
jecxz
lds
lock
adc
je
add
ins
fmul
pop
btr
xor
xor
pop
(bad)
adc
pop
sbb
pop
ret
daa
jmp
or
repz
jno
and
arpl
cmps
ja
call
and
jecxz
pop
pop
and
or
pop
add
test
imul
mov
pop
int
ret
xchg
jmp
jmp
sub
add
in
push
outs
and
mov
int
or
xchg
dec
fwait
cmp
(bad)
aaa
outs
adc
test
ror
dec
xor
push
pop
bound
pop
(bad)
sti
xchg
retf
adc
in
adc
cmp
sub
popf
imul
adc
(bad)
sub
neg
sub
adc
ins
div
je
(bad)
pop
xor
inc
push
dec
popf
inc
or
add
jmp
mov
nop
movs
pop
cmp
push
jnp
test
jle
nop
mov
std
pop
add
cmp
lods
jecxz
mov
jle
mov
sub
cld
xor
push
movs
xchg
cmps
sti
xlat
je
or
leave
ds
into
(bad)
fmul
xor
jl
call
ss
lods
add
and
(bad)
cmp
in
mov
aad
dec
inc
adc
scas
test
jmp
jge
mov
loopne
jge
or
mov
or
inc
hlt
cmp
iret
retf
xchg
xor
or
leave
jne
sbb
jmp
xchg
scas
sbb
xchg
mov
xchg
(bad)
mul
sub
xchg
in
loope
fnstsw
or
and
mov
dec
je
xor
mov
repnz
mov
fwait
jbe
mov
pop
sub
mov
mov
cs
jnp
push
fsub
movs
mov
ds
cmp
push
mov
gs
cs
pushf
lea
adc
data16
jmp
sub
inc
gs
add
std
pop
jb
je
pop
push
adc
pop
pop
repz
out
and
xchg
loop
sub
pop
out
add
ins
scas
cmc
in
push
mov
fiadd
mov
inc
ja
inc
or
imul
dec
push
adc
mov
dec
mov
mov
mov
push
movs
call
push
mov
les
adc
sub
fs
push
sub
xchg
mov
int3
les
mov
push
scas
outs
jecxz
imul
adc
daa
adc
jmp
push
into
fwait
cmp
call
rcr
repz
cmps
xchg
dec
add
in
xchg
cmc
in
test
call
xchg
cs
add
ja
ss
mov
add
sbb
xor
or
cdq
out
pop
push
not
push
xchg
repz
add
push
repz
popa
mov
popa
mov
in
sub
xchg
xor
cld
ins
mov
(bad)
pop
arpl
shl
popf
loope
pop
add
sbb
loope
in
xor
outs
inc
pop
sbb
jp
add
ins
sbb
daa
push
ins
jg
inc
add
(bad)
jnp
push
inc
dec
loope
adc
aad
fld
dec
ds
dec
inc
ret
pop
adc
push
cmps
aad
loopne
cli
out
and
jmp
aam
cwde
or
cmp
pop
hlt
ins
mov
lahf
inc
mov
mov
mov
std
pop
xchg
ds
stos
push
xchg
dec
mov
sub
jl
clc
xchg
lds
arpl
pop
dec
jp
jecxz
imul
cli
shl
fdivr
pop
jmp
jnp
lahf
daa
or
and
mov
mov
pop
cmc
fwait
push
mov
inc
mov
inc
sub
jmp
sbb
and
jg
jbe
outs
inc
push
inc
sti
adc
in
and
and
or
pop
(bad)
rcr
mov
enter
jae
sub
push
popa
dec
dec
pop
adc
or
out
arpl
dec
imul
mov
jb
jne
pop
sahf
(bad)
cdq
shl
mov
add
outs
div
jl
(bad)
test
fchs
pop
jae
das
sahf
mov
pop
xchg
mov
lea
jbe
jae
call
add
fdivr
jne
cmps
ds
into
fndisi(8087
sub
jnp
jnp
mov
jle
cld
sbb
xchg
push
scas
cmp
daa
retf
mov
repz
ret
cld
adc
cld
adc
lea
js
jns
out
rol
cdq
xor
call
cdq
inc
ror
outs
shl
in
xchg
in
outs
jmp
mov
xchg
pop
jmp
fbstp
ins
shl
dec
push
fidiv
loope
and
mov
xchg
xor
ret
add
in
jle
fistp
sbb
aas
jnp
sbb
nop
inc
test
mov
sub
ss
jne
dec
mov
xlat
cmp
movs
ja
lea
retf
or
inc
fadd
scas
std
lods
(bad)
mov
or
(bad)
shl
call
pushf
sbb
adc
in
sar
adc
mov
xor
push
mov
ins
adc
lock
sbb
xchg
in
inc
lea
cmp
xchg
cli
add
dec
lea
add
adc
arpl
dec
ds
sar
dec
repz
mov
enter
es
cmp
jl
outs
cmp
jg
mov
xchg
mov
icebp
mov
retf
jbe
lods
in
sbb
shl
adc
sub
nop
pop
aaa
rcr
mov
push
outs
xchg
lods
push
dec
push
sub
mov
ins
pop
cwde
or
mov
adc
add
pop
mov
(bad)
clc
out
mov
aaa
or
pop
out
(bad)
daa
cmps
sub
aas
fdiv
adc
mov
daa
stos
imul
inc
data16
std
hlt
shl
cmps
sub
sahf
jp
call
test
stc
pop
push
data16
shl
clc
mov
sbb
xor
retf
fs
into
adc
(bad)
sahf
and
push
add
in
adc
lods
sub
dec
gs
push
add
adc
dec
mov
call
xor
repnz
xlat
pop
je
fs
mov
fld
mov
aad
iret
adc
pop
push
mov
int
push
aam
std
ret
jae
out
inc
mov
imul
dec
push
test
inc
jnp
lea
(bad)
pop
loopne
(bad)
stos
and
inc
xor
sbb
sar
hlt
mov
jecxz
adc
aam
sbb
jb
repnz
pop
sub
loop
adc
stc
neg
and
dec
mov
cmp
lods
(bad)
sub
cmp
imul
mov
inc
mov
mov
in
xlat
add
adc
ins
mov
mov
inc
push
jle
jmp
inc
sub
or
jnp
mov
adc
cs
push
and
cdq
push
pop
mov
pop
pop
ins
loopne
cmps
or
mov
or
ins
push
push
enter
retf
out
sbb
sbb
ficomp
repnz
jb
or
add
mov
jmp
imul
or
stc
shr
leave
adc
adc
mov
push
sbb
or
call
test
mov
pop
mov
cmps
stos
popf
out
jno
xchg
lsl
sub
or
(bad)
push
inc
pop
push
sbb
pop
push
jl
adc
xor
pop
jg
sbb
shl
cli
repnz
adc
in
adc
dec
jl
pop
or
adc
loopne
aas
jg
int3
mov
repnz
je
out
mov
jno
mov
or
mov
jp
dec
cwde
mov
jmp
jns
adc
cwde
or
sub
movs
cmp
xor
mov
cld
sbb
test
(bad)
arpl
mov
popa
adc
add
sti
int
jl
movs
fwait
lahf
and
mov
push
adc
pop
adc
sbb
xor
sar
jne
js
dec
enter
gs
mov
es
data16
jne
loopne
sti
inc
dec
mov
add
popf
test
ja
mov
adc
(bad)
or
outs
adc
cmps
pop
or
arpl
in
fnsave
mov
jb
cmc
push
jmp
clc
xchg
outs
sub
xchg
movs
aas
daa
inc
pop
mov
mov
loope
xchg
dec
pop
cs
or
or
and
mov
mov
jno
icebp
sar
sbb
ret
dec
xor
retw
movs
test
add
das
mov
ins
dec
xlat
sbb
or
movs
jno
imul
xor
sub
add
test
jecxz
fnstcw
ss
sub
aam
push
mov
call
(bad)
pop
jle
mov
into
hlt
into
push
rcr
inc
push
adc
inc
leave
push
push
xor
test
push
fiadd
out
pop
push
adc
repz
fst
jns
push
inc
leave
ror
dec
push
in
popa
dec
mov
in
push
daa
gs
xchg
pop
repnz
daa
dec
fiadd
or
xor
test
cwde
adc
pop
test
enter
shr
ret
xor
mov
fidivr
pop
(bad)
xor
(bad)
xor
jne
xchg
add
not
add
sbb
inc
test
dec
mov
sbb
pop
mov
outs
sbb
fst
and
je
dec
push
xchg
add
mov
pusha
dec
adc
cmp
ror
jb
je
fs
addr16
and
adc
rcr
lea
test
stos
(bad)
push
or
and
adc
mov
add
rcr
lds
std
sbb
inc
mov
sbb
push
push
inc
pop
lahf
push
jnp
ret
xor
cmc
aaa
stos
adc
(bad)
adc
cli
scas
aam
or
inc
fwait
in
push
jp
das
in
add
cmp
outs
xchg
leave
inc
shl
movs
xchg
ret
mov
inc
xor
sar
sub
fcmovnbe
adc
pop
outs
arpl
ror
dec
sub
fld
scas
or
repz
mov
clc
inc
outs
int3
imul
xor
popa
addr16
(bad)
std
mov
fild
lods
xlat
mov
call
cmps
aaa
outs
push
call
in
jecxz
mov
cmp
add
mov
pusha
outs
xchg
inc
lods
test
mov
adc
and
push
fistp
in
stc
popf
sub
add
repz
adc
fs
jb
sub
push
out
inc
fstp
dec
test
pop
js
and
mov
cmps
and
add
dec
sbb
xchg
inc
add
jle
cdq
jmp
cli
outs
pop
sub
cli
jle
jp
int
dec
adc
add
xor
and
lock
data16
ret
js
xlat
adc
ror
in
test
dec
(bad)
and
push
fistp
fisubr
icebp
pop
mov
mov
sub
or
add
pusha
sub
xor
cmp
shl
shl
jmp
ds
mov
add
cmp
retf
ret
(bad)
cmp
jmp
xchg
test
sbb
sbb
out
ja
cmp
or
rol
push
mov
xchg
int
fucom
mov
xor
xor
clc
stc
loopne
int
or
int3
clc
loopne
cmc
leave
xchg
lods
outs
xchg
jecxz
pop
adc
sub
dec
pusha
sub
inc
ja
cmp
jns
and
fwait
out
loope
rol
mov
es
gs
jl
in
pop
fwait
jbe
cmps
xchg
in
cld
enter
test
iret
jns
mov
sub
cmp
movs
dec
icebp
jne
xor
dec
pmulhuw
dec
sbb
mov
lea
js
jg
call
pop
outs
js
fmulp
loopne
arpl
(bad)
std
pop
add
shr
add
repz
mov
dec
pusha
lea
ficomp
ss
xlat
clc
addr16
inc
xlat
push
hlt
std
cmp
mov
frstor
ins
inc
in
jnp
loopne
mov
out
pop
aas
sbb
inc
mov
add
add
mov
or
mov
pusha
mov
jo
mov
adc
mov
repnz
jg
lea
cld
sub
(bad)
cs
cdq
push
adc
pop
mov
mov
test
mov
xchg
arpl
out
test
mov
dec
fwait
enter
sub
leave
inc
popf
xchg
mov
and
enter
mov
(bad)
push
fcom
inc
aad
add
mov
xchg
int3
ror
movs
cmc
push
cmc
dec
xlat
adc
cmc
adc
dec
jle
xor
scas
movs
xchg
mov
inc
pop
test
cmp
xor
fadd
mov
xchg
xchg
sti
jmp
mov
or
sbb
lahf
push
sbb
add
pop
cld
xchg
cmc
fnsave
cmps
ins
test
pop
in
stc
in
fbstp
(bad)
arpl
adc
sub
push
ins
inc
(bad)
ret
cmp
scas
inc
xor
inc
mov
cmp
adc
ins
jbe
dec
sbb
or
out
in
shl
(bad)
test
rcr
sbb
pushf
icebp
fdivr
mov
test
movs
cmp
ins
hlt
fdivr
stc
in
repz
retf
mov
popf
inc
dec
push
cwde
lods
repz
sbb
lods
jb
xchg
fld
into
sub
dec
cwde
cmc
pop
jl
sar
inc
add
sub
adc
jbe
in
push
out
cmps
mov
fcomp
lods
inc
loop
loope
les
or
xor
bound
sub
pop
push
ins
(bad)
mov
push
rcl
fidivr
jl
enter
(bad)
mov
lods
sbb
out
lods
lods
mov
in
repnz
jbe
push
adc
adc
push
ror
ret
inc
movs
push
mov
jle
ss
out
subps
mov
lahf
jb
ret
mov
jge
sti
sub
repnz
mov
push
loopne
bound
ffree
adc
cmp
pop
xor
sbb
(bad)
sti
mov
adc
aam
and
imul
push
adc
enter
std
lods
and
push
int3
cmp
int3
pop
sub
jb
xor
mov
dec
sbb
or
mov
lock
pop
loop
(bad)
xchg
cmc
mov
hlt
imul
out
mov
jmp
jp
stos
pop
rol
movs
in
pop
inc
cmps
test
(bad)
jns
movs
fdivr
mov
ret
push
sub
imul
cmp
add
imul
jmp
jno
inc
adc
sub
dec
pop
fst
stc
push
into
lods
add
xchg
mov
xchg
in
repz
ss
cmp
hlt
loope
xor
pop
jp
movs
ret
mov
pop
ret
fld
mov
test
mov
xor
push
pop
inc
(bad)
jne
cmp
pusha
add
int3
cwde
(bad)
and
iret
sub
and
adc
out
div
ds
sbb
cmp
rol
out
out
cmc
dec
ret
adc
call
in
(bad)
outs
fidiv
jbe
pop
loopne
cli
fld
push
and
test
retf
and
je
stos
popa
repz
xchg
mov
xchg
inc
mov
retf
ds
and
les
out
lds
xchg
mov
cmc
or
push
inc
lods
add
sub
jne
pop
bound
mov
mov
pop
arpl
lahf
add
push
call
mov
jno
mov
aas
das
push
push
push
pop
lea
xchg
xchg
mov
pop
mov
ds
pop
js
(bad)
outs
enter
xchg
dec
scas
test
lahf
fidiv
(bad)
test
inc
cdq
jns
outs
adc
dec
mov
adc
loopne
xor
scas
jmp
inc
pop
(bad)
fdiv
nop
ror
lods
mov
mov
add
mov
xchg
leave
ret
push
xchg
jmp
or
inc
sti
cmp
lods
daa
mov
bound
mov
add
scas
int
dec
bound
inc
xor
sbb
mov
fadd
inc
cdq
or
adc
push
out
in
setae
aad
sub
cmc
out
outs
push
mov
xchg
lmsw
jecxz
jns
lahf
pop
sbb
mov
div
dec
in
test
mov
xchg
pop
fiadd
scas
cli
sbb
(bad)
in
inc
mov
cmps
aad
fild
add
add
movs
adc
pop
cmova
ss
stos
nop
(bad)
push
call
jno
leave
imul
pop
jle
jns
ins
mov
scas
mov
jns
mov
call
repz
pop
fisub
addr16
sbb
(bad)
cmps
add
loope
icebp
cmps
outs
push
fdivr
lock
shl
pop
inc
xchg
fs
aam
ror
sub
(bad)
jmp
ret
test
pop
aam
xor
ss
pop
leave
fidivr
xor
jmp
or
push
dec
repz
cld
push
(bad)
fiadd
lock
pop
les
hlt
call
mov
sub
push
aad
xor
sbb
mov
repnz
rcr
(bad)
mov
xchg
jg
js
mov
jmp
test
dec
call
lock
jmp
push
int3
aas
fnstsw
inc
cmp
mov
adc
(bad)
cwde
outs
inc
mov
pop
ror
outs
or
jl
ins
adc
mov
xchg
fadd
imul
adc
add
(bad)
or
pop
mov
inc
pop
sub
cdq
jbe
cwde
dec
scas
push
mov
js
mov
pop
xchg
in
retf
in
xor
pop
(bad)
loop
lods
mov
(bad)
and
or
retf
jae
mov
ins
mov
shl
push
sub
ds
dec
xchg
outs
mov
ins
cmp
out
sti
pop
jne
push
cld
(bad)
add
sbb
sbb
shr
cs
ret
xchg
mov
pop
pushf
scas
addr16
or
cmp
sbb
stos
fdivr
jg
inc
outs
adc
ret
pop
cwde
daa
lahf
mov
xchg
fwait
lahf
lods
inc
mov
ret
add
test
shr
adc
jl
test
mov
add
clc
ror
mov
xchg
cmp
push
mov
mov
adc
push
test
ss
in
jbe
and
popf
gs
push
push
loope
sbb
ins
lods
neg
in
add
jb
sahf
(bad)
sbb
lods
fiadd
fneni(8087
lods
add
xchg
test
adc
scas
pop
movs
xor
push
pop
adc
gs
imul
imul
pop
in
(bad)
pusha
push
jnp
push
out
stos
adc
sbb
dec
hlt
jb
cmp
xor
cmp
cwde
mov
cmc
retf
ret
fidiv
fidivr
cli
and
push
rcr
pop
sbb
dec
xchg
pop
mov
stc
inc
mov
jl
dec
xor
ins
sti
sti
daa
push
or
push
popa
cli
mov
fmul
stc
and
xor
cmp
jnp
sbb
or
mov
sub
mov
xchg
ja
test
xchg
(bad)
sbb
lods
cdq
xchg
sub
std
jge
inc
mov
shl
popa
fdivr
movs
je
push
or
icebp
ret
ins
pushf
sub
(bad)
inc
iret
outs
pop
fstp
out
mov
or
int
cmp
les
jecxz
and
or
rcr
cli
test
aad
mov
xchg
or
pusha
sub
repnz
ficomp
mov
aas
add
mov
fwait
aad
add
xchg
(bad)
mov
xor
rcr
jl
into
fimul
cli
fwait
and
pop
xor
sbb
sub
cmps
mov
lods
dec
(bad)
ins
mov
pusha
push
sbb
sahf
retf
xor
fld
cmc
cmp
sbb
sub
xor
mov
mov
pop
jb
je
ret
popa
sub
ret
xor
mov
mov
dec
or
xchg
xrelease
mov
imul
dec
add
and
cmps
mov
adc
dec
clc
jmp
push
test
out
mov
push
scas
sub
mov
punpckldq
cli
inc
mov
ror
stc
inc
ja
lsl
mov
call
aas
(bad)
xchg
shr
addr16
rcr
cld
call
nop
int3
and
or
dec
(bad)
sahf
leave
out
mov
stos
not
test
mov
sbb
bound
and
sub
fsubr
and
or
inc
mov
fldcw
(bad)
add
xchg
and
popa
add
aam
lahf
pop
stos
sub
aaa
sbb
and
(bad)
push
mov
imul
aam
mov
ss
in
les
push
int
jmp
inc
mov
test
xchg
pop
push
dec
inc
hlt
std
mov
out
test
and
add
mov
out
addr16
mov
sbb
sub
xchg
movs
inc
cmp
rcr
or
into
fsub
cmp
lods
adc
mov
outs
cmp
cli
pusha
jmp
ja
jle
xor
xchg
mov
xchg
(bad)
adc
ror
sbb
cs
and
and
test
pop
dec
jnp
pushf
pop
mov
mov
sbb
add
adc
out
lea
ret
scas
push
clc
mov
aad
mov
mov
pushf
xor
sbb
xor
jmp
pop
xchg
test
shr
ret
dec
ret
mov
mov
fild
push
sbb
mov
jg
inc
adc
push
sbb
cs
adc
fstp
icebp
sti
add
in
jmp
ror
or
push
or
pop
xor
ror
repz
xor
jmp
jecxz
ss
aas
ins
push
cmp
je
xchg
jb
test
add
mov
mov
cmp
rcr
mov
push
xchg
stc
sbb
lock
jb
dec
fst
jmp
arpl
inc
out
lahf
push
fisttp
repz
cld
xchg
ins
mov
adc
push
outs
and
ins
movs
std
add
jnp
pusha
inc
dec
dec
retf
(bad)
int
push
lods
test
xor
lods
sbb
outs
or
xchg
push
pop
adc
stos
aaa
jo
cmps
sub
mov
nop
sub
(bad)
cli
ins
mov
mov
(bad)
jno
mov
not
mov
pushf
or
add
(bad)
push
fcomp
nop
jl
fbld
pop
mov
jl
jle
(bad)
mov
pop
das
test
add
sbb
push
or
sbb
inc
int
hlt
jnp
call
mov
lods
push
jmp
jmp
mov
jmp
std
mov
mov
dec
or
mov
xor
dec
push
sub
dec
cdq
test
add
xchg
adc
test
sub
push
stos
dec
push
movs
push
sahf
mov
gs
clc
push
mov
int3
dec
aad
sub
movs
(bad)
popa
or
xor
sbb
and
mov
scas
jae
test
mov
lahf
pop
rol
or
xchg
shr
mov
dec
dec
movs
ret
pop
hlt
dec
or
pop
shr
xchg
sbb
scas
cmp
ss
mov
mov
jnp
int
arpl
xchg
daa
test
sysret
jo
lahf
(bad)
jmp
dec
movs
ffreep
mov
test
ds
and
and
shl
inc
clc
aas
add
and
ret
jae
ins
sub
bnd
mov
dec
enter
rcl
pop
int3
hlt
pop
paddusw
pop
xchg
or
sub
out
lock
or
xchg
dec
push
test
adc
adc
push
ds
aaa
in
mov
frstor
fwait
cmp
hlt
xchg
aaa
ror
test
or
fnsave
pop
ret
pop
cs
(bad)
push
sub
xchg
add
add
cwde
add
test
mov
imul
sbb
push
pop
jecxz
pop
retf
sub
mov
xchg
cmp
adc
pop
mov
loope
imul
cmp
test
(bad)
jmp
scas
sti
jo
and
ret
lds
neg
loopne
cmc
(bad)
stos
enter
pusha
aaa
cld
jne
mov
(bad)
icebp
adc
mov
mul
pop
shl
sub
je
cld
jae
clc
or
ret
jb
xor
xor
mov
push
mov
adc
bound
or
and
mov
pusha
pop
sub
aam
ja
and
enter
out
mov
js
retf
sub
sbb
inc
mov
xor
popf
fadd
scas
pushf
leave
lahf
fild
inc
ds
scas
push
cmp
jmp
shl
pop
(bad)
sub
aad
test
fcomp
scas
sub
sbb
jne
sti
addr16
pop
(bad)
in
xchg
push
in
call
xchg
cmps
inc
mov
inc
inc
enter
jg
cld
enter
push
aam
sbb
out
hlt
or
push
adc
inc
popf
pusha
cmc
movs
jae
add
aad
popf
mov
pop
lods
push
loop
cmps
and
jmp
jmp
shr
leave
into
out
scas
push
push
dec
sub
inc
adc
mov
xchg
mov
(bad)
movs
and
xchg
or
stos
sub
adc
dec
pop
retf
ins
jge
fcom
push
in
mov
xchg
dec
fisttp
mov
rol
xchg
lea
mov
adc
inc
adc
test
hlt
outs
fcmovnb
(bad)
pop
(bad)
cld
push
xchg
gs
xor
sti
or
mov
retf
mov
test
cmp
and
xchg
loopne
jo
push
repz
lods
das
movs
test
cmps
jle
mov
fs
push
xlat
pop
jb
jecxz
mov
lahf
aaa
cli
int
mov
pop
jmp
inc
inc
push
lds
mov
jmp
(bad)
das
iret
test
pop
xchg
sbb
push
stos
fidiv
je
mov
and
fcomp
sub
fmul
push
adc
leave
or
add
test
enter
push
adc
jae
inc
loopne
addr16
pop
(bad)
sar
xchg
aam
(bad)
pusha
in
jmp
jle
inc
fs
es
mov
cs
out
test
int3
add
mov
mov
gs
sub
sbb
sub
rol
push
pop
mov
add
mov
push
jl
(bad)
sub
sbb
jo
dec
mov
imul
mov
inc
xor
test
pop
jmp
xchg
mov
shr
(bad)
lock
mov
xchg
or
call
cmp
daa
xchg
sub
repz
xor
imul
lods
sbb
mov
cmp
aaa
mov
adc
jmp
add
add
jp
dec
add
shl
inc
jmp
push
or
pusha
das
ret
push
sub
dec
cwde
iret
ds
cwde
arpl
jl
push
add
and
mov
out
adc
pop
jle
cmp
pop
mov
inc
cs
push
push
mov
scas
mov
shr
push
xchg
js
or
jne
sbb
movs
add
pop
call
jg
les
mov
arpl
or
and
dec
jmp
loope
fisttp
clc
dec
and
push
adc
jbe
push
jl
stos
ja
mov
inc
in
call
push
push
mov
mov
or
icebp
push
scas
xor
dec
and
lods
or
xchg
loopne
cld
pop
xchg
push
mov
jno
sbb
mov
xchg
cmps
outs
loope
arpl
out
push
stos
cmps
popa
or
add
jno
aam
mov
add
call
lods
mov
loopne
push
outs
dec
arpl
in
ror
add
add
adc
int
inc
push
mov
jecxz
dec
push
rol
(bad)
mov
jp
out
mov
nop
push
mov
stos
pop
xchg
into
mov
ret
adc
mov
sbb
cdq
xor
fsubr
jae
mov
pop
in
jmp
(bad)
inc
mov
cmps
mov
mov
int
shr
cld
xchg
cmc
xchg
jno
scas
lahf
add
fst
jg
push
sti
montmul
cmps
add
or
nop
iret
sbb
jp
add
imul
cmp
inc
fwait
leave
and
mov
adc
loop
sar
mov
mov
xchg
movs
mov
loop
pop
cmps
sub
shr
cdq
push
movs
sahf
jns
push
repz
scas
sbb
nop
imul
mov
pop
or
fdecstp
dec
lods
sbb
adc
sbb
test
jno
jle
es
or
fst
popf
je
out
dec
outs
jmp
adc
jae
sbb
pop
shl
out
pop
(bad)
cli
call
mov
pop
push
ffreep
or
test
shr
addr16
or
lahf
mov
inc
int
push
push
lea
mov
cmc
jg
sub
jne
dec
stos
sub
es
jae
adc
fistp
shl
test
sub
adc
lds
inc
test
iret
push
(bad)
loop
repz
or
or
pop
jle
mov
ins
push
xor
sub
fisttp
outs
stos
push
hlt
pop
cmp
je
sub
push
shl
mov
mov
mov
push
xchg
sti
lea
gs
or
ja
imul
in
out
jo
inc
jge
pop
push
adc
fiadd
push
mov
and
cmp
mov
sbb
jne
push
mov
sar
pop
jne
int
outs
stos
add
imul
adc
sbb
or
(bad)
(bad)
stc
sar
fld
fsub
and
out
je
sub
fadd
push
lock
xchg
dec
xor
dec
cli
add
outs
nop
fld
pop
jne
test
movs
mov
in
int
cmp
fnop
xchg
addr16
adc
ret
shr
pop
inc
adc
pop
shl
dec
xchg
call
jg
shl
push
cs
adc
(bad)
cwde
adc
xor
int3
sbb
pop
mov
mov
cmps
mov
sub
aaa
jg
dec
in
push
bound
sub
cmp
inc
les
data16
div
jp
fsubr
das
mov
(bad)
stos
call
xor
jl
lods
xor
ficomp
pop
and
jnp
rcr
adc
ds
push
cmps
push
jge
push
ds
sbb
(bad)
fimul
or
rcr
stos
or
sub
retf
pushf
mov
add
jnp
es
adc
ja
test
pop
(bad)
(bad)
aad
mov
mov
pop
pop
xor
das
push
add
inc
sbb
pop
aas
push
shl
jno
into
les
pop
adc
ficomp
in
rcr
sbb
push
cmc
mov
outs
mov
call
in
adc
and
sub
inc
loop
jmp
int3
and
rcr
cmp
out
sub
xchg
inc
push
mov
rcl
in
inc
out
inc
ret
(bad)
ror
or
or
fcmovb
inc
fistp
push
xchg
sbb
imul
push
mov
data16
adc
mov
xor
push
je
jmp
(bad)
in
loope
inc
lea
mov
sub
xchg
and
cwde
lahf
dec
dec
and
cmp
sbb
or
cmps
bound
hlt
xchg
test
ret
xchg
mov
jbe
(bad)
shl
xchg
shl
inc
jg
and
ins
pusha
pop
add
daa
rcr
mov
cli
loop
test
sub
lea
cmps
into
adc
sbb
retf
xchg
or
(bad)
sbb
pop
sti
and
je
dec
push
mov
mov
outs
add
push
mov
test
adc
ds
inc
daa
enter
jle
adc
pop
ror
xlat
fimul
nop
lahf
ss
in
adc
(bad)
sub
cmps
jne
and
call
fadd
pusha
pop
dec
out
aad
adc
sub
(bad)
loopne
xor
sbb
cmovno
xor
loope
outs
(bad)
xchg
das
repnz
and
sbb
mov
dec
inc
push
push
sub
les
mov
outs
test
repnz
sbb
fnstsw
mov
xor
or
jae
ins
sub
inc
std
dec
mov
inc
mov
pop
push
pop
cmp
enter
inc
es
mov
ins
imul
rcl
cmp
cmp
cld
xor
(bad)
std
push
mov
call
sub
push
mov
(bad)
int
jp
fwait
push
sbb
aaa
mov
and
cmp
jmp
imul
test
xor
sbb
fwait
lods
ins
jmp
and
push
fst
add
cwde
cmps
movs
leave
test
outs
cmp
pop
in
out
adc
xchg
xor
sbb
mov
cmc
sbb
xor
fst
stos
jg
sub
xchg
loop
inc
out
push
dec
test
jbe
sbb
in
call
xchg
adc
or
mov
xchg
lods
(bad)
pop
pop
push
adc
xor
mov
icebp
sbb
jle
loope
aad
jmp
icebp
pop
fnop
daa
jns
mov
push
pop
or
mov
ins
cmp
or
sbb
out
pop
jbe
pop
mov
stos
push
add
iret
hlt
cdq
pop
cs
sbb
das
test
xchg
pusha
inc
(bad)
inc
icebp
jl
jmp
sti
inc
mov
or
loopne
dec
inc
outs
mov
xchg
test
jl
cmp
(bad)
adc
pop
jmp
jmp
fcmovnbe
mov
ja
lock
and
les
clc
pop
scas
add
hlt
xor
push
in
pusha
retf
or
ret
add
pop
in
pop
sahf
fisubr
push
inc
in
sub
jne
push
adc
pop
iret
pop
mov
jns
hlt
ja
loop
jb
movs
aam
aad
outs
jns
clc
xor
loope
cmp
loope
jae
jmp
das
xchg
cs
(bad)
lds
icebp
jne
jb
push
pop
call
repz
push
dec
xor
retf
pop
push
leave
mov
sub
sub
ja
enter
test
iret
inc
in
inc
fdivr
cmp
int
sti
in
stc
movs
mov
sub
xor
mov
sub
pop
(bad)
add
imul
or
cmp
imul
pop
enter
xor
lahf
sbb
pop
sahf
mov
sbb
sti
cmp
xor
lds
lock
fld
pop
push
js
pop
sbb
pop
jae
stc
mov
sub
fidiv
call
shl
mov
or
stos
or
imul
mov
(bad)
xchg
push
loope
aam
mov
jae
sbb
add
leave
sbb
dec
je
add
das
retf
adc
adc
mov
mov
outs
test
sub
popa
shl
mov
inc
popf
xchg
add
cmp
into
add
pushf
sbb
jne
cwde
inc
test
lea
int3
push
bound
dec
sbb
das
push
retf
es
repz
and
or
mov
adc
jno
xlat
fsubr
mov
mov
mov
std
ret
stos
cmp
jno
jecxz
sbb
adc
mov
jp
(bad)
cmp
jne
inc
and
sahf
dec
inc
inc
push
mov
lea
mov
imul
arpl
bound
(bad)
mov
pop
xchg
push
arpl
fcmovnbe
je
jmp
fs
or
in
jge
cmp
xor
imul
test
ret
dec
lahf
fsubr
mov
out
call
loop
sbb
int
lock
xor
sub
sbb
imul
movs
push
dec
sub
add
daa
fstp
loop
push
xchg
pop
dec
in
jne
sub
out
push
mov
adc
add
cs
aad
pop
add
cmp
ins
mov
jmp
std
aaa
fnsave
push
arpl
shr
add
pop
lds
xchg
test
repnz
lahf
mov
movs
cdq
js
popa
in
sbb
sub
jae
inc
hlt
and
imul
iret
pop
int3
es
dec
loop
add
arpl
lock
repnz
sub
add
inc
adc
sub
sbb
xor
lds
inc
adc
test
mov
pop
addr16
mov
es
adc
xchg
xlat
popa
cmp
push
add
sti
pop
jmp
sub
sbb
gs
mov
scas
push
inc
(bad)
aad
sahf
scas
inc
jmp
mov
nop
sbb
scas
push
into
cmp
movs
pop
(bad)
js
sub
out
push
(bad)
fadd
shr
mov
retf
xchg
imul
xchg
push
or
movs
aam
add
add
out
mov
ins
mov
xchg
nop
jp
call
bound
pcmpeqb
mov
shl
fisubr
pop
jge
sbb
inc
mov
sub
test
xchg
jno
ret
and
dec
inc
lds
out
pop
ror
arpl
nop
inc
(bad)
das
movs
cli
push
jle
xchg
stos
mov
enter
sub
xchg
push
cs
inc
out
dec
adc
mov
push
outs
gs
nop
xor
nop
gs
sbb
or
movs
and
push
mov
dec
xchg
jne
cmp
push
mov
mov
jl
movs
mov
sub
ret
lahf
mov
mov
js
xchg
xchg
add
cwde
ins
cmp
or
mov
leave
sub
pop
shl
xchg
das
fiadd
push
jns
retf
jae
aaa
sub
fisubr
mov
cmp
icebp
scas
xchg
push
mov
add
add
ins
xchg
cdq
xchg
cmps
mov
imul
push
sahf
mov
loope
fild
out
mov
jno
adc
outs
adc
adc
ror
loop
shr
mov
fstp
retf
and
cmp
mov
js
movs
ret
sub
clc
push
push
inc
in
jno
push
sahf
mov
popa
sub
test
cmc
out
call
les
fstp
and
pop
push
ins
sub
scas
pop
cs
repz
or
lock
lock
adc
sub
std
inc
jg
les
fcom
ror
cs
and
mov
xchg
push
sar
(bad)
loope
cmp
fidiv
fnsave
cmp
cdq
jmp
sahf
dec
ja
pop
xchg
mov
xchg
lock
int3
cmp
xor
jae
(bad)
mov
add
jmp
dec
aad
out
dec
aaa
fistp
mov
loopne
fsub
push
loop
aaa
loop
sub
and
add
cli
xchg
loope
add
fwait
cmp
jae
sbb
sub
mov
sbb
xchg
(bad)
xchg
xlat
mov
outs
xor
push
cwde
rol
cmp
jnp
fidiv
pusha
fs
test
jg
push
daa
mov
call
neg
mov
xor
sbb
in
cld
ss
xor
pop
or
in
int
pop
add
pusha
sbb
mov
ds
add
iret
cmc
pop
call
ja
mov
fdivr
adc
dec
sub
adc
cwde
je
test
push
and
jae
retf
xchg
xchg
mov
and
mov
dec
adc
mov
mov
sbb
xchg
inc
aad
push
(bad)
inc
mov
or
stos
push
(bad)
push
mov
pusha
aad
fcmove
fwait
test
push
sub
fwait
push
push
xlat
mov
pop
out
jg
pop
push
jle
mov
inc
(bad)
fdivr
push
mov
and
dec
and
out
inc
cmp
xchg
add
adc
cmps
out
or
jecxz
aam
test
and
and
sbb
rcl
retf
stos
xor
dec
mov
sbb
xor
push
int3
addr16
cmp
int3
inc
je
das
xchg
inc
ror
loope
call
xor
retf
mov
xor
mov
out
inc
xchg
jp
push
(bad)
mov
sub
jb
mov
cs
inc
or
mov
cmps
lds
imul
add
rdtsc
xor
mov
mov
push
fidiv
mov
sub
imul
test
leave
jmp
shl
retf
enter
inc
(bad)
lahf
out
pop
push
popf
lock
cmp
test
rol
sahf
retf
fwait
mov
ror
or
cwde
xchg
into
mov
or
mov
cwde
and
add
ins
xchg
sar
jbe
mov
(bad)
xchg
shr
mov
and
std
jo
inc
pop
test
cmp
sbb
xchg
dec
(bad)
adc
push
sub
js
stos
cmps
mov
ins
fwait
call
xor
loope
mov
mov
mov
popa
gs
pop
lods
nop
iret
push
ret
out
outs
inc
in
fs
nop
sbb
mov
call
pop
jae
sub
cmc
repnz
xchg
(bad)
lods
dec
movs
push
mov
add
and
sub
push
pusha
cmc
xchg
and
and
or
and
(bad)
(bad)
lods
fcomp
es
and
xor
push
lds
arpl
repz
jbe
sub
cmp
rcr
test
jecxz
mov
shr
jo
inc
scas
pop
ror
xor
outs
pushf
aam
rol
int
and
inc
jle
xchg
repnz
and
or
dec
stos
or
enter
clc
pop
and
mov
fwait
xchg
gs
aam
std
stos
mov
and
jg
cmps
mov
mov
and
jnp
mov
xor
push
jle
je
sbb
and
ret
jbe
push
pop
jmp
sub
gs
mov
xchg
test
mov
dec
inc
and
adc
arpl
lods
lods
into
(bad)
pop
xor
std
aam
sub
lea
adc
ret
inc
(bad)
xor
adc
outs
dec
mov
mov
retf
out
nop
xchg
mov
outs
push
sub
pop
mov
push
mov
pop
sub
dec
ins
(bad)
jg
stos
lds
push
inc
test
cli
mov
ja
(bad)
mov
cmp
sub
lods
pop
pop
jb
repnz
pop
scas
retf
in
jge
inc
leave
fsub
das
mov
xchg
xchg
nop
cli
ret
lahf
pop
sbb
fisttp
cmps
scas
inc
into
and
ror
retf
in
(bad)
out
scas
test
hlt
or
mov
xor
daa
dec
rcr
adc
fmul
pop
retf
outs
ret
xchg
sbb
mov
inc
cmp
jmp
dec
cdq
push
inc
ja
call
shl
xchg
xchg
stos
sub
arpl
mov
mov
pusha
push
es
mov
jg
jmp
xor
pop
cld
xor
mov
clc
jne
and
mov
inc
pusha
loop
inc
push
popa
stos
cmp
or
and
sahf
test
mov
pop
mov
inc
hlt
jp
xchg
scas
int3
ins
repz
cmp
and
cwde
xor
mov
mov
cld
sub
mov
jmp
adc
sub
arpl
imul
xchg
and
xchg
cmp
xchg
cmp
cwd
movs
mov
in
rol
inc
aaa
shr
push
jmp
fucompp
cmp
test
out
jmp
jl
xchg
mov
sub
retf
fdivp
push
sub
dec
ret
mov
jecxz
mov
push
sbb
mov
sbb
loope
cli
or
dec
fnstsw
jmp
ds
and
adc
mov
inc
xor
stos
fsub
pop
in
sub
pop
ror
sub
jg
adc
jnp
loop
into
pop
fnstenv
ror
sub
add
mov
call
xchg
int3
jle
push
push
ins
fadd
xchg
mov
inc
and
add
call
inc
xchg
xchg
lods
xchg
sbb
sbb
add
or
pop
cmc
xlat
fsubrp
sbb
cwde
sub
ins
lods
mov
mov
stc
call
jo
push
data16
ja
out
jae
popf
cwde
out
push
test
(bad)
push
push
lahf
jo
sbb
cmp
cmp
adc
pop
pop
ins
cmp
mov
ret
dec
pop
and
daa
outs
push
stos
stc
xor
and
cwde
(bad)
movs
or
xchg
xchg
test
neg
jb
push
mov
dec
push
jmp
xchg
imul
out
pop
sbb
sbb
mov
jno
mov
push
cli
dec
ret
push
push
test
jp
push
push
inc
dec
jecxz
dec
xor
dec
sub
lods
inc
cmovns
xor
es
aas
outs
out
add
jl
scas
leave
add
call
cmp
pop
inc
mov
leave
lea
sub
push
mov
jo
sbb
data16
and
mov
xchg
and
aam
mov
outs
cli
rcl
xchg
pop
push
dec
ss
cmps
push
(bad)
imul
cli
scas
stos
out
nop
mov
adc
mov
test
cmp
movs
push
cmps
lods
xchg
jns
and
and
dec
lahf
jg
and
xor
in
lods
inc
inc
mov
out
pop
cs
mov
and
pop
jne
cmp
mov
add
push
add
dec
xchg
inc
mov
mov
sbb
ins
jg
iret
popa
sub
or
repz
fcomip
push
pop
daa
test
xchg
xchg
mov
xor
bound
shl
inc
fdivr
push
mov
cld
add
cs
sbb
ins
and
add
or
xchg
pop
xor
bnd
add
out
loope
mov
movs
add
xor
cli
pop
int3
ret
jae
pop
xor
add
cmp
sar
sub
jo
ins
cmp
mov
mov
lea
dec
sti
fidivr
clc
mov
add
xchg
ds
shl
scas
loop
aam
cs
xor
dec
stos
iret
mov
mov
or
out
adc
jge
push
fcmovbe
cmp
pop
adc
push
cmp
in
scas
xchg
imul
repnz
jb
dec
xor
out
int3
(bad)
push
mov
cmp
dec
movs
add
xchg
cmps
js
dec
or
idiv
dec
ret
mov
cli
xor
fldcw
jb
mov
out
and
lock
xchg
adc
lds
cld
sub
bound
cli
mov
sbb
push
inc
pop
sub
cdq
xor
add
lods
sar
movs
cs
mov
jnp
cli
push
inc
jl
cmp
popf
jmp
scas
mov
imul
shl
in
int
cmp
cmp
jae
sub
ffreep
in
ret
cld
inc
outs
shr
dec
add
cli
int3
cmp
jle
or
clc
fstp
iret
inc
in
shr
xor
jge
push
dec
mov
jg
sub
or
imul
iret
inc
push
xchg
icebp
mov
(bad)
pop
push
jae
push
test
jmp
daa
(bad)
cmc
jl
mov
cmp
inc
sbb
pop
fmul
adc
and
lods
dec
xchg
adc
jmp
lahf
gs
push
outs
push
or
loopne
(bad)
mov
adc
sbb
dec
(bad)
pop
cwde
js
loope
ret
inc
movs
add
cwde
dec
push
cmp
test
cmps
or
fwait
mov
leave
pop
fmul
nop
pop
(bad)
adc
adc
in
(bad)
stos
pop
pop
outs
test
jge
mov
scas
adc
jno
push
div
sbb
rol
fmul
pop
vmovlhps
ret
daa
jns
lahf
addr16
mov
cmp
or
enter
sub
push
fst
(bad)
xor
ret
(bad)
mov
cmp
or
leave
and
mov
xor
dec
retf
jo
inc
mov
lock
outs
aas
mov
imul
sbb
xor
and
adc
aad
push
push
js
push
xchg
add
je
fcom
mov
int3
push
(bad)
test
sar
pusha
shr
fwait
cwde
pop
jnp
sub
pop
dec
dec
pop
push
hlt
das
pop
bound
in
repnz
pop
rcl
dec
fstp
js
xchg
lods
add
retf
cmp
or
outs
int
add
mov
inc
xchg
(bad)
push
push
and
dec
ror
cli
pushf
(bad)
xchg
pop
(bad)
fsubp
ins
jne
mov
ja
mov
sub
repz
jae
out
add
push
inc
mov
pop
aaa
cwde
shr
fist
fcmovnu
fs
sbb
pop
jne
sti
addr16
mov
mov
nop
repnz
mov
call
sub
lock
push
pusha
fmul
jne
jmp
nop
cdq
mov
cmp
jle
fiadd
imul
das
mov
jg
int
arpl
add
fld
inc
jns
jmp
xchg
hlt
xlat
mov
jo
mov
sbb
int
add
push
sub
dec
pop
sub
push
leave
lods
stos
fidivr
sub
mov
jle
jge
push
dec
jne
add
pop
ret
test
and
das
addr16
adc
pop
aas
or
pop
in
sub
or
add
mov
dec
pushf
xchg
cmp
lds
popw
pop
ror
(bad)
sub
or
cmc
imul
sbb
or
adc
pop
ins
jb
adc
lock
cld
ins
scas
shr
(bad)
and
sub
and
bnd
pop
pop
rcl
jo
push
(bad)
nop
mov
(bad)
sub
pop
loope
and
ror
dec
and
or
enter
adc
or
jo
sub
inc
xchg
imul
fst
out
cmps
adc
rcl
push
dec
mov
ja
popa
mov
sbb
xchg
mov
cmc
xchg
and
gs
dec
shr
mov
or
in
mov
mov
dec
and
cmp
cdq
xchg
cmp
cmps
aas
js
retf
or
sti
lds
dec
shr
push
popa
lods
adc
dec
and
cmc
(bad)
pop
push
imul
stc
in
dec
add
adc
and
and
push
mov
push
scas
mov
dec
mov
ret
ret
jg
rol
xor
pop
je
aad
(bad)
les
and
add
data16
adc
dec
hlt
pop
ins
push
test
inc
shl
pop
mov
fstp
jl
xor
add
pop
popf
fiadd
cmps
leave
sbb
xchg
mov
sbb
push
nop
and
mov
scas
cmps
in
loopne
add
jmp
(bad)
push
imul
das
or
pop
cmp
jne
int3
dec
inc
and
(bad)
pop
add
cmp
jmp
dec
mov
mov
push
idiv
xchg
aad
ja
out
inc
xchg
jnp
ss
or
or
lods
xchg
mov
out
shl
add
cmp
test
cmp
jmp
stc
jne
aam
call
push
mov
gs
in
push
je
and
xchg
inc
pop
sub
daa
mov
or
mov
cs
test
push
popf
push
popf
ror
jnp
mov
xchg
bnd
test
dec
outs
dec
mov
loope
sbb
outs
or
push
or
in
push
inc
push
cmp
nop
ds
xor
sub
xor
and
pushf
in
popf
push
mov
lahf
es
fld
into
sbb
inc
sbb
sub
xor
dec
jg
push
jno
js
mov
hlt
inc
shl
call
mov
fld
add
int3
scas
jecxz
inc
enter
(bad)
lock
xchg
mov
inc
xor
sub
test
pop
inc
je
or
mov
fmul
xchg
mov
xor
pushf
in
xchg
or
mov
scas
jg
mov
dec
rcr
mov
retf
add
xor
mov
fisubr
mov
push
fs
and
fnstenv
rol
test
mov
push
ffreep
mov
and
js
lea
cmp
adc
outs
push
hlt
mov
adc
aam
sub
mov
sub
mov
aaa
push
sbb
mov
shr
call
outs
jo
cmp
sub
or
imul
out
xchg
aaa
cmp
jae
cld
in
std
push
or
sub
pop
push
push
dec
loopne
test
xor
push
push
pop
cmp
scas
js
jecxz
mov
sub
and
arpl
cmp
out
test
mov
and
xor
out
jne
call
cmps
cmp
sbb
(bad)
jle
jmp
call
mov
xchg
push
ret
das
sub
nop
pop
mov
sbb
jbe
fs
xor
fwait
out
js
push
outs
mov
nop
sub
mov
push
ins
ret
ins
mov
sub
test
enter
cmps
cdq
cld
jnp
xchg
in
adc
mov
or
inc
inc
imul
xor
lods
stc
repnz
push
xor
(bad)
pop
pop
or
inc
int
in
pushf
mov
pop
jge
jo
dec
mov
sbb
and
dec
add
push
mov
aas
xchg
xor
add
call
cmp
push
xchg
bound
(bad)
cmp
lods
xchg
inc
mov
sahf
pop
mov
and
stc
ins
cmp
mov
xchg
pop
mov
daa
or
sbb
cmp
or
or
test
sub
and
fsub
add
shl
mov
data16
jne
imul
and
jecxz
jmp
jge
or
dec
js
fsubr
mov
xor
sbb
mov
sbb
loopne
clc
adc
xchg
in
or
push
sub
mov
or
(bad)
cmp
sbb
call
addr16
sahf
pop
movs
mov
xchg
out
jle
xor
rol
add
(bad)
fnstcw
adc
cmp
mov
cmc
or
add
jp
inc
lds
adc
xchg
aad
or
sti
mov
stos
add
aad
cdq
or
stos
ins
and
popf
or
and
xchg
mov
dec
mov
jno
stc
enter
push
test
in
sbb
mov
sti
out
fcomp
mov
cmps
mov
ins
loopne
sbb
movs
sub
push
jmp
and
loop
fild
(bad)
jne
dec
loopne
test
or
add
jb
aad
jge
inc
imul
sbb
clc
push
(bad)
movs
or
movs
pop
les
pop
add
xchg
mov
push
popf
push
repnz
jmp
inc
rcr
jl
adc
div
fmul
cs
enter
cmp
sub
cmp
xchg
(bad)
or
popa
cdq
or
inc
or
mov
push
push
adc
cmc
jecxz
add
inc
cmp
test
cmp
ror
adc
inc
jbe
xor
xor
inc
repnz
nop
fstp
dec
sub
repz
adc
fistp
out
push
mov
dec
mov
clc
sbb
jb
cld
jg
dec
lods
mov
sub
xor
mov
and
push
dec
push
arpl
fstp
fadd
or
icebp
retf
add
popf
scas
and
jae
adc
ss
mov
call
ins
(bad)
mov
rcl
paddb
and
adc
aas
repnz
add
mov
int
cli
into
push
int
or
fxam
movs
xchg
aad
adc
aam
daa
jns
test
mov
out
push
retf
jl
hlt
stc
pop
aaa
push
test
popf
sub
add
dec
xor
cmps
mov
sub
movs
test
mov
pop
pop
push
mov
jge
xchg
nop
in
cmp
pop
xor
or
and
sub
outs
push
ss
scas
mov
sbb
or
jle
pushf
pop
loopne
jg
mov
or
or
mov
and
popa
inc
xor
popf
inc
push
mov
push
mov
pop
fnsave
cmp
lods
mov
dec
je
inc
add
movs
add
cmp
cmp
mov
mov
sub
xchg
cdq
sub
mov
retf
call
xor
or
std
or
and
inc
das
pmulhw
jmp
rcl
push
cmp
inc
das
cwde
nop
fld
mov
and
sbb
cmc
cld
cmc
daa
push
xchg
push
or
call
bound
popa
(bad)
imul
mov
in
fcomp
psllq
dec
sbb
and
(bad)
adc
inc
dec
jmp
jns
(bad)
in
popa
sbb
inc
outs
lds
sub
cwde
push
cmp
movs
enter
fsubr
out
xchg
retf
test
xchg
jmp
add
jg
mov
(bad)
mov
sti
call
inc
test
sti
xchg
into
data16
mov
and
sbb
mov
movs
push
cmp
lods
add
std
mov
mov
mov
adc
push
pop
in
(bad)
jmp
adc
hlt
mov
xchg
cmp
sbb
jmp
mov
and
in
aad
push
or
and
xchg
pusha
imul
(bad)
mov
pop
xchg
mov
neg
(bad)
dec
inc
loop
jge
add
shl
retf
xchg
lods
pop
sbb
pop
iret
mov
sub
not
xlat
mov
cmp
faddp
adc
fnstenv
xchg
mov
bnd
sbb
push
push
fbld
popa
je
mov
sub
inc
pusha
nop
test
sbb
jne
add
lds
sahf
or
(bad)
mov
cmp
pop
pop
arpl
adc
pop
dec
imul
outs
cmp
mov
xor
test
pop
jb
(bad)
or
and
adc
mov
push
jne
inc
inc
cli
aas
pand
inc
xor
data16
or
mov
jg
ret
xchg
outs
sub
push
pushf
inc
sahf
mov
std
nop
xlat
or
xchg
dec
sbb
or
add
xchg
add
mov
fs
pusha
jbe
lods
sbb
adc
jmp
cwde
cmp
push
or
faddp
daa
mov
xchg
jecxz
xchg
xlat
data16
jo
aad
push
dec
loopne
les
pop
or
je
mov
jp
inc
loope
jbe
pop
mov
jo
pop
pop
popa
fdiv
xor
imul
rol
sub
mov
pushf
sbb
sbb
mov
and
lock
inc
and
jbe
mov
mov
jge
inc
imul
test
xor
in
bsr
add
outs
(bad)
and
sub
dec
dec
jae
sbb
dec
sub
jp
in
jb
cmp
or
into
in
cmps
add
xchg
add
xor
inc
sub
lods
stos
pop
add
push
test
jne
(bad)
mov
neg
sub
ror
mov
lock
pop
aas
addr16
(bad)
push
ret
mov
adc
clc
add
mov
mov
sub
push
icebp
and
ins
enter
out
imul
pop
inc
inc
dec
call
mov
cmp
out
mov
push
or
(bad)
or
mov
rol
inc
push
and
xchg
repz
repz
adc
xchg
inc
pop
dec
fld
retf
mov
push
or
bound
push
jmp
mov
dec
test
jmp
cmps
shr
add
les
aas
mov
fst
xchg
cdq
test
pop
aaa
das
cli
mov
ins
das
mov
scas
mov
add
gs
pop
mov
push
out
push
mov
xchg
lods
adc
ja
retf
add
std
popf
fwait
popf
pop
jb
cmc
fmul
push
mov
fiadd
out
ja
mov
and
inc
ds
push
or
imul
mov
mov
arpl
dec
mov
sti
js
(bad)
and
imul
lock
mov
div
fild
jp
outs
sbb
fs
push
jae
sub
and
shl
jo
xchg
and
mov
jb
push
mov
and
cmovg
in
jb
xlat
sbb
adc
and
add
sahf
(bad)
fcomp
sbb
(bad)
imul
pop
jno
cmp
pop
cld
sbb
or
out
ja
ret
fsub
sub
fsubr
call
fsub
scas
push
jno
lods
xchg
jecxz
cmp
xchg
hlt
mov
push
push
pop
pop
shr
call
mov
add
lock
mov
mov
test
imul
imul
hlt
pop
push
cmp
xor
stos
fs
push
test
jp
clc
adc
jp
in
int3
xchg
dec
inc
in
and
(bad)
out
push
sub
retf
adc
push
retf
add
xchg
and
mov
push
pop
xor
retf
enter
sub
in
xor
adc
inc
aas
loopne
loope
cmp
test
pop
sub
mov
pop
xchg
pop
ret
call
xor
pcmpeqw
jbe
in
loopne
jl
jmp
pop
xchg
repnz
mov
pushf
(bad)
call
pop
xchg
jg
(bad)
xchg
repz
push
push
cwde
mov
cmp
movs
fs
push
mov
rol
call
jle
pop
and
cmp
push
aam
mov
pop
outs
in
call
sti
frstor
or
inc
std
rol
mov
sub
pop
sub
inc
push
mov
ret
dec
inc
ja
retf
in
mov
inc
mov
inc
mov
rep
scas
std
mov
cld
inc
ret
xchg
pop
xor
dec
xlat
(bad)
(bad)
mov
fidiv
js
les
sbb
mov
sub
out
js
aaa
cmps
and
shl
test
ret
lds
test
dec
bound
mov
cmp
arpl
jbe
mov
out
cld
push
test
lds
mov
call
push
and
arpl
out
cmp
xchg
inc
mov
adc
hlt
aam
mov
outs
sub
ja
push
ja
(bad)
sub
sub
imul
mov
cmp
inc
xchg
xchg
ja
jl
xchg
add
test
or
arpl
aad
jne
inc
out
jp
(bad)
cs
dec
gs
test
in
adc
leave
btc
(bad)
mov
enter
addr16
cmp
out
cmp
scas
sub
sub
pextrw
add
bound
push
xor
push
loope
fwait
dec
sbb
and
dec
out
xchg
pop
mov
int
pop
push
cmp
fmul
lods
arpl
adc
in
test
out
and
out
add
mov
aaa
jbe
push
cmc
xor
pusha
rol
push
jle
pop
or
fidivr
call
shl
push
repz
clc
xor
outs
inc
adc
xchg
iret
sbb
mov
ret
xor
ds
not
lock
or
arpl
xor
ror
ins
sahf
inc
sahf
out
jne
outs
adc
addr16
not
lahf
push
int
stos
dec
mov
in
jmp
lea
push
add
jmp
in
push
pop
mov
cs
dec
fcom
enter
pop
mov
in
mov
lods
cmp
xchg
mov
jae
cmp
es
xor
add
std
jmp
lods
cmps
mov
retf
cmp
jb
test
mov
popa
xchg
daa
arpl
ds
fwait
xor
pop
and
inc
jle
push
aas
mov
stc
clc
adc
jae
or
or
pop
or
pop
adc
sub
mov
jmp
sahf
cmps
movs
dec
(bad)
sti
js
mov
repnz
sbb
mov
mov
dec
(bad)
sbb
dec
jl
jbe
mov
xchg
sahf
cmps
je
dec
cli
and
enter
hlt
movs
sbb
data16
mov
mov
xchg
shr
jns
scas
ss
adc
sbb
mov
push
movs
sub
lods
pop
xor
sbb
jecxz
mov
xor
and
(bad)
fbld
and
es
cs
push
jb
inc
sub
dec
mov
add
push
mov
sahf
inc
mov
rcl
push
mov
(bad)
loope
cmp
fwait
pop
adc
je
test
adc
pop
push
sbb
ret
and
aad
outs
mov
pushf
mov
jo
fadd
mov
nop
js
mov
ret
mov
in
add
enter
add
jge
pop
jp
out
jo
loopne
xchg
add
or
aas
pop
xchg
xchg
fadd
lahf
push
cwde
loope
enter
popa
das
sbb
imul
push
cli
xchg
sbb
iret
cs
or
add
inc
sub
rcr
scas
fsubr
xchg
sbb
int3
jb
push
pop
js
cmp
push
mov
jbe
sub
aad
or
jmp
dec
out
out
nop
push
sub
mov
shl
rcr
mov
mov
jl
inc
je
dec
out
aaa
(bad)
mov
and
adc
popa
mov
and
mov
or
inc
ret
adc
out
ss
movs
icebp
stc
inc
mov
pusha
loope
test
ficomp
cs
(bad)
dec
nop
mov
adc
idiv
(bad)
stc
pop
in
call
cmps
stc
data16
retf
das
jne
jecxz
ror
mov
outs
mov
push
(bad)
stos
jnp
mov
mov
dec
sti
inc
inc
retf
imul
mov
add
cmp
push
push
fs
or
cdq
xchg
adc
and
stc
xor
fsubr
and
clc
call
retf
mov
jmp
aad
push
add
jne
pusha
add
cmc
pop
inc
or
xlat
dec
es
xchg
and
xchg
inc
movs
pushf
clc
scas
js
or
imul
push
leave
les
fild
add
sub
push
jecxz
mov
mov
push
and
call
mov
out
inc
mov
sti
fsubr
icebp
xor
scas
js
js
cmps
cmc
pop
scas
ret
xchg
jmp
or
xchg
mul
mov
inc
retf
or
js
inc
sub
pop
jne
sub
popa
mov
sbb
fiadd
(bad)
mov
movs
and
(bad)
push
jbe
xchg
gs
test
outs
repnz
cmp
dec
pop
scas
pop
lods
icebp
stos
xor
mov
and
jge
pop
nop
sub
jge
dec
jle
or
xchg
dec
pop
daa
push
in
sbb
cwde
xchg
mov
(bad)
adc
and
jmp
dec
loopne
cmp
mov
xchg
push
hlt
lea
cmp
jle
call
or
mov
mov
loope
mov
out
in
xchg
inc
(bad)
popf
cmp
cmc
or
sbb
repz
aas
xchg
aam
add
mov
xchg
mov
sub
ret
lds
sbb
mov
xchg
fdivp
sahf
inc
mov
mov
mov
imul
xor
mov
mov
sub
loope
pop
mov
int3
dec
push
jns
mov
adc
add
into
push
cwde
std
fwait
out
cmp
mov
push
in
aaa
xchg
bound
nop
imul
adc
mov
push
mov
jnp
sub
(bad)
xlat
movs
ja
mov
cmp
jl
scas
mov
xor
or
pop
cmp
hlt
adc
add
loope
test
sub
xlat
and
xchg
mov
xchg
aam
out
lahf
fistp
mov
pop
adc
aad
rol
hlt
adc
mov
mov
das
adc
pop
xor
shl
test
shr
pop
xchg
xchg
(bad)
aam
pushf
mov
nop
pop
(bad)
push
sub
(bad)
sbb
mov
pop
loope
xor
pop
xor
pop
repz
rcl
xchg
add
adc
dec
popa
cmps
dec
addr16
jecxz
dec
push
aad
js
data16
stos
pop
sub
sti
icebp
push
pop
cmp
push
shr
test
jmp
xor
out
lds
repz
hlt
call
mov
xor
mov
or
outs
out
cmp
ret
icebp
push
push
retf
into
adc
inc
xchg
aas
xchg
sub
imul
aaa
ret
lds
gs
cmp
nop
imul
mov
xor
jmp
mov
ins
fst
repz
icebp
mov
int3
mov
(bad)
fisub
mov
jne
xor
jmp
mov
and
push
enter
add
sub
test
ins
aad
retf
pop
sub
(bad)
xchg
jns
jmp
in
jmp
iret
ins
mov
les
retf
repnz
cwde
in
movs
add
rcl
mov
sub
xor
(bad)
jmp
pushf
jnp
stc
push
mov
push
push
xor
gs
cmp
or
push
sub
push
cmp
dec
imul
cmc
mov
or
jecxz
cli
fnsave
mov
pop
jg
add
rcr
sub
push
mov
or
and
sub
loop
movs
shl
nop
sub
mov
dec
stos
scas
cmp
lea
dec
mov
movs
xor
mov
sub
data16
push
adc
jne
pop
test
test
add
cmps
mov
(bad)
sahf
clc
push
adc
mov
fcom
cmp
and
push
jp
inc
push
(bad)
loope
aaa
cmps
in
in
clc
ss
pop
cmp
in
pop
or
jmp
push
add
loop
xchg
xor
fdiv
enter
stos
jno
cmp
into
dec
in
cmc
xor
adc
inc
jg
add
jae
mov
mov
arpl
repz
pushf
push
cmp
mov
fcom
and
arpl
pop
rol
mov
and
xlat
inc
(bad)
pop
jbe
sub
pop
sub
push
adc
jmp
fcom
into
in
or
in
push
out
cmc
fmul
jae
adc
int3
jns
ds
ret
mov
jae
jae
sar
icebp
out
jb
sub
mov
jge
inc
movs
imul
cmps
jecxz
mov
fucomi
jg
dec
jmp
aaa
xrelease
and
cmp
aam
imul
movs
or
outs
jge
fs
movs
call
(bad)
push
cld
push
into
push
aam
mov
adc
mov
lods
push
(bad)
cmps
inc
aad
push
sbb
retf
popf
in
(bad)
es
cmp
lahf
test
inc
dec
int
out
push
and
in
sti
jl
(bad)
jmp
xlat
mov
mov
adc
out
mov
jge
(bad)
adc
pop
div
xor
and
pop
inc
xor
shl
fisttp
cmp
add
and
cld
scas
call
push
scas
ror
loop
out
pop
out
arpl
dec
setle
mov
out
cmp
jmp
mov
jmp
call
movs
das
pop
xor
xchg
pop
mov
stc
jmp
mov
dec
mov
dec
xchg
rcr
sbb
add
(bad)
pop
mov
scas
and
push
xchg
xor
bound
jmp
js
xchg
ss
mov
cmp
cmp
mov
(bad)
movs
cmp
inc
outs
retf
cmp
mov
sti
push
jb
or
ret
add
and
pop
imul
stos
mov
xor
mov
cmps
ffree
adc
jle
(bad)
jmp
(bad)
jno
mov
pop
dec
ds
mov
mov
out
jmp
sub
mov
test
mov
(bad)
test
cmp
push
in
cmc
jns
(bad)
cmp
jmp
sbb
ins
sbb
and
neg
cmps
ror
inc
mov
fcmovb
aaa
xchg
clc
adc
mov
pop
arpl
dec
call
adc
fstp
inc
les
mov
xor
sbb
(bad)
loopne
xor
test
xor
jae
les
pop
sbb
ds
in
outs
adc
pextrw
sub
push
mov
mov
sahf
fsubr
jnp
or
mov
jmp
enter
add
sti
loope
shl
(bad)
jns
stc
lahf
push
pop
cmp
push
jmp
jle
adc
add
push
out
div
std
jbe
aas
shr
xor
out
adc
adc
push
arpl
ret
cdq
sbb
test
fdiv
loope
push
pop
add
xlat
lods
inc
bound
adc
push
push
(bad)
cmp
popf
inc
cmp
shl
lea
mov
jo
test
dec
jmp
fidivr
shl
sub
fdiv
xor
push
loop
adc
out
mov
push
sbb
int3
fisttp
add
out
jle
mov
and
dec
xor
data16
lds
dec
inc
jae
and
add
push
es
int3
pushf
push
jmp
sub
jecxz
mov
movs
mov
loopne
movs
repnz
lds
in
test
push
lock
clc
mov
movsx
(bad)
jbe
mov
std
pop
mov
adc
sub
jb
or
movs
mov
inc
and
gs
popa
sub
out
dec
rol
call
out
adc
add
mov
cmp
add
jp
stos
test
aad
je
jo
sub
cs
call
push
jo
sbb
adc
adc
sbb
xchg
lods
cmp
leave
sbb
push
frstor
fst
std
adc
inc
xchg
or
std
and
jmp
idiv
lock
fsubr
cmp
pusha
stos
test
xor
xlat
dec
jecxz
cwde
lock
mov
dec
(bad)
push
inc
add
paddw
in
cmp
cs
jp
cmc
inc
stos
jle
add
std
push
fisubr
ins
sbb
sbb
mov
jo
add
dec
cmp
or
push
out
hlt
jl
in
les
adc
stc
test
syscall
popa
out
mov
pushf
test
fdiv
fidiv
(bad)
add
sahf
mov
int
loope
out
std
iret
dec
(bad)
arpl
dec
xchg
adc
call
imul
pushf
mov
das
ins
or
stos
call
cmp
inc
or
cmp
rcr
lds
sbb
and
dec
inc
out
call
xlat
adc
leave
data16
imul
mov
xchg
aas
cmp
les
jns
jmp
hlt
or
mov
pusha
add
mov
or
retf
cmp
hlt
pop
popaw
shl
je
ds
fiadd
enter
leave
scas
mov
(bad)
jge
fldenv
mov
cmp
pop
xchg
push
and
xchg
nop
and
pusha
or
jmp
int3
mov
sub
nop
mov
outs
shl
push
fdivr
push
sub
xchg
iret
mov
xchg
ins
das
lods
push
(bad)
dec
cwde
leave
xchg
add
popf
pop
push
xor
aad
dec
pop
ja
jns
rcr
in
sub
cdq
mov
shl
xchg
xor
add
mov
hlt
or
call
jmp
jbe
and
xchg
jp
in
xchg
movs
imul
lods
not
or
(bad)
push
cmovg
fdiv
outs
jge
xchg
push
(bad)
pavgw
sahf
cmp
outs
pop
sub
mov
cdq
es
jbe
mov
iret
mov
mov
loop
push
hlt
xor
aad
out
push
dec
idiv
mov
pop
int
push
test
(bad)
fnsave
sub
xchg
add
mov
(bad)
xor
mov
jb
outs
or
loopne
mov
ss
dec
sbb
mov
iret
push
rol
loop
xchg
sub
jl
iret
jle
outs
sub
jp
inc
lea
sbb
mov
and
mov
dec
push
stos
js
or
test
idiv
cmp
xor
mov
(bad)
fiadd
pop
and
sar
mov
ret
fild
loop
cmp
das
sub
and
ret
mov
test
cmps
cmp
cmp
and
mov
aaa
iret
sub
jno
mov
test
pusha
and
adc
xchg
push
or
xchg
xor
jmp
mov
pop
mov
pop
rcr
push
inc
mov
push
mov
aad
popa
or
scas
cmps
arpl
jge
inc
adc
pop
mov
nop
(bad)
sbb
mov
aaa
stc
ficom
mov
jno
inc
or
cs
mov
or
sub
mov
add
ins
jmp
jp
xchg
jno
pop
sub
mov
inc
(bad)
cmps
adc
mov
cs
cld
lahf
pop
xor
sbb
xchg
add
loopne
dec
and
xchg
pop
fwait
movs
pop
inc
sub
out
jno
js
daa
push
rcl
inc
ja
out
push
sbb
xchg
cdq
bound
js
ss
inc
inc
mov
nop
mov
mov
adc
into
inc
je
addr16
retf
cwde
add
push
pop
in
inc
out
leave
sbb
loop
adc
and
adc
jne
mov
sub
dec
lds
in
les
int
mov
jmp
retf
test
cwde
gs
mov
lods
mov
jae
mov
(bad)
cmp
pop
pushf
pop
jbe
inc
ins
ins
add
sahf
inc
sub
add
shr
enter
jns
cmp
popa
pop
sar
sbb
add
cmp
es
inc
dec
xchg
and
in
arpl
xchg
in
lods
and
sbb
jnp
das
loop
mov
lahf
add
frstorw
repnz
push
jl
xchg
dec
scas
adc
pop
cmp
cmp
adc
outs
and
sub
aaa
mov
(bad)
push
or
imul
push
bound
jb
jns
push
inc
gs
ja
out
jle
stos
push
add
(bad)
ss
jnp
jl
or
adc
or
jmp
xchg
out
leave
cmps
and
push
test
ja
idiv
bound
sub
rcl
sub
mov
das
popf
mov
ret
imul
pop
jbe
xor
repz
int3
out
mov
push
mov
xchg
clc
fcom
sbb
jb
leave
fidiv
cli
cld
fsubr
repz
dec
retf
mov
xchg
push
mov
push
gs
and
mov
js
jmp
movs
gs
out
cmp
cmp
mov
retf
arpl
je
pop
sub
jnp
rol
xchg
sar
push
sar
mov
das
adc
mov
and
mov
(bad)
movs
pop
js
jp
sti
push
pushf
fadd
das
jbe
repz
mov
pop
ret
adc
aam
inc
stos
mov
dec
mov
jno
or
adc
push
inc
pusha
sub
stos
xchg
(bad)
ds
add
and
stos
pop
rcr
ja
scas
xchg
jmp
loopne
mov
test
cmc
not
stos
cmp
(bad)
cdq
out
pop
lahf
cmp
inc
xor
scas
in
push
cmp
rcr
das
add
pusha
and
jb
rep
mov
jae
not
jmp
or
jl
jg
push
test
cmp
dec
mov
call
push
pusha
aad
stos
mov
dec
int
out
into
leave
mov
mov
mov
cmc
movs
arpl
pop
or
sbb
das
sahf
int
aaa
cmps
das
jae
lock
jg
and
or
in
pop
mov
sbb
lods
jecxz
cli
lods
xchg
pop
jb
add
mov
bound
sti
jae
mov
shl
push
or
loop
mov
outs
mov
les
jmp
pop
mov
inc
nop
hlt
sub
or
jnp
and
and
pop
call
mov
xchg
xor
sub
jle
test
sbb
(bad)
bnd
das
(bad)
lahf
int
mov
jmp
jns
jae
xor
and
inc
inc
or
sub
inc
mov
or
in
lods
adc
stos
outs
mov
loopne
repz
sbb
test
lods
fldenv
mov
les
or
mov
not
push
je
mov
push
das
imul
loop
(bad)
enter
aaa
or
push
cwde
lods
jns
(bad)
mov
cwde
mov
push
pop
nop
enter
inc
xchg
ret
cdq
add
not
add
mov
or
lgs
movs
pop
js
nop
aaa
mov
jno
cmp
imul
cwde
mov
fdiv
mov
inc
push
fnstenv
jbe
inc
xlat
and
jmp
push
inc
mov
sbb
sub
mov
ret
pop
mov
mov
jae
lock
ins
pop
cmc
add
dec
scas
or
or
scas
fdivr
add
and
mov
mov
xor
mov
scas
inc
add
cmp
arpl
or
hlt
nop
push
mov
ds
jae
push
add
pop
out
js
and
loope
xor
mov
inc
push
leave
adc
pop
movs
imul
or
(bad)
jb
xchg
mov
mov
sub
mov
dec
iret
aad
dec
cli
fnstcw
or
xor
pop
adc
dec
push
int
mov
xchg
xchg
dec
adc
push
aad
ret
jle
adc
sti
mov
add
les
and
sub
pop
xchg
rcr
mov
cmc
(bad)
aad
fistp
popf
mov
popa
push
nop
jmp
mov
in
jnp
inc
xchg
cld
pop
xchg
shr
popf
arpl
popa
dec
pop
or
mov
push
retf
into
test
mov
out
std
mov
cmp
div
inc
jno
mov
(bad)
sbb
sbb
in
fiadd
in
jnp
bound
fisubr
jb
pop
cmc
lods
jne
jb
and
sub
scas
es
mov
je
xor
adc
cmp
int3
fs
sub
cmp
xor
mov
mov
xor
fucomip
pop
sub
push
mov
adc
ins
ror
jmp
xor
push
and
fstp
pop
cmps
fcmovnu
sub
adc
sbb
inc
cmp
xchg
test
mov
retf
and
fs
xor
mov
pop
sbb
jo
les
inc
sub
sbb
jg
adc
pusha
aad
mov
in
movs
adc
add
push
xchg
sub
jae
gs
je
and
sbb
call
inc
mov
push
dec
js
fimul
pop
xchg
daa
std
scas
add
pop
enter
xor
mov
sar
add
jg
std
sbb
dec
cli
cmp
pop
add
icebp
mov
mov
mov
lock
cld
mov
cs
mov
aaa
cmp
and
movs
pop
jecxz
pop
inc
push
push
xchg
inc
out
push
movs
xchg
int3
jg
lea
clc
(bad)
aad
push
icebp
xchg
xor
sub
cmp
cmp
lds
push
xchg
gs
ins
or
pop
dec
test
lea
call
push
in
popa
dec
pop
cmc
pushf
aas
xor
push
adc
clc
(bad)
and
add
mov
out
push
mov
mov
outs
arpl
cmc
loopne
int3
dec
add
jnp
rep
movs
out
pop
inc
out
ins
push
push
test
out
stos
iret
mov
cmp
jle
gs
mov
pop
mov
je
xor
aam
rcl
pop
sbb
or
xor
ror
cdq
mov
(bad)
popa
in
ds
cmps
test
lea
mov
mov
(bad)
lahf
or
sbb
nop
sbb
rcl
hlt
repz
mov
stos
sub
in
fcom
in
outs
dec
ins
ins
sbb
xchg
pop
xor
push
pop
loope
pop
ror
sahf
ja
adc
mov
shr
xor
call
xor
add
push
pop
jno
cmp
adc
jmp
dec
enter
push
stos
mov
rcl
and
jmp
leave
movs
sti
mov
pop
pop
(bad)
imul
(bad)
xor
xor
mov
lea
aad
mov
lods
imul
add
popa
mov
sbb
data16
inc
(bad)
sbb
int3
imul
aas
add
test
ss
jg
dec
push
cld
jo
xor
adc
int3
stos
pop
xor
aam
sub
jb
dec
pop
dec
mov
retf
cmp
xor
inc
cmp
jge
mov
les
jmp
sub
and
fcomp
and
push
adc
adc
fsubr
aad
pop
jmp
xor
mov
das
(bad)
pop
setne
xchg
out
sbb
or
dec
jge
lock
aad
fcomp
mov
jbe
gs
test
out
push
pop
jmp
fist
mov
pop
arpl
mov
in
outs
outs
fisubr
pop
and
xchg
test
push
dec
xlat
cmp
inc
sub
xchg
out
mov
push
fwait
xlat
xor
(bad)
(bad)
fucomip
and
mov
in
dec
jbe
in
add
jbe
cmp
mov
sub
push
daa
jl
xchg
stc
or
lods
inc
clc
imul
mov
dec
mov
sbb
jmp
and
pop
pushf
pop
stos
sub
push
gs
rcr
sbb
push
push
cmp
ins
adc
ins
push
jb
mov
shl
adc
ror
in
dec
mov
out
stos
pop
jbe
scas
mov
addr16
jmp
jae
cwde
rcl
xchg
add
clc
fcmove
iret
sbb
lahf
(bad)
push
(bad)
cld
imul
or
mov
pusha
shr
aad
cmps
in
cwde
or
jge
dec
jbe
mov
cli
pop
imul
push
gs
out
dec
pop
lahf
rcr
add
adc
push
sbb
aad
xor
dec
add
mov
mov
nop
or
mov
pusha
add
pop
cld
mov
or
xchg
xchg
push
je
lds
test
push
xor
mov
add
into
inc
and
dec
xchg
or
mov
mov
cmp
test
pop
sub
xchg
adc
fs
xlat
arpl
in
sti
jecxz
pavgb
xor
dec
jl
adc
xor
fld
xchg
mov
or
aaa
fnstenv
sub
ret
rcl
xchg
cmp
mov
jnp
cmp
dec
xchg
mov
xchg
ins
jbe
loop
repz
jl
out
dec
dec
or
movs
pop
icebp
das
mov
ss
adc
mov
add
add
adc
sub
cmc
adc
stos
cwde
pop
lods
jno
sub
sbb
cwde
fs
cmps
cmp
or
xlat
loop
push
add
or
out
mov
push
cmp
adc
xchg
cmps
loop
mov
inc
outs
movs
add
xor
mul
dec
mov
imul
fcomp
shl
inc
mov
xchg
inc
sbb
stc
test
mov
push
ins
shl
ret
push
scas
outs
add
xchg
mov
mov
xchg
bound
cwde
lahf
es
add
in
cmps
pop
pop
cmc
in
sbb
jle
out
push
dec
aas
movs
dec
(bad)
sub
popf
jmp
pusha
ins
mov
das
dec
out
lahf
jmp
aas
out
ja
jmp
pop
mov
jg
jmp
adc
and
(bad)
mov
es
push
rcr
mov
and
and
pop
sahf
fimul
mov
ret
cmps
pop
jmp
push
lods
mov
mov
addr16
pop
pop
xchg
pop
loop
mov
pop
mov
loope
movs
test
sub
dec
rep
ret
jmp
das
xor
shl
xor
jns
int3
or
call
lods
cmp
pop
pop
push
scas
outs
jbe
out
mov
ja
ins
sub
ret
jnp
inc
ins
(bad)
sub
mov
dec
or
(bad)
xchg
cmp
jle
mov
out
mov
mov
les
fs
mov
not
leave
xchg
shl
mov
mov
sbb
lahf
int
push
cdq
fbld
in
push
pop
fcom
sbb
and
dec
mov
and
jmp
sbb
mov
mov
xchg
push
call
fbld
sbb
cmp
xchg
cmps
shl
scas
lds
fs
shl
(bad)
mov
jl
xchg
out
aam
cmp
adc
cmps
iret
mov
mov
jg
pop
pushf
cwde
jecxz
pop
loop
lods
test
inc
int
jb
mov
(bad)
ret
retf
add
(bad)
pop
scas
jb
dec
dec
pop
mov
bound
movs
test
jl
mov
sub
dec
mov
sbb
mov
outs
cli
(bad)
pushf
(bad)
sar
sub
adc
xor
div
mov
cmps
lahf
mov
and
mov
adc
mov
sbb
mov
xlat
push
stos
sub
loopne
jge
pop
fadd
push
rol
push
cmp
mov
popf
and
sar
scas
push
push
xchg
hlt
call
jmp
neg
xor
dec
xlat
inc
jecxz
retf
(bad)
int3
push
(bad)
iret
outs
mov
add
ror
inc
outs
jecxz
adc
aaa
jecxz
or
sub
fnstsw
jge
(bad)
or
push
imul
mov
data16
jbe
loopne
jp
cwde
push
mov
movs
es
adc
sbb
dec
xchg
inc
out
retf
xchg
or
pand
icebp
and
retf
scas
cli
fs
shl
into
out
cs
pop
mov
pop
cmp
repz
adc
inc
in
sbb
lahf
(bad)
stc
hlt
mov
in
cmp
adc
add
sub
in
ret
movs
call
mov
lods
outs
test
jo
add
sti
pop
xor
mov
out
dec
push
adc
fdivr
je
dec
push
adc
push
dec
inc
push
pop
jno
and
xlat
daa
shl
daa
pop
cmps
iret
aaa
ins
mov
lods
shld
add
xor
cs
and
xlat
aas
fiadd
ins
mov
adc
mov
int
inc
arpl
jae
dec
aam
xchg
mov
mov
jns
stc
loope
and
cli
inc
sti
inc
inc
into
test
push
mov
or
sbb
cwde
sar
sahf
nop
out
jo
sbb
or
enter
jo
mov
mov
cmp
xchg
mov
les
loopne
mov
mov
xor
retf
clc
xor
xchg
add
das
push
and
cli
std
stos
sub
pop
inc
mov
sar
test
neg
xor
repz
jmp
lahf
(bad)
mov
dec
add
imul
sbb
dec
ror
gs
mov
xor
mov
lahf
in
sahf
push
xchg
inc
stc
mov
jp
in
cmps
pop
jae
jnp
enter
mov
inc
fst
mov
aas
leave
imul
out
dec
sbb
cmps
fcomi
shl
add
sti
mov
nop
aam
jne
pop
scas
es
jne
jp
push
inc
out
pop
jecxz
aaa
popf
es
hlt
repz
loope
add
mov
test
adc
jp
pop
jge
cmp
and
pop
repz
xchg
std
or
sbb
mul
lods
jle
xlat
cmp
add
(bad)
dec
icebp
mov
inc
shl
dec
pop
cmp
xchg
sub
sti
into
cmp
xor
jecxz
pop
test
cmp
(bad)
lods
out
pop
dec
sub
pop
mov
mov
add
mov
pushf
lock
sbb
dec
(bad)
aam
dec
mov
retf
cmp
iret
or
mov
stos
retf
movs
dec
dec
cmps
gs
sub
gs
stc
push
fst
ret
icebp
rcr
je
mov
adc
daa
mov
mov
fist
dec
jecxz
sbb
inc
aam
mov
mov
shl
add
lods
push
inc
fwait
popa
test
aas
inc
mov
stos
test
addr16
cmps
or
pop
dec
cdq
add
mov
ins
lods
jne
or
jecxz
ret
(bad)
push
or
dec
outs
add
and
push
mov
out
xor
daa
xchg
(bad)
retf
push
pop
mov
adc
sub
fcom
test
pop
sub
push
pop
pop
sbb
ds
fstp
int3
pop
inc
xor
mov
and
inc
push
mov
push
inc
(bad)
call
pushf
cmps
xor
out
call
test
jmp
pop
pop
fnstsw
jp
jmp
mov
test
ins
push
sub
loopne
xchg
sub
mov
in
rcl
call
xor
jl
int
jecxz
lea
aaa
nop
sub
or
pop
adc
mov
inc
push
push
mov
sti
(bad)
int3
push
xchg
sbb
std
out
mov
and
ss
inc
idiv
sub
or
lods
sub
lahf
fcomi
xchg
pop
test
xor
mov
adc
(bad)
jns
addr16
mov
sti
jne
popa
(bad)
in
jmp
cwde
push
mov
pop
pop
pop
pop
add
xchg
jecxz
jae
push
fs
iret
push
add
add
dec
cmp
mov
jnp
dec
enter
mov
cs
outs
jmp
jmp
adc
stos
sbb
add
sub
lea
inc
sbb
cmp
mov
outs
inc
mov
arpl
pop
dec
sahf
push
out
hlt
push
ss
and
fnsave
pop
jmp
scas
pop
fild
xor
(bad)
and
cmp
jns
push
dec
push
sar
push
int3
dec
in
out
push
xchg
push
mov
or
pop
hlt
loopne
cmp
out
jns
lods
xchg
cmp
daa
inc
push
bound
dec
hlt
rol
pop
inc
mov
neg
mov
push
xlat
imul
push
dec
mov
xor
lods
fisttp
pushf
out
ja
bound
mov
mov
or
pusha
cmp
mov
push
inc
jo
or
loop
cmps
xor
ins
add
jp
outs
jbe
or
movs
test
cli
xor
xor
cdq
cmp
shr
idiv
sar
stos
test
paddd
loopne
mul
pop
inc
test
pop
je
sub
js
pushf
stos
inc
out
mov
inc
sbb
mov
fdiv
movs
sbb
call
sub
data16
xchg
mov
and
cdq
and
push
inc
jg
cs
int3
cli
cmp
scas
call
cmps
mov
mov
out
inc
test
dec
dec
sub
cmp
jle
(bad)
in
cld
les
in
pushf
cmp
icebp
push
xchg
fisubr
jb
mov
bt
imul
mov
push
push
stos
dec
push
add
stos
ja
add
test
mov
js
hlt
dec
in
into
push
mov
xchg
cs
dec
(bad)
fldcw
mov
sbb
es
test
nop
scas
aam
stc
xor
xor
inc
adc
xor
sbb
mov
sub
xor
bound
jne
(bad)
hlt
int3
cli
test
cmp
rcr
xor
leave
lds
popf
fwait
aam
je
xor
pop
inc
sbb
(bad)
scas
add
xor
fcmovbe
retf
scas
adc
dec
popf
xchg
dec
push
sti
inc
shr
pop
jbe
aam
aaa
and
mov
test
jle
sub
into
in
inc
aaa
pop
and
das
fstp
jecxz
loop
call
(bad)
inc
aad
cmp
ret
adc
mov
xor
idiv
xchg
jne
cmp
push
in
pop
pop
fldcw
aam
lahf
out
xor
gs
pop
adc
inc
xchg
mov
loopne
mov
ja
jecxz
pop
sar
shl
push
cmp
mov
jns
hlt
and
call
int
clc
aam
adc
sbb
sbb
imul
xchg
jno
and
fldenvw
mov
jmp
dec
xor
dec
les
je
fiadd
iret
arpl
pop
jo
or
cli
cld
xchg
into
pop
push
xor
cmp
int3
pop
pop
arpl
hlt
mov
lds
lock
mov
mov
scas
cs
cdq
add
jmp
(bad)
retf
popf
(bad)
xchg
mov
cmp
adc
xor
pop
or
inc
in
imul
cld
and
movs
fisubr
and
cs
cld
movs
and
out
sub
aas
sub
jmp
mov
enter
push
push
mov
(bad)
or
icebp
mov
inc
ins
call
cmpps
stc
into
inc
jo
sbb
xchg
dec
cwde
pop
outs
sar
test
nop
or
mov
rol
mov
movs
dec
out
xor
sbb
fdiv
dec
int
jl
add
ins
mov
inc
or
dec
arpl
pusha
test
xor
outs
pop
js
xor
and
xchg
adc
push
xor
mov
cmp
inc
push
jecxz
aas
add
popf
or
imul
mov
sar
xchg
mov
sbb
in
push
push
push
jb
dec
cs
retf
or
bound
inc
ins
fld
sub
xor
xor
xor
aaa
icebp
div
sub
cli
aam
mov
xchg
xor
(bad)
in
clc
(bad)
push
cld
or
out
or
mov
jecxz
dec
push
int3
mov
cmp
mov
inc
repnz
push
cmps
inc
out
(bad)
cwde
pop
data16
add
std
bound
les
fdivr
inc
adc
jge
push
inc
repz
test
das
and
inc
leave
xchg
push
inc
cmp
add
popf
inc
rol
es
cs
mov
push
cdq
mov
sbb
(bad)
fnsave
jmp
es
les
fcomi
scas
mov
pop
stos
aad
imul
cmp
fisubr
and
mov
mov
into
outs
sbb
mov
das
jbe
shl
xor
jne
fild
pop
ja
mov
dec
jnp
fcmovnbe
dec
add
retf
shl
(bad)
cld
sysexit
pop
xchg
xor
adc
xor
repnz
div
ficom
adc
outs
fisubr
dec
xchg
push
xor
cmp
jne
cmps
es
mov
mov
aam
retf
(bad)
enter
add
mov
mov
(bad)
fdivp
mov
jecxz
jecxz
mov
shr
test
aad
jbe
fs
outs
test
dec
mov
mov
push
sub
ret
je
mov
es
pop
shl
(bad)
or
test
push
dec
pusha
xchg
imul
mov
xchg
and
adc
cmp
aaa
and
inc
pop
leave
gs
movs
mov
mov
mov
pop
mov
dec
dec
call
push
jmp
popa
lods
ret
push
test
into
jbe
xchg
in
inc
dec
bound
xor
jbe
nop
sub
ja
ret
(bad)
push
mov
ret
aas
fwait
and
jge
cmp
ficom
(bad)
int
enter
mov
adc
cwde
shl
ds
cmc
mov
bound
push
sti
(bad)
ds
out
adc
rcl
fwait
call
iret
lock
dec
xchg
push
pop
mov
add
aad
jl
add
(bad)
sbb
mov
rol
je
add
sbb
lds
stos
jl
jne
outs
stos
ds
xor
xchg
fnstenv
scas
call
inc
xor
daa
sahf
stos
test
or
sub
xor
lods
jle
mov
je
repz
push
jmp
mov
js
pop
pop
xchg
push
loopne
xlat
adc
jge
xchg
ja
in
dec
xchg
mov
or
mov
gs
(bad)
mov
jge
(bad)
cmps
xchg
fst
sbb
sti
cmp
nop
lods
rcr
ss
or
mov
pop
popa
rcl
mov
sbb
push
popf
adc
(bad)
out
mov
(bad)
sti
movs
xchg
iret
jecxz
sbb
mov
xchg
fstp
leave
dec
adc
imul
mov
(bad)
xor
mov
clc
push
or
mov
xchg
ins
or
clc
repnz
or
sbb
sti
scas
popf
ins
mov
pop
cmp
mul
test
bound
cmps
sbb
cbw
imul
int3
mov
cmp
or
push
push
xor
lds
ins
dec
mov
not
pop
jecxz
jl
dec
mov
mov
adc
addr16
mov
pop
xchg
adc
fimul
sbb
or
in
cld
jp
outs
mov
repnz
jecxz
or
(bad)
bound
call
(bad)
jge
fisub
je
not
mov
xchg
xchg
pop
pop
xchg
inc
inc
sahf
lods
jge
pop
jmp
mov
push
(bad)
retf
pop
dec
jmp
cmps
xchg
in
(bad)
fadd
add
ror
or
pop
sub
sbb
adc
cmp
hlt
push
ins
(bad)
cmp
ss
call
cld
ja
xor
les
iret
xchg
mov
cli
adc
fwait
(bad)
retf
cmp
inc
push
and
xchg
loop
xlat
test
and
cwde
shr
mov
cmc
pop
dec
xchg
cmp
or
lods
bound
fidivr
inc
mov
jge
dec
loopne
aaa
adc
pop
push
call
jmp
xor
push
je
lods
out
add
movs
inc
dec
dec
ds
fisub
rcl
mov
es
jns
adc
xor
cmp
into
test
dec
test
or
sub
add
xor
sbb
dec
sub
xor
ss
mov
mov
test
outs
fs
test
gs
aam
mov
xchg
push
and
imul
daa
(bad)
mov
jecxz
jg
and
inc
sub
sub
call
das
add
movs
push
sbb
xor
jmp
ja
and
fcmove
and
lea
xor
adc
dec
mov
test
pop
cmp
push
ror
dec
addr16
fs
mov
in
xchg
adc
sub
xchg
cmp
adc
adc
cmp
mov
or
mov
push
icebp
mov
outs
fcmove
mov
pop
adc
hlt
out
sub
adc
out
mov
dec
add
mov
mov
xchg
test
adc
loopne
into
mov
dec
sub
int
addr16
ds
push
jno
ins
add
fwait
outs
les
fidivr
mov
repnz
xchg
stc
inc
adc
clc
mov
and
mov
dec
push
fidiv
ret
lods
mov
jl
dec
inc
push
mov
or
adc
sti
xchg
cdq
xchg
xor
enter
jbe
jne
repz
and
lea
add
cmps
lock
(bad)
fld1
adc
push
or
mov
pop
(bad)
xor
and
jl
mov
pushf
pop
fs
inc
inc
test
jmp
jp
xor
rcl
adc
dec
sub
mov
xchg
push
or
dec
sub
stos
in
and
(bad)
hlt
das
in
adc
add
dec
jg
pushf
in
pop
xchg
call
pop
aam
add
lock
and
dec
mov
cmp
pop
je
nop
jb
push
jg
add
push
sub
mov
xor
mov
mov
mov
arpl
push
xchg
push
ss
fdivr
fldcw
iret
add
mov
aam
and
add
mov
adc
xchg
mov
loope
cmp
clc
adc
leave
cli
add
inc
push
dec
and
out
retf
mov
and
pop
gs
ds
xor
jno
ja
fmul
mov
call
sub
fwait
add
(bad)
adc
xor
imul
lock
mov
arpl
cwde
pop
mov
xchg
sub
aas
lds
inc
xchg
retf
jmp
dec
cmp
mov
or
xlat
push
setle
lods
or
or
adc
daa
lods
call
or
push
neg
div
jmp
jns
mov
xchg
jp
adc
add
rcl
in
sbb
add
add
mov
add
dec
xor
mov
push
fadd
sub
pop
aaa
mov
out
scas
out
cmp
push
sbb
mov
and
ss
mov
test
dec
out
(bad)
into
sub
or
mov
cmc
and
xor
pop
adc
sub
push
push
loop
adc
fst
xchg
fistp
(bad)
pop
movs
push
xor
xor
cld
dec
(bad)
jl
sub
inc
(bad)
push
cmp
lock
out
dec
sbb
push
mov
call
loop
or
xchg
fcmovnb
push
dec
mov
clc
test
into
scas
push
jb
lock
xchg
pop
daa
add
ror
xor
dec
call
mov
scas
mov
adc
std
aaa
jbe
mov
xor
mov
fistp
rcr
push
sbb
test
pop
xchg
pop
jl
in
push
outs
cmp
mov
movs
mov
movs
fsin
cmp
xchg
sbb
sbb
lods
or
mov
jg
or
add
test
inc
enter
imul
clc
(bad)
sub
inc
or
mov
into
fwait
das
out
mov
inc
repnz
fdivr
rcl
push
inc
push
inc
rcl
mov
jmp
imul
jbe
dec
in
and
dec
pop
mov
and
jne
xchg
adc
mov
add
mov
es
mov
xor
mov
cmps
int3
pop
xchg
adc
outs
adc
inc
sbb
(bad)
cwde
sub
repz
ror
fldpi
arpl
sbb
xchg
cmp
mov
ins
jno
xchg
bound
jae
cmp
push
(bad)
lds
enter
loope
(bad)
retf
cld
retf
rol
dec
dec
mov
xchg
cs
xchg
and
lock
adc
cmps
ds
xchg
cmps
xor
mov
push
cs
sub
mov
jmp
sbb
rcr
sub
fs
mov
(bad)
jge
adc
scas
ficom
pop
(bad)
mov
fxch
inc
movs
je
daa
in
jb
dec
and
ins
clc
and
adc
rol
(bad)
fcomp
mov
push
mov
(bad)
icebp
imul
add
sub
in
mov
in
push
jbe
jns
xor
test
and
dec
mov
mov
sub
or
mov
fs
xchg
xor
mov
inc
ins
outs
sbb
push
push
pop
scas
(bad)
js
push
movs
add
(bad)
repnz
rol
cmps
xor
xor
fwait
test
pusha
js
or
mov
in
and
jge
jb
ins
mov
fisttp
stc
inc
nop
mov
lock
mov
ror
xor
xor
pop
call
ror
les
je
in
cmp
mov
mov
jmp
test
mov
cmp
xchg
arpl
jg
pop
add
add
push
push
(bad)
and
cmp
jo
mov
add
or
cld
sbb
ds
movs
rcr
in
call
xchg
add
dec
mov
clc
cdq
xor
sub
cmp
xor
retf
js
xchg
inc
adc
mov
ds
daa
xchg
gs
inc
push
in
mov
xlat
ret
sub
ins
xor
fsubp
and
shl
retf
sti
cmp
ret
push
fst
mov
xchg
lds
shl
pop
imul
sahf
mov
or
add
push
test
call
xchg
push
iret
mov
fstp
aaa
repz
imul
sahf
addr16
addr16
mov
mov
xor
out
and
mov
mul
jo
adc
pop
inc
mov
jb
ret
popa
cmp
repz
neg
push
pop
cmp
icebp
les
ins
mov
xor
cs
in
das
inc
cmp
stos
popa
jecxz
and
cli
mov
jge
pop
mov
or
loopne
bound
cmc
dec
shr
add
and
daa
add
mov
or
add
fist
cmp
loope
(bad)
sahf
call
jnp
sbb
jle
jecxz
movs
push
fst
out
test
test
fld
mov
add
inc
outs
pop
fwait
iret
test
sbb
pop
or
sar
cdq
inc
fadd
jne
pop
sub
mov
jle
pusha
addr16
lods
and
jge
jmp
ins
fwait
adc
pop
nop
mov
xor
inc
mul
or
gs
mov
pop
dec
bound
jp
imul
sbb
shl
rcl
test
pop
sub
sar
test
call
mov
fdivr
bound
lds
pop
and
cmp
test
loop
inc
add
xor
mov
outs
imul
das
ret
cmp
jns
xlat
(bad)
mov
fisttp
xchg
ins
(bad)
test
add
out
les
loop
pop
enter
jne
ja
fwait
rcl
cdq
xchg
or
push
ins
retf
jmp
es
sub
adc
mov
or
retf
inc
dec
xor
in
outs
xchg
jle
xchg
pop
(bad)
and
rcr
adc
out
arpl
push
dec
ss
repz
shl
mov
sub
fbld
fldcw
jl
inc
adc
enter
mov
pop
jmp
pop
in
loope
jb
cdq
out
es
sub
or
outs
or
cmps
aas
(bad)
fst
cmp
aas
outs
push
popf
hlt
push
mov
faddp
ja
jbe
dec
out
fcmovnb
pop
push
mov
arpl
jl
ins
sub
ins
pop
pop
fisttp
sahf
aas
xor
loop
xor
cmp
jns
call
data16
mov
xchg
jmp
jge
mov
mov
sub
retf
add
sahf
and
add
mov
push
adc
movs
imul
inc
ret
aaa
and
xchg
dec
fwait
jl
int3
add
sub
add
mov
adc
or
mov
pop
loope
add
je
cmp
aas
mov
push
sbb
mov
mov
inc
xchg
pop
js
inc
ins
jo
jo
jno
lahf
rol
ds
call
jo
adc
hlt
aam
jbe
sbb
ficom
test
lock
push
xchg
or
js
ret
mov
das
popf
cmc
mov
leave
mov
jmp
ret
retf
imul
jne
les
jmp
stos
jne
cmps
outs
xor
cmp
add
cmps
add
es
push
xor
sbb
pusha
ret
xor
test
mov
fwait
inc
mov
and
pop
inc
inc
retf
sub
sbb
cwde
call
cmp
jb
mov
out
inc
in
shr
and
dec
adc
(bad)
pop
push
mov
jmp
stos
pop
fadd
push
cmp
aad
inc
xor
jbe
pop
jg
mov
test
lahf
outs
test
aam
shr
out
dec
push
or
and
call
addr16
cli
fild
mov
sub
adc
pop
mov
mov
jns
ret
loop
mov
clc
dec
mov
dec
repz
xor
xor
pop
mov
jb
inc
div
or
repnz
pushf
(bad)
xchg
adc
test
aaa
shr
in
out
std
mov
pusha
push
pop
and
push
leave
inc
adc
outs
and
sub
mov
cmp
xor
sbb
and
sub
cmps
cmps
cmp
adc
sti
add
cmp
mov
mov
cmp
or
je
fld
in
and
jne
ret
loope
adc
xlat
test
(bad)
test
in
call
mov
rol
mov
js
sub
mov
data16
push
cmp
scas
sahf
scas
ror
or
adc
pop
in
jmp
aad
mov
cpuid
hlt
or
push
clc
stc
aaa
push
sub
or
ss
mov
xchg
aad
xchg
jnp
inc
imul
stc
dec
add
(bad)
jl
sub
aam
pop
jmp
imul
(bad)
out
pop
stc
test
push
lods
sub
pop
fidivr
jg
cmp
add
xor
mov
inc
or
sub
lods
mov
xchg
jo
es
pop
jle
out
push
xchg
add
dec
cmps
movs
xchg
jmp
add
or
cmps
shr
sub
adc
sub
int
pop
in
inc
inc
mov
jg
loopne
cmps
sub
loopne
cs
repnz
mov
sbb
sub
sbb
mov
test
sbb
imul
xor
retf
loope
sub
inc
xchg
test
and
add
push
adc
mov
sub
and
inc
mov
scas
dec
ds
lods
push
test
fadd
cmp
adc
mov
fs
cwde
loope
or
sub
cmp
fs
dec
nop
push
or
pop
jns
fwait
cs
adc
popw
jge
int
inc
retf
push
jmp
sbb
aam
xor
(bad)
jecxz
mov
pop
sub
dec
push
xor
leave
cdq
int
mov
sbb
cmp
cmp
int3
jmp
jo
adc
adc
sub
and
jl
fcomp
inc
cmc
mov
call
iret
push
fstp
jmp
push
push
jecxz
mov
or
jl
jno
pop
aam
out
jge
pop
mov
(bad)
xor
pop
pop
xor
inc
mov
rol
es
test
mov
push
rcr
push
test
sbb
push
fcomp
jo
mov
imul
cdq
xchg
stos
outs
xchg
dec
lahf
mov
ret
fld
loopne
scas
ins
out
stos
stos
inc
inc
rcr
lods
push
ins
inc
xor
loop
setle
and
add
ins
movs
out
test
or
cmp
sub
mov
into
fnsave
xchg
icebp
pop
xchg
inc
stc
pop
shl
mov
xchg
(bad)
sti
mov
pop
push
mov
push
lahf
jb
push
push
jno
cmc
int3
nop
jp
add
push
bound
cmp
push
ss
jmp
seto
lds
dec
test
xchg
sahf
bound
enter
fadd
test
cdq
call
test
in
push
enter
xor
xchg
cmovnp
mov
mov
sbb
je
loopne
add
lock
mov
retf
sub
cmp
mov
push
(bad)
mov
sar
mov
mov
cmp
push
xor
stc
jo
scas
std
xor
retf
dec
jo
clc
(bad)
xor
out
icebp
push
jbe
xor
shl
push
dec
inc
xchg
or
cmps
adc
jnp
outs
out
jmp
dec
fadd
push
sar
sbb
sub
add
aas
cmp
dec
dec
pop
mov
sub
test
call
mov
cmp
imul
cmp
mov
push
ins
fs
push
sub
int3
fisttp
dec
les
jle
arpl
inc
inc
cmps
movs
fs
test
mov
push
stos
lods
popf
sbb
popa
lock
xchg
jns
mov
jo
rep
lods
and
cmps
outs
and
sbb
mov
or
xor
inc
inc
movs
mov
fidiv
mov
mov
mov
adc
jne
pop
cmp
scas
lods
pop
fs
sub
sub
push
pop
push
mov
push
sub
cmp
dec
cld
mov
mov
clc
sbb
enter
or
iret
inc
aam
push
mov
dec
mov
imul
popf
hlt
fadd
pop
ficom
mov
mov
sbb
imul
in
adc
add
lea
fsubr
inc
pop
jp
inc
ret
(bad)
xlat
cmp
ficom
dec
enter
or
adc
popf
outs
inc
inc
add
jb
nop
jnp
push
push
add
cmps
or
jl
xor
inc
push
stos
and
jbe
scas
mov
mov
icebp
inc
test
dec
out
mov
jmp
ins
inc
xchg
jae
fist
mov
sub
loopne
shl
(bad)
test
inc
push
sub
sbb
sti
xor
jns
arpl
cmp
push
sar
sub
ins
and
and
fsub
das
xchg
je
stos
adc
add
clc
lds
dec
push
cmp
mov
fwait
mov
dec
repz
mov
xor
mov
scas
test
fiadd
and
inc
jge
push
mov
jb
es
inc
aam
add
out
inc
mov
push
mov
shl
and
mov
push
mov
inc
popf
cmps
inc
cmp
cmp
lods
mov
inc
iret
leave
inc
in
lahf
inc
cmps
loope
out
jge
ja
xchg
push
sahf
in
pop
idiv
inc
out
push
add
sub
test
adc
fimul
inc
mov
sub
xor
push
stc
jle
arpl
sub
adc
mov
dec
hlt
xor
iret
pusha
cmp
push
in
jge
lock
mov
mov
adc
and
stos
push
and
ja
rcr
inc
ret
sub
rcl
aas
jb
push
pop
xchg
jno
retf
jbe
cli
call
sub
imul
dec
add
jnp
adc
mov
jmp
add
je
xor
jne
push
cli
mov
call
push
repnz
ficomp
jge
out
jg
dec
and
dec
mov
fmul
int3
push
pop
xlat
aam
pop
lock
push
adc
inc
cdq
les
in
ret
mov
iret
mov
cmc
and
gs
sub
rol
add
arpl
jo
jnp
pushf
(bad)
ror
jle
dec
data16
out
cs
fstp
inc
add
iret
inc
sar
aaa
xchg
cdq
cmps
jmp
in
sub
pop
fs
ja
adc
dec
inc
and
or
pop
or
mov
xor
push
bnd
test
loop
frstor
and
xchg
fisub
push
add
sub
xchg
mov
adc
mov
js
or
pop
mov
xor
add
dec
fcomi
inc
push
sbb
inc
xchg
stos
shl
gs
pusha
fidiv
mov
les
jge
test
sub
push
add
mov
sbb
mov
lds
lods
and
lods
mov
arpl
pavgw
hlt
scas
arpl
mov
sub
mov
mov
xor
outs
in
and
mov
adc
ret
and
lea
adc
pop
push
clc
inc
sub
cmp
mov
adc
mov
sub
dec
mov
aad
mov
call
and
xlat
push
add
not
imul
aam
(bad)
pushf
xor
test
imul
push
pop
and
xchg
mov
int
xchg
xor
push
cmp
cmp
popf
call
pop
daa
mov
pop
pop
scas
pushf
and
dec
ret
repnz
aaa
mov
mov
mov
jg
leave
addr16
pusha
jp
aad
ss
xchg
repz
bnd
pop
aas
add
jmp
push
push
xchg
add
lods
inc
mov
mov
out
xor
out
sub
call
(bad)
lods
popa
mov
(bad)
mov
ja
mov
jmp
pop
test
push
push
ss
jbe
or
out
push
jmp
mov
push
jle
dec
hlt
lock
or
push
jmp
add
add
jmp
lods
sbb
popa
stos
cli
ds
ins
add
mov
mov
lock
inc
mov
adc
pop
xor
je
dec
push
outs
std
mov
fld
cmp
data16
ins
repnz
push
add
inc
sub
fdivr
and
or
imul
mov
and
and
cwde
(bad)
fcom
push
add
lahf
int
std
(bad)
shl
inc
xchg
jo
aad
inc
push
sbb
cmc
and
pop
fldenv
js
mov
push
lea
mov
xor
mov
xlat
mov
xchg
cmps
repz
stos
outs
mov
inc
ret
jmp
mov
call
out
xor
push
imul
(bad)
retf
add
nop
(bad)
mov
ss
or
cli
adc
gs
fisttp
push
ret
dec
imul
xchg
jmp
sti
sub
out
cmp
push
mov
xchg
retf
not
xor
loopne
add
mov
jp
and
xchg
cmps
inc
loopne
inc
mov
ja
jl
pop
adc
je
scas
jl
ins
fist
mov
add
out
sbb
xchg
add
pushf
sbb
dec
mov
sub
repz
sub
out
adc
stos
jbe
stc
ss
fst
bnd
scas
xchg
enter
test
or
sbb
in
shl
je
in
cmp
push
mov
outs
push
jns
pop
xchg
push
ret
mov
mov
mov
in
retf
xor
test
sub
pusha
data16
dec
jmp
adc
jge
icebp
popf
pop
mov
mov
lahf
pop
sbb
popf
pop
test
inc
inc
inc
arpl
test
cmps
rol
and
loopne
test
lods
test
imul
inc
outs
pop
jecxz
scas
jne
das
inc
jns
sbb
shl
in
ret
sbb
mov
adc
int3
mov
or
ret
loopne
mov
adc
push
lahf
in
pusha
gs
hlt
(bad)
jns
fimul
scas
xor
adc
sahf
das
loopne
les
aam
ret
push
sbb
push
mov
addr16
xchg
or
sar
fs
shr
push
xor
dec
jle
and
mov
and
or
je
cmc
sbb
repnz
in
xor
inc
int
fldenv
shl
imul
sub
xchg
pop
iret
adc
movs
cmp
push
pop
arpl
sub
dec
inc
(bad)
jb
xchg
sahf
std
mov
sbb
mov
or
mov
ins
cmp
mul
inc
clc
sub
cli
push
repnz
js
add
mov
and
mov
inc
push
push
xchg
stos
shl
cld
jnp
mov
sar
dec
jmp
pop
ds
fcmovb
nop
pop
xchg
xchg
mov
xchg
sub
addr16
aas
xchg
dec
scas
cmp
out
cmps
jmp
mov
ins
loope
jnp
dec
cmp
lds
scas
dec
jl
cmp
sub
or
fidiv
push
mov
push
lds
das
xor
xor
pop
dec
(bad)
jnp
push
or
fs
mov
push
lods
jno
mov
iret
xor
sbb
sahf
xchg
imul
in
hlt
out
ins
je
mov
mov
std
pop
sub
les
test
jle
sbb
mov
jo
hlt
xchg
xor
or
mov
iret
lock
test
or
cwde
mov
nop
int3
inc
sub
(bad)
jno
cdq
ror
aas
in
push
popf
sbb
add
add
dec
ins
xchg
shr
icebp
mov
cmc
loop
sbb
jl
pop
mov
dec
xchg
nop
sbb
add
lock
cmp
push
pop
adc
into
inc
ret
int
jl
jle
cmp
jo
das
data16
hlt
jge
pop
nop
pop
sbb
cwde
push
nop
les
fsub
es
leave
cdq
arpl
xchg
inc
aaa
imul
sub
push
xor
add
dec
call
or
test
inc
pop
std
push
jl
adc
push
xor
in
outs
retf
popa
push
pop
push
data16
loopne
fstp
std
(bad)
mov
ins
das
leave
lahf
jl
xchg
add
int3
aad
dec
push
test
dec
xchg
jmp
cs
mov
add
pop
aad
push
movs
test
jmp
xor
sbb
clc
jne
repnz
xchg
les
or
or
add
sub
lods
push
cmp
xlat
imul
loop
int3
enter
pop
cmp
call
aad
into
mov
aam
mov
cmp
les
add
jbe
sar
pop
xchg
or
mov
retf
movs
jecxz
mov
or
std
out
or
out
pop
and
retf
movs
inc
xlat
neg
mov
sbb
dec
push
lahf
push
sub
jne
jno
mov
mov
loop
out
push
cmp
xor
cmp
pop
sub
sub
xor
adc
dec
mov
push
push
into
push
movs
pusha
xlat
adc
mov
enter
pop
adc
js
pop
xor
mov
xlat
mov
fsub
cmp
mov
out
add
lods
into
leave
sub
cld
xchg
loop
ds
jns
daa
lds
jmp
popf
and
pop
repnz
arpl
pop
arpl
test
xor
xchg
jmp
in
inc
dec
jns
movs
jae
les
add
jnp
shr
sub
test
cmc
add
loopne
xchg
rcl
ja
pop
adc
nop
int3
fmul
outs
mov
sbb
adc
add
cmp
push
adc
loope
in
in
fisttp
add
scas
xchg
scas
stos
hlt
in
test
fisttp
and
cmp
xchg
lds
or
xchg
mov
jns
push
xchg
fidiv
jge
rol
dec
fld
dec
pop
cmp
stos
mov
xchg
dec
cmps
ja
mov
test
mov
shr
jmp
pop
pushf
sti
sbb
cmp
scas
(bad)
sbb
add
iret
sbb
arpl
pop
mov
(bad)
std
pop
js
retf
dec
int3
jg
and
mov
popa
push
test
jo
mov
dec
pop
add
sar
daa
dec
ins
ret
aas
cwde
sbb
xor
pop
fldz
mov
in
and
loopne
mov
mov
loope
ss
mov
in
cmp
xchg
scas
call
pop
cdq
adc
mov
xor
push
(bad)
in
pop
sbb
jnp
push
bound
pop
nop
cmp
cmp
jmp
jbe
imul
stc
fchs
cwde
aam
rcl
pop
loopne
mov
jne
add
pop
inc
nop
jmp
add
mov
cmps
dec
mov
(bad)
sub
and
jb
sub
leave
in
jmp
aad
xor
mov
jmp
into
repz
push
iret
xchg
ror
outs
xor
and
cld
enter
jle
ins
std
ss
mov
fnstenv
pop
icebp
stos
lock
repz
aam
adc
xor
lahf
or
jo
mov
xchg
jmp
push
in
rol
jns
ins
push
jb
ins
xchg
lods
adc
(bad)
xor
in
push
mov
sbb
dec
call
jne
sbb
repnz
xchg
popf
sub
and
sbb
pop
bound
jmp
ins
outs
and
cwde
mov
dec
cmp
out
sbb
cmc
dec
ror
xchg
int
test
sbb
inc
popa
xchg
xchg
or
out
mov
ins
lock
fsub
pop
jmp
mov
or
xor
stos
sti
sbb
mov
rol
jo
dec
shr
dec
dec
xor
rcl
out
int
stc
retf
mov
rol
jmp
das
add
mov
inc
jecxz
lock
mov
sbb
or
pop
mov
lods
ja
aaa
mul
scas
stc
adc
scas
ror
xchg
mov
stc
out
loope
dec
xchg
fimul
pop
inc
ds
ficom
pop
sub
iret
dec
dec
ins
adc
inc
add
push
sub
aas
push
je
mov
fstp
pushf
dec
xchg
mov
arpl
sahf
add
and
push
out
dec
mov
mov
adc
xor
out
push
mov
icebp
sub
pop
push
mov
icebp
sub
(bad)
hlt
ins
adc
movs
and
dec
rcl
adc
jl
loopne
(bad)
aad
jbe
icebp
ffree
cmp
mov
cwde
lods
or
mov
les
push
and
ins
and
jl
int
mov
mov
mov
or
pop
int3
fwait
sbb
cmp
push
inc
retf
dec
cmp
mov
xchg
(bad)
loope
dec
jne
adc
aad
push
dec
pop
dec
adc
xchg
xchg
push
inc
xchg
lea
pop
scas
aad
jne
lock
lods
and
mov
fadd
daa
pop
pop
movs
(bad)
and
add
add
pop
xor
icebp
(bad)
out
or
mov
ins
in
scas
inc
ins
(bad)
sub
inc
xchg
pop
std
mov
ret
jo
sbb
push
lds
mov
pop
adc
ss
pop
pop
aaa
inc
or
jbe
jns
dec
outs
(bad)
xor
add
dec
xlat
and
cmp
movs
test
adc
push
imul
jb
pushf
sub
cld
add
add
in
iret
stc
shl
mov
xchg
xlat
pop
pop
das
jge
add
xchg
mov
or
jmp
scas
cs
out
mov
mov
jno
idiv
pop
push
add
adc
sub
push
les
pushf
mov
ret
push
fwait
cmps
cmps
xor
sub
dec
(bad)
cdq
mov
daa
test
add
and
pop
sbb
adc
(bad)
ds
out
xor
xchg
sbb
sub
mov
ins
add
cmp
add
dec
mov
or
fs
call
xor
iret
or
retf
arpl
xchg
div
in
or
addr16
push
cmp
mov
jg
jg
repz
sbb
fstp
outs
xchg
ret
outs
movs
mov
lods
and
sbb
je
and
ret
out
and
aas
(bad)
(bad)
push
stos
jo
xchg
jp
jmp
daa
jle
jg
push
retf
fs
fsub
ja
int
loop
cmps
mov
push
shr
jb
cs
ins
sbb
test
fdivrp
pushf
mov
or
adc
loop
fcom
cmp
push
ins
cmpxchg
shr
lock
enter
jmp
ins
jle
cld
mov
neg
push
ins
push
cmps
pop
lods
mov
sub
cdq
sbb
adc
data16
sar
jp
pop
movs
add
xchg
aad
mov
mov
test
pop
dec
mov
loopne
scas
cdq
and
icebp
lods
lods
inc
jge
mov
outs
je
sbb
sbb
sahf
inc
xor
(bad)
jg
pushf
sub
push
pusha
test
jb
or
(bad)
mov
push
pop
in
inc
sbb
or
es
xor
mov
stos
add
(bad)
lods
fmul
pop
and
dec
push
inc
test
out
push
add
fs
out
xchg
aas
fld
xor
stos
pusha
aas
inc
add
aad
fnstenv
dec
and
lgs
pop
popa
dec
stos
inc
aad
loop
push
retf
jge
pop
call
mov
stos
push
data16
fs
or
fcom
sti
mov
xchg
dec
pop
xor
add
fdiv
pop
sbb
rcl
add
mov
xor
and
mov
mov
and
inc
push
xor
test
cmp
mov
int
jp
lea
mov
pushf
pop
neg
lods
pop
hlt
jmp
and
jge
or
jmp
dec
movs
pop
xchg
fild
sbb
shl
ins
inc
adc
aaa
mov
push
data16
sub
cwde
and
outs
aad
dec
sti
cmc
int
jae
icebp
fsincos
adc
xchg
xchg
or
seta
mov
sbb
not
and
clc
pop
mov
call
enter
sub
fucomp
mov
add
stc
lods
push
cmp
rol
or
inc
jns
mov
pop
add
xor
push
mov
int3
xlat
pop
jno
xlat
aaa
cmc
jg
sbb
mov
stos
add
sbb
test
adc
inc
mov
rcr
push
jg
inc
loopne
adc
daa
sub
(bad)
xlat
dec
sub
push
mov
mov
mov
mov
fs
inc
dec
scas
jno
cmp
fnstenv
adc
add
xlat
adc
mov
inc
ss
mov
or
and
icebp
mov
or
stc
jb
std
mov
xor
push
or
push
add
xchg
test
ret
push
mov
dec
xchg
sahf
push
(bad)
sar
daa
pop
(bad)
xchg
pop
into
icebp
jmp
jno
jmp
push
mov
xor
jg
in
mov
jns
hlt
sbb
pop
inc
sahf
mov
adc
jmp
cmp
jmp
xchg
xor
addr16
or
fistp
daa
arpl
xchg
loope
enter
mov
xor
cwde
jl
add
sub
ins
cmps
push
and
gs
add
adc
xchg
sahf
pop
sbb
dec
lods
xchg
jecxz
addr16
in
push
xchg
in
ret
mov
es
adc
shl
cmps
out
jmp
ror
shr
arpl
push
adc
cmps
cwde
jmp
xor
cmps
dec
ins
push
mov
sbb
(bad)
xchg
sub
or
mov
cdq
mov
inc
je
xchg
inc
fdiv
xchg
or
pop
fmul
xchg
sar
cmc
push
retf
or
jge
xor
lods
hlt
loop
mov
lock
dec
js
cmp
cdq
pop
stos
xor
rcl
leave
sbb
add
adc
jno
pop
push
aam
ficomp
inc
je
fldcw
mov
jns
sub
scas
mov
arpl
call
inc
icebp
pop
dec
out
mov
jns
mov
cmc
test
es
in
mov
or
and
test
fwait
lods
push
mov
xor
pop
(bad)
ins
and
arpl
in
or
dec
xchg
mov
mov
ss
pop
cmp
push
xchg
in
sbb
jbe
dec
(bad)
iret
adc
dec
std
dec
js
(bad)
fdivr
cmp
xor
inc
mov
sbb
add
es
int3
movs
mov
loope
add
jge
mov
xchg
mov
mov
and
cmp
or
or
push
jns
add
dec
add
xchg
int
mov
mov
jo
cmp
adc
cld
jge
inc
mov
jle
popf
hlt
icebp
leave
dec
jo
pushf
xlat
mov
jbe
pop
hlt
add
inc
stos
int
out
inc
inc
loopne
pop
ds
mov
loope
mov
or
clc
jbe
shl
cli
shl
cmp
push
sahf
(bad)
mov
inc
push
and
jne
jbe
movs
inc
movs
add
push
push
jns
and
lods
mov
mov
cmc
mov
jae
sbb
push
mov
enter
lds
loop
clc
add
jg
push
mov
cmps
mov
and
sub
sub
test
ja
int
mov
mov
inc
bound
push
rol
mov
inc
mov
sub
jno
pop
mov
dec
push
sbb
cwde
gs
jbe
mov
mov
mov
pushf
or
sahf
sub
jle
js
call
inc
aas
stos
es
pop
sub
(bad)
mov
(bad)
mov
push
mov
inc
sub
movs
out
inc
stc
ins
jmp
mov
rcl
xsaveopt
mov
adc
fcomp
iret
fidivr
sar
adc
mov
lods
pop
inc
das
std
pop
fiadd
das
gs
push
or
sti
xchg
js
jl
jnp
rcl
or
scas
dec
aam
xor
das
call
inc
mov
in
mov
xor
and
push
movs
(bad)
sbb
pop
inc
push
mov
push
lds
aam
popa
pop
fdivr
je
push
adc
fldcw
mov
(bad)
inc
jmp
inc
(bad)
(bad)
cmp
or
je
add
mov
ss
nop
sbb
or
lods
adc
mov
pop
sbb
es
sar
cli
aam
mov
(bad)
iret
pmaxsw
or
ret
dec
inc
leave
js
mov
call
sti
ret
call
mov
jge
out
aaa
sar
mov
outs
das
mov
ja
xor
(bad)
dec
dec
lds
(bad)
mov
pushf
adc
jno
sub
xor
out
adc
adc
push
mov
cmp
xchg
ss
dec
jne
xor
outs
outs
test
mov
(bad)
shl
cmp
pop
pushf
shl
pop
sub
stc
mov
stos
mov
pop
or
push
arpl
sub
ins
stc
test
lds
jb
je
rcr
repz
cmp
imul
mov
pop
mov
jbe
push
add
or
jb
mov
mov
fldenv
push
xchg
fcom
scas
retf
push
pop
cmp
dec
mov
in
div
test
nop
sbb
mov
or
sub
pop
mov
xchg
ror
xchg
mov
ret
mov
xchg
popf
xor
push
sub
cs
xchg
pop
or
adc
xor
mov
repz
loope
sub
add
cwde
mov
mov
sbb
lahf
les
cmps
sbb
xor
inc
lahf
sub
imul
add
sbb
scas
and
popf
mov
jbe
out
cmp
mov
mov
fisttp
out
mov
xlat
sub
popa
and
mov
ja
mov
jns
je
and
icebp
mov
xor
xchg
pop
xchg
mov
arpl
cwde
(bad)
icebp
mov
push
(bad)
dec
push
lea
cli
fnstcw
and
jb
mov
outs
jb
mul
cmps
sti
ret
je
ret
bound
inc
neg
xchg
xchg
out
jp
sbb
mov
mov
imul
fs
loop
dec
stos
mov
pushf
retf
ds
sub
lfs
and
sbb
repnz
iret
es
(bad)
jmp
cmp
mov
dec
std
cmp
test
cmp
test
call
addr16
iret
xlat
movs
nop
repnz
dec
push
pop
xchg
dec
ss
shl
addr16
xchg
shr
jl
xchg
sbb
mov
pop
sub
nop
loop
jb
outs
cdq
pop
std
add
pop
in
pop
pop
enter
rdmsr
loop
mov
cmovno
scas
xor
unpcklps
sahf
mov
cmps
loopne
xor
xchg
popa
push
clc
shl
lods
pop
dec
in
ret
inc
ret
jbe
(bad)
shl
scas
push
ds
xchg
retf
popa
add
aam
mov
stos
jae
cli
mov
pop
ins
jle
or
loop
in
arpl
xchg
(bad)
sub
arpl
mov
rep
fwait
aam
push
pop
movs
pop
dec
adc
pop
repz
sbb
retf
outs
inc
rcr
inc
outs
hlt
cmp
ror
mov
call
xchg
lods
mov
daa
sub
push
mov
cmp
in
xor
pop
jbe
pop
push
pushf
and
cdq
push
mov
mov
mov
lea
inc
stos
repnz
xchg
or
jbe
and
adc
pop
pop
sbb
adc
mov
in
lahf
jmp
jp
mov
ins
fst
push
xor
jle
add
mov
mov
push
xor
sbb
sbb
test
jb
(bad)
push
adc
and
add
(bad)
pop
and
pop
(bad)
lods
jl
or
lock
mov
push
dec
inc
repnz
mov
mov
hlt
ds
mov
movs
daa
popa
shl
jmp
test
mov
jbe
jne
or
push
add
inc
xchg
je
pop
sub
repz
arpl
add
pop
outs
jge
adc
mov
jmp
ins
stos
pop
mov
stos
adc
mov
xchg
data16
outs
xor
jecxz
(bad)
xor
sub
mov
aaa
mov
inc
sbb
ds
icebp
into
add
shr
cmp
scas
mov
in
je
ss
fmul
hlt
and
mov
fld
mov
xor
xor
neg
and
jmp
(bad)
xchg
mov
pop
dec
out
inc
inc
push
mov
jae
mov
outs
jb
fstp
jmp
outs
mov
aad
shl
repz
leave
cmp
pop
fsubr
jge
(bad)
push
jl
jecxz
fidivr
jo
pop
rcr
into
aad
mov
push
icebp
dec
into
cs
and
xchg
in
rcr
inc
cmp
pop
lea
outs
retf
pop
hlt
ins
xor
pop
mov
mov
xor
cmovae
mov
sub
imul
mov
jo
aas
sub
jo
ins
mov
dec
dec
fimul
jmp
push
jmp
mov
sbb
loop
shl
or
jge
sub
pop
sub
mov
(bad)
fisub
sbb
mov
push
lea
mov
cmp
(bad)
or
dec
std
push
in
mov
sub
dec
lods
enter
(bad)
mov
repz
mov
xchg
imul
ss
xchg
out
xchg
ins
sub
pop
push
jg
inc
sbb
out
push
das
jecxz
dec
dec
mov
ret
ins
(bad)
mov
mov
mov
loop
sbb
jns
lds
leave
jecxz
mov
ror
inc
dec
leave
shr
fsubr
jns
out
sub
sub
pop
xor
call
ficom
fdiv
mov
pop
push
loopne
ret
add
repz
stos
repnz
sub
xor
add
adc
adc
mov
les
aad
gs
ret
adc
cld
in
add
lea
xchg
cmp
pop
in
daa
dec
add
(bad)
sub
test
mov
push
ins
mov
push
or
dec
push
cwde
push
enter
or
cmp
pop
pop
xchg
mov
inc
and
jbe
inc
fucomp
mov
mov
jp
rcl
icebp
mov
call
mov
jns
or
inc
xchg
icebp
and
cmp
rol
int
xchg
les
inc
mov
sbb
push
jp
(bad)
int3
cmp
jae
repnz
scas
sbb
aam
les
add
pop
fld
sub
mov
lods
stos
pushf
cmp
cmp
dec
outs
and
sbb
out
in
pusha
imul
mov
mov
inc
jle
mov
pop
dec
mov
es
push
xchg
inc
jne
dec
retf
outs
and
mov
outs
xor
inc
data16
jne
cmps
inc
dec
xchg
jno
aam
movs
inc
dec
push
inc
cmp
xor
or
mov
loopne
ss
bnd
sub
rcr
pusha
xchg
mov
loop
mov
push
scas
mov
add
inc
pop
sbb
mov
mov
cld
xchg
je
rcl
jmp
ja
cmp
outs
xor
inc
xor
jne
jnp
add
fwait
movaps
xchg
add
clc
call
movs
popa
lods
xchg
mov
adc
inc
cmc
cld
or
jmp
jbe
pop
mov
cmp
in
pop
jno
movs
add
sub
repz
dec
mul
xchg
add
cmps
pop
popf
mov
test
inc
pop
push
push
int3
mov
pop
adc
mov
add
cdq
cld
test
xor
(bad)
ror
inc
mov
(bad)
mov
add
cmp
mov
popa
adc
xor
(bad)
cmp
jge
arpl
les
and
mov
push
test
add
adc
nop
mov
into
fild
in
daa
pop
inc
fsubrp
inc
jmp
xchg
cmp
lea
dec
das
arpl
imul
cmc
mov
mov
dec
dec
sbb
(bad)
cmp
dec
dec
cmp
or
js
movs
sbb
test
imul
jl
dec
xchg
adc
fdiv
pusha
cwde
loop
cld
dec
xlat
fs
jmp
mov
neg
out
bound
adc
das
fidiv
sti
and
sbb
retf
sbb
mov
jne
out
pop
lock
sub
push
dec
hlt
je
in
loop
(bad)
push
sti
lahf
add
test
ss
cmp
and
adc
stc
xlat
call
xor
mov
shl
add
pop
push
stc
lods
fiadd
jmp
ins
inc
std
inc
call
js
test
cmc
movs
mov
mov
fldenv
je
pusha
scas
loopne
bound
cli
sar
sbb
rol
or
inc
data16
inc
pop
and
stc
xchg
lahf
push
xchg
xchg
mov
pop
inc
cmc
bound
jbe
inc
retf
shr
dec
mov
jne
sub
test
sub
call
mov
push
inc
dec
out
xor
add
enter
retf
and
lods
and
in
popa
dec
mov
jns
in
fcmovnbe
xor
stos
and
in
and
wrmsr
sbb
imul
sub
retf
mov
push
push
call
pushf
jo
aas
nop
adc
fisttp
cdq
mov
and
sbb
mov
imul
(bad)
xchg
inc
inc
std
and
sahf
fwait
pop
push
xor
push
push
dec
adc
lock
dec
mov
out
movs
adc
mov
ds
dec
es
fiadd
adc
sbb
addr16
je
cmc
cmps
jbe
clc
mov
in
call
daa
cmp
mov
jl
ins
in
mov
rcl
adc
daa
adc
xor
es
fist
jg
xlat
in
cmc
and
mov
retf
dec
mov
xor
mov
jecxz
adc
adc
scas
arpl
pop
cmps
retf
inc
fcmove
xchg
lea
dec
aas
enter
add
cmc
test
add
jns
lods
sub
(bad)
jb
(bad)
adc
xor
lods
sub
mov
cwde
cmp
arpl
aaa
sub
sbb
add
sub
icebp
adc
pop
out
je
xchg
and
inc
out
mov
xchg
fstp
lahf
xor
xchg
gs
xchg
mov
inc
sub
mov
aaa
sbb
scas
sbb
ja
xchg
test
outs
retf
and
mov
stos
xor
inc
and
call
mov
iret
push
jecxz
(bad)
jbe
dec
xor
sbb
aas
iret
(bad)
cmps
and
jle
sbb
pop
rcl
push
dec
pop
push
sbb
call
sub
adc
arpl
into
scas
fxam
mov
call
push
xchg
in
sub
xchg
jmp
or
lock
stos
inc
xlat
cli
push
pop
iret
and
ret
jecxz
dec
neg
out
mov
movs
and
jo
ret
mov
mov
mov
ds
cli
es
sub
dec
(bad)
pop
(bad)
dec
retf
xchg
jp
aaa
xlat
jb
pop
loop
out
lahf
cdq
push
jae
lds
xor
cmc
cli
(bad)
aaa
pushf
sbb
or
call
(bad)
dec
add
cld
pop
arpl
loopne
xor
ror
scas
in
fwait
push
std
sub
dec
out
mov
ss
inc
in
pushf
retf
int3
push
mov
cmp
jl
cmp
jo
sub
or
icebp
cmc
adc
push
in
aad
jmp
(bad)
(bad)
les
rcl
sbb
test
test
jne
movs
(bad)
mov
outs
les
mov
(bad)
sbb
sbb
adc
xor
mov
popf
or
push
xchg
sub
clc
push
sahf
hlt
test
mov
in
stc
pushf
fild
push
outs
(bad)
(bad)
pop
ret
inc
js
ss
shr
scas
mov
add
in
mov
inc
bound
or
push
mov
scas
arpl
(bad)
repz
sub
mov
dec
daa
scas
jmp
jnp
inc
mov
mov
add
(bad)
push
cmps
sbb
je
or
cmp
xchg
(bad)
xor
xchg
xor
sub
ret
stc
xchg
fbld
mov
mov
(bad)
fld
aam
and
in
into
sub
push
loope
jg
std
lds
dec
cs
xchg
into
out
and
pop
cmps
fcmovbe
push
add
sub
data16
lahf
or
loope
sbb
(bad)
(bad)
mov
jmp
inc
mov
arpl
scas
in
pop
dec
(bad)
in
aam
dec
cld
jg
lods
push
jae
jge
sub
scas
and
(bad)
enter
pop
dec
xor
xor
or
inc
or
in
mov
or
cmps
dec
stos
mov
mov
and
lods
ret
jp
mov
popa
fisttp
push
test
dec
dec
cwde
popa
sub
inc
out
jge
push
scas
(bad)
(bad)
int3
test
push
cmp
fild
add
jmp
add
fstp
xchg
stos
aas
xor
jmp
pop
ins
push
or
add
mov
sbb
mov
adc
cmp
fadd
movs
cmp
dec
je
push
jo
imul
hlt
fimul
aaa
mov
iret
adc
dec
ins
mov
(bad)
mov
add
mov
fidivr
ja
or
add
pop
dec
xlat
dec
sar
or
inc
cwde
shl
push
push
sbb
ins
cmps
fidivr
inc
scas
arpl
dec
popa
repnz
push
clc
push
sub
cmps
mov
fst
pop
mov
jae
push
add
retf
mov
dec
add
ret
add
lods
inc
std
lds
outs
push
mov
test
fsub
gs
and
dec
retf
ja
outs
and
fidiv
das
bound
xchg
and
or
imul
xchg
push
rol
push
vmovdqa
retf
lods
add
sbb
fild
scas
fstp
xor
pop
mov
movs
sbb
arpl
rcr
leave
(bad)
sbb
xchg
or
lahf
push
inc
or
or
and
inc
(bad)
jne
jecxz
pop
jbe
cmc
adc
ss
enter
xchg
mov
cmc
dec
std
xchg
test
in
(bad)
jmp
dec
(bad)
fldcw
sub
in
jecxz
mov
sbb
out
cmp
aad
nop
fcmovnb
outs
fild
ret
add
in
pop
jne
jmp
jl
xchg
shr
mov
mov
scas
test
xchg
mov
mov
repz
mov
je
clc
div
(bad)
mov
sbb
adc
xlat
arpl
and
cdq
mov
xchg
js
adc
jnp
jo
mov
fist
mov
gs
lea
sar
addr16
leave
xchg
(bad)
mov
sub
xlat
mov
shl
scas
pusha
lahf
sub
mov
ss
enter
pop
sub
(bad)
dec
dec
cs
pop
out
sub
lods
pop
pop
lods
(bad)
nop
mov
sub
call
jb
aaa
cmp
(bad)
loope
repz
push
mov
scas
mov
jae
inc
lock
cmps
xor
ret
inc
ficomp
les
stos
sbb
fadd
retf
jmp
mov
cmp
adc
pusha
or
call
leave
dec
pop
rol
pop
mov
imul
(bad)
mov
inc
pop
out
or
int
xor
loopne
dec
test
rol
jnp
sbb
push
cwde
mov
dec
cmps
lahf
inc
mov
rcl
pushf
ds
jmp
je
inc
out
pop
loopne
(bad)
push
mov
ss
mov
mov
(bad)
shr
in
or
pop
sahf
mov
push
inc
hlt
les
sbb
add
xchg
adc
pop
in
sub
adc
mov
and
sub
shr
dec
or
je
inc
je
fdiv
ret
es
jo
ja
in
jmp
sub
mov
outs
mov
dec
pop
test
inc
jmp
pushf
mov
sub
xor
aaa
ret
aas
or
stc
cld
add
imul
(bad)
cmp
adc
loop
inc
loopne
sti
lods
cli
mov
dec
into
cli
pushf
in
ja
imul
push
add
or
cmps
sbb
adc
dec
test
mov
imul
add
in
fldenv
arpl
fcmovnbe
push
fdivrp
xchg
cmps
lock
add
sbb
aaa
mov
pop
movs
fdivp
push
xor
inc
add
cmp
das
ret
sbb
xor
xchg
jno
xchg
test
fnsave
inc
fmul
cwde
retf
xchg
jo
sub
lds
push
adc
adc
repz
out
sub
lock
cmp
inc
mov
bnd
inc
ja
cld
call
movs
scas
jnp
int3
push
stos
es
cs
and
dec
push
retf
push
xor
push
lods
or
das
mov
adc
popa
neg
popa
jb
movs
mov
repnz
movs
jbe
outs
dec
clc
mov
jo
pop
jg
(bad)
or
inc
outs
mov
scas
dec
inc
gs
push
mov
aad
(bad)
ins
retf
(bad)
sbb
jmp
xor
adc
sti
call
push
xlat
mov
push
and
jp
xor
aam
popa
loop
or
sub
sbb
in
add
cld
test
sar
sub
and
mul
or
ud2
jmp
dec
inc
pop
femms
adc
add
inc
pop
fwait
jb
das
ins
and
addr16
test
out
(bad)
and
add
push
push
pop
cli
or
fsub
pop
dec
cmp
aas
ret
shl
addr16
stos
jbe
xchg
ds
das
std
in
shl
mov
retf
sbb
mov
je
test
dec
sub
lea
loope
push
xchg
mov
and
push
sub
pop
dec
jno
shl
dec
or
sub
fwait
mul
push
js
and
pop
cli
push
out
ins
dec
sub
lea
mov
fwait
std
mov
dec
adc
ret
jb
popf
shl
dec
pop
fsub
test
ds
cmp
arpl
and
adc
dec
jo
test
clc
fistp
fs
out
(bad)
ins
ins
(bad)
scas
dec
and
pop
cmps
push
cvtdq2ps
movs
sub
cmc
pop
adc
and
inc
dec
aaa
loope
and
icebp
mov
mov
sub
dec
stos
or
or
jnp
sub
test
dec
jae
fdivr
leave
jno
fadd
jmp
inc
jp
iret
mov
lds
and
dec
inc
or
in
xor
mov
adc
aam
dec
xchg
and
xor
sub
fisttp
fiadd
mov
pop
mov
in
movs
test
int3
out
and
jle
adc
mov
and
rcr
(bad)
gs
call
nop
or
ror
mov
sub
repz
cmp
shl
in
mov
lock
xor
add
pushf
mov
(bad)
iret
pop
(bad)
and
int3
mov
fmul
enter
jnp
sub
in
fs
int3
xor
pop
jne
test
in
jmp
arpl
mov
mov
dec
inc
inc
(bad)
push
dec
in
daa
(bad)
fisubr
inc
cld
cmc
dec
pop
jb
stc
jae
out
lods
leave
add
ret
and
mov
inc
or
sub
cs
jbe
push
dec
or
fmul
in
cmp
out
repnz
mov
inc
lahf
adc
sub
ret
inc
out
pop
xchg
push
(bad)
int3
aam
popa
xchg
rcr
jb
cmp
sbb
and
test
mov
fld
les
lock
bound
(bad)
mov
sbb
nop
jo
xchg
lea
test
leave
add
mov
gs
cmps
xor
mov
or
sub
aad
shl
shl
or
pop
shl
mov
xchg
not
xor
xor
out
xchg
push
cmc
bound
mov
aam
in
or
les
js
add
das
xor
cmps
xchg
or
jle
jne
ret
add
or
xor
inc
or
sbb
mov
xchg
and
add
cmp
pop
aad
or
rcl
push
cwde
mov
pushf
sti
or
ja
add
or
pop
stc
lahf
das
ja
jmp
pop
push
call
cmp
pop
outs
ror
fistp
stc
imul
and
pop
push
sbb
outs
push
aam
mov
inc
pop
mov
iret
xor
clc
repz
iret
clc
push
add
add
or
jge
mov
ror
sbb
xchg
loope
mov
mov
cmovno
fistp
hlt
and
adc
mov
adc
call
mov
std
push
and
add
push
add
adc
mov
in
js
ror
mov
adc
cli
in
adc
jmp
dec
call
pop
push
sbb
xchg
push
call
scas
cmp
add
adc
mov
call
imul
adc
xor
into
xchg
mov
pushf
icebp
pop
fst
inc
ss
aaa
inc
nop
xor
sbb
scas
cmp
cmp
movs
push
imul
in
lock
gs
loopne
cmp
dec
movs
inc
ins
inc
pop
int3
(bad)
inc
or
fadd
retf
lds
aam
mov
sbb
pop
add
icebp
test
push
sahf
add
push
add
fs
repnz
jmp
jmp
push
sub
inc
inc
test
cmp
icebp
movs
mov
and
retf
in
test
mov
out
jbe
push
pop
adc
icebp
aad
in
push
push
add
pop
pop
mov
or
fdivr
data16
push
or
dec
mov
lods
mov
lea
sub
or
test
pop
in
and
ins
jno
rol
xor
push
aaa
push
aad
mov
jecxz
fst
in
and
xchg
fistp
fs
(bad)
std
xchg
add
mov
ret
push
xchg
aas
clc
arpl
pop
int
cmps
rep
in
ret
cdq
js
adc
shr
mov
dec
mov
pop
std
ins
in
push
cld
lock
adc
fs
xlat
aas
data16
test
popf
cmps
out
jb
pop
in
rcl
inc
push
mov
fsubr
out
cmp
dec
sub
jp
sbb
jle
ins
fwait
call
mov
dec
mov
mov
jbe
cmps
retf
shr
push
cs
cli
jbe
loop
inc
xor
jne
or
test
repnz
sub
inc
adc
fistp
xchg
jmp
aas
push
jmp
mov
cdq
jmp
push
je
sub
jmp
mov
mov
fs
(bad)
adc
inc
mov
stc
enter
out
xchg
imul
add
mov
iret
cdq
dec
cmps
outs
mov
mov
aad
xchg
cmp
add
pop
js
sub
and
repnz
and
sbb
gs
rcl
add
mov
loop
cmps
jmp
jo
jnp
mov
push
stos
xor
cwde
or
cld
sbb
inc
cwde
shl
jno
dec
ror
(bad)
xor
xchg
jl
in
(bad)
lea
scas
sbb
into
jge
adc
stos
xchg
adc
outs
and
cmp
(bad)
outs
ja
data16
loopne
fld
mov
lock
push
rcr
in
inc
push
mov
jp
or
push
mov
jo
rol
cmps
ret
das
ret
push
pop
in
call
in
mov
sub
mov
xor
mov
mov
imul
xchg
mov
sbb
loopne
or
push
les
(bad)
es
adc
inc
jmp
in
sti
push
dec
mov
adc
dec
fnstsw
repnz
test
loop
xchg
jmp
push
jae
loop
dec
clc
push
pop
add
add
call
into
out
inc
sahf
mov
ds
test
ret
mov
sahf
out
mov
push
adc
fisubr
dec
xchg
and
cmp
xchg
sub
arpl
bound
push
mov
shl
sbb
mov
dec
cmps
cli
aad
add
xor
pushf
loop
sar
in
dec
cmp
test
add
jne
into
sahf
sub
and
(bad)
call
ror
outs
hlt
std
int3
jno
mov
add
pop
push
ss
pop
push
aaa
fisttp
fisttp
icebp
in
ret
sbb
jbe
xor
sub
and
call
inc
sti
mov
je
xchg
movs
fnstsw
dec
movs
clc
inc
or
sub
cli
mov
retf
cmp
and
int3
stos
sub
inc
dec
dec
(bad)
cmps
and
hlt
push
mov
sbb
cmp
pop
inc
aaa
das
fstp
jecxz
sar
inc
jge
mov
xor
in
xchg
imul
jl
in
sub
sub
dec
ja
nop
(bad)
pop
xor
or
cmp
fcom
ins
pop
icebp
jle
add
cs
add
jnp
fnsave
mov
fld
jo
cmp
loope
jmp
dec
(bad)
jmp
sbb
aaa
loope
sub
adc
int
jb
dec
cmp
and
scas
inc
sub
scas
leave
or
sbb
loopne
sbb
adc
jmp
or
push
test
repz
mov
call
pushf
jb
out
mov
fwait
mov
sbb
mov
jmp
dec
lock
xchg
(bad)
std
inc
jne
sahf
pop
mov
pop
call
lock
imul
mov
mov
pop
dec
rol
ror
mov
adc
mov
gs
sti
jp
add
int
movs
push
or
jmp
or
scas
imul
sti
lods
mov
mov
push
mov
inc
dec
mov
(bad)
xchg
cmp
out
jmp
push
les
xchg
cmps
xchg
push
or
push
pop
fwait
or
leave
jp
adc
pop
xor
cmp
clc
xor
add
dec
mov
ja
div
cmp
push
xor
cdq
cmp
sahf
and
sbb
jno
shl
imul
add
jbe
pusha
xlat
lock
xor
lds
add
push
loopne
inc
xor
mov
mov
gs
inc
loope
xchg
mov
or
mov
movs
add
sbb
lahf
sub
dec
mov
inc
icebp
loop
imul
push
lods
into
dec
in
sub
lods
aas
xor
imul
ds
in
mov
mov
in
sar
(bad)
and
cmps
repz
dec
mov
inc
inc
les
cmps
and
lahf
inc
and
jmp
out
jp
popa
mov
test
inc
jo
lea
pusha
sub
and
pop
data16
shl
cmp
js
add
clc
pusha
mov
jbe
mov
outs
cdq
stos
lock
ins
ja
inc
jbe
test
stos
gs
pop
movs
sar
lahf
outs
xchg
ins
mov
and
mov
pop
adc
ins
es
inc
ds
push
or
add
push
pop
jb
xor
mov
or
jnp
sub
dec
inc
adc
sbb
push
push
stc
loope
cmovbe
imul
mov
and
jmp
adc
addr16
popf
or
ffreep
test
sahf
mov
sub
dec
movs
test
mov
mov
push
call
pop
retf
pop
sahf
(bad)
pop
add
and
call
enter
xabort
xchg
in
(bad)
js
leave
xor
pushf
or
sbb
sub
xor
cmc
pop
lea
(bad)
sti
cmp
ficomp
xchg
xlat
fwait
mov
xor
pop
ds
out
out
xor
loop
mov
loop
adc
pop
bound
push
pop
sub
xor
push
out
shl
fmulp
xchg
pop
mov
int
icebp
lods
icebp
sbb
addr16
mov
inc
jecxz
and
push
cmp
add
adc
bound
fldcw
ins
xor
sub
mov
out
out
cmps
call
sbb
pop
out
cmp
test
inc
stos
mov
std
jmp
jp
mov
data16
idiv
cmc
ret
xor
clc
(bad)
div
mov
adc
mov
fsubp
mov
hlt
retw
call
mov
mov
push
sub
enter
xchg
jl
(bad)
sti
bswap
ror
(bad)
fcomp
or
pusha
sub
and
dec
daa
adc
mov
pop
dec
adc
xor
loop
enter
xor
out
ins
pop
mov
aad
cld
call
inc
lods
loope
iret
sub
aaa
push
mov
shl
xor
(bad)
inc
iret
mov
jnp
je
adc
outs
into
movs
xchg
enter
daa
xor
jp
cmp
jg
adc
fild
jmp
and
sub
sub
xor
inc
pop
mov
in
in
mov
call
add
movs
icebp
mov
push
xchg
xchg
mov
xchg
jno
(bad)
addr16
call
idiv
sti
test
add
adc
call
or
or
jg
fcom
xchg
xor
xor
dec
mov
xor
dec
aam
hlt
xlat
sbb
std
ror
jp
nop
add
pop
aas
mov
mov
mov
mov
push
aam
mov
sbb
in
nop
xor
mov
adc
cmp
jmp
imul
retf
and
mov
aam
inc
into
add
pop
mov
and
fild
inc
retf
xor
jge
adc
sub
adc
mov
div
inc
mov
mov
clc
je
shr
xchg
lds
add
inc
shl
dec
push
leave
dec
mov
cli
loopne
or
es
pop
jne
pop
ret
mov
stos
ja
int3
pop
stos
jecxz
loop
jno
xchg
hlt
sbb
push
dec
xchg
adc
sbb
cdq
or
mov
pop
cwde
xchg
test
or
xlat
cld
shr
adc
cmps
test
pop
jo
fwait
data16
mul
sar
std
mov
shl
pop
dec
mov
ins
cmp
xchg
into
test
mov
ds
adc
in
inc
pop
and
pop
lahf
sbb
out
lods
pop
push
push
iret
pop
loope
mov
mov
add
dec
dec
lea
add
mov
cmp
nop
jecxz
repnz
lahf
cmp
xchg
test
and
mov
and
fisub
cli
inc
xor
push
adc
daa
sub
jbe
fwait
stc
in
push
pop
hlt
(bad)
(bad)
xchg
push
mov
stos
pop
xchg
dec
xchg
mov
push
xchg
int3
jmp
(bad)
ja
inc
pop
push
in
inc
sub
iret
pusha
ins
mov
pop
dec
xchg
cmp
dec
pop
(bad)
enter
retf
out
ror
inc
dec
(bad)
retf
mov
les
int
gs
retf
and
in
lock
psrlw
test
pop
dec
adc
test
dec
fiadd
cld
lods
cmp
jecxz
mov
mov
mov
gs
imul
outs
ss
iret
jl
dec
pushf
xchg
jnp
jg
or
jl
inc
cmp
repz
int
or
mov
sbb
aam
stos
dec
mov
adc
mov
adc
cmp
sahf
arpl
and
push
mov
xor
das
daa
movs
mov
in
sbb
xchg
fstp
test
mov
cmc
(bad)
retf
retf
lea
pop
fmul
inc
or
push
(bad)
adc
ins
cs
push
scas
fist
pop
in
xchg
mov
aaa
mov
inc
xchg
jp
or
mov
dec
aas
xchg
and
lock
mov
pop
psrlw
pusha
cmp
mov
in
sub
jecxz
retf
or
div
or
xchg
js
aad
push
fidiv
mov
inc
jne
mov
inc
div
cmp
cmps
mov
sti
push
ds
push
retf
add
add
push
jg
ficom
aaa
inc
and
and
(bad)
in
and
jge
(bad)
shl
call
rcr
mov
clc
js
push
mov
lds
fs
cli
loope
jbe
fdivr
les
in
pusha
dec
and
mov
or
push
or
fimul
pusha
xchg
pop
sub
stos
adc
ror
mov
and
lds
test
frstor
cli
or
mov
mov
inc
cmps
cmc
lods
jnp
iret
and
pop
sub
imul
dec
push
cmp
jno
movs
jp
inc
lock
outs
lods
call
jp
outs
push
test
dec
test
xor
lock
fsubr
(bad)
xchg
push
push
push
fidivr
(bad)
xchg
or
cld
sbb
xor
xchg
pop
fsubp
mov
(bad)
out
xchg
push
movs
cmp
into
ficom
jns
xchg
and
ins
test
fs
sbb
movs
and
sub
xchg
cld
inc
ret
sub
mov
leave
jle
call
rep
cmp
and
fild
pop
pop
les
ins
mov
xchg
or
(bad)
mov
bound
cdq
(bad)
inc
fstp
xchg
test
int
inc
lods
cmc
mov
(bad)
out
pushf
movs
dec
cmps
gs
sub
jle
xor
sbb
pop
or
sub
sbb
push
in
fst
mov
sub
and
in
inc
mov
sahf
adc
or
sub
(bad)
push
adc
(bad)
or
out
repz
xor
ret
enter
mov
adc
loop
jmp
(bad)
cld
pop
pop
mov
sub
(bad)
in
ret
and
cdq
mov
loope
fscale
xor
or
add
aad
xlat
daa
ins
jecxz
mul
push
cmps
cwde
and
mov
idiv
jo
test
mov
addr16
dec
mov
or
sbb
push
call
test
ret
iret
and
bound
push
xor
enter
arpl
mov
pop
pop
dec
adc
and
mov
hlt
movs
pop
dec
repz
int3
outs
in
ja
and
arpl
into
push
and
notrack
or
pop
lock
clc
popf
(bad)
aas
in
xchg
or
lods
inc
call
pop
sbb
arpl
inc
cmp
push
mov
loopne
mov
and
and
adc
icebp
adc
movs
aam
sar
dec
aad
test
fdivr
cs
jns
ror
fsubr
jbe
rol
push
shr
out
mov
rol
sar
push
test
jnp
xchg
push
mov
xor
cmp
pusha
popf
les
jo
(bad)
out
mov
sub
or
xchg
push
sbb
loopne
inc
pop
pop
jno
loope
mov
mov
sub
je
jae
xor
mov
mov
inc
pop
stos
or
or
inc
and
inc
ja
leave
mov
add
cmps
dec
cld
xchg
jge
pop
fstp
or
inc
mov
imul
jecxz
and
fnstcw
ins
addr16
mov
aas
leave
fisttp
aaa
sbb
stos
dec
div
add
mov
outs
nop
xchg
sbb
test
push
push
dec
pop
mov
mov
outs
mov
sbb
sbb
std
inc
dec
adc
xor
jne
fiadd
test
jp
and
mov
adc
xchg
adc
lea
inc
inc
jge
jne
dec
inc
arpl
stos
cs
call
and
and
xchg
cmps
cmp
adc
pop
call
mov
jbe
mov
fwait
inc
adc
fidivr
mov
xor
lods
loop
xor
cmps
imul
cmps
mov
cmp
jae
std
pop
xchg
leave
or
movs
adc
nop
push
test
add
in
lock
pop
outs
mov
popw
shl
and
(bad)
xor
xor
inc
nop
jb
in
repz
inc
mov
lea
repnz
mov
pcmpeqw
inc
adc
xor
rol
lods
cmp
aas
or
sbb
fild
dec
cmp
in
icebp
jg
cmp
int
out
clc
dec
mov
xchg
addr16
daa
(bad)
or
imul
jne
shr
mov
xchg
into
fidivr
inc
(bad)
int3
icebp
ds
inc
cmp
data16
push
in
stos
mov
repz
stos
cmp
inc
pop
and
jb
add
fnstcw
cmps
pop
inc
jle
in
sbb
jp
repz
push
fistp
je
pop
and
aas
shl
mov
adc
mov
adc
lea
sub
mov
aaa
js
mov
dec
out
add
sub
mov
lods
add
fidivr
xchg
pop
pop
mov
and
mov
cwde
lods
push
in
jl
dec
test
cmp
leave
mov
adc
in
aas
fs
test
in
outs
mov
dec
cwde
adc
xchg
rol
sti
sub
mov
popa
sub
push
cdq
(bad)
cmc
xor
inc
and
dec
das
pop
jp
scas
jecxz
xlat
rcr
pop
repnz
push
jo
fadd
arpl
mov
icebp
jnp
or
or
dec
daa
and
mov
mov
test
pop
pop
inc
jo
cs
popf
retf
jl
pop
nop
sbb
and
scas
(bad)
jecxz
jge
gs
inc
(bad)
loopne
pusha
fcmovnbe
mov
(bad)
aaa
outs
int
mov
xchg
mov
fwait
adc
jno
lock
sub
popf
and
cmp
loopne
aas
mov
pop
movs
and
aas
push
xchg
retf
xor
cli
ss
out
pop
fild
out
adc
sub
shr
div
cmp
sbb
out
mov
mov
imul
je
or
mov
loopne
adc
pop
mov
adc
mov
push
mov
xor
retf
jl
stos
pop
repz
cmps
adc
xchg
and
add
mov
xlat
and
ja
add
xchg
push
add
outs
dec
add
test
daa
cmp
and
mov
lds
cmp
inc
cmps
ins
movups
rcl
in
shl
or
call
mov
push
imul
(bad)
cwde
sbb
adc
bound
aas
dec
mov
lods
fisub
aad
das
out
mov
push
and
xor
in
adc
das
mov
addr16
push
adc
loopne
add
hlt
adc
movs
push
push
call
in
jno
mov
out
mov
lea
out
fnsave
mov
pop
or
fisubr
and
mov
mov
inc
add
stos
pop
call
mov
dec
and
dec
rol
mov
shl
push
and
ja
lea
test
aam
pop
shr
les
test
push
jno
inc
and
data16
sbb
popf
or
les
push
adc
mov
inc
cli
js
int
or
gs
ret
or
mov
jo
call
xor
or
dec
mov
push
loopne
jg
add
lock
je
lods
mov
in
sub
shl
jmp
xchg
jecxz
ficomp
call
xor
dec
pop
cmps
push
xchg
push
movs
dec
push
cli
(bad)
jecxz
xchg
xchg
mov
loop
fidiv
cwde
outs
fcmovbe
lea
fs
mov
adc
test
call
xor
dec
push
(bad)
repnz
loop
cld
bound
cld
xchg
jne
cld
loop
addr16
jg
cmp
mov
mov
sub
ja
and
enter
cld
aaa
dec
add
adc
ror
sub
inc
mov
lea
pushf
inc
mov
mov
inc
loopne
push
jo
and
out
fbstp
pmaxsw
mov
lds
push
into
mov
sub
jg
pusha
mov
(bad)
jb
ror
(bad)
mov
sub
out
cmps
nop
and
out
push
in
push
mov
and
sbb
mov
push
test
(bad)
mov
fbld
mov
jne
js
sti
imul
out
adc
adc
test
xchg
mov
cmps
mov
sub
sub
daa
and
lahf
shl
ins
jb
or
out
xchg
test
aas
xchg
lahf
sar
push
fisttp
inc
pusha
cli
or
dec
fisttp
mov
mov
sbb
jle
pop
stos
inc
push
mul
mov
mov
sbb
hlt
in
arpl
movs
cs
out
mov
mov
ret
add
iret
bound
mov
sub
mov
jl
jp
or
dec
stos
mov
shr
jbe
shl
add
sbb
push
lods
cdq
mov
or
dec
mov
cmp
pop
js
and
sbb
pop
daa
inc
imul
xchg
mov
(bad)
rcl
popa
ret
outs
jb
pop
adc
cwde
aas
fadd
xor
mov
adc
adc
rcr
sub
data16
fstp
mov
paddusw
mov
aad
fwait
push
sbb
dec
lock
push
iret
push
inc
sub
jb
mov
cmp
mov
in
lods
add
jmp
mov
test
imul
jns
sar
xor
out
inc
sbb
stos
sar
dec
dec
mov
repnz
and
or
cwde
cmp
mov
or
leave
and
sahf
and
push
xchg
aas
and
pop
inc
xlat
mov
lods
sti
outs
mov
out
sbb
ficom
pop
jns
ror
out
sahf
dec
push
jbe
mov
test
sub
xchg
ins
and
or
mov
dec
mov
and
inc
inc
sbb
inc
xchg
mov
pop
mov
jbe
xor
inc
mov
adc
xchg
fcmovu
(bad)
push
stos
(bad)
mov
adc
test
add
jl
es
cmps
ret
les
push
retf
aaa
xlat
add
or
dec
and
sub
push
pushf
into
cli
push
out
addr16
ss
fcom
retf
ins
jae
dec
into
rcr
dec
fcomp
jl
jge
call
icebp
fwait
or
jns
or
imul
cmps
out
fisttp
(bad)
mov
aam
outs
fistp
fwait
inc
and
lods
push
or
cmps
sbb
jbe
into
(bad)
pop
cld
cmp
mov
hlt
outs
fist
popa
xor
mov
add
stos
out
inc
test
popa
fcmovnu
popf
pop
and
adc
fimul
and
and
iret
cli
rol
test
ja
mov
jp
dec
repnz
movs
adc
fsub
pop
stos
pop
outs
add
mov
mov
retf
int
rol
fisttp
cld
or
pop
bound
addr16
stc
jp
mov
imul
sar
and
pop
stc
pop
add
mov
arpl
mov
mov
repz
pop
out
outs
pop
stc
xor
cmps
jne
mov
les
sub
neg
shl
into
push
repz
push
adc
mov
xchg
lock
call
arpl
icebp
repnz
jo
sti
bound
aam
add
sub
cmps
int3
call
sbb
mul
push
xchg
dec
push
retf
or
mov
fucomp
sahf
rol
or
fsubr
mov
fadd
mov
pop
js
push
out
jmp
sahf
inc
cmp
push
or
loope
push
hlt
xchg
test
shl
jnp
and
not
dec
addr16
outs
mov
sub
mov
ja
adc
mov
test
in
adc
sbb
push
pop
fwait
dec
push
mov
mov
and
int3
int
inc
pop
mov
sub
cmp
push
outs
pop
jge
and
xchg
pop
adc
test
xchg
iret
inc
pusha
pop
mov
sub
ins
and
test
aam
outs
cmp
fbld
(bad)
mov
pushf
mov
aaa
sahf
push
and
jo
imul
sti
shl
pop
and
repz
cmp
ret
mov
inc
dec
cmc
call
mov
scas
fild
mov
popf
std
stos
(bad)
aad
adc
cs
cmp
or
mov
fild
push
push
call
sub
add
cmp
sbb
add
add
xchg
rol
ds
mov
jne
fstp
cwde
push
cld
or
dec
add
(bad)
loopne
pop
push
mov
ja
add
popf
dec
mov
mov
mov
out
cwde
lahf
ret
rcr
adc
imul
cli
add
sbb
mul
fadd
sbb
xor
and
ror
fld
add
pop
cmp
enter
lock
out
retf
shl
mov
rol
xchg
sub
mov
iret
or
xor
cwde
or
lds
mov
or
outs
mov
(bad)
test
xor
aas
scas
jae
icebp
fidiv
lods
sub
ja
xchg
(bad)
in
and
out
in
jmp
inc
push
ret
shl
and
push
loop
jb
jecxz
rcl
add
mov
add
jae
mov
jmp
mov
push
cs
jae
cmp
ins
test
sbb
nop
clc
cmp
cmp
pop
mov
mov
scas
and
push
fwait
jno
or
xchg
fwait
(bad)
rcr
leave
(bad)
inc
adc
adc
in
inc
sbb
xchg
test
repz
daa
mov
hlt
lock
scas
cmp
in
fwait
lods
not
xchg
addr16
outs
ror
test
push
sbb
stc
jmp
mov
fdiv
inc
out
psubsw
xor
xchg
sbb
jne
je
retf
jns
add
mov
mov
mov
les
pop
inc
push
mov
outs
inc
icebp
fadd
or
sbb
mov
cmp
shr
push
mov
test
cdq
xor
cmc
cli
or
adc
out
dec
inc
enter
add
aaa
fdivr
push
mov
push
scas
and
and
jle
inc
pusha
push
stos
pop
mov
cmps
mov
inc
and
sbb
test
mov
cmp
jae
bound
fidivr
(bad)
xchg
jns
stos
fisttp
jecxz
scas
loopne
xor
movs
ins
ret
test
cmps
inc
inc
cmp
int
repnz
popa
xor
mov
rol
call
fisub
je
lods
push
xchg
pop
mov
jo
ficomp
inc
push
addr16
add
iret
and
ins
(bad)
adc
loopne
das
and
dec
cmp
pop
dec
mov
popa
add
js
and
mov
mov
lea
ficom
fcomp
lock
pop
test
movs
int
outs
mov
sbb
jmp
sbb
jne
movs
repnz
or
ret
call
mov
and
in
fwait
dec
cmp
(bad)
outs
fstp
and
jmp
sub
(bad)
js
dec
pop
in
ins
sbb
mov
pop
jmp
cs
mov
push
dec
adc
retf
into
mov
clc
jmp
lea
sbb
mov
or
arpl
out
adc
leave
fwait
jno
int
stos
sbb
sub
mov
add
(bad)
into
jl
js
stos
mov
sti
icebp
repz
loopne
jae
mov
sub
shl
cmps
sbb
hlt
je
mov
dec
pop
push
or
adc
mov
jmp
mov
push
dec
enter
inc
sti
inc
xor
repnz
repz
dec
dec
rcr
lahf
fistp
mov
adc
push
daa
jo
inc
sbb
loope
into
pop
cmp
into
shr
and
or
pop
cmc
push
scas
dec
inc
(bad)
pop
sub
outs
sub
mov
sbb
lods
pop
mov
xchg
in
adc
lea
or
pop
icebp
(bad)
frstor
or
ins
xchg
pop
pop
push
push
imul
push
jle
inc
inc
jmp
in
ror
arpl
test
sub
adc
std
bound
clc
or
outs
scas
jecxz
mov
add
add
pushf
mov
push
push
add
loope
sbb
pop
mov
cmp
add
call
loop
(bad)
sar
ss
jno
dec
jnp
mov
je
out
adc
mov
pop
popf
inc
rcl
push
xor
and
mov
pop
loope
add
ins
aas
call
add
fucomip
xor
(bad)
mov
mov
and
push
addr16
fiadd
add
fbld
dec
sbb
repz
inc
std
hlt
rcr
sub
shl
xchg
mov
or
pusha
(bad)
orps
inc
in
clc
ja
inc
fcom
jne
pushf
dec
daa
rol
and
cmp
rol
mov
pop
fmul
sub
push
fcom
jne
(bad)
mov
ja
xor
pop
dec
aas
fidivr
jmp
adc
out
jo
test
cmp
pusha
sbb
out
push
sbb
pop
sbb
fdivr
imul
clc
or
test
dec
imul
rcr
daa
gs
xchg
lods
mov
mov
shl
xchg
and
call
xchg
jecxz
shr
xchg
jl
xchg
cmp
xchg
pop
into
in
jge
sub
jg
fbstp
inc
lea
adc
movs
mov
push
mov
and
retf
mov
movs
aas
leave
push
xor
xchg
jbe
(bad)
mov
pop
jmp
inc
push
pop
push
add
jle
std
xor
mov
jp
(bad)
xchg
mov
mov
adc
pop
push
dec
test
mov
cmp
xor
(bad)
call
dec
call
dec
stc
xor
lods
fs
add
or
movs
cdq
out
push
push
or
fwait
cmps
jnp
mov
aam
dec
shl
mov
sub
ins
inc
scas
and
dec
mov
shl
in
sbb
addr16
xchg
ret
jne
jmp
pusha
pop
mov
mov
jmp
push
push
sahf
add
movs
iret
loope
adc
les
and
or
mov
dec
jb
cdq
and
xor
push
jo
jmp
xor
inc
mov
cmp
xor
and
jb
fistp
ss
shl
inc
inc
fidivr
loope
imul
test
mov
cmp
les
lds
lods
add
add
aad
sub
mov
sti
test
xor
mov
ja
mov
push
dec
cli
cmp
jo
push
xor
jbe
pop
stos
(bad)
mov
fmul
push
dec
and
in
aas
inc
push
add
not
dec
fwait
jmp
es
(bad)
aas
push
xor
fldcw
jmp
call
xor
int3
jne
out
stc
adc
mov
xchg
dec
ja
(bad)
idiv
fcmovb
clc
clc
xor
jmp
dec
inc
fild
cmps
js
or
addr16
cmp
add
scas
int
std
jg
xor
pop
adc
hlt
xor
push
sub
sub
out
test
adc
out
cmps
sub
mov
retf
adc
dec
xor
or
sbb
xchg
mov
jne
and
add
jno
inc
in
push
mov
cs
adc
sub
sub
pushf
pop
sti
inc
xor
aad
adc
push
icebp
retf
pop
sub
push
aad
mov
xchg
fidiv
ret
sbb
inc
add
in
sub
cmp
inc
sbb
aas
das
xor
push
aam
xchg
movs
iret
aam
(bad)
jle
inc
xchg
iret
push
js
sahf
aad
add
stos
mov
leave
lock
sbb
movs
aam
jbe
dec
pusha
or
dec
dec
bnd
cmp
das
les
jmp
push
xor
jmp
jne
addr16
adc
jle
lock
or
out
add
in
pop
ffree
sar
fist
mov
xchg
dec
add
ret
call
lock
pop
xchg
mov
lods
pushf
cmp
pop
sub
sbb
inc
scas
inc
lock
xor
inc
xchg
xor
mov
rcr
js
mov
xchg
pop
cmp
cmp
add
inc
xor
(bad)
out
sub
mov
cmp
sbb
test
mov
cmp
and
test
lea
fwait
ss
scas
mov
xor
sbb
jmp
nop
mov
add
ins
xchg
push
out
mov
aam
ret
cmp
mov
repnz
not
jg
or
cld
sub
cmp
(bad)
dec
and
cmp
xor
mov
mov
sub
repnz
jmp
and
dec
jo
jns
xor
pop
gs
or
inc
mov
es
iret
ja
ficom
or
and
jle
mov
mov
aas
pop
(bad)
pop
xchg
inc
mov
std
mov
daa
movs
fistp
scas
inc
dec
cmp
pop
ret
add
(bad)
in
(bad)
mov
inc
ds
pop
push
fild
or
ins
sub
lods
dec
mov
mov
adc
daa
cmp
sbb
ret
fstp
lea
mov
mov
retf
push
pop
pop
ror
inc
jge
jecxz
fnstsw
sti
retf
pop
mov
mov
xchg
std
fist
into
aaa
inc
xchg
xor
movs
jbe
mov
xor
push
test
inc
cs
jbe
mov
sub
mov
adc
stc
jbe
add
and
sbb
imul
and
mov
xchg
inc
(bad)
mov
test
xchg
jmp
out
pop
cld
pushf
test
int3
fst
sbb
hlt
not
lea
mov
dec
ror
dec
das
imul
jb
rcr
cmp
sbb
mov
xchg
rol
sbb
es
in
test
pop
xor
std
mov
rcl
sar
xchg
mov
ret
dec
sti
mov
jecxz
outs
sahf
mov
inc
aaa
xor
rol
adc
sahf
jle
dec
sub
cmps
jbe
xchg
push
pusha
es
adc
fcom
adc
inc
jbe
mov
mov
push
xchg
jmp
jo
or
cmc
and
and
dec
push
sbb
push
out
xor
shl
jle
jmp
scas
sahf
cli
jp
add
les
sar
sbb
pop
test
push
mov
ficomp
imul
mov
adc
and
pop
mov
pop
test
leave
in
in
xchg
out
inc
cmps
ret
in
mov
xor
out
pop
push
xor
and
add
lods
pop
and
rol
retf
fist
cmp
loope
inc
fsubr
out
fs
mov
cmp
cmp
inc
sub
lds
imul
mov
mov
jbe
sub
test
xor
inc
pop
les
scas
mov
pop
pop
mov
aam
fisub
xchg
ja
mov
sub
(bad)
jo
lahf
cmp
cmp
jo
sbb
sbb
int
sti
(bad)
scas
shl
cmp
mov
mov
mov
jno
(bad)
test
jle
test
mov
out
std
out
(bad)
ss
cwde
mov
scas
xchg
inc
pop
clc
scas
pop
xchg
loopne
xchg
xchg
mov
mov
push
dec
cdq
push
pop
call
xchg
xchg
sbb
mov
cwde
push
gs
out
sub
xor
leave
mov
shl
add
clc
adc
mov
(bad)
and
mov
jle
sbb
(bad)
ficom
stos
jbe
bound
sar
cmp
mov
pop
call
loop
in
pop
aaa
or
(bad)
shl
ffreep
cdq
push
test
and
pushf
ja
lea
inc
jle
jp
fwait
(bad)
hlt
leave
or
leave
mov
cmp
fwait
mov
add
jg
aam
fstp
test
sbb
inc
mov
dec
in
mov
mul
test
push
xchg
ds
sar
pop
mov
(bad)
sbb
pusha
push
in
fidiv
mov
dec
push
adc
leave
sbb
mov
xor
nop
push
add
or
rcr
adc
sbb
cli
mov
imul
mov
jnp
mov
xchg
mov
adc
fld
add
pop
lds
xchg
pop
dec
ins
jl
or
xor
fist
cdq
stos
xlat
dec
aaa
jno
cli
iret
retf
or
out
or
out
add
cmps
gs
pop
jns
jle
loop
sub
lock
mov
mov
inc
je
(bad)
mov
(bad)
inc
dec
hlt
jnp
or
jae
or
imul
push
xchg
sbb
pusha
or
inc
aaa
or
leave
(bad)
ficomp
fchs
inc
mov
dec
frstor
lahf
fwait
test
ja
or
cmp
lahf
mov
shr
inc
xchg
into
inc
in
xchg
inc
dec
das
jmp
test
ds
cmp
jl
inc
push
inc
mov
push
repnz
popf
mov
mov
mov
outs
(bad)
xor
iret
mov
ins
add
add
stc
mov
inc
loopne
pop
je
jae
js
xchg
sbb
push
test
sbb
pop
add
loopne
mov
popf
or
dec
sbb
sub
icebp
outs
cmps
or
inc
cld
xor
mov
aaa
mov
add
xor
adc
push
pop
pop
and
inc
aas
repz
es
xor
jp
(bad)
clc
pop
lea
xor
iret
mov
aaa
mul
lahf
push
ficom
pop
pop
mov
xchg
imul
mov
xchg
mov
dec
test
loope
sar
mov
sbb
into
test
aad
push
and
data16
jl
call
lds
xchg
cmps
jle
std
and
dec
imul
test
inc
aad
inc
xor
push
dec
xor
cmp
pop
mov
mov
push
pop
lea
hlt
dec
daa
out
push
pop
test
xor
sbb
cwde
jp
cmc
add
xor
fadd
pop
jl
addr16
mov
jae
out
sub
push
jg
movs
(bad)
scas
int
jns
push
stos
mov
std
jecxz
dec
pop
pop
or
test
in
stc
repnz
add
bound
pushw
ffreep
int3
rcr
(bad)
loope
and
jecxz
adc
push
scas
cmps
jmp
xchg
fisub
sub
cmps
fsubr
mov
std
xchg
add
add
or
(bad)
pop
push
mov
and
arpl
adc
xor
icebp
jmp
scas
mov
test
mov
in
mov
adc
mov
std
pop
lahf
sub
cmp
ret
and
inc
push
ss
jno
cmp
sbb
mov
sub
call
and
bound
xor
retf
cmp
inc
aas
add
jmp
ret
sub
mov
(bad)
and
loopne
jmp
test
sbb
(bad)
arpl
fild
leave
lahf
dec
sti
add
mov
pop
pushf
aam
icebp
push
movs
xchg
adc
loopne
cmp
cld
movs
xchg
movs
cmc
xor
or
xchg
mov
sbb
inc
es
rcl
sub
dec
jnp
neg
fdivr
pop
dec
mov
jb
and
(bad)
push
les
inc
sbb
xchg
mov
dec
rcr
iret
xchg
popa
xor
pop
jp
imul
add
mov
imul
cs
xchg
push
inc
popa
(bad)
rol
mov
xor
enter
stos
setne
sar
push
out
outs
in
add
pop
out
(bad)
fs
xchg
pop
mov
pop
fsubr
pop
gs
xor
adc
aas
ret
out
mov
or
xchg
pop
jb
ficom
sbb
movs
xchg
push
fist
jmp
ficom
(bad)
mov
mov
adc
mov
and
int
nop
mov
pop
mov
xor
xchg
in
dec
arpl
std
cs
inc
std
adc
cdq
out
in
lahf
div
push
rcr
(bad)
fwait
add
es
sbb
xor
shl
dec
push
jecxz
xlat
jns
jmp
enter
mov
adc
sti
into
mov
adc
in
sbb
jmp
ret
fmul
mov
xchg
ins
push
jle
push
xor
xor
in
push
in
outs
push
xchg
push
pop
sets
ret
jge
jmp
mov
ret
sub
sbb
jo
lea
adc
push
daa
jecxz
into
out
iret
bound
out
ins
push
test
mov
dec
addr16
xchg
dec
lahf
test
adc
cld
mov
call
fwait
sbb
xchg
popa
and
aas
adc
stc
(bad)
loop
(bad)
out
pop
pop
daa
or
and
mov
int3
or
loop
lea
mov
arpl
in
rol
scas
mov
mov
xchg
lahf
jl
cmp
out
(bad)
in
stos
arpl
movs
sbb
push
cmp
xchg
scas
push
cmp
and
jo
nop
jne
mov
stos
push
(bad)
or
es
fist
adc
test
in
sub
cmps
and
mov
data16
jge
jo
add
pop
mov
mov
sti
ret
cmp
out
fs
mul
mov
mov
fnsave
out
not
xlat
mov
int
(bad)
imul
icebp
mov
icebp
add
jp
inc
lods
(bad)
push
jmp
xchg
cmp
shr
(bad)
cmp
sub
sbb
int
(bad)
out
ja
sbb
cmp
xor
add
sbb
sbb
sub
cmp
lahf
pop
xchg
xchg
jne
rcr
mov
mov
cwde
xchg
fcmovb
dec
out
push
jge
ins
stc
in
jnp
fxam
iret
fidivr
aas
jp
das
inc
xor
mov
add
shl
movs
or
dec
mov
arpl
xchg
jle
mov
popf
mov
cmp
popa
into
lea
sub
xchg
in
dec
cli
(bad)
or
mov
out
jmp
in
movs
rcl
xor
daa
adc
cmp
movs
outs
ror
jge
je
xlat
dec
(bad)
in
dec
sbb
(bad)
sahf
retf
ficom
push
(bad)
or
cdq
arpl
mov
inc
(bad)
cmp
and
les
imul
int3
add
adc
repz
cmps
or
out
pop
push
popa
xchg
sub
adc
xchg
inc
sub
out
pop
aaa
push
cli
push
aad
jns
cmps
or
cmps
xchg
fdivr
and
and
mov
jg
cld
mov
sub
js
pop
sbb
and
or
jnp
mov
xchg
inc
in
mov
scas
xor
aam
adc
fist
call
mov
xchg
imul
jp
lods
aas
adc
jbe
xchg
mov
sub
and
add
add
push
out
sti
jne
jne
jbe
xchg
sub
cdq
in
cli
push
out
push
lock
rcr
jbe
ins
push
lods
imul
mov
jmp
fdiv
push
and
lock
sbb
jae
cmp
adc
and
xor
xchg
xchg
mov
and
imul
sbb
push
mov
outs
adc
dec
xchg
int
mov
out
xor
add
loop
mov
fmul
adc
fsubr
push
xchg
or
sub
add
(bad)
xchg
cmp
test
cwde
inc
push
add
jns
(bad)
push
sbb
lods
push
call
popa
cmp
mov
xor
aas
pop
jb
push
xor
and
in
pop
cmp
inc
fsubr
sbb
jmp
pshufw
mov
and
pop
call
ret
int3
addr16
and
aam
idiv
mov
iret
loop
jecxz
les
and
sbb
call
sbb
jl
in
shl
sbb
cmps
clc
bound
pop
imul
ins
sbb
or
xor
jecxz
xchg
sub
enter
xor
leave
test
inc
sti
cmp
sub
daa
addr16
pop
addr16
cwde
add
mov
mov
jb
mov
or
dec
into
mov
(bad)
dec
cmp
mov
jmp
loop
fsubrp
xor
(bad)
push
loopne
and
mov
adc
dec
fadd
ffreep
daa
arpl
and
adc
imul
jmp
fmul
imul
call
pop
jo
aam
icebp
xlat
test
mov
cmp
or
jb
out
mov
push
push
push
mov
sub
jmp
mov
pop
pop
adc
jnp
jecxz
fimul
pop
add
fs
sbb
loop
test
mov
retf
adc
(bad)
add
shr
sbb
test
cmp
call
push
add
jo
xor
dec
xlat
xchg
or
repz
mov
add
mov
std
sbb
icebp
adc
ds
fisttp
push
cdq
in
jbe
lds
dec
dec
dec
ins
mov
pop
addr16
mov
cwde
mov
jmp
loopne
xor
add
mov
mov
shl
stos
loopne
imul
xchg
sti
and
xor
out
cmp
stos
cmovbe
stos
fistp
retf
pop
pop
mov
sti
or
mov
pop
int3
mov
lods
mov
es
(bad)
mov
pop
mov
jns
icebp
cmp
inc
nop
test
inc
push
lods
mov
adc
dec
(bad)
hlt
shr
sub
mov
rcr
in
xchg
or
or
push
mov
xchg
cmp
aaa
(bad)
clc
jo
sub
cmp
fidivr
and
push
mov
jbe
add
nop
mov
xchg
dec
data16
enter
mov
push
dec
adc
sar
inc
mov
js
neg
(bad)
bound
mov
into
adc
rcl
popa
outs
jbe
inc
add
jnp
dec
jmp
fsub
push
cmc
sub
scas
retf
dec
pop
push
and
adc
cmp
mov
xchg
ins
mov
cmp
or
and
xchg
mov
cs
addr16
loop
push
cmc
cmp
and
mov
or
jne
int
mov
jmp
jb
mov
loope
les
dec
jp
gs
mov
(bad)
fadd
pop
sbb
dec
imul
adc
or
add
(bad)
adc
or
mov
dec
fmul
out
xor
loopne
push
pop
sahf
stos
(bad)
mov
dec
xchg
ss
test
xchg
shl
and
and
data16
adc
add
cwde
icebp
inc
pop
jb
cmp
call
xor
cdq
ret
push
push
add
movs
(bad)
shl
test
sbb
xor
outs
jns
fsub
ins
xlat
(bad)
and
xchg
retf
xlat
sbb
movs
sbb
mov
pop
adc
in
mov
jmp
in
in
cs
xchg
stc
dec
xchg
inc
dec
or
pop
cmp
scas
push
push
std
xor
cmps
inc
and
jae
aad
pop
xor
cmp
jl
or
imul
fstp
loop
(bad)
mov
hlt
(bad)
js
mov
mov
aaa
add
int
(bad)
fnstenv
retf
adc
je
fucom
and
sbb
adc
call
pop
sub
mov
repz
loope
cmp
cmp
and
out
jae
out
or
adc
popf
lock
adc
cmp
inc
inc
aam
add
inc
pop
rcr
mov
int3
mov
mov
es
sti
push
or
push
mov
add
or
xor
add
aam
dec
mov
xor
dec
jne
in
pop
ins
xor
scas
cmp
and
std
dec
scas
call
inc
push
sub
mov
pop
in
imul
js
fs
lea
test
bsr
cmp
jo
loopne
pusha
ds
mov
xchg
clc
or
xchg
mov
pop
sbb
cmc
in
call
cmp
repnz
jns
sub
hlt
jmp
outs
inc
cmp
icebp
loope
retf
mov
jmp
add
sub
jb
out
dec
push
es
pop
push
inc
cmp
ret
and
sbb
jno
rcl
push
and
pop
cmp
fcomp
nop
pop
or
adc
in
clc
inc
scas
(bad)
enter
(bad)
es
daa
sbb
mov
pop
and
mov
mov
sbb
mov
jbe
jne
lds
dec
cmp
sub
xor
cmp
scas
leave
loope
inc
mov
cmp
sbb
pushf
adc
pop
cmps
xor
cdq
push
(bad)
add
inc
test
hlt
push
and
pop
clc
jae
add
push
xchg
out
sub
pop
js
mov
int
jb
pop
imul
add
xchg
sub
mov
hlt
ja
push
jbe
or
scas
lds
inc
push
jno
aas
and
rcl
or
retf
fwait
or
xchg
out
les
mov
leave
dec
add
push
mov
out
not
fwait
inc
xchg
stos
(bad)
(bad)
(bad)
mov
dec
mov
or
mov
scas
shl
and
scas
dec
das
pop
or
loopne
jbe
or
cs
fsubr
sahf
add
and
bound
das
hlt
and
and
(bad)
div
call
or
add
sub
test
(bad)
xor
or
shr
push
ins
test
adc
fwait
sub
movs
rcr
sbb
jnp
xor
mov
push
outs
jns
mov
cmp
out
mov
outs
and
cs
aas
pop
scas
xchg
dec
mov
add
mov
retf
fld
jmp
and
cmp
mov
sub
cdq
jno
or
add
mov
sub
or
shl
fdiv
xor
je
movs
in
test
add
pop
enter
jb
popf
mov
xor
dec
mov
(bad)
mov
mov
pop
lock
leave
and
cmp
mov
outs
outs
hlt
fsub
(bad)
fsub
add
push
cmc
xchg
mov
jp
adc
mov
dec
jge
lods
mov
jb
pusha
add
xchg
mov
fwait
aaa
mov
dec
jmp
or
xor
out
pop
adc
jle
fwait
mov
hlt
adc
pop
jg
xor
dec
aas
add
adc
aas
sti
pushf
sbb
aaa
adc
sub
ficom
pushf
mov
es
inc
mov
inc
sbb
in
mov
sub
fdivr
out
adc
and
mov
jle
cmp
jmp
pop
dec
out
loop
adc
jge
inc
push
mov
push
mov
nop
mov
and
dec
push
or
push
or
mov
mov
in
daa
dec
and
sub
fadd
cmps
into
inc
sub
mov
loope
bnd
mov
xor
loop
in
push
ror
movs
mov
jne
sub
jne
out
push
dec
pusha
jmp
mov
adc
and
test
movs
ja
dec
push
dec
push
cmp
sbb
inc
sub
sbb
xchg
xchg
or
jge
les
adc
xchg
mov
pop
push
retf
inc
out
mov
push
(bad)
std
inc
dec
rcl
loop
mov
cwde
aas
bound
xor
sbb
push
fldcw
xor
push
in
mov
and
pop
cwde
test
sar
ret
dec
push
aas
xchg
mov
lock
jnp
dec
movs
pop
adc
pop
push
xor
mov
mov
fbstp
adc
popf
xor
fldcw
cwde
jmp
repnz
inc
stos
push
cdq
out
xor
fimul
les
mov
ins
iret
and
jb
shr
and
and
mov
arpl
fmul
dec
popa
fisttp
nop
inc
and
bound
mov
sbb
pop
and
jmp
push
ret
mov
sub
sub
cdq
and
cs
pop
addr16
ss
movs
sbb
xor
int3
pusha
pop
or
ins
imul
mov
mov
push
sub
or
xor
xor
dec
add
fimul
retf
pusha
push
or
pop
leave
jnp
mov
and
fsub
mov
jb
(bad)
push
scas
mov
pop
or
jno
shr
push
push
sbb
(bad)
(bad)
cmp
add
add
xchg
stos
fistp
stos
iret
stos
adc
in
mov
sub
cdq
jo
push
cmc
xchg
push
and
pop
xrelease
mov
out
stc
sbb
arpl
(bad)
sbb
mov
ja
outs
cld
test
(bad)
retf
jb
and
es
jae
pop
sub
ins
ja
cwde
sbb
ror
out
xchg
ins
fistp
jne
sysenter
div
sbb
nop
data16
in
xor
jo
into
pop
es
jbe
fwait
pop
dec
out
test
(bad)
stos
add
dec
aam
and
test
sti
xchg
mov
push
cwde
cwde
out
in
fdivr
shl
xchg
movd
adc
mov
fisubr
in
mov
jbe
out
sbb
sub
jp
fadd
push
dec
or
loop
movs
dec
popaw
pop
sti
jecxz
movs
push
ss
mov
(bad)
cmp
xor
dec
dec
cs
rcr
sub
jecxz
mov
adc
pop
sbb
jnp
jg
cli
leave
clc
call
enter
pop
shl
inc
inc
and
les
pop
mov
jge
add
js
ds
jne
aam
xor
adc
inc
mov
stos
int
adc
pop
shr
cmp
push
mov
fndisi(8087
xchg
jns
pop
aam
stc
enter
dec
bound
xchg
sub
ins
xchg
cmc
pop
jge
inc
and
repnz
out
call
lea
mov
push
jmp
cmp
int3
cwde
mov
hlt
mov
dec
pop
pop
jle
mov
lock
pushf
and
sbb
cwde
push
sar
inc
pop
mov
sbb
(bad)
mov
cmc
jl
popf
cs
call
sbb
or
icebp
(bad)
lds
jl
mov
push
enter
mov
(bad)
cdq
rcl
scas
mov
push
xchg
adc
(bad)
mov
and
or
and
rol
inc
arpl
rcl
or
inc
stos
jle
dec
ds
and
pop
push
mov
mov
(bad)
in
push
arpl
lock
pop
dec
in
bound
xlat
iret
jne
xchg
(bad)
call
das
test
mov
xchg
add
sub
cld
adc
add
pop
shl
xchg
and
inc
push
cmp
xchg
sbb
es
xchg
enter
out
xor
ins
fwait
pop
push
rol
out
(bad)
push
mov
and
in
add
sub
xor
xlat
scas
cmps
in
int
aas
pushw
xor
mov
push
(bad)
dec
xor
shl
hlt
ja
nop
inc
sub
pusha
mov
sbb
or
ja
pop
and
in
xchg
inc
sbb
jno
add
jl
add
popa
bound
shl
xor
mov
pusha
dec
inc
mov
retf
dec
dec
hlt
jns
pusha
loope
fistp
mov
mov
xor
ja
mov
pop
and
push
sbb
and
add
xor
outs
mov
out
mov
mov
pushf
mov
mov
cmp
icebp
cwde
push
sub
fisub
jl
jbe
mov
mov
mov
call
mov
dec
in
and
cmp
or
pop
ins
ret
dec
fsub
mov
mov
pop
ret
sub
pop
or
push
aam
pop
lahf
bound
std
pop
lds
jb
pop
hlt
mov
ds
adc
mov
sub
bound
ror
cmp
dec
adc
in
cdq
pop
add
adc
loope
fstp
jbe
int3
fcmovu
cmps
int
push
mov
ja
scas
addr16
fisub
pop
fidivr
or
out
sbb
push
pop
and
mov
cmc
call
cli
scas
call
cmp
cdq
dec
pusha
scas
imul
push
(bad)
mov
ins
and
dec
repz
ds
push
in
scas
out
mov
sti
push
push
mov
icebp
add
xchg
scas
lds
aaa
retf
jl
mov
out
mov
jge
sahf
ret
and
sub
call
push
popa
fucom
mov
xor
mov
mov
movs
test
cmps
int
mul
sub
sbb
add
cli
je
mov
push
sub
adc
test
xchg
push
or
call
mov
inc
jns
data16
je
in
retf
out
pop
or
sub
test
sahf
mov
jg
cmc
sub
inc
imul
stos
stos
js
xchg
sub
test
dec
sub
dec
lods
out
ins
mov
std
ror
dec
nop
sub
cmp
lds
ficom
jmp
call
jne
outs
out
jg
fcmovu
mov
arpl
aas
aam
sub
fiadd
in
cmps
mov
rol
add
adc
xchg
pusha
ficom
jne
inc
xlat
scas
mov
cld
cld
sub
xor
cld
inc
mov
dec
ins
les
inc
retf
add
das
inc
in
and
mov
adc
or
push
cmp
fstp
nop
lods
pop
push
lods
pop
retf
jbe
fs
add
pop
dec
fidiv
or
adc
jle
push
cmc
shr
sub
push
cmp
dec
inc
inc
sub
jb
push
fimul
xor
test
inc
lods
retf
xchg
push
add
mov
pop
scas
xchg
pushf
out
inc
or
xchg
not
or
jbe
pusha
ja
icebp
loop
jg
adc
stc
(bad)
repz
mov
inc
aas
fst
(bad)
and
scas
push
jns
xor
mov
clc
dec
mov
adc
mov
xchg
mov
movs
out
inc
in
mov
(bad)
dec
xchg
xchg
pop
(bad)
adc
call
dec
arpl
jecxz
and
hlt
gs
xor
and
lea
push
lods
mov
imul
mov
push
cwde
seta
gs
ds
mov
mov
addr16
mov
xor
xchg
xor
sbb
clc
xor
popfw
cmps
mov
push
pop
int3
or
cmps
mov
pop
jp
mov
stos
scas
retf
cwde
lods
pop
xchg
inc
movs
cmp
into
sub
adc
adc
repz
sbb
aam
dec
loopne
ficom
shl
gs
daa
retf
int
jb
xor
jae
stc
add
inc
mov
push
fidiv
aad
popa
push
cmp
(bad)
sti
in
xchg
mov
xchg
push
adc
and
add
jge
add
jno
lods
adc
cld
dec
arpl
in
cmp
into
mov
movs
stos
imul
into
(bad)
pusha
add
sbb
and
fdivr
mov
nop
mov
inc
mov
popf
out
and
mov
xor
dec
ins
or
inc
push
dec
mov
sbb
add
cmp
or
shl
std
push
sbb
inc
outs
xchg
aaa
mov
dec
xchg
lahf
xor
dec
inc
or
ins
pop
into
bound
loope
movs
mov
xchg
and
loop
fild
pop
mov
mov
ret
sbb
adc
mov
repz
sub
out
lea
inc
adc
mov
push
jg
push
push
mov
icebp
dec
jns
mov
fadd
call
repnz
and
and
call
and
fcom
rcl
daa
call
ficomp
dec
fs
inc
inc
ret
cmp
fisubr
scas
test
(bad)
popf
xchg
fadd
jg
scas
jb
cmp
inc
sub
scas
leave
jl
jno
(bad)
sbb
and
jo
sub
adc
jnp
mov
scas
cmp
push
pavgb
ror
add
mov
ret
sahf
jecxz
sbb
(bad)
test
test
push
pushf
ins
lods
pop
xlat
push
jmp
jb
xor
arpl
(bad)
adc
cmc
push
ds
jo
jmp
and
sbb
aad
dec
inc
iret
and
jnp
or
or
push
xchg
and
shr
enter
xlat
out
adc
sbb
push
mov
cs
push
mov
test
cmp
jnp
lds
and
or
inc
imul
lods
dec
(bad)
addr16
adc
(bad)
sub
inc
inc
fwait
xchg
xchg
movs
in
int3
(bad)
movs
and
(bad)
inc
pop
or
lods
fcmovu
rcl
push
add
push
rcr
in
jl
mov
fs
mov
ror
xlat
adc
inc
call
add
(bad)
enter
ins
push
cmp
inc
leave
pop
jno
mov
nop
scas
ds
sbb
or
mov
inc
outs
enter
aad
and
jle
enter
loopne
in
arpl
int
pop
in
dec
xchg
pop
sbb
out
jge
dec
mov
or
xor
push
xor
adc
pushf
leave
dec
adc
push
test
inc
fiadd
sbb
mov
dec
pop
mov
sbb
(bad)
fst
dec
dec
jl
mov
or
inc
data16
pop
inc
mov
mov
mov
dec
sub
xchg
std
inc
test
add
test
push
adc
add
xchg
fadd
dec
mov
xchg
lods
imul
rcr
rcr
in
std
aas
mov
xchg
in
cdq
or
pop
stos
stos
cmps
mov
out
add
mov
loop
xchg
je
sti
pop
add
push
xchg
jl
jne
push
jb
in
imul
push
pusha
(bad)
inc
je
std
scas
dec
xor
nop
and
lods
xchg
lods
lds
inc
mov
push
mov
pop
imul
call
add
enter
dec
jmp
pop
xor
(bad)
pop
push
and
or
fstp
inc
or
imul
popa
sbb
stc
je
loope
sahf
inc
fwait
int
add
out
push
pop
sub
out
ficomp
push
into
stos
in
fst
sbb
aad
sbb
push
mov
dec
aad
mov
aaa
and
mov
retf
xchg
call
fmul
in
mov
fild
(bad)
jo
cmp
inc
lods
and
jmp
test
mov
cmp
or
jb
dec
pop
popa
enter
or
mov
popa
scas
jnp
fcomp
mov
xor
std
fild
or
shl
xchg
ret
mov
dec
rcl
div
test
pop
or
xor
xchg
setl
fs
push
movs
xchg
sbb
dec
xchg
pop
sub
or
inc
jmp
jb
xchg
loope
aam
xchg
pop
sbb
dec
call
cwde
fs
push
adc
pop
jbe
iret
jnp
shl
pop
dec
mov
mov
mov
in
test
inc
repnz
mov
mov
gs
dec
sub
cli
cdq
loope
cmp
int
sbb
int
jne
rcl
stos
mov
mov
mov
adc
adc
mov
xor
test
cli
inc
aas
loopne
pop
mov
push
pop
sub
scas
inc
dec
mov
and
idiv
(bad)
icebp
add
adc
sbb
das
dec
adc
fs
or
sar
adc
xchg
or
cmp
lods
sbb
test
jb
les
pop
pop
adc
mov
js
cmp
daa
(bad)
imul
mov
data16
or
adc
inc
punpcklbw
cmp
je
je
(bad)
dec
sub
gs
sbb
outs
popa
cmp
cmps
sub
shl
and
leave
adc
push
jo
icebp
cwde
inc
repz
xchg
mov
ds
pop
(bad)
jmp
or
inc
xchg
xchg
or
aam
push
sub
es
and
jp
cmp
cmp
aam
(bad)
lods
add
ror
add
repnz
cmp
fisub
and
dec
mov
mov
xchg
es
popa
adc
or
xchg
(bad)
(bad)
jnp
inc
jno
cdq
add
pop
jne
push
push
sbb
jl
stos
push
jb
dec
sbb
sahf
xchg
push
sub
call
mov
dec
sub
and
std
xor
push
and
pop
ds
pop
dec
fild
or
cld
and
push
mov
xor
int
std
jge
jnp
mov
jae
ret
jmp
sub
dec
lds
adc
push
out
jmp
leave
inc
call
or
stc
xor
fild
ss
out
push
xchg
jle
in
aam
or
aaa
and
xor
pop
(bad)
mov
inc
fnstsw
xchg
in
ss
mov
push
in
rol
jle
cmc
push
test
pop
pop
dec
das
ja
mov
das
dec
xor
(bad)
pop
xlat
or
ficom
sub
(bad)
pop
add
dec
adc
int
mov
jo
cmp
jecxz
sub
lods
jg
jae
mov
lock
stos
pop
push
cdq
in
retf
or
mov
mov
dec
scas
(bad)
dec
mov
mov
popa
sbb
mov
scas
loope
not
push
movs
pop
fsub
shl
cmps
cmc
rcl
mov
push
sub
and
(bad)
fdivr
jge
push
in
mov
sbb
sti
jle
adc
dec
inc
adc
movd
test
cmp
jle
out
outs
outs
adc
imul
icebp
push
xor
fdiv
xchg
mov
sub
inc
xchg
fidivr
jb
jne
(bad)
(bad)
cwde
data16
lahf
movs
shr
aad
cmc
popf
jl
sbb
scas
gs
pop
(bad)
mov
test
inc
or
and
add
mov
jge
xor
or
inc
popf
mov
jmp
pushf
add
movs
pop
add
fidiv
xchg
test
cli
mov
fidivr
dec
and
retf
retf
dec
cmp
xor
cmp
and
add
or
enter
cmps
cmp
mov
mov
iret
xor
mov
add
mov
adc
mul
ret
push
push
pusha
mov
mov
mov
sahf
pop
and
div
lods
fucomp
data16
pop
sub
adc
out
push
sub
inc
mov
mov
hlt
stc
ret
(bad)
aam
sbb
push
or
jl
mov
push
xor
test
xchg
loope
out
clc
in
inc
inc
cmp
mov
mov
dec
mov
or
adc
lock
adc
xor
in
neg
arpl
dec
or
in
inc
jmp
pop
ret
xor
and
push
test
mov
fidiv
aaa
pop
sbb
and
shr
push
or
daa
ret
scas
enter
outs
stos
inc
fwait
ins
pop
jne
xchg
adc
das
daa
mov
fadd
add
jns
cmp
add
jle
out
jl
aas
sbb
mov
jae
adc
and
mov
dec
inc
jg
mov
je
in
xor
sbb
adc
cmp
frstor
dec
adc
shr
inc
leavew
inc
mov
dec
test
mov
sub
stc
(bad)
mov
mov
adc
cmps
inc
xor
pop
mov
ins
sub
pop
add
push
or
mov
mov
outs
jmp
push
leave
sub
jmp
push
aas
pop
cmp
pushf
(bad)
fcmovb
shl
hlt
jae
adc
sbb
pop
imul
mov
(bad)
lock
pop
ss
pop
and
cmps
adc
repz
push
lods
or
(bad)
push
int3
daa
(bad)
cs
xchg
mov
mov
dec
or
sub
mov
jae
imul
(bad)
mov
jecxz
(bad)
adc
ror
cld
sub
dec
jmp
ins
lea
repz
dec
cwde
inc
stc
loopne
push
mov
xlat
xchg
xor
pop
lea
in
cmp
imul
cmps
(bad)
sbb
retf
cmc
sti
or
imul
xchg
stos
push
jo
mov
ret
in
call
jae
mov
cdq
int
lods
clc
je
inc
pop
shr
adc
stos
cmp
popa
ror
call
mov
cmps
shl
ins
cmp
inc
sub
xchg
adc
mov
adc
shl
sbb
ja
mov
enter
icebp
out
adc
fwait
dec
dec
call
mov
fwait
inc
push
or
inc
clc
mov
in
aaa
shl
sahf
test
cs
aam
xchg
in
sahf
daa
ret
push
pop
fwait
rep
and
push
xchg
pop
icebp
jnp
out
jo
inc
cwde
pusha
adc
retf
std
sub
hlt
mov
xor
adc
push
fcmovnbe
sbb
adc
pushf
dec
cwde
sbb
inc
nop
sahf
aas
cmc
out
(bad)
hlt
test
fsubr
and
push
push
xchg
lods
or
adc
mov
sub
adc
dec
das
xor
test
call
lds
mov
int3
add
jnp
sahf
adc
mov
or
adc
cmps
mov
mov
push
adc
and
daa
mov
cmps
into
xor
sti
sub
mov
xor
test
rcl
adc
mov
mov
stc
dec
or
mov
jl
pop
ret
loope
cdq
daa
sub
ins
pop
imul
call
xchg
mov
(bad)
scas
jbe
cmps
in
fucomip
outs
mov
lahf
call
pop
enter
xor
pop
and
inc
cmp
test
arpl
push
mov
inc
mov
xchg
push
jnp
push
(bad)
jo
add
(bad)
xlat
adc
sbb
sbb
cmp
adc
sar
push
push
inc
dec
ficom
jb
dec
pop
sbb
or
ins
mov
pop
push
out
cmps
enter
js
mov
pop
push
hlt
add
sbb
push
jmp
sub
add
out
and
dec
xor
(bad)
xchg
ret
xchg
mov
adc
(bad)
pop
mov
js
mov
sub
mov
cmp
cmps
sub
cmp
push
or
jmp
aaa
addr16
cmp
dec
pushf
test
leave
sub
inc
retf
ss
inc
fcmovne
pop
out
cdq
ror
mov
mov
out
retf
sub
loopne
and
pop
inc
or
neg
fidiv
pop
jmp
(bad)
out
sub
sub
jo
daa
inc
or
retf
imul
sti
push
test
and
ins
sub
and
icebp
dec
push
adc
lock
int3
push
pop
cmp
jae
mov
pop
xlat
mov
mov
(bad)
loope
ja
jo
jno
xchg
add
leave
mov
cmps
xor
add
inc
pop
push
inc
lods
retf
ja
push
push
and
and
retf
mov
sub
hlt
aam
dec
inc
sub
or
add
je
retf
cdq
cmps
xor
cmp
mov
clc
int
inc
adc
xchg
push
pop
pop
jecxz
aad
fldenv
push
cli
push
pop
call
mov
add
mov
sbb
inc
enter
dec
test
sub
push
loop
mov
cmps
aam
or
mov
imul
bound
push
jecxz
mov
sti
push
cmc
je
cwde
ret
xchg
pusha
sub
add
ror
xor
not
clc
jecxz
inc
inc
jmp
pop
xchg
repz
pop
or
in
adc
pushw
mov
dec
mov
out
jle
fdiv
pusha
fsubrp
pop
sahf
inc
in
mov
inc
pop
les
mov
enter
fstp
lods
sub
pusha
mov
arpl
pop
pop
leave
inc
mov
xchg
dec
movs
cmp
cs
mov
xchg
aam
movd
repnz
push
pop
daa
and
dec
mov
repz
inc
js
leave
or
and
xchg
pop
xchg
xor
adc
shr
jne
iret
mov
clc
mov
cmp
cs
iret
jp
aaa
jne
push
mov
mov
mov
inc
mov
cmp
mov
bt
xor
dec
repnz
xor
pop
inc
(bad)
(bad)
in
fdivr
sbb
jbe
sub
adc
loope
pop
push
cld
fdiv
scas
mov
fcomp
fimul
sub
mov
or
pop
scas
adc
ret
sbb
ja
ret
retf
out
dec
push
pop
enter
jns
arpl
cdq
sub
(bad)
push
mov
add
sub
lds
mov
inc
add
outs
pop
mov
out
ins
loopne
add
icebp
imul
cmc
push
les
add
cld
jmp
xchg
ficomp
jne
out
pop
pop
stos
or
call
in
jbe
inc
and
mov
dec
aas
les
into
call
and
clc
(bad)
xor
je
pusha
(bad)
or
pop
and
adc
mov
sbb
repz
or
xchg
leave
cli
push
sub
in
loope
(bad)
xor
jecxz
(bad)
dec
in
or
dec
pop
jno
xchg
cli
sti
sub
pusha
int3
mov
ins
inc
inc
sub
jl
into
xor
pop
js
cli
push
dec
xchg
bswap
daa
dec
das
fbld
adc
out
cmp
sub
xor
or
ja
fs
cld
les
jge
add
push
and
pop
ja
mov
xor
adc
popa
ficom
scas
imul
imul
and
mov
loopne
ret
mov
mov
inc
pop
mov
pop
add
inc
mov
or
fmul
es
fisubr
clc
(bad)
or
add
addr16
xor
and
scas
and
bound
test
adc
add
inc
push
fsub
fisttp
jno
pop
fidivr
adc
inc
lods
sahf
jns
cdq
mov
popf
mov
aaa
jbe
scas
pmaxsw
jle
jns
repnz
enter
into
push
mov
bnd
icebp
or
dec
cmc
or
mov
out
xor
push
retf
mov
adc
lods
pop
test
inc
loopne
sbb
dec
and
or
test
mov
test
push
mov
loope
out
out
sbb
dec
leave
xchg
sbb
(bad)
pop
add
pop
xchg
or
popf
(bad)
lods
xchg
icebp
data16
cmc
clc
xchg
out
mov
or
and
mov
pop
vmovd
(bad)
mov
retf
fisttp
addr16
mov
clc
cmps
cmc
aaa
jno
cmc
(bad)
icebp
aas
cmps
or
neg
(bad)
xlat
mov
and
fdiv
std
addr16
sub
cmp
mov
xor
(bad)
jg
sub
inc
daa
clc
push
fist
stos
fwait
lods
xchg
xchg
clc
icebp
and
mov
jle
ror
lahf
jle
add
add
in
mov
fadd
daa
fmul
ins
nop
jmp
push
jl
sbb
inc
mov
das
(bad)
imul
pop
pop
xchg
cmp
mov
jnp
cmp
out
mov
jo
xor
push
cs
sbb
fiadd
retf
pop
or
popf
sbb
jno
sbb
sub
push
xchg
hlt
mov
or
cmps
ins
sbb
add
xchg
addr16
and
mov
mov
mov
stc
mul
imul
pop
inc
int3
add
pop
cmp
pop
pushf
(bad)
adc
call
mov
scas
cdq
in
pop
mov
cli
inc
js
jp
je
cwde
sub
xor
xor
jp
cld
js
jp
rol
sbb
pop
es
js
int3
and
pusha
pop
cmp
repz
jnp
adc
data16
gs
mul
cmp
sbb
cmp
jno
mov
pop
dec
and
and
inc
(bad)
sub
inc
popf
mov
mov
sar
xchg
lahf
test
popa
out
retf
gs
scas
retf
sbb
jecxz
and
sub
mov
(bad)
fbstp
sahf
dec
sbb
sahf
sub
cmp
add
data16
fnsave
mov
mov
sub
dec
cmp
pop
test
push
loop
xlat
push
in
xchg
push
in
jg
push
or
ror
and
dec
ds
jge
call
mov
xlat
and
ja
mov
mov
outs
cli
add
add
jg
sub
sti
inc
pop
popa
or
dec
mov
data16
xchg
mov
out
retf
cmc
pop
lods
imul
xor
addr16
add
mov
ficom
aam
sbb
stos
addr16
aaa
shl
fwait
push
pop
dec
ins
mov
adc
push
cmp
inc
sub
sar
(bad)
jecxz
stos
call
pusha
hlt
xor
ss
lahf
jbe
rep
icebp
inc
pop
add
jnp
sbb
outs
mov
loop
test
inc
lods
ins
lds
out
shl
or
or
push
jge
hlt
movs
cli
jae
(bad)
xor
lds
xlat
jo
out
add
int
cmp
vpshad
cmp
or
adc
mov
jl
sahf
pop
lods
pop
mov
sbb
push
in
icebp
cdq
sub
inc
jno
cmp
ficom
(bad)
add
lock
(bad)
popf
pop
sar
or
mov
dec
int3
(bad)
(bad)
jg
cmp
cs
and
push
fadd
int3
cmp
push
cmps
(bad)
pop
pop
movs
ds
lock
dec
jge
test
aam
int
xor
mov
jb
or
mov
jge
sti
dec
cli
pop
ret
and
cmp
pop
jns
cs
mov
fs
dec
loope
mov
push
sbb
push
sbb
sub
pop
mov
sub
int3
call
pop
jmp
repnz
push
dec
scas
sub
adc
mov
cmp
xchg
jmp
and
jecxz
les
jnp
hlt
nop
in
adc
jmp
aam
jmp
addr16
setno
rcr
scas
inc
xchg
mov
inc
loop
dec
pop
cs
push
sub
push
mov
shl
addr16
in
mul
or
fst
scas
mov
pop
cdq
mov
add
lods
jg
call
sbb
mov
inc
mov
push
call
inc
pop
pop
xchg
aad
mov
cdq
loop
cs
sub
cmp
sub
fld
cld
lahf
push
pop
sub
mov
getsec
pop
inc
cmps
addr16
adc
outs
out
jg
test
mov
(bad)
push
dec
fbstp
xor
repnz
daa
call
cmp
fisub
jmp
leave
and
push
push
pop
push
add
pop
cmp
cmps
mov
sbb
add
pop
push
out
and
jmp
and
mov
cmp
add
shl
adc
jp
adc
lahf
jno
sbb
repz
scas
shl
in
jmp
pop
xchg
pop
ins
cmp
inc
xchg
neg
mov
aad
bound
cmp
jle
jo
sbb
in
cmps
xchg
gs
mov
pop
lea
fstp
psubd
fwait
push
cwde
(bad)
mov
jecxz
movs
cs
pop
xchg
mov
aaa
nop
cdq
jl
sahf
pop
and
sahf
mov
jns
mov
pop
fwait
ret
out
pop
sbb
out
popa
in
fistp
test
xor
icebp
or
push
(bad)
mov
pop
adc
bnd
aaa
nop
fdecstp
sub
test
cmc
sbb
mov
loop
in
mov
test
mov
push
pop
xor
(bad)
xchg
mov
pop
jne
push
push
cmp
leave
pop
mov
jae
(bad)
pop
mov
call
cli
aad
push
jle
popa
sub
jmp
mov
xor
(bad)
pop
push
das
repz
imul
xchg
in
push
lods
lods
add
bound
add
or
push
iret
imul
adc
xor
mov
jp
pop
pop
repz
sbb
push
adc
sbb
and
sbb
out
xchg
clc
repz
mov
mov
retf
xchg
push
xchg
push
lods
pop
xchg
je
mov
arpl
or
scas
push
in
inc
cwde
(bad)
aad
ret
(bad)
sbb
sbb
call
dec
and
jo
cli
fild
sar
mov
and
movs
(bad)
aas
mov
lds
jmp
jle
push
jb
add
jae
xor
outs
inc
repnz
dec
xchg
std
fs
jb
sub
xor
and
and
imul
test
mov
nop
xchg
jns
sub
scas
cs
jno
bound
sar
pop
push
imul
nop
xor
inc
mov
fsubr
das
imul
outs
mov
push
(bad)
sahf
inc
cmp
repz
mov
aaa
dec
and
repnz
xchg
ror
shl
stos
add
call
aas
(bad)
test
sub
add
push
dec
stos
popf
gs
into
pop
dec
sbb
sub
jp
pop
stos
xor
loop
ins
ret
inc
aam
mov
mov
dec
iret
movs
(bad)
int
mov
mov
andnps
push
test
cmp
mov
outs
fst
arpl
(bad)
jbe
mov
and
add
cs
sbb
pop
cs
(bad)
sbb
test
jno
sbb
popf
inc
xchg
sbb
mov
mov
repz
adc
or
sub
out
addr16
fyl2xp1
daa
pop
cmp
adc
pop
fs
(bad)
mov
or
mov
jge
nop
aad
jo
cmp
test
pop
lea
fwait
xor
xchg
xchg
ins
sbb
dec
dec
std
sub
mov
cmp
ss
rcr
mov
jmp
fucomi
xor
std
add
push
sub
xor
xchg
mov
stos
jo
outs
das
jo
mov
lahf
dec
out
xchg
dec
mov
jecxz
fwait
jbe
aam
ss
add
shl
aaa
inc
addr16
cmp
into
iret
ins
jno
loop
ins
fistp
aaa
jae
mov
adc
cmp
sub
mov
ja
jl
mov
jno
xor
adc
(bad)
add
enter
dec
(bad)
stc
ds
mov
xchg
sbb
into
ja
cmp
or
les
ins
sub
jmp
dec
xchg
inc
mov
inc
mov
adc
jmp
jp
pop
sbb
sar
lods
mov
pop
sbb
xchg
loopne
(bad)
in
cdq
add
cmp
loopne
(bad)
push
add
add
mov
add
movs
stos
push
int
into
push
jne
and
xchg
jne
rcl
adc
push
inc
xor
cmps
sbb
clc
hlt
pushf
ds
mov
shl
(bad)
mov
stc
imul
sbb
imul
std
adc
jl
daa
dec
call
and
cmp
xchg
push
jg
out
sub
sahf
lock
(bad)
mov
(bad)
int
sti
sti
inc
push
iret
jnp
sub
fwait
xchg
xor
out
adc
test
xchg
outs
aaa
loopne
dec
(bad)
add
in
in
data16
pop
ror
data16
aaa
mov
cld
sbb
clc
loopne
sbb
lds
rcr
push
mov
fnstenv
sub
sbb
mov
(bad)
sbb
push
lods
or
jge
inc
in
repnz
fmul
(bad)
leave
out
sbb
ds
sbb
popf
sbb
push
mov
xor
cmp
xchg
xchg
movs
in
ret
ja
call
pop
cmps
addr16
pop
mov
je
sbb
shl
fnstsw
or
bnd
push
pop
pop
dec
pop
pop
jae
mov
repnz
xchg
or
pusha
fadd
icebp
or
ins
cs
dec
ret
pop
or
imul
pop
xor
xchg
jl
sub
jb
adc
push
mov
mov
jnp
rol
xlat
stos
sbb
imul
idiv
jno
outs
cdq
sbb
mov
and
aam
pop
or
cmp
jp
jp
jmp
ds
sti
mov
ficom
mov
scas
ror
out
push
xor
xchg
and
scas
popaw
in
and
and
out
int
(bad)
das
cmp
cmp
lds
icebp
aaa
scas
mov
mov
test
push
repz
or
lods
xor
loope
xor
sbb
xlat
call
enter
out
mov
punpckhbw
mov
shr
pop
mul
mov
xor
push
test
nop
mov
ins
push
push
jg
jmp
mov
push
cld
inc
inc
ret
mov
call
jmp
dec
bnd
mov
push
rcl
cmp
cmps
fwait
(bad)
(bad)
dec
xor
int3
mov
fstp
mov
mov
cmp
cmp
and
(bad)
fstp
std
xchg
pop
jns
test
adc
cmp
mov
jg
aam
sbb
lods
adc
mov
lods
sahf
sub
sbb
das
inc
(bad)
test
sub
ins
iret
add
fidiv
loopne
inc
push
shl
addr16
mov
cwde
js
das
or
xchg
je
gs
aad
and
mov
les
ins
fwait
das
fist
movs
div
rep
dec
dec
jo
xchg
xchg
ret
stos
bound
jmp
call
rcr
pop
jnp
(bad)
ss
into
fisub
cmp
arpl
jnp
xor
inc
sub
ds
jmp
paddusb
retf
popa
inc
ins
push
(bad)
pop
push
in
ret
les
xlat
std
or
cs
not
and
lods
sti
int
retf
dec
std
dec
loope
sbb
jg
cmps
and
and
xchg
or
xsha1
es
dec
xor
(bad)
push
(bad)
out
mov
mov
inc
enter
enter
retf
(bad)
push
call
pop
jne
cmp
enter
and
in
in
test
cmc
pop
aam
aaa
ins
sub
xchg
retf
pop
jl
enter
push
imul
mov
faddp
and
(bad)
bound
test
ficom
cwde
loopne
add
inc
iret
and
fisub
out
push
cmp
pop
mov
xchg
xor
cwde
inc
enter
or
add
xor
and
dec
cmp
xchg
cmps
sbb
inc
pop
daa
stos
dec
jnp
xchg
inc
push
fadd
pop
mov
mov
ins
jmp
ss
in
inc
mov
jae
lods
mov
inc
pop
push
imul
pop
and
sub
sar
xchg
cmps
pop
dec
jmp
mov
mov
inc
test
mov
into
popf
outs
sub
gs
imul
sub
xadd
xchg
lock
clc
ins
dec
jno
stos
les
stc
adc
inc
lea
adc
and
dec
iret
mov
and
frstor
cs
dec
jo
aas
mov
pop
stc
push
aam
cmps
mov
or
mov
jl
ss
in
push
push
push
stc
daa
jecxz
popa
jle
push
out
add
fisttp
mov
mov
inc
ds
and
ja
sbb
dec
std
hlt
sub
xchg
mov
cdq
add
inc
adc
movs
test
fnstenv
dec
out
inc
add
in
nop
(bad)
xchg
fdivr
pushf
mov
mov
pop
jno
call
mov
and
(bad)
(bad)
inc
push
mov
fs
retf
jge
mov
or
mov
out
stc
xchg
jno
or
push
hlt
sbb
or
sbb
call
cmp
lahf
dec
lahf
stc
mov
icebp
cdq
push
sub
aam
inc
sbb
sub
sub
(bad)
movups
push
ror
je
and
xchg
je
sar
daa
bound
out
lods
dec
out
(bad)
icebp
popf
cdq
sti
ss
and
pushf
add
add
pop
aas
pop
test
sub
or
jbe
pop
out
push
inc
or
xchg
xchg
ror
dec
or
push
and
xchg
rol
jbe
stos
fld
movs
hlt
sub
scas
inc
scas
adc
call
push
scas
and
js
jecxz
sbb
sub
add
cmp
pop
jp
in
mov
push
fidiv
iret
mov
jmp
out
js
push
aas
ret
sbb
add
xchg
jg
xchg
cmc
cs
test
fwait
scas
sar
push
xor
(bad)
js
mov
popf
cmp
mov
or
aam
jp
pop
push
ror
outs
popf
stos
shr
sahf
sub
imul
lea
outs
aaa
sahf
in
dec
or
add
pop
jo
xor
call
movs
lods
std
inc
pop
jge
xchg
xchg
bound
(bad)
inc
jo
mov
cmp
mov
mov
fsub
or
pop
jl
pavgw
push
loope
xchg
mov
pushf
sbb
std
div
add
imul
xor
cld
mov
inc
mov
je
xchg
inc
jmp
inc
xchg
outs
sub
mov
ins
je
rcl
nop
ret
scas
ret
cmp
cmps
in
ja
outs
(bad)
pop
fist
xchg
dec
cs
push
rcr
ret
jne
mov
pushf
push
ins
loop
sbb
ds
inc
jno
out
jb
inc
outs
and
icebp
mov
fwait
cmps
pop
les
jno
cmc
dec
cmp
bound
dec
pop
loope
jecxz
iret
leavew
aam
aas
jbe
jl
pop
icebp
push
ja
jno
rol
test
mov
sub
and
ja
jp
xchg
jae
push
jne
add
sbb
push
loopne
sar
loope
imul
nop
xor
aaa
inc
cdq
pop
std
into
fdiv
neg
and
jmp
xlat
fisubr
push
and
jg
push
aad
and
push
pop
jl
inc
or
adc
pusha
sub
jmp
in
xor
cs
jl
inc
jecxz
(bad)
jb
loop
add
movs
lds
jae
scas
outs
sub
push
mov
stos
pop
push
or
xor
lock
lds
(bad)
loop
lock
mov
push
xchg
js
cmp
cwde
sbb
pop
aas
out
std
xchg
xchg
fidiv
xor
dec
inc
lea
out
xchg
stc
pop
inc
add
or
adc
rdtsc
ss
fsub
shl
loope
std
lock
sub
xchg
pop
cmps
in
(bad)
das
or
scas
add
xchg
sbb
ja
outs
jnp
push
retf
outs
add
shl
sub
icebp
jmp
cmp
mov
sbb
out
push
xor
mov
xchg
inc
push
int
inc
add
jbe
push
sbb
push
not
add
add
pop
pop
les
mov
lahf
stos
sub
fwait
cmp
(bad)
cmc
mov
xchg
bound
mov
jge
dec
movs
jl
pop
and
ficomp
iret
in
outs
pop
scas
push
test
pop
sbb
in
push
jp
jb
ds
cld
jmp
inc
fcom
or
cmps
std
mov
adc
cld
mov
jg
into
or
inc
enter
mov
aam
les
lea
(bad)
mov
shr
pop
push
mov
push
ins
imul
aaa
frstor
mov
or
in
loopne
and
mov
test
cs
dec
ins
stc
js
jge
cdq
xor
mov
outs
push
popa
xor
dec
scas
test
mov
dec
xchg
ss
push
xchg
ret
mov
arpl
and
inc
js
aad
imul
cmp
(bad)
push
je
push
ss
cwde
xchg
push
xchg
in
jecxz
xchg
aad
cs
adc
(bad)
sbb
out
add
mov
imul
out
clc
mov
ficom
mov
fiadd
movs
push
(bad)
in
inc
jmp
mov
and
ror
sub
add
mov
push
mov
xchg
mul
ror
mov
or
mov
mov
xchg
ins
imul
aad
retf
cmp
call
xor
jmp
sub
out
lock
inc
(bad)
js
pop
add
sbb
or
lods
je
mov
xchg
jae
push
mov
sub
mov
cmp
and
and
jo
(bad)
in
cli
sub
(bad)
adc
imul
push
jmp
sbb
nop
dec
movs
fiadd
xchg
pop
sbb
aad
rcr
pop
shr
frstor
mov
xor
in
push
sti
dec
mov
add
sbb
push
or
test
pop
adc
xchg
mov
mov
jp
push
je
stos
add
(bad)
in
mov
mov
fild
popa
fiadd
jl
push
pop
into
mov
mov
aad
xchg
lahf
fnclex
test
pop
push
xor
in
ret
je
imul
fiadd
sub
(bad)
ins
loop
stos
sub
fmul
pop
fs
arpl
adc
add
mov
(bad)
and
pop
adc
data16
sbb
ficom
popf
pop
loop
les
ror
clc
in
sub
and
xchg
shr
mul
mov
adc
and
leave
fbstp
push
leave
hlt
dec
mov
nop
and
push
iret
test
cmps
mov
shl
mov
aas
test
and
test
cmp
in
dec
stos
dec
call
mov
xchg
in
test
push
aaa
push
add
jmp
pop
sbb
stos
mov
repz
mov
mov
fisub
mov
cmps
(bad)
sbb
loope
scas
and
mov
mov
mov
push
mov
test
xchg
mov
shl
sahf
cli
mov
sub
out
int
popa
popf
je
ret
movs
pop
or
mov
push
jno
and
dec
pushf
xor
gs
adc
or
sub
(bad)
int3
xlat
retf
out
mov
xchg
sub
nop
test
and
shr
xchg
jo
inc
sbb
loopne
movs
adc
aas
call
call
in
dec
clc
scas
arpl
shl
int
push
inc
rcl
arpl
(bad)
mov
ja
cli
pop
fnstenv
adc
sub
mov
sub
mov
loopne
aad
add
xchg
retf
inc
outs
mov
dec
(bad)
aaa
sbb
lock
nop
test
pop
inc
data16
es
or
fdiv
lds
(bad)
sub
dec
xchg
xor
push
xor
xchg
pop
stos
lahf
cmp
and
psadbw
mov
pop
dec
clc
fld
aam
daa
enter
sti
(bad)
fwait
inc
daa
dec
sbb
test
in
ds
jns
es
idiv
cs
and
pop
pushw
movs
fdivr
inc
mov
retf
inc
sbb
loop
push
fidivr
cmp
imul
sbb
addr16
(bad)
pop
push
xchg
ret
xchg
retf
retf
popf
jne
aad
ins
mov
add
jecxz
inc
icebp
xchg
mov
mov
xor
scas
dec
popf
mov
inc
xchg
pop
ror
push
mov
lods
mov
adc
aas
movs
aaa
xor
inc
ror
or
pusha
sar
xor
(bad)
mov
xchg
sahf
adc
out
xchg
fldenv
and
jl
or
sub
push
or
push
jmp
jl
cld
dec
ret
lods
lods
loopne
scas
pop
mov
mov
fcmovnu
inc
mov
mov
push
test
(bad)
fiadd
adc
inc
scas
jmp
push
daa
sub
xchg
add
mov
fisubr
and
aam
pop
hlt
aas
push
dec
repz
mov
call
(bad)
gs
jmp
cmp
mov
cmc
cs
repz
push
xchg
push
sub
add
ror
pop
pop
xor
stos
shl
jge
or
push
scas
scas
out
jno
ret
fcomi
movs
xor
repnz
xchg
mov
sbb
jne
jmp
jno
jmp
inc
bound
outs
mov
push
dec
sahf
xor
in
dec
scas
inc
(bad)
in
adc
sti
mul
ror
fwait
std
mov
dec
inc
loop
add
xor
out
std
dec
pushf
movs
dec
pop
in
scas
adc
sbb
nop
jo
sbb
movs
(bad)
xlat
mov
lahf
mov
aaa
and
sub
sub
pmuludq
movs
shl
sub
pop
iret
mov
es
aam
xchg
dec
xchg
shr
xchg
mov
add
push
or
xchg
movs
push
imul
sahf
es
and
cmp
cmp
dec
fwait
jo
inc
inc
and
cmp
or
mov
xchg
jae
sahf
pushf
mov
outs
test
dec
xor
jo
jb
lds
sub
inc
call
push
imul
sbb
cmps
mov
jns
call
sub
das
(bad)
xor
adc
rol
cmp
in
mov
les
sbb
bound
push
push
fldcw
add
add
dec
and
mov
jb
cmc
cmp
(bad)
sbb
add
rcr
fmul
sbb
outs
aam
xchg
aad
fsubr
movs
loop
popa
mov
cld
cmp
adc
dec
and
pop
and
aas
add
stos
daa
std
jne
loop
sbb
add
in
and
imul
dec
aas
inc
shl
lahf
cmps
fistp
wrmsr
dec
mov
and
fisttp
repnz
dec
mov
fld
and
aaa
xlat
inc
jmp
jb
mov
lods
push
jle
jge
lock
in
xor
pusha
cmp
addr16
fwait
jmp
ins
xor
test
and
(bad)
cli
enter
jl
xor
and
mov
sti
xor
jge
inc
jecxz
(bad)
pop
push
jecxz
dec
loopne
in
shl
push
loopne
cmp
adc
out
cmp
xor
int3
loop
dec
push
add
push
add
pop
push
test
arpl
inc
push
stc
repz
push
jl
(bad)
js
and
mov
jae
aas
jae
lock
fsubr
hlt
jae
pop
fild
pop
sahf
mov
pop
push
cmp
inc
sub
inc
adc
jle
add
pop
jns
js
(bad)
loop
mov
dec
scas
out
add
xchg
sub
leave
or
ss
inc
stos
shl
push
ins
mov
int
(bad)
mov
retf
jle
inc
sar
in
or
out
push
in
sbb
dec
data16
es
icebp
icebp
scas
mov
xor
loope
adc
dec
icebp
mov
add
stos
(bad)
out
aaa
mov
aas
xor
fcomip
ss
sub
xchg
add
push
jo
cmps
ja
jmp
push
pop
enter
icebp
cmps
rol
(bad)
mov
cmps
clc
fild
cmp
(bad)
and
cmp
and
xor
loope
ins
xor
or
pop
test
mov
xchg
aam
sub
enter
cmps
pop
ins
jno
das
jae
outs
xchg
test
(bad)
and
stc
mov
mov
xchg
fs
fimul
cmp
(bad)
loop
push
sahf
ret
pop
in
mov
sub
push
dec
scas
out
jae
inc
loopne
jmp
jmp
pop
in
aad
xor
ror
xchg
fld
adc
and
or
sar
fiadd
test
mul
aad
stos
mov
adc
adc
jle
push
push
lahf
sbb
inc
push
mov
push
cmp
fsubr
(bad)
ss
cld
in
or
jno
push
pop
sub
sub
mov
retf
jnp
aaa
inc
mov
and
lahf
pop
jmp
mov
inc
mov
inc
aam
inc
into
adc
pushf
inc
sbb
sub
adc
aaa
mov
jge
push
mov
(bad)
or
push
mov
into
mov
mov
pop
mov
push
xor
rcr
out
pop
mov
lods
leave
pushf
sbb
inc
push
(bad)
(bad)
fwait
call
sbb
je
fwait
jne
cmp
jb
js
jne
sub
out
inc
mov
(bad)
scas
mov
xchg
(bad)
and
(bad)
popf
jnp
(bad)
mov
pop
mov
dec
xchg
and
and
lea
retf
test
movs
shl
and
icebp
mov
aas
mov
clc
sbb
mov
stos
push
aad
and
ins
xchg
xor
add
data16
retf
stos
cmp
pop
repnz
jb
pop
retf
mov
pop
push
or
shl
aad
popa
fisubr
cwde
minps
(bad)
or
test
shl
arpl
xchg
daa
jle
cmp
mov
rcr
icebp
ins
(bad)
in
mov
imul
fldenv
repz
(bad)
aad
xchg
jo
push
mov
(bad)
(bad)
jmp
jmp
cmp
nop
xor
ret
out
(bad)
sub
cld
fild
scas
push
call
pop
imul
push
mov
mov
addr16
scas
push
ret
and
leave
mov
xor
pusha
lock
dec
outs
jmp
out
sbb
dec
and
xchg
aaa
ror
mov
push
lahf
outs
pop
in
div
jp
inc
mov
jle
push
rcr
in
or
pop
ss
mov
fld
and
lods
xor
cmps
inc
add
(bad)
adc
sahf
and
popf
(bad)
loop
dec
out
adc
sbb
call
js
push
or
mov
mov
or
inc
test
adc
inc
push
xor
shl
arpl
inc
and
dec
push
and
xlat
inc
pop
push
dec
enter
or
jle
add
(bad)
and
sub
jecxz
or
loop
repnz
inc
in
xchg
jmp
lods
loopne
stc
push
into
retf
icebp
mov
adc
fcom
xchg
and
push
jle
outs
fs
xor
aam
adc
ins
dec
and
push
int
inc
mov
adc
aas
daa
pop
scas
push
pop
outs
xor
pushf
pop
cli
add
cmps
nop
jnp
inc
jle
xchg
or
jae
nop
ins
dec
fdiv
xor
mov
jns
lods
sbb
inc
push
(bad)
into
stos
xchg
rcr
xchg
sti
xchg
add
(bad)
pop
mov
sub
mov
das
(bad)
fsub
icebp
addr16
add
je
inc
and
jb
push
(bad)
fild
cmps
aas
dec
sbb
ror
add
pop
hlt
sub
adc
and
outs
xchg
es
push
hlt
repnz
dec
cli
cmc
dec
xchg
xchg
adc
xchg
cmps
sub
fbstp
push
call
jb
clc
xor
xchg
or
(bad)
out
cdq
not
rcr
push
inc
jne
pop
pop
mov
fisttp
imul
repz
ss
pop
adc
in
pop
inc
pop
and
icebp
lahf
aaa
jb
add
or
jecxz
fisubr
sub
xor
pop
aas
jo
xlat
cmp
outs
pop
pop
popf
pop
imul
in
xor
dec
stos
inc
or
(bad)
fild
pop
sti
push
cmp
add
jnp
mov
popf
pop
jae
icebp
sub
popa
cmps
jns
xor
jl
loopne
out
push
out
arpl
sti
xor
inc
je
xor
cmp
pusha
or
je
jns
mov
sbb
test
out
ret
aad
jnp
(bad)
xchg
jmp
dec
mov
jno
or
sbb
jne
xchg
or
xor
out
paddsw
mov
xor
jl
jne
jmp
xchg
fmul
add
icebp
inc
fdiv
xor
inc
or
stc
adc
loop
loope
clc
pusha
jp
xor
ror
jp
inc
movs
and
ss
imul
test
xchg
sub
inc
jle
and
in
mov
lods
adc
lods
xchg
push
scas
jae
mov
fs
bound
dec
test
jmp
into
shl
jns
retf
rcl
xor
push
inc
scas
sub
add
or
iret
outs
outs
inc
loop
gs
sub
int
add
xlat
test
or
loopne
js
cmps
pop
popf
and
push
mov
(bad)
popa
pop
fsubr
push
push
(bad)
shl
xchg
fs
sub
pop
pusha
xchg
mov
push
les
xchg
jp
int
jmp
jl
adc
movs
int3
xchg
mov
adc
inc
mov
outs
pop
pop
mov
popa
sbb
adc
(bad)
in
ss
dec
fdivp
sub
lahf
shl
mov
out
add
das
scas
ins
dec
dec
and
mov
nop
mov
leave
pushf
push
(bad)
sub
ins
adc
and
neg
je
jns
pushf
popf
push
cmps
sar
add
stos
sub
mov
adc
ret
inc
mov
cdq
dec
adc
fidivr
add
repz
das
aas
sub
cmp
adc
adc
ss
mov
out
inc
xchg
ret
mov
pop
ins
and
inc
xchg
inc
mov
jae
shr
jge
mov
inc
outs
mov
jmp
call
pop
sbb
ret
lds
nop
adc
cmps
cld
and
cli
xchg
stos
xchg
stc
jmp
cmp
xor
(bad)
leave
retf
push
outs
sbb
retf
mov
xor
push
mov
(bad)
inc
int
(bad)
movs
lock
inc
shr
sub
sub
rol
pusha
and
xchg
cs
push
cmps
call
je
aas
leave
outs
inc
mov
lods
into
inc
in
pop
pop
mov
cli
test
imul
dec
sub
retf
cmp
push
and
lods
retf
push
and
clc
pop
sub
in
popa
cmp
pop
jns
sahf
add
loop
lea
dec
push
test
or
mov
add
mov
inc
or
mov
adc
cmp
sar
adc
xor
lock
inc
sahf
out
mov
pop
movs
pop
cmp
shl
ins
sbb
lods
mov
sbb
dec
jnp
xor
movs
in
and
(bad)
icebp
ret
leave
stos
and
frstor
out
nop
jle
sub
ret
into
jb
jmp
inc
ror
stos
add
dec
push
mov
xchg
aad
pop
in
or
(bad)
test
cmp
push
mov
xchg
test
test
lods
jmp
jmp
jb
js
dec
pop
in
(bad)
xchg
jg
and
out
es
dec
rcl
lods
aas
mov
add
retf
add
sbb
mov
ja
pusha
pop
retf
lock
sbb
std
iret
pop
in
ret
xchg
jmp
mov
bswap
dec
add
inc
(bad)
sbb
lds
xchg
lods
adc
jmp
(bad)
xchg
jae
addr16
add
xchg
fcom
xchg
stos
mov
inc
in
dec
adc
cwde
out
mov
test
mov
mov
fwait
idiv
fs
cmp
dec
or
lods
jmp
mov
repnz
mov
fidiv
das
inc
mov
int
xlat
or
add
loop
push
dec
fild
bound
mov
out
lahf
pop
fld
mov
inc
shl
dec
sbb
inc
lods
jl
shl
pop
inc
jae
sbb
test
iret
inc
jle
jmp
push
loop
pop
push
js
jne
gs
(bad)
sub
out
inc
lea
mov
into
pop
push
or
jo
int
or
jg
(bad)
inc
loop
(bad)
out
out
mov
xor
or
and
stos
add
cdq
in
(bad)
into
fiadd
mov
xchg
dec
add
lock
and
sbb
addr16
retf
test
jp
xchg
cmp
outs
lahf
add
xchg
sbb
jb
or
stos
outs
jmp
popa
inc
cmp
adc
fstp
das
retf
xor
test
push
fwait
push
adc
mov
adc
add
popa
cdq
dec
cmp
movs
ins
sub
movs
mov
mov
outs
stc
and
jbe
popf
xchg
xchg
mov
dec
out
loope
pop
sub
pushf
xchg
or
outs
loop
add
gs
sbb
loop
xchg
ret
cmp
mov
scas
cmp
stos
test
fiadd
int3
fld
pushf
test
data16
jecxz
mov
jae
inc
in
pop
and
dec
frstor
retw
out
mov
icebp
mov
enter
movs
sub
push
xchg
jl
or
adc
int3
adc
wrmsr
dec
xor
jg
icebp
push
imul
mov
inc
sub
push
sub
jg
addr16
jae
es
jl
or
xchg
push
cmp
adc
push
(bad)
stc
push
retf
sbb
jne
iret
cmp
or
pop
xchg
in
loop
fnstcw
jne
dec
dec
into
mov
adc
nop
cmp
add
sub
or
(bad)
repz
test
mov
lods
pop
pop
push
out
in
imul
pop
jo
inc
(bad)
int3
mov
mov
(bad)
movs
xor
adc
push
loop
(bad)
jae
adc
inc
or
loopne
fistp
mov
scas
inc
xor
rcl
push
jecxz
cmp
(bad)
mov
lea
push
cmp
and
iret
dec
pushf
mov
push
pop
fld
shl
ins
jbe
jmp
test
xchg
scas
mov
leave
inc
xchg
imul
mov
adc
ins
adc
imul
jnp
xor
xchg
xor
sub
pop
ja
rcl
std
arpl
inc
and
scas
shr
arpl
pop
mov
cmps
(bad)
fsubrp
repnz
pop
mov
aas
xlat
sti
ins
dec
les
dec
mov
ins
pop
jnp
shr
or
sbb
sub
and
enter
cld
push
dec
and
and
retf
dec
and
out
int3
popf
test
sbb
scas
add
ret
jae
cmps
fwait
test
cs
mov
mov
or
mov
ret
xchg
dec
(bad)
push
imul
dec
dec
xor
jg
or
jo
dec
sbb
shr
shl
ds
push
pushf
lahf
jg
adc
adc
mov
cmps
repnz
push
lds
xor
push
dec
shl
je
loop
inc
out
push
enter
test
or
mov
scas
jle
inc
fisub
in
add
das
sub
(bad)
dec
sti
ja
adc
mov
(bad)
jo
pop
out
ins
ja
xor
jno
pushf
test
fwait
mov
inc
jmp
cmp
push
imul
mov
inc
stos
dec
outs
rol
xlat
outs
push
rcl
repnz
lea
ss
cmps
dec
mov
push
cmp
hlt
fwait
scas
aad
hlt
ins
loope
mov
fdivr
popa
jecxz
or
and
aaa
fs
jge
cmps
add
lahf
iret
cmc
dec
or
pop
jge
adc
mov
xchg
adc
and
pop
mov
push
dec
leave
mov
mov
or
dec
fcmovne
ds
repnz
nop
fbstp
aaa
test
cdq
iret
cmc
jmp
xlat
jp
sbb
daa
jo
mov
cld
xor
xchg
int3
test
add
inc
add
in
out
xor
je
or
and
dec
out
mov
cmc
adc
sbb
dec
inc
cwde
dec
push
push
mov
or
test
push
call
retf
xchg
mov
add
push
mov
inc
repz
xchg
add
cwde
std
sub
push
(bad)
push
mov
mov
outs
cli
fild
and
mov
jns
adc
sub
cmp
xchg
or
sbb
je
mov
popa
mov
and
loope
(bad)
fisub
mov
jl
pop
cmps
shl
sbb
add
xchg
jge
out
pop
dec
xchg
add
dec
add
enter
mov
pop
mov
imul
imul
cmp
pop
retf
dec
jne
test
mov
or
int3
jae
or
and
(bad)
shl
cmps
sahf
inc
mov
mov
mul
fistp
jge
jb
add
(bad)
call
and
imul
les
imul
sar
shr
fucom
xchg
aas
push
call
sbb
cmps
jle
xchg
movs
test
leave
loopne
in
or
(bad)
cld
cmps
dec
mov
int3
mul
xchg
xchg
imul
inc
sbb
xchg
mov
popa
dec
out
cmp
and
pushf
sub
fidiv
daa
test
sbb
scas
test
mov
repz
inc
jno
ja
cmp
mov
mov
fdiv
or
dec
xor
int
xlat
adc
gs
jo
fnstenv
pop
xchg
leave
mov
inc
xor
sub
rcl
sub
sbb
mov
push
fst
test
mov
pop
push
and
enter
push
das
xchg
mov
into
fldenv
push
je
push
push
mov
rcl
mov
xor
mov
jae
or
add
adc
fptan
pop
or
inc
jmp
mov
test
cmp
pop
sub
outs
xchg
mov
and
aad
aas
fimul
mov
sub
inc
popa
jmp
int3
jmp
ret
mov
mov
inc
sub
jp
adc
push
cmps
test
and
shl
and
xor
test
push
ror
int
icebp
adc
out
jnp
dec
daa
sbb
push
xor
push
outs
mov
int3
and
lahf
push
or
push
out
dec
push
fsub
xchg
xchg
dec
sbb
xor
or
lods
in
das
fsub
retf
into
dec
inc
mov
pop
(bad)
dec
adc
div
dec
pop
jmp
mov
sub
mov
test
cdq
sbb
adc
loope
out
shr
cmp
sub
dec
jnp
nop
or
xor
mov
and
test
mov
outs
push
mov
shr
mov
pusha
mov
jns
jg
int
push
fstp
shr
pop
inc
sbb
xchg
stc
movs
inc
mov
jl
sub
(bad)
cwde
mov
sbb
dec
in
or
(bad)
push
add
push
mov
cmp
mov
pop
fs
out
cmps
mov
(bad)
sahf
test
cmp
sub
popf
neg
jbe
ja
cmp
call
fdiv
ins
(bad)
fcmovb
cmps
lods
gs
(bad)
movs
adc
add
adc
rol
mov
leave
outs
fdivr
fwait
adc
add
mov
mov
mov
sti
inc
aaa
cdq
dec
in
push
cld
sub
jmp
jp
mov
jo
movs
jo
inc
fcomp
lahf
adc
les
les
dec
retf
or
mov
icebp
out
adc
fldz
loop
ins
sub
jb
fdivr
inc
pop
gs
mov
xchg
in
dec
inc
inc
inc
not
sub
sub
das
adc
sti
call
call
inc
sub
out
inc
bsf
aad
push
cdq
call
in
xor
mov
pop
js
and
das
and
adc
fcmovne
fwait
push
jmp
arpl
aad
outs
into
test
xor
icebp
pop
out
ss
retf
cmc
call
mov
fdivp
hlt
mov
or
fs
push
das
fild
es
outs
xchg
test
in
stos
stos
icebp
dec
nop
sub
inc
push
push
jecxz
or
lds
push
fild
aam
fsubr
fs
mov
fwait
xor
cli
rcr
sbb
push
stos
stc
test
dec
das
pop
jmp
add
movs
jae
aas
add
lahf
nop
jmp
popw
sub
mov
mov
lods
jbe
xor
sub
dec
fistp
das
les
xchg
pop
leave
ds
inc
dec
xor
push
arpl
pop
outs
addr16
out
pop
cmps
inc
out
ins
add
or
xchg
mov
scas
cdq
sub
pop
iret
add
or
and
inc
hlt
jb
(bad)
test
ffreep
(bad)
rcr
dec
popf
dec
ins
cmp
fldpi
jmp
pop
out
fisubr
mov
aad
cmp
out
or
out
shr
mov
gs
in
fwait
lock
and
jo
sub
push
jne
outs
push
mov
loopne
mov
jmp
xor
mov
cld
sahf
out
pop
loope
scas
jmp
scas
nop
xor
movs
sbb
adc
and
dec
jg
mov
xchg
pop
in
and
jmp
mov
dec
sti
jge
out
movs
(bad)
sbb
sub
cmps
xchg
jb
sub
add
stos
pusha
dec
es
mov
xor
xlat
xlat
jae
gs
rol
data16
sub
cmp
jmp
fwait
in
sbb
fwait
cmp
dec
out
es
xchg
jg
outs
das
test
sbb
scas
mov
fistp
jp
movs
mov
xchg
mov
scas
lahf
fcomip
lahf
push
mov
or
mov
mov
adc
xor
inc
loope
fwait
mov
xchg
neg
add
add
inc
dec
adc
es
scas
mov
es
jecxz
sbb
lods
xor
ins
adc
jge
dec
mov
adc
mov
mov
fsubr
mov
ds
rol
jg
nop
mov
jl
(bad)
pusha
dec
and
mov
cmp
mov
scas
sbb
cmps
push
sar
jl
dec
sub
repz
add
mov
mov
cmp
jb
std
shr
aas
mov
pop
jne
mov
dec
(bad)
sbb
add
hlt
mov
add
sub
out
test
sti
mov
test
jmp
sbb
aam
iret
xor
cmp
fbld
das
fucom
xor
retf
pushf
fcomi
test
out
adc
test
dec
xor
mov
mov
test
stos
ins
add
mov
rcl
retf
mov
data16
arpl
dec
jae
inc
ds
cmps
repnz
inc
test
arpl
or
add
jne
fucompp
inc
inc
sub
mov
or
push
fwait
pop
mov
clc
push
rol
pushf
and
add
aas
out
mov
movs
cmp
sub
out
pop
pop
in
jno
inc
inc
cli
or
test
add
stos
imul
call
clc
loope
cmp
dec
xchg
xchg
jle
dec
mov
les
jno
jle
add
and
rcr
jns
add
mov
aaa
jo
test
icebp
add
retf
add
sti
sbb
and
xchg
dec
(bad)
clc
fnstenv
inc
pop
cmp
mov
int
mov
mov
out
call
mov
dec
sbb
sar
mov
lahf
lods
enter
call
xchg
(bad)
retf
mov
inc
xor
mov
pop
cmp
adc
repz
std
into
ror
push
xchg
daa
mov
add
mov
or
movs
imul
push
sahf
gs
(bad)
mov
xor
dec
mov
cmc
aam
xadd
sbb
xchg
daa
jle
xlat
daa
cli
je
push
int3
sbb
push
and
xor
cmp
lea
fcom
mov
ss
and
loop
movs
cmp
test
movs
fdiv
mov
outs
mov
fcmovu
fmul
pop
(bad)
sbb
arpl
adc
pop
sub
mov
loopne
addr16
bound
sahf
pushf
fadd
jbe
js
inc
jnp
mov
push
push
push
xor
inc
jmp
fs
repz
mov
les
jmp
pop
and
test
jecxz
movs
cmp
inc
fmul
mov
cs
cmp
clc
mov
dec
mov
sbb
cdq
js
mov
push
aad
mov
sti
push
mov
sahf
mov
out
leave
sbb
js
ja
dec
icebp
fisttp
addr16
mov
inc
dec
in
dec
dec
mov
dec
mov
icebp
in
xchg
push
cld
jge
xchg
sbb
into
ins
or
ret
or
add
mov
add
stos
xlat
xchg
mov
jecxz
ss
lods
stc
stos
cli
loopne
cdq
gs
pop
jg
and
daa
nop
pop
pushf
dec
jg
sub
cmp
adc
je
add
push
test
mov
(bad)
out
or
fdiv
xor
push
add
pushf
push
cmp
sub
add
cmc
sub
dec
scas
aaa
lock
repnz
test
xchg
mov
mov
(bad)
sbb
jns
pop
mov
pop
mov
mov
xchg
cmp
not
xchg
mov
add
jnp
ins
pusha
(bad)
or
pop
sbb
stos
gs
stos
mov
fisttp
and
push
arpl
call
adc
(bad)
and
sbb
and
dec
push
int3
test
ins
sbb
sub
add
ss
jne
push
(bad)
sub
mul
add
pop
inc
sub
andnps
and
icebp
cmps
shl
into
loopne
ficomp
sti
and
inc
fisttp
mov
movs
jnp
pop
cli
pop
cmp
mov
mov
push
and
cmp
nop
pop
cli
cmp
sbb
lock
xchg
push
xor
shl
clc
rcl
mov
stc
pop
or
aad
(bad)
fwait
sub
daa
sbb
pop
dec
pop
inc
fs
xchg
push
mov
cdq
icebp
fmul
jmp
ficom
jle
outs
jo
push
mov
add
jmp
push
sub
adc
call
stos
dec
pop
xchg
mov
adc
popf
neg
and
adc
loope
and
repnz
out
mov
pop
jmp
xlat
mov
clc
mov
movs
mov
lds
xchg
mov
mov
sub
int
inc
out
cld
(bad)
push
jne
inc
xchg
aad
pusha
imul
mov
fsubp
fisttp
(bad)
retf
add
mov
sbb
mov
das
mov
xchg
(bad)
fwait
int
xchg
mov
iret
or
jg
aaa
fdiv
sbb
jg
fbstp
stos
pop
fs
in
stos
aas
add
test
(bad)
fisub
cmps
add
jnp
ret
icebp
sub
les
add
add
push
mov
xchg
jmp
jo
xchg
mov
inc
cld
(bad)
mov
dec
movs
and
loope
pop
arpl
jns
inc
jl
mov
mov
int
in
adc
jecxz
push
jno
mov
xchg
push
leave
add
sti
das
das
ret
(bad)
(bad)
into
cmp
int3
and
push
sbb
(bad)
scas
cmp
shl
cld
dec
pop
mov
mov
outs
test
fldcw
lock
(bad)
pop
enter
sbb
adc
mov
xor
(bad)
mov
mov
lods
out
test
and
mov
xchg
hlt
mov
mov
out
sub
add
out
aaa
popf
pop
xchg
sub
jg
push
or
push
lock
sub
inc
pop
loope
pop
dec
in
mov
push
pop
and
xchg
sub
dec
cmp
sub
xor
mov
repz
xlat
cmp
gs
mov
xor
adc
mov
iret
xchg
pusha
pop
jns
das
test
lea
add
xchg
cmc
std
inc
jge
mov
push
fist
xchg
pop
cmp
(bad)
fnstenv
and
push
out
xor
adc
mov
pop
xor
dec
pop
daa
(bad)
cmc
mov
sub
call
push
lock
mov
adc
sar
push
jmp
inc
lahf
(bad)
cmc
faddp
sbb
fwait
mov
inc
das
imul
xchg
cmp
add
adc
jnp
xchg
popf
mov
mov
mov
enter
in
and
mov
jbe
mov
sbb
scas
push
or
and
push
or
inc
add
ret
cmp
add
in
push
ja
in
or
loopne
(bad)
fcmovbe
fwait
sbb
push
call
addr16
dec
lock
adc
lds
test
pop
test
jb
jo
pop
ins
push
xor
push
jne
popf
xchg
mov
jg
xor
sbb
cwde
test
jno
outs
push
mov
clc
xor
sub
xor
(bad)
xchg
inc
fdivr
pop
inc
ror
cwde
addr16
mov
sbb
scas
fisttp
sti
push
xor
dec
repz
jg
push
xchg
dec
mov
sbb
(bad)
sbb
ja
push
jne
xor
ss
loopne
jae
inc
in
dec
pop
fwait
mov
leave
jg
ret
and
cld
add
rcl
retf
xchg
jnp
clc
inc
mov
lock
inc
mov
inc
sbb
idiv
mov
mov
mov
sub
jg
jp
ret
gs
jae
sahf
js
pop
adc
mov
ss
loop
xchg
add
je
ins
imul
hlt
jo
test
inc
lock
dec
and
fist
nop
mov
or
push
in
gs
push
pop
push
dec
fsubr
icebp
stos
mov
and
mov
push
das
stc
les
dec
xchg
scas
xor
inc
arpl
and
aaa
out
js
push
jg
daa
inc
inc
sti
sub
adc
out
mov
int3
and
and
std
addr16
out
and
ss
adc
repnz
mov
lahf
and
push
dec
mov
mov
outs
mov
adc
pop
jb
aam
test
repz
and
loopne
add
stos
mov
or
aaa
repz
push
popa
pop
add
icebp
sahf
sahf
mov
pop
mov
retf
add
pop
sbb
popf
mov
xlat
jb
adc
xchg
stc
(bad)
loopne
mov
sbb
xchg
addr16
loopne
or
fsub
movs
sub
gs
cmps
aad
das
mov
dec
xlat
fmul
xor
add
add
cwde
mov
xchg
add
sbb
and
std
xchg
movs
bound
inc
fld
iret
and
push
push
(bad)
arpl
mov
mov
stc
in
and
cmp
into
add
lahf
stc
adc
fidiv
inc
(bad)
push
sub
stos
imul
dec
enter
mov
clc
ins
mov
hlt
ret
add
adc
adc
mov
call
cli
cmps
adc
out
xchg
push
cmp
fs
sub
idiv
mov
repnz
test
fcomi
sbb
xor
out
adc
lock
pop
leave
inc
jbe
ret
sub
lea
inc
mov
(bad)
into
and
movs
(bad)
in
lds
inc
push
repnz
jo
adc
sbb
xchg
add
mov
lods
fwait
lods
ret
or
test
fisubr
out
sbb
adc
ss
push
sub
nop
leave
xchg
mov
mov
mov
mov
mov
icebp
mov
pop
sbb
sahf
loopne
xor
sub
cli
cmc
push
adc
mov
pop
or
fld
mov
sbb
jo
mov
cmc
inc
sbb
cmp
inc
jno
retf
test
js
loop
and
bound
adc
add
sahf
mov
mov
lock
jle
jmp
jo
pop
rcl
pop
or
aad
stos
clc
test
adc
aas
jp
sbb
leave
pop
in
fldenv
scas
xor
xor
iret
leave
test
fs
(bad)
dec
pop
hlt
inc
xchg
sub
and
and
aas
sti
test
mov
out
cmp
cmp
(bad)
push
and
ret
js
add
inc
xor
jp
pushf
lods
push
sbb
sub
inc
sahf
(bad)
add
in
imul
popf
or
cmp
inc
adc
sbb
push
into
push
push
(bad)
mov
push
int
xchg
mov
je
lods
dec
retf
js
inc
icebp
push
and
not
adc
jle
push
and
mov
xor
mov
call
in
into
push
je
xchg
clc
cmp
cdq
sub
lods
(bad)
adc
mov
xor
adc
(bad)
ins
lds
mov
retf
sub
and
add
ror
popf
xchg
shl
cmc
cvtdq2ps
fwait
sbb
and
sub
mov
adc
push
(bad)
das
out
adc
mov
mov
icebp
add
push
xchg
adc
cmp
or
cld
das
jae
mov
sar
faddp
cs
iret
shl
fild
mov
adc
lods
mov
xlat
fs
xor
daa
dec
or
jb
mov
adc
test
push
pop
push
inc
mov
or
sbb
inc
in
pop
cmp
sbb
sub
pop
lds
sub
imul
add
aad
sbb
or
stos
test
dec
sub
push
or
les
sar
in
fdivr
fnstcw
(bad)
push
push
mov
aam
push
sbb
test
jl
push
loop
fnstsw
or
push
jmp
dec
cmp
pop
dec
pusha
mov
mov
mov
aam
and
fwait
pop
cmp
(bad)
inc
icebp
bound
pop
inc
xor
sbb
push
xor
int
sahf
daa
(bad)
in
jo
inc
jno
jg
and
call
stc
test
push
pop
or
or
jns
push
inc
inc
repz
push
shl
std
outs
jo
mov
mov
in
scas
xor
fs
dec
ins
or
das
stc
mov
mov
pusha
aas
xchg
adc
sbb
(bad)
push
xor
jg
es
push
cli
dec
std
push
(bad)
fcom
xchg
or
movs
cmps
jle
cmc
data16
adc
inc
stc
jmp
jbe
retf
cmp
mov
and
aaa
push
enter
lods
cmp
mov
in
add
cmp
mov
or
mov
test
or
test
sahf
daa
xchg
sbb
ficom
add
xor
mov
xor
pop
push
sbb
imul
repz
push
pop
push
mov
and
adc
ret
and
mov
mov
inc
mov
add
push
loope
in
je
fcom
(bad)
leave
fld
rcl
call
scas
imul
push
dec
cmp
sub
loop
jnp
jae
out
stos
ret
cmp
retf
sti
jmp
data16
rol
popf
jnp
mov
les
jne
mov
into
add
(bad)
jbe
stos
xchg
jmp
mov
fistp
inc
add
hlt
imul
pop
inc
xor
test
sar
jb
cmp
stc
retf
pushf
mov
inc
dec
in
pop
xor
mov
sbb
mov
movs
(bad)
rcl
lds
and
movs
(bad)
repnz
std
mov
inc
and
fdivr
or
xchg
pop
(bad)
jmp
cld
imul
dec
pop
aam
cmps
adc
xchg
cmp
(bad)
in
cwde
push
out
mov
cmp
or
xlat
jb
imul
in
and
enter
fmul
and
in
adc
adc
out
pop
xor
mov
dec
mov
cmps
jp
(bad)
and
mov
sub
inc
or
retf
xor
aam
inc
sub
call
int
fstp
dec
jp
cli
inc
add
mov
loop
inc
adc
lods
inc
pop
cmp
jb
sub
cmp
in
lods
xor
arpl
ret
adc
mov
ror
stos
adc
sbb
ss
fwait
push
inc
xor
jle
push
repnz
cmp
push
icebp
push
dec
pop
inc
add
pusha
jb
push
mov
sti
jnp
sbb
add
sbb
call
mov
mov
test
and
aas
push
mov
mov
pop
mov
ins
xchg
aas
aad
repnz
xchg
das
or
xor
clc
inc
push
fild
adc
shl
sub
jp
xchg
add
inc
xchg
pop
sub
dec
xchg
cmc
neg
sub
int
cmp
mov
dec
(bad)
in
or
mul
(bad)
cmp
dec
ins
mov
mov
dec
test
mov
sbb
movs
test
pushf
cli
jmp
mov
(bad)
(bad)
fisub
xlat
sub
and
imul
xchg
into
or
add
shl
es
inc
imul
and
in
repz
cmp
or
lods
(bad)
std
jns
ret
nop
push
(bad)
and
shl
mov
das
inc
dec
jle
aad
dec
shl
sub
es
and
shl
and
ficomp
test
and
cmp
movs
jg
jmp
cmp
push
arpl
adc
fld
or
xchg
cwde
out
into
js
push
or
pushf
int
mov
(bad)
push
pop
popa
sbb
pushf
retf
or
inc
scas
sub
sbb
stos
repnz
in
lahf
call
outs
push
out
iret
pop
hlt
pop
jae
pop
cli
push
adc
dec
imul
dec
pop
jmp
mov
outs
ret
cmp
rol
sbb
test
inc
retf
jae
(bad)
mov
(bad)
das
lods
dec
int3
inc
pop
inc
arpl
or
fst
inc
ret
push
pop
ins
adc
mov
mov
fwait
jb
xchg
mov
adc
pusha
mov
popf
or
stos
or
iret
jg
cmp
(bad)
mov
push
jp
lock
add
ins
loopne
push
dec
les
out
cmps
pusha
addr16
jo
and
arpl
dec
fst
clc
cmp
mov
mov
mov
popa
iret
popf
adc
lods
push
add
mov
mov
dec
mov
cwde
xor
arpl
aad
mov
fld
popa
jp
cmp
aas
jge
dec
jp
add
jns
lock
or
adc
btr
xchg
mov
in
cld
xchg
sub
rcl
lock
pop
cmp
sbb
sar
add
mov
xchg
cli
mov
movs
or
fcomp
cmps
aas
pop
fstp
sub
out
push
sbb
test
std
leave
fld
lea
mov
push
pusha
movs
js
pop
stos
stos
cmp
fmul
or
div
add
xchg
(bad)
jl
cdq
jo
jmp
cmp
test
retf
pusha
mov
retf
test
inc
adc
jle
pusha
in
les
mov
aaa
inc
push
lods
or
push
loop
adc
sub
jmp
enter
jbe
add
fidivr
les
dec
pop
out
mov
mov
pop
adc
mov
jp
xor
sti
xor
in
jmp
push
or
leave
inc
in
loope
js
cmp
imul
xor
jbe
lahf
jno
popf
dec
or
adc
shr
jge
leave
pop
out
mov
xchg
in
mov
ret
cs
or
mov
je
mov
mov
rcl
gs
mov
xchg
sub
aam
mov
in
sbb
enter
(bad)
xor
inc
or
push
sbb
cwde
movs
std
outs
cmp
push
xlat
repz
xchg
inc
inc
mov
dec
cmps
jae
int
nop
in
out
fwait
shl
inc
stc
stos
(bad)
mov
loop
and
lds
pusha
fs
ror
jb
in
jg
cmp
sti
jns
sub
dec
into
dec
loope
test
xor
xor
sub
aas
mov
gs
push
sbb
jns
in
push
mov
test
int3
scas
int
pop
div
add
mov
lds
jp
adc
mov
push
cmps
jne
idiv
fld
fsub
jmp
adc
inc
int3
in
push
jmp
out
push
ds
std
jge
rol
dec
or
shr
lods
inc
or
lahf
dec
pop
jmp
inc
loopne
ja
xchg
xor
xor
inc
cdq
add
jbe
inc
add
(bad)
in
cld
ins
dec
mov
mov
dec
jmp
dec
jmp
movs
mov
adc
mov
sub
movs
pop
jne
jne
push
push
popf
lods
push
pop
adc
popa
xor
test
or
mov
mov
shl
mov
loopne
xchg
loopne
sub
xor
push
inc
in
lods
rol
sub
jnp
mov
movs
push
imul
mov
lahf
adc
xchg
xchg
mov
sub
sub
retf
out
sub
jmp
dec
(bad)
outs
pop
fimul
xor
sti
fnstenvw
bound
stos
inc
mov
stos
xor
in
cmps
sbb
shr
add
xchg
out
fldcw
sar
nop
repz
mov
dec
xchg
xor
mov
mov
pushf
pop
popf
xchg
neg
imul
xchg
mov
cmp
int3
test
add
and
das
shr
and
js
outs
jmp
pop
add
cmps
scas
sbb
sub
jnp
test
jb
cmps
sbb
sub
outs
shl
adc
push
ja
rol
mov
es
jne
and
test
cs
loop
in
sub
int3
push
das
mov
sbb
outs
adc
sub
arpl
pop
test
rcl
mov
push
sbb
mov
retf
and
lods
lea
dec
and
cwde
aaa
xor
mov
in
pop
inc
xchg
dec
and
mov
push
cmp
add
data16
ja
adc
test
jbe
or
ret
and
dec
jnp
outs
test
icebp
jp
fidivr
lods
out
cmc
cwde
cmps
(bad)
dec
fadd
adc
dec
pusha
into
into
cli
xchg
push
or
popa
xor
fist
inc
popf
stc
push
jns
fs
std
int
jb
inc
lds
stos
xchg
mov
xchg
lds
mov
mov
inc
mov
jbe
push
mov
cmp
scas
les
pop
mov
cld
ror
dec
nop
sub
stos
adc
(bad)
sar
(bad)
xchg
in
cmp
ficom
adc
dec
leave
ror
popf
and
lea
cwde
and
ja
lds
sbb
jmp
dec
scas
push
mov
or
add
pop
div
mov
mov
inc
test
inc
hlt
mov
push
test
retf
mov
out
add
sub
das
and
cmp
add
and
inc
xchg
(bad)
mov
enter
pop
aas
std
fstp
sub
mov
lods
adc
leave
stc
inc
xchg
addr16
repnz
pop
adc
es
and
push
out
push
rol
dec
pop
and
test
inc
cmp
fdivp
(bad)
dec
jmp
mov
std
dec
or
pop
mov
sbb
adc
sbb
mov
push
js
sbb
sbb
or
ds
adc
or
rcr
push
stos
jmp
mov
sbb
xchg
xchg
in
aaa
adc
dec
push
push
mov
sub
dec
in
scas
jae
push
lea
call
test
ret
retf
stc
outs
and
inc
cmp
xor
mov
jno
mov
adc
xchg
int
mov
or
loopne
or
cmp
movs
fild
test
mov
lahf
ja
gs
out
xlat
mov
inc
movs
sahf
int3
(bad)
int3
mov
mov
mov
retf
lahf
and
cld
mov
xchg
mov
push
aaa
and
push
sbb
pop
mov
in
ds
inc
cmp
aam
sbb
rol
mov
jno
fsub
cwde
inc
(bad)
into
and
inc
dec
jbe
data16
pop
clc
push
push
push
sub
pop
(bad)
push
inc
iret
push
and
xchg
xchg
and
mov
jno
pop
test
sbb
movs
xchg
es
aas
sbb
daa
or
aaa
add
xor
mov
out
cs
mov
xor
div
xchg
lods
cmp
fisttp
int
(bad)
pop
pop
pop
scas
dec
jno
push
xor
or
jmp
ret
dec
movs
lahf
dec
sub
icebp
mov
add
push
cmc
add
push
popf
pop
mov
sbb
or
pop
out
(bad)
std
jge
jbe
(bad)
out
dec
sar
cwde
loope
sahf
or
mov
data16
sub
xchg
rol
mov
(bad)
pop
jb
pop
in
retf
lods
adc
sub
mov
push
sar
jp
mov
dec
cmp
test
imul
and
in
cwde
repnz
pop
xchg
jnp
lds
mov
nop
sbb
cmps
(bad)
cld
movs
mov
mov
adc
jbe
xchg
jl
dec
test
rcl
(bad)
sub
jp
cmp
sub
cmp
cmp
std
xchg
or
and
mov
ror
int3
xchg
mul
xor
cdq
movs
jmp
in
mov
dec
adc
std
call
mov
push
test
movs
clc
outs
mov
cmps
xchg
popf
addr16
pop
cmp
or
sti
adc
jbe
push
inc
(bad)
adc
and
inc
leave
sub
dec
mov
or
add
pop
and
jg
cmp
cmp
add
mov
mov
push
sbb
pop
popa
jns
jbe
sti
pop
leave
test
test
adc
aaa
jne
mov
jp
(bad)
dec
clc
(bad)
ret
shl
push
cmp
mov
push
data16
sbb
add
je
cmp
je
and
mov
ret
add
xchg
mov
loopne
mov
ror
jbe
test
loop
pop
aad
sub
fsub
hlt
test
ficomp
data16
cmps
jmp
mov
jl
mul
pop
adc
imul
mov
jmp
xchg
movs
push
mov
pop
xchg
pop
mov
sbb
sti
mov
jno
sbb
ins
(bad)
inc
test
sub
adc
mov
out
(bad)
mov
jnp
sbb
and
das
xchg
pop
outs
ret
pop
inc
jae
xor
fadd
mov
push
add
cmp
mov
lock
pop
std
fwait
in
and
loop
mov
(bad)
out
pop
mov
xchg
push
sti
jge
outs
retf
ss
mov
movs
ds
icebp
pop
fdivrp
mov
lock
or
push
or
pop
(bad)
cmp
ja
rcl
(bad)
xor
adc
stos
lahf
mov
mov
jae
sbb
jge
cmp
fimul
sub
and
pop
cli
lds
mov
mov
adc
jge
pop
mov
out
pop
outs
inc
outs
mov
xor
cli
fwait
push
scas
in
xchg
shl
jbe
mov
inc
push
dec
inc
mov
mov
pop
push
loop
pop
and
loopne
inc
jns
mov
sub
mov
adc
and
jne
test
scas
inc
pop
nop
repnz
add
dec
scas
push
mov
retf
ss
js
sub
or
pop
mov
or
or
mov
mov
add
stos
push
call
mov
or
dec
call
adc
sub
push
out
xchg
pop
mov
rcl
sub
ins
outs
movs
mov
stos
jg
jnp
aam
sar
fsub
or
(bad)
xchg
icebp
call
popf
leave
mov
shl
push
jae
sub
inc
or
push
xor
push
xchg
jmp
xor
mov
mov
pop
rol
and
stos
pop
mov
cmps
leave
in
je
xchg
loop
mov
or
in
cdq
mov
(bad)
(bad)
push
in
fild
pop
fwait
dec
add
ins
stos
jae
std
nop
arpl
out
repz
js
data16
std
cmp
pop
jle
ins
and
aam
cli
movs
or
push
das
mov
inc
sub
sub
sbb
popf
in
out
seto
or
sbb
mov
dec
dec
adc
rcr
cmp
mov
xchg
adc
out
pop
and
lods
out
inc
add
inc
scas
out
xchg
into
addr16
add
stc
xchg
pop
cmps
sub
shl
sub
jg
xchg
ds
mov
outs
or
cmp
loope
xor
mov
mov
jo
test
out
out
repnz
sub
or
pop
mov
sbb
xchg
int3
or
adc
mov
stos
and
adc
add
inc
inc
add
jae
jb
repnz
and
jo
mov
aaa
push
mov
int
cmp
loopne
mov
sub
loop
push
and
mov
jb
jbe
mov
xor
cmp
or
xchg
fisubr
dec
pop
ins
push
test
jne
sub
xchg
movs
add
adc
jmp
jnp
test
sbb
bound
popa
inc
adc
enter
inc
in
leave
into
daa
jge
push
daa
mov
scas
mov
shl
jo
(bad)
mov
inc
pop
outs
fwait
sub
mov
popa
xor
and
test
sahf
pop
(bad)
adc
imul
(bad)
stos
ss
into
test
movs
dec
int3
(bad)
and
fwait
pushf
fdivr
cmp
lods
xor
dec
loopne
or
out
mov
jnp
mov
push
add
jmp
dec
test
es
test
inc
loope
in
sub
sub
mov
mov
mov
ror
(bad)
or
fisttp
mov
cs
cmp
sahf
mov
ud1
fisubr
rcr
repnz
add
fcom
aad
mov
jns
mov
inc
xchg
test
mov
lea
mov
(bad)
or
gs
push
enter
mov
addr16
sbb
push
pop
mov
pop
jle
fsub
in
mov
pop
(bad)
lock
hlt
leave
cmps
cwde
and
movs
cli
loopne
outs
add
push
out
inc
pusha
bound
pop
(bad)
fimul
stc
xchg
mov
push
stos
into
inc
xor
scas
dec
aaa
or
adc
sub
fwait
jbe
mov
pop
cmp
inc
sub
adc
loopne
sbb
mov
mov
mov
and
jmp
jp
sub
jbe
or
mov
leave
inc
in
add
sub
cs
mov
cmp
cmps
shl
int
addr16
cmp
imul
lea
in
(bad)
mov
lods
into
daa
stos
dec
test
jecxz
loop
add
jp
gs
sub
or
iret
aad
hlt
xchg
popf
into
and
push
shl
loope
mov
daa
mov
push
pop
jne
rcl
jg
mov
movzx
fild
js
mov
das
mov
fwait
out
icebp
dec
dec
add
bound
leave
pushf
mov
daa
sbb
shr
outs
cmp
adc
jmp
jge
xor
into
imul
cld
dec
push
or
mov
and
jp
mov
test
xor
lea
popa
xchg
push
and
pop
(bad)
jecxz
arpl
cmp
and
jle
ret
sub
ror
mov
add
cmc
lahf
(bad)
loopne
lods
xchg
xor
mov
sub
and
mov
cmp
xor
adc
mov
dec
repz
and
xor
lds
add
aaa
addr16
mov
adc
inc
inc
jae
cmp
into
out
pop
(bad)
in
pop
daa
add
cmps
cmps
sbb
pop
mov
push
(bad)
addr16
cmp
xchg
dec
pop
mov
cmp
sar
outs
jge
aaa
xchg
xchg
mov
fxch
inc
jnp
sub
mov
sahf
pop
ss
imul
iret
sbb
scas
scas
add
jnp
aaa
add
xrelease
sub
imul
lods
outs
cmps
mov
scas
mov
shl
fild
fimul
fcos
jbe
or
dec
dec
add
mov
mov
cmc
mov
jno
mov
in
out
aaa
push
ins
push
into
movs
xor
sbb
dec
xor
retf
pop
clc
mov
sub
ret
sbb
inc
pop
scas
out
sub
cmp
jo
ss
sahf
sub
xor
out
pop
stos
fidiv
lock
cmp
sbb
clc
and
ret
imul
enter
push
fisttp
xlat
pop
or
sbb
mov
loopne
xchg
cmp
das
test
add
inc
sbb
mul
nop
jmp
add
imul
cld
dec
sub
add
pusha
lea
not
sbb
(bad)
int
ins
jnp
fist
iret
dec
push
mov
add
cmc
addr16
fist
adc
inc
pop
fldl2e
jmp
jge
or
cmp
push
loopne
retf
xor
mov
adc
pop
xchg
adc
jg
xor
pushf
xchg
test
mov
ins
mov
in
pop
sub
lock
add
xlat
int3
fisubr
add
mov
push
sub
and
je
int
retf
dec
rcl
bound
push
imul
mul
stos
test
sub
dec
jns
push
lods
outs
push
and
mov
xchg
mov
sub
push
add
mov
sbb
call
cmp
jns
pop
je
xchg
push
movs
cmps
xor
jmp
or
repz
mov
sahf
or
mov
or
ja
lahf
ins
and
xchg
add
sbb
inc
pop
mov
pop
loope
pop
jbe
adc
xor
push
xchg
aad
es
mov
fcomi
out
pcmpeqd
push
push
xchg
popa
hlt
enter
add
jp
mov
sub
lds
dec
pop
or
mov
mov
mov
pop
jns
jns
add
int3
xor
ficom
rcl
rol
push
(bad)
out
(bad)
xor
pop
xchg
loope
call
cwde
sbb
and
js
adc
dec
pop
or
mov
(bad)
cmc
inc
cmc
fimul
sahf
mov
popa
das
movs
cmps
scas
ds
adc
call
enter
push
bound
cld
or
pop
inc
adc
mov
push
xor
dec
or
push
aas
std
mov
push
xchg
cs
in
std
pop
pop
in
ror
mov
test
adc
scas
or
inc
add
jl
pop
jbe
data16
mov
xchg
xlat
mov
xor
in
mov
pop
sar
cmp
jns
mov
fst
mov
cmp
lods
mov
jp
call
bound
pusha
fadd
fwait
aaa
mov
(bad)
clc
mov
mov
mov
lods
sbb
pop
mov
jg
push
cmp
out
push
aaa
adc
jmp
das
jl
jb
adc
lods
inc
push
rol
scas
inc
push
pop
pop
imul
inc
rcl
ss
or
add
pop
and
ror
and
push
jmp
cmp
ret
mov
inc
mov
adc
mov
jns
sub
cmp
(bad)
in
add
ds
mov
loop
jl
lods
mov
lock
cli
inc
ja
mov
aas
inc
sub
imul
aas
test
xor
xchg
jle
push
out
out
sub
(bad)
fdiv
and
jge
pop
scas
add
(bad)
out
lds
ror
cmp
xchg
pop
dec
into
fisubr
cmps
ja
xchg
cmp
sub
(bad)
xchg
cmp
jnp
shl
mov
imul
cmp
nop
or
and
mov
push
fmul
clc
mov
lock
pop
enter
pop
or
mov
and
inc
jmp
dec
mov
test
push
out
cmps
push
retf
enter
dec
iret
xor
stos
mov
fld
xchg
pop
clc
fld
cmp
push
xor
hlt
push
pop
jl
sbb
out
xor
or
mov
cmps
out
push
push
pop
pop
out
pop
and
fwait
sub
mov
imul
fidivr
add
xchg
lock
(bad)
jle
pop
arpl
scas
jae
retf
jnp
and
stc
clc
ret
xchg
push
xchg
int3
je
cmp
cmp
sub
ins
and
push
adc
loop
call
and
sub
cmp
xchg
push
test
sti
push
pop
or
fsub
sbb
jge
jecxz
push
jmp
cmp
je
push
cmc
popa
cmp
iret
jbe
mov
jae
into
mov
dec
jo
adc
jns
sub
mov
rcl
bound
xchg
fwait
mov
leave
scas
fdiv
mov
adc
push
and
mov
scas
sub
pop
pop
adc
xchg
add
lods
add
dec
cmp
setb
and
mov
sbb
dec
in
fsubr
imul
jmp
popa
dec
in
pop
repz
aad
fild
inc
stos
test
or
mov
int3
push
gs
pop
adc
loope
fs
sti
scas
add
sub
addr16
icebp
pop
icebp
in
sbb
out
test
(bad)
push
sbb
sbb
nop
xor
call
cmp
daa
adc
cmp
popa
ror
xor
in
adc
xlat
and
dec
or
inc
xor
bound
(bad)
into
loop
retf
in
ins
shl
(bad)
mov
in
mov
push
popf
in
daa
pop
dec
inc
out
mov
aad
sub
fldcw
mov
push
addr16
ins
shr
adc
and
adc
arpl
pusha
div
aas
ins
rcr
(bad)
into
mov
jg
cmp
mov
mov
fstp
mov
fbstp
aas
jg
bound
repz
ss
jle
xchg
inc
imul
xchg
cs
pop
inc
push
outs
fild
stos
lahf
pushf
dec
push
pop
nop
loop
fbld
stos
inc
out
inc
out
push
adc
pop
xor
dec
movs
test
test
ins
xchg
movs
frstor
stos
fbld
out
sub
loopne
fld
push
dec
out
inc
imul
xchg
leave
iret
les
adc
movs
jecxz
sub
mov
cmp
inc
adc
jmp
jno
jge
test
es
mov
jo
and
mov
outs
sbb
and
pop
sub
sti
xchg
mov
jno
push
or
cli
push
mov
in
pop
push
rcr
pop
adc
mov
xchg
test
pop
dec
mov
and
repnz
adc
push
imul
in
ja
or
out
mov
sub
fsubp
in
bnd
xor
aad
push
hlt
sbb
idiv
or
add
pop
call
jnp
test
pop
bound
popf
sub
push
or
push
stos
mov
xchg
dec
stos
repnz
cmps
adc
mov
in
aas
push
sbb
repz
jp
jge
movs
add
dec
outs
push
xor
cmp
add
xchg
jbe
loope
xor
call
adc
sbb
xchg
sahf
xor
movs
push
add
inc
mov
xchg
xor
sbb
xchg
xchg
(bad)
or
add
rcr
movs
sbb
out
mov
cmp
fst
inc
cmp
imul
push
fst
ss
adc
add
adc
xor
in
ins
pop
(bad)
inc
(bad)
jne
fidiv
mov
mov
or
fild
mov
sub
lock
arpl
aaa
iret
push
and
add
loop
add
push
and
leave
cmc
into
ret
(bad)
sub
hlt
retf
shr
xchg
popa
clc
sbb
mov
mov
pop
xchg
test
jg
or
ins
xor
in
loopne
cmp
cmc
std
fs
arpl
out
test
jo
xor
inc
jmp
mov
xor
mov
inc
popa
xchg
in
push
push
dec
and
inc
xchg
push
outs
mov
test
pop
cmc
mov
jbe
pop
mov
push
sti
fs
adc
ins
outs
adc
mov
pop
xchg
lahf
(bad)
mov
inc
jp
cmp
(bad)
adc
push
push
int3
cs
loop
hlt
dec
cli
jmp
iret
dec
repnz
call
outs
xchg
pop
dec
movs
push
push
sub
jmp
mov
aad
cmp
loop
cmp
enter
loop
iret
adc
(bad)
ffree
pushf
div
mul
in
mov
ins
lods
mov
jg
jl
enter
in
outs
jae
test
pusha
cmc
aad
mov
cmc
mov
dec
or
fild
fisubr
es
mov
cmp
push
(bad)
jb
jno
push
inc
ret
fwait
xor
hlt
xor
add
loope
ret
stc
movs
mov
add
xchg
add
or
mov
inc
add
inc
bound
xchg
not
push
and
sub
jp
or
xor
test
inc
pop
arpl
in
ret
and
push
out
dec
fild
mov
mov
push
repnz
pop
dec
bound
imul
in
cld
jge
inc
stos
daa
push
data16
inc
push
fadd
shl
sbb
inc
leave
rcl
cwde
adc
jno
add
shr
int
push
pop
jecxz
mov
pop
sbb
xchg
xchg
movups
xchg
out
dec
jmp
push
jmp
out
ss
out
lock
cli
(bad)
mov
pop
xchg
fwait
jns
push
sbb
bound
std
mov
sar
lahf
in
dec
repz
fdiv
and
push
aad
test
retf
xchg
sub
xor
sub
dec
push
clc
jmp
ins
xchg
and
cmp
fidiv
pop
xor
sub
xlat
lahf
mov
jmp
sbb
outs
push
mov
cmp
sub
sti
mov
movs
outs
clc
stos
push
dec
mov
lods
inc
ins
shr
stos
loop
cmp
ds
call
pop
icebp
pop
mov
mov
sub
(bad)
and
mov
add
loope
jl
xor
mov
pmaxsw
out
jo
cmp
pop
xor
leave
frstor
clc
rcl
and
adc
inc
cmp
nop
mov
or
imul
xlat
addr16
cmp
aas
stos
pop
mov
sbb
sbb
cmp
loope
or
call
mov
dec
ficomp
mov
shl
outs
cmp
add
adc
sub
mov
(bad)
(bad)
jnp
mov
add
push
(bad)
xor
push
stc
dec
pop
xor
arpl
push
xlat
cld
inc
sub
in
push
enter
outs
loopne
int3
add
add
cmp
jnp
or
imul
and
cmc
xchg
jp
pop
cwde
sti
and
shr
pop
sbb
sbb
add
mov
repz
sub
dec
retf
adc
jo
fdiv
push
call
or
call
ds
jne
nop
clc
xor
out
jecxz
fmul
ret
cld
inc
(bad)
sbb
inc
push
cmps
imul
test
xchg
test
sub
movs
mov
mov
xchg
push
inc
bound
fwait
or
mov
and
aaa
sub
add
inc
fstp
xlat
cmp
fdivr
or
sbb
xor
mov
jmp
dec
dec
sbb
xchg
daa
pop
ss
mov
add
lods
add
xchg
loop
fsubr
xchg
cmp
jl
mov
fdivr
repz
stc
aam
(bad)
xchg
or
sbb
scas
mov
call
repz
aaa
sbb
call
adc
add
or
shl
push
mov
mov
sub
mov
cmp
pop
dec
inc
pusha
mov
adc
imul
mov
jno
out
bnd
int3
pop
gs
mov
sub
sub
xor
dec
or
and
jmp
jl
xor
mov
(bad)
and
ss
dec
mov
jns
or
in
xchg
enter
or
and
in
mov
mov
xchg
sti
sub
and
ins
mov
xor
mov
test
fiadd
sbb
push
vmovups
inc
outs
inc
mov
fdiv
(bad)
mov
sar
cmc
cmp
xchg
movs
mov
aas
jae
jle
jnp
adc
shl
inc
sbb
xchg
mov
cmp
retf
push
cli
(bad)
pop
sbb
dec
(bad)
pop
mov
dec
xor
or
and
inc
lods
int3
fiadd
or
icebp
arpl
pop
pop
sub
cmp
es
sub
jae
icebp
js
dec
pushf
sub
lods
inc
pop
mov
out
addr16
push
in
cmc
leave
jle
pop
repnz
stos
pushf
sbb
push
fdiv
or
iret
and
add
(bad)
adc
fidivr
cmp
jae
fisttp
sbb
lods
xchg
xchg
iret
push
js
shl
adc
adc
and
mov
mov
and
pushf
loop
pop
mov
sti
ds
movs
add
dec
cmp
lds
pshufw
(bad)
jmp
push
jmp
popa
xchg
sub
aam
xchg
in
or
jno
and
mov
xchg
test
sub
push
push
js
mov
cmps
mov
arpl
nop
jl
push
popa
jle
dec
jmp
mov
daa
cmps
mov
mov
push
add
jbe
sub
adc
add
and
xor
or
call
mov
sbb
and
adc
movs
cmc
dec
push
pop
repz
dec
mov
push
mov
mov
pop
sub
ss
jae
(bad)
mov
call
jb
jl
(bad)
shl
and
mov
adc
(bad)
mov
(bad)
sbb
jo
mov
push
or
addr16
arpl
adc
gs
int3
rcr
aam
out
jb
stos
sub
mov
test
xchg
push
retf
outs
arpl
ror
and
fmul
mov
mov
inc
rcl
hlt
xlat
xchg
xchg
jnp
loop
jg
(bad)
(bad)
sbb
and
and
mov
jno
xlat
pop
cmp
test
adc
xor
push
int
dec
pop
iret
sbb
or
mov
clc
fs
mov
ror
fadd
lods
cs
jge
jg
mov
retf
call
mov
dec
stc
daa
stc
daa
inc
dec
dec
add
mov
xor
fmul
sub
sbb
je
push
(bad)
nop
xor
mov
pop
lods
push
adc
push
xor
not
cmp
gs
gs
test
in
hlt
rol
aaa
(bad)
mov
js
cdq
jo
call
dec
das
loop
mov
popa
lock
dec
or
lahf
(bad)
test
mov
inc
sti
pushf
fnstenv
data16
test
sub
rcr
mov
bsr
xchg
xor
mov
mov
test
nop
(bad)
sbb
fnstsw
sub
nop
fnstsw
dec
ror
sti
cmp
and
xor
jbe
xchg
cmp
dec
lods
pop
sub
into
nop
pop
and
or
xchg
clc
mov
pop
(bad)
movs
out
mov
inc
outs
adc
mov
or
ds
push
repnz
jle
mov
pop
(bad)
pusha
mov
cdq
ins
movs
lds
or
pop
inc
or
cmc
je
scas
(bad)
and
jns
adc
stos
(bad)
sbb
xor
mov
ins
xchg
sub
dec
mov
jg
into
pop
pop
repnz
test
je
xchg
int
rol
mov
arpl
and
push
mov
ds
sahf
xchg
dec
push
mov
retf
loopne
movs
call
ds
cmp
arpl
aaa
(bad)
pop
iret
push
sti
fdivrp
mov
imul
(bad)
mov
cmp
sub
daa
cmp
push
mov
jp
pushf
xor
fldenv
shr
sub
pusha
sbb
test
(bad)
cwde
sbb
in
push
push
adc
jo
sub
retf
cmp
mov
jae
hlt
mov
push
jle
(bad)
sar
mov
pop
adc
outs
hlt
add
outs
sbb
xor
rcr
in
lods
sti
popa
xor
pop
or
(bad)
sti
inc
xchg
fwait
leave
data16
jo
clc
mov
or
in
pop
(bad)
xchg
popf
sub
enter
stos
add
jno
popf
test
ins
shl
mov
bound
jecxz
dec
xor
sahf
add
mov
call
fnstcw
jge
push
pop
pop
int3
jmp
xor
mov
nop
ja
out
out
mov
fdivr
fild
in
jmp
xor
icebp
stos
sahf
sub
les
das
into
popf
add
shl
xor
stc
mov
xor
mov
(bad)
jg
pop
retf
test
mov
stos
(bad)
sbb
xchg
out
jns
ss
ins
(bad)
(bad)
daa
inc
pop
outs
inc
lods
outs
fild
popf
and
ins
sar
enter
sar
fisttp
lods
push
pop
movs
cld
icebp
loop
xchg
sub
int
xor
mov
in
in
xchg
mov
or
cmp
pop
shl
cmp
fisubr
(bad)
es
mov
retf
inc
jle
jne
sbb
push
dec
int
and
test
cmp
dec
test
cmp
pop
sub
cmps
imul
and
or
jmp
adc
push
mov
dec
test
mov
int3
repnz
and
adc
mov
aas
ins
mov
inc
shr
add
mov
popa
adc
sub
std
dec
mov
arpl
int
call
jnp
sub
aaa
inc
dec
fisttp
pop
movs
popf
fdivr
push
fcmovbe
loop
xor
imul
lods
lock
and
outs
hlt
xchg
mov
loope
cs
push
in
mov
mov
fnstcw
outs
xchg
xchg
loope
sbb
enter
scas
jle
xchg
cmp
daa
inc
leave
dec
scas
ret
dec
sbb
sbb
mov
fdivrp
movs
push
sub
xchg
int
dec
mov
(bad)
rep
je
fstp
adc
add
test
mov
cwde
push
pop
ds
in
sub
jge
popa
dec
pop
rol
mov
outs
mov
dec
mov
inc
outs
pop
inc
mov
jae
add
push
pop
out
das
lahf
fdivr
jbe
ja
cli
out
inc
(bad)
pushf
add
std
push
jae
popa
popf
mov
es
xchg
fldcw
lods
nop
fimul
xchg
(bad)
adc
aaa
dec
or
out
stos
mov
imul
push
das
scas
js
repnz
daa
shl
sub
mov
lds
iret
(bad)
sbb
or
mov
stos
dec
cmps
mov
es
inc
xchg
dec
je
inc
pusha
mov
aad
bound
mov
sub
inc
test
jp
inc
in
push
loopne
test
jp
out
adc
(bad)
sub
(bad)
outs
loope
dec
push
and
sbb
xor
xchg
push
lahf
imul
pusha
jg
shr
sub
mov
outs
ss
sbb
mov
mov
inc
test
stos
sub
movs
mov
mov
jle
sahf
sbb
jnp
loope
jbe
mov
mov
retf
data16
pop
mov
mov
call
inc
aas
sti
cs
add
rcr
xor
sub
inc
inc
stc
js
sti
cli
inc
jnp
scas
mov
leave
enter
or
arpl
fstp
sar
xor
out
scas
pop
out
cli
sar
sbb
mov
pop
xchg
call
pop
mov
push
jno
fld
call
scas
(bad)
(bad)
(bad)
mov
adc
cmp
jnp
movs
xor
sbb
push
lahf
scas
mov
sti
xchg
test
add
dec
call
in
pop
shr
pop
push
mov
jg
retf
cmp
loopne
xchg
hlt
xor
ret
mov
mov
in
inc
ja
pop
mov
pop
clc
mov
div
(bad)
das
push
adc
mul
mov
sbb
xor
sti
sahf
xchg
movs
fcmovb
and
je
cmp
sbb
gs
outs
div
mov
cs
popf
xchg
movs
rcl
or
dec
ja
mov
sbb
lea
cmp
mov
and
fnstsw
add
shr
push
out
adc
retf
dec
push
into
or
or
inc
and
cdq
movs
iret
xor
into
jno
jle
mov
jl
call
add
pop
mov
inc
int3
dec
repnz
sub
out
cmp
pushf
fwait
sub
jno
loopne
retf
imul
cmp
mov
pop
add
(bad)
fdiv
in
retf
mov
js
fidiv
iret
adc
mov
mov
(bad)
retf
push
fs
int3
movs
call
mov
mov
push
fcomp
fwait
and
ja
and
loopne
xor
cmp
xor
aas
lods
adc
push
mov
sbb
add
inc
push
dec
cmp
pop
iret
mov
xor
cmc
dec
jmp
dec
push
inc
or
fimul
pop
out
and
or
aas
in
pop
call
push
adc
pop
cmp
jb
mov
adc
aaa
int3
jmp
loopne
enter
push
jmp
jbe
sbb
in
pop
movs
pop
cmp
shl
call
xchg
ret
(bad)
imul
cmp
add
jmp
inc
jnp
cmc
jae
sub
xchg
add
push
sbb
mov
and
aaa
jp
std
push
lds
xchg
xchg
ins
popf
dec
sbb
rol
jl
retfw
pop
mov
lods
cmp
daa
loope
mov
daa
mov
iret
and
mul
cmp
sub
mov
mov
(bad)
mov
add
sti
push
xchg
or
cmp
push
inc
hlt
shl
sar
jno
cmp
add
rcr
int3
imul
jmp
sti
cld
fcmovb
fidiv
mov
(bad)
jg
mov
mov
jmp
sahf
add
jns
scas
in
adc
dec
ins
bound
in
inc
adc
pop
xor
add
xchg
mov
push
cmp
cmp
push
adc
inc
xor
sbb
add
call
push
xchg
and
aam
dec
imul
push
sub
ror
and
mov
(bad)
in
outs
pop
push
push
pop
movs
mov
sub
mov
mov
test
test
mov
int
mov
fist
dec
(bad)
scas
mov
rcl
push
mov
xor
(bad)
(bad)
mov
ja
arpl
movs
or
lock
xor
mov
call
icebp
mov
dec
scas
mov
mov
or
push
sub
rcl
inc
xor
xchg
xchg
ja
lock
aam
sbb
cmp
push
mov
pop
out
(bad)
dec
inc
and
xor
cmp
push
push
data16
lea
or
xchg
add
cmp
push
push
push
popa
mov
ins
sti
pop
or
out
fcmovb
add
cld
and
inc
neg
xchg
mov
shr
lods
pop
repnz
retf
fwait
mov
nop
or
retf
inc
jbe
movs
pop
lock
nop
fcomip
(bad)
adc
mov
sar
push
push
lds
mov
xchg
mov
jle
xchg
mov
adc
in
push
inc
xchg
je
movs
cdq
inc
xor
cld
xor
movs
jo
aas
pop
cmps
hlt
cmps
push
out
push
in
xchg
(bad)
xchg
mov
repnz
arpl
push
cmp
mov
mov
(bad)
fsub
nop
enter
dec
imul
ja
push
sbb
cmp
scas
shr
jae
movs
inc
imul
xchg
dec
cmp
jecxz
rcr
and
sbb
(bad)
hlt
imul
cli
gs
pusha
loopne
daa
das
fmul
inc
aas
pop
dec
pop
sar
in
sub
ins
nop
adc
pop
xchg
pop
outs
sub
inc
fnsave
or
mov
(bad)
push
or
add
(bad)
popa
adc
and
sbb
std
stos
pop
ss
xchg
sbb
mov
retf
jo
xor
mov
fnstcw
dec
sub
mov
mov
push
pushf
gs
fild
cli
add
inc
repnz
xor
mov
out
iret
inc
rcl
scas
push
inc
out
shl
mov
cmp
push
(bad)
stc
xchg
pop
mov
mov
nop
mov
and
outs
das
push
(bad)
mov
add
dec
fwait
test
xlat
xor
stos
popf
push
sbb
fdiv
push
stos
adc
cmp
add
pop
out
sub
and
pop
ret
or
or
sbb
lahf
push
adc
inc
loopne
dec
cmps
mov
ds
pop
mov
jle
mov
repnz
jmp
pop
sbb
cs
cmp
gs
pop
mov
pop
out
pop
mov
fadd
xor
scas
shl
fld
data16
imul
pushf
push
add
into
xor
pop
mov
aaa
sub
ins
movntq
(bad)
xchg
jnp
(bad)
xor
jns
loopne
cmp
repz
(bad)
scas
mov
adc
push
mov
sbb
sbb
add
test
daa
xor
inc
xchg
push
movs
outs
xor
pop
and
mov
dec
fsubr
icebp
adc
sbb
lock
(bad)
mov
dec
sub
xchg
je
out
aas
shl
push
jl
aad
jle
pop
pop
rcl
xor
jmp
or
(bad)
lock
or
ja
xchg
inc
and
jp
or
inc
outs
arpl
mov
cmp
lahf
pop
xchg
and
push
add
ins
xchg
repz
cmp
aaa
dec
sahf
mov
movs
loope
push
pop
lahf
stos
out
ret
sub
mov
lds
inc
fstp
or
bound
(bad)
retf
pop
scas
fsubr
sub
outs
clc
inc
push
nop
inc
(bad)
fisub
loop
push
fild
jecxz
xchg
lods
mov
adc
add
sub
leave
cmp
or
stos
in
xor
mov
dec
mov
repz
in
ficom
jne
in
js
sbb
outs
out
pop
ins
xchg
lock
cmp
fld
xor
sub
sbb
push
or
mov
sbb
and
jg
inc
mov
shl
sub
sbb
cmp
stos
sub
dec
dec
dec
ds
ss
cs
ret
mov
ret
push
arpl
mov
loope
lahf
sahf
scas
ja
lods
fwait
arpl
leave
cmp
pop
jp
mov
cs
sbb
leave
push
loope
lahf
dec
xor
add
outs
or
dec
out
leave
(bad)
adc
dec
fs
stos
xor
loopne
push
es
retf
xor
aam
push
jle
hlt
mov
jmpw
or
or
lea
pop
push
pop
xsavec
sub
sbb
mov
rcr
adc
shr
mov
jae
dec
add
mov
ss
jge
push
jmp
mov
mov
inc
ss
mov
pop
ffreep
(bad)
lods
stos
cmp
xchg
jecxz
xchg
int
jl
xchg
call
push
out
mov
xor
push
pop
inc
fs
rcr
fild
jmp
outs
cld
push
retf
push
cmps
pop
or
fld
adc
or
or
xchg
aaa
loopne
in
loopne
pop
jecxz
retf
dec
jge
inc
int
and
movs
jne
jns
pushf
xor
xlat
jmp
jl
cs
sti
aad
(bad)
outs
add
push
push
add
mov
popf
adc
out
ds
cld
cmp
cmp
pop
mov
div
outs
call
loope
pop
mov
outs
outs
dec
retf
fstp
adc
mov
mov
sub
(bad)
jns
cmp
js
push
mov
jecxz
jg
xor
cmc
call
stc
dec
lods
fcmovnbe
scas
enter
cld
ja
xchg
aas
fucomip
mov
nop
jg
add
stc
xchg
inc
pop
push
xor
mov
aam
fiadd
das
add
or
add
add
xor
stos
cmps
leave
fild
in
lea
dec
jmp
out
jp
dec
cmp
nop
idiv
lahf
fwait
leave
jg
int
mov
retf
loop
mov
stos
cmp
popa
enter
inc
mov
inc
cwde
lods
(bad)
mov
dec
outs
jb
cld
adc
sub
jmp
(bad)
fcomp
mov
imul
shl
adc
pop
mov
cmp
fbstp
mov
push
fstp
arpl
dec
cdq
sbb
mov
popf
and
mov
inc
retf
and
pop
xor
out
daa
push
xchg
ds
lods
jg
js
popf
dec
cmp
sti
fild
ror
cmp
outs
cmp
hlt
mov
cmp
cmp
inc
iret
(bad)
ins
out
arpl
mov
fwait
or
cwde
cmp
cli
(bad)
cld
mov
push
and
sti
jge
jo
dec
js
out
maskmovq
iret
mov
movs
pop
(bad)
mov
mov
(bad)
loopne
loop
cmp
and
add
mov
and
add
adc
lock
ror
jae
cld
xchg
jle
mov
inc
pop
aaa
add
xchg
and
daa
pop
fistp
sbb
push
jle
mov
add
sti
out
adc
jmp
daa
popa
cmp
push
out
push
mov
sub
mov
test
cmp
mov
jecxz
cmc
pop
push
adc
xor
xchg
mov
pop
dec
mov
mov
lock
and
icebp
xchg
cmp
xor
jg
mov
add
mov
sti
xchg
dec
fsub
jl
inc
sbb
inc
mov
sar
or
outs
sahf
jno
iret
mov
repz
fdivr
xchg
adc
jno
jo
int3
mov
push
dec
xchg
jmp
jmp
mov
(bad)
and
pushf
mov
fwait
jae
or
out
fldenv
push
fbstp
inc
mov
mov
jbe
std
cmp
or
aaa
std
leave
dec
daa
mov
push
dec
adc
lahf
ins
xor
ret
xchg
push
retf
out
imul
jle
scas
xor
sti
rcr
push
in
pusha
push
adc
inc
xchg
xchg
jge
jo
adc
in
and
loope
enter
inc
mov
add
std
inc
mov
mov
adc
in
jge
rcl
aaa
jp
cmp
and
push
cwde
outs
popf
pop
push
fadd
mov
pop
pop
cmps
pop
cmps
retf
pop
push
push
fst
test
stos
das
rcr
push
jno
outs
stos
jmp
pop
sub
jl
mov
sahf
sti
mov
add
xchg
and
stc
mov
fdiv
ins
pop
in
mov
xchg
inc
pop
fnsave
inc
dec
aas
jg
xor
sahf
loopne
mov
mov
lods
js
push
rcl
dec
dec
or
in
jmp
out
out
movs
xchg
push
int
sub
popa
adc
fbld
mov
sub
mov
inc
push
frstor
(bad)
adc
int
aam
push
dec
jmp
stos
push
xor
xor
mov
mov
jmp
sub
inc
cld
nop
shl
ins
(bad)
cmp
jmp
scas
sub
adc
mov
mov
push
xor
jmp
sbb
ds
mov
cs
test
or
adc
add
in
dec
xchg
inc
sar
mov
outs
leave
fninit
inc
dec
pop
xor
frstor
push
arpl
(bad)
lahf
nop
dec
inc
and
and
push
xchg
and
push
sub
out
sub
rcl
mov
sub
inc
pop
and
out
cli
adc
stos
push
adc
xor
and
std
clc
scas
push
mov
jl
sub
stc
xchg
sbb
bound
fwait
cmp
shl
stos
sar
test
lds
xor
cmps
pop
test
mov
push
bound
cmp
ret
mov
add
and
pop
popf
sbb
mov
out
ss
push
jmp
xor
clc
div
push
push
push
call
js
movs
les
mov
mov
xlat
loopne
mov
cmp
add
lock
push
jno
dec
in
cli
mov
mov
and
sub
xlat
daa
inc
loope
push
in
mov
and
jmp
push
xor
sub
or
jmp
sbb
push
fild
(bad)
add
rcl
cs
sbb
not
cld
jnp
or
add
fs
(bad)
mov
sub
or
cmps
adc
mov
jb
fwait
jbe
or
fmul
pop
jecxz
scas
pop
popf
cmp
repz
xchg
loopne
push
cmps
inc
mov
stos
enter
pop
jp
jns
daa
arpl
or
jae
jno
push
or
sub
add
and
call
push
cwde
stc
xchg
aam
(bad)
js
leave
call
repz
sub
enter
ins
dec
lods
mov
imul
add
aaa
faddp
and
jp
(bad)
std
dec
rcr
cwde
fwait
xchg
int3
push
mov
xor
and
stc
dec
das
pop
xor
mov
stos
(bad)
jo
mov
shr
cld
jno
or
jecxz
bswap
xchg
(bad)
imul
mov
(bad)
or
sub
pop
dec
fstp
cmc
leave
xor
push
pusha
jno
nop
xchg
(bad)
aaa
call
leave
xchg
push
arpl
xchg
push
jno
and
sub
pop
push
out
hlt
ins
mov
mov
push
and
pop
and
call
sbb
or
(bad)
int
jg
ss
push
jne
(bad)
xor
or
das
ds
and
mov
dec
sub
inc
adc
addr16
lds
rcl
jmp
imul
mov
inc
inc
sbb
rcl
push
mov
enter
shr
pushf
scas
xchg
(bad)
sub
jae
jne
stos
dec
lahf
jg
and
sbb
pop
enter
jno
mov
lock
sbb
imul
cld
push
pop
inc
sar
jmp
int3
int3
test
inc
mov
into
fiadd
or
ret
inc
xlat
inc
leave
xchg
mov
mov
movs
xor
fild
iret
xlat
sub
test
sbb
add
xor
jle
aad
rol
cmp
add
sbb
in
xlat
sbb
retf
push
gs
mov
data16
xor
outs
bswap
dec
adc
(bad)
in
pop
iret
mov
push
idiv
xlat
lods
imul
mov
xchg
xchg
lock
dec
pushf
imul
pushf
les
pop
sbb
leave
ja
popf
(bad)
mov
xchg
out
or
pop
or
scas
out
add
dec
daa
mov
(bad)
out
dec
cmps
repz
jmp
and
inc
sbb
push
inc
shl
push
push
ins
dec
sti
test
mov
retf
fild
xor
in
repnz
inc
cli
inc
test
sbb
mov
or
xchg
out
inc
mov
pop
cmp
inc
xor
push
imul
cmp
frstor
mov
arpl
mov
stc
mov
xchg
clc
retf
fs
repnz
in
ins
daa
push
in
mov
jnp
xchg
xchg
rol
xor
(bad)
or
push
movs
es
and
(bad)
ins
fst
shr
(bad)
push
dec
ins
mov
add
sbb
adc
sub
outs
adc
dec
jmp
mov
mov
daa
cld
push
mov
dec
lds
xchg
scas
sti
out
loope
aad
pop
pusha
sbb
out
sbb
sbb
ret
test
inc
dec
mov
fisttp
loop
(bad)
es
ds
jne
popa
sub
lods
pop
sub
fwait
pop
loope
sbb
pop
scas
lahf
lods
xor
mov
ror
cmp
add
repnz
aad
imul
test
push
jbe
and
fidivr
test
sbb
adc
xchg
aaa
retf
lock
ja
xchg
xchg
sahf
cmp
rcr
sbb
cwde
inc
push
xchg
pushf
pop
daa
mov
mov
jg
xchg
pushf
adc
jmp
out
shr
jae
sub
sub
sti
xor
dec
addr16
adc
aaa
lods
push
push
jb
loope
mov
push
shr
or
(bad)
rol
data16
(bad)
pop
dec
cmp
cmp
std
jg
sub
jns
inc
fcmovu
jnp
stos
xchg
lock
ins
inc
iret
dec
inc
inc
das
lea
inc
loope
xchg
mov
stos
mov
and
sub
xlat
test
xchg
or
xchg
inc
inc
rcl
ins
aaa
pop
pop
jnp
shl
pop
cmp
or
sti
mov
adc
hlt
push
xor
mov
inc
pop
mov
fwait
inc
fcomi
and
sbb
adc
mov
xor
xchg
ss
adc
sbb
imul
fst
lahf
leave
and
mov
dec
push
out
jnp
cmp
pop
scas
lods
sar
sub
inc
jg
clc
mov
mov
or
outs
dec
jne
inc
and
mov
movs
pop
xor
lods
sub
adc
test
in
xchg
sbb
pop
addr16
pop
and
and
jmp
daa
xor
jne
mov
in
inc
call
loope
icebp
or
jg
xor
cmps
ins
mov
cmp
dec
ret
lods
mov
xchg
sub
xchg
xchg
jmp
pop
and
adc
jo
dec
cmp
add
cmp
mov
xor
push
adc
adc
pop
idiv
cmps
jno
test
bnd
out
and
jle
mov
es
mov
push
mov
mov
or
and
add
and
inc
sub
pop
call
hlt
adc
inc
iret
loope
(bad)
push
sbb
fcomp
xor
retf
dec
xor
xor
mov
and
pop
jl
push
sub
repnz
jmp
pop
push
outs
push
or
data16
test
aad
jmp
imul
arpl
lods
icebp
jge
repnz
test
adc
push
loope
adc
ds
cmps
xchg
in
push
jb
test
sbb
sbb
inc
xor
dec
lea
leave
daa
out
fisttp
test
sbb
and
je
test
inc
cmp
xlat
aad
xor
and
in
aad
inc
mov
es
(bad)
movs
sub
ins
loope
test
stos
jecxz
inc
pop
xlat
mov
pushf
mov
mov
and
pop
sub
fxch
mov
dec
ja
retf
xor
sbb
xor
and
sub
shl
add
sub
xchg
push
inc
push
pop
sbb
mov
sbb
hlt
xor
(bad)
or
pop
cmp
mov
daa
retf
inc
sub
cli
loop
out
in
(bad)
mov
aam
dec
enter
sbb
pop
adc
clc
jbe
xor
xor
mov
fcomp
pop
std
stos
dec
pop
test
je
jg
xlat
inc
ret
mov
pop
je
sub
cs
dec
adc
add
bound
movs
adc
dec
mov
fimul
mov
in
data16
dec
movs
mov
push
xchg
and
xchg
ret
mov
outs
repz
stc
jnp
dec
mov
adc
add
dec
les
pop
jmp
repnz
fistp
and
dec
dec
mov
rcr
repnz
faddp
push
pop
push
das
sbb
mov
adc
in
or
push
pop
pusha
lock
call
mov
pop
call
daa
push
xchg
fwait
xchg
pop
(bad)
retf
int3
mov
pop
mov
(bad)
idiv
cmp
or
mov
xor
jo
call
xchg
cmp
mov
mov
shl
mov
rcl
sub
xor
dec
push
retf
retf
dec
inc
inc
ds
in
mov
rol
repnz
dec
or
addr16
pop
mov
push
jbe
adc
mov
pop
sub
imul
inc
lahf
retf
inc
xchg
push
and
mov
cdq
dec
aaa
out
scas
mov
jecxz
jecxz
dec
sub
adc
out
jmp
xchg
adc
jne
(bad)
arpl
push
mov
out
retf
pop
lods
test
xor
jne
dec
fcomp
mov
pop
fs
hlt
std
mov
cdq
rcr
daa
aad
pop
sub
pcmpeqd
add
pushf
xchg
bound
mov
fwait
daa
cli
sbb
add
call
aas
adc
xor
pop
and
std
cmp
xor
xchg
jge
jne
push
(bad)
popa
nop
pop
jmp
sar
pop
cmc
gs
pop
sub
mov
imul
movs
outs
das
mov
fwait
sbb
push
leave
lods
test
inc
inc
outs
xor
mov
(bad)
or
xor
(bad)
sar
xor
jo
idiv
cmp
pop
mov
and
sub
(bad)
ret
dec
xlat
jno
test
dec
xchg
mov
fcmovb
adc
popf
sbb
add
mov
jp
shld
enter
push
jno
mov
xchg
pop
xor
fcomp
into
push
jmp
pop
stos
mov
pusha
sahf
repnz
div
add
outs
mov
and
jp
fsubr
jno
mul
push
scas
mov
in
arpl
ror
(bad)
enter
mov
cmp
push
lea
mov
inc
je
or
lahf
push
mov
ret
pop
ds
pushf
js
jl
xor
inc
adc
dec
shr
scas
ror
test
or
sub
cmp
mov
pop
jo
mov
test
push
sub
repz
jns
cmp
leave
lea
das
or
sub
add
and
add
jecxz
mov
cmps
dec
mov
cwde
mov
fwait
inc
push
daa
mov
mov
mov
xor
movs
rcr
push
xor
fsub
xchg
cmp
fcomp
sub
inc
add
or
push
loope
vpsubusb
rep
jo
clc
pop
inc
sbb
mov
in
cmp
or
fwait
inc
push
iret
not
add
push
cdq
push
push
add
jecxz
or
fwait
mov
dec
sbb
push
gs
sub
jbe
ror
aam
scas
and
jo
fild
pop
or
out
mov
sub
ror
sub
mov
ja
pop
pop
(bad)
leave
ret
add
clc
lds
aas
repnz
call
xor
lock
lds
fs
jb
mov
(bad)
pop
stos
jg
lds
xchg
call
adc
xor
fld
inc
mov
fdivr
js
fs
sbb
or
cmp
sti
push
jg
xor
xchg
icebp
pop
pop
sub
dec
pushf
adc
into
jp
daa
xchg
and
bound
or
xchg
or
aaa
and
lds
xor
push
lahf
rcr
sub
dec
adc
cmp
jmp
fimul
sub
mov
pushf
arpl
ss
pushf
(bad)
push
mov
mov
(bad)
popa
loop
imul
jg
icebp
lds
mov
popf
adc
and
in
and
mov
cwde
rcl
adc
push
and
fmul
jns
or
and
xchg
loopne
repz
xor
out
mov
pop
or
push
mov
mov
sbb
and
js
bound
out
ret
movs
pusha
ss
mov
ins
jne
cli
aas
jp
and
jo
mov
sahf
mov
pop
or
xchg
mov
mov
repz
cwde
shl
mov
es
icebp
test
dec
scas
xor
sub
push
and
mov
fisub
fild
mov
and
pop
push
adc
xchg
sub
in
(bad)
mov
jae
and
jle
cmps
mov
push
adc
mov
xchg
arpl
xchg
retf
cmp
and
mov
fcomp
das
ret
sti
xor
xor
icebp
in
je
xchg
outs
hlt
pop
dec
js
lods
ins
es
add
push
adc
xchg
fcmovne
popf
sub
stos
ficomp
arpl
out
dec
dec
xor
(bad)
dec
aas
gs
ja
les
ins
adc
icebp
jne
fiadd
imul
loop
andps
fsin
xchg
popf
pcmpgtw
cmc
shl
push
les
sbb
pop
inc
aaa
es
stos
and
cmc
jecxz
jge
dec
mov
sub
(bad)
in
xor
test
xor
fsub
lock
cwde
in
mov
xlat
mov
xchg
fucomp
imul
or
and
imul
cs
xor
inc
fcmovne
gs
inc
not
inc
and
jmp
sbb
jmp
or
xchg
or
or
shl
stos
inc
aad
data16
push
push
xor
outs
jae
rcr
ins
data16
inc
sahf
ror
mov
lods
mov
mov
pushf
ja
or
(bad)
jb
pop
mul
mov
pop
jns
xor
js
aaa
in
int
test
js
in
dec
push
retf
and
push
xor
and
data16
call
jge
dec
in
push
aad
pushf
stos
ret
sbb
cmp
movs
pop
lock
xor
and
jbe
sbb
retf
loope
add
xchg
ins
ret
dec
push
in
mov
lods
inc
ret
js
xor
in
pop
xor
inc
hlt
pop
mov
scas
sub
jo
or
xlat
ins
mov
aaa
icebp
and
sub
imul
lods
jbe
pop
adc
iret
mov
jae
fsubp
(bad)
in
les
xor
cmps
div
leave
push
xlat
jge
jne
add
fstp
arpl
fwait
fwait
adc
ficom
in
push
das
int
pop
xor
inc
ss
or
hlt
dec
iret
sbb
lahf
adc
in
and
outs
jmp
out
sbb
inc
iret
cmp
and
jno
lock
pop
inc
mov
ins
popa
icebp
and
sbb
mov
push
ror
dec
jecxz
jo
or
loope
std
adc
out
cmc
add
outs
pop
push
popa
adc
jno
cdq
xor
fisttp
int3
add
xor
clc
and
sti
jnp
pop
push
push
arpl
(bad)
lock
fnstsw
rcr
cli
or
xchg
mov
aaa
add
push
leave
stc
outs
retf
and
dec
pushf
jbe
jmp
xor
xor
or
mov
dec
imul
cmp
loope
xchg
push
out
(bad)
mov
movs
inc
iret
or
fstp
cwde
in
jmp
imul
push
ja
mov
xchg
mov
push
outs
push
xchg
lds
pop
ret
cmp
inc
xchg
daa
add
pop
jp
sbb
xor
jae
cmp
sub
push
fwait
push
pop
out
xor
loope
int3
push
xchg
inc
jne
mov
mov
mov
sti
mov
add
jb
pop
ss
xor
or
repnz
and
xchg
mov
retf
pusha
lods
enter
ss
shl
repz
in
sbb
mov
loope
adc
add
cdq
cmp
sahf
pop
cli
pop
push
xor
inc
xchg
mov
push
add
daa
aas
popf
dec
sti
lahf
sub
dec
mov
mov
push
sub
ss
sub
xchg
bound
sub
lahf
sbb
dec
push
xchg
mov
pop
mov
daa
icebp
inc
push
ja
jg
or
xchg
jb
mov
call
cmp
int
(bad)
adc
test
xor
xchg
stc
or
lods
mov
jns
scas
mov
push
aad
aaa
dec
movs
scas
mov
ss
pop
sahf
ja
cmps
adc
and
mov
stos
pop
jecxz
aam
jle
xor
call
sbb
inc
and
dec
or
xor
pop
or
xchg
sbb
icebp
inc
add
enter
pop
or
push
pusha
pop
jge
sbb
ja
arpl
in
lds
jecxz
in
in
lahf
xor
jmp
dec
ret
dec
addr16
pusha
ins
xchg
cld
or
out
ins
stos
and
adc
sub
loope
push
addr16
jnp
int
loop
xor
cmp
daa
cmp
call
ds
gs
push
lods
lods
mov
stos
pop
out
ins
xchg
in
aad
sub
jl
xlat
loop
adc
outs
pop
cmp
lods
jno
sahf
add
ret
xchg
adc
jg
xchg
mov
(bad)
lods
popa
xlat
fstp
cdq
adc
das
or
add
sub
dec
fs
stos
push
jno
mov
loop
inc
arpl
out
leave
xlat
sbb
test
mov
push
imul
pop
adc
mov
cdq
jp
or
jp
push
sbb
mov
jb
test
dec
xor
jne
mov
(bad)
xor
xchg
dec
jnp
adc
pop
adc
mov
sar
dec
push
add
adc
mov
pop
jbe
pushf
pop
scas
aam
loope
mov
dec
add
(bad)
js
jne
popf
mov
daa
shl
popa
mov
inc
xor
(bad)
test
ins
lods
push
or
sar
cli
aad
jle
cmp
sahf
add
adc
jno
(bad)
fcom
out
mov
mov
dec
mov
sub
ficomp
mov
sar
int3
lds
bound
dec
inc
js
aaa
or
mov
and
in
imul
adc
pusha
int
pop
push
daa
push
int3
mov
imul
jp
out
(bad)
pop
mov
fmul
imul
mov
dec
std
std
mov
test
mov
(bad)
xchg
mov
push
adc
xor
and
or
jae
mov
inc
inc
call
in
and
inc
inc
push
pop
out
push
cmp
push
jb
xacquire
mov
pop
mov
fnstcw
add
pusha
and
jbe
test
fnstenv
or
out
mov
push
rcr
jecxz
xchg
dec
in
push
rol
jge
fwait
cs
pop
push
pop
adc
mov
sahf
jno
in
test
xor
nop
frstorw
or
cmp
push
mov
enter
or
dec
xchg
lea
add
aam
adc
iret
adc
jp
jnp
lahf
outs
fiadd
cmp
in
push
or
xor
jae
(bad)
test
pop
(bad)
in
xor
or
xchg
mov
add
out
in
mov
pop
(bad)
jns
pop
aad
popf
test
jbe
mov
xchg
pop
outs
mov
mov
cmp
pop
and
movs
push
repnz
sbb
adc
mov
mov
ds
(bad)
ficom
pop
mov
aas
cmp
scas
mov
sub
push
add
pusha
ss
mov
mov
fld
push
or
sub
add
and
mov
adc
mov
mov
jmp
jae
rcr
sub
add
mov
cmp
or
jae
stc
sbb
pop
jmp
out
xor
mov
xor
xor
jl
shl
js
rcl
push
daa
outs
sub
sti
push
loop
and
sbb
lock
jmp
ja
and
lods
mov
xor
mov
lds
dec
aam
xor
mov
mov
mov
bound
mul
mov
into
xchg
jb
mul
push
dec
cli
jae
vpaddq
fldcw
jl
or
call
int3
inc
mov
repnz
mov
adc
aam
sbb
ins
add
mov
out
xchg
or
add
shr
dec
mov
push
jns
call
imul
pop
jg
sbb
fdivr
sub
mov
inc
push
mov
in
fwait
jae
cmp
ins
movs
mov
das
push
push
xlat
sub
(bad)
ds
mov
movs
out
(bad)
mov
xor
inc
mov
pop
(bad)
sub
imul
lock
stc
popf
sub
(bad)
mov
sbb
popf
mov
outs
es
push
dec
mov
ret
pop
cdq
pop
ja
push
outs
xor
add
adc
cmp
or
and
xchg
out
cmp
call
add
push
cmps
mov
sub
cmc
loope
std
mov
les
icebp
lahf
cs
pop
lock
sub
and
inc
test
adc
lahf
mov
fldenv
dec
test
loope
sub
xchg
mov
push
push
sahf
jbe
push
sub
stc
cmp
ret
pop
mov
jo
(bad)
loopne
mov
or
dec
or
inc
scas
push
js
div
in
and
inc
into
cmp
hlt
repz
test
fadd
mov
lock
fs
or
mov
mov
fstp
pop
and
mov
movs
add
test
ror
loop
out
cld
cmp
xor
dec
jno
mov
sar
in
loop
mov
add
fsub
ins
lods
mov
or
jge
dec
mov
xchg
pusha
jge
cmp
cli
or
fs
mov
push
icebp
fld
les
in
(bad)
jg
jae
adc
mul
lahf
fnstsw
leave
add
xor
jb
loopne
inc
out
pushf
xor
add
pop
in
cdq
sub
call
and
idiv
mov
ror
jo
(bad)
out
out
ss
jg
mov
sub
adc
mov
repz
jns
into
mov
push
aam
std
cwde
repz
into
dec
sub
lahf
ins
es
and
leave
pop
stos
xor
pop
daa
push
cld
into
inc
in
adc
in
enter
mov
(bad)
retf
mov
or
adc
add
call
push
dec
sbb
out
and
test
pop
push
mov
cmps
mov
fld1
clc
frstor
pop
mov
int3
or
jmp
int
mov
xor
scas
jae
imul
adc
lods
inc
ss
test
lock
mov
or
cmp
pop
in
test
jle
add
js
or
mov
cdq
sbb
add
addr16
(bad)
add
int3
xchg
(bad)
mov
mov
jp
push
add
mov
xchg
sub
loop
inc
fs
(bad)
push
xchg
js
xor
call
jnp
in
adc
jl
je
xor
dec
or
sub
cmps
mov
lods
cwde
leave
fwait
sbb
xchg
mov
mov
aas
adc
cmp
add
es
jl
push
or
sbb
sub
mov
ror
clc
or
(bad)
repz
xor
add
cdq
outs
mov
mov
xchg
pushf
int3
rcr
fs
aas
rcr
push
xchg
mov
jmp
ds
scas
pop
jge
pop
inc
adc
push
or
(bad)
mov
or
push
call
js
in
mov
arpl
or
fbld
repnz
test
das
movs
inc
mov
add
out
cmp
aaa
adc
adc
aad
push
pop
adc
das
daa
(bad)
imul
lea
jle
sub
cmp
into
inc
mov
repz
pop
sar
out
ja
jmp
les
mov
lods
push
push
push
mov
jb
sub
out
seta
mov
dec
loope
rcl
lea
xor
nop
push
js
cmps
fcom
sbb
imul
fs
sti
lahf
pop
xor
aaa
gs
mov
fs
sub
pop
(bad)
popa
pop
and
js
hlt
mov
add
push
jns
adc
pop
or
call
rol
pop
fcomp
pop
mov
xchg
or
and
adc
dec
aam
inc
sahf
into
adc
stos
push
xchg
adc
fdiv
dec
push
mov
pop
in
mov
sbb
sti
call
xchg
xchg
jnp
pop
adc
mov
ds
xchg
pop
pop
pusha
push
pushf
cwde
leave
jae
jp
movs
xchg
inc
aad
xor
xchg
loope
jecxz
sub
xor
jb
aaa
les
jl
bound
cwde
inc
mov
out
(bad)
jno
(bad)
mov
push
mov
out
movs
sbb
repnz
sbb
mov
inc
mov
push
and
jp
push
and
shl
xchg
shl
cmp
cs
mov
sbb
cld
pop
jmp
fst
repnz
inc
mov
movs
dec
cli
lock
inc
xlat
inc
nop
retf
adc
shl
in
push
xor
push
mov
cld
mov
cwde
pop
in
cmps
inc
inc
pop
cdq
loope
stos
adc
arpl
xchg
jno
and
aas
gs
pushf
ins
ja
into
mov
pop
xor
into
or
mov
mov
bound
cmp
inc
pop
sub
icebp
push
jmp
daa
call
leave
ror
push
test
pop
cwde
mov
in
mov
xchg
mov
inc
mov
adc
jg
std
hlt
mov
sub
sbb
outs
cmp
push
hlt
call
movs
out
adc
push
das
data16
dec
(bad)
repz
(bad)
mov
dec
std
aas
cmp
inc
fcomp
jmp
imul
sub
cmp
mov
imul
inc
jg
jmp
movs
nop
mov
mov
hlt
jb
dec
cmps
std
xchg
pop
and
scas
mov
dec
nop
es
ins
sub
fwait
call
sbb
outs
xchg
jnp
scas
enter
dec
push
xchg
sub
cli
mov
outs
pop
dec
pop
loop
neg
popf
pushf
sbb
push
jne
sub
iret
gs
xchg
lock
popf
adc
mov
dec
dec
mov
cmp
and
into
sbb
dec
xor
sub
and
test
rcl
mov
jo
(bad)
pop
and
mov
pop
add
loop
pop
xchg
stc
stos
shr
add
adc
add
in
inc
(bad)
int
pop
mov
daa
enter
mov
repnz
add
idiv
add
push
pop
gs
test
dec
loope
xor
cmp
pushf
inc
iret
div
xlat
add
cwde
cmp
or
fidiv
mov
push
arpl
inc
dec
jge
das
inc
cli
ret
sub
mov
fs
loopne
pushf
mov
and
add
shl
retf
mov
je
cmp
push
movs
mov
mov
lds
inc
(bad)
mov
pop
mov
lock
(bad)
imul
loop
loopne
cmp
pop
cmps
gs
or
test
aaa
stos
cmps
pop
mov
and
add
int
adc
rol
jne
loope
push
loope
adc
(bad)
inc
inc
add
hlt
xor
fldcw
inc
mov
out
call
fild
cld
cmps
and
int3
sub
xchg
mov
dec
popa
(bad)
cld
mov
lods
aaa
ret
rol
xor
imul
pop
pop
sti
cdq
cmp
rcl
data16
mov
loop
pushf
push
push
scas
mov
and
jbe
and
out
repnz
push
mov
out
mov
or
(bad)
pushf
pop
cmp
ss
aad
bound
or
inc
push
call
lock
popa
sbb
jp
sbb
bound
add
mov
push
mov
add
push
sub
(bad)
and
push
js
dec
daa
mov
jge
add
pop
in
cmp
jmp
psrlq
pop
pop
lods
stos
pop
cmp
adc
gs
fcom
and
xchg
test
pop
scas
shl
jl
aas
inc
in
sbb
in
xchg
dec
sbb
mov
cld
dec
xchg
jb
icebp
sub
pop
push
out
call
pop
push
clts
addr16
sub
scas
lods
ss
or
mov
scas
xlat
mov
int
test
outs
pop
cmp
lahf
cmp
jbe
sub
sub
inc
outs
ins
jecxz
popa
mov
lds
xor
ret
adc
or
clc
sub
sbb
lods
add
clc
xor
imul
jnp
push
sbb
mov
cmp
mov
fdivr
sar
mov
mov
hlt
lods
cdq
or
jle
movs
(bad)
repz
loopne
inc
icebp
and
cmp
rcl
jb
mov
mov
mov
xlat
push
sti
adc
jmp
cli
mov
addr16
lea
mov
fwait
cdq
jp
outs
pusha
or
movs
stc
adc
in
shl
mov
dec
fnop
inc
mov
sbb
push
cmps
mov
adc
mov
ret
loop
popf
adc
sub
pop
mov
scas
mov
adc
test
sub
arpl
(bad)
out
add
jp
cwde
xchg
add
(bad)
js
jl
sahf
fsubr
(bad)
sti
(bad)
pop
xchg
(bad)
gs
mov
add
out
xchg
hlt
mov
mov
les
in
aam
rcr
inc
aas
loope
jne
or
fxch
sti
jnp
loop
xchg
and
mov
sbb
clc
jne
ja
sub
dec
call
jbe
sahf
xor
jge
daa
inc
iret
ror
xchg
mov
or
sti
jmp
repnz
hlt
sbb
adc
push
xlat
adc
adc
ja
jo
call
jae
shr
mov
inc
jp
outs
cmp
xchg
mov
adc
mov
pop
sub
jmp
or
jg
cs
into
outs
push
sbb
dec
cmps
test
mov
lea
cmps
out
jns
sahf
fsubr
jmp
sbb
push
and
sar
and
loope
imul
nop
enter
leave
xchg
cmps
test
call
push
sbb
fs
test
hlt
push
mov
dec
inc
mov
push
jl
bound
dec
cmp
push
icebp
sahf
sti
pop
inc
mov
push
push
repnz
daa
outs
sub
std
pop
xchg
xchg
ins
or
inc
jae
test
mov
sbb
aam
jp
nop
adc
test
push
icebp
mov
(bad)
push
dec
and
int3
sti
pop
mov
(bad)
stos
xor
push
or
(bad)
and
fdiv
fild
sahf
xchg
fiadd
(bad)
cmp
xor
mov
js
out
xor
mov
cmp
imul
dec
pushf
retf
lods
mov
mov
ja
pop
dec
inc
loope
push
enter
sbb
pop
and
sub
clc
mov
mov
aaa
push
sub
(bad)
fsub
adc
sub
aad
pop
lock
pop
fwait
push
dec
(bad)
pop
aas
or
mov
xor
xor
mov
dec
cmp
(bad)
inc
fldenv
ret
fld
and
lds
nop
dec
push
cs
push
inc
sub
imul
add
gs
aad
retf
xor
ds
mov
fistp
mov
popa
jmp
imul
sbb
cli
test
out
pmaddwd
pushf
pop
jae
repz
imul
test
ret
push
jbe
rcr
aas
jno
sub
mov
leave
jnp
movs
into
jmp
icebp
out
pop
inc
jo
push
cdq
cdq
fadd
jl
and
jnp
jecxz
enter
addr16
fnstsw
push
mov
fistp
(bad)
loope
adc
loope
push
scas
mov
xor
sub
test
or
mov
clc
mov
lods
popa
mov
pop
adc
mov
ficomp
sbb
mov
dec
pushf
xchg
and
push
push
ret
hlt
fucom
jmp
xor
outs
fbstp
mov
adc
ins
sub
xchg
push
pop
mov
sti
sub
sub
inc
mov
cmps
add
std
add
sub
(bad)
popf
shr
jne
pushf
iret
test
stos
adc
xchg
adc
xor
in
sbb
mov
ds
inc
jae
ret
xor
pop
dec
mul
call
pop
jbe
mov
call
push
inc
cmps
pop
repnz
shr
xor
out
jno
out
sbb
inc
inc
stc
sbb
stc
sahf
pop
retf
mov
sti
frstor
or
in
hlt
dec
bound
dec
cmp
xchg
lock
daa
mov
or
jge
pop
hlt
mov
mov
sar
lahf
repnz
add
inc
int3
movs
and
jne
xor
xchg
xchg
loop
test
jb
add
in
mov
ror
pop
xor
stos
xor
call
inc
lea
push
sub
mov
shl
bound
shl
xchg
in
mov
mov
fwait
jae
mov
mov
gs
bound
test
call
in
scas
mov
lods
pop
mov
xchg
mov
sbb
in
imul
int3
ja
pop
repz
(bad)
aaa
push
cmp
outs
mov
cmps
(bad)
(bad)
dec
cli
lods
sub
sub
arpl
icebp
mov
adc
pusha
dec
xchg
or
rcl
ds
mov
jo
push
jp
aas
jnp
sub
and
stos
xchg
xchg
sbb
call
cmps
jo
or
call
mov
sub
into
pop
icebp
std
mov
call
pushf
mov
loop
stc
lods
or
xchg
inc
ret
push
xlat
adc
pop
mov
aas
idiv
cwde
ja
fwait
enter
or
jne
call
movs
aad
jae
inc
scas
js
jne
mov
or
test
movs
rol
and
aas
dec
into
pop
leave
sar
bound
es
jno
icebp
and
jmp
ins
xchg
imul
inc
sbb
ds
mov
mov
mov
mov
ins
sbb
dec
data16
sti
mov
ds
mov
sub
push
rcl
sub
dec
mov
out
jle
dec
jno
mov
cmps
sbb
icebp
lock
sub
hlt
cmp
leave
out
aas
(bad)
mov
xchg
push
sti
mov
xchg
out
mov
xor
sub
adc
ja
pop
cs
mov
push
or
std
sbb
inc
ss
xchg
add
loop
mov
pop
shl
inc
adc
scas
scas
js
xchg
push
int
test
pop
dec
adc
xchg
test
fdiv
ret
pop
sbb
sahf
sbb
es
mov
test
lods
cwde
je
daa
test
dec
loop
imul
aaa
xchg
(bad)
xor
cs
mov
sub
je
mov
rcr
mov
or
mov
ss
rol
ins
and
scas
push
(bad)
outs
call
and
fmul
mov
into
fdivp
adc
rcl
sar
mov
sahf
nop
fwait
pop
retf
sar
jmp
push
ror
cmp
sub
mov
dec
jmp
mov
mov
int3
das
mov
rol
das
test
xchg
(bad)
xor
jnp
pop
lds
(bad)
and
shr
sbb
xchg
inc
addr16
xor
dec
xor
pop
lock
mov
pop
(bad)
dec
add
add
or
iret
(bad)
int
xchg
addr16
jle
popw
arpl
mov
add
xchg
xor
adc
aaa
leave
not
dec
sub
into
add
cmp
scas
or
rol
xor
fstp
iret
(bad)
cmc
adc
fnstenv
je
addr16
test
test
jg
sbb
mov
bound
mov
adc
call
ja
rcl
stos
stos
fwait
out
mov
(bad)
jmp
fcomp
mov
mov
sbb
shl
cmps
pusha
or
cli
in
ss
(bad)
addr16
push
test
inc
push
cmp
ins
in
ret
mov
ins
cmps
mov
cmp
fistp
(bad)
cli
pop
lods
cmp
sub
mov
shl
jbe
or
dec
xor
push
inc
mov
cmc
xchg
arpl
shl
or
loope
leave
push
scas
shr
cmp
xor
adc
inc
cdq
daa
push
int
repnz
push
test
mov
xchg
sahf
add
inc
push
shl
xor
add
and
ror
inc
scas
mov
bound
cmp
adc
retf
xlat
pusha
in
pushf
add
mov
mov
(bad)
(bad)
in
cmp
ret
aaa
cwde
clc
cmps
sbb
cli
and
into
or
iret
cli
mov
outs
out
shr
mov
inc
dec
or
pusha
movs
ins
push
xchg
mov
fwait
nop
mov
cmc
dec
scas
rol
push
add
sahf
jne
cdq
xchg
sar
sti
(bad)
outs
cmc
movs
jmp
pop
sub
pushaw
or
imul
add
(bad)
adc
sub
enter
cdq
shl
mov
push
sbb
mov
jg
out
pop
call
(bad)
adc
loope
mov
es
mov
adc
push
inc
lods
mov
lea
shl
xchg
and
xchg
or
jl
inc
push
pop
xchg
jmp
data16
dec
aam
jl
mov
loop
pop
pop
in
fld
lds
and
(bad)
xor
add
addr16
out
cdq
mov
adc
pop
mov
fs
neg
xor
add
pop
inc
and
mov
push
cld
int
sub
push
call
test
push
mov
or
hlt
aam
push
ins
push
retf
ins
int3
jl
leave
arpl
mov
pop
ds
xchg
jne
in
pusha
push
push
pusha
(bad)
stos
inc
inc
mov
pop
inc
ja
sbb
dec
lds
mov
vmread
retf
bound
int3
mov
jnp
push
push
xchg
icebp
test
cmp
ds
or
and
popf
int
xor
push
dec
adc
nop
fadd
les
fnsave
mov
cmps
aas
fld
mov
mov
xor
cmp
pop
daa
outs
mov
and
inc
ds
movs
sti
jge
cmc
fsub
jmp
sub
mov
jbe
aam
pop
sub
adc
push
dec
out
ss
sbb
and
retf
das
jp
fbstp
push
fsub
sub
cmp
push
loopne
stos
mov
enter
adc
jle
xchg
aas
leave
xchg
xchg
nop
data16
movs
sbb
dec
or
mov
movlps
cmp
mov
movs
xlat
enter
call
sub
inc
inc
test
loope
xchg
dec
mov
jne
or
and
paddsw
cmp
mov
shl
int3
jp
sub
test
out
(bad)
sub
call
neg
jne
test
out
xor
inc
bound
out
mov
jbe
push
jp
stos
pop
push
adc
push
xchg
mov
mov
jmp
jns
push
cmps
mov
push
xchg
mov
dec
mov
cmp
xor
lods
dec
cmp
fisub
loopne
xchg
mov
out
push
pop
test
test
inc
jo
inc
(bad)
pop
bound
scas
adc
outs
and
push
outs
dec
fs
ins
inc
pop
mov
jno
retf
jno
xchg
mov
sub
ja
ins
mov
out
test
(bad)
test
imul
icebp
test
imul
fsub
out
mov
sbb
loopne
mov
fs
les
stos
push
mov
fwait
mov
daa
xor
ffreep
addr16
push
gs
xchg
sar
jecxz
jmp
jmp
fcom
dec
push
pop
pop
bnd
or
inc
imul
add
ror
shr
movs
je
mov
loopne
retf
xor
dec
inc
adc
inc
pop
loope
sub
add
syscall
mov
cwde
jb
fidiv
push
in
jecxz
dec
jnp
add
pop
cmc
push
and
sbb
dec
dec
lds
push
ret
iret
push
fdiv
mov
add
mov
aam
and
sub
or
retf
shr
(bad)
or
inc
xchg
loope
dec
in
loope
push
xchg
push
jp
movs
ficomp
mov
adc
stos
xor
xchg
xor
imul
ins
call
pop
xlat
and
outs
fsubrp
gs
adc
xchg
push
dec
cmp
cmps
adc
or
jnp
pop
ja
cmps
das
ja
lahf
retf
xchg
cmp
and
inc
pusha
and
rcr
rcr
cmc
cdq
xor
adc
cmp
xor
icebp
xor
jae
je
pusha
ds
(bad)
push
aad
test
inc
xor
lea
push
dec
push
outs
jge
mov
sub
ja
jg
idiv
(bad)
xchg
sub
call
mov
xchg
aaa
(bad)
or
push
cli
cdq
pop
fidivr
cmps
ret
nop
sbb
js
lds
(bad)
ficomp
sbb
out
and
outs
out
scas
jle
retf
retf
dec
iret
ss
mov
dec
push
cli
sbb
add
mov
jb
int3
jae
pop
push
jnp
xor
xor
mov
mov
arpl
hlt
sar
mov
pop
dec
push
iret
and
mov
push
icebp
idiv
jecxz
adc
stc
jo
pusha
adc
adc
push
retf
push
sub
jmp
sub
mov
pop
shl
aad
pop
xor
mov
dec
adc
lods
(bad)
movs
inc
mov
pop
fsub
pusha
mov
(bad)
les
pusha
sbb
repz
shr
pop
icebp
imul
mov
cmp
and
and
dec
dec
push
and
jnp
push
mov
xchg
arpl
das
cmp
mov
rol
push
mov
inc
lods
xor
jns
iret
push
cmp
mov
fsubr
mov
mov
sbb
retf
push
mov
pop
fiadd
cmc
and
inc
xor
iret
loope
or
xchg
inc
fucomip
push
dec
pop
push
mov
das
add
into
dec
xchg
mov
bound
lds
jb
sub
sub
cmp
pop
je
jecxz
mov
fidivr
leave
push
rcl
(bad)
cmc
ror
jae
jp
in
(bad)
ret
call
jne
das
cmp
test
cmps
jmp
mov
mov
sub
inc
sets
push
cmps
adc
das
fdiv
push
jno
mov
hlt
aas
popf
rcl
xor
jmp
add
xchg
adc
mov
mov
xor
fwait
push
dec
push
or
int3
sbb
pop
jne
jmp
popf
jo
pop
iret
push
push
inc
mov
add
push
xor
jnp
sahf
pop
mov
mov
lods
sbb
xor
mov
push
(bad)
and
inc
push
enter
sub
and
fcom
push
nop
mov
xchg
mov
push
(bad)
(bad)
inc
xor
push
fldl2t
sbb
test
retf
std
loopne
xor
xor
jmp
and
clc
jb
nop
cmp
mov
out
adc
dec
sbb
int3
pop
mov
outs
in
or
add
fcom
xchg
inc
sti
sti
or
dec
test
inc
es
jmp
cmc
push
sbb
push
daa
lock
movs
xor
jg
inc
nop
xchg
sub
adc
fimul
popf
ins
ret
xor
pop
sbb
sbb
fidiv
push
and
pop
xlat
jg
mov
pop
fs
hlt
in
(bad)
pusha
mov
jmp
(bad)
or
pushf
inc
dec
int3
popa
in
sti
pop
aas
in
mov
nop
inc
clc
add
arpl
lods
dec
push
jmp
sar
cmp
movs
mov
jg
add
xor
test
aaa
jo
sbb
pop
stos
pushf
(bad)
jecxz
sbb
mov
xor
xor
xchg
les
and
clc
fistp
inc
fucomi
cwde
cli
pop
(bad)
out
aad
faddp
mov
neg
imul
mov
xor
cld
dec
in
popf
aam
test
push
inc
stos
mov
icebp
out
arpl
clc
repnz
pop
ret
dec
loop
inc
nop
xchg
xor
mov
js
stc
sub
mov
or
cmp
popf
fiadd
and
ficom
mov
or
lock
sbb
outs
in
stos
sbb
test
arpl
imul
jecxz
inc
or
(bad)
or
sbb
inc
hlt
xor
leave
mov
(bad)
rcl
add
push
stos
jno
and
retf
xchg
ins
lea
dec
fldcw
addr16
pop
movs
retf
loop
(bad)
xchg
les
fwait
add
xchg
jp
inc
inc
mov
adc
or
js
fsub
xor
cmp
(bad)
inc
out
mov
mov
pop
pop
mov
(bad)
xor
pop
stc
mov
pop
cmp
movs
sahf
sub
mov
loope
mov
out
imul
ds
cs
mov
mov
cmps
mov
retf
aas
fcmovne
hlt
cmp
fistp
cwde
lods
xor
(bad)
loopne
inc
inc
dec
inc
ss
pop
add
fisttp
repz
lock
pop
lods
idiv
aad
out
xchg
mov
push
xlat
jo
push
adc
test
xor
sbb
ret
shl
dec
out
sub
int3
mov
ds
clc
mov
aas
scas
mov
loopne
repz
out
xchg
cmp
jnp
and
add
inc
push
jmp
jns
adc
fiadd
lods
pandn
jo
dec
cmp
mov
out
sbb
dec
ret
xor
(bad)
mov
(bad)
jecxz
fs
scas
cmp
test
mov
pop
adc
mov
mov
pop
leave
pushf
in
rol
pop
inc
imul
jge
sbb
imul
bound
push
and
mov
push
mov
fmul
and
or
lahf
sub
popa
push
imul
es
dec
mov
call
mov
(bad)
ja
out
pop
pop
lods
or
std
call
adc
test
mov
dec
adc
mov
push
retf
ret
inc
mov
in
out
jg
iret
adc
out
scas
aam
xlat
pop
shl
push
lahf
clc
cdq
or
sub
fiadd
rcl
mov
pop
mov
push
fwait
pop
and
adc
dec
inc
scas
inc
mov
mov
mov
push
cmp
(bad)
xchg
out
dec
xchg
loope
and
jmp
loope
imul
ss
sbb
or
leave
inc
sbb
mov
xor
mov
scas
bound
addr16
push
int3
xchg
and
stos
mov
lods
aaa
movs
in
pushf
pop
jb
pop
jo
add
mov
int3
cmps
int3
shl
fmul
xchg
pop
lock
out
test
test
(bad)
aaa
jg
mov
push
dec
inc
add
adc
sbb
mov
cmps
into
mov
bound
mov
pop
clc
addr16
jge
and
(bad)
aad
jnp
dec
jnp
add
mov
retf
xlat
stos
cmp
stos
inc
or
in
js
mov
popf
sar
shl
fiadd
cs
dec
pop
dec
sbb
push
pop
neg
lds
or
push
and
bound
mov
repz
adc
and
inc
div
push
scas
or
pusha
cli
fs
xchg
sub
pop
out
ja
enter
aaa
sbb
test
mov
or
icebp
push
jecxz
sbb
popa
mov
aam
pop
call
nop
movs
jl
enter
fstp
and
mov
out
xor
and
sbb
fwait
inc
test
dec
retf
cmp
or
push
add
pop
div
stos
repz
mov
(bad)
push
or
in
mov
(bad)
pusha
test
cmp
ret
mov
jmp
mov
popf
or
sbb
pop
pop
pop
push
ret
movs
or
xchg
lea
push
sar
loopne
and
enter
je
jle
ja
mov
gs
jmp
or
js
sub
mov
test
sub
cmp
push
sbb
out
pop
je
fsub
(bad)
(bad)
xor
cmp
das
jmp
dec
jns
shr
jp
adc
out
or
xchg
mov
lea
xor
out
into
or
fsub
int3
cli
adc
mov
mov
leave
shl
dec
mov
add
hlt
dec
ins
pop
and
and
sub
(bad)
mov
mov
mul
enter
mov
scas
inc
jne
dec
mov
xlat
adc
mov
inc
dec
xchg
popa
aaa
bound
add
lods
bound
popf
mov
push
sbb
sub
xchg
jne
pop
push
xor
test
xchg
jae
outs
push
mov
clc
(bad)
mov
not
or
dec
out
sub
push
mov
pop
je
pop
pushf
lea
push
jnp
xor
call
adc
adc
sub
push
mov
xchg
mov
loop
out
push
rcl
ss
pop
add
sub
movs
in
pop
leave
gs
mov
imul
inc
fimul
xchg
cmp
rol
sbb
stos
push
push
push
fcom
xchg
cld
cmps
or
push
sub
pop
xor
bndldx
test
sbb
dec
repz
les
push
shl
aam
fisttp
bound
cmc
movs
mov
test
das
(bad)
jns
(bad)
push
inc
dec
(bad)
jb
ins
fbstp
fldenv
sti
mov
in
add
in
push
lods
and
cdq
outs
aaa
pop
inc
out
jge
inc
adc
and
or
movs
sti
xor
lods
pop
jl
pop
bound
mov
sub
jo
loopne
out
xor
lea
pop
sti
(bad)
hlt
repnz
mov
das
mov
and
pop
ja
jne
fdiv
scas
ret
stos
(bad)
pop
sbb
mov
lea
arpl
cwde
sub
push
int3
iret
mov
jb
push
outs
(bad)
std
fist
icebp
cmc
iret
into
dec
lahf
sti
lahf
mov
and
xlat
jbe
fadd
xchg
clc
rol
test
add
cli
repz
rcl
pop
jnp
lahf
movs
leave
popf
add
nop
imul
pop
das
repnz
inc
xor
push
mov
aaa
xchg
push
push
(bad)
jmp
push
lea
add
mov
mov
ret
ror
mov
inc
daa
or
jno
xor
es
out
xchg
mov
mov
pop
xlat
dec
(bad)
jo
xchg
or
mov
aas
mov
repnz
or
dec
adc
out
movs
jo
daa
stos
pop
xor
lahf
jb
jns
out
inc
dec
adc
push
(bad)
inc
push
(bad)
cld
xlat
ja
mov
pop
jl
dec
stos
dec
or
out
lods
or
in
push
xchg
dec
arpl
aas
push
dec
sbb
dec
fisub
adc
sub
test
mov
dec
jp
enter
call
adc
jmp
ftst
out
retf
inc
jge
gs
mov
(bad)
in
movs
xchg
cmps
inc
push
cmp
dec
sub
xor
shl
mov
mov
pop
shr
inc
pop
aas
jbe
pop
or
shl
stc
jnp
fmul
loope
sbb
mov
in
inc
add
sub
(bad)
(bad)
fbld
icebp
and
mov
ror
jl
add
ja
mov
es
test
mov
arpl
shl
cmp
xchg
inc
pop
pop
dec
xchg
(bad)
(bad)
sub
loopne
mov
dec
adc
movs
sti
and
sbb
pop
mov
inc
xor
outs
loopne
and
add
fimul
sahf
ret
cdq
xor
mov
out
cmps
iret
push
or
sub
pop
xchg
push
jno
push
addr16
and
mov
out
movs
mov
sub
ss
inc
or
mov
inc
mov
mov
and
(bad)
mov
sub
pop
xor
test
or
hlt
push
mov
sub
pop
push
cdq
scas
and
imul
scas
sub
and
mov
sar
push
lods
loopne
mov
jmp
mov
pusha
icebp
inc
sbb
aas
jae
jno
add
mov
inc
add
pop
add
(bad)
mov
inc
xor
aam
add
pop
test
dec
cmp
fneni(8087
xor
ins
jge
push
sub
xor
inc
and
cmp
ror
dec
or
fwait
xor
inc
ror
sbb
neg
xor
aam
js
add
inc
jo
dec
mov
js
or
cmps
in
or
popf
xchg
adc
jo
(bad)
daa
mov
or
lods
xor
xor
dec
mov
mov
xchg
shr
lahf
call
sbb
xchg
inc
dec
inc
sbb
sbb
mov
ror
mov
pop
out
int3
and
movs
add
int
(bad)
gs
pop
jo
fadd
sub
sub
jb
push
sub
bound
in
jle
sbb
or
addr16
daa
sahf
(bad)
pop
cmp
sub
(bad)
fwait
retf
shl
cmp
call
add
adc
out
sub
xor
mov
pop
cmp
lahf
stos
mov
xor
adc
lods
inc
int3
dec
fnstcw
(bad)
jecxz
add
repnz
into
test
aas
pop
sub
loopne
jo
fs
aam
cmp
fs
cmps
xlat
sub
imul
inc
mov
fimul
mov
out
adc
pop
movs
sub
push
aad
fstp
(bad)
outs
imul
in
add
and
add
stos
sub
sub
push
pop
gs
dec
loop
fsubr
xor
test
xchg
aaa
mov
mov
jle
xchg
cmp
pop
clc
loope
rcl
arpl
and
and
add
sbb
(bad)
rol
mov
pop
retf
mov
push
xchg
retf
jmp
add
jbe
lds
jmp
push
js
xor
push
push
les
jl
push
and
mov
dec
std
cli
shl
lahf
and
and
mov
(bad)
mov
mov
ror
dec
loop
and
cmp
xchg
in
push
cmp
jno
vcmpsd
push
and
xchg
pushf
in
adc
sbb
daa
sbb
dec
addr16
lds
push
mov
adc
dec
sub
mov
ja
ret
into
(bad)
(bad)
(bad)
inc
shr
hlt
and
pop
pop
pop
sub
mov
rcl
inc
cmp
pop
ss
rcl
pop
cmps
cmp
cmp
mov
je
or
pusha
(bad)
lock
(bad)
mov
mov
push
dec
pop
mov
and
mov
dec
stos
out
mov
dec
inc
adc
cmp
popf
or
pop
(bad)
mov
dec
mov
sbb
xchg
ror
imul
(bad)
into
(bad)
(bad)
fwait
and
push
(bad)
xor
xor
mov
enter
inc
pop
data16
push
loope
push
sbb
jnp
xor
inc
pop
icebp
inc
cdq
loop
mov
and
cmp
scas
xor
add
rcl
sbb
and
xor
cld
or
xlat
in
int
jmp
(bad)
rcr
push
jae
jne
out
movs
or
xchg
call
popf
and
popa
mov
outs
and
mov
mov
dec
mov
cmp
sti
or
and
and
stos
cli
imul
push
loope
lods
call
and
and
fmul
xchg
push
in
or
pop
mov
inc
jmp
test
rol
(bad)
dec
adc
je
mov
or
add
mov
push
shl
inc
loop
inc
cmps
inc
retf
inc
fisttp
push
pop
xor
dec
push
ja
std
retf
adc
loope
std
or
sbb
sub
rcl
hlt
adc
cmp
pop
add
mov
and
pop
sbb
and
(bad)
sti
jg
mov
cwde
adc
das
push
adc
jns
mov
xchg
pinsrw
(bad)
fdivr
stc
shr
mov
pop
pop
mov
dec
dec
dec
ret
or
push
enter
test
mov
xchg
push
aas
das
push
xchg
sub
cmp
add
ret
or
sub
cmp
repz
mov
adc
dec
lock
es
test
pop
add
dec
jmp
rcl
aam
jno
icebp
jnp
div
outs
ins
cs
sub
test
dec
int3
adc
cld
aaa
jle
fwait
adc
push
add
pop
daa
(bad)
int
inc
pop
(bad)
mov
nop
push
jne
pop
call
sbb
xor
adc
dec
xchg
push
mov
cmp
inc
addr16
mov
push
iret
xchg
fwait
sbb
sub
loope
adc
push
sar
dec
jg
retf
mov
cmps
std
rol
int3
and
fld
mul
loope
jge
out
and
inc
fs
xchg
add
imul
loope
pop
add
and
push
hlt
cmp
jns
lods
mov
xchg
fld
fsub
xchg
fistp
or
lea
dec
cmp
hlt
jle
inc
or
mov
loop
adc
jb
jmp
xchg
retf
sub
das
inc
sub
(bad)
sub
outs
sub
cmps
cmp
mov
cmp
movlps
popa
dec
aam
inc
pop
mov
xchg
pop
inc
sahf
or
mov
mov
fist
mov
mov
addr16
inc
(bad)
inc
add
inc
push
cmp
sti
dec
xor
jecxz
mov
xlat
mov
add
adc
jmp
jg
sub
repz
loop
add
(bad)
cwde
sub
(bad)
(bad)
jne
imul
or
lds
std
std
mov
and
je
mov
test
retf
add
mov
inc
cmp
in
pop
sub
ja
scas
jp
jno
mov
adc
pop
out
cdq
inc
dec
fmulp
dec
or
xchg
data16
movs
cmp
cwde
and
imul
or
sbb
xlat
int3
cmp
jns
shr
inc
pushf
push
adc
pop
imul
inc
out
pop
jg
ret
xor
jmp
and
cmp
xchg
xor
mov
fmul
xor
ror
cmp
and
xchg
out
mov
js
ja
outs
push
jecxz
sahf
sbb
outs
shl
xor
add
dec
adc
daa
cmp
inc
xor
lods
xor
int
fisttp
xchg
dec
div
add
fs
xchg
test
xor
stc
out
xchg
(bad)
ins
js
xor
or
and
inc
mov
adc
xchg
ja
iret
scas
add
mov
pop
pop
dec
cli
adc
ins
fstp
jle
neg
pop
inc
xchg
xor
mov
push
test
gs
mov
fwait
(bad)
ror
mov
mov
pop
loop
pop
mov
add
mov
or
fldenv
jmp
movs
push
inc
cmp
sbb
mov
mov
out
outs
sub
sub
or
pop
(bad)
mov
jmp
retf
gs
mov
mov
xchg
fidiv
mov
or
and
sar
outs
ret
js
mov
ret
(bad)
ss
add
mov
fld
add
loopne
jmp
sbb
daa
push
mov
sub
dec
lahf
sub
hlt
jmp
mov
aas
sub
imul
mov
xor
in
test
fdiv
nop
xlat
or
inc
sbb
xchg
pop
inc
jecxz
dec
push
ins
xchg
jg
js
adc
imul
cli
lods
mov
xchg
int
(bad)
push
addr16
daa
rcl
lods
popa
inc
enter
xor
push
fwait
popf
pop
fs
aam
mov
in
jmp
jo
shl
ins
sar
call
dec
(bad)
xor
xchg
mov
and
dec
lea
pop
xor
ret
mov
lock
xor
cld
add
or
or
jmp
sbb
fst
pop
cmp
nop
dec
pop
cs
or
mov
mov
retf
fcom
push
retf
cmp
mov
jmp
retf
imul
sbb
ret
clc
repnz
jnp
ins
push
(bad)
sti
push
ja
jecxz
jmp
push
jns
adc
sub
jns
loopne
inc
inc
mov
ins
mov
mov
add
rcr
loope
cmps
pop
add
(bad)
pop
outs
mov
(bad)
or
inc
lock
inc
jecxz
popa
push
pop
std
popf
test
jno
fisttp
(bad)
in
pop
lods
and
mov
sub
popa
push
xlat
cmps
mov
sbb
imul
out
sbb
jl
push
dec
daa
pop
adc
xor
sbb
dec
mov
aaa
int3
dec
retf
es
pop
jb
inc
mov
jnp
adc
fcmovnu
mov
jmp
sub
pusha
outs
push
fcomip
into
jno
pop
pusha
dec
push
add
cs
jns
cmp
(bad)
hlt
mov
mov
push
cmp
data16
aam
xor
mov
shl
fidivr
or
xor
es
dec
or
xchg
and
sahf
daa
push
jge
stos
(bad)
mov
push
mov
push
vfnmsub132ps
mov
sti
jo
jmp
lds
mov
xchg
xor
jae
cmp
mov
neg
mov
cmps
jl
xlat
xor
fst
add
leave
daa
push
cwde
xchg
aaa
popa
pop
rol
and
pop
loopne
dec
nop
push
cmp
rol
push
std
or
pop
xchg
add
lods
push
mov
pop
(bad)
cli
inc
adc
sub
cwde
push
paddusw
xchg
shl
in
ds
cmp
sub
aam
mov
ins
je
xchg
push
and
xchg
fmul
mov
arpl
dec
jp
sti
jge
(bad)
lods
jge
imul
lea
aas
or
jg
(bad)
shl
sar
leave
ret
test
aam
pop
lods
stc
cmps
sub
and
retf
cs
les
mov
adc
js
xlat
push
test
je
in
or
cmc
cmps
add
in
and
sti
push
mov
xchg
cmps
je
in
adc
mov
leave
xor
int
stos
stos
xor
xchg
fnstsw
jno
dec
mov
sbb
fcom
adc
ror
cwde
xor
push
jle
test
in
gs
sbb
pop
sub
cmp
xchg
imul
stos
icebp
arpl
pop
jb
mov
cld
fcomp
sub
test
dec
into
rcr
cmp
popf
inc
xor
cmp
call
dec
aas
movs
add
pop
inc
adc
push
xlat
or
imul
xchg
dec
inc
adc
jae
dec
dec
ja
push
fistp
pop
push
addr16
jno
(bad)
dec
sub
push
mov
scas
add
sub
fdiv
out
mov
sbb
ja
inc
repz
popa
mov
cmp
lds
adc
jmp
shr
stos
shl
mov
aad
jae
adc
pop
xor
dec
inc
pop
add
(bad)
push
loopne
jge
gs
jae
fadd
pop
xchg
movd
cmc
mov
daa
push
je
xchg
or
pop
sub
in
mov
repz
fist
jle
pushf
push
sub
xchg
mov
dec
and
push
ficom
inc
sbb
hlt
adc
cld
daa
pushf
call
mov
xor
in
mov
movs
or
inc
or
mov
push
popf
dec
pop
das
popf
xor
les
mov
in
std
cmp
sub
xchg
nop
call
arpl
pop
xchg
and
in
push
lds
mov
sub
dec
adc
cli
ins
xor
loopne
jae
clc
lds
add
enter
retf
or
(bad)
mov
or
(bad)
int3
mov
mov
or
jecxz
nop
xor
sub
jmp
mov
movs
xchg
push
jns
mov
fcmovu
dec
(bad)
out
inc
das
sub
sbb
je
cmp
sub
add
jl
mov
adc
push
mov
in
test
in
scas
adc
cwde
dec
jecxz
or
(bad)
sbb
shl
xchg
daa
movs
fwait
cmp
(bad)
rep
cs
and
inc
pusha
(bad)
retf
mov
sub
push
mov
popa
cmps
sub
add
dec
push
and
shl
xchg
inc
call
add
sbb
pop
out
std
cmp
push
xor
mov
icebp
rol
popf
daa
retf
adc
lds
ins
mov
ds
pop
out
mov
arpl
stc
(bad)
icebp
adc
sbb
push
ret
(bad)
xchg
ja
jae
xor
imul
add
jp
pushf
mov
inc
sub
pop
add
repz
popf
lea
popf
jle
and
scas
sub
dec
sbb
or
mov
pop
imul
sub
mov
popa
xchg
int3
stos
and
(bad)
enter
pop
fmul
in
pop
mov
mov
add
dec
lahf
movs
sub
adc
mov
sbb
xor
mov
sar
jnp
jnp
or
(bad)
jmp
rcl
retf
ret
gs
inc
fnstenv
aad
sbb
stos
fs
icebp
dec
jecxz
push
cs
ins
xchg
adc
jge
jns
push
(bad)
sbb
repz
xchg
dec
mov
fadd
fimul
in
not
and
test
inc
sub
ss
mov
sbb
cld
lock
loopne
lock
and
adc
pop
jae
stos
add
mov
jecxz
mov
xchg
test
mov
(bad)
clc
dec
mov
scas
movs
shl
scas
es
adc
stc
adc
or
mov
movs
xor
shr
scas
(bad)
xchg
dec
shr
jp
rcr
aaa
dec
mov
sub
or
int
test
dec
(bad)
hlt
ins
in
adc
fild
jg
repz
scas
mov
or
mov
test
inc
stc
test
push
ja
jl
call
or
add
jnp
dec
and
rcl
popf
pop
and
addr16
mov
push
arpl
push
in
jg
add
push
or
cmp
repz
bound
sub
fsubrp
add
pusha
jle
jg
add
into
adc
cmps
(bad)
ins
xor
dec
xor
jbe
aaa
pop
adc
das
add
jge
jmp
xlat
dec
mov
xor
repz
xchg
add
jae
pop
mul
mov
dec
jg
push
jp
ins
test
xchg
(bad)
xchg
arpl
ss
adc
and
pop
xchg
mov
jbe
xchg
mov
scas
scas
add
jmp
adc
outs
fistp
jns
pop
pop
out
inc
cmps
nop
jecxz
dec
fnsave
pop
add
and
or
xor
mov
adc
movs
mov
sti
mov
pop
sbb
sbb
loop
xlat
outs
pushf
ss
rcr
rcl
int3
iret
(bad)
xchg
(bad)
stc
mov
repz
aam
cmp
popa
xor
inc
sub
inc
retf
sbb
jo
loop
bound
push
cmp
rol
fadd
dec
mov
je
and
add
out
push
test
(bad)
jge
mov
aaa
sbb
xchg
dec
cmp
mov
jl
ja
mov
das
sbb
out
dec
imul
inc
cmp
ja
pusha
sbb
jge
out
(bad)
adc
sbb
dec
mov
dec
ins
xchg
cmp
in
xchg
std
mov
and
leave
iret
bound
movs
jae
ror
mov
mov
jmp
arpl
ins
faddp
sti
rcl
out
sbb
pop
add
imul
jno
inc
xchg
mov
(bad)
stos
sbb
mov
cmc
lock
in
or
xor
mov
test
jl
add
adc
fadd
mov
pop
pop
xchg
std
pop
(bad)
les
ss
inc
cld
loop
(bad)
and
mov
rol
loope
rcr
loopne
aas
push
cmps
ins
adc
adc
cmps
jmp
fisub
and
mov
mov
icebp
out
dec
add
jo
inc
(bad)
sbb
dec
aas
out
mov
inc
sbb
mov
sbb
xchg
retf
stos
in
mov
hlt
sub
sbb
push
inc
push
(bad)
out
lahf
loop
fstp
dec
dec
sbb
xor
(bad)
cli
std
ja
ror
sbb
jno
mov
push
push
bound
popf
inc
ins
ret
jno
and
sub
sub
cmps
(bad)
rcr
xor
mov
pop
dec
inc
icebp
cs
mov
lds
ror
popf
cmp
mov
push
add
xor
xor
push
or
pop
mov
add
add
sbb
rcl
(bad)
or
mov
xchg
cmp
push
mov
xor
mov
fs
xchg
out
nop
stos
push
mov
xchg
xchg
xor
data16
dec
fucom
das
pop
push
dec
test
add
mov
nop
in
lods
jmp
rcl
push
(bad)
in
add
std
out
je
xlat
jno
cmp
fwait
js
adc
jmp
jecxz
scas
add
mov
mov
sub
mov
ror
test
mov
je
sub
scas
add
mov
lock
mov
pop
dec
pushf
cmps
movs
nop
mov
outs
neg
repz
out
pop
test
pop
sbb
dec
lods
fcomp
out
(bad)
mov
jno
mov
(bad)
fdivr
xchg
int3
adc
push
dec
mov
cs
add
jp
sbb
or
imul
sub
das
int
jae
cmp
lahf
icebp
mov
cmps
rol
pop
je
jmp
outs
add
lea
push
shl
ins
add
cmp
or
(bad)
shr
imul
adc
cmp
popa
push
(bad)
add
pop
dec
int
test
out
sub
sub
dec
jno
pop
cmc
aad
imul
(bad)
mov
lahf
in
in
jp
mov
cmp
mov
add
or
lods
mov
or
adc
and
les
sub
imul
jle
std
jge
call
adc
sub
or
sub
xchg
into
lahf
dec
mov
push
inc
js
out
jne
dec
shr
sbb
pop
sbb
cmp
mov
(bad)
outs
test
mov
cmc
xchg
in
je
mov
mov
and
aaa
mov
fld
sub
mov
push
adc
repz
popf
retf
inc
mov
jl
neg
push
shl
ins
jecxz
and
fcomip
push
in
popa
add
dec
add
pusha
mov
pop
vfrczss
and
shl
inc
fcom
inc
call
or
das
add
pop
outs
loope
dec
xor
outs
dec
mov
int3
mov
scas
xchg
test
iret
div
mov
sar
jmp
add
inc
dec
test
es
rcr
push
mov
jmp
xor
clc
leave
push
xor
scas
or
repnz
pop
sub
sub
sahf
xchg
add
sbb
lahf
outs
jmp
ret
sub
retf
pop
xor
mov
pushf
inc
retf
and
das
stos
push
and
and
popa
pop
neg
jo
pavgw
mov
(bad)
sub
loopne
mov
stos
mov
push
mov
xor
movs
daa
cmc
in
jno
ror
sbb
stos
pop
or
in
mov
lock
xchg
jmp
adc
mov
js
enter
xlat
cmp
rcr
inc
cmp
rcr
jecxz
adc
fwait
sbb
mov
cmps
cmp
and
mov
leave
cld
aas
xchg
mov
and
add
lds
adc
out
pop
or
add
sbb
jecxz
lock
dec
aad
xchg
jecxz
mov
mov
fsub
mov
scas
in
mov
push
xor
jnp
push
jmp
mov
(bad)
sbb
jbe
cmp
pop
cld
icebp
mov
jg
mov
sub
push
loop
sub
add
shl
add
lock
cmps
popa
mov
(bad)
aad
imul
mov
pop
mov
mov
cmp
xlat
(bad)
jns
loop
dec
es
shr
or
push
cmps
sahf
shl
inc
inc
(bad)
mov
test
add
inc
inc
xchg
cmp
pop
sub
js
push
dec
jae
add
test
fidiv
clc
ja
fisubr
push
and
adc
push
shr
pop
inc
push
xchg
(bad)
mov
jnp
mov
nop
aaa
xchg
inc
jp
mov
(bad)
push
les
mov
pop
pop
or
sti
or
adc
(bad)
add
repz
ja
xor
or
jp
lds
stos
nop
jge
not
mov
(bad)
pop
scas
adc
push
jmp
pop
push
jmp
int3
loope
or
loop
retf
aad
or
inc
push
je
mov
cmp
mov
mov
int3
mov
in
xchg
cmp
push
adc
pushf
or
leave
ret
div
mul
mov
xor
ficom
jp
sbb
ja
in
adc
add
ds
cmps
cli
lods
jg
fs
push
xchg
sub
fistp
mov
clc
test
mov
repz
mov
jno
jne
mov
pop
mov
mov
and
ror
add
outs
adc
or
sbb
jmp
jl
mov
enter
xor
in
and
mov
shl
into
mov
nop
aas
scas
(bad)
(bad)
push
adc
xchg
push
jns
inc
and
pop
imul
jmp
sub
add
aas
sar
xchg
mov
sbb
fstp
dec
dec
mov
xor
adc
cmp
xchg
add
in
mov
sti
(bad)
mov
push
test
rol
ds
jecxz
dec
pop
lods
mov
push
popf
push
adc
(bad)
popf
mov
mov
xchg
fistp
jecxz
xchg
dec
icebp
cs
dec
mov
cmp
loop
inc
(bad)
push
sub
lea
jbe
cmp
cmp
jno
sbb
sub
out
int
call
ficom
jnp
cmp
xchg
rcl
fdiv
jne
push
add
mov
xlat
pop
stos
scas
pop
scas
(bad)
or
mov
fstp
loopne
xor
aas
adc
mov
imul
mov
mov
add
mov
out
push
iret
clc
dec
aaa
dec
pop
mov
mov
imul
cld
push
push
stos
pavgb
loopne
mov
scas
in
xchg
push
and
xor
cmp
fist
jne
call
mov
jmp
sahf
push
rol
xor
jb
scas
or
mov
shl
and
mov
or
mov
jnp
pop
outs
mov
xchg
rcl
and
lods
ffree
and
in
das
lock
xor
mov
or
cmc
push
(bad)
cld
jbe
xor
adc
fsub
xor
add
imul
out
cmp
push
retf
mov
pop
mov
push
inc
dec
in
push
cld
test
dec
arpl
imul
push
mov
ss
or
imul
or
xchg
push
mov
lea
cwde
sbb
(bad)
repz
in
xlat
add
mov
dec
fcmovnbe
ds
dec
std
mov
xor
mov
xor
pop
add
jns
rol
add
leave
adc
lea
mov
enter
and
sub
imul
ins
call
ds
das
addr16
(bad)
rcl
stos
xchg
aaa
sti
push
push
or
cmps
arpl
call
cwde
mov
or
stos
lds
lods
ja
sub
mov
retf
push
sub
dec
std
push
scas
sub
loop
sub
mov
adc
imul
call
iret
xchg
inc
pop
cmp
add
dec
pop
sbb
dec
out
clc
loope
fist
jae
mov
xor
jmp
cmps
fisttp
mov
add
sub
dec
pop
cdq
and
or
sub
stc
xlat
mov
icebp
sahf
hlt
in
pusha
repz
cmp
outs
ds
and
jae
shl
lods
loop
or
and
fwait
aad
xchg
xchg
push
jae
rcr
fisttp
cmp
push
inc
and
xchg
(bad)
xor
jbe
lds
push
bswap
out
loop
and
mov
jle
lahf
(bad)
iret
adc
sbb
stos
retf
out
jns
pop
add
jecxz
lahf
sbb
fs
dec
movs
jnp
sar
xchg
arpl
mov
out
dec
iret
jmp
xchg
test
mov
sti
mov
imul
dec
addr16
xchg
xor
sti
pop
pop
call
nop
sbb
outs
jmp
arpl
shl
jmp
add
into
hlt
test
lock
inc
cs
push
mov
iret
push
cmps
cli
pop
ror
dec
adc
dec
and
adc
inc
xchg
jl
cdq
pushf
imul
push
lods
fst
mov
fadd
repz
mov
gs
daa
sub
or
sub
je
jnp
sub
jmp
mov
dec
mov
mov
rol
in
and
hlt
fcom
mov
pop
in
push
xchg
dec
cmps
cmp
ret
bound
in
rol
push
pop
pop
pop
sub
jecxz
mov
pop
mov
mov
(bad)
xchg
xchg
and
(bad)
add
or
mov
aaa
(bad)
cmp
push
pop
pop
ins
xor
dec
popa
ret
xchg
xor
xor
sbb
mov
rcl
cli
jno
icebp
loopne
sbb
sti
dec
enter
lea
imul
jmp
mov
lods
xchg
pop
mov
out
fdivr
pop
mov
clc
fmul
inc
fnstcw
adc
cdq
push
push
lds
in
(bad)
lds
test
scas
lods
or
sbb
xlat
dec
jp
add
icebp
adc
call
(bad)
aam
psadbw
scas
shr
sahf
repnz
jl
fistp
out
lock
sub
push
add
inc
int
inc
add
jmp
dec
xchg
iret
int
xchg
fld
stc
pop
sbb
repnz
dec
jge
hlt
shr
mov
jno
pop
mov
push
push
fsubr
sbb
dec
mov
out
ja
aam
(bad)
fist
test
sbb
mov
dec
push
aam
ret
cmps
aaa
lahf
jl
xor
mov
lods
mov
dec
sbb
add
mov
repz
xor
test
xor
or
add
push
xor
popa
cmp
ror
and
ins
addr16
mov
pop
je
xlat
xchg
or
hlt
mov
xor
jb
pop
adc
push
fild
dec
cs
scas
rol
dec
mov
dec
adc
or
dec
xor
push
jnp
mov
adc
iret
xchg
aas
inc
int
sahf
sbb
mov
fimul
xchg
jg
sub
jp
pop
xchg
push
jbe
out
das
sub
jl
(bad)
jns
les
xchg
add
push
jb
jg
adc
pop
pop
add
popa
fdiv
xchg
(bad)
repnz
loop
mov
add
add
and
pop
loope
sbb
inc
ja
jmp
ret
das
jo
add
dec
and
inc
xchg
and
sar
mov
sbb
or
ja
adc
cmp
inc
lar
sbb
jns
xor
mov
dec
xor
adc
data16
mov
retf
mov
iret
loopne
sub
or
mov
jge
je
push
xlat
retf
add
cmps
mov
pop
addr16
ror
push
mov
inc
pop
pop
adc
stc
(bad)
jmp
in
add
inc
adc
mov
pushf
out
cmp
call
xchg
cmp
or
jns
jno
iret
dec
push
cs
(bad)
retf
add
imul
jle
cmp
and
push
int
push
sahf
out
aam
mov
leave
dec
dec
inc
sbb
(bad)
in
and
aas
sub
dec
addr16
adc
lods
jne
sbb
pop
rol
(bad)
cmps
mov
sbb
clc
and
ret
fcom
adc
xor
sub
imul
lock
lods
cmp
stos
pop
xor
cmp
(bad)
es
pop
adc
or
call
fmul
dec
xchg
jmp
lods
dec
arpl
rcl
inc
outs
adc
jb
jecxz
mov
imul
adc
out
pop
retf
fsubr
es
ret
mov
jns
sub
popf
aaa
gs
popa
and
vpsubq
add
mov
adc
into
cmps
sahf
cmp
das
pushf
jmp
add
fst
ins
mov
jb
xor
and
not
clc
int
arpl
add
icebp
aad
jg
in
sti
scas
clc
and
push
mov
inc
jl
cld
adc
pop
add
jp
pop
mov
sbb
cli
shl
sub
xchg
leave
icebp
les
outs
sub
in
jge
sar
repz
sbb
xchg
fild
aam
or
scas
in
pop
xor
nop
je
loopne
cmp
push
cmp
aas
mov
aam
ins
cmp
fisttp
fld
push
inc
and
or
mov
jbe
mov
ds
cmc
sti
test
fld
inc
mov
enter
scas
mov
imul
mov
cmps
outs
js
mov
xchg
in
pop
pop
or
lds
sbb
call
sbb
fld
mov
xor
(bad)
jmp
add
movs
mov
cmps
xchg
lods
add
orps
cdq
mov
xchg
sub
enter
maxps
in
cmp
repz
add
sbb
ror
mov
mov
xor
push
xchg
mov
out
test
jo
mov
sub
jne
or
cmp
sub
inc
out
pusha
shl
mov
mov
cmp
mov
jbe
jge
fdivr
cmpxchg8b
pop
push
je
lods
jo
retf
cmp
(bad)
iret
hlt
aam
mov
push
ins
aad
inc
loope
add
ret
fcmovne
mov
in
sub
and
pop
mov
pusha
dec
lock
in
pop
aas
adc
outs
outs
call
out
xchg
pop
mov
mov
or
loope
jbe
lods
pop
xor
mov
loope
push
jnp
int3
mov
jge
dec
ins
test
cs
dec
outs
sub
sub
ret
jno
jl
lods
push
dec
adc
minps
daa
jmp
ss
mov
cmps
jge
xor
stc
mov
sbb
xor
jmp
shl
test
addr16
xor
xor
repz
out
jp
dec
(bad)
js
in
adc
sbb
pushf
adc
dec
ret
out
(bad)
cmp
inc
les
fs
movs
test
call
retf
xchg
popa
fidiv
ss
iret
inc
je
adc
shl
neg
pop
add
call
push
pop
mov
mov
xor
jbe
ins
sbb
fdivr
mov
ins
test
cmp
and
push
cmp
or
or
adc
scas
mov
mov
hlt
lods
dec
iret
cwde
pop
ins
lock
(bad)
out
jne
push
in
or
aad
adc
inc
retf
and
out
dec
rol
std
les
push
(bad)
iret
jnp
lahf
sub
mov
inc
mov
popf
xor
call
mul
adc
and
xchg
cli
mov
and
add
jg
jne
andps
movs
jnp
out
shl
push
das
inc
int
repz
sub
dec
int
clc
xchg
mov
cwde
sbb
retf
sbb
xchg
ret
mov
add
mov
push
div
pop
jae
(bad)
aas
(bad)
adc
jg
pop
int3
mov
pusha
dec
dec
pusha
mov
cmc
inc
add
add
fbstp
jle
xchg
or
mov
hlt
mov
inc
or
int
outs
cs
repz
jae
(bad)
mov
ins
xchg
sti
xchg
jecxz
(bad)
bound
icebp
rep
scas
jecxz
adc
popa
and
aas
jl
mov
xchg
mov
jg
fistp
das
(bad)
mov
unpckhps
movs
lock
(bad)
ss
and
cmps
jmp
inc
inc
std
(bad)
mov
fs
popf
ins
mov
inc
retf
movs
mov
pop
cmps
pop
outs
sbb
cmp
jmp
daa
dec
stc
retf
add
push
xchg
jno
jne
xchg
sbb
(bad)
int3
les
ds
mov
jg
mov
jmp
sub
loopne
sbb
loopne
cli
mov
adc
cmp
shl
or
das
push
cmp
jle
loope
or
fld
dec
ins
push
cmp
retf
jae
outs
out
pop
mov
or
data16
adc
push
push
inc
xor
push
xor
adc
cdq
pop
xchg
sbb
cmp
cmc
in
xchg
(bad)
aas
loope
bound
stos
retf
sbb
int3
xchg
clc
icebp
in
sbb
sub
into
sbb
idiv
dec
sti
not
sahf
(bad)
cs
pop
loope
push
pop
and
dec
adc
xor
call
cld
nop
dec
mov
xchg
add
out
mov
pop
fs
add
pop
sub
adc
jl
dec
cmp
jns
into
scas
mov
(bad)
jmp
add
xor
ins
sahf
pop
mov
adc
sbb
sub
retf
cmp
mov
sub
jnp
pop
shl
xchg
xchg
scas
mov
mov
repnz
fsubr
mov
ret
(bad)
repnz
das
stos
xor
mov
or
sub
cli
mov
and
pop
dec
inc
outs
dec
mov
push
xchg
cwde
push
mov
cmps
test
leave
push
sar
cmps
pop
retf
leave
outs
sbb
adc
gs
mov
or
ror
nop
cmp
(bad)
adc
movs
mov
push
in
pop
sbb
sbb
adc
arpl
dec
sub
xor
sbb
add
cmp
fwait
shr
xchg
inc
jg
pop
inc
adc
mov
sbb
gs
test
hlt
push
fdiv
add
movs
push
inc
lock
pop
mov
push
adc
ror
pop
mov
int
call
pop
add
(bad)
ins
push
or
cmp
xchg
js
gs
push
mov
popf
mov
repz
mov
add
or
pop
mov
sahf
dec
mov
aad
fcmovnb
not
lock
fwait
cld
js
in
adc
sub
fs
push
enter
mov
mul
jnp
bound
xor
fs
jno
xchg
jmp
inc
sub
(bad)
inc
xchg
popa
out
sbb
and
inc
cmp
in
cmc
test
inc
xor
bndldx
jmp
add
in
(bad)
out
jmp
adc
mov
aad
sub
xchg
and
mov
mov
scas
mov
enter
jmp
imul
pop
sti
jp
xchg
in
lahf
inc
cmp
pop
xchg
cli
(bad)
jmp
div
push
push
push
dec
(bad)
test
clc
repz
mov
and
push
enter
fs
sub
add
jmp
iret
lea
cmp
imul
call
addr16
xchg
lock
dec
or
sub
inc
shr
aam
cdq
frndint
pop
xchg
jno
push
lods
add
out
loopne
xchg
sbb
mov
pop
mov
jo
lock
(bad)
pop
repz
addr16
lods
arpl
das
mov
or
jl
lock
cmp
push
mov
or
push
jle
lods
dec
sbb
or
int
add
loop
jl
xor
ins
jle
lods
ins
ins
or
enter
push
(bad)
mov
pusha
push
nop
imul
and
xchg
bnd
shl
mov
push
mov
inc
scas
dec
sub
or
aas
div
loop
std
pop
jbe
aam
and
mov
adc
add
jecxz
cmps
dec
dec
outs
mov
cmps
addr16
rol
or
(bad)
jmp
repnz
xchg
out
ds
retf
pop
in
or
fdiv
sbb
add
sub
aaa
loopne
pop
xchg
lods
data16
pop
aam
pop
rcl
xor
repz
outs
fild
sti
sbb
lea
mov
push
inc
jmp
int
or
and
pop
xchg
bound
aam
cld
jmp
push
aas
push
xor
(bad)
test
push
adc
jns
jg
dec
and
rcr
jge
ficomp
jb
std
shl
mov
scas
inc
lahf
shl
dec
repz
mov
pop
in
and
scas
and
add
mov
stc
ja
jecxz
jl
out
and
or
inc
and
push
fwait
loopne
setno
mov
ror
push
cmps
adc
pop
clc
retf
cmps
das
cmps
in
mov
inc
xchg
cmp
out
mov
enter
mov
add
sub
push
test
aaa
pop
lods
shl
push
inc
xor
dec
imul
rcl
xor
rcl
cwde
ja
loopne
sbb
aam
imul
jl
push
sbb
cmp
sub
outs
pop
fsubr
cmc
loope
cmps
cvtps2pi
cld
xor
arpl
in
xchg
mov
aad
aas
test
add
inc
fs
call
in
cdq
adc
cmp
inc
inc
(bad)
aaa
out
test
jno
das
cmp
pop
cmp
push
not
fmulp
out
js
jne
clc
mov
iret
xchg
push
cmps
ret
cmp
dec
inc
sub
cmc
daa
pop
or
push
and
push
inc
arpl
cwde
mov
mov
fisubr
inc
jbe
imul
cmc
cmps
aaa
mov
push
inc
or
in
fs
fsubr
into
inc
sub
aad
xor
mov
mov
shl
addr16
out
push
xor
xor
mov
cmp
pusha
sbb
or
or
xchg
loop
mov
nop
lea
inc
mov
mov
outs
daa
out
push
mov
or
inc
das
cli
pop
(bad)
fstp
jno
cdq
adc
and
iret
aas
cmp
and
mov
inc
inc
aas
mov
fistp
sbb
jmp
test
jae
daa
ins
cmps
call
dec
int
xchg
lods
mov
mov
dec
test
mov
dec
pusha
or
xchg
(bad)
out
cmp
mov
add
adc
jne
pop
fstp
pop
push
and
sbb
rol
in
mov
pop
pop
jmp
aas
jp
adc
ss
sub
test
adc
add
push
sar
fstp
lods
call
add
ins
shl
loope
xchg
mov
mov
sbb
sbb
adc
js
das
add
xchg
stos
xchg
dec
sub
sbb
test
(bad)
xchg
push
inc
adc
push
stc
rol
(bad)
and
mov
xchg
mov
push
scas
jmp
pop
ins
jno
loopne
jle
hlt
lods
out
into
push
test
mov
inc
enter
stc
adc
popf
loopne
test
mov
dec
fcom
xchg
dec
xchg
stos
aaa
adc
add
xchg
mov
jecxz
fsub
mov
adc
fiadd
aaa
shl
pop
push
xchg
pusha
pop
mov
pushf
out
mov
jl
outs
scas
in
test
xor
addr16
dec
or
sbb
stc
inc
push
mov
jno
fisub
lods
add
xor
imul
rol
or
push
retf
sbb
repz
jmp
dec
push
xor
jmp
pop
push
sub
jne
mov
push
mov
(bad)
cmp
ror
jnp
mov
mov
mov
addr16
xor
fwait
push
leave
cwde
and
jno
inc
jge
pop
not
sbb
cmc
cmps
push
test
sbb
mov
out
mov
push
lods
imul
lods
dec
mov
or
aam
push
loopne
gs
in
movs
push
cmps
add
sbb
mov
jp
pop
push
fistp
pop
xchg
dec
jge
cmps
addr16
add
jb
or
mov
xchg
loope
je
sbb
mov
or
pop
sub
js
xlat
pop
push
fsubp
shl
sbb
adc
(bad)
cmp
mov
daa
xor
add
adc
lods
jge
ja
jge
lds
cmp
ins
ins
ret
fwait
nop
lahf
sub
sub
xor
xchg
inc
imul
pusha
cmps
mov
pop
jle
or
mov
cmps
mov
addr16
jle
dec
add
jge
push
sahf
mov
jns
xor
shr
mov
jecxz
mov
(bad)
jnp
dec
xor
dec
sub
pop
cwde
mov
jecxz
pop
fwait
dec
jecxz
jge
ja
jmp
mov
add
mov
sbb
or
push
inc
jp
pop
xor
sub
jge
out
xor
out
xchg
bnd
lea
push
cmps
cmp
daa
sbb
sti
scas
repz
pop
and
fs
cmp
pop
add
mov
xor
add
xor
dec
popa
jmp
ret
pop
loopne
sub
push
rol
out
ret
push
sbb
fldcw
push
or
add
pusha
stos
pop
and
(bad)
iret
int3
sar
inc
and
mov
imul
mov
mov
ja
das
xor
aas
dec
jg
inc
and
push
aas
or
retf
and
cld
(bad)
mov
xor
mov
dec
repz
ss
std
in
pop
cmp
lods
xchg
xor
clc
inc
daa
xchg
xchg
add
pusha
or
jno
and
repnz
pop
fadd
cmp
sbb
adc
and
aaa
in
pop
ss
out
pop
arpl
xchg
test
cmp
xor
adc
add
adc
xchg
adc
jl
dec
jge
cs
ror
cmps
(bad)
add
mov
push
jb
pop
cld
lds
or
fist
retf
aam
out
mov
shl
mov
jnp
add
fadd
out
les
retf
sub
xor
xchg
imul
jae
call
dec
jg
xor
test
mov
(bad)
jmp
out
(bad)
cmp
sbb
ror
and
daa
adc
pop
mov
jge
xor
mov
out
jg
sbb
mov
jbe
not
addr16
pop
hlt
cs
jmp
adc
rcl
adc
dec
pushf
jmp
xchg
stos
inc
je
pop
mov
aam
cmp
push
push
add
outs
iret
add
ret
pop
cli
nop
sbb
(bad)
scas
inc
fimul
enter
test
cmps
mov
adc
jp
xor
std
push
adc
test
ficomp
sub
bound
xchg
mov
popa
dec
lds
aad
sbb
or
inc
imul
adc
inc
and
push
xchg
push
add
lds
cs
or
test
in
stc
mov
cmps
popf
sub
std
and
add
mov
adc
and
enter
xor
jae
cmp
sbb
pop
aad
shl
movlps
test
xchg
inc
movs
ja
out
rcl
div
xor
outs
movs
cld
and
lock
iret
mov
mov
xlat
add
imul
aam
test
cmps
xchg
cmp
mov
push
scas
sub
fcmovnb
test
into
jmp
xor
out
test
ins
cmp
in
xchg
cwde
pusha
jle
pusha
mov
adc
lods
jbe
cmp
push
adc
pop
jle
sbb
loopne
jnp
mov
sbb
ret
mov
mov
sbb
cs
fisttp
dec
sbb
dec
pop
(bad)
in
lahf
cmc
cmp
mov
push
sub
mov
cmps
xchg
fwait
aam
xchg
stos
ret
cmp
in
hlt
jmp
in
xchg
lods
fidivr
lods
sub
and
dec
mov
rcl
jge
in
push
imul
(bad)
lahf
mov
fist
xor
mov
dec
dec
push
fnstenv
add
movs
dec
add
arpl
out
sbb
ret
outs
jg
push
imul
push
add
jno
ins
adc
mov
imul
(bad)
(bad)
fiadd
test
movs
mov
push
movs
pop
clc
or
pop
pop
push
sbb
mov
adc
ins
fisttp
and
lds
mov
cwde
xchg
out
vmovupd
pop
adc
ds
mov
jl
(bad)
ins
leave
fs
aad
lds
je
scas
(bad)
mov
mov
iret
mov
sahf
pop
stc
repz
sahf
xor
leave
dec
popf
in
dec
aaa
leave
and
lds
inc
cwde
cmp
and
lods
jbe
shr
or
lds
cmp
out
xor
stos
mov
mov
clc
lods
retf
mov
test
mov
jb
mov
jle
out
retf
push
push
jo
inc
push
adc
dec
mov
in
sbb
mov
and
cdq
aad
cmp
stc
xchg
fs
popa
push
js
xchg
adc
out
in
ret
mov
xacquire
mov
mov
into
xchg
mov
call
shl
xchg
and
adc
pop
sub
ins
data16
data16
sti
rol
pop
jmp
cmps
sub
call
rol
cmp
sbb
inc
adc
mov
mov
mov
je
fmulp
jl
push
cmp
mov
out
add
shl
and
adc
pushf
push
adc
inc
lahf
xor
jno
seta
cli
inc
loopne
addr16
pop
daa
add
sahf
inc
cld
pop
cli
push
enter
mov
sub
mov
xchg
cmp
add
dec
push
fs
mov
cmp
mov
add
dec
idiv
add
addr16
push
adc
sub
mov
adc
in
(bad)
cmp
stos
mov
jmp
lahf
loope
cdq
jl
cwde
imul
repz
frstor
jne
xchg
mov
pop
pop
inc
mov
ds
out
sub
stos
mov
call
xchg
scas
xchg
push
(bad)
cmp
psllw
lds
out
pop
aam
pop
push
jmp
les
enter
lock
sysret
fild
adc
xchg
mov
pop
sub
pop
loop
pop
and
lea
dec
sbb
loope
dec
dec
sbb
fstp
or
sub
mov
das
cmps
dec
jnp
(bad)
mov
fwait
push
aaa
xchg
dec
das
jno
call
mov
scas
mov
push
sbb
out
outs
mov
xchg
mov
mov
retf
sub
(bad)
mov
dec
movs
popf
mov
enter
stc
add
shr
mov
cmp
xor
mov
pop
adc
xor
mov
fbld
push
pop
pop
mov
xchg
ins
inc
add
movs
xchg
and
(bad)
rol
cld
(bad)
sbb
dec
pop
rol
fild
xchg
xchg
inc
and
push
and
nop
pop
(bad)
icebp
cli
and
fisub
loope
(bad)
aam
frstor
pop
jno
xchg
push
mov
es
vmovapd
je
or
imul
in
movs
pop
xchg
gs
push
iret
mov
adc
mov
loope
jbe
in
jae
mov
mov
add
js
xchg
jae
(bad)
sti
inc
fwait
sahf
dec
int3
stos
sub
jp
sbb
xchg
and
inc
(bad)
jge
mov
xchg
not
fistp
mov
ret
imul
mov
add
push
shr
sub
cmc
dec
icebp
or
retf
loope
aas
mov
dec
int
and
mov
cmc
add
movs
sbb
inc
scas
and
int
mov
inc
shl
(bad)
dec
xchg
test
out
(bad)
repz
mov
sbb
xchg
and
inc
rcr
leave
push
retf
cmps
lods
fcom
cmp
popf
sti
out
add
push
pop
pop
inc
mov
xor
pop
xor
mov
adc
xlat
mov
or
cli
sar
dec
enter
fimul
arpl
ficomp
fst
in
or
push
out
les
pop
dec
scas
cmp
imul
fisub
cmc
hlt
push
in
jnp
xor
leave
pop
(bad)
jb
(bad)
jecxz
ds
mov
mov
int
pop
lock
lea
(bad)
js
outs
xchg
and
cmp
jb
adc
popf
sbb
pushf
mov
in
test
(bad)
lds
sbb
fidiv
and
(bad)
mov
or
dec
add
jno
jnp
faddp
xor
jae
adc
ror
dec
push
xchg
test
jecxz
sbb
mov
or
call
arpl
rcl
ret
or
sti
mov
pop
cmp
inc
xor
jns
mul
xor
gs
sub
rol
out
adc
movs
repnz
add
popf
pop
imul
mov
mov
repz
push
mov
push
imul
out
pop
or
fld
fcomp
push
push
push
cmp
sub
jp
test
ret
and
enter
xchg
push
mov
fisub
pop
cli
pushf
fnsave
xchg
push
push
mov
xor
dec
push
pop
xchg
cmp
lds
lea
sbb
pop
fiadd
mov
push
ror
je
jno
xchg
push
mov
scas
and
mov
xchg
mov
xchg
jge
daa
or
and
cmp
ins
(bad)
cld
dec
adc
xor
fcom
leave
shl
fmul
dec
pop
loopne
inc
or
lahf
dec
xchg
pop
pop
xchg
push
xchg
call
push
movs
mov
mov
push
retf
jno
xlat
ins
jb
retf
icebp
test
test
pop
add
aad
shl
add
aam
ins
repnz
inc
sub
xlat
aaa
xor
xor
or
cmp
lock
or
call
shr
jg
push
adc
pop
adc
cmp
lea
dec
clc
in
dec
call
call
mov
xor
mov
pusha
xchg
xchg
daa
repnz
add
pop
cmps
xor
pop
stos
dec
jmp
es
or
(bad)
imul
jnp
cld
mov
stc
int3
dec
dec
cmps
xchg
mov
mov
adc
lds
and
dec
inc
jge
outs
retf
jl
test
(bad)
dec
in
in
out
pusha
call
push
push
and
and
push
add
call
jmp
in
jecxz
movs
es
mov
fadd
and
dec
(bad)
outs
pop
mov
jo
mov
outs
les
mov
mov
ins
xchg
xchg
scas
pop
adc
and
in
ja
cdq
add
cmp
mov
(bad)
dec
jne
xor
arpl
imul
sub
sbb
dec
rcr
adc
sahf
xchg
inc
cmc
sar
jp
mov
bound
xchg
xor
lock
icebp
out
pop
fcom
or
int
or
dec
mov
lahf
dec
push
or
sub
xchg
pop
pop
call
pusha
arpl
js
xchg
or
push
mov
and
jmp
xor
pop
jmp
sbb
xor
out
jecxz
xchg
adc
push
(bad)
jmp
jmp
out
push
loope
and
mov
adc
jmp
add
sahf
jp
mov
test
movd
rcl
dec
and
push
sahf
dec
xchg
push
hlt
fmul
jae
je
mov
lea
test
test
aam
mov
jns
stc
retf
push
xor
cli
sbb
adc
cmps
fist
(bad)
jecxz
xor
dec
scas
xchg
pop
xchg
adc
mov
jbe
imul
je
mov
sbb
mov
mov
imul
add
inc
(bad)
jae
cmp
dec
xlat
pop
xor
lods
lahf
(bad)
jge
sub
or
mov
and
pop
mov
inc
(bad)
ins
std
sub
(bad)
int3
adc
pop
sub
daa
jmp
mov
mov
mov
fwait
mov
jmp
mov
sub
dec
imul
je
es
rcr
lds
adc
repnz
jecxz
and
mov
mov
push
add
mov
xchg
retf
repz
dec
lea
lds
fcom
xchg
dec
xchg
fcmovnu
xchg
inc
daa
scas
xchg
jg
inc
mov
mov
test
push
(bad)
pop
test
or
mov
aaa
mov
das
pop
paddusb
add
scas
fisub
push
mov
or
cmps
sbb
aaa
pop
sub
adc
fwait
mov
sbb
and
sub
or
movs
push
dec
ins
outs
xor
(bad)
cmp
adc
inc
dec
mov
into
mov
test
pop
fwait
inc
sahf
repz
lea
repz
xor
cld
push
sti
das
pushf
xchg
in
ss
lea
je
leave
rol
xchg
cmps
and
scas
jg
adc
test
mov
cmp
jl
xor
mov
jmp
retf
lahf
sub
ret
and
lds
aad
jg
pop
stos
pop
inc
xchg
outs
stos
pop
push
pop
(bad)
xchg
adc
loop
jb
daa
cmp
bnd
xchg
xor
ret
cmp
sahf
popf
in
aas
in
xchg
pushf
xor
call
inc
and
push
and
addr16
pop
sahf
movs
retf
int
lods
popa
or
mov
jl
mov
cmps
shr
mov
jp
bound
stos
jg
xor
xchg
fimul
mov
jo
(bad)
cwde
stos
xchg
ss
xchg
mov
mov
fcomp
jne
hlt
xor
or
inc
sbb
out
jno
repz
inc
cmp
nop
inc
adc
addr16
mov
push
retf
mov
pop
(bad)
sub
mov
loop
push
xor
sbb
dec
dec
test
mov
lods
or
popf
xor
scas
mov
mov
adc
lahf
pop
fnstcw
jne
imul
pushf
inc
or
sub
cwde
fbstp
test
dec
daa
sbb
and
push
jge
and
hlt
xchg
(bad)
sub
arpl
push
mov
f2xm1
fldenv
cmp
mov
fwait
push
jle
(bad)
sub
xor
shl
scas
icebp
fild
or
mov
cmp
mov
leave
loope
aam
mov
pushf
cmp
(bad)
push
sub
(bad)
add
sub
xchg
push
add
scas
pop
push
or
(bad)
repnz
fcomp
mov
aam
dec
jb
push
push
movs
aad
add
js
jp
cmp
sar
mul
mov
lea
push
aam
cmp
xchg
xchg
rol
dec
outs
shl
aaa
inc
movs
lea
clc
cs
aad
ret
(bad)
jns
mov
pop
xchg
push
lock
xor
test
out
inc
sbb
out
stc
outs
out
out
daa
repnz
lahf
inc
cmc
movs
and
call
js
inc
aaa
mov
xor
stc
push
ja
idiv
jp
pop
daa
rol
adc
or
mov
cmp
push
cmp
push
inc
push
lds
cdq
fwait
cld
adc
outs
xor
jb
ror
out
jl
inc
jg
pop
mov
cmp
fld
pop
(bad)
stc
pop
sbb
cmp
and
sbb
movs
and
mov
and
cmp
pop
fisub
pop
pop
in
test
xor
mov
inc
pop
cmc
dec
retf
sub
retf
push
pop
mov
shr
pop
pop
mov
(bad)
leave
iret
jne
xor
mov
out
cmps
cmp
adc
aad
jns
fwait
pusha
fnstenv
icebp
cli
inc
mov
pop
xchg
adc
push
test
clc
sub
push
xchg
xchg
pop
mov
dec
mov
push
icebp
in
mov
(bad)
mov
dec
lods
ror
movs
test
loope
inc
sbb
sub
rcr
mov
jnp
push
(bad)
fcmovne
push
cdq
shl
jmp
hlt
inc
int
loop
sbb
pop
(bad)
mov
ficomp
dec
fld
ficom
(bad)
bound
pop
mov
sti
ds
call
jne
adc
mov
and
scas
mov
xchg
sub
add
mov
cdq
mov
sbb
push
mov
out
mov
movs
jg
pusha
pop
pop
xchg
add
unpcklps
add
repz
repz
xor
(bad)
fcom
retf
add
mov
pop
loop
std
pop
push
fwait
jb
inc
or
jmp
or
aad
mov
pushf
pop
mov
mov
sub
dec
jl
loope
add
sbb
jno
jbe
dec
loop
sbb
cmp
rcl
add
xchg
mov
and
(bad)
fmul
sahf
loopne
sbb
(bad)
fdiv
(bad)
sbb
movntq
in
mov
xchg
in
loopne
sub
xchg
sbb
mov
push
dec
mov
mov
mov
xchg
sub
dec
mov
rcr
fidivr
fisubr
mov
fst
sar
cld
mov
mov
mov
mov
xchg
repz
test
call
jae
xor
and
test
pop
xchg
mov
in
retf
adc
out
loop
mov
(bad)
fisttp
push
xor
cmp
xor
xchg
mov
jnp
in
loop
lods
pop
pop
dec
retf
fsubr
jmp
pop
push
dec
je
icebp
jp
sbb
cli
xor
add
dec
pop
loop
xchg
lds
lock
inc
std
mov
scas
(bad)
fadd
cli
std
call
and
in
in
imul
jecxz
or
jnp
sbb
test
cmps
mul
sub
mov
mov
adc
push
sbb
dec
aaa
mov
and
xchg
cmp
xchg
xchg
push
add
pusha
test
popf
mov
inc
pop
div
xlat
push
nop
leave
or
dec
add
mov
push
mov
mov
jp
call
in
outs
sbb
push
xchg
pop
not
sub
xacquire
sbb
push
jecxz
cwde
sub
call
fcom
(bad)
aas
sahf
lods
(bad)
cmps
mov
cdq
loopne
aaa
retf
jg
mov
aam
xor
sbb
dec
movs
xchg
dec
popf
sbb
push
dec
cmp
jne
outs
mov
stc
push
or
js
and
mov
pusha
and
movs
iret
cmps
xor
mov
adc
div
cmc
inc
cld
call
retf
enter
fmulp
(bad)
pop
fmul
xchg
mov
fadd
jne
adc
imul
ror
(bad)
mov
popf
mov
xchg
cld
pusha
cmp
add
clc
mov
push
add
inc
lock
or
retf
dec
loop
(bad)
sti
in
pop
or
mov
aas
rcl
jno
add
pop
sbb
fucom
xchg
loopne
lahf
out
and
stc
iret
push
popa
(bad)
mov
adc
dec
(bad)
dec
loopne
push
loop
scas
clc
add
xlat
int3
or
adc
pushf
mov
lds
dec
cmps
mov
push
stos
add
sbb
pop
adc
mov
int
cmp
outs
ins
popf
sub
test
lea
mov
int3
xchg
add
inc
cwde
nop
shl
dec
xchg
ss
adc
sub
stc
dec
mov
mov
fisub
xchg
fsubr
data16
pop
gs
jge
nop
xor
stos
outs
aaa
add
das
mov
sbb
outs
adc
cmps
mov
mov
lods
and
inc
add
das
fisttp
ret
test
fnstcw
(bad)
and
pushf
and
push
dec
inc
sbb
outs
pop
outs
(bad)
hlt
rol
inc
add
jg
xchg
mov
mov
repnz
mov
mov
mov
ja
ins
mov
xor
mov
stos
sbb
test
mul
adc
imul
dec
pop
(bad)
sbb
mov
adc
push
jg
add
sub
lea
sbb
popf
push
xor
sbb
and
repz
mov
dec
icebp
test
mov
movs
retf
dec
add
push
add
nop
adc
push
nop
push
jo
mov
jle
int3
and
dec
pop
xor
(bad)
(bad)
in
ficom
lock
push
and
or
(bad)
fistp
fdivr
jmp
mov
push
cmp
retf
mov
loopne
popf
fwait
sbb
js
and
scas
cli
and
cmc
call
clc
sti
mov
and
repz
pop
into
shl
add
repz
mov
pusha
cmp
sbb
sti
push
ds
mov
jb
inc
inc
and
lds
dec
push
stos
mov
sbb
js
movs
sbb
dec
cmp
shl
dec
cld
ds
mov
imul
push
gs
fdivr
xor
add
dec
mov
movs
mov
pop
hlt
inc
ud1
jle
pop
push
sbb
call
psrlq
ja
stc
xchg
sub
call
jmp
retf
inc
and
jp
int
icebp
pop
gs
pop
jne
int
sub
mov
or
(bad)
popa
mov
mov
pop
stos
xchg
es
cwde
imul
xor
ins
call
dec
jno
stc
mov
mov
imul
test
arpl
xchg
dec
jne
push
sub
pop
inc
movs
popa
jle
stos
or
mov
mov
dec
(bad)
adc
cmp
xchg
shl
xor
cli
dec
lods
inc
mov
push
enter
add
jns
pushf
(bad)
mov
xor
out
sbb
cmp
xor
mov
jnp
imul
dec
test
iret
sbb
xchg
enter
fsubr
sub
dec
push
cmps
jb
xchg
and
add
shl
fs
and
pop
(bad)
mov
loop
call
adc
sbb
js
sbb
arpl
out
in
loopne
xchg
popf
sbb
xchg
xchg
pop
jbe
(bad)
(bad)
retf
mov
and
ror
(bad)
out
add
mov
mov
pop
mov
pop
fs
mov
pop
add
in
sahf
sub
ret
repz
addr16
std
test
repnz
xor
mov
inc
cmp
dec
cwde
movs
mov
out
ret
and
inc
arpl
stos
xor
dec
out
xchg
pushf
jns
mov
xor
pop
in
adc
mov
(bad)
sub
mov
rcl
aam
call
(bad)
fldcw
sub
push
std
lea
bound
pop
out
dec
pop
in
dec
and
sbb
push
and
push
sbb
call
mov
jecxz
xor
popa
out
jne
fucom
xchg
mov
inc
or
imul
dec
lock
jmp
inc
mov
inc
sbb
jge
sti
inc
clc
and
fisttp
icebp
test
sub
and
pusha
mov
pop
pop
mov
fisubr
enter
add
popf
movs
stos
sahf
mov
mov
cmc
pop
mov
not
ffree
dec
pop
scas
fidivr
fimul
mov
daa
dec
or
inc
dec
jne
cmps
inc
loop
(bad)
jns
push
out
sti
mov
jge
mov
or
pop
mov
rcr
ins
test
mov
adc
sbb
add
pop
shr
sub
push
or
test
movs
scas
and
loopne
mov
cmps
addr16
(bad)
or
das
pop
aam
jle
mov
cmc
mov
rcr
inc
repnz
or
pushf
adc
fldenv
mov
inc
ret
mov
sti
push
xchg
retf
xor
mov
mov
pop
adc
fwait
popa
dec
pop
sbb
xchg
stc
iret
mov
adc
xor
jg
dec
push
and
sbb
cmps
mov
fisub
imul
ret
ds
cmp
ja
inc
sub
cmp
sbb
(bad)
cmps
fldenv
jne
lock
ds
push
jbe
jns
mov
add
in
mov
les
outs
arpl
jmp
data16
push
retf
int
cmp
jnp
lods
fwait
cmp
std
push
pop
pushf
mov
lea
sub
mov
mov
xor
fidiv
aam
pop
mov
sub
add
out
or
fadd
sub
in
fist
jle
sub
pop
jne
nop
fld
and
pop
add
stc
jp
mov
push
icebp
nop
es
xlat
xchg
pop
dec
push
cmp
push
movs
retf
std
ja
in
outs
and
mov
(bad)
fsubr
call
leave
xor
add
xor
shl
or
aaa
repz
shr
mov
loop
cmps
xlat
sub
aaa
pop
mov
jecxz
ret
arpl
jmpw
xchg
push
add
loopne
and
stos
jg
das
adc
cdq
dec
ins
dec
pushw
int3
pushf
popf
cmp
jno
popf
xchg
xor
ss
mov
and
mov
sub
jns
mov
xchg
add
ret
mov
idiv
add
fwait
mov
retf
(bad)
ds
lds
int3
mov
icebp
sbb
xchg
cld
jno
mov
cli
mov
call
sbb
or
cdq
loop
(bad)
lock
ror
add
test
aaa
xor
ret
and
jmp
mov
cmp
inc
adc
ficomp
fld
aaa
(bad)
jno
ror
ret
mov
pop
daa
in
test
or
ret
inc
fwait
mov
inc
sbb
sbb
sub
lods
adc
mov
aam
out
jae
xchg
sub
punpckhbw
enter
mov
or
mov
dec
mov
loop
ja
cli
sub
xchg
mov
push
das
jecxz
xchg
push
test
ds
or
aaa
xchg
mov
xor
and
jp
push
or
es
jae
mov
lock
leave
cld
cmps
mov
mov
jmp
add
mov
pop
ja
mov
cs
dec
mov
inc
and
xchg
inc
lds
pop
adc
stos
ret
push
jno
clc
outs
lock
and
lahf
in
add
inc
sahf
push
xchg
fs
push
mov
retf
pop
adc
sbb
test
cmp
pop
sar
pop
pop
sub
xor
sbb
out
push
bnd
ja
mov
xchg
lock
cmp
dec
out
cmp
xlat
mov
sub
fst
mov
repz
mov
(bad)
sub
jno
ret
xchg
aad
adc
(bad)
dec
jo
dec
rol
add
call
outs
lahf
aad
inc
inc
adc
test
mov
test
int3
jle
or
fst
push
call
test
xor
pop
jnp
outs
cmp
or
mov
or
jne
aam
das
pop
cmp
sub
cmp
cld
arpl
sbb
lock
inc
bound
ret
inc
jmp
sub
rol
stos
jmp
sbb
in
sbb
adc
inc
or
mov
jbe
cmc
and
xor
add
in
pusha
bound
jo
xchg
xor
jb
rcr
lods
cli
dec
cmp
mov
sub
push
in
adc
cmp
sub
mov
jmp
scas
(bad)
aam
mov
sbb
cdq
movs
push
push
dec
xchg
stc
xchg
add
inc
ret
js
lock
jne
cmc
sbb
inc
icebp
call
retf
or
mov
rol
dec
xchg
(bad)
pop
mov
es
add
mov
movs
mov
cdq
jae
lods
sub
and
jmp
data16
movs
cmps
push
rep
xchg
dec
repz
int3
or
retf
xchg
cmp
xchg
pop
xor
mov
pop
sbb
push
packsswb
out
push
sub
lahf
lahf
in
outs
stos
mov
sbb
cwd
sti
jmp
jle
mov
pop
mov
xchg
loopne
aad
out
out
sti
out
dec
xor
data16
(bad)
adc
cmps
scas
int
mov
aaa
mov
xor
test
sbb
push
adc
mov
push
stos
push
dec
cmc
sbb
scas
in
dec
adc
data16
rcl
xlat
retf
sbb
jno
jbe
push
add
sub
mov
(bad)
xchg
outs
imul
push
sbb
or
push
push
fs
jmp
jnp
(bad)
out
(bad)
sbb
xor
xchg
ret
movs
mov
xor
or
dec
popa
xor
jge
jmp
test
popf
add
jge
sub
and
test
int3
aas
push
xor
ret
mov
lds
(bad)
xor
xor
xchg
dec
xchg
jno
imul
in
xchg
inc
test
pushf
cs
lods
ror
dec
cmp
clc
add
ret
mov
(bad)
lock
mov
fcomp
mov
or
test
fwait
nop
push
jno
setge
test
jge
loopne
ret
xchg
xchg
lods
js
inc
mov
(bad)
scas
jmp
(bad)
(bad)
hlt
dec
ror
push
add
jbe
test
(bad)
ins
push
lea
ins
mov
sub
inc
stos
xor
out
test
jnp
jle
mov
xchg
repz
pop
movs
rcr
in
pop
jo
push
push
lds
jbe
fisttp
outs
cmp
sbb
idiv
or
dec
jg
and
jle
call
test
imul
or
mov
das
and
rcl
sbb
ror
sar
or
imul
nop
add
lock
cld
out
inc
and
and
shl
pop
mov
dec
or
adc
jae
fisttp
xchg
(bad)
into
xor
sar
inc
in
inc
(bad)
push
cld
pop
imul
imul
inc
pushf
cmps
and
and
pop
or
jbe
and
(bad)
lods
mov
mov
aam
and
out
rcr
cwde
enter
hlt
outs
inc
and
rcl
fs
push
ja
enter
lahf
adc
out
jo
adc
cmp
loope
fist
jmp
dec
rcl
(bad)
sbb
test
cmp
and
lea
inc
or
ds
cmp
push
add
mov
les
cmp
imul
repz
pop
js
add
aas
mov
and
fucomip
or
leave
jle
je
ror
jno
dec
fdivr
and
mov
xor
push
fst
loope
scas
jae
lahf
add
or
aam
int
(bad)
out
jb
stc
xchg
cmp
sub
sub
push
aam
cmp
inc
or
and
jae
shl
retf
ror
mov
xchg
jg
sbb
sar
xor
(bad)
movs
sub
dec
loopne
push
cwde
fisttp
daa
mov
mov
and
bound
mov
adc
dec
sar
ret
jne
leave
xchg
dec
ficom
mov
(bad)
fldcw
clc
add
(bad)
aam
out
pop
xchg
sbb
mov
sahf
ror
sub
mov
les
mov
jo
jnp
xor
dec
pop
pop
call
(bad)
outs
mov
dec
(bad)
jmp
dec
sbb
xchg
inc
mov
sub
mov
add
push
movs
addr16
mov
cmp
push
mov
push
dec
jg
push
or
adc
loop
adc
cmp
inc
pop
mov
cli
nop
mov
pop
mov
jp
xchg
fisubr
in
outs
push
jg
enter
mov
pop
sbb
out
jb
iret
cmp
and
fcomp
add
adc
test
jno
xchg
rol
fstp
call
outs
xor
clc
pop
jmp
ret
ret
dec
aaa
lahf
adc
pusha
rol
pop
nop
mov
mov
pop
rcl
adc
jl
xchg
mov
aam
(bad)
(bad)
enter
jge
pop
add
mov
xor
dec
leave
fdivr
mov
push
cmp
leave
leave
mov
es
mov
dec
mov
mov
push
pop
aad
pop
aaa
sub
inc
cmps
adc
loop
sbb
add
arpl
or
push
xchg
into
iret
in
js
adc
es
pop
lds
in
push
addr16
cmp
mov
xchg
sbb
das
mov
push
aas
ins
call
arpl
mov
into
mov
ret
loope
in
sbb
rcl
inc
in
sbb
adc
adc
or
ror
jle
or
and
and
mov
(bad)
pop
mov
pop
jmp
push
popa
xchg
ret
inc
fld
inc
xor
mov
inc
sti
imul
jns
cmp
sbb
or
into
pushf
mov
dec
aam
int
pop
test
jmp
xchg
les
pop
daa
mov
das
inc
pop
mov
jmp
les
adc
cmps
mov
rcl
outs
or
add
jmp
xchg
pusha
xor
cmp
push
push
fistp
sar
fwait
bound
xlat
mov
sbb
mov
push
push
arpl
mov
inc
push
std
add
add
xchg
mov
sub
adc
clc
je
sbb
pop
mov
iret
mov
sbb
jno
mov
stos
jecxz
mov
push
shr
adc
xchg
cmp
lahf
or
push
inc
cmp
in
repz
mov
into
loop
and
mov
jmp
xchg
into
movs
mov
or
pop
xchg
ja
mov
retf
mov
ss
xor
unpcklps
je
cmc
es
jno
ror
shl
xchg
mov
retf
dec
adc
test
movs
mov
gs
stos
pop
mov
cmp
lock
mov
cld
jne
popa
sbb
mov
push
loopne
or
shl
sub
ret
(bad)
popa
shr
inc
stc
std
aaa
xchg
in
inc
mov
sub
cld
stos
dec
icebp
in
sbb
and
fstp
mov
and
dec
add
inc
fcom
stos
xchg
sbb
dec
retf
fnsave
adc
mov
cmps
clc
stc
fwait
jne
dec
scas
and
(bad)
dec
or
jmp
pop
adc
xor
xchg
pop
xor
jb
push
mov
mov
pop
sbb
cmps
outs
push
ja
es
loop
sub
xor
xor
adc
xor
rcr
mov
nop
xor
push
cmp
enter
(bad)
jno
push
(bad)
scas
xor
retf
jmp
push
mov
xchg
test
inc
or
ds
ret
pop
push
movs
xchg
inc
dec
enter
mov
mov
fucomi
scas
test
add
in
in
mov
std
mov
xchg
rcr
sbb
pop
out
or
jp
or
cmp
iret
sbb
push
inc
ds
call
(bad)
jmp
cwde
bound
dec
jne
pop
addr16
jbe
aaa
xlat
fyl2xp1
rcl
js
push
call
pop
inc
xchg
mov
(bad)
lahf
mov
imul
xor
rol
(bad)
xor
push
push
imul
or
loop
sub
mov
mov
mov
pop
mov
retf
mov
nop
sar
out
push
mov
(bad)
loopne
push
xchg
inc
xor
addr16
jmp
cmps
and
aas
retf
cmp
inc
cmps
sti
scas
and
das
inc
movs
xchg
pop
mov
mov
lock
shl
cwde
cwde
jo
mov
imul
adc
aad
outs
inc
shl
jmp
push
pop
jmp
or
arpl
ror
call
repz
rol
push
push
cmp
scas
in
mov
stc
stos
sahf
mov
adc
sahf
jp
cmp
or
test
add
scas
pop
sub
popf
jp
mov
xchg
jg
cmp
dec
jmp
in
fild
sahf
sub
out
sub
cdq
sbb
cmp
push
js
aaa
jg
push
cmp
jmp
xchg
push
push
cmc
xchg
cli
in
mov
les
test
pop
rcr
jno
in
sbb
test
scas
add
xchg
jmp
sbb
outs
cmp
push
inc
stos
bswap
cmp
sbb
mov
aam
sbb
push
mov
inc
into
out
adc
stos
arpl
pop
in
int
push
out
mov
rol
scas
cmps
xchg
or
shl
sbb
push
mov
mov
mov
jp
jns
xor
or
pop
sbb
lea
and
fisubr
sub
add
pop
ret
fstp
(bad)
sub
pop
mov
call
mov
daa
dec
in
add
data16
adc
sbb
mov
(bad)
xor
cmc
or
ss
mov
gs
mov
out
fld
test
adc
rcl
(bad)
mov
nop
mov
fist
mov
sete
hlt
fiadd
ds
dec
cmps
(bad)
and
mov
ja
dec
dec
ja
push
add
int3
mov
ins
push
out
xchg
xchg
pop
pop
xor
push
scas
(bad)
inc
lods
jb
out
adc
pushf
mul
push
xor
jmp
(bad)
ud0
mov
inc
mov
lods
nop
jmp
fs
pop
mov
xchg
or
push
lock
pop
arpl
lods
ffree
sahf
mov
xchg
loopne
sub
call
or
imul
push
fisubr
call
or
adc
inc
neg
fisttp
repz
add
mov
mov
push
test
jle
push
test
test
adc
mov
add
aad
retf
les
dec
js
jmp
xor
ss
sbb
imul
jecxz
loope
(bad)
hlt
mov
in
xor
ret
mov
jp
fdivp
sub
test
rol
jb
jbe
iret
call
cmp
lods
iret
outs
adc
lds
cmps
out
pushf
int3
aam
loop
mov
xor
enter
cli
std
ja
jns
dec
inc
adc
push
cwde
test
xor
jecxz
dec
dec
and
jbe
jmp
inc
out
fisub
dec
out
and
push
and
lock
mov
sub
test
cli
pop
pop
call
jmp
in
mov
mov
sbb
push
(bad)
out
inc
dec
sbb
(bad)
jmp
xchg
mov
pop
jo
and
push
inc
pushf
xchg
mov
retf
leave
shl
and
adc
fiadd
adc
jle
ins
rcl
and
pop
paddusb
call
pop
out
retf
sbb
mov
push
and
sbb
push
repnz
mov
sbb
loopne
xor
push
mov
xchg
repz
xor
xchg
sub
pop
jg
xor
daa
lods
fnstsw
and
mov
sbb
jo
xor
clc
sbb
xor
pop
mov
xchg
ret
aaa
xchg
mov
in
in
or
outs
push
push
sbb
pop
sbb
idiv
pop
jmp
mov
mov
rcr
int3
jle
jno
pop
mov
pushf
gs
cmps
mov
push
mov
rep
data16
mov
pop
je
ss
push
pop
xor
dec
add
lahf
or
xor
jnp
cmp
pop
xor
jge
les
cmps
push
fnstenv
fs
and
push
xchg
mov
push
sub
aaa
test
iret
setge
jle
test
pusha
sti
inc
je
cmc
daa
arpl
mov
adc
pop
xor
fst
fistp
cmp
jle
xor
dec
jnp
xlat
stc
cmp
adc
push
pop
xor
pop
cmp
rcr
sbb
push
sbb
sbb
inc
push
jno
iret
pusha
lods
lea
or
fisttp
(bad)
pop
push
out
scas
(bad)
hlt
jge
cmps
push
push
shl
pushf
scas
pop
cs
mov
bound
cmps
outs
dec
icebp
sub
std
stos
pop
jnp
mov
xchg
inc
push
cmp
aad
jbe
ret
pop
sbb
mov
(bad)
(bad)
jae
(bad)
popa
cwde
iret
and
outs
loopne
push
push
inc
loope
and
clc
add
in
adc
dec
stc
(bad)
int
ret
push
vpsubsb
sha256msg2
les
pop
xchg
xor
push
mov
dec
std
jo
mov
imul
or
dec
lods
sub
scas
xchg
or
dec
xchg
mov
ss
ret
sbb
dec
bound
mov
in
(bad)
pop
sub
cmp
inc
adc
cmp
fdiv
daa
out
dec
retf
jecxz
add
sbb
mov
cmp
jmp
push
pop
arpl
sub
pop
fsubr
add
dec
push
and
adc
pop
cmp
add
xor
outs
lods
xor
sub
push
mov
(bad)
arpl
shr
ds
jl
stc
cmp
lea
fs
add
push
retf
test
xchg
xchg
mov
call
sbb
mov
ss
test
and
and
sbb
cmp
push
arpl
jge
scas
or
mov
jge
mov
dec
dec
retf
and
mov
mov
xor
add
in
xchg
inc
idiv
mov
sbb
jbe
dec
rcl
neg
mov
dec
ret
adc
xchg
sbb
pop
dec
retf
mov
jmp
call
xor
cmp
mov
xor
xchg
fadd
add
cld
jl
adc
rol
test
xor
mov
scas
aas
jl
(bad)
cmp
ins
outs
jge
aaa
jbe
loope
or
enter
push
mov
mov
in
mov
push
jno
ins
cld
pop
into
push
mov
lds
stc
dec
mov
dec
jnp
sbb
dec
js
mov
mov
fimul
and
cmps
inc
sbb
adc
lock
mov
sub
sbb
inc
xchg
mov
mov
mov
jmp
dec
jo
ds
sub
lods
mov
cmps
xor
push
sbb
inc
and
lods
mov
cmc
int
shl
out
(bad)
mov
sub
cmp
scas
aam
xlat
jb
(bad)
mov
lods
test
ja
jl
mov
aam
mov
mov
xchg
call
cmc
jg
and
test
mov
imul
ins
xchg
pop
inc
adc
pusha
fwait
sbb
ja
inc
push
call
cmp
repnz
(bad)
repz
ja
test
out
cwde
lods
mov
cs
lods
ds
mov
jb
cmps
add
popa
shl
sbb
xchg
ins
pop
or
mov
test
repz
cli
xor
push
lds
out
xchg
push
push
aas
or
js
push
xchg
mov
sti
dec
mov
xchg
cmp
push
mov
lahf
xor
lds
inc
enter
dec
stos
and
mov
push
mov
stos
mov
xor
dec
cmps
pop
cmps
or
push
adc
push
gs
inc
push
push
jbe
loope
scas
adc
mov
mul
pop
(bad)
adc
sbb
jle
aas
fdiv
dec
jle
clc
pop
mov
ins
dec
xor
push
cmps
(bad)
je
fadd
in
into
aas
retf
dec
pop
xchg
icebp
(bad)
int3
stos
xor
in
aad
aas
stos
sub
xchg
fidiv
leave
or
mov
push
push
jne
mov
mov
mov
inc
push
ss
or
xchg
hlt
cdq
push
dec
(bad)
mov
mov
iret
popf
div
jg
add
loope
fisttp
clc
push
int
adc
cmp
cmps
ins
pop
xor
stc
inc
out
xchg
and
fs
psrad
sub
test
stos
dec
or
sbb
inc
gs
je
out
cdq
jnp
ss
mov
mov
repz
fwait
imul
clc
gs
in
xor
mov
loop
add
shl
test
loop
pop
imul
jmp
in
sbb
retf
xor
xchg
pop
push
test
xor
std
out
lods
mov
pop
or
(bad)
push
mov
inc
gs
xchg
sti
mov
add
jno
cmp
cs
popa
adc
cmp
and
cmp
inc
mov
pushf
leave
jno
jno
cmp
outs
leave
inc
dec
mov
push
xor
jmp
adc
lock
into
es
ret
jb
jb
cmps
push
and
loopne
mov
test
sub
mov
(bad)
scas
sar
fadd
retf
push
mov
fidivr
xchg
ja
and
push
repz
sar
or
cmp
push
jl
dec
jp
xor
out
adc
and
fisubr
xchg
jbe
push
frstor
(bad)
dec
dec
jp
(bad)
fldcw
test
pop
ss
into
dec
aaa
test
dec
jbe
mov
cwde
sbb
sub
pusha
and
pop
mov
cmp
mov
cmp
(bad)
movs
jg
int
test
repnz
test
xor
fdivr
lea
adc
imul
in
sub
scas
nop
pop
test
je
scas
and
stc
les
inc
(bad)
mov
mov
pop
jecxz
pop
add
jno
dec
hlt
in
adc
rcl
imul
lahf
ins
(bad)
stos
imul
js
ror
call
push
inc
sti
mov
loope
jno
add
dec
push
mov
mov
mov
push
stos
popa
push
out
hlt
mov
popf
stos
xor
adc
std
fsub
adc
popf
(bad)
mov
addr16
out
fisubr
ret
cld
mov
dec
push
pop
inc
hlt
lods
scas
sbb
jp
and
push
out
xchg
cdq
test
popa
jns
and
hlt
push
jmp
cmp
or
xlat
sahf
cmps
enter
xor
int3
movs
cli
xchg
daa
js
ins
dec
or
xchg
rcl
inc
es
mov
cmps
das
ror
mov
dec
imul
and
push
int3
(bad)
inc
adc
in
in
out
and
arpl
loop
lods
mov
(bad)
nop
xchg
sub
loop
and
data16
xchg
jno
jg
sti
lods
clc
sar
adc
out
xchg
outs
jg
mov
sbb
cld
mov
fld
mov
nop
lods
xor
in
pop
movs
les
xchg
inc
dec
test
rcl
out
repz
movs
test
adc
ret
bound
sub
mov
jae
cmp
shr
adc
int
jns
push
pushf
jne
cmp
pop
push
inc
inc
lods
jne
lock
das
stos
jno
push
imul
push
mov
or
std
repz
jge
scas
ins
test
lahf
dec
bnd
(bad)
std
aas
sbb
inc
add
ret
repnz
jnp
cmc
ficom
call
test
shr
(bad)
pop
fsub
test
pop
inc
nop
pop
into
sub
mov
inc
ficomp
pop
push
(bad)
push
xchg
jle
cld
xor
fld
add
mov
jb
sbb
jl
add
fistp
add
sub
rcr
push
clc
scas
mov
cmps
cwde
les
jo
push
push
mov
xchg
and
out
fmul
sub
inc
jnp
in
dec
lahf
cwde
es
xor
xchg
dec
cmp
mov
loopne
test
leave
pop
sub
push
sub
ins
pop
mov
push
or
pop
cli
mov
gs
pop
push
mov
data16
sbb
mov
pushf
cli
ins
add
push
aas
mov
inc
scas
loope
inc
jb
cmc
and
dec
xor
and
mov
pop
in
jns
and
ss
aas
das
movs
aaa
dec
push
test
dec
dec
pop
pop
clc
sbb
pusha
movs
repz
loop
fwait
sbb
fnstcw
addr16
fwait
or
pop
sar
xchg
cmp
add
fucom
hlt
mov
aam
fadd
dec
xchg
movzx
inc
xchg
inc
mov
mov
mov
mov
aas
popa
sub
dec
std
inc
jmp
addr16
push
mov
fisttp
or
les
pushf
push
xchg
mov
inc
out
or
fst
ret
bound
jne
mov
mov
lds
(bad)
pop
jae
fcmovnb
cli
in
dec
fistp
je
cmp
jge
mov
mov
and
sub
std
lods
fidivr
mov
outs
inc
dec
jmp
int3
jl
cwde
xor
add
jp
imul
scas
bound
mov
xchg
and
xchg
xor
mov
jge
test
(bad)
xchg
gs
es
jmp
pop
dec
push
pop
push
pop
cmp
dec
scas
mov
mov
adc
mov
sub
mov
outs
(bad)
hlt
sbb
loope
dec
test
sub
call
adc
push
repnz
mov
loope
pop
inc
jmp
cld
in
mov
mov
cmps
aad
dec
out
and
in
pop
xchg
popf
push
dec
lds
xchg
dec
xor
xchg
mov
pusha
out
repz
xor
sbb
add
test
call
push
test
gs
sahf
clc
retf
xchg
pop
clc
inc
clc
mov
pop
ins
int
lea
adc
and
adc
int3
cli
jge
test
ins
(bad)
or
fcmovbe
call
cld
icebp
fmulp
into
fistp
mov
ja
add
pop
int
(bad)
jge
int
loope
xor
add
dec
push
inc
inc
jae
jbe
dec
and
xchg
fdivr
fs
lods
push
sbb
cmc
pushf
sbb
aad
mov
dec
sbb
adc
add
arpl
xchg
out
outs
shr
mov
dec
cmp
sbb
(bad)
jp
dec
push
pop
test
jge
push
and
movs
bound
lea
leave
add
push
sub
fwait
shl
movs
(bad)
fmul
in
mov
stc
inc
test
mov
hlt
repz
out
(bad)
or
das
lods
xchg
std
daa
lods
ds
sbb
std
ss
xchg
cs
(bad)
pop
loope
dec
add
icebp
out
dec
(bad)
pop
sar
and
or
add
mov
pop
dec
outs
mov
xor
sbb
pop
jmp
xchg
scas
or
dec
leave
sub
mov
cmp
std
pop
(bad)
mov
xchg
out
mov
lahf
mov
lods
and
pop
cwde
push
jae
jo
movs
pop
fcomp
jl
ins
shl
push
ror
push
and
xor
das
leave
in
cdq
xchg
pop
mov
mov
fisubr
push
xchg
enter
dec
sbb
sub
adc
pop
scas
cmp
in
pop
shrd
lods
cmp
test
push
je
fcmovb
jmp
fmul
cdq
fwait
loopne
out
jbe
call
dec
or
cmp
mov
push
shl
test
pop
mov
ficomp
add
call
lods
cmc
mov
daa
ret
int
xchg
stc
ficom
(bad)
sti
daa
cmp
aaa
rol
test
ret
ret
sbb
jp
push
xor
pusha
push
ins
or
pop
ret
xor
xchg
mov
inc
adc
xchg
repz
fild
data16
pop
(bad)
neg
xor
sbb
test
test
sbb
bound
xor
pop
scas
aas
mov
and
mov
in
mov
cmp
in
dec
adc
push
sub
push
imul
xchg
pop
movs
test
jb
sub
mov
retf
sub
add
mov
test
push
fmul
loopne
pop
cmps
fwait
cmp
popf
rol
test
mov
jo
sbb
rcl
xchg
and
jne
or
xor
call
push
mov
imul
mov
inc
in
fistp
pop
fdivr
std
cmp
sub
loop
push
scas
cwde
(bad)
pop
sbb
jle
add
mov
push
fdiv
dec
int
(bad)
sub
inc
pushf
loope
das
fdivr
or
sub
popf
std
mov
mov
sahf
xchg
mov
clc
int3
mov
imul
push
imul
jnp
in
fild
add
outs
or
ss
or
or
(bad)
(bad)
in
xor
in
push
add
imul
mov
bound
pop
or
in
ret
pushf
push
xor
(bad)
or
ret
mov
dec
in
push
lods
cdq
hlt
out
cmp
fsub
sub
mov
mov
cli
retf
stos
(bad)
or
movs
aaa
and
lods
pop
js
test
xor
or
popf
and
ins
pop
ins
sub
jp
mov
pop
xlat
ficom
lea
push
inc
je
adc
fldenv
aas
xlat
mov
es
sub
dec
dec
and
adc
dec
push
mov
sti
mov
(bad)
pop
add
sbb
out
sub
stos
cdq
ficomp
mov
xchg
fidiv
fwait
pop
lods
push
cmp
outs
and
xlat
push
inc
jno
das
cdq
lods
mov
les
int3
or
arpl
xor
(bad)
fsubr
loop
mov
out
ret
mov
mov
or
add
data16
shl
jg
push
sbb
ss
sbb
cwde
xchg
(bad)
neg
sahf
push
cmp
mov
(bad)
ds
add
and
lds
dec
mov
loopne
jmp
jo
xor
loope
cmps
pop
leave
in
and
test
fistp
xor
imul
mov
xchg
nop
fld
std
xchg
in
out
and
jmp
cmc
pop
loope
jb
rcr
std
mov
cmp
cmp
pop
push
shr
sub
xchg
mov
aaa
(bad)
mov
jl
leave
cmps
mov
jmp
lods
(bad)
push
mov
retf
out
adc
ss
inc
stos
push
std
sahf
into
imul
iret
loop
jns
xchg
repnz
and
lock
push
xor
les
adc
pop
pop
mov
(bad)
das
jle
in
mov
sub
test
or
in
push
jp
mov
(bad)
icebp
sub
shl
into
int
mov
ds
mov
xor
inc
inc
mov
pop
dec
xchg
out
pop
jo
adc
mov
add
scas
jmp
pop
in
aad
jp
ins
dec
fwait
int3
dec
test
pusha
dec
jbe
jecxz
fs
mov
push
push
sub
lods
inc
adc
sbb
pop
loop
jb
cdq
cmp
push
inc
adc
loope
in
sbb
prefetcht2
dec
push
pop
xchg
jp
jge
arpl
lds
retf
call
pop
sbb
sbb
sbb
repz
mov
jp
and
mov
aam
test
daa
dec
in
in
adc
mov
xor
fsub
or
and
fisubr
cmp
and
xor
test
imul
cmp
imul
mov
mov
or
imul
add
inc
mov
mov
fisttp
clc
lods
pop
out
dec
iret
sub
and
sbb
pop
imul
mov
xor
in
sbb
or
add
mov
(bad)
push
sahf
xor
mov
imul
or
push
repz
dec
imul
addr16
xor
xchg
push
mov
out
out
xchg
stos
jecxz
gs
(bad)
cmp
movs
push
outs
adc
pop
adc
push
and
rep
jns
push
xchg
sub
data16
xor
pop
bound
add
inc
jle
add
ret
imul
(bad)
fsubr
out
loope
daa
shr
xchg
mov
(bad)
loope
jo
sbb
fs
jmp
aam
shr
(bad)
es
jp
ins
fucom
int
ret
mov
movs
ror
or
fwait
mov
inc
pop
sub
xchg
addr16
or
retf
lahf
repz
mov
rcr
jno
iret
jge
sahf
xchg
data16
jge
push
test
mov
xor
xor
mov
stos
gs
mov
call
stc
or
push
cdq
out
ins
je
pushf
aad
mov
imul
cmc
sub
pop
dec
mov
adc
xor
out
xchg
in
or
cmps
push
jae
shr
add
out
xchg
push
in
(bad)
and
or
ins
imul
sub
push
xchg
mov
and
and
arpl
cmp
add
sub
sub
ds
and
aaa
out
push
and
add
loop
sahf
test
or
repz
dec
xor
push
xchg
aaa
data16
sti
jbe
mov
xchg
cmc
retf
sar
js
dec
cmp
inc
push
jg
fucomi
jo
push
pop
lds
jge
std
cmp
popf
dec
fisubr
pushf
into
mov
jl
retf
scas
mov
add
cmc
jmp
imul
scas
cmp
pop
adc
mov
xchg
and
xlat
pop
sbb
adc
xchg
jg
mov
movs
jle
gs
push
xor
push
cld
and
les
sti
adc
dec
ja
pop
(bad)
cmc
mov
adc
sbb
mov
dec
xchg
fnstcw
retf
retf
and
cmp
jae
jmp
push
call
cmp
lock
cmp
test
jno
iret
push
xor
xchg
arpl
jns
mov
fcmovne
repz
mov
push
cmp
pop
xchg
sub
aaa
adc
push
rcl
popf
cli
mov
cdq
push
and
data16
fmul
daa
scas
icebp
sahf
fnsave
jp
mov
in
jae
dec
jae
adc
xchg
jnp
in
mov
cmc
aam
ficomp
mov
imul
sti
fwait
retf
out
mov
lea
test
loop
jl
adc
xor
cmp
jno
pop
pop
cdq
and
or
addr16
mov
cmp
pop
push
xchg
imul
jo
mov
mov
loopne
and
sbb
push
out
add
sub
add
inc
rcr
out
sahf
imul
fwait
push
mov
dec
sub
add
lds
push
xlat
add
add
adc
cmp
mov
nop
sub
push
mov
loop
mov
xchg
inc
rcl
dec
ret
mul
mov
lea
lods
fisub
push
pmullw
mov
push
mov
pop
pusha
and
or
shr
sti
fcomip
sbb
push
jg
cdq
jno
in
in
inc
jge
push
and
icebp
movs
frstor
rol
jo
pop
ins
lock
call
cmp
adc
xchg
pop
xor
mov
sbb
sub
