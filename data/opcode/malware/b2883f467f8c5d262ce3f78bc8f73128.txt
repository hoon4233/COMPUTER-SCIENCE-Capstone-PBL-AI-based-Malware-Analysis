jmp
mov
mov
and
test
mov
stc
sub
stc
not
jmp
mov
lea
mov
shl
mov
cmp
cmc
lea
stc
clc
xor
sub
clc
rol
sub
ror
cmp
cmp
test
xor
cmc
cmp
add
jmp
mov
inc
mov
add
test
stc
xor
jmp
mov
test
or
pop
popf
movsx
pop
movsx
jmp
and
jmp
push
ret
ror
cmp
stc
xor
cmp
add
jmp
mov
movsx
pushf
ror
sar
not
pop
shl
and
cmc
mov
cmc
jmp
shr
shl
mov
cmp
jmp
mov
cmp
bswap
sbb
mov
mov
mov
cmc
cmp
add
xor
stc
jmp
mov
bsf
and
shld
movzx
test
add
mov
cmc
mov
cmp
lea
cmp
xor
cmp
sub
rol
clc
cmp
sub
ror
test
xor
add
jmp
jmp
mov
and
mov
sub
cmp
add
jmp
mov
pushf
test
pop
mov
lea
jmp
sub
shl
jmp
cmc
add
jmp
test
xor
sub
rol
clc
cmp
stc
sub
ror
cmp
cmc
xor
jmp
jmp
mov
clc
mov
stc
jmp
clc
xor
test
clc
add
jmp
movzx
jmp
not
clc
and
jmp
inc
test
clc
neg
cmc
cmp
xor
jmp
sub
stc
rol
cmp
jmp
mov
xadd
movzx
mov
cmp
cmp
test
mov
shl
shr
mov
test
cmc
jmp
mov
mov
add
cmp
test
jmp
add
cmc
clc
not
clc
xor
sub
test
mov
inc
cmp
mov
add
test
cmp
xor
cmp
test
sub
cmc
rol
cmc
jmp
dec
jmp
add
jmp
cmc
sub
ror
xor
add
jmp
test
cmc
xor
add
jmp
ror
stc
cmc
xor
add
jmp
rol
jmp
test
test
sub
clc
ror
clc
xor
test
add
jmp
sub
rol
sub
jmp
xor
stc
clc
add
jmp
mov
movzx
xchg
pushf
test
pop
shrd
bsf
mov
add
cmc
xor
clc
test
cmc
sub
jmp
stc
add
jmp
mov
not
pushf
pop
bts
mov
jmp
add
cmp
xor
jmp
mov
pushf
rol
pop
bsf
rcr
mov
cmp
jmp
mov
lea
cmc
cmp
mov
adc
mov
mov
stc
cmp
lea
cmc
jmp
lea
stc
clc
xor
sub
rol
cmc
clc
sub
stc
cmc
ror
cmp
xor
add
jmp
inc
cmp
cmc
xor
jmp
test
sub
jmp
cmc
ror
cmp
clc
cmc
xor
add
jmp
add
test
xor
test
jmp
mov
test
mov
stc
lea
mov
mov
test
lea
stc
xor
sub
rol
sub
clc
ror
test
xor
jmp
clc
rol
stc
cmp
sub
ror
xor
test
add
jmp
movzx
cmc
lea
xor
jmp
mov
mov
stc
lea
cmp
not
not
and
mov
lahf
mov
pushf
pop
btc
sbb
mov
cmp
lea
clc
test
cmc
xor
stc
sub
stc
rol
stc
test
sub
stc
clc
ror
stc
clc
xor
cmp
stc
cmc
add
jmp
cmc
stc
rol
sub
stc
ror
clc
xor
add
jmp
rol
sub
ror
test
stc
xor
cmc
test
test
add
jmp
rol
cmp
cmp
sub
cmc
jmp
ror
cmp
stc
cmp
xor
jmp
movzx
add
xor
cmp
xor
jmp
lea
cmp
stc
cmc
xor
sub
jmp
cmc
ror
cmp
xor
test
add
jmp
xor
cmc
jmp
inc
cmc
test
neg
clc
xor
test
cmp
mov
clc
sub
stc
mov
neg
mov
cmp
test
lea
cmp
jmp
rol
test
jmp
jmp
movzx
jmp
clc
sub
clc
mov
clc
mov
stc
lea
xor
cmp
jmp
jmp
test
xor
add
jmp
mov
bts
neg
and
mov
add
xor
cmp
sub
stc
clc
rol
cmp
test
stc
sub
jmp
jmp
mov
movzx
add
cmp
test
mov
shl
adc
sar
mov
cmp
add
test
xor
cmc
sub
stc
rol
sub
jmp
mov
mov
add
mov
cmovne
jmp
xchg
call
mov
cmp
cmovne
mov
shrd
xor
pop
mov
clc
cmp
jmp
movzx
dec
sbb
mov
cmc
test
lea
cmp
test
jmp
lea
test
mov
mov
clc
cmp
cmc
add
xor
cmp
sub
rol
cmc
cmp
sub
cmc
ror
cmp
xor
add
push
ret
sub
stc
clc
rol
sub
clc
ror
cmp
xor
stc
test
cmc
add
jmp
jmp
movzx
shl
jmp
mov
mov
cmp
clc
add
cmp
cmc
xor
test
sub
jmp
sub
cmc
clc
rol
stc
sub
clc
stc
ror
xor
clc
add
jmp
mov
cmova
cbw
pushf
pop
neg
mov
cmp
cmc
cmp
lea
cmc
clc
xor
test
clc
sub
clc
cmc
rol
sub
jmp
jmp
mov
mov
movzx
pushf
add
lahf
pop
mov
add
clc
test
jmp
ror
clc
xor
jmp
pop
jmp
neg
clc
not
xor
jmp
rol
clc
sub
clc
jmp
movzx
test
stc
lea
clc
xor
stc
ror
jmp
clc
rol
cmc
sub
clc
stc
cmc
ror
stc
xor
test
stc
cmp
add
jmp
movzx
sar
rcl
lea
xor
dec
xchg
dec
xor
sub
rcl
mov
inc
not
sub
movsx
xor
shl
cmp
xor
or
bts
mov
test
test
add
mov
mov
jmp
cmp
sub
clc
stc
rol
test
cmp
test
sub
ror
cmp
xor
jmp
jmp
push
mov
movzx
xchg
push
push
push
jmp
xor
cmp
test
clc
sub
rol
clc
sub
stc
ror
cmp
cmp
xor
cmp
cmc
add
jmp
sub
stc
ror
cmp
clc
xor
add
jmp
jmp
mov
bt
mov
clc
cmp
not
stc
cmp
cmp
not
test
test
and
jmp
ror
clc
neg
not
stc
xor
test
cmp
movzx
cmp
stc
lea
cmp
clc
mov
cmp
and
mov
add
cmp
xor
stc
cmc
clc
sub
rol
sub
ror
test
clc
cmp
xor
test
add
jmp
push
ret
sub
cmc
ror
xor
test
cmc
add
jmp
movzx
test
add
xor
jmp
xor
add
jmp
clc
ror
xor
clc
jmp
push
ret
mov
stc
add
jmp
inc
jmp
push
ret
mov
mov
neg
mov
jmp
ror
jmp
mov
mov
test
jmp
mov
mov
cmp
lea
xor
cmp
sub
stc
rol
sub
ror
jmp
cmp
stc
xor
add
jmp
cmp
bswap
xor
jmp
add
jmp
adc
mov
stc
cmp
add
xor
sub
rol
cmp
cmp
sub
cmc
ror
xor
jmp
ror
xor
cmp
jmp
pop
shld
mov
cmp
add
cmp
stc
test
xor
jmp
clc
sub
clc
rol
sub
cmc
ror
jmp
test
lea
jmp
dec
jmp
lea
cmp
test
stc
mov
sub
rol
mov
clc
lea
stc
xor
clc
cmp
sub
rol
sub
clc
ror
xor
jmp
add
jmp
jmp
bsf
btc
mov
cmp
cmc
lea
cmc
test
mov
rcl
rol
mov
test
lea
cmp
xor
stc
clc
sub
rol
sub
ror
cmp
xor
clc
add
jmp
xor
clc
sub
jmp
jmp
dec
jmp
dec
xor
cmc
sub
clc
cmp
not
xor
stc
xor
test
jmp
sub
rol
sub
clc
ror
xor
cmp
test
jmp
sub
ror
jmp
rol
clc
jmp
mov
sets
pushf
sub
rol
pop
shl
mov
cmc
add
test
stc
xor
clc
cmp
sub
jmp
jmp
je
xor
jmp
mov
add
cmp
pop
btc
mov
popf
mov
pop
pop
movzx
pop
mov
pop
seto
jmp
xor
stc
sub
stc
rol
test
sub
clc
ror
cmc
test
jmp
test
stc
lea
xor
jmp
cmc
sub
clc
mov
xchg
test
mov
xadd
xor
rol
mov
mov
shrd
bsr
adc
pop
mov
cmp
jmp
not
cmc
xor
clc
lea
test
jmp
clc
sub
cmc
rol
jmp
mov
shl
bts
mov
test
cmc
add
cmc
jmp
movzx
mov
sub
add
mov
pushf
shl
pop
bt
shl
bswap
mov
lea
cmp
xor
jmp
rdtsc
lea
clc
cmp
cmc
mov
test
mov
cmp
shrd
mov
lea
jmp
jmp
mov
rcr
shr
ror
mov
lea
shl
mov
movzx
mov
pushf
mov
rol
sub
pop
shr
cbw
adc
mov
lea
stc
xor
sub
clc
jmp
sub
rol
cmp
sub
ror
cmc
xor
add
jmp
dec
cmp
jmp
push
ret
push
ret
push
ret
lea
mov
rcr
sbb
cmovp
mov
lea
jmp
rol
cmp
clc
cmc
sub
stc
ror
cmp
xor
test
add
jmp
xchg
push
jmp
cmp
sub
clc
ror
cmp
stc
test
xor
jmp
push
jmp
cmc
xor
stc
add
jmp
jmp
inc
stc
cmp
xor
jmp
mov
bswap
shl
mov
mov
test
mov
xor
mov
cmc
cmp
add
test
xor
clc
stc
cmc
sub
rol
sub
ror
cmp
xor
jmp
sub
stc
cmc
clc
ror
clc
xor
cmp
add
push
ret
push
ret
add
xor
test
sub
stc
jmp
ror
cmc
xor
cmc
clc
add
jmp
movzx
stc
movsx
add
rol
ror
xor
ror
rcl
not
rol
cmovne
dec
cmovbe
neg
dec
setno
xchg
inc
neg
sbb
movsx
shrd
xor
mov
stc
test
lea
clc
cmc
mov
mov
cmc
lea
stc
xor
stc
sub
jmp
push
ret
clc
ror
xor
cmp
clc
add
jmp
push
ret
movzx
sbb
sbb
and
lea
rcr
not
xor
stc
ror
ror
neg
jmp
cmc
rol
cmp
sub
ror
xor
add
jmp
movzx
add
sub
xor
xor
rcr
ror
cmp
rol
neg
xor
btr
not
xor
shr
mov
test
cmp
lea
cmc
cmp
mov
or
stc
btc
mov
jmp
rol
stc
sub
clc
cmc
stc
ror
xor
cmp
add
jmp
jmp
mov
bswap
mov
jmp
ror
stc
cmp
xor
add
jmp
neg
inc
neg
xor
cmp
mov
sub
mov
bt
sar
mov
clc
cmc
add
xor
cmp
sub
jmp
cmc
add
jmp
jmp
cmp
sub
cmc
jmp
ror
stc
clc
xor
test
add
push
ret
mov
mov
stc
cmc
cmp
lea
cmp
shr
jmp
test
xor
cmc
sub
clc
stc
rol
cmp
sub
ror
stc
test
xor
add
push
ret
ror
test
test
stc
xor
cmp
stc
clc
add
jmp
test
cmp
xor
sub
rol
cmc
sub
jmp
mov
sub
pop
btc
rcl
popf
pop
pop
movsx
xchg
pop
pop
cmovb
movzx
pop
xchg
movzx
pop
ret
mov
cwde
lahf
pushf
pop
sbb
or
mov
clc
add
test
xor
test
test
sub
cmc
clc
rol
jmp
mov
cmp
shr
mov
clc
add
cmp
cmc
sub
stc
test
jmp
movzx
cmp
stc
clc
add
stc
test
test
xor
cmc
stc
ror
not
rol
jmp
clc
rol
sub
stc
jmp
jmp
rol
stc
cmp
sub
ror
xor
add
jmp
mov
jmp
sub
clc
ror
test
xor
test
add
jmp
jmp
mov
mov
not
pushf
pop
cwde
mov
clc
cmp
add
test
xor
jmp
mov
mov
inc
rdtsc
pop
cdq
sbb
popf
not
jmp
xchg
push
jmp
cmc
rol
sub
cmc
ror
test
cmp
xor
jmp
mov
cmp
stc
lea
cmp
mov
stc
mov
add
jmp
test
mov
cmc
test
not
cmp
not
test
cmp
and
jmp
mov
nop
cmovo
movzx
pushf
pop
movsx
shld
cmp
mov
jmp
sbb
mov
cmp
sub
imul
jmp
add
stc
cmp
test
xor
sub
rol
cmc
sub
clc
cmc
ror
xor
test
test
add
jmp
movzx
mov
shrd
lea
clc
bsr
xor
jmp
push
ret
mov
sub
mov
xor
or
mov
cmp
jmp
call
mov
adc
adc
mov
mov
pop
mov
test
jmp
jmp
add
jmp
pushf
adc
mov
pop
sub
mov
lea
xor
stc
sub
rol
cmp
sub
ror
clc
xor
test
jmp
cmc
shl
jmp
movzx
cmp
jmp
test
mov
shrd
mov
cmp
test
lea
test
xor
test
sub
jmp
add
jmp
stc
ror
xor
cmc
add
jmp
mov
pushf
cbw
or
pop
mov
test
add
test
jmp
push
ret
push
ret
add
jmp
sub
clc
stc
rol
cmc
sub
stc
jmp
test
xor
test
sub
jmp
xor
add
jmp
not
pushf
pop
jmp
rdtsc
test
cmp
lea
jmp
rol
jmp
rol
cmp
test
sub
ror
cmp
xor
clc
test
add
jmp
xor
mov
sub
test
test
mov
mov
adc
mov
test
lea
cmp
test
stc
xor
cmc
sub
cmc
rol
cmp
test
sub
ror
xor
cmp
test
test
add
jmp
lea
cmc
mov
shld
shl
ror
mov
cmp
lea
xor
sub
jmp
clc
ror
add
stc
jmp
ror
add
xor
not
add
xor
seta
push
sbb
cmp
rcl
movzx
or
mov
lahf
bt
rcr
shl
sar
movzx
mov
stc
add
mov
test
je
xor
jmp
rol
jmp
cmc
rol
cmp
jmp
xchg
jmp
clc
rol
cmp
sub
ror
clc
xor
stc
add
jmp
jmp
sbb
mov
add
xor
jmp
mov
pushf
xor
bsr
pop
clc
shr
mov
cmp
lea
jmp
stc
xor
add
push
ret
pushf
pop
cmovns
sar
mov
lea
jmp
mov
bts
mov
cmp
test
not
jmp
mov
cmc
and
mov
lea
mov
sub
xadd
mov
lea
xor
cmp
stc
sub
stc
rol
cmp
test
sub
ror
jmp
mov
rcl
mov
mov
cmc
add
clc
test
shrd
mov
cmovo
cwde
not
pushf
pop
mov
test
lea
xor
cmc
cmp
sub
rol
cmp
sub
cmc
stc
ror
xor
add
jmp
sub
stc
ror
xor
cmc
add
jmp
jmp
mov
add
mov
stc
sub
cmp
cmp
shr
jmp
sub
jmp
jmp
mov
pushf
movsx
sar
pop
and
dec
mov
stc
cmp
add
xor
sub
clc
rol
sub
stc
ror
test
cmp
cmp
xor
clc
add
jmp
clc
rol
cmp
test
sub
cmc
jmp
mov
lea
mov
sub
shld
mov
add
cmc
test
xor
cmp
sub
cmc
clc
rol
sub
cmc
jmp
ror
jmp
mov
rcr
mov
cmc
lea
stc
mov
add
mov
cmp
stc
test
add
cmp
xor
cmp
sub
rol
jmp
jmp
cmc
sub
stc
rol
jmp
ror
jmp
sub
cmp
cmc
not
jmp
lea
cmp
xor
sub
cmc
rol
cmp
sub
ror
cmc
xor
cmp
cmp
test
add
jmp
xor
add
jmp
push
ret
jmp
jmp
xor
stc
add
jmp
jmp
movzx
cmp
jmp
mov
movzx
pushf
neg
pop
rcr
cmovns
movzx
mov
cmc
test
add
cmc
xor
sub
jmp
not
dec
cmp
clc
xor
sub
not
and
xor
cmovnp
cmp
rcl
xor
setge
mov
test
stc
lea
mov
ror
mov
jmp
test
cmp
sub
stc
rol
cmc
test
sub
clc
jmp
mov
movsx
ror
mov
jmp
jmp
mov
clc
cmp
test
add
cmp
stc
cmp
xor
clc
cmc
rol
bswap
xor
rol
not
jmp
rol
sub
jmp
movzx
pushf
pop
mov
jmp
jmp
mov
stc
movzx
mov
test
not
test
test
not
cmp
and
mov
not
movzx
pushf
lahf
rcr
pop
and
mov
add
xor
sub
rol
test
sub
jmp
lea
xor
jmp
mov
or
btr
mov
mov
sub
mov
jmp
jmp
ror
cmc
test
add
cmp
not
jmp
mov
pushf
cmc
inc
btr
pop
adc
sbb
shl
mov
test
cmp
clc
add
clc
xor
sub
clc
rol
cmp
sub
clc
cmc
stc
ror
xor
test
add
jmp
stc
xor
jmp
mov
rol
shld
mov
cmp
stc
clc
add
jmp
mov
cbw
bswap
xchg
pushf
bts
cmp
neg
pop
cmp
mov
cmc
cmp
lea
cmp
jmp
mov
mov
mov
stc
add
shld
jmp
push
ret
mov
pushf
neg
bswap
ror
pop
rcl
shr
btr
mov
test
stc
lea
xor
cmp
cmp
sub
rol
test
test
sub
stc
jmp
jmp
mov
bsr
mov
lea
mov
adc
adc
mov
mov
test
add
clc
cmp
xor
sub
jmp
je
push
bts
movzx
xor
and
mov
cmp
shr
xor
jmp
mov
xchg
mov
mov
cmp
lea
add
jmp
ror
stc
xor
add
jmp
jmp
dec
jne
pop
cmc
test
clc
not
stc
clc
mov
movzx
rcl
mov
cmp
clc
test
add
clc
test
xor
sub
rol
stc
cmp
sub
stc
ror
test
xor
add
jmp
xor
test
test
and
jmp
mov
rcr
xor
inc
mov
test
stc
lea
jmp
ror
cmp
xor
cmp
cmc
stc
add
jmp
test
add
jmp
add
clc
cmp
xor
sub
cmc
stc
rol
cmp
sub
clc
ror
test
clc
xor
add
jmp
jmp
not
cwde
pushf
add
xchg
inc
pop
mov
cmc
cmp
add
xor
test
sub
rol
sub
clc
jmp
movzx
cmp
cmp
lea
xor
jmp
mov
mov
cmp
add
xor
test
sub
cmc
stc
rol
sub
cmc
clc
ror
test
xor
test
add
jmp
push
ret
mov
ror
mov
test
cmc
mov
sar
movsx
mov
stc
add
cmc
test
xor
cmc
sub
cmc
stc
rol
sub
clc
ror
xor
cmp
cmc
add
push
ret
je
push
movzx
test
cmp
xor
clc
and
cmp
mov
shr
xor
jmp
rol
cmc
sub
clc
ror
clc
xor
add
jmp
push
ret
jmp
mov
movzx
mov
movsx
pushf
cbw
xchg
pop
cmovp
movsx
rcl
mov
add
jmp
xor
stc
cmc
add
jmp
mov
dec
rcl
mov
add
test
jmp
jne
pop
clc
cmp
not
mov
shl
cmovnp
mov
cmp
test
lea
cmp
xor
test
sub
rol
stc
jmp
stc
test
shr
jmp
jmp
cmp
clc
add
stc
cmp
xor
sub
cmc
rol
sub
jmp
clc
stc
add
jmp
sub
cmc
stc
rol
clc
cmp
sub
ror
test
jmp
xchg
jmp
mov
cwde
not
jmp
rdtsc
test
lea
test
mov
test
clc
mov
test
mov
cmp
jmp
ror
clc
xor
add
jmp
cmp
mov
mov
lea
jmp
lea
mov
adc
mov
clc
cmc
cmp
lea
test
cmc
xor
cmp
sub
clc
rol
stc
sub
jmp
ret
sub
cmc
ror
cmc
xor
cmp
add
jmp
mov
bsr
mov
cmp
stc
lea
clc
stc
cmc
xor
cmc
stc
test
je
push
xor
rcl
shld
movzx
xor
and
mov
jmp
jmp
movzx
add
test
xor
inc
cmp
xor
neg
jmp
push
ret
mov
setae
movzx
pushf
or
pop
mov
cmp
lea
jmp
jmp
cmp
xor
stc
test
add
jmp
add
xor
test
stc
sub
rol
cmp
sub
cmc
stc
ror
test
xor
add
jmp
xor
stc
rol
bswap
cmp
xor
clc
stc
rol
cmp
clc
test
not
test
cmc
xor
cmp
sub
cmp
mov
mov
stc
clc
lea
xor
test
clc
test
sub
rol
cmp
test
sub
ror
clc
test
xor
cmp
cmp
clc
add
jmp
movzx
lea
xor
neg
cmc
ror
jmp
cmc
sub
jmp
cmc
cmp
xor
add
jmp
mov
ror
bsr
mov
cmc
add
cmp
xor
jmp
jmp
mov
pushf
setbe
xadd
pop
cmp
ror
mov
add
xor
stc
sub
rol
clc
test
sub
ror
cmp
jmp
mov
mov
cmp
add
mov
shl
mov
test
cmp
add
cmp
test
cmc
xor
cmp
stc
sub
cmc
rol
sub
clc
stc
cmc
ror
test
stc
jmp
cmp
cmc
lea
test
cmp
xor
sub
cmc
rol
sub
clc
ror
xor
test
add
jmp
mov
mov
mov
shld
shr
or
mov
cmc
lea
xor
sub
rol
test
cmp
sub
stc
clc
ror
clc
jmp
test
sub
stc
clc
rol
sub
jmp
rol
sub
ror
xor
cmp
add
push
ret
clc
rol
sub
jmp
mov
xchg
movsx
bswap
pushf
shld
not
pop
cmp
bt
shl
mov
jmp
mov
xadd
ror
not
mov
test
cmp
mov
sar
ror
sbb
mov
add
test
cmc
jmp
ror
xor
jmp
lea
jmp
rol
sub
clc
jmp
mov
mov
rol
sub
mov
sub
add
jmp
xor
sub
rol
cmc
test
cmp
sub
cmc
ror
xor
add
jmp
jmp
push
ret
mov
shr
mov
cmc
stc
jmp
je
push
movzx
xor
stc
cmp
and
clc
jmp
mov
mov
cwde
mov
cmove
pushf
pop
mov
cmp
lea
xor
test
jmp
rol
jmp
movzx
test
jmp
ror
cmc
xor
add
jmp
dec
test
xor
cmc
test
sub
clc
not
test
stc
xor
stc
xor
mov
lea
clc
cmp
stc
mov
jmp
mov
btr
stc
mov
add
jmp
mov
mov
mov
add
clc
shrd
jmp
push
ret
movzx
rol
mov
sub
add
jmp
jmp
ror
stc
xor
jmp
ror
jmp
mov
xor
push
adc
cmp
cpuid
cmp
test
stc
sub
test
test
mov
mov
sbb
test
mov
btc
xadd
rcr
mov
cmp
ror
rol
pop
sbb
mov
jmp
mov
stc
cmp
lea
cmp
shr
jmp
clc
rol
stc
clc
sub
jmp
jmp
cmc
mov
movsx
inc
mov
cmp
test
lea
test
xor
test
clc
cmp
sub
cmc
rol
clc
sub
ror
jmp
push
dec
jmp
mov
mov
cmp
clc
lea
cmp
shl
jmp
jmp
mov
mov
cwde
movzx
pushf
jmp
cmc
xor
sub
rol
jmp
push
ret
sub
rol
clc
cmc
stc
sub
jmp
mov
shr
bts
mov
clc
stc
lea
sub
clc
jmp
cmc
rol
sub
ror
test
cmc
xor
clc
cmc
add
jmp
mov
cmc
sub
mov
mov
cmc
test
clc
lea
cmp
xor
sub
rol
clc
test
sub
cmc
jmp
xor
cmc
add
jmp
clc
stc
rol
sub
ror
xor
add
jmp
sub
rol
jmp
jmp
mov
adc
dec
mov
cmp
jmp
mov
mov
cmc
clc
mov
mov
jmp
rol
test
jmp
push
ret
cmp
sub
cmc
rol
test
cmc
clc
sub
jmp
inc
stc
xor
test
neg
jmp
jmp
mov
mov
clc
jmp
ror
xor
clc
add
push
ret
cmp
cmp
sub
jmp
mov
pushf
pop
mov
test
stc
clc
lea
xor
test
sub
clc
jmp
lea
test
xor
sub
jmp
cmp
sub
cmc
rol
sub
jmp
sub
rol
clc
sub
clc
ror
stc
xor
add
jmp
push
ret
movzx
mov
dec
mov
clc
cmp
lea
stc
test
imul
jmp
dec
jmp
push
ret
je
sub
jmp
movzx
add
stc
cmp
xor
jmp
xor
jmp
mov
bsf
mov
jmp
test
sub
mov
mov
clc
lea
jmp
mov
bt
shl
or
mov
cmc
lea
mov
rol
shl
mov
cmp
stc
cmp
add
test
xor
sub
cmc
rol
clc
cmc
sub
jmp
jmp
ror
test
cmp
xor
cmp
add
jmp
stc
ror
clc
jmp
mov
shr
mov
add
cmp
stc
mov
bswap
movsx
mov
stc
add
test
xor
sub
rol
test
sub
ror
clc
xor
stc
cmc
jmp
cmc
sub
jmp
mov
pushf
pop
ror
btr
cmc
mov
add
test
cmp
xor
sub
jmp
movzx
mov
sub
test
imul
jmp
sub
jmp
jmp
xor
clc
cmp
mov
test
lea
stc
mov
btc
mov
clc
lea
cmp
xor
cmp
sub
jmp
sub
clc
ror
xor
clc
test
add
jmp
movzx
dec
shr
sar
mov
test
sub
cmp
cmc
shr
mov
pushf
rcr
shl
bt
pop
nop
mov
lea
clc
cmp
test
xor
jmp
dec
xor
clc
lea
jmp
stc
cmc
rol
sub
ror
xor
add
jmp
lea
shr
jmp
push
ret
mov
mov
cmc
mov
btc
lahf
mov
clc
test
lea
xor
test
sub
clc
cmc
rol
sub
cmc
clc
jmp
xchg
jmp
sub
jmp
stc
ror
cmp
xor
cmp
jmp
xor
sub
jmp
mov
clc
cmp
add
jmp
mov
cmp
xor
xor
mov
cmc
sub
clc
not
not
cmp
and
jmp
mov
pushf
pop
mov
test
add
xor
cmp
clc
sub
rol
stc
sub
ror
xor
cmc
cmp
add
jmp
mov
pushf
bswap
pop
cmp
inc
mov
cmp
jmp
movzx
seta
clc
rcl
add
test
shr
xor
cmp
neg
cdq
xchg
bt
ror
test
movzx
add
not
bts
xor
btc
push
rcl
movzx
cwde
mov
cmc
sub
bt
shl
dec
add
bts
mov
stc
test
add
test
stc
mov
jmp
cmc
add
jmp
mov
shld
bsf
movzx
stc
jmp
cmc
rol
cmp
sub
ror
xor
cmp
add
jmp
mov
adc
xor
rcl
mov
test
lea
cmc
cmp
shr
jmp
xor
cmp
cmp
mov
stc
clc
test
sub
mov
not
mov
stc
clc
lea
test
xor
sub
cmc
jmp
ror
xor
cmp
add
jmp
cmp
xor
sub
jmp
cmp
xor
jmp
xor
test
add
jmp
cmc
clc
rol
sub
cmc
ror
xor
add
jmp
mov
bt
sub
mov
add
test
jmp
xor
clc
jmp
movzx
lea
cmp
not
xor
dec
sar
xor
cmp
movsx
cmp
sub
not
sub
bt
test
xor
add
cmp
xor
xor
cmovge
mov
test
add
jmp
lea
cmp
test
clc
xor
clc
test
sub
jmp
jmp
mov
bt
mov
cmp
add
cmp
mov
rcl
bts
rcr
mov
lea
jmp
mov
mov
jmp
cmc
cmp
lea
cmc
cmp
xor
jmp
cmc
ror
cmp
clc
test
xor
test
cmc
test
add
jmp
stc
xor
test
sub
cmc
jmp
cmp
cmc
lea
cmp
xor
jmp
shl
jmp
not
cmp
and
jmp
inc
neg
cmp
xor
jmp
push
ret
movzx
cmc
btr
cmp
lea
xadd
xor
rol
neg
ror
rcr
sar
add
not
rcr
xadd
xor
shl
push
add
movzx
and
cbw
mov
shl
mov
jmp
cmp
xor
test
clc
sub
jmp
sub
rol
test
sub
clc
ror
jmp
stc
rol
clc
cmp
sub
clc
stc
ror
jmp
mov
xchg
mov
clc
cmp
lea
mov
bsf
mov
cmp
lea
cmp
xor
clc
cmp
sub
rol
stc
jmp
test
cmc
lea
test
cmc
xor
sub
jmp
test
xor
cmp
jmp
mov
rcl
mov
cmp
mov
shld
adc
mov
add
stc
clc
xor
jmp
push
ret
cmc
rol
cmc
clc
sub
cmc
clc
ror
test
xor
cmp
add
push
ret
mov
mov
clc
lea
shr
jmp
mov
shl
stc
movzx
jmp
rol
clc
sub
ror
xor
jmp
lea
jmp
xchg
jmp
jmp
clc
lea
xor
jmp
mov
test
jmp
mov
rcl
neg
clc
mov
add
test
xor
test
sub
rol
stc
sub
cmc
ror
cmc
xor
stc
test
add
jmp
mov
mov
cmp
cmp
lea
cmp
not
stc
cmp
test
not
and
jmp
jmp
mov
jmp
dec
clc
cmp
neg
inc
neg
cmc
jmp
rdtsc
cmc
lea
test
mov
test
test
mov
mov
cmp
stc
lea
xor
cmp
sub
jmp
rol
jmp
mov
cmovle
jmp
mov
rol
mov
jmp
movzx
shl
btc
lea
shr
shl
xor
dec
xor
and
sbb
sub
shl
or
not
xadd
cmovnp
bswap
xor
sub
neg
adc
xor
bt
sub
ror
mov
cmc
jmp
rol
sub
stc
jmp
mov
mov
setl
cwde
pushf
cmp
rcl
pop
sar
rcl
ror
mov
cmp
cmc
lea
test
xor
sub
rol
sub
stc
ror
cmp
clc
xor
test
add
jmp
test
add
test
clc
cmp
mov
ror
xadd
mov
add
xor
cmc
sub
cmc
clc
rol
cmp
sub
clc
cmc
ror
clc
jmp
mov
clc
lea
cmp
mov
mov
lea
jmp
jmp
lea
xor
cmc
sub
clc
rol
jmp
test
add
jmp
cmp
lea
jmp
neg
cmc
not
cmp
xor
test
movzx
stc
sub
mov
mov
sub
mov
cmp
lea
test
cmp
xor
cmp
stc
sub
rol
sub
ror
jmp
ror
xor
cmp
add
jmp
mov
cwde
bswap
pushf
shrd
xadd
sub
pop
shl
dec
mov
jmp
xor
cmp
test
add
push
ret
clc
ror
xor
test
add
push
ret
test
cmp
xor
cmc
cmp
cmp
add
jmp
sub
jmp
jmp
mov
rcl
shl
mov
jmp
stc
test
lea
xor
clc
cmc
sub
jmp
lea
test
clc
xor
sub
rol
sub
ror
cmp
cmc
xor
stc
add
jmp
sub
jmp
ror
test
test
xor
add
jmp
ror
xor
test
add
push
ret
movzx
jmp
add
jmp
add
jmp
test
sub
jmp
push
ret
mov
bswap
mov
cmc
lea
mov
bswap
add
shr
mov
test
add
xor
cmc
sub
clc
jmp
ror
test
jmp
movzx
mov
lea
stc
clc
add
jmp
movzx
rcr
bsf
ror
lea
bswap
xor
shld
rcr
rol
xor
mov
setge
ror
cmc
neg
btr
not
xor
xadd
mov
cmp
test
add
test
cmc
clc
mov
dec
mov
clc
cmp
add
clc
jmp
jmp
xor
sub
rol
test
sub
clc
ror
test
cmc
xor
test
add
jmp
xor
add
jmp
jmp
jmp
xor
clc
test
add
jmp
jmp
xor
clc
add
jmp
mov
rol
mov
test
jmp
dec
xor
clc
cmp
sub
not
clc
test
xor
cmc
xor
stc
cmc
test
mov
sub
mov
cbw
cmp
bt
mov
lea
clc
test
xor
jmp
jmp
mov
cmc
add
mov
lea
cmc
mov
ror
mov
stc
jmp
rol
sub
clc
stc
ror
xor
cmc
cmp
test
add
jmp
sub
stc
test
add
jmp
movzx
add
mov
sub
test
cmp
not
not
and
jmp
jmp
mov
add
mov
test
cmc
lea
mul
jmp
add
jmp
ror
cmc
jmp
mov
stc
clc
lea
mov
movzx
cmovb
mov
test
lea
test
xor
jmp
mov
mov
add
cmc
mov
cmp
cmp
mov
test
cmp
lea
xor
test
test
sub
clc
cmc
rol
test
cmc
cmp
sub
ror
xor
stc
cmc
add
jmp
mov
pushf
shr
cmc
pop
xor
mov
lea
xor
clc
cmp
sub
clc
jmp
push
ret
add
xor
neg
cmc
jmp
jne
pop
cmc
jmp
mov
clc
test
movzx
add
mov
ror
shl
or
mov
stc
add
cmp
xor
sub
stc
jmp
add
xor
sub
clc
rol
jmp
rol
test
cmp
clc
sub
jmp
movzx
mov
test
lea
shr
jmp
mov
cmc
rcr
mov
stc
cmc
cmp
add
clc
xor
test
sub
rol
cmp
test
sub
jmp
movzx
shl
xadd
mov
cmc
clc
sub
cmc
clc
add
jmp
movzx
stc
dec
add
mov
test
lea
clc
shl
jmp
pushf
btr
xor
pop
mov
cmp
stc
cmp
lea
stc
xor
sub
jmp
mov
xor
rol
test
mov
clc
stc
test
add
cmp
test
xor
sub
clc
cmc
rol
sub
ror
cmc
clc
xor
cmp
test
add
jmp
test
xor
sub
rol
cmc
sub
cmc
ror
jmp
ror
test
stc
xor
cmc
add
jmp
dec
rol
or
xor
or
sub
inc
btc
not
rcl
bswap
xor
xor
or
ror
mov
stc
jmp
rol
cmc
stc
sub
jmp
jmp
ror
clc
xor
add
jmp
rol
clc
cmc
cmp
sub
cmc
ror
xor
add
push
ret
mov
not
cwde
mov
pushf
jmp
inc
xor
cmp
neg
jmp
mov
cmp
mov
jmp
clc
cmp
ja
mov
cbw
shl
mov
not
lea
cmp
cmc
and
sub
jmp
inc
xor
dec
jmp
rol
test
sub
cmc
ror
cmp
xor
cmp
cmp
add
jmp
movzx
stc
cmc
lea
cmp
test
xor
xor
ror
jmp
jmp
push
ret
sub
ror
clc
xor
add
jmp
mov
sar
rol
mov
stc
lea
mov
mov
cmp
stc
add
test
xor
sub
clc
jmp
jmp
cbw
pushf
setne
shl
xor
pop
mov
test
lea
clc
jmp
jmp
mov
cmc
btc
btr
mov
add
mov
mov
cmp
clc
jmp
jmp
mov
dec
mov
lea
xor
sub
cmc
rol
cmc
test
stc
sub
stc
ror
cmc
xor
test
clc
add
jmp
add
jmp
cmc
test
sub
stc
cmc
rol
sub
stc
jmp
mov
lahf
pushf
clc
sbb
pop
mov
cmp
clc
add
test
xor
test
sub
cmc
rol
clc
sub
stc
ror
test
xor
cmp
add
jmp
je
xor
jmp
movzx
test
lea
cmp
test
xor
xor
stc
ror
neg
cmp
clc
not
xor
cmp
clc
cmp
movzx
stc
sub
mov
mov
add
stc
cmc
xor
stc
sub
stc
rol
cmp
stc
sub
cmc
ror
xor
add
jmp
jmp
mov
shrd
sbb
mov
mov
lea
shrd
jmp
cmp
mov
cmp
cmc
add
xor
sub
rol
jmp
mov
mov
movzx
pushf
pop
sub
mov
add
cmc
test
xor
sub
clc
cmc
rol
cmc
sub
jmp
mov
mov
stc
test
sub
shl
jmp
sub
ror
xor
test
cmc
jmp
mov
stc
cdq
push
cdq
shr
cpuid
sub
test
jmp
test
add
jmp
mov
shl
shr
mov
test
test
mov
clc
adc
setg
mov
test
add
xor
test
jmp
movzx
mov
cmp
sub
imul
jmp
jmp
jmp
jmp
mov
stc
mov
sub
clc
shr
jmp
cmc
mov
sbb
movzx
mov
lea
xor
clc
cmp
sub
rol
sub
clc
stc
ror
xor
cmp
add
push
ret
pop
cmovno
pop
pop
pop
pop
jmp
cmc
xor
clc
add
jmp
test
xor
jmp
jmp
mov
jmp
test
xor
sub
clc
mov
mov
cmp
add
test
stc
xor
stc
test
sub
rol
sub
stc
ror
test
xor
cmc
cmp
add
jmp
cmp
clc
sub
jmp
clc
xor
test
sub
cmc
rol
cmp
sub
clc
ror
clc
jmp
test
cmc
lea
cmc
shld
mov
pushf
stc
cwde
pop
movzx
sbb
cmovnp
mov
test
clc
add
clc
xor
sub
cmc
rol
test
sub
ror
cmp
cmc
xor
jmp
mov
neg
cdq
bsf
pop
neg
stc
popf
movzx
not
mov
pop
movsx
pop
pop
movsx
setge
pop
pop
pop
jmp
test
stc
shl
mov
pushf
rcr
pop
mov
add
stc
cmc
test
xor
stc
test
sub
rol
sub
stc
ror
jmp
cmc
ror
clc
xor
cmc
cmp
clc
add
jmp
mov
rol
rcr
mov
add
jmp
stc
xor
sub
rol
test
jmp
mov
jmp
ror
clc
xor
add
jmp
mov
mov
lea
stc
test
cmc
shl
mov
lahf
pushf
movsx
pop
cbw
sar
cmp
mov
lea
jmp
mov
btc
mov
not
not
test
clc
and
jmp
mov
rol
movzx
shr
mov
cmc
add
jmp
jmp
push
ret
dec
jmp
jmp
sub
cmc
rol
sub
ror
clc
test
xor
cmp
jmp
test
stc
lea
jmp
mov
test
bt
mov
cmc
add
xor
cmp
sub
stc
rol
cmp
test
sub
stc
ror
test
cmc
cmp
xor
cmc
add
jmp
movzx
movsx
cwd
ror
lea
rcl
cdq
sbb
xor
and
bts
neg
btr
movzx
rcl
ror
test
rcl
add
not
or
shl
xor
test
shl
cmp
push
cmc
cmp
sub
movzx
rcl
btr
mov
movsx
sar
shl
rcr
mov
cmc
stc
add
mov
test
je
xor
xchg
jmp
cmc
sub
clc
jmp
clc
ror
cmp
clc
xor
stc
cmc
cmp
add
jmp
mov
mov
mov
cmc
sub
test
shl
jmp
xor
stc
neg
cmc
jmp
ror
cmp
xor
cmc
add
jmp
cmc
cmp
mov
mov
jmp
test
add
jmp
rol
jmp
mov
cwde
pushf
pop
shld
and
mov
jmp
jmp
lea
test
mov
and
rcr
mov
test
cmp
stc
add
jmp
mov
mov
cmp
stc
lea
mov
sub
cwde
mov
cmc
clc
lea
cmp
xor
cmp
sub
rol
test
sub
cmc
stc
ror
cmp
xor
clc
add
jmp
mov
mov
lea
cmp
mov
mov
stc
add
cmc
xor
test
jmp
jmp
xor
add
jmp
inc
jmp
lea
cmp
stc
xor
sub
stc
rol
clc
test
sub
clc
ror
clc
cmc
xor
jmp
jmp
rol
sub
ror
clc
xor
add
jmp
nop
pop
bswap
cmp
stc
mov
add
xor
test
jmp
mov
btr
shld
mov
sub
clc
mul
jmp
mov
mov
sub
test
cmc
shr
mov
pushf
pop
mov
clc
add
xor
jmp
jmp
cmp
cmp
sub
ror
cmc
xor
stc
cmp
add
jmp
xor
cmc
clc
add
jmp
xor
add
jmp
movzx
add
stc
cmp
xor
stc
neg
jmp
movzx
cmovle
dec
and
lea
xor
rcl
ror
ror
clc
rcr
not
not
cmc
bt
rol
dec
dec
btr
bt
bts
neg
mov
inc
xchg
neg
xor
shl
mov
lea
test
mov
sub
xor
mov
test
add
cmc
cmp
xor
sub
stc
rol
cmp
test
sub
ror
jmp
mov
shr
ror
mov
cmp
test
sub
clc
shr
jmp
mov
jmp
push
ret
clc
cmc
rol
jmp
cmp
cmp
neg
jmp
movzx
mov
lea
stc
shl
jmp
mov
mov
stc
lea
test
jmp
add
xor
stc
sub
stc
jmp
add
jmp
mov
or
mov
lea
mov
or
btr
mov
add
test
clc
cmc
xor
sub
rol
test
clc
cmp
sub
ror
xor
clc
cmp
add
jmp
ror
cmp
cmc
clc
xor
jmp
jmp
xor
cmp
cmc
clc
add
jmp
xor
add
push
ret
clc
ror
stc
xor
stc
test
add
jmp
mov
mov
mov
jmp
inc
test
cmc
cmp
xor
test
test
stc
neg
jmp
clc
xor
stc
cmp
sub
clc
rol
sub
cmc
ror
stc
cmp
xor
stc
add
jmp
stc
rol
cmp
clc
sub
ror
test
xor
cmp
add
push
ret
mul
jmp
jmp
movzx
rcl
add
xor
ror
ror
rcr
not
rol
not
dec
and
rcl
dec
neg
inc
neg
clc
xor
xor
sub
mov
add
cmp
stc
mov
test
cmp
mov
cmp
stc
clc
lea
jmp
push
ret
mov
clc
test
lea
test
clc
xor
rol
cmp
jmp
mov
xor
adc
mov
rol
mov
mov
clc
lea
clc
test
shld
mov
pushf
or
or
bts
pop
sub
movzx
mov
stc
add
test
stc
xor
sub
stc
cmc
rol
sub
ror
cmc
test
xor
add
jmp
cmp
sub
clc
jmp
xor
jmp
jmp
xchg
call
mov
btr
sar
rcr
mov
bts
dec
pop
mov
lea
xor
sub
rol
clc
sub
ror
xor
cmp
test
add
jmp
jmp
movzx
lea
stc
xor
xor
cmc
clc
ror
jmp
inc
jmp
mov
bts
mov
test
cmp
add
clc
stc
jmp
push
ret
mov
cmp
test
mov
test
cmp
lea
sub
test
jmp
ror
not
clc
rol
jmp
mov
jmp
mov
xadd
mov
cmp
add
mov
mov
cmp
clc
lea
test
xor
clc
sub
cmc
rol
stc
cmc
sub
cmc
ror
test
xor
add
jmp
clc
mov
mov
lea
xor
clc
test
sub
clc
rol
cmp
sub
stc
clc
ror
jmp
ror
xor
cmp
test
clc
add
jmp
inc
test
xor
dec
jmp
mov
test
add
jmp
push
ret
push
ret
dec
jmp
jmp
mov
mov
sub
cmc
shr
mov
lahf
movzx
pushf
test
movsx
rcl
pop
shl
cmp
mov
lea
stc
test
xor
sub
rol
sub
ror
clc
xor
add
jmp
test
clc
sub
rol
clc
sub
ror
xor
stc
add
jmp
ror
not
rcl
rol
dec
neg
inc
rcr
cmc
neg
cmc
xor
shr
sub
sbb
mov
test
lea
jmp
cmovns
pop
xchg
pop
jmp
cmp
sub
cmc
stc
rol
sub
ror
test
jmp
xor
test
jmp
jmp
rdtsc
cmp
jmp
cmp
sub
ror
xor
add
jmp
rdtsc
sub
mov
mov
ror
movzx
mov
stc
lea
xor
test
sub
stc
rol
sub
ror
cmp
xor
test
add
jmp
movzx
cmc
test
add
xor
jmp
jmp
jmp
cmp
mov
neg
rol
mov
bt
shl
movsx
mov
btr
mov
xchg
stc
pop
bsf
lahf
shld
mov
clc
cmc
test
add
xor
test
sub
stc
rol
test
jmp
lea
cmc
test
mov
lahf
jmp
mov
movsx
pushf
rol
btr
pop
lahf
bts
mov
jmp
mov
ror
clc
mov
jmp
ror
jmp
cmp
add
cmc
stc
xor
stc
sub
jmp
cmp
shld
lea
popf
mov
stc
test
add
cmp
test
xor
test
jmp
add
jmp
push
ret
test
add
xor
cmc
clc
sub
stc
jmp
movzx
cmp
lea
clc
xor
jmp
jne
pop
test
not
jmp
mov
xor
mov
lea
cmp
clc
test
mov
and
bswap
cwde
mov
jmp
cmc
clc
mov
bsr
xadd
mov
cmc
lea
xor
sub
rol
sub
stc
ror
xor
clc
test
add
jmp
cmc
lea
cmp
cmc
xor
test
sub
jmp
movzx
test
shl
mov
sub
jmp
jmp
sub
cmc
ror
xor
cmp
add
jmp
mov
sub
not
cmp
not
stc
cmp
cmc
and
jmp
test
add
mov
adc
sub
stc
mov
jmp
movzx
lea
cmc
xor
dec
cmp
cmp
xor
jmp
push
ret
dec
stc
cmp
xor
sub
test
mov
mov
cmc
add
test
xor
cmc
sub
rol
sub
cmc
ror
test
clc
xor
test
test
add
jmp
xor
cmp
sub
cmc
rol
stc
cmp
sub
ror
cmp
test
xor
cmp
cmp
add
jmp
xor
add
jmp
mov
sar
shl
mov
cmp
test
lea
stc
cmc
shl
jmp
xor
jmp
mov
cmp
lea
cmc
stc
mov
sar
mov
add
xor
test
sub
clc
rol
sub
ror
xor
cmp
stc
add
jmp
jmp
mov
or
ror
cmc
mov
cmp
cmp
mov
mov
cmp
lea
cmc
xor
cmc
test
sub
cmc
rol
jmp
rol
test
test
sub
stc
ror
cmp
test
clc
xor
add
jmp
mov
jmp
cmc
xor
cmp
add
jmp
stc
lea
cmp
not
clc
not
cmp
jmp
xor
test
add
jmp
jmp
push
ret
mov
sub
shl
mov
cmp
sub
cmp
test
cmc
shl
jmp
stc
rol
stc
test
sub
clc
jmp
mov
pushf
rol
pop
mov
lea
cmp
test
xor
sub
stc
clc
rol
cmc
sub
clc
ror
cmc
xor
add
jmp
movzx
clc
lea
xor
neg
jmp
push
ret
cmc
xor
add
jmp
mov
neg
sar
push
rcr
cpuid
lea
cmp
cmc
mov
mov
bsf
jmp
mov
cmc
test
sub
cmc
mov
rol
cmovbe
xor
mov
cmc
clc
add
test
xor
cmp
sub
rol
clc
sub
ror
jmp
cmp
sub
cmc
ror
test
clc
xor
stc
clc
test
add
jmp
add
jmp
stc
sub
cmc
rol
jmp
movzx
shl
mov
stc
cmp
cmc
sub
cmp
clc
test
not
test
jmp
pushf
not
pop
movzx
rcr
mov
add
test
xor
sub
rol
sub
cmc
clc
ror
jmp
stc
ror
cmp
test
xor
add
jmp
mov
mov
lea
xor
test
clc
jmp
mov
bt
btr
shrd
mov
test
cmp
cmp
mov
shl
bts
mov
add
cmp
xor
cmp
sub
cmc
jmp
mov
mov
clc
cmc
lea
clc
mul
jmp
cmp
sub
stc
cmc
jmp
je
sub
jmp
add
jmp
jmp
ror
cmp
xor
cmc
cmp
add
jmp
mov
bts
sar
mov
lea
cmp
xor
sub
rol
cmp
cmc
cmp
sub
ror
xor
test
jmp
add
stc
clc
test
xor
cmp
sub
rol
cmp
sub
clc
cmc
ror
xor
cmp
add
jmp
movzx
inc
sbb
add
rcr
xor
xchg
ror
movzx
ror
not
rol
movzx
not
jmp
xor
clc
sub
jmp
sub
cmc
rol
test
sub
ror
cmp
cmc
xor
cmp
add
jmp
xor
inc
clc
xor
test
neg
jmp
jmp
cmc
xor
add
jmp
mov
setle
or
shl
mov
jmp
jmp
stc
rol
cmc
jmp
clc
rol
clc
sub
ror
xor
cmc
clc
add
jmp
mov
pushf
pop
cbw
mov
add
test
xor
jmp
mov
test
cmc
lea
clc
cmc
stc
mov
bts
cmovge
mov
add
xor
sub
rol
cmc
sub
cmc
ror
cmc
test
xor
jmp
xor
test
clc
add
jmp
xor
clc
cmp
add
jmp
dec
xor
jmp
jmp
mov
sbb
clc
sar
mov
mov
movsx
bsr
mov
add
xor
cmp
cmc
sub
rol
clc
sub
stc
ror
xor
stc
add
jmp
mov
not
cmovge
pushf
jmp
rol
stc
sub
jmp
sub
rol
test
stc
cmp
sub
ror
cmc
clc
cmp
xor
stc
add
jmp
mov
jmp
mov
not
shl
rcl
mov
stc
jmp
jmp
mov
mov
cmc
stc
test
add
mov
neg
or
bts
mov
test
add
cmp
test
stc
xor
cmp
test
test
sub
clc
rol
test
clc
sub
ror
jmp
test
xor
sub
rol
sub
ror
xor
test
add
jmp
movzx
jmp
add
jmp
xor
test
sub
clc
stc
rol
stc
clc
sub
clc
ror
jmp
movzx
lea
xor
cmp
xor
rcr
ror
clc
neg
bswap
not
test
xor
xor
rcl
add
btr
mov
clc
add
test
stc
clc
mov
bt
xor
rcr
mov
lea
xor
jmp
cmp
test
sub
ror
xor
jmp
movzx
cmc
cmp
lea
cmp
jmp
rol
cmp
test
cmc
sub
ror
cmp
stc
xor
stc
cmp
add
push
ret
mov
adc
shl
btc
mov
test
jmp
movzx
shr
xchg
mov
sub
cmp
jmp
mov
pushf
rcl
adc
pop
mov
test
lea
test
test
xor
sub
rol
sub
stc
clc
ror
stc
xor
test
cmc
stc
add
jmp
mov
pushf
test
bswap
pop
shr
mov
lea
cmp
xor
test
cmp
sub
rol
jmp
jmp
clc
test
sub
cmc
rol
sub
stc
ror
cmc
xor
test
add
jmp
mov
sbb
bt
mov
clc
cmc
lea
cmp
cmp
mov
rol
mov
lea
stc
test
xor
jmp
pushf
bswap
sar
pop
btc
mov
lea
cmp
test
clc
xor
sub
cmc
rol
cmp
cmp
sub
stc
cmc
ror
cmc
cmp
xor
add
jmp
jmp
stc
ror
cmp
test
xor
clc
add
jmp
movzx
ror
mov
clc
lea
not
test
stc
not
cmp
stc
and
mov
mov
mov
pushf
ror
rol
cmovp
pop
mov
stc
cmp
cmp
lea
jmp
ror
xor
add
jmp
cmp
cmc
mov
setge
movzx
cmove
mov
cmp
cmc
add
test
cmc
xor
cmc
sub
cmc
rol
cmp
cmp
sub
cmc
stc
jmp
movzx
test
add
cmc
cmp
jmp
push
jmp
stc
cmp
mov
lea
mov
cwde
or
shld
mov
test
lea
xor
sub
rol
sub
stc
jmp
mov
rcl
mov
test
test
lea
test
xor
sub
clc
rol
clc
sub
ror
cmc
jmp
mov
cwde
movsx
lahf
pushf
rcl
pop
add
mov
test
cmp
lea
test
xor
sub
jmp
pushf
not
mov
push
jmp
xor
jmp
inc
xor
jmp
movzx
rcl
lea
xchg
xor
btc
bswap
ror
jmp
mov
shl
mov
cmp
add
test
xor
clc
jmp
neg
jmp
cmp
xor
jmp
xor
stc
ror
cmc
not
clc
cmc
rol
jmp
cmp
sub
ror
cmp
cmc
jmp
jmp
add
test
test
cmp
mov
bt
mov
add
cmp
xor
stc
cmc
sub
clc
rol
cmc
cmp
sub
cmc
ror
cmp
test
xor
cmc
clc
add
push
ret
rol
test
test
sub
cmc
jmp
not
cmp
xor
cmp
cmp
lea
jmp
mov
cmovae
mov
pushf
btr
pop
shrd
btr
mov
cmp
cmc
add
jmp
mov
nop
mov
btr
mov
mov
mov
lea
xor
test
cmc
sub
rol
sub
jmp
cmp
xor
cmp
cmc
add
jmp
dec
jmp
ror
clc
xor
jmp
mov
sbb
mov
test
lea
cmp
xor
stc
sub
rol
test
cmp
cmc
sub
ror
test
xor
stc
add
jmp
mov
rcr
mov
cmp
add
jmp
mov
not
mov
cmp
sub
cmp
jmp
clc
cmc
add
jmp
cmp
test
add
jmp
stc
sub
rol
stc
test
cmc
sub
stc
cmc
ror
cmp
clc
xor
clc
cmp
add
jmp
cmp
add
cmc
test
clc
xor
sub
rol
clc
cmp
test
sub
ror
cmc
cmp
xor
stc
add
jmp
mov
mov
clc
cmc
lea
xor
test
jmp
test
test
xor
stc
add
push
ret
mov
mov
lahf
pushf
mov
shl
pop
shl
mov
mov
lea
test
cmc
cmp
xor
test
clc
sub
rol
cmp
clc
sub
ror
clc
cmp
xor
add
jmp
movzx
mov
test
cmp
lea
cmc
cmp
imul
mov
pushf
rcl
ror
pop
mov
jmp
xchg
jmp
mov
mov
test
test
add
mov
mov
cmp
stc
add
cmp
test
cmp
xor
clc
cmp
sub
clc
jmp
test
neg
jmp
ror
cmp
xor
cmp
add
jmp
rol
cmc
test
sub
ror
clc
test
xor
add
jmp
jmp
jmp
sub
stc
ror
test
stc
xor
jmp
lea
cmp
cmp
xor
cmp
cmc
sub
rol
cmp
stc
sub
ror
xor
stc
clc
add
jmp
mov
adc
mov
stc
clc
add
cmc
cmp
mov
mov
stc
lea
cmc
xor
test
sub
clc
rol
jmp
mov
sbb
mov
ror
mov
clc
cmp
add
shld
mov
not
pushf
sbb
shr
inc
pop
neg
mov
cmp
test
add
test
clc
xor
sub
cmc
rol
test
cmp
sub
ror
cmc
cmp
xor
test
add
jmp
stc
cmc
add
jmp
rol
cmc
clc
sub
ror
cmc
xor
add
push
ret
add
jmp
clc
ror
xor
cmp
test
add
jmp
lea
jmp
jmp
rol
dec
cmc
clc
neg
jmp
sub
cmp
cmc
clc
shl
mov
cwde
bswap
pushf
ror
rol
pop
not
rol
mov
add
xor
cmc
jmp
sub
ror
xor
test
add
jmp
mov
xor
mov
cmc
clc
lea
mov
xor
mov
lea
test
cmp
xor
cmp
stc
sub
clc
stc
rol
sub
stc
ror
xor
add
push
ret
cmc
shrd
jmp
ror
test
xor
add
jmp
xor
cmp
sub
cmc
rol
cmp
sub
stc
ror
xor
test
cmc
add
jmp
sub
cmc
stc
ror
cmc
cmp
clc
xor
add
jmp
jmp
xor
stc
sub
cmc
rol
test
cmp
sub
clc
ror
xor
test
jmp
sub
rol
cmp
sub
clc
jmp
mov
mov
clc
stc
mov
shrd
shl
mov
add
xor
sub
clc
cmc
rol
sub
cmc
ror
jmp
push
ret
clc
ror
xor
cmp
add
jmp
lea
test
jmp
test
bswap
cmp
cmp
xor
clc
rol
cmc
not
xor
test
cmp
lea
stc
clc
mov
btc
mov
add
clc
cmp
xor
clc
sub
jmp
movzx
xor
add
xor
dec
bsr
mov
xor
sub
bts
not
shld
mov
cmp
xor
xor
ror
mov
stc
test
add
mov
sbb
bts
dec
mov
clc
cmp
lea
xor
jmp
sub
clc
stc
jmp
xor
clc
add
jmp
cmc
ror
test
xor
clc
add
jmp
cmc
add
xor
jmp
mov
xor
mov
lea
test
mov
mov
lea
cmc
xor
cmc
test
sub
clc
rol
sub
clc
cmc
jmp
mov
lahf
movzx
add
test
cmc
test
mov
mov
add
xor
sub
cmc
clc
rol
test
stc
sub
stc
cmc
ror
xor
add
jmp
rol
sub
jmp
push
btr
shrd
add
rcr
clc
shl
popf
rcl
inc
mov
cmp
add
test
xor
clc
test
sub
rol
sub
ror
stc
test
xor
stc
cmp
add
jmp
mov
test
sub
mov
mov
add
clc
xor
cmp
cmp
sub
stc
cmc
clc
rol
sub
clc
ror
xor
cmp
add
jmp
mov
btc
sar
mov
test
add
jmp
mov
and
movzx
clc
jmp
mov
mov
test
sub
test
stc
cmp
shr
jmp
jmp
mov
dec
shld
or
mov
cmp
not
cmp
jmp
cwde
pushf
btr
and
pop
test
xadd
or
mov
stc
add
xor
sub
cmc
jmp
mov
test
shr
push
cpuid
stc
cmc
jmp
cbw
pushf
shrd
shl
btc
pop
mov
add
xor
test
sub
rol
clc
stc
sub
ror
cmp
xor
clc
test
add
jmp
lea
test
stc
cmp
xor
stc
sub
jmp
mov
rol
rcl
mov
mov
cmp
lea
test
shld
jmp
test
cmp
lea
xor
ror
jmp
rol
cmp
test
sub
stc
cmc
ror
stc
xor
clc
add
jmp
jmp
mov
btc
rcr
mov
test
add
jmp
ror
clc
stc
xor
clc
add
jmp
jmp
mov
bt
xor
or
mov
test
add
clc
stc
sub
stc
cmc
test
je
push
movzx
xor
and
mov
test
test
shr
cmp
xor
jmp
ror
add
not
cmc
xor
jmp
jne
sub
jmp
ret
stc
test
xor
stc
jmp
mov
bt
mov
mov
clc
cmp
lea
cmp
test
shld
mov
mov
jmp
movzx
add
xor
jmp
mov
ror
xchg
xadd
mov
jmp
test
mov
rcl
mov
mov
sbb
mov
adc
pop
sub
shr
mov
lea
xor
sub
stc
jmp
push
ret
sub
cmc
clc
ror
test
xor
cmp
stc
add
jmp
jmp
rol
cmp
sub
ror
cmp
clc
xor
add
push
ret
push
ret
xor
test
test
add
push
ret
mov
rcl
mov
cmc
sub
stc
add
jmp
pop
pop
pop
xchg
mov
pop
pop
seta
movzx
pop
ret
rol
jmp
mov
test
mov
lea
test
cmp
cmp
mov
mov
setg
mov
cmc
test
add
cmp
cmc
xor
cmp
test
jmp
movzx
test
add
stc
test
xor
test
cmc
neg
jmp
jmp
jmp
add
jmp
mov
or
mov
cmc
test
lea
jmp
jmp
add
clc
test
xor
sub
cmc
rol
sub
ror
xor
add
jmp
test
lea
stc
cmp
clc
mov
bsr
add
bt
mov
jmp
movzx
adc
mov
cmp
lea
clc
shl
mov
mov
pushf
sbb
pop
btc
mov
mov
lea
cmp
xor
jmp
jmp
mov
pushf
shl
bts
btr
pop
shld
movzx
test
mov
test
lea
cmp
stc
cmc
xor
test
cmp
sub
cmc
rol
cmc
stc
sub
clc
jmp
mov
bt
and
mov
stc
lea
xor
cmc
jmp
mov
jmp
jmp
clc
cmc
sub
rol
cmp
sub
jmp
jmp
jmp
clc
cmc
rol
test
clc
sub
ror
cmc
xor
jmp
xor
test
test
cmp
add
jmp
mov
sub
mov
lea
cmc
clc
test
mul
mov
jmp
mov
pop
rcr
test
popf
cdq
mov
pop
pop
mov
not
bswap
pop
movzx
pop
not
cmovle
pop
bswap
mov
pop
jmp
sub
rol
stc
jmp
cmc
rol
jmp
mov
mov
lea
mov
mov
add
cmc
xor
clc
jmp
cmp
sub
ror
test
cmc
stc
xor
add
jmp
dec
jmp
mov
movzx
mov
test
jmp
jmp
mov
mov
mov
jmp
push
ret
pushf
rol
add
pop
movsx
and
adc
mov
add
xor
cmp
cmc
test
sub
rol
sub
jmp
add
test
cmc
mov
mov
cmc
lea
cmp
xor
sub
cmc
rol
cmp
sub
clc
jmp
mov
mov
mov
add
mov
mov
add
xor
jmp
mov
shld
bsr
cmp
mov
clc
stc
lea
cmp
xor
jmp
movzx
cmp
clc
lea
xor
test
neg
clc
ror
cmp
cmc
add
cmc
jmp
cmp
add
jmp
movzx
sbb
mov
jmp
jmp
mov
mov
lea
jmp
stc
cmc
rol
sub
ror
xor
cmp
cmc
cmp
add
jmp
cmp
mov
cmova
mov
test
lea
cmp
test
xor
sub
clc
rol
sub
ror
test
test
xor
cmp
clc
jmp
rol
cmp
jmp
cmp
lea
mov
bt
sub
mov
clc
lea
xor
cmc
cmp
sub
stc
clc
rol
sub
ror
jmp
add
jmp
jmp
mov
ror
clc
mov
lea
shr
jmp
stc
add
jmp
inc
bsf
mov
add
test
cmp
xor
test
sub
stc
cmc
rol
sub
clc
ror
cmp
cmp
xor
add
jmp
push
ret
cmc
ror
xor
cmp
test
add
jmp
add
jmp
jmp
ror
jmp
mov
pushf
pop
mov
clc
test
lea
test
xor
cmp
jmp
rol
jmp
cmc
ror
cmp
xor
add
jmp
mov
jmp
mov
mov
add
cmp
mov
adc
mov
lea
xor
cmc
cmp
sub
rol
test
cmp
sub
stc
clc
ror
cmc
jmp
jmp
sub
rol
cmc
sub
cmc
ror
jmp
mov
xor
mov
bt
movzx
lea
stc
jmp
mov
bswap
mov
sub
clc
test
cmp
add
jmp
jmp
push
cbw
lea
rcr
popf
cbw
mov
test
cmp
lea
cmp
test
cmc
xor
cmp
jmp
jmp
jmp
mov
mov
jmp
mov
test
add
clc
xor
jmp
rol
cmc
clc
sub
jmp
rdtsc
sub
mov
cmp
mov
cmovb
xor
mov
add
xor
test
clc
cmc
sub
stc
clc
rol
cmc
stc
sub
ror
stc
cmp
xor
test
cmc
add
jmp
jmp
rol
clc
cmp
sub
clc
jmp
push
ret
mov
cmp
lea
xor
clc
cmp
sub
rol
jmp
sub
clc
stc
rol
sub
stc
clc
ror
test
xor
add
jmp
jmp
push
ret
jmp
movzx
add
sar
xor
cmp
xor
ror
shl
rol
sar
neg
test
sub
bt
not
sub
ror
xor
sub
cmp
bt
mov
add
cmp
stc
mov
mov
lea
xor
cmp
sub
clc
cmc
rol
test
cmc
sub
ror
clc
xor
clc
test
add
jmp
push
ret
mov
cmp
mov
stc
add
cmc
mov
and
mov
stc
lea
stc
cmp
test
xor
clc
jmp
xor
test
cmc
cmp
sub
cmc
rol
test
cmp
sub
jmp
mov
movzx
xchg
movsx
pushf
pop
mov
cmp
test
lea
xor
sub
stc
cmc
rol
cmp
stc
sub
stc
ror
cmc
test
xor
cmp
cmp
add
jmp
mov
xchg
and
mov
lea
mov
btc
mov
add
clc
xor
test
sub
stc
cmc
rol
stc
cmp
sub
clc
ror
cmc
xor
jmp
xor
add
jmp
push
ret
push
ret
mov
bsf
bt
mov
cmp
cmc
jmp
jmp
lea
mov
movsx
rol
bt
mov
jmp
mov
add
shl
shl
push
shr
rcr
bt
cpuid
sub
cmp
cmp
mov
shr
shl
shl
mov
or
cmove
neg
mov
adc
mov
shl
pop
not
btc
clc
mov
cmp
test
lea
xor
cmp
test
sub
clc
stc
jmp
mov
movsx
cwde
cbw
pushf
bt
test
pop
shld
mov
lea
jmp
mov
cmc
test
stc
lea
mov
xor
mov
add
stc
jmp
mov
adc
mov
test
mov
shl
xadd
add
mov
lea
xor
jmp
push
ret
cmp
xor
cmp
clc
sub
stc
clc
rol
sub
jmp
mov
bsr
ror
mov
test
lea
stc
mov
ror
inc
mov
cmp
add
xor
sub
stc
rol
jmp
sub
test
jmp
ror
xor
add
jmp
add
jmp
cmp
lea
stc
cmp
test
mov
mov
test
lea
clc
cmp
xor
sub
jmp
push
ret
test
sub
rol
test
sub
ror
cmc
xor
add
jmp
mov
sar
add
not
mov
test
add
jmp
rol
jmp
cmc
xor
cmp
add
push
ret
lea
cmc
test
cmp
mov
bsr
btc
cbw
mov
test
add
xor
cmp
sub
jmp
stc
rol
sub
stc
ror
xor
test
jmp
je
push
not
clc
movzx
xor
and
cmp
mov
shr
xor
jmp
dec
jmp
movzx
rcl
cmp
mov
cmp
sub
add
jmp
dec
jmp
mov
cmovo
shld
jmp
cmc
xor
jmp
xor
cmp
movzx
clc
sub
mov
inc
ror
mov
lea
cmc
stc
xor
sub
clc
rol
cmc
jmp
mov
jmp
cmove
mov
stc
cmp
add
jmp
mov
cmc
bts
cmp
movzx
add
cmp
mov
movsx
mov
add
cmp
clc
xor
test
stc
sub
stc
cmc
rol
cmc
sub
clc
ror
cmc
xor
test
cmc
test
add
jmp
movzx
xchg
and
inc
add
mov
bswap
xor
shl
stc
sub
xor
clc
ror
bts
shl
neg
movsx
rcr
bts
not
btr
xor
btc
mov
test
add
test
mov
setnp
lahf
mov
add
xor
jmp
mov
mov
btr
mov
add
jmp
clc
ror
cmp
stc
cmc
xor
add
jmp
mov
or
btc
mov
cmp
stc
add
clc
jmp
ror
clc
cmp
jmp
movzx
shr
adc
lea
xor
setb
jmp
mov
mov
setae
movzx
pushf
xadd
bt
pop
and
mov
cmp
add
xor
test
sub
rol
sub
ror
cmc
cmp
xor
add
jmp
jmp
jmp
shr
jmp
rol
sub
stc
ror
test
cmc
xor
add
jmp
stc
rol
cmp
test
clc
sub
clc
ror
test
xor
test
add
jmp
push
add
and
shl
popf
add
bts
lahf
mov
stc
cmp
lea
xor
stc
sub
clc
rol
test
sub
jmp
clc
test
sub
cmc
rol
sub
ror
stc
cmc
xor
add
jmp
jmp
inc
cmp
neg
xor
mov
test
test
sub
mov
and
bsf
test
mov
test
cmc
add
cmp
test
jmp
cmp
xor
stc
cmc
add
jmp
sub
cmc
stc
jmp
mov
xor
mov
jmp
lea
xor
clc
stc
rol
clc
bswap
cmc
xor
rol
not
test
test
clc
xor
jmp
jmp
sub
clc
stc
ror
clc
xor
add
jmp
jmp
mov
sub
sar
pop
test
shld
popf
not
mov
pop
setb
jmp
lea
shl
jmp
lea
test
xor
cmc
sub
clc
rol
jmp
test
cmp
imul
jmp
rol
test
test
sub
jmp
sub
cmp
test
jmp
sub
rol
clc
sub
jmp
movzx
jmp
jmp
xor
sub
rol
sub
ror
xor
cmp
add
push
ret
clc
xor
stc
sub
jmp
stc
ror
xor
test
test
add
jmp
rol
cmp
test
sub
clc
cmc
ror
test
cmp
cmp
xor
clc
add
jmp
lea
shr
jmp
sub
ror
cmp
xor
cmp
add
push
ret
push
ret
movzx
sar
bswap
mov
lea
or
xor
seto
dec
shl
xor
rol
xor
shr
sub
not
xor
sar
or
xor
rcr
mov
stc
lea
mov
shl
mov
stc
jmp
sub
jmp
mov
btr
add
clc
push
clc
shl
shl
cpuid
clc
stc
lea
mov
or
add
mov
ror
mov
movzx
adc
mov
sub
sub
pop
sar
sar
mov
cmp
test
add
cmp
jmp
xor
test
test
add
jmp
rdtsc
test
jmp
sets
pushf
btc
btr
inc
pop
mov
jmp
cmc
add
jmp
stc
shr
mov
pushf
pop
cmp
mov
lea
xor
test
clc
sub
rol
test
sub
jmp
stc
rol
sub
stc
ror
test
xor
test
clc
add
jmp
mov
xchg
cbw
pushf
cbw
or
shr
pop
and
mov
cmp
clc
cmp
add
clc
xor
sub
rol
cmp
sub
ror
test
jmp
call
mov
shl
mov
and
sbb
pop
jmp
ror
cmp
jmp
sub
clc
rol
sub
stc
jmp
mov
mov
sub
cmc
shr
jmp
clc
stc
movzx
sub
mov
mov
test
lea
cmc
test
xor
cmp
sub
rol
test
cmp
sub
cmc
stc
jmp
movzx
not
mov
clc
cmc
cmp
lea
shr
mov
lahf
movzx
pushf
btr
pop
xor
mov
add
clc
jmp
lea
cmc
cmp
xor
cmp
test
sub
cmc
stc
rol
jmp
movzx
mov
sub
clc
shl
mov
movsx
not
bswap
pushf
pop
not
mov
stc
add
xor
clc
sub
clc
rol
sub
cmc
ror
cmc
jmp
mov
clc
mov
test
mov
sar
btr
mov
mov
clc
stc
add
jmp
cmp
lea
mov
movzx
cbw
mov
stc
lea
jmp
xor
test
sub
cmc
jmp
stc
imul
jmp
mov
sub
mov
test
mov
stc
lea
cmp
cmc
shld
jmp
mov
shl
shr
add
mov
test
lea
mov
and
mov
test
test
add
stc
test
xor
cmp
cmp
test
sub
jmp
mov
mov
jmp
mov
pushf
pop
btr
clc
mov
lea
xor
cmp
test
sub
cmc
clc
rol
sub
jmp
inc
xor
jmp
sub
ror
xor
cmp
add
jmp
dec
stc
jmp
mov
jmp
not
movsx
mov
mov
jmp
cmp
xor
jmp
cmc
ror
cmc
test
xor
test
cmp
add
jmp
jmp
ror
clc
xor
test
cmc
add
jmp
test
xor
clc
cmp
cmc
add
jmp
test
jmp
mov
mov
cmp
stc
sub
clc
mul
jmp
stc
shr
mov
jmp
ror
cmp
xor
add
jmp
push
ret
mov
rcr
mov
lea
test
stc
add
mov
pushf
bts
pop
btc
xadd
mov
cmp
stc
lea
cmp
stc
xor
jmp
ror
xor
stc
test
cmp
add
push
ret
mov
mov
clc
test
cmp
lea
shr
jmp
cmc
stc
ror
clc
jmp
mov
rol
xor
mov
cmp
sub
test
clc
not
cmp
test
not
cmc
jmp
stc
xor
rol
stc
cmp
bswap
cmc
xor
cmc
clc
rol
cmc
not
test
xor
test
test
jmp
clc
rol
cmp
sub
clc
stc
ror
xor
jmp
stc
xor
clc
jmp
mov
mov
add
sar
xadd
mov
add
cmp
stc
test
shrd
jmp
pushf
shr
not
pop
cmp
rcl
rcl
mov
clc
stc
cmp
add
xor
sub
clc
jmp
jmp
jmp
mov
shr
stc
xor
jmp
clc
test
not
jmp
movzx
clc
cmp
stc
lea
clc
xor
xor
ror
clc
neg
not
cmc
xor
movzx
sub
cmp
mov
btr
mov
test
cmp
add
test
cmp
xor
cmp
jmp
movzx
mov
clc
test
sub
test
shr
mov
movzx
pushf
clc
pop
mov
clc
cmp
add
xor
test
stc
sub
rol
cmp
sub
stc
ror
cmp
xor
add
jmp
mov
pushf
pop
mov
cmp
add
xor
sub
clc
rol
sub
jmp
ror
clc
xor
add
jmp
clc
movzx
cmp
cmc
sub
stc
mov
bt
mov
add
cmp
test
xor
sub
rol
sub
ror
jmp
cmp
clc
shr
cmc
jmp
dec
jmp
lea
cmc
cmp
mov
test
rcr
mov
stc
clc
add
test
cmp
cmp
xor
test
sub
rol
stc
sub
ror
xor
add
jmp
test
add
xor
stc
sub
stc
clc
rol
jmp
test
add
cmp
xor
sub
clc
stc
rol
cmp
sub
ror
clc
test
xor
add
jmp
sub
stc
ror
test
xor
clc
cmp
add
jmp
jmp
push
ret
rol
cmp
clc
cmc
sub
jmp
mov
mov
clc
sub
jmp
jmp
cmp
neg
test
not
jmp
jmp
mov
mov
movzx
pushf
sar
cmc
pop
stc
sar
mov
lea
cmp
xor
cmp
cmc
sub
stc
rol
sub
stc
clc
ror
xor
add
jmp
ret
sub
rol
sub
clc
ror
cmc
test
xor
cmp
test
add
jmp
mov
lahf
bswap
pushf
shrd
pop
mov
lea
stc
jmp
cmp
add
jmp
dec
cmp
cmc
test
xor
cmp
jmp
cmc
add
jmp
xor
add
jmp
cmp
add
cmc
xor
sub
cmc
rol
sub
ror
cmc
test
xor
add
jmp
mov
mov
stc
add
cmp
jmp
mov
setno
bsr
mov
jmp
test
xor
cmp
cmc
sub
clc
rol
sub
ror
stc
xor
stc
test
cmp
add
push
ret
clc
cmc
not
jmp
clc
add
jmp
stc
add
xor
cmp
sub
rol
clc
sub
ror
xor
stc
cmp
add
jmp
lea
cmp
stc
cmc
mov
test
cmp
test
je
xor
jmp
sub
cmc
rol
clc
sub
clc
ror
xor
add
jmp
mov
ror
mov
cmc
add
cmp
mov
mov
cmc
stc
clc
lea
jmp
mov
bsf
mov
add
jmp
push
ret
ror
xor
test
add
jmp
mov
rcl
mov
lea
cmc
clc
mov
mov
clc
add
cmc
jmp
test
sub
ror
clc
xor
cmc
test
add
jmp
mov
cmp
or
mov
lea
stc
jmp
add
cmc
xor
sub
rol
sub
cmc
ror
xor
stc
add
jmp
sub
stc
rol
jmp
neg
cmp
xor
mov
test
sub
cmc
mov
xor
mov
test
add
xor
sub
stc
jmp
stc
xor
clc
movzx
cmp
test
lea
test
mov
rcl
mov
cmc
cmp
add
test
test
xor
sub
jmp
cmp
sub
jmp
mov
movsx
pushf
pop
mov
lea
cmp
xor
test
cmc
sub
jmp
ror
xor
cmp
test
add
jmp
stc
clc
add
jmp
mov
rol
mov
cmp
add
test
mov
shl
mov
shrd
mov
add
xor
sub
cmc
jmp
jne
pop
not
cmc
mov
shrd
mov
cmp
add
stc
test
cmp
xor
sub
clc
jmp
jmp
movzx
mov
cmp
sub
shr
jmp
push
ret
movzx
cmp
bts
add
and
ror
xor
rcl
neg
ror
rcl
btr
add
not
not
xor
push
movzx
mov
add
movsx
shl
lahf
adc
btc
mov
cmc
jmp
clc
test
sub
stc
ror
stc
jmp
movzx
test
clc
lea
xor
dec
cmc
cmp
test
xor
clc
sub
clc
not
xor
cmp
xor
jmp
mov
lahf
sets
bswap
pushf
pop
and
jmp
mov
shl
mov
stc
cmc
add
xor
cmp
sub
cmc
jmp
mov
sar
cmovl
cbw
mov
lea
mov
shld
mov
test
lea
xor
cmc
jmp
mov
cmp
sub
clc
mov
rcr
stc
jmp
mov
push
btr
cpuid
test
clc
sub
jmp
adc
mov
rol
mov
mov
cmp
lea
stc
shrd
mov
movsx
mov
pushf
pop
mov
cmp
add
xor
sub
clc
rol
jmp
add
jmp
ror
cmp
cmc
xor
clc
add
jmp
movzx
cmp
add
cmp
xor
jmp
stc
clc
sub
cmc
clc
rol
cmp
cmp
sub
clc
stc
ror
jmp
jmp
movzx
lea
xor
clc
ror
not
stc
rol
jmp
mov
mov
test
stc
sub
jmp
mov
mov
cmp
sub
shl
mov
pushf
dec
lahf
test
pop
bt
mov
lea
xor
sub
stc
rol
cmp
sub
clc
cmc
stc
ror
test
cmp
xor
test
clc
add
jmp
ror
xor
jmp
test
mov
mov
add
clc
xor
jmp
mov
jmp
mov
cwde
pushf
mov
pop
rcr
mov
jmp
clc
stc
mov
movzx
cwde
mov
test
cmc
test
lea
jmp
rol
clc
jmp
mov
adc
cwd
rcr
mov
mov
stc
jmp
xor
jmp
mov
mov
test
lea
cmc
mov
sar
cmove
mov
stc
cmp
lea
xor
test
clc
cmp
sub
rol
stc
sub
cmc
stc
ror
xor
cmc
clc
jmp
clc
add
jmp
mov
movsx
and
btc
mov
jmp
dec
cmp
test
neg
inc
test
neg
jmp
movzx
stc
clc
cmp
add
cmp
xor
xor
cmc
clc
ror
neg
not
xor
cmc
clc
movzx
sub
stc
clc
mov
bts
mov
add
cmp
xor
clc
cmp
test
sub
rol
cmc
sub
ror
test
xor
cmp
cmp
add
jmp
mov
movsx
movzx
jmp
cwde
pushf
cmovl
shl
pop
cwde
mov
test
clc
lea
clc
xor
test
sub
cmc
stc
rol
test
sub
stc
ror
test
xor
add
jmp
mov
xchg
setge
mov
lea
mov
shl
mov
clc
cmp
lea
cmp
xor
cmc
sub
jmp
test
and
jmp
movzx
bts
sbb
add
cmp
xadd
xor
rol
bswap
ror
cmovno
not
rol
mov
movzx
dec
xchg
neg
inc
shrd
rcr
neg
rcr
xor
bts
xadd
mov
add
mov
shr
btr
mov
clc
cmp
cmp
lea
cmp
jmp
jmp
push
ret
movzx
mov
cmc
jmp
jmp
cmc
sub
jmp
jmp
call
mov
rcl
test
mov
sar
pop
or
mov
lea
xor
test
sub
rol
test
sub
clc
ror
cmp
xor
add
jmp
stc
mov
shr
test
cmp
xor
jmp
jmp
mov
shrd
clc
mov
test
add
stc
test
clc
xor
sub
clc
rol
clc
sub
ror
xor
add
jmp
jmp
push
ret
dec
jmp
xchg
jmp
movzx
rcr
mov
lea
shr
jmp
not
test
and
jmp
sub
jmp
cmc
xor
cmp
neg
jmp
mov
sbb
shrd
mov
jmp
movzx
lea
xor
rcl
ror
not
movsx
rcl
rcr
rol
setns
movzx
dec
and
neg
seto
xchg
inc
btr
neg
xor
neg
shld
mov
add
test
mov
sbb
shl
mov
test
jmp
xor
cmp
jmp
mov
sbb
mov
cmp
clc
add
cmp
test
mov
shr
mov
cmp
add
cmc
cmp
xor
sub
rol
jmp
mov
movzx
cmp
lea
test
mov
rcr
shl
shrd
mov
add
xor
sub
stc
jmp
mov
clc
test
jmp
neg
jmp
mov
or
rcr
and
mov
test
lea
cmp
mov
mov
rcr
bsf
mov
test
cmp
add
xor
sub
clc
rol
test
stc
sub
stc
clc
ror
jmp
jmp
push
ret
mov
dec
bts
adc
push
rcl
test
cpuid
test
cmp
sub
stc
jmp
jmp
xor
add
jmp
mov
adc
mov
test
add
cmp
xor
stc
test
jmp
push
ret
mov
add
mov
add
clc
test
xor
sub
rol
cmc
clc
test
sub
clc
cmc
ror
test
jmp
mov
movsx
mov
test
stc
test
sub
stc
not
not
and
jmp
cmc
sub
clc
rol
cmp
sub
cmc
stc
ror
xor
cmp
jmp
add
cmc
test
not
test
test
xor
sub
stc
mov
cmc
mov
test
clc
cmp
add
xor
sub
rol
test
sub
jmp
and
mov
pushf
btc
pop
inc
rcr
mov
lea
clc
cmp
test
xor
cmp
sub
rol
sub
ror
stc
test
xor
cmc
cmp
test
add
jmp
call
mov
sbb
mov
pop
rol
test
mov
lea
xor
cmc
clc
sub
jmp
mov
jmp
jmp
dec
cmp
cmp
xor
cmp
cmp
stc
sub
not
jmp
movzx
movzx
bts
lea
sbb
sar
movsx
xor
jmp
rol
test
cmp
sub
stc
cmc
ror
test
xor
clc
add
push
ret
jmp
jmp
cmc
ror
cmp
xor
add
jmp
jmp
jmp
cmc
clc
add
cmp
cmc
xor
sub
stc
rol
sub
clc
ror
xor
add
jmp
movzx
dec
mov
cmp
cmp
test
lea
jmp
jmp
jmp
mov
sub
mov
or
rcr
mov
add
test
jmp
ret
push
ret
mov
bswap
pushf
rol
pop
neg
rcl
ror
mov
test
lea
stc
xor
sub
clc
jmp
jmp
jmp
jmp
add
jmp
mov
adc
mov
clc
add
mov
xchg
pushf
btr
pop
mov
test
clc
lea
stc
cmc
xor
test
test
sub
clc
rol
clc
sub
ror
clc
cmc
xor
add
push
ret
cmp
test
sub
rol
test
sub
cmc
ror
xor
add
jmp
jmp
rol
cmc
sub
ror
xor
stc
jmp
mov
cbw
jmp
movzx
lea
cmova
xor
xchg
xor
xor
ror
rcr
sar
neg
not
setp
mov
xor
mov
cmp
clc
test
add
test
mov
mov
test
cmp
add
jmp
mov
mov
lea
jmp
jmp
cmp
cmp
xor
clc
cmp
add
jmp
mov
not
movzx
pushf
cbw
cwde
pop
ror
movzx
mov
cmp
stc
add
xor
cmp
test
sub
cmc
rol
sub
ror
xor
test
stc
add
jmp
xor
cmc
add
jmp
jmp
mov
xchg
mov
test
cmp
lea
test
shl
mov
lahf
pushf
or
bsf
bswap
pop
sbb
mov
cmp
add
cmp
cmc
xor
cmc
cmp
sub
clc
stc
rol
cmc
cmp
stc
sub
ror
test
xor
add
jmp
movzx
shr
adc
rol
mov
cmp
test
sub
shl
mov
jmp
inc
test
stc
xor
cmc
neg
jmp
mov
jmp
cmp
sub
rol
cmc
sub
jmp
mov
mov
test
cmc
add
mov
shl
ror
mov
lea
xor
sub
rol
cmp
test
sub
ror
xor
add
jmp
add
jmp
mov
movzx
pushf
bt
pop
add
mov
jmp
rol
cmp
sub
ror
cmc
stc
cmp
xor
add
jmp
jmp
jmp
lea
cmc
test
xor
cmp
sub
rol
cmp
sub
ror
test
xor
add
jmp
sub
rol
jmp
push
ret
dec
jmp
mov
pushf
sbb
xadd
or
pop
movsx
mov
cmp
add
test
cmp
xor
test
cmp
stc
sub
clc
cmc
stc
rol
sub
stc
ror
jmp
mov
mov
movzx
cmp
test
lea
test
cmp
clc
mov
add
mov
clc
cmp
lea
xor
jmp
xor
sub
clc
stc
rol
sub
stc
ror
jmp
jne
xor
jmp
movzx
mov
test
sub
not
not
and
jmp
dec
clc
xor
stc
jmp
mov
movzx
pushf
pop
xor
neg
mov
jmp
test
add
jmp
xor
sub
jmp
xor
add
jmp
mov
adc
rcr
mov
stc
add
test
xor
sub
jmp
ror
add
not
cmp
test
xor
sub
mov
bts
cwde
mov
cmc
clc
lea
clc
xor
cmp
sub
clc
rol
sub
ror
cmc
xor
test
cmp
stc
add
jmp
jmp
mov
cwde
pushf
pop
setp
mov
clc
lea
xor
test
jmp
movzx
shl
mov
cmp
test
lea
cmp
stc
shl
mov
sete
cbw
not
pushf
cwde
lahf
bsr
pop
shl
mov
cmp
lea
jmp
rol
jmp
stc
sub
rol
sub
cmc
ror
xor
add
jmp
mov
lahf
cmovs
pushf
pop
bsr
mov
test
add
xor
test
sub
rol
clc
sub
ror
xor
add
jmp
ror
clc
xor
jmp
jmp
ror
cmp
jmp
jmp
mov
mov
cmp
jmp
mov
cmp
test
stc
lea
jmp
mov
not
mov
test
jmp
mov
bswap
not
cmovle
pushf
neg
xor
pop
shl
mov
test
add
cmp
xor
sub
clc
rol
sub
ror
xor
add
jmp
jmp
jmp
mov
movzx
add
stc
clc
mov
mov
lea
xor
sub
rol
clc
sub
cmc
stc
ror
xor
cmc
clc
add
jmp
lea
xor
sub
rol
clc
sub
clc
ror
test
test
xor
clc
cmc
add
jmp
movzx
lea
mov
xor
dec
add
xor
xor
sub
bsr
not
shld
sub
xor
cmp
xor
mov
stc
cmc
mov
clc
add
cmp
test
clc
mov
mov
jmp
dec
jne
xor
xchg
call
mov
mov
ror
pop
sub
xchg
mov
add
cmp
clc
xor
sub
jmp
test
sub
shr
jmp
jmp
mov
pop
xor
popf
jmp
mov
and
movsx
xadd
mov
cmp
sub
mul
mov
mov
mov
lahf
cmovne
pushf
pop
sar
bsr
dec
mov
cmc
lea
xor
test
sub
rol
cmp
clc
jmp
movzx
clc
cmc
lea
cmc
mov
mov
cmp
stc
add
cmp
xor
test
sub
clc
rol
cmp
sub
clc
stc
ror
test
cmc
xor
add
jmp
mov
bsf
movsx
mov
mov
cmc
stc
add
clc
test
mov
sar
shr
cmovg
mov
cmp
jmp
mov
add
mov
movzx
mov
xchg
pushf
cmc
and
shr
pop
rcr
xchg
cwde
mov
test
cmp
lea
test
cmp
xor
test
cmp
sub
cmc
stc
rol
test
sub
ror
test
cmc
xor
test
add
jmp
clc
xor
stc
sub
rol
sub
ror
cmp
xor
add
jmp
mov
cmp
mov
stc
sub
cmp
test
test
shl
jmp
test
add
jmp
jne
pop
cmc
stc
not
cmp
mov
or
xor
mov
lea
cmc
cmp
xor
sub
cmc
stc
rol
cmc
jmp
cmp
add
jmp
lea
xor
sub
clc
rol
sub
ror
cmp
xor
add
jmp
rol
sub
ror
stc
clc
cmp
xor
test
add
jmp
rdtsc
test
cmp
sub
cmp
clc
mov
mov
shl
bts
mov
jmp
xor
inc
movs
arpl
stos
mov
mov
inc
mov
not
lods
xchg
(bad)
rcr
add
ins
dec
xchg
jmp
cmp
mov
rcr
pop
add
pop
cmp
dec
or
push
inc
add
jae
das
jp
movzx
adc
ror
pop
fnstenv
bound
fs
ficom
sti
frstor
dec
stos
aam
ficomp
mov
jmp
mov
push
outs
mov
enter
jle
inc
fisttp
(bad)
adc
nop
inc
and
out
mov
jns
xchg
xchg
pop
out
loopne
sti
add
retf
add
in
or
jmp
inc
punpckhwd
std
pop
pusha
cdq
imul
sahf
arpl
or
adc
add
and
data16
xchg
add
mov
jmp
ins
cmp
mov
or
hlt
mov
fldcw
pop
ficomp
movd
repz
and
mov
fstp
inc
arpl
sub
mov
fiadd
xchg
lods
nop
call
mov
retf
mov
cmp
outs
fisttp
aas
rcl
xor
aad
mov
cs
xor
pop
jmp
mov
(bad)
mov
dec
div
(bad)
gs
mov
and
add
jmp
into
dec
fisttp
mov
jnp
ins
push
shr
leave
push
pop
bound
cld
add
jg
push
or
shl
xchg
jae
imul
pop
xchg
addr16
cmps
pusha
xchg
pop
mov
fdiv
fcmovnbe
call
inc
jle
add
dec
mov
ins
pop
mov
cwde
push
and
bound
inc
mov
mov
out
adc
xchg
cld
lods
mov
mov
push
ins
adc
data16
xchg
popa
and
add
ud2
repnz
aas
or
adc
push
test
loopne
fistp
mov
inc
test
pop
xor
adc
scas
popf
and
fsub
jne
inc
mov
push
and
cmps
mov
rcl
or
fisttp
or
aas
cmp
(bad)
adc
int
cmp
mov
ret
mov
int3
xchg
mov
outs
add
mov
xor
lds
ficomp
(bad)
inc
dec
bound
push
sbb
pop
mov
mov
jno
add
fld
and
dec
shl
xchg
outs
jge
mov
or
jecxz
push
add
gs
call
dec
mov
jae
sub
call
fdiv
fild
mov
rcl
stc
xchg
sbb
pop
cmps
and
mov
adc
dec
jne
adc
or
mov
cmp
xchg
pushf
lock
imul
xchg
rcr
adc
aad
scas
lock
cmp
fild
push
mov
scas
mov
mov
and
inc
mov
or
sub
cmps
pushf
js
or
dec
test
in
arpl
adc
ret
jo
bound
shr
inc
or
imul
sub
add
or
mov
outs
pop
mov
int
ror
pop
std
aam
loope
frstor
pushf
ficom
mov
in
cmp
jl
jne
loop
inc
(bad)
xchg
jg
fisttp
and
jnp
cmp
out
or
push
pop
imul
test
add
fld
clc
mov
rol
aaa
jmp
add
adc
sub
test
ficomp
cmps
js
outs
add
fnstsw
pop
mov
cmp
xor
jmp
cmc
ror
test
cmp
xor
add
jmp
jne
sub
jmp
stc
ror
add
not
xor
cmp
lea
jmp
mov
cmc
shl
mov
rol
shl
mov
lea
cmp
test
cmc
shld
jmp
jmp
xor
add
jmp
push
sub
sbb
add
popf
mov
cmp
test
lea
jmp
rol
cmp
cmc
sub
jmp
mov
pushf
not
stc
pop
ror
shl
mov
lea
xor
cmc
cmp
test
sub
cmc
rol
test
cmp
sub
jmp
push
ret
dec
jne
sub
xchg
jmp
je
push
movzx
jmp
test
cmp
shrd
jmp
add
jmp
test
lea
xor
test
xor
ror
neg
cmp
not
cmp
jmp
mov
mov
lea
xor
sub
stc
cmc
rol
sub
jmp
test
xor
add
jmp
xor
sub
stc
rol
cmc
sub
ror
cmp
xor
add
jmp
movzx
sbb
test
mov
lea
test
imul
jmp
xor
test
clc
cmc
sub
rol
sub
stc
cmc
ror
jmp
stc
add
jmp
mov
btc
clc
inc
mov
clc
stc
not
not
and
mov
jmp
mov
cmp
clc
sub
cmp
jmp
mov
neg
test
mov
add
cmc
xor
clc
cmp
sub
rol
test
jmp
ror
xor
add
jmp
test
cmc
add
jmp
jmp
mov
btr
btc
shl
mov
jmp
shl
mov
mov
pop
mov
clc
lea
jmp
mov
pushf
btc
sub
movsx
pop
shl
mov
stc
cmc
add
clc
cmp
test
xor
test
clc
test
sub
cmc
rol
cmc
cmp
sub
cmc
ror
clc
cmp
xor
add
jmp
cmp
xor
cmp
sub
rol
cmc
cmp
sub
jmp
test
xor
clc
add
jmp
movzx
lea
xor
test
neg
ror
cmc
cmp
add
not
cmp
xor
lea
mov
setp
jmp
push
ret
push
ret
sub
jmp
ror
stc
cmp
jmp
rol
stc
sub
jmp
sub
rol
clc
test
jmp
push
ret
clc
rol
cmp
stc
test
sub
stc
ror
xor
add
jmp
mov
jmp
cmp
add
jmp
mov
cmc
shl
mov
lea
stc
test
test
xor
sub
clc
rol
test
sub
ror
clc
jmp
xor
sub
clc
jmp
xor
clc
cmp
stc
sub
clc
rol
sub
ror
cmp
xor
add
jmp
xor
cmp
clc
add
jmp
mov
mov
add
cmp
clc
mov
shr
adc
sub
mov
stc
lea
xor
cmp
sub
jmp
sub
add
jmp
jmp
mov
movzx
cmp
add
mov
test
rol
mov
test
clc
add
test
cmc
xor
cmp
sub
stc
rol
stc
jmp
mov
not
mov
add
xor
test
test
jmp
mov
xchg
seto
push
cpuid
test
cmp
sub
clc
mov
test
shl
xadd
mov
bt
mov
nop
bt
mov
pop
not
mov
add
cmp
stc
jmp
test
sub
jmp
ror
xor
test
cmp
add
jmp
mov
test
test
clc
add
jmp
mov
inc
add
mov
not
not
stc
cmp
clc
and
jmp
sub
cmc
stc
ror
stc
xor
cmp
stc
add
jmp
jmp
inc
clc
xor
jmp
test
add
jmp
mov
jmp
je
push
movzx
test
stc
xor
stc
and
clc
mov
shr
clc
test
xor
inc
stc
cmc
xor
jmp
ror
test
xor
cmc
jmp
xor
cmc
add
jmp
mov
rcl
rcr
dec
mov
stc
cmp
cmp
add
stc
cmp
clc
mov
mov
cmp
test
add
clc
xor
test
sub
stc
cmc
clc
rol
sub
ror
test
cmp
cmp
xor
clc
cmc
add
jmp
lea
stc
mov
mov
stc
test
add
cmc
cmp
clc
xor
sub
rol
test
test
stc
sub
clc
ror
stc
xor
test
add
jmp
push
ret
add
push
ret
mov
mov
cmp
test
add
xor
cmp
sub
jmp
push
ret
test
clc
sub
clc
rol
stc
test
sub
stc
cmc
jmp
mov
test
push
stc
clc
adc
cpuid
jmp
test
mov
cmp
sub
cmc
stc
mov
shl
nop
bswap
mov
test
add
cmp
xor
sub
stc
rol
sub
ror
jmp
mov
setns
nop
mov
pushf
rcr
btr
btr
pop
adc
bsf
mov
clc
cmp
add
xor
cmp
sub
jmp
add
jmp
xor
add
jmp
cmc
rol
cmp
clc
sub
ror
xor
stc
test
add
jmp
movzx
cmc
lea
cmc
mov
bts
mov
lea
test
stc
xor
sub
cmc
rol
cmp
test
clc
sub
jmp
sub
cmp
mov
mov
xadd
xor
mov
bsr
mov
cmovo
lahf
pop
mov
cmp
adc
mov
jmp
stc
lea
xor
sub
rol
test
cmc
sub
ror
xor
test
add
push
ret
sub
ror
test
cmp
cmc
xor
clc
cmp
add
jmp
cmc
test
add
jmp
jmp
jmp
push
bswap
sbb
lea
bt
sar
popf
movzx
setnp
mov
test
cmc
add
test
clc
xor
clc
test
jmp
xor
dec
jmp
test
add
jmp
movzx
adc
mov
lea
test
cmc
cmp
not
not
cmp
test
and
jmp
stc
ror
xor
clc
add
jmp
ror
test
stc
cmp
xor
jmp
jmp
je
xor
jmp
jmp
movzx
mov
sub
test
shl
jmp
mov
mov
cmc
jmp
jmp
test
mov
clc
test
jmp
push
ret
push
ret
mov
sbb
mov
jmp
mov
inc
dec
mov
cmp
stc
sub
stc
shl
jmp
jmp
dec
neg
jmp
rol
sub
cmc
ror
jmp
mov
lea
xor
cmc
stc
rol
bswap
clc
xor
cmc
rol
test
cmp
test
not
cmc
stc
xor
sub
mov
mov
lea
xor
test
sub
stc
jmp
mov
mov
cmp
ror
mov
cmp
add
test
shrd
jmp
jmp
jmp
ror
xor
stc
clc
add
jmp
ror
jmp
je
xor
jmp
push
ret
test
xor
test
sub
clc
rol
jmp
mov
xchg
bswap
pushf
jmp
jmp
xor
add
jmp
jmp
add
jmp
test
test
mov
bt
neg
mov
cmc
jmp
clc
rol
cmp
cmc
sub
ror
clc
xor
clc
add
jmp
dec
jmp
push
ret
xor
stc
rol
stc
bswap
cmp
xor
rol
cmp
cmp
not
clc
cmp
xor
cmp
stc
lea
mov
ror
sub
dec
mov
stc
cmp
lea
xor
test
cmc
sub
jmp
cmc
add
jmp
ror
xor
test
add
jmp
push
lea
popf
rol
mov
add
test
cmc
xor
cmc
test
cmp
sub
rol
clc
test
sub
stc
ror
test
xor
test
stc
add
jmp
cmp
not
clc
cmc
stc
and
mov
cwde
pushf
ror
test
pop
rcl
shr
mov
clc
cmp
stc
add
xor
clc
test
sub
cmc
stc
rol
jmp
mov
cwde
ror
mov
test
add
xor
sub
rol
sub
ror
stc
xor
add
jmp
sub
rol
stc
test
clc
sub
jmp
jmp
sub
jmp
mov
movsx
jmp
mov
test
lea
cmp
jmp
sub
jmp
cmc
ror
cmp
test
neg
test
not
clc
xor
test
movzx
cmp
lea
cmp
mov
cmovle
rol
sbb
mov
clc
cmp
test
add
stc
cmp
clc
xor
stc
sub
rol
stc
sub
cmc
ror
xor
test
cmp
add
jmp
mov
cwde
bswap
pushf
mov
shl
pop
lahf
rcl
mov
lea
jmp
movzx
cmc
cmp
test
lea
cmp
xor
stc
cmc
ror
not
stc
rol
jmp
xchg
jmp
mov
stc
mov
stc
lea
cmp
not
clc
not
and
jmp
cmp
sub
rol
sub
ror
xor
test
add
jmp
mov
test
cmc
bsr
movzx
cmp
cmc
lea
mov
sar
inc
mov
lea
xor
test
sub
clc
stc
rol
jmp
jmp
movzx
test
lea
test
cmc
xor
jmp
cmp
xor
clc
jmp
stc
add
jmp
test
clc
mov
shl
test
mov
cmc
stc
cmp
add
xor
sub
rol
jmp
mov
jmp
dec
xor
test
lea
mov
neg
sbb
inc
mov
add
stc
xor
sub
clc
jmp
rol
sub
stc
ror
cmc
xor
jmp
jmp
jmp
mov
btr
shl
sar
mov
clc
sub
cmp
cmc
stc
not
not
and
mov
not
movsx
cmovne
pushf
pop
xadd
mov
cmp
jmp
mov
test
clc
lea
test
jmp
mov
sub
bswap
cmovno
mov
jmp
test
xor
sub
clc
stc
rol
test
stc
sub
cmc
ror
jmp
mov
cbw
cwde
pushf
pop
bsr
mov
cmp
stc
lea
clc
cmp
xor
stc
sub
rol
cmc
sub
jmp
xchg
push
jmp
movzx
lea
cmp
xor
clc
xor
cmc
jmp
jne
xor
xchg
call
mov
and
mov
cbw
pop
btr
mov
jmp
lea
stc
mov
add
shld
bts
mov
add
cmp
xor
jmp
ror
jmp
ror
test
stc
cmp
xor
clc
add
jmp
push
jmp
push
rcr
shld
add
not
dec
btr
popf
mov
add
xor
cmp
stc
sub
rol
jmp
movzx
lea
stc
cmc
xor
jmp
jmp
add
jmp
jmp
mov
xchg
mov
lea
test
clc
mul
jmp
jmp
stc
rol
cmp
stc
cmp
sub
ror
cmp
xor
clc
add
jmp
stc
sub
rol
sub
cmc
ror
jmp
movzx
stc
mov
sub
cmc
clc
imul
mov
cbw
cwde
mov
pushf
shl
shr
ror
pop
mov
lea
xor
stc
test
sub
rol
test
test
sub
jmp
movzx
shr
add
lea
xor
adc
clc
neg
bts
not
ror
and
bsr
add
shl
not
not
neg
add
ror
xor
xor
adc
push
dec
movzx
cbw
inc
bswap
mov
movzx
mov
shl
mov
cmc
add
clc
cmp
mov
cmc
stc
test
je
sub
jmp
push
ret
mov
mov
add
jmp
mov
jmp
sub
stc
jmp
cmc
xor
sub
stc
clc
jmp
xor
add
jmp
mov
shr
movsx
and
mov
clc
lea
cmp
test
mov
sar
mov
cmp
lea
cmp
xor
cmp
cmp
jmp
add
jmp
xor
sub
jmp
jmp
test
sub
clc
ror
xor
cmp
add
jmp
mov
seta
rol
bts
mov
add
mov
cbw
stc
mov
cmc
cmp
lea
xor
sub
stc
rol
test
cmp
sub
stc
cmc
ror
cmc
cmp
xor
cmp
add
jmp
mov
add
bsr
mov
mov
clc
lea
clc
shrd
jmp
mov
adc
movsx
mov
lea
mov
sbb
clc
mov
clc
jmp
jmp
jmp
ror
cmc
cmp
xor
cmc
add
jmp
jmp
sub
jmp
movzx
test
add
xor
jmp
mov
bt
mov
ror
mov
clc
cmp
test
lea
mov
test
mov
test
cmp
cmc
lea
cmp
test
xor
sub
rol
sub
cmc
ror
stc
xor
clc
jmp
shrd
mov
cmp
cmp
mov
sar
mov
jmp
mov
xchg
pushf
bt
pop
bts
not
rcr
mov
stc
test
lea
cmp
jmp
rol
sub
stc
ror
test
test
cmp
xor
test
stc
add
jmp
sub
jmp
mov
shld
movsx
clc
mov
test
cmc
lea
test
cmc
xor
sub
rol
sub
jmp
test
xor
add
jmp
jmp
cmc
rol
clc
sub
jmp
xor
cmp
cmp
sub
cmc
rol
test
test
sub
stc
cmc
ror
test
stc
xor
cmc
stc
add
jmp
sub
cmc
jmp
mov
mov
test
cmp
mov
lahf
mov
rcl
mov
cmc
lea
xor
stc
jmp
clc
ror
test
xor
add
jmp
add
push
ret
mov
mov
jmp
stc
ror
xor
cmp
stc
add
jmp
stc
xor
clc
cmp
add
jmp
xor
test
cmc
add
jmp
xor
clc
test
add
jmp
push
ret
rol
clc
cmc
sub
clc
jmp
pushf
cwde
btr
not
pop
test
add
xchg
mov
clc
add
cmp
xor
cmp
cmp
sub
rol
test
sub
stc
ror
cmc
xor
add
jmp
add
test
test
xor
stc
rol
jmp
clc
test
jmp
movzx
shr
rcl
mov
jmp
jmp
push
ret
jmp
rol
sub
stc
ror
cmp
jmp
mov
rol
mov
test
add
mov
cmovo
mov
setae
pushf
adc
cwde
shl
pop
stc
rcr
xor
mov
cmp
cmc
add
xor
sub
jmp
xor
test
stc
add
jmp
movzx
shl
lea
xchg
stc
movzx
xor
or
mov
neg
cmovae
ror
shl
shld
bswap
add
not
btr
xor
or
cwd
push
btr
sar
movzx
mov
bt
shl
cbw
xor
shl
mov
clc
lea
mov
cmp
test
jmp
mov
sar
mov
cmp
test
add
jmp
mov
bswap
pushf
xor
pop
mov
mov
jmp
sub
clc
rol
cmc
sub
clc
ror
stc
xor
cmp
jmp
movzx
mov
lea
imul
jmp
sub
rol
sub
clc
jmp
mov
bsr
sub
mov
clc
cmc
cmp
lea
cmc
mov
bt
shl
mov
mov
cmp
cmc
lea
test
xor
clc
test
sub
cmc
rol
sub
ror
cmp
stc
xor
add
jmp
stc
rol
sub
cmc
stc
clc
ror
stc
xor
stc
cmp
cmc
add
jmp
mov
lahf
pushf
movzx
shl
mov
pop
test
btc
mov
clc
cmc
add
clc
jmp
xor
sub
clc
rol
test
stc
cmp
sub
ror
xor
add
jmp
and
jmp
add
push
ret
mov
or
and
mov
stc
lea
jmp
mov
and
cmp
sar
mov
cmc
jmp
jmp
push
ret
mov
movzx
add
test
stc
mov
mov
jmp
mov
rol
mov
cmp
add
cmc
cmp
mov
neg
ror
mov
lea
test
xor
cmp
jmp
mov
xor
mov
stc
clc
add
test
mov
mov
lea
test
xor
cmp
jmp
jmp
jne
sub
jmp
push
add
popf
mov
jmp
jmp
cmc
add
jmp
movzx
mov
stc
sub
stc
cmp
shr
mov
jmp
mov
shr
sbb
mov
jmp
mov
lahf
cmp
mov
add
xor
test
sub
stc
rol
sub
cmc
ror
clc
stc
cmp
xor
add
jmp
push
ret
jmp
jne
sub
jmp
mov
bt
test
or
movzx
cmp
add
cmp
mov
bt
movsx
bts
mov
test
cmp
stc
add
cmc
cmp
stc
xor
sub
jmp
stc
ror
xor
add
jmp
rol
sub
jmp
movzx
lea
xor
bts
test
xor
not
cmovns
mov
dec
btc
xor
sub
not
mov
not
bts
xor
shl
xor
bsr
bts
mov
lea
jmp
mov
jmp
inc
xor
neg
jmp
mov
bswap
not
pushf
inc
cmovg
rcl
pop
mov
cmp
add
cmc
xor
cmp
clc
sub
rol
test
cmp
sub
stc
ror
xor
cmp
jmp
mov
movzx
lahf
pushf
or
pop
bts
xor
mov
test
clc
add
test
xor
cmc
sub
stc
cmc
rol
clc
sub
clc
jmp
push
ret
cmp
lea
clc
cmc
xor
cmp
cmc
sub
cmc
jmp
mov
or
mov
mov
inc
mov
test
add
stc
cmp
shld
jmp
jmp
cmp
lea
xor
clc
stc
sub
jmp
rol
cmp
clc
sub
stc
jmp
and
jmp
add
push
ret
cmp
xor
cmp
sub
stc
cmc
rol
cmp
sub
stc
jmp
add
cmp
xor
test
jmp
clc
xor
neg
dec
xor
cmp
jmp
add
cmp
test
stc
xor
jmp
test
mov
cmc
stc
mov
adc
mov
add
cmp
cmc
xor
stc
sub
jmp
ror
xor
clc
cmp
test
add
jmp
push
bsf
rcl
cmc
add
shl
popf
or
adc
mov
test
clc
stc
lea
test
clc
xor
test
sub
jmp
jmp
lea
jmp
rol
sub
jmp
mov
mov
cmp
lea
clc
stc
mov
mov
stc
lea
xor
sub
cmc
rol
clc
sub
clc
ror
xor
add
push
ret
mov
add
shrd
mov
test
lea
test
xor
sub
cmc
stc
rol
sub
jmp
movzx
cmp
cmc
jmp
xor
stc
sub
jmp
clc
ror
test
xor
cmp
jmp
cmc
add
cmp
test
test
mov
cwde
sbb
shl
mov
add
cmc
jmp
mov
bts
movzx
lea
cmp
cmp
mov
and
xadd
mov
stc
cmp
lea
cmp
test
xor
cmc
sub
cmc
rol
cmp
sub
clc
ror
xor
jmp
jmp
clc
test
xor
clc
jmp
mov
test
jmp
xchg
jmp
jmp
movzx
test
add
stc
xor
clc
neg
ror
add
cmp
cmc
test
not
cmp
cmp
xor
lea
mov
mov
cmc
add
clc
stc
xor
stc
clc
sub
clc
rol
cmp
sub
cmc
ror
cmp
stc
xor
add
jmp
movzx
neg
sar
lea
test
btr
bt
xor
neg
mov
ror
not
add
rcl
not
adc
sbb
and
xor
ror
add
push
movzx
mov
sbb
shl
mov
cmc
test
jmp
not
pushf
rcl
shl
rcr
pop
bsr
movzx
mov
test
jmp
ror
jmp
cmc
cmp
sub
stc
ror
xor
cmp
stc
jmp
mov
rcl
sub
mov
cmp
lea
test
cmp
stc
mov
bt
bts
btr
mov
test
add
xor
jmp
jmp
mov
bswap
cwde
mov
cmc
lea
stc
cmc
cmp
mov
xor
mov
test
clc
add
stc
xor
test
cmp
stc
sub
clc
jmp
mov
mov
not
not
and
jmp
jmp
movzx
test
add
jmp
movzx
cmc
add
cmove
stc
xor
dec
xor
rcl
rol
ror
bswap
neg
add
sar
movsx
not
rcl
bts
xor
rcl
ror
mov
add
cmc
mov
rcr
mov
cmc
test
add
test
xor
sub
rol
cmp
sub
stc
ror
xor
cmp
test
add
jmp
mov
lahf
mov
pushf
shld
pop
cmovnp
adc
mov
lea
xor
sub
rol
cmc
stc
sub
clc
ror
stc
jmp
push
ret
push
ret
jmp
jmp
jmp
add
jmp
cmp
xor
test
sub
jmp
ror
xor
cmp
add
jmp
movzx
ror
xchg
xor
mov
test
cmp
jmp
jmp
clc
xor
clc
add
jmp
jmp
jmp
test
mov
dec
movzx
mov
add
cmp
stc
xor
sub
stc
rol
stc
sub
ror
xor
cmc
add
jmp
push
ret
push
ret
mov
mov
not
pushf
bsf
mov
pop
adc
sub
mov
stc
cmc
lea
test
cmc
cmp
xor
clc
test
sub
jmp
rol
cmc
test
sub
jmp
mov
not
pushf
shl
pop
ror
rcr
mov
clc
stc
cmp
add
stc
xor
cmp
cmp
sub
clc
rol
sub
clc
ror
xor
add
jmp
cmc
clc
xor
sub
rol
cmp
test
sub
ror
cmp
cmc
jmp
cmp
xor
test
test
sub
rol
cmp
sub
ror
cmp
clc
cmp
xor
add
jmp
cmp
mov
test
shr
clc
xor
jmp
jmp
rol
jmp
add
cmc
clc
stc
xor
sub
cmc
clc
rol
clc
sub
jmp
movzx
lea
jmp
neg
test
xor
mov
lea
mov
mov
test
jmp
cmp
test
sub
clc
ror
cmp
stc
xor
clc
cmp
add
jmp
mov
setb
mov
shl
mov
cmc
clc
add
jmp
mov
cwde
pushf
shld
stc
pop
mov
add
xor
sub
jmp
cmp
sub
cmp
not
cmp
xor
test
xor
cmc
test
mov
sub
cmc
mov
mov
cmp
cmc
jmp
movzx
add
test
xor
jmp
add
mov
ror
bt
mov
jmp
dec
xor
lea
cmp
cmp
jmp
cmc
stc
rol
cmp
cmc
sub
stc
ror
stc
xor
add
jmp
cmp
mov
movzx
bt
cmovnp
mov
lea
stc
jmp
clc
add
stc
test
mov
mov
cmp
cmp
lea
stc
xor
stc
cmp
cmc
sub
stc
rol
clc
sub
ror
cmp
cmp
clc
xor
clc
add
jmp
cmc
ror
stc
cmp
xor
jmp
jmp
mov
mov
sub
add
mov
pushf
cmovle
shr
pop
sub
cmp
mov
lea
cmc
xor
stc
cmp
jmp
mov
mov
add
mov
mov
test
add
jmp
mov
jmp
test
add
stc
cmp
clc
mov
shr
setns
xor
mov
clc
cmc
cmp
add
clc
cmc
xor
sub
jmp
xor
add
jmp
push
ret
clc
xor
stc
clc
add
push
ret
jmp
mov
mov
mov
jmp
sub
clc
ror
xor
cmc
add
jmp
rol
sub
jmp
xor
sub
not
clc
cmc
test
xor
cmp
test
xor
mov
jmp
xor
cmp
test
jmp
call
mov
mov
sbb
cmovne
pop
ror
bswap
cwde
mov
test
cmp
lea
stc
clc
xor
cmp
test
sub
stc
rol
test
jmp
mov
clc
btr
movzx
stc
add
cmp
jmp
add
cmc
xor
clc
sub
clc
rol
sub
stc
ror
test
xor
stc
add
jmp
push
jmp
mov
mov
mov
cmc
stc
lea
cmp
cmp
add
mov
mov
cmovns
pushf
pop
mov
jmp
clc
rol
test
clc
cmc
sub
clc
jmp
mov
shrd
btr
mov
cmp
add
clc
mov
mov
rol
mov
mov
lea
xor
clc
sub
rol
test
stc
cmp
sub
ror
cmp
clc
xor
clc
test
add
jmp
mov
movsx
pushf
sar
pop
bsr
mov
jmp
push
ret
jmp
or
mov
test
cmp
lea
cmc
xor
sub
rol
cmc
cmp
cmp
sub
ror
cmc
cmp
xor
cmp
cmp
add
jmp
cmc
ror
clc
cmp
jmp
movzx
lea
xor
xor
sar
btc
xor
btc
ror
bts
clc
bsr
neg
not
shl
shr
mov
xor
mov
lea
mov
sub
btc
sets
mov
clc
add
jmp
cmc
lea
jmp
jmp
ror
xor
cmp
test
stc
add
jmp
ror
cmc
xor
add
jmp
jmp
jmp
clc
xor
test
cmp
add
jmp
mov
btc
ror
movzx
add
test
mov
stc
mov
add
xor
test
cmc
sub
rol
clc
sub
ror
xor
cmp
test
add
jmp
sub
cmc
ror
stc
cmp
xor
clc
add
jmp
jmp
jmp
cmp
xor
test
xor
ror
clc
neg
not
cmc
xor
jmp
xor
cmp
cmc
cmp
add
jmp
xor
add
jmp
xor
sub
cmc
stc
rol
clc
sub
jmp
jmp
stc
lea
xor
stc
test
sub
rol
sub
jmp
mov
add
shrd
mov
test
add
cmp
cmc
mov
rcr
mov
add
test
test
xor
cmc
sub
cmc
rol
test
stc
cmc
sub
ror
xor
jmp
push
ret
push
ret
mov
mov
cmp
sub
cmp
jmp
mov
adc
mov
cmc
cmp
clc
lea
jmp
mov
jmp
rol
stc
cmp
sub
ror
xor
cmp
add
jmp
dec
jmp
jmp
sub
jmp
stc
ror
test
test
stc
xor
cmp
test
cmp
add
jmp
jmp
jne
sub
jmp
rol
sub
ror
xor
jmp
clc
ror
xor
cmp
cmc
add
jmp
jmp
mov
shr
mov
stc
jmp
mov
cmp
jmp
test
clc
lea
xor
sub
rol
clc
test
sub
jmp
cmp
sub
stc
rol
cmp
sub
clc
stc
ror
jmp
stc
sub
cmc
ror
cmc
stc
xor
test
add
jmp
cmc
lea
clc
cmp
cmp
xor
sub
jmp
sub
ror
test
xor
cmp
cmc
add
jmp
mov
sar
mov
cmp
lea
jmp
cmp
xor
lea
mov
movsx
bswap
and
mov
cmp
clc
add
cmp
xor
sub
cmc
stc
rol
test
cmp
sub
ror
cmp
xor
clc
add
jmp
sub
clc
cmc
rol
sub
stc
jmp
jmp
cmp
lea
test
mov
cmp
cmovno
mov
cmp
jmp
movzx
clc
test
cmp
lea
test
xor
jmp
jmp
rol
sub
clc
ror
cmp
test
xor
cmc
add
jmp
mov
rcl
cwde
sbb
mov
jmp
movzx
test
stc
cmp
add
cmp
jmp
ror
jmp
mov
bt
or
mov
clc
cmp
lea
mul
jmp
xor
cmp
stc
sub
rol
sub
stc
clc
ror
test
xor
jmp
shr
jmp
test
add
test
jmp
add
cmc
stc
xor
clc
test
sub
jmp
ror
stc
cmc
xor
clc
jmp
cmc
stc
lea
clc
mov
test
test
jmp
stc
cmp
add
jmp
je
push
not
rcr
movzx
cmp
jmp
mov
pushf
pop
lahf
cmp
mov
lea
cmp
xor
stc
test
clc
sub
clc
rol
clc
sub
cmc
ror
clc
cmc
xor
add
jmp
jmp
and
mov
test
clc
shr
xor
jmp
mov
not
pushf
rcl
pop
mov
clc
cmc
lea
test
jmp
ror
xor
add
jmp
mov
jmp
jmp
movzx
mov
jmp
push
ret
movzx
test
cmp
add
cmp
xor
clc
cmp
stc
xor
jmp
pushf
pop
mov
lea
xor
test
sub
clc
rol
cmp
cmp
sub
ror
test
cmc
xor
jmp
jmp
xchg
jmp
jmp
mov
mov
sbb
mov
stc
jmp
mov
rcl
sar
mov
test
mov
bsr
ror
mov
lea
cmp
test
cmp
xor
sub
cmc
clc
stc
rol
test
clc
sub
cmc
ror
jmp
mov
lahf
pushf
pop
sar
mov
lea
jmp
mov
xor
mov
sub
clc
cmp
add
mov
nop
cwde
movsx
pushf
rcl
pop
mov
lea
xor
cmp
sub
jmp
jmp
movzx
cmc
cmp
add
test
xor
stc
ror
cmc
not
clc
stc
rol
jmp
test
stc
xor
cmc
add
jmp
rol
jmp
cmp
add
xor
sub
cmc
rol
jmp
xchg
jmp
push
ret
clc
stc
ror
clc
test
xor
add
jmp
jmp
mov
mov
cmc
mov
sar
btc
and
mov
lea
cmp
jmp
mov
mov
movzx
not
pushf
cmp
sub
pop
shr
mov
cmp
add
test
test
xor
sub
clc
cmc
rol
stc
sub
cmc
ror
clc
jmp
jmp
pop
xchg
movsx
pop
movsx
bswap
xchg
pop
pop
movsx
pop
not
setns
bswap
pop
ret
movzx
cmc
add
test
cmp
clc
xor
jmp
sub
cmc
rol
cmc
test
sub
ror
jmp
mov
cwde
pushf
cmp
sub
bsf
pop
rcr
stc
mov
jmp
mov
mov
add
test
test
mov
mov
add
test
xor
clc
sub
clc
rol
test
cmc
sub
ror
xor
test
test
add
jmp
stc
ror
xor
test
clc
add
jmp
lea
jmp
jne
pop
not
test
mov
mov
test
add
xor
sub
jmp
stc
cmp
sub
jmp
movzx
xadd
ror
neg
add
xor
bt
btc
ror
movsx
btr
not
rol
movsx
movzx
dec
btr
neg
inc
inc
adc
cmovs
neg
bt
xor
jmp
mov
pushf
or
and
pop
mov
lea
xor
test
sub
stc
rol
cmp
sub
cmc
clc
ror
test
cmp
xor
add
jmp
jmp
sub
ror
xor
cmc
cmp
add
jmp
jmp
movzx
mov
cmp
cmc
lea
cmp
test
shl
mov
cwde
pushf
pop
btr
mov
add
stc
xor
stc
test
sub
jmp
jmp
jmp
jmp
xor
sub
clc
rol
test
sub
jmp
jmp
push
ret
clc
mov
sub
jmp
mov
cmc
stc
clc
lea
test
mov
rcr
mov
stc
cmp
add
xor
cmp
jmp
cmc
stc
rol
cmp
sub
ror
xor
jmp
cmc
ror
xor
test
test
cmp
add
jmp
mov
mov
cmp
add
mov
mov
cmp
clc
add
cmc
xor
sub
stc
rol
clc
sub
stc
ror
xor
clc
cmp
add
jmp
rol
stc
sub
ror
xor
clc
jmp
cmp
cmp
xor
cmp
test
sub
rol
cmp
stc
sub
stc
cmc
ror
cmp
jmp
jmp
test
test
xor
jmp
push
jmp
push
ret
jmp
clc
test
xor
clc
cmp
test
je
push
movzx
clc
cmp
xor
test
cmp
and
cmc
jmp
clc
cmp
mov
cmovs
rol
shrd
mov
cmp
add
cmc
xor
test
sub
rol
test
jmp
mov
stc
test
test
lea
test
test
clc
xor
rol
cmp
test
bswap
xor
stc
rol
test
not
test
xor
clc
cmp
sub
mov
sar
mov
test
clc
lea
test
stc
xor
cmp
sub
stc
clc
rol
clc
cmp
test
sub
ror
test
test
xor
stc
test
add
jmp
jmp
movzx
mov
sub
test
stc
shr
jmp
mov
cmp
cmp
lea
cmc
jmp
mov
cmc
mov
jmp
movzx
ror
add
add
shl
xor
not
bswap
dec
xor
mov
shld
btc
sub
shl
not
sub
xor
xor
mov
mov
lea
clc
mov
cmp
cmp
btr
mov
cmc
add
stc
cmp
xor
cmp
sub
rol
cmp
cmp
test
sub
stc
ror
cmp
xor
cmc
test
add
jmp
jmp
jmp
mov
stc
add
cmc
xor
cmc
rol
cmp
bswap
xor
cmc
rol
not
stc
clc
test
xor
clc
stc
lea
test
cmc
mov
sbb
mov
test
add
cmc
xor
cmc
sub
cmc
stc
rol
cmc
sub
clc
ror
test
xor
test
add
jmp
push
ret
mov
btc
mov
cmp
cmc
cmp
mov
shl
mov
add
xor
sub
clc
rol
sub
jmp
movzx
cmp
stc
jmp
ror
xor
test
clc
add
jmp
ror
jmp
mov
bswap
pushf
rcl
xadd
pop
cmc
nop
mov
test
jmp
clc
ror
cmc
cmp
xor
test
cmc
add
push
ret
cmc
cmp
lea
shrd
jmp
mov
pushf
bt
sar
lahf
pop
mov
add
cmp
xor
test
sub
cmc
jmp
stc
mov
cmp
mov
cmc
add
cmp
stc
xor
clc
sub
stc
cmc
rol
cmp
sub
ror
stc
test
jmp
dec
xor
clc
sub
cmp
not
xor
cmp
xor
cmp
stc
mov
test
cmp
sub
test
test
mov
not
btc
mov
lea
cmc
cmp
xor
test
cmc
sub
rol
cmc
sub
stc
cmc
ror
test
test
cmp
xor
add
jmp
not
stc
rol
jmp
mov
sub
mov
btr
mov
cmp
lea
jmp
clc
rol
jmp
mov
mov
sub
not
not
jmp
movzx
cmp
lea
cmp
xor
jmp
push
ret
inc
test
jmp
sub
stc
clc
ror
test
cmc
xor
cmc
clc
cmp
add
jmp
jne
xor
xchg
jmp
ror
jmp
mov
mov
setg
mov
lea
shl
jmp
ror
cmp
cmc
xor
test
cmc
clc
add
jmp
movzx
mov
jmp
mov
xchg
shl
mov
cmc
test
lea
stc
test
mov
mov
add
xor
cmc
test
test
sub
clc
cmc
rol
stc
sub
clc
jmp
test
xor
sub
clc
rol
jmp
mov
cmp
cmp
add
clc
cmp
jmp
cmc
rol
stc
test
sub
ror
xor
jmp
lea
cmp
cmp
test
mov
cmp
clc
mov
mov
lea
xor
test
sub
stc
rol
test
sub
jmp
push
ret
xor
cmp
cmc
sub
jmp
movzx
btc
bsr
add
movzx
bt
sbb
xor
or
neg
movsx
ror
add
clc
not
xor
ror
shl
cmp
push
adc
dec
cmovbe
movzx
sbb
mov
setp
rcr
xchg
shl
and
sbb
mov
add
mov
stc
jmp
cmc
test
jmp
inc
cmp
test
neg
stc
xor
mov
lea
stc
test
mov
or
cmp
adc
mov
cmp
cmc
add
jmp
mov
jmp
sub
ror
xor
cmc
test
add
jmp
jmp
mov
jmp
jmp
test
xor
cmp
test
sub
cmc
rol
sub
clc
ror
clc
jmp
cmp
sub
rol
cmc
sub
clc
ror
xor
add
push
ret
jmp
jmp
mov
movzx
jmp
cmc
stc
sub
cmp
test
jmp
sub
cmc
stc
rol
sub
stc
ror
xor
add
jmp
mov
push
jmp
mov
mov
cmp
sub
clc
add
jmp
sub
cmc
rol
cmp
stc
cmc
sub
clc
ror
cmp
xor
cmp
add
jmp
push
ret
xor
test
add
jmp
add
clc
cmp
mov
stc
cmp
test
jmp
mov
pop
add
popf
setnp
cwd
pop
pop
pop
movsx
pop
movsx
mov
pop
movzx
movsx
jmp
xor
dec
xor
test
cmp
sub
not
cmp
test
stc
xor
xor
jmp
xor
cmc
clc
sub
jmp
add
jmp
movzx
mov
cmp
sub
test
test
add
mov
bswap
lahf
jmp
cmc
stc
rol
cmp
sub
clc
ror
xor
cmc
add
jmp
xor
cmc
sub
rol
jmp
cmp
add
cmp
cmp
xor
jmp
clc
lea
xor
sub
cmc
stc
rol
cmp
sub
cmc
ror
test
jmp
ror
xor
stc
cmp
add
jmp
dec
xor
sub
mov
movsx
bsf
sets
mov
test
stc
lea
test
cmp
xor
clc
jmp
jmp
jmp
jmp
sub
ror
cmp
test
xor
cmc
add
jmp
mov
bt
mov
test
stc
mov
mov
cmc
test
jmp
mov
jmp
jmp
add
cmc
xor
test
sub
rol
sub
cmc
ror
xor
cmp
add
jmp
call
mov
sub
cmp
rcr
mov
movsx
rol
movsx
pop
cmp
shl
mov
cmc
lea
xor
cmp
clc
sub
stc
rol
test
cmc
sub
ror
xor
cmc
add
jmp
sub
cmc
rol
sub
ror
xor
add
jmp
mov
mov
test
clc
add
mov
xor
adc
shl
mov
lea
stc
xor
cmp
sub
jmp
mov
movsx
lahf
bswap
pushf
btc
shl
pop
rcl
or
rcr
mov
lea
test
xor
test
cmc
sub
clc
cmc
jmp
mov
and
shl
test
mov
cmp
cmc
test
mov
sub
sbb
test
mov
clc
cmc
lea
stc
clc
xor
cmp
test
sub
jmp
jmp
add
jmp
add
xor
test
cmp
sub
cmc
clc
rol
sub
jmp
mov
add
jmp
mov
sub
sbb
cbw
mov
cmp
lea
mov
lahf
mov
cmp
add
xor
sub
cmc
stc
rol
cmp
sub
jmp
test
add
mov
shl
lahf
test
mov
lea
cmp
test
xor
test
sub
stc
clc
jmp
cmc
rol
sub
clc
jmp
push
ret
xchg
pop
btc
mov
test
cmp
lea
clc
jmp
mov
mov
pushf
or
xor
pop
xchg
adc
mov
clc
jmp
cmc
sub
rol
test
sub
stc
ror
cmc
xor
add
jmp
mov
sar
rol
mov
stc
test
lea
mov
dec
sbb
sub
mov
cmc
jmp
jmp
mov
cmp
cmc
clc
add
xor
rol
jmp
cmp
lea
mul
jmp
test
add
test
cmp
mov
shl
bswap
movzx
mov
add
test
jmp
movzx
shl
mov
cmp
stc
cmc
sub
test
shr
jmp
lea
xor
stc
jmp
sub
rol
cmp
clc
sub
ror
xor
stc
test
add
jmp
test
stc
lea
jmp
mov
movzx
neg
bsf
mov
cmc
lea
cmp
xor
test
jmp
mov
mov
pushf
pop
xchg
mov
jmp
sub
ror
cmp
stc
test
xor
test
jmp
rol
test
test
cmc
sub
clc
stc
ror
test
jmp
jmp
jmp
test
mov
mov
btr
rcl
mov
bts
mov
sar
adc
rcl
pop
mov
test
jmp
push
jmp
cmc
ror
jmp
movzx
cmp
lea
clc
xor
ror
clc
jmp
add
xor
stc
sub
rol
test
test
sub
stc
ror
cmc
xor
add
jmp
jmp
push
ret
mov
inc
dec
bswap
mov
stc
cmc
add
test
clc
cmc
mov
mov
stc
cmp
add
xor
sub
jmp
je
sub
jmp
dec
cmp
neg
jmp
ror
cmc
cmp
clc
xor
cmc
stc
add
jmp
dec
jmp
mov
mov
shl
rol
mov
add
test
cmp
shld
jmp
cmp
pop
mov
lea
clc
xor
sub
cmc
jmp
push
ret
mov
xor
mov
add
mov
mov
cmp
add
xor
cmp
sub
jmp
dec
jne
sub
jmp
cmp
add
jmp
stc
ror
test
clc
cmp
add
test
stc
not
stc
cmc
cmp
xor
test
test
stc
lea
clc
test
cmp
mov
neg
mov
add
xor
clc
sub
rol
cmc
cmp
test
sub
jmp
mov
rcl
mov
clc
mov
mov
test
lea
cmp
xor
cmp
sub
rol
test
test
sub
cmc
stc
ror
test
xor
cmc
add
jmp
movzx
lea
xor
ror
bt
neg
ror
add
and
sub
ror
not
xor
xchg
shl
adc
push
rol
cmp
movzx
mov
cmp
shl
movzx
movsx
mov
cmp
add
jmp
mov
clc
mov
test
lea
cmp
xor
sub
rol
test
cmp
sub
stc
jmp
jmp
clc
xor
add
jmp
xor
jmp
pushf
cmp
bswap
cwde
pop
bsr
mov
test
lea
test
cmc
stc
xor
cmc
sub
clc
rol
cmp
cmc
test
sub
jmp
clc
add
jmp
rdtsc
test
cmp
lea
stc
mov
stc
jmp
lea
mov
mov
cmp
stc
jmp
mov
mov
nop
pushf
clc
rcr
sub
pop
bts
jmp
mov
clc
or
mov
rol
mov
cmp
stc
add
jmp
je
push
btr
movzx
cmc
xor
and
cmp
test
stc
mov
cmc
cmp
shr
jmp
add
xor
neg
ror
jmp
mov
clc
lea
cmp
cmp
cmc
mov
shl
shr
mov
add
xor
sub
clc
rol
cmc
stc
sub
clc
cmc
ror
xor
stc
add
jmp
add
jmp
mov
mov
pushf
sub
movsx
pop
btr
or
mov
mov
test
stc
lea
xor
cmc
sub
clc
stc
rol
sub
stc
cmc
clc
ror
clc
jmp
mov
pushf
ror
xor
cmp
pop
adc
mov
cmp
lea
cmp
xor
stc
sub
jmp
ret
clc
sub
stc
rol
test
cmc
cmp
sub
cmc
stc
clc
ror
xor
stc
cmc
add
jmp
dec
cmp
xor
cmp
jmp
mov
pushf
bt
or
add
pop
neg
sar
mov
jmp
cmp
lea
xor
sub
rol
test
sub
clc
jmp
mov
ror
mov
jmp
push
ret
ror
xor
add
jmp
mov
cwde
xadd
mov
stc
mov
shr
mov
stc
lea
xor
cmp
cmp
sub
jmp
cmc
xor
jmp
lea
mov
cmc
test
mov
mov
clc
stc
lea
cmp
jmp
jmp
cmp
test
sub
clc
rol
jmp
mov
movsx
pushf
shl
pop
adc
movsx
mov
cmc
lea
xor
sub
cmc
clc
jmp
push
ret
movzx
test
rcr
shl
mov
cmp
stc
sub
cmp
imul
jmp
mov
add
mov
jmp
xor
cmp
cmc
sub
rol
sub
clc
ror
test
xor
cmc
add
jmp
jmp
ror
cmp
xor
cmp
add
jmp
jmp
test
cmp
add
jmp
lea
cmp
test
mov
rol
mov
add
cmc
jmp
ror
xor
jmp
movzx
ror
xor
lea
rcl
rcr
xor
shl
xor
mov
bt
ror
shl
neg
xor
not
bswap
xor
bsr
mov
cmc
cmp
cmp
add
cmc
mov
dec
ror
mov
stc
add
cmp
test
clc
xor
cmp
stc
jmp
mov
mov
sub
stc
shl
jmp
mov
cmovno
jmp
movzx
cmp
lea
xor
cmc
cmp
xor
stc
ror
neg
cmp
not
xor
cmp
jmp
mov
setg
cmovb
pushf
rcr
neg
shrd
pop
btc
mov
add
cmc
clc
xor
sub
jmp
mov
stc
shr
mov
rol
mov
add
cmp
shrd
mov
jmp
mov
movsx
pushf
pop
shl
mov
lea
test
xor
test
clc
sub
rol
clc
sub
cmc
stc
ror
jmp
lea
mov
movzx
setns
rol
mov
test
lea
clc
stc
jmp
mov
rcr
mov
cmp
jmp
clc
lea
cmp
stc
shld
jmp
bswap
stc
xor
clc
rol
test
not
clc
jmp
stc
ror
cmp
xor
test
test
add
jmp
mov
pushf
pop
cmc
mov
test
jmp
xor
test
sub
stc
rol
sub
ror
test
cmp
xor
stc
add
jmp
sub
stc
jmp
jmp
push
ret
movzx
cmc
rol
rol
add
xor
stc
setge
cmovb
ror
setne
not
rol
not
dec
bts
neg
movsx
inc
rcr
neg
bsr
or
xadd
xor
rcl
mov
lea
cmc
mov
sbb
shld
shl
mov
add
test
jmp
xor
add
jmp
push
ret
lea
stc
cmc
clc
xor
sub
rol
sub
cmc
ror
xor
add
jmp
stc
add
jmp
and
mov
nop
cwde
pushf
inc
rcr
btr
pop
mov
add
cmp
cmp
xor
sub
cmc
rol
stc
sub
jmp
movzx
dec
lea
xadd
xor
movzx
rol
ror
rcr
rcr
not
rol
not
dec
movsx
dec
bts
neg
dec
cmovno
inc
btc
neg
shld
shl
xor
mov
cmc
lea
test
cmc
cmp
mov
mov
cmp
add
xor
jmp
jne
pop
cmp
cmp
not
test
cmp
mov
stc
shr
mov
add
stc
cmp
xor
stc
clc
test
sub
rol
cmp
sub
stc
ror
cmp
test
test
xor
add
push
ret
jmp
mov
mov
test
lea
clc
not
not
cmp
clc
and
jmp
sub
jmp
cmc
stc
rol
test
sub
cmc
ror
xor
cmp
stc
add
jmp
sub
cmp
cmp
shl
jmp
stc
add
jmp
add
xor
rcl
neg
ror
add
not
add
sets
adc
xor
rol
push
movzx
shl
setle
bt
mov
sub
add
shl
rol
test
mov
lea
test
cmp
mov
cmp
test
jmp
stc
clc
ror
cmc
stc
not
rol
jmp
mov
btr
shl
bts
mov
test
test
not
stc
test
jmp
cmc
xor
jmp
sub
ror
cmp
xor
jmp
jmp
clc
rol
cmp
cmp
sub
ror
test
xor
stc
add
jmp
mov
cbw
btc
shl
mov
cmp
add
test
jmp
cmc
rol
jmp
ror
cmp
clc
test
xor
test
add
jmp
not
rol
dec
clc
neg
jmp
cld
rep
clc
shrd
pop
sub
popf
mov
bswap
pop
jmp
mov
bswap
cwde
xchg
pushf
test
pop
lahf
shrd
mov
cmp
test
lea
test
xor
sub
cmc
jmp
rol
test
sub
clc
cmc
ror
cmp
xor
stc
cmc
add
jmp
mov
mov
setne
cbw
pushf
rcr
xadd
pop
add
cmp
mov
cmp
lea
xor
test
sub
rol
sub
ror
cmp
cmc
xor
jmp
mov
test
jmp
jne
pop
cmc
cmp
cmp
not
cmp
mov
test
or
mov
cmp
cmp
add
xor
sub
rol
sub
ror
cmc
clc
cmp
xor
cmp
add
jmp
add
cmp
xor
cmp
sub
cmc
stc
jmp
mov
rcl
bt
btc
movzx
cmp
jmp
push
ret
add
jmp
jmp
mov
and
mov
add
jmp
mov
or
mov
cmc
cmp
test
sub
cmc
mul
jmp
add
stc
cmc
xor
sub
rol
cmp
test
sub
ror
stc
test
xor
add
jmp
jmp
mov
xadd
clc
or
mov
cmp
jmp
push
ret
clc
cmc
lea
shr
jmp
mov
shl
rol
mov
cmc
lea
cmp
shl
jmp
sub
ror
xor
cmc
test
add
jmp
mov
add
jmp
jmp
cmp
lea
mov
rcl
btc
mov
add
cmc
test
cmp
xor
cmc
sub
jmp
mov
bswap
mov
add
jmp
movzx
add
xor
jmp
xor
test
stc
jmp
add
jmp
clc
sub
stc
jmp
sub
rol
clc
sub
stc
cmc
ror
test
xor
add
jmp
ror
clc
cmp
xor
cmp
add
jmp
lea
mov
shl
nop
mov
test
cmp
lea
cmc
test
xor
clc
cmp
sub
clc
jmp
jmp
jmp
rol
clc
sub
jmp
mov
setbe
rcl
push
cpuid
lea
cmp
mov
stc
mov
cmovno
mov
bts
bt
mov
stc
movzx
pop
test
sbb
bts
mov
lea
cmp
clc
test
xor
cmp
cmc
test
sub
stc
rol
clc
sub
cmc
ror
stc
xor
add
jmp
ror
cmp
xor
test
stc
add
jmp
jmp
lahf
mov
pushf
rcr
pop
ror
cmove
mov
test
cmc
lea
xor
sub
cmc
rol
test
sub
stc
cmc
ror
xor
cmp
clc
add
jmp
cmp
add
jmp
pushf
add
sar
pop
mov
shl
sar
mov
lea
clc
stc
cmp
xor
sub
rol
cmc
test
sub
clc
stc
ror
cmp
test
xor
clc
add
jmp
inc
stc
cmp
xor
jmp
neg
cmc
jmp
clc
rol
jmp
dec
xor
sub
cmp
not
test
cmp
xor
xor
cmp
mov
sub
mov
mov
test
cmc
add
cmp
cmp
stc
xor
cmp
test
sub
stc
cmc
rol
jmp
add
mov
mov
cmp
test
cmp
lea
stc
clc
xor
clc
cmc
sub
rol
test
jmp
cmp
lea
test
shl
mov
xchg
lahf
cwde
pushf
and
shld
xor
pop
shr
shrd
mov
clc
cmp
add
cmp
jmp
xor
sub
jmp
jmp
test
clc
xor
clc
add
jmp
movzx
xadd
mov
cmp
test
lea
not
not
and
jmp
mov
mov
jmp
jmp
movzx
jmp
add
xor
test
cmp
sub
rol
sub
ror
xor
cmp
cmc
add
push
ret
mov
pushf
bt
pop
mov
cwde
xor
mov
jmp
stc
xor
test
cmp
sub
clc
rol
cmp
cmp
test
sub
stc
ror
xor
cmp
add
jmp
jmp
mov
mov
test
cmc
lea
mov
jmp
ror
xor
test
add
jmp
mov
pushf
shl
shl
pop
mov
add
stc
jmp
test
not
test
xor
lea
mov
shl
mov
cmp
add
xor
cmc
sub
rol
sub
stc
ror
test
xor
test
add
jmp
inc
neg
xor
test
mov
test
sub
cmc
test
mov
xor
btc
sub
mov
stc
lea
cmc
jmp
add
jmp
mov
bt
movsx
mov
test
lea
stc
xor
jmp
cmc
stc
add
test
cmc
xor
sub
jmp
movsx
not
rol
xchg
inc
not
dec
rol
setle
neg
inc
mov
inc
neg
bts
bswap
rcl
xor
rcl
mov
lea
test
jmp
cmc
ror
cmp
cmp
xor
stc
test
add
jmp
ror
xor
stc
cmc
test
add
jmp
add
jmp
rol
sub
stc
jmp
push
ret
mov
jmp
cmc
lea
test
xor
sub
clc
rol
cmp
cmc
test
sub
ror
clc
xor
cmc
add
jmp
dec
cmc
stc
xor
clc
lea
clc
cmp
mov
sub
jmp
ror
jmp
mov
mov
stc
mov
mov
cmp
clc
add
clc
cmp
xor
sub
jmp
movzx
add
btr
rcr
xor
cmc
xor
ror
rol
ror
btr
btc
neg
bts
xor
test
not
xor
shrd
mov
lea
cmp
stc
clc
mov
lahf
add
shrd
mov
jmp
call
mov
xor
btr
not
mov
adc
pop
setae
or
mov
add
xor
test
sub
rol
test
sub
stc
cmc
jmp
mov
xor
mov
lea
cmp
jmp
jmp
mov
sbb
or
sar
mov
jmp
jmp
rol
cmp
sub
stc
jmp
mov
mov
lea
xor
sub
rol
sub
ror
xor
add
jmp
lea
xor
sub
rol
clc
cmc
sub
ror
xor
cmp
add
jmp
push
ret
rol
cmp
sub
cmc
ror
xor
cmc
clc
cmp
add
jmp
jmp
xor
sub
clc
rol
sub
ror
cmp
stc
xor
add
jmp
sub
rol
sub
stc
jmp
cmp
sub
rol
sub
clc
stc
ror
clc
test
jmp
mov
cmovle
lahf
pushf
pop
bts
sar
sub
mov
stc
clc
cmc
lea
xor
test
test
sub
cmc
rol
test
test
stc
sub
jmp
ror
test
stc
xor
add
jmp
mov
xadd
mov
clc
test
add
clc
mov
shrd
xor
sub
mov
test
add
test
jmp
mov
cmp
mov
mov
add
jmp
mov
rcr
mov
dec
sar
mov
jmp
rol
cmp
sub
jmp
push
jmp
movzx
add
bsf
bts
xor
xor
cmovp
ror
mov
ror
bsr
btr
neg
not
setno
stc
ror
xor
mov
jmp
add
jmp
xor
add
jmp
cmc
xor
cmc
add
jmp
xor
add
jmp
dec
neg
jmp
cmc
ror
xor
add
jmp
cmc
xor
sub
rol
sub
ror
jmp
mov
nop
pushf
shl
shl
movsx
pop
xadd
mov
lea
cmp
stc
xor
jmp
jne
pop
cmp
cmc
not
jmp
push
ret
jne
pop
stc
not
stc
mov
mov
clc
lea
xor
sub
clc
rol
cmp
test
sub
ror
cmp
xor
add
jmp
pushf
pop
sub
bswap
rol
mov
add
clc
xor
cmp
sub
cmc
clc
rol
cmc
clc
sub
ror
test
xor
add
jmp
mov
clc
sub
clc
mov
inc
mov
jmp
not
mov
bts
rcl
mov
add
test
xor
sub
rol
sub
ror
cmp
xor
cmp
add
jmp
jmp
xor
clc
stc
sub
jmp
jmp
mov
movzx
seto
pushf
pop
mov
test
clc
add
jmp
xor
test
sub
cmc
jmp
mov
cmc
xadd
mov
add
test
mov
neg
movsx
stc
mov
cmc
clc
add
cmp
stc
xor
jmp
movzx
mov
test
cmp
sub
cmp
test
stc
shl
jmp
not
jmp
cmp
xor
stc
test
cmp
add
jmp
cmc
rol
cmc
sub
ror
xor
cmp
add
push
ret
xor
cmc
test
sub
rol
stc
cmc
sub
ror
xor
add
jmp
jmp
add
jmp
inc
jmp
jmp
movzx
mov
cmp
sub
test
test
not
not
jmp
mov
xchg
mov
stc
cmp
jmp
xor
jmp
mov
adc
rcr
mov
lea
shr
jmp
mov
sub
and
movzx
clc
lea
mov
rcl
mov
test
add
test
xor
cmp
test
sub
rol
clc
sub
clc
jmp
mov
setl
cwde
pushf
shld
test
pop
mov
cwde
mov
lea
xor
clc
sub
cmc
rol
sub
ror
test
clc
xor
add
jmp
lea
cmc
xor
cmp
test
sub
cmc
rol
sub
jmp
inc
cmc
xor
dec
jmp
cmc
add
xor
clc
test
sub
rol
cmp
sub
stc
cmc
ror
jmp
xor
add
jmp
add
jmp
cmp
add
xor
test
jmp
ror
jmp
test
test
lea
cmp
cmc
xor
cmc
sub
clc
jmp
movzx
mov
lea
add
mov
pushf
pop
rcr
mov
stc
lea
xor
sub
rol
sub
stc
ror
cmp
xor
stc
test
add
jmp
lea
mov
sar
adc
xor
mov
cmp
add
xor
sub
cmc
rol
test
clc
sub
clc
ror
test
clc
xor
test
add
jmp
jmp
push
ret
add
test
xor
cmc
test
sub
rol
stc
sub
jmp
cmp
xor
cmp
add
jmp
mov
cmc
add
jmp
dec
neg
inc
neg
sets
add
rol
xor
cmovns
mov
cmp
add
mov
mov
lea
cmc
xor
cmc
clc
sub
cmc
rol
test
sub
stc
jmp
mov
jmp
rdtsc
sub
mov
cmp
mov
and
movzx
mov
cmc
clc
add
cmp
cmp
xor
cmp
sub
cmc
rol
cmc
sub
clc
cmc
ror
test
xor
add
jmp
mov
mov
movsx
pushf
and
not
btc
pop
inc
mov
test
lea
xor
sub
stc
rol
cmc
sub
ror
test
xor
jmp
mov
not
sar
xchg
mov
cmp
lea
mov
bswap
mov
test
cmp
add
test
stc
xor
stc
test
sub
cmc
jmp
mov
movsx
mov
mov
pop
cmp
xor
popf
xchg
movsx
pop
cmovg
pop
cmovle
pop
cmovb
movzx
bswap
pop
mov
not
mov
pop
cmovge
pop
ret
jmp
cmc
xor
test
sub
rol
cmp
sub
ror
stc
test
xor
stc
cmp
add
jmp
push
ret
cmp
cmc
lea
cmp
shl
jmp
jmp
jmp
push
xchg
mov
movzx
pushf
push
movsx
mov
not
push
mov
not
mov
ror
add
inc
bts
xor
inc
xor
inc
test
lea
bswap
bt
mov
rcl
lea
bts
xor
mov
dec
mov
shrd
add
sub
sub
lea
btc
mov
cmc
add
cmp
test
xor
sub
jmp
pop
mov
pop
pop
mov
not
pop
pop
ret
ror
xor
add
jmp
stc
xor
stc
add
jmp
stc
ror
test
jmp
inc
cmc
xor
test
neg
jmp
sub
cmc
rol
cmc
sub
ror
xor
test
add
jmp
mov
xor
btc
pop
inc
popf
mov
movzx
pop
mov
cdq
pop
movzx
seta
cmovnp
pop
pop
pop
movzx
not
pop
ret
not
stc
cmc
jmp
mov
pushf
btr
sub
pop
cbw
mov
clc
add
stc
cmp
test
xor
sub
stc
clc
rol
stc
sub
cmc
ror
test
xor
test
test
add
jmp
mov
mov
mov
cmp
clc
not
not
and
jmp
xchg
push
jmp
jmp
ror
test
test
xor
cmp
clc
add
jmp
rol
cmp
jmp
rol
sub
clc
ror
xor
add
jmp
jmp
sub
ror
xor
add
jmp
jmp
cmp
add
jmp
shr
jmp
sub
jmp
cmovl
dec
xor
rol
sub
and
not
xor
neg
xadd
xor
mov
test
cmp
lea
test
stc
cmp
mov
shr
jmp
jmp
sub
rol
sub
ror
stc
cmc
xor
stc
cmp
cmc
add
jmp
movzx
mov
sub
add
mov
pushf
pop
jmp
sub
rol
sub
ror
cmp
xor
test
clc
add
jmp
sub
stc
rol
sub
ror
clc
cmp
jmp
cmp
xor
jmp
mov
mov
mov
pushf
shrd
pop
cwde
xor
add
mov
cmp
cmc
add
cmp
test
xor
sub
jmp
ror
cmp
xor
add
jmp
jmp
jmp
ror
xor
stc
clc
test
add
jmp
movzx
rcr
mov
cmc
cmp
jmp
xor
stc
jmp
cmp
sub
stc
cmc
ror
jmp
xchg
jmp
sub
ror
xor
cmp
test
add
jmp
mov
cmp
lea
test
mov
cmc
and
test
mov
add
stc
xor
sub
rol
clc
test
sub
stc
cmc
ror
jmp
movzx
lea
test
stc
test
xor
dec
xor
cmp
sub
test
not
xor
test
xor
mov
sub
mov
shr
shl
and
mov
stc
lea
cmp
cmp
test
xor
stc
sub
stc
jmp
shl
jmp
mov
mov
shr
mov
stc
sub
not
not
cmc
test
cmp
and
jmp
rol
test
clc
sub
clc
ror
test
xor
test
add
jmp
sub
cmc
stc
rol
test
sub
stc
ror
test
xor
add
jmp
jmp
mov
mov
stc
add
mov
rcr
bsr
shl
mov
add
clc
cmp
xor
jmp
not
and
mov
pushf
test
sbb
pop
movsx
and
mov
test
lea
cmp
xor
cmc
test
sub
rol
test
test
sub
ror
xor
add
push
ret
jmp
push
bts
movzx
sbb
lea
popf
shr
and
btc
mov
jmp
add
jmp
movzx
cmp
mov
cmp
lea
not
cmp
jmp
xor
sub
clc
rol
test
sub
stc
ror
stc
jmp
rol
test
test
sub
stc
ror
cmc
cmp
xor
cmc
clc
add
jmp
push
ret
jmp
push
jmp
call
add
mov
pop
setnp
not
pop
pop
jmp
shr
jmp
aaa
(bad)
push
scas
std
add
aas
xchg
jae
cmp
jmp
push
(bad)
adc
sub
jae
xor
dec
aad
jae
push
(bad)
or
cmp
sub
sbb
jo
aam
and
(bad)
movs
jne
xchg
cmp
popf
jo
mov
test
jo
repnz
xor
push
or
pop
mov
fmul
inc
or
or
mov
repz
or
pusha
aas
or
loopne
pop
pop
jo
jne
pusha
adc
xchg
or
mov
ja
js
ret
cmova
or
xor
js
shl
js
jnp
cmova
(bad)
inc
(bad)
dec
jmp
(bad)
repz
scas
test
inc
pushf
jp
or
mov
jo
pop
jl
pop
mov
mov
xlat
jmp
pop
jg
pop
repz
int
clc
call
sbb
pop
cmps
dec
or
jo
loope
test
js
ins
ret
retf
ds
sub
and
mov
mov
scas
add
aas
pop
sub
cmova
sbb
xchg
lock
mov
clc
popf
in
and
(bad)
call
(bad)
iret
or
mov
mov
clc
and
push
outs
(bad)
push
and
or
jmp
xor
lock
jecxz
(bad)
rcr
or
xadd
shrd
mov
jmp
jb
mov
clc
cmp
mov
cmp
jmp
mov
cmovo
mov
lahf
lea
jmp
je
mov
mov
mov
rol
cmp
inc
mov
test
cmp
cmp
add
test
cmp
xor
jmp
mov
pop
jmp
call
sub
test
add
cmp
jmp
xchg
js
xchg
pop
fwait
jo
pop
lds
jo
hlt
not
(bad)
jo
pop
xchg
pop
jae
and
pop
mov
clc
jp
pop
pop
sahf
ja
jo
pop
popf
add
mov
js
dec
mov
mov
mov
aad
(bad)
pop
sbb
and
push
adc
gs
xlat
xchg
cdq
clc
jns
push
mov
xchg
sub
gs
pop
inc
loope
inc
mov
ds
call
(bad)
gs
cmp
loop
call
nop
pop
out
sti
(bad)
and
clc
pop
xor
dec
fisub
xchg
call
sub
gs
lods
pop
popa
gs
push
lock
jecxz
call
xlat
xchg
dec
gs
inc
mov
cld
call
xchg
xchg
call
xor
and
gs
adc
sub
inc
test
shl
cmps
xlat
pop
call
in
in
gs
icebp
rcr
stos
gs
(bad)
js
adc
gs
cmp
gs
push
(bad)
adc
sub
jl
aaa
fadd
enter
call
add
not
xchg
pop
not
setne
pop
pop
jmp
inc
jmp
pminub
call
pop
push
(bad)
adc
and
pop
bound
or
add
mov
rol
cmc
cwde
mov
sbb
bts
xor
shl
bswap
lea
cbw
mov
xchg
mov
jmp
or
adc
(bad)
loopne
push
xor
dec
ret
push
push
push
inc
push
dec
xor
cs
ins
add
cmp
inc
pop
and
sub
and
jo
(bad)
pop
out
clc
rcr
push
jo
and
pop
jo
mov
xchg
sti
imul
push
or
les
cmc
or
or
pop
into
push
pop
stc
cmp
mul
pop
stos
es
stc
mov
pushf
sbb
push
mov
js
xchg
pop
push
(bad)
cmps
pop
xchg
add
stc
mov
mov
clc
sti
ficom
out
stc
mov
clc
stos
add
inc
je
sbb
inc
aam
xlat
push
(bad)
push
call
(bad)
into
jo
imul
(bad)
mov
(bad)
mov
mov
jmp
jns
js
pop
(bad)
jo
fnstenv
or
inc
add
pop
rcl
jo
xlat
cmp
add
pop
sbb
jo
sub
not
(bad)
push
push
inc
jbe
inc
push
(bad)
fst
outs
push
inc
call
push
pop
shl
(bad)
cmp
cs
clc
bound
mov
icebp
lea
cmp
test
stc
cmp
retf
jo
into
cli
mov
jae
test
dec
movs
mov
jae
out
adc
jo
cmps
or
sti
dec
sbb
mov
sbb
in
aas
mov
pop
push
mov
mov
fcomp
cmp
dec
cmp
cmc
xlat
iret
mov
dec
sbb
cmp
and
fcom
dec
pop
mov
clc
cs
mov
xor
dec
mov
cmp
loopne
jo
adc
add
cmc
xor
mov
push
xchg
lds
mov
xchg
pop
jmp
or
adc
dec
icebp
xor
mov
leave
cmc
mov
test
clc
cmc
adc
test
fidiv
xchg
jg
jo
ficomp
pop
mov
repnz
pop
mov
dec
shl
cmp
xor
jo
inc
addr16
jo
bound
or
xchg
cmp
in
fnstenv
add
xchg
pop
push
xlat
pop
sub
jo
add
push
js
or
popa
pop
cmp
pop
ins
lods
fbstp
shl
jae
sar
pop
dec
fcomip
jo
push
cmp
lea
pop
or
xor
jo
push
push
pop
jo
push
jbe
jo
mov
sahf
(bad)
(bad)
pop
js
lock
jbe
add
adc
push
inc
sbb
xchg
jns
mov
outs
(bad)
and
imul
sti
cmp
xchg
pop
sti
cmp
sti
js
fdivr
add
fld
js
cli
pop
pop
add
sti
mov
js
lock
mov
inc
les
pop
pop
adc
imul
add
mov
test
sti
clc
fldcw
pop
xchg
mov
sti
clc
popf
cli
push
stc
or
rol
cmc
out
ret
pop
pop
sub
cmp
cmc
sti
clc
fwait
pusha
add
and
call
call
adc
pop
xchg
(bad)
sti
cmp
mov
sub
jbe
sti
mov
clc
add
test
add
add
inc
dec
cdq
jg
push
mov
jl
dec
push
or
sahf
les
into
add
jg
into
icebp
jl
mov
popa
add
dec
add
outs
add
js
add
jecxz
add
ret
add
xchg
jl
jp
test
inc
push
test
add
xchg
clc
(bad)
fdiv
pop
adc
xor
jg
js
cmp
aas
or
rol
mov
mov
clc
jae
les
jg
loop
out
cmp
and
cmp
jle
pmullw
jnp
repnz
ins
cmp
and
sbb
mov
and
test
xchg
std
mov
cld
pop
fdiv
test
cmp
mov
push
fist
clc
jb
dec
pop
adc
cmp
es
sbb
aas
outs
adc
mov
jmp
sub
fs
addr16
addr16
add
jb
push
lock
ret
clc
mov
add
pop
xchg
lock
mov
fldcw
jle
or
mov
push
test
mov
clc
loope
mov
or
lock
js
or
xchg
pop
sbb
jecxz
mov
cmp
inc
sub
jp
xchg
or
xchg
jo
mov
sub
jo
div
add
mov
inc
mov
je
inc
not
add
clc
inc
dec
jo
pushf
in
jae
pushf
jmp
pop
jno
cli
push
or
xchg
sub
jo
das
sub
clc
xor
jae
ror
pop
mov
cwde
jae
shl
test
test
pusha
fs
and
pop
xlat
mov
mov
out
jo
rcr
jae
cmp
pop
pop
scas
inc
mov
mov
mov
push
mov
pop
ja
popf
jae
mov
jecxz
inc
repnz
mov
lea
int3
add
jo
pop
pop
in
jo
push
daa
pusha
pop
push
hlt
lods
mov
cmp
or
aas
add
mov
jo
sbb
pop
(bad)
std
pop
data16
test
cwde
jo
add
retf
jae
sar
pop
sbb
cmp
or
inc
test
sti
sub
aaa
pop
mov
js
pop
pop
mov
js
jmp
mov
sub
mov
clc
sbb
pop
push
scas
jo
loopne
stos
jo
cli
loope
add
pop
test
mov
mov
jg
clc
pop
cdq
mov
movs
(bad)
jo
les
jae
(bad)
jo
pop
add
cmp
fidiv
js
lds
push
push
stc
jo
imul
fnstenv
dec
stos
jo
in
pushf
jo
jg
add
cmp
jae
bound
cmp
stos
jo
sub
jb
js
mov
pop
xchg
test
(bad)
mov
stos
pop
jg
pop
adc
xor
out
pop
bound
mov
js
mov
pop
out
jo
repz
cmp
outs
jo
lds
ins
jo
ins
dec
mov
cwde
popf
lds
(bad)
jns
inc
pop
push
xlat
cli
add
mov
jo
dec
mov
pop
fnstcw
add
add
jo
loopne
pop
pop
stc
pop
(bad)
lock
dec
ja
jo
push
jmp
inc
inc
int
mov
clc
nop
sbb
pop
les
(bad)
frstor
leave
mov
mov
mov
clc
and
mov
mov
clc
shr
inc
aas
test
pop
mov
imul
ss
jo
or
cmp
loope
out
jae
imul
movs
pop
jo
xor
push
jo
lods
ds
arpl
loopne
dec
jo
mov
mov
test
(bad)
(bad)
lea
clc
push
(bad)
pop
sbb
pop
push
jl
cmp
add
js
pop
rcl
push
inc
or
js
adc
pop
push
push
mov
xor
retf
jae
push
js
popa
(bad)
jne
lahf
bound
inc
adc
cld
ds
inc
out
push
(bad)
fimul
xchg
sbb
daa
and
pop
cmc
pop
imul
sbb
js
enter
loope
nop
out
idiv
ja
mov
cmp
cmp
jmp
sub
cmc
sub
lea
cmp
jmp
jle
mov
cmp
mov
test
cmp
jae
mov
lea
rcl
mov
jmp
jae
movzx
cmp
shl
test
clc
shl
stc
cmp
or
dec
inc
inc
btc
mov
shl
movzx
movsx
mov
jmp
push
(bad)
adc
and
dec
inc
xor
sub
jnp
jmp
push
div
pusha
jmp
mov
inc
sbb
dec
pop
popf
inc
pop
and
dec
jb
inc
gs
ss
pop
mov
pop
push
xchg
sahf
jo
add
push
jo
aas
ja
jae
inc
popf
daa
sbb
shl
sbb
nop
sbb
clc
rcl
xchg
xchg
mov
js
sub
mov
lea
mov
mov
js
ficom
mov
inc
call
loop
jno
adc
in
clc
xchg
data16
jno
clc
sub
mov
pop
repnz
jo
mov
jo
std
jns
pop
fcomp
sbb
pop
aas
mov
mov
xor
jo
dec
jbe
pop
mov
xchg
mov
jp
loopne
mov
cmps
xor
jo
mov
jae
movs
dec
mov
inc
dec
lds
sar
xchg
mov
sbb
xor
(bad)
in
sahf
push
sbb
mov
js
adc
sbb
clc
xchg
sub
(bad)
test
push
in
ret
arpl
fimul
add
cld
mov
mov
mov
mov
test
stos
jae
lods
mov
jb
xchg
jno
cmp
dec
movs
pop
test
pop
jecxz
jo
ret
jo
lea
cmp
pop
or
sub
xchg
neg
jo
mov
and
popa
push
push
in
jae
xor
cmp
pop
cmp
pop
arpl
jae
mov
loop
pop
mov
adc
add
pop
pop
test
and
(bad)
es
pop
sbb
neg
jmp
call
lea
test
test
jmp
xor
sti
jae
pop
(bad)
sub
sub
jo
xchg
xchg
fdiv
popf
mov
icebp
adc
push
push
inc
pop
mov
clc
and
sbb
js
xchg
dec
pop
xchg
pop
inc
mov
dec
inc
jo
loope
jae
adc
sbb
xchg
jbe
jo
and
jo
dec
and
xchg
pop
adc
ret
add
repz
in
cmp
sbb
dec
pop
jp
dec
stc
pop
loopne
xchg
loop
jo
inc
add
clc
add
pop
pop
in
push
jp
mov
sbb
push
xchg
movs
jo
ins
push
jbe
inc
(bad)
clc
ds
jecxz
jl
data16
(bad)
mov
sbb
leave
int3
jnp
fnsave
(bad)
xor
jnp
cwde
push
js
jecxz
add
jge
js
dec
dec
test
mov
add
jnp
sbb
test
lods
jl
(bad)
sbb
mov
inc
cmp
xor
xchg
sbb
sub
push
xchg
mov
loop
cmps
test
scas
push
push
xchg
pushf
mov
test
clc
(bad)
outs
xchg
mov
clc
stos
add
jecxz
inc
leave
iret
push
test
mov
fld
sar
jae
ds
jl
fwait
mov
push
call
jae
movzx
shl
cmc
shl
clc
cmp
or
inc
bt
stc
not
mov
test
shr
cmc
cmp
imul
jmp
mov
jmp
mov
movsx
xchg
mov
jmp
or
inc
and
cmc
mov
test
shr
imul
test
cmp
jmp
sbb
add
test
in
dec
pop
(bad)
icebp
js
sub
dec
push
(bad)
adc
and
je
ds
aas
int
ins
xchg
cmp
inc
sub
bound
or
mov
stc
add
mov
test
movzx
cmc
clc
cmp
jmp
pop
xor
or
mov
mov
jo
xor
dec
(bad)
(bad)
pop
mov
pop
sub
xor
mov
outs
jae
loop
or
mov
fwait
out
cmp
or
aam
pop
cmp
jo
aas
rcr
xchg
mov
xchg
(bad)
jo
push
jae
jo
test
clc
or
and
xchg
mov
mov
clc
jb
in
pop
jl
pop
push
push
pop
cmp
jae
div
jo
adc
push
clc
pop
(bad)
pop
pop
pop
push
pop
push
add
(bad)
pushf
pop
ror
js
lds
inc
jno
dec
pop
push
mov
push
arpl
dec
out
mov
das
stc
ret
js
cmp
in
mul
pop
neg
sbb
jns
in
jbe
out
es
pop
in
scas
mov
in
dec
push
xor
xchg
loopne
clc
pop
push
clc
out
mov
sbb
dec
in
add
xchg
cmp
mov
pop
sbb
hlt
shl
adc
js
in
dec
cmp
xchg
adc
icebp
and
(bad)
leave
ret
sbb
leave
cmps
out
daa
inc
sbb
cmps
sbb
and
xor
(bad)
in
ret
adc
ret
jmp
sbb
js
inc
in
cmps
xor
fsub
pop
je
popw
neg
call
js
test
xor
gs
lea
xchg
in
aam
cmp
int3
adc
mov
sub
call
out
and
and
call
jno
call
mov
gs
xchg
out
cmp
je
xchg
cmp
call
sbb
iret
gs
or
and
hlt
xor
inc
sub
js
int
gs
not
scas
popw
aas
xchg
in
mov
mov
js
push
shl
aas
lds
xchg
jmp
mov
jns
fwait
(bad)
div
pop
mov
xor
ds
leave
inc
jp
cmp
adc
clc
mov
ror
pop
xchg
ror
js
sub
inc
xchg
mov
(bad)
jo
lahf
(bad)
clc
jo
popf
mov
pop
dec
or
inc
inc
or
push
mov
inc
mov
(bad)
jmp
pop
div
clc
sub
xchg
fimul
(bad)
pop
push
fadd
xchg
js
mov
and
push
pop
sar
mov
mov
xchg
repz
int3
addr16
inc
mov
movs
aad
pop
cmp
arpl
retf
ret
test
inc
(bad)
(bad)
inc
das
pop
out
jecxz
jl
jmp
sub
test
test
cmc
sub
add
mov
jmp
mov
movsx
pop
jmp
(bad)
and
mov
fimul
pop
mov
(bad)
js
and
lea
pop
cmp
xor
push
fst
pop
js
sbb
pop
enter
cli
nop
jo
ss
into
in
idiv
mov
js
or
cmps
pusha
loopne
mov
clc
mov
jecxz
inc
out
out
pop
mov
xchg
cmp
mov
xchg
clc
jbe
repz
retf
adc
out
cmp
data16
xchg
fmul
adc
mov
xchg
out
jmp
inc
call
adc
std
fistp
adc
stos
jle
jmp
jae
mov
ror
mov
shr
btr
mov
cmp
clc
mov
movzx
mov
cmp
test
mov
mov
test
sub
test
push
xchg
btr
mov
cmp
jmp
jae
mov
mov
cmc
sub
cmc
clc
cmp
shr
add
mov
jmp
test
clc
movzx
cmp
clc
shl
stc
shl
or
inc
sbb
cmp
rcl
mov
shr
test
cmp
imul
test
jmp
pop
std
jo
sbb
popa
mov
inc
pop
cld
dec
pop
pop
retf
clc
js
jns
inc
adc
cmp
aaa
pop
inc
ret
xchg
jo
push
pop
jo
jp
mov
jl
(bad)
(bad)
inc
std
jns
jae
xor
pop
add
xchg
lods
int3
jo
(bad)
into
mov
xor
jo
xchg
aad
js
mov
pop
int
mov
mov
clc
cmp
(bad)
hlt
jae
sub
mov
pop
(bad)
sbb
add
cld
sub
xchg
pop
jo
mov
lods
movs
xor
(bad)
pop
retf
out
(bad)
jae
push
pop
test
inc
inc
push
mov
cmps
or
stos
mov
jae
aaa
pop
mov
pop
data16
les
jo
adc
stos
jo
sbb
ret
jae
les
stos
shl
sub
fidiv
xor
pop
loop
xor
call
sub
clc
jecxz
mov
mov
cmp
std
mov
jmp
leave
jo
mov
jae
jbe
jae
xchg
aad
pop
mov
jo
or
clc
xchg
(bad)
mov
xchg
imul
cs
js
js
pop
fild
js
add
repz
xchg
popa
jl
pop
pop
jno
js
dec
xchg
dec
xor
mov
clc
scas
add
add
mov
into
jl
push
mov
add
out
jg
mov
xor
enter
fcomp
jg
pop
cbw
cwde
pop
mov
pop
jmp
push
ror
mov
and
jecxz
loope
bound
(bad)
adc
sub
outs
pop
xor
add
mov
jae
mov
movzx
shl
shl
test
or
movzx
mov
inc
bt
movzx
or
mov
clc
cmc
jmp
push
call
adc
adc
and
sbb
test
mov
stc
sub
jmp
push
call
jae
mov
test
clc
test
movzx
shl
clc
shl
jmp
pop
cmp
fs
mov
inc
call
jl
add
push
cmp
int3
pop
sub
(bad)
pop
outs
jmp
jo
pop
pop
test
mov
cmp
mov
cmps
arpl
cmp
jo
or
fwait
jo
mov
jbe
cli
jo
push
sub
pop
(bad)
xchg
icebp
xor
sbb
pop
inc
pop
bound
cs
mov
mov
mov
js
icebp
icebp
pop
cld
push
cmp
xchg
repz
(bad)
fnsave
jo
or
pop
jo
xchg
mov
mov
mov
push
cmp
pop
or
ret
push
(bad)
pusha
jo
jnp
lods
jo
outs
dec
mov
cmp
xchg
xor
xchg
std
aad
mov
clc
loope
jg
es
pop
or
mov
lds
out
je
jmp
inc
icebp
xor
ja
jbe
cmp
pop
lahf
stos
cmp
mov
clc
(bad)
enter
inc
mov
lahf
mov
clc
and
xchg
mov
out
and
ins
add
aas
fmul
mov
pop
daa
cmp
bound
(bad)
adc
mov
jns
mov
cmp
jg
clc
(bad)
bound
mov
pop
adc
stc
rcr
ja
mov
mov
sti
out
or
cmp
stc
cld
ja
fldenv
mov
test
inc
fimul
xchg
pusha
arpl
test
jecxz
xchg
mov
mov
and
je
movs
in
js
scas
mov
cli
jle
je
idiv
je
retf
jmp
push
les
cmp
in
je
add
je
mov
pop
add
ja
in
inc
add
mov
nop
mov
aaa
je
les
cli
ja
ret
retf
sbb
icebp
mov
jmp
je
sbb
add
out
test
jae
repz
pushf
xchg
jo
and
lahf
jo
nop
add
pop
test
lods
jo
lock
jo
in
push
jecxz
clc
mov
cmps
movs
mov
pop
dec
pop
mov
sub
leave
lock
call
clc
daa
ja
xor
aaa
inc
push
call
push
call
mov
pushf
xchg
lds
jae
js
in
gs
pop
(bad)
enter
imul
dec
pushf
add
cmp
shl
cdq
clc
cmp
xor
in
call
sub
xchg
call
stos
frstpm(287
gs
out
sub
in
in
call
sub
xchg
sub
call
(bad)
jge
gs
xor
mov
(bad)
push
ror
std
imul
sub
aam
xor
jae
enter
jne
mov
inc
jae
cmp
jmp
push
sti
jo
jno
jg
pop
scas
and
out
xchg
jo
out
ja
inc
ja
jle
pop
call
jo
mov
inc
jae
jae
stos
pop
fwait
out
pop
ss
pop
dec
int3
inc
jo
jne
mov
js
adc
xchg
sub
jo
pushf
fdivr
add
mov
jo
sti
fnsave
clc
clc
pop
pop
add
pop
mov
(bad)
aam
xchg
add
shl
cli
aaa
lock
cli
jno
mov
enter
js
adc
pop
dec
push
add
js
outs
cld
mov
push
stos
outs
mov
pop
pop
push
cmp
mov
pop
mov
cmp
mov
pop
vpshufhw
sub
(bad)
jae
jp
(bad)
pop
cmp
aam
clc
cmc
(bad)
es
cmp
jl
push
test
pop
or
(bad)
push
cwde
mov
pop
add
xchg
mov
jo
rcl
clc
dec
dec
fwait
mov
sub
(bad)
pop
repz
add
xor
bound
repnz
pop
xor
jl
jo
lock
mov
js
fistp
add
clc
ja
(bad)
pop
pop
sbb
addr16
loopne
(bad)
test
pop
cmps
stc
add
js
fisttp
add
ror
jo
xor
retf
cs
clc
fisttp
dec
push
jo
push
hlt
cli
push
and
jo
mov
ja
js
cmc
pop
gs
jo
imul
sbb
jbe
jo
inc
add
push
pop
sub
(bad)
mov
fdiv
(bad)
pop
push
sbb
pop
push
sbb
jo
push
ja
dec
retf
mov
loopne
add
jmp
inc
pop
mov
outs
retf
jo
push
ss
jae
jl
mov
(bad)
pop
jge
clc
sub
sbb
cwde
mov
inc
mov
xchg
push
mov
push
mov
mov
jbe
dec
pop
adc
(bad)
xor
cli
pop
xor
fdiv
jo
jno
push
jo
sub
(bad)
imul
movs
add
js
les
test
xchg
cdq
jae
out
stc
pop
xchg
call
push
jo
imul
and
test
ror
clc
mov
loopne
jo
out
cli
jae
out
cli
add
mov
shl
cli
jo
sbb
shl
cmp
mov
(bad)
adc
daa
pop
inc
test
inc
cs
xor
pop
outs
add
(bad)
and
add
jae
(bad)
adc
jo
mov
or
mov
cmp
iret
imul
call
hlt
pop
inc
lahf
pop
loop
inc
(bad)
popf
stos
jae
icebp
xchg
pop
inc
outs
fmul
cli
or
frstor
clc
pop
repnz
cmp
std
int
clc
daa
sar
pop
pop
xchg
pop
pop
out
(bad)
cmp
jae
xor
pop
js
fisttp
jo
inc
mov
iret
inc
(bad)
and
mov
movs
ins
jo
push
or
xchg
jo
imul
sub
mov
or
mov
jp
mov
rol
jo
out
pop
pop
ins
imul
pop
pushf
fwait
(bad)
push
jo
jg
jg
js
daa
mov
inc
pop
rol
hlt
mov
xchg
pop
fadd
xchg
jae
pop
retf
add
cmp
mov
xchg
pop
xchg
scas
mov
dec
scas
jo
repnz
jo
div
scas
jo
push
pop
push
pop
xor
and
ins
jae
jg
pop
imul
mov
cmp
sub
and
dec
jo
push
push
jmp
inc
dec
pop
dec
mov
cmp
jae
xchg
in
jo
push
mov
pop
xchg
cmp
clc
call
lods
mov
pop
pop
enter
idiv
pop
inc
inc
dec
jo
push
add
pop
pushf
mov
lock
jo
test
jae
cdq
in
pop
and
les
sub
jo
dec
xor
mov
pop
mov
jo
add
sub
xlat
dec
mov
inc
sub
add
retf
fadd
js
pop
or
sub
mov
dec
js
out
push
pop
or
test
lds
js
out
lock
js
pop
not
mov
int3
jno
jo
xor
mov
lea
mov
pop
pop
cmp
jo
pop
int
or
mov
xor
jmp
pop
xchg
cli
mov
add
js
mov
xchg
xor
pop
bnd
fnstenv
pop
lds
inc
repz
sub
in
aam
xchg
je
jo
push
push
adc
inc
cld
xchg
lock
jo
popf
addr16
mov
cmp
sub
or
mov
jo
ret
and
pop
adc
das
pop
sub
test
int3
or
add
(bad)
cld
fnstenv
(bad)
pop
mov
pop
add
jo
(bad)
cdq
shl
loope
cli
push
dec
add
xchg
das
jae
cwde
sbb
mov
fld
mov
xchg
movs
jo
xor
test
aaa
pop
xchg
jae
mov
xchg
test
and
stos
fidiv
(bad)
ss
js
add
pop
add
daa
mov
mov
mov
clc
pop
js
mov
mov
stc
imul
mov
cmp
outs
ret
pop
sti
stc
push
pop
into
adc
mov
or
jo
jno
jbe
inc
fnop
jg
xchg
pop
cdq
fst
jp
mov
clc
cmps
neg
in
gs
in
mov
fucom
xchg
retf
mov
clc
xchg
mov
add
js
cmps
in
pop
(bad)
call
pop
jo
stos
rcl
cmp
rol
sub
inc
push
fs
push
sbb
fwait
cmp
mov
add
xor
aas
fs
repz
fwait
mov
clc
and
movs
fs
adc
adc
test
stc
shl
lods
imul
xchg
mov
addr16
fwait
clc
sbb
ds
fxch
xchg
fwait
js
fldcw
inc
xlat
std
popf
addr16
cmc
fcomp
fwait
mov
(bad)
jmp
fwait
mov
cmp
gs
clc
call
pop
mov
fwait
clc
imul
fs
and
ds
out
fwait
cmp
fwait
cmp
repnz
cmp
mov
add
jmp
fwait
cmp
test
clc
jmp
fs
or
mov
clc
or
outs
fwait
mov
clc
fbld
fs
push
jle
xchg
jne
mov
jmp
cdq
pop
dec
fs
sub
in
jns
pop
outs
dec
inc
cwde
js
in
fs
(bad)
lds
lea
retf
fwait
mov
js
aaa
mov
jbe
xchg
and
jb
mov
mov
push
retf
leave
retf
pop
jo
loope
sbb
leave
jae
sbb
sahf
pop
mov
clc
push
ror
pop
push
cmp
sbb
jb
mov
(bad)
idiv
mov
js
xchg
push
inc
hlt
add
dec
int
and
cmp
sub
xchg
and
hlt
inc
jp
xchg
iret
adc
inc
shl
jmp
mov
out
mov
js
adc
xchg
sbb
and
mov
push
jns
ficomp
popa
jns
pusha
inc
pop
test
cmp
scas
cli
cmp
cmc
mov
jmp
(bad)
out
jo
sbb
je
mov
lds
call
pop
adc
jo
mov
imul
(bad)
out
and
xchg
mov
ins
jo
push
pop
cmps
pop
push
pop
adc
mov
cmp
aad
mov
fstp
jo
inc
arpl
jo
sbb
mov
xchg
js
in
inc
test
mov
inc
arpl
sbb
xchg
pop
xchg
pop
adc
jo
test
sbb
or
pusha
jo
bound
jo
scas
fstp
mov
mov
inc
(bad)
push
mov
cmp
and
jg
pop
jecxz
jae
and
pop
(bad)
jp
lods
cmp
pop
mov
retf
clc
imul
lods
jo
les
fucomip
into
ret
sbb
pop
out
jo
jg
jae
xor
(bad)
ror
mov
mov
pop
ret
pop
clc
cmp
pop
(bad)
pop
mov
jo
lahf
popf
loopne
clc
scas
and
inc
pop
add
pop
mov
clc
add
ror
mov
nop
pushf
jo
(bad)
push
push
pop
(bad)
and
adc
push
push
mov
mov
clc
loope
sahf
pop
out
fimul
pop
cmp
sub
js
into
or
inc
push
jmp
(bad)
adc
sub
jl
aas
shr
or
sub
inc
into
mov
stos
pop
add
push
lds
sbb
fbstp
jecxz
or
fld
stos
mov
mov
clc
mov
xchg
rol
clc
daa
xchg
cmps
loopne
pop
and
mov
inc
mov
stc
push
push
jo
cmpxchg8b
mov
js
sar
(bad)
std
pop
test
jo
mov
xor
pop
xchg
adc
mov
jo
lods
mov
jo
jnp
retf
push
setge
jo
mov
mov
pop
cs
inc
jo
push
fs
xchg
cli
push
adc
cs
daa
pop
and
jae
retf
pop
(bad)
addr16
inc
(bad)
out
xchg
sbb
inc
xchg
imul
sbb
mov
lock
mov
(bad)
daa
movs
cwde
mov
xchg
lock
addr16
adc
(bad)
out
jmp
addr16
(bad)
cmps
mov
mov
jecxz
jo
es
jae
stos
sti
(bad)
cmp
mov
push
popa
and
xor
jo
inc
jns
(bad)
daa
lds
jo
cmc
fnstenv
jne
cwde
lock
jo
pop
ds
dec
ret
ret
(bad)
out
loop
(bad)
addr16
mov
data16
enter
pop
jecxz
dec
(bad)
addr16
fldenv
nop
(bad)
daa
lods
mov
ror
mov
shr
cwde
xor
and
mov
jmp
cmc
and
clc
stc
sub
test
cmc
or
mov
cmp
jae
shl
jmp
sbb
push
mov
sub
fbld
mov
bt
mov
mov
cmovl
bsf
mov
clc
mov
neg
mov
cmp
cmc
mov
or
bswap
bts
mov
test
stc
cmp
mov
sub
shl
dec
mov
test
mov
xadd
mov
cmp
mov
test
cmp
mov
cmp
mov
xadd
sub
ror
mov
cmp
mov
jmp
je
sub
mov
movzx
pop
jmp
add
jae
inc
ror
(bad)
jne
add
pop
mov
mov
fwait
jo
xlat
jmp
pop
jnp
pop
repz
retf
ret
stos
inc
pop
and
adc
mov
outs
jae
aaa
jns
pop
jecxz
test
js
jae
adc
pop
fs
(bad)
jns
cmp
xchg
jp
jg
pop
pop
aas
jo
(bad)
movs
adc
pop
hlt
scas
and
mov
add
mov
aaa
ins
pop
and
nop
mov
(bad)
in
cmp
add
clc
gs
mov
ret
ins
pop
loopne
nop
mov
fld
nop
mov
jno
cmp
inc
outs
sbb
outs
pop
or
mov
imul
inc
pop
mov
outs
inc
push
sub
jmp
outs
inc
mov
mov
stc
nop
cmp
add
outs
pop
ins
pop
lods
iret
jg
cmp
jns
clc
call
sar
push
std
push
ins
xchg
fs
cmp
sbb
test
pop
dec
int3
adc
nop
clc
push
or
ins
xchg
aaa
nop
mov
mov
sti
popa
and
inc
jle
in
jp
xchg
js
inc
outs
inc
das
sub
pop
adc
sub
nop
cmp
jmp
outs
inc
mov
push
mov
and
inc
ss
outs
(bad)
pop
push
popa
outs
pop
sub
dec
outs
(bad)
lods
cmc
mov
mov
push
nop
mov
clc
and
es
mov
clc
lds
outs
inc
add
aad
inc
mov
in
nop
cmp
aas
push
jne
inc
mov
pop
jmp
jmp
jae
mov
test
test
movzx
stc
shl
cmp
shl
test
or
mov
inc
inc
ror
mov
rcr
mov
test
test
shr
test
imul
cmc
cmp
jmp
jae
cmp
jmp
jne
mov
cmp
stc
cmp
jmp
mov
imul
(bad)
(bad)
cld
add
pop
adc
pop
inc
cdq
jo
push
ins
js
inc
enter
pop
pop
into
enter
xor
pop
mov
pop
and
sub
push
pushf
inc
pop
pop
jg
out
call
adc
clc
sti
add
xchg
sbb
cmp
into
sar
and
sbb
jo
enter
js
jne
ds
or
inc
pop
inc
adc
xchg
sbb
aaa
or
cmp
sbb
cmc
mov
js
sub
mov
mov
clc
jnp
jno
popa
jmp
jno
xor
mov
mov
sbb
sub
xchg
mov
(bad)
xlat
mov
inc
stos
fisttp
jno
push
or
jno
sub
dec
jb
leave
push
sti
add
stos
mov
inc
sar
add
adc
or
clc
outs
ret
jp
(bad)
sub
mov
dec
lea
mov
jno
dec
cmps
scas
jno
fs
cmp
sbb
movs
jno
popa
mov
ins
jb
dec
das
pusha
mov
and
adc
cmp
test
xchg
js
ror
mov
aas
mov
sub
cmp
jo
inc
pop
sbb
pop
fimul
mov
xor
adc
lea
jl
jno
mov
fcomp
jecxz
jb
jo
xchg
mov
xor
sbb
(bad)
mov
mov
mov
add
inc
imul
mov
in
add
jno
in
xchg
call
cmp
not
jno
ror
add
add
pop
mov
inc
cmp
xor
daa
lahf
jno
mov
mov
mov
mov
js
jle
inc
and
pop
mov
clc
pop
js
call
inc
add
mov
push
mov
hlt
dec
jno
sar
mov
call
mov
ins
sub
mov
jo
jb
(bad)
xlat
xor
inc
add
adc
jno
add
cmp
xchg
jne
mov
mov
cmp
xor
pop
and
jno
dec
mov
cli
or
jno
pop
fxch
mov
clc
dec
ret
inc
call
sbb
lea
pop
popa
loope
clc
enter
inc
je
out
mov
jae
jno
jo
adc
cmp
sub
jno
xlat
cmp
cmp
outs
sti
pop
(bad)
or
xchg
mov
daa
jb
test
mov
mov
cmp
in
je
clc
sbb
or
(bad)
cmc
mov
clc
loopne
aam
inc
(bad)
out
or
leave
or
pop
call
dec
or
mov
call
into
fimul
inc
or
sub
xchg
idiv
imul
inc
outs
iret
repnz
cmp
pop
rcr
retf
cmc
mov
js
xor
or
xor
adc
xchg
cmc
mov
mov
pop
(bad)
mov
push
cld
mov
jnp
mov
mov
xor
jno
lock
test
mov
aam
xor
clc
sar
adc
mov
mov
jmp
jno
test
clc
(bad)
jnp
push
mov
loope
inc
aaa
sub
mov
into
jmp
clc
jae
mov
out
mov
xchg
sub
clc
or
mov
lea
mov
mov
add
mov
xchg
jno
mov
rcl
cmp
xchg
and
adc
dec
sbb
les
pop
sbb
adc
js
push
shl
jg
jmp
xor
sub
out
cmc
bound
in
scas
sahf
js
dec
popa
(bad)
and
dec
popa
inc
xchg
inc
dec
(bad)
fs
mov
and
popa
inc
dec
mov
popa
pop
sub
sahf
cmp
cmp
mov
clc
dec
cmp
into
jo
xchg
seta
sahf
mov
clc
imul
sahf
mov
clc
and
add
popa
inc
outs
push
pop
xchg
clc
cmp
andnps
js
dec
lods
mov
fsub
sbb
clc
js
xchg
mov
pushf
ror
mov
jcxz
jno
dec
dec
mov
mov
clc
mov
pop
(bad)
mov
sub
clc
mov
clc
sub
fcmovbe
and
mov
mov
js
cmp
cmp
clc
mov
clc
cmp
mov
and
clc
js
outs
jb
jae
pop
pop
add
add
clc
cmp
sti
js
(bad)
ja
inc
hlt
push
pop
pop
ror
sti
js
outs
test
jb
loop
pop
pop
pushf
inc
sti
clc
mov
jle
pop
inc
cli
push
pop
inc
jle
pop
(bad)
call
pop
pop
test
clc
mov
mov
clc
movs
push
mov
inc
jg
test
pop
xchg
mov
addr16
sti
js
sub
pop
inc
mov
clc
lea
jmp
push
fild
test
inc
and
sub
lods
adc
xor
fwait
(bad)
div
pop
cmp
or
mov
push
loopne
(bad)
cld
ja
lea
retf
jno
mov
cmp
mov
test
rcr
mov
fdiv
test
lods
aam
mov
cmp
adc
sti
push
dec
idiv
mov
mov
(bad)
xchg
ret
sar
mov
or
pop
push
push
or
sub
hlt
cmp
jp
idiv
into
(bad)
or
xchg
adc
loope
clc
std
(bad)
or
shr
or
out
hlt
js
leave
cmc
or
in
or
lock
cmp
adc
clc
mov
adc
into
gs
inc
adc
jmp
(bad)
(bad)
aad
pop
push
cmp
cmp
inc
cli
xchg
or
push
cmp
outs
xor
cmp
adc
hlt
js
js
or
psrld
pop
cld
data16
scas
ins
inc
shl
mov
clc
(bad)
or
push
push
xor
inc
jb
sub
inc
or
lea
jne
popf
or
or
ds
mov
add
lea
adc
sti
add
pop
mov
and
jno
lea
loope
inc
mov
lea
or
jb
adc
pop
mov
mov
mov
mov
js
ret
pusha
mov
mov
adc
je
cmp
les
std
mov
dec
add
jno
push
sahf
push
jno
(bad)
shl
jno
aad
jle
mov
mov
mov
clc
cmc
aaa
js
inc
ret
mov
jmp
push
(bad)
adc
sub
jb
cmp
sub
cmc
bts
mov
push
stc
push
cmp
push
stc
bsr
bts
push
mov
mov
xor
lea
jmp
jae
shl
mov
and
mov
clc
cmc
cmp
movzx
jmp
shr
stc
test
jmp
bts
mov
cmc
cmp
shr
clc
imul
cmp
cmc
cmp
jmp
mov
movsx
mov
cmovo
pop
ret
mov
push
jmp
sbb
push
mov
cmp
jb
adc
aas
jecxz
adc
adc
stc
dec
xor
and
dec
xor
(bad)
or
sub
test
sti
jl
xor
sub
and
lahf
mov
mov
jmp
test
add
jmp
adc
push
mov
das
xchg
jae
jno
test
xchg
sbb
lea
sbb
jno
xlat
jmp
mov
ja
mov
rol
jno
call
aas
lock
xchg
jns
mov
hlt
jns
jno
pop
std
add
jo
jno
icebp
daa
lods
jb
outs
xor
mov
popa
aad
(bad)
xor
jno
jb
mov
adc
sub
xchg
jno
mov
add
xor
inc
test
mov
xchg
mov
pop
jbe
adc
mov
add
sbb
adc
push
daa
imul
ror
pop
lock
mov
gs
arpl
or
adc
(bad)
xchg
add
call
leave
or
call
mov
mov
inc
cdq
clc
xor
sub
inc
pusha
data16
xchg
xor
test
jmp
into
in
js
in
mov
inc
(bad)
daa
jno
inc
sub
mov
pushf
call
loop
pop
pop
fild
cmp
lea
pop
jnp
jno
mov
inc
jb
mov
call
lahf
sub
stc
aaa
ins
jb
dec
pop
mov
inc
mov
scas
mov
xchg
nop
pop
xor
in
and
js
mov
ffreep
mov
xlat
int
cmps
dec
aad
pop
push
xchg
pop
stc
inc
cmp
pop
stc
pop
and
js
pushf
enter
push
mov
xchg
dec
xor
cmc
lahf
xor
scas
ds
into
pop
mov
xor
retf
jo
clc
idiv
inc
into
xchg
xor
pop
jne
js
push
int
(bad)
rol
xor
enter
cmc
or
pop
mov
xor
and
push
int
or
(bad)
ins
jge
inc
dec
xor
mov
cmp
aas
jb
pop
or
lock
cmp
xor
sub
int
dec
jne
pop
jne
dec
xor
retf
into
pop
jl
out
xor
dec
cwde
xchg
outs
aam
js
loope
(bad)
gs
pop
into
pop
cmc
and
js
jb
add
inc
sub
adc
or
js
add
repnz
repnz
js
retf
stc
retf
clc
mov
inc
arpl
clc
sbb
ret
fcmovu
js
jmp
inc
lds
push
xor
xor
push
adc
mov
sti
add
jle
pop
inc
add
jno
pusha
adc
(bad)
(bad)
aaa
sti
push
mov
mov
xchg
retf
sbb
stc
scas
lock
mov
cmp
sti
add
add
lds
jno
pushf
ins
stos
jno
jb
cmp
ds
mov
stos
adc
cmp
sar
adc
retf
(bad)
(bad)
adc
mov
cdq
and
inc
push
dec
push
out
inc
cmp
pop
or
pop
inc
jnp
adc
adc
adc
(bad)
in
pop
add
xchg
adc
mov
(bad)
out
(bad)
aaa
(bad)
out
inc
sar
in
xchg
les
cmp
test
cmp
adc
(bad)
aam
out
inc
and
out
(bad)
mov
out
pop
jmp
jae
adc
push
mov
outs
out
(bad)
sbb
inc
push
jnp
out
pop
sbb
cmp
mov
js
and
inc
mov
pop
cdq
in
xchg
fs
cmp
push
adc
cmp
in
xchg
adc
sub
out
(bad)
xchg
call
cmp
mov
inc
out
xchg
call
clc
les
xchg
int3
adc
ret
xchg
dec
out
(bad)
in
retf
movs
pushf
in
pop
ret
mov
clc
mul
out
(bad)
mov
jbe
in
xchg
mov
push
adc
clc
in
enter
sub
adc
clc
cwde
out
cmp
(bad)
pop
cld
call
or
cli
popa
pop
adc
lldt
clc
dec
mov
out
inc
repnz
fiadd
pop
ins
adc
mov
out
(bad)
pop
or
in
xchg
cmp
cmp
adc
stc
mov
push
adc
out
mov
test
adc
adc
out
inc
pop
adc
ret
test
inc
inc
adc
inc
xor
or
fdivr
xchg
cmp
mov
clc
cld
(bad)
pop
adc
cmc
sbb
out
(bad)
xor
out
in
xchg
push
adc
and
in
xchg
(bad)
call
out
inc
push
dec
xchg
cmp
mov
dec
out
inc
xor
out
mov
xchg
mov
adc
push
jnp
inc
add
out
mov
fistp
repz
adc
push
mov
and
jle
push
push
jno
or
repnz
adc
mov
out
fs
pop
jmp
xchg
scas
mov
mov
xchg
jno
xchg
mov
inc
bnd
mov
xlat
cmp
mov
xchg
cmp
clc
popf
xchg
xchg
mov
mov
cdq
jno
out
popf
jb
mov
mov
cmc
fiadd
xchg
and
dec
pop
jno
sub
popa
lea
adc
test
imul
jne
mov
fimul
jno
mov
push
cwde
lea
ss
sub
jno
mov
nop
jnp
jns
scas
jno
inc
pushf
lea
cmp
lea
mov
pop
mov
int
cwde
jno
add
xchg
jno
jbe
fidiv
add
cli
mov
lahf
inc
les
jb
jmp
inc
ret
lea
fcomp
hlt
jno
loopne
fnsave
jbe
mov
mov
push
and
(bad)
jmp
mov
mov
pop
scas
mov
dec
mov
mov
sti
xchg
xchg
mov
push
mov
push
daa
pop
pop
jno
jne
mov
push
and
push
frstor
mov
js
ins
fmul
(bad)
out
int
mov
test
mov
in
mov
cmp
jno
push
xchg
mov
into
fisubr
mov
mov
mov
dec
movs
sbb
mov
mov
frndint
aaa
mov
out
cli
lea
jg
mov
test
mov
mov
iret
daa
mov
mov
lea
push
ins
jno
cmp
retf
push
jno
sbb
pusha
pop
lods
sbb
jmp
pop
in
rol
cmp
xchg
pusha
div
xchg
xchg
mov
sbb
mov
cmp
adc
js
lds
push
sbb
popa
inc
scas
sbb
es
(bad)
jae
mov
pop
in
fsubr
addr16
cli
in
xor
in
mov
jmp
pop
fist
mov
sub
push
clc
or
rcr
in
imul
dec
adc
xor
inc
add
mov
mov
mov
jmp
test
clc
add
mov
stos
test
mov
mov
inc
iret
lea
outs
xor
jno
xor
mov
xor
push
mov
inc
jns
test
sti
push
jecxz
lea
cmp
inc
jno
jecxz
nop
mov
and
jno
xchg
pop
and
(bad)
mov
sti
push
jmp
mov
xor
push
popa
dec
lea
and
jno
rol
lock
idiv
mov
loop
hlt
mov
mov
add
ja
sub
mov
mov
inc
mov
repz
scas
in
inc
ret
lds
mov
cmp
mov
xchg
push
mov
xchg
arpl
ja
xor
jns
fisttp
je
push
cdq
(bad)
je
sbb
push
mov
and
jl
cmp
call
pop
les
pop
pusha
dec
mov
enter
pop
into
push
jo
je
inc
and
(bad)
cmp
jno
inc
inc
push
jno
jp
dec
jno
xchg
push
fwait
jb
mov
jmp
sti
push
scas
lds
out
push
icebp
mov
clc
dec
dec
xchg
popa
push
cmp
loop
test
clc
adc
js
data16
js
test
je
js
lds
inc
dec
int3
add
test
mov
test
std
clc
(bad)
sbb
xchg
inc
gs
mov
clc
scas
add
lods
xchg
add
ret
sub
inc
or
cmp
add
mov
cmp
clc
movzx
cmp
jae
mov
cmp
movzx
jmp
adc
inc
xor
jae
cmc
mov
jo
inc
leave
inc
xor
(bad)
loopne
mov
xchg
adc
jno
mov
dec
jno
pop
xlat
lahf
jb
data16
mov
mov
clc
cmp
test
cld
mov
stos
sub
xlat
jno
pop
jnp
push
ins
test
jno
inc
cmp
es
mov
sub
ja
inc
out
loopne
mov
adc
jns
cmp
mov
not
lea
push
xor
pop
out
jno
fsub
mov
icebp
aam
mov
cmp
mov
retf
or
jno
jno
(bad)
lea
mov
jno
push
test
jno
cmp
xchg
loope
pop
jnp
inc
jno
movs
cli
xchg
mov
in
jg
lea
lea
jno
sbb
test
xchg
jb
fist
mov
jmp
lea
sar
call
sbb
xchg
fs
xchg
jno
test
dec
jb
pop
xor
mov
and
mov
clc
xor
sbb
mov
pusha
push
xchg
jb
loop
mov
fwait
dec
mov
mov
jno
rcr
xchg
lea
sbb
fnstenv
mov
loopne
mov
loopne
sbb
(bad)
xor
pusha
lea
dec
fisttp
(bad)
sbb
leave
mov
std
pop
jno
mov
mov
mov
xchg
lahf
mov
inc
xor
mov
pop
ror
js
sti
enter
data16
ja
mov
xchg
into
lea
clc
outs
jo
(bad)
into
pop
jnp
mov
lea
and
jno
sub
xchg
jno
xor
mov
leave
and
xchg
test
lea
int
mov
js
aam
mov
in
stos
mov
cmp
mov
mov
addr16
xor
mov
push
ja
pop
push
or
mov
jb
shl
in
sti
xchg
xor
mov
mov
dec
(bad)
mov
mov
or
icebp
js
adc
test
mov
mov
jb
jns
aaa
jb
in
mov
(bad)
pop
fild
mov
jp
mov
xchg
enter
rcr
lea
cmp
mov
(bad)
mov
movs
adc
jno
adc
mov
ins
jno
cld
stos
mov
jl
mov
and
test
lock
mov
mov
mov
clc
pop
les
pop
push
jno
mov
leave
mov
js
or
mov
repz
clc
stos
ret
jl
(bad)
out
into
sub
inc
mov
repz
mov
and
mov
dec
mov
in
sub
pop
pop
fdivp
jno
inc
add
jno
icebp
aam
lea
cmp
cmp
lea
adc
cdq
mov
xchg
dec
lea
cmp
sub
mov
jl
sub
xchg
loopne
jno
je
jle
jno
stos
mov
js
and
mov
dec
ret
mov
js
adc
iret
leave
lods
mov
shl
in
jb
call
out
mov
shr
clc
sbb
mov
pop
jg
lea
cmp
jae
mov
in
pop
and
pop
sub
sub
or
and
sbb
loopne
daa
mov
in
jmp
mov
xor
jno
push
imul
mov
imul
jno
addr16
mov
mov
mov
xor
(bad)
pusha
jno
cld
out
add
fistp
sub
ins
jno
ret
(bad)
push
ins
int3
mov
adc
mov
pop
dec
jno
and
mov
mov
js
shr
hlt
push
jne
xchg
js
adc
push
aaa
jno
adc
(bad)
retf
jno
fs
aam
xchg
shl
push
jb
adc
pop
pop
mov
dec
movs
mov
cmp
std
jb
jns
(bad)
mov
mov
clc
xor
push
jno
dec
ret
cmp
sbb
and
xor
je
inc
add
outs
mov
test
pop
mov
inc
mov
lock
dec
cmp
mov
mov
push
popf
inc
dec
push
les
mov
mov
xor
(bad)
push
inc
retf
inc
sub
mov
mov
mov
inc
or
push
inc
retf
imul
mov
inc
retf
jp
add
mov
xor
pop
mov
mov
mov
mov
dec
lahf
jmp
or
xchg
inc
mov
ins
inc
dec
jo
mov
or
stos
inc
retf
jae
cmp
pushf
inc
dec
fst
push
mov
xor
retf
sub
inc
retf
add
mov
inc
mov
jbe
dec
mov
ret
sbb
pop
mov
mov
into
enter
mov
mov
cli
fsubr
inc
retf
push
push
pop
mov
mov
ins
sbb
mov
xor
dec
jb
mov
inc
mov
dec
inc
dec
dec
mov
ss
inc
retf
int
jmp
sbb
mov
mov
dec
xor
pop
pop
mov
inc
retf
xchg
inc
mov
xor
xor
inc
mov
fld
mov
inc
dec
xchg
call
aad
inc
mov
sub
clc
sbb
sub
push
cmps
sbb
test
je
fwait
cdq
push
mov
adc
mov
cmp
test
test
test
xor
mov
test
stos
dec
mov
xor
adc
movq
bound
mov
es
or
mov
(bad)
stos
retf
xlat
push
call
rcl
or
sbb
push
mov
(bad)
test
test
or
imul
repz
test
stos
retf
(bad)
pushf
sbb
(bad)
sti
cmp
push
je
mov
adc
arpl
push
xor
cdq
std
test
test
push
hlt
call
push
outs
test
test
test
push
mov
sbb
test
stos
retf
sar
push
je
rol
push
je
sub
push
hlt
push
ror
std
imul
sub
ret
jg
stc
mov
cmp
test
jmp
push
call
sub
cmp
test
test
sub
add
btr
mov
shr
jmp
cmp
jae
mov
btr
shrd
mov
test
cmp
sub
shr
add
test
clc
mov
test
stc
clc
add
test
test
cmp
add
jmp
mov
jmp
jne
mov
mov
lea
rcl
sar
add
mov
test
bsr
mov
cmc
stc
jmp
mov
js
inc
mov
cmp
(bad)
mov
jmp
xchg
jno
fcmovu
pop
jno
jmp
xchg
jb
sbb
mov
mov
cmp
pushf
stos
jb
pop
mov
lea
or
mov
sbb
ja
cmp
jb
lock
mov
(bad)
lea
dec
push
jno
lods
ins
push
jno
add
call
add
lock
popa
out
pop
mov
repz
mov
out
fmul
lea
push
lods
jno
xor
cwde
xlat
(bad)
mov
sbb
retf
inc
jo
in
sti
pop
pusha
in
push
sbb
or
out
xchg
sbb
add
fcomp
clc
adc
fxam
inc
push
lds
pop
je
xchg
mov
mov
js
test
mov
lods
push
or
jno
sahf
mov
cmps
xor
loopne
jge
jno
gs
div
and
lea
jno
pushf
hlt
mov
sti
mov
stc
adc
mov
xchg
adc
cmp
mov
inc
retf
clc
arpl
pop
mov
js
adc
(bad)
sbb
(bad)
or
lea
loopne
or
pop
pop
hlt
jno
inc
sti
pusha
mov
iret
sti
push
mov
test
jb
imul
test
fidiv
mov
mov
or
jno
(bad)
imul
adc
popa
add
jno
mov
jb
mov
es
ror
mov
fdiv
lea
leave
and
inc
push
(bad)
mov
mov
inc
jno
adc
inc
sti
add
in
mov
mov
(bad)
pop
out
lea
and
fisttp
add
ja
adc
or
lea
add
xor
inc
mov
jae
lea
add
cmp
mov
mov
test
in
mov
mov
sub
jno
or
jo
dec
mov
pop
cmp
push
mov
jo
push
mov
cmp
pop
out
fs
jb
mov
mov
popa
repz
mov
jno
lea
or
jno
js
fnstenv
outs
stos
mov
xchg
jno
icebp
out
jl
mov
mov
jno
sti
or
add
test
js
mov
pop
inc
sub
stos
pop
jo
cmp
dec
mov
(bad)
xchg
jno
xor
jno
cld
pop
mov
in
jp
lea
xlat
cli
aas
jb
movs
in
mov
(bad)
pushf
and
jno
xchg
bound
mov
aaa
ins
retf
mov
js
icebp
fmul
mov
pop
mov
xchg
in
ret
jb
xchg
mov
pop
sbb
pop
sub
mov
cmc
mov
mov
popa
xor
xchg
das
pop
xlat
jp
cmp
inc
jnp
xchg
pop
loop
jo
mov
clc
lock
dec
in
sbb
(bad)
xchg
aam
xchg
fldenv
mov
js
jo
cmova
daa
test
call
inc
jb
call
ds
lock
lock
sti
jne
sysret
xlat
cmc
xchg
mov
clc
mov
js
div
mov
clc
les
cmova
jmp
or
jmp
test
js
mov
scas
and
out
jno
jecxz
mov
inc
push
outs
mov
add
clc
ret
stos
(bad)
mov
bswap
mov
xchg
mov
in
push
add
clc
mov
in
mov
clc
mov
pop
pop
push
jle
mov
cmp
fstp
pop
mov
jno
adc
loop
mov
and
mov
dec
inc
cli
jge
jb
and
mov
mov
lea
or
jo
clc
mov
mov
dec
jae
mov
and
lea
mov
mov
shl
int
jno
xor
jge
pop
popf
mov
jno
push
nop
js
inc
pusha
es
pop
call
clc
(bad)
mov
cmp
(bad)
jno
arpl
mov
cmp
fist
jb
add
test
sub
jb
test
icebp
rcl
outs
jno
clc
iret
jb
jo
inc
mov
pop
mov
mov
jnp
sub
jno
add
jno
fst
jb
repz
mov
xor
clc
lods
ds
add
add
int3
je
add
inc
jle
pop
(bad)
into
jbe
cmp
pop
jno
pop
leave
mov
popa
and
mov
icebp
dec
sbb
rcr
sbb
hlt
in
rcr
dec
sbb
js
cmp
xchg
sbb
pop
xor
cmp
out
sbb
add
in
adc
jmp
out
call
hlt
inc
adc
test
out
pushf
aam
cmp
fwait
mov
mov
clc
cmp
in
xor
jne
xchg
jmp
cmp
cmp
clc
mov
push
mov
clc
js
sub
inc
adc
cmp
xor
xor
sahf
js
(bad)
call
popa
inc
sub
test
push
cmps
sahf
mov
cmp
fist
icebp
pop
popa
xchg
sbb
popa
inc
sub
mov
mov
popf
js
cwde
popa
inc
xor
das
jne
sahf
js
notrack
aaa
pushf
xchg
sahf
mov
mov
mov
aad
clc
or
popa
(bad)
pop
pop
or
xchg
sahf
cmp
sbb
stos
popa
inc
es
popa
inc
jmp
dec
popf
js
fbstp
popa
inc
(bad)
bound
sub
out
lds
sahf
cmp
jb
push
outs
inc
mov
rol
jle
jno
cmp
pusha
jno
add
jp
cmp
ins
scas
jb
int
stc
mov
mov
clc
stos
jp
mov
aad
bound
fcmovnbe
push
pop
iret
and
cmp
mov
outs
xchg
nop
cmp
push
dec
xchg
clc
out
sti
outs
(bad)
dec
stc
loope
(bad)
rcr
outs
(bad)
sub
loope
inc
fidivr
ins
xchg
sbb
nop
clc
xchg
nop
sbb
lods
movs
movs
nop
mov
cmp
aas
mov
gs
and
outs
inc
adc
jne
clc
pusha
mov
nop
cmp
adc
fsubr
(bad)
add
retf
add
clc
cdq
movs
popa
outs
inc
and
inc
imul
out
nop
mov
clc
je
outs
mov
pop
cmc
nop
cmp
ss
clc
push
shr
outs
inc
xchg
test
jnp
mov
js
mov
mov
enter
jb
xchg
js
fdivrp
outs
inc
(bad)
mov
aad
inc
cmp
inc
js
mov
js
je
outs
(bad)
jns
sub
dec
int
mov
mov
clc
xor
mov
nop
mov
clc
ins
(bad)
out
inc
xchg
pop
mov
push
adc
sub
outs
pop
xor
and
ss
add
je
mov
lahf
sub
mov
shl
xadd
mov
ror
movzx
lahf
mov
stc
cmp
jmp
jae
mov
mov
cmp
test
sub
jmp
push
ror
std
jge
(bad)
das
imul
push
leave
and
jp
repnz
cmc
sub
or
xor
mov
shr
sub
cmp
mov
shr
adc
movzx
cmc
cmp
cmp
jmp
shl
jb
(bad)
sti
jge
inc
jnp
je
pop
jmp
jno
ret
stos
inc
mov
aaa
add
mov
lock
jno
(bad)
addr16
in
enter
adc
bound
lea
xchg
repnz
shl
sub
cmp
inc
cli
mov
mov
cdq
jno
xchg
cmps
mov
stc
clc
jns
add
(bad)
jg
push
pop
sbb
loope
xchg
ret
mov
clc
jmp
push
out
ins
pop
jne
xchg
mov
xchg
cmp
out
in
cmps
add
clc
or
pop
outs
inc
dec
jae
inc
push
(bad)
outs
(bad)
es
pop
mov
xchg
js
pop
outs
(bad)
iret
dec
dec
outs
(bad)
cli
clc
test
retf
ins
pop
ss
mov
clc
stc
jmp
ror
pop
xlat
cld
pop
xchg
cmp
stc
sbb
ins
xchg
pop
xchg
mov
clc
sti
push
out
outs
inc
adc
popf
fwait
push
outs
xchg
jmp
pop
xchg
js
shl
inc
clc
ficomp
inc
sbb
cmp
push
(bad)
adc
and
push
pop
xor
not
shl
(bad)
lea
test
add
xor
jmp
mov
jmp
push
div
adc
jl
inc
test
int3
jno
sub
inc
mov
cld
add
mov
or
cmp
jno
sbb
jl
cmp
jb
jb
rol
nop
leave
mov
pop
mov
mov
and
mov
mov
jne
mov
pushf
or
jno
dec
dec
sti
pop
xchg
or
jno
ins
xor
jno
pop
call
mov
out
cwde
jno
ret
retf
dec
mov
lds
das
mov
(bad)
jmp
scas
fimul
jno
dec
xor
jno
js
jno
inc
add
mov
jnp
pop
ins
lea
inc
popa
lea
jno
add
adc
clc
cmp
mov
gs
adc
test
in
sub
std
push
mov
jno
lea
mov
lahf
pop
lods
mov
push
ffree
std
sbb
cmp
xchg
sub
das
(bad)
clc
in
add
add
mov
pop
jle
aad
jge
pusha
rcr
xchg
retf
cmp
(bad)
gs
inc
cmc
sar
rcr
add
popa
pop
cmp
jno
stc
add
pop
push
add
jle
pop
pop
lea
add
xlat
popf
jle
cmc
pop
mov
pop
add
js
and
add
(bad)
ins
scas
jle
cmp
jmp
js
out
add
xchg
aad
jle
loope
pop
jle
add
jnp
clc
dec
jmp
jae
mov
rcl
and
mov
sub
test
test
shr
cmc
stc
add
bsf
add
cmp
lea
cmp
shl
add
mov
shld
stc
lea
shr
mov
mov
stc
movzx
cmp
stc
test
cmp
jmp
pop
fimul
test
cmp
jle
push
aam
mov
(bad)
adc
sub
jae
xor
dec
ret
add
inc
jb
popa
je
push
outs
ins
imul
or
add
pop
mul
(bad)
adc
sub
js
push
aam
out
js
fwait
mov
xor
leave
pop
push
lock
std
std
xchg
xchg
popa
das
mov
ret
ja
imul
popa
popa
pushf
mov
pop
push
ss
jl
cmp
jge
sbb
xchg
js
inc
fldenv
add
call
nop
cmps
xchg
and
in
inc
jecxz
xchg
push
mul
push
mov
loop
or
fcom
fiadd
add
mul
pop
fnstenv
jno
idiv
pop
rcr
mov
mov
adc
jno
mov
mov
inc
into
inc
icebp
mov
iret
and
mov
popf
sbb
cmp
nop
xchg
stos
jno
dec
aas
ins
add
sahf
in
popf
loopne
sbb
nop
sbb
out
mov
sbb
clc
cmps
movs
in
nop
mov
out
ins
(bad)
adc
mov
mov
js
inc
es
inc
mov
jnp
sbb
mov
clc
add
out
fdiv
sti
sbb
sbb
push
mov
and
outs
arpl
leave
cmp
pop
push
push
out
mov
fs
(bad)
div
pop
push
(bad)
adc
sub
outs
push
sub
dec
xor
sub
and
mov
stc
mov
cmc
cmp
add
test
clc
cmp
jae
cmp
jae
movzx
shl
test
stc
shl
cmc
cmp
stc
or
movsx
not
jmp
or
cmc
mov
stc
cmc
cmp
lea
clc
cmp
shl
test
jmp
adc
imul
pop
jmp
jae
mov
jmp
push
(bad)
adc
and
dec
inc
xor
sub
jnp
or
and
and
sbb
mov
mov
push
jmp
or
add
idiv
sbb
sub
imul
mov
and
lods
(bad)
jb
jmp
ja
inc
dec
jae
mov
fisttp
jno
retf
mov
sbb
mov
mov
add
jno
jmp
icebp
aam
jno
cmp
sahf
mov
jge
sti
push
push
(bad)
or
xchg
mov
js
test
mov
jp
imul
jecxz
sub
inc
push
push
test
xchg
cdq
mov
xor
js
push
test
scas
pop
jp
and
jns
push
movs
mov
mov
cmps
or
jp
sub
jo
es
push
inc
adc
or
sub
leave
cmp
loopne
cmp
xor
stc
or
xchg
clc
pop
les
test
mov
xchg
mov
cmp
or
loope
test
imul
pop
pushf
div
add
cmps
xchg
or
mov
mov
leave
aam
test
xchg
mov
xchg
jp
in
jg
jp
loope
rol
inc
or
out
inc
in
fcomp
xchg
test
jp
ret
test
add
xchg
mov
clc
inc
jmp
test
jb
test
sbb
test
cmp
cmps
jns
pop
push
inc
test
jne
test
jb
test
or
ins
jp
sbb
xor
fsubr
(bad)
and
outs
pop
cmp
or
mov
lea
rcr
lea
jl
dec
jno
xor
scas
mov
lahf
cmps
mov
adc
push
xchg
mov
jmp
mov
inc
test
fdiv
cmp
sbb
dec
jb
push
cdq
mov
pop
sti
push
lahf
xchg
mov
jl
jno
bndstx
clc
lea
pop
lea
sbb
pop
cli
int3
sbb
mov
scas
sub
js
sub
jno
retf
jno
sbb
jno
push
cs
jb
ret
mov
repnz
mov
(bad)
mov
jnp
js
adc
inc
pop
and
mov
push
icebp
lea
jbe
shl
jno
dec
dec
add
test
(bad)
mov
dec
ret
jno
add
mov
sbb
lea
jmp
jno
les
mov
(bad)
mov
clc
imul
jno
(bad)
cld
sub
sbb
pop
movs
or
xchg
stos
jno
iret
ret
jno
xchg
sbb
jb
test
fisttp
mov
pop
mov
test
fld
mov
lea
pop
test
scas
or
add
push
jns
(bad)
popa
fwait
mov
xchg
push
jno
pop
sub
adc
sub
jl
aas
shr
or
xor
push
call
jmp
or
adc
and
jo
xor
push
popa
sub
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
test
adc
cmp
jmp
rep
jmp
push
sete
nop
mov
jmp
sbb
add
cmp
outs
jae
inc
test
sub
mov
or
sbb
sub
sub
rcl
mov
movzx
cbw
movsx
mov
mov
test
stc
cmp
jmp
jae
mov
test
clc
cmp
jmp
cmp
js
xchg
inc
cs
jp
pop
scas
cmp
jno
xchg
cli
dec
mov
jle
mov
(bad)
sub
mov
mov
test
xor
jno
mov
pop
mov
pop
rol
inc
pop
push
mov
int3
xchg
cmp
add
jecxz
mov
js
cld
push
mov
dec
mov
clc
out
dec
adc
lea
icebp
js
jno
cmp
jno
mov
xor
or
or
push
fwait
mov
mov
js
mov
cmps
or
sar
lea
pop
pop
adc
mov
mov
xchg
imul
fisttp
(bad)
xchg
or
mov
or
js
std
push
or
jnp
or
cmp
pop
push
inc
aas
push
or
mov
xchg
dec
push
xchg
call
push
jecxz
hlt
mov
(bad)
push
idiv
movs
or
rcl
or
and
pop
popa
rep
hlt
clc
push
cmp
(bad)
xchg
mov
pop
fsubp
jno
clc
xchg
push
sub
xor
and
jno
ret
shl
aas
icebp
enter
xchg
sbb
mov
sub
inc
push
mov
sbb
xchg
mov
jno
call
add
outs
rol
lods
pop
clc
inc
pop
jl
inc
out
mov
mov
js
fnstenv
inc
mov
xchg
add
out
into
jb
in
in
mov
(bad)
lds
mov
stos
(bad)
dec
adc
lea
neg
mov
cmp
ror
test
inc
cmp
jbe
lea
xchg
mov
jmp
push
(bad)
adc
and
jae
pop
jne
pop
pop
rcr
or
and
xor
bswap
mov
pop
jmp
lea
jmp
jae
lea
shl
clc
mov
cmp
mov
cmp
cmp
test
test
jmp
je
test
jmp
je
cmp
lea
jmp
ret
dec
dec
inc
inc
push
push
xor
cs
ins
add
rol
in
dec
adc
and
pop
xor
pop
xor
add
outs
inc
cmp
sub
or
mov
lds
xchg
test
mov
mov
lea
cmc
cmp
mov
cmc
cmp
movzx
test
cmp
test
cmp
jae
mov
cmc
stc
movzx
clc
cmp
shl
cmp
shl
cmc
jmp
clc
cmp
shl
or
shr
bswap
cmp
movzx
shl
cmp
stc
or
clc
test
cmp
jmp
sub
stc
clc
cmp
sub
xadd
mov
shr
clc
sub
cmp
test
test
mov
lea
cmp
cmp
jb
jmp
push
(bad)
adc
xor
mov
add
std
add
(bad)
push
xor
movzx
jmp
push
(bad)
adc
sub
jl
ds
out
push
repnz
cmp
ja
movsx
xor
mov
lea
cmc
jmp
add
dec
jo
outs
push
inc
dec
popa
outs
popa
addr16
add
cmp
sub
gs
fdivr
loop
outs
mov
cli
outs
inc
pop
inc
cmp
jmp
ret
ret
sub
inc
add
add
add
dec
add
add
add
and
add
outs
sub
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
dec
add
add
add
dec
add
add
add
xchg
sub
add
add
idiv
add
mov
inc
add
add
add
add
and
dec
add
add
add
sub
add
add
push
dec
dec
add
dec
sub
and
inc
add
(bad)
dec
add
call
or
inc
add
cmovne
mov
inc
add
pop
dec
add
adc
add
retf
add
add
inc
sub
jmp
add
inc
mov
jno
adc
jno
add
ret
xlat
jno
jbe
jne
(bad)
ja
mov
mov
jbe
pop
sbb
jno
(bad)
mov
icebp
test
push
dec
and
cmp
aas
jb
xchg
ins
mov
mov
add
lea
clc
push
cmp
(bad)
mov
cmp
arpl
mov
in
lea
sbb
and
lock
pushf
or
clc
inc
jbe
mov
adc
daa
mov
adc
leave
mov
xchg
jnp
jno
pop
xchg
mov
dec
mov
mov
cmp
dec
xor
mov
lahf
sahf
fsub
push
mov
clc
push
jb
jb
data16
sub
fnsave
test
jno
iret
stos
xchg
jno
ret
test
ret
enter
fwait
mov
clc
in
es
imul
lea
mov
fs
and
das
mov
cmp
mov
push
xor
jno
call
jno
dec
les
mov
cmp
pop
inc
jno
pusha
inc
lea
sub
jno
and
jnp
dec
(bad)
mov
mov
cmp
call
inc
adc
pop
imul
or
mov
clc
add
mov
inc
mov
mov
jae
add
adc
movs
mov
adc
mov
clc
imul
js
(bad)
pop
pop
lea
mov
cmp
jmp
jnp
push
mov
push
sar
mov
push
test
lea
mov
clc
push
sti
ror
mov
and
xchg
jno
jno
push
scas
sub
jg
iret
mov
jne
mov
jbe
mov
and
fdiv
cmp
js
xor
pop
lea
cmc
scas
or
sahf
mov
push
loop
pop
adc
jno
mov
ror
mov
fbstp
mov
mov
pushf
add
jb
jg
arpl
pop
adc
mov
cmp
lea
dec
es
lea
leave
jno
loopne
cmp
into
out
lea
cmp
push
(bad)
stc
mov
adc
lea
fnclex
jno
pop
ret
xchg
lea
sbb
out
jno
cdq
lahf
adc
xor
mov
fbld
shl
jno
add
push
push
lea
mov
mov
cmp
sbb
adc
pop
sbb
push
mov
out
mov
inc
lods
push
retf
sub
pop
jno
and
pusha
leave
jb
int
jo
pop
pop
lock
mov
cmp
dec
jno
dec
hlt
in
mov
xlat
shl
mov
mov
sub
jno
and
inc
mov
cmp
xchg
mov
jno
sub
lea
(bad)
jmp
jno
hlt
(bad)
shl
sbb
int
mov
add
mov
scas
inc
int
js
push
(bad)
sti
jbe
jno
xchg
pop
jb
movs
and
mov
cmp
out
jne
pop
mov
int
enter
scas
mov
pop
lahf
retf
or
xchg
mov
pop
and
sti
aad
jno
dec
add
add
pop
mov
jno
js
in
clc
cmp
inc
and
jb
(bad)
xor
mov
sti
sbb
dec
push
enter
repnz
sbb
out
and
or
sbb
inc
and
es
movs
in
jnp
jp
js
sub
xchg
jno
jl
mov
nop
push
mov
xchg
jno
mov
add
dec
mov
push
or
mov
cmp
aam
pop
mov
cmp
jno
pop
shl
clc
inc
pop
and
jno
cmp
jae
pop
push
outs
clc
jno
outs
adc
cmp
(bad)
jb
add
lds
xchg
nop
jno
cli
fadd
jno
or
jb
cmp
(bad)
(bad)
nop
xchg
ror
pop
loopne
lods
aam
cmp
mov
xlat
xor
cmp
pop
ror
sar
and
mov
mov
std
jge
mulps
sti
test
push
add
xchg
pop
add
jecxz
js
jno
add
add
pop
jge
clc
xor
add
and
jge
jns
out
jge
loop
push
jle
cmp
ds
adc
pop
add
in
jge
or
jg
inc
mov
lods
fisttp
jge
enter
js
out
and
leave
add
stc
add
mov
jle
jo
mov
inc
add
mov
cmp
jno
or
mov
mov
je
pop
iret
xchg
and
test
or
mov
mov
jb
clc
lods
(bad)
stc
mov
pusha
mov
mov
pop
mov
std
push
mov
cmp
mov
jne
mov
retf
lea
push
and
stc
or
jne
jno
fs
jl
js
push
fwait
mov
popa
ja
inc
lahf
pop
inc
mov
add
jb
ror
sahf
sti
lea
dec
out
jno
xchg
jno
xor
js
in
mov
cmp
or
jae
in
mov
jecxz
mov
outs
std
pop
jno
inc
sub
mov
scas
xchg
mov
adc
cdq
mov
dec
int3
cmp
pop
pop
hlt
jno
neg
stc
pop
cmp
es
sti
push
jmp
int
push
in
jne
inc
fimul
jg
fstp
push
pop
out
jmp
icebp
clc
div
push
pop
dec
lods
test
ficomp
cmp
or
leave
xor
dec
mov
jb
xchg
rol
mov
ja
mov
cmp
fs
je
or
inc
mov
add
pusha
jb
rep
push
mov
test
in
test
in
jno
cmp
adc
adc
mov
imul
mov
jae
mov
sub
and
mov
add
shl
add
bts
shl
cmp
add
sar
rol
movzx
bsf
test
xchg
mov
shr
neg
mov
jmp
jne
mov
stc
jmp
adc
jle
(bad)
ret
add
dec
jo
outs
push
gs
imul
add
cld
imul
repnz
pop
inc
aam
jno
dec
and
mov
mov
fsubr
jno
pop
pop
ret
jno
inc
popa
fnstenv
pop
pop
mov
clc
mov
pop
mov
xor
push
popf
pop
lea
hlt
int3
dec
jno
push
out
ror
fimul
nop
mov
dec
mov
test
jno
popa
inc
push
jb
mov
dec
mov
mov
in
cmc
mov
cmp
mov
jb
(bad)
mov
cmp
(bad)
mov
loope
retf
in
pop
jno
shl
sbb
leave
jb
sbb
push
outs
jg
mov
clc
dec
push
leave
mov
mov
data16
adc
cmp
mov
lahf
lea
adc
inc
jno
je
fs
in
data16
or
push
jno
scas
xchg
fmul
pop
adc
jb
mov
mov
in
mov
xchg
inc
jno
cwde
call
jb
sti
movs
sub
mov
mov
stos
dec
test
mul
jb
daa
adc
lea
cdq
xor
stos
jno
out
jno
mov
jno
inc
adc
jno
xchg
add
jno
cmps
adc
jno
popf
cmp
mov
inc
mov
(bad)
call
lods
push
inc
jno
pop
jl
jno
dec
cmp
mov
ds
mov
in
mov
(bad)
xor
mov
mov
cmp
xor
xor
sub
ret
push
out
js
out
fimul
mov
jmp
mov
clc
aam
out
mov
test
inc
or
xor
jb
jg
jae
inc
adc
mov
jno
add
xor
(bad)
jge
js
out
mov
repz
and
movs
movs
jb
call
addr16
add
mov
(bad)
test
(bad)
pop
mov
mov
xor
or
jno
sub
ins
add
fld
mov
cmp
(bad)
mov
cmc
test
stc
mov
jno
push
ror
pop
stos
jb
xlat
aas
jg
pop
aam
(bad)
xchg
push
mov
add
or
fild
or
jne
jno
cmp
add
mov
pop
movs
cmp
jno
movs
test
cmps
xor
mov
mov
nop
jno
out
data16
cmp
add
jno
xchg
adc
lods
scas
mov
inc
nop
mov
mov
jnp
jg
pop
pop
add
jno
sub
leave
mov
pushf
dec
lea
js
mov
fimul
mov
mov
jno
xchg
mov
mov
call
jae
jb
inc
or
mov
and
adc
lea
mov
dec
stos
jno
outs
mov
sbb
add
jno
inc
cmp
add
jno
outs
dec
sbb
cwde
add
jno
inc
dec
sti
pop
xor
lea
inc
lods
(bad)
jno
hlt
std
lea
push
cwde
push
jno
(bad)
das
jb
repnz
mov
jno
lea
pop
std
leave
jno
jge
jb
fwait
jle
xchg
das
sbb
mov
nop
mov
mov
cli
add
cmp
dec
in
jno
push
add
xchg
lea
or
adc
std
mov
pop
push
adc
cmp
test
bound
xchg
cmp
mov
hlt
imul
inc
hlt
xchg
dec
mov
fs
clc
dec
lds
sbb
call
mov
clc
jnp
ds
mov
call
rcl
out
stc
fsubr
cdq
clc
add
call
adc
gs
jg
add
fcmovnu
call
or
jge
call
(bad)
call
loopne
gs
add
push
gs
jb
fstp
gs
mov
xor
test
cmp
call
jns
and
pop
jnp
gs
xchg
push
(bad)
gs
cvtpi2ps
cdq
js
mov
inc
popw
mov
cmp
mov
mov
cmps
scas
mov
ins
out
lea
jae
sub
int3
mov
test
mov
cmp
je
mov
clc
mov
(bad)
imul
std
cmp
inc
es
sub
mov
jno
cmps
xor
or
icebp
jae
lea
cmp
sbb
mov
and
mov
sbb
sbb
xchg
or
rcr
cmp
scas
and
clc
sti
aam
in
call
and
aad
ins
jno
(bad)
jno
sbb
mov
clc
mov
xor
jno
xor
or
inc
mov
cld
add
mov
cmp
jb
inc
jns
mov
in
bound
int
jmp
lods
mov
mov
cmps
mov
div
jno
rcl
enter
out
shl
add
pusha
push
mov
js
fld
lock
jnp
js
pop
pushf
mov
inc
jo
inc
mov
sbb
jg
js
add
cld
lea
jg
mov
mov
mov
mov
shr
fimul
jno
push
call
lods
mov
pmulhuw
add
cmp
leave
jno
inc
popa
shl
fwait
adc
jb
movs
call
xchg
enter
in
pop
mov
push
or
inc
pop
cmp
stc
nop
mov
mov
scas
or
mov
push
mov
and
jb
jnp
enter
sub
jno
ins
(bad)
jb
mov
mov
aaa
lea
mov
cmp
sub
jb
jmp
xor
mov
cmp
test
mov
jno
jne
lea
cmp
push
pop
bnd
fsubr
mov
sub
mov
adc
jnp
dec
retf
lea
je
jno
xor
inc
jb
mov
dec
call
cmp
inc
and
jmp
int3
push
mov
mov
sub
(bad)
mov
xor
mov
cmc
cmc
jne
sbb
and
pop
add
pushf
mov
mov
jno
ror
mov
adc
mov
pop
jg
clc
setns
jne
pop
jge
jbe
mov
mov
dec
mov
cmp
mov
movs
mov
xchg
dec
mov
cmp
in
inc
jbe
add
cmp
mov
mov
sub
jae
mov
jmp
adc
adc
paddd
ds
in
ins
xchg
aam
fild
test
sub
fnsave
add
mov
jmp
mov
jmp
ret
add
inc
gs
jne
jb
outs
je
push
add
jmp
mov
jmp
into
pop
jno
or
lea
xlat
lea
jno
movs
cwde
out
inc
and
out
mov
mov
test
fisttp
mov
jmp
mov
xor
mov
jb
pushf
or
lea
mov
and
mov
xor
or
jno
mov
mov
jmp
mov
push
jno
xor
cmps
sbb
push
or
jno
ds
data16
fcomp
clc
(bad)
dec
push
lea
loopne
push
jno
mov
daa
pop
out
mov
xchg
add
clc
repz
mov
(bad)
cmp
and
jno
movs
cmps
std
jno
mov
loop
(bad)
lea
ds
pop
jno
mov
lea
xchg
xor
mov
clc
or
mov
es
bnd
imul
inc
pop
imul
mov
push
jno
lahf
mov
loopne
mov
push
jae
pop
rcr
jno
aas
and
retf
inc
jecxz
cmp
mov
ficom
mov
jmp
pop
jno
push
test
stc
cmp
cmp
jno
jle
ror
mov
clc
leave
inc
cmc
mov
pusha
gs
xor
push
inc
test
cmp
clc
or
cdq
jb
pop
inc
inc
mov
aad
sti
pushf
inc
jno
xchg
ror
lea
sbb
sub
dec
adc
cmp
cmp
sar
mov
bound
mov
mov
mov
fstp
jno
mov
sahf
ror
lea
jno
xchg
mov
jb
ins
mov
dec
add
mov
cmp
mov
pop
mov
jo
mov
arpl
jbe
mov
out
or
cmp
or
outs
jno
test
leave
mov
test
pop
jno
sbb
imul
jno
dec
popa
gs
add
lahf
jb
aas
mov
push
inc
xchg
lea
and
jno
imul
push
mov
xchg
mov
inc
repz
stc
xchg
mov
push
jl
inc
sbb
retf
mov
mov
and
jb
sbb
(bad)
mov
out
ror
mov
cmp
jno
dec
xchg
mov
jge
clc
xor
cmc
jno
sbb
jno
lods
in
lea
xor
int3
jno
lods
mov
add
and
push
ins
push
mov
mov
inc
adc
pop
jl
sahf
jno
pusha
rcr
mov
in
mov
cmp
(bad)
pop
dec
sbb
lock
pop
call
sbb
push
fsub
in
adc
outs
xchg
xchg
cmp
daa
xchg
cmp
add
clc
fwait
xchg
cli
ins
inc
(bad)
lods
push
ins
inc
push
xchg
es
pop
shl
nop
js
outs
ins
inc
pop
jle
outs
pop
xchg
aas
rcl
xchg
mov
js
mov
sub
mov
xor
mov
add
stc
sub
cmp
btc
mov
jmp
sbb
add
sti
jns
sub
aas
jecxz
sbb
or
cmp
jle
adc
and
fs
or
mov
inc
sub
mov
test
clc
shr
imul
test
cmp
jmp
adc
adc
push
imul
fistp
fmul
xor
(bad)
cdq
mov
xor
dec
lea
add
jno
jge
sti
mov
leave
repnz
jns
dec
jno
push
cmp
mov
cdq
test
mov
jb
sub
cmp
add
btc
and
mov
aad
(bad)
mov
sti
mov
daa
cmp
mov
and
xchg
mov
add
add
push
xchg
cli
mov
cmp
cmp
js
mov
xchg
mov
mov
cmp
stc
stc
js
inc
add
cmp
and
icebp
mov
jg
mov
add
clc
iret
in
mov
cwde
jg
fs
clc
sahf
jmp
add
or
fst
clc
out
xchg
jg
push
xchg
add
xchg
add
or
mov
cmp
clc
mov
js
inc
mov
jl
inc
jg
dec
sbb
jl
push
sbb
iret
jg
iret
mov
push
ja
js
test
stos
jl
inc
popa
mov
cli
jae
js
inc
or
lock
cmp
(bad)
jg
loopne
add
retf
loopne
add
aaa
lods
jmp
pop
cmp
add
gs
mov
ret
mov
add
dec
icebp
mov
mov
mov
daa
push
ret
push
popf
(bad)
inc
jb
sbb
inc
setge
jno
jge
arpl
mov
inc
mov
(bad)
cmps
sub
lea
mov
fsubp
(bad)
mov
jbe
mov
(bad)
loopne
jno
push
push
fisttp
mov
popf
sti
push
(bad)
out
lea
fadd
push
mov
mov
mov
pop
mov
push
mov
push
imul
jno
fld
add
mov
push
or
jno
mov
jb
pop
inc
add
mov
ins
icebp
jno
lods
aaa
mov
fnstenv
cmp
int
jno
cmp
xchg
jb
dec
pop
bound
push
scas
mov
pop
and
les
sub
jno
cmp
mov
cmp
xor
push
jb
jecxz
fisttp
inc
scas
xchg
loop
pop
or
push
jno
pop
mov
(bad)
in
lea
mov
enter
pop
lea
js
cmps
mov
cmp
inc
aam
xchg
repnz
or
cmp
jecxz
mov
xchg
jmp
xchg
sbb
scas
repz
sbb
inc
mov
test
pop
mov
ja
mov
(bad)
es
mov
pusha
jecxz
cmp
call
mov
lods
aad
dec
mov
adc
pop
xchg
ret
sti
add
inc
mov
cmp
sub
or
mov
in
ret
sub
jno
xchg
ffreep
mov
cmp
inc
jno
mov
lea
jno
ret
jno
mov
call
ja
jno
out
mov
in
mov
mov
push
mov
cmp
cmps
repz
test
mov
cld
adc
adc
outs
mov
push
xchg
lea
nop
dec
jge
cmp
test
add
sub
mov
mov
inc
cmp
cmc
cmp
jne
mov
neg
mov
jmp
push
call
sbb
add
rep
pop
xor
sub
or
add
sub
shl
bt
mov
mov
jmp
lahf
popf
jb
sti
jg
mov
ret
mov
(bad)
mov
(bad)
cmp
dec
xor
dec
je
mov
rcr
mov
mul
clc
dec
and
mov
mov
mov
or
mov
test
adc
aam
inc
mov
lea
cmc
jmp
jno
add
clc
add
mov
js
fbld
jne
in
cs
rcl
test
ins
call
aas
(bad)
push
pop
out
popw
retf
call
mov
mov
adc
call
int
gs
xor
xchg
call
push
push
gs
add
inc
gs
repnz
dec
gs
cmp
adc
call
or
js
call
bound
xchg
popa
pop
cdq
clc
ret
gs
pop
or
inc
mov
xchg
jnp
mov
clc
mov
pop
fcomp
cdq
js
sbb
xchg
pmulhuw
cdq
clc
(bad)
bound
inc
in
mov
inc
adc
fsub
add
cmp
xchg
(bad)
pop
sub
gs
bound
xchg
mov
jno
inc
and
xchg
gs
cmps
xor
call
aas
test
test
fs
out
call
mov
xlat
sub
in
bound
call
cmps
add
call
out
inc
dec
gs
and
test
xchg
jae
mov
shl
sti
cmp
clc
sub
shrd
mov
test
movzx
cmp
cmp
jmp
sub
sub
btc
bts
cmp
mov
cmp
cmp
shr
test
test
cmp
sub
mov
sbb
mov
mov
ror
lea
xor
mov
cmp
jmp
ret
(bad)
(bad)
(bad)
dec
test
jl
add
(bad)
(bad)
call
fsubr
(bad)
(bad)
(bad)
call
test
push
dec
mov
push
(bad)
adc
aas
loope
push
cmp
js
mov
jno
push
xchg
jb
jle
imul
inc
pop
jp
mov
mov
mov
sar
mov
popa
xlat
mov
rol
jno
sar
sbb
and
inc
stc
add
js
xchg
mov
popa
cmp
out
sub
inc
or
mov
push
sub
jno
lods
mov
js
and
(bad)
lea
test
retf
and
(bad)
push
dec
sbb
jno
add
jecxz
xchg
pop
jno
jbe
or
out
xor
add
mov
jl
sub
push
ss
cmp
jnp
fmul
test
clc
in
dec
(bad)
sahf
mov
clc
adc
push
and
jmp
xchg
popf
clc
cmp
pop
and
fstp
js
sahf
add
popa
inc
dec
sbb
popa
pop
jmp
lea
(bad)
cmp
popf
popa
inc
add
pop
bound
mov
mov
repz
popf
clc
aad
and
rcl
xor
(bad)
mov
sahf
cmp
mov
xchg
popa
inc
test
cdq
dec
popa
pop
out
jne
js
dec
or
arpl
bound
stos
add
sahf
mov
cmp
push
fwait
jge
or
xchg
pop
adc
xchg
not
mov
push
icebp
fwait
mov
aaa
aam
pushf
adc
(bad)
out
dec
sub
stos
es
push
pop
cli
pop
mov
mov
repz
xchg
clc
ja
jge
jns
sub
sbb
jmp
test
adc
dec
xor
add
ss
push
shr
icebp
mov
add
and
aaa
cmps
gs
aaa
cdq
push
push
ja
mov
ret
ins
cwde
jno
inc
test
jmp
jae
jne
repz
cmc
das
outs
not
cmp
jo
sbb
jne
adc
ins
ror
jb
mov
lds
fbld
aaa
dec
aam
add
pushf
out
xchg
(bad)
xchg
xor
fsubr
sbb
popf
daa
stc
cmp
(bad)
push
and
pop
inc
push
dec
lahf
push
mov
retf
xor
cmps
push
test
dec
sub
inc
fdiv
(bad)
or
and
outs
arpl
leave
cmp
pop
push
sub
or
and
sbb
stc
dec
fs
add
gs
pop
or
push
test
dec
jmp
ret
sub
sub
jmp
test
sub
btr
xchg
mov
cmp
mov
test
lea
cmp
clc
and
cmp
jmp
push
(bad)
adc
cmp
js
das
lods
imul
fisttp
mov
clc
pop
aaa
aas
mov
(bad)
jnp
(bad)
es
mov
js
shl
jge
push
jno
dec
ins
add
cmp
mov
cdq
ja
cmp
and
mov
cli
inc
lea
ja
dec
jno
xor
movsx
pop
jmp
lea
mov
fcom
pop
and
adc
lea
into
cmps
jno
and
jecxz
mov
mov
jg
retf
mov
fisttp
jno
ret
stos
stc
mov
cmp
mov
pop
rcl
cmp
retf
fdiv
vcmpps
dec
out
js
xor
add
sbb
pop
xlat
cmp
dec
sbb
add
in
inc
aam
mov
mov
clc
mov
sub
(bad)
adc
(bad)
xchg
inc
ja
mov
clc
and
jae
xlat
mov
cmp
nop
jno
add
clc
xor
hlt
stos
loope
mov
clc
dec
jecxz
mov
bound
mov
adc
mov
cmp
jno
dec
mov
jmp
pop
mov
repnz
scas
jno
mov
popf
mov
jmp
push
sti
mov
mov
clc
sub
pop
jp
clc
fist
adc
(bad)
sub
pop
jb
not
mov
imul
lea
test
push
jno
in
jl
jp
mov
mov
clc
stc
fcomp
loope
mov
clc
mov
push
mov
xchg
adc
mov
cmp
cli
xchg
jb
sahf
sbb
(bad)
xchg
xchg
mov
mov
ins
lea
pop
add
jno
add
mov
and
and
dec
shl
mov
ss
xlat
add
xchg
enter
cli
mov
sub
inc
inc
dec
add
cli
cmp
stc
mov
cli
mov
js
mov
fld
pop
pop
adc
cld
cli
clc
test
aas
bound
stc
clc
pop
sub
popf
cli
cmp
stos
add
pop
movs
cdq
arpl
mov
js
je
add
add
clc
pop
in
add
stc
xchg
ss
mov
xchg
sti
and
das
cli
mov
adc
jnp
mov
test
clc
jno
add
cli
cmp
leave
cmps
add
add
xor
dec
jae
(bad)
xchg
push
dec
pop
dec
movs
pop
mov
loopne
sbb
inc
test
clc
in
pop
cmp
jo
sub
pop
dec
push
jle
pop
add
mov
clc
call
dec
jo
aas
lds
js
loop
pop
out
inc
mov
lea
pop
sbb
in
inc
cli
cmp
pop
jl
jmp
inc
std
fild
pop
sbb
sbb
mov
js
and
pop
and
fimul
mov
mov
push
call
je
mov
mov
movzx
mov
jmp
or
add
div
pop
cwde
xchg
jb
aam
ins
mov
jmp
cmc
sar
outs
lea
add
jno
outs
push
fmul
mov
jnp
push
jecxz
inc
pop
(bad)
cmps
mov
es
loopne
(bad)
and
push
mov
lea
xchg
stc
ret
clc
pop
or
pop
ret
jno
pop
mov
cmp
cmp
jb
adc
(bad)
aam
push
add
(bad)
lock
inc
mov
sbb
jno
enter
jo
jno
dec
ins
test
jno
frstor
mov
xchg
call
jmp
lea
cmp
jb
push
out
mov
imul
rol
movs
sub
cmp
shl
dec
je
mov
rcl
clc
int3
loopne
mov
cmp
repnz
lea
dec
xchg
jno
ret
lds
js
mov
arpl
or
addr16
dec
(bad)
push
jno
fdivr
push
push
jno
imul
mov
repz
stc
stos
jb
mov
cwde
call
mov
pop
rcl
pop
dec
adc
jno
or
out
inc
call
push
jno
ds
fmul
mov
dec
imul
mov
pop
pop
or
jb
inc
mov
mov
sub
jno
sar
jno
xor
jno
ret
(bad)
fdivrp
out
mov
adc
scas
push
(bad)
jb
cwde
jae
mov
xor
mov
(bad)
jnp
stos
ja
inc
add
jle
jno
loopne
(bad)
jno
cmp
clc
cld
jle
mov
sar
jae
mov
jl
jno
stc
sub
mov
das
ror
jno
xchg
inc
stc
jno
pushf
sbb
shr
mov
test
adc
xchg
outs
retf
mov
mov
xchg
mov
mov
jno
shl
sti
add
mov
jno
scas
inc
cmp
iret
xor
cmp
xchg
(bad)
jb
inc
ror
xchg
jecxz
mov
clc
cmp
cmps
mov
cmp
mov
clc
in
cmp
mov
or
clc
cmp
call
inc
jno
sub
mov
xor
clc
lea
mov
mov
clc
cmp
cld
lea
mov
clc
push
xor
addr16
mov
jmp
jne
inc
mov
jmp
jne
cmp
jmp
call
lea
movzx
cmovg
push
bswap
mov
movzx
bswap
jmp
jb
mov
test
cmp
sub
clc
lea
jmp
out
jb
mov
(bad)
pop
inc
mov
xlat
cmp
mov
add
pushf
mov
aam
jb
jne
mov
pop
jno
mov
push
jno
or
mov
jae
ins
lea
cwde
pop
jno
in
outs
mov
or
xor
xchg
push
add
lahf
dec
sbb
outs
pop
sbb
aas
pop
out
mov
inc
jge
cmp
in
or
sbb
push
ss
cmp
jo
inc
std
pop
xor
mov
(bad)
iret
sub
sti
adc
jae
out
pop
(bad)
sbb
and
pop
(bad)
icebp
shl
rol
pop
aaa
cmp
mov
pop
pusha
sub
pop
js
jo
mov
jo
push
stos
fisttp
mov
pop
add
iret
pop
pop
dec
imul
jo
jns
sub
stc
call
jo
into
mov
dec
xchg
mov
or
pushf
jo
inc
test
mov
das
add
mov
setge
mov
push
jmp
shl
clc
or
jmp
imul
mov
push
(bad)
push
jno
dec
sbb
jb
sub
and
(bad)
mov
inc
add
in
inc
adc
nop
sub
jmp
js
pop
pop
in
lahf
cmps
push
in
sbb
push
addr16
imul
in
bound
out
sbb
dec
push
cmp
adc
fwait
dec
cdq
aam
(bad)
dec
pop
pushf
sub
mov
dec
sub
sub
mov
mov
mov
jne
xchg
lock
jno
cld
fidivr
mov
clc
mov
imul
dec
jno
inc
jb
js
lahf
scas
mov
pop
(bad)
jnp
pop
jae
sub
js
sub
mov
mov
mov
adc
inc
test
(bad)
dec
cmps
mov
sbb
and
mov
lea
mov
mov
js
xchg
(bad)
cmps
pop
mov
xchg
and
jecxz
mov
xchg
or
jno
xlat
jae
js
add
jp
pop
ret
jno
test
add
mov
xchg
stc
test
mov
sbb
mov
mov
jno
dec
jmp
mov
add
sub
inc
js
sub
mov
cmp
lods
movs
jae
inc
and
inc
inc
push
inc
push
dec
xor
cs
ins
add
mov
in
mov
mov
rcr
clc
cmp
movsx
sbb
and
lea
xor
shl
add
lea
bswap
movzx
clc
mov
cmp
jmp
jb
mov
jmp
jne
cmp
jmp
push
rcl
lods
icebp
inc
add
sub
pop
push
ds
jl
fwait
mov
jb
xchg
scas
cmp
mov
(bad)
sbb
iret
add
mov
fidiv
xor
jno
mov
xchg
mov
jno
pop
shr
jb
pusha
daa
pop
lea
retf
xor
jno
test
mov
cmp
jno
aas
(bad)
daa
mov
push
jmp
clc
pop
and
pop
mov
ss
lea
ret
jno
add
jno
or
out
mov
int3
jno
dec
outs
jmp
cmp
mov
test
std
call
pusha
push
mov
cmp
(bad)
pop
mov
int
jno
xchg
mov
mov
mov
jmp
xchg
imul
jno
jne
addr16
sbb
inc
inc
sbb
lea
scas
hlt
xor
js
stc
aad
inc
dec
leave
retf
pop
sub
cmp
sahf
jb
mov
mov
mov
aas
pop
sub
out
out
mov
in
push
mov
loop
mov
popf
mov
cs
fmul
jno
add
(bad)
jno
mov
xor
push
imul
mov
add
mov
movzx
test
test
shl
cmp
test
stc
shl
clc
cmp
or
inc
cmc
xor
mov
jmp
jae
cmp
jmp
call
mov
mov
test
clc
test
cmp
je
cmp
jmp
mov
jb
xor
retf
aaa
mov
push
xchg
jno
inc
inc
pop
jno
outs
dec
inc
jno
lods
daa
xchg
jb
mov
ror
mov
clc
in
jg
mov
leave
bound
jno
in
enter
clc
mov
lods
pop
jge
jno
jge
aam
push
add
sbb
jle
jp
test
pop
adc
dec
stc
cmp
into
xor
add
fadd
add
xor
adc
cmp
dec
pusha
jle
push
out
add
cli
add
mov
inc
fcomp
jle
add
inc
or
shl
jle
iret
xor
mov
sub
jge
pop
ss
jge
sbb
jle
cli
inc
xchg
stc
mov
(bad)
mov
add
mov
add
inc
movs
add
xchg
in
inc
outs
and
add
pop
int3
add
add
cmp
push
add
clc
cld
sbb
pusha
repz
cmp
ror
fnstcw
clc
cmc
gs
pop
dec
add
add
loop
cmp
pop
jle
pop
outs
inc
add
sahf
jge
jg
xchg
jge
jecxz
sub
lahf
jge
out
jg
mov
clc
call
add
cmp
jge
xchg
daa
jge
xchg
mov
jle
pop
add
dec
add
mov
mov
js
ret
xor
add
jge
and
les
stos
imul
mov
jb
fcomp
mov
stc
sti
xchg
mov
call
movs
pop
lea
add
(bad)
js
push
out
mov
shl
mov
jae
pop
jno
pop
xor
mov
xchg
xchg
mov
or
nop
mov
enter
mov
push
pop
lea
sub
inc
out
call
js
adc
xchg
dec
or
dec
in
(bad)
xchg
idiv
(bad)
lea
cmps
or
jno
lods
push
jno
in
jmp
jno
dec
dec
mov
pop
jno
lods
mov
xor
fistp
cdq
jno
out
jno
add
jne
pop
fild
mov
sbb
mov
mov
jae
clc
mov
enter
(bad)
aad
mov
pop
fwait
pop
adc
cmp
inc
addr16
pop
sbb
xor
js
(bad)
xchg
sbb
fisttp
inc
lea
mov
and
js
mov
xor
lea
js
push
mov
inc
outs
mov
jb
mov
cmp
push
hlt
cmp
jno
out
dec
jle
sysret
movs
add
add
ss
add
inc
(bad)
mov
jge
out
inc
add
cmp
jne
cmp
mov
stos
inc
add
fwait
add
jge
adc
jnp
clc
movs
xchg
popa
add
js
outs
mov
cmp
jge
jp
jge
js
pop
jle
sbb
add
aas
add
pop
test
jge
mov
into
jle
xchg
mov
inc
movs
push
lahf
add
(bad)
daa
jge
jbe
lods
add
mov
lock
clc
popa
retf
inc
mov
sub
xchg
or
add
mov
add
movs
dec
jge
and
cmc
repz
(bad)
xchg
add
nop
daa
cli
jge
inc
mov
push
(bad)
jge
or
add
shl
add
xchg
add
js
movs
add
mov
add
cmp
jmp
cmp
std
jge
cmc
addr16
add
ins
idiv
in
iret
push
jge
cmp
pop
add
sti
fs
out
pop
add
jbe
add
jle
sbb
cmp
add
lds
jge
sbb
test
adc
bound
add
mov
dec
jge
pminub
stc
ds
imul
jb
adc
pop
mov
add
sub
mov
jmp
or
mov
pop
das
loop
pop
adc
jno
mov
ror
mov
jmp
arpl
xchg
sub
sbb
sub
or
ins
(bad)
(bad)
ins
inc
push
sbb
add
les
leave
and
nop
js
ret
das
cmp
mul
ins
(bad)
sub
div
test
add
push
xchg
cmp
sbb
into
std
ins
pop
dec
pop
xchg
js
ds
xchg
xchg
cmp
hlt
addr16
clc
push
(bad)
fisubr
out
dec
xchg
cmp
jg
fsubr
fisubr
xchg
ins
(bad)
xor
outs
pop
xor
sbb
xchg
js
fsubr
(bad)
leave
xor
xchg
mov
mov
clc
nop
mov
outs
xchg
ficom
nop
clc
shr
inc
aas
icebp
cmp
add
add
add
pusha
add
or
push
mov
add
add
adc
add
add
pusha
add
add
add
inc
add
ror
mov
cmc
not
mov
lea
sbb
jno
ja
jmp
pop
ja
pop
jno
dec
daa
ror
mov
ds
test
lods
mov
rol
add
nop
dec
jno
das
es
mov
jns
test
cmp
jno
xchg
sub
jno
sbb
hlt
pop
xor
pop
in
lea
cmp
mov
or
lods
ret
scas
jno
add
mov
xchg
jno
pop
jns
lea
mov
clc
add
jecxz
and
mov
cmp
xor
clc
das
movs
jo
pop
or
jle
(bad)
mov
(bad)
iret
mov
push
les
clc
inc
cs
mov
xchg
mov
mov
pop
popa
in
jno
jl
fdiv
js
push
jb
lods
movs
mov
inc
mov
push
jbe
pop
shl
test
mov
cmp
lods
jno
repz
jb
cwde
xchg
mov
jbe
ror
mov
popf
cmp
jno
sub
jb
and
xchg
mov
arpl
jno
sub
or
out
int
jb
and
mov
inc
jp
fimul
push
into
lahf
mov
jbe
lea
sahf
add
mov
cmp
fild
pushf
rcr
pusha
sbb
rcl
or
ins
pop
pop
pop
jmp
jno
mov
js
pusha
pop
daa
inc
pop
jns
cli
add
div
rcr
jae
in
add
xchg
imul
jo
and
jae
fnstsw
leave
pop
(bad)
stc
ins
fidiv
retf
pop
pop
shr
sub
jo
mov
sub
pop
mov
jbe
pop
inc
mov
jo
sbb
(bad)
pop
int
imul
popa
test
pop
jle
pop
div
jo
inc
nop
pop
push
sbb
pop
stos
hlt
mov
mov
cmp
jo
ja
stc
jo
adc
pop
aam
mov
sbb
div
in
and
dec
out
pop
mov
xchg
jae
xchg
pop
inc
push
pop
sti
xchg
xchg
jo
scas
(bad)
jo
dec
dec
mov
pop
pop
nop
pop
pop
pop
jns
pop
retf
jo
sub
sbb
sbb
cld
pop
and
cmp
pop
jno
pop
jae
mov
hlt
(bad)
pushf
mov
sub
adc
outs
jo
gs
inc
int
(bad)
bt
mov
sub
inc
lea
movsx
not
mov
mov
mov
setae
mov
mov
inc
inc
cmc
jmp
or
es
rol
adc
add
mov
call
lea
push
or
jno
adc
mov
xchg
clc
sbb
jge
mov
mov
lods
pop
jno
mov
add
sub
jb
adc
repz
loopne
add
mov
jb
push
ret
xor
or
jno
call
loopne
cmp
add
push
pop
icebp
mov
cli
xchg
xor
jno
and
je
mov
sbb
(bad)
xor
dec
fistp
dec
jb
pop
jae
aas
mov
add
add
cmp
push
xor
push
pop
(bad)
push
add
mov
mov
js
out
add
push
xchg
cmc
sbb
mov
clc
stc
cmp
jmp
adc
pop
fwait
icebp
dec
and
sub
je
lods
or
add
(bad)
jl
sub
xor
or
rcr
mov
and
jno
fist
jno
fidiv
out
clc
movs
and
mov
mov
mov
push
inc
lea
push
or
jno
adc
icebp
mov
push
test
call
sti
jb
sti
leave
scas
jno
mov
jb
dec
mov
mov
outs
jno
dec
mul
push
jnp
js
lods
mov
clc
shl
mov
(bad)
jno
pusha
ds
mov
xor
inc
sbb
lea
movs
and
cmp
and
sbb
mov
int3
mov
jne
cli
mov
add
mov
int
or
xchg
aaa
and
pop
inc
jg
pop
inc
or
add
imul
clc
scas
sub
pop
outs
xabort
sti
cmc
sar
js
jb
sbb
icebp
xbegin
clc
mov
xchg
and
inc
stos
lahf
jb
pop
and
inc
jbe
pop
pop
pop
mov
sbb
js
bound
pop
xor
(bad)
clc
cmp
sahf
nop
jb
mov
pushf
clc
clc
sahf
jno
pop
inc
add
retfw
clc
mov
js
outs
pop
(bad)
jo
cmp
(bad)
xchg
xor
clc
js
or
inc
les
inc
lea
clc
inc
add
js
jae
inc
xor
push
sar
inc
lds
jle
clc
loop
call
mov
add
mov
clc
js
adc
(bad)
or
pop
inc
jmp
out
push
clc
js
pushf
mov
inc
sub
mov
inc
clc
mov
clc
mov
cmc
pop
inc
jns
mov
inc
rcl
dec
pop
xchg
mov
inc
or
js
mov
pop
inc
mov
cdq
aaa
pop
pop
not
or
js
cmp
(bad)
or
add
sub
outs
pop
cmp
das
out
dec
outs
xchg
push
(bad)
adc
add
aam
mov
rol
fld
sar
jae
ds
jl
fwait
mov
mov
jb
popf
mov
pop
sub
jns
jno
lock
jno
xchg
adc
(bad)
mov
mov
xchg
mov
ins
out
lea
jle
adc
sbb
ret
sti
mov
xchg
pop
sti
cmp
dec
xor
mov
lea
inc
inc
cld
cmc
sub
clc
pop
jbe
pop
in
inc
stc
ds
inc
lea
outs
(bad)
(bad)
aam
dec
lea
cld
xchg
shl
loope
jb
inc
add
js
(bad)
inc
mov
jge
clc
or
push
mov
dec
jb
pop
jbe
clc
daa
xlat
lea
push
push
mov
fs
pop
jno
sub
(bad)
(bad)
popa
sub
jb
jne
mov
clc
push
adc
mov
loope
mov
mov
clc
(bad)
lea
bound
jb
push
inc
xchg
neg
lea
out
mov
dec
fucomip
jb
jns
push
lea
and
xor
cmp
adc
jb
dec
inc
ror
xchg
adc
pop
stc
pop
movs
jb
std
lea
bnd
jb
inc
jb
adc
jb
xor
sub
(bad)
(bad)
jp
cmp
pop
jl
push
cdq
lea
jmp
mov
mov
ja
jb
out
hlt
jno
jo
mov
inc
mov
test
xchg
pusha
call
lea
push
inc
lea
inc
jo
pop
sbb
jno
cld
mov
xchg
mov
push
mov
jb
loop
jb
hlt
data16
mov
lock
lods
jno
mov
call
loop
clc
div
mov
rcl
lea
mov
sub
mov
out
cmp
cmp
repz
jno
popa
outs
adc
cmp
push
push
jno
mov
mov
outs
inc
jno
ja
mov
(bad)
std
xlat
popf
jno
cmps
dec
jb
cmp
inc
mov
lds
pop
std
jecxz
jno
adc
mov
jae
std
lea
vpmacssdd
mov
xchg
xlat
jno
jle
cmc
jb
mov
clc
mov
enter
mov
mov
fwait
mov
in
lea
dec
xlat
push
lods
mov
mov
ins
(bad)
in
and
cs
sub
mov
adc
or
ins
inc
in
daa
sub
xlat
inc
gs
sar
xor
fist
pop
fcom
es
and
xchg
data16
mov
loope
mov
pop
fcom
imul
add
mov
scas
push
lock
sub
jecxz
daa
sub
adc
jbe
and
xchg
clc
jae
lods
inc
push
scas
push
aas
test
adc
mov
push
hlt
dec
lea
lods
jp
fist
adc
pop
out
fist
outs
data16
(bad)
mov
and
mov
and
and
and
push
push
fcmovnbe
jp
and
push
in
add
jl
lea
adc
cmp
mov
mov
arpl
lea
mov
clc
adc
sbb
mov
jbe
mov
cmp
or
push
daa
mov
out
push
jno
div
dec
jno
(bad)
push
jno
sub
xchg
xor
mov
mov
clc
jns
or
cmp
mov
jbe
js
idiv
stc
sbb
clc
outs
(bad)
mov
in
xlat
lea
xor
or
jp
cdq
mov
(bad)
ss
and
adc
xchg
daa
jno
cmps
mov
jb
xor
(bad)
pop
sbb
retf
mov
js
or
mov
cmp
mov
mov
xchg
ins
test
xchg
add
clc
outs
xor
pop
test
sti
xchg
call
jns
sbb
or
jno
xor
mov
mov
jno
retf
mov
das
adc
xchg
cld
jb
shr
inc
adc
mov
mov
movs
(bad)
mov
adc
mov
js
aas
pop
mov
add
xchg
lea
mov
mov
clc
outs
dec
xchg
lea
mov
clc
lea
inc
hlt
cmp
mov
out
mov
push
(bad)
adc
aas
loope
push
cmp
dec
sbb
js
shl
lea
adc
jno
imul
inc
out
fmul
jno
imul
mov
mov
in
movs
mov
fs
jno
pop
sbb
adc
clc
scas
cs
cmp
lea
fadd
jb
mov
push
xchg
jno
and
dec
jb
sbb
test
inc
daa
add
adc
dec
ins
dec
jb
test
xor
enter
xchg
(bad)
jno
push
leave
jnp
mov
push
or
mov
mov
clc
or
xor
jno
jns
jle
cmp
jno
sub
sbb
push
add
lea
cmp
test
pop
adc
div
sbb
popa
mov
mov
jno
outs
cmp
js
jmp
rcl
dec
jno
aas
add
mov
lock
(bad)
or
lea
jbe
dec
jno
mov
idiv
mov
movs
mov
lea
mov
clc
mov
sbb
lea
pop
bound
adc
pop
jnp
adc
mov
mov
mov
mov
clc
(bad)
mov
cmp
ret
or
jno
(bad)
stos
test
test
clc
ret
mov
inc
sqrtps
pop
inc
push
ins
jno
and
test
clc
pop
fs
mov
pusha
adc
jno
pop
stos
add
bnd
pop
push
jno
out
lea
mov
clc
adc
mov
pop
mov
clc
div
cmp
jp
cmp
dec
adc
mov
(bad)
xchg
mov
push
jbe
jno
mov
sub
push
mov
cmp
push
jb
push
pop
mov
inc
inc
bound
inc
pushf
pop
ins
mov
push
and
js
movs
sub
inc
fwait
mov
lock
jno
movs
imul
cmp
or
test
pop
xor
sub
dec
inc
fild
in
add
jno
inc
inc
test
mov
xchg
sbb
lea
test
loop
cld
mov
data16
mov
out
dec
jno
(bad)
scas
(bad)
mov
or
pop
stc
lds
jno
not
in
in
icebp
mov
rcr
call
and
sahf
cwde
xlat
call
xor
call
ret
(bad)
gs
fstp
(bad)
cdq
clc
es
fadd
inc
out
mov
pop
clc
xor
call
pop
dec
mov
(bad)
pop
shl
rcl
outs
stc
pop
jo
clc
xchg
xchg
jae
mov
xchg
gs
pop
xor
jp
xchg
retf
stc
cdq
mov
popw
out
icebp
call
sub
call
mov
call
clc
cmp
sbb
lods
outs
out
sti
mov
cdq
js
push
gs
pushf
test
mov
add
fistp
clc
xchg
cmc
and
mov
cdq
clc
mov
(bad)
cmps
call
ins
xchg
mov
rol
call
push
mov
add
jp
js
pop
mul
push
in
cmp
and
fstp
call
push
jb
xchg
(bad)
mov
push
gs
xor
jb
pop
xor
pop
mov
and
push
mov
jcxz
jno
data16
mov
cmp
mov
enter
mov
clc
lock
sti
mov
mov
shl
mov
cmc
jg
ret
mov
(bad)
dec
jno
push
adc
xor
clc
or
lea
mov
push
pop
mov
je
mov
mov
mov
mov
xchg
sahf
outs
mov
not
sbb
lea
cld
popa
jno
mov
jae
clc
data16
(bad)
sub
ror
cmp
lods
mov
fwait
daa
add
mov
jno
int3
sub
jb
leave
sub
mov
push
and
add
ins
mov
mov
clc
rol
jno
fwait
fs
mov
or
xchg
mov
cdq
mov
iret
mov
jno
add
jno
pop
cmc
jno
jnp
inc
mov
jae
lea
cmp
xor
(bad)
inc
mov
mov
js
mov
jne
inc
(bad)
mov
pop
mov
pop
test
fstp
fs
jno
retf
jno
cmp
rcr
clc
mov
gs
mov
xor
lea
ds
jno
pop
add
sbb
clc
jmp
outs
sbb
jno
jne
addr16
sbb
pop
pop
fild
xchg
call
lahf
shl
clc
(bad)
ins
mov
out
sti
stos
xchg
(bad)
cmp
jae
(bad)
aaa
dec
xchg
push
inc
gs
xor
cli
cdq
clc
mov
cmp
(bad)
pop
jle
(bad)
not
push
fcomp
call
pop
mov
dec
call
hlt
test
call
stos
mov
lods
cmc
gs
cmps
lds
shl
cli
cdq
js
pop
test
ins
dec
jns
pop
mov
arpl
pop
mov
test
clc
and
cmp
clc
sub
test
stc
test
add
cmp
bswap
inc
not
movzx
sbb
and
clc
lea
ror
btr
sub
movzx
mov
setne
jmp
or
adc
cmp
js
das
sti
dec
push
mov
sub
jmp
shr
js
sub
ins
pusha
lea
loope
aaa
jno
xchg
stos
(bad)
mov
push
fisttp
jno
scas
(bad)
in
mov
dec
test
mov
add
mov
into
jno
ds
inc
stc
out
shl
out
jb
lahf
out
sti
push
fld
pop
hlt
enter
mov
mov
xchg
retf
or
sti
jno
mov
lea
aam
jno
mov
sbb
pop
push
push
push
jb
rcr
stc
adc
jno
into
retf
jb
js
pop
lea
mov
js
push
mov
mov
clc
adc
mov
cmp
push
mov
clc
scas
ror
mov
les
mov
xchg
enter
aam
clc
gs
push
mov
je
sub
(bad)
push
push
mov
mov
int
or
adc
mov
sti
push
cmp
mov
outs
das
mov
cmps
sbb
lea
push
push
js
clc
into
xchg
es
push
xor
mov
dec
cmp
mov
cmp
int3
ins
jb
sbb
mov
mov
xor
pop
jg
push
push
mov
call
test
in
mov
cmp
and
cmp
jle
pmullw
jnp
repnz
dec
jb
rol
mov
cld
xchg
pop
jno
movs
sub
jno
mov
repz
mov
fcmovu
js
inc
cli
fbld
(bad)
or
or
jno
push
push
push
and
inc
sub
mov
int3
retf
dec
repnz
sti
js
mov
mov
imul
dec
mov
pop
(bad)
mov
mov
es
stc
dec
mov
push
pop
(bad)
adc
xchg
pop
mov
(bad)
clc
mov
mov
nop
adc
pop
(bad)
sub
js
pusha
push
pop
inc
pop
js
add
stos
add
clc
mov
mov
js
mov
pop
(bad)
stos
push
sbb
xchg
mov
jb
mov
cmp
test
cmp
sub
stc
cmp
jmp
jae
shl
mov
lea
mov
jmp
jae
mov
movzx
shl
test
cmp
or
shld
sub
mov
test
cmc
shl
jmp
call
mov
xlat
aad
mov
mul
sub
pop
out
js
inc
push
mov
in
mov
inc
xlat
mov
clc
push
cmp
jns
(bad)
and
arpl
jno
push
div
std
push
(bad)
stc
iret
adc
sub
ror
inc
sub
clc
sub
xchg
mov
jb
push
or
mov
and
lea
(bad)
push
ja
mov
mov
js
sti
inc
mov
jmp
imul
cmp
jno
pop
pop
jge
inc
jg
addr16
mov
mov
pop
xchg
enter
aad
add
or
pop
int
mov
clc
fnsave
sbb
(bad)
mov
cli
(bad)
(bad)
retf
or
or
jno
xchg
pop
inc
leave
mov
xchg
jno
in
pop
fdiv
fdiv
daa
jno
dec
shl
jno
cld
cmc
cld
add
lea
clc
jecxz
retf
mov
int
mov
(bad)
jb
xchg
inc
(bad)
mov
(bad)
cmp
mov
mov
xchg
movs
xchg
jno
or
lea
mov
retf
jno
inc
sub
mov
cli
push
sahf
adc
mov
lahf
je
mov
fstp
jno
hlt
div
jno
aam
icebp
jb
push
pop
inc
iret
sti
adc
clc
sahf
shl
inc
ret
lea
ds
push
jno
clc
xor
jno
dec
dec
in
jno
push
daa
popa
mov
cs
lea
mov
mov
cmp
xchg
jno
push
xchg
popf
lea
add
jno
arpl
mov
iret
and
jno
push
cmp
mov
adc
lds
pop
dec
enter
jns
xor
inc
sahf
(bad)
clc
imul
mov
cmps
mov
add
jno
cmp
mov
sub
add
mov
clc
mov
sub
mov
add
clc
cwde
jbe
js
or
pop
inc
jae
jno
test
jb
pop
push
scas
mov
dec
inc
mov
xchg
scas
ds
popf
lods
jno
pop
xchg
call
adc
cwde
mov
cmp
mov
mov
mov
clc
lock
lea
mov
js
(bad)
mov
js
pop
jno
or
sbb
add
adc
outs
jmp
mov
dec
dec
jl
inc
jbe
mov
mov
mov
pop
scas
cmc
in
js
int3
add
inc
fs
loope
xchg
ret
retf
push
jno
push
jb
jb
mov
jbe
mov
mov
cmp
cmps
ror
mov
xchg
jle
jno
iret
dec
jb
aad
(bad)
mov
loope
pop
jno
mov
sbb
mov
adc
ficomp
mov
repz
jl
inc
ret
out
mov
or
mov
pop
add
jno
jge
add
inc
leave
xchg
or
xchg
(bad)
sar
sti
cmp
and
mov
js
inc
in
jnp
ss
xor
jmp
xchg
loop
jnp
mov
cdq
jnp
adc
test
add
(bad)
data16
add
cld
and
test
cdq
stc
xchg
add
mov
jo
test
sbb
fistp
xchg
cwde
in
cmp
rol
(bad)
dec
push
jno
pop
mov
test
int
js
inc
mov
mov
clc
retf
push
(bad)
retf
jnp
mov
jno
add
jnp
loop
xlat
js
and
js
cli
inc
jnp
call
fiadd
(bad)
or
mov
sub
mov
cmp
test
sahf
sub
test
repz
dec
fdivr
cmp
dec
test
mov
pop
test
cmp
clc
pop
test
imul
outs
fidivr
mov
cmp
xchg
repz
add
jnp
fld
sbb
sbb
clc
test
mov
jae
mov
inc
xchg
sar
jnp
adc
mov
mov
xchg
jmp
test
cld
jnp
sub
fstp
movzx
test
test
clc
cmp
jmp
sub
stc
sub
test
stc
cmp
jmp
jae
mov
xor
mov
cmc
cmp
jmp
xor
clc
dec
adc
mov
mov
clc
pop
xchg
dec
mov
xor
jno
jnp
xor
clc
sub
in
inc
xor
mov
(bad)
pop
and
inc
stc
adc
cmp
rol
ds
cmp
test
pusha
je
lea
mov
lods
ret
test
mov
push
add
jno
pop
jo
mov
sbb
or
test
addr16
outs
inc
sub
adc
jecxz
pop
xchg
mov
mov
cmps
aam
outs
(bad)
iret
leave
cmp
xchg
fwait
push
xchg
js
dec
outs
(bad)
bound
imul
mov
(bad)
setne
fild
ds
outs
inc
push
pop
outs
pop
pop
(bad)
mov
xchg
cmp
sub
or
outs
(bad)
iret
xor
test
xchg
cmp
arpl
outs
pop
and
sahf
outs
pop
xchg
jg
mov
js
xchg
push
mov
mov
mov
clc
ret
(bad)
mov
daa
pop
jae
pop
adc
xchg
mov
mov
js
repnz
xchg
std
xchg
xchg
mov
js
jo
outs
inc
jle
mov
mov
rcl
mov
js
scas
cmc
outs
(bad)
mov
mov
fist
xchg
mov
clc
out
sub
ins
jb
pop
hlt
pop
mov
inc
lds
js
mov
cmp
mov
shr
add
jp
or
fimul
pop
sar
push
jno
push
sub
push
push
cld
mov
pusha
jb
push
fwait
retf
pop
jo
push
mov
mov
dec
std
daa
add
or
icebp
cmp
js
add
and
in
clc
iret
pop
test
push
inc
pushf
out
or
icebp
clc
ret
lock
(bad)
in
fisttp
icebp
cmp
cmp
pushw
inc
call
icebp
cmp
mov
cld
rcr
mov
clc
hlt
cld
ror
inc
lock
push
inc
or
femms
pop
and
dec
push
inc
pop
xor
push
stc
icebp
mov
mov
js
ror
push
(bad)
fbld
add
jb
mov
xchg
(bad)
push
jno
bnd
jno
ret
sub
jno
mov
xchg
xchg
jo
inc
mov
aam
lea
pop
add
jno
adc
or
mov
pop
adc
inc
and
stc
inc
cmp
xor
mov
push
fbstp
adc
jb
test
push
mov
dec
sub
push
adc
xchg
jno
into
jle
jno
ins
or
adc
aam
mov
pop
jle
jb
mov
mov
inc
loop
dec
lea
xor
sub
jno
push
push
daa
xor
(bad)
ss
stc
lea
cmp
arpl
dec
cmps
sbb
jno
aas
cmp
xor
fcom
jb
(bad)
mov
mov
mov
js
and
mov
jo
test
clc
sar
lods
jmp
mov
fidiv
pop
inc
outs
mov
mov
iret
mov
dec
cli
mov
or
dec
push
jbe
ret
jne
in
mov
mov
mov
aas
mov
aad
dec
dec
jmp
or
inc
pusha
sar
dec
mov
jg
out
and
cmp
movs
jg
jmp
cmp
jg
sub
jo
cmp
fld
jg
dec
xor
xor
cmp
jle
jg
pop
(bad)
jg
fsubr
cmp
mov
lds
cmp
cmp
jg
test
cmp
into
cmp
jl
jmp
cmp
scas
dec
lds
mov
cld
loop
arpl
cld
pop
jl
cmp
inc
jne
jg
inc
rol
xor
jg
int3
push
icebp
cmp
cmp
or
inc
push
or
cmp
mov
jg
xchg
xchg
xlat
jg
mov
inc
cmp
pushf
cmp
scas
sbb
cmp
or
add
xchg
sar
(bad)
fucomi
cmp
xchg
jg
arpl
jl
stos
add
cmp
xchg
bound
cmp
adc
fwait
xlat
cmp
adc
sub
jl
aaa
fcomp
ret
pushf
mov
jnp
dec
inc
adc
jb
dec
and
mov
sub
mov
jae
push
jno
dec
dec
retf
jno
inc
shl
mov
add
push
mov
mov
clc
enter
pop
and
test
jne
add
push
xchg
sahf
pusha
mov
js
or
cmp
out
daa
jle
mov
mov
clc
out
retf
dec
lea
mov
clc
mov
ins
movs
les
mov
cmp
ins
popa
jb
aaa
fcomp
mov
dec
int
jno
dec
dec
je
mov
cmp
movs
(bad)
in
mov
mov
clc
repnz
mov
aaa
jno
mov
es
adc
mov
mov
popa
fwait
jno
mov
mov
xor
(bad)
rcr
xchg
jno
addr16
loop
outs
jne
clc
int3
popa
mov
mov
outs
stc
push
idiv
adc
cdq
pop
or
iret
je
xchg
ret
js
outs
or
ja
or
fidiv
cmc
clc
loopne
mov
xchg
jge
clc
add
out
mov
mov
mov
jl
mov
jb
inc
jne
fisttp
inc
imul
or
sbb
lock
nop
int
jbe
mov
or
mov
push
jne
jmp
jae
cmp
iret
fwait
jbe
and
jmp
mov
mov
cmp
cmp
dec
outs
or
mov
mov
js
cmp
(bad)
cdq
arpl
mov
mov
mov
clc
enter
xchg
pop
dec
jne
inc
cs
mov
loopne
jno
and
inc
mov
xlat
pop
xchg
lea
aad
lds
xchg
or
xchg
jno
call
pop
mov
xlat
cmp
mov
popf
sbb
jno
mov
ret
jb
cmps
inc
pop
mov
cmp
mov
jno
jge
jb
clc
ja
aas
adc
mov
clc
fdiv
(bad)
pop
pushf
lea
mov
mov
clc
frndint
cwde
lea
mov
mov
cli
mov
mov
and
or
pop
popf
cmc
into
jno
jmp
aam
xor
sbb
mov
lahf
popf
out
mov
mov
push
cdq
jle
mov
(bad)
int
xchg
pop
jno
hlt
scas
leave
mov
js
pop
les
mov
js
inc
add
(bad)
lock
and
xchg
jno
sub
jb
arpl
or
lea
cmp
adc
push
adc
mov
inc
jno
mov
cdq
sbb
(bad)
sbb
adc
dec
lods
mov
mov
sbb
cmp
fsubr
jb
sbb
in
(bad)
mov
(bad)
clc
jno
jno
aas
(bad)
mov
inc
jo
mov
inc
lea
pop
fisttp
cmps
out
fdiv
inc
inc
add
jo
jno
sub
lea
repnz
(bad)
mov
cld
or
xchg
shr
ds
leave
rcr
inc
shl
xor
add
mov
movs
cdq
jno
stos
and
(bad)
jno
test
jae
mov
repz
xchg
jno
out
xchg
pop
mov
stos
inc
push
mov
enter
cmp
repz
mov
js
fdivr
inc
xchg
int
push
inc
iret
sub
push
pop
or
fdiv
clc
sti
push
ins
push
inc
or
push
(bad)
mov
push
(bad)
push
clc
aaa
push
xchg
int
clc
xor
and
inc
sub
mov
fisttp
cs
xor
push
je
mov
pop
pop
lea
cmp
add
add
push
lea
aas
(bad)
jno
popf
cmp
lea
or
fwait
jno
cmp
mov
push
sub
jno
mov
fwait
cdq
mov
mov
jb
sub
cld
mov
clc
fadd
mov
sub
test
inc
sti
cmp
cmps
jb
test
(bad)
lea
sbb
sub
jno
bound
js
adc
ficom
jo
mov
mov
icebp
inc
xor
cmp
outs
pop
cmp
cmp
jnp
bnd
mov
mov
mov
jmp
test
clc
or
mov
movzx
inc
mov
mov
test
shr
jmp
pop
(bad)
ss
and
rol
outs
sub
aad
out
pop
ret
stc
inc
jb
out
iret
mov
pop
(bad)
mov
jecxz
jg
clc
out
xchg
mov
or
mov
sbb
leave
retf
aad
mov
cmp
popf
sbb
adc
or
push
pop
enter
sub
fisttp
(bad)
js
pop
pop
(bad)
pop
retf
pop
pop
inc
jo
ja
pop
xchg
fmul
fistp
mov
mov
xchg
inc
push
mov
sbb
popf
call
clc
ins
out
(bad)
dec
data16
add
mov
mov
js
mov
add
(bad)
jne
add
mov
mov
clc
ret
add
dec
je
jo
jo
outs
push
gs
gs
push
add
adc
push
add
jb
push
outs
lock
ret
(bad)
push
mov
mov
push
shl
cmp
retf
jno
out
fs
jb
rcr
test
mov
push
mov
test
cmp
fcomp
inc
mov
xchg
jno
sahf
push
mov
cmp
or
arpl
cmp
push
fiadd
cli
nop
js
xor
mov
mov
inc
cmp
xchg
js
addr16
arpl
xchg
out
sbb
(bad)
jp
ins
inc
add
adc
lods
fs
xchg
mov
clc
dec
cli
ins
inc
mov
ins
outs
pop
arpl
cdq
push
jle
ins
inc
imul
xchg
js
inc
sub
add
outs
pop
jno
xchg
cmp
imul
clc
mov
fs
ins
pop
mov
clc
(bad)
inc
cwde
ins
pop
out
cmp
adc
ins
inc
pop
pop
out
xchg
js
adc
ins
pop
jle
xchg
cmp
jl
js
loop
(bad)
in
add
dec
xchg
cmp
xchg
xchg
mov
cmp
mov
movs
outs
xchg
rcl
xchg
js
adc
mov
xor
xchg
mov
clc
sar
ins
inc
adc
mov
mov
push
cmp
cmp
les
inc
(bad)
out
ins
inc
and
pushf
ins
pop
cmps
fs
xchg
mov
sub
add
add
stc
clc
test
sub
shr
stc
clc
add
jmp
jmp
push
jle
js
xor
mov
mov
mov
aaa
mov
jl
mov
aad
jns
pop
fwait
pop
(bad)
mov
xchg
out
jb
push
or
dec
jno
sti
movs
pushf
mov
and
mov
stos
(bad)
clc
test
mov
jb
mov
cmp
push
add
dec
xor
cmp
or
icebp
mov
shr
lods
icebp
js
fcom
push
inc
add
mov
adc
jno
or
jb
mov
dec
jl
ds
or
js
jo
(bad)
in
add
or
mov
or
mov
mov
clc
frndint
fisttp
xchg
movs
hlt
mov
clc
mov
or
cmp
clc
dec
mov
mov
pop
ins
jno
and
jno
loop
mov
cmc
mov
mov
clc
stos
cmp
jno
retf
movs
push
jno
call
add
leave
outs
jno
stc
push
jno
adc
sub
test
out
mov
inc
imul
mov
cmp
push
call
inc
shl
xchg
mov
out
mov
test
push
adc
sbb
in
mov
xor
imul
mov
int3
xchg
bnd
mov
adc
mov
mov
mov
sub
mov
retf
mov
test
jno
pop
add
sti
jo
mov
cmc
dec
jbe
pop
repz
xchg
aas
int
mov
cmp
cmp
mov
mov
jbe
and
mov
jbe
movs
aad
mov
cld
leave
pop
jbe
cmp
dec
jbe
mov
jne
inc
mov
jbe
or
adc
cmp
sub
or
jbe
test
dec
out
mov
pop
or
mov
jns
jbe
mov
pcmpeqd
ret
jmp
mov
fwait
pop
jbe
leave
and
push
push
jl
retf
cmp
jecxz
inc
vminpd
cld
call
pop
mov
mov
into
mov
jl
push
dec
mov
or
cmp
inc
xchg
jbe
inc
mov
adc
enter
ret
xchg
in
mov
pop
sbb
sbb
loop
pop
pushf
push
inc
lahf
or
loope
inc
(bad)
pop
sbb
sbb
jl
mov
popf
sbb
loop
dec
jb
loop
cs
in
stc
pop
xchg
add
xchg
add
jmp
push
push
xchg
adc
inc
xchg
loope
imul
push
loope
xlat
ret
in
imul
cli
xchg
add
cmps
ficom
mov
mov
mov
mov
imul
mov
add
int
ret
jecxz
adc
rcl
dec
cmp
(bad)
jge
cmp
or
jbe
add
push
inc
xchg
inc
gs
jns
cmp
test
add
retf
inc
sub
or
imul
js
stos
add
jno
add
mov
ret
ja
(bad)
jb
jge
pop
adc
adc
sbb
jno
into
inc
fdiv
int3
xchg
mov
jno
inc
hlt
cmp
jnp
hlt
mov
js
add
or
test
idiv
mov
(bad)
adc
jg
mov
out
jge
or
sti
cmp
hlt
cmp
xor
js
pop
(bad)
or
arpl
or
pop
or
pop
cvtpi2ps
dec
or
pushf
mov
pop
inc
jmp
je
hlt
mov
js
jae
or
push
push
out
(bad)
fs
jb
fcom
mov
loope
(bad)
mov
stos
das
gs
xchg
xchg
test
mov
cmp
data16
dec
adc
adc
jno
mov
fnstenv
cmp
and
jno
rcr
mov
fwait
inc
sti
push
cwde
and
cmp
test
mov
(bad)
hlt
out
pop
xchg
mov
jno
sbb
fwait
mov
add
inc
jno
xchg
(bad)
mov
ficom
jb
stc
lock
(bad)
lock
jo
xor
das
mov
mov
xchg
lds
cwde
jno
out
mov
retf
dec
les
push
or
xor
push
(bad)
jno
or
retf
jno
mov
cmps
(bad)
mov
jbe
xchg
in
jno
in
jge
mov
clc
mov
inc
push
jno
xchg
mov
jmp
mov
mov
pop
jmp
pop
push
jb
jl
retf
push
cmp
jno
add
add
(bad)
clc
ja
lods
mov
pop
pop
pusha
mov
jnp
mov
mov
mov
enter
inc
dec
inc
adc
stc
xlat
mov
sti
add
sbb
push
pop
jge
stc
loope
jno
xlat
xchg
add
sub
jno
lods
nop
add
out
add
xchg
mov
fdivr
inc
fs
movs
jb
into
sbb
mov
clc
int
or
mov
clc
aad
lea
jg
dec
jno
dec
mov
outs
fistp
js
adc
mov
cmp
xchg
jb
push
pop
jno
inc
bound
mov
push
lods
mov
adc
lahf
in
mov
xchg
adc
jno
push
les
mov
push
shr
addr16
push
jno
jno
mov
cdq
ret
dec
jno
inc
jle
jno
cli
push
mov
mov
js
xor
mov
or
(bad)
or
add
test
push
jo
add
mov
jle
(bad)
and
jle
mov
add
add
inc
add
sub
jmp
pop
inc
xor
jle
or
adc
inc
scas
add
pop
(bad)
loope
push
hlt
imul
mov
jnp
jb
inc
outs
xchg
xchg
mov
fnstcw
push
je
ror
inc
xor
add
(bad)
ins
(bad)
cmp
ja
mov
clc
cs
add
sbb
add
pop
xchg
jb
mov
jle
test
nop
add
mov
call
sti
mov
nop
add
inc
mov
sub
add
sub
jge
add
add
pop
or
inc
jle
ja
add
fisub
jle
inc
pop
jle
mov
dec
jle
or
push
push
xchg
add
jge
xor
xor
add
jg
sar
xchg
int3
lods
add
cmp
and
mov
cmp
sub
(bad)
in
mov
dec
mov
mov
pop
xchg
adc
jno
mov
fidiv
stos
mov
jno
fs
adc
clc
pop
add
mov
mov
clc
or
and
mov
imul
mov
dec
popf
lahf
jno
loope
mov
sti
sub
ror
jno
inc
mov
push
aam
mov
leave
and
jno
mov
inc
jg
push
mov
pop
rcr
lds
daa
sub
imul
fist
lods
arpl
sar
mul
sub
push
call
and
and
fist
rcl
rcr
and
hlt
inc
retf
fist
outs
sti
std
fcmovnbe
cmp
jbe
and
fiadd
fist
mov
sar
and
shl
ins
fist
or
push
mov
in
les
scas
fist
pop
int
lods
jecxz
daa
sub
scas
idiv
in
aam
dec
and
sti
stos
movs
fist
jmp
fist
jge
fist
pop
in
fcmovnbe
test
mov
sub
mov
cmp
push
test
ins
and
(bad)
mov
adc
stos
fist
retf
jl
lds
lds
pop
push
push
push
movs
sub
push
jle
push
movs
lods
or
sub
pop
lahf
sbb
fdivr
cmps
sub
adc
movs
pop
push
mov
out
movs
in
dec
xchg
push
movs
sub
xchg
xchg
outs
push
pop
shr
dec
dec
jb
fst
mov
cld
pop
int3
mov
xchg
push
outs
jno
mov
mov
mov
ins
jb
jbe
cmp
jno
movs
popf
shl
xor
sub
push
fidiv
add
xchg
jno
mov
out
mov
(bad)
popf
add
lea
pop
imul
mov
fisttp
stc
outs
ret
inc
add
lea
outs
out
jno
cmc
popf
fnsave
xchg
loopne
mov
push
mov
jns
int
clc
(bad)
hlt
ror
cmp
cli
jmp
mov
pop
add
fst
jno
pop
cli
jno
jp
sti
push
jg
mov
rcr
lea
(bad)
xor
jl
inc
jle
xchg
mov
cmp
aam
js
adc
mov
adc
dec
(bad)
mov
je
mov
cmp
jmp
cs
adc
call
div
pop
test
cmp
jmp
jmp
push
cli
sub
(bad)
jno
leave
dec
jb
inc
ret
push
outs
retf
mov
ret
push
jb
clc
retf
mov
and
mov
pop
in
adc
fdiv
leave
in
ret
add
daa
add
sbb
in
clc
push
jo
clc
mov
in
push
xor
sbb
js
int3
pushf
in
popa
in
mov
sahf
mov
pop
stc
mov
push
popa
inc
or
cmp
xor
sahf
js
pop
sub
imul
xchg
fbld
cld
xor
in
into
fbld
sbb
out
popa
pop
xchg
or
jo
popa
(bad)
jo
jb
in
les
mov
mov
mov
mov
dec
ret
clc
push
or
sbb
jno
mov
add
imul
jl
inc
xor
cdq
aaa
mov
mov
sbb
mov
push
out
pop
loope
arpl
gs
(bad)
les
inc
icebp
mov
js
add
xchg
fs
mov
clc
mov
add
(bad)
push
xchg
push
jnp
pop
mov
push
xchg
repnz
xor
xchg
xchg
movs
xor
rol
je
xchg
or
cmp
test
inc
dec
add
(bad)
mov
push
pop
stc
shr
clc
popa
jns
push
inc
mov
aas
fnstsw
icebp
mov
dec
xchg
fisttp
(bad)
rol
xlat
repnz
adc
(bad)
sbb
cmp
inc
jle
pusha
push
inc
jmp
push
pop
sbb
sti
push
daa
jg
pop
aam
icebp
mov
mov
outs
ins
(bad)
mov
js
push
mov
pop
mov
inc
sbb
push
data16
fidivr
mov
or
xchg
ins
popa
xchg
outs
mov
repnz
push
jecxz
(bad)
cmp
test
loopne
cs
bswap
jnp
mov
movs
xchg
and
out
add
pop
das
inc
aas
js
outs
iret
or
cmp
test
xlat
xchg
push
mov
mov
xchg
es
test
mov
mov
clc
movs
adc
push
sub
aam
clc
les
xchg
rcr
xchg
mov
loope
js
les
xchg
jno
add
push
fldcw
stc
jno
and
sbb
mov
aaa
movs
test
clc
adc
mov
shl
(bad)
jbe
ins
mov
sbb
mov
je
ftst
and
fidivr
loope
xchg
js
sar
outs
inc
push
push
pop
outs
inc
dec
push
call
inc
outs
(bad)
dec
les
xchg
nop
clc
xor
mov
nop
mov
clc
dec
out
outs
inc
cmps
outs
cmp
pop
add
outs
xchg
dec
nop
cmp
xchg
outs
inc
inc
mov
call
cli
test
clc
sub
clc
sub
jmp
or
daa
dec
mov
setge
clc
or
mov
sti
or
pop
sbb
in
mov
cmp
imul
inc
mov
dec
push
push
mov
jno
xor
adc
lea
mov
(bad)
jno
not
jle
js
aam
mov
mov
clc
dec
test
mov
xchg
sbb
mov
mov
mov
or
(bad)
iret
stc
enter
test
iret
inc
test
jno
sbb
js
jg
xchg
and
push
mov
pop
cmps
test
jp
js
fsubr
ss
and
pop
xchg
stos
outs
jnp
mov
jmp
xchg
iret
aaa
stos
js
cld
cmp
jp
inc
dec
popa
xchg
mov
nop
fnclex
xchg
mov
clc
adc
cmp
jp
test
das
xchg
js
cmc
xchg
mov
mov
clc
xor
xchg
mov
xchg
sbb
test
inc
or
les
xor
test
(bad)
in
inc
push
imul
sbb
push
js
icebp
xchg
dec
js
ror
xchg
mov
enter
mov
stos
jnp
je
adc
mov
js
movs
xchg
pop
and
xchg
loopne
mov
hlt
xchg
js
inc
mov
cmps
xchg
inc
xchg
fild
mov
stc
test
test
mov
mov
clc
test
and
js
adc
jecxz
clc
cld
push
test
in
xchg
xor
xchg
dec
test
cmp
mov
clc
cmp
jmp
push
(bad)
adc
sub
jl
aas
shr
or
lahf
pushf
adc
jae
mov
mov
sub
cmp
shr
test
test
add
mov
cmc
mov
shl
lea
cmovle
mov
mov
mov
jmp
or
adc
std
inc
xor
and
js
aas
lods
jne
cmp
jmp
jne
cmp
jmp
popa
adc
and
popa
jmp
or
cmp
sub
jno
das
or
jno
aam
sub
jp
xchg
or
xchg
jno
xchg
sub
mov
fdiv
test
pop
ins
add
popa
mov
add
leave
mov
pop
jge
ins
sti
mov
js
call
rol
jno
les
xchg
jb
out
out
mov
rcr
scas
mov
mov
inc
sbb
mov
adc
jno
adc
sbb
mov
mov
jle
xor
jno
sub
cmp
out
gs
jb
call
cmps
fwait
and
mov
clc
adc
mov
lahf
neg
jno
ret
adc
jno
xlat
scas
in
ror
cmp
clc
cdq
jmp
cli
mov
pop
or
idiv
push
scas
or
loope
inc
stc
cmps
push
hlt
clc
sbb
stos
or
popf
push
and
js
and
(bad)
lahf
sahf
adc
pop
pop
push
ret
fld
cmp
push
mov
and
xchg
or
pop
lods
mov
mov
clc
pop
lods
mov
and
jg
mov
clc
adc
or
sub
jb
xor
sub
pusha
pusha
adc
(bad)
add
sub
pop
dec
sbb
pop
jmp
test
xchg
retf
cmp
fdiv
inc
jle
jno
loop
ins
mov
sar
add
test
or
mov
rcr
mov
or
imul
js
outs
or
mov
sub
mov
pop
cmp
test
mov
mov
(bad)
push
fimul
jb
adc
dec
outs
lea
mov
inc
mov
mov
js
test
mov
mov
aad
xchg
stos
jno
js
lods
cli
mov
xor
mov
xchg
push
dec
jno
xchg
cld
ror
(bad)
loope
(bad)
mov
mov
mov
sahf
mov
fisubr
jb
outs
repnz
lea
adc
xor
xor
cmp
cmps
scas
rol
js
ret
in
sub
pop
ret
xchg
and
mov
inc
jbe
mov
test
gs
inc
or
js
xlat
gs
adc
gs
imul
adc
mov
cmp
and
inc
gs
or
popw
(bad)
push
cli
call
(bad)
popw
jno
call
or
and
out
call
add
cmc
call
mov
aam
cmp
popa
sub
popw
jmp
cmp
(bad)
push
or
clc
xchg
gs
pop
in
call
rcr
gs
cmps
(bad)
cld
enter
fcom
xchg
push
lock
clc
inc
mov
gs
por
xor
mov
mov
clc
outs
push
xchg
leave
call
ficom
gs
stos
test
gs
xchg
cmp
gs
inc
xchg
call
sbb
call
mov
out
gs
inc
mov
push
gs
cwde
ficomp
cdq
js
call
gs
jbe
cmp
movzx
mov
cmc
movzx
cdq
idiv
pop
mov
cmp
mov
cmc
stc
xor
ret
sbb
adc
sub
pop
pop
sub
cmp
jp
cmps
mov
jbe
pop
inc
mov
jno
pop
lea
mov
repnz
push
mov
jle
mov
(bad)
inc
mov
xor
jno
(bad)
mov
lds
cli
sti
push
mov
mov
add
and
mov
out
movs
aam
xchg
out
jb
test
pop
lea
push
inc
jno
into
popa
jns
clc
cmp
jnp
pop
lock
sub
lock
jno
(bad)
pop
jno
test
lahf
inc
ror
jno
push
fnstenv
test
test
jno
dec
mov
clc
fnsave
fwait
leave
mov
fstp
cwde
mov
fnstenv
mov
clc
xor
add
inc
aaa
inc
sbb
pop
adc
mov
pusha
jmp
jb
jbe
adc
add
jb
inc
push
sub
xor
mov
adc
sub
(bad)
push
adc
sbb
sahf
mov
cmp
cmp
stos
jns
cmp
bound
add
cmc
call
sahf
js
mov
bound
cmp
jmp
mov
and
xchg
bound
cmp
popa
inc
les
sbb
sub
(bad)
scas
push
bound
mov
jp
popa
inc
call
sahf
clc
mov
adc
popa
(bad)
shl
fcomp
mov
into
scas
lods
popa
pop
push
xor
sahf
js
dec
xchg
adc
mov
adc
sahf
mov
clc
sub
popa
(bad)
jmp
jmp
xchg
and
(bad)
imul
popa
pop
dec
sbb
popf
js
mov
mov
shr
jge
cmp
je
js
out
retf
popa
xchg
adc
aam
popa
pop
jmp
pop
sahf
cmp
daa
out
sahf
js
test
bound
dec
push
jmp
js
inc
pop
popa
(bad)
or
sbb
xchg
fldcw
mov
clc
idiv
inc
popa
(bad)
xlat
cmc
scas
popa
(bad)
sbb
mov
or
push
mov
sbb
outs
push
cmp
dec
push
(bad)
adc
and
enter
in
(bad)
(bad)
inc
cmovge
movsx
jmp
jmp
jb
lea
mov
cmp
jmp
sbb
adc
cmp
jle
pop
int
in
jge
xchg
mov
dec
and
inc
jb
dec
mov
mov
push
jno
xor
dec
jno
cld
ja
jb
fiadd
mov
jno
sub
mov
sahf
mov
mov
adc
or
and
pop
out
mov
clc
jmp
(bad)
jno
add
xchg
enter
ficomp
(bad)
in
dec
dec
in
mov
sbb
and
int
out
sub
icebp
sbb
inc
repnz
adc
sbb
mov
jge
js
fucomi
stc
or
mov
inc
in
sbb
call
sbb
inc
mov
sbb
cmps
cmps
out
stc
cmp
inc
xchg
and
shl
xchg
inc
xchg
in
mov
dec
sbb
xor
mov
jb
fwait
addr16
(bad)
sar
add
hlt
das
jno
inc
cwde
jb
loope
sub
(bad)
iret
cmp
xchg
mov
jno
mov
jb
add
mov
scas
lods
sub
inc
mov
mov
xchg
(bad)
or
cmp
dec
jae
clc
in
push
mov
mov
lea
mov
mov
clc
or
hlt
stos
mov
mov
clc
dec
out
mov
bound
inc
xor
mov
cmp
sbb
outs
jle
js
jns
mov
sar
pop
jns
inc
jno
inc
sub
mov
mov
fild
and
outs
ins
out
jno
dec
outs
cmc
jno
movs
mov
mov
(bad)
call
inc
mov
cwde
cli
inc
mov
jns
jno
jmp
test
mov
mov
cmp
sti
cmp
call
(bad)
icebp
dec
ss
and
cmp
jno
div
jle
clc
inc
cdq
mov
xchg
jno
pop
aad
mov
jl
enter
inc
add
js
push
retf
jne
aaa
lea
movs
push
jge
mov
mov
js
mov
dec
test
jno
and
xchg
stc
pusha
jb
mov
nop
xchg
push
mov
mov
clc
call
js
sbb
inc
mov
or
mov
adc
jb
aad
mov
push
bound
(bad)
popa
mov
xchg
jno
mov
int
cmp
das
add
jno
pop
push
jb
imul
fistp
push
push
mov
mov
cmp
jne
imul
push
cmp
clc
cdq
lods
mov
(bad)
mov
push
sbb
in
xchg
xchg
cld
push
jecxz
fwait
dec
out
inc
and
jae
fs
pop
fs
sbb
xor
jecxz
pcmpeqb
outs
push
xor
xchg
sub
lea
mov
jmp
or
out
addr16
mov
fwait
or
sbb
fs
pop
cmp
push
test
in
sbb
mov
push
aaa
mov
je
mov
je
cli
mov
cdq
mov
jb
bound
js
mov
ja
mov
and
xchg
std
je
scas
sub
je
cli
popf
inc
call
je
pop
cld
out
je
(bad)
stc
ja
pop
icebp
inc
mov
call
jmp
push
je
call
cmc
jno
je
fdivr
shl
mov
mov
jno
and
cmp
mov
dec
in
je
mov
xchg
je
adc
es
out
(bad)
outs
xchg
sub
je
push
mov
adc
mov
mov
cmp
mov
bswap
pop
jmp
sbb
push
mov
cmp
outs
push
sbb
and
ins
jns
adc
dec
add
and
outs
arpl
leave
cmp
pop
push
or
mov
or
ins
in
js
dec
add
inc
leave
icebp
or
mov
clc
push
cmp
mov
mov
mov
or
jno
pop
inc
(bad)
shl
imul
js
mov
lods
add
sar
clc
sbb
mov
cmp
push
jno
push
mov
jb
jo
out
dec
leave
in
mov
xor
aam
mov
in
add
xchg
idiv
pop
sbb
push
in
add
mov
mov
adc
mov
clc
mov
(bad)
mov
sub
shl
push
lods
mov
xchg
pushf
jmp
add
mov
call
pop
mov
stc
gs
outs
daa
popw
loopne
bound
inc
stc
sti
xor
icebp
aam
gs
es
pop
gs
push
hlt
call
xor
xchg
dec
jmp
cs
cli
fadd
cdq
clc
cmp
sbb
gs
pop
pop
hlt
xchg
jns
cmp
lock
js
add
inc
or
fstp
gs
arpl
cdq
js
xchg
movs
gs
adc
fst
mov
dec
or
push
shr
repz
gs
retf
ret
push
out
mov
popf
adc
lahf
and
clc
stc
cmp
jmp
or
adc
and
pop
inc
sub
add
data16
mov
sbb
in
ja
add
xchg
cmp
jno
sub
mov
int
mov
pop
mov
mov
or
xor
jno
aas
sbb
jno
enter
clc
(bad)
movs
mov
xchg
not
movs
jb
xor
dec
mov
push
stc
pop
sbb
mov
mov
aam
mov
xchg
lea
mov
pop
inc
jno
daa
and
xor
lea
dec
adc
idiv
inc
fndisi(8087
lea
mov
clc
mov
mov
inc
xor
push
repz
dec
push
lea
mov
inc
mov
jno
scas
pop
jb
jmp
(bad)
or
dec
jno
sahf
mov
inc
(bad)
mov
mov
clc
xor
xchg
jno
push
and
stc
shr
jno
retf
inc
jno
call
adc
js
push
mov
in
ins
lea
cmp
add
jno
in
cmp
(bad)
jmp
jno
and
out
mov
clc
je
mov
jmp
mov
mov
jno
std
jbe
jb
ret
ins
inc
mov
inc
mov
js
sub
mov
jmp
loope
punpcklbw
(bad)
movs
jmp
or
repz
mov
test
mov
cmp
jb
xor
sub
hlt
loop
pop
std
fmul
cmp
add
sar
xchg
lea
sbb
push
jno
test
jb
test
fisttp
pop
cwde
hlt
nop
jno
and
mov
lea
jmp
mov
scas
jb
mov
inc
add
push
mov
out
mov
fwait
inc
test
leave
mov
sbb
inc
pop
mov
js
or
jno
clc
shl
jnp
push
or
cmp
rol
mov
mov
test
xor
inc
mov
sti
xchg
dec
jno
loopne
xchg
mov
(bad)
in
sti
mov
fnsave
cmp
mov
jg
mov
cmp
and
jno
xlat
mov
or
sbb
jno
ds
in
clc
into
mov
inc
ficomp
sbb
adc
or
mov
clc
cmp
mov
push
div
scas
icebp
mov
lea
shld
mov
mov
js
xor
mov
or
(bad)
lea
mov
mov
clc
add
push
gs
jne
jb
push
popa
ins
jne
inc
js
add
dec
cmp
sbb
std
gs
sub
js
sbb
mov
and
addr16
pop
adc
adc
push
imul
fistp
fmul
mov
mov
jmp
push
(bad)
adc
sub
fs
ds
dec
pcmpgtd
cmp
cdq
mov
xchg
pop
jno
cmp
mov
cmc
xchg
mov
je
cwde
mov
push
mov
jno
adc
div
adc
in
jno
aam
cmp
mul
jle
lea
mov
mov
lods
in
jno
push
and
lea
mov
mov
js
sbb
jge
xchg
aad
mov
test
movzx
mov
test
cmc
shr
cmc
imul
cmp
cmp
jmp
jne
mov
btc
shrd
sub
mov
add
add
xor
btr
bts
movsx
cmp
setg
pop
not
pop
setne
setae
cmovle
pop
jmp
or
btc
xor
adc
shl
or
sub
mov
mov
cmp
and
or
mov
ror
sar
mov
btc
mov
cmp
jmp
popf
cpuid
nop
push
call
adc
push
mov
neg
xor
and
mov
outs
dec
inc
imul
retf
and
jae
(bad)
jmp
add
mov
test
pop
adc
(bad)
inc
sub
ret
and
loope
ds
pop
out
aas
sbb
dec
adc
sbb
pop
(bad)
sub
pop
add
out
popa
sub
xchg
call
out
gs
mov
push
jno
repz
sti
daa
lea
rcl
ds
(bad)
mov
or
push
push
fs
mov
cwde
dec
shr
lods
inc
adc
adc
into
cmp
jg
(bad)
mov
xchg
sub
adc
xchg
mov
stos
dec
ss
inc
hlt
(bad)
push
pop
xchg
(bad)
sub
sbb
xor
xor
and
loop
sti
ror
mov
add
repnz
xchg
loop
sbb
inc
jg
mov
scas
mov
out
test
cmp
into
sub
xor
in
adc
aad
test
loopne
scas
shl
sbb
dec
xchg
or
mov
jno
inc
mov
or
or
loop
addr16
push
and
(bad)
(bad)
retf
imul
lock
pop
mov
jmp
mov
pop
scas
ja
rcr
jge
sbb
push
jl
pop
les
push
popa
pushf
push
lahf
lock
sub
lahf
xchg
retf
cmp
lods
and
pop
push
pop
add
sub
sub
mov
call
xchg
(bad)
adc
push
loopne
pushf
or
int
push
enter
mov
jecxz
cwde
mov
fsubr
(bad)
stos
and
in
(bad)
push
xchg
add
pusha
icebp
shl
jl
jae
dec
sbb
mov
pop
pop
imul
addr16
pusha
add
dec
mov
mov
ja
sbb
and
aas
xor
mov
mov
mov
call
cmp
mov
(bad)
xchg
mov
adc
shr
dec
or
lahf
cmps
movs
retf
cmps
je
push
sub
test
xor
inc
pusha
cmp
in
iret
ret
and
push
xchg
aam
xor
mov
push
pop
jb
ins
std
loop
cmps
stos
jnp
sub
sbb
clc
clc
movs
retf
mov
push
or
rcr
mov
sub
or
pop
ror
retf
call
shl
icebp
fsub
mov
mov
pop
push
jnp
xor
(bad)
sbb
retf
dec
xchg
mov
fld
shr
jecxz
adc
ret
pop
not
enter
fwait
mov
inc
sbb
mov
or
push
stc
jecxz
fisttp
jg
or
xchg
stc
mov
jmp
movs
fdivr
cwde
div
in
cli
sti
push
movs
shl
lea
and
sub
movs
leave
dec
icebp
jle
sub
jns
xchg
pop
daa
lods
gs
pusha
call
adc
and
stc
cli
(bad)
adc
adc
in
in
mov
add
fadd
dec
loope
dec
(bad)
mov
popa
mov
push
shr
add
pop
jae
bound
pop
jno
and
inc
lds
cmp
int
inc
dec
xchg
dec
pop
xor
retf
inc
data16
lock
hlt
inc
jmp
shl
mov
fwait
dec
fsubr
push
popf
popa
cs
mov
mov
js
cmp
lods
adc
xchg
dec
cmc
dec
cdq
jmp
(bad)
(bad)
push
out
out
cwde
adc
mov
push
xchg
cdq
fistp
jle
dec
call
popa
mov
sti
add
inc
ret
push
aam
and
repz
mov
cmp
js
in
test
push
outs
xchg
cmp
jg
inc
and
and
test
bound
shr
jb
dec
dec
jp
in
stos
repz
scas
fcomp
mov
cmp
pop
(bad)
dec
sbb
xchg
in
lea
add
imul
cmp
cmp
popa
loope
mul
xchg
iret
test
dec
popa
cs
push
inc
adc
hlt
cwde
lds
out
xchg
mov
fild
jg
sub
(bad)
movs
mov
adc
pop
shl
sbb
dec
ins
cmp
mov
stos
jne
pusha
(bad)
mov
sti
add
push
or
jnp
mov
and
lahf
add
xor
pop
lea
retf
xor
pop
sub
bound
add
shr
push
sahf
loop
imul
ja
icebp
pop
loopne
dec
pop
inc
nop
cmp
xor
(bad)
out
in
cmps
adc
repz
adc
jnp
dec
push
sbb
enter
pop
mov
pop
fcmovbe
or
jge
dec
nop
iret
stos
jnp
inc
push
adc
ins
in
nop
sub
mov
int3
add
fwait
jmp
fimul
sub
popa
sbb
retf
xor
cmp
inc
sbb
adc
out
imul
(bad)
or
call
ja
dec
(bad)
popf
(bad)
aad
jnp
int3
or
(bad)
cmps
cmp
lods
fs
stos
mov
mov
inc
mov
or
je
cld
ins
stos
lahf
jecxz
js
mov
retf
or
sti
push
jnp
push
imul
imul
pop
pop
fs
mov
mov
mov
sub
(bad)
stos
mov
in
leave
push
sub
std
jns
add
loop
pop
mov
cld
(bad)
into
aaa
mov
push
sbb
sub
xor
or
or
enter
fnstsw
addr16
outs
fst
les
rcl
or
jae
jbe
cld
cmp
dec
xchg
ins
ja
sub
outs
ror
push
icebp
xchg
mov
xchg
(bad)
(bad)
fild
jmp
jp
inc
pop
add
adc
sbb
add
pusha
sbb
jge
and
mov
xchg
inc
sub
test
fmul
inc
mov
pop
test
pop
imul
popa
and
aaa
pop
mov
jmp
pop
mov
push
inc
fnstcw
jp
int3
and
pop
gs
shr
pop
sbb
xor
lock
retf
xchg
aas
adc
xor
lock
mov
cmp
lahf
adc
mov
jl
cmp
call
out
and
jmp
test
jecxz
sbb
add
scas
repnz
xor
cmp
(bad)
movs
rep
sbb
jg
inc
pop
inc
sbb
enter
enter
cwde
mov
test
xchg
xor
xchg
and
mov
fidivr
(bad)
call
push
sub
test
sbb
(bad)
repz
rsqrtps
cld
xchg
push
adc
xor
test
sbb
js
aaa
mov
dec
mov
xor
fld
call
movs
or
dec
icebp
cmp
mov
pop
ret
inc
movs
xlat
mov
xor
(bad)
daa
pop
int
repnz
pop
in
pop
(bad)
and
mov
iret
jns
sbb
dec
push
mov
xor
jmp
movs
push
(bad)
jno
shr
in
fs
pop
stos
push
cmp
push
adc
mov
mov
les
(bad)
and
sbb
pushf
aas
mov
add
loope
pop
(bad)
jmp
xor
jg
in
dec
pop
cmp
sbb
lahf
hlt
sub
addr16
cmp
popa
retf
in
(bad)
(bad)
dec
cmp
bound
sub
mov
dec
movs
psrlw
adc
out
jae
adc
stos
push
cli
and
ins
dec
mov
mov
jecxz
xor
xor
jbe
adc
or
adc
sbb
aad
in
add
pop
cmps
popf
clc
pop
push
pop
jmp
mov
adc
cmp
fdiv
int
mov
push
xor
push
xor
and
adc
xchg
mov
cmps
sub
mov
and
ror
test
jo
arpl
mov
aad
in
sub
sbb
call
hlt
call
cs
inc
inc
mov
ret
push
adc
ret
xor
jo
and
xchg
dec
sbb
leave
jl
push
loope
cmps
ja
shl
aas
or
inc
mov
or
dec
(bad)
pushf
and
add
mov
fimul
les
call
xchg
push
dec
jnp
dec
popa
add
dec
int
push
retf
icebp
mov
pop
clc
icebp
std
aas
pushf
mov
mov
scas
jg
cmps
call
cmps
jo
icebp
mov
xor
retf
ds
rol
cmc
dec
pop
fild
add
scas
pop
push
xor
mov
rcl
cmp
ja
jmp
pop
scas
sub
push
mov
mov
fadd
pop
imul
(bad)
mov
loop
pop
dec
ficom
inc
ficom
fdivr
js
in
fcomp
pop
jb
jp
or
jmp
jmp
sub
mov
dec
rcl
scas
adc
es
scas
push
in
push
aad
or
(bad)
(bad)
call
std
cmp
adc
(bad)
(bad)
aas
pop
call
sbb
scas
(bad)
scas
(bad)
enter
retf
push
iret
dec
inc
sti
das
xor
mov
inc
rol
mov
inc
into
mov
stos
jecxz
lea
pop
push
(bad)
cmp
xchg
out
call
xchg
sub
add
les
(bad)
push
lds
test
dec
mov
jo
xchg
rcl
mov
fwait
push
or
jmp
loope
pop
aaa
mov
inc
jne
sbb
rcr
ret
fmul
or
loope
mov
ins
call
rol
xlat
mov
mov
jle
adc
aas
jae
clc
stos
in
mov
lahf
fstp
cmps
dec
(bad)
loope
mov
jno
repz
push
hlt
jmp
and
pushf
arpl
add
jl
das
imul
(bad)
push
test
cli
rcr
push
call
adc
xchg
sahf
pop
add
sbb
leave
enter
retf
arpl
iret
mov
cld
nop
pop
xor
cdq
dec
bnd
les
xchg
xor
sahf
jge
push
mov
sbb
add
adc
test
mov
int
xor
outs
sub
enter
and
or
or
mov
add
pop
push
mov
pop
mov
sbb
fwait
hlt
loop
nop
(bad)
hlt
push
aaa
lock
iret
xor
fiadd
inc
int
fwait
mov
movs
mov
pop
in
jle
lods
add
adc
add
pop
xchg
jp
test
inc
pushf
int3
fmul
mov
mov
imul
mov
sub
pusha
jae
or
movs
ja
jmp
xchg
adc
jmp
(bad)
(bad)
(bad)
movs
fcom
mov
mov
add
(bad)
dec
inc
inc
sahf
push
in
imul
pop
inc
scas
out
bound
push
fidiv
pop
add
hlt
push
adc
clc
jmp
xor
jg
cmp
ret
mov
daa
inc
jmp
jns
ret
int
xchg
in
mov
push
ds
js
or
push
add
mov
xchg
mov
loope
xchg
cmc
adc
out
inc
ins
js
dec
add
pusha
dec
add
push
cwde
fisttp
cwde
jge
pop
push
ds
retf
sar
push
fdiv
xchg
and
retf
jecxz
jnp
jp
xor
jne
ror
cmp
sbb
cmps
shr
mov
scas
or
icebp
mov
test
jmp
and
sahf
inc
mov
lods
inc
test
pop
and
mov
ret
in
gs
push
adc
scas
iret
sub
fs
in
fldcw
mov
int
call
sbb
jp
iret
cmc
aas
sbb
ret
mov
out
dec
jno
inc
jne
sbb
loope
pop
je
push
cmps
dec
inc
cwde
ret
sub
aas
das
lock
(bad)
push
dec
leave
iret
jge
add
jmp
ror
sar
inc
pop
sub
movs
or
jmp
dec
mov
mov
test
jne
dec
and
(bad)
gs
mov
dec
fmul
dec
sub
sbb
sahf
xchg
pop
lods
imul
ins
mov
mov
int
adc
sub
lds
lods
idiv
sar
fsub
sahf
call
xchg
pop
xor
mov
mov
in
jg
sbb
daa
fcompp
jno
inc
xchg
in
retf
jnp
outs
ret
fs
jle
popf
cmc
xor
inc
loop
enter
idiv
xor
js
stos
mov
(bad)
iret
xchg
dec
sbb
inc
call
and
lea
adc
push
mov
fisttp
dec
mov
cmp
xchg
pop
pop
and
aas
fbld
sub
(bad)
push
or
sbb
or
call
pop
and
cmp
mov
aam
rcr
repz
(bad)
jge
bound
mov
adc
xchg
ja
mov
cmp
mov
outs
retf
fisttp
les
ss
add
sbb
adc
popa
cmp
sub
pop
cs
pop
ret
push
push
jo
mov
pusha
cmps
test
ins
fist
cmp
push
ret
inc
cdq
shr
xchg
repz
adc
push
cmps
test
jge
adc
jne
int3
leave
arpl
arpl
cmc
ficomp
mov
dec
jno
pop
mov
fcomip
mov
cmp
dec
outs
(bad)
mov
xchg
inc
popa
out
call
cmp
test
shr
push
mov
sbb
or
aad
out
mov
rcl
inc
addr16
int
sbb
arpl
jbe
mov
(bad)
fimul
xchg
push
mov
and
ret
popa
inc
xchg
iret
jge
ret
jle
ins
push
aad
sbb
mov
mov
sub
hlt
aad
sub
sbb
sub
jno
and
ret
retf
loopne
push
fidivr
retf
and
inc
sti
xchg
outs
jle
cdq
adc
or
mov
ins
out
stc
or
das
jl
or
shufps
shl
mov
mov
jnp
cmp
loope
mov
ins
mov
xchg
xor
jmp
sub
or
push
popa
out
aam
and
mov
loop
or
imul
xor
std
pop
pop
mov
fwait
(bad)
mov
ret
in
bound
xchg
dec
jmp
sbb
xchg
mov
je
xor
jb
xchg
std
xchg
jbe
sub
mov
pop
and
arpl
xchg
sbb
xchg
(bad)
imul
jo
ins
fs
xor
arpl
push
or
repz
fnstsw
into
adc
sub
repz
push
sub
push
fld
add
pop
sahf
ret
inc
add
lods
sub
jns
adc
rol
cdq
fdivr
dec
inc
fadd
nop
xor
clc
fnstsw
pop
jmp
stos
cmp
in
pop
cmc
cli
or
add
xchg
xor
aaa
stc
push
and
mov
adc
aaa
jg
ficom
cs
(bad)
mov
sub
dec
cmp
or
push
adc
or
pop
data16
call
sub
ss
loop
les
push
pusha
jge
sbb
out
xlat
dec
xchg
mov
call
and
adc
outs
push
push
ret
sti
(bad)
sub
jmp
sub
pop
add
aad
aaa
imul
add
adc
popf
sbb
(bad)
(bad)
and
cmps
adc
adc
xchg
aas
rcl
dec
addr16
jmp
push
xchg
mov
fld
out
imul
mov
outs
mov
mov
je
mov
inc
inc
xor
std
loope
xchg
fld
sbb
mov
test
js
fidiv
cli
or
sbb
sbb
xor
test
adc
(bad)
lods
add
and
push
and
daa
xchg
loope
dec
fcomp
and
data16
test
jae
movs
fs
shl
in
pop
int3
adc
clc
mov
test
adc
mov
(bad)
arpl
sbb
dec
in
ja
pop
mov
repz
fldcw
iret
es
fmul
mov
jecxz
xchg
mov
lods
(bad)
scas
push
dec
pop
jge
jmp
mov
(bad)
sub
aam
and
stos
inc
xchg
lods
cli
or
ret
and
rol
in
push
rcl
rcr
push
sub
jp
or
outs
std
ja
mov
push
scas
sub
xchg
mov
xlat
and
pop
out
fmul
ret
xor
push
add
stc
sahf
aas
sub
sub
xchg
mov
ret
push
aaa
and
fild
inc
and
mov
call
loope
sub
shl
nop
mov
les
add
xlat
push
cmps
test
jp
sub
sbb
inc
dec
repnz
es
stos
push
adc
(bad)
scas
pushf
xchg
cmp
clc
mov
popf
mov
and
xchg
lock
xor
xchg
xchg
loop
cmc
inc
xor
jg
ret
push
jae
stos
ret
sti
outs
stc
xchg
xor
sbb
xchg
cs
mov
cs
inc
ds
in
das
cmc
mov
addr16
mov
out
rcl
mov
daa
call
mov
scas
outs
mov
shl
test
and
ja
cmc
mov
add
mov
push
and
jmp
pop
(bad)
push
add
mov
sahf
push
mov
mov
lahf
add
xchg
jmp
cmp
xchg
sbb
jp
jp
(bad)
repnz
cmp
or
sbb
push
mov
cdq
test
and
push
cwde
xor
out
or
pop
hlt
pop
bound
fadd
adc
and
adc
pop
sti
dec
xor
adc
jo
inc
sbb
and
push
mov
hlt
call
mov
add
jno
(bad)
jle
xor
mov
sub
sti
mov
push
cmp
jne
aaa
sar
inc
cli
jbe
sbb
pusha
and
lea
mov
data16
add
fiadd
retf
xchg
fwait
mov
push
in
jne
xchg
iret
sbb
cmp
cli
cmps
in
fcom
fld
std
sti
popf
cli
scas
cmc
aam
out
pushf
cmp
cs
(bad)
push
pop
fimul
das
dec
popf
inc
pop
pop
add
jnp
mov
push
sub
cmp
mov
fsub
mov
nop
add
mov
std
mov
add
pushf
out
cli
mov
ins
popf
dec
sub
rcl
shr
ja
addr16
adc
sahf
mov
lahf
cmp
xchg
xchg
inc
jg
mov
loopne
xor
cs
jge
sub
fisubr
sar
jg
xchg
mov
stos
add
lods
jbe
inc
fld
fwait
cmp
cmp
mov
lahf
dec
(bad)
nop
jb
push
jmp
xor
sbb
adc
sub
xchg
cs
sub
lea
repnz
cli
scas
adc
pop
ja
pop
test
cs
adc
jg
sub
cmp
scas
xor
mov
push
fld
or
add
shl
retf
retf
call
loopne
cs
mov
jp
push
dec
push
ss
dec
sbb
mov
mov
inc
icebp
test
and
mov
mov
cli
push
jl
pop
dec
jae
popf
dec
lods
pop
sub
xlat
bound
shr
xchg
mov
ss
in
jle
fistp
addr16
sbb
(bad)
ss
inc
in
leave
(bad)
repz
jno
jp
xor
stos
js
ror
add
xchg
lods
ja
aas
cli
out
cmp
(bad)
mov
pushf
xor
mov
xchg
pop
out
inc
add
rol
dec
cli
sbb
mov
repz
or
dec
mov
pop
stos
mov
cmp
adc
mov
adc
shr
mov
cmp
out
or
dec
xchg
fdivr
mov
mov
mov
pushfw
adc
retf
sbb
lea
mov
pop
push
fbld
aam
inc
cmp
dec
mov
cmp
pop
(bad)
loopne
arpl
int3
outs
mov
push
fidivr
mov
adc
sti
loop
pop
dec
gs
cmc
lds
loopne
mov
xlat
mov
cmp
out
push
(bad)
jp
je
push
cmp
dec
pushf
(bad)
je
cmp
and
(bad)
mov
nop
push
mov
fcom
mov
mov
mov
(bad)
xchg
jle
dec
fsubr
push
call
sbb
ret
or
sar
test
mov
(bad)
mov
fsubr
ins
leave
xor
ja
and
out
(bad)
adc
(bad)
dec
mov
jge
inc
xor
xchg
mov
jle
ins
sub
dec
mov
xchg
iret
int3
int
mov
shl
cmps
jnp
xchg
mov
cmp
push
neg
push
pop
daa
cmp
daa
aad
push
sub
mov
stos
scas
adc
add
add
mov
ror
addr16
ret
ss
mov
loopne
sub
mov
xor
and
pop
mov
push
mov
xchg
adc
xacquire
jbe
inc
enter
fcomp
repnz
mov
or
or
aam
inc
push
fiadd
retf
mov
push
pop
or
add
in
xchg
ret
jp
retf
xor
jecxz
(bad)
xchg
and
mov
sbb
cmp
jno
push
ins
mov
dec
pop
lahf
pop
int
inc
push
jg
cdq
xchg
stos
dec
dec
pop
les
xchg
mov
into
bound
add
mov
xchg
ret
mov
fld
mov
sbb
movs
push
pop
popf
jb
mov
cmp
popa
loop
mov
test
push
mov
push
js
out
icebp
dec
push
pop
jge
xor
sub
clc
push
sub
or
or
adc
pop
push
mov
cmp
pop
retf
push
ret
test
push
sub
mov
movs
es
or
iret
outs
in
shl
out
scas
loope
scas
and
aad
mov
rcr
jnp
or
movs
in
or
fadd
push
jo
cdq
jge
mov
stos
xchg
xchg
mov
cli
dec
out
rol
fadd
sub
outs
xor
mov
enter
std
fs
sub
jg
jae
or
pushf
push
cmc
jb
xchg
pop
dec
or
jg
pop
enter
adc
ss
add
pop
lods
mov
(bad)
dec
fisttp
bound
or
cld
cwde
sbb
sbb
cmps
cmc
fs
sahf
loopne
xor
test
sar
mov
ret
mov
mov
adc
pop
into
xor
sub
bound
cmp
test
adc
rcr
adc
fs
call
sub
or
sbb
mov
sub
loopne
dec
call
mov
dec
push
and
pop
cmp
adc
stc
add
pop
pop
cmp
push
xor
shl
aad
mov
loop
pop
xchg
xor
add
cld
loope
popa
ret
std
mov
leave
and
fprem
loopne
test
repz
js
pop
pop
sbb
lahf
into
gs
dec
ret
out
pushf
call
pusha
mov
adc
xchg
add
bnd
into
sbb
in
out
cdq
push
sti
dec
push
mov
in
push
or
inc
mov
fs
jae
leave
int3
jecxz
push
mov
enter
stc
pusha
lea
or
mov
mov
jp
and
imul
aam
aad
adc
iret
punpckhbw
add
mov
xor
sub
and
and
cld
fld
cs
xchg
mov
cmp
xchg
jne
cmps
call
mov
pop
aas
pushf
call
cdq
rcl
les
xchg
jg
fldl2t
pop
ret
out
ins
jp
enter
push
in
inc
mov
int
dec
mov
push
dec
test
mov
jb
test
dec
and
add
jmp
in
inc
sbb
push
sub
call
mov
add
mov
cmp
xchg
(bad)
mov
clc
test
dec
and
loopne
inc
cmp
out
xor
or
add
(bad)
sub
add
cmp
std
(bad)
jo
icebp
adc
push
and
sub
mov
ins
xchg
xor
jnp
pcmpgtb
hlt
addr16
std
imul
fdivr
arpl
adc
mov
or
icebp
or
loop
adc
in
popf
dec
sbb
xor
nop
pop
cmp
out
pop
jle
add
mov
lods
movs
int
and
adc
test
inc
add
and
mov
xor
(bad)
scas
or
push
arpl
xchg
addr16
mov
fnstenv
sub
imul
loope
pop
sbb
xor
lds
mov
add
pop
add
imul
fldenv
jge
mov
outs
pop
dec
iret
clc
scas
inc
scas
jo
adc
inc
fcom
shl
xor
jae
push
adc
stos
stc
mov
cdq
movs
call
stos
mov
daa
xchg
rcl
lods
call
adc
or
aaa
jl
add
cmps
in
add
push
pop
sbb
inc
in
out
mov
sub
imul
jnp
cmps
retf
popa
mov
pmuludq
mov
xlat
adc
(bad)
mov
sub
in
lea
add
ds
sahf
fcomp
xchg
inc
loop
movs
shl
pop
mov
cmp
and
xchg
pusha
or
or
outs
test
ret
fs
add
(bad)
pop
mov
jae
sub
cli
idiv
arpl
daa
and
or
add
and
pavgw
mov
dec
inc
or
push
jbe
outs
popf
inc
test
jp
adc
inc
repnz
out
sti
imul
mov
sahf
dec
out
lods
retf
mov
cmp
stc
jmp
xchg
jns
into
push
ficomp
sar
add
(bad)
mov
clc
sub
aad
push
pop
jge
push
pop
retf
mov
(bad)
mov
in
jl
sar
and
ss
and
inc
icebp
pop
int3
inc
mov
nop
mov
clc
mov
shl
sbb
les
adc
cli
push
push
cmp
xchg
sbb
mov
mov
inc
jge
and
sub
mov
mov
sbb
jmp
dec
call
jnp
repnz
mov
aaa
adc
push
arpl
pop
cmc
push
repz
js
jg
jbe
jmp
or
shr
test
stc
mov
sbb
or
mov
inc
iret
or
scas
xor
call
cwde
hlt
fldcw
sub
push
mov
and
arpl
sbb
sahf
ret
push
movs
sub
mov
dec
shl
into
xchg
add
adc
or
xchg
sbb
add
sbb
cmp
mov
mov
jmp
or
cld
aaa
ja
lock
jmp
neg
lahf
jl
push
int3
hlt
xor
dec
push
cli
jns
push
sbb
(bad)
sbb
test
aaa
pop
cmp
mov
dec
xchg
ins
js
shl
cmc
out
xchg
(bad)
stc
iret
sub
sti
mov
pop
and
jb
mov
pop
jge
lods
ss
hlt
(bad)
mov
mov
mov
loop
jge
idiv
xor
sbb
(bad)
retf
fst
(bad)
cmp
jbe
and
mov
mov
mov
push
(bad)
jecxz
ja
in
mov
sbb
(bad)
out
dec
jnp
cmp
cmp
aam
fild
xor
sbb
pop
pusha
mov
call
dec
jno
(bad)
mul
loope
mov
les
test
sti
fidivr
adc
ror
scas
retf
(bad)
repz
xchg
arpl
pop
mov
xchg
xor
mov
popa
loope
add
cmp
and
ds
adc
repnz
out
mov
or
(bad)
nop
imul
pop
stos
mov
icebp
and
ja
(bad)
mov
mov
or
adc
mov
stos
lock
(bad)
push
(bad)
cmp
cmp
pop
outs
sbb
mov
jnp
sub
xchg
mov
ficomp
sub
into
aam
pop
ja
xor
xor
cwde
dec
pop
and
js
dec
in
lods
das
xor
stos
sbb
in
jg
pop
mov
adc
add
div
push
pop
mov
cmp
test
or
or
push
scas
sahf
mov
jbe
rol
loop
int3
bnd
pop
or
cmp
leave
xor
mov
dec
jae
adc
dec
call
ins
adc
fiadd
pop
or
pop
(bad)
adc
adc
ret
mov
nop
fdivr
(bad)
rcr
fidiv
arpl
daa
retf
sub
xor
mov
xchg
(bad)
lock
jmp
(bad)
sbb
mov
cmp
ds
adc
(bad)
out
jo
or
jnp
mov
mov
stos
cmp
jns
mov
and
loope
mov
cmps
xor
shl
pusha
mov
cmp
cs
test
addr16
mov
fwait
shr
ds
and
(bad)
call
push
shr
hlt
pusha
sub
mov
push
xchg
js
pop
fild
jmp
cmps
retf
mov
lds
sar
xchg
or
(bad)
fcmovne
and
add
std
sti
arpl
pop
xor
pop
sbb
js
xlat
rcl
xor
push
lds
pop
ss
jbe
ret
mov
xor
adc
idiv
(bad)
fistp
inc
popf
adc
and
or
loop
(bad)
in
dec
or
sbb
mov
js
enter
cmp
ds
mov
push
stc
sbb
call
jg
xchg
cmps
push
pop
mov
add
fdiv
fld
add
ins
and
int3
sub
mov
enter
mov
iret
jbe
out
les
cmp
in
cmp
adc
mov
push
xchg
stos
je
(bad)
int3
push
inc
cmp
pminsw
inc
jl
push
xchg
lea
pusha
sbb
jno
xor
repnz
ins
retf
and
cmp
xchg
iret
adc
inc
aam
adc
cwde
bound
xor
mov
dec
xchg
push
lea
lds
jae
jg
popa
loop
shl
lods
dec
pop
stos
mov
out
ret
mov
stc
add
mov
sub
fstp
mov
mov
xchg
call
fisttp
lea
popa
fmul
(bad)
or
jo
call
mov
push
sti
xchg
cmps
inc
mov
mov
push
xor
inc
xchg
mov
pop
aaa
call
xchg
lock
xchg
fwait
push
test
pop
leave
mov
pop
mov
clc
movs
lods
mov
push
cmp
pop
into
ds
hlt
retf
mov
cmps
adc
mov
fs
mov
scas
mov
inc
scas
inc
inc
iret
jb
mov
(bad)
outs
scas
mov
cmp
sar
pop
mov
dec
shl
loop
mov
cmp
push
dec
mov
lahf
xor
jns
dec
adc
jo
retf
push
leave
in
cmps
jmp
xchg
ins
jne
xor
les
loop
mov
pop
les
pop
sbb
mov
add
xlat
(bad)
nop
ja
pop
test
aaa
cmps
repnz
mov
gs
push
lahf
sub
add
nop
push
sub
(bad)
ja
mov
inc
jmp
dec
mov
nop
sub
mov
xor
cmp
dec
in
pop
fcmovne
imul
lods
xor
imul
fistp
popf
sahf
xchg
push
xchg
cmp
lods
call
dec
mov
nop
cmp
sbb
cmp
mov
dec
popa
aaa
inc
out
rcr
cmp
loopne
inc
test
xchg
cmp
mov
aaa
mov
xchg
scas
cli
add
or
cmp
push
daa
xchg
mov
inc
lods
adc
jmp
fdiv
push
pop
idiv
mov
pop
xor
xchg
stos
enter
mov
stc
cmp
mov
mov
rcl
imul
stos
loopne
movs
xlat
and
popa
stos
mov
pusha
lods
adc
push
pushf
inc
add
or
push
repnz
loope
xor
dec
bswap
dec
add
inc
mov
js
cmp
retf
xor
addr16
push
cmps
ins
sbb
cld
fcomp
xor
jb
or
shl
add
ds
scas
mov
jns
jl
imul
adc
xor
addr16
pusha
or
cmp
mov
ret
push
jmp
lock
lock
dec
inc
(bad)
fcom
cmp
enter
mov
jl
mov
push
jae
mov
sub
mov
push
stc
loope
mov
imul
cld
mov
fisubr
mov
pop
mov
push
push
mov
cld
jb
rol
sub
lock
mov
into
mov
mov
and
retf
push
hlt
mov
mov
sar
jg
ret
mov
test
enter
mov
iret
out
jmp
adc
mov
cdq
xor
imul
jl
leave
pop
cmc
jbe
jl
(bad)
cmps
cld
dec
retf
lock
mov
and
xchg
stc
ins
jns
lock
mov
(bad)
fdiv
retf
aaa
or
inc
fst
inc
jbe
inc
fist
pop
add
push
mov
stos
stos
push
mov
sbb
mov
adc
sub
push
push
cmps
and
clc
leave
ds
push
sahf
mov
xchg
es
enter
aaa
stc
cld
ins
ret
mov
lea
aas
sbb
sbb
push
pushf
inc
cdq
inc
or
int
fidivr
ja
stos
or
mov
mov
loopne
xchg
sub
push
sub
cwde
iret
fst
ins
fcom
mov
mov
xor
std
pop
outs
ins
fxch
ds
into
js
rcr
mov
xor
inc
push
sti
(bad)
cmp
sbb
rol
cmps
movs
mul
es
fwait
mov
ror
rcr
pop
sar
dec
loopne
pop
jecxz
inc
pusha
jmp
xchg
in
jns
out
stos
shl
fild
adc
movs
push
jno
daa
hlt
lods
push
and
mov
mov
fldenv
movs
push
ins
sbb
inc
xchg
iret
sub
dec
and
sbb
pop
movs
pop
xchg
das
fist
sbb
push
xchg
jmp
mov
xchg
adc
add
mov
and
(bad)
mov
ja
jmp
mov
or
cld
inc
outs
cwde
cmp
wrmsr
mov
xor
cs
std
addr16
cmp
fidiv
pop
sbb
psubw
sub
ret
in
rcr
lock
imul
call
sub
stc
fcom
push
cmps
xchg
sar
sbb
push
stc
inc
in
push
jecxz
pushf
inc
sti
add
arpl
fiadd
ret
sar
lds
jno
pop
es
(bad)
push
lods
(bad)
cld
(bad)
mov
out
xlat
lods
push
imul
adc
loop
rcr
xchg
mov
aam
shr
fldcw
fwait
push
mov
cmps
out
call
mov
jnp
cld
shr
ficom
add
pop
mov
fcom
adc
lds
add
addr16
arpl
jl
test
aad
xor
pop
int
lea
jle
jb
test
iret
(bad)
push
mov
add
fsubr
pop
(bad)
call
fs
inc
daa
(bad)
enter
sbb
cmps
rcl
pop
xchg
lock
mov
icebp
jae
and
jle
dec
test
inc
(bad)
call
pop
inc
cmp
cmc
dec
rol
xchg
jmp
cmp
imul
inc
and
jge
fcomp
jmp
push
jmp
out
cmp
cli
arpl
sahf
loope
inc
jl
popa
mov
out
mov
jmp
hlt
xchg
dec
adc
add
dec
pop
inc
pop
movs
ret
and
retf
xchg
xor
test
fs
xor
sbb
(bad)
mov
or
leave
retf
lods
adc
shl
test
fisttp
clc
cld
arpl
jno
pushf
retf
loopne
cmp
fsub
sbb
push
inc
shl
repz
mov
add
lahf
xchg
ror
cmp
and
neg
dec
mov
push
inc
test
dec
xor
cmp
int
in
(bad)
xchg
inc
loop
jno
push
xchg
cmps
sub
je
jo
adc
mov
into
xor
and
push
aad
daa
retf
gs
scas
lods
fwait
in
cdq
rol
push
push
repz
sbb
aam
(bad)
xchg
inc
sub
test
xor
xchg
push
dec
mov
je
pop
imul
mov
xor
jg
loop
es
lods
cmps
ret
(bad)
cli
sbb
add
std
pop
pop
xor
fdivr
in
jmp
call
imul
cmps
xchg
push
cmp
paddsw
fld
shr
jae
shr
mov
pop
adc
inc
add
ror
cmp
repnz
lea
push
test
adc
out
xor
into
jmp
push
mov
sar
mov
ds
or
or
jmp
stos
or
xor
xchg
dec
out
mov
xchg
dec
adc
test
pop
cld
icebp
or
mov
mov
sub
mov
in
xchg
mov
shr
icebp
ds
sub
jl
push
cmp
imul
xlat
mov
adc
push
loopne
hlt
sbb
fidivr
mov
xchg
outs
popa
mov
push
xchg
test
repnz
or
jmp
es
add
xchg
and
fild
in
out
clts
push
hlt
popf
lods
mov
mov
test
pop
(bad)
ret
jae
rol
push
scas
stos
mov
lea
sbb
jmpw
das
sbb
and
ja
push
scas
sbb
loopne
out
mov
call
pop
fwait
loop
aas
xchg
or
sbb
cld
mov
sub
test
outs
nop
xchg
xor
lods
shl
iret
test
push
mov
rcl
imul
jne
aaa
xor
fwait
pushf
push
(bad)
dec
xor
jp
nop
pop
push
pop
jmp
jge
sub
jg
or
push
jbe
xchg
adc
xchg
xor
jecxz
xchg
jo
ror
div
mov
mov
adc
adc
inc
adc
mov
sbb
out
sahf
mov
out
sbb
mov
xchg
cmps
inc
xchg
adc
xor
int3
push
retf
mov
jecxz
lea
arpl
sbb
pop
lods
push
adc
adc
das
or
xchg
inc
or
pop
movs
jp
lock
or
enter
leave
cs
(bad)
jmp
mov
dec
rcl
xor
loopne
xchg
push
inc
hlt
inc
xor
jo
push
xor
call
ds
mov
cmps
(bad)
enter
retf
and
push
push
fnsave
loopne
inc
jnp
into
ins
daa
sar
les
jmp
add
push
ja
xor
mov
inc
addr16
neg
std
inc
xor
mov
ss
or
div
push
or
dec
repnz
cmp
fadd
or
cmps
fcomp
shr
mov
pusha
aas
(bad)
mov
cmc
push
jecxz
rcr
inc
movs
or
jnp
movs
std
bound
cmp
mov
das
aad
pushf
sub
mov
ja
jp
aam
mov
cmps
sbb
das
push
mov
popa
es
pop
push
scas
test
pop
lods
jge
jecxz
mov
dec
out
out
and
mov
hlt
imul
dec
std
lahf
inc
sahf
ds
or
mov
ss
std
and
jne
call
lods
imul
shl
jl
ret
repz
aam
out
cmp
xor
out
fadd
xor
test
(bad)
aaa
js
inc
lea
inc
or
mov
cmp
inc
cdq
mov
dec
scas
(bad)
rcr
jns
push
pop
and
jmp
sub
lods
mov
ja
xor
jge
rol
and
add
stos
pushf
stc
leave
xor
retf
test
push
and
es
cmp
test
fiadd
std
pop
scas
pop
pusha
cli
adc
fidiv
retf
fld
mov
aas
bound
movs
sbb
(bad)
test
push
es
push
push
mov
imul
sub
mov
or
inc
movs
pop
test
nop
stc
or
adc
outs
int
loop
mov
lods
loope
in
fist
lods
fbld
push
enter
mov
dec
jmp
jge
jp
pop
aaa
mov
rcl
adc
test
pop
out
and
leave
imul
pushf
push
pop
cmp
fsubr
adc
cmp
dec
enter
add
dec
and
(bad)
push
(bad)
mov
push
movs
push
jp
fwait
xchg
jo
or
mov
shl
or
in
adc
aam
sub
and
or
adc
xchg
movs
pop
cmc
or
add
add
data16
cld
out
jns
loop
add
pop
nop
or
push
jno
aad
pop
int3
stos
fwait
arpl
inc
js
pop
sbb
dec
aad
lea
pop
adc
data16
xchg
ret
sbb
imul
or
scas
xor
out
xchg
popf
jnp
out
sub
xor
jmp
in
in
gs
das
cwde
add
out
data16
jno
or
lods
shr
cmc
jno
(bad)
sub
xchg
sahf
mov
push
stos
int3
xchg
mov
iret
daa
sub
push
or
ret
test
dec
fwait
cs
mov
aad
shl
imul
adc
ins
iret
ins
add
mov
mov
mov
pusha
pop
bnd
(bad)
push
pop
add
out
add
std
cmp
std
aas
xor
dec
add
mov
in
jge
popf
cmp
cmp
push
out
jbe
rcr
add
mov
ins
xor
mov
mov
push
cmps
(bad)
mov
inc
dec
inc
wrmsr
aad
push
pop
pop
adc
fild
sub
sub
or
test
and
fs
jmp
ss
rol
add
cmc
jno
jno
imul
dec
pop
mov
mov
ins
mov
bound
sar
sbb
jge
lahf
mov
and
paddq
mov
dec
retf
out
stc
std
addr16
add
jne
dec
pusha
test
stos
test
cmp
cmps
adc
adc
adc
inc
mov
(bad)
(bad)
sbb
push
inc
enter
or
xor
xor
or
xor
pop
mov
mov
addr16
xchg
mov
dec
lea
sahf
movs
or
je
(bad)
sub
scas
xor
dec
cdq
test
mov
hlt
div
fs
pop
dec
dec
cdq
and
xchg
je
mov
jae
(bad)
std
mov
ror
fiadd
sub
xor
int
mov
push
xchg
push
xor
push
cld
call
cli
cdq
cmp
fisub
dec
jo
aam
and
inc
clc
test
pop
fwait
popf
or
icebp
xchg
stos
aad
into
push
fstp
outs
sbb
stc
fwait
popa
scas
pop
xchg
sbb
sar
and
or
sbb
popa
scas
pop
mov
add
cmp
cmp
repnz
test
mov
fist
aad
mov
loop
dec
std
int3
mov
icebp
add
xchg
dec
and
sbb
adc
idiv
mov
jl
mov
xchg
and
aaa
sub
arpl
test
test
pusha
sub
pop
cmp
rcr
push
xor
or
(bad)
rol
std
mov
and
stos
or
dec
adc
cmp
adc
outs
cmc
sti
pop
dec
xor
shl
dec
inc
xchg
jns
xchg
and
and
stos
mov
sub
into
jno
or
out
inc
imul
paddsw
ins
mov
jg
xchg
or
add
fdiv
and
dec
dec
into
ret
leave
scas
pushf
mov
sub
mov
pop
scas
jmp
xchg
lods
dec
add
in
leave
(bad)
mov
sbb
push
scas
lods
jmp
jb
cmp
mov
mov
sahf
imul
cmp
push
inc
mov
mov
jg
ja
mov
sbb
shl
mov
mov
fist
nop
pcmpeqw
int3
mov
dec
data16
mov
add
outs
mov
stc
punpckldq
xchg
pop
test
xor
xor
mov
and
and
in
xchg
sbb
xor
xchg
sar
sub
fistp
mov
fs
push
ret
ss
sub
adc
das
cmp
jb
cmp
sub
fisub
out
lahf
out
jne
call
mov
adc
jge
and
xor
xchg
lea
inc
mov
sbb
call
or
mov
inc
inc
xor
xor
iret
or
sti
ror
mov
jmp
adc
fwait
mov
dec
or
repnz
movs
lods
les
imul
arpl
mov
mov
(bad)
sahf
jbe
xor
mov
sbb
addr16
jmp
shr
lock
in
adc
mov
aad
outs
mov
sub
jae
pop
repnz
shr
add
mov
pushf
rol
push
jmp
xchg
dec
aad
jg
in
inc
or
ret
mov
arpl
int
jecxz
(bad)
arpl
ret
ds
out
sti
mov
and
(bad)
jp
xor
sti
xor
mov
jmp
xchg
icebp
inc
push
adc
pop
(bad)
cmp
cmps
cmp
adc
inc
cli
jmp
stos
lea
ins
pop
inc
and
jle
mov
push
loope
cmc
dec
mov
push
mov
add
adc
add
call
pop
(bad)
push
and
lock
(bad)
ins
pop
mov
fst
push
mov
add
inc
scas
mov
mov
retf
add
xchg
adc
les
in
push
into
mov
inc
rol
ins
loope
jp
ret
adc
mov
and
or
push
mov
ins
fld
push
jae
push
cmp
push
dec
mov
dec
cli
add
cld
ds
ds
inc
or
xor
mov
ret
xor
pop
popf
es
or
mov
and
push
pop
mov
pop
test
movs
into
and
mov
arpl
xchg
mov
push
pop
jo
adc
inc
adc
(bad)
(bad)
sahf
outs
dec
mov
fstp
or
xchg
nop
fstp
mov
pop
mov
push
and
xor
je
pusha
mov
xor
lds
ss
rol
sub
pop
add
and
nop
jne
mul
sub
cmp
pop
and
sub
aas
xlat
loopne
pop
xor
fst
xchg
pop
inc
mov
rol
cmp
and
test
add
lock
nop
push
shl
inc
(bad)
imul
test
rol
cli
mov
ret
cwde
mov
ins
xor
mov
jns
pop
dec
dec
out
not
(bad)
jmp
xor
mov
inc
adc
pavgb
mov
dec
mov
iret
mov
mov
pop
leave
pop
jge
xlat
push
pushf
sub
dec
int3
sbb
dec
add
dec
(bad)
inc
lods
test
ins
ret
ror
lahf
aas
dec
push
stos
xchg
mov
push
or
mov
retf
scas
cmp
cmp
retf
or
call
mov
mov
in
aam
ss
arpl
xor
push
std
sbb
call
repz
push
shl
call
js
mov
imul
or
mov
data16
sbb
push
int
test
mov
mov
call
xlat
push
into
aas
jmp
push
cmps
sub
dec
push
pop
addr16
cmp
sub
and
jns
(bad)
jp
es
or
adc
stc
imul
lahf
retf
in
call
fxch
fidivr
test
(bad)
daa
stos
jg
fdiv
out
aaa
hlt
jmp
xchg
out
push
outs
or
mov
add
adc
sbb
inc
stc
inc
push
mov
stos
push
shr
popf
fucomp
out
fcmovb
cmp
push
into
mov
cmp
lods
xchg
ret
xchg
repnz
pop
lods
xor
sub
out
sub
(bad)
loope
das
arpl
out
mov
sbb
cdq
jge
dec
(bad)
ins
inc
jnp
or
shr
xchg
cs
dec
ud1
inc
in
cmp
mov
(bad)
mov
mov
sub
ss
out
jmp
adc
fstp
loop
and
(bad)
cmc
mov
pop
mov
nop
sbb
loopne
sbb
cmp
pop
and
es
popa
rcr
add
push
dec
push
in
xor
inc
push
pop
mov
mov
rol
adc
add
inc
push
mov
xchg
jnp
push
mov
popa
sub
jl
xor
or
std
and
out
stos
push
jmp
sar
adc
(bad)
test
adc
push
dec
adc
or
call
mov
xor
adc
retf
in
mov
gs
push
adc
js
cmps
bound
scas
repz
xor
cmp
retf
dec
jmp
push
inc
xor
sbb
scas
add
xchg
ins
xor
xchg
dec
pop
xchg
or
out
push
mov
lahf
sbb
movs
les
call
dec
cmovbe
fwait
xchg
xor
add
pop
cmc
mov
cmc
mov
inc
sbb
or
lea
adc
ins
rol
inc
and
dec
test
test
add
jp
(bad)
adc
mul
cmp
mov
imul
lahf
add
std
(bad)
fcomp
and
out
fisubr
fwait
mov
jle
mov
mov
pop
shr
(bad)
mov
stos
or
xlat
or
add
lds
xor
mov
fdiv
fnsave
lahf
(bad)
pop
add
inc
push
ja
mov
sahf
adc
cmp
adc
test
sar
mov
call
xor
cmp
and
cmp
mov
mov
popa
and
mov
lahf
fbstp
adc
jle
test
sub
mov
inc
and
push
mov
cli
imul
in
fwait
rol
div
or
std
jae
adc
(bad)
pop
mov
push
in
push
ds
xor
cmps
dec
fisub
mov
jmp
jnp
jno
xlat
xchg
mov
cs
and
add
dec
xchg
pop
aaa
not
pop
xchg
sub
lds
xor
cmc
bound
enter
sub
test
add
sbb
dec
jbe
dec
pop
cdq
mov
mov
je
or
lds
in
mov
xchg
pop
(bad)
push
hlt
jle
jnp
adc
push
enter
push
fidiv
adc
or
adc
clc
mov
adc
xor
mov
fwait
pop
and
sub
popa
xor
jns
retf
pop
loopne
push
jns
std
scas
loop
cmp
test
loop
neg
xor
pop
jmp
scas
cmc
shr
mov
adc
call
adc
pop
dec
adc
lahf
sub
fwait
push
stos
pushf
inc
(bad)
out
in
cld
nop
mov
jecxz
outs
xor
aam
loope
mov
jl
adc
out
dec
xchg
cs
ins
(bad)
rcl
pop
fwait
dec
sub
enter
sbb
mov
mov
icebp
or
(bad)
sbb
repz
adc
mov
mov
in
add
pop
add
inc
push
jbe
mov
and
lods
movs
ins
call
cs
shr
jmp
xchg
add
sti
cmc
mov
adc
lds
jae
or
loop
fidiv
gs
imul
jo
jnp
in
xchg
lea
jmp
sub
(bad)
mov
adc
sahf
push
sub
dec
cmp
or
add
call
repnz
rcr
push
inc
movs
(bad)
jp
jmp
scas
jno
and
mov
out
loope
xchg
and
ja
int3
jbe
jge
add
push
xor
adc
hlt
push
stos
scas
dec
(bad)
pop
mov
ja
fcomp
in
test
adc
xchg
aam
dec
xchg
aam
sub
ins
mov
mov
rol
xchg
int
xor
adc
mov
(bad)
addr16
push
push
sbb
sti
js
sub
xchg
lock
jmp
inc
fistp
push
pop
inc
add
cmc
or
fsub
ror
call
push
inc
inc
je
sub
mov
mov
scas
xor
fst
ret
rcl
mov
cmp
bound
movs
push
aas
hlt
pop
jecxz
js
cdq
fstp
mov
and
clc
push
sahf
out
pop
ret
ja
cmp
clc
xchg
daa
mov
pop
pop
inc
jae
xchg
xchg
sub
nop
aad
mov
js
outs
sub
mov
xlat
or
mov
retf
daa
mov
jb
mov
jecxz
jmp
pop
sbb
iret
std
mov
hlt
lock
mov
mov
xchg
call
movs
rcl
(bad)
aaa
movs
out
xchg
ror
ds
(bad)
loopne
inc
(bad)
aaa
sbb
mov
fcomp
mov
out
cmp
xor
mov
xor
div
call
push
out
mov
lea
test
jmp
test
pop
into
jmp
and
fild
xor
sub
mov
pop
jns
xor
add
jae
addr16
cdq
dec
pop
ror
pop
pusha
mov
push
push
stos
jmp
dec
mov
leave
and
ins
mov
add
sub
stos
hlt
cmp
arpl
push
in
rcl
out
out
jl
jmp
inc
je
push
xor
xor
xchg
or
(bad)
and
jmp
cmp
daa
pop
xchg
inc
test
pop
sti
enter
aad
push
mov
imul
xor
sbb
mov
push
test
stos
sub
sbb
test
arpl
outs
xchg
cwde
loop
or
sbb
jl
(bad)
call
or
lods
imul
ffreep
push
imul
or
loopne
push
jmp
arpl
lods
lock
cli
inc
loope
test
add
inc
movs
push
outs
imul
mov
pop
pop
int3
ds
sub
pusha
sbb
xchg
xchg
or
dec
imul
or
shr
mov
into
xchg
fsin
mov
sub
fadd
or
nop
or
popa
mov
push
sub
sbb
les
inc
or
ds
inc
mov
sub
leave
sahf
push
lods
cmps
scas
ret
xchg
add
xor
dec
mov
mov
outs
fwait
jbe
mov
sti
int3
enter
mov
jo
mov
fabs
pop
dec
bound
cdq
popf
fistp
mov
push
hlt
ins
mov
(bad)
fdiv
leave
jmp
or
mov
call
cwde
and
mov
aaa
push
xchg
arpl
lea
push
xchg
xor
(bad)
push
outs
out
ret
inc
pop
add
out
push
mov
test
pop
dec
pusha
dec
enter
cmp
gs
fisubr
mov
lock
add
xchg
aad
jnp
pop
jae
push
push
jae
cmps
retf
sub
jl
cmp
ret
dec
ret
fimul
daa
pop
pushf
xchg
push
sub
xchg
lods
icebp
aas
ins
fxch
sub
out
inc
retf
(bad)
jl
int
(bad)
xor
ror
scas
out
repnz
push
out
mov
gs
imul
push
mov
and
ret
into
je
jae
jno
fldenv
or
jae
(bad)
adc
pop
jne
and
(bad)
pop
adc
out
cwde
pop
pop
stos
mov
ja
mov
fimul
add
mov
xchg
sbb
inc
jge
stos
aad
pop
jbe
jmp
cli
sub
(bad)
pusha
aam
inc
dec
out
push
xor
inc
xchg
js
sbb
add
out
mov
pushf
jl
call
inc
jl
or
push
(bad)
cld
mov
pop
rcl
pop
iret
fcomi
or
cmc
add
ficom
push
add
mov
inc
es
lock
sbb
popf
sbb
cs
xor
mov
js
(bad)
pop
mov
adc
std
mov
in
out
mov
rcl
pop
clc
(bad)
out
jno
and
dec
daa
jb
jp
rcr
sbb
scas
xchg
ficomp
xchg
mov
xor
mov
lods
and
or
les
mov
or
cmps
and
adc
nop
in
push
mov
outs
mov
jb
push
inc
in
in
cmp
neg
(bad)
retf
outs
jns
loop
jns
cmp
nop
mov
test
add
scas
mov
pop
(bad)
scas
mov
gs
mov
(bad)
pop
mov
cmp
push
(bad)
cdq
fnclex
scas
and
(bad)
xchg
into
dec
icebp
cmp
inc
mov
push
cdq
fbld
test
ins
xor
cmp
lods
dec
movs
cmp
push
xor
inc
adc
hlt
retf
cmc
mov
outs
out
or
jge
mov
shl
jle
jbe
or
(bad)
jmp
in
and
aaa
mov
repnz
xchg
jmp
push
rol
mov
jmp
cwde
(bad)
cmps
sahf
adc
or
adc
(bad)
int
jmp
out
rol
mov
scas
in
add
stos
ins
and
or
(bad)
dec
daa
dec
in
loop
mov
in
inc
push
mov
stc
fisubr
int3
nop
out
xor
daa
sbb
cdq
jmp
pop
xchg
push
dec
pop
test
dec
mov
pop
jbe
push
mov
ficomp
jl
aaa
push
ficomp
pusha
stc
test
push
add
mov
xchg
mov
test
icebp
dec
enter
dec
add
push
fdivp
jnp
call
push
sti
jmp
and
add
sahf
fs
fcmovnbe
inc
mov
inc
push
push
movs
out
jle
sahf
inc
inc
xchg
nop
int
cld
ss
mov
xchg
xor
pusha
xor
int3
das
inc
push
cld
call
cwde
mov
mov
xchg
inc
sti
ret
loopne
nop
icebp
pop
inc
jo
das
retf
xchg
leave
or
fcom
mov
dec
jg
(bad)
in
mov
sub
in
xor
jle
in
lahf
push
pop
aam
inc
mov
das
daa
(bad)
in
call
or
fimul
mov
dec
loopne
int
mov
inc
xchg
mov
dec
clc
add
cdq
adc
nop
xor
stos
mov
pusha
mov
ins
ds
jl
xor
jne
jns
jbe
inc
pop
add
imul
mov
adc
loop
jp
xchg
lds
inc
loopne
mov
cdq
xor
mov
in
ins
jecxz
mov
mov
cdq
test
jp
adc
fwait
or
fnsave
inc
cmp
fcomp
pop
dec
enter
cmp
push
pop
mov
icebp
sar
idiv
dec
repnz
dec
adc
sub
jno
jl
pop
pop
adc
push
sti
sti
adc
xor
inc
mov
sbb
add
or
int3
dec
or
jb
inc
arpl
cmc
inc
xor
xchg
pop
pop
pop
fld
push
adc
outs
pop
dec
loopne
xor
mov
aad
ds
mov
out
xchg
(bad)
jle
xchg
push
gs
stos
sub
cwde
pop
clc
xchg
(bad)
call
dec
jecxz
mov
sar
mov
repz
out
cmps
mov
int3
movs
xchg
jns
xchg
repz
xchg
sub
je
pop
push
mov
xchg
mov
hlt
mov
mov
cdq
aam
dec
loopne
arpl
jne
les
daa
jl
aas
mov
out
mov
jnp
clc
jno
aaa
xchg
sub
cmp
inc
retf
inc
push
or
xchg
repz
mov
stos
or
pop
test
mov
das
stos
lea
jno
mov
ficom
xor
pop
mov
int3
xchg
ror
mov
scas
mov
xlat
in
(bad)
sub
daa
ret
inc
lods
jmp
clc
movs
aam
ds
shl
fst
nop
cmp
inc
ret
inc
inc
push
cwde
out
aam
mov
es
jae
pop
push
pop
sbb
fstp
and
in
inc
outs
fwait
dec
xchg
push
adc
aaa
aad
test
loop
sub
inc
cmps
or
push
lahf
or
clc
pop
push
leave
add
sub
retf
pop
add
jl
jp
test
xchg
and
push
mov
test
aad
pop
movs
leave
ja
arpl
fyl2x
gs
jbe
ins
fiadd
loope
sub
ja
jno
fwait
movs
mov
jmp
lahf
and
iret
jbe
mov
jo
inc
repz
jle
mov
pushf
xchg
adc
mov
sbb
jb
lea
sbb
jge
mov
outs
lods
or
iret
or
inc
ins
test
test
out
mov
mov
inc
rcr
add
in
cdq
jns
leave
movs
ins
pop
(bad)
test
icebp
shl
ja
pop
jge
and
fild
xchg
dec
sub
lahf
js
outs
add
gs
xor
test
mul
ins
mov
push
pop
cmp
inc
test
mov
clc
push
lock
add
jp
imul
lea
xchg
xchg
sub
(bad)
and
(bad)
mov
sub
dec
loopne
sti
pop
das
or
cmp
imul
cmp
ret
jmp
and
jbe
xor
adc
adc
inc
xor
into
sti
call
or
js
fdiv
or
aas
push
dec
xor
scas
shl
mov
pop
out
push
cmp
mov
add
aas
retf
aad
push
pop
(bad)
pop
ja
ret
cdq
or
inc
adc
mov
mov
loope
push
xchg
mov
adc
jmp
mov
xchg
xor
ja
es
push
sub
mov
sub
pop
aam
mov
sub
outs
xor
xchg
je
xlat
jge
outs
mov
cdq
nop
lods
mov
dec
(bad)
sqrtps
daa
sbb
mov
push
lea
jl
iret
ret
stos
cmps
pop
das
mov
rol
dec
and
fisub
jge
jns
jg
xlat
push
addr16
adc
push
cmp
out
sbb
aaa
sbb
gs
sub
mov
jmp
push
lds
dec
push
cli
lods
fisub
sub
or
jns
inc
dec
cmp
and
pushf
bound
inc
xlat
xor
(bad)
xor
sub
adc
push
jmp
mov
test
or
xor
scas
xor
test
jle
bound
push
jb
rcl
or
jae
mov
test
cmps
mov
gs
add
int
adc
cwde
std
pop
scas
ss
mov
sub
lods
nop
jo
sub
(bad)
int
daa
ins
jne
(bad)
imul
jle
or
mov
adc
idiv
jl
pop
stc
stc
(bad)
and
xor
test
inc
scas
or
cmp
jg
adc
retf
xchg
mov
stc
sub
vpshufhw
adc
scas
outs
aad
jg
pusha
ficom
cwde
mov
or
and
dec
scas
test
jne
inc
or
jmp
xlat
lock
and
push
adc
hlt
js
sahf
dec
cdq
mov
mov
jl
inc
fbld
adc
pop
popf
push
sub
or
popa
(bad)
fadd
fsubr
or
sahf
repz
jae
pop
popf
add
jecxz
dec
adc
cmp
in
movs
fisub
arpl
push
mov
in
jae
std
dec
jbe
adc
jbe
jmp
cmp
jg
(bad)
jb
mov
rcl
hlt
sbb
out
push
aas
outs
loope
(bad)
cmp
data16
xlat
inc
std
sbb
mov
xchg
retf
outs
lahf
pop
loop
scas
inc
jo
xchg
rol
aas
(bad)
cmp
sub
lock
push
mov
sbb
aaa
sub
pop
xchg
push
inc
xor
stos
dec
jecxz
xchg
ss
std
test
nop
add
fmul
sbb
cli
dec
xchg
xor
push
cli
mov
sbb
xchg
sub
enter
dec
mov
pop
daa
dec
stc
sbb
ret
push
inc
rcl
lock
imul
movs
scas
pop
pop
sub
out
sbb
or
aam
xchg
mov
push
int
fstp
retf
mov
js
sti
sub
ficomp
xchg
std
loop
sbb
fwait
movs
add
out
inc
pop
push
test
sbb
jmp
test
leave
mov
xor
icebp
pop
xor
fdivr
xchg
jecxz
jmp
aas
fs
xchg
loop
outs
and
adc
xchg
retf
aaa
shl
or
dec
pop
adc
xor
cmp
push
test
(bad)
outs
xchg
cdq
jge
popa
inc
or
dec
jmp
hlt
iret
loope
mov
fidivr
in
movaps
or
rol
shr
push
sbb
ja
jmp
fnstsw
or
std
es
in
or
pop
jnp
mov
sbb
cmc
or
inc
int
jecxz
fdiv
out
mov
sbb
dec
and
sbb
sub
enter
out
sbb
imul
cmc
mov
push
sahf
or
or
jnp
push
nop
push
loope
pop
mov
ins
adc
test
pop
mov
or
sar
mov
inc
pop
jno
pop
and
pop
into
(bad)
popf
ret
jno
outs
pop
mov
jle
aas
pop
mov
and
iret
nop
cld
sti
push
aad
push
mov
rcr
jmp
ror
loopne
sub
mov
mov
imul
rol
fistp
rol
adc
jg
aam
push
dec
ja
ret
and
mov
rcr
dec
vpunpckhdq
mov
sbb
dec
mov
sbb
xchg
xlat
or
mov
js
add
loope
xor
mov
imul
aas
xor
pop
xchg
sbb
jmp
inc
and
or
out
js
aad
imul
dec
jo
mov
xlat
xchg
cmc
nop
repnz
jle
and
jmp
xchg
mov
mov
leave
pop
dec
in
aam
jne
js
push
inc
pop
mov
stc
or
pop
xchg
rol
pop
inc
cmp
mov
js
mov
add
jne
push
mov
dec
jnp
pop
cmp
or
stc
int3
retf
out
scas
out
jle
outs
mov
sbb
and
fldcw
pop
mov
jp
add
pushf
xor
scas
xchg
ds
pop
cwde
ja
sar
jb
xlat
lods
sahf
repz
mov
mov
xor
and
push
(bad)
shl
and
sub
push
leave
hlt
pop
dec
lods
xchg
std
sub
pcmpgtw
(bad)
mov
dec
jno
adc
or
hlt
jp
sbb
neg
push
adc
push
sti
add
outs
jne
ficomp
lods
and
xchg
mov
shl
fiadd
mov
into
rcr
test
dec
cmps
out
test
stos
cmp
fwait
test
jl
xor
dec
cmc
les
adc
dec
cmp
sbb
adc
sar
cmps
pushf
outs
inc
pop
and
fsubr
les
std
mov
loop
out
sbb
mov
ds
cmp
dec
imul
mov
ss
(bad)
push
dec
mov
out
lock
inc
int3
mov
xchg
mov
sub
and
push
xlat
stos
je
jmp
and
sbb
stc
inc
cmps
sbb
sbb
cmp
inc
mov
std
icebp
fisubr
in
ret
pushf
ja
vaddss
cmps
sbb
sub
(bad)
sub
ss
leave
mov
dec
adc
mov
jae
retf
or
jg
cdq
sbb
fstp
imul
leave
mov
pushw
rcr
loop
in
fadd
cmp
ds
loopne
xor
jae
dec
movs
ror
ja
jae
mov
adc
dec
lods
pop
cmp
hlt
mulps
data16
jge
push
xchg
call
fmul
mov
lds
stos
mov
fcomp
push
lods
xchg
xchg
and
popf
pop
sti
out
mov
sbb
daa
sub
add
cmp
and
push
cmps
scas
outs
and
data16
xchg
xor
fisub
xor
jl
pushf
dec
mov
inc
clc
jge
and
or
pop
out
sbb
mov
jmp
sar
adc
jmp
retf
pop
std
jno
ds
iret
call
mov
in
mov
mov
push
loopne
lods
retf
dec
xor
ins
ins
add
or
mov
(bad)
xchg
cmovs
adc
retf
ja
mov
dec
cdq
xchg
(bad)
dec
mov
(bad)
lods
push
test
ss
dec
out
mov
and
adc
into
sub
cmp
dec
and
pop
dec
aad
int3
lods
xchg
shr
cmp
mov
mov
inc
dec
popa
mov
cmp
push
push
call
repnz
shl
dec
add
push
mov
bound
jg
and
mov
xchg
inc
pusha
ins
js
pop
inc
aad
das
std
xor
inc
int3
mov
cli
fstp
cmc
jbe
mov
jp
and
push
and
data16
sbb
and
mov
mov
arpl
cmps
xchg
sahf
push
enter
and
ss
out
fs
nop
lods
dec
fld
dec
dec
push
cmp
ret
int3
rcl
xchg
mov
loop
cmp
and
nop
sub
mov
sti
iret
push
popf
es
mov
adc
in
mov
(bad)
jmp
aas
pop
xchg
(bad)
cmp
mov
cwde
retf
sub
inc
push
ss
add
sbb
inc
aam
fcmove
repz
test
jb
jnp
xchg
cmp
outs
enter
sub
bound
loopne
jbe
outs
mov
hlt
cmp
xor
nop
sbb
cs
mov
cmp
shl
mov
dec
movs
dec
cmp
popa
cmp
xchg
jb
rcl
out
clc
add
stos
rcr
add
fucomp
es
jb
jg
sub
mov
push
cdq
cmp
jnp
mov
enter
and
and
shl
ror
sub
inc
ret
mov
(bad)
push
into
push
push
jnp
loop
cmp
jl
pop
push
in
adc
(bad)
and
pop
cdq
jl
dec
push
cmp
jo
rcl
(bad)
aad
jmp
adc
or
xchg
inc
push
arpl
fld
or
sub
jb
hlt
nop
mov
les
les
jo
mov
outs
jge
shl
shl
cmp
rcr
aam
int
jne
fnstcw
cmp
lock
ret
or
mov
int3
popa
sub
(bad)
ins
inc
repz
add
ret
fsub
jecxz
fistp
adc
outs
cli
pop
or
jp
jns
addr16
push
sub
jae
out
ror
pusha
shl
and
mov
out
jb
pop
fstp
pop
mov
sbb
es
mov
(bad)
jae
mov
sub
cmp
cmp
(bad)
sbb
in
mov
(bad)
or
and
ss
mov
cld
out
pop
mov
add
push
scas
sub
std
retf
push
in
ret
inc
mov
test
call
mov
data16
imul
sub
push
test
jg
push
out
and
je
daa
add
(bad)
popa
push
les
div
xor
jmp
mov
cli
int3
mov
movs
lods
test
popa
xor
sahf
out
(bad)
jnp
mov
sub
hlt
fidivr
test
fstp
cmps
ds
cmps
mov
push
cmps
xor
cmps
push
add
or
(bad)
out
(bad)
lahf
sbb
pop
(bad)
push
sbb
sub
dec
aad
fucom
movs
in
xchg
jg
xchg
mov
movs
nop
pop
loop
popf
stos
xor
stc
iret
jbe
adc
sahf
cli
fs
or
(bad)
aaa
xor
adc
xchg
repz
adc
(bad)
push
fabs
xchg
(bad)
xchg
(bad)
ret
sbb
xchg
sub
das
jmp
jle
add
movs
ins
call
loope
or
xor
popa
hlt
pop
mov
mov
and
jle
mov
sahf
xor
adc
sbb
dec
retf
cmps
std
push
fadd
fnstenv
or
add
or
cwde
mov
stc
loop
jp
(bad)
stos
pop
pushf
jmp
ret
pop
dec
cmps
test
nop
call
adc
sbb
sub
rcl
ja
xor
cs
jne
mov
adc
ret
shl
dec
test
stc
xor
add
mov
mov
gs
daa
out
in
mov
pop
xor
jmp
mov
add
push
inc
push
js
cmc
outs
pop
xor
ins
add
ficomp
jmp
mov
ret
push
jle
jge
dec
sbb
cld
sbb
andnps
jp
sbb
add
idiv
inc
and
jg
outs
lock
push
pop
pop
pop
test
pop
or
out
inc
sbb
xchg
mov
int3
inc
mov
outs
and
sub
jmp
and
cmps
xor
cvtps2pi
jmp
int
lock
std
inc
cmp
mov
js
inc
cmps
cmp
call
jecxz
and
mov
sbb
into
ins
or
mov
push
or
stos
outs
pop
dec
scas
lods
scas
or
out
into
and
xor
push
push
sub
aaa
rol
nop
xor
rcr
loopne
js
stc
ret
inc
daa
mov
cmp
jno
loop
clc
cmps
jecxz
enter
inc
xchg
in
inc
mov
jecxz
not
sbb
rcl
jno
adc
cmp
test
inc
std
pop
or
fs
sbb
mov
movs
arpl
xchg
or
fs
imul
mov
shr
int3
nop
lock
mov
jl
mov
mov
or
pop
(bad)
jle
gs
mov
add
stos
adc
push
sti
popa
or
mov
jae
adc
addr16
push
ds
mov
nop
xor
(bad)
(bad)
out
rcr
xor
cmps
or
jbe
pop
test
cwde
and
dec
mov
sbb
push
mov
push
stc
fwait
push
imul
mov
sub
out
outs
call
pop
imul
cmp
dec
push
xchg
arpl
jge
and
addr16
pushf
das
stc
arpl
add
repz
jns
cmps
jmp
push
ins
out
mov
cmp
xchg
addr16
push
cmp
stos
mov
jge
clc
imul
ficomp
gs
lds
das
inc
icebp
ss
jno
sub
imul
lea
mov
xor
adc
add
fcmovnu
imul
mov
pop
aas
push
call
(bad)
stos
mov
stos
ret
cmp
aad
jge
pop
adc
adc
clc
cld
pop
cmps
aam
add
scas
lea
lods
xchg
cmps
hlt
jmp
add
je
retf
cs
add
mov
mov
fisub
push
dec
jae
cli
or
jnp
mov
aam
dec
test
outs
in
xchg
mov
std
jne
pop
push
xor
test
pop
cmp
imul
(bad)
lock
popf
cs
cmps
adc
jge
ins
mov
ret
js
sub
ins
and
repz
dec
fist
mov
sub
cmp
push
cmp
outs
(bad)
dec
add
test
sbb
sbb
or
pop
adc
xchg
loop
dec
and
xor
inc
sbb
mov
jg
jne
adc
loope
cli
pushf
jecxz
xor
fistp
mov
cld
clc
dec
pop
adc
lea
scas
test
jmp
jmp
add
out
shl
inc
in
data16
fcmovb
out
xor
jmp
mov
inc
movs
xchg
leave
(bad)
scas
scas
std
inc
mov
mov
dec
mov
inc
mov
not
outs
ret
xchg
and
pop
shr
mov
mov
mov
inc
psadbw
push
call
add
(bad)
or
push
mov
inc
cmp
xor
out
push
fwait
inc
sbb
push
or
mov
jnp
aaa
stos
fwait
jmp
cmp
stos
adc
fsubp
popa
dec
arpl
je
data16
inc
xor
imul
repnz
push
loop
sub
push
xchg
fwait
ja
xchg
add
test
inc
sub
call
pop
clc
lea
fwait
xchg
sbb
lea
shr
lock
imul
(bad)
in
inc
imul
ins
jnp
mov
jl
in
test
xor
idiv
or
ins
popf
push
out
scas
aas
les
jns
jmp
pop
push
and
jns
push
push
adc
xchg
push
into
inc
dec
cmp
xor
out
movs
push
outs
shl
xor
daa
cmp
xor
sbb
ret
and
sub
cmp
pop
movs
push
jmp
das
pop
pop
shr
pop
neg
push
adc
cmp
sbb
icebp
jg
mov
mov
mov
pop
jle
xor
dec
push
jmp
ror
shl
jl
retf
jp
sbb
xchg
cmc
xchg
popf
mov
cmp
rcl
xchg
and
cmp
popf
loope
jle
xchg
popa
pop
push
into
mov
jbe
or
or
xchg
push
(bad)
add
jle
setnp
pop
add
jmp
sub
mov
mov
cmps
maxps
xchg
inc
ret
cmp
daa
cdq
jae
mov
pop
(bad)
sbb
push
and
into
out
fstp
loop
mov
add
sub
into
and
cwde
retfw
outs
idiv
fst
cmp
test
pop
pop
sub
jne
scas
push
mov
std
jl
add
lahf
sub
add
and
or
call
adc
inc
mov
push
in
das
push
xor
aas
cmp
add
icebp
out
mov
into
mov
leave
test
popf
jle
push
xlat
inc
xor
std
and
(bad)
cmp
(bad)
jg
xchg
sbb
jecxz
push
jg
cld
in
lock
fistp
dec
fsin
das
dec
mov
jne
mov
add
test
dec
mov
adc
sar
cmp
not
add
bound
sub
iret
lahf
loop
arpl
sub
retf
mov
(bad)
and
aas
mov
fucom
dec
test
and
mov
ds
cmps
inc
or
rcl
cmps
adc
pop
rcl
jb
(bad)
mov
and
shr
cdq
retf
ficomp
push
push
xchg
mov
out
imul
mov
dec
sbb
movs
cwde
imul
mov
cmp
mov
sub
fldcw
add
jns
sbb
pushf
mov
icebp
(bad)
cwde
retf
repz
mov
sub
inc
mov
dec
sti
movs
push
cmc
daa
add
cmc
mov
outs
ja
jmp
adc
call
imul
cmp
or
push
or
jnp
pop
push
pusha
and
scas
cmp
(bad)
dec
xchg
popa
inc
pop
dec
mov
pop
or
cmps
(bad)
mov
das
es
xchg
mov
mov
mov
or
test
push
jae
jmp
adc
mov
adc
push
ins
push
cmc
adc
fnsave
std
scas
cmp
mov
test
(bad)
cmp
ss
ja
mov
sbb
xlat
jne
mov
repz
dec
xor
jnp
adc
ret
mov
push
dec
dec
mov
lea
and
adc
shr
dec
mov
(bad)
push
jb
addr16
movs
push
stos
add
enter
clc
mov
scas
inc
(bad)
dec
sub
sahf
(bad)
in
test
mov
adc
jle
aas
and
add
add
icebp
or
cmp
mov
dec
xor
dec
popf
cmp
out
stc
jbe
or
or
inc
movs
xchg
mov
mov
and
sbb
xchg
and
push
(bad)
pop
dec
and
test
add
ins
sar
and
lahf
leave
dec
aam
nop
psrad
sub
cwde
lods
lods
cmp
retf
xchg
mov
ret
in
adc
repz
(bad)
and
(bad)
fldcw
push
xchg
call
mov
pop
push
pushf
cmp
xchg
mov
mov
cmp
outs
aad
mov
test
xchg
sahf
sbb
sub
test
xchg
inc
dec
pop
out
cmp
ss
data16
mov
and
or
add
sysenter
fstp
adc
call
add
adc
addr16
mov
inc
mov
pop
xor
push
mov
add
stos
mov
pop
mov
inc
inc
dec
cmp
inc
nop
ret
xchg
fwait
dec
out
pusha
outs
xchg
scas
xor
lds
mov
push
rol
xor
pop
dec
push
ret
leave
je
repz
ret
jnp
push
sub
mov
(bad)
mov
loope
push
xchg
jmp
sbb
jmp
jmp
inc
inc
push
ret
mov
pop
fsub
call
rcr
cmp
add
pop
lds
xchg
fbstp
jmp
or
mov
jae
add
adc
(bad)
stc
xchg
push
inc
loope
or
out
out
(bad)
(bad)
popa
arpl
fnstenv
out
pop
mov
and
inc
daa
cmps
cmp
je
dec
fstp
fdivr
mov
mov
ins
xchg
(bad)
sub
les
xchg
sub
cmp
icebp
repz
add
fidivr
loopne
mov
and
push
push
mov
cld
xor
mov
in
sbb
into
sbb
shr
mov
push
aad
cmp
movs
fisubr
and
pop
neg
lock
xchg
ret
adc
mov
mov
add
in
lds
add
xor
sub
cs
xlat
and
popf
popa
es
les
mov
push
cmps
xchg
fadd
std
xchg
mov
stos
dec
push
sbb
jl
mov
sub
pop
inc
arpl
xchg
mov
ins
jp
ror
idiv
sbb
test
cli
push
jo
fiadd
lahf
stos
cmc
mov
mov
mov
push
mov
adc
into
clc
icebp
mov
cmp
sub
loop
inc
ins
ret
mov
ja
mov
arpl
out
idiv
push
cli
or
sbb
test
repnz
jle
ja
inc
mov
inc
mov
sbb
enter
xchg
lock
mov
push
je
into
in
call
adc
mov
sub
fmul
inc
fadd
(bad)
sti
clc
pop
movs
pop
jne
in
pop
lahf
aaa
icebp
mov
in
mov
push
or
push
fidivr
(bad)
loopne
xchg
retf
xchg
mov
push
movs
adc
push
push
xchg
test
sbb
sub
ror
pop
cmp
jns
xor
mov
in
inc
jno
push
lods
call
push
sub
outs
(bad)
add
sahf
sub
repnz
test
loope
adc
out
repnz
push
popa
mov
in
outs
push
sbb
fwait
test
dec
push
pop
lea
adc
xor
das
aaa
pop
scas
mov
jo
outs
jmp
xchg
jne
cmp
cmps
xchg
popf
fcomi
xor
rol
mov
push
hlt
enter
(bad)
vcvtps2dq
jns
mov
push
or
jno
jle
retf
lods
dec
lods
push
sbb
and
mov
sbb
push
cmp
mov
aad
fadd
xor
jmp
clc
movs
inc
lea
daa
mov
jno
jmp
jl
pop
fidivr
data16
and
and
adc
(bad)
jecxz
push
lods
sub
inc
or
icebp
sbb
jne
shl
push
push
in
pop
jae
mov
or
aas
int3
jg
loopne
push
push
int3
dec
mov
jno
inc
(bad)
pop
sub
movs
adc
cmp
jbe
xor
mov
and
adc
sub
into
inc
adc
pop
or
mov
int3
jno
sbb
inc
push
cmp
mov
inc
jno
and
sbb
mov
mov
sbb
push
imul
push
mov
add
fsub
icebp
sub
test
mov
jle
shr
mov
(bad)
stos
adc
fcom
pop
push
inc
mov
or
data16
out
sar
adc
sti
jmp
mov
mov
imul
mov
adc
fnstenv
(bad)
mov
test
inc
xor
add
or
dec
cwde
in
idiv
push
dec
mov
inc
iret
in
and
add
loope
imul
je
inc
mov
sahf
jb
or
idiv
push
push
cmc
mov
jecxz
or
push
(bad)
sbb
mov
mov
jmp
mov
lahf
rcr
sbb
in
sahf
(bad)
mov
dec
retf
sahf
fxch
or
jl
ret
inc
xor
retf
pop
add
fimul
(bad)
das
xor
and
outs
in
jae
das
rcl
mov
push
sub
stos
dec
ret
(bad)
mov
mov
ret
fcomp
movs
push
loope
mov
push
aaa
imul
jo
add
push
dec
and
mov
sti
ins
pop
sbb
cmp
adc
sub
cli
dec
out
clc
jns
pop
pop
(bad)
jno
cmp
mov
call
sar
cmps
(bad)
shr
cwde
adc
and
or
pop
movs
or
call
and
xor
popa
ins
aad
cmps
cmp
imul
xchg
aaa
push
(bad)
mov
dec
test
sahf
mov
(bad)
jecxz
mov
(bad)
push
lods
mov
push
xor
xor
cmp
clc
sbb
push
int
daa
dec
sub
add
inc
inc
(bad)
mov
(bad)
or
push
add
pusha
fnsave
(bad)
sub
cmp
rol
dec
popa
xchg
pop
push
mov
(bad)
scas
mov
hlt
inc
mov
mov
xchg
iret
adc
xlat
jge
sahf
cwde
aaa
and
or
cmps
jmp
adc
rol
out
sbb
push
int3
and
mov
arpl
iret
(bad)
sub
xchg
ins
jl
dec
pop
jge
xchg
retf
cwde
test
mov
mov
jbe
dec
inc
movs
(bad)
aad
neg
or
xor
push
adc
mov
sti
jge
gs
inc
ja
xchg
or
xor
inc
loope
jl
dec
adc
sbb
loope
push
xchg
rcr
jnp
xlat
dec
pop
dec
stos
bound
test
mov
or
lods
adc
pop
jecxz
jno
mov
xor
jo
jmp
stc
pop
mov
std
jo
stos
pop
push
lea
xchg
rcl
fwait
movs
repnz
push
xor
stos
int
sbb
cmp
mov
lock
sub
rep
xor
arpl
or
adc
cdq
xchg
(bad)
lea
xor
sbb
call
xchg
mov
adc
popf
cmp
jmp
push
fmul
int3
movs
in
cmp
sbb
test
push
fdiv
ins
mov
aaa
dec
movs
push
push
fucom
sbb
mov
push
push
jecxz
sub
lahf
sub
cmp
mov
jl
in
jl
push
out
mov
test
fld
test
and
fsubr
push
inc
ds
and
mov
movs
jmp
add
mov
push
out
(bad)
movs
cmps
mov
mov
inc
cmps
or
xchg
xchg
jo
sbb
fs
loope
push
adc
(bad)
cs
cdq
xor
mov
call
aam
mov
aam
popa
sub
cmps
push
and
pusha
jmp
fisttp
mov
repnz
repz
out
(bad)
xchg
sbb
lahf
inc
imul
pop
mov
sbb
scas
js
jp
cdq
lock
jmp
outs
les
imul
sub
aas
jg
test
pop
pushf
hlt
add
and
movups
pop
xchg
dec
mov
daa
push
ins
sbb
mov
lods
(bad)
(bad)
icebp
push
lods
aam
bt
cmc
(bad)
mov
cmc
adc
xchg
je
jle
xor
pushf
cmc
xchg
add
sbb
jmp
nop
mov
cmpxchg
mov
mov
add
aad
jmp
es
inc
dec
loopne
mov
push
cmp
mov
or
cs
jecxz
mov
ja
in
adc
fld
pop
inc
cmps
push
dec
push
mov
retf
and
push
outs
in
pop
fwait
das
mov
mov
and
push
pop
test
ret
cmps
ret
mov
pushf
arpl
jns
or
and
mov
pop
frstor
jnp
adc
lods
jne
add
(bad)
sub
mov
or
pop
or
addr16
sub
out
repnz
out
add
clc
mov
shr
(bad)
jne
add
pop
ret
mov
retf
js
int
popa
mov
repnz
or
mov
stos
adc
std
add
out
hlt
ja
popa
jecxz
ret
jecxz
(bad)
jbe
add
sub
loopne
mov
sub
push
mov
add
aam
popf
jg
ffreep
cmp
fadd
dec
scas
lahf
pop
jmp
out
(bad)
dec
adc
cmc
mov
repnz
mov
jbe
int
in
loop
inc
adc
and
(bad)
xchg
repnz
les
in
or
dec
ins
sub
inc
pop
inc
and
inc
adc
mov
aas
lods
imul
ss
mov
and
cmp
jecxz
mov
mov
xor
pop
add
imul
inc
test
xor
sub
in
mov
xchg
push
repnz
inc
jmp
inc
xchg
cmp
mov
movs
jecxz
pushf
inc
fild
popa
dec
loope
dec
(bad)
cmc
inc
in
and
retf
mov
mov
push
pop
add
(bad)
aad
cmp
sbb
cmps
retf
test
test
lods
repnz
outs
arpl
fld
dec
jecxz
and
cmps
xor
(bad)
dec
adc
fadd
push
inc
icebp
and
adc
fcomp
xor
cmc
cmp
add
cmps
dec
push
fs
enter
and
addr16
dec
add
lahf
xor
retf
mov
mov
or
outs
and
cmp
push
pop
mov
leave
cld
dec
and
sti
push
sub
aam
mov
and
leave
inc
sbb
aad
jg
cmps
enter
or
mov
in
fwait
scas
(bad)
adc
push
clc
and
add
cmps
mov
ss
cdq
push
aas
xor
pop
popf
mov
popf
dec
dec
inc
mov
push
mov
lahf
push
icebp
cdq
pop
btr
inc
sbb
lods
mov
mov
cmp
fld
add
sbb
ret
cmp
pop
lock
push
jl
adc
je
mov
imul
out
sbb
pop
out
mov
xchg
pop
push
ins
mov
mov
cli
daa
jg
sbb
test
inc
scas
outs
mov
or
pop
retf
nop
js
icebp
sahf
mov
and
scas
cmp
push
ins
pop
clc
fstp
xor
arpl
icebp
mov
lods
pop
imul
jb
mov
fmul
repz
jecxz
lock
xchg
cdq
push
sti
push
push
dec
jmp
mov
in
cmc
shl
aad
cmps
pushf
pop
mov
nop
and
xlat
xor
or
sub
lea
cld
das
into
cmp
xchg
add
mov
(bad)
lods
pop
xchg
sti
jp
sub
mov
cdq
lods
adc
mov
scas
pop
mov
pop
ins
scas
ror
mov
pop
icebp
sbb
jge
(bad)
dec
lds
xchg
cmp
popa
data16
mov
push
add
adc
mov
jg
and
data16
pop
jb
add
mov
add
xchg
les
cmp
pop
or
mov
addr16
mov
xchg
inc
adc
js
ss
aas
sbb
pusha
sub
js
inc
(bad)
sti
sub
and
mov
dec
retf
sti
in
mov
push
or
mov
mov
fcom
inc
int
je
push
xor
(bad)
shl
xlat
stos
es
test
mov
jne
cmp
push
mov
loop
lods
add
mov
xor
mov
stc
dec
ret
cmovge
scas
lock
outs
loope
xchg
icebp
pop
add
loope
jmp
or
inc
push
sub
sub
adc
shl
rol
aad
jp
sbb
dec
nop
sub
push
or
leave
xlat
fs
jmp
push
push
dec
or
jne
iret
imul
jl
add
jnp
test
jp
arpl
mov
retf
inc
adc
stos
mov
push
neg
les
outs
enter
mov
pop
sub
cmc
mov
popa
or
adc
sbb
scas
jmp
iret
jmp
je
in
xchg
push
sbb
pushf
sub
loope
or
push
movs
cmp
ins
add
imul
xchg
or
arpl
daa
mov
fsubp
jb
jg
mov
jge
ins
pop
pop
pop
and
imul
ja
mov
repz
int3
push
mov
mov
and
(bad)
not
push
(bad)
in
and
cs
mov
cli
adc
xor
inc
daa
repz
mov
mov
push
shr
xchg
push
fimul
mov
mov
xor
and
sbb
inc
ret
repnz
sbb
jnp
call
loope
adc
or
pop
(bad)
nop
push
pop
mov
inc
in
lods
push
add
loopne
sbb
sbb
stos
lock
jecxz
add
shl
mov
mov
and
jo
popf
inc
fistp
imul
and
popf
push
into
lahf
xor
xchg
nop
mov
je
inc
retf
clc
or
and
pop
jnp
mov
adc
mov
mov
push
add
xchg
(bad)
aas
nop
adc
push
or
pop
or
fild
lea
mov
mov
cmp
into
dec
jb
outs
frstor
or
sub
mov
cmp
jae
or
cli
(bad)
xchg
pop
inc
push
jb
sub
and
aaa
stos
inc
and
push
ror
cmp
ficom
pop
iret
test
gs
push
addr16
mov
out
daa
outs
and
test
mov
int3
cmc
sbb
inc
outs
stos
lea
adc
movs
pop
push
in
nop
mov
jno
in
aaa
cmps
pop
pop
jnp
stc
jne
aam
mov
mov
test
sub
movs
dec
mov
pop
push
jp
loopne
or
and
mov
and
test
popa
pop
loopne
psrad
ja
sbb
scas
jp
cmp
scas
cmp
(bad)
std
scas
mov
inc
idiv
aad
jge
fs
jp
clc
icebp
cld
leave
push
ds
pushf
or
ret
sub
dec
icebp
inc
or
loope
bound
rol
xor
jmp
stos
mov
push
pop
dec
mov
mov
and
jle
fdiv
(bad)
push
push
xor
cmp
call
cdq
lods
sar
jnp
or
xchg
stos
std
ds
and
jne
sahf
scas
jns
dec
xchg
sbb
js
cdq
sub
ins
repz
mov
outs
lock
dec
jp
scas
shl
cmp
das
repz
cdq
sbb
or
mov
iret
shr
pusha
cmp
pop
sub
(bad)
clc
mov
scas
xchg
pop
lods
dec
addr16
repz
lahf
loop
(bad)
dec
jbe
lahf
push
cld
push
mov
mov
ins
cli
sbb
daa
pop
popf
push
(bad)
daa
add
fwait
mov
aad
pop
mov
mov
outs
out
lock
push
scas
adc
mov
loopne
dec
jp
xor
fist
pop
dec
jns
icebp
and
retf
mov
pusha
jmp
jbe
mov
(bad)
je
fstp
outs
push
not
stos
and
loop
jbe
mov
out
fcomp
xor
rcr
mov
icebp
fst
jo
ss
xchg
mov
push
jbe
pop
pop
sub
jne
adc
cmp
sub
test
xchg
xor
pusha
and
call
dec
fbld
xor
push
sub
in
pop
mov
ja
or
mov
not
pop
sub
pop
repnz
sbb
fsub
mov
add
add
bound
(bad)
cmp
pop
loopne
cmps
push
fcomi
rcr
jae
or
xchg
in
cmp
sub
jg
push
adc
data16
(bad)
popf
(bad)
pop
inc
out
fstp
add
jne
sub
mov
push
xchg
movs
ret
out
outs
pop
or
ins
pop
enter
cmp
aaa
adc
or
push
push
dec
in
xchg
sar
ds
movs
je
jb
jp
mov
bound
std
out
stc
jp
push
test
pop
(bad)
mov
std
jp
dec
in
dec
popa
mov
or
mov
and
sbb
cli
xchg
enter
inc
scas
mov
sub
jne
adc
mov
sub
adc
jno
loope
or
ds
add
test
inc
add
xor
fwait
ds
mov
push
lods
cmp
aas
into
test
push
dec
fdivr
mov
scas
fxtract
inc
cmp
mov
cli
mov
add
xchg
(bad)
test
sbb
or
loop
xor
scas
xchg
aad
mov
(bad)
push
xor
or
cld
test
xchg
test
sbb
(bad)
and
and
add
jb
data16
jae
or
push
les
cmpps
mov
inc
or
ds
gs
inc
pop
aad
adc
fisub
mov
mov
out
scas
sub
add
(bad)
and
xlat
ds
mov
or
icebp
retf
sub
mov
pop
lock
stc
push
adc
stos
or
or
xor
xchg
test
or
ds
or
mov
push
push
out
je
or
or
(bad)
xor
stos
or
lds
mov
jae
pop
arpl
inc
pop
nop
pushf
pop
loope
(bad)
arpl
sub
bnd
(bad)
xchg
adc
cmp
fs
lds
push
inc
cmp
stos
cmp
add
add
push
scas
jmp
fist
adc
test
iret
fwait
into
mov
ds
add
arpl
mov
mov
repz
enter
mov
int3
cmp
aas
bswap
xor
adc
push
pop
lods
(bad)
outs
push
movs
dec
push
stos
aaa
mov
inc
add
mov
xor
stos
push
jp
imul
stc
dec
dec
ins
mov
or
xor
rcl
dec
xor
mov
pop
sbb
aad
(bad)
fwait
or
xor
call
imul
stos
(bad)
xchg
(bad)
xor
push
mov
jmp
mov
jle
rcl
mov
jb
xchg
shr
jnp
add
jle
sub
aad
out
mov
push
jns
mov
jecxz
pop
sbb
repz
xlat
jae
(bad)
cmps
leave
and
or
inc
cmp
and
xchg
adc
sbb
mov
jo
push
pushf
data16
dec
pop
test
cmp
aaa
inc
cmp
test
sub
cld
scas
mov
sbb
mov
lahf
jl
in
pop
pop
ret
pop
fidivr
jmp
mov
aaa
cmp
xchg
xchg
imul
pop
lea
scas
test
dec
push
xlat
stos
stos
sub
sbb
lahf
aam
fs
scas
lds
mov
and
in
cli
das
sti
adc
les
loopne
in
xchg
sahf
inc
xchg
retf
ret
fstp
(bad)
push
sub
push
sbb
pusha
sahf
(bad)
mov
xchg
aam
push
fsub
out
aas
int
mov
pop
test
sbb
mov
test
add
sbb
lods
inc
lods
(bad)
jmp
pop
movs
jbe
ret
jp
addr16
aam
stos
sbb
add
adc
xor
fbld
cmp
out
movs
adc
mov
mov
push
clc
fsub
(bad)
xor
out
js
lods
xchg
cmp
int
test
sbb
fucomip
(bad)
jmp
mov
cdq
fidivr
or
mov
push
cli
icebp
les
dec
std
xor
xlat
adc
call
cmps
pop
adc
inc
out
jmp
sbb
add
(bad)
retf
adc
sub
lds
mov
xor
xor
mov
dec
das
ins
push
xchg
fldenv
dec
ret
(bad)
jle
cmp
dec
mov
and
jbe
add
mov
call
dec
loope
xor
mov
mov
stos
mov
adc
fwait
add
(bad)
out
(bad)
cmp
dec
jae
enter
xchg
push
in
sahf
dec
xchg
xor
jmp
fdivr
jne
into
sub
dec
and
ret
push
sub
fldcw
xchg
scas
sahf
cdq
adc
push
adc
xchg
sbb
scas
dec
cwde
cmc
cmps
out
stc
fisttp
jo
dec
jge
aaa
shr
pusha
pop
mov
jnp
arpl
iret
mov
push
cmc
ret
push
stos
movs
cmp
mov
lods
enter
dec
jmp
and
test
mov
gs
cdq
or
mov
mov
or
xchg
push
mov
inc
shr
fdiv
cmp
repz
ds
or
daa
xor
mov
add
jo
cmp
movs
lods
loop
pop
jmp
adc
and
arpl
xor
push
cmp
test
jnp
scas
mov
mov
loopne
pop
add
and
jp
aam
push
sub
pop
popf
ret
and
xchg
gs
sti
mov
cmp
jl
sub
add
push
sub
pop
scas
test
mov
ffree
(bad)
ss
dec
mov
je
ins
sbb
inc
shr
push
or
loopne
mov
push
or
push
cld
xor
dec
cwde
dec
jle
push
jle
and
adc
rcr
sti
jmp
jno
dec
adc
jae
jns
cmp
mov
mov
inc
mov
(bad)
rcr
mul
push
scas
sub
dec
outs
loopne
into
and
pushf
mov
mov
xchg
das
outs
inc
popa
cs
test
enter
sbb
mov
in
shl
pop
pop
mov
ficomp
cdq
mov
std
cmp
pop
scas
jne
lds
(bad)
mov
mov
or
inc
push
jp
cmp
adc
fimul
xor
cs
xor
retf
xchg
data16
jge
fild
aad
sbb
xor
cmp
sar
adc
cli
inc
clc
or
test
movs
push
push
(bad)
outs
sbb
xchg
mov
xchg
aad
fsub
jno
adc
mov
clc
push
je
jmp
imul
mov
fsqrt
sbb
inc
xchg
icebp
sbb
push
rol
or
stos
or
call
sbb
leave
or
inc
in
add
cmp
or
enter
cmp
mov
imul
pop
neg
jbe
pop
test
mov
popa
inc
jle
ins
sub
jne
aad
pop
cwde
mov
or
mov
mov
inc
call
mov
repnz
fwait
(bad)
mov
xchg
and
xchg
mov
mov
jo
fucom
fwait
daa
aam
xor
jo
push
bound
push
ja
xchg
adc
dec
add
inc
xchg
repz
cmps
mov
jmp
pop
adc
jecxz
sub
sbb
out
and
movs
adc
jmp
push
test
lods
jo
test
dec
mov
push
cmp
mov
push
dec
xchg
xchg
dec
gs
and
out
sbb
neg
(bad)
xchg
pop
pusha
fist
shr
or
call
or
pop
retf
stos
xchg
jle
dec
dec
adc
adc
sub
inc
cmp
xor
dec
hlt
(bad)
mov
imul
jno
ds
loopne
frstor
mov
sbb
inc
push
and
in
int3
mov
ret
mov
mov
sub
cmp
sub
rcr
mov
retf
popa
mov
xlat
mov
mov
jge
mov
mov
and
xor
mov
cmp
lea
jns
jnp
push
ficom
xchg
test
pop
sbb
shr
pop
push
pop
jno
mov
push
ret
aas
adc
and
push
mov
inc
jb
push
adc
addr16
adc
loope
sbb
or
xchg
inc
push
icebp
fst
inc
mov
sub
bound
pop
or
push
es
mov
lds
pop
add
shl
imul
daa
rcr
jno
mov
enter
jnp
xchg
sbb
add
and
xlat
aaa
jmp
push
pushf
add
add
cdq
rol
mov
sub
cmp
(bad)
jbe
mov
xchg
jo
sub
cmp
in
call
cdq
cdq
cmp
push
xchg
pop
imul
neg
(bad)
hlt
enter
jb
js
das
lds
aam
addr16
or
pop
loope
adc
aad
sub
out
and
sub
pop
pop
or
pop
xor
test
lds
inc
add
daa
mov
sub
xor
xchg
jnp
rcr
sub
aaa
mov
test
inc
addr16
jp
xchg
popa
aad
lock
cmp
cld
int
jae
and
and
call
in
test
adc
xor
fst
sar
mul
stos
add
int3
(bad)
adc
xor
retf
and
cmps
xor
push
in
(bad)
jb
add
mov
fidiv
xor
inc
test
lds
inc
mov
push
sbb
cmp
imul
pop
hlt
in
pop
cmp
mov
aam
movs
push
pop
lods
sub
xor
fstp
adc
iret
test
ds
arpl
mov
data16
bound
jecxz
or
or
jmp
add
gs
dec
movs
jno
loop
add
test
dec
ja
fistp
mov
jmp
int
std
xchg
pop
mov
or
inc
mov
gs
xor
and
call
jo
inc
jmp
inc
std
pop
xchg
stc
jecxz
mov
xchg
stos
mul
lods
dec
leave
sahf
mov
sar
mov
mov
xor
nop
loope
pop
ror
xor
mov
xchg
int
mov
push
div
adc
mov
iret
push
mov
std
mov
aad
retf
mov
std
lds
mov
pop
(bad)
es
cdq
add
jae
mov
cmps
(bad)
or
lds
ja
icebp
aaa
(bad)
xchg
stc
or
push
dec
add
mov
ret
neg
cmps
aas
ja
dec
into
imul
xor
and
adc
nop
retf
stos
push
fs
xchg
pop
xchg
dec
(bad)
mov
mov
repnz
jns
push
out
jle
je
pop
popa
test
mov
mov
ret
nop
out
into
cli
or
jns
sub
enter
mov
jmp
mov
ss
cmps
cmc
cmp
icebp
adc
fistp
push
jne
jg
sub
mov
cmps
dec
popa
stos
pop
or
cmps
in
femms
jmp
hlt
ins
or
mov
into
(bad)
inc
xadd
jle
or
outs
mov
push
stos
pop
mov
enter
dec
push
les
pop
pusha
jl
pop
addr16
fucomi
inc
pop
in
sub
inc
inc
or
mov
lahf
xchg
retf
xor
repz
xor
call
and
iret
mov
pop
sbb
leave
push
out
in
and
ins
add
dec
jle
sub
mov
jns
nop
and
movs
xchg
push
gs
push
push
gs
sub
shl
xchg
push
pop
push
lods
jecxz
movs
in
sbb
sbb
pop
xchg
popa
std
(bad)
pop
sub
das
int3
sbb
int
sbb
in
in
push
pop
push
jecxz
adc
jb
fmul
movs
rcr
mov
mov
mov
imul
dec
cmp
imul
rcr
add
jo
push
in
fdiv
add
mov
jb
dec
rol
iret
jmp
fbstp
pusha
mov
stc
pop
sar
test
jp
pop
test
sahf
adc
(bad)
and
xchg
mov
loope
imul
fs
shr
dec
or
xor
inc
push
clc
add
inc
loope
call
mov
ds
rol
aad
adc
xchg
cwde
mov
enter
mov
cmp
lea
pop
pusha
(bad)
gs
xchg
enter
jmp
test
mov
(bad)
test
sbb
daa
mov
inc
fucomi
mov
sbb
popf
pop
mov
popa
rcr
or
int3
xchg
lods
push
fistp
add
cwde
jle
imul
xor
mov
lock
in
cld
mov
scas
cmp
jle
test
mov
sbb
(bad)
push
add
mov
aad
inc
and
cmp
pop
sbb
add
sar
inc
xchg
dec
cli
lods
mov
je
addsd
mov
mov
(bad)
(bad)
rcr
iret
add
inc
xor
mov
xchg
and
inc
mov
inc
and
inc
cli
mov
sub
mov
aam
mov
jmp
je
ja
dec
daa
gs
inc
repz
jmp
or
xor
cmps
lock
mov
jo
add
jmp
xchg
push
pop
int
fisubr
jbe
cli
xchg
daa
jne
call
clc
inc
push
test
std
dec
das
xchg
sar
test
aam
cli
es
retf
mov
in
cmp
std
loope
outs
cmp
cmp
jmp
scas
jno
pop
(bad)
dec
push
out
add
push
retf
mov
(bad)
xor
in
or
and
mov
ffreep
nop
pop
ins
mov
cmp
pop
rol
ins
fldcw
push
push
fild
mov
ror
fistp
cmp
sub
sub
lock
mov
sbb
mov
mov
(bad)
les
ds
or
sub
or
or
mov
xor
xor
mov
cmp
jge
sub
jns
mov
scas
int
mov
and
ja
or
sbb
shl
popa
jne
neg
inc
fcmove
cmp
or
cdq
cmp
test
push
cmp
sbb
fnsave
inc
add
pop
jecxz
(bad)
test
int3
jo
xchg
add
sub
adc
into
pushf
dec
jb
leave
or
mov
jmp
ror
and
leave
pop
push
pop
or
add
xchg
retf
lea
add
pushf
jp
jb
push
mov
mov
ss
(bad)
out
sbb
test
ret
lock
sub
cmp
fmul
inc
cli
or
xor
push
xchg
lahf
jns
mov
or
adc
int
in
ja
pop
add
and
mov
mov
jbe
imul
jecxz
rol
push
ins
les
dec
shl
mul
add
rol
mov
xlat
or
ret
call
jmp
scas
mov
movzx
cmp
jne
jno
pop
pop
aam
(bad)
dec
pop
jnp
xor
adc
scas
add
pop
and
es
imul
add
aam
lock
push
mov
cmp
xor
jle
popf
mov
inc
cmp
sbb
stc
sub
(bad)
mov
push
les
sahf
leave
aam
fisub
imul
adc
leave
cmp
cmc
pop
push
inc
stos
ret
cmp
jl
jnp
ss
xchg
xor
int
iret
jo
push
push
xor
lods
jecxz
add
scas
mov
add
pop
pop
sbb
pop
or
xor
rsm
in
pop
push
pop
adc
jne
aam
clc
cdq
dec
pop
fucomp
je
jp
mov
push
rcl
shl
es
ja
das
outs
icebp
xor
ss
mov
push
into
pop
jnp
and
dec
mov
lods
not
xor
imul
add
xor
add
ds
arpl
push
add
sub
sahf
jne
out
push
push
mov
jno
mov
pop
dec
pop
pop
fldenv
sub
iret
and
stos
and
mov
sub
fisttp
stc
rol
adc
int3
jge
stos
xchg
cdq
test
fsub
lods
mov
in
sbb
jns
shr
mov
in
fisttp
push
out
ins
out
icebp
or
rol
jle
fisttp
inc
mov
lea
ja
mov
add
inc
mov
outs
or
ss
hlt
ret
icebp
cmp
nop
lahf
cmp
xchg
cli
jbe
mov
cmp
lods
movs
mov
imul
and
call
cmc
out
or
ret
adc
adc
in
in
push
js
nop
adc
mov
retf
repz
xor
retf
leave
imul
or
cmps
inc
scas
mov
push
lahf
gs
nop
mov
mov
jb
push
retf
scas
out
pop
das
adc
stc
inc
jecxz
push
lds
add
(bad)
sub
inc
xchg
cmps
adc
push
out
jmp
cmps
mov
sbb
push
ss
popf
es
cwde
aas
fld
(bad)
out
cmp
sub
or
xchg
fsub
addr16
or
test
pop
gs
jne
or
mov
dec
stc
or
dec
push
mov
pop
shr
sysret
(bad)
pop
fnsave
mov
int
mov
loopne
out
imul
push
push
lds
out
add
sbb
push
pop
mov
jmp
pop
sub
test
xchg
loope
and
mov
pop
or
(bad)
push
mov
xor
out
mov
neg
cmp
nop
sar
ror
(bad)
jge
sbb
push
lods
sbb
xor
jle
out
or
mov
(bad)
add
gs
mov
pop
mov
sub
sti
test
mov
adc
aad
or
ret
enter
cmps
test
sub
mov
ror
mov
fsub
jg
jl
add
fnsave
or
sti
pushf
sub
out
push
fidiv
xor
lock
jmp
test
xor
ret
jb
inc
jp
xchg
fxch
lahf
fdiv
jl
adc
adc
adc
arpl
jns
sub
mov
(bad)
and
test
inc
pop
or
push
adc
sbb
std
or
adc
add
shl
jle
movs
call
sti
stos
adc
jp
add
push
cmps
jns
test
lea
call
mov
popa
push
iret
test
outs
shl
ins
movs
xor
ret
xchg
push
mov
fcom
cld
xor
sub
cld
jne
std
jo
mov
fisubr
sbb
jno
mov
inc
call
pop
inc
lock
pushf
jg
push
imul
popf
jb
les
add
aaa
and
push
sub
in
shl
xor
adc
mov
push
sti
adc
lock
test
(bad)
cld
fs
call
in
into
frstor
enter
jge
mov
or
aad
xor
pop
and
mov
sahf
jl
movs
add
imul
lea
xchg
jae
cmp
xchg
inc
pop
scas
jle
jmp
(bad)
or
mov
xlat
pop
pushf
out
fidiv
loope
retf
seto
xchg
dec
cs
test
jb
xchg
push
and
jnp
(bad)
cmp
stos
cdq
adc
and
sbb
adc
mov
scas
daa
je
sub
add
ins
and
leave
arpl
xchg
icebp
fild
cmp
jb
pop
test
jl
shl
stc
jg
out
repz
ss
repz
cdq
outs
xor
int3
xchg
test
hlt
ds
xor
mov
pop
mov
and
sbb
mov
jmp
bound
ss
xchg
std
or
daa
addr16
neg
stos
iretw
or
pop
adc
cmp
cmp
sbb
jl
mov
inc
retf
lods
cmp
dec
push
dec
(bad)
cdq
mov
mov
mov
mov
mov
jl
fldenv
sahf
lods
cli
in
popf
push
ror
and
ins
add
popf
pusha
pop
(bad)
pushf
cwde
sub
imul
dec
sub
bound
ja
cmps
fwait
movs
add
inc
movs
mov
cmps
cs
hlt
xor
inc
or
jmp
push
xor
and
add
lea
push
call
aad
and
add
out
pop
hlt
push
ds
xlat
aaa
sub
call
add
test
mov
aad
mov
adc
movs
xor
jae
rcl
jb
(bad)
cmps
test
into
es
xchg
or
scas
adc
imul
jnp
push
pusha
aaa
adc
dec
ja
out
jecxz
dec
mov
dec
std
jmp
dec
xor
or
mov
popf
int3
sub
call
es
clc
nop
std
sub
xchg
aaa
xor
xchg
gs
(bad)
stc
rcr
pop
and
mov
loopne
cmp
xor
bnd
mov
dec
pop
gs
adc
pop
sbb
xor
mov
cmp
fldcw
pavgb
outs
outs
movs
xor
xchg
test
sbb
div
cld
sbb
sub
popf
jecxz
int
jns
xor
inc
or
hlt
cld
inc
xor
pop
in
icebp
ds
movs
mov
pop
(bad)
jns
cli
pop
dec
jne
adc
jns
and
shl
sub
das
(bad)
ja
dec
icebp
outs
pop
int
push
push
inc
shl
nop
push
push
mov
inc
aad
icebp
pop
ja
not
mov
xchg
pop
jge
out
fsub
add
inc
xchg
rcr
jmp
hlt
mov
pop
outs
mov
lods
das
imul
fwait
or
pop
xchg
inc
call
or
lods
inc
loopne
adc
jmp
dec
adc
xchg
mov
pop
jp
cmp
int3
push
les
dec
out
xor
adc
jp
test
xchg
adc
stos
add
pop
div
jmp
cdq
out
fld
hlt
cs
fsubrp
(bad)
jmp
iret
jmp
mov
(bad)
out
add
push
and
mov
aas
enter
push
sub
jmp
xchg
push
pop
in
adc
jecxz
mov
mov
cdq
gs
into
inc
loopne
sbb
shl
aaa
add
adc
lea
lods
int3
xchg
pop
cmps
mov
mov
into
and
push
loopne
jge
ret
pop
or
xchg
cmp
js
mov
dec
push
ja
cmp
imul
das
add
iret
and
retf
mov
and
sub
xchg
repz
div
mov
imul
test
mov
pop
fisubr
xchg
in
inc
sub
(bad)
or
push
sbb
aaa
movs
jno
push
jnp
inc
push
call
xchg
xor
or
inc
mov
or
mov
dec
ja
les
ror
inc
sbb
mov
lahf
jle
sti
pop
and
sub
mov
scas
les
lea
fcmove
xchg
mov
ds
mov
mov
sahf
and
xlat
mov
fdivr
mov
dec
lahf
lock
outs
fdiv
cmp
pop
call
xchg
and
fwait
pop
in
(bad)
lea
enter
xor
xchg
dec
cdq
call
jbe
outs
test
aas
in
add
push
arpl
add
xchg
mov
add
or
daa
shl
scas
cmp
mov
pop
outs
pop
adc
xor
mul
jno
sub
mov
xor
clc
or
adc
cmc
push
je
jmp
retf
sub
mov
mov
pop
aaa
jae
dec
in
jae
cmp
fild
mov
push
adc
out
imul
add
xchg
mov
js
add
retf
cwde
jecxz
mov
ret
gs
mov
fidivr
into
(bad)
dec
aas
mov
adc
cwde
cmc
push
shr
mov
xchg
mov
mov
(bad)
std
cld
jg
loopne
cwde
push
popa
inc
dec
call
out
repnz
pop
bound
pop
add
js
dec
cdq
jae
lods
add
push
xchg
mov
leave
pop
xor
jns
xchg
push
mov
fld
inc
maskmovq
push
stos
cmc
retf
push
scas
mov
es
scas
mov
push
dec
pushf
(bad)
dec
int3
clc
xchg
in
jle
in
std
xlat
test
and
jmp
adc
sub
loope
mov
push
jo
mov
pop
jo
push
out
adc
movs
and
sahf
mov
inc
adc
mov
aaa
mov
ss
clc
mov
idiv
inc
fistp
sahf
ins
pusha
pop
in
(bad)
mov
hlt
ins
sbb
lahf
in
sti
out
xchg
out
jo
adc
inc
sbb
nop
mov
rcr
into
inc
mov
test
int3
pop
jmp
jns
xchg
sub
sub
mov
retf
dec
popa
mov
out
and
cmp
test
ficom
scas
fld
cld
mov
push
cli
push
pop
sub
icebp
into
inc
adc
pop
mov
daa
cld
mov
icebp
mov
add
in
loop
das
pushf
leave
ja
jge
push
adc
rol
xor
(bad)
mov
(bad)
xrstors
mov
or
inc
cmp
(bad)
jns
loope
leave
sub
cmp
lods
xor
test
retf
les
call
mov
xor
int
retf
out
inc
push
cmps
in
add
ror
mov
pop
outs
mov
loopne
mov
les
dec
imul
mov
cmps
lock
mov
ret
test
hlt
int
cli
stc
jbe
sub
xchg
mov
xor
inc
std
mov
lea
mov
inc
cmp
loop
sti
ins
add
std
xchg
pop
xor
xor
in
jo
ss
int
or
adc
xchg
mov
pop
jmp
bound
nop
test
es
icebp
pop
inc
dec
jp
outs
mov
inc
in
loope
sbb
lods
pop
mov
int
test
push
fiadd
jle
dec
mov
dec
mov
rcr
cmp
dec
push
inc
ds
test
pop
adc
and
mov
cmps
popf
sbb
mov
push
mov
mov
sar
mov
imul
jle
addr16
adc
ja
jb
fistp
jle
loope
inc
retf
movs
jmp
fisttp
(bad)
movsx
stos
mov
js
ret
repz
int3
stos
xchg
mov
dec
and
add
stos
fdivr
xor
mov
ja
rcr
push
js
std
pop
icebp
sub
shl
outs
mov
sub
ret
retf
repz
loope
fstp
dec
das
xchg
fmul
int3
pop
hlt
inc
push
and
(bad)
fwait
xor
mov
mov
sbb
popa
xor
retf
out
cmp
inc
cdq
in
sbb
sahf
(bad)
jg
in
jo
jp
jns
jo
push
xchg
mov
sbb
lds
inc
cmp
sahf
or
xor
shl
inc
adc
cmp
mov
and
mov
pop
mov
lahf
popf
stc
loopne
movs
lods
fcom
cmps
(bad)
sar
loope
jp
ds
sbb
xor
xchg
cmp
sbb
hlt
mov
jae
enter
dec
inc
mov
cwde
out
xor
call
sar
idiv
out
xor
out
fs
das
cld
inc
icebp
cmp
cs
mov
mov
leave
outs
fsubr
ficomp
inc
retf
add
lds
xor
mov
and
sbb
mov
sub
pop
scas
jecxz
ja
pop
xor
rcr
and
sar
xor
popf
dec
sub
adc
mov
sti
sub
std
mov
jne
cli
and
inc
cmp
inc
dec
sbb
in
shr
mov
sbb
inc
mov
sbb
inc
push
lock
add
fimul
repz
call
pop
add
adc
into
pop
push
fld
adc
loop
sub
fnstcw
xchg
(bad)
push
pop
jns
scas
imul
inc
neg
cwd
hlt
fsubr
cmp
aam
dec
push
icebp
sar
cmc
xchg
imul
and
inc
repnz
int
stos
mov
popa
dec
push
xchg
sub
movs
adc
icebp
cdq
dec
mov
push
mov
mov
push
cmc
jno
cdq
xchg
fisubr
pop
or
mov
ins
sub
add
xor
loopne
mov
sub
inc
dec
add
mov
retf
xchg
pop
nop
push
outs
jge
int3
xor
aas
ficomp
pusha
mov
cmc
add
stos
push
xchg
jge
push
scas
out
fstp
ss
add
popa
push
icebp
mov
cmps
ja
jne
and
lds
dec
ins
sub
push
iret
inc
dec
outs
pop
test
mov
addr16
adc
pop
into
add
or
dec
or
aad
neg
(bad)
jle
mov
popa
clc
adc
push
in
das
jns
xor
icebp
ffreep
adc
jno
outs
adc
cmps
sbb
in
or
or
sub
stc
inc
or
sbb
cmp
jle
cmps
retf
icebp
jbe
add
shl
(bad)
mov
push
push
mov
mov
mov
xor
ss
xor
ss
xchg
sub
pop
fs
push
and
call
out
mov
lock
jns
sbb
ss
lods
lods
adc
jmp
mov
icebp
repnz
sbb
(bad)
push
inc
retf
xchg
sahf
loopne
cmc
inc
inc
mov
pop
mov
add
test
add
dec
inc
(bad)
mov
cwde
or
fnsave
daa
adc
out
out
push
xlat
stc
mov
mov
scas
jno
push
xor
pop
cmp
cmp
jbe
adc
xor
xchg
rol
in
cmp
in
adc
test
daa
pushf
pop
imul
jne
addr16
ins
arpl
jnp
fwait
ins
jae
ins
dec
mov
retf
ins
fsub
sbb
jp
leave
out
(bad)
adc
enter
mov
das
fcom
dec
pop
pop
js
adc
inc
push
imul
adc
(bad)
sub
push
stc
ins
xor
jo
mov
sbb
(bad)
rcl
je
dec
ret
mov
sub
ret
(bad)
lds
push
or
mov
std
add
and
ss
and
sahf
sbb
mov
adc
cmps
cmp
call
popf
imul
cmp
mov
ret
sub
jb
add
adc
pop
clc
das
push
in
sub
xchg
ror
jmp
rol
int3
mov
inc
ins
mov
inc
xchg
mov
nop
(bad)
repnz
adc
push
inc
in
jmp
mov
iret
cmp
dec
push
bnd
mov
jmp
xchg
mov
aad
mov
stos
cmc
lea
mov
or
adc
mov
repnz
scas
pop
dec
dec
cmp
jmp
jmp
push
push
jnp
test
das
adc
xchg
fcom
adc
xlat
pop
in
jge
rol
push
sub
fstp
int3
push
gs
mov
push
adc
aam
fdivr
sar
mov
int
and
pushf
out
xor
rcl
jne
test
mov
jns
mov
mov
jns
xchg
xor
push
aas
dec
imul
shl
adc
out
xchg
imul
or
and
mov
idiv
pop
std
jno
mov
stos
and
stos
mov
test
inc
pop
call
and
(bad)
jecxz
inc
dec
add
stos
aaa
test
ror
icebp
les
sub
scas
jno
pop
or
pop
sti
js
fdivrp
jns
sub
sub
aad
inc
xchg
push
push
inc
xchg
lods
repnz
sbb
push
add
not
mov
push
pop
mov
or
jbe
test
jno
jp
mov
ins
push
jge
sbb
in
iret
ret
or
iret
mov
daa
adc
jb
rcl
mov
loop
scas
into
fwait
and
xor
(bad)
shrd
cmp
ss
repz
rcl
mov
daa
movs
into
ret
jnp
cmp
ror
add
(bad)
fcmovbe
mov
add
adc
sub
inc
cmps
sbb
jns
enter
ins
mov
pushf
aas
outs
push
lods
mov
adc
int3
push
sbb
neg
sbb
in
adc
xor
std
cld
cwde
rol
xchg
mov
sbb
adc
pop
je
sub
retf
aas
pop
inc
dec
imul
addr16
push
mov
adc
jmp
iret
loope
cmp
ficomp
push
(bad)
iret
and
jge
outs
mov
mov
mul
sub
cmp
mov
lock
iret
xchg
pop
test
jmp
xor
fcomp
xchg
mov
mov
std
push
push
xor
push
test
sub
jge
pop
mov
push
(bad)
neg
cmp
fwait
arpl
int3
aas
adc
in
sbb
xor
pop
fimul
int3
ins
mov
sub
pop
sbb
cmp
test
mov
adc
pop
pop
or
sti
adc
mov
adc
mov
or
jns
mov
mov
push
(bad)
fld
aas
movs
mov
mov
lds
sub
jl
mov
into
pop
dec
add
out
ja
lods
sbb
in
mov
call
and
(bad)
mov
int
fidivr
xor
enter
shl
ds
sub
test
lahf
cmp
and
pop
add
ins
push
mov
out
jecxz
out
mov
setg
cmp
inc
fnstcw
mov
xchg
xor
sbb
icebp
push
or
ss
lds
push
xor
in
ss
ss
shr
test
or
mov
jae
cwde
sub
xchg
in
mov
das
add
imul
mov
xchg
bnd
mov
pop
cmp
cmps
lods
inc
sbb
jmp
out
movs
sbb
mov
repnz
outs
repz
leave
mov
or
and
jb
movs
mov
loopne
jp
cmps
xchg
shr
out
cli
xor
test
rol
xchg
loopne
into
cmp
addr16
adc
in
sub
aas
aad
push
push
sbb
cmp
xchg
(bad)
jne
push
push
lods
cmps
pop
jmp
mov
sub
dec
(bad)
(bad)
jnp
scas
dec
frstor
adc
xor
fld
mov
pop
mov
and
pop
push
cmp
inc
jmp
dec
hlt
stos
test
into
adc
add
xchg
cmp
movs
push
sahf
sbb
cmp
push
(bad)
fwait
outs
sar
ins
xchg
imul
push
test
and
and
jmp
adc
scas
xchg
repnz
push
sub
pushf
(bad)
mov
sbb
jg
xchg
jmp
ror
mov
xlat
mov
ins
adc
or
lods
inc
jecxz
(bad)
sbb
cld
push
rcr
sub
cli
jnp
ret
popa
out
xchg
add
push
cmps
rcr
sbb
cmp
and
ret
add
std
jmp
mov
js
or
sbb
or
add
dec
jnp
fild
xchg
dec
in
or
cld
sub
push
gs
lea
test
ss
cmp
inc
stc
dec
out
retf
outs
and
daa
lods
stos
cld
inc
int3
mov
push
scas
mov
push
mov
or
cmp
retf
fcomp
xlat
in
cmp
in
aaa
xchg
adc
jbe
mov
loop
and
adc
outs
or
ret
lea
hlt
inc
ret
and
push
cmp
js
retf
adc
out
loope
sti
stc
leave
je
pop
(bad)
jae
cmp
nop
ja
mov
xlat
jae
mov
std
bound
mov
bnd
call
lahf
jp
ror
fldcw
jl
xchg
js
jecxz
add
mov
inc
aas
cmp
retf
adc
das
xchg
add
movs
pop
mov
pop
mov
mov
pop
inc
das
daa
pop
outs
xor
(bad)
cmc
sub
cli
into
mov
fs
retf
int
ins
cmp
dec
sub
(bad)
hlt
sub
mov
mov
test
sbb
dec
adc
fst
stos
fdivr
js
shl
push
push
xchg
pop
adc
call
hlt
in
mov
pushf
inc
adc
add
out
jns
sar
repz
push
mov
xor
xlat
cmps
clc
jp
lods
inc
xchg
loope
ret
cmp
jecxz
sub
xor
aaa
out
stos
aam
in
bound
mov
xor
leave
adc
xor
les
outs
jmp
adc
call
dec
cld
mov
jno
mov
xchg
rol
addr16
jecxz
xor
outs
xor
mov
push
xchg
jg
xchg
int3
nop
pop
add
sbb
push
jnp
addr16
sub
clc
jmp
or
mov
dec
aam
push
push
add
inc
inc
or
outs
rcr
outs
add
mov
dec
push
push
pop
fcomi
sub
(bad)
jmp
xchg
cmps
mov
and
adc
add
jnp
add
mov
das
xor
pop
lea
xor
mov
out
and
cld
sub
leave
mov
xchg
adc
cmps
ja
adc
jns
fadd
and
xchg
iret
test
ins
mov
cmp
xchg
inc
inc
xor
fs
jl
mov
mov
fistp
jae
add
xchg
inc
inc
dec
xor
jge
ret
dec
and
mov
aaa
aad
pop
ja
imul
iret
and
arpl
out
xchg
lods
ret
jle
fcom
jle
lods
mov
aam
jl
add
dec
test
add
es
add
mov
inc
cmp
mov
mov
mov
arpl
mov
inc
je
mov
fidivr
adc
daa
push
sar
stos
fidiv
(bad)
pushf
aas
fnsave
jmp
cwde
cmp
or
jle
sbb
in
nop
inc
jb
mov
loop
test
fsub
add
sbb
mov
xlat
lods
test
lgs
cmps
inc
ins
pusha
loope
push
xlat
add
jo
push
sub
lods
jb
adc
(bad)
into
cmp
jns
push
aad
pop
enter
punpckhbw
add
adc
adc
mov
js
retf
cmp
call
mov
lahf
mov
mov
mul
sub
fistp
mov
add
pop
dec
cmp
pop
sbb
bound
(bad)
jmp
mov
aaa
ins
mov
loopne
out
jmp
push
(bad)
xor
pop
mov
cmps
enter
stos
xchg
inc
(bad)
jmp
mov
jle
xchg
test
mov
push
sbb
(bad)
mov
ret
mov
lods
rol
sub
mov
js
mov
inc
xor
or
addr16
das
xchg
sub
jo
xchg
retf
fimul
pop
or
lods
nop
repnz
iret
ror
sub
(bad)
imul
je
inc
in
inc
lock
jns
dec
cmp
cmp
jp
stc
retf
pop
mov
mul
jle
mov
ja
push
ret
icebp
cs
sub
jo
and
fimul
mov
xor
jcxz
add
jne
mov
fisttp
pop
imul
add
test
das
(bad)
div
(bad)
jmp
mov
inc
push
add
and
jg
pop
mov
xchg
fwait
(bad)
loopne
jb
outs
xor
inc
push
aad
adc
mov
repz
(bad)
out
call
das
sbb
aaa
mov
mov
and
mov
vmovsd
popa
adc
mov
add
xor
add
cwde
push
lock
bnd
xor
cmp
mov
ja
(bad)
sar
mov
xchg
hlt
jmp
jl
loopne
xor
scas
aaa
lock
jns
add
sbb
(bad)
scas
jno
jmp
fsub
fwait
jo
sub
movs
fidiv
dec
dec
(bad)
mov
sub
sti
push
mov
adc
imul
mov
in
fimul
dec
add
pop
clc
sub
bnd
rol
sub
ins
aam
lock
jl
das
push
jbe
push
aas
mov
hlt
sbb
jno
and
xor
aam
and
xacquire
outs
aas
shr
lea
(bad)
or
out
push
sub
mov
test
mov
stos
xor
and
mov
push
mov
fldenv
lods
and
mov
test
imul
mov
into
test
test
rcr
push
pop
add
aad
inc
mov
js
pusha
repz
and
push
adc
mov
(bad)
add
test
movs
(bad)
out
fs
xchg
sbb
mov
mov
push
sub
retf
or
mov
cmp
or
out
cmp
test
add
out
lods
mov
fstp
xchg
clc
or
jo
and
cmp
inc
aas
push
(bad)
lds
and
ins
push
out
inc
cmp
ret
and
scas
mov
mov
into
add
lock
je
loope
inc
push
imul
(bad)
mov
and
ret
leave
outs
mov
fadd
pop
inc
mov
xchg
and
jne
imul
fldenv
jmp
cmp
scas
fwait
shl
mov
inc
jae
arpl
bound
test
jl
sbb
adc
fdivp
adc
test
push
(bad)
call
daa
xchg
scas
pop
stos
pop
shl
ja
sbb
cmc
sbb
in
int3
(bad)
cli
push
stc
mov
xchg
sbb
add
and
and
mov
or
jle
push
retf
retf
sub
mov
cmps
loopne
or
inc
and
mov
push
fisttp
or
fbstp
mov
and
cld
fisubr
cmp
mov
dec
and
loope
pop
sti
cs
aam
call
sbb
int3
mov
pop
les
or
fiadd
or
scas
(bad)
rol
sti
sbb
sub
fdiv
pusha
mov
je
mov
push
adc
cmp
xchg
clc
pusha
cmp
mov
jb
push
pop
push
or
mov
mov
jecxz
scas
nop
cwde
and
clc
or
xor
inc
mov
popa
and
pop
jmp
xchg
int
xor
cwde
jbe
(bad)
stc
push
scas
lods
cwde
mov
shr
shl
dec
gs
lods
bnd
bound
fnstenv
pop
xor
repnz
xchg
jns
shl
(bad)
popf
fadd
jne
bound
leave
push
sub
adc
loopne
sbb
mov
add
pop
lods
or
xchg
xchg
mov
sub
jo
cs
mov
test
inc
gs
dec
xchg
ss
xor
push
hlt
(bad)
daa
or
inc
xor
ss
jb
loopne
cmp
and
int
pop
or
adc
(bad)
rol
leave
call
fld
nop
xchg
jae
fild
jno
ins
cmp
dec
push
fisttp
inc
push
out
fmul
jnp
fsub
out
adc
and
retf
in
push
stc
fxch
rcr
sbb
jge
and
cmp
fld
loop
fistp
jno
sub
jg
jae
inc
nop
add
jmp
sbb
test
add
mov
xor
loop
inc
xor
aam
test
push
pop
dec
jp
test
scas
inc
adc
in
loopne
loopne
data16
lock
cwde
jae
shl
jns
xor
sbb
push
pushf
pushf
xchg
mov
cdq
popa
inc
lods
leave
adc
dec
push
jecxz
inc
jle
jo
jg
std
je
cmp
outs
in
out
mov
inc
jae
jno
movs
gs
mov
fs
or
jmp
hlt
nop
add
jo
test
sti
(bad)
xor
cdq
loopne
movs
sbb
cli
xor
xchg
out
mov
add
jo
push
pop
cmp
jnp
bound
sub
daa
nop
or
out
outs
push
hlt
aam
nop
(bad)
sbb
or
aad
sti
je
repz
out
scas
stos
js
and
pop
lds
push
jg
jb
xchg
fdivr
mov
mov
cld
call
adc
(bad)
mov
mov
push
frstor
jbe
fdivr
(bad)
std
cs
es
pop
cmp
or
(bad)
pop
pop
popf
add
push
mov
add
adc
jbe
(bad)
out
mov
rol
das
enter
jmp
and
add
mov
jp
outs
in
sahf
adc
(bad)
fidiv
push
xor
mov
loop
adc
xchg
or
lods
sbb
stc
fucomi
xlat
lds
aad
inc
xor
inc
mov
fld
dec
push
xor
mov
add
pop
test
xchg
xor
xor
mov
mov
in
pop
cmp
aam
dec
(bad)
loop
fnstcw
ja
je
(bad)
dec
fwait
xlat
ins
mov
xchg
jns
loopne
inc
xchg
aas
int3
and
dec
pop
inc
fcom
cmp
in
xchg
jne
jno
mov
stos
xchg
ficom
and
cld
xor
mov
dec
in
shr
or
or
ins
mov
in
add
fisub
aam
stos
icebp
push
pop
dec
inc
or
inc
mov
and
dec
(bad)
mov
in
(bad)
mov
sbb
or
test
movs
aad
cld
ja
setle
into
xor
fisub
fstp
xor
imul
cli
fsub
js
add
ja
lahf
test
test
dec
fdivr
pop
mov
scas
push
cmp
inc
cs
fwait
mov
mov
jmp
fmul
fiadd
(bad)
icebp
les
push
mov
xchg
inc
push
lea
pop
(bad)
xlat
cmp
adc
sub
push
fucomi
daa
or
pop
stos
or
fwait
call
popf
sbb
das
lods
cmp
adc
add
jbe
add
or
sub
mov
inc
sbb
mov
rcl
dec
adc
jge
dec
outs
in
(bad)
pusha
les
(bad)
mov
dec
(bad)
jnp
into
jmp
xor
or
scas
mov
push
leave
sub
xor
into
mov
ret
jmp
cmps
in
jmp
test
fnstsw
ss
(bad)
lock
mov
out
cmp
shr
out
push
ins
nop
xchg
and
dec
mov
mov
xchg
push
mov
mov
js
push
int3
ja
in
inc
cmc
cwde
cmp
lea
jns
test
in
fisub
int3
and
rcl
iret
sti
(bad)
popf
add
and
pop
jl
icebp
sub
in
sbb
out
jb
sub
stos
sbb
cmp
loopne
retf
mov
adc
jne
loope
ret
in
mov
dec
js
repz
inc
fdiv
and
out
adc
sub
mov
xchg
xor
into
mov
sub
push
add
push
sub
dec
clc
dec
xchg
mov
or
dec
dec
jmp
inc
mov
sbb
jp
mov
and
mov
pop
fwait
int3
call
sbb
outs
mov
lods
dec
loop
lods
mov
inc
in
outs
repz
movs
mov
mov
push
mov
out
cwde
cmps
push
imul
xchg
sbb
push
inc
out
aad
cmp
mov
aam
shl
movs
mov
add
add
jns
push
push
(bad)
cli
mov
js
adc
cmps
sbb
imul
arpl
int
(bad)
mov
imul
cwde
pop
adc
ins
mov
cmp
xor
in
icebp
test
rol
dec
daa
ins
mov
add
or
jl
inc
or
adc
mov
mov
sbb
xchg
lods
out
mul
add
cmps
mov
add
add
jl
inc
xchg
or
cmps
sahf
ins
enter
xor
pop
cwde
fld
(bad)
cmps
xchg
sbb
addr16
mov
dec
out
xor
push
rcl
push
cmp
push
sbb
dec
scas
nop
add
ret
cmp
adc
pop
add
fldenv
mov
push
popa
jmp
fisubr
fdivp
xchg
and
mov
test
ror
sar
out
stos
lods
out
cmp
rol
xchg
daa
aaa
mov
mov
call
mov
not
mov
adc
aad
cs
test
pushf
addr16
push
rcl
sub
add
inc
mov
mov
rcl
or
inc
mov
push
mov
fcomi
jbe
je
add
movs
dec
mov
sub
sub
cmps
adc
rol
xlat
sti
add
test
inc
inc
jno
cmps
enter
cmc
mov
je
sbb
cmp
xor
push
outs
jle
cmps
mov
add
xor
dec
js
mov
movs
jb
lock
(bad)
add
retf
add
(bad)
mov
imul
enter
popa
sub
dec
cli
outs
adc
mov
mov
das
dec
jg
fdiv
push
xchg
fidiv
cmp
(bad)
std
mov
mul
aad
add
rcr
cmp
gs
ror
(bad)
(bad)
push
jne
sub
inc
mov
push
add
or
jp
shl
xchg
lock
mov
push
leave
icebp
test
add
sbb
aas
test
and
and
push
add
sub
aas
cld
or
sbb
mov
adc
ins
mov
sbb
retf
call
loopne
jnp
into
sub
into
push
adc
mov
sar
dec
out
pop
mov
ret
jmp
add
jbe
cmp
xchg
pop
lock
fmul
pop
or
sahf
mov
(bad)
hlt
pushf
pop
inc
inc
dec
inc
cli
xchg
unpckhps
sub
not
sbb
scas
dec
or
test
fadd
test
rcr
test
inc
hlt
jle
test
out
jno
out
sbb
mov
jae
mov
repz
or
jle
stc
inc
mov
int
sbb
or
inc
push
int
jmp
mov
mov
xor
jecxz
mov
test
mov
std
jo
xor
cmp
and
inc
sub
inc
and
adc
test
mov
ffreep
in
and
(bad)
fcmovnbe
and
fcmovnbe
movs
add
push
dec
adc
call
test
in
gs
das
xchg
cmp
icebp
dec
aas
pop
fxam
jmp
cwde
jo
push
pushf
stos
add
cmp
ds
gs
adc
adc
sub
aas
and
pop
inc
pop
pop
xor
aaa
(bad)
lods
xor
add
mov
popa
mov
test
rcr
pop
mov
dec
(bad)
lods
xor
shl
jbe
push
sahf
xchg
jns
and
fcom
cmp
jb
dec
lock
push
aas
cmp
adc
jnp
pusha
in
push
xlat
xlat
sbb
sub
and
jo
neg
dec
sti
outs
add
ficom
adc
push
dec
test
(bad)
mov
add
arpl
pop
push
dec
sbb
fst
mov
push
aad
sub
or
movs
lea
(bad)
push
jle
mov
mov
(bad)
dec
sbb
aas
mov
jae
out
and
pushf
stc
mov
jp
cmps
lods
(bad)
push
xchg
mov
mov
retf
jp
fisttp
jb
test
bound
sahf
jne
test
cli
cmp
adc
inc
fmul
in
(bad)
mov
sub
sub
bound
fdiv
and
xchg
jns
fcmovnb
ja
out
movs
push
xor
push
adc
jle
and
sub
or
pop
push
call
mov
pop
hlt
pushf
xchg
test
adc
push
aaa
out
into
rol
imul
aad
jnp
dec
mov
xchg
ins
push
xchg
(bad)
cmc
sub
stos
cmp
xlat
dec
hlt
mul
(bad)
pusha
ins
xchg
jae
xor
enter
inc
retf
ds
call
and
dec
push
es
add
lahf
test
push
jno
and
stos
mov
test
cmps
fstp
cmp
mov
sbb
fnstsw
out
test
mov
clc
xchg
out
stos
cmp
adc
mov
xchg
movs
cmps
or
xor
gs
fs
push
mov
loopne
ror
repnz
and
call
mov
pop
jge
mov
push
iret
pop
jmp
pop
pop
repz
inc
mov
mov
push
lahf
outs
es
inc
sub
cvtpi2ps
cdq
sbb
mov
fisub
inc
dec
xor
adc
adc
fadd
test
cld
(bad)
int3
jecxz
jnp
idiv
pcmpeqw
lods
sub
inc
clc
mov
jmp
mov
sti
jo
lahf
imul
push
cmp
sbb
js
(bad)
jae
pop
out
outs
adc
push
loop
and
outs
cdq
fldenv
(bad)
icebp
ret
mov
outs
xchg
cwde
pop
xor
adc
and
cdq
and
mov
add
enter
popf
xor
adc
rcr
pushf
mov
(bad)
js
(bad)
jl
stos
out
and
xchg
das
xchg
mov
scas
mov
in
int3
sub
mov
dec
mov
imul
and
int3
jns
iret
out
sbb
and
fild
mov
jle
fwait
call
fwait
cmp
cmp
pop
test
mov
les
jg
jmp
mov
lahf
rol
adc
inc
and
sbb
outs
mov
mov
outs
mov
gs
jbe
mov
and
xchg
mov
inc
mov
push
pusha
inc
lahf
push
or
dec
outs
fdivr
mov
bound
jno
jp
ins
pop
inc
je
paddd
jb
mov
(bad)
mov
jmp
jmp
and
ins
push
jp
sub
pop
cs
xor
dec
dec
xor
dec
pop
sahf
lods
push
xor
loopne
adc
popa
xor
pop
mov
fild
scas
dec
aaa
outs
pushf
stc
shl
int3
fcomp
pop
leave
sbb
aas
mov
call
call
mov
data16
xlat
(bad)
in
in
pop
cmc
lea
call
jo
push
pop
popf
and
dec
lds
cmp
neg
dec
xor
scas
ret
sub
add
sti
movs
enter
cmp
in
cmps
xlat
xor
ror
sbb
and
dec
ss
inc
inc
cmc
dec
xchg
retf
aaa
pop
test
sar
lods
retf
add
cdq
nop
or
sub
mov
enter
mov
mul
aas
imul
mov
lea
jecxz
movs
cmp
lea
pushf
dec
scas
push
sub
mov
mov
dec
cmp
mov
dec
adc
and
push
sub
jne
je
cld
xlat
test
movs
jns
in
cmps
mov
pushf
pushf
jp
mov
aas
leave
adc
mov
mov
mov
jg
aam
pop
mov
stos
mov
dec
fwait
es
out
mov
lahf
test
push
adc
addr16
div
inc
sub
sub
xor
mov
dec
dec
dec
inc
dec
(bad)
and
dec
push
stc
retf
adc
ja
sub
aad
cmp
push
jmp
pop
mov
and
pop
inc
loopne
nop
inc
stc
lds
or
push
jae
arpl
push
cmp
cmp
pop
adc
or
out
adc
pusha
jnp
repnz
inc
stos
pop
jb
add
(bad)
inc
xor
pop
mov
dec
add
or
pop
pop
rcl
inc
push
mov
les
outs
bnd
push
retf
xchg
pop
add
(bad)
or
adc
cld
mov
ins
or
daa
mov
mov
lahf
outs
and
mov
mov
mov
pop
sub
outs
mov
aad
loopne
adc
jbe
xor
mov
ins
out
push
cmp
je
hlt
xchg
pop
mov
adc
inc
mov
or
xchg
aaa
test
jmp
shl
addr16
push
jbe
iret
clc
pop
lahf
or
popf
sbb
pop
popa
rol
fistp
sub
sbb
push
movs
out
push
fist
jle
pop
fadd
ror
or
mov
outs
lods
jmp
in
adc
outs
gs
xchg
imul
js
cmp
sbb
aad
aad
xchg
sti
xor
cmps
push
cmp
movs
ret
idiv
loop
xor
int
aas
or
ss
xchg
jno
movs
sbb
dec
cmps
inc
xchg
in
pop
sahf
xlat
in
(bad)
adc
jg
cmp
mov
xor
out
cld
xchg
xor
pushf
gs
adc
movd
pop
xor
fimul
add
xchg
inc
daa
int
mov
push
jl
push
test
dec
mov
jno
jns
adc
adc
mov
add
jne
jns
call
dec
daa
mov
jp
(bad)
mov
lods
mov
push
or
jnp
adc
or
jmp
out
mov
or
xor
add
or
stos
jne
repz
pop
jno
xor
xor
int
out
jl
cli
popa
mov
mov
and
addr16
fwait
out
in
movs
clc
pop
outs
shl
aaa
add
test
in
mov
data16
aad
mov
adc
lahf
push
xlat
in
fbld
mov
fld
push
ins
loopne
push
rcl
cmps
popa
imul
mov
xchg
mov
pop
mov
jb
pushf
dec
push
nop
dec
adc
xchg
cmps
mov
mov
imul
movs
fisubr
push
mov
or
add
scas
cmp
push
push
xchg
mov
and
mov
add
cs
xchg
pop
dec
push
dec
jmp
mov
fcom
fsubr
aam
mov
sub
adc
adc
movs
cmp
pop
or
mov
(bad)
hlt
icebp
jnp
das
movs
and
or
out
arpl
sti
fisub
aas
movs
test
and
xchg
mov
inc
in
lock
daa
adc
sbb
ret
push
pop
scas
cmp
pusha
pushf
mov
ins
fmul
dec
xor
mov
pop
xor
xchg
push
or
out
stc
mov
data16
pusha
fnsave
or
push
popa
out
xchg
fdivr
mov
in
mov
fwait
addr16
add
mov
mov
mov
dec
je
cld
xchg
xchg
neg
ins
pop
das
lods
inc
jmp
(bad)
lds
cmc
and
push
scas
repz
pushf
(bad)
fsin
xor
xchg
test
inc
inc
pop
sub
fmul
jecxz
fxch
loopne
out
ins
or
add
sub
inc
jl
jecxz
adc
addr16
jno
mul
and
pop
es
dec
and
dec
mov
fldenv
stos
xor
fcomp
in
dec
sub
sahf
or
mov
push
dec
cmp
rol
xor
in
fisttp
lahf
push
call
cld
sub
jge
movs
fld
fimul
cmp
popf
mov
jnp
push
adc
jb
sbb
fpatan
inc
mov
or
pop
leave
xor
jecxz
pop
xor
jno
les
add
movs
mov
int3
cs
retf
mov
ja
cli
(bad)
icebp
sahf
xor
pusha
gs
xchg
out
jns
mov
pop
fist
ss
ror
fimul
popa
ins
xchg
mov
jo
push
test
and
hlt
pop
xchg
dec
cs
xchg
and
push
loope
or
cld
inc
mov
sbb
xchg
in
aas
jg
mov
mov
mov
js
mov
push
int
add
call
pop
pop
sbb
scas
lock
mov
rcr
rol
cli
mov
or
cmc
(bad)
arpl
xor
xor
or
push
in
int3
daa
dec
xchg
call
pop
lods
leave
aas
ret
push
clc
sbb
jg
call
jl
xchg
xor
sub
rol
ficomp
call
clc
fsubp
test
in
mov
(bad)
div
or
adc
es
retf
cmp
dec
mov
push
rcr
js
inc
sbb
and
mov
sti
ins
retf
adc
(bad)
retf
ds
jns
xchg
or
pop
cmp
inc
and
sar
repz
cmp
aas
xor
mov
out
xchg
jo
imul
lea
inc
bound
adc
clc
in
or
ins
jmp
mov
jle
pop
adc
inc
pusha
dec
dec
fcom
dec
or
mov
repnz
mov
dec
das
data16
mov
add
mov
mov
bswap
cmc
ret
adc
jmp
jl
or
ret
fldenv
repz
scas
and
and
bound
les
and
int
mov
push
jne
bound
dec
hlt
lock
(bad)
and
mov
push
push
push
and
mov
loopne
test
mov
cmp
pop
mov
sub
add
xor
shr
xor
xchg
shl
mov
call
add
push
pop
movs
sub
sub
push
adc
xchg
(bad)
cmps
xchg
pop
sub
shl
ins
ja
xor
repnz
push
addr16
retf
and
sbb
les
mov
cld
adc
inc
jmp
jbe
cmp
daa
push
hlt
mov
js
and
xor
cs
mov
jp
xor
xor
mov
std
mov
cmp
cmp
imul
ffreep
pop
pop
or
mov
loope
pop
cmc
adc
fwait
aaa
std
out
cwde
mov
out
fs
and
lods
mov
das
test
rcr
xor
or
rol
test
sbb
gs
enter
or
adc
mov
or
mov
push
aas
mov
xor
xor
aas
mov
int
mov
xchg
pusha
gs
adc
icebp
add
or
push
push
fsub
scas
sar
ss
popf
xchg
js
jmp
add
add
xlat
daa
and
adc
mov
shl
cwde
mov
bound
or
add
inc
imul
pop
inc
sbb
movs
sub
fnstcw
test
adc
into
fs
mov
and
dec
fist
jecxz
and
jge
ins
pop
jmp
jno
mov
(bad)
cmp
jmp
in
pop
or
add
(bad)
xor
fcmove
mov
or
pop
sar
sub
adc
or
sbb
mov
aad
test
cmp
ins
jge
icebp
sub
imul
out
mov
bswap
sar
mov
mov
call
jns
inc
es
pushf
bound
out
mov
mov
mov
(bad)
sti
xchg
jp
mov
push
pusha
mov
pop
cmc
sbb
dec
cmp
das
cmc
push
sbb
loopne
add
sub
nop
xchg
data16
pop
mov
aaa
lods
mov
ror
test
jp
mov
push
mov
mov
and
dec
addr16
ins
cld
and
xor
dec
fdivr
mov
enter
loopne
call
jmp
ret
not
in
ret
xor
cmp
mov
in
pop
jl
inc
and
xor
clc
inc
sbb
cmp
add
and
test
popf
mov
int3
jno
push
loope
ins
push
scas
xor
sbb
aaa
pop
mov
gs
push
fidivr
cld
jl
jecxz
into
inc
xchg
es
jmp
aaa
bound
popf
mov
cmp
sbb
mov
jbe
jmp
sbb
ss
pusha
loopne
inc
mov
fs
push
push
cs
dec
sub
lods
mov
jmp
push
mov
popa
dec
jno
cmp
les
lock
loop
cwde
mov
fisubr
cli
jmp
xchg
pop
pop
mov
jg
scas
test
hlt
and
mov
mov
mov
dec
pop
fidivr
in
pop
scas
add
jmp
je
mov
adc
inc
push
jmp
jge
mov
sbb
adc
adc
cli
pop
mov
imul
fst
dec
jmp
gs
or
movzx
xor
mov
out
bound
icebp
stc
fiadd
into
pop
or
inc
inc
mov
cmp
aam
outs
add
(bad)
dec
jle
dec
movs
in
loope
popa
mov
dec
xor
dec
aaa
mov
aaa
inc
mov
add
or
into
push
mov
jae
loopne
cmp
inc
out
aad
mov
add
shr
adc
and
sub
push
push
ja
cmps
sar
aad
mov
adc
popa
in
scas
xchg
ins
or
xor
fs
in
xchg
mov
sub
mov
ror
js
hlt
sbb
addr16
mov
mov
cmp
jnp
icebp
sbb
pop
cli
mov
test
mov
or
ins
movs
dec
xchg
sbb
xlat
mov
push
dec
xchg
xor
cmps
clc
and
fucomip
xor
aas
xchg
rcr
(bad)
lods
out
jnp
jo
push
pusha
ds
push
jecxz
push
lds
sbb
jg
jle
sub
movs
or
pusha
cmc
xlat
lds
adc
mov
mov
dec
leave
call
push
pop
push
ins
js
push
jno
cmc
fnstsw
scas
push
stc
mov
adc
push
loope
lea
not
cmps
jb
push
mov
adc
(bad)
mov
(bad)
cmp
enter
retf
add
jp
call
cli
adc
and
and
test
cmp
inc
ret
mov
mov
mov
mov
mov
jb
std
cmp
xor
inc
mov
(bad)
(bad)
dec
dec
hlt
push
shl
repz
cdq
adc
inc
in
xor
cdq
mov
jge
lods
das
(bad)
(bad)
in
dec
mov
jns
and
int
lds
neg
push
mov
dec
jl
or
pusha
xchg
sub
test
push
xchg
jo
sbb
jmp
jle
cli
pop
or
sar
lds
aaa
movs
xchg
mov
je
mov
sbb
fsubp
xor
jl
daa
in
mov
pop
xor
call
jge
mov
das
dec
mov
outs
sub
fadd
cwde
(bad)
aaa
gs
sbb
push
mov
jnp
adc
(bad)
dec
mov
mov
pop
rcl
cmp
test
push
xchg
sbb
shl
lock
loope
dec
cwde
jle
sbb
fsub
dec
into
xor
retf
mov
cmps
xor
in
pusha
pop
imul
mov
mov
out
jnp
out
add
mov
lea
xlat
bound
fisubr
inc
mov
push
xor
inc
mov
pop
mov
pop
les
in
sbb
(bad)
pop
pop
jnp
mov
je
enter
xor
loop
ins
pop
frstor
int
inc
inc
loop
xor
lods
push
into
sub
fcomp
sbb
nop
call
in
fucomip
push
int
and
addr16
push
cmp
(bad)
mov
sbb
test
aaa
dec
hlt
lea
movs
repz
mov
dec
inc
in
aaa
mov
dec
clc
xor
sbb
dec
cmc
mov
inc
addr16
jp
(bad)
popf
fist
pop
dec
and
add
les
jno
pop
sub
mov
js
jle
adc
cdq
mov
shr
lock
int
xlat
jl
push
sbb
pop
inc
imul
(bad)
pop
sub
push
scas
add
mov
push
add
adc
sar
int
push
cli
sti
mov
loop
mov
pushf
xchg
mov
scas
daa
dec
adc
pop
out
sbb
ja
add
xor
cmp
push
in
mov
lods
pop
or
jns
push
fnstcw
out
pop
inc
or
inc
dec
cmp
xchg
adc
addr16
inc
xor
mov
adc
in
(bad)
mov
(bad)
mov
pop
inc
fs
dec
push
and
push
pop
fcmove
and
pcmpgtw
lock
fs
cmp
mov
daa
inc
dec
push
ror
(bad)
mov
sti
popa
cmp
sub
xchg
shl
scas
inc
pop
(bad)
cli
sbb
adc
js
pop
(bad)
jp
call
pop
stos
jmp
(bad)
(bad)
jne
adc
mov
cmps
mov
out
and
mov
mov
je
pop
push
lods
mov
repz
xchg
mov
iret
shl
jp
xor
pop
mov
inc
call
or
shr
loope
test
xchg
jecxz
mov
xlat
mov
pop
pop
jb
push
aad
imul
icebp
(bad)
pushf
mov
pop
or
aaa
iret
mov
push
daa
out
fsubr
cmp
jns
in
jns
ss
iret
sbb
inc
shl
pop
cld
cmp
stos
aam
jnp
cmps
cdq
sub
mov
add
lods
mov
add
mov
sbb
rcr
call
stc
cdq
jo
jns
pop
shl
sub
xor
out
sbb
add
sar
shl
add
jmp
mov
mov
jg
xchg
std
leave
fwait
or
add
cmp
inc
ja
repnz
adc
test
aad
scas
inc
sti
adc
push
adc
call
clc
push
add
cmp
cs
or
push
hlt
out
sub
or
inc
fld
stos
in
adc
push
push
inc
inc
pop
in
pop
sub
inc
push
add
int
jno
lods
cmps
jnp
out
(bad)
nop
ss
repz
cmp
ret
jnp
push
in
push
test
pop
dec
and
pop
pop
sub
mov
dec
sbb
and
jb
push
and
lea
add
es
imul
clc
push
mov
pop
outs
shr
push
outs
ret
or
das
push
push
cmp
push
jae
call
inc
pushf
popf
pusha
xchg
xor
mov
out
and
or
jno
xor
ins
inc
test
sbb
push
lea
push
aad
fistp
cs
fmul
inc
int3
lods
jb
add
aaa
outs
hlt
or
push
movs
mov
inc
or
aam
enter
jo
fdiv
mov
inc
test
shl
call
dec
inc
cs
(bad)
int
test
in
dec
cmp
rcl
pop
clc
pop
inc
jmp
ins
movs
cmp
xlat
push
fdivr
shr
je
je
sbb
ja
jno
stc
cmps
dec
rcl
or
pop
jnp
add
fnstcw
lahf
mov
xchg
neg
sub
dec
xchg
std
xor
or
dec
dec
inc
mov
pop
or
out
rcl
jecxz
in
outs
fmul
cmc
ja
mov
and
mov
int3
mov
xchg
loop
push
mov
stos
pop
mov
add
(bad)
out
(bad)
or
lods
cmc
ret
retf
movs
or
(bad)
jmp
retf
test
sahf
pushf
cdq
pusha
call
icebp
push
lods
sbb
add
add
out
add
sbb
icebp
lea
or
rcl
repnz
jp
sbb
pop
repnz
(bad)
pop
out
aad
cwde
test
inc
sub
sub
xlat
pop
pop
dec
inc
(bad)
inc
inc
and
jle
push
push
int
push
js
aam
popa
dec
(bad)
dec
sti
mov
pop
and
mov
in
xor
add
rol
pop
cdq
add
push
xchg
addr16
xlat
fisubr
xchg
adc
(bad)
fwait
sub
mov
shl
ins
rol
adc
shr
mov
imul
(bad)
xor
pop
pop
sub
sbb
scas
(bad)
in
lea
sbb
mov
sub
ret
cmps
movs
dec
xor
xlat
mov
stos
mov
dec
aas
mov
imul
pop
mov
sub
leave
push
sbb
ins
repnz
std
xor
push
nop
adc
jp
clc
lahf
pop
push
les
das
mov
arpl
in
dec
cmp
pusha
add
out
lea
test
or
xor
aaa
xor
pop
ret
push
test
test
pop
jnp
push
sahf
mov
(bad)
lahf
xchg
shl
mov
stc
sbb
stos
and
xor
dec
xchg
inc
imul
pop
and
cmp
mov
mov
ud1
push
ss
mov
imul
clc
jle
jmp
xor
iret
je
xor
mov
mov
rcl
pop
push
sbb
xchg
and
add
sbb
adc
lds
shr
sub
mov
xchg
mov
sub
fwait
inc
or
add
or
je
loop
push
cmp
push
(bad)
std
jge
mov
pop
sti
mov
push
ds
and
and
sahf
(bad)
loopne
adc
outs
push
in
rcr
push
ins
popa
retf
not
mov
out
inc
inc
pushf
adc
xlat
stc
mov
call
push
inc
cmps
or
mov
nop
mov
repnz
or
in
lock
lods
push
mov
sub
ins
mov
pusha
js
les
sub
js
xor
push
lods
std
lods
mov
jae
adc
fdiv
or
outs
and
pop
and
cwde
pop
and
or
add
daa
sub
iret
push
add
and
jo
xor
mov
xchg
inc
test
aas
pop
test
mov
daa
into
pop
mov
push
fisubr
xchg
cmp
mov
mov
push
and
lods
xor
(bad)
and
fs
sti
or
add
pop
lock
(bad)
mov
jp
pop
cs
test
fistp
jmp
rcl
ret
ds
pop
inc
sub
test
stc
stos
jb
in
jmp
(bad)
pop
jbe
cmp
pop
movs
push
push
fmul
or
dec
mov
pop
mov
jno
mov
aaa
lods
sbb
pusha
jne
fstp
in
das
add
or
fldcw
mov
ja
push
pop
push
xlat
push
mov
inc
inc
adc
pushf
push
mov
daa
clc
call
adc
and
mov
add
enter
xchg
clc
xor
movs
adc
xor
cmp
dec
lds
cs
test
loope
xchg
loop
pop
mov
sub
mov
xchg
push
dec
mov
or
fwait
cld
shl
adc
in
push
add
xor
and
fwait
aam
les
and
imul
pop
push
xchg
mov
push
and
repz
into
sahf
add
lea
adc
pslld
cwde
jl
sub
ss
stc
retf
retf
push
or
in
inc
dec
sub
out
mov
mov
sbb
icebp
xlat
sbb
(bad)
sub
shr
pop
fsub
mov
imul
xchg
out
and
or
dec
movs
pop
mov
pushf
mov
pop
popf
cdq
lock
outs
or
ss
es
adc
push
popf
mov
xor
push
lahf
and
out
adc
xor
fs
pop
dec
xor
jne
fs
aas
mov
pop
and
fldpi
out
push
arpl
cmp
jecxz
cmp
(bad)
(bad)
or
lods
push
or
xchg
mov
dec
rol
xor
sub
(bad)
in
xor
sbb
xchg
add
test
xlat
xor
xchg
sahf
mov
mov
and
test
mov
push
out
ret
add
lock
fadd
aas
sbb
xchg
ins
and
pop
ret
xchg
pusha
jg
cmp
in
pop
cmps
sub
repnz
into
inc
and
xor
ror
xor
fst
data16
movs
mov
adc
pop
fstp
cdq
mov
jmp
stos
mov
cmp
sbb
dec
outs
mov
push
std
call
push
and
mov
out
push
retf
in
aaa
inc
js
int3
rol
cmp
inc
clc
ins
mov
push
fisub
jmp
je
jno
push
in
inc
push
popf
cld
ret
shr
daa
xchg
lods
mov
out
adc
pop
out
pop
pushf
xor
stos
(bad)
sbb
mov
arpl
pop
ds
adc
popa
scas
adc
mov
mov
push
jle
mov
jbe
cmp
fwait
cs
jno
dec
adc
(bad)
push
xchg
sub
xor
dec
push
pop
pop
(bad)
leave
inc
daa
ss
jmp
into
fnsave
leave
hlt
test
inc
aaa
or
aad
push
sti
call
das
mov
pop
jmp
mov
std
repnz
in
xor
mov
jmp
sbb
loop
xchg
pop
mov
adc
sub
and
aam
ss
push
imul
xchg
popf
pushf
aam
jge
pop
jle
mov
std
mov
cdq
or
mov
cmp
aaa
jecxz
push
loope
pop
ret
mov
inc
popf
sub
push
sbb
and
(bad)
jmp
dec
(bad)
adc
mov
imul
mov
shr
les
adc
and
xchg
lahf
push
xchg
rcl
cmp
popa
scas
adc
sub
loop
push
adc
pusha
call
add
leave
adc
jge
cmp
xchg
mul
ins
add
inc
mov
mov
jae
retf
icebp
sbb
mov
dec
add
xlat
pop
inc
ins
outs
push
mov
test
push
xchg
loope
scas
dec
pop
mov
test
dec
xor
mov
sub
mov
inc
mov
pop
inc
icebp
xchg
jle
(bad)
cmp
sbb
lods
xor
jle
pop
jns
xchg
add
(bad)
clc
mov
aad
add
add
push
outs
add
rcl
imul
pop
add
xchg
pop
out
pop
loope
adc
call
fwait
adc
fnstenv
scas
fs
mov
scas
iret
adc
scas
push
inc
addr16
pop
add
icebp
shl
daa
push
rcr
sbb
pop
jne
mov
and
inc
pop
and
inc
cmc
dec
mov
lock
mov
(bad)
mov
aam
(bad)
xchg
push
sub
add
push
inc
xor
ds
movs
push
mov
sbb
or
(bad)
not
jp
call
xchg
or
ss
js
leave
push
xchg
pop
jmp
cdq
cmp
clc
xchg
and
push
iret
lods
pop
pop
fidiv
xchg
push
test
aas
pop
xchg
pop
(bad)
inc
push
mov
sbb
dec
imul
xchg
pushf
out
xor
xor
mov
pop
fstp
(bad)
pop
sub
pop
inc
fwait
hlt
push
push
push
out
int3
ja
into
push
loop
and
jae
or
sbb
xchg
mov
adc
sbb
or
nop
mov
adc
sti
not
imul
nop
xchg
mov
(bad)
test
or
jb
xchg
jnp
in
cmp
in
imul
lock
nop
jb
jmp
pusha
lds
aam
dec
cwde
jb
inc
dec
and
mov
(bad)
xor
repnz
and
adc
push
clc
mov
mov
das
xor
jae
aad
push
imul
sbb
xor
dec
ss
enter
jnp
stos
fisubr
sub
(bad)
mov
jmp
sub
pop
xchg
push
xor
into
jp
mov
jge
jmp
mov
ficom
jle
xabort
mov
xchg
jo
fs
in
lea
nop
loopne
das
add
scas
retf
pushf
xor
add
and
xor
stos
mov
retf
dec
fsubr
or
fdiv
mov
hlt
adc
push
retf
sbb
mov
sub
and
mov
mov
je
pop
fidiv
or
mov
sub
sbb
mov
jmp
cdq
sub
loop
pushf
cmps
sub
mov
(bad)
mov
into
sub
test
ins
push
ret
stc
cmp
retf
dec
xor
icebp
add
mov
fld
jl
jl
ins
cmp
fist
jno
mov
pusha
lahf
hlt
rcl
inc
push
add
js
sti
mov
mov
cmc
pop
adc
mov
fs
xor
js
adc
dec
rcl
cdq
lods
xor
cmpxchg
arpl
and
cmp
test
(bad)
pop
(bad)
(bad)
xchg
sbb
xor
leave
fistp
ret
cmps
add
jp
loope
(bad)
dec
out
sub
pop
pop
jp
mov
fs
ins
or
out
sbb
inc
push
dec
popa
out
add
or
and
mov
scas
cmp
adc
aas
inc
clc
rol
jg
inc
jnp
jl
or
add
sub
and
sub
mov
neg
pusha
jmp
cmp
push
mov
mov
imul
dec
in
push
jle
cli
dec
(bad)
popf
xor
fincstp
movs
lea
jmp
sub
jae
inc
cmp
and
add
sbb
and
call
lods
call
iret
(bad)
inc
mov
aad
mov
dec
push
sar
jp
mov
push
and
mov
popa
cmp
mov
out
push
mov
mov
push
dec
or
pop
(bad)
adc
dec
jo
pop
ins
popa
in
sbb
dec
xchg
xchg
add
push
mov
dec
mov
xchg
inc
in
cmp
mov
out
out
movs
fidiv
mov
(bad)
ss
fs
call
sbb
enter
cmps
cmp
cwde
std
xchg
cs
jbe
jge
mov
adc
or
xchg
sub
jle
xchg
xor
in
mov
into
mov
lods
and
inc
in
cmc
call
xor
imul
fs
bound
popa
mov
iret
mov
in
dec
cmp
sub
fidivr
dec
pop
sbb
dec
jecxz
and
jmp
int
dec
aas
imul
rcl
clc
in
ins
dec
lahf
(bad)
jo
int3
arpl
pop
pop
imul
outs
sub
outs
mov
xchg
loope
fbstp
xor
adc
and
dec
or
pop
dec
std
imul
cmp
punpcklwd
pop
pop
xchg
push
mov
sub
xchg
aaa
imul
loopne
xchg
push
push
aas
push
cmp
out
xlat
movs
aaa
cs
jle
aaa
jb
push
mov
jb
pop
xor
call
mov
or
fld
sbb
push
stc
or
add
cmp
in
mov
(bad)
loopne
ret
mov
mov
pop
es
sar
rcl
mov
jns
inc
push
leave
dec
and
or
imul
sub
fdivr
xchg
or
inc
mov
push
(bad)
xchg
adc
pop
mov
test
add
popa
sbb
adc
gs
mov
inc
out
jle
cmp
out
mov
xchg
lods
ficom
lods
add
sub
stos
cmc
cld
gs
add
(bad)
xor
cli
(bad)
push
loopne
xor
mov
in
adc
jne
shl
and
push
push
or
jmp
aam
lds
jg
mov
add
repnz
lods
mov
add
dec
fptan
xchg
rcr
sar
in
ins
std
test
fstp
call
lds
dec
out
sub
dec
mov
fscale
movs
xlat
loopne
movs
loope
xchg
push
fcomp
sub
movs
scas
xchg
jle
adc
pusha
fisub
jmp
call
mov
(bad)
adc
cmp
pop
push
dec
mov
mov
out
mov
cld
mov
adc
cmp
clc
idiv
cmp
sbb
jb
or
int3
jmp
push
(bad)
dec
repz
mov
sahf
jno
push
xchg
lods
mov
aam
cmp
or
(bad)
mov
ds
push
and
mov
movsx
nop
inc
in
xchg
(bad)
xor
cmp
xlat
push
mov
mov
xor
xchg
in
adc
sub
call
xor
xor
mov
jnp
adc
sti
cli
stos
out
lods
or
stos
mov
mov
mov
and
cmc
int3
and
ror
inc
xor
(bad)
xlat
loop
pusha
cli
mov
(bad)
mov
lds
loopne
nop
imul
dec
stc
mov
push
sbb
push
and
mov
lods
mov
fs
xchg
and
stc
dec
push
mov
jae
lods
xchg
and
cmp
shl
out
sbb
loope
xchg
test
dec
cmp
push
and
aad
lock
sbb
fisubr
cld
outs
or
xor
add
leave
mov
xor
icebp
mov
adc
addr16
cmps
cli
sbb
mov
rcl
push
jae
ins
pop
popa
lds
inc
dec
xchg
arpl
(bad)
xchg
sbb
dec
dec
rcr
add
repnz
cmp
imul
outs
div
scas
data16
pop
push
pop
adc
or
add
neg
and
mov
sbb
movs
int3
data16
xchg
dec
popf
movs
daa
cdq
push
sub
popa
pusha
retf
mov
xchg
bound
out
mov
sub
mov
shl
cmps
jnp
and
repnz
js
add
and
and
sub
fistp
popa
fisttp
push
xchg
ficomp
xchg
clc
sub
data16
push
in
pop
rcl
test
xchg
dec
mov
xor
jp
pop
mov
fstp
mov
jle
retf
in
or
es
xor
add
mov
rcl
imul
shr
add
iret
sub
sbb
xchg
jne
inc
add
adc
pop
int
mov
aad
jecxz
jle
lock
cmp
xchg
rcl
lock
adc
jecxz
push
xlat
sub
mov
inc
or
push
neg
inc
fist
cli
or
ss
imul
inc
das
adc
cmp
fild
lock
and
cmp
retf
leave
ins
loopne
sub
inc
jmp
stos
mov
jg
sbb
push
xor
push
mov
test
dec
ret
pop
add
ss
test
inc
add
sar
repz
inc
add
add
popf
mov
mov
mov
lods
jmp
ins
movs
xchg
rcr
cmp
xor
xchg
sbb
or
and
add
push
dec
enter
ja
mov
dec
stos
cmp
fmul
jb
imul
jle
fiadd
int3
ret
dec
aaa
sbb
push
or
cmp
or
mov
pop
loope
mov
mov
int3
mov
ins
sub
es
sbb
pop
pop
mov
mov
adc
pop
dec
loop
xchg
popa
xchg
(bad)
xor
mov
jno
out
leave
ins
sbb
sub
sbb
(bad)
cmc
fnstcw
mov
mov
cmp
jp
mov
fadd
xor
push
sbb
cld
push
ficomp
cmp
sub
xor
ds
popa
test
adc
shl
jb
retf
inc
mov
pop
lahf
adc
bound
push
(bad)
mov
sub
mov
dec
pop
cdq
and
in
iret
sub
mov
jnp
sbb
pop
adc
jp
out
mov
push
mov
push
cmp
dec
jne
adc
mov
jo
in
ds
js
inc
rcl
adc
(bad)
into
and
pop
in
test
xchg
dec
std
add
ds
or
fisubr
dec
in
fucom
sbb
das
or
daa
jle
loopne
xor
inc
rol
xor
pop
stos
xchg
pop
out
mov
lahf
loope
aam
xchg
dec
cmps
ins
out
pop
jae
adc
cmp
mov
int
xchg
out
push
xor
mov
sti
and
int3
inc
gs
outs
inc
fsub
sbb
sub
mov
and
mov
retf
ret
xchg
dec
cmp
out
push
call
in
xchg
fmul
xor
adc
aad
(bad)
into
add
or
out
dec
xchg
mov
imul
jns
enter
mov
enter
bnd
shl
cmp
mov
in
retf
sar
les
pop
sub
sbb
mov
adc
pop
lods
les
sahf
ss
test
push
mov
mov
cmps
rol
xchg
mov
adc
inc
js
imul
push
ins
fild
addr16
ins
imul
push
(bad)
shl
or
call
scas
mov
int
sbb
je
jb
adc
push
adc
mov
adc
(bad)
mov
out
stc
adc
(bad)
jne
fild
sbb
mov
mov
mov
xchg
stos
or
scas
retf
mov
pop
xor
cdq
pop
cs
mov
cmp
in
mov
popa
lods
pushf
sub
sub
jmp
pop
out
mov
inc
xchg
cwde
jno
adc
lea
lock
in
aas
mov
(bad)
je
mov
and
sub
loop
fistp
(bad)
ficomp
add
pusha
adc
ret
sbb
leave
mov
ds
dec
stos
inc
lods
(bad)
in
inc
mov
stos
movs
(bad)
mov
test
jle
or
xor
push
js
add
(bad)
clc
push
imul
shl
jmp
sub
push
icebp
pop
hlt
jbe
or
dec
dec
(bad)
mov
jmp
dec
loope
cmp
sub
(bad)
cmp
push
ins
popf
pop
dec
add
ror
sbb
out
pusha
lods
adc
in
pop
and
push
lock
and
push
movs
mov
add
or
addr16
scas
les
leave
(bad)
stos
repz
jb
mov
mov
adc
(bad)
sub
js
lock
cmp
add
sbb
clc
ficomp
lahf
push
repz
cmps
std
in
pop
inc
add
or
inc
mov
rcr
jbe
enter
sub
cmps
push
in
mov
jp
pop
add
fsub
xchg
xor
xchg
xor
shl
or
pop
cmc
mov
push
(bad)
dec
lock
sbb
dec
call
pushf
aaa
fdiv
cwde
test
inc
icebp
pop
bound
push
or
mov
es
mov
fistp
stos
ret
je
scas
xchg
in
jb
push
inc
aas
scas
ss
in
popf
js
adc
jg
sbb
dec
xchg
in
inc
jecxz
fadd
xchg
ins
aam
test
cmps
lds
mov
out
bnd
mov
add
cvtdq2ps
dec
std
mov
jg
pop
dec
out
inc
rol
xor
cdq
mov
mov
dec
scas
rcr
jne
jmp
daa
lea
jecxz
jg
aad
call
shl
add
mov
dec
mov
push
sbb
mov
xchg
adc
jl
adc
adc
std
mov
xor
pop
pushf
retf
xor
sbb
mov
outs
into
xchg
or
fisttp
or
push
sti
xchg
popf
and
adc
out
cmc
and
inc
adc
pop
(bad)
push
mov
test
fabs
lahf
ds
into
xor
mov
cmc
in
pop
(bad)
sti
and
div
mov
xlat
dec
xor
popa
daa
sahf
and
les
cwde
sbb
mov
xlat
ds
call
and
arpl
mov
shr
ds
test
callw
test
stc
xchg
and
ret
push
cmp
fcmovbe
dec
loop
add
js
inc
cmp
jg
ss
add
rol
fisubr
push
es
sub
adc
fdivr
pop
retf
xchg
shl
test
les
mov
punpckhdq
into
mov
add
inc
out
mov
stc
push
jno
or
or
sub
push
cmp
fwait
jmp
js
stos
xlat
pop
adc
jnp
xor
(bad)
ja
or
xchg
jo
ins
arpl
test
cli
mov
pop
mov
pop
ret
push
(bad)
in
rcl
mov
mov
add
cld
in
mov
cmps
adc
shl
inc
mov
lock
movs
mov
retf
jns
fistp
push
aaa
cmps
jbe
test
les
mov
shl
mov
pop
mul
mov
ror
or
loope
pop
outs
enter
push
or
xchg
lock
lods
push
mov
(bad)
in
sbb
xchg
sub
cmps
lea
push
dec
and
scas
je
lea
fild
int
cmps
fwait
cmp
fild
(bad)
xor
jne
(bad)
adc
sti
mov
fsubp
jns
jge
cs
push
cmp
jge
clc
sub
pop
iret
inc
retf
call
imul
fcom
in
data16
je
ss
pusha
cwde
loope
xor
xchg
and
mov
add
add
pusha
push
dec
ins
xlat
jg
mov
fs
adc
mov
pop
enter
sub
retf
scas
push
or
pop
cmp
or
popf
adc
iret
out
shl
sub
loop
adc
push
(bad)
sbb
or
loop
mov
fs
dec
xor
jl
jmp
(bad)
call
mov
call
pop
int
sbb
sbb
test
mov
shl
loopne
sti
lahf
inc
mov
add
push
shr
and
les
js
cdq
add
and
inc
adc
fnstenv
push
imul
mov
xchg
sbb
out
call
mov
sbb
retf
dec
stos
mov
and
cmps
div
add
cmp
push
cmp
push
push
push
add
int3
test
stos
test
pop
xchg
sbb
inc
xchg
push
enter
dec
in
pop
ds
retf
mov
call
mov
xchg
inc
mov
mov
cli
shl
daa
add
retf
jae
nop
sub
mov
add
rcl
xor
cld
retf
jl
sub
xor
mov
popf
fwait
push
fldenv
and
xchg
ror
ins
mov
lods
imul
es
mov
shl
sbb
int
loope
sti
sbb
call
cmps
shl
sub
cmps
out
idiv
adc
or
in
mov
jge
inc
lea
sbb
fisubr
rcr
call
inc
inc
jmp
add
or
gs
mov
in
retf
call
push
inc
push
and
rol
repz
mov
cmc
push
pop
leave
movs
out
inc
rol
mov
add
call
mov
or
inc
sub
aad
inc
sti
int3
sbb
retf
push
ds
or
dec
lea
sub
mov
dec
leave
jp
inc
mov
mov
xor
pop
pop
push
mov
sub
ficomp
(bad)
pop
jge
cmp
lahf
cmps
sbb
jg
inc
xchg
mov
(bad)
mov
add
imul
mov
cmp
lods
xchg
dec
adc
xchg
and
fnstenv
inc
bound
or
jo
pop
ret
dec
ret
retf
adc
daa
jb
cmp
sub
cli
fcmovb
arpl
test
je
retf
mov
ds
idiv
xchg
iret
aam
(bad)
dec
and
cmps
les
repz
adc
add
dec
test
xlat
arpl
push
dec
mov
xchg
xor
add
(bad)
push
dec
sub
leave
or
outs
add
push
jae
sti
mov
lea
int
mov
cmp
mov
sbb
enter
lea
test
retf
push
pop
mov
jp
jne
(bad)
mov
lock
adc
mov
pop
call
mov
popf
xchg
fidivr
push
mov
push
aad
out
inc
out
mov
push
sbb
cld
jne
push
mov
xchg
fild
xchg
imul
shl
inc
adc
sub
outs
jb
fcmovnbe
gs
loop
mov
dec
dec
ss
fisub
xor
add
icebp
mov
push
cld
lahf
adc
cmps
jmp
shr
nop
sub
push
pop
jmp
test
hlt
enter
xor
das
ja
dec
loop
push
xchg
sti
ficomp
popa
and
sbb
mov
dec
mov
int3
inc
popf
int
idiv
scas
call
out
lahf
imul
icebp
push
icebp
jle
add
inc
mov
inc
dec
pop
aaa
scas
neg
dec
stos
imul
mov
xchg
dec
mov
movs
and
test
inc
movs
dec
(bad)
ins
inc
call
in
xchg
data16
lea
mov
mov
xchg
xlat
imul
xchg
add
push
cwde
das
xchg
jns
mov
pop
jmp
sti
inc
lods
cmp
or
dec
mov
jle
aam
xor
inc
test
mov
pop
test
or
mov
jmp
add
icebp
nop
and
ss
push
cli
ds
ds
pop
ret
jg
out
test
clc
enter
mov
mov
in
data16
outs
jnp
push
mov
mov
xor
push
mov
into
scas
or
mov
neg
inc
jge
and
das
and
les
out
xchg
mov
retf
and
inc
imul
gs
mov
shr
test
ja
adc
xchg
add
and
push
rcl
cli
and
rcl
xor
mov
xor
test
jns
pusha
sub
test
pop
pop
jne
pop
jb
lods
mov
xor
adc
ins
cmp
enter
mov
(bad)
cmp
jns
or
xor
lahf
xchg
xchg
in
shl
sub
mov
xchg
jge
push
or
xrelease
dec
xchg
test
mov
and
mov
stos
sub
adc
and
enter
popa
mov
push
nop
xor
mov
mov
int3
push
mov
cmc
gs
mov
adc
lods
sbb
sbb
aam
pop
mov
or
cmp
xchg
add
aas
lods
pusha
ja
jne
shr
(bad)
add
aaa
call
push
mov
lahf
xor
les
test
pop
inc
popa
dec
push
out
and
fmulp
pop
retf
inc
or
gs
jg
xor
jae
adc
dec
frstor
push
push
jb
jle
test
cwde
adc
out
(bad)
ja
xchg
mov
test
imul
idiv
add
push
lea
cs
out
cmp
sahf
lods
cli
les
leave
cmps
out
cmps
mov
cmc
sbb
jno
inc
xor
adc
mov
rcl
test
inc
sub
sbb
imul
sub
jg
repz
push
fwait
xchg
and
pop
bound
and
xchg
aas
fisttp
xor
xchg
addr16
scas
sub
xor
scas
cmp
rcr
sbb
mov
loopne
iret
adc
xor
arpl
or
pop
sub
pop
bound
xor
mov
add
div
pop
clc
cmps
cmp
push
xor
(bad)
or
add
mov
(bad)
jb
shl
jne
mov
aaa
pop
jns
mov
call
dec
call
arpl
in
dec
sbb
jae
sbb
aam
inc
outs
repz
dec
ret
cwde
mov
jno
or
test
dec
shr
addr16
sub
and
adc
aas
in
mov
and
addr16
jmp
in
fsub
inc
mov
jmp
adc
test
pop
pop
cmp
cld
repz
mov
inc
es
data16
inc
pusha
sub
pop
xchg
jnp
inc
xchg
arpl
sbb
pop
fistp
cmc
cs
ins
(bad)
fcmovne
popf
mov
sbb
and
dec
or
je
ror
movs
xor
test
scas
adc
inc
jle
jae
push
cmp
push
movs
ja
cmp
pusha
dec
xchg
jae
xchg
cmp
sbb
aaa
xchg
sahf
out
and
les
jge
sub
mov
jl
or
cdq
iret
or
test
xchg
mov
jle
and
inc
mov
icebp
xor
or
jbe
pop
cmp
pop
jo
popa
(bad)
jb
or
push
cmc
mov
inc
rol
add
stos
or
sbb
pop
sub
ror
(bad)
mov
mov
imul
out
shl
sbb
pop
cmp
retf
imul
dec
jg
cmps
mov
dec
sbb
push
xchg
test
loope
scas
mov
aam
cvtdq2ps
mov
jl
loopne
fldenv
fcomp
arpl
shr
mov
int
adc
cmp
mov
clc
cld
inc
movs
xchg
jg
xor
dec
fistp
pop
and
test
ins
jb
inc
jae
push
xchg
xchg
push
sub
jbe
jl
clc
mov
sbb
into
mov
xor
int
jg
sub
jecxz
xchg
push
out
push
jge
out
jb
loop
or
jae
dec
sbb
lock
ins
cwde
lods
movs
push
dec
stos
leave
sbb
cmp
call
jae
mov
test
pop
test
cmp
cmp
mov
inc
jb
pop
mov
mov
push
mov
jecxz
sar
adc
test
iret
repnz
inc
xchg
add
dec
add
sbb
sub
popf
mov
adc
int
cmps
sahf
cmp
sbb
nop
ins
push
adc
push
xchg
pop
add
mov
scas
addr16
add
ds
pop
xchg
mov
mov
pop
sub
fstp
push
out
mov
inc
or
mov
xchg
push
and
adc
rol
arpl
mov
and
inc
push
adc
cmp
sbb
scas
arpl
cld
adc
dec
retf
adc
inc
outs
sbb
inc
adc
repnz
jle
mov
pop
inc
add
nop
or
dec
xchg
jg
xor
xor
loop
dec
jnp
sahf
push
push
push
mov
nop
cwde
sub
retf
popa
leave
mov
(bad)
shl
xchg
jp
sbb
ret
shr
test
mov
pop
popf
out
je
pusha
jnp
cli
icebp
mov
sub
rcl
test
push
rcl
dec
fistp
es
fisub
outs
sub
jg
(bad)
mov
pop
mov
xor
push
movs
je
imul
push
(bad)
cs
retf
xchg
jg
inc
push
sub
mov
cmp
or
dec
(bad)
fsub
mov
sahf
pop
mov
mov
jno
retf
mov
dec
mov
pop
sbb
xchg
test
mov
loopne
fnstenv
fstp
adc
or
movs
mov
dec
rol
fadd
repnz
xchg
clc
xchg
leave
dec
xchg
add
jbe
das
jo
in
(bad)
jne
outs
shr
clc
pop
jle
(bad)
mov
hlt
mov
push
fcom
sbb
aad
cmp
mov
push
ja
pusha
pop
or
xor
outs
aas
in
pop
bound
xchg
call
sub
leave
xor
sar
mov
(bad)
mov
popf
cwde
ins
sub
fist
xor
mov
pop
jmp
pusha
adc
cmps
lds
push
stos
fist
aad
xlat
pusha
call
push
mov
inc
lahf
daa
jecxz
shl
rcr
push
dec
imul
cmc
cdq
fnstsw
ret
lds
adc
or
mov
into
or
jno
mov
in
imul
je
adc
rol
(bad)
sub
inc
add
push
stos
jmp
jle
jl
inc
rcl
enter
ins
xor
ja
cmp
ins
pop
xor
fld
or
rcl
aam
jge
pop
les
movs
ds
and
push
cmp
push
test
rol
dec
loop
in
sub
push
add
xchg
inc
adc
rcr
inc
sar
out
loope
inc
sub
daa
test
aaa
mov
shl
mov
loope
fcom
or
hlt
std
call
mov
adc
push
xchg
shr
(bad)
jmp
dec
ficom
pop
retf
cmp
jmp
mov
mov
cmc
dec
inc
mov
dec
mov
ret
sbb
mov
and
or
pop
lock
(bad)
mov
imul
mov
data16
or
pop
test
movs
dec
call
push
or
aaa
fs
push
mov
pop
(bad)
(bad)
clc
in
mov
mov
or
xor
mov
mov
lock
lea
fwait
cmp
stos
inc
sub
and
mov
std
adc
lods
and
nop
push
ret
inc
shl
lods
push
loopne
or
ja
adc
mov
xlat
sbb
dec
sub
das
jae
es
sbb
inc
xchg
inc
in
mov
jne
mov
aas
lock
fstp
cmp
mov
push
jne
retf
lea
dec
loopne
xor
int
push
mov
jae
int3
(bad)
cmp
inc
ficomp
out
add
retf
sar
inc
lea
xor
xor
mov
mov
pop
loope
pop
mov
push
jmp
rol
or
dec
fimul
mov
dec
out
jmp
out
jno
mov
jg
dec
enter
sbb
popa
repnz
inc
sbb
scas
or
shl
adc
ffree
pusha
push
or
repz
add
sar
add
xchg
fstp
(bad)
jb
enter
push
sbb
or
retf
in
mov
cmp
push
fs
jns
es
imul
sub
cmc
mov
cmp
or
retf
push
lea
out
fcom
add
outs
int
mov
popf
and
icebp
test
mov
mov
inc
adc
sub
pop
div
enter
adc
cwde
cmp
fwait
and
scas
bswap
adc
call
data16
stc
push
xchg
xor
in
cmc
cdq
ins
cwde
repz
loop
sbb
push
push
ds
bnd
imul
xor
cmps
xchg
int3
ins
cmp
sub
add
push
das
jecxz
(bad)
cld
add
jp
adc
stc
test
imul
cmp
jle
and
xchg
sbb
(bad)
pop
icebp
and
mov
and
cwde
retf
js
push
sbb
dec
cmp
jmp
jmp
sub
dec
inc
inc
sar
inc
repnz
test
fsubr
fidivr
push
icebp
and
and
sbb
lds
fwait
sti
inc
test
dec
jge
rol
and
jns
mov
pop
aad
mov
and
mov
aam
pop
xchg
pop
xchg
leave
pop
addr16
xchg
(bad)
push
je
test
mul
enter
lahf
or
adc
jae
cmp
in
fdiv
push
loopne
sub
pop
dec
lods
pop
mov
or
ror
sub
pop
or
sti
ins
adc
and
add
sub
scas
fidivr
cmp
dec
jg
mov
mov
cs
scas
stos
enter
xchg
pop
push
xor
fmul
movs
cs
pushf
cmp
mov
std
out
bnd
jmp
jge
xor
repnz
loope
jecxz
ret
test
jnp
pop
jle
mov
sti
jne
retf
lds
or
call
movs
cmp
xor
lods
addr16
dec
jns
iret
add
mov
pop
lods
cmp
in
xchg
push
lock
inc
inc
out
cmps
add
pop
test
xchg
mov
test
(bad)
dec
pop
clc
repz
inc
pop
sbb
jecxz
pushf
sahf
mov
and
into
sbb
push
mov
dec
add
push
es
jo
cmp
mov
dec
adc
cmp
ss
push
(bad)
add
fnstenv
push
and
retf
fcomp
mov
jns
pop
xlat
and
jg
pop
cs
add
aas
dec
sar
int
push
std
push
dec
push
fnsave
cmp
pop
sbb
xchg
adc
and
in
sti
hlt
in
adc
or
mov
push
push
mov
repz
mov
pop
test
or
sbb
add
mov
into
mov
xlat
mov
int
fwait
add
or
push
(bad)
shl
dec
popf
cli
out
ds
fld
mov
ficom
mov
mov
dec
inc
out
pop
mov
push
jmp
cmc
bound
pop
mov
pop
fsubr
jae
xor
dec
(bad)
out
and
stos
mov
xchg
or
mov
mov
mov
nop
lock
loope
push
xor
pusha
in
cmps
sub
lock
out
xchg
hlt
std
inc
stos
or
popa
lods
mov
and
inc
cmps
or
(bad)
adc
add
pop
xchg
mov
movs
and
fdivr
bound
scas
fs
das
aad
nop
ds
jbe
cmp
sti
clc
daa
pop
fist
js
mov
inc
repnz
fisubr
and
mov
sub
push
xor
or
cld
in
add
fdivr
pop
cmc
xchg
mov
es
inc
out
xor
rcr
sbb
nop
mov
and
sahf
fimul
mov
rcr
fst
push
ret
(bad)
je
mov
push
push
add
mul
out
fistp
adc
int
mov
push
mov
dec
sti
mov
outs
mov
xchg
mov
push
inc
shl
adc
(bad)
sbb
cmp
add
shl
and
lds
dec
into
in
add
push
mov
out
mov
(bad)
mov
int
inc
mov
adc
ret
jl
(bad)
fiadd
push
ja
not
cmp
adc
mov
push
rcl
fdiv
xchg
out
mov
mov
retf
xchg
jnp
mov
sub
add
inc
xor
dec
data16
sub
jg
add
fs
(bad)
push
enter
mov
mov
mov
(bad)
dec
xchg
je
xor
(bad)
lods
out
mov
scas
daa
outs
aam
in
or
nop
inc
stos
push
push
pop
and
test
mov
mov
pushf
pushf
add
mov
shl
xor
push
popa
clc
dec
(bad)
ss
test
mov
adc
and
js
enter
stos
lods
and
nop
fcom
adc
adc
fist
and
cs
loop
mov
pop
mov
adc
aaa
adc
xor
xchg
test
pop
rol
and
in
das
stc
call
popf
ss
add
jb
dec
mov
cs
loop
int
lods
sbb
xor
xchg
dec
imul
inc
pop
mov
xlat
add
inc
xor
sbb
lods
sub
jmp
add
outs
or
xchg
mov
xor
ins
pop
pop
pop
es
shr
pusha
or
jle
xchg
xor
cmps
jl
(bad)
dec
sbb
jmp
mov
in
(bad)
rcr
mov
cmp
test
sub
adc
fiadd
dec
pop
iret
and
outs
push
jmp
ror
out
fnsave
xchg
cmp
jbe
adc
repnz
mov
pushf
mov
cmp
cmp
cmc
mov
pop
jl
gs
push
int
mov
pop
jno
int3
stc
out
mov
xor
sub
cmp
inc
pusha
pop
loop
imul
dec
mov
ins
jnp
sub
dec
outs
jne
shl
fnstenv
pop
scas
stos
ins
pushf
mov
mov
ret
pop
push
sbb
aad
cs
popa
inc
jle
stc
pusha
or
std
jae
repnz
es
pop
pop
in
inc
mov
mov
sub
xchg
call
xchg
stos
fistp
shl
retf
cmc
sbb
lahf
add
xor
repz
adc
pop
test
sub
int3
and
scas
int3
mov
push
sbb
aas
and
xor
ins
dec
dec
jle
adc
push
retf
fwait
js
push
sbb
test
dec
lahf
popa
mov
jb
sub
dec
mov
sbb
out
loope
push
cmps
int3
dec
ret
dec
dec
dec
sub
jbe
leave
in
aaa
jl
pop
js
xor
ret
sahf
lods
enter
jne
into
es
mov
cdq
push
sub
fs
daa
cmc
cmp
repnz
mov
pop
lods
inc
addr16
stos
push
frstor
ins
scas
jmp
icebp
bound
xchg
fdiv
imul
cmp
mov
inc
push
mov
xor
(bad)
mov
push
outs
xor
stos
mov
into
test
leave
test
sbb
mov
xchg
jb
push
nop
fcmovu
adc
lahf
movs
cwde
push
pop
pop
pop
mov
xchg
shl
sbb
(bad)
mov
mov
sar
aam
sbb
sbb
call
pop
rcr
scas
test
ret
xor
out
into
es
xchg
cmp
pop
test
push
rcr
fnstenv
(bad)
cs
fild
lods
add
pop
sahf
jne
cmp
add
or
and
test
jnp
xacquire
in
loop
icebp
mov
xchg
or
fld
adc
xchg
jg
fidiv
pcmpeqb
mov
data16
(bad)
mov
or
and
inc
std
pop
movs
mov
add
sahf
xor
ja
or
push
cmp
sbb
sbb
sti
push
(bad)
imul
(bad)
xchg
push
shr
mov
xor
or
loop
sti
lock
push
pop
push
mov
jb
mov
(bad)
aas
cmps
fcomp
sbb
mov
lods
inc
add
pop
lea
mov
pusha
pop
sbb
jmp
or
scas
ins
popa
adc
les
dec
cs
xor
pusha
cmc
adc
or
sub
push
mov
pop
test
movs
cmp
add
mov
loopne
fadd
inc
cmp
pop
inc
dec
clc
addr16
cs
sbb
mov
scas
mov
es
sub
mov
inc
mov
in
mov
(bad)
cld
inc
jns
mov
enter
(bad)
arpl
push
mov
xchg
jecxz
mov
sub
xor
loopne
add
stc
fdivr
mov
arpl
sbb
popa
sub
mov
adc
add
xchg
mov
jno
std
movs
mov
sahf
pop
push
dec
div
dec
gs
loop
outs
jnp
cs
sar
push
das
jmp
cmp
sahf
enter
imul
push
push
div
jmp
dec
cli
sbb
cli
mov
mov
ins
xor
jl
xchg
inc
fld
jg
fsub
loope
dec
xor
fwait
dec
fwait
pop
fbld
cmp
out
aas
jg
in
mov
pop
add
stc
sub
jmp
jbe
adc
pop
jnp
fstp
cdq
xchg
stos
fld
push
dec
inc
stos
jne
iret
dec
adc
adc
mov
adc
in
inc
jne
fwait
jl
outs
pushf
sub
cmp
inc
mov
mov
mov
sbb
sub
cmc
les
mov
cmp
rcr
fidivr
jg
fs
mov
dec
mov
mov
add
hlt
xor
jge
sub
enter
(bad)
jbe
sbb
sub
scas
icebp
mov
mov
and
outs
mov
and
jae
xchg
(bad)
shr
adc
mov
or
cli
inc
xchg
sub
mov
fucomip
pushf
shl
push
in
(bad)
mov
jb
loope
fisub
outs
call
pop
or
shr
xchg
xchg
and
lock
mov
sbb
push
mov
es
xchg
call
xor
or
mov
fdiv
adc
mov
rcr
cs
push
outs
mov
mov
sub
mov
xchg
inc
icebp
cmc
loope
stos
(bad)
sub
aam
or
in
sbb
(bad)
cmp
add
mov
jnp
iret
aaa
out
adc
es
aaa
inc
cmp
(bad)
add
or
fwait
push
or
dec
mov
push
dec
inc
jbe
push
test
dec
jl
fidiv
mov
inc
shl
inc
xchg
data16
sub
js
sbb
push
dec
bound
lods
inc
outs
hlt
jmp
and
call
hlt
sahf
pop
and
nop
dec
popf
fnstcw
popa
push
out
cmps
mov
pop
or
mov
mov
stos
(bad)
adc
jno
enter
test
pusha
jae
mov
sbb
out
mov
push
mov
ficom
arpl
adc
(bad)
push
and
in
dec
cmp
mov
lahf
cdq
icebp
adc
lock
out
mov
dec
(bad)
jbe
pop
and
mov
jb
cld
jecxz
push
mov
pop
mov
test
mov
and
pop
lea
jnp
pop
popa
adc
or
enter
cmp
add
stos
mov
or
lock
outs
xor
lea
fimul
xor
in
sti
fsubr
and
sbb
leave
xor
dec
in
sub
push
jmp
imul
cwde
loop
and
lods
hlt
jb
xor
pushf
pop
mov
jle
xchg
jno
cmp
das
lods
xor
push
mov
fs
mov
add
clc
cmps
int
aad
cld
or
sbb
fidiv
jmp
retf
push
xchg
inc
cmp
jmp
aas
mov
cmp
jno
icebp
shl
mov
pushf
movs
xlat
shl
es
cwde
sub
jbe
adc
add
sub
ds
sub
mov
scas
ins
push
mov
push
arpl
retf
nop
mov
mov
enter
add
jg
inc
div
mov
inc
fsubr
loope
aas
push
mov
fcom
jo
loope
fprem
dec
mov
sbb
xchg
xor
lds
cmp
pop
sub
or
clc
jl
enterw
pop
push
inc
pop
inc
xchg
out
or
cmc
mov
fld
push
mov
test
push
pop
test
jl
clc
push
cmp
movs
push
fist
xor
rol
jecxz
enter
bound
fimul
cmp
push
(bad)
lea
ins
cmp
sbb
ja
mov
repz
adc
jb
sub
dec
jle
inc
rcl
sbb
popf
and
inc
add
clc
add
bound
test
stc
xchg
push
push
adc
les
mov
push
out
stos
test
test
pop
loop
sbb
shl
cdq
js
in
jl
push
retf
dec
pop
shr
fsubr
fimul
jnp
add
xor
pop
mov
sub
push
xor
(bad)
cmp
enter
loopne
push
vpaddsw
pusha
push
ret
outs
fs
rol
out
ss
mov
adc
push
repnz
xlat
pop
in
push
lahf
test
cmps
fistp
add
retf
int
lock
sbb
xor
movs
das
(bad)
scas
inc
inc
out
popf
push
shl
pusha
or
(bad)
fisub
movs
dec
scas
mov
(bad)
bound
mov
cmp
and
pop
inc
pop
adc
enter
ret
cwde
and
push
sbb
mov
es
xor
pop
(bad)
cmp
mov
jg
mov
clts
fbld
ins
or
(bad)
stos
cmp
lds
sub
das
or
cmp
ret
ins
int
addr16
mov
xor
xchg
and
push
xlat
or
and
cmp
cmovbe
jmp
into
outs
cmp
imul
sub
or
pop
adc
in
pop
mov
gs
mul
pushf
or
(bad)
sbb
adc
(bad)
nop
xor
jl
mov
dec
or
or
xchg
div
nop
jmp
sbb
popf
xor
pushf
mov
sub
push
sbb
leave
call
popfw
sub
xchg
in
xchg
xor
pop
mov
rol
test
sub
pop
inc
out
sbb
cmc
sar
adc
test
xchg
add
enter
sub
xchg
ins
xchg
or
sbb
mov
int
jge
sub
jge
aas
xor
outs
shr
or
cdq
mov
adc
retf
jg
jg
shl
iret
sub
(bad)
mov
(bad)
out
stos
mov
mov
test
add
xor
shr
jle
jl
pushf
and
daa
dec
jl
dec
dec
dec
arpl
xchg
stc
dec
fdiv
clc
mov
cwde
mov
mov
mov
jle
cmp
cmp
popf
xchg
or
cs
xor
push
mov
adc
scas
iret
into
popa
ds
lahf
retf
sub
sub
in
push
push
loopne
dec
pop
inc
rcr
jae
ds
sbb
movs
jg
mov
retf
jne
test
mov
fild
xchg
inc
test
jmp
popa
jecxz
pop
test
std
add
cli
daa
(bad)
push
aad
lds
dec
adc
mov
outs
jp
or
sbb
jp
shl
xchg
dec
and
aad
mov
jmp
ins
inc
sub
mov
pop
in
daa
mov
out
mov
pop
scas
lldt
pop
xor
xor
mov
(bad)
das
cld
jle
mov
push
stos
sub
dec
pop
hlt
adc
idiv
js
pop
dec
or
jo
xchg
retf
xor
mov
cld
mov
bound
(bad)
mov
sbb
xchg
int
and
cwde
stc
out
mov
or
and
pop
bound
and
dec
ror
and
xchg
jp
pop
(bad)
jecxz
cld
jge
cmp
jo
loope
xchg
dec
cmp
mov
add
lods
xchg
loope
outs
push
and
xchg
je
jno
retf
sbb
adc
jne
mov
pop
cmc
mov
daa
cld
xchg
cld
inc
jecxz
fwait
push
cmc
xor
stos
jbe
mov
mov
dec
add
into
test
mov
adc
pop
rcr
adc
xor
mov
loopne
arpl
and
in
pusha
retf
push
paddd
xchg
inc
scas
popf
imul
std
in
adc
jge
fnstsw
adc
repz
outs
adc
fnsave
add
retf
aam
mov
push
mov
out
or
jmp
jns
test
push
lods
fistp
out
imul
fs
jg
jb
in
imul
inc
mov
mov
outs
fisttp
inc
lods
push
inc
outs
aas
inc
push
push
jg
es
cld
cld
and
and
mov
rcr
dec
scas
pop
cmp
ret
rcl
imul
mov
aaa
mov
adc
out
adc
cmp
or
cs
in
retf
dec
mov
xor
lock
test
(bad)
mov
pop
(bad)
addr16
in
cli
xchg
nop
push
mov
or
jbe
inc
dec
push
(bad)
enter
mov
in
ds
cmp
ja
jo
mov
sbb
les
inc
inc
fs
out
das
xchg
dec
add
idiv
call
jl
ret
cmp
mov
and
push
fbstp
test
xlat
into
pusha
inc
ficom
retf
sti
dec
stc
push
jmp
sbb
push
jp
ds
push
imul
stos
sti
aad
gs
retf
sbb
or
out
and
adc
ins
xchg
xchg
sub
ins
adc
hlt
or
push
push
cdq
sbb
(bad)
dec
lds
mov
adc
loope
data16
jo
dec
inc
retf
call
jl
fwait
out
sub
test
ds
mov
or
pusha
test
fldenv
xchg
pop
leave
sti
test
(bad)
mov
jne
addr16
xor
cmc
hlt
push
inc
inc
inc
fcmovu
sbb
push
dec
jl
cmp
cmc
pop
push
adc
ret
fistp
jp
ins
lods
ret
or
aas
xchg
outs
jg
rcr
sbb
pop
lock
or
xor
cld
push
dec
mov
cdq
aad
test
cld
push
pop
repnz
mov
mov
loopne
dec
ror
push
in
addr16
cli
jnp
(bad)
je
loopne
das
sbb
loop
xchg
mov
mov
shl
mov
repz
adc
out
add
mov
and
fiadd
xchg
jb
cmp
add
inc
stos
into
xchg
jbe
jecxz
mov
sbb
sbb
in
sbb
outs
cmp
xchg
shl
add
or
push
call
lahf
dec
aaa
or
pop
pop
or
and
jl
xchg
out
mov
les
neg
int3
fwait
mov
fdivr
pop
inc
sbb
push
lea
lods
lea
pop
lods
int3
lds
pop
in
mov
mov
ss
mov
push
fisub
js
js
xchg
popf
rcr
mov
mov
jle
ins
cmc
push
mov
and
scas
cli
je
sar
(bad)
and
rol
(bad)
jno
in
mov
outs
mov
pop
out
fstp
(bad)
scas
mov
shr
xlat
ret
sub
rcr
sub
xchg
xlat
xlat
sbb
xchg
iret
jno
pusha
mov
pop
xor
popf
pop
loop
mov
(bad)
je
pop
aas
in
and
clc
inc
js
xor
push
out
popa
mov
inc
or
stos
or
into
add
lock
into
das
cmp
adc
mov
arpl
push
and
fcom
movs
stos
jge
mov
mov
mov
stos
and
into
push
xchg
movs
cmp
xor
dec
scas
scas
aam
mov
ret
rol
ret
sbb
mov
mov
jae
jne
addr16
dec
dec
sub
mov
(bad)
fimul
test
cmc
xor
(bad)
in
cmc
xor
adc
sub
pop
xchg
repz
scas
sbb
mov
mov
lfs
in
lock
sub
dec
aad
les
mov
mov
mov
add
call
add
out
adc
in
mov
xchg
pop
jle
mov
rol
(bad)
mov
fimul
pop
enter
xchg
pop
fidiv
add
push
pop
hlt
jae
push
retf
fistp
mov
leave
fmul
fnsave
cs
ret
stos
lea
cmp
cmp
pop
inc
sub
inc
sub
(bad)
fisttp
outs
sbb
mov
imul
in
mov
adc
push
add
jg
std
ss
shl
or
inc
xchg
xor
jnp
and
loop
je
dec
push
cmp
stos
je
test
push
rcl
mov
lods
sahf
in
retf
int3
jmp
or
jg
mov
sub
mov
pop
lods
test
and
dec
ins
mov
mov
int
push
retf
movs
adc
out
loop
test
sub
inc
mov
loopne
cwde
into
xor
mov
pop
inc
sub
lock
js
inc
push
gs
addr16
jecxz
test
dec
in
mov
xor
cdq
and
jle
mov
mov
imul
(bad)
jmp
cmp
icebp
fisub
cdq
xor
addr16
xchg
pop
in
and
pop
xchg
or
lock
mov
or
dec
lock
jge
ss
dec
rcl
pushf
cmp
fst
push
bound
stos
sub
jb
ins
push
mov
mov
test
in
cld
repz
mov
fimul
adc
or
pop
mov
repz
out
cwde
pop
imul
inc
ins
out
pop
pop
and
adc
pop
test
aam
(bad)
sbb
fs
jo
push
lods
cmp
cs
adc
(bad)
mov
inc
jg
pop
adc
jg
dec
cmps
xchg
xchg
jecxz
(bad)
(bad)
loopne
loop
jecxz
ins
ror
lods
add
lds
popa
mov
dec
aas
mov
mov
popf
call
push
lea
outs
aad
and
mov
fsub
fcom
imul
adc
push
mov
jle
push
sub
xor
sub
jae
imul
cli
or
or
scas
je
push
mov
out
stos
lahf
sub
mov
data16
mov
push
sahf
pop
add
jae
sbb
popa
dec
jno
outs
dec
(bad)
iret
test
xor
cli
fwait
lds
(bad)
mov
xchg
xchg
push
test
pop
push
mov
sbb
and
push
rcr
rep
pop
dec
je
scas
repz
fsubr
adc
rcl
les
enter
mov
fdiv
jne
jne
xchg
add
sbb
inc
arpl
pop
(bad)
leave
cwde
sbb
stos
push
int3
leave
fistp
jle
pop
or
mov
jo
lods
add
sub
test
mov
dec
ins
(bad)
push
mov
(bad)
loopne
add
ret
paddb
outs
lods
jl
add
cs
jl
add
cs
lods
adc
int
cs
pop
mov
cdq
nop
cmp
xchg
jno
cdq
cmp
or
and
fist
and
jmp
aaa
add
sub
and
dec
or
aaa
cs
(bad)
jmp
jbe
sub
xor
jmp
adc
retf
nop
aad
out
aaa
in
and
jns
inc
retf
sti
xor
jnp
dec
mov
jl
mov
outs
cmp
dec
fcomi
in
mov
js
das
push
fld
add
fstp
icebp
pop
outs
sub
pop
movs
and
sbb
loope
ss
lahf
cmp
inc
push
das
pop
lock
push
into
ja
pop
sbb
neg
stos
loopne
inc
fiadd
push
xchg
aas
xchg
loop
and
push
div
adc
les
int3
add
adc
pop
inc
lahf
sbb
add
fiadd
xchg
retf
and
ds
sub
cmp
sbb
test
mov
or
das
add
fwait
xchg
fldcw
push
mov
retf
xchg
sbb
(bad)
fwait
sahf
retf
sbb
rol
js
xchg
pop
add
mov
out
pop
mov
in
pop
sub
jnp
call
cmp
xchg
fnstsw
push
add
or
ja
mov
sbb
inc
dec
mov
mov
dec
inc
in
nop
pop
outs
xchg
cmp
jns
clc
scas
enter
nop
outs
pushf
sub
sub
push
or
icebp
xchg
and
pusha
mov
mov
or
or
aam
lods
and
jnp
int3
clc
in
push
push
pop
ss
loop
mov
fwait
sbb
leave
(bad)
outs
fs
mov
loop
inc
das
inc
ror
es
jno
icebp
icebp
lock
ror
mov
aas
int3
push
scas
mov
mov
fdivr
sub
jbe
pmaddwd
mov
or
lds
shr
xchg
or
lods
mov
stos
jbe
jbe
dec
xchg
or
mov
push
loopne
add
fild
ret
dec
sub
sbb
loopne
adc
pop
push
adc
arpl
les
mov
and
enter
fild
inc
xor
cmp
lods
clc
cmp
sbb
jo
mov
loop
and
mov
lahf
rcr
mov
mov
mov
test
fs
pop
pop
cmp
jne
lea
xchg
jbe
dec
jo
pop
inc
pop
xchg
adc
xor
shl
arpl
and
ret
inc
mov
sar
and
push
mov
adc
loop
mov
add
pop
mov
jno
jmp
push
idiv
inc
xor
and
cdq
imul
mov
mov
leave
stc
sub
pop
jmp
mov
jle
pushf
cmp
add
shl
jne
repz
je
mov
repz
stc
cmps
mov
xor
adc
pop
repz
pop
or
sbb
mov
test
(bad)
or
je
mov
sub
cmp
jecxz
test
dec
dec
cmp
mov
jo
sbb
mov
xor
push
(bad)
repnz
retf
mov
loop
loopne
pop
jecxz
dec
dec
sbb
push
pop
cs
jno
in
cmp
mov
dec
push
icebp
push
push
sbb
rcl
adc
lds
pop
xchg
cmps
shl
push
fwait
and
pop
stos
ret
mov
sbb
hlt
xchg
mov
xchg
pushf
jnp
or
cmp
fidiv
dec
inc
std
and
jmp
cwde
push
jbe
std
mov
lock
retf
dec
mov
jne
loope
push
bound
mov
pusha
fadd
and
xchg
(bad)
jmp
sub
fwait
sbb
nop
lods
cld
jns
test
sbb
inc
aad
es
mov
fsub
sub
push
popa
sub
nop
jne
add
scas
lea
mov
jl
aam
rol
shl
mov
jmp
add
push
adc
cli
movs
push
xor
adc
aaa
movs
and
dec
jne
mov
dec
mov
xchg
dec
aam
jge
xchg
sub
push
or
xor
jo
push
ins
and
outs
ret
in
in
xor
pop
test
sub
enter
enter
push
in
stc
cld
mov
sti
mov
daa
mov
sbb
lods
sub
add
mov
xor
(bad)
leave
out
in
dec
adc
xor
fld
push
dec
sbb
int3
ds
sbb
xchg
enter
mov
test
imul
add
jp
ds
adc
icebp
or
jg
(bad)
add
(bad)
pop
aas
push
cld
dec
ret
stos
adc
jp
pop
or
aam
int3
fidivr
jnp
push
rcl
dec
push
sub
arpl
sub
sub
clc
lds
stc
push
add
in
cmp
inc
imul
test
jo
cwde
outs
sbb
push
cld
jl
fisubr
call
gs
dec
push
aas
inc
or
jno
mov
xchg
xchg
add
jno
call
dec
mov
ficom
adc
test
and
pusha
test
retf
dec
and
scas
sbb
add
ins
cs
cmps
dec
mov
push
cmps
jbe
inc
stos
outs
nop
pop
ss
retf
pushf
inc
fisub
xor
add
test
and
gs
push
cmp
pop
mov
jmp
mov
fs
daa
xor
ret
mov
daa
mov
stc
les
push
scas
add
call
mov
inc
xor
test
sub
xchg
jmp
out
mov
dec
fsub
push
loope
cmc
mov
(bad)
sti
and
neg
mov
movs
addr16
jp
retf
mov
test
xor
mov
sub
push
mov
mov
icebp
data16
mov
sti
mov
aas
fild
leave
ffreep
and
pop
inc
dec
outs
hlt
dec
call
fild
fwait
dec
shl
jmp
test
mov
xchg
cld
and
fistp
repz
jg
push
mov
rol
stos
sub
pop
aam
stos
add
retf
daa
(bad)
xor
xchg
mov
in
into
mov
adc
sti
stc
cmp
cdq
ja
jo
mul
scas
xchg
mov
pop
data16
ja
pop
pop
hlt
mov
mov
jecxz
xchg
outs
mov
stos
js
cdq
xor
loop
retf
repz
call
xchg
fwait
(bad)
stc
add
or
stos
dec
mov
sub
cwde
pop
pop
cld
cmps
xor
lahf
xchg
test
cmps
xor
mov
mov
mov
sbb
push
repz
and
jnp
test
bound
jp
push
je
or
test
or
mov
mov
sbb
inc
add
ret
ins
cli
sub
or
je
xor
stc
ret
dec
adc
push
out
outs
inc
add
cmp
sub
pusha
adc
and
retf
push
dec
stc
push
dec
in
jmp
mov
enter
fisttp
not
ds
mov
popa
push
push
ins
inc
and
sbb
pop
sti
imul
in
out
xor
in
iret
pop
repz
pop
loopne
les
mov
pop
jl
xor
movs
jecxz
adc
pushf
mov
popf
mov
xor
or
push
sbb
popf
and
out
rcl
daa
fs
pop
(bad)
ficomp
loop
jg
add
ret
xor
mov
jl
adc
push
imul
ins
loopne
jb
fimul
je
push
out
call
rol
(bad)
shl
pop
pop
call
mov
xchg
push
imul
ss
dec
push
nop
dec
and
retf
(bad)
mov
jl
lea
or
outs
dec
jmp
sub
test
mov
lods
adc
push
adc
push
inc
imul
stos
xor
mov
mov
and
pop
dec
xor
into
js
adc
and
mov
mov
ret
or
pop
xchg
adc
cmp
cli
mov
(bad)
jmp
inc
cwde
pop
sbb
(bad)
stos
push
call
gs
daa
inc
das
push
inc
and
ret
and
xchg
jg
jno
inc
lahf
nop
lea
retf
rol
(bad)
mov
imul
inc
lods
fsubr
jb
lea
popa
stos
adc
mov
xchg
lds
test
and
jo
cs
js
push
inc
mov
repz
add
and
push
lods
scas
inc
sub
jno
pop
sahf
or
ds
ret
pop
fwait
inc
mov
test
add
add
fimul
or
dec
ds
fsubr
inc
into
bound
pop
dec
mov
pop
lods
clc
cli
push
fwait
pop
jae
repnz
movs
adc
dec
stc
(bad)
jb
xchg
cmps
or
out
push
(bad)
fcomp
sbb
sbb
mov
lds
and
mul
sbb
lock
dec
dec
pop
pop
(bad)
fnstcw
lds
sbb
cmc
loopne
call
mov
adc
jmp
je
aam
cmps
mov
add
or
push
in
cmp
int
(bad)
and
retf
pop
inc
lock
jmp
call
aam
fwait
test
cmc
or
cli
add
fwait
push
xor
out
popa
out
into
arpl
out
adc
rcr
bound
dec
mov
fdiv
push
sbb
push
(bad)
std
sbb
push
pop
ds
shl
sub
inc
sub
je
out
cmps
es
les
aas
imul
sub
jno
imul
mov
movs
in
scas
cdq
scas
cmp
scas
aas
jbe
cmps
dec
or
mov
mov
jge
cmp
pop
int3
pop
inc
pop
fsubr
(bad)
cmc
fld
mov
call
push
jbe
lock
pop
and
jmp
pop
xor
loopne
push
mov
push
inc
jne
test
pop
pop
pop
push
xchg
retf
mov
dec
pushf
sub
add
test
mov
mov
ins
pop
and
sub
pop
cmp
in
js
cmc
es
retf
into
psadbw
and
jns
sbb
mov
mov
inc
mov
mov
mov
cmp
dec
xor
(bad)
jmp
movs
sahf
aad
mov
loop
push
hlt
or
or
sbb
jbe
test
sbb
into
mov
scas
pop
pop
dec
sbb
(bad)
clc
test
ret
mov
mov
pushf
mov
dec
movs
cmp
cmp
mov
dec
ficom
aad
sub
or
lea
scas
xchg
movs
add
inc
sbb
in
dec
xor
std
mov
pop
mul
push
outs
adc
adc
pop
xchg
dec
imul
jbe
cmp
push
xlat
xchg
clc
popf
push
jecxz
cmp
add
or
iret
sbb
fidivr
cli
pushaw
inc
push
or
int
xchg
jl
int3
jge
jecxz
inc
xor
and
mov
adc
cmp
xchg
ins
add
mov
test
push
jp
fwait
mov
call
stos
push
int
sbb
sub
dec
or
cdq
jno
adc
mov
into
int3
aad
pop
or
xor
clc
fwait
jbe
out
in
enter
addr16
inc
add
and
ds
in
mov
xor
hlt
xor
push
mov
les
daa
sbb
sbb
ins
push
and
stos
fcom
jb
cmp
rcl
std
inc
mov
push
pop
hlt
push
mov
jp
arpl
dec
and
movs
mov
push
leave
dec
mov
mov
test
pushf
ins
pop
inc
fdiv
xchg
xlat
sbb
xor
call
adc
test
cmc
pop
nop
and
imul
inc
movs
shr
rcl
(bad)
loop
sub
mov
arpl
xor
adc
dec
cmp
cdq
pop
xchg
dec
jae
cs
or
mov
push
mov
xlat
xchg
inc
addr16
cmps
arpl
sub
or
xchg
sub
cli
inc
(bad)
jl
adc
push
out
fcom
dec
inc
dec
retf
dec
mov
arpl
xor
scas
ror
fiadd
pop
mov
jmp
mov
stos
in
retf
mov
lds
adc
xchg
cld
adc
or
imul
lea
mov
hlt
or
outs
jl
xor
mov
mov
arpl
mov
mov
xchg
xlat
mov
addr16
jmp
sub
xchg
inc
adc
jb
mov
cli
in
lods
iret
inc
adc
or
or
cwde
stos
call
loop
test
aam
gs
dec
call
sbb
sub
add
cmps
int
arpl
(bad)
jmp
add
adc
xor
fwait
int3
sub
daa
fiadd
inc
out
hlt
les
pop
push
inc
pop
std
sti
leave
(bad)
leave
mov
int
jns
ins
lock
push
xchg
jge
xchg
add
pusha
mov
(bad)
xor
rol
push
cdq
int3
jmp
sub
cmp
test
jp
inc
push
sbb
rcl
xchg
cmp
aad
push
(bad)
fld
push
and
popf
push
push
dec
arpl
jno
stos
push
mov
in
fsubp
xor
mov
fstp
jne
mov
mov
out
xchg
cmp
mov
inc
loop
test
pop
pop
jae
retf
mov
ret
xchg
xor
mov
stos
mov
pop
icebp
outs
sbb
jmp
movs
icebp
test
add
sbb
dec
add
pop
fsubp
push
in
adc
sub
or
inc
pop
cld
cli
outs
clc
jne
in
rcl
push
mov
popf
popf
in
mov
pop
fst
and
aad
idiv
lock
mov
mov
ret
dec
(bad)
fwait
cmp
and
inc
sub
je
xchg
jae
add
adc
pop
jecxz
inc
jne
test
nop
cmp
push
das
repnz
cmp
xchg
jp
mov
jmp
stos
mov
sbb
(bad)
sti
(bad)
aam
stc
xchg
jg
retf
dec
movs
cmp
sti
sub
std
jl
mov
mov
ss
call
xor
aad
jnp
out
sbb
dec
mov
add
or
sti
pop
js
rcl
int3
dec
xor
inc
nop
push
leave
and
pop
dec
retf
cmc
pop
mov
call
push
sahf
mov
cwde
(bad)
in
popa
ficomp
loop
leave
std
jle
xor
pop
(bad)
ins
mov
cli
sti
add
ss
mov
jns
mov
retf
adc
cmps
dec
cmps
repz
sbb
call
movs
cmp
test
xor
test
push
(bad)
aam
cmp
rcl
sti
inc
jmp
dec
test
mov
push
aaa
cmp
fisttp
sub
add
and
xchg
and
das
or
jns
ret
sbb
add
lahf
mov
mov
mov
xor
lea
mov
inc
add
out
enter
dec
jns
jg
push
cmp
xchg
les
out
cmp
dec
mov
stos
jmp
cmp
sub
fisttp
pop
mov
push
xchg
xor
mov
lock
inc
jmp
das
cli
int3
xor
rol
jl
xchg
mov
xchg
(bad)
rcr
scas
ds
pushf
jp
pop
adc
mov
jl
stos
call
xchg
dec
outs
aam
mul
or
fnstenv
push
pop
sub
or
aaa
imul
ins
xchg
mov
sahf
sub
xor
call
fnstenv
mov
adc
sahf
stos
and
aad
jnp
mov
push
sub
loope
stos
ja
xor
into
or
xor
jb
adc
test
mov
nop
xor
inc
mov
nop
js
xchg
daa
mov
cmc
ja
xor
fild
xchg
lea
push
jecxz
sahf
cdq
ss
sti
jmp
ins
sbb
sub
call
aam
shl
jge
shl
cli
push
inc
or
mov
push
mov
retf
ss
inc
(bad)
int
push
repz
xor
cld
sbb
in
dec
pop
retf
fs
xor
xchg
mov
in
or
xor
iret
(bad)
or
jo
enter
cmp
test
ins
sbb
sub
adc
cmc
cmp
movs
xchg
jb
lds
les
jp
cmp
enter
pop
sbb
dec
pop
pop
ds
test
leave
cwde
push
jbe
rol
pop
xchg
loope
and
or
(bad)
les
stc
pop
cmp
je
push
(bad)
call
push
cs
dec
loope
push
sbb
int3
std
adc
xchg
jecxz
es
xchg
cmps
inc
mov
pop
dec
call
cmp
cs
mov
fdivr
sahf
mov
cmp
add
jle
addr16
adc
out
mov
das
out
(bad)
hlt
xchg
jmp
shl
das
fs
test
std
lahf
call
inc
shl
aaa
adc
stos
dec
mov
stos
sbb
sub
pop
lods
mov
push
cmp
int3
mov
inc
lods
ret
ror
add
jbe
dec
cld
sbb
out
lock
inc
bnd
xor
div
test
xchg
dec
ins
ret
or
sub
sbb
cmp
les
mov
popf
mov
pop
sub
bound
inc
fcmovu
lea
mov
mov
xchg
xor
push
(bad)
out
xchg
xchg
sub
dec
mov
mov
fwait
jecxz
data16
shl
cmp
ret
ss
add
inc
mov
in
call
inc
mov
add
cmp
dec
sbb
fwait
push
add
dec
jp
in
cmps
ja
jnp
xor
jmp
ss
pushf
dec
imul
mov
fmul
push
mov
push
and
out
sbb
or
or
fimul
jnp
jmp
(bad)
hlt
test
fs
repnz
inc
add
jb
les
mov
in
inc
cmp
sub
xchg
push
pop
mov
popf
retf
lds
lods
push
stos
adc
jno
inc
jl
mov
iret
add
pop
popf
push
popa
cdq
add
mov
in
fs
lods
iret
sbb
mov
mov
cmp
fmul
cmp
mov
cmp
jg
mov
inc
inc
xchg
mov
clc
mov
sub
cmp
imul
call
mul
adc
neg
pop
add
xchg
mov
es
mov
push
(bad)
stos
pop
and
pop
aam
cld
sti
cmps
and
jle
push
xor
sub
ja
xor
push
rcl
cmc
out
popa
mov
pop
std
ja
aas
inc
pop
push
jecxz
hlt
mov
aas
jp
mov
mov
sub
std
jns
mov
fisttp
test
push
js
sar
and
movs
in
pop
aas
movs
dec
xor
mov
or
jo
not
dec
std
inc
mov
mov
pop
scas
inc
jle
dec
cmp
shl
cwde
fisttp
test
jg
(bad)
test
outs
jg
add
mov
jo
retf
inc
jae
int3
sub
daa
cmps
and
mov
aaa
popa
and
cmps
mov
jecxz
fs
mov
ss
sub
aas
mov
mov
mov
mov
test
test
scas
dec
add
mov
push
add
sbb
mov
mov
inc
aaa
sbb
xchg
aam
jge
in
xor
mov
mov
xor
mul
out
cdq
enter
or
adc
ficomp
dec
les
mov
cwde
lods
mov
dec
out
clc
push
push
pop
jo
mov
mov
push
clc
mov
mov
pop
mov
outs
cs
push
mov
or
jmp
fs
bound
sahf
test
jp
xor
pop
xchg
push
jmp
cdq
rcl
les
and
mov
not
xchg
lock
les
mov
jo
lea
std
dec
stos
movs
clc
rcl
shrd
cmp
dec
jo
and
lds
out
fwait
es
lock
xchg
int
mov
das
inc
sbb
lahf
pop
loopne
add
adc
pop
les
imul
inc
or
push
imul
push
ins
cwde
push
iret
icebp
movs
jge
mov
fld
call
sbb
cmps
mov
cld
in
add
fcmovnb
add
mov
call
ret
enter
mov
push
sbb
iret
pusha
dec
pop
shl
es
sar
or
add
adc
jg
mov
push
js
neg
js
jne
imul
out
fs
dec
lahf
pop
dec
(bad)
fisub
cmp
mov
icebp
cmps
pop
lea
(bad)
or
jmp
inc
into
jns
mov
sub
je
gs
jo
push
mov
sbb
push
cmp
int
pop
add
or
or
xchg
cmp
add
jmp
lahf
je
xchg
ja
fidiv
in
pop
loope
xchg
inc
jecxz
sub
sbb
sub
jg
pop
jns
popf
(bad)
mov
jmp
dec
xor
iret
or
outs
and
out
loop
mov
adc
push
cdq
mov
nop
jmp
loope
push
ja
imul
adc
mov
jmp
xlat
aaa
fst
loop
pop
or
jnp
or
fwait
mov
jecxz
cmp
leave
sbb
daa
jb
xchg
jp
jl
xor
mov
aas
sahf
sub
cmp
inc
lods
scas
mov
adc
adc
js
inc
je
inc
mov
jb
adc
push
pop
adc
adc
nop
sub
sbb
ror
jne
stos
(bad)
mov
cdq
iret
frstpm(287
inc
jmp
push
scas
je
cmp
add
pop
(bad)
(bad)
mov
sub
xor
push
aas
iret
mov
ja
cmc
and
adc
test
jmp
out
mov
jge
xor
pop
inc
or
xor
add
clc
jo
cwde
sub
xchg
test
scas
ret
inc
dec
ins
fist
(bad)
into
push
bound
pop
dec
xor
es
sbb
lods
jno
fsubrp
stos
and
jbe
loopne
xor
dec
ds
and
inc
mov
bound
ret
and
xchg
mov
add
into
test
inc
jo
ins
mov
enter
rcr
mov
dec
cmp
rol
mov
and
hlt
adc
out
inc
hlt
std
mov
mov
mov
and
cmp
mov
or
dec
adc
stc
and
test
mov
retf
stc
push
rol
pop
test
adc
cmp
fstp
pop
push
pop
or
stos
inc
jb
fcom
in
pop
add
outs
or
adc
ds
xchg
and
dec
popf
sub
or
push
push
aas
lods
fiadd
cwde
nop
es
xchg
out
cmp
xchg
clc
and
popf
shr
adc
fcom
push
imul
not
in
jge
cmp
enter
fcmovnu
jp
pushf
and
sar
inc
mov
cmps
rol
or
movs
call
(bad)
sbb
or
aad
inc
lock
mov
ret
xchg
mov
and
addr16
jmp
sti
inc
pop
ss
test
nop
es
cdq
mov
ret
bsf
pop
push
mov
lods
lock
add
movs
adc
fs
shl
mov
mov
outs
sub
(bad)
(bad)
fstp
jno
out
push
jns
into
xchg
fcos
cmp
imul
(bad)
repnz
dec
popa
test
add
jmp
pop
popa
fwait
jae
or
ja
or
loop
fisub
retf
xchg
pop
mov
sahf
lock
aaa
mov
jns
in
and
and
jecxz
mov
fldcw
addr16
sbb
sbb
pop
fimul
cld
cmps
jbe
out
scas
or
leave
inc
outs
mov
in
inc
or
mov
cmp
jns
cmps
imul
xchg
fdivr
jl
push
fmul
mov
(bad)
lahf
scas
push
movs
sbb
xor
icebp
mov
stc
scas
in
pop
outs
add
dec
jg
out
xchg
inc
jmp
rol
pop
push
pop
mov
or
sbb
add
cmp
jge
fadd
xlat
dec
dec
pop
fimul
and
push
icebp
pop
sbb
call
jne
sbb
(bad)
mov
daa
int3
int
mov
iret
outs
adc
mov
int3
jno
cli
add
inc
inc
aam
nop
aam
fndisi(8087
fisub
dec
in
dec
rcl
shl
movs
inc
test
xchg
jns
add
mov
enter
cmp
ja
xor
jbe
push
and
paddsb
in
sub
pop
jmp
shl
sub
in
outs
retf
sub
jge
sub
sbb
jge
dec
jmp
dec
enter
push
outs
mov
arpl
mov
mov
cmp
push
mov
stc
test
inc
or
mov
arpl
sub
mov
sbb
(bad)
out
(bad)
jbe
and
xchg
sahf
pop
retf
xor
test
xchg
loope
jmp
cmp
add
or
or
loop
retf
push
stos
shl
mov
mov
in
push
in
in
pop
inc
aaa
push
push
mov
xor
jae
mov
ror
push
cmp
cmp
mov
das
mov
les
repnz
iret
jnp
inc
out
sbb
mov
cmp
mov
pushf
push
icebp
pcmpeqb
jb
push
jmp
je
cwde
int
xor
fwait
or
ins
hlt
sar
xchg
pop
pop
pop
push
xor
aas
xor
pop
jecxz
cmp
js
mov
ret
out
(bad)
ins
dec
xor
clts
pop
xor
out
sub
(bad)
cmp
std
mov
pop
sbb
sub
fild
or
mov
xchg
test
clc
cwde
mov
pop
push
add
je
sbb
hlt
pop
mov
out
fst
(bad)
(bad)
daa
dec
lock
repnz
pop
add
and
jbe
jo
push
ds
or
ins
xor
xchg
ds
outs
popa
imul
or
fimul
dec
pop
mov
or
lahf
cmp
sbb
daa
or
inc
(bad)
pop
jb
jmp
and
arpl
mov
call
test
jb
adc
imul
cmp
adc
pushf
xor
gs
aaa
shr
mov
dec
inc
mov
sbb
or
lea
shl
bound
leave
xlat
pop
in
add
push
shr
cmps
(bad)
sub
cmps
cs
push
push
out
mov
mov
adc
bound
(bad)
adc
xchg
add
int3
jg
jg
ret
cmc
cmps
mov
scas
outs
mov
inc
mov
ret
pop
test
ficom
mov
aaa
popa
or
out
ss
sbb
movs
add
stos
mov
jg
dec
out
pop
das
imul
imul
sub
cmp
xor
fsubr
inc
pop
mov
out
jg
adc
sahf
iret
jl
mov
outs
push
jmp
in
rol
cmp
js
xor
movs
sahf
jmp
popa
shl
dec
add
mov
or
push
cmp
and
push
cs
push
in
pop
scas
stos
popf
loopne
jmp
add
mov
scas
sahf
inc
lods
ds
clc
xor
(bad)
sahf
hlt
sahf
pop
js
shl
xor
aad
push
outs
enter
popf
add
(bad)
(bad)
mov
out
push
sbb
sbb
in
(bad)
mov
cmp
aas
mov
dec
push
mov
rol
lock
adc
inc
test
sbb
shr
xor
push
fdivrp
mov
and
je
pusha
pop
repnz
xlat
cmp
lds
mov
pop
loop
mov
jae
stos
mov
add
loopne
dec
shl
sub
mov
shr
sbb
mov
xor
cmc
xchg
jl
clc
mov
cmps
cmps
jle
mov
setnp
mov
lods
xor
gs
mov
ins
pop
fs
das
push
hlt
icebp
cmp
popa
dec
push
add
aaa
mov
aaa
push
xor
jo
fucom
xchg
stc
std
adc
(bad)
ficomp
jecxz
nop
stc
leavew
or
sbb
jl
fs
mov
jae
fbstp
pop
scas
sub
aaa
lods
in
cmp
leave
cld
cmp
test
hlt
mov
dec
xchg
clc
pop
imul
bound
xchg
leave
pop
cmp
cmps
nop
xchg
or
or
push
leave
or
(bad)
jmp
mov
pop
push
das
push
mov
lods
out
or
lock
das
add
mov
mov
sti
pop
shr
mov
out
dec
xor
scas
fst
mov
daa
cmp
cmp
pop
mov
pop
inc
adc
pop
pop
dec
inc
xor
mov
xchg
loope
inc
pop
ror
aas
aam
cmps
fwait
inc
pop
mov
cdq
dec
mov
lock
push
ins
sbb
jecxz
int
cmp
imul
mov
mov
pop
inc
cld
movs
adc
jb
push
mov
pop
icebp
mov
stos
add
cmps
push
ret
and
shl
ins
lock
dec
adc
cs
or
mov
or
mov
sbb
sub
shl
les
faddp
inc
sub
stos
push
mov
mov
test
out
xlat
icebp
cmp
push
ds
add
dec
aaa
dec
pop
xor
add
dec
or
mov
call
and
or
pusha
sbb
lds
fimul
rol
mov
fld
mov
push
or
cmp
(bad)
hlt
push
nop
add
mov
mov
add
xchg
imul
test
test
in
jl
cdq
fild
and
hlt
sahf
jmp
mov
movs
imul
lods
sbb
mov
scas
iret
test
pop
jl
dec
es
jp
push
dec
cld
xor
(bad)
pop
ins
add
mov
sub
lock
mov
es
fsub
test
xor
xor
inc
mov
cmp
pushf
outs
dec
jg
ins
mov
gs
pop
and
xlat
cmp
test
pop
and
(bad)
inc
cmp
jmp
mov
and
fisttp
jge
cwde
add
in
aaa
imul
cmp
fnstsw
rol
jp
dec
sbb
leave
jmp
inc
aam
fild
or
xchg
jne
call
lock
or
cs
push
popf
mov
pop
inc
xor
int3
mov
(bad)
outs
jmp
jne
cmp
xor
sub
in
dec
rcl
push
ficomp
dec
(bad)
lahf
sahf
push
mov
dec
cwde
imul
jne
xor
cld
mov
pop
and
retf
inc
adc
cmp
test
mov
int3
mul
jbe
gs
fld
sti
hlt
add
cmc
xor
xchg
jecxz
fwait
mov
icebp
in
dec
ds
scas
imul
mov
sbb
fisub
pop
jle
pop
shl
dec
cmp
std
adc
and
(bad)
push
mov
mov
enter
add
lahf
jp
jo
sub
int3
stc
inc
arpl
push
fcomp
adc
and
mov
popf
or
lods
fnstsw
dec
xor
or
jns
add
inc
data16
ret
mov
loope
das
cdq
push
in
not
and
scas
jg
out
ficomp
imul
inc
ja
cmp
cmps
addr16
mov
inc
jle
gs
retf
rcl
lods
sti
test
mov
inc
pushf
sbb
hlt
jbe
jne
xlat
test
pop
loopne
push
outs
test
and
les
inc
push
cmps
lds
int
enter
add
mov
sub
sbb
xor
out
clc
daa
jb
cmp
dec
or
adc
jmp
sbb
cmp
data16
popf
call
dec
sub
mov
push
clc
shl
imul
aaa
xchg
ins
bnd
push
xlat
mov
pop
adc
mov
dec
leave
pop
or
scas
fwait
out
dec
or
fild
clc
and
xchg
mov
retf
clc
out
aad
cmp
push
push
(bad)
out
jecxz
ret
mov
imul
arpl
jbe
push
repz
add
xchg
stos
push
mov
xor
stos
in
mov
ds
test
add
xacquire
jmp
push
push
into
fisubr
cmp
and
or
test
mov
cmp
fist
out
xor
mov
imul
push
lock
stc
leave
inc
cmp
add
dec
adc
scas
cmp
shl
mov
push
pusha
(bad)
mov
xchg
retf
dec
fcmovb
test
inc
sar
ins
shr
repnz
clc
sub
fsub
adc
jbe
out
push
mov
out
cs
(bad)
adc
mov
loopne
jge
movs
cmp
dec
fnstcw
dec
fsub
xchg
sahf
out
xchg
cmp
iret
dec
lea
rcl
ins
push
mov
arpl
or
and
lods
adc
inc
pop
scas
out
dec
imul
cdq
aaa
mov
xor
dec
mov
mov
inc
icebp
ret
enter
push
mov
cmovnp
and
fcmovne
jmp
mov
bnd
lods
push
(bad)
mov
adc
and
xchg
in
xchg
mov
jl
cmc
test
mov
rcr
sbb
out
into
rol
xchg
add
inc
sbb
push
pop
pushf
sub
cs
xor
cmp
mov
sub
ja
add
clc
sahf
imul
mov
movs
dec
cdq
dec
pop
in
add
mov
(bad)
cli
in
adc
clc
out
dec
cmp
out
cwde
pop
mov
adc
jo
popf
jecxz
ret
or
dec
add
stos
push
push
xchg
cmc
jmp
and
loope
iret
push
pop
in
mov
and
aaa
rol
leave
fimul
add
mov
inc
add
nop
push
cmp
jp
std
scas
retf
out
sub
push
sub
icebp
mov
dec
pop
xor
sbb
mov
pop
js
adc
ror
adc
(bad)
shl
jmp
loopne
outs
loopne
mov
rcl
test
loop
es
and
sub
call
jb
stc
enter
jmp
fbstp
popf
ret
cwde
retf
cs
pop
movs
mov
mov
rcr
jl
test
and
mov
(bad)
aam
(bad)
stos
cmc
js
ja
loop
nop
pop
or
sub
ins
adc
inc
dec
cmp
inc
(bad)
(bad)
sbb
daa
cmc
(bad)
mov
jmp
xchg
push
dec
mov
mov
cmp
ftst
jb
aad
mov
in
mov
mov
jle
pusha
sub
mov
ror
jp
inc
push
lea
pop
out
or
push
jbe
stos
jbe
fadd
xchg
pop
stos
jae
jbe
pop
and
xchg
sbb
sbb
loope
mov
int3
jg
pop
mov
repz
sub
jp
sub
iret
dec
ins
out
dec
push
cmps
dec
(bad)
movs
test
push
jmp
cwde
push
mov
add
ret
xlat
stos
jmp
adc
out
inc
shl
or
fcomp
mov
or
test
and
and
adc
mov
add
or
pop
mov
or
pop
daa
xlat
neg
mov
(bad)
cmp
mov
cmp
cli
dec
cwde
xor
out
or
loopne
and
aas
(bad)
mov
fldcw
adc
cmp
xor
mov
sub
test
test
mov
hlt
movs
cmp
and
popf
js
xchg
push
mov
sti
or
fimul
jmp
sbb
or
stc
or
or
add
jo
jp
inc
adc
mov
mov
cld
pop
ret
es
jl
ror
or
xchg
ins
push
in
shr
shl
xor
mov
cli
sub
in
or
sub
out
stos
or
add
div
stc
(bad)
mov
test
in
aas
fisub
adc
imul
retf
js
mov
push
or
or
jp
cmp
test
cwde
nop
ror
mov
dec
sub
aas
cmp
mov
add
mov
test
(bad)
es
sbb
hlt
push
dec
xlat
movs
dec
fs
sub
push
mov
je
or
lock
mov
arpl
movs
or
dec
mov
push
(bad)
mov
cmp
jo
or
pop
ja
ror
fidiv
push
mov
(bad)
cld
pushf
cmp
aad
scas
dec
sub
add
and
or
or
aas
iret
iret
mov
jmp
adc
cmp
xchg
call
shl
out
and
adc
sub
mov
ins
and
pushf
mov
es
pusha
mov
mov
fcomp
sbb
or
addr16
add
and
shl
lods
or
imul
xchg
retf
inc
jnp
cmp
pusha
movs
dec
push
jns
mov
lea
call
mov
shl
shl
fwait
sti
fwait
mov
je
stos
jecxz
shl
xchg
xor
xlat
int
idiv
out
jmp
fld
int3
out
jle
or
inc
cmp
std
(bad)
push
pop
pop
sbb
cmc
push
jmp
cli
mov
test
cmp
add
pop
sub
je
xchg
xor
in
lgs
dec
sbb
mov
arpl
pop
sub
jae
sub
jmp
enter
sbb
pop
outs
out
xchg
mov
inc
mov
jnp
icebp
mov
popa
shr
imul
cmp
mov
repz
xchg
jmp
add
jbe
jb
xchg
add
ss
scas
mov
adc
mov
dec
mov
test
cld
lods
loope
sub
std
fist
or
imul
ins
add
data16
dec
jo
dec
aam
pop
sahf
retf
pop
outs
sub
pop
push
mov
ss
loope
mov
ror
mov
inc
jo
loope
cmp
sbb
loop
adc
js
mov
mov
mov
(bad)
xchg
loope
hlt
loopne
repz
(bad)
scas
pop
(bad)
retf
adc
jb
dec
je
mov
int
and
sub
jle
fbld
mov
out
pop
mov
adc
dec
lock
or
pop
push
ss
fnstenv
(bad)
pop
fdiv
pop
mov
call
popf
mov
cmp
dec
sbb
push
loopne
in
xchg
mov
xchg
inc
inc
mov
aam
sbb
test
xor
stc
fsubr
arpl
outs
jmp
sub
adc
out
jae
xchg
mov
retf
into
gs
and
imul
gs
call
sub
jp
add
test
inc
js
mov
fild
mov
dec
mov
ja
sti
cmp
sbb
aas
sub
test
jg
adc
aam
pop
cli
loop
imul
fnstenv
fsubr
sub
fst
xchg
les
sub
cmp
sti
inc
sahf
hlt
cwde
jg
push
in
scas
leave
sti
pop
xchg
lahf
ret
jae
fbld
xchg
and
jle
mov
adc
pop
pop
sub
jb
pushf
xchg
mov
fdiv
pop
push
jne
push
and
sub
mov
sub
imul
sub
push
inc
sub
cli
fs
enter
inc
scas
mov
nop
push
mov
inc
inc
jg
daa
jmp
dec
cmps
xchg
add
xchg
call
int3
les
mov
test
sbb
add
sbb
cld
es
cmp
loop
mov
pop
dec
or
(bad)
cmp
call
lods
ins
lea
in
in
rcr
xor
imul
dec
fnstsw
inc
adc
lea
mov
fidiv
stc
fadd
movs
adc
xchg
lods
int3
gs
pusha
ret
dec
push
movs
movs
ret
mov
stc
push
je
jg
push
sub
test
test
pop
inc
fcomp
ins
(bad)
das
jmp
fwait
rol
jg
pusha
fdiv
xchg
cmps
sub
sbb
div
mov
icebp
fdiv
in
jge
jae
(bad)
aaa
ret
scas
xchg
lods
idiv
xor
aad
cmc
dec
movs
rol
cmp
adc
mov
dec
cs
int3
bound
out
cdq
nop
xchg
call
mov
mov
mov
jmp
js
mov
pusha
xor
jae
jo
mov
out
test
test
cwde
outs
mov
jge
cmp
push
int
pop
xor
(bad)
aam
push
hlt
call
and
call
sbb
shl
sub
dec
pusha
adc
jecxz
loop
popa
das
sub
inc
pop
xchg
or
lds
lods
loop
push
aas
stos
cmp
or
xor
mov
push
xchg
retf
or
jecxz
adc
out
in
fsub
leave
mov
or
inc
enter
add
jle
mov
repz
test
fbstp
adc
jg
xor
xchg
and
add
sbb
inc
mov
in
cmp
ins
push
xchg
mov
jl
push
sbb
xchg
jge
into
inc
test
rcl
or
inc
jmp
in
sub
dec
adc
pop
sbb
xchg
mov
js
aas
nop
dec
pop
or
loop
addr16
cwde
daa
mov
ret
mov
xchg
mov
mov
mov
add
dec
mov
cmp
sbb
mov
movs
mov
push
adc
js
cli
mov
mov
xchg
pushf
cld
dec
neg
mov
push
cmps
int3
loop
mov
mov
pop
and
sysenter
cmp
dec
aas
cmps
leave
pusha
stc
(bad)
arpl
add
or
inc
rcl
out
dec
imul
sar
cld
sub
push
xchg
pushf
aaa
out
jne
mov
xchg
sbb
shl
cmp
jo
mov
or
jb
in
daa
cmp
popf
push
adc
les
mov
imul
and
mov
and
setno
sti
push
xchg
inc
in
inc
cld
cld
pop
jmp
cs
xor
fimul
das
stos
daa
mov
add
xor
sub
mov
ds
adc
retf
addr16
push
shl
in
dec
xor
data16
pop
stos
(bad)
std
hlt
int
div
mov
loopne
xchg
mov
push
retf
inc
int
pop
psubd
call
out
mov
xor
jmp
mov
inc
popf
xchg
add
xchg
nop
jbe
test
ret
mov
xor
xchg
inc
call
shl
je
fld
mov
sbb
call
mov
mov
or
sub
outs
fwait
pop
xchg
adc
ds
mov
jmp
imul
icebp
imul
adc
sbb
mov
sbb
fisub
lds
aad
and
loop
mov
push
mov
mov
add
jno
jno
pop
fsubr
push
mov
shl
mov
add
mov
sbb
xor
or
dec
into
dec
xchg
fisubr
stos
ds
loop
iret
mov
xchg
mov
or
mov
xchg
xchg
mov
fstp
jne
xor
sub
mov
mov
cmp
test
mov
out
inc
pusha
test
jmp
stos
daa
dec
dec
mov
scas
pop
pop
mov
mov
cmps
sub
in
pop
ret
sar
xchg
push
adc
call
(bad)
mov
or
fst
movs
jae
daa
movs
fisttp
call
and
push
repz
mov
jmp
int
aas
mov
mov
mov
pusha
lds
push
nop
fist
jbe
xor
xor
xchg
aad
dec
in
push
shr
lds
sub
mov
sar
inc
cmp
mov
mov
pmuludq
mov
sub
xor
xchg
adc
stc
cmp
cwde
dec
aam
aas
add
pop
or
pop
push
(bad)
jle
les
in
jg
aaa
data16
add
or
in
cli
mov
dec
(bad)
outs
outs
lea
icebp
in
movs
cmps
inc
arpl
rol
pushf
(bad)
cli
dec
stos
(bad)
inc
aaa
repnz
cs
(bad)
repnz
(bad)
pop
pop
xchg
mov
ins
sbb
clc
shl
addr16
stos
xchg
push
cld
add
lds
inc
mov
and
nop
inc
iret
inc
sbb
inc
mov
inc
(bad)
hlt
mov
loop
jge
jno
movs
stos
add
aad
push
add
mov
lods
imul
xor
enter
nop
inc
cmps
scas
dec
fsub
xchg
cmc
jl
mov
ret
inc
(bad)
pop
sub
xor
sbb
data16
daa
clc
shr
test
pop
test
pushf
outs
pop
fstp
mov
pop
in
cmp
test
fist
repz
aas
jp
mov
push
mov
cdq
ins
lock
cld
lods
add
cmp
mov
adc
(bad)
popf
mov
sub
adc
loop
mov
mov
cmp
jae
jle
xor
bound
adc
inc
repnz
inc
(bad)
jmp
push
pushf
dec
popf
pop
cld
mov
nop
mov
pop
and
mov
xchg
dec
out
add
cmps
or
(bad)
mov
pushf
aad
sbb
retf
outs
stos
xor
and
push
inc
or
cli
hlt
sbb
js
push
arpl
loop
mov
jne
inc
in
jns
sar
or
xor
inc
imul
retf
icebp
fld
add
popf
dec
call
cdq
inc
xchg
movs
mov
aad
inc
jg
mov
idiv
(bad)
jle
in
mov
sub
ffree
sbb
and
xchg
cmp
ret
mov
add
mov
mov
test
stc
pop
inc
test
or
inc
std
int
aam
aad
jge
push
ins
adc
pop
call
push
imul
ins
mov
push
dec
cmp
push
imul
mov
and
aam
cmp
pop
xchg
(bad)
or
adc
pop
fdivrp
movs
xchg
repz
ins
jp
pop
jno
(bad)
mov
mov
arpl
call
clc
inc
xor
(bad)
sbb
addr16
jbe
add
push
xlat
clc
xchg
pop
mov
xchg
add
inc
repnz
dec
inc
push
pop
jb
and
ret
inc
and
out
inc
popa
fsincos
mov
or
(bad)
adc
mov
pop
mov
je
into
inc
push
mov
inc
sub
in
arpl
mov
in
sbb
or
add
sub
push
outs
jns
fst
mov
lods
cmp
jae
fidiv
pushf
inc
xchg
or
(bad)
xchg
and
mov
sub
and
jp
enter
pop
in
je
mov
dec
jecxz
push
cli
mov
daa
loope
data16
fimul
mov
and
sub
mov
mov
push
js
mov
mov
add
inc
xor
mov
je
mov
ret
imul
fs
frndint
push
idiv
sbb
clc
repnz
int
add
retf
add
and
loop
sbb
rcl
popf
jns
cmps
out
in
cmovs
loopne
bswap
xlat
push
cmp
out
or
fadd
(bad)
retf
icebp
xchg
or
cs
stos
stos
and
jne
mov
idiv
inc
and
popa
push
in
iret
inc
pop
dec
dec
shl
adc
mov
das
sti
ins
js
popa
pushf
cdq
add
mov
in
and
add
mov
(bad)
jmp
inc
int
scas
adc
shl
mov
adc
test
mov
in
sbb
cld
and
shr
int
xlat
mov
push
mov
mov
pusha
xchg
xchg
sysexit
movs
lds
fnstcw
(bad)
movs
mov
outs
sbb
int
aas
inc
loope
jbe
stos
jbe
and
pop
scas
bound
shr
imul
mov
mov
xor
adc
push
enter
mov
rol
inc
push
dec
inc
cmp
cmps
xchg
in
xchg
movs
inc
mov
fmul
xchg
push
bswap
mov
in
imul
cmp
xchg
cmp
jnp
dec
psubd
mov
imul
push
fist
jnp
cmp
lods
jae
sahf
bound
mov
enter
mov
movs
aaa
rcr
push
in
cmc
xor
fs
mov
add
mov
inc
inc
adc
stc
aad
xor
mov
inc
clc
mov
and
nop
ret
mov
mov
xor
nop
jle
and
mov
push
ret
test
sti
iret
pop
dec
add
xlat
out
mov
jns
pop
cs
daa
(bad)
bound
popf
sbb
push
cmp
pop
pop
xchg
pop
xor
push
push
mov
mov
jl
inc
sahf
xchg
add
or
es
pop
sbb
mov
mov
ficomp
pop
or
(bad)
mov
je
jmp
leave
push
rcl
aaa
fld
outs
aad
xlat
push
sub
push
sub
sti
adc
xchg
pop
lahf
bndldx
cdq
cdq
or
test
jl
adc
out
test
shl
mov
dec
jbe
dec
inc
xchg
adc
push
jl
fwait
xchg
mov
mov
sub
cli
pop
dec
mov
loop
int
mov
gs
push
push
sti
add
mov
mov
ret
pushf
mov
dec
outs
mov
mov
jmp
daa
mov
mov
xchg
xor
sbb
jno
into
mov
pop
pop
movs
mov
cmc
cdq
mov
push
iret
test
scas
(bad)
into
lock
dec
xchg
mov
and
push
stc
les
mov
mov
jmp
ja
scas
push
loopne
sub
lahf
mov
jecxz
mov
je
imul
sbb
sub
(bad)
int
cmp
and
sub
push
and
into
pop
fisttp
xlat
cmp
gs
adc
mov
(bad)
repz
adc
rol
sub
push
sub
dec
dec
mov
pop
pop
test
and
ja
outs
add
mov
inc
ror
jno
dec
nop
cmp
cwde
lods
fist
xchg
daa
mov
inc
sbb
cmp
mov
jne
sar
in
or
mov
inc
movs
cmp
fmul
(bad)
mov
hlt
popa
call
sub
fwait
inc
xor
mov
cmp
mov
mov
cli
mov
inc
cdq
mov
rcl
push
sub
gs
cwde
or
or
or
stos
and
loopne
add
mov
xor
imul
mov
mov
mov
loop
test
and
xchg
adc
cdq
jg
fisttp
dec
cli
inc
xor
mov
sub
ds
fcom
xchg
xor
div
(bad)
dec
or
ds
lahf
xchg
test
mov
pop
mov
dec
sar
adc
mov
push
push
cmp
mov
mov
mov
sbb
cmp
std
add
fmulp
hlt
mov
loop
aam
xor
aas
fnsave
xchg
cmp
add
rcr
adc
(bad)
loop
retf
jns
or
xchg
leave
and
sub
aas
test
xor
adc
(bad)
(bad)
jno
(bad)
jo
into
or
inc
sahf
xor
lock
inc
lea
or
enter
neg
mov
dec
cmps
pop
popa
or
out
sbb
aam
and
in
sti
enter
mov
xor
jne
xchg
mov
xchg
out
inc
(bad)
jp
jge
mov
or
cwde
aaa
mov
fnstsw
fcmovnb
sub
xor
aad
xor
jbe
pop
jp
nop
leave
out
dec
add
inc
push
add
dec
out
dec
jae
mov
idiv
jle
ret
mov
gs
mov
jmp
cdq
sbb
sub
xchg
sbb
cli
(bad)
lock
mov
ja
xlat
aad
add
pop
mov
lods
fs
aaa
cmp
cmc
fstp
(bad)
fstp
sub
add
dec
lahf
xchg
sub
cmp
movs
adc
stc
adc
test
inc
cdq
imul
ffree
mov
jmp
arpl
repnz
inc
mov
jns
xor
mov
in
(bad)
adc
(bad)
hlt
pop
ret
mov
mov
sbb
(bad)
out
cli
fidivr
js
pop
adc
add
pop
(bad)
jmp
mov
cs
aam
push
into
push
xchg
cmps
cmp
cmp
adc
aam
mov
icebp
push
fst
mov
or
and
arpl
add
sub
jae
mov
cmp
inc
(bad)
ja
push
mov
adc
sub
adc
test
les
js
sti
cli
jl
xor
push
out
dec
popf
pop
loop
out
push
popa
cmp
and
scas
xchg
sahf
mov
call
pusha
xor
dec
sbb
push
xchg
push
dec
xor
pop
(bad)
fcmovnu
mov
add
int3
fadd
(bad)
data16
jp
mov
mov
inc
aas
sub
sbb
rcr
dec
fsubr
shr
nop
pop
mov
and
xchg
inc
ds
loope
data16
mov
dec
dec
pop
loope
or
cmps
jo
pushf
(bad)
lock
sub
fnstcw
div
std
xor
cs
mov
rcl
mov
fisttp
call
sahf
xor
std
idiv
adc
jb
shr
sub
pop
mov
adc
xchg
or
sub
add
pop
sub
in
lods
lds
xchg
push
ins
cmp
mov
movs
push
pop
test
lds
mov
retf
test
add
aaa
cwde
in
in
nop
in
das
cs
int
push
sub
mov
popa
loopne
stos
daa
fcomp
repz
lea
mov
mov
(bad)
sbb
shr
push
pop
push
addr16
xchg
inc
scas
adc
mov
cmp
jbe
fistp
sbb
mov
sub
and
stos
aaa
mov
fidivr
inc
out
jl
fisub
mov
xor
scas
out
in
cmp
inc
fcmovnu
push
mov
outs
hlt
int
dec
sbb
test
fisttp
xor
add
or
jmp
dec
sub
inc
gs
jno
out
out
popa
xor
jnp
mov
inc
push
add
hlt
aas
(bad)
cmp
fmul
push
and
inc
adc
dec
fs
shl
cmp
ror
addr16
dec
jns
cdq
jle
mov
dec
(bad)
(bad)
je
sbb
je
clc
neg
outs
pop
mov
icebp
add
and
aam
adc
enter
mov
jne
sub
mov
and
sahf
aam
cld
mov
pop
test
pusha
sub
sub
pop
mov
pop
repz
mov
test
lds
imul
stos
mov
icebp
jge
sbb
cs
push
mov
lea
les
cmps
jle
adc
push
and
sub
cmp
std
push
dec
cmp
sbb
xor
sub
sbb
mov
dec
mov
sub
cli
push
rcr
retf
imul
loope
aad
enter
push
ficomp
mov
push
fs
lahf
shr
mov
push
in
add
rol
or
mov
sbb
loope
(bad)
leave
mov
jo
lock
xor
add
scas
xchg
add
scas
sub
dec
sbb
mov
inc
mov
jb
cmps
mov
mov
push
fstp
sti
add
fcom
int
pop
rol
out
add
mov
repz
arpl
ror
mov
pop
xor
(bad)
shl
loopne
xchg
lock
jecxz
iret
popa
or
mov
fst
add
fld1
ja
clc
inc
pushf
mov
sub
dec
arpl
jmp
cmps
xor
xchg
pop
sub
sub
add
out
fwait
dec
push
aaa
jns
xchg
fdivr
add
rcl
(bad)
mov
xchg
imul
hlt
sbb
mov
dec
ins
mov
jp
retf
add
sahf
pushw
mov
pop
aaa
mov
xchg
clc
ffreep
mov
out
xchg
cmp
and
ret
movs
rcl
dec
push
bnd
ss
int3
jecxz
jg
xchg
or
out
pop
aam
xchg
imul
mov
jb
int3
popa
dec
jg
mov
jp
xor
or
adc
jecxz
repnz
cmp
mov
outs
dec
pop
xor
icebp
(bad)
fwait
cmc
daa
inc
shl
jmp
cmp
aad
push
xchg
or
xor
adc
sub
icebp
aaa
(bad)
mov
and
(bad)
add
mov
xor
mov
push
outs
push
sbb
inc
push
dec
fmulp
push
pop
daa
xor
pop
nop
inc
popf
neg
cmp
push
inc
mov
mov
retf
sbb
mov
xchg
retf
or
repz
push
mov
and
or
sub
push
arpl
ins
mov
push
mov
rcr
aam
dec
sub
cld
(bad)
ja
push
adc
xor
cmp
adc
pop
loope
pop
or
loope
mov
xor
std
fist
call
jno
pushf
in
inc
aaa
in
je
imul
cld
mov
and
in
scas
pushf
dec
fld
cmp
xlat
call
cs
loop
rcr
je
add
sub
fnsave
push
add
fadd
and
adc
dec
add
repz
pmaddwd
dec
jbe
xor
push
ja
mov
popf
xchg
movs
inc
fbstp
test
add
mov
dec
mov
cmp
lahf
mov
retf
iret
sub
les
inc
push
in
sub
xor
push
rcr
cmp
jmp
sar
sti
jmp
cmp
sub
sub
xchg
sbb
lea
and
push
sub
xchg
scas
test
rcr
sahf
sar
jl
adc
xchg
bound
pusha
sub
lods
xor
fdiv
dec
mov
cld
lods
scas
popf
and
repnz
ja
sbb
push
mov
xor
imul
cmps
call
lock
sar
mov
sar
or
pop
movs
push
pop
fsub
mov
popf
mov
cmp
jmp
loopne
adc
out
bound
rol
rol
inc
imul
call
pop
sbb
push
cmc
and
mov
pop
fs
mov
pop
fldenv
loop
ins
addr16
les
xchg
xchg
inc
mov
push
inc
out
imul
loopne
add
inc
outs
loope
push
cwde
sbb
jge
sbb
inc
mov
dec
in
movs
mov
in
jbe
fs
inc
mov
popf
xchg
lahf
pop
retf
pop
test
mov
imul
(bad)
popf
shr
cmovs
neg
xchg
mov
lods
ins
pop
xor
test
push
dec
push
aam
repnz
sbb
push
sub
lahf
loopne
dec
dec
lock
and
sub
cmp
faddp
or
xor
mov
dec
dec
aas
fcom
sbb
xlat
mov
dec
xchg
clc
cmp
xor
cs
xor
imul
push
jne
repnz
int
or
push
xchg
xor
aad
add
push
mov
dec
adc
mov
in
jg
dec
sar
(bad)
jns
mov
test
sar
lods
xchg
nop
push
dec
dec
push
inc
loop
cdq
aas
jmp
daa
ret
mov
sar
pop
fwait
xchg
push
sahf
adc
jo
mov
xor
mov
test
stc
lea
cmps
xchg
jmp
div
in
ins
fdiv
fdecstp
xchg
in
xchg
repz
and
push
mov
push
loope
dec
jge
adc
push
lock
xor
push
dec
mov
sbb
outs
retf
push
mov
xchg
repz
nop
xor
mov
adc
mov
fsub
cmps
test
xor
push
jae
dec
mov
and
(bad)
fwait
adc
inc
xchg
and
cmp
loop
and
arpl
ins
sub
movs
fbld
jnp
test
bsf
cmp
rcr
or
add
sub
outs
pop
push
stc
ret
cmp
push
adc
cmps
pop
ins
gs
inc
or
mov
loopne
adc
push
fild
and
mov
jl
or
imul
cmp
mov
leave
(bad)
pusha
cmp
sar
das
stos
sahf
pop
mov
inc
sahf
push
pop
cmp
enter
jnp
or
(bad)
aaa
or
loopne
pop
xor
dec
test
pop
ror
push
out
push
faddp
push
inc
aas
fs
sub
outs
enter
lods
jb
rcr
inc
and
rcl
loopne
xchg
fnsave
fnstenv
rcr
xor
xchg
mul
and
outs
into
nop
call
test
(bad)
iret
not
call
fs
cs
pop
add
cmp
cmp
inc
pop
pop
sub
int3
xchg
jmp
fcmovnb
or
push
push
push
jbe
push
(bad)
repnz
xchg
les
mov
in
daa
loop
imul
mov
inc
dec
not
sub
pop
push
ins
sar
pop
clc
fnstcw
cmp
scas
adc
in
xchg
sub
lea
scas
dec
int
mov
call
inc
push
push
jns
pop
cmp
jmp
cmp
pop
mov
push
pusha
lods
rcr
dec
retf
leave
jecxz
test
xchg
and
and
inc
fs
ja
and
ins
push
std
inc
sbb
sub
call
js
and
sub
add
inc
dec
mov
xor
add
push
mov
xor
mov
push
add
sub
dec
aad
arpl
movs
xchg
rcl
fst
jb
push
mov
pop
es
xchg
cmp
popf
dec
xor
xor
xor
xor
fst
mov
inc
xchg
retf
jge
mov
outs
xchg
push
push
mov
fmul
push
xchg
into
lock
lea
fs
out
dec
cmps
pop
dec
mov
dec
into
pop
jecxz
lods
shl
aaa
jnp
xchg
push
mov
or
add
movs
psrlw
xlat
lds
pop
mov
add
aas
out
push
call
cmp
xchg
popf
inc
aas
jns
push
imul
mov
call
jecxz
cmp
jmp
ins
xor
ins
in
mov
(bad)
pushf
push
sub
pop
add
fnstsw
xchg
popa
pushf
lock
mov
fnsave
mov
mov
nop
ins
jo
imul
aam
mov
sbb
fisub
fs
mov
jg
movs
mov
push
ret
sar
aam
sbb
das
ja
or
sbb
(bad)
rcr
lea
sbb
lods
rol
dec
test
pop
push
jmp
jbe
xchg
lods
cmp
enter
and
repz
jnp
and
imul
fadd
mov
jecxz
cmc
mov
mov
div
sahf
ficomp
fcmovnb
std
lods
sar
sbb
sub
in
push
enter
cmp
xchg
xchg
cdq
sub
mov
setne
add
add
xchg
mov
dec
mov
cmps
jnp
xlat
pop
(bad)
retf
adc
mov
dec
add
scas
xchg
test
xchg
push
sbb
jns
icebp
pusha
sub
mov
gs
ins
imul
mov
jmp
jne
ret
or
(bad)
mov
jne
int3
lock
push
test
sbb
out
mov
imul
and
in
js
mov
(bad)
and
push
fwait
or
mov
add
mov
jmp
sbb
xchg
test
aad
xor
mov
sbb
nop
sub
xor
daa
sub
push
loope
fsub
aas
or
xor
int
dec
and
mov
xchg
sar
sub
test
into
push
add
out
outs
je
mov
inc
ins
mov
fwait
out
adc
aas
mov
shr
popa
xchg
mov
sub
pop
adc
add
xchg
pop
movs
in
mov
lods
or
jecxz
add
mov
fisttp
cmp
cmp
mov
inc
cdq
ret
xor
mov
mov
js
sahf
mov
cld
inc
aas
mov
jb
mov
retf
sub
push
loopne
jb
das
bound
mov
retf
pop
fsub
add
retf
jge
pushf
clc
xor
pushf
scas
aas
movs
push
push
aam
push
pusha
add
jmp
jmp
pop
jp
push
hlt
jae
mov
mov
adc
cmp
mov
scas
(bad)
cdq
out
jmp
xor
in
cmps
scas
enter
or
pushf
xchg
sbb
mov
mov
out
cwde
jecxz
jp
stos
icebp
scas
gs
dec
div
imul
addr16
(bad)
lods
xor
pusha
test
jb
cmps
or
and
aam
pop
xchg
addr16
popa
mov
xlat
(bad)
jmp
xchg
ret
scas
adc
cs
add
es
mov
push
jle
mov
nop
stos
int3
mov
jmp
pop
call
imul
jmp
push
and
(bad)
jg
adc
movs
sbb
out
fsubp
mov
mov
ja
in
pop
jmp
retf
jmp
vmovss
xor
pop
xchg
sub
jecxz
jnp
out
mov
push
xchg
xor
jae
dec
daa
dec
dec
sbb
xor
xor
mov
xchg
or
or
loope
push
in
idiv
rol
stos
push
xchg
jno
call
and
pusha
ss
jge
ret
adc
pop
es
loope
sub
std
into
pop
mov
or
dec
adc
ins
out
jmp
clc
sbb
dec
and
fcmove
dec
mov
dec
and
mov
pop
call
sar
xchg
dec
pop
(bad)
out
pop
call
repnz
mov
movmskps
mov
push
adc
push
pop
fmulp
retf
gs
in
cmp
add
fcomp
cdq
xor
leave
loope
test
add
clc
sub
and
retf
xchg
mov
mov
retf
or
jl
adc
adc
inc
or
jae
stos
call
(bad)
rep
out
out
test
das
xchg
div
std
lock
mov
hlt
cmp
and
mov
add
popa
out
inc
mov
leave
out
loopne
repnz
bound
jo
mov
ss
loope
xor
and
out
mov
in
(bad)
in
adc
bound
cwde
lods
aas
jnp
leave
push
add
or
mov
jo
mov
cli
cli
cmc
rdpmc
lds
mov
xor
cmp
inc
loope
cmps
inc
(bad)
ins
lods
ja
sbb
push
cmp
and
outs
and
add
mov
add
mov
sub
xor
scas
jle
push
mov
and
xor
jbe
sub
dec
ja
(bad)
mov
call
inc
and
adc
mov
jle
xchg
into
sbb
mov
nop
test
push
xor
movs
add
sbb
cli
pop
fcom
int3
dec
push
outs
pop
sti
in
retf
pop
aad
test
jbe
jno
je
dec
fbld
add
cmp
and
adc
fld
neg
jmp
sub
xchg
std
jae
stos
stc
jecxz
fimul
sbb
cdq
mov
je
add
xor
mov
cmp
aam
cmc
add
push
push
adc
mov
fs
mov
and
div
call
(bad)
(bad)
out
aaa
(bad)
repnz
sahf
jne
(bad)
fidivr
mov
(bad)
jo
out
and
rol
jae
push
push
cmp
call
sbb
js
add
dec
pop
push
add
in
or
jge
loop
or
iret
test
iret
jb
sbb
inc
and
mov
enter
and
xchg
and
mov
shr
nop
outs
dec
xor
les
aas
mov
out
scas
xor
(bad)
pop
sbb
leave
push
push
mov
rol
mov
fisttp
jns
ror
mov
int3
(bad)
xchg
in
arpl
xchg
adc
lds
sub
mov
xor
enter
arpl
add
(bad)
add
cmp
jl
xlat
lock
outs
loopne
fwait
sbb
lea
cdq
pop
fcom
popa
shr
(bad)
mov
int
xchg
sub
mov
mov
xchg
cmp
sub
(bad)
pop
xor
pop
push
push
jno
adc
in
xchg
ret
mov
outs
movs
inc
pcmpgtd
pop
dec
ins
call
lock
repnz
push
push
adc
je
cmc
pop
mov
and
in
cdq
pop
lods
push
aam
mov
in
mov
daa
nop
ss
jecxz
push
rcl
add
fnstcw
popf
sahf
rcr
test
lods
pusha
fwait
mov
shl
add
and
xchg
pop
jae
and
xlat
pop
dec
sbb
mov
gs
inc
sbb
add
sar
xchg
mov
add
fldcw
cmps
adc
ret
mov
inc
push
push
jo
jnp
inc
lods
mov
outs
jmp
rol
in
lahf
into
test
push
outs
cmps
outs
lea
pop
sbb
cmps
cmc
and
fld
pop
retf
push
sub
cmp
dec
and
or
ins
ficomp
ror
dec
jge
clc
pusha
lds
ins
call
mul
push
clc
cmp
cmp
cmp
xlat
jne
outs
mov
(bad)
out
cmp
or
cwde
pusha
xchg
test
dec
das
jae
xchg
jnp
inc
xchg
pusha
cmp
(bad)
fimul
or
push
iret
dec
pop
scas
dec
mov
push
ret
movs
(bad)
dec
adc
mov
(bad)
jecxz
adc
push
mov
inc
out
pop
push
shr
push
dec
jecxz
aaa
out
pop
jl
push
xchg
xor
push
lods
mov
in
cmp
fimul
stos
mov
push
mov
mov
in
(bad)
cli
sbb
lods
sar
pop
pop
loop
push
push
inc
xchg
cmp
adc
or
pop
sbb
mov
sbb
call
or
ucomiss
jo
inc
cmps
sub
scas
(bad)
mov
test
inc
dec
mov
add
shr
xchg
mov
cdq
mov
icebp
cwde
push
stc
nop
sub
out
mov
test
jmp
cli
jne
int3
div
adc
mov
mov
mov
test
mov
and
add
adc
dec
loop
popa
push
call
push
add
push
mov
sbb
icebp
sub
aaa
lock
pop
loope
and
add
mov
fdivr
xchg
fcomp
in
jp
lds
mov
mov
dec
fucom
das
sbb
sar
bound
je
pop
or
js
xor
xchg
fstp
cmp
(bad)
ds
call
push
jnp
push
adc
adc
and
push
nop
popa
cwde
inc
iret
rcr
sbb
popf
movs
out
call
ds
call
fnstenv
mov
aaa
rol
push
(bad)
fcom
push
and
sub
out
outs
pop
jmp
dec
add
(bad)
sub
jns
(bad)
das
test
pop
sar
adc
mov
adc
mov
mov
loope
(bad)
cmp
into
mov
mov
or
sbb
ins
push
push
mov
loopne
enter
test
cmp
fisttp
mov
out
push
hlt
fistp
popa
ret
xchg
ror
jne
std
xlat
push
xchg
xchg
outs
mov
or
(bad)
lock
dec
inc
retf
nop
in
mov
mov
int
fdivr
cmp
lods
push
icebp
jo
jp
add
out
clc
idiv
(bad)
cmp
mov
or
and
imul
dec
push
push
sar
fisttp
ds
sbb
xor
cwde
jmp
adc
jo
jne
sahf
push
pop
outs
add
add
inc
fist
je
cmp
pushf
dec
fmul
xor
je
mov
xchg
addr16
loope
pop
enter
fdiv
dec
in
jne
neg
xor
and
xchg
test
mov
ins
dec
push
or
xchg
lock
xor
jge
and
and
cmp
loop
lods
sbb
inc
lds
adc
sar
fild
pop
inc
in
fbld
jo
cmp
repnz
outs
dec
mov
mov
cdq
push
in
xor
dec
mov
cdq
repz
adc
enter
cmp
loop
mov
jb
shr
cli
xchg
shl
into
lahf
(bad)
ret
push
jl
stos
mov
add
push
gs
cmp
out
inc
inc
push
into
pop
xchg
cmp
xor
mov
sbb
bound
in
fadd
xchg
in
inc
data16
sbb
jne
jl
fcom
add
test
repnz
out
adc
add
xchg
lods
sbb
mov
call
xchg
out
call
and
ret
or
sbb
dec
or
cmp
mov
inc
add
cmp
add
scas
xchg
les
inc
enter
(bad)
call
xor
cmp
jecxz
in
out
inc
rcr
leave
add
and
call
in
stos
and
inc
xchg
xchg
and
frstor
sub
out
fstp
movs
sbb
imul
pop
in
gs
sub
xor
lds
outs
in
and
cld
cmp
xor
pop
stos
mov
clc
aas
add
mov
aam
cli
cdq
ror
(bad)
in
fsubr
adc
sahf
push
out
aad
xchg
enter
sub
adc
dec
mov
or
xchg
std
fdiv
jmp
aam
jp
xchg
not
jb
mov
mov
enter
mov
sbb
and
test
sub
loope
dec
int3
sub
jnp
and
mov
lea
or
add
or
add
cli
cmps
mov
push
or
ss
jb
dec
daa
push
ret
aaa
repnz
pop
ins
call
lods
inc
inc
imul
lods
fild
push
jle
movs
cwde
hlt
inc
into
sub
xchg
pop
outs
rol
jne
dec
sbb
ret
out
sbb
div
fst
push
or
xor
sbb
adc
inc
fistp
mov
es
jle
cmps
xchg
enter
add
jle
and
outs
add
movlps
iret
out
cmp
mov
fstp
mul
popa
mov
cmps
shl
pop
(bad)
loope
nop
mov
push
jno
(bad)
fs
push
inc
es
fucom
pop
loop
or
mov
aad
sub
jle
and
mov
cmp
fsubr
pop
jmp
outs
add
ins
jne
xchg
pop
push
sbb
out
out
stos
std
xchg
ja
test
cwde
aaa
retf
scas
pop
(bad)
sbb
fwait
or
cmp
mov
(bad)
(bad)
sub
ins
mov
and
cmp
loopne
call
jge
loop
xor
adc
adc
in
scas
and
and
xor
inc
dec
iret
jne
call
inc
and
sbb
pop
push
xchg
jecxz
push
jmp
cmps
cmp
push
jnp
lock
cs
and
js
leave
push
mov
test
fsubr
mov
in
jmp
cdq
mov
sub
call
call
push
cmps
int3
or
xchg
adc
inc
sahf
in
pop
adc
mov
cld
cwde
movs
arpl
pop
jno
jp
inc
and
cdq
or
out
xchg
jmp
adc
and
dec
dec
cmps
hlt
popa
lahf
xor
and
fisub
fwait
jbe
jno
mov
jg
inc
(bad)
or
dec
push
scas
xchg
fwait
data16
movs
jno
pop
add
sbb
into
(bad)
out
sub
add
xchg
aad
rol
cs
call
jl
inc
mov
xor
push
in
cmp
ins
in
aam
xchg
clc
sub
jge
sbb
jbe
jge
out
fist
scas
pop
jbe
xchg
push
pop
gs
sbb
pop
shr
inc
(bad)
xor
adc
xlat
nop
pop
or
mov
pop
(bad)
loope
sbb
(bad)
movs
ins
push
int
adc
outs
enter
inc
dec
les
jae
add
xchg
mov
dec
pop
push
test
xlat
imul
fdiv
retf
jno
out
movs
jmp
pop
mov
sub
mov
inc
jno
push
sahf
pop
mov
dec
out
mul
xchg
sub
aas
cmps
jnp
mov
std
dec
pop
dec
adc
push
cli
add
dec
dec
cwde
rcl
dec
cld
add
fisubr
mov
push
cmps
inc
or
inc
mov
pop
(bad)
aam
add
aaa
sub
dec
xchg
xor
jae
jnp
and
xor
inc
mov
add
ds
mov
sbb
inc
addr16
loope
mov
push
or
addr16
push
pushf
inc
sbb
xchg
(bad)
test
out
push
mov
popa
sub
std
in
inc
retf
jae
mov
jae
cmps
lock
fdivr
aam
cmp
sbb
push
or
icebp
push
dec
cwde
mov
stos
mov
mov
pushf
rcl
or
mov
sbb
mov
jne
mov
or
movs
xchg
xor
mov
nop
int
dec
fistp
xchg
sub
push
arpl
dec
lods
out
xor
xchg
mov
mov
mov
lods
mov
and
xlat
adc
adc
test
fisubr
das
lea
les
(bad)
xor
sbb
call
das
outs
jmp
xor
sub
pop
xor
int
fsubr
rcr
test
ret
push
(bad)
mov
inc
in
push
inc
cli
popa
mov
stc
push
xchg
xor
mov
xor
out
mov
xchg
sbb
jp
rcl
push
je
inc
shr
mov
in
cmp
bound
sub
cmp
sub
aam
stos
sbb
dec
jl
push
xchg
lahf
cdq
loopne
jmp
inc
retf
int
jo
mov
lods
cmp
ficomp
adc
or
fist
push
lods
and
push
daa
jl
movs
mov
push
cmp
(bad)
sub
pop
mov
xor
arpl
jno
cmova
xchg
xlat
(bad)
xlat
fst
push
test
xlat
clc
ins
mov
adc
jns
jae
sbb
stos
mov
add
stos
popf
or
cmc
mov
cmp
mov
xchg
or
dec
les
cli
dec
mov
jl
mov
int
sub
cdq
test
sbb
ss
(bad)
(bad)
ret
lods
call
cmc
pop
dec
sbb
mov
pop
or
sub
pop
sub
aam
inc
pop
add
sub
and
imul
ret
and
ja
sbb
pop
rcr
dec
mov
jp
pop
jmp
out
cmp
stc
jne
clc
in
nop
xchg
aam
stos
jnp
aam
xor
ror
inc
out
or
jmp
shl
sbb
gs
stos
dec
jne
ret
push
fdivr
dec
push
mov
sub
adc
and
test
out
call
pusha
and
add
fs
jmp
fstp
leave
xor
push
jnp
loope
mov
out
xor
dec
add
cmp
fdivr
hlt
xor
dec
and
pop
pop
adc
adc
pop
jno
and
sub
call
ds
xor
mov
xchg
repnz
mov
and
fsub
int3
pop
pop
mov
pop
and
or
or
push
jecxz
aas
fnsave
dec
jno
dec
inc
mov
retf
pop
popa
sub
jns
pop
xor
fist
fdiv
pop
ja
mov
xchg
jns
jle
xlat
sub
das
shr
jl
mov
std
push
or
cmp
xchg
or
inc
dec
push
add
push
pop
cli
pop
jo
push
test
jle
cmc
pop
or
jp
mov
sbb
(bad)
xor
out
inc
xchg
sub
mov
cli
sbb
jmp
cwde
(bad)
jle
cmps
xchg
mov
out
mov
and
cmp
push
lea
dec
stos
in
je
fucomip
and
or
cmp
xor
dec
mov
into
jb
mov
dec
pop
std
mov
into
xchg
das
into
xor
je
dec
sub
nop
xor
pop
or
jl
in
or
sub
mov
mov
ret
xor
loope
jge
push
sahf
mov
dec
jae
sbb
out
mov
jae
mov
dec
xchg
ret
pop
fcmovnu
pop
add
jmp
mov
jle
cmp
add
arpl
ja
scas
mov
(bad)
mov
sbb
inc
mov
mov
jmp
addr16
adc
(bad)
out
dec
jno
adc
xchg
rcr
push
repz
loope
div
loope
aad
sbb
mov
mov
test
cld
xor
sar
das
fist
inc
shl
push
mov
dec
or
loope
cmps
fdiv
fadd
sub
mov
pop
repnz
cs
ja
pop
jbe
hlt
adc
xlat
dec
hlt
mov
xor
pop
cmp
mov
jl
sbb
int
adc
int3
jbe
sub
cmp
data16
xlat
mov
sbb
sub
cmp
xchg
(bad)
fimul
movs
pop
jne
jl
mov
adc
test
ins
dec
xor
mov
pop
xchg
fsubr
jne
pusha
pop
push
repnz
sbb
inc
push
jne
pop
fcmovbe
dec
ret
sub
jno
push
shl
ins
bound
sar
ins
iret
neg
mov
loop
rcl
pop
scas
pop
cmp
sub
pop
fadd
add
mov
dec
pusha
push
shr
mov
mov
push
mov
push
or
loopne
ss
sub
(bad)
fadd
cmc
jge
jecxz
cmc
mov
repz
pop
mov
jo
sbb
mov
mov
adc
sti
push
pushf
(bad)
into
fwait
jb
sbb
dec
repnz
jne
adc
xchg
out
daa
cmp
arpl
mov
mov
popa
push
lahf
push
lock
and
mov
inc
cmp
push
iret
mov
loop
push
scas
jnp
push
push
and
cli
jo
jecxz
jbe
dec
rol
push
add
pop
pop
xor
jo
inc
pop
inc
aam
mov
out
std
push
dec
mov
push
dec
xor
fcomp
jns
leave
mov
fxch
enter
push
jecxz
imul
mov
jp
imul
push
sub
inc
lahf
out
std
pop
mov
or
or
xchg
js
loopne
xchg
cld
sub
bound
inc
ret
mov
lds
fnstcw
adc
xor
out
pop
jmp
in
adc
and
fadd
and
inc
scas
sub
(bad)
sahf
rcl
sbb
test
es
push
aaa
jmp
daa
sub
mov
cli
xor
sbb
cmp
in
xchg
inc
cli
ins
pop
shl
and
fldcw
sub
dec
and
and
cli
in
sbb
inc
cmp
pushf
xchg
imul
add
dec
dec
xchg
push
add
imul
stc
dec
ins
loop
push
and
dec
call
or
inc
loop
cmp
gs
inc
lds
sbb
xor
cmc
mov
xor
mov
mov
int3
out
and
adc
test
stos
shl
mov
fidivr
out
(bad)
enter
es
fisttp
das
ins
push
mov
sti
ret
repz
scas
cmps
jp
out
sbb
pop
xchg
inc
enter
js
pushf
shl
lock
cmp
in
or
rcl
xchg
or
shl
and
fdiv
xor
mov
es
inc
pop
repnz
mov
add
xlat
fcmovne
(bad)
in
xchg
mov
pop
inc
movs
nop
mov
pop
jno
mov
and
lahf
and
scas
(bad)
data16
or
jo
(bad)
daa
aas
sbb
lods
popf
retf
fist
dec
(bad)
repnz
cs
ret
outs
jno
ins
jmp
enter
cmp
pusha
cmc
out
nop
dec
mov
hlt
test
mov
sahf
fcom
push
jl
sbb
pop
adc
div
repz
call
imul
sub
xor
lea
and
xchg
adc
cwde
mov
mov
xchg
mov
add
jne
mov
jl
push
xchg
sbb
in
fistp
or
pop
cmc
push
pop
jne
mov
xchg
inc
loop
lds
sbb
fistp
mov
test
(bad)
pusha
sbb
(bad)
dec
enter
dec
mov
inc
and
(bad)
mov
rcl
add
sbb
or
push
fadd
jmp
pop
sar
mov
in
cmp
out
leave
xor
imul
mov
pushf
push
mov
sbb
inc
adc
(bad)
sub
cmp
xchg
sbb
mul
mov
mov
lock
pop
mov
scas
pop
mov
mov
push
(bad)
and
int
mov
loopne
push
leave
cs
and
sbb
fild
lods
adc
in
and
in
or
cmp
retf
repnz
jecxz
scas
call
or
pop
sub
repz
sub
arpl
and
in
int
int
mov
pop
aam
lods
push
and
(bad)
cmp
inc
adc
jb
es
dec
xchg
jle
jns
and
pop
bound
xor
bound
push
scas
sahf
xchg
mov
mov
fcmovnb
jbe
ret
sub
mov
(bad)
jae
into
shl
test
jp
cmp
popf
pop
cwde
pop
xor
and
pusha
scas
cld
retf
mov
iret
ret
icebp
dec
bound
add
adc
aaa
push
and
int
push
xchg
repnz
pop
pushf
imul
leave
cld
jo
push
lock
mov
fmul
push
daa
pop
imul
cli
imul
push
xchg
dec
xor
cdq
jge
push
sbb
mov
mov
inc
sbb
pop
nop
cmps
ficomp
dec
push
adc
hlt
xchg
inc
lock
movs
hlt
push
mov
imul
leave
cmp
fldcw
movs
out
ret
adc
xchg
jmp
pop
ins
adc
clc
xchg
push
mov
icebp
int
shl
pusha
mov
dec
push
fsubp
ds
dec
int3
(bad)
mov
in
adc
mov
int3
push
test
mov
pusha
sub
aas
jbe
fucomi
lods
pop
inc
aam
push
test
std
lods
lea
sub
fcom
data16
pusha
and
(bad)
xchg
daa
mov
enter
fimul
mov
stc
sbb
add
and
mov
loope
sub
sti
jge
aad
jg
imul
xor
inc
das
xor
dec
cld
ror
push
mov
sub
and
repz
cld
or
pop
and
inc
das
push
and
call
or
xchg
jle
push
sti
dec
sbb
inc
sbb
and
dec
std
shl
(bad)
mov
es
stc
stos
push
cdq
mov
or
sbb
inc
or
stos
pop
sub
xchg
aaa
pop
pop
mov
ficomp
imul
push
rol
imul
adc
mov
sbb
cmp
pop
xchg
movs
dec
pushf
cmps
out
adc
add
outs
cmc
gs
inc
push
mov
xor
mov
sub
cmps
fisubr
jmp
mov
xchg
fisubr
ret
sub
jl
fstp
cmp
out
push
inc
xchg
iret
add
mov
push
dec
push
sbb
leave
out
sbb
retf
repnz
sub
sub
cmps
retf
ret
add
popf
adc
add
outs
sub
loop
pop
out
outs
lock
clc
cdq
mov
test
out
iret
or
cmp
and
mov
scas
sub
xchg
inc
adc
pop
push
stos
pop
ds
jecxz
outs
das
outs
mov
xor
fdiv
adc
xor
ror
sub
xchg
cmp
push
xor
xor
mov
jns
cmps
and
jb
pop
adc
adc
sub
not
or
mov
push
das
(bad)
push
push
sar
push
jb
ror
xor
jns
scas
mov
stos
bound
add
test
js
pusha
xchg
fwait
push
mov
outs
shr
xlat
jg
add
jg
aas
loop
inc
rcl
cmps
call
nop
out
loopne
idiv
hlt
in
(bad)
mov
shl
push
ss
cli
inc
jl
or
inc
push
jmp
inc
jno
fisub
xor
push
xor
sub
mov
xchg
lds
jb
dec
push
sahf
fs
in
sbb
mov
or
mov
dec
gs
gs
adc
gs
mov
inc
or
add
fs
ss
sub
pop
add
jecxz
fidiv
sub
shl
add
jmp
cmp
and
pop
sub
and
mov
inc
rcl
adc
and
mov
out
inc
mov
fimul
rcl
xlat
sub
in
lahf
ja
sbb
lds
or
mov
outs
mov
imul
int
pop
push
out
les
inc
stc
xor
out
cmps
pop
enter
fld
sbb
pop
icebp
xchg
out
push
pop
retf
stc
xor
cli
add
mov
(bad)
lahf
or
xchg
cmps
adc
xchg
rcl
xchg
call
or
fmul
test
ja
lea
shr
add
jbe
fcomip
bound
jg
std
das
and
nop
outs
in
int3
int
or
icebp
fwait
jmp
dec
add
or
movs
pop
daa
fidivr
fnstenv
sbb
test
xchg
lahf
add
jne
mov
call
jo
and
adc
push
out
gs
inc
or
jmp
idiv
(bad)
adc
jbe
xchg
movs
and
out
push
leave
lods
lock
pop
adc
cmps
jmp
cmp
(bad)
jmp
mov
sub
push
fcomip
aad
mov
dec
sti
xchg
xchg
jbe
lock
fwait
scas
outs
xor
xor
lods
jno
cmp
pusha
(bad)
jnp
xor
xor
dec
shl
adc
or
int
push
jl
shl
pop
pop
push
faddp
cmp
out
dec
in
push
add
sbb
xchg
cmp
pop
jl
mov
les
loope
iret
les
jmp
mov
in
sahf
gs
ret
das
leave
out
stos
fmul
cdq
ret
xchg
cmp
xchg
xchg
cdq
mov
jp
fwait
lods
sbb
add
jb
or
sbb
mov
movs
jecxz
xor
pop
xchg
or
repz
ror
add
loopne
xor
jns
cmp
ins
pusha
and
mov
adc
push
jmp
mov
mov
inc
xchg
(bad)
push
lods
mov
cs
xchg
add
fld
mov
jbe
leave
nop
xchg
adc
mul
icebp
pop
push
loope
xchg
out
pop
mov
popf
sub
adc
dec
xlat
call
sub
test
sti
in
push
shr
push
xchg
ss
cmp
nop
cmp
or
mov
pop
lahf
stos
sbb
js
in
ins
cs
sar
xor
mov
out
cmp
cs
hlt
mov
push
test
int3
pop
xlat
adc
push
into
adc
aas
pop
test
ja
adc
iret
das
mov
outs
mov
jno
ror
mov
jmp
push
inc
inc
cdq
addr16
pop
shr
sti
xor
inc
es
sbb
movs
imul
ins
mov
add
(bad)
retf
dec
inc
and
inc
pop
(bad)
cmp
cdq
in
sub
jge
dec
je
popa
and
xlat
sbb
ds
pop
dec
fmul
dec
and
sub
inc
push
(bad)
fs
std
adc
or
loope
or
push
popa
mov
mov
outs
and
int
mov
and
aaa
stc
mov
pushf
push
add
dec
push
adc
xchg
(bad)
lea
inc
xchg
ror
push
rol
cli
and
div
fcmovu
movs
push
sub
dec
pop
repnz
pop
jb
addr16
cmps
jl
dec
jecxz
adc
imul
bound
shl
add
data16
cmp
jnp
test
pop
shl
popa
mov
adc
or
loope
scas
push
push
mov
fsubr
icebp
repnz
sub
ror
scas
mov
jo
fist
or
pop
jg
out
dec
push
or
repz
dec
repz
test
aam
or
out
retf
jmp
mov
sbb
(bad)
sub
adc
aad
fisub
xchg
dec
mov
out
pop
adc
int
push
vpaddusb
mov
jns
cld
push
mov
sbb
pop
and
rcl
xchg
sub
sbb
sub
or
or
(bad)
cdq
adc
mov
sub
push
pop
dec
cmp
mov
dec
aas
pop
sub
or
scas
imul
mov
xor
pop
mov
lods
movs
icebp
pop
pop
call
fwait
sub
ret
xor
cmp
pop
or
(bad)
mov
enter
push
mov
sub
pop
sub
fstp
out
loope
rcl
and
rcl
sbb
jge
es
mov
or
dec
jno
out
bound
jg
loop
scas
sub
rol
or
loope
sbb
sub
loope
repnz
out
mov
mov
mov
pop
shr
outs
mov
fxtract
adc
ror
loope
call
dec
xchg
es
inc
fild
repnz
aas
xchg
xchg
pop
and
(bad)
mov
push
retf
enter
sub
or
dec
xchg
pop
(bad)
dec
push
shl
xchg
in
sub
movs
fwait
push
sub
ins
loopne
xchg
pushf
mov
ss
lods
ror
or
or
cmc
out
into
lods
test
es
sub
popa
mov
out
es
loope
repz
push
pop
pop
fcomp
call
cs
push
leave
xlat
push
adc
lods
xchg
pop
mov
aas
mov
js
stos
xchg
push
pop
(bad)
sbb
gs
jbe
fdiv
dec
mov
push
mov
cmp
push
in
dec
es
outs
fmul
pusha
jmp
and
cmps
mov
adc
clc
adc
mov
aaa
shl
mov
and
sbb
jns
ja
mov
jnp
adc
xor
inc
cmc
adc
sahf
retf
nop
mov
bnd
addr16
and
mov
popf
mov
popf
ja
movs
xor
mov
retf
in
arpl
dec
cwde
mov
xchg
addr16
and
jp
cmc
inc
test
and
xor
jb
xchg
arpl
lods
imul
dec
adc
pop
ret
push
out
jae
repnz
cmp
mov
sbb
cmp
sub
or
cmp
addr16
cli
and
nop
push
out
mov
add
dec
test
push
and
mov
call
mov
lds
sar
outs
sbb
popa
test
sbb
xchg
repnz
aas
xchg
das
sub
lahf
out
jmp
fst
(bad)
aam
adc
sub
shl
adc
mov
clc
and
and
jecxz
xchg
xchg
(bad)
das
clc
popf
sbb
pop
add
mov
adc
xlat
iret
arpl
pop
mov
sbb
bound
inc
retf
movlps
cmps
popa
jno
mov
add
fldenv
cmp
sbb
xchg
fcmove
inc
xor
and
fwait
call
mov
xor
mov
cmc
and
les
mov
sbb
cli
shl
sbb
mov
pop
push
adc
lods
mov
adc
sbb
mov
in
jb
or
push
out
daa
inc
dec
int
lock
scas
add
icebp
repz
scas
mov
jmp
adc
pop
or
jmp
rcr
clc
xchg
cli
mov
cmp
sbb
xchg
mov
test
cmp
(bad)
pushf
mov
sbb
das
dec
push
sbb
xor
pushf
fst
mov
in
mov
scas
ins
adc
and
push
imul
stc
inc
fsubr
dec
bound
push
xchg
out
call
or
pop
or
jg
jb
out
pop
jp
pusha
imul
sbb
push
pusha
or
test
mov
(bad)
mov
add
retf
test
jle
test
mov
or
xor
lea
clc
das
(bad)
pop
retf
int
stos
add
jl
stc
cld
dec
sar
les
repz
cwde
inc
in
mov
icebp
mov
and
push
cmp
mov
das
sbb
ins
out
add
push
imul
xor
cwde
mov
or
push
daa
cmp
pop
push
popf
xchg
in
mov
repnz
loop
jns
fnstenv
xor
hlt
add
ins
ficom
nop
xchg
aas
adc
sbb
xchg
mov
ret
sub
sahf
cmps
jns
sub
xor
mov
and
sub
xor
cdq
test
(bad)
fs
mov
clc
or
dec
and
inc
lods
mov
add
cmp
jmp
mov
ins
mov
cmc
lock
out
repnz
cmp
dec
dec
add
push
rcr
xchg
sahf
cmp
mov
dec
(bad)
rcl
call
xchg
add
scas
mov
aad
lods
mov
lahf
push
mov
popa
bound
icebp
inc
dec
or
cmp
pop
sub
pop
mov
dec
cmp
test
mov
dec
inc
jno
sbb
test
dec
mov
xchg
sub
cmps
adc
adc
jb
retf
inc
mov
pushf
jecxz
pop
push
xor
inc
push
lods
call
into
pop
cld
aam
cmp
fild
mov
fidivr
retf
test
or
retf
add
repz
pop
pop
bswap
mov
adc
dec
pop
sahf
add
rcr
xlat
sbb
push
jb
test
addr16
js
mov
in
inc
push
leave
mul
or
out
pop
retf
lahf
dec
mov
hlt
sub
xor
shl
or
ror
add
cld
data16
xor
imul
and
mov
pop
mov
lods
inc
test
fs
mov
js
cmp
mov
pop
mov
pop
in
cmps
mov
jbe
mov
jae
icebp
xchg
and
add
dec
jp
jne
and
push
mov
ins
mov
test
hlt
cmp
inc
(bad)
stc
loopne
mov
cmp
jmp
jl
jge
arpl
cmp
dec
mov
push
xchg
out
jmp
jbe
dec
mov
cmp
ret
push
xor
push
nop
dec
jg
fwait
fwait
mov
push
mov
inc
dec
les
xor
xor
jg
inc
enter
es
push
jp
retf
push
(bad)
sbb
scas
dec
out
push
xor
jne
es
je
mov
jle
xchg
rsm
or
mov
sbb
jno
and
popa
bound
jle
pop
mov
lods
mov
xchg
(bad)
outs
popf
repnz
xor
aaa
pop
xchg
es
out
(bad)
pushf
sub
and
push
inc
mov
(bad)
pop
lahf
inc
fisubr
adc
mov
ja
jbe
dec
adc
gs
or
popa
and
fs
bound
xchg
xor
sbb
sbb
sub
jp
gs
and
jmp
sbb
ficomp
ins
test
jge
mov
(bad)
jmp
mov
sbb
or
xor
pop
call
mov
pop
je
sub
cmp
jg
cwde
shl
cmp
mov
lock
pop
lock
mov
pushf
lea
cmp
popf
sub
jne
mov
adc
adc
in
jnp
pop
jg
jbe
out
inc
in
in
jl
dec
jo
or
or
jl
rcl
mov
cdq
out
scas
daa
jno
cwde
aam
movs
xor
push
loopne
js
mov
sar
mov
sub
pop
hlt
dec
pop
cmp
cld
stos
mov
and
jbe
or
cmp
stos
rol
test
mov
pop
dec
nop
mov
dec
adc
stc
mov
and
pop
(bad)
lea
or
das
mov
sbb
scas
adc
in
mov
in
fwait
or
imul
ja
jl
pop
lods
push
sub
xchg
retf
addr16
sti
mov
push
and
out
mov
ss
or
mov
dec
fst
lahf
pop
addr16
clc
lods
daa
lea
cmp
jmp
out
mov
int3
retf
mov
(bad)
dec
icebp
sar
inc
cmps
(bad)
xor
shr
or
jmp
jmp
out
pop
ret
scas
cwde
call
loop
test
stc
xor
clc
scas
daa
fwait
inc
adc
cmps
cmc
mov
cs
jl
mov
cmps
cmp
movs
push
jp
imul
(bad)
mov
not
xchg
sub
out
add
pop
add
jns
mov
inc
(bad)
jl
jnp
jp
or
mov
add
mov
daa
ror
repnz
or
cmps
jno
mov
jno
and
inc
out
das
es
cmp
fsub
xchg
loopne
adc
sbb
stc
mov
xor
(bad)
ds
mov
inc
xchg
(bad)
xor
adc
movs
rcl
pop
cmps
pop
jnp
imul
addr16
sub
push
aam
cdq
call
out
push
es
inc
fadd
mov
mov
pop
inc
xchg
dec
ficomp
aas
inc
pushf
jno
cmp
or
push
imul
cmc
sbb
in
clc
movs
sbb
mov
pop
xchg
mov
imul
push
push
rcr
dec
js
fwait
es
mov
loope
add
fwait
push
je
lods
sub
xchg
(bad)
add
add
js
and
dec
sbb
bound
inc
mov
add
out
outs
ins
cli
outs
cmp
pop
pop
jmp
jle
xchg
or
clc
into
push
inc
nop
(bad)
push
leave
fsubr
inc
arpl
dec
outs
dec
jmp
sub
mov
loop
shr
imul
pop
or
lods
jno
sub
dec
call
clc
sbb
fadd
jmp
pop
scas
push
bound
sub
mov
adc
(bad)
xor
pop
stos
out
and
gs
cmp
retf
xor
push
retf
and
sbb
fcom
mov
push
jae
cmp
jge
inc
xchg
not
data16
pop
js
cmp
out
in
enter
xor
cmc
adc
mov
or
sbb
test
(bad)
pushf
aad
div
int3
mov
ss
sbb
and
test
nop
in
lfs
adc
cs
mov
scas
mov
loopne
out
push
shr
rcr
aaa
icebp
lods
ins
xor
in
sub
pop
in
push
mov
fdiv
aad
fisttp
cwde
loopne
inc
inc
or
movs
jno
and
(bad)
popa
sub
stc
mov
jo
push
cmc
push
sub
stos
lds
push
xlat
retf
(bad)
cmps
js
jg
or
jns
lods
adc
outs
mov
cld
sbb
repz
xor
adc
and
repnz
std
inc
in
or
pop
dec
xor
repnz
retf
add
outs
test
pusha
add
mov
xlat
lds
sub
push
rcr
data16
(bad)
sub
pop
call
(bad)
je
mov
outs
sub
adc
jmp
push
pop
loop
push
jmp
scas
add
dec
xlat
lahf
cdq
push
cs
sub
cmc
sub
jns
mov
mov
sub
scas
nop
bound
out
adc
dec
push
xchg
dec
leave
dec
push
sub
in
inc
adc
sub
in
gs
dec
clc
adc
lds
test
icebp
nop
ins
loop
push
push
dec
adc
ja
(bad)
hlt
clc
aad
add
jo
imul
or
dec
pop
jnp
jmp
pop
cli
pop
dec
out
repz
dec
out
mul
push
outs
inc
fs
call
add
test
bnd
sub
hlt
std
xchg
scas
and
ins
add
mov
retf
xchg
call
arpl
xor
mov
out
aam
pop
(bad)
cwde
inc
lock
push
and
ret
cmp
out
aad
xchg
inc
mov
push
sub
ret
lods
movs
mov
sub
mov
(bad)
mov
call
retf
lds
mov
and
sub
or
mov
in
mov
retf
sub
sbb
adc
xor
fs
or
test
popf
fs
cmp
and
ja
in
ss
fwait
ja
mov
jl
sbb
aad
aas
jle
add
out
movs
push
imul
push
add
sub
daa
lods
test
out
mov
jo
pop
add
xor
loop
sbb
in
push
mov
fwait
out
cs
popa
lds
adc
adc
push
sub
mov
jns
cmp
fldcw
nop
clc
loope
sbb
cmp
pop
inc
fst
test
pop
sti
lods
lods
(bad)
enter
movs
in
ret
js
xchg
sbb
mov
lds
stos
rcl
or
fcmovnbe
mov
rol
and
mov
sahf
ss
xlat
cmp
fwait
call
arpl
stos
call
xor
push
push
movs
bound
add
bound
sbb
repz
jle
push
adc
into
xchg
jmp
sub
dec
cli
or
out
dec
pop
add
lods
jnp
push
add
mov
fdiv
mov
shl
xchg
pop
aam
lahf
call
cdq
mov
push
mov
fucomi
add
push
pop
call
in
and
push
mov
loop
or
xchg
and
lods
dec
sub
xchg
shr
cmps
pop
add
popa
cmp
sbb
mov
(bad)
gs
push
aam
jecxz
sbb
cmp
inc
scas
mov
or
aas
ss
mov
adc
xchg
pop
fiadd
xor
jno
xor
lods
mov
retf
cwde
dec
sbb
mov
xchg
(bad)
cs
jne
jecxz
sbb
or
stos
psubd
imul
push
mov
loopne
sub
sbb
scas
push
add
clc
pushf
dec
or
movs
pop
mov
cmp
scas
ret
sub
jae
sub
call
mov
fild
xchg
jb
add
jge
out
fld
jle
shr
in
(bad)
dec
rol
cwde
sahf
add
pop
sbb
jne
xor
test
test
mov
div
cs
aaa
push
cli
cs
shl
fmul
es
adc
call
(bad)
sub
cmp
xlat
scas
arpl
adc
out
sbb
jae
ret
cmc
xor
sti
out
loopne
adc
bound
repnz
(bad)
rcl
mov
shr
retf
in
loope
sub
xchg
adc
fwait
sub
jl
mov
cmp
and
ret
dec
es
test
push
xor
loop
xchg
mov
mov
aad
push
jmp
outs
outs
xchg
dec
dec
dec
xor
mov
ror
ret
jae
jp
aas
pop
mov
dec
jae
(bad)
sub
jnp
mov
sbb
mov
jne
lods
and
mov
retf
cmps
push
call
fdiv
inc
addr16
xor
ja
les
int
int3
fsub
cmp
jp
mov
sub
push
daa
test
loop
push
retf
imul
pop
shr
push
inc
push
adc
pusha
call
cmp
repz
pop
lea
cmp
add
mov
mov
push
push
sahf
js
dec
cmp
or
(bad)
mov
and
out
cmps
shl
mov
xchg
ret
ins
cmps
stc
dec
hlt
addr16
xlat
out
test
mov
xor
mov
or
adc
cmp
add
addr16
(bad)
and
push
scas
mov
pop
xor
sub
xchg
mov
fwait
and
mov
jne
mov
cld
into
fidiv
xchg
retf
mov
add
push
aas
add
adc
stc
jae
cmp
push
mov
ds
mov
test
jp
xchg
mov
lock
inc
jecxz
retf
or
cs
outs
imul
xor
xchg
stc
out
or
add
scas
out
dec
rol
push
icebp
cmps
stos
imul
or
and
lods
dec
movs
xor
or
fild
ss
les
mov
(bad)
jmp
cmp
into
sbb
call
lods
mov
std
inc
ds
xchg
enter
mov
mov
outs
jp
mov
inc
mov
ret
xchg
dec
lods
push
jl
call
mov
cdq
aam
push
inc
imul
cmp
inc
xor
jle
fs
push
sbb
(bad)
jb
cmp
mov
and
dec
mov
je
mov
or
inc
xor
rcr
sti
push
add
stos
enter
cdq
adc
(bad)
jmp
test
mov
sub
neg
scas
add
push
retf
adc
outs
sub
inc
and
inc
and
cmc
or
jbe
dec
pop
cmp
bound
daa
xlat
cwde
xor
cdq
sub
ficom
mov
out
jns
pop
adc
gs
inc
dec
inc
in
xchg
push
lock
inc
push
nop
pusha
loop
dec
mov
push
scas
adc
bound
cdq
ss
or
sbb
mov
call
scas
rcl
outs
movs
test
mov
fwait
sahf
push
shl
mov
ins
ins
std
call
int
pushf
dec
xchg
add
or
retf
rcl
inc
jg
mov
mov
out
stos
add
pop
fimul
movs
add
push
pusha
pop
fsub
pop
dec
cs
cmp
push
push
sub
stos
(bad)
shl
ror
cmp
adc
or
stos
mov
fisttp
xchg
int
scas
pop
push
xor
cmp
fcomp
pop
mov
movs
pop
pop
push
popa
dec
int
test
sbb
mov
pushf
inc
add
aas
iret
add
xchg
lock
sbb
outs
cwde
and
out
fwait
inc
aaa
fnstenv
scas
inc
enter
fs
sbb
pop
mov
pop
dec
test
jg
mov
scas
jns
cmp
les
xchg
jb
jl
lock
mov
in
push
jbe
fistp
sar
and
jl
data16
xor
fwait
mov
xchg
popa
inc
add
jle
das
bnd
pushf
(bad)
clc
int
ret
(bad)
mov
xor
test
or
les
add
xor
mov
push
jl
test
jge
cmp
xor
gs
pop
sbb
stos
ret
sbb
cdq
mov
adc
dec
cli
pop
bound
push
push
xor
repnz
jle
pop
dec
call
lods
sbb
lahf
call
mov
jno
test
loope
xor
sub
enter
push
movs
je
jmp
test
jbe
cli
test
sub
mov
inc
adc
fwait
jbe
pop
jle
or
sbb
push
shl
pushf
lods
xlat
cmp
repz
mov
cmp
push
mov
sbb
and
cli
or
jnp
sub
test
jecxz
fs
xchg
out
test
cmp
xor
mov
xor
int
call
and
jl
or
pop
sbb
pop
aas
gs
jle
out
sbb
cli
sub
sub
pop
pop
lods
icebp
add
movs
mov
leave
and
sbb
and
mov
pusha
mov
xchg
mov
test
aas
loope
lods
or
add
sub
push
popa
xchg
push
pushf
loopne
loope
push
push
and
iret
push
fadd
or
mov
pop
retf
es
cs
adc
cdq
stos
jge
in
out
stos
dec
cmp
rol
push
les
mov
or
out
movs
pop
cmp
xlat
or
das
ror
(bad)
cmps
sub
call
adc
xor
push
inc
fisttp
pop
dec
out
mov
xchg
push
in
inc
dec
fnstsw
repnz
ins
sub
repnz
das
les
sbb
fucomp
lods
fld
push
cmps
mov
movs
jecxz
xor
shl
adc
int
jge
fnstsw
inc
dec
jle
dec
push
cmovp
scas
fsubr
outs
mov
adc
aad
shl
fild
and
addr16
adc
xchg
ds
arpl
test
pop
cmp
and
lods
leave
aas
jp
scas
mov
or
std
pop
push
div
(bad)
loope
or
movs
push
xchg
out
or
adc
inc
pop
push
push
mov
sbb
test
push
sysret
popf
lds
jb
aam
inc
into
lahf
and
lods
mov
mov
pop
ins
arpl
sub
pop
jo
ins
and
jnp
push
retf
inc
retf
adc
jo
inc
pop
outs
test
rcr
cmc
outs
xchg
adc
cld
cmp
cmc
inc
mov
mov
mov
pop
jle
push
jp
nop
xchg
cwde
jecxz
imul
ss
jle
clc
(bad)
jle
mov
dec
xchg
lea
sub
retf
test
stos
fld
pop
mov
fcomp
shl
cmps
mov
inc
retf
xlat
xchg
je
loopne
scas
movs
cmps
mov
adc
push
loope
mov
cdq
xor
xchg
mov
inc
or
in
jnp
or
sti
mov
ins
or
shl
push
test
gs
push
ja
(bad)
and
dec
rol
jns
clc
mov
aas
call
dec
aas
adc
ret
dec
stos
(bad)
adc
sbb
jno
(bad)
cmp
adc
mov
sub
push
pop
push
ds
sbb
push
jmp
inc
push
scas
and
setg
pop
(bad)
sub
outs
les
jo
call
push
dec
lods
or
add
aaa
and
mov
loope
adc
inc
dec
out
xchg
jle
lea
inc
(bad)
int
jl
in
mov
retf
jne
jnp
jo
cmps
cmps
xchg
and
add
mov
int
call
add
mov
pop
dec
xor
pop
stc
pop
mov
xor
out
add
rol
inc
stos
mov
fs
xchg
idiv
in
mov
jge
and
push
pop
jge
lds
js
(bad)
pop
cdq
push
jmp
arpl
icebp
xchg
push
mov
mov
fwait
out
jbe
outs
out
das
rol
pop
push
jmp
ret
sub
xchg
cs
repz
sub
imul
cmp
in
arpl
fstp
cmp
cld
cmp
test
test
adc
ins
sub
leave
shl
jno
pop
push
sahf
inc
ins
sbb
lds
pop
add
cmp
adc
dec
add
xor
into
daa
mov
mov
cld
lock
jmp
lea
or
xor
jbe
xchg
xchg
shl
dec
xor
and
out
bnd
mul
add
jl
push
xor
cmp
add
adc
imul
push
mov
outs
psubw
xor
aaa
xor
dec
sahf
add
ror
mov
inc
call
adc
and
int
adc
repz
bound
adc
add
inc
shl
aam
dec
addr16
xchg
dec
pop
dec
cmp
xchg
sub
stos
iret
sub
idiv
sbb
out
add
xchg
pushf
mov
jp
dec
add
leave
inc
and
mov
jmp
and
push
fld
jmp
dec
xor
cmp
and
mov
inc
xchg
push
nop
jmp
xchg
mov
sar
xor
mov
or
aas
jne
mov
mov
loopne
mov
fmul
mov
mov
jg
retf
sub
inc
sub
mov
or
dec
sub
xchg
jbe
dec
push
popa
add
xor
addr16
add
push
lea
mov
call
fcmovne
adc
fwait
and
push
dec
pop
mov
adc
xor
int
outs
movs
jo
pop
loop
and
ret
mov
jne
out
and
xchg
push
jbe
and
fcmovnu
sbb
cs
aad
jns
jmp
gs
jae
(bad)
mov
push
add
(bad)
fucomp
push
shl
std
cli
push
mov
pop
retf
xchg
jnp
mov
clc
mov
and
in
lods
dec
dec
add
out
in
xlat
sbb
int
jecxz
push
mov
sub
or
data16
dec
sahf
repnz
sbb
jno
cli
call
mov
clc
std
cmp
sub
es
jns
sti
fwait
iret
bnd
add
in
dec
dec
adc
cmp
(bad)
and
shl
jge
test
mov
repnz
ret
mov
cmp
add
in
inc
popf
ret
add
sti
fs
jecxz
push
pop
in
mov
outs
cmp
add
ss
inc
aaa
pop
mov
sti
push
call
xchg
inc
rcl
pop
in
std
mov
fnstenv
sub
in
hlt
fcmove
scas
lods
fs
sbb
loope
cmps
retf
push
jp
or
fstp
inc
jbe
or
movs
jno
inc
gs
mov
fist
loope
adc
imul
fld
sbb
mov
cmp
push
iret
cmps
cmps
sbb
xchg
inc
sub
jb
cs
dec
popa
ret
inc
in
mov
pushf
or
dec
lea
std
mov
add
rcl
(bad)
lods
leave
cmp
jge
pushf
loop
nop
adc
movs
jg
lock
ret
sbb
not
dec
or
(bad)
push
std
rcl
or
mul
fs
loopne
outs
loopne
jmp
into
movs
mov
push
cli
and
shr
imul
(bad)
or
sub
fmul
push
push
int3
movs
jno
cmp
adc
lock
int3
test
movs
mov
xchg
add
cmc
push
pop
arpl
dec
mov
sti
jmp
mov
in
push
mov
clc
arpl
aas
push
or
push
popa
sbb
movs
fistp
xchg
cmp
(bad)
(bad)
ss
push
push
les
push
mov
enter
cld
unpckhps
imul
add
push
sub
daa
out
pop
or
cmp
cmp
repnz
and
lods
sub
loope
in
sub
mov
add
dec
icebp
push
push
mov
aaa
popa
aad
xor
sbb
push
movs
out
xchg
cs
ds
in
pop
ins
lods
and
out
mov
ror
cld
xchg
loope
adc
or
test
fwait
mov
test
sbb
pop
std
mov
in
loop
call
cmps
dec
jnp
cdq
scas
loope
call
xor
jmp
mov
jo
xor
and
cs
xor
sub
xchg
clc
sbb
aaa
adc
add
not
mov
cli
call
mov
pop
and
lods
jnp
lds
imul
icebp
xor
retf
dec
jb
inc
sbb
(bad)
cmps
dec
push
cmp
xor
jmp
pop
in
pusha
fbstp
pop
sbb
xor
cmp
cmp
jae
inc
lahf
inc
stos
test
or
lods
lock
jno
push
or
mov
call
lods
cmp
mov
cdq
je
icebp
mov
jmp
or
mov
adc
ds
push
mov
xchg
xchg
pop
jne
outs
shr
push
fbstp
sbb
jp
int3
fcomi
xlat
pop
(bad)
mov
gs
cmps
jnp
push
mov
clc
ja
sbb
or
ss
dec
sub
or
out
gs
jp
push
ins
dec
jle
add
and
mov
push
adc
iret
sub
aad
movs
jle
pop
cli
repz
mov
cmp
mov
pop
leave
mov
jle
mov
je
sbb
fbld
iret
inc
dec
jne
pop
pusha
cmp
xor
sbb
nop
push
cmps
push
test
sbb
ss
fisubr
xchg
pop
ret
aaa
jae
loopne
daa
jg
out
jle
jo
jns
xlat
inc
mov
retf
neg
add
int
mov
push
or
mov
push
ja
mov
loope
or
mov
xchg
push
jmp
mov
xchg
sbb
mov
test
popf
(bad)
icebp
push
out
and
mov
hlt
push
sbb
push
stos
inc
xchg
mov
sti
xor
not
push
cmp
push
adc
mov
pop
stos
mov
cli
mov
(bad)
xlat
xor
ds
push
inc
push
or
xor
imul
(bad)
cmp
loopne
jb
ds
in
mov
cmp
pushf
adc
dec
repz
xchg
cmp
movs
in
cld
test
sar
mov
jmp
cmps
ss
stos
es
clc
add
mov
and
sti
jne
repz
data16
cmp
mov
(bad)
test
sbb
jl
and
cs
push
sbb
xor
test
in
adc
mov
sbb
rol
or
adc
or
pop
arpl
cdq
fist
ins
cld
xor
adc
rcr
pusha
std
pop
xor
adc
ret
cwde
movs
pop
jae
jle
mov
jns
(bad)
mov
lahf
inc
mov
jae
push
cli
retf
or
pop
cmp
xor
mov
loop
jns
cli
cmp
sub
ror
loop
or
and
in
movs
dec
sbb
add
stc
test
out
(bad)
jo
sub
and
jae
lods
inc
shl
mov
or
mov
leave
in
dec
and
pop
xchg
lods
pusha
jle
je
pop
je
xchg
outs
dec
mov
or
add
imul
bound
loop
lods
adc
push
imul
leave
bound
loopne
rcl
sbb
pop
dec
push
push
test
in
inc
ret
fs
(bad)
scas
mov
xchg
xchg
jmp
sbb
rcr
pop
pusha
stc
leave
(bad)
stc
iret
adc
dec
jbe
xor
xchg
ja
hlt
ja
nop
fistp
stos
add
scas
jp
jecxz
sbb
jnp
hlt
dec
or
data16
fsub
stc
xchg
aas
std
sbb
retf
xchg
icebp
(bad)
adc
jno
and
into
or
ja
pop
inc
jge
cmp
xor
clc
push
dec
and
dec
pop
fnstenv
(bad)
(bad)
in
dec
push
imul
push
sar
fndisi(8087
daa
mov
or
enter
or
mov
push
push
mov
inc
cmp
cwde
outs
pop
mov
or
inc
stos
or
repz
aaa
cld
cmc
sbb
sbb
inc
loope
sbb
sbb
mov
dec
into
cwde
inc
or
lds
sub
ficom
ror
das
sub
cmps
ja
mov
add
and
retf
stc
dec
inc
neg
in
sbb
mov
inc
pop
mov
xchg
(bad)
jle
sbb
aam
inc
addr16
out
psubsb
outs
adc
aaa
mov
and
xor
ins
or
xchg
retf
push
enter
ret
inc
jge
cdq
ss
dec
jle
cs
push
jmp
mov
inc
and
add
inc
scas
sub
sbb
push
dec
xchg
mov
rcl
js
add
nop
mul
cmpxchg
xor
das
push
in
(bad)
pop
or
push
mov
repz
mov
xchg
and
test
add
mov
ret
or
push
add
jns
xchg
jnp
jl
sub
popf
sbb
pop
int3
add
jg
push
outs
push
add
fcmovnbe
ja
sbb
(bad)
pop
mov
inc
mov
lods
jmp
cs
mov
adc
scas
jnp
add
js
out
jecxz
lea
shl
xor
dec
adc
movs
or
jns
je
sahf
dec
stc
xor
jge
ds
loop
xchg
push
in
pop
fmul
and
mov
aaa
hlt
jl
mov
sbb
imul
(bad)
sti
(bad)
in
add
fwait
xchg
jg
je
loopne
aas
ja
(bad)
xlat
out
push
dec
mov
cmp
dec
jl
xor
inc
imul
lock
xchg
pop
stos
cmp
sbb
push
sbb
sbb
dec
jb
push
push
and
jne
(bad)
push
or
in
stc
ins
dec
sbb
retf
push
add
and
call
je
push
loopne
add
ret
xor
and
jmp
inc
adc
dec
fs
fisttp
ret
pop
sbb
jge
mov
test
xor
ds
adc
dec
movs
cmp
pop
dec
dec
out
xor
dec
jae
js
out
sub
ret
lahf
icebp
sub
xchg
stc
sub
and
jl
ins
and
iret
movs
dec
sub
test
xchg
dec
mov
cdq
push
inc
jae
jmp
ins
fnstsw
or
les
dec
and
and
cwde
push
in
ficom
les
add
xchg
ficomp
loop
push
imul
mov
ret
daa
(bad)
pop
jne
pusha
mov
inc
movs
pop
jns
mov
mov
call
dec
jecxz
(bad)
stos
jns
and
mov
push
cmps
cwde
jmp
icebp
js
cmc
jmp
lods
jp
cmp
rol
xor
push
jg
jb
cmc
sub
ins
push
out
or
dec
xor
jg
ret
mov
mov
jge
and
fst
mov
or
mov
lea
retf
mov
xlat
mov
fadd
enter
pop
inc
jo
out
fdivr
ds
cmp
mov
cmps
gs
fdivp
cli
imul
sti
rcl
inc
or
pop
inc
push
int
xchg
in
sub
gs
nop
retf
cmp
pop
mov
call
xor
and
sti
jne
in
push
jl
lods
std
mov
in
pop
enter
pop
sbb
sar
xor
bnd
or
jp
jne
add
rcl
sar
test
lahf
jp
das
loope
jecxz
cli
dec
call
lods
inc
sbb
lds
cmp
out
cmp
cmp
lahf
cmp
mov
(bad)
fnsave
stos
jbe
adc
dec
sahf
dec
mov
test
push
fld
mov
mov
mul
sbb
and
scas
(bad)
fadd
sub
inc
mov
push
push
dec
ror
cmps
lods
mov
(bad)
jl
cs
test
neg
push
cmp
test
adc
dec
int3
in
jno
movs
inc
int
sub
pop
inc
ret
push
adc
xchg
loope
ja
lock
dec
inc
stos
imul
aam
(bad)
adc
and
sub
xchg
popa
cmp
xor
and
jg
cmp
fcomi
call
ss
xor
dec
pop
xchg
cmp
add
mov
mov
rol
dec
mov
mov
pop
adc
stc
popa
aad
clc
xchg
in
or
dec
movs
mov
rcl
push
pop
xlat
push
push
jmp
mov
jmp
push
fild
push
popf
pop
and
push
lods
inc
xchg
sti
cmp
ret
mov
or
xor
shl
cwde
xchg
iret
xchg
fwait
fs
test
jecxz
mov
fcomp
sub
jo
pop
lahf
loop
sub
mov
xor
hlt
outs
xchg
cmps
adc
push
icebp
mov
aaa
adc
fbstp
sbb
in
sub
scas
out
movs
loope
cmp
jnp
jb
test
fstp
clc
movs
ins
pop
(bad)
xchg
je
push
dec
xchg
pop
idiv
pop
push
add
test
dec
add
pop
sbb
sbb
int
sub
lea
pop
sbb
add
outs
fsub
push
dec
loop
push
mov
mov
stos
push
ins
shr
je
inc
in
loop
inc
lods
dec
sti
jge
(bad)
aad
cmp
pop
ret
movs
shr
les
inc
(bad)
aam
sahf
fistp
xor
(bad)
pop
xor
sbb
cmp
and
dec
imul
push
push
ret
and
scas
dec
and
xlat
loop
push
jbe
into
push
xor
jo
cdq
push
dec
adc
mov
xor
mov
repz
mov
and
std
les
adc
push
lods
add
xchg
repnz
in
inc
mov
clc
mov
and
xchg
mov
cmp
jb
dec
jb
mov
test
stos
or
mov
pop
shl
cli
les
mov
or
add
ror
mov
dec
xlat
pop
hlt
jge
xchg
cmc
int
jnp
mov
popa
test
mov
pop
jl
ret
inc
add
dec
add
pop
cmp
jmp
stos
mov
mov
dec
test
loop
xor
xchg
jns
lds
and
sbb
popa
push
push
xchg
stos
adc
lods
cmp
mov
cmp
xchg
ss
jne
js
or
out
mov
mov
mov
outs
push
in
in
ret
repnz
aad
pop
cli
and
push
clc
jmp
aaa
dec
popfw
data16
dec
ror
hlt
fwait
mov
pop
and
pop
dec
xor
xor
cmp
xor
cmc
add
stos
scas
cmp
dec
mov
jmp
call
inc
aam
xchg
loopne
test
inc
mov
cld
loope
mov
and
int3
cmp
out
push
jne
std
jns
in
rcr
dec
and
push
movs
in
test
inc
or
jno
sub
adc
xchg
in
sub
jl
not
push
sub
repz
dec
mov
and
jb
or
fdiv
stos
lock
inc
call
nop
scas
je
in
out
add
cwde
sbb
repnz
pop
stos
fstp
inc
xchg
mov
fidivr
bound
rcl
or
loop
mov
pusha
les
xor
ja
sub
mov
mov
jecxz
popa
test
sbb
(bad)
dec
mov
cmp
pop
push
(bad)
mov
fs
pop
xor
cmp
dec
add
mov
xor
or
cmp
rol
mov
xlat
out
push
push
dec
movs
mov
or
test
outs
inc
cmovg
cmp
icebp
in
dec
xchg
(bad)
stos
out
inc
gs
ds
and
xor
jb
sub
imul
rcl
adc
dec
call
fist
dec
out
movs
jb
sti
inc
jmp
or
and
clc
icebp
jl
fsub
mov
std
mov
mov
mov
adc
test
xchg
pop
out
aas
adc
data16
jmp
dec
xchg
xchg
inc
pop
cmovb
pop
mov
jecxz
push
pop
jne
fst
adc
add
push
push
(bad)
jns
jbe
sti
cld
(bad)
enter
pusha
inc
cmp
dec
das
inc
mov
add
cmps
shl
inc
jmp
jb
jo
inc
xchg
out
xor
pop
lock
lahf
aas
xchg
add
dec
cmp
les
ret
xor
push
inc
dec
pop
jae
hlt
mov
dec
add
test
lods
rcr
pop
mov
cmps
fild
pop
stos
sbb
into
std
fistp
add
cs
sbb
movs
mov
sbb
das
test
sbb
rol
call
jle
mov
loop
mov
rcr
(bad)
mov
xchg
rcr
sbb
inc
pop
adc
pop
mov
adc
xchg
rol
enter
push
add
call
hlt
xor
sbb
mov
add
rcr
cmp
add
fcmovnb
aaa
sub
aam
sub
xchg
xchg
mov
aad
jecxz
test
xchg
dec
xchg
fcomp
loop
addr16
sub
pop
push
sbb
push
jecxz
and
pop
sbb
imul
and
sub
dec
push
fist
mov
pop
int3
inc
stos
cwde
push
mov
adc
scas
pop
aas
inc
cmp
hlt
scas
push
aaa
cmp
cmp
idiv
(bad)
pop
jno
push
test
retf
out
pop
icebp
ss
shr
clc
bound
xchg
scas
dec
push
shl
jns
popf
jl
setp
bound
fst
mov
sbb
pop
and
push
cld
mov
or
xchg
mov
outs
xchg
push
adc
int3
dec
or
inc
stos
lea
push
aad
outs
gs
retf
lock
fdivr
jmp
into
xchg
cmp
std
outs
imul
or
dec
mov
sub
lahf
add
or
push
shr
add
(bad)
xor
int
adc
lahf
shr
imul
ret
enter
mov
push
xor
dec
enter
pop
cdq
rol
add
sti
pop
jmp
push
arpl
mov
and
jle
dec
daa
scas
sbb
mov
xchg
popa
repnz
pop
jae
push
add
test
adc
sti
sub
cs
mov
out
or
jo
adc
out
xchg
idiv
or
fnstenv
push
fmul
xlat
js
pop
jns
push
es
adc
pop
(bad)
mov
lods
leave
sahf
cmp
leave
cmp
mov
aam
push
rcr
ror
or
lds
or
lds
shl
mov
das
out
enter
sbb
imul
mov
sub
fcmove
mov
and
aas
leave
dec
ret
sahf
cmp
test
shl
xor
and
mov
in
arpl
popa
pop
in
(bad)
dec
xchg
cmp
in
popa
dec
mov
iret
aam
mov
xchg
fidiv
fiadd
loop
sub
jge
adc
aas
pusha
and
pop
ret
and
pop
aad
mov
pushf
(bad)
xor
push
movs
mov
cdq
xchg
test
and
push
mov
movs
repnz
dec
sbb
xchg
inc
popf
cs
lahf
retf
sbb
retf
shl
dec
mov
mov
fstp
sbb
pushf
scas
cmp
loopne
pusha
push
mov
movs
sbb
in
add
jbe
sub
mov
xor
and
cmp
sbb
movs
in
or
int3
int3
mov
enter
inc
cs
adc
es
in
xchg
and
bound
jbe
dec
les
dec
mov
sbb
clc
int3
mov
cli
out
lea
int3
mov
mov
cld
cmp
mov
retf
lods
es
or
xchg
loope
push
jae
icebp
imul
push
jbe
fld
lods
dec
xor
cmps
fadd
mov
stos
stos
xlat
fmul
stos
xor
pop
adc
mov
data16
loope
jecxz
xor
jb
jbe
sub
shr
dec
repnz
int
jnp
inc
int
mov
jne
xor
je
not
cmps
jp
test
xor
push
mov
popf
pop
jnp
nop
sub
imul
cli
popa
jo
adc
fs
scas
std
das
dec
push
mov
mov
mov
push
dec
and
jbe
fisub
and
cld
jo
out
or
xlat
pop
ret
mov
fdiv
lods
mov
ficomp
lods
adc
inc
mov
or
pop
dec
xchg
inc
sub
mov
out
int3
sti
int
dec
dec
mov
in
xchg
pop
aam
xchg
and
jmp
and
out
push
add
je
dec
shl
call
add
test
and
sbb
pop
call
pop
fsub
xor
stc
and
in
mov
popw
ret
jns
xor
ja
aad
lock
lahf
scas
imul
push
mov
sub
test
imul
aas
and
sub
rol
leave
fdiv
mov
sar
mov
and
jnp
out
and
mov
call
imul
push
mov
mov
jmp
test
xchg
cmc
test
ja
sub
lds
pop
pop
sbb
movs
xor
and
sub
pop
lods
inc
pop
mov
aad
lods
icebp
mul
or
sbb
pop
pop
imul
cli
call
scas
aad
dec
cmp
ret
cmps
and
mov
outs
cld
(bad)
sbb
push
fwait
xchg
add
js
pop
ss
pop
outs
mov
sub
and
mov
in
mov
out
outs
loopne
adc
repz
jnp
mul
sub
adc
mov
fdiv
loop
pop
sbb
xlat
xchg
lods
outs
ins
or
repz
mov
mov
mov
fwait
adc
leave
jae
push
ficomp
xor
(bad)
jae
(bad)
xor
aam
jo
retf
ins
addr16
je
add
add
mov
or
inc
cmps
rol
pop
movs
sub
push
push
dec
shl
push
xor
aad
ins
aad
add
out
xor
or
fs
movs
ror
call
mov
jae
fcmovnu
(bad)
jl
fwait
pop
ficomp
cli
in
cmp
call
inc
nop
cmps
fisttp
es
jbe
and
mov
mov
arpl
pop
push
adc
inc
dec
pcmpgtd
pop
jo
xchg
shl
inc
imul
ss
pop
sub
jecxz
enter
pop
add
push
int3
shl
daa
call
dec
or
adc
sbb
mov
fist
inc
sbb
movs
neg
mov
rcl
xchg
in
inc
sbb
je
rol
jb
push
cli
xor
push
das
or
movs
dec
fild
adc
sub
out
call
cli
inc
push
leave
out
mov
sub
adc
mov
fisub
push
nop
push
xchg
enter
adc
aam
inc
xchg
test
imul
dec
xor
shl
xlat
adc
std
fldenv
adc
ins
in
sbb
ja
ret
add
xor
inc
aad
ins
cmp
push
or
pop
add
nop
in
jo
test
js
repnz
int3
push
hlt
xchg
and
jne
xchg
lods
push
sbb
mov
mov
xchg
mov
repz
xchg
adc
and
sbb
mov
imul
push
push
push
call
sbb
mov
fcomp
mov
add
push
mov
out
mov
dec
mov
sar
cdq
int3
ins
or
lods
inc
adc
mov
add
int3
jno
pop
push
test
pop
or
dec
imul
(bad)
out
shl
loop
scas
dec
lods
mov
mov
mov
(bad)
out
jb
mov
shl
pandn
stos
ds
adc
adc
adc
mov
lahf
jns
aas
fisubr
cmc
and
aam
outs
xchg
mov
mov
shr
outs
sub
fs
push
adc
push
jnp
sbb
cli
pop
fstp
imul
mov
mov
out
and
mov
mov
pop
inc
inc
(bad)
cmp
dec
push
adc
test
fistp
adc
outs
shl
es
add
dec
aaa
push
dec
data16
out
mov
push
adc
jg
sti
or
add
mov
aas
sbb
into
xor
retf
sub
dec
mov
stos
lds
xor
out
mov
jmp
xchg
pop
sti
add
push
pop
dec
cmp
and
idiv
dec
and
pushf
stc
inc
xor
mov
rcl
mov
cwde
dec
xchg
mov
mov
push
aad
cld
jecxz
jno
std
mov
ja
stc
sub
inc
xchg
xor
push
xlat
jp
bound
jae
(bad)
xchg
into
cmp
jno
xor
test
push
xchg
lods
inc
jmp
mov
jmp
fst
add
cpuid
mov
(bad)
js
cmp
fcom
add
mov
scas
movs
cdq
cdq
inc
sar
outs
mov
mov
popa
cmp
es
add
inc
sub
fcom
inc
xchg
push
push
or
xor
cmp
push
rol
bound
loope
int3
sub
jmp
sbb
adc
and
mov
push
movs
popa
in
dec
or
imul
stc
mov
xchg
cmp
in
push
fadd
sub
outs
pop
cmp
hlt
jbe
les
inc
dec
add
test
dec
mov
jp
mov
(bad)
push
sub
fsubr
push
bound
ss
adc
enter
ins
fdivrp
cdq
or
int
mov
xchg
mov
js
or
test
rcr
lods
leave
aad
cmp
sub
jl
sub
test
call
jmp
pop
mov
mov
ret
int
and
mov
mov
int
xchg
dec
in
movs
rcl
out
jle
outs
sbb
jl
lahf
loope
push
into
mov
inc
call
and
subps
js
(bad)
cmp
fs
pop
stos
push
jmp
and
movs
sahf
(bad)
sub
sbb
push
jbe
lea
adc
jb
and
or
cmp
(bad)
adc
adc
mov
pop
repz
xchg
mov
push
ja
mov
jp
sar
xor
in
push
and
pusha
repnz
pop
push
arpl
lods
xlat
pop
or
inc
mov
out
rcr
mov
dec
adc
push
(bad)
fwait
mov
loopne
inc
mov
jno
aam
in
inc
xor
lahf
xchg
dec
sbb
jo
dec
jecxz
push
das
movs
dec
daa
xchg
push
sub
mov
mov
xchg
(bad)
popf
jmp
xor
adc
daa
lock
cmp
test
push
and
test
fisttp
pop
dec
sub
out
jno
rol
pushf
into
jb
mov
aaa
mov
aas
iret
outs
addr16
and
imul
push
retf
or
icebp
clc
not
sub
mov
not
sub
test
sar
cdq
ror
mov
and
cmc
ins
or
push
idiv
fdivr
ror
add
push
dec
mov
nop
xsha1
cmps
retf
stc
sbb
xchg
out
test
fistp
pop
or
inc
sahf
icebp
jb
aaa
pushf
or
and
sbb
sbb
ins
inc
ror
(bad)
inc
xchg
inc
call
(bad)
cmp
movs
sbb
mov
iret
add
jae
loope
aad
mov
mov
jmp
add
or
(bad)
xor
mov
test
cs
sub
and
pop
movs
popa
add
pop
sub
mov
inc
push
dec
mov
outs
sub
gs
dec
pop
movs
lock
or
inc
test
xor
pop
adc
loope
jmp
aam
and
inc
or
sbb
xchg
mov
xor
dec
out
ret
jno
push
aad
pushf
inc
das
push
jns
mov
leave
jmp
fisttp
mov
xor
dec
adc
movs
icebp
cmp
jne
mov
addr16
std
xchg
in
(bad)
cld
push
fcmovnb
dec
mov
pop
push
xchg
daa
outs
push
call
imul
xchg
or
jno
out
xor
aad
rcl
add
dec
rcl
xchg
daa
(bad)
psrad
in
in
mov
adc
in
aas
jae
adc
xor
add
aad
jl
mov
jge
mul
or
mov
inc
int3
in
add
xchg
mov
cmp
scas
sub
push
arpl
xlat
cmp
xchg
sti
pushf
lahf
or
repz
ins
ja
mov
scas
paddsw
enter
add
iret
adc
(bad)
int
adc
test
and
int3
cmp
loopne
outs
jecxz
xchg
out
push
aad
into
(bad)
enter
pop
push
sbb
aaa
fadd
in
sub
mov
fs
adc
in
aas
dec
xchg
fstp
ret
das
and
mov
and
sub
lods
addr16
test
push
aam
cmp
mov
iret
mov
dec
jp
xlat
xor
call
add
mov
sti
jae
sbb
and
xor
xor
std
jg
retf
shl
fidivr
jo
jmp
std
add
pop
inc
add
aas
or
mov
pop
push
fnstsw
(bad)
mov
dec
ins
(bad)
push
dec
inc
mul
sub
cmovne
aad
sbb
repz
cld
pop
pusha
jns
movs
mov
push
dec
cmp
mov
daa
(bad)
mov
cmps
push
inc
iret
ds
dec
dec
test
or
ror
and
mov
mov
cmp
sub
or
loope
aaa
rcl
add
mul
iret
dec
aaa
mov
jmp
xor
push
loop
fldcw
push
jmp
dec
sub
cwde
lock
xchg
ja
scas
into
pop
cdq
das
daa
lods
xor
fsub
pop
cmp
xchg
loop
movs
cdq
in
ins
push
pop
xchg
out
into
sbb
dec
push
fmul
or
dec
and
add
aad
imul
(bad)
sar
add
xchg
sar
mov
xchg
into
leave
jns
jmp
mov
push
aaa
add
and
mov
rol
and
ficom
xor
sbb
inc
jecxz
mov
leave
pop
test
jg
xlat
xchg
inc
stos
push
mov
mov
(bad)
mov
dec
jmp
gs
mov
(bad)
xor
adc
pop
push
adc
enter
xor
cli
cmp
call
ins
mov
cdq
xor
dec
scas
or
jne
sbb
sub
or
fwait
(bad)
in
fisttp
and
sbb
aad
jmp
cmc
sub
repz
fdivrp
jmp
add
adc
data16
jns
fbld
icebp
inc
add
mov
or
mov
ins
jg
outs
mul
(bad)
pop
(bad)
jae
jp
inc
cmps
mov
mov
mov
rcl
or
xor
push
and
add
jmp
jge
mov
pop
push
sbb
lds
fnstsw
cmp
pop
cld
movs
js
add
pop
cdq
call
push
imul
pop
pop
cmps
push
add
pop
call
out
in
sub
ins
xlat
mov
adc
leave
popa
add
inc
dec
enter
sub
mov
adc
imul
xor
inc
cld
xchg
mov
inc
mov
ss
ficomp
jge
push
loop
mov
mov
adc
aas
mov
mov
dec
jle
ins
sbb
aaa
dec
outs
fisttp
jecxz
adc
dec
inc
mov
mov
je
push
ja
jno
adc
mov
movs
or
cs
(bad)
xor
in
neg
out
mov
ds
mov
test
push
les
bound
clc
(bad)
pushf
pop
ffree
adc
jmp
mov
test
adc
shl
pop
cwde
dec
shr
lea
inc
pop
sbb
add
cmps
cmc
rol
outs
pop
mov
xor
ins
push
xchg
bound
sbb
lods
out
scas
add
stos
rcl
dec
push
je
lods
dec
mov
(bad)
cmp
mov
dec
xchg
cwde
(bad)
pushf
call
out
inc
add
dec
mov
dec
fwait
in
pop
xchg
ror
jle
fiadd
out
sbb
lock
cwde
pop
push
xor
(bad)
aam
mov
mov
rol
and
fucom
xor
push
mov
das
(bad)
and
pop
cld
pop
ret
(bad)
retf
outs
out
jne
pop
stos
stos
je
retf
push
repnz
dec
imul
lods
mov
cmp
add
fsubr
es
addr16
jmp
(bad)
add
aad
pusha
test
jmp
in
xchg
outs
aam
xchg
fdivr
add
add
and
imul
pushf
inc
mov
cmp
repz
jno
fst
cwde
popf
pusha
dec
sbb
push
or
icebp
repz
or
dec
(bad)
repz
mov
and
out
sbb
pop
icebp
push
aam
jg
mov
out
xor
movs
stos
cmp
cmp
mov
inc
mov
push
cmp
cmovg
das
inc
jmp
mov
aas
or
stc
adc
js
and
mov
bnd
in
clc
cmp
aaa
out
in
popf
retf
imul
mov
jle
mov
bound
cmp
pop
imul
cmp
addr16
inc
ficomp
pop
and
clc
outs
call
cmp
xor
dec
bound
in
mov
dec
sti
out
mov
sbb
es
cmc
out
mov
popa
mov
sbb
or
xor
push
mov
xchg
xchg
dec
adc
int
push
js
rol
and
out
and
dec
dec
lea
(bad)
xor
sub
dec
rcl
dec
mov
adc
mov
ror
adc
and
mov
pushf
push
inc
jle
das
push
jmp
dec
inc
clc
sbb
stos
jle
cs
cmp
push
ins
fmul
push
shl
clc
sub
in
call
out
js
ds
fiadd
sbb
or
(bad)
jbe
mov
adc
sub
xchg
(bad)
push
outs
sub
cmps
lock
ds
and
pop
sub
fdiv
ret
pop
pop
movs
cs
leave
push
scas
and
mov
mov
mov
jne
inc
jg
jns
nop
std
dec
lods
bswap
rcr
push
push
retf
or
(bad)
jmp
xor
sub
add
pop
jnp
mov
and
mov
cmp
xor
pop
call
lea
arpl
test
cmps
dec
and
test
push
mov
mov
mov
fdivr
pop
ins
add
cmc
scas
sbb
(bad)
pop
and
mov
inc
call
out
nop
(bad)
and
hlt
inc
xor
aas
aad
adc
xacquire
dec
adc
mov
xor
push
ds
out
fnstcw
iret
add
je
fs
fdivr
mov
dec
push
call
cli
mov
jle
test
fsub
ret
push
or
ss
mov
xchg
inc
hlt
jmp
jmp
div
and
ins
fs
add
add
punpckhbw
pop
push
ss
adc
push
or
lds
rol
das
sbb
lods
fbstp
adc
shl
sbb
call
mov
rcl
or
ds
xchg
xor
xor
enter
cwde
rol
jb
outs
movs
pop
enter
or
jae
cli
mov
mov
dec
pop
xchg
icebp
retf
xor
jns
rcr
(bad)
les
enter
gs
out
ret
xchg
mov
jo
pop
mov
imul
es
and
xchg
nop
cmp
int3
sub
push
jae
dec
in
pop
add
pop
sar
jns
add
daa
adc
or
hlt
cmp
sbb
push
pop
out
mov
cli
jecxz
outs
sbb
sub
ins
push
(bad)
mov
imul
lea
cmp
adc
cld
pop
jbe
pop
jmp
push
jg
out
fstp
xor
nop
iret
mov
xchg
les
dec
out
cmc
jecxz
(bad)
adc
inc
inc
seta
or
push
out
sub
dec
ins
sbb
cmp
jbe
ror
jge
popa
mov
std
fdivr
iret
out
cmp
fdiv
or
lds
inc
cmp
psubd
fld
call
push
push
mov
out
test
test
(bad)
stos
ret
lods
in
xor
push
mov
and
rol
and
clc
push
int3
out
push
fist
xor
ja
jns
xor
push
jmp
int
jg
rol
ret
mov
rcr
pop
repnz
(bad)
fidiv
js
jmp
add
clc
pop
cwde
lock
push
cmp
mov
dec
icebp
add
pop
jmp
ds
adc
ins
sahf
arpl
outs
out
cmp
hlt
cmp
push
(bad)
out
in
push
xor
test
inc
cmp
xor
pop
dec
sbb
out
pop
mov
mov
mov
xor
push
popf
arpl
shl
xchg
or
jne
jnp
push
xchg
leave
inc
and
add
sbb
xchg
mov
pop
(bad)
rol
and
stos
ficom
es
popf
sbb
cmp
jb
fistp
inc
xor
adc
loope
push
jmp
xor
jecxz
ja
jns
jae
push
and
xchg
stc
mov
sbb
xlat
nop
push
adc
push
shl
sti
xchg
leave
movs
jge
mov
add
call
(bad)
stc
xchg
cld
dec
push
enter
fwait
gs
loope
sti
or
iret
xchg
(bad)
inc
(bad)
mov
xor
add
shl
and
jmp
mov
and
cwde
sub
fcomp
addr16
clc
dec
jmp
daa
aad
xlat
mov
inc
add
sub
hlt
(bad)
mov
push
dec
jecxz
adc
mov
cmc
lds
fnclex
aaa
push
xor
sbb
push
popa
push
sub
in
and
ficom
xor
out
mov
gs
test
xor
xchg
stos
scas
sti
out
js
push
fnstcw
pop
mov
jmp
adc
inc
loope
jnp
retf
mov
xor
fimul
(bad)
lock
lea
dec
push
(bad)
or
scas
sti
icebp
gs
pop
dec
xchg
sti
push
mov
and
in
popf
hlt
call
mov
pop
mov
or
fisttp
adc
repnz
push
add
test
not
cmp
adc
mov
repz
and
into
pushf
jne
mov
xchg
pop
or
gs
sub
cmp
xchg
outs
xor
inc
rcr
les
cwde
mov
inc
sbb
pushf
or
rol
add
into
cmps
movs
bound
into
xchg
ret
push
pop
add
test
xchg
sbb
pop
jecxz
add
unpcklps
pop
fild
push
shl
xchg
in
jmp
add
push
and
hlt
lods
add
sub
cmp
loope
add
xor
lods
dec
retf
fbstp
sbb
ds
mov
xor
rcr
mov
jle
sub
add
xor
popa
push
(bad)
sar
pusha
ins
add
into
lea
push
mov
pop
xchg
das
sbb
fdiv
mov
hlt
xchg
imul
outs
pop
jge
jmp
stos
cwde
cdq
push
xlat
lods
scas
js
jb
or
loop
mov
pusha
sbb
cdq
jge
icebp
lock
mov
push
dec
dec
xor
mov
mov
fisttp
cld
pop
dec
nop
iret
or
inc
adc
and
imul
or
call
jl
mov
aas
mov
movs
(bad)
call
ds
cs
cs
sbb
jg
jno
or
out
xchg
dec
pop
push
pushf
aam
sub
repz
sbb
das
mov
cmp
cs
or
ins
jns
sub
or
sub
xchg
jne
iret
add
mov
dec
ja
and
or
pop
or
xor
outs
fiadd
mov
aad
sub
adc
inc
sbb
fcom
mov
rcl
mov
call
add
ja
rcl
pop
(bad)
xchg
adc
sbb
mov
xchg
sbb
rcl
and
stos
stos
inc
mov
push
aad
or
jne
mov
(bad)
dec
int3
mov
add
pushf
stos
inc
fwait
inc
add
mov
cmp
loopne
mov
mov
jl
cs
(bad)
cld
xor
mov
aad
push
and
sub
ss
je
push
idiv
int3
ss
(bad)
das
aas
sub
mov
adc
sbb
loopne
cld
aam
sbb
addr16
dec
das
leave
(bad)
jmp
jo
inc
inc
adc
jo
inc
call
push
push
and
fld
(bad)
dec
es
mov
and
and
loop
out
popa
leave
jmp
jmp
fldcw
jbe
cmps
shr
arpl
adc
(bad)
(bad)
cmps
cmp
jmp
sbb
push
and
leave
mov
shl
lahf
(bad)
and
pop
clc
es
loop
xchg
jmp
popf
cmp
ins
ss
sub
dec
xchg
lds
int3
ret
mov
and
scas
pop
mov
jp
mov
ficomp
push
aad
adc
xchg
fcmovnb
enter
shr
pop
jns
pop
pop
retf
dec
mov
adc
push
xchg
out
sub
adc
dec
jp
inc
nop
(bad)
jmp
sbb
adc
mov
call
(bad)
out
sbb
fcom
jbe
loop
fmul
fnsave
cs
mov
mov
pop
mov
mov
add
jp
or
je
jnp
mov
out
or
hlt
addr16
adc
fld
cli
jmp
push
xchg
daa
adc
xor
mov
pop
add
dec
fidivr
add
xchg
daa
popf
sub
jnp
aas
loopne
daa
pop
cwde
jne
(bad)
movs
xor
sub
fs
mov
or
add
sub
and
(bad)
pop
push
jge
fcmovnbe
add
repz
clc
jmp
mov
add
pop
adc
adc
sbb
pop
adc
push
jnp
inc
xchg
adc
enter
lods
clc
outs
loopne
jae
pop
loope
ret
pop
or
jmp
jb
cwde
jmp
jmp
inc
mov
jns
inc
loop
das
cmc
scas
xchg
in
ja
mov
lock
bound
and
xchg
mov
aad
neg
push
jl
aas
jb
sub
sbb
jne
pop
sbb
enter
mov
fwait
call
mov
pop
fld
jg
push
sub
out
cld
(bad)
mov
test
add
out
jmp
add
xchg
retf
rol
sbb
retf
imul
add
hlt
shl
cmc
imul
popf
and
cli
pop
aaa
icebp
xchg
push
inc
movs
mov
xchg
jnp
lock
outs
gs
aam
cmp
jmp
mov
jl
inc
cs
mov
jbe
xchg
call
mov
movs
pop
into
bound
pop
mov
scas
retf
xchg
lea
inc
dec
cmc
push
or
push
ins
mov
ins
jo
xchg
aad
xor
nop
adc
xchg
lahf
push
in
ret
push
pusha
xchg
sar
aas
mov
sbb
lods
lods
lods
mov
mov
fstp
jmp
jns
les
dec
cld
mov
fwait
lods
ret
pop
(bad)
and
xchg
jne
jbe
movs
adc
mov
mov
cli
xchg
stos
jb
retf
cli
ins
out
mov
in
cld
dec
out
fmul
fdivr
push
nop
or
pop
add
xchg
inc
aas
sub
jbe
inc
stos
sbb
fwait
retf
inc
outs
sti
push
dec
sbb
mov
push
retf
or
inc
adc
shl
and
cmp
imul
arpl
push
mov
cmps
adc
push
mov
xor
sub
or
ret
aaa
xchg
jo
lahf
loope
imul
pop
iret
gs
je
push
pop
adc
out
pop
adc
cmps
aam
icebp
inc
sahf
adc
repz
in
lea
loopne
push
and
adc
ins
pop
sub
movs
fidiv
sub
push
lock
fwait
out
test
pop
mov
je
outs
mov
sub
call
push
inc
jbe
icebp
xchg
push
(bad)
std
sub
sub
adc
ret
ja
mov
mov
rcl
adc
push
movs
mov
xor
test
and
ds
es
or
add
adc
sahf
js
xchg
int3
sbb
(bad)
test
xchg
cmp
das
mov
adc
inc
mov
pop
(bad)
aam
add
and
or
shl
adc
pop
(bad)
sbb
inc
mov
cmp
add
ss
dec
xor
xchg
ss
ins
imul
jecxz
shr
lahf
adc
fistp
inc
sti
test
scas
and
cmp
outs
out
adc
xor
sub
(bad)
dec
outs
dec
pop
fs
in
jnp
xchg
pop
xor
mov
les
add
leave
mov
enter
out
scas
stos
aaa
aas
jecxz
inc
ret
dec
imul
cmc
mov
ret
xchg
jl
(bad)
imul
jl
jo
mov
push
clc
and
lods
lods
dec
daa
imul
(bad)
aaa
bound
mov
icebp
je
iret
js
mov
pop
xchg
sbb
shl
ds
shr
mov
test
pushf
and
cmp
lahf
and
in
repnz
adc
xor
xlat
push
mov
jne
popf
je
or
mov
les
in
dec
sbb
arpl
sbb
or
cli
or
lock
fs
outs
xchg
dec
cmps
scas
shl
lods
test
mov
sub
dec
mov
xchg
test
movs
(bad)
mov
shl
add
sbb
neg
pop
pop
mov
mov
ds
lock
push
test
mov
hlt
xor
(bad)
sbb
sub
ins
jns
lahf
xor
ins
jno
or
or
nop
iret
hlt
cmp
mov
fsubr
retf
lock
mov
pusha
xchg
add
sbb
inc
popf
jb
ins
mov
add
and
sbb
jnp
pushf
cmp
inc
xchg
push
cdq
pusha
pop
stos
fisttp
(bad)
push
pop
lods
push
cwde
lods
xchg
mov
cmp
ret
enter
aam
inc
and
add
lea
push
std
das
addr16
in
(bad)
shr
fisubr
cmp
mov
iret
push
arpl
xchg
or
mov
lock
mov
clc
test
dec
xchg
xor
adc
mov
test
pop
add
adc
mov
mov
mov
enter
jge
das
xchg
in
pop
into
xchg
and
(bad)
in
aad
lahf
loopne
in
pop
pop
or
sbb
and
jb
cs
movs
test
mov
mov
setno
(bad)
xchg
jecxz
jl
cld
int3
aas
pop
ins
cld
test
jp
and
cs
retf
sbb
adc
fimul
add
ret
test
sub
shr
ror
fld
rcr
jmp
or
mov
dec
inc
sub
xchg
gs
xchg
sub
(bad)
inc
mov
mov
retf
pusha
popa
inc
out
jecxz
std
add
test
xor
in
jbe
sbb
add
ret
mov
out
xor
push
(bad)
pop
xor
inc
movs
inc
sbb
xor
sub
sub
xchg
bound
dec
mov
adc
push
jmp
stos
pop
imul
lds
jl
push
dec
pop
loop
loop
jne
dec
mov
and
adc
mov
mov
test
jae
jne
in
inc
mov
xor
dec
mov
jb
das
(bad)
xlat
push
or
in
fnstenv
jnp
sub
pop
int3
xchg
movs
fld
int
lahf
add
jmp
and
push
cmp
mov
daa
sbb
aam
mov
out
pop
add
ins
inc
and
add
xchg
(bad)
iret
(bad)
mov
cmp
stc
(bad)
in
stos
jmp
sub
jnp
ins
dec
xchg
cmp
daa
push
pop
test
pop
pusha
adc
dec
std
push
lods
dec
dec
(bad)
icebp
je
cmp
inc
jbe
jp
add
push
dec
mov
jle
loopne
jo
jg
dec
mov
sbb
into
pop
fdiv
dec
bound
or
sar
pop
fisttp
leave
dec
inc
fisubr
xor
dec
outs
xchg
jo
add
push
mov
or
ret
(bad)
xlat
cdq
gs
loope
mov
aam
out
out
mov
lock
(bad)
mov
push
xchg
or
cli
hlt
sbb
jno
addr16
retf
sbb
ins
rol
or
loopne
inc
sub
je
mov
jns
cs
mov
cmp
ret
push
out
xor
in
jns
push
add
les
inc
ja
fstp
and
pusha
(bad)
fiadd
dec
dec
push
jo
std
aam
pop
xchg
outs
xchg
fisttp
sbb
dec
lea
xchg
ret
test
test
push
pusha
xchg
in
gs
xor
xchg
jmp
jae
and
cdq
add
addr16
dec
loopne
out
jae
cmp
xchg
xchg
cmp
jo
mov
retf
mov
jmp
inc
push
pop
arpl
pop
adc
das
and
into
cmp
scas
cld
(bad)
lea
adc
jecxz
lods
into
dec
test
mov
push
shr
rcl
call
and
add
mov
aaa
repz
cmp
bound
leave
scas
cmp
xor
out
jmp
cdq
push
xchg
popf
ficom
jp
push
aad
pop
add
mov
sbb
dec
or
repnz
jge
addr16
inc
push
sbb
adc
jp
and
pop
(bad)
test
or
add
idiv
push
push
popa
cld
retf
dec
xchg
or
mov
dec
jbe
mov
mov
stos
sti
rcl
push
(bad)
sbb
popf
jno
lods
sub
xchg
cmp
inc
mov
ins
enter
sub
adc
jg
xchg
sbb
add
adc
imul
repnz
push
cli
mul
add
repz
inc
adc
pop
mov
jmp
dec
and
aad
fild
mov
push
sbb
pusha
cmc
cmp
sub
cld
xchg
mov
cmp
jb
fcom
cmp
fidiv
data16
sti
popf
mov
mov
adc
pop
push
adc
cwde
shl
mov
in
sub
lock
ss
in
push
cmp
(bad)
in
sub
(bad)
jne
add
push
jno
ss
pop
jnp
sub
loope
clc
out
bound
sbb
out
mov
aas
sbb
adc
sbb
add
xchg
imul
xchg
add
push
lea
gs
push
inc
stos
push
stos
ret
std
out
push
fst
daa
ss
cs
add
sar
xor
pop
arpl
or
or
cmp
mov
mov
sbb
or
push
pop
add
mov
(bad)
xchg
out
fmul
or
jo
push
mov
xchg
rcr
sahf
inc
(bad)
sbb
hlt
in
push
adc
das
pop
stos
pop
scas
jne
adc
loope
or
mov
inc
or
cmp
test
pop
cmp
jno
xor
mov
xchg
pushf
int
jbe
mov
cmps
inc
int
jecxz
jb
in
scas
and
dec
or
pop
mov
jbe
pusha
pop
call
xchg
test
gs
clc
sub
adc
push
mov
and
stos
aam
sub
dec
(bad)
out
cmp
mov
ret
mov
sub
shl
test
das
xor
cmp
pop
inc
(bad)
sbb
pushf
das
in
sub
lahf
jle
xor
pop
leave
sbb
mov
daa
leave
jns
inc
xor
push
mov
cwde
nop
mov
and
cmp
mov
or
je
jmp
cmp
aaa
fdivr
(bad)
sub
xor
sub
xchg
xchg
test
icebp
jle
mov
fdiv
jno
pop
push
shl
dec
aad
fild
aas
pop
(bad)
and
cmp
scas
pop
ins
jnp
inc
lahf
or
sub
sbb
lods
mov
push
les
xor
push
inc
adc
mov
test
cmc
mov
lahf
lock
out
das
jmp
mov
mov
test
in
pop
test
mov
aaa
cmps
jg
xor
pop
dec
int3
int3
sub
loop
popf
adc
fstp
cwde
call
xchg
cmp
cmp
daa
pop
and
sub
xchg
inc
mov
in
pop
push
aaa
pop
aas
sbb
or
xchg
push
cmps
or
sub
movs
and
pop
fcomp
sahf
pop
fiadd
idiv
mov
cmp
pop
push
sahf
scas
dec
pop
push
mov
movs
out
push
out
fdiv
inc
xchg
retf
jl
adc
mov
call
jp
mov
jnp
cmp
xchg
mov
xchg
hlt
cmp
xchg
add
cmp
lods
shl
jmp
mov
xchg
pop
dec
sbb
sub
gs
les
pop
lahf
sub
dec
mov
xchg
adc
cwde
sub
icebp
retf
adc
inc
stc
(bad)
mov
nop
ins
out
pop
xchg
cmps
add
js
ja
mov
or
lock
aaa
sahf
std
bound
cmp
jge
mov
jno
test
sub
rcr
pusha
(bad)
adc
sahf
mov
push
movs
mov
sub
push
out
jge
aaa
out
cs
mov
push
movs
sahf
and
shl
aaa
xlat
(bad)
pop
into
jp
mov
adc
repnz
inc
sub
add
xor
mov
mov
sahf
pop
pop
sub
jge
xor
cmc
cmps
push
repnz
add
icebp
lahf
mov
mov
repz
or
adc
inc
imul
out
cmp
pop
ds
(bad)
lods
movs
rcl
pop
mov
jge
(bad)
or
outs
jl
jmp
je
loop
aas
lahf
dec
mov
pop
retf
jg
stc
movs
mov
lahf
addr16
dec
push
mov
stos
xor
fs
fwait
retf
inc
push
in
jle
add
cmps
and
mov
iret
or
out
push
add
in
cmps
sahf
xlat
cmp
jne
(bad)
add
and
pop
and
jmp
xchg
daa
jle
movs
or
add
inc
es
loop
dec
mov
ins
adc
stos
push
fxch
pop
pop
pop
mov
adc
cmps
outs
(bad)
mov
addr16
ins
call
data16
inc
aad
sub
mov
jns
enter
jns
and
movs
std
jmp
in
fld
xchg
call
adc
dec
push
jnp
shl
cmp
mov
ins
add
mov
push
xor
out
in
and
xchg
jb
js
scas
ja
mov
shl
cmp
pop
adc
push
ret
in
pop
jle
ins
stc
cdq
jno
push
dec
dec
call
idiv
push
xchg
sub
fidivr
shr
or
inc
pop
push
mov
inc
inc
aas
jmp
icebp
xchg
add
(bad)
daa
test
into
mov
stos
push
fistp
scas
mov
cmp
out
aad
mov
sbb
mov
cmc
ret
outs
mov
loop
inc
jb
mov
pop
and
popa
(bad)
push
push
mov
and
push
popf
mov
ja
lods
jecxz
mov
outs
cmp
adc
sub
(bad)
mov
jo
lds
bound
imul
out
loope
pop
into
add
cmps
popf
push
adc
mov
leave
cmp
adc
mov
aad
daa
dec
lock
not
pushf
pop
shr
not
xchg
or
push
jmp
dec
sahf
mov
dec
dec
mov
stos
cld
call
popa
pop
or
aaa
pop
mov
leave
jge
sbb
inc
mov
sub
add
into
daa
cmp
stos
rcl
mov
push
adc
xchg
pop
int
add
jge
jmp
aam
cmc
ins
inc
inc
ds
xor
int
push
cmp
pushf
inc
push
mov
scas
mov
push
add
mov
cmp
xor
mov
popa
retf
test
(bad)
dec
std
dec
jo
ficom
or
add
enter
call
xor
nop
sbb
iret
pop
xor
test
sbb
dec
stos
popa
(bad)
cmp
int
and
inc
ss
cmc
cmp
mov
push
shr
cmp
inc
mov
inc
fst
xor
es
inc
(bad)
int3
loop
psrlq
cmps
loopne
and
in
push
in
jl
add
push
adc
aaa
xchg
stos
sahf
xor
leave
aas
enter
les
cmp
mov
xchg
shl
add
(bad)
pop
popa
cmp
sbb
cmps
ret
(bad)
sub
push
sub
jae
xchg
arpl
jecxz
xor
scas
pop
mov
icebp
mov
ds
xor
jns
cmc
out
repz
adc
sub
movs
mov
dec
dec
dec
xchg
lock
pop
dec
test
ret
dec
add
mov
dec
mov
sbb
mov
push
aad
frstor
stos
sub
push
pop
scas
mov
ds
data16
sbb
in
push
xchg
adc
dec
xchg
test
aas
dec
sti
mov
fucomp
dec
jbe
mov
push
in
mov
xlat
mov
std
aad
(bad)
out
jno
sub
and
clc
mov
or
push
test
add
jne
mov
ret
rol
add
call
inc
push
imul
xchg
mov
shr
and
xor
sar
mov
sbb
stc
iret
in
sbb
cwde
xor
cmps
mov
aas
dec
lds
mov
loop
and
arpl
sar
(bad)
call
js
ror
push
ss
push
lods
ror
jle
dec
sti
aas
push
add
and
fisttp
pop
inc
sbb
outs
sbb
hlt
adc
sub
pop
sub
movs
neg
out
popf
jmp
rcl
icebp
cmp
adc
push
add
jp
arpl
sub
fldenv
cmp
jle
imul
xchg
mov
push
push
push
or
xchg
or
cmp
push
sbb
xchg
push
xor
aas
push
push
jae
clc
sti
sbb
adc
mov
call
jp
aad
sbb
cmp
jae
fadd
out
scas
into
retf
aaa
jl
popa
rol
inc
outs
cli
xchg
lods
dec
loop
add
cmp
loope
dec
loop
lds
test
sbb
xchg
mov
out
(bad)
addr16
sub
pop
pop
push
out
add
lods
inc
xchg
or
sub
shl
pushf
movs
popf
mov
sub
dec
xchg
jl
pop
sti
or
xchg
cmp
rcr
jg
mov
rcr
pusha
xor
std
std
aam
ds
ss
shl
(bad)
sub
mov
fsubr
pop
or
inc
fs
(bad)
in
in
inc
sti
xchg
rcr
fcmovne
shl
test
adc
rcl
fucomip
les
cmc
(bad)
daa
out
int3
clc
imul
xor
sbb
sub
fsubp
pop
push
adc
and
add
call
sub
mov
loopne
mov
in
jmp
ret
ins
and
es
in
enter
lods
mov
xor
xlat
dec
xor
pop
push
mov
or
daa
test
adc
outs
dec
cli
add
(bad)
int
pop
enter
sbb
mov
push
(bad)
movs
les
imul
inc
jae
aad
mov
loope
ds
or
jb
ja
popa
mov
jge
mov
sbb
cmp
or
test
in
lods
test
cmp
arpl
add
jnp
add
sub
rcl
sbb
add
or
mov
jl
cmp
nop
dec
out
push
mov
leave
inc
fwait
cmps
and
addr16
stos
ficom
mov
es
nop
cmp
in
or
mov
(bad)
jle
int
dec
or
outs
rol
sub
cmp
xlat
xor
sub
inc
gs
push
nop
ss
addr16
cmps
iret
(bad)
and
push
aam
xor
push
cmp
imul
hlt
push
loope
mov
ret
shr
inc
jne
enter
push
movs
inc
(bad)
sub
pop
pop
in
imul
dec
shl
sahf
jecxz
ins
cdq
aad
hlt
xchg
adc
cmc
or
pop
ins
(bad)
retf
cmp
jmp
xlat
xchg
ins
push
sar
jae
mov
or
leave
pop
pop
daa
popa
outs
out
clc
not
inc
dec
inc
ins
and
dec
(bad)
fs
int3
push
pop
outs
cdq
into
lods
test
lods
sbb
pushf
repnz
jno
(bad)
adc
mov
mov
xchg
or
pop
ins
mov
sti
jge
ret
and
pop
sub
nop
jae
inc
enter
xor
mov
clc
jnp
pop
(bad)
js
cmp
adc
test
faddp
sbb
icebp
cmps
pop
lods
or
dec
lahf
cld
lds
mov
inc
cwde
mov
test
xchg
ss
scas
pop
mov
not
mov
out
adc
popa
clc
repz
xchg
xchg
les
retf
jg
(bad)
mov
pushf
add
movs
xlat
jbe
sar
dec
inc
(bad)
cmps
in
xchg
mov
cmc
stos
out
pop
push
sbb
arpl
mov
dec
pop
xor
enter
sahf
or
jmp
fwait
call
jle
pushf
ficomp
in
add
in
push
jmp
dec
fild
pushf
adc
loope
cmp
and
les
sbb
dec
sbb
mov
fldenv
icebp
fwait
push
pop
popf
es
push
dec
bound
inc
xor
push
push
push
retf
bound
sbb
ret
pop
stc
dec
xchg
daa
ins
ja
test
outs
(bad)
xor
add
mov
das
jae
pop
or
push
push
lahf
pop
xchg
xchg
fistp
jp
xchg
mov
inc
ss
das
inc
add
add
scas
cmp
jns
lahf
dec
aas
sar
lea
and
repnz
cli
(bad)
and
daa
xchg
test
or
pop
or
aam
ins
sbb
or
hlt
pop
dec
enter
(bad)
adc
aaa
shl
mov
nop
inc
sub
cli
scas
push
mov
jno
movs
xchg
shl
adc
punpckhbw
or
inc
int
out
repnz
pop
dec
push
repz
cmp
dec
adc
push
cmps
add
cmp
inc
(bad)
bound
mov
mov
and
fmul
out
(bad)
or
cmp
or
jno
sub
mov
adc
or
cli
add
push
xor
fdiv
mov
test
shr
lods
mov
push
pop
in
fst
adc
xor
in
xchg
into
jbe
stos
sbb
cmp
ss
jnp
pop
mov
ret
neg
test
cmp
jmp
add
das
shr
repnz
fcom
push
push
mov
mov
lods
xlat
repz
imul
into
jl
adc
(bad)
div
push
xor
jbe
pop
sar
pop
cmp
retf
cli
retf
or
push
jmp
aas
pop
xor
and
into
lea
push
pop
and
(bad)
cwde
pushf
push
leave
fcom
sti
mov
jno
icebp
cmc
js
lahf
test
cmp
out
mov
div
aas
shr
xchg
cmp
sbb
and
mov
jmp
out
loopne
mov
xchg
pop
arpl
test
fcom
sub
sbb
iret
out
pop
js
loopne
loopne
inc
push
(bad)
sub
and
and
in
stc
pop
mov
jecxz
mov
out
ret
ins
jmp
icebp
mov
outs
fisubr
push
inc
ins
mov
jmp
ret
jbe
fisub
dec
jg
shl
scas
push
pushf
mov
fild
mov
ret
jmp
mov
cmps
ret
inc
push
inc
xchg
(bad)
in
and
fnsave
jb
dec
in
cmp
ss
push
iret
inc
movs
retf
dec
movs
int3
test
jge
xchg
aad
sbb
retf
mov
add
rcl
cli
retf
sub
retf
lods
cmp
adc
cli
or
into
mov
outs
ins
in
add
stos
xchg
outs
pop
fwait
push
xchg
ret
jb
inc
mov
daa
mov
jp
clc
mov
call
xor
out
lds
mov
mov
mov
aam
mov
mov
add
push
mov
jg
call
or
adc
(bad)
mov
inc
inc
jae
mov
fidiv
or
sub
cmp
outs
jno
out
jo
daa
adc
cmp
cmp
jmp
xchg
mov
fidiv
clc
mov
popa
inc
or
test
ins
(bad)
stos
and
or
shl
push
push
lea
add
mov
cmps
inc
jge
sub
push
mov
scas
scas
cmp
jno
nop
outs
test
cld
sub
cdq
std
loop
dec
ret
push
pop
jl
xor
add
xchg
jns
pop
xchg
aas
lods
in
mov
xchg
adc
cwde
cwde
cmp
int3
mov
iret
cmps
mov
cmps
aad
mov
fisttp
or
fst
fdivr
fs
and
push
pop
stos
pop
rcr
jmp
sbb
pushf
jb
or
out
mov
cdq
shr
add
and
jge
dec
ret
mov
or
cmp
mov
aas
bound
dec
fadd
jmp
and
sbb
xchg
pop
aam
in
scas
nop
loope
and
push
dec
in
mov
outs
push
out
jg
mov
imul
pop
or
(bad)
jp
test
in
xchg
shl
push
jae
movs
idiv
add
dec
imul
(bad)
push
sbb
dec
in
call
mov
aad
xchg
jmp
xchg
inc
(bad)
fidiv
in
jmp
das
push
add
mov
adc
into
adc
jle
js
pusha
sub
mov
fimul
mov
icebp
hlt
push
cmp
inc
repz
sbb
mov
outs
icebp
inc
mov
push
les
mov
inc
and
or
jns
shl
or
cdq
adc
jmp
loope
scas
fmulp
leave
movs
mov
ret
mov
(bad)
pop
xchg
dec
lock
xchg
inc
out
out
and
movs
lds
xor
cmp
dec
ror
xchg
aas
dec
or
fiadd
repz
sbb
jmp
outs
jno
sub
stos
movs
jg
dec
push
or
cmp
mov
xor
fwait
cmp
aaa
pop
nop
shl
or
(bad)
or
push
inc
rcl
imul
add
jne
xor
rol
pop
mov
iret
hlt
sbb
jmp
inc
inc
cld
cdq
cmp
jb
popa
mov
ss
mov
int
jecxz
stos
popf
mov
mov
push
loop
outs
frstor
ds
lahf
push
repz
shl
aas
scas
cs
ret
test
call
or
xchg
xchg
fisttp
repnz
rol
leave
or
or
pop
mov
add
xor
mov
call
mov
aam
es
fucom
adc
sub
adc
inc
mov
jmp
xlat
cmp
icebp
lock
add
mov
test
push
imul
xchg
in
adc
movs
jle
pop
popf
jb
jg
shl
sub
mov
mov
xchg
and
jmp
push
dec
xchg
inc
jp
clc
scas
ret
das
mov
aaa
mov
adc
sbb
js
push
push
out
pop
mov
in
pop
neg
ds
dec
aam
dec
push
cmp
sub
in
or
sub
cmp
push
cs
push
in
cwde
stos
out
jmp
add
mov
stos
cmp
push
leave
add
cwde
cmp
out
and
pop
arpl
mov
jae
inc
movs
mov
ds
xor
outs
aas
push
xchg
adc
pop
pop
mov
int
sub
daa
and
xchg
into
sbb
push
pushf
pushf
mov
sbb
fld
cs
mov
cmp
dec
ins
je
or
aad
cs
clc
mov
jo
mov
leave
sbb
mov
add
test
adc
and
imul
(bad)
mov
lock
test
push
cmp
and
push
push
xor
movs
out
sar
xor
stc
pop
push
dec
push
(bad)
lock
xchg
xchg
sti
bound
add
jmp
aaa
hlt
pusha
shl
jge
adc
mov
cmp
sbb
inc
das
jne
outs
dec
cli
in
mov
cs
iret
sub
fcom
sub
cmps
cmp
sbb
in
repnz
jbe
lahf
jl
inc
rol
jmp
add
add
jge
div
xor
pop
mov
hlt
out
xor
leave
mov
lahf
adc
mov
mov
cmp
xor
retf
push
in
aas
cmp
lods
push
push
adc
inc
jae
xchg
jae
inc
out
aam
jns
test
cdq
(bad)
cmp
popa
in
sub
cs
mov
into
je
cld
movs
jbe
xchg
mov
je
jbe
test
jp
cmp
imul
out
stos
xchg
sbb
movs
dec
ja
pop
push
test
xor
stos
and
pop
mov
push
inc
and
xchg
jo
or
mov
mov
inc
mov
sub
aam
fistp
push
loopne
imul
cmps
enter
cmp
shr
lds
test
mov
xchg
div
std
push
lea
mov
fwait
jge
and
pop
ja
or
push
cmps
sub
retf
pop
push
pusha
fstp
or
scas
cmp
push
cmc
push
push
dec
mov
into
sub
or
mov
ds
jmp
retf
pop
scas
stos
lods
pmaxub
sahf
data16
adc
(bad)
adc
into
inc
dec
mov
repnz
nop
dec
retf
sbb
push
cmp
xor
dec
clc
sub
cwde
and
inc
xchg
jp
push
scas
retf
xor
xor
sbb
add
or
ins
push
sbb
xchg
add
idiv
xchg
ret
mov
push
xchg
hlt
xor
ss
enter
add
dec
mov
dec
ret
rol
xchg
mov
pusha
int3
icebp
dec
jae
popa
clc
out
add
push
int
mov
jbe
rcr
sbb
fisttp
das
xchg
cmc
adc
add
mov
(bad)
out
add
xchg
or
jle
xchg
push
call
mov
repnz
push
dec
aad
repnz
jecxz
fstp
unpckhps
dec
sbb
jo
shr
arpl
nop
mov
sub
(bad)
jg
call
push
or
in
loope
call
out
ret
mov
fild
loope
pop
add
sbb
push
fisubr
into
mov
jo
test
mov
jp
jl
inc
je
je
mov
or
lock
es
add
xor
out
int
stos
outs
push
fist
sbb
stos
fst
gs
sbb
loope
fsubr
nop
into
shl
inc
mov
sbb
mov
in
mov
stc
pop
mov
sahf
mov
inc
mov
fild
hlt
mov
call
xchg
out
inc
mov
in
jmp
mov
mov
hlt
mov
adc
loop
inc
std
clc
fild
pop
cwde
or
hlt
fwait
sub
int
js
sub
pop
push
mov
inc
dec
add
les
ins
cmc
out
push
lods
stos
addr16
xor
pop
mov
loope
ds
pop
cmps
inc
mov
lods
and
in
lea
pop
xor
mov
xor
fisttp
pop
jle
add
mov
arpl
xchg
cmp
(bad)
xor
call
aam
pop
and
cs
call
test
inc
mov
cmp
or
jmp
clc
jl
or
pop
das
int
mov
and
cmp
cmp
rol
or
clc
pop
or
fadd
jmp
mov
daa
dec
adc
addr16
dec
addr16
mov
cli
lahf
cmc
xchg
clc
retf
repnz
shl
sbb
adc
jecxz
in
rcl
enter
retf
outs
adc
sub
sahf
jmp
inc
mov
and
push
out
hlt
or
ds
push
cmp
inc
add
mov
mov
mov
pop
inc
ja
inc
adc
xchg
cld
out
aaa
push
cmps
cli
cmp
fdiv
inc
jmp
dec
pop
jb
mov
add
out
add
out
dec
or
adc
hlt
(bad)
hlt
stos
int
outs
ds
jl
jb
movs
mov
xor
test
xor
(bad)
cwde
lahf
pop
xchg
out
stc
mov
out
mov
aad
movs
sahf
cmp
adc
call
push
out
call
clc
loop
push
sub
ror
dec
in
lea
xor
dec
cmp
mov
jb
or
or
pop
sar
aam
sbb
mov
retf
sub
mov
mov
mov
and
(bad)
dec
jg
or
ret
or
or
aas
aas
cmps
xor
xchg
pop
push
in
fbld
loope
pusha
jecxz
sar
aas
(bad)
cmp
jge
lds
dec
out
call
popa
mov
xlat
clc
mov
sub
loopne
cwde
fucom
sub
fstp
fidivr
and
add
dec
push
in
iret
cmps
jae
retf
nop
into
pop
nop
daa
jl
cmps
ficom
aas
fldenv
dec
stos
or
imul
xor
enter
inc
dec
cmp
int
sbb
sti
fdivrp
sub
mov
push
stc
xor
loopne
shr
or
sbb
dec
and
add
sub
adc
xchg
push
fist
(bad)
(bad)
push
cmp
mov
je
inc
loop
dec
cld
(bad)
enter
cmp
(bad)
addr16
cmps
movs
sbb
cld
cdq
(bad)
xor
sbb
ret
add
sub
addr16
lock
mov
sub
enter
je
and
mov
sbb
fldcw
mov
lahf
add
lods
in
cdq
fdivr
ins
and
gs
fist
push
pop
pop
(bad)
mov
idiv
mov
sub
push
mov
cmp
mov
cmc
shl
ficom
nop
jnp
cwde
repnz
pop
mov
mov
out
mov
nop
fcomi
dec
push
mov
lods
sbb
mov
jge
je
jb
sub
inc
sub
repnz
push
pop
imul
leave
xor
clc
(bad)
mov
adc
cmp
and
pusha
adc
sti
in
lods
pop
mov
inc
in
mov
sbb
or
imul
lods
or
pop
rep
and
xchg
js
enter
adc
jno
sti
xchg
(bad)
xchg
mov
sbb
xor
inc
inc
fidivr
jae
(bad)
pusha
ret
test
push
add
add
fsub
pop
call
push
add
js
xor
xlat
pop
ins
sub
push
jns
pop
mov
je
xlat
lock
movzx
sub
icebp
pusha
pop
sub
scas
jb
inc
retf
xchg
inc
call
adc
cli
pop
adc
jl
xchg
pop
inc
bound
pop
mov
jnp
push
add
ss
xor
xor
xchg
mov
xor
shl
call
jae
(bad)
jmp
inc
push
xchg
ss
cmp
inc
(bad)
into
ins
jb
xor
or
fist
pop
jno
clc
fsub
dec
push
push
inc
setno
mov
fwait
in
jnp
and
out
xchg
daa
fnstsw
sub
sbb
xchg
fwait
pop
in
dec
sub
push
push
add
shr
xchg
dec
adc
pop
enter
nop
popf
out
not
cmc
mov
add
shl
jnp
addr16
xor
xlat
or
mov
jno
je
pop
push
retf
test
dec
jp
xchg
imul
iret
scas
shl
mov
arpl
mov
or
loop
inc
je
dec
push
inc
outs
mov
test
jno
js
test
movs
ins
or
ins
out
pop
push
jmp
in
inc
mov
xchg
in
fistp
loopne
mov
adc
cmps
add
adc
adc
push
(bad)
xlat
push
lods
and
frstor
inc
adc
ins
sub
inc
sbb
jbe
dec
mov
cmps
addr16
rol
iret
in
adc
or
lds
push
inc
mov
push
stos
jle
std
push
pop
int3
inc
add
mov
push
or
out
loop
out
jmp
inc
jne
das
out
xchg
xchg
sub
je
adc
fistp
mov
dec
sahf
outs
pop
adc
sub
daa
fistp
push
(bad)
mov
xchg
sub
in
in
aam
lods
xor
push
(bad)
mov
enter
mov
pop
outs
fwait
pop
sub
fsub
sbb
push
mov
enter
or
inc
and
fst
jbe
(bad)
push
and
rol
mov
fstp
fsub
je
inc
call
mov
jbe
pop
push
jne
push
inc
add
test
pop
mov
enter
fdiv
push
push
jmp
jne
xor
mov
push
js
mov
dec
les
loopne
out
in
cmps
cmp
popa
and
cmp
push
repz
mov
fld
cmp
movs
addr16
shr
ret
adc
adc
push
sub
nop
ret
inc
pop
sti
jb
out
jnp
mov
aad
call
sbb
push
(bad)
jno
adc
shl
retf
jns
fiadd
into
mov
adc
fs
inc
cdq
push
fstp
imul
push
mov
cs
cmp
push
lods
pop
mov
dec
pop
retf
mov
lds
push
push
iret
rol
sbb
and
inc
lds
retf
dec
mov
xchg
icebp
dec
dec
push
sbb
out
fwait
adc
push
aas
xlat
fcomp
std
call
mov
in
in
xor
xchg
jae
shr
daa
out
jmp
or
test
fwait
pop
push
xchg
pop
xchg
bound
xor
loope
xchg
push
pop
mov
xchg
int
mov
ds
test
sbb
nop
mov
pop
test
mov
or
sub
movs
push
cmp
xor
jbe
pop
retf
stos
jp
fimul
jg
cld
sub
jle
mov
adc
cmp
xchg
add
in
jle
loop
fcmovb
icebp
or
aad
mov
arpl
xchg
jb
shr
mov
je
jmp
clc
pop
dec
in
cwde
inc
xor
outs
jge
cs
leave
mov
cdq
dec
arpl
in
(bad)
das
xor
ins
std
add
sub
(bad)
xor
iret
cmps
push
clc
pusha
(bad)
(bad)
in
arpl
mov
ror
(bad)
sbb
cld
cmp
add
xor
mov
outs
fmul
cmp
les
movs
adc
and
and
mov
sbb
push
scas
stos
mov
mov
cmp
icebp
popf
jns
aaa
xchg
or
lahf
pop
loope
mov
xor
cmp
pop
mov
mov
add
popf
pop
fldenv
inc
ficomp
push
adc
icebp
cmp
pop
adc
in
inc
cmp
sub
jnp
push
call
push
das
sub
ss
push
cmp
and
shl
in
and
or
inc
jns
int
jae
shl
sbb
(bad)
imul
test
inc
sti
mov
loope
es
ror
dec
adc
(bad)
mov
pop
push
xor
sbb
jb
sub
ret
mov
sub
shl
xor
dec
mov
not
pop
add
ret
adc
movs
add
jge
movs
test
sub
or
mov
cdq
(bad)
je
jmp
in
(bad)
push
dec
retf
pop
or
into
ja
mov
jne
inc
movs
ja
imul
in
test
xchg
pop
test
push
clc
jp
out
and
inc
cld
repnz
sar
mov
jmp
or
ins
adc
sbb
mov
stc
jo
pop
call
adc
jg
sub
ret
push
pop
inc
std
pop
lahf
cli
adc
in
gs
push
inc
aad
(bad)
and
or
mov
jecxz
sbb
mov
push
sbb
pushf
add
mov
stc
pop
ja
cwde
add
mov
nop
fs
test
adc
dec
push
jne
push
inc
test
repz
ja
aaa
inc
mov
out
fwait
cmp
out
or
into
div
cmp
aad
adc
sub
jecxz
push
cmp
inc
mov
fsubr
xor
jae
or
nop
inc
push
xchg
jae
cmc
dec
dec
arpl
xchg
jbe
mov
xor
sub
pop
adc
retf
shr
enter
sbb
lods
es
push
sub
stc
test
into
repz
faddp
out
cmp
fs
shr
push
jo
call
sbb
in
sub
add
or
or
jo
jecxz
mov
lock
dec
call
sbb
mov
sub
push
inc
xor
cmc
add
stos
enter
das
sub
xor
dec
xchg
dec
scas
inc
addr16
out
jecxz
xchg
jmp
xor
stc
nop
out
arpl
addr16
std
shr
es
and
adc
clc
pop
in
movs
pop
adc
xchg
pop
sbb
mov
out
das
test
add
dec
sub
call
scas
and
mov
iret
aaa
and
xchg
cdq
cmc
inc
mov
jno
sti
fsub
fistp
out
jmp
push
stos
movs
lds
mov
aaa
and
pop
cwde
jge
(bad)
shl
in
add
push
jge
fs
push
clc
mov
sbb
(bad)
stos
jl
pop
retf
int3
and
(bad)
lock
sub
into
fwait
cmp
jo
mov
mov
repz
into
or
out
ret
inc
mov
hlt
lods
or
pop
mov
xchg
scas
retf
xchg
jo
out
push
enter
cmp
(bad)
xor
cli
adc
(bad)
and
es
cmp
and
pop
shr
in
xor
cmp
icebp
mov
lahf
and
lods
test
sar
xchg
xchg
inc
(bad)
les
sub
call
pushw
or
jbe
ror
loopne
lods
push
leave
jnp
retf
loop
lds
xor
js
shl
cmc
cld
daa
leave
lock
movs
pop
jb
add
xchg
jmp
dec
mov
inc
jge
lods
jl
inc
mov
out
daa
xor
(bad)
mov
test
inc
sub
jg
ins
icebp
enter
lods
pusha
jns
hlt
lods
into
mov
dec
xor
(bad)
mov
mov
pop
scas
pop
test
cmp
mov
loopne
add
pop
aas
sbb
cdq
push
dec
fdivr
dec
mov
dec
mov
es
xchg
sub
scas
dec
mov
repz
stos
mov
rol
into
xchg
push
loop
push
scas
or
mov
mov
jp
call
mov
aas
inc
sub
jmp
test
dec
(bad)
pop
mov
jae
outs
pop
pop
sub
add
xor
inc
and
ins
inc
lea
lods
mov
inc
stos
jb
push
pop
jne
test
pushf
test
dec
dec
adc
pop
add
cli
jecxz
sub
int
fisub
add
inc
retf
push
mov
push
dec
push
push
das
push
popa
jnp
lods
outs
jnp
mov
cmp
cmp
push
call
fistp
xor
fldenv
in
stos
test
jne
or
gs
ret
scas
repz
xchg
ffreep
int
jnp
xor
inc
call
mov
(bad)
pop
push
or
jmp
ret
pop
out
adc
in
test
xchg
std
scas
xchg
clc
push
and
sar
cmc
inc
mov
pop
pop
fcomi
dec
fidiv
push
and
fcmovnu
pop
fs
scas
stos
dec
sbb
retf
jbe
into
pop
sbb
lock
sub
fld
imul
or
cs
ficom
gs
mov
nop
pop
popf
addr16
(bad)
push
pop
adc
dec
lds
or
fldln2
add
xor
aad
dec
arpl
push
pop
push
inc
sti
push
adc
out
scas
lea
daa
pop
mov
fstp
adc
fwait
pop
ja
cmps
mov
jae
xor
and
dec
je
pushf
jmp
test
imul
pop
add
mov
add
ret
add
xchg
loop
sbb
inc
adc
hlt
add
imul
ins
jne
fidivr
xor
out
fwait
push
(bad)
mov
or
sar
and
(bad)
fcom
jae
add
mov
js
lahf
stos
push
or
call
icebp
cwde
and
mov
test
repnz
icebp
or
and
mov
adc
mov
dec
jmp
gs
inc
mov
rol
pop
je
data16
mov
es
add
inc
dec
jmp
jl
xor
dec
and
xchg
into
add
mov
dec
dec
in
xchg
lock
out
mov
movs
cmp
inc
and
test
add
pop
sbb
pop
shl
mov
data16
push
popf
fninit
cmp
ret
or
jge
xor
popf
or
push
push
and
inc
inc
movs
push
adc
xor
mov
push
mov
inc
xor
fist
inc
rol
add
movs
xchg
sahf
lock
aam
popf
(bad)
inc
jnp
xchg
(bad)
sbb
dec
loop
(bad)
xor
and
(bad)
pop
xor
lods
xor
loopne
ror
les
xchg
ficom
adc
and
nop
push
pop
cs
jns
stos
(bad)
fdivr
in
or
test
fisub
fcom
add
cld
(bad)
cmps
xchg
sub
in
fwait
mov
jge
and
jo
enter
loopne
add
nop
push
pop
ds
(bad)
mov
add
mov
xlat
mov
push
mov
cmp
inc
add
das
mov
pop
(bad)
add
sbb
xchg
ja
xchg
mov
jnp
sti
fidiv
push
push
jbe
push
cwde
fs
add
test
or
icebp
pop
(bad)
lods
inc
call
inc
retf
aam
fwait
mov
xor
cmp
jmp
pop
les
fisubr
inc
stos
xchg
cmp
out
daa
push
mov
aam
(bad)
stc
dec
pusha
hlt
adc
lea
add
mov
enter
push
div
lds
rol
or
cwde
fwait
sub
hlt
cdq
fadd
push
mov
cmp
aad
neg
xchg
mov
inc
xor
mov
sub
aas
add
pop
fcomi
das
mov
mov
xchg
nop
sub
and
pop
cmp
mov
dec
jecxz
bound
or
adc
icebp
cmp
loop
mov
out
inc
xchg
dec
push
movups
pop
rol
xor
(bad)
jmp
pop
ss
jns
clc
loope
fsub
sub
cdq
xlat
aam
mov
sbb
cmovs
aad
adc
cmp
mov
mov
(bad)
repz
(bad)
shr
push
ins
or
xbegin
imul
das
jno
loope
sbb
xor
mov
nop
dec
out
inc
xchg
jne
jno
sub
je
mov
jmp
cli
jmp
enter
xor
ret
pop
dec
sub
stos
imul
ja
push
pop
jmp
adc
and
call
imul
pop
aaa
xchg
inc
mov
push
adc
or
pop
mov
test
mov
mov
xchg
inc
aas
nop
or
mov
pop
stos
lds
mov
fidiv
mov
jnp
(bad)
pop
jg
xchg
lock
pop
jecxz
mov
or
enter
int
pop
jp
(bad)
cmp
out
jge
sbb
sub
mov
jo
aas
adc
adc
sbb
mov
daa
popf
pop
jg
leave
push
mov
xor
dec
je
fcomp
cmps
add
adc
inc
inc
mov
stos
xor
pop
dec
cld
aad
ds
inc
mov
inc
outs
sbb
sbb
out
sub
repnz
or
pop
icebp
adc
inc
add
fimul
cmp
repnz
and
mov
dec
xchg
adc
sub
icebp
mov
xor
sbb
cmp
jnp
cmp
popa
pushf
fwait
movs
add
dec
sbb
mov
leave
pop
push
pop
dec
cmp
xchg
add
push
loope
int3
sub
fistp
ret
jge
inc
jmp
stc
jecxz
add
popf
jg
push
in
iret
jnp
and
cmp
push
push
adc
cld
jmp
push
scas
vunpcklps
ins
pop
adc
sar
jne
fs
sbb
cmps
add
rcr
sub
rcl
cmp
sbb
xor
and
or
hlt
sbb
mov
sub
sbb
pop
jo
mov
cmp
pop
mov
js
and
inc
loope
dec
and
pop
mov
test
sub
mov
fldcw
add
int
fidiv
ror
jg
or
fidiv
(bad)
pushf
test
push
scas
jne
cmps
fiadd
pop
vucomisd
dec
out
(bad)
push
xor
ss
(bad)
aam
mov
loop
inc
repnz
(bad)
and
mov
hlt
jo
je
stos
aam
mov
xor
js
je
repz
pop
sub
sbb
fadd
mov
mov
sbb
pushf
ins
xchg
mov
jb
dec
add
xor
adc
ret
pop
xlat
(bad)
sub
into
pop
cmps
cmp
xor
loop
gs
es
sbb
inc
in
test
xchg
or
mov
pop
mov
bound
adc
dec
cmp
(bad)
(bad)
mov
lods
jnp
sub
jmp
sbb
int3
push
into
retf
mov
cmps
loop
movs
and
jno
xor
xchg
jmp
add
or
inc
hlt
pop
cli
cmp
int
imul
pop
jns
aaa
mov
pushf
pop
(bad)
call
fist
jg
jno
fmul
shl
repz
fnstenv
sub
push
fwait
dec
mov
inc
jmp
bound
sbb
jle
adc
out
jae
lahf
jge
pop
ss
cmp
(bad)
enter
jecxz
xor
div
and
push
dec
sub
and
sub
jmp
inc
sbb
mov
jmp
jne
pop
push
xchg
repz
sar
and
xchg
cmp
not
jecxz
cdq
(bad)
fwait
or
lock
inc
shl
pushf
sub
and
mov
and
ror
mul
bound
mov
inc
jmp
mov
or
pop
mov
(bad)
cmp
out
scas
out
mov
xchg
pop
clc
adc
mov
xchg
jmp
pop
scas
lock
cmp
dec
cdq
call
(bad)
xor
lds
fcmovb
cmp
mov
jmp
(bad)
mov
mov
push
jge
inc
je
cmps
stos
cmps
(bad)
sub
cmp
pop
ss
add
cmp
inc
call
mov
or
and
mov
xchg
rcr
in
(bad)
lods
xchg
pextrw
mov
pusha
call
adc
push
mov
adc
addr16
xlat
jbe
mov
fsubr
add
push
fsub
push
and
dec
cmp
mov
xchg
inc
sbb
stc
shl
pop
push
clc
mov
popf
sbb
out
pusha
repz
das
xchg
xor
outs
push
inc
sahf
ficomp
xor
adc
rcl
lea
sub
idiv
fwait
pusha
imul
mov
or
in
jle
or
shl
mov
mov
repz
ret
stc
into
rcl
and
lock
sbb
cmp
xchg
add
out
pop
xchg
ja
push
test
and
aas
push
xchg
call
fwait
daa
add
addr16
cmc
inc
neg
add
push
inc
cs
out
inc
pop
cli
pop
or
div
push
cmps
(bad)
mov
mov
sahf
add
push
leave
imul
mov
clc
inc
sbb
cmp
loope
mov
fucom
jmp
cmp
mov
in
mov
bound
add
dec
cmp
inc
cdq
push
js
and
pop
in
cmps
sbb
int3
xor
test
outs
dec
sub
call
int
xchg
xchg
in
es
or
int3
lea
loope
push
lods
(bad)
sub
adc
leave
popf
sbb
outs
fidivr
inc
and
loop
fidiv
cdq
popf
ins
dec
out
cld
mov
outs
adc
xchg
xchg
sbb
div
ret
jmp
arpl
call
cmp
leave
call
mov
pop
in
xchg
sbb
lock
bound
mov
mov
out
imul
inc
jge
retf
mov
hlt
cmp
fwait
mov
adc
(bad)
retf
cmp
inc
nop
daa
sub
inc
push
jge
push
lea
test
in
mov
jns
ss
mov
xchg
and
xor
mov
pop
in
rcr
jae
mov
loope
sub
mov
and
fmul
mov
movs
(bad)
or
xchg
ja
push
pop
aaa
sbb
and
rol
pusha
add
fldenv
push
inc
sub
inc
aas
mov
add
xlat
mov
or
das
or
add
sbb
dec
fild
mov
cli
sti
test
stos
std
cdq
cli
jmp
cmp
dec
push
retf
into
or
in
mov
inc
cli
push
xchg
sbb
sub
test
lock
(bad)
jmp
dec
(bad)
push
or
xchg
retf
inc
stos
or
inc
loope
rcr
adc
jbe
hlt
in
xor
xor
xchg
cwde
call
or
(bad)
push
cwde
(bad)
hlt
popa
cmp
adc
ins
in
leave
cmp
popa
jle
int
mov
push
dec
pop
mov
jecxz
xlat
xor
bound
sbb
mov
je
xchg
cmp
sti
repz
inc
jmp
enter
and
inc
xor
fcom
dec
push
pop
jmp
sbb
push
std
fidiv
clc
jns
mov
data16
gs
adc
mov
xor
xchg
lock
mov
and
sbb
cmp
icebp
mov
out
dec
pop
and
les
xlat
retf
or
fs
xor
loopne
pop
iret
cmps
test
dec
movs
mov
in
sbb
sbb
or
mov
dec
push
int
cmp
and
inc
sub
retf
jbe
xchg
ret
js
pusha
pop
(bad)
inc
sbb
test
mov
xchg
jle
jb
xor
xchg
cmp
fiadd
cmp
daa
cmps
in
cdq
retf
dec
or
shr
dec
jno
mov
inc
sbb
int
inc
scas
and
and
inc
ins
cmp
mov
sbb
push
aaa
and
dec
mov
xor
pushf
pop
js
call
adc
jae
xor
xchg
out
sahf
jg
sbb
rcr
or
in
dec
xor
and
mov
out
add
inc
aam
(bad)
xchg
rcl
cmp
jbe
push
pop
mov
ins
sahf
movs
sub
call
(bad)
inc
push
stos
push
pop
sub
inc
or
jns
xchg
adc
div
(bad)
(bad)
loopne
xchg
sbb
rdmsr
lds
mov
je
aam
adc
pop
daa
jl
or
mov
dec
mov
inc
std
or
jno
nop
add
inc
pop
pop
arpl
adc
cs
fisttp
ins
test
cwde
push
mov
cmp
imul
fsub
and
retf
and
addr16
imul
mov
fidiv
rcr
mov
lds
jp
mov
movs
push
push
pop
and
adc
(bad)
in
sub
scas
(bad)
fnstcw
inc
and
out
jg
loop
xlat
pop
ins
mov
jmp
xor
and
dec
repz
std
in
xor
(bad)
dec
lods
out
dec
inc
or
mov
popa
fwait
xor
cmp
pusha
xchg
out
lea
jno
mov
call
xchg
bound
in
ss
retf
adc
icebp
fst
neg
aam
js
sub
adc
movs
jle
or
sar
iret
inc
cmp
and
cs
cmps
xchg
push
push
xchg
add
pop
js
pushf
mov
rcl
(bad)
jae
mov
pushf
gs
jb
and
pop
sub
mov
fidivr
push
jo
cld
nop
test
arpl
dec
ja
push
mov
test
inc
push
or
xlat
push
adc
push
retf
call
scas
adc
adc
shl
rol
add
cmp
xchg
inc
pusha
jns
(bad)
movs
push
mov
ss
dec
mov
ret
repnz
mov
sbb
int
cli
mov
sbb
and
popf
popf
je
jmp
mov
push
sbb
mov
jns
jnp
pop
(bad)
cmp
dec
jmp
add
sub
loopne
xor
(bad)
jno
adc
push
inc
add
bnd
mov
sbb
push
pop
inc
adc
shl
sbb
call
push
pop
cmps
adc
dec
lds
add
dec
add
and
or
or
in
retf
sbb
popf
dec
lods
xchg
pop
jb
(bad)
adc
adc
cli
leave
lods
jmp
bound
add
(bad)
dec
test
ss
sbb
jns
(bad)
fcmove
lds
sub
add
dec
sar
das
sub
or
inc
daa
mov
adc
test
jge
or
hlt
loop
cdq
nop
imul
(bad)
ret
lea
inc
cld
retf
push
jne
cld
xchg
sub
jge
lods
std
out
sub
xchg
mov
cld
push
mov
(bad)
xor
jle
fdivr
sbb
cmp
loope
push
add
push
test
mov
out
add
jge
pop
xor
or
mov
lock
push
test
add
in
lds
sbb
or
ret
adc
mov
shl
pop
stos
xchg
dec
dec
mov
push
pusha
mov
jecxz
sub
cli
adc
int3
mov
jecxz
int
adc
inc
fdivr
cwde
jnp
(bad)
cli
aam
push
pop
clc
pop
mov
mov
or
inc
mov
cmp
call
in
add
shl
loope
fwait
icebp
push
pop
mov
(bad)
xchg
jnp
or
pop
sub
retf
(bad)
cli
movs
(bad)
es
adc
pop
or
ss
mov
and
outs
pop
xchg
adc
fld
xchg
add
fbld
outs
xor
dec
push
pop
into
test
sbb
or
fsub
mov
dec
icebp
inc
xor
call
sub
push
and
fld
dec
jno
sahf
pusha
stos
push
add
xchg
and
loope
push
sbb
mov
mov
inc
lods
sub
cmp
retf
sbb
call
jbe
pop
adc
test
and
shr
adc
test
clc
scas
jge
daa
outs
ret
mov
push
mov
fs
adc
mov
fistp
jnp
scas
hlt
lods
hlt
rcl
in
cld
xor
xor
jmp
shl
jae
cmp
cwde
jl
and
add
shl
add
cmc
repz
mov
jnp
sbb
adc
ret
dec
mov
jmp
xchg
xchg
xor
ror
inc
shl
movs
test
mov
test
adc
jmp
xchg
jl
lods
or
mov
add
push
jmp
ror
cmps
(bad)
loop
fld
jmp
pusha
dec
adc
push
call
rcl
jo
test
xchg
mov
xchg
sub
mov
fstp
inc
inc
inc
repnz
(bad)
aas
mov
fbstp
rol
xchg
(bad)
out
mov
mov
shl
imul
sub
push
loop
repz
rcr
push
outs
clc
in
inc
stos
or
inc
and
xlat
jns
outs
imul
add
and
xchg
jp
lock
mov
(bad)
mov
or
cs
and
in
pop
xor
je
inc
push
xchg
scas
call
fld
rol
(bad)
in
repz
retf
hlt
je
mov
(bad)
jmp
clc
add
pop
frstor
bswap
(bad)
adc
retf
fs
and
retf
stos
dec
push
ins
add
xchg
(bad)
in
loopne
jp
xor
adc
aas
inc
jns
dec
das
or
mov
(bad)
in
hlt
xor
xor
or
stc
ins
leave
mov
cmps
mov
jmp
push
push
mov
mov
lahf
mov
xchg
ret
or
adc
mov
sbb
inc
or
jns
jae
(bad)
enter
in
fdivr
mov
stc
push
inc
imul
gs
sub
into
aad
repz
cmp
mov
pusha
add
pop
pop
clc
push
out
and
mov
stos
push
das
inc
and
inc
and
xor
sar
jb
arpl
push
pop
and
test
xor
icebp
lea
mov
cdq
mov
fstp
jmp
stc
mov
pop
inc
scas
jg
aas
jb
jbe
mov
inc
cmp
sbb
jnp
or
cmps
aad
dec
test
jne
push
sbb
inc
xchg
rcr
int3
jp
push
jmp
lock
or
xchg
test
std
push
mov
sub
and
cmp
es
outs
push
jno
cdq
or
fisttp
sbb
jb
jmp
cli
repnz
sbb
mov
mov
or
jle
js
or
rcr
push
xchg
mov
sbb
sub
(bad)
scas
mov
enter
pop
mov
jg
push
popf
repnz
xchg
push
inc
shr
mov
ficom
add
xchg
mov
sbb
dec
shl
pop
lea
call
mov
cmp
lahf
int
xchg
jmp
add
ret
shr
xor
push
pusha
lahf
and
dec
mov
div
push
and
inc
fisttp
in
je
adc
call
(bad)
pop
jl
fist
stos
fist
and
imul
lds
cmp
mov
add
lds
ret
xor
jo
in
jp
sub
xor
and
rol
icebp
or
pop
test
out
xor
add
pop
cli
inc
leave
ret
push
retf
add
std
out
ja
push
mov
mov
neg
sbb
sub
or
jae
cmps
inc
sbb
test
test
imul
psubsw
cmp
add
or
xchg
retf
jno
mov
jb
jae
ret
fnsave
adc
mov
mov
jae
push
sub
fsub
mov
xor
mov
mov
inc
ja
xor
mov
jae
sbb
fs
jl
sbb
adc
cmc
in
adc
aaa
push
xor
cdq
pop
add
iret
call
xor
out
cmp
pop
pop
enter
shr
jnp
mov
push
movs
xor
cwde
pop
sbb
jno
in
or
push
push
dec
xchg
sbb
cmp
das
(bad)
enter
imul
or
push
xor
push
enter
cdq
jmp
sub
(bad)
aam
inc
jnp
inc
dec
(bad)
das
mov
sub
mov
jns
out
fdivr
cmp
repnz
adc
mov
mov
adc
mov
(bad)
int3
push
(bad)
push
xchg
cwde
jns
xchg
test
fisubr
push
push
popf
popa
das
test
and
aas
je
sub
push
sbb
stos
pop
inc
jge
cmps
pop
add
sar
push
leave
aaa
enter
xchg
lea
push
imul
mov
push
mov
dec
rcr
xchg
push
ror
movs
or
mov
sbb
cmc
repz
add
pushf
gs
adc
jmp
sbb
sbb
(bad)
daa
int3
dec
dec
pusha
scas
in
repnz
inc
mov
inc
mov
fnstenv
adc
ins
or
stos
dec
mov
daa
lods
jmp
pop
fisttp
mov
pop
push
xchg
rep
jae
(bad)
in
(bad)
cmps
pop
and
sbb
mov
inc
sub
sti
popf
push
mov
fstp
(bad)
mov
hlt
(bad)
jo
out
cmp
xor
xor
push
mov
call
dec
neg
sbb
jg
mov
cmp
mov
cld
stos
xchg
dec
fnstenv
mov
sub
je
(bad)
mov
sti
aas
mov
lods
pusha
push
sub
pop
xor
xchg
inc
std
inc
stos
in
rcr
ja
loope
jb
jge
fs
loopne
rol
vmwrite
or
and
pop
mov
lods
push
adc
add
rol
aas
fild
xor
stos
je
ror
scas
dec
pop
dec
jne
hlt
mov
arpl
or
push
add
mov
dec
popa
or
stos
lea
fcmovnu
scas
retf
mov
xchg
lea
in
sbb
fs
adc
fstp
xchg
icebp
fnstenv
int3
push
and
rol
xor
cld
pop
mov
dec
add
xor
add
jmp
test
push
jp
retf
pop
pop
into
or
sbb
sbb
jae
dec
dec
or
mov
fdivr
in
sub
sti
xor
push
ins
add
int
mov
or
or
(bad)
add
mov
mov
mov
and
cmp
xor
cmp
ins
mov
scas
push
xchg
loopne
and
es
mov
or
stos
xor
loopne
aaa
xor
es
or
fstp
push
into
fistp
fild
mov
pushf
push
das
or
xor
cmp
retf
xor
cmp
xlat
and
push
(bad)
das
fcomp
icebp
dec
stos
inc
mov
sbb
push
(bad)
movs
mov
mov
sahf
lods
jae
add
hlt
test
popa
pop
add
or
rcr
inc
cli
cmp
rol
or
cmp
sbb
sub
xor
repz
(bad)
(bad)
push
mov
sbb
(bad)
lds
jecxz
shrd
and
mov
pop
sar
or
pop
popf
iret
aas
jns
adc
out
xor
mov
arpl
or
addr16
into
jbe
mov
xchg
cmps
js
inc
scas
popa
fsubr
int
push
lea
mov
dec
or
loopne
loop
movs
sub
mov
loope
sar
jmp
fs
jecxz
pop
enter
aas
test
dec
cmp
mov
and
(bad)
and
sbb
push
int
adc
or
cmp
cli
sbb
out
pushf
repnz
lods
outs
sub
mov
push
mov
jl
jle
add
cmp
pop
xchg
je
jmp
inc
ficom
mov
or
shr
xor
mov
cdq
shl
or
and
pop
bnd
pushf
cmp
and
inc
and
sbb
xchg
mov
clc
jo
imul
mov
mov
mov
(bad)
jmp
js
jg
icebp
xchg
and
rcr
dec
push
mov
mov
pop
jp
pop
mov
add
push
in
jb
and
cmp
and
adc
pushf
jbe
shl
ret
jo
xchg
sbb
mov
mov
pop
add
clc
mov
fnstsw
dec
adc
pusha
mov
adc
aaa
pop
stos
and
jbe
or
xchg
fldcw
push
push
push
(bad)
int3
fstp
retf
repnz
jle
mov
adc
push
jg
mov
cmps
mov
jmp
mov
xor
ja
jo
pop
mov
or
xor
loope
mov
and
mov
cmp
cli
fild
inc
sbb
(bad)
push
xchg
into
daa
dec
(bad)
outs
pop
rcr
lea
and
nop
add
cmp
js
inc
xchg
add
loopne
jle
test
aas
shl
cmp
out
jae
mov
inc
cmp
test
cmp
xor
fisttp
mov
ror
cdq
arpl
into
aaa
mov
dec
push
cmps
cmp
mov
mov
stos
sbb
inc
gs
jle
cli
sbb
retf
test
js
jnp
inc
push
push
pop
and
fstp
push
popf
xchg
ins
jle
ja
or
imul
jne
int3
pop
and
push
add
xchg
shr
add
push
vmovupd
jle
std
adc
inc
mov
push
fbstp
mov
jae
ret
xor
add
mov
push
jle
in
push
stos
jmp
push
jg
or
mov
jns
push
dec
push
jg
push
jnp
pusha
ins
adc
jne
lods
out
in
jns
hlt
arpl
rcl
scas
inc
pop
mov
dec
movs
mov
enter
fwait
out
das
add
sbb
addr16
push
cmp
xor
sub
in
pop
pusha
mov
xor
out
xchg
jb
mov
cdq
xlat
popa
cmp
retf
mov
aaa
ins
data16
ret
enter
mov
dec
js
or
push
mov
gs
cmp
call
push
mov
cmps
add
lea
cmp
adc
dec
cmp
mov
or
push
mov
sbb
sub
adc
or
loopne
ins
and
mov
outs
mov
dec
mov
cmp
push
out
pop
mov
(bad)
sub
test
xor
test
out
dec
lock
fxam
in
jb
pop
sub
das
sti
mov
rcr
lods
leave
ds
add
ja
test
mov
jb
mov
outs
cmp
xlat
fsub
jg
cs
adc
inc
(bad)
mov
aam
jnp
and
mov
jnp
(bad)
sub
pop
rcl
into
inc
ins
adc
sbb
mov
inc
xchg
jno
xor
jge
repnz
or
jp
cwde
jne
gs
repnz
cmp
fild
test
sti
dec
dec
and
scas
outs
push
sub
mov
imul
addr16
jge
and
mov
or
dec
rcr
fsubr
into
xchg
jns
pop
xor
mov
sahf
lods
shl
(bad)
mov
clc
mov
and
lahf
pop
mov
push
sbb
jmp
mov
inc
ja
lahf
or
in
pop
push
rcl
adc
call
xlat
aaa
mov
dec
mov
pop
cmp
xchg
push
adc
pop
or
xlat
pushf
lds
dec
and
push
inc
mov
outs
pop
call
push
push
push
(bad)
dec
or
mov
nop
inc
sub
int
std
dec
in
adc
test
mov
mov
pop
cmp
push
mov
retf
cli
dec
inc
jo
std
call
test
xor
sbb
ss
test
push
adc
mov
xchg
scas
mov
inc
mov
cs
push
int
and
inc
pop
xor
xlat
les
mov
ins
or
jns
add
inc
popa
repz
push
loop
push
scas
into
fcomp
test
or
mov
cld
clc
fwait
or
mov
xlat
jecxz
or
pop
es
outs
mov
in
stos
bound
out
push
jbe
sbb
dec
inc
leave
adc
push
jp
in
jl
lods
call
pmullw
mov
adc
mov
fisubr
sar
stos
push
or
and
(bad)
(bad)
lock
pop
dec
test
retf
adc
sbb
(bad)
je
dec
push
cli
push
sahf
jo
in
loop
mov
jae
xor
sar
jne
or
dec
jmp
push
cmp
das
in
push
ds
sar
cmp
sti
ss
loop
lds
adc
jb
pop
inc
dec
inc
inc
aas
add
adc
inc
ds
jnp
push
(bad)
pop
xor
mov
adc
stos
push
xor
add
xchg
dec
pushf
pop
fmul
adc
dec
mov
mov
jmp
push
pop
in
sub
sub
sub
aaa
mov
scas
jg
inc
xchg
out
ret
mov
in
bound
iret
adc
in
fs
dec
mov
xchg
add
inc
imul
mov
mov
xchg
js
dec
aam
jp
in
sbb
jl
mov
retf
jo
imul
add
mov
inc
adc
dec
aad
mov
sub
movs
pop
pop
bound
mov
cmps
xchg
sbb
cli
(bad)
push
mov
or
ret
jno
(bad)
jbe
(bad)
push
shl
test
gs
daa
loop
inc
ror
sbb
xor
jae
jmp
add
enter
retf
cwde
nop
or
or
jge
rol
sub
sbb
jae
mov
ins
push
pop
mov
add
push
cmc
pop
fst
or
mov
fnsave
mov
add
(bad)
(bad)
mov
pop
push
fistp
sar
mov
jno
inc
inc
inc
scas
mov
jns
arpl
cmps
inc
in
iret
jg
push
add
iret
scas
mov
fst
loop
ja
popa
jp
das
pop
dec
movs
call
sbb
mov
dec
fsubrp
das
les
je
inc
sub
(bad)
jns
mov
fdiv
gs
push
shr
push
xor
(bad)
rcr
lock
xor
enter
push
jmp
aad
sahf
mov
mov
add
lds
push
xchg
(bad)
mov
pop
mov
lds
aas
loope
sbb
cmp
sar
sahf
pop
pop
inc
and
jmp
test
dec
inc
mov
xlat
retf
push
lods
jbe
cwde
or
in
pop
outs
leave
add
mov
data16
jnp
mov
sar
mov
std
aaa
mov
mov
xlat
mov
sub
push
push
dec
sub
scas
(bad)
lahf
stos
nop
mov
inc
xchg
dec
les
not
adc
rep
ins
retf
inc
dec
jg
(bad)
mov
dec
popa
(bad)
ret
jmp
popa
cli
dec
xchg
call
dec
icebp
lea
mov
ror
addr16
enter
cwde
cwde
mov
cld
jnp
sar
xchg
pop
leave
out
jno
(bad)
arpl
sbb
loop
mov
stc
movs
push
push
dec
pop
push
test
inc
mov
in
xchg
add
sbb
mov
stos
fs
in
sub
adc
pusha
cmp
loop
fild
lea
ins
popf
repz
inc
ret
dec
jne
pop
enter
inc
xlat
push
les
inc
jecxz
hlt
push
push
test
or
scas
out
dec
xor
rol
mov
lock
mov
rcl
mov
in
mov
enter
std
fsub
stos
mov
fsubr
cmps
mov
movs
jnp
pop
pop
dec
xchg
(bad)
sub
adc
mov
and
jbe
arpl
push
dec
les
xchg
mov
or
lahf
add
(bad)
and
sbb
sar
lock
jmp
aad
inc
test
repnz
xor
mov
test
add
jmp
sub
les
test
jo
fsubr
mov
sub
dec
scas
in
in
rol
out
mov
cwde
lods
dec
sub
cmp
sbb
int
inc
mov
cmp
sbb
or
dec
sbb
mov
xchg
dec
jecxz
xchg
xchg
push
es
(bad)
mov
cld
outs
mov
jne
arpl
jmp
and
test
mov
and
repnz
inc
pop
push
rcr
pusha
inc
push
lds
xchg
sti
xchg
cli
fnstcw
lods
pusha
(bad)
out
mov
add
cmp
std
dec
and
rol
out
nop
cmc
or
adc
addps
mov
push
mov
add
sahf
shl
iret
jnp
arpl
outs
(bad)
mov
pop
jbe
ror
sbb
jbe
out
push
adc
pop
fsub
pop
xchg
ret
leave
push
mov
sbb
ja
gs
dec
es
test
ds
mov
imul
cmp
popa
and
shl
mov
cs
push
and
push
scas
adc
stos
jns
pop
lods
loopne
gs
mov
ret
mov
leave
data16
jnp
into
dec
xor
xor
inc
test
sub
mov
(bad)
adc
aas
adc
cmps
xchg
sbb
clc
fld
dec
xchg
dec
in
push
ret
loopne
xchg
fmul
push
test
mov
xor
sbb
fisub
fwait
dec
mov
stc
imul
shr
in
(bad)
out
jle
rol
jbe
or
cmps
cvttps2pi
push
int
ret
jecxz
jb
stc
cmp
xor
mov
mov
ficom
cmp
bound
ss
movzx
sub
sub
push
lock
sahf
fstp
dec
and
fnstcw
out
fcmovb
mov
ret
prefetch
or
pop
ror
adc
push
aaa
cmps
jne
cmps
push
pop
cmp
(bad)
cmc
cld
adc
retf
sar
clc
in
shl
movs
push
test
(bad)
or
mov
aas
inc
push
dec
xor
(bad)
rcl
dec
jge
mov
push
sti
and
push
and
mov
and
or
fnop
push
cmp
retf
dec
jb
repnz
fldenv
inc
ins
lahf
xor
jge
sub
sbb
sbb
add
ss
in
jp
rcl
sub
jno
jl
push
lock
sbb
pop
movs
sti
inc
add
mov
push
push
clc
out
cmp
push
daa
cmp
stos
dec
jmp
mov
int3
adc
stos
bound
ins
cmps
cmc
inc
pop
clc
adc
mov
int
mov
xchg
les
xchg
clc
inc
lods
fisttp
add
and
and
add
jmp
nop
pusha
push
pushf
push
pop
push
fild
into
ret
test
mov
pop
nop
xchg
sti
add
pop
mov
inc
ret
jge
push
mov
mov
dec
jp
pop
sti
test
es
shr
loopne
adc
push
dec
movs
ins
pop
and
add
loopne
fldenv
dec
dec
inc
ret
push
adc
mov
loopne
fimul
push
fnstcw
dec
loopne
push
adc
div
inc
xchg
imul
(bad)
cmc
nop
inc
(bad)
sbb
jns
push
lock
push
int
mov
inc
or
je
mov
(bad)
test
ss
cmp
cmp
adc
and
fld
push
js
repnz
scas
xchg
sbb
scas
pop
dec
aas
mov
int3
test
add
and
(bad)
pop
js
stos
addr16
sub
mov
(bad)
enter
ss
(bad)
mov
arpl
jmp
iret
nop
mov
aad
rcl
nop
ins
ror
mov
pop
mov
inc
jno
xlat
dec
mov
test
mov
jnp
jmp
mov
and
cld
sub
sbb
outs
xchg
ror
call
iret
cmp
lea
out
jp
xchg
mov
outs
movs
fisub
popa
test
xchg
test
inc
push
loop
sub
jbe
inc
aam
call
mov
mul
fwait
ins
mov
xchg
call
inc
xchg
push
fist
and
gs
push
mov
mov
sbb
inc
adc
mov
iret
xlat
or
or
mov
jge
adc
std
push
retf
and
fcomi
jne
fiadd
sub
aas
cmp
cs
(bad)
loope
adc
daa
adc
jmp
cli
adc
rcr
mov
dec
and
es
sbb
sub
dec
mov
cmps
iret
fistp
xor
sbb
or
pop
cmc
aaa
sub
inc
jle
into
retf
rcl
mov
idiv
pop
adc
sub
fst
sbb
and
mov
stc
dec
sub
call
inc
adc
adc
(bad)
test
sub
inc
or
pushf
in
sub
das
fcmovnb
sub
sub
push
dec
gs
and
cmps
jno
outs
xor
lods
xchg
xor
add
data16
mov
jnp
xor
mov
mov
push
mov
es
jo
jbe
add
fild
inc
cmps
call
mov
xor
sub
or
in
jae
mov
pop
(bad)
mov
adc
aas
adc
dec
jnp
mov
xchg
fsubp
push
out
aam
int3
mov
cmp
push
ss
scas
and
scas
push
fsubp
setns
push
ret
shr
ds
and
jne
or
inc
sahf
out
imul
cli
jge
ins
or
lock
pop
pop
retf
lahf
loop
loopne
push
jl
test
fild
push
pop
or
adc
sbb
mov
sbb
in
add
push
jbe
jg
push
jnp
lods
aam
test
std
cmps
sub
xor
in
cmp
das
or
pop
(bad)
mov
or
test
push
sub
into
enter
lods
inc
mov
shr
push
cmp
popf
fbld
mov
data16
(bad)
bound
and
add
scas
pop
pusha
xchg
retf
add
dec
mov
or
ret
jbe
cmp
(bad)
(bad)
jno
rcr
and
mov
fdivr
call
jmp
sbb
sbb
pop
or
mov
ja
sub
arpl
sub
aam
inc
das
fmul
popf
ja
or
sub
pop
or
nop
add
mov
test
jg
push
pop
push
clc
cli
fwait
scas
push
sub
mov
imul
sub
or
pop
int3
cs
mov
mov
cmp
ror
rol
cli
outs
movs
addr16
out
xchg
xor
add
inc
ja
fs
pop
(bad)
mov
gs
add
ret
mov
inc
dec
ficom
ret
push
jmp
ss
(bad)
fwait
sar
daa
ins
sub
in
(bad)
mov
cld
iret
bound
xor
xchg
ds
test
lods
jo
test
xor
adc
add
loop
lahf
xor
iret
sub
es
pushf
mov
fwait
cli
imul
mov
dec
sbb
fwait
add
in
(bad)
ror
jg
cmps
shl
jmp
jg
test
mov
jae
out
adc
enter
sub
xlat
je
sub
das
ss
retf
add
inc
aam
into
or
inc
out
xchg
pop
mov
gs
ret
addr16
push
inc
cmp
cwde
pushf
sub
es
fstp
call
test
sbb
repz
mov
mov
jbe
or
inc
mov
add
sbb
mov
jns
mov
add
xchg
rcr
out
inc
xchg
daa
jno
addr16
push
mov
sti
js
out
push
mov
mov
jl
sub
and
rcr
fstp
div
and
dec
sub
dec
and
jp
cmps
mov
cmps
pop
popf
xor
repz
in
mov
rol
ret
inc
sbb
adc
mov
ret
sti
nop
adc
sbb
mov
pop
inc
add
push
hlt
mov
add
lock
mov
into
imul
fidivr
and
inc
and
dec
pop
test
dec
push
je
pop
cld
inc
xchg
lds
jg
pop
mov
pand
cmp
push
push
cmovp
icebp
fsubr
jge
fucomip
pop
inc
scas
mov
push
out
adc
call
sbb
add
mov
call
cmp
mov
inc
jmp
xchg
sbb
xchg
mov
mov
out
les
std
mov
mov
pop
ror
in
aaa
cmp
sbb
addr16
mov
inc
push
add
or
cdq
jl
add
dec
hlt
inc
xor
adc
(bad)
adc
pop
sbb
add
fwait
pop
addr16
cs
into
push
xlat
out
(bad)
xor
test
lods
cmp
push
mov
(bad)
ffree
push
xchg
jnp
popa
add
jns
enter
push
in
inc
(bad)
or
imul
sbb
xlat
iret
test
xor
push
shl
adc
inc
mov
(bad)
hlt
xor
jp
fidivr
push
mov
mov
ja
push
lods
inc
push
loop
fdivrp
xchg
sub
inc
pop
mov
add
jp
imul
jl
rcr
pop
cdq
repz
iret
repnz
ja
xchg
inc
daa
jne
stos
test
jle
imul
sti
pop
inc
test
call
cmc
cmp
pop
add
pop
int
sbb
adc
stc
cmp
aas
push
(bad)
jmp
cmp
retf
test
scas
push
cmps
pop
xor
and
js
popf
jmp
add
jp
retf
fld
xchg
sub
push
mov
and
sbb
mov
fld
cmps
xchg
pop
jp
cmc
add
lea
push
addr16
nop
jmp
aaa
fwait
data16
test
xchg
ret
mov
pusha
pop
cmp
add
pop
gs
or
mov
inc
iret
out
jp
in
add
ss
cmp
xor
fstp
pop
xchg
dec
and
sub
test
and
arpl
shr
stos
cli
xor
and
and
cli
dec
inc
mov
mov
retf
sbb
push
movs
mov
or
jbe
mov
mov
ds
in
dec
icebp
jl
mov
adc
(bad)
mov
mov
les
pop
popf
pop
mov
sub
mov
scas
neg
jmp
inc
out
icebp
cld
(bad)
xchg
test
mov
jbe
cmp
jp
jl
inc
outs
mov
(bad)
mov
in
imul
xchg
jecxz
inc
pop
cli
mov
mov
aaa
cmps
out
sub
cwde
cmp
pop
and
push
stos
dec
or
push
psrlq
(bad)
xor
pop
int3
adc
loope
lods
clc
pusha
dec
push
sti
cmp
sub
icebp
and
mov
nop
dec
ss
or
push
cmp
mov
daa
es
pop
pop
inc
lds
pop
ds
pop
sub
call
mov
xchg
xchg
pop
xor
cwde
sub
jmp
cld
stos
sar
sbb
not
sub
(bad)
and
out
jae
mov
cmc
aas
(bad)
aaa
mov
(bad)
out
lock
inc
loop
out
or
mov
xor
adc
loopne
xor
jno
push
les
ja
xchg
cli
out
outs
dec
mov
or
loope
rcr
or
shl
cmps
mov
mov
sti
add
int3
jmp
jecxz
aas
mov
xchg
ror
cwde
addr16
xlat
ss
addr16
sbb
inc
mov
addr16
ret
mov
jno
jg
das
inc
(bad)
mov
retf
mov
jae
repnz
mov
jle
dec
add
lahf
stos
fcomp
xor
push
xchg
pop
clc
dec
mov
cmp
ror
jne
or
ins
inc
mov
jnp
das
sub
lds
sbb
xchg
je
xchg
imul
pop
mov
adc
pop
popf
inc
into
outs
mov
push
mov
pop
add
out
in
or
daa
dec
sbb
sbb
inc
inc
popf
cmp
adc
mov
mov
mov
and
and
xchg
mov
xlat
xor
mov
sbb
jecxz
xor
test
test
popf
adc
xor
push
les
cmps
nop
sub
pop
push
cmp
adc
call
fsubr
inc
sbb
xchg
test
(bad)
jmp
les
cwde
ins
ret
iret
push
clc
out
mov
test
adc
cdq
cmp
push
jns
cmp
pop
adc
enter
push
jnp
xchg
loop
push
dec
lahf
pop
mov
xchg
int
pusha
popf
mov
sar
dec
jnp
scas
mov
xlat
shl
in
imul
dec
xchg
pop
pop
add
dec
cmps
adc
callw
fsub
retf
sub
cmp
aam
adc
jnp
dec
cmp
xor
inc
fisttp
xchg
xor
out
sub
push
jns
dec
cdq
imul
mov
adc
test
lds
xchg
jo
jmp
jbe
add
or
jge
call
cmovo
popw
adc
test
es
and
sbb
cmp
in
xor
cdq
xchg
or
(bad)
ror
inc
popf
mov
movs
(bad)
iret
scas
and
sbb
mov
test
sbb
clc
jb
ins
imul
mov
lods
cmc
dec
inc
xor
pop
xchg
cdq
jge
push
loopne
sbb
mov
adc
xchg
les
test
sub
bnd
stos
lahf
push
loopne
or
sti
mov
pop
cmp
rol
mov
aad
xchg
sahf
bound
in
sbb
cmp
sahf
inc
mov
jo
sub
cs
(bad)
sub
mov
cmp
das
jl
jmp
mov
rol
inc
lods
xlat
mov
movs
jae
dec
mov
cwde
pop
sbb
fcom
pop
sti
jns
lods
xchg
loop
mov
inc
sbb
or
pop
xor
dec
ja
in
and
imul
loope
in
je
loopne
sub
cdq
das
repnz
jmp
pop
shl
mov
fisub
adc
xchg
cmps
push
test
popf
xchg
inc
pop
inc
adc
stos
cld
push
xor
out
fsubr
clc
pop
mov
subps
cmps
(bad)
mov
mov
mov
pop
and
dec
adc
jmp
cmp
pop
(bad)
int
mov
or
scas
lds
adc
adc
ins
jae
arpl
lods
push
sbb
jmp
fsubp
mov
xchg
hlt
pushf
cmp
and
push
fisub
sub
imul
out
(bad)
xor
fs
sbb
loope
xchg
xchg
xor
jnp
inc
or
sub
jbe
cmp
(bad)
pop
sub
and
fwait
push
clc
xlat
int3
xor
stos
cmp
jb
pop
sub
pop
daa
or
mov
or
aam
repz
and
outs
test
adc
mov
inc
ret
scas
fiadd
gs
xor
lods
fwait
mul
add
adc
call
test
cmps
cwde
mov
out
pop
mov
ss
movs
jmp
xchg
inc
fs
mov
push
test
outs
inc
loopne
jmp
call
jb
pop
and
sbb
mov
mov
cmp
mov
inc
xor
aas
dec
call
int
mov
cmps
(bad)
mov
in
fcom
add
push
lea
push
jecxz
pop
scas
mov
xor
push
sar
outs
inc
movs
pop
clc
cwde
xor
jmp
jb
add
adc
pusha
jo
(bad)
push
cmps
das
ret
pusha
es
mov
mov
xor
(bad)
outs
jmp
jge
sub
fucomi
jg
inc
das
mov
inc
fdivr
and
repnz
movs
ins
push
les
sbb
sbb
pop
lods
mov
ins
add
pop
ds
rol
jae
lea
mov
sbb
push
outs
xor
pop
or
cwde
ins
xchg
mov
or
or
jl
sub
fucomp
dec
jp
out
pop
(bad)
jg
int3
sar
clc
cs
push
inc
movs
cmp
add
sti
mov
push
fdiv
fidiv
xchg
add
ins
ret
mov
leave
mov
adc
pop
cs
sub
cli
scas
int3
mov
mov
in
adc
inc
pop
mov
test
mov
pop
pop
fmul
imul
test
ficomp
jbe
sbb
frstor
jmp
repnz
js
stc
push
mov
jg
dec
sub
dec
rcl
cld
out
adc
sti
mov
jp
mov
mov
out
pop
or
inc
inc
and
je
inc
movs
or
inc
js
gs
(bad)
out
dec
int
jb
inc
fidiv
or
rcr
mov
jo
push
cwde
hlt
cdq
mov
push
pop
aas
cmp
sti
or
aas
(bad)
mov
mov
cmp
out
add
and
adc
xchg
mov
cmps
jp
jp
lds
repnz
fiadd
cli
rol
fisub
fldpi
xchg
add
mov
rcl
lea
(bad)
gs
(bad)
push
cmp
xchg
jmp
push
mov
sar
inc
jle
aaa
sub
pop
and
xchg
dec
push
nop
mov
(bad)
pop
or
jo
out
mov
outs
cs
fisubr
cmps
pop
mov
dec
out
sbb
sbb
jg
mov
pop
jno
rol
or
fsubr
xchg
xor
cmp
push
repnz
pop
xchg
clc
pop
aaa
cmp
icebp
add
mov
inc
(bad)
jge
sbb
pop
in
push
cmp
cwd
mov
inc
sti
xor
jle
sub
mov
jo
rol
mov
sub
dec
cli
mov
lock
js
xlat
scas
jno
cmps
inc
inc
retf
arpl
les
cmp
adc
fs
fmul
dec
(bad)
repz
mov
jno
or
cs
xchg
mov
fwait
mov
mov
out
jmp
fcom
fldenv
pop
inc
lock
mov
movs
push
xor
test
sub
test
xor
popf
adc
(bad)
(bad)
jge
test
ret
mov
sbb
iret
or
call
add
add
inc
xchg
fsubr
or
in
pushf
leave
enter
retf
cdq
push
mov
pop
or
push
pop
jmp
xor
ins
push
cmp
cwde
push
(bad)
aaa
(bad)
adc
cmps
pop
sbb
test
and
and
xchg
fadd
jge
pop
mov
push
(bad)
jns
mov
mov
mov
xor
jmp
js
jp
fwait
inc
and
data16
fs
rcr
lahf
add
mov
ret
push
ror
pushf
jae
ret
leave
adc
cmp
xchg
cmp
test
das
xchg
int3
mov
mov
adc
(bad)
mov
stos
push
and
xor
jb
popf
bound
(bad)
xchg
call
mov
push
sub
sub
(bad)
(bad)
test
cmp
mov
inc
jae
cmps
ror
inc
cld
icebp
sbb
mov
adc
arpl
jae
les
loope
sti
mov
js
cld
popf
xchg
int3
xor
jne
cwde
nop
icebp
mov
ret
inc
test
pop
or
in
pop
dec
js
inc
mov
mov
adc
adc
(bad)
xchg
(bad)
dec
sar
cld
xor
call
add
test
inc
ss
inc
arpl
(bad)
test
outs
push
pop
inc
cmp
push
fild
fistp
aas
inc
cmp
or
repnz
mov
cli
jo
mov
jbe
jnp
imul
pop
pop
repnz
mov
xchg
sbb
xchg
sahf
sbb
and
(bad)
fdiv
fidiv
xchg
ret
and
call
in
mov
sub
push
xchg
ror
cmp
mov
in
inc
int3
repz
add
cld
jmpw
mov
out
(bad)
in
dec
out
mov
jnp
sti
mov
out
jmp
ins
mov
push
jns
fisttp
rcr
in
xchg
(bad)
adc
arpl
inc
out
dec
add
and
mov
test
stc
ss
push
stc
push
jg
inc
pop
dec
aad
dec
fldenv
daa
(bad)
dec
test
shl
push
daa
je
inc
(bad)
sahf
pop
or
repnz
mov
arpl
xor
jbe
mov
pusha
add
mov
mov
iret
pop
cmps
out
pop
xchg
push
mov
aad
mov
jl
sub
mov
adc
ss
addr16
push
mov
repnz
xchg
inc
inc
imul
pop
push
fwait
js
into
ds
in
jnp
push
out
mov
arpl
push
and
mov
push
aam
icebp
out
pop
scas
pushf
retf
adc
mov
add
out
enter
mov
cld
cwde
mov
push
mov
xchg
icebp
mov
xor
pop
(bad)
out
int3
add
outs
stc
sub
jnp
pop
jbe
sub
lea
inc
ss
cmp
aaa
push
bound
xor
pop
hlt
inc
ret
or
ret
xchg
jle
adc
xor
(bad)
push
sbb
je
cmp
sar
fwait
rcr
pop
test
pop
add
lahf
jle
lock
push
dec
push
mov
xor
mov
repnz
movs
adc
fidiv
pop
nop
push
enter
inc
cdq
jnp
out
minps
scas
pop
js
rcr
xchg
lods
arpl
nop
mov
fdivr
test
inc
vmread
mov
test
pop
movs
popf
sbb
adc
pusha
adc
add
xchg
push
xchg
jmp
std
adc
cmp
stos
test
sub
sub
sti
push
adc
(bad)
(bad)
mov
jo
cmp
sub
sahf
aaa
add
inc
ins
arpl
xchg
inc
xchg
inc
cs
addr16
mov
cs
out
outs
push
fwait
pop
es
mov
mov
out
add
add
sbb
jp
(bad)
fst
sbb
aas
add
in
jne
cmp
punpckhwd
and
jnp
test
(bad)
mov
adc
(bad)
sub
add
retf
jae
jg
outs
and
cli
xchg
pop
mov
in
mov
jmp
lods
xor
jb
dec
cmp
clc
je
jp
xor
sti
add
ret
sub
into
stos
std
xor
inc
mov
repnz
ins
aas
push
iret
or
mov
mov
aas
push
push
mov
mov
mov
push
in
and
int3
vaddps
imul
fst
sub
mov
movs
jg
sar
pop
dec
in
sbb
call
dec
cld
pop
jbe
jns
es
in
sbb
sbb
movs
push
lock
leave
iret
stos
and
jg
test
jmp
and
frstor
mov
cmp
test
rcl
push
lods
loope
mov
xchg
xor
mov
xchg
rcr
addr16
jg
xchg
fwait
call
rcl
dec
mov
mov
retf
or
mov
mov
push
(bad)
fadd
int3
stc
pop
add
iret
xor
and
or
sbb
mov
push
pop
add
xchg
out
add
(bad)
(bad)
pusha
cmp
or
iret
(bad)
xor
push
push
pop
lock
inc
ds
xchg
jmp
(bad)
jmp
(bad)
mov
das
jecxz
es
and
mov
inc
iret
mov
xlat
mov
cmc
jg
or
mov
push
lds
shr
lods
xchg
jbe
fistp
je
movs
mov
mov
data16
rol
arpl
and
xchg
or
dec
jmp
jecxz
push
mov
push
in
mov
js
dec
scas
or
cmp
pop
mov
shl
add
push
sub
mov
fs
in
iret
push
nop
cld
jp
jns
movs
popf
jbe
fisttp
mul
je
pop
in
xchg
xor
mov
mov
ror
in
aam
adc
and
sbb
clc
(bad)
in
out
enter
jle
push
mov
cmp
mov
lahf
cmp
jge
mov
pop
cmp
fwait
push
into
mov
(bad)
lds
adc
in
adc
push
loopne
add
icebp
mov
sub
gs
cmp
mov
pop
(bad)
push
mov
popf
adc
xor
mov
jp
js
jle
jnp
xchg
daa
cli
adc
pop
mov
add
popa
test
adc
cmp
scas
jge
hlt
cpuid
add
cmp
xchg
(bad)
mov
and
shr
sub
sbb
fisub
ds
into
adc
and
(bad)
sub
jb
imul
xchg
mov
ins
movs
mov
mov
sbb
daa
fcom
out
mov
aad
loope
loop
adc
sub
push
out
loopne
pop
jnp
test
sub
jmp
or
mov
add
test
les
fbstp
adc
inc
mov
cli
cmc
aad
hlt
cmc
and
or
pop
fwait
js
cmps
shl
mov
xlat
aas
xor
pop
repnz
sub
mov
bound
movs
sbb
add
fbld
xchg
dec
xchg
out
mov
cmps
or
add
inc
shl
sub
xor
and
lea
xor
dec
xor
push
or
das
(bad)
dec
std
cwde
adc
push
movs
xor
pop
loopne
xchg
add
outs
xchg
and
xchg
add
cmp
mov
scas
dec
lods
or
test
nop
fnstcw
add
fistp
out
out
in
or
shl
lahf
mov
sub
dec
paddq
stos
je
popf
stos
mov
in
xchg
lea
mov
fisub
repz
jnp
push
xchg
scas
call
push
popa
jmp
sar
iret
pop
inc
jo
mov
mov
mov
daa
test
movs
mov
xchg
cmp
sbb
inc
dec
rcr
mov
movs
sar
sahf
cmps
into
inc
call
xchg
loop
out
pop
mov
cmp
icebp
je
enter
xchg
mov
and
(bad)
repnz
push
pushf
xchg
in
loope
shl
aas
adc
push
push
popa
sar
test
scas
pop
test
aaa
jl
rol
lahf
mov
mov
stos
in
lods
inc
cmc
dec
push
enter
stc
(bad)
cmp
addr16
aad
mov
cmp
imul
mov
jo
mov
adc
and
js
movs
(bad)
ret
pop
push
in
cmp
xor
enter
sti
jl
pop
popa
adc
ds
rol
outs
adc
int
in
xor
aad
xor
xchg
push
fwait
fs
push
jmp
sub
sub
aaa
aad
mov
push
push
shr
loopne
lock
out
lds
add
bswap
dec
inc
cmp
movs
ret
push
aas
ins
outs
sahf
mov
and
sbb
cmc
and
add
hlt
dec
push
jg
in
push
mov
cmps
loop
mov
push
into
hlt
je
and
in
inc
pop
dec
ds
push
mov
push
sti
popa
lea
xchg
jg
arpl
sub
cmc
out
mov
in
adc
mov
sub
inc
les
xchg
(bad)
xchg
movs
jmp
jmp
fdivp
jo
out
inc
fdiv
lds
stc
fiadd
dec
push
mov
mov
(bad)
push
aaa
shl
hlt
dec
mov
(bad)
adc
popf
sbb
cmp
idiv
hlt
xlat
leave
ss
sub
dec
fsubr
loop
outs
dec
adc
add
stc
mov
popf
frstor
fdivr
add
sbb
and
adc
popf
inc
mov
dec
inc
movs
sbb
and
cmp
pop
(bad)
mov
fsub
repz
sub
dec
jg
ins
and
mov
daa
push
in
scas
and
fdivr
dec
je
pop
imul
sub
imul
lods
pop
adc
sub
in
or
pushf
inc
lods
les
mov
je
outs
(bad)
into
mov
repnz
pushf
inc
fldcw
dec
addr16
push
sub
mov
cmp
mov
push
add
in
cmp
sti
mov
jge
or
icebp
loopne
adc
push
mov
push
lea
loopne
movs
mov
sbb
pusha
in
icebp
and
test
cwde
pop
pop
dec
inc
pop
js
mov
lea
push
ss
push
xor
movs
adc
ins
xchg
cmp
iret
add
lea
jp
fprem1
mov
sub
test
push
xor
fdivrp
jmp
mov
push
push
lea
dec
mov
in
fdivr
jge
call
(bad)
mov
cmps
sub
xor
stos
scas
out
test
jnp
arpl
(bad)
loop
push
not
or
pop
xchg
xor
test
mov
or
int3
lds
dec
mov
xchg
push
inc
popa
call
nop
aam
sti
imul
pop
les
or
aam
mov
inc
aas
lods
outs
loope
and
dec
mov
outs
mov
cmp
mov
jns
pop
pop
ins
jge
aaa
inc
mov
fs
add
out
jle
call
daa
scas
xlat
mov
or
enter
dec
in
shr
shr
lahf
and
jbe
scas
inc
sahf
aad
xor
jg
and
mov
dec
out
ds
dec
or
vmovlps
inc
hlt
shr
mov
in
dec
int
std
and
retf
js
loopne
leave
movs
imul
cdq
pop
push
loope
mov
mov
dec
sub
test
sar
mov
test
jl
loopne
push
(bad)
mov
add
jnp
out
lods
push
mov
cli
nop
sub
xchg
rol
push
or
dec
scas
test
add
stc
popf
pop
mov
aas
lds
ja
add
ror
pop
jmp
dec
les
sbb
cmp
and
stos
pop
xor
aam
fisub
pop
fwait
mov
mov
(bad)
push
jb
jg
sub
xchg
in
cs
lock
pop
pop
das
cmp
xor
scas
mov
lahf
mov
sbb
pushf
pop
ss
pushf
cmp
dec
sahf
repnz
pop
mov
jno
pop
add
push
adc
aam
xchg
pop
sub
gs
stos
int
scas
aaa
cmc
sbb
out
or
rcr
je
mov
(bad)
sub
pop
inc
fimul
stos
repz
sbb
jge
mov
fs
mov
lock
outs
dec
push
pop
sbb
fwait
test
fnsave
pop
add
dec
xor
stos
push
pop
cmp
xchg
pop
xor
xchg
mov
outs
inc
rol
outs
out
(bad)
mov
jns
outs
stc
(bad)
cmp
imul
gs
xchg
sti
popa
scas
and
sub
lods
fcmovnb
arpl
stos
pop
stos
cs
call
adc
cmp
pop
movs
cmp
out
cmp
rol
sub
and
or
mov
ss
xor
dec
mov
jnp
imul
jae
mov
int3
and
inc
gs
adc
std
sbb
pop
fmul
div
sub
mov
or
and
jbe
sti
in
dec
in
out
mov
mov
inc
mov
sbb
in
pop
dec
mov
fstp
or
mov
jae
adc
mov
cdq
mov
sahf
mov
jmp
cmp
pop
adc
stos
and
aad
enter
push
je
pop
mov
pop
sub
add
sub
test
or
inc
movs
call
mov
jmp
mov
cmp
push
add
popf
sub
mov
mov
repnz
fistp
add
cmp
push
addr16
out
mov
push
inc
clc
sub
cld
mov
(bad)
cmp
push
out
js
aam
out
pop
and
jno
or
xchg
inc
mov
nop
jo
mov
dec
push
sbb
ror
dec
call
sar
mov
ret
(bad)
out
mov
dec
jns
push
add
mov
stc
jp
iret
pop
xchg
cmp
int3
rol
movs
pop
in
and
jbe
(bad)
aad
adc
add
push
jbe
call
jbe
lock
mov
adc
(bad)
in
cs
int3
(bad)
(bad)
sbb
je
push
adc
inc
push
jae
(bad)
in
mov
xor
(bad)
and
fistp
add
xor
dec
out
out
cwde
push
int3
push
dec
mov
call
sub
cs
loope
cdq
and
mov
aam
std
imul
sub
jo
loopne
int3
push
mov
cmp
in
repnz
or
outs
inc
popf
push
mov
aam
test
mul
stc
(bad)
mov
sub
std
add
mov
cmc
das
dec
and
loope
arpl
jmp
push
pop
fcom
lahf
js
lock
xor
push
mov
adc
call
dec
inc
push
mov
xor
mov
retf
ds
rol
sbb
repz
pop
std
and
push
in
sti
jne
pop
sub
inc
mov
pop
lds
aaa
push
or
mov
mov
sbb
mov
xor
mov
bound
repnz
in
mov
ds
xor
(bad)
(bad)
or
adc
hlt
adc
sahf
cs
rcl
or
and
fs
and
cmp
push
and
ins
xchg
and
push
add
mov
mov
jmp
or
clc
jbe
leave
aaa
retf
pop
lahf
cmp
mov
sub
daa
cmp
push
(bad)
pop
call
sub
cwde
xor
mov
fdiv
jle
mov
add
inc
stos
or
sti
jecxz
cld
inc
(bad)
jae
into
cmp
repnz
stc
mov
fdivr
dec
pop
or
xor
dec
and
mov
push
add
or
inc
into
je
and
xchg
ins
je
or
and
ss
ss
or
gs
in
add
lea
adc
ss
(bad)
or
jnp
and
mov
movs
sbb
push
in
adc
fs
push
add
(bad)
jmp
stos
xchg
xor
std
mov
icebp
adc
pop
lea
(bad)
call
ds
push
(bad)
es
and
std
ja
push
jne
inc
mov
xchg
mov
stos
mov
in
dec
gs
loop
aas
ret
pusha
inc
div
cmp
mov
jmp
and
inc
cmp
sbb
dec
cmps
pop
popa
mov
mov
outs
inc
repnz
imul
mov
pop
and
sahf
jmp
jp
out
movs
ins
or
push
jecxz
inc
fcom
xchg
xor
push
xchg
cmp
sub
adc
addr16
sub
pushf
scas
push
out
mov
inc
pop
nop
add
cmp
sbb
xchg
xchg
mov
jmp
jns
divps
push
(bad)
cmps
mov
aas
push
and
push
sbb
addr16
inc
movs
cdq
mov
push
xor
repz
(bad)
cdq
cmp
dec
out
xchg
mov
sti
lock
inc
cmc
inc
ins
test
imul
or
in
xor
mov
lahf
enter
lods
jns
test
mov
daa
and
and
ror
mov
mov
jle
or
xor
pop
add
test
scas
mov
jb
jle
push
or
movs
jle
movs
cld
mov
adc
push
add
bound
mov
dec
push
lods
(bad)
fmulp
cmp
(bad)
arpl
mov
mov
adc
popf
out
out
ret
jp
fbstp
cld
ror
push
adc
sbb
loopne
add
jbe
mov
xor
sbb
pop
ret
adc
pop
inc
arpl
popa
mov
aaa
pop
or
ret
pop
and
(bad)
push
cmps
les
push
retf
std
call
push
xor
xor
pop
adc
das
sbb
fidiv
in
dec
dec
pop
es
mov
pop
sbb
mov
cs
inc
pop
add
jnp
lock
mov
add
mov
pop
test
pop
mov
pop
adc
cli
sbb
test
pop
pop
popa
jmp
int3
xchg
xor
ds
jmp
xor
xchg
dec
add
mov
mov
inc
mov
fwait
jmp
jne
and
out
sub
call
cwde
ss
lds
adc
mov
fistp
stos
add
inc
out
lock
xor
xchg
retf
push
or
adc
pop
pop
mov
(bad)
pop
sbb
xchg
(bad)
je
push
sbb
sahf
into
sub
lods
repz
xchg
fs
or
fwait
add
and
or
xchg
into
ret
rcl
jmp
out
scas
mov
sbb
test
jno
movs
and
jo
jnp
xchg
jge
or
and
inc
sub
fdivrp
and
cmp
inc
jmp
jo
lds
pusha
add
(bad)
cmps
or
repnz
xor
add
inc
lahf
dec
sti
and
dec
add
call
in
imul
mov
gs
and
mov
movs
push
sub
sbb
mov
mov
inc
ja
fwait
mov
out
mov
push
jmp
out
cwde
retf
lds
les
test
mov
movs
and
js
sbb
pop
or
arpl
es
and
jmp
sub
aam
and
push
mov
rcl
sub
lock
call
(bad)
mov
imul
lea
pop
or
(bad)
jno
out
fmul
ret
mov
inc
cmp
dec
push
sub
stos
pop
dec
retf
push
cmp
fisubr
rol
(bad)
adc
push
or
adc
xchg
adc
pop
sbb
loopne
inc
jp
clc
dec
das
outs
in
(bad)
dec
fwait
mov
mov
fcomp
fiadd
mov
(bad)
or
jp
xchg
mov
pmaddwd
repz
sbb
adc
jl
add
sbb
test
mov
test
fnstenv
inc
dec
in
test
mov
jb
clc
mov
cmp
arpl
sbb
cmp
icebp
or
dec
scas
retf
fisttp
mov
retf
sub
xchg
mov
pop
aad
iret
sbb
(bad)
push
fs
js
jmp
lods
add
sub
aaa
sbb
sbb
mov
lods
push
(bad)
aam
popf
ja
jmp
lahf
lock
jle
rcr
add
call
push
loop
pop
mov
xor
mov
les
dec
push
jmp
and
test
add
fwait
sbb
fstp
retf
mov
push
ins
fidiv
add
test
sub
popf
(bad)
jmp
push
mov
jmp
add
fs
mov
(bad)
repz
shl
adc
sub
xor
cmc
pop
inc
xor
or
xor
sbb
xor
jb
retf
inc
cmp
sub
pop
xchg
push
inc
cmp
sub
sub
sbb
push
jge
imul
es
in
leave
hlt
std
or
cmps
rol
fcom
inc
dec
mov
and
sub
push
outs
sahf
xor
sar
imul
adc
(bad)
mov
pop
add
jbe
stc
xor
sbb
xor
adc
pop
mov
or
xor
inc
fmulp
and
pop
mov
jo
loop
lods
outs
xor
in
add
out
and
xchg
add
ja
cwde
(bad)
aas
mov
cmp
add
jmp
lds
add
pop
jne
xchg
ss
pop
das
sub
cmp
mov
push
cli
std
and
in
mov
pop
gs
leave
push
je
leave
pop
push
pop
rol
(bad)
lea
sub
fcmovb
int3
enter
rcl
sti
sbb
or
xchg
inc
jo
adc
out
adc
js
mov
std
xor
dec
adc
xlat
sub
fiadd
bnd
fisubr
(bad)
movs
iret
pop
cmp
test
mov
push
xor
cs
jne
dec
out
(bad)
xchg
mov
mov
lock
dec
push
mov
int3
dec
inc
popa
cli
and
shl
add
call
js
mov
xor
bound
xor
push
inc
adc
es
fdivr
in
add
scas
or
out
or
jle
cwde
iret
imul
fsub
call
retf
ds
les
ins
daa
mov
jo
fistp
sbb
clc
scas
mov
cmp
and
js
sub
int3
aas
mov
jg
push
cld
(bad)
mov
mov
je
inc
leave
jnp
ss
and
popf
add
inc
es
and
pop
out
fstp
xchg
and
inc
cmps
xor
push
retf
jno
leave
mov
scas
enter
sub
jb
jb
inc
xor
(bad)
ins
je
(bad)
lods
adc
jmp
push
sub
xchg
(bad)
loopne
aam
cmps
pop
adc
pop
mov
mov
fistp
out
outs
adc
mov
data16
sbb
mov
xchg
shl
lock
jle
aas
cdq
loopne
push
adc
pop
jno
out
sti
ret
outs
jmp
sbb
push
mov
rol
imul
mov
mov
mov
out
adc
mov
mov
in
xlat
dec
xor
adc
xchg
or
(bad)
enter
adc
pop
into
(bad)
adc
and
push
or
fldcw
popa
mov
xor
shl
js
out
sbb
adc
jg
cmps
push
add
mov
xchg
or
mov
mov
(bad)
push
jmp
not
cmp
add
jmp
mov
adc
xor
pusha
out
leave
stc
int3
lods
push
or
push
dec
sahf
xchg
cmp
mov
xor
mov
(bad)
hlt
cmp
inc
push
cli
test
call
sti
daa
push
inc
popa
mov
mov
push
jg
sub
mov
ds
stos
fistp
cmps
test
call
or
sbb
cli
sub
inc
adc
sar
outs
sbb
inc
add
xor
dec
ror
jnp
mov
retf
fsubr
mov
xor
mov
adc
cs
xor
(bad)
ja
fwait
mov
pop
aad
rol
jns
mov
rol
popf
movs
xchg
icebp
lahf
js
dec
loop
in
int3
lods
cmp
push
lds
out
xchg
ror
leave
ds
aad
push
das
push
cmps
mov
push
test
jns
cmps
mov
inc
rcr
(bad)
retf
std
mov
inc
add
dec
aas
(bad)
sub
cli
retf
sar
fld
retf
push
xchg
test
pop
push
or
inc
movs
mov
mov
xchg
shr
push
and
mov
mov
xor
mov
fisub
jb
(bad)
call
dec
xor
or
push
push
stos
jo
sar
dec
cmp
je
cmps
mov
pop
js
xlat
inc
push
ret
add
jns
push
packsswb
mov
leave
imul
jo
mov
xor
xor
(bad)
(bad)
outs
lahf
ret
sub
cmps
push
adc
mov
cmps
xor
push
fstp
mov
adc
sbb
(bad)
pop
pop
add
dec
shr
push
lods
pusha
cmp
push
shr
mov
mov
daa
push
xchg
mov
test
sub
ins
adc
sub
in
cli
(bad)
mov
(bad)
out
push
aad
pusha
repnz
push
(bad)
(bad)
push
mov
pop
mov
(bad)
int3
cmp
add
ins
mov
or
cmp
xchg
aas
jecxz
imul
sbb
loope
loope
and
scas
push
mov
int3
or
(bad)
leave
or
ret
sahf
mov
jp
jno
pop
or
(bad)
iret
mov
out
cmp
stos
ret
cmp
mov
add
imul
fldenv
dec
jg
or
loop
fs
push
cmp
mov
movsx
push
lds
mov
data16
fldcw
lds
lea
adc
cmps
out
mov
mov
adc
jmp
inc
push
sbb
fs
push
add
lea
inc
loope
pop
(bad)
xchg
add
loope
test
pop
sub
jle
int3
imul
call
ror
and
cmp
out
pop
jl
mov
jbe
and
mov
dec
jge
mov
push
push
sub
mov
in
push
push
movs
pop
pusha
fcomp
add
push
cmp
iret
push
sahf
mov
rol
mov
das
mov
mov
and
mov
call
dec
xchg
gs
ja
test
mov
int3
mov
lahf
sbb
cmp
mov
pusha
push
imul
(bad)
xor
push
inc
xchg
mov
adc
push
xchg
pop
stc
cli
push
(bad)
test
mov
add
mov
adc
int3
ins
push
(bad)
push
dec
mov
stos
dec
(bad)
cmps
inc
fst
xchg
mov
jnp
into
lods
icebp
iret
scas
pop
nop
das
lock
adc
sub
dec
cmp
fcomp
out
jns
loopne
sub
test
ins
inc
cdq
xor
stos
jg
rcl
push
ja
into
mov
(bad)
cmc
mov
and
adc
or
mov
jnp
pop
mov
xor
mov
sbb
in
std
mov
cmc
gs
pushf
sbb
xor
leave
inc
or
out
mov
mov
xchg
or
add
jnp
sbb
mov
adc
movs
push
inc
inc
pop
daa
mov
shr
dec
dec
mov
sub
pop
ds
adc
imul
xchg
lods
pop
mov
push
jb
cwde
jle
mov
sbb
cmps
cmp
iret
imul
push
into
cld
cmps
jle
jp
mov
pop
imul
and
push
dec
mov
xchg
fistp
cmps
lea
dec
int
(bad)
sub
movs
push
mov
scas
pop
jge
inc
or
clc
arpl
int
jecxz
pop
fidivr
sbb
(bad)
in
dec
scas
int
sub
lods
pop
sbb
mov
or
fstp
aam
cmp
lea
in
mov
in
lock
dec
and
fsubr
cmp
daa
cmps
test
je
xchg
call
dec
lock
lods
push
(bad)
cld
cmp
xor
push
cmp
iret
and
sbb
dec
imul
sbb
stos
sub
cmp
imul
pusha
push
(bad)
(bad)
fisub
cmps
dec
pop
mov
adc
adc
jge
lds
into
aaa
add
ficomp
mov
cmps
ret
bound
stos
cs
sbb
leave
pop
pop
mov
xlat
pop
pop
retf
push
sub
dec
xchg
cs
sar
ficomp
jecxz
and
jg
ins
lods
(bad)
fucomi
jnp
lds
div
xor
jb
stc
jg
mov
div
ret
repnz
push
sub
test
dec
out
dec
jle
adc
add
mov
cmc
sti
call
mov
popa
(bad)
or
inc
mov
test
cwde
and
inc
int
hlt
(bad)
aam
es
imul
mov
sub
cmp
push
faddp
and
mov
adc
adc
pushf
push
sbb
mov
shl
dec
xchg
pop
cs
dec
dec
repnz
mov
inc
jg
sti
mov
sub
dec
sahf
call
test
fwait
push
dec
or
xlat
in
ror
loope
imul
pop
inc
push
(bad)
mov
(bad)
xor
mov
cwde
scas
push
add
dec
mov
and
stc
sti
(bad)
push
js
enter
lods
iret
lock
add
fldenv
jae
add
fimul
xchg
mov
sbb
pop
(bad)
adc
mov
push
ret
add
adc
ds
into
fwait
inc
sub
arpl
inc
push
adc
xor
xchg
add
mov
pop
test
inc
mov
push
jnp
push
outs
xor
jns
mov
and
and
inc
out
leave
mov
int
adc
and
pop
pop
sub
inc
pop
sub
mov
ins
cmps
jecxz
xchg
dec
lods
lahf
std
mov
popa
xor
ins
mul
aam
xchg
add
pushf
sbb
scas
dec
movs
cmps
inc
and
call
push
imul
add
leave
mov
cmp
inc
pop
mov
or
pop
jle
mov
xor
scas
pop
push
int3
pop
push
adc
in
mov
ss
outs
xor
mov
push
lock
dec
xor
or
xchg
(bad)
dec
(bad)
cmp
lock
cmc
call
jb
or
in
inc
cmp
scas
ins
push
cmp
in
adc
ins
cmp
sbb
jns
adc
sub
cmp
jb
stos
hlt
outs
add
xor
mov
lock
jo
inc
shr
and
xor
lock
sbb
sub
mov
xor
lds
mov
xor
dec
pop
push
fsub
movs
jae
xchg
dec
(bad)
pop
jge
pop
dec
fnstcw
mov
mov
pop
sub
lock
mov
or
jmp
dec
shl
push
ss
pushf
repnz
sbb
int
in
ss
mov
inc
xor
mov
ret
(bad)
arpl
and
push
jns
xor
in
std
push
repnz
out
ds
loope
ins
scas
xchg
jb
les
fsubp
jbe
cmps
movs
idiv
out
cmp
add
push
xor
call
(bad)
into
stos
cmps
(bad)
push
nop
adc
dec
jmp
sbb
and
mov
jae
test
or
jae
scas
jl
(bad)
mov
push
shl
popa
enter
push
leave
cmps
dec
or
sbb
mov
sub
pusha
mov
js
push
sar
jg
loopne
mov
adc
popf
mov
inc
dec
(bad)
into
enter
rcr
jno
adc
inc
jmp
xchg
lods
ficomp
jg
push
cmp
pusha
stc
sub
ja
xchg
sahf
pop
sbb
or
aaa
aaa
and
mov
xor
dec
pop
sbb
rcr
lock
dec
xchg
xor
stos
aad
and
mov
or
fstp
or
dec
pop
jp
mov
iret
icebp
loope
push
cmc
adc
adc
sub
sub
ret
push
adc
mov
xlat
xor
mov
cwde
ins
fdiv
jmp
push
les
or
mov
xchg
mov
mov
mov
sbb
mov
sbb
icebp
in
lods
stos
leave
out
adc
out
sbb
out
call
jmp
mov
jle
cwde
or
xchg
lods
pop
jne
pop
jno
dec
(bad)
(bad)
xchg
xchg
xchg
aas
rcl
fs
cmp
nop
mov
fxch
mov
jge
mov
cli
inc
push
jo
repnz
scas
pusha
scas
jbe
(bad)
in
cmp
xchg
pop
jl
add
in
std
js
push
inc
ret
sub
hlt
adc
nop
loop
dec
daa
push
mov
mov
mov
sbb
js
mov
or
ror
imul
pop
test
inc
call
mov
add
movs
les
jbe
call
xor
pop
dec
sbb
add
dec
mov
pop
gs
(bad)
mov
mov
mov
xlat
cld
push
mov
sbb
dec
add
movs
add
imul
in
xchg
or
push
bound
or
dec
es
jecxz
mov
xor
push
jns
push
out
inc
add
sub
js
and
(bad)
ds
adc
push
mov
nop
es
(bad)
aas
add
mov
jp
push
retf
adc
in
(bad)
jo
test
int3
cdq
repnz
jle
pop
cmps
cmps
rcr
scas
xchg
or
fisubr
enter
mov
or
ffree
retf
pop
xor
nop
shr
addr16
mov
push
movs
xchg
mov
xchg
loope
retf
push
clc
mov
icebp
mov
repz
push
dec
xchg
mov
leave
add
lods
test
mov
mul
sbb
outs
xchg
(bad)
(bad)
or
xchg
push
mov
test
cmp
xchg
mov
push
aad
pop
into
repnz
(bad)
(bad)
fdiv
int
cld
adc
sbb
cmps
repz
fisubr
mov
cwde
je
jl
js
inc
or
adc
loop
xchg
std
iret
mov
dec
sbb
mov
sahf
into
push
call
test
jmp
(bad)
adc
out
push
or
cmps
adc
jl
mov
adc
test
repz
es
cmps
pop
add
dec
stos
ss
inc
jno
and
loope
dec
loop
add
add
out
lods
ss
outs
mov
js
movs
popf
cld
(bad)
rcl
and
and
lods
in
mov
add
(bad)
pop
add
mov
push
push
(bad)
in
(bad)
bound
pop
jno
into
cmp
xlat
popf
fsub
and
xlat
rol
or
out
dec
mov
das
ror
adc
fs
and
adc
inc
xor
jae
retf
aad
ret
or
sbb
test
loope
(bad)
neg
das
mov
enter
sbb
cmpps
test
dec
retf
sbb
cmp
xchg
cmp
and
jmp
or
cli
mov
repnz
(bad)
push
js
dec
sub
jb
xchg
js
ds
es
jp
stos
jae
enter
xchg
ds
mov
cwde
xchg
aad
inc
dec
pop
enter
xchg
and
jg
mov
lock
sahf
mov
inc
lahf
stos
mov
push
shl
retf
aas
test
push
hlt
push
das
test
popf
call
xchg
test
jle
adc
jnp
xlat
sub
clc
aam
mov
or
dec
jo
push
add
pusha
lahf
mov
stos
adc
push
inc
xchg
push
jge
mov
dec
dec
xchg
or
mov
mov
inc
cmp
mov
outs
test
sub
pop
mov
xchg
mov
in
push
lds
adc
scas
add
cmps
(bad)
cmc
(bad)
aam
test
jbe
fidiv
test
int3
into
popf
cmps
aad
jae
xchg
ja
in
pop
and
call
add
sbb
retf
cmp
in
ss
rcl
mov
sbb
movs
ror
enter
movs
pop
add
test
enter
imul
loop
clc
gs
mov
push
or
mov
(bad)
fild
jl
xchg
loop
add
out
mov
cmp
inc
leave
cmp
xor
ins
pop
pop
in
in
add
loop
dec
mov
sbb
psadbw
or
push
sbb
hlt
out
mov
pop
xor
pop
(bad)
adc
push
sbb
add
mov
jp
dec
iret
sbb
dec
imul
(bad)
adc
gs
mov
out
rol
fwait
loop
mov
xchg
mov
es
cmp
out
(bad)
ins
adc
and
in
mov
or
push
mov
push
fbstp
jne
mov
aaa
imul
test
push
xchg
jne
rcl
add
sahf
push
or
popa
cmp
xchg
push
push
je
movs
sub
jg
enter
hlt
(bad)
sub
scas
cmps
adc
inc
xchg
jo
ss
jmp
inc
lock
jl
pop
fcmovbe
data16
cmp
add
inc
cmc
call
sub
pop
cmp
cli
lock
cmps
outs
in
xor
aaa
sti
and
xor
xchg
mov
sbb
std
or
aaa
adc
stos
dec
fimul
xchg
pop
movs
scas
mov
xor
jae
cmp
dec
push
mov
or
push
cmp
cmp
adc
mov
es
iret
mov
adc
inc
pop
push
dec
pop
ss
stc
and
mov
cmp
jp
cmp
retf
and
in
out
cmp
inc
or
mov
(bad)
cs
push
mov
xchg
int
out
dec
or
xchg
call
cmp
(bad)
mov
pop
xchg
adc
or
push
xchg
push
mov
or
adc
pop
jge
jae
or
push
push
add
push
sub
std
iret
cmp
outs
daa
lock
mov
rol
inc
mov
sbb
inc
fisubr
stc
lock
xlat
or
jnp
ret
es
addr16
inc
fldenv
and
call
daa
(bad)
icebp
sbb
pop
aam
es
dec
xor
mov
mov
cmp
jne
sbb
mov
cli
scas
clc
aam
outs
cmp
imul
dec
pop
loop
pop
mov
add
sar
data16
retf
sbb
std
mov
leave
rcl
sub
xchg
mov
fstp
es
in
je
cmp
add
movs
stos
sbb
cmp
enter
cmp
or
dec
arpl
lods
scas
xchg
lock
addr16
loop
jne
mov
sub
xchg
fist
repnz
dec
fiadd
ret
lea
in
aam
stc
and
add
mov
jle
and
lahf
cmp
call
imul
mov
dec
xchg
stos
dec
clc
in
cmp
ror
int3
jns
(bad)
int3
cld
sub
lahf
sub
xor
imul
lock
jb
jg
xchg
cmp
mul
(bad)
jecxz
sti
and
cmps
inc
ins
jmp
mov
cmp
stos
lods
pop
aaa
adc
jae
or
aaa
mov
fidivr
and
mov
mov
adc
xchg
xor
adc
sar
adc
movs
fwait
mul
movntq
adc
pop
loop
pushf
fisubr
add
push
cmp
jle
jl
xchg
and
loop
pop
out
dec
sbb
and
pop
dec
aaa
mov
stc
test
imul
lea
shl
scas
push
int3
repnz
mov
cs
sbb
hlt
inc
inc
pop
mov
sub
mov
mov
lods
test
push
xchg
cwde
mov
fs
push
lock
fwait
shl
pop
outs
fcomp
adc
shr
out
jbe
aam
dec
movs
xor
cmp
or
push
sub
lea
arpl
fs
lock
loop
jo
mov
lahf
test
rol
adc
leave
rcl
stos
popa
test
mov
stos
push
je
es
add
push
pop
jno
ds
jno
pushf
sub
sbb
add
adc
movs
bound
int3
sti
cmp
out
ret
xor
cmp
jmp
stc
or
out
outs
cwde
iret
xchg
dec
xor
cmp
xor
sub
cmp
cmps
add
dec
sar
clc
repnz
or
sbb
or
xor
scas
push
rcr
and
and
push
adc
pop
stc
adc
xor
xchg
adc
icebp
enter
push
out
or
sbb
push
iret
xlat
push
fs
hlt
ret
adc
xchg
loope
or
jae
mov
inc
bound
cwde
and
lds
mov
inc
adc
movs
mov
popf
mov
js
clc
xchg
aam
fsub
jl
retf
psubusw
popf
jnp
out
and
mov
or
loope
pop
sbb
loope
pop
mov
cdq
enter
jg
cmps
pop
and
sahf
aam
ds
adc
jne
inc
cmp
fs
push
xlat
scas
push
fucomip
jecxz
xor
popa
cmp
out
pop
cwde
test
pop
or
or
retf
std
push
push
int
and
jae
into
daa
mov
out
inc
fimul
icebp
and
push
(bad)
adc
ins
add
pop
imul
cli
(bad)
(bad)
xor
sbb
sbb
ja
rol
out
(bad)
cmp
fisub
or
xchg
mov
push
div
cmp
pop
das
test
popa
pop
(bad)
adc
fistp
mov
movs
aam
dec
leave
outs
popf
or
push
repnz
dec
push
mov
fsubr
add
dec
data16
pusha
push
nop
int3
inc
nop
loopne
sub
mov
mov
push
and
push
pop
pop
push
adc
adc
int3
lods
or
inc
or
dec
mov
or
mov
sub
icebp
xchg
add
stos
jns
push
aaa
ins
inc
xor
dec
push
int3
add
sub
or
inc
sbb
ins
popa
(bad)
cli
and
jmp
jle
cmp
cmp
clc
mov
test
loope
(bad)
dec
mov
mov
leave
stc
jnp
mov
test
or
sbb
xchg
sbb
dec
loope
sub
and
nop
call
mov
xor
inc
xchg
test
jb
xchg
or
outs
inc
xchg
ins
inc
jo
imul
jmp
xchg
fwait
nop
outs
fist
pop
popa
mov
cmp
xchg
fxch
sbb
xchg
lods
mov
scas
fstp
fimul
pop
cli
lods
retf
stos
xchg
and
sub
jbe
push
jno
xchg
push
call
pop
rol
and
sub
(bad)
xor
psubsw
jl
jg
lods
imul
pop
sub
push
cmps
lods
mov
dec
in
and
ins
lods
repz
xchg
hlt
cwde
add
mov
fs
push
and
in
outs
jne
push
sbb
add
test
sahf
dec
pop
and
div
fdiv
fidiv
jnp
pop
add
lods
add
hlt
addr16
enter
push
test
ds
(bad)
xchg
into
inc
in
repz
ins
jo
adc
jae
loopne
test
rol
jne
stos
jno
pop
push
adc
mov
xchg
mov
repz
add
push
add
int3
loop
dec
call
jae
bound
dec
xor
sbb
shl
ja
outs
sbb
call
and
cmp
movs
fsub
push
nop
adc
in
mov
and
sbb
popa
ins
out
cs
lock
jbe
mov
and
in
in
pop
add
adc
lds
movs
fisub
xchg
call
cmp
push
jnp
push
xchg
xchg
scas
add
push
push
(bad)
loope
inc
jecxz
inc
mov
and
outs
mov
cli
fstp
push
dec
jae
jge
rdtsc
cwde
inc
cmps
inc
mov
ret
jne
sar
jp
aas
cmp
pushf
lea
int
push
je
lea
mov
shr
mov
call
not
mov
xchg
mov
add
mov
xchg
mov
push
jmp
lds
xlat
mov
les
out
mov
gs
cmp
outs
lods
stos
neg
push
lods
dec
sub
clc
dec
fcom
stos
jmp
inc
dec
sub
shr
and
jno
scas
pop
popa
sbb
mov
push
adc
aam
jmp
aaa
and
mov
pop
pop
outs
pop
lods
pusha
movs
dec
pop
push
inc
icebp
push
dec
or
lds
push
loope
shl
mul
inc
pop
add
pop
jo
das
test
in
ja
fst
loop
out
xor
outs
or
mov
mov
sub
hlt
loope
aas
cs
shr
(bad)
rcl
(bad)
mov
pop
addr16
imul
add
jecxz
out
inc
dec
sbb
push
in
movs
in
int
mov
je
ret
pop
xchg
test
mov
dec
xor
pop
jle
jmp
rol
(bad)
(bad)
enter
fs
adc
mov
jnp
aaa
aas
gs
test
sbb
adc
xchg
dec
clc
ds
push
push
mov
(bad)
mov
push
cdq
cld
shr
neg
or
and
dec
jbe
mov
jmp
jmp
push
retf
pop
(bad)
xor
xchg
sub
mov
sub
cld
pop
aam
dec
sub
xor
push
adc
les
outs
add
xor
xor
ins
pushf
xor
or
jae
inc
sbb
jmp
jne
mov
or
pop
xor
jg
mov
pushf
ins
mov
repz
fucomp
pusha
cmp
jg
add
sub
daa
sti
mov
test
fldenv
daa
popa
push
jnp
cdq
mov
gs
fisttp
std
pop
das
add
ret
mov
xor
cmp
mov
cmp
sub
dec
mov
xor
pop
jg
and
pop
push
int3
sub
fnstcw
mov
test
retf
mov
fstp
in
test
mov
pushf
cdq
icebp
sbb
xchg
push
call
int3
or
test
lahf
lds
mov
(bad)
push
xor
jl
mul
dec
hlt
(bad)
pop
and
neg
mov
or
cmp
mov
push
in
and
icebp
inc
mov
jp
pop
cs
jle
shr
or
popf
adc
out
scas
mov
mov
adc
jnp
(bad)
xor
into
mov
das
inc
mov
int3
mov
mov
mov
jo
(bad)
aas
popa
push
mov
cmp
inc
fisubr
add
outs
sar
stos
push
cmps
lods
arpl
xchg
repz
repz
fldln2
cli
pop
adc
push
or
retf
es
xor
dec
ror
das
fild
inc
fsubr
cmps
sbb
inc
mov
mov
jbe
cmp
aad
push
dec
in
clc
dec
sbb
cmp
outs
mov
jmp
fiadd
in
neg
sub
sahf
retf
fcmovnu
sub
or
jecxz
mov
xor
pusha
fistp
in
add
mov
ror
test
les
xchg
ins
xchg
sbb
sub
rol
daa
adc
push
addr16
test
gs
outs
test
(bad)
scas
scas
and
xchg
int3
xchg
(bad)
(bad)
mov
clc
addr16
cmp
pop
addr16
int3
cmp
jp
addr16
lods
fmul
adc
inc
stos
xor
jo
fwait
ja
xor
adc
in
sub
mov
mov
jbe
lahf
cmp
movs
adc
push
mov
mov
sub
and
movs
test
xchg
imul
dec
(bad)
lds
fst
stc
cmp
addr16
and
jge
in
push
pop
nop
dec
ja
mov
pop
cmp
xor
fwait
inc
retf
xor
test
or
xchg
pop
mov
and
or
(bad)
das
sub
test
lea
mov
xchg
not
sahf
pop
or
mov
sti
inc
mov
or
mov
shl
jecxz
jge
es
add
mov
in
mov
adc
fsub
mov
jp
add
js
sub
enter
int3
pop
add
push
mov
test
jecxz
(bad)
(bad)
add
lods
faddp
adc
(bad)
enter
adc
push
in
mov
pusha
dec
stos
sbb
jl
fdivr
(bad)
std
mov
mov
sbb
stc
xchg
inc
add
in
dec
mov
and
xchg
ja
and
test
imul
dec
ror
das
retf
pop
clc
jbe
mov
movs
arpl
pop
add
inc
sbb
push
ins
xlat
mov
popf
int
popa
mov
popf
sti
ror
test
mov
ror
test
cmp
xor
xor
fcomp
or
(bad)
jg
leave
xchg
mov
push
loope
sub
fsubr
xor
jb
dec
pop
and
imul
add
xchg
sar
adc
dec
dec
add
les
fsubr
fwait
and
mov
jp
add
mov
aaa
inc
popf
stos
add
icebp
xchg
shr
es
add
dec
ret
lods
data16
imul
popa
or
mov
cld
xor
ins
push
sbb
jae
arpl
aaa
in
or
add
dec
cld
lds
js
jne
ror
call
push
retf
std
adc
xchg
ja
mov
call
jne
cmp
ror
cmp
movs
adc
nop
xlat
aam
add
hlt
mov
fidivr
nop
jnp
in
and
xchg
jecxz
popf
inc
outs
sbb
xchg
imul
push
jae
mov
xchg
cdq
daa
jle
add
loopne
hlt
(bad)
ins
pop
sub
fs
xchg
xor
jl
push
cmps
jmp
or
ins
sbb
or
aam
lods
(bad)
out
and
cld
cmp
mov
pop
mov
in
cmps
(bad)
out
jns
rcl
xor
movs
out
adc
mov
addr16
out
sub
push
icebp
jp
or
cmps
mov
iret
cmp
es
push
test
sub
stos
repz
int3
int
xchg
mov
mov
shr
or
movs
jge
stos
or
mov
pop
cmc
adc
dec
mov
rcl
into
test
push
mov
xchg
sbb
pop
call
sbb
mov
ret
mov
inc
mov
mov
(bad)
mov
cmc
mov
mov
push
xlat
stc
fild
clc
mov
ja
cmp
pop
push
push
pop
mov
push
inc
cmp
mov
popf
sub
dec
sbb
fsub
jl
js
popa
mov
lahf
sbb
and
inc
jmp
movs
das
sahf
adc
std
test
xor
daa
jno
pop
outs
adc
out
shl
cli
jg
ror
and
sahf
loope
dec
or
inc
movs
outs
cmp
aad
cli
into
jmp
lods
jg
test
js
mov
mov
mov
dec
(bad)
jp
test
idiv
mov
fidivr
or
push
icebp
ror
adc
data16
cmp
or
adc
xlat
jmp
scas
call
retf
mov
pushf
iret
das
inc
xchg
div
and
shl
imul
repz
xchg
dec
outs
xor
repz
jbe
aaa
or
lods
push
mov
pop
das
cs
sbb
sub
arpl
xchg
push
pop
fscale
sar
sub
(bad)
and
pop
fcom
cmp
mov
adc
add
retf
test
jl
adc
faddp
es
pop
in
and
icebp
not
mov
sub
jmp
stos
mov
test
imul
sub
cmp
mov
das
mov
mov
pop
fld
cmp
xchg
mov
jns
iret
or
mov
push
sub
fwait
add
movs
ror
mov
pop
cld
pop
xchg
and
pop
dec
xchg
data16
aad
push
and
mov
push
lds
dec
(bad)
pop
cmp
stos
pop
sub
fwait
pop
lods
xor
scas
out
or
pop
xor
cmc
mov
sbb
cli
add
or
inc
rcl
lahf
and
js
in
ret
pop
sub
mul
xchg
adc
inc
sub
lahf
hlt
je
inc
stos
shl
loop
add
out
xor
jb
mov
sub
call
sub
ins
sti
clc
ror
push
les
xlat
cmp
pop
lods
cmps
adc
xchg
mov
sbb
arpl
dec
or
aam
pop
jne
sahf
jle
mov
mul
rol
add
stos
push
xchg
fwait
gs
and
test
pop
aad
shl
std
xchg
sbb
pop
sub
mov
(bad)
leave
sub
and
jecxz
jge
mov
lea
popf
aas
loop
hlt
in
mul
gs
test
sub
xlat
mov
(bad)
cs
(bad)
cmp
out
dec
inc
or
ss
pop
dec
inc
scas
test
(bad)
and
mov
clc
jmp
jecxz
sbb
cmp
cmp
mov
inc
and
dec
dec
(bad)
and
in
out
shr
and
cmp
mov
je
mov
or
adc
test
pop
mov
test
xchg
cmp
inc
lds
and
xor
js
push
push
das
mov
retf
dec
adc
inc
adc
cmp
push
shr
inc
repnz
cwde
inc
inc
xchg
inc
push
adc
mov
outs
push
(bad)
cdq
adc
leave
jmp
xchg
retf
pop
cs
add
inc
jg
xchg
jno
sti
arpl
jnp
adc
sub
mov
sub
xor
rcl
sub
ret
cmp
xchg
pmaddwd
add
push
mov
scas
dec
cli
mov
std
adc
mov
and
add
pop
xlat
inc
rol
mov
dec
ret
and
mov
xlat
out
mov
xchg
arpl
mov
repnz
jns
std
and
mov
and
stos
ins
in
mov
or
in
or
(bad)
cmp
jne
hlt
(bad)
(bad)
xchg
cli
mov
pop
call
sub
push
inc
movs
xchg
mov
jnp
sar
ds
mov
stos
jmp
stc
loopne
pusha
or
sahf
xchg
mov
fisubr
ret
jae
fild
xor
popa
inc
pop
sub
adc
out
jo
mov
dec
imul
push
and
gs
jb
neg
add
sbb
xchg
dec
shl
sub
leave
aam
xor
aaa
ret
mov
dec
inc
mov
xor
or
mov
push
jmp
imul
test
outs
xchg
imul
(bad)
ret
push
(bad)
jns
inc
test
sbb
cmp
cmp
out
stc
lods
cmp
fcmovb
dec
repz
jg
fs
fwait
std
nop
nop
in
movs
mov
xor
inc
mov
lea
aad
(bad)
retf
test
sub
int3
mov
popf
dec
inc
pop
movs
call
add
inc
and
cmp
mov
push
mov
aaa
pop
pop
nop
and
jecxz
pop
fstp
inc
xchg
sub
mov
pop
bound
and
sbb
(bad)
(bad)
in
xchg
daa
test
mov
ret
ja
mov
fdivr
pop
sbb
and
jmp
push
stos
or
adc
cmp
dec
fabs
inc
ss
sahf
jp
inc
cmps
cld
push
push
adc
inc
lods
clc
jmp
add
xor
mov
fbstp
jns
mov
(bad)
mov
dec
ds
repnz
add
push
cmp
add
inc
call
outs
fisttp
or
and
mov
mov
(bad)
ret
xchg
mov
retf
ss
xchg
je
xor
adc
adc
loope
sub
ds
in
mov
cdq
mov
es
push
pop
fwait
jp
sub
stc
in
mov
xchg
fidivr
das
into
push
test
sahf
jno
and
loope
cmps
sub
push
je
rol
mov
(bad)
push
gs
cmp
jge
lds
addr16
(bad)
arpl
sub
sbb
pop
icebp
enter
mov
(bad)
add
arpl
call
sti
jo
mov
ja
mul
out
sbb
add
sbb
cmp
imul
jmp
lock
stos
mov
xchg
mov
clc
or
inc
adc
adc
loop
mov
sbb
and
push
mov
jmp
pop
imul
mov
stos
out
les
jae
das
adc
xor
cmps
(bad)
sub
sbb
outs
mov
xchg
lahf
inc
mov
into
mov
in
sbb
or
jl
or
and
jo
test
xchg
push
dec
mov
ds
popa
cmp
fdiv
dec
jo
ins
fnstsw
mov
mov
jbe
fwait
call
cmc
xchg
push
aad
pop
xor
sub
(bad)
jbe
daa
iret
loopne
push
adc
repnz
daa
and
mov
icebp
mov
jae
mov
cmp
aas
cwde
cdq
jno
push
lods
pop
jecxz
fadd
lods
movs
dec
out
dec
and
mov
sbb
mov
xor
pop
xor
adc
call
sahf
sub
inc
call
mov
jecxz
sahf
lock
push
out
xchg
shl
ss
and
mov
or
mov
xchg
(bad)
xor
mov
out
sub
push
call
sbb
push
sub
inc
xchg
push
mov
sbb
cmp
pop
or
dec
cmp
sub
xchg
inc
xlat
fidiv
lahf
movs
shl
rol
sub
fbstp
outs
test
pushf
movs
push
sar
jmp
in
fidivr
xchg
addr16
dec
xchg
or
shr
xchg
scas
xchg
pop
fdivr
test
aaa
rcl
dec
dec
and
dec
and
cmp
js
(bad)
andnps
xchg
in
mov
inc
mov
xor
cmp
jmp
jbe
jbe
das
cmp
cmp
cmp
rol
jne
add
mov
jmp
sbb
out
fwait
neg
jne
test
sub
add
ret
sub
adc
cmp
sbb
mov
mov
xlat
in
stos
sbb
aam
ret
mov
xor
push
out
and
fndisi(8087
xchg
mov
js
stos
icebp
mov
ret
(bad)
jmp
pop
pop
xor
pop
data16
jg
js
in
(bad)
lds
aas
das
pop
dec
sbb
sti
ret
ds
ret
mov
mov
int
inc
sahf
mov
mov
iret
push
ss
mov
mov
mov
mov
pop
(bad)
cs
jae
add
xchg
mov
push
inc
cmp
mov
jmp
ins
dec
mov
scas
xchg
adc
loopne
lds
xchg
inc
jp
ret
jns
sbb
adc
fscale
out
mov
outs
in
mov
cdq
retf
mov
add
xor
(bad)
push
pop
mov
int
inc
pop
fstp
lods
push
mov
inc
fld
sbb
ret
mov
popf
add
stos
(bad)
sbb
test
sti
sbb
js
mov
test
sbb
jns
add
cdq
lods
je
rol
call
shl
dec
les
xchg
xchg
ror
mov
inc
jg
push
sub
sub
mov
xor
cld
mov
push
sbb
adc
xchg
push
loopne
iret
fisub
(bad)
arpl
xor
sub
cs
bound
push
sbb
dec
mov
loope
adc
mov
mov
enter
sub
shr
mov
xor
pop
ja
retf
nop
das
xlat
call
dec
push
push
mov
sbb
sbb
cdq
fstp
test
(bad)
dec
stos
sbb
ins
loope
cmp
cs
sub
retf
scas
cmps
lods
jp
mov
fdiv
pop
xchg
(bad)
mov
hlt
push
pop
mov
add
add
push
out
dec
mov
dec
xor
push
add
push
(bad)
mov
neg
lods
mov
(bad)
jmp
out
sbb
cli
xor
shr
imul
jle
stos
cmps
cmp
dec
enter
fwait
pop
pop
jbe
rol
inc
test
retf
dec
retf
xchg
sub
cmp
aas
xor
and
mov
call
(bad)
sbb
loope
enter
daa
(bad)
ret
pop
sbb
xchg
push
(bad)
fist
sub
dec
push
push
rcl
inc
adc
cli
dec
pop
inc
inc
xor
xor
xor
scas
adc
jge
pop
push
mov
jo
dec
enter
cdq
cmps
nop
outs
xor
xor
arpl
jmp
sub
(bad)
dec
cld
cmps
adc
add
scas
arpl
dec
sbb
or
push
xchg
into
shl
sub
loope
stos
add
bound
mov
retf
pop
int3
dec
loop
cmp
or
sub
ja
xacquire
dec
int3
retf
add
inc
cmps
nop
ins
push
or
sbb
add
pushf
sub
clc
retf
outs
add
(bad)
cmp
out
cdq
mov
pop
stos
hlt
retf
cdq
nop
fnstenv
hlt
cld
sub
dec
dec
sbb
out
mov
mov
pop
mov
or
xchg
mov
gs
fisttp
stos
jb
push
pusha
stos
jb
xor
mov
mov
cmc
jno
xchg
sahf
pop
cld
rcl
lahf
xor
in
shl
jns
pop
test
shl
cmp
ds
and
mov
sub
xlat
xchg
push
xor
jle
push
mov
jnp
mov
lock
cli
cmp
mov
outs
lea
inc
xchg
(bad)
scas
push
addr16
cmp
retf
inc
addr16
jbe
mov
sub
or
out
cmp
fwait
ret
push
push
repnz
daa
inc
sahf
popa
or
xor
lock
push
imul
shl
jno
pop
jno
and
ror
lods
cmp
jmp
mov
lock
xor
fadd
and
rcr
inc
(bad)
movs
push
lahf
mov
ds
test
popa
(bad)
leave
(bad)
addr16
sbb
push
sbb
xor
cmp
add
adc
inc
pop
push
mov
retf
stos
test
mov
cmp
fild
cmp
lods
fldcw
mov
jbe
xchg
dec
xchg
das
mov
or
sahf
jns
xchg
inc
int
cli
dec
cmp
sub
in
pop
(bad)
pop
mov
sub
sub
inc
idiv
out
pop
and
aaa
iret
scas
xor
pop
or
mov
pushf
nop
frstor
retf
cs
cwde
aam
sub
add
adc
in
mov
inc
and
movs
add
test
ret
lahf
stc
pop
or
add
xchg
dec
aam
jmp
sbb
outs
mov
shl
sbb
push
ficom
movs
push
cmovne
xchg
das
xor
leave
loopne
mov
jl
jne
(bad)
inc
dec
fstp
and
and
hlt
lods
add
xlat
(bad)
jle
jg
icebp
cmp
adc
or
mov
or
stos
test
cmps
dec
movs
jo
dec
cld
and
jo
call
in
lahf
stos
hlt
jno
addps
retf
push
ja
and
adc
mov
sub
rcr
pop
jmp
mov
cmp
bound
in
sti
pop
cmp
fidivr
cmps
xchg
int
(bad)
mov
sbb
rol
repz
mov
stos
cmp
aam
lahf
xor
push
push
xor
jo
stos
cwde
cwde
sub
imul
mov
sbb
pop
test
fnsave
bound
push
xchg
push
inc
adc
or
je
inc
jmp
loop
lock
sub
push
ja
ret
lods
pop
inc
enter
test
int
jae
add
mov
cmps
ins
push
xchg
sub
xchg
cmp
aas
xchg
dec
jecxz
out
enter
fwait
jl
sub
sti
mov
or
xchg
aaa
inc
dec
inc
(bad)
ins
(bad)
ret
add
inc
xchg
mov
(bad)
repnz
mov
mov
jg
jo
dec
push
out
xor
and
inc
jp
(bad)
fcom
push
push
clc
shl
jg
dec
into
je
aad
ds
inc
out
jmp
mov
inc
out
je
test
cmp
or
(bad)
sbb
jl
cld
mov
(bad)
xlat
inc
(bad)
and
fwait
jae
call
(bad)
xchg
sub
dec
aas
xchg
mov
in
lahf
(bad)
in
enter
leave
xor
stc
bound
mov
lods
mov
or
push
pop
xchg
cmc
lods
fidiv
fs
(bad)
mov
add
adc
adc
test
mov
mov
push
cmp
push
sti
shl
and
pop
jle
fs
neg
mov
adc
and
jns
test
fucomi
sub
mov
test
sbb
inc
(bad)
push
je
fld
mov
loopne
aaa
dec
and
retf
and
mov
movs
mov
ds
movhps
in
dec
call
icebp
jnp
add
shl
addr16
in
jns
and
out
dec
adc
(bad)
ret
pop
mov
push
out
adc
outs
in
mov
repz
sbb
jns
lds
xchg
mov
xor
pop
rcr
mov
in
push
or
or
clc
mov
sbb
std
leave
xchg
cli
cmp
xor
push
lods
xlat
sbb
sar
(bad)
popf
into
in
xchg
stc
inc
xchg
fisttp
sbb
mov
cdq
mov
sub
in
and
ret
enter
ret
sbb
mov
xchg
mov
sar
sbb
movs
lahf
and
enter
bound
vpavgw
sbb
mov
sbb
cmp
mov
inc
xchg
sub
mov
mov
in
sub
xor
stos
js
aam
mov
mov
xchg
push
clc
push
int3
out
jns
cmp
push
or
cli
cmp
mov
fdiv
or
or
push
fcomp
xchg
jmp
mov
(bad)
repnz
pop
jbe
outs
call
test
call
shr
outs
and
out
sbb
jl
fisub
iret
out
cmp
xchg
push
mov
push
movs
push
sahf
jg
outs
jae
or
movs
push
mov
push
mov
ds
ins
clc
sub
push
out
jle
xchg
push
lahf
push
jne
rcl
push
cdq
cs
add
pop
das
xlat
push
out
fdiv
jecxz
push
(bad)
into
xchg
out
pop
cdq
push
(bad)
nop
mov
push
add
leave
ret
push
jle
sbb
add
adc
pop
addr16
push
pusha
inc
fadd
fldenv
js
icebp
fist
inc
hlt
jns
xchg
xor
or
je
in
ins
int3
imul
test
mov
mov
push
aas
test
and
rcl
sub
and
cmc
xor
stc
sbb
jae
push
xchg
iret
pop
pmaxub
mov
xchg
push
mov
mov
addr16
lahf
loope
mov
js
adc
ret
mov
adc
aad
sub
aas
jno
in
pop
adc
in
shl
jb
sbb
push
push
mov
pop
inc
ds
aad
(bad)
mov
jo
bound
pop
or
mov
fiadd
jnp
mov
add
stos
cs
ss
inc
punpckhdq
outs
pop
das
xchg
pop
cmps
xlat
push
(bad)
push
cmp
call
hlt
shl
stos
mov
adc
xor
fistp
in
cmps
mov
data16
lock
pop
in
xchg
cwde
fist
sahf
call
or
dec
mov
stc
and
call
fsub
fdivr
xchg
inc
test
loope
mov
sbb
push
sub
sbb
daa
fnstsw
cli
and
inc
imul
lods
in
mov
mov
push
stos
fisubr
mov
push
pushf
or
loopne
ss
das
and
push
pop
sbb
or
push
mov
mov
mov
mov
xchg
push
scas
adc
xchg
rol
aas
mov
pop
dec
ror
pop
shl
dec
xor
(bad)
mov
es
imul
ja
mov
(bad)
sub
loop
imul
cdq
das
lock
call
dec
inc
xor
div
add
in
aas
xchg
fisub
pop
repz
mov
jle
fist
cmp
pop
or
ret
push
cmc
jecxz
adc
jne
dec
repz
scas
pop
hlt
cmp
or
js
pusha
gs
ins
(bad)
or
les
nop
cmps
stos
lods
movs
mov
mov
mov
push
int3
cmps
cdq
rcr
int3
adc
mov
aam
mov
adc
fmul
or
outs
addr16
mov
fild
xchg
arpl
(bad)
aaa
add
add
(bad)
outs
jne
fnstenv
inc
sub
ss
sti
sbb
add
or
jne
dec
push
call
icebp
repz
mov
inc
daa
cli
ret
xlat
mov
iret
pusha
retf
or
xchg
cli
jge
shl
pop
dec
pop
aaa
test
mov
or
sub
xor
mov
repnz
cdq
sub
pop
push
daa
jns
sbb
mov
or
aam
inc
enter
imul
or
pop
push
adc
int3
and
jo
push
ror
mov
push
(bad)
sahf
je
and
loopne
ret
pop
add
dec
dec
push
sahf
outs
lahf
fist
xor
push
cmp
jle
add
jl
cli
call
addr16
lods
mov
mov
stos
jle
in
inc
fisttp
into
sahf
stos
lods
jae
daa
mov
aam
xor
jne
mov
sub
mov
jbe
call
sub
test
and
add
out
arpl
pusha
sahf
mov
push
mov
xlat
aas
(bad)
popf
call
je
mov
movs
aam
adc
hlt
mov
push
push
gs
or
aad
pop
xlat
inc
mov
jbe
lods
xor
jmp
xchg
inc
enter
dec
cmp
popf
xor
loopne
out
mov
pusha
in
pop
adc
pop
xor
pop
(bad)
dec
(bad)
out
cmp
stc
pusha
je
mov
mov
cli
retf
bound
xchg
cmps
fiadd
sahf
into
shr
mov
sbb
aam
out
ret
dec
adc
sbb
and
mov
inc
xor
cmc
rcl
gs
in
jbe
mov
mov
jg
inc
dec
xchg
xor
jo
push
sub
jnp
loop
pusha
jb
les
cwde
aas
aam
shr
inc
sbb
pop
je
int
pusha
jb
or
sbb
std
mov
sahf
iret
sahf
int
push
lds
gs
loopne
out
out
fdivr
adc
ja
je
jbe
outs
call
push
outs
xchg
out
repz
mov
ret
or
daa
out
mov
sub
or
test
mov
lea
ret
mov
jnp
pop
jecxz
mov
mov
aam
add
ins
jnp
jl
and
sub
ds
bnd
sub
push
mov
test
mov
nop
call
fs
inc
test
xchg
mov
or
cwde
and
adc
outs
ret
(bad)
int
js
mov
stos
popa
inc
mov
stos
fsubr
fld
mov
(bad)
lea
mov
dec
jo
dec
es
sbb
fwait
movs
(bad)
cmc
mov
(bad)
in
sbb
int
popa
mov
xor
(bad)
jmp
inc
imul
outs
push
add
rcr
pop
mov
jns
int
icebp
sbb
in
ret
or
xchg
pop
bound
xchg
sub
imul
inc
mov
sub
retf
inc
ja
inc
xor
mov
clc
or
stos
xor
popf
or
mov
sub
jbe
xor
(bad)
fcmovne
loopne
sahf
xchg
(bad)
bound
xchg
jbe
int3
(bad)
lock
adc
in
mov
and
sbb
inc
add
lds
sti
add
inc
movs
shl
push
jae
pop
pop
pusha
add
xor
cld
ds
leave
addr16
or
dec
stos
pusha
push
into
and
pop
pop
shr
and
sbb
addr16
nop
cmp
clc
mov
add
dec
push
push
imul
imul
bound
cmps
and
xchg
adc
(bad)
adc
call
mov
adc
inc
cmp
aas
jno
adc
mov
cmps
mov
ds
enter
adc
lahf
hlt
out
push
cmps
or
dec
int
push
push
scas
sbb
cmp
fbstp
loope
dec
cmp
and
sub
out
bound
mov
add
sbb
fisubr
gs
in
fiadd
sar
jno
pop
int
xchg
(bad)
mov
mov
fimul
or
adc
mov
loopne
jg
cmp
ins
mov
inc
aam
fsubp
mov
or
xor
xor
ins
clc
cmps
jecxz
leave
xor
nop
cmc
rcl
xchg
icebp
xor
cmp
mov
dec
js
add
popf
sub
dec
out
or
adc
pop
ins
sbb
sbb
fld
push
mov
fwait
mov
add
jle
(bad)
lea
icebp
and
fwait
bound
sub
xor
or
adc
mov
xchg
arpl
lods
mov
push
mov
sbb
or
(bad)
jnp
push
inc
jmp
jo
inc
lar
xchg
inc
sbb
fnstsw
aas
test
movs
push
xchg
adc
cld
cmp
je
cmp
inc
pop
fsubr
pop
mov
dec
imul
std
cmp
aas
loopne
cs
ins
mov
std
mov
aad
fsubr
jns
jno
jnp
sub
ds
aas
xor
xchg
mov
test
cmp
pop
cld
fist
jo
inc
out
mov
stc
retf
mov
inc
cmps
pop
push
repz
xor
sub
cwde
jne
xchg
cli
pop
popa
fwait
and
xchg
(bad)
outs
lds
out
daa
add
(bad)
shl
scas
faddp
xchg
adc
ror
jp
sahf
xor
inc
adc
jecxz
loop
std
adc
cdq
sub
mov
mov
les
movs
in
mov
cmp
mov
(bad)
mov
out
(bad)
and
xlat
mov
repz
das
leave
in
(bad)
adc
xor
mov
pop
xchg
jmp
out
int3
xor
jne
in
mov
push
cmp
pop
mov
mov
xchg
lods
lds
test
sbb
mov
popa
jl
or
std
data16
mov
ins
shl
sub
out
(bad)
in
cmp
inc
xchg
daa
sub
pop
out
mov
adc
pop
inc
jne
retf
or
jge
sub
cmp
rcl
mov
test
sub
push
pop
fwait
mov
clc
jl
retf
and
ret
inc
dec
push
jmp
pop
and
(bad)
mov
or
push
std
mov
(bad)
jnp
mov
jl
or
sti
ret
rep
nop
shl
clc
inc
adc
mov
lods
sahf
mov
sbb
fdivr
fdivr
dec
test
push
jno
inc
test
rcr
mov
test
inc
stc
ds
sbb
les
out
jmp
jp
pusha
sbb
pop
jmp
pop
mov
push
das
cmp
add
sub
retf
push
int
xchg
xchg
xor
add
in
pop
call
add
cs
sahf
add
xchg
aam
sub
dec
mov
addr16
or
mov
popa
cmps
sub
jle
adc
xor
xor
out
add
or
mov
adc
test
mov
outs
sub
fs
mov
fmul
test
int
cwde
popa
push
push
movs
mov
mov
ret
mov
retf
sbb
or
add
rcl
mov
es
(bad)
mov
push
and
sbb
clc
inc
outs
xor
pop
or
mov
imul
sub
scas
cmps
in
scas
outs
test
(bad)
pusha
mov
test
jmp
push
ins
push
and
push
push
out
scas
adc
adc
je
xlat
adc
sub
jmp
mov
jle
test
call
cmc
sub
add
mov
icebp
pop
fistp
mov
xlat
aaa
or
test
lods
ds
movs
xor
not
push
out
jecxz
mov
jl
jge
pop
cli
xor
add
mov
sbb
jle
mov
stos
cs
fld
arpl
cmp
sub
inc
adc
or
scas
mov
jge
sub
ror
sub
mov
(bad)
and
lds
lahf
out
cmp
dec
mov
add
pop
cvttps2pi
pop
cmp
sub
xor
xchg
add
sub
xchg
test
lgs
loop
lock
out
xor
mov
adc
(bad)
ss
cld
sbb
es
ins
and
push
mov
ins
movs
out
outs
(bad)
push
leave
bound
outs
test
fild
mov
retf
dec
inc
call
rol
call
xor
aas
test
sbb
ja
xchg
pop
sub
popf
ficom
fistp
add
push
in
out
dec
push
cmp
cmps
adc
add
jns
pop
cmps
mov
and
clc
pop
cmp
mov
cwde
aad
push
jge
js
imul
xor
inc
push
inc
(bad)
std
pusha
ja
scas
sub
div
pop
pop
and
loope
push
fwait
and
dec
std
popa
inc
jmp
leave
adc
popa
jmp
or
imul
and
std
jns
xlat
lods
xor
movs
mov
leave
push
sub
imul
jl
add
pop
pop
bound
jae
outs
test
push
jl
test
push
scas
push
xchg
lea
push
cli
mov
mov
mov
(bad)
push
cmps
pop
adc
mov
mov
or
call
repnz
leave
xchg
mov
stc
aaa
mov
cmp
lods
jecxz
pop
je
mov
dec
out
or
rcr
sti
stos
shl
and
xor
jg
out
or
mov
jl
jne
add
xchg
fwait
in
adc
sbb
xchg
add
inc
xchg
sbb
mov
sbb
cdq
add
cmp
sub
mov
cmp
pop
outs
jmp
je
lds
lahf
mov
call
out
cwde
or
inc
xchg
and
rcl
sub
repnz
test
add
sbb
dec
inc
jle
sub
pop
ror
ins
and
jb
dec
dec
sub
and
add
xchg
test
aaa
xchg
aas
data16
scas
cli
imul
sub
pop
inc
shl
adc
addr16
in
gs
pop
fsub
adc
(bad)
mov
test
(bad)
in
(bad)
pop
out
add
adc
inc
les
stc
push
jnp
jnp
popa
cdq
shr
mov
inc
mov
mov
jmp
push
test
sub
test
dec
pusha
clc
and
aas
idiv
or
sbb
lea
in
fist
push
aaa
(bad)
jo
fstp
je
jg
cmc
pusha
cmp
or
fist
into
push
jmp
xor
sbb
scas
fcmovnu
lods
pusha
dec
ins
ins
into
(bad)
movs
mov
xor
arpl
mov
hlt
adc
xor
pop
das
mov
push
mov
or
adc
loope
ins
jl
cmc
ret
jo
push
pushf
shr
and
dec
aam
and
xor
push
pop
ret
adc
popa
sbb
push
test
rol
dec
mov
add
cmp
sub
ret
out
or
mov
mov
mov
test
(bad)
add
mov
scas
mov
xlat
inc
inc
xchg
aas
scas
jae
cdq
xor
sar
pop
(bad)
movs
xor
das
(bad)
leave
lock
jo
jmp
stc
mov
add
add
add
sbb
sub
jno
add
jmp
jo
repz
mov
mov
mul
cmp
or
push
sub
jmp
and
dec
or
adc
jbe
or
push
dec
bnd
add
xchg
mov
xchg
shr
loopne
fs
neg
inc
sub
fs
(bad)
push
ror
cmp
cmp
and
push
int
add
pmaxsw
hlt
movs
push
cmc
or
fmul
cwde
adc
ss
(bad)
lea
jmp
or
mov
sub
lods
loop
fist
cmp
fstp
test
addr16
cmps
push
push
sub
xchg
pop
hlt
adc
push
call
jmp
pop
inc
cmp
ins
imul
xchg
(bad)
xchg
mov
scas
add
and
bound
test
push
push
xor
mov
sbb
aam
fwait
sub
call
fld
xchg
inc
movs
out
or
mov
add
mov
in
shr
jnp
cmps
mov
out
outs
(bad)
cld
xchg
mov
in
and
sbb
mov
dec
frstor
aaa
inc
scas
jne
xor
xor
std
outs
aaa
aad
fsubr
iret
xchg
out
jne
xchg
add
loop
aaa
aam
enter
mov
cmp
rcl
mov
push
lahf
jle
adc
arpl
sbb
jnp
xchg
fwait
cmp
xchg
pop
outs
sbb
jle
ret
fwait
push
int
add
mov
lock
add
sub
push
cdq
(bad)
out
cmp
xchg
leave
test
push
hlt
paddw
jb
fcmovbe
test
add
(bad)
lods
jbe
add
cs
mov
fidivr
ins
loopne
mov
data16
pop
mov
lds
sub
daa
(bad)
jg
push
or
jmp
repnz
xchg
mov
jl
pop
mov
dec
xchg
mov
push
lock
nop
pop
jnp
jne
ret
cmp
xchg
jecxz
add
inc
test
xor
ins
mov
out
outs
aam
mov
pushf
xor
mov
pop
adc
in
mov
and
arpl
pop
cmc
jne
fdivr
or
leave
mov
jae
jle
test
pop
lods
mov
(bad)
cmp
sbb
mov
int
int
push
daa
xor
call
lds
or
push
add
ja
inc
or
dec
ret
repnz
aaa
iret
scas
cmp
jns
push
xor
add
fidivr
jae
adc
aad
ficomp
inc
inc
in
inc
mov
fwait
pop
not
xchg
or
add
lds
mov
dec
test
mov
enter
xor
aam
adc
or
inc
xor
jmp
pop
lods
fucomp
shl
movs
jo
mov
pushf
aad
cmps
sub
jp
das
(bad)
pusha
jg
rcr
maskmovq
jbe
sub
neg
inc
jmp
loope
xchg
mov
scas
mov
inc
jo
xchg
mov
repnz
mov
aam
pop
loope
fiadd
mov
loope
mov
dec
adc
xchg
test
ret
pop
out
xor
imul
and
xchg
mov
fld
mov
jl
outs
sub
dec
enter
lods
lea
pop
jbe
imul
pop
jmp
cmp
xor
jp
cmc
sbb
shl
jno
push
or
push
(bad)
push
mov
outs
adc
in
sti
test
cmp
mov
mov
rcl
test
fisubr
fistp
mov
sbb
or
jns
cmc
pop
mov
xchg
fcmovu
nop
inc
retf
std
add
push
jle
(bad)
dec
jecxz
cmp
jg
cwde
add
stos
add
retf
dec
adc
push
sbb
jae
mov
mov
jge
pop
popa
adc
lock
cmp
dec
and
adc
lods
ja
shl
movs
mov
retf
int3
push
into
int
cmp
call
dec
dec
or
jmp
aad
mov
push
cld
push
repz
movs
sbb
add
sub
pop
jnp
xchg
jne
xor
jp
and
gs
shr
cmp
gs
xor
jns
aam
movs
jno
test
neg
dec
or
(bad)
aas
ret
xchg
scas
js
jmp
mov
cmp
and
ret
ds
out
or
mov
mov
add
jns
cdq
(bad)
cld
and
in
cmp
xor
xchg
add
sahf
adc
jmp
jmp
pop
mov
and
xor
test
sbb
add
fnstcw
jb
pop
mov
out
jle
ret
fs
aaa
(bad)
sbb
pushf
cli
fnstenv
inc
test
xor
xor
std
ja
pop
cmp
in
div
mov
add
inc
mov
add
mov
test
push
shl
popa
test
adc
sbb
arpl
mov
jae
push
mov
out
icebp
shr
fadd
retf
or
xlat
repnz
add
das
arpl
sub
inc
lock
jg
fld
adc
sbb
push
movs
es
das
xor
push
lods
int3
xor
mov
adc
dec
icebp
lock
clc
imul
call
(bad)
and
add
inc
dec
add
and
mov
mov
cs
repnz
mov
sbb
ins
mov
test
ret
and
cmps
loop
cmp
hlt
push
jmp
cs
in
ds
leave
(bad)
sbb
cmps
ds
loope
xor
js
ret
xchg
add
pop
mov
data16
mov
cdq
test
jp
jnp
jns
mov
inc
call
xchg
jae
and
xchg
leave
test
adc
cmp
sbb
mov
mov
aad
push
loop
push
imul
out
add
ror
fdiv
into
stos
xor
mov
and
shl
push
and
mov
lods
cmp
popa
call
bound
nop
xchg
mov
xchg
or
imul
push
stos
inc
retf
push
imul
sub
clc
sub
xchg
adc
daa
fs
jle
or
push
xchg
or
stc
cmp
dec
cdq
or
aam
scas
in
in
outs
xchg
xor
repnz
cmp
mov
aam
adc
push
retf
std
add
shld
addr16
mov
sahf
push
imul
mov
dec
cmp
cmps
mov
adc
cmp
hlt
xchg
sahf
inc
jl
int3
push
jmp
mov
jns
stc
sub
cli
mov
rol
mov
loopne
int
jne
mov
xor
mov
iret
mov
jns
cmp
mov
mov
jmp
loop
push
rol
add
push
mov
std
hlt
lahf
jge
stos
add
and
xor
pop
sub
jns
loopne
dec
adc
out
mov
ror
leave
lsl
nop
mov
pop
lahf
cmp
xchg
xor
xor
sub
ret
adc
fiadd
inc
sbb
in
jg
dec
cmp
popf
(bad)
jnp
jg
mov
dec
cmp
rcr
xor
push
jp
rcl
and
paddsb
mov
out
jne
adc
and
jno
xchg
fiadd
fnsave
outs
and
aaa
es
jge
add
jmp
xchg
lock
jnp
jb
adc
dec
pusha
jecxz
add
mov
jne
fadd
xchg
mov
imul
ffree
imul
outs
aas
jge
jecxz
sub
cmp
lock
inc
jge
(bad)
aaa
push
js
cmps
(bad)
into
xchg
mov
jmp
jecxz
push
lahf
mov
fistp
push
mov
cmp
pop
ins
push
in
popa
movs
fisub
jmp
popf
ret
out
push
jnp
pop
test
stc
out
fcmovnu
cdq
fild
hlt
cmp
jecxz
or
cmp
ror
outs
cmc
xchg
xchg
es
adc
dec
fist
retf
std
ds
inc
jbe
adc
jmp
int
idiv
test
dec
mov
stc
sbb
aas
and
push
retf
cmp
push
push
pop
lea
scas
sub
push
lock
jb
cmp
mov
jmp
and
in
ret
mov
dec
dec
nop
inc
pop
call
cs
das
dec
lahf
js
sbb
dec
(bad)
fmul
lods
fld
xchg
icebp
fisub
mov
mov
sbb
pop
ss
(bad)
mov
pop
xchg
imul
or
stc
lock
(bad)
xchg
imul
sub
fcomp
ret
pop
aam
xor
in
fld
push
movs
(bad)
mul
(bad)
into
jo
fst
mov
cwde
mov
retf
call
sbb
stos
mov
ret
mov
dec
scas
sbb
mov
sbb
shl
or
loopne
std
cmp
outs
lods
adc
test
rcl
sti
ja
into
out
das
in
mov
das
sub
jno
add
mov
or
or
pop
cs
push
fldl2t
dec
cdq
adc
inc
stos
mov
mov
or
jb
adc
dec
sbb
pop
xchg
pop
das
mov
xor
nop
jns
aaa
jl
pop
add
mov
pusha
test
inc
mov
mov
jbe
into
push
test
push
pop
into
cmc
mov
mov
xor
cmp
xor
push
adc
and
jbe
popa
add
icebp
imul
and
xor
jne
dec
xor
aaa
dec
sbb
daa
or
and
imul
call
in
ins
mov
mov
gs
push
xor
les
pop
out
pop
xlat
push
test
inc
xchg
push
add
test
dec
adc
lahf
and
push
int
add
aas
lea
dec
push
enter
inc
mov
cmp
daa
jl
pop
fwait
inc
or
push
push
xchg
or
xor
jmp
pop
rol
sub
mov
mov
mov
or
fwait
jo
and
(bad)
(bad)
pusha
cli
jns
icebp
fidivr
xchg
mov
adc
pop
js
xchg
das
mov
cmp
icebp
retf
push
loope
or
cmc
mov
mov
cmc
adc
and
push
les
ins
ja
imul
arpl
xchg
or
xchg
mov
pop
pop
mov
dec
and
mov
out
jl
ins
sub
pusha
lahf
sub
ja
push
sahf
int3
call
lods
sub
clc
nop
pop
pop
ss
mov
movs
xchg
mov
stos
popf
in
sbb
mov
push
lahf
pop
lahf
ins
shr
sub
push
sub
pop
repz
mov
dec
sar
mov
in
jb
cs
xor
xor
clc
and
pop
jb
outs
add
daa
ret
mov
push
mov
outs
call
sub
loope
and
or
out
imul
idiv
adc
aas
movs
jbe
inc
test
push
sbb
mov
mov
aas
es
mov
lahf
ficomp
dec
movs
pop
xor
imul
pop
jns
aaa
xor
pusha
data16
std
xchg
cmps
jmp
or
(bad)
xor
movs
aam
jge
test
mov
data16
mov
push
fldcw
jp
in
imul
and
mov
loopne
int3
dec
outs
pop
pop
inc
xor
into
int3
pop
xor
pop
sbb
jns
loope
dec
rcr
fcom
(bad)
mov
clc
mov
mov
mov
inc
jae
cs
mov
mov
mov
arpl
jnp
loope
pusha
repz
hlt
(bad)
mov
or
jmp
lock
fcomp
mov
pusha
cmc
sub
lea
sub
rol
repnz
jno
cmps
mov
stos
mov
mov
call
dec
rcl
fistp
movs
mov
sub
and
add
cmp
inc
lods
mov
jg
xchg
data16
fld
dec
lock
popa
xchg
out
retf
sub
mov
add
das
popf
scas
callw
ja
jbe
call
adc
lods
ret
rol
lds
dec
cli
dec
lock
ret
xor
jae
and
pop
fbld
add
rcr
ret
data16
jae
mov
mov
(bad)
pop
xor
arpl
dec
dec
xor
jns
sbb
dec
dec
out
loope
xchg
ror
retf
pop
cmps
jge
lods
frstor
adc
add
sub
xchg
push
mov
(bad)
aam
xor
xchg
adc
push
icebp
add
mov
or
cmp
outs
xchg
js
pop
jp
or
jp
ins
stc
imul
out
je
je
dec
push
fwait
inc
cmp
leave
or
daa
(bad)
push
jnp
ds
push
add
push
sbb
int
test
dec
adc
fucom
imul
mov
or
sahf
(bad)
aas
or
jbe
ja
repz
xchg
dec
cli
repnz
push
aas
xchg
jno
repnz
cmp
stc
rol
pop
jns
mov
cmps
hlt
push
aas
cwde
mov
call
mov
mov
retf
dec
sbb
push
mov
push
les
les
outs
in
mov
sbb
jmp
push
call
xchg
mov
ins
mov
push
or
popf
adc
push
lods
enter
jne
mov
sub
dec
ja
aas
repz
into
(bad)
mov
into
or
push
lods
cmps
test
inc
shl
(bad)
xchg
dec
inc
mov
inc
psubb
movs
mov
jmp
fstp
clc
cli
xor
dec
stc
shr
cwde
xor
fsub
(bad)
clc
add
inc
test
sub
jnp
loopne
pop
cmp
cdq
out
loope
into
test
mov
retf
add
sbb
xchg
inc
mov
sub
inc
jmp
inc
cli
je
rcl
add
dec
xlat
sahf
xlat
scas
cld
shl
sbb
cmp
mov
scas
mov
dec
lods
in
push
movs
inc
mov
mov
std
push
pusha
jg
loop
mov
imul
xor
jae
sar
xchg
dec
(bad)
mov
cmps
icebp
xchg
cmp
lods
push
and
mov
add
lods
mov
popf
lods
retf
(bad)
jns
test
sbb
pushf
or
cmps
mov
or
push
and
jnp
shr
xor
or
adc
sti
mov
inc
fsub
fiadd
push
xor
enter
push
sub
in
cli
scas
test
stc
movs
nop
inc
faddp
fld
push
cmp
mov
addr16
adc
pop
movs
cmps
mov
pop
rol
jg
jmp
push
adc
pop
add
in
fld
imul
lods
in
cmp
pop
cdq
in
mov
sub
stos
push
mov
leave
xchg
(bad)
mov
jmp
and
sbb
out
jnp
fbld
leave
ins
or
xor
(bad)
aad
ret
mov
das
inc
fldcw
dec
js
or
test
xchg
dec
lods
push
jo
add
call
add
(bad)
ret
(bad)
mov
xor
sbb
pop
mul
mov
sbb
jmp
das
pop
mov
icebp
add
mov
arpl
fist
lods
imul
push
adc
iret
xchg
push
jle
outs
hlt
xor
or
jae
dec
sbb
je
xchg
mov
pop
jo
hlt
push
pop
fst
aaa
ror
sbb
xor
mov
sub
sahf
cld
outs
adc
or
xchg
inc
lods
sbb
in
stos
les
mov
stos
ret
jg
push
scas
sbb
and
inc
fcmovb
cmp
mov
jno
dec
push
sub
add
(bad)
mov
fwait
pop
mov
inc
cmc
mov
sbb
lods
dec
lahf
test
dec
js
mov
mov
and
sbb
fwait
in
rol
test
dec
in
outs
je
mov
and
sbb
xlat
(bad)
mov
push
lods
and
xchg
sub
inc
mov
push
sbb
scas
or
mov
push
inc
jp
out
add
lahf
sbb
lds
std
mov
sub
jmp
jne
dec
xor
xchg
iret
mov
pop
xor
int3
lods
xchg
adc
or
cmp
mov
(bad)
(bad)
mov
ja
pop
fadd
nop
cmp
rol
ins
push
loop
std
mov
push
call
in
scas
push
xor
je
dec
std
out
fdivp
lock
daa
xlat
dec
xchg
popf
call
dec
pop
lods
lea
or
in
test
test
sub
scas
sub
sub
sbb
pusha
ja
mov
call
popf
lea
fbstp
adc
mov
or
xchg
mov
movs
cmp
push
xchg
mov
and
push
out
push
pop
push
jno
fwait
aad
imul
movs
sbb
mov
push
jmp
test
xlat
gs
jp
(bad)
movs
call
movs
not
es
push
ds
mov
add
dec
add
out
daa
add
jmp
jmp
test
or
stc
add
xchg
add
nop
xchg
pop
cs
jp
and
ds
popa
and
mov
inc
scas
inc
ins
push
movntq
push
fnstsw
push
ins
sub
cmc
shr
stc
jg
mov
lods
call
xor
xchg
lea
xchg
and
xchg
jecxz
inc
test
ficom
add
xchg
ret
push
in
out
rol
dec
xor
sub
pop
add
inc
(bad)
sub
inc
jmp
pop
scas
and
bound
xor
repz
stos
xchg
jb
jmp
mov
mov
rcl
mov
(bad)
mov
sub
jno
push
xchg
inc
hlt
and
lahf
or
mov
(bad)
fsubr
mov
push
nop
and
jno
adc
adc
and
mov
loopne
movs
push
dec
pop
dec
mov
dec
call
ins
lds
mov
rcr
cmp
fwait
xchg
retf
nop
fwait
(bad)
fimul
jl
ins
pop
adc
mov
push
(bad)
dec
dec
inc
add
mov
push
fisttp
adc
lods
(bad)
cmp
int3
xor
ins
out
cli
aad
imul
xchg
iret
mov
and
icebp
xchg
test
ja
dec
and
sbb
es
push
add
fisub
sub
adc
pushf
adc
std
pop
out
pop
fisub
imul
mov
cs
pushf
daa
loopne
rcr
bound
outs
sub
(bad)
data16
imul
das
or
mov
fs
out
aad
pop
leave
mov
and
inc
and
sub
shl
imul
push
pusha
xchg
retf
int
retf
(bad)
sti
loope
dec
and
sahf
xchg
jns
test
rcl
data16
fwait
pop
(bad)
movs
in
push
sbb
inc
imul
xor
push
in
idiv
adc
test
rol
or
lods
imul
mov
bound
out
imul
mov
inc
rcr
cwde
icebp
jne
sbb
ds
push
jmp
sub
int
xlat
(bad)
in
jmp
ret
cmp
mov
jb
jno
jne
(bad)
mov
call
sbb
xchg
sub
mov
cli
cmp
hlt
imul
gs
jbe
ja
stos
adc
mov
adc
sbb
xor
lock
jb
inc
adc
and
cmp
jmp
fst
(bad)
sbb
in
into
in
div
mov
sub
adc
sbb
addr16
inc
leave
jo
mov
xor
pushf
popa
mov
mov
xchg
outs
xchg
sub
icebp
aas
retf
clc
add
push
and
push
cs
and
or
push
and
sbb
jle
mov
fmulp
mov
aad
retf
(bad)
stos
leave
sbb
loopne
stos
jmp
xchg
cmp
push
lock
mov
push
scas
(bad)
pop
inc
mov
sbb
imul
stos
push
pop
or
fsub
mov
xchg
inc
cmp
jmp
cdq
jge
les
mov
jnp
pop
hlt
pop
pop
jl
jecxz
jmp
test
out
adc
call
inc
add
sahf
or
pop
lahf
adc
push
ins
push
pop
scas
dec
mov
mov
mov
sti
test
jo
inc
ins
int3
stos
ins
call
(bad)
jecxz
dec
das
mov
xor
neg
imul
mov
pop
xor
xchg
clc
cmps
pop
jb
fidivr
(bad)
or
or
pusha
xchg
add
call
xchg
jne
dec
ds
mov
retf
fwait
outs
stc
pop
test
xor
pusha
daa
xchg
add
sbb
jle
adc
outs
cwde
sbb
leave
mov
mov
mov
jp
mov
(bad)
cmps
outs
or
retf
fld
xchg
adc
inc
adc
or
dec
jno
xchg
xchg
lods
retf
jp
dec
out
(bad)
jecxz
inc
push
(bad)
pop
mov
shr
xor
(bad)
dec
lods
aas
or
pop
xchg
ffree
loopne
ja
and
out
stc
in
mov
add
test
lock
lds
jae
jmp
sbb
cmp
lods
mov
inc
jmp
or
dec
add
adc
stc
jae
iret
cmps
retf
imul
das
lods
xor
icebp
mov
mov
mov
mov
push
in
xor
or
push
cmp
dec
push
lds
xor
sub
xchg
inc
aad
cs
jne
jb
bnd
mov
das
inc
lea
mov
pop
pop
xchg
push
daa
jg
into
in
sub
jl
mov
cmp
dec
xlat
pushf
out
movs
repnz
dec
jmp
pop
jb
or
fwait
jns
fmul
lea
jmp
rcr
adc
cmp
pop
cmp
sbb
or
addr16
add
mov
xor
push
scas
test
out
or
adc
jne
test
xchg
cmps
sub
jl
mov
pop
xchg
rcl
push
cmps
std
cs
dec
fldenv
fst
add
out
cmp
gs
ss
mov
cmp
or
mov
adc
ficom
sub
jle
or
push
add
rol
add
repz
adc
call
jnp
scas
scas
pusha
jne
xchg
pushf
mov
repz
jmp
outs
or
imul
stc
jnp
mov
xchg
fst
rol
neg
fdivr
movs
fnstenv
push
dec
mov
sub
cmp
jge
jbe
xor
(bad)
rcr
gs
in
pop
rol
mov
sub
mov
sub
mov
pop
jno
outs
or
sbb
mov
inc
pop
push
and
xor
mov
jmp
pusha
les
lahf
or
fisttp
push
inc
dec
ret
das
aam
jae
repz
inc
es
call
xlat
repz
mov
adc
in
sbb
std
cmp
cdq
iret
aam
lods
jno
mov
rcl
push
ror
lods
or
shl
es
xor
enter
or
lea
pop
add
outs
movs
cs
and
cmp
rcr
adc
inc
dec
add
shr
mov
pop
mov
cli
lods
push
test
xor
ins
jae
dec
push
js
imul
daa
int
in
dec
(bad)
aad
xchg
xchg
aad
mov
adc
adc
or
adc
jne
fcomp
pop
add
cld
les
cs
call
lds
cmps
jbe
scas
es
mov
jmp
test
dec
stos
jmp
popf
jge
sbb
mov
sub
cmp
and
sub
adc
sub
fldcw
jmp
gs
stos
dec
daa
jmp
cmps
pop
int
and
jl
mov
loope
ins
dec
mov
or
fisttp
outs
jae
cmps
sbb
pop
sbb
mov
or
retf
sub
fs
cli
(bad)
mov
mov
jno
(bad)
sbb
inc
xchg
clc
push
and
and
cmp
pmulhuw
push
shr
cli
ins
imul
xor
loope
dec
ret
inc
sbb
imul
aam
ja
cmp
pop
inc
or
sahf
pop
lahf
cmps
inc
imul
call
xor
shr
daa
bound
outs
test
sbb
add
outs
popa
stc
pop
mov
out
movs
fdivr
jle
and
cmp
cmp
cvtpi2ps
lock
push
cmp
jg
(bad)
dec
jae
out
jo
lods
test
adc
dec
jl
mov
aam
inc
test
das
sbb
xchg
fsubr
test
in
mov
fwait
popf
pop
std
sub
rol
mov
cmp
jb
dec
stos
or
add
sub
sbb
xor
aam
div
xlat
cmp
sahf
push
add
xchg
push
adc
adc
mov
test
xchg
mov
mov
sub
sbb
xor
arpl
rol
cmp
sahf
push
mov
aas
mov
jge
outs
pop
or
dec
lock
xchg
cmp
cmp
add
(bad)
nop
fldenv
sub
add
loope
retf
jns
cmp
push
mov
sub
add
fild
(bad)
out
in
ret
or
mov
xlat
pop
xchg
jmp
jbe
shl
sbb
mov
jecxz
xlat
lods
fucomp
push
cdq
inc
or
jae
iret
mov
leave
or
outs
rcr
outs
or
enter
jno
sub
xlat
stos
je
js
cmc
add
call
fdiv
fwait
push
lods
mov
(bad)
push
jnp
or
rcr
xchg
aad
adc
push
retf
xlat
and
fistp
push
and
mov
jp
leave
xchg
jb
std
dec
test
cmps
cmp
rol
stos
cmc
and
cmp
repnz
data16
and
push
sbb
dec
jle
xchg
mov
and
retf
mov
mov
mov
das
scas
ja
cmp
lods
and
cmc
add
sbb
stos
jmp
int3
pop
sub
and
stc
ins
sub
js
and
jecxz
cwde
sbb
push
shr
ss
addr16
mov
imul
xchg
push
hlt
(bad)
jl
pop
cli
fidiv
data16
enter
push
sub
jg
sub
or
adc
mov
out
or
sbb
and
or
ins
xchg
add
inc
fsub
aas
scas
mov
test
dec
pop
cdq
popf
(bad)
or
stos
icebp
ins
jecxz
cld
ins
lea
push
or
test
cmps
push
or
into
pop
lds
les
adc
ins
xor
aaa
in
jle
in
sbb
sub
jbe
mov
mov
and
ins
jmp
adc
pop
aas
or
fdivr
dec
xchg
mov
inc
jp
loop
mov
ror
or
mov
das
cmp
aaa
repz
xchg
sti
dec
lock
or
or
add
push
scas
mov
in
or
mov
loope
lds
inc
push
cmps
xchg
mov
lahf
mov
out
xor
and
xor
jle
out
jmp
arpl
ror
fisttp
jle
(bad)
mov
and
daa
cmp
scas
push
iret
test
mov
or
push
jo
jae
and
or
repnz
leave
cmp
lds
rcl
jle
add
mov
outs
scas
stos
push
(bad)
ss
inc
es
adc
cmp
daa
push
shr
icebp
push
mov
xor
sub
xor
cmp
pop
pop
xor
aad
pop
test
pop
mov
ins
cwde
xor
add
mov
push
mov
adc
jb
mov
es
fstp
xlat
cs
out
aas
scas
imul
lods
sbb
outs
das
sub
jne
or
xor
int3
lds
push
mov
xchg
add
lods
lds
inc
mov
adc
or
jmp
aam
mov
xlat
or
cmc
stos
test
mul
xchg
or
test
adc
mov
or
cs
xchg
rcr
cmp
les
in
ror
pop
test
mov
sbb
dec
psubusb
jmp
test
stc
movs
sub
mov
cmp
dec
adc
and
or
pop
movs
xchg
shl
inc
dec
mov
inc
dec
or
jns
popf
mov
adc
shl
jnp
movs
sbb
mov
sahf
popf
push
lea
pop
mov
aad
push
push
dec
test
mov
mov
xchg
mov
cmp
mov
and
pop
or
dec
adc
xchg
enter
mov
push
mov
pop
int
mov
sub
sub
and
mov
push
mov
pop
add
and
jecxz
(bad)
cmp
jle
and
pop
jns
call
xchg
(bad)
and
mov
or
in
stos
pop
cwde
pusha
cmps
inc
cmp
xchg
inc
push
adc
addr16
cmp
pushf
sub
loop
cmp
ins
sbb
cmp
out
pop
xor
ds
or
mov
inc
sbb
call
adc
mov
cmp
shl
mov
mov
push
repnz
test
hlt
push
into
stc
mov
mov
cmp
xlat
(bad)
inc
pop
push
push
push
push
xor
and
mov
jae
loop
shr
das
repz
jb
(bad)
mov
sti
mov
mov
cmp
sbb
ror
test
and
xchg
cwde
jecxz
clc
push
mov
ret
cli
cmp
cs
je
out
cmp
pop
cmp
mov
add
bound
push
(bad)
retf
add
enter
in
push
int
enter
xchg
ja
int
sbb
push
jnp
cmp
sbb
dec
cwde
pop
pop
jmp
inc
add
fisubr
jecxz
les
mov
push
test
xchg
xor
mov
and
lea
push
mov
dec
pop
dec
in
jle
imul
jnp
fwait
inc
jle
pop
fbld
push
jmp
or
lods
cdq
sbb
add
shl
push
pop
push
iret
inc
dec
fs
sbb
rcl
adc
fwait
xchg
jnp
sub
mov
or
nop
sub
mov
retf
retf
test
popf
pop
not
dec
shr
cmps
mov
fs
daa
and
scas
xchg
gs
inc
pop
jecxz
iret
add
in
(bad)
jno
mov
dec
push
add
fisubr
fstp
in
dec
stc
xchg
dec
sub
in
mov
gs
lock
cmc
add
xor
jp
add
pop
fsub
jge
mov
sub
outs
stc
int
mov
icebp
std
push
shl
into
sbb
imul
cdq
retw
or
push
call
mov
lods
das
retf
stc
push
pop
inc
pusha
test
and
popa
aam
add
cmp
hlt
add
cmps
fcmovb
dec
xor
test
jne
dec
jg
or
daa
mov
pop
mov
je
jne
dec
mov
outs
nop
jbe
out
(bad)
adc
ins
addr16
push
add
test
or
add
or
sub
out
cwde
cmps
adc
xchg
shl
pop
sub
adc
push
dec
mov
lds
int3
cwde
mov
sub
or
int
pop
pushf
psubusw
sbb
adc
inc
jl
mov
std
xor
mov
xchg
stc
xchg
aaa
sub
arpl
int
dec
pop
mov
xor
cmps
pop
bound
fstp
movs
push
icebp
mov
push
cli
test
pop
int3
cmps
and
cmp
outs
pop
mov
pop
les
loopne
fcom
fidivr
popf
sbb
std
mov
pop
cmc
jl
pusha
push
xchg
neg
sti
sar
aam
push
jge
mov
repz
icebp
std
not
pushf
call
jno
dec
loope
dec
or
mov
lds
sub
jo
fwait
cmps
rol
das
cdq
dec
mov
call
mov
sbb
inc
in
out
retf
adc
into
(bad)
sub
jns
aas
mov
cmp
sti
sahf
repnz
data16
add
dec
repnz
ret
cmp
or
movs
push
ss
and
and
sbb
ret
(bad)
maxps
sub
rcl
rcr
out
add
xor
lea
mov
pop
add
push
ja
mov
adc
dec
int3
cmp
ret
jno
push
mov
adc
xchg
stos
ja
enter
mov
mov
dec
xor
fnstcw
and
cmc
mov
jg
adc
xor
das
cmps
push
xchg
rol
adc
leave
lds
in
or
mov
mov
inc
sub
dec
bound
icebp
mov
call
jg
fiadd
dec
add
push
jae
mov
ja
aad
fisubr
pushf
jl
and
and
loop
and
push
mov
repnz
xor
(bad)
sbb
out
enter
adc
lds
sar
pop
and
pop
inc
push
add
push
add
mov
push
repz
and
call
push
dec
mov
out
and
xchg
cld
je
and
fsubr
add
retf
add
cmp
xchg
jmp
push
or
mov
mov
outs
sub
neg
loop
fist
add
imul
pop
xchg
rol
or
jmp
int3
xchg
aam
dec
adc
sahf
xchg
mov
les
xchg
sbb
pop
pushf
xor
pop
jecxz
adc
cmp
retf
xchg
inc
retf
or
add
pop
repnz
xchg
and
jae
adc
cli
rcl
ret
out
mov
sub
loop
imul
pop
pushf
mov
dec
jmp
pop
fist
jo
cmp
lods
movs
or
ret
pop
dec
enter
inc
inc
retf
(bad)
push
pop
arpl
mov
outs
inc
mov
test
out
pop
pop
out
adc
sahf
pusha
sub
ret
repz
xor
out
adc
xchg
xor
fucom
movs
call
xchg
sbb
fmul
ins
mov
pop
sub
in
(bad)
ficomp
icebp
jb
mov
push
push
mov
adc
gs
in
data16
addr16
mov
dec
xchg
or
daa
push
mov
xchg
retf
call
cmp
xchg
movs
sbb
or
and
and
ror
dec
xchg
xor
aam
movs
mov
cmp
mov
cmp
xchg
in
add
xor
cmp
out
pop
lods
add
not
mov
aaa
adc
pop
out
(bad)
mov
fs
pop
aad
mov
(bad)
outs
sub
xchg
(bad)
xor
sub
sbb
mov
xor
aas
gs
popf
pop
sbb
and
fisubr
ds
into
dec
xchg
pop
ja
sbb
xchg
and
sub
mov
dec
xor
ror
xor
cmp
dec
ret
ror
jp
test
xor
imul
leave
call
pop
lods
std
xlat
inc
nop
out
mov
arpl
or
retf
mov
iret
repz
scas
mov
pop
std
inc
shr
jmp
pop
dec
mov
movs
push
test
mov
jno
les
mov
cli
dec
pop
cs
inc
adc
rcr
pop
and
ins
inc
adc
lods
lock
lock
in
xlat
or
repnz
sub
or
jae
cmp
mov
mov
adc
adc
xor
pop
xlat
pusha
aaa
cwde
xor
sub
mov
repz
js
jecxz
rcr
fnstsw
jno
rcr
pop
pop
icebp
fist
fldcw
pop
ins
adc
bound
int3
jge
pop
mov
push
sti
push
cmp
ss
in
(bad)
push
dec
cmps
push
mov
stos
mov
cdq
jb
mov
pop
mov
ret
xchg
sub
std
pushf
cmc
ret
add
adc
jb
stos
cli
repnz
pusha
cmps
adc
test
lods
imul
sbb
movs
ss
out
mov
jno
retf
pushf
cmp
mov
daa
ss
dec
(bad)
retf
fsub
or
jecxz
aaa
(bad)
xchg
and
and
fcomp
cmp
test
ret
in
adc
das
into
mov
(bad)
int
mul
sub
lea
fs
and
out
fldcw
push
sub
call
aad
dec
ja
cmps
lds
test
inc
arpl
iret
lods
movaps
mov
js
mov
ret
xchg
loopne
sub
test
ret
xchg
xor
pop
cmp
data16
cmps
jecxz
les
mov
sub
movs
cwde
test
retf
mov
(bad)
or
xchg
adc
or
(bad)
mov
and
inc
add
pop
ds
xchg
cmp
push
pop
mov
imul
xor
gs
push
ja
aad
out
inc
call
pushf
xor
in
pop
ret
push
dec
fs
push
popf
pushf
mov
add
outs
lods
daa
pop
xor
fnclex
jp
cli
or
mov
js
sbb
outs
add
adc
aam
adc
inc
test
ret
or
mov
pop
loop
ret
and
aad
add
xchg
jmp
or
mov
push
imul
jns
mov
pop
sar
xchg
jno
(bad)
sti
out
sub
sub
cmp
push
pop
in
mov
xchg
inc
push
xchg
stc
fdivr
loopne
push
mov
imul
cs
inc
xor
push
je
popf
sti
add
inc
enter
jecxz
dec
xchg
pop
(bad)
stos
movs
int3
fs
test
jl
and
outs
cmp
pop
push
jbe
loopne
rol
in
push
rcr
jecxz
add
xchg
scas
xchg
xchg
js
in
int
jno
xchg
jmp
(bad)
push
and
lock
adc
adc
mov
stc
(bad)
mov
mov
je
mov
sub
or
mov
xor
mov
arpl
cld
or
inc
movs
inc
movs
push
jbe
add
cmp
or
repnz
adc
out
aad
stos
fs
xchg
adc
inc
pop
(bad)
dec
(bad)
ret
add
je
xchg
aaa
inc
inc
jmp
adc
adc
ins
cmp
inc
(bad)
push
and
popa
jnp
fild
xchg
cmp
cdq
mov
(bad)
jmp
cmps
mov
mov
inc
outs
xor
test
sbb
push
test
loop
sbb
dec
es
dec
sub
rol
out
add
xchg
push
ss
ja
mov
adc
loope
xchg
rcl
mov
fnsave
xchg
xchg
(bad)
jo
sub
dec
stos
xchg
in
arpl
pop
loope
push
fdivr
fdivr
test
inc
fld
mov
pop
fnstsw
in
retf
cmp
aas
inc
imul
sub
mov
mov
dec
push
push
std
loope
ja
cmp
pop
mov
fstp
push
mov
mov
mov
xchg
or
add
jmp
xor
aam
add
pop
(bad)
mov
xor
xchg
sub
sub
movs
mov
mov
xchg
retf
bound
mov
rol
mov
jg
jo
xchg
pop
mov
fild
gs
push
add
arpl
loop
lods
retf
loop
push
mov
or
xchg
jmp
test
and
mov
push
lods
jl
sahf
xchg
leave
clc
mov
ret
aaa
mov
push
js
mov
dec
jle
scas
loope
and
mov
xlat
mov
lods
adc
and
lods
pushf
push
retf
ficom
and
and
mov
ins
stc
clc
rcl
outs
sub
pop
pop
outs
es
xchg
xchg
call
and
jge
and
fwait
inc
jne
pushf
push
mov
adc
stc
inc
std
int3
and
push
(bad)
push
lahf
jo
loope
pop
jecxz
std
mov
or
or
inc
mov
xchg
je
retf
(bad)
jnp
or
or
add
push
mov
cdq
jl
movs
dec
pop
ins
retf
ins
sti
js
sbb
sub
mov
dec
mov
xchg
push
in
ret
aam
cmp
pop
pop
inc
jmp
push
in
mov
retf
add
cmp
inc
aaa
(bad)
pop
shr
fisubr
sub
fild
fisubr
xchg
iret
sahf
fmul
xlat
or
and
sub
ins
mov
xor
mov
out
add
pushf
add
out
sub
mov
rcr
pop
stos
in
cmp
in
cld
retf
aam
js
or
pop
aaa
xchg
fimul
jmp
or
xchg
outs
jge
sub
aaa
movs
pop
dec
ret
inc
add
pop
xchg
rcl
jmp
popf
enter
jmp
dec
sbb
and
jge
jp
sbb
dec
xchg
inc
jne
mov
gs
scas
or
mov
xchg
leavew
fsubr
dec
es
inc
ss
popf
push
imul
mov
push
hlt
and
jg
popa
mov
jmp
lahf
and
cmp
fcom
cmp
and
and
mov
mov
aaa
lods
adc
xor
scas
(bad)
sahf
adc
pop
xor
jno
mov
std
jae
sub
lods
aas
push
push
cmp
sub
mov
xor
inc
in
pop
ficom
and
mov
call
scas
push
adc
not
xchg
out
xor
inc
sbb
mov
pop
clc
mov
out
repz
jg
mov
mov
(bad)
cld
or
inc
ds
pop
push
call
mov
and
scas
or
mov
sar
cdq
daa
pop
call
xchg
int3
fiadd
xor
mov
ins
out
push
leave
xor
mov
mov
std
sub
repz
xor
fsubr
adc
add
rcl
pop
inc
add
test
cmp
jl
dec
dec
int3
adc
inc
into
aas
sub
cmp
or
inc
xchg
mov
xchg
jecxz
and
cs
add
stc
add
std
js
out
loopne
js
add
xor
test
push
push
cmp
mov
pop
pop
bound
in
icebp
int
inc
mov
data16
mov
push
test
aam
addr16
mov
loopne
ss
push
adc
mov
push
jmp
out
ins
xor
out
push
cmps
sbb
jae
mov
and
imul
jns
(bad)
mov
fild
xor
stc
scas
sbb
fwait
hlt
mov
out
das
ins
push
cwde
pop
inc
test
push
popf
test
out
out
add
bsf
ja
xor
(bad)
mov
adc
jmp
xor
loope
adc
cmp
dec
jg
stos
ret
or
sti
or
cld
cdq
mov
outs
cmp
leave
loop
or
xchg
nop
stos
xchg
dec
mov
push
xor
lahf
and
cli
bound
ins
mov
in
add
push
cmp
and
stos
aaa
jge
inc
fs
push
or
bound
stc
dec
jp
out
inc
mov
clc
je
mov
gs
add
out
push
out
scas
call
dec
rcr
clc
in
pop
ffreep
pop
or
ss
cmps
cmp
or
inc
cwde
(bad)
aad
imul
push
adc
dec
pop
jmp
sahf
cli
xchg
imul
xchg
fdivr
pop
out
push
xchg
xchg
outs
mov
inc
cmp
mov
fwait
push
sub
ja
jmp
(bad)
sub
or
sti
out
fld
data16
stos
ror
ret
scas
fild
call
and
sub
stos
(bad)
fsubr
out
dec
xchg
loopne
or
jae
jb
jo
fstp
push
ret
adc
sahf
pop
xchg
and
data16
xchg
inc
inc
pop
xchg
fldenv
(bad)
fldl2e
mov
xlat
adc
xor
cli
int3
mov
imul
mov
rol
xlat
or
cmp
bound
pop
mov
out
mov
add
dec
lahf
adc
ret
jne
jg
(bad)
mov
arpl
ins
cmp
jmp
push
dec
ror
rcl
add
icebp
(bad)
jno
xor
je
ror
xchg
jmp
inc
and
mov
pop
jmp
shr
mov
and
js
repz
aad
fdiv
mov
inc
inc
loope
nop
adc
sub
mov
xor
mov
(bad)
or
loope
je
ins
xlat
movs
inc
mov
inc
sub
mov
push
push
loope
adc
(bad)
push
fldcw
shr
xor
mov
fisttp
jmp
mov
shl
test
(bad)
lods
jno
daa
out
push
sahf
mov
repnz
fnsave
push
mov
cld
sub
xchg
adc
test
xchg
and
popa
out
mov
sub
mov
add
sti
sub
push
jmp
repz
aas
mov
data16
jl
jns
lods
jns
icebp
arpl
pop
pop
lods
dec
xchg
and
sbb
dec
jle
arpl
or
ficomp
xchg
sbb
es
loop
jo
sub
push
clc
adc
mov
xchg
xchg
push
iret
push
fld
imul
arpl
pop
idiv
sub
in
mov
xor
dec
xor
repnz
xchg
xchg
iret
js
popf
pop
xchg
lock
and
inc
dec
dec
mov
sub
(bad)
jle
xchg
leave
fsubr
retf
(bad)
data16
dec
daa
mov
cmc
sbb
mov
out
xor
push
sbb
jns
push
sub
lea
and
call
inc
fucom
pop
stos
adc
sbb
sbb
mov
cmp
shl
addr16
ret
push
daa
xor
aam
push
pop
sbb
xchg
and
jmp
xchg
xchg
mul
data16
sbb
cmp
fsubp
mov
fwait
xchg
jg
lods
xor
fist
push
sbb
inc
add
add
mov
mov
aam
stc
pop
fild
cmp
ins
ins
push
ja
xchg
push
sub
aas
xchg
addr16
cdq
xchg
jno
retf
fstp
pop
mov
xor
pop
dec
aad
inc
and
adc
nop
lea
jmp
out
lock
jne
out
mov
fcom
inc
lods
push
test
push
mov
ret
mov
jmp
(bad)
shl
test
cli
mov
lock
pop
cmp
in
xchg
rol
mov
mov
movs
push
mov
fadd
add
cdq
aas
pop
push
nop
jle
pop
cmp
cli
mov
popf
aam
push
xchg
leave
jnp
pop
mov
mov
sar
inc
mov
movs
mov
adc
popa
ss
adc
xor
jle
scas
and
in
cmp
pop
mov
jle
cmp
mov
int3
aam
test
imul
adc
popa
pushf
call
retf
mov
mov
fs
push
and
or
call
jns
pushf
sahf
into
movs
sahf
outs
ins
push
jle
jge
inc
pop
mov
outs
ins
not
test
add
cwde
adc
jg
and
or
sbb
ret
in
loopne
inc
push
test
aaa
ret
fcomp
hlt
sub
dec
arpl
outs
mov
(bad)
cmps
or
adc
popa
aaa
jmp
jns
lds
pop
jbe
in
xchg
std
mov
jle
add
xchg
test
psubusb
jecxz
ror
jno
std
int3
push
jmp
iret
add
cmp
outs
jecxz
push
es
and
jp
mov
fcom
pusha
push
(bad)
mul
dec
out
repz
jmp
push
sub
and
pop
test
stos
icebp
imul
ins
mov
add
stos
cmp
pushf
xor
iret
loopne
add
jnp
and
pop
sub
cwde
je
popf
das
pop
popf
scas
mov
repz
jae
(bad)
cmp
sub
pusha
cmp
mov
imul
mov
rol
cmc
or
push
xor
std
das
loop
bound
cli
cdq
mov
inc
push
sti
retf
push
stc
mov
xchg
sbb
mov
(bad)
rol
add
fsubp
sub
test
jmp
das
adc
mov
fdiv
lods
cmp
out
pop
lods
scas
mov
sub
(bad)
aas
(bad)
cld
adc
ins
adc
xchg
clc
sub
daa
arpl
jl
inc
stc
ins
push
fcmovne
mov
in
movs
mov
sub
imul
shl
dec
sub
add
loop
pop
add
xchg
inc
shr
xor
sahf
cmp
int3
xchg
add
lea
cs
dec
dec
call
fst
pop
mov
push
clc
xchg
sub
adc
pop
punpcklwd
rol
dec
dec
nop
inc
std
xchg
movs
enter
pop
int3
sub
lock
repnz
dec
cmp
cmp
bnd
popa
xchg
pop
aam
das
repz
clc
retf
test
scas
add
movhps
les
mov
retf
or
scas
ret
push
or
scas
sar
add
les
fnstsw
sbb
mov
arpl
xchg
mov
adc
in
aas
dec
xchg
pop
jge
pop
xor
sub
sub
shr
sti
or
div
add
(bad)
lock
xchg
push
rol
dec
das
stc
cld
in
int3
cmp
cmp
add
xchg
adc
ja
xor
mov
clc
jmp
gs
xchg
in
cld
pop
xchg
stos
cmps
jo
les
(bad)
mov
jmp
pop
sub
mov
fwait
sbb
push
cmp
cmps
sub
loope
push
dec
pop
lods
call
jg
pop
outs
mov
sub
addr16
xor
push
push
cwde
adc
out
pop
jecxz
mov
sub
in
outs
sub
andps
pusha
loope
into
dec
or
js
shl
inc
enter
imul
add
int3
dec
aam
enter
sub
cmp
push
je
sub
pop
pause
rcr
adc
push
ror
sub
xchg
xor
repnz
mov
dec
xor
clc
or
or
mov
sbb
lahf
enter
or
push
stos
or
pop
jle
push
xor
popa
add
in
mov
xor
jle
scas
fimul
xchg
jnp
rol
jle
fild
and
sahf
in
out
jae
jbe
minps
stos
dec
cmp
cmp
push
loopne
push
pandn
retf
mov
push
sub
inc
(bad)
hlt
int
mov
les
xchg
ret
push
add
fidiv
push
push
jnp
cmc
jo
push
mov
fbld
call
rcl
push
adc
pop
jne
jnp
pop
or
loope
mov
mov
xor
push
clc
outs
ja
sbb
rcr
mov
bound
mov
mov
lods
iret
loopne
dec
dec
jmp
or
pop
mov
outs
(bad)
or
pushf
pop
mov
jecxz
push
(bad)
mov
repz
mov
push
or
cdq
ss
rcr
into
hlt
scas
test
cli
dec
cmp
xor
dec
jge
mov
imul
gs
sbb
cmp
inc
add
pusha
fs
push
adc
retf
ret
mov
jp
loop
inc
das
or
dec
push
push
call
xchg
jae
sub
out
or
xlat
add
mov
jb
lds
loop
dec
(bad)
xchg
mov
xor
in
mov
xor
je
dec
sub
xchg
push
mov
sbb
pop
fadd
fadd
pop
dec
push
mov
retf
stc
jae
mov
or
xor
sbb
outs
inc
xor
test
cmp
jbe
sar
movs
cmp
stos
out
mov
ret
jl
lahf
je
push
test
inc
push
and
jmp
sub
xor
in
call
push
or
dec
pop
inc
shl
sbb
xchg
pop
mov
jno
addr16
push
pop
xchg
mov
(bad)
pop
dec
sahf
retf
xlat
scas
enter
inc
stc
mov
cmp
gs
dec
movs
out
xchg
mov
inc
jmp
nop
aas
fwait
cs
(bad)
fiadd
ficomp
and
cmps
mov
cli
sbb
addr16
lock
popa
adc
test
jns
in
jmp
call
das
and
sbb
stos
popa
jae
push
repnz
sar
inc
pop
imul
xor
popf
js
mov
aas
repz
mov
imul
mov
pop
mov
adc
and
aaa
pusha
sub
cmp
sbb
adc
or
bound
push
data16
aas
sbb
(bad)
mov
pop
repnz
les
jne
bound
ror
in
gs
mov
ret
xchg
mov
inc
sahf
arpl
sti
add
mov
and
call
test
or
ins
dec
add
dec
xor
adc
test
or
adc
cmp
outs
and
push
ins
sub
and
lahf
jnp
mov
jg
and
xchg
xchg
add
push
lock
jmp
inc
leave
not
in
jecxz
dec
mov
clc
lods
fcomp
stos
jp
int3
mov
shl
jno
das
pop
dec
out
or
cmp
test
sub
not
pushf
fst
sti
js
push
cmps
aad
inc
dec
outs
sub
imul
jmp
ja
lods
js
push
sar
cmps
mov
popf
jmp
cli
mov
pop
xchg
xlat
fwait
sahf
loopne
dec
xor
fsubr
jae
push
lds
mov
fldcw
lahf
js
mul
mov
mov
adc
arpl
cwde
add
into
stos
(bad)
dec
add
pop
cmps
adc
xor
pushf
enter
bound
add
pop
(bad)
jnp
push
in
fst
js
js
mov
test
mov
mov
hlt
or
mov
cmp
in
in
mov
push
fst
div
call
fisubr
das
shl
cmp
mov
push
aad
sub
push
cmp
xchg
icebp
sbb
inc
std
mov
cdq
xchg
jl
fisubr
push
jp
and
cld
cmp
popf
mov
jle
rcr
sub
mov
mov
nop
ficomp
sub
data16
jge
sub
ins
push
mov
jbe
sub
xchg
mov
xchg
int3
fadd
xchg
cmps
in
mov
pop
retf
test
dec
mov
push
ins
add
sub
push
mov
lea
out
jo
mov
fcom
xor
cmp
popf
jb
pop
dec
int
imul
push
or
out
sahf
pop
cmp
jmp
xor
bnd
jne
fs
and
addr16
scas
sub
mov
(bad)
imul
mov
addr16
fldcw
pop
jp
push
jmp
pop
push
adc
in
pop
out
and
dec
lahf
push
inc
mov
clc
pop
rol
inc
dec
aam
pop
adc
shr
sub
sahf
xor
test
in
sbb
push
ins
xchg
fsubr
xchg
leave
mov
(bad)
sar
mov
push
imul
dec
in
les
(bad)
sub
sbb
shl
(bad)
sub
pop
mov
mov
cmp
or
dec
jns
pop
xchg
fnstsw
loopne
dec
mov
in
push
inc
xchg
mov
inc
call
dec
pushf
push
cmp
push
sbb
xlat
imul
xor
loopne
xor
adc
sahf
sbb
fcmovbe
retf
or
fild
mov
or
dec
sbb
pop
dec
cli
or
in
xor
adc
push
mov
add
(bad)
jle
inc
xor
nop
pop
scas
adc
outs
(bad)
xchg
pop
lock
imul
idiv
out
jmp
pop
(bad)
sub
and
popa
push
das
cmp
imul
xor
mov
pop
push
pop
arpl
sar
lock
jns
es
add
loop
push
inc
rcl
or
clc
lods
out
sub
and
(bad)
lock
mov
push
hlt
and
nop
fwait
movs
push
mov
fst
or
cmc
mov
cdq
out
adc
jge
inc
dec
frstor
in
pop
pop
cmp
fwait
mov
in
cmp
pop
out
jbe
das
or
sub
mov
cmps
imul
sub
jge
loope
xchg
shl
pushf
stos
jno
cmp
jg
mov
mov
xor
gs
add
(bad)
scas
pop
and
jne
mov
xchg
iret
cmp
popa
lahf
or
push
dec
mov
jno
fs
mov
pusha
xor
cmp
pop
adc
pusha
repnz
mov
pop
cmp
push
add
stc
inc
xchg
mov
daa
xchg
sbb
inc
mov
mov
imul
popa
jne
jmp
xchg
dec
daa
and
retf
inc
xchg
push
mov
std
jmp
adc
fisttp
test
outs
jo
add
arpl
retf
jg
mov
mov
std
mov
push
movs
pushf
jb
adc
addr16
cs
adc
sbb
loope
or
xor
or
lahf
gs
sbb
sub
ror
mov
daa
ds
fcmovbe
stos
sub
out
fnstcw
stc
lahf
mov
test
(bad)
jbe
int3
popa
mov
mov
frstor
and
lods
fimul
adc
cmovle
out
popf
xor
add
leave
xchg
xchg
cmps
pop
fcmovnbe
jmp
fs
cmp
jnp
cdq
pop
sub
mov
popa
push
daa
adc
test
cld
daa
sar
les
out
push
mov
inc
(bad)
add
cmp
add
jl
xchg
cli
fldenv
shl
in
cmp
mov
stos
push
cmps
and
mov
shl
stos
push
add
clc
(bad)
call
call
aad
cmp
mov
add
sbb
or
push
lock
fwait
out
mov
aam
jp
imul
sub
adc
push
push
jl
pusha
pop
scas
sahf
int3
or
pop
dec
bound
mov
mov
and
inc
sub
dec
add
push
mov
ja
push
les
adc
into
inc
pop
dec
enter
int3
outs
cmc
jae
cmps
in
(bad)
sbb
cmp
adc
fst
xchg
out
test
je
out
scas
repnz
cmps
add
mov
leave
out
sub
call
jmp
jb
clc
dec
cmp
pop
sbb
dec
mov
dec
nop
push
clc
cmp
mov
jmp
test
enter
xchg
pop
pop
outs
bound
ret
into
fcomi
push
stos
arpl
xor
enter
mov
in
push
loop
jmp
pop
in
push
imul
push
out
push
lods
sub
cmc
push
sub
pop
rcr
in
and
mov
xor
jecxz
ret
adc
add
fnstsw
clc
xor
in
rcl
xor
mov
jecxz
pop
xor
inc
lds
pop
inc
ds
pop
inc
popa
and
mov
hlt
xor
das
dec
dec
aad
or
cwde
mov
adc
inc
rol
xchg
das
out
in
repz
test
add
jns
int
dec
cmp
mov
cmp
add
jne
push
in
add
nop
std
sbb
icebp
cmc
pop
jmp
sub
lea
add
push
mov
and
int3
inc
mov
imul
mov
xchg
pop
xchg
sbb
je
(bad)
jecxz
cmp
sbb
cmp
fwait
or
adc
and
xor
push
ins
push
jno
leave
in
or
ja
cmp
dec
mov
jo
pop
sti
ja
pop
mov
icebp
icebp
retf
cmc
mov
mov
lahf
xor
mov
adc
pop
pop
cli
stc
mov
std
pusha
sbb
popf
sbb
cwde
xchg
test
aaa
and
aas
sub
push
mov
in
stos
mov
jns
pop
adc
lods
dec
mov
(bad)
jge
mov
sbb
fnstenv
dec
and
inc
imul
rcr
out
leave
sbb
pop
xchg
sub
or
stos
loopne
in
sub
push
dec
mov
jl
mov
int3
adc
mov
movs
rol
stos
fmul
sub
inc
sar
cmp
das
pusha
and
pop
call
pop
mov
retf
mov
call
fld1
xchg
pop
ins
loopne
push
cmp
bound
push
and
daa
aam
or
lods
stos
out
icebp
mov
arpl
(bad)
movs
(bad)
daa
test
and
mov
push
mov
nop
loopne
lds
fs
fidiv
mul
mov
jg
and
jns
inc
jp
inc
dec
jb
mov
sbb
lds
cmp
add
in
ds
xor
xchg
and
push
cmps
jbe
mov
lds
adc
lock
inc
js
stc
(bad)
jmp
ss
add
add
nop
or
jmp
rcl
push
dec
pushf
jle
aaa
mov
stc
adc
xlat
sbb
push
sub
dec
push
jo
das
mov
hlt
push
push
inc
mov
xchg
je
sbb
add
push
xchg
mov
mov
fcmovnu
in
into
jnp
inc
mov
ss
inc
mov
movs
inc
and
adc
mov
(bad)
in
push
fidivr
lods
fs
adc
xor
data16
out
and
sbb
push
mov
out
enter
std
call
fdivrp
clc
sub
xchg
test
lahf
jmp
xor
cmps
mov
psubd
cmc
adc
lahf
xchg
jge
push
adc
mov
or
xchg
inc
cmps
pop
jmp
xor
xlat
int3
jg
pop
xor
xchg
popf
mov
aaa
cmp
push
mov
retf
fldenv
aam
adc
lods
into
out
les
cmp
xchg
jge
fiadd
cmp
jle
push
fbstp
sahf
adc
push
call
(bad)
and
push
push
(bad)
push
dec
and
pushf
div
adc
(bad)
pop
rcr
adc
ja
aam
mov
cmp
call
out
mov
cmp
xchg
mov
jbe
jo
cmp
pop
mov
cs
dec
mov
fild
inc
movs
neg
daa
enter
and
jae
dec
push
xor
in
loopne
xor
gs
sub
jmp
mov
add
bound
jns
sti
push
sub
pop
cmp
fadd
push
sub
and
cli
ja
and
es
lea
or
xor
int
mov
mov
cmc
clc
pop
dec
pop
ss
dec
(bad)
lods
jae
xlat
lods
lods
pop
push
cs
retf
fisubr
popa
les
push
imul
mov
cli
pop
xchg
and
(bad)
xor
imul
push
xor
shl
push
es
sub
js
pop
int
call
rol
das
jp
fbld
xchg
sub
push
outs
lods
mov
fimul
out
fst
gs
sub
mov
outs
(bad)
sub
jnp
loop
leave
fucomi
push
pop
imul
add
test
push
or
out
stos
jmp
imul
inc
retf
sub
xchg
ror
loope
sbb
in
das
imul
xchg
add
test
pop
push
cmp
push
xor
jo
and
pop
push
push
shr
and
cmp
mov
xor
fnsave
sbb
add
inc
je
xor
cmc
pop
dec
xchg
add
jg
pop
test
in
sbb
add
xor
sbb
ds
rol
and
stc
je
test
mov
cmp
push
inc
ds
and
in
fwait
push
cmovbe
or
fwait
xchg
ret
js
dec
push
nop
jae
push
int
ret
(bad)
out
jp
test
test
sub
lods
and
les
mov
inc
inc
inc
sbb
xchg
test
and
les
cmp
fadd
xor
idiv
dec
std
cmp
sbb
jns
ja
jmp
and
aam
push
jl
and
fs
push
cdq
addr16
addr16
fdivr
cmp
outs
int
scas
mov
mov
sbb
mov
or
pop
in
sbb
(bad)
sub
cwde
inc
aas
sbb
mov
cmc
lock
inc
stc
xchg
aad
mov
sbb
pop
shr
cmps
je
pop
call
aam
push
pop
adc
cmps
add
jmp
mov
fcomp
test
add
sbb
arpl
add
pushf
frstor
xchg
ds
(bad)
xchg
mov
(bad)
mov
adc
out
sub
out
cmp
cmc
add
scas
mov
(bad)
fistp
fadd
(bad)
out
seto
xchg
in
mov
lods
aas
mov
jge
inc
pop
fldpi
jmp
pop
leave
outs
mov
xor
pop
sub
cmp
jnp
xchg
loope
mov
loop
sub
div
cwde
ret
xchg
sub
sar
mov
cmp
xchg
adc
xlat
dec
cmp
out
jecxz
in
out
loope
(bad)
shl
sub
xor
inc
adc
retf
jnp
mov
push
mov
cmp
xchg
sbb
mov
lods
jp
clc
mov
dec
mov
push
retf
rol
mov
das
jp
xchg
sbb
mov
adc
stc
cmp
(bad)
sti
mov
repnz
dec
mov
dec
enter
jns
jmp
addr16
lods
and
jmp
ss
adc
jbe
sbb
shl
adc
dec
sbb
pop
loopne
pop
mov
(bad)
retf
mov
fld
add
push
adc
sub
mov
outs
outs
xor
adc
(bad)
data16
repz
dec
outs
jg
push
or
fisttp
nop
sub
inc
aaa
hlt
or
addr16
add
loop
mov
push
cli
sbb
pop
fnstsw
push
sti
and
inc
inc
cmp
fisttp
(bad)
popa
aad
in
sub
mov
(bad)
idiv
push
add
adc
lods
push
mov
mov
pusha
inc
xlat
sbb
call
xchg
dec
repnz
stc
or
clc
and
pop
lahf
je
push
hlt
js
fdiv
cmp
pop
mov
inc
aaa
pop
inc
jecxz
jmp
repz
mov
xchg
daa
jnp
cmp
jo
cmps
xor
mov
pop
ins
adc
scas
add
sti
pop
adc
cmp
mov
jge
pop
adc
mov
movs
adc
mov
jne
int3
jb
push
cmp
jno
xchg
fadd
pop
xor
pop
xor
inc
aas
mov
xor
outs
push
push
fidivr
pop
push
ins
adc
lea
fisubr
mov
out
add
icebp
les
sub
int
std
(bad)
out
mov
into
out
inc
lods
pop
in
movs
fisttp
push
adc
mov
ins
ja
adc
xor
movs
dec
sbb
cli
xchg
shl
add
cmps
mov
rol
add
push
fisubr
and
shl
xor
mov
fnstenv
or
xchg
sbb
mov
dec
mov
xor
out
lock
mov
ds
mov
outs
adc
mov
push
xor
mov
or
ds
adc
xor
xchg
xor
mov
stos
jg
test
(bad)
cld
xchg
xchg
jl
push
push
iret
mov
popa
in
cmp
test
out
icebp
mov
add
fs
lahf
mov
dec
mov
(bad)
imul
sahf
mov
push
xor
rcr
xchg
ror
inc
pop
pop
cmp
test
out
dec
lds
in
rcr
int
call
jmp
out
sbb
leave
cs
mov
push
rcr
jp
jnp
adc
(bad)
(bad)
icebp
xchg
jp
(bad)
mov
add
test
stos
push
jle
mov
(bad)
jmp
aad
in
outs
and
cmp
(bad)
jg
inc
retf
leave
(bad)
out
mov
xor
jb
call
pop
sahf
cdq
or
push
cdq
or
int3
mov
cmc
out
push
out
lods
stc
jl
sbb
dec
sub
mov
jmp
sbb
stos
mov
stc
(bad)
aad
aad
adc
fst
push
nop
repnz
mov
scas
dec
dec
std
pop
push
test
out
mov
mov
xchg
int3
sub
mov
xchg
or
mov
sub
inc
mov
shl
xor
cmp
lahf
popa
retf
aas
call
lods
mov
push
xor
mov
push
cmp
hlt
dec
stc
shl
and
imul
mov
stos
ret
fwait
loopne
mov
repnz
push
jmp
and
fsub
sub
(bad)
(bad)
push
inc
lea
loop
dec
xchg
bound
push
out
push
jno
dec
cmp
ret
jge
loope
and
cmp
adc
xchg
jge
pushf
jl
out
dec
lods
jp
jmp
idiv
(bad)
(bad)
nop
adc
pusha
call
pop
pop
in
jecxz
jp
ins
fs
mov
adc
sub
lods
bound
xchg
rcl
lods
adc
shl
or
xchg
enter
nop
pop
inc
mov
das
pop
lods
(bad)
push
xchg
xor
iret
les
or
xchg
add
or
cmp
mov
int3
add
mov
mov
iret
jmp
jno
dec
xchg
arpl
sbb
xchg
in
push
jmp
inc
mov
ins
aam
mov
ins
mov
es
cld
jmp
sahf
outs
mov
addr16
aad
add
(bad)
in
test
es
mov
push
fmulp
sbb
sar
sbb
or
rcr
mov
sbb
pop
mov
aas
adc
nop
jo
sub
lahf
fild
sbb
mov
sahf
inc
in
outs
cmp
out
mov
fld
popf
imul
aaa
dec
daa
hlt
lods
mov
push
sub
pop
pop
mov
stc
ins
dec
mov
or
fild
pop
fiadd
out
add
dec
jae
xor
dec
loop
pop
sub
mov
adc
xchg
pop
enter
cmp
mov
lea
mov
int3
pop
scas
out
jns
test
mov
mov
and
mov
lock
test
inc
sbb
and
sbb
stc
(bad)
adc
and
nop
dec
jg
test
pop
test
xor
hlt
pop
bndstx
adc
xor
adc
jbe
xchg
sti
jg
mov
and
push
cmp
xor
call
dec
jecxz
cmp
int
add
ins
add
inc
pop
xchg
mov
ficom
call
mov
rcl
je
aam
cwde
nop
pushf
xchg
xlat
pop
pop
movs
jl
pop
retf
dec
outs
repnz
inc
adc
xchg
sbb
push
fadd
sbb
xor
test
mov
fsubr
ins
loopne
outs
push
pop
jne
imul
inc
jne
xchg
or
sub
add
push
ins
jle
shl
jne
inc
repnz
cmp
aad
and
and
mov
sub
pop
ror
in
(bad)
push
push
dec
and
push
(bad)
xchg
adc
mov
cli
iret
call
push
xor
lahf
xchg
and
inc
adc
lds
dec
aas
push
lea
enter
aad
test
lods
jae
cmps
retf
dec
rcl
dec
cmp
and
add
stos
ins
jle
push
sub
adc
nop
inc
add
ins
mov
aas
(bad)
adc
jl
cmp
lahf
adc
(bad)
dec
ret
jb
mov
push
sbb
mov
and
mov
mov
daa
lods
repnz
jbe
movs
pop
adc
inc
ins
cdq
(bad)
fist
mov
mov
push
in
adc
jecxz
mov
test
mov
pop
sbb
and
sub
xchg
mov
mov
sub
(bad)
jl
vxorps
sti
cmps
aad
jg
inc
xchg
jb
in
js
lods
cwde
and
xor
xchg
leave
shl
out
lfs
pop
paddsb
mov
div
xlat
xchg
mov
or
inc
push
adc
jl
ror
dec
sub
clc
ins
mov
mov
xor
ret
or
cmp
or
or
js
jmp
sbb
int3
cmp
retf
adc
pop
mov
jge
lods
mov
scas
xchg
inc
inc
dec
in
xor
push
push
jecxz
mov
int
xchg
movs
in
push
jno
clc
sbb
and
dec
inc
(bad)
dec
mov
add
lods
xchg
or
pop
in
pop
jmp
sub
daa
test
out
(bad)
fld
cmp
mov
sub
sbb
push
loope
push
repz
inc
dec
cmp
call
push
ret
retf
pop
jle
jb
jmp
mov
std
outs
call
push
adc
add
rol
push
mov
aam
and
enter
mov
imul
mov
inc
xor
pop
rcl
mov
shl
pop
fstp
or
xchg
lea
scas
popa
xchg
mov
sub
dec
sbb
dec
into
sbb
mov
cmps
mov
mov
movs
divps
sub
mov
inc
mov
push
adc
mov
inc
xor
bound
dec
xor
add
mov
stos
sub
(bad)
ret
pop
add
push
arpl
icebp
arpl
loopne
xor
push
adc
jmp
adc
jnp
push
jmp
xlat
ret
fcmovbe
in
test
ret
loop
inc
int
jg
(bad)
repnz
push
mov
push
dec
mov
arpl
sti
sbb
sbb
sbb
repz
and
rcl
cld
hlt
aam
xchg
jmp
push
push
outs
les
ja
stos
cdq
add
or
push
push
cmp
sub
dec
xlat
cmps
fbld
push
shl
mov
push
push
mov
dec
out
or
dec
stos
inc
ret
in
xor
fmul
sar
shr
adc
test
cs
adc
aad
xor
xor
lods
das
sub
outs
mov
scas
and
test
popf
adc
aas
push
outs
in
jmp
jb
dec
call
sbb
sahf
int
out
outs
pop
je
cmp
jb
dec
sbb
adc
stos
inc
inc
jne
imul
or
mov
mov
pop
cmp
push
or
push
shl
mov
sbb
inc
test
pop
aas
fimul
sahf
fidiv
repnz
mov
outs
sub
push
pop
pop
pop
les
gs
aam
aam
movs
cmp
add
dec
cdq
jecxz
jmp
(bad)
shr
out
daa
lea
sar
pop
push
mov
aas
adc
and
and
clc
mov
push
mov
jmp
or
jno
outs
pop
mov
rcr
adc
mov
(bad)
in
hlt
dec
jmp
mov
jno
push
cmp
or
xor
movs
and
in
and
sbb
adc
cdq
mov
xor
sbb
and
add
mul
loop
aam
les
cld
add
rcl
push
imul
sbb
xor
clc
xor
push
out
cmps
xor
stc
out
mov
mov
push
sbb
push
xchg
arpl
or
xchg
call
pop
jne
cdq
sub
mov
pop
jp
or
or
in
inc
fldenv
dec
mov
stos
dec
(bad)
adc
mov
ret
cmps
fstp
jp
pop
mov
jp
movs
sub
dec
imul
test
push
ds
dec
pop
or
push
jnp
int3
adc
push
push
dec
test
xchg
loopne
(bad)
push
test
pop
lock
pop
rcl
inc
repnz
sub
inc
dec
jge
loopne
dec
sub
retf
sbb
pop
pop
sbb
xchg
xchg
add
push
jae
or
popf
ja
arpl
mov
sub
push
test
mov
enter
dec
or
sub
retf
cmp
adc
test
cmps
inc
inc
xor
pop
movs
stc
sbb
mov
outs
push
ret
sub
inc
or
xchg
call
sub
ror
imul
cmp
gs
sbb
or
inc
js
xchg
xchg
es
(bad)
jmp
inc
ldmxcsr
test
mov
and
leave
pop
in
jbe
xlat
mov
fld
or
xchg
jmp
mov
pop
les
imul
xchg
adc
or
mov
stc
sbb
rcr
rcr
repz
movs
or
cmp
fst
sub
std
shl
(bad)
fistp
xor
imul
push
xchg
shr
aad
fist
das
push
pop
inc
repnz
in
cld
mov
inc
bound
and
pop
lods
mov
scas
cmp
xchg
mov
mov
xor
pop
mov
sbb
jecxz
pusha
pop
movs
aas
ror
call
inc
push
mov
shl
mov
or
or
and
and
xchg
jecxz
jne
pop
dec
xor
fist
mov
imul
bound
dec
mov
fdivr
inc
xchg
cmps
push
push
mov
repnz
lahf
adc
mov
mov
shl
pushf
leave
push
jmp
aaa
and
ret
sbb
arpl
mov
push
push
xchg
imul
push
dec
xchg
or
cmp
push
sbb
cmp
ins
xchg
stos
add
jae
mov
cmps
ja
sahf
push
leave
adc
sub
loopne
dec
xor
test
push
sub
or
aaa
rcr
into
repnz
jno
cmc
cmp
cmps
sub
or
mov
xchg
cmps
jo
inc
cmps
mov
aaa
cmp
ins
cs
or
data16
cmp
mov
retf
outs
pop
xchg
pusha
fwait
stc
jmp
mov
and
add
sti
rcr
das
nop
cmc
cmp
xor
test
(bad)
sahf
push
es
inc
hlt
push
movs
fnstenv
sub
add
dec
mov
mov
icebp
call
cmp
fwait
mov
imul
jbe
test
xchg
push
push
icebp
push
pusha
lahf
jmp
cmp
push
dec
inc
out
jmp
sbb
mov
adc
push
inc
sbb
xchg
retf
test
add
mov
inc
or
adc
(bad)
dec
das
add
push
std
cmps
jmp
mov
jmp
mov
icebp
in
out
mov
xchg
(bad)
out
fs
sub
cmps
xchg
and
sbb
adc
ja
xor
inc
call
cwde
cmp
clc
and
ins
pop
or
pop
dec
movs
je
mov
cdq
pop
mov
(bad)
movs
stc
rcr
jp
test
sbb
pop
lds
jge
mov
xor
shr
xor
aas
inc
out
mov
xchg
or
push
sbb
mov
lods
push
xor
jp
pop
dec
rol
inc
mov
sti
or
pop
imul
dec
clc
push
adc
inc
(bad)
jne
dec
adc
push
inc
xchg
xchg
in
pusha
fs
jg
lods
fst
sub
fistp
pop
cs
xchg
jns
pop
fadd
push
adc
stos
jmp
bound
cmp
mov
inc
pop
fld
adc
mov
push
in
mov
inc
mov
imul
or
jae
and
jne
mov
cmps
fs
mov
or
lea
lods
bswap
xchg
push
and
inc
mov
cmps
xchg
pop
ds
aaa
push
adc
test
cmp
pop
bound
xor
push
xchg
out
pop
hlt
sbb
and
pop
and
xchg
iret
cmp
adc
xchg
xchg
xchg
xlat
inc
leave
adc
push
leave
clc
adc
shl
or
push
xchg
jmp
cmp
scas
xchg
jnp
fdivr
and
call
xchg
mov
or
outs
inc
ins
push
ror
mov
jmp
in
cmc
cmps
cmp
and
movs
xor
or
mov
out
mov
ins
(bad)
call
sbb
retf
pop
cmps
pop
dec
scas
jns
or
and
js
mov
call
loope
and
push
xchg
gs
pop
das
loop
in
movs
mov
push
pop
div
fst
mov
out
add
retf
iret
or
jg
shr
fs
sub
sar
stos
in
inc
ret
cmp
mov
add
dec
push
pop
hlt
jae
xchg
ficomp
popa
xor
fld
adc
add
adc
gs
in
std
aaa
pop
jmp
jmp
arpl
movs
sahf
xor
mov
nop
movs
hlt
add
push
adc
add
in
ret
cwde
xchg
mov
loop
aas
mov
mov
or
pop
add
fcomip
out
mov
adc
in
dec
and
sbb
and
fprem1
xchg
nop
mov
mov
lds
fsubrp
cmp
ds
bound
movs
pop
jo
push
push
std
in
inc
push
scas
jns
pop
fmul
sahf
stc
sti
cdq
sbb
add
int3
call
mov
cmp
test
push
sbb
add
clc
loopne
repz
loop
push
mov
int
jbe
or
out
jb
and
adc
and
cli
push
icebp
rcr
stc
push
cmp
xchg
jae
sbb
xor
jb
jecxz
jmp
xchg
pop
adc
fst
push
sbb
jae
je
mov
cli
xor
jbe
clc
test
fist
and
test
inc
xor
outs
lods
sti
cli
shl
xor
out
sub
loop
dec
sbb
sbb
or
int3
mov
pop
call
fld
mov
imul
sbb
sbb
in
shr
push
mov
xchg
mov
mov
ins
je
shl
add
push
in
xchg
pop
rol
int
xor
xor
mov
lods
jbe
cmp
int
mov
sbb
cmp
out
dec
shl
inc
pop
mov
in
(bad)
cmp
jmp
xlat
pop
test
xchg
and
mov
pop
test
jle
dec
dec
push
push
sub
xor
inc
fs
cmps
sbb
arpl
shl
mov
dec
movs
mov
inc
ss
loopne
rol
xlat
xor
pop
push
mov
mov
sub
sahf
and
shr
test
ret
inc
call
iret
(bad)
in
aaa
or
add
in
and
push
sbb
cwde
retf
stos
sub
pop
mov
pop
fdivr
push
adc
outs
stos
cmp
test
or
cmc
cmp
mov
or
inc
xchg
jb
cdq
push
mov
(bad)
add
pop
pop
dec
daa
shl
adc
call
arpl
mov
sub
lds
sahf
in
fisub
mov
lods
mov
pop
inc
ins
mov
aad
aas
dec
or
enter
sbb
call
mov
xor
pop
dec
(bad)
dec
(bad)
and
mov
push
xor
call
fwait
daa
xchg
jmp
inc
outs
lock
loop
xor
add
shl
mov
idiv
or
clc
cmp
iret
sub
cli
xor
jmp
and
das
mov
pop
and
pushf
pop
jecxz
push
add
rol
push
mov
jp
(bad)
dec
or
je
out
mov
and
out
sbb
sti
mov
mov
int
adc
mov
loop
mov
mov
xor
stc
psllq
dec
sti
and
daa
(bad)
xlat
imul
int
sbb
nop
pop
ins
scas
dec
movs
aas
fs
inc
pop
pop
or
and
xchg
sti
je
cmps
repz
mov
mov
xor
dec
retf
jmp
push
push
push
dec
loope
jl
push
or
push
es
mov
adc
dec
jmp
jmp
mov
pushf
pop
rcr
xor
retf
mov
and
dec
sbb
mov
mov
adc
in
cmp
call
dec
inc
or
(bad)
pop
pop
lds
adc
sahf
cmc
pop
jmp
dec
adc
inc
add
xchg
(bad)
xchg
(bad)
xchg
js
jge
push
sbb
sbb
mov
imul
arpl
mov
jb
fdiv
sbb
mov
sub
into
xlat
cwde
rcr
arpl
inc
sti
cmp
repz
in
sbb
add
lahf
outs
js
ror
rcr
scas
ins
xchg
fisttp
adc
xchg
ins
sahf
cmp
icebp
and
jb
call
jge
(bad)
cdq
jecxz
repz
call
fwait
dec
sub
arpl
idiv
pop
jbe
scas
mov
addr16
cld
imul
hlt
sar
cmps
arpl
sbb
ficom
and
xor
and
jnp
js
in
jns
jecxz
dec
daa
fs
repnz
mov
jle
aad
es
imul
mov
pop
and
jg
and
sti
and
popa
neg
push
mov
push
push
or
cwde
addr16
mov
fld
cmc
into
aad
cmps
push
ja
shl
test
in
(bad)
mov
sub
jb
sub
test
fisttp
inc
mov
jbe
shr
push
jnp
pop
inc
xor
bound
daa
call
sbb
enter
or
add
dec
cmp
jae
pop
mov
les
cmps
sbb
(bad)
cmps
dec
dec
or
int3
ss
cmp
add
push
cmp
repnz
sub
or
out
add
sub
dec
xor
lods
adc
jo
pop
jbe
and
sub
mov
mov
pushf
sbb
in
mov
mov
xor
(bad)
sbb
inc
add
data16
sbb
(bad)
sub
adc
leave
mov
stc
xor
pop
jle
loope
sti
test
fcompp
test
cs
lds
retf
or
add
push
mov
call
push
(bad)
iret
push
cmp
jg
ins
xchg
pop
dec
push
ret
xchg
cld
test
fdivrp
retf
fnstsw
jo
sbb
aad
cmp
cmp
nop
out
add
mov
mov
push
xor
loop
(bad)
jne
and
mov
jns
xchg
inc
push
retf
(bad)
jmp
jmp
cli
mov
sbb
xor
mov
sub
loop
add
outs
jmp
dec
dec
call
fsubr
fcom
retf
ss
not
jae
out
inc
fist
js
jmp
cmp
add
jmp
mov
cdq
icebp
cmp
cmp
test
stos
rcr
and
clc
fs
mov
cmp
cmp
sbb
int3
arpl
bound
xlat
inc
mov
xor
adc
mov
jns
and
pop
das
mov
call
or
push
mov
lahf
sbb
nop
and
or
or
jmp
sbb
adc
ror
ret
imul
cmp
push
nop
jg
xchg
shr
stos
cli
and
and
cmp
cmp
adc
inc
cmps
fsubr
mov
stc
inc
mov
adc
cmps
xchg
adc
mov
ds
cwde
es
nop
cmp
adc
fisub
pop
mov
(bad)
int
jb
outs
mov
mov
mov
xchg
cmp
retf
mov
mov
mov
sbb
sub
push
push
push
fucom
js
inc
out
bound
add
fwait
mov
jb
mov
pop
loope
ins
iret
das
shr
adc
push
stc
gs
mov
and
add
push
dec
retf
lea
jge
fldenv
add
aas
aaa
js
jecxz
or
int3
mov
jo
loopne
mov
mov
lar
adc
jmp
int3
lahf
imul
(bad)
pop
mov
in
dec
adc
mov
fiadd
sbb
pminsw
jp
mov
test
push
cmc
loop
push
cmp
outs
mov
dec
mov
and
cwde
int3
std
inc
xor
pop
addr16
inc
ret
xor
push
mov
jg
xchg
push
cmp
sti
int3
jnp
shl
adc
fiadd
cmp
mov
stos
ret
jb
enter
rol
mov
pop
pop
test
test
inc
mov
ret
sbb
cdq
ds
pop
jmp
xchg
pop
daa
pop
pop
out
cmp
inc
xor
add
nop
add
jns
mov
(bad)
cmps
xor
fiadd
jnp
mov
cmp
dec
sbb
jecxz
add
arpl
mov
push
inc
daa
inc
mov
dec
es
jge
js
dec
mov
push
sub
or
in
jle
sub
xor
repz
in
arpl
fsub
xor
ficom
xchg
pusha
or
mov
cmp
outs
into
adc
add
sahf
or
call
cmp
pusha
iret
jge
enter
jmp
ficom
push
lock
inc
outs
shr
test
adc
cmp
and
add
std
mov
push
add
xor
(bad)
push
jl
mov
push
jp
pusha
inc
xchg
adc
push
out
jno
inc
fld
test
mov
add
test
mov
mov
adc
jno
(bad)
cmp
mov
int3
shl
inc
pop
fcom
mov
hlt
pop
(bad)
mov
and
xchg
jmp
pop
jmp
ja
push
aam
mov
ror
outs
inc
es
push
stc
ins
add
jno
adc
cmc
add
push
(bad)
mov
adc
adc
jl
xor
push
je
sbb
aas
xchg
pop
mov
loopne
and
sbb
or
jbe
add
cmps
inc
cwde
sub
mov
ja
aad
mov
scas
mov
xchg
fistp
push
sbb
mov
mov
(bad)
xchg
inc
push
js
push
jnp
sbb
push
push
sbb
pop
jle
test
and
push
inc
adc
shr
xchg
(bad)
loope
pushf
sub
pop
ret
sar
js
adc
xchg
jb
adc
cli
sub
mov
jns
mov
icebp
and
jo
inc
out
sub
pop
call
cmp
out
ds
icebp
jno
inc
dec
pop
dec
jle
cmp
iret
and
pop
pop
out
(bad)
stc
add
dec
lock
aaa
out
push
sbb
popf
lds
cld
sbb
test
pusha
in
inc
mov
fsub
mov
scas
jg
mov
mov
jl
jnp
imul
ss
push
lds
fstp
xor
das
inc
cmc
dec
pop
jecxz
test
fdiv
cmp
push
popf
sbb
jnp
(bad)
jecxz
xor
aaa
out
push
jbe
push
dec
(bad)
and
adc
psllw
scas
into
cmps
mov
xchg
jne
pusha
stos
mov
(bad)
sbb
or
test
push
sahf
xchg
mov
les
adc
data16
stos
stos
jae
push
ja
sub
mov
xor
mov
aam
sbb
gs
out
xchg
dec
adc
fst
je
ins
add
cmp
fist
jecxz
loop
mov
pop
push
aas
sbb
sub
dec
xchg
cmc
and
ds
(bad)
adc
cmp
jb
fistp
pop
push
mov
or
mov
popf
push
test
pop
mov
cmp
fimul
das
sub
xchg
push
jge
cdq
jne
sub
daa
scas
pop
or
ins
inc
mov
test
adc
inc
imul
icebp
cmp
pop
add
je
add
cs
fdivr
ins
int
lea
in
xor
inc
out
jecxz
mov
call
jmp
aas
pop
xor
mov
ins
dec
dec
(bad)
call
mov
neg
into
push
push
dec
sti
daa
lahf
and
jno
mov
fs
pop
mov
jae
sbb
in
xchg
xchg
push
add
imul
ror
dec
scas
mov
imul
fld
push
jne
cmp
sub
adc
dec
(bad)
mov
adc
sub
inc
mov
imul
adc
loop
mov
jle
inc
push
fadd
shr
lea
or
dec
test
out
in
mov
and
pop
sub
xchg
call
hlt
mov
xchg
mov
ja
std
aad
out
jmp
test
mov
mov
ss
daa
jnp
sbb
fidivr
push
or
add
push
add
repnz
popf
mov
sbb
push
(bad)
push
xchg
mov
int
jae
nop
mov
xchg
outs
add
test
dec
cwde
pop
sbb
cmp
(bad)
pop
data16
mov
xor
retf
iret
stc
mov
daa
xchg
stos
inc
mov
es
push
sub
mov
ficomp
pop
inc
jmp
cmp
stos
cmp
jle
add
test
outs
iret
lea
dec
stos
jns
sub
in
xor
(bad)
jl
aas
(bad)
xchg
push
adc
test
into
push
or
xchg
stos
push
pop
movs
or
test
mov
inc
iret
dec
pop
push
arpl
jo
sub
mov
jno
jmp
pop
dec
push
ss
ds
test
mov
fnstenv
or
pop
hlt
cmc
xchg
mov
test
arpl
ins
cli
hlt
aas
shr
or
push
scas
add
dec
test
adc
jno
push
jl
les
jnp
or
pop
xchg
and
cmp
outs
push
shr
pop
sub
add
dec
aaa
movs
pcmpeqd
xor
push
fmul
test
xchg
mov
jns
push
sbb
pop
jmp
lods
push
dec
(bad)
cmp
lahf
xchg
push
sub
popa
mov
stc
mov
js
int
out
push
push
in
push
cmp
sbb
mov
jl
stc
jo
and
adc
outs
test
cmps
xlat
and
es
mov
mov
retf
mov
sub
pop
add
loopne
setge
mov
pop
xor
push
cmp
fwait
in
leave
out
push
call
cmc
ret
leave
hlt
xor
(bad)
retf
jbe
mov
stos
add
aas
leave
mov
cmp
mov
aam
test
adc
sbb
dec
cmp
pop
stc
push
jmp
(bad)
fstp
mov
add
lea
mov
mov
cmp
dec
mov
jp
mov
adc
xchg
or
ja
mov
sti
das
mov
add
sub
cmp
aas
sbb
mov
test
pop
sbb
mov
mov
stos
cmc
mov
mov
in
into
inc
inc
xchg
mov
mov
repz
jbe
stos
push
ret
dec
xor
xor
out
push
in
cmps
call
cmps
jle
dec
ret
rcr
pop
lods
xor
add
mov
xor
xchg
popf
lods
ret
dec
mov
and
inc
xchg
clc
mov
and
xchg
jb
xor
in
sbb
pop
lea
adc
and
and
fld
fisubr
dec
jns
popf
stos
lods
lea
cmp
mov
arpl
fcmovne
ret
mov
jp
in
(bad)
les
adc
sub
sti
jns
dec
cwde
xor
fcomp
xchg
lods
mov
or
mov
addr16
jle
repnz
jb
cwde
mov
cmp
ret
cli
adc
cs
pop
jmp
cmp
cmps
and
jp
and
adc
lahf
movs
sbb
gs
ret
mov
or
add
lds
stc
or
mov
add
pop
ins
mov
push
and
outs
(bad)
xor
test
mov
lahf
cmp
mov
lahf
shl
cld
imul
cmp
popa
sub
dec
sar
mov
xchg
pushf
in
jl
lea
adc
fist
inc
cmp
jmp
call
ret
add
imul
cmps
pop
js
xor
in
dec
ror
(bad)
cmp
push
loope
dec
leave
push
and
lods
mov
loope
fld
sbb
jl
xchg
lods
jp
in
jnp
dec
pop
pop
sub
iret
sbb
retf
pop
inc
mov
xchg
cmp
inc
not
retf
lods
add
add
pop
fcomi
pop
loopne
idiv
mov
dec
xor
in
ret
pop
xchg
nop
repz
cmps
cmps
pop
cmp
jae
sub
scas
addr16
add
xor
and
es
in
inc
pop
sbb
lds
mov
push
jp
pop
xchg
clc
inc
or
inc
mov
dec
popa
add
jo
or
xchg
outs
fdivr
movs
cmp
xlat
aad
lds
mov
cmp
inc
cmp
pop
jge
ins
lds
dec
(bad)
xchg
mov
sbb
loop
nop
(bad)
aas
xor
add
iret
arpl
jle
mov
fidivr
jp
in
ja
xor
fimul
bnd
xchg
leave
jns
add
and
int3
test
lds
sbb
outs
dec
aam
jmp
and
xchg
lahf
adc
or
mov
jmp
add
stos
add
rcl
into
push
ja
mov
mov
sub
mov
jg
enter
bound
aad
loope
xor
pop
jns
jo
loopne
out
sbb
adc
fnstcw
sbb
mov
and
jo
mov
js
ja
ficom
out
adc
fcmove
xor
(bad)
retf
sbb
int3
leave
in
mov
popa
popa
sbb
and
jnp
in
cmp
cwde
xchg
xchg
xchg
jnp
adc
sbb
in
dec
dec
out
xor
pop
mov
pop
ins
add
or
add
popf
div
mov
xchg
aas
mov
cs
mov
and
(bad)
push
mov
pop
mov
sub
xchg
or
adc
inc
sub
loopne
adc
and
adc
and
xchg
dec
adc
jge
ins
mov
fist
jle
push
inc
push
jmp
mul
cwde
fnstsw
push
fsub
outs
or
inc
fdivp
sbb
hlt
unpcklps
fnsetpm(287
cli
add
mov
dec
cmp
mov
int3
out
popf
lods
stc
je
(bad)
mov
inc
mov
adc
jmp
mov
dec
pop
fwait
sti
test
jge
push
ds
mov
je
adc
gs
loop
mov
shl
adc
or
repz
cdq
fs
repz
out
push
int
out
xchg
fldenv
daa
pop
cmp
xchg
stc
sub
jnp
push
mov
ins
jp
leave
cwde
cmp
addr16
mov
mov
push
pop
mov
scas
jbe
push
sahf
out
xor
clc
les
fisubr
je
mov
cmc
sbb
mov
jl
jmp
mov
cmc
xchg
jge
mov
(bad)
mov
and
repnz
push
inc
std
add
sub
out
ss
push
pop
ret
stos
inc
push
or
dec
daa
mov
adc
pop
mov
stos
leave
aas
mov
and
sbb
mov
ret
es
add
clc
pop
sub
lods
jge
mov
fist
xor
sub
or
xchg
push
or
dec
add
push
dec
ja
aam
or
ds
(bad)
jmp
cmp
int
pop
jmp
les
pop
loop
scas
push
cmp
inc
cmps
pop
cmp
ja
fld
pop
xor
sbb
les
cld
cmps
retf
and
sub
and
cmp
out
inc
fsub
js
ja
push
jg
cld
xchg
xchg
test
push
jmp
iret
sub
mov
and
cwde
popa
or
cli
xchg
movs
dec
xchg
ja
cmp
mov
adc
std
pop
mov
ja
mov
je
in
sbb
aas
xchg
xor
push
(bad)
mov
pop
es
mov
das
dec
fdiv
push
push
sbb
inc
gs
inc
mov
mov
fild
dec
dec
push
cmp
push
leave
mov
mov
xchg
mov
je
clc
popa
and
mov
or
pop
jl
shl
xchg
cmp
add
(bad)
fidiv
and
je
xor
pop
ror
repz
pop
out
lock
popa
cwde
std
retf
add
stc
mov
cdq
test
cmps
inc
dec
and
cmovbe
pushf
jns
jmp
(bad)
out
and
adc
cmovae
repnz
pop
dec
lods
push
mov
sub
sub
bnd
neg
rcl
mov
test
xchg
jl
add
iret
arpl
sbb
sbb
adc
cmp
out
pop
push
xor
das
mov
cli
sbb
bound
inc
je
mov
retf
cmp
clc
or
or
xchg
jnp
and
loopne
dec
add
loop
cs
hlt
fadd
mov
lds
sbb
jmp
cld
add
push
push
pop
inc
push
inc
ds
stc
dec
fstp
sub
and
jl
(bad)
mov
mov
mov
stos
test
cdq
bound
out
adc
fmul
pop
cmp
inc
xchg
mov
in
bound
(bad)
ins
sar
pop
pop
and
xchg
add
add
pop
scas
outs
push
mov
sbb
sub
push
push
nop
inc
das
clc
aaa
test
lock
sub
pop
mov
mov
movs
mov
and
inc
int3
mov
jge
cli
(bad)
mov
add
in
dec
nop
mov
int
in
hlt
not
nop
loop
mov
outs
sbb
ds
pop
sbb
call
pop
out
and
cmp
or
jmp
push
pop
or
add
sbb
mov
mov
lods
inc
rol
aaa
cmc
mov
imul
ret
mov
mov
movs
cmp
add
frstor
jbe
test
adc
shl
adc
add
(bad)
outs
jae
into
cmp
fcomp
fistp
cmp
outs
cli
adc
lds
sub
jbe
push
pushf
and
fcom
pop
nop
jmp
outs
jne
adc
dec
loope
aam
jnp
enter
pushf
cmps
pop
jae
into
or
inc
sbb
(bad)
dec
fincstp
es
inc
mov
sbb
cmp
and
jmp
inc
inc
rcl
lahf
ja
mov
xlat
ds
ret
rol
das
fwait
inc
test
push
adc
mov
fsub
loope
xor
les
imul
sub
cmp
xchg
jp
mov
daa
cld
pop
sub
pop
test
mov
test
sub
xchg
test
aam
retf
or
shr
in
cli
sbb
push
or
sbb
retf
adc
xchg
push
repz
dec
test
ja
mov
sub
mov
inc
cmps
lds
repnz
loopne
clc
mov
bnd
scas
cdq
mov
test
dec
inc
add
mov
das
int
loope
in
dec
dec
jne
mov
push
pop
mov
addr16
pop
sar
retf
push
test
ror
fcmovnu
std
or
xor
shl
cwde
xchg
fisubr
rcl
mov
xor
cmp
ds
inc
push
test
cmp
and
imul
pop
mov
jg
pushf
inc
add
and
js
and
aad
dec
push
or
mov
pop
pop
sar
das
sub
loopne
and
std
lock
sub
xchg
cmp
loope
lea
bound
rdmsr
rcl
inc
(bad)
cmc
jecxz
das
movs
cmp
(bad)
push
mov
mov
fadd
mov
(bad)
pop
push
pop
loop
sbb
mov
lds
and
cs
ss
pop
cmp
test
jno
gs
clc
cdq
sahf
stc
cmp
push
xor
aam
aam
scas
mov
call
loopne
pop
loope
inc
fisubr
push
cmp
aaa
pop
mov
sub
cmp
leave
xchg
sar
and
sub
inc
push
or
(bad)
cmp
mov
popf
jg
dec
stc
xor
dec
ret
psrlw
into
and
jge
pop
popf
sbb
push
mov
xor
jle
jbe
mov
test
pop
adc
inc
cmc
dec
cmp
sub
cmp
lods
or
test
fstp
inc
data16
shrd
inc
pop
adc
inc
inc
mov
test
rol
or
cmps
je
outs
mov
jge
mov
sar
dec
push
xchg
pop
imul
push
pop
dec
xchg
je
(bad)
dec
scas
cli
jl
pop
push
sahf
cld
and
lock
(bad)
pmulhw
test
in
dec
rol
push
mov
(bad)
pop
dec
push
dec
jns
lea
(bad)
jae
std
mov
and
loopne
adc
popa
pop
arpl
lahf
data16
adc
push
call
movups
pop
mov
jb
jg
aas
aas
in
and
loop
and
leave
data16
(bad)
pushf
push
pop
jmp
xor
xchg
adc
ss
out
mov
leave
cmp
or
xchg
or
in
enter
jg
(bad)
sbb
pushf
adc
pop
aas
sti
popf
inc
call
lea
ret
xor
sub
add
xor
jae
jo
xlat
out
jmp
retf
push
les
cld
and
and
stos
mov
aas
(bad)
lahf
out
iret
push
scas
cdq
test
push
test
(bad)
out
jge
imul
test
xor
fwait
pop
mov
jmp
pop
add
ins
cmps
push
dec
adc
xchg
sbb
cdq
outs
das
ret
cmp
test
out
jp
fcmovnb
and
aam
(bad)
pop
test
jecxz
jno
repnz
jp
retf
xchg
scas
int3
cmp
scas
mov
push
mov
shl
addr16
dec
loope
add
cmp
aad
outs
in
cmp
in
jmp
movs
jbe
cmp
aas
ins
mov
sti
xchg
loop
pop
jmp
or
fs
xchg
adc
jmp
pushf
icebp
mov
xor
fwait
aaa
std
cmp
jg
cmc
cli
fistp
jmp
push
leave
push
js
clc
inc
mov
jnp
das
or
outs
(bad)
xor
xchg
dec
ret
fadd
jmp
mov
movs
in
ins
(bad)
and
mov
mov
test
fwait
cwde
pop
lock
in
xor
cmp
loop
aam
push
popf
ret
mov
and
jbe
or
xchg
std
aad
jge
mov
or
dec
pop
xchg
fsub
fsub
sbb
pop
mov
(bad)
xchg
or
mov
les
mov
pusha
repnz
repnz
popf
push
outs
mov
test
scas
mov
leave
jae
ins
sub
sti
daa
lahf
cmp
and
push
inc
and
or
cmp
or
push
repz
je
outs
or
push
mov
scas
xchg
mov
cmps
into
adc
mov
das
jecxz
cwde
inc
xchg
mov
push
jge
(bad)
lods
add
inc
push
dec
dec
arpl
addr16
mov
or
adc
mov
popf
xchg
pop
cmp
popa
(bad)
or
call
ficom
sub
push
sbb
jmp
lahf
or
jle
push
(bad)
fldln2
mov
(bad)
pushf
outs
cmc
adc
pop
mov
fcom
fist
pusha
cmp
and
in
into
mov
or
call
nop
retf
pop
push
shl
or
jo
mov
dec
(bad)
or
sub
lds
xchg
ror
dec
fld
dec
jg
pop
pop
mov
mov
adc
sbb
mov
xchg
xlat
sbb
adc
cmps
jb
call
add
pop
inc
mov
xchg
(bad)
or
sti
ror
sbb
(bad)
aam
jmp
sub
clc
ss
cs
pop
rcl
aas
mov
repz
dec
push
jmp
mov
or
inc
dec
daa
jp
inc
pop
imul
add
outs
cmps
inc
or
xchg
(bad)
push
mov
mov
mov
adc
ret
retf
out
jns
in
loope
jl
jae
mov
push
int
cmp
pusha
push
fiadd
pusha
jae
arpl
ror
pop
pop
pop
push
add
sub
xor
and
mov
stos
sti
out
sub
mov
stos
jle
fisubr
gs
div
addr16
shr
scas
rol
fxam
cmp
shl
loop
loop
xchg
mov
jns
inc
mov
test
xchg
es
push
cwde
and
xchg
into
push
ds
in
adc
adc
sar
xor
or
lock
lods
jo
jo
loopne
or
ss
sub
je
xor
xchg
or
rol
jne
push
sub
sbb
pop
(bad)
pop
dec
imul
push
add
xor
xor
fld
adc
push
adc
jns
push
sub
jge
xor
dec
lahf
outs
movs
ins
gs
inc
dec
addr16
or
sub
dec
popa
adc
loopne
inc
shl
or
loopne
and
ret
or
and
xchg
ins
xor
out
rcr
(bad)
clc
inc
add
std
scas
ret
fs
jl
cmp
jo
xchg
sub
lods
xlat
push
dec
scas
outs
sbb
xor
outs
sti
inc
sub
push
js
xor
cwde
(bad)
pusha
fld
sub
jbe
adc
leave
mov
dec
lea
call
retf
dec
or
push
(bad)
les
pop
mov
lahf
dec
push
push
int3
imul
cs
sbb
(bad)
mov
jae
pop
mov
xchg
xlat
popw
sbb
mov
or
popf
or
into
scas
(bad)
(bad)
mov
js
or
xor
add
stc
sbb
lods
loope
fdiv
and
xor
jb
outs
adc
mov
add
cld
adc
aad
sub
push
xchg
std
mov
lea
dec
retf
fsubr
pop
jmp
sub
xchg
pop
adc
ins
in
mov
sbb
std
jecxz
xor
add
mov
int
rcl
mov
cli
jl
or
out
push
pop
pop
adc
rcl
push
push
cmp
gs
xor
js
ja
idiv
cmp
xchg
jmp
xor
add
jne
out
mov
inc
aad
sbb
fstp
xor
add
mov
stos
ds
outs
xor
out
or
mov
repnz
scas
mov
outs
je
ret
sbb
mov
adc
fsub
xchg
aaa
ror
rcr
fisubr
loopne
cmc
adc
sbb
popf
jo
mov
das
mov
dec
out
jmp
mov
loope
dec
add
les
ins
call
xchg
loope
jmp
mov
enter
xor
mov
retf
retf
dec
stos
mov
pushf
imul
mov
fst
push
push
xchg
push
ins
out
jecxz
or
xchg
cld
adc
cmp
adc
cmp
mov
leave
pop
xchg
(bad)
xchg
cmps
retf
push
pushf
movs
sub
jge
cld
mov
mov
and
mov
test
enter
mov
dec
pop
icebp
pop
stc
xlat
fs
xlat
jecxz
ds
ret
pop
inc
sub
lods
int
rol
hlt
dec
add
js
cmp
ret
xchg
pop
mov
ret
call
popa
adc
iret
xor
mov
sahf
(bad)
jmp
movs
xlat
fist
repz
ins
mov
mov
ins
lock
push
push
ss
inc
(bad)
sbb
mov
pop
ja
xor
retf
imul
xor
movs
dec
cmp
iret
fld
cmp
imul
je
mov
loope
jnp
add
push
test
pushf
pushf
pusha
loope
fld
sbb
loopne
fadd
in
pop
jno
mov
mov
push
ds
xchg
outs
idiv
les
cld
mov
cmp
std
sbb
test
jg
mov
push
nop
loope
outs
cmps
cmps
divps
out
and
aaa
mov
fstp
add
test
ficomp
or
adc
cmp
and
out
mov
and
(bad)
scas
sub
imul
(bad)
jne
stc
iret
call
ins
ins
inc
fst
mov
int
ins
inc
cmp
lahf
push
jno
repnz
aad
fstp
mov
lods
test
dec
cmp
mov
push
ja
into
push
push
popa
cmp
xor
std
movs
mov
cli
popf
inc
cwde
jae
clc
aaa
outs
push
in
aaa
dec
lahf
push
mov
cmp
push
fcomi
sub
ja
mov
les
xor
sbb
loop
pop
xchg
push
jg
jbe
xor
test
(bad)
jne
push
jg
in
outs
dec
out
pop
pop
dec
aas
push
and
mov
mov
popf
shl
push
push
fcmovnb
loope
nop
push
push
(bad)
push
xor
jmp
imul
cmps
(bad)
jne
mov
sbb
sub
ret
jns
mov
rol
gs
pop
and
jbe
push
jge
test
sub
pushf
clc
(bad)
and
lea
stc
mov
loopne
and
jg
xchg
and
cmp
and
shl
popa
dec
stc
(bad)
retf
rcr
jne
(bad)
pop
add
mov
adc
div
mov
mov
jo
pop
icebp
sub
jmp
les
repnz
pop
not
xor
adc
xchg
or
outs
xchg
outs
inc
push
nop
pop
cmp
adc
mov
xchg
shl
aad
inc
adc
mov
and
int
push
popf
cmps
adc
cmp
pop
push
scas
js
stc
add
adc
or
lahf
fcom
loopne
dec
pop
fwait
into
push
jecxz
sbb
and
aam
in
mul
repnz
pop
repz
mov
aad
xchg
out
mov
(bad)
shr
cmc
imul
and
stc
out
adc
repnz
or
cmps
xor
xchg
jmp
in
pop
inc
test
xchg
div
into
pop
fisubr
inc
jl
dec
shl
es
movs
xchg
leave
pop
dec
enter
and
inc
retf
ins
retf
ss
sub
je
mov
ficomp
cmp
sbb
(bad)
sti
xchg
sub
xchg
inc
xchg
and
and
mov
cmps
sub
pop
jge
sti
test
xlat
push
shl
nop
mov
in
inc
xchg
add
(bad)
xchg
mov
clc
add
xor
adc
(bad)
push
jb
rol
mov
arpl
shr
inc
push
int3
inc
cld
rcr
mov
inc
jecxz
cwde
mov
in
cwde
mov
std
mov
add
mov
xor
into
shl
mov
mov
inc
mov
das
mov
rol
xor
cmp
add
add
xchg
mov
pop
mov
lahf
imul
into
test
add
push
push
mov
jmp
cmps
stc
int
sbb
enter
mov
jo
sub
test
sti
fbstp
jl
pop
retf
inc
test
hlt
xchg
jns
call
not
pop
pop
or
jb
push
pop
adc
leave
sub
adc
mov
repz
push
push
fnstenv
movs
ds
bsf
fnstenv
ror
adc
jmp
mov
xor
leave
lahf
push
nop
cmp
push
sbb
sbb
mov
push
leave
sub
adc
das
pop
nop
mov
push
and
jnp
popf
ins
call
retf
in
cli
pop
call
mov
sub
daa
sbb
cdq
call
cmps
xchg
ds
sub
mov
imul
xor
jge
sar
jo
sub
jae
jge
ss
out
mov
pop
jae
lea
inc
bound
mov
mov
adc
jo
jb
mov
icebp
jle
or
cwde
pop
sub
popf
and
in
add
pop
test
(bad)
adc
pop
mov
mov
jle
dec
pop
and
int3
mov
(bad)
daa
xchg
jmp
jge
out
scas
jecxz
cmp
cld
xor
adc
(bad)
retf
jno
mov
aas
xor
sub
imul
loope
jno
loop
xor
xor
ffreep
neg
repz
jmp
in
and
sti
sbb
sub
int
ret
mov
pop
mov
outs
shl
jge
adc
(bad)
loopne
movs
fmulp
leave
stos
dec
mov
ret
or
rcr
outs
loope
push
add
or
mul
inc
sbb
or
sub
fst
xlat
je
hlt
in
adc
dec
ds
call
add
mov
dec
pop
retf
ins
dec
test
aas
outs
out
retf
loop
dec
mul
mul
xor
leave
add
pusha
inc
pop
(bad)
into
cmp
cld
mov
sbb
(bad)
cmps
jmp
aaa
clc
in
unpcklps
gs
out
pop
add
ja
imul
pusha
pop
mov
jmp
mov
imul
pop
std
loop
mov
sub
in
enter
mov
jmp
sbb
outs
jb
push
mov
ret
fwait
ret
sar
xchg
jmp
xor
and
jns
jne
jp
jg
sbb
out
sti
(bad)
xlat
mov
call
vsqrtsd
jecxz
inc
mov
push
mov
xchg
dec
das
movs
repnz
add
sbb
mov
adc
addr16
arpl
sbb
retf
lock
adc
mov
mov
or
dec
rcr
dec
imul
and
xor
clc
adc
lds
out
retf
pop
or
outs
ins
mov
outs
rol
xchg
loop
inc
mov
xchg
sbb
in
xor
imul
mov
push
enter
cmp
xor
push
pop
xchg
mov
mov
retf
in
cmps
dec
fdiv
bound
je
xor
pop
sbb
(bad)
stos
hlt
push
sub
pop
es
mov
fist
xor
aaa
xlat
lods
xor
enter
cld
mov
aam
in
pushf
pop
xchg
je
dec
shl
mov
loop
fsub
bound
in
out
int
fcomp
sub
clc
ins
scas
push
xchg
and
cmp
and
xchg
push
adc
repnz
inc
imul
sbb
popa
sbb
lds
out
mov
clc
cwde
lea
aaa
retf
out
(bad)
xor
inc
rcr
add
mov
js
mov
lock
pop
xchg
mov
sar
xor
xchg
ror
ja
jg
dec
sub
adc
lock
jg
(bad)
hlt
fmul
jl
cmp
dec
ja
call
dec
lods
cmp
sub
std
div
je
dec
outs
std
stc
retf
sub
sbb
push
pop
mov
push
mov
sahf
xchg
aad
mov
add
or
mov
xchg
inc
inc
pop
stos
xchg
mov
sub
mov
xor
das
pop
loop
push
test
xor
ins
cmp
popa
stos
loop
arpl
imul
and
popf
sub
xor
aad
xchg
xor
adc
or
mov
xlat
sti
nop
add
out
jmp
add
push
mov
sbb
sbb
ins
lods
stos
xor
xchg
out
sub
xchg
imul
inc
int3
aam
shl
das
imul
jo
cmc
adc
jns
xor
or
test
mov
cdq
mov
dec
adc
and
out
xlat
xor
xlat
mov
pop
jo
jl
in
aas
push
mov
cmps
pop
pop
mov
mov
inc
push
dec
xchg
inc
mov
test
loopne
inc
xchg
mov
push
jg
mov
add
stos
test
data16
in
pop
popa
jmp
mov
cmp
dec
fsubr
cmc
push
push
fwait
sub
xor
pop
dec
mov
mov
push
jo
mov
seto
aaa
frstor
loopne
sbb
mov
ret
add
adc
fdivp
inc
scas
pop
cwde
outs
es
mov
neg
cmps
push
ret
jne
(bad)
(bad)
movs
mov
outs
neg
jge
cdq
retf
(bad)
jge
lods
xchg
adc
arpl
push
lahf
push
out
push
xor
(bad)
js
pop
adc
les
cmp
xor
ins
cmp
mov
ins
test
xor
xor
cmp
retf
jns
movs
stos
sub
xor
mov
(bad)
cmc
pop
jno
mov
mov
cdq
add
adc
repz
or
cwde
mov
sub
mov
or
fist
ror
or
dec
push
sub
push
mov
stos
sbb
mov
daa
and
mov
pop
daa
cmp
aas
fsubr
mov
lods
adc
sahf
imul
loop
pop
jecxz
rcl
push
ins
xor
and
cli
pop
and
repz
ret
repz
cmp
cmp
test
in
int3
sub
cdq
xchg
push
adc
in
and
inc
movs
jp
fisubr
outs
push
cmps
sub
enter
or
neg
aas
adc
sbb
inc
lods
and
cmps
into
adc
pop
arpl
test
and
fbld
push
jo
add
inc
loop
mov
test
outs
lock
loopne
arpl
test
addr16
mov
dec
enter
and
fisttp
daa
in
in
cmp
and
jle
fs
cmp
(bad)
sahf
push
into
dec
(bad)
jl
inc
ret
retf
adc
dec
ret
in
jae
xor
ret
jno
cmp
mov
xor
adc
aas
clc
push
jnp
sub
adc
jno
or
stos
mov
dec
ss
leave
ja
lods
push
sub
add
pop
or
jmp
imul
ja
sub
or
rol
loopne
or
mov
inc
fnsave
stc
(bad)
repz
push
sbb
jo
int3
call
cmp
loop
sahf
and
or
and
push
cmps
iret
das
push
nop
cmp
push
pop
mov
ja
sub
enter
pop
fistp
push
inc
les
mov
fidivr
adc
jns
dec
pop
adc
rol
jmp
and
idiv
push
out
jp
add
cmp
inc
jns
push
push
cmp
test
dec
cmp
mov
in
pop
fucomi
(bad)
mov
sub
sub
fnstsw
push
jo
mov
pop
xlat
adc
jl
clc
ja
repz
outs
add
fisttp
ss
pop
fsub
inc
(bad)
inc
push
nop
outs
or
and
outs
les
stos
out
addr16
xor
and
aas
sbb
addr16
xchg
ret
push
jo
aam
mov
mov
adc
sti
les
retf
and
jge
inc
mov
xchg
js
lahf
mov
dec
sahf
std
das
cmp
sub
push
lods
jne
jp
adc
mov
(bad)
xlat
xchg
sub
mov
dec
cmp
add
push
jp
adc
or
iret
add
(bad)
rcr
aam
les
stc
xor
xchg
sbb
add
scas
call
fmul
adc
pop
adc
ret
dec
ret
ffree
mov
mov
fld
(bad)
pop
les
xchg
sub
push
pop
dec
cmps
jecxz
adc
std
fild
mov
add
jp
xchg
xor
inc
mov
ror
jle
xor
dec
nop
dec
fidiv
jnp
(bad)
movs
pop
out
shl
aam
sti
pusha
cmps
jbe
stc
jns
dec
rcr
imul
cli
sbb
pop
inc
pop
pop
(bad)
leave
fs
mov
sbb
(bad)
ror
lahf
mov
xchg
imul
imul
enter
adc
test
stos
pop
je
call
jle
lea
xor
xchg
clc
mov
lea
sbb
push
popf
bound
pop
(bad)
mov
int3
repnz
stos
xor
out
cld
sub
dec
or
sub
inc
or
xchg
dec
xchg
retf
xchg
cmp
push
test
jg
sub
pop
and
icebp
icebp
test
std
mov
sub
or
jge
hlt
dec
pop
or
outs
pop
add
out
jbe
add
push
dec
inc
mov
cmp
scas
mov
lea
adc
lods
or
jmp
mov
mov
xor
test
test
push
in
cmp
mov
hlt
xchg
xchg
mov
cmp
adc
mov
cmp
test
inc
stos
sahf
stos
add
mov
lock
je
fs
mov
rcr
xlat
call
mov
mov
dec
ins
imul
or
pop
or
daa
xor
xchg
pop
(bad)
adc
mov
push
xchg
test
jbe
fisttp
rcl
into
xchg
in
adc
or
leave
jo
fdivr
add
mov
xchg
adc
push
or
mov
(bad)
mov
sub
sub
jecxz
and
xor
jno
daa
xor
repnz
mov
dec
out
or
rol
cmp
retf
xor
sti
ret
ins
les
xchg
int3
(bad)
jnp
ffree
sahf
pop
inc
fisttp
sbb
std
mov
dec
clc
and
add
rol
int3
ins
add
xchg
adc
popf
add
cmp
jne
and
loope
ja
fbld
mov
sahf
fwait
cmp
jp
push
imul
iret
(bad)
xchg
sub
in
adc
jae
xchg
xchg
test
aas
inc
mov
mov
sbb
loopne
in
add
mov
sahf
inc
(bad)
in
loopne
ja
dec
dec
cmp
imul
cmps
std
(bad)
(bad)
mov
movs
inc
sub
sub
fistp
cmp
pop
shl
stos
(bad)
lahf
out
mov
pop
jmp
movs
sbb
(bad)
mov
das
imul
adc
inc
sbb
fbld
mov
fadd
xor
mov
mov
adc
mov
or
shl
and
pop
inc
pushf
cmp
and
in
adc
adc
or
xor
add
arpl
jmp
jmp
sbb
retf
nop
cdq
jb
xchg
scas
inc
pop
dec
sub
(bad)
and
out
cmp
retf
xchg
xor
sbb
das
xlat
test
sbb
adc
sbb
test
inc
mov
jmp
lds
rcr
mov
mov
aad
xchg
fnstenv
mov
test
jecxz
repnz
std
or
lods
ret
sbb
out
mov
mov
lods
enter
ins
mov
push
inc
and
(bad)
dec
jg
and
or
cmp
cmps
loope
adc
imul
mov
sahf
jno
mov
ret
mov
adc
add
add
add
(bad)
jbe
dec
arpl
test
fst
cwde
xor
out
jp
int
movs
in
scas
mov
nop
fsub
ror
out
push
jge
cli
jmp
and
sbb
sbb
test
jne
in
sub
and
cli
add
pusha
movs
cmp
out
call
int
mov
or
sub
sbb
aam
jnp
out
xor
jl
push
adc
hlt
pop
inc
sub
push
or
mov
xor
js
addr16
cwde
scas
pop
inc
pop
in
xlat
popf
or
mov
mov
jmp
mov
adc
push
iret
in
add
sbb
pop
mov
lds
hlt
inc
nop
(bad)
int
scas
mov
(bad)
(bad)
std
mov
xchg
and
jns
and
adc
cdq
xchg
loop
cli
inc
shl
mov
cli
into
hlt
dec
fiadd
shl
mov
cmp
push
jmp
frstor
xor
aad
mov
inc
sbb
sub
cld
shl
pushw
outs
sahf
clc
imul
fidivr
xchg
ret
sti
adc
daa
aas
xchg
pop
mov
fsub
dec
stc
or
inc
fwait
jge
jbe
cld
jl
sbb
sbb
add
mov
mov
cmc
jae
xchg
shr
icebp
repz
cmp
mov
in
inc
or
gs
loopne
test
adc
cmc
or
push
aad
jne
es
cwde
xor
fmul
and
cwde
test
(bad)
fimul
repnz
adc
mov
push
or
cmp
and
push
inc
cld
sbb
dec
sbb
mov
mov
test
into
mov
fbstp
sub
cmp
inc
imul
mov
mov
inc
ret
add
pop
jmp
jns
pop
mov
leave
xor
mov
aam
jg
or
icebp
jl
bound
imul
fst
in
sub
push
or
stos
pop
scas
loopne
or
imul
ss
xor
daa
loop
push
push
enter
inc
nop
int
ds
sub
dec
aad
pop
pop
xor
xor
cmp
add
fstp
aam
ror
repz
mul
out
(bad)
push
dec
mov
mov
dec
add
sbb
xor
(bad)
xchg
cmp
jo
inc
jle
xchg
inc
adc
and
sbb
loope
push
mov
es
mov
test
stos
add
sub
push
aad
inc
sub
call
test
out
and
xor
inc
mov
push
out
mov
mov
mov
sbb
jnp
retf
add
pop
adc
nop
fwait
test
inc
cmp
inc
mul
mov
sbb
ja
fdivp
stos
shl
cld
shl
mov
dec
jmp
mov
xchg
pop
cmp
jge
mov
clc
sbb
push
nop
outs
push
mov
sub
sub
mov
ficomp
push
ins
ret
xchg
retf
pop
cmp
lahf
mov
sti
sub
xchg
jb
push
jno
stos
pop
aaa
xchg
mov
sub
xchg
lea
jo
fdivr
nop
cmp
mov
test
test
push
adc
push
cmp
call
cmp
mov
sub
cmp
jo
mov
mov
jle
out
pop
dec
je
mov
inc
shl
sbb
xor
aaa
pop
add
jg
xor
mov
call
je
or
sub
xchg
fcomp
mov
ja
xchg
in
aam
out
imul
mov
les
dec
dec
shl
xchg
ret
xchg
mov
or
adc
mov
xor
and
loopne
xchg
cs
daa
popf
ja
ja
daa
xor
or
push
jmp
dec
xchg
mov
fisubr
jl
cmp
sub
jmp
mov
add
into
jle
sahf
(bad)
ds
push
cli
test
mov
into
pop
xchg
neg
sub
icebp
and
pop
sbb
dec
jns
cmp
sub
dec
hlt
aaa
inc
xor
dec
push
mov
jmp
ss
shl
pop
jmp
stos
push
scas
mov
adc
dec
pop
sub
jg
xchg
and
ins
xchg
jnp
daa
jno
out
fistp
inc
add
or
fs
scas
push
or
sub
ret
in
sub
rcr
cmps
scas
push
jle
call
bound
mov
stc
inc
pop
push
js
(bad)
enter
sbb
cmp
int3
push
into
inc
jb
sub
nop
push
xchg
dec
mov
pusha
in
out
imul
jnp
and
sbb
adc
idiv
pop
int3
pusha
in
repnz
repz
sub
stos
push
push
lods
imul
jno
or
sahf
xor
call
lods
add
mov
mov
pop
nop
loop
dec
or
cmp
fs
sbb
inc
data16
ret
sbb
fcom
test
(bad)
sub
out
into
jp
adc
mov
jp
pop
xchg
sahf
pusha
hlt
in
pop
call
ins
retf
ret
dec
sub
adc
dec
clc
(bad)
in
imul
mov
adc
in
outs
lahf
fimul
in
movs
outs
popa
rcr
sub
and
icebp
nop
xor
dec
push
push
and
stc
or
jle
jmp
mov
pop
shl
push
and
xchg
daa
pop
cmp
mov
nop
jl
xchg
jne
add
aas
mov
int3
retf
xor
push
(bad)
and
es
imul
sub
pop
mov
cmc
pop
pop
mov
adc
push
dec
in
dec
jo
ror
(bad)
jns
push
add
inc
mov
add
pop
push
fnstsw
sub
mov
test
and
or
jecxz
adc
popf
mov
add
inc
sub
arpl
fwait
bswap
loop
sub
mov
cmp
add
dec
sbb
out
std
retf
enter
shl
or
in
push
mov
or
(bad)
pushf
pop
cwde
sahf
push
add
mov
xchg
xor
push
pushf
jbe
and
push
add
xor
fdivr
push
pop
lods
fmul
mov
cmp
jge
test
push
in
ja
in
loop
call
cmp
push
daa
iret
push
pop
pop
ins
or
lock
mov
sbb
inc
mov
cmp
jno
or
lds
test
popf
sub
push
sbb
mov
stos
add
gs
jg
arpl
(bad)
push
push
rcl
gs
mov
jae
pop
adc
push
or
mov
arpl
inc
sub
sbb
push
mov
aad
faddp
jnp
push
add
xchg
ins
cmps
imul
jmp
outs
nop
call
rcr
xchg
outs
sbb
popf
movs
int3
dec
mov
adc
imul
ja
cmc
pop
fstp
jo
std
pop
pop
loop
test
lds
ds
ret
mov
in
jle
mov
call
mov
lock
mov
sbb
call
xchg
push
daa
shrd
out
jb
adc
imul
mov
sub
sbb
pop
je
xor
pop
inc
pushf
and
and
cmp
inc
retf
retf
cmp
cwde
cmps
add
adc
and
mov
outs
aaa
rol
lods
ds
test
pop
and
repz
mov
add
imul
cmp
int
or
pop
pop
ret
fld
loop
rcr
imul
js
push
ret
ins
and
jnp
xchg
fisttp
fidivr
cmp
and
xchg
and
popa
test
mov
call
push
dec
push
stc
retf
push
mov
imul
xchg
sbb
pusha
mov
xor
xor
(bad)
xor
(bad)
nop
push
mov
gs
pop
pushf
lahf
xor
adc
push
jbe
pop
adc
(bad)
loopne
shr
adc
mov
cmp
sub
pushf
fcomp
push
inc
push
and
jmp
mov
xor
pop
mov
imul
xchg
mov
xchg
mov
xor
dec
xor
jmp
mov
cmp
add
jg
leave
xlat
dec
movs
inc
pop
push
fmul
jae
aaa
rol
jnp
in
into
je
stc
in
pop
mov
add
mul
pop
and
cdq
adc
inc
mov
push
test
push
pop
xor
inc
cmp
sahf
dec
fs
shr
mov
sbb
cmp
cmc
int
mov
dec
mov
das
pop
xchg
in
data16
mov
push
push
arpl
cmps
(bad)
jno
mov
mov
jmp
pop
icebp
call
sahf
data16
cmc
mov
mov
stos
sbb
in
jns
out
sbb
leave
repz
ins
fwait
arpl
pushf
not
mov
adc
adc
(bad)
mov
xchg
nop
fdiv
fld
fs
or
mov
outs
and
ins
mov
addr16
fs
mov
or
aam
(bad)
aas
dec
or
inc
loop
jmp
mov
mov
inc
in
xor
mov
int
dec
pop
cld
lock
pop
lock
pop
loopne
mov
adc
movs
mov
stos
pop
or
adc
jnp
cmp
and
mov
jle
imul
mov
adc
cmp
mov
sbb
out
fcomp
ds
mov
fistp
int3
daa
mov
cmp
xchg
mov
int
mov
inc
inc
dec
push
out
retf
cld
pop
mov
repz
cmp
hlt
gs
dec
(bad)
iret
lds
test
push
call
sti
mov
sub
mov
mov
test
jo
(bad)
outs
inc
aad
cmp
neg
inc
mov
out
retf
sbb
inc
adc
popa
push
and
stos
fs
aam
hlt
aad
jl
sub
sub
mov
pop
sub
(bad)
rcl
dec
ror
sbb
push
jmp
xor
pop
fcmove
hlt
pop
in
mov
jp
dec
cmp
cmp
pop
mov
xchg
cmp
call
mov
mov
out
cld
ret
ss
std
daa
int
and
movs
dec
push
mov
mov
out
push
inc
or
mov
xchg
add
loope
jns
xchg
dec
mov
or
adc
mov
push
push
ins
push
test
test
mov
jge
pop
push
jmp
mov
movs
adc
cmp
mov
mov
pop
loop
sti
or
mov
mov
aas
fnstsw
inc
test
(bad)
fiadd
jge
add
sub
and
je
(bad)
pusha
sub
mov
fdivr
xor
xchg
push
int
stos
cmp
std
pop
inc
mov
dec
xchg
loop
pop
in
fs
out
sub
movs
out
hlt
pop
adc
or
jp
test
mov
arpl
mov
pop
lods
pop
ficom
ins
aaa
fwait
adc
jp
inc
or
rcr
fcomp
and
lods
stos
imul
cmc
popa
push
xor
xchg
std
xchg
inc
addr16
pop
pop
fimul
ins
ins
dec
pop
sbb
cmps
mov
sahf
sbb
in
pop
je
in
pop
xchg
scas
xor
aam
and
dec
and
dec
sbb
inc
pop
push
(bad)
shl
xchg
mov
aad
sub
mov
jmp
bound
push
mov
jecxz
adc
int3
(bad)
cwde
mov
fxch
icebp
aaa
dec
idiv
inc
mov
mov
mov
les
mov
mov
retf
push
mov
pop
in
aaa
xchg
div
mov
jl
push
repnz
arpl
lods
ss
xor
xchg
push
cmp
and
sar
inc
movs
aad
sti
int3
mov
mov
and
cwde
popa
jl
adc
push
add
mov
add
push
add
mov
xor
lods
mov
into
adc
and
add
pop
aaa
pop
cmps
je
loopne
adc
pop
push
inc
xchg
xchg
data16
loop
or
das
in
test
lock
sbb
js
call
sbb
and
and
xchg
sub
mov
fdiv
jbe
ins
sub
dec
xchg
xchg
dec
sub
xor
mov
adc
inc
xchg
cwde
push
jmp
sbb
mov
jle
xchg
ror
je
inc
dec
popw
pop
cmp
dec
sub
lods
sub
lds
stos
xor
mov
push
in
cmp
retf
cmc
movs
movs
ja
stc
cmp
sub
cs
and
bndstx
ret
dec
xchg
add
mov
mov
sbb
cmp
loop
mov
jnp
movs
adc
adc
cs
sbb
ss
(bad)
cmc
aas
loope
cs
jle
data16
xor
push
pop
push
arpl
cwde
daa
xlat
cmp
pop
ss
push
fimul
sbb
adc
push
cs
pushf
(bad)
cld
add
sub
movs
xchg
pushf
xchg
jns
inc
mov
mov
sbb
push
int
or
daa
clc
add
xchg
bound
fwait
inc
ret
daa
xlat
ins
and
push
jb
or
sbb
sbb
into
cmp
hlt
fs
xor
fcmovbe
dec
(bad)
movs
sar
jb
loope
out
pop
mov
leave
adc
and
mov
sub
xor
cmps
xor
push
je
pop
shl
pop
sub
xchg
pop
out
out
cmp
xchg
aaa
push
inc
addr16
push
(bad)
cs
mov
cld
clc
adc
xchg
daa
(bad)
xchg
cmp
inc
cwde
inc
cmp
sbb
jnp
fisttp
test
xchg
cdq
mov
push
shr
xor
pop
inc
jbe
xchg
xchg
mov
aaa
aad
std
push
dec
clc
xchg
aaa
mov
fstp
(bad)
iret
out
cmp
mov
movs
push
sahf
bound
mov
fwait
je
lds
cdq
dec
popf
and
das
test
jo
shl
dec
rcl
jnp
adc
add
jnp
cmp
add
es
inc
add
stos
xor
retf
je
fnstsw
cdq
or
cdq
imul
out
cli
xchg
add
mov
xchg
clc
pop
jno
mov
(bad)
mov
mov
add
mov
push
call
rcl
sub
push
xor
jmp
mov
not
mov
(bad)
pop
je
fld
clc
popf
pop
inc
mov
icebp
mov
mov
jle
je
pusha
xor
jb
pop
dec
dec
sub
and
add
add
cmp
push
pop
push
aam
jmp
cld
dec
xor
pop
hlt
(bad)
xchg
push
bound
out
movs
xor
mov
shr
add
jge
lea
mov
shl
or
pop
mov
fdivr
cmc
rol
push
inc
push
dec
movs
popa
mov
xchg
inc
gs
push
jecxz
psrlw
pop
dec
fst
pop
out
pop
data16
or
nop
mov
xchg
mov
inc
retf
xchg
inc
(bad)
std
das
into
xor
jbe
cmp
and
fs
in
sbb
inc
push
inc
xchg
push
rcr
(bad)
xor
and
xchg
inc
lahf
cdq
call
adc
loope
ds
ss
add
xchg
sbb
dec
outs
fisttp
push
jae
fistp
out
sti
fcmovnb
mov
dec
pop
mov
data16
in
stos
mov
cmp
or
jp
enter
push
(bad)
add
aas
out
pop
fcmovnb
dec
das
movs
xor
popa
xchg
and
xchg
mov
mov
in
shl
fnstenv
mov
rol
jns
adc
scas
sub
(bad)
mov
les
je
test
sub
dec
adc
cmps
add
loop
aad
loop
pop
stos
mov
mov
jmp
mov
(bad)
cmp
sub
inc
ja
setns
pop
jp
xor
repz
outs
sahf
sahf
rcr
bound
push
mov
shl
(bad)
lds
xchg
jmp
mov
pushf
imul
cwde
lahf
mov
xor
adc
or
jp
xor
stc
ds
pop
or
fiadd
imul
dec
jle
adc
xor
pop
sub
js
icebp
in
cwde
xor
aaa
add
fs
mov
and
pop
jns
(bad)
jge
and
stc
inc
je
sbb
mov
call
lods
lea
cld
mov
pop
rcl
sub
jmp
nop
push
in
mov
add
and
dec
pop
push
cdq
leave
mov
push
push
daa
retf
mov
lods
push
jmp
imul
pop
or
sub
gs
frstor
shl
xor
aas
retf
jle
ret
jne
in
leave
dec
and
or
mov
movs
mov
inc
dec
stos
mov
int3
ins
jnp
sub
stos
jmp
pop
cmp
fsubr
sti
mov
loopne
pop
jbe
dec
jbe
xchg
cmp
sbb
push
inc
inc
(bad)
cdq
jb
add
sbb
sbb
and
into
mov
retf
mov
outs
loop
(bad)
fisttp
and
or
inc
inc
fwait
add
push
pop
mov
pop
out
add
cmp
and
addr16
push
xchg
pop
imul
mov
push
pushf
out
imul
and
pop
loopne
dec
xor
add
jmp
(bad)
pusha
xchg
adc
adc
aaa
sahf
sbb
and
cmp
retf
retf
mov
xor
dec
clc
(bad)
mov
xchg
xchg
add
cmp
cli
test
outs
or
scas
sub
sar
push
push
mov
repnz
adc
in
sahf
rol
fwait
imul
xchg
mov
in
daa
cmp
(bad)
out
or
mov
nop
dec
jno
int
out
cmps
jge
sub
push
mov
retf
jnp
pop
stc
test
jmp
cmc
push
push
pop
push
imul
jbe
adc
push
jnp
pusha
cmps
inc
push
scas
xchg
sub
push
push
dec
out
push
pop
fs
retf
add
int
push
pop
fs
jo
(bad)
(bad)
dec
xchg
xchg
repz
scas
dec
dec
dec
(bad)
and
ret
sbb
mov
test
adc
mov
xchg
fcmovnu
and
or
cdq
xchg
mov
or
dec
push
jge
int3
jg
outs
movupd
xor
retf
sub
inc
cmp
or
jg
and
dec
test
jne
cmp
pop
xchg
or
icebp
xchg
mov
sub
jo
inc
dec
push
sbb
mov
or
and
outs
xchg
jbe
add
fsubr
inc
xchg
std
in
out
xchg
repz
arpl
fmul
mov
in
add
add
jl
mov
repnz
stc
and
mov
push
enter
div
push
das
ja
in
arpl
push
ret
test
xlat
call
inc
repnz
jno
cmps
mov
stc
je
add
enter
cmc
psllq
inc
mov
test
push
or
jmp
push
jmp
jecxz
jmp
mov
enter
and
stos
fwait
dec
pop
sahf
lahf
int
add
adc
popa
mov
(bad)
dec
cmps
and
nop
pop
ds
mov
and
data16
jecxz
(bad)
cdq
loopne
lods
mov
xchg
xor
cwde
and
rol
out
add
out
daa
test
mov
arpl
test
pop
aaa
fistp
mov
cmp
aaa
test
inc
xchg
push
pop
and
(bad)
mov
test
add
mov
sub
or
sub
out
or
and
ret
syscall
jp
ret
mov
and
pause
lods
and
test
inc
bound
sbb
mov
shl
loop
pop
push
jb
jmp
pusha
ja
mov
outs
arpl
ret
int
out
(bad)
sti
xor
xchg
inc
push
xor
cmp
push
jecxz
or
mov
and
sbb
jbe
pop
es
mov
pop
xcrypt-cfb
cmps
arpl
dec
das
out
mov
xor
cmc
xchg
mov
les
mov
mov
sbb
sbb
push
in
aad
jecxz
sti
mov
call
mov
cmp
xchg
imul
add
push
push
mov
mov
inc
mov
jmp
int
add
sbb
xchg
pop
sub
popa
scas
test
add
mov
out
xchg
ret
ja
inc
mov
push
pop
sbb
je
in
cdq
(bad)
jns
push
jecxz
(bad)
mov
xchg
or
push
lods
dec
mov
mov
movs
adc
xchg
pop
xchg
out
mov
cmp
or
dec
mov
ffree
adc
mov
jp
push
add
jecxz
xchg
dec
jle
add
sub
test
pop
imul
adc
push
ret
rcl
push
cmp
xchg
icebp
popa
jnp
enter
adc
push
mov
push
stc
jnp
jle
ins
ja
xchg
(bad)
mov
div
mov
in
mov
mov
dec
dec
push
jp
call
leave
push
fwait
xor
cs
hlt
or
ror
push
push
mov
fs
mov
popf
data16
dec
and
loop
inc
outs
stos
enter
jne
test
int
imul
pop
jl
xor
sbb
and
rcr
mov
cmp
inc
cmp
sbb
pusha
daa
push
inc
std
retf
mov
sbb
jnp
cdq
mov
fisub
scas
ret
movs
mov
out
leave
mov
mov
bound
xor
hlt
or
push
out
(bad)
lods
push
cmp
pop
xchg
in
cmp
icebp
jnp
fisubr
pop
loop
loopne
mov
ror
int
or
rcr
call
pusha
pop
test
sub
in
cmc
mov
and
js
fisubr
or
loop
sbb
mov
sbb
test
sbb
xchg
fwait
cld
sub
es
movs
sub
mov
aas
cmp
cmc
cvttps2pi
ret
ja
push
xor
and
(bad)
cmps
test
pop
xchg
mov
fild
es
cmp
or
sbb
push
jne
mov
mov
inc
sub
jle
inc
pop
cmps
dec
or
inc
fstp
push
xor
pop
loopne
scas
pusha
stc
sti
or
sbb
inc
lds
movs
pop
sub
shr
fnstenv
or
iret
pop
push
or
data16
(bad)
stos
mov
popa
std
(bad)
stc
and
lahf
xchg
imul
add
mov
arpl
in
pop
jns
sub
jbe
shl
leave
shl
in
sub
aas
ds
retf
fst
jae
sub
lahf
cmp
je
xchg
and
add
push
daa
ret
or
inc
mov
adc
inc
push
call
mov
dec
das
pop
jmp
mov
mov
jmp
stc
mov
les
dec
or
(bad)
cmps
mov
jp
jl
imul
xchg
int3
jnp
inc
lock
imul
addr16
jo
jns
js
dec
ret
jl
ror
add
rcl
and
cmp
cmp
xchg
mov
pushf
out
daa
test
out
cmc
scas
popf
cwde
inc
sub
jmp
push
push
lods
pop
mov
int3
or
inc
xchg
test
cmp
jb
daa
shl
aaa
xchg
mov
dec
add
(bad)
loopne
dec
jmp
dec
lds
out
repnz
pusha
dec
vmwrite
or
cmp
js
fisttp
xchg
mov
sbb
mov
jbe
add
pop
ss
lods
cmp
retf
xchg
(bad)
and
mov
lds
test
dec
inc
sbb
arpl
cwde
mov
xchg
cmp
ja
(bad)
loope
inc
dec
pop
(bad)
cld
(bad)
push
jne
fsub
ss
jns
xchg
in
xor
sar
dec
outs
adc
js
mov
fs
mov
in
loopne
jp
jae
xchg
jmp
sub
std
sbb
lahf
mov
iret
outs
sub
out
clc
stos
mov
ins
adc
jl
(bad)
into
addr16
and
pop
mov
test
jae
xchg
imul
mov
dec
or
mov
fnstsw
adc
and
stos
das
jmp
nop
dec
(bad)
(bad)
xchg
sub
push
repz
repz
jnp
aas
jns
mov
sti
push
popa
sub
cmps
add
sbb
mov
push
(bad)
adc
mov
scas
pop
adc
sar
hlt
sbb
repnz
add
movs
jbe
fwait
sub
ja
or
mov
xor
or
push
mov
imul
cld
push
xor
xor
mov
ds
ins
jae
lahf
sbb
in
and
add
lock
into
dec
rol
jnp
data16
in
cmp
cmp
imul
mov
adc
mov
aam
into
sti
test
xor
fmul
gs
mov
push
mov
fist
cmps
adc
stos
fwait
popa
pop
lahf
or
jle
push
xor
(bad)
call
popf
sub
nop
loopne
aas
and
push
popa
fdivr
push
fidiv
cld
js
and
cmp
mov
inc
(bad)
ins
mov
fistp
stc
dec
pop
fnstsw
outs
cmp
nop
cmp
or
pop
mov
cmc
dec
ja
sbb
xchg
fldcw
cmp
in
jg
shl
xor
cmp
add
aaa
dec
(bad)
xchg
cmp
scas
or
and
mov
cmp
pop
ins
out
jg
mov
sub
jg
adc
inc
mov
xchg
in
aaa
mov
dec
repnz
mov
mov
les
ror
adc
ret
pop
pop
jae
xlat
dec
scas
cmc
lea
mov
nop
rol
inc
and
push
xchg
js
cld
adc
and
sub
loopne
fisttp
sub
pop
mov
xchg
cmps
call
lds
mov
repz
inc
in
iret
cmp
dec
jl
hlt
(bad)
div
test
imul
sub
or
adc
or
mov
sub
scas
jmp
(bad)
in
in
jp
add
jbe
fmul
cmp
shl
add
jecxz
cwde
pop
in
push
popa
pop
outs
int3
lea
leave
xor
mov
mov
fcomp
cmp
xor
rcr
push
aad
push
adc
(bad)
fstp
rcl
mov
push
jp
cld
sbb
push
rol
nop
push
out
sbb
sbb
(bad)
push
adc
gs
mov
rol
enter
adc
cmp
push
ret
loope
cld
sub
cmp
push
sbb
lods
nop
lock
ins
xlat
enter
jle
jmp
inc
jne
in
inc
and
mov
mov
mov
xor
ss
scas
mov
jbe
lahf
inc
add
pop
cmp
loop
stos
cmc
cmp
adc
loop
(bad)
pop
push
inc
aad
imul
pop
adc
sti
mov
lods
inc
loopne
xchg
push
adc
mov
inc
or
sub
ins
test
in
jmp
sti
jo
sbb
test
mov
mov
aam
or
and
push
(bad)
xor
data16
and
and
lods
imul
ins
enter
pop
sbb
push
jle
je
gs
dec
call
clc
loopne
mov
xchg
pop
pop
fld
daa
test
adc
div
mov
(bad)
call
loope
aam
inc
xor
pop
out
(bad)
push
ja
pop
add
outs
adc
data16
push
out
pop
fbld
inc
out
adc
sub
mov
push
dec
pushf
jns
add
push
pop
sahf
imul
mov
mov
popf
jo
cmp
sub
jno
and
mov
mov
fwait
inc
jbe
jne
jns
and
mov
cmp
ror
inc
add
loope
call
out
add
pop
push
dec
push
jae
jae
loop
cmps
mov
mov
stc
fcmovb
idiv
add
lds
cmp
push
ja
mov
sbb
idiv
(bad)
mov
and
arpl
mov
push
into
repnz
loop
in
jae
inc
push
adc
inc
push
lods
sub
adc
and
ds
dec
ins
aaa
add
adc
gs
dec
dec
test
(bad)
call
adc
inc
add
jns
gs
mov
arpl
fiadd
jg
jae
xor
add
mov
enter
sbb
mov
xor
mov
add
jl
mov
cmpxchg
and
jmp
xchg
mov
fldenv
xchg
int3
cmps
add
sub
xchg
addr16
dec
jl
pop
pop
mov
sti
dec
sub
pop
aad
inc
mov
cdq
popa
lods
loope
jo
push
pop
std
gs
dec
retf
adc
xor
(bad)
mov
jle
(bad)
out
enter
(bad)
xor
scas
gs
enter
clc
pop
and
arpl
repz
dec
ins
loope
inc
xchg
ja
dec
std
stc
call
push
xchg
lahf
mov
sbb
cmps
js
in
inc
int
mov
(bad)
xor
mov
or
add
jbe
test
mov
jecxz
and
add
mov
push
push
in
neg
dec
inc
xor
fld
shr
retf
shl
adc
mov
(bad)
fist
mov
int3
sahf
mov
dec
dec
and
test
and
and
pop
add
xor
jo
and
daa
jecxz
mov
icebp
push
xor
or
sub
cmps
mov
test
add
pop
vxorps
jg
jae
call
add
ins
test
mov
pushf
jge
sbb
cdq
gs
inc
int
out
repnz
mov
je
xor
cli
sub
jae
and
inc
dec
xchg
cmp
jmp
jmp
clc
or
hlt
ret
lock
and
dec
add
scas
jl
adc
sbb
fmul
sub
jno
sub
ror
in
(bad)
(bad)
fdivr
add
push
int
sti
sar
les
(bad)
dec
push
cmp
push
out
aam
(bad)
shl
mov
or
stos
mov
test
pop
and
sub
(bad)
mov
dec
js
movs
ret
push
inc
cli
sbb
push
sub
(bad)
icebp
enter
xchg
mov
outs
(bad)
scas
mov
cmp
jns
ret
lock
mov
sbb
xchg
les
cmp
test
movs
std
out
cs
or
cli
stos
sub
mov
jl
(bad)
cli
inc
add
pop
jnp
jecxz
retf
mov
xor
test
int
or
adc
sbb
pop
push
mov
scas
call
xchg
dec
jg
enter
in
pop
mov
jl
mov
cwde
rcl
cwde
ds
mov
ins
outs
lea
repnz
xor
mov
jne
psubw
(bad)
adc
imul
sbb
(bad)
push
jmp
cmp
test
mov
aaa
cmp
lahf
xor
sub
in
jge
mov
cmp
rcl
dec
int
gs
adc
sbb
push
fisub
jmp
push
rcr
inc
jmp
fcom
fisubr
cwde
in
add
call
push
cdq
inc
loopne
mov
mov
int
and
inc
inc
jle
xchg
and
lock
movs
iret
sub
nop
mov
dec
adc
mov
xor
mov
push
bound
sbb
mov
retf
js
push
mov
dec
mov
and
test
mov
dec
pop
mov
sbb
jp
jmp
mov
or
cmp
push
loopne
push
loope
jmp
js
mov
or
(bad)
xchg
jae
adc
sbb
and
xor
popf
fnstsw
dec
jb
icebp
mov
out
mov
(bad)
jle
scas
aam
pop
(bad)
cmc
xor
mov
imul
imul
xchg
dec
xor
std
fidiv
in
pop
in
and
(bad)
push
or
daa
inc
pop
add
and
fld
ficomp
jb
xchg
iret
jae
inc
xchg
xlat
mov
jmp
sahf
out
inc
or
int3
jle
test
cmps
and
xchg
repnz
jne
repnz
(bad)
out
and
mov
xchg
fnstenv
fmul
push
nop
mov
xor
retf
cmc
xchg
pop
jno
jbe
inc
dec
pop
nop
in
xchg
cmp
xchg
in
fst
daa
sti
adc
xlat
mov
mov
inc
movs
jae
icebp
push
fidivr
(bad)
jns
dec
and
jns
add
loope
(bad)
jnp
lahf
sbb
adc
fisttp
inc
inc
or
mov
cmc
aaa
int
jg
into
addr16
xchg
sbb
es
xor
dec
cld
add
fucom
xor
sbb
enter
pusha
retf
push
and
out
aam
pop
mov
scas
fisub
push
push
mov
xchg
mov
push
stos
mov
adc
ror
iret
lock
aad
push
fstp
imul
shr
daa
(bad)
test
stos
or
mov
sbb
cmp
inc
call
xchg
inc
push
inc
leave
sub
adc
pop
(bad)
imul
mov
sub
inc
addr16
les
push
pop
fisttp
push
mov
push
or
add
fist
dec
clc
pusha
outs
adc
mov
adc
fwait
adc
sahf
push
inc
mov
sbb
mov
std
push
lahf
stos
xchg
fmulp
push
movs
rcl
push
adc
jecxz
outs
cmc
shr
cmps
or
inc
ror
loop
dec
mov
(bad)
loopne
loop
into
jbe
sahf
in
loope
cwde
inc
ret
cmps
mov
loope
jns
sahf
dec
arpl
inc
mov
sbb
icebp
mov
xchg
push
adc
push
jbe
(bad)
and
xlat
pop
iret
adc
jp
sar
sub
or
dec
ins
adc
pop
aam
out
cld
jecxz
imul
daa
mov
into
or
cmp
push
(bad)
sub
cmc
idiv
call
addr16
rcr
push
or
(bad)
mov
mov
xor
jbe
into
adc
pop
loop
cmp
dec
shl
jbe
push
(bad)
pop
inc
jo
retf
pop
data16
je
inc
or
and
ds
xchg
(bad)
push
jbe
out
and
aas
cmp
adc
adc
and
push
jl
xor
adc
adc
mov
into
mov
jae
add
jge
cmp
push
retf
pop
outs
pushf
les
popa
ja
dec
dec
xchg
sub
ja
jge
adc
jno
or
push
sub
pop
cwde
xchg
sbb
popa
outs
call
dec
push
sahf
mov
(bad)
(bad)
jle
push
add
inc
pop
(bad)
fld
sbb
cmps
xchg
jnp
out
cmp
iret
xor
dec
movs
loope
int
lds
cwde
pop
inc
mov
sti
jle
xor
outs
mov
stc
jb
mov
push
pop
add
or
rcr
out
mov
jp
pop
inc
mov
dec
repz
xchg
dec
ficomp
rcl
xchg
lock
mov
test
xchg
fldcw
inc
and
push
es
imul
lock
leave
scas
in
mov
leave
fidivr
jmp
jmp
inc
mov
jecxz
int3
cld
pushf
mov
mov
sub
nop
dec
mov
cld
inc
call
sub
pop
or
or
retf
sub
movs
stos
mov
xor
or
cmps
rol
aam
or
xchg
adc
cmp
call
in
xor
inc
push
lea
push
out
dec
dec
scas
cmp
aaa
jle
fnstcw
xchg
imul
xor
dec
lods
jmp
push
scas
lods
aaa
jo
(bad)
(bad)
das
mov
sub
sbb
test
dec
and
jae
out
add
(bad)
or
mov
or
push
repz
dec
fcmovb
sbb
in
cwde
mov
stc
test
mov
mov
movs
dec
and
leave
adc
scas
xchg
pusha
dec
push
push
pop
sbb
jo
dec
mov
outs
dec
call
add
or
mov
cmp
stos
iret
pop
add
out
sub
movs
xchg
mov
out
repz
inc
inc
inc
call
ret
(bad)
dec
sbb
lea
push
ins
adc
ins
std
repnz
xchg
out
les
aam
out
fdivrp
scas
xchg
aad
dec
addr16
neg
mov
lea
jno
add
call
stc
cmc
pushf
pop
cmc
dec
jb
cli
ficom
adc
das
rcr
movs
add
hlt
xor
scas
(bad)
fwait
gs
push
out
clc
or
and
lock
or
push
adc
daa
push
js
sbb
add
and
mov
int3
outs
pop
movs
imul
jmp
sahf
push
lods
outs
fcomp
push
call
sub
fnstsw
pop
pop
sub
bound
mov
imul
lahf
test
retf
xchg
push
mov
push
leave
int3
(bad)
pop
pop
adc
mov
cmc
xchg
lahf
xchg
sbb
mov
dec
sub
fsub
neg
pop
lea
shr
repnz
lds
cmps
push
push
sub
popf
mov
mov
dec
mov
ds
add
jno
mov
cmp
nop
mov
das
imul
imul
xchg
mov
pusha
push
sti
cmp
mov
xor
cmp
dec
call
mov
xchg
adc
sbb
mov
cld
retf
out
add
icebp
ins
xor
aas
js
fimul
cmps
fld
arpl
popa
imul
jnp
pop
cmp
dec
(bad)
(bad)
xor
inc
sbb
add
and
je
(bad)
push
(bad)
cmps
cmps
mov
push
jecxz
fmulp
push
repz
mov
clc
push
jne
push
jmp
pushf
and
pop
push
aaa
push
rcl
loop
icebp
cmp
in
or
push
popf
in
cmp
fidiv
mul
sbb
push
sub
(bad)
popa
xor
test
dec
and
(bad)
retf
xchg
sub
(bad)
mov
and
add
dec
mov
sbb
cmp
outs
imul
clc
shl
pop
xchg
in
sub
lods
adc
push
mov
jmp
(bad)
scas
repnz
xchg
mov
dec
and
out
pop
or
imul
dec
ret
push
clc
cmp
(bad)
dec
pop
sbb
add
ret
rol
fnstenv
push
push
mov
(bad)
sub
call
nop
adc
hlt
pop
into
and
sbb
cmp
test
xor
out
mov
jmp
xchg
lds
enter
dec
cmp
xor
rcr
adc
add
xchg
jmp
push
stos
lds
les
jg
pop
stos
out
push
and
xor
dec
add
popa
sbb
mov
mov
cld
sti
popf
rcl
xor
fwait
sub
push
pop
add
cdq
jmp
sahf
jo
ss
mov
cmp
cmp
sbb
sub
inc
nop
stos
out
jnp
fisub
add
dec
addr16
push
sti
movs
in
imul
stos
add
push
or
jmp
es
xchg
xor
push
cmp
xchg
loop
pop
rcl
loop
push
fldcw
and
push
push
shl
dec
cmps
fcomip
or
xchg
mov
shl
push
cmps
xchg
jno
xor
out
inc
bound
jae
mov
mov
retf
push
in
(bad)
jne
xchg
mov
out
jno
test
inc
jb
mov
xor
push
iret
repz
fdiv
mov
or
stc
gs
out
jno
cmps
jecxz
movs
bound
popa
jmp
ret
push
mov
mov
push
dec
frstor
(bad)
cmp
cmc
ret
mov
lock
retf
push
mov
nop
loope
push
fdivr
aas
in
or
adc
jbe
inc
mov
mov
out
or
sbb
dec
jge
dec
in
pop
call
imul
and
test
sbb
sbb
pop
push
adc
stos
test
mov
les
aas
xchg
mov
or
(bad)
call
push
mov
call
pop
push
cmp
mov
inc
aam
jmp
aaa
popa
les
(bad)
push
mov
dec
std
jo
pop
or
loope
jo
stos
mov
lea
pop
movs
stos
mov
lock
mov
dec
jl
enter
mov
xor
(bad)
inc
or
popa
in
push
or
and
push
jmp
dec
push
xor
sbb
(bad)
pusha
icebp
mov
xchg
lea
sub
out
sbb
cdq
addr16
sbb
mov
add
cmp
adc
(bad)
fisttp
jge
sti
adc
rol
xor
dec
xor
jl
loopne
adc
jo
daa
lock
inc
inc
aaa
jne
adc
mov
enter
cli
or
add
mov
adc
repnz
or
sbb
imul
shr
jbe
inc
aam
jl
in
xchg
mov
pop
mov
(bad)
int
fcmovne
sbb
pusha
std
push
mov
jns
sub
jmp
sbb
mov
sbb
lds
stc
cmp
sahf
mov
aas
cmp
ins
or
push
push
je
push
int
repnz
and
push
jns
adc
jle
sar
add
or
out
sbb
pcmpgtb
push
in
cmps
popa
pushf
mov
push
mov
shl
add
es
mov
std
adc
adc
repnz
dec
push
or
mov
and
daa
xor
call
aaa
fmul
aad
xor
neg
cmp
mov
inc
jmp
jl
pop
in
push
loop
ss
out
shl
inc
iret
xchg
test
sub
adc
repnz
daa
and
inc
sub
jo
pop
xlat
or
mul
or
test
xchg
dec
imul
dec
test
ret
cld
push
in
dec
jae
mov
or
pop
push
retf
adc
repnz
int
sbb
ss
clc
ficomp
clc
mov
dec
popf
cmp
scas
xor
xchg
jle
xlat
mov
mov
aas
(bad)
jae
cmps
cwde
out
inc
inc
clc
ret
cmp
push
sbb
jmp
cmps
mov
jae
sub
call
dec
es
leave
xlat
mov
cmc
adc
pop
rcr
pop
adc
jmp
icebp
xchg
jl
pop
dec
dec
hlt
enter
rcl
iret
mov
ins
lock
stos
mov
jl
stos
gs
inc
mov
and
dec
test
xor
hlt
push
mov
add
mov
sub
out
movs
xchg
mov
add
inc
cmp
test
stc
in
lahf
repnz
mov
imul
push
cld
js
sub
clc
xchg
rcl
or
jo
mov
xchg
or
sbb
jne
mov
cli
and
lods
cld
pop
xchg
or
(bad)
pop
lock
aas
loop
adc
outs
inc
lahf
fcmovne
ss
outs
(bad)
cmps
sub
jnp
inc
fs
cmps
pop
sahf
test
rcl
push
(bad)
out
add
popa
pop
arpl
push
jmp
ret
inc
jl
int3
sub
or
in
mov
mov
pcmpgtd
xchg
test
dec
pop
and
pop
cmp
jae
ins
or
jmp
scas
pop
ins
loop
or
adc
xchg
test
cmp
bound
mov
test
adc
mov
adc
out
fdiv
cmp
push
outs
jl
sub
xor
cs
pop
mov
xchg
inc
xchg
xor
fild
add
and
stos
or
das
or
cs
add
mov
jnp
cmp
shl
fild
pmaxub
pop
jge
stos
and
stc
xor
dec
dec
(bad)
aas
popa
(bad)
loopne
je
cdq
sub
add
test
lea
int3
test
sbb
cdq
adc
jmp
and
shl
mov
fldz
test
in
mov
push
inc
xchg
gs
push
int3
stos
push
test
(bad)
enter
sbb
call
mov
retf
xchg
es
ds
push
data16
xchg
leave
add
les
dec
sbb
fsubr
pop
ret
and
xor
popa
es
fistp
mov
add
hlt
push
pop
je
mov
push
or
cmp
int3
sub
inc
mov
pop
call
add
jle
cmp
in
inc
lods
mov
scas
xor
adc
cmp
lea
jae
ins
and
inc
repnz
cli
add
xor
adc
and
aam
lock
cld
xchg
mov
xor
mov
adc
push
in
imul
and
sub
xor
sub
xchg
jmp
push
mov
js
das
data16
mov
mov
jle
cmp
jp
add
retf
jbe
jl
sub
sbb
adc
fisttp
pop
cmp
sub
add
fs
mov
pop
sub
mov
vxorpd
lahf
repz
js
cmp
iret
out
aam
add
dec
xchg
add
mov
mov
gs
jecxz
call
mov
mov
mov
fidiv
jmp
ss
aas
clc
shr
fbld
adc
pop
movs
adc
inc
dec
push
inc
sbb
sub
pop
cmps
call
cmp
and
push
nop
jmp
adc
cmps
jbe
ja
addr16
aaa
stos
mov
das
push
test
xlat
push
sbb
js
aam
fsubr
ins
scas
mov
push
jmp
ins
sub
cmp
jl
xor
aas
sub
or
mov
outs
jmp
cmp
cmps
scas
sar
mov
xlat
clc
ss
ret
pop
mov
jno
adc
movs
jg
pop
outs
pop
stos
hlt
test
int3
jp
loopne
cmp
mov
or
cli
cdq
push
lock
aam
ret
xlat
pop
pop
in
mov
adc
data16
xchg
jmp
push
and
dec
repz
gs
dec
retf
inc
scas
and
movs
sbb
jl
mov
test
xor
call
in
rol
push
iret
call
stos
outs
fucomi
xchg
cmps
aam
push
push
add
push
mov
mov
push
push
mov
push
fwait
push
aad
cmp
outs
jbe
ret
push
dec
xor
mov
xchg
inc
clc
push
jg
sbb
pop
or
xchg
xchg
mov
xor
push
jg
dec
add
outs
jo
and
bound
jno
outs
jb
push
mov
leave
cmc
fcomp
stos
retf
(bad)
fucomp
mov
shr
sub
adc
push
mov
mov
or
xor
adc
xor
push
lock
and
das
dec
scas
or
ja
ret
test
rcr
loope
mov
dec
outs
mov
xchg
adc
enter
sbb
xchg
mov
and
and
xor
jle
mov
stos
cmp
sub
inc
lods
mov
cwde
adc
loope
dec
sub
fs
fisub
out
jb
inc
(bad)
scas
in
rol
mov
xchg
imul
ret
push
xchg
sub
fcomip
shr
xchg
sub
repz
or
push
adc
setae
outs
mov
jecxz
into
clc
pop
and
movs
data16
push
in
jae
add
mov
jne
inc
mov
jb
and
push
ret
shr
call
sti
mov
loope
xchg
outs
daa
lahf
retf
fdiv
mov
jo
fist
call
jns
js
adc
ds
test
mov
(bad)
dec
(bad)
lea
push
xchg
adc
xor
pop
dec
xchg
sub
inc
sub
mov
aaa
data16
test
xor
int
sbb
pop
push
push
dec
loopne
add
mov
inc
jmp
pop
adc
out
pop
ret
int
(bad)
icebp
mov
outs
jbe
inc
mov
sti
not
test
or
das
iret
loop
jnp
iret
mov
sti
ins
mov
mov
popf
xchg
cmp
bswap
and
jmp
ss
movs
or
ins
and
mov
int3
push
mov
mov
or
outs
cmp
pop
aam
es
cwde
dec
mov
retf
and
ja
adc
ror
fld
adc
sub
push
rol
adc
pop
push
or
sub
ret
je
push
mov
mov
lods
ins
(bad)
call
enter
xor
sbb
cld
out
cmp
retf
or
push
ret
and
das
mov
mov
cmp
push
jno
xlat
dec
jmp
inc
aaa
(bad)
in
adc
lock
sbb
loope
std
mov
test
mov
mov
popf
dec
mov
inc
mov
jo
fiadd
clc
pop
inc
inc
rcr
retf
jbe
adc
and
out
and
xchg
adc
cmps
cli
push
data16
(bad)
and
pop
inc
retf
in
sbb
fcomp
push
jmp
ja
cld
icebp
popa
xor
out
sub
sbb
pushf
mov
jbe
retf
mov
adc
cmps
inc
bound
mov
scas
pusha
mov
jae
scas
adc
cmp
adc
fbld
ror
fimul
adc
or
neg
mov
jo
and
sbb
mov
daa
inc
loopne
add
push
push
daa
mov
and
test
enter
mov
cld
cdq
lea
xchg
cwde
push
repz
adc
lods
clc
sbb
lods
and
inc
push
or
movs
mov
xor
int
and
fcom
repz
push
fldcw
inc
push
jnp
sub
mov
pop
fs
inc
push
lods
push
dec
(bad)
(bad)
int
sti
inc
dec
pop
or
push
add
mov
nop
inc
pop
imul
js
add
mov
out
loope
dec
out
lods
fcomp
rcl
pop
xchg
push
in
ret
(bad)
adc
mov
lahf
clc
scas
pop
fdivrp
and
xlat
call
lock
into
mov
lods
(bad)
cdq
xor
adc
(bad)
stos
in
adc
mov
and
mov
add
dec
dec
aam
xor
sbb
push
pop
ds
jo
or
push
mov
pop
xchg
jmp
test
(bad)
call
or
xchg
mov
inc
ds
sub
dec
aam
add
push
mov
in
stos
xor
(bad)
ins
mov
cs
cs
lods
xor
mov
jge
dec
lea
or
sbb
into
cmp
into
sbb
rcl
std
lock
in
movs
aas
ret
or
test
outs
or
sar
adc
int
out
and
cld
clc
pop
jge
adc
adc
inc
aas
jbe
mov
hlt
pop
push
jbe
int3
inc
out
push
mov
push
ret
pop
adc
ss
call
fcomp
mov
and
dec
xchg
movs
sub
ret
dec
sbb
pop
test
xchg
or
sub
jl
dec
xor
dec
mov
inc
pusha
and
int
stos
jl
mov
mov
ret
push
ror
pop
out
aam
mov
jns
cwde
pop
les
mov
jg
fnstcw
push
pop
shl
js
loop
lds
in
sbb
pusha
movs
outs
(bad)
sahf
xchg
mov
adc
inc
ja
push
(bad)
mov
scas
adc
rol
movs
or
jge
xchg
mov
and
stos
cmp
cmps
jno
iret
sub
or
dec
fidiv
sbb
inc
xor
mov
cmp
call
cmp
fsubr
inc
cmp
push
fst
lea
ss
pop
xor
push
add
idiv
and
dec
aaa
adc
fmul
repz
sub
cwde
repnz
movs
mov
js
xor
adc
sub
push
sbb
sbb
(bad)
adc
cs
jno
ins
pop
sub
push
fiadd
out
bound
(bad)
mov
std
std
and
loope
loopne
and
mov
pop
sub
inc
cmp
rcl
or
pop
outs
adc
jl
and
imul
push
sar
loopne
pop
int
cmps
lea
clc
outs
adc
adc
sub
iret
or
rcl
hlt
retf
sbb
sub
int3
and
and
and
add
push
add
jmp
out
adc
mov
jl
and
mov
(bad)
xlat
repz
add
mov
sbb
(bad)
hlt
pop
fwait
lea
sti
push
pop
cld
cmp
pop
xor
inc
test
fsub
(bad)
cmp
sahf
cmp
or
xchg
or
hlt
movs
dec
test
test
jns
js
test
xchg
ds
pusha
adc
cmp
xor
mov
mov
mov
pop
and
inc
inc
ret
push
xor
(bad)
retf
xor
outs
inc
inc
pushf
in
inc
into
adc
lods
jp
or
retf
or
jmp
shr
cmp
out
test
dec
xchg
add
mov
mov
outs
aas
fistp
ins
sar
jae
pop
dec
adc
xor
and
test
les
cdq
or
adc
cmp
popf
stos
sbb
lahf
xchg
jne
mov
sub
dec
add
adc
xor
inc
jnp
dec
jmp
jne
hlt
pop
(bad)
inc
dec
inc
gs
mov
cmp
mov
icebp
cwde
xchg
dec
cld
clc
mov
cld
mov
mov
adc
cmp
jecxz
pushf
int
xchg
push
lea
movs
adc
add
add
adc
test
inc
inc
mov
fnsave
xchg
loopne
loopne
mov
movs
fld
push
jno
cmps
fld
ret
fisttp
addr16
sar
cdq
arpl
mov
test
or
push
pop
adc
mov
mov
sbb
jle
and
adc
cmp
nop
pop
sub
fisttp
cmps
jbe
out
dec
cmp
cmp
out
icebp
aam
jno
fsubr
popf
adc
ins
pop
sub
push
dec
jle
cmc
pop
mov
and
(bad)
jecxz
in
xchg
cmp
lods
xchg
mov
mul
sub
pop
scas
xor
fdiv
push
xchg
mov
dec
pop
jmp
mov
push
and
push
in
arpl
jmp
dec
rcl
mov
lods
inc
mov
mov
or
sub
clc
leave
jbe
add
jbe
pop
jp
(bad)
fst
std
mov
or
dec
dec
loop
mov
stos
mov
ins
or
fsubr
(bad)
hlt
and
pop
(bad)
dec
push
rcl
js
jmp
push
cmp
xor
jne
icebp
push
jae
call
pop
cmp
ffree
xor
and
dec
ss
mov
cmp
retf
inc
mov
xchg
jmp
or
push
cmp
lods
inc
push
xchg
mov
es
int3
fnsave
xor
ror
bound
push
and
mov
adc
mov
call
popa
pusha
mov
pop
movs
sbb
inc
jns
test
das
retf
lds
jno
int
test
std
sbb
popf
xor
pop
enter
sub
cmps
movs
sbb
repnz
xchg
adc
inc
je
fnsave
pop
loope
inc
call
frstpm(287
adc
cs
cdq
cmp
mov
daa
mov
dec
cmp
lods
push
arpl
test
xlat
xchg
ss
jae
fmul
frstor
push
mov
es
sbb
std
das
cmp
jns
in
fs
pop
sbb
in
sti
loop
xchg
add
add
xor
cmp
ficomp
xchg
sub
xchg
cdq
jge
adc
in
jp
cli
fild
pop
cmc
cdq
sub
sbb
pop
mov
mov
cmp
mov
(bad)
dec
fldenv
shr
ins
cdq
sub
cwde
hlt
fwait
hlt
xor
add
adc
enter
pop
jmp
sbb
mov
out
out
call
repnz
inc
xlat
fmulp
jl
retf
mov
lods
out
dec
sub
and
mov
lds
(bad)
xchg
sub
retf
out
stc
into
and
pop
popf
scas
push
adc
push
add
inc
mov
add
mov
sub
shl
add
ds
push
push
xchg
sub
es
loopne
xchg
lahf
js
call
aad
data16
(bad)
dec
leave
mov
mov
and
xor
xchg
cmp
pop
sbb
adc
xchg
mov
mov
adc
popf
mov
fucom
mov
pop
jns
xchg
loope
nop
sbb
retf
(bad)
jmp
jae
shl
ret
clc
cmp
out
add
xchg
jecxz
push
(bad)
jns
(bad)
jg
dec
in
inc
test
stc
pushf
pop
stos
sar
sti
out
js
pop
pop
xchg
aad
or
jg
push
mov
push
les
mov
aam
sub
dec
lock
stc
jmp
movs
mov
sbb
mov
imul
jmp
icebp
fisubr
mov
cmp
sbb
out
fisttp
mov
push
pop
fcomp
push
test
sti
(bad)
out
call
fsub
mov
ret
cmp
xchg
and
xor
jmp
in
and
lea
xlat
and
std
ins
stos
mov
call
mov
retf
mov
fimul
add
dec
pop
rol
jnp
push
jl
xchg
ror
clc
pop
inc
test
shl
mov
mov
jle
xor
rcr
cmps
pusha
in
ror
je
aam
data16
int
movs
pop
(bad)
fcom
dec
rcr
push
(bad)
jnp
arpl
pop
cmps
lock
inc
mov
out
add
inc
inc
fisubr
int
cwde
push
test
and
popa
push
imul
jns
outs
sub
push
xchg
(bad)
fiadd
(bad)
in
push
pop
das
push
inc
xor
shr
cmp
mov
fld
xor
jmp
ds
leave
dec
loop
adc
stos
pop
rol
out
xor
pop
in
popa
jl
(bad)
pusha
mov
push
into
sub
jns
mov
inc
clc
dec
or
ja
retf
ins
jmp
adc
sub
dec
int3
xor
mov
sti
lods
sub
jae
aam
(bad)
lock
xlat
js
mov
out
sub
(bad)
in
xor
xchg
into
inc
push
dec
dec
add
retf
jmp
xor
inc
jne
call
jp
xor
iret
jo
test
imul
sub
ja
jp
or
sbb
push
mov
retf
call
cmp
fisubr
jb
outs
sbb
daa
push
in
xor
push
xchg
fnsave
jmp
test
lds
and
imul
in
xchg
inc
icebp
add
lods
mov
cmp
xchg
ror
(bad)
outs
mov
cwde
cwde
jge
or
stc
add
pop
setg
add
fdiv
pop
rcl
std
pop
nop
call
pop
jge
mov
dec
mov
std
cmp
call
imul
mov
enter
arpl
dec
ins
lods
aad
(bad)
stc
mov
sti
idiv
mov
das
sti
push
sbb
test
push
movs
lods
in
mov
dec
movs
not
fsubr
jp
pop
neg
cmps
rol
rcl
iret
mov
pop
nop
mov
jecxz
push
outs
divps
and
pop
cwde
or
sbb
xchg
jo
es
push
sub
ror
push
xor
(bad)
mov
fnsave
xchg
sbb
popa
mov
mov
mov
xor
dec
mov
mov
xchg
push
jb
aam
sbb
push
shr
xlat
push
sub
add
or
xor
repnz
nop
(bad)
bsr
add
inc
div
cmp
ss
test
pop
ja
or
loope
xor
ret
ja
gs
lods
call
mov
fisubr
sar
or
mov
pop
in
jns
inc
and
mov
fldcw
cmp
fiadd
xchg
test
ja
(bad)
movs
jg
lods
cmp
jg
repz
or
inc
cmp
xlat
jmp
mov
arpl
lds
add
ss
pushf
lods
ds
retf
sbb
pop
das
jp
mov
mov
add
add
aas
fmul
je
sbb
sub
in
jecxz
mov
xchg
jmp
mov
leave
ja
cmp
pop
and
inc
nop
mov
mov
xor
or
mov
xlat
mov
and
sub
add
(bad)
arpl
ins
jbe
fild
int
sub
arpl
das
pop
and
sbb
fs
add
dec
mov
xor
loopne
xchg
cmp
and
push
std
adc
sub
imul
cmp
adc
sti
movs
mov
adc
ror
fdivr
outs
push
and
imul
lahf
into
add
jge
imul
mov
add
jecxz
add
mov
movs
push
sbb
nop
add
cmp
das
xor
sar
scas
mov
out
stos
pop
std
xor
push
ud2
sub
(bad)
ss
je
add
scas
or
xchg
sti
sub
arpl
call
push
xor
cmc
repnz
xchg
jle
neg
mov
mov
push
adc
fldcw
lea
push
je
stos
mov
rdmsr
in
or
cmp
jmp
(bad)
or
scas
and
dec
fld
movs
cs
lods
call
daa
mov
mov
xor
cmp
dec
outs
fldcw
shl
test
mov
pusha
mov
add
mov
sub
pop
ds
sbb
sub
(bad)
popf
sbb
jb
xchg
mov
out
pop
mov
test
mov
add
and
bound
test
sbb
adc
cmp
sub
and
sbb
stos
push
xchg
add
inc
imul
cmp
pushf
inc
push
and
pop
nop
push
hlt
call
call
add
xor
inc
in
or
push
stos
aas
xchg
lds
aad
mov
adc
dec
daa
xchg
enter
mov
pusha
in
iret
outs
mov
popa
cmp
push
pop
dec
daa
and
out
cmp
imul
push
test
dec
push
imul
in
or
xlat
enter
sub
xor
dec
jl
lods
(bad)
mov
loope
dec
stos
mov
repnz
ins
push
addr16
stc
xchg
loop
inc
fild
inc
in
clc
dec
iret
add
daa
movs
jno
and
jle
add
cwde
mov
stc
call
cmp
sub
test
aaa
mov
stos
imul
loop
push
sub
cdq
xor
cwde
int3
ffree
shr
xlat
int
ficomp
inc
mov
loopne
std
fisub
enter
push
cmp
inc
push
rcl
rcl
sub
pop
ret
enter
jmp
cli
mov
bound
sbb
cmp
pushf
dec
rcl
add
icebp
mov
jl
add
push
mov
mov
xor
imul
jmp
push
ret
cli
and
adc
sub
scas
stc
or
out
inc
test
mov
cmp
xchg
mov
add
jae
stc
imul
daa
loop
mov
mov
add
imul
mov
mov
ud1
getsec
test
mov
js
sbb
jb
or
mov
dec
adc
lods
xchg
(bad)
aam
add
push
movs
mov
sti
idiv
xor
rol
aas
imul
fwait
shl
(bad)
aas
jns
inc
aaa
and
lahf
jo
fiadd
fstp
xchg
inc
mov
rcl
arpl
and
lds
shl
add
retf
cmp
mov
arpl
xor
cwde
xor
sbb
imul
aad
or
or
fld
pop
fimul
sub
test
popa
scas
mov
add
push
das
imul
into
sub
adc
dec
cld
pop
(bad)
mov
add
pushf
es
mov
popa
dec
mov
fs
sub
pop
mov
adc
aam
inc
(bad)
sub
test
mov
mov
mov
ds
call
jo
jb
jl
xchg
enter
mov
push
mov
inc
shl
or
cmp
outs
mov
pop
lds
cmp
or
sbb
ret
pop
sub
mov
mov
adc
sbb
test
(bad)
push
rcl
je
xlat
xor
and
jne
idiv
mov
stos
pop
mov
xchg
scas
retf
or
pop
push
mov
(bad)
cmp
(bad)
in
cmp
ret
jns
add
call
enter
not
(bad)
cli
inc
int3
fisttp
stos
push
push
jmp
add
xor
movs
popf
xchg
mov
xchg
outs
rol
pop
xchg
ret
pop
xchg
and
mov
mov
or
fisub
movs
xor
into
xchg
inc
push
push
ret
xor
repnz
dec
out
and
fistp
fcmovnu
mov
push
jmp
add
rcl
mov
xchg
mov
cld
inc
push
out
int
retf
aas
movs
jo
push
imul
pop
fld
pop
(bad)
xor
jae
mov
xchg
or
dec
movs
stos
repz
or
push
repz
int3
dec
adc
xchg
jb
dec
or
pop
sub
in
xchg
ins
out
retf
pop
add
ret
(bad)
pop
jl
fucomp
pushf
in
inc
mov
cmp
mov
add
shl
jo
cmps
mov
test
xchg
outs
mov
(bad)
mov
jb
fcomp
addr16
jae
cmp
jecxz
out
sbb
(bad)
in
pop
retf
jmp
sbb
hlt
imul
jecxz
push
xchg
adc
xor
lods
jp
xor
sbb
push
mov
call
xchg
dec
cld
fidivr
ficomp
test
test
dec
mov
add
jbe
aas
jle
xor
dec
pop
jmp
data16
sub
loop
mov
addr16
push
je
xor
cmps
pop
in
adc
push
add
fnstenv
push
push
stc
out
adc
pushf
imul
push
outs
lods
(bad)
call
xchg
xchg
mov
cs
pusha
inc
add
xor
push
add
xlat
adc
mov
dec
sbb
mov
mov
fbld
int3
mov
retf
lock
ins
add
and
pop
js
jecxz
loop
fmul
rcl
sbb
xchg
scas
clc
add
movs
mov
add
sub
and
push
and
jb
popf
aad
adc
lock
ins
mov
not
adc
dec
pop
call
jmp
aad
movs
outs
pop
or
dec
lods
(bad)
sbb
test
inc
or
cmp
adc
shl
aam
call
mov
adc
dec
stos
jae
mov
pop
cmovp
lahf
neg
mov
imul
mov
push
mov
hlt
aas
dec
loope
test
adc
adc
or
adc
xchg
adc
mov
(bad)
jae
pop
mov
xor
push
jnp
std
stos
test
je
stos
es
jle
xor
movs
sbb
bound
aas
mov
xchg
out
imul
xchg
cmp
or
mov
ret
popa
dec
jl
sahf
ins
jo
dec
pop
mov
int
mov
mov
lock
add
and
jg
dec
pand
pop
arpl
cdq
add
pop
in
pop
out
js
dec
ja
sbb
cmp
xchg
call
test
mov
cmps
mov
push
inc
add
cmp
pop
pop
ins
das
or
inc
mov
std
inc
xchg
sbb
jae
mov
mov
lods
js
dec
mov
xchg
stos
jl
call
jae
ja
add
rcr
xor
ret
popf
out
sbb
imul
cli
imul
icebp
adc
pop
test
adc
mov
mov
inc
sahf
cwde
aaa
add
ret
ja
jl
lods
mov
pushf
gs
or
xor
xor
push
push
and
push
jne
test
and
adc
push
jg
inc
mov
loope
cwde
adc
call
mov
sbb
std
cmc
cli
mov
pop
adc
sub
test
dec
sbb
movs
sub
mov
aaa
fnstsw
push
jmp
sti
lods
jne
out
dec
movs
daa
mov
push
add
mov
xchg
adc
int
jns
push
sub
xor
xlat
sub
add
mov
xchg
push
dec
xchg
jg
fwait
adc
std
scas
dec
pop
mov
and
add
mov
gs
lahf
leave
pushf
mov
movs
lahf
xor
xor
sar
jp
dec
cld
inc
dec
push
data16
mov
xchg
cmp
jmp
sub
stos
sub
hlt
fistp
call
loope
mov
mov
(bad)
mov
push
out
and
mov
rcr
in
pushf
or
out
in
sbb
popa
add
sbb
mov
push
lock
pop
dec
jecxz
xchg
scas
movs
cmp
enter
mov
adc
cmp
sbb
mov
push
fwait
retf
sbb
adc
dec
mov
jo
outs
aas
push
mov
cmp
inc
imul
ins
push
dec
retf
cmp
jl
jns
push
fcom
xor
or
push
rcl
adc
cli
cmp
push
test
rcr
lea
shl
pushf
aam
and
and
cmp
push
fwait
or
stos
aad
or
or
mov
je
loope
sbb
push
cmc
xchg
lock
arpl
mov
pushf
in
sub
add
loop
cmp
dec
fstp
xor
sub
inc
mov
das
or
mov
call
out
inc
jle
xor
ja
(bad)
leave
ds
push
dec
(bad)
cli
pop
mov
cmp
imul
xor
xchg
ja
xchg
shl
bound
out
mov
add
push
addr16
rol
daa
push
add
ret
push
xchg
(bad)
xchg
xchg
or
add
cs
in
cmp
xchg
ret
and
inc
pop
daa
mov
rcr
out
fld
lods
sub
pusha
mov
jg
sub
mov
adc
(bad)
pop
sub
mov
imul
xchg
mov
idiv
fbld
mov
push
xchg
iret
push
popa
shl
xchg
jle
pop
inc
and
test
dec
shr
out
aaa
cli
mov
cli
sub
push
ja
sbb
push
jne
fs
inc
mov
in
adc
lahf
mov
pop
or
pop
cmp
xchg
test
cmp
(bad)
stc
shl
mov
icebp
fist
sbb
pop
sbb
arpl
(bad)
cmp
sub
int3
clc
hlt
jno
lods
adc
arpl
sub
jmp
das
icebp
mov
shl
jmp
or
adc
repnz
mov
jge
idiv
adc
cwde
mov
push
adc
sub
dec
dec
adc
push
xlat
mov
sub
pop
xchg
pop
imul
dec
imul
lods
(bad)
out
jo
xchg
jl
mov
dec
or
in
cdq
les
test
xor
loopne
mov
jg
xor
ret
mov
jbe
xor
inc
push
cmps
ficomp
sub
pop
cmp
and
jmp
test
and
pop
sub
pop
mov
mov
push
pop
cli
icebp
adc
pop
outs
cmps
xchg
lods
into
mov
cmps
(bad)
lea
shl
pop
mov
pop
mov
int
sbb
mov
cld
adc
popf
mov
loopne
fidiv
inc
fsub
test
ins
(bad)
in
pushf
or
lea
mov
cmps
jle
fidiv
push
std
cmp
icebp
out
xlat
(bad)
add
inc
inc
adc
imul
dec
popf
iret
xchg
add
loope
and
retf
push
data16
mov
xor
pop
dec
adc
jae
maskmovq
test
mov
clc
xor
push
or
mov
pop
xchg
test
pop
adc
and
add
push
lea
adc
int
push
les
xchg
nop
scas
fwait
adc
das
ret
stc
lods
xchg
cs
inc
add
mov
(bad)
cld
jl
fwait
sub
stos
pop
ret
loope
das
push
aaa
xchg
add
data16
fwait
xor
inc
sbb
int
and
jg
push
adc
jo
xchg
popf
fcmove
xchg
cmp
movs
dec
push
adc
sbb
nop
and
fldlg2
cmps
lds
popf
inc
retf
je
push
pop
movs
(bad)
dec
push
scas
jle
fbld
div
imul
mov
into
pop
push
neg
jmp
shr
push
mov
sub
sti
cs
aas
or
stos
push
sub
movs
std
push
dec
mov
pusha
mov
sbb
jae
hlt
scas
mov
aad
test
(bad)
in
in
gs
scas
jmp
pusha
repnz
mov
mov
shl
pushf
pushf
xlat
push
push
lock
push
cmps
out
arpl
loopne
aas
dec
js
or
mov
(bad)
xor
adc
retf
mov
es
xchg
(bad)
iret
sub
sti
into
test
ja
jle
ret
mov
dec
scas
ja
dec
pop
fwait
ret
jge
pop
mov
xchg
or
aam
sub
push
mov
jmp
ror
rcr
mov
jno
mov
or
ud1
mov
repnz
cmp
call
outs
lahf
mov
dec
sbb
mov
xor
push
dec
adc
xor
movs
xchg
mov
mov
inc
nop
pop
cmp
imul
xor
xchg
xchg
pop
add
div
sub
movs
dec
adc
ret
retf
sahf
pop
bound
icebp
jmp
push
sar
push
call
jge
ins
out
addr16
jge
adc
and
and
mov
push
cdq
in
mov
push
ja
jbe
pop
jmp
jge
in
adc
cmp
push
fwait
jae
sbb
in
iret
dec
test
fiadd
mov
in
aam
aaa
push
cld
push
pusha
jecxz
cmp
aas
jb
jmp
sbb
mov
rcl
mov
dec
mov
ret
sub
mov
addr16
aas
push
inc
test
sbb
sti
push
add
les
mov
xchg
unpcklps
jp
push
or
add
adc
jecxz
out
or
jae
outs
sar
push
inc
popf
adc
adc
cmp
out
aas
add
inc
retf
clc
out
sbb
add
pop
inc
movs
popa
fucomi
fdivr
pushf
xor
jge
pop
outs
loope
ins
xor
ja
in
cmps
ss
pop
xchg
sub
cwde
ror
or
mov
ss
test
into
(bad)
addr16
test
cmp
dec
fwait
sub
cmp
xor
xor
sub
std
xlat
jne
ret
mov
mov
jle
retf
cmps
add
outs
int3
mov
xor
enter
push
iret
ror
jp
mov
inc
pop
popa
fadd
inc
jge
fsubp
iret
mul
not
jle
adc
out
ficomp
les
xchg
mov
jb
enter
dec
fyl2xp1
or
imul
cmp
sub
sub
cmp
push
movs
xchg
bound
jb
jo
sbb
add
in
dec
or
push
daa
mov
xor
js
fmul
cmp
aas
inc
lods
mov
add
cld
cdq
or
mov
mov
jae
sub
mov
jae
cmp
or
pop
inc
bnd
test
pop
push
das
les
push
mov
adc
cmps
add
xchg
cwde
mov
jbe
mov
sbb
enter
jae
jo
das
xor
aaa
cmps
adc
cmp
push
movs
adc
ds
sub
call
and
sbb
mov
ins
dec
mov
adc
addr16
sbb
sub
xchg
and
jns
inc
or
scas
pop
mov
nop
jno
fld
inc
inc
or
int3
into
sub
pop
mov
sbb
jbe
test
fs
or
fs
xchg
inc
xchg
pop
or
fild
jp
or
and
and
and
lods
jle
not
scas
mov
int
and
in
hlt
imul
xor
sbb
push
ins
mov
xor
imul
or
js
sbb
jae
stos
imul
sti
ret
xchg
icebp
dec
or
shl
(bad)
out
and
cs
cs
sbb
repnz
and
shr
fisttp
cs
int3
sub
mov
retf
xchg
jle
mov
dec
cli
inc
or
push
dec
cmp
jl
xchg
stos
sub
mov
sbb
call
pop
dec
and
(bad)
cld
or
icebp
mov
cli
imul
adc
out
retf
nop
sub
aaa
ret
sbb
mov
fwait
call
xor
nop
in
mov
(bad)
je
fs
imul
enter
in
push
outs
(bad)
and
mov
stos
push
fiadd
scas
pop
es
pusha
jmp
add
loope
test
sbb
push
xchg
adc
or
ss
and
aam
addr16
fnstenv
and
(bad)
aaa
pusha
mov
adc
mov
dec
fadd
out
mov
xchg
cmp
shl
arpl
push
loopne
iret
cli
mov
cmps
(bad)
pop
mov
dec
fistp
push
mov
mov
mov
xor
imul
imul
ror
sub
mov
xchg
scas
lods
add
in
(bad)
mov
dec
int3
into
stos
or
push
jb
or
mov
sbb
aam
ins
and
sar
cmps
pop
push
cmp
ss
inc
leave
cwde
jne
aad
adc
mov
inc
repnz
adc
mov
adc
repnz
lahf
test
emms
test
push
sar
push
dec
jle
xchg
xchg
add
aad
xor
std
push
xchg
jnp
aam
enter
xor
mov
ss
das
lock
jle
mov
clc
rcr
lock
xchg
test
and
inc
in
mov
int3
test
push
jp
out
fs
and
fsub
scas
js
ror
outs
pop
or
stos
fldcw
push
xor
mov
cmp
(bad)
pop
loopne
rol
mov
cld
xlat
mov
rol
adc
iret
outs
and
add
fs
cli
scas
call
pop
xor
pop
sahf
sub
fsub
push
add
inc
mov
mov
add
aaa
lds
inc
adc
mov
movs
sbb
and
in
xor
sbb
shl
mov
mov
push
int
inc
arpl
sbb
mov
push
pop
jecxz
sahf
dec
cmps
int
mov
mov
fisubr
fld
mov
cmp
(bad)
lods
out
adc
cwde
pushf
xchg
xchg
(bad)
mov
cmp
hlt
cmp
ror
jne
retf
add
mov
sbb
das
sbb
cli
(bad)
in
jo
pushf
(bad)
test
loop
rcr
mov
addr16
pop
add
into
or
fidiv
xchg
dec
out
push
imul
mov
je
jle
in
leave
inc
int
int3
mov
jae
mov
fcomp
je
cmc
adc
sbb
xchg
dec
in
jns
es
mov
rol
adc
pop
imul
repz
das
mov
jnp
call
cwde
mov
jb
(bad)
aad
inc
mov
lods
imul
sti
stos
add
push
(bad)
fstp
jns
mov
xchg
adc
mov
xchg
ins
retf
jmp
out
sub
in
or
lds
idiv
fnstcw
icebp
sub
dec
push
sub
in
push
movs
xchg
or
arpl
push
(bad)
inc
ins
scas
(bad)
cmp
arpl
cwde
ret
ss
sub
je
js
and
mov
or
add
dec
(bad)
retf
jl
ret
loopne
and
jbe
mov
or
or
push
shl
lock
adc
push
push
inc
dec
sub
inc
adc
cmps
jle
ficomp
push
ficomp
pop
mov
mov
jbe
adc
inc
pop
jl
jmp
mov
dec
jns
ds
mov
push
jbe
lds
mov
mov
mov
cmps
sbb
sbb
jno
(bad)
ins
inc
jno
dec
mov
jle
and
xor
cmp
add
or
inc
xchg
adc
stos
adc
pop
sbb
int
cdq
sub
nop
cmp
pop
sbb
push
adc
cmp
imul
xchg
call
adc
cmp
fcom
pop
not
popa
and
push
lahf
aas
push
movs
ja
ret
jne
imul
mov
sbb
mov
add
lea
lock
mov
out
adc
gs
sub
(bad)
or
cmp
push
dec
arpl
sti
dec
mov
cmps
jmp
lds
setne
lods
sub
mov
adc
dec
scas
sub
dec
stc
inc
fcompp
adc
test
inc
jmp
sbb
xchg
xchg
lock
jb
addr16
or
(bad)
in
das
pop
jbe
fsubp
mov
fs
fild
sub
test
mov
xchg
mov
sti
dec
cmps
sbb
mov
push
retf
scas
enter
xor
pushf
mov
pinsrw
out
mov
popf
frstor
or
sub
shr
nop
mov
add
sar
sbb
call
push
pop
pop
retf
dec
aas
out
fistp
mov
sar
push
mov
and
dec
mov
cmp
jbe
pop
and
xchg
inc
ins
mov
dec
sbb
mov
jmp
sub
sub
xchg
sar
int3
lods
and
pavgw
inc
pop
test
aad
jmp
mov
mov
popf
cmp
loopne
hlt
imul
mov
pop
pop
jecxz
add
test
pop
jno
sub
sahf
mov
xchg
dec
pop
xchg
sti
daa
adc
sbb
movs
cwde
and
inc
adc
add
sbb
imul
adc
pushf
lock
fidivr
nop
lahf
cmp
xchg
sbb
push
dec
adc
sbb
fwait
hlt
outs
add
pop
jecxz
mov
retf
add
int
push
adc
pop
addr16
std
and
add
lea
int3
loop
out
pushf
adc
retf
inc
sub
xchg
xor
test
cmp
jle
cwde
sahf
cwde
popa
mov
into
or
imul
mov
(bad)
jmp
add
repnz
jne
fcomp
mov
pop
add
dec
loope
add
xor
into
dec
xchg
sub
xor
aas
push
pushf
scas
movs
cwde
xchg
rcr
sar
add
lds
mov
pop
and
imul
outs
sbb
inc
lahf
retf
int3
dec
sbb
adc
mov
ret
(bad)
adc
or
fist
mov
out
fwait
sbb
jae
ds
add
pop
add
aam
imul
sti
pushf
xor
enter
imul
(bad)
jmp
stos
pop
ror
mov
nop
cmp
xchg
cmp
fld
fiadd
push
dec
cs
xchg
sbb
adc
dec
xor
shr
fwait
jle
jmp
mov
mov
mov
and
repnz
and
push
mov
loopne
mov
jae
loop
(bad)
jnp
test
sbb
mov
clc
xor
call
cmps
(bad)
in
dec
jecxz
sub
sbb
inc
mov
pop
sar
enter
sbb
jp
mov
loopne
pop
je
fmul
lods
movaps
fchs
aam
mov
test
pop
push
add
imul
push
js
cmps
xchg
mov
fcom
pop
add
add
nop
xchg
xor
cmps
gs
jg
cld
mov
daa
push
sahf
adc
movs
scas
scas
push
(bad)
or
(bad)
sbb
aad
lahf
pop
jo
ret
dec
pop
stos
rol
push
adc
movs
shr
mov
pop
cld
outs
inc
lea
cli
mov
or
in
or
jnp
ret
jno
pop
add
ja
stos
sub
jns
lock
push
cmp
add
dec
ds
or
popa
mov
out
push
push
ror
mov
fcmovbe
test
enter
loopne
mov
test
xlat
aad
addr16
jbe
shr
into
imul
call
push
packuswb
mov
push
adc
or
sbb
sub
loopne
mov
ret
sub
out
stos
dec
mov
push
je
lods
imul
push
cmovns
push
inc
aam
shl
sar
lods
in
pop
sbb
jb
add
cmps
xchg
shl
xlat
int
mov
or
pop
xor
aad
push
jb
xchg
arpl
pop
sbb
les
bound
or
push
enter
fst
in
lods
sbb
mov
imul
xchg
cmc
pop
mov
movs
call
out
pop
add
xchg
mov
fistp
data16
lods
adc
cmp
adc
aam
cli
inc
stos
mov
ins
mov
dec
mov
add
sub
cdq
jns
mov
jns
mov
stos
sbb
inc
test
outs
neg
cmp
(bad)
pop
hlt
sahf
mov
gs
push
adc
or
cld
adc
cmp
shl
and
mov
scas
dec
test
mov
hlt
and
xor
out
cs
repnz
pop
clc
or
xchg
adc
inc
stos
xor
stc
sbb
adc
pushf
push
add
(bad)
dec
test
cdq
sahf
push
cmp
test
pop
in
int3
push
and
sahf
xchg
mov
data16
ds
cmp
jne
inc
or
or
mov
cmc
aas
or
ret
je
xchg
jg
mov
cmc
mov
cmps
jo
push
(bad)
and
dec
jle
fcmovnbe
aas
mov
and
nop
jmp
jno
jl
push
rcr
(bad)
das
neg
movs
xchg
push
xchg
cmps
jp
ret
cld
imul
push
jl
xchg
adc
mov
inc
inc
add
add
pusha
cmp
popf
sar
fnstcw
mov
(bad)
mov
(bad)
movs
xor
push
cmp
iret
pop
mov
add
pop
retf
mov
mov
jecxz
daa
out
add
pop
add
aas
loope
or
xlat
int3
dec
std
fiadd
push
sar
inc
jnp
sub
lock
shr
mov
and
xchg
and
mov
xor
out
cmp
jbe
movs
mov
aam
sub
push
or
test
retf
bound
retf
jmp
cwde
dec
stc
int
push
int3
(bad)
repz
add
xchg
pop
push
in
and
inc
icebp
nop
mov
in
lahf
xchg
xor
ins
test
cld
add
call
data16
push
out
fimul
(bad)
movs
pop
add
pop
mov
mov
and
ret
adc
add
mov
push
xchg
sub
ds
dec
and
fucomi
mov
mov
retf
xchg
nop
jne
pop
pushf
xlat
lods
mov
pop
cmp
inc
into
and
push
sub
fadd
js
push
add
push
test
and
div
movs
mov
fsubr
les
pop
or
jg
jns
jbe
jae
hlt
test
das
jo
in
in
sub
aaa
outs
cmps
push
add
(bad)
mov
outs
and
cmp
pop
movs
xchg
sbb
sbb
dec
jecxz
pop
cwde
mov
fstp
loopne
jmp
repnz
(bad)
ss
imul
in
leave
dec
daa
adc
pop
es
je
fcmovnu
scas
pop
cmp
inc
retf
mov
ret
(bad)
cmp
test
pop
dec
out
into
cmps
mov
inc
loope
push
clc
das
retf
gs
sbb
sub
ja
inc
xchg
cmc
adc
mov
and
sub
inc
es
(bad)
mov
das
push
xor
mov
pop
add
mov
xchg
test
loope
cmps
dec
add
fbld
jle
push
lods
xchg
push
xor
pop
jo
sbb
pop
fxam
sbb
cwde
int
mov
cmps
xor
das
fld
dec
xchg
push
and
jge
pop
adc
push
jne
sbb
dec
sub
mov
out
mov
data16
or
movs
add
dec
popf
repnz
cdq
mov
mov
jns
pop
cmp
aad
lock
or
popw
pop
mov
push
pop
out
jae
and
ror
cmp
xor
(bad)
test
aam
xchg
dec
adc
pop
popa
pop
jbe
call
inc
adc
lahf
pop
lea
int3
fld
inc
dec
pcmpeqd
test
adc
or
(bad)
cmp
jns
das
es
fwait
into
(bad)
enter
inc
sti
lock
cbw
and
lods
popa
aas
sub
(bad)
std
mov
mov
inc
push
xchg
fcom
in
jp
add
sub
sub
sub
cmp
or
mov
xor
enter
cmp
push
push
adc
in
gs
inc
xchg
jg
adc
(bad)
fucom
stos
ja
jae
xor
jns
dec
ret
pop
sub
cmp
fst
jne
iret
mov
mov
test
pop
fcomp
daa
(bad)
int
mov
jbe
cmp
mov
es
add
adc
cvttps2pi
pushf
gs
push
push
jl
dec
int
imul
mov
push
cld
pop
inc
int
add
popa
mov
xor
shl
sub
dec
xchg
sub
inc
mov
jmp
pop
dec
pop
retf
push
retf
jo
inc
push
pop
dec
sbb
sbb
sbb
push
out
stos
stos
in
or
outs
pop
jbe
jae
int
mov
push
shl
loopne
mov
mov
dec
ja
mov
jge
sbb
repnz
iret
adc
add
(bad)
mov
mov
adc
pop
stos
pop
stc
leave
or
cmp
jae
push
sbb
neg
xor
xor
sbb
sbb
inc
fbld
dec
movs
sbb
and
pop
in
or
shl
adc
push
add
int3
pop
mov
push
mov
xchg
pop
and
pop
jno
bound
adc
aaa
push
mov
stos
aam
ss
cdq
jp
xor
js
mov
mov
repz
fadd
cdq
xchg
xor
mov
push
jo
leave
repnz
cmc
xor
sar
push
scas
imul
jo
mov
and
inc
mov
push
push
iret
fcom
popf
add
push
cmps
or
rcl
fadd
js
arpl
(bad)
inc
mov
stos
and
addr16
std
cmp
mov
adc
xchg
mov
(bad)
fimul
nop
xchg
std
mov
daa
cmp
into
ret
add
push
shl
pop
pop
test
repz
lock
mov
or
test
sub
cmp
mov
loop
inc
outs
adc
or
nop
andps
retf
and
mov
add
sbb
fldcw
jecxz
cmp
test
out
lods
call
ficomp
popf
movs
cli
mov
sar
ss
adc
dec
call
xchg
lahf
stos
cmp
jb
int3
pop
rol
movd
loop
xchg
out
in
push
sbb
fadd
imul
sub
pushf
add
pop
aaa
jo
adc
and
mov
ins
lea
jp
cmp
pop
scas
ja
outs
xchg
push
retf
(bad)
jns
in
push
scas
lock
jge
cs
pop
or
sbb
push
(bad)
xchg
inc
popf
mov
(bad)
xor
jbe
shl
pusha
mov
dec
add
(bad)
add
sub
or
xlat
jmp
mov
inc
or
int
data16
and
data16
xchg
push
cmp
mov
movs
pop
enter
test
push
and
sbb
cli
adc
pop
or
mov
mov
adc
or
adc
cmc
and
xor
(bad)
icebp
pop
or
nop
xchg
mov
pop
mov
comiss
cmp
mov
push
pop
out
out
retf
ins
add
out
in
xchg
out
jg
sub
pop
stos
bound
out
ss
dec
jne
call
xchg
fs
scas
cwde
cmp
addr16
push
(bad)
jae
pop
sub
enter
pop
inc
cmp
mov
cld
push
dec
mov
out
adc
hlt
(bad)
mov
mov
fistp
(bad)
fs
xchg
add
mov
xlat
adc
call
mov
test
mov
hlt
xchg
data16
shr
sbb
adc
xchg
mov
fwait
sbb
call
repnz
(bad)
stos
jne
mov
push
es
sbb
cmc
jno
mov
fwait
in
and
sub
xor
out
pop
xchg
and
mov
mov
cwde
inc
jmp
out
sbb
sub
xor
cmps
js
and
dec
(bad)
stos
test
push
daa
cmps
mov
mov
aaa
ss
dec
inc
lahf
jnp
push
push
in
xor
pop
aaa
add
bound
pop
adc
and
lods
rcl
std
jnp
cmp
cmp
pop
fdiv
sub
aas
jnp
repz
and
sub
add
xchg
mov
cmp
jle
in
and
into
inc
sbb
(bad)
nop
sub
and
lea
pop
pop
push
ret
push
outs
xchg
retf
mov
int3
mov
cli
les
outs
or
cmp
mov
adc
fwait
aaa
aaa
stc
adc
stos
xchg
(bad)
test
adc
push
push
dec
gs
ss
loop
jl
jmp
pop
sub
add
(bad)
sbb
sub
sbb
sub
mov
cmc
repz
xor
sbb
mov
push
(bad)
xchg
nop
mov
mov
fidivr
mov
or
inc
pop
cmc
mov
(bad)
cld
mov
daa
mov
dec
test
je
dec
inc
and
pop
hlt
ss
(bad)
mov
add
pop
test
mov
int3
outs
mov
in
ret
jg
es
cli
and
cmp
inc
(bad)
adc
rol
ret
sahf
lock
std
or
xor
adc
cli
jp
(bad)
daa
pop
dec
jp
or
mov
jmp
dec
push
xor
jg
stos
in
dec
add
(bad)
cmp
call
inc
mov
loop
cld
cmc
fwait
cmp
pop
aas
stos
inc
mov
inc
nop
out
mov
movs
sbb
cld
add
mov
test
mov
add
add
cli
xchg
test
vcvtss2sd
sub
scas
xor
xchg
sub
lods
shl
(bad)
jmp
dec
push
and
cld
mov
mov
xlat
push
nop
dec
push
push
jo
outs
js
in
iret
dec
cmp
inc
mov
mov
push
lea
or
adc
in
rcl
lock
idiv
ret
enter
stc
sub
in
test
mov
jge
scas
sub
xor
and
pusha
pop
jl
mov
inc
inc
add
and
jge
sbb
lods
mov
xlat
add
cmp
outs
std
aas
and
pusha
sub
popf
mov
mov
sahf
popf
xchg
aas
sub
shl
fdivr
sbb
xchg
jg
repnz
adc
mov
sub
js
scas
out
je
in
sbb
test
xchg
xor
lfs
pop
add
jg
or
push
mov
ss
sub
popa
nop
or
xchg
retf
imul
cmc
xlat
fwait
and
ror
int3
inc
mov
(bad)
aas
popa
call
jp
and
pop
les
loopne
jae
xor
adc
pop
xlat
xor
mov
stos
mov
mov
mov
xor
bound
adc
sbb
bound
stos
mov
rcr
xchg
or
dec
jae
cdq
sar
jmp
dec
inc
lds
into
aad
call
mov
std
rcr
out
cld
rcr
jb
bound
add
cmp
rcr
jns
mov
cwde
sar
(bad)
dec
dec
jmp
js
(bad)
sti
mov
inc
pop
mov
bound
xchg
mov
push
xchg
and
push
push
and
jo
out
sbb
fidivr
sahf
mov
retf
mov
in
jns
dec
fcomip
dec
xor
dec
fucomip
hlt
jne
mov
test
mov
mov
ja
in
call
call
mov
xchg
ret
repnz
mov
enter
or
xor
rcl
inc
cwde
sub
adc
push
mov
leave
mov
rcr
mov
cmpxchg8b
add
adc
movs
inc
les
mov
add
pop
clc
cmps
mov
retf
inc
lods
xchg
popf
sub
inc
out
push
enter
adc
push
scas
lahf
push
pusha
xchg
pop
iret
std
call
sub
fmul
jle
sub
cmp
add
movs
pop
and
ror
xchg
ss
(bad)
mov
or
scas
lahf
rcr
mov
stos
sub
mov
cmp
into
sub
imul
test
ror
imul
push
jge
jae
xchg
std
shl
pop
push
aad
push
movs
inc
push
lods
enter
mov
sub
dec
mov
out
jmp
jns
sar
ins
xchg
adc
outs
fwait
mov
lea
fwait
add
pop
inc
adc
fsave
cmp
sub
mov
into
outs
or
sar
das
loope
repz
mov
push
mov
imul
add
int
int3
(bad)
xchg
or
xchg
push
xor
jecxz
call
mov
sub
cli
pop
aam
(bad)
sbb
movs
nop
xchg
les
mov
adc
sub
jo
add
fnstenv
xchg
inc
cld
xchg
mov
inc
pop
xchg
sub
add
inc
dec
pop
dec
cwde
call
add
fmul
cmp
pop
lods
xchg
push
fdiv
test
cmps
mov
jae
pop
adc
aam
adc
xchg
enter
mov
mov
jo
clc
hlt
nop
mov
stos
iret
or
mov
dec
(bad)
mov
mov
je
in
mov
sbb
xchg
and
icebp
mov
rcr
enter
pusha
mov
inc
mov
xchg
xchg
bound
fmulp
inc
xchg
loopne
ins
xor
add
add
lahf
mov
inc
xchg
dec
or
aam
repnz
fimul
and
iret
sub
ret
xchg
mov
mov
ds
das
mov
cwde
and
or
sbb
mov
out
in
mov
nop
(bad)
mov
loope
enter
jp
xchg
rol
std
mov
fimul
mov
mov
cmp
stos
jecxz
(bad)
hlt
dec
popa
ficomp
fwait
jmp
aam
cmp
jmp
scas
enter
sbb
stos
sub
aas
xor
shr
neg
scas
lods
dec
and
adc
pop
xchg
xor
jo
dec
xlat
push
test
inc
or
imul
pop
mov
rol
or
clc
cmp
xor
and
jmp
xchg
inc
push
lods
fisubr
xchg
imul
outs
cmp
fwait
aaa
jae
or
adc
lahf
sub
fmul
mov
pop
push
test
xlat
ret
jne
rol
push
imul
out
daa
dec
mov
(bad)
jns
loopne
sub
mov
xchg
lea
or
ror
sbb
(bad)
daa
arpl
add
jae
out
(bad)
mov
pop
push
stc
inc
stos
jl
stos
imul
sbb
dec
mov
lds
sbb
(bad)
and
(bad)
bound
je
cli
fisub
aad
movs
mov
push
test
adc
iret
or
repz
mov
sti
mov
in
mov
(bad)
dec
dec
jno
scas
and
fiadd
xchg
add
or
dec
(bad)
cdq
mov
pop
jl
mov
retf
dec
and
fcom
jle
leave
jl
fcmovnu
in
mov
int
sbb
shr
mov
adc
dec
pop
mov
fst
adc
mov
repnz
scas
adc
or
cli
ds
std
cmp
or
ja
jne
cmp
test
xchg
push
mov
jmp
mov
movs
jle
ins
or
cmp
(bad)
sbb
and
pop
aad
dec
lock
stc
ret
out
or
call
xchg
pop
(bad)
adc
mov
or
jb
fucomp
jmp
mov
add
cmp
xor
daa
test
pop
push
inc
ins
pop
xchg
scas
add
int3
push
aad
iret
mov
sti
mov
push
sti
cdq
repz
mov
push
jbe
test
test
addr16
inc
(bad)
cmps
mov
adc
cmp
aam
mov
jae
popf
bound
and
(bad)
ins
adc
les
sbb
mov
mov
cmps
push
fwait
stos
dec
push
jnp
or
daa
mov
hlt
mov
sbb
cs
xchg
fld
pop
fmul
mov
out
rol
push
pop
dec
js
lods
mov
jmp
adc
nop
adc
je
mov
jmp
sbb
movs
mov
out
xchg
sub
sbb
adc
mov
imul
pop
mov
enter
(bad)
fs
cs
std
jbe
xchg
and
jae
jnp
push
jns
or
jno
adc
xor
lds
(bad)
out
test
inc
push
(bad)
xlat
jmp
shr
cmc
mov
jae
mov
mov
sbb
jns
pop
out
not
in
or
into
ins
retf
pop
gs
dec
pop
sahf
jo
push
fistp
push
into
ficomp
rcl
mov
loope
sub
lea
xchg
lods
addr16
test
pop
out
xchg
out
and
stc
mov
xor
mov
push
push
mov
jae
hlt
xchg
int3
scas
(bad)
sti
jecxz
sub
mov
jbe
cmp
mov
dec
mov
pop
cli
pop
cwde
jbe
lods
sahf
ja
dec
adc
mov
ins
fisubr
sbb
jb
ficom
mov
jg
shl
and
jge
sti
xchg
or
sbb
ss
mov
and
fldcw
cmp
pop
and
sub
mov
arpl
lahf
and
imul
adc
mov
cmp
lods
ins
daa
mov
std
jecxz
(bad)
cmps
xor
xchg
jo
push
(bad)
stc
dec
aas
mul
cwde
movs
stos
das
popf
(bad)
aad
xchg
mov
leave
imul
mov
shr
fdivr
cmp
jo
mov
pop
int
sub
xchg
pop
adc
hlt
mov
(bad)
jo
in
shr
(bad)
mov
xchg
jp
mov
ss
call
lock
ror
hlt
push
pop
enter
rep
mov
pop
retf
fimul
mov
add
or
pop
cmp
cmp
call
ret
mov
sbb
push
pop
and
inc
test
pop
push
call
cmps
test
mov
dec
xchg
call
and
xchg
adc
sub
sub
repz
xchg
shl
lds
mov
shl
out
and
outs
stc
and
sub
jge
push
nop
dec
bswap
xchg
add
dec
push
push
pop
push
loope
mov
pop
shl
inc
imul
loop
mov
pop
push
pshufw
xor
pusha
sbb
call
outs
jmp
mov
leave
pop
push
adc
mov
pop
(bad)
in
mov
dec
in
pop
and
and
adc
rcr
(bad)
in
mov
not
repz
(bad)
retf
cmp
or
jae
inc
or
retf
(bad)
rcl
add
and
pusha
lock
mov
stos
push
hlt
out
sbb
pop
pop
push
pushf
add
mov
pushf
cmp
inc
or
xor
dec
add
jbe
push
clc
cmc
cmps
fld
mov
icebp
jg
jmp
sbb
test
jo
int3
inc
stos
jbe
or
mov
loop
mov
sbb
iret
test
jno
inc
pop
xchg
mov
jmp
cmc
popa
sbb
jge
fld
and
mov
mov
dec
sbb
hlt
push
repz
push
out
mov
aad
cmp
xchg
sar
int
push
dec
and
aaa
dec
jecxz
lods
ins
push
inc
push
sbb
push
test
stos
inc
jno
adc
enter
dec
bound
movs
dec
and
inc
out
gs
lods
adc
(bad)
repz
pop
(bad)
adc
js
cmps
rcl
push
lods
mov
mov
sbb
mov
push
sub
aam
fwait
mov
ret
ret
pop
xlat
xor
cwde
jmp
fsub
cmps
mov
ret
push
dec
into
push
hlt
cmp
adc
fbld
inc
dec
das
ret
test
aam
mov
test
push
add
cdq
push
mov
lods
repnz
dec
stc
out
dec
fcom
pop
mov
or
jge
push
daa
ja
cmp
mov
add
pop
or
aaa
inc
rcl
dec
push
xchg
mov
(bad)
mov
xlat
jne
movs
mov
(bad)
(bad)
cs
int
loop
xor
adc
js
mov
icebp
xchg
sbb
push
shr
cmps
das
pop
mov
jmp
std
loopne
outs
(bad)
xchg
adc
add
or
stos
push
in
ss
fist
jbe
ret
sbb
into
jmp
movs
(bad)
cmp
jbe
sbb
sub
outs
mov
mov
popf
in
ins
test
into
movs
rol
mov
cmps
out
cmp
mov
bnd
inc
inc
mov
lods
push
popa
dec
out
sub
fadd
jne
push
fnstcw
cmp
lods
push
aam
hlt
call
jmp
and
jmp
push
xchg
adc
jo
shl
lock
out
rcl
mov
scas
inc
add
call
hlt
(bad)
sar
pop
enter
xchg
stos
xchg
pop
cwd
or
cmp
jecxz
inc
push
xchg
mov
xchg
push
push
cmp
jo
sub
lods
(bad)
pop
add
mov
jno
pop
cwde
imul
mov
dec
pop
xor
test
or
push
mov
xchg
retf
mov
xor
lock
rol
shl
cdq
shl
std
push
pop
aam
lea
add
jae
adc
daa
sub
arpl
rcl
jnp
sub
pop
loopne
shl
fsubrp
xor
cld
call
inc
inc
dec
xor
dec
inc
or
repnz
mov
mov
mov
add
cli
xchg
sub
imul
pop
pop
out
and
mov
scas
aas
mov
mov
(bad)
outs
and
cs
je
outs
push
rcr
rol
xchg
push
fnstsw
les
iret
addr16
lods
mov
add
sti
push
jmp
push
nop
mov
or
push
xor
xor
leave
mov
mov
cmp
sub
xchg
ins
sbb
xor
push
out
inc
xor
add
les
ret
pop
jae
cs
cmp
ss
adc
add
icebp
add
xchg
sahf
leave
out
pop
repnz
mov
xchg
push
ins
sbb
ins
sbb
lea
arpl
sbb
and
dec
and
js
movs
jne
leave
xchg
std
shr
push
in
push
retf
mov
mov
xor
mov
retf
mov
in
cmp
loope
cmps
adc
xor
xchg
jecxz
or
mov
push
push
or
cdq
ds
and
mov
mov
pop
ja
push
ret
fld
leave
stc
icebp
push
std
and
cmc
and
fwait
hlt
mov
dec
cs
lds
xchg
es
les
call
dec
out
mov
cmps
mov
xchg
stos
mov
mov
stc
sub
push
mov
xor
outs
outs
(bad)
call
mov
mov
lds
adc
cmps
push
pop
pop
daa
push
in
add
lock
add
fcomp
jno
mov
and
sbb
fidiv
fld
stos
and
mov
outs
int
pop
cld
out
cmc
or
dec
adc
mov
ret
je
pop
cdq
repnz
gs
dec
int3
mov
adc
add
js
xchg
in
out
sbb
xchg
ins
mov
cmp
dec
imul
xchg
int3
mov
xchg
add
push
int
mov
loopne
mov
sub
jns
fst
cli
ins
pop
xlat
aaa
test
sub
retf
add
or
hlt
daa
lods
cmp
dec
pop
inc
outs
push
cdq
mov
cmp
cs
pop
pop
sub
jecxz
call
fcmovne
pushf
cs
jno
fistp
cmps
(bad)
call
adc
push
add
outs
push
mov
mov
and
cmp
(bad)
test
cmp
int
imul
push
fisttp
int3
xor
push
test
icebp
dec
adc
or
fcomip
gs
aas
in
jb
xchg
pop
fxch
pop
ins
mov
dec
adc
sbb
inc
ret
add
dec
sbb
cmp
cwde
aam
imul
push
call
mov
mov
mov
dec
inc
imul
xchg
pop
dec
fs
aam
and
inc
xchg
add
jmp
sub
das
push
pusha
pop
loop
shr
cmp
repnz
mov
fst
data16
icebp
lahf
jge
lods
add
sbb
cmc
xlat
(bad)
out
sub
or
jmp
cli
(bad)
outs
push
jns
in
pop
sbb
dec
mov
adc
test
mov
outs
sbb
jp
ds
(bad)
dec
daa
(bad)
and
cmp
and
dec
pslld
mov
inc
and
sub
xor
das
(bad)
add
ror
fidivr
xchg
fnstenv
cmp
js
aaa
fstp
aad
test
std
mov
mov
or
mov
les
mov
xchg
mov
jle
(bad)
bound
mov
inc
inc
rcr
and
cli
push
and
bound
mov
xchg
cmp
xor
lea
xchg
sub
js
push
cmp
inc
and
ror
dec
xor
aaa
ja
cmp
mov
ins
mov
xchg
cld
mov
or
clc
cmp
inc
ror
pop
push
(bad)
mov
sbb
cwde
test
jle
sub
das
(bad)
inc
jae
dec
pop
scas
hlt
inc
mov
out
pop
cmp
int3
scas
jecxz
dec
int
add
inc
repnz
dec
inc
int
inc
inc
pop
xor
mov
popf
enter
jp
movs
jb
out
scas
push
dec
mov
mov
repz
cmp
clc
jae
lods
or
mov
xor
bound
and
nop
and
test
in
fst
aad
lods
aas
or
jecxz
stos
stos
and
ja
ret
mov
fs
imul
in
jbe
sbb
cmp
(bad)
pushf
xchg
inc
fst
int3
sub
retf
xchg
cmc
push
ins
jno
pop
lods
dec
mov
enter
out
sub
test
or
inc
xor
xchg
or
lods
and
dec
repz
mov
add
push
sub
push
in
inc
mov
sbb
out
test
xchg
popf
sahf
fwait
inc
xchg
jp
and
jnp
pushf
sub
add
mov
hlt
pop
push
fisttp
aam
add
adc
xchg
adc
sbb
fsub
stc
sbb
(bad)
aam
test
dec
mov
xchg
dec
add
stos
je
sahf
add
inc
mov
dec
mov
shr
mov
lea
mov
mov
jne
pop
mov
js
shr
sbb
cmp
mov
cmps
xor
cmp
mov
fist
stc
sbb
jb
into
xlat
movs
and
mov
add
mul
neg
jg
rol
mov
cmc
mov
cmp
xchg
in
stos
jnp
sub
push
call
mov
mov
and
cmp
pop
and
neg
push
xchg
or
test
dec
jge
jle
js
dec
xchg
mov
jecxz
xor
outs
mov
(bad)
into
leave
adc
mov
mov
pop
bound
sahf
sub
adc
jb
out
stc
add
lods
jmp
popa
pop
push
inc
push
(bad)
adc
lods
fstp
js
add
adc
push
das
mov
(bad)
pop
and
mov
fbstp
fdiv
clc
jl
mov
arpl
mov
sbb
and
adc
push
ret
xchg
or
retf
push
outs
fisttp
pop
loopne
inc
mov
test
push
ss
or
das
mov
push
pushf
stos
lock
std
jge
push
int3
add
mov
and
push
and
cmp
mov
mov
inc
sbb
arpl
scas
lds
push
inc
mov
imul
jmp
loop
inc
jb
retf
test
mov
jne
imul
cli
clc
mov
cmp
loope
dec
mov
and
leave
js
adc
xor
jmp
rcl
popa
and
push
imul
jmp
jmp
movs
sub
mov
lds
push
stos
xchg
mov
push
xor
inc
imul
enter
push
mov
or
xor
add
and
loope
or
popa
inc
push
mov
inc
push
les
test
fisttp
sub
sub
in
push
jg
cmps
aam
(bad)
call
push
pop
bound
push
jae
outs
pop
cli
repnz
lock
repnz
loope
sub
jg
lds
ins
and
out
out
push
fdiv
cmp
add
push
hlt
stos
and
in
pop
mov
adc
imul
shr
fmul
jne
je
rol
cli
mov
(bad)
shl
adc
int3
lock
jnp
retf
and
cmc
inc
jno
mov
or
pop
aas
mov
mov
pushf
mov
sub
pop
push
jg
mov
fs
xor
and
dec
arpl
sbb
jbe
sahf
ret
xor
fs
je
dec
cmps
xchg
(bad)
aaa
mov
push
dec
pop
pop
hlt
jg
xchg
fsub
xchg
loope
fnstsw
test
int3
movq
or
ins
push
in
pop
leave
and
out
(bad)
add
pop
leave
jl
pop
inc
lods
inc
inc
aas
shl
aas
dec
jno
push
mov
mov
pushw
into
jge
stc
(bad)
pop
xchg
mov
loop
xchg
add
hlt
pop
mov
or
outs
dec
shl
and
lock
cmp
sbb
bound
sbb
(bad)
xor
cmc
(bad)
cmc
out
add
ds
repnz
(bad)
test
adc
sub
ins
mov
mov
pushf
fidiv
xchg
sar
(bad)
pop
jl
int
jmp
(bad)
mov
or
sub
int
mov
sub
sar
fisub
push
and
(bad)
data16
sbb
push
clc
es
sbb
adc
ror
scas
(bad)
cli
fmul
adc
adc
pop
jmp
mov
mov
paddd
stos
test
add
mov
or
pop
fwait
mov
jno
(bad)
ins
dec
xchg
pop
rol
je
pusha
scas
xchg
add
inc
pop
ins
inc
push
hlt
xchg
fisub
push
fistp
mov
cmp
fcomp
push
loop
push
jecxz
lea
fnstsw
jge
dec
push
daa
neg
pop
(bad)
or
fcomp
sar
sub
scas
lahf
loop
les
ins
loope
adc
mov
mul
push
pusha
cmp
lods
enter
(bad)
jns
sub
xchg
in
push
cmps
mov
push
xchg
out
mov
stos
ins
xchg
jge
jo
repz
add
sub
loopne
call
push
sbb
inc
test
xchg
adc
ret
aam
mov
inc
or
xor
dec
jbe
mov
(bad)
sti
and
inc
call
idiv
ds
pusha
movs
add
into
outs
push
xchg
fidiv
pop
ins
hlt
sbb
lds
rcr
imul
mov
dec
popf
mov
mov
scas
aad
pop
dec
mov
push
cmp
bound
and
jbe
out
popa
adc
jns
out
popa
ss
std
mov
adc
in
gs
jl
das
(bad)
rcr
daa
xchg
mov
jne
cdq
ja
cmps
(bad)
pusha
mov
jg
dec
inc
cmp
faddp
and
test
jno
pop
or
jecxz
loope
add
inc
ins
dec
in
cmp
inc
pop
addr16
xchg
into
jge
jae
adc
out
nop
xlat
and
fstp
lock
sub
(bad)
cdq
xchg
fs
ss
and
cmp
imul
mov
and
icebp
add
add
movs
xor
or
ds
jle
imul
imul
pop
stos
fstp
out
push
sbb
push
add
or
or
call
mov
lds
sbb
sub
or
(bad)
js
js
call
mov
scas
inc
jbe
das
call
movs
sbb
scas
push
cld
in
sub
imul
retf
shr
xor
sar
out
dec
scas
ret
push
fstp
xor
or
ja
stos
xlat
adc
add
xor
jno
test
or
mov
jmp
ins
imul
neg
pushf
adc
mov
arpl
or
jae
(bad)
nop
mov
xchg
mov
into
mov
xor
outs
neg
das
mov
adc
cmp
and
pop
mov
neg
int3
inc
xchg
xor
call
cmp
in
loop
fdiv
stc
lods
mov
cmps
out
(bad)
push
lahf
dec
dec
dec
ror
cmp
xchg
xor
lock
idiv
pop
popa
cmp
pop
sub
and
inc
ins
iret
jecxz
mov
ret
xchg
mov
jae
fwait
aad
call
xor
xchg
lds
mov
mov
mov
mov
xchg
sbb
mov
stc
cwde
and
fsubp
std
pop
outs
stos
enter
cs
test
xor
xor
push
adc
leave
dec
cld
retf
cmps
shl
out
jmp
arpl
pop
das
mov
and
push
jl
test
cmps
ins
sar
retf
mov
int3
in
and
push
cld
(bad)
sbb
mov
out
clc
in
dec
add
out
mov
inc
stos
ficom
aaa
adc
ds
inc
popf
loop
mov
mov
dec
adc
loope
jb
push
pop
rcl
mul
fisttp
add
sub
fldcw
mov
and
cli
aad
dec
fs
enter
xchg
movs
or
dec
sbb
add
mov
sub
push
call
cmp
sub
int
pop
fwait
mul
repz
xor
lds
mov
outs
xor
inc
or
popf
loopne
retf
dec
je
mov
adc
rol
dec
pop
ins
xchg
pop
aam
adc
dec
popa
or
mov
and
lea
movs
lds
sub
and
add
shl
cwde
(bad)
ja
mov
push
rcr
push
std
icebp
call
adc
aaa
push
lods
cmp
neg
aad
in
jns
dec
scas
loope
sub
push
xor
cdq
inc
xor
shl
stc
outs
sub
sub
mov
cmc
imul
movs
push
adc
fild
jns
add
xor
pop
adc
pop
jle
jbe
cmp
dec
jns
sbb
jecxz
mov
in
xchg
ret
mov
mov
add
push
pop
sub
jp
and
stos
push
retf
adc
out
mov
or
jmp
fmul
jp
adc
(bad)
shr
test
mov
and
or
jno
test
jmp
add
lahf
das
jmp
xchg
and
pop
int
(bad)
xchg
xor
jnp
and
lods
and
adc
imul
jmp
pop
lock
inc
sbb
push
mov
cs
jmp
push
sub
push
mov
les
stos
popf
xor
sub
xor
mov
jb
jnp
xlat
push
aam
movs
push
inc
pop
(bad)
hlt
pop
mov
mov
or
and
jg
mov
mov
fnstcw
xor
jle
daa
in
sub
jb
test
add
mov
addr16
js
mov
jmp
cmp
js
js
arpl
jo
rol
cdq
sbb
sub
or
stos
fsub
hlt
adc
push
inc
mov
loop
mov
ds
pop
xor
inc
lds
scas
jp
ins
xchg
mov
aad
inc
push
sahf
push
test
mov
cmp
pop
sub
pop
dec
inc
or
push
push
mov
xchg
mov
or
sti
sbb
leave
cmp
xchg
fild
outs
mov
movs
sbb
nop
retf
ret
out
xor
bound
sub
cmp
push
mov
jmp
push
push
or
push
xchg
adc
fbstp
fwait
inc
scas
enter
sub
adc
jbe
lods
xchg
cmp
cmp
mov
retf
outs
nop
js
push
lock
jns
ins
fdivrp
rcr
or
pop
rcr
imul
(bad)
int
push
jle
bound
loope
test
cmp
sub
push
pop
xor
shl
movs
(bad)
icebp
out
iret
stos
mov
mov
xchg
jmp
imul
int3
or
jg
aad
pop
(bad)
iret
push
adc
sub
ja
(bad)
pinsrw
mov
jmp
xor
cmp
and
pop
cmp
std
mov
xchg
mov
std
inc
or
cmp
(bad)
jno
je
mov
add
lods
mov
jne
mov
pop
retf
arpl
test
sar
pop
(bad)
jle
frstor
das
push
cwde
or
out
fnsave
aaa
data16
jno
call
(bad)
or
arpl
aad
push
sub
pusha
lods
pop
push
sbb
ret
cmps
xlat
pusha
retf
jp
scas
pop
fcmovbe
ins
mov
inc
scas
dec
xor
in
movs
mov
(bad)
loopne
xor
fnsave
jbe
lods
mov
retf
dec
mov
lea
cwde
daa
ficomp
test
push
push
xchg
mov
mov
inc
xchg
and
lahf
enter
fist
jnp
cdq
mov
mov
ins
cdq
mov
test
test
mov
push
popf
cmp
into
aaa
cmps
add
imul
jmp
icebp
xchg
mov
shl
dec
push
out
imul
hlt
(bad)
int3
inc
les
scas
clc
retf
inc
sbb
movs
dec
jnp
das
jnp
loopne
lds
mov
or
mov
mov
dec
adc
cmp
pop
hlt
sbb
jmp
jo
push
in
int3
sub
inc
int
loopne
mov
sbb
xchg
cmp
ds
fnstsw
and
push
sub
and
pusha
popf
sbb
xor
inc
mov
cmp
call
adc
pop
(bad)
adc
test
std
fiadd
test
pop
aas
div
or
popa
xchg
cmp
cmp
mov
call
jno
adc
and
push
adc
ret
fidiv
mov
cdq
cdq
and
test
mov
pop
in
cwde
dec
cmps
(bad)
fmul
cdq
rol
ficomp
das
jp
mov
inc
cmp
leave
mov
rcr
mov
(bad)
(bad)
xor
sti
lea
lahf
loopne
add
sbb
dec
cmp
mov
cmp
es
iret
xchg
ss
sahf
popf
sbb
cmps
shl
xchg
loop
lock
push
fnstsw
mov
pop
in
lods
push
out
gs
(bad)
ss
sar
dec
call
jb
mov
sbb
int
sahf
mov
add
sahf
idiv
cs
sbb
in
sahf
fidiv
mov
push
xor
adc
jnp
sbb
movs
pop
mov
sub
lock
clc
dec
outs
mov
add
adc
lods
lock
xlat
mov
add
loopne
test
das
out
pop
mov
test
mov
ss
daa
fnstenv
(bad)
xor
jnp
loop
jg
and
stc
push
in
retf
cmp
push
hlt
sti
ret
cmps
lock
cmp
iret
mov
or
rcr
into
(bad)
push
(bad)
aad
mov
xchg
jno
mov
mov
scas
fcomp
xor
mov
mov
push
pop
pop
pop
dec
sbb
call
or
iret
cmps
movs
stc
bound
mov
std
jb
movs
(bad)
xor
mov
(bad)
das
xor
out
cmc
shl
mov
sbb
cli
push
hlt
repz
xor
jo
and
jg
xchg
jp
xchg
lea
mov
hlt
daa
imul
ss
clc
ss
mov
inc
pop
add
push
aad
enter
int3
jp
outs
mov
lds
adc
push
push
fnsave
jb
or
and
inc
jae
push
mov
ins
mov
mov
xor
or
addr16
push
dec
sahf
lahf
(bad)
aaa
jl
push
mov
pusha
push
inc
mov
pop
test
mov
test
fnstsw
xlat
je
mov
sti
and
push
pop
sbb
out
xlat
sbb
jno
inc
inc
sub
sub
mov
popf
scas
ror
daa
dec
push
xchg
cmc
and
dec
clc
jecxz
pop
int3
fist
retf
adc
push
xchg
imul
cwde
and
arpl
loopne
or
iret
hlt
bound
out
xchg
rcl
(bad)
mov
int
mov
jmp
mov
cmps
sbb
sub
in
sub
ds
cwde
into
out
es
jge
mov
jbe
ds
popa
adc
ss
push
cld
outs
call
lahf
(bad)
dec
cdq
stc
or
scas
push
xor
(bad)
repnz
movs
(bad)
cmp
push
or
and
adc
arpl
lods
mov
inc
push
imul
gs
sub
push
push
mov
cmc
div
dec
mov
jnp
mov
cld
pop
hlt
mov
in
fbstp
imul
outs
cwde
inc
fisttp
leave
add
bound
dec
adc
pop
in
xchg
mov
pop
loopne
(bad)
call
cmp
jl
xchg
aaa
dec
shl
cmc
test
jno
add
cmp
xchg
rcl
fwait
or
jno
dec
data16
fidivr
xchg
sbb
icebp
add
jl
inc
fisttp
leave
shl
ins
and
ins
fs
jp
std
cmp
test
and
mov
mov
xchg
ja
jmp
repz
mov
je
es
inc
cmps
cli
xchg
dec
jnp
cmp
daa
jg
clc
xchg
sti
pop
and
(bad)
aas
jo
sbb
mov
je
test
push
dec
sbb
outs
pop
movs
sbb
xchg
shl
jne
es
js
sbb
test
add
in
sub
xchg
jmp
mov
in
dec
xchg
arpl
aaa
pop
test
hlt
ret
shl
jp
pop
fs
inc
push
iret
adc
lods
cld
sub
jbe
mov
loope
in
add
cmp
mov
loop
ret
sub
dec
jnp
mov
mov
sub
stc
retf
xor
cmp
outs
pop
cmp
repz
loope
out
(bad)
inc
inc
idiv
sub
sti
addr16
or
push
retf
jp
stos
shr
fsubr
gs
rcr
push
and
pusha
(bad)
jmp
or
mov
xor
in
xor
cmp
test
jge
fist
(bad)
rcr
and
push
shld
imul
ror
mov
and
dec
cmps
rcr
xchg
outs
int3
nop
jae
leave
lods
fidiv
inc
jl
push
inc
pop
lods
inc
mov
or
dec
xchg
mov
sbb
mul
cmp
popf
in
movs
mov
repz
pusha
inc
push
inc
call
jb
xrelease
jle
clc
gs
daa
je
or
mov
std
lea
xchg
cs
xchg
sbb
lds
xchg
sbb
test
xchg
and
and
fsubr
sub
aad
cmp
cmps
outs
mov
jmp
dec
ins
aas
jb
add
daa
cmp
mov
or
xlat
mov
and
jp
int3
idiv
jg
dec
xchg
int
pop
jbe
jb
hlt
ja
pop
fmul
sub
pop
es
jge
scas
in
jno
enter
sti
jmp
(bad)
call
test
cs
xor
xchg
popf
sub
rol
test
add
or
push
and
mov
out
fisttp
fld
mov
xchg
ins
ins
clc
inc
fst
out
and
pop
push
arpl
sub
mov
sbb
jo
faddp
aas
test
int
jle
test
inc
add
test
adc
test
mov
jle
hlt
jmp
retf
mov
in
dec
push
fbstp
sbb
ret
daa
push
cmp
rcl
jb
sub
push
xchg
cmp
outs
push
gs
fdivr
dec
adc
or
scas
stc
sbb
sub
xor
retf
les
pop
push
(bad)
jae
add
cmc
daa
ja
and
repnz
mov
lock
jl
add
pop
dec
mov
std
imul
inc
inc
xor
lahf
mov
fsub
sahf
jno
add
lahf
in
les
pop
fisttp
div
out
mov
fistp
sbb
ins
lock
pop
addr16
sbb
sahf
push
lods
mov
mov
jge
xor
jo
dec
xchg
dec
jmp
cdq
inc
xlat
icebp
lock
dec
and
mov
sub
(bad)
repnz
data16
call
dec
dec
(bad)
push
add
jle
mov
cmp
mov
fadd
je
sti
repnz
dec
clc
stos
adc
ss
or
mov
add
rol
xchg
idiv
pop
inc
xlat
addr16
hlt
push
cmp
stc
loope
cdq
adc
ds
lahf
sbb
ja
sbb
sub
push
in
jmp
sub
repz
clc
repnz
int3
addr16
mov
add
push
mov
outs
jmp
movs
movs
popf
jp
fldenv
ret
mov
inc
fstp
mov
js
mov
jmp
int3
ret
cs
xor
dec
retf
pop
jb
mov
sbb
jmp
imul
jmp
in
inc
hlt
push
(bad)
les
jge
rcr
mov
imul
push
cmp
mov
mov
xchg
(bad)
cdq
add
in
dec
fisttp
jae
int3
les
cmovb
and
in
and
pop
add
mov
imul
repnz
mov
cmp
and
mov
in
sti
cmp
int
cmc
sub
je
pop
cwde
mov
sbb
push
stc
and
mov
xor
lahf
dec
(bad)
xchg
pop
add
mov
push
bound
pop
pop
sbb
adc
jg
repnz
pop
leave
sub
inc
fld
shr
cmp
cwde
cmp
jp
mov
mov
sbb
mov
dec
loop
(bad)
push
shl
xor
xor
jmp
mov
mov
lock
pusha
aad
and
pop
push
test
and
loop
xchg
adc
mov
mov
xchg
inc
popf
mov
jns
add
fwait
popa
cmp
adc
fidivr
(bad)
sbb
xor
mov
aaa
retf
inc
mov
push
fdivr
sbb
or
fist
or
mov
xor
or
sbb
dec
sbb
imul
mov
pop
sub
xchg
pusha
ficom
lods
mov
adc
clc
pop
mov
push
xchg
xchg
data16
test
ficom
mov
mov
jl
pusha
jp
sub
dec
lds
sub
mov
daa
int3
(bad)
dec
test
repnz
shl
int3
pop
add
push
sti
test
push
pop
mov
retf
xchg
lods
xchg
mul
push
les
jg
push
retf
ficom
retf
add
push
xor
(bad)
scas
jne
adc
fsubp
fld
and
sub
leave
sbb
lock
cmps
fadd
pop
sub
pushf
or
mov
cmp
in
cmp
aaa
jne
cwde
xchg
and
mov
hlt
xor
cwde
(bad)
in
xor
pop
add
iret
xor
pop
cmp
or
aam
pushf
and
jmp
imul
fiadd
push
and
daa
jbe
movs
add
mov
inc
call
cs
mov
push
cmp
push
movs
scas
ret
pushf
sub
add
inc
add
int
pop
ins
fsub
(bad)
and
fwait
dec
sub
lea
imul
mov
sbb
test
ins
mov
enter
mov
call
pop
or
fbld
add
mov
or
cmp
adc
push
lds
stos
push
xor
aad
cmp
sub
stos
jp
push
xor
pop
inc
adc
fdivr
movs
in
nop
push
test
xchg
arpl
movs
std
clc
add
ficom
jno
pop
jl
(bad)
popf
out
push
dec
sub
aad
rcl
cdq
mov
dec
out
cmps
out
jg
test
outs
mov
jns
aam
xchg
sbb
test
pop
cmp
dec
dec
ror
jp
inc
mov
aad
inc
repnz
rcr
cdq
pop
inc
mov
adc
xchg
jo
les
cmps
mov
push
pop
stc
sbb
fdiv
cwde
inc
imul
adc
jnp
test
in
sbb
and
icebp
add
dec
int
adc
inc
test
or
inc
jb
and
dec
scas
mov
or
pop
cmp
and
pushf
dec
cli
dec
and
inc
stos
(bad)
fnstsw
es
add
sbb
xchg
or
mov
imul
scas
mov
shl
and
mov
and
scas
into
div
and
gs
xchg
add
pop
push
and
jns
stos
loop
les
lds
inc
(bad)
pushf
xor
pop
ds
nop
jns
push
(bad)
or
or
ret
in
fdivr
pusha
test
mov
movs
test
adc
and
xlat
and
jbe
(bad)
out
enter
adc
and
jge
int
xchg
(bad)
and
lods
(bad)
sub
out
pop
cli
lods
mov
(bad)
sbb
inc
les
mov
inc
bound
adc
in
in
and
add
mov
or
inc
xchg
cmps
scas
(bad)
pushf
lds
in
jbe
movs
dec
std
adc
xlat
add
cs
sub
sub
jmp
jle
scas
stos
push
pop
mov
push
(bad)
shr
rcr
and
aam
adc
xor
push
adc
fs
mov
test
sub
outs
xchg
pop
cld
pop
cmps
add
push
call
stos
and
shl
xlat
dec
ins
sub
sub
movs
aaa
add
adc
hlt
sub
jl
ror
mov
xchg
psrlq
sbb
icebp
hlt
fdivr
in
rcl
jl
cs
sub
jb
cmp
stc
xor
inc
es
cmp
adc
lods
cli
mov
and
add
add
mov
pop
push
pop
cli
xor
shl
(bad)
daa
jno
xlat
icebp
aam
mov
dec
je
cmc
mov
push
dec
cmps
mov
push
lds
fwait
mov
push
jp
lea
fsub
fwait
lock
mov
sar
into
lahf
loopne
inc
pop
shl
xlat
enter
sbb
pop
fld
jge
pop
mov
fwait
xor
mov
sti
mov
loopne
mov
mov
mov
dec
dec
fist
aaa
ds
adc
cmps
movs
mul
cmp
fistp
in
inc
mov
push
mov
call
in
into
hlt
les
xchg
pusha
jmp
mov
bound
daa
imul
push
ret
movs
or
inc
adc
fsub
mov
inc
mov
mov
rcr
scas
push
mov
sahf
sub
movs
imul
and
mov
cmps
sub
or
inc
sub
xchg
imul
adc
inc
add
push
test
pop
dec
or
enter
cmp
push
sahf
inc
or
or
or
pop
adc
add
test
ret
mov
jno
retf
mov
sub
in
rcl
sbb
aad
pop
stos
mov
and
pop
mov
push
mov
arpl
int
icebp
aam
push
test
ret
jp
push
sbb
sti
or
sub
(bad)
(bad)
shl
mov
cmc
cwde
pop
imul
cmp
rol
xor
sbb
dec
mov
lahf
jne
xor
cmps
mov
xchg
and
cwde
sbb
repz
inc
jmp
and
pop
repz
pop
movs
pop
mov
cmp
pop
mov
or
into
pop
jecxz
int
xor
dec
rcl
jnp
sbb
jmp
xchg
dec
or
mov
cdq
pop
imul
es
cmc
cmp
cdq
movs
xor
mov
sub
bound
pop
lahf
dec
mov
idiv
add
daa
test
push
push
(bad)
in
sar
jno
xlat
push
dec
mov
mov
mov
mov
mov
sbb
or
pop
scas
push
popa
cvtps2pd
pop
ret
and
cwde
pop
out
xchg
pop
inc
(bad)
sbb
test
cmp
stc
add
std
jmp
push
or
or
mov
inc
add
mov
ins
mov
mov
mov
xor
jmp
iret
sbb
imul
lock
add
fs
aaa
loop
xor
stc
stos
hlt
jge
mov
inc
xchg
xor
imul
(bad)
mov
call
push
scas
scas
sbb
pop
sti
jle
mov
inc
mov
pushf
idiv
lods
pop
sbb
inc
ins
mov
retf
gs
mov
jnp
push
jns
test
test
sbb
inc
or
dec
jle
addr16
add
and
add
mov
cmp
jecxz
push
mov
dec
ret
mov
push
cld
adc
mov
int
imul
loopne
rol
xchg
jg
cmps
aas
adc
in
int
mov
lds
sbb
xor
jne
out
mov
cli
and
push
adc
inc
ds
pop
add
mov
gs
cs
jnp
leave
push
hlt
ficom
xchg
inc
push
add
adc
in
or
fistp
jns
mov
ror
scas
jno
test
mov
mov
cmp
mov
mov
add
mov
sbb
pop
sar
pop
push
pop
mov
out
dec
pop
xchg
xchg
pop
test
sub
xchg
and
jp
ja
daa
pop
cmp
aam
xchg
sbb
shr
xchg
pop
(bad)
mov
mov
pop
rcr
fadd
std
or
or
sahf
ja
std
sysenter
xchg
xor
dec
stc
repnz
mov
ss
lods
jno
adc
mov
inc
lods
fcom
arpl
cmp
imul
xor
enter
mov
xchg
inc
inc
(bad)
imul
test
mov
sbb
ins
sbb
ins
sub
or
add
and
or
push
lds
lds
push
test
pop
mov
mov
xor
mov
add
jp
mov
rol
in
jno
pop
xchg
mov
sbb
shl
sbb
lahf
iret
xchg
xchg
and
sub
adc
retf
jp
cmps
and
sub
pop
jns
cmp
ja
or
push
test
call
test
sbb
jno
jb
and
cmp
test
arpl
xor
call
(bad)
(bad)
gs
popa
sbb
loopne
cld
outs
fild
jmp
mov
out
icebp
mov
cmp
xchg
adc
push
iret
pop
jecxz
dec
ss
test
jge
sbb
jae
rcl
cmp
cmp
scas
xlat
lahf
dec
pop
outs
push
test
xor
hlt
hlt
xchg
test
hlt
adc
xlat
pop
jecxz
inc
repnz
adc
out
inc
fcomp
shl
xlat
enter
add
ja
lahf
pop
iret
sbb
adc
call
or
pushf
fs
xor
jecxz
mov
or
jbe
loop
daa
add
xor
rcr
and
jbe
or
dec
xchg
mov
rcl
fisubr
popa
dec
in
addr16
xchg
push
pop
or
mov
or
jb
mov
or
fwait
xlat
cmp
fmulp
popf
dec
ds
ss
xchg
pop
cdq
add
jo
fucomi
adc
mov
jne
pop
pop
in
inc
int3
stc
(bad)
and
xchg
sahf
jae
push
data16
ins
std
addr16
ins
cmps
adc
cmp
cmp
push
cmp
ret
xor
and
(bad)
fbstp
add
cli
sbb
jecxz
js
or
in
and
lea
add
sbb
jge
pop
xor
pop
mov
arpl
add
inc
fwait
xchg
mov
push
aas
rol
inc
hlt
cmovbe
ins
jl
lea
xor
push
pop
jle
pop
int3
into
xchg
popa
cmc
rcr
fst
outs
rol
loopne
loop
outs
and
sub
shr
xchg
(bad)
mov
sub
push
out
mov
xor
xor
push
and
dec
dec
jl
push
adc
gs
xchg
dec
jg
xor
pop
(bad)
jmp
in
pop
in
xor
ret
(bad)
and
xchg
mov
mov
mov
(bad)
mov
call
scas
cmp
mov
test
loope
sub
movs
stos
bound
fbld
loope
mov
jb
xchg
cmp
xor
push
jb
(bad)
mov
inc
in
xchg
call
sbb
fwait
inc
inc
imul
retf
and
and
adc
aad
jmp
test
adc
and
xchg
test
cdq
mov
xor
dec
and
retf
jmp
or
xchg
mov
jbe
aad
daa
mov
movs
imul
pop
jmp
dec
and
hlt
stos
push
mov
mov
in
lock
inc
xchg
jecxz
sbb
mov
push
push
mov
inc
or
adc
jne
push
adc
outs
shl
lds
cli
pop
push
bnd
mov
enter
mov
fimul
call
jo
outs
push
cmp
stc
pop
out
sub
cmp
movs
cmp
scas
mov
mov
or
retf
sbb
cmp
add
jmp
int
hlt
clc
ins
adc
dec
ja
movs
push
sub
mov
mov
xchg
cmp
idiv
call
jecxz
push
ret
pusha
sub
lods
pop
sbb
mov
add
pop
pop
les
mov
scas
jmp
stos
popa
add
dec
or
in
loopne
in
imul
push
push
add
sub
inc
xchg
jmp
xchg
or
mov
adc
imul
xor
inc
add
(bad)
shl
shl
fnstcw
loope
jbe
addr16
(bad)
pusha
push
add
cs
dec
xchg
pop
(bad)
(bad)
xlat
outs
nop
xchg
sub
cmp
mov
cs
mov
lods
test
imul
out
dec
fmul
sub
sub
cmp
shl
imul
inc
mov
mov
call
lods
int3
xchg
lds
je
popf
js
jb
mov
dec
je
neg
lea
int3
mov
xchg
(bad)
mov
loope
(bad)
(bad)
push
sub
xor
jecxz
add
jns
mov
sti
rol
das
std
pushf
xchg
or
push
retf
sbb
pop
leave
dec
dec
add
loopne
daa
rcl
iret
xchg
mov
xchg
in
ficomp
sub
fistp
or
aam
(bad)
add
lods
mov
or
push
add
clc
stos
clc
sbb
ror
lock
fs
inc
xchg
call
addr16
dec
xchg
adc
dec
ret
call
xor
daa
loopne
push
retf
lahf
cld
sub
bound
push
in
adc
bound
cmps
push
jle
in
mov
bound
int3
xor
sub
inc
and
and
daa
ja
inc
fidiv
(bad)
pop
out
or
mov
ja
and
in
cmp
jge
ret
push
cmp
loopne
mov
sbb
dec
mov
sahf
clc
je
mov
mov
neg
je
sub
imul
mov
in
test
test
cmps
pop
cld
pop
cmovs
jo
fist
sub
stos
sub
cli
jmp
adc
pop
call
hlt
in
mov
sub
add
pop
mov
push
jb
stos
ror
cmp
or
ja
int
xlat
rcr
fimul
loopne
sub
adc
sub
ret
xchg
xchg
aaa
pop
xor
or
mov
(bad)
pop
scas
cmp
xchg
and
cmc
jnp
xor
adc
xor
add
adc
cdq
loop
stos
int3
lock
jg
xchg
mov
fsub
and
iret
pop
inc
dec
mov
sbb
mov
data16
mov
iret
inc
ret
pop
xchg
cmp
rcr
pop
or
adc
in
mov
mov
jae
clc
xchg
retf
or
das
std
mov
test
js
add
popa
mov
or
dec
dec
in
das
popa
in
xchg
stos
test
mov
or
shl
int
inc
iret
lods
fisttp
lods
aaa
jbe
mov
xchg
(bad)
out
sbb
ss
push
adc
jmp
or
fidivr
mov
movs
mov
xor
or
imul
cmp
lods
push
push
fdivr
cli
aas
lea
int
dec
das
in
stos
ins
cmp
add
lea
pop
fdivr
or
jne
mov
jmp
pop
push
or
push
push
inc
add
push
and
in
mov
xor
mov
mov
sets
in
inc
add
nop
mov
dec
cs
pop
xor
cmp
xor
ins
je
(bad)
fsub
pop
pop
push
retf
sbb
ret
fidivr
xor
inc
mov
sub
and
adc
inc
add
fwait
aas
push
xchg
sbb
push
jne
push
scas
leave
xchg
ja
add
fild
mov
in
xor
adc
rcr
cs
mov
mov
and
jecxz
scas
ss
popa
xchg
adc
dec
fstp
jg
push
gs
add
sbb
addr16
pop
dec
dec
int3
add
add
adc
xchg
xor
push
pop
inc
add
jp
js
jno
and
sub
pop
adc
loope
(bad)
call
xchg
out
mov
push
call
mov
mov
pop
lods
neg
jmp
push
adc
call
leave
int3
add
xor
test
fsubr
lea
mov
push
mov
pop
stos
(bad)
pop
push
ins
sub
push
(bad)
jno
out
imul
(bad)
jle
dec
xchg
add
dec
retf
call
dec
clc
xor
retf
imul
xchg
icebp
inc
pushf
std
jbe
jo
cmp
jns
nop
inc
xchg
ret
cs
test
push
xchg
into
mov
sbb
mov
or
cmp
mov
fstp
imul
sub
jl
push
xchg
mov
test
shl
outs
js
test
loopne
inc
adc
adc
ins
jmp
xor
dec
jae
fadd
mov
cli
sub
add
and
mov
inc
mov
dec
mov
into
add
add
sbb
cmp
sbb
shl
push
cli
cdq
or
push
or
inc
and
sar
mov
sbb
aas
xlat
jecxz
fxch
jp
arpl
pop
sub
pusha
or
aaa
lahf
and
mov
or
inc
ins
call
pop
sub
pop
pop
push
(bad)
and
pop
adc
aad
sbb
enter
pop
sbb
es
imul
pusha
sbb
cmp
sub
xchg
dec
test
xchg
loope
push
dec
ins
pop
lock
bound
or
push
(bad)
pop
xchg
mov
push
(bad)
jb
push
push
xchg
int
sbb
enter
imul
lahf
mov
outs
and
popf
imul
arpl
cmp
mov
mov
fld
pop
gs
pop
mov
mov
ds
jae
shr
inc
movs
(bad)
sti
push
xchg
call
out
loopne
mov
cmp
mov
push
inc
cmps
mov
add
xchg
cmps
push
xchg
mov
fdiv
popf
mov
(bad)
xlat
add
sbb
cs
pop
je
cmps
out
jns
stos
add
and
pop
inc
imul
cdq
pop
pop
sar
pop
cmp
sbb
out
jno
xor
and
rol
adc
ins
and
mov
xor
cli
sub
lahf
sahf
mov
push
dec
das
dec
pop
sar
into
popa
call
jp
adc
int
mov
scas
sbb
dec
call
(bad)
xor
(bad)
xor
pop
std
sar
sbb
push
cmp
mov
xchg
jo
adc
sub
es
push
cld
inc
xlat
or
cmp
ror
(bad)
pop
aas
adc
inc
adc
cli
add
pop
int
inc
adc
xchg
loope
dec
sbb
pop
out
int
aam
inc
inc
cmp
dec
fsubr
xchg
(bad)
out
inc
call
mov
pop
in
into
into
fs
mov
repnz
aaa
push
cld
imul
lods
icebp
inc
mov
inc
test
xchg
into
call
mov
stos
mov
mov
pop
push
ja
xchg
je
jecxz
fstp
test
sbb
imul
push
or
inc
jno
out
in
lds
or
xchg
jno
adc
nop
add
xor
push
push
jge
mov
cmp
xchg
jge
cmp
popf
pop
xchg
cmp
pop
test
stos
ficomp
sub
add
pop
pop
pop
or
fs
or
adc
add
fldenv
std
test
dec
mov
inc
dec
and
sub
das
xchg
retf
clc
push
(bad)
cwde
sbb
xchg
or
call
cmp
push
cmps
xlat
push
mov
inc
or
jb
push
sar
retf
mov
and
shr
les
dec
xchg
call
(bad)
test
test
xlat
cs
cmp
ins
inc
mov
mov
sbb
movs
(bad)
(bad)
fwait
and
ret
outs
out
(bad)
mov
xor
push
and
sbb
neg
xchg
sub
add
je
inc
cmps
addr16
inc
adc
mov
retf
xchg
arpl
or
sahf
jle
jp
les
test
aaa
sbb
fild
hlt
bound
jo
loop
inc
inc
retfw
xchg
popa
and
add
push
xchg
rol
add
cmp
cs
lahf
sub
pusha
sti
mov
xor
jmp
ficom
xor
shl
inc
mov
add
jle
aad
xchg
shr
fnstsw
or
sbb
push
leave
dec
adc
mov
jecxz
popa
xor
pop
bound
clc
sub
dec
ror
fsub
(bad)
out
movs
sub
sub
mov
xor
fs
adc
push
jge
dec
in
jle
xor
or
pop
clc
jnp
xchg
je
cs
push
fs
mov
outs
xor
jecxz
push
add
nop
pusha
pop
pop
dec
mov
(bad)
dec
push
or
imul
add
stc
jmp
mov
outs
push
aas
jmp
cmps
rol
jecxz
dec
and
jnp
jl
rcr
fmulp
adc
inc
ret
test
ret
xchg
inc
inc
repnz
mov
clc
push
lds
aam
add
cmp
push
xchg
mov
data16
hlt
aam
lahf
(bad)
imul
dec
in
mov
call
inc
call
xchg
dec
sub
or
inc
and
mov
jg
pop
dec
icebp
push
aaa
or
jge
icebp
and
pop
bound
dec
inc
cmp
adc
sub
rcr
mov
cmps
or
scas
daa
lods
cli
dec
xchg
cmc
pop
mov
scas
sar
or
jo
jl
clc
cs
and
enter
xlat
push
daa
sar
and
lods
enter
mov
pop
mov
adc
cmps
sub
sbb
fwait
add
pop
rep
cmc
gs
lea
adc
out
add
xlat
or
outs
push
push
addr16
xor
out
or
cdq
mov
popa
scas
loop
xor
adc
sti
es
adc
ror
sub
out
out
push
rol
stos
or
seta
dec
push
and
sbb
or
cmps
dec
loop
jmp
outs
gs
jnp
add
cdq
ror
cdq
std
dec
push
jmp
out
pop
pop
popf
ds
repz
in
jmp
movs
dec
mov
mov
dec
sub
jb
push
neg
jo
or
inc
mov
mov
scas
xchg
mov
rol
cs
mov
mov
jg
sbb
or
push
ficomp
fwait
xchg
dec
sbb
stos
ja
int
jg
fwait
cld
fmul
(bad)
(bad)
pop
add
lods
xchg
call
sti
pop
pop
fisubr
sbb
repnz
jle
xchg
lahf
pushf
outs
jp
rcr
mov
adc
aas
call
stos
call
scas
pop
or
and
sub
push
inc
or
test
hlt
clc
mov
ins
dec
mov
fld
adc
(bad)
out
mov
jp
sti
dec
jno
dec
xor
or
mov
movs
daa
imul
mul
pop
pop
ret
inc
ficomp
(bad)
xlat
in
movs
cmp
jmp
retf
movs
out
mov
add
dec
or
lea
sbb
xchg
jae
mov
mov
loop
cdq
lock
loopne
mov
jo
fnstcw
inc
mov
ds
xor
daa
dec
xchg
icebp
les
cmp
enter
pop
sbb
push
cmps
add
stc
lock
xor
cmp
mov
mov
and
jo
outs
inc
test
not
ficomp
mov
call
sub
xchg
pop
cmps
push
leave
push
mov
lds
aas
imul
jns
xchg
mov
or
sub
in
sub
mov
cmp
imul
fst
xchg
jnp
lods
xchg
imul
sbb
sbb
mov
dec
and
pusha
and
loope
(bad)
mov
mov
add
push
leave
mov
cmp
in
sub
and
leave
sahf
pop
retf
jae
movs
push
shl
xchg
hlt
ror
movs
mov
pop
mov
mov
aad
shl
neg
cmps
adc
adc
fld
push
shl
xor
mov
sbb
je
jb
shl
fiadd
pop
pushf
imul
sti
in
push
xchg
xchg
out
xlat
bound
adc
push
add
xlat
fs
dec
ror
push
fucom
mov
mov
mov
mov
lods
jp
inc
dec
fcom
retf
or
mov
test
pushf
aaa
mov
add
std
push
mov
sbb
add
xlat
(bad)
leave
cld
mov
mov
adc
inc
cli
push
pop
ror
sub
mov
sub
nop
hlt
mov
rcr
sahf
ret
sub
pop
clc
int3
cdq
std
xchg
fbld
(bad)
sar
retf
in
shr
cwde
dec
aad
mov
loope
xchg
cs
fstp
adc
jnp
cmp
sahf
jg
mov
das
mov
jnp
xor
mov
lods
mov
xchg
adc
push
retf
pop
push
fcmovnbe
mov
loop
push
sti
icebp
add
or
adc
and
ins
xor
not
push
sub
test
fdivr
stc
fst
push
inc
fcomp
sub
into
inc
jp
rcr
out
(bad)
xchg
inc
iret
movs
inc
add
mov
aad
retf
sahf
push
cmp
dec
xor
lea
int3
or
outs
mov
sub
loop
jg
dec
in
daa
adc
in
sahf
int3
lea
jmp
icebp
lea
push
xlat
push
lds
add
lods
lods
dec
add
ins
jne
lea
jmp
cmps
mov
mov
inc
aad
jae
adc
mov
sbb
fwait
dec
mov
outs
cdq
and
pop
lods
loope
adc
cmp
ins
jb
sbb
repnz
sbb
push
pop
out
mov
loopne
add
mov
jmp
add
sub
pop
pusha
push
push
lock
ss
sbb
push
adc
in
inc
mov
(bad)
cmp
mov
rcl
sbb
stos
test
loope
cmovp
sbb
jp
imul
inc
aas
cli
into
pop
or
add
jle
xlat
iret
lahf
into
test
call
sub
mov
rcl
xor
int3
fimul
xchg
fst
jg
push
sbb
push
neg
in
add
sbb
lods
inc
stos
or
call
xchg
mul
xor
call
mov
adc
adc
sub
xchg
add
add
mov
push
int3
xchg
fwait
nop
jl
adc
das
retf
ins
sub
paddusb
sub
sbb
cdq
mov
adc
inc
push
popa
int3
push
retf
xor
dec
xlat
xchg
jle
(bad)
dec
fldcw
mov
mov
mov
call
cmp
inc
mov
loopne
popa
cdq
add
jae
cmp
ss
inc
pop
movs
shl
icebp
pand
cmps
into
jae
retf
and
dec
add
dec
mov
mov
fwait
sub
sbb
mov
sbb
bnd
mov
dec
ins
mov
jb
enter
lahf
jmp
imul
mov
xchg
ds
pop
hlt
into
movs
inc
adc
mov
sub
pop
int3
push
bound
icebp
pop
inc
inc
mov
lea
mov
lahf
dec
stos
xchg
xor
mov
fbld
popf
in
es
dec
pop
add
add
out
mov
add
jo
inc
mov
cdq
sbb
int3
ret
call
test
sahf
mov
mov
pop
or
cmp
cmp
or
and
inc
daa
aaa
cdq
pushf
mov
repz
cmps
sub
loope
jmp
iret
fld
imul
pop
lods
inc
xchg
dec
es
loope
loop
push
les
ds
xchg
push
jbe
daa
sub
xchg
pusha
and
or
push
cli
movs
add
jl
stc
aas
dec
add
sub
cld
shr
repz
mov
repnz
stc
sbb
push
jge
xor
xor
es
push
cli
push
scas
pop
retf
cld
xor
or
stos
and
and
movs
test
ror
and
inc
jge
inc
ficomp
scas
push
(bad)
pop
cmps
xor
jp
sub
push
lahf
int3
repnz
sub
add
mul
enter
mov
outs
cmc
adc
loopne
in
es
pusha
mov
jbe
mov
pop
mov
sub
sub
jmp
clc
xchg
loop
les
nop
pop
idiv
fcomp
stc
dec
dec
inc
movs
cmp
adc
fidivr
icebp
ja
inc
push
(bad)
adc
mov
rcl
inc
inc
dec
fist
dec
mov
jmp
dec
inc
pop
mov
cmp
arpl
test
outs
repnz
mov
dec
call
(bad)
sbb
adc
js
test
loopne
out
(bad)
mov
mov
push
(bad)
push
mov
and
dec
adc
pop
jae
les
call
jmp
inc
cdq
mov
jae
mov
xchg
dec
jmp
int
out
cmc
mov
jmp
jg
test
fwait
imul
ss
movs
(bad)
xor
push
std
push
int3
sar
addr16
bound
cmp
ficom
jge
(bad)
mov
ss
mov
ret
mov
push
cmp
inc
pop
jne
out
sti
push
cwde
push
push
mov
xor
int
or
bnd
iret
ds
push
or
scas
loop
xchg
outs
sti
push
jbe
push
call
icebp
aam
jmp
mov
mov
mov
pop
add
in
fadd
add
aas
dec
lods
or
mov
int3
cmp
std
and
inc
sti
inc
std
adc
ins
ins
fcom
(bad)
xor
push
cli
mov
sbb
xor
out
mov
mov
adc
pop
mov
xchg
mov
cmp
add
and
int3
ret
push
(bad)
adc
fld
lock
in
int3
dec
popa
pop
or
outs
pop
mov
test
fild
push
in
inc
xchg
test
and
movs
sub
sub
pop
(bad)
or
pop
mov
cwde
inc
in
in
mov
push
cmps
adc
inc
jmp
jne
lahf
jle
sub
adc
pop
sbb
pusha
lock
jge
push
sar
xchg
movs
lea
imul
js
sar
add
pop
and
(bad)
adc
push
pop
pop
add
jmp
jp
sahf
inc
out
inc
sbb
mov
movs
xchg
je
push
jp
lock
test
mov
mov
push
mov
dec
retf
stos
push
push
stos
push
pop
cmps
sub
repnz
xor
and
inc
dec
shl
inc
cmps
loopne
mov
test
push
dec
sahf
mov
retf
popf
ror
and
mov
inc
sub
imul
cs
idiv
fisttp
fst
inc
sar
add
ret
jle
jbe
loop
inc
jae
pop
adc
jae
xor
sub
call
out
out
clc
xchg
jmp
mov
into
xchg
xlat
loope
rcl
xchg
pop
push
js
repz
xchg
(bad)
aam
ss
movs
daa
jno
jno
dec
dec
outs
mov
retf
test
adc
cwde
sub
pop
and
mov
pop
movs
jle
adc
inc
mov
push
add
frstor
int
push
mov
push
hlt
bnd
repz
in
retf
dec
pop
int3
adc
ret
adc
out
push
and
inc
mov
jmp
lea
mov
scas
mov
movs
leave
sub
loope
jle
mov
dec
fwait
xor
xor
repnz
xor
in
nop
int
adc
loopne
sar
sub
imul
cmp
ins
(bad)
mov
mov
gs
pushf
leave
lahf
sbb
inc
mov
jmp
repz
(bad)
and
scas
jno
push
cwde
jl
das
pop
push
daa
and
loope
add
arpl
or
adc
dec
test
jecxz
jns
cmps
sub
cmp
jno
dec
gs
xor
es
dec
add
enter
ror
(bad)
jno
aas
stos
add
in
push
dec
xchg
ret
or
sbb
pop
jno
pop
mov
or
dec
xor
in
xchg
retf
enter
sbb
data16
scas
mov
sub
mov
jg
fadd
cmp
mov
cmp
jb
fnsave
jge
jecxz
data16
cmp
sbb
call
pop
xchg
je
je
jmp
bound
(bad)
(bad)
ret
jnp
dec
imul
mov
fldcw
(bad)
jp
mov
call
pusha
(bad)
cmp
push
xor
in
test
adc
xor
aad
sub
push
(bad)
call
cmc
and
mov
sbb
inc
inc
sbb
addr16
test
add
loopne
imul
les
call
lea
arpl
push
or
jo
sbb
gs
cwde
jp
sub
gs
or
iret
inc
add
pop
xchg
mov
or
cmps
lahf
xlat
or
dec
mov
pusha
jecxz
xchg
push
cdq
push
mov
inc
lods
clc
test
mov
test
iret
push
mov
ins
jbe
aam
loopne
enter
nop
mov
mov
mov
xor
xchg
cmp
dec
mov
cmp
push
fisttp
jmp
mov
ins
sub
jge
pop
(bad)
in
dec
shl
jnp
retf
arpl
xchg
xor
mov
movs
pop
mov
aas
dec
pop
sbb
fcom
pop
cmp
push
xchg
pop
(bad)
std
out
xor
lods
sub
ins
cdq
not
sub
rcr
xchg
test
stos
xchg
pop
ds
sub
push
cli
or
repz
jg
in
test
ss
add
pop
mov
into
mov
sub
popf
not
outs
out
clc
fs
mov
fimul
inc
mov
rcr
cdq
sbb
sbb
shr
out
int
xor
and
(bad)
movs
ror
mov
lock
out
sub
fdiv
push
jmp
imul
imul
sbb
sbb
push
pop
dec
cmps
adc
movs
mov
add
(bad)
fwait
sub
or
adc
mov
cwde
push
aaa
add
jo
or
or
add
or
retf
lahf
daa
neg
mov
mov
fcmovnbe
cmp
shr
sub
pop
sub
jno
xchg
sahf
sbb
das
sbb
mov
or
retf
mov
or
push
pop
shl
shl
push
mov
dec
push
mov
inc
mov
fiadd
popa
movs
sar
bound
mov
add
push
and
test
popf
and
popa
push
adc
and
cdq
or
ror
sub
out
stos
ror
aad
les
jno
sbb
mov
cwde
movs
cmp
inc
ins
call
shl
fwait
sbb
fwait
push
cmp
cli
mov
rcl
push
in
popf
mov
adc
sbb
lds
outs
(bad)
push
arpl
gs
mov
xchg
fs
adc
cmps
xor
or
idiv
pop
jae
loopne
(bad)
stc
lds
in
push
inc
loope
and
je
or
xchg
(bad)
int3
test
mov
pop
popf
out
or
pop
les
inc
dec
in
clc
pop
jmp
adc
dec
aas
fisub
dec
stos
mov
xchg
in
adc
pop
fsubr
xor
(bad)
(bad)
cmc
mov
dec
fldcw
call
xor
dec
test
data16
pop
adc
jno
test
xchg
jbe
iret
aad
cs
aaa
sub
fnstcw
jl
pushf
sub
retf
nop
mov
out
and
mov
pop
scas
sub
mov
pushf
inc
imul
mov
and
jp
retf
jne
sbb
repnz
adc
test
and
outs
pop
inc
rcl
lahf
cmp
imul
stos
push
clc
mov
les
xchg
push
push
pop
fistp
inc
loopne
add
test
and
cmps
adc
into
mov
loop
mov
push
in
in
enter
jmp
or
push
sahf
jmp
es
dec
jnp
mov
mov
ss
std
mov
sub
hlt
sahf
add
or
jmp
push
stos
repnz
jecxz
push
cmp
ss
in
add
(bad)
fsub
(bad)
sti
fs
inc
int3
xor
push
pop
ds
jecxz
in
mov
mov
mov
ins
push
loopne
or
inc
cmp
inc
(bad)
mul
and
push
or
aas
add
cs
fxtract
ss
sub
dec
mov
and
pop
cs
mov
sbb
sub
mov
cld
dec
and
ror
push
xor
in
imul
mov
add
dec
repnz
xchg
in
mov
mov
ins
pop
jg
xchg
mov
and
out
das
int3
(bad)
test
clc
jno
aaa
inc
xchg
mov
lods
sbb
jg
ss
aas
ret
pop
xchg
xor
inc
ficomp
add
in
lahf
popf
mov
mov
sub
addr16
xchg
push
out
push
xchg
ret
retf
lahf
adc
push
inc
movs
mov
mov
sti
fucomip
fcom
shr
xor
fnsave
mov
dec
sbb
cmps
neg
add
jecxz
jp
mov
mov
rol
mov
cli
in
inc
dec
iret
outs
and
mov
pushf
rcl
daa
rcl
aam
sahf
mov
dec
jl
sub
adc
lea
pop
cmps
lea
call
push
dec
sti
add
push
push
outs
clc
jno
xchg
push
les
mov
jno
push
test
mov
and
sbb
sub
cmc
xchg
push
add
push
xor
arpl
cmp
(bad)
(bad)
mov
dec
fnstenv
fst
outs
rol
mov
jmp
add
ins
mov
cld
mov
test
or
ins
call
dec
xchg
retf
imul
cmps
lea
push
loop
mov
sbb
mov
push
out
daa
pop
cmps
sub
ins
or
jmp
pop
clc
imul
das
pcmpgtb
popa
fdivr
jne
push
xchg
adc
adc
or
jmp
test
into
add
sub
retf
jns
push
shl
ins
xchg
adc
repnz
rcl
sar
js
(bad)
sahf
lds
sub
call
cli
push
cwde
add
xchg
sub
push
xor
dec
xchg
sahf
jmp
or
ret
das
or
inc
mov
xor
inc
ficomp
jmp
jle
call
mov
sub
adc
inc
inc
jae
retf
dec
lock
vpinsrw
cwde
out
cmp
imul
pop
add
das
mov
xchg
loop
js
loop
loop
idiv
cdq
test
mov
mov
xor
sub
frstor
fucom
mov
out
pusha
push
jl
loop
pop
aas
loopne
test
fmul
inc
sub
aad
sti
pop
mov
(bad)
call
xor
jl
mov
aam
add
fs
sub
mov
(bad)
bound
bound
sahf
cld
lods
test
xchg
scas
imul
mov
inc
mov
ins
jl
clc
push
call
cs
(bad)
or
mov
pop
mov
data16
pop
pop
mov
mov
out
add
inc
inc
cdq
dec
retfw
jmp
jmp
icebp
sbb
repnz
pop
ds
dec
shl
xor
js
and
or
xor
iret
lods
add
pop
mov
sub
sub
loope
pop
nop
cmp
in
push
outs
out
out
outs
xchg
push
sbb
popf
enter
xlat
fcmovnb
scas
add
inc
retf
test
cmp
mov
mov
ins
ret
mov
add
neg
or
outs
out
ja
xor
or
iret
xlat
dec
mov
mov
in
fmulp
in
or
pop
push
fwait
mov
adc
push
pop
add
les
stos
push
je
fadd
out
lods
scas
xchg
aaa
mov
cmp
hlt
outs
jae
push
sbb
sub
and
neg
cdq
lea
sbb
loop
xor
and
sub
loopne
js
push
inc
hlt
int3
(bad)
jmp
icebp
mov
mov
dec
xchg
clc
sub
xor
cmp
iret
ins
sbb
cmp
or
repnz
add
out
icebp
adc
ds
rcr
adc
mov
xchg
mov
and
mov
push
jecxz
dec
or
mov
jge
push
pop
test
pop
pcmpgtb
enter
test
mov
icebp
int3
(bad)
jge
imul
mov
inc
(bad)
into
sbb
jecxz
pop
loop
addr16
fstp
jg
push
jno
call
adc
mov
mov
test
retf
gs
mov
enter
lds
and
into
mov
push
add
mov
imul
imul
cmc
pop
xor
mov
aas
shl
mov
(bad)
ss
hlt
movs
jne
pop
shl
sub
push
rol
stos
adc
and
inc
cmc
pop
cli
add
sub
ins
repnz
ja
mov
lock
inc
xchg
push
jnp
in
cmp
movs
add
mov
nop
enter
cmp
dec
xor
inc
inc
into
data16
and
test
ja
(bad)
mov
mov
stos
push
js
jb
pop
cmp
jmp
in
sbb
mov
dec
and
pop
pop
sub
xor
sbb
loope
mov
nop
cdq
scas
and
mov
jmp
ins
pushf
fstp
or
inc
or
stos
fucom
(bad)
mov
popa
lods
xor
xlat
out
call
sbb
pop
enter
mov
retf
and
or
pushf
push
sbb
pop
sbb
int3
xor
addr16
or
lods
fstp
clc
cmps
add
xchg
or
xchg
mov
(bad)
int
lea
sub
fidivr
les
pop
cdq
add
fwait
push
mov
xor
ins
mov
push
sub
idiv
xor
mov
ror
inc
jecxz
push
daa
scas
aaa
mov
cdq
add
jmp
pop
repz
movs
push
popa
xchg
jne
arpl
rol
out
dec
mov
xlat
mov
mov
and
imul
push
clc
xor
cli
xor
sub
mov
mov
mov
dec
mov
sub
xchg
push
arpl
fs
dec
pop
pusha
test
xchg
cmps
pop
(bad)
das
pop
mov
nop
retf
sar
sub
popf
jne
inc
or
dec
pop
lods
mov
sub
out
scas
mov
(bad)
sbb
data16
xlat
push
inc
sbb
push
mov
pushf
neg
and
aas
int
mov
mov
jbe
lds
dec
lock
out
int3
mov
pushf
dec
cs
mov
and
mov
outs
jnp
and
mov
cli
div
sbb
push
inc
add
push
aam
sbb
je
xchg
fstp
(bad)
jg
icebp
lods
push
or
push
iret
or
js
push
and
mov
mov
dec
jnp
cmps
pop
mov
cmp
inc
and
test
mov
xchg
add
gs
cmps
aam
xchg
lds
scas
loope
out
xchg
push
mov
out
adc
inc
(bad)
dec
jecxz
xlat
int
push
retf
test
gs
pop
ret
cld
inc
shl
fnstenv
jmp
mov
cwde
icebp
and
das
sbb
(bad)
in
jmp
jo
in
(bad)
push
jmp
lock
loope
shl
inc
mov
mov
or
fimul
sub
test
fs
xor
sub
sub
ror
pop
jmp
xchg
out
imul
mov
jecxz
push
jae
mov
lea
pop
mov
adc
mov
adc
es
mov
lods
inc
jne
popa
es
and
push
dec
cwde
pop
push
mov
lods
inc
not
rol
inc
mov
sbb
dec
mov
dec
mov
mov
out
int
inc
or
sahf
xchg
rcr
mov
xlat
in
lea
push
in
xor
mov
lods
xchg
or
cmps
jae
mov
inc
mov
cmp
out
rcr
inc
test
sbb
cwde
aaa
jo
mov
inc
ja
ror
inc
xchg
imul
fs
(bad)
call
fcmovu
adc
movs
mov
test
sbb
mov
cld
inc
imul
or
rcr
and
jmp
xor
and
ret
seto
lods
retf
add
stc
adc
and
js
nop
sub
mov
jo
scas
mov
pop
pop
push
cld
cmp
mov
fs
push
in
or
jmp
(bad)
bnd
push
jle
leave
iret
in
and
inc
imul
jo
jmp
or
ins
mov
scas
push
lahf
bound
repz
call
add
cmp
stc
sbb
add
xor
dec
jns
xor
out
dec
push
sub
inc
call
lods
xchg
aas
push
mov
(bad)
mov
and
(bad)
add
aas
xchg
mov
jbe
hlt
data16
addr16
mov
dec
mov
daa
cmps
add
neg
mul
outs
inc
xchg
push
repz
push
sti
dec
ins
jg
in
jmp
mov
mov
push
mov
jo
fadd
stos
or
cmps
loopne
mov
mov
out
fs
cmps
push
cdq
xchg
lea
jge
mov
xchg
or
cmp
cmp
pop
pop
inc
inc
loop
cmp
mov
dec
and
mov
in
loope
xchg
hlt
enter
jmp
(bad)
jmp
jp
stos
iret
cmp
retf
or
fisub
rcr
inc
lds
dec
inc
push
pop
jne
fs
push
(bad)
scas
stos
pop
aad
fs
scas
cmp
xor
(bad)
mov
pusha
(bad)
(bad)
jg
add
(bad)
je
(bad)
sub
bound
nop
aam
movs
jmp
lock
sbb
leave
mov
and
jmp
daa
rol
imul
sahf
mov
les
add
in
mul
js
mov
xor
fild
fs
call
sub
(bad)
sub
(bad)
movs
jno
and
pusha
adc
pushf
cmp
mov
add
pop
aas
sub
mov
ins
ja
pushf
mov
cmp
push
cli
outs
mov
ss
and
cld
or
leave
mov
cwde
sbb
adc
push
pop
arpl
pushf
mov
jae
xor
xor
rcl
int3
sbb
pop
adc
mov
adc
adc
fmul
out
push
addr16
and
nop
gs
mov
daa
lods
cmp
xchg
loopne
shl
in
test
mov
jle
add
out
push
xor
jg
mov
fnstenv
jle
sub
das
add
cmp
sub
orps
pop
(bad)
push
or
add
and
jns
mov
dec
(bad)
fisubr
xor
les
sub
cdq
stc
sbb
fisttp
xchg
sbb
(bad)
push
mov
mov
(bad)
inc
(bad)
leave
movs
aam
lahf
xor
adc
arpl
test
test
push
mov
stc
sbb
popf
and
call
and
jle
pop
inc
stos
xor
dec
sub
sub
call
push
test
shl
sahf
call
(bad)
push
fmul
add
sbb
(bad)
cmps
add
fcom
adc
dec
jb
dec
pop
pop
xor
cmc
push
push
fidiv
mov
dec
push
jnp
rcl
enter
cmp
sbb
mov
mov
cwde
xchg
fnsave
pop
mov
bndldx
dec
pop
ds
ss
out
int3
unpckhps
repnz
xchg
std
sub
repz
adc
xlat
ds
sub
xchg
rcl
scas
pop
clc
mov
fisttp
ror
mov
movs
or
add
inc
mov
loope
in
add
aaa
xchg
scas
mov
test
sbb
sbb
out
lods
xor
push
add
pop
out
ret
retf
adc
mov
pop
movs
jmp
dec
leave
shr
es
in
cmps
out
mov
sar
outs
jmp
ins
mov
cmps
and
or
dec
addr16
mov
xchg
sub
and
leave
cmps
retf
mov
daa
mov
mov
xor
retf
mov
mov
sub
stos
popf
push
sbb
xchg
in
xor
mov
mov
int
mov
stc
sbb
dec
popf
xchg
xor
push
mov
push
xor
sbb
test
aaa
or
sub
inc
mov
jg
loopne
js
pop
pusha
enter
aam
push
outs
in
nop
lea
xchg
stos
xchg
loopne
outs
xchg
gs
test
(bad)
jns
jge
mov
arpl
mov
int
xchg
(bad)
std
sbb
scas
jae
xchg
shr
jo
adc
out
mov
sub
adc
enter
cmps
jno
cli
pop
xchg
mov
mov
push
dec
or
stc
repz
outs
jb
xor
jle
xchg
inc
out
xor
in
cmps
jbe
loopne
cmc
movsx
in
call
shl
pushf
mov
call
push
mov
jmp
jo
dec
stos
cdq
or
loopne
je
cmp
mov
cmp
mov
inc
aaa
add
lahf
test
movs
xlat
jae
stc
or
pop
mov
out
call
mov
imul
ja
push
and
ins
ins
cs
sahf
pop
arpl
in
or
sbb
pop
or
dec
pop
xor
dec
dec
mov
cli
ds
movd
outs
xor
shl
sbb
cmps
sbb
data16
cmp
xor
cdq
mov
retf
cmp
jo
and
outs
sub
adc
cmp
cdq
imul
std
movs
cmps
pusha
mov
push
pop
movs
add
sar
fcmovnu
cmps
xchg
mov
sar
nop
add
mov
imul
lods
stos
aam
mov
adc
xchg
leave
adc
scas
ins
popf
repz
dec
mov
cmps
es
cmp
mov
fdivr
fst
sub
neg
or
rcr
ins
adc
(bad)
and
push
das
fimul
into
or
sbb
push
jecxz
xchg
jne
aaa
fadd
pop
push
jno
inc
daa
push
(bad)
adc
sub
fidivr
pop
jmp
dec
cwde
scas
sbb
xor
into
pop
mov
jae
xchg
cmp
int3
cs
and
jecxz
pushf
icebp
mov
inc
push
lods
lahf
into
(bad)
mov
xor
mov
stc
fwait
mov
pushf
pop
or
cdq
pop
js
dec
fs
inc
jns
inc
rcr
dec
test
pop
add
call
mov
stos
or
stos
adc
jecxz
cmc
fmul
add
xor
ss
in
std
js
xchg
out
sbb
repz
push
jmp
inc
stos
mov
add
stc
mov
stos
inc
mov
and
add
cmp
test
sbb
sub
cld
jg
fsub
imul
push
pushf
dec
mov
cmps
sub
shl
dec
push
and
add
fcomi
cmp
les
or
xchg
mov
pop
pop
mov
enter
sub
sahf
daa
pop
dec
aas
xchg
jbe
xchg
lods
add
jb
repz
xchg
ds
sbb
sbb
sbb
xor
test
(bad)
xchg
cmp
pop
mov
mov
jne
ins
push
xchg
fst
shrd
push
sub
dec
dec
fstp
and
sub
retf
jmp
and
js
(bad)
xor
pop
push
in
mov
cmp
scas
mov
imul
or
lea
mov
adc
push
push
push
cmp
retf
mov
and
fwait
dec
nop
int3
xchg
cmp
dec
pop
mov
aad
jne
adc
shl
or
mov
lock
ud2
xchg
push
sub
(bad)
cmp
pop
mov
out
leave
push
fxch
jmp
iret
std
cdq
and
xor
xchg
cmp
(bad)
in
lahf
xlat
sahf
and
push
adc
adc
mov
push
cmps
cmp
test
pop
push
cmp
int
icebp
cmps
sbb
push
lahf
ins
mov
inc
fwait
in
cmp
xor
mov
int3
jg
push
jnp
sbb
jbe
scas
fistp
cs
lock
out
add
or
ins
mov
jecxz
inc
or
jno
mov
scas
lods
in
mov
popa
repnz
out
push
sbb
out
mov
ficomp
jo
jge
test
xlat
jae
cmps
pop
cmps
push
push
fwait
je
mov
mov
cmc
xchg
jle
cmp
test
xchg
loop
push
in
in
dec
xchg
loopne
ins
mov
and
mov
aaa
jle
fild
scas
pop
sahf
push
mov
sub
and
fild
nop
jmp
test
aas
jle
sti
adc
ins
test
jae
dec
push
movs
push
stc
ins
in
push
je
(bad)
adc
push
jae
sar
adc
jo
pop
xor
out
rol
push
jle
fld
movs
fiadd
fnsave
mov
icebp
mov
push
enter
and
sahf
lods
arpl
jo
adc
mov
repnz
sub
cmp
jge
(bad)
push
mov
xor
in
cmp
mov
fnstcw
ins
jno
outs
push
jbe
push
aad
(bad)
inc
loop
sbb
out
in
mov
int
ret
aaa
test
inc
add
scas
addr16
push
jnp
mov
sub
dec
mov
fisub
adc
mov
mov
lods
test
push
push
mov
idiv
mov
mov
pop
pop
mov
push
jmp
inc
xchg
je
and
mov
mov
popf
inc
es
pop
mov
popf
clc
push
jo
xor
pop
and
cmp
jl
fwait
push
mov
sbb
ficom
out
icebp
(bad)
not
sbb
das
xchg
xchg
aam
mov
gs
call
push
mov
xor
rol
push
or
jb
mov
pop
or
lds
scas
jae
xlat
shr
adc
push
(bad)
fwait
adc
shl
adc
dec
test
shl
xor
pop
inc
xchg
jle
imul
or
call
mov
cmp
in
jns
(bad)
lock
push
outs
imul
das
sub
sub
xor
stos
adc
dec
cmp
cmp
bound
lods
inc
ds
jo
cmp
out
jae
std
sahf
mov
retf
xchg
mov
movs
repnz
sbb
ficomp
scas
loop
retf
adc
outs
iret
sar
(bad)
(bad)
pop
frstor
cmc
and
sti
sbb
dec
pop
das
adc
cmp
fild
pop
inc
xchg
inc
sbb
mov
jb
cmps
lds
dec
cs
ret
push
mov
mov
and
aas
hlt
mov
imul
adc
movs
retf
rcr
cmp
dec
inc
ss
or
mov
jg
(bad)
int3
fld
xchg
mov
repz
sub
jle
daa
or
mov
push
retf
mov
cwde
add
mov
outs
pop
xor
dec
in
out
dec
shr
cli
adc
popa
jnp
sar
mov
jno
es
mov
adc
xor
call
mov
mov
nop
and
in
clc
pop
cs
push
cs
xor
hlt
xchg
scas
retf
rcl
sti
retf
inc
call
sub
mov
push
mov
in
(bad)
in
push
dec
or
xchg
(bad)
daa
test
mov
jge
retf
xor
outs
scas
clc
addr16
pop
rol
push
add
xor
jge
imul
fsub
xlat
test
movs
out
rol
idiv
lds
sbb
push
pop
int3
das
int
sub
(bad)
cmp
gs
ss
cmp
mov
std
popa
jno
xchg
fisttp
and
xchg
xor
retf
push
push
mov
lea
daa
out
inc
enter
mov
mov
fwait
bound
imul
jne
dec
mov
fcomp
push
ja
dec
pusha
aaa
push
les
add
xor
aam
push
dec
loop
dec
std
rol
cdq
inc
ins
jle
(bad)
out
mov
inc
ds
jmp
jo
cdq
in
popf
fld
push
sub
jo
ds
aas
sub
jle
mov
jle
pop
and
cmp
loope
add
aas
push
stos
jmp
cmp
or
jge
shl
into
das
aaa
push
int3
lea
cdq
in
repz
pextrw
mov
movs
mov
movs
xor
adc
push
add
out
jo
xchg
fidiv
(bad)
in
rcl
pop
pop
mov
push
mov
inc
inc
idiv
shr
aam
les
popf
sbb
xor
mov
and
push
inc
ins
push
gs
jns
push
jnp
xchg
push
mov
cwde
jno
in
pop
pop
mov
xchg
push
dec
xchg
movs
pop
stos
pop
fcmovu
or
popa
fcmovu
xor
inc
xchg
mov
xchg
pop
clc
mov
sahf
aam
js
movs
mov
loopne
cli
jno
mov
mov
sub
loopne
mov
gs
sbb
je
data16
and
nop
mov
sbb
js
xor
sbb
and
inc
hlt
add
xchg
sub
mov
and
mov
cld
cmp
add
(bad)
push
out
icebp
xchg
fld
cmc
hlt
adc
outs
pop
loope
bound
mov
repz
lods
sub
aas
push
fwait
cmp
(bad)
sti
mov
sbb
sbb
iret
sbb
push
les
dec
test
icebp
clc
mov
std
call
lods
jle
shr
shl
or
das
lahf
cmc
mov
les
cwde
test
inc
scas
mov
dec
cld
div
mov
dec
pusha
pop
adc
mov
dec
test
and
dec
movs
fs
rcr
in
cwde
xchg
push
push
pop
repz
inc
fs
movs
clc
dec
xor
mov
jmp
add
cmp
push
xchg
adc
or
and
xor
push
repz
mov
aaa
cmc
inc
xor
addr16
lods
cmp
pusha
sbb
loopne
inc
push
sbb
mov
xchg
ret
cwde
addr16
aam
mov
scas
pushf
loope
out
mov
adc
iret
into
lods
push
rcr
gs
mov
add
inc
cmp
dec
ret
imul
push
fisttp
gs
xchg
test
and
popa
lods
movs
push
pop
inc
fs
xor
push
aaa
jle
cmp
imul
mov
sbb
xchg
xor
sar
jnp
das
movs
scas
push
mov
(bad)
call
mov
jp
lods
scas
leave
mov
(bad)
fs
and
xchg
cmp
loopne
jnp
xor
shl
fwait
(bad)
rcr
jnp
pushf
pop
retf
jbe
xor
cwde
mov
icebp
sbb
inc
fs
push
mov
lods
sbb
out
test
sub
pop
push
adc
mov
push
cmp
ret
ficomp
out
cmps
xchg
push
je
push
loope
loope
inc
sar
call
sub
xor
mov
mov
fimul
jge
outs
pushf
loopne
dec
nop
in
mov
ins
mov
push
push
sbb
push
call
add
inc
inc
and
out
xor
mov
in
sub
test
fbstp
adc
int
mov
mov
mov
xor
add
jmp
(bad)
sbb
mov
out
jae
adc
aas
(bad)
sub
adc
or
daa
cli
mov
mov
mov
push
pop
cmp
nop
into
mov
imul
pop
add
or
inc
xchg
mov
(bad)
mov
push
mov
jmp
push
cli
mov
cdq
dec
pop
call
inc
out
sbb
xchg
rcl
and
sub
fwait
mov
mov
sub
adc
rcl
repz
or
pop
(bad)
cmp
pushf
in
dec
pushw
sub
pusha
out
mov
mov
pop
pop
loopne
ins
lahf
(bad)
ror
cmp
and
fdiv
lods
out
push
sub
sub
cmp
ss
imul
jecxz
popa
vfnmsub231sd
repnz
cmp
imul
mov
stc
mov
out
fwait
rcr
mov
cmp
mov
jns
movs
int3
js
add
xchg
inc
jecxz
pop
adc
in
cmps
data16
inc
jae
test
es
cli
mov
pop
add
icebp
mov
adc
js
je
pop
gs
fcom
inc
sbb
pop
jmp
jg
pusha
and
std
(bad)
and
cwde
rcl
sahf
cmp
lods
xor
pop
test
mov
stos
shl
dec
xchg
and
stc
daa
sub
push
into
in
mov
mov
adc
jmp
stos
mov
adc
aam
call
pop
(bad)
retf
cmp
or
ret
stos
in
int3
outs
mov
fisubr
mov
outs
dec
loop
pop
cmp
cmp
dec
(bad)
fist
adc
xchg
dec
retf
(bad)
lock
out
pop
fisttp
sbb
pushf
mov
pop
jns
rcr
and
xor
jb
retf
jecxz
xchg
adc
imul
test
mov
mov
sti
test
cmps
pop
dec
mov
(bad)
fstp
in
xlat
sub
sti
dec
sbb
aaa
pop
xchg
into
xor
mov
stos
call
jg
xchg
mov
retf
inc
and
mov
aam
mov
cmp
jne
ds
mov
jno
fsubr
push
sub
jno
xchg
icebp
sub
retf
repnz
jb
imul
mov
int3
jge
iret
mov
mov
lea
cmp
mov
lods
enter
fst
pop
rcr
inc
xor
int
adc
stos
rcl
or
fbld
dec
fwait
bswap
mov
mov
cmp
ficomp
ins
out
call
outs
add
fstp
or
cmps
mov
fsubr
xor
sub
mov
pop
push
push
mov
ja
pop
sbb
push
pop
int
test
test
in
in
popf
add
retf
frstor
pop
push
mov
hlt
iret
dec
lods
ret
cmps
inc
aas
int3
dec
and
push
test
or
sub
dec
cmp
mov
iret
mov
mov
sub
in
mov
in
xchg
adc
xor
mov
shr
pop
pop
xor
sub
xor
adc
or
cs
(bad)
and
fdiv
cmps
inc
xor
and
test
cmp
call
(bad)
jge
mov
cmp
jecxz
and
adc
dec
dec
fistp
retw
into
movs
xchg
mov
addr16
mov
inc
mov
rcr
mov
push
js
mov
push
jg
pop
xor
repz
ds
scas
sbb
jmp
mov
mov
mov
ja
imul
in
adc
(bad)
bound
jo
sub
inc
mov
xor
xchg
inc
hlt
out
inc
imul
push
(bad)
jg
in
and
mov
sbb
or
iret
sbb
imul
stos
std
imul
call
sbb
ret
inc
fwait
fwait
outs
add
test
jge
test
adc
pop
pop
ret
into
jle
js
jg
clc
adc
mov
lods
ret
xchg
xor
fmul
inc
push
mov
fsubr
mov
not
mov
pop
cmp
jecxz
mov
out
dec
cmps
fisttp
int3
or
dec
outs
arpl
mov
stc
cmp
pop
loop
mov
ret
inc
or
dec
sahf
jmp
or
add
jmp
pop
ud0
sbb
and
inc
pop
in
pop
jg
cmp
(bad)
ins
mov
add
gs
pop
es
push
div
push
data16
imul
ret
cmps
retf
inc
(bad)
adc
rcl
fistp
aaa
cmc
xchg
fwait
pop
dec
jl
cli
arpl
push
mov
push
push
jmp
and
in
imul
push
cs
bound
add
das
dec
jp
jg
adc
scas
lahf
pop
test
mov
adc
mov
fiadd
std
cmps
stc
and
push
lock
das
icebp
cmps
jbe
xor
pusha
mov
movs
cmc
push
jno
pop
lods
repz
xchg
and
mov
je
push
sahf
mov
xchg
jl
cmp
cmp
add
cwde
add
xchg
cmps
shl
xchg
xor
pop
and
sti
inc
pop
or
imul
lea
cmp
outs
dec
sbb
xor
jns
xor
stos
push
bound
inc
icebp
xor
dec
mov
movs
pop
mov
ins
fadd
fstp
mov
sahf
push
mov
retf
mov
mov
cmps
cmp
adc
hlt
jle
nop
push
(bad)
dec
movs
addr16
outs
sub
adc
dec
sbb
mov
fwait
xchg
int3
hlt
scas
enter
xchg
xchg
pop
cmps
xor
mov
and
jae
mov
ret
inc
pop
push
in
daa
or
retf
push
jmp
xchg
or
test
inc
xor
fwait
inc
push
xchg
pop
inc
pop
inc
xchg
push
or
push
xchg
in
bound
pop
sbb
call
call
adc
ja
out
movs
leave
(bad)
xor
sbb
or
jno
adc
inc
mov
in
sbb
mov
mov
adc
adc
mov
push
mov
xor
jg
sahf
pop
xchg
cmps
addr16
dec
rcl
or
out
or
add
call
sbb
shr
mov
lahf
call
sti
out
cmp
sahf
out
mov
jmp
mov
xchg
jecxz
sub
mov
mov
hlt
enter
add
dec
enter
and
outs
pop
into
fiadd
jno
cmp
scas
adc
pusha
adc
or
(bad)
mov
mov
outs
inc
repz
ins
push
ins
dec
jmp
dec
sahf
repz
cdq
ins
(bad)
in
mov
fbstp
adc
or
imul
test
mov
inc
mov
clc
das
dec
cmc
sub
dec
push
mov
aaa
mov
push
repz
inc
pop
jl
mov
imul
inc
push
enter
sbb
pop
cmp
adc
jl
cmp
mov
sti
xor
push
and
movs
push
aad
aaa
dec
mov
repz
(bad)
sbb
cmps
pop
in
push
outs
and
inc
push
mov
add
cwde
jae
test
(bad)
sar
xchg
mov
repnz
mov
mov
cmp
push
icebp
xor
jae
push
repz
mov
mov
in
jnp
into
inc
inc
push
fimul
mov
(bad)
fist
jmp
icebp
shl
daa
sbb
dec
mov
push
mov
fist
add
dec
daa
ret
add
js
fstp
sub
xchg
sbb
lods
adc
scas
lods
sbb
movs
sar
jle
pop
ins
ret
sbb
xor
and
icebp
ret
mov
call
lods
push
cmps
adc
jge
jl
inc
mov
xchg
and
mov
cdq
mov
push
jns
scas
jb
mov
clc
push
and
stos
int
pop
cs
pop
sbb
shl
sub
out
fiadd
repz
pop
push
cmc
cmp
xor
repnz
jp
push
pop
mov
mov
inc
add
call
(bad)
sbb
retf
push
lea
sub
loopne
out
cmc
mov
scas
push
jle
sub
mov
adc
ja
push
test
cmp
hlt
add
mov
push
xchg
xchg
xlat
lea
sub
ror
mov
and
out
push
ds
leave
sub
jne
into
mul
lahf
push
fwait
adc
mov
ret
or
pushf
jmp
and
scas
movs
fild
push
pushf
cdq
push
sub
mov
dec
inc
outs
imul
ror
mov
fsubp
mov
or
or
setne
dec
ins
cs
mov
xchg
mov
in
xchg
sub
push
push
movs
shl
repnz
into
sub
lock
inc
sbb
xor
ins
rol
mov
daa
nop
adc
dec
ret
xor
lods
jb
shr
ja
loopne
(bad)
dec
push
repz
out
fidivr
sub
repnz
inc
mov
pop
mov
pop
ret
stos
shl
test
pop
aad
aaa
leave
xor
sbb
stos
jmp
inc
adc
idiv
or
sbb
rcr
dec
add
add
jp
les
aaa
or
ds
mov
outs
push
adc
scas
or
sub
idiv
loopne
fistp
cld
and
pop
lock
mov
gs
xor
mov
scas
aam
xor
std
enter
dec
cmp
inc
out
sbb
add
retf
mov
sbb
call
mov
in
dec
rcr
pushf
f2xm1
lods
xor
push
pusha
sbb
push
cmps
daa
repnz
lods
sbb
xor
lea
and
into
sub
inc
int3
pop
or
int3
movs
mov
mov
mov
push
(bad)
xchg
and
cmp
imul
icebp
ret
in
mov
jmp
push
jecxz
out
cwde
pusha
pop
mul
cld
call
pop
cmp
pop
cmp
cmc
je
jl
hlt
mov
mov
xor
jne
jae
jne
imul
xchg
shr
out
stos
push
lds
daa
cmps
adc
lahf
add
adc
stos
ins
retf
mov
mov
ret
rol
push
push
pop
cmps
jmp
mov
and
(bad)
mov
sahf
mov
test
pop
xchg
xor
sti
pop
xchg
das
inc
mov
movs
xlat
xchg
popf
in
sub
icebp
xchg
loopne
int3
clc
fiadd
test
test
jle
dec
add
lock
pop
imul
and
push
stos
xor
pop
push
iret
das
shr
inc
xor
adc
arpl
call
iret
adc
or
or
fsub
cs
jbe
sub
cmp
ss
jbe
fst
inc
dec
imul
sbb
outs
mov
lods
pop
jno
sbb
call
ds
ret
pusha
aad
sbb
mov
js
loope
push
cwde
pop
lea
icebp
nop
daa
das
out
lods
add
into
rcr
popf
out
mov
jb
sub
div
sub
(bad)
and
push
pop
sahf
jbe
aas
bound
xchg
mov
and
lods
mov
mov
arpl
ror
inc
and
cmc
inc
loopne
sbb
aaa
data16
clc
loopne
jg
loopne
or
rol
jge
test
dec
adc
jno
pop
les
pop
pop
call
mov
mov
js
test
mov
ds
cli
icebp
xchg
jp
iret
dec
adc
xor
xchg
fistp
daa
push
fdivr
xor
repnz
mov
mov
popf
shl
push
dec
xlat
adc
iret
mov
or
mov
push
ins
fcom
pop
adc
dec
loope
push
add
xchg
xor
pop
fsubr
aas
fwait
retf
cld
jge
jmp
(bad)
mov
test
fst
pop
jno
push
mov
and
movs
mov
std
pusha
sbb
ins
push
cmp
mov
loopne
lods
inc
dec
mov
mov
mov
fdiv
scas
stos
sahf
cmp
fistp
jge
shr
lds
jo
cmp
pop
out
inc
in
push
cmp
shr
pushf
scas
scas
or
cmc
sub
mov
or
xchg
xchg
xor
push
mov
mov
shl
int
xchg
jg
cld
cmp
mov
nop
mov
movs
loop
sub
jbe
cwde
test
mov
jecxz
sub
rcl
cs
pop
xor
fidiv
mov
scas
out
push
in
ins
push
add
fcmovnbe
pop
sbb
dec
fsubr
sbb
test
dec
rcr
fisttp
push
enter
sbb
cmp
popa
sbb
pop
jmp
je
in
mov
xor
pushf
test
pop
fsubrp
(bad)
jp
test
icebp
xchg
or
mov
add
mov
fs
popa
adc
std
jg
cmp
in
outs
add
jg
mov
ds
cmp
push
push
push
fistp
pop
or
test
adc
jb
or
xor
jge
xchg
cs
movs
fsubr
xchg
and
or
push
pop
push
sbb
jge
popa
or
stos
mov
dec
sbb
dec
mov
or
loop
aad
lds
sbb
cli
xchg
stos
call
sub
fwait
sub
les
mov
cli
ret
les
test
push
pop
jle
pop
shl
mov
mov
loop
js
dec
dec
mov
mov
movs
pop
out
pop
loopne
popf
movs
fnstsw
pop
mov
bound
or
repnz
out
xor
loopne
xchg
ret
sub
adc
mov
les
xor
scas
mov
xor
outs
jp
js
xchg
or
lods
xor
or
in
mov
outs
out
and
js
jp
mov
cmp
ins
stos
lds
jno
or
test
jl
cmps
mov
mov
cmps
in
(bad)
out
icebp
scas
or
xchg
dec
sbb
lds
or
pop
inc
sahf
in
movs
pop
fisub
and
int3
shl
dec
xchg
xchg
fiadd
cmp
int3
mov
xchg
push
sub
cld
mov
add
pusha
dec
dec
enter
mov
inc
call
fstp
xlat
dec
mov
in
es
mov
jecxz
push
into
mov
pop
mov
das
cli
arpl
sub
push
mov
inc
xchg
mov
loop
and
mov
enter
mov
cld
retf
test
std
imul
sti
in
xchg
inc
pop
adc
pop
sub
cmp
pop
sub
jl
and
xchg
add
xor
stos
pop
or
sub
hlt
hlt
xchg
ja
test
lods
pushf
mov
pop
sti
mov
retf
lock
dec
loop
push
arpl
mov
pop
mov
les
sti
cs
pop
pop
popa
push
fcomp
inc
jbe
xchg
inc
int3
cmps
fimul
in
inc
sbb
xchg
jo
(bad)
sub
or
jp
sbb
(bad)
pop
xchg
rcr
rol
imul
cmc
or
paddusb
mov
pop
sbb
sbb
adc
adc
shl
mov
push
ds
cmp
cmps
push
retf
xor
psrld
add
or
mov
in
mov
addr16
(bad)
sub
xchg
or
sub
scas
mov
pusha
scas
sub
jge
(bad)
sti
mov
push
sti
das
ret
push
cli
push
inc
push
(bad)
xchg
shl
adc
inc
stos
inc
sub
mov
ret
sbb
stos
xchg
fidivr
sub
xchg
sti
mov
pop
mov
dec
test
call
pop
xor
push
sbb
or
repz
ret
aam
into
sub
into
adc
cmp
mov
ret
dec
test
fisubr
mov
mov
xlat
xchg
sub
out
jo
in
les
jo
mov
or
bound
push
or
mov
sbb
pop
cmp
or
inc
or
and
in
div
or
pop
ret
rcl
popf
jl
push
les
lahf
sbb
xchg
dec
les
or
jg
stos
and
fcmovb
push
or
cmp
fidivr
mov
sub
test
mov
pop
test
inc
pop
(bad)
cdq
inc
jle
jo
arpl
jbe
test
mov
div
mov
scas
inc
adc
sub
dec
fsubr
or
rcr
int
add
cmp
(bad)
test
(bad)
dec
lahf
push
sbb
fcmovnb
rcl
xchg
pop
xlat
jns
shl
xor
push
cmc
ror
add
adc
std
pop
ret
mov
cmp
mov
adc
js
xchg
gs
aad
mov
shl
out
jae
into
daa
pop
xchg
mov
jp
and
or
sbb
or
cs
leave
adc
into
outs
pusha
mov
addr16
fmul
or
repz
push
add
pop
jne
call
popf
cld
cld
mov
dec
or
jbe
ss
cmps
std
or
shl
mov
ficom
dec
sbb
inc
shl
ins
rcl
mov
mov
gs
or
push
dec
hlt
cmp
mov
mov
stos
lahf
js
mov
ss
hlt
imul
out
icebp
push
sbb
and
je
loope
(bad)
xchg
inc
mov
push
ja
cs
clc
push
lds
pop
loope
jbe
mov
adc
and
paddd
int
rcl
sbb
lahf
fisub
lods
mov
mov
sub
sbb
and
sub
jns
jl
ja
sbb
aam
jmp
cs
in
adc
jo
mov
jp
je
push
mov
pop
retf
(bad)
repnz
and
lea
mov
and
mov
fcomp
imul
push
addr16
iret
xchg
adc
(bad)
stc
mov
in
push
test
xor
or
cmp
mov
sub
out
cmps
and
pop
test
push
imul
call
inc
xchg
mul
push
call
adc
inc
xchg
xchg
cmp
pop
out
sbb
mov
adc
and
push
pop
out
mov
cwde
call
ret
mov
mov
inc
es
fisub
fistp
adc
clc
popa
push
mov
fisub
push
sar
call
sub
mul
addr16
loop
push
sub
fwait
mov
and
in
xchg
int
xlat
in
xchg
sbb
outs
in
sar
push
ja
adc
fcmove
pop
nop
cmp
outs
es
(bad)
mov
add
inc
ds
sbb
xchg
(bad)
mov
jb
sub
out
sub
shrd
inc
pop
pcmpgtw
dec
sub
inc
out
jge
rcr
mov
cmp
or
xor
dec
lea
or
jecxz
and
(bad)
cmps
shr
nop
enter
mov
dec
outs
ror
jo
xlat
ret
dec
fld
outs
mov
add
pop
mov
mov
lock
cmp
hlt
add
daa
pusha
pop
mov
mov
rol
sub
sub
cmp
loop
or
dec
cmp
ss
sahf
lods
pop
sub
cmp
mov
cmp
cmp
sub
imul
shl
jbe
pop
out
mov
leave
(bad)
jne
gs
(bad)
cld
in
xor
and
rcr
test
dec
jo
jno
cmp
xchg
fcmovnbe
dec
mov
ss
addr16
cmp
jecxz
push
pop
jae
shr
iret
xlat
sbb
popa
shl
sbb
inc
mov
mov
add
lods
or
jbe
test
scas
jb
das
xchg
mov
loope
inc
mov
in
dec
pop
sub
xor
mov
sahf
xchg
sbb
pop
sbb
lea
mov
test
popa
lahf
adc
fbstp
stos
sub
ficomp
push
push
stc
push
and
movs
test
ins
and
jmp
arpl
xchg
dec
sti
mov
nop
mov
xor
shr
sbb
xlat
mov
push
push
or
cmp
cmc
(bad)
or
js
shl
aaa
mov
popf
jmp
push
cmp
cmp
dec
inc
xor
pop
xchg
cli
or
test
dec
or
pop
lea
or
imul
fdivr
retf
jp
sbb
je
mov
and
mov
(bad)
cmp
inc
adc
mov
outs
pop
sub
fidivr
psubd
xchg
retf
inc
cmp
add
arpl
xchg
test
div
and
mov
iret
xchg
sub
jbe
fisub
mov
outs
mov
sub
movs
sbb
js
or
mov
pop
or
movs
das
pop
push
call
sub
dec
fstp
mov
push
sti
jnp
add
cmc
inc
mov
addr16
push
in
clc
xchg
retf
pop
cld
add
cs
add
add
ins
mov
mov
xchg
mov
js
jp
test
sti
movs
aam
rcr
push
aaa
xchg
jmp
out
in
ret
mov
popf
loope
loope
dec
fisubr
aam
or
outs
xor
mov
jge
loope
cmp
mov
and
jns
cld
dec
mov
enter
out
adc
(bad)
lods
sub
and
or
out
retf
and
sbb
inc
ror
push
sbb
mov
jb
inc
mov
jg
pop
mov
pop
stc
clc
cmp
cwde
loop
push
test
xchg
loope
jns
sub
adc
jmp
test
cmc
mov
dec
push
sbb
hlt
pop
imul
jo
pop
and
fadd
inc
adc
push
mov
loop
(bad)
aam
xlat
(bad)
ins
push
pop
dec
(bad)
push
mov
test
aam
xlat
adc
push
lea
lea
cmp
stos
jle
jae
sbb
nop
sahf
jle
fs
pop
(bad)
jbe
clc
hlt
lds
mov
sbb
(bad)
jnp
mov
and
pop
sbb
adc
push
bound
repz
popw
dec
out
fwait
cwde
push
sub
dec
scas
retf
and
(bad)
mov
lahf
jle
dec
(bad)
lods
and
jns
inc
out
popa
and
jecxz
clc
sbb
icebp
(bad)
jae
pop
out
je
xchg
ja
and
leave
ret
jl
mov
shl
imul
jecxz
xor
push
or
xchg
add
outs
mov
out
jmp
jae
cmps
pop
inc
fsin
xchg
ret
mov
sahf
lods
mov
push
cmps
adc
sbb
add
sbb
add
xchg
dec
out
mov
adc
mov
es
ret
mov
sbb
sbb
fs
adc
in
shl
sbb
add
push
lock
pushf
mov
(bad)
pmulhw
icebp
outs
mov
jnp
jge
push
popf
mov
add
imul
cwde
iret
xchg
in
mov
lahf
push
xor
addr16
outs
push
aaa
xchg
push
push
aas
or
(bad)
lods
sub
or
xchg
loopne
push
addr16
leave
test
sbb
mov
outs
sahf
add
nop
mov
sub
mov
inc
inc
retf
and
nop
push
lock
dec
and
xor
ins
or
fs
jge
sbb
movs
js
mov
call
test
cwde
pop
lahf
push
mov
push
dec
xchg
lods
sar
mov
pop
jle
pop
push
movs
sbb
je
sub
inc
pop
dec
xchg
out
sub
mov
push
icebp
sbb
lods
rol
(bad)
adc
outs
cmp
sbb
leave
mov
sbb
scas
dec
cmp
inc
lods
iret
xor
adc
not
xor
pop
mov
hlt
js
mov
rol
xor
shr
sti
mov
mov
cmps
mov
ss
mov
fdivr
das
adc
add
int
sub
daa
pop
(bad)
or
fsubr
dec
in
xor
xor
mov
xchg
cmc
xor
cwde
jecxz
ja
into
jecxz
sbb
mov
jg
xchg
or
loopne
jl
dec
mov
inc
ficomp
sbb
adc
mov
pop
test
mov
xchg
fst
add
and
xchg
les
add
xor
out
inc
rcl
mov
push
or
icebp
movs
test
push
mov
sbb
addr16
mov
jle
stos
in
adc
jle
test
sbb
sub
mov
jg
sbb
pushf
mov
jp
ret
jge
mov
and
clc
xor
in
jae
pop
aaa
fnstenv
sbb
dec
mov
jae
popa
in
dec
mov
and
jg
bound
lahf
ret
push
pop
mov
gs
jne
fwait
lods
add
popa
and
out
iret
cmp
in
mov
add
out
cmp
jmp
dec
adc
rcr
dec
and
aaa
and
ret
dec
inc
cmp
xor
jns
xchg
xor
dec
enter
popa
aaa
in
test
(bad)
iret
scas
repnz
jbe
pushf
and
(bad)
jmp
mov
data16
push
dec
stos
loopne
push
jmp
ja
dec
repnz
cmp
add
sbb
movs
xor
popf
retf
daa
inc
fild
push
dec
push
sub
call
mov
or
sub
adc
or
or
imul
fnsave
retf
jge
nop
enter
cmps
rol
repz
jo
or
or
sub
push
jmp
cmp
fld
loop
xchg
jl
xor
cmps
dec
xchg
shl
sti
pop
sar
shr
imul
cmp
jl
scas
and
in
jg
ret
dec
rcl
out
xlat
xor
in
dec
jns
imul
iret
adc
xchg
add
jns
fidivr
repnz
xor
or
push
pusha
enter
fiadd
(bad)
jbe
jge
cmp
add
ins
pop
cli
ss
pusha
pop
inc
push
outs
js
sahf
rcr
icebp
cmp
pop
pop
fdiv
mov
cmp
cmp
stc
ss
add
icebp
loop
(bad)
sub
cmp
lea
or
outs
ss
xor
loopne
or
sti
xchg
aaa
pop
jns
int3
bound
pushf
inc
std
ds
jae
int3
loopne
dec
cdq
pop
xchg
mov
lock
test
(bad)
fst
shr
out
push
mov
mov
mov
xchg
jle
(bad)
add
jne
popa
cmps
jne
loop
mov
hlt
xchg
mov
and
outs
pop
dec
movs
and
pop
jmp
jge
out
push
inc
inc
or
xchg
int
dec
dec
jns
cmp
sbb
out
mov
sub
pop
or
add
inc
call
cwde
dec
pusha
mov
cmps
cs
imul
dec
mov
or
xchg
jmp
xlat
stc
and
jne
sub
cmp
xor
ins
mov
scas
scas
or
push
cmp
xchg
inc
leave
inc
lock
jl
mov
cmc
movs
cdq
pusha
hlt
dec
out
in
push
test
mov
sbb
cmp
ds
lods
dec
sub
inc
xchg
or
retf
sbb
inc
sub
bound
movs
jp
aad
div
adc
aaa
cmp
dec
adc
(bad)
icebp
aas
dec
call
cmp
out
jmp
push
dec
mov
test
cld
mov
jg
rol
sub
lahf
faddp
arpl
push
push
cmp
gs
mov
mov
push
xchg
mov
mov
popf
retf
ror
push
jmp
jae
inc
xchg
pushf
fistp
jne
jmp
outs
movs
xlat
push
lods
cmp
lods
cli
movs
cmp
in
push
test
aaa
xlat
(bad)
sti
pop
add
(bad)
inc
stos
jle
xchg
add
sub
scas
fs
mov
xor
sahf
adc
sar
(bad)
push
pop
push
in
shr
out
cmp
mov
lods
ins
pusha
lea
xor
jmp
cmp
jp
xchg
jecxz
lods
mov
xchg
int
fs
mov
and
in
jb
jl
in
dec
(bad)
cld
les
clc
mov
push
sub
and
retf
retf
(bad)
lock
xor
(bad)
sti
add
or
pop
test
inc
fiadd
pop
fidivr
jge
int3
xor
jp
mov
loopne
xor
inc
call
mov
inc
inc
int3
sbb
lods
xor
xchg
and
or
or
inc
and
fwait
lahf
fwait
inc
enter
add
mov
stos
mov
pop
dec
ds
sbb
ja
pop
ds
ficomp
mov
sub
sti
stos
mov
cmp
mov
leave
xchg
rol
mov
inc
inc
mov
cwde
and
sub
dec
mov
push
lds
mov
pop
fnstcw
popa
xor
stos
in
push
pop
and
xlat
push
dec
add
jle
retf
stc
or
lea
xchg
push
daa
movs
or
add
cmps
mov
sbb
sub
cmp
in
and
gs
cmp
and
jnp
xchg
in
fdiv
jge
mov
jns
pop
dec
jne
pusha
mov
jnp
stos
comiss
jl
pop
retf
sbb
sub
sahf
repnz
pop
(bad)
mov
fldcw
mov
lock
mov
sub
je
outs
gs
scas
(bad)
and
jecxz
shl
cmps
push
sbb
adc
inc
push
add
fcmovnbe
jle
cmps
and
xchg
imul
std
stos
lock
pop
cmc
stos
jmp
test
rcl
inc
aad
fiadd
push
rcr
mov
ja
fcom
jns
jae
add
(bad)
out
push
and
cli
test
sar
or
rol
out
xchg
sub
adc
repz
repnz
mov
cmp
xchg
mov
mov
mov
xor
arpl
mov
adc
mov
dec
scas
mov
mov
mov
je
inc
jno
enter
ret
mov
inc
(bad)
push
pushf
cmovb
xchg
push
out
jb
add
push
call
shr
movs
(bad)
jg
xor
lea
adc
inc
cmp
or
xchg
stos
test
fimul
pop
jmp
add
loop
aas
jne
and
es
cmp
test
repz
ja
xlat
jbe
int3
push
jecxz
mov
movs
psubusw
push
or
cmp
mov
adc
sbb
jbe
(bad)
stos
les
in
jp
sahf
sti
pop
ins
cmp
adc
inc
in
push
push
inc
inc
or
fiadd
add
mov
std
enter
and
push
imul
cmp
or
mov
push
jbe
cmp
sub
mov
aad
inc
loopne
push
ret
cmp
addr16
dec
rep
cmps
repz
pop
or
mov
jnp
in
jge
fild
mov
lods
dec
icebp
int3
push
pop
mov
retf
pop
popa
js
sbb
mov
mov
sub
xchg
or
adc
cwde
and
cmc
push
lea
movs
dec
icebp
arpl
push
push
mov
pop
fisttp
and
ret
push
pop
retf
pop
jg
mov
ja
stc
xor
aas
cmp
shl
mov
in
imul
leave
je
rcl
arpl
push
inc
mov
pop
imul
and
ds
popa
push
xadd
mov
cmp
(bad)
xchg
or
lock
pop
and
sbb
push
out
js
(bad)
shr
aam
stc
xchg
sbb
pop
lahf
cmps
popf
movs
xchg
inc
jb
inc
add
jp
cld
fistp
cbw
xchg
jne
jp
enter
pop
jle
cmc
retf
and
jmp
pop
sbb
repnz
xor
fs
ins
test
cmp
pop
and
push
push
es
pop
mov
dec
adc
(bad)
sbb
(bad)
iret
add
xchg
in
cli
out
icebp
mov
mov
gs
mov
sbb
pop
jecxz
outs
jno
test
outs
sbb
inc
push
test
xor
and
xchg
mov
adc
icebp
test
jle
ror
mov
daa
jg
or
pop
jg
mov
mov
adc
sub
adc
inc
or
inc
jmp
jmp
icebp
or
data16
out
scas
mov
neg
out
inc
add
pop
ror
test
mov
out
dec
mov
ds
sub
mov
inc
ret
xchg
sub
and
and
movs
aad
rcr
cmovs
mov
inc
out
xchg
shr
inc
push
mov
lods
pop
sbb
test
les
lds
std
into
and
lods
fidiv
pop
cmps
jle
sub
mov
bound
loopne
and
pushf
cmp
popf
out
retf
mov
cmp
fidivr
pop
shl
and
aaa
adc
sbb
nop
pop
js
push
fs
not
pop
lods
cmps
pop
mul
and
adc
ins
loop
cdq
adc
outs
dec
xchg
adc
rcr
fsubr
add
ins
aad
in
cmc
or
or
ret
fldenv
jae
pop
xchg
and
push
dec
fwait
push
loopne
test
mov
lock
js
xor
pop
jb
pop
aas
push
xor
jns
nop
les
jle
adc
sti
push
into
loope
clc
enter
repz
mov
test
test
push
cmp
cmp
cmps
mov
jbe
stc
std
pushf
mov
jmp
ror
mov
cmps
jbe
fcmovnbe
test
mov
daa
test
mov
add
cld
xchg
mov
mov
jle
inc
aad
xor
aam
pop
fwait
in
popf
jmp
cmps
add
cld
sbb
jg
mov
lock
lds
jmp
add
xor
mov
xor
or
add
and
sub
and
ins
add
add
jle
icebp
adc
sub
fs
mov
push
cmps
or
shr
call
lea
out
dec
fptan
mov
mov
iret
pop
ficom
out
outs
shl
aad
inc
mov
add
(bad)
clc
iret
test
mov
stos
mov
stos
push
mov
je
dec
popa
(bad)
cmp
xchg
push
push
inc
xchg
test
iret
sar
or
sub
xchg
sti
sbb
cmp
cli
push
hlt
icebp
not
push
and
cld
test
inc
in
xlat
test
mov
mov
call
push
push
out
or
fcom
pop
movs
push
xchg
pop
dec
adc
pop
push
popa
sub
inc
fnstcw
ret
jb
mov
in
retf
out
cld
mov
retf
sub
push
aad
mov
or
out
fadd
push
add
sbb
sub
call
cmps
sub
es
fadd
loope
sar
aad
sbb
xor
stos
leave
and
loop
adc
pop
or
mov
xor
ja
stos
xchg
pop
add
sub
(bad)
pop
pushf
xor
in
jmp
jecxz
inc
cli
scas
sar
inc
mov
repz
mov
or
add
xchg
sbb
call
daa
test
hlt
inc
mov
aam
push
aam
in
and
repz
stos
arpl
call
lds
sub
pushf
shr
cld
mov
add
xchg
dec
mov
ret
dec
jnp
scas
popf
pop
dec
or
in
mov
movs
lds
aaa
mov
inc
popa
jle
pop
hlt
mov
pop
pop
shr
add
cmp
pop
out
(bad)
push
adc
jg
sub
scas
in
add
outs
cmp
int
mov
cld
cmps
sbb
dec
(bad)
fsub
loopne
(bad)
mov
xchg
lods
cmp
arpl
cmp
or
retf
push
pop
jbe
arpl
pop
pop
test
mov
sbb
arpl
cmc
imul
sub
into
fimul
mov
dec
pop
xchg
movs
lods
xor
push
dec
daa
inc
sbb
ss
aad
and
call
push
xor
push
mov
pop
ret
stos
inc
jae
add
mov
xor
outs
test
xchg
ds
pushf
xchg
pusha
or
imul
bound
xor
push
pop
cmp
ja
sbb
jmp
not
cwde
stos
int
movs
test
xchg
push
pop
push
adc
pop
sbb
stc
inc
jmp
pusha
pop
and
cmp
dec
cmp
test
neg
push
or
mov
daa
cmp
stos
into
mov
(bad)
movs
jp
xchg
mov
sub
push
and
movs
mov
jl
push
in
cdq
mov
jnp
pop
repnz
outs
push
mov
lock
in
(bad)
fdivp
scas
out
xchg
or
jno
xor
dec
int3
rol
stos
ja
bnd
std
and
test
cld
sti
cmc
mov
xchg
shr
lods
sub
fdivr
dec
pop
mov
in
(bad)
mov
push
call
(bad)
lahf
xor
pop
jge
bound
push
xor
data16
das
scas
int
loope
gs
in
xor
fimul
out
inc
ficom
jbe
shr
fwait
sbb
xor
scas
mov
adc
enter
nop
xchg
loope
hlt
ins
jge
dec
jg
jbe
sti
jb
add
mov
inc
imul
sbb
jmp
iret
adc
sbb
push
test
sahf
jns
rol
imul
sar
dec
mov
inc
dec
lahf
jl
jl
test
(bad)
mov
add
push
pushf
xchg
push
lods
lea
cmps
pop
and
gs
mov
push
pop
(bad)
adc
test
daa
inc
movs
and
or
xchg
mov
xor
icebp
sahf
pop
sbb
push
sti
pop
bound
frstor
cld
adc
add
cwde
loop
or
xor
into
jmp
outs
(bad)
adc
cmp
ins
fs
pop
pop
push
imul
pop
mov
popa
std
sahf
mov
loopne
movs
leave
rol
push
xchg
stc
jmp
and
push
neg
add
ins
push
fadd
mov
fisttp
rcr
inc
push
add
or
push
addr16
aas
and
fisttp
adc
fiadd
jb
cmp
sub
out
mov
or
call
pushf
inc
add
arpl
fwait
inc
mov
retf
inc
hlt
inc
fld
mov
clc
inc
out
inc
adc
pop
ffree
movs
mov
add
loope
push
int
push
sub
push
ds
les
mov
adc
push
push
shl
frndint
jp
out
cmp
mov
jge
mov
xor
sub
inc
push
sti
xchg
pop
scas
test
retf
scas
mov
sub
mov
(bad)
adc
div
and
mov
mov
(bad)
xor
outs
imul
cmps
(bad)
add
out
mov
fnstenv
mov
ret
jo
loope
add
sar
daa
out
mov
dec
data16
or
sub
aas
adc
lds
rcr
xor
shr
inc
icebp
mov
sbb
xor
push
add
pop
mov
jo
lahf
dec
pop
mov
fs
or
push
sbb
lods
sar
das
pop
sbb
mov
aad
and
std
pop
mov
push
cmp
push
dec
or
dec
inc
pushf
int3
lock
mov
hlt
int
xor
adc
mov
and
idiv
daa
cmc
cmp
cmc
mov
jge
and
and
(bad)
fdiv
and
push
(bad)
adc
shr
cmp
pop
gs
out
mov
popa
(bad)
pop
mov
push
or
inc
push
xchg
mov
aam
xor
xor
daa
sbb
sub
sub
xor
ror
fdiv
int3
test
pop
add
mov
jg
fs
mov
in
cmp
xor
fsubr
lea
xor
mov
mov
retf
xchg
cmp
repnz
ret
pop
mov
xor
int3
pop
sti
sti
dec
in
es
push
push
xor
mov
jmp
mov
or
test
ret
ss
imul
inc
push
jnp
aas
popa
lods
movs
add
fidiv
fwait
lods
inc
push
sbb
sub
call
sub
clc
xor
stos
addr16
pop
mov
mov
retf
push
or
popa
aam
jg
or
cli
mov
add
shl
paddsw
leave
adc
aam
sub
fadd
leave
mov
rcl
inc
out
pushf
cmc
xchg
mov
sbb
imul
jmp
or
jo
int3
fisttp
cmps
pop
cmps
jnp
loop
sbb
call
push
pushf
ins
pop
imul
dec
(bad)
xchg
ror
sbb
pop
cmp
fisub
call
inc
push
sub
mov
push
aam
fisubr
sar
xor
dec
(bad)
in
int
pushf
xor
dec
(bad)
out
ss
cmp
dec
ret
mov
mov
mov
cli
dec
adc
xlat
mov
mov
data16
(bad)
or
repnz
sbb
mov
jg
fcmovnbe
sub
pop
push
aas
das
pop
pusha
outs
dec
scas
xchg
push
mov
(bad)
adc
(bad)
into
call
dec
and
mov
push
retf
jb
pop
pushw
test
pop
(bad)
scas
imul
mov
loop
dec
xchg
scas
retf
das
or
mov
push
mov
jno
or
cmp
xchg
ficom
mov
fabs
mov
fbstp
mov
push
test
or
inc
or
or
push
push
cmp
mov
cwde
xchg
aaa
movs
pop
scas
repz
xchg
cmc
icebp
jne
jne
ja
sub
popf
dec
(bad)
and
jg
ret
dec
push
inc
(bad)
ja
jb
or
sub
xchg
cmps
mov
sub
xchg
mov
mov
add
je
pop
sbb
or
and
xor
jge
cmp
jp
std
sbb
jl
jb
and
out
adc
ds
adc
retf
or
in
cmps
into
ja
lahf
icebp
jecxz
iret
(bad)
dec
mov
(bad)
sub
sub
and
nop
in
scas
repz
das
ret
pop
xor
or
rcl
sub
pop
pop
cdq
stos
lods
and
mov
jg
cmp
cmp
push
hlt
test
jne
ss
dec
(bad)
int3
loope
push
pop
shl
out
and
sub
es
je
cs
push
sbb
mov
test
mov
xchg
xchg
push
icebp
add
mov
xchg
enter
xchg
inc
add
sbb
add
int
shl
mov
pop
cmp
and
enter
ret
mov
in
rcr
shl
xchg
jbe
ins
dec
ret
sbb
push
dec
movs
aad
jae
sub
inc
mov
dec
ins
sub
sbb
std
add
stos
lods
mov
xor
sub
push
das
sub
push
adc
mov
push
movs
sti
and
pop
jg
sbb
mov
jl
call
in
add
xor
pusha
xchg
adc
aaa
iret
mov
jb
and
cli
retf
(bad)
movs
push
pop
mov
pop
mov
inc
xlat
repz
push
inc
ins
mov
mov
fmul
into
sub
sbb
push
inc
fidiv
mov
outs
pop
out
std
mov
sub
fld
mov
imul
cs
lods
fdivr
les
mov
pop
dec
arpl
bound
test
jne
scas
loopne
xchg
pop
and
pusha
mov
or
test
bound
mov
add
push
push
loope
call
jle
jmp
sbb
inc
sbb
push
hlt
(bad)
adc
push
mov
mov
(bad)
or
inc
pop
clc
xchg
mov
imul
add
mov
pop
lea
imul
xor
mov
mov
out
cmp
mov
inc
pop
and
sbb
pop
jne
es
ret
fsub
adc
lea
lods
movs
jae
call
mov
jg
aaa
(bad)
adc
mov
xor
sbb
pop
mov
test
or
push
jp
adc
sbb
cmps
stos
sbb
(bad)
mov
lahf
mov
sbb
pop
out
das
jnp
add
cwde
xchg
or
out
call
jae
loope
jp
scas
jns
jno
repz
scas
jge
mov
add
mov
int3
mov
xor
fs
add
sub
jg
outs
les
repnz
mov
pop
adc
mov
xchg
(bad)
fdiv
lahf
adc
cmp
fsub
sbb
sbb
dec
(bad)
scas
sbb
xlat
xchg
dec
jg
jbe
jb
mov
inc
arpl
in
sbb
scas
lock
jle
mov
mov
cmc
cmp
call
out
mov
ins
push
ficom
into
in
sti
outs
sbb
mov
pusha
inc
test
xchg
lds
clc
sub
pop
or
dec
bound
and
shr
and
push
aaa
pop
ins
jl
add
adc
cld
dec
adc
cmc
jge
add
and
jecxz
cwde
jg
outs
push
arpl
pmaxub
fwait
cmp
push
out
setg
cli
(bad)
stos
cmc
lods
aas
xor
scas
sbb
add
mov
and
cli
aam
sub
sbb
jmp
mov
inc
xor
fcmove
leave
(bad)
test
mov
adc
stos
xor
shl
dec
pusha
cli
cmp
jb
jmp
push
arpl
pop
push
mov
js
ins
call
pop
xchg
sbb
cmps
dec
adc
repz
mov
pop
sbb
test
sbb
fst
inc
pop
push
mov
mov
add
pop
pop
mov
sbb
jno
in
or
and
cmp
pop
int
jmp
sar
pop
sub
sbb
dec
pop
arpl
xlat
jns
sub
and
sub
sti
sar
clc
in
mov
sub
xchg
add
cdq
mov
(bad)
push
cmp
inc
sbb
dec
jne
rol
repnz
jmp
cmovo
jmp
xchg
jg
cdq
lds
sbb
stc
add
xchg
adc
into
add
enter
call
push
fldcw
cmp
mov
aad
pop
push
add
xchg
js
hlt
pop
std
mov
movs
mov
jle
cld
sahf
fstp
popf
movs
xchg
addr16
mov
inc
mov
leave
push
cmp
mov
call
sbb
add
shr
xchg
jg
(bad)
(bad)
pop
push
dec
xchg
fiadd
push
lahf
int
ja
mov
test
ret
out
mov
add
sbb
in
jmp
cs
mov
out
mov
sbb
outs
test
pop
dec
cld
sub
adc
aaa
ja
aad
inc
fistp
add
and
jno
call
mov
dec
clc
jle
mov
test
sbb
into
mov
aas
add
or
jmp
int3
dec
mov
sub
inc
or
push
or
xchg
mov
or
and
rol
lahf
sbb
div
cmps
fptan
and
sbb
nop
pop
fnsave
out
cdq
in
push
push
stos
jmp
ret
mov
sub
out
ja
xor
repnz
ror
add
fistp
sub
mov
jns
test
jecxz
stc
ds
fdiv
mov
push
add
inc
jmp
sub
cmp
push
xchg
shr
fbld
mov
data16
sbb
sbb
iret
setno
inc
popaw
in
pop
adc
jae
rol
popf
int
push
xor
push
xchg
push
les
fnstsw
mov
sub
imul
ret
test
popf
adc
add
into
imul
push
test
imul
clc
sbb
pop
lods
sahf
enter
fs
dec
mov
bound
fidiv
or
adc
test
ins
jno
jle
and
xchg
add
push
cmps
cwde
jnp
(bad)
in
(bad)
les
mov
xlat
sbb
or
scas
or
inc
pushf
dec
jno
add
xchg
dec
pop
aad
(bad)
and
dec
loope
sub
imul
push
xchg
and
into
fsubrp
mov
xchg
mov
xchg
sub
or
add
push
sub
stos
js
(bad)
shr
pop
dec
push
push
lds
fs
adc
or
pop
adc
cmps
mov
push
out
push
in
scas
mov
add
mov
cmp
(bad)
sub
or
push
test
pop
movs
jns
push
inc
xchg
sub
jno
push
adc
dec
and
mov
push
sbb
mov
push
cli
call
addr16
(bad)
std
add
rcr
out
in
and
out
in
shl
test
(bad)
daa
mov
dec
mov
ins
pop
xchg
cmp
addr16
mov
push
push
movs
and
jb
jnp
adc
inc
jae
push
adc
mov
rol
in
enter
jbe
jno
sbb
cmp
jo
inc
add
shl
test
test
cmc
inc
iret
outs
sub
iret
xchg
pop
xchg
xor
mov
pushf
stos
and
cmp
retf
rol
cmp
mov
xlat
bound
ret
adc
inc
add
rcl
push
xchg
int3
mov
push
(bad)
(bad)
je
xchg
test
sbb
dec
add
add
inc
and
xchg
(bad)
xlat
stos
push
loope
fucomi
xor
(bad)
xchg
retw
add
lea
jmp
inc
repz
repnz
sbb
and
loope
pop
ins
cmp
mov
mov
rol
push
adc
rcl
mov
mov
pop
mov
xor
shr
dec
sub
sbb
mov
adc
std
mov
icebp
pop
dec
push
dec
jns
jmp
stos
push
and
inc
pushf
aaa
inc
or
cmc
popf
cmp
dec
xchg
adc
pop
push
xchg
scas
xchg
xchg
inc
add
pop
jg
(bad)
mov
inc
xor
cwde
enter
aaa
jns
jmp
pop
imul
scas
aad
das
lods
fild
dec
fsubr
dec
loope
fst
or
sar
in
xlat
mov
add
shr
pop
push
mov
ss
adc
jmp
add
sub
dec
and
addr16
push
or
lock
dec
lds
aam
outs
add
mov
sub
add
imul
mov
rol
or
pusha
ja
rcr
ret
xchg
adc
xor
inc
ins
or
dec
sbb
rcl
gs
adc
mov
sbb
jg
push
sub
mov
test
push
stos
loopne
test
and
fwait
dec
jnp
mov
stos
or
loope
sub
ja
fsubr
out
fsubr
xor
movs
iret
dec
fiadd
jmp
pop
mov
sti
jmp
xchg
sbb
cli
pop
ret
add
pop
cmps
push
(bad)
and
xor
fdiv
sub
loope
add
cli
cmp
imul
mov
sub
dec
push
in
jne
lods
(bad)
bswap
out
in
inc
mov
pop
jno
(bad)
push
shl
sub
call
push
int
fsubr
dec
pushf
push
and
sbb
sub
inc
push
sbb
test
pop
pop
inc
mov
adc
stos
es
outs
cs
out
mov
in
xlat
test
lods
(bad)
fwait
push
retf
sbb
rol
lds
ffreep
dec
xchg
movs
xchg
cmps
add
(bad)
sub
sbb
mov
cld
gs
test
and
dec
das
and
cmp
repnz
das
jp
movs
jne
mov
and
push
jge
jb
movs
fmul
jmp
js
jns
sti
xchg
cmps
push
fnstenv
lods
into
jl
push
xor
pusha
adc
imul
popf
dec
fstp
arpl
(bad)
arpl
out
or
aam
sar
jmp
sub
xchg
ret
ret
mov
cmp
pop
aad
mov
imul
inc
stos
sar
repz
test
push
je
jo
or
jmp
mov
cdq
adc
daa
(bad)
stos
mov
ret
push
add
(bad)
int
pop
pop
cmc
fld
stos
imul
scas
adc
xor
xchg
sbb
jecxz
ret
mov
(bad)
sahf
add
add
and
and
addr16
ret
pop
stos
cmps
xor
jbe
or
mov
and
xchg
push
retf
mul
push
out
aad
inc
pcmpeqb
test
sahf
fiadd
stos
movs
lods
jno
jne
(bad)
out
sub
js
adc
std
cmp
mov
repz
out
mov
int3
fnstsw
add
std
pop
rol
sbb
test
mov
jnp
cmp
cld
ret
(bad)
mov
mov
(bad)
ss
repz
sbb
dec
cdq
je
sub
nop
mov
out
mov
aam
xchg
sahf
sti
add
lea
pop
xor
mov
retf
and
push
jl
jbe
jmp
arpl
fcomi
hlt
and
outs
add
or
mov
jae
pop
sub
into
aas
jo
(bad)
(bad)
mov
sbb
(bad)
fistp
jp
xchg
ins
mov
imul
push
loop
repz
scas
icebp
mov
and
or
mov
mov
mov
arpl
pop
jnp
cmc
clc
fdivr
jbe
xor
fbstp
jns
aas
push
adc
dec
loopne
cmp
jno
mov
jecxz
in
xchg
aaa
pop
mov
xor
ficomp
retf
cmp
jns
mov
add
jnp
lock
ss
mov
mov
stc
pop
pop
stos
sar
call
repz
sub
icebp
and
fs
repz
arpl
pop
or
clc
arpl
jno
xchg
push
ror
or
ja
jl
mov
fimul
cwde
mov
cmp
sub
loope
enter
mov
ficomp
js
or
xchg
(bad)
sbb
fmulp
mov
arpl
ror
cmp
dec
add
leave
push
mov
mov
je
fwait
and
mov
(bad)
daa
(bad)
hlt
punpckhwd
sbb
(bad)
xor
es
pop
outs
xchg
sub
cmp
and
xchg
aaa
aam
mov
sbb
rol
ins
stos
mov
dec
movs
cmps
push
mov
arpl
mov
mov
lock
jecxz
imul
lods
jbe
inc
mov
ja
lock
push
dec
(bad)
adc
adc
and
add
call
sub
push
or
mov
ret
sbb
sbb
shl
add
sbb
cmps
enter
out
mov
sbb
lock
ja
xchg
cli
shl
or
(bad)
mov
js
xchg
mov
mov
test
out
xchg
jns
addr16
add
mov
push
loop
popf
ss
cmp
sar
push
cmp
xor
push
pop
or
or
call
mov
pusha
cwde
jno
dec
leave
imul
jbe
inc
scas
inc
cmc
mov
dec
les
mov
sub
fwait
sbb
pop
add
dec
jns
popf
mov
pop
inc
ins
lahf
jecxz
jae
(bad)
in
push
jns
push
inc
sbb
fwait
jae
imul
cmc
repnz
rcr
(bad)
int
sub
in
pusha
dec
or
xchg
sbb
out
xchg
xchg
pop
dec
leave
and
imul
dec
pop
in
retf
adc
sbb
aam
(bad)
repnz
aam
dec
xor
sahf
cmp
cmp
mov
xchg
mov
dec
jnp
push
lods
shr
test
xor
ret
out
aad
pop
and
fadd
stos
fistp
lods
jl
ret
sahf
lods
xchg
xor
fcmove
sub
pop
std
aas
push
in
jmp
mov
xchg
out
fdivp
les
xchg
cmp
jo
mov
sub
stc
jge
sub
xchg
fdivr
inc
pushf
inc
lods
adc
(bad)
loope
loope
(bad)
aas
inc
(bad)
(bad)
lods
xchg
je
ss
or
mov
pop
fcom
cmps
sti
ins
adc
call
rcl
push
out
pop
daa
mov
(bad)
or
push
pop
daa
cmps
fst
jmp
rcl
cmc
in
push
movs
dec
cmps
push
jl
push
repz
xchg
pop
fcomp
ins
aaa
ret
mov
mov
enter
out
rcl
mov
ror
mov
jnp
lods
ss
vaddps
xchg
ret
test
stos
fadd
clc
stos
gs
std
add
pusha
loopne
mov
inc
mov
and
out
xor
pushf
ficom
(bad)
and
xchg
out
call
and
(bad)
stos
lea
mov
test
mov
repnz
add
ret
jg
scas
mov
mov
sub
in
imul
sbb
xchg
sahf
dec
test
lds
xor
cs
ret
jg
cmp
xchg
push
stos
scas
push
leave
into
mov
jb
fstp
ins
xchg
mov
jle
pop
fstp
repnz
dec
xlat
push
(bad)
adc
xchg
xchg
xor
sbb
(bad)
jb
xor
adc
sub
xchg
int
mov
jp
in
scas
std
stos
inc
out
cld
inc
inc
dec
inc
loopne
mov
add
push
fsub
pop
cld
push
lea
xor
xor
hlt
cmp
mov
das
cmc
in
out
(bad)
cmps
push
sub
jmp
sbb
lds
xor
push
test
or
jae
inc
add
inc
stc
mov
ds
ds
mov
pop
mov
push
ins
ret
xchg
or
ret
push
test
sar
mov
sub
ins
push
sub
mov
add
xchg
lar
inc
sub
lods
sub
test
arpl
imul
outs
js
mov
adc
jp
jmp
rcl
hlt
lahf
pop
in
lahf
xor
call
sbb
sar
xchg
jne
lahf
xor
jecxz
inc
test
es
lods
cmp
data16
cmp
in
adc
ins
loopne
movs
cmp
rcr
dec
ins
sti
adc
mov
or
mov
out
or
mov
sub
lock
enter
sub
movs
inc
std
cli
sbb
repnz
mov
mov
ins
jge
cmp
xchg
(bad)
repz
push
fwait
xor
call
mov
out
jae
push
add
scas
jl
int3
fst
hlt
loop
pop
sub
and
pop
and
addr16
mov
dec
das
test
mov
loop
xor
dec
cmp
sbb
jno
mov
mulps
aas
retf
test
mov
pop
xchg
pop
or
repnz
(bad)
pop
shr
lods
out
ficom
mov
push
mov
sub
(bad)
sbb
pop
into
xchg
xor
sbb
dec
and
mov
and
loopne
(bad)
adc
or
inc
sbb
cmp
jl
popf
mov
pop
adc
inc
and
dec
mov
add
pop
call
(bad)
out
fisubr
ja
retf
loopne
jno
push
dec
out
fsubr
icebp
adc
call
and
add
leave
or
imul
movs
xchg
pop
jmp
movs
push
sbb
ss
in
fisub
push
in
popa
out
adc
imul
xchg
push
sbb
dec
sub
int
cmp
push
in
xchg
nop
fwait
fwait
pushf
sub
jo
(bad)
push
fwait
mov
sub
aam
iret
adc
add
(bad)
mov
xchg
sahf
mov
test
call
mov
adc
push
jg
mov
mov
lahf
push
pop
xor
sub
es
mov
jb
es
or
add
xchg
xchg
inc
idiv
or
xchg
retf
sub
popa
jmp
push
stos
push
out
cmps
sbb
mov
clc
fs
jecxz
xor
scas
das
xchg
pop
xor
jbe
ja
int
and
lea
sti
mov
mov
iret
popa
inc
push
lea
mov
es
jecxz
inc
popa
mov
out
out
push
sub
mov
popa
xor
xchg
shl
fiadd
xchg
leave
aam
sbb
or
or
mov
repnz
push
pop
ja
aas
pop
mov
jmp
xchg
sahf
adc
cmp
mov
js
cmp
(bad)
in
push
sti
mov
rcl
(bad)
(bad)
dec
mov
push
jp
imul
pop
push
jge
mov
mov
rcr
jle
mov
pushf
int
and
mov
mov
pop
jmp
mov
ret
and
addr16
jo
jmp
jb
out
mov
dec
in
push
xor
jb
dec
xchg
cmp
mov
mul
stos
inc
jnp
lods
pusha
xchg
inc
fld
adc
cdq
mov
pop
out
mov
mov
adc
pop
add
xchg
imul
stc
jmp
movs
sar
mov
xchg
jmp
push
ja
pop
mov
xor
or
cmp
adc
mov
out
outs
cmp
retf
pushf
inc
cmp
stc
mov
jbe
mov
push
cmp
and
out
cli
adc
xlat
shl
push
xchg
rol
ror
iret
xchg
jnp
repnz
les
and
pop
mov
mov
pop
mov
mul
int
outs
out
pop
inc
xchg
push
mov
sub
jmp
mov
sar
sbb
dec
dec
retfw
int
das
jge
addr16
int
fstp
inc
test
sahf
out
push
outs
jp
js
fs
mov
jbe
movs
jp
dec
(bad)
dec
imul
jle
jbe
sbb
adc
mov
mov
ins
imul
xchg
mov
shl
loopne
leave
daa
jne
or
mov
adc
(bad)
(bad)
xor
fistp
int3
test
nop
shr
jecxz
mov
mul
and
mov
das
pop
mov
loopne
push
dec
jae
push
fisubr
pushf
jmp
int
xchg
fmul
stos
and
mov
pop
xchg
mov
jne
nop
hlt
sbb
mov
mov
xchg
stos
dec
push
test
idiv
mov
cmp
or
sbb
jns
mov
xchg
mov
jae
adc
in
xor
sbb
stos
data16
jp
(bad)
loopne
xchg
push
lods
mov
pop
and
mov
daa
leave
lods
std
or
mov
cmc
montmul
cmps
add
nop
adc
stc
imul
pop
jle
repz
pop
jle
cdq
fsubr
fcomp
ins
in
sbb
dec
(bad)
loope
pusha
iret
test
call
das
or
push
(bad)
ds
(bad)
stos
adc
push
mov
imul
jbe
sub
movs
adc
inc
idiv
mov
or
push
and
lods
test
xchg
add
and
push
mov
cmp
add
fs
in
repnz
(bad)
outs
mov
jo
push
fs
cmp
sbb
or
mov
push
mov
jge
dec
cmp
aad
xchg
out
mov
cmp
js
cmp
cwde
mov
in
aad
jmp
mov
cli
add
out
dec
and
shl
pop
cmp
je
push
mov
cmp
xor
sub
fistp
neg
inc
xor
sbb
ds
xchg
mul
int3
or
sub
xor
ja
(bad)
leave
dec
imul
popf
jns
add
int
scas
in
adc
out
(bad)
pop
data16
add
mov
mov
pop
loop
icebp
cmps
mov
out
mov
cmps
add
lods
pop
icebp
fdivr
imul
mov
data16
cmp
xchg
aam
nop
pop
sub
dec
mov
mov
(bad)
xchg
test
and
mov
call
mov
shl
mov
jecxz
mov
sbb
mul
call
dec
lods
mov
adc
aam
in
pusha
call
jmp
and
icebp
fs
aam
fidiv
int3
xchg
fld
movs
and
sbb
mov
push
inc
retf
loop
ret
adc
aad
jae
mov
mov
popf
mov
and
mov
jae
push
and
movs
mov
seto
jns
mov
sub
pop
mov
icebp
push
mov
push
mov
cmp
cli
mov
scas
stc
ret
repz
iret
pop
pop
loopne
aad
mov
popa
nop
lods
arpl
les
cmp
push
ins
dec
mov
lods
sub
jg
xchg
push
push
mov
sub
add
jp
cmp
repz
jmp
adc
xor
sub
mov
dec
cmp
ja
imul
(bad)
in
rcl
mov
mov
data16
xchg
loopne
fwait
jns
scas
mov
pop
fsub
xchg
sub
mov
jmp
loopne
btr
sub
nop
xor
popw
jnp
mov
mov
and
mov
ds
push
imul
mov
lahf
mov
push
xchg
adc
test
sqrtps
repz
push
jmp
xchg
sub
push
or
jge
jg
shl
ret
jae
jns
mov
(bad)
sti
lods
nop
sub
xor
mov
jle
shr
loope
xor
mov
aam
or
adc
and
ret
inc
jno
cli
sbb
imul
pop
inc
imul
cmp
push
jmp
and
popf
add
je
cli
pop
push
ja
dec
das
add
int3
or
iret
cli
cli
iret
jne
call
dec
or
iret
in
gs
mov
daa
mov
leave
cmp
mov
out
xlat
xchg
out
xor
mov
call
mov
mov
pop
es
sub
out
inc
call
and
sbb
loop
call
cdq
pop
cdq
and
(bad)
popa
inc
cdq
arpl
inc
push
add
xchg
jp
shl
xor
cmp
les
cmc
and
cmps
cmp
cmp
mov
enter
dec
rcl
push
sub
and
out
ss
adc
push
call
adc
pusha
dec
xchg
cdq
mov
ror
jbe
fisttp
cmc
jmp
out
xchg
sahf
mov
mov
add
movs
xchg
jge
es
and
cli
daa
xor
xchg
test
mov
sub
jmp
mov
cmc
out
jno
xchg
outs
jmp
mov
jg
xchg
xor
cmp
fbstp
mov
mov
es
loopne
xor
xchg
adc
jge
cmp
inc
fcom
push
test
sti
and
fisubr
sub
pop
outs
dec
stos
sub
cwde
add
lods
mov
mov
(bad)
dec
cwde
inc
ja
inc
inc
out
ds
leave
mov
in
mov
push
dec
call
or
ret
inc
xchg
cdq
xor
push
mov
dec
lock
lea
push
sbb
inc
push
call
mov
inc
into
push
enter
cmp
or
adc
sub
sbb
pop
add
mov
jge
mov
jae
lods
retf
das
mov
ret
aad
jo
push
movs
stos
push
cmp
push
data16
setns
xor
enter
inc
repnz
mov
inc
or
sbb
sub
cmp
cmps
das
adc
cli
xchg
add
stc
int3
aam
fs
(bad)
cmps
mov
pop
ficomp
and
dec
jno
add
or
jno
inc
js
out
jg
clc
or
sbb
stos
repz
ins
jle
ret
adc
push
(bad)
sub
adc
dec
ret
(bad)
push
(bad)
lds
xchg
mov
or
mov
stos
hlt
sub
rol
int
xchg
mov
sbb
dec
shl
and
mov
adc
xchg
push
lahf
scas
push
lods
or
mov
adc
je
dec
jg
fcom
adc
inc
push
cmp
jne
test
push
mov
cmps
mov
jge
sbb
xor
inc
mov
or
mov
call
rcl
pop
xlat
ins
pop
push
cli
or
jmp
inc
sub
adc
and
scas
jge
ins
sbb
and
cmp
retf
push
xchg
push
scas
movs
inc
aam
test
test
jb
mov
int
xchg
sbb
retf
jne
js
push
add
out
xor
mov
cli
jmp
and
adc
jb
xchg
je
adc
cmp
ficomp
ds
(bad)
loopne
mov
es
into
movs
inc
inc
(bad)
cs
out
lea
inc
fcom
dec
push
pusha
dec
js
mov
rol
dec
or
es
sub
push
xlat
or
xchg
sbb
es
sahf
fidivr
dec
cmps
mov
imul
scas
inc
pop
fst
push
inc
push
std
inc
inc
cdq
lahf
inc
jmp
adc
aam
xchg
daa
icebp
jg
test
or
add
outs
inc
jge
outs
and
inc
(bad)
movd
push
jo
mov
add
or
stos
cmp
lock
enter
jns
(bad)
and
enter
xlat
(bad)
cwde
xchg
sbb
out
mov
test
cld
sbb
dec
add
push
ror
lock
out
or
call
repnz
(bad)
pop
fwait
neg
cmps
cmp
mov
int
pop
mov
add
out
mov
aas
push
ret
cdq
sbb
cmp
mov
jmp
test
popf
dec
scas
mov
inc
cli
scas
out
cmp
sub
hlt
popa
push
sub
xor
icebp
jge
mov
mov
jg
out
sub
add
jle
xlat
cli
push
mov
inc
mov
dec
out
inc
xchg
sub
in
js
aaa
pop
test
mov
ja
not
mov
add
xor
shr
test
in
mov
leave
xchg
push
(bad)
add
lds
add
xchg
mov
pop
jle
pop
daa
mov
loope
in
test
ss
cmp
sbb
push
(bad)
push
push
jmp
ss
call
bound
repz
and
or
aas
mov
das
push
fidiv
adc
fild
mov
adc
or
rcl
shl
xchg
enter
jmp
cmps
popf
jae
mov
mov
push
test
pop
addr16
sub
scas
jmp
pop
jge
(bad)
cmp
xchg
push
daa
gs
sbb
and
mov
popf
xchg
test
sti
leave
inc
adc
or
(bad)
adc
jae
jns
arpl
xlat
sbb
push
lahf
ret
leave
sub
mov
jp
repnz
(bad)
jne
push
xor
push
(bad)
fcomip
mov
lods
dec
push
fistp
sub
les
mov
out
sub
mov
loopne
xchg
enter
mov
iret
push
lods
mov
popf
(bad)
jp
push
outs
stc
dec
ss
jnp
ss
or
mov
(bad)
jne
sbb
std
push
mov
mov
pusha
jmp
sti
in
mov
adc
pusha
(bad)
pop
std
xor
xchg
aam
sbb
(bad)
and
push
bound
test
xor
cmp
push
and
inc
retf
ja
(bad)
ja
data16
mov
mov
ins
cmp
push
retf
jno
shl
dec
sbb
test
mov
or
jnp
fisttp
and
test
fiadd
rcl
or
and
push
push
push
push
sub
mov
xchg
adc
cmp
data16
xor
pop
rcr
std
adc
add
stos
in
je
pop
mov
lock
mov
push
movs
push
test
push
sub
pop
jns
pusha
loop
jmp
or
iret
inc
adc
jnp
xor
adc
outs
sbb
jp
jmp
mov
call
inc
mov
pop
push
dec
mov
add
test
repnz
pop
xchg
fimul
loopne
test
mov
dec
add
mov
in
mov
(bad)
div
sub
xchg
xchg
sbb
mov
cli
scas
dec
adc
test
jp
cmp
cmp
cmc
pop
pop
pop
add
mov
cmc
pop
or
jg
fwait
cmp
jl
ins
movs
inc
cli
addr16
jmp
in
pop
dec
rcr
cmps
xchg
jl
ret
daa
cli
adc
mov
(bad)
(bad)
retf
inc
fsubr
push
imul
es
xlat
je
cs
push
cmps
cmp
fiadd
dec
int
nop
les
jg
dec
mov
scas
fstp
add
adc
cmp
mov
pop
push
add
gs
stc
add
out
ror
fmul
xor
sbb
in
adc
in
push
xchg
push
shl
loop
adc
(bad)
jg
test
xor
adc
pop
rol
sub
mov
dec
xor
add
cmp
movs
or
mov
inc
fs
inc
or
xchg
push
les
ins
mov
call
ja
xlat
inc
mov
and
mov
and
stos
mov
aas
(bad)
sbb
daa
xchg
pop
stos
mov
push
adc
loope
xchg
sahf
mov
inc
add
aam
cld
icebp
xchg
fidivr
inc
stc
aad
or
mov
dec
or
enter
gs
in
pop
add
pop
pushf
xor
push
adc
pop
sbb
cmp
mov
in
jmp
push
into
ds
loop
jb
push
sub
add
inc
jns
jg
jbe
sub
jmp
xchg
jmp
xor
mov
mov
pop
dec
sbb
pop
add
adc
push
repnz
sbb
and
loop
cmp
das
mov
push
jbe
mov
add
enter
(bad)
addr16
sub
pop
adc
push
add
push
sub
retf
mov
ja
lea
ds
dec
sbb
jge
inc
xor
xor
js
xor
adc
add
out
dec
cmp
sbb
jecxz
xchg
xchg
mov
and
pop
call
pop
leave
xchg
out
cli
dec
pop
inc
mov
ds
int
mov
out
sub
call
pusha
or
not
add
inc
cmp
jo
pop
in
pusha
jge
lock
xchg
xchg
scas
ja
jmp
cmps
jno
push
dec
sbb
push
into
mov
mov
cmc
bound
adc
lods
(bad)
sub
arpl
test
xchg
in
push
dec
xchg
pop
out
xchg
or
call
push
pop
leave
push
cmp
inc
mov
jp
sti
cdq
add
es
ror
xchg
call
or
retf
fdiv
leave
in
or
or
pop
dec
sub
jle
mov
sbb
scas
sub
mov
xor
data16
and
stc
repz
xor
pusha
or
jne
ror
std
loope
jbe
or
retf
adc
call
aaa
sub
add
push
(bad)
dec
loop
stc
mov
or
sbb
ja
stc
push
call
out
lods
jle
dec
mov
ss
xor
mov
xor
pop
icebp
sub
(bad)
lahf
sbb
sbb
ins
mov
int3
fwait
test
jge
iret
pushf
shr
xor
pop
mov
ficom
test
mov
mov
cmp
test
push
jmp
aam
popf
lea
pop
mov
imul
sub
movs
and
ror
xor
dec
jbe
xor
xchg
jp
push
in
push
mov
aas
js
bound
push
or
and
cmps
cmps
push
fisub
mov
ds
dec
call
dec
aas
sub
pushf
inc
cmc
sbb
das
mov
mov
lods
jae
sbb
cmps
scas
ret
ret
scas
stos
in
fnstenv
cmp
adc
add
ja
jo
inc
pop
push
mov
jp
mov
or
or
not
sbb
sub
jmp
and
call
das
ret
popf
cmp
fcmovu
sub
pop
xor
xchg
ret
test
sub
fucomi
mov
fisttp
jns
push
sub
fwait
pop
aam
or
js
int3
(bad)
popa
fs
or
mov
or
fchs
dec
xor
(bad)
xor
add
push
pop
mov
inc
dec
ret
sub
mov
add
inc
nop
xor
sub
mov
(bad)
popf
inc
arpl
push
ins
pop
and
xchg
pop
mov
aam
aaa
add
and
mov
sbb
xchg
fstp
sahf
leave
and
call
mov
jl
inc
outs
hlt
jns
and
jbe
sub
leave
sahf
add
aam
mov
scas
xlat
xor
sub
mov
pop
bts
dec
mov
(bad)
adc
rol
xor
out
shl
jl
mov
add
push
xchg
inc
lock
push
xchg
test
in
mov
sbb
mov
out
pop
fucomi
into
sti
adc
jecxz
das
pop
ss
mov
add
push
fsub
(bad)
out
mov
sub
ftst
imul
xchg
push
add
and
and
mov
pop
pop
xchg
inc
pusha
ficomp
cmp
pop
xlat
cmp
jmp
cwde
push
pop
jns
sbb
push
test
xor
xor
retf
push
lea
xchg
pushf
mov
push
ds
add
inc
mov
in
sub
std
fisttp
xchg
ins
mov
and
addr16
ds
inc
pusha
jns
push
or
mov
test
xchg
jg
mov
imul
add
and
test
jnp
cmp
mov
mov
pop
push
mov
mov
and
and
mov
cmp
push
pop
pop
jmp
add
icebp
sti
pop
adc
(bad)
rcr
ret
sub
clc
shl
std
inc
ret
mov
mov
jno
fistp
cmp
add
or
and
and
aas
inc
mov
int3
push
mov
fdivr
fs
cdq
xchg
pusha
sbb
retf
(bad)
push
dec
fmul
ficomp
fdivr
mov
add
and
popf
ss
stos
cmp
cmps
dec
stc
fiadd
inc
sbb
xchg
xchg
(bad)
cld
enter
push
js
jmp
jne
aam
mov
jg
leave
rcr
mov
pop
sub
leave
mov
shl
and
adc
push
daa
pop
ins
jge
(bad)
xchg
adc
adc
ds
test
mov
pop
sahf
push
stos
outs
stos
mov
mov
es
aaa
adc
sub
jb
jns
(bad)
das
(bad)
hlt
sbb
enter
lods
ror
stos
push
movs
cmp
dec
mov
jno
mov
stos
jl
out
push
xchg
aam
nop
mov
pop
aaa
mov
dec
inc
imul
sub
(bad)
cmc
xchg
out
sbb
jae
jbe
cmp
and
xchg
cld
test
jecxz
pop
aas
icebp
dec
leave
cmp
bound
xchg
push
aad
call
push
lods
adc
push
cmp
dec
xchg
fwait
pop
cmps
ins
pop
test
inc
loope
mov
mov
adc
loope
sbb
jmp
clc
std
mov
mov
inc
add
pop
outs
stos
sbb
lahf
das
or
cmps
cld
pop
or
fldenv
adc
mov
push
cmps
dec
cmps
paddb
dec
cmps
sub
outs
push
shl
stc
xchg
test
push
inc
mov
jge
and
jecxz
clc
rcr
(bad)
lock
cmps
(bad)
and
inc
push
xor
dec
cdq
inc
stos
das
xor
daa
(bad)
fistp
into
call
(bad)
jp
xor
lahf
retf
in
fsub
dec
imul
push
jl
addr16
sar
mov
fisttp
and
xor
sub
dec
cli
out
xchg
fdivr
enter
xor
push
(bad)
ins
xchg
sub
xchg
mov
push
(bad)
loopne
xchg
adc
push
pop
addr16
sub
cmp
sub
jnp
ja
xchg
or
in
sbb
lahf
push
mov
mov
outs
fsub
inc
adc
out
fdiv
cmp
loope
sub
leave
in
out
cmp
mov
push
dec
and
push
mov
addr16
cmp
push
sbb
loop
xchg
mov
pop
sub
jnp
dec
jne
pop
xor
pusha
cmp
repnz
adc
(bad)
jecxz
movs
xor
repz
and
les
push
js
inc
dec
(bad)
imul
pusha
sub
stc
sbb
xchg
cmp
imul
dec
call
scas
sbb
adc
xchg
pop
inc
cmp
cmp
iret
stos
sub
in
cld
mov
add
jmp
pop
mov
jmp
cmp
inc
push
hlt
mov
sar
bnd
pop
loopne
push
mov
push
dec
fnsave
or
(bad)
cli
mov
fiadd
jne
pop
sub
aad
(bad)
jnp
mov
cs
mov
mov
jmp
imul
idiv
fist
mov
movs
aaa
retf
cmc
add
movs
shl
ror
sbb
pop
enter
ins
adc
adc
out
sbb
mov
jb
sar
adc
ror
fild
mov
mov
push
ret
out
popf
cli
stc
loopne
pop
pop
dec
in
pop
shr
mov
dec
jo
and
jmp
mov
dec
mov
out
icebp
cmp
mov
and
retf
lds
call
test
clc
inc
clc
test
jbe
das
mov
pop
cmps
or
cmc
jmp
xor
mov
arpl
jae
ror
add
iret
mov
nop
sub
xor
inc
ins
pop
xchg
fist
fld
arpl
cmp
push
xchg
mov
cwde
jnp
shl
iret
xor
test
scas
dec
je
push
mov
mov
add
mov
dec
pop
(bad)
jb
push
loope
not
add
jae
mov
mov
js
repz
cwde
sub
mov
xor
push
jp
push
add
popa
and
sti
fs
outs
inc
pop
jl
shl
das
cmps
in
pusha
pop
lods
and
movs
mov
add
push
les
leave
inc
icebp
or
add
push
das
clc
or
imul
adc
sbb
imul
or
ret
and
imul
popf
std
ret
or
xor
in
sbb
rcl
sbb
cmp
and
pusha
sbb
bound
leave
fst
mov
adc
mov
cli
xor
push
adc
popa
and
sbb
fcmovb
mov
mov
fstp
xchg
(bad)
and
movs
std
push
ins
fld
sbb
mov
outs
je
fldcw
vpunpckldq
sub
hlt
cmp
test
mov
xor
xchg
dec
sbb
add
adc
jle
addr16
cmp
aaa
aam
lds
stos
push
ss
loop
mov
xchg
mov
dec
dec
add
pop
das
mov
hlt
or
mov
or
jg
sahf
std
dec
test
mov
pop
fst
outs
mov
xor
xchg
cmps
cmp
sbb
sti
loope
cld
aaa
inc
jmp
js
dec
aad
and
loope
inc
ins
inc
popf
in
jl
mov
and
cmp
sub
mov
jg
es
leave
shl
add
dec
mov
or
mov
ins
(bad)
xchg
dec
cmp
mov
pop
xor
adc
jnp
inc
movs
push
rcr
cdq
and
sub
add
and
jo
call
xor
test
and
xchg
mov
cmp
repz
outs
outs
imul
or
adc
mov
sub
shr
adc
push
retf
call
in
pop
in
xchg
ret
(bad)
mov
mov
or
(bad)
sbb
sar
gs
outs
mov
inc
inc
stos
rcr
pop
fcom
mov
xor
daa
pop
rcr
pop
mov
pop
adc
fcmovnu
cmps
adc
stc
jnp
xor
cmps
inc
cli
add
add
jecxz
mov
push
dec
(bad)
mov
pop
out
jl
clc
or
int
dec
adc
popa
ja
push
jp
pop
shr
adc
mov
mov
xor
mov
dec
jb
pushf
mov
ret
cmps
stos
dec
pop
add
or
add
pusha
aam
aam
and
mov
jbe
jl
pop
std
jnp
and
xchg
mov
stos
retf
stos
mov
sub
rcr
ret
jg
mov
test
add
lahf
dec
push
js
mov
or
rol
out
sar
inc
and
js
adc
call
int
inc
mov
dec
jo
aas
jmp
out
pop
in
and
in
leave
sub
pop
pop
push
ins
push
hlt
sbb
stc
fist
(bad)
cld
pop
addr16
dec
add
ins
cmp
jo
jae
test
inc
jg
inc
inc
aas
outs
xchg
ins
inc
sti
xlat
and
fdiv
loop
and
mov
loope
stos
push
shr
and
(bad)
pushf
mov
les
in
out
mov
add
clc
inc
sbb
mov
push
div
or
and
ins
push
cmps
jecxz
in
loope
push
idiv
mov
(bad)
mov
movs
mov
jb
je
push
ins
sub
ss
es
lods
int3
call
test
cmp
in
mov
pop
xchg
mov
ret
add
mov
xor
fsubr
pop
xchg
jbe
mov
mov
sbb
mov
jp
popf
loopne
add
out
inc
push
int3
push
cwde
stos
call
jmp
retf
iret
add
push
sbb
sbb
movs
add
xor
fild
sbb
add
dec
gs
and
and
lds
les
(bad)
push
jmp
retf
into
inc
sar
test
adc
add
aad
lods
mov
mov
sub
jb
xchg
add
daa
pop
xor
ret
inc
jne
jecxz
dec
es
jmp
cdq
sbb
xchg
mov
loope
push
aaa
and
xchg
adc
adc
cld
add
mov
mov
pop
hlt
pushf
movs
outs
jmp
aas
scas
imul
daa
xchg
aas
scas
and
fwait
ss
pushf
ret
push
setne
sbb
retf
pop
ins
loop
jg
test
cmps
mov
aad
and
mul
mov
push
imul
inc
push
repnz
and
in
mov
mov
add
adc
mov
popf
ret
push
xchg
or
sbb
push
inc
mov
push
gs
(bad)
fdiv
mov
jnp
mov
jns
mov
mov
push
inc
dec
inc
cmp
or
jb
pop
and
push
xchg
es
pop
adc
mov
(bad)
push
cs
jg
mov
pop
in
(bad)
cli
ret
and
sbb
lods
sbb
out
and
sar
inc
mov
loopne
sti
and
rcr
ins
data16
ret
push
repnz
rcr
xor
test
mov
outs
adc
addr16
or
xchg
push
data16
aaa
lods
out
jnp
(bad)
cld
ficom
lahf
loope
inc
add
out
cmps
pop
mov
sahf
mov
mov
sbb
movs
xlat
in
out
cs
lock
pop
mov
xchg
xchg
xor
xor
iret
sbb
aas
inc
adc
mov
xor
inc
inc
sbb
test
fist
aaa
jmp
sahf
cwde
pushf
push
sub
mov
xchg
mov
shl
repnz
mov
sub
fcmovne
jno
xlat
cwde
loopne
and
std
inc
pop
xchg
xchg
xor
rcl
jnp
xor
add
mov
out
test
call
mov
xlat
push
or
psubq
ret
test
pushf
adc
pop
push
call
(bad)
mov
cmp
mov
xchg
popf
fldenv
in
sub
mov
pop
ja
popa
dec
int
inc
xor
ficom
xor
and
add
aam
aam
jae
mov
fild
pop
aam
sbb
dec
sahf
arpl
mov
pusha
mov
mov
push
sar
dec
shr
repnz
cwde
hlt
fisttp
and
fldenv
xor
xchg
rcr
icebp
adc
sti
test
rol
cmp
popa
push
sub
cwde
daa
test
jmp
es
shl
push
hlt
ror
xchg
adc
push
(bad)
in
xlat
test
cmp
and
add
add
jle
fld
dec
mov
push
push
cmps
jmp
sbb
bound
sub
sub
int
fld
push
xchg
xchg
mov
and
in
and
xor
pop
mov
outs
fcmovbe
out
bound
ffree
jmp
mov
jge
es
jle
cmp
lock
mov
fnstenv
repz
(bad)
mov
add
sbb
adc
popa
xchg
jmp
pop
jns
xlat
pop
push
cld
pop
mov
cmp
jns
loop
icebp
jno
sahf
popa
outs
test
sub
jp
and
and
xor
sbb
jnp
daa
aam
aad
pusha
fcomp
mov
inc
retf
inc
call
sub
jecxz
mov
(bad)
movs
aaa
and
idiv
ror
je
mov
inc
in
sub
addr16
iret
out
adc
not
fcomp
shl
cmp
jmp
xor
mov
mov
and
mov
xor
int
fst
push
popf
lds
or
adc
je
daa
das
and
adc
sub
mov
dec
stos
ins
movd
imul
or
imul
(bad)
div
jnp
cmp
cmp
jo
inc
movs
ins
hlt
dec
inc
test
dec
mov
mov
addr16
repnz
bnd
mov
pop
push
les
push
inc
cwde
push
sbb
mov
and
xchg
imul
and
jmp
xchg
pusha
inc
adc
outs
retf
and
ficomp
push
mov
jle
mov
je
fadd
xor
fwait
lds
push
bound
adc
shl
pop
mov
das
sti
push
sbb
fisttp
inc
add
out
aas
inc
in
cld
pop
out
xchg
out
inc
fsubr
test
and
test
mov
adc
inc
fistp
mov
dec
inc
ins
push
push
push
ss
loope
les
(bad)
(bad)
fldpi
jmp
inc
push
cmp
les
cmps
or
aas
mov
cmp
idiv
jg
cwde
cmp
xchg
not
xchg
outs
mov
enter
xor
xor
(bad)
jo
xor
mov
jmp
movs
sbb
xchg
cmp
rcl
shr
dec
imul
and
fistp
pusha
cli
mov
push
lahf
push
pop
stos
push
xor
dec
ret
scas
imul
jmp
ss
fst
outs
or
cld
xchg
ja
mov
sahf
cmp
sbb
enter
sbb
xchg
push
mov
mov
mov
mov
add
aad
(bad)
rol
scas
cmps
stos
pop
adc
jnp
retf
movs
rol
pop
mov
lahf
add
sub
sbb
enter
cli
aad
push
xchg
scas
pop
cmps
jmp
mov
es
jmp
xor
shl
(bad)
inc
sub
push
pusha
or
xchg
pop
mov
pop
pop
cmp
lods
xor
push
ror
ss
fiadd
addr16
and
repnz
adc
leave
add
and
pushf
sbb
sub
aad
pop
imul
clc
rol
fnsave
das
out
fsubr
jecxz
repz
jae
inc
std
(bad)
jl
and
or
outs
fcmovbe
pop
stos
mov
or
pop
jmp
pop
arpl
icebp
push
jnp
jg
mov
and
adc
rcr
jbe
enter
mul
jecxz
inc
clc
(bad)
outs
mov
shr
loope
popa
pop
jne
iret
aad
call
and
add
call
hlt
jne
fchs
cmp
jge
mov
mov
loope
arpl
mov
std
inc
jae
in
cdq
sbb
dec
xchg
pop
movs
shl
mov
icebp
lahf
scas
add
scas
cmp
aam
mov
sbb
stos
out
stos
push
jg
and
and
pop
or
mov
add
dec
popf
pop
lods
jb
adc
je
push
repz
mov
sbb
inc
iret
daa
in
imul
js
data16
mov
push
xor
repnz
push
in
inc
pop
cmps
xor
nop
dec
sbb
(bad)
gs
sahf
in
dec
bound
mov
retf
test
test
rol
fstp
fadd
sbb
dec
xchg
(bad)
aas
lock
(bad)
ins
std
enter
cld
inc
ds
fwait
jne
xchg
jmp
sbb
jmp
cld
aaa
jmp
jge
cmps
adc
push
add
fwait
in
sub
mov
in
mov
xchg
ins
out
sub
jecxz
add
push
lds
add
add
out
rcr
add
sub
fstp
(bad)
in
jg
(bad)
out
jecxz
(bad)
leave
sti
cmp
das
ds
push
test
rcl
call
rcr
cmp
out
adc
iret
add
xor
std
sti
mov
pop
inc
aad
ja
cmp
dec
(bad)
ja
push
les
loopne
dec
in
(bad)
shr
mov
inc
call
mov
lock
inc
push
mov
test
aad
push
and
xchg
loop
out
std
mov
pop
pop
in
pop
ins
jmp
cmc
sub
popf
and
dec
mov
call
dec
aam
sbb
sub
test
sahf
fld
mov
push
mov
retf
aam
(bad)
pop
icebp
mov
xor
cmp
addr16
sti
call
test
sub
push
jns
loop
ret
stos
sub
mov
test
xlat
scas
maxps
sti
cmps
pop
sbb
aas
mov
loope
pushf
aad
loop
mov
inc
test
inc
and
pop
cmps
mul
pop
repz
out
add
aad
lahf
cli
jno
xchg
or
mov
jmp
test
popa
bound
jmp
mov
fwait
or
sbb
repnz
adc
or
sbb
cmps
sub
lods
fld
jne
jae
movs
sbb
movs
pop
add
(bad)
retf
out
out
sub
mov
cli
jge
xlat
(bad)
cmp
sbb
aas
jns
mov
jae
je
jmp
xor
stos
or
test
jb
mov
jmp
loopne
push
pop
test
mov
sar
add
stos
lock
xor
arpl
outs
mov
push
pop
xchg
push
outs
test
mov
ret
mov
adc
cwde
xchg
sbb
call
xchg
jbe
push
leave
icebp
dec
inc
mov
dec
cmps
push
pop
mov
test
add
pop
out
fs
rcr
ss
xchg
cs
sub
mov
sub
popf
sub
sbb
pop
lea
out
imul
adc
nop
pop
mov
sub
push
mov
aaa
das
or
out
mov
cmp
(bad)
lods
adc
push
inc
push
mov
cmp
into
xor
int
popf
push
test
dec
mov
sbb
ss
je
mov
pop
test
dec
aam
sahf
cmp
inc
aam
adc
jb
dec
iret
add
scas
dec
xor
mov
sar
jmp
jmp
fs
adc
fstp
popf
lea
push
xchg
push
inc
out
or
jno
sbb
daa
jae
jge
(bad)
cmp
push
and
xchg
mov
push
xchg
stos
adc
sub
shl
mov
(bad)
jae
call
or
adc
sar
out
mov
xchg
jmp
test
and
(bad)
cmps
ret
rol
imul
(bad)
aam
push
sub
cmp
sahf
(bad)
cmp
inc
jecxz
jp
fnsave
inc
mov
ficomp
and
mov
loop
ss
push
pop
dec
stc
or
jmp
or
jp
xor
mov
enter
mov
out
hlt
clc
icebp
test
hlt
shl
popa
jle
(bad)
adc
outs
dec
xchg
push
push
dec
cwde
add
js
es
out
cdq
pop
fwait
stc
xchg
rol
cli
jmp
lahf
mov
jl
dec
cwde
dec
loop
in
(bad)
jge
push
arpl
sbb
dec
shl
stos
inc
mov
lods
outs
jecxz
sahf
fnstsw
lds
lods
dec
popf
addr16
pop
cmp
stos
int3
aaa
mov
pop
inc
lock
(bad)
xlat
jg
call
daa
xchg
add
mov
add
jo
jecxz
and
sub
shl
and
and
stos
jg
sbb
xor
rcr
imul
data16
inc
data16
stos
push
pop
sub
ja
add
sub
fnstsw
push
movs
bound
in
xchg
in
dec
adc
out
lock
js
lods
and
test
or
jecxz
fdivr
pushf
mov
dec
xor
jge
or
(bad)
stc
div
sub
cmp
add
xchg
mov
rcr
inc
stos
fistp
imul
fmul
jle
sbb
aaa
pushf
sbb
mov
push
test
jmp
jecxz
nop
mov
dec
not
int
pop
or
aas
mov
sub
call
and
stc
pop
loope
sar
daa
leave
sbb
pop
div
push
in
lahf
dec
hlt
int3
mov
cs
xchg
pushf
imul
add
mov
inc
daa
and
call
cmp
push
aad
xchg
add
out
test
or
jo
add
adc
movs
xor
xlat
jnp
mov
pop
and
lea
test
mov
inc
sbb
out
(bad)
push
bound
dec
loopne
jle
add
adc
js
cmps
cld
int
cmp
cmp
dec
or
ins
hlt
lods
dec
mov
scas
test
lock
cmp
jo
(bad)
lods
xlat
push
inc
stc
popf
push
pop
popa
cmp
in
in
or
cmc
xchg
and
mov
js
jbe
mov
jne
sub
mov
jo
lahf
jo
dec
out
push
imul
and
lea
xor
jbe
and
push
push
cmc
cdq
mul
pop
jo
and
mov
mul
xchg
leave
jb
mov
(bad)
push
push
imul
xor
xchg
inc
jle
push
xor
xor
push
imul
push
in
ss
inc
adc
ret
inc
jge
jns
pop
cmps
ja
cmp
popf
add
(bad)
mov
sbb
test
or
sbb
push
neg
mov
jne
test
inc
int
ja
sub
test
mov
clc
inc
popf
dec
je
xor
repnz
push
rcr
popa
sahf
jecxz
mov
fild
retf
jno
xor
cld
aas
fwait
add
shl
jmp
scas
xor
xor
mov
popa
dec
pushw
js
sbb
push
adc
or
fidivr
xor
cmp
xchg
pop
sahf
mov
das
fmul
adc
stos
pop
loope
adc
out
sub
out
xchg
scas
dec
lea
push
das
scas
xchg
repnz
mov
(bad)
or
dec
cmc
aam
stos
sub
div
fucom
add
(bad)
sahf
sub
push
lahf
mov
inc
xchg
sub
add
cmp
dec
mov
jbe
cmp
pop
cli
or
xchg
xchg
inc
push
xchg
or
add
xchg
stc
xor
sub
push
mov
iret
aas
adc
call
ds
sub
sbb
lock
fxch
and
icebp
xor
retf
loop
xor
lods
out
(bad)
pop
mov
lods
or
cld
inc
imul
mov
push
out
dec
lods
xor
jmp
add
in
call
jge
push
inc
int3
add
jge
(bad)
jmp
sub
imul
in
add
out
sahf
mov
adc
inc
inc
add
sbb
mov
in
pop
inc
jae
inc
xor
jecxz
jb
scas
xchg
inc
jp
ds
movs
jecxz
dec
sub
mov
sub
ins
les
xchg
pop
nop
jbe
add
(bad)
sub
and
movs
pushf
loope
jg
fnsave
das
sbb
push
(bad)
mov
cs
outs
mov
mov
inc
push
push
mov
push
pop
push
xchg
mov
ss
xchg
out
jo
call
push
push
je
fld
jo
sub
xor
lahf
jp
inc
arpl
sbb
call
jno
repnz
pop
jl
pop
push
js
xchg
out
movs
and
arpl
jb
cmp
shl
push
and
or
push
push
xchg
mov
jno
push
lods
scas
mov
cwde
or
push
jb
mov
mov
test
inc
(bad)
sbb
ror
imul
adc
xchg
fld
cli
dec
or
hlt
push
sub
pop
mov
shl
pushf
adc
or
(bad)
ret
inc
jb
pop
cli
pop
cmp
adc
or
mov
xchg
jg
mov
int
in
and
fiadd
or
sub
sti
add
push
dec
xchg
enter
cmp
xchg
mov
rol
inc
sub
dec
lds
mul
add
push
test
sbb
dec
dec
sbb
enter
xor
imul
lahf
call
mov
jle
sbb
push
inc
xchg
daa
shl
xchg
mov
cmp
xchg
and
in
push
mov
mov
data16
dec
push
mov
lahf
push
std
fist
xchg
test
addr16
sub
repz
add
mov
cmp
adc
xor
mov
inc
lea
das
push
inc
sahf
cld
mov
xchg
aaa
sbb
(bad)
inc
cwde
cs
dec
fwait
mov
mov
jmp
mov
pop
pop
cmp
inc
fs
fmul
or
xchg
lds
(bad)
jns
pop
or
into
not
xor
xchg
jmp
imul
retf
push
test
and
repz
imul
xlat
xchg
std
not
movs
sti
arpl
fnstenv
lea
xchg
rcr
xor
enter
add
add
cmp
test
lea
or
dec
pause
ins
ds
mul
add
dec
sar
hlt
xlat
test
fcom
or
scas
xchg
hlt
cld
fnstcw
das
ja
mov
jecxz
stos
shl
or
mov
cmp
mov
mov
mov
(bad)
int3
sti
cmc
aas
adc
lahf
std
cmp
enter
sbb
repz
pop
xor
xchg
fs
out
push
mov
cmp
inc
loop
pusha
jg
in
adc
mov
pushf
and
xchg
cmps
pop
stos
dec
mov
jmp
clc
mov
dec
daa
mov
dec
pusha
shl
and
cmp
and
movs
bound
mov
cmp
ror
xchg
inc
adc
(bad)
fld
cmp
das
cmp
icebp
pop
and
add
adc
pop
pop
retf
cdq
out
mov
xor
mov
cmp
and
mov
lea
xchg
cmps
jnp
push
shl
dec
ins
cmp
xchg
icebp
push
mov
rol
inc
mov
ret
imul
fld
icebp
in
push
mov
jmp
cmp
iret
cmp
jne
pop
jb
pop
xchg
shl
adc
arpl
lds
xor
and
inc
sub
movs
jo
inc
sbb
cmp
(bad)
imul
dec
call
lds
mov
loopne
pusha
or
push
mov
jmp
sbb
mov
pop
shl
sub
adc
mov
cwd
clc
or
cmc
jg
add
aad
jecxz
dec
icebp
call
jno
push
popa
pop
mov
xchg
lods
mov
mov
xlat
idiv
jle
sub
add
inc
pop
mov
iret
mov
mov
ja
jge
inc
mov
mov
xchg
imul
test
div
pop
jne
ins
stos
dec
pop
add
ins
cmp
scas
mov
ds
inc
adc
add
cmp
sub
dec
sub
sub
or
fst
jmp
adc
cwde
rcr
ds
or
(bad)
in
data16
mov
popa
daa
retf
nop
scas
mov
xchg
fiadd
pop
xchg
les
enter
inc
mov
push
cmp
outs
adc
fstp
jbe
add
sub
xchg
rcr
int
jge
inc
cli
and
add
inc
inc
test
sbb
fcmove
jb
jp
add
sub
and
adc
jno
mov
retf
jb
sbb
or
imul
mov
ss
fdiv
es
push
inc
iret
mov
mov
aas
cmp
push
pop
gs
push
loope
pop
movs
in
inc
adc
addr16
inc
aam
enter
mov
sub
in
ins
ds
pushf
fisttp
arpl
int3
pop
sub
into
sub
and
xchg
nop
add
daa
retf
ins
mov
fsub
ins
movs
cmp
test
daa
fdivr
iret
call
int
mov
data16
xor
pop
mov
call
xchg
fbld
lods
lds
jl
mov
(bad)
sub
sar
jb
push
icebp
fcom
pop
adc
sahf
add
out
dec
dec
or
(bad)
adc
movaps
push
cs
sbb
push
fcomp
sub
test
(bad)
xchg
(bad)
pop
fcom
dec
cmp
sti
inc
inc
xor
ficomp
mov
in
lock
sti
lahf
jo
(bad)
adc
imul
inc
pop
js
and
bound
dec
or
lahf
xchg
mov
sbb
popa
cmp
and
ja
ss
into
fldenv
aas
pop
mov
xor
je
mov
leave
stos
clc
nop
mov
rcr
popf
(bad)
popf
push
popf
nop
mov
outs
iret
mul
push
imul
call
or
cmp
xchg
push
sub
xchg
sahf
cmc
sub
addr16
imul
movs
fidivr
and
adc
nop
mov
popf
push
inc
xor
hlt
and
or
mov
and
lods
inc
jge
cmp
inc
cmp
rol
pop
aaa
pop
pop
jne
lods
pop
rcr
mov
push
retf
int3
mov
cmp
jg
mov
stos
and
push
out
clc
sahf
or
mov
xor
data16
sahf
xchg
sti
das
adc
dec
int
call
sub
mov
aaa
push
pushf
cmc
lds
mov
push
(bad)
scas
sbb
mov
adc
mov
ss
das
mov
enter
add
sbb
in
or
cmp
pop
or
mov
int3
stos
push
dec
mov
mov
imul
lods
fst
mov
push
inc
sub
and
rcr
xchg
inc
sbb
ret
lods
ins
mov
lods
ss
fdiv
sub
jmp
test
mov
fst
jae
out
mov
mov
cmps
lahf
and
xchg
mov
jmp
sub
iret
push
mov
aas
call
adc
je
fisubr
adc
imul
cmp
call
cmp
xchg
or
add
xchg
mul
or
dec
shl
inc
addr16
mov
xor
pop
add
shl
add
outs
cmp
pop
mov
pop
mov
jnp
cmp
push
inc
add
or
push
inc
jmp
jnp
jns
fisub
test
shl
stos
data16
pushf
retf
rol
cmp
jl
ins
(bad)
in
push
out
mov
ss
jp
jo
imul
adc
and
jl
lahf
popa
ror
arpl
or
xor
imul
sub
leave
inc
clc
outs
inc
scas
loop
stc
xor
mov
dec
addr16
stos
inc
stc
gs
or
imul
call
mov
xor
test
call
xor
fyl2xp1
dec
(bad)
sbb
adc
das
(bad)
pop
aad
pop
out
aaa
dec
test
inc
outs
xchg
call
xor
or
lahf
xchg
mov
or
xor
jns
in
sahf
mov
push
push
sbb
cmp
and
mov
jmp
adc
and
in
jne
enter
retf
loop
jl
out
jmp
mov
dec
aas
(bad)
adc
shl
push
pop
mov
sbb
mov
mov
int
mov
lea
pop
and
adc
outs
ror
fcomp
add
mov
mov
sbb
pop
cmc
xor
jne
jl
mov
jl
cmp
cmc
xchg
movs
and
and
arpl
addr16
pop
ins
sub
(bad)
mov
or
push
cmp
dec
pop
jne
test
jae
jbe
xlat
mov
ret
dec
call
dec
mov
mov
mov
mov
cmp
ins
arpl
nop
lods
lods
mov
cmp
pop
jb
int3
call
dec
jmp
mov
pop
jl
mov
sbb
sub
aad
loope
jp
div
lods
in
jne
mov
(bad)
jbe
xchg
mov
mov
lods
out
mov
jmp
jb
adc
lods
arpl
mov
cmp
in
mul
or
daa
cmp
or
or
test
int3
mov
adc
test
push
jle
sbb
in
jo
cmp
mov
outs
lahf
dec
test
xlat
fsubr
pop
arpl
lds
inc
sub
mov
pop
xchg
movs
aaa
sub
in
stos
nop
xchg
push
sbb
fwait
imul
mov
shl
scas
mov
or
jns
pushf
mov
jns
cmp
cwde
dec
and
sbb
out
fsub
push
sbb
sub
jmp
xchg
test
xchg
xchg
sub
xchg
jmp
push
jnp
dec
jns
loop
xor
sub
sbb
add
or
xchg
push
sub
sysexit
or
les
jns
and
fimul
mov
aad
repz
inc
neg
lds
and
out
daa
js
xor
mov
inc
add
enter
daa
jb
iret
add
sbb
shr
dec
movs
mov
mov
mov
les
shl
pop
inc
inc
stos
jno
mov
pop
xchg
xor
pop
cmp
add
inc
std
cdq
adc
mov
movs
loope
test
push
inc
test
xor
out
rcr
mov
or
dec
idiv
(bad)
cmc
ja
cmc
mov
xchg
adc
rol
mov
ins
xchg
scas
xchg
mov
loope
adc
iret
(bad)
adc
pop
mov
mov
(bad)
daa
out
xchg
call
mov
push
cmps
mov
push
imul
fcom
in
pop
inc
cmp
pop
ret
cmp
and
dec
push
pop
stos
shl
pop
xchg
adc
inc
popf
pushf
mov
pop
mov
cmp
xchg
and
push
push
ficomp
sbb
push
cs
in
gs
mov
cmps
mov
ds
iret
fcmovnbe
dec
mov
(bad)
addr16
mov
xchg
es
inc
aas
add
mov
in
test
nop
std
ret
sbb
stc
mov
inc
out
add
adc
addr16
cmp
xor
inc
inc
repnz
movs
fwait
mov
sbb
inc
popf
push
(bad)
cmp
outs
popa
or
(bad)
fdivr
push
jp
mov
xchg
loop
and
rol
shl
data16
loope
mov
push
fneni(8087
cmp
in
and
dec
dec
(bad)
mov
jmp
inc
mov
jbe
out
add
xlat
push
mov
std
loopne
(bad)
fstp
in
loop
sub
sahf
cli
mov
lods
rcl
call
mov
fisubr
imul
clc
ss
cmp
xchg
xor
or
xor
push
(bad)
out
cmp
imul
inc
inc
xlat
dec
leave
inc
gs
lahf
outs
push
js
lods
stc
sbb
repnz
xchg
jle
stc
repnz
xchg
daa
jmp
fisttp
jne
nop
ror
cdq
pop
push
cmp
into
int3
sbb
push
cli
pop
inc
mov
(bad)
ja
add
popa
inc
shl
cmp
pushf
cwde
cs
push
aaa
jae
mov
dec
mov
jp
sub
retf
int3
lahf
jl
loope
popf
mov
push
aad
and
push
loope
mov
xchg
cmps
imul
pusha
xchg
int3
xchg
test
aaa
push
push
or
cld
cmp
imul
mov
movs
enter
les
int3
xor
mov
xchg
test
call
add
push
rol
cwde
leave
neg
ss
add
add
fistp
das
xlat
inc
popa
sti
jmp
jl
mov
(bad)
mov
sub
shl
gs
adc
pop
or
shl
pushf
popa
adc
push
mov
jno
int3
mov
ffree
mov
mov
push
sti
add
mov
cmps
xchg
jno
movs
sub
hlt
sti
inc
ret
mov
push
bound
pop
jb
mov
mov
mov
shl
adc
jecxz
mov
cli
cdq
scas
jecxz
cmp
outs
gs
push
add
arpl
push
data16
add
in
mov
jbe
pop
push
push
test
lock
xchg
and
stc
loopne
mov
jmp
lock
js
pop
hlt
ja
test
inc
fs
pushf
add
pop
loopne
mov
popf
popw
test
jg
xchg
lds
jle
fistp
push
mov
or
sub
jecxz
ins
fwait
or
lods
or
fnsave
daa
pushf
ret
xor
inc
push
cmps
sub
daa
xor
push
or
mov
and
mov
push
add
(bad)
push
cmp
adc
mov
mov
and
addr16
mov
aas
out
dec
fsub
jb
iret
cmp
les
in
leave
test
aad
inc
aas
adc
or
push
or
dec
es
shr
pop
call
loop
fimul
add
push
xchg
add
xchg
sub
adc
adc
loop
adc
mov
rcr
stos
dec
call
sbb
ret
cmp
sbb
fmul
leave
pop
sub
xchg
push
call
or
in
out
pop
push
fldz
add
lock
stos
test
mov
push
das
or
ss
push
fcomp
inc
retf
mov
and
test
cmp
pop
or
fdiv
shl
retf
(bad)
je
and
dec
pop
scas
sbb
cdq
pop
push
sub
mov
outs
adc
push
inc
xchg
pop
je
or
scas
cmps
gs
hlt
jecxz
inc
in
xlat
dec
(bad)
sbb
inc
in
xchg
rol
xlat
movs
xor
add
cmc
adc
jae
fdiv
jmp
mov
mov
test
mov
jae
dec
jns
jge
mov
mov
outs
dec
aaa
mov
xchg
(bad)
mov
rol
outs
sub
mov
mov
jle
fild
lds
sbb
aam
std
mov
add
daa
retf
jmp
call
out
out
mov
and
lods
xchg
pop
stc
(bad)
clc
add
cmp
push
pop
pop
stos
ffreep
push
ror
data16
mov
cmc
adc
push
stos
mov
xchg
stc
xchg
adc
jns
xor
inc
gs
and
push
push
ja
adc
pop
jmp
enter
xchg
ret
popa
retf
adc
pop
gs
neg
js
pop
cmp
xor
in
or
das
adc
jecxz
repnz
hlt
cli
in
xchg
jo
jbe
(bad)
(bad)
adc
mov
out
neg
sub
iret
in
dec
xchg
xchg
adc
fbstp
mov
fcmovb
add
and
sub
add
mov
sub
out
test
popa
push
cld
iret
jg
out
cmp
dec
pop
mov
test
xchg
mov
jl
retf
inc
mov
cmp
lea
sub
cmp
(bad)
aaa
sbb
cld
mov
int
mov
push
or
movs
sbb
dec
xchg
jbe
push
pop
clc
cmp
call
pop
cs
pop
enter
push
aad
and
jmp
stc
psrld
mov
lock
retf
lods
movs
outs
dec
cmps
cld
jbe
imul
stc
dec
sbb
shl
cmps
cwde
push
cs
xor
fdivr
mov
imul
pop
xor
xor
imul
fcmovnb
js
out
mov
int3
stc
mov
fidiv
(bad)
cmp
or
cmp
(bad)
mov
xchg
and
icebp
mov
(bad)
pop
xor
pop
inc
mov
popf
imul
jmp
jle
mov
pop
mov
inc
add
sub
aas
jns
adc
into
push
jae
hlt
cmp
cmp
test
icebp
sar
test
lahf
in
dec
xchg
dec
mov
add
jnp
int
dec
jmp
nop
mov
fcom
push
pop
push
xor
dec
movs
or
add
ja
inc
inc
add
test
cmp
or
xchg
adc
mov
xchg
and
sahf
(bad)
mov
dec
fidivr
fdiv
test
stos
pop
add
mov
mov
push
fs
out
cmp
and
movs
xchg
popa
mov
dec
int3
shr
dec
add
call
pop
test
cdq
xor
sub
lods
xchg
fs
push
lahf
xchg
push
ss
sbb
jns
jp
call
test
gs
inc
aad
pop
cdq
and
dec
call
and
add
mov
mov
repz
rcl
adc
jp
add
enter
std
loope
dec
pop
fs
iret
fstp
loope
sub
test
pushf
mov
pop
jle
pop
adc
js
ds
xchg
jle
psubw
out
or
dec
adc
sub
cmps
mov
inc
not
call
out
rcr
mov
jae
imul
(bad)
stos
scas
(bad)
bound
push
inc
pop
daa
pop
ja
pop
test
pop
stos
loope
pop
int3
xchg
xlat
jns
pop
xor
inc
jmp
dec
push
sahf
gs
xor
mov
xor
cmp
xchg
hlt
cmc
pusha
dec
fidivr
add
mov
push
lahf
mov
sub
sbb
push
xchg
retf
inc
outs
sahf
dec
loop
sahf
retf
cmps
add
pop
jne
mov
cmp
mov
pop
sbb
cs
das
jmp
stos
pop
xchg
pop
push
inc
or
jl
rol
xchg
ss
cmp
adc
xchg
(bad)
imul
test
shl
cmp
out
sar
std
(bad)
je
cmp
aad
aad
out
or
aaa
inc
(bad)
loope
add
lds
xbegin
xor
dec
jae
or
inc
adc
aam
lea
rcr
mov
mov
ss
and
jb
aad
aas
(bad)
pushf
xchg
(bad)
jecxz
adc
ja
ret
mov
mov
out
inc
int
sub
add
pop
push
and
mov
out
ins
jmp
xor
les
pop
xor
ins
test
jg
cmp
cmps
sub
xor
xchg
sub
mov
sub
pop
adc
cmp
test
lea
lds
neg
retf
in
(bad)
mov
aaa
outs
cwde
stos
out
in
lea
call
inc
xchg
sbb
sub
mov
loope
fs
test
xor
pop
outs
push
arpl
js
rcr
and
push
push
rcl
sbb
and
add
cmp
xor
cmp
fyl2x
mov
icebp
jbe
cwde
pop
dec
xchg
addr16
iret
cdq
int3
rol
add
jge
or
shl
xor
adc
(bad)
shl
fisttp
inc
popf
pop
jecxz
xchg
cwde
sbb
push
push
addr16
in
repz
gs
icebp
sub
bound
sti
xor
jns
clc
cmp
mov
add
stos
or
jmp
xchg
mov
mov
xor
xor
scas
loop
aam
inc
lock
xor
add
(bad)
pop
cmp
cmp
sahf
stos
loopne
add
pop
sub
nop
retf
adc
mov
and
and
cli
cmp
inc
cld
cs
cli
in
cmps
lock
(bad)
shr
sbb
mov
call
cmps
outs
das
fmul
jp
(bad)
jmp
fdivr
mov
xchg
in
fld
mov
or
xchg
test
bound
cmp
inc
mov
(bad)
jge
call
pop
out
pop
aam
xor
adc
jae
adc
sub
ret
stc
fwait
inc
test
call
sbb
stos
lds
adc
repz
xor
sti
not
mov
jb
mov
shr
xchg
xor
pop
mov
scas
(bad)
movs
or
inc
fadd
pop
or
nop
out
xchg
out
test
in
dec
outs
(bad)
not
ss
(bad)
fiadd
shl
jmp
fist
(bad)
jnp
jmp
mov
mov
dec
inc
mov
inc
adc
out
adc
loope
mov
and
lfs
or
pop
(bad)
pop
or
dec
fbstp
leave
push
mov
ds
lods
xchg
pop
out
adc
dec
fst
das
daa
dec
xchg
xor
enter
call
pop
out
int3
test
sbb
and
ficomp
scas
ins
out
push
inc
add
mov
imul
adc
xchg
pop
call
pop
mov
fwait
in
xor
cld
(bad)
test
int
and
movs
(bad)
xor
repz
shl
mov
in
sbb
pop
push
movs
ret
add
dec
sahf
and
test
scas
dec
mov
mov
fwait
movs
and
pop
mov
sub
jo
loope
xchg
inc
mov
and
imul
cs
push
int
add
test
clc
es
xor
(bad)
ds
or
sub
test
stos
(bad)
push
fldenv
aaa
je
popa
sub
push
mov
mov
dec
mov
sbb
mov
(bad)
out
pop
fild
dec
packsswb
(bad)
in
or
jmp
nop
pop
scas
sub
lds
xor
or
mov
push
sub
popf
jno
inc
out
ja
test
dec
inc
repz
icebp
mov
push
gs
clc
fsubp
sti
push
data16
(bad)
cmp
mov
and
sub
sbb
mul
scas
sub
clc
xor
adc
add
ds
push
rol
jbe
mov
xor
or
ins
adc
dec
add
inc
bound
xor
loopne
mov
and
add
add
xlat
loop
or
fdiv
cmp
fwait
jns
xchg
xchg
cmc
imul
add
das
pop
pandn
push
xorps
data16
dec
xlat
out
add
cld
mov
mov
add
test
pop
mov
pop
mov
(bad)
call
pop
xchg
sar
in
enter
mov
scas
sub
pop
mov
mov
jae
add
cdq
or
out
outs
repz
ficom
mov
addr16
cmp
out
mov
push
push
inc
push
pop
pop
mov
xor
(bad)
sahf
dec
pushf
or
mov
test
mov
push
push
adc
scas
fwait
not
retf
and
movs
int
push
fnsave
push
test
mov
pop
arpl
popa
repz
aad
mov
push
neg
add
cmp
fdivr
jp
(bad)
rcr
sbb
xchg
std
pop
cmp
bound
add
mov
or
xchg
adc
mov
sbb
cmps
inc
hlt
cs
repz
mov
loop
dec
sahf
adc
xor
(bad)
(bad)
es
aas
or
aad
jg
cmp
sub
fidivr
xor
cld
movs
outs
fnsave
xchg
mov
(bad)
cmp
test
pop
pop
and
ins
sbb
test
pushf
add
lods
push
sbb
sahf
lds
xchg
test
jg
jne
sbb
mov
out
pusha
inc
push
or
mov
cmp
mov
mov
aaa
js
mov
pop
jns
push
jae
sti
jne
cmc
jg
jmp
and
push
int3
jne
mov
add
add
ret
arpl
xchg
xor
or
xchg
ja
and
dec
xor
jnp
das
stc
and
mov
add
int3
cmc
ret
lods
mov
shl
jge
and
dec
add
mov
fidivr
ror
xor
shl
pop
aam
xor
or
or
jle
dec
les
or
and
xchg
mov
adc
imul
out
mov
(bad)
rol
xchg
shl
mov
pop
jo
xchg
add
addr16
scas
(bad)
lods
push
sub
or
push
mov
vpsubsw
lahf
mov
(bad)
jbe
jl
pop
mov
push
aad
mov
inc
sar
inc
(bad)
stos
xor
inc
mov
or
mov
lahf
dec
or
add
pop
clc
mov
loopne
ins
mov
fadd
popf
cmps
fmul
es
jp
add
sti
inc
xchg
xchg
sub
sub
cmp
mov
movs
aaa
test
jmp
cmc
mov
xor
push
pop
fist
fistp
xchg
mov
xor
(bad)
or
xchg
jnp
jl
in
loopne
xor
jle
push
or
push
xor
enter
mov
fcmovbe
and
add
hlt
xor
fsub
ret
jge
int
sub
sbb
icebp
mov
rcl
les
mov
retf
push
je
inc
repz
icebp
imul
jae
jle
push
out
dec
dec
sbb
add
cmp
sbb
movs
inc
fs
xchg
lock
adc
jmp
sbb
lds
pop
fistp
ss
xor
push
outs
xor
clc
jge
push
loopne
or
lahf
mov
jmp
jge
inc
or
mov
in
and
call
pop
mov
sahf
int3
mov
test
xor
int3
call
xor
sub
sbb
das
xchg
enter
or
aaa
mov
je
and
inc
rcl
xchg
rcr
jg
scas
dec
and
out
test
jmp
push
and
scas
ja
ret
(bad)
pushf
ror
sbb
popa
xor
nop
pusha
or
cmp
inc
mov
in
mov
addr16
xchg
arpl
pop
and
or
jle
or
ja
xchg
inc
pop
cmc
dec
(bad)
dec
retf
retf
ror
mov
ret
push
fistp
mov
fstp
adc
jge
mov
sub
push
xchg
int
lds
cmp
ja
sub
mov
jle
pusha
scas
push
pop
repnz
adc
cmp
pop
jmp
shl
pop
inc
push
daa
mov
and
jae
cmps
push
mov
out
movs
pusha
xchg
add
loopne
je
xchg
and
xchg
cwde
xor
xchg
mov
jb
inc
mov
mov
push
dec
mov
xchg
aaa
outs
lods
inc
xor
jge
shl
bound
push
adc
push
mov
movs
int3
or
push
sub
mov
out
arpl
lds
xchg
retf
cmps
mov
lea
mul
daa
sub
mov
push
lods
pushf
jns
and
adc
pop
or
cmp
dec
in
pusha
push
frstor
cld
push
cmc
aaa
inc
sahf
xchg
mov
jge
retf
mov
inc
call
jle
push
fbstp
xor
mov
mov
lahf
in
or
or
push
jne
xchg
cs
sahf
cmp
add
loop
sbb
inc
movs
add
bound
mov
sub
stos
imul
mov
push
xor
stos
scas
xchg
shr
add
pop
dec
int
cmp
ins
leave
pop
loope
bound
hlt
push
inc
or
mov
cmp
data16
jno
test
cmp
add
jp
and
dec
xchg
imul
retf
test
jo
loopne
rcr
sub
ins
mov
sbb
outs
adc
cmps
sub
shl
loopne
mov
push
out
out
jns
loop
sbb
dec
(bad)
push
stos
ins
fucom
loop
xor
std
(bad)
call
fdiv
pop
or
into
ret
es
imul
jmp
popf
jnp
jge
mov
jle
mov
push
test
jne
(bad)
mov
cmp
call
jg
(bad)
jle
sbb
mov
mov
dec
cmp
push
fst
cmp
adc
out
shl
bound
movs
call
ja
push
nop
push
mov
das
push
mov
or
cmp
dec
push
mov
pop
mov
je
push
shl
repz
mov
push
fcomp
push
inc
inc
cs
gs
sub
(bad)
push
shl
imul
mov
(bad)
fidiv
test
mov
stos
xchg
idiv
and
shr
mov
mov
sub
inc
jbe
faddp
push
adc
stos
fwait
jle
adc
adc
outs
aas
fisttp
push
push
inc
pop
jg
pop
pop
mov
mov
scas
movs
jmp
pop
inc
mov
rep
xor
and
cmc
out
mov
nop
rcr
mov
xor
add
adc
cmp
xor
aad
jne
xor
pushf
bound
fldcw
inc
data16
cmps
push
adc
xor
inc
pop
pushf
in
fisub
iret
dec
jmp
jge
fcom
test
mov
cmp
int
jno
and
jecxz
jnp
mov
push
fsubr
xor
int3
lock
mov
js
cwde
dec
dec
inc
dec
call
xchg
mov
or
lds
(bad)
movs
retf
jb
test
push
xchg
enter
sbb
sub
fstp
scas
dec
lahf
xor
(bad)
jbe
jmp
jge
sbb
dec
sub
or
jb
inc
fist
ret
inc
and
aaa
(bad)
in
inc
int
jne
xor
sub
fxch
push
arpl
push
loop
iret
ins
dec
mov
dec
mov
add
iret
inc
fst
pop
retf
addr16
test
sahf
xchg
in
sbb
cmp
or
jmp
xchg
fdiv
inc
imul
in
mov
sbb
ins
xchg
inc
fadd
out
imul
movs
mov
mov
dec
sub
clc
mov
aas
adc
sti
outs
shl
repz
mov
or
jge
stos
ins
inc
iret
out
sub
or
iret
cmps
xor
aad
cmp
bound
push
inc
mov
movs
fs
cs
xchg
mov
push
outs
and
mov
or
jl
cwde
push
into
push
mov
sar
stos
and
push
cmps
fwait
inc
dec
cmp
xchg
ins
(bad)
lahf
aam
movs
icebp
mov
jae
pop
mov
(bad)
shl
rcl
dec
adc
pop
bound
mov
nop
xchg
loope
and
in
aad
mov
mov
and
(bad)
enter
pop
cmp
sub
push
movs
and
and
into
adc
(bad)
xchg
mov
xor
sbb
sar
mov
iret
mov
fldcw
inc
push
sub
jnp
std
cld
pop
cmp
inc
mov
ror
push
sub
sub
mov
jb
ret
xor
out
cs
cmp
cmp
cdq
dec
mov
xor
jnp
popa
dec
inc
dec
mov
enter
outs
ja
mov
fwait
dec
(bad)
scas
bound
retf
retf
fucomi
mov
mov
call
aam
sbb
popf
push
jns
loop
call
shr
ret
mov
adc
xor
in
add
fcmovu
cmc
cmp
fwait
push
lds
mov
mov
xchg
or
ficom
int
xchg
push
or
jge
fcomp
scas
mov
ret
jae
mov
cmp
xchg
je
cmp
in
in
inc
leave
dec
xchg
and
in
mov
mov
adc
jnp
inc
push
mov
lds
fistp
je
mov
mov
imul
enter
adc
fistp
xchg
push
jp
lahf
(bad)
retf
ds
call
xor
sti
aam
arpl
div
cdq
add
mov
scas
adc
mov
push
fld
mov
jnp
push
das
pop
dec
jne
sbb
dec
shl
pop
mov
int3
out
loope
adc
test
mov
jno
aad
ret
in
shr
dec
cmp
xchg
cmc
mov
leave
call
adc
fwait
mov
mov
gs
xchg
int
popf
pushf
inc
add
fisub
lea
cmp
mov
pop
pushf
xor
jnp
repnz
mov
xor
das
push
inc
dec
pop
outs
pop
out
and
and
mov
pop
std
int3
dec
sbb
xor
inc
adc
adc
dec
xchg
jno
jp
mov
add
pushf
xchg
pop
or
leave
out
ret
test
inc
(bad)
mov
jnp
xor
dec
std
sbb
add
inc
or
xchg
fcomi
mov
mov
push
pop
pop
rol
adc
gs
imul
pop
or
aaa
push
mov
xchg
repnz
mov
push
movs
lods
movs
pop
shl
sbb
clc
adc
pop
sub
xor
daa
ss
push
pop
cmp
out
rcr
and
add
jo
push
lods
je
jmp
movs
xor
loopne
shl
push
mov
cs
retf
sub
fs
pop
xor
rcr
ds
xchg
loop
xor
or
mov
iret
stos
jge
mov
addr16
cmp
in
lock
xor
cmp
movs
scas
sub
and
jns
mov
xor
inc
popa
fs
in
movs
popa
fwait
or
mov
jg
cmp
cmps
cli
cmps
adc
sub
scas
xchg
dec
push
jb
or
int3
clc
jp
or
dec
out
pop
mov
ret
xchg
aaa
push
push
aas
or
xchg
fadd
addr16
mov
adc
ret
test
mov
push
(bad)
or
lock
mov
push
and
pop
xor
int3
jecxz
xchg
paddsw
dec
push
mov
add
push
xor
sahf
or
enter
call
xchg
mov
mov
mov
loop
sub
fsubr
pop
add
popa
add
sbb
sbb
gs
ss
pop
or
mov
pop
cmp
or
scas
inc
mov
retf
mov
rcl
cli
stos
shr
into
inc
jp
lahf
jmp
loopne
inc
(bad)
arpl
cs
xor
dec
sub
(bad)
sbb
test
push
adc
dec
in
sub
out
sub
adc
push
fistp
lock
in
mov
mov
stc
jbe
adc
cmp
cli
add
test
sub
inc
dec
or
ror
test
test
dec
xlat
dec
adc
ins
sub
sub
je
call
add
imul
pop
shl
inc
jb
movs
pop
lea
aas
aaa
mov
sub
scas
pop
jbe
in
fldcw
dec
xor
push
add
cmp
dec
mov
sub
xlat
jg
or
loop
xchg
pop
std
(bad)
push
sub
div
xor
inc
inc
or
xchg
icebp
fimul
ds
cmp
in
(bad)
je
enter
mov
push
push
sub
fisttp
dec
movs
bound
sar
loope
int3
lea
aaa
xor
int
dec
sbb
pusha
cdq
enter
dec
pop
xchg
movs
inc
(bad)
ret
push
jns
(bad)
and
cwde
cwde
sbb
xchg
jbe
push
mov
popa
cwde
mov
sbb
sbb
mov
xor
adc
imul
mov
inc
jecxz
jp
stc
or
daa
sub
cwde
sbb
loop
push
vpcmpeqd
cmc
stos
sub
sub
jne
mov
inc
movs
nop
mov
ret
or
dec
fprem1
mov
movs
outs
dec
bound
mov
and
push
push
rcr
xor
mov
aas
jne
aas
adc
movs
sbb
jle
cmp
retf
sbb
or
mov
cmps
les
fmul
mov
jne
jge
jnp
sub
sbb
stos
pop
not
dec
inc
repnz
jmp
fcomp
es
enter
scas
inc
bound
test
hlt
cdq
out
and
test
mov
push
nop
sti
push
jge
daa
adc
dec
xor
mov
jg
repnz
arpl
inc
call
ins
pop
clc
test
std
or
sub
loop
sbb
sub
jle
and
jp
les
inc
push
dec
out
out
jo
fild
sub
pushf
repnz
and
sar
sbb
in
fimul
cmp
cmps
jno
test
retf
into
loopne
add
aas
and
cmps
loop
jbe
movs
xchg
test
or
jno
or
push
mov
mov
mov
and
popf
or
xlat
xor
pop
loop
std
data16
movs
add
in
out
loope
sub
js
adc
sar
mov
jb
cmp
rcl
dec
mov
xchg
inc
push
ja
sub
pop
push
popf
adc
ins
(bad)
mov
cmp
retf
cmp
out
in
fdivr
hlt
out
or
fisub
xchg
mov
push
jecxz
sub
mov
dec
std
clc
cmp
retf
sub
pop
or
jl
pop
push
mov
xchg
add
out
mov
lods
es
mov
jno
pop
sti
test
add
dec
xlat
xchg
mov
or
iret
jae
clc
mov
(bad)
sub
test
jg
mov
or
test
enter
into
lock
add
hlt
imul
in
add
aas
jbe
mov
jecxz
in
inc
jns
into
or
jnp
aas
shl
sub
(bad)
push
idiv
and
sahf
xchg
fild
call
cli
rcr
push
nop
or
cmp
div
cmc
nop
pop
retf
dec
jbe
ficomp
mov
add
dec
int
dec
loope
js
and
jg
or
cld
outs
xchg
ja
jmp
movs
jae
test
popa
js
mov
call
lods
call
dec
(bad)
cmp
adc
stos
sbb
(bad)
ret
mov
loopne
aam
mov
jmp
mov
mov
movs
xor
push
adc
movs
aad
add
loop
ins
(bad)
cmps
jns
out
sub
popa
daa
mov
retf
xor
adc
nop
les
cmp
mov
add
jo
pop
push
neg
imul
and
mov
push
je
cmp
mov
xchg
(bad)
mov
(bad)
jl
push
add
loopne
jo
xor
ins
dec
jecxz
mov
xchg
cmps
adc
inc
xor
ss
out
push
or
arpl
jmp
popf
mov
mov
adc
ror
lahf
dec
mov
fst
pop
sar
add
retf
or
push
add
sbb
jae
repnz
fcomp
mov
and
mov
jb
add
mov
outs
pop
cmp
iret
rol
lods
xor
repz
enter
push
rcl
out
mov
es
sub
xchg
popf
pop
les
xor
in
aas
xor
call
es
dec
xchg
ret
mov
push
push
ror
retf
xchg
icebp
lahf
dec
shl
xchg
fistp
sub
inc
adc
jns
fucomp
push
push
sar
and
into
(bad)
pop
add
cmp
push
adc
je
popf
(bad)
jns
pop
dec
ret
xchg
shr
fnstsw
xchg
in
repnz
loopne
mov
ror
test
fistp
jg
hlt
pusha
mov
pop
test
jnp
fsubr
ins
gs
add
mov
bound
addr16
push
pop
jno
xor
movs
xchg
add
sbb
shl
mov
or
push
loope
das
in
cmp
xchg
dec
iret
mov
stos
dec
sti
repnz
aaa
jmp
jnp
mov
adc
popf
jg
adc
or
(bad)
adc
stos
mov
shr
leave
shl
and
pop
(bad)
imul
jg
sbb
mov
jle
jl
int
es
pop
sti
movs
shl
xor
mov
dec
adc
in
call
and
jp
cmp
retf
or
adc
jmp
sub
lds
inc
xchg
mov
add
pop
mov
xor
inc
hlt
push
movs
bound
jl
push
mov
push
mov
les
fcmove
sbb
inc
xor
pop
mov
sbb
pop
pop
jo
mov
call
jnp
bswap
ror
mov
lahf
fistp
push
sub
xor
xor
sahf
imul
jno
je
sbb
in
sbb
int
gs
sub
ins
outs
dec
retf
cmp
pop
jns
inc
push
sbb
push
mov
in
jecxz
jmp
call
out
retf
push
test
inc
fstp
sbb
fdivr
imul
fbld
sar
in
add
ds
add
arpl
sub
and
pop
inc
jae
dec
xlat
push
jae
sbb
cmp
xor
pop
add
ds
ins
xchg
sub
aad
lahf
sub
cmp
test
aas
ins
inc
fistp
iret
cmp
aaa
outs
dec
jns
push
sub
fstp
nop
stos
mov
out
sahf
inc
inc
mov
sbb
adc
in
xchg
push
mov
call
add
test
pop
xlat
mov
mov
mov
cmp
jne
retf
pop
mov
push
cmps
push
xchg
jns
lods
scas
(bad)
sbb
stc
int
lahf
push
stos
idiv
jne
out
adc
mov
cmp
dec
sub
push
inc
dec
xor
(bad)
fld
mov
retf
or
bound
sbb
pop
jae
or
or
adc
adc
adc
cld
or
cli
fldenv
pop
stos
ror
loopne
xor
lds
mov
adc
xchg
daa
test
or
add
adc
(bad)
adc
jge
clc
sbb
mov
add
mov
pop
ffree
inc
add
dec
lahf
xor
jb
fiadd
test
jle
push
aam
pop
jecxz
inc
out
jno
xchg
inc
repz
std
and
icebp
pop
test
sar
mov
cwde
scas
(bad)
or
movs
fimul
outs
fwait
jmp
sub
inc
mov
lock
shl
jp
mov
sbb
dec
inc
fs
mov
add
cmps
div
cli
jne
aam
mov
push
lahf
push
addr16
aad
test
cmps
sbb
inc
jno
mov
es
fisubr
jg
pop
mov
jle
test
iret
adc
test
and
pop
aaa
into
xchg
neg
jmp
mov
clc
imul
mov
jmp
(bad)
sub
dec
out
loope
push
cmc
aas
loopne
mov
imul
stc
hlt
sbb
cmp
pop
adc
out
xor
test
cmp
in
xchg
pop
inc
loopne
xchg
ret
aad
add
aas
pusha
cwde
pusha
int3
test
inc
loop
icebp
dec
xor
adc
int
dec
jb
mov
pusha
hlt
cld
xchg
mov
scas
test
int
sbb
retf
cli
adc
aam
gs
mov
imul
gs
xor
rcr
and
(bad)
and
lods
xor
stos
das
cs
push
icebp
pextrw
and
and
stos
cmc
mov
pop
cmp
push
imul
cmp
xlat
jb
push
dec
repnz
xor
sub
xchg
aas
neg
call
sahf
push
or
ins
jp
mov
cmp
mov
cmp
xchg
cmp
shl
mov
xchg
jno
lods
cmc
push
sub
popf
xor
sbb
xor
fadd
popf
shl
leave
xlat
add
sbb
bnd
imul
adc
mov
pop
mov
pop
loopne
mov
loopne
test
sar
pop
xabort
fiadd
cs
cmp
jle
xchg
dec
(bad)
inc
dec
movs
hlt
cdq
jb
int
sbb
test
cmps
push
out
ss
ja
shr
jge
and
jmp
or
push
xor
inc
iret
repz
and
jp
xchg
and
adc
scas
pop
dec
pop
xchg
xor
fimul
in
sbb
fnstenv
xor
sub
inc
ror
xor
clc
mov
fwait
add
xchg
pop
retf
mov
mov
loope
jp
lock
add
inc
imul
add
dec
add
xchg
cmp
call
lods
sbb
push
jl
imul
test
aas
add
fld
adc
jl
dec
add
inc
or
mov
mov
xor
jle
rcr
test
loop
neg
sbb
adc
dec
ss
arpl
sbb
popa
aad
or
test
cdq
lahf
sub
jae
adc
lods
movs
jnp
pop
and
out
imul
xchg
xchg
push
outs
or
and
push
xor
mov
js
out
dec
mov
lock
dec
cmps
xchg
call
push
int
not
dec
xchg
mov
inc
xor
cmc
in
and
jne
dec
push
inc
loopne
lds
mov
adc
ss
or
xor
nop
mov
mov
mov
lods
pop
(bad)
rol
cdq
push
xor
pop
aam
movs
mov
xor
pop
sahf
add
je
sahf
pop
aad
(bad)
fs
adc
popf
lock
dec
cmp
leave
inc
pop
or
dec
icebp
mov
adc
jno
jnp
outs
dec
or
call
sbb
and
push
mov
xor
aam
push
jge
fwait
test
xor
mov
xor
ror
clc
ffreep
xchg
inc
xchg
stos
fsubr
scas
into
scas
nop
test
test
(bad)
mov
test
fwait
sbb
pop
push
mov
mov
ret
jbe
dec
imul
cmp
mov
fimul
stc
jle
mov
mov
push
fcom
cmps
into
xor
cmp
jae
mov
fcom
rcr
sub
call
cmc
sbb
test
fs
cdq
cld
iret
and
mov
fimul
loopne
imul
jno
clc
adc
cmc
mov
movs
mov
ds
call
jmp
cmp
call
std
fiadd
xchg
aaa
add
aad
lahf
mov
mov
add
shl
adc
xchg
(bad)
mov
push
(bad)
jne
test
sti
stc
add
dec
leave
test
xchg
or
daa
push
out
mov
sub
mov
in
imul
sbb
das
int3
adc
push
pop
scas
pop
mov
test
mov
cs
or
mov
mov
add
xor
add
popw
pop
jg
outs
cmp
fidivr
sub
pop
cld
inc
cmps
and
stc
dec
fwait
lds
adc
test
xchg
jecxz
pop
daa
fwait
jp
in
aad
push
pop
add
adc
inc
retf
mov
jecxz
dec
adc
mov
push
popf
hlt
sub
shl
jle
mov
sbb
jo
sub
jbe
cdq
daa
xchg
pop
(bad)
adc
inc
adc
out
outs
cmc
ins
jge
mov
push
jmp
dec
arpl
and
mov
add
push
add
add
adc
fcmovb
lea
int
js
xchg
ins
shl
jns
xor
(bad)
lea
mov
sub
int
rcl
add
test
and
arpl
out
int
sub
cmp
adc
jno
shl
dec
jp
stc
pop
and
sub
ja
sbb
cmps
inc
bound
(bad)
xlat
mov
and
call
cmp
dec
in
fcomp
sbb
or
ja
pop
cmp
arpl
or
push
aas
fwait
mov
xlat
jne
dec
pusha
stos
pop
or
xchg
dec
cvtps2pd
jbe
xchg
retf
xchg
sub
int3
add
mov
push
dec
mov
pop
pop
in
mov
into
(bad)
sub
push
out
jb
pusha
pop
inc
imul
loop
sar
int
xchg
adc
adc
mov
mov
add
or
lock
adc
jns
icebp
ins
test
cmp
out
xor
jne
xchg
or
sbb
jo
shl
pusha
outs
pop
or
in
push
dec
ss
ret
fmulp
hlt
add
push
(bad)
dec
imul
aad
hlt
cmp
nop
xchg
popf
in
(bad)
fisub
outs
pop
test
in
inc
inc
push
sbb
cmp
imul
jns
out
or
test
xchg
jmp
mov
daa
mov
add
fs
movs
jb
nop
mov
and
mov
movs
(bad)
add
test
loop
(bad)
jecxz
jb
mov
xor
in
xor
cs
popa
popf
add
adc
sbb
aas
jecxz
sub
popf
ret
add
and
mov
and
dec
arpl
daa
bound
cdq
stos
or
stos
sub
stos
(bad)
jmp
pop
(bad)
sbb
sub
pop
push
and
out
mov
jbe
aam
cmp
lods
std
adc
mov
xchg
xchg
mov
mov
call
idiv
call
push
(bad)
mov
dec
inc
mov
das
std
test
xchg
lahf
aaa
inc
mov
mov
das
or
fstp
ds
xor
sub
scas
jmp
adc
bound
sbb
test
call
xchg
mov
adc
inc
xor
pop
mov
mov
popa
push
dec
mov
mov
sub
int3
loope
ret
sub
mov
mov
sbb
call
or
push
mov
mov
(bad)
int
mov
inc
daa
repz
xchg
pop
xchg
test
and
inc
lahf
or
fcomp
mov
sbb
xor
sbb
cmp
sub
out
addr16
shl
adc
or
stos
jmp
mov
repnz
movs
cmps
xchg
lea
adc
cmps
push
or
int3
test
test
adc
arpl
jp
sbb
cmp
jne
inc
inc
inc
jg
sahf
jne
push
inc
mov
inc
lock
stos
into
ins
adc
mov
pusha
and
push
inc
pop
pop
sbb
cmc
mov
out
es
int3
ret
sub
jmp
add
sub
std
jmp
push
repz
or
jae
jmp
loop
and
arpl
pusha
pop
push
add
sub
mov
or
or
div
xlat
cmp
mov
mul
test
inc
mov
add
add
fstp
lods
mov
popf
mov
popa
mov
jle
or
hlt
bound
mov
cdq
sub
lahf
retf
call
jmp
jae
adc
jns
leave
mov
cmp
fsub
xor
push
movs
and
push
and
pop
mov
sbb
sub
jbe
stos
xor
mov
aad
pop
iret
adc
mov
mov
xchg
pop
jmp
xlat
repnz
cmps
test
das
out
sub
sbb
and
push
adc
lods
and
bound
pop
adc
div
push
shl
inc
aaa
outs
cmp
(bad)
mov
mov
into
pop
and
sub
pusha
dec
cmps
mov
test
sbb
unpcklps
cmp
frstor
mov
push
test
push
mov
mov
pop
mov
(bad)
sahf
xchg
arpl
sub
cmp
arpl
pusha
(bad)
lods
xor
(bad)
push
push
pop
stc
outs
idiv
in
cwde
inc
jnp
mov
push
inc
mov
cwde
cmp
mov
pop
jmp
das
add
retf
in
sub
mov
sub
and
adc
mov
es
rcr
or
rol
xchg
shl
ret
cli
imul
adc
mov
aad
lock
xchg
mov
push
retf
xchg
jnp
sbb
aaa
push
adc
xchg
stos
pop
jle
stos
mov
into
jo
and
push
xchg
jns
sahf
clc
push
xlat
mov
xchg
sub
inc
test
scas
xor
jnp
outs
test
add
mov
jns
cmp
mov
addr16
sbb
gs
imul
scas
dec
xor
push
mov
outs
jle
std
xchg
inc
sbb
lock
mov
cmp
mov
mov
push
int3
popa
popf
je
pop
sub
sub
mov
mov
add
mov
push
add
paddw
clc
add
icebp
std
sub
(bad)
retf
push
dec
push
(bad)
mov
addr16
loopne
cmps
ja
je
add
jle
pop
and
pop
or
call
xor
loop
add
in
retf
sub
xacquire
imul
pop
add
(bad)
xor
jge
pop
rcr
ja
and
xchg
into
jmp
popa
mov
push
sub
imul
dec
icebp
test
dec
pop
sbb
fnsave
jns
jns
or
adc
in
fadd
popa
mov
mov
xchg
fucomp
pop
add
or
popa
aad
stc
dec
in
out
lahf
pop
dec
pop
movs
cmc
adc
dec
add
das
mov
sbb
push
fisub
les
or
mov
aaa
and
in
adc
pushf
popf
mov
and
cmp
inc
popf
xchg
mov
mov
sbb
or
leave
mov
and
pop
push
ds
ror
adc
mov
cmp
pop
pop
or
stos
add
mov
add
test
fsub
(bad)
push
push
pop
lods
ins
inc
push
jl
daa
sar
jmp
cli
adc
inc
or
(bad)
ror
dec
cdq
dec
push
adc
jle
(bad)
cmp
les
neg
mov
push
and
xchg
imul
mov
cmps
(bad)
cmc
xor
clc
push
and
xor
cmp
enter
sar
loop
mov
sub
loopne
(bad)
aam
leave
mov
(bad)
jle
xchg
lods
xchg
repnz
mov
push
mov
hlt
(bad)
fnsave
loopne
cwde
pop
or
(bad)
shl
out
jecxz
jl
jecxz
out
sub
cs
repz
aas
push
xchg
arpl
in
call
cwde
inc
fidivr
sti
mov
sub
out
arpl
in
scas
mov
mov
xor
rcl
add
adc
push
add
xchg
cld
cli
jne
dec
fild
xchg
dec
and
stos
mov
aam
mov
and
push
fld
jecxz
cmp
xchg
inc
dec
xchg
jnp
fcmovu
(bad)
call
pop
mov
inc
lods
mov
cmps
and
inc
cmps
jle
shr
adc
(bad)
loop
test
(bad)
(bad)
fsubr
cmp
out
pop
push
cwde
inc
lea
ins
mov
mov
xor
push
inc
sub
cmps
js
sti
dec
jle
inc
adc
or
repnz
pop
xchg
dec
inc
lods
in
mov
adc
in
out
aas
adc
push
xchg
sub
pcmpgtw
xor
pop
mov
jo
mov
mov
ficomp
lods
sahf
aad
mov
jmp
ror
adc
mov
call
dec
inc
add
(bad)
add
arpl
jecxz
(bad)
ficom
xor
and
mov
lea
sahf
jne
in
adc
xchg
mov
into
js
mov
xchg
(bad)
cmp
lds
out
mov
sahf
add
cwde
cdq
sbb
outs
add
mov
sub
retf
ss
cmp
jbe
sub
gs
xor
jae
dec
jmp
cmp
outs
fsubr
test
sbb
fsubr
aaa
xchg
xchg
jp
mov
mov
sub
in
xchg
imul
dec
jno
mov
mov
or
js
fistp
mov
jb
jl
cmp
addr16
mov
nop
(bad)
or
push
push
std
xor
push
rol
push
pop
adc
scas
adc
(bad)
lods
jle
daa
aad
ins
stos
dec
arpl
cmp
test
(bad)
jo
jmp
add
mov
aas
xchg
mov
and
inc
mov
push
jg
pop
dec
outs
push
imul
(bad)
mov
addr16
xor
jg
cmp
push
inc
imul
add
xor
movs
(bad)
retf
jle
adc
xchg
clc
das
xchg
pop
xor
adc
fs
inc
mov
call
or
mov
jo
pop
push
fsub
add
xchg
leave
adc
mov
xchg
mov
not
ins
inc
pop
stos
and
fsub
std
rol
push
ret
adc
shr
fnstcw
pop
cmp
retf
sti
aad
mov
shl
mov
cdq
mov
fs
pop
and
cmp
xor
sahf
add
sub
xchg
movs
scas
mov
or
dec
ss
add
ins
mov
dec
push
ja
daa
dec
(bad)
jmp
cmp
rcr
cdq
pop
xchg
mov
cmp
inc
leave
fld
ds
mov
cld
std
dec
xor
jge
mov
xor
fnstcw
mov
fistp
xlat
jp
lods
outs
cmp
mov
mov
pop
and
inc
and
mov
mov
dec
shl
mul
clc
or
mov
mov
or
inc
fwait
xlat
aas
and
div
pop
daa
inc
(bad)
dec
pop
jbe
mov
xchg
out
push
shl
bound
sahf
test
cmp
mov
hlt
push
xchg
push
je
(bad)
dec
popa
adc
call
push
or
mov
clc
test
and
(bad)
mov
pop
push
sub
addr16
cwde
loop
sub
loopne
mov
push
jbe
ret
jmp
sub
sub
leave
je
in
ds
fadd
sbb
adc
push
in
jecxz
or
in
sbb
test
popa
icebp
and
stos
cld
xchg
ret
add
dec
jns
ret
(bad)
movs
inc
mov
or
mov
sbb
in
push
and
push
pop
data16
pushf
pop
call
push
outs
emms
cwde
sub
inc
jl
xchg
out
xor
aaa
and
or
lods
push
add
les
test
je
jge
sub
and
add
mov
icebp
retf
mov
enter
lock
mov
push
test
les
pop
jo
cmp
ins
xchg
dec
shr
repz
rcr
and
sbb
xchg
adc
in
pop
sbb
push
or
fs
fidiv
push
mov
adc
and
cld
xchg
jbe
dec
xor
test
jecxz
jnp
cmps
inc
jle
jge
gs
pop
mov
jb
dec
in
jne
jbe
xor
lock
push
mov
cmp
ins
mov
xchg
imul
ins
(bad)
sbb
aas
loope
fistp
ins
push
xchg
fwait
movs
jg
aas
daa
test
test
push
xlat
pop
adc
iret
addr16
div
scas
or
sbb
push
sub
hlt
sbb
mov
popa
js
and
(bad)
mov
das
int
cmps
es
inc
and
xchg
pop
mov
sahf
retf
sub
mov
dec
popf
leave
xor
xchg
lea
push
adc
mov
add
add
push
ret
mov
leave
data16
sbb
(bad)
shl
fild
mov
cmp
dec
xor
sbb
add
mov
cwde
test
fidiv
(bad)
mov
sti
call
js
mov
mov
cmp
inc
jne
jns
ds
jno
clc
inc
mov
push
ror
or
and
shr
clc
dec
fwait
out
(bad)
mov
imul
stos
adc
jae
das
popa
ja
mov
cmp
outs
sub
(bad)
jne
rcr
daa
sti
sahf
aad
pop
jnp
dec
push
leave
ds
add
dec
mov
adc
jle
dec
je
scas
or
or
xchg
jp
push
rcl
(bad)
(bad)
stc
push
and
add
and
pusha
pushf
xor
loope
fs
add
and
mov
lahf
xchg
inc
pushf
popf
or
test
pop
adc
or
jp
sbb
fs
out
test
jae
imul
outs
(bad)
mov
push
push
loop
cmp
jecxz
lahf
push
(bad)
in
xchg
mov
jne
jno
xchg
std
push
cmp
fsubr
mov
lds
popf
mov
xor
clc
mov
xor
(bad)
pushf
jne
popf
test
add
mov
(bad)
fadd
ficom
cmp
jg
lds
sbb
lock
or
out
and
out
and
xchg
xor
(bad)
mov
int3
add
(bad)
cmp
jb
fs
loop
jg
(bad)
and
cs
mov
cwde
pop
push
jb
pop
push
mov
ins
fsubr
repnz
push
mov
adc
dec
into
leave
neg
(bad)
xor
js
out
jne
loopne
or
test
and
(bad)
mov
cli
lods
mov
test
movs
sti
aam
mov
sub
retf
inc
movs
mov
test
imul
lds
dec
lds
mov
inc
hlt
scas
mov
jge
scas
mov
jmp
push
ficom
shl
adc
outs
add
retf
push
retf
loopne
jmp
hlt
clc
mov
xor
cmp
stc
(bad)
nop
jmp
adc
retf
mov
out
daa
lock
xor
inc
mov
fmulp
fs
mov
out
xor
or
mov
sahf
scas
scas
inc
(bad)
mov
fwait
adc
into
imul
ret
add
(bad)
scas
das
dec
sbb
jb
or
push
aam
js
lea
sub
ds
sbb
int
add
icebp
sub
mov
and
push
in
loopne
jbe
cmp
movs
pop
pop
jle
ud2
push
xchg
ins
mov
stos
bound
dec
es
jmp
mov
mov
pause
icebp
adc
stos
push
add
xor
loope
push
div
lods
xor
cmp
hlt
sub
pcmpeqd
out
inc
xchg
vucomisd
icebp
int
xchg
jecxz
int3
popf
bound
xchg
adc
push
sbb
sar
xor
inc
cmps
jbe
cmp
enter
jl
inc
enter
in
adc
std
xor
sub
and
ret
jmp
mov
daa
cmp
pop
xor
jmp
stc
adc
and
and
mov
fisttp
inc
retf
inc
aas
setle
xchg
xchg
dec
and
mov
xchg
push
sbb
mov
in
aam
daa
mov
in
imul
sbb
push
lods
mov
jmp
dec
push
inc
test
pop
in
test
stc
xchg
sar
or
mov
mov
lods
cmp
jl
inc
stc
inc
rol
ret
jle
mov
xchg
ins
inc
cli
or
test
and
lods
dec
loope
mov
movs
push
fdivr
mov
sti
adc
push
iret
fsub
push
jnp
movs
xchg
xchg
cli
mov
fxch
or
fs
popa
sbb
mov
fdivr
loopne
fisubr
das
int3
push
out
shl
clc
jb
mov
ins
ret
clc
pop
inc
inc
push
and
cmp
push
pop
lock
inc
xor
xchg
dec
(bad)
cwde
gs
jmp
mov
mov
xor
in
fs
imul
mov
cld
loopne
dec
fisttp
lods
push
adc
adc
shr
inc
mov
add
pop
adc
pusha
ss
(bad)
sti
inc
popf
adc
cmp
inc
je
xor
or
jae
or
loope
mov
push
stos
jp
xchg
imul
cmp
push
paddw
jno
jge
cld
or
sub
pop
dec
in
fs
and
sti
retf
and
cdq
test
adc
inc
pop
outs
mov
push
cmp
out
retf
mov
jne
dec
popa
mov
pop
add
cmc
ret
stc
bndstx
sahf
push
xchg
xchg
xor
nop
mov
inc
inc
add
inc
mov
into
fldenv
(bad)
lds
lods
outs
sar
popa
xchg
push
out
outs
sub
sbb
arpl
jae
and
mov
ins
shl
lock
mov
mov
sub
dec
pop
inc
cmp
xchg
add
dec
sub
lods
mov
sbb
rcl
cmp
ja
sub
popa
xlat
ja
loope
mov
imul
xchg
inc
pusha
add
cmp
sbb
call
jmp
mov
and
dec
mov
cmp
arpl
jb
movs
mov
loopne
or
mov
pusha
sbb
xchg
sub
cmp
clc
leave
cwde
sar
repnz
adc
loopne
fild
mov
in
loopne
cli
aas
dec
std
and
out
leave
jp
pop
mov
loope
cli
mov
inc
push
mov
pop
mov
rcr
out
xchg
nop
aas
cmp
stos
adc
inc
ss
outs
fldenv
xchg
loope
fcom
data16
enter
ins
(bad)
(bad)
enter
push
sbb
dec
add
sub
ins
pop
push
int3
sar
sub
mov
xchg
xor
(bad)
adc
mov
popa
jne
mov
push
not
xchg
sub
xchg
stos
pop
loop
jo
aad
retf
inc
dec
imul
fistp
cld
mov
lock
jecxz
inc
(bad)
aam
mov
(bad)
out
xchg
push
adc
mov
sub
cmp
mov
xchg
mov
in
xor
imul
call
push
test
fdivr
lods
mov
or
xor
dec
xor
leave
js
mov
(bad)
daa
push
mov
stc
loope
pusha
and
movs
jmp
xor
jb
lods
push
loop
rol
not
int
int3
mov
ins
inc
popa
pop
or
dec
add
(bad)
push
or
scas
xlat
sahf
push
mov
and
mov
or
call
push
outs
fistp
dec
pop
mov
popf
cwde
cmp
bound
xor
in
and
cmp
inc
xchg
(bad)
pop
push
mov
arpl
mov
pop
neg
or
lock
and
out
loopne
or
jecxz
mov
je
cmp
push
sub
hlt
dec
add
push
sbb
xlat
pop
pushf
inc
arpl
nop
mov
es
sub
jae
dec
mov
je
retf
enter
iret
jg
jno
shl
pop
cmps
sub
and
sub
push
sti
das
nop
xor
jb
push
mov
pop
adc
sub
and
xor
xchg
(bad)
fwait
xchg
pop
push
cmc
mov
push
retf
adc
rcr
xor
jmp
shl
cli
(bad)
fistp
fisubr
leave
mov
mov
cmps
sbb
hlt
and
lods
xor
mov
ret
jae
sub
pop
sub
cmp
xchg
sub
addr16
mov
cmp
xchg
daa
mov
sub
clc
aas
shl
dec
and
and
cmp
cld
xor
push
repnz
idiv
inc
jnp
cmc
stos
mov
psubsw
push
sub
call
mov
jle
jp
sub
stos
mov
or
lods
out
outs
inc
bound
mov
(bad)
cdq
daa
fisubr
push
loop
push
stos
ja
in
add
leave
in
loope
cli
jne
xor
enter
xchg
cmp
retf
retf
jge
retf
je
xor
jg
inc
(bad)
xchg
pop
and
imul
xchg
repnz
dec
jbe
xor
pop
lods
dec
mov
call
and
arpl
(bad)
and
aas
adc
ds
and
ins
into
adc
mov
pop
outs
sub
call
push
ror
les
xchg
aad
dec
jmp
jg
add
sti
imul
sub
add
cmp
push
xchg
call
push
xor
in
bound
cmp
push
cmp
cmps
push
or
fldcw
adc
loopne
or
inc
jg
int3
shr
inc
pop
rcl
(bad)
lea
in
mov
imul
mov
push
int
mov
sti
sub
popa
mov
push
mov
jmp
(bad)
xchg
inc
iret
push
outs
cmps
out
or
arpl
cmps
sbb
sbb
xor
inc
or
inc
movs
xor
fcom
inc
in
nop
repz
inc
outs
sub
cmp
mov
imul
adc
out
pop
add
and
arpl
sub
je
push
mov
pop
mov
or
aas
push
inc
mov
cmc
cmps
les
inc
cmp
movs
adc
sbb
nop
or
xchg
pop
xchg
fsub
push
sub
mov
xchg
cdq
int
or
inc
pop
rcr
inc
icebp
mov
mov
nop
bnd
fcom
cmp
adc
mov
cmp
cld
sbb
rol
xor
into
sbb
xchg
dec
add
push
fadd
(bad)
push
add
aam
enter
in
add
jp
mov
inc
aaa
mov
jp
sub
int
loopne
mov
adc
push
cld
cmc
int3
inc
data16
mov
add
dec
dec
in
in
jnp
cmp
xor
xor
je
fstp
cdq
in
jge
push
cmp
dec
aaa
repz
ins
cmp
aas
jp
out
mov
loopne
adc
fwait
int3
push
es
aaa
jg
in
jle
jnp
adc
mov
pop
rol
push
fmul
shr
or
dec
sub
sbb
out
mov
in
or
call
shl
mov
push
lods
dec
lods
and
retf
jbe
push
(bad)
test
lods
add
ins
adc
push
inc
mov
push
xchg
mov
inc
add
test
or
push
add
(bad)
and
lods
mov
ror
es
adc
xchg
les
int
movs
dec
inc
add
sub
cld
sti
push
ins
xchg
fwait
into
push
xchg
sahf
mov
inc
das
jno
cmps
cmp
or
xor
mov
stc
inc
pop
call
out
loopne
arpl
into
mov
movs
stos
jecxz
add
(bad)
daa
clc
lds
jne
aaa
mov
fimul
cld
fisttp
or
stos
shr
inc
popa
repnz
pop
push
call
xchg
loopne
sbb
ja
lahf
or
in
pop
outs
cli
adc
mov
or
das
push
jns
push
add
push
xor
lea
xchg
jo
dec
cld
imul
iret
addr16
dec
movs
push
out
sbb
or
sbb
ret
ss
or
inc
jae
js
adc
js
push
cmps
jns
pop
aam
in
mov
xchg
inc
fscale
enter
dec
sbb
mov
sahf
daa
or
ficomp
xlat
movs
jmp
nop
mov
jae
out
jl
xchg
push
adc
lods
pop
enter
inc
sub
cmps
mov
fistp
pusha
dec
or
movs
(bad)
jp
mov
xor
je
or
pusha
(bad)
arpl
mov
stc
xchg
push
push
add
outs
cmp
hlt
sub
lock
xchg
xchg
xor
and
div
cmp
jecxz
test
add
stos
addr16
push
out
mov
inc
data16
cmp
pop
cmp
cld
adc
imul
mov
lahf
sbb
neg
and
adc
outs
fbstp
xchg
(bad)
push
mov
dec
or
sahf
inc
xchg
aam
inc
jns
adc
js
mov
mov
cli
stc
mov
push
mov
(bad)
adc
out
imul
adc
adc
in
(bad)
cwde
cdq
cmps
shl
in
jnp
adc
adc
nop
xchg
xor
pushf
xchg
pop
retf
sbb
cld
cli
in
mov
push
xor
adc
rcr
adc
mov
mov
retf
inc
(bad)
ds
retf
outs
in
push
iret
add
addr16
mov
and
and
sbb
rcr
cmps
es
and
sahf
or
lds
sub
sub
sbb
test
sbb
adc
sbb
push
adc
pop
sub
xchg
fadd
sub
gs
loope
push
sti
push
sub
cdq
lock
movs
bound
or
fucomip
call
or
call
push
jmp
sahf
xchg
adc
sbb
mov
push
lods
test
mov
shl
jle
outs
pop
in
jns
pusha
mov
pop
xchg
add
loop
adc
fs
xor
out
shl
enter
movs
mov
sbb
lods
mov
push
enter
jmp
ins
or
xchg
out
mov
and
and
fistp
int
lods
aad
push
add
stos
loopne
adc
lods
int3
loopne
das
dec
arpl
iret
xchg
jmp
psubsw
mov
lahf
push
in
jecxz
fcmovb
sub
inc
test
sub
push
xchg
sub
retf
xchg
and
and
or
in
add
add
pusha
popa
sbb
dec
inc
call
bound
and
mov
fidivr
les
mov
and
test
out
jge
loope
int
iret
lds
or
lock
xchg
pushf
sbb
or
xor
mov
icebp
in
pusha
dec
mov
xchg
repnz
jmp
jnp
loopne
dec
in
out
xchg
neg
daa
test
stos
jl
cs
fwait
add
xor
loop
icebp
pop
inc
imul
ins
adc
call
dec
mul
adc
imul
pop
(bad)
sub
inc
(bad)
es
push
dec
(bad)
(bad)
jae
sub
aaa
sub
nop
and
mov
mov
pop
pop
icebp
dec
xchg
pop
xlat
mov
xchg
xor
jl
xchg
push
cmp
xor
leave
retf
adc
int3
scas
inc
inc
lods
popf
fdivr
mov
xor
mov
mov
enter
stc
pop
cmps
pop
or
inc
in
das
dec
(bad)
adc
mov
fistp
aad
mov
or
add
scas
mov
mov
rep
inc
popa
cmp
adc
inc
outs
push
cmps
add
popa
cli
jns
stos
cmp
jmp
push
imul
jo
addr16
xchg
push
hlt
nop
or
imul
das
stos
and
push
mov
pop
popf
sbb
imul
xor
sbb
out
(bad)
adc
sub
cwde
xchg
js
jmp
inc
ds
fcomp
nop
inc
movs
xchg
(bad)
movs
clc
sub
dec
mov
sbb
or
ret
ss
int3
ds
and
push
adc
dec
push
mov
(bad)
mov
es
mov
mov
(bad)
and
dec
push
mov
xor
and
jmp
shl
nop
sub
cmp
out
inc
arpl
or
lds
sub
add
inc
lds
out
pop
and
inc
xor
lahf
dec
sbb
lea
cmp
iret
ins
test
or
sahf
imul
popa
(bad)
push
dec
mov
jecxz
jae
out
cmp
sbb
adc
movs
mul
aad
or
popa
out
pop
repz
sar
sub
mov
mov
and
dec
scas
fcmove
mov
fadd
je
push
dec
xchg
xchg
ja
mov
xchg
es
stos
(bad)
(bad)
pop
imul
lods
das
aad
pop
and
test
xchg
adc
call
mov
stos
sbb
into
sbb
cmp
je
cmp
inc
xor
sar
push
mov
sbb
xor
mov
adc
cpuid
inc
sub
jle
adc
xlat
ds
rcr
cmps
adc
inc
ficom
(bad)
aad
test
mov
dec
data16
int3
jo
inc
sbb
in
mov
mov
dec
iret
cmp
adc
dec
neg
ins
jg
mov
rcl
xchg
test
ret
ins
cmc
xchg
cmp
pusha
cmp
push
ins
jmp
fsubr
pop
sub
fisttp
int3
push
lods
mov
mov
cdq
cmp
mov
lea
adc
cmc
add
adc
lods
aas
mov
imul
rcl
jl
inc
lds
inc
jl
mov
sar
mov
xchg
in
mov
sub
shr
mov
cmps
pusha
mov
and
into
push
movs
bound
pop
xor
sub
retf
add
adc
lds
ds
push
int3
jg
push
shl
pop
add
xchg
cli
push
scas
push
je
push
clc
fcomp
xchg
mov
in
sbb
aad
cld
adc
sub
xchg
jb
xchg
xchg
jae
jb
mov
inc
push
mov
das
mov
pop
sbb
mov
ins
cli
pop
adc
movs
ret
shl
pop
popf
jl
repnz
dec
add
jge
mov
int
pop
jle
rol
std
fcmovnbe
std
xchg
scas
xchg
add
mov
push
jge
scas
dec
aad
jne
add
inc
push
mov
pop
aad
fidiv
icebp
fucomip
and
or
adc
mov
pop
pop
push
mov
push
stos
dec
cwde
push
sub
outs
inc
inc
pusha
loop
in
pusha
pop
add
(bad)
outs
bound
dec
call
xor
jle
daa
push
outs
cld
nop
inc
aam
cli
mov
jl
push
aam
cmp
inc
sub
sbb
je
push
add
test
pop
ror
imul
(bad)
xchg
sbb
and
inc
(bad)
sub
adc
mov
mov
stc
pusha
call
pop
sub
rcl
test
and
cmp
mov
adc
popf
ja
mov
mov
mov
xor
xchg
loopne
mov
jmp
sbb
scas
sbb
pop
repz
jb
mov
xlat
aam
mov
lahf
sub
fdiv
mov
repnz
pop
repnz
ss
cmp
or
pop
lds
push
fwait
sbb
adc
push
movs
ins
mov
ins
es
jl
pop
int3
pop
jmp
push
xlat
test
xor
aad
jne
jo
inc
ror
jmp
pop
adc
mov
syscall
mov
idiv
shl
dec
adc
clc
les
rcl
mov
(bad)
jp
sbb
jns
xchg
jmp
push
mov
call
add
xchg
mov
push
and
scas
mov
adc
aaa
pop
sbb
pop
or
jb
ins
movs
cdq
stos
mov
jbe
add
lods
test
retf
and
pop
sub
lock
inc
adc
dec
stos
test
je
into
jbe
jbe
mov
sbb
neg
aaa
and
inc
xor
daa
lds
jmp
xor
jle
movs
test
or
int3
jns
cmp
mov
xchg
sub
mov
enter
lea
mov
inc
xor
imul
or
out
dec
(bad)
leave
mov
sub
outs
adc
cs
ja
jp
push
pop
cmc
fsub
cwde
cwde
mov
shl
test
xor
xchg
outs
data16
push
aam
scas
push
dec
jnp
rol
mov
mov
mov
imul
add
bound
dec
loope
fmul
mov
das
ror
xlat
push
add
mov
jbe
sbb
outs
aam
in
retf
sub
gs
sub
out
ucomiss
cld
repz
sbb
mov
int
outs
mov
jge
lods
clc
pushf
add
(bad)
sbb
jp
loop
mov
sbb
cwde
sbb
xor
iret
retf
popf
jmp
xchg
dec
inc
rcl
cs
bound
loope
add
cmp
jne
cmps
pop
aam
cmp
inc
jp
pop
add
bound
adc
xor
adc
adc
sbb
cmc
inc
inc
inc
repnz
imul
or
cmp
xchg
fisttp
dec
ja
pop
dec
and
dec
lahf
std
adc
sar
pushf
(bad)
and
fmul
cmps
fdivr
fdiv
loope
ret
(bad)
aas
fstp
jno
inc
rcr
inc
add
jnp
icebp
sbb
jne
xchg
ret
fwait
outs
pop
mov
mov
mov
xor
mov
outs
xor
sub
into
cwde
arpl
jecxz
inc
add
cmps
fs
sub
shr
push
stc
das
lea
outs
cld
ficomp
jmp
cmp
gs
or
fisttp
cld
sbb
fstp
ror
cdq
adc
add
cmp
fidivr
mov
xlat
xchg
leave
call
lds
or
cmp
cmps
xor
jl
pop
cs
nop
push
xchg
inc
fisttp
test
ss
xchg
mov
int
mov
pop
cmp
nop
imul
shl
jp
xor
lahf
push
sub
inc
rol
rcr
jo
mov
xor
int
and
cmp
jp
or
cld
cwde
scas
dec
xchg
test
imul
sti
nop
xor
cdq
mov
push
je
sbb
arpl
sbb
sub
imul
pushf
mov
add
xchg
mov
mov
aad
xchg
ins
mov
shr
aad
aas
inc
aaa
std
cmp
or
adc
xchg
jno
lahf
mov
ret
mov
inc
dec
mov
cld
sub
stos
mov
rcl
xchg
jecxz
jg
jmp
setae
adc
add
jb
(bad)
shl
push
lea
sub
repz
add
push
ret
jmp
inc
cmps
or
pop
jp
js
aad
sbb
and
repz
std
mov
inc
and
gs
push
or
pop
fs
jno
cmp
push
mov
sbb
fnsave
sub
fist
leave
fsubr
ret
data16
pop
dec
ret
mov
cmp
jnp
push
push
jb
and
pop
xchg
fadd
call
rcl
imul
mov
add
push
mov
stos
cmp
sub
inc
out
mov
xchg
getsec
push
sub
movs
sbb
mov
lods
xor
(bad)
jne
inc
push
rol
dec
cmp
or
mov
ins
or
cmps
in
rcl
inc
adc
in
sub
mov
imul
mul
xor
or
push
in
ja
lock
sub
sub
and
push
js
push
cmc
scas
out
mov
mov
ror
add
lock
mov
pop
fdivr
xor
xchg
jecxz
cs
pop
dec
and
jo
xor
inc
cs
pop
cdq
mov
jge
sbb
test
test
or
lds
retf
xchg
sahf
pushf
cs
xchg
jno
xchg
scas
pop
scas
(bad)
retf
repz
mov
sub
mov
or
xor
enter
xlat
je
mov
xchg
cs
sbb
movs
mov
lds
mov
adc
mov
add
dec
xchg
cmps
not
xchg
push
shr
dec
xor
cmc
xlat
in
pop
xchg
add
call
xor
mov
pop
movs
lahf
push
mov
daa
cmp
push
xchg
push
mov
sbb
jnp
xchg
fs
retf
and
test
mov
iret
fucomi
lods
sbb
test
jbe
repnz
popf
push
sti
dec
sub
push
scas
mov
jg
cmp
call
dec
fs
and
fst
mov
ret
addr16
(bad)
jg
xor
push
iret
imul
sub
retf
stos
test
(bad)
imul
int
mov
and
mov
scas
pop
jp
pusha
shl
xchg
adc
stos
sar
mov
jbe
dec
inc
xor
add
push
shl
mov
add
add
inc
jl
iret
cmp
imul
pop
jo
cli
loope
cmp
je
jg
ins
sbb
bound
push
stos
iret
push
mov
data16
jnp
test
in
mov
jmp
dec
sbb
and
pop
enter
push
(bad)
jmp
gs
out
jmp
cmps
mov
inc
cmp
sub
jns
imul
aad
inc
jbe
sub
retf
retf
adc
cmp
sub
fptan
and
xor
mov
pop
xor
dec
test
rcl
data16
cdq
mov
std
out
pop
mov
mov
push
sub
scas
jno
inc
sahf
pop
jecxz
pop
sbb
int3
loop
xchg
and
pop
cmp
pop
pop
push
adc
in
jp
mov
dec
(bad)
inc
mov
(bad)
mov
pop
jb
mov
mov
dec
in
pop
pop
mov
and
out
fs
rcl
mov
push
push
jl
dec
or
rol
push
fisttp
sbb
mov
int
sbb
push
xlat
mov
dec
call
dec
dec
call
nop
call
(bad)
test
out
inc
aas
xchg
mov
sbb
pop
jecxz
mov
xchg
mov
jne
xchg
lods
sbb
adc
and
(bad)
cmp
adc
cwde
out
pop
mov
jne
dec
mov
jo
test
dec
jmp
adc
xor
xchg
cdq
push
sub
shr
ret
mov
lds
xor
cmp
fdivr
mov
std
(bad)
cld
hlt
test
int
ss
sti
imul
ds
ret
scas
lahf
push
hlt
mov
mov
jb
rcr
shr
les
fisttp
mov
and
dec
mov
mov
scas
add
psubd
loop
call
fwait
xor
icebp
jno
jmp
repz
(bad)
ucomiss
pop
in
mov
ins
xchg
lahf
adc
jg
push
ds
cmp
sbb
cs
mov
xor
pop
fcmovb
popf
(bad)
fidiv
xchg
les
loop
mov
inc
aad
push
xor
pop
add
pop
movs
(bad)
jg
in
or
sbb
pop
inc
and
fsub
push
out
mov
pop
aam
inc
lock
jmp
mov
ins
sahf
add
loopne
jnp
mov
xlat
(bad)
jl
and
fstp
arpl
sub
das
repnz
pop
cmp
sub
adc
mov
xlat
into
shl
pop
out
or
clc
jge
xchg
sahf
shl
add
sbb
dec
add
leave
xor
sbb
mov
cwde
xchg
xchg
push
mov
pop
mov
adc
repz
push
sbb
enter
push
mov
arpl
sub
add
mov
dec
fistp
(bad)
out
mov
cld
sub
lods
mov
xor
push
enter
xchg
std
or
(bad)
add
push
inc
jne
scas
or
loop
sub
fcomip
mul
mov
fcom
pushf
repz
repz
push
test
aad
stc
mov
mov
cmp
add
sub
or
movs
popa
mov
push
shl
mov
out
pop
or
jecxz
movs
test
inc
or
xchg
dec
out
and
std
jge
jge
(bad)
stc
mov
xchg
addr16
dec
sub
(bad)
and
xor
inc
lock
adc
push
sbb
dec
imul
xchg
adc
fldcw
pusha
adc
or
jge
or
cdq
cwde
lock
jmp
or
std
aam
jmp
sub
aam
jnp
and
int
into
test
fnstsw
push
loope
or
mov
sub
pop
push
mov
neg
dec
and
inc
mov
and
sbb
sti
int3
mov
data16
adc
rcr
mov
rcl
jecxz
adc
jo
xchg
(bad)
push
jle
retf
popf
add
test
xchg
adc
sbb
xlat
rcr
in
dec
shl
jmp
shr
push
enter
ret
pop
add
mov
mov
bound
jle
lahf
fldenv
mov
ins
mov
imul
nop
mov
dec
dec
aaa
pop
and
xor
rep
and
ja
ffreep
(bad)
ret
rcl
gs
jp
mov
loopne
icebp
fs
xchg
jo
xchg
call
ror
stc
ficom
loope
lea
test
out
js
out
xchg
push
pop
and
jae
out
inc
push
sar
ss
dec
lahf
loope
push
icebp
lock
sub
mov
fwait
inc
call
add
jle
xor
bound
fnsave
js
jmp
clc
mov
add
or
lea
push
aas
sub
int3
mov
cmp
or
push
mov
adc
ss
aaa
sbb
jle
jae
repnz
xor
inc
push
fs
fs
ret
pop
xchg
int3
lds
test
loop
and
push
push
cwde
pop
repz
aam
pop
outs
add
adc
lods
lods
div
stc
cmp
xchg
out
imul
fs
ret
or
add
jo
pop
and
mov
and
outs
int3
cdq
jg
xchg
xor
fisub
cs
push
ds
mov
icebp
adc
popa
stc
dec
adc
adc
mov
jae
outs
retf
mov
hlt
and
push
xor
jmp
movs
sub
xlat
jmp
push
mov
cmp
add
aas
mov
cld
ds
je
mov
adc
jmp
xchg
hlt
call
xor
sbb
adc
outs
and
enter
jb
sub
rol
pmaxub
mov
jmp
mov
push
push
dec
sbb
push
sar
cs
ins
push
lods
jns
push
not
xchg
push
out
jae
mov
inc
ds
cmp
push
xchg
mov
cmp
sbb
push
dec
sub
pop
dec
xor
push
retf
fld
sub
mov
pop
ds
jnp
mov
mov
fstcw
pop
ins
cmp
jge
out
push
jg
jns
mov
call
push
js
pop
sbb
xchg
enter
daa
movs
jecxz
mov
pop
fstp
enter
add
xchg
cli
push
test
lahf
popf
mov
popa
pusha
jns
(bad)
sub
data16
dec
sub
cmp
push
test
cmp
lahf
dec
add
int
push
and
iret
ret
cs
sub
lea
movs
mov
xor
ret
jmp
jbe
cmc
clc
or
and
imul
pop
scas
jg
mov
jge
stos
sahf
dec
sbb
or
xchg
mov
into
in
mov
cmp
or
mov
outs
add
ret
(bad)
jg
sub
or
pushf
inc
stos
jmp
cmps
mov
ret
cli
jge
rol
shl
inc
push
mov
(bad)
sti
lahf
ja
adc
cmp
pop
pop
xchg
retf
xlat
xchg
mov
stos
pop
movs
sbb
cmps
mov
push
pop
call
sbb
sti
cmp
and
xchg
loop
test
mov
dec
jmp
add
jnp
das
jg
scas
jns
mov
pop
adc
mov
sar
sub
hlt
cdq
lods
mov
jmp
(bad)
pop
xor
or
and
mov
xor
test
inc
xchg
push
inc
sub
pushf
xor
fstp
clc
inc
dec
(bad)
sbb
cmp
(bad)
jbe
repz
(bad)
sbb
pop
(bad)
les
jmp
dec
cmp
inc
mov
ins
sub
mov
aaa
adc
inc
sahf
inc
cs
and
mov
lock
cld
push
mov
mov
das
clc
imul
sti
nop
inc
loopne
push
xchg
push
bound
xlat
adc
mov
or
gs
mov
sbb
int
jle
int3
mov
sbb
fwait
imul
inc
adc
jnp
repz
and
inc
cmp
sub
inc
into
rcl
xchg
out
or
ins
add
(bad)
cli
sub
ror
mov
fwait
lea
movs
(bad)
(bad)
loopne
add
test
and
rcl
xor
out
inc
test
fs
mov
sub
stos
adc
lods
(bad)
and
inc
cmp
jno
loopne
jle
mov
adc
rcl
xlat
loopne
mov
mov
test
scas
mov
or
mov
repz
leave
cli
jb
cmps
leave
mov
and
and
xchg
sbb
mov
in
mov
push
fisub
mov
xor
loop
mov
mov
imul
jl
inc
dec
or
fs
sar
(bad)
adc
mov
popf
push
mov
adc
test
xor
jb
inc
mov
aaa
and
xor
adc
mov
add
sub
in
test
mov
shl
icebp
and
add
in
cmp
lds
xchg
mov
dec
ss
or
(bad)
pop
or
int3
mov
jge
sbb
push
out
pop
pop
stos
ins
mov
xchg
cmp
fistp
test
adc
pop
dec
push
iret
inc
call
xor
js
sar
call
pop
mov
loop
xchg
xchg
and
es
jle
lock
mov
and
pop
xor
jge
dec
sbb
xchg
jnp
rep
int
jg
add
rcr
ins
mov
enter
cmps
test
or
push
and
dec
icebp
in
xchg
adc
fs
xor
out
and
test
stos
pusha
ins
lods
mov
push
mov
and
test
cmp
sub
and
dec
mov
mov
leave
js
inc
mov
daa
gs
in
and
les
add
(bad)
ror
cmc
repnz
mov
adc
out
cmp
movs
iret
out
(bad)
xor
and
out
idiv
pop
into
push
jg
rcr
mov
stos
xchg
out
push
(bad)
inc
in
ret
or
sub
cdq
adc
cwde
cmp
in
fstp
mov
shr
popa
fmul
shr
cwde
cmp
or
enter
int3
jnp
mov
push
dec
push
enter
rcr
xchg
sub
adc
mov
pop
pop
shr
cmc
dec
mov
dec
in
push
cmps
sahf
stos
jmp
iret
fdiv
adc
es
jb
xor
pop
jmp
jmp
adc
jo
pop
mov
xchg
pop
sub
push
dec
int3
jns
loope
sub
stos
pop
mov
dec
movs
fstp
cmp
aas
retf
xchg
push
inc
aad
test
pop
sub
cmp
les
and
sbb
jno
push
adc
fs
jmp
test
ja
mov
int
dec
xor
mov
fcomp
adc
xchg
xchg
cmp
icebp
jecxz
or
mov
or
adc
loopne
dec
mov
imul
ins
xor
std
sub
inc
test
pop
mov
xor
mov
pop
jns
ret
fsubr
pop
clc
ja
ins
out
(bad)
jnp
dec
div
das
xchg
pop
rcr
and
mov
add
int
shr
inc
mov
or
gs
into
mov
retf
movs
add
jo
sbb
lods
xlat
add
mov
push
out
jb
and
leave
and
arpl
inc
cwde
mov
in
mov
fs
mov
movs
fidiv
iret
jns
sub
or
call
pop
fldenv
cmc
sbb
and
je
fsubr
push
sub
push
or
cmc
div
xchg
(bad)
or
dec
js
sbb
push
inc
push
pop
(bad)
lods
es
icebp
xlat
jle
mov
int
dec
fisttp
jo
push
and
sbb
adc
cmps
xor
push
loope
dec
mov
xor
pushf
jnp
leave
pop
add
mov
mov
cmp
fmul
add
mov
mov
jl
call
popf
call
repnz
jle
or
dec
add
int3
scas
cli
pop
(bad)
addr16
cmp
or
xchg
test
pop
sbb
(bad)
push
push
jns
std
adc
test
pop
icebp
scas
sti
xchg
test
lock
std
mov
cmp
fwait
dec
fcom
lds
dec
outs
pop
call
fimul
push
stos
in
(bad)
lahf
jae
lock
aas
rol
ja
pop
cmovb
cdq
rcr
push
ja
test
mov
and
fxch
push
adc
dec
jo
push
pavgw
dec
into
mov
mov
rcl
push
fldl2e
inc
sub
lahf
sbb
aam
push
in
(bad)
pop
fistp
out
sbb
dec
and
aad
sub
pop
add
cwde
fcomp
es
push
sbb
clc
test
pop
add
inc
shl
mov
or
xchg
das
adc
push
addr16
mov
push
jbe
ins
xchg
popf
int
adc
fadd
pop
push
ficom
outs
sbb
push
add
(bad)
fdiv
addr16
mov
mov
aaa
mov
sti
dec
pushf
and
rcr
xchg
movs
es
cmps
push
jmp
push
pop
test
add
pop
xchg
in
call
dec
mov
cmp
pop
pop
or
mov
sbb
ins
xchg
sub
push
and
mov
dec
jp
xchg
js
push
jo
push
div
mov
and
xchg
ins
mov
mov
jo
or
dec
sbb
add
mov
popa
lods
cli
call
and
adc
pop
scas
sbb
mov
adc
out
xor
mov
push
or
ret
push
sbb
xchg
js
out
jg
mov
sub
lods
popf
dec
mov
(bad)
fisubr
div
nop
in
or
xor
push
shl
xor
cwde
fs
jbe
sub
in
inc
cmp
or
xor
aas
xor
ret
mov
pop
jl
jmp
adc
retf
in
add
iret
xchg
mov
in
mov
adc
or
mov
test
or
mov
mov
and
adc
jge
std
mov
(bad)
xlat
ficom
xor
scas
mov
push
lock
and
sbb
call
sbb
movhps
test
outs
leave
jg
cmp
test
imul
ret
or
fcmovnb
pop
and
sti
adc
imul
sbb
cdq
pop
jnp
push
xchg
iret
inc
push
pop
cmp
mov
pop
cmps
add
pop
jg
dec
jle
ins
cld
ja
push
shl
cmp
sub
repnz
pop
loopne
xor
xchg
lahf
mov
sub
shl
pop
cs
sub
mov
mov
push
inc
sub
xchg
pop
add
xchg
repnz
xor
add
adc
pop
test
mov
sub
out
xchg
pushf
add
xor
or
fwait
push
out
mov
mov
int3
sets
or
retf
imul
mov
cmp
inc
test
(bad)
call
gs
sbb
and
ret
push
add
stos
xor
jecxz
pop
dec
loopne
push
(bad)
test
xchg
jae
pop
mov
test
(bad)
sbb
inc
sbb
shr
clc
(bad)
add
(bad)
mov
imul
add
test
int3
mov
add
or
mov
ins
xchg
dec
xchg
mov
xor
jbe
lock
loopne
mov
std
iret
inc
mov
fmul
pop
xlat
movs
mov
cmps
cwde
xchg
pop
push
xor
jle
in
jb
(bad)
es
pop
(bad)
dec
or
in
sbb
std
fcmovnb
int
mov
repz
and
sub
aam
mov
sahf
jmp
jnp
mov
lods
enter
repnz
mov
std
pushf
mov
add
jns
pop
sbb
ds
mov
je
(bad)
fsubr
mov
mov
mov
mov
pop
repnz
out
aam
pop
pushf
adc
jbe
jmp
lods
adc
add
inc
outs
cmps
pop
mov
inc
add
cmps
cmps
sbb
pop
adc
cmp
jl
aas
fs
imul
into
adc
adc
(bad)
dec
stos
pop
shr
inc
add
add
rol
mov
loopne
mov
shr
inc
fstp
test
stos
popa
add
and
inc
fst
(bad)
mov
xchg
retf
ret
fwait
adc
cmp
pop
mov
xchg
shl
mov
pop
jmp
mov
xchg
ins
xchg
popa
xor
cmp
(bad)
and
das
cmps
add
mov
popf
push
mov
inc
repnz
je
nop
add
mov
fisubr
pop
test
pop
ins
int3
pop
xor
leave
sahf
test
rol
aas
push
out
pop
jl
aas
jl
and
call
gs
test
mov
cmp
mov
pusha
(bad)
sub
outs
leave
mov
or
jg
idiv
cmp
dec
xor
div
cli
xor
inc
jecxz
fcom
js
sahf
repnz
push
(bad)
push
mov
sbb
add
in
mov
push
jne
out
mov
xor
imul
loop
xchg
dec
sbb
test
xor
add
push
nop
xor
push
cld
xor
inc
rcl
mov
(bad)
arpl
mov
ficom
jl
scas
add
jmp
into
and
fs
(bad)
aad
and
mov
jns
xchg
inc
daa
jo
pop
int3
(bad)
scas
push
fwait
xor
jo
jnp
retf
jno
jp
mov
cwde
fisub
and
xchg
cli
push
jne
out
mov
in
dec
fucomip
cmc
das
jmp
and
jo
push
sahf
clc
add
mov
in
push
mov
dec
adc
cmps
pop
mov
or
mov
mov
pushf
(bad)
and
pop
mov
lds
sub
hlt
pushf
jae
popa
into
sbb
inc
imul
xor
mov
inc
popf
xchg
ret
ja
sub
mov
popa
sub
mov
outs
cwde
std
loopne
data16
pop
adc
repz
cmp
inc
xor
lock
iret
sbb
xchg
xchg
sbb
(bad)
cmp
aam
arpl
or
dec
out
shr
adc
ss
ret
jl
sub
cdq
dec
loop
mov
das
fs
xor
pop
sbb
(bad)
sub
sbb
and
pop
enter
and
or
add
adc
xchg
stc
push
xor
push
out
xor
das
and
pop
enter
mov
add
fadd
push
scas
xor
(bad)
push
mov
lods
and
adc
pop
in
cmp
sbb
ins
test
jae
(bad)
or
int
movs
repnz
or
sar
push
pop
gs
cmp
jbe
mov
mov
sbb
in
movs
shr
les
mov
cmp
aas
xlat
inc
push
sti
ja
add
das
jbe
jp
xor
or
in
cmp
ins
iret
inc
mov
(bad)
aad
sti
cmp
je
mov
je
jo
rcl
inc
xor
leave
scas
pusha
cld
ds
in
sbb
push
std
add
xchg
or
ficomp
mov
mov
(bad)
add
ins
lds
push
int3
rcr
mov
push
or
xor
(bad)
imul
cmp
and
retf
in
inc
jb
test
push
pop
pop
or
not
pop
dec
jb
lock
xchg
sbb
sub
and
push
add
cmc
mov
push
mov
sub
sbb
loop
mov
push
jbe
into
retf
add
test
call
ins
xor
xor
sub
dec
ins
push
(bad)
fst
cmp
mov
fild
imul
jb
push
loope
sub
xor
pop
nop
cmps
test
test
call
and
adc
push
rcl
mov
push
daa
xor
inc
push
xor
aas
pop
imul
repz
outs
repnz
cmp
xchg
je
jmp
fimul
xchg
hlt
call
fisubr
and
sbb
rcr
mov
ja
mov
dec
scas
enter
test
retf
aad
test
shl
xchg
xchg
es
or
push
xchg
bound
out
(bad)
ror
mov
les
push
shl
sub
scas
cmps
sbb
movs
mov
in
cmc
ins
mov
popf
push
popf
pop
fnstcw
push
mul
std
push
pop
xchg
into
xrelease
dec
add
rcr
scas
ret
jns
and
pop
pop
adc
xor
push
hlt
in
repnz
cmp
repnz
fwait
inc
mov
aad
push
mov
ds
jnp
leave
sbb
into
xchg
out
inc
ins
sub
stos
cwde
cs
out
outs
inc
inc
cmp
or
in
cmp
ins
nop
jno
out
or
xor
adc
pop
cdq
lods
popa
adc
sbb
xchg
loop
enter
popf
sub
fistp
es
push
mov
pop
clc
mov
or
jae
inc
sbb
jb
add
test
out
test
pop
lods
loop
inc
fincstp
jns
fstp
xor
dec
mov
inc
push
jmp
pop
pop
push
cmp
pushf
fisubr
ss
jg
cmp
xchg
mov
lahf
nop
push
outs
cmp
das
or
repnz
dec
push
and
mov
sar
test
inc
jl
(bad)
mov
dec
sbb
test
dec
retf
mov
jbe
out
xchg
loopne
pop
outs
inc
add
mov
jmp
push
xchg
lods
add
idiv
xchg
iret
outs
pmulhw
int3
sar
pop
cmp
out
ins
add
push
push
mov
xchg
daa
xor
adc
sub
dec
mov
xor
mov
or
mov
fstp
lods
add
shl
fcom
loop
outs
out
mov
(bad)
out
pop
fiadd
fs
sti
in
xchg
imul
dec
sbb
shr
jo
lar
imul
in
mov
stos
loopne
popf
mov
mov
cmp
or
fidivr
aam
scas
sbb
scas
cmps
outs
dec
xor
out
jne
lods
push
sbb
dec
xor
outs
pop
mov
sub
mov
ror
or
jns
in
(bad)
jmp
addr16
in
daa
sbb
outs
sti
and
jmp
jg
push
mov
out
mov
out
hlt
enter
imul
dec
sbb
xchg
shl
sbb
mov
sbb
popa
jns
out
xchg
dec
mov
icebp
out
pop
mov
jbe
test
and
sub
pop
sub
lock
(bad)
(bad)
movs
pushf
aas
ins
jo
dec
sti
xor
je
imul
mov
cld
sub
lahf
pop
adc
fisttp
pop
std
div
nop
mov
mov
jp
outs
mov
mov
pop
stc
xchg
xor
adc
pop
adc
or
cmp
pop
lea
sbb
imul
cli
sbb
add
fld
rcl
and
xchg
hlt
jmp
sbb
neg
mov
mov
mov
mov
outs
in
add
jnp
jle
cmp
ror
xchg
mov
ja
mov
or
adc
mov
jo
mov
cmp
clc
mov
lock
mov
dec
ds
xchg
mov
cmps
inc
enterw
repz
gs
sub
outs
(bad)
cmp
add
jbe
mov
cld
jp
push
jnp
test
mov
xor
aaa
es
loopne
lods
dec
(bad)
cli
gs
push
jle
ins
ja
jecxz
addr16
fstp
pop
adc
jp
cmp
sbb
xlat
loope
loopne
mov
adc
test
mov
lds
push
das
inc
inc
inc
add
cmps
pop
add
fsub
jle
inc
mov
mov
(bad)
xchg
outs
fs
xor
ret
mov
mov
test
dec
fs
popf
dec
test
data16
adc
xlat
jmp
inc
jns
mov
enter
jbe
push
xchg
cmp
xor
shl
and
dec
push
cmp
xor
inc
cdq
out
lahf
sub
(bad)
inc
cmp
jmp
leave
(bad)
jns
pop
fldpi
retf
dec
cmp
pop
aam
ret
outs
das
psubd
clc
xchg
scas
push
jp
cmps
ds
(bad)
push
fmul
in
xlat
(bad)
out
ins
jae
stos
imul
enter
into
or
sahf
lds
push
push
ficom
and
lahf
aas
xchg
call
loopne
inc
xor
lock
dec
imul
icebp
and
mov
sbb
ins
or
cmps
push
test
jp
mov
ret
ins
jl
imul
pop
lock
push
jmp
mov
cmp
jne
sbb
lock
mov
inc
cmp
jp
retf
cmp
sbb
or
aas
mov
(bad)
push
and
repnz
cmp
or
pop
and
iret
stos
jnp
sti
mov
lahf
and
pop
mov
pop
add
push
adc
out
pop
adc
neg
push
jmp
fidivr
enter
jo
(bad)
leave
cli
jge
xlat
cmp
retf
retf
lahf
sbb
aaa
div
cmp
arpl
xchg
mov
loope
and
aam
lds
mov
inc
mov
pop
xlat
ins
inc
mov
test
push
outs
mov
push
add
or
loopne
stos
shr
cs
xchg
sub
lahf
movs
jg
inc
sbb
ja
dec
adc
dec
or
sbb
dec
lds
mov
inc
push
lods
cld
mov
push
(bad)
in
sub
aad
push
ror
and
ret
test
outs
sub
cdq
outs
int3
dec
sbb
and
(bad)
and
xor
add
add
test
mov
rcl
mov
pusha
inc
jmp
mov
js
fadd
cmp
xchg
or
jl
lahf
ins
out
movs
inc
and
dec
push
mov
loop
repnz
je
int
data16
bound
xchg
mov
jae
lods
add
ror
movs
sub
out
or
pop
and
xchg
jb
aaa
mov
dec
out
add
shr
fisubr
outs
push
retf
int3
repnz
push
out
jb
ja
xchg
js
push
xlat
jmp
sub
movs
retf
(bad)
scas
mov
mov
mov
jl
pop
aas
hlt
push
sar
adc
(bad)
jne
aas
(bad)
pop
cmp
mov
rcr
adc
pop
and
jl
ins
xchg
scas
outs
(bad)
sti
xor
cwde
cmp
xchg
loopne
sub
imul
call
pop
xor
fwait
sahf
mov
sub
sub
push
ret
mov
icebp
into
ja
popf
inc
mov
or
call
push
xor
lods
sub
dec
add
adc
int
or
dec
pop
das
retf
sbb
fild
jmp
cdq
pop
pusha
shl
add
push
jl
cld
repnz
jbe
inc
xor
jns
add
shl
sbb
sti
sub
jge
test
fdivr
jg
scas
loopne
pop
mov
fnstsw
and
add
loop
loop
mov
dec
push
clc
fbld
mov
adc
cmc
ficom
mov
inc
sub
and
xchg
add
xor
or
xor
daa
mov
jle
es
add
dec
mov
mov
and
cmp
loopne
jl
test
inc
xchg
xor
into
(bad)
cmp
push
push
add
add
stos
bound
retf
sub
out
test
test
adc
and
fs
adc
sbb
outs
mov
daa
dec
out
sub
mov
repnz
les
add
push
fwait
cmps
js
dec
hlt
daa
imul
dec
dec
push
adc
adc
in
div
cmp
mov
lahf
xor
cli
adc
jns
add
adc
jp
xchg
lods
daa
jecxz
adc
sub
sbb
iret
fcomp
hlt
adc
jge
inc
adc
out
cwde
into
cli
fldenv
add
scas
(bad)
dec
pop
sub
jnp
adc
ja
in
xchg
xor
adc
(bad)
and
jo
mov
mov
mul
call
out
pusha
adc
jecxz
bound
sub
sub
(bad)
int
xchg
xchg
into
iret
mov
lea
cmps
push
ret
pop
xchg
mov
adc
test
scas
xchg
dec
push
and
or
into
fstp
sbb
push
mov
outs
loopne
adc
add
mov
fnsave
retf
sub
outs
aad
cmp
pop
cmp
jmp
inc
sub
or
aad
in
mov
mov
fst
cdq
jns
daa
push
inc
cli
xchg
sahf
push
mov
mov
push
xchg
stc
xchg
sbb
add
mov
stc
imul
sbb
aam
call
rol
pop
jmp
or
push
and
mov
(bad)
ja
(bad)
and
hlt
cwde
out
test
sbb
xchg
dec
inc
not
popf
test
das
rcr
js
jecxz
out
cld
(bad)
sbb
loop
and
inc
out
mov
sbb
div
add
and
mov
mov
bound
dec
mov
mov
retf
or
arpl
mov
dec
xor
fwait
mov
add
imul
pop
cmp
add
mov
mov
and
mov
adc
(bad)
(bad)
push
loope
jecxz
call
sti
mov
in
xchg
inc
je
xchg
xchg
arpl
push
inc
pop
inc
dec
inc
pop
dec
je
fs
jb
mov
adc
add
inc
test
jnp
adc
test
mov
stos
sub
jbe
lods
push
mov
add
and
sti
pusha
sti
retf
add
pop
adc
or
call
fsubr
push
icebp
iret
in
sub
cs
ins
cmp
inc
cwde
adc
or
fwait
int
leave
outs
or
or
adc
ins
dec
sub
inc
std
push
inc
(bad)
mov
mov
cmp
xor
icebp
mov
mov
imul
dec
sti
xchg
ds
sub
push
dec
pop
jmp
cli
aam
leave
aad
push
or
imul
jbe
mov
cmps
cdq
pusha
adc
sahf
xchg
int3
fdiv
pop
fld
sub
sub
fdiv
and
loopne
pop
arpl
and
sub
fisubr
popa
mov
retf
xor
into
jle
cmp
sub
lahf
jno
ins
add
(bad)
daa
push
cmp
add
or
lods
stos
fcom
mov
xor
adc
(bad)
in
pop
mov
jmp
pop
or
cmp
sbb
aas
cbw
mov
sbb
mov
shl
iret
cdq
loop
dec
outs
push
adc
popf
add
cmp
and
inc
test
(bad)
icebp
icebp
data16
sti
cmps
sahf
stos
sahf
fs
and
mov
call
jbe
cmc
icebp
mov
mov
ss
imul
ss
xor
ret
push
enter
push
mov
arpl
call
out
xchg
cmp
clc
xor
(bad)
xor
psubsb
(bad)
loopne
mov
or
mov
inc
or
mov
div
jmp
mov
inc
mov
mov
xor
mov
in
ret
cmp
jle
retf
xchg
add
push
dec
pop
cs
jnp
sar
in
call
cdq
int
fdivr
sbb
in
out
pop
push
hlt
and
int
adc
pusha
cld
dec
jl
cmp
(bad)
out
sub
repnz
fidivr
rol
jmp
movs
out
fst
retf
push
iret
arpl
addr16
sar
test
jmp
add
xor
pop
mov
ins
in
lahf
aaa
retf
clc
mov
dec
popf
in
retf
out
adc
push
clc
push
(bad)
rcr
das
hlt
pop
pause
push
push
jo
mov
hlt
cmp
mov
call
xchg
cmp
or
add
xchg
jns
xchg
mov
(bad)
mov
and
mov
mov
scas
sbb
jne
das
pop
ret
rcr
xor
jns
int
and
jnp
(bad)
fdivp
(bad)
in
pop
jo
mov
icebp
sub
movs
cmp
ja
mov
xlat
xor
push
enter
das
push
mov
fwait
cs
adc
iret
cmp
and
add
not
rcr
and
(bad)
sbb
jne
jle
cld
clc
push
repnz
xchg
shl
cmps
cli
jno
in
mov
mov
dec
jg
retf
jp
(bad)
xor
sub
in
dec
call
cld
jecxz
ret
push
rcr
aam
mov
mov
mov
test
cmp
mov
out
bnd
inc
or
test
into
loopne
and
and
mov
push
mov
dec
xchg
sub
mov
and
rcr
inc
out
sbb
mov
enter
xor
(bad)
(bad)
or
popf
popf
jp
or
mov
or
stos
adc
leave
test
loop
stos
xor
test
inc
pop
and
sub
push
in
es
and
push
xchg
xlat
xchg
push
les
pop
out
and
dec
clc
xchg
mov
in
sub
adc
pop
(bad)
in
dec
inc
mov
mov
cmps
repnz
clc
aaa
sub
xor
icebp
or
cs
pop
cmp
mov
test
and
in
add
push
imul
cmp
jmp
cmp
push
pop
xchg
stos
sub
imul
enter
jo
jbe
mov
iret
jne
rol
mov
push
out
fs
fdiv
aaa
lods
fwait
test
int
dec
sbb
dec
mov
cwde
(bad)
out
aam
sbb
ss
adc
cpuid
js
or
idiv
cmp
div
xor
das
movs
enter
cdq
and
neg
xchg
out
lods
push
imul
gs
push
xor
daa
push
jl
test
arpl
or
in
sub
cdq
outs
inc
mov
(bad)
repnz
mov
loope
outs
and
push
lahf
mov
add
or
mov
and
(bad)
(bad)
repz
cmp
adc
pusha
adc
int3
adc
pop
and
sbb
xchg
inc
cs
aaa
imul
or
je
pop
adc
dec
(bad)
imul
addr16
arpl
add
mov
dec
sub
jno
sub
cmps
add
jl
pop
mov
cwde
lds
adc
adc
add
call
pusha
cmps
adc
sahf
push
cwde
xchg
and
xlat
mov
fs
add
call
ror
dec
das
gs
adc
mov
adc
or
or
cdq
sub
push
repnz
test
(bad)
mov
cld
int
ins
clc
mov
xchg
sub
clc
mov
mov
cmp
xchg
jnp
mov
dec
loop
add
int3
push
cmps
into
mov
mov
fidiv
shl
(bad)
jne
dec
inc
jnp
push
mov
add
mov
lods
outs
sub
mov
repz
cmc
pop
lds
cmp
mul
pop
and
or
ss
sar
jecxz
fs
jl
adc
test
jmp
int3
aam
mov
js
dec
or
test
jp
nop
stos
pushf
add
ret
les
sub
leave
in
lds
ins
and
or
sub
sbb
sub
jo
mov
fisttp
dec
jnp
inc
or
sbb
fs
aas
mov
int3
push
mov
inc
mov
sbb
sahf
mov
push
inc
sub
pop
jb
aas
sub
add
dec
adc
push
mov
ret
test
pop
adc
push
cmp
push
ja
add
retf
push
xor
pop
jl
repnz
sub
inc
add
mov
sub
sub
ins
inc
cld
xlat
push
retf
pop
repnz
xor
cli
xchg
push
jle
mov
lds
jnp
xor
mov
mov
fs
xor
mov
pop
inc
(bad)
add
(bad)
xor
fsub
idiv
cmp
jo
xor
cmp
mov
arpl
jae
call
sbb
xor
adc
aad
call
add
cdq
inc
dec
in
jno
sub
adc
fstp
push
sub
push
xchg
xor
mov
loopne
popa
xchg
(bad)
sar
pop
jns
sub
bnd
push
mov
pop
inc
xlat
sbb
stos
pushf
rol
inc
ss
enter
call
sub
push
jae
loop
add
inc
xor
not
push
cmc
sub
jmp
xlat
mov
nop
xor
xlat
push
mov
in
sbb
xchg
cmp
sbb
push
dec
dec
mov
mov
jp
mov
(bad)
out
call
inc
pop
outs
lahf
mov
cs
les
arpl
sub
imul
sub
adc
(bad)
jge
xchg
cs
cmp
push
or
into
mov
pop
push
jo
adc
mov
xchg
pop
scas
hlt
cmp
ins
add
ror
mov
in
jb
push
cmp
mov
or
sub
or
call
fsubr
push
(bad)
pop
jnp
add
adc
xlat
das
outs
xchg
push
inc
call
test
dec
fisub
icebp
shl
jmp
not
aam
mov
add
inc
xor
sub
ins
data16
jmp
sub
sahf
idiv
xor
jbe
out
sbb
pop
enter
pop
sbb
push
xor
inc
mov
adc
xor
xor
jecxz
or
push
mov
push
pop
fidivr
lods
in
push
scas
popf
in
ret
xchg
xchg
add
jecxz
into
not
movs
mov
push
xor
pop
setl
pop
cmc
inc
pop
jl
mov
xchg
adc
arpl
adc
and
cmp
push
xchg
shl
test
sub
fwait
jae
lds
call
std
mov
jne
mov
in
mov
pop
mov
ret
sti
xor
and
dec
lahf
loopne
arpl
mov
lock
jb
sbb
cmp
les
dec
jb
jb
test
or
cwde
xchg
push
xchg
ja
pushf
(bad)
lea
loop
mov
sub
xor
imul
test
jne
jp
leave
inc
xchg
jnp
adc
cmp
or
push
fsub
jnp
stos
sti
retf
retf
mov
add
lods
or
cmp
pusha
mov
xor
push
into
sbb
rcl
xchg
lock
mov
cmc
icebp
xchg
push
pop
cli
jle
es
sbb
fwait
adc
ja
jmp
xchg
inc
xor
test
dec
out
mov
call
fs
push
xchg
and
call
(bad)
lods
fisttp
scas
cmp
popf
sub
add
loope
mov
outs
pop
ss
out
jg
sbb
sub
mov
leave
aas
mov
in
mov
inc
xchg
bound
ret
sbb
jae
adc
sbb
(bad)
pop
stos
cmp
inc
fwait
mov
out
jecxz
nop
jge
cmp
fdivr
jo
mov
in
lahf
add
into
cmp
(bad)
iret
cmp
stc
mov
sbb
jmp
gs
xchg
popa
fbstp
sub
bound
cmp
pop
lock
push
jno
test
xor
and
aad
in
and
adc
rcl
das
sahf
aaa
adc
fdivrp
mov
(bad)
test
ror
rol
movs
mov
stc
mov
mov
mov
xor
and
jb
arpl
repz
(bad)
add
push
ins
inc
cmp
lods
mov
daa
mov
test
int3
dec
sub
cmp
(bad)
je
mov
add
in
lahf
cld
loop
jno
fstp
pop
shl
ss
inc
int3
sub
(bad)
retf
mov
scas
push
int
out
stc
push
test
sub
sbb
pop
cdq
and
jmp
mov
or
repz
xor
cli
xchg
pusha
cmp
xchg
sub
or
sahf
and
aad
adc
or
add
push
int
mov
aas
mov
dec
adc
into
sbb
gs
mov
push
cmp
hlt
jbe
add
stc
jp
push
(bad)
xchg
mov
cmp
mov
xchg
sbb
rcl
ror
cmc
mov
ret
or
out
(bad)
pusha
xchg
dec
xlat
ficomp
inc
jne
mul
outs
add
in
mov
scas
push
shr
lock
adc
loop
xor
std
fadd
and
push
or
ins
ja
fwait
mov
cmps
mov
(bad)
pop
aam
stos
je
mov
in
adc
adc
(bad)
push
and
fmul
aaa
pop
sub
sbb
push
mov
sbb
pop
imul
push
pusha
daa
and
ins
mov
pop
jae
mov
(bad)
aas
xchg
pop
dec
dec
cld
nop
and
sub
cwde
aas
cwde
aam
je
or
movs
lods
pop
neg
out
jb
xchg
ds
push
sbb
and
sbb
hlt
pop
fistp
push
mov
mov
fnstsw
js
fist
inc
out
sub
test
jne
stos
dec
sbb
jbe
mov
fs
add
dec
sbb
sub
int3
idiv
test
je
cmp
into
ins
jae
mov
loop
and
fisub
xchg
xchg
mov
xlat
mov
rol
mov
cs
cs
ins
push
mov
retf
sbb
retf
aam
dec
cwde
lahf
mov
mov
call
mov
jno
xor
test
mov
cdq
or
jp
mov
mov
cmps
test
jbe
sbb
or
adc
popf
mov
dec
inc
sbb
inc
cli
xor
pop
loop
retf
pop
cmp
stc
inc
mov
div
sub
not
inc
jnp
popf
jge
xor
mov
test
or
mov
lds
dec
arpl
cmp
rol
nop
mov
xor
sub
loope
ficomp
ret
imul
or
mov
xor
aam
ds
or
das
movs
and
vmulss
test
leave
xchg
push
push
rcr
jae
shl
xchg
cld
xor
ins
or
int
sbb
cmp
add
fisubr
pop
out
addr16
xchg
sbb
retf
lahf
in
adc
rcr
(bad)
mov
mov
cld
xchg
cmp
sub
xchg
aaa
xor
inc
push
lods
fdivr
movs
call
not
sub
sbb
nop
jp
sub
dec
ins
adc
xor
push
sbb
retf
cmp
nop
push
inc
xchg
neg
rol
lods
push
jp
pop
and
pop
jb
and
pop
mov
jmp
mov
mov
cmp
and
dec
inc
fnclex
or
pop
sbb
push
xchg
sbb
push
add
pop
ins
xchg
inc
and
mov
fsubrp
mov
cli
not
ffree
(bad)
mov
mov
xchg
inc
and
and
enter
mov
cmps
xor
mov
push
cld
jmp
sbb
jno
cld
pop
xor
ret
push
dec
das
xor
sub
aam
shl
jle
movs
mov
pop
and
pop
fldenv
xchg
cli
leave
fsubr
ret
or
cmp
push
mov
cmc
fwait
mov
pop
lods
repz
mov
test
cmp
pop
xchg
jecxz
aam
mov
sub
mov
inc
push
sbb
dec
push
lds
add
shr
vmptrld
sti
sbb
retf
pusha
sub
popa
jle
lds
mov
gs
sbb
jne
mov
cmps
call
rol
shl
ss
out
aam
jae
jae
gs
gs
push
ins
into
sub
jmp
(bad)
push
push
rol
retf
mov
fiadd
inc
fist
mov
pop
or
in
push
sti
mov
retf
xchg
test
cmp
scas
test
(bad)
stc
aad
mov
sbb
xor
imul
fisub
xor
pop
test
fisttp
jb
stos
mov
mov
push
fisub
fcmovnbe
push
lea
pop
pusha
mov
pop
call
shr
test
or
sub
sub
leave
test
sub
cdq
xchg
aad
(bad)
mov
xor
lods
and
sbb
add
mov
pop
retf
pop
mov
pop
hlt
test
out
js
jb
add
out
mov
adc
mov
fstp
stos
mov
jne
movs
mov
ja
push
cmp
sbb
pop
or
xchg
push
retf
loope
sbb
js
(bad)
das
add
add
out
pop
lock
mov
stos
popa
cmp
mov
sbb
mov
mov
retf
ficomp
and
pop
mov
inc
dec
mov
scas
(bad)
scas
jmp
add
in
push
std
and
dec
cli
pop
icebp
popf
inc
sti
inc
mov
aad
inc
mov
repnz
sub
or
ss
lock
aaa
mov
or
mov
(bad)
and
ins
sub
xchg
iret
ins
arpl
mov
inc
cmp
test
sub
dec
mov
inc
jno
mov
bound
push
inc
fwait
in
(bad)
std
rol
mov
xchg
cmp
xor
cmps
int3
(bad)
xlat
popa
fld
sbb
gs
dec
or
pushf
cld
repz
ins
xor
ret
mov
mov
dec
push
sbb
loopne
sbb
sub
(bad)
xor
nop
mov
in
inc
mov
scas
fld
test
gs
push
xor
xchg
cwde
out
ins
lods
inc
pop
add
jp
push
add
mov
mov
pop
jo
mov
mov
ins
xchg
jecxz
jle
xchg
sub
dec
pop
add
iret
adc
dec
scas
adc
std
ucomiss
das
cmp
pushf
aaa
sbb
test
cmp
imul
inc
mov
mov
and
cmp
stc
inc
ror
xchg
gs
clc
js
jle
test
rcl
movs
cmp
mov
cld
mov
jmp
daa
out
adc
aaa
jl
lahf
mov
sbb
call
adc
sbb
sub
and
sub
or
xor
inc
sbb
cmc
aad
ficom
test
shr
popf
jae
xlat
(bad)
adc
pusha
adc
or
pushf
dec
in
push
aaa
lds
(bad)
fisubr
nop
push
sub
mov
lock
dec
sbb
and
dec
push
outs
aad
sti
push
js
xchg
mov
ss
xor
jl
dec
and
jne
cmp
xchg
jno
stos
pop
inc
mov
aas
sbb
inc
sbb
das
xchg
in
(bad)
dec
jae
cmp
xor
jmp
mov
repnz
cmp
jle
cmc
pop
inc
push
or
das
jmp
cmp
(bad)
jmp
aad
aad
sub
fisub
and
push
call
fimul
inc
pushf
cs
dec
pop
push
inc
or
daa
popa
fs
xor
inc
jbe
adc
jp
lods
stos
push
xor
std
push
aam
mov
jecxz
add
data16
scas
add
shr
cmp
xor
nop
leave
jb
js
test
movs
div
popf
mov
mov
inc
fwait
aam
leave
pop
sub
and
popf
popa
xor
cmp
pop
pusha
sub
scas
push
cmp
and
mov
mov
adc
cmp
aaa
jge
push
sbb
pop
mov
sbb
mov
lds
cld
or
addr16
leave
xor
sub
lahf
mov
pop
sub
adc
add
sub
sub
mov
inc
dec
and
fsub
enter
cs
aam
jp
arpl
ret
ja
mov
push
dec
fnstsw
xchg
in
xor
sar
xor
(bad)
fcomp
mov
sub
jne
je
and
pop
test
mov
mov
or
adc
(bad)
addr16
and
sbb
(bad)
adc
test
mov
jno
mov
jg
aaa
les
push
and
xor
push
idiv
pushf
lock
push
push
mov
or
fistp
leave
and
xlat
mov
xor
rcl
das
adc
ret
cdq
push
in
fistp
test
pop
in
ins
xor
(bad)
jmp
push
out
sub
out
mov
inc
mov
mov
test
stos
inc
sahf
sar
xor
(bad)
fiadd
jmp
dec
out
ja
fstp
and
push
and
add
aam
js
stc
pusha
sbb
sbb
inc
ja
cmp
mov
aaa
jnp
fwait
(bad)
in
aas
dec
in
aas
mov
popa
inc
fldcw
stos
pop
xchg
mov
les
out
retf
in
push
pop
mov
pop
int
push
gs
dec
ja
mov
(bad)
xchg
cmp
jg
das
mov
pop
inc
in
xchg
and
jae
(bad)
sub
mov
mov
cmps
xchg
inc
mov
add
mov
popa
xor
or
sub
rcl
xchg
int
mov
mov
xchg
(bad)
xchg
cs
outs
rol
fcom
push
pop
mov
sahf
cmp
pop
jp
and
pop
ins
cmp
imul
add
xchg
mov
inc
xor
cmp
dec
add
hlt
out
clc
or
mov
xlat
(bad)
scas
pop
cmp
dec
xchg
stos
pop
mov
lds
push
jb
mov
lea
iret
pop
gs
out
mul
mov
dec
sub
bound
add
mov
add
xor
xchg
jo
add
fwait
jae
mov
mov
dec
loope
nop
sar
into
addr16
mov
sub
pusha
mov
or
in
mov
into
out
or
stc
fcom
cdq
push
imul
rcl
ins
xor
(bad)
jb
and
in
inc
icebp
xchg
push
(bad)
in
push
call
push
retf
mov
xchg
ins
imul
and
pusha
retf
inc
(bad)
lods
pop
neg
mov
dec
mov
lds
cs
aam
fldcw
rcl
fisub
cmp
cmps
push
push
xchg
inc
jae
mov
call
push
test
pop
dec
jno
leave
or
rcl
push
mov
inc
test
add
es
add
int
lods
stc
xchg
mov
sub
rol
inc
mov
cmp
(bad)
fimul
cli
(bad)
fild
pop
lods
push
js
xchg
test
(bad)
dec
cmp
sbb
dec
pop
or
ja
pop
daa
push
dec
call
fadd
shr
push
add
cmp
dec
mov
fcomip
pop
xor
pop
test
mov
out
fsubrp
cmps
sub
(bad)
pop
imul
call
cmp
push
cmp
sub
push
(bad)
cli
xchg
fisubr
aam
out
mov
xchg
ins
lds
cmc
js
or
xor
sub
inc
cmc
pop
dec
repz
mov
push
and
fsub
call
(bad)
jg
xchg
into
cmp
jbe
inc
pop
hlt
icebp
fidiv
pusha
mov
js
dec
inc
(bad)
push
push
mov
(bad)
les
mov
push
ins
sbb
inc
cmp
or
daa
sti
inc
test
push
dec
ss
adc
pop
jge
sub
adc
inc
aaa
cmp
pop
push
daa
cld
dec
sub
xchg
xor
(bad)
dec
mov
ret
mov
xor
in
cwde
mov
dec
xor
push
and
jbe
xchg
dec
sbb
mov
xor
lea
push
into
popf
cmps
inc
pop
(bad)
in
enter
jbe
dec
lods
and
(bad)
cmp
push
pop
mov
pop
push
fs
and
push
popf
enter
stos
add
aas
mov
jg
call
outs
cmps
ror
cmps
in
cmps
and
sub
mov
mov
mov
inc
adc
adc
ja
sbb
stos
jbe
mov
xor
sbb
data16
push
rol
(bad)
rcr
and
cmp
js
adc
sar
outs
lods
inc
ins
bound
mov
cmp
add
ins
sahf
cmps
cmp
loop
mov
mov
or
mov
mov
cmp
sub
fmul
enter
mov
add
mov
fs
xlat
test
xchg
aaa
xor
cmp
out
jge
ins
imul
std
adc
fbstp
dec
add
retf
adc
daa
dec
aam
std
adc
call
xchg
mov
jne
jnp
pusha
push
lea
add
out
leave
loope
pop
inc
mov
mov
les
mov
pop
popf
sbb
mov
adc
(bad)
cmp
sbb
(bad)
cwde
pop
pusha
cmp
or
test
mov
loope
push
jl
cli
aam
xchg
in
xor
neg
sbb
pop
out
out
fs
push
push
or
sub
(bad)
sub
mov
cmp
push
sti
inc
ror
rcl
mov
ins
out
cmp
pop
mov
inc
pop
mov
pop
inc
pop
cmp
stc
mov
call
fdivrp
mov
movs
in
xchg
idiv
(bad)
mov
and
jg
out
test
mov
jae
cmp
nop
js
cmp
sub
mov
jo
and
popa
add
cs
inc
pushf
xchg
inc
jle
adc
addr16
jp
xchg
or
dec
push
aam
mov
xchg
call
ret
and
inc
inc
cmp
cmp
lea
add
cmp
in
test
xchg
mov
or
dec
in
inc
ret
bound
xlat
mov
mov
dec
ret
cmc
jg
bound
adc
inc
ret
in
dec
inc
jmp
mov
(bad)
das
xor
bound
setne
adc
add
mov
sub
enter
jae
call
call
xchg
bound
punpckhbw
fbstp
imul
adc
mov
mov
mov
and
rdpmc
or
popf
jecxz
push
mov
or
iret
call
pop
adc
inc
repnz
jg
jns
cli
xor
(bad)
mov
mov
inc
ss
lea
xor
imul
add
stos
sbb
iret
push
call
nop
mov
int
pusha
call
int3
ror
mov
mov
imul
cmp
mov
xchg
call
arpl
mov
ins
mov
(bad)
lock
js
sbb
jl
or
test
dec
out
ss
neg
loopne
cmps
xchg
sub
dec
int3
cmp
scas
out
lods
outs
xchg
fsubrp
mov
(bad)
div
or
scas
shl
cmp
and
retf
xchg
mov
test
(bad)
push
scas
cli
mov
rcr
sbb
sbb
gs
(bad)
fcomp
inc
leave
add
mov
add
rcl
sbb
mov
call
jno
mov
mov
test
dec
cmp
xchg
push
cwde
or
loopne
dec
jo
outs
dec
mov
gs
adc
sbb
pop
inc
cmps
mov
int3
mov
xor
mov
(bad)
lods
pop
sbb
into
leave
shl
pop
stos
repnz
clc
and
cmps
lods
sbb
or
adc
add
(bad)
stos
std
sbb
ins
mov
aas
stos
xchg
jae
das
inc
fild
sbb
daa
or
fild
pop
pop
push
ret
sub
ja
jl
jno
push
mov
xchg
jno
pushf
out
cmp
inc
jnp
loopne
mov
cmc
movs
into
cmp
paddsb
sub
dec
push
call
add
je
cmps
mov
jne
pop
lods
inc
ror
push
jp
sbb
dec
pop
outs
inc
retf
les
xchg
(bad)
out
arpl
pusha
mov
jg
pop
ss
test
lea
sbb
popa
daa
pop
lea
mov
xchg
data16
mov
sti
call
cmc
sbb
std
xchg
mov
ins
outs
cmc
into
cmp
call
test
out
mov
js
hlt
fdivr
sub
enter
adc
mov
lods
shl
add
sbb
and
jno
push
push
cmp
inc
outs
mov
jae
push
stos
stos
and
fs
adc
pop
rol
fs
jg
mov
xor
cmp
cli
stos
imul
mov
dec
jo
mov
mov
cmp
xor
icebp
or
cli
repz
icebp
call
ret
jo
aam
sbb
arpl
xor
inc
xchg
ret
jmp
enter
test
adc
lock
cs
push
(bad)
adc
and
pop
(bad)
pop
pop
cmp
nop
sub
add
pop
mov
xor
fwait
mov
push
iret
sub
mov
add
retf
icebp
sbb
cs
adc
cmc
retf
(bad)
into
loop
mov
adc
pop
hlt
jge
jnp
sub
call
stos
ja
(bad)
xor
xchg
dec
mov
(bad)
lods
pusha
cmp
ret
cmc
jnp
or
push
add
mov
inc
in
(bad)
jns
pop
xor
enter
dec
xchg
jge
pop
jmp
iret
pop
clc
add
inc
retf
aam
jnp
daa
fsubrp
and
pop
out
mov
xchg
repnz
sub
repnz
addr16
stos
pop
inc
mov
out
lds
cmp
in
xchg
inc
ins
mov
loope
mov
xor
mov
dec
or
mov
dec
push
xchg
mov
lock
imul
shr
test
inc
pusha
in
xor
jle
adc
adc
sbb
xchg
sub
(bad)
stc
stos
xlat
mov
or
pop
mov
aam
sbb
pop
imul
jmp
xor
sahf
adc
les
xchg
icebp
shr
inc
es
in
call
pop
add
lahf
mov
daa
adc
(bad)
mov
jae
aas
sahf
inc
loop
sub
xlat
mov
cmp
ins
mov
mov
fadd
mov
pushf
out
test
popf
(bad)
leave
popa
xchg
xchg
daa
retf
int
mov
ret
xchg
mov
hlt
mov
imul
mov
cmp
or
cs
push
inc
fidiv
mov
loop
dec
icebp
loopne
cmp
retf
cmp
push
(bad)
push
push
mov
mov
jb
inc
aam
jnp
or
in
push
ss
jnp
jne
jmp
push
jbe
jl
sub
xchg
adc
push
aad
cmp
adc
into
sar
push
cld
add
loopne
jne
sbb
sbb
mov
aas
hlt
or
and
test
ror
sub
cld
pop
inc
sbb
fldcw
jno
jmp
cmp
loope
repnz
idiv
addr16
mov
(bad)
cmp
test
icebp
push
inc
mov
fcomip
jbe
cli
push
jne
js
push
cs
cmc
ins
jae
nop
daa
mov
addr16
push
or
jbe
mov
(bad)
lods
mov
pop
mov
repnz
cmc
push
mov
repnz
dec
jmp
scas
sti
mov
add
jle
iret
and
mov
lods
mov
inc
inc
(bad)
es
retf
xchg
add
test
lods
into
dec
and
fs
stos
pop
retf
aam
or
xchg
add
pop
call
movs
mov
adc
aas
pop
mov
aaa
dec
jecxz
mov
cmp
push
jns
out
cdq
out
pop
stos
add
sbb
repnz
clc
stos
(bad)
pusha
jbe
mov
push
push
enter
ret
lahf
xchg
daa
jne
mov
test
movnti
mov
(bad)
leave
test
add
ins
cmp
mov
xor
(bad)
and
cmp
cmp
and
fcmovnu
dec
mov
js
ja
(bad)
enter
jecxz
sub
mov
jge
jl
mov
icebp
fdivr
fisubr
cmps
cs
adc
sbb
dec
adc
mov
div
mov
jmp
test
sbb
dec
test
jecxz
sbb
push
rcr
sahf
xor
shl
inc
and
mov
sbb
xlat
imul
push
cwde
mov
mov
repz
aas
(bad)
lock
out
and
push
je
ins
retf
mov
xchg
fsub
cmp
shl
sbb
pop
or
test
pop
nop
jmp
das
pop
in
cwde
cmp
xchg
movs
add
xor
pop
push
jno
pop
pop
dec
sub
data16
mov
dec
ret
xlat
call
cmp
pop
in
cmp
inc
sub
les
data16
aad
mov
adc
stos
iret
push
add
inc
add
ds
or
in
xor
icebp
(bad)
or
jbe
cwde
pop
mov
mov
pushf
jno
(bad)
push
out
inc
or
inc
loop
into
outs
push
sub
ss
and
out
ret
sbb
sub
xlat
xchg
lahf
xchg
jo
inc
js
popf
adc
ins
sub
mov
pop
push
(bad)
std
push
push
je
mov
call
xchg
mov
popa
or
ins
push
add
cmp
call
out
dec
ficomp
push
sbb
mov
jne
scas
adc
or
test
rol
in
fs
xor
sub
(bad)
mov
lods
xor
(bad)
les
sub
push
sub
(bad)
xlat
xchg
shl
or
stos
mov
cmp
shr
ins
retf
mov
adc
imul
jae
mov
push
sub
jge
scas
retf
sub
mov
call
and
xor
xchg
push
mov
std
cmp
dec
movs
mov
sahf
out
and
mov
lea
mov
(bad)
adc
inc
push
cmc
mov
mov
sub
out
test
cmps
(bad)
sub
xor
sub
rsm
and
xchg
cmc
aas
enter
inc
fld
cmp
mov
mov
lods
and
xchg
ss
retf
loopne
aam
push
test
aad
pop
fist
cmp
fiadd
push
fs
push
push
add
cmps
jnp
mov
pop
xchg
fstp
mov
xchg
ins
ins
lea
jno
es
or
mov
pop
int
pop
sahf
mov
out
lds
lods
push
dec
xor
jae
test
cli
retf
xchg
test
mov
and
push
add
jge
aam
stos
sahf
or
pusha
jmp
iret
inc
dec
dec
pop
cmp
das
xchg
sahf
lods
sbb
push
outs
loopne
ins
xchg
mov
out
mov
retf
(bad)
in
push
sbb
pop
sub
icebp
or
jo
cs
clc
aaa
or
jo
mov
fadd
aaa
fimul
jp
sub
icebp
das
mov
(bad)
jecxz
xlat
in
cmp
jmp
lods
call
rol
inc
sub
arpl
in
push
retf
mov
sbb
cmp
xchg
xlat
and
cwde
sub
stc
mov
daa
fild
(bad)
xor
or
xor
inc
movs
push
pop
pop
cdq
sub
xchg
repnz
xor
or
adc
clc
adc
xchg
dec
sub
jecxz
push
loop
cmovnp
(bad)
out
out
lods
mov
leave
add
in
sub
mov
mov
(bad)
pop
std
iret
lea
cwde
(bad)
mov
aaa
scas
popf
xchg
repz
push
add
jnp
dec
mov
adc
adc
mov
jge
mov
ror
push
mov
bound
aam
fidiv
sbb
fistp
cmp
sar
sar
jecxz
test
in
rol
bound
test
lea
jns
jne
dec
outs
mov
jle
ins
loope
and
and
cdq
cld
repnz
mov
pop
fsubr
cmovb
scas
std
dec
xchg
test
push
or
movs
test
cwde
push
into
bound
xlat
or
mov
jle
icebp
ffree
cdq
dec
mov
mov
xlat
cmp
stos
add
and
sub
outs
pop
daa
jle
mov
and
add
sahf
jg
repnz
pop
lock
jl
rcr
stos
in
xchg
jp
(bad)
(bad)
mov
xchg
mov
mov
adc
cmps
pop
and
sub
aad
stos
mov
call
loope
mov
jmp
pop
ja
gs
xchg
out
bound
mov
fnstenv
frstor
mov
sbb
ins
inc
sub
in
imul
cmps
or
sti
aas
sub
lea
in
xchg
mov
das
xchg
mov
xor
cmp
inc
jecxz
jmp
movs
mov
xor
pop
es
add
nop
sti
mov
and
fcmovu
inc
je
mov
mov
bound
test
pop
xchg
push
aas
shr
sbb
aam
int3
out
fistp
inc
sbb
mov
test
mov
xchg
aas
test
push
retf
add
adc
push
jge
adc
inc
cwde
mov
stos
jns
xor
bound
xchg
add
das
cmps
les
shl
xor
jo
mov
mov
std
mov
push
clc
fs
fcmovbe
cld
pushf
mov
push
(bad)
cmp
pop
push
jmp
sub
dec
jno
pusha
(bad)
mov
data16
repz
leave
lds
mov
ins
push
enter
xchg
cmp
and
pop
aad
retf
imul
mov
dec
mov
cmps
adc
mov
out
mov
jnp
lds
or
and
mov
cmove
repnz
cwde
xchg
push
pop
ficom
dec
push
sub
out
push
arpl
cmc
push
jns
test
push
sbb
stos
xor
dec
pop
sub
jge
jo
sbb
xchg
test
call
or
mov
mov
sbb
or
inc
mov
xor
sub
cmp
ins
mov
test
ds
out
(bad)
sub
mov
jne
(bad)
rol
lds
lahf
jno
cld
iret
fstp
pop
in
inc
retf
dec
cmps
xor
cmp
ret
shl
push
xor
push
retf
dec
fmulp
inc
pop
rcr
movs
aam
nop
jno
(bad)
in
mov
pop
cmc
push
nop
(bad)
xor
mov
pcmpgtb
clc
pusha
jo
int
mov
bound
and
imul
mov
and
sub
pop
sub
mov
mov
aad
cmc
or
dec
xor
out
lock
popf
xchg
sbb
loop
jg
outs
pop
or
mov
imul
or
or
push
jg
cmp
xor
cmc
xchg
loop
imul
out
cmp
fcomp
inc
mov
add
test
in
(bad)
push
add
inc
imul
or
retf
mov
test
icebp
les
movs
rcl
ins
in
pop
daa
data16
xchg
dec
sahf
dec
xchg
(bad)
cmp
sub
add
push
into
inc
aad
pop
or
in
jns
or
jmp
call
(bad)
stos
add
xchg
inc
or
xchg
outs
dec
jb
cmp
mov
sub
icebp
gs
ss
mov
push
push
mov
outs
push
adc
fild
and
aad
scas
add
push
stos
or
sbb
je
push
mov
mov
cmp
jl
std
push
push
loop
icebp
or
add
pop
das
dec
icebp
push
sbb
push
jg
jp
sbb
add
jle
dec
pop
mov
inc
mov
cmpxchg
xor
xlat
sub
stos
lock
sbb
cld
imul
addr16
std
movs
cmp
push
cmp
xchg
lea
sub
mov
js
fld
inc
pop
addr16
ret
sbb
jl
xor
mov
cmp
pop
outs
lock
lahf
cmps
iret
cmps
scas
inc
mov
add
dec
neg
xor
push
cli
push
xchg
add
cmps
mov
sbb
lock
rol
repz
jmp
cmc
mov
scas
div
mov
add
cmp
das
lods
or
fprem1
xchg
mov
rol
inc
or
sbb
inc
sbb
cld
ret
aaa
(bad)
fnstenv
pop
push
adc
retf
xchg
adc
cmps
xchg
fwait
loopne
mov
repz
imul
xchg
cmp
push
retf
mov
dec
loop
jg
les
fsub
test
js
add
nop
mov
xlat
iret
mov
movs
in
cmp
pop
or
pop
ror
es
push
ret
inc
inc
inc
jnp
aad
sub
test
dec
jnp
rol
or
mov
adc
imul
vpsadbw
sbb
fdivr
ds
movs
das
sub
push
cmp
test
mov
sar
test
mov
or
inc
cmp
test
mov
ficom
aam
xchg
push
mov
sbb
js
jp
(bad)
adc
adc
sbb
xor
jae
mov
addr16
out
jp
mov
outs
stc
movs
mov
daa
mov
xchg
jo
inc
(bad)
out
add
js
or
pop
sahf
call
mov
jnp
pop
bound
push
sbb
int
loop
shl
(bad)
ror
xchg
clc
mov
rcl
ret
xor
or
push
out
jne
ret
fisubr
xchg
inc
outs
adc
xchg
and
rol
inc
or
(bad)
lock
xor
ret
leave
jp
xchg
jg
mov
neg
adc
test
retf
add
ss
inc
mov
jno
stos
mov
(bad)
and
sbb
dec
outs
jecxz
xchg
cmp
test
rcr
mov
mov
pop
dec
push
(bad)
test
cld
sub
jns
cmp
stos
(bad)
dec
cwde
xchg
add
iret
or
or
jmp
mov
icebp
gs
push
dec
mov
cwde
out
jmp
es
cmps
imul
mov
mov
test
(bad)
sub
fisubr
pusha
xchg
bnd
pop
aas
movs
aaa
and
pop
stos
push
jne
sbb
jmp
inc
mov
jnp
in
lds
jae
or
cmc
ins
mov
mov
cmp
daa
adc
and
es
fsubr
and
pop
jnp
or
mov
ja
mov
test
sbb
gs
xchg
in
and
jge
jnp
mov
sbb
fstp
pop
push
jle
jo
jnp
mov
inc
push
sub
xchg
jae
hlt
ds
mov
pop
fwait
call
gs
mov
mov
(bad)
out
adc
push
pop
xchg
popa
icebp
fwait
mov
ror
push
aaa
out
(bad)
lods
xor
in
and
shl
and
test
mov
sbb
mov
or
jl
ret
retf
ins
inc
mov
sbb
mov
xchg
adc
fistp
dec
xor
pop
mul
lahf
jbe
leave
push
(bad)
mov
sub
div
cmp
mov
jl
inc
fcomip
sti
aaa
mov
cwde
mov
inc
(bad)
clc
in
sub
mov
sbb
push
enter
push
mov
jno
push
lods
xchg
imul
mov
(bad)
mov
pop
in
sbb
mov
cmp
sbb
scas
dec
push
and
or
and
loopne
mov
bound
mov
push
push
icebp
mov
jmp
scas
inc
sar
pop
lds
es
in
sahf
js
imul
xor
call
jmp
das
into
add
and
sub
mov
adc
je
or
xchg
inc
mov
pop
cmp
sbb
popa
int3
sub
call
loop
push
jg
js
jae
lahf
in
test
mov
sbb
cmc
mov
xor
cmp
in
nop
and
call
aaa
pop
mov
adc
xor
imul
mov
cmp
add
sub
jge
movs
in
sbb
inc
outs
add
push
adc
jne
fidiv
adc
xor
lahf
or
fwait
xor
das
inc
std
add
enter
jb
xor
sub
popf
cmc
leave
xlat
out
push
xor
inc
shl
stos
popf
cmps
in
dec
cmp
fs
push
stos
mov
lods
mov
leave
int
inc
add
jmp
fidiv
ror
jmp
push
and
scas
fxch
mov
scas
punpckhbw
out
adc
and
hlt
pop
sar
bswap
mov
cmp
gs
(bad)
mov
adc
sub
inc
cwde
pusha
lea
mov
push
or
(bad)
hlt
mov
shr
cli
xchg
cmps
xchg
mov
add
imul
call
arpl
xor
mov
icebp
inc
fisubr
push
not
mov
mov
dec
call
daa
xor
and
pop
and
xchg
repz
inc
sbb
jnp
mov
fwait
inc
rcr
mov
mov
fld
push
jo
mov
jmp
adc
xchg
call
pop
inc
cmove
call
(bad)
rcr
sar
push
add
mov
add
mov
mov
imul
(bad)
out
xchg
fwait
mov
ins
inc
cmps
sti
scas
(bad)
mov
sub
movs
pop
sti
and
hlt
jg
(bad)
mov
cmps
jno
inc
push
ror
mov
adc
fdivr
jle
and
out
scas
or
mov
xchg
aas
push
push
or
jae
and
push
jae
fbld
mov
jmp
adc
mov
or
xor
cmp
xchg
leave
test
shl
xchg
cmp
loop
xchg
sldt
adc
das
dec
sbb
pop
mov
jne
popf
add
std
mov
or
leave
cmp
int
push
fldln2
dec
or
mov
(bad)
xor
fldenv
sbb
rol
xchg
pop
cmp
(bad)
rcr
add
mov
sbb
mov
fcomp
dec
iret
nop
pusha
cwde
dec
sahf
cmp
push
sahf
sub
or
aas
imul
loopne
stos
mov
xor
mov
and
(bad)
sub
int3
mov
cmc
jecxz
ficom
fs
mov
jo
xchg
cs
ins
xchg
mov
aas
inc
pop
mov
rcl
cmp
push
dec
xor
stc
pop
iret
inc
push
sbb
jno
(bad)
fisttp
sbb
imul
movs
mov
sub
movs
lahf
fwait
jno
sbb
jl
dec
std
cdq
fsubr
dec
sub
mov
adc
xor
adc
sub
adc
loope
sbb
and
ins
xor
loopne
(bad)
add
inc
enter
cmps
inc
lods
repnz
in
adc
jmp
mul
test
(bad)
or
pop
inc
movs
pusha
push
lock
daa
mov
pusha
mov
imul
popa
lds
mov
mov
fcomp
and
mov
addr16
sub
movs
out
push
inc
add
pushf
mov
mov
sbb
lods
add
jb
ret
xor
nop
and
rcl
jmp
(bad)
arpl
cmp
scas
add
push
inc
mov
adc
std
cdq
push
(bad)
iret
test
sbb
xchg
cdq
fs
add
mov
add
lods
loop
inc
aad
mov
lahf
xchg
jno
int3
fcomp
leave
jne
imul
jnp
repz
inc
pop
aam
mov
jp
push
dec
imul
(bad)
jmp
popf
xchg
cwde
mov
ret
test
xor
dec
mov
int3
jmp
xor
ret
test
popaw
jmp
adc
inc
sti
retf
cmp
call
movs
inc
inc
in
mov
loopne
or
inc
retf
test
out
fisubr
xchg
push
enter
jg
mov
sti
pop
add
or
scas
add
xchg
iret
or
fbstp
fstp
mov
(bad)
outs
aas
xchg
imul
ret
stos
icebp
dec
aas
jne
jns
popf
fucomi
push
pop
sbb
lea
fs
jg
jae
inc
or
sahf
sbb
xor
arpl
(bad)
data16
sub
sahf
mov
sub
add
stos
test
aaa
sub
dec
dec
xchg
into
sub
mov
movs
mov
sti
pushf
adc
imul
inc
inc
in
shl
sbb
stc
sbb
iret
mov
mov
inc
(bad)
and
ds
inc
nop
and
mov
or
shl
dec
mov
pop
fs
outs
mov
dec
cld
aad
in
test
cmp
and
scas
call
movs
sub
and
loop
inc
fsub
pop
jmp
movs
test
xlat
xor
sbb
mov
cld
and
adc
or
mov
xlat
scas
in
xor
fistp
push
inc
inc
leave
or
leave
cmps
scas
test
mov
pop
adc
jg
mov
fwait
jns
ret
movs
data16
cmp
lods
jge
ficom
dec
cmps
test
and
push
dec
je
xchg
cmps
fild
inc
(bad)
lea
push
and
adc
out
div
(bad)
(bad)
shl
push
daa
jnp
dec
push
mov
dec
push
or
lods
xor
aad
mov
push
adc
ins
popa
fwait
test
jmp
jo
push
mov
ror
push
sub
cdq
xor
add
and
mov
in
dec
mov
inc
js
push
loope
sbb
scas
or
aas
add
xchg
add
jns
cmc
and
mov
jmp
and
jnp
cmp
scas
test
mov
jns
dec
mov
pop
inc
add
popa
dec
cs
inc
aam
sub
aaa
(bad)
in
push
xchg
mov
fldenvw
or
adc
jecxz
test
in
icebp
and
ins
inc
bound
(bad)
and
or
int3
inc
sahf
pop
scas
xor
xchg
inc
xchg
push
and
xor
and
jge
cmp
fild
xchg
push
sbb
push
nop
call
rcr
je
cld
das
jo
or
sub
cmps
mov
aad
jge
les
jo
sbb
movs
(bad)
or
out
mov
nop
int3
adc
stos
inc
sub
pushf
call
(bad)
push
(bad)
ficomp
dec
daa
scas
test
and
inc
xor
scas
(bad)
in
pop
repnz
mov
xor
aaa
sbb
jp
test
xchg
dec
and
sub
push
xchg
out
cmp
mov
pop
pop
minps
mov
scas
push
call
imul
dec
imul
adc
rcl
lods
or
jge
mov
xchg
push
xchg
addr16
push
mov
(bad)
aam
cmp
imul
xchg
in
fstp
mov
stos
adc
xor
adc
fisub
adc
xor
in
pop
iret
shr
dec
aaa
mov
sub
mov
adc
popf
out
push
mov
sub
push
popa
dec
sbb
add
test
in
pop
jmp
repz
pushf
pop
cmps
sub
mov
jmp
xchg
leave
inc
popa
and
xor
shl
mov
mov
sahf
dec
and
cmp
rcl
les
repz
aad
jmp
xchg
dec
push
dec
mov
cld
lahf
push
mov
ja
dec
jl
lahf
dec
sbb
popa
aam
inc
lea
or
(bad)
mov
push
jge
cdq
xchg
loop
js
sub
pop
jns
in
sub
inc
mov
mov
lods
mov
mov
push
test
sub
and
jmp
and
fs
dec
fwait
mov
mov
push
outs
iret
push
xchg
(bad)
jne
cmp
push
or
ss
sti
xchg
fucomp
mov
fistp
(bad)
inc
(bad)
loopne
pop
sub
pop
lods
sub
icebp
or
in
mov
cdq
lock
xor
push
popf
mov
movaps
sub
push
sbb
pop
lds
popa
mov
pop
pop
sbb
push
test
sub
es
out
stos
cli
pushf
push
jle
dec
push
xlat
mov
call
inc
xchg
sbb
shl
dec
sbb
sub
ja
and
mov
jge
ins
bound
xchg
in
test
adc
das
sub
dec
fisttp
dec
sbb
bound
inc
inc
mov
add
jo
imul
pushf
test
inc
sbb
jbe
mov
loope
push
lods
test
sar
call
mov
test
mov
out
xlat
jb
(bad)
push
sbb
dec
adc
adc
cli
js
mov
popf
in
iret
lock
jmp
test
(bad)
mov
mov
adc
xor
(bad)
xchg
or
test
pop
in
push
and
mov
shr
add
fs
or
lahf
mov
push
ins
sub
fisttp
sub
xchg
das
scas
loope
add
mov
mov
ins
addr16
and
xor
xchg
xor
push
push
daa
xchg
js
sar
(bad)
in
mov
repz
out
cmp
out
xchg
in
das
cmp
inc
in
int
add
adc
not
ds
jmp
sub
scas
or
mov
retf
dec
xor
push
cmp
dec
push
fcomp
(bad)
jb
(bad)
test
mov
mov
jmp
push
xor
mov
xor
lea
fs
das
popa
ds
fldenv
mov
fistp
iret
mov
retf
mov
push
cs
data16
push
fld
pop
in
lahf
xchg
push
sub
movs
aad
mov
and
xchg
ret
out
ss
sti
cmp
lea
jae
add
ins
mov
stos
xlat
add
xor
addr16
ja
jle
xchg
iret
sbb
(bad)
in
cmp
fidiv
imul
xor
(bad)
or
(bad)
cmp
fcmovnbe
lods
cmp
jl
shl
add
hlt
jno
and
lock
pop
aaa
bound
inc
(bad)
pop
jb
add
push
or
sbb
push
mov
xor
sbb
daa
jmp
adc
pop
stos
retf
mov
sub
sbb
cmp
into
push
pop
pop
mov
mov
stos
and
mov
stos
sub
inc
xchg
pop
xchg
ret
fisub
dec
(bad)
rcl
add
and
(bad)
xor
dec
in
jbe
(bad)
xchg
jmp
or
xchg
xchg
ins
jb
scas
xchg
jnp
dec
and
xor
xor
sub
pusha
pop
std
dec
(bad)
inc
fs
dec
or
cmp
push
into
fnstcw
jge
cdq
pusha
adc
lods
test
jns
push
pop
adc
push
mov
xor
ins
pop
frstor
imul
(bad)
mov
mov
cmps
add
jne
pop
xchg
xchg
call
lds
or
cmp
and
inc
cmps
jno
and
out
pop
clc
movs
mov
mov
or
je
ds
retf
jae
mov
mov
les
scas
int3
test
or
nop
jmp
call
mov
sbb
mov
xor
fisttp
mov
xchg
rol
cs
mov
jg
add
mov
in
or
ins
int3
ins
lds
iret
mov
and
sbb
jp
lea
cmps
fsub
daa
push
loopne
pop
add
in
jb
dec
sbb
add
xchg
inc
jg
dec
mul
and
mov
shr
xchg
xchg
xchg
inc
std
inc
std
ds
jns
or
in
imul
mov
addr16
das
sub
or
mov
imul
bound
and
ret
out
cmp
fiadd
outs
test
xor
ins
fwait
xlat
int
pop
push
dec
inc
push
inc
(bad)
dec
mov
push
div
xchg
inc
sbb
fimul
xor
sbb
xchg
shr
mov
imul
cmp
movs
popf
adc
jno
imul
or
xchg
(bad)
mov
mul
in
ret
mov
xchg
ins
fwait
clc
enter
sub
rcr
mov
jmp
stos
inc
jp
out
fst
adc
std
jl
mov
or
iret
sub
es
pop
or
push
js
test
int
rol
out
sbb
push
lods
xchg
mov
mov
jo
push
cmp
mov
mov
xlat
pop
cmps
push
adc
sbb
sub
jg
jle
cmps
adc
adc
out
cmp
sbb
pop
in
inc
add
pop
int3
cmp
das
sbb
adc
jmp
aas
inc
test
cmp
aas
sbb
sub
dec
cmp
pop
cli
imul
push
sahf
out
adc
jge
ins
fmul
lds
cmp
ss
in
dec
fadd
jno
or
enter
out
imul
jg
inc
xor
pop
std
cs
inc
lock
jne
xchg
cmp
icebp
gs
loopne
and
jno
(bad)
icebp
jmp
in
sbb
out
aam
(bad)
aam
idiv
and
pop
retf
mov
push
mov
cwde
sub
js
ret
push
sbb
fidiv
popf
rcl
xor
cmp
push
out
sti
mov
loope
xor
push
das
es
scas
xor
mov
mov
dec
repnz
and
push
fld
out
movs
dec
cmps
or
scas
addr16
sahf
inc
sbb
add
(bad)
(bad)
rcr
xchg
shr
pushf
mov
sbb
add
fbld
sahf
(bad)
jle
popf
pop
sbb
or
pusha
pop
popa
lds
dec
leave
mov
pop
outs
in
outs
retf
mov
and
pop
shr
data16
mov
push
out
aad
js
xchg
in
mov
xor
sub
xchg
movs
lods
sub
pop
xor
gs
adc
xchg
retf
add
mov
xchg
test
daa
sbb
and
call
xchg
sub
add
cld
in
outs
adc
mov
out
pop
cmp
sahf
dec
fsubr
xchg
xor
cmp
fidivr
in
jo
mov
leave
or
loope
adc
jmp
adc
push
cmp
and
inc
add
mov
(bad)
fdivr
jp
sub
fsubr
add
push
and
xor
ret
pop
mov
cmp
and
iret
inc
arpl
popf
mov
repz
addr16
inc
in
sub
int3
gs
clc
scas
mov
jb
inc
pop
sub
lods
xchg
or
mov
(bad)
jmp
outs
or
cmp
and
xor
push
dec
aam
cmp
dec
int3
aas
out
repnz
test
inc
and
sub
rol
jnp
les
push
mov
and
or
stos
xchg
push
sub
in
lods
lds
sbb
aas
push
int3
adc
into
xchg
cld
or
dec
xchg
int
dec
inc
rol
aad
dec
loope
fist
cmps
sbb
mov
aaa
jns
ss
and
inc
or
retf
test
sub
add
fsub
(bad)
sbb
jg
xor
jp
mov
mov
ror
aam
loop
(bad)
push
pushf
sub
xor
sbb
ins
xor
push
xchg
lea
dec
cdq
sbb
sub
iret
sub
ins
or
or
rcr
inc
mov
xor
cmps
out
fdivr
retf
test
sbb
inc
or
(bad)
retf
lods
cmp
pop
and
aam
ins
(bad)
sub
stc
mov
shr
push
out
(bad)
clc
jecxz
mov
push
push
cdq
retf
lahf
cmp
mov
jecxz
movs
fist
jbe
ret
call
es
push
imul
rcr
xchg
int
xchg
addr16
sub
pop
hlt
cli
push
add
in
ret
mov
rcr
lock
lock
sahf
lods
jnp
xchg
xchg
add
in
mov
sti
sub
retf
mov
mov
nop
mov
fwait
xchg
pop
cmp
or
sbb
push
cmp
and
das
inc
push
pop
pop
mov
xchg
sti
push
cmc
int
test
hlt
pop
cmp
adc
or
sub
int
jbe
sub
scas
outs
clc
push
mov
lea
inc
xor
xor
jle
mov
cli
adc
pop
push
sbb
mov
add
call
sar
inc
(bad)
mov
adc
dec
mov
push
lock
dec
outs
mov
lahf
pusha
mov
aas
sbb
jne
enter
loope
js
imul
sub
retf
mov
retf
pop
inc
dec
fst
or
les
push
mov
mov
mov
dec
test
cdq
or
jb
mov
nop
repnz
pop
imul
dec
sahf
xchg
mov
pop
cdq
pop
sub
test
inc
aaa
cmp
xlat
mov
cmps
pop
mov
bnd
xchg
test
jne
mul
scas
xchg
jno
aas
fs
aaa
cld
inc
mov
(bad)
mov
jg
push
sbb
xor
leave
js
dec
lea
cmp
imul
sbb
jp
xchg
or
daa
stos
scas
xchg
add
or
iret
mov
push
push
pop
dec
div
inc
shr
mov
in
aas
xchg
pop
mov
fisttp
stc
dec
retf
ja
adc
lds
push
sar
inc
mov
xchg
jae
loope
mov
jg
lods
fild
mov
push
mov
cmps
jl
adc
fldenv
call
shr
mov
imul
jge
rcl
pop
sub
aam
or
xor
and
xlat
xor
cdq
jb
mov
cmp
pop
pop
jo
cs
cmp
sbb
mov
dec
and
pushf
pop
ds
mov
inc
sub
jp
pop
mov
imul
jmp
hlt
sub
aad
cmp
inc
int
mov
inc
cmp
jmp
js
es
mul
jbe
add
rol
sub
or
and
dec
rcl
mov
fs
mov
xor
mov
mov
test
enter
fild
dec
int
outs
pop
cmp
cmp
call
mov
ja
outs
dec
sub
xchg
inc
or
cmp
cmp
sbb
jbe
sub
inc
jne
jp
cmp
add
jmp
or
ss
mov
inc
xchg
es
push
in
out
jp
pop
adc
sbb
push
lahf
test
push
not
or
fwait
push
jne
(bad)
cld
ss
ret
mov
sbb
(bad)
das
imul
and
mov
and
mov
test
jl
push
push
pop
gs
cmps
push
add
out
pop
dec
xor
cmc
mov
mov
jno
retf
add
(bad)
push
pop
and
out
inc
scas
mov
push
fld
push
sti
xlat
push
and
cmp
jnp
push
xchg
out
dec
cmps
inc
fucom
jmp
or
xchg
pop
hlt
cmp
mov
cmp
mov
or
jmp
mov
(bad)
repz
and
std
pop
xchg
push
loop
loope
scas
sub
jbe
cmp
shl
adc
lea
mov
ror
inc
and
push
mov
sbb
inc
rcl
call
adc
inc
fcomp
xchg
loope
lea
test
retf
je
inc
sub
mov
fst
push
fiadd
outs
jle
push
xlat
xor
cmp
daa
leave
fwait
pop
jge
loope
push
fcmovnb
sbb
nop
dec
and
push
dec
jne
shl
pop
call
jecxz
mov
sbb
xchg
fwait
(bad)
ror
push
leave
sub
or
pushf
ss
shl
ja
push
or
imul
imul
add
xor
mov
cmp
std
ja
sub
(bad)
jle
ror
fisubr
xor
xchg
pop
fidiv
dec
pop
mov
mov
stos
stos
outs
push
and
mov
cmp
(bad)
jecxz
iret
sub
pop
or
push
or
mov
(bad)
and
aam
dec
outs
push
sar
and
in
pop
pop
or
xrelease
jmp
mov
inc
sbb
pushf
(bad)
(bad)
and
pop
fsub
mov
stos
pop
out
sbb
xlat
es
imul
xchg
adc
scas
aas
and
or
inc
sub
int
adc
sub
lods
push
mov
popf
mov
inc
lock
push
loope
pop
jb
adc
lods
inc
stos
ja
sti
daa
dec
call
and
xchg
test
mov
or
aas
aas
ret
outs
xor
iret
mov
mov
push
sub
ret
and
jns
stos
scas
repz
ins
pop
fld
xchg
fwait
stos
mov
mov
jle
dec
pop
std
in
icebp
scas
or
xchg
inc
xor
fsub
pop
fisttp
sub
pop
adc
pop
mov
inc
nop
pop
inc
pop
adc
mov
add
xchg
xlat
test
mov
xor
xor
aam
imul
adc
jecxz
repnz
sbb
mov
cdq
jle
pop
repz
les
push
imul
xchg
test
xchg
sbb
(bad)
(bad)
int3
fisttp
sbb
sub
lock
dec
cmps
cdq
dec
xor
scas
cmps
jae
adc
mov
xchg
leave
add
test
and
stos
xchg
cmps
mov
mov
mov
fcomp
adc
ret
push
cmp
test
cld
add
jge
jmp
mov
push
jnp
push
stos
push
xor
ins
cmps
lahf
sbb
cdq
les
in
fidivr
cmp
movs
jg
rcr
sar
jne
xor
or
or
ret
(bad)
mov
or
lock
ss
xchg
enter
xor
adc
add
push
js
mov
jp
adc
dec
xchg
cmps
sbb
cmp
test
sahf
(bad)
stos
mov
pop
pop
mov
test
ret
movs
lahf
cmp
cmp
push
jl
(bad)
xchg
or
xor
push
jno
push
inc
fucomip
test
ins
push
xlat
mov
das
(bad)
imul
jns
ins
sbb
jg
mov
daa
push
dec
popa
fnstsw
pop
push
fstp
in
push
mov
popa
sbb
push
sub
std
mov
sub
popf
fisub
into
xor
jecxz
mov
sbb
jge
dec
loopne
jno
xchg
popf
jmp
daa
imul
daa
loope
inc
std
(bad)
push
jnp
mov
repnz
stos
cmps
push
cmp
lahf
sbb
sub
test
sub
lea
test
adc
mov
sub
cmc
cmps
cmp
les
out
(bad)
jl
jns
hlt
scas
loopne
loope
mov
je
push
test
or
pusha
dec
cmps
arpl
pop
loop
xor
les
cmps
js
ror
pusha
in
stos
mov
mov
pop
sub
lds
mov
stos
cmps
adc
sbb
aam
cdq
xor
out
push
fbstp
es
and
push
faddp
std
mov
clc
xchg
and
mov
cli
mov
add
xor
in
add
fld
mov
xchg
xor
nop
mov
vmovss
inc
sub
out
mov
pop
and
jo
mov
inc
repnz
das
adc
jns
push
cmp
sbb
lods
jecxz
adc
cs
loope
push
cdq
adc
mov
jle
test
jmp
loopne
and
sub
(bad)
retf
pop
daa
mov
cwde
pop
mov
jnp
icebp
ret
sub
pop
cs
sbb
pop
ror
call
pusha
js
clc
pop
sbb
lahf
add
(bad)
aam
mov
jo
mov
adc
pop
out
das
push
xchg
lea
inc
movs
cmc
loopne
jns
jb
push
loopne
add
inc
data16
je
cmc
loop
fdivr
jmp
mov
outs
pop
push
shl
fidivr
aam
or
push
jmp
jmp
mov
pop
(bad)
dec
cmc
sub
psubw
sbb
add
sub
jnp
dec
push
xchg
aam
mov
loopne
fsub
movs
add
jo
retf
cli
(bad)
shl
sub
adc
cmps
test
adc
cmp
jecxz
in
push
stc
and
aad
jecxz
std
(bad)
in
inc
jno
or
js
lds
lods
push
movs
xlat
cld
aam
pop
mov
push
sti
fidivr
cmp
sbb
sbb
jmp
mov
jns
jecxz
lock
sub
push
loopne
leave
xchg
sbb
ret
cli
daa
fstp
lods
push
adc
es
cmps
jg
jge
loop
movs
sub
es
clc
push
call
xchg
popa
cmc
inc
pop
mov
push
scas
pop
jno
add
(bad)
sub
xchg
cdq
add
es
inc
scas
fistp
jns
add
mov
fwait
nop
pop
outs
jmp
inc
jnp
sbb
sub
push
push
and
jb
cmps
movs
sbb
adc
jmp
(bad)
jmp
xchg
sbb
je
sahf
bnd
jg
das
cdq
jo
push
and
xchg
popf
fwait
mov
mov
sbb
hlt
ja
sub
ja
push
and
enter
dec
push
mov
mov
test
aam
or
jg
cmp
pop
and
push
add
psrad
cmc
sub
jmp
rcl
jne
dec
jb
(bad)
or
dec
dec
call
test
adc
jnp
and
fwait
or
(bad)
shl
dec
dec
jg
jmp
mov
out
gs
sbb
sub
cmp
dec
adc
ja
div
es
icebp
and
aam
sbb
xor
leave
rcr
push
popa
cmp
cmp
add
nop
cmp
std
or
cmp
cwde
rcl
jnp
pop
int3
lock
push
iret
and
pop
cmp
xchg
pop
(bad)
and
lock
mov
ins
dec
js
push
pushf
(bad)
xchg
or
int
mov
mov
fisttp
sub
pop
(bad)
lods
fnstenv
cmp
jecxz
mov
das
mov
retf
jmp
xchg
cdq
ss
mov
inc
ins
outs
pushf
and
jl
pop
mov
leave
push
dec
jl
daa
cmp
cwde
pop
adc
jecxz
(bad)
and
dec
jns
mov
xor
fisttp
fidiv
and
inc
and
jns
sub
pop
lds
xchg
xor
in
(bad)
mov
test
sbb
aas
cmp
(bad)
mov
scas
outs
dec
pop
jo
jbe
sub
mov
fadd
jle
retf
xor
sti
or
mov
into
or
inc
and
sub
lea
xchg
cwde
adc
mov
es
jmp
pop
lods
push
fdivr
pop
stos
mov
inc
cld
dec
call
int
aam
fldcw
aad
sub
push
pop
xchg
sub
jns
mov
mov
mov
adc
jns
mov
test
mov
cdq
mov
dec
mov
retf
xor
mov
bound
sbb
fisub
mov
inc
xor
dec
adc
cmp
mov
repnz
shr
ret
bound
mov
xor
ins
mov
add
rol
aaa
fadd
movs
and
dec
inc
in
xchg
xor
cmp
push
shl
and
and
pop
xchg
stos
out
pop
sahf
scas
stos
jae
sbb
mov
repz
cld
jge
mov
mov
std
je
inc
fwait
aaa
les
stos
mov
cmps
ins
add
scas
mov
sbb
arpl
daa
aas
(bad)
mov
cmp
pop
add
mov
jmp
push
rol
sbb
inc
outs
fisttp
aad
retf
lahf
dec
pop
les
jmp
or
push
rcr
push
loop
js
cmp
or
mov
std
or
sar
leave
mov
jle
jge
dec
xchg
lea
jne
adc
(bad)
sti
xor
loop
mov
das
test
fdiv
pop
xchg
dec
and
(bad)
repnz
mov
add
add
sbb
das
adc
mov
popf
jae
loop
cmp
inc
out
inc
or
je
adc
in
test
push
popf
xchg
sbb
aam
ins
(bad)
dec
neg
fisttp
cmps
jbe
movs
push
test
jl
stos
leave
add
daa
je
xchg
fadd
(bad)
shl
cmp
mov
in
cmps
data16
add
mov
retf
(bad)
jae
and
jnp
jnp
dec
(bad)
add
popf
pop
dec
sbb
cmp
mov
fwait
mov
xchg
mov
adc
pop
addr16
js
cmp
mov
add
movs
xchg
mov
pushf
sbb
pop
mov
pop
sub
adc
dec
xor
sbb
and
out
fmul
sbb
dec
mov
(bad)
je
loopne
adc
cmp
mov
sti
test
movs
lock
push
addr16
pop
les
push
xchg
(bad)
and
scas
iret
(bad)
(bad)
es
movs
adc
jnp
das
rcr
outs
clc
and
popf
inc
stos
test
mov
sahf
fld
mov
imul
in
push
mov
dec
jecxz
sbb
lea
shl
add
dec
or
enter
mov
das
or
ins
pop
xchg
nop
xchg
push
xchg
mov
push
push
xor
sbb
inc
cmp
in
sbb
mov
sub
sub
cmp
arpl
sub
mov
int3
ins
outs
test
push
or
mov
mov
pop
sub
mov
pop
addr16
mov
stc
int3
and
mov
xchg
addr16
inc
mov
mov
ja
icebp
out
xor
sub
(bad)
jmp
out
cmps
imul
test
cmp
pop
dec
inc
sbb
and
lods
mov
mul
mov
cwde
mov
xchg
jnp
sbb
loopne
pop
push
jl
ds
mov
cmp
cmp
daa
iret
and
mov
int
xchg
cli
out
jp
cmp
out
dec
ret
or
loope
fwait
rcr
cmp
frstor
cmps
push
xchg
arpl
sub
inc
lock
push
pusha
mov
and
push
data16
dec
pop
mov
out
adc
fmul
adc
stos
cs
cmps
neg
jmp
pop
or
mov
hlt
mov
jmp
test
call
cmp
mov
add
cdq
sub
sbb
xchg
or
(bad)
out
push
mov
and
test
mov
jl
dec
inc
outs
mov
mov
addr16
mov
(bad)
out
(bad)
cld
ret
sub
test
push
mov
xor
mov
cmp
movs
(bad)
je
fcmove
mov
loope
inc
push
jb
or
sub
pop
add
mov
in
mov
gs
cmp
test
pop
xchg
movs
add
mov
xor
(bad)
(bad)
stos
add
stc
and
jmp
inc
or
fcmovnu
jp
xchg
imul
dec
adc
ins
popf
xor
push
push
or
fwait
enter
push
inc
jg
jno
fwait
nop
pop
int3
and
inc
pop
fstp
out
sbb
push
loop
or
pop
dec
mov
(bad)
inc
dec
fsubp
or
and
push
pop
mov
sbb
inc
aaa
popf
test
es
nop
push
in
push
(bad)
jns
mov
(bad)
pop
fwait
pop
ds
call
inc
retf
(bad)
mov
sub
test
pop
push
scas
lahf
gs
fidivr
ss
std
das
mov
ror
add
inc
jno
cs
mov
lahf
jne
jns
inc
les
(bad)
aam
push
movntps
sbb
jge
pop
sbb
xchg
hlt
lock
loope
xchg
add
rcl
(bad)
repz
mov
sub
inc
leave
sub
js
push
mov
inc
push
and
aad
mov
(bad)
fisttp
pop
fist
and
lods
mov
mov
inc
das
dec
mov
sar
fimul
int3
xchg
lock
jbe
pop
dec
and
lea
cmc
cli
push
sbb
(bad)
dec
fiadd
push
in
das
scas
and
shl
aad
(bad)
cld
xor
test
sbb
ins
(bad)
iret
loopne
in
mov
cli
jne
xchg
ret
adc
leave
or
mov
inc
push
jmp
or
pop
push
popa
and
xchg
loopne
daa
popa
pop
sub
aas
ret
jae
adc
pop
jbe
mov
fldcw
mov
in
jmp
jo
cmc
dec
shl
jb
(bad)
pop
test
ret
aad
imul
hlt
shr
popa
cmp
adc
scas
push
mov
pop
and
les
out
jl
(bad)
div
add
outs
nop
jg
adc
repnz
inc
ja
out
dec
ror
rcr
in
adc
not
add
jns
jbe
bound
dec
or
fisubr
lods
lods
or
call
ret
pop
das
fdivr
or
arpl
fdiv
out
jnp
pushf
mov
cld
ins
sub
add
test
mov
mov
xchg
loop
dec
and
movs
and
jno
adc
mov
iret
je
stos
cmp
hlt
dec
scas
aam
pushf
in
out
adc
mov
inc
retf
je
pop
xor
icebp
lea
stos
mov
daa
daa
scas
xor
sbb
jmp
das
jecxz
dec
test
and
cmp
clc
jno
xchg
in
aas
cmc
xor
push
cmp
retf
hlt
clc
scas
pop
dec
aad
pushf
or
call
xlat
mov
cmp
imul
addr16
or
push
or
dec
ror
dec
lock
push
cmps
jnp
push
out
dec
fisttp
scas
jecxz
jo
cmp
(bad)
(bad)
mov
out
inc
ds
jecxz
jge
mov
(bad)
stc
bound
push
(bad)
lock
dec
or
mov
adc
pop
jae
adc
mov
mov
nop
outs
push
sub
mov
std
data16
out
mov
sbb
sub
sbb
dec
enter
mov
fwait
es
jl
loope
jmp
jnp
mov
clc
fwait
sbb
das
xchg
mov
cmps
out
icebp
pop
mov
cmp
in
mov
push
adc
je
add
xchg
pusha
cmps
out
je
lahf
ret
sub
jbe
icebp
dec
push
xchg
int3
mov
ja
cmp
sti
scas
mov
(bad)
xchg
clc
outs
ds
and
repz
stc
mov
cmp
inc
jns
push
dec
cmp
ds
xchg
leave
cs
jmp
and
scas
out
(bad)
and
push
ffreep
mov
inc
test
inc
(bad)
cli
fcomp
mov
mov
mov
mov
pop
jae
fdiv
or
(bad)
mov
jmp
dec
data16
cdq
jns
and
sbb
ret
ins
in
movs
nop
mov
retf
cmp
sbb
arpl
(bad)
xor
jne
sub
mov
and
int3
(bad)
push
cs
sar
sub
ins
repnz
movs
push
lods
sahf
into
jo
dec
push
push
shl
ret
daa
mov
int3
loopne
dec
popf
add
or
xchg
dec
cmp
push
push
outs
cmp
push
xlat
pop
scas
sbb
dec
cli
arpl
push
dec
dec
lods
jne
stos
fnstenv
and
fsub
mov
(bad)
stos
adc
and
in
fsubr
lock
call
outs
mov
lods
rcl
in
iret
dec
scas
aaa
push
and
movs
data16
int
int3
mov
sbb
dec
mov
jl
add
pop
andps
dec
ja
or
xlat
bound
aad
adc
jge
jbe
xchg
fwait
mov
enter
loop
fwait
mov
lea
fnstenv
pop
out
xchg
xor
dec
jge
inc
xchg
ret
push
(bad)
xchg
ss
pop
jl
rcr
test
sbb
popa
xchg
popf
pusha
sbb
add
popa
sub
in
fist
push
sbb
dec
cli
lds
sub
ret
clc
jle
jle
pop
mov
arpl
adc
in
sar
fisubr
call
xor
pop
sbb
stos
dec
cmp
out
mov
int3
out
mov
cmp
cmp
mov
push
adc
lea
pop
cmc
shl
icebp
and
jae
not
pop
loop
sub
pop
lahf
push
mov
dec
call
sub
out
xchg
cld
dec
movs
cli
(bad)
sahf
sbb
sub
xchg
daa
pop
xor
adc
xor
(bad)
fwait
scas
pop
jno
outs
jnp
leave
es
mov
(bad)
jge
shr
call
jmp
(bad)
mov
aad
stc
ds
js
sbb
mov
movs
push
pop
xchg
mov
mov
(bad)
movd
inc
fidivr
clc
mov
popa
movs
stos
and
into
test
cwde
mov
jp
ins
inc
jp
or
fiadd
mov
adc
jmp
dec
out
xor
pop
sti
push
add
retf
jle
adc
out
inc
xor
pop
xchg
ja
or
or
aaa
mov
and
loopne
jbe
push
ret
scas
lds
or
test
fbld
push
dec
cwde
cmp
jmp
gs
repnz
or
push
fcom
add
mov
jae
xor
add
jg
jb
cmp
cmc
mov
aam
or
push
mov
stos
movs
aam
push
dec
je
pop
nop
arpl
mov
pop
xchg
sbb
cwde
inc
cmp
gs
mov
rcr
sub
dec
test
fwait
retf
mov
std
aad
iret
pusha
push
inc
mov
or
jb
aaa
sub
xor
mov
inc
sbb
mov
fiadd
jno
lds
cmp
jnp
inc
enter
sahf
aam
mov
push
std
stos
dec
xchg
es
sub
shl
push
sbb
sub
cs
or
push
push
leave
adc
pop
enter
mov
(bad)
xchg
fcmovbe
sti
sub
and
inc
pop
sbb
mov
dec
cwde
cmp
or
fucom
dec
add
pop
dec
add
cmp
mov
and
cmp
pop
repz
xchg
out
cmp
aad
jnp
jecxz
hlt
fstp
inc
dec
jecxz
sahf
pop
cmp
adc
jo
ins
sbb
inc
fs
retf
adc
dec
ds
cmp
sub
aas
aad
fwait
push
ret
adc
or
dec
call
clc
xchg
fwait
stos
aaa
call
fisubr
xchg
xor
(bad)
mov
(bad)
enter
dec
hlt
ja
movs
jnp
add
inc
cwde
bound
or
je
stos
neg
sub
ins
in
mov
es
inc
push
(bad)
test
xchg
test
inc
add
pop
fistp
bnd
mov
sbb
rcl
hlt
iret
pop
xchg
add
mov
stos
xchg
xchg
out
movs
jb
aaa
in
mov
fnstcw
push
(bad)
(bad)
stc
arpl
pusha
mov
or
fcomi
cmc
leave
mov
sub
add
popf
push
(bad)
(bad)
ja
clc
dec
mov
and
mov
test
jle
pushf
sti
adc
xor
std
mov
cld
cmps
mov
xor
sub
xchg
or
stos
or
out
mov
sub
mov
neg
push
ds
imul
shl
add
scas
rcr
jnp
adc
or
int
push
shr
cdq
mov
mov
in
mov
push
mov
or
sub
or
xor
xchg
mov
push
dec
out
das
fsubr
retf
and
pop
retf
mov
popf
or
inc
mov
mov
mov
cmps
and
pop
cmp
test
xlat
dec
mov
pop
xlat
or
or
and
inc
cli
push
or
and
push
ja
and
aam
jle
and
add
xchg
repz
repnz
mov
and
xor
inc
neg
gs
pop
push
fwait
sbb
jae
shl
mov
les
or
mov
gs
xchg
loopne
inc
outs
and
or
adc
iret
dec
add
pop
xor
xor
pop
clc
loopne
fadd
mov
iret
lock
cmp
fs
lods
popa
jns
aad
sbb
xchg
and
(bad)
and
and
cmp
cmps
call
push
push
dec
(bad)
pop
push
mov
pop
cs
outs
pop
stos
pop
ins
lods
fisttp
sar
ret
push
jle
int3
add
iret
ret
sbb
ret
inc
call
imul
ds
mov
test
or
mov
push
ds
mov
or
mov
cld
inc
fcomp
call
ja
enter
mov
jp
div
imul
cmp
inc
or
jecxz
aas
fcmovne
addr16
sbb
retf
int3
mov
bound
or
test
daa
xor
jp
retf
test
jbe
sti
loopne
pop
push
out
fwait
jo
shl
pusha
adc
jo
xchg
outs
jmp
repnz
adc
movs
pop
repnz
sub
mov
adc
xlat
mov
xchg
push
aas
cmp
imul
inc
fnsave
outs
ins
jae
call
and
nop
cmp
cli
vcvttss2si
sbb
bound
shr
pop
call
scas
xlat
jae
(bad)
and
cmp
add
jle
push
inc
push
fld
shr
ret
cmp
(bad)
in
xor
mov
jl
jle
pop
mov
xchg
jnp
pop
shl
ins
cmc
pop
dec
movs
scas
or
push
xchg
cmp
and
dec
mov
cmps
pop
cmps
lock
push
cmp
mov
ret
punpckhbw
mov
inc
mov
loopne
or
mov
xor
(bad)
aaa
std
dec
(bad)
movs
cmps
push
mov
sahf
call
jmp
xlat
loop
scas
icebp
mov
dec
arpl
dec
mov
fwait
inc
dec
arpl
fdiv
mov
and
ror
popf
ret
in
inc
xchg
int3
pushf
ins
push
aas
dec
pop
cmp
ficomp
mov
dec
xchg
mov
lahf
js
and
mov
bound
adc
jb
jle
xor
lods
cmp
inc
sbb
or
dec
xchg
xchg
test
or
sub
test
mov
xchg
sub
outs
dec
fidiv
sbb
xlat
inc
mov
jnp
and
sbb
mov
out
cdq
add
pusha
movs
cmp
fwait
icebp
xor
push
xchg
in
nop
jns
jb
add
sbb
sbb
out
ret
fbstp
jmp
imul
pop
mov
js
push
jo
add
jo
mov
out
push
push
mov
adc
mov
rol
arpl
outs
ss
iret
cmp
jecxz
add
test
mov
inc
mov
adc
and
push
daa
xlat
pop
mov
test
pop
xchg
mov
mov
push
dec
lods
lahf
shl
(bad)
jbe
test
jb
mov
add
xor
xor
xor
dec
lea
es
push
mov
mov
ficom
mov
test
jno
xor
les
into
test
adc
mov
mov
add
scas
sbb
ins
xchg
or
inc
dec
sti
dec
jge
mov
std
and
je
mov
js
mov
repnz
inc
es
imul
mov
push
aad
push
int3
xchg
inc
aas
sub
inc
pop
das
jo
icebp
cld
cli
(bad)
and
sbb
adc
xchg
cdq
movs
movs
fwait
mov
and
pushf
xor
pop
push
cmc
or
aas
mov
test
jo
in
fisttp
lahf
imul
mov
add
mov
cmc
popf
ins
sar
mov
enter
inc
imul
ds
nop
adc
les
aaa
add
inc
jno
pop
push
jbe
jae
mov
mov
push
aas
out
jae
repz
jecxz
fild
jge
xchg
cmp
dec
cmpxchg
outs
ins
push
sbb
jno
pusha
loope
sub
stc
xor
push
nop
mov
cmp
cmc
bound
sub
jmp
(bad)
jecxz
adc
sbb
pushf
out
aad
or
xchg
dec
push
repz
cmp
dec
clc
stc
xchg
aam
add
(bad)
aaa
loop
out
inc
cmc
mov
mov
mov
dec
push
shr
jge
sahf
jno
repz
and
les
push
mov
jl
mov
mov
and
call
ja
or
push
sbb
retf
push
cmp
fwait
imul
fimul
push
jns
(bad)
and
ja
sub
push
retf
sbb
jecxz
pop
lock
xchg
sti
sbb
push
ja
sbb
pop
mov
outs
mov
push
lahf
cdq
js
out
inc
inc
or
enter
stc
popa
sti
xor
push
imul
jno
xor
aaa
fldcw
mov
xchg
fisubr
outs
dec
push
aas
out
in
mov
and
inc
retf
aas
adc
stos
xchg
fist
adc
cmp
mov
and
sahf
or
pushf
jo
push
lods
int3
repnz
pop
jnp
test
inc
cmps
add
shl
shl
jnp
cmc
jmp
and
in
adc
jb
cwde
add
shl
add
nop
in
add
popf
dec
push
das
mov
pop
leave
push
loope
outs
mov
ins
test
je
aam
loopne
dec
movs
gs
pop
jle
cmp
mov
dec
call
ret
cmp
nop
xchg
pushf
fisttp
ret
jb
add
push
sbb
jne
out
mov
adc
sti
in
sub
cmp
pop
int3
pop
sub
sub
xchg
xchg
inc
out
hlt
add
xchg
nop
mov
mov
fwait
jmp
ror
das
xchg
js
xor
shl
xchg
jmp
pop
ficomp
(bad)
idiv
sub
bound
es
scas
fs
out
and
popf
xchg
inc
clc
lea
cmps
mov
mov
cmp
(bad)
iret
pop
out
xchg
outs
inc
mov
xchg
les
loopne
dec
xchg
aad
(bad)
xchg
dec
retf
stos
scas
mov
dec
mov
xchg
xor
xchg
cmp
cmp
adc
in
and
dec
jmp
xchg
adc
adc
scas
fst
das
push
iret
push
xchg
in
movs
fwait
adc
sub
arpl
out
cli
jo
cmp
jno
jae
sub
ret
leave
(bad)
jb
aas
mov
push
mov
mov
inc
ins
mov
mov
sub
sbb
push
in
cmp
fdiv
xor
test
ret
gs
out
push
pop
(bad)
jns
push
fisub
xor
js
in
sub
jnp
dec
out
repz
jecxz
xor
in
hlt
xor
and
cmp
push
les
xor
mov
adc
dec
(bad)
mov
mov
iret
sub
std
pusha
jge
js
sbb
jnp
pcmpgtw
call
mov
xlat
or
out
out
push
js
aam
mov
scas
cmps
or
adc
jle
pop
add
mov
out
shl
jb
aas
loope
pop
cmp
sbb
inc
xor
stos
sub
cmp
add
int
push
inc
outs
in
std
popf
sub
repnz
push
gs
pop
lahf
fidivr
mov
push
and
std
push
in
jmp
mov
dec
or
out
push
jae
jns
js
xchg
push
pop
test
ret
loop
mov
mov
not
(bad)
dec
or
fcomp
mov
mov
jp
daa
cdq
mov
cmps
je
dec
fisubr
mov
fisub
loop
pop
std
sahf
jmp
in
outs
js
cmp
cmp
adc
inc
ffree
mov
inc
cmp
stc
cmp
jl
ret
push
add
shl
cwde
mov
es
inc
loop
push
es
cli
popf
add
pop
mov
cld
ret
xchg
mov
jo
mov
push
dec
retf
pop
push
adc
movs
jg
pop
outs
jge
cwde
push
gs
push
call
mov
mov
mov
jp
sub
xchg
sbb
cs
inc
sbb
cmps
ret
inc
ins
sub
and
mov
ds
and
movs
dec
ja
sub
fnstsw
push
cdq
bound
std
ss
xchg
inc
div
and
and
inc
and
cdq
stc
xchg
bound
shl
or
sub
sbb
rcl
cmp
push
je
mov
in
cmp
push
outs
retf
sub
adc
ja
inc
int
mov
test
aam
mov
add
sub
mov
mov
dec
fmul
fucom
or
xor
or
inc
xor
jae
les
cmp
fsub
cmp
mov
xlat
out
scas
daa
gs
inc
jl
aam
test
jg
xchg
inc
retf
popf
mov
push
dec
and
in
cmovle
enter
dec
lea
in
or
dec
or
gs
std
out
mov
std
ror
pop
loop
mov
outs
popa
adc
lahf
adc
dec
es
cmp
(bad)
xchg
inc
test
adc
into
or
jbe
test
xchg
ins
or
ror
xor
rol
xor
outs
inc
push
movs
jg
seto
sub
retf
aad
into
movs
push
jbe
enter
(bad)
mov
and
mov
push
rcr
adc
pop
stos
out
dec
(bad)
xor
(bad)
nop
test
mov
mov
mov
(bad)
dec
ds
sahf
jns
or
lea
loopne
sbb
jnp
scas
and
xor
leave
adc
loope
xlat
inc
and
vpsubsb
scas
mov
cmp
ror
(bad)
ja
adc
aam
pop
xchg
add
and
imul
(bad)
fstp
and
pop
cdq
(bad)
mov
test
loopne
lods
sub
adc
sub
into
jge
pop
imul
pop
and
dec
jo
pop
mov
push
aam
mov
clc
xchg
(bad)
hlt
out
xchg
push
sbb
ins
jnp
or
jg
push
repz
sbb
loop
loope
(bad)
stos
mov
scas
xchg
(bad)
xchg
add
fisubr
ins
dec
jg
das
cld
cmp
aad
pop
or
pop
aam
cs
mov
aad
push
in
loopne
jle
loopne
shr
lock
lods
inc
sub
and
cmp
xor
movs
cdq
pop
jnp
jnp
bound
xor
outs
sub
cld
dec
loope
mov
add
fild
in
(bad)
inc
out
hlt
sub
pop
push
sbb
mov
mov
into
dec
xchg
lods
mov
sub
ins
fcmovb
outs
ret
sub
sti
xor
add
adc
cdq
mov
ins
mov
cmp
or
imul
xchg
push
ret
imul
out
(bad)
fadd
pop
mov
jb
pop
adc
sub
sbb
test
mov
push
imul
pop
fistp
cmp
stos
cmc
adc
fdivr
ins
adc
aaa
pop
out
aaa
mov
pop
test
call
xchg
sub
je
cmp
loopne
cmp
inc
movs
push
xchg
inc
xchg
and
xchg
inc
test
ret
call
cmp
retf
sbb
push
xor
dec
inc
and
fs
mov
and
mov
sbb
cli
inc
popa
sbb
scas
dec
outs
inc
leave
and
dec
pop
loop
fidivr
in
mov
fnstenv
inc
pop
in
(bad)
add
stos
out
fsubr
ror
pop
pop
xor
aas
or
das
sbb
cmps
je
in
stos
sub
arpl
or
lea
jns
inc
mov
in
seta
jmp
int
test
pushf
adc
mov
out
call
mov
das
fstp
mov
aad
and
imul
mov
gs
call
jp
cs
mov
repnz
pop
pop
cmp
pop
ins
xor
mov
aas
into
sub
sbb
std
jmp
outs
mov
nop
or
cmps
xor
push
push
pusha
sub
jmp
(bad)
adc
fdiv
sub
std
data16
je
ds
mov
push
in
jg
je
push
shl
and
iret
push
lds
lahf
xor
and
jnp
stos
mov
pop
ss
dec
gs
ror
adc
jns
nop
push
std
xor
cmc
sub
test
ficom
cmps
sub
add
inc
retf
repnz
lahf
dec
mov
clc
mov
inc
retf
fwait
clc
adc
pop
scas
push
sub
cld
jmp
mov
stc
enter
clc
sahf
sbb
jge
stos
int
xor
stos
push
or
pop
fnsave
jae
jbe
iret
adc
mov
mov
scas
inc
outs
cmp
int
or
cdq
push
mov
mov
push
ins
stc
rcl
stc
jge
push
pushf
jbe
cmp
movs
pop
add
cwde
inc
pop
push
int3
jg
fimul
fisttp
inc
sbb
mov
mov
rcr
pop
dec
jnp
mov
xor
pop
ror
iret
pushf
movs
shl
push
retf
sub
sub
inc
add
and
dec
repnz
or
mov
and
sbb
xchg
repnz
ds
pop
gs
jmp
das
es
lahf
sub
dec
cmp
lods
sbb
je
test
das
add
pop
dec
cmps
out
pop
out
or
ins
shl
sti
sbb
jge
mov
test
ret
sbb
dec
movs
bound
fidivr
add
mov
push
cdq
lods
rol
and
adc
int
pop
or
scas
ins
enter
fild
pop
lods
adc
push
jecxz
cmc
xchg
dec
mov
mov
das
outs
pop
cmp
push
dec
nop
out
cdq
or
scas
or
and
cli
arpl
and
and
sub
push
test
in
sub
add
out
dec
daa
cs
popa
and
mov
mov
push
(bad)
push
cmp
js
push
arpl
aad
aam
repz
mov
xchg
push
test
or
xor
cmp
pop
sbb
push
add
lea
pop
leave
cmp
sbb
out
adc
push
jmp
pop
out
and
aaa
xor
cmp
adc
int3
cmp
ret
and
je
mov
sub
jo
mov
cmp
mov
push
not
iret
out
(bad)
pop
adc
lahf
inc
adc
add
fld
js
and
es
mov
aas
pop
pop
popf
mov
das
mov
xchg
pop
mov
mov
adc
sub
rol
add
fisttp
ret
pop
lods
fcom
in
imul
(bad)
and
sbb
mov
(bad)
fild
and
mov
popa
mov
mov
mov
jecxz
mov
mov
cmp
pop
jp
mov
call
mov
jp
lds
adc
ja
cdq
or
jle
dec
or
dec
leave
mov
mov
in
push
jb
enter
push
lahf
loopne
stos
(bad)
push
push
or
out
leave
xor
mov
push
dec
ins
jge
jmp
jecxz
mov
adc
scas
sbb
or
ins
pop
and
call
cdq
pop
aaa
adc
adc
jp
fs
cmc
ss
sub
sbb
adc
sub
xor
mov
movs
cmp
in
retf
or
and
xor
cmp
in
jno
movs
(bad)
sbb
fs
jnp
in
iret
pop
dec
cmp
mov
cdq
loop
add
adc
ss
mov
cld
int
test
pop
adc
dec
or
cmc
fs
fbld
adc
movs
call
xor
mov
int3
in
mov
mov
sbb
mov
mov
std
xchg
sub
aad
xchg
into
mov
jo
add
stos
cmp
jae
sub
cmps
ins
fisttp
jmp
inc
xchg
pushf
lds
cdq
adc
test
imul
ja
movs
retf
les
push
stos
push
cmps
xchg
jecxz
lods
sub
ss
popa
sub
mov
repz
add
movs
pop
sbb
or
lahf
cmp
stc
inc
sub
ss
lea
cmp
in
and
sbb
mov
jecxz
and
xor
cmp
mov
mov
aam
fistp
pusha
mov
(bad)
and
add
and
int
rol
es
add
and
mov
and
pushf
jp
sbb
lea
mov
push
fwait
leave
mov
jmp
in
in
and
call
popf
or
rcl
(bad)
std
repnz
mov
test
fwait
push
push
out
bound
aad
repz
push
pop
in
int
pop
add
cmps
mov
das
fisub
mov
mov
in
ficom
sbb
in
sbb
sbb
jecxz
sar
rcr
xor
add
cmp
pop
(bad)
adc
push
mov
les
out
xlat
in
nop
push
pop
js
psrad
xchg
std
lds
xchg
mov
lds
ja
inc
mov
int3
pop
movs
or
(bad)
mov
(bad)
mov
push
cmps
out
xchg
inc
aaa
xor
stos
inc
push
mov
daa
xor
inc
std
mov
cmps
adc
das
pop
js
in
push
not
aaa
inc
and
xlat
icebp
jp
lock
pusha
push
pop
clc
pushf
add
dec
leave
dec
adc
push
ins
scas
in
jne
xor
and
(bad)
clc
test
jb
add
sub
xor
mov
xchg
pop
mov
add
add
sub
mov
scas
shr
jmp
adc
ror
sbb
(bad)
pop
inc
pop
sbb
(bad)
in
das
mov
mov
mov
sti
adc
popa
sbb
xchg
cmp
(bad)
mov
jp
gs
mov
or
(bad)
pop
pop
fcom
sbb
pop
test
jbe
xchg
mov
mov
iret
mov
cwde
fdivr
jg
push
xor
xchg
xchg
nop
ins
xchg
mov
jl
mov
dec
sbb
adc
(bad)
xlat
jb
(bad)
daa
sbb
cmps
or
pop
lock
push
push
cwde
add
hlt
jecxz
frstor
mov
mov
or
xchg
lahf
adc
adc
cmps
iret
out
and
stc
test
jl
xchg
cmp
loopne
fnstsw
punpckldq
out
cmp
sbb
jge
sbb
int
in
pop
sar
dec
mov
cmps
add
or
mov
daa
(bad)
test
jmp
pop
pop
aam
cmp
ds
mov
cmp
std
cmp
inc
aam
fsub
lea
lds
scas
enterw
xor
(bad)
cmps
xor
inc
lods
lods
out
xchg
jl
fs
mov
in
push
stc
dec
(bad)
and
ins
cmp
xchg
loope
cmc
mov
mov
fcomp
mov
cmp
mov
jmp
push
(bad)
out
jge
jbe
iret
fidiv
aad
dec
mov
add
mov
jmp
(bad)
aam
push
fdiv
mov
gs
rcr
scas
test
nop
scas
aam
mov
(bad)
scas
adc
mov
ins
xor
lea
cmp
shl
call
jg
int
scas
xchg
shl
movs
(bad)
inc
mov
add
into
idiv
test
dec
out
mov
rcl
jecxz
sub
pop
(bad)
jmp
lahf
sbb
int3
jp
mov
js
les
xor
loopne
stos
cmp
sub
dec
fdiv
or
enter
iret
fwait
fs
mov
test
push
scas
(bad)
jnp
adc
and
idiv
call
and
dec
ja
push
dec
and
inc
mov
mul
pop
(bad)
mov
mov
and
mov
mov
or
or
mov
shr
cld
lea
xchg
or
push
dec
sbb
mov
push
int3
mov
dec
cmps
hlt
fcomp
inc
or
push
aas
cmp
xor
out
inc
fld
data16
push
sub
movs
pop
in
test
cmp
pop
add
lods
sti
sub
movs
xor
sbb
sbb
xchg
jbe
out
bound
mov
nop
sbb
sub
cmp
mov
xor
fistp
fwait
sti
pusha
mov
cdq
mov
jmp
inc
xchg
dec
iret
bound
push
sbb
jecxz
sti
adc
(bad)
xchg
jo
call
das
sbb
aas
test
cs
cmc
jbe
xor
jl
push
sub
ret
pop
xchg
pop
cmp
das
je
dec
dec
cli
call
cld
ins
jl
sahf
push
mov
aad
(bad)
or
sbb
retw
sbb
call
add
mov
leave
gs
or
xchg
mov
(bad)
xchg
in
daa
stos
inc
call
mov
add
jno
sub
push
mov
xor
mov
int3
sub
(bad)
rcl
mov
shl
sti
lods
dec
push
inc
sbb
dec
mov
mov
fcomp
int3
sbb
inc
sbb
pop
dec
test
cmp
sub
lds
xchg
mov
xchg
retf
scas
ror
push
aad
inc
js
fnstenv
xor
cmps
sbb
fsubr
in
adc
jmp
cs
mov
push
les
ins
cmc
xchg
cld
inc
daa
movs
jmp
(bad)
mov
sbb
popa
stc
jge
xor
mov
jo
rcr
bound
loop
sub
dec
mov
int
sahf
and
cmc
nop
push
cs
aam
outs
cmps
loope
sti
lahf
jg
imul
movs
lods
xlat
jp
and
loope
out
add
fsub
aad
imul
adc
(bad)
js
xchg
shr
xchg
or
xchg
pop
pop
xor
icebp
or
popa
shl
mov
pop
test
push
xchg
xlat
mov
or
inc
imul
adc
in
lds
sbb
mov
or
and
les
adc
jns
cld
call
popa
sbb
xchg
or
or
mov
fisttp
icebp
dec
popa
aad
stos
mov
mov
push
jbe
jmp
xchg
xor
aaa
or
dec
jae
stos
dec
xor
lods
push
out
cdq
pop
fdiv
mul
dec
lahf
mov
mov
pop
cmp
add
or
std
dec
jae
scas
int
dec
fstp
loope
dec
fwait
imul
xchg
scas
mov
push
enter
lea
sbb
ins
or
lods
or
jecxz
push
in
pushf
xor
fstp
pop
lods
sbb
les
xchg
daa
dec
pop
sbb
stos
(bad)
xchg
movs
mov
jne
movs
(bad)
lods
mov
shl
movs
xchg
xor
mov
fisttp
xor
jae
dec
xchg
mov
call
shr
fnstcw
fwait
sar
inc
mov
daa
xchg
out
push
xor
lods
and
sub
in
dec
xchg
sbb
(bad)
or
adc
popa
je
pop
jbe
jbe
outs
cmp
rcl
test
shl
sbb
shl
je
loope
jmp
dec
sub
nop
loope
cli
icebp
jnp
test
ins
test
pmaxsw
mov
xor
imul
cmp
es
js
cmp
sbb
icebp
ja
inc
sub
outs
shl
xor
call
mov
mov
fldenv
ins
cmp
adc
je
movs
out
xor
ror
lea
mov
(bad)
push
and
sub
(bad)
push
aas
ss
inc
jl
inc
stc
pop
fxch
add
(bad)
retf
adc
into
pop
or
sbb
out
aad
cmp
add
pop
ds
(bad)
arpl
(bad)
and
mov
fistp
fsubp
mov
cwde
bound
stos
cmps
test
mov
mov
(bad)
sbb
ss
xchg
test
push
arpl
xchg
adc
add
jmp
inc
adc
enter
repnz
hlt
sbb
fstp
and
mov
push
jbe
movs
push
push
dec
sahf
outs
neg
push
jmp
jb
int3
data16
movs
enter
aam
cli
stc
pop
jae
push
imul
addr16
iret
push
outs
or
cmp
out
cmp
test
pop
int3
inc
xor
xchg
jb
xchg
cld
mov
shl
add
loop
push
outs
xchg
mov
fnstenv
data16
cli
ror
ffree
xchg
sti
sbb
sbb
mov
xchg
xchg
icebp
cmps
inc
inc
inc
retf
lods
cmps
jmp
jle
test
push
dec
and
cli
call
inc
popa
xor
push
or
lds
cld
imul
pop
cs
mov
in
add
adc
jp
jnp
and
fadd
mov
lea
inc
jnp
scas
je
fbstp
mov
in
fnstsw
ficom
jecxz
(bad)
retf
int
ror
test
sub
(bad)
loop
inc
adc
adc
mov
out
icebp
fs
mov
add
mov
les
out
jle
imul
adc
jge
jp
sti
mov
into
(bad)
imul
mov
and
fmul
mov
hlt
dec
mov
shr
fwait
sub
mov
sbb
dec
sbb
xor
stc
jle
mov
pop
adc
cmp
mov
leave
mov
test
loope
stc
in
call
outs
(bad)
xor
mov
aam
pop
pop
xchg
inc
ss
dec
out
pop
mov
sahf
mov
add
int3
shl
popa
mov
mov
ins
push
sbb
scas
gs
and
mov
mov
xor
(bad)
ja
iret
fcomp
or
movs
xchg
in
addr16
sbb
xchg
enter
cmp
jl
shl
dec
xchg
fmul
sub
sti
adc
sub
mov
sub
or
dec
sub
fdiv
je
aaa
bound
rcl
mul
xchg
push
fstp
xor
jno
cmp
mov
add
btc
adc
cs
pushf
sbb
xchg
(bad)
lea
ds
movs
inc
dec
push
adc
and
ins
ds
pop
leave
cmp
rcr
pushf
pop
push
inc
inc
or
ret
outs
sbb
pop
mov
add
push
ror
push
imul
mov
dec
ja
push
sub
mov
push
add
imul
jae
daa
aaa
sahf
rol
cwde
cmp
jmp
lahf
iret
mov
mov
xor
stc
fistp
add
sbb
test
mul
ja
add
mov
cmp
or
std
sbb
arpl
lock
xor
add
adc
xor
sbb
cli
cli
xchg
sub
sti
loop
pop
jg
(bad)
mov
pop
xlat
in
ins
or
popf
mov
scas
push
add
outs
mov
mov
jns
inc
push
repz
add
xchg
sti
push
cld
pop
or
or
xor
lea
out
iret
push
cli
dec
out
sub
jecxz
std
sub
(bad)
pop
mov
mov
test
fmul
leave
sbb
rcl
test
mov
jmp
push
add
xlat
cli
or
add
hlt
add
shl
lock
js
dec
hlt
retf
mov
into
inc
pushf
push
loope
clc
mov
retf
adc
jmp
mov
and
ss
clc
les
push
sahf
in
push
fs
xchg
mov
jno
js
xchg
jb
test
je
mov
mov
lods
push
push
mov
xchg
imul
sub
sub
mov
sbb
clc
data16
inc
icebp
cmp
out
or
sub
ss
bound
fucom
imul
xchg
mov
or
popf
inc
sub
cld
jnp
pusha
pop
jno
jbe
scas
add
mov
pop
ret
xlat
pop
(bad)
adc
mov
imul
inc
fcomp
ret
test
and
jmp
shl
cld
ret
mov
mov
lock
sub
xor
ror
adc
sub
cmp
xor
mov
xchg
jae
loope
cmp
inc
vminss
pop
loope
dec
loopne
mov
adc
cmps
cmp
push
popf
mov
ret
ins
mov
retf
je
icebp
mov
ret
cdq
pop
test
ret
add
jmp
ja
add
(bad)
sbb
das
pusha
gs
stc
popf
repnz
or
push
std
out
pop
mov
leave
xor
xchg
sti
mov
mov
cmp
dec
jle
push
jmp
mov
sbb
mov
xlat
adc
stc
lea
sub
jb
jns
dec
sub
cmp
icebp
(bad)
repnz
std
repnz
jge
ror
sbb
jg
(bad)
sti
adc
add
hlt
jmp
xor
push
cmp
jmp
mov
mov
mov
dec
stos
stos
push
or
(bad)
aad
jg
cmc
shr
ds
xchg
push
jp
shr
push
ds
out
jle
(bad)
test
or
mov
aas
je
test
xlat
push
mov
addr16
retf
cmp
outs
mov
in
xlat
sub
jp
sub
cmp
inc
mov
lea
cmc
inc
dec
(bad)
mov
sub
dec
sahf
or
xchg
in
shr
push
iret
xor
test
aam
rcr
cmps
inc
mov
cld
sbb
xchg
pushf
test
add
(bad)
into
push
jnp
and
jge
stos
push
sub
jnp
ins
cdq
mov
mov
sahf
iret
and
test
(bad)
arpl
mov
inc
sub
stc
(bad)
lods
cmp
jge
push
mov
scas
cmps
sub
sbb
mov
movs
loopne
and
scas
push
push
lea
add
rcl
scas
(bad)
mov
retf
cdq
xor
xor
push
popf
gs
bound
xchg
sub
shr
and
test
inc
cmp
mov
mov
fsubr
push
cmp
inc
mov
shl
dec
adc
dec
out
clc
je
adc
rcl
in
(bad)
cli
(bad)
inc
jl
sbb
sub
out
cmc
mov
push
ds
loop
repnz
add
cmps
xchg
fxch
adc
aas
push
sbb
pop
lock
nop
retf
inc
xor
imul
sbb
lock
and
mov
and
fiadd
retf
pushf
es
test
push
mov
adc
and
push
sahf
sbb
fwait
inc
imul
test
jb
in
cmp
dec
cwde
arpl
mov
icebp
(bad)
jne
push
mov
cli
pop
fidiv
jmp
sub
call
div
out
sbb
sbb
pop
cmp
pop
nop
bswap
hlt
fimul
cmp
sub
add
in
ret
xor
jo
sbb
dec
nop
cmc
add
mov
adc
into
lds
or
(bad)
imul
fwait
push
mov
and
cwde
mov
add
or
pop
cli
sub
pop
popa
inc
fimul
mov
loop
js
pop
mov
xor
mov
pop
or
cmp
stos
xchg
pop
ret
xchg
add
jl
scas
mov
es
sbb
daa
scas
sub
push
sub
into
jne
js
push
cli
sbb
rcr
xor
adc
out
out
mov
mov
xlat
xor
pop
movs
mov
sub
mov
cs
test
push
inc
jecxz
cmp
sbb
mov
arpl
xchg
jb
out
sub
cs
jmp
sub
pop
leave
xor
(bad)
mov
imul
pop
cwde
cmp
dec
(bad)
loop
sbb
mov
sub
test
(bad)
lock
sbb
pusha
mov
sub
iret
jge
add
dec
and
xchg
aad
inc
inc
dec
enter
fwait
stos
mov
jmp
jno
xchg
stos
enter
mov
add
cdq
cmp
iret
into
dec
call
pop
out
xor
sbb
stos
inc
cmp
(bad)
call
pop
mov
ds
pusha
mov
mov
pop
mov
shl
rcl
test
inc
call
add
pop
xchg
(bad)
mov
stos
mov
sub
and
mov
sahf
sbb
dec
repnz
xor
sbb
inc
push
imul
dec
mov
fucomi
push
pop
(bad)
pop
inc
add
sbb
js
adc
add
add
out
add
dec
and
test
push
sub
sub
scas
add
call
shl
cmp
mov
pop
pop
mov
push
inc
mov
jae
and
cmp
mov
mov
retf
inc
xchg
push
repnz
(bad)
call
lds
mov
cmp
loopne
std
xor
jns
adc
loopne
cmp
popf
mov
cwde
fwait
iret
arpl
xchg
call
mov
dec
bound
inc
outs
sbb
mov
mov
iret
mov
push
dec
mov
jnp
dec
stos
outs
push
mov
push
or
jb
shl
mov
dec
cmp
adc
mov
leave
scas
mov
sbb
repz
xor
cs
nop
push
ret
jbe
adc
xchg
out
outs
jmp
pop
out
cs
fnstsw
and
repnz
iret
push
std
data16
cmp
dec
sbb
ror
xor
mov
mov
retf
in
out
sub
popf
into
dec
and
callw
loope
jp
sub
or
xchg
add
mov
mov
pop
mov
ins
sti
repz
das
rcl
mov
ret
ret
ins
aaa
inc
test
mov
adc
mov
add
jne
repnz
mov
pop
fwait
lods
adc
sub
xchg
cmp
adc
inc
loope
js
cld
ds
pop
popa
or
fucom
or
imul
dec
cdq
aaa
(bad)
xchg
sub
push
rcl
or
inc
xor
rcl
out
jg
addr16
mov
pop
ror
imul
jecxz
mov
xchg
pop
mov
and
fwait
inc
push
sub
push
arpl
dec
(bad)
xor
mov
cmp
jns
jbe
pop
xchg
jle
pop
mov
repz
pusha
je
push
jae
xchg
add
push
push
outs
push
imul
push
push
popf
or
lea
pop
sbb
in
loope
xchg
in
push
call
and
jnp
shr
cwde
cmp
loope
inc
cmp
hlt
enter
mov
dec
js
mov
test
inc
sbb
push
jmp
pop
fst
mov
xrelease
ins
movs
xchg
add
ss
mov
mov
inc
(bad)
in
f2xm1
jnp
(bad)
icebp
lahf
stos
int
pop
pop
bound
mov
or
mov
push
cmc
xchg
jg
mov
and
inc
jae
(bad)
add
add
lahf
jbe
scas
popa
ds
push
pop
into
pop
pop
outs
mov
push
not
movlps
fstp
pop
xor
xchg
jae
push
dec
les
inc
sub
sbb
cmc
test
push
sub
push
dec
movs
push
clc
ins
mov
xchg
mov
and
shl
xor
pop
ret
(bad)
mov
out
das
xchg
mov
mov
cmp
jl
pop
imul
das
dec
pop
sahf
or
(bad)
jno
mov
bswap
cdq
pushf
adc
dec
dec
or
cmp
push
sbb
sbb
les
dec
into
dec
jo
daa
sbb
mov
jo
test
push
(bad)
jmp
jecxz
jmp
fistp
movs
dec
jnp
and
xchg
test
std
pop
jne
pusha
pop
ror
inc
sub
jg
adc
cmp
dec
icebp
pop
loope
add
sbb
mov
dec
cmp
hlt
push
data16
jne
dec
adc
ror
or
jmp
and
dec
ins
daa
mov
push
inc
aaa
pop
gs
out
test
mov
xlat
into
ret
ds
shl
push
or
add
mov
xchg
add
adc
mov
stos
sub
cwde
pop
shr
lods
sub
jmp
ss
xchg
pop
xor
inc
rol
test
shr
sbb
das
sub
out
sbb
retf
mov
shl
pop
mov
int3
adc
leave
loope
outs
mov
jp
sub
adc
repnz
leave
xchg
daa
mov
pop
add
loope
cwde
jge
test
add
push
loope
mov
test
push
jle
inc
push
aas
scas
jnp
imul
iret
inc
add
mov
xchg
xor
jno
sbb
or
jne
push
imul
sub
cmp
mov
aam
pusha
sbb
gs
pusha
pusha
loopne
jg
test
cld
jle
or
cld
xchg
and
icebp
sub
loop
mov
mov
sub
mov
test
sub
popa
sbb
cmp
push
adc
cld
je
mov
data16
jns
push
ret
cmp
mov
mov
je
push
cmp
cmp
(bad)
cmp
jle
aaa
mov
sbb
aad
retf
and
dec
cld
call
inc
sub
clc
lods
call
rcl
jmp
mov
pop
dec
push
and
arpl
loope
movs
add
movs
xor
cmps
mov
pop
dec
jg
sar
pop
daa
add
dec
std
mov
imul
add
jne
sbb
mov
cdq
inc
mov
add
xchg
(bad)
xchg
in
(bad)
cmp
push
and
cdq
mov
enter
dec
sbb
mov
inc
in
fstp
add
push
sbb
nop
bound
mov
test
ja
(bad)
mov
mov
mov
loope
cmp
shl
mov
sete
lods
(bad)
out
leave
jg
cmp
push
mov
push
test
data16
cli
jnp
repz
cmp
adc
popf
outs
ficomp
dec
mov
fs
mov
jnp
out
call
outs
xor
stos
mov
xor
pusha
xchg
rep
fs
int
push
sub
dec
shr
sbb
cld
imul
push
bound
movs
adc
jg
adc
ficom
jnp
addr16
xchg
gs
or
xchg
add
sub
leave
aaa
push
push
aaa
fs
daa
cmc
fwait
lods
xor
jle
add
jns
dec
lahf
jns
push
mov
call
mov
pop
xor
xchg
and
mov
sbb
aam
xor
call
adc
xor
mov
test
mov
call
outs
sub
imul
jmp
and
repz
jae
cmp
cmp
mov
(bad)
clc
ds
or
jb
ins
xchg
xchg
cwde
lods
push
icebp
or
mov
or
push
mov
imul
and
and
test
push
mov
in
mov
xchg
push
lahf
mov
fwait
push
stos
xchg
movs
push
out
dec
dec
mov
add
inc
(bad)
mov
jle
inc
in
jns
dec
data16
fidiv
nop
sahf
push
jne
dec
sub
hlt
int
addr16
int3
(bad)
push
sub
gs
push
nop
out
loopne
mov
xlat
(bad)
stos
ins
int3
push
sub
pop
fisttp
mov
in
pushf
xchg
sbb
xlat
mov
dec
aas
sti
loope
dec
ds
jo
pop
pop
cdq
adc
mov
and
mov
dec
jbe
ficomp
aad
sub
(bad)
inc
js
inc
sahf
sub
push
cdq
jno
je
jmp
movs
cld
and
sub
inc
jns
pop
outs
xor
fwait
xor
pop
xchg
retf
js
fstp
sar
push
mov
mov
popa
je
mov
inc
daa
ins
cmp
bound
sbb
push
imul
icebp
rol
jbe
inc
out
mov
cmp
int
inc
or
bound
repz
push
cmp
mov
adc
jne
dec
xor
aad
xchg
imul
cmp
mov
repz
sub
xor
mov
(bad)
jecxz
lods
mov
stc
mov
jae
mov
(bad)
arpl
into
jb
mov
out
sti
adc
outs
sbb
(bad)
mov
ficom
mov
xchg
fisubr
mov
inc
lds
stos
mov
gs
mov
fild
mov
std
push
imul
fld
aaa
pop
loop
jns
inc
mov
loope
inc
dec
push
xor
cmp
mov
sub
mov
cmp
mov
call
dec
push
cmp
inc
cmp
fwait
push
dec
test
es
mov
jbe
xor
test
pop
fwait
popa
jl
(bad)
lahf
scas
rol
jmp
mov
rol
pushf
scas
stos
sbb
adc
ret
push
sbb
xlat
dec
sub
xchg
adc
xchg
dec
mov
inc
mov
xchg
popf
jbe
(bad)
mov
sbb
mov
lods
xor
mov
aaa
mov
pop
pop
xor
mov
inc
sti
leave
clc
(bad)
cmp
xchg
in
pop
and
inc
pop
mov
push
push
(bad)
mov
sub
sar
cmc
hlt
call
ss
rcr
retf
fimul
mov
xor
nop
pop
sti
lahf
fs
retf
pop
fsub
xchg
dec
pop
xor
test
push
std
sub
loop
xor
add
sub
mov
repnz
movs
test
sbb
movs
into
test
xchg
dec
jne
mov
xchg
mov
icebp
pusha
mov
fisttp
push
ficom
retf
xchg
mov
pop
shrd
inc
(bad)
cld
mov
fcom
into
fisub
lods
lock
mov
add
retf
int3
push
bound
lahf
xchg
and
and
jo
nop
cdq
add
scas
jle
cmps
sub
jne
lods
cmps
pop
inc
jg
mov
(bad)
cdq
xor
test
cmp
sub
push
xchg
imul
out
in
stos
rol
loopne
mov
sahf
xlat
xchg
pop
xor
test
jg
aaa
or
in
mov
clc
repz
fwait
push
push
cwde
xlat
adc
mov
xchg
mov
add
sbb
jbe
mov
in
xor
imul
sub
or
enter
or
sbb
or
std
(bad)
mov
xchg
pop
adc
(bad)
stc
inc
or
in
jp
sbb
icebp
xchg
rcr
mov
(bad)
rcr
(bad)
and
cmp
les
sbb
push
mov
popf
push
sub
dec
sub
lods
mov
retf
sub
mov
je
je
push
iret
ins
aad
add
(bad)
push
xchg
movs
stos
jae
retf
inc
jbe
xor
stos
test
ja
out
(bad)
test
(bad)
mov
in
shl
xchg
cmp
std
mov
(bad)
cmp
addr16
xchg
stc
push
in
ret
xlat
jnp
and
dec
push
lock
fwait
and
dec
jbe
pop
test
or
adc
xchg
mov
fwait
loopne
cmp
mov
scas
paddd
inc
aaa
pop
addr16
jmp
lea
xlat
xor
leave
inc
add
sbb
and
mov
(bad)
mov
int
xchg
jne
pushf
iret
je
inc
popf
add
pop
repnz
cmc
pop
add
js
sbb
nop
sbb
or
clc
mov
(bad)
or
ins
cmps
data16
and
xchg
jb
test
sub
(bad)
hlt
in
arpl
jle
cmp
pushw
and
test
int3
loop
imul
add
pop
loop
mov
jns
sbb
adc
pop
fidivr
scas
shr
(bad)
fwait
sbb
add
inc
fsubrp
(bad)
mov
sbb
xchg
jnp
test
stos
push
retf
xchg
fcom
dec
rcl
mov
mov
retf
mov
dec
ror
rcr
inc
and
popa
adc
out
xchg
xchg
jno
jnp
push
jg
jbe
data16
in
lds
out
shl
xchg
pop
mov
jl
loop
adc
inc
pop
sub
clc
rcl
popf
pop
stc
das
rol
jb
jns
fnsave
jno
add
test
adc
xchg
add
adc
mov
sub
adc
xor
mov
lds
outs
jmp
xchg
lods
(bad)
pop
inc
loope
dec
jb
or
sbb
outs
and
or
daa
push
sbb
xchg
(bad)
aam
lahf
push
cmp
mov
xor
add
mov
fisub
dec
xchg
pop
add
inc
pop
pop
and
cdq
sub
sub
inc
add
mov
push
fsub
cmps
inc
sub
cmp
push
test
mov
mov
ins
in
jae
sbb
shr
aas
sbb
cmp
mov
pop
sub
data16
cmps
inc
sub
jmp
cmps
popa
sbb
int
push
lahf
jae
mov
xchg
cli
arpl
jo
sub
dec
or
test
inc
or
retf
and
push
sahf
jo
aaa
jmp
pop
leave
inc
mov
mov
sub
pop
pop
pushf
aaa
mov
stos
lods
popf
ds
mov
cld
es
inc
into
cli
(bad)
(bad)
cmps
jge
cli
mov
jb
shl
xchg
xchg
(bad)
cwde
cmp
jo
loop
je
push
cmp
fild
das
sbb
inc
xchg
das
cmc
or
pop
imul
mov
test
popa
inc
jl
test
pop
mul
bsr
xlat
mov
xlat
mov
or
jb
jns
popf
shr
into
cmc
fst
sub
call
aad
mov
jne
jbe
jns
rol
sbb
cdq
add
inc
add
mov
and
ret
push
mov
mov
inc
dec
push
fsubr
test
mov
(bad)
jecxz
fistp
in
jle
push
jnp
aaa
cld
test
sar
add
inc
jbe
mov
or
and
je
xchg
cdq
mov
retf
xchg
jae
cld
out
cwde
mov
jno
or
xchg
pop
mov
jbe
out
(bad)
and
pmuludq
inc
and
leave
adc
(bad)
dec
(bad)
cdq
mov
mov
pop
stc
sub
dec
pusha
mov
iret
inc
in
add
addr16
mov
mov
jg
retf
fs
into
into
neg
xchg
leave
inc
or
ins
fcomp
inc
call
mov
xchg
out
inc
push
jno
jb
jno
sbb
dec
sub
fdiv
sahf
xchg
in
cmp
sub
aaa
arpl
outs
pop
jae
js
std
sub
test
(bad)
mov
jmp
imul
dec
pop
mul
sahf
mov
fidiv
ins
pop
pop
arpl
fdiv
dec
outs
and
or
pop
xor
and
push
xchg
outs
or
and
repnz
xor
push
scas
ret
inc
mov
sbb
ficom
daa
wrmsr
xor
pushf
dec
pop
sar
out
cmc
jno
outs
add
int
or
dec
sbb
mov
xchg
jmp
test
call
in
les
push
fst
loope
out
mov
mov
push
daa
dec
pop
loop
jle
test
es
mov
and
test
mov
cmp
imul
mov
push
cmp
pop
inc
adc
pop
call
lods
dec
aad
cmp
cmp
cmp
das
pop
cwde
xlat
repz
in
push
rcl
pop
add
mov
gs
fistp
adc
sbb
inc
gs
jp
push
daa
sub
cld
pop
mov
dec
push
pop
lds
mov
mov
lock
pop
mov
std
inc
cs
retf
add
ins
neg
call
je
cmps
outs
pop
push
sub
shr
into
shl
scas
push
jg
out
jp
jge
inc
(bad)
and
add
(bad)
xor
cmp
jecxz
cmp
(bad)
pop
adc
std
sbb
ins
movs
jb
add
add
in
in
ficomp
fistp
les
test
add
out
or
jp
pop
cmc
repnz
loope
push
xor
fcomp
icebp
(bad)
aam
mov
push
mul
and
mov
fcmovu
enter
mov
adc
aad
imul
inc
jbe
sbb
dec
test
pop
lds
stos
bound
mov
and
pop
jle
mov
cs
sub
fistp
mov
js
jae
(bad)
and
imul
sub
int
icebp
pop
clc
cmp
arpl
or
xor
(bad)
push
push
xor
mov
ins
push
fld
add
aam
sbb
mov
sub
lods
sbb
or
fild
add
inc
inc
movs
or
mov
sbb
out
push
jle
inc
mov
ja
in
stos
clc
push
and
fstp
out
inc
sbb
lds
pop
sbb
add
outs
dec
repz
js
jno
and
pop
pop
or
lea
jge
xlat
mov
mov
push
jbe
cs
gs
push
neg
xor
fild
push
test
sub
add
pop
jle
icebp
sub
scas
icebp
adc
pop
cmc
iret
adc
inc
xchg
jnp
mov
je
cli
dec
ret
inc
pop
into
jae
lods
(bad)
dec
mov
sbb
mov
call
pop
int
fst
mov
fimul
xor
xchg
ins
dec
xor
xchg
mov
pop
popf
fisub
test
ret
into
push
jp
cmp
jmp
repz
inc
lea
push
cld
stos
sti
pop
adc
sahf
and
dec
fisttp
movs
dec
stos
mov
test
repnz
sbb
cmp
fstp
cmp
(bad)
popa
sar
nop
jl
lock
lock
addr16
sub
pop
and
imul
adc
add
loopne
mov
mov
push
pop
xlat
sbb
fisubr
mov
cmps
shr
dec
add
addr16
mov
and
pop
pop
xchg
cdq
aam
jb
repnz
inc
mov
test
cmp
imul
mov
cld
loope
(bad)
jmp
mov
icebp
push
push
sub
sub
(bad)
mov
data16
xchg
or
aas
mov
hlt
sahf
dec
push
and
inc
lea
and
push
cmp
mov
in
and
mov
cmp
xor
add
loopne
add
mov
push
sti
or
and
add
or
push
repz
call
aad
rcr
lds
jge
hlt
icebp
ins
inc
sti
outs
pop
das
stos
(bad)
data16
cmp
mov
mov
and
pop
mov
les
dec
and
fwait
sar
xor
xchg
int
outs
push
aam
dec
dec
sub
or
cmc
into
arpl
cmps
inc
push
clc
repnz
jno
lock
into
stos
je
cmp
cmc
ja
movs
pop
arpl
lods
xor
mov
push
xchg
push
jae
xchg
shr
xor
fstp
fisubr
xchg
xor
mov
xor
add
mov
fwait
mov
in
mov
fldcw
call
cmps
cmps
and
pop
out
or
sbb
fidivr
gs
imul
mov
pop
stos
jns
and
je
or
sar
add
pop
jmp
xchg
adc
out
ror
dec
and
push
daa
ds
cmp
dec
in
inc
out
jge
mov
repz
les
xor
enter
fdivr
movs
(bad)
shr
stc
mov
int
cmps
jge
fcom
aam
pop
sbb
and
arpl
pushf
or
fstp
push
jnp
jne
in
clc
sti
clc
dec
pop
xchg
jns
sub
cmp
and
aam
pop
cwde
icebp
or
xchg
ins
and
xchg
cmp
jo
imul
aas
leave
dec
inc
call
and
and
dec
in
cli
leave
lods
scas
out
fiadd
sbb
mov
pop
add
xchg
xor
xchg
jp
inc
mov
scas
xor
mov
ror
das
add
popf
out
(bad)
aam
stc
popf
sar
pop
jl
pop
sub
push
fcom
push
popa
pushf
push
sbb
push
jb
sub
mov
fadd
in
push
fldcw
enter
add
jle
inc
sbb
push
test
fisttp
cmp
and
push
es
fnstenv
pop
fnstenv
cld
dec
in
gs
mov
fisttp
inc
ficomp
xchg
lahf
jno
or
jmp
cmp
int3
jno
xlat
push
loope
adc
xchg
add
ret
xchg
push
inc
rcr
std
call
mov
(bad)
push
pop
jmp
xchg
aas
and
push
mov
scas
rol
adc
jge
(bad)
int
mov
das
std
mov
out
fucomip
jl
shl
ins
(bad)
js
add
sub
add
push
inc
jne
xor
out
sahf
iret
test
mov
fwait
add
cmps
pushf
shl
sbb
xor
sub
pop
cmp
mov
int3
ins
jb
in
cmp
jl
cs
stos
fwait
sbb
ins
sbb
and
daa
mov
out
push
test
pop
adc
cmp
sbb
ds
icebp
inc
xchg
pop
lods
ret
scas
mov
inc
iret
xor
aam
retf
out
cmp
repnz
push
iret
or
jecxz
adc
aaa
ss
cmp
jmp
sub
mov
mov
fwait
outs
(bad)
pop
ds
pop
jns
mov
add
mov
jns
sti
cmp
or
mov
dec
inc
jp
xor
adc
scas
dec
je
jmp
inc
neg
cld
mov
dec
(bad)
fyl2xp1
sbb
mov
xchg
or
(bad)
push
out
in
js
mov
out
xchg
pop
xor
push
jbe
fsub
fmul
dec
ins
xchg
jno
sub
repnz
pop
(bad)
shl
or
xor
sbb
pop
ret
js
nop
dec
hlt
cmc
mov
mov
pop
popa
adc
addr16
xchg
aam
pop
push
or
mov
sar
mov
pop
in
fsub
sub
std
pop
clc
das
sbb
push
dec
call
adc
xor
outs
or
jae
and
pop
cmp
mov
mov
cmc
loop
push
jmp
adc
xchg
movs
inc
das
push
les
mov
cmp
inc
(bad)
dec
add
mov
sub
scas
push
mov
retf
pop
in
sub
add
nop
mov
sbb
and
pop
and
push
jnp
cmp
loop
dec
leave
cs
ja
inc
jo
popa
outs
xor
dec
add
sub
adc
push
or
sub
out
mov
lods
add
(bad)
jle
out
push
mov
daa
sbb
popa
add
ds
mov
and
xor
push
pop
fwait
sub
push
int
pop
xchg
mov
add
dec
cli
mov
lea
aas
lahf
ret
std
fild
mov
xor
mov
mov
mov
stc
or
and
add
mov
ret
int3
data16
cdq
add
test
push
sub
xchg
add
ss
bound
int3
movs
fldenv
(bad)
or
dec
adc
jo
sub
dec
sbb
add
test
fild
adc
mov
mov
add
(bad)
add
mov
jne
push
int3
ins
stc
inc
jmp
ds
sti
mov
xor
sbb
push
scas
jb
cmp
in
iret
cmc
mov
add
add
outs
test
jmp
scas
inc
xchg
adc
rcr
and
(bad)
cmp
nop
push
lods
cmp
shr
jle
test
mov
dec
pop
test
repz
mov
add
mov
mov
add
(bad)
rol
js
push
and
in
ror
inc
repnz
xor
fwait
aam
jno
sbb
cdq
addr16
add
mov
cmc
mov
mov
inc
retf
outs
ss
push
push
or
or
add
mov
int
(bad)
fst
in
xchg
jmp
cmp
pop
xor
jns
jp
jne
into
jl
pusha
adc
xor
adc
dec
push
scas
cdq
aas
adc
xchg
in
(bad)
add
mov
pop
cmps
inc
dec
inc
(bad)
repnz
mov
std
jno
sub
jge
psadbw
dec
sub
push
add
(bad)
pop
(bad)
cli
pop
inc
mov
and
cli
adc
das
std
inc
jne
std
sub
out
mov
(bad)
mov
mov
mov
push
cwde
hlt
aam
adc
imul
xor
cmc
add
adc
pop
fisubr
leave
inc
add
adc
fcomp
jmp
mov
addr16
or
fsub
pop
das
pop
mov
push
mov
inc
ror
icebp
jmp
test
xchg
push
sub
ins
or
inc
vmptrst
push
fwait
inc
push
pop
push
cs
adc
mov
adc
and
dec
mov
sbb
pop
xor
rol
xchg
mov
add
adc
aas
or
and
ror
in
aam
sti
ja
popaw
mov
push
or
call
add
add
mov
(bad)
(bad)
and
mov
inc
ret
jnp
mov
ret
shl
xor
sub
mov
or
(bad)
imul
jle
and
fild
outs
scas
mov
dec
and
fsubr
mov
repz
mov
aaa
sub
add
and
pop
xor
jne
and
mov
and
cli
add
pop
or
or
popa
rcl
dec
loope
icebp
sub
jns
mov
icebp
lock
ror
repnz
js
pop
jbe
lea
mov
lock
in
iret
mov
pop
mov
mov
adc
jmp
fdivr
cdq
retf
iret
repz
dec
sub
mov
xchg
ficomp
call
out
mov
les
push
jge
sbb
or
inc
lds
test
pop
add
ficomp
je
call
adc
ss
lods
movs
sbb
adc
out
es
xor
push
fild
in
push
sar
mov
cmp
stos
cmc
cmps
in
(bad)
mov
cs
sub
shr
xchg
mov
mov
jle
dec
test
cmp
sub
arpl
pop
mov
push
in
push
icebp
fst
xor
add
sbb
adc
imul
int
push
xchg
lods
sti
in
xor
inc
popa
mov
xor
push
sub
sbb
gs
gs
fcomp
outs
les
add
xor
and
ja
jne
add
xchg
mov
or
addr16
add
enter
ja
jnp
adc
sub
cwde
mov
stc
xor
shl
ret
dec
dec
movs
movs
push
xor
lods
in
mov
in
xlat
daa
mov
cwde
push
jo
xchg
mov
retf
or
mov
ja
add
dec
push
repz
(bad)
in
out
out
cmp
inc
lods
into
dec
xchg
xor
stos
pop
add
push
fst
int
(bad)
fnstsw
jmp
mov
sub
push
mov
xchg
pop
repnz
xlat
inc
dec
sub
dec
js
test
leave
and
xchg
xchg
call
add
rcr
push
loopne
sbb
ins
ds
add
test
mov
jnp
(bad)
iret
xor
lods
or
sbb
sbb
adc
in
fsub
xchg
ins
mov
js
xchg
ins
movs
sbb
push
jns
pusha
stos
mov
push
aad
jo
push
jns
cmp
(bad)
retf
cmp
aas
push
xchg
lods
lock
test
test
lods
push
sub
dec
in
call
or
fs
retf
inc
ja
aam
shl
xor
adc
xor
jb
inc
xchg
pop
or
inc
xor
pop
pop
xchg
jmp
dec
jae
xchg
push
mov
(bad)
mov
xor
int
nop
fdiv
adc
fcomip
scas
push
mov
add
xchg
leave
out
sbb
pushf
push
sar
xor
jle
addr16
fist
pusha
pusha
sub
nop
in
rol
stc
jbe
sbb
repnz
fs
fst
xor
in
xchg
pop
mov
shl
movs
mov
jno
push
iret
adc
sbb
jg
jmp
(bad)
sub
les
aad
jecxz
or
rcl
int3
dec
inc
pop
mov
out
into
ss
stc
mov
push
sbb
mov
pop
pop
mov
xchg
or
pop
push
rcl
xor
push
cmp
icebp
or
les
xchg
sbb
retf
jl
ins
loopne
cmps
mov
ja
sbb
cmp
dec
dec
in
(bad)
fiadd
(bad)
gs
cld
cmp
je
nop
int
cmc
(bad)
popf
mov
out
mov
jl
inc
xor
jge
push
push
int
mov
pop
cmp
ror
jmp
loop
cmps
push
mov
adc
mov
and
dec
or
cs
mov
push
inc
inc
fld
adc
in
leave
push
hlt
push
dec
dec
(bad)
pop
cmps
cmp
push
cmps
xor
xor
fild
cmc
mov
jne
push
aam
out
mov
xor
retf
cs
mov
adc
imul
push
push
dec
add
pop
push
mov
popa
inc
sub
arpl
test
sti
or
mov
in
cmp
dec
inc
mov
aas
push
aad
arpl
out
arpl
inc
shr
cmp
mov
ss
cdq
jno
dec
mov
inc
push
add
jp
cmp
add
clc
sbb
adc
mov
repz
add
stc
clc
js
mov
pop
or
sti
mov
push
gs
ret
xor
xchg
dec
cmp
sbb
or
sbb
sar
adc
adc
int
je
push
or
mov
sub
mov
inc
fs
mov
movs
xchg
dec
mov
add
cwde
adc
or
xor
add
jp
cmp
fs
pop
nop
in
repnz
popa
mov
outs
jae
mov
xor
push
pop
test
out
xor
jb
xor
repz
jb
mov
push
jnp
cmp
xor
aam
(bad)
pop
out
cmp
sbb
inc
loop
in
(bad)
popf
lock
jmp
test
and
push
push
adc
das
fs
jmp
ja
aaa
pop
addr16
mov
push
push
xor
test
cmps
sbb
jmp
lds
mov
push
push
pop
(bad)
jbe
out
(bad)
popa
loop
out
push
sbb
out
jl
lds
cmp
ins
sar
dec
push
push
xchg
push
xor
jge
aam
in
mov
stos
inc
aas
push
inc
lock
fwait
mov
pop
out
imul
fcom
ret
std
xor
push
mov
sub
add
jg
pushf
fcom
sahf
out
add
sub
jns
mov
outs
loopne
mov
in
sbb
add
les
sub
stos
imul
add
dec
into
push
hlt
inc
and
inc
loop
sub
mov
fld
jl
ins
cmp
ins
mov
mov
pop
ret
sub
xchg
imul
mov
sar
cmps
xor
inc
rol
mov
outs
dec
mov
imul
pushf
fnstcw
adc
sbb
loope
leave
movs
mov
pop
cmp
push
add
pop
sub
mov
scas
test
mov
and
push
enter
icebp
(bad)
pop
mov
fwait
fs
mov
outs
retf
push
push
dec
(bad)
cmp
or
mov
jno
stc
shl
aad
push
in
(bad)
icebp
sbb
loop
lods
mov
mov
sub
cli
(bad)
call
fsub
js
xlat
(bad)
popf
or
push
nop
in
cwde
(bad)
dec
hlt
rol
sbb
nop
push
sbb
out
pop
mov
out
pusha
cld
ja
inc
pop
push
lock
idiv
cmp
xor
xchg
jge
pop
pop
loope
in
jle
aad
or
movs
mov
outs
mov
imul
out
xor
mov
(bad)
push
xor
cmp
call
aas
les
sahf
rol
xchg
xor
push
les
rcr
repnz
sbb
jmp
mov
sahf
out
adc
lea
xchg
inc
sbb
pop
mov
cmp
scas
aaa
sub
in
ret
sbb
adc
cmp
fcmovu
cmp
sub
call
jns
imul
mov
call
js
sbb
les
icebp
into
shr
loop
sub
xchg
into
pop
arpl
repnz
shl
mov
cmps
ss
out
fmul
sti
push
sub
(bad)
mov
xchg
rol
pop
shl
adc
or
mov
stos
lahf
or
dec
pop
ss
xor
sbb
in
inc
rcr
jmp
test
loop
fs
fucomp
sub
xor
and
iret
(bad)
sub
loop
ins
cld
stos
movs
div
pop
aad
pop
push
pop
js
and
call
out
dec
adc
add
call
mov
xchg
sahf
adc
out
sub
gs
mov
pusha
retf
add
sbb
pop
sub
rol
push
pop
push
adc
sbb
or
aaa
adc
jge
dec
and
mov
push
jmp
loop
dec
sbb
ret
pop
stc
push
mov
mov
lock
cmp
mov
sub
(bad)
adc
xchg
ret
test
in
popf
mov
push
xchg
sub
fsub
pop
cld
lods
push
push
or
jnp
sbb
xchg
sub
add
ret
ret
cmps
cld
cdq
push
or
not
sbb
ror
and
add
loop
dec
add
arpl
dec
in
jle
pop
inc
add
xchg
pushf
pop
or
mov
push
mov
mov
mov
push
adc
mov
inc
sbb
push
dec
push
xchg
repz
jle
stc
sbb
xchg
(bad)
jg
dec
inc
dec
inc
in
stos
leave
or
mov
xor
add
jge
repnz
pop
mov
sbb
xchg
loope
xchg
inc
addr16
push
mov
pop
mov
jmp
ds
add
add
jbe
dec
mov
retf
inc
out
adc
imul
xor
or
lock
popa
popf
xor
fs
xor
loopne
adc
repnz
mov
jge
ret
push
shl
lock
xor
xor
ins
lea
cs
out
xor
push
mov
loop
jge
jno
and
or
jecxz
inc
sub
das
imul
add
mov
xlat
ins
sbb
jmp
jns
je
xchg
push
pop
mov
xchg
add
fisubr
sti
fmul
aad
xor
sub
fist
fcomp
inc
bound
inc
lea
stos
jb
mov
pop
loopne
in
fist
cs
pushf
cmps
jp
push
das
in
mov
cdq
mov
pop
aas
lods
imul
sahf
cmp
scas
std
jno
mov
ja
nop
out
(bad)
pop
xor
push
pop
adc
stos
data16
inc
and
test
jmp
push
stos
and
pop
stos
adc
fs
or
push
retf
inc
call
movs
add
clc
dec
fmul
adc
in
out
into
cmp
sbb
je
mul
add
jno
sbb
ret
repz
cmp
push
jne
dec
loop
dec
xchg
cmp
cmp
sbb
lea
sbb
xchg
enter
xor
push
pop
je
fld
jp
fs
hlt
mov
mov
add
and
add
sub
daa
out
ret
adc
in
mov
stos
shr
adc
mov
mov
jb
add
les
and
push
add
in
adc
test
rcl
or
sbb
mov
jmp
arpl
in
jns
stc
into
push
jbe
sub
mov
inc
sub
sbb
test
mov
jmp
mov
jecxz
pop
push
adc
mov
int3
repnz
sbb
(bad)
into
lea
push
cmp
fld
cmp
ss
sub
sub
stc
cmp
xor
add
sub
jg
dec
or
or
and
cmp
mov
or
or
dec
repnz
mov
test
jmp
leave
and
cmc
jb
sub
fmul
pop
jmp
cmps
xchg
imul
movs
cmp
jo
icebp
fcomp
shl
pop
movs
call
jnp
sti
and
push
lods
mov
jae
gs
ret
sub
(bad)
shl
jmp
pop
fbstp
push
pop
repnz
int
xor
dec
sbb
shl
cmp
je
retf
fsubr
adc
outs
sbb
add
fs
lea
iret
jl
mov
mov
ins
outs
cmp
mov
(bad)
repz
mov
mov
fcmovbe
mov
out
mov
mov
sbb
shr
jle
(bad)
iret
xchg
adc
shl
dec
rep
loopne
xchg
outs
or
(bad)
int
push
mov
movs
fwait
inc
mov
mov
pop
scas
test
es
xor
mov
out
rcr
leave
mov
lods
data16
addr16
jp
push
jecxz
sub
inc
fstp
out
ret
arpl
ins
pop
leave
xor
nop
xchg
inc
cmp
ss
sbb
inc
pop
loope
es
dec
and
add
mov
int3
adc
and
dec
sbb
mov
imul
mov
out
sbb
cmp
test
adc
lahf
sahf
xchg
call
jp
adc
pop
hlt
cwde
inc
mov
das
push
adc
mov
mov
mov
enter
ret
inc
inc
push
nop
test
(bad)
sbb
sysenter
movs
fstp
(bad)
ins
pusha
imul
hlt
fcmove
cmp
sbb
retf
xchg
(bad)
daa
jge
fnstenv
in
inc
and
mov
das
(bad)
test
mov
ror
enter
out
jle
test
sbb
shl
out
rol
push
loope
call
and
cwde
or
(bad)
nop
xchg
mov
jmp
(bad)
je
(bad)
and
sbb
cmp
jg
(bad)
stos
daa
add
add
mov
repz
les
das
and
loopne
add
cmp
pop
mov
outs
sub
sbb
popf
loop
ret
out
int3
jae
dec
add
int
cmp
add
add
push
dec
and
mov
cmp
leave
and
lea
cmp
clc
xchg
movs
test
xlat
or
rol
jne
sar
cmps
lods
js
jb
cmp
xabort
stos
neg
mov
mov
or
jb
arpl
ret
jne
sub
lahf
xor
jmp
mov
add
popf
sbb
imul
fsub
nop
imul
sub
lods
(bad)
push
dec
pop
fcomp
cmp
jbe
dec
sbb
mov
push
push
out
clc
adc
(bad)
push
inc
and
lea
loope
cmp
movs
xchg
ins
mov
aam
imul
pop
imul
imul
xor
jmp
pop
push
push
mov
aaa
je
call
mov
add
fdivr
setnp
enter
xchg
xchg
jno
sub
add
mov
xor
mov
mov
jmp
push
or
(bad)
cli
dec
mov
mov
cmp
out
dec
adc
jmp
inc
out
or
cli
fabs
inc
xchg
cld
or
mov
jecxz
sbb
rol
sbb
sub
sub
pop
mov
cwde
xor
dec
mov
loope
int
pop
test
je
movs
cmps
sub
loop
mov
mov
fwait
retf
adc
fwait
clc
jnp
stos
sub
dec
or
add
cmps
outs
(bad)
mov
fs
jecxz
sahf
inc
sub
ins
call
jns
push
mov
cli
adc
movs
jnp
xlat
push
jle
push
cmp
stc
das
jl
out
loope
enter
mov
jge
push
call
ins
xchg
sub
inc
inc
push
jns
les
adc
aaa
cmp
outs
push
ja
sub
stc
push
push
or
ja
(bad)
bound
in
dec
xchg
push
cmps
push
sahf
sahf
popf
loope
popa
sub
lea
outs
fsub
or
push
mov
popa
shl
aad
stc
xor
popa
adc
push
ins
xor
cwde
sbb
sbb
sbb
jle
jg
inc
aam
or
sub
push
rcr
test
sbb
cmp
cmps
dec
xor
inc
xchg
repnz
add
adc
pop
add
sbb
aad
sub
fild
mov
stos
cmp
adc
lea
mov
cmp
sub
and
xor
mov
ins
sbb
adc
inc
dec
aaa
movs
push
add
int
pminsw
and
sahf
adc
movs
jg
pop
add
das
mov
sbb
and
test
push
mov
push
jns
jbe
or
push
add
ja
adc
imul
call
das
(bad)
in
cmp
int3
add
sub
push
ficomp
stc
jp
pop
push
push
inc
ror
xchg
xchg
mov
lock
add
fs
dec
add
push
cmc
and
test
mov
push
in
or
popf
test
dec
sbb
movs
repz
mov
enter
and
mov
(bad)
in
call
pop
cmp
or
clc
pop
sub
xchg
adc
xrelease
inc
vmovlps
xchg
sbb
in
lods
cmps
lahf
jbe
fwait
push
fistp
es
xchg
add
shr
mov
push
ret
add
cmp
xchg
xchg
ds
dec
xor
xchg
sub
xchg
sub
stc
in
cmps
add
dec
cmp
push
(bad)
mov
inc
repz
outs
mov
push
add
cld
adc
imul
cmc
shl
out
cli
leave
test
jo
fcomp
int3
call
inc
imul
sbb
imul
loope
push
jmp
je
mov
data16
xor
or
inc
or
lahf
xor
pop
(bad)
xchg
ja
ja
add
ds
enter
pop
sti
cmps
movs
cmp
add
mov
jae
out
add
loopne
mov
mov
test
out
enter
stos
add
mov
mov
pop
mov
data16
xor
inc
mov
mov
stc
pop
shr
push
idiv
push
jmp
cmp
jp
mov
mov
xchg
add
movsx
imul
pop
jo
sbb
in
cmp
dec
fist
cdq
popa
and
xor
xchg
movs
mov
add
popf
dec
(bad)
and
int
mov
sbb
call
pop
inc
mov
add
jmp
jb
adc
out
es
idiv
leave
adc
cmc
dec
scas
out
hlt
aas
adc
movs
pop
and
sub
and
xchg
cs
(bad)
call
(bad)
das
push
xor
jbe
loopne
and
int
shl
imul
ds
jmp
sbb
or
aad
not
sbb
(bad)
xor
(bad)
fsubrp
addr16
inc
or
imul
fld
or
popf
and
(bad)
aad
mov
pop
jnp
std
and
popa
push
mul
popf
ret
adc
in
movs
add
(bad)
and
sbb
xchg
cs
sub
pusha
mov
daa
sbb
mov
adc
cmp
pop
or
adc
mov
mov
mov
(bad)
out
xor
add
stos
adc
push
shr
push
lods
dec
push
xor
rcl
dec
pop
xor
es
xchg
jae
hlt
scas
pop
inc
sbb
mov
xchg
(bad)
pop
imul
mov
test
dec
jmp
mov
lods
xchg
xor
add
or
sar
fisttp
add
lods
fcompp
push
arpl
mov
add
pmulhw
sahf
sahf
jns
lods
ins
hlt
mov
jecxz
jge
popa
mov
test
ret
arpl
mov
xor
xor
pop
and
test
sub
mov
mul
daa
and
cwde
loopne
outs
push
push
jmp
loop
lock
cmp
push
shl
mov
cmp
xchg
cmp
aas
dec
(bad)
das
pushf
xchg
mov
fild
mov
xchg
mov
mov
mul
mov
cmps
pop
scas
cld
mov
fnstcw
add
mov
dec
imul
ins
movs
sbb
(bad)
aas
jl
mov
dec
mov
add
das
adc
movs
gs
and
test
mov
jge
inc
(bad)
fimul
test
and
or
sbb
jne
dec
leave
xor
jno
jge
cmp
mov
dec
jmp
fisubr
inc
fldcw
pop
pop
je
push
dec
clc
adc
mov
test
loope
pop
pop
adc
sub
dec
ret
addr16
xor
mov
outs
mov
adc
push
test
mov
stc
or
mov
lds
lahf
add
inc
cli
add
push
fsubr
xor
call
sub
cmp
jmp
jns
ins
push
ja
and
push
sub
stos
enter
fnstsw
stos
ins
mov
inc
mov
mov
mov
xlat
(bad)
jae
mov
in
xor
iret
xor
adc
mov
dec
fs
xlat
aad
mov
loopne
push
(bad)
mov
es
push
ret
lea
jae
mov
and
mov
adc
sahf
xor
push
inc
push
and
push
cmp
mov
pop
sub
jbe
push
xor
leavew
mov
xor
addr16
jmp
adc
pushf
into
mov
add
add
shr
push
cdq
cmp
dec
jno
inc
or
cmp
cdq
sub
dec
or
pop
in
loope
call
cmp
test
cwde
ret
popf
sub
mov
dec
into
sbb
add
nop
into
lea
or
pushf
out
xchg
sbb
pop
pop
loopne
pushf
mov
pop
mov
push
ficom
or
nop
test
stc
mov
mov
loopne
scas
int3
repz
fsubr
addr16
xor
push
sar
mov
in
addr16
pushf
mov
outs
lahf
sbb
je
das
or
cld
inc
jg
aas
add
mov
push
xchg
js
(bad)
int
shr
aam
or
stc
and
jge
jg
mov
daa
and
push
jle
push
dec
or
jle
push
push
shl
cwde
(bad)
aad
mov
shl
das
fwait
imul
and
in
pop
and
pushf
repz
sbb
sub
cs
pop
movs
pop
fmul
dec
mov
(bad)
pop
cwde
fild
adc
pusha
xchg
push
mov
loopne
jns
mov
sbb
xchg
test
pop
xor
dec
hlt
mov
loop
xor
xor
adc
mov
push
shl
out
repz
loopne
inc
jbe
int3
push
dec
mov
shl
dec
hlt
ret
push
jo
arpl
mov
hlt
jecxz
cwde
cmc
cmps
sbb
mov
leave
out
repnz
mov
div
xlat
pushf
add
or
lock
add
pop
push
or
jno
push
stc
scas
push
imul
xchg
jmp
fiadd
test
push
test
(bad)
ret
(bad)
jmp
clc
mov
ja
mov
aaa
push
ror
call
adc
cdq
cli
push
js
pop
pushf
scas
ror
inc
bound
ss
loop
mov
shl
push
in
add
(bad)
int3
retf
ins
in
ins
push
inc
shl
test
icebp
push
hlt
mov
fldcw
jg
out
sbb
aad
(bad)
aam
and
mov
loope
fnstsw
into
jae
push
mov
sbb
leave
div
loop
mov
or
xchg
addr16
xchg
sbb
xor
in
das
mov
xchg
xlat
push
adc
or
or
aas
fsubrp
neg
mov
nop
xchg
jecxz
iret
lods
sbb
call
jecxz
push
lahf
add
sbb
sti
push
into
dec
jecxz
jp
out
mov
dec
sub
sub
mov
sbb
sub
and
sub
push
(bad)
out
add
xchg
inc
test
mov
pop
cmc
add
sub
fistp
popa
adc
xor
imul
imul
into
test
rol
dec
fadd
push
popa
pushf
fistp
je
and
scas
adc
sbb
inc
gs
scas
outs
mov
retf
ds
sti
out
nop
lods
fisttp
xchg
fwait
mov
lods
(bad)
xchg
int
ret
push
scas
cmp
or
dec
fdivr
dec
das
jecxz
add
add
(bad)
cmp
dec
pop
jmp
int3
mov
mov
pop
lea
mov
and
and
adc
xlat
pop
mov
cmps
adc
jge
test
out
and
shl
mov
mov
cmp
pop
pop
and
shl
shl
movs
mov
outs
js
clc
fiadd
test
call
shl
repnz
hlt
dec
(bad)
xor
shl
cmps
cld
fs
push
(bad)
(bad)
in
jns
sbb
jge
jns
fcomp
mov
stc
daa
enter
pop
pop
xlat
test
and
mov
inc
cli
xchg
mov
adc
out
and
fisttp
int3
fidivr
inc
out
loope
lods
push
iret
jnp
adc
stos
hlt
push
mov
xlat
repnz
int
cmp
mov
in
ins
xchg
scas
xchg
shl
cmp
leave
ds
scas
shl
jo
aad
mov
gs
xor
mov
mov
clc
inc
jo
cmp
ss
inc
push
or
pop
xchg
inc
movs
add
or
repz
mov
inc
jbe
dec
add
movs
jne
cmp
loopne
retf
popa
inc
add
xchg
dec
or
pusha
jmp
push
cdq
mov
mov
frstor
push
sbb
ja
cmps
imul
arpl
dec
cmp
iret
jmp
out
mov
stos
push
adc
das
loopne
scas
fstp
push
leave
and
stc
data16
je
pop
cmc
xchg
leave
das
popa
outs
jne
cmp
icebp
lea
scas
dec
shl
std
push
push
ret
pop
sbb
pop
int
push
push
push
xchg
cmp
xchg
hlt
shl
jl
xchg
xchg
ds
xor
arpl
push
es
fwait
or
adc
popf
jle
pop
rep
movs
mov
mov
mov
inc
arpl
and
and
cs
not
leave
lock
mov
mov
mov
pop
lea
fdiv
or
cld
sbb
jp
in
ret
mov
cs
push
cmp
jb
test
push
jns
xor
pop
call
add
pop
push
sub
sbb
xchg
int
pop
ror
sub
je
mov
int
pop
push
mov
push
mov
inc
xlat
outs
add
hlt
(bad)
out
ret
pop
dec
xor
xchg
adc
and
fistp
cmp
movsx
sub
out
jmp
jmp
xchg
arpl
pop
jg
cmp
out
retf
add
adc
in
addr16
call
xlat
comiss
mov
inc
repnz
adc
pop
(bad)
es
imul
hlt
stos
shl
adc
call
add
leave
aas
and
mov
jae
adc
dec
and
cmc
fwait
inc
(bad)
mov
jne
pushf
add
fistp
pop
dec
xor
fcom
movs
xchg
sbb
dec
call
rol
adc
jp
jnp
loope
aas
pushf
les
jne
pushf
fst
sbb
xor
push
mov
sbb
jmp
push
adc
pop
repnz
in
jmp
icebp
pop
je
retf
imul
shl
sub
mov
mov
sbb
test
push
scas
in
movs
ins
pop
jnp
mov
out
inc
inc
mov
jmp
and
in
imul
lods
les
inc
mov
push
xor
and
outs
pop
sub
pop
out
add
jo
sub
rcl
jmp
int
cmp
movs
lahf
or
cmps
sbb
xchg
loop
ins
dec
mov
add
out
pop
add
cmc
dec
lods
cmp
sub
xchg
cwde
mov
stos
xchg
ret
or
iret
sbb
mov
cmp
idiv
lods
fsub
and
call
fmulp
xor
jecxz
fmul
in
test
imul
test
jbe
lds
inc
les
fisubr
xlat
das
cmp
push
pusha
in
jle
das
adc
loope
sub
push
ss
and
push
xchg
shr
dec
lahf
inc
das
imul
and
pop
outs
pop
ret
je
je
jns
es
div
cld
outs
adc
daa
pop
mov
sub
fsub
xchg
adc
push
pop
outs
and
push
setg
out
scas
inc
not
add
push
jno
nop
sbb
sub
mov
cmp
add
cmp
sti
jmp
fidivr
scas
mov
int3
fucomip
fimul
add
sbb
sbb
sub
mov
push
push
jno
imul
rcr
push
cdq
mov
dec
dec
inc
jmp
sub
lock
clc
or
xor
mov
adc
ror
dec
adc
push
dec
mov
ins
call
loope
push
jle
rcr
movs
mov
or
jb
aad
mov
push
loope
iret
xchg
iret
ins
leave
mov
jae
xchg
ret
inc
push
sti
push
ficom
xlat
leave
mov
(bad)
clc
mov
xor
xchg
mov
rol
jmp
data16
test
pop
sbb
fsub
adc
jb
or
xchg
add
fistp
cmp
aam
int3
inc
arpl
je
xchg
push
or
rol
pop
aam
mov
mov
xchg
lods
into
adc
push
push
adc
fcmovnu
pop
aaa
fild
(bad)
out
cmp
and
dec
fs
scas
inc
sbb
sbb
push
push
out
adc
pop
ds
dec
jge
mov
sbb
pop
push
mov
(bad)
fbld
scas
lds
stos
and
pop
retf
fs
mov
dec
mov
pop
popf
ins
fisttp
mov
push
(bad)
aad
lock
(bad)
loope
xor
dec
xchg
pusha
sbb
stos
into
sbb
or
(bad)
xchg
push
popa
out
inc
ret
mov
xor
dec
rol
mov
sar
inc
or
fs
push
stos
or
add
inc
sti
(bad)
fcomp
dec
cmp
xchg
shl
cmp
push
inc
fstp
mov
ficomp
clc
aad
jecxz
jmp
pop
xor
outs
pop
fwait
popa
mov
mov
xor
pushf
mov
mov
clc
aam
mov
xchg
mov
arpl
enter
or
(bad)
xchg
push
ins
jecxz
test
mov
adc
imul
out
das
dec
cld
push
pop
push
fdivr
sbb
retf
push
inc
pushw
cmp
jmp
jbe
or
dec
pusha
add
sbb
scas
lods
fidivr
sti
inc
rol
pop
dec
cli
sar
ins
and
xchg
lds
sbb
cmc
ror
mov
adc
call
cmc
mov
fucom
neg
mov
lds
push
dec
out
(bad)
mov
rol
mov
pop
and
je
push
rcr
push
ror
gs
imul
inc
cmps
pop
sub
jecxz
(bad)
rol
sbb
add
sub
pop
sbb
cmp
std
xor
inc
out
pop
arpl
mov
xor
jb
push
aas
pushf
cmp
add
inc
add
cdq
int3
fs
sbb
movs
push
pop
test
imul
sbb
mov
mov
sub
repz
inc
xor
lahf
and
mov
mov
dec
sub
ins
jno
push
push
in
sbb
(bad)
add
mov
jbe
(bad)
sub
lods
cmps
sbb
sub
out
outs
in
and
aaa
outs
inc
mov
ss
out
and
push
jle
stc
pop
inc
std
mov
minps
outs
mov
jmp
xchg
mov
lock
cs
int
cld
std
push
xchg
and
arpl
adc
push
in
iret
pop
pop
mov
test
mov
sub
cmp
xchg
fistp
outs
xchg
lds
nop
jp
cmp
cwde
push
stos
or
dec
repnz
jno
mov
daa
xchg
cli
movs
sahf
imul
xlat
outs
push
push
inc
inc
ds
mov
dec
inc
add
cmc
mov
pop
mov
std
fisub
icebp
shl
jge
lahf
movs
cmp
push
in
iret
and
and
cmp
xchg
sbb
cs
mov
sub
ja
sbb
test
xchg
stos
fsub
jno
inc
aam
dec
sub
push
push
or
jne
add
xchg
idiv
pop
or
rcr
cs
ss
fild
push
fisttp
xchg
fsub
das
pop
jp
jl
mov
das
xor
push
and
mov
out
dec
pop
adc
pusha
add
push
imul
lock
lea
jge
aas
adc
rcr
push
pop
popf
inc
push
fiadd
test
sbb
mov
mov
cli
jl
les
fwait
mov
mov
iret
xchg
(bad)
(bad)
cmp
sbb
out
xlat
loopne
mov
stc
ror
jbe
fdivrp
sbb
rol
inc
or
sbb
lea
jmp
add
movs
xchg
mov
fdiv
in
add
test
ficom
into
cld
mov
mov
mov
xlat
fisubr
sub
test
mov
jg
call
ret
shl
out
lods
bound
jecxz
inc
movs
dec
dec
aaa
xor
pusha
push
in
xchg
pop
jbe
popf
or
(bad)
in
add
rep
daa
mov
or
fwait
pusha
push
inc
push
mov
jbe
mov
adc
adc
dec
adc
hlt
shl
dec
push
jmp
inc
lahf
xor
das
lods
xchg
sub
sar
fimul
idiv
cdq
add
int
out
sub
add
(bad)
adc
jnp
sub
lods
sbb
inc
mov
call
nop
push
dec
cmp
dec
jns
cli
(bad)
push
js
cmp
or
jmp
sbb
mov
pop
and
sub
repz
(bad)
jle
out
(bad)
mov
mov
pop
mov
imul
pusha
pop
cld
retf
ror
inc
add
jno
dec
sahf
fisub
mov
mov
pop
jg
sub
mov
fld
xor
icebp
cdq
(bad)
or
jge
push
add
icebp
aaa
outs
pop
repnz
fs
stc
xor
push
aas
aad
mov
push
test
jo
inc
sub
(bad)
push
(bad)
cdq
sar
lock
inc
cmp
dec
gs
gs
div
push
add
call
icebp
mov
sub
push
push
mov
addr16
ins
or
clc
js
repz
inc
rcl
cli
dec
sbb
jmp
mov
sbb
sbb
inc
mov
xor
enter
and
add
rcr
out
loopne
loope
mov
xchg
std
push
test
arpl
dec
aaa
test
pop
sahf
xor
clc
les
mov
adc
mov
pop
ja
(bad)
(bad)
ins
xchg
sbb
clc
test
sti
xor
inc
jno
xchg
bound
and
outs
out
and
push
enter
xchg
aad
push
pop
xchg
sbb
mul
idiv
mov
push
mov
call
scas
loope
pop
xlat
push
fs
and
(bad)
imul
call
je
lods
test
xchg
movs
shr
xchg
sar
scas
xchg
pop
icebp
sub
test
xchg
mov
add
push
mov
mov
push
fnstsw
sbb
pop
stc
test
dec
mov
push
ror
xchg
imul
ins
cmp
or
jbe
ficom
cmp
xor
pinsrw
iret
xchg
in
mov
inc
cmp
dec
es
mov
sar
xchg
mov
imul
and
shl
cmp
arpl
xchg
fs
add
pop
dec
rol
inc
mov
(bad)
and
mov
inc
or
movs
mov
xchg
and
cmp
or
cld
test
call
jbe
jno
aam
mov
lods
adc
clc
dec
inc
add
ret
ds
xchg
sar
cmc
je
mov
xchg
pusha
cmp
jge
repnz
cmp
mov
push
call
push
shl
mov
repz
out
sbb
rcl
fs
push
lea
mov
sub
mov
repnz
and
je
shl
popa
xor
dec
dec
cmp
push
push
dec
lods
mov
mov
push
lea
stos
mov
(bad)
daa
out
mov
imul
int3
mov
mov
jnp
sbb
les
pusha
fcomp
jae
out
mov
add
lahf
js
mov
or
mov
lea
adc
adc
es
push
or
sub
call
dec
pop
rcl
add
imul
push
outs
mov
push
dec
loope
cmp
dec
xchg
in
add
shl
test
and
jnp
jmp
ret
cmp
pop
sbb
xchg
sub
imul
sub
push
loopne
ja
int3
xor
xchg
cmp
out
aas
ret
sub
mov
cdq
rcr
pop
xor
std
in
xchg
cmp
pop
push
mov
xor
add
mov
mov
or
mov
ss
nop
cmps
retf
sar
pop
push
rcr
mov
das
cdq
pop
cli
adc
xchg
movs
sub
shl
mov
fnstsw
int3
mov
icebp
push
test
sahf
add
dec
xor
out
out
sbb
lods
cdq
inc
lods
mov
scas
fwait
inc
adc
mov
add
push
adc
fs
mul
idiv
push
jl
out
nop
jmp
or
cmp
inc
jmp
lds
into
xchg
sub
add
mov
add
psubb
dec
lods
jl
sbb
call
out
retf
add
ss
sbb
ficomp
std
clc
leave
cmc
sbb
or
jp
sbb
test
ret
xor
aas
retf
mov
adc
and
stc
cmp
mov
mov
sbb
mov
adc
fsubr
inc
pop
mov
xchg
inc
and
push
mov
in
mov
fcmovne
inc
rcl
les
push
stos
and
adc
div
(bad)
loope
bound
in
push
jle
mov
sbb
push
jns
pop
add
mov
mov
jecxz
gs
xchg
(bad)
cmps
sub
bound
jmp
mov
popa
mov
mov
les
mov
add
call
(bad)
ror
shl
sub
inc
push
mov
sar
dec
and
dec
sbb
jae
movs
test
push
push
fadd
sub
fsubr
xlat
rcr
pop
cs
fbstp
cmp
jnp
sar
xor
mov
dec
movs
xchg
icebp
mov
jns
ret
pop
sbb
les
mov
adc
clc
ja
mov
push
dec
xchg
mov
popf
push
or
sbb
mov
in
scas
in
mov
ret
icebp
add
cdq
fnsave
dec
mov
jp
pop
push
(bad)
das
dec
sbb
(bad)
mov
out
fdivr
and
mov
nop
imul
xchg
clc
cmp
mov
mov
cmc
iret
dec
pop
aas
or
mov
mov
and
mov
(bad)
mov
nop
jecxz
push
shl
mov
daa
out
adc
sbb
int
in
loope
mov
fwait
xor
scas
mov
enter
or
xchg
ja
clc
jns
test
jmp
cmp
repz
jo
pop
push
stc
in
pop
pusha
jb
es
retf
int
jae
jle
mov
mov
dec
cmp
push
xor
add
add
jns
jmp
lock
arpl
daa
push
xor
outs
jno
(bad)
and
cmp
loope
mov
aam
gs
pop
(bad)
fmul
stos
cmp
mov
sar
fimul
jge
cmp
push
mov
ja
cwde
add
repz
ss
clc
pop
call
aam
(bad)
mov
movs
ror
xlat
leave
mov
test
jmp
mov
adc
cwde
push
lods
push
inc
call
jp
cmps
lods
sahf
popf
adc
jle
jno
std
data16
sub
in
lea
inc
(bad)
mov
ja
aaa
cmp
fs
push
xor
inc
jecxz
int3
arpl
jmp
shr
movs
or
test
cmp
xchg
mov
icebp
ret
int3
daa
inc
(bad)
lock
add
push
pextrw
cdq
jnp
or
mov
rcr
mov
test
(bad)
sti
int
mov
(bad)
cmp
dec
pop
sbb
arpl
popf
cmp
mov
or
aaa
jmp
fld
cmp
adc
jl
pushf
push
cmp
inc
and
into
mov
mov
xchg
jae
jmp
pop
jmp
pushf
stc
cdq
push
movs
repnz
mov
dec
ja
or
push
pop
dec
int3
jge
mov
std
bound
std
xor
mov
clc
sub
sbb
xor
sar
inc
jno
jne
je
xchg
sub
pop
dec
push
je
jo
mov
push
sub
xchg
pop
xchg
fmul
scas
sbb
dec
imul
call
dec
jmp
jmp
inc
sbb
ret
and
xor
pop
adc
mov
call
cwde
inc
out
push
je
add
les
xlat
dec
repz
cmc
call
or
xor
pop
mov
push
fcmovnb
xchg
fstp
mov
mov
sbb
pop
add
sbb
push
mov
fisubr
scas
test
(bad)
mov
push
scas
add
xor
mul
sahf
les
xor
in
and
push
std
cmp
sbb
mov
jmp
add
(bad)
jns
inc
mov
xor
outs
imul
jbe
lea
call
xchg
sbb
jae
and
jns
or
jbe
mov
retf
cli
nop
cmp
mov
pushf
xchg
popf
cmp
stc
sub
mov
adc
mov
int
scas
sub
sub
xor
sahf
push
pop
outs
adc
mov
add
imul
ss
pusha
and
repnz
inc
gs
jb
xor
sar
ss
clc
call
fmul
adc
push
inc
mov
jae
daa
push
sbb
xchg
jb
ins
jecxz
or
pop
mov
push
jns
mov
or
xor
fnstenv
cld
pusha
push
xor
jg
xor
pop
into
(bad)
loop
pop
addr16
shr
pusha
sahf
icebp
mov
in
aaa
inc
mov
stos
scas
icebp
xchg
cmp
dec
xchg
ja
dec
(bad)
jge
add
jbe
sbb
cmp
xchg
out
cmp
cmp
fs
cmc
loope
add
sbb
mov
popa
mov
inc
xlat
push
pop
arpl
ss
(bad)
xchg
inc
outs
fisub
js
(bad)
in
imul
cmps
and
mov
movs
add
mov
repnz
cmps
push
dec
out
mov
scas
pop
std
arpl
add
pop
repnz
xchg
jecxz
xlat
mov
loopne
and
call
aad
cmp
pop
push
icebp
sub
(bad)
sbb
xchg
pop
stc
jp
mov
js
jmp
or
and
sub
ror
xor
lods
pop
jmp
les
lock
dec
xchg
jg
pop
xor
jno
(bad)
neg
push
sub
loope
rcr
add
inc
ret
(bad)
in
xchg
mov
cmps
xchg
pop
outs
xchg
pop
sti
retf
popa
xchg
gs
mov
pop
scas
sbb
push
sar
xor
sub
mov
lods
mov
and
scas
mov
fistp
enter
icebp
iret
idiv
cmp
mov
xor
pop
pop
inc
dec
(bad)
les
ret
xlat
mov
mov
inc
jecxz
add
sar
mov
ins
adc
iret
(bad)
jmp
sub
or
jne
inc
mov
in
fcmovne
fbstp
cmp
imul
cli
sub
lods
adc
ds
sbb
or
or
fsub
mov
sbb
call
or
test
lock
stos
loop
popa
or
std
mov
dec
(bad)
jp
movs
add
clc
jle
xchg
mov
out
xor
add
xor
inc
shr
imul
xor
fiadd
cld
add
enter
cs
mov
sub
pop
mov
inc
jae
pop
pop
add
into
push
cmp
mov
lock
lea
mov
mov
in
mov
retf
mov
jmp
in
aad
into
retf
scas
sti
xor
cmp
xor
mov
xor
jecxz
cli
jmp
and
scas
mov
jno
and
lods
cmc
pop
inc
push
rcr
pop
(bad)
xchg
outs
push
hlt
scas
scas
loop
sub
repnz
jbe
jl
xchg
inc
adc
aaa
mov
xchg
out
mov
cli
cmp
out
repnz
sub
mov
mov
add
inc
cmp
pop
jb
push
mov
mov
test
pop
xor
push
fisubr
push
inc
mov
loopne
bound
hlt
cmp
jl
ret
xor
test
in
(bad)
jecxz
push
pop
call
(bad)
data16
cmc
mov
pop
nop
loope
aam
mov
iret
pop
in
(bad)
movs
retf
out
jp
bnd
(bad)
leave
mov
je
into
push
cmp
dec
and
push
push
rcl
sbb
mov
sahf
or
(bad)
scas
dec
in
ficomp
scas
retf
mov
jae
ror
xchg
sbb
je
jl
xchg
mov
cmp
jb
dec
push
jb
cmc
fld
xor
push
les
xchg
ror
inc
dec
int3
xchg
div
shr
pop
push
xchg
mov
adc
xor
inc
les
(bad)
jge
dec
pusha
aas
push
sub
popa
mov
arpl
stos
stos
xlat
fcmovne
inc
adc
int3
or
lds
jb
mov
mov
sbb
in
jp
dec
sub
or
cmps
retf
push
scas
xchg
sub
mov
in
add
mov
es
enter
ins
cli
push
icebp
sbb
out
and
push
sbb
sub
pop
sbb
sbb
shr
mov
rol
push
xchg
pop
in
aad
data16
and
out
in
pusha
xchg
in
mov
test
in
sbb
call
popa
(bad)
mov
cwde
jecxz
sbb
xchg
jnp
xor
call
cmps
xchg
(bad)
loop
jo
nop
je
dec
jo
dec
shl
inc
rol
data16
popf
pop
pusha
xchg
int
out
jbe
in
(bad)
dec
pop
enter
int3
push
add
call
pop
enter
jp
sbb
inc
repnz
push
xchg
push
add
cs
jmp
dec
inc
in
(bad)
mov
cmp
fsubrp
sub
mov
jns
sbb
sbb
popf
or
adc
popa
push
ret
adc
mov
mul
arpl
mov
cmp
jns
cmps
or
(bad)
es
cmps
adc
and
mov
aam
mov
push
push
adc
je
lods
rcr
cmp
jno
add
arpl
outs
pushf
push
fidiv
loopne
adc
mov
push
pop
jbe
pusha
cmp
repnz
or
out
xlat
xchg
ret
cmps
adc
dec
mov
dec
lods
inc
imul
pop
jnp
or
scas
inc
sbb
cmp
out
ret
fwait
and
outs
mov
(bad)
jl
jle
addr16
push
into
mov
pop
dec
into
inc
lea
popf
or
jmp
pusha
loope
outs
xor
jmp
out
jle
test
xchg
sub
xchg
fld
mov
inc
mov
inc
mov
xchg
out
jae
jl
jge
xchg
dec
lds
mov
mov
outs
stos
jle
adc
mov
shl
or
retf
sub
sub
mov
adc
xchg
imul
(bad)
adc
mov
xchg
mov
sub
xchg
jg
aad
scas
cmps
mov
adc
mov
shl
outs
les
cli
and
dec
cmps
sub
cli
pop
adc
fisttp
xor
or
push
sbb
inc
add
cmp
sub
cs
push
mov
mov
test
gs
aad
cwde
sbb
test
ret
push
push
add
pop
jb
dec
mov
loope
and
ror
sar
lock
dec
out
lock
iret
jmp
les
into
addr16
ins
sbb
shr
mov
or
xchg
or
xchg
push
mov
jp
mov
sbb
jb
push
sub
adc
xor
jge
xlat
sbb
or
outs
adc
or
pop
and
ret
cmp
pop
fisub
pop
jne
jmp
mov
jmp
mov
pushf
pop
inc
rcl
dec
pop
cmp
rcr
pop
mov
div
das
hlt
sbb
cmc
mov
movs
inc
aaa
adc
mov
in
scas
add
cmps
sub
mov
jns
and
ret
je
out
outs
jo
fs
sahf
stos
lods
xor
(bad)
mov
outs
dec
bound
lea
leave
arpl
or
xchg
lea
push
push
xor
mov
inc
test
(bad)
push
inc
popf
pavgw
jbe
jge
dec
mov
mov
cmp
pop
or
fnstcw
loope
add
or
cld
xlat
pop
ss
xor
sub
mov
xor
adc
fnstenv
jmp
sahf
icebp
cmps
cld
sub
xor
mov
test
lsl
pop
add
adc
jmp
and
cmp
cmp
cmc
inc
sbb
int3
inc
push
jne
sbb
push
adc
retf
sub
xchg
aad
inc
mov
retf
or
bound
mov
in
pop
mov
push
daa
pop
xchg
sbb
dec
push
inc
and
fist
in
jb
aas
add
es
rcl
fsubr
mov
xor
xor
enter
xor
aaa
cmp
outs
xor
repz
imul
sub
adc
pop
clc
and
inc
hlt
or
imul
sbb
(bad)
mov
cmps
imul
cld
and
jb
icebp
mov
out
and
mov
(bad)
fwait
xlat
int
in
outs
imul
or
jae
jnp
inc
addr16
xchg
cmp
call
xor
add
cmc
movs
mov
xlat
imul
test
cwde
rol
popf
daa
pop
stos
push
pop
cmps
adc
xor
inc
sti
adc
sub
xor
das
lock
inc
push
imul
xor
pusha
cmp
daa
adc
mov
int3
stc
xor
retf
xchg
ret
clc
push
imul
push
imul
inc
pop
xor
ja
sbb
mov
push
pusha
adc
repz
xchg
nop
jmp
pop
pop
iret
mov
(bad)
movs
retf
sub
arpl
call
add
inc
shl
test
aas
xchg
mov
scas
ret
sub
pop
test
mov
call
das
fcomi
aas
gs
dec
mov
push
enter
push
xor
retf
pop
movs
mov
xor
(bad)
imul
jo
push
cmp
cmp
mov
in
jmp
jno
mov
jno
sub
inc
mov
xchg
test
adc
mov
mov
retf
std
jno
jno
jne
lahf
push
fst
push
cmp
adc
shl
jmp
inc
xor
inc
movs
fadd
push
mov
xor
into
fist
mov
adc
xor
pop
lahf
xchg
repnz
movs
mov
ins
mov
test
xsave
push
loop
xchg
movs
sbb
inc
xor
cs
and
xor
sbb
sbb
rcr
jl
mov
repz
jmp
mov
clc
sar
cmp
and
pop
inc
and
cs
stos
fsubr
retf
stos
jne
inc
daa
and
fnstcw
add
jmp
sar
push
mov
lock
xor
jle
fbstp
mov
test
cmps
dec
dec
dec
mov
xchg
movs
pop
mov
es
pop
sbb
fisub
arpl
pop
adc
sbb
sbb
ror
test
inc
push
sub
jl
aam
(bad)
(bad)
stc
dec
mov
sub
add
pop
ror
xchg
adc
mov
gs
scas
in
dec
enter
jnp
jmp
stc
sbb
rol
gs
imul
mov
xor
mov
out
aam
pushf
(bad)
mov
(bad)
sub
jns
mov
int3
fcomip
dec
adc
jg
cmps
mov
out
adc
mov
mov
mov
jge
sbb
arpl
sbb
mov
mov
icebp
pop
xor
jne
xchg
(bad)
sti
gs
push
clc
xchg
cwde
cmp
dec
(bad)
das
and
cmp
cmp
mov
jmp
or
scas
pop
imul
mov
(bad)
cwde
cmp
movs
dec
test
loop
sub
add
outs
mov
sbb
push
add
in
mov
ss
aam
mov
hlt
and
movs
push
sbb
and
xchg
lods
jmp
lahf
mov
mov
es
ja
cmps
(bad)
fiadd
adc
pop
in
and
or
fld
jo
push
dec
add
and
jl
loop
ins
and
jge
div
(bad)
or
test
repnz
push
cmp
(bad)
jns
push
nop
push
jbe
jp
jecxz
ret
cmps
out
dec
inc
xor
(bad)
xchg
adc
aaa
inc
js
rol
(bad)
push
mov
clc
mov
repnz
out
push
or
(bad)
jge
jg
sahf
sub
(bad)
out
and
mov
sub
sbb
adc
dec
fstp
fistp
xor
std
dec
xchg
adc
imul
shl
idiv
cwde
adc
push
pop
mov
retf
jmp
sub
mov
cdq
xor
ss
out
cmp
pop
stos
mov
iret
repz
jne
test
pop
inc
aas
xchg
cmp
sti
nop
pop
in
mov
mov
jge
repnz
data16
shr
loope
imul
push
inc
cmp
pop
hlt
cmp
sub
push
add
sub
int3
ret
pushf
sar
or
jge
cs
push
xor
sti
retf
aaa
inc
sbb
dec
out
mov
cmp
loopne
sub
arpl
shr
inc
lock
push
scas
pop
(bad)
arpl
arpl
dec
xchg
icebp
jp
(bad)
ret
(bad)
push
push
mov
xchg
jg
popa
xchg
push
dec
and
movs
or
pop
mov
inc
or
jns
sbb
test
inc
jp
shl
xor
rcr
cmp
sub
jmp
test
pop
hlt
add
loop
fstp
retf
add
js
(bad)
sub
sub
pushf
push
arpl
or
push
and
mov
out
loope
in
jns
sbb
out
jmp
cmp
xchg
sub
shl
leave
or
dec
ror
lea
mov
mov
jp
push
fwait
jbe
add
jl
mov
js
jl
mov
pop
out
or
jnp
sub
mov
mov
test
or
popa
out
xchg
mov
pop
xchg
mov
jb
sti
mov
push
in
popa
fnstsw
jge
sti
sbb
sub
(bad)
in
sbb
push
cmp
sbb
jle
cmp
popa
add
adc
xor
mov
aam
and
call
inc
xlat
mov
xchg
push
push
int3
in
inc
fwait
loop
dec
push
inc
scas
jp
loop
jle
add
inc
popf
out
cmc
or
aaa
ins
sar
arpl
xlat
mov
shl
lea
iret
jne
ins
test
(bad)
repnz
data16
int3
int3
sar
not
mov
pop
pop
xchg
pop
xchg
xor
jnp
pop
ins
retf
leave
mov
jo
mov
stos
outs
jb
or
clc
out
cmps
sbb
je
mov
mov
int3
pop
pop
inc
retf
mov
inc
shr
mov
mov
push
fnstsw
jg
mov
pop
fwait
add
jns
lds
sbb
cmps
test
mov
push
mov
fdiv
jp
cmp
sbb
jge
arpl
or
fild
movs
outs
mov
lea
push
das
mov
mov
out
jp
pop
je
out
sbb
sbb
mov
push
test
push
xchg
jnp
push
rol
arpl
js
xor
mov
iret
mov
neg
add
out
xchg
lahf
inc
jo
ins
int
das
push
mov
pushf
int3
rcr
jecxz
(bad)
call
or
xor
jns
sub
inc
aaa
adc
cmp
mul
adc
sbb
ins
dec
push
add
(bad)
int3
jno
call
data16
into
cmp
xor
lahf
mov
push
push
jnp
sub
(bad)
std
stos
add
ss
vmovhps
cdq
sbb
cs
cli
dec
sbb
cmp
pop
outs
jg
inc
cmp
add
pop
out
in
jecxz
sub
leave
(bad)
or
mov
dec
add
in
push
jmp
cs
pop
cmps
call
or
gs
push
dec
add
sub
ret
out
xchg
out
push
into
sub
add
mov
call
test
pop
nop
out
mov
jb
lahf
ds
pop
jnp
and
or
and
adc
jl
(bad)
loop
das
xchg
neg
sbb
cdq
data16
adc
xchg
call
mov
dec
int3
adc
pop
or
mov
sbb
packuswb
xchg
mov
push
or
dec
cmp
sub
bnd
pop
repz
(bad)
leave
call
cmps
out
sub
lea
test
mov
jae
xchg
and
push
retf
call
and
sahf
std
dec
xor
into
pop
inc
cmp
sub
test
lea
add
mov
cmps
push
jg
xor
push
shl
icebp
movs
mov
push
ficomp
inc
inc
imul
mov
adc
aas
sti
mov
push
xor
cmc
push
pop
cmps
clc
push
fisttp
dec
adc
push
ror
mov
adc
es
pop
mov
enter
(bad)
pusha
dec
xchg
out
mov
test
mov
das
xor
jl
mov
mov
addr16
or
or
faddp
jp
clc
dec
popa
ficom
jmp
dec
adc
popa
lea
aad
(bad)
cdq
pop
jbe
mov
sbb
lods
xchg
jno
and
mov
mov
scas
fst
ins
and
cmp
cli
mov
mov
and
sti
cmps
sar
jo
jge
hlt
mov
mov
adc
adc
pop
dec
sbb
mov
push
(bad)
ror
cmp
bnd
shl
cmps
outs
fild
ffree
inc
xchg
push
push
popf
mov
push
loope
loopne
rol
sbb
cwde
fwait
popf
xor
outs
pop
mov
sub
sbb
ret
clc
mov
inc
mov
xchg
fidivr
inc
call
inc
dec
xchg
rcr
std
xor
pop
jbe
sar
add
les
sbb
and
clc
stos
fwait
jbe
mov
dec
add
test
sbb
test
cdq
lods
jecxz
mov
fwait
inc
fs
cmp
inc
jg
stos
jl
jg
add
sbb
outs
movs
cli
(bad)
adc
gs
mov
data16
(bad)
xchg
jg
pop
xor
xchg
stos
fwait
xchg
movs
pop
mov
neg
sbb
sub
add
gs
popf
xchg
sub
pop
push
adc
mov
ficom
pop
mov
push
je
push
fwait
adc
xchg
xlat
bnd
pop
fiadd
jmp
aam
ficomp
std
cmp
mov
aad
mov
es
dec
or
std
imul
add
xchg
dec
movs
outs
test
data16
aas
sti
ret
fstp
test
xchg
dec
xchg
loopne
jmp
mov
(bad)
loop
push
arpl
mov
sub
jmp
not
add
stos
cmps
sub
jne
in
or
stc
xchg
push
mov
xchg
push
mov
ins
ja
pop
push
ds
push
out
mov
jmp
call
int3
pop
and
sub
cmc
mov
jno
mov
xor
mov
(bad)
icebp
adc
add
jno
inc
xchg
out
mov
in
cmp
call
mov
dec
cmp
ror
adc
inc
dec
pop
jo
fidiv
rol
jbe
add
lahf
fucomi
rcl
dec
ins
out
xchg
mov
loopne
xor
dec
nop
ds
imul
dec
pop
xchg
int
ins
lods
push
pushf
test
cdq
daa
movs
int3
nop
repnz
outs
mov
push
cmovbe
dec
mov
cmp
pop
std
or
pop
adc
jmp
cmp
pushf
ficomp
int
arpl
test
outs
lods
test
jecxz
fimul
ss
dec
clc
adc
and
pop
xchg
in
scas
je
push
aad
test
movs
jne
sub
enter
fcom
add
inc
jns
inc
jae
push
out
dec
push
fnstsw
sti
xor
loop
xchg
push
dec
dec
jmp
mov
mov
xchg
bound
and
jbe
sub
dec
xchg
adc
cmp
add
mov
fcomp
imul
pop
out
dec
add
push
sbb
mov
loop
movs
or
xor
mov
rcl
xor
and
retf
xchg
mov
xchg
jnp
mov
cmc
outs
repz
clc
arpl
xchg
out
push
jnp
sbb
jae
das
imul
inc
jle
mov
inc
pushf
jg
push
(bad)
push
xchg
mov
daa
mov
xchg
mul
cmp
unpckhps
icebp
mov
xor
jmp
hlt
push
in
inc
mov
imul
lahf
imul
(bad)
jbe
and
arpl
sub
xor
dec
pop
rcr
jmp
ins
ss
jbe
push
xor
fwait
out
add
pusha
dec
inc
xor
sbb
or
sub
neg
dec
lds
enter
outs
mov
xlat
leave
(bad)
bound
addr16
or
cmp
adc
fwait
and
(bad)
lahf
(bad)
(bad)
iret
xchg
fild
or
addr16
xchg
sub
call
lea
not
inc
call
pop
ins
mov
imul
jne
iret
fcmovnu
aad
xor
push
or
inc
xlat
(bad)
add
xor
mov
mov
adc
ror
dec
cmps
stos
mov
repz
call
cmp
add
movs
or
scas
dec
push
cmps
mov
push
mov
aad
leave
lahf
cmp
xchg
idiv
rol
xchg
mov
gs
jg
jmp
(bad)
push
mov
mov
stos
and
and
jl
call
sbb
fidiv
push
cmps
movs
inc
lods
shl
lds
sbb
xchg
lock
aaa
xor
pop
sti
push
sti
push
lea
or
pop
adc
jo
pop
sub
imul
xlat
test
xchg
test
sbb
sbb
(bad)
aaa
jne
jns
add
jbe
loop
jns
mov
call
cmps
xor
jns
cli
(bad)
push
inc
test
(bad)
jl
pop
scas
lock
add
arpl
xchg
into
(bad)
xchg
mov
in
dec
out
mov
mov
aad
push
movs
inc
sub
xor
(bad)
jg
sbb
inc
xchg
inc
test
in
lock
mov
xchg
outs
xor
sub
iret
fcomp
pop
pop
sti
ins
inc
jns
cmp
mov
add
mov
jecxz
add
out
adc
mov
lock
xchg
dec
inc
sbb
mov
mov
out
mov
retf
xor
ror
loopne
sti
cmp
mov
int3
out
push
sbb
test
dec
daa
push
shld
movs
and
ret
cmp
in
mov
into
ds
cmc
cmp
jae
fidiv
in
lea
test
mov
lea
push
mov
inc
aas
jecxz
scas
cld
inc
jmp
js
arpl
dec
dec
cli
mov
sub
pushf
xchg
aam
sahf
mov
or
ret
scas
sub
pop
mov
mov
and
cli
mov
xchg
pop
pop
adc
call
mov
or
idiv
push
ins
pop
cmp
mov
cmc
movs
sbb
loope
jb
test
mov
sbb
fldcw
jne
pminsw
dec
xchg
adc
(bad)
push
sub
pop
sub
xchg
rcl
dec
into
mov
div
(bad)
mov
xlat
fsubr
sub
mov
pop
lock
sub
lods
xor
rcr
mov
mov
lahf
sbb
call
imul
xchg
jbe
pop
or
test
and
adc
retf
and
cli
(bad)
sub
dec
int
xchg
mov
div
mov
ja
lods
sti
add
mov
mov
or
movs
pop
xor
xchg
jae
movs
in
fwait
or
pop
mov
fistp
push
or
mov
inc
lods
mov
cld
fldcw
mov
into
scas
ds
cmps
push
out
imul
mov
or
xchg
dec
sti
inc
loop
sub
jo
enter
xchg
mov
in
cmp
adc
sbb
jg
in
xor
inc
sbb
dec
scas
into
arpl
lahf
(bad)
jno
jnp
out
xchg
ins
push
pop
adc
push
(bad)
pop
pop
movs
lods
jmp
add
jo
pop
add
fsqrt
ficomp
xor
xor
or
out
dec
test
cmp
rcr
xor
enter
add
pop
psrad
daa
jp
adc
add
cwde
ss
sbb
(bad)
enter
stc
icebp
dec
jmp
dec
pop
stc
mov
xor
addr16
mov
mov
nop
test
imul
jmp
ss
sub
cmp
fld
add
gs
int
xchg
hlt
push
dec
pop
dec
inc
(bad)
das
movs
mov
cmp
in
and
dec
rcl
pop
sbb
sbb
enter
xor
mov
test
ja
dec
fucom
mov
cmp
push
sub
dec
jmp
push
loop
jne
mov
movs
fstp
(bad)
iret
inc
jnp
addr16
push
pop
popf
inc
test
and
(bad)
cld
ret
mov
ret
cmps
push
enter
movs
inc
fwait
pop
push
je
sub
rol
shr
sub
sub
cmps
jle
cmps
push
retf
ins
xchg
cmp
ss
mov
xchg
loop
cmp
ficom
xor
retf
(bad)
jmp
push
cmps
arpl
and
aam
adc
inc
xchg
test
dec
arpl
mov
mov
pop
cli
ins
loop
push
xchg
mov
mov
sbb
inc
inc
dec
mov
xor
out
dec
mov
sbb
pop
sbb
mov
sbb
or
(bad)
fist
movs
(bad)
ficomp
(bad)
pop
aam
retf
addr16
(bad)
xchg
cmps
push
jbe
fidivr
loop
jmp
mov
dec
pop
xchg
sub
sbb
ss
loop
sbb
or
xchg
(bad)
lahf
sbb
das
sbb
(bad)
sub
jne
adc
sub
sbb
loope
nop
push
cmp
pop
jmp
pop
cmp
adc
fist
adc
in
xor
movs
jmp
jmp
and
cmc
call
stc
outs
jmp
data16
test
mov
jmp
push
sub
(bad)
out
sub
mov
ins
in
(bad)
push
call
scas
pop
das
aam
mov
sahf
outs
and
out
aam
repnz
leave
jge
test
add
fbld
mov
pop
mov
and
pop
inc
nop
xchg
imul
mov
jne
mov
out
mov
add
dec
jle
mov
(bad)
ins
jl
push
icebp
cmp
cld
inc
push
mov
outs
push
inc
xchg
cli
fwait
cld
jl
bound
ja
mov
mov
xor
and
mov
sub
pop
dec
add
daa
mov
sub
fcmovb
pop
outs
xor
mov
jecxz
fs
dec
(bad)
xchg
inc
inc
jmp
mov
pop
lods
imul
dec
sub
icebp
pop
or
mov
push
ss
adc
mov
mov
dec
cld
push
into
hlt
jno
sahf
mov
xlat
and
push
cmp
add
ret
xchg
push
lock
ret
out
pop
fwait
mov
test
fisttp
xchg
add
lock
into
cdq
mov
or
xlat
pop
div
dec
sbb
or
or
jne
xchg
fs
dec
stos
fdiv
push
int
jl
rcl
adc
sub
jmp
jecxz
dec
push
iret
rcr
push
xchg
mov
jne
mov
test
push
sahf
loopne
call
push
(bad)
addr16
bound
sub
stos
sahf
into
je
xlat
add
sub
jns
movs
rcr
das
(bad)
and
sbb
fbld
jecxz
jno
out
jns
xchg
push
push
fcom
repz
xchg
cwde
call
jp
adc
rcl
and
ret
test
and
js
or
lods
push
ret
jbe
push
mov
in
in
pop
sub
mov
pop
add
mov
adc
sahf
or
movs
ja
add
mov
jmp
scas
arpl
out
dec
scas
mov
out
int3
shl
dec
nop
xrstor
cld
stos
jns
aam
dec
movs
cmp
movs
dec
lea
or
mov
adc
test
xchg
nop
ins
push
mov
push
pop
hlt
cmp
mov
sub
xor
dec
fnsave
mov
aad
sbb
mov
inc
or
dec
mov
in
in
push
push
cli
rcr
jmp
xchg
ja
mov
jecxz
mov
mov
fdivrp
sbb
hlt
mov
jp
ds
int
sub
sbb
xchg
cwde
lahf
out
loop
mov
xor
mov
call
test
sub
mov
mov
jecxz
dec
push
(bad)
nop
in
xchg
cld
into
popf
ins
xchg
pop
inc
and
dec
mov
inc
test
xchg
addr16
push
pusha
cs
mov
cmps
loope
int
jb
jb
and
loopne
(bad)
(bad)
xchg
in
add
xor
test
lods
int3
mov
jg
ja
xchg
dec
(bad)
ds
(bad)
popa
movs
and
aas
out
hlt
sbb
cli
xchg
aam
mov
sub
push
fist
mov
xor
aad
mov
sbb
xchg
jecxz
cmc
div
leave
call
lds
xchg
call
adc
enter
sti
inc
cmps
cmc
or
inc
or
add
cs
xor
xor
xor
and
jae
and
movs
xchg
push
cmp
sbb
xor
cld
frstor
lea
push
dec
pop
cdq
and
mov
mov
fimul
cmp
mov
outs
stos
and
push
jmp
add
lock
and
or
pop
cwde
push
jns
jecxz
xchg
ja
adc
push
mov
pop
cmovo
xchg
inc
jae
in
aad
mov
xchg
sbb
push
pop
in
movs
mov
(bad)
iret
jge
adc
dec
ror
mov
jle
call
mov
in
rcl
xchg
cmp
cmp
mov
in
fcomp
inc
fst
adc
cmc
adc
add
mov
ins
cmp
and
loope
adc
aaa
mov
stos
idiv
pop
imul
mov
cmp
adc
in
jmp
mov
loopne
stos
mov
retf
clc
mov
sti
ja
cwde
xchg
arpl
shl
fisttp
es
pop
pop
push
js
shl
shl
out
mov
xchg
mov
push
cmc
fmul
jg
hlt
fst
mov
mov
add
imul
push
ins
dec
jno
cmp
call
xor
mov
mov
or
pushf
push
jne
pop
jle
cmps
sub
scas
fdiv
or
xor
mov
jno
div
jg
sub
mov
cli
cmp
inc
sbb
jmp
hlt
ss
in
dec
mov
aad
jl
mov
stc
sbb
add
dec
rcl
xchg
mov
sbb
add
dec
dec
jnp
(bad)
and
jp
retf
sub
jo
repnz
mov
lods
into
jmp
sub
jns
jmp
and
clc
fidivr
and
inc
jle
inc
jbe
es
or
jle
pop
mov
loopne
cs
jnp
sbb
gs
mov
adc
pop
mov
js
dec
popf
xchg
cmp
mov
xor
je
(bad)
imul
pop
adc
daa
and
pop
mov
xchg
sub
cdq
inc
lea
popf
mov
inc
call
arpl
mov
aaa
in
add
pushf
push
in
sub
mov
out
imul
inc
xchg
adc
jbe
sbb
dec
inc
retf
mov
push
xchg
xor
pop
punpcklbw
push
and
movs
add
jge
xchg
cmp
dec
jp
sahf
movs
pusha
ins
loopne
and
stc
xor
xor
cmps
add
ins
popf
add
out
stos
stos
jno
int3
gs
xlat
pop
add
and
sub
add
repnz
inc
sbb
pop
pop
in
adc
nop
clc
adc
jnp
jnp
pop
adc
popa
mov
push
call
push
jecxz
retf
addr16
adc
(bad)
pop
enter
je
pushf
cmp
sbb
xchg
mov
add
push
or
mov
imul
xchg
stos
shl
jp
push
stos
std
lds
(bad)
jne
mov
dec
es
or
jno
leave
and
retf
retf
adc
pop
mov
pop
xchg
dec
inc
xor
inc
cmps
int3
pop
mov
sbb
jmp
mov
xor
dec
or
xchg
sbb
lahf
(bad)
sbb
cld
(bad)
xor
repz
loope
enter
jl
mov
js
arpl
dec
imul
sub
lods
xchg
jmp
cli
pop
mov
jb
sbb
aam
cmp
xchg
ret
pop
xlat
xchg
dec
mov
xor
mov
call
jmp
pop
in
data16
cmps
fs
inc
fist
leave
xlat
mov
and
shl
push
les
mov
ins
clc
arpl
mov
cld
mov
cdq
(bad)
out
ins
pop
sahf
outs
pop
push
pop
pop
ss
fiadd
aad
mov
jg
xlat
xchg
cld
lahf
repz
or
xchg
adc
or
es
jl
sbb
xchg
push
out
test
or
out
test
(bad)
mov
aaa
mov
xchg
dec
not
sbb
cs
jle
loopne
dec
pop
push
cmc
aad
add
pop
mov
mov
mov
loope
or
add
cmp
adc
lea
adc
movs
lahf
xor
add
loop
mov
add
push
xchg
fxch
mov
outs
aam
ret
outs
popa
pop
(bad)
inc
jbe
xlat
push
in
(bad)
push
inc
iret
retw
cmp
test
fbld
stc
sahf
jl
scas
(bad)
mov
mov
ret
call
xchg
mov
imul
(bad)
pusha
aam
adc
adc
xchg
sub
rcl
out
xchg
xchg
dec
pop
lods
inc
jns
or
popa
mov
mov
stc
pushf
xlat
xchg
lds
push
jl
movs
out
pop
pushf
dec
int3
sahf
(bad)
ins
jns
addr16
fdivr
sbb
pop
xchg
jno
ret
mov
stos
fcmovbe
fisttp
aam
or
imul
scas
and
call
add
push
jo
pushf
dec
adc
xchg
or
leave
jbe
inc
fstp
xor
cs
data16
cmp
ss
add
adc
pusha
cmps
mov
xor
adc
jbe
mov
loop
push
xor
jge
jo
push
mov
cs
in
mov
inc
or
mov
popa
jae
or
mov
mov
aaa
das
out
jmp
push
pop
pop
daa
fnstenv
(bad)
mov
pop
(bad)
and
jae
push
pop
xor
cmp
sub
mov
xchg
test
fwait
mul
(bad)
xchg
sub
inc
je
mov
out
jl
rcr
stos
call
xlat
sub
inc
les
(bad)
fldenv
shl
jle
mov
sub
adc
jl
(bad)
sub
adc
xor
loop
(bad)
std
mov
xor
mov
aas
sub
pop
ja
sub
push
and
push
aaa
push
sti
sub
daa
dec
sub
mov
xchg
imul
push
or
xchg
pop
cmc
pop
inc
xor
inc
repnz
jb
arpl
inc
loopne
js
idiv
jp
lea
pop
outs
(bad)
adc
and
(bad)
jnp
adc
jbe
mov
jp
mov
adc
and
out
popf
pushf
ja
inc
fistp
pop
mov
aas
cmp
stos
test
sub
imul
aad
in
jle
mov
ins
or
pop
and
jno
std
and
mov
div
sub
xor
or
sbb
arpl
push
loopne
ins
inc
jbe
or
call
pop
mov
or
aad
sbb
inc
outs
fs
out
and
ret
lds
arpl
aaa
inc
xchg
cli
dec
and
lods
push
cmp
and
and
xor
stos
sub
test
rol
test
sbb
cli
xchg
(bad)
cwde
repz
in
nop
inc
(bad)
and
mov
fist
retf
mov
js
mov
hlt
jle
js
mov
nop
push
stc
and
nop
pop
dec
lahf
fdiv
xchg
fldenv
popa
std
push
hlt
pop
ss
ret
sbb
cmp
sbb
mov
out
sbb
push
popf
fwait
movs
sbb
sub
dec
mov
rcr
add
rcr
inc
scas
leave
ins
push
(bad)
mov
imul
add
mov
test
lock
xor
lock
xor
jle
movs
stos
iret
pop
xchg
mov
clc
pop
ret
daa
dec
push
dec
test
retf
mov
jecxz
pop
mov
pop
imul
repnz
sbb
ret
fcom
xor
inc
popf
jl
mov
dec
cmp
sub
cmps
rcl
adc
pop
je
outs
jmp
mov
mov
(bad)
jmp
cmp
fnsave
in
push
bound
pop
lea
das
push
pop
scas
inc
ins
jns
jns
pop
imul
pop
pop
xlat
mov
pusha
xor
fwait
mov
inc
arpl
sub
cld
stc
or
fstp
dec
jno
call
pushf
jmp
and
jnp
jne
aam
adc
sub
int
sbb
mov
cmps
lods
xchg
jle
into
jb
jnp
sbb
ss
sar
or
mov
xor
rol
fadd
adc
or
dec
arpl
mov
push
adc
lods
cmp
jno
iret
lea
lods
push
call
popf
mov
int
pop
nop
loopne
dec
es
jns
out
loopne
or
xchg
lahf
pop
or
not
and
mov
cmp
mov
mov
or
(bad)
mov
(bad)
enter
or
xchg
je
sub
fmul
pop
dec
mov
jnp
or
inc
ret
mov
cmp
gs
xchg
mov
retf
enter
mov
pop
repz
xchg
jl
inc
cmp
lock
sbb
repz
pop
push
scas
xchg
xor
mov
mov
adc
mov
xchg
xlat
cmp
sahf
and
xor
std
xchg
mov
(bad)
or
xchg
leave
mul
add
mov
or
imul
mov
add
shl
enter
retf
test
lahf
fcomp
scas
fnstsw
jnp
jge
aaa
fld
ds
sbb
push
stc
addr16
add
lds
retf
mov
jg
pop
or
inc
or
(bad)
rol
add
repz
fist
push
mov
mov
out
and
mov
in
cmps
mov
jnp
cs
repz
cld
out
sti
pop
in
pop
stc
push
push
aad
cmps
cmp
add
fistp
pop
and
xor
push
xchg
push
adc
call
addr16
cli
sbb
cld
dec
cwde
jno
dec
mov
jmp
adc
std
mov
cs
aaa
add
and
mov
dec
dec
dec
(bad)
push
jmp
add
(bad)
mov
mov
pushf
inc
je
les
jl
mov
xor
mov
int
mov
daa
mov
push
push
and
retf
mov
and
popf
xor
adc
dec
add
dec
cs
jne
repnz
cs
cmp
jae
test
cmp
sub
call
popf
imul
into
call
sbb
popa
hlt
out
jbe
push
cmp
and
sbb
scas
jbe
pushf
jae
(bad)
fdiv
dec
adc
mov
out
into
inc
jle
div
push
int
pusha
pop
pop
or
(bad)
jne
call
and
xor
or
push
out
push
fmul
out
adc
sar
add
inc
cmc
xor
mov
jmp
cmps
inc
enter
xor
out
call
cli
test
sub
in
cmp
fisub
jp
sbb
aad
pop
js
scas
sub
or
dec
loopne
int
outs
cmp
and
jbe
int
dec
ins
ret
dec
rcl
jae
mov
scas
out
or
push
inc
jb
les
mov
sub
xchg
call
mov
pop
ins
fimul
cmps
adc
xchg
out
iret
push
push
aam
xlat
inc
jo
aam
jbe
xchg
push
stos
ret
outs
(bad)
in
stos
(bad)
dec
sub
cmc
push
push
cdq
cs
ret
jp
or
popa
daa
xor
not
jge
test
pop
fsub
sbb
(bad)
jbe
repnz
push
aas
adc
cmovno
xor
enter
test
add
pop
push
pop
ds
loopne
test
xor
test
inc
movs
sbb
add
(bad)
cdq
add
cmps
test
push
push
stc
mov
mov
lock
fs
sub
mov
icebp
mov
outs
xor
fdivr
icebp
inc
push
xchg
jmp
dec
xchg
mov
out
(bad)
mov
aas
loopne
ror
cs
ror
sbb
clc
loopne
iret
push
mov
scas
in
mov
xchg
jne
jle
les
call
out
xlat
int3
lods
es
jle
and
cmp
sub
jecxz
add
jmp
mov
dec
or
arpl
in
mov
ja
sub
xchg
dec
pop
adc
fcomp
repz
ret
sbb
sbb
pushf
and
jnp
xor
xlat
dec
loope
js
jae
jmp
(bad)
clc
inc
mov
icebp
inc
xchg
and
and
ins
arpl
add
inc
arpl
(bad)
pop
and
sub
adc
add
(bad)
push
cwde
repnz
es
std
cmp
leave
out
or
push
sub
into
jo
xor
mov
enter
hlt
ins
mov
xor
stos
pop
xchg
jle
scas
mov
lods
ret
push
fs
mov
jno
pop
adc
pmaxub
in
sbb
mov
aas
aas
shr
push
mov
adc
fs
cli
imul
dec
pop
outs
repnz
idiv
adc
out
aam
repz
sub
lods
jb
(bad)
mov
rcl
xor
mov
clc
movs
cmps
push
push
data16
pop
jle
push
outs
and
jae
jge
test
xlat
xchg
(bad)
xlat
sbb
push
jns
out
das
pop
cmc
pushf
(bad)
xor
ret
neg
or
cwde
mov
fistp
lds
loope
sbb
xor
xor
add
mov
push
jne
pop
mov
sbb
aad
(bad)
fwait
shl
pop
mov
cmps
sahf
cmc
gs
cmc
inc
sar
mov
sub
ret
jmp
push
test
or
sbb
loopne
stos
pop
cmp
mov
outs
in
xchg
stc
mov
xor
jb
xlat
pop
fmul
cmp
jne
and
sbb
ret
scas
repz
pop
leave
jmp
into
mov
fld
cmp
lods
popf
(bad)
jnp
push
loopne
pslld
iret
in
mov
sbb
cs
pusha
sbb
sbb
loopne
test
adc
push
push
mov
adc
dec
pop
push
push
pop
jns
xchg
mov
sbb
out
push
add
int
dec
push
jmp
(bad)
inc
(bad)
test
inc
jnp
das
mov
jo
ja
stos
pop
in
push
dec
xchg
cmp
push
push
shl
sbb
std
aad
jmp
mov
scas
ror
in
popa
(bad)
shr
sti
repz
ins
pushf
stc
sub
es
mov
icebp
sub
out
mov
popa
daa
sub
mov
cmps
shl
pushf
imul
jnp
xor
or
outs
fxch
inc
rcr
movs
xchg
(bad)
jb
sub
lods
mov
or
mov
push
jno
sbb
aad
sub
and
stos
sbb
mov
sub
xor
(bad)
adc
dec
xor
movs
xlat
or
mov
dec
out
and
push
mov
cmps
mul
push
lock
xchg
mov
inc
mov
pop
repz
fs
daa
and
sbb
add
xchg
inc
pushf
sub
arpl
xor
popa
add
aaa
pusha
fcomp
les
jle
data16
xchg
rep
in
dec
shl
jge
ss
outs
xlat
sub
dec
lea
movs
fs
jo
(bad)
lahf
in
xchg
adc
fsub
out
cmp
inc
and
adc
push
ins
in
dec
daa
pop
or
dec
(bad)
nop
cs
retf
pusha
test
popf
dec
(bad)
in
pop
dec
sub
dec
(bad)
shr
or
ja
add
popa
jmp
sahf
inc
mov
mov
fdiv
pop
call
sub
(bad)
cwde
aam
into
jbe
xchg
loop
js
scas
add
mov
es
std
dec
cmc
mov
test
arpl
and
out
inc
xor
es
in
cwde
cli
add
xor
push
jmp
sbb
aaa
dec
jmp
mov
add
mov
popf
aas
in
fdiv
movs
adc
sub
repz
cdq
pop
fisttp
jae
(bad)
xor
popa
mov
mov
add
and
fwait
dec
sti
lds
(bad)
cmp
les
xlat
inc
mov
mov
xchg
(bad)
cmp
loope
mov
add
pop
fist
jecxz
cmp
clc
mov
int
adc
bound
mov
cmc
jmp
push
mov
gs
stc
sahf
mov
lods
xchg
iret
or
jmp
mov
add
test
fild
pop
retf
fnstsw
pop
xor
pop
xlat
nop
adc
rcl
sbb
jns
mov
shl
hlt
cmps
pop
pop
adc
mov
push
cmc
lahf
(bad)
jns
scas
ins
fwait
bound
sub
xor
sbb
inc
movs
(bad)
add
imul
dec
mov
mov
xchg
push
mov
fdivr
js
es
cmp
mov
jecxz
in
xchg
jo
cmp
xor
add
enter
and
test
add
cmps
or
stc
or
mov
mov
pop
cmps
mov
adc
xchg
xor
xchg
adc
push
into
xchg
bound
test
sbb
call
icebp
inc
or
or
dec
push
arpl
pop
push
and
add
sbb
sub
int3
dec
faddp
mov
cli
add
fsubr
dec
mov
movs
jmp
cmps
enter
(bad)
stos
cmp
xchg
xchg
and
(bad)
cdq
xor
adc
ja
pop
xor
pushf
sar
lds
adc
movs
retf
xor
lods
xor
push
ret
sar
sub
(bad)
stos
imul
adc
retf
xchg
dec
rol
jo
push
fist
mov
movs
adc
sbb
mov
or
push
dec
fistp
cld
les
mov
addr16
imul
fstp
jmp
aad
mov
pop
adc
pop
xchg
out
add
test
aas
xchg
mov
nop
movs
mov
lahf
repnz
cmc
xchg
adc
mov
mov
pop
out
int
ins
stos
fs
addr16
sti
leave
push
xchg
call
in
test
aas
xor
pop
push
fidivr
pop
push
jge
gs
xchg
mov
jp
jns
and
out
in
sti
(bad)
jae
and
adc
pop
aaa
lods
mov
fs
pop
push
pop
(bad)
cdq
cmp
in
repz
jne
into
popf
pop
out
push
inc
sahf
imul
fmul
lock
pushf
addr16
cmp
sub
fcomp
into
xor
fadd
lods
xchg
dec
add
sub
aaa
push
gs
sbb
sti
inc
mov
push
in
mov
jmp
adc
xchg
push
popf
leave
sti
outs
(bad)
(bad)
fst
push
iret
add
std
adc
push
sti
push
das
push
dec
out
add
and
sti
jne
xor
fimul
jg
or
test
xor
mov
test
test
ins
push
in
(bad)
pop
cs
dec
nop
jmp
outs
xchg
iret
jbe
leave
jge
xor
mov
imul
hlt
xor
call
sub
and
lds
add
sbb
dec
iret
shl
nop
xchg
mov
add
test
test
lods
mov
or
lods
daa
fist
xchg
inc
cmp
fs
jge
mov
retf
mov
retf
sub
inc
push
xlat
ret
push
push
adc
scas
stos
outs
dec
cmp
jbe
jns
mov
fidiv
xchg
adc
push
jnp
add
jp
lahf
pop
pushf
xchg
cmp
scas
sub
shr
lods
sbb
sub
mov
xchg
xadd
xchg
jp
cmp
xchg
xor
fld
fcmovnbe
cmp
repz
in
dec
pop
dec
cs
dec
repz
jmp
dec
leave
call
out
jp
in
shr
shl
cmp
retf
add
cwde
pop
ja
inc
test
sub
push
es
xor
aad
cmc
enter
push
ss
iret
data16
out
cmps
scas
dec
mov
xchg
add
shr
stos
rol
in
push
clc
ficomp
shl
cmps
jp
mov
pop
movs
(bad)
or
rcl
movs
in
scas
sub
lahf
xlat
hlt
icebp
or
xor
inc
shl
add
mov
ja
rcr
sub
imul
mov
cmp
cmp
adc
xor
push
xchg
sahf
cmps
call
mov
js
out
adc
movs
in
mov
test
mov
(bad)
adc
pushf
push
jmp
jle
cmp
inc
mov
int
mov
dec
leavew
pop
lods
mov
jnp
pusha
cwde
ret
mov
sbb
xor
lods
stos
fwait
icebp
fst
icebp
sub
inc
pop
jmp
out
push
inc
inc
inc
out
mov
push
sbb
mov
test
movs
imul
cmp
adc
sub
cmp
icebp
pop
ja
adc
lods
jnp
in
or
fmul
xchg
xchg
repnz
sub
adc
jle
movs
jbe
xor
lds
cmps
mov
jmp
xor
out
ins
int3
sbb
je
inc
sti
ja
and
pushf
and
in
add
inc
das
dec
mov
int3
cli
aam
mov
adc
(bad)
repnz
mul
and
dec
adc
or
out
and
cmps
jmpw
mov
dec
aad
xor
call
fst
and
inc
mov
sub
mov
sub
sub
xor
jb
sbb
and
mov
mov
(bad)
mov
mov
clc
push
xor
add
lea
mov
jne
jecxz
jo
shl
pushf
and
into
(bad)
pop
(bad)
iret
mov
xchg
mov
xchg
lods
iret
jp
nop
jno
xchg
sub
add
xor
cmp
add
pop
out
outs
mov
dec
rcr
movs
adc
dec
or
and
sbb
pop
jp
pop
shl
fxch
jmp
mov
arpl
sti
cmps
and
shr
add
mov
cmp
xor
xor
lods
sahf
pop
sbb
cmp
mov
movs
push
pop
cmc
pop
jmp
movs
iret
imul
stos
ds
jmp
das
repz
xlat
call
push
mov
jle
cmc
or
cmps
mov
dec
data16
sbb
xchg
lds
mov
mov
xor
mov
add
mov
daa
gs
call
mov
ja
(bad)
sahf
push
sub
jecxz
out
mov
lock
addr16
mov
lods
xchg
loopne
addr16
neg
lds
pusha
int
mov
aad
inc
jge
loopne
cmc
and
jo
retf
sub
daa
jns
(bad)
jnp
ja
jbe
dec
xor
fst
push
push
push
add
sar
aas
loop
jg
(bad)
fnsave
sbb
adc
jl
jns
pop
jecxz
adc
mov
shl
sbb
test
sub
xor
sub
mov
cmps
cwde
or
mov
lds
and
ins
movs
iret
ja
call
aas
(bad)
mov
lahf
lahf
stos
sub
or
jo
sbb
lds
mov
dec
jmp
push
xlat
mov
pop
add
jmp
pusha
cmc
(bad)
adc
jle
and
dec
je
call
pop
adc
mov
pushf
cmp
(bad)
sbb
xor
sub
or
mov
retf
(bad)
cmp
adc
in
nop
lods
and
add
pop
mov
iret
in
sbb
fdivrp
and
or
add
cmps
mov
and
xchg
push
out
adc
xor
jmp
jb
mov
cdq
and
aas
pop
cmc
jmp
in
sub
xchg
(bad)
pop
fisubr
xor
push
imul
ret
fmul
loopne
call
ret
jmp
pusha
fwait
sub
pop
stc
test
add
inc
sub
jno
and
int
pusha
sub
push
sbb
inc
push
je
xor
daa
cmp
sub
(bad)
and
xor
pop
shl
ret
fild
jle
sbb
pop
lea
inc
scas
pop
popa
cwde
or
pushf
mov
out
rol
mov
cld
push
loop
push
outs
mov
mov
fsubp
mov
fbstp
cld
repnz
sub
aas
nop
mov
loopne
mov
cdq
or
inc
and
dec
aaa
sub
sub
cmp
mov
retf
int3
xchg
repnz
dec
mov
iret
xlat
inc
sahf
cmp
sbb
push
aas
xor
cmps
(bad)
ins
push
cmps
(bad)
xlat
sbb
aaa
cmp
jno
fs
ds
sahf
rol
push
xor
(bad)
dec
arpl
mov
xchg
(bad)
out
repz
jge
mov
(bad)
sbb
push
popf
pop
aaa
nop
mov
and
int3
fadd
int3
movs
push
sub
cmps
inc
test
cli
retf
ss
loopne
cwde
ja
(bad)
mov
push
xchg
jae
scas
call
stos
mov
sub
add
(bad)
int
mov
not
xchg
scas
(bad)
call
cdq
addr16
repnz
cmps
add
(bad)
stc
ret
lahf
stos
bound
sahf
sbb
jb
les
pusha
push
xor
or
mov
leave
loope
ss
mov
scas
in
dec
jl
sbb
(bad)
clc
push
sbb
cmc
cmc
mov
stos
loope
jne
hlt
mov
and
adc
sbb
(bad)
xor
arpl
retf
scas
pushf
repnz
call
movs
mov
push
pop
sti
mov
jo
mov
adc
dec
fnsave
loop
push
xor
cmp
cmps
mov
or
retf
ds
mov
aam
jnp
loope
xchg
xor
cmp
or
pusha
push
inc
jo
mov
nop
into
pushf
add
(bad)
adc
pop
pop
xor
mov
ret
pushf
inc
jmp
push
stos
out
cld
inc
rcl
mov
xchg
sub
and
loop
xchg
add
outs
mov
push
retf
pushf
jbe
sub
xchg
cwde
push
cmp
sbb
mov
repz
leave
ds
xor
jbe
inc
(bad)
mov
pushf
inc
js
in
mov
jo
ret
jl
mov
jp
je
iret
pop
cli
sub
jmp
add
lahf
mov
lods
sub
ret
sahf
xor
test
jnp
and
push
cmp
imul
cs
push
sahf
pop
xchg
cmp
sbb
xchg
sub
cmps
(bad)
push
push
mov
cmp
mov
dec
pop
jns
pop
adc
push
test
inc
pop
outs
movs
mov
sub
(bad)
xchg
in
xchg
xor
sti
into
(bad)
(bad)
out
and
clc
push
sbb
(bad)
ficomp
push
cwde
jbe
sbb
rol
push
cmp
retf
std
or
idiv
pop
stc
in
or
lods
jle
ror
int
ret
(bad)
mov
pushf
sbb
ss
in
cmp
pop
pop
in
pop
add
dec
imul
icebp
loopne
dec
mov
mov
call
inc
push
data16
mov
mov
jnp
iret
xchg
jnp
mov
xchg
xor
call
dec
xchg
push
shr
out
xor
sti
hlt
adc
fcomip
sbb
out
add
dec
stc
mov
xchg
jmp
or
daa
aas
call
out
shr
iret
jbe
mov
es
lods
aam
pusha
adc
out
fsub
push
js
out
(bad)
(bad)
cdq
pusha
cli
neg
jmp
xor
pop
or
xchg
xor
popa
cmps
pop
pop
daa
cmp
out
mov
scas
adc
(bad)
jnp
push
cmp
jo
and
imul
jle
dec
ins
data16
pop
mov
mov
sub
sub
cmp
les
jo
and
jmp
xlat
dec
jg
imul
shr
mov
mov
fiadd
push
sub
dec
popf
inc
xor
aad
mov
aas
add
outs
aam
adc
test
bound
inc
outs
jnp
call
lea
popa
lods
aaa
xchg
mov
shl
push
pop
(bad)
jno
stos
mov
sbb
mov
fucomip
leave
add
clc
sub
int3
les
inc
mov
loopne
jno
jmp
aam
fdivr
popa
jns
int3
xor
jle
ins
call
ret
jmp
imul
dec
xor
or
xchg
jg
adc
cmp
and
dec
jg
sbb
push
into
fistp
mov
vcvtsd2si
fs
mov
adc
cmp
sub
pop
lds
ins
cld
jns
call
pop
xor
inc
outs
mov
pushf
jb
fbstp
jmp
les
(bad)
jmp
push
(bad)
cmp
loope
fwait
lock
push
jo
pop
in
jmp
adc
outs
mov
fdiv
popa
ret
ror
jp
or
push
dec
fstp
dec
loop
push
cmp
movaps
lods
mov
pusha
dec
pop
movs
lods
int3
or
push
cmp
jmp
sbb
sbb
popf
pop
jns
not
inc
and
enter
xchg
and
ja
xor
add
cmp
xchg
and
(bad)
rol
out
sbb
sub
and
mov
xor
jmp
loop
push
jecxz
stc
mov
aam
mov
inc
jecxz
jmp
adc
dec
fidivr
ficom
or
ret
std
shr
xchg
call
and
test
stos
imul
add
movs
sub
popa
jp
mov
mov
dec
push
mov
jb
punpcklbw
mov
mov
jg
bound
inc
retf
mov
shl
sbb
jmp
jmp
push
popa
mov
inc
test
jno
imul
fwait
xor
aam
mov
in
sub
fld
sub
mov
add
inc
push
push
out
sub
cmp
inc
sub
jle
xchg
out
stos
leave
mov
into
(bad)
jo
leave
sbb
xor
adc
cs
and
or
test
jmp
xlat
cmp
call
jmp
(bad)
mov
cmp
mov
je
add
sub
outs
les
or
outs
sar
pop
cmp
sub
pusha
jb
and
pop
pop
xchg
xor
sbb
or
dec
neg
push
or
mov
add
adc
(bad)
div
pop
mov
iret
xor
(bad)
lds
outs
inc
xor
bound
scas
cmc
sub
mov
repnz
push
mov
dec
xor
and
in
inc
neg
push
push
cmp
jmp
mov
jmp
rol
cwde
adc
cmc
fucomip
movs
std
outs
ja
adc
dec
cld
enter
cld
je
inc
outs
mov
lods
outs
cdq
rcl
loopne
in
mov
(bad)
ss
mov
ss
in
dec
xor
inc
and
mov
aas
punpcklbw
mov
adc
mov
cld
mov
push
sub
retf
repnz
jp
inc
mov
lea
(bad)
nop
and
es
mov
inc
sub
fdivr
fwait
in
cmp
dec
mov
push
cwde
repz
jnp
(bad)
or
cmp
mov
daa
xor
lods
cdq
push
jmp
fdiv
out
dec
xchg
sub
in
lahf
mul
ja
js
mov
inc
push
into
inc
lahf
sahf
dec
stc
xor
retf
cdq
push
jmp
mov
popf
pop
retf
lods
or
sub
loope
repz
test
xchg
sub
cwde
inc
lods
out
inc
jbe
xor
out
xchg
mov
push
repz
inc
jge
push
shr
add
mov
jecxz
shr
loope
sbb
pop
push
cld
and
adc
cmp
push
cmp
mov
das
xchg
js
sbb
leave
pushf
inc
rcl
out
xor
outs
out
mov
mov
je
and
dec
mov
adc
adc
mov
fldcw
jmp
add
and
add
aad
lods
test
test
cmp
loop
ror
dec
js
push
(bad)
in
aas
bound
push
in
out
nop
fadd
movs
xor
(bad)
xrelease
or
std
jg
push
xchg
sar
or
pop
mov
and
ret
retf
ret
xchg
dec
xor
xor
mov
ror
adc
daa
and
cld
dec
push
xchg
ins
inc
jno
mov
jg
mov
jnp
push
or
je
fst
scas
pop
hlt
into
icebp
leave
leave
int
in
cs
adc
sub
cmp
xor
ins
inc
es
mov
fdivr
outs
or
aas
push
xchg
xchg
repnz
or
push
aad
push
and
or
ds
ja
jmp
or
mov
mov
mov
call
pop
pop
pop
(bad)
mov
mov
idiv
dec
out
pop
fmul
dec
retf
int3
or
xchg
hlt
mov
cmps
pop
mov
or
pop
call
dec
dec
ret
dec
jnp
in
popa
inc
movs
jl
rcl
aad
imul
push
sub
jg
ja
std
jg
fmulp
sti
lods
cmp
jmp
jae
retf
clts
sbb
mov
push
and
jl
mov
dec
mov
mov
jo
mov
xor
jns
lds
jnp
jae
popa
xor
loop
aam
rcl
call
push
mov
out
dec
in
mov
sbb
xchg
inc
and
xchg
mov
stos
fild
call
ret
sbb
fwait
and
mov
jg
and
fistp
or
jmp
jns
pop
inc
out
imul
in
pop
mov
sbb
add
jmp
xor
aaa
xor
mov
outs
dec
pop
js
dec
add
iret
ds
pop
mov
lods
popa
xor
fwait
inc
test
lds
arpl
add
fiadd
repnz
dec
imul
mov
fs
rcr
iret
push
cmp
cmp
push
push
sti
mov
mov
mov
dec
sub
mov
btc
mov
pop
(bad)
por
and
rol
inc
jmp
clc
aas
ss
jmp
xchg
mov
(bad)
scas
push
xlat
and
fdiv
sbb
pop
hlt
ret
sahf
and
fist
mov
push
pop
xor
push
and
sub
sub
smsw
lahf
sub
lock
push
lods
inc
ss
push
(bad)
sub
ins
mov
sbb
scas
or
inc
(bad)
ror
and
pop
cdq
out
rcr
inc
xor
mov
popa
mov
dec
inc
nop
lea
push
pop
movs
and
push
bound
call
jl
xchg
adc
jmp
retf
js
mov
sub
es
dec
push
inc
sbb
pop
aaa
out
dec
lods
ss
inc
jo
dec
sub
mov
in
adc
jno
sub
(bad)
cmp
push
xchg
and
jbe
(bad)
ins
repz
xor
das
xchg
ds
cmps
mov
sbb
or
pop
iret
sbb
scas
adc
aaa
mov
vmaxps
inc
adc
push
repz
xlat
pop
and
inc
lock
ss
xchg
mov
(bad)
cmp
add
test
stc
add
mov
and
leave
popa
push
dec
test
xlat
mov
stos
fmul
mov
jns
mov
cmp
or
pop
push
pop
sbb
movs
add
sbb
je
sbb
ins
mov
pop
and
mov
jo
leave
inc
out
aaa
sub
and
or
bound
loop
sti
mov
jo
in
jnp
jg
jge
xor
outs
neg
mov
sahf
pop
pop
scas
dec
call
push
cs
je
loopne
dec
push
mov
xor
es
sbb
and
lea
ds
lea
test
pushf
jg
sub
or
icebp
fnstcw
jp
mov
sbb
movs
cwde
mov
mov
test
dec
out
gs
or
inc
adc
jecxz
mov
popf
mov
and
add
pop
inc
xor
je
cs
outs
test
xchg
ror
adc
(bad)
cli
nop
inc
ss
mov
add
fdivr
ins
scas
or
xor
test
jge
mov
mov
pusha
into
(bad)
aad
mov
in
dec
addr16
in
inc
fild
sti
mov
xor
sbb
repz
es
dec
pop
or
sub
shr
mov
ins
dec
lds
lods
sti
pop
in
int
or
inc
mov
push
es
scas
add
jae
sub
movzx
cmps
aaa
mov
xchg
mov
inc
jle
add
inc
or
mov
mov
cmp
ja
dec
mov
push
inc
mov
mov
dec
sub
shl
bound
push
ins
dec
int
adc
dec
mov
shr
imul
cs
and
mov
jb
loop
jle
xchg
cld
pusha
stos
(bad)
in
fwait
shl
test
lods
mov
push
ficomp
cmc
xchg
cmp
aad
test
xchg
and
or
ss
fisub
or
in
pushf
das
pop
xlat
movs
push
pop
aad
ret
cmp
push
mov
fcomp
les
inc
cmp
in
out
mul
std
gs
inc
das
inc
sbb
jb
mov
ja
add
push
call
cmp
mov
push
jbe
xchg
pop
lods
mov
outs
mov
push
sbb
popa
fadd
xor
(bad)
(bad)
call
das
cmp
data16
bound
in
inc
out
fidiv
xchg
les
push
push
pop
cmps
inc
outs
mov
movs
and
adc
fisttp
xchg
push
mov
mov
scas
test
xor
daa
xor
mov
sub
jo
pop
(bad)
icebp
or
fwait
jb
mov
xchg
ja
pop
push
pushf
(bad)
int
dec
(bad)
mov
psllw
cld
fnsave
xor
xchg
int3
cmp
xchg
stos
cld
lods
mov
cmp
inc
loop
sbb
leave
jo
push
xchg
jbe
push
daa
or
xor
(bad)
push
mov
mov
sub
fcom
jmp
test
outs
cmp
push
push
jg
int3
outs
cmp
test
ins
aas
xchg
jecxz
push
push
bound
mov
sti
cmp
xchg
or
sub
xchg
cmc
out
jl
shl
cmp
leave
mov
fisubr
jbe
mov
das
nop
fild
aad
retf
xchg
inc
in
xchg
or
fwait
mov
xchg
cwde
out
ja
pop
jle
int3
gs
cs
data16
push
xor
test
adc
ds
xor
leave
sub
pop
ds
ret
adc
pop
std
in
lds
or
xchg
bound
and
mov
pop
mov
cmp
(bad)
and
imul
mov
mov
inc
xchg
mov
cli
pop
push
in
(bad)
out
cmp
push
dec
pusha
fidivr
mov
movaps
mul
fsubr
jnp
int
cld
shl
stc
in
mov
push
push
add
and
pop
lods
cwde
cli
les
clc
push
push
or
xor
out
inc
push
cwde
and
loopne
add
push
sbb
dec
or
xchg
jmp
pop
jg
adc
pop
mov
add
out
icebp
inc
pop
adc
add
xchg
ins
mov
push
out
call
mov
sub
movs
mov
popa
mov
imul
cmps
(bad)
mov
pop
cmps
mov
jno
ds
cld
ss
push
iret
ror
mov
mov
mov
cmp
xchg
pop
sub
addr16
cmp
push
jle
or
test
into
dec
or
iret
ins
sar
loopne
retf
fwait
scas
js
scas
xlat
xor
bound
add
cli
cmp
rol
leave
sub
aam
jae
fiadd
mov
xor
shl
std
pop
sar
pop
cmc
dec
es
mov
div
ficomp
test
test
into
fimul
adc
pop
ds
adc
adc
mov
xor
retf
(bad)
stc
cwde
push
mov
ja
arpl
iret
les
xor
arpl
sub
mov
aaa
inc
mov
xor
mov
mov
mov
mov
xchg
dec
dec
mov
loopne
retf
mov
fdivr
cmp
or
mov
and
mov
test
push
dec
(bad)
mov
stc
mov
ins
clc
add
movs
mov
dec
xchg
fnsave
xor
xchg
cmps
pop
rcr
and
ror
fsub
sub
ret
sti
fist
fdivr
jmp
sar
mov
mov
pop
add
adc
mov
pop
xchg
jecxz
std
rol
cmc
and
dec
jg
std
jne
fistp
aad
das
mov
xchg
jl
adc
inc
js
call
mov
push
mov
fldenv
mov
mov
xor
not
jb
mov
dec
add
push
xor
jge
stos
std
rcl
loope
cmc
leave
xor
(bad)
jge
jp
daa
push
stc
pop
jbe
inc
sub
rol
lds
pop
push
(bad)
dec
fild
mov
mov
sub
push
imul
jnp
mov
daa
jne
mov
jmp
jmp
push
push
out
jl
cmp
mov
push
jns
adc
ja
gs
daa
outs
mov
arpl
xchg
fistp
clc
pushf
in
fnstsw
xor
cmp
and
or
pop
ins
push
js
xchg
aam
xor
cs
sbb
adc
cmp
pushf
jecxz
popa
daa
arpl
in
movs
mov
add
pop
jbe
mov
xchg
xchg
or
out
in
ret
jae
scas
cwde
add
adc
test
cwde
(bad)
jecxz
mov
int3
cmp
xchg
ds
mov
or
int
xchg
inc
lds
push
int
mov
movs
push
rcr
and
mov
imul
mul
ffreep
shl
out
xor
xchg
jp
sbb
or
inc
push
ret
xchg
mov
cmp
and
mov
xor
ss
mov
ins
test
jnp
dec
jmp
sub
sbb
lds
in
mov
gs
ficom
(bad)
fsub
pop
xchg
push
xchg
(bad)
rcr
inc
adc
sbb
fisubr
shl
pop
ss
or
(bad)
retf
jg
sub
jge
push
mov
inc
fild
mov
adc
inc
test
retf
rcr
jns
inc
out
das
push
push
enter
xchg
mov
jne
pcmpeqd
or
clc
dec
mov
test
jp
imul
or
xor
adc
sub
xchg
test
fld
mov
repz
iret
inc
or
push
dec
mov
push
mov
xlat
xor
dec
adc
mov
fbstp
retf
retf
data16
mov
xchg
adc
movs
dec
mov
xor
push
jmp
inc
jle
mov
dec
call
and
ficomp
inc
mov
js
xor
add
sbb
movs
icebp
icebp
push
loopne
sahf
xlat
pop
lea
test
xchg
dec
pop
and
jl
cmps
jno
stos
scas
in
jle
retf
in
pop
sub
cld
mov
pop
lods
imul
mov
jns
aad
cmc
lods
js
jmp
nop
pop
add
inc
repnz
and
xchg
cld
stos
cs
sub
xchg
loopne
packsswb
add
lods
psadbw
sbb
retf
adc
rol
ret
enter
mov
jae
pop
mov
retf
lahf
aaa
call
lahf
int
push
cdq
fdivr
mov
mov
fs
and
rol
je
xor
pop
ss
mov
push
retf
mov
mov
(bad)
xor
leave
loopne
pop
arpl
inc
or
(bad)
cmp
dec
jo
inc
pop
jge
test
fld
add
adc
inc
cwde
repz
push
rol
test
mov
mov
out
mov
pusha
cmp
push
into
inc
xchg
jle
xchg
and
xor
mov
jle
inc
push
mov
outs
xchg
ror
xor
pop
xor
shr
lea
and
or
lods
iret
das
cli
push
mov
jno
clc
jo
and
ror
push
ret
push
sbb
es
pop
jle
adc
not
ss
adc
mov
aaa
inc
inc
test
cmp
jns
mov
shl
cmps
fisttp
in
mov
jmp
scas
retf
dec
sbb
cmp
out
and
test
call
and
daa
push
sar
fxch
pop
push
mov
aad
cli
imul
(bad)
xor
sub
pop
stc
aaa
mov
out
stc
push
es
dec
stos
jns
imul
gs
pop
in
xor
sub
ds
sub
fs
pop
fwait
push
lods
(bad)
push
or
xor
and
and
mov
sub
xchg
out
xchg
cmp
ss
mov
loop
stos
dec
aaa
fistp
and
lods
or
lods
push
mov
and
mov
mov
icebp
cmp
into
out
xor
retf
pop
in
pusha
popa
push
pop
aam
push
sahf
inc
mov
inc
or
ds
pop
sub
push
jg
xor
jnp
mov
jno
mov
xor
retf
dec
ret
jbe
out
bound
and
mov
sub
push
push
adc
(bad)
bound
sub
inc
and
pop
sti
jmp
pop
fs
mov
push
rcr
inc
out
cmc
adc
hlt
jle
test
pop
call
pop
xlat
iret
push
mov
add
or
dec
jmp
in
xor
ss
data16
jle
(bad)
push
dec
push
sbb
xchg
ins
jo
mov
ficomp
mov
gs
stc
fdivp
cmp
pop
xor
sahf
mov
popf
adc
fiadd
jno
aas
mov
dec
pop
fidiv
into
inc
in
dec
adc
push
loop
add
and
mov
pop
push
pusha
ret
xchg
stos
mov
sub
adc
and
and
outs
inc
(bad)
mov
xchg
push
sbb
jp
inc
in
jge
add
jno
and
dec
int
adc
dec
push
sub
xor
push
retf
pop
stos
mov
ins
adc
clc
mov
sub
jl
fimul
inc
mov
nop
pop
ja
sbb
and
fmul
xchg
pop
jns
or
loope
movs
ss
cmp
pop
sub
mov
and
mul
inc
aam
mov
mov
clc
cmp
cs
stos
cli
xlat
stos
inc
sbb
cmp
loopne
push
mov
arpl
test
push
sbb
(bad)
mov
js
repnz
(bad)
test
xchg
stc
and
inc
fwait
add
jne
jb
adc
sbb
jg
jl
out
cmc
lods
push
in
int3
mov
mul
pop
stc
mov
cmps
mov
movs
cs
dec
or
bound
jo
add
test
ror
inc
mov
pop
js
pop
dec
(bad)
call
(bad)
adc
(bad)
leave
in
ins
sub
dec
ret
out
adc
fdiv
repz
scas
mov
loop
jecxz
mov
dec
inc
hlt
mov
test
jmp
sub
jl
(bad)
aas
sbb
and
mov
dec
mov
sti
loopne
and
scas
xor
cmp
cmp
dec
jmp
in
lods
inc
adc
and
pop
je
add
push
mov
pop
or
rcr
jl
loop
xchg
pop
fdivr
xor
test
ja
loop
push
pop
adc
repnz
data16
(bad)
js
mov
dec
add
xor
pop
push
dec
(bad)
stc
xchg
mov
fsubr
rol
sbb
es
cwde
push
dec
scas
lea
dec
sbb
sbb
push
push
push
aad
mov
out
push
mov
in
mov
jbe
dec
in
neg
inc
xlat
imul
in
ins
int
mov
daa
sahf
xlat
push
call
cld
inc
lods
sahf
add
xchg
push
mov
mov
lods
popf
lea
mov
out
test
sub
xchg
cmps
pushf
xchg
sbb
fcom
out
lea
sub
xor
jle
int3
call
movs
push
xchg
pushf
jns
add
mov
in
sub
cmp
push
jmp
aad
dec
mov
push
test
mov
xor
(bad)
test
and
in
aam
push
sub
xchg
push
ss
xchg
cmp
rcr
or
add
arpl
add
dec
in
sbb
rcr
retf
or
xor
fstp
fiadd
aas
stos
call
pop
rcl
int
sahf
add
mov
imul
and
pop
outs
cdq
cmps
cmp
call
xor
rol
jle
pop
add
pop
call
mov
out
jecxz
(bad)
push
lock
and
or
hlt
sub
mov
fcomp
dec
mov
push
not
pop
cmps
push
mov
push
addr16
jecxz
mov
mov
gs
aam
in
jnp
pusha
fsubrp
and
pop
movs
push
call
adc
adc
int
mov
daa
(bad)
inc
out
jmp
mov
aad
pop
dec
or
(bad)
sub
mov
scas
lea
mov
add
jl
call
pusha
jb
mov
dec
loopne
gs
mov
inc
push
mov
dec
xor
add
adc
(bad)
stc
or
daa
adc
stos
push
aaa
mul
mov
cmp
cwde
outs
pop
imul
xor
call
(bad)
idiv
xor
bound
and
push
jo
test
inc
popf
dec
mov
ret
or
cmp
add
and
ins
call
cmp
shr
outs
adc
sub
mov
mov
and
pop
loopne
inc
in
sub
cld
in
jnp
mov
mov
push
pusha
jo
rcr
dec
cwde
or
pusha
fadd
sub
mov
push
jno
stc
fld
mov
in
fist
(bad)
imul
cmp
inc
or
(bad)
and
cmps
ins
jle
dec
and
jmp
mov
mov
cmps
sar
scas
or
iret
jns
sbb
or
pop
xor
mov
hlt
cmp
jmp
addr16
sbb
popf
(bad)
add
loope
sti
bound
jg
cld
mov
bound
adc
pop
xchg
jno
adc
in
ds
mov
xor
mov
call
and
rcl
enter
jl
jmp
xor
jne
fs
and
aas
dec
and
in
int
pop
stc
lahf
sub
test
pop
lahf
mov
lods
mov
pop
sbb
jne
fiadd
shl
pop
dec
rcl
ror
xchg
dec
and
xchg
fsub
imul
aas
popa
xor
lea
mov
mov
fwait
pop
adc
inc
cli
mov
xchg
jecxz
es
xor
pop
mov
mov
add
stc
aam
mov
mov
neg
or
fist
or
jl
xchg
dec
out
jmp
dec
std
stos
cmps
or
lods
push
sahf
mov
addr16
stc
xchg
and
pop
adc
js
xchg
sbb
cwde
movs
shl
and
inc
repnz
jae
pop
cdq
retf
sub
repnz
push
jne
jge
xchg
into
test
pop
jae
jo
dec
lds
xchg
mov
mov
movs
mov
add
mov
fistp
xchg
xor
sbb
jle
jg
xchg
xor
cmp
gs
mov
pop
add
aas
pop
ret
pop
mov
jg
fld
or
add
in
and
les
mov
pop
lods
fmul
jmp
fidivr
inc
addr16
mov
out
popa
cmc
outs
cmp
lahf
dec
call
popf
xchg
retf
xchg
imul
imul
aad
or
mov
test
fimul
fcmovnu
daa
and
nop
xlat
xchg
popf
ds
cmp
fisub
adc
fld
rcl
sub
int3
sub
ror
adc
add
pop
cmps
xor
in
mov
cmps
pop
adc
(bad)
scas
or
bound
mov
js
sbb
push
sub
sub
jne
imul
call
jg
jle
jbe
adc
ds
push
aam
mov
out
xchg
cmp
stc
sub
cmp
jbe
jo
fucomp
and
ja
movs
push
gs
sbb
add
push
mov
mov
mov
clc
sub
push
popa
ins
xchg
pop
mov
les
mov
mov
pusha
pop
loope
sahf
sbb
imul
call
jge
in
out
in
in
stc
jge
or
ss
add
sti
test
push
ja
in
dec
ds
and
mov
repz
cmps
mov
mov
dec
aad
xor
idiv
xchg
aad
sub
xor
cs
pushf
lods
inc
retf
mov
mov
jnp
sbb
loop
pop
popf
movs
fsubr
dec
xchg
xchg
add
in
push
inc
jne
pop
or
mov
mov
es
(bad)
add
dec
stos
mov
loope
pop
add
ficom
popa
dec
pop
ficomp
sbb
adc
fwait
add
out
cmp
inc
je
mov
retf
int
int
sbb
pop
pop
mov
cld
not
jecxz
adc
jmp
(bad)
mov
xchg
add
or
test
sub
popa
jl
mov
cmp
add
mov
and
aam
push
(bad)
push
enter
xor
sub
mov
adc
adc
inc
out
popf
dec
in
jb
mov
hlt
sbb
fxch
shr
pop
cwde
and
cld
retf
mov
sbb
mov
and
xor
arpl
movs
xor
rcr
xchg
out
lods
or
call
stos
fisttp
and
outs
jle
mov
out
cmps
in
jl
push
cwde
and
push
aas
add
mov
sbb
out
fiadd
push
iret
jne
push
jno
frstor
pop
or
pop
cwde
mov
push
fdiv
(bad)
adc
add
arpl
(bad)
pop
iret
sub
std
pusha
ret
loopne
inc
pop
add
lahf
mov
inc
dec
sbb
mov
pop
(bad)
pushf
ins
pop
xchg
(bad)
sti
jno
xchg
int3
mov
inc
cmp
sub
fidivr
add
es
fimul
gs
lds
mul
outs
xchg
mov
popa
ja
cwde
(bad)
sbb
cwde
mov
mov
pop
or
pop
adc
add
sbb
clc
stc
shr
mov
cmp
mov
lods
ret
xchg
fcom
or
mov
mov
test
adc
aaa
leave
pop
out
dec
xchg
xchg
test
xchg
call
in
and
lea
inc
or
retf
test
(bad)
inc
mov
aas
rcl
pusha
sahf
xor
push
add
xor
adc
pop
xchg
xor
in
push
ds
push
arpl
xchg
xor
lahf
jo
mov
shl
push
stos
sbb
mov
inc
xor
not
sar
xchg
fmul
inc
arpl
mov
mov
sub
cmp
and
adc
pop
mov
sbb
fs
les
into
ret
pushf
mov
mov
fcmovb
mov
xchg
pushf
mov
iret
jae
lahf
sbb
jnp
cdq
xchg
ins
cli
les
cmovp
pop
popa
test
ret
jmp
xlat
aam
push
movs
or
inc
dec
and
enter
popf
test
inc
sub
adc
movs
or
data16
outs
mov
adc
nop
gs
ret
xchg
repz
jmp
call
cwde
mov
mov
add
fsubp
daa
and
(bad)
into
ins
cmps
mov
rol
mov
aad
jg
xchg
(bad)
and
fimul
pop
test
add
jle
mov
jecxz
add
and
cmp
mov
into
inc
and
xchg
jg
fdiv
bound
jne
xchg
arpl
in
test
ror
inc
cmps
mov
xor
add
push
and
or
dec
retf
cmp
in
push
xor
and
rcr
shr
xchg
mov
push
push
lds
mov
mov
and
ret
inc
inc
imul
jbe
aas
add
int3
(bad)
and
enter
call
stos
jae
jl
and
aaa
cdq
jne
daa
rcl
jae
sub
jae
pop
das
adc
cmp
jmp
scas
cmc
(bad)
or
movs
test
sbb
or
gs
mov
stos
lahf
loopne
dec
sub
(bad)
rep
aam
cmp
jg
fnstsw
jge
mov
pop
ss
sbb
sub
push
sahf
dec
mov
jge
xchg
and
ret
mov
mov
(bad)
ins
push
ins
pop
pusha
ds
(bad)
dec
mov
jg
int
lds
ja
popa
push
sbb
fsub
jae
aas
dec
xchg
(bad)
push
(bad)
aas
stc
inc
jne
jo
jg
pushf
lea
push
push
in
pop
mov
mov
ficom
sbb
add
pop
xor
aaa
adc
xchg
hlt
inc
inc
aam
mov
arpl
sub
jb
xlat
mov
cmp
xor
lock
xor
xchg
sub
mov
add
sti
aad
iret
mov
push
movs
xchg
push
movs
or
test
push
(bad)
loop
or
sub
cld
aad
add
dec
pop
xor
pop
mov
pop
lock
mov
test
inc
xor
fisttp
dec
popa
cdq
sub
or
and
xor
push
xchg
jg
clc
ja
loope
mov
push
imul
repz
mov
ror
push
(bad)
cli
mov
ss
shr
dec
fadd
out
idiv
aaa
fild
dec
pop
or
ds
jl
or
pop
add
mov
xchg
in
push
push
fisttp
push
sub
add
das
clc
fwait
xor
loop
outs
test
pop
shl
pop
pop
shld
push
mov
sub
cwde
fcomp
mov
push
or
ins
mov
fadd
adc
stos
outs
ins
int
xchg
test
sub
dec
mov
xor
sbb
mov
xor
push
ins
adc
or
inc
sub
push
jns
cli
or
jmp
jnp
nop
aad
idiv
idiv
add
pop
in
mov
dec
in
xlat
mov
es
cmc
cdq
cwde
(bad)
add
sub
out
and
ins
retf
xor
fidivr
push
add
mov
pop
add
pop
sbb
and
jo
pop
xor
stos
pop
aas
fisubr
call
mul
out
lahf
loope
and
push
fimul
sub
pmulhuw
ficomp
xlat
(bad)
push
mov
push
add
aam
popa
lahf
xlat
sbb
push
(bad)
adc
call
mov
mov
jo
add
dec
clc
arpl
ja
xor
and
mov
test
dec
xchg
push
call
cmps
xchg
xlat
jp
xor
sbb
push
sti
cmp
jg
(bad)
mov
call
add
hlt
imul
ret
and
mov
cmp
mov
(bad)
in
and
das
mov
xlat
test
jno
xchg
aad
xor
(bad)
retf
sbb
adc
fsubrp
ja
add
adc
pusha
push
jl
push
xchg
je
xchg
(bad)
sbb
imul
adc
data16
out
out
mov
outs
pop
pop
mov
or
mov
jae
gs
icebp
jl
or
das
sbb
sbb
loopne
or
out
dec
adc
adc
fwait
add
lahf
or
adc
out
aam
(bad)
retf
sar
outs
ins
mov
jle
test
popf
and
ja
daa
cmp
scas
or
jns
ror
int
xchg
test
fwait
cmp
dec
sub
mov
adc
push
xchg
mov
mov
mov
fwait
scas
aas
(bad)
mov
sub
dec
jmp
xor
js
gs
push
mov
push
and
inc
sbb
pop
mov
adc
xor
or
xor
enter
adc
pop
inc
dec
add
fdivr
ins
cmp
xchg
pop
mov
or
popa
push
push
stos
dec
xchg
sub
pop
add
jle
(bad)
fnstenv
outs
sub
push
arpl
shl
arpl
add
push
sbb
mov
or
cmp
iret
xor
fbstp
in
lods
arpl
arpl
addr16
out
imul
ja
or
sub
add
adc
je
cmp
leave
(bad)
fdivr
sub
adc
push
ss
cmp
ss
xchg
mov
cmp
loopne
mov
nop
imul
in
push
outs
inc
jl
mov
mov
fistp
sbb
imul
cdq
loopne
jo
push
ds
push
imul
fwait
aas
in
mov
out
popf
movs
sar
push
xchg
mov
xor
adc
pop
mov
adc
sbb
loope
not
retf
daa
xchg
jl
jle
cs
ins
add
jmp
mov
dec
gs
or
or
fs
outs
mov
cmp
sub
bound
inc
(bad)
rol
fmulp
cmp
inc
dec
or
mov
sti
xor
xchg
sub
sbb
in
fs
mov
test
or
stc
jmp
in
(bad)
stc
mov
inc
inc
arpl
xchg
in
pop
sub
sub
cmp
mov
mov
rcl
push
xchg
arpl
jp
retf
dec
sahf
ds
dec
adc
mov
dec
add
ins
and
xor
jne
rol
bound
mov
jae
fadd
push
cmp
test
daa
scas
scas
pop
and
inc
pop
cmp
inc
inc
inc
xchg
mov
call
gs
iret
mov
cmp
mov
aas
in
sar
lahf
xchg
mov
adc
das
ss
cmp
adc
or
lds
mov
cli
xchg
cmp
nop
repz
stos
ins
popf
push
lods
cld
ret
in
in
inc
div
fld
or
adc
pop
fwait
bound
addr16
scas
and
imul
mov
dec
pop
mov
shr
pop
fidiv
inc
push
pop
add
xchg
xchg
in
int3
movs
xor
sbb
fbld
sbb
sub
sub
(bad)
mov
test
fwait
and
out
jmp
cld
pop
daa
mov
sub
(bad)
push
or
(bad)
retf
cmp
pop
or
cmp
cmp
jp
mov
mov
imul
adc
repz
ds
jmp
cmps
aad
mov
in
fidivr
sub
and
aad
mov
dec
rol
outs
sub
out
cmp
jbe
cmp
xor
pushf
jb
in
xchg
jmp
add
es
dec
cmp
test
mov
es
jno
scas
ins
mov
jg
jl
inc
jle
mov
cwde
adc
jle
lea
mov
call
cmp
lods
out
xor
shl
loopne
movs
je
scas
pop
mov
ret
jp
ret
stos
inc
jno
ret
or
sub
cmps
adc
cdq
icebp
cmc
add
fld
mov
jmp
adc
sub
lods
push
loop
mov
mov
pushf
scas
jle
ret
push
pop
pop
sub
add
ficomp
inc
jnp
xchg
int
jo
cdq
addr16
sub
push
in
adc
add
fist
dec
test
inc
addr16
jg
xchg
ror
sub
jns
push
ret
and
lea
xor
leave
out
xchg
pop
inc
cmps
xchg
adc
pushf
mov
shl
mov
xchg
rol
dec
xor
or
mov
ins
xor
mov
or
popa
xor
repnz
and
lahf
mov
cld
mov
call
fdivr
cmps
in
or
repnz
aaa
or
cmp
shl
sahf
add
out
ja
sub
lock
(bad)
pop
jbe
xchg
mov
push
inc
add
dec
mov
jg
cmp
ja
test
sub
es
pop
adc
add
in
mov
fs
pop
mov
mov
fisubr
pop
fcom
data16
cmc
mov
mov
dec
jae
and
jnp
xlat
push
dec
(bad)
aam
dec
and
cli
sub
iret
cmp
jecxz
push
inc
xchg
mov
(bad)
cmp
inc
iret
daa
fidiv
push
or
mov
jb
jnp
in
inc
imul
lds
sahf
sub
call
mov
jmp
push
shl
cmp
sub
ins
mov
pushf
xchg
shr
out
lds
in
inc
in
ins
hlt
mov
mov
das
push
and
pop
and
(bad)
and
(bad)
dec
pop
fs
xchg
aad
add
iret
jo
and
sbb
lods
daa
out
adc
ror
pushf
mul
das
sub
ja
movs
push
mov
rol
xchg
dec
mov
dec
inc
popa
mov
jae
fld
jne
jae
out
setp
cmp
jle
xchg
(bad)
out
je
inc
cwde
scas
pushf
jb
shr
mov
pop
ja
inc
outs
lock
shr
(bad)
je
iret
xchg
and
stc
mov
mov
xor
push
stos
icebp
stos
push
jnp
fs
and
js
ds
mov
add
mov
jb
dec
es
std
pop
jbe
push
nop
and
pop
stos
je
inc
dec
aam
ret
int
inc
mov
shl
inc
lods
dec
sub
jge
into
fistp
sar
leave
push
cmp
fild
and
mov
fcom
push
and
or
sbb
cmp
out
mov
jg
add
and
jl
arpl
(bad)
and
stos
cmp
ins
push
sub
xchg
jbe
jecxz
sub
mov
mov
pop
mov
cmps
mov
dec
call
inc
mov
cmps
xlat
cmps
inc
and
push
add
mov
mov
jne
cmp
test
test
bound
pop
and
jns
pop
sub
inc
sub
add
aad
jl
cli
adc
jae
cli
clc
or
sbb
inc
ins
mov
jnp
mov
test
push
sti
xor
or
mov
ins
data16
mov
das
dec
popf
and
mov
xor
aad
sbb
int3
push
mov
jbe
aad
out
mov
jecxz
push
ins
aas
inc
mov
jbe
mov
sar
imul
cmp
mov
in
push
mov
add
aam
push
stc
shl
jle
je
mov
pop
cmc
adc
dec
adc
mov
or
pop
aam
(bad)
dec
hlt
xchg
ror
mov
sub
cmp
push
push
rcl
sbb
sbb
nop
cs
js
fadd
mov
jns
xlat
xchg
xchg
push
jp
and
js
sbb
repz
mov
imul
outs
and
call
inc
idiv
popa
sti
cmp
fldcw
xor
pop
stc
sbb
in
sub
repz
std
push
sti
scas
mov
pop
(bad)
mov
pop
push
ret
adc
add
rcr
fisttp
xor
pop
cs
pop
lods
add
cwde
push
adc
jb
lods
or
pop
in
lahf
and
retf
lea
cli
xor
bound
mov
cli
mul
aaa
in
mov
push
adc
mov
xchg
sbb
push
bound
push
xor
inc
lods
ss
push
jnp
xchg
inc
call
cmp
pop
jno
dec
or
adc
jne
pushf
(bad)
xchg
imul
jl
push
popf
scas
ret
dec
cdq
std
stos
xchg
fst
dec
sbb
sub
push
adc
test
mov
cmp
mov
loopne
ins
int3
or
(bad)
mov
es
fist
lds
and
xor
aam
imul
(bad)
call
dec
cmp
mov
or
adc
fucomi
lahf
imul
jbe
sbb
push
fld
outs
add
fisub
mov
int
adc
shl
push
fisubr
cld
jns
ret
mov
or
sti
push
popf
pushf
int3
mov
shr
scas
push
in
xchg
sub
cmp
call
ins
xchg
in
outs
stc
adc
push
sti
ficom
ror
fld
test
loopne
dec
pusha
pop
cmp
daa
fidiv
retf
cmp
xchg
mov
outs
cld
dec
mov
pushf
mov
rcl
add
test
sub
adc
ror
test
(bad)
cmps
es
das
sub
test
in
mov
push
mov
loopne
mov
sbb
retf
sbb
icebp
sbb
(bad)
mov
ins
shl
cmp
pushf
frstor
jns
aas
xchg
jne
jmp
fisubr
hlt
retf
dec
pop
adc
loope
aad
sub
enter
scas
xor
icebp
push
push
mov
push
jns
cmp
xor
inc
mov
dec
mov
mov
jl
enter
(bad)
sti
add
dec
and
imul
sbb
inc
dec
ret
dec
mov
jo
outs
retf
mov
dec
mov
call
and
addr16
sbb
hlt
call
push
sub
mov
sub
pop
movs
mov
mov
test
daa
aam
in
hlt
(bad)
dec
sbb
fnsave
lods
or
into
(bad)
(bad)
movs
or
xchg
mov
inc
cmp
inc
push
mov
nop
js
add
nop
mov
mov
sub
sub
dec
dec
pop
in
fistp
xor
repz
fidivr
cdq
sub
sti
mov
mov
repz
neg
enter
test
xor
jbe
add
retf
ror
in
aad
icebp
out
jle
push
call
hlt
pop
push
xlat
jmp
adc
cmp
mov
dec
mov
mov
shl
jbe
push
mov
mov
adc
jp
dec
push
out
jp
inc
cmp
lea
sbb
push
ja
jnp
jno
fucom
(bad)
push
aaa
sar
retf
cdq
cmp
movs
lods
dec
push
pop
ins
or
mov
aaa
call
cmc
fsub
push
mov
sub
inc
pop
retf
inc
test
inc
test
inc
xor
fadd
scas
sbb
clc
inc
sbb
(bad)
ret
hlt
cwde
sub
adc
(bad)
push
int
xchg
ret
and
push
and
mov
mov
xchg
jo
cmp
push
stc
pusha
shl
cmp
jl
call
out
popw
push
add
int
push
mov
fcomp
loope
xor
loopne
jnp
push
sub
sti
mov
in
ins
mov
inc
push
cdq
(bad)
add
mov
je
xor
lock
push
loop
nop
push
std
sub
push
es
push
mov
cmp
push
mov
out
in
push
dec
jmp
test
xchg
inc
push
lds
and
cmps
cmp
fdiv
add
les
cmp
cmp
rcr
mov
nop
and
add
ins
test
mov
cmps
(bad)
xchg
icebp
loope
and
fnstenv
loope
fistp
xor
dec
in
dec
sbb
jl
out
shr
jg
cld
inc
add
mov
repz
jecxz
stc
fisubr
lahf
xor
(bad)
fld
outs
daa
pop
std
inc
sub
retf
lea
and
push
in
jge
ror
fiadd
push
leave
dec
adc
dec
inc
test
fld
imul
div
pop
arpl
mov
pushf
sub
inc
movs
jle
pushf
xchg
dec
sbb
inc
cmp
xchg
jp
jne
mov
push
aam
data16
dec
outs
imul
adc
cli
(bad)
outs
mov
mov
mov
rol
add
push
jno
mov
ja
arpl
dec
nop
jp
push
add
or
fmulp
and
xchg
ins
add
(bad)
ficomp
jmp
daa
pop
pop
mov
sub
rcr
pop
imul
jmp
mov
and
cli
sub
sub
cld
js
popa
jno
adc
pop
(bad)
xor
test
retf
cmp
adc
into
das
jp
fcomp
push
push
jb
daa
mov
test
push
cli
adc
sbb
cmp
in
mov
push
clc
(bad)
xlat
daa
movs
ss
mov
call
inc
in
icebp
popf
bound
cmp
scas
jb
dec
ror
sbb
mov
jo
adc
fidivr
push
loopne
jecxz
std
mov
icebp
mov
inc
in
push
pop
mov
or
sbb
fild
pop
lahf
sub
(bad)
jb
jns
shl
cmc
inc
and
xchg
dec
pop
jg
xor
ins
jbe
mov
mov
add
sbb
or
sbb
int
in
push
jecxz
xchg
inc
push
xlat
cmp
cmp
fidiv
and
xor
rol
adc
add
jb
sar
xchg
stos
xchg
jno
add
lods
cmp
cld
rol
jecxz
inc
js
xchg
inc
retf
sbb
ins
sub
ret
std
jge
or
push
pushf
inc
add
inc
es
or
out
cmp
or
adc
test
out
adc
dec
arpl
inc
inc
ins
loope
push
mov
adc
fldcw
sub
mov
push
mov
iret
sti
sub
adc
adc
pop
jmp
or
adc
mov
clc
jmp
mov
fldcw
push
jmp
cdq
aas
(bad)
sub
push
bnd
ins
fwait
sti
jge
fiadd
mov
sub
cmp
ja
and
xor
stos
jns
jl
cmp
sbb
retf
imul
pop
pop
mov
jmp
cmp
call
adc
cmc
cli
mov
mov
jne
cmp
lahf
(bad)
cmp
repnz
ret
sub
fild
pop
int
xchg
jns
scas
in
ins
jmp
jmp
inc
mov
inc
jnp
loop
test
ret
push
cdq
mov
std
daa
arpl
(bad)
sub
(bad)
push
jg
or
retf
add
xchg
sbb
fbld
and
jb
jno
xchg
mov
adc
ss
stc
into
jmp
int3
nop
je
mov
xor
das
and
cmp
xchg
cdq
xchg
push
cmc
ja
(bad)
cmp
mov
data16
adc
mov
dec
ins
mov
dec
sub
fstp
loop
jmp
movs
dec
mov
popf
mov
jo
(bad)
push
mov
shl
pop
in
cmc
shl
mov
dec
sbb
mov
pop
das
jnp
test
les
cmps
adc
pop
bndstx
jae
jmp
pop
test
jecxz
mov
das
sub
or
lods
cmp
xor
inc
(bad)
mov
lods
add
and
xchg
push
xlat
cmp
mov
movs
pop
ds
outs
nop
ror
popa
pop
dec
ret
xchg
xor
test
scas
jmp
mov
mov
iret
push
inc
fild
mov
lods
ret
repnz
into
inc
sub
or
mov
stos
cs
push
call
(bad)
retf
lahf
add
add
pop
fmul
and
adc
sub
movs
push
push
rcl
jmp
jmp
sahf
push
inc
iret
xchg
std
adc
(bad)
mov
(bad)
fist
fcom
pop
xor
in
dec
push
push
mov
push
push
adc
cmps
(bad)
jmp
nop
call
push
addr16
mov
pop
mov
jg
and
sub
movs
sbb
gs
dec
mov
mov
pop
xchg
push
cmovno
dec
stos
pop
pop
or
pop
mov
(bad)
lock
jae
mov
(bad)
fsubr
sbb
shl
int3
mov
out
cmps
xor
or
lea
dec
jmp
xor
jno
iret
fs
sbb
(bad)
daa
(bad)
mov
cld
popa
out
bound
inc
push
hlt
and
nop
fs
jo
pop
dec
mov
movs
jge
mov
loopne
test
and
dec
inc
stc
es
mov
aam
mov
sub
cmp
sub
pusha
mov
mov
test
pushf
call
jp
(bad)
push
or
mov
push
nop
lods
adc
or
mov
outs
sti
mov
push
bound
shl
call
int
int3
ss
pop
das
std
call
jb
jnp
gs
fwait
xor
pop
sbb
and
movs
nop
clc
jp
or
mov
out
(bad)
in
xor
sahf
inc
and
shl
sub
pop
add
xchg
mov
mov
adc
inc
das
mov
scas
jl
xchg
jbe
push
jmp
mov
push
or
jmp
mov
jns
pop
cmps
imul
mov
cli
call
(bad)
fwait
call
jne
cmp
ret
ins
scas
stos
jge
mov
xchg
popa
in
xchg
xchg
dec
mov
shl
pop
or
and
test
pusha
cwde
and
jnp
mov
jl
popf
pop
movs
xchg
mov
dec
adc
mov
in
cmps
lock
sub
mov
sar
adc
fmul
sub
or
sahf
xchg
data16
fmul
sbb
push
rcr
in
mov
mov
pop
sub
sti
sub
push
loopne
or
pop
movsx
pop
push
fistp
call
mov
push
cmc
sbb
and
fld
push
add
jmp
ds
xor
es
jge
sub
leave
sub
loope
(bad)
fidiv
pop
jb
test
pop
add
xchg
(bad)
pop
and
mov
mov
adc
cwde
mov
pop
nop
dec
push
pushf
out
jp
pop
xchg
test
mov
sub
shr
js
mov
outs
and
pop
or
sbb
push
cld
mov
lea
retf
inc
adc
fcomp
sbb
xor
sub
pop
std
cmp
int3
in
dec
xchg
mov
adc
sahf
xor
fcomp
sar
das
jb
cmps
lahf
cwde
(bad)
iret
popa
fld
loop
mov
pop
jae
mov
call
lods
inc
stc
jg
cmps
inc
lds
and
sbb
mov
adc
add
sbb
std
or
fimul
stos
(bad)
or
or
scas
movs
out
int3
push
out
xor
je
mov
add
push
pusha
into
jns
iret
and
cli
test
ret
cmp
xchg
lock
sar
sbb
clc
ins
outs
xlat
mov
js
or
aad
adc
data16
repz
stos
out
fisub
mov
or
or
xor
ret
js
repz
daa
add
sub
mov
repz
xor
or
pop
ins
xor
pop
test
push
stc
xor
arpl
fisubr
pusha
jno
pop
lods
retf
pop
sub
scas
cmp
jp
push
fist
xchg
mov
retf
xor
xchg
pushf
sar
sub
adc
jl
in
mov
(bad)
shl
jmp
cld
stos
and
aas
ins
add
nop
mov
ds
jecxz
push
jle
in
mov
and
rol
mov
lods
scas
int
iret
test
adc
retf
or
adc
into
or
jmp
sub
jmp
xor
lock
into
mov
dec
hlt
mov
leave
mov
or
cld
or
mov
mov
pop
(bad)
cmp
ins
out
call
adc
test
mov
(bad)
imul
sub
mov
stos
sub
(bad)
lods
or
leave
movs
in
(bad)
fwait
in
pop
(bad)
std
icebp
in
mov
push
cli
cmp
push
cmc
lock
repnz
xchg
stos
test
in
cmp
loop
scas
xchg
mov
movs
inc
or
shl
ins
mov
imul
or
xor
cld
test
hlt
xchg
inc
sbb
xlat
imul
add
push
sub
xchg
std
loopne
outs
out
mov
xchg
cmc
pop
icebp
shr
icebp
push
inc
jns
jbe
scas
adc
scas
mov
or
mov
jae
sbb
stos
lock
push
btc
xchg
jle
xchg
dec
sub
bound
lahf
(bad)
jl
lods
mov
das
mov
mov
lock
inc
imul
adc
and
jmp
push
(bad)
out
dec
push
sbb
(bad)
jno
fimul
sub
lahf
sub
mov
mov
call
pop
aas
add
fisubr
outs
ret
mov
adc
add
jmp
push
mov
adc
pop
aam
stos
pop
mov
and
jno
jmp
adc
pop
cmp
repnz
movs
ret
mov
mov
jmp
jl
jbe
xor
push
sti
pop
lock
mov
cwde
adc
in
ret
fistp
bound
stos
add
sbb
mov
dec
mov
in
dec
mov
push
bound
xchg
pusha
dec
add
fdiv
std
mov
shl
out
xor
cmp
inc
pop
das
fs
mov
mov
clc
(bad)
mov
cli
adc
ja
cmp
(bad)
ins
push
sbb
shr
add
into
xchg
or
xor
and
pusha
mov
leave
mov
xchg
inc
(bad)
adc
fldcw
(bad)
cmp
lahf
enter
dec
je
add
fstp
add
mov
adc
es
scas
jmp
jnp
shr
ds
push
ret
dec
dec
repnz
cmp
adc
xor
and
push
loope
xchg
shl
or
psubusw
push
add
xor
shr
into
(bad)
hlt
push
sbb
fisubr
into
mov
inc
leave
stc
mov
adc
fidiv
or
(bad)
popa
adc
sub
sbb
ins
shl
enter
xor
out
mov
outs
jl
mov
call
or
sahf
sub
pop
sub
in
scas
inc
add
icebp
movs
and
cmp
mov
pop
sbb
aad
cmp
push
ds
cmp
xchg
imul
mov
inc
xor
mov
in
(bad)
imul
adc
or
push
sub
inc
shl
sub
xor
mov
dec
ins
lds
inc
add
mov
shr
lahf
mov
jp
sbb
push
ret
pop
cld
in
fxch
jno
test
mov
jbe
mov
mov
or
lea
jp
xchg
imul
stc
repz
and
icebp
jle
mov
inc
call
xchg
pop
outs
(bad)
mov
mov
cwde
pop
sti
int
add
bound
push
std
add
xchg
mov
int3
xor
aad
icebp
arpl
stos
test
sbb
lds
out
fcomp
dec
xchg
xchg
mov
mov
js
push
fcmovb
push
mov
(bad)
(bad)
push
pop
movs
mov
lods
scas
jmp
pusha
int3
in
push
int3
pop
dec
jnp
cli
test
stos
push
cmp
out
cs
cmp
sbb
sbb
popa
rcr
fs
cmps
inc
(bad)
pop
rcl
lahf
stos
jae
mov
pop
inc
imul
in
xchg
lds
adc
or
mov
sub
cmc
xor
mov
pop
mov
inc
and
push
mov
pandn
stos
xchg
sub
nop
mov
jo
clc
or
dec
in
mov
rcl
pop
(bad)
dec
sbb
xor
loopne
not
repnz
out
jnp
(bad)
popa
inc
leave
gs
push
jmp
dec
xor
in
aam
dec
mov
fnstsw
mov
and
mov
(bad)
sub
ds
mov
add
xchg
stos
shr
dec
push
jno
sbb
mov
dec
retf
mov
les
push
dec
pop
mov
mov
cmp
mov
mov
pop
add
rol
xchg
jmp
out
pop
rcr
adc
adc
(bad)
add
ins
ja
inc
xchg
dec
add
cmp
xchg
scas
icebp
icebp
(bad)
and
and
fldenv
ins
mov
mov
into
cs
inc
ror
xchg
ret
shl
das
sub
push
dec
ds
(bad)
mov
inc
int3
push
imul
cwde
sbb
int
shl
retf
push
les
mov
das
std
mov
std
dec
jecxz
in
cmps
hlt
(bad)
rol
inc
and
ror
sti
fcomi
xlat
daa
ret
xchg
adc
adc
mov
inc
repz
into
cmp
jne
movs
(bad)
shl
xor
mul
popf
jmp
in
mov
(bad)
in
arpl
sub
(bad)
xor
mov
mov
xor
inc
mov
mov
and
inc
jle
pop
dec
mov
in
in
xchg
pop
pop
cwde
adc
and
(bad)
cmp
sbb
les
dec
mov
popa
loope
popa
add
push
dec
dec
cmp
fstp
push
scas
clc
out
hlt
inc
ret
jecxz
out
bound
sbb
ds
call
mov
pop
cmp
mov
outs
pop
add
test
out
fs
jmp
clc
mov
pop
lods
xchg
test
in
mov
dec
aaa
arpl
out
rol
sub
enter
test
push
cmp
popf
(bad)
cmp
mov
loop
fmul
push
loop
not
stos
ret
and
call
and
and
movs
or
push
(bad)
stc
and
pop
xlat
inc
and
inc
jb
adc
sub
and
ins
add
std
push
ds
jmp
pandn
rol
ins
jmp
call
xor
mov
sahf
scas
mov
(bad)
jne
dec
push
ret
sbb
rol
repz
jno
inc
or
imul
mov
jl
pop
es
cmp
sar
arpl
mov
push
push
jae
aaa
rol
gs
pop
imul
dec
fisub
rcr
imul
fnstenv
mov
pop
xchg
inc
fwait
push
and
test
xchg
add
mov
mov
shr
add
int
out
aam
cmps
icebp
xor
pop
es
jns
xchg
mov
and
sbb
cmp
addr16
mov
pop
sbb
clc
(bad)
fcmovne
sbb
xchg
clc
cwde
ds
or
fisttp
inc
jbe
ret
shr
dec
push
rcr
sub
cmp
jb
jo
fisttp
dec
add
test
or
jno
aaa
mov
cmp
mov
in
fdiv
sbb
or
in
ficomp
dec
fadd
scas
call
xchg
mov
dec
mov
adc
cmp
fsub
jmp
cwde
fwait
ret
jae
mov
cmps
add
pop
mov
xor
test
mov
mov
adc
adc
inc
or
xchg
xchg
retf
and
mov
aas
pusha
mov
ss
xor
adc
xchg
(bad)
clc
pushf
mov
sbb
pop
movs
fwait
mov
pop
jns
inc
sub
dec
sbb
repz
mov
mov
and
sbb
repz
mov
mov
rol
mov
inc
fsub
jl
add
jp
cmp
scas
sbb
es
popf
(bad)
lahf
mov
mov
popa
adc
push
and
sbb
sbb
inc
in
adc
inc
mov
and
dec
jl
scas
pop
or
mov
mov
in
scas
and
(bad)
scas
jge
dec
dec
jecxz
push
rcl
not
cmp
(bad)
push
retf
pop
icebp
cdq
loope
add
(bad)
out
mov
pop
ss
and
scas
xchg
dec
je
push
and
out
cmp
pusha
lods
jmp
push
add
mov
jg
retf
cmps
push
lods
ja
gs
in
jp
test
arpl
cdq
mov
and
inc
pop
jo
sub
out
xchg
loopne
inc
add
call
dec
rcr
out
dec
int
pop
sbb
pop
test
popa
push
pop
adc
sbb
or
and
out
mov
imul
pop
int
(bad)
popa
fs
or
cmp
or
mov
adc
inc
mov
sub
dec
bound
push
imul
hlt
push
cdq
loop
pop
(bad)
lahf
call
pop
and
adc
call
xchg
imul
stos
mov
test
dec
and
pop
out
ins
mov
popa
xor
std
jmp
mov
not
mov
pushf
out
(bad)
xchg
mov
xor
or
aas
or
call
mov
movs
sbb
cmc
into
cmp
push
jnp
sbb
out
push
retf
add
dec
xlat
inc
fucompp
das
inc
out
bswap
into
loope
loope
test
inc
dec
mov
adc
stos
into
push
outs
or
frstpm(287
pop
lock
cmps
xor
add
(bad)
sbb
xor
movs
arpl
pop
lahf
xchg
or
add
mov
mov
and
push
sti
cmc
aas
adc
repnz
pop
sub
pop
xchg
popf
sbb
test
and
hlt
pop
or
loopne
and
es
ret
push
and
push
bound
fstp
dec
dec
fnsave
imul
dec
jge
lea
dec
add
push
fsub
jmp
cmp
sub
pop
(bad)
add
addr16
jnp
pop
out
and
xlat
add
int
std
xlat
aad
mov
push
jo
je
in
movs
xor
and
rcr
jmp
jmp
xchg
add
into
pop
adc
je
jle
inc
mov
xor
(bad)
jmp
in
mov
(bad)
in
xor
pop
and
(bad)
(bad)
mov
add
pop
test
lea
dec
stos
cmp
sbb
retf
ins
fcom
inc
call
in
pop
jno
jno
push
pop
mov
test
pushf
or
add
dec
xor
aad
xor
jp
in
ins
pop
lods
dec
out
ins
push
mov
sbb
shr
dec
xor
outs
icebp
aad
pop
cld
mov
sub
pusha
out
lock
loope
sahf
and
mov
fld
movs
arpl
and
bound
in
cwde
inc
push
lods
dec
outs
push
movs
sub
cmp
push
test
pop
mov
cmp
lahf
in
xchg
xor
rol
mov
push
jb
push
imul
das
jae
inc
pop
fwait
or
add
fs
or
outs
inc
fstp
sub
mov
xor
jmp
in
and
mov
sub
jmp
inc
adc
mov
jbe
fisub
loop
cmp
je
ret
jmp
ins
je
imul
out
mov
and
mov
retf
ss
ror
gs
sub
mov
in
inc
or
cmp
adc
dec
ins
test
enter
repnz
stos
(bad)
cmps
test
cmp
adc
sub
xor
xor
jmp
movs
cmp
mov
call
inc
inc
add
push
jns
daa
cli
xor
fs
retf
cmps
sub
fdivr
in
shl
cli
test
test
cli
jp
in
movs
xchg
jae
call
aaa
jle
xchg
movs
shl
mov
in
cwde
and
push
stos
xor
inc
enter
test
outs
mov
push
lock
stos
ror
add
jg
mov
dec
stos
xor
sbb
ins
mov
aam
jl
enter
inc
or
das
or
push
icebp
xor
(bad)
ror
sbb
(bad)
sub
inc
cmp
stc
in
push
in
leave
xchg
mov
push
inc
fs
push
gs
xchg
lahf
pusha
int
loope
mov
mov
dec
xor
cli
das
push
fstp
or
jb
cmp
mov
fidiv
xchg
ret
retf
in
ss
or
xor
(bad)
bound
mov
stc
xchg
jp
(bad)
retf
xchg
or
cmp
outs
jmp
mov
inc
ins
icebp
pop
cmc
addr16
aam
xchg
dec
test
jle
adc
aaa
jne
adc
jecxz
mov
mov
shl
sub
mov
fld
or
add
cmps
sub
daa
mov
xlat
test
out
shl
cmp
add
mov
retf
dec
cmp
dec
jnp
enter
adc
and
adc
cdq
inc
add
data16
or
jmp
mov
sbb
pop
mov
push
mov
and
std
test
enter
das
scas
xchg
inc
dec
xlat
adc
enter
dec
mov
push
fucomp
std
jmp
cs
push
sbb
and
fs
lock
dec
or
push
inc
pop
xchg
mov
xor
mov
imul
(bad)
xchg
fdivr
sbb
std
mov
mov
ds
popa
ret
ins
sub
push
nop
mov
lea
rcl
add
pop
iret
sbb
push
loopne
loop
in
xor
cld
iret
jmp
add
dec
dec
jle
mov
add
icebp
dec
fdivr
or
(bad)
scas
dec
imul
push
and
clc
in
mov
inc
push
stos
add
repnz
mov
daa
clc
mov
cmp
in
cmp
(bad)
cli
cs
das
arpl
dec
pop
push
rcr
jno
mov
or
daa
add
dec
inc
ficomp
jns
cwde
mov
jae
loopne
les
lea
pop
retf
loop
mov
lods
stos
cmp
repz
or
(bad)
out
push
sub
or
sub
xchg
lds
mov
or
lahf
cmps
sbb
jecxz
fsubr
mov
mov
das
sub
js
repnz
jbe
shl
inc
jp
(bad)
in
mov
dec
mov
cmc
es
push
pop
jge
sbb
mov
jl
push
inc
shr
mov
cmp
fucompp
cmovp
stc
int3
mov
or
pop
adc
mov
sbb
sti
sbb
adc
and
jbe
test
pop
mov
jl
push
out
ds
sti
retf
fnstenv
daa
and
or
and
sti
rcl
aam
cmps
sub
xchg
cmp
test
sti
loop
ror
cmc
xchg
xchg
xchg
and
(bad)
and
outs
sbb
jmp
stc
das
inc
sahf
or
lahf
inc
or
call
(bad)
adc
inc
int3
out
mov
and
mov
inc
hlt
pop
sar
mov
pop
mov
call
add
shr
in
inc
xchg
pop
dec
out
pop
add
mov
test
test
sub
mov
stc
mov
mov
repnz
(bad)
retf
mov
(bad)
mov
pop
xchg
and
xchg
xchg
and
mov
mov
dec
ficomp
dec
sub
jmp
lods
aas
iret
in
retf
lock
scas
and
xor
mov
sub
(bad)
gs
sub
sbb
jge
out
imul
dec
call
adc
movs
inc
mov
(bad)
je
push
push
xor
sub
push
arpl
ret
jno
sti
aas
outs
fmulp
mov
cmp
mov
les
xor
mov
fild
sbb
push
add
cmp
iret
or
push
jne
ret
add
adc
int
or
mov
push
xlat
icebp
int3
enter
adc
jl
cdq
mov
lock
lods
ins
in
pop
movs
pop
scas
push
add
push
dec
push
aas
and
add
les
pop
sub
sbb
js
mov
je
mov
jle
adc
ins
lea
lea
mov
mov
xlat
xchg
sbb
outs
imul
inc
xor
ficom
es
mov
or
add
loopne
stos
imul
jg
sahf
pop
movs
jge
dec
add
add
das
or
cwde
in
pushf
inc
shr
pop
pop
and
push
sbb
jle
pop
xchg
cld
imul
add
push
or
les
jo
dec
clc
and
mov
push
pop
jg
sti
push
mov
sub
pop
call
cdq
imul
pop
je
sbb
stc
not
pop
stos
sub
sub
neg
icebp
cmp
or
sbb
push
mov
add
and
je
mov
sub
jle
shl
pop
xchg
sub
call
dec
aas
aaa
test
push
jbe
ficom
test
jo
in
dec
jecxz
loopne
add
retf
fisttp
cmps
jmp
xchg
mov
(bad)
pusha
mov
mov
call
jge
cdq
call
js
outs
xor
xchg
out
fwait
lock
fdiv
inc
gs
or
call
ror
fild
pop
mov
mov
fst
xor
push
jbe
xchg
dec
mov
popa
arpl
es
fstp
xchg
inc
mov
fcomi
fs
pop
jmp
fnstenv
inc
inc
loope
test
pop
jl
sbb
push
jp
sub
leave
je
dec
popa
add
inc
cli
into
push
mov
or
mov
sar
dec
call
cmps
imul
dec
mov
xchg
mov
ja
sbb
cwde
out
sub
xchg
dec
daa
in
fwait
jno
mov
ins
dec
aad
or
test
inc
pop
and
mov
adc
cmp
(bad)
push
inc
out
xchg
jecxz
pop
out
scas
dec
rcr
aas
test
xor
mov
dec
jmp
enter
and
test
ja
lahf
ins
sub
xchg
dec
(bad)
fimul
jmp
mov
sbb
pop
aad
loope
ror
sub
jecxz
cmp
pop
and
push
jecxz
div
cmp
mov
out
add
push
mov
sahf
add
in
(bad)
cmp
or
sub
dec
ja
fidiv
jae
sahf
(bad)
push
dec
lea
mov
dec
in
add
xor
repnz
push
pop
sbb
ror
aad
stc
jbe
imul
arpl
lahf
cmc
push
jno
mov
enter
inc
sti
movs
rol
cmp
pop
iret
sbb
mov
aam
mov
mov
xor
or
add
pop
sbb
cmp
neg
lock
fstp
xor
shl
mov
iret
mov
test
pop
lods
sub
xchg
jmp
sub
les
xor
iret
xchg
ret
pop
jge
call
or
xchg
lods
xor
ss
int3
mov
ds
popf
add
sub
or
jmp
xor
sar
ins
mov
add
fidivr
cmp
and
pusha
sbb
inc
call
mov
inc
out
loopne
xor
mov
push
push
inc
jp
sar
xor
ret
push
movs
push
inc
adc
bound
mov
cmp
(bad)
arpl
xchg
clc
inc
sahf
jae
cmp
cld
inc
mul
inc
jp
sub
div
lahf
fidivr
fild
dec
shl
xchg
pop
jne
int3
icebp
jbe
or
idiv
jle
shl
xchg
inc
xchg
mov
or
dec
xchg
mov
mov
pop
xor
(bad)
leave
sbb
mov
pop
mov
adc
or
cwde
mov
cmp
xchg
int
add
(bad)
in
fs
xchg
adc
inc
mov
imul
leave
jbe
imul
movs
dec
int3
das
js
xchg
adc
out
add
mov
xor
sbb
int3
shl
dec
xchg
sub
or
push
fistp
sahf
bnd
aaa
sub
(bad)
call
popa
sub
in
stc
shl
mov
mov
sbb
jmp
stos
dec
hlt
lahf
pop
jl
gs
cmps
mov
call
dec
push
sahf
mov
sub
into
fsubr
mov
hlt
into
scas
sbb
(bad)
(bad)
fimul
push
(bad)
sbb
push
and
mov
out
aaa
stos
fisubr
inc
add
cld
sbb
je
aad
jns
lods
int3
js
daa
sbb
sub
mov
mov
or
lahf
mov
xor
fs
inc
stos
adc
or
cmc
push
push
add
push
(bad)
xor
stos
(bad)
pop
js
jo
dec
(bad)
loop
push
rol
sbb
jg
inc
sbb
jno
lahf
sub
xlat
jae
xchg
(bad)
jmp
out
add
jg
fsqrt
push
xor
mov
mov
cmp
hlt
mov
mov
lods
(bad)
mov
push
jno
lahf
add
sahf
jg
inc
fidivr
or
leave
jmp
rcl
cmp
jg
cmps
shl
xchg
pop
sbb
ds
mov
xchg
fwait
rol
(bad)
in
std
div
fwait
in
add
add
mov
test
cwde
pop
or
sbb
out
dec
inc
add
sti
mov
dec
xor
jnp
cld
rol
jg
setl
fs
ror
xlat
dec
daa
jle
imul
mov
jmp
ins
sahf
xor
outs
outs
sub
imul
not
and
sub
pop
pop
ins
cmp
lock
xor
add
mov
cli
or
hlt
xchg
jbe
fsub
call
pop
test
mul
add
shr
add
inc
cmps
pop
sub
inc
jnp
je
ins
inc
ja
nop
mov
jns
add
lock
and
jg
(bad)
fistp
xor
sbb
into
mov
cmp
lahf
sub
and
pop
mov
push
fstp
lea
je
out
or
jb
cmp
adc
(bad)
pop
call
pop
pop
xchg
push
mov
ss
vcvtsi2ss
call
movs
dec
sahf
shl
sbb
or
xor
pusha
sub
cmps
stc
add
push
in
call
movs
sbb
mov
cmps
add
shl
aaa
mov
ret
nop
into
cmp
je
jno
push
mov
aas
sar
in
inc
jmp
cmp
xchg
fisubr
aaa
cwde
xchg
je
adc
xlat
in
cli
mov
faddp
lea
retf
jmp
(bad)
mov
fmulp
add
add
fstp
mov
or
adc
cmc
jecxz
mov
imul
pusha
gs
fwait
push
inc
sub
pop
leave
enter
(bad)
xor
bound
jb
ret
movs
add
nop
mov
(bad)
das
cdq
pop
xor
shr
jnp
xor
xor
(bad)
dec
pusha
mov
push
mov
fimul
test
cld
jg
sub
adc
jle
push
call
jge
outs
xchg
sbb
jle
dec
repnz
xchg
les
push
or
sub
sbb
cmps
inc
jae
leave
cmp
mov
cmps
lahf
aaa
test
test
mov
or
xchg
and
push
pusha
fistp
dec
inc
fptan
cmps
arpl
push
nop
fisttp
call
mov
test
cmc
and
mov
mov
iret
ins
and
inc
and
(bad)
js
jge
nop
sbb
sub
xlat
sub
push
aad
int3
mov
repnz
data16
rol
xchg
dec
imul
mov
jl
add
leave
cmp
lods
push
cmps
xor
hlt
ins
mov
fwait
test
jge
lods
call
pop
xor
jo
fistp
and
mov
cmp
call
aas
cld
and
pop
jne
xchg
jecxz
dec
ds
push
out
xchg
sbb
add
mov
sub
(bad)
lods
jae
mov
ret
cs
push
push
js
xchg
push
shr
mov
test
mov
sbb
cmps
pop
adc
ror
push
(bad)
jg
fdivr
fld
out
mov
cmp
or
movs
push
movs
xor
cmp
shr
inc
xchg
test
mov
xchg
mov
add
sub
sahf
aam
push
cmp
cvttps2pi
xchg
std
mov
data16
out
push
nop
popa
xchg
pop
adc
mov
jb
jle
adc
mov
sub
data16
xor
adc
in
mov
jl
fist
fdiv
cwde
cmp
cmp
aam
adc
and
cld
push
scas
mov
in
dec
lds
jl
cmp
aam
pop
jp
clc
sub
mov
mov
dec
adc
dec
pop
push
jmp
fisttp
jl
xor
inc
mov
inc
stc
jns
push
(bad)
sahf
daa
pop
fidiv
mov
xchg
les
jno
pop
cwde
jno
(bad)
pop
sub
push
cmps
mov
mov
add
add
jg
sbb
stos
sbb
adc
ror
ins
out
popf
fs
idiv
bound
mov
push
fimul
lahf
dec
mov
pop
pusha
(bad)
or
pop
add
aam
and
nop
cmp
out
mov
test
test
(bad)
sbb
jl
shr
pop
mov
(bad)
stc
jae
lahf
daa
out
pop
xor
xchg
mov
adc
imul
into
sbb
sub
mov
inc
leave
div
stos
iret
mov
inc
add
adc
int
scas
psubb
stc
imul
or
test
and
loope
xchg
mov
mov
das
dec
std
pop
push
inc
lahf
gs
stos
mov
inc
or
push
ret
sbb
std
cmp
and
pop
mov
adc
stos
push
xor
or
sub
xchg
inc
xchg
mov
imul
inc
mov
ds
cld
ins
push
lock
push
or
data16
sar
sbb
pop
sbb
add
iret
mov
xchg
sub
xchg
push
shl
imul
cmp
dec
daa
push
sub
push
or
in
lods
repz
lds
out
push
lds
clc
lea
cmc
mov
aaa
imul
leave
cld
mov
movs
movs
into
and
js
and
inc
fld
xlat
add
lods
mov
ret
sbb
out
loop
mov
add
mov
in
adc
mov
stos
add
mov
arpl
shr
push
inc
call
adc
sbb
push
test
(bad)
(bad)
iret
push
push
cmp
imul
retf
add
jmp
cdq
popa
mov
inc
hlt
ss
jno
(bad)
pop
aaa
xor
fld
and
lea
mov
inc
ds
adc
or
pop
stc
repz
jns
movs
aam
or
call
fwait
rcr
add
or
(bad)
mov
loope
cmps
and
sti
ds
jb
dec
movs
imul
dec
mul
inc
add
jp
push
mov
aam
add
test
add
dec
pop
rcl
jns
test
xchg
(bad)
hlt
int
or
mov
and
mov
jp
xchg
cmp
jmp
icebp
jns
mov
repnz
inc
ins
popf
scas
jb
jmp
gs
cmp
ds
sti
(bad)
and
sbb
pop
int
xlat
xor
and
imul
jmp
push
pop
pop
and
mul
or
sbb
push
sub
in
sbb
out
retf
jle
in
popf
call
stos
adc
push
sub
fmul
test
jle
int
pop
adc
data16
cmps
cld
std
and
scas
(bad)
fs
retf
cdq
pop
or
dec
out
mov
xor
pop
xor
sub
push
(bad)
lahf
outs
inc
xlat
in
fdivr
mov
or
sbb
cmc
cmp
mov
mov
jle
mov
cmp
mov
sub
push
movs
pop
push
inc
iret
dec
retf
jecxz
popa
(bad)
cmp
adc
pusha
in
mov
sbb
hlt
clc
mov
sub
pushf
mov
cmp
inc
push
add
into
mov
(bad)
push
xchg
cli
test
cmp
lods
mov
xor
pop
js
add
mov
int3
hlt
retf
stos
pop
mov
push
test
sub
ret
jo
mov
aad
jl
xchg
sbb
xor
sti
xor
arpl
clc
jb
mov
mov
mov
not
fwait
jp
dec
call
call
adc
jno
fist
mov
cmps
push
push
sub
shl
cmp
push
push
push
out
dec
xor
sbb
cmp
dec
and
aaa
stos
dec
sub
mov
jae
sub
push
cmc
cmp
pop
xchg
in
push
imul
retf
(bad)
in
lahf
add
mov
scas
mov
sbb
inc
sbb
lock
gs
lock
add
movs
scas
mov
adc
mov
dec
icebp
push
sti
mov
clc
dec
xchg
into
pop
cmc
rol
xor
pop
outs
push
xor
aaa
adc
cwde
int
ret
push
dec
call
arpl
push
adc
xchg
mov
push
xor
test
test
cmp
push
(bad)
jns
gs
cmp
js
jne
sbb
sub
sub
add
xlat
dec
fmulp
mov
lods
hlt
jl
sub
push
(bad)
xchg
jg
in
scas
les
jmp
fbld
into
je
jecxz
stc
je
mov
jbe
dec
sar
fsub
sti
or
mov
jns
push
ror
mov
sub
in
fadd
cmp
dec
(bad)
mov
jle
hlt
add
sbb
dec
leave
cmp
call
sbb
adc
outs
fwait
dec
push
(bad)
je
cmp
cdq
push
and
sbb
popa
add
xchg
mov
ror
push
mov
xor
hlt
popf
pop
outs
mov
cwde
aad
inc
sbb
ja
cmps
xor
cmp
lds
add
adc
(bad)
movs
inc
dec
cmp
or
push
mov
bound
mov
and
fnstcw
cld
mov
jb
loope
in
jmp
enter
nop
nop
sbb
inc
(bad)
aad
xchg
not
aas
and
sub
daa
cli
ds
cmp
mov
leave
sbb
cmp
aas
jae
sub
pop
sbb
in
cmp
gs
orps
(bad)
jb
imul
sbb
jp
push
andnps
add
mov
mul
or
mov
adc
imul
dec
sub
and
add
(bad)
stos
outs
outs
mov
sub
ja
or
jmp
mov
fdiv
add
sub
jle
sbb
mov
lahf
addr16
fsub
inc
mov
cmp
into
pop
push
pop
push
das
js
into
ds
push
push
cs
test
test
push
jp
repz
ss
mov
js
icebp
fistp
out
push
xchg
gs
jnp
outs
lods
jb
mov
fistp
cld
cdq
and
aad
aaa
mov
jle
inc
mov
popa
repz
retf
scas
dec
loopne
(bad)
test
fsub
or
cmp
xor
push
mov
scas
jne
mov
adc
mov
retf
dec
or
mov
mov
cmc
(bad)
mov
std
dec
mov
lahf
addr16
add
cld
and
(bad)
xchg
mov
arpl
jnp
or
mov
adc
lods
jle
std
mov
mov
jbe
cmp
daa
pop
cmp
pop
ins
mov
outs
(bad)
test
jp
repz
sahf
lock
jnp
or
cmps
(bad)
or
repz
sbb
or
and
int
movs
pop
pop
lods
mov
dec
data16
mov
push
shl
xor
mov
jns
pop
jbe
mov
and
pop
out
out
adc
sub
xchg
nop
add
je
pop
xchg
xchg
mov
cmp
push
add
pop
or
adc
jl
(bad)
mov
cmp
mov
mov
out
daa
ret
push
cmp
outs
add
jnp
jle
pop
xchg
aaa
sub
cld
xchg
das
int3
inc
stc
jge
sbb
xor
fidivr
mov
call
and
and
adc
cmp
in
cmp
jns
aam
jmp
pusha
test
into
ds
ficom
call
push
and
sub
adc
mov
cmp
lods
mov
push
mov
jns
(bad)
sti
jge
push
in
jb
pop
cmps
mov
dec
jns
jl
or
icebp
loopne
and
xor
xchg
lods
mov
movs
push
sar
fisttp
enter
aad
inc
loop
jno
rol
inc
cmps
in
fistp
cli
or
mov
call
dec
add
xchg
clc
jb
push
in
jbe
xor
into
stos
inc
test
mov
lods
cmp
adc
in
sbb
jae
es
sub
pop
retf
pushf
inc
add
repz
cld
imul
mov
xchg
and
xchg
jb
outs
inc
inc
inc
daa
out
cdq
sbb
inc
jmp
sub
adc
gs
rol
cs
daa
mov
lock
sahf
xor
pop
int3
push
sub
dec
nop
push
(bad)
(bad)
adc
out
dec
aaa
enter
dec
inc
xchg
push
jle
fdiv
ja
inc
pop
mov
loop
retf
cmp
test
mov
int3
sbb
(bad)
loope
mov
add
cmp
push
add
inc
retf
int
test
xor
dec
scas
jl
(bad)
iret
mov
xchg
jae
inc
and
cld
daa
call
loope
dec
push
stos
pop
lahf
(bad)
outs
cmc
push
rcr
add
sahf
test
mov
in
(bad)
xchg
lods
cs
rcl
shl
fbstp
mov
mov
and
gs
dec
ins
aam
mov
shufps
jmp
ss
add
aam
jl
adc
dec
stos
lds
inc
or
xor
jo
sub
es
(bad)
int
daa
sub
jmp
int
lock
je
dec
and
jecxz
out
push
rol
sbb
adc
lahf
arpl
xchg
and
pop
xor
cmp
pop
xor
adc
adc
clc
(bad)
nop
jbe
retf
mov
add
push
pop
push
push
jge
push
mov
bound
lods
call
idiv
lea
ins
pop
test
aam
std
sub
push
mov
pop
add
lock
pop
xor
movs
inc
mov
cmp
enter
hlt
push
push
call
bound
out
fstp
sub
mov
push
das
mov
aam
jbe
cmp
out
leave
gs
out
imul
add
sub
sub
dec
xor
push
les
test
mov
jno
inc
ret
mov
js
inc
xchg
xchg
in
mov
fist
lods
or
rol
jno
sbb
call
bound
and
sub
and
lods
daa
push
mov
push
inc
(bad)
push
inc
scas
xchg
fimul
popf
mov
jno
add
jg
(bad)
pusha
mov
cmp
scas
cmp
inc
jmp
loope
push
inc
icebp
or
xrelease
loopne
(bad)
call
hlt
mov
mov
mov
int
(bad)
dec
mov
inc
inc
lds
xchg
push
bound
inc
scas
call
call
cmp
iret
mov
adc
or
pop
and
rcr
pop
or
or
jecxz
rcl
ins
mov
and
arpl
imul
aaa
(bad)
pop
movs
imul
pop
or
add
out
pop
je
and
je
pop
lods
gs
push
push
js
lea
mov
in
outs
(bad)
push
or
push
pop
cmp
scas
adc
inc
xchg
dec
jle
jno
and
nop
dec
mov
push
pop
cwde
ret
(bad)
push
jnp
jnp
test
aas
add
outs
jge
mov
fidiv
xchg
sub
ficom
repnz
xor
clc
test
fidiv
add
xchg
pusha
cs
mov
into
stc
xor
xchg
push
dec
inc
imul
retf
or
loop
push
cmp
lahf
cli
movs
js
mov
mov
sbb
loope
mov
inc
jle
dec
addr16
std
adc
cmp
sbb
in
bound
mov
cmp
cmps
shl
lock
(bad)
rol
or
shr
dec
push
lods
ret
cmp
jg
jb
mov
dec
add
jae
mov
test
jo
sub
out
jle
sbb
inc
push
add
lods
lea
pop
xchg
pop
dec
sbb
out
(bad)
and
in
sbb
push
sbb
pop
in
call
cmp
or
mov
das
lods
xchg
mov
xchg
pop
loope
mov
dec
je
inc
mov
jae
loope
loope
in
mov
xchg
and
outs
push
dec
retf
cmp
div
mov
cwde
scas
add
xor
push
push
push
push
fs
stos
call
add
push
mov
loopne
cmp
imul
fild
into
cmp
push
gs
sub
pop
div
push
ja
cmps
das
pop
inc
outs
xor
pop
sub
sbb
pop
stos
pop
and
cwde
mov
in
mov
std
cmp
inc
jae
sar
push
add
fs
mov
loope
mov
syscall
dec
retf
nop
xor
pusha
clc
mov
ror
les
fstp
es
test
jae
inc
or
int
test
fbstp
ins
icebp
sbb
dec
(bad)
jne
jns
mov
jmp
in
cmp
sbb
jbe
mov
addr16
or
jnp
jmp
daa
loope
test
jnp
push
(bad)
cld
push
fidivr
pop
(bad)
inc
cmp
xchg
push
push
out
inc
mov
xchg
popa
mov
jg
sbb
and
and
and
mov
mov
call
stos
jne
mov
test
div
repnz
popf
inc
xchg
xchg
pop
and
(bad)
movs
lods
int3
(bad)
(bad)
adc
cmp
jmp
loopne
ror
sub
and
sbb
add
call
ret
aad
mov
pop
pop
add
sbb
sub
sbb
sbb
call
jo
mov
movs
pop
stc
fnsave
adc
push
stc
add
jge
mov
jb
cmp
lahf
retf
sahf
div
adc
mov
xchg
scas
pusha
test
pop
pushf
or
and
popa
shl
lods
or
dec
leave
dec
xor
sub
mov
(bad)
inc
sub
push
adc
arpl
call
dec
push
mov
jnp
jmp
hlt
int3
lds
pop
aam
adc
push
push
inc
cmp
inc
stc
add
jnp
mov
add
cmp
shl
push
retf
or
jne
inc
fstp
push
neg
adc
fiadd
imul
cmp
lods
xchg
xor
push
dec
dec
fmul
leave
pop
add
fistp
gs
jmp
pop
outs
add
mov
inc
xchg
dec
hlt
adc
outs
ja
jl
jle
fld
jne
(bad)
rcr
add
mov
mov
jl
jae
fdivr
mov
jb
fcomip
int
mov
jno
pop
xchg
inc
or
mov
push
sub
mov
fnstenv
xor
sbb
arpl
cmp
repnz
sti
sbb
push
movs
xor
test
push
imul
retf
and
lods
div
sbb
dec
xchg
push
icebp
aaa
inc
int3
sbb
sbb
sub
and
inc
jae
mov
or
shl
cmp
jle
pushf
fwait
out
dec
pushf
stc
das
call
pop
jb
mov
xor
hlt
test
jno
dec
add
mov
mov
int3
ret
cdq
push
jnp
jne
mov
fwait
push
sbb
sbb
(bad)
hlt
dec
cdq
mov
pop
jno
test
mov
xor
lea
ss
test
pushw
xchg
pop
outs
cli
inc
jg
push
test
lahf
mov
adc
imul
dec
mov
mov
and
xchg
xchg
inc
push
jle
cli
push
adc
dec
sub
lods
sbb
push
lods
(bad)
ds
pop
jecxz
or
jp
sub
fnsave
lahf
popa
mov
jmp
mov
in
xlat
jne
add
les
stc
pop
movs
mov
jns
mov
xor
aaa
call
add
iret
cmp
dec
jmp
or
jp
jb
and
imul
xchg
out
das
sbb
gs
cmc
sti
popf
jg
into
movq
xor
jmp
push
mov
push
jle
sbb
enter
mov
test
inc
push
cld
pop
cld
push
aaa
inc
xor
inc
int
adc
mov
(bad)
mov
popf
dec
test
ret
ja
xor
mov
sub
jae
and
sbb
jecxz
push
xchg
js
cmp
pop
push
mov
popa
sub
fld
dec
lock
ja
mov
jp
enter
xor
std
or
and
pop
dec
cmc
inc
(bad)
mov
pop
sbb
adc
out
dec
inc
sub
in
xor
cs
sahf
xor
mov
jmp
pop
sub
jnp
adc
gs
push
test
retf
mov
adc
or
and
mov
add
das
mov
ins
dec
(bad)
dec
jns
out
scas
xor
mov
xor
mov
sub
push
xor
push
call
push
ja
pop
ins
mov
lock
xchg
stc
xchg
cmp
pop
sar
mov
(bad)
sub
mov
es
(bad)
fcom
iret
dec
imul
les
add
out
fs
jbe
out
mov
add
or
mov
mov
cli
sub
mov
mov
les
adc
inc
xchg
bound
and
add
cmp
fist
ret
in
fcmovu
mov
xchg
aam
test
pop
cmp
jno
inc
movs
mov
scas
push
and
test
aad
mov
xchg
cmp
(bad)
into
sbb
add
fsub
cmps
or
jae
movs
cmp
inc
pop
sbb
scas
xchg
pop
xor
sbb
cmp
dec
inc
jb
mov
or
out
mov
inc
push
(bad)
clc
mov
lahf
pop
adc
mov
mov
cdq
pop
and
stc
pop
sub
sub
adc
pop
mov
lea
scas
jg
icebp
ja
jmp
push
mov
pop
cmp
cmc
bound
add
int
push
cmps
jmp
fisttp
mov
jmpw
ins
push
shr
jno
jae
xchg
call
xchg
cmp
int3
and
inc
jbe
pop
xchg
gs
scas
daa
adc
lds
std
or
je
loopne
adc
push
pop
cmp
mov
xor
xchg
cmp
xchg
push
and
cmp
mov
cmp
mov
mov
(bad)
int3
repnz
pop
mov
into
fs
lods
mov
or
popa
sbb
aas
cmp
mov
sbb
xchg
out
in
jg
rol
fst
cs
dec
mov
mov
jle
fcomp
and
inc
sub
bound
push
jae
inc
inc
push
adc
loopne
lds
adc
in
and
mov
mov
pop
and
loop
fwait
mov
fsubr
adc
int
lods
fistp
retf
sub
nop
imul
js
aam
adc
pop
stc
mov
jle
shl
imul
pop
fld
push
fist
rol
std
xor
(bad)
mov
out
fsub
add
add
pop
(bad)
in
inc
neg
movs
shl
(bad)
gs
call
ret
or
jp
adc
xlat
sbb
mov
pop
adc
aam
jbe
xchg
dec
push
push
fdivr
test
les
xor
shr
in
loope
or
aas
lea
test
mov
jle
mov
mov
sbb
into
xchg
push
pop
daa
push
mov
inc
add
mov
and
addr16
enter
jb
push
dec
and
xor
pop
out
mov
out
repnz
les
cmp
fbstp
cmps
xchg
cmp
add
ficom
(bad)
ficom
xchg
les
jl
stos
fisttp
stc
aam
je
popf
cwde
pop
and
imul
out
cli
aam
retf
mov
push
data16
gs
adc
mov
cmp
inc
sub
repnz
shl
into
push
ret
push
div
out
or
lea
mov
push
cdq
das
shl
dec
int3
inc
scas
(bad)
outs
xchg
push
dec
xor
data16
(bad)
jbe
inc
(bad)
sbb
rcr
mov
into
aas
sub
in
int3
push
sbb
xchg
sti
lock
gs
inc
imul
loopne
or
(bad)
fist
in
mov
or
inc
inc
out
cmp
ffree
cld
jns
mov
fsub
sbb
pop
and
test
mov
fs
loopne
sub
dec
xchg
int3
outs
jge
into
addr16
add
icebp
inc
sbb
aad
inc
mov
dec
pop
sbb
movs
mov
jb
loopne
dec
and
mov
add
and
pop
cli
aam
loopne
and
jmp
sbb
(bad)
pusha
jl
repz
das
shl
ins
add
pop
mov
mov
cdq
cmp
stos
inc
cdq
cwde
rol
add
lahf
add
mov
js
ffreep
cmps
cmp
adc
(bad)
std
ja
add
sub
imul
ror
test
scas
inc
cmp
sub
les
rcr
jp
push
sub
add
add
clc
lods
mov
addr16
jno
shl
cmp
jmp
or
ret
je
mov
rep
sti
(bad)
xchg
mov
sub
pop
dec
ret
mov
sub
mov
push
or
retf
adc
(bad)
pop
call
jo
mov
xor
push
inc
jno
sub
aad
rcl
xchg
idiv
test
push
rcr
dec
xor
inc
jp
ja
outs
inc
mov
retf
mov
push
movs
addr16
mov
(bad)
stc
pop
nop
sbb
xor
pop
mov
push
add
test
pop
aaa
sub
cmp
inc
fiadd
adc
outs
or
mov
dec
(bad)
jmp
mov
sub
out
and
sti
fnsave
cmps
outs
rcr
lock
hlt
jg
movs
push
push
sub
push
dec
iret
inc
sub
mov
dec
pushf
and
add
xor
push
pop
xor
jbe
sbb
test
fidiv
push
inc
mov
xlat
fdiv
jo
and
inc
adc
retf
cli
in
js
(bad)
mov
or
and
mov
jg
cld
cmp
fcompp
push
(bad)
repnz
and
std
push
inc
shl
repnz
into
sub
jl
sar
cmp
pop
fstp
call
and
pusha
pushf
(bad)
xchg
stos
sbb
push
push
inc
cwde
xchg
rol
inc
push
outs
sar
fstp
mov
xchg
rcl
movd
movs
xor
xchg
xor
pop
xchg
pop
repz
add
inc
push
pop
in
pop
arpl
push
xor
jmp
(bad)
mov
mov
repz
xor
xchg
sbb
inc
rol
ja
sbb
pop
dec
jp
adc
add
mov
lods
inc
xor
and
xor
in
addr16
jno
mov
fs
jecxz
aaa
test
ins
cmp
loop
icebp
add
jmp
cmp
lods
adc
cmp
call
lock
mov
shl
mov
mov
cli
xchg
mov
add
xchg
jle
mov
arpl
fidivr
ret
sub
sbb
dec
ret
inc
in
jle
bound
mov
fdivr
dec
xor
adc
or
call
ds
call
and
pop
popf
out
loopne
mov
cmp
jo
scas
mov
scas
mov
jbe
in
mov
or
loope
test
mov
test
movs
cvtps2pi
xchg
xchg
adc
(bad)
hlt
in
in
or
and
sti
ins
lods
dec
test
fcomp
fcmovnb
les
or
dec
test
inc
xchg
xchg
into
sbb
mov
and
adc
pop
fdiv
jae
call
icebp
mov
sub
adc
sbb
aad
stc
pop
jb
jo
cmp
jno
ins
or
outs
inc
dec
loopne
fnstcw
sbb
add
enter
dec
mov
xchg
cmp
dec
sbb
push
lods
ins
inc
adc
mov
popa
xor
daa
pop
leave
cld
fidivr
(bad)
mov
icebp
xor
mov
(bad)
icebp
imul
dec
imul
je
xchg
shl
fadd
add
jmp
and
xor
xchg
cmp
aam
dec
or
sbb
cmps
sub
(bad)
inc
int3
es
hlt
xchg
fucom
sar
mov
imul
sbb
cld
and
and
test
pop
rol
lahf
xor
popa
cli
les
xlat
mov
cmp
pop
mov
or
cmp
out
std
inc
stos
mov
or
rcl
cmp
ds
xor
and
mov
adc
jl
repz
stos
sub
mov
xchg
sahf
jae
imul
rcr
jne
xor
and
xchg
test
inc
adc
das
sbb
setg
test
jns
cs
bound
push
inc
pop
adc
cli
loop
and
pop
pop
mov
stos
sbb
repz
sub
xchg
jnp
stc
jb
movs
dec
cmps
cmps
scas
retf
std
repnz
fild
pop
cmp
test
pop
aam
or
sar
push
fnsetpm(287
mov
sub
ss
idiv
ins
push
mul
or
push
cmp
arpl
fwait
xor
add
sub
pop
imul
mov
jb
mov
call
sub
aam
ret
ja
push
dec
jle
int3
pop
in
jb
and
(bad)
outs
(bad)
das
push
or
or
adc
cmc
jecxz
push
mov
out
mov
cmp
scas
sbb
daa
lea
popf
push
lea
push
stc
outs
ffree
stc
cdq
jle
dec
or
mov
out
int3
pop
inc
mov
ja
cli
cdq
jp
repz
xchg
fiadd
pushf
mov
bound
pop
jecxz
inc
pop
mov
add
call
nop
push
jae
jb
nop
mov
call
int3
push
mov
sbb
mov
mov
mov
pop
lahf
sub
or
mov
jb
loope
mov
loop
jle
or
sub
mov
mov
adc
or
mov
xlat
(bad)
arpl
fisub
push
sbb
mov
jle
movs
mov
fidivr
out
lods
int3
sub
fistp
ret
or
cmp
in
pusha
popf
cmps
call
dec
cmp
mov
cmps
and
inc
scas
adc
inc
and
retf
push
sub
mov
xchg
sub
jg
mov
addr16
dec
inc
imul
pop
out
jae
jecxz
enter
mov
xchg
adc
lock
push
pop
inc
ret
push
jl
adc
xor
mul
mov
mov
pop
push
retf
sub
or
pop
xor
jae
mov
call
test
xor
mov
movs
adc
jmp
sub
jbe
mov
fucomip
das
out
ss
adc
jmp
jg
(bad)
mov
je
cli
outs
xor
xor
int
xlat
mov
push
aaa
inc
daa
push
movs
(bad)
stc
mov
sub
and
inc
bound
push
test
or
adc
inc
cld
mov
out
int
sahf
fisttp
xchg
jge
or
push
fstp
retf
addr16
mov
xor
add
sbb
lods
mov
inc
mov
dec
mul
mov
fistp
xchg
mov
call
cmp
loope
scas
jne
adc
add
mov
ficomp
mov
rcl
dec
jmp
into
jle
push
pop
inc
test
add
pushf
mov
push
xchg
jno
xchg
iret
mov
in
push
mov
sub
jecxz
stos
xchg
add
mov
jge
mov
mov
push
pop
and
sub
ds
xor
sub
jbe
xchg
data16
add
dec
mov
scas
push
mov
inc
cmc
(bad)
sar
pop
mov
ins
or
out
ja
fistp
enter
mov
mov
dec
mov
pop
jno
js
cmp
mov
sti
shl
pop
fwait
(bad)
jae
dec
mov
jecxz
sti
fiadd
mul
push
xor
shl
pusha
xor
or
int
in
aam
fldenv
inc
mov
mov
sbb
push
and
sub
mov
push
xor
test
neg
out
imul
arpl
and
mov
nop
sub
push
cwde
xchg
iret
das
add
movs
repz
pop
jo
lods
into
psubw
adc
stos
cmp
add
out
(bad)
xchg
int3
je
outs
adc
lods
mov
jmp
gs
pop
add
outs
dec
mov
add
push
add
lock
arpl
leave
mov
xor
or
hlt
jl
ins
dec
jg
xchg
js
cld
push
scas
es
push
(bad)
int3
or
pop
or
cdq
add
lahf
dec
xchg
out
aad
xor
dec
je
test
push
sub
or
sbb
ins
retf
test
inc
loopne
jge
out
ret
mov
into
scas
(bad)
mov
xor
xchg
mov
jecxz
imul
push
nop
daa
ret
lock
xchg
stc
jbe
ins
es
cs
jno
(bad)
lds
sub
cmp
sub
cmp
dec
inc
dec
int3
test
xchg
add
loop
stos
xor
jns
and
lods
dec
es
push
out
in
pop
pop
push
(bad)
jae
sub
jle
or
mov
cmp
mov
xor
bound
adc
jbe
ror
fld
sub
xlat
sub
out
in
icebp
inc
in
fiadd
aad
add
cmp
mov
inc
jmp
mov
in
dec
fild
dec
sbb
(bad)
xchg
xchg
push
push
call
or
sti
mov
push
call
sub
sti
push
cmp
sahf
mov
lods
adc
mov
mov
inc
mov
std
movs
mov
xor
and
rcl
js
pusha
cmp
jle
mov
stos
adc
add
mov
aam
movs
pop
std
push
jnp
(bad)
adc
pusha
adc
es
push
add
sar
adc
cwde
push
and
stos
xor
es
cwde
out
push
test
inc
std
mov
cli
test
sub
jmp
je
pushf
pop
inc
arpl
add
xor
pop
and
jno
xor
mov
ja
jno
sub
scas
dec
sbb
inc
dec
sbb
jne
and
sub
stc
clc
xchg
imul
loop
ret
stc
jbe
push
pop
push
jge
mov
jge
inc
xlat
popa
imul
push
pop
aam
mov
fldl2e
mul
xor
jmp
shl
dec
iret
iret
jp
xor
(bad)
fmul
cmp
dec
jecxz
jmp
rcl
cmps
lods
cdq
jb
push
outs
cmc
popa
jle
je
pushf
loope
jg
ret
cli
adc
sar
inc
ret
outs
pop
loopne
shl
mov
mov
xchg
and
aam
fisubr
jbe
sar
sub
push
push
mov
stos
ficomp
pop
sbb
retf
xor
mov
outs
(bad)
xchg
jne
repz
add
sbb
lods
enter
lods
add
std
sbb
js
imul
xchg
shl
push
ret
stos
ret
push
pop
test
aaa
add
add
aam
inc
mov
out
dec
fs
ins
jbe
ficom
fcmovnu
out
xlat
int3
cmc
sub
ret
in
jmp
test
cmp
int3
push
xchg
jne
fwait
cld
adc
sub
(bad)
adc
push
(bad)
int
mov
mov
push
test
loopne
ret
or
fst
or
mov
lahf
shl
dec
cmp
dec
sbb
mov
jmp
(bad)
fdivrp
mov
vpcmpgtw
movs
adc
dec
mov
std
call
push
jg
fadd
sbb
mov
xchg
iret
clc
add
mov
cmp
pop
sbb
jl
jp
sub
or
lahf
shr
adc
shr
push
sub
addr16
jo
ins
xor
enter
loope
loop
mov
ins
lds
push
add
dec
stos
ror
repnz
jb
xchg
jmp
cmp
daa
fisttp
fwait
jnp
lahf
mov
mov
or
and
sbb
mov
int
addr16
and
push
mov
(bad)
int3
clc
cmps
pop
pop
sbb
fmul
sbb
add
dec
pop
push
add
ins
fdiv
out
sub
mov
xor
loop
popa
sahf
aam
push
or
mov
test
inc
inc
sbb
mov
and
xchg
mov
js
fcomp
mov
mov
jae
adc
and
cmp
xchg
es
inc
mov
lods
mov
ss
out
xchg
js
cmp
or
xchg
adc
mov
mov
mov
repnz
int3
mov
push
xor
lea
pop
mov
icebp
adc
dec
arpl
test
push
cmc
pop
mov
jb
imul
repz
sub
popf
rol
xor
sub
pop
cmps
xchg
popf
add
enter
hlt
sub
mov
jl
mov
(bad)
arpl
sbb
inc
sub
sub
sub
int3
push
(bad)
ss
bound
int3
dec
mov
jns
push
hlt
inc
sub
fdivr
movs
cmp
sbb
dec
imul
cdq
push
(bad)
jecxz
sbb
out
push
mov
xor
lahf
test
lods
jg
jne
pop
xchg
out
(bad)
adc
sbb
mov
bound
call
pop
push
(bad)
jl
mov
adc
cmp
mov
or
sar
push
mov
mov
retf
mov
jo
add
rsm
push
cmc
enter
mov
test
(bad)
arpl
adc
cmc
jecxz
jno
mov
mov
iret
and
data16
mov
sbb
jmp
dec
xor
mov
xchg
test
sti
xchg
xchg
pop
jb
pusha
inc
mov
and
adc
ror
call
inc
xor
lock
push
idiv
xor
pop
adc
jecxz
fwait
jno
mov
mov
jmp
enter
popf
sub
ret
and
dec
or
push
je
xchg
lods
aaa
je
push
mov
cmc
mov
inc
sbb
sub
jl
inc
or
mov
push
xor
mov
push
push
addr16
clc
mov
add
call
test
and
cwde
jbe
xlat
dec
loopne
out
and
fcomp
je
gs
add
icebp
add
xor
mov
dec
adc
mov
pop
imul
movs
jecxz
cli
xchg
mov
and
adc
cmps
popf
loopne
mov
mov
xor
clc
movs
pop
movs
xor
(bad)
bound
loop
pop
leave
inc
mov
je
ds
dec
cmp
int3
sbb
adc
std
mov
nop
and
cmp
(bad)
sub
inc
repz
cmc
cmps
jg
pop
sub
imul
mov
outs
scas
in
rcr
es
jle
xchg
repnz
or
jle
repz
retf
call
icebp
pop
mov
test
fs
inc
push
rcr
into
es
lods
xor
sbb
jge
enter
sub
bound
mov
add
jge
in
adc
inc
or
push
ret
mov
jle
inc
or
idiv
movs
add
lods
pause
push
enter
fmul
vfnmadd132pd
mov
pop
cmp
jg
mov
xlat
aas
popf
mov
push
faddp
lods
shl
ins
lods
(bad)
int3
ds
adc
push
ficom
xor
dec
push
loopne
xchg
jns
xor
out
rcr
fisttp
mov
xchg
(bad)
mov
stos
repnz
sti
add
mov
cwde
xchg
xor
and
fsubr
jbe
(bad)
inc
or
and
pop
call
jmp
aam
shl
pop
sub
adc
arpl
or
cmps
xchg
push
xchg
addr16
mov
xlat
mov
popa
iret
movs
cld
push
lock
mov
(bad)
fisttp
sub
mov
nop
fidiv
test
sbb
mov
cmps
sahf
mov
popa
jp
adc
(bad)
aam
imul
jnp
lods
loop
inc
xchg
push
jae
push
xor
jo
sub
cmps
xor
lea
mov
jnp
nop
jmp
leave
xchg
sbb
(bad)
outs
push
popa
mov
pushf
ret
mov
jbe
mov
xor
cmp
inc
fisub
imul
adc
or
(bad)
dec
mov
fld
mov
adc
hlt
adc
mov
in
push
in
mov
std
cmp
out
mov
enter
(bad)
cld
xor
xchg
mov
cs
cmps
push
inc
cmp
cmps
call
fstp
jl
pop
jp
adc
int
retf
or
mov
scas
mov
jmp
and
fld
cmp
mov
fbstp
fcom
ja
lahf
inc
cmc
cmps
loopne
pushf
lea
add
jle
fwait
aas
push
pop
cmp
fsubr
in
fwait
cdq
cdq
stos
shl
mov
aad
fwait
stc
(bad)
ins
test
pop
pop
jecxz
add
imul
in
loope
enter
pop
xor
or
or
call
xchg
pop
bound
out
dec
xlat
push
dec
(bad)
mov
jecxz
xor
pop
mov
test
pushf
push
loop
jo
lock
(bad)
sub
and
gs
jb
ret
sub
aaa
dec
aad
pop
sub
sti
mov
sub
jg
ret
mov
cmp
lea
cmps
add
cli
ins
mov
rcr
or
sbb
adc
fldcw
cmp
rcr
and
add
jnp
out
daa
(bad)
pop
sub
adc
pop
and
loopne
push
mov
lods
or
cmp
cmps
out
mov
inc
outs
xor
mov
mov
lahf
cli
loop
pop
jne
pop
push
jne
and
adc
xchg
retf
ins
jmp
repnz
push
sbb
and
jno
mov
xor
mov
or
cmp
mov
inc
inc
dec
cmp
out
dec
popf
test
push
js
test
test
mov
rol
mov
push
arpl
pop
enter
push
(bad)
jns
mov
jmp
pop
nop
inc
in
or
xor
sub
aaa
xchg
adc
jmp
ins
adc
je
jnp
mov
fmul
cmp
addr16
jge
sbb
add
rcl
cmc
xchg
sbb
ret
sub
and
jg
dec
das
push
jg
shl
jno
(bad)
popa
pop
addr16
cmp
mov
bound
jg
cmc
sti
mov
sbb
push
in
lds
jb
hlt
ficom
test
mov
xchg
mov
loop
test
sub
cmp
push
js
out
dec
aaa
std
(bad)
lock
pop
mov
scas
dec
xchg
jp
ror
in
cmp
sbb
aas
fldenv
cmp
inc
popa
rcl
inc
(bad)
lahf
inc
adc
out
push
out
mov
iret
fmul
adc
sub
mov
cmp
cmp
mov
push
ret
xchg
mov
sub
inc
je
mov
xor
ret
je
add
loop
mov
call
loopne
mov
(bad)
dec
pop
xor
mov
add
int
jp
or
mov
cdq
lds
xor
fnstcw
test
int
scas
daa
push
sub
cmp
jae
pushf
fcomi
mov
loop
mov
or
cmp
sub
mov
jo
inc
scas
sti
aas
cmp
stc
fiadd
popf
cli
mov
cmp
xor
cmp
mov
pop
sbb
addr16
cmp
shr
xor
je
push
nop
sti
std
imul
jmp
fisubr
es
scas
inc
popa
call
mov
aaa
movs
push
mov
jg
xor
loop
pop
not
xchg
lea
nop
int3
popf
pop
adc
push
ficomp
mov
cdq
pop
push
rcr
dec
mov
add
inc
inc
or
mov
cdq
or
out
cmp
cwde
push
xchg
mov
test
int3
cmps
or
mov
mov
cmp
retf
hlt
mov
push
ins
or
mov
sub
stc
add
and
mov
mov
ss
lahf
mov
(bad)
int3
shl
mov
lea
push
inc
mov
lock
leave
enter
and
repnz
icebp
nop
and
sbb
imul
push
push
jmp
pop
sub
inc
out
jl
lahf
js
(bad)
ror
cdq
push
je
mov
and
xor
or
or
or
and
push
push
inc
std
out
in
jl
lahf
aas
stos
inc
xor
sbb
repnz
push
scas
icebp
mov
loopne
lds
and
xchg
(bad)
xor
sbb
pop
fsub
sub
dec
enter
es
aam
pushf
iret
cmp
in
test
icebp
movs
mov
xchg
adc
push
(bad)
fcompp
add
lds
sub
add
mov
stos
jmp
push
out
dec
xor
inc
enter
inc
and
das
fist
data16
push
es
cmp
(bad)
inc
sar
mov
(bad)
fcom
test
inc
neg
jle
ret
repnz
inc
repz
ja
or
mov
loop
shl
(bad)
div
xor
sbb
sbb
pop
jne
into
fidiv
mov
(bad)
lahf
xchg
push
es
icebp
lahf
jle
fnstcw
in
cdq
jnp
mov
push
sbb
or
cld
jmp
stos
jb
out
scas
sub
jbe
xchg
std
dec
(bad)
(bad)
cld
movs
sar
ss
(bad)
test
mov
mov
sub
jbe
adc
xchg
cmp
add
and
adc
xchg
and
dec
inc
xchg
xchg
sahf
movs
stos
sahf
movs
add
mov
faddp
or
and
(bad)
mov
or
clc
push
arpl
icebp
loop
bound
mov
cmp
imul
jl
xchg
pop
push
push
aad
lods
movs
addr16
cmc
mov
ficomp
cmp
fild
adc
(bad)
push
jge
bound
out
xlat
mov
lods
fild
sub
pop
fadd
xchg
xchg
cs
neg
mov
and
arpl
ret
loop
data16
stos
sbb
sahf
mov
fisttp
ins
pop
js
or
loopne
out
pop
out
inc
(bad)
icebp
xor
fs
jecxz
xchg
mov
mov
sbb
cdq
dec
sti
shl
xchg
xchg
dec
sub
jp
mov
sahf
outs
cmp
mov
(bad)
pop
inc
inc
in
loope
or
rcl
loopne
popa
xor
dec
lods
mov
push
outs
stc
ret
xor
aad
mov
in
cmps
repz
inc
inc
mov
out
(bad)
stc
icebp
addr16
out
inc
pop
adc
cmp
daa
sbb
pop
leave
test
mov
in
push
(bad)
jmp
or
sbb
js
dec
mov
xor
inc
movs
jne
clc
sbb
fadd
neg
ds
sbb
adc
adc
push
pop
out
push
adc
popf
sbb
mov
jae
xor
(bad)
in
test
and
iret
and
mov
cmps
nop
xchg
out
mov
lds
mov
and
add
mov
pop
sahf
jecxz
jmp
fwait
in
out
in
push
into
xor
add
adc
sbb
outs
mov
pop
nop
rcl
inc
xchg
mov
movs
popa
sub
repz
sbb
dec
outs
xor
jae
cmp
aam
mov
push
and
xchg
bound
mov
xchg
loop
das
(bad)
into
dec
test
jnp
test
and
xor
mov
sbb
jno
call
cmp
inc
fsubr
mov
call
xor
xor
int3
adc
mov
ret
push
fisttp
xor
movs
xor
pop
ins
rol
push
dec
sar
(bad)
sbb
gs
repz
and
sar
xchg
pop
shl
push
sub
outs
adc
jae
push
inc
(bad)
pop
cdq
pushf
xchg
fchs
mov
out
jp
faddp
dec
cmp
sub
dec
cmp
ret
cmp
mov
mov
sbb
sbb
mov
jmp
dec
movs
sbb
push
xchg
call
daa
div
lds
pushf
rcr
pop
call
mov
dec
test
loope
add
(bad)
out
mov
xor
sbb
push
ja
fadd
int3
pop
call
sahf
adc
cmp
imul
lea
add
shl
lea
add
pop
xor
sbb
jmp
push
sti
int
jnp
push
ficom
imul
into
jno
push
xlat
inc
mov
cli
dec
sub
shl
lods
xor
mov
push
or
inc
lea
dec
mov
cld
cld
xor
outs
mov
or
mov
and
hlt
mov
fcomip
inc
and
adc
rcr
ror
or
jl
inc
fisub
mov
mov
rcl
jae
repnz
xchg
(bad)
push
xor
sub
xchg
nop
push
add
jb
mov
in
xor
int3
cmps
xchg
and
(bad)
push
pop
push
and
test
xor
xor
repnz
mov
int3
rdmsr
stos
int
pop
shl
add
adc
inc
push
fmulp
shl
xor
test
aaa
shl
inc
loope
frstor
cdq
data16
nop
std
ins
std
or
add
(bad)
mov
mov
inc
sub
push
pop
xor
jle
(bad)
addr16
mov
scas
dec
clc
adc
xor
test
rcr
and
inc
pop
shl
mov
jns
add
push
clc
out
movs
fisubr
inc
xor
push
dec
xchg
sbb
pop
mov
bnd
outs
in
and
mov
adc
mov
lods
or
mov
test
or
cmc
sahf
xchg
dec
(bad)
xchg
es
out
mov
bound
iret
aaa
xchg
mov
ds
fnstcw
popa
stos
arpl
es
jmp
push
sub
test
cwde
push
jmp
ret
push
rcl
cmp
mov
lea
cmp
aas
test
call
dec
jmp
aam
xchg
jnp
fsubr
and
lods
and
fstp
xchg
inc
repz
xlat
aaa
ret
cmp
dec
and
dec
rcl
repnz
mov
xchg
xchg
pop
in
cmps
fist
jmp
test
int3
frstor
aas
dec
pop
fwait
push
dec
sbb
pop
dec
scas
scas
mov
in
fmul
pushf
inc
adc
jg
mov
sahf
jp
sub
rcr
jb
pushf
cmp
and
and
enter
jno
scas
jmp
and
ret
push
sbb
js
es
xchg
inc
(bad)
push
xor
dec
ins
aaa
sbb
add
mov
popf
iret
push
pop
adc
pop
mov
and
in
sbb
rcl
jmp
jmp
dec
imul
push
add
repnz
aad
int3
jns
out
jo
add
pop
mov
pop
cdq
jle
enter
jp
jge
mov
pop
sbb
ss
(bad)
lea
inc
loop
inc
hlt
xchg
movs
(bad)
movs
ja
mov
stos
xchg
push
xchg
aaa
gs
fwait
idiv
xchg
movs
sub
je
add
push
aad
(bad)
fnsave
or
or
retf
into
xlat
cli
ds
(bad)
add
int
sub
pop
dec
mov
arpl
stos
test
cld
out
cmc
sbb
outs
loop
loope
(bad)
cmps
pop
pop
cmps
adc
lea
lea
mov
ins
jmp
es
cwde
jbe
mov
int
call
cmc
ins
push
sar
shr
retf
test
lea
gs
(bad)
mov
repz
cmp
jl
hlt
push
add
ja
adc
movs
scas
aam
ja
out
inc
add
mov
adc
xchg
add
cmp
cmp
and
das
pop
ret
push
scas
lock
js
sub
in
pop
test
xchg
shr
cmp
mov
adc
into
fist
mov
pusha
jge
pop
inc
lods
xchg
(bad)
sub
jae
or
lods
test
adc
shr
ins
xor
outs
push
outs
add
arpl
aas
loopne
or
xchg
adc
cmps
xor
stos
sbb
inc
cmp
dec
mov
inc
aas
or
xor
call
in
outs
pop
mov
hlt
pop
pushf
sub
push
dec
fwait
sub
sbb
ja
jae
fsub
push
lea
sub
(bad)
dec
ins
push
adc
pop
adc
ret
std
and
push
push
cmp
mov
xor
add
aam
test
cmp
sub
mov
mov
xchg
loope
loope
cmp
mov
inc
jne
mov
dec
sbb
frstor
cmp
mov
addr16
add
enter
retf
inc
cmps
push
cmps
xor
lds
(bad)
lods
add
jmp
jecxz
cmp
fild
popf
mov
fsub
xchg
xor
aas
push
mov
xlat
fidivr
push
sub
mov
inc
add
mov
mov
jle
arpl
mov
pop
mov
retf
add
push
in
mov
push
xchg
mov
daa
sub
test
mov
aas
add
ss
add
gs
mov
(bad)
cld
and
cmps
idiv
call
dec
les
(bad)
mov
popa
inc
cmp
cwde
jbe
mov
and
pop
jmp
mov
mov
mov
and
mov
fcom
pop
push
push
dec
xor
movs
jecxz
mul
loop
rcl
in
call
and
out
push
xor
ds
fwait
aaa
cmps
push
ja
test
xchg
mul
fisttp
ret
sar
inc
dec
fwait
adc
push
push
add
fidiv
push
les
and
leave
popa
push
aad
pop
aam
ret
mov
and
inc
bound
inc
mov
fwait
not
adc
dec
push
xchg
retf
jb
rol
pavgb
push
xlat
pusha
inc
outs
adc
gs
cwde
cmps
and
mov
aam
xor
jecxz
sbb
repnz
or
mov
mov
sbb
lahf
out
fistp
rcr
and
sti
ret
xchg
(bad)
outs
add
sar
push
push
es
pop
xor
imul
mov
and
push
jecxz
mov
ins
pop
mov
pop
and
mov
sbb
xchg
xchg
push
not
sub
rcl
call
cli
ja
sbb
leave
pop
ds
in
or
loope
xchg
push
add
pop
repnz
loope
pop
and
fist
cmp
mov
push
cmp
dec
inc
in
push
cmp
cdq
call
mov
inc
(bad)
mov
push
mov
inc
loopne
jns
scas
sbb
xchg
data16
fnclex
clc
add
add
sub
xor
daa
repz
call
add
sbb
pop
mov
out
pop
jno
data16
(bad)
mov
rol
jmp
fsubr
sbb
ds
mov
(bad)
mov
adc
mov
mov
mov
pusha
into
push
popa
mov
(bad)
jb
(bad)
aad
fisub
pushf
push
inc
pop
or
inc
add
fs
shl
idiv
pop
mov
arpl
dec
add
push
pop
int3
dec
popf
shr
or
push
push
pop
sub
rol
stos
inc
sub
fs
icebp
add
lds
popf
sub
and
aaa
xchg
outs
cs
inc
pop
call
xchg
xchg
mov
ds
inc
sub
sub
test
rcl
repz
pop
shr
jmp
fs
stc
out
ins
(bad)
int3
daa
aam
test
pop
inc
adc
dec
leave
jl
cs
into
jo
mov
xchg
fcomip
xlat
gs
test
fld1
and
pusha
inc
mov
out
push
cmc
addr16
jnp
mov
leave
jno
rcr
div
aaa
aad
ror
mov
stos
mov
fbstp
or
jmp
mov
and
out
or
mov
repz
cmp
lea
push
sbb
cs
lea
cwde
xor
frstor
inc
ret
cmp
or
pop
sbb
mov
cmp
mov
jb
inc
inc
enter
sub
sub
mov
clc
or
das
sub
or
mov
pop
test
sub
pop
lahf
add
xor
dec
add
test
pop
pop
xchg
lods
mov
adc
xor
cmp
mov
or
sbb
push
jmp
mov
js
cmp
mov
or
fsubr
sub
or
sub
and
repz
iret
mov
inc
jne
adc
adc
hlt
xchg
push
mov
js
pop
pop
inc
xchg
jecxz
mov
es
jae
aaa
mov
(bad)
xor
jbe
xor
xor
rcl
in
push
data16
push
leave
lods
ss
imul
pop
inc
call
sub
mov
aad
fisttp
div
inc
lahf
or
les
int3
mov
mov
std
and
dec
cmc
or
fwait
std
in
loop
jno
inc
(bad)
(bad)
mov
aam
jg
sbb
adc
xchg
mov
out
xchg
jge
fstp
add
ficomp
jl
push
xchg
shl
out
inc
ja
dec
lea
(bad)
mov
add
je
mov
jbe
cmp
push
ret
jmp
jb
mov
aas
xor
pop
jo
cmp
popf
xor
xlat
or
add
fstp
dec
mov
dec
dec
mov
mov
or
mov
jmp
lds
sahf
push
add
sub
push
push
push
xchg
es
jl
(bad)
xor
sub
jmp
es
js
or
jle
and
jmp
pushf
or
popf
stc
aad
and
cwde
add
test
mov
ins
mov
and
mov
loopne
push
cmps
jmp
data16
pop
add
pop
out
xor
sbb
adc
xor
xor
mov
mov
stc
nop
inc
cmp
int
and
mov
mov
push
mov
dec
popa
cmp
fcmovu
xlat
xchg
sbb
scas
sbb
adc
push
add
cdq
fild
push
scas
jle
out
loope
jbe
pop
sbb
pop
jg
cmp
cmp
and
lock
mov
and
xor
mov
pop
mov
out
jmp
pop
fistp
inc
loopne
xchg
pushf
sti
pop
fadd
push
sahf
mov
push
data16
pop
xchg
pop
mov
xchg
fisubr
cs
or
mov
sbb
mov
cmp
rcr
or
ss
lds
push
and
in
dec
jb
mov
gs
adc
or
(bad)
and
aas
aaa
mov
jne
xor
daa
and
cs
pop
mov
and
xor
cmp
pushf
ret
mov
xchg
sti
dec
clc
std
sbb
adc
and
sub
and
dec
and
daa
(bad)
adc
cmp
mov
in
adc
ror
and
xchg
add
test
movs
adc
xchg
mov
out
mov
imul
pop
jae
iret
sbb
test
xchg
sahf
pop
and
out
cmps
shl
jecxz
(bad)
cmp
in
cmps
sbb
mov
xchg
add
jbe
sbb
retf
mov
mov
push
(bad)
mov
mov
pop
fs
mov
test
mov
push
adc
dec
sti
dec
mov
jg
jg
adc
(bad)
cli
jae
(bad)
js
and
int3
mov
shl
cmp
mov
xor
pop
jbe
pop
mov
or
dec
out
sbb
inc
pop
mov
stos
mov
push
(bad)
popa
mov
fwait
mul
or
adc
xor
iret
das
out
adc
cli
dec
clc
fmul
out
test
cwde
xchg
loop
push
inc
push
cmp
jmp
mov
push
mov
pop
inc
cmps
sub
pop
pushf
repnz
fcmovnu
sbb
jmp
push
adc
mov
cmps
mov
aas
adc
loop
jne
mov
xchg
dec
push
and
stos
enter
xchg
sbb
es
xor
iret
and
movs
pop
cmps
in
call
jle
dec
xor
xchg
mov
jmp
cmps
push
cli
xor
add
dec
jl
push
mov
inc
push
adc
and
xchg
shl
test
dec
and
and
scas
jae
pop
and
cld
sahf
sahf
dec
adc
mov
fwait
mov
push
push
repnz
(bad)
lahf
pop
into
cmp
popf
repz
call
push
fild
sbb
neg
popf
pop
test
(bad)
xchg
jge
xor
repnz
or
(bad)
(bad)
pusha
icebp
or
(bad)
jb
ds
sub
repz
cwde
xor
mov
xchg
das
nop
push
fs
jge
mov
push
jb
test
(bad)
and
je
mov
mov
iret
sub
inc
outs
inc
jmp
cdq
jne
sub
cli
xchg
mov
repnz
jl
or
stc
xchg
nop
jg
leave
dec
clc
ja
stos
add
xchg
pop
pop
dec
cmp
mov
fbstp
rcr
add
push
rcl
and
(bad)
aad
xor
mov
sbb
pop
fisubr
or
rep
lock
adc
lock
adc
in
jl
add
mov
sbb
pop
repz
jg
xor
lods
fadd
lds
movs
jp
cdq
xchg
(bad)
aas
jnp
inc
nop
mov
xchg
inc
test
fcmovnu
sub
stos
cmp
int
mov
xor
in
push
push
outs
sbb
and
retf
fcom
cmp
mov
pusha
cwde
movs
sub
xor
loope
loope
xchg
or
addr16
push
loope
jb
pop
xor
xor
cmp
lods
and
data16
hlt
adc
mov
leave
mov
in
(bad)
data16
pop
movs
or
pop
sub
xchg
lds
mov
rcl
cli
js
icebp
imul
sbb
lods
xchg
mov
jp
jmp
pop
loopne
jbe
jnp
cmps
mul
adc
xor
adc
iret
cwde
sbb
push
pop
push
cld
add
fcmovnu
pop
(bad)
out
push
jecxz
sub
dec
outs
inc
jnp
dec
je
fdivr
call
adc
sub
pop
je
sbb
repz
jnp
mov
jmp
int3
icebp
mov
mov
sub
iret
inc
dec
cmc
les
cmp
jmp
sub
sbb
mov
mov
nop
out
jne
test
jns
jl
mov
push
push
and
mov
ret
xor
les
ret
jo
mov
lock
push
jbe
bound
dec
push
aad
cmc
pop
ret
movs
xchg
stos
outs
push
jmp
bound
fistp
add
mov
sub
fisub
xor
jge
sar
scas
cli
dec
call
add
sbb
mov
mov
push
sti
je
in
inc
(bad)
cdq
pop
xchg
ret
cwde
add
adc
xchg
sbb
xchg
rcr
out
enter
mov
dec
sahf
inc
sbb
fimul
sub
fld
push
arpl
enter
adc
jns
cdq
cmc
popf
imul
out
inc
cmp
mov
sub
add
pop
push
rcr
rol
out
ss
cwde
adc
push
repz
jo
stos
imul
inc
fsubr
pop
xor
add
pop
add
in
sub
cli
scas
push
mov
in
arpl
iret
jge
pusha
stos
shr
mov
or
(bad)
cmp
xor
icebp
dec
sub
add
lea
adc
ss
add
dec
les
pop
fnsave
rcl
or
scas
out
dec
mov
neg
mov
cmp
mov
or
xchg
mov
sbb
add
jae
sub
repz
loop
(bad)
(bad)
mov
jnp
fcom
jnp
sahf
cmp
pop
call
sbb
or
inc
call
addr16
xchg
push
fwait
lahf
icebp
and
idiv
ja
xchg
add
push
fimul
cmp
js
stos
pop
cmp
and
(bad)
cmp
ins
jle
cmp
push
daa
rol
push
or
or
shl
out
fwait
pop
mov
and
addr16
mov
xchg
arpl
shl
ror
fsub
rcr
xor
and
mov
dec
jne
adc
jmp
xor
jl
mov
cmps
xor
mov
pop
lods
xlat
adc
mov
jg
push
mov
int
mov
dec
repnz
pop
in
jp
mov
lea
int3
adc
add
std
add
out
add
pusha
outs
jge
adc
hlt
add
jl
push
js
jne
push
pop
add
in
mov
inc
add
push
sar
sbb
int3
fnstsw
xor
mov
mov
cmp
scas
jle
adc
mov
cwde
fisttp
adc
clc
ins
jp
inc
jp
mov
int3
ins
(bad)
sub
dec
fstp
out
pop
sti
mov
mov
ins
xchg
and
cmps
cmp
cmp
enter
mov
mov
inc
aad
push
inc
mov
fild
dec
jae
push
push
lock
cmp
repnz
sub
ja
call
mov
aaa
fs
fadd
and
neg
cmp
ja
push
push
scas
sbb
aaa
pop
inc
push
std
icebp
out
dec
add
bound
xor
cdq
dec
loopne
and
jo
das
dec
gs
pusha
push
inc
adc
lods
and
jl
and
xchg
fs
sahf
push
push
test
mov
int
aad
shl
ret
pushf
js
shl
dec
pusha
dec
outs
stc
mov
or
push
xchg
test
adc
cld
les
jmp
inc
cmp
inc
gs
dec
sub
xchg
iret
adc
jo
xor
(bad)
iret
xchg
jmp
xor
jmp
into
lods
test
addr16
je
mov
mov
inc
jle
ds
enter
popa
mov
mov
fidiv
fld
jae
jl
in
dec
les
lahf
lods
and
adc
or
shl
push
test
out
pop
adc
xor
push
jp
repnz
xor
in
inc
retf
inc
mov
out
mov
je
push
adc
movs
shl
pushf
les
push
cwde
push
cmp
add
fisub
(bad)
in
xchg
jbe
stos
call
push
pop
das
xor
jmp
fdivrp
add
loope
push
sbb
jnp
aad
xchg
inc
add
cmc
jge
sbb
(bad)
xor
mov
neg
dec
cdq
mov
icebp
in
lea
lahf
lahf
dec
mov
and
xchg
add
repnz
sar
add
mov
test
ins
jo
lock
xchg
aas
fistp
mov
in
jne
mov
retf
cmps
mov
inc
adc
out
popa
sbb
(bad)
lock
adc
idiv
repz
movs
call
out
cmp
xor
mov
rol
jnp
inc
arpl
push
or
jecxz
jmp
mov
loop
fidivr
jmp
mov
xor
les
fcom
daa
mov
dec
int3
stos
sahf
cmc
xor
inc
add
shl
ss
cmps
outs
or
pop
jbe
jno
inc
jmp
or
mov
ins
pop
or
addr16
jmp
mov
enter
scas
and
loop
mov
or
in
or
cmps
in
in
mov
inc
ins
test
imul
jno
dec
adc
sub
mov
mov
lahf
jnp
pushf
int3
mov
(bad)
repnz
push
movs
jecxz
(bad)
clc
xchg
loope
jecxz
and
bound
iret
inc
add
cmp
pop
pop
sahf
ret
adc
xchg
add
adc
sbb
cld
femms
in
jmp
retf
out
enter
(bad)
add
pop
xor
int
dec
dec
scas
xchg
cmp
jne
or
adc
jno
int3
call
leave
inc
jecxz
dec
jmp
rcl
xchg
nop
jne
pushf
(bad)
xchg
sub
ins
mov
retf
(bad)
jp
sbb
mov
lock
push
xor
or
sbb
sbb
lds
(bad)
rcr
sbb
aam
sub
sbb
cmp
dec
pop
inc
ins
xor
ja
bound
xor
nop
push
and
lahf
cdq
outs
(bad)
jecxz
pusha
mov
mov
jno
mov
popa
xchg
or
adc
int
jge
rcl
bound
fistp
dec
fnstcw
pop
xor
in
xor
daa
(bad)
cdq
or
mov
cdq
inc
out
pop
inc
cmp
lds
inc
outs
inc
push
xor
out
xor
iret
push
jle
pop
push
mov
sti
cwde
or
stc
mov
cs
add
je
test
out
jmp
ins
enter
and
cld
fiadd
fs
sti
xor
cmps
scas
es
xor
push
and
loop
(bad)
mov
call
mov
jb
jle
daa
jno
cmp
add
mov
push
stos
xor
adc
out
sbb
cmp
sub
pop
paddd
std
mov
test
in
jecxz
pop
jns
lds
js
adc
fcomp
les
push
lahf
rcl
out
dec
xchg
inc
xor
pop
stos
inc
adc
(bad)
pop
pop
add
addr16
adc
call
aam
repnz
mov
dec
bound
mov
or
fdivr
mov
out
add
inc
jmp
xor
mov
(bad)
fcmovb
jae
push
inc
rcr
ins
jbe
rol
daa
mov
add
sub
iret
loope
ins
hlt
adc
cmp
xchg
ror
loopne
dec
sbb
xor
cmp
push
(bad)
sub
jo
dec
dec
ins
sahf
xchg
xor
arpl
mov
std
ret
les
ins
xor
fmul
daa
cmp
fimul
mov
mov
out
cmp
add
shl
xchg
pop
lods
int
inc
das
pop
push
mov
or
int
shl
out
cdq
dec
sti
bnd
xchg
ins
inc
jmp
push
imul
and
jne
push
scas
pop
mov
jns
mov
adc
icebp
jmp
fld
test
xchg
dec
sbb
pusha
push
mov
cmp
xchg
fucom
movs
add
adc
cmc
mov
pop
test
shr
out
sbb
push
sub
popf
(bad)
das
pushf
or
int
rol
push
call
(bad)
push
cmc
jmp
xchg
mov
dec
int
outs
mov
push
stos
mov
and
jcxz
movs
add
lds
cmp
int
aad
push
fcomp
mov
mov
xchg
jbe
ret
shl
sbb
push
xchg
out
mov
mov
and
hlt
sar
jnp
adc
jae
sbb
cmp
mov
(bad)
cli
xor
add
(bad)
xchg
ds
inc
cld
cmp
adc
inc
mov
fstp
out
call
addr16
(bad)
ss
nop
bound
call
mov
out
mov
jne
test
sbb
cmp
inc
push
mov
mov
nop
mov
adc
pusha
pop
sbb
dec
or
pop
mov
push
add
mov
xchg
in
xlat
mov
xor
jae
into
nop
sbb
pushf
jae
retf
(bad)
fidiv
fs
aad
jb
jg
mov
or
mov
mov
push
pop
imul
sbb
loopne
adc
mov
int
mov
push
cmc
cmp
push
xchg
(bad)
lock
add
fnsave
xlat
ja
jge
cwde
gs
xchg
int3
xchg
jle
loope
(bad)
mov
repnz
sub
cdq
inc
push
in
pop
in
call
daa
not
pop
xchg
or
loope
or
icebp
xor
pop
jl
scas
scas
jo
add
test
jmp
sbb
cdq
sub
and
in
hlt
mov
lods
push
les
out
adc
pop
cwde
xor
enter
pop
xchg
inc
aad
inc
imul
scas
fisubr
cmp
cwde
mov
je
xor
or
scas
ja
mov
lea
jecxz
mov
or
fldenv
enter
out
push
idiv
cmps
loope
mov
test
push
inc
adc
cmps
iret
call
call
jnp
les
call
fsub
add
add
adc
pop
mov
mov
es
mov
cmps
lods
in
rcl
mov
inc
fistp
cmp
sbb
jne
and
sbb
iret
mov
pushf
fidiv
mov
xchg
mov
jmp
imul
inc
test
call
movs
js
xchg
and
ins
cmps
ret
aaa
cmp
push
into
and
jle
(bad)
jne
mov
ins
mov
cwde
sbb
sub
imul
dec
pushf
dec
cld
and
sub
dec
pop
sub
push
out
sbb
jl
stc
outs
bound
inc
nop
cmp
xchg
sbb
cli
mov
push
add
call
jmp
xchg
or
xchg
mov
mov
dec
jle
dec
mov
add
sbb
dec
mov
scas
inc
bound
retf
retf
jns
jne
mov
sti
loop
imul
pop
mov
pop
pusha
cwde
in
push
mov
mov
add
mov
ret
lods
call
push
fiadd
ds
mov
push
ret
pop
push
or
gs
test
(bad)
call
cwde
movs
adc
test
cli
mov
sub
into
shl
pop
sbb
sbb
add
adc
nop
pop
and
pop
ret
imul
ror
aaa
icebp
or
les
mov
xor
je
dec
dec
pop
mov
ins
pop
mov
lods
scas
jb
rcr
mov
push
adc
jb
(bad)
stos
mov
mov
icebp
stos
inc
lea
call
das
cli
sti
add
stos
(bad)
iret
pop
popa
sbb
mov
repnz
jo
dec
aad
jbe
mov
jns
jg
dec
cld
cwde
sahf
pop
loop
ret
pop
test
or
sub
in
mov
popa
lods
jmp
pop
dec
xor
test
rol
sub
cmp
stc
and
retf
dec
inc
lods
cmp
jno
sub
xor
sbb
push
call
sbb
pop
iret
jne
inc
jns
xchg
mov
adc
into
repz
sbb
dec
outs
mov
adc
adc
pop
lahf
mov
or
xor
ds
jg
mov
aad
lds
das
push
cmp
xchg
imul
movs
leave
cmp
leave
sub
or
adc
cmc
cmp
mov
dec
call
es
mov
cld
pop
jg
shl
inc
xchg
sar
jne
pusha
or
retf
out
ret
retf
adc
or
gs
mov
fstp
in
jmp
pop
gs
cld
cmp
call
daa
nop
rcl
in
push
je
jb
cld
sbb
ficomp
sbb
sbb
jmp
sub
add
in
sbb
test
lahf
dec
xor
adc
and
fstp
mul
mov
repz
stos
ds
mov
aam
xchg
mov
pushf
dec
in
stc
xchg
dec
arpl
pop
ret
int
loopne
imul
inc
(bad)
das
or
int
add
in
jmp
lods
inc
add
mov
fwait
push
pusha
gs
sahf
repnz
inc
bound
ret
fadd
cmps
ret
adc
jg
mov
add
sbb
push
cmps
enter
jne
dec
or
inc
push
mov
push
(bad)
loope
hlt
out
ret
xor
stos
mov
dec
xor
pop
icebp
jne
and
or
daa
inc
imul
pop
cmp
xchg
fcmovu
pusha
or
mov
fs
push
push
inc
cld
xchg
ret
retf
sahf
adc
jb
cmp
jl
movaps
sub
test
ss
sub
mov
push
mov
loope
ret
xchg
xor
mov
cmp
fild
xor
mov
loop
dec
movs
imul
mov
fs
adc
dec
mov
(bad)
adc
cmp
dec
in
fiadd
aad
cmp
outs
dec
xchg
xchg
add
aas
repz
inc
fistp
(bad)
push
outs
dec
mov
inc
test
jnp
mov
add
andps
aad
sti
add
or
jg
mov
add
xor
push
sbb
push
loope
pop
push
pushf
sub
lods
xor
inc
pusha
jns
js
cmp
cmp
xchg
rcl
sbb
jno
and
jg
hlt
pusha
out
and
bound
aam
(bad)
rcr
mov
mov
mov
mov
mov
sub
daa
imul
pop
mov
data16
mov
cwde
pop
and
adc
cmp
mov
xchg
ror
dec
jbe
loop
jne
jp
mov
push
outs
inc
cld
xchg
push
lods
shl
out
sar
push
push
mov
(bad)
jmp
add
inc
dec
into
mul
inc
out
cs
inc
jae
push
mov
xchg
in
loop
sar
repnz
jmp
fwait
xor
push
dec
push
cld
(bad)
dec
add
sub
sbb
nop
pusha
pop
push
shr
add
std
xchg
aad
sti
cmp
fucomi
or
jns
aad
dec
lea
dec
stos
adc
dec
add
xor
(bad)
in
adc
cwde
enter
inc
or
or
cmp
push
mov
mov
inc
push
mov
stos
xchg
ins
or
push
push
fcomp
mov
mov
push
dec
mov
add
enter
(bad)
jbe
sti
jno
dec
dec
xacquire
xchg
pop
popf
and
push
or
add
fs
jo
retf
mov
pushf
cmp
arpl
dec
xchg
dec
adc
sbb
ret
leave
es
(bad)
shl
adc
dec
mov
sub
adc
xchg
jge
jmp
out
add
and
out
xchg
push
dec
cwde
inc
add
add
pop
mov
das
push
inc
or
dec
imul
sti
aad
push
mov
adc
jmp
xor
inc
mov
shr
(bad)
add
ins
ds
lds
nop
lods
xchg
xor
out
dec
enter
fnstcw
shl
push
mov
ins
jno
xchg
sbb
sbb
add
jle
sub
(bad)
shl
dec
aas
les
aam
jo
xor
das
ss
sub
push
daa
clc
in
shr
xlat
sub
cmp
retf
ret
xor
scas
jmp
and
in
loope
pop
add
mov
push
adc
sbb
jae
daa
push
push
sbb
xchg
mov
leave
push
pop
xchg
js
stos
in
cmp
(bad)
lods
inc
jbe
jo
add
dec
(bad)
lods
stos
add
dec
int3
hlt
adc
fldcw
lahf
popa
lock
adc
stos
sbb
fcomip
in
imul
pop
inc
dec
inc
dec
mov
push
repz
or
nop
inc
aaa
mov
xor
adc
mov
sahf
xchg
xor
inc
je
(bad)
cmc
mov
mov
push
add
ins
mov
jo
push
repnz
aad
outs
inc
loop
add
cmp
into
iret
jne
fdiv
stos
mov
inc
rcl
shr
es
fld
mov
add
out
lods
jbe
das
retf
call
(bad)
test
sub
jge
dec
mov
lods
xchg
jbe
add
push
dec
enter
jns
stos
mov
ficom
dec
movs
jo
out
cmc
jl
or
mov
sbb
cmp
xchg
lea
(bad)
and
mov
ror
nop
xor
jle
jl
ins
iret
cli
adc
and
ret
mov
add
mov
pop
rcl
xchg
cmp
adc
push
jl
inc
pop
rol
mov
call
jp
xor
ss
adc
adc
xor
xchg
pop
daa
push
addr16
int
fdivr
adc
loop
mov
lods
xchg
mov
popf
adc
cld
pop
fadd
test
adc
push
push
mov
sub
mov
iret
xchg
push
mov
shr
xchg
xor
pop
cmp
fcomp
cmp
dec
shl
sub
popf
in
iret
mov
inc
leave
push
pop
or
in
pop
or
push
dec
fdiv
sar
sbb
aam
jle
cmp
outs
ret
xchg
push
add
iret
sbb
test
lods
dec
lahf
cmp
ds
out
leave
test
mov
rcl
mov
jle
lahf
call
stc
mov
repz
add
jg
sahf
aas
sub
xor
xchg
mov
imul
or
push
sbb
xchg
push
xchg
pop
inc
icebp
sub
adc
xchg
push
sub
xlat
in
sbb
pop
mov
xchg
(bad)
in
push
adc
mov
imul
fs
sar
or
popf
mov
add
test
test
inc
aam
rcr
mov
fsubr
dec
aam
mov
and
inc
test
cs
sti
pop
stos
pop
(bad)
out
pop
cmp
cmp
test
xchg
adc
push
inc
sub
rol
fnstenv
dec
mov
cs
cwde
xor
fs
in
jno
add
fbstp
and
mov
push
inc
jbe
inc
repnz
or
xchg
push
cmps
addr16
and
cmp
dec
ins
imul
scas
or
inc
std
jb
xchg
sub
jp
fild
pop
jg
mov
(bad)
aaa
pusha
popa
lods
ror
nop
add
pop
(bad)
mov
aas
es
jb
add
jmp
mov
cdq
jb
or
arpl
xchg
out
sub
jmp
dec
out
mov
mov
cwde
or
lea
cdq
jbe
cli
push
stos
mov
jecxz
and
xchg
inc
mov
stos
pop
shl
add
ret
dec
shl
push
and
push
or
cli
movs
repnz
jle
test
mov
add
(bad)
out
loop
inc
lahf
out
in
fadd
cli
cdq
xor
or
push
(bad)
or
inc
lods
sbb
adc
sahf
pop
gs
mov
sbb
push
jge
and
sti
xor
jge
mov
adc
adc
mov
mov
ja
lods
cmps
aam
mov
lds
cwde
cmps
cmc
out
mov
xchg
fisttp
sub
out
js
scas
lahf
cs
repnz
jmp
scas
add
leave
jns
mov
(bad)
stos
or
jbe
fdiv
dec
jmp
mov
es
mov
sbb
mov
mov
lea
jmp
nop
push
mov
jne
imul
cmp
and
mov
and
inc
push
xchg
std
pop
enter
das
pop
in
leave
mov
pop
fisttp
ficomp
push
(bad)
cmc
adc
iret
pop
movs
push
jnp
jge
outs
test
jmp
call
fisub
push
loopne
jecxz
stos
stc
enter
(bad)
iret
jb
add
pop
fbstp
loop
jno
(bad)
dec
inc
inc
dec
ret
xor
call
pop
xchg
mov
mov
inc
mov
adc
mov
cli
loop
mov
sahf
out
pop
inc
aad
test
scas
ins
call
mov
pop
dec
mov
adc
xor
test
xlat
cs
(bad)
lods
sub
mov
cmp
sub
mov
sub
aas
call
mov
movs
lods
scas
inc
or
mov
sub
jno
jmp
inc
iret
dec
dec
sar
mov
gs
mov
jae
dec
push
fnsave
js
and
outs
es
push
std
(bad)
repz
das
and
jl
lock
pushf
cmps
cmp
and
dec
fcomp
sub
adc
jb
add
movs
or
(bad)
shl
data16
pop
int3
xlat
ret
mov
movs
xor
and
shl
test
xchg
(bad)
out
lods
packuswb
stos
jg
idiv
mov
inc
jns
push
outs
std
add
sub
or
stos
mov
in
repnz
fimul
int
pop
mov
imul
retf
jge
mov
or
pop
ds
or
icebp
xor
inc
addr16
imul
loop
mov
xchg
dec
ss
mov
add
ins
or
cmp
mov
lds
jne
sbb
pop
test
pop
fsubr
push
inc
loope
ds
es
mov
push
jl
mov
mov
add
ror
neg
xchg
movs
(bad)
ja
int
pop
es
addr16
mov
or
push
push
jne
shl
scas
cmp
inc
sar
clc
mov
or
gs
test
loope
xchg
inc
add
cdq
inc
mov
adc
push
js
push
aaa
xor
lods
imul
lds
(bad)
jno
dec
outs
push
adc
lahf
icebp
(bad)
mov
and
add
jl
imul
das
xor
je
mov
fucomip
icebp
rcl
mov
xor
adc
stos
cmc
xor
push
les
retf
add
xor
loopne
sub
ja
fdivrp
cmp
hlt
pop
adc
inc
jne
adc
out
push
mov
ja
cdq
jge
jmp
or
inc
xchg
daa
add
aam
pop
pop
xor
jg
pop
rcr
xchg
les
jg
outs
and
push
inc
inc
gs
add
int3
sub
ins
and
into
jne
fdivr
xchg
rcl
inc
xchg
adc
out
stos
cmps
cmps
aaa
(bad)
fdiv
xchg
xchg
clc
inc
imul
aam
xchg
idiv
and
sub
arpl
fcmovnbe
imul
pop
call
xor
cmc
xchg
inc
out
xchg
idiv
daa
and
fs
jno
les
xchg
out
icebp
test
adc
mov
dec
lahf
into
mov
and
sub
adc
pop
cmp
jo
test
jge
imul
dec
ins
mov
ins
or
and
pop
and
sub
mov
inc
xchg
xchg
in
and
xchg
sti
nop
cmp
push
adc
nop
pop
cli
inc
mov
xor
ds
fcomp
aad
pop
or
sub
ja
jb
adc
push
or
xor
or
cmps
jae
xor
in
jle
pop
adc
mov
setge
stos
mov
in
out
in
push
mov
mov
cmp
test
int
dec
cs
push
jns
cmc
call
sub
xor
daa
inc
mov
icebp
xor
adc
fldenv
add
in
imul
jmp
cmp
ror
mov
pusha
shr
arpl
sbb
sub
int3
xchg
imul
cmp
cs
jo
ins
cmps
jmp
test
inc
sbb
fcmovbe
retf
inc
scas
fcmovnu
mov
(bad)
jnp
jo
pusha
lods
sub
adc
std
sbb
dec
cmp
imul
je
sar
sub
mov
adc
or
movs
imul
xor
push
inc
xchg
sub
pop
mov
nop
loopne
mov
dec
inc
mov
cmp
inc
lods
das
ins
xor
push
and
add
add
out
mov
xor
mov
cmc
inc
adc
or
call
and
mov
jnp
mov
into
js
into
imul
movs
out
adc
dec
pop
pushf
loope
dec
shl
repz
cwde
push
push
inc
loope
std
xor
fdiv
fsubr
inc
(bad)
fidivr
mov
mov
cmp
mov
rol
cld
js
out
push
jno
pop
xchg
aam
je
addr16
mov
cmp
das
imul
imul
dec
inc
fld
dec
push
or
stos
xor
test
mov
retf
stos
das
pop
xchg
pop
test
addr16
lea
sub
dec
xchg
shl
add
jmp
lods
and
aaa
movs
shl
push
dec
ret
jb
shl
jbe
sbb
in
in
in
loope
add
fneni(8087
aam
xor
add
test
(bad)
sahf
loope
repz
je
jno
sti
jae
call
jp
push
fbld
and
repnz
inc
or
xchg
pusha
push
call
or
cwde
cmp
fisubr
add
movs
rcl
movs
ficomp
add
sbb
jle
mov
lea
adc
mov
push
inc
in
add
enter
jnp
xchg
int3
mov
lahf
inc
(bad)
aaa
pop
pop
into
dec
inc
sub
iret
inc
cmps
dec
inc
cmp
push
add
cmp
sar
sub
leave
xor
mov
outs
xor
iret
pop
test
inc
ror
push
or
rcr
movs
and
pop
jbe
js
fcomi
mov
jb
jmp
adc
jp
leave
mov
js
in
sahf
imul
cmc
lahf
lahf
fidivr
(bad)
push
inc
sub
xchg
pop
xchg
(bad)
and
dec
repnz
dec
mov
push
mov
arpl
xor
clc
mov
dec
pop
pop
add
mov
xlat
xchg
xor
shl
bound
dec
mov
out
jbe
adc
out
mov
add
xchg
out
cmps
cli
inc
shl
les
(bad)
retf
mov
dec
jb
dec
xchg
push
push
std
push
dec
sub
dec
repz
push
dec
sbb
dec
mov
and
dec
xor
and
add
dec
ds
dec
sub
lea
les
mov
adc
aad
out
add
jns
push
and
sbb
pop
ins
stos
fsincos
ins
ret
stos
das
in
mov
add
outs
xor
loopne
loop
xchg
imul
xor
pop
add
push
fsub
out
xchg
xor
pop
jg
in
pop
xchg
lock
arpl
addr16
adc
push
fsubr
in
ja
pop
mov
movs
or
pop
lods
xchg
in
jp
dec
mov
or
cdq
adc
push
inc
mov
jecxz
fdiv
inc
push
rol
xchg
or
jb
pop
aad
push
adc
push
mov
test
push
mov
pop
aad
js
sbb
sub
(bad)
movs
mov
fwait
lods
cmp
pusha
jecxz
arpl
popf
jmp
add
popa
imul
stos
mov
(bad)
dec
inc
mov
ins
mov
xchg
push
mov
dec
int3
xchg
call
shr
daa
push
fsubr
mov
movs
xor
(bad)
mov
or
fnstcw
das
mov
push
dec
sub
inc
fadd
jns
stos
dec
sbb
das
test
xor
pop
jmp
mov
jl
bound
lods
test
sub
(bad)
sub
mov
pop
pusha
pusha
inc
dec
stc
dec
xchg
xchg
jnp
xchg
out
pop
adc
icebp
adc
xchg
sbb
xor
leave
adc
inc
cmps
icebp
push
into
fs
jg
outs
xor
mov
dec
inc
movs
out
xchg
xor
cmc
add
(bad)
add
mov
mov
retfw
xchg
ss
cmp
mov
mov
cmp
xadd
inc
test
xor
xor
xchg
jne
mov
ins
cmp
add
movs
ret
adc
sub
jg
xor
cmp
cdq
add
xchg
mov
imul
cmps
cs
jge
cdq
pop
lea
fst
dec
jo
(bad)
retf
lods
pop
add
lods
pop
pushf
push
jno
fcomp
sahf
sub
or
lea
aaa
stos
xchg
pop
sbb
push
fs
inc
xchg
mov
retf
xor
ins
call
push
aam
adc
add
cmc
shl
lds
cli
int
outs
xchg
sbb
push
adc
(bad)
lds
push
popa
pop
adc
std
xchg
jl
loopne
mov
jnp
xchg
mov
xchg
out
xor
xchg
mov
call
outs
mov
mov
add
pop
int
adc
(bad)
cmp
mov
jo
inc
push
(bad)
sbb
out
pusha
pop
stc
sysret
mov
aaa
lds
dec
leave
out
push
scas
lahf
lahf
mov
adc
jge
xor
xchg
mov
sbb
xor
and
xchg
ins
cdq
inc
test
sub
dec
xchg
lea
jg
rcl
xchg
add
retf
nop
and
mov
sub
inc
mov
fdiv
mov
lods
jmp
push
fldenv
loopne
xchg
xor
and
pop
xor
and
cmp
inc
cmp
or
jle
mov
xchg
xor
lods
sub
rol
add
popf
xchg
pop
and
je
inc
inc
xchg
xchg
out
sbb
adc
out
bound
lock
jp
add
push
gs
lds
test
test
(bad)
push
xchg
jmp
lds
dec
in
add
xorps
cmps
push
jmp
fsub
mov
sbb
outs
(bad)
in
push
sbb
jp
xchg
in
ret
bound
mov
or
sub
pop
push
neg
jg
arpl
idiv
lods
xor
ins
adc
jno
popa
mov
adc
xor
add
add
push
pop
rcr
push
stos
shr
add
call
and
push
adc
repz
jbe
mov
ror
mov
push
outs
jl
jno
arpl
call
mov
aad
(bad)
xchg
aad
adc
imul
aam
in
xor
pop
mov
mov
movs
aas
and
ja
loopne
ja
xlat
lea
xchg
cmp
inc
(bad)
add
jle
mov
mov
aam
push
scas
fild
inc
arpl
loop
imul
repnz
idiv
hlt
mov
stos
fdivr
jnp
push
pusha
retf
adc
pop
xor
or
inc
dec
adc
sub
in
cmps
cmps
scas
mov
xchg
mov
xor
sbb
and
mov
push
les
mov
jb
adc
sbb
addr16
aam
pop
push
adc
sbb
add
sbb
cmp
stos
jns
sub
outs
dec
ins
andps
int3
add
int3
add
(bad)
push
cmps
pop
je
inc
lods
jmp
cld
jmp
fisubr
iret
popa
daa
push
mov
stc
addr16
push
cmc
outs
stos
aam
ror
mov
push
or
or
test
xchg
mov
mov
mov
aam
in
daa
cmps
xchg
xlat
or
rcl
enter
dec
pop
in
cli
mul
cli
dec
push
pop
loope
mov
xor
inc
or
cmp
xor
sub
sahf
push
mov
jmp
fiadd
xor
ret
std
and
or
pop
add
xchg
sub
pop
pop
adc
adc
and
enter
aas
mov
mov
inc
mov
out
xor
or
fwait
ret
cld
int3
and
rcr
inc
loop
mov
xor
mov
sub
push
jg
mov
inc
sahf
loopne
and
cmp
call
shl
inc
xchg
hlt
pop
sub
test
xor
add
dec
icebp
scas
aad
lahf
cmp
cmps
adc
xchg
adc
test
call
hlt
mov
mov
lea
pop
sbb
ja
mov
or
ss
mov
jne
out
mov
xor
stos
adc
(bad)
adc
aas
and
bound
jecxz
or
or
sbb
retf
and
out
sub
mov
and
call
stos
test
imul
adc
fdivr
xor
xor
cmps
or
pop
das
xor
les
aad
sub
pop
aas
fdivr
pop
sub
dec
sbb
std
mov
or
dec
push
mov
cs
fst
(bad)
cld
mov
push
mov
les
or
jecxz
adc
out
mov
cli
add
jb
add
cli
pop
sbb
icebp
aad
es
pop
call
mov
jmp
cld
int
cmp
xchg
mov
std
jl
daa
out
xchg
pop
jb
jb
inc
or
add
cmp
cmc
std
neg
lock
mov
inc
push
lock
jecxz
fnstsw
inc
ds
mov
mov
ins
xchg
cmp
mov
xchg
std
xchg
and
mov
xchg
add
mov
lods
xchg
(bad)
cmp
jmp
mov
xlat
outs
icebp
adc
in
cli
dec
push
ret
push
cmps
pop
cdq
into
(bad)
adc
in
fstp
jb
mov
add
mov
sar
dec
adc
dec
jns
push
sub
fwait
jbe
shr
ja
xor
je
or
push
and
repz
inc
xchg
xor
mov
sub
push
pop
outs
call
push
xchg
repz
sub
movs
aad
ins
mov
mov
add
fs
addr16
push
std
cs
jae
push
sub
retf
sub
mov
setnp
enter
xchg
xchg
mov
arpl
fidiv
rcr
or
xchg
mov
sub
jne
leave
loop
jl
aas
dec
add
imul
ins
std
mov
cmp
mov
pop
ins
cmps
push
mov
xchg
ss
mov
lea
inc
xor
idiv
inc
imul
xor
into
add
xchg
cmp
rcr
pop
sub
gs
and
sbb
or
dec
adc
xor
pop
sbb
ja
data16
retf
cmp
mov
and
scas
push
jnp
mov
mov
xor
add
pop
sar
imul
jb
out
nop
fidiv
jg
xor
daa
dec
sbb
std
mov
cmps
xchg
clc
mov
dec
icebp
sbb
mov
jl
loopne
ret
mov
shr
fdivr
xor
ja
xchg
mov
daa
(bad)
sahf
adc
push
sbb
jge
adc
sub
pop
imul
mov
lahf
push
jmp
push
daa
inc
or
es
pop
gs
jg
push
ins
xchg
sti
imul
cmp
sbb
ins
addr16
pop
clc
or
xchg
and
xchg
cwde
add
adc
mov
sub
fs
cmps
ret
pop
movs
(bad)
cmp
scas
jle
pop
cdq
repz
shl
mov
cmps
push
dec
in
in
adc
add
add
mov
daa
(bad)
das
ins
std
push
addr16
pop
pusha
mov
jmp
faddp
ror
lods
dec
fimul
adc
sub
push
cmp
dec
add
push
mov
pushf
repz
aam
xlat
fwait
test
(bad)
mov
xlat
adc
jae
pop
repnz
add
ja
sbb
and
add
out
pop
xor
xor
hlt
cdq
adc
jle
sahf
nop
cmp
fimul
add
(bad)
push
cmp
sub
add
les
and
jnp
in
add
ins
mov
out
mov
lds
aaa
sbb
rol
aaa
or
adc
stos
pop
lods
push
and
shr
in
test
paddb
repnz
fwait
into
inc
icebp
lds
mov
fs
ret
mov
jae
into
ins
mov
sbb
gs
and
pop
cdq
out
mov
inc
cwde
jnp
mov
adc
retf
dec
pusha
adc
mov
ins
pop
xchg
mov
std
xor
sbb
dec
movs
xchg
data16
dec
mov
jno
mov
lds
mov
rol
push
pop
adc
mov
mov
push
movs
dec
adc
or
add
nop
(bad)
scas
and
fwait
push
push
in
leave
mov
(bad)
outs
pop
mov
loop
sub
push
jp
dec
jne
repnz
fstp
push
out
repnz
xor
es
sahf
xor
cli
into
lds
inc
aas
or
shr
xchg
mov
mov
xchg
xchg
sti
jle
(bad)
pop
pop
jns
push
stos
inc
jbe
pop
pop
mov
pushf
sti
cdq
sbb
add
retf
rcl
mov
push
cld
(bad)
cmp
mov
jae
mov
xchg
js
xchg
adc
xchg
xchg
push
add
xor
mov
sbb
xchg
enter
repnz
nop
or
int3
daa
push
dec
mov
adc
cwde
add
fnsave
xchg
push
xor
sub
in
dec
aad
imul
adc
or
push
dec
stc
xchg
movs
iret
inc
push
xor
rep
daa
adc
jne
scas
cmps
iret
dec
out
xor
ret
ror
imul
test
stos
inc
xchg
and
ins
jo
adc
sbb
test
int3
cmp
icebp
dec
popf
stos
push
sbb
into
inc
stos
fwait
mov
add
mov
repnz
lods
cmp
cld
cmp
add
aas
stc
jno
aas
mov
ror
mov
xchg
jne
inc
mov
jmp
xchg
aam
pop
arpl
int
cmp
xchg
pusha
dec
imul
adc
fcmovne
data16
fisubr
in
test
sbb
ror
xor
and
leave
fwait
lods
push
push
ins
fwait
push
pusha
xchg
jne
sbb
pop
cmp
jne
dec
cmp
push
idiv
mov
pop
xchg
xchg
inc
lods
jo
sahf
pop
cmp
jne
mov
and
push
xor
daa
nop
fisttp
int3
and
xchg
mov
mov
lods
inc
sbb
cmp
mov
(bad)
jl
rol
bound
clc
fnstcw
ror
mov
mov
and
in
jns
fnstcw
cdq
jne
das
loop
ins
loope
xchg
popf
lahf
(bad)
stc
into
(bad)
adc
lods
aam
enter
mov
or
inc
jae
lahf
sub
push
push
js
idiv
lock
div
push
int
scas
mov
sub
jae
xor
inc
movs
jmp
fsubr
and
lods
enter
fs
jmp
movs
ja
jecxz
jmp
in
mov
and
mov
jge
imul
cld
stos
pop
rol
xchg
dec
daa
dec
loope
sub
in
pushf
ins
jge
in
mov
jge
ret
jle
pop
out
dec
(bad)
out
daa
arpl
pop
xlat
or
aam
or
ret
pop
jmp
cmp
and
jge
cli
and
std
add
fdivr
jmp
lods
outs
pop
ficomp
bound
(bad)
push
in
inc
in
(bad)
mov
loopne
jo
mov
xchg
repnz
das
in
rcr
test
mov
xchg
jmp
scas
xchg
out
shl
je
mov
jp
mov
pop
fsubr
add
jae
xchg
shr
and
or
jne
mov
scas
fs
lods
sub
std
inc
sub
cmc
ins
shr
das
mov
data16
dec
xchg
(bad)
inc
lock
dec
enter
or
aaa
push
loop
enter
lods
dec
fs
loop
mov
(bad)
mov
or
mov
aaa
stos
frstor
les
mov
sub
sbb
sub
neg
pop
aam
pop
rcr
loop
lock
and
pop
arpl
mov
stos
fstp
aaa
clc
sar
jge
sar
push
xchg
xchg
sbb
popf
or
fsub
mov
shl
int
fmul
inc
mov
cmps
mov
inc
jae
sub
dec
adc
and
stos
shl
push
pushf
icebp
mov
xchg
arpl
push
mov
sbb
mov
xor
sbb
push
inc
dec
sub
adc
push
retf
out
popa
out
nop
scas
adc
outs
fldln2
xchg
lods
push
sbb
jge
clc
fwait
fs
or
dec
inc
xchg
cmps
int3
xchg
in
push
bound
or
lea
retf
jp
sahf
fadd
sbb
jle
add
dec
arpl
inc
adc
sub
push
mov
sahf
addr16
(bad)
stos
xlat
enter
adc
cmp
jle
movs
dec
sub
jp
pop
scas
sub
sub
ret
sub
mov
cdq
mov
mov
lock
add
pop
jg
fwait
pop
(bad)
and
lahf
sbb
add
jmp
or
fist
mov
ds
fwait
mov
test
jl
ss
push
(bad)
and
mov
dec
aaa
stos
jmp
mov
jmp
fst
retf
and
jge
and
(bad)
out
stos
mov
xchg
ja
js
js
jb
test
lea
jnp
add
xchg
out
xor
mov
inc
mov
mov
pushf
ret
fstp
cld
push
(bad)
mov
xchg
retf
pop
out
in
mov
dec
jp
shr
inc
ror
mov
pop
sbb
sub
mov
sub
psubsw
push
pop
xor
xor
jle
shl
icebp
aam
sbb
test
adc
ret
xchg
imul
jle
or
xchg
aad
inc
(bad)
xor
sub
gs
cld
fcom
jo
cmc
loope
sub
jmp
mov
dec
sbb
or
push
in
sbb
shl
fimul
(bad)
test
xchg
jmp
mov
fwait
xchg
int3
jmp
rcr
ins
mov
cmp
xor
adc
ins
das
dec
adc
push
out
inc
(bad)
stc
jns
cdq
cwde
cmp
test
mov
pop
add
xor
scas
call
int3
push
cmps
adc
mul
ss
inc
xlat
mov
lds
inc
push
inc
jmp
sbb
aad
jle
mov
outs
bound
push
out
data16
add
fisubr
mov
jp
xchg
inc
(bad)
rcl
dec
mov
and
out
mov
add
adc
add
sbb
xor
xchg
inc
dec
hlt
inc
ficom
test
sbb
ret
mov
push
xchg
movs
out
cmc
cmp
push
or
dec
cmp
pop
add
jmp
cmp
push
inc
imul
dec
jne
jmp
sub
icebp
pop
ret
(bad)
(bad)
jge
mov
hlt
xchg
out
mov
sbb
mov
out
jbe
add
pop
fisubr
inc
jecxz
ror
test
adc
or
arpl
dec
mov
cmp
mov
lock
fcomp
je
pop
das
iret
jmp
mov
pushf
enter
nop
jnp
fdivrp
cmps
adc
lahf
inc
sub
(bad)
lock
sbb
imul
into
jne
scas
add
out
cmp
call
sub
mov
(bad)
dec
or
jmp
fist
mov
jle
into
in
xor
pop
xor
repz
mov
pushw
jae
imul
cmp
jae
sbb
jns
fisubr
xor
fucomi
bound
jg
inc
ja
jnp
dec
add
mov
mov
lahf
(bad)
in
cmps
sbb
shl
add
ret
out
out
or
fiadd
xor
adc
push
xor
and
test
gs
out
test
in
pop
jle
inc
imul
mov
es
adc
jae
jecxz
pop
jge
xchg
lahf
sbb
mov
(bad)
sub
retf
int3
pop
nop
mov
jg
adc
xchg
ds
adc
pop
addr16
iret
les
dec
call
jnp
aas
ret
xor
mov
xchg
out
pop
adc
mov
add
dec
xchg
add
hlt
jo
pop
jno
popf
mov
mov
push
out
xor
jno
loop
or
add
jnp
iret
inc
dec
leave
jmp
add
cmp
sub
sub
mov
or
jne
and
push
aaa
push
(bad)
jbe
stos
loop
adc
in
fstp
out
xor
outs
pop
retf
repnz
fist
inc
cs
and
jmp
dec
jp
shr
cmp
add
adc
(bad)
push
test
push
jmp
in
jnp
hlt
lock
mov
mov
hlt
test
adc
(bad)
dec
dec
aam
and
pop
sbb
xor
stos
push
dec
adc
cmp
pop
xchg
push
ss
aas
nop
icebp
sub
jecxz
sbb
ins
xchg
jge
sbb
imul
icebp
mov
push
pop
mov
mov
add
ins
add
out
cmps
pop
push
sbb
out
inc
lock
les
mov
(bad)
mov
daa
clc
ret
cmps
xchg
ror
in
cld
fwait
cmc
cmps
lods
jnp
jo
inc
es
pop
ds
bound
pop
inc
cmp
jno
push
in
test
xchg
adc
mov
or
outs
or
dec
repnz
push
xor
ret
xor
call
lds
xchg
not
mov
sahf
pop
push
cli
lods
adc
mov
jmp
mov
or
pop
push
loop
inc
cmps
xchg
bound
hlt
out
cmps
inc
mov
xchg
out
test
dec
and
pop
lods
jno
lahf
push
jo
sub
addr16
fnstsw
mov
jne
mov
sub
ds
fild
movs
inc
loopne
inc
mov
cmc
(bad)
jae
jmp
mov
inc
cmps
sbb
hlt
icebp
aad
adc
sub
or
(bad)
mov
fistp
pop
xchg
je
pop
adc
xor
(bad)
movs
xchg
pop
sbb
push
clc
push
aad
mov
call
imul
dec
xor
pop
or
pop
loop
addr16
lock
addr16
add
scas
loopne
or
inc
cwde
sbb
jmp
sahf
stos
lea
test
xchg
mov
ins
push
std
(bad)
call
out
pop
in
(bad)
xchg
lea
pop
and
sub
in
loope
fimul
shr
adc
jmp
inc
push
xchg
cmp
sti
cmp
test
shl
sub
sub
rcl
mov
out
je
push
mov
std
inc
fwait
push
lea
icebp
adc
push
hlt
outs
cmp
mov
mov
repz
xchg
inc
cmp
fucompp
jnp
xor
movs
add
cmp
into
ins
push
sub
dec
sub
ins
xor
(bad)
dec
(bad)
fmul
and
icebp
fwait
xchg
jae
ins
clc
enter
push
retf
call
mov
cs
cmp
repz
icebp
dec
imul
pushf
lods
hlt
sbb
loope
mov
js
out
hlt
loopne
out
js
test
adc
ret
or
iret
jmp
sar
test
dec
imul
mov
jne
sbb
cwde
sub
lea
inc
inc
pop
aam
sub
cdq
retf
addr16
out
sahf
(bad)
fisubr
mul
lahf
out
or
imul
in
ficomp
adc
dec
push
es
(bad)
into
mov
inc
xchg
test
enter
fs
xchg
dec
sub
push
mov
ret
jle
hlt
sbb
sub
dec
enter
dec
fld
jo
fdivr
or
pushf
scas
aas
loopne
xor
ret
(bad)
enter
mov
jnp
mov
int3
imul
shl
sar
or
add
repnz
aaa
mov
xlat
xchg
and
mov
test
jmp
push
pop
or
pop
and
sub
pop
sbb
nop
xlat
sbb
jb
lds
xchg
int
push
xor
movs
add
call
pop
mov
aam
(bad)
dec
push
xchg
cmp
cld
es
jno
inc
add
in
or
in
jno
inc
lock
push
jo
sahf
mov
adc
mov
outs
cmp
pop
xchg
add
daa
jge
jb
add
xchg
pop
pop
push
movs
inc
push
add
out
fs
add
push
aas
mov
std
arpl
jmp
das
addr16
jnp
ret
div
test
and
(bad)
sti
cmps
xor
lock
sub
or
cmp
cld
jge
add
jl
jbe
cmp
clc
mov
ja
dec
stos
out
loop
push
aas
mov
mov
xor
sub
fwait
dec
xchg
push
cmp
sub
shl
cli
dec
aam
cwde
push
sahf
ja
shl
outs
xchg
inc
call
cdq
dec
jne
sub
bound
cld
jmp
js
push
and
or
das
jae
push
sti
mov
mov
dec
jne
ror
cmp
pop
pop
fwait
scas
pop
and
mov
nop
or
push
xor
cwde
imul
stos
sbb
outs
mov
mov
test
xchg
jecxz
outs
xchg
(bad)
movs
jl
fs
(bad)
bound
int3
dec
popa
mul
cmp
fimul
add
inc
jnp
pop
jae
iret
xchg
mov
call
mov
je
push
cmps
pop
vcmpss
jp
lea
jmp
test
js
imul
imul
icebp
add
dec
pop
jbe
js
aas
cmp
inc
jmp
jecxz
adc
pop
dec
test
or
gs
mov
call
push
int3
adc
xchg
lds
jmp
lods
daa
sbb
xchg
stc
xor
daa
dec
fcomp
cmps
dec
lea
mov
lds
imul
push
pop
mov
stc
mov
mov
cmp
sahf
cdq
and
xor
mov
sub
shl
xor
jbe
or
jl
cmp
or
fsubr
mov
pop
mov
arpl
dec
loop
aas
jno
or
mov
or
pushf
les
(bad)
mov
or
push
dec
xor
lahf
test
call
mov
and
jle
pop
retf
(bad)
fstp
icebp
push
ret
adc
xor
dec
and
jno
adc
mov
jp
movs
xor
fs
xchg
mov
mov
mov
int3
jge
mov
and
and
dec
cs
retf
test
mov
pop
fisttp
push
xchg
add
or
cvtdq2ps
shr
sub
pop
pop
fiadd
cmp
stos
(bad)
pop
adc
mov
data16
rcl
outs
inc
scas
dec
fistp
cmp
loopne
cmc
xchg
sub
ret
test
mov
(bad)
cmp
pop
cmp
fistp
push
imul
mov
mov
sbb
pop
mov
popf
retf
stos
xchg
outs
loop
pop
add
mov
popa
jo
std
mov
adc
fwait
retf
lfs
pusha
popa
add
clc
outs
into
lods
vminsd
sbb
xchg
out
jns
retf
sbb
pushf
sbb
jne
jns
mov
loope
inc
pop
push
xor
or
in
lods
mov
and
mov
mov
jmp
arpl
inc
sub
(bad)
fbstp
jp
ret
sbb
loope
xor
fwait
push
jmp
pop
gs
push
js
jbe
rcl
out
fsubr
cmp
push
cld
sahf
xor
cmc
push
ret
push
mov
push
dec
xor
inc
adc
jle
dec
dec
out
cmp
cmp
jo
ins
cli
mov
shl
mov
inc
jl
push
imul
dec
cmp
dec
and
gs
ja
fcomp
inc
ins
outs
sub
ret
add
imul
push
data16
mov
push
or
pop
pushf
push
ret
mov
push
hlt
lods
cmps
mov
jg
iret
imul
repnz
push
ror
xchg
in
rcl
sbb
push
push
pop
lods
in
addr16
jge
ja
or
cmp
inc
lods
sbb
retf
inc
xlat
sbb
daa
fs
xchg
mov
pop
call
mov
lahf
xor
cmp
lods
xchg
idiv
aad
jae
add
out
mov
(bad)
int
sub
stc
sub
push
jmp
mov
out
cmp
loop
xchg
jl
dec
jo
icebp
adc
fadd
dec
cs
aam
outs
in
imul
stos
inc
add
jl
pop
mov
cdq
push
jp
mov
jmp
not
or
movs
bound
push
fs
div
cli
in
mov
mov
rol
fwait
ins
shr
(bad)
fsub
cmp
and
pop
retf
sahf
xchg
clc
sbb
cld
cmp
sbb
cs
pop
popf
mov
movs
inc
xchg
xchg
and
js
ins
cmp
movs
sahf
jl
outs
aas
inc
enter
repnz
mov
or
into
jbe
repnz
fcom
sub
int
mov
pop
jns
cmp
pop
pop
retf
xchg
hlt
aad
out
pop
sbb
cmps
lods
mov
cmp
mov
popf
add
xor
es
addr16
fwait
mov
test
out
jmp
mov
sub
or
jle
mov
retf
sub
add
xor
rcl
mov
test
adc
inc
int
movs
jno
clc
pop
inc
stc
aaa
out
mov
retf
cmps
pushf
fbstp
fisttp
je
sar
push
cmps
outs
and
idiv
std
add
push
push
rcl
retf
push
retf
div
mov
test
out
sbb
out
int3
dec
rcr
push
pop
and
fcmovne
mov
aad
jno
jle
enter
sub
dec
mov
jle
call
add
and
pop
ins
mov
(bad)
mov
inc
add
icebp
mov
sbb
ret
cmp
sahf
adc
test
sbb
movs
sbb
adc
ja
ret
test
imul
fstp
mov
jbe
xor
fisubr
jns
adc
jp
cmp
mov
arpl
cmp
sbb
daa
stc
mov
sub
push
imul
lahf
lea
test
je
loop
in
dec
outs
jmp
shr
test
ror
mov
rcr
sbb
test
mov
cmc
or
and
lds
ins
sahf
imul
movs
popf
pop
jo
pop
add
mov
jae
inc
pop
mov
jbe
bound
sub
cli
jp
popf
div
pushw
pop
enter
adc
gs
push
js
xchg
xchg
mov
nop
push
stos
mov
pushf
jo
xchg
cdq
adc
pop
xor
fucomip
fistp
adc
add
mov
adc
adc
scas
pop
or
sub
mov
daa
and
xor
sub
adc
or
or
ins
xchg
jo
out
inc
mov
sbb
rcr
mov
sbb
sbb
xchg
gs
mov
jle
jnp
leave
aad
stc
test
in
cmp
jge
(bad)
jmp
xchg
bound
and
push
ja
scas
cwde
mov
add
pop
cmp
dec
scas
dec
pop
and
adc
sbb
add
jb
sub
sbb
cmp
neg
(bad)
ror
jle
pop
rcr
jne
rcl
or
mov
das
mov
cmp
fucomi
mov
jl
loope
cmp
jecxz
or
repz
and
es
retf
mov
inc
loop
push
cmp
outs
bound
xchg
add
dec
fsub
stos
(bad)
push
and
div
cli
sbb
inc
xor
popa
movs
pop
push
jecxz
add
push
push
int3
cmp
lock
push
mov
pushf
jl
adc
fwait
inc
jnp
xchg
fidiv
loope
scas
shl
outs
(bad)
call
mov
loopne
fs
lods
adc
sub
in
push
dec
data16
js
and
das
daa
(bad)
xchg
inc
aas
pop
mov
jp
dec
(bad)
inc
in
cwde
jno
mov
jns
mov
jne
bound
xor
ror
push
mov
popf
sbb
pop
mov
ret
aad
sbb
aaa
das
inc
imul
out
push
popa
and
cmp
je
push
mov
sti
mov
mov
ins
sahf
lods
sbb
out
out
test
mov
mov
stc
(bad)
dec
xchg
pop
cmp
sbb
mov
hlt
fdivr
sbb
inc
movs
retf
retf
fadd
mov
mov
jnp
arpl
push
push
jae
xchg
jp
test
pcmpeqw
ins
jne
mov
xlat
cdq
sbb
sub
jecxz
inc
aaa
mov
adc
cdq
scas
sbb
in
enter
nop
gs
cmp
scas
xor
ret
jb
mov
inc
dec
icebp
lds
out
cmp
div
imul
mov
es
add
sub
call
jmp
int
push
jge
jmp
popf
jns
ret
mov
dec
test
fdivr
xchg
popa
pop
add
mov
xchg
add
inc
mov
adc
pop
mov
(bad)
mov
xchg
jecxz
dec
add
or
cmc
mov
push
xchg
cld
or
and
jns
(bad)
lock
push
and
pop
jecxz
adc
mov
mov
sbb
movs
pop
lods
fstp
jns
enter
leave
retf
or
lods
or
jns
push
stos
cmc
hlt
mov
sub
not
cwde
inc
mov
adc
sbb
jmp
mov
sub
mov
mov
imul
aam
add
mov
xchg
sub
push
sbb
cmps
dec
(bad)
sar
mov
mov
loope
inc
jmp
sub
add
mov
cmc
add
push
cwde
adc
jge
cmps
adc
cmp
dec
add
test
cmp
push
cmp
cmps
xor
adc
rcr
or
pop
pop
scas
iret
jmp
dec
jb
call
fwait
js
loopne
fsubr
jp
dec
stos
mov
or
fsubrp
xchg
ret
popa
js
clc
pop
out
outs
jg
fsub
daa
dec
mov
and
int
fisubr
inc
inc
shr
imul
dec
outs
cmps
in
cmp
mov
mov
mov
adc
inc
sar
retf
jae
push
mov
fsub
movs
rol
push
adc
jbe
cmp
mov
mov
cmp
jle
fdiv
or
adc
mov
cwde
test
(bad)
in
aad
push
pop
hlt
pop
popf
mov
mov
gs
js
or
popa
mov
mov
pop
(bad)
inc
xchg
xchg
push
and
and
or
out
enter
je
out
dec
call
pop
mov
add
pop
adc
out
jle
es
rcr
scas
rcl
hlt
sahf
sub
push
nop
dec
sahf
add
pop
push
push
fild
test
ins
push
imul
out
and
push
outs
jmp
xchg
nop
in
pushf
jmp
ret
cmp
xor
daa
add
(bad)
jle
sti
pop
pop
push
stos
hlt
fs
push
retf
push
cmp
jbe
inc
mov
(bad)
jo
cld
jmp
dec
xor
lea
mov
jle
inc
(bad)
aaa
pop
adc
push
pusha
push
rol
push
jnp
ds
mul
ror
ficom
add
mov
cmp
jnp
retf
mov
es
(bad)
pop
les
or
ret
jl
xchg
mov
in
and
ficomp
es
enter
cmp
or
bound
or
leave
mov
cdq
or
leave
int3
mov
jmp
lock
sub
mov
inc
xchg
mov
jb
mov
jl
pop
aam
sbb
data16
cmp
push
sbb
adc
js
(bad)
mov
ror
pop
outs
pop
test
pop
xchg
pop
mov
icebp
mov
jp
cmc
dec
fnstcw
idiv
loop
pop
jbe
stos
add
mov
jmp
clc
pop
mov
cmp
dec
pop
sahf
call
jle
push
mov
cmc
mov
fsub
and
dec
scas
pop
(bad)
aam
push
cmp
out
sub
adc
pop
add
iret
push
aam
cmps
hlt
jo
shl
cli
or
push
push
sbb
arpl
test
mov
nop
into
es
sub
xor
mov
movs
mov
idiv
jae
pop
call
fild
cmp
int
mov
je
xor
rcr
xor
sub
dec
dec
es
retf
daa
mov
lods
jno
loop
cs
xor
stc
cwde
mov
pop
call
into
(bad)
pushf
jl
mov
imul
jae
mov
push
cmc
lea
int3
inc
mov
sar
and
push
jecxz
lock
scas
fadd
ss
adc
mov
sbb
js
add
mov
les
pop
pop
aam
mov
ss
psubw
mov
cdq
or
fcom
mov
(bad)
fbstp
sbb
lock
and
cmp
jge
iret
or
stos
fdivrp
push
mov
movs
pop
cmp
ins
jmp
mov
cmps
retf
push
or
inc
mov
push
push
icebp
xor
mov
xor
or
xlat
inc
outs
fwait
adc
cmc
jns
and
fiadd
add
int3
(bad)
add
outs
push
add
pop
sbb
add
xlat
push
jge
mov
ins
cli
push
xchg
dec
jmp
or
lods
rcr
add
xchg
stos
xor
push
cmps
push
cmps
push
xor
jecxz
inc
adc
pop
cdq
fxch
cmp
cld
jmp
shl
inc
push
dec
pop
cmps
pop
or
(bad)
cli
test
xor
mov
cmp
out
call
imul
inc
bound
mov
xchg
xor
not
sti
out
rcr
les
fisub
test
and
jne
in
or
mov
dec
fidivr
cmp
shl
jmp
push
add
in
(bad)
movs
lea
cli
test
call
inc
mov
dec
and
(bad)
sub
xchg
dec
adc
das
pushf
inc
xchg
test
jo
stos
retf
rcl
and
lock
pop
mov
add
(bad)
lahf
jle
and
cmp
mov
or
adc
mov
cli
or
retf
out
inc
push
movs
xlat
cmp
mov
xor
adc
ja
nop
test
rcl
std
pop
test
xchg
inc
les
(bad)
mov
aas
in
loope
mov
xlat
sbb
lahf
inc
ins
(bad)
lock
in
aaa
mov
mov
(bad)
and
xchg
int3
je
call
hlt
hlt
mov
repz
mov
(bad)
mov
js
xchg
jp
daa
xor
scas
push
push
push
mov
push
jecxz
into
mov
inc
push
popf
nop
popf
xchg
out
mov
mov
cmp
enter
jmp
stc
sub
cmps
mov
mov
push
lods
pop
test
cmp
test
mov
loopne
cmp
xor
xchg
rcr
jl
push
and
push
cmps
push
(bad)
out
cmp
cmp
adc
xor
jns
jnp
mov
xchg
dec
and
ins
dec
stos
retf
mov
ret
pop
inc
dec
lods
xchg
loopne
pxor
aas
dec
mov
sbb
ror
imul
stc
jo
or
jecxz
fdivr
int3
push
retf
mov
add
cmps
outs
xchg
mov
jne
adc
inc
sub
xchg
leave
cld
jnp
iret
mov
xor
add
jmp
mov
cld
add
jb
mov
fs
sbb
mov
bound
pop
mov
dec
dec
inc
jge
cdq
sti
je
xlat
xor
push
and
jmp
movs
fild
or
xchg
push
cld
es
aam
retf
cmps
mov
cdq
xor
shl
sti
std
adc
neg
pop
cmps
aas
xor
clc
out
mov
or
scas
dec
test
fld
jne
lods
adc
pop
mov
xchg
int
repnz
pop
sar
pop
mov
adc
clc
test
xor
mov
xor
sbb
mov
lahf
test
sbb
ds
add
iret
jmp
dec
inc
jecxz
xor
or
lock
cmp
ficomp
setg
mov
cdq
mov
data16
lahf
mov
cmp
test
stos
mov
or
movs
and
leave
jge
adc
cmp
sbb
imul
push
mov
aas
and
xchg
js
dec
out
call
mov
add
push
popf
mov
and
xor
pop
jno
je
retf
out
cld
mov
lods
push
ss
adc
loopne
sbb
out
test
cld
sbb
xor
fcomp
pop
push
jae
push
dec
test
adc
xchg
jmp
out
xchg
jl
or
and
inc
mov
cld
test
push
push
and
popa
pop
sbb
pop
push
push
outs
test
dec
jb
jo
and
inc
add
adc
cs
gs
or
(bad)
jns
xor
loope
jae
or
adc
dec
cdq
mov
jp
adc
adc
scas
rep
pop
fdiv
shr
ins
(bad)
bnd
popa
cmp
xor
aam
xchg
push
cmp
into
dec
test
jae
rcl
in
test
gs
bound
fdivr
stos
pop
pop
mov
jge
not
jnp
or
xor
sbb
inc
pop
cdq
push
out
out
test
or
add
mov
loop
clc
sub
jecxz
sbb
(bad)
sbb
xchg
ss
data16
mov
in
pop
js
sbb
dec
pop
sbb
jge
mov
push
repz
mov
rol
jne
mov
loop
fisubr
call
mov
pop
ins
(bad)
lock
and
mov
or
lds
ror
outs
lahf
xor
mov
ins
enter
je
jo
mov
stos
or
cld
sub
sub
jl
pop
mov
call
iret
mov
sbb
imul
repnz
xor
js
jno
add
hlt
xchg
push
mov
dec
or
push
out
mov
add
lahf
cmp
mov
icebp
loope
repz
popa
lahf
icebp
add
fs
push
sbb
mov
repz
call
mov
fld
dec
daa
inc
int
pop
sbb
inc
inc
jmp
push
mov
jmp
sub
push
stos
xchg
mov
in
(bad)
outs
or
add
int
fwait
rcpps
and
pusha
jge
cmp
push
ds
scas
add
mov
jbe
sbb
addr16
into
hlt
test
std
loopne
movs
cmc
int
fwait
mov
cwde
pop
scas
sbb
jns
mov
or
fst
fcmovb
out
jnp
jp
push
dec
mov
adc
ror
movsx
lea
pop
xor
hlt
dec
push
repz
adc
jns
lods
jb
dec
pop
loope
or
int3
nop
dec
call
in
push
mov
mov
inc
push
and
adc
call
push
fnstcw
mov
sbb
jnp
and
sub
mov
cmp
cld
or
push
mov
add
cmp
fldenv
pushf
es
mov
sbb
shr
stc
pop
dec
jmp
aas
fdivr
cmp
test
(bad)
ds
xchg
inc
mov
jb
lods
in
jle
xor
push
mov
sub
xor
fcmovnb
out
jp
inc
jae
ffree
jb
rol
dec
cmp
inc
pop
push
cmp
mov
and
mov
jmp
and
test
hlt
sbb
inc
(bad)
cmp
mov
out
xchg
into
mov
aaa
mov
repnz
(bad)
outs
hlt
out
push
inc
add
cmps
jp
xor
mov
js
test
std
aas
and
aad
sti
mov
sti
mov
shl
cdq
mov
test
pop
pop
mov
inc
jne
mov
adc
fucomip
das
sub
pop
push
sbb
jae
adc
adc
add
push
jns
test
mov
test
test
mov
iret
jg
ds
xchg
mov
dec
mov
movs
pop
mov
ins
xchg
mov
mov
push
sbb
pop
loope
(bad)
mov
mov
sub
aas
mov
in
js
pop
xor
imul
push
sub
loope
imul
bnd
int3
int3
outs
lds
xchg
(bad)
adc
adc
cmps
les
pop
push
es
jo
(bad)
rcl
sbb
push
or
call
aam
cdq
in
inc
cwde
les
div
and
in
or
jae
cmp
and
push
out
adc
in
xor
jmp
call
pop
aad
sbb
scas
sbb
sub
mov
fcomp
ins
adc
and
pop
mov
rcl
int
pusha
lea
call
dec
shr
mov
and
cmps
jne
mov
neg
inc
fidiv
out
or
hlt
aad
adc
xor
dec
in
adc
mov
mov
xchg
and
cmp
mov
pandn
add
push
(bad)
jae
jno
cli
pop
ret
lods
(bad)
pushf
push
mov
and
mov
es
jmp
jnp
dec
mov
adc
in
out
rcr
cdq
clc
repz
inc
push
test
out
loopne
sbb
adc
or
aad
adc
fs
cmp
mov
outs
sbb
add
jp
cld
cwde
add
pushf
out
pop
and
pop
dec
jp
jp
or
in
mov
iret
(bad)
dec
mov
jmp
mov
jbe
(bad)
push
jmp
mov
adc
mov
ins
ss
loop
dec
push
retf
ins
add
inc
mov
cmp
mov
or
mov
scas
in
inc
int3
aas
je
aaa
fbstp
loope
inc
cmc
enter
retf
cmp
cld
pop
repnz
faddp
push
pop
mov
xchg
lock
jp
int
ret
mov
lods
cmp
mov
out
add
jbe
repz
lea
push
loope
xor
cmp
aam
lahf
sub
mov
push
fst
lahf
cli
out
(bad)
movs
fst
js
mov
mov
pop
xchg
mov
dec
jmp
or
mov
or
pop
cmc
in
dec
int3
cwde
mov
and
mov
outs
add
mov
ret
das
push
mov
ins
pop
int
shl
ret
xor
xor
jnp
push
iret
aam
push
mov
inc
mov
out
sbb
mov
xor
cmp
pop
cmp
in
(bad)
pop
ret
js
pop
mov
jb
pop
cmp
jle
cld
in
mov
stos
adc
cmp
jmp
cmp
(bad)
pop
rol
jge
fsubr
in
imul
jp
sbb
xchg
and
cdq
addr16
add
cmp
cmp
mov
in
mov
ins
std
int3
mov
dec
sub
sub
cdq
(bad)
stos
mov
aas
and
cmp
or
mov
mov
push
aad
out
push
and
mov
jne
mov
pop
pop
or
or
ja
sub
pop
dec
cmp
xor
(bad)
jae
cmps
popa
and
push
cs
cmp
xchg
std
mov
ja
test
add
sahf
xchg
outs
jns
fsubr
or
jg
fwait
cli
sub
lds
push
jl
adc
lock
xor
push
jmp
jbe
add
fs
dec
and
sbb
cmp
pop
sbb
popf
and
mov
or
rcl
retf
mov
arpl
je
not
or
cld
bound
out
jge
sbb
or
fnstsw
sti
ret
mov
retf
sbb
cmp
pop
sbb
mov
adc
push
and
pop
dec
sub
ret
or
jmp
cs
jno
push
mov
ficomp
and
push
push
test
xor
or
push
or
dec
xor
adc
pushf
mov
cld
gs
jmp
cld
int3
add
lods
nop
test
inc
mov
mov
lods
movs
(bad)
inc
test
rcl
in
pop
sbb
jl
push
mov
sbb
sbb
jp
pop
mov
or
sub
jns
xchg
fimul
push
pop
mov
dec
push
xor
movs
test
sub
and
cld
pop
retf
(bad)
mov
mov
stos
sub
hlt
push
ins
movs
std
gs
inc
dec
daa
mov
lods
test
jbe
and
fmul
dec
dec
out
mov
rcr
mov
push
jnp
idiv
mov
sub
(bad)
and
test
es
mov
add
loope
cmp
push
shl
dec
scas
xchg
inc
popa
pop
frstor
xchg
in
mov
dec
das
int3
dec
jo
mov
mov
cli
imul
sbb
adc
xor
jecxz
push
jle
xchg
popa
xor
test
inc
in
lods
or
rol
xchg
and
out
cmc
push
push
test
into
adc
ds
mov
xor
or
mov
sub
lock
in
in
lock
repz
fdivr
inc
cwde
mov
add
xor
in
cmp
jne
sub
jns
cmp
sbb
lock
adc
push
cs
retf
mov
data16
push
adc
pop
sbb
shr
inc
repz
(bad)
lods
inc
or
scas
jge
cmp
cdq
sub
psubusb
sbb
or
pop
add
xchg
mov
rcl
push
dec
xor
fimul
out
lods
pop
repz
mov
dec
inc
outs
repnz
ret
sbb
test
stc
fist
or
enter
xor
ja
mov
pop
adc
mov
movs
fs
mov
adc
rol
imul
stos
sahf
push
push
iret
mov
and
xchg
out
dec
repz
jle
xchg
mov
pop
icebp
or
dec
es
xlat
leave
pop
test
fstp
jp
hlt
test
push
aad
or
int
(bad)
jecxz
push
sub
add
fcomp
cmp
lods
call
fild
aad
ret
cld
mov
movs
cmp
imul
inc
add
xor
out
mov
push
mov
pop
cmps
rcr
loopne
jmp
fdiv
mov
and
stc
mov
inc
fld
(bad)
sti
addr16
mov
je
into
jp
pop
inc
lock
dec
push
aas
xor
call
cmc
mov
(bad)
hlt
and
fs
dec
icebp
mov
dec
mov
outs
test
mov
aam
push
rsqrtps
loopne
jae
dec
call
inc
lock
stos
jnp
ret
push
fisttp
out
cld
(bad)
aas
cmps
addr16
xor
rcl
mov
push
cmps
and
fdivr
cmc
(bad)
mov
ss
pop
je
sub
repz
in
daa
push
mov
pop
xor
shl
mov
or
cmc
or
jmp
mov
lock
inc
adc
mov
pusha
test
lds
cmp
jle
(bad)
pop
mov
and
std
xchg
inc
and
bound
inc
call
dec
and
hlt
ret
and
aam
fcmovne
rcr
inc
stos
dec
hlt
cld
jecxz
pop
mov
xor
loope
pop
aas
push
jle
outs
add
(bad)
in
xchg
out
retf
dec
outs
hlt
daa
out
push
jbe
xchg
ret
and
(bad)
fdivrp
aas
adc
cmp
or
adc
mov
sbb
lock
dec
lock
aam
pop
ret
xor
pop
ins
sub
add
jle
in
inc
pop
je
xor
imul
imul
mov
push
mov
popa
mov
dec
gs
hlt
push
retf
push
paddusw
outs
out
(bad)
mov
sub
cmp
add
jb
add
or
pop
pop
xchg
inc
cmp
sub
rol
and
je
(bad)
dec
imul
scas
jg
inc
popf
pop
and
outs
icebp
xchg
ret
or
scas
pop
and
pop
shl
xor
push
push
xlat
retf
push
add
in
int
idiv
ds
push
jne
jmp
fimul
mov
mov
mov
sub
pop
test
test
(bad)
mov
js
cli
jecxz
adc
sbb
sar
out
mov
jp
loopne
imul
(bad)
or
xor
mov
fsubp
xlat
jo
ins
mov
popa
in
add
push
mov
inc
leave
(bad)
and
aad
loope
test
dec
imul
mov
jecxz
mov
mov
pslld
std
aaa
scas
out
into
hlt
and
mov
adc
js
call
or
fcomp
iret
(bad)
adc
mov
pop
and
mov
mov
fsubr
arpl
pop
repz
mov
ins
fcom
pop
dec
push
cmp
push
pop
std
mov
or
push
mov
dec
dec
jge
dec
add
inc
xchg
sub
xor
xchg
pop
cdq
pop
popa
or
pop
push
cmc
in
iret
pop
cmps
fucomip
push
dec
rol
rcl
jb
jge
gs
(bad)
mov
sub
lods
sub
xchg
loopne
push
push
bound
ins
xchg
mov
dec
fnstenv
dec
dec
sbb
adc
add
les
imul
cs
ret
sbb
clc
stos
outs
add
cmps
push
pop
pop
icebp
loopne
shl
add
sub
lds
pop
pop
scas
enter
test
mov
loop
(bad)
xchg
mul
sbb
adc
mov
imul
pop
test
neg
fst
jp
adc
stos
add
outs
mov
mov
or
inc
loope
sub
inc
adc
mov
lods
mov
mov
push
retf
pop
sahf
push
pop
call
lea
pop
mov
adc
dec
mov
out
or
cli
fcom
dec
push
sub
adc
inc
pop
pop
xlat
or
ror
inc
cmp
cwde
bound
ret
mov
into
push
jge
sub
sbb
das
pusha
(bad)
jb
in
js
fwait
mov
cmp
int
(bad)
movs
adc
mov
cmps
outs
(bad)
cmp
sbb
xchg
add
retf
retf
out
mov
mov
or
sti
enter
cmp
lahf
push
mov
cmps
mov
xchg
xor
nop
(bad)
push
add
imul
pop
adc
lods
sub
in
jb
aam
mov
inc
rcl
pop
xchg
dec
mov
cdq
in
imul
inc
pop
add
pop
scas
ds
ds
pusha
xor
mov
lods
sti
(bad)
cmp
cdq
mov
in
aas
(bad)
int3
js
jb
stc
mov
xor
inc
ins
retf
shr
push
sub
jo
sahf
fs
jg
out
fbstp
add
xchg
xor
movlps
jmp
mov
outs
cmps
mov
mov
jle
xchg
loopne
stos
or
jns
mov
sub
push
mov
icebp
(bad)
push
push
out
(bad)
jmp
add
xor
adc
push
mov
stc
sahf
push
fcmove
xor
mov
mov
push
aam
push
das
retf
jg
jno
ror
sub
cmps
out
leave
jo
test
jnp
push
mov
add
retf
ror
jo
jo
jp
lods
lea
shr
or
imul
fldcw
mov
adc
cmp
movs
sbb
repz
fisub
or
cwde
out
adc
sar
cmp
sbb
cmp
mov
in
leave
inc
fld
out
rol
dec
stos
aam
cwde
out
(bad)
and
(bad)
mov
std
test
sbb
shl
(bad)
bound
cs
add
mov
xchg
test
fistp
popf
popf
retf
rcr
mov
mov
sbb
sahf
inc
pop
into
push
movs
(bad)
cmp
(bad)
pusha
cmp
daa
scas
sbb
sbb
pop
xchg
icebp
jae
mov
cmp
fstp
pop
inc
xor
shl
icebp
pushf
in
sbb
pop
jns
sub
sub
sahf
dec
pushf
jae
ja
mov
adc
mov
and
and
stos
push
faddp
sub
sbb
fsubr
(bad)
sub
lds
lods
sahf
pop
cmc
add
cdq
addr16
pusha
add
les
xor
sahf
mov
icebp
jp
xchg
fistp
leave
(bad)
stos
sub
push
mov
fidivr
(bad)
lods
stos
cld
jge
mov
or
fist
dec
in
stos
loope
inc
iret
das
mov
js
pusha
cli
jno
pop
add
add
mov
xchg
push
mov
xor
inc
in
cmp
adc
jmp
pop
mov
push
cli
fcomp
mov
jns
ror
popf
sbb
aaa
call
ds
mov
test
(bad)
jae
stos
add
jbe
rcr
jp
mov
leave
repz
retf
dec
lods
mov
sbb
repz
jp
daa
push
jns
arpl
push
mov
mov
sub
lods
xchg
rol
mov
pop
repz
aam
cwde
sbb
sub
std
stos
in
std
int3
push
cs
popa
push
rol
adc
mov
sub
aam
pushf
and
inc
cmc
push
fwait
int
adc
dec
out
cmp
retf
fistp
add
pop
add
test
jns
mov
adc
cmp
arpl
aaa
dec
fisttp
in
pop
jnp
and
pop
xor
adc
rcl
and
dec
inc
jmp
vmwrite
or
mov
mov
jmp
in
jp
fbld
sub
cmp
test
or
xchg
sbb
lods
sahf
push
push
hlt
xor
fucomi
add
inc
not
fwait
scas
xor
scas
push
sti
add
mov
cmp
push
xchg
xchg
pusha
and
movs
pop
cmp
add
fstp
cmp
push
inc
push
inc
cwde
dec
inc
dec
sbb
sub
or
xor
or
dec
jg
ss
adc
je
xchg
mov
daa
add
call
push
or
outs
and
(bad)
mov
pusha
aas
mov
xlat
inc
push
push
and
push
cmp
fiadd
dec
add
sbb
out
frstor
arpl
mov
(bad)
sbb
stos
cmps
leavew
fs
fld
adc
(bad)
cmps
pop
ss
retf
popf
xchg
and
jb
ret
(bad)
aad
cmps
outs
jle
xchg
ins
xchg
jns
fldlg2
out
jmp
int
bound
nop
pop
jb
pusha
xlat
std
iret
ret
out
sub
jge
ss
mov
retf
or
int
dec
xor
call
cs
push
or
push
pushf
jmp
pusha
mov
mov
cmps
das
mov
int3
retf
mov
sub
out
rol
xchg
not
cli
imul
inc
pop
xchg
fmul
xlat
aas
mov
push
fcmovbe
cmp
xor
inc
xor
(bad)
mov
ds
mov
xor
push
jl
add
stos
mov
mov
lahf
mov
push
push
push
repnz
enter
jecxz
and
mov
add
cmp
mov
scas
data16
xor
xor
repz
adc
xor
fstp
minps
fstp
xchg
out
inc
xor
loope
out
arpl
sub
jo
sbb
test
pop
jae
cmp
jl
aam
jmp
push
fistp
pushf
push
aad
adc
fcmovne
xchg
fdivr
push
push
daa
add
movs
ins
or
stc
inc
(bad)
aad
pop
pop
ror
fwait
sbb
movs
adc
nop
pop
scas
xchg
lea
test
in
sub
cmps
pop
cmp
push
aaa
pop
neg
cmps
add
retf
sub
add
out
push
imul
mov
sahf
mov
and
xlat
push
mov
das
cld
iret
cmp
leave
imul
add
or
shl
pop
or
sbb
stos
add
movs
pop
dec
dec
sub
mov
mov
sti
xchg
mov
jbe
ja
movs
in
hlt
enter
fcom
jo
mov
and
xchg
xor
push
cmc
mov
or
and
push
repnz
mov
stc
push
or
aas
add
arpl
jg
xor
ficom
jns
outs
mov
pop
push
dec
js
cli
jae
fs
jo
cmp
pmulhuw
pop
pop
xor
sahf
stc
in
ds
dec
fcomp
fsub
xchg
inc
inc
mov
call
retf
das
or
ret
cmp
xlat
lds
cmp
xchg
dec
stos
mov
or
adc
cwde
pushf
sbb
ret
movs
fnstcw
in
shl
movs
pushf
inc
sbb
jmp
jo
and
cmps
mov
xlat
hlt
dec
dec
pop
pop
icebp
pop
or
ins
fimul
fs
dec
push
jle
jno
cwde
push
pop
(bad)
xor
inc
sar
or
test
cmps
jnp
xor
sti
sbb
pop
sbb
mov
out
push
add
jl
repz
das
push
jne
pop
cmc
outs
int
out
fadd
jmp
dec
(bad)
jno
loop
fdiv
or
in
das
rcr
mov
fs
ret
ins
test
(bad)
fidiv
ror
add
push
fidiv
mov
shl
stos
sub
cdq
call
lock
ds
ds
mov
inc
inc
sbb
adc
or
mov
xor
add
retf
popa
jg
jb
data16
sti
mov
xor
or
mov
push
ret
mov
cdq
enter
outs
ss
sub
fisubr
sbb
pop
sbb
xor
aam
mov
nop
adc
jl
aaa
clc
pop
jb
int
xchg
and
scas
mov
pop
fldcw
inc
sub
in
(bad)
mov
out
outs
pop
sbb
cli
sbb
(bad)
xchg
inc
ss
adc
sub
pop
cmp
movs
test
das
enter
fcomip
scas
cld
sbb
mov
cmp
pushf
dec
call
sbb
(bad)
(bad)
mov
pop
inc
sub
pop
minps
cmp
mov
mov
mov
call
aad
or
inc
mov
dec
mov
test
shl
add
pop
jo
push
and
inc
mov
shr
adc
xor
test
and
mov
repz
ins
(bad)
push
mov
fdiv
xchg
ret
push
and
jne
int3
shr
icebp
nop
push
cli
icebp
jns
dec
nop
mov
in
jp
mov
add
inc
ret
in
bound
xor
out
bound
test
out
retf
or
jge
mov
xchg
xor
cmp
xor
dec
lock
inc
dec
jnp
add
std
push
int3
mov
inc
jno
mov
xor
mov
xor
or
arpl
cmp
xchg
stos
popa
mov
and
mov
xor
lods
sub
adc
mov
pop
xor
jmp
cmp
adc
cmp
push
inc
xor
jne
cmp
push
dec
mov
mul
(bad)
daa
xor
push
sub
mov
test
out
xor
movs
(bad)
mov
inc
xchg
sub
jl
dec
mov
adc
pop
addr16
add
jmp
shr
cmp
aam
outs
call
popf
adc
icebp
test
push
clc
cmp
nop
push
jmp
cli
out
xor
sbb
lock
das
enter
mov
loop
jp
(bad)
je
scas
idiv
adc
dec
in
jl
aam
cmp
leave
mov
in
mov
push
fistp
cmp
(bad)
push
out
cmp
pop
dec
out
adc
popa
add
dec
popa
lahf
adc
idiv
push
inc
pop
test
sub
mov
lods
xor
loope
sbb
push
aaa
jg
and
push
sub
inc
mov
adc
dec
ror
sbb
mov
cmps
dec
test
jmp
test
gs
std
xchg
xor
cwde
stc
ret
fmul
lods
adc
xchg
outs
dec
cwde
adc
cmp
or
loope
neg
jecxz
xchg
jns
sub
and
sbb
(bad)
lods
push
pushf
mov
jne
xor
enter
mov
cmps
jg
jne
leave
jnp
enter
and
jb
xor
adc
jmp
ins
mov
add
cwde
dec
jb
sub
adc
pop
sub
dec
sar
mov
jg
push
and
inc
xchg
fmul
push
sti
dec
xor
cmp
mov
icebp
pop
jle
push
fwait
icebp
std
sub
cmp
div
inc
(bad)
imul
push
add
jo
cmp
out
jle
inc
jl
or
rcr
movs
repz
xor
cmp
cmp
je
(bad)
cwde
or
fcom
jmp
pop
pop
add
pop
adc
inc
imul
dec
mov
es
out
lea
pushf
mov
mov
call
cdq
rcr
jb
mov
into
aad
jg
mov
inc
ss
mov
dec
addr16
(bad)
mov
jecxz
retf
cmps
loop
jg
inc
pop
mov
pop
xchg
push
cmp
xchg
jp
cld
leave
push
jno
sbb
pop
stos
and
std
push
cmp
iret
xchg
inc
repnz
shl
ins
loop
inc
sahf
pop
stos
inc
fisub
mov
dec
adc
pop
test
hlt
sahf
stos
adc
cmp
in
jg
inc
and
push
mov
ja
pop
test
fcomp
in
push
sbb
movs
rcr
jecxz
push
mov
cmc
fimul
push
je
fild
jno
ss
mov
(bad)
fisub
xchg
mov
stc
mov
hlt
adc
jle
shl
lock
sub
add
mov
jne
(bad)
stc
arpl
cmp
lock
inc
mov
cli
(bad)
cdq
add
repnz
sbb
int3
pop
std
inc
mov
ja
ror
mov
and
mov
jl
aas
rcr
cmps
fnstenv
xor
mov
push
leave
(bad)
sbb
cmp
int3
ret
push
xor
inc
mov
sbb
(bad)
shl
jmp
pop
mov
jno
lahf
ficomp
inc
mov
outs
imul
mov
outs
inc
jle
out
cmp
xor
push
pop
retf
sbb
dec
mov
xlat
sub
movs
jmp
popa
rol
pop
jno
mov
pusha
xor
outs
cwde
test
sbb
adc
jmp
cmp
push
push
ror
lods
call
hlt
add
xor
movs
xor
push
ror
(bad)
test
mov
cmp
int3
fdiv
sahf
int
bound
mov
pop
test
mov
pop
(bad)
xchg
pop
or
addr16
mov
(bad)
pop
push
xor
repnz
nop
adc
cwde
bound
xor
xor
(bad)
xchg
lahf
lea
loop
leave
push
lds
or
jmp
imul
mov
add
xor
ss
jp
in
mov
mov
add
mov
adc
aad
mov
mov
jle
arpl
mov
jg
gs
sbb
iret
out
add
(bad)
jbe
mov
mov
jge
add
pusha
lods
sub
sbb
sub
sub
nop
jnp
test
retf
xchg
dec
mov
arpl
daa
push
cmp
stc
dec
dec
test
pop
sbb
popa
addr16
aaa
movs
mov
icebp
test
push
std
or
sub
test
dec
(bad)
popf
fisttp
cmps
retf
data16
adc
mov
je
mov
sbb
test
mov
adc
jnp
daa
aad
mov
push
mov
dec
addr16
sbb
out
ror
pop
inc
jns
stos
and
push
pop
push
in
or
(bad)
icebp
fcomi
pop
lahf
(bad)
fnsave
rcl
mov
mov
mov
mov
jmp
iret
imul
inc
cs
enter
test
dec
sub
inc
push
out
movs
mov
mov
test
sub
push
jmp
add
sub
cmp
lock
movs
call
into
adc
xchg
popf
out
call
push
sti
ror
add
mov
mov
cli
adc
lahf
xchg
movs
inc
setl
scas
lods
jge
into
call
jl
gs
gs
inc
out
test
xlat
jns
stos
add
jmp
inc
js
xchg
push
mov
adc
xchg
cmc
push
(bad)
jmp
shl
ins
jle
cmp
inc
mov
sbb
stos
mov
pop
pop
jl
movs
sahf
mov
add
dec
jo
int3
mov
sub
sub
shr
and
daa
sub
mov
mov
fstp
jbe
arpl
xlat
adc
je
dec
add
fsubr
jae
push
popa
sbb
call
pop
scas
call
(bad)
dec
lea
xchg
retf
sbb
stc
push
pcmpeqb
sahf
gs
xchg
or
mov
fsubrp
ficomp
test
call
rcl
push
sub
xchg
out
mov
out
lea
xor
mov
sub
push
push
and
and
icebp
cwde
scas
shl
mov
outs
cld
aaa
std
and
inc
dec
rep
dec
imul
fwait
das
or
cmp
inc
add
sub
cmp
sub
add
into
xor
xchg
(bad)
pop
pop
and
sbb
call
push
push
push
dec
mov
cmp
mov
std
imul
or
lahf
(bad)
sub
jg
push
pop
xor
mov
sub
add
icebp
jnp
test
pop
fild
xor
fimul
pop
inc
mov
mov
leave
push
mov
sbb
add
mov
cmp
retf
mov
fisubr
adc
sti
retf
jl
cmp
pop
rcr
popf
outs
call
out
adc
ud1
adc
push
sbb
and
adc
sbb
pop
iret
and
mov
test
popa
inc
cmps
inc
dec
shl
push
popa
push
add
test
cmps
cmps
out
(bad)
sub
fcomp
es
imul
ins
dec
out
or
fmul
neg
pop
xor
int3
pop
jno
dec
(bad)
ja
and
fild
jne
mov
add
push
pop
dec
call
mov
je
rcr
mov
jle
movs
in
adc
pop
inc
cli
xchg
adc
js
in
xchg
in
scas
pop
sub
push
add
outs
and
shr
call
stos
loop
xchg
mov
mov
(bad)
jl
pop
adc
(bad)
out
ja
inc
mov
pop
add
xchg
sahf
ss
loopne
pop
adc
sbb
sub
cs
mov
push
imul
mul
cs
ret
mov
fwait
jmp
sbb
xchg
sub
lea
pop
dec
jecxz
sub
hlt
test
adc
mov
int3
dec
repz
and
xchg
inc
sti
add
pop
mov
cmp
and
movs
jl
xor
aad
in
in
add
addr16
test
hlt
cdq
lea
add
repz
mov
loope
mov
jmp
pushf
lea
push
mov
sbb
push
and
pop
jns
div
xchg
pop
dec
jecxz
xchg
push
retf
pop
and
push
mov
jmp
sub
pop
sbb
pop
and
das
jle
push
adc
out
arpl
xchg
sbb
push
fisttp
out
jnp
jp
loop
hlt
cwde
inc
pop
push
pushf
adc
pop
scas
jmp
loop
jne
jne
mov
mov
test
int
cmps
inc
jl
inc
iret
lds
sahf
sbb
add
es
sbb
imul
mov
push
not
jae
mov
stc
cmc
cs
lock
stos
test
test
clc
xchg
and
push
fisttp
push
inc
cmp
jo
fmulp
out
pop
sbb
jne
sbb
inc
fstp
repnz
jle
repz
imul
int
xchg
mov
movs
xchg
cdq
jmp
mov
dec
test
sti
hlt
enter
inc
mov
push
mov
(bad)
xlat
fldenv
fld
out
clc
push
or
aad
mov
and
sub
loop
dec
pop
or
repz
cdq
(bad)
mov
jns
dec
pop
jp
lods
loopne
stos
cld
aam
sbb
out
pminub
mov
cmp
mov
lods
mov
das
or
push
ins
and
imul
popf
add
xlat
and
mov
add
push
xor
jae
sub
jb
push
mov
adc
pop
sub
fnstenv
jno
pop
jge
ins
shl
out
in
enter
call
jle
(bad)
bound
sbb
aad
jno
out
pop
pop
xor
and
pop
jbe
mov
pop
sub
sbb
push
rcl
cmp
fs
fs
scas
mov
jbe
(bad)
sub
inc
inc
sbb
xor
push
jle
imul
jl
movs
rcr
lahf
dec
xor
test
xor
push
push
(bad)
push
retf
fdivrp
lock
jne
scas
fcomip
pop
rcr
cmc
out
xchg
lahf
stos
sbb
inc
ss
cmp
lea
mov
adc
xchg
mov
jmp
mov
sub
add
ror
popa
xchg
push
push
test
repz
mov
pop
adc
rol
popf
jae
xchg
nop
jle
cs
stc
mov
loope
dec
cmc
movs
in
or
test
ficom
in
jne
inc
pop
xchg
mov
xchg
cmp
xchg
pusha
mov
test
dec
dec
(bad)
rol
ret
iret
les
push
and
sahf
dec
add
imul
mov
sbb
imul
jle
scas
mov
in
sub
scas
mov
mov
pop
retf
pop
pop
add
jle
out
popa
pop
loopne
rcl
call
pop
mov
std
mov
cld
call
popa
mov
mov
popa
js
repz
add
jl
pop
jno
sub
dec
mov
into
sub
push
into
not
cmp
and
xchg
mov
mov
sub
jmp
pop
mov
outs
and
fnstenv
call
jne
push
adc
loopne
jle
sub
push
shl
adc
outs
sub
bound
ret
jmp
lahf
push
ins
mov
pop
std
mov
xchg
rcr
popf
push
xor
ss
getsec
bound
aam
pop
lock
and
scas
adc
jno
inc
cmp
and
stos
in
xchg
pop
cmp
leave
pop
mov
bound
xchg
sti
dec
add
fnstcw
cmps
sahf
xchg
cmps
cld
fistp
xor
push
popa
icebp
mov
(bad)
repz
xor
js
in
jmp
imul
cmp
pop
sbb
mov
pop
adc
jae
cld
jge
mov
push
cmps
cmovb
add
xchg
push
or
mov
rep
(bad)
ins
xchg
mov
sbb
psubq
arpl
mov
or
adc
pop
lahf
sub
leave
dec
sbb
push
sub
sub
sub
in
sub
sar
jne
sub
aaa
aas
sbb
cmp
cmp
mov
jne
sub
push
add
mov
mov
(bad)
icebp
jns
int3
or
sbb
mov
scas
dec
push
dec
test
and
retf
jnp
mov
fistp
into
add
ds
loopne
scas
fwait
mov
and
sbb
outs
inc
mul
in
pop
test
push
adc
test
fstp
jmp
es
sbb
imul
movs
mov
dec
mov
push
(bad)
fld
inc
mov
push
pusha
mov
shr
call
fwait
pop
pusha
(bad)
push
jecxz
fisubr
push
fs
cmp
jmp
test
stos
pushf
mov
inc
sub
aaa
and
xchg
sub
sbb
mov
je
mov
jnp
fnstcw
retf
xchg
xchg
cwde
cmps
and
sbb
(bad)
imul
sub
mov
pop
leave
jb
retf
dec
push
pop
jle
add
inc
push
ficom
or
dec
rcl
adc
icebp
pop
add
sbb
sti
jp
pop
(bad)
pop
inc
bound
or
lods
cmp
and
pop
leave
adc
pop
ins
lods
movs
nop
cmc
cmc
lock
jne
lods
or
mov
leave
jg
cs
pop
lds
xlat
inc
js
sub
cli
retf
jb
inc
inc
in
(bad)
xchg
fild
inc
rcr
xchg
scas
or
xchg
xor
xor
dec
data16
xor
mov
jl
repnz
sbb
inc
push
movs
in
fisubr
hlt
out
clc
cmp
push
adc
das
repnz
imul
push
dec
add
das
test
pop
sahf
ss
mov
pop
jb
add
fisub
mov
or
lock
push
daa
not
and
data16
pop
mov
inc
aaa
pop
cmp
loope
out
adc
cs
dec
test
scas
or
mov
cli
inc
push
movs
popa
xor
push
retf
mov
movs
pop
imul
push
out
xor
dec
shl
xchg
dec
inc
add
adc
and
hlt
sub
add
adc
fst
push
cmp
dec
hlt
jmp
clc
rol
repz
sbb
mov
and
imul
sbb
mov
adc
test
das
mov
pop
daa
fnsave
pushf
lods
push
sbb
dec
aaa
mov
mov
call
data16
test
out
pushf
in
cmp
test
push
adc
dec
xor
hlt
test
add
push
push
fbld
jmp
mov
mov
adc
call
call
hlt
sub
add
inc
mov
mov
inc
mov
popf
xor
and
ds
sub
in
loopne
nop
mov
ja
jae
shl
(bad)
mov
sub
mov
mov
sbb
sbb
or
mov
inc
popf
dec
pop
cmps
jl
popf
inc
and
hlt
xor
pop
(bad)
es
repz
aaa
xchg
add
out
arpl
popa
daa
das
cmps
xor
push
mov
repnz
call
mov
or
addr16
loope
push
mov
add
xchg
fnstenv
inc
aad
adc
cmp
mov
in
jmp
enter
mov
retf
iret
mov
fdivr
add
aam
push
bound
mov
or
movs
jg
jno
mov
jmp
sbb
cld
pop
inc
fmul
dec
inc
xor
lods
in
or
pop
sar
jmp
loopne
rcl
xor
dec
repz
mov
xchg
adc
push
mov
lods
mov
xor
std
iret
(bad)
push
out
xor
add
sahf
mov
pop
inc
jne
push
pop
pop
adc
aad
int
push
bound
movs
dec
in
jmp
js
cmp
push
(bad)
jae
dec
sbb
jle
fistp
sahf
test
sub
xchg
and
push
mov
out
js
add
cmp
in
enter
lods
mov
cmp
fild
clc
mov
xor
repnz
push
icebp
shr
xchg
repnz
or
cmp
add
adc
mov
divps
cmc
xchg
dec
in
inc
in
jg
pushf
imul
fiadd
sub
jnp
push
pop
xor
push
push
mov
sub
mov
adc
push
mov
sub
xchg
mul
retf
mov
push
jg
mov
mov
add
cs
cwde
xor
stos
vucomiss
ja
or
data16
and
mov
adc
dec
retf
jl
inc
mov
fisubr
inc
pop
iret
nop
ss
mov
mov
idiv
mov
xchg
cmp
fisttp
xor
cmp
adc
test
shl
les
pop
(bad)
ficomp
movs
pop
lahf
hlt
mov
xchg
sub
arpl
cmp
mov
push
outs
mov
mov
push
fs
mov
jb
jmp
cmp
add
dec
neg
sub
sub
mov
or
mov
test
inc
sub
push
add
pop
inc
loope
cmp
imul
stos
push
aad
rcl
mov
into
push
jge
mov
mov
mov
(bad)
not
or
out
ja
das
xchg
scas
or
jae
sub
outs
popf
mov
inc
dec
cmp
(bad)
xchg
xchg
inc
lahf
or
jo
das
aad
int3
int
or
sub
xlat
cli
loop
jbe
sub
cmp
xchg
jbe
pop
xchg
xchg
jne
std
retf
cdq
xchg
mov
push
xchg
and
pop
test
ret
mov
fstp
(bad)
je
and
xchg
loop
mov
sar
repnz
call
xchg
bound
xor
mov
gs
mov
adc
xchg
nop
mov
retf
and
shl
xor
loop
mov
sbb
inc
in
js
not
mov
ret
lahf
push
sahf
fsub
ror
xchg
inc
xchg
in
sahf
daa
mov
fisubr
push
push
icebp
mov
popf
or
sub
jmp
scas
sub
call
fstp
pop
sbb
mov
add
test
in
cli
out
ret
dec
loope
test
cs
ja
adc
bound
cmp
pop
and
inc
pop
jmp
in
movs
ror
jmp
test
jl
pushf
imul
fld
mov
mov
mov
ds
je
and
fs
outs
sub
jmp
inc
je
call
sub
dec
adc
aam
dec
jns
ss
(bad)
dec
ret
xchg
cmp
movs
(bad)
dec
cmp
shr
or
ror
mov
or
scas
mov
push
lock
syscall
into
ds
movs
sbb
sub
or
mov
call
push
xchg
xor
and
jnp
sub
shr
push
shr
push
pop
and
in
test
adc
test
pop
aas
cmp
lds
sub
mov
in
sbb
clc
leave
mov
fisub
daa
sub
mov
fwait
xchg
sbb
jmp
in
cmp
lods
pop
jnp
or
xchg
add
jbe
inc
push
sbb
in
xlat
pusha
ret
dec
inc
aad
pop
pop
or
addr16
aas
jl
inc
scas
pop
cmp
lahf
mov
js
iret
and
dec
push
call
ja
xor
sbb
mov
sbb
lea
sub
stc
mov
call
inc
mov
jns
or
jns
mov
pop
imul
data16
addr16
aaa
or
dec
fmul
cmps
sbb
mov
xlat
jb
in
call
xchg
push
mov
mov
sub
out
inc
fsubr
sub
fsubr
xchg
mov
call
jo
lahf
add
mov
dec
mov
dec
push
lds
xchg
push
push
xchg
push
jecxz
cs
inc
dec
mov
jno
or
sbb
test
(bad)
stos
iret
cmp
cli
sbb
call
jecxz
jne
dec
cmp
sbb
or
xor
repnz
pop
lods
pop
xor
mov
pop
(bad)
enter
fcmovne
pop
sbb
mov
ror
mov
lahf
dec
rep
add
and
out
pop
mov
in
xchg
ret
pushf
retf
std
sahf
test
jb
mov
push
cmc
fdivr
cs
and
sbb
adc
retf
xor
xor
add
mov
in
xchg
aad
adc
popa
adc
mov
test
loop
mov
ins
fisubr
and
add
push
sub
push
ret
or
out
inc
dec
pop
bound
div
out
jecxz
rol
sbb
jg
(bad)
(bad)
(bad)
push
mov
sbb
(bad)
movs
jmp
sub
add
dec
cli
or
xchg
add
jg
cmp
and
(bad)
pop
ret
xchg
jmp
in
mov
scas
jnp
imul
mov
test
imul
iret
xchg
mov
xchg
sti
mov
sbb
scas
clc
(bad)
popa
and
mov
into
mov
jle
pop
or
xor
fwait
sar
out
fst
sahf
ins
scas
jne
push
fiadd
sar
dec
(bad)
and
jae
vunpckhpd
mov
shl
lods
(bad)
mov
dec
cmps
or
stos
icebp
outs
mul
in
cmps
inc
adc
mov
int3
xchg
and
pop
mov
mov
sub
stos
pushf
mov
cmp
mov
xchg
sub
sbb
ins
call
dec
sahf
enter
hlt
repz
pop
cmp
into
xchg
dec
cli
cmps
js
mov
jmp
sbb
push
push
loop
shl
xchg
ror
or
(bad)
cs
sub
loopne
sbb
jge
out
mov
cmps
jp
pop
je
jle
mov
movs
ds
sub
pop
sbb
cs
addr16
clc
cmps
cmp
mov
dec
imul
adc
jmp
in
dec
adc
push
cmc
loopne
mov
aad
mov
shl
mov
and
sub
sub
rcl
int
cmc
fistp
jle
rol
jl
inc
ffreep
ret
mov
test
jmp
adc
jmp
or
mov
shl
xor
jno
or
push
mov
retf
push
sbb
and
push
fldenv
and
push
popa
add
clc
pop
jmp
mov
xor
sub
sub
mov
lods
sbb
je
in
xchg
repnz
shl
aaa
push
cmp
inc
and
push
mov
or
outs
cmp
fwait
std
lock
lods
cmc
mov
mov
push
pushf
inc
add
dec
dec
aad
jl
jecxz
pop
push
jbe
xchg
inc
pop
loop
mov
sub
(bad)
adc
aas
es
rol
cmp
mov
push
int3
popf
arpl
or
ja
xor
lock
add
xchg
mov
xor
and
xor
adc
retf
mov
adc
dec
ret
cmp
fimul
mov
mov
rol
aaa
arpl
jg
data16
fisubr
jecxz
fcmovb
stos
js
cdq
jecxz
lock
jbe
sub
or
lea
mov
not
pop
cmp
fadd
pop
dec
inc
push
out
add
sbb
mov
imul
adc
adc
dec
push
adc
scas
mov
cdq
mov
cmp
push
jmp
inc
mov
xchg
dec
xor
mov
ins
adc
and
mov
sbb
sbb
pop
fwait
pop
xor
test
add
jns
mov
dec
outs
mov
bound
cmp
or
jmp
and
mov
push
sub
push
sub
shl
adc
inc
out
sbb
xchg
or
loope
sub
jge
xchg
jmp
pop
xchg
stc
inc
adc
js
fwait
fs
leave
popa
mov
xchg
jmp
dec
pop
pop
test
out
mov
or
pop
xor
mov
add
sub
sti
sub
scas
cwde
and
xor
sar
inc
cmps
outs
cmps
add
sub
push
cmp
sar
repz
or
leave
call
or
ja
adc
stos
out
xchg
movs
dec
cmps
xor
aaa
push
div
add
fwait
mov
mov
and
cmp
outs
sub
cmps
mov
cmp
sub
jmp
cmp
das
mov
(bad)
nop
and
clc
stos
and
or
icebp
bound
mov
out
sbb
mov
push
je
rcl
(bad)
mov
cwde
aam
imul
outs
push
icebp
mov
or
sbb
cmps
push
loopne
or
out
sar
clc
push
fsub
or
icebp
inc
adc
nop
loop
jns
mov
dec
xchg
scas
out
ss
ins
mov
xchg
pop
test
fimul
in
mov
cld
sub
push
xor
(bad)
fdivr
test
jg
clc
imul
lds
pusha
int3
mov
dec
pop
int
repz
mov
cdq
adc
fcom
mul
mov
or
mov
mov
(bad)
pusha
popf
mov
and
bound
jns
and
test
dec
sar
fidivr
hlt
fild
push
ret
(bad)
xor
lods
cmc
dec
pop
in
ds
loope
stos
pop
sub
adc
xchg
push
mov
xchg
pusha
ds
add
data16
mov
xchg
(bad)
ins
lahf
outs
mov
push
jo
push
xlat
aam
adc
(bad)
addr16
mov
jae
mov
push
aaa
push
shl
addr16
ds
aaa
or
sub
add
jg
ret
dec
out
xchg
(bad)
sub
push
retf
xchg
jmp
add
clc
add
ja
ffree
sbb
aas
iret
pop
(bad)
ficom
outs
add
sub
call
push
xchg
inc
xchg
inc
mov
xchg
mov
shl
stos
ja
sub
jl
fs
xchg
push
scas
and
shl
xchg
test
in
(bad)
rcr
push
mov
dec
mov
sti
sbb
rol
mov
outs
push
mul
push
jno
push
pop
mov
ror
sub
add
mov
mov
or
mov
aad
mov
aaa
inc
jbe
jl
mov
lds
mov
enter
mov
dec
jl
add
pop
retf
push
adc
or
cmps
jns
fcmove
jmp
xor
cwde
sbb
xor
je
or
push
mov
cmc
out
inc
and
cmc
jge
mov
ins
or
repz
fbld
sbb
jbe
fidivr
ror
sahf
fwait
jo
retf
je
popa
mov
dec
dec
out
add
or
jmp
jb
push
xchg
int
sbb
sub
mov
adc
loopne
mov
fsqrt
lahf
pusha
pop
jp
xlat
cdq
ror
les
jg
or
push
xchg
jbe
add
out
mov
rcr
mov
jl
push
cmp
or
or
fmul
movs
push
sub
retfw
mov
pop
cmp
(bad)
pushf
dec
iret
es
out
or
adc
out
std
mov
dec
mov
sbb
push
in
sbb
scas
fbstp
jns
icebp
out
adc
repnz
addr16
fdivrp
sub
fcomi
pop
(bad)
iret
dec
adc
stc
sar
lock
jno
xor
cmp
out
sbb
aas
cmp
mov
or
or
sbb
fist
fimul
gs
mov
inc
iret
fdivr
outs
xchg
or
pop
or
xor
xchg
imul
fdiv
clc
cmp
add
loope
push
mov
gs
adc
sahf
test
mov
cmp
xor
push
adc
push
lods
rcr
popf
and
jge
ds
mov
add
popa
sub
imul
xchg
cmps
jo
daa
pop
xchg
out
fs
sar
and
fidiv
mov
icebp
inc
fst
dec
bound
scas
sbb
ret
mov
fmul
dec
dec
loope
adc
dec
cmp
sub
clc
push
mov
cs
adc
les
jl
add
rol
jl
div
or
xchg
add
aaa
add
dec
arpl
cmp
jne
push
icebp
int3
movs
into
dec
scas
xchg
jg
cli
mov
(bad)
jp
xor
sahf
daa
mov
xchg
fwait
scas
jg
sbb
sbb
sub
ins
adc
mov
adc
ret
inc
cmps
icebp
lods
iret
lods
add
ss
fdivr
push
out
and
xchg
pop
mov
lods
mov
stos
push
or
or
scas
les
bnd
stos
jmp
add
(bad)
jno
push
and
push
mov
stos
pop
data16
cmps
in
jmp
mov
ret
les
daa
inc
sti
xor
pop
mov
jnp
or
nop
movs
shr
in
fnsave
xchg
pop
xor
mov
adc
mov
cmp
push
loop
loopne
test
inc
push
and
xor
ja
nop
repz
or
cmp
inc
lds
xor
scas
into
out
push
cld
mov
dec
and
jmp
add
neg
sbb
pop
sbb
jbe
or
sub
jl
sub
adc
cmp
fcom
mov
in
pop
cwde
mov
or
and
push
adc
rcl
jmp
popa
or
inc
outs
jecxz
xor
fist
add
jnp
je
imul
(bad)
sbb
add
lock
adc
cmovno
jl
outs
adc
retf
jge
mov
mov
icebp
fmul
cld
pop
jl
fwait
jg
bnd
jmp
call
and
pop
scas
xor
cs
push
loope
pop
fdivr
push
neg
mov
movs
adc
ins
ja
shr
push
sub
in
jecxz
and
or
xchg
inc
cdq
xor
leave
iret
fidiv
scas
mov
push
call
ins
push
ror
mov
sub
retf
dec
std
cmps
jmp
xchg
dec
push
setge
xor
aad
movs
loope
sti
add
mov
lea
std
imul
fcmovnb
stc
std
fs
ret
(bad)
push
dec
into
les
popa
jne
sbb
pop
call
mov
int
xor
cdq
push
aam
test
inc
pop
data16
sub
jecxz
push
xchg
pop
adc
lahf
loopne
mov
jns
cs
lahf
cmp
xchg
push
jmp
fiadd
and
inc
imul
sbb
(bad)
es
xchg
jl
test
(bad)
push
cmp
jne
out
jns
data16
fld
push
pop
xchg
imul
ja
or
ds
aas
push
das
addr16
jae
xchg
add
xchg
test
push
mov
test
ficom
movs
int3
dec
adc
fldenv
or
call
and
inc
retf
aas
std
in
int
mov
or
inc
test
mov
aad
sub
int
sub
push
pop
(bad)
shr
int3
add
(bad)
sbb
sub
daa
sbb
dec
test
dec
pop
fisub
mov
push
stos
jnp
cmps
dec
fst
sti
push
mov
add
mov
dec
stos
std
cmp
leave
cmp
cmp
sbb
sbb
cmp
add
les
push
jo
loope
retf
mov
mov
call
and
bound
sub
shl
out
mov
pop
setl
je
movs
mov
sbb
add
mov
xchg
sbb
ss
jecxz
pop
pop
pop
fwait
(bad)
jmp
and
cmp
fidiv
inc
mov
jnp
clc
pop
das
adc
or
dec
sub
cmp
pop
shr
and
gs
je
dec
repnz
pop
xchg
gs
and
dec
inc
sbb
inc
cs
sahf
mov
jnp
retf
cmp
dec
daa
pop
shr
xor
movs
test
test
stos
mov
lods
xchg
inc
add
jo
cmp
push
pop
xor
out
xor
mov
jae
xor
stos
dec
arpl
mov
popa
or
xor
mov
jl
mov
stos
das
mov
rcl
mov
jb
pop
xor
inc
mov
dec
jbe
enter
and
into
cmp
sahf
pop
fistp
daa
cmp
rcr
aam
dec
xchg
lock
and
mov
push
call
daa
and
js
lods
adc
xchg
push
push
out
or
jp
xchg
cli
cwde
enter
mov
fdiv
or
popf
sub
arpl
imul
add
(bad)
dec
xchg
popf
or
ret
scas
outs
sub
das
hlt
and
movs
addr16
int3
or
nop
outs
sub
fcmovnbe
mov
inc
bound
push
call
xchg
or
std
sbb
mov
lock
cmc
iret
mov
xchg
das
movs
or
xor
call
popa
sbb
repz
inc
inc
fidiv
or
mov
jg
in
pop
in
retf
inc
test
addr16
sbb
shl
xchg
adc
cs
call
outs
mov
xchg
das
mov
inc
jno
jg
(bad)
test
add
xchg
pop
mov
dec
push
inc
jmp
mov
xor
dec
jno
cmp
out
mov
mov
inc
iret
inc
sub
pop
xlat
into
clc
shl
mov
pop
add
(bad)
test
loope
jl
lahf
jle
jne
mov
pusha
lock
arpl
mov
or
pop
xor
aam
(bad)
je
jp
into
or
dec
cmps
push
mov
or
cmp
mov
mov
inc
lea
mov
fild
imul
cli
mov
jns
xchg
mov
lea
out
mov
jmp
mov
push
inc
cmps
mov
adc
xor
in
fwait
inc
xor
outs
mov
push
leave
mov
loop
mov
aas
push
xchg
addr16
aad
ret
movs
test
inc
jne
mov
cmp
nop
sti
sub
call
or
cmps
adc
and
hlt
add
mov
into
mov
push
shr
inc
loop
jo
scas
xchg
inc
mov
(bad)
dec
adc
pop
fstp
or
lds
cdq
mov
pop
add
adc
add
jmp
mov
or
sub
mov
hlt
pop
cmc
cs
sub
cs
into
xor
sbb
xor
ret
dec
and
add
mov
daa
cmc
dec
jecxz
ins
or
inc
ja
shr
sti
ds
leave
push
pop
and
push
xchg
ret
addr16
mov
test
cmps
ja
jp
mov
pusha
sahf
pop
adc
jmp
fstp
xor
pop
xchg
dec
pop
ds
int3
push
push
push
test
adc
cli
dec
xchg
ss
push
cmc
adc
mov
pushf
xor
arpl
jmp
fwait
mov
mov
mov
cmp
jne
sbb
mov
(bad)
fwait
sub
inc
push
dec
in
push
iret
fisub
jbe
xor
iret
clc
xor
and
les
outs
js
mov
test
cmp
or
loope
ret
cld
or
sub
xchg
sbb
arpl
mov
(bad)
stos
xchg
in
test
xor
xchg
dec
jb
push
jns
push
dec
mov
xor
dec
push
add
iret
cli
es
sub
test
jmp
into
out
mov
mov
daa
or
mov
test
js
jle
dec
aam
in
xchg
inc
fst
sbb
dec
les
fs
cmc
mov
xchg
cmps
ins
int
ja
scas
push
jnp
sbb
mov
xor
push
enter
or
dec
pushf
int
(bad)
and
ss
xor
(bad)
out
fcomp
bound
std
addr16
dec
pop
push
dec
addr16
mov
xchg
jns
arpl
clc
fcom
(bad)
xchg
dec
stc
xlat
hlt
fmul
out
(bad)
sar
(bad)
mov
xchg
add
leave
std
dec
or
in
sbb
in
add
les
lea
mov
sbb
data16
inc
icebp
mov
lock
cs
test
out
icebp
cdq
cmp
in
js
mov
(bad)
into
mov
cmp
js
fidiv
mov
mov
pop
pushf
xchg
xchg
not
mov
sub
shl
cld
ins
fdiv
add
push
sub
shl
(bad)
data16
xor
in
adc
das
outs
fisttp
pop
daa
les
test
mov
pop
pop
sub
lock
call
das
lahf
(bad)
and
lods
test
pop
xchg
cmps
add
je
ror
jne
ss
cmps
stc
shl
cmp
add
shl
retf
sub
mov
ret
sbb
mov
mov
shl
ins
mov
cs
aas
gs
iret
adc
dec
dec
jge
sbb
aad
aam
sbb
lock
test
nop
mov
or
fcmovnbe
mov
cwde
jle
cmp
shr
jmp
fstp
ss
inc
shr
dec
mov
stos
sahf
inc
xlat
les
test
dec
fdivr
pandn
pop
xor
dec
(bad)
ins
sbb
cs
pushf
mov
add
iret
mov
out
push
aas
pop
(bad)
mov
sub
pop
ds
add
adc
cs
mov
pop
sbb
cmp
sbb
mov
shl
pop
sub
sbb
pop
fcom
xor
mov
cmp
mov
push
ds
and
fiadd
outs
sbb
fisub
mov
es
pop
mov
out
xor
xchg
ret
bound
sbb
dec
and
add
mov
into
cmc
jae
(bad)
in
sbb
sbb
jno
movs
cmc
pop
outs
dec
push
xor
inc
lods
fadd
test
sbb
in
lods
int
mov
out
cs
in
ja
mov
jae
sub
test
add
push
jo
retf
into
out
aam
ss
ret
or
and
stc
sbb
push
or
xchg
cmp
mov
pop
fiadd
ret
int3
or
mov
imul
bound
xor
movs
adc
ja
xchg
push
dec
aam
add
retf
imul
mov
fild
xchg
xchg
pop
add
adc
push
std
dec
(bad)
sti
inc
or
xor
xchg
add
test
jmp
mov
jle
pop
movs
push
cmc
add
clc
mov
lahf
pop
jl
and
pop
rcl
bnd
jl
xchg
int
pop
pop
popf
mov
ret
aaa
lods
or
inc
jns
icebp
nop
(bad)
loope
or
pop
dec
(bad)
out
enter
and
mov
pop
lods
loope
out
cs
not
lods
cwde
fucomp
pop
pop
push
cld
imul
add
adc
jecxz
es
jne
jg
push
sub
inc
aaa
or
mov
jle
and
gs
push
rcl
loope
shr
sub
jae
call
iret
loope
dec
retf
into
aam
js
(bad)
xchg
fnstcw
and
inc
inc
out
(bad)
mov
mov
cmps
sbb
mov
mov
repz
push
pop
aas
hlt
das
xchg
cmps
xchg
mov
mov
jns
xor
xchg
sub
(bad)
lea
std
fs
mov
fdiv
enter
or
int3
int3
jmp
cmps
sbb
stos
adc
daa
push
fsubr
(bad)
mov
stc
aas
sbb
popa
sbb
mov
inc
adc
stos
and
inc
arpl
pop
mov
xor
or
loopne
rol
loop
or
mov
mov
loope
inc
scas
jecxz
cmc
dec
push
mov
in
push
xor
sub
push
ret
add
adc
sbb
mov
idiv
(bad)
in
and
mov
(bad)
or
mov
and
ffreep
shl
out
push
dec
jle
int
or
push
icebp
fdiv
js
adc
fisttp
jne
ins
mov
dec
or
jae
mov
mov
movs
or
jl
out
cmp
xchg
xchg
push
jo
cld
xor
movs
cmp
cmp
inc
mov
or
(bad)
sahf
rep
jg
sbb
into
and
icebp
push
lahf
or
inc
fbstp
outs
sbb
add
inc
lock
lods
imul
adc
xchg
lock
inc
add
dec
out
out
add
and
pop
pop
mov
adc
ins
jns
push
xchg
iret
(bad)
clc
push
fnstenv
dec
lock
setl
in
rcl
or
sub
fadd
dec
pusha
pop
inc
xlat
add
sub
aam
and
push
lahf
mov
pop
adc
cli
pop
push
add
test
clc
add
rol
or
xchg
icebp
push
sub
jmp
and
inc
iret
mov
dec
ins
mov
push
adc
mov
pushf
nop
scas
jo
fist
fmul
adc
rol
test
push
outs
mov
or
sbb
and
pop
push
sbb
cmp
cwde
mov
aam
movs
rcl
repz
push
dec
(bad)
adc
mov
xor
and
test
jle
stos
or
movs
(bad)
int3
jl
(bad)
xor
sub
pushf
adc
and
push
dec
outs
mov
mov
inc
scas
shr
push
inc
stos
cdq
nop
repz
dec
mov
push
push
sub
or
imul
mov
aam
sar
pop
outs
enter
mov
jg
jecxz
ins
mov
dec
jne
pushf
daa
mov
sbb
fstp
adc
cmc
test
add
pop
pop
mov
xlat
inc
scas
sub
rcr
sbb
int3
je
cli
mov
loopne
fwait
(bad)
loope
fdiv
sub
jb
jecxz
fs
mov
leave
and
add
cmpxchg
jl
lods
push
sar
add
in
fld
je
push
xchg
outs
shl
lock
mov
lods
push
add
mov
push
add
xchg
jmp
dec
inc
clc
js
or
sbb
hlt
mov
bound
pop
pop
push
mov
imul
js
rol
test
loopne
jg
push
shl
cmp
dec
mov
adc
in
stos
jbe
icebp
push
arpl
dec
test
jmp
aaa
xchg
dec
cmp
sbb
mov
mov
dec
mov
mov
cmps
cmps
mov
or
xlat
or
xor
imul
dec
rcl
loop
xor
(bad)
mov
iret
cli
call
add
jecxz
jmp
enter
and
xor
sbb
cmp
mov
sub
mov
inc
sub
cmp
inc
push
scas
add
dec
push
ins
mov
in
and
out
inc
aad
test
call
dec
ins
and
sub
stc
cmp
push
aad
jmp
or
mov
jmp
sub
je
dec
daa
shl
add
cmps
scas
jg
pop
xchg
and
dec
and
sub
movs
push
push
ds
pop
dec
cs
das
rol
add
mov
shl
scas
sar
and
sub
dec
sbb
inc
dec
retf
cmp
mov
daa
in
pop
faddp
retf
cmps
sahf
xor
dec
xchg
cmp
mov
outs
mov
push
popf
retf
mov
add
mov
in
stos
in
jae
cmps
or
scas
(bad)
ret
call
aam
xchg
ja
or
test
cmp
lock
loop
and
push
cmp
les
inc
ins
push
pop
fcom
pop
popf
adc
dec
fs
mov
mul
pop
fst
mov
es
(bad)
xlat
push
mov
sti
inc
mov
xchg
retf
int
leave
popf
out
shl
push
dec
cwde
pop
pop
pop
movs
dec
pop
adc
mov
ds
or
lea
push
adc
mov
jno
sbb
je
mov
scas
xor
lods
das
mov
iret
scas
xor
jne
pushf
fcomp
mov
popf
cmp
add
sbb
aas
xor
test
or
dec
jle
mov
cwde
pop
icebp
push
stos
cmp
fs
sub
sub
mov
xor
test
sub
fidivr
cwde
or
jns
fwait
mov
jb
popf
xchg
xchg
inc
lahf
mov
add
and
inc
lahf
dec
inc
sbb
jecxz
cmp
aad
xchg
inc
cmp
imul
(bad)
pop
adc
repnz
sub
aad
(bad)
xor
sub
out
fcomp
rol
cmps
adc
mov
stos
xchg
xor
mov
test
pop
and
sub
fstp
int3
into
mov
mov
test
mov
call
or
rol
push
mov
mov
clc
pop
ins
lock
pop
shl
popf
data16
adc
stos
and
sbb
out
cmp
pop
jo
jmp
imul
call
cwde
movs
adc
sbb
loop
pop
pusha
into
xchg
pop
cmp
cli
inc
popf
xchg
pushf
stos
sar
fidiv
lahf
fsub
lods
push
or
mov
aad
xchg
ja
mov
mov
mov
fisub
es
inc
imul
fwait
cmp
mov
jmp
jmp
xchg
in
imul
sbb
mov
push
leave
(bad)
(bad)
sbb
cmp
push
aaa
or
xor
loopne
jo
fst
xchg
out
sti
aas
loopne
icebp
mov
movs
lahf
sub
adc
nop
inc
cdq
ins
lock
mov
jp
push
cwde
ins
pop
jmp
xchg
pop
stos
xor
cs
nop
lods
and
mov
(bad)
mul
ret
jecxz
sbb
fwait
outs
mov
lock
adc
adc
mov
and
inc
dec
lock
pop
(bad)
or
jns
pop
fwait
sub
push
jnp
(bad)
cmc
in
mov
jae
jnp
push
es
cmp
lock
pusha
rol
xlat
lods
jl
jo
call
or
aaa
int3
add
out
ror
clc
sbb
fbstp
fsub
ror
pop
mov
or
jns
mov
call
and
cmp
push
call
sub
push
(bad)
jl
mov
push
data16
ret
test
push
lods
xor
(bad)
xchg
icebp
ret
adc
xor
mov
inc
out
in
das
iret
push
mov
push
cwde
mov
mov
(bad)
mov
or
xchg
xchg
or
pop
in
or
dec
xchg
out
mov
jno
mov
mov
mov
pop
ret
adc
cmps
loop
lea
add
fist
and
js
and
adc
icebp
lds
loopne
jne
lea
push
js
sbb
push
xchg
sbb
retf
test
or
add
and
xchg
loopne
aad
fdiv
call
dec
pop
fnstsw
iret
bound
pop
daa
mov
jecxz
mov
sbb
fimul
addr16
jnp
and
inc
es
sbb
sti
push
adc
cmp
pushf
das
inc
das
jo
daa
cmp
nop
rcl
cdq
adc
pop
mov
cmps
sub
xchg
mov
adc
repz
mov
fwait
pop
sub
push
fnstsw
leave
and
and
pop
inc
repnz
mov
cmp
fincstp
scas
or
and
inc
retf
and
dec
popa
sbb
pushf
mov
pop
push
std
test
adc
adc
(bad)
mov
jo
into
sti
retf
xchg
out
in
inc
dec
pusha
rcl
into
fs
ss
fcom
jl
into
test
mov
push
lods
sub
and
mov
mov
adc
cwde
je
cmps
xor
rcr
sbb
push
mov
gs
stc
add
icebp
sub
cmp
mov
mov
pop
fisub
movs
pop
pop
mov
call
fwait
sahf
ss
and
mov
xchg
hlt
jb
out
cmp
adc
cmp
xlat
dec
scas
mov
mov
mov
sbb
xor
bound
jmp
lods
sbb
inc
add
push
loope
xor
rcr
jmp
(bad)
aas
mov
(bad)
jmp
hlt
add
pop
shr
into
fadd
mov
dec
rcl
mov
mov
(bad)
shl
add
add
inc
xor
cmps
pop
jl
clc
jge
les
dec
popf
aaa
or
sbb
cmp
je
clc
stos
pop
inc
xor
scas
mov
rcr
fmul
sub
fdiv
cmps
pop
mov
mov
dec
jle
int
fild
pushf
clc
daa
jmp
mov
cs
stc
(bad)
sahf
daa
lods
retf
aad
daa
cmp
or
inc
mov
sar
ss
pop
adc
inc
or
inc
xor
dec
jmp
sub
pop
xchg
sti
mov
es
pop
repz
pop
push
popa
sbb
jo
inc
cmp
cli
jae
hlt
lods
adc
xlat
push
pop
pop
adc
xor
addr16
mov
xchg
ss
js
(bad)
imul
lods
pop
adc
rep
jmp
mov
cmp
aad
mov
loope
xor
aad
xchg
mov
pop
jno
in
cli
ss
cmp
sti
pop
xchg
sar
neg
out
mov
mov
aam
xchg
retf
stos
cmp
add
rcl
pop
add
jmp
dec
and
iret
pushf
ror
mov
mov
hlt
cwde
push
ds
inc
fwait
popf
or
xor
ds
add
cmp
jae
rcr
sub
xor
es
xchg
push
mov
jo
daa
leave
xor
fist
or
fdivr
jnp
ficom
xchg
or
cmp
jg
icebp
inc
cmp
loope
jmp
jmp
cmps
clc
jmp
jno
mov
inc
inc
mov
stos
jge
ins
neg
mov
sub
popa
jns
mov
cmc
mov
push
mov
or
retf
adc
mov
xor
int3
jl
pop
xchg
push
xlat
add
sbb
dec
in
dec
mov
lea
mov
in
push
test
adc
cmp
xchg
out
mov
jg
imul
out
xchg
push
das
lahf
pop
fdivr
(bad)
jg
mov
in
dec
(bad)
adc
jp
cmps
push
mov
mov
xlat
cs
adc
and
ins
aad
or
cli
adc
jbe
mov
aaa
push
or
dec
retf
rcr
push
xchg
xor
dec
into
test
cmc
sub
push
mov
mov
sbb
push
pop
or
outs
inc
neg
inc
jg
pop
sbb
dec
xor
xchg
(bad)
adc
(bad)
fs
mov
and
sbb
aaa
pop
xchg
dec
sbb
xchg
mov
xchg
mov
cmp
test
fcomp
jnp
fmul
inc
into
cmc
lock
popf
inc
cmps
xchg
jmp
outs
(bad)
out
push
and
mov
and
dec
lds
stos
rol
push
mov
cmp
adc
adc
sahf
mov
call
jecxz
dec
inc
xchg
jecxz
fnstsw
and
xor
cdq
pop
hlt
imul
std
popf
cwde
cld
cmps
retf
mov
(bad)
sub
in
test
enter
pop
add
js
mov
jb
inc
fisubr
mov
cld
cmp
shl
stos
lea
mov
xchg
repnz
inc
pop
or
mov
into
icebp
dec
fidiv
adc
add
pop
out
mov
or
jo
xchg
or
gs
push
adc
or
lock
mov
adc
inc
or
mov
retf
imul
ret
stc
dec
mov
mov
jb
or
add
sbb
leave
es
lods
adc
imul
femms
mov
test
repz
inc
fadd
jmp
inc
mov
enter
sbb
aad
xchg
add
xchg
pop
push
jbe
lods
bound
sbb
pop
push
sub
sbb
int3
xchg
jo
ror
in
dec
lahf
dec
mov
sub
and
inc
cmp
xchg
jge
inc
adc
nop
inc
inc
inc
and
jle
popf
int3
rol
in
push
cmp
cdq
mov
jle
add
and
mov
ror
xor
and
ror
or
pop
add
in
jmp
xor
gs
cmp
xor
test
inc
cs
fidivr
lahf
aam
lods
ja
dec
mov
lock
and
mov
adc
fimul
stc
popf
popfw
or
ss
xchg
push
fiadd
pusha
mov
sbb
ins
cmp
xor
shl
retf
sbb
nop
dec
push
lds
loopne
loop
xor
data16
and
clc
jge
dec
(bad)
js
retf
ret
add
pop
in
(bad)
push
(bad)
mov
imul
cmps
add
push
vmulpd
xchg
mov
gs
mov
stos
add
xchg
jne
pop
add
or
cwde
movs
sti
cmp
mov
xlat
inc
sub
xor
mov
sbb
dec
(bad)
cld
call
jne
adc
out
inc
mov
or
jmp
bound
outs
sti
cmp
rcl
pusha
idiv
xor
dec
xchg
xlat
jg
push
inc
pusha
add
cmp
xlat
mov
push
call
inc
jbe
arpl
cdq
adc
pop
pop
pop
add
leave
lahf
xchg
pop
xchg
add
retf
fdiv
mov
pop
pop
xchg
inc
or
ins
add
xchg
cmps
popf
inc
adc
(bad)
arpl
cld
dec
std
leave
dec
es
cmc
push
bound
mov
sub
adc
jae
scas
xor
xchg
lods
xchg
inc
push
sahf
cmp
into
scas
test
mov
sbb
push
adc
aam
inc
rcl
sbb
repz
xchg
int
and
jb
jecxz
pop
jb
sbb
cmp
add
cmp
adc
shl
fsubr
into
(bad)
cmp
xor
out
and
jge
or
es
push
sub
add
mov
loopne
xchg
iret
loopne
push
neg
retf
cdq
call
adc
inc
test
push
js
cmp
test
daa
jmp
or
inc
out
cmps
mov
adc
data16
dec
xlat
or
cmp
jns
fcomp
cmps
push
leave
push
jae
repz
mov
mov
arpl
add
mov
daa
pop
fcmove
repnz
loope
imul
sahf
sti
in
aaa
cmp
cmp
inc
inc
test
or
shr
outs
lea
cwde
scas
push
or
or
shr
pushf
scas
xlat
and
loop
inc
hlt
outs
add
and
and
por
pop
sub
into
(bad)
fstp
mov
call
cmp
rcl
xor
dec
and
inc
dec
pusha
pushf
dec
in
imul
mov
push
inc
push
popf
jle
cmp
xchg
and
stos
pop
and
mov
repnz
test
out
into
aaa
dec
push
repnz
dec
jle
lock
les
es
adc
stc
ss
icebp
xchg
xchg
mov
and
adc
(bad)
cli
stos
push
jmp
inc
shl
rcr
inc
aad
adc
pop
xchg
imul
(bad)
mov
pop
scas
sahf
stos
nop
xor
xor
sbb
add
sbb
xor
iret
xchg
(bad)
sbb
xchg
xor
add
je
pop
cmp
stos
push
push
adc
repz
out
or
into
pop
rcr
inc
xor
xchg
in
cwde
xor
sbb
cmp
pop
stos
jecxz
dec
mov
outs
mov
xlat
sub
imul
(bad)
mov
mov
pop
xor
lock
outs
jns
xchg
push
add
pop
nop
icebp
(bad)
xchg
xor
or
or
or
out
dec
cmps
dec
imul
icebp
or
sub
mov
and
rol
fcomp
pop
dec
dec
in
bound
mov
jmp
div
mov
or
push
repz
lea
pop
scas
mul
fidivr
rol
xadd
aaa
add
ror
les
sar
jmp
arpl
cmp
xchg
ins
push
jle
push
inc
orps
mov
mov
jns
(bad)
test
enter
ss
inc
jb
sbb
mov
push
push
imul
fucomi
cmps
aas
dec
sbb
ss
adc
test
popf
mov
inc
and
xor
mov
sbb
push
bound
popa
fdiv
mov
jmp
push
movs
leave
adc
fld
fisubr
pop
or
inc
ja
xchg
lods
in
(bad)
mov
or
fs
add
std
inc
nop
xchg
inc
cmp
push
sub
adc
pushf
xchg
pop
push
imul
(bad)
inc
scas
xor
lock
in
xor
or
outs
dec
mov
mov
mov
xchg
sub
inc
ret
lahf
xchg
(bad)
jne
repz
xchg
inc
push
stos
cwde
imul
sub
dec
and
jmp
jle
push
push
fsub
mov
xor
or
fild
in
sbb
ret
xlat
imul
xchg
cmp
mov
pop
leave
or
xor
(bad)
fmul
and
inc
inc
sar
test
stc
scas
inc
rcl
pop
xchg
jns
mov
sbb
push
mov
lods
aas
jg
imul
rcr
outs
int3
pop
ffree
mov
pushf
movs
inc
daa
lods
out
mov
cmp
aaa
js
inc
jl
shr
push
call
dec
push
stos
xchg
and
xchg
and
int
push
push
dec
movs
or
in
repz
mov
inc
test
ss
adc
mov
fs
pop
aaa
outs
aas
sbb
retf
cmp
push
pop
fidiv
xchg
std
test
loopne
add
std
ret
xchg
push
add
in
sub
retf
loop
scas
call
fdiv
(bad)
lea
mov
mov
test
cdq
fcmovnu
shr
mov
fld
imul
shr
dec
leave
fwait
and
or
rcl
popf
leave
add
ja
rcr
aas
and
call
mov
pop
push
or
addr16
int3
xor
pop
and
jg
dec
dec
stos
mov
jbe
stos
dec
into
fprem
jb
adc
dec
mov
(bad)
mov
(bad)
mov
fcmovne
loopne
ret
jb
(bad)
lods
push
enter
(bad)
shl
push
or
push
ror
not
faddp
mov
pop
pusha
ds
jle
div
xchg
nop
or
adc
cs
sbb
aaa
out
mov
push
push
pop
sub
enter
mov
xor
mov
add
out
fadd
adc
sub
lahf
pop
pop
inc
gs
dec
jno
jnp
push
arpl
jns
pop
add
lods
les
lock
mov
dec
pop
jo
repnz
inc
add
cdq
cmps
sub
pop
push
fbld
movs
into
mul
cs
jmp
fld
stos
popa
in
out
(bad)
(bad)
cld
int3
push
and
mov
xchg
fistp
adc
shl
pop
in
jo
hlt
dec
lods
dec
aam
(bad)
xchg
icebp
dec
mov
mov
mov
or
add
ret
ret
out
shl
adc
jns
cmp
and
fadd
sub
adc
lock
cld
adc
mov
fwait
(bad)
outs
cs
cli
(bad)
in
mov
sub
xor
and
dec
outs
aam
aad
jae
clc
add
sbb
or
movs
imul
shl
jne
pop
xchg
pop
enter
sbb
jmp
enter
xchg
xor
repnz
dec
loop
sbb
loopne
ret
jmp
fild
pop
and
les
jg
in
xchg
cwde
loope
dec
loope
fsubr
pop
add
es
cld
sub
mov
xor
pop
or
cmp
inc
push
lahf
add
js
imul
jb
mov
mov
cmp
les
icebp
aad
xor
sti
xchg
(bad)
add
je
dec
mov
dec
sbb
pop
nop
ret
xchg
mov
dec
push
push
imul
jmp
imul
jns
fwait
xor
(bad)
outs
adc
sbb
mov
fsubr
mov
dec
out
mov
or
cmp
and
test
sbb
adc
sbb
xchg
adc
jmp
xor
xor
or
in
ffreep
mov
inc
mov
lock
or
ret
(bad)
inc
retf
inc
mov
mov
pop
fstp
imul
adc
pushf
push
push
push
sbb
jmp
in
xchg
je
push
mov
xor
(bad)
fbstp
inc
fdivr
ret
add
(bad)
movs
push
frstor
push
hlt
mov
mov
fs
and
push
ror
in
xchg
fidiv
into
cmp
shr
ret
pusha
popa
xchg
jae
cmps
mov
dec
pop
es
ror
in
in
(bad)
retf
(bad)
outs
jecxz
pop
in
repz
fsubr
cmps
sbb
sahf
je
cmp
jg
sbb
mov
mov
push
cmps
je
leave
popa
lea
and
cli
lahf
xor
mov
mov
aam
repnz
mov
fxch
sbb
in
jns
scas
jg
push
xchg
push
cmp
xchg
xchg
jge
jo
stc
aam
popf
das
jecxz
cdq
scas
in
sar
push
xchg
mov
call
sbb
sbb
jae
test
pop
inc
mov
(bad)
aad
out
out
pop
or
or
pop
xchg
cmps
mov
in
xor
sti
in
push
inc
test
lahf
pop
jmp
loopne
cmp
jae
jmp
clc
mov
sub
sbb
cmps
(bad)
push
rol
stos
xor
xchg
cli
jl
jo
mov
fisubr
adc
outs
inc
or
inc
sub
mov
mov
inc
jp
jmp
jns
cmp
mov
add
shl
mov
sub
sahf
(bad)
mov
push
mov
xor
in
pop
cmp
xor
push
out
jle
push
loope
leave
std
cmp
xchg
cmp
mov
or
ja
xor
and
add
mov
cli
adc
aas
push
loopne
mov
ret
lods
cwde
push
add
popf
ret
or
mov
add
jmp
jb
(bad)
xchg
xor
jp
sbb
and
jae
adc
ss
aaa
jae
(bad)
push
ret
or
(bad)
jne
jmp
loopne
imul
mov
jmp
pop
xchg
mov
inc
aas
inc
aad
test
outs
or
sbb
push
cmp
ja
inc
iret
fimul
push
movs
mov
ret
fidiv
fidivr
fmul
add
cmp
mov
sbb
ficom
and
retf
loope
rcl
cmp
cdq
adc
mov
sub
push
and
fwait
jae
and
pusha
call
dec
push
cdq
loop
xchg
sub
outs
xchg
cwde
adc
mov
imul
jl
xchg
mov
int
imul
outs
xchg
aas
push
retf
mov
adc
adc
shl
pop
mov
imul
push
cmps
xor
mov
add
cmp
push
adc
scas
fnsave
popa
push
pop
push
fs
mov
xor
sbb
stc
(bad)
imul
pop
aad
nop
xor
mov
xchg
mov
xor
add
loopne
adc
sbb
xor
xchg
jecxz
aam
mov
sahf
test
popf
ror
jno
stc
lods
jne
test
clc
mov
aaa
adc
and
fnstsw
sbb
out
xchg
mov
xchg
(bad)
mov
cmc
dec
jp
je
std
and
pushf
cmp
inc
pop
imul
xor
sti
outs
retf
retf
or
xor
repnz
cmp
mov
or
enter
stos
fadd
pop
cld
xor
inc
ins
sbb
xor
jmp
test
xchg
push
jae
cld
adc
dec
or
push
mov
fnstcw
nop
jnp
popf
xor
xchg
cmp
mov
mov
sub
aad
dec
scas
ds
pop
ins
std
sub
frstor
xchg
cmps
inc
pop
mov
stc
cld
call
js
bound
loope
lods
movs
jnp
fucomip
mov
int
out
mov
mov
jge
out
outs
mov
inc
push
sti
inc
arpl
out
ins
sbb
je
mov
pop
mov
fdiv
cmp
loop
or
jmp
std
ffreep
leave
ds
es
test
mov
pop
fcomp
shr
sahf
cli
nop
fmul
sar
adc
out
pusha
jno
pop
repz
xor
fild
jmp
xor
cmp
loopne
push
jl
cwde
aam
jae
ds
ds
(bad)
dec
fs
hlt
popf
mov
pop
sub
pusha
out
pop
rol
stos
or
pop
dec
xchg
pop
xor
sbb
mov
push
leave
out
and
outs
sbb
mov
dec
mov
(bad)
aaa
loop
inc
mov
push
mov
hlt
add
(bad)
push
loope
xchg
aas
mov
call
dec
and
mov
cmps
xchg
lahf
adc
shl
or
fild
add
(bad)
movs
fadd
push
pop
in
imul
mov
and
jns
into
movs
(bad)
mov
imul
dec
jmp
test
mov
xchg
cdq
fild
add
in
cli
scas
jl
cmp
test
mov
mov
inc
repnz
dec
sbb
add
mov
repnz
mov
xor
lods
iret
nop
ins
scas
loope
arpl
cmp
(bad)
sar
and
cmps
push
mov
icebp
mov
xor
test
rcr
jae
mov
aas
mov
gs
test
std
pop
movs
ins
and
push
or
or
scas
mov
add
inc
or
push
pop
pop
test
mov
or
push
lock
jle
leave
mov
stos
sub
inc
into
fcomip
inc
mov
cwde
repz
ficom
jle
xchg
add
repz
stos
inc
fs
stos
sub
cmp
movs
xchg
je
sbb
push
aam
dec
push
mov
ins
sub
xchg
cmp
jecxz
test
mov
sbb
xor
pop
mov
test
sar
dec
adc
or
je
mov
imul
retf
sub
add
fld
retf
(bad)
mov
dec
inc
xlat
cli
fs
cmps
enter
or
repz
ins
mov
add
cmp
lea
mov
push
mov
idiv
arpl
jmp
popf
jae
ins
cmp
sub
aam
rcr
and
stc
cmp
daa
cdq
sbb
loop
cmc
out
dec
(bad)
test
cmp
enter
enter
aas
adc
jnp
pop
xor
bound
psrlq
add
cdq
and
(bad)
and
iret
iret
sbb
repz
ds
stos
add
sbb
lods
in
sub
jo
or
mov
ins
mov
das
scas
push
ss
stos
cs
mov
mul
std
cwde
jae
pushf
sahf
lock
out
mov
cwde
mov
cmp
mov
pushf
loop
loope
xchg
std
arpl
and
je
mov
xchg
inc
mov
xchg
(bad)
iret
inc
test
stos
lahf
data16
jb
jecxz
sub
test
ret
sub
cld
pop
loopne
pusha
test
(bad)
fisttp
xchg
jne
dec
fist
cs
xlat
test
add
stc
pop
cmc
aam
cmp
pop
pop
xchg
dec
stos
(bad)
dec
lock
sti
sbb
imul
stos
vpsrld
dec
sub
add
inc
int
mov
cwde
fcom
push
pop
mov
out
stos
push
cmps
ret
aam
pop
repz
sbb
ss
loopne
or
out
into
lock
outs
adc
aam
arpl
loope
add
movs
xchg
sub
jb
fst
inc
(bad)
popf
adc
xchg
pop
in
dec
mov
mov
jb
popa
stos
and
aas
xchg
out
ss
out
mov
lahf
xor
ja
mov
icebp
bound
sub
xchg
xchg
or
mov
sub
in
jno
ja
pop
mov
inc
mov
out
(bad)
ins
sub
icebp
sbb
or
ret
addr16
in
xchg
adc
pusha
leave
mov
mov
sub
rcl
movs
jbe
outs
mov
outs
scas
or
dec
fdivr
out
out
cld
inc
(bad)
xor
xchg
outs
(bad)
dec
sub
mov
cld
xor
out
pop
sbb
push
das
adc
das
dec
ret
xchg
jl
lea
call
movs
mov
fs
pop
je
repnz
fcmovnbe
push
add
adc
enter
cmp
js
leave
xor
inc
stos
lock
iret
xchg
mov
pop
enter
or
xchg
popa
cmp
push
iret
inc
cwde
retf
mov
loope
xor
mov
movs
sub
test
pop
daa
add
and
push
aaa
cmp
adc
jb
inc
out
mov
xor
aaa
dec
jb
test
jns
pushf
mov
call
outs
inc
push
mov
rsm
outs
lahf
pop
and
mov
call
xchg
jmp
retf
popa
cmps
or
cmps
icebp
mov
addr16
and
push
inc
jmp
dec
add
call
or
adc
pop
(bad)
out
(bad)
cld
ss
adc
mov
adc
test
out
mov
mov
xchg
xor
or
push
push
movs
mov
sub
out
stos
cld
push
mov
or
fdivr
xor
pop
je
xchg
pop
mov
jp
mov
inc
arpl
fcomip
call
test
adc
push
fbstp
or
sub
sbb
test
je
jmp
sti
test
inc
cmp
fstp
stos
add
pop
jl
jmp
fbld
cmp
movs
pusha
fxam
mov
add
push
inc
movs
lods
push
xor
das
test
stos
mov
push
stos
cmp
adc
mov
sub
add
add
ret
add
inc
sub
cmp
nop
sahf
pop
mov
fadd
and
sbb
push
adc
sbb
inc
mov
adc
push
sub
and
jmp
add
push
mul
dec
std
push
loopne
or
jmp
dec
and
dec
test
and
add
loop
in
es
sub
out
(bad)
iret
stos
repnz
std
in
and
cmp
push
mov
ins
(bad)
push
sub
inc
lahf
adc
out
add
sub
sbb
sub
shr
mov
jnp
std
addr16
adc
inc
mov
jae
push
sbb
mov
test
das
sub
inc
mov
aaa
mov
pop
hlt
mov
imul
cmc
jb
outs
xor
xor
dec
dec
inc
lods
inc
cmps
sbb
mov
pop
or
mov
mov
lahf
ja
cmp
les
mov
pop
dec
jb
xchg
jmp
pop
jg
jbe
jl
cmc
adc
ror
push
push
dec
mov
push
call
sub
pop
outs
xchg
scas
adc
mov
mov
cmp
dec
ret
pop
or
xchg
cmc
dec
jmp
in
loopne
mov
fst
in
adc
jg
sbb
sbb
mov
push
sahf
sub
pop
icebp
mov
add
js
mov
or
arpl
dec
bnd
sahf
inc
retf
pop
sub
test
inc
leave
retf
pop
scas
out
rol
shr
repnz
push
jl
or
pop
mov
retf
lods
xor
adc
imul
mov
cmps
jp
push
jge
jp
movzx
hlt
cdq
sar
push
sbb
mov
rol
dec
pop
jns
xchg
sbb
add
xor
stos
aad
xor
push
popf
adc
inc
mov
mov
pushf
repnz
and
mov
lods
in
mov
mov
push
or
add
sbb
cmp
mov
cmps
mov
sub
mov
push
sub
push
jle
jae
dec
arpl
dec
push
add
hlt
mov
repnz
adc
sti
fnstcw
popf
and
loopne
test
iret
stos
addr16
(bad)
dec
fcomp
loope
cmc
push
lods
pusha
adc
arpl
(bad)
fyl2x
out
mov
sbb
pop
stc
dec
dec
pop
cmc
xor
sbb
(bad)
dec
pop
pop
xchg
sbb
sar
shr
inc
aad
js
retf
fbld
pop
int
cmp
loop
cmp
int3
push
inc
ror
and
(bad)
jb
or
in
xchg
adc
std
adc
pushf
add
setno
int
dec
or
stos
mov
xchg
out
xchg
cli
dec
ret
ret
lea
es
mov
pop
call
jge
push
push
add
mov
fdivr
es
leave
mov
hlt
dec
jecxz
loopne
pusha
in
icebp
lock
jge
and
mov
cld
inc
vmulsd
xlat
mov
out
std
add
xor
add
outs
dec
add
cs
mov
push
mov
xor
cld
call
aas
jge
cwde
(bad)
hlt
pop
or
adc
mov
cmp
in
mov
mov
ficom
loope
jp
xor
xor
xchg
stos
jbe
cmp
ficomp
ror
pop
push
mov
xchg
jle
or
enter
(bad)
adc
xor
pop
push
add
add
fiadd
aam
das
mov
and
les
add
es
jmp
jb
mov
jecxz
fdivr
shr
and
scas
and
cli
dec
movs
pop
or
lea
pop
gs
ds
add
xchg
or
sahf
push
pop
mov
push
or
push
sahf
int
inc
pcmpeqd
fsub
aad
loope
loopne
sub
lds
dec
cmp
dec
push
cmp
xlat
cli
pushf
push
adc
dec
pushf
dec
outs
xchg
repnz
loope
cli
xor
jmp
push
imul
xchg
push
dec
test
and
jle
ins
in
pop
sub
pop
jno
and
jg
dec
popf
mov
cmp
stos
push
repnz
jno
(bad)
loope
sbb
fnstcw
inc
call
stos
sbb
mov
xor
hlt
pop
ja
jmp
ss
out
shl
arpl
addr16
pop
adc
dec
out
mov
or
inc
popa
retf
jo
test
call
sub
mov
xor
out
cmp
(bad)
sbb
pop
add
adc
mov
loop
and
mov
(bad)
xchg
mov
cs
pop
loope
push
iret
cmp
mov
hlt
retf
mov
outs
call
inc
fcmovbe
lods
popa
in
mov
jl
mov
iret
nop
dec
std
dec
js
test
loopne
fld
mov
xchg
test
ror
lock
hlt
xchg
retf
cld
sbb
popf
jp
mov
aas
or
in
xor
fstp
and
sbb
xchg
pop
sar
sbb
sbb
xchg
dec
push
mov
jb
add
xor
cmp
pop
jmp
xchg
(bad)
xor
test
ret
add
mov
repz
data16
jne
mov
push
cmc
leave
inc
psubsw
mov
or
pop
in
push
scas
mov
or
sahf
jmp
or
mov
hlt
iret
int3
jmp
sub
outs
push
sub
pop
or
shl
ret
test
fs
mov
and
loopne
retf
cmp
and
lods
xchg
das
inc
mov
push
jl
call
push
jns
lock
fs
jnp
fstp
jecxz
mov
push
in
movs
(bad)
out
stos
lahf
je
pop
fst
loop
sbb
loop
imul
cmp
push
enter
xor
mov
dec
fisub
mov
pop
popa
idiv
jmp
sbb
les
retf
clc
xchg
xchg
mov
mul
rcr
jbe
call
(bad)
mov
or
adc
test
sub
mov
fild
push
xchg
retf
jo
(bad)
jg
fcomp
in
enter
xchg
rcl
dec
jae
rol
cmps
sbb
xor
daa
mov
iret
cmp
add
xor
ror
lahf
inc
lock
scas
lock
outs
pop
jno
imul
adc
lahf
or
mov
rol
xchg
mov
adc
push
mov
xlat
pop
jbe
in
adc
rcl
push
es
push
aam
pop
ror
ss
jge
jbe
jecxz
sub
mov
(bad)
out
xchg
ficomp
imul
nop
jg
sub
mov
inc
add
push
mov
(bad)
stos
mov
xchg
sbb
dec
dec
fist
cwde
push
sub
std
cmps
lods
inc
test
mov
cmp
leave
mov
nop
adc
sub
ds
push
out
nop
cmps
xor
lods
jp
mov
cli
in
aas
popa
imul
(bad)
mov
pop
fucomip
mov
in
lods
imul
je
(bad)
data16
out
pop
int3
and
sbb
sbb
add
xchg
dec
mov
shl
pop
dec
add
xor
loop
inc
out
sub
sub
scas
cmp
test
add
cs
add
cmps
cwde
(bad)
and
cmp
aam
in
and
cmp
mov
aam
add
std
rcl
jo
movs
xor
mul
ds
cmp
lea
imul
inc
mov
sub
outs
test
mov
enter
pusha
pop
jmp
ret
push
xchg
xchg
out
push
push
(bad)
mov
(bad)
fstp
or
sbb
inc
push
(bad)
sub
cmp
in
mov
sub
cwde
cmp
push
cmp
int
fwait
pop
adc
xchg
aad
xchg
sub
es
outs
scas
leave
mov
pop
dec
cmps
jge
fcmovnb
mov
imul
cdq
sub
out
adc
test
loop
xor
pop
data16
cwde
and
addr16
mov
inc
aas
outs
popf
mov
fs
dec
inc
xor
pop
std
cwde
push
jecxz
jg
mov
lea
and
mov
mov
cmps
sbb
or
mov
pop
js
push
sbb
ins
adc
jp
xor
inc
repz
pop
inc
push
iret
xchg
ret
sub
push
popf
or
xchg
xchg
aas
popa
jmp
inc
inc
mov
dec
ret
xchg
(bad)
xchg
add
and
in
sbb
aas
mov
jmp
mov
test
adc
mov
hlt
js
imul
jmp
ret
push
add
dec
jno
sbb
and
out
pop
imul
inc
dec
int
sub
xchg
addr16
pop
(bad)
xlat
or
add
push
or
cli
mov
sbb
aaa
sbb
(bad)
popf
test
cmp
(bad)
lock
cdq
fild
rcr
mov
pop
mov
retf
gs
test
mov
sub
imul
pop
sbb
mov
xchg
pushf
popf
cld
cwde
pop
jg
and
xchg
aaa
xchg
retf
int
cmps
sub
mov
les
pop
movs
xchg
jg
jb
mov
loopne
push
xor
daa
cli
inc
fwait
test
ja
mov
xchg
mov
inc
(bad)
adc
jmp
loopne
ret
pop
cwde
mov
inc
sahf
add
sub
cdq
out
jbe
jmp
arpl
cmp
sti
cmp
test
jo
bound
aaa
aam
gs
push
push
scas
inc
lock
sar
in
xchg
lods
lds
pusha
int3
ins
das
or
pop
mov
sbb
sahf
jl
dec
mov
(bad)
(bad)
jecxz
clc
test
dec
cwde
pop
mov
jne
shr
xchg
dec
xchg
mov
mov
repnz
add
sub
in
or
enter
aaa
push
xchg
(bad)
(bad)
mov
adc
push
jmp
push
push
cld
push
js
mov
and
sbb
fst
cmp
sahf
sub
sub
pop
stc
dec
out
pop
scas
push
mov
shl
test
jb
repnz
pop
inc
pushf
xchg
push
xor
into
call
push
jbe
call
popf
push
sub
and
or
jge
fistp
add
scas
dec
loopne
and
into
ret
add
jmp
out
aam
sbb
or
sub
repnz
movs
mov
fist
add
(bad)
fldcw
repz
mov
cwde
and
xor
mov
ins
jecxz
in
jmp
dec
imul
ret
cmp
les
shr
cmc
mov
scas
add
test
cli
scas
xchg
jg
shl
lock
dec
adc
aas
jo
or
push
aad
mov
ret
mov
test
sbb
add
xchg
sbb
fidiv
push
cmp
scas
dec
fbstp
adc
rcr
leave
sub
inc
jmp
cmps
cli
sbb
xchg
ja
xchg
ja
aas
fiadd
mov
add
dec
sub
pop
jg
lds
mov
pop
loope
ret
je
addr16
xchg
fcom
jb
push
std
xchg
out
mov
scas
jge
pushf
xchg
mov
jno
fisubr
inc
(bad)
(bad)
dec
popa
iret
in
and
inc
aaa
push
gs
dec
and
ja
xor
stc
js
icebp
and
dec
nop
pop
loope
cmc
mov
mov
lods
jg
std
int3
sub
ret
sub
push
jmp
mov
dec
or
dec
cmp
test
xchg
cld
xlat
push
pop
adc
into
(bad)
jb
daa
jnp
inc
test
retf
icebp
leave
cmps
int
leave
out
lods
out
dec
add
gs
loopne
lods
ins
pop
int
push
test
xchg
and
repnz
in
sub
cmc
jg
inc
in
inc
cmp
mov
lods
retf
add
xor
sti
mov
(bad)
clc
inc
xlat
mov
cmp
mov
pop
fld
mov
or
push
cmpxchg8b
mov
dec
jg
clc
pop
add
scas
ja
outs
pop
xchg
inc
push
inc
ja
jmp
inc
or
sbb
pop
xchg
sbb
inc
cmps
xchg
retf
call
das
mov
inc
(bad)
repz
into
xlat
xchg
mov
push
(bad)
pop
outs
fisubr
xor
mov
jne
push
inc
jb
add
retf
fld
rcr
jae
inc
ja
out
ror
jnp
jo
fst
inc
loop
cmp
xchg
mov
aad
out
push
rol
call
pusha
sub
ss
pop
sub
dec
les
cdq
xor
mov
xchg
retf
jg
ss
inc
push
push
xor
and
rcr
jae
aaa
xchg
jmp
mov
(bad)
mov
jb
xchg
fmul
mov
call
inc
(bad)
inc
cld
imul
sti
sbb
js
dec
popf
fild
push
sbb
mov
(bad)
dec
mov
add
sub
mov
jmp
mov
mov
cli
ror
(bad)
aad
add
cld
scas
cmc
pusha
dec
inc
ins
push
mov
pushf
call
and
in
sti
cld
dec
dec
retf
lods
push
shl
cmp
sub
xor
shl
mov
mov
mov
mov
std
dec
pop
push
stos
sbb
push
xchg
push
jg
cmps
enter
push
retf
mov
repnz
inc
jnp
jno
(bad)
xor
cs
cmp
leave
dec
(bad)
js
(bad)
repnz
adc
mov
jle
fidivr
cmc
inc
call
or
dec
mov
out
mov
or
lods
sub
into
(bad)
pop
imul
xlat
icebp
push
adc
jg
les
jmp
push
add
in
sub
sub
icebp
sbb
rcr
adc
std
cmps
leave
or
fisubr
xor
push
in
cld
out
cmp
mov
push
cmp
repnz
fxch
xchg
push
or
inc
es
div
pop
pop
mov
cwde
push
imul
data16
sub
or
jp
call
(bad)
cmp
cmps
cmc
sti
pop
add
cmp
cli
cmp
popa
lea
pop
dec
movs
cmps
cdq
(bad)
and
cmp
pop
ja
jmp
inc
clc
fdiv
add
mov
(bad)
imul
lahf
shl
daa
inc
xor
pop
(bad)
ret
hlt
pop
loop
xchg
push
pop
adc
xchg
ds
or
mov
xchg
cmp
sbb
mov
aad
sar
dec
jmp
sub
cmp
sbb
sub
mov
jg
fld
test
cli
dec
push
pop
repz
mov
adc
add
pop
jb
sub
(bad)
(bad)
xlat
aad
add
fstp
mov
mov
test
out
xchg
pop
xchg
cmc
addr16
movs
pop
fsubr
shl
loopne
mov
fwait
xchg
adc
mov
jne
pop
cmps
out
pop
pop
adc
mov
fwait
adc
test
cld
mov
inc
xchg
or
test
test
retf
ins
or
ds
clc
adc
into
dec
xchg
out
sidtd
into
push
outs
inc
ret
xchg
nop
loop
rcl
popa
adc
pop
cmp
xchg
add
pop
cmp
fbstp
jnp
jb
sbb
jmp
(bad)
hlt
push
mov
ror
mov
sti
shl
mov
push
test
push
cmps
jle
jbe
test
daa
icebp
ja
cmc
xor
shl
stos
sbb
ja
push
mov
mov
popa
data16
add
lods
ror
shl
jnp
mov
xor
inc
push
imul
push
pop
pop
bound
add
out
jle
sub
pop
lock
pop
enter
jae
fcmovbe
jmp
add
jg
push
and
sbb
lods
mov
and
loope
arpl
sbb
dec
mov
ret
(bad)
shr
pop
aaa
and
dec
ret
and
sbb
xchg
xor
mov
imul
jbe
or
ret
mov
sti
nop
(bad)
mov
push
mov
xor
in
test
jmp
enter
mov
in
pop
sbb
pop
popa
iret
je
pop
fsubrp
xor
xchg
adc
(bad)
(bad)
fild
loopne
cmp
out
mov
mov
mov
ja
push
in
scas
fwait
cdq
pop
sub
mov
jmp
xlat
jmp
adc
js
pop
mov
xlat
imul
mov
cdq
push
push
cmp
inc
stos
retf
cmp
int
outs
jb
mov
mov
push
(bad)
mov
mov
mov
js
sub
jle
sar
in
mov
jne
add
xchg
mov
cmp
ins
dec
cmp
adc
out
jecxz
(bad)
pop
push
in
cli
push
shl
ret
fld
inc
mov
mov
imul
push
(bad)
out
in
inc
push
xor
outs
xchg
jge
mov
retf
sbb
pop
cs
cld
xor
xor
pop
push
mov
cmp
ror
(bad)
fld
push
xchg
out
cwde
aam
xchg
out
push
cmp
std
push
bound
dec
sbb
pop
mov
mov
and
mov
(bad)
mov
stc
cmp
retf
sti
(bad)
jnp
int3
mov
pushf
outs
sbb
and
in
mov
or
lods
enter
call
jp
sub
lods
push
sar
stc
dec
test
jno
xor
(bad)
in
(bad)
dec
aad
clc
retf
xchg
adc
out
test
ss
mov
iret
push
enter
in
or
ins
cmc
push
inc
aad
sbb
outs
inc
sbb
push
mov
js
or
into
pushw
out
pop
fisttp
mov
xchg
jb
mov
mov
lea
mov
jmp
xor
fild
cli
(bad)
xor
hlt
aaa
pusha
fsub
test
add
jmp
ins
xor
xor
(bad)
dec
lea
cmp
mov
out
clc
pop
add
ds
inc
mov
push
mov
mov
mov
mov
aas
imul
mov
or
mul
sbb
fstp
scas
je
dec
mov
xchg
inc
into
add
mov
addr16
(bad)
mov
hlt
xchg
es
adc
pop
loope
sub
inc
out
cmp
lock
mov
jns
adc
addr16
scas
jmp
jne
dec
aaa
add
xor
je
clc
sti
(bad)
xchg
pop
inc
arpl
xchg
sub
or
and
mov
pop
in
push
movs
loope
(bad)
clc
movs
push
stos
push
in
sbb
shl
fld
inc
rcl
fdivr
mov
sub
dec
xor
xchg
add
adc
(bad)
dec
dec
cmp
aad
outs
sbb
xchg
sub
iret
mov
mov
jb
loop
push
jecxz
and
jb
inc
lock
dec
bnd
outs
sbb
push
jb
arpl
lods
sub
int
inc
add
jbe
sbb
call
sub
fcmovnu
push
push
imul
out
imul
daa
or
mov
pop
pop
xor
inc
call
mov
or
mov
xchg
loope
gs
push
pop
mov
leave
push
mov
div
jecxz
push
mov
dec
test
sti
pop
xor
test
inc
pusha
int
mov
out
popa
mov
ds
aas
mov
cmp
scas
bound
and
add
hlt
into
fmul
or
add
fiadd
push
xor
xchg
pop
sub
and
in
xchg
pop
mov
leave
test
jbe
int
and
jae
lods
cld
pop
inc
ret
cdq
(bad)
mov
jmp
sbb
add
sub
es
pop
and
neg
dec
push
mov
popa
sbb
or
pop
mov
pop
fild
sti
dec
xor
data16
test
or
sbb
fnsave
jg
repz
xor
and
push
mov
into
sub
stos
sub
add
jg
xchg
mov
pushw
or
and
clc
pop
sbb
dec
leave
aaa
cld
mov
jl
(bad)
fstp
into
jge
and
test
dec
or
mov
into
dec
sahf
daa
cwde
fnsave
add
push
xchg
mov
(bad)
fcomp
push
sub
int
adc
jo
pop
mov
xchg
or
dec
stc
inc
movs
rcl
jmp
add
pop
movs
fdiv
idiv
int3
mov
and
lods
xchg
mov
xchg
mov
clc
retf
ins
push
pop
(bad)
jbe
jno
cmp
cmp
rcr
jg
sub
fidiv
push
lods
sbb
mov
je
and
inc
cmp
sbb
cmps
loopne
push
cmp
in
xor
fdivrp
ds
mov
bswap
fwait
in
out
or
push
mov
inc
stos
inc
cmc
neg
pop
and
rcr
push
bound
lahf
fstp
rcr
in
xchg
jno
sub
pop
loop
mov
add
movs
cmp
in
sub
xchg
fisttp
lea
pop
jmp
mov
add
sbb
fnstcw
loope
in
shl
jmp
out
adc
mov
mov
sbb
test
ins
sbb
sub
xlat
stc
lods
fstp
xchg
xchg
cmp
clc
pop
cmp
mov
mov
pop
jge
sbb
addr16
or
mov
cmp
pusha
pop
je
ror
fsub
inc
lea
mov
repnz
cmp
pop
sub
inc
sbb
dec
jns
ins
sub
es
mov
arpl
out
outs
sbb
fs
in
xor
inc
push
push
mov
outs
jnp
aad
xor
hlt
mov
mov
das
rol
mov
adc
or
test
pop
mov
or
adc
fimul
clc
loope
push
imul
sbb
push
jae
xor
or
dec
jmp
inc
popa
sub
std
pop
lods
xchg
jle
mov
arpl
mov
sub
mov
inc
clc
push
push
jb
mov
xchg
add
dec
xor
sub
dec
sub
fnstenv
xchg
xchg
cwde
inc
push
sbb
pop
cmp
cwde
sbb
xchg
stos
out
cs
scas
lods
(bad)
xchg
sahf
pushf
into
test
lahf
jno
mov
(bad)
sbb
jns
xchg
aad
repnz
fwait
add
or
add
push
cmps
test
loop
mov
mov
sub
dec
or
lods
(bad)
iret
cmp
mov
jg
pop
fwait
adc
cs
ss
add
push
or
hlt
jb
(bad)
fs
cld
fisttp
fimul
dec
dec
cwde
dec
lods
popa
and
add
fisub
dec
fild
xor
repz
test
lds
cmp
cmc
rol
pop
icebp
repz
call
in
lds
cld
inc
mov
inc
sbb
sub
inc
repz
jmp
popa
xlat
shl
pusha
(bad)
data16
int
sub
jae
call
cmp
xchg
scas
repz
push
cmp
inc
adc
cld
jge
dec
or
test
xor
lds
mov
arpl
mov
adc
push
adc
pop
sbb
push
sbb
das
inc
neg
mov
clc
shl
shl
xor
call
into
loop
push
mov
pop
push
icebp
cdq
inc
outs
pop
lods
out
dec
xchg
out
push
lea
jb
pop
cmp
and
adc
jmp
sbb
out
sbb
(bad)
sub
or
sbb
mov
mov
daa
sar
aad
test
and
aas
bound
adc
repnz
cmps
add
dec
js
jbe
mov
cld
cmps
mov
es
rcr
mov
sar
and
ret
adc
sub
mov
sbb
mov
push
cmp
pop
add
sbb
cmps
popf
cmp
xchg
clc
fs
dec
jecxz
push
add
stc
cwde
xor
and
shl
lods
sbb
xor
in
fbld
sti
popa
push
pop
imul
xor
lds
dec
sub
mov
inc
and
iret
pusha
in
or
out
mov
jno
std
call
xchg
daa
pop
in
sbb
and
repz
jns
jle
push
mov
popa
int3
aas
sub
or
xlat
ret
js
test
mov
jge
mov
push
pop
stc
popa
push
or
xor
mov
push
sbb
pop
fucom
add
pop
adc
mov
ja
mov
xor
inc
retf
inc
push
dec
sbb
dec
pop
retf
jl
and
cmp
test
out
add
mov
imul
inc
xchg
clc
call
adc
mov
mov
jno
mov
push
mov
sbb
mov
add
mov
sub
sub
inc
es
mov
sbb
imul
mov
cli
inc
mov
ins
mov
lahf
outs
mov
retf
sbb
add
push
jp
imul
int3
(bad)
sub
or
retf
clc
cld
fmulp
mov
mov
mov
cdq
call
dec
jecxz
jae
shl
es
adc
cwde
test
nop
sbb
fidiv
mov
xor
mov
dec
aam
cmp
mov
jbe
jo
xchg
int3
lods
test
pusha
sub
sub
jg
pop
cmp
mov
lea
mov
fld
sub
jle
fwait
bound
mov
push
sbb
addr16
mov
nop
cli
dec
stc
loop
dec
dec
ds
fidiv
addr16
js
adc
sbb
ficomp
loop
add
mov
pop
out
mov
adc
inc
retf
rol
inc
pop
sbb
jmp
or
mov
cwde
(bad)
fst
xor
cwde
(bad)
push
shr
scas
mov
jb
inc
push
mov
sbb
jae
movs
xchg
test
and
sbb
call
outs
xor
mov
iret
lods
xchg
iret
dec
popa
fsubr
and
stos
mov
les
aaa
xor
shr
loopne
jmp
mov
or
sbb
jecxz
mov
(bad)
push
mov
(bad)
loopne
mov
loope
inc
xor
sub
out
jbe
jmp
fcomip
sti
xchg
fbstp
and
sbb
ror
test
and
pop
inc
pop
mov
jno
cli
in
dec
(bad)
inc
mov
push
cmp
jle
sbb
sbb
dec
or
pop
sub
repz
push
sbb
jnp
adc
out
sahf
js
mov
pop
push
mov
mov
sbb
(bad)
cmp
mov
pop
push
mov
movs
fldl2t
push
test
ins
(bad)
and
loop
or
pop
mov
cmp
jmp
lea
jle
fwait
mul
lea
aas
in
add
dec
jp
add
fisubr
push
jge
jmp
in
mov
jecxz
push
imul
jo
fwait
dec
inc
movs
mov
sub
add
outs
cdq
cld
and
jno
loop
and
test
fild
enter
add
jmp
or
mov
ja
mov
sbb
xor
push
cs
cmp
sbb
dec
fbld
xor
ins
mov
mov
fild
leave
dec
push
push
jo
mov
(bad)
daa
repz
icebp
shl
mov
inc
mov
xchg
test
je
addr16
popf
or
inc
int3
leave
push
jns
xor
dec
hlt
cmc
(bad)
push
arpl
cwde
sub
add
ja
call
movs
dec
jmp
pushf
pop
mov
sub
lods
pop
or
sub
arpl
int3
mov
into
jae
push
imul
jl
into
popa
pop
pop
cli
dec
mov
pop
test
cli
dec
mov
mov
in
adc
inc
pop
or
(bad)
push
nop
loop
or
mov
daa
rcr
mov
adc
lea
add
pop
loope
dec
xor
adc
sbb
inc
mov
dec
cmp
cmp
scas
lea
pop
scas
std
push
jl
or
jmp
mov
test
mov
popa
pop
cs
ins
fsub
icebp
or
jnp
xchg
xor
lea
pop
push
sub
push
out
adc
mov
shl
dec
daa
out
(bad)
lods
jne
jl
pop
test
pop
xchg
pop
cmp
and
sub
adc
ja
out
pop
jge
push
cld
cmp
add
dec
xor
push
int3
loop
pop
cli
ret
inc
xchg
sub
cdq
out
scas
add
push
int3
pusha
stos
leave
sbb
stos
adc
adc
xchg
jnp
enter
icebp
mov
in
fld
(bad)
in
sbb
das
dec
lods
scas
xor
inc
jo
aas
aad
lds
add
mov
add
or
dec
mov
add
or
mov
not
loopne
and
bound
ret
xor
push
(bad)
mov
dec
inc
je
test
dec
sub
shl
pusha
xchg
enter
cmps
movs
(bad)
inc
retf
push
push
adc
jg
push
pop
stc
lahf
in
xchg
jle
and
jge
out
(bad)
mov
mov
sub
inc
jb
mov
fist
pop
shr
push
shl
adc
stos
pop
or
push
xor
retf
stos
sub
jmp
rol
fadd
mov
push
mov
scas
das
aaa
jge
jbe
mov
ds
(bad)
cli
inc
ss
mov
lea
mov
or
mov
imul
cmps
mov
add
push
pop
fiadd
pop
inc
ficomp
jae
(bad)
adc
fwait
dec
nop
pop
mov
or
jno
or
pushf
xor
div
jmp
sub
daa
mov
fisttp
aam
mov
stos
call
out
sub
push
inc
rcr
mov
mov
nop
(bad)
sahf
js
mov
pop
arpl
out
inc
add
cmp
fwait
mov
and
inc
push
xchg
loope
adc
imul
fs
das
test
mov
inc
int3
(bad)
dec
jecxz
push
jg
and
aad
jb
cwde
jns
dec
xchg
outs
into
add
adc
push
jae
jge
pop
dec
loop
push
push
jecxz
nop
scas
adc
cli
mov
les
pop
fcomp
xor
mov
jmp
fidiv
xchg
pop
or
dec
sbb
fistp
fwait
cwde
dec
cmps
xchg
dec
pop
in
adc
xor
add
dec
sub
adc
mov
out
enter
aam
movs
jle
fidivr
xor
xchg
sbb
push
xchg
dec
les
push
ret
jle
xchg
xchg
clc
scas
imul
mov
mov
ss
jp
add
imul
mov
jb
int
mov
adc
dec
sahf
cmp
mov
push
jmp
cmp
xchg
ins
loope
pop
cmp
cwde
push
sbb
fdiv
mov
sar
or
xchg
(bad)
fucomip
mov
stc
and
sahf
pop
lods
xlat
fstp
mov
push
cmc
mov
push
movs
int
mov
mov
dec
sbb
mov
sbb
mov
push
or
pop
xchg
stos
adc
popa
cmps
cmp
sahf
popf
dec
xchg
push
in
cmp
cmp
sbb
fcom
inc
cmp
in
xor
(bad)
jmp
int3
push
mov
dec
sbb
ds
sbb
into
mov
int3
ds
gs
or
sub
mov
dec
scas
xchg
test
in
push
imul
add
or
repz
(bad)
mov
add
mov
mov
stos
stos
add
dec
fsubr
push
(bad)
retf
arpl
dec
dec
popa
lock
loopne
push
pop
cdq
sub
pop
xchg
fnstcw
pop
retf
pop
push
out
mov
imul
xor
push
mov
cmp
jbe
icebp
(bad)
in
outs
push
xor
or
int3
iret
mov
xlat
and
xchg
icebp
and
scas
dec
fisubr
lods
nop
cmc
jp
outs
lock
mov
(bad)
mov
jg
fbstp
cwde
sbb
sahf
mov
sub
xor
dec
imul
jno
sub
or
pushf
and
xchg
arpl
mov
pop
or
and
daa
cmps
sbb
ja
and
jb
int
ret
mov
adc
cwde
fistp
pop
pushf
and
cmp
xchg
lods
aas
pop
sub
mov
and
ret
pop
ja
xchg
imul
xchg
iret
popa
xchg
lods
dec
jno
fdiv
jl
xor
ja
mov
add
nop
inc
pop
cs
and
mov
sti
mov
inc
(bad)
(bad)
ret
push
jns
xor
xlat
xchg
bound
int3
pop
es
jb
mov
xchg
inc
push
aad
lods
int3
xor
js
xchg
and
mov
mov
dec
pop
pop
cmp
mov
mov
xor
inc
(bad)
mov
xchg
adc
retf
cld
dec
stos
mov
loope
sbb
rol
pop
xchg
and
imul
jmp
push
mov
fs
lock
js
rol
push
daa
in
jae
sub
jge
fidiv
xchg
or
imul
fndisi(8087
sti
fwait
push
jmp
inc
sbb
(bad)
aaa
mov
mov
inc
jmp
in
js
fistp
push
in
add
pop
push
(bad)
adc
loope
sar
push
sub
in
loop
in
inc
dec
nop
pushf
dec
into
imul
cdq
inc
or
inc
push
loopne
sub
fpatan
mov
(bad)
ror
xor
dec
inc
jns
mov
in
ret
mov
push
adc
mov
loope
inc
xchg
mov
adc
xchg
push
aam
xor
adc
mov
(bad)
retf
jecxz
in
js
pusha
setnp
mov
hlt
stos
das
jge
ins
or
xor
js
bound
dec
pop
mov
cmps
push
cmp
inc
in
adc
daa
push
xor
push
movs
cs
mov
push
or
pop
push
fs
dec
loopne
pop
ret
nop
mov
mov
jne
pop
push
mov
sar
cs
ja
or
add
sub
mov
dec
call
sbb
imul
sub
xor
push
mov
fnsave
in
test
adc
mov
xor
sub
ins
movs
xchg
jbe
xchg
pop
scas
stos
jg
aaa
add
in
outs
aas
movs
or
sub
ins
inc
mov
cmps
add
hlt
lds
xor
mov
(bad)
sub
and
push
or
mov
and
ss
push
adc
stos
dec
fist
adc
fsubr
loope
mov
pushf
cli
xchg
pop
inc
mov
pop
and
mov
mov
cmps
sub
sahf
sbb
dec
pop
lock
fdivr
xor
mov
sbb
inc
pusha
push
cmp
ds
cmps
into
mov
sbb
pop
xchg
sbb
inc
jl
or
push
jmp
lahf
xchg
xchg
sbb
cmp
in
sbb
adc
mov
test
mov
sbb
pop
inc
add
in
repnz
add
mov
cmc
in
jmp
mov
cmp
push
xor
dec
jae
popf
adc
inc
mov
fnstsw
jle
pushf
outs
test
mov
adc
imul
mov
call
pop
shl
pop
imul
mov
sub
ficomp
adc
mov
loop
dec
loop
movs
outs
fwait
cmps
dec
iret
sub
dec
dec
mov
mov
retf
ret
adc
gs
cmp
pusha
ins
jmp
loopne
inc
jecxz
in
push
mov
fsubrp
data16
fldcw
sar
movs
jae
or
lock
lods
pop
fcmovnbe
out
test
mov
add
ja
dec
jmp
or
xchg
addr16
imul
retf
mov
in
add
mov
rcl
add
xchg
test
stos
sti
push
scas
movs
fmul
jmp
sbb
fidivr
mov
jle
stos
ret
test
dec
scas
add
cwde
sbb
ja
cli
cmps
test
jb
push
(bad)
(bad)
pushf
push
(bad)
mov
ja
xchg
xchg
jns
jns
push
pop
sahf
lock
stc
push
dec
cwde
(bad)
jge
dec
scas
sub
push
rcl
std
movs
popf
pop
cwde
xor
push
add
mov
mov
sbb
ss
push
aam
test
shl
in
sub
push
sbb
frstor
inc
jae
cmp
jle
dec
mov
xor
xchg
push
inc
dec
jb
jnp
mov
lahf
inc
retf
dec
cmp
xor
sahf
pop
xchg
jns
repz
daa
fnsave
test
arpl
enter
sahf
push
pop
mov
scas
repz
call
pop
cwde
pop
xchg
int
pop
pop
dec
pop
push
pop
fldcw
mov
jns
mov
aad
neg
sbb
stos
xchg
lods
(bad)
fst
push
imul
loop
inc
pop
bound
test
mov
in
ja
lea
shr
call
shl
call
lahf
sti
jnp
(bad)
or
cmp
jmp
cmp
dec
inc
cli
icebp
retf
call
sbb
sbb
xchg
inc
ins
stos
(bad)
mov
cmps
fidiv
inc
adc
or
mov
add
cmc
fimul
jge
and
das
aaa
or
pop
lahf
aas
cli
xor
jo
and
mov
(bad)
or
sub
iret
cs
retf
fld
xchg
cmp
inc
mov
lahf
push
scas
push
xchg
push
mov
imul
out
mov
outs
lss
pop
arpl
jmp
cmp
stc
out
xor
cld
cmp
and
xchg
gs
imul
xor
stos
and
test
(bad)
xor
jmp
ror
adc
mov
push
cmps
lods
xchg
mov
ja
cmc
jecxz
(bad)
dec
into
out
adc
pushf
fisub
xlat
add
iret
mov
sahf
imul
dec
and
cmps
call
xchg
dec
mov
mov
data16
dec
sbb
pop
xor
cmps
xlat
test
jle
jae
cmp
add
xchg
sbb
ja
(bad)
xchg
cmp
pop
(bad)
call
pushf
inc
adc
mov
mov
jnp
(bad)
in
(bad)
and
outs
dec
mov
sub
fnstsw
(bad)
cmc
cmps
dec
sbb
mov
inc
scas
shl
mov
pop
test
std
adc
add
pop
mov
mov
mov
xor
int
inc
jns
js
pop
xor
pop
jbe
loopne
lods
out
xchg
sahf
fsub
cld
outs
or
inc
stc
outs
lds
add
xchg
jo
out
popw
clc
fist
in
arpl
das
ja
sbb
dec
mov
outs
aam
(bad)
aam
xor
dec
(bad)
mov
das
push
pop
mov
mov
mov
add
arpl
mov
inc
stos
mov
retf
mov
and
ja
and
pop
sbb
fdiv
xor
xor
(bad)
cdq
rcr
retf
sbb
adc
sub
ret
aad
imul
or
inc
mov
mov
dec
rcr
cmp
mov
(bad)
repnz
test
leave
inc
mov
scas
push
in
xor
cmp
nop
jnp
add
repnz
lods
inc
ds
clc
push
cmp
mov
popf
popf
cmp
jae
lock
ret
stc
call
adc
daa
mov
inc
adc
shl
je
push
pop
add
shr
je
ins
sbb
push
push
jp
dec
enter
mov
les
gs
rol
sub
push
inc
mov
inc
ins
push
popw
sub
push
shl
cmp
call
and
scas
cmc
dec
cvttps2pi
xor
lods
fistp
lea
cli
leave
jp
inc
test
mov
or
push
xchg
jmp
xor
inc
in
mov
(bad)
aam
bound
je
mov
or
data16
dec
retf
aas
mov
les
push
and
repz
popf
test
jae
sub
aam
mov
pop
jo
inc
je
or
inc
enter
xor
fcomp
push
mov
popf
pusha
mov
repnz
and
popf
inc
adc
cmp
and
nop
mov
leave
aam
mov
movs
pop
ins
adc
xchg
out
aam
mov
rcl
push
loope
jmp
adc
pushf
stos
popa
int
ret
xchg
cwde
das
push
add
fidivr
mov
es
mov
jns
cmp
sar
or
movs
cmp
mov
dec
jge
mov
mov
imul
(bad)
(bad)
iret
hlt
(bad)
retf
enter
test
mov
sub
dec
add
rcl
push
push
pop
xchg
jbe
mov
aaa
dec
fsub
call
mov
test
sbb
mov
mov
in
or
(bad)
or
bound
mov
arpl
cmps
nop
jg
inc
pop
nop
daa
and
movs
adc
repz
mov
test
xchg
call
or
sbb
aaa
jae
dec
pop
cmc
sahf
call
dec
jle
movs
xchg
aas
or
outs
sub
pop
cdq
cmp
xor
loopne
sbb
fsub
out
xchg
retf
out
shr
repnz
fstp
cmps
lahf
or
je
mov
xchg
dec
into
mov
rol
or
stos
scas
in
dec
or
mov
mov
int
add
out
sub
cdq
push
int3
and
jb
inc
retf
inc
mov
sub
cmps
xchg
(bad)
jmp
or
cmp
adc
neg
mov
cmp
dec
rol
call
xor
dec
dec
pop
loope
scas
dec
movs
or
sub
out
fs
popf
bound
in
pop
dec
and
dec
or
add
xchg
xor
xchg
dec
inc
sbb
sub
pusha
push
push
test
jns
jbe
(bad)
iret
bound
cmc
adc
movs
lods
aam
call
icebp
jbe
add
mov
dec
movs
outs
mov
sub
push
arpl
fdivr
or
stc
pushf
aaa
bound
aaa
push
loope
cmp
dec
add
dec
cmp
pushf
inc
out
pop
mov
leave
int
shr
adc
imul
mov
and
aas
retf
cmp
fstp
sub
popa
adc
dec
sub
inc
mov
enter
push
js
out
and
movs
popa
or
mov
mov
les
div
sub
cmp
repz
adc
pop
into
xchg
add
pop
not
pop
mov
shl
in
ret
push
mov
mov
push
pop
jecxz
dec
xchg
pushf
aam
xchg
call
push
sbb
xchg
or
test
cdq
mov
xlat
imul
adc
add
mov
inc
ficomp
mov
std
push
xchg
mov
leave
addr16
adc
stos
(bad)
gs
clc
loopne
add
retf
test
pop
pop
retf
pop
adc
in
shl
mov
or
ins
mov
fmul
mov
pop
xchg
xchg
xor
rol
xchg
scas
cmp
lock
cmp
push
push
xchg
shl
dec
and
ffreep
xchg
hlt
call
push
cmc
inc
ins
jnp
movs
test
out
cmp
shl
pushf
adc
and
inc
ret
cmps
inc
in
xor
test
mov
sub
sahf
add
mov
and
jns
leave
pop
pop
enter
mov
cmps
dec
push
ins
or
dec
jae
(bad)
sub
fwait
jnp
pop
mov
mov
pop
test
push
push
push
mov
jmp
mov
icebp
in
xor
in
popa
xor
ja
pop
adc
mov
ret
inc
std
pushf
in
cmps
inc
push
dec
push
stos
sbb
sbb
mov
in
movs
mov
mov
pushf
dec
(bad)
jno
add
mov
in
loop
shl
xor
jg
add
cmp
sub
jb
mov
mov
outs
sub
mov
sar
call
push
push
xchg
or
pop
pop
xor
lock
xor
jl
rcl
mov
jns
aad
add
(bad)
mov
cld
scas
sbb
inc
and
mov
dec
and
mov
mov
inc
cmc
add
dec
jg
jg
xchg
bound
inc
inc
inc
sub
add
mov
mov
dec
(bad)
ins
xlat
push
mov
push
mov
cdq
lods
dec
or
dec
in
sbb
pop
jne
leave
sub
push
or
js
cmc
or
jnp
xchg
mov
sbb
cmp
sbb
inc
pop
jle
add
inc
mov
sbb
(bad)
mov
int3
(bad)
arpl
mov
loop
mul
icebp
movs
inc
xor
push
pusha
inc
mov
sar
xchg
mov
or
loope
xchg
mov
xor
es
mov
or
pop
out
sbb
push
data16
rcr
jo
scas
and
and
fcmovu
aaa
js
inc
bound
out
add
fisub
jb
sar
clc
das
int
daa
rcl
push
push
dec
shr
inc
je
xor
or
in
add
mov
add
or
(bad)
xor
and
dec
into
jmp
fisub
fild
push
(bad)
loope
mov
xchg
call
mov
cmps
mov
or
jo
out
xchg
push
int
sahf
ja
test
jle
xor
or
and
cmp
jae
pusha
mov
jb
or
sahf
sti
addr16
push
cmps
or
add
pushf
enter
add
ja
test
aad
sbb
sahf
dec
add
mov
dec
mov
test
lods
jmp
ja
dec
cmp
shr
adc
aad
clc
inc
xor
mov
imul
ds
ja
or
and
push
cmp
cmp
mov
arpl
das
mov
sub
leave
dec
add
loope
and
inc
fsubp
cmp
fadd
xor
dec
hlt
shl
xchg
cmc
inc
inc
into
push
mov
cmp
xchg
add
mov
jle
fdiv
(bad)
sti
adc
lods
out
adc
and
push
cmp
mov
out
mov
xchg
mov
ja
and
cs
xor
ret
pop
push
mov
cmp
xor
dec
or
test
or
sbb
mov
les
adc
xchg
adc
mov
xor
cmps
sbb
and
ins
adc
fucom
movs
(bad)
aam
cmps
call
sub
mov
std
dec
das
xchg
dec
ret
mov
inc
xchg
adc
dec
pop
bound
inc
mov
movs
imul
imul
and
and
ins
in
push
push
lods
adc
pop
retf
ds
sar
popf
mov
add
sbb
inc
or
ficom
push
test
shl
sbb
jge
aaa
lock
xor
dec
jge
fstp
or
push
sub
cmps
in
loop
add
pop
xchg
rcl
icebp
sbb
fdivp
pop
mov
into
(bad)
fld
push
out
mov
or
stc
xor
or
dec
mov
mov
icebp
pop
in
push
int3
mov
jmp
ins
jo
or
retf
popf
in
stos
dec
arpl
or
cmc
nop
mov
mov
outs
ins
mov
pop
add
pop
pop
push
jnp
push
sbb
das
nop
jp
push
inc
call
fisttp
int3
mov
frstpm(287
out
mov
fstp
xchg
inc
dec
retf
push
ins
clc
movs
jb
in
loope
adc
daa
pop
out
xor
mov
adc
add
imul
xchg
fadd
retf
out
mov
lods
popa
pop
mov
or
shl
dec
mov
aam
test
mov
fabs
cs
stc
sub
pop
aam
iret
mov
jmp
fstp
popa
jl
inc
adc
pop
fild
addr16
inc
mov
xor
push
and
in
jg
push
pop
push
dec
cmp
shr
push
mov
lock
xchg
cs
cmp
stc
dec
into
les
add
mov
cmp
ins
adc
das
and
cdq
mov
dec
jno
mov
or
adc
fmul
das
std
and
sbb
and
pop
pop
adc
inc
add
jae
rcl
nop
sub
pop
sub
pusha
and
jl
push
aaa
addr16
cli
cmp
pusha
pop
xchg
xor
arpl
push
jg
lds
sub
add
popf
jnp
jge
ret
jg
sbb
mov
(bad)
jmpw
shld
cs
or
sbb
pop
jmp
out
jae
scas
ret
sbb
jecxz
daa
(bad)
popa
leave
pushf
neg
mov
das
adc
loopne
test
iret
pop
xchg
add
cwde
inc
xor
sub
xchg
and
fisttp
mov
adc
pop
jp
pop
mov
call
stc
jno
test
pop
cmp
pop
push
outs
sub
jge
add
les
adc
movs
imul
and
adc
shr
pop
ja
and
or
xlat
cmc
enter
(bad)
jecxz
mov
dec
sub
sahf
xchg
pop
push
dec
stos
hlt
les
call
movs
setle
adc
loope
aad
fidivr
sbb
sub
add
stos
rol
bnd
adc
mov
mov
ss
jmp
ror
cs
push
mov
and
add
and
or
mov
or
add
inc
dec
or
lea
out
inc
dec
pusha
jb
les
test
xor
rcl
ror
jb
sub
xchg
jne
call
iret
mov
stc
xchg
(bad)
leave
cmp
scas
adc
xchg
xor
iret
aam
pop
and
push
cmp
test
cwde
pushf
fild
loop
int
adc
pop
sub
sub
mov
sub
(bad)
mov
pop
xor
cli
int3
leave
test
push
or
pop
add
sbb
movs
int3
in
popf
fld
mov
enter
ffreep
(bad)
xchg
mov
adc
push
jg
lds
(bad)
lds
(bad)
xor
mov
inc
push
hlt
sub
(bad)
std
mov
arpl
in
inc
mov
xchg
inc
leave
repz
jp
mov
push
inc
xchg
es
and
dec
fidiv
cs
sbb
lods
cmp
setne
mov
or
sbb
cmps
pop
jecxz
cmp
repz
jmp
cmp
jmp
push
xlat
mov
into
cmp
jnp
cli
cwde
adc
test
dec
bound
mov
mov
adc
popa
jnp
adc
(bad)
les
scas
or
sbb
xchg
add
enter
test
outs
lods
xchg
push
(bad)
cmp
or
push
and
stc
add
dec
jnp
jbe
push
dec
pop
movs
xor
pop
add
mov
int
jmp
mov
push
pushf
div
xor
cld
sub
mov
sbb
pop
xchg
cli
movs
jne
(bad)
(bad)
rol
cmp
call
dec
lods
ins
pop
mov
cmp
mov
arpl
sbb
ret
xor
popf
xchg
retf
mov
call
dec
test
push
and
in
stos
cwde
out
inc
and
rol
add
(bad)
out
dec
dec
push
sar
adc
fwait
dec
sbb
pop
jmp
sub
ja
add
mov
adc
mov
out
add
mov
pop
rcl
and
xor
test
mov
push
inc
sub
push
xchg
repnz
mov
and
fadd
adc
xchg
lods
jl
pop
loopne
adc
shr
fmul
mov
and
adc
or
jp
iret
mov
cmp
or
fdivr
inc
and
ins
scas
xor
push
jmp
stos
ror
mov
add
pop
jno
and
add
aam
popf
xor
mov
mov
jno
adc
xor
push
xlat
inc
jbe
sub
push
pop
jb
arpl
ficom
sub
sbb
mov
out
adc
xchg
or
out
push
sbb
push
pop
inc
nop
outs
sub
movs
int
mov
mov
jns
pusha
jbe
fcmovu
aad
mov
pop
out
cmp
aad
leave
sahf
in
mov
test
or
out
jnp
cmp
pop
in
aad
adc
or
sub
lock
ja
mov
scas
push
not
push
mov
push
mov
cwde
mov
pop
je
lds
call
jnp
popa
sub
dec
call
ins
xor
outs
sti
dec
xacquire
mov
add
dec
sbb
lea
sahf
clc
fwait
sub
nop
push
popf
push
dec
xchg
mov
mov
mov
or
jge
test
mov
mov
cwde
jecxz
mov
arpl
sub
push
movs
jg
aaa
jns
in
mov
mov
xchg
cld
sar
sbb
mov
sbb
pop
pop
sbb
cmp
sub
in
xor
cli
jnp
mov
sti
mov
mov
outs
rcl
mov
xor
add
imul
sbb
mov
push
lahf
xor
out
sub
add
dec
and
add
pop
pop
inc
dec
push
ins
push
fild
mov
mov
push
add
pop
push
les
test
inc
popf
popf
cs
mov
dec
imul
jo
loop
ret
or
jnp
pop
and
rcr
sti
dec
mov
mov
sub
int
int
xchg
mov
sbb
mov
xor
(bad)
jno
(bad)
retf
fcmovnbe
(bad)
enter
cmp
jo
push
fidivr
mov
pop
dec
nop
xchg
dec
sar
popf
jmp
or
sub
mov
xchg
push
mov
out
fcom
mov
outs
cmp
dec
mov
imul
outs
mov
aam
pop
repz
adc
nop
mov
xchg
jecxz
push
cmps
sub
lock
in
inc
xor
test
xchg
pop
inc
jg
mov
icebp
popf
push
xchg
(bad)
mov
mov
mov
lea
push
cld
mov
fdecstp
fisub
ins
mov
inc
mov
pop
and
retf
push
jmp
or
std
lock
sub
scas
(bad)
and
scas
in
lods
test
lea
push
xchg
xor
jmp
into
nop
cld
sub
popf
ret
pushf
sbb
and
jo
and
push
xchg
pop
cmp
inc
jbe
fistp
fld
iret
pop
xlat
push
pushf
xor
jns
mov
sub
push
mov
pop
ins
xchg
ffree
xchg
cwde
js
sti
test
add
pop
push
jo
mov
push
mov
test
inc
jne
sti
inc
stos
sub
jl
loope
cmp
aam
dec
pop
bound
outs
test
mov
jl
xor
(bad)
popf
stos
push
call
fmul
loop
out
fs
or
mov
hlt
addr16
sub
pop
ins
outs
stos
loopne
fadd
(bad)
push
cmp
out
pushf
mov
jle
add
and
xor
cmp
(bad)
mov
jne
cmc
mov
xor
mov
out
cld
mov
push
rol
int
fst
retf
and
repnz
aam
sbb
and
leave
adc
add
or
push
ins
(bad)
inc
stc
fidiv
jp
cmp
ja
cmp
in
mov
cmc
fnsave
sbb
xchg
sbb
jmp
fs
add
leave
pop
mov
inc
mov
sbb
cmp
rol
lahf
jbe
repz
in
(bad)
sar
repnz
adc
mov
int3
out
dec
shl
sub
dec
scas
ins
jb
daa
jmp
or
in
xchg
mov
retf
stc
and
(bad)
je
cmp
(bad)
or
sahf
xchg
in
loope
jbe
cmp
inc
pop
mov
sub
stos
jmp
test
sub
daa
and
call
mov
add
stos
fimul
mov
xchg
lahf
test
push
out
dec
adc
sub
dec
ja
repnz
lahf
lahf
jle
leave
jbe
pop
loop
fcom
inc
les
jmp
dec
and
cdq
mov
sbb
les
into
sub
dec
enter
ins
mov
mov
nop
adc
mov
movs
sub
hlt
mov
fbld
xchg
and
pop
retf
out
test
stos
jmp
mov
jmp
jnp
ror
les
inc
test
inc
retf
hlt
daa
xor
sbb
jns
or
ins
(bad)
mov
lahf
push
mov
mov
mov
pop
and
fs
fwait
mov
jmp
sub
dec
dec
fisubr
add
cmp
mul
hlt
js
repz
jmp
loope
and
xor
sbb
jne
sub
(bad)
cld
sub
sub
push
push
cwde
imul
sub
jg
sub
ins
push
pop
shl
ja
popa
push
fld
jmp
sti
xor
es
cwde
pop
not
xchg
mov
pop
pop
aad
in
nop
daa
mov
ins
cwde
jmp
div
inc
mov
arpl
jae
sbb
or
cs
jp
repnz
cmp
ror
sar
jl
xchg
aad
and
and
mov
stos
lods
imul
xchg
jnp
imul
imul
mov
jl
pop
add
xchg
je
fsubr
aam
je
or
call
push
pushf
xchg
div
repz
daa
mov
sub
push
mul
fs
xchg
stos
inc
push
ror
nop
or
mov
xlat
inc
jg
pusha
xchg
ret
in
into
jle
ss
movs
sbb
push
inc
pop
clc
xor
pop
cmp
push
push
imul
in
ja
mov
ja
popf
push
xchg
cwde
jle
enter
pop
(bad)
movs
xchg
mov
jge
sub
pop
shl
lea
(bad)
stc
std
xor
repz
xchg
pop
mov
xchg
ret
fstp
repz
sub
movs
xchg
imul
sub
xor
popa
(bad)
mov
test
sbb
mov
cmp
hlt
xchg
call
mov
adc
cwde
dec
(bad)
retf
shl
movs
movs
les
jnp
loope
pop
push
dec
outs
cld
int
mov
movs
inc
jmp
lods
out
cmp
lea
xchg
aad
add
xor
mov
in
sub
xor
fnstsw
mov
mov
lods
dec
xlat
aaa
mov
arpl
add
fdivp
mov
or
or
mov
es
sbb
mov
adc
jnp
repz
mov
mov
sbb
data16
dec
cmps
push
enter
cs
or
dec
cld
outs
xor
or
das
and
xor
addr16
or
add
jnp
xor
js
inc
mov
jae
jecxz
in
fstp
lods
push
pop
sub
je
daa
ds
rcr
mov
sub
and
movs
cwde
adc
mov
sub
jns
sub
or
mov
add
lds
mov
pop
(bad)
jae
cli
loop
popa
pop
call
push
outs
idiv
cmp
(bad)
ds
lea
stc
in
jmp
push
sbb
es
mov
outs
das
xor
xchg
lods
push
sub
inc
push
adc
dec
jl
cmp
and
dec
pop
xor
jb
je
push
xchg
mov
mov
xchg
and
cmps
and
sbb
add
aaa
sbb
(bad)
fistp
mov
add
in
aad
ffreep
mov
push
cld
sub
ins
xchg
dec
hlt
and
iret
ds
push
lods
inc
dec
xchg
xchg
or
cmp
fcmovu
(bad)
scas
retf
and
repnz
pop
mov
aad
lods
pusha
cdq
ret
arpl
mov
add
add
adc
xor
push
sub
sbb
push
ja
pusha
retf
cmp
ficom
test
mov
mov
sub
sbb
xlat
out
cmp
test
pop
inc
sbb
ins
enter
imul
push
jl
mov
scas
rcl
mov
mov
clc
int3
xor
jb
outs
addr16
dec
jp
pushf
das
stc
mov
inc
adc
nop
retf
adc
bound
cld
pop
xchg
xor
cmp
mov
and
jne
imul
sti
push
sbb
inc
jae
fs
push
mov
mov
enter
mov
ss
daa
inc
jmp
cdq
jmp
push
sub
clc
push
push
xchg
aad
xlat
lahf
mov
popa
mov
inc
dec
add
jae
cmp
rcr
into
cdq
hlt
push
sub
mov
into
rol
adc
mul
mov
push
leave
enter
push
inc
lahf
fimul
retf
aad
loopne
xor
mov
sbb
and
mov
cmc
fsave
ror
mov
icebp
cmp
pop
int3
xor
aaa
lods
mov
and
jl
xchg
add
js
out
xchg
out
dec
jmp
fprem1
cmp
neg
xchg
sbb
lds
jne
imul
in
jb
sub
mov
jb
neg
and
pop
dec
dec
repz
int3
dec
sub
test
mov
xor
xchg
and
cld
mov
fisttp
jg
and
adc
(bad)
xchg
add
outs
dec
neg
inc
mov
pop
adc
leave
aad
xor
jbe
shl
jbe
xor
mov
adc
sub
jmp
mov
ss
adc
ror
push
arpl
test
cmp
and
(bad)
outs
(bad)
dec
test
hlt
rcl
imul
ins
outs
pop
das
setno
sahf
das
in
fld
push
add
rcr
sub
rcr
dec
fdivr
psubsb
dec
jmp
hlt
nop
push
mov
sub
gs
dec
mov
mov
popf
pushf
loopne
push
cmps
cs
dec
cld
jmp
lock
lods
xchg
dec
dec
adc
dec
fbld
cmp
push
add
pop
or
cmp
shr
scas
sbb
cmp
pop
push
pop
mov
imul
sub
pop
ins
cmp
ins
jmp
stc
dec
aaa
pop
hlt
push
inc
or
or
scas
cmps
jecxz
add
xchg
fld
adc
cmp
jns
mov
hlt
out
sub
mov
mov
mov
mov
fld
dec
jle
mov
push
jl
stos
clc
cmp
cmp
mov
pop
cmovs
adc
add
jne
fcmovbe
xchg
out
mov
ss
(bad)
push
pop
cdq
mov
mov
stos
push
xor
mov
jmp
pop
dec
adc
dec
cmp
xor
retf
pop
jl
ja
cwde
aad
cmps
add
sbb
imul
mov
push
jl
mov
lods
cmc
lock
xchg
cmc
pop
fwait
xchg
addr16
repz
rol
shr
(bad)
ins
mov
sbb
test
cmp
push
enter
shl
add
mov
aam
cmc
jae
pop
sbb
push
jno
or
dec
fidiv
fcom
mov
pop
xor
mov
jp
sub
pop
or
jno
xchg
mov
lock
aaa
push
pop
out
ins
pusha
mov
outs
push
sbb
inc
xchg
(bad)
inc
cmps
cmp
out
mov
inc
pusha
xor
cs
loop
jno
mov
ret
adc
rcl
cli
add
or
jge
into
mov
cmps
adc
inc
adc
std
mov
mov
mov
dec
adc
inc
mov
aaa
xor
pushf
ds
ins
scas
scas
lock
mov
pop
add
mov
add
jmp
(bad)
mov
mov
and
aas
xchg
arpl
aam
repnz
fisttp
lods
loope
xchg
cmp
mov
cmps
pop
jmp
repnz
rcr
aaa
std
add
jae
xchg
hlt
out
jle
cmp
xchg
inc
jmp
push
sbb
stos
leave
test
and
jo
pop
add
xor
pop
(bad)
ret
jbe
cmp
mov
sub
mov
sbb
sysret
or
outs
lahf
mov
cmp
add
(bad)
dec
jo
ficomp
mov
and
and
iret
pop
push
jns
mov
aaa
addr16
xchg
adc
jle
mov
clc
pop
test
mov
shr
sahf
jmp
dec
scas
dec
xor
push
jmp
or
rcl
push
bound
jno
jecxz
mov
cmp
jl
xlat
add
std
dec
xor
cmp
cmp
fwait
and
push
xchg
add
xlat
ret
mov
int3
mov
push
imul
push
mov
imul
mov
dec
inc
adc
mov
imul
mov
mov
push
test
dec
cwde
mov
jecxz
(bad)
je
dec
jmp
and
test
sub
sub
cmp
xchg
bound
sar
pop
jecxz
mov
adc
outs
jo
popa
adc
shl
mov
jmp
xor
dec
int3
mov
inc
loope
cdq
loop
stc
loop
(bad)
repz
cmp
mov
jo
(bad)
mov
mov
dec
mov
fidivr
stos
pop
sbb
and
call
in
mov
popa
mov
out
es
pop
jo
bound
ret
push
mov
test
sbb
jb
shl
int
xchg
loopne
es
pop
out
and
sbb
cmps
add
ror
jmp
pop
xlat
or
jle
cld
sub
mov
dec
mov
push
fisubr
adc
hlt
xchg
imul
in
xor
movs
cmps
enter
jmp
jno
dec
dec
es
cmp
mov
in
lods
je
jmp
cmovnp
push
test
mov
xchg
fldcw
xchg
push
mov
mov
jle
xchg
pop
(bad)
xlat
(bad)
hlt
jo
sub
jle
fnstsw
mov
cmp
push
int
call
xchg
popf
xchg
sbb
clc
fwait
push
push
scas
xchg
std
and
push
das
ins
push
(bad)
out
shl
imul
pop
push
push
aaa
xchg
rcr
mul
aam
xchg
out
mov
sub
pop
mov
cld
jmp
xchg
jbe
dec
cmp
ficomp
xchg
xchg
pop
or
aam
and
imul
cwde
inc
iret
xchg
jnp
int3
lea
cmp
stc
adc
test
xchg
jae
push
arpl
and
xchg
push
xchg
ins
xchg
jae
jb
xor
fwait
or
push
scas
push
sub
adc
ficomp
xor
cwde
jne
mov
out
or
push
push
cs
ins
(bad)
out
add
pop
sahf
xor
and
(bad)
mov
jmp
ss
add
add
xor
cld
fnstcw
aas
ret
imul
add
sti
gs
imul
or
fwait
movs
sbb
or
les
pusha
mov
ja
(bad)
mov
sub
push
in
nop
cmp
in
xchg
push
adc
mov
lds
or
dec
dec
lea
ins
inc
loopne
es
sub
std
xlat
cli
dec
jl
int3
(bad)
fnstenv
stos
test
jb
fist
sti
jg
push
dec
dec
and
(bad)
mov
aad
mov
popa
inc
jmp
jnp
cwde
enter
hlt
or
push
scas
out
xor
jae
dec
(bad)
sbb
aas
addr16
ds
movs
push
in
sub
cmp
jo
mov
addr16
retf
xchg
push
aas
push
lea
xchg
hlt
pusha
retf
adc
sub
xchg
sub
pop
enter
loop
jmp
fs
in
adc
xchg
loope
fstp
push
mov
pop
gs
cmc
pop
popf
adc
dec
mov
cwde
call
int
mov
addr16
inc
aaa
mov
and
retf
or
je
mov
pop
jecxz
dec
add
push
dec
jecxz
inc
pop
iret
dec
loope
shl
pusha
arpl
cmp
pop
fwait
sbb
add
fidiv
fdivr
test
mov
fistp
mov
pop
repnz
push
cmp
enter
jb
mov
outs
push
scas
iret
aad
xor
retf
xchg
mov
out
mov
mov
clc
cdq
jl
sbb
push
inc
jne
mov
mov
jmp
stc
repz
loope
jcxz
inc
loope
repz
lahf
and
adc
clc
inc
dec
bound
xor
cs
jmp
pushf
pop
lock
inc
jl
int3
movs
retf
test
push
xchg
sahf
cwde
pop
loope
add
jmp
push
pop
fdiv
inc
adc
push
mov
or
and
push
lock
sub
fimul
jo
popf
ins
adc
movs
inc
fisub
jmp
clc
addr16
jo
lds
inc
sbb
test
shr
lds
add
in
push
push
pop
stos
lock
lea
(bad)
nop
mov
ins
mov
xchg
or
jg
adc
test
mov
sbb
in
cmp
into
mov
out
pop
adc
xor
inc
sub
sub
outs
push
cmp
inc
jbe
or
in
cmps
or
cmp
dec
and
popa
enter
mov
in
lahf
adc
fwait
jmp
or
fs
out
iret
mov
jecxz
enter
jmp
iret
mov
js
mov
sbb
jmp
and
mov
push
add
or
bound
jno
mov
fisubr
and
in
inc
fbld
jmp
mov
push
js
jo
ja
jmp
test
mov
cmp
fcomp
imul
jb
inc
dec
inc
cmp
or
test
mov
jbe
mov
mov
mov
xchg
add
test
es
pop
js
lods
xor
inc
xor
arpl
pop
nop
push
and
inc
repz
pop
ins
and
ds
push
dec
add
push
push
rcr
xchg
sbb
retf
cmp
xchg
inc
add
pusha
imul
out
sbb
cmp
imul
cmp
std
mov
fnstenv
cmp
cs
mul
cld
xchg
push
enter
push
test
pop
add
pop
xchg
test
sti
clc
dec
dec
and
or
mov
(bad)
pop
cmc
cdq
sbb
rol
ficom
xor
dec
mov
jge
adc
stc
cmp
pop
and
js
xchg
lea
mov
inc
fbstp
cmp
jmp
stos
xchg
mov
mov
sbb
(bad)
xchg
jnp
mov
mov
dec
(bad)
mov
inc
xor
mov
fsub
and
sbb
rcl
shr
les
dec
pop
inc
nop
pop
popa
lds
mov
pop
dec
jg
fdiv
je
pop
push
fldcw
push
sbb
adc
xchg
and
xchg
pop
aas
enter
mov
retf
pop
inc
sub
pop
cmp
mov
shl
fisttp
mov
inc
fisttp
push
and
or
mov
jge
dec
mov
cld
and
pop
(bad)
(bad)
cmp
pushf
push
pop
adc
xlat
and
xchg
and
in
jge
movs
inc
or
dec
nop
mov
cmp
fisubr
add
pop
jmp
test
sbb
pop
adc
jp
fsubr
jne
sahf
sar
push
push
mov
pusha
cmps
fcmovb
lahf
or
movs
(bad)
fwait
mov
cmps
mov
xchg
mov
push
sbb
mov
call
xlat
movs
push
mov
pop
js
sti
(bad)
mov
xchg
pop
aaa
jg
outs
pushf
fwait
mov
mov
adc
add
test
test
xor
add
daa
stos
xchg
mov
je
cmp
add
add
and
or
cmps
cmp
push
repz
adc
pop
ja
(bad)
sbb
(bad)
sbb
and
sub
xor
and
cmp
les
xchg
sti
mov
pop
mov
fnstcw
push
repz
push
shl
push
sub
xlat
inc
jae
je
cmps
mov
cdq
pusha
jnp
in
cli
adc
cmp
in
dec
ss
dec
adc
call
repz
mov
dec
inc
sub
imul
dec
mov
push
xchg
aas
or
(bad)
int
cwde
outs
jmp
dec
js
iret
movs
(bad)
push
lock
test
mov
mov
in
add
arpl
mov
repz
push
es
repz
aaa
ss
aad
call
movs
pop
shl
cmps
mov
mov
or
fld1
or
mov
les
xor
cmp
add
out
xchg
jp
dec
shl
add
les
pop
inc
xchg
(bad)
mov
jbe
inc
cmp
jmp
mov
mov
inc
lods
mov
lock
sahf
sahf
es
sub
or
jl
call
lds
xchg
add
test
inc
jo
sub
pop
adc
aaa
repz
retf
fs
add
test
cld
aas
aad
cmp
addr16
xor
iret
or
cmp
jbe
cdq
mov
std
jne
or
push
sub
xchg
sbb
mov
(bad)
pop
add
jle
(bad)
sbb
imul
jno
add
jp
ja
pop
rcl
cmps
sbb
mov
out
mov
and
push
cmp
cmp
call
adc
dec
sbb
xor
fmul
or
mov
xor
and
inc
ds
fild
jmp
cmp
dec
mov
cmc
clc
add
ins
jg
pop
mov
repz
xor
rcl
mov
cli
out
nop
jmp
movs
cmp
pop
call
inc
outs
scas
xchg
cwde
jnp
enter
add
(bad)
sti
push
loopne
clc
test
mov
cld
xor
pop
cmp
xchg
mov
jno
ins
fs
jg
call
mov
jmp
retf
pop
pop
pop
add
push
test
bound
cmp
jg
inc
mov
xchg
add
cmp
loop
movq
sub
push
cmps
daa
cdq
leave
and
mov
jge
lea
mov
test
sub
push
icebp
adc
sar
std
(bad)
mov
rol
add
sahf
jge
les
inc
test
scas
sub
jl
cmp
pop
sti
xchg
xlat
cmps
das
call
stos
fwait
and
mov
pop
add
adc
adc
dec
push
(bad)
and
scas
or
cmps
xor
pop
test
add
imul
dec
jnp
jns
sub
stc
sti
mov
inc
ja
or
and
and
push
sbb
cmp
sub
fsubr
mov
lods
or
or
dec
cmp
adc
cmc
cmps
push
loop
adc
fs
clc
mov
xor
mov
call
push
push
add
dec
lock
dec
(bad)
loopne
lea
inc
xchg
pop
mov
inc
bound
xor
fiadd
xlat
xor
jl
xor
imul
add
repnz
add
hlt
inc
out
xchg
jecxz
sbb
push
jle
loope
les
adc
pop
mov
scas
outs
pop
cmc
icebp
mov
push
fidivr
inc
ja
sub
inc
push
(bad)
(bad)
into
xor
xchg
sbb
outs
in
(bad)
xlat
gs
add
dec
shl
jge
rol
fcomp
pop
in
jg
leave
int3
jmp
mov
jmp
movs
or
jge
(bad)
pop
pop
sbb
jp
or
ja
iret
nop
jmp
jmp
dec
je
imul
pop
stos
sub
std
dec
cld
jmp
jecxz
add
js
popa
pop
pop
std
and
mov
jmp
shl
out
inc
out
jge
cmp
and
jp
mov
cmc
push
or
fs
push
call
addr16
mov
xchg
(bad)
xchg
dec
cld
out
dec
(bad)
js
xor
dec
fild
sbb
in
add
push
or
test
add
xchg
jmp
jo
sar
jbe
pop
pop
sbb
or
push
push
jmp
sbb
clc
dec
add
xchg
push
and
xchg
pop
in
mov
jmp
fs
imul
repnz
scas
or
retf
adc
and
out
syscall
clc
div
mov
aaa
push
aad
push
das
mov
jmp
cmp
into
fnsave
adc
xor
jle
shl
push
add
push
ss
push
add
mov
call
loop
into
sbb
inc
xchg
sti
out
push
dec
dec
mov
sbb
and
push
pop
or
sub
pop
cld
cmp
xchg
rol
inc
adc
(bad)
stc
cmp
push
ins
int3
mov
push
data16
jnp
das
jo
jmp
mov
bnd
dec
push
cmc
fidivr
movs
pop
mov
cmps
xor
scas
call
mov
jo
mov
and
test
leave
(bad)
mov
add
ss
stos
fnop
sub
rcr
(bad)
in
clc
dec
push
enter
inc
and
movs
iret
and
cdq
rcr
shl
mov
repz
ret
xor
sbb
cli
push
in
push
sar
clc
mov
push
lds
cmp
cmp
jp
daa
outs
jb
cmp
(bad)
jb
push
and
mov
inc
pop
fnstsw
lock
jmp
int
jb
fmul
stos
dec
xchg
shl
test
addr16
dec
mov
(bad)
retf
movs
ror
or
or
movs
shr
mov
mov
repnz
in
fild
dec
call
jp
jne
dec
and
loope
dec
(bad)
nop
or
push
and
cmp
je
or
mov
xlat
fisub
or
pusha
jne
jl
jne
pop
stc
and
push
cmp
cmps
test
cmp
outs
stos
js
(bad)
xor
popa
xor
fcom
daa
fst
jb
pop
repz
xchg
mov
sbb
jnp
ret
add
dec
iret
inc
cmps
jae
push
add
stc
out
sti
cmp
inc
mov
mov
fild
sbb
adc
pop
cmps
cdq
lea
xchg
call
mov
and
jecxz
test
xchg
xor
(bad)
rcl
cmp
push
jg
or
aam
sbb
(bad)
and
(bad)
hlt
fisubr
add
push
push
add
add
sahf
dec
mov
adc
xchg
or
loop
in
dec
popa
pop
ins
loope
mov
jae
cmp
out
fdiv
sar
pop
push
dec
jne
icebp
imul
imul
jne
cmp
(bad)
out
das
cmp
pop
popf
pop
ss
mov
ds
pushf
mov
and
cmc
in
mov
mov
aam
dec
jo
jns
es
push
push
jmp
xor
add
jae
icebp
mov
(bad)
mov
jecxz
mov
lods
add
xchg
lea
cmps
push
ret
arpl
adc
rcl
fadd
push
mov
call
cmp
mov
clc
or
dec
outs
inc
adc
shl
lea
scas
sub
xchg
gs
pop
dec
and
xor
mov
(bad)
push
pushf
jnp
cmps
mov
add
jle
pop
inc
mov
aas
popf
xchg
sbb
xchg
sub
leave
call
adc
jns
loop
call
ss
paddb
pop
clc
mov
xchg
jg
neg
mov
xchg
dec
adc
int
call
push
push
mov
test
iret
adc
mov
fild
fnsave
std
or
into
xchg
cs
jae
jmp
out
std
dec
(bad)
loope
in
in
mov
cmc
test
mov
in
cmp
bound
add
retf
fdiv
(bad)
jge
retf
(bad)
js
aaa
jge
in
pop
mov
cmps
xchg
add
scas
sub
dec
add
pop
cwde
iret
popa
sub
ja
xchg
test
add
sub
(bad)
(bad)
add
adc
call
pop
movs
lods
pop
fistp
sbb
or
jne
dec
dec
ror
mov
dec
cmp
(bad)
push
out
mov
shr
mov
sub
cmp
jecxz
bound
enter
movs
jp
mov
mov
fs
inc
ss
jmp
loope
(bad)
pop
mov
pop
shl
imul
and
mov
inc
mov
sub
(bad)
adc
(bad)
adc
ret
lahf
out
push
ret
xor
in
or
mov
test
cmc
in
sbb
jae
loope
dec
cmp
jo
shl
adc
sbb
xchg
cs
in
jmp
pusha
push
inc
ds
and
fiadd
xchg
les
aaa
movs
pop
call
cdq
sbb
loop
jno
imul
out
pop
mov
lods
add
adc
or
leave
out
pop
(bad)
ret
cmc
aas
popf
or
scas
outs
ret
ror
xchg
lock
mov
xchg
in
push
push
sub
or
xchg
xchg
add
add
xchg
sbb
aad
push
ret
test
adc
mov
repnz
jae
je
call
dec
push
shl
mov
lds
mov
jmp
pop
rdseed
dec
ret
call
inc
xlat
jnp
mov
adc
ret
xchg
fxch
loop
or
lea
lds
cmps
std
or
jle
or
pop
outs
(bad)
pop
jnp
dec
xlat
lods
(bad)
push
or
mov
das
(bad)
adc
call
out
nop
pop
or
popf
mov
mov
sti
jbe
sub
lock
jge
xchg
jl
sub
sahf
xchg
outs
push
rcl
inc
mov
(bad)
fsub
adc
lods
es
cwde
sahf
leave
xor
xchg
jno
jmp
add
jl
je
(bad)
xchg
and
hlt
mov
stos
inc
jg
lea
pop
fld
push
(bad)
das
push
fld
(bad)
int3
clc
(bad)
ins
and
sbb
dec
fsubr
and
mov
clc
in
pop
jmp
sbb
in
xchg
add
mov
repz
cs
lock
ficom
xor
xor
jg
adc
stos
(bad)
cwde
jge
jg
mov
xor
mov
jne
lods
push
jae
sub
sub
xchg
or
ins
push
or
sti
xchg
mov
sbb
int
push
ret
pop
mov
out
xchg
jl
push
ret
sbb
sbb
jp
pusha
xchg
movs
int
and
ret
sbb
arpl
jo
cli
dec
call
(bad)
adc
sub
cdq
inc
cli
mov
or
jb
mov
rol
xor
xchg
dec
stc
or
outs
inc
enter
mov
and
push
or
push
sub
sar
sub
push
aad
vpavgb
inc
add
adc
jp
gs
sbb
in
sub
push
enter
test
loope
dec
lock
shr
or
sbb
xor
hlt
inc
test
inc
jge
shr
pop
sub
cli
cmp
js
das
xor
test
(bad)
xchg
jmp
mov
add
push
(bad)
mov
mov
pop
mov
cmp
sbb
repnz
outs
sub
push
sub
ret
fwait
and
sub
mov
jl
lods
cmp
stos
popf
mov
cmp
addr16
pop
dec
mov
lds
adc
adc
dec
int3
ins
dec
or
inc
nop
xor
mov
ret
fst
daa
cmps
pop
xchg
ficomp
or
pop
mov
xchg
dec
out
inc
shl
mov
pop
cmp
aaa
lods
inc
addr16
pop
and
jne
movs
mov
sbb
add
add
movs
or
jle
ja
out
push
and
fsubp
pusha
lds
sti
push
loope
repnz
push
xchg
mov
or
cmp
(bad)
into
cmp
movs
pop
xor
shr
jmp
cld
pop
lahf
test
cmp
mov
fidiv
inc
(bad)
stos
inc
fld
dec
push
cmps
aad
or
imul
dec
mov
cmp
loop
fnstenv
xchg
jb
(bad)
xor
sar
pop
adc
or
int3
or
std
cs
mov
lds
popf
icebp
sar
pop
and
retf
into
sub
adc
retf
(bad)
jl
xchg
test
das
xchg
lock
mov
(bad)
xchg
xchg
sub
outs
ds
inc
shr
and
addr16
(bad)
(bad)
push
add
cmps
mov
out
cwd
inc
sahf
pop
jge
mul
mov
cmps
xchg
sbb
test
outs
mov
xor
fwait
test
push
and
popf
mov
std
pop
dec
push
leave
cmp
inc
das
les
idiv
popa
sub
pop
frstor
mov
mov
pop
cmps
(bad)
int
je
sahf
or
adc
aam
cs
cmp
xor
inc
scas
arpl
mov
fdivp
push
push
push
add
sbb
sub
xor
xchg
clc
in
dec
out
fimul
add
push
jl
hlt
cmps
jl
adc
nop
leave
cmp
add
in
popf
dec
dec
or
scas
mov
pop
mov
sub
mov
or
sub
repz
cmp
xor
fimul
push
fs
imul
ret
dec
shl
or
xchg
in
sti
push
ja
addr16
mov
arpl
xchg
aas
jmp
test
xchg
adc
inc
mov
sbb
outs
shr
stc
std
cmp
js
cmp
fucomi
mov
xchg
cli
and
xor
out
pop
pop
dec
mov
jae
out
(bad)
xchg
mov
clc
xor
test
movs
or
cmps
fidivr
(bad)
nop
or
stos
hlt
pop
je
pop
(bad)
shr
adc
pusha
dec
jp
fbld
sub
rol
and
mov
add
mov
leave
inc
or
mov
dec
fwait
jo
pop
lahf
ins
stos
popf
and
js
cs
pop
shl
xor
dec
sub
test
cmps
xlat
ret
cmps
imul
pop
adc
pop
mov
or
sub
xor
retf
or
scas
add
push
mov
jae
call
add
movs
les
adc
mov
jp
pop
jb
sbb
lock
push
jmp
sub
int3
pop
jne
call
push
movs
jae
jl
jnp
xor
inc
mov
inc
add
out
sbb
imul
jbe
xchg
aam
sbb
loope
xchg
fadd
push
int3
inc
pop
cmp
imul
add
push
push
mul
fcmovbe
add
mov
mov
mov
fidivr
jnp
mov
inc
and
addr16
sbb
mov
cmps
pop
test
imul
call
sahf
and
inc
das
xchg
and
cmps
gs
cmp
lahf
(bad)
xchg
adc
and
inc
mov
jge
sbb
push
dec
fcomi
jg
test
xchg
push
pusha
pop
dec
and
in
outs
das
inc
cmp
repz
(bad)
push
xor
repz
add
cmp
push
cmps
lods
int
jnp
xchg
push
mov
scas
js
xchg
repz
mov
or
retf
jne
out
mov
shl
pop
and
mov
mov
or
mov
sub
call
push
popa
stc
cmp
adc
sbb
out
mov
icebp
ret
and
mov
dec
pop
push
jno
push
aam
out
dec
jecxz
xor
pop
leave
pop
popa
mul
mov
not
and
mov
enter
sub
pushf
mov
dec
cmp
neg
sub
xchg
mov
fwait
xchg
clc
daa
loopne
pushf
sub
xor
jg
dec
out
(bad)
daa
pop
or
out
add
pop
push
fdivr
xchg
jp
dec
jp
imul
or
push
adc
lds
jnp
cmps
out
mov
mov
ret
add
pop
call
cmps
cld
mov
or
test
add
sbb
and
cmp
jmp
sbb
fiadd
cmps
jmp
outs
cdq
lods
int3
scas
and
ret
push
jl
je
stos
xchg
repnz
and
dec
movs
out
xchg
popf
adc
jo
aas
es
inc
dec
inc
xchg
gs
repnz
adc
(bad)
mov
mov
(bad)
mov
and
cmc
mov
arpl
call
ja
mov
adc
cmps
fwait
xor
xchg
repnz
add
btr
dec
pop
xchg
aas
out
bound
pop
(bad)
xchg
add
ds
ficomp
rcl
div
xor
dec
xor
out
pop
les
cwde
jge
dec
mov
out
loop
pop
(bad)
mov
(bad)
call
test
imul
and
push
in
ror
loopne
add
push
mov
sti
xor
adc
push
les
sbb
retf
dec
(bad)
fnsave
fistp
enter
mov
jo
aaa
xor
aas
movs
cld
cld
push
test
mov
cld
mov
stos
ins
stos
fadd
pop
test
movs
ficom
and
iret
pop
(bad)
jp
mov
scas
adc
pmulhw
stc
inc
imul
jae
cmp
dec
or
jmp
int3
push
loop
adc
jns
pop
cmc
mov
test
mov
pop
pop
push
in
in
and
sub
jo
lock
or
enter
and
cli
repnz
shr
hlt
sub
pop
or
mov
and
mov
in
shl
adc
sbb
add
sbb
mov
sbb
mov
sar
jnp
retf
sbb
repz
lods
mov
mov
fisub
shl
lods
pop
xor
jo
mov
test
cmp
lds
and
push
js
gs
push
mov
pushf
mov
fist
rol
adc
bswap
and
pop
sbb
mov
inc
sbb
nop
add
hlt
dec
or
scas
or
pushf
xor
ss
jecxz
bound
sahf
cli
cmp
jbe
mov
dec
pop
xor
cmp
xor
and
or
and
in
call
cdq
fs
cmp
pop
out
push
in
fldcw
cmps
inc
inc
pop
imul
or
out
mov
jecxz
outs
das
fiadd
aaa
mov
scas
out
jle
mov
xlat
ret
jb
sti
xor
push
or
inc
mov
aas
adc
cmp
push
mov
stos
ror
mov
push
or
xor
and
(bad)
mov
mov
sub
dec
and
cmp
jge
ret
ins
hlt
xchg
xor
sbb
or
and
xchg
pop
aam
adc
xchg
cmp
in
stos
call
mov
cmp
sub
or
and
test
or
push
cmp
fwait
and
sub
sub
(bad)
add
cwde
idiv
add
mov
mov
mov
(bad)
loopne
or
stc
adc
cmp
mov
xchg
jne
stos
cmp
cld
in
movs
jne
cmp
and
mov
cwde
fbstp
push
lock
(bad)
push
jbe
dec
enter
add
jmp
mov
mov
mov
add
cmp
int
push
retf
push
xchg
sub
mov
or
dec
or
ror
xor
jbe
xchg
(bad)
rcr
rcr
jge
cld
scas
adc
dec
sbb
inc
test
inc
call
imul
pop
ins
mov
imul
push
jmp
std
loope
xchg
dec
and
loop
xchg
add
je
and
lock
xor
adc
push
fld
shl
mov
cmp
xchg
test
push
pop
pop
mov
(bad)
cwde
jns
sbb
cli
mov
(bad)
fsubr
movs
xchg
mov
push
(bad)
in
xor
mov
jb
push
cmps
jge
addr16
mov
xchg
(bad)
cmp
mov
mov
mov
bound
ror
pusha
out
cmp
shr
fld
shl
cli
sub
sbb
in
clc
lock
add
(bad)
dec
(bad)
mov
xchg
add
mov
imul
pop
dec
or
mov
mov
stos
pop
jge
cmp
jle
or
mov
dec
fwait
jmp
lds
mov
dec
js
rol
add
cli
out
adc
pop
(bad)
fwait
into
test
shr
and
pushf
jns
cmps
lea
lods
add
or
push
inc
int3
shl
cdq
rcr
mov
adc
mov
cmp
jmp
es
sti
cld
xchg
sbb
sbb
(bad)
sahf
adc
or
add
mov
int3
cmps
jo
test
js
cmc
(bad)
push
les
mov
cmp
adc
pop
aam
aaa
push
test
stc
push
adc
test
rcr
(bad)
(bad)
mov
rcr
xor
ficom
push
enter
push
fsubp
and
ss
or
gs
push
or
mov
dec
lods
lahf
cld
inc
push
xlat
fidiv
aas
imul
jne
xchg
fist
or
jno
inc
inc
or
and
inc
mov
mov
or
dec
aas
stc
mov
aad
mov
sub
or
pop
xchg
xor
cmp
cmc
pop
push
rcl
pop
(bad)
xor
add
lock
inc
push
ficomp
std
in
or
repnz
push
or
dec
jp
aaa
xor
xchg
jnp
int3
push
ret
sahf
xchg
pop
hlt
arpl
retf
fdivr
xor
pop
fcmovbe
ror
adc
inc
sbb
test
mov
pop
shl
xchg
fstp
inc
jnp
fadd
pop
jg
pop
mov
adc
adc
fld
adc
movs
into
dec
jmp
movs
xchg
arpl
cmps
mov
and
sub
add
add
mov
and
nop
mov
call
xlat
sub
stos
xchg
push
movs
xor
cmps
movs
into
xor
(bad)
mov
adc
sti
mov
jne
daa
dec
inc
data16
fisttp
das
mov
popf
push
ss
fwait
ja
inc
(bad)
(bad)
and
into
sub
xchg
mov
shl
ds
push
iret
int
and
add
mov
and
cmc
imul
ret
mov
jp
(bad)
ror
jo
icebp
mov
cmp
dec
scas
ja
bound
mov
stos
xchg
mov
sti
sbb
in
jecxz
les
inc
sbb
jp
out
repnz
adc
push
sub
adc
ins
mov
dec
push
pushf
xchg
push
bound
jo
je
ret
std
outs
jl
in
ret
dec
popf
enter
inc
int
mov
je
test
cmp
push
jbe
(bad)
lahf
loope
push
(bad)
jno
cmp
add
mov
shl
xchg
sbb
into
shr
(bad)
pop
clc
rcl
mov
add
pop
bound
(bad)
(bad)
mov
inc
push
out
sbb
shl
mov
push
fisttp
sar
cmp
mov
or
shl
test
imul
or
pushf
cmp
add
out
btr
out
pop
lock
repnz
pop
cwde
pop
in
stc
stos
or
cmp
and
cdq
sbb
pop
(bad)
xor
sub
mov
movs
ret
or
xchg
pandn
(bad)
enter
sbb
xchg
adc
adc
jno
mov
fsubr
mov
xchg
pop
cmc
call
int
sbb
ret
jbe
cmp
mov
xlat
cli
mov
push
inc
jo
repnz
add
lods
cmp
hlt
pop
jno
scas
out
stc
jg
test
loopne
scas
es
aas
lock
hlt
je
adc
sbb
dec
add
mov
pop
dec
jl
or
ror
jg
dec
mov
(bad)
dec
rol
mov
cmps
retf
cmp
add
cmovne
js
and
mov
push
inc
dec
rol
loopne
ds
outs
dec
inc
jbe
mov
push
(bad)
scas
or
xlat
cmp
jno
cmp
loopne
icebp
inc
push
pop
lods
push
mov
fiadd
shr
xchg
sbb
mov
mov
fwait
mul
dec
fisub
dec
sub
jnp
push
pop
imul
rcr
out
jge
out
jnp
push
(bad)
cmps
shr
mov
std
fcom
sub
push
ds
mov
out
std
mov
mov
pop
(bad)
fwait
movs
sahf
popf
imul
out
push
push
(bad)
mov
lods
mov
xchg
retf
xchg
test
add
stc
mov
sbb
push
je
mov
cmp
movs
push
dec
inc
mov
and
cmp
in
push
mov
enter
mov
aad
pop
sub
ins
ficomp
cld
mov
push
mov
or
pop
jns
je
push
mov
js
dec
push
xor
dec
bound
inc
sub
sub
cmp
gs
out
cs
in
lahf
cs
stos
push
scas
mov
mov
lock
mov
(bad)
out
and
out
leave
call
push
push
push
jecxz
sub
mov
mov
cmp
pop
test
out
adc
dec
push
pop
mov
out
mov
jecxz
loopne
push
je
sbb
and
pop
dec
jle
mov
add
dec
lds
pop
pop
in
imul
sub
stc
sbb
cwde
test
out
aam
lods
and
rsm
jmp
lods
sub
ror
inc
push
and
xchg
fiadd
ds
push
cmp
cmp
xor
mov
xor
push
add
fisub
stos
or
fadd
test
mov
push
fiadd
int
ret
dec
inc
sti
pop
das
ja
addr16
dec
push
cmp
shr
inc
inc
and
mov
add
xor
or
inc
stos
pop
sub
jmp
div
inc
fld
cmps
adc
or
stos
add
nop
leave
push
cmp
xchg
push
xor
aaa
hlt
bound
sub
fiadd
push
dec
inc
loope
in
fstp
cld
pop
and
mov
scas
push
inc
xchg
xlat
push
cmps
jl
ss
retf
inc
call
inc
sub
repnz
xchg
pop
fmul
xor
lods
lahf
retf
cmp
mov
sub
test
loope
or
dec
fwait
push
test
sub
icebp
(bad)
sar
mov
push
rcl
js
imul
loopne
cmp
stos
mov
nop
inc
and
pop
jne
in
sbb
sbb
push
int
or
xchg
repnz
push
jne
and
pop
or
xchg
xchg
pop
jnp
lds
jecxz
shr
rsm
pop
call
mov
test
inc
dec
fwait
mov
push
mov
jg
out
inc
gs
cmc
add
pop
push
aam
push
jecxz
int3
mov
and
pop
scas
rcr
rcl
dec
mov
test
popf
sbb
movs
sti
lods
sbb
fchs
aad
out
push
fmul
jmp
scas
or
les
sub
xchg
gs
in
xor
fwait
lods
mov
ds
aas
jns
adc
mov
pop
sbb
je
inc
inc
mov
add
fistp
es
inc
jns
and
mov
int
sbb
cmp
stos
mov
mov
std
fwait
call
aaa
(bad)
dec
adc
cli
mov
ss
push
jbe
enter
leave
xchg
cmp
div
push
arpl
je
cmc
fwait
mov
dec
and
sbb
mov
imul
sbb
jmp
out
mov
mov
leave
ficom
jb
jae
ins
mov
js
pushf
pushf
mov
in
test
cdq
ret
xchg
cmp
push
mov
mov
clc
jle
sub
mov
in
(bad)
imul
jno
cmp
pop
adc
fld
lahf
outs
and
lahf
and
repnz
adc
cmp
scas
lods
or
sahf
pop
xchg
in
mov
or
xchg
push
rol
in
clc
pushf
cmp
add
jnp
inc
mov
ins
push
add
rcr
lds
cmp
dec
jnp
movs
into
mov
dec
inc
(bad)
test
inc
in
ficomp
xor
cmp
push
mov
or
jecxz
nop
adc
and
cmp
sbb
add
push
call
inc
jns
hlt
mov
add
cmp
(bad)
cmp
sub
pop
imul
mov
fwait
mov
and
adc
(bad)
mov
cmp
sbb
pop
mov
daa
sub
(bad)
sub
jmp
sub
in
por
popf
xchg
ins
cmp
lods
ds
mov
add
and
or
add
out
jle
pop
aad
(bad)
call
and
and
sub
adc
mov
or
xchg
and
pop
cdq
aaa
nop
mov
mov
cwde
inc
sbb
fsub
sti
and
js
jb
out
push
test
lahf
dec
and
mov
inc
fwait
mov
lods
adc
pusha
xlat
pusha
es
imul
into
shl
fwait
add
cld
cmp
dec
push
pop
inc
(bad)
std
fisub
outs
jmp
adc
ror
xchg
adc
mov
xchg
jecxz
repnz
test
iret
loopne
call
jp
mov
sub
cmp
inc
in
and
jp
(bad)
push
aad
cmp
pop
push
and
xor
repz
xor
mov
pop
aas
je
icebp
pop
fcom
pop
and
dec
push
leave
jp
add
rol
mov
test
or
push
loopne
daa
mov
jmp
aaa
pusha
or
imul
mov
stos
(bad)
push
push
xchg
fmulp
into
out
and
mov
mov
sbb
and
clc
inc
fdiv
iret
nop
lods
xor
inc
add
out
xchg
jns
xchg
out
popf
(bad)
bound
(bad)
std
xor
jo
push
lds
adc
les
push
aas
inc
repnz
cdq
movs
pop
std
mov
ds
rcl
mov
pop
cmp
or
mov
jbe
dec
sub
cdq
pop
inc
add
data16
ficomp
pop
or
mov
and
sbb
fiadd
mov
int
jl
or
sub
pop
test
mov
push
and
sti
(bad)
(bad)
das
daa
xchg
adc
mov
and
int3
xlat
stc
inc
inc
xchg
mul
retf
inc
sbb
push
jb
or
jp
imul
mov
lahf
mov
pusha
loopne
ja
cmp
add
ins
mov
ins
not
jns
repz
or
inc
or
cld
push
hlt
push
cwde
pop
retf
cmp
pop
jno
xor
push
ins
mov
sbb
loopne
fwait
dec
addr16
out
popa
and
aaa
adc
repz
cmp
add
dec
out
jae
push
adc
sbb
fmul
mov
pop
dec
and
xchg
push
aaa
test
mov
(bad)
xlat
add
xor
jmp
leave
xor
lods
imul
mov
(bad)
push
imul
adc
inc
shr
jnp
jne
popf
(bad)
lods
cmp
fadd
icebp
mov
sbb
cmp
dec
mov
jecxz
push
fild
div
and
mov
pusha
xor
sub
(bad)
and
or
clc
lds
jno
jmp
jmp
xor
inc
mov
jecxz
cmp
adc
mov
neg
aam
cmp
jmp
movd
cmps
jge
pop
jbe
inc
mov
adc
fdivr
test
(bad)
sbb
lods
jo
pop
je
sbb
or
imul
pushf
or
jl
lods
add
push
pop
out
movs
stos
push
or
lds
fcomip
test
xchg
or
xor
hlt
jne
adc
and
add
shl
mov
adc
fcom
sbb
inc
ret
dec
mov
rcl
and
cdq
pop
bound
mov
(bad)
idiv
fild
mov
lods
outs
push
pop
test
lods
fisttp
aam
(bad)
push
jge
or
pop
pop
clc
call
mov
xor
adc
fist
adc
push
rcr
in
movd
addr16
bound
dec
sar
cs
jp
test
mov
popa
aad
pop
mov
mov
fidivr
sub
test
hlt
jmp
std
(bad)
cld
in
aas
inc
push
imul
js
jbe
mov
std
sbb
inc
xor
add
mov
pop
pop
jbe
mov
jmp
sar
(bad)
stc
xor
rcl
inc
div
hlt
gs
imul
aad
jne
xor
or
xchg
mov
mov
jb
rcl
ins
or
and
jmp
cmp
in
rcl
(bad)
xor
inc
xchg
cdq
dec
and
ss
jne
dec
pop
pop
jecxz
or
xor
mov
mov
inc
bts
and
cmp
cmc
rol
mov
aad
jle
fidivr
ins
fs
mov
dec
stc
add
add
scas
dec
imul
popf
push
sub
stc
in
pop
sub
mov
nop
dec
lds
xor
neg
les
and
mov
stos
(bad)
fisttp
sbb
outs
out
jno
mov
mov
ins
gs
dec
mov
cmp
cli
xchg
mov
das
outs
(bad)
lahf
push
adc
retf
(bad)
push
(bad)
int
mov
xchg
adc
dec
outs
xchg
add
push
scas
fcomip
stos
xlat
out
cmp
push
or
sub
test
aam
push
or
ror
fdivr
adc
in
nop
mov
stos
daa
sbb
or
sub
dec
mov
and
inc
cdq
sbb
dec
push
add
gs
lods
popf
sahf
cmp
sub
inc
jbe
cld
jns
push
and
xchg
jle
xchg
stos
call
pop
add
pop
shr
ror
or
hlt
and
jnp
movs
add
mov
adc
sar
sbb
pop
mov
in
imul
loope
lds
xor
(bad)
ss
cld
outs
ja
mov
retf
inc
sub
clc
outs
pop
add
add
pop
cld
(bad)
mov
cmp
and
pop
cmp
inc
je
pop
xchg
fistp
cdq
inc
xor
outs
into
clc
sub
rcr
pop
sahf
dec
cmp
push
movs
jbe
mov
sbb
sub
aaa
movs
test
xchg
fadd
mov
jecxz
jae
in
jmp
dec
or
pushf
add
jp
mov
int3
and
dec
cwde
arpl
ja
je
adc
(bad)
lods
retf
add
loope
mov
cdq
jae
or
jno
out
ins
inc
add
add
call
dec
and
in
out
mov
es
stos
push
pop
add
and
ds
data16
xchg
lods
cmp
and
movs
icebp
ret
rcl
(bad)
sbb
(bad)
or
xor
push
int
retf
test
and
push
aad
bound
shl
fldcw
(bad)
fbstp
adc
inc
mov
les
sbb
nop
(bad)
popf
sub
in
cld
popf
adc
test
nop
ss
lea
push
jbe
cld
add
hlt
cmp
pushf
shl
ja
retf
lea
and
dec
mov
and
add
mov
repz
pop
mov
fnstsw
cmp
mov
fisttp
push
aad
pop
in
pop
js
stc
dec
clc
icebp
(bad)
pop
call
jno
int3
fist
sbb
sbb
push
xchg
mov
xchg
jns
shl
sar
adc
outs
retf
inc
shl
mov
addr16
add
and
das
adc
push
imul
adc
out
sbb
(bad)
cmp
daa
cmps
ins
jmp
push
fdivp
add
int3
push
dec
popa
xor
jle
inc
aad
inc
push
mov
push
arpl
xor
mov
xor
or
sbb
pop
xchg
add
xchg
or
adc
cwde
in
jae
mov
pop
jp
jg
sti
pop
daa
hlt
xchg
dec
ja
ss
sbb
and
loop
xor
gs
mov
jmp
sbb
scas
int3
ficom
out
ins
jmp
adc
into
push
nop
scas
lds
cs
out
cmp
inc
push
repz
iret
cli
xchg
push
lods
inc
lock
and
lock
loope
or
in
out
cwde
out
push
or
call
mov
mov
test
mov
aas
push
dec
or
sub
or
inc
push
addr16
push
fs
movs
pusha
xchg
pop
call
adc
jno
pop
out
ror
mov
cmc
shr
loope
fsubr
mov
inc
xchg
pop
mov
push
jno
pop
cmp
push
repnz
into
mov
in
sti
jmp
fld
cdq
or
ins
cwde
mov
aaa
movs
cmp
loope
dec
loope
push
dec
cdq
add
imul
test
jmp
sub
inc
pushf
mov
push
std
popf
lods
push
inc
js
retf
(bad)
push
sub
mov
das
adc
aaa
add
cdq
jnp
in
and
movs
fiadd
jmp
enter
(bad)
inc
in
pop
int3
xor
ins
cmp
test
push
cmp
stos
ret
(bad)
xor
inc
pop
push
fxch
adc
sbb
(bad)
mov
out
push
add
cmp
xor
fwait
or
test
(bad)
sti
cmp
adc
or
lds
adc
cmp
cmp
adc
ror
add
mov
ffree
mov
retf
jb
adc
inc
pop
fisttp
pop
dec
leave
adc
mov
dec
push
(bad)
fisub
inc
faddp
push
or
pop
mov
fcomp
jbe
xchg
cmc
cs
pop
and
push
sahf
jmp
mov
sub
addr16
ficomp
mov
fldcw
mov
and
pop
in
jmp
loopne
out
lahf
aam
test
dec
(bad)
fisubr
mov
mov
jns
pop
push
mov
sub
jle
fwait
sub
arpl
(bad)
rcr
xchg
sbb
sbb
sub
int
push
rol
not
lahf
(bad)
xor
cli
mov
repnz
jge
rcr
jb
jae
inc
sbb
hlt
xchg
sub
xchg
cwde
scas
mov
xlat
enter
in
popa
cmp
sahf
stos
push
cmp
push
and
mov
addr16
xor
mov
pop
rsm
fist
or
xchg
dec
mov
stos
imul
ret
leave
cmp
jb
fild
mov
adc
rcl
(bad)
and
jmp
xlat
icebp
xchg
es
imul
dec
push
ret
mov
dec
(bad)
cmp
push
bound
and
shr
gs
mov
mov
fwait
pop
cmp
loope
aaa
xor
fstp
sub
ror
dec
test
adc
push
(bad)
cmp
adc
psubb
inc
and
jmp
adc
out
cmp
(bad)
fnsave
nop
gs
sbb
fs
mov
mov
dec
ins
shr
jge
mov
mov
test
inc
fsub
xor
hlt
mov
xlat
xor
outs
adc
jnp
jno
mov
mov
dec
xchg
shl
mov
mov
ror
movs
cmp
sub
jge
or
xor
adc
movs
cmp
addr16
or
adc
arpl
mov
or
sub
dec
ret
add
aam
movs
stc
clc
push
dec
or
imul
ss
xchg
std
push
jne
nop
inc
and
movs
add
loopne
popf
(bad)
xor
retf
ds
fsubr
int3
aaa
popa
imul
test
or
push
enter
js
dec
mov
movs
pop
xlat
das
stos
fprem1
outs
xchg
xor
aam
fbld
aad
and
lahf
push
sahf
cwde
data16
jno
test
mov
sub
mov
sub
push
pop
or
ror
or
je
les
arpl
inc
pop
neg
inc
pop
ret
sbb
call
dec
gs
into
icebp
inc
aam
enter
ret
std
test
push
stc
stos
popf
int
and
mov
pop
arpl
xor
in
inc
sub
or
bound
fldcw
int3
push
ins
jnp
mov
gs
leave
xor
shl
mov
pop
bound
push
add
jo
adc
mov
(bad)
aaa
cmps
jmp
mov
loope
clc
test
sbb
push
pop
cmp
inc
(bad)
fcom
nop
arpl
nop
into
sub
dec
popa
mov
jbe
adc
sar
push
mov
out
or
cli
xchg
sub
outs
iret
shr
push
dec
push
mov
sbb
sbb
cld
xchg
mov
sub
or
add
je
fadd
popf
push
iret
push
push
clc
lods
(bad)
or
mov
push
repz
jp
push
repz
sub
les
std
test
xor
add
arpl
(bad)
adc
xor
in
xor
dec
mov
out
stos
or
jb
and
pushf
mov
rol
ss
cmp
add
cmp
jno
cmp
dec
icebp
jecxz
bound
mov
pusha
push
push
push
daa
and
ins
repnz
retf
not
mov
push
or
bnd
jnp
xor
sbb
lahf
xchg
imul
mov
data16
neg
daa
jns
pusha
xor
cwde
dec
jo
lods
dec
mov
xlat
pop
cmc
mov
push
adc
sub
loopne
push
and
xchg
jmp
icebp
in
inc
stos
pop
std
mov
in
xor
stc
sub
ret
jmp
cmps
nop
push
xor
xlat
ss
lea
aaa
mov
aas
ret
xchg
add
cs
mov
sbb
inc
mov
test
mov
test
loop
pop
cwde
into
fcom
add
test
pop
xchg
mul
mov
jbe
inc
sub
call
sub
dec
mov
adc
xor
lds
(bad)
jno
dec
mov
fld
lahf
shl
in
retf
and
jae
pusha
aad
stc
or
rol
idiv
and
in
add
popa
mov
ds
sbb
mul
aad
cmps
in
pop
loop
dec
jb
bound
mov
(bad)
mov
or
dec
call
(bad)
sbb
test
mov
in
pop
repnz
or
or
pop
pop
stos
cmp
ins
mov
jae
scas
repnz
into
xchg
popf
sahf
jp
ret
rol
fsubrp
sbb
xchg
or
outs
or
mov
xchg
xchg
(bad)
xor
mov
or
pushf
and
jecxz
pop
cmps
mov
mov
fs
dec
sbb
test
dec
push
aas
icebp
arpl
in
add
and
push
inc
fadd
out
aas
ins
cmp
push
loope
cmc
push
pusha
daa
cdq
aaa
test
dec
and
xchg
mov
mov
or
(bad)
xchg
add
sahf
xchg
out
fs
int3
cli
or
push
mov
enter
fs
sbb
test
movs
push
test
xchg
in
aas
or
stc
cld
dec
mov
adc
add
add
mov
dec
mov
xor
(bad)
mov
push
jg
inc
dec
vunpckhpd
jns
xlat
cmp
popf
retf
jge
into
nop
xor
or
xchg
dec
cmp
mov
and
dec
stos
in
cli
aad
hlt
xchg
loop
jns
adc
and
ret
lods
pop
addr16
(bad)
sbb
dec
and
inc
dec
in
mov
push
fmul
dec
adc
(bad)
lods
std
fs
outs
sbb
jo
mov
adc
or
bound
sahf
test
push
mov
mov
jmp
push
xor
(bad)
dec
xor
sbb
movs
mov
ret
movs
add
test
dec
pusha
add
adc
imul
(bad)
dec
imul
dec
ins
jbe
(bad)
vandnps
mov
push
retf
in
and
ja
cli
outs
stc
js
fmul
adc
push
xor
xor
mov
and
pop
sahf
mov
add
add
sub
loope
mov
or
aad
neg
sbb
aas
stos
sahf
xchg
or
mov
adc
mov
or
jge
adc
cmp
js
push
pop
rol
jg
sbb
jle
cmp
mov
test
or
push
ror
jae
out
or
mov
push
scas
leave
xchg
ins
inc
push
dec
push
push
push
iret
inc
movs
out
sar
test
and
ret
adc
enter
cmp
jl
dec
nop
fidiv
jp
out
sbb
and
push
cmp
das
mov
ret
shr
fs
out
xchg
mov
pusha
pop
outs
or
inc
ins
push
(bad)
jmp
add
test
push
(bad)
fcom
jno
ret
cwde
ret
cmp
fwait
push
add
adc
cwde
ds
jge
jmp
mov
repnz
sbb
dec
aam
dec
cld
ss
ss
scas
repnz
call
jne
xchg
or
lods
xor
adc
jb
(bad)
pop
jle
sub
jb
xor
nop
mov
dec
and
pop
or
mov
and
xchg
test
int
and
bound
mov
push
cmp
cmp
or
loope
(bad)
in
push
loope
fcomp
mov
pop
sub
mov
mov
les
pop
xor
dec
(bad)
xor
add
sbb
shl
mov
ins
sub
adc
or
in
in
movs
lea
icebp
push
mov
mov
jne
pop
xchg
add
cmps
cld
mov
or
mov
mov
ja
clc
or
ret
mov
push
ror
lea
xor
cwde
mov
xor
sti
xchg
hlt
out
stos
push
sub
in
imul
mov
add
ins
add
sub
jns
inc
cmp
scas
inc
mov
xchg
out
mov
pop
adc
push
pop
add
push
out
ins
add
(bad)
hlt
in
(bad)
fnclex
inc
cmp
pop
or
jne
and
aad
rcl
das
in
sbb
bound
ja
pop
pop
cmp
or
in
jnp
push
or
mov
dec
movs
jg
out
jge
scas
imul
mov
aam
mov
pop
cmc
ins
shl
push
(bad)
(bad)
adc
push
aaa
jmp
shl
jno
mov
gs
js
bndldx
add
or
dec
sub
leave
push
mov
and
fs
cmps
dec
es
cwde
mov
mov
jecxz
push
mov
in
das
push
enter
or
sti
fdiv
rcl
imul
mov
xchg
xchg
push
or
push
test
push
rol
xlat
and
hlt
movs
pop
fisttp
ins
xor
out
xchg
adc
inc
sbb
mov
xchg
jg
or
sbb
es
mov
add
pop
mov
xor
pop
lods
scas
pop
cmp
(bad)
nop
push
and
loopne
add
jecxz
xor
stos
popa
mov
mov
lods
dec
das
inc
popf
sbb
sbb
sub
mul
lock
gs
and
sar
push
sub
dec
fdiv
in
jne
sar
jno
inc
cmp
add
mov
add
sbb
fld
(bad)
es
sbb
les
enter
aaa
test
and
mov
stos
push
xor
pop
lods
and
add
jno
imul
sub
fistp
mov
mov
jge
inc
fidiv
and
adc
push
test
add
pop
or
mov
mov
call
in
dec
mov
ss
lods
cmp
cmp
mov
call
(bad)
movs
imul
or
pop
dec
and
or
fs
retf
(bad)
mov
in
int
nop
daa
mov
jo
js
jnp
(bad)
xchg
into
cmp
fmulp
mov
mov
aas
push
or
add
pop
jmp
push
and
enter
aaa
in
pop
sbb
jae
mov
fisttp
pop
mov
cs
pop
xchg
jge
test
mov
into
adc
aaa
retf
dec
pop
inc
sahf
add
sbb
sbb
mov
arpl
mov
movs
loop
cmp
(bad)
push
in
stos
mov
test
leave
dec
add
push
or
call
out
(bad)
adc
xor
push
bound
out
sub
mov
mov
leave
add
adc
cwde
jo
and
inc
aad
mov
inc
or
add
call
or
mov
or
push
inc
rcr
addr16
loop
dec
test
cli
cwde
cld
cmp
daa
dec
ins
aad
inc
xchg
adc
fstp
daa
div
in
mov
movs
inc
fldenv
xlat
add
dec
out
dec
mov
adc
(bad)
fs
and
adc
cwde
(bad)
mov
dec
jne
inc
or
add
mov
or
xchg
add
inc
xor
mov
pop
mov
je
pop
lock
js
iret
or
scas
mov
fiadd
bound
mov
mov
rol
push
adc
icebp
stos
inc
std
retf
test
push
inc
pop
in
add
add
or
das
enter
mov
sbb
adc
and
and
cli
xor
popa
jmp
sub
push
and
mov
fcom
sbb
shl
mov
mov
and
pushf
ret
add
jl
jbe
cwde
(bad)
jno
mov
xchg
(bad)
push
sub
sar
push
mov
sbb
sar
jg
push
(bad)
sbb
nop
adc
jmp
jae
les
adc
push
(bad)
lods
mov
movs
test
xor
cli
xor
xchg
ins
pop
xchg
repz
xchg
fmul
mov
out
dec
sbb
out
(bad)
fisub
rol
adc
movs
clc
and
jnp
pop
outs
daa
cmc
imul
aam
enter
aad
cmp
sub
outs
fadd
sbb
dec
and
not
(bad)
sub
ror
jne
or
sub
cmp
lock
inc
inc
cs
pop
push
sbb
push
mov
xchg
je
mov
out
dec
mov
pusha
pop
iret
int
andps
pusha
stos
push
bnd
sbb
stos
jb
xchg
rol
hlt
sbb
mov
dec
pop
mov
cwde
xchg
dec
fiadd
clc
sahf
cmp
inc
dec
lods
mov
mov
fadd
and
jg
and
push
or
adc
out
data16
mov
in
mov
push
lahf
adc
popf
push
dec
inc
lods
cmp
fwait
sbb
stos
jmp
mov
dec
mov
call
mov
mov
add
add
neg
cmp
(bad)
icebp
or
mov
jmp
nop
loop
mov
inc
mov
xchg
inc
inc
mov
out
mov
mov
mov
adc
fcom
jbe
repz
mov
cwde
push
jo
xchg
test
xor
cli
jecxz
push
into
mov
(bad)
movnti
es
add
int
push
and
push
lds
mov
fs
push
gs
sub
out
sbb
jns
dec
ins
mov
and
in
std
sub
mov
pop
inc
out
mov
xchg
adc
das
sti
pop
push
xor
adc
test
mov
pop
push
test
frstor
outs
sub
outs
nop
jge
fadd
ja
or
std
jmp
cmps
mov
sub
mov
inc
shr
in
cdq
sub
sub
and
pop
or
aam
pop
(bad)
jno
inc
pop
mov
xchg
pop
xlat
aad
cdq
dec
fstp
jnp
mov
or
cmp
push
xor
pop
js
xor
into
(bad)
cli
add
dec
mov
gs
fbstp
loop
test
sbb
popa
enter
sub
out
mov
cmp
mov
lahf
fisub
popf
cmp
mov
out
mov
sub
jmp
enter
xchg
shl
jbe
popa
test
push
add
push
leave
add
sub
fdivr
push
or
jmp
fnsave
sar
sbb
xchg
xchg
push
add
pushf
movs
mov
sub
xchg
push
jns
xchg
jmp
pop
(bad)
stos
cmp
test
je
inc
mov
and
fnstsw
mov
(bad)
cmp
mov
fld
mov
sub
cmps
cli
cmp
mov
rsqrtps
arpl
mov
jnp
cmp
in
push
shr
and
cmps
jmp
jmp
stos
push
pop
xor
cmps
test
cwde
(bad)
cli
sub
mov
scas
call
ins
cli
(bad)
in
jb
add
rol
and
pop
pop
sub
push
mov
(bad)
inc
pop
push
dec
ror
xchg
mov
dec
cmp
xchg
(bad)
popa
jno
aad
and
sbb
push
jmp
js
dec
pusha
lahf
xor
call
imul
clc
loopne
cmp
cdq
jmp
xchg
and
xlat
(bad)
scas
call
in
ds
fimul
mov
lea
add
add
jo
iret
shl
mov
add
mov
into
test
inc
jns
sub
inc
push
xor
stos
aaa
cmp
cmp
jae
xchg
and
cmp
aam
inc
es
or
jo
push
sti
mov
jle
int3
push
jmp
loopne
jmp
clc
push
xchg
popf
dec
hlt
ret
aas
jle
sub
dec
or
cli
jno
and
cld
repz
rol
xchg
sbb
adc
sbb
inc
sub
jb
cmp
xchg
pop
stos
xor
dec
stos
jmp
jg
lea
jae
push
and
mov
mov
jmp
(bad)
cmp
out
daa
int3
mov
popf
xchg
inc
js
inc
jb
shl
sub
lds
dec
(bad)
fadd
mov
int3
lock
imul
add
push
fstp
xchg
push
push
and
mov
adc
js
pushf
jmp
fs
ret
das
fwait
outs
mov
push
xor
add
push
lea
jo
push
jle
inc
inc
ins
call
jp
adc
loope
loopne
inc
mul
scas
jbe
push
into
push
sub
in
xchg
stos
mov
ins
jnp
les
pop
push
pop
iret
mov
fnstcw
sbb
and
(bad)
add
cmps
inc
faddp
shr
xchg
jmp
stos
les
nop
xor
scas
sbb
daa
jp
movs
imul
shl
dec
adc
mov
pop
fild
or
mov
xchg
aad
and
add
push
fwait
mov
out
std
(bad)
movs
ror
(bad)
cmp
or
(bad)
jb
adc
ret
in
push
clc
test
or
xor
push
pusha
movs
jle
jo
mov
sar
xor
push
test
scas
jb
push
xor
and
repnz
stc
push
pop
ds
mov
pusha
xor
push
cs
neg
sub
stos
out
add
push
aam
push
cli
xchg
mov
sbb
cdq
adc
xchg
push
nop
gs
sbb
fsub
push
and
dec
inc
jmp
es
xchg
inc
mov
lods
lea
sub
mov
cmp
xchg
in
pop
pop
push
and
shr
aad
inc
pop
ficomp
jne
shl
(bad)
int
dec
iret
sbb
or
dec
mov
sbb
jge
mov
ds
push
int3
fs
adc
or
fisttp
dec
push
fiadd
push
mov
call
mov
cmp
mov
shl
hlt
sub
cld
sbb
jecxz
xor
out
loope
or
call
cmp
stos
add
and
mov
and
loope
add
cmp
add
add
enter
into
(bad)
cmp
pop
cs
jmp
jne
js
mov
mov
ror
push
and
mov
xor
xchg
inc
pop
cmp
loop
xor
adc
loopne
fsubr
(bad)
mov
or
push
push
int
in
in
fild
pop
aam
mov
lods
mov
(bad)
fisttp
test
sahf
out
loope
jb
push
pop
mov
jp
lods
mov
sbb
xor
add
loopne
loop
mov
frstor
test
repnz
xor
push
jecxz
outs
mov
mov
gs
xchg
out
fdivr
or
pop
std
(bad)
call
mov
sbb
mov
mov
sub
and
and
xor
scas
fwait
xchg
std
mov
cmps
(bad)
in
cmp
xchg
leave
cmp
data16
popf
out
rol
in
rol
test
mov
pop
inc
ds
cmp
loope
fs
or
mov
jbe
addr16
and
cmp
(bad)
test
stos
xor
ret
jmp
out
mov
fwait
push
popa
retf
mov
add
lock
aad
add
sub
sar
rcl
cmp
out
and
xchg
xchg
mov
inc
jle
sub
(bad)
mov
(bad)
clc
add
retf
pushf
inc
cmps
cmp
push
or
cmc
shl
cmps
dec
sbb
cmp
sub
mov
dec
push
outs
(bad)
cmp
rcl
cmp
ret
push
ins
popa
imul
xor
je
mov
sbb
popf
shl
movs
add
adc
mov
and
arpl
mov
retf
fisttp
dec
xchg
stos
cmp
arpl
ret
or
ins
in
jg
and
dec
mov
pop
pop
iret
add
sbb
mov
mov
cmp
xchg
imul
repz
cmps
test
inc
scas
push
ficom
fsubr
outs
adc
(bad)
mov
imul
imul
xor
addr16
push
mov
movs
add
nop
repnz
mov
dec
add
imul
jmp
adc
outs
inc
push
pop
out
cmp
inc
cmp
fstp
sti
add
and
dec
push
rcl
xchg
xlat
cmp
cmps
cmp
lds
cmp
cmps
in
xchg
sub
fnstsw
(bad)
add
push
cmc
fadd
repz
test
inc
sub
inc
jle
push
les
jnp
sbb
mov
pop
call
movs
fdiv
xchg
sbb
cmps
std
and
mov
mov
les
repz
rep
sti
pop
fadd
mov
mov
dec
cmps
mov
sar
mov
or
stos
scas
pop
mov
fsubr
sbb
pop
js
mov
mov
ss
dec
(bad)
std
outs
(bad)
xchg
(bad)
jo
push
and
stos
stos
imul
jmp
jmp
imul
bound
sbb
cmp
icebp
test
leave
sbb
add
jp
add
pusha
pop
mov
push
addr16
push
add
inc
ror
ins
cmps
js
cmp
lock
dec
inc
jbe
push
cmc
int3
bound
and
mov
cmp
mov
mov
xor
jge
div
in
fist
mov
mov
sub
dec
out
inc
push
inc
sbb
xor
fnsave
and
retf
loop
or
adc
inc
jmp
jmp
sub
out
cdq
cmp
sahf
mov
stc
push
or
sub
pop
jo
add
jns
mov
xchg
rcl
jnp
lods
dec
xor
mov
and
xor
mov
ds
xchg
adc
cmps
pop
mov
inc
cdq
ret
push
in
sbb
aas
popa
fstp
mov
inc
jne
pop
retf
stc
ds
and
shl
popf
cld
xchg
jnp
sbb
mov
jecxz
ja
int3
fadd
mov
adc
lods
dec
mov
dec
aaa
xor
cmp
pop
cli
pushf
in
and
jmp
or
jbe
hlt
jg
add
stos
scas
mov
push
jne
ss
cmp
ja
mov
push
adc
test
cmp
in
jbe
jge
fadd
scas
cmp
add
adc
pop
loope
outs
rol
sbb
mov
push
test
outs
in
inc
pop
(bad)
push
mov
std
add
sub
das
pushf
call
mov
jp
push
repnz
dec
punpcklwd
mov
mov
or
jle
pop
mov
clc
(bad)
scas
loopne
add
mov
jp
cwde
(bad)
or
xchg
jns
and
jmp
mov
sub
cmp
jb
mov
loopne
mov
outs
pop
shl
mov
test
cdq
mov
jne
pop
jo
mov
inc
into
sub
push
cmp
imul
cld
adc
mov
inc
xchg
xor
inc
and
pop
dec
or
ss
call
ret
ins
jne
jne
push
sbb
cli
jae
(bad)
mov
add
aas
pusha
cli
pop
mov
jo
loopne
push
cmp
xor
rcl
push
and
mov
add
mov
xlat
lods
lahf
and
jl
mov
xchg
push
stos
xchg
or
sar
test
int3
push
(bad)
mul
lods
pop
xchg
pop
jmp
sbb
mov
or
adc
imul
add
cwde
in
imul
das
(bad)
cmp
jae
and
out
hlt
push
js
test
mov
mov
mov
jbe
jo
jno
popa
imul
dec
or
movs
scas
push
adc
call
pop
repnz
mov
mov
ins
mov
push
call
mov
xchg
mov
sbb
imul
(bad)
fld
les
pop
adc
daa
push
test
mov
mov
mov
cmp
inc
in
lea
leave
je
lods
cdq
push
sub
daa
jbe
jp
cmps
(bad)
mov
daa
in
out
pop
mov
rcl
xchg
ret
popa
fisubr
sub
push
push
xor
shr
nop
nop
sar
and
jle
pop
jmp
movs
push
xor
dec
pop
in
daa
loop
inc
jl
test
push
or
repnz
mov
addr16
pushf
enter
cmps
fwait
adc
arpl
mov
ja
repz
jo
cli
arpl
inc
ins
test
daa
gs
aad
out
leave
aaa
mov
mov
pop
jno
sub
fldenv
aad
les
rcr
inc
test
cmp
mov
jge
inc
pop
loope
loop
jns
jecxz
aaa
popa
xchg
cmc
pop
(bad)
loop
loope
jl
inc
das
repz
leave
xchg
push
or
mov
cli
push
int3
jp
out
dec
int
adc
int
sub
leave
sbb
adc
adc
outs
xchg
in
ja
jo
and
pop
sub
adc
or
jl
out
sub
(bad)
fiadd
sti
imul
ret
inc
mov
pop
out
imul
and
mov
repnz
adc
pop
clc
sbb
dec
iret
jmp
loopne
repz
sbb
xor
push
test
sub
out
stos
add
mov
and
mov
jne
and
mov
in
fnstcw
jp
in
nop
and
dec
rcr
imul
sub
ja
in
add
pop
pop
mov
int3
inc
fadd
push
xchg
dec
jae
inc
xlat
add
add
ficom
jb
ins
ror
test
stos
adc
jp
and
pop
adc
cmps
outs
into
outs
call
sub
loopne
clc
pop
rcr
rol
push
fs
cmp
and
jno
movs
push
enter
push
xchg
bnd
pop
lods
das
rol
push
sub
push
jl
das
repnz
xchg
adc
lock
es
daa
leave
(bad)
push
inc
outs
push
(bad)
not
xor
xor
sub
pop
pop
es
mov
ins
or
(bad)
fild
cld
(bad)
dec
mov
and
pop
inc
(bad)
in
mov
mov
sub
nop
hlt
sbb
cld
sti
cwde
jl
sub
retf
jecxz
out
and
sbb
cmp
mov
rcl
(bad)
sbb
sub
pop
cmp
adc
xlat
add
icebp
push
sub
xchg
call
test
stos
ror
xor
stos
lea
xor
test
pop
mov
xor
inc
jg
xchg
add
aam
stc
xor
pop
pop
cmp
dec
sti
sub
shl
mov
cmps
jbe
pop
out
cwde
outs
xchg
sti
dec
xor
mov
sahf
sub
daa
inc
mov
inc
dec
adc
or
mov
enter
sub
and
gs
out
data16
ins
test
clc
(bad)
out
pushf
push
mov
mov
xchg
fcmove
jns
ficom
or
mov
sub
push
push
rcl
or
or
inc
sub
mov
ins
ror
mov
out
lea
xor
jl
cmp
test
(bad)
mov
add
add
or
xchg
inc
sahf
cmc
addr16
fdivr
jns
add
jle
dec
and
cmp
cmc
dec
push
inc
inc
int3
jp
fild
das
adc
rol
dec
loope
fucom
mov
mov
clc
or
fwait
cmp
dec
sbb
or
ror
add
xchg
xor
sub
add
pop
nop
jecxz
sbb
sub
stc
ins
(bad)
mov
std
xor
clc
dec
scas
pop
inc
lock
dec
shl
ds
dec
jno
pop
fxtract
xchg
fwait
call
dec
jl
dec
add
cmp
enter
pushf
(bad)
repz
leave
sbb
dec
or
adc
lahf
dec
add
or
dec
outs
mov
mov
dec
sbb
repnz
dec
and
cs
adc
or
in
cmps
xchg
inc
fimul
push
repz
aas
(bad)
xchg
xor
adc
fild
aas
jle
pop
stos
ficom
xchg
popa
(bad)
loopne
inc
fstp
and
movs
pop
jp
jecxz
setns
jne
cmp
and
lods
outs
push
inc
inc
das
dec
movs
icebp
fld
mov
xor
fistp
hlt
sbb
test
adc
aam
in
ins
push
sbb
jb
cmp
cvtdq2ps
retw
loope
or
dec
add
pop
add
or
pop
loope
cmps
and
ss
cwde
jg
pop
fwait
in
imul
jae
xor
dec
dec
outs
pop
fcmove
or
fcomp
pop
and
pop
stos
fwait
mov
mov
cdq
jbe
cdq
(bad)
int
and
js
mov
(bad)
or
jmp
mov
xchg
xor
fdivr
adc
jbe
sbb
pop
xchg
mov
movs
mov
sub
cmp
dec
jl
jnp
cli
xor
leave
cmovne
jle
jg
sahf
pop
cld
xor
lahf
pushf
mul
xchg
and
cmp
aaa
es
push
sub
push
or
ss
clc
lods
ret
mov
mov
cmp
xchg
in
inc
stos
mov
into
inc
sti
vminsd
retf
pop
call
jmp
scas
or
(bad)
rcr
imul
or
dec
xor
push
jl
cmp
dec
sub
imul
mov
out
dec
mov
retf
bound
ss
add
push
cdq
iret
mov
mov
jmp
lea
fs
mov
add
scas
in
mov
lds
fstp
retf
push
jecxz
xchg
mov
xor
shr
sbb
pop
dec
not
shl
jl
ret
push
sub
pop
adc
(bad)
loopne
in
out
jb
in
int
test
fwait
jmp
inc
ds
sub
cmp
xchg
imul
out
mov
add
push
push
jne
fisub
fadd
mov
clc
push
stos
adc
mov
ret
sbb
iret
push
xor
loop
xchg
lea
cmp
mov
mov
rol
test
int3
out
adc
mov
sub
cmps
xlat
adc
add
test
xlat
adc
pop
mov
jg
fwait
outs
outs
push
mov
mov
push
mov
sub
(bad)
mov
adc
xchg
xor
loope
jl
in
iret
jno
je
push
aam
sahf
cmp
pop
jmp
ficom
jmp
addr16
push
lods
repz
repz
bound
(bad)
jne
mov
push
jmp
pop
std
xor
outs
pop
mov
push
test
sub
mov
xor
or
enter
mov
xchg
sbb
pop
and
ins
or
sbb
dec
push
jecxz
jne
dec
out
mov
inc
dec
stos
mov
dec
aaa
or
cmp
enter
cmps
and
jmp
push
inc
cmp
push
(bad)
add
sar
ds
sbb
jmp
cmp
nop
ja
mov
sub
jno
data16
out
sub
pop
arpl
sar
xchg
pop
ins
xchg
jnp
mov
sbb
cmp
enter
pop
scas
shl
sar
pop
cmp
mov
out
cmc
gs
lock
loopne
ds
sub
cmp
adc
ror
loop
int3
sahf
in
mov
aam
mov
mov
ds
(bad)
enter
mov
inc
lods
(bad)
lahf
out
(bad)
xor
add
or
bswap
mov
rol
push
out
aad
mov
not
mov
call
ja
xchg
jbe
inc
fisub
add
mov
nop
sti
mov
xchg
mov
dec
jb
jge
repnz
mov
jg
dec
cmp
cs
out
jg
dec
mov
sub
and
push
inc
fsub
xchg
jmp
mov
movs
and
jge
fild
movs
xor
retf
(bad)
or
fst
aas
cmp
shl
std
or
push
out
imul
pop
adc
fwait
dec
pop
cdq
fwait
pop
lahf
sahf
pop
pop
cmps
ret
pop
(bad)
(bad)
xor
pop
pop
dec
aam
sahf
or
and
repz
imul
push
add
sbb
outs
aas
cmps
test
dec
movs
movs
lods
dec
ja
xor
sub
sub
jmp
pushf
popa
sbb
in
int3
and
cdq
scas
fld
out
mov
add
out
ficomp
add
hlt
and
imul
mov
repnz
mov
add
sub
jnp
sub
push
cmp
mov
mov
lea
xchg
imul
(bad)
push
mov
or
sbb
jb
mov
enter
movs
je
sar
rcl
cmp
inc
pop
mov
xor
xchg
fidivr
std
adc
sbb
ins
push
or
mov
mov
(bad)
mov
push
jns
push
shl
and
cs
aad
mov
add
cmc
mov
sbb
aam
sbb
jmp
stc
js
xchg
ins
sub
loopne
xlat
dec
in
inc
ins
(bad)
pop
rol
shl
and
push
cmps
iret
dec
xchg
mov
cli
enter
dec
sar
adc
scas
mov
or
fsubr
retf
xlat
add
call
dec
clc
xlat
pop
dec
mov
cwde
pop
dec
push
push
out
pop
shr
rcl
mov
pop
js
xor
push
sub
data16
xchg
mov
mov
call
xor
xchg
push
lods
cmp
jmp
push
jne
mov
imul
sbb
imul
cmp
xchg
(bad)
jp
dec
xchg
call
mov
mov
sar
(bad)
jo
push
and
pop
cld
add
adc
add
jne
test
push
xor
retf
sbb
adc
xor
cmp
(bad)
jno
jnp
mov
nop
lods
sbb
mov
sahf
mov
dec
adc
add
scas
ret
out
loopne
data16
call
stc
mov
(bad)
ficom
lea
fcomp
mov
scas
fmul
push
in
add
mov
pop
dec
or
and
and
ja
xor
sub
and
ds
push
ds
imul
icebp
aas
inc
mov
mov
cmp
dec
lds
or
adc
mov
dec
pop
mov
xor
or
data16
stc
xor
and
in
or
and
mov
clc
push
ret
cmp
(bad)
jmp
mov
push
jmp
push
mov
cdq
sbb
dec
fdivp
fidiv
gs
icebp
(bad)
cmps
shr
ds
xchg
lahf
mov
repnz
cmp
(bad)
xor
cmc
int
add
ficomp
(bad)
sbb
inc
xchg
push
adc
cmc
push
or
lds
std
pop
xor
mov
es
adc
push
dec
leave
cmp
dec
stos
sbb
loopne
jge
lds
xor
push
pop
jmp
lods
cmpps
aaa
cmp
fbld
test
out
(bad)
rol
enter
je
add
and
xor
cmp
mov
push
mov
pcmpgtw
dec
test
cmovb
cmp
(bad)
lods
push
xchg
cmp
and
movs
add
jge
ins
pop
jmp
push
shl
pop
(bad)
fnsave
ror
stc
aam
out
sti
mov
pop
pop
dec
sub
or
push
sbb
daa
adc
mov
fld
out
stos
and
ss
aad
aaa
data16
fld
or
push
mov
addr16
mov
(bad)
lahf
out
mov
mov
and
push
out
adc
dec
popf
pop
mov
xchg
fsubr
popa
rcr
retf
lods
pop
push
adc
sbb
cmp
out
movs
dec
mov
or
nop
dec
and
pushf
sbb
pop
xor
jmp
ins
pushf
out
cmp
inc
mov
cmps
sar
xor
cmp
mov
sbb
fmul
mov
jae
sbb
pop
enter
in
popa
mov
ins
std
xor
popf
fstp
out
das
add
mov
test
xor
ins
pop
out
jae
outs
daa
inc
push
aad
xchg
cmp
jge
mov
inc
addr16
dec
clc
out
ror
jge
mov
push
imul
ss
mov
add
pusha
loopne
fcomp
ds
and
and
mov
mov
rol
push
shr
xor
pushf
cmp
mov
jg
test
mov
mov
cmp
mul
pushf
xor
movs
ins
dec
mov
mov
arpl
sbb
movs
xor
je
pop
xchg
adc
clc
out
imul
stc
fld
loopne
jno
daa
out
lock
retf
sub
lock
or
(bad)
js
push
mov
cmp
jle
mov
mov
xor
mov
lods
fiadd
mov
adc
fcmovb
sub
mov
add
fwait
cmc
pop
test
pushf
or
sub
fsubr
dec
pop
pop
dec
mov
inc
mov
arpl
jmp
call
sub
jecxz
sub
sbb
(bad)
xor
data16
jmp
and
sbb
stos
pop
jnp
mov
cwde
sahf
push
fcmovb
ins
cmp
xor
pop
jmp
int3
jbe
pop
ret
jmp
sbb
movups
and
jmp
(bad)
aaa
mov
sub
jo
mov
mov
cmps
in
inc
outs
hlt
mov
fwait
mov
std
repnz
and
ja
imul
add
xor
sub
je
push
push
xchg
cmps
mov
adc
inc
cmc
out
and
ret
lods
mov
(bad)
and
push
mov
xchg
dec
daa
(bad)
dec
into
ret
mov
mov
mov
jns
outs
xchg
stc
adc
test
cmp
out
inc
or
xchg
push
enter
into
leave
mov
loopne
push
sub
mov
scas
call
in
loopne
add
sbb
xor
adc
mov
mov
inc
xchg
test
xor
pusha
xchg
inc
adc
mov
fistp
and
gs
pop
sub
or
add
add
retf
cmp
jno
or
ret
and
pop
mov
scas
jmp
repz
push
mov
iret
inc
xchg
jle
aam
ins
and
cmp
and
sub
dec
sub
nop
mov
loopne
xchg
or
leave
mov
bound
out
cmp
repz
jns
mov
fwait
sub
mov
sub
loopne
(bad)
adc
stos
rcr
leave
mov
aas
inc
fldcw
ss
push
cmp
inc
sbb
adc
shrd
pop
mov
ss
xchg
xchg
push
hlt
inc
push
pop
imul
inc
outs
cmp
ins
or
add
push
sahf
mov
cmc
das
push
aad
and
out
xchg
leave
scas
pusha
mov
adc
xchg
pop
cmp
push
add
cmp
jbe
out
fbstp
push
mov
cli
mov
lahf
lock
xchg
jmp
add
mov
mov
out
add
sbb
mov
mov
add
xor
retf
movs
push
sub
add
cmp
les
(bad)
test
cmc
mov
cmp
cmc
retf
test
(bad)
lsl
in
aad
les
pop
push
dec
sub
mov
scas
mov
add
jnp
rcl
xor
jne
xlat
xor
shl
hlt
jb
xor
(bad)
movs
mov
arpl
outs
pop
sub
call
jno
xor
cmc
dec
push
or
cmp
pop
(bad)
mov
or
cmp
cmps
cwde
mov
outs
nop
lock
test
or
and
dec
sub
push
sub
or
js
aad
in
mov
add
aam
inc
xchg
fwait
int
jns
aam
aaa
inc
pop
lods
pop
or
popf
pusha
enter
outs
out
mov
test
mov
(bad)
push
and
mov
push
cmp
jp
js
popa
xchg
cmp
jle
jg
cs
(bad)
jmp
bound
cmp
mov
out
cmp
std
fsubr
add
jbe
lods
cmp
call
sub
add
rcl
push
loopne
jp
out
sar
mov
lock
sub
fdivr
mov
and
test
add
jns
sub
adc
in
xor
mov
ja
and
imul
adc
xchg
add
test
lahf
sbb
(bad)
or
leave
or
sub
push
rol
popa
out
pop
or
cmps
lock
jno
push
in
or
in
ror
jno
and
test
(bad)
rol
pop
or
push
dec
(bad)
jg
xor
fcmovbe
fcmovbe
fcomi
inc
das
push
jp
rcl
sahf
repnz
rcl
dec
jmp
dec
and
ffree
jmp
mov
sub
jnp
stos
cmp
rcr
sbb
xchg
mov
push
xchg
and
sahf
mov
push
es
push
or
rsm
popa
jmp
mov
mov
ret
dec
lahf
clc
push
test
rcl
cmps
inc
int3
test
fld
dec
repz
mov
add
lea
mov
sub
push
fld
mov
sti
ins
(bad)
icebp
popa
out
jbe
shl
jnp
cdq
mov
xor
mov
pop
js
daa
sar
push
icebp
int
fcmovnbe
cli
adc
mov
and
push
pop
push
push
rol
fsubr
call
and
sub
out
into
push
fsubr
fcmove
sti
das
cld
ds
mov
mov
add
sbb
cmp
add
test
jb
xor
pop
out
clc
mov
mov
fisub
int3
sub
test
add
fs
push
addr16
jno
push
or
std
aad
xchg
ss
out
test
(bad)
add
fs
and
and
in
cmp
pop
add
int
cmp
cmp
jg
pop
pop
icebp
lods
aas
jnp
enter
push
add
inc
les
sub
test
or
dec
gs
mov
mov
mov
loop
mov
mov
addr16
in
(bad)
and
pusha
sbb
push
sbb
sbb
dec
shl
push
adc
push
cli
mov
int
ror
dec
sub
call
es
xchg
adc
push
push
jne
daa
ins
jp
jecxz
sub
aas
xor
leave
dec
pushf
sub
lds
sub
mov
mov
or
cli
test
or
sbb
pushf
mov
xor
push
adc
nop
aaa
and
fsubr
dec
retf
jbe
cmp
mov
into
out
(bad)
cmp
xor
aad
in
into
adc
adc
jle
mov
pop
test
das
mov
push
outs
cmp
xchg
mov
cmp
arpl
jns
and
enter
jmp
adc
sbb
or
fidiv
rcr
add
lods
jl
aad
mov
dec
xchg
sbb
sub
mov
or
lods
dec
dec
xchg
pop
int
arpl
inc
jg
enter
retf
adc
dec
xchg
push
shl
xor
loope
sub
cmps
sbb
call
jno
sbb
imul
cmp
test
pushf
ss
mov
addr16
sub
ja
mov
nop
out
ss
mov
inc
jmp
test
pop
mov
loopne
dec
mov
cmp
sub
push
mov
and
xor
ins
cwde
cmps
out
sti
sbb
stos
(bad)
jg
fs
loop
retf
(bad)
adc
mov
xchg
int3
push
xchg
shr
xor
sub
push
mov
push
idiv
xchg
xor
push
mov
push
scas
(bad)
out
xchg
int3
xor
xor
fcmovnu
or
cmc
repz
xchg
cmp
data16
push
and
inc
aaa
jp
aaa
daa
ss
dec
sub
xor
in
and
add
xchg
sbb
lods
dec
xchg
in
jg
rol
fwait
test
in
dec
pop
xlat
movs
test
cdq
xchg
test
mov
or
mov
mov
or
xor
add
dec
test
ins
adc
xor
jbe
xor
aam
cmp
mov
jg
jge
sbb
xchg
push
nop
pushf
xchg
push
test
int
inc
shl
push
retf
in
ror
pop
xchg
push
(bad)
mov
inc
jge
sbb
inc
cmps
push
jmp
inc
sub
(bad)
and
mov
fwait
bound
mov
pushf
and
cmp
sub
pop
lods
sbb
call
ja
fs
xchg
aas
fucomi
inc
pop
mov
scas
inc
jnp
cdq
mov
push
or
lahf
mov
gs
add
imul
and
(bad)
psadbw
test
lods
rcl
leave
test
or
call
fld
je
stos
jecxz
inc
daa
and
add
movs
hlt
mov
bound
enter
mov
jmp
dec
jns
scas
xor
mov
bound
cmp
and
mov
sbb
loope
push
and
xor
aam
sub
sub
frstor
push
mov
push
xchg
dec
push
inc
loop
pop
pop
pop
rcl
mov
outs
sub
xor
mov
cmp
imul
ins
pop
push
inc
sti
add
xchg
fidivr
call
mov
mov
cmps
outs
push
lds
dec
push
fild
outs
or
out
push
les
or
call
push
cmp
mov
dec
mov
sbb
and
push
movs
imul
retf
and
dec
add
clc
out
pop
push
bnd
aas
movs
scas
push
fs
movs
das
ins
mov
je
push
pop
scas
aas
or
je
push
out
movs
shl
mov
pop
fld
movs
mov
jg
cmp
cmp
push
std
daa
repnz
lds
pop
fst
jmp
xor
int
repnz
sub
das
retf
in
out
xchg
sub
adc
fcomi
stos
dec
inc
int3
(bad)
adc
psubusw
neg
push
hlt
imul
arpl
test
je
or
sbb
inc
dec
aam
nop
pushf
adc
adc
add
sub
pop
adc
dec
pop
mov
inc
mov
adc
inc
imul
pop
sahf
(bad)
popa
cmp
dec
push
lods
movs
ffreep
mov
xor
xlat
mov
cmp
sub
movs
and
in
mov
dec
pop
mov
pop
imul
inc
push
pop
bnd
ds
fstp
sbb
les
(bad)
jecxz
pop
call
jp
cmp
movs
not
mov
je
push
cli
mov
int3
mul
(bad)
adc
and
sti
rcr
sti
jb
add
es
outs
pcmpgtd
or
mov
loope
(bad)
rcr
mov
je
push
pop
das
dec
(bad)
lods
sti
sar
add
je
fistp
in
hlt
out
xor
xor
cmc
mov
fnstcw
int
add
aad
mov
addr16
nop
aam
fs
sub
mov
pop
stc
pop
adc
dec
xchg
adc
mov
ror
xlat
daa
movs
xor
ins
mov
jbe
stc
adc
gs
sub
mov
pop
jno
fldcw
adc
push
out
jnp
xchg
and
iret
jnp
cwde
push
pop
outs
dec
out
jne
fs
mov
xlat
push
enter
test
pop
stos
push
loope
push
push
xlat
or
adc
mov
(bad)
or
cld
sub
stos
das
and
cmp
lock
mov
into
sar
or
xor
push
std
sti
sbb
and
repnz
inc
pop
dec
xor
push
test
sub
push
mov
ds
push
shr
xor
pop
adc
retf
sbb
jp
cs
ins
mov
ds
ror
cdq
stos
lods
loopne
ret
inc
sbb
mov
and
clc
mov
xchg
bound
das
nop
stc
sub
xchg
and
das
call
out
fild
fdivr
jb
pop
test
or
dec
xor
jp
inc
xchg
mov
xchg
retf
ja
push
adc
sub
int
or
jno
into
fimul
(bad)
cli
jno
pop
mov
inc
dec
aaa
shl
shl
xchg
sbb
ss
leave
cld
hlt
loopne
in
leave
lea
pop
push
xor
add
push
pop
mov
pop
das
mov
ins
shl
mov
lods
push
xchg
ret
mov
clc
cmc
enter
ret
(bad)
movs
aas
loope
dec
jae
in
or
xor
inc
add
push
push
xchg
daa
fdivrp
pop
jb
fcomp
call
add
mov
test
xchg
sbb
jne
aas
pusha
push
sub
sbb
mov
inc
xchg
mov
push
mov
movs
test
sbb
xlat
xchg
imul
fdiv
xor
cmp
pop
mov
sbb
fs
fsubr
xor
int
xchg
jmp
push
dec
call
pop
pop
psubsb
pop
dec
cmp
add
mov
cld
jg
inc
popa
pop
shl
xchg
jle
inc
arpl
lods
mov
loopne
popf
pop
jmp
jno
jp
rcl
nop
xchg
jb
push
(bad)
cwde
enter
movs
imul
retf
jle
enter
jl
lds
jns
ret
jno
mov
jecxz
sahf
xor
mov
icebp
sar
lods
sbb
push
cwde
sbb
push
push
loopne
sti
(bad)
movs
int3
inc
iret
mov
pop
mov
in
fwait
cmp
ss
inc
xor
sti
inc
cli
jno
jmp
imul
fwait
xor
cld
int
cli
mov
std
xor
jg
xor
ror
or
fiadd
xor
mov
and
loopne
mov
push
popa
mov
aam
push
mov
xchg
arpl
cmp
push
imul
pop
cmp
test
or
xor
push
push
sti
nop
fldcw
pop
out
test
retf
scas
pop
mov
loope
mov
repz
sub
fwait
add
cdq
pextrw
add
and
push
mov
add
std
inc
out
adc
sbb
inc
sbb
ror
mov
mov
sbb
popa
mov
std
icebp
sbb
sar
jb
test
inc
mov
xor
hlt
pop
les
ja
loopne
pop
js
dec
jle
std
int
adc
test
int
pop
sub
(bad)
lods
stos
scas
add
adc
mov
fsubr
mov
push
lds
cmp
popa
xor
test
or
push
inc
mov
shl
xchg
xchg
mov
xchg
or
mov
push
xchg
push
(bad)
mov
push
mov
sbb
pop
out
cmps
je
mov
sar
cmps
in
popa
je
xchg
dec
je
movs
cld
mov
mov
aas
fsub
mov
icebp
out
stos
(bad)
xchg
xchg
inc
mov
cmps
idiv
inc
or
cmps
loopne
pop
push
outs
in
shl
scas
addr16
mov
sub
sub
fdivr
xchg
mov
and
aad
(bad)
xchg
mov
mov
lea
cmp
fisub
jl
in
imul
sti
xor
sbb
jae
fisttp
push
mov
lahf
pusha
jge
mov
stc
xchg
xor
pushf
and
in
ds
or
or
jno
mov
sub
lds
dec
jae
mov
outs
sub
dec
mov
fimul
pop
cwde
out
and
in
cmp
mov
fs
imul
pop
rcr
sub
test
sbb
in
fwait
cwde
push
cwde
sbb
(bad)
xor
xchg
sbb
fdiv
xchg
cmp
add
and
and
iret
test
add
dec
xor
test
sbb
cmp
sbb
xchg
jecxz
fisub
mov
popf
scas
pop
mov
fnstcw
xchg
inc
mov
aaa
pop
leave
sub
jno
and
add
es
sbb
loopne
je
fst
addr16
jo
sar
jg
sbb
fisubr
dec
ins
xor
shr
adc
stc
dec
test
scas
pusha
int3
cdq
(bad)
sbb
cmp
fst
pop
sbb
push
and
jecxz
dec
sbb
(bad)
outs
fsub
cmp
cld
jns
mov
pop
adc
into
cmp
pop
ins
(bad)
cs
pop
out
xor
in
pop
shl
jge
cmp
mov
outs
push
test
add
mov
mov
sub
inc
jmp
add
lea
adc
jp
es
jmp
scas
pop
mov
pop
xlat
in
stos
xor
dec
jbe
pop
lock
loopne
gs
mov
ficom
pop
sbb
add
jne
mov
sbb
push
xlat
imul
hlt
aas
pop
movs
out
in
fisttp
mov
sub
or
mov
pop
sti
jecxz
ins
fild
or
inc
sbb
adc
imul
test
shr
fidiv
mov
rcl
and
stc
sbb
inc
and
xor
jb
mov
mov
cmp
push
out
cmovp
dec
xchg
push
and
cwde
out
inc
sub
inc
daa
cmp
cmps
int
ret
popf
and
cli
sbb
cmp
inc
addr16
movs
sub
leave
pusha
cdq
inc
in
dec
pop
adc
jl
add
imul
jecxz
popa
add
outs
das
cli
xor
int3
fcom
std
cmp
jo
sbb
aas
fsub
loop
dec
jmp
pusha
frstor
(bad)
adc
cmc
adc
mov
pop
push
popa
push
sbb
jmp
das
xchg
test
or
clc
xchg
mov
ds
sbb
(bad)
out
and
clc
sbb
cld
push
cmps
dec
(bad)
cmp
mov
jecxz
pusha
inc
dec
push
out
popf
fwait
push
out
into
push
fst
inc
lods
adc
popf
pop
and
xor
push
jb
in
fwait
retf
mov
jge
inc
stc
push
dec
(bad)
clc
jne
push
cmp
push
ror
adc
jb
xor
lea
shl
cmp
ret
jnp
mov
jnp
and
add
add
daa
ins
dec
out
mov
jg
popf
mov
outs
pop
cmc
in
sbb
xor
inc
ret
(bad)
out
cmp
dec
fabs
ret
or
push
cs
(bad)
aas
fimul
pop
add
movs
mov
test
call
fisub
pop
mul
pop
sti
jbe
add
cmp
test
or
fdivp
mov
repnz
data16
mov
popf
leave
les
inc
stos
nop
ror
dec
dec
xchg
push
(bad)
int
ffreep
pop
mov
lods
dec
dec
dec
fcomi
xlat
inc
mul
pop
pusha
or
pop
call
xor
hlt
daa
lods
pop
jle
sbb
lds
mov
and
or
addr16
popf
fist
sbb
or
or
xchg
dec
sbb
neg
xchg
or
lea
iret
fld
imul
sub
fsub
inc
mov
adc
test
dec
(bad)
cwde
and
mov
jp
cmp
xchg
lods
push
out
pop
and
cli
in
mov
cmc
push
pop
outs
psllq
out
movs
aam
adc
int3
fisubr
jecxz
push
push
scas
(bad)
and
mov
cld
mov
lds
and
push
repnz
pop
es
pop
cmp
and
pop
jbe
(bad)
jmp
ds
push
xor
outs
loopne
mov
fidivr
jnp
inc
fistp
fs
jae
xor
fstp
std
or
push
bound
and
fidiv
add
rcr
out
test
push
mov
push
and
lods
ja
adc
pusha
jge
jmp
das
push
cdq
mov
dec
pop
std
int3
cmp
mov
and
mov
add
je
xchg
sar
das
repz
cmp
sub
cli
addr16
(bad)
mov
add
dec
pop
out
pop
loopne
mov
retf
and
fist
mov
stc
fxam
fisub
retf
sbb
scas
sbb
rcr
imul
adc
pusha
pusha
and
pop
inc
addr16
cmp
ret
pop
inc
pop
xchg
pop
fiadd
lods
push
popa
jae
ins
or
and
cmp
mov
mov
retf
mov
addr16
mov
push
pop
cmp
stos
adc
dec
nop
xor
ss
iret
ror
scas
push
mov
int
inc
and
xor
in
sub
xchg
cmps
xor
pop
xchg
inc
movs
cmc
jns
mov
dec
jmp
std
cmc
out
pop
sub
xchg
ror
imul
mov
xchg
mov
jbe
out
in
sbb
aas
and
loopne
adc
iret
xor
xchg
dec
lods
cwde
addr16
pop
add
retf
cmp
xchg
push
inc
cli
ja
mov
cmps
int3
test
movs
in
adc
mov
outs
mov
jl
movs
dec
and
sbb
repnz
xor
int
fdivp
adc
push
test
jnp
pop
ret
(bad)
mov
fidiv
jmp
xchg
and
gs
dec
sahf
jo
inc
pop
mov
hlt
ins
adc
inc
adc
nop
jne
xchg
or
adc
fwait
mov
mul
sbb
mov
ja
adc
push
mov
ret
pop
not
sub
adc
and
stos
aam
inc
pop
add
pushf
repnz
inc
test
dec
mov
loop
mov
pop
imul
fld
mov
dec
das
sub
sub
sti
cld
aas
sub
movs
jecxz
and
sbb
imul
ins
push
jmp
ds
xchg
(bad)
jp
add
out
xor
(bad)
adc
adc
sub
add
mov
daa
mov
and
inc
mov
inc
arpl
daa
pop
int
imul
gs
test
scas
or
mov
inc
adc
push
jo
adc
ret
rcr
xchg
push
call
pop
out
popf
aad
(bad)
sti
pop
xor
aas
pop
retf
add
nop
cmc
loope
fsub
jno
cmp
movs
mov
cmps
xchg
mov
std
or
mov
xchg
cmc
cmp
lods
mov
adc
add
sbb
fimul
xlat
inc
rol
cld
pop
inc
add
(bad)
call
sbb
icebp
je
aaa
sbb
adc
cdq
xchg
(bad)
lods
jns
push
test
cmp
jno
mov
mov
sahf
add
xor
adc
inc
mov
imul
fs
pop
push
fisub
aaa
pop
icebp
jne
push
out
and
mov
jmp
adc
fnstenv
(bad)
(bad)
shl
pushf
cs
ret
dec
inc
mov
xchg
or
jg
adc
cld
fist
das
adc
in
cmc
aad
sti
in
push
cdq
sub
mov
dec
movs
inc
mov
cmps
outs
jg
ret
adc
and
out
ds
xchg
and
mov
and
mov
add
pop
mov
jp
fwait
repz
cmp
arpl
str
pop
aas
loope
and
(bad)
cli
les
out
rcl
test
test
and
inc
aaa
add
jmp
mov
dec
into
out
xor
cdq
sub
fyl2xp1
ret
jne
push
adc
jl
sub
mov
(bad)
mov
inc
mov
dec
cdq
mov
loope
fs
cmp
mov
pop
int
sbb
imul
(bad)
stc
daa
or
cmp
pop
adc
ins
stc
int3
out
mov
sub
dec
push
mov
ja
loop
sub
daa
(bad)
lock
fwait
mov
(bad)
and
adc
push
dec
ret
data16
xor
std
add
cmps
xor
mov
shl
xchg
pop
ror
or
in
js
out
js
lods
sbb
pop
shl
push
scas
adc
gs
outs
loope
pop
ss
pop
xchg
mov
mov
or
loope
xchg
push
xchg
icebp
es
les
ins
sbb
mov
gs
jmp
jge
sbb
push
cmp
aad
or
repnz
dec
mov
shl
loope
push
sub
mov
cmp
jns
adc
xchg
(bad)
sbb
outs
test
mov
cmp
enter
stos
repz
jmp
ss
inc
cwde
outs
test
retf
add
ror
ins
and
(bad)
cmp
cdq
or
mov
mov
jns
stos
xor
repnz
imul
sbb
ins
je
cmp
xchg
sub
dec
je
xchg
mov
add
xchg
fs
(bad)
lahf
mov
and
lods
or
and
rcr
rcr
sbb
sahf
sti
add
adc
mov
jae
data16
hlt
dec
or
push
jmp
push
dec
xchg
cld
push
pop
sbb
mov
test
gs
jae
lds
aam
sti
ret
jp
mov
adc
add
iret
aam
movs
and
dec
xchg
pop
xchg
mov
nop
call
addr16
test
cmp
pusha
push
rcr
addr16
mov
jne
add
lods
fld
jg
sub
ins
xchg
jmp
mov
push
add
add
sahf
cmc
arpl
and
pop
out
(bad)
xor
shr
in
sbb
(bad)
push
push
dec
inc
fidivr
leave
adc
jmp
les
aaa
push
pop
mov
mov
retf
push
sub
cmp
mov
pop
fs
sbb
adc
or
es
cmp
(bad)
inc
cdq
shl
(bad)
and
add
dec
inc
inc
nop
sub
xor
div
mov
mov
retf
pop
jbe
mov
loopne
(bad)
inc
arpl
xor
stc
int3
xor
pop
lock
or
cmps
cmc
call
retf
rcl
(bad)
std
sub
(bad)
lahf
shl
(bad)
jb
mov
mov
cmps
pusha
aaa
pop
inc
fsubr
xor
mul
adc
sbb
mov
mov
xor
sbb
push
cmc
xor
mov
sahf
stos
fwait
scas
outs
add
mov
adc
and
inc
shl
jnp
inc
cmp
push
cld
cmps
push
nop
push
outs
sub
repnz
xchg
int
clc
fld
add
xor
cmp
jl
mov
push
xor
jmp
(bad)
out
mov
sbb
lods
pop
mov
lock
out
cli
inc
pop
ja
je
sbb
out
repnz
cld
in
or
pop
das
fild
nop
jmp
loop
rol
sub
or
ins
mov
mov
dec
(bad)
pop
fcomi
out
or
mov
mov
xchg
cmp
fidiv
bound
xchg
cmps
xlat
xchg
inc
cmp
neg
aad
lock
pop
in
add
pop
or
jg
cmc
push
std
es
xor
or
rol
add
aam
nop
xor
test
mov
movs
int
sbb
jge
aad
icebp
jg
bswap
retf
and
daa
cld
push
or
xchg
shl
stc
popf
or
and
mov
mov
mov
mov
data16
mov
shl
ins
or
xchg
dec
xchg
dec
jge
sbb
xchg
push
push
fwait
retf
inc
pop
das
(bad)
fcom
mov
cmps
test
call
adc
stc
iret
inc
sub
retf
add
jbe
lahf
pop
int
add
out
mov
mov
test
leave
idiv
and
fisttp
scas
rcl
adc
scas
fwait
popa
adc
aaa
dec
add
jmp
mov
icebp
sahf
fucomp
and
and
add
in
shr
sub
cmp
enter
inc
adc
retf
push
dec
and
popa
or
fsub
pushf
push
or
or
jg
cs
(bad)
lds
xchg
mov
mov
loopne
inc
or
cmp
xor
ret
push
mov
sbb
push
dec
cmp
sub
mov
adc
cmp
mov
jmp
dec
adc
arpl
popa
rcl
(bad)
movs
adc
sub
mov
test
ret
add
xchg
push
push
es
icebp
imul
dec
neg
(bad)
ins
ret
enter
mov
iret
(bad)
cli
and
add
jmp
mov
(bad)
popf
inc
push
js
data16
inc
retf
jecxz
sbb
push
mov
xor
sbb
aad
js
aad
sbb
fisubr
daa
xor
xor
push
neg
adc
push
jno
repnz
mov
mov
cli
loope
(bad)
stc
cdq
cmp
cmp
add
mov
sbb
neg
jae
clc
adc
rcl
xchg
xchg
cmp
(bad)
pop
jne
jnp
xor
cmps
pop
pop
dec
loope
inc
ins
mov
(bad)
or
and
test
fld
and
sar
jecxz
push
fimul
bound
jne
jne
nop
xchg
jg
jl
push
mov
ss
test
add
data16
ss
jmp
ja
nop
aas
cmp
shl
std
pop
mov
out
fldcw
dec
mov
(bad)
imul
dec
sbb
aaa
and
(bad)
push
enter
pushf
call
dec
ffreep
scas
int3
or
and
rol
shl
push
pop
fistp
xor
mov
inc
fucomip
iret
dec
mov
out
or
or
dec
rcl
call
les
cmps
movs
jb
dec
add
mov
dec
ret
xchg
movs
jne
mov
mov
aad
retf
data16
stos
push
hlt
stc
push
pop
mov
adc
mov
push
ins
inc
shr
cmp
icebp
ds
div
jno
push
imul
mov
lods
clc
push
xlat
xor
(bad)
push
sbb
fcomp
mov
(bad)
cwde
adc
mov
shr
out
in
rcl
sbb
fdiv
cmp
aas
jle
aad
pop
sub
aaa
mov
aam
test
xchg
fnstenv
sbb
aam
outs
cmp
inc
add
add
sbb
(bad)
test
jnp
or
and
jecxz
add
and
pop
xlat
(bad)
xchg
cmp
fisub
jnp
popf
adc
pop
jmp
lods
dec
jno
test
nop
mov
ficomp
jns
fimul
es
lea
mov
stc
ret
inc
pop
xlat
call
call
cld
push
and
ds
fst
mov
fist
std
(bad)
aam
inc
xor
ror
sbb
mov
outs
in
adc
mov
push
push
jl
push
sub
das
push
mov
sbb
push
mov
mov
test
enter
add
cdq
mov
in
mov
movs
pusha
sub
test
or
sub
xchg
push
add
fimul
xchg
out
jge
dec
fsubr
and
cmps
sbb
push
pop
(bad)
rcr
loopne
mov
sub
repnz
aad
in
cli
scas
(bad)
jmp
push
xor
fisub
popa
inc
cmp
retf
out
cld
mov
jns
dec
inc
add
fcomp
xchg
push
add
adc
loop
retf
jg
sti
jmp
in
mov
popf
pop
int3
add
into
add
and
sbb
(bad)
(bad)
xchg
pusha
ret
push
sub
xchg
pop
je
or
rol
leave
push
mov
mov
add
shl
pop
inc
inc
fst
adc
into
and
sbb
dec
or
(bad)
and
sbb
movs
jecxz
scas
pop
cmc
lods
add
call
xchg
adc
lds
jmp
lock
shl
sbb
mov
mov
outs
pop
jle
sbb
sbb
repnz
out
scas
retf
cmps
test
nop
dec
ins
dec
cmp
fld
cmp
or
arpl
sub
retf
adc
jle
nop
or
iret
test
leave
leave
add
call
xchg
xor
push
test
nop
je
pop
mov
mov
aaa
dec
push
leave
sti
adc
test
sbb
(bad)
cld
popf
jae
cli
inc
inc
imul
ss
arpl
mov
pop
aad
jnp
push
mov
pusha
int3
push
sbb
lods
ins
in
push
pop
push
sub
xor
inc
mov
mov
sub
cmp
ins
mov
loopne
pop
and
popa
or
dec
xchg
test
(bad)
add
sub
or
xchg
sub
mov
or
ds
in
fcom
cs
fwait
inc
pushf
mov
and
aaa
mov
cmp
cmp
test
into
jp
cmp
(bad)
adc
call
not
js
push
aaa
loop
popa
in
adc
or
inc
pop
mov
mov
dec
in
cs
xor
adc
daa
add
mov
adc
dec
pop
add
(bad)
push
add
popa
retf
mov
repnz
push
push
daa
cmp
jl
loope
adc
and
lods
xor
loop
fisubr
sub
inc
arpl
xchg
and
mov
cmc
je
ret
and
icebp
call
sbb
out
loop
popf
dec
shl
xchg
rcl
loop
loop
pop
xor
mov
loop
in
test
retf
jg
xchg
aad
mov
pop
retf
mov
test
jae
push
push
call
or
dec
or
dec
pop
int3
and
mov
mov
xor
std
lds
push
and
xchg
cwde
cmp
hlt
lds
imul
dec
repnz
inc
or
fs
inc
cmp
cdq
movs
cmp
xchg
in
(bad)
out
xchg
popf
jns
add
push
xor
jno
pusha
xlat
leave
jo
jbe
out
inc
jge
or
mov
push
adc
sbb
lods
and
jp
leave
xchg
popf
aas
(bad)
mov
pop
ja
outs
cmps
push
or
inc
test
mov
inc
jge
fwait
popf
or
inc
jno
and
mov
and
dec
repz
xor
xlat
pop
adc
xor
ss
lds
and
and
pushf
pop
inc
test
fist
(bad)
ret
mov
call
fs
push
mov
jmp
mov
outs
out
fnsetpm(287
cmps
retf
add
add
mov
test
xchg
xor
and
mov
dec
mov
pop
out
ins
mov
jns
cmp
test
ficomp
cdq
in
push
pop
shl
sbb
fiadd
adc
pop
and
test
inc
fdivr
cmp
mov
stc
inc
dec
sub
(bad)
push
cmp
jp
shl
push
cld
cmp
jns
loope
ret
aad
pop
sub
cmp
fisubr
xchg
jmp
mov
aam
lea
(bad)
mov
and
add
sbb
mov
stos
inc
dec
retf
inc
loop
or
ret
movs
enter
mov
shl
pop
popf
dec
push
movs
and
dec
push
sahf
in
ins
lock
fndisi(8087
cwde
stc
and
mov
pop
test
stos
sbb
in
hlt
xchg
sub
in
test
xchg
sbb
data16
sbb
leave
mov
call
in
dec
inc
xchg
ss
xchg
iret
test
dec
shr
jmp
fdivr
shr
movs
dec
mov
shr
loop
ins
adc
and
push
sub
add
cmps
xor
jae
(bad)
sub
jp
mov
cmp
test
leave
inc
or
mul
sub
test
in
adc
into
iret
cmp
mov
inc
data16
test
cmp
cmp
xchg
mov
adc
mov
mov
mov
dec
mov
sbb
fcomp
add
jle
das
sbb
dec
pop
jnp
out
pop
mov
fnstsw
push
outs
in
in
jno
sub
jne
fnstenv
and
retf
in
push
int3
lods
mov
inc
sub
fs
stc
xchg
sub
sar
jg
and
mov
sub
jmp
mov
xchg
add
adc
mov
test
pop
test
sbb
lock
scas
addr16
lds
ret
cmps
fidiv
mov
sub
iret
sub
push
jns
popf
sahf
fstp
popa
fild
cmc
xor
cmp
in
cwde
push
xor
add
clc
push
mov
jle
mov
cmc
bound
xadd
fmulp
or
inc
lahf
enter
out
lahf
sbb
jb
sub
mov
inc
cs
and
out
mov
fs
mov
fdivr
mov
sbb
pop
push
popf
hlt
pop
lahf
ins
fmulp
mov
pop
or
cmp
lea
ret
das
pusha
cmp
mov
xchg
pop
outs
sbb
pop
retf
fbld
sub
and
arpl
es
pop
add
shl
adc
fsubr
inc
out
imul
lahf
out
jno
xlat
cmp
stc
xlat
std
int3
outs
lahf
inc
add
sbb
mov
(bad)
int
rol
mov
dec
mov
push
imul
jns
sub
inc
in
addr16
lock
mov
mov
mov
xor
aas
(bad)
pop
xchg
mov
call
sbb
push
and
xchg
faddp
mov
xchg
rcl
jle
adc
mov
sub
sbb
fist
mov
test
sbb
test
cli
mov
mov
scas
push
xlat
enter
(bad)
xor
sbb
js
add
dec
adc
jae
mov
dec
popf
jb
add
xor
cmps
out
xor
xchg
stos
mov
fnstenv
imul
adc
mov
js
xchg
and
mov
iret
xor
mov
inc
ins
push
lods
xchg
push
daa
sahf
pop
out
xor
int
cmp
or
push
(bad)
outs
or
sbb
dec
mov
test
stos
fldenv
inc
pop
dec
pop
icebp
or
sub
or
mov
mov
std
push
retf
mov
adc
jno
add
bound
pop
call
jo
xor
mov
js
jecxz
jmp
pop
fistp
idiv
jecxz
enter
inc
in
mov
ds
out
dec
adc
jne
jle
sub
and
and
sbb
icebp
xlat
test
mov
mov
push
or
dec
xor
lds
(bad)
mov
mov
push
xchg
fdiv
in
test
test
push
(bad)
mov
lods
push
mov
jae
cmp
sub
lods
push
adc
stos
or
outs
test
mov
out
ins
jns
jns
movs
pop
gs
stc
leave
pop
stos
bound
and
test
ja
push
shl
shr
fisubr
jl
sub
pusha
out
pop
cmp
xchg
out
push
call
cmps
sbb
jae
mov
jb
bnd
sbb
sub
push
jns
add
mov
ds
sbb
cmps
sahf
popf
mov
sbb
xchg
inc
push
in
les
push
cmp
dec
lea
mov
pop
sub
test
adc
jne
xor
dec
imul
push
into
sub
dec
call
pop
mov
test
retf
data16
mov
stos
stc
test
inc
lds
push
aam
dec
aad
mov
jp
push
aas
and
sbb
(bad)
dec
stc
pop
out
(bad)
push
push
or
fidiv
add
and
push
retf
cmp
mov
les
bound
fnstcw
mov
xchg
add
dec
cmps
dec
int
mov
pop
inc
jge
push
jp
mov
in
push
fsub
pusha
add
test
test
mov
fucomi
dec
mov
(bad)
movs
or
mov
cmp
fwait
(bad)
outs
scas
mov
loope
push
push
push
xor
nop
aam
pop
mov
rcr
fild
test
sub
mov
mov
push
mov
ins
jno
push
or
and
aas
sbb
mov
mov
mov
cmp
push
inc
mov
sbb
sub
(bad)
mov
sub
inc
(bad)
push
push
push
dec
shr
dec
sbb
mov
inc
sub
sbb
push
jmp
pop
push
mov
cs
sahf
xor
mov
test
mov
mov
jg
ja
stc
leave
mov
adc
and
adc
stos
movs
pushw
mov
inc
sub
lods
inc
iret
out
fdiv
(bad)
cmp
repnz
mov
popa
jo
jp
outs
mov
not
push
jmp
retf
popf
mov
loopne
shl
fild
push
cmp
out
lahf
lahf
(bad)
(bad)
push
xchg
or
daa
test
pop
or
mov
mov
jnp
dec
fwait
ret
xchg
retf
fistp
fldenv
mov
out
xor
stos
pop
call
(bad)
push
adc
cwde
jno
push
lods
sbb
and
push
es
jmp
add
mov
cmp
pop
push
ins
mov
or
mov
enter
test
pop
sub
ins
adc
fcomp
je
xchg
xor
cmp
in
pop
test
add
(bad)
push
cmps
popf
ins
sub
push
xor
dec
inc
inc
rol
or
mov
or
adc
xchg
cwde
inc
push
or
xchg
xchg
jno
out
mov
xor
fst
dec
bswap
lahf
in
or
pop
xor
sub
retf
sub
int
jns
xor
and
loope
dec
mov
jp
neg
outs
cmp
dec
push
and
add
aad
icebp
adc
cld
inc
into
xchg
aas
push
cmps
mov
retf
cs
xchg
dec
nop
addr16
iret
fcmovu
inc
cmp
inc
inc
test
addr16
std
loopne
or
sbb
(bad)
sub
add
imul
dec
inc
jle
adc
push
imul
(bad)
mov
hlt
lock
scas
push
popa
out
adc
movs
pop
(bad)
push
mov
mov
(bad)
xchg
ins
inc
sbb
push
dec
outs
add
mov
mov
idiv
mov
sbb
pop
jno
mov
daa
loope
mov
call
cmp
loopne
fsub
dec
fs
sbb
jmp
stos
sub
xor
fisub
pushf
inc
push
mov
pop
scas
bnd
out
rol
loopne
cmp
lods
inc
stc
sbb
pop
pop
pop
mov
retf
bound
das
xchg
ss
iret
add
pop
pop
mov
push
sbb
movs
jle
sbb
fadd
jle
jnp
imul
sub
adc
dec
cdq
sbb
out
retf
mov
mov
xchg
push
xchg
retf
retf
shr
or
xor
pcmpgtd
(bad)
out
ret
inc
movs
push
(bad)
data16
jl
(bad)
mov
and
mov
sar
mul
inc
xchg
and
sbb
pop
push
inc
cmp
sbb
rol
lea
fadd
cli
mov
dec
and
xor
and
add
jl
fdivr
dec
pop
push
ret
push
and
jns
jno
dec
and
ret
cld
xor
test
leave
in
mov
push
gs
or
int
sar
push
xor
cmps
jmp
inc
mov
xchg
inc
into
or
mov
pop
fmul
push
mov
sub
ins
in
fnsave
loopne
pop
jns
dec
mov
out
mov
dec
xchg
mov
outs
(bad)
imul
stc
imul
jmp
jle
pop
mov
pop
xchg
mov
ins
lock
xlat
outs
pop
and
and
xchg
sub
xor
jo
xlat
std
mov
or
daa
jecxz
bound
pop
pop
add
adc
dec
jg
jb
inc
and
nop
jl
jnp
ret
clc
xlat
jecxz
data16
sbb
bound
sbb
adc
iret
ins
das
cmp
pop
pop
ret
cmp
sub
jmp
movs
and
mov
mov
das
add
dec
jae
and
mov
xor
jns
sar
pop
sub
add
jmp
and
sbb
shl
add
aad
mov
frstor
adc
into
movs
into
mov
imul
lods
xlat
ins
aas
gs
mov
hlt
push
mov
and
sbb
pop
pop
ror
pminub
or
out
push
push
mov
pop
xchg
movs
push
jmp
outs
(bad)
rcr
pop
call
imul
cld
movs
and
ret
in
sbb
out
pop
addr16
inc
aad
adc
mov
sar
or
or
cmps
mov
sub
int3
sub
xchg
xchg
mov
jle
aas
idiv
fldenv
pop
das
mov
ins
lock
xor
pusha
and
into
sahf
popa
rcr
pop
dec
in
pop
sub
mov
mov
sub
scas
aas
imul
retf
loopne
in
ret
sbb
sub
bound
xchg
scas
(bad)
clc
in
imul
jg
mov
enter
or
test
pop
sahf
dec
loope
jmp
cmps
(bad)
add
add
dec
sub
(bad)
adc
rcl
sbb
movs
inc
add
pop
inc
mov
js
stos
mov
xor
iret
fs
in
and
popa
mov
xchg
pusha
call
push
(bad)
aam
retf
xchg
test
sub
add
pop
jmp
fucomip
movs
comiss
pop
xor
ret
gs
stos
lds
dec
repz
jle
fmul
stos
popa
pop
dec
pop
cs
cmp
das
and
xchg
adc
push
or
jae
jmp
movs
mov
lea
clc
enter
js
jecxz
fwait
enter
repnz
inc
cli
in
jmp
sar
push
add
aam
pop
cmp
in
push
out
scas
dec
shl
ror
ins
mov
adc
or
mov
mov
cmp
xor
outs
pop
fbld
ja
scas
jmp
or
add
std
inc
lods
inc
hlt
cld
jg
fdiv
out
les
clc
xchg
fsubp
inc
out
lea
and
or
pop
scas
adc
ret
cmps
mov
mov
adc
jge
mov
mov
jnp
fisubr
into
mov
jl
xlat
mov
adc
xor
iret
adc
dec
mov
inc
dec
mov
test
and
xchg
jp
push
iret
pop
(bad)
mov
push
int
mov
sub
je
stos
pop
out
aam
lods
pop
pusha
out
dec
mov
ficom
test
push
or
mov
(bad)
fdivp
loopne
mov
in
or
inc
bound
mov
int
ja
(bad)
sub
jae
push
push
adc
in
push
push
pop
scas
ja
js
adc
in
gs
push
inc
in
sub
mov
fcmovb
cmp
dec
mov
fiadd
and
mov
popf
imul
shl
adc
push
outs
in
lock
dec
scas
cmp
xor
push
cmp
call
fisubr
xchg
sbb
int3
ret
inc
xlat
mov
mov
fldcw
test
mov
or
fld
shl
(bad)
lods
pop
ret
xchg
adc
adc
lahf
enter
mov
pusha
pop
stos
mov
js
mov
int3
shl
enter
jae
inc
test
push
add
push
je
sub
adc
icebp
sub
push
pop
dec
xor
pop
outs
pop
xor
ds
push
jmp
retf
cld
mov
shl
mov
xchg
(bad)
loopne
sub
cmps
xchg
dec
cmp
lahf
ror
adc
sbb
xor
xchg
jp
dec
xchg
pop
and
and
cli
push
push
inc
mov
inc
ja
dec
out
mov
test
das
push
shr
adc
dec
popf
or
pop
mov
ret
stos
jmp
jle
clc
mul
scas
push
inc
mov
mov
and
(bad)
adc
and
and
mov
clc
xchg
mov
imul
or
xor
and
(bad)
push
fldpi
jmp
lods
scas
cdq
stc
in
aaa
xor
cdq
(bad)
push
pop
jb
outs
inc
(bad)
inc
dec
sub
xchg
enter
jge
mov
test
jae
mov
fstp
mov
push
mov
ins
idiv
push
xchg
xchg
jae
lds
mov
call
enter
and
fs
mov
inc
xchg
fdivr
(bad)
push
(bad)
adc
pop
jno
cmp
ss
mov
sbb
mov
(bad)
aam
and
fcom
das
(bad)
and
mov
jmp
cli
out
enter
imul
shl
les
xchg
gs
mov
xchg
ret
js
das
xchg
lock
inc
push
jne
lods
pop
adc
xor
jg
cmp
mov
cmp
cmp
xor
stos
push
sbb
cmp
pop
test
push
idiv
(bad)
hlt
adc
add
mov
inc
enter
sar
outs
dec
stos
into
into
mov
nop
inc
ja
test
xchg
dec
sahf
xchg
and
sbb
stos
int3
xlat
xor
leave
cmps
daa
lods
imul
icebp
retf
scas
dec
mov
mov
xor
xor
out
not
in
sahf
or
test
add
icebp
hlt
popf
adc
fsubr
(bad)
repz
and
fprem1
pop
cmp
xor
mov
pop
push
adc
fadd
sbb
(bad)
nop
pushf
ficomp
pop
adc
outs
stos
xor
repz
add
retf
fld
xchg
mov
dec
mov
mov
add
xchg
popa
rol
pop
sbb
(bad)
jne
(bad)
inc
mov
adc
hlt
cmps
jmp
mov
adc
push
clc
lods
outs
jmp
push
push
addr16
nop
popa
repz
ins
pushf
addr16
hlt
xchg
jecxz
sub
fwait
bnd
fcmovnu
push
pushf
ror
outs
push
push
cmpxchg
and
cdq
cld
or
in
adc
and
xor
imul
xchg
sub
test
push
or
out
dec
dec
aas
out
inc
lods
mov
dec
dec
mov
push
mov
call
sub
and
sbb
add
test
test
adc
sub
int3
adc
mov
mov
adc
sub
jle
mov
dec
sbb
jge
jbe
popf
xchg
mov
add
js
popf
loopne
jnp
mov
and
adc
push
xchg
outs
pop
test
ror
lea
add
sar
loop
imul
pusha
add
sbb
pop
pop
icebp
mov
mov
ja
pop
icebp
or
jecxz
jl
ja
fst
mov
ret
scas
add
adc
lea
jbe
ficomp
lock
fist
lock
jle
pop
pop
imul
(bad)
loope
xor
xchg
inc
adc
jo
dec
hlt
setl
and
push
ss
movs
xchg
jbe
pop
cmp
aad
add
(bad)
jne
inc
imul
call
aaa
imul
(bad)
mov
push
hlt
popa
ja
lods
lds
icebp
sub
rcl
pop
rsqrtps
cmp
arpl
ins
retf
cwde
mov
lds
stos
adc
cmps
inc
xchg
in
pop
dec
out
inc
arpl
pusha
loop
jo
lahf
jae
in
test
jae
cli
push
dec
mov
sbb
push
repnz
out
or
cli
pop
gs
push
add
mov
test
out
icebp
(bad)
jg
mov
inc
hlt
pop
xor
xchg
jge
sbb
push
inc
jbe
cdq
pop
sub
xchg
xlat
and
pop
sar
leave
mov
fist
xchg
mov
rcr
add
push
es
rcl
xchg
movs
cli
cmc
leave
sub
mov
shl
or
out
ret
cmp
test
mov
lahf
and
pop
in
(bad)
bound
ror
jp
adc
and
retf
push
ret
jns
pushf
mov
mov
sbb
xchg
mov
jb
sahf
cld
xchg
sbb
push
cmps
adc
xor
cld
cmp
add
mov
fidiv
mov
sbb
out
sub
das
fimul
mov
or
jno
jns
and
imul
pop
add
shl
sub
mov
and
pop
outs
je
mov
or
(bad)
aaa
test
shl
or
cmps
stc
jecxz
(bad)
push
dec
mov
ret
push
inc
push
jp
pop
out
dec
in
ins
or
fadd
cmp
out
out
adc
cs
dec
mov
xor
loopne
ficom
xchg
push
or
add
adc
add
cmps
cs
cld
fdiv
and
and
es
adc
aad
sbb
ret
aaa
pop
inc
fwait
mov
mov
sar
inc
ret
out
xor
shr
push
out
push
arpl
je
cmp
mov
mov
(bad)
xor
push
je
mov
scas
outs
xchg
add
pop
and
mov
mov
xchg
adc
aad
and
(bad)
cld
and
push
sub
ins
test
das
jns
into
out
cs
fucom
push
jmp
dec
repz
ret
and
dec
jmp
sub
ins
mov
pop
mov
inc
mov
cdq
jp
fld
jmp
fwait
dec
jnp
dec
add
pop
cmps
mov
add
xchg
out
ja
xor
xor
loope
mov
add
cwde
std
movs
dec
xchg
mov
jno
nop
pop
stos
movs
cmp
inc
call
jns
adc
and
mov
and
jle
cli
dec
inc
cmps
xlat
sar
pop
mov
jl
mov
mov
dec
icebp
nop
lods
(bad)
and
push
add
neg
fwait
cli
enter
and
lahf
push
ficomp
out
loopne
movs
fisttp
and
rcr
push
shl
jle
ret
pop
jbe
add
test
imul
(bad)
rcr
out
inc
xchg
mov
add
scas
outs
cs
outs
and
push
or
outs
test
mov
push
add
shl
jb
loop
xchg
(bad)
loop
call
or
mov
test
and
or
sahf
dec
arpl
fmul
test
scas
and
aaa
pusha
jge
loopne
dec
ins
jne
inc
test
xchg
pop
loope
jp
pop
sub
sbb
inc
sbb
dec
outs
cmps
or
dec
sub
add
outs
rcr
sbb
loopne
test
call
jmp
out
adc
repz
dec
pop
cdq
lds
movs
push
data16
fsub
js
dec
lock
dec
retf
mov
xchg
lahf
cmps
cmp
stos
cmp
js
mov
cmps
pop
cld
mov
mov
add
mov
mov
mov
les
inc
rcl
mov
add
cmp
sub
loop
adc
retf
sti
js
dec
nop
imul
ds
icebp
add
and
hlt
mov
sbb
and
xchg
add
xchg
in
push
lea
retf
in
sub
loopne
sahf
jmp
arpl
rcr
sub
sub
in
jmp
add
xacquire
(bad)
cmp
movd
jecxz
loope
mov
movs
push
nop
add
and
inc
lods
xchg
mov
js
jg
bsf
mov
data16
push
fidiv
push
xchg
xchg
push
daa
dec
les
rcr
xor
cmp
adc
mov
adc
mov
mov
daa
pop
jnp
push
(bad)
ds
fwait
sub
cmps
dec
xlat
into
jl
push
mov
mov
or
(bad)
push
or
pusha
push
ror
mov
aaa
jg
das
adc
enter
ins
test
xchg
sbb
ja
shl
fincstp
mov
test
sbb
add
or
dec
rcl
fimul
sbb
les
sbb
mov
test
mov
mov
add
xor
jg
add
dec
shl
add
xchg
sub
mov
sti
in
(bad)
inc
inc
aaa
push
in
mov
mov
add
inc
add
jbe
aad
jmp
mov
loope
jno
dec
int3
lock
inc
in
sahf
push
sub
mov
idiv
(bad)
push
pop
cmp
jno
xchg
sbb
pop
call
ins
xor
outs
pop
ficom
jb
aam
rcr
pop
push
ret
mov
or
xchg
jecxz
sub
xor
fmulp
or
jl
(bad)
(bad)
shl
stc
in
ret
sahf
xchg
cs
mov
(bad)
fiadd
pop
dec
jo
add
or
add
movs
call
adc
fcom
es
jbe
js
inc
sbb
add
stos
dec
add
xor
cmp
aaa
or
fst
ds
xchg
int
std
inc
in
test
sub
cmps
sar
mov
ret
mov
dec
fild
mov
popa
int3
pop
cmp
mov
fild
jns
fisub
loop
jp
mov
adc
cmp
xor
aaa
mov
sbb
add
mov
mov
or
stos
sbb
cmp
stos
xor
xor
cmps
mov
ins
pop
fcom
push
add
cmp
cmps
push
(bad)
cmp
enter
fwait
iret
xor
das
xchg
sahf
loop
mov
jbe
cld
fwait
sub
jns
and
mov
lea
push
jne
xor
adc
mov
hlt
xchg
ds
mov
adc
mov
pop
dec
es
out
test
sub
out
popf
jbe
sbb
loope
fadd
and
mov
or
sbb
data16
sti
sar
out
push
mov
dec
adc
xor
movs
sbb
sub
jmp
test
mov
adc
fcmovnb
xor
add
pop
int3
mov
xchg
push
fsubr
push
out
imul
xchg
fcom
clc
push
fdiv
fistp
loop
sub
int
fs
jmp
(bad)
push
sbb
ins
or
push
stc
dec
ret
cmp
in
xlat
sbb
push
jns
retf
popf
push
fwait
aam
sub
dec
lods
adc
fbstp
movs
sahf
cmps
aaa
adc
fcmovbe
fdivr
cmp
clc
sub
aad
sub
std
jns
push
cmc
test
xor
cld
dec
sbb
lods
cmps
sar
mov
cmp
adc
xor
sbb
lods
sahf
sbb
mov
call
dec
rcr
jecxz
movs
push
adc
add
out
aad
and
inc
int3
fld
fwait
jo
sub
loope
test
inc
test
jmp
(bad)
xor
and
pusha
(bad)
jb
pop
and
cwde
test
sub
mov
xchg
mov
mov
ins
lds
gs
add
dec
add
xchg
stos
sbb
lds
xor
vmovsldup
call
and
das
data16
in
mov
aaa
sub
shr
fmul
fiadd
xor
(bad)
aad
test
pop
icebp
and
fnstsw
sti
cmp
and
cmp
ror
in
or
rcl
stos
sub
fnsave
out
sbb
pop
mov
imul
push
js
cmc
sbb
mov
loope
fwait
nop
ror
or
(bad)
stos
or
and
lods
mov
mov
ffreep
xchg
inc
shl
ret
fcmovnu
or
(bad)
xlat
in
xchg
dec
mov
xchg
ins
aas
sti
scas
cmp
xchg
dec
add
jo
leave
aam
mov
shr
inc
cmp
jmp
or
jmp
ins
or
movs
cmps
xchg
mov
xchg
lea
scas
imul
aas
inc
fwait
pushf
not
xchg
sbb
mov
sti
mov
mov
dec
mov
aaa
jbe
dec
(bad)
dec
gs
ds
add
retf
mov
rcl
xlat
cmp
mov
loope
movs
lea
lods
js
ror
adc
jmp
js
xor
jo
sti
sub
outs
scas
dec
shl
sub
sbb
sbb
mov
xchg
lahf
or
sbb
stc
xchg
or
adc
add
mov
scas
popa
xchg
xchg
loopne
fild
sub
mov
cs
lds
cmps
(bad)
out
xor
(bad)
fcom
mov
cwde
push
aad
mov
mov
mov
sub
int3
mov
mov
jne
fadd
pop
cmp
leave
mov
xchg
mov
(bad)
adc
dec
and
call
leave
xor
inc
shr
inc
pop
xchg
sub
(bad)
push
fs
pop
ret
retf
inc
cmp
sub
xchg
test
and
and
je
or
adc
inc
test
inc
cmp
mov
cmc
retf
jbe
vcmpps
ret
push
shl
daa
push
loope
imul
ins
rcl
(bad)
scas
xlat
(bad)
fcomp
mov
cdq
movs
mov
shr
adc
xchg
out
cld
cmp
data16
ret
and
lods
push
jmp
xchg
shl
jmp
mov
inc
loope
push
jbe
inc
mov
sub
mov
sub
mov
jmp
xchg
inc
jno
pcmpgtd
dec
mov
inc
call
mov
pop
push
movs
sbb
mov
loopne
shl
cwde
mov
xor
dec
inc
mov
shl
push
movs
bound
adc
inc
rcr
lea
cld
bound
mov
arpl
lea
cli
or
cmp
and
and
repz
pop
mov
inc
cmp
aad
or
jecxz
dec
or
hlt
scas
hlt
bound
setns
or
retf
ret
test
outs
pusha
outs
rcl
enter
sub
sbb
pop
lods
fnstenv
mov
mov
xchg
inc
pop
push
hlt
ds
hlt
inc
mov
enter
dec
popf
aas
xchg
inc
mov
fistp
hlt
inc
jbe
xchg
icebp
jmp
leave
dec
aam
out
sub
pop
mov
inc
hlt
push
xor
cmp
inc
stos
sbb
out
pop
popf
mov
jge
fcom
int3
or
dec
add
or
dec
std
cmp
pop
adc
pop
data16
xor
cmps
dec
mov
(bad)
call
popa
bound
jno
lahf
or
dec
adc
dec
adc
cmp
pop
add
fist
scas
mov
std
pop
and
fist
neg
jno
jmp
pop
ja
mov
or
mov
outs
fild
out
das
jbe
int3
mov
mov
int
addr16
rcr
add
cmc
aad
xchg
mov
(bad)
xlat
out
mov
sbb
pop
addr16
push
mov
or
pop
fwait
scas
pushf
pop
sahf
sub
jo
jl
cmp
adc
mov
addr16
push
test
xchg
bound
call
pop
dec
mov
aad
outs
and
(bad)
jmp
dec
je
push
data16
test
(bad)
dec
imul
adc
or
inc
jmp
out
nop
cmp
scas
clc
aam
mov
sub
jp
cmp
fisubr
sbb
fnstsw
cmp
or
push
arpl
fistp
or
xchg
xchg
pop
jmp
xor
js
push
jne
shl
aad
scas
mov
loope
retf
jnp
adc
outs
(bad)
mov
call
je
movs
rol
in
repnz
clc
mov
leave
xor
push
sbb
mov
int3
je
maxps
aam
std
out
xchg
test
push
in
dec
sbb
pop
cmp
mov
movs
mov
vdivsd
push
je
mov
cs
movs
jl
mov
leave
sub
(bad)
mov
dec
inc
cmp
mov
dec
pusha
aad
mov
fsubrp
arpl
xchg
outs
sbb
out
sub
adc
daa
cmp
fstp
popf
mov
and
lods
into
imul
leave
mov
xor
arpl
mov
mov
les
xchg
inc
jne
int3
das
jge
ror
or
ret
add
rcl
out
mov
mov
cwde
or
inc
cmp
jno
icebp
or
stos
jae
fsubp
shl
sub
retf
call
jl
or
cmp
das
repnz
nop
sbb
mov
fwait
jmp
push
and
cmps
cwde
xchg
cs
and
sub
sub
repnz
aaa
out
fstp
adc
call
rcl
mov
stos
add
inc
push
cmp
jge
das
add
shr
or
aaa
int3
sbb
mov
lahf
sbb
test
out
dec
push
push
xchg
jg
sti
stos
dec
push
adc
mov
mov
jmp
inc
dec
aam
add
daa
jbe
ret
retf
xchg
aas
iret
idiv
jle
stc
iret
fisubr
adc
or
sbb
or
mov
push
push
das
push
mov
jp
out
inc
stos
cmps
pop
fs
sub
movs
ret
jle
dec
pop
mov
mov
je
(bad)
xchg
mov
enter
sub
movs
lods
(bad)
loop
pop
leave
cli
inc
cmps
dec
mov
mov
jge
inc
retf
push
jnp
fst
xchg
sub
push
adc
retf
int3
enter
jno
push
fdivr
inc
retf
in
and
sbb
mov
adc
ins
sub
in
rol
sub
in
stos
inc
hlt
call
enter
pop
jle
or
mov
dec
loopne
mov
pop
mov
inc
sar
addr16
iret
aad
into
into
adc
pop
dec
jb
mov
leave
jno
push
pushf
cmps
jmp
test
pushf
jl
or
mov
lods
add
nop
jp
stc
xor
or
test
xor
inc
mov
mov
pop
bound
adc
sub
xchg
jge
cld
lds
jmp
sbb
jo
jecxz
xchg
or
(bad)
cmp
sbb
sub
mov
in
je
call
mov
pusha
mov
jp
push
and
dec
fucomi
(bad)
test
imul
xchg
retf
and
(bad)
popa
mov
mov
stos
or
stos
jmp
stos
ret
and
adc
and
sub
in
jmp
xor
mov
mov
(bad)
shr
add
arpl
jmp
icebp
cdq
test
ins
fiadd
(bad)
stc
xchg
leave
sub
mul
inc
in
sbb
and
(bad)
lock
test
or
sub
jge
mov
lods
loopne
movs
popf
xor
dec
push
shl
sbb
sub
test
int3
arpl
fild
retf
fisttp
stos
push
pop
in
jbe
ins
nop
ins
cmps
arpl
sahf
mov
scas
icebp
ins
test
mov
and
push
xchg
mov
out
test
div
mov
mov
sub
adc
dec
cli
pop
sub
cmp
movs
add
or
xor
mov
mov
mov
sbb
add
cwde
pop
repz
xor
push
jbe
lahf
xchg
or
jmp
fidiv
mov
jns
mov
adc
test
sub
jecxz
stos
or
sbb
xor
ss
lea
scas
(bad)
jmp
push
imul
jae
aas
xchg
add
int
test
and
cmp
mov
(bad)
push
mov
sbb
mov
nop
mov
cmp
dec
movs
jecxz
jmp
sbb
bound
inc
ret
imul
or
inc
jge
sahf
ret
jmp
xchg
nop
or
xor
repz
pop
(bad)
outs
out
into
fdivr
bound
and
in
xor
mov
fisttp
retf
inc
jnp
push
push
retf
jl
(bad)
popf
pop
js
or
pop
mov
jge
push
mov
retf
std
xor
mov
dec
push
cli
scas
and
fcomp
test
dec
cwde
inc
into
xor
push
stc
es
push
sbb
jnp
enter
shr
clc
cmp
in
mov
push
inc
call
movs
pop
out
aad
jmp
daa
dec
jb
mov
cmps
push
ret
push
outs
cmp
sub
je
ftst
gs
jmp
outs
mov
xchg
adc
mov
cmp
xor
into
sbb
push
iret
and
ret
loope
sbb
mov
cmps
rcl
lahf
pop
hlt
int3
addr16
pop
add
retf
ins
ja
mov
retf
pop
ds
out
gs
pop
inc
push
(bad)
fbstp
mov
neg
inc
cmp
xor
addr16
aas
mov
pop
stc
aaa
push
xor
aad
push
sti
dec
jno
nop
test
aad
fisttp
mov
pop
pop
cmp
xor
call
sti
cbw
lahf
rcl
pop
int3
aaa
jle
aam
and
mov
lods
fwait
add
lahf
pop
push
or
mov
inc
iret
ret
pop
(bad)
jg
inc
jne
lds
fwait
sub
cwde
adc
jne
mov
(bad)
mov
pop
imul
dec
vpsadbw
ins
xor
jno
out
add
call
mov
pushf
add
dec
ins
or
pop
or
jp
dec
push
aam
jae
sti
jne
cmc
push
sub
mov
adc
lods
lods
push
pop
int
dec
fcomp
jno
xor
fsubr
loop
push
push
sub
call
fimul
scas
dec
imul
into
adc
mov
lahf
sbb
push
mov
punpcklbw
(bad)
fsubr
adc
sub
jno
push
cli
fistp
repnz
repz
pop
cwde
add
pop
xchg
pop
and
inc
jo
popa
loopne
out
jo
push
push
jmp
(bad)
int
rol
stos
iret
movs
cmp
or
arpl
adc
push
xchg
lods
fmul
lahf
stos
cmc
movs
xchg
imul
popa
dec
out
mov
(bad)
bnd
jge
adc
push
push
mov
dec
sti
(bad)
(bad)
call
imul
ret
xchg
movs
sub
adc
add
xlat
rcr
pop
js
mov
mov
jne
sti
aas
popa
adc
mov
mov
mov
data16
lods
fstp
scas
add
les
push
arpl
sbb
arpl
adc
fiadd
jo
ss
adc
mov
int3
push
std
sbb
mov
es
in
aas
pop
aas
push
ror
les
mov
dec
and
and
mov
hlt
mov
movs
xor
inc
jns
adc
mov
fistp
movs
or
mov
scas
movs
dec
jl
mov
lahf
adc
mov
ss
mov
in
pop
push
cld
adc
xchg
inc
sti
lock
pushf
inc
les
outs
hlt
sahf
cmp
inc
mov
mov
mov
pop
(bad)
setl
sbb
sahf
jb
dec
xchg
cmps
fwait
or
stos
popf
inc
add
(bad)
cmp
push
jmp
arpl
pop
sub
mov
jmp
jmp
scas
dec
ins
xchg
adc
and
and
mov
icebp
and
xchg
add
pusha
sbb
cmp
push
xlat
in
mov
je
lahf
sub
dec
mov
xor
cs
xor
mov
imul
push
sub
inc
jo
dec
cs
xchg
leave
cld
loope
ins
iret
sbb
pop
mov
pop
and
jae
push
cli
ins
xchg
push
(bad)
std
mov
arpl
push
fisttp
xchg
into
(bad)
pop
loopne
mov
sahf
mov
sub
out
imul
addr16
jne
sub
mov
fnstenv
movs
js
push
or
push
inc
fnstenv
xchg
xchg
cmp
pop
mov
icebp
in
mov
cdq
cdq
xchg
and
das
fisttp
xor
mov
test
mov
mov
dec
mov
cmp
xor
loopne
push
mov
mov
cwde
pusha
cdq
or
repz
mov
pop
(bad)
pop
jb
adc
nop
jecxz
ror
icebp
jns
cmp
sub
sub
jle
inc
push
lds
xlat
cmp
or
xor
xor
in
mov
sbb
pop
or
adc
pop
xchg
xchg
retf
scas
enter
mov
call
adc
dec
lahf
mov
sub
cmp
pop
ins
aas
fist
xor
sbb
aaa
push
mov
jnp
mov
fistp
jno
cmp
push
lods
pop
add
in
xchg
lds
addr16
sub
int
iret
movs
xor
fwait
aam
sbb
pop
leave
je
ins
rol
pop
dec
jo
ja
aas
xlat
sub
call
out
aas
repnz
scas
jo
ret
frstor
jmp
fld
inc
fisubr
int3
ret
or
cs
(bad)
dec
pushf
int
icebp
cmp
sub
shl
add
jno
ins
jmp
es
rol
inc
jle
mov
jg
sbb
xchg
sbb
push
cmp
and
and
inc
movs
pop
cli
xchg
imul
xchg
or
sbb
scas
fcomp
mov
add
adc
cdq
xor
adc
adc
pushf
xchg
cmp
es
loope
pop
pop
sub
xlat
gs
test
add
pop
loope
repnz
lahf
popa
mov
call
fisttp
and
repz
mov
std
jmp
push
adc
mov
repnz
adc
rol
dec
inc
jge
repz
pop
shl
mov
nop
sbb
movs
sti
mov
(bad)
jae
inc
pop
mov
or
xor
(bad)
xlat
add
(bad)
pop
jle
aam
jmp
fdiv
neg
lock
adc
mov
lahf
aam
jecxz
out
sbb
inc
inc
lds
enter
jno
jge
stos
pop
outs
adc
sbb
xor
mov
pop
add
xor
and
inc
retf
test
pop
adc
cmp
mov
test
push
retf
clc
sbb
aas
pop
test
inc
push
leavew
xor
adc
add
out
inc
jge
sar
pop
ins
mov
into
adc
jae
or
xor
mov
push
mov
sbb
ret
and
and
jne
les
cs
mov
les
loop
sbb
in
lahf
nop
sbb
pop
xor
jnp
pop
cs
mov
jecxz
mov
fdivr
repnz
or
shl
ss
add
into
push
inc
push
xchg
sbb
or
sar
arpl
add
sahf
push
fmul
out
mov
sub
mov
xchg
shl
inc
mov
jno
fimul
push
push
pop
fsub
pop
sbb
(bad)
add
lock
ds
aam
movs
inc
add
popf
movs
and
sub
sbb
lods
ins
pushf
hlt
dec
and
shl
and
and
jo
xor
fisttp
pop
pop
and
test
popf
outs
add
push
(bad)
aad
pop
imul
push
loop
inc
xchg
mov
xchg
add
jae
xor
shl
ins
push
push
test
cmp
pusha
add
je
push
mov
out
sub
popa
out
push
cmps
dec
sub
ret
loope
out
test
sbb
aas
jbe
cs
push
xchg
aam
or
xlat
stos
outs
gs
sti
xlat
and
push
(bad)
int
retf
mov
mov
mov
jb
sbb
test
mov
sub
adc
sbb
fst
xchg
sbb
ror
push
add
jmp
ss
xlat
movs
sub
stos
cmp
jl
cmc
push
and
pop
mov
rcl
test
xor
out
mov
mov
aas
clc
loope
data16
sbb
or
dec
xchg
mov
comiss
fisttp
fcomp
cmp
jno
dec
and
mov
rcl
enter
cmc
sahf
fdiv
repz
std
push
leave
fsubr
pop
shl
pop
fcomip
push
pop
pop
das
cmp
les
push
call
mov
rcr
jmp
mov
mov
fistp
mov
stos
inc
lods
inc
xor
lods
inc
cli
mov
add
int
ja
xor
nop
je
add
cmp
ret
cli
out
adc
mov
cdq
iret
sbb
pop
sbb
push
push
imul
gs
sar
retf
or
retf
sti
icebp
push
sqrtps
mov
clc
xor
pop
ins
xor
shl
jno
pop
sbb
retf
mov
mov
pusha
aaa
adc
add
out
out
dec
fisttp
pop
into
pop
fs
push
inc
push
aam
jo
out
gs
add
(bad)
jg
dec
pop
mov
add
jae
movs
pusha
pop
cmps
mov
(bad)
je
xchg
mov
add
mov
mov
jp
sbb
pop
jnp
retf
pop
ret
mov
push
test
mov
dec
fistp
pop
xchg
(bad)
enter
or
jp
mov
das
fs
add
inc
sti
fimul
lods
(bad)
push
repnz
inc
sub
inc
arpl
add
sbb
loop
mov
repnz
sub
les
test
dec
cmp
push
inc
mov
push
sbb
dec
movs
push
lds
dec
movs
in
in
cdq
call
and
jne
xor
outs
pop
ss
retf
jbe
or
pop
retf
and
jb
xchg
adc
mov
lods
mov
fwait
cld
stos
das
xchg
xchg
mov
cs
push
push
aam
lds
pop
add
pop
ins
cmps
outs
int3
retf
fstp
xchg
fstp
jno
add
daa
mov
call
add
cmp
out
mov
movs
fwait
popa
push
fwait
clc
xchg
cmp
jg
pop
int3
ret
xchg
jmp
adc
dec
das
cwde
sub
popa
hlt
and
loopne
pop
and
push
xor
sbb
addr16
rcl
icebp
sbb
fsubp
sahf
pop
lea
and
sbb
neg
pop
mov
fcomp
xchg
repnz
ret
xor
jne
xor
inc
add
mov
(bad)
xor
inc
idiv
imul
inc
ror
loopne
sbb
jmp
mov
repnz
in
jge
ss
imul
rol
rol
std
pop
stos
clc
jmp
mov
ins
in
or
test
xor
into
mov
jp
sbb
call
or
add
inc
in
push
leave
mov
gs
inc
add
mov
pushf
das
cmc
pop
(bad)
xchg
dec
adc
inc
nop
dec
sub
adc
cmp
loope
xchg
(bad)
push
clc
sbb
push
mov
rcr
aad
push
add
mov
push
mov
ins
dec
aaa
mov
push
out
cmp
and
(bad)
fld1
cmps
sub
call
imul
jo
div
neg
cmps
adc
lds
fldenv
mov
out
xlat
test
mov
xchg
ss
add
adc
pop
aad
sbb
mov
add
sub
and
or
push
mov
jge
sub
mov
inc
test
inc
xchg
sub
push
sbb
pop
je
jmp
cwde
fwait
inc
icebp
aas
adc
xor
int
popf
out
pop
les
mov
sahf
sbb
mov
imul
jmp
retw
mov
stos
movs
clc
and
call
leave
popa
loop
and
adc
lahf
outs
inc
into
ja
retf
scas
sub
mov
mov
adc
rcl
push
ret
mov
fs
or
imul
clc
in
mov
sub
mov
push
imul
ss
xor
jmp
popf
ret
sti
jge
jae
pop
enter
push
mov
jmp
jno
mov
cmp
xchg
push
pop
pushf
add
retf
outs
out
xchg
fcomip
xchg
loop
aad
jnp
fisttp
xor
sbb
jmp
rcl
loop
movs
mov
int3
ret
aad
jmp
dec
pop
loope
push
sti
add
int
pop
pop
ja
test
and
xchg
out
imul
dec
jl
fisub
or
xor
shr
out
hlt
out
pop
xor
adc
cs
shl
addr16
pop
out
out
lods
cs
scas
sub
jae
loope
(bad)
jge
outs
daa
test
inc
push
mov
dec
pop
int
mov
lods
ret
xor
dec
adc
int
shl
int
and
cmp
dec
fstp
inc
outs
mov
addr16
mov
mov
bound
pop
mov
mov
in
mov
scas
movs
mov
sub
inc
shl
ss
pop
mov
jecxz
jnp
jge
xchg
push
in
adc
mov
xlat
mov
inc
sbb
and
and
inc
pop
mov
adc
fs
rol
push
mov
xor
push
in
pushf
pop
lock
mov
add
or
or
test
mov
jl
xor
ret
fwait
dec
sti
out
aas
stos
outs
iret
test
mov
pushf
dec
and
cmps
xchg
sub
and
or
xchg
je
mov
inc
cmp
pop
push
test
out
lea
push
and
mov
cmc
jmp
loop
enter
aam
jno
inc
loop
daa
pop
push
data16
jbe
sahf
pushf
pushf
ret
(bad)
fisubr
pop
shr
and
clc
pop
jle
repnz
xor
sub
sti
lds
and
shr
and
add
cwde
jmp
cmp
shl
jb
push
ds
loope
push
push
in
shl
loop
in
repnz
out
xchg
mov
scas
add
or
push
mov
mov
or
or
ins
and
arpl
inc
in
(bad)
fwait
popf
mov
bound
je
cmc
dec
loop
push
data16
mov
xchg
or
mov
mov
shl
mov
inc
test
xchg
push
(bad)
fcomp
cdq
dec
jp
cli
add
aad
test
add
mov
lds
outs
jmp
xchg
jle
movs
outs
push
xor
dec
enter
cmp
dec
icebp
jg
test
(bad)
repnz
push
dec
dec
cmp
jns
or
pop
cmp
fiadd
lock
popf
out
or
in
repnz
fbstp
and
out
mov
cmp
outs
cmc
xchg
fstp
jle
xchg
push
xchg
mov
or
sbb
lock
cdq
aas
jle
daa
(bad)
xchg
stc
out
push
fisttp
mov
jno
add
mov
jecxz
loopne
mov
pop
inc
jae
mov
stos
call
call
jns
add
adc
push
fdiv
dec
movs
in
sbb
stc
adc
xor
dec
xlat
rcr
xchg
push
mov
stos
and
das
push
ds
mov
iret
push
dec
xchg
cli
bound
pusha
lahf
enter
cmp
cli
std
mov
cli
sub
jmp
and
add
mov
mov
popf
mov
aam
lahf
ins
sub
stos
and
mov
add
imul
xor
cmp
lods
and
sub
leave
leave
fidiv
shr
arpl
dec
in
push
cdq
lea
cli
scas
retf
add
je
xchg
sbb
push
daa
mov
lea
int
int
cli
call
(bad)
fsubr
rep
leave
pusha
loop
jbe
dec
addr16
pusha
mov
cmp
mov
xor
fwait
in
mov
jecxz
fdiv
xchg
cmps
retf
jmp
add
mov
punpckldq
push
xchg
push
mov
pop
(bad)
xor
ds
(bad)
(bad)
and
std
adc
mov
fs
or
jmp
lahf
xor
fsubr
int
sbb
ins
out
test
mov
int
sbb
js
int
cmp
xchg
lods
mov
or
xchg
jae
addr16
dec
inc
dec
in
pop
fdiv
mov
ins
pop
call
pop
fcmovnbe
fmul
dec
scas
mov
aaa
push
dec
mov
gs
popf
add
int3
scas
out
es
and
fld
cli
pop
adc
data16
inc
hlt
fsubr
mov
dec
fisubr
mov
popf
or
enter
inc
and
mov
in
jns
push
jmp
pop
push
sbb
ret
out
jg
adc
pop
sbb
mov
and
int3
xchg
loop
sti
sub
mov
div
fwait
std
retf
in
pushf
cmp
xor
ror
or
repnz
mov
adc
xchg
call
retf
rcr
(bad)
jle
xor
xor
xchg
ret
fisttp
stos
mov
and
pop
in
inc
pop
dec
jo
test
sub
mov
mov
mov
dec
fld
and
cmp
fisubr
in
jg
cs
inc
mov
cwde
stos
sub
in
gs
xor
shr
cmps
sbb
(bad)
mov
sbb
not
adc
xchg
sub
lahf
mov
jno
imul
sti
xchg
mov
cmp
dec
or
inc
and
pop
into
jmp
cs
add
lea
xchg
daa
xchg
or
xor
pop
ja
add
adc
jmp
and
mov
sub
inc
repz
dec
ror
dec
shr
popa
sub
in
in
pusha
sub
mov
cmps
mov
or
xchg
xchg
sub
cld
in
jb
mov
push
sub
call
aad
push
(bad)
push
mov
xchg
dec
dec
sahf
adc
mov
popa
ins
inc
cwde
xor
jmp
repnz
push
fcmovnb
sahf
les
mov
or
imul
hlt
js
out
mov
repz
or
cmp
ja
mov
sbb
mov
xchg
fwait
mov
mov
sub
lods
ret
shl
mov
fst
mov
cld
cmp
test
pop
dec
pop
push
ret
mov
int3
dec
in
pop
imul
cs
rcl
ret
in
mov
(bad)
pop
adc
or
test
dec
add
mov
(bad)
loop
jb
retf
shl
mov
mov
in
push
mov
(bad)
mov
fisub
pop
scas
enter
in
pop
push
pop
pop
push
lds
out
jmp
jae
loope
test
jmp
push
in
fcmovnb
jp
outs
cmp
add
out
mov
rol
bound
dec
cdq
mov
and
lods
push
test
lock
mov
xlat
(bad)
adc
cdq
stos
sbb
xchg
div
or
push
sti
cmp
aad
jae
xor
movs
jg
int3
aam
cli
and
mov
mov
bound
mov
ret
(bad)
out
icebp
mov
mov
fmul
cmc
jg
aaa
movs
add
stc
ins
add
mov
mov
jo
xor
add
dec
lods
iret
ds
adc
popa
(bad)
dec
mov
jns
inc
jb
mov
sub
dec
cmc
push
out
sbb
iret
jne
jg
cmps
push
or
push
in
mov
mov
sub
or
loope
test
call
ins
adc
sub
and
xchg
daa
push
iret
call
les
cmp
xchg
inc
cmp
lahf
adc
nop
push
pop
pop
xchg
adc
in
cmps
pop
in
loop
ror
sbb
adc
dec
dec
test
inc
add
fdiv
mov
fild
adc
adc
dec
outs
xchg
dec
xchg
int
mov
je
push
dec
(bad)
push
int3
adc
(bad)
loope
bound
mov
test
ror
xor
sti
stos
sahf
pop
nop
push
sbb
mov
mov
loope
lods
mov
and
jl
cmp
sub
fwait
iret
push
adc
leave
dec
daa
sub
loop
dec
jge
lock
aam
inc
or
ds
mov
push
xchg
push
cdq
dec
nop
call
xchg
adc
xchg
imul
movs
idiv
loop
inc
mov
and
lahf
aas
das
icebp
sub
mov
out
nop
cld
push
imul
pop
mov
jnp
pushf
push
lds
in
or
inc
inc
cmp
push
and
sbb
xchg
icebp
shl
sbb
imul
jmp
mov
xchg
outs
jl
mov
push
xor
neg
xor
fld
and
fcomp
test
les
mov
sbb
mov
and
and
lods
fucomp
les
xchg
cmp
push
or
into
adc
add
shl
scas
sub
cmp
repnz
inc
ja
lds
addr16
stos
or
mov
loopne
jne
push
repz
and
sbb
adc
fwait
pop
pop
ret
popf
mov
sub
mov
(bad)
cdq
aad
xor
inc
in
cmp
lahf
jl
sbb
or
xor
ds
push
cmps
sub
mov
shl
sub
pop
mov
jp
pop
rcl
jge
(bad)
jecxz
or
ja
stc
xchg
(bad)
jg
ja
sahf
ss
cmp
cs
dec
inc
add
xchg
xor
(bad)
rol
pushf
imul
cs
stc
(bad)
and
fwait
mov
mov
sub
dec
adc
popa
stos
sbb
mov
xchg
cld
add
xchg
icebp
rol
pop
jae
inc
loopne
dec
pop
movs
or
in
stos
mov
aad
xchg
lock
out
and
push
mov
push
aam
mov
mov
test
fnsave
mov
dec
push
cmp
mov
push
jno
mov
jmp
jecxz
cmp
sub
clc
int3
and
add
push
cmp
mov
fidivr
rcr
loope
inc
ret
xchg
pop
add
outs
or
or
jg
out
mov
repnz
fdivr
call
mov
aam
repnz
xchg
sub
mov
jp
jge
push
xor
fs
pushf
sbb
loopne
dec
jnp
sbb
ret
or
adc
setbe
mov
cmc
out
jmp
ins
mov
xor
ins
sub
xchg
add
ins
sbb
ja
xlat
inc
fdivr
scas
jns
cmp
sbb
bound
mov
mov
jg
fst
cmp
fdivr
cmps
out
jecxz
jmp
enter
add
cmps
ret
ja
daa
ins
jl
cmp
dec
and
(bad)
mov
mov
push
pop
xor
les
xchg
call
xchg
test
or
cli
ds
daa
mov
cld
out
or
bswap
xor
cmp
pop
outs
ret
cmp
pop
(bad)
(bad)
sbb
pop
ja
jns
arpl
push
push
pop
jp
jnp
in
mov
or
mov
mov
int3
aas
and
cmp
test
xchg
mov
add
inc
pusha
stc
push
xlat
sub
adc
or
push
add
in
movups
data16
fsub
lea
lahf
stc
push
or
mov
pop
and
imul
mov
push
mov
(bad)
sbb
ss
shl
inc
jb
xor
add
mov
ret
mov
outs
push
mov
mov
icebp
push
sub
push
gs
jle
sbb
stc
and
movs
maskmovq
div
push
scas
(bad)
mov
dec
sbb
cmps
(bad)
mov
pusha
fdivr
push
shl
in
popa
sub
stc
or
mov
rcr
lods
dec
xchg
cmp
movs
test
jns
hlt
pop
jne
dec
fidivr
ins
cmp
xlat
fisub
lahf
outs
mov
or
and
into
add
das
pop
dec
inc
ret
xchg
mov
je
in
inc
movs
xchg
sbb
add
iret
aas
xchg
(bad)
jle
dec
ds
imul
mov
jp
out
stos
add
and
jmp
mov
mov
icebp
ja
popf
xor
xchg
pop
fsubr
mov
je
push
xor
std
mov
jecxz
pop
movs
stc
add
into
add
jnp
or
iret
loopne
push
lods
pushf
shl
repz
outs
jg
daa
imul
pop
or
dec
add
call
add
movs
add
loopne
retf
jge
push
cmp
mov
and
lods
cmps
retf
scas
push
das
or
dec
adc
(bad)
jecxz
xchg
hlt
push
ss
pusha
push
aad
test
mov
dec
das
clc
mov
pop
sub
jo
sub
add
ds
data16
rcr
cmc
in
out
iret
loop
mov
ret
jmp
xor
popf
fcomp
push
cmp
daa
or
sti
sar
xchg
pop
sub
pop
mov
pop
arpl
jl
xor
js
shl
lds
arpl
loop
fcomp
sbb
and
push
adc
jmp
push
mov
lahf
fmulp
movs
pop
cmp
fdiv
xor
mov
std
add
mov
mov
ror
dec
imul
(bad)
div
adc
sahf
adc
mov
out
fdiv
aas
fs
aas
ins
out
xor
test
shl
test
lock
sub
arpl
sar
outs
pushf
ficom
(bad)
mul
(bad)
jecxz
(bad)
add
pop
loopne
sub
out
jbe
je
rol
adc
jl
stos
ins
(bad)
lock
bound
lds
mov
call
inc
bound
call
test
and
repz
int3
pop
mov
movs
dec
mov
mov
in
lock
inc
xor
inc
das
sbb
loopne
fisub
out
test
sti
add
(bad)
jb
dec
add
push
mov
iret
aam
movs
jnp
mov
pop
mov
xor
rcr
sub
push
jb
xor
sahf
out
cmp
ret
call
mov
clc
xor
fcom
sub
xor
ins
jp
and
dec
mov
fld
fcom
repz
aas
xchg
clc
sub
shl
pop
sub
test
push
or
loope
aaa
dec
mov
ins
cmp
daa
push
sub
rcr
sbb
dec
inc
ja
lock
es
stos
ss
in
cmp
cmps
and
ror
bound
sbb
push
xchg
in
push
inc
jge
sbb
movs
adc
stc
shl
add
fwait
cmp
(bad)
cmp
ins
ficom
pushf
repz
fyl2xp1
adc
add
xlat
sbb
adc
lods
pop
xor
sub
xor
sti
cs
rcr
jmp
test
cs
ret
dec
into
ror
scas
sbb
pop
pop
std
add
dec
hlt
test
or
jle
sbb
fcomp
test
movs
rol
adc
jmp
xor
push
fisttp
pop
mov
cmp
stos
mov
mov
into
xor
jmp
iret
xor
in
sub
outs
scas
or
div
psllq
or
ins
jns
add
(bad)
pusha
add
out
and
ss
mov
dec
pop
mov
xor
aam
cmp
push
rcr
add
dec
sub
push
mov
test
mov
dec
adc
mov
jge
sub
sub
pmuludq
test
imul
ins
dec
mov
add
push
mov
push
idiv
call
sar
inc
movs
stc
add
ss
dec
jle
je
fstp
fadd
mov
repnz
in
pop
pop
jp
scas
cmp
push
push
into
(bad)
jecxz
psrlw
test
lods
je
inc
xchg
add
retf
dec
cld
mov
clc
cli
push
mov
lea
loop
call
mov
jmp
dec
dec
xchg
std
pop
movs
nop
mov
mov
sub
adc
ja
in
fstp
cs
sub
inc
inc
pop
lea
adc
mov
xchg
adc
jmp
nop
loopne
mov
out
lods
jmp
inc
mov
aam
jg
mov
jmp
stos
outs
sbb
sbb
dec
or
jns
adc
fist
push
dec
jne
les
and
xchg
int3
lods
enter
cmp
outs
cmp
push
(bad)
fisub
mov
mov
jl
sbb
cmp
out
mov
or
ins
mov
fcomp
fs
adc
mov
frstor
push
add
cmps
jbe
push
xor
(bad)
(bad)
mov
jmp
pusha
bound
sub
cmp
jae
mov
shr
inc
adc
loopne
jg
aas
mov
push
xor
pop
sub
lock
cld
ins
sbb
lahf
leave
cmp
inc
xchg
rol
sbb
jl
(bad)
in
xlat
(bad)
aad
outs
fs
lods
cli
(bad)
lock
nop
jmp
jo
jb
movs
lods
neg
jae
sbb
mov
add
outs
pop
les
leave
out
ret
in
xchg
jp
stos
jmp
mov
or
cmc
xchg
mov
jnp
int
jg
pop
ret
push
pop
in
adc
fist
push
mov
out
cmps
push
mov
ret
hlt
(bad)
push
cmps
jl
cmc
push
(bad)
loopne
stc
(bad)
out
mov
push
test
dec
lds
xlat
scas
push
out
jmp
jmp
sub
outs
pop
sub
dec
jno
test
inc
or
jmp
jg
mov
(bad)
and
jp
unpcklps
pop
push
loope
cmp
pop
das
fwait
jge
retf
mov
cmp
inc
xchg
movs
in
scas
xor
inc
add
or
es
outs
add
imul
mov
lds
test
lods
jno
dec
mov
pusha
inc
sbb
and
popf
adc
add
inc
lahf
fmul
movs
add
adc
aaa
jne
cld
out
jbe
fs
lahf
cwde
leave
in
jnp
and
add
lods
or
jmp
pop
push
pop
push
sub
push
cmp
addr16
dec
jmp
js
jecxz
pushf
repz
loope
sbb
xor
stos
dec
jg
lds
nop
retf
aas
les
movs
inc
adc
ds
outs
jl
fstp
mov
xor
into
sbb
cmp
hlt
or
jae
aad
inc
or
sbb
je
ret
outs
cmc
jecxz
test
and
xor
cmps
jbe
fisttp
loopne
dec
(bad)
or
fwait
pop
add
xchg
and
shl
mov
jmp
loopne
movs
mov
sbb
aaa
pop
fmul
cmp
pop
mov
iret
sbb
outs
push
out
ins
mov
rcr
and
jmp
stos
push
sbb
push
mov
call
mov
sbb
cmps
das
icebp
pop
mov
ror
int3
out
inc
dec
lds
inc
lea
scas
add
jae
ficomp
xor
adc
fsub
push
mov
bound
cmps
jle
pop
xchg
jecxz
adc
ins
and
pop
sub
mov
dec
lods
movs
jnp
into
and
js
(bad)
push
adc
sub
and
jno
imul
and
retf
in
test
lahf
out
push
jecxz
or
lods
jne
cmp
sub
scas
inc
daa
or
cwde
jle
jecxz
ins
push
(bad)
pop
push
std
fisttp
mov
jmp
inc
iret
mov
shl
add
lahf
(bad)
aam
dec
push
xor
stos
mov
aaa
mov
or
in
pop
inc
hlt
inc
jle
inc
fmul
cmp
int
imul
inc
push
int
jle
test
ja
mov
adc
stos
mov
sbb
test
bound
out
mov
dec
pushf
(bad)
int
dec
jl
iret
inc
retf
fstp
scas
cld
jmp
pushf
sbb
repz
aas
and
mov
stos
outs
pop
ins
cmp
leave
test
ds
mov
jnp
lods
inc
pop
push
inc
push
fbstp
pop
xchg
mov
and
pusha
and
mov
jecxz
jo
push
push
xchg
xor
add
add
pop
call
push
push
ss
enter
sti
cs
hlt
push
nop
add
scas
js
movs
jne
jl
sub
lods
mov
stc
fstp
les
jnp
pop
and
inc
idiv
imul
(bad)
jge
enter
adc
mov
imul
outs
ffreep
xchg
(bad)
fcmovnbe
dec
xchg
and
or
cli
xchg
push
dec
pop
fdivp
xlat
xchg
jg
add
jne
ins
xchg
sbb
pop
dec
jp
or
icebp
stos
jecxz
and
xlat
mov
adc
xchg
cmps
outs
ss
sahf
(bad)
scas
cld
mov
in
fidiv
adc
imul
jg
outs
or
neg
aaa
shl
sbb
adc
(bad)
lds
je
push
(bad)
cmps
inc
dec
mov
test
sar
sbb
cmp
movs
inc
mov
sti
xchg
xor
in
push
rcr
adc
ror
je
push
dec
mov
sub
and
jns
sahf
sbb
aad
mov
cmps
inc
out
xor
sbb
data16
xor
add
sbb
es
dec
mov
mov
ret
loopne
push
mov
inc
in
(bad)
mov
call
adc
mov
dec
pop
jo
aas
jns
aad
push
jle
inc
aaa
adc
loopne
movs
pop
sbb
pusha
popf
stc
rcl
gs
popa
test
push
call
inc
pop
sub
adc
retf
data16
inc
inc
adc
les
inc
jp
sub
xor
xchg
sub
jmp
or
lahf
pop
lahf
jns
add
jne
movs
int3
out
cmp
push
call
pop
add
push
nop
push
les
jae
mov
cs
dec
in
push
jge
jne
call
ror
lea
sub
hlt
xchg
sub
lock
dec
and
sub
icebp
cmp
pop
push
push
push
cli
cmps
push
arpl
xchg
test
cmp
xor
dec
test
sbb
mov
cdq
aas
mov
push
cwde
hlt
sti
add
lahf
fsubr
std
and
pop
add
sbb
out
jno
pusha
loop
and
stos
jb
ins
xchg
mov
cmps
lock
mov
sti
mov
cwde
xchg
or
cmp
(bad)
call
adc
push
jno
inc
mov
cwde
push
or
imul
arpl
mov
pop
scas
pop
sbb
add
jmp
lock
mov
or
sahf
fbstp
fwait
inc
pop
loop
cmp
mov
fistp
cmps
(bad)
fld
mov
cmp
mov
push
outs
frstor
icebp
push
lock
jle
(bad)
in
pop
inc
fucomi
addr16
ret
cmp
adc
inc
test
js
(bad)
jb
mov
test
lahf
xchg
push
dec
(bad)
aam
out
fist
mov
push
(bad)
dec
inc
adc
cmc
mov
aad
mov
rol
std
mov
lods
je
lds
test
cmp
loopne
mov
aam
leave
jle
or
sbb
jbe
int
aas
inc
dec
lods
xchg
cli
dec
mov
dec
xor
scas
pop
out
mov
aas
pop
shl
ja
repnz
inc
dec
das
cmc
bound
xlat
ins
popf
fbstp
hlt
dec
(bad)
xor
data16
mov
inc
sbb
les
pop
cmp
aaa
lds
loope
xlat
adc
push
xor
push
fdiv
pop
(bad)
out
push
test
push
shl
(bad)
bound
icebp
in
push
imul
nop
arpl
aad
and
lods
fst
ret
aam
ja
jp
adc
jnp
xchg
push
xor
sbb
arpl
cli
pop
aas
inc
cmp
test
pusha
pop
cli
pop
push
mov
cmps
cmp
jnp
mov
inc
adc
jmp
pop
pop
ins
dec
hlt
ror
push
mov
push
sub
and
cmp
add
je
jp
scas
xchg
cmp
adc
mov
js
mov
inc
xchg
sub
xchg
xor
cmp
mov
sub
iret
xor
in
cdq
ins
into
xor
out
in
fild
or
shr
(bad)
xlat
adc
sub
mov
pushf
xchg
mov
sti
ins
enter
lods
test
fdiv
rcr
adc
(bad)
neg
out
or
or
or
xor
je
nop
jmp
jbe
pop
mov
xchg
push
(bad)
cmp
es
(bad)
sub
scas
jb
mov
cmp
xchg
rol
fsub
repz
retf
push
cmp
stos
inc
repnz
adc
xchg
test
jmp
movs
sbb
shl
iret
xchg
js
aas
fist
dec
xor
pop
add
fisub
daa
addr16
pushf
pop
xor
pusha
ins
dec
(bad)
sti
out
test
inc
sub
and
or
pcmpeqd
loopne
fwait
fwait
push
neg
mov
push
in
int
xchg
dec
shl
xchg
enter
lock
movs
add
sbb
out
shl
pop
inc
test
in
pop
dec
pop
clc
loopne
cmc
dec
lahf
xchg
mov
dec
out
inc
(bad)
mov
ret
push
fnstcw
pusha
push
mov
sti
fst
daa
jg
dec
add
je
jecxz
mov
xor
out
adc
pop
fucomp
shr
jecxz
and
fmul
fs
pop
push
add
std
int3
pop
jg
jg
xor
pop
add
pushf
sar
sahf
push
popf
cli
and
and
outs
mov
dec
ja
add
in
into
xchg
adc
cmps
push
jle
jecxz
stos
pop
sub
lods
pop
jmp
shr
test
adc
out
mov
mov
push
jmp
xor
sbb
or
adc
or
sub
in
cmp
retf
mov
ss
pop
cmp
adc
out
out
inc
and
sbb
mov
pusha
mov
cmp
jae
icebp
in
push
mov
pushf
loope
push
push
mov
xchg
jne
push
adc
mov
push
(bad)
out
(bad)
dec
sbb
(bad)
pop
dec
xor
dec
adc
and
out
leave
data16
(bad)
mov
lods
mov
cld
xor
call
loop
test
mov
xchg
xor
stc
add
arpl
sbb
jge
dec
xchg
cmp
inc
mov
inc
mov
retf
shl
cmp
mov
ins
out
mul
stos
fild
(bad)
fimul
or
ds
pop
pop
arpl
dec
jecxz
shl
aas
icebp
adc
int
outs
jge
or
(bad)
je
add
pop
inc
stc
jmp
sub
mov
cmc
add
xor
shl
int3
aaa
in
mov
or
jne
hlt
push
dec
add
inc
push
nop
xor
popf
jmp
pusha
outs
lea
add
pop
jmp
or
pop
inc
stc
push
dec
jmp
cmc
cmps
sub
iret
(bad)
aam
sub
addr16
icebp
dec
leave
pushf
bound
cmc
push
lds
mov
dec
lods
cmps
fmul
mov
sbb
mov
pop
cs
je
mov
mov
push
mov
mov
xor
cli
jp
add
stos
shr
clc
and
nop
cmp
fadd
rcr
cmps
outs
mov
shl
stos
sti
dec
xchg
data16
stc
or
jge
ins
jae
xor
pop
mov
add
inc
clc
xchg
icebp
cmp
enter
mov
aas
sbb
ja
mov
jmp
leave
pop
adc
and
not
icebp
sbb
enter
nop
cmp
push
sti
fcom
addr16
mov
add
pop
xchg
sbb
push
out
and
mov
stc
fnstenv
mov
xor
repz
pop
mov
add
adc
push
xchg
push
push
addr16
dec
icebp
aaa
mov
xor
mov
stos
dec
push
fwait
xchg
in
cmovae
sbb
add
inc
dec
xchg
inc
adc
pop
inc
leave
test
xchg
xchg
pop
rcl
cmc
and
out
aad
pop
ins
push
movs
rcr
sub
sub
mov
rcr
stos
fdiv
gs
pop
loopne
mov
adc
loopne
or
in
or
add
inc
push
xor
mov
sub
(bad)
cmp
sar
pop
sbb
mov
mov
or
sbb
inc
xchg
ror
mov
mov
in
(bad)
and
or
and
jmp
ds
fstp
mov
pop
iret
shr
cmps
jbe
adc
stos
xor
mov
not
jl
xchg
stos
jle
cmps
pop
mov
clc
adc
cs
mov
sbb
fst
adc
xor
adc
stc
push
mov
mov
cmc
test
loope
push
mov
mov
and
mov
sbb
fild
adc
push
out
(bad)
lock
jg
sti
mov
outs
mov
das
mov
cdq
push
push
sub
retf
aaa
cmp
retf
jae
mov
test
(bad)
iret
icebp
into
push
sbb
out
mov
rcr
repnz
jg
jbe
repnz
mov
push
xchg
mov
and
sbb
xchg
jne
ds
lock
mov
ror
bound
out
xchg
fld
jle
bound
pop
ins
mov
jg
add
sbb
sbb
push
mov
jmp
nop
push
retf
dec
hlt
jno
and
dec
mov
faddp
retf
rol
call
push
sbb
aad
mov
and
fist
out
xchg
(bad)
cmps
sub
mov
push
mov
dec
mov
add
movs
add
test
inc
jb
sbb
pusha
fwait
inc
ficomp
xchg
or
fcomi
adc
sbb
adc
inc
(bad)
jle
out
jb
sub
ja
sbb
fdivr
sbb
test
inc
mov
add
test
adc
sbb
dec
fild
imul
push
mov
sub
jnp
into
mov
stos
and
jbe
fwait
push
shr
mov
xchg
in
enter
hlt
mov
mov
cwde
inc
test
shr
in
cmp
aas
adc
add
aas
cmp
pop
call
shl
ss
mov
arpl
retf
add
pop
sub
xchg
stc
and
mov
push
pop
sbb
rcl
retw
add
pop
ds
out
add
mov
pop
xchg
and
pop
jp
fsubr
xchg
pushf
test
pop
leave
in
push
out
fisttp
pop
xchg
cli
sub
push
cmps
arpl
loop
xlat
jns
mov
repz
repz
xchg
addr16
mov
cmp
cmp
(bad)
jge
push
lock
ret
and
hlt
or
jno
mov
test
or
jbe
and
out
mov
mov
out
xchg
aas
inc
and
mov
fld
jae
inc
jmp
std
mov
sbb
cmc
add
mov
jg
pop
push
ins
cli
popf
test
pop
pop
xor
mov
ret
sbb
mov
dec
mov
dec
icebp
push
jmp
jae
add
cmp
retf
mov
shl
nop
and
in
fild
retf
sbb
lods
pop
ins
int
cld
cmc
es
xchg
sahf
loop
ret
shl
adc
jns
mov
sbb
rcr
ins
dec
mov
not
cdq
out
mov
adc
movs
bound
movs
arpl
and
cld
xchg
push
xor
shl
mov
ret
cmc
push
adc
inc
jne
movs
enter
pusha
mov
cs
out
bound
call
mov
aaa
xchg
cwde
mov
mov
ror
cmps
fsub
dec
xchg
or
mov
xchg
xchg
rcr
pop
lea
nop
dec
inc
xchg
cmp
dec
cli
bound
fistp
popa
sbb
xchg
xlat
xor
xchg
dec
(bad)
push
in
retf
cmps
aaa
mov
add
jo
or
mul
fadd
xlat
mov
(bad)
xor
dec
ins
ins
dec
cmp
jecxz
out
jmp
inc
shl
aas
hlt
mov
sahf
bound
(bad)
pop
xchg
lods
push
xor
cmp
mov
movs
add
adc
cmp
lods
or
cld
sbb
fcom
js
loopne
dec
add
ds
jae
ja
int
mov
mov
jp
test
xchg
out
sbb
fldcw
dec
sahf
cmps
jecxz
pop
dec
mov
jbe
aaa
stos
mov
and
test
call
stos
rcl
pop
xor
xor
stos
adc
cmp
mov
dec
lock
ds
push
push
test
jecxz
fsubr
aaa
loop
and
fnstsw
in
dec
movs
push
push
mov
jle
jne
xchg
inc
mov
xor
sbb
adc
adc
cmp
xchg
fcmovu
cmp
gs
sub
gs
ins
imul
arpl
add
mov
jecxz
inc
sub
ja
sbb
dec
add
daa
daa
pop
aad
adc
repnz
loop
jns
fsubr
and
(bad)
cwde
or
idiv
call
and
ror
stos
adc
in
push
mov
inc
retf
rol
out
mov
jo
mov
xor
out
pop
xor
sbb
movs
jno
test
ja
dec
mov
ficom
push
jnp
mov
push
mov
mov
mov
dec
adc
pop
push
aaa
popa
dec
adc
retf
lods
sbb
and
ret
out
mov
pop
jmp
stos
inc
popf
jmp
or
int
stos
xchg
mov
sub
sbb
lods
pop
das
shr
jbe
inc
nop
push
inc
out
call
cld
jp
and
ret
mov
scas
adc
shl
jp
dec
xchg
and
cmp
cwde
iret
cbw
stc
mov
fsub
add
xor
xor
aam
cmp
mov
es
pop
jo
ror
test
xor
hlt
lahf
fld
adc
loopne
fldenv
pop
int
and
fist
gs
xchg
pop
bnd
xor
cmps
jnp
jnp
stc
xchg
test
cmc
xchg
and
fimul
mov
mov
pop
fimul
(bad)
mov
xchg
jo
(bad)
retf
das
out
in
inc
pop
aam
pop
(bad)
sti
movs
cmc
jb
(bad)
sbb
mov
adc
mov
(bad)
jg
mov
loop
(bad)
lock
xchg
add
cmps
nop
or
je
jbe
jne
test
cmp
lods
xor
adc
sub
adc
push
cmp
stos
jbe
les
mov
outs
repz
dec
popa
mov
jg
push
fadd
and
fild
add
pop
and
leave
sub
adc
popf
div
push
rcl
in
xor
popa
test
mov
ret
inc
cs
es
popa
clc
pop
fsub
out
pop
sbb
xor
push
outs
bnd
lea
fwait
adc
js
(bad)
pop
out
push
rcr
loope
sti
outs
mov
imul
clc
adc
pop
test
frstor
ret
lods
jle
jge
pop
test
lea
push
(bad)
ficomp
out
adc
sub
mov
loopne
pop
leave
shl
pop
cli
aaa
repz
jns
push
gs
loop
movs
loop
hlt
sbb
into
and
push
test
dec
or
fs
jns
movs
push
fstp
fdiv
fucomip
test
xchg
(bad)
xchg
sbb
mov
xor
mov
cmp
mov
and
sti
sar
jnp
dec
fcom
dec
or
nop
push
popf
cmp
cmps
xor
push
into
rol
cmp
adc
mov
jne
xor
fisttp
push
and
shr
retf
(bad)
fild
in
cld
fimul
les
(bad)
stos
dec
into
add
loope
inc
mov
mov
jle
popa
dec
addr16
ret
add
mov
in
lds
jp
clc
fld
xchg
arpl
movs
aaa
add
cli
pusha
jb
mov
(bad)
jmp
enter
lock
mov
ins
sti
pusha
and
xor
fld
mov
lahf
adc
lods
mov
mul
ins
mov
(bad)
adc
adc
xor
ins
cmp
push
or
lock
in
sldt
xor
div
jae
xor
mov
aaa
test
ds
mov
add
lahf
cmp
mov
push
aam
push
shl
cmp
loopne
sub
pop
repnz
pop
mov
test
sti
out
fimul
jp
push
pop
mov
and
mov
fmul
std
aaa
in
and
fisttp
dec
mov
xchg
das
mov
xchg
push
jb
push
rcr
jno
lock
dec
jno
fild
js
adc
daa
retf
nop
loop
xor
or
in
push
mov
cmc
imul
mov
jnp
inc
mov
mov
into
sbb
clc
movs
sbb
sbb
lods
fisubr
ins
xor
jge
pop
adc
mov
xor
fdiv
mov
fistp
shr
test
xchg
in
js
fwait
mov
fcmovne
popf
push
sbb
sbb
movs
push
daa
std
hlt
cmp
mov
enter
dec
loopne
adc
ja
test
aam
mov
add
or
lea
push
adc
adc
fwait
dec
pop
dec
sbb
gs
mov
xchg
retf
(bad)
xor
out
add
in
call
sbb
cmp
ins
xor
enter
jae
xchg
in
std
pop
aas
add
adc
in
gs
cmp
or
stos
aas
push
or
fst
mov
test
int3
(bad)
xchg
push
movs
push
mov
ja
or
lea
jmp
out
ds
and
mov
fwait
xor
sub
push
sub
aas
jno
dec
ret
jmp
imul
test
cmps
add
sti
inc
jno
es
jnp
(bad)
imul
xor
and
clc
xchg
xor
inc
xchg
pop
ins
sbb
out
xchg
push
out
xchg
mov
push
jge
shr
add
mov
test
mov
pop
cmc
xchg
mov
sbb
ds
mov
leave
int3
xchg
sbb
pusha
test
iret
mov
pop
mov
xor
ins
cld
mov
add
stos
movs
pop
rcr
outs
mov
or
sub
jle
push
mov
xchg
scas
test
loope
in
jno
cmp
push
sbb
push
dec
mov
pusha
nop
lods
pop
repnz
sub
out
mov
ror
xchg
mov
xchg
push
or
loop
in
add
out
mov
lods
or
jae
test
pop
dec
cli
mov
lock
mov
mov
cmp
lds
jmp
dec
dec
jmp
(bad)
xchg
adc
inc
mov
int3
lahf
adc
adc
cmps
mov
leave
(bad)
jmp
retf
jns
out
mov
and
iret
imul
jecxz
addr16
push
xchg
aas
and
jmp
sahf
gs
test
mov
sub
push
sub
or
fisttp
jbe
pop
xor
popf
jl
or
aad
stos
add
sub
jp
cmps
lods
jnp
jmp
and
push
and
adc
jmp
popf
ds
aaa
cdq
mov
inc
hlt
jno
cmp
cmp
sub
(bad)
ins
dec
sbb
dec
xor
std
minps
jnp
jg
imul
adc
out
push
out
dec
cs
aas
jmp
popa
fwait
mov
mov
scas
outs
aas
mov
sar
in
test
cmp
jge
xchg
js
bound
cwde
fcomp
in
sbb
and
cmp
jecxz
jecxz
adc
adc
es
in
cmp
test
leave
lahf
and
sbb
in
mov
jge
(bad)
adc
lods
mov
dec
cli
inc
lds
push
in
scas
xor
inc
mov
add
es
ins
jo
inc
test
je
(bad)
mov
xor
clc
jae
and
mov
sub
dec
xor
aad
scas
mov
into
sub
outs
js
leave
mov
pop
clc
pop
lods
pop
call
sahf
dec
les
clc
call
push
push
xchg
aas
pop
cmp
add
stos
mov
nop
sub
aad
pop
push
sbb
xor
out
ja
retf
mov
outs
add
xor
fiadd
xchg
clc
imul
hlt
cmp
sub
rol
xor
stos
mov
mov
stc
stos
pop
cmps
mov
jne
ins
or
daa
lods
leave
(bad)
mov
mov
jb
ficomp
fisub
xlat
pop
mov
adc
stos
js
mov
push
push
mov
sub
push
sub
dec
sbb
pop
jmp
mov
dec
movs
sub
mov
adc
mov
pop
jb
xchg
or
xlat
retf
push
sbb
adc
push
jno
cmp
cmp
ret
shr
aaa
push
inc
test
cmps
sub
in
pop
mov
(bad)
rcr
xor
or
mov
mov
sub
xchg
push
(bad)
jae
dec
sti
pop
push
xchg
cli
ror
push
fs
mov
std
push
push
les
fnstcw
or
data16
sahf
ins
mov
mov
cli
mov
dec
dec
pop
jg
out
cli
xchg
out
push
xchg
cmp
mov
push
adc
pop
jge
sub
fistp
stos
add
sub
mov
add
out
(bad)
dec
xchg
adc
sti
or
push
arpl
adc
pop
adc
(bad)
fimul
push
cmp
ror
jnp
add
jo
mov
(bad)
addr16
out
jo
icebp
sahf
jmp
mov
test
ins
popf
or
scas
aad
inc
mov
repnz
pop
xor
or
jge
aad
(bad)
repz
or
loopne
imul
mov
sub
push
(bad)
ja
test
or
dec
mov
mov
out
mov
fidivr
lods
xchg
add
or
lds
push
sbb
xor
std
enter
shl
cwde
int3
push
jb
cmc
sub
popf
or
push
sub
popa
mov
mov
inc
test
fwait
movs
fwait
jle
sahf
mov
ins
lods
pop
outs
or
cmps
leave
(bad)
(bad)
sar
rol
sbb
jbe
lds
out
dec
cmp
add
inc
in
sahf
js
in
call
sub
lahf
rol
aad
xchg
adc
xchg
jmp
pushf
loopne
push
jne
fidiv
push
xor
and
push
mov
(bad)
cmp
inc
adc
pop
pop
push
jae
mov
and
or
into
and
adc
popa
ror
pop
sbb
cmp
jmp
dec
rcr
inc
adc
dec
lods
sub
jnp
mov
dec
bswap
add
retf
js
push
mov
adc
iret
adc
fwait
jg
and
clc
sbb
inc
imul
loopne
and
loop
das
shl
sub
outs
adc
mov
call
add
int3
mov
mov
test
in
cmp
addr16
scas
jno
ds
jbe
jle
dec
xor
mov
retf
sbb
jp
adc
loope
addr16
repz
out
out
daa
(bad)
sub
and
push
push
sub
pop
es
aas
popf
and
mov
push
dec
jge
je
fcom
scas
test
xchg
int
ret
push
push
xchg
xor
gs
mov
push
fimul
je
dec
mov
adc
call
(bad)
arpl
mov
pop
cmps
enter
pop
lods
inc
sub
adc
pusha
test
cwde
inc
out
stos
mov
cmp
xchg
lds
stc
push
movs
mov
lock
sbb
xor
xchg
iret
inc
mov
sub
out
pop
pop
test
mov
mov
and
sbb
xchg
into
cmps
mov
or
nop
mov
sahf
enter
(bad)
loopne
es
xor
dec
cmp
icebp
mov
adc
xchg
call
in
mov
sti
and
jns
mov
ins
dec
dec
call
push
cmp
mov
jp
mov
int
add
jp
retf
clc
fs
fidiv
sbb
ins
jmp
pushaw
rcr
add
pop
mov
push
jle
outs
dec
fbstp
ret
mov
(bad)
aam
out
sub
out
ret
leave
into
sbb
inc
stos
sbb
xor
mov
in
les
mov
push
out
sub
mov
cld
test
sbb
sub
in
adc
add
addr16
pop
jle
dec
and
fisub
in
dec
push
and
cs
jg
xor
retf
shl
xor
pop
sbb
inc
popa
mov
or
push
add
jle
push
pop
cmp
ds
leave
xchg
daa
call
xchg
adc
out
leave
sub
call
mov
and
stos
fld
xchg
das
pmuludq
ins
scas
dec
mov
sub
push
daa
push
fiadd
push
aam
jne
adc
pop
imul
stos
push
ja
push
dec
mov
lock
xchg
jb
call
out
jle
outs
xor
mov
jmp
and
rcr
outs
add
xchg
mov
sub
xor
mov
scas
(bad)
idiv
jno
stos
dec
sbb
fbstp
xchg
popa
(bad)
sub
cs
fwait
ins
aaa
inc
push
(bad)
rcr
push
call
push
in
xchg
inc
aas
add
mov
(bad)
jmp
jnp
inc
adc
cmp
(bad)
(bad)
es
(bad)
jmp
pop
push
aaa
call
fdiv
scas
mov
mov
test
je
jg
adc
ds
sbb
mov
leave
pop
jno
outs
in
pop
pusha
push
dec
popf
std
leave
push
test
xchg
test
popf
enter
jl
in
add
add
push
dec
mov
arpl
xor
cld
les
jg
mov
push
js
lea
jmp
pop
dec
retf
aad
mov
sti
pop
xchg
shl
ja
(bad)
stos
cmp
xor
inc
jnp
or
test
dec
jo
adc
jle
dec
cmc
push
mov
stos
int3
add
arpl
imul
stos
dec
nop
jmp
bound
push
fcomp
mulps
xchg
fcom
stos
push
out
and
fwait
jmp
sbb
jo
sbb
das
into
push
(bad)
imul
cmc
cmp
mov
movs
pop
adc
pop
add
hlt
test
movs
rol
int3
or
or
sti
js
fcom
pushf
aad
mov
sub
iret
jp
mov
push
add
jge
sbb
fld
pop
jmp
rcl
test
loop
inc
ficom
retf
cmp
inc
in
xor
add
cli
or
movs
out
mov
push
or
cmp
stc
or
dec
xor
dec
jle
cwde
mov
adc
retf
sbb
mov
sbb
aaa
adc
mov
mov
lods
jmp
push
mov
jmp
(bad)
dec
fs
mov
mov
ror
mov
das
dec
test
movs
jae
xor
xchg
lahf
daa
popf
call
jl
outs
adc
pop
(bad)
mov
in
or
mov
div
fnstsw
pop
ins
jns
fadd
or
nop
mov
fcomip
neg
jecxz
pop
xor
stos
(bad)
pop
stos
(bad)
cmp
mov
push
xchg
push
jp
(bad)
sti
xchg
push
xchg
push
xor
bound
pop
cs
call
add
add
js
test
gs
sbb
mov
(bad)
in
mov
aam
mov
out
mov
jns
add
pusha
in
bnd
adc
mov
jl
adc
cwde
mov
push
mov
inc
lahf
and
push
jecxz
test
push
fs
pop
ins
test
call
in
adc
lods
pop
mov
pushf
(bad)
pusha
cld
mov
xchg
ret
pop
mov
imul
fld
xchg
cmps
jmp
inc
shl
mov
fs
sbb
push
sub
out
sub
les
dec
ins
adc
repz
adc
cmp
mov
dec
not
fwait
inc
xchg
jmp
lds
repz
adc
and
sti
in
rcr
div
inc
inc
loope
jl
cmp
mov
xchg
retf
mov
(bad)
jmp
xchg
mov
out
push
repnz
sahf
jmp
mov
inc
test
fs
(bad)
dec
pop
cs
cmp
fmul
add
pop
or
addr16
inc
dec
into
jns
fdivr
idiv
js
das
jl
sbb
push
scas
dec
push
es
cmp
jno
movs
out
dec
loop
adc
loope
fcomip
out
dec
popf
fmulp
mov
movs
cli
pushf
jl
cwde
dec
mov
add
pcmpeqb
ss
mov
call
xchg
out
clc
in
dec
cmp
aas
(bad)
pop
xor
lahf
add
adc
cmps
cld
pcmpgtw
sahf
fbstp
push
jno
push
sub
xchg
pushf
push
loopne
xchg
(bad)
xor
int
cmp
out
fs
cmp
test
sbb
aam
inc
cmps
mov
mov
sub
push
fdivr
xchg
mov
popa
jmp
xor
add
arpl
xchg
mov
pop
shr
enter
out
in
rcl
dec
loop
int
fistp
out
es
mov
jle
and
mov
ins
or
mov
xchg
pop
idiv
cmp
xor
test
jae
test
test
in
jno
sbb
or
adc
sbb
push
and
jb
bound
adc
clc
or
lahf
(bad)
hlt
or
popf
dec
xchg
mov
mov
ret
(bad)
fucomip
pcmpeqd
(bad)
jecxz
push
loop
xor
inc
mov
mov
cmp
cmc
pop
or
fdiv
mov
lods
dec
rcr
pop
cmp
mov
std
push
or
dec
mov
pop
cmps
mov
retf
push
sbb
mov
cmps
inc
add
fsubr
adc
mov
test
sbb
nop
bound
push
xlat
sub
fnstcw
jae
adc
or
jmp
ins
xor
jl
fcom
jno
mov
pop
test
push
inc
out
mov
mov
xor
(bad)
fs
xor
jmp
fldenv
jp
sbb
scas
js
in
sub
xchg
lock
sub
or
stos
or
popf
or
retf
inc
stos
icebp
std
outs
inc
call
sub
dec
mov
cmp
aad
mov
ds
dec
mov
xchg
iret
jle
or
out
and
fnstsw
mov
mov
(bad)
test
in
movs
cdq
loopne
iret
fucompp
cmc
xchg
add
add
(bad)
mov
add
popa
lea
or
sbb
and
mov
repz
in
adc
daa
retf
mov
ja
cmp
push
inc
xlat
call
inc
cmp
inc
cld
dec
mov
fnstcw
sbb
pusha
mov
test
repnz
add
cmp
lods
or
jns
xchg
add
dec
pop
test
ins
push
in
loope
into
loope
rol
imul
inc
aad
cmp
add
inc
mov
gs
pop
sub
(bad)
dec
stos
xchg
(bad)
popf
nop
xchg
sub
xor
mov
fiadd
mov
les
out
std
ins
test
adc
dec
sbb
stos
fcomi
js
xchg
jl
xchg
retf
aas
xchg
mov
inc
mov
(bad)
xchg
mov
xor
fsub
jae
nop
add
fdiv
clc
(bad)
pop
ret
cdq
mov
or
sbb
mov
add
pusha
pop
add
(bad)
jecxz
push
cwde
inc
dec
inc
aas
or
push
loopne
mov
xlat
dec
call
adc
mov
or
or
adc
sti
stc
sbb
add
xchg
jnp
clc
test
sbb
sub
out
jmp
pusha
shl
dec
sub
imul
xor
mov
ss
jecxz
add
sbb
mov
mov
cmp
clc
out
mov
sbb
ror
add
push
call
mov
pop
cmps
dec
iret
xchg
inc
out
jne
leave
or
iret
(bad)
or
mov
adc
or
xchg
shl
mov
jb
cmp
xchg
sub
xor
call
ror
inc
push
inc
ds
sahf
and
addr16
loopne
imul
js
xchg
fdivrp
add
dec
call
(bad)
xchg
cmps
mov
fwait
(bad)
cli
in
push
in
xor
pop
cmps
out
mov
add
aad
mul
(bad)
jnp
add
add
sbb
xor
sub
repz
jl
scas
sub
aas
xchg
clc
pop
push
mov
sub
pop
jge
lds
mov
pop
dec
and
jnp
lahf
dec
push
sbb
stos
fwait
adc
mov
cld
xchg
rcr
pop
mov
pusha
ins
adc
add
xor
sub
in
call
sbb
inc
or
push
mov
mov
mov
sbb
xor
(bad)
scas
mov
imul
out
daa
not
out
inc
add
mov
addr16
jb
inc
push
inc
loope
jbe
jp
pop
mov
mov
test
pusha
stos
cwde
dec
lods
sub
xor
mov
jne
mov
(bad)
std
fist
jo
das
jbe
adc
fdivrp
fidiv
jg
dec
enter
push
adc
adc
add
fwait
mov
push
aas
popa
sub
cmps
or
adc
jmp
xor
mov
and
push
shl
addps
sub
call
aam
or
mov
jb
gs
add
jmp
rcl
mov
sar
dec
(bad)
jmp
jecxz
(bad)
sub
out
ficomp
push
retf
xor
xor
xor
test
sti
and
scas
mov
adc
cdq
or
in
std
fdivr
shr
int3
out
jno
loope
push
inc
xor
lds
test
sar
imul
dec
retf
mov
or
push
iret
rcl
icebp
jg
mov
outs
push
mov
test
adc
pop
or
pushf
loope
fwait
mov
dec
ins
cmc
sbb
in
xor
sbb
and
xor
leave
daa
jl
xor
add
xor
(bad)
(bad)
hlt
jp
cmps
pop
hlt
pop
iret
ret
jle
icebp
xchg
jmp
adc
sub
xchg
popf
cli
push
add
pop
imul
enter
in
mov
jb
iret
test
shl
(bad)
shr
stos
outs
call
daa
jl
stos
out
or
ds
loop
cmp
mov
add
loopne
adc
retf
mov
add
jge
push
scas
lock
mov
(bad)
cmps
idiv
test
jns
xchg
(bad)
call
push
cmps
pop
cmp
daa
push
sub
push
and
mov
pop
scas
pop
and
fimul
mov
mov
packuswb
aaa
repz
fnstenv
(bad)
jno
test
inc
imul
bound
in
and
and
xchg
shr
push
adc
add
sub
add
aas
sbb
es
mov
imul
ret
fbld
dec
jb
pop
xor
mov
(bad)
xchg
sbb
stos
push
or
pop
inc
fs
xor
fcmovb
sbb
lea
mov
out
divps
sbb
ficom
in
sbb
mov
loop
or
cli
xchg
std
fs
in
test
rol
xchg
push
xor
pop
mov
retf
inc
out
push
pop
pop
and
lods
cs
repnz
or
or
mov
pop
or
ret
mov
in
mov
ss
jne
or
and
lock
sbb
sahf
or
pop
int3
adc
mov
jmp
dec
pop
sub
push
fidiv
inc
daa
(bad)
mov
in
(bad)
loopne
inc
lods
test
out
inc
push
mov
rcl
pusha
out
pop
pop
ror
add
(bad)
ins
jb
int
lock
push
mov
push
xchg
dec
xor
adc
sbb
and
pop
pop
jne
retf
push
adc
push
fs
int
leave
js
mov
mov
icebp
pusha
mov
ss
and
lods
sub
sub
pop
test
push
pop
repnz
mov
sub
mov
dec
xor
sub
jge
jmp
retf
sub
sti
test
data16
push
sbb
lods
jle
sub
(bad)
leave
or
adc
popf
jne
outs
add
sbb
cmps
cmp
jg
mov
and
jle
xchg
hlt
lods
xlat
out
and
into
mov
and
ins
movs
pop
test
in
mov
cld
gs
jno
sub
mov
or
sahf
scas
(bad)
icebp
push
inc
(bad)
out
mov
cmp
or
cmp
shl
retf
mov
xchg
cwde
imul
inc
mov
mov
popa
sbb
std
inc
push
mov
test
jl
fcmovne
movs
xor
inc
jmp
jge
dec
jb
add
clc
dec
jmp
adc
aam
inc
dec
int3
sbb
cmps
sub
xor
mov
lea
scas
jae
fmul
xchg
iret
div
adc
iret
daa
int3
dec
aad
sbb
cli
xor
repnz
out
adc
test
in
add
stos
imul
mov
mov
cmp
jecxz
add
(bad)
je
cmp
fld
jmp
(bad)
cmps
push
in
push
jno
push
inc
shld
sub
data16
imul
test
mov
into
pop
xchg
test
xchg
fcomp
inc
(bad)
jbe
dec
ror
dec
in
mov
repnz
movs
(bad)
jnp
xor
xchg
xor
and
or
test
mov
pop
in
shl
fidivr
inc
jno
sub
pop
add
sbb
mov
ins
jecxz
dec
add
enter
add
ror
addr16
and
lock
xor
(bad)
sbb
push
ins
arpl
clc
xor
fcomp
xchg
push
push
jmp
mov
dec
ret
hlt
xchg
pop
movs
test
(bad)
pop
out
jmp
inc
pop
retf
loopne
(bad)
fwait
out
not
mov
push
pop
lds
mov
mov
es
adc
or
jg
add
sahf
repnz
mov
lahf
adc
clc
lea
xor
push
ds
mov
and
mov
lds
mov
mov
stos
test
pushf
sbb
mov
in
and
shr
int3
xor
mov
fstp
mov
adc
cmp
xor
fnstenv
je
in
sbb
dec
ret
int
xchg
pmulhw
sub
pushf
nop
sbb
aas
sub
mov
mov
fisub
(bad)
fidivr
add
xchg
mov
and
es
gs
sub
mov
sbb
and
mov
cdq
data16
pop
cmp
mov
das
or
outs
pop
mov
jmp
inc
imul
es
repnz
dec
mov
data16
mov
loop
mov
jnp
push
dec
dec
jge
xchg
dec
inc
clc
fwait
mov
out
inc
fwait
stos
pushf
sbb
lds
into
mov
jno
jmp
loope
push
jp
movs
retf
inc
mov
popa
(bad)
arpl
dec
cmp
nop
aaa
inc
mov
xchg
scas
adc
jg
or
inc
push
cli
das
adc
inc
or
repnz
out
(bad)
and
sub
and
daa
retf
pop
call
popa
shl
mov
(bad)
sbb
lds
sbb
pop
dec
outs
dec
clc
repnz
cmp
ds
cmps
and
adc
call
ret
ret
int
add
iret
test
arpl
int3
pusha
pop
push
in
movs
xchg
stos
lahf
adc
mov
push
jne
sub
es
and
pushf
sbb
dec
sbb
or
cwde
and
int3
idiv
cli
cmp
bound
sahf
ss
mov
scas
pop
movs
mov
pop
pop
js
xchg
imul
daa
mov
push
and
loope
sub
mov
loopne
aas
mov
xchg
dec
aad
leave
(bad)
bnd
jmp
push
hlt
or
inc
dec
push
popa
pop
pop
jg
sub
cmps
cmp
xchg
jg
movs
mov
fidiv
inc
push
xchg
fbstp
shr
mov
cmp
push
sub
push
retf
lahf
in
jl
sbb
dec
pop
push
retf
or
jg
enter
stos
daa
jne
sub
xchg
daa
lods
cmc
jae
out
sub
stos
mov
mov
dec
mov
add
cld
xchg
outs
cdq
clc
idiv
retf
jle
lods
inc
sub
cli
push
in
mov
cmp
call
cwde
neg
xlat
das
cmp
shl
ds
cwde
mov
or
xor
mov
lea
stc
push
or
sub
pop
pop
cmc
inc
imul
xchg
jbe
cmp
sbb
aaa
adc
ror
inc
shr
cmc
ja
(bad)
mov
inc
std
arpl
int
dec
loope
jb
xchg
push
mov
retf
mov
(bad)
pop
sahf
sub
enter
ins
frstor
shr
test
dec
mov
inc
dec
push
mov
ss
jmp
jmp
jo
stos
movs
mov
push
sbb
fild
xchg
cmp
jge
pop
push
or
shl
jl
inc
dec
add
adc
pop
xchg
push
sub
xchg
inc
aam
test
sbb
data16
cmp
fnstenv
mov
jbe
out
rol
(bad)
(bad)
mov
aam
pop
mov
popa
xor
pop
pop
mov
sub
inc
lea
fbstp
xor
push
dec
fisub
icebp
ja
dec
or
xor
pop
ror
sub
in
sbb
add
xchg
es
dec
inc
in
loope
cs
push
push
(bad)
pop
jns
jns
sub
nop
or
mov
xchg
push
or
push
xor
xor
pop
call
pusha
push
mov
mov
popa
pop
fwait
in
mov
xor
push
add
stos
sti
jbe
sbb
in
pop
push
or
popf
sub
iret
les
xchg
cmp
pop
sbb
enter
cmp
movs
popf
sbb
sar
xor
out
pop
push
dec
dec
loopne
mov
or
jae
xor
add
mov
push
ror
mov
xchg
in
inc
movs
sbb
ins
pop
mov
pushf
fcmovu
mov
icebp
shl
push
pop
pop
je
fisub
mov
xor
repnz
scas
clc
pop
xchg
ret
mov
lahf
mov
push
sub
out
ss
clc
cmps
imul
retf
mov
sub
and
jmp
scas
inc
xchg
push
sbb
int3
sub
mov
pop
movs
sbb
(bad)
mov
fwait
mov
push
or
repnz
xor
test
xor
icebp
cmp
push
clc
sysexit
add
mov
jmp
sub
clc
inc
xor
fwait
nop
sti
lods
or
cli
mov
jmp
xlat
pop
push
sbb
xor
mov
aas
inc
sbb
jecxz
dec
(bad)
mov
(bad)
push
gs
pop
aad
push
cmps
push
mov
ds
inc
popf
arpl
popa
jmp
shl
mov
cld
(bad)
cdq
(bad)
je
pop
(bad)
pop
add
xor
(bad)
jno
sbb
stos
pop
push
inc
div
mov
stos
or
fidiv
xchg
mov
cs
int
not
xchg
cmc
jmp
inc
fist
das
in
dec
fldl2t
lods
enter
loopne
fdivr
mov
sbb
adc
add
push
es
sbb
mov
rcl
or
cmp
mov
jl
mov
push
mov
jbe
daa
xor
gs
xchg
add
pushf
nop
mov
lahf
leave
jp
mov
rol
les
jmp
shr
add
loopne
cdq
in
cwde
aam
inc
mov
jge
add
imul
mov
sti
ja
movs
lods
outs
inc
in
fnsave
jg
sub
ins
and
mov
(bad)
clc
inc
sahf
cmp
xchg
movs
out
es
mov
jle
(bad)
cwde
sbb
and
cmp
sub
sbb
mov
gs
int3
lods
(bad)
scas
mov
jb
loope
mov
adc
dec
lock
add
or
pop
pop
inc
xchg
sub
daa
aaa
cmp
ret
add
and
sbb
bound
sbb
test
test
std
jmp
stc
xchg
push
add
retf
jl
adc
fild
jp
cwde
sti
ror
(bad)
ins
mov
lods
adc
lea
(bad)
pushf
push
inc
sub
or
sbb
call
out
sbb
mov
push
das
add
das
dec
dec
in
sub
outs
nop
push
lea
icebp
icebp
es
inc
ja
or
test
xchg
xor
and
sub
mov
cdq
test
mov
mov
xchg
jp
pop
mov
jo
cmp
cmp
or
in
out
movs
idiv
fcomp
xor
std
(bad)
test
sub
data16
int
(bad)
out
dec
dec
fwait
or
xchg
rol
js
mov
mov
retf
cwde
adc
add
and
icebp
addr16
dec
cmps
or
adc
push
into
cmp
xlat
mov
mov
fistp
add
fs
or
loop
sbb
cmp
fwait
jbe
out
mov
rcl
mov
xchg
loopne
fwait
inc
repz
dec
mov
aaa
fild
dec
adc
and
test
out
dec
outs
ins
lock
imul
jnp
in
jae
fs
ins
mul
sbb
pop
movs
inc
mov
adc
jge
rcr
cmp
cmp
cdq
jae
jo
pop
aad
jecxz
inc
and
push
jmp
dec
div
or
outs
sub
cmp
xchg
ss
imul
stc
jp
jmp
pusha
es
out
mov
jno
pop
movs
retf
xor
sti
pushf
mov
inc
data16
out
push
xchg
js
fdiv
push
add
in
retf
cs
loopne
cli
out
fmul
jg
rcl
imul
fs
push
push
pop
ins
dec
das
in
add
jg
leave
mov
mov
test
fwait
(bad)
stos
fs
inc
sub
int
mov
cmps
jmp
mov
ja
into
mov
mov
adc
pop
js
popf
add
iret
sub
mov
jle
sbb
inc
outs
xor
push
jmp
je
in
repnz
push
cli
pop
jmp
add
sti
dec
dec
sahf
jnp
and
cmp
les
data16
stos
ret
aam
movs
sbb
push
xor
and
mov
sbb
inc
cs
adc
inc
mov
retf
js
mov
mov
mov
int3
pop
add
dec
push
inc
or
pop
ret
adc
xor
adc
fwait
adc
stos
mov
(bad)
sub
cmps
(bad)
xchg
add
aam
leave
dec
in
mov
popa
test
les
mov
sbb
inc
push
in
mov
or
sub
inc
sub
pop
loop
(bad)
sti
pop
xchg
std
add
test
leave
into
data16
test
outs
leave
aas
js
add
dec
adc
(bad)
xchg
dec
adc
in
retf
in
adc
dec
xchg
ficom
pop
test
dec
popw
loopne
sbb
iret
frstor
addr16
sub
dec
cld
cmps
pop
push
fidiv
lock
outs
div
sahf
pushf
push
pop
pop
jp
sti
rol
mov
pushf
(bad)
in
mov
fdivr
iret
and
(bad)
es
or
(bad)
call
add
ror
repz
jne
bts
shl
sub
pop
clc
scas
sub
out
repnz
fcom
pop
(bad)
fisttp
cmp
mov
das
ret
cld
fwait
and
rcl
ins
or
inc
inc
repnz
push
aas
scas
mov
repnz
test
adc
cmp
or
(bad)
mov
jle
popf
xchg
mov
or
pop
push
jg
push
pop
cmps
stos
lds
fsub
jbe
js
popf
inc
mul
cmps
push
test
call
les
int3
cmc
enter
into
xor
cmp
lea
mov
jge
call
push
pop
scas
or
and
or
jns
add
ja
push
out
out
inc
test
fwait
int
sub
les
ds
mov
and
mov
inc
xchg
adc
mov
leave
lahf
jmp
gs
mov
and
shl
push
mov
push
addr16
mov
cmps
sub
stos
mov
push
fstp
add
gs
pusha
int3
add
scas
(bad)
mov
xchg
rcr
test
add
adc
retf
xchg
xlat
sub
xchg
pop
int
dec
in
mov
or
adc
mov
xchg
push
pop
xor
jecxz
in
fidiv
mov
pop
(bad)
xor
dec
cmp
pop
(bad)
mov
movs
ins
fucomp
aam
jne
mov
mov
jae
mov
mov
and
cmp
pop
jno
pop
jnp
mov
sbb
loope
push
add
inc
pop
mov
pop
xchg
jl
cmp
xor
pop
loope
mov
dec
test
cli
adc
out
retf
aad
fst
arpl
xor
jbe
jge
je
dec
mov
mov
push
outs
dec
jecxz
gs
and
shl
je
fwait
out
dec
xchg
clc
push
inc
cmp
jno
pop
jg
mov
jecxz
jnp
sbb
inc
or
icebp
mov
sbb
ja
rcr
sbb
sbb
push
sub
inc
out
mov
fidiv
cmc
push
out
xor
pop
push
mov
xor
dec
fsub
fwait
pop
arpl
(bad)
rol
xor
inc
test
xchg
rol
arpl
ja
sahf
shr
xor
xchg
movs
ret
and
fsub
pop
xchg
cld
and
popf
mov
cmc
mov
adc
add
pop
call
jmp
(bad)
push
inc
loopne
mov
push
pop
mov
aaa
push
pop
imul
mov
cmps
jae
shl
xor
dec
jbe
adc
sub
call
mov
or
jmp
mov
mov
daa
test
pop
je
out
fstp
sbb
dec
js
adc
add
push
in
jmp
dec
jnp
sbb
jb
pop
clc
xchg
jge
adc
stos
xchg
iret
add
dec
ret
movs
loop
lock
push
sbb
sbb
js
aas
mov
sar
xor
pushf
or
jmp
push
test
inc
in
xchg
xlat
mov
imul
dec
into
add
ins
fimul
jmp
outs
mov
cmps
inc
sbb
rcr
mov
gs
sahf
cld
out
or
xchg
cmps
sbb
sub
mov
sbb
jmp
adc
test
ss
jmp
movs
mov
pop
dec
outs
rcr
and
jl
les
mov
lea
stc
clc
push
pop
scas
sub
retf
mov
mov
loopne
ins
inc
stos
repnz
pop
cld
stos
push
pop
neg
arpl
retf
inc
addr16
xor
adc
adc
mov
sbb
cmps
cmp
call
sbb
sbb
pusha
and
fucom
xlat
(bad)
in
pop
mov
jmp
xchg
xlat
pop
mov
cli
or
aam
fsub
add
leave
(bad)
imul
fsubr
push
loope
inc
test
daa
xchg
xor
push
xchg
xchg
and
xchg
xchg
pushf
lods
dec
pop
dec
dec
push
dec
out
inc
xchg
cli
and
ret
rcl
push
shr
out
imul
cmps
enter
adc
icebp
dec
out
test
xor
adc
sub
shl
push
pusha
fcmovbe
inc
dec
test
or
cli
in
stos
out
call
cmp
adc
shl
and
cmp
or
adc
fcomp
les
push
cwde
jns
in
push
popa
add
js
ins
ja
jmp
push
icebp
jmp
leave
rol
scas
mov
les
std
out
jns
cmc
in
push
adc
pop
daa
push
xor
scas
fdivr
or
outs
stos
mov
(bad)
daa
out
push
add
popf
out
lods
loope
pop
add
sub
pop
adc
(bad)
xor
iret
and
mov
sbb
mov
in
pop
xchg
call
adc
ret
push
or
aad
push
jp
push
adc
call
hlt
pop
js
inc
cld
and
inc
mov
inc
add
add
push
test
and
lea
dec
and
pushf
call
and
lock
loop
out
pop
imul
(bad)
iret
stc
sti
xor
fs
(bad)
pushf
std
retf
inc
xchg
dec
addr16
inc
and
cdq
les
jb
mov
dec
ins
repz
cli
mov
sub
push
loop
and
xchg
mov
mov
jae
or
push
in
xchg
popf
adc
aaa
out
sbb
mov
dec
test
or
xchg
xchg
rol
data16
fbstp
aam
fcom
cmp
dec
jle
mov
ror
in
into
jbe
sub
call
lods
adc
scas
fisttp
or
mov
mov
inc
fstp
or
lock
call
adc
pop
shl
fsub
add
dec
mov
cmp
repnz
cmc
fbstp
or
sub
adc
out
cmp
mov
cmp
adc
cdq
push
or
inc
xchg
icebp
call
in
hlt
sub
enter
sub
xor
js
aad
sahf
ja
out
aaa
sub
out
sbb
sbb
push
cmps
xchg
bound
jno
imul
(bad)
leave
mov
sti
xor
xchg
xchg
mov
cmps
mov
mov
rol
arpl
mov
out
shl
fst
adc
icebp
pop
ret
(bad)
xchg
icebp
pop
inc
nop
int
cmp
xchg
adc
shr
or
jo
sub
pop
in
cmps
outs
pop
adc
std
es
mov
xor
and
ret
js
dec
xchg
and
or
ss
fs
push
push
call
jo
stc
sbb
out
xchg
popf
inc
mov
pop
jp
xor
gs
jecxz
add
push
sub
lahf
stos
push
mov
cmp
adc
jle
mov
adc
or
mov
sbb
xchg
pop
push
rol
pushf
push
out
enter
sti
cmc
int3
pop
pop
jno
xor
test
dec
je
adc
pop
stos
inc
xchg
jno
add
sub
pop
xor
mov
rcl
jge
pcmpeqb
(bad)
ds
sbb
outs
imul
mov
dec
sbb
cmp
mov
inc
(bad)
mov
(bad)
jp
mov
xchg
and
mov
push
cwde
or
add
jmp
daa
jmp
arpl
xchg
cld
or
mov
xchg
stos
fs
inc
push
ret
add
jae
xor
in
call
xor
stos
repnz
inc
add
dec
lahf
push
ins
adc
jecxz
aad
ret
push
test
pusha
daa
test
fldenv
enter
into
push
mov
lea
mov
fcmovnu
adc
xor
push
jo
fstp
into
dec
adc
call
lea
out
popf
jns
pop
call
push
or
or
mov
leave
xlat
cmp
repz
sub
cli
pushf
call
push
xor
f2xm1
dec
sub
push
and
xchg
and
mov
scas
and
arpl
test
das
mov
lock
movs
mov
fcomp
adc
shr
addr16
test
hlt
adc
clc
cdq
sbb
sub
sub
cmps
sbb
xchg
dec
jne
fstp
xor
xor
aam
not
int
mov
in
cli
cmc
iret
pop
push
mov
data16
xor
in
mov
pop
outs
pop
loope
aas
fbld
enter
jno
not
out
mov
fwait
inc
arpl
and
or
xchg
sbb
jl
movs
iret
xor
adc
jae
jo
bound
push
sahf
mov
mov
dec
test
push
jle
fnstcw
rcl
(bad)
dec
mov
loopne
mov
movs
cmp
push
push
push
add
test
retf
outs
push
lahf
mov
movs
(bad)
stos
jmp
mov
popa
adc
dec
pusha
(bad)
cmp
xchg
pop
mov
pusha
in
(bad)
aam
loop
cmp
pop
inc
mov
cmp
jecxz
retf
fist
out
xchg
push
xor
loopne
fwait
xchg
aas
push
fst
in
sub
adc
xlat
mov
test
jmp
cmp
dec
loope
rol
in
sbb
sub
movs
cs
jne
mov
sbb
je
ds
int3
mov
lahf
pop
and
xor
mov
xor
push
add
xor
xchg
dec
jns
or
jbe
jb
lds
push
push
jecxz
sahf
xor
sbb
dec
add
push
int
popa
(bad)
xchg
mov
mov
loop
mov
hlt
rcr
bound
add
cmp
add
push
jae
pop
xchg
jae
push
es
mov
cmps
pop
dec
cmp
mov
stos
mov
out
pusha
xchg
cs
mov
(bad)
in
(bad)
mov
test
dec
lea
adc
daa
inc
xor
cld
mov
fiadd
pop
icebp
test
mov
js
cmp
dec
arpl
pop
rcl
xchg
sub
pusha
and
test
les
mov
inc
adc
movs
cwde
pusha
bound
sub
ficom
xchg
jg
sbb
movs
xor
test
jo
push
fidivr
add
inc
pop
ret
cmp
adc
mov
imul
into
mov
arpl
out
and
bound
sub
fcomp
inc
jmp
push
xor
add
idiv
dec
aaa
popa
inc
jno
mov
xor
adc
xor
mov
add
es
jl
or
mov
ss
sahf
ds
pushf
mov
mov
inc
aas
add
popa
adc
xchg
cmps
retf
sbb
cdq
mov
dec
repnz
rol
mov
ja
mov
or
xchg
adc
mov
push
mov
dec
aad
sub
aam
xchg
leave
sub
nop
sub
push
inc
pop
jbe
sbb
and
or
aam
adc
sbb
cmp
das
inc
adc
repnz
jmp
pop
pop
cli
jg
cmp
lods
(bad)
int
sub
jg
retf
xor
mov
jbe
mov
loope
xor
data16
icebp
adc
xchg
sar
pop
xor
in
cmp
(bad)
adc
(bad)
sub
fdivp
cmp
pop
ins
cwde
(bad)
(bad)
call
or
stos
dec
(bad)
cmp
push
push
mov
and
call
mov
xchg
daa
and
dec
sub
xor
or
push
(bad)
fmul
not
rcr
idiv
movs
movs
aad
and
bound
leave
sbb
retf
dec
cdq
mov
mov
mov
mov
adc
pop
retf
(bad)
loopne
mov
jno
sbb
cmp
out
or
addr16
es
test
jmp
aas
mov
shl
push
pop
dec
ja
(bad)
ins
mov
call
into
fadd
mov
sub
push
ja
shl
xlat
inc
(bad)
pop
jns
pop
hlt
cmp
iret
dec
mov
rol
pushf
(bad)
add
xor
xor
mov
sub
adc
sub
mov
or
mov
(bad)
outs
mov
add
jb
or
div
jle
mov
and
pop
(bad)
fldenv
adc
adc
icebp
xchg
outs
bsf
add
loopne
aas
jmp
xor
push
cs
mov
(bad)
ror
out
inc
mov
pop
sahf
ret
fs
sbb
sbb
pop
pop
mov
jle
inc
test
mov
dec
mov
mov
fistp
out
push
pop
mov
adc
xchg
adc
repz
push
mov
sub
movs
cmp
in
rcr
ja
sub
mov
nop
mov
rol
inc
add
add
xor
jp
imul
ret
pusha
popa
in
mov
mov
xchg
jae
nop
fldenv
mov
mov
adc
stos
xlat
rcl
cld
and
ins
out
jne
fistp
jmp
adc
mov
inc
xor
mov
jo
pop
jg
pusha
sar
pop
sbb
pop
sti
dec
pop
mov
loop
jnp
adc
icebp
mov
je
ret
jl
jmp
movs
aaa
movs
sub
jo
lea
(bad)
mov
jecxz
mov
imul
jg
popa
test
rcl
stos
aam
ret
nop
and
jmp
je
dec
push
push
clc
in
out
or
(bad)
call
mov
pop
rol
js
dec
sbb
icebp
cmps
shl
jl
loopne
aam
imul
inc
mov
jbe
adc
icebp
inc
imul
jecxz
add
ins
ja
push
popa
fcom
iret
(bad)
inc
jg
xor
pop
in
jle
pop
inc
inc
pop
xchg
pop
dec
adc
enter
or
ret
daa
push
jae
iret
sbb
mov
jnp
mov
(bad)
or
push
test
fwait
sub
pusha
fsubrp
retf
xor
mov
inc
cmps
adc
sub
sti
js
add
rcl
mov
pop
adc
popf
rcr
jno
fwait
xor
adc
cmc
dec
or
push
lea
push
rol
cmp
sbb
gs
(bad)
(bad)
mov
mov
mov
not
xlat
pop
aas
fsubr
cli
movs
mov
dec
sub
(bad)
xchg
pop
loope
push
dec
in
or
dec
iret
js
aad
in
in
fimul
fiadd
sub
ins
call
and
jo
(bad)
cmp
out
icebp
push
int3
arpl
add
mov
xor
imul
out
add
scas
int
cmps
and
cmp
pusha
ins
aad
mov
ins
popf
mov
std
push
dec
in
dec
mov
loop
(bad)
jg
adc
fs
xor
mov
push
in
sbb
fadd
or
arpl
movs
xchg
shr
xchg
in
aam
xchg
dec
leave
aaa
call
or
cmp
out
sub
out
out
repnz
repz
dec
fwait
dec
and
jle
pop
mov
cmp
inc
sbb
jge
cmp
pop
xchg
lods
pop
stos
add
popf
jo
call
push
mov
popf
mov
aaa
leave
adc
inc
sbb
adc
shr
and
or
(bad)
sbb
fsin
and
cmp
mov
inc
xchg
mov
pop
cdq
movs
cmp
sar
das
sub
hlt
scas
lods
jno
call
fst
nop
lods
cmp
mov
std
push
sbb
mov
cmc
arpl
add
ds
int3
dec
aas
mov
call
(bad)
xlat
outs
add
test
and
test
mov
dec
arpl
pushf
xchg
out
cwde
mov
cmps
xor
and
repnz
int3
mov
adc
mov
pop
test
sbb
xchg
xor
(bad)
in
aam
push
(bad)
xor
push
mov
popa
mov
lea
jns
pop
dec
xchg
out
adc
xchg
fdiv
mov
push
out
pop
ins
push
(bad)
pusha
int3
scas
lock
lods
push
adc
and
(bad)
addr16
mov
ss
(bad)
fiadd
ja
xchg
or
retf
sahf
push
and
inc
das
push
mov
jnp
ret
pop
cmp
xchg
cmps
or
xlat
inc
xor
or
je
xchg
out
je
inc
into
push
xlat
test
leave
retf
test
add
cmp
in
push
loope
lods
sar
jl
and
pop
xchg
pop
(bad)
mov
dec
or
or
(bad)
or
shl
pop
shl
mov
retf
sub
fld
or
jnp
dec
xchg
jno
push
loope
cmp
dec
and
fist
(bad)
icebp
mov
(bad)
mov
fistp
fucomi
and
(bad)
xor
out
test
push
jbe
mov
hlt
into
inc
lods
pop
and
adc
or
(bad)
pop
(bad)
out
test
std
or
pop
fimul
xchg
mov
(bad)
retf
or
(bad)
imul
xlat
xor
ss
add
sbb
dec
mov
dec
pop
(bad)
in
mov
inc
adc
cdq
inc
jp
push
arpl
inc
pusha
pop
movs
jl
lods
and
rcl
pop
icebp
xchg
xlat
jg
sbb
add
ins
aaa
rcl
out
(bad)
repz
push
sbb
or
push
cmc
aam
mov
dec
sub
mov
retf
adc
pop
adc
and
fsubr
and
jb
adc
mov
scas
enter
mov
mov
or
fsub
push
xor
push
aas
push
jno
pop
inc
mov
inc
jbe
jns
push
shr
add
inc
bound
mov
inc
jnp
shl
cmc
pop
pop
nop
stc
inc
dec
cmp
and
lods
mov
inc
test
(bad)
add
loopne
sbb
jnp
loop
mov
mov
icebp
cs
int3
mov
and
in
jbe
(bad)
scas
sub
inc
repz
jbe
es
add
jmp
fcmovu
lock
call
fstp
mov
bound
xor
sahf
dec
mov
mov
fadd
imul
lods
daa
icebp
fild
cmc
sbb
out
pop
lea
imul
fidiv
dec
jmp
pop
ins
(bad)
aas
or
je
and
mov
bound
or
add
fbstp
inc
popa
sbb
mov
pop
xor
or
mov
(bad)
int3
retf
sbb
fidivr
pop
pop
jmp
das
pop
fild
(bad)
jmp
scas
dec
out
aam
cmps
push
test
adc
imul
mov
xor
sub
lods
out
call
lods
jmp
mov
das
lods
jmp
push
iret
retf
shl
xor
dec
jl
sbb
xor
push
sbb
test
jno
and
call
test
sbb
xor
sbb
repnz
fldenv
cdq
mov
sar
mov
dec
mov
mov
shl
loope
sbb
cmovs
fcom
xlat
dec
mov
(bad)
dec
cmp
dec
lahf
arpl
mov
fstp
inc
push
(bad)
xchg
inc
adc
and
add
(bad)
push
imul
jp
xchg
loop
mov
(bad)
xor
fcom
gs
inc
stc
xor
(bad)
mov
add
and
dec
cld
mov
sbb
pop
into
cli
sbb
dec
mov
ror
pop
mov
push
mov
push
pop
inc
inc
xlat
hlt
cmp
dec
push
mov
ret
into
mov
mov
js
cmps
mov
inc
imul
and
sti
dec
push
or
push
fnstenv
test
jns
and
adc
push
sbb
adc
inc
sbb
sbb
in
pop
fadd
mov
(bad)
push
ins
adc
inc
mov
mov
call
jmp
data16
test
mov
or
sbb
retf
mov
mov
stos
cmps
idiv
ins
sar
sub
loopne
lods
add
or
in
lds
(bad)
sub
inc
lahf
sti
dec
(bad)
jmp
xor
pop
lahf
mov
cmp
jecxz
mov
mov
mov
adc
fnstsw
sbb
or
mov
mov
cmp
or
addr16
aaa
mov
xchg
into
and
fst
jnp
and
sbb
sbb
xor
imul
push
dec
cwde
and
int3
sub
popa
mov
shr
into
pop
in
cmc
dec
ins
scas
jno
popa
push
mov
and
dec
and
cld
dec
lea
sbb
stos
jl
or
and
ja
bnd
out
not
fmul
add
stos
pop
adc
mov
adc
cs
test
and
out
sar
and
icebp
outs
pop
dec
pop
sahf
std
ss
and
sar
loop
adc
inc
fnstsw
dec
xchg
ret
scas
(bad)
pop
mov
cdq
cld
or
and
jmp
pop
mov
push
daa
xchg
popa
sub
cmp
adc
jmp
outs
push
js
cmc
test
mov
dec
pop
cmp
leave
add
cmp
in
pop
and
fs
push
jl
pop
adc
stos
xchg
test
mov
sbb
cld
fnstenv
frstor
push
(bad)
sbb
sti
out
int
fld
jbe
mov
jmp
fcom
(bad)
movs
push
sahf
dec
xchg
push
out
inc
or
push
pop
enter
xchg
or
shr
dec
adc
dec
outs
cmps
pop
cmp
fs
pop
add
cdq
push
inc
sub
fistp
or
add
iret
adc
imul
mov
push
jnp
dec
out
inc
rcr
cs
fst
pop
mov
add
xor
js
shl
je
test
jg
add
dec
call
aaa
adc
dec
xchg
addr16
cmp
pop
imul
int3
sbb
sbb
mov
stos
pop
cmp
shr
cmps
mov
sahf
mov
ret
cmp
adc
jo
mov
pop
or
sub
jns
inc
xchg
lock
aaa
mov
outs
jnp
mov
adc
dec
sbb
add
fiadd
inc
mov
xchg
ds
iret
outs
or
push
rcr
or
mov
enter
lods
int3
mov
or
fmul
push
in
cmp
push
add
push
out
mov
ss
cmp
sub
xchg
push
jl
or
in
(bad)
into
popa
inc
cmps
sbb
xchg
jo
push
lahf
lock
mov
push
retf
hlt
loop
test
xlat
sahf
or
sub
rol
(bad)
mov
aas
cmps
adc
bound
call
bound
mov
mov
scas
repnz
sub
inc
adc
arpl
inc
dec
out
popa
xchg
sub
fiadd
adc
and
sub
lods
mov
cmps
(bad)
sbb
aad
push
cdq
icebp
adc
dec
sub
std
jne
cmp
inc
test
pop
push
js
adc
pop
jae
mov
bound
pop
dec
(bad)
xchg
sahf
adc
push
sbb
fsubr
retf
mov
lods
mov
sbb
js
cmp
test
mov
out
mov
inc
rol
sar
xor
jge
jl
sub
xor
push
mov
stos
adc
jno
adc
ret
sub
(bad)
adc
cmp
pop
cmp
or
stos
arpl
fs
sbb
mov
ror
dec
bnd
test
repnz
popa
popa
jecxz
add
mov
push
je
or
sub
push
mov
push
daa
xchg
cmp
push
mov
ds
fldenv
xchg
or
test
test
xchg
or
or
fidivr
cs
cmp
xchg
or
mov
sti
xor
and
mov
xor
(bad)
loopne
jb
mov
xchg
adc
movs
xor
sbb
pop
shl
jne
pop
gs
cmp
pop
shl
lods
hlt
push
(bad)
fs
sar
fidivr
adc
or
cdq
sub
xor
cwde
add
inc
ja
push
mov
adc
dec
sbb
scas
cmc
push
loop
out
or
fsubr
stos
dec
push
movs
jp
xchg
shr
out
mov
mov
test
or
and
lods
mov
jo
jne
push
mov
sahf
adc
sbb
mov
out
inc
dec
sub
xchg
sahf
(bad)
xchg
add
cmp
bound
sbb
xchg
call
mov
ret
jo
mov
jecxz
and
icebp
cmc
xor
jg
lods
aad
test
call
push
clc
loope
fs
dec
jp
add
push
add
call
push
sar
das
fwait
into
push
lods
pop
mov
popa
ficom
(bad)
pushf
mov
cld
cmp
adc
xor
and
inc
sti
push
popa
fld
and
jmp
sub
or
lds
inc
retf
mov
das
lea
mov
inc
popa
jge
mov
inc
repnz
sub
xor
ins
rol
fsub
and
iret
xor
jo
sub
sbb
shl
in
ss
call
jnp
mov
fs
aaa
nop
sbb
enter
pop
stos
cmp
shl
into
dec
jns
jg
mov
sub
int
xor
lea
aaa
stc
jl
add
xlat
jnp
iret
push
add
mov
adc
mov
xor
lea
fcom
xor
fwait
pop
fisttp
movs
jae
(bad)
sub
call
pop
cmp
and
xchg
lods
sub
dec
inc
and
lock
jno
int3
adc
mov
cmp
aaa
ins
or
xor
pop
push
rol
cld
xchg
and
mov
jp
or
mov
pop
mov
mov
inc
cmc
jnp
pop
sbb
adc
jl
neg
pop
mov
imul
fisubr
mov
dec
rcr
aad
ja
mov
push
and
mov
shr
jb
les
cwde
repnz
dec
dec
xchg
and
dec
ror
sahf
push
(bad)
aaa
xor
jle
hlt
bound
inc
xchg
inc
out
sti
sub
pushf
xchg
or
imul
cmp
push
aas
cdq
iret
cmps
mov
ret
pop
nop
inc
adc
fwait
(bad)
mov
out
nop
loop
adc
mov
dec
lods
push
stos
sar
add
xor
mov
jns
mov
sahf
mov
div
push
cli
mov
les
sub
xor
mov
rcr
into
ins
data16
addr16
out
mov
xor
adc
gs
cmp
out
jmp
adc
dec
(bad)
lea
add
outs
cdq
(bad)
jp
add
cmp
and
dec
fwait
sub
rol
scas
les
mov
add
mov
mov
movs
(bad)
lock
(bad)
int3
xor
sub
outs
add
mov
retf
test
sub
and
enter
fdivr
(bad)
ror
out
dec
sub
fwait
jp
fiadd
jmp
mov
loopne
xor
adc
jne
and
dec
mov
xchg
cmps
cmp
inc
jecxz
inc
fild
inc
cmp
sub
add
shr
cmp
xor
sbb
cdq
push
push
pop
inc
pop
pop
dec
and
dec
inc
mov
mov
jmp
popf
aas
ss
cwde
mov
mov
popf
cmp
jl
mov
inc
pop
(bad)
or
pop
and
lods
cmp
cli
imul
cmp
jne
ds
into
adc
movs
(bad)
test
ror
adc
xchg
ins
sub
inc
fdivr
xchg
sar
(bad)
and
das
repz
jg
mov
loopne
mov
cmp
or
push
es
es
push
mov
cmp
jmp
mov
movs
mov
ret
outs
dec
adc
pop
xor
xor
jmp
push
and
enter
ror
je
and
inc
jmp
repz
stos
and
xor
lods
fs
push
dec
retf
or
pop
pop
pop
repz
aad
sub
inc
pop
shl
mov
adc
es
mov
xchg
out
inc
scas
and
cli
loopne
je
jmp
xor
xor
cmc
mov
sub
adc
(bad)
fnstenv
add
outs
hlt
rcl
dec
test
jns
pand
ret
enter
(bad)
gs
adc
inc
xchg
sbb
lods
(bad)
leave
mov
stos
sbb
daa
and
retf
add
mov
mov
xchg
out
jle
xlat
xor
hlt
mov
(bad)
out
(bad)
jbe
test
mov
cmp
cmp
or
in
or
mov
out
mov
fstp
dec
fcomi
enter
lahf
sub
cwde
jne
push
cwde
test
out
push
fsub
xor
stc
cmp
adc
loop
mov
std
sub
inc
imul
movs
jl
jmp
sbb
add
sbb
enter
add
cmc
call
mov
pop
xchg
inc
cmps
jb
xchg
adc
jae
jno
popw
rcl
mov
xor
(bad)
jmp
shl
js
push
loope
sbb
cmc
sub
ret
mov
or
ins
test
lock
fdivr
out
(bad)
sub
or
adc
sbb
dec
sub
test
or
movs
and
in
and
cmps
mov
sub
imul
dec
add
into
add
enter
adc
es
aam
out
scas
or
daa
fisttp
rol
jmp
mov
mov
inc
adc
sub
add
int3
sar
clc
movs
mov
lea
and
lods
js
test
nop
xchg
jns
not
cmps
inc
cs
add
jge
xor
jne
(bad)
cli
loop
adc
sub
sbb
xchg
push
push
mov
ds
cmc
fistp
cmps
aas
leave
or
fsub
inc
pop
stos
fs
xor
jmp
push
xchg
jl
mov
test
icebp
aam
out
and
fstp
cdq
std
jb
fcomp
imul
mov
cmp
push
pushw
jmp
and
xchg
jno
sub
jnp
push
sbb
test
out
fiadd
pop
push
push
aad
mov
mov
mov
sub
adc
test
in
fld
jbe
xor
cmp
fisubr
pop
push
fsubr
cmp
adc
pop
stos
aas
cwde
add
add
push
icebp
repz
scas
call
std
sub
dec
jnp
pop
pop
xor
int
inc
(bad)
sub
jmp
push
or
sub
leave
pop
fistp
and
push
test
cmp
push
stos
into
jp
push
mov
xor
outs
(bad)
stc
push
psubusw
call
data16
adc
dec
add
mov
mov
sub
loopne
sbb
adc
(bad)
(bad)
cmc
mov
or
fidivr
inc
in
mov
sbb
ins
out
xor
js
gs
shl
(bad)
ds
add
inc
gs
jmp
xchg
call
adc
aaa
cmp
pop
das
inc
mov
les
jae
inc
add
cld
cmc
imul
jmp
mov
jne
aad
pop
mov
outs
das
mov
lods
int
add
sub
retf
aad
sbb
push
lea
arpl
dec
pop
add
sbb
push
fs
and
pop
push
adc
mov
data16
pusha
ja
outs
test
icebp
xor
icebp
inc
std
and
xor
scas
xor
rcr
cmp
mov
mov
into
repnz
out
in
lods
inc
lods
test
scas
fsub
adc
jno
jb
sbb
xor
cmp
xor
(bad)
cmovae
sub
jbe
mov
cmp
jne
xlat
mov
cmps
lds
mov
dec
scas
mov
unpckhps
pop
mov
lods
sahf
jb
or
mov
lods
bswap
jns
sahf
xchg
lods
mov
lahf
sub
cdq
xchg
std
mov
and
adc
xor
and
xchg
aaa
adc
out
xchg
push
xchg
xor
mov
mov
aaa
sahf
pop
dec
popa
mov
sar
fimul
in
jmp
adc
xor
jge
and
xlat
jnp
sbb
inc
pop
sub
push
ror
mov
jecxz
imul
push
sahf
push
mov
cli
pop
xchg
sbb
xor
mov
cmove
cmp
push
jne
shl
daa
shl
mov
add
mov
addr16
sar
sub
push
lods
adc
xchg
out
(bad)
xor
mov
jo
ds
mov
xchg
cmp
fbstp
pop
and
test
fidiv
jl
std
cli
add
fisttp
xor
popf
jno
jae
push
stc
in
popf
jnp
call
shr
in
xchg
dec
cmps
std
pop
sbb
lds
jp
cmc
lds
rcl
sbb
mov
and
stos
cmp
inc
jecxz
cmp
test
xor
mov
cmp
sbb
pop
or
mov
adc
inc
inc
push
sbb
bound
lods
dec
inc
dec
adc
pop
cmps
(bad)
pop
push
js
dec
or
sar
fcmovnu
cmp
shl
inc
push
jb
push
sbb
cli
fbld
cmp
xchg
sbb
arpl
cmc
mov
popf
das
sbb
adc
(bad)
in
inc
xchg
jmp
sbb
cli
inc
push
cmp
and
out
cmps
cmc
dec
test
pop
add
aaa
push
mov
and
test
mov
xchg
jb
repnz
test
adc
rcl
outs
sbb
ret
xor
sti
jns
cli
push
in
fs
rcr
mov
imul
fstp
mov
and
pop
or
test
ret
dec
popf
lods
jle
mov
dec
sbb
data16
pop
xchg
pop
adc
das
xor
jno
or
push
in
push
jo
push
xchg
lahf
push
mov
ja
jae
lahf
loop
add
je
imul
aas
cmp
addr16
inc
xchg
adc
lods
(bad)
fadd
movs
cmps
mov
in
push
mov
lods
out
cmp
test
jb
add
and
xor
ds
push
test
mov
rcl
dec
lods
test
(bad)
jmp
les
fcmovne
sub
dec
jne
int3
rcl
sub
cs
test
add
mov
int3
mov
push
fistp
sub
xor
hlt
lds
xchg
xchg
push
hlt
ret
sbb
xchg
lds
mov
push
sub
push
daa
out
jecxz
(bad)
fwait
pop
out
cmps
pop
mov
sahf
jbe
lods
repnz
cmp
sbb
mov
xor
and
call
addr16
mov
xor
jle
retf
cmps
push
cwde
and
stos
mov
lds
pusha
cmp
push
adc
or
jbe
loope
jecxz
movs
addr16
(bad)
mov
mov
lods
cli
add
sti
shl
out
cmps
pop
inc
or
push
mov
jl
(bad)
test
inc
xchg
int
sbb
(bad)
mov
inc
daa
jb
das
ret
or
add
pop
xchg
push
pop
mov
add
pop
popa
mov
lock
test
imul
and
xchg
sub
fild
lods
aas
push
and
jnp
dec
mov
popf
add
adc
rol
cdq
sbb
lods
mov
inc
out
mov
(bad)
mov
outs
pop
add
ror
push
test
jmp
xchg
sbb
addr16
push
xacquire
jg
aas
loope
cmp
xor
jmp
and
or
add
sti
ss
fild
inc
pop
mov
repz
lds
mov
pop
mov
pop
les
jp
lods
test
cmps
mov
aaa
pop
pop
push
push
jmp
and
call
outs
sahf
retf
adc
or
aam
in
sbb
jecxz
(bad)
xor
outs
nop
fcmovb
mov
out
jno
ficom
int
lds
test
dec
mov
xchg
pminsw
into
fist
or
jnp
cmps
int
in
jmp
mov
clc
ror
mov
mov
mov
sbb
add
loop
sub
add
shl
xchg
(bad)
inc
mov
cdq
data16
add
inc
jns
push
inc
xchg
test
cwde
mov
or
fsubp
inc
and
aaa
js
xor
iret
in
loopne
jnp
adc
pop
xchg
sbb
push
rcr
add
sahf
push
jp
loopne
les
mov
ds
ret
push
mov
mov
(bad)
iret
xchg
pop
outs
pushf
xor
sbb
rcl
pop
xor
xchg
lods
out
sub
into
pop
gs
ins
test
pop
stos
sbb
lock
cdq
sub
dec
xchg
xor
push
shr
neg
leave
cmp
movs
dec
xor
ror
sub
jge
inc
mov
sub
(bad)
repnz
jno
retf
jmp
mov
mov
call
imul
mov
movs
sbb
stc
mov
daa
test
inc
jbe
addr16
sub
mov
mov
mov
shr
pop
xor
mov
enter
sbb
sar
les
scas
xor
jle
jmp
mov
sub
push
push
dec
sbb
xchg
je
mov
inc
lods
jge
xor
js
pop
cmp
arpl
retf
pop
sbb
adc
aaa
jmp
push
outs
inc
cmc
pop
out
mov
lods
mov
test
cdq
retf
inc
aaa
sub
je
out
(bad)
cli
test
push
adc
mov
movs
fisttp
popf
rcr
mov
es
ins
mov
mov
dec
rcr
cmp
jmp
inc
sar
pop
jecxz
jmp
rcr
cld
jle
mov
imul
inc
shl
ret
call
mov
mov
xchg
push
mov
push
test
mov
cmc
fst
pusha
icebp
and
inc
dec
scas
clc
xchg
test
cmp
pop
out
xor
sbb
mov
cmp
cmp
lahf
arpl
xchg
arpl
retf
fcom
mov
leave
xchg
jne
stc
xchg
adc
xor
xor
mov
out
jae
cmps
mov
ins
dec
fidiv
add
mov
enter
test
push
mov
pop
mov
sti
lock
cli
pop
mov
sbb
or
outs
mov
mov
out
int
and
mov
mov
sahf
retf
cmp
jge
lods
popa
mov
add
adc
cmp
mov
out
and
int3
mov
adc
sbb
outs
cmp
jle
pop
retf
out
or
push
add
cmp
in
cld
mov
(bad)
sbb
ss
int
mov
push
xor
and
sahf
and
jno
clc
jg
xchg
inc
inc
dec
pusha
dec
dec
call
ins
out
mov
jns
inc
test
aad
xchg
pop
pop
pop
push
outs
xchg
cmps
sub
mov
fnstsw
sub
inc
test
jae
shl
mov
clc
adc
lods
jns
pop
(bad)
push
icebp
test
daa
ret
repnz
or
or
mov
add
cwde
jno
sbb
leave
push
das
stos
push
mov
jae
out
jle
mov
xchg
cmc
cmc
mov
outs
ins
jns
out
and
out
repz
lahf
xchg
ss
or
fild
sbb
xchg
xchg
cmp
lea
mov
dec
pop
inc
push
bound
jne
dec
xor
sbb
inc
out
cmc
js
lods
xchg
dec
loope
mov
ds
imul
mov
enter
int3
test
xchg
sub
pushf
pop
pop
ss
adc
add
jo
mov
rol
mov
pop
push
sahf
xchg
jecxz
aam
lds
push
xchg
fldenv
jecxz
sbb
jae
mov
fst
sub
adc
in
shl
in
xchg
or
xchg
or
cmps
xchg
mov
into
pop
and
gs
pop
clc
cmp
cmc
shl
and
xor
mov
in
(bad)
push
and
imul
mov
mov
inc
sbb
adc
push
add
mov
mov
(bad)
cmp
mov
add
mov
int
pop
mov
ins
loope
sub
jmp
jbe
shr
(bad)
fld
push
fdiv
mov
add
bswap
inc
cmps
mov
scas
mov
or
xchg
jl
cs
pop
(bad)
fwait
mov
fistp
mov
adc
cdq
push
pop
cmp
push
js
test
mov
imul
nop
push
or
movs
adc
addr16
dec
adc
pop
pop
sub
rol
xor
ss
inc
in
sti
add
aad
adc
cmp
cmp
in
add
jecxz
fld
push
cwde
xor
jns
das
bound
pop
lods
fnstcw
xchg
fimul
hlt
fs
cli
jb
ins
shr
inc
pop
out
cld
outs
jp
call
adc
or
push
push
jp
out
mov
les
xor
cmp
adc
lods
jne
cmp
std
in
aad
adc
test
mov
sbb
mov
pop
leave
aam
xchg
mov
dec
jmp
dec
xchg
sbb
fisub
push
test
push
jp
cld
sar
pop
xlat
mov
dec
sbb
mov
xor
mov
and
cmp
add
(bad)
mov
inc
push
pushf
pop
jg
pop
cmp
jbe
cmp
dec
fst
dec
sbb
mov
jmp
leave
fdivr
enter
or
loope
mov
mov
mov
lods
xor
popf
cmp
sub
in
popf
(bad)
mov
lahf
mov
setno
pop
cmp
sub
pop
pusha
xchg
cmps
fmul
push
add
mov
std
repnz
lahf
fidivr
cmp
icebp
cmp
je
mov
mov
cld
ror
std
mov
sahf
dec
jnp
stc
sahf
sub
push
cld
daa
mov
sbb
ret
retf
push
cmp
aaa
into
pop
lock
xor
std
or
jg
or
mov
scas
test
mov
lahf
inc
add
xor
dec
xor
pop
xor
shl
push
rcr
cmp
push
cmp
enter
test
outs
pop
loop
add
cmp
cld
in
out
inc
jge
xchg
rol
enter
cmp
dec
mov
adc
test
movs
xor
cs
adc
or
shl
inc
arpl
shl
sbb
cmp
cmp
pusha
fwait
jg
scas
movs
pushf
mov
sub
pusha
mov
mov
xor
icebp
cmp
xor
(bad)
sbb
jp
and
mov
ret
jne
retf
test
fcomip
sbb
das
mov
inc
push
loope
test
mov
mov
cmc
add
or
dec
iret
in
scas
fild
mov
push
daa
sbb
gs
xchg
pop
adc
in
fimul
pop
mov
dec
xchg
sbb
mov
aaa
nop
mov
pop
xor
add
cmps
cld
mov
into
mov
pop
pop
xor
das
push
lds
aas
jg
cld
push
ja
out
pop
xor
mov
cmp
mov
cmp
jb
xchg
shl
dec
ret
mov
mov
xchg
and
imul
mov
aad
cs
xor
scas
jg
rcl
scas
fld
sbb
ret
inc
stc
fs
retf
adc
shl
lea
mov
adc
add
icebp
cmp
int
scas
pop
jle
adc
shl
xchg
mov
ss
cmps
cvtps2pd
out
aad
pop
(bad)
xor
out
mov
ret
mov
js
in
aam
enter
mov
push
mov
test
and
jno
xor
pop
jae
dec
popf
lods
cdq
add
scas
xchg
mov
and
test
(bad)
and
and
xor
mov
out
lock
(bad)
shr
stos
bound
push
shr
imul
mov
pop
int
add
shr
in
jecxz
sub
les
sbb
inc
inc
adc
and
dec
dec
add
ja
popf
pop
sbb
push
push
push
or
lahf
and
push
dec
add
inc
jg
ret
mov
pop
lods
sub
pop
outs
loopne
in
pop
int
cmp
mov
test
mov
xchg
pop
mov
jns
push
mov
cmp
into
sub
sahf
xor
jmp
das
xchg
xor
or
das
out
in
sbb
in
jne
popf
aad
ret
and
adc
aad
int
mov
sbb
aas
jnp
mov
push
lods
fmul
jns
scas
sub
frstor
mov
fdiv
ror
mov
iret
push
aas
add
mov
rcl
cli
mov
fst
dec
xor
or
add
loopne
bound
lods
xlat
xor
leave
xor
mov
cmp
(bad)
out
add
sbb
mov
pop
repz
add
mov
sub
and
fistp
push
and
fwait
mov
sar
popa
push
add
aam
mov
xor
and
pop
push
jnp
ja
jne
jno
out
cdq
cmpxchg
inc
shl
sbb
add
ja
aaa
stos
or
ret
cmps
jo
pusha
movd
sbb
and
ins
xor
mov
stc
daa
(bad)
enter
sbb
xchg
scas
mov
popf
inc
and
dec
xor
add
mov
mov
xchg
inc
fild
enter
push
inc
sbb
dec
stc
cmove
outs
ins
dec
pop
push
or
jb
cmp
sbb
mov
movs
lds
pusha
dec
loope
loop
mov
xlat
mov
out
mov
mov
ficomp
sub
inc
pop
cmp
jne
xchg
push
sub
aad
jmp
dec
pop
xor
xchg
xor
lea
ins
and
nop
or
jns
add
sbb
cmp
lds
fld
in
mov
pusha
ror
sbb
push
retf
aaa
xchg
into
fidivr
in
test
adc
(bad)
fsubr
lea
mov
test
xor
add
(bad)
int3
loope
adc
rcl
lods
fstp
fdivr
mov
(bad)
cmp
loop
xchg
xchg
cmp
ret
push
xor
pop
sub
std
jb
mov
mov
jnp
int
pop
(bad)
and
xor
mov
sti
sub
push
je
dec
ins
add
fisubr
nop
mov
iret
repz
lods
std
pop
pop
(bad)
das
add
ins
push
xor
push
outs
shl
mov
sub
sbb
push
cwde
cmps
lods
clc
xchg
cmp
pop
cdq
mov
mov
arpl
ins
aas
ficom
aaa
mov
ins
push
mov
icebp
stc
nop
(bad)
mov
adc
shl
add
popf
aaa
pop
push
or
pop
and
xor
aaa
add
aad
loopne
push
in
jae
(bad)
pop
or
mov
inc
ins
ficomp
int
and
icebp
sub
in
xchg
gs
scas
jl
fstp
sbb
loope
leave
inc
adc
cmc
pop
or
fmul
daa
sbb
(bad)
loope
push
loop
fcomp
dec
ds
inc
(bad)
mov
sub
fyl2x
retf
out
pop
mov
lds
jecxz
dec
cmp
rcl
repnz
push
imul
xchg
sub
adc
or
and
not
xchg
fisttp
cmc
jno
dec
push
jbe
pop
movs
stc
jg
cld
mov
jp
cdq
ror
push
neg
aam
neg
dec
inc
mov
loopne
mov
mov
fisub
and
sbb
hlt
adc
fdivr
mov
xchg
(bad)
dec
scas
xor
push
add
ror
je
dec
add
(bad)
xlat
retf
mov
lea
dec
pop
inc
in
xchg
jae
mov
add
cmp
inc
sbb
add
ins
add
out
movs
cmp
mov
loop
xor
outs
fs
push
mov
pop
pop
imul
pop
sbb
xchg
ss
arpl
frstor
xor
or
mov
fadd
jmp
fisttp
mov
cs
xchg
dec
xchg
inc
sahf
nop
addr16
add
dec
(bad)
jmp
and
pop
pop
sub
in
loop
add
out
xor
cmp
xchg
fiadd
cld
sbb
push
shr
(bad)
frstor
ins
fimul
jns
xor
jg
test
fcom
dec
mov
and
push
lods
inc
fwait
inc
lahf
pop
outs
xchg
stos
pop
add
inc
lods
cmps
sub
fwait
pop
cmp
and
adc
cmp
dec
pop
add
jge
out
icebp
xchg
data16
dec
adc
sub
shl
popf
movs
in
fcom
iret
sbb
out
cmps
push
xor
mul
jmp
test
fidivr
dec
popa
mov
push
popa
(bad)
pop
scas
(bad)
call
lea
pop
jmp
daa
mov
sub
sub
push
mov
aam
mov
repnz
add
ins
mov
mov
push
hlt
mov
daa
scas
pop
xor
or
cmp
sbb
movs
movs
pop
clc
addr16
push
sub
stos
lea
push
sbb
sub
add
mov
lods
jmp
aad
adc
fisubr
div
xchg
jg
cmp
jl
jmp
cmc
scas
lods
out
pusha
pop
daa
add
(bad)
ins
in
cmp
pop
call
cmps
(bad)
sub
xchg
ins
in
fild
pop
xor
xchg
jno
sub
push
xor
les
(bad)
repz
fdiv
ret
mov
pop
fild
test
cmp
xor
dec
or
push
dec
test
mov
xor
inc
pop
or
push
adc
and
pop
push
mov
lods
hlt
xchg
rcl
push
xor
mov
dec
mov
leave
ror
(bad)
mov
add
mov
fwait
sub
popf
js
movs
push
push
mov
in
jns
lea
or
scas
movs
jecxz
jg
retf
dec
in
sub
repnz
inc
xchg
popf
popf
inc
fwait
js
int
push
sbb
mov
jb
out
mov
xor
test
mov
jb
inc
adc
cs
test
push
lahf
add
aad
adc
xchg
and
xchg
cmc
fcmovu
hlt
xchg
mov
adc
xchg
push
stos
cmc
adc
xlat
dec
imul
pop
ror
push
leave
push
int3
push
(bad)
push
sbb
or
shr
imul
mov
adc
iret
jnp
out
mov
xor
mov
lods
sbb
xchg
test
xchg
cmc
std
movs
pop
inc
cmp
std
inc
ds
mov
ficomp
cmp
mov
dec
inc
inc
fsub
ss
or
retf
ins
jl
test
jle
sbb
push
jo
lods
pop
lds
xchg
pop
imul
aad
loop
nop
xlat
sbb
mov
sti
pop
cmp
mov
nop
lods
ret
fcomp
add
and
aad
arpl
xchg
add
mov
sar
pop
and
adc
sub
outs
inc
sub
pop
hlt
cmps
xor
pop
cmps
ins
bound
fstp
sbb
out
mov
and
into
loop
inc
cmp
cmps
sub
xchg
mov
lahf
add
ret
bound
bound
aaa
dec
jp
xor
inc
pause
push
cmp
pop
xchg
and
xor
into
add
mov
or
out
ret
inc
mov
xor
add
dec
ins
mov
loopne
mov
adc
xchg
adc
mov
jns
cwde
ins
aam
and
cmp
gs
pop
jbe
xor
mul
imul
mov
aad
xor
add
jnp
(bad)
xlat
shr
sti
ror
iret
imul
fdivrp
movs
mov
clc
pop
push
ds
push
sub
aas
mov
mov
inc
pusha
dec
mov
fbld
(bad)
in
push
sar
sub
leave
cwde
adc
into
and
sbb
jns
xchg
adc
sar
cmps
sub
fisubr
xlat
push
pop
movs
mov
sbb
add
out
jb
dec
fidivr
imul
call
push
and
fistp
test
jmp
sbb
ja
inc
outs
xchg
out
dec
std
je
sub
nop
in
jne
mul
jno
pop
dec
gs
lock
test
pop
xor
out
inc
jmp
and
fs
xor
ds
inc
jns
lock
add
shl
mov
and
mov
fld
lahf
and
(bad)
test
xor
jle
jp
(bad)
or
nop
cld
outs
js
cld
in
daa
add
mov
add
cmps
pop
sub
test
jge
icebp
xchg
pop
jae
add
jp
mov
xor
add
inc
inc
jle
xor
mov
pop
aaa
sbb
test
add
out
clc
vhaddps
dec
rcr
push
stos
sub
sub
imul
sbb
dec
aam
std
cld
cmp
push
jl
aaa
lods
sar
jle
test
cmp
or
into
outs
fild
dec
and
popf
xor
mov
outs
imul
mov
retf
cmp
pop
and
cwde
add
mov
add
pop
adc
mov
fsub
sti
cmp
xchg
or
pop
adc
repz
(bad)
inc
cmp
das
mov
cdq
neg
mov
les
sub
int
push
jns
ror
push
stc
je
bound
push
gs
xchg
and
jp
push
xchg
inc
adc
fnstcw
jl
icebp
inc
into
mov
pushf
xchg
mov
call
(bad)
test
or
call
push
jmp
sbb
push
test
push
(bad)
and
push
jmp
pop
fnsave
cmp
inc
das
sub
inc
xchg
mov
mov
mov
int
adc
cmp
xor
(bad)
cmp
test
fwait
psrlw
leave
sbb
arpl
rol
jnp
dec
js
push
loope
push
cmp
and
call
into
mov
cmp
inc
or
retf
jb
jnp
xchg
arpl
nop
inc
pop
cmp
clc
xchg
jmp
fnstcw
mov
cmps
mov
xchg
addr16
mov
test
jns
xchg
push
js
(bad)
jbe
jnp
sub
daa
jo
mov
inc
fstp
stos
sub
pusha
fild
out
call
jg
out
cmc
enter
stc
nop
fwait
ret
cmp
shr
jge
sbb
or
and
shr
push
cmc
addr16
push
stos
and
push
aaa
jno
into
icebp
rcr
fwait
jne
bnd
rcr
jecxz
cmp
(bad)
adc
add
lds
mov
lods
std
clc
sbb
mov
mov
test
scas
jg
mov
jbe
jo
out
sbb
nop
push
inc
push
push
pop
jmp
sar
je
popa
fwait
inc
sub
adc
jle
jno
rcl
sar
mov
int
mov
sub
cmc
sub
imul
into
or
jns
cmp
ja
mov
pop
cmp
jmp
jnp
xor
cmp
cmps
or
jno
sub
pop
pushf
jmp
push
mov
aam
sbb
xor
pop
movs
mov
push
popa
jecxz
lods
mov
neg
xchg
jmp
or
dec
and
and
imul
mov
sub
and
jl
dec
call
pop
cmp
add
cmps
test
jmp
mov
jmp
sub
and
mov
push
scas
sbb
inc
cmp
jnp
in
xor
jl
sbb
mov
sbb
jge
sahf
(bad)
int
and
clc
push
jnp
ror
mov
out
data16
mov
dec
mov
data16
cli
(bad)
push
cli
lods
clc
cmps
out
retf
jae
jle
ss
push
inc
ffree
test
pop
and
dec
push
jo
fstp
or
nop
xchg
js
fld
dec
and
mov
add
xor
mov
mov
mov
or
xchg
push
xlat
pop
arpl
mov
push
pop
ror
xor
outs
xchg
(bad)
jne
je
adc
jo
mov
lods
mov
movs
mov
loope
mov
pop
pop
and
mov
loop
jmp
adc
stc
pop
clc
outs
iret
pusha
out
inc
dec
add
sti
sbb
push
iret
ror
dec
dec
fisub
outs
add
cld
cdq
or
and
jecxz
or
cmp
xor
stc
in
aam
add
xor
mov
mov
fstp
out
pusha
sub
mul
xor
xlat
test
out
xchg
jb
in
arpl
and
push
stos
push
shl
xlat
(bad)
repz
out
push
add
rcr
mov
fdivr
mov
aaa
dec
and
arpl
cmp
mov
movs
lea
retf
pop
mov
movs
(bad)
(bad)
sub
and
clc
and
pop
pusha
add
cmps
ins
(bad)
int
(bad)
mov
rcl
jge
add
or
jne
dec
sub
imul
shl
push
adc
aas
push
lahf
jno
ds
adc
mov
sbb
push
adc
pop
mov
push
ret
and
loop
jmp
loop
into
call
mov
les
scas
cwde
in
jl
hlt
loop
(bad)
in
cs
daa
in
push
xlat
ret
fidiv
ins
retf
test
cwde
xor
pop
push
das
xor
retf
retf
inc
outs
jg
dec
movs
stc
stc
fmulp
cmp
arpl
dec
fcmovnb
dec
mov
jnp
sti
stc
inc
mov
lds
jbe
out
(bad)
jnp
adc
cwde
pop
aas
out
ins
pop
mov
cmp
pop
sti
inc
(bad)
pop
cmp
mov
fs
sbb
pop
and
xor
ror
out
leave
xchg
xor
in
or
or
sbb
mov
push
out
push
dec
pop
lock
pushf
push
mov
sahf
cmpps
push
call
fimul
es
sbb
cmp
mov
out
sahf
mov
mov
(bad)
jp
mov
pop
lods
enter
jg
sub
daa
dec
add
js
imul
or
inc
fcomp
add
or
sub
adc
or
push
xor
jp
or
mov
sbb
lods
mov
sbb
ss
xor
jg
popf
fstp
fistp
loopne
int3
jecxz
aaa
fcmovnu
popf
pop
inc
pop
ins
jle
pop
lea
(bad)
mov
push
sti
mov
in
xchg
or
adc
cli
and
dec
pop
test
repnz
sti
jne
sbb
addr16
push
loope
inc
mov
loope
shl
and
push
aaa
repnz
jb
psubusw
imul
jne
inc
test
mov
in
fstp
fmulp
ins
cmc
jmp
les
rcl
inc
push
sbb
and
adc
sbb
push
xor
sti
fidiv
mov
dec
(bad)
or
sub
stc
test
cmc
aam
ffree
xor
cmps
es
sub
xchg
xchg
stos
call
or
ins
ror
add
(bad)
pop
mov
mov
sub
mov
shr
mov
add
lds
mov
rcl
jle
xchg
jb
jmp
mov
hlt
jecxz
xor
ret
mov
jmp
out
aas
loopne
fadd
sub
ins
das
xchg
aas
je
cmp
push
mov
mov
push
pusha
and
cmps
mov
aad
and
lea
adc
mov
popf
sar
jno
nop
mov
cmps
sar
jmp
jmp
jae
retf
pushf
(bad)
repz
movs
xor
call
movs
popa
addr16
frstor
and
out
cmp
das
or
imul
jl
gs
int
nop
mov
(bad)
or
ss
rcr
(bad)
test
dec
xchg
pop
repz
mov
jg
jno
iret
idiv
idiv
mov
(bad)
jmp
dec
adc
pop
std
xor
(bad)
xchg
arpl
push
test
rcr
(bad)
arpl
imul
xor
pop
sar
bound
adc
and
cmp
adc
or
sbb
inc
icebp
sub
fdivr
pop
inc
in
int3
mov
ds
enter
xlat
stos
cmc
hlt
xor
div
and
mov
aas
fidiv
mov
leave
push
aam
aaa
je
cmp
dec
outs
lock
arpl
or
inc
jmp
int
jno
push
mov
cmp
cld
cdq
adc
dec
mov
push
pop
je
in
out
scas
or
mov
test
push
push
repnz
adc
adc
out
jno
xchg
loop
scas
in
inc
xchg
dec
lahf
lods
lahf
pop
push
mov
or
or
xchg
jo
cmps
shr
mov
hlt
sahf
fidivr
ret
push
pinsrw
sbb
cld
jle
fisubr
xchg
cwde
les
std
(bad)
mov
ss
and
(bad)
cmp
mov
mov
clc
das
(bad)
mov
mov
or
xchg
adc
cmp
aaa
or
cmc
pop
adc
ret
popa
cmc
push
mov
js
sbb
push
int
std
lds
lock
add
movs
mov
je
sub
cmp
repnz
jno
push
xchg
ja
mov
je
mov
ss
popa
sub
cs
cmc
shr
test
rcl
mov
into
pop
int
(bad)
addr16
mov
fsubp
xchg
dec
lock
inc
lds
stos
outs
sbb
push
cmp
adc
dec
dec
je
jae
cmc
jo
xor
(bad)
add
push
xchg
jmp
add
push
repz
jns
into
pop
es
test
dec
xor
and
les
mov
push
inc
xchg
ds
xor
out
pop
push
outs
or
pop
push
fstp
shl
fcomp
jmp
retf
adc
and
jl
repnz
dec
fmul
inc
cmc
push
dec
xrelease
xor
test
into
inc
sbb
stos
pop
add
mov
movs
jmp
jno
sub
xor
mov
out
and
addr16
mov
movs
hlt
jnp
js
call
adc
inc
push
dec
stos
call
call
shl
mov
pop
loopne
xor
mov
ficomp
cmp
sti
and
jg
aad
mov
scas
pop
test
mov
push
cmc
or
sbb
dec
stc
mov
sub
sub
inc
cld
scas
es
mov
cli
into
adc
or
cmp
dec
repz
pusha
push
jg
xchg
sbb
pusha
add
sub
push
sbb
imul
ss
adc
in
push
jns
(bad)
sub
icebp
stc
loop
mov
rcl
imul
inc
pop
lea
jge
(bad)
out
mov
dec
or
outs
shl
xchg
and
mov
or
aas
dec
mov
or
mov
es
push
adc
mov
xchg
fst
rcl
adc
sub
inc
pop
inc
xor
add
sub
push
ins
cmp
cmc
movs
cmps
dec
push
aam
aad
out
push
stos
add
add
fdiv
popa
adc
inc
dec
cmp
mov
mov
xchg
scas
xchg
loopne
cwde
pop
or
inc
loope
fmul
cmc
movs
cmps
das
aas
xor
ja
stos
pop
ja
dec
sar
out
ret
xchg
jnp
jns
std
pop
sub
sub
sbb
jnp
mov
mov
add
aas
xor
inc
fld
nop
test
jns
(bad)
mov
or
clc
movs
push
sub
cmp
inc
sbb
cmps
jmp
sbb
(bad)
jmp
and
cmps
loop
ret
adc
inc
aad
xor
fwait
(bad)
mov
fstp
rol
dec
dec
ss
or
imul
dec
jnp
sbb
test
(bad)
adc
sub
or
test
xchg
adc
cdq
repz
pop
cmp
add
retf
adc
repnz
push
xor
(bad)
xlat
call
push
mov
sar
push
mov
mov
adc
and
cmps
jmp
(bad)
sbb
or
dec
push
out
test
dec
mov
int
pop
ret
adc
mov
dec
neg
mov
cmp
lock
mov
rcr
(bad)
cmps
aas
inc
(bad)
mov
mov
shl
ror
or
(bad)
jbe
fcmovbe
pushf
aad
outs
loope
adc
arpl
sbb
int3
xchg
jmp
pop
mov
call
bound
jl
gs
std
dec
je
pop
mov
ror
push
xchg
icebp
and
and
aam
mov
jmp
retf
jo
cli
or
push
push
sar
ja
int
mov
and
xlat
sub
and
jo
dec
push
push
cs
ds
out
mov
(bad)
fadd
mov
sbb
xchg
fcomp
(bad)
out
adc
jecxz
(bad)
loope
out
lea
jno
mov
mov
cmp
pop
sti
inc
jo
sub
cmps
in
enter
pop
adc
std
loope
and
pop
ins
xchg
nop
int
(bad)
cmc
outs
test
mov
mov
fdivr
out
xchg
sub
jl
mov
mov
xchg
jbe
data16
and
xor
arpl
push
dec
adc
xor
retf
xchg
push
jmp
loop
mov
jp
inc
or
dec
adc
cmp
out
movs
push
lock
popf
fstp
and
stos
adc
dec
pop
and
sub
xor
and
cmp
inc
fcmovnb
daa
mov
dec
cs
stos
ds
add
loopne
movs
test
out
jmp
sbb
test
jnp
retf
call
aam
movs
int3
xchg
jne
das
retf
test
adc
ficomp
push
pop
rol
xor
cmc
ret
push
mov
fiadd
pshufw
push
lods
adc
mov
pusha
add
test
inc
pop
sub
cmp
neg
cmps
dec
pop
pop
mov
ds
stos
enter
in
sub
test
mov
mov
pop
add
shl
je
add
mov
test
(bad)
stos
mov
push
sub
xor
in
push
sub
mov
add
pop
mov
cld
xchg
sbb
jmp
mov
cmp
stos
add
push
inc
cs
mov
or
hlt
jne
xor
gs
or
(bad)
fnstenv
mov
jae
popa
push
mov
das
iret
inc
int
jl
not
inc
cdq
cmc
sbb
inc
arpl
je
xor
pop
push
push
loop
popf
jmp
shl
push
add
pop
jl
or
scas
cld
cs
cmp
adc
push
loope
xor
push
adc
inc
mov
enter
xor
dec
mov
mov
(bad)
call
out
dec
add
lahf
and
or
jne
push
ds
jo
fs
repnz
push
lds
ret
xchg
cld
jmp
jbe
mov
add
popa
dec
pusha
jne
sti
cmp
push
inc
shl
push
xchg
pop
shr
(bad)
mov
mov
or
es
pop
ficomp
aaa
lahf
nop
mov
sbb
jmp
retf
pop
pop
sbb
call
mov
inc
xchg
xor
push
fs
xchg
(bad)
push
mov
stos
jecxz
dec
ja
mov
push
jp
aam
imul
ror
dec
or
cmp
sub
stc
dec
fistp
xchg
xchg
cmps
loop
push
data16
movs
test
mov
addr16
push
cmps
adc
out
dec
pusha
push
adc
and
xchg
je
fisttp
lock
repnz
cmps
mov
je
rcl
push
jno
clc
data16
or
mov
retf
xor
mov
push
sbb
sub
aaa
mov
mov
stc
mov
mov
gs
je
aaa
icebp
fld
pop
(bad)
mov
and
retf
sbb
dec
(bad)
cld
mov
jecxz
jnp
inc
push
adc
push
lea
shl
pop
push
sbb
mov
cld
jecxz
sahf
or
inc
cli
lods
xchg
or
jle
popf
out
cmps
cmp
loopne
or
inc
clc
xchg
push
int
and
loop
and
ret
and
mov
xor
cwde
dec
int
fisubr
sbb
jle
xchg
daa
loope
jecxz
call
sub
test
inc
iret
inc
jb
pop
daa
test
or
mov
aaa
out
outs
or
call
(bad)
mov
stos
outs
outs
add
inc
adc
retf
ins
cmps
ret
outs
mov
inc
in
xchg
xchg
cs
movs
shl
call
add
adc
push
push
push
jp
stos
inc
les
and
mov
add
stos
mov
ja
repz
test
in
es
jmp
jecxz
mov
in
dec
push
cmp
cmp
mov
pop
jae
add
jb
ins
mov
inc
and
sar
int3
dec
das
mov
mov
pop
repnz
mov
sbb
test
xchg
mov
push
xlat
stos
dec
mov
cmp
or
sbb
push
add
outs
pop
sti
xor
cmp
xchg
inc
rcl
test
inc
sub
loope
into
jecxz
mov
pop
xchg
jl
pop
pop
test
sub
push
sub
pop
movs
movs
pop
into
and
bound
xchg
in
mov
and
int
(bad)
fbld
mov
jge
shl
xchg
mov
pop
mov
cld
shl
jmp
ret
icebp
outs
adc
sub
mov
icebp
imul
mov
sub
arpl
nop
xchg
mov
jno
popa
in
adc
into
inc
adc
xor
ret
dec
add
loop
dec
push
pop
push
jg
or
mov
jmp
arpl
mov
cmc
xor
mov
(bad)
not
in
scas
mov
mov
sbb
xchg
cmc
out
and
or
imul
mov
jnp
repz
(bad)
in
mov
dec
in
cs
je
xchg
iret
adc
enter
mov
xor
fidiv
outs
ja
out
(bad)
gs
cdq
std
sbb
and
fimul
(bad)
iret
outs
clc
mov
xchg
mov
stos
(bad)
data16
cmp
jmp
xlat
adc
push
mov
fsincos
pusha
adc
or
int
mov
call
mov
sub
or
fwait
xchg
repz
mov
das
mov
cmp
dec
sub
or
addr16
rcr
dec
adc
add
dec
sti
scas
enter
shl
(bad)
xchg
cli
dec
fbld
adc
push
test
mov
dec
je
sub
mov
cmp
mov
loopne
sub
cmp
retf
fwait
call
fisubr
and
xchg
ins
mov
(bad)
cmp
or
adc
jg
mov
sbb
push
or
and
mov
or
or
xchg
(bad)
cmp
pop
loopne
popa
jb
out
pop
inc
xor
jno
rep
ficom
iret
mov
push
popa
aas
mov
stc
mov
scas
adc
loop
cld
lea
outs
sub
or
mov
lock
or
mov
das
mov
add
retf
xor
imul
fcmovnbe
sub
popa
int3
in
stos
imul
inc
xchg
inc
es
lds
neg
je
push
mov
cwde
fadd
mov
sbb
sub
mov
sbb
loopne
outs
inc
add
sbb
es
sub
inc
popf
rcl
test
jecxz
iret
ret
jg
inc
jbe
sub
arpl
lods
aas
test
mov
rcl
pop
mov
xchg
cld
mov
shl
xchg
inc
or
gs
movs
cwde
jnp
cmps
ds
hlt
and
inc
idiv
data16
lods
out
push
jecxz
call
mov
jbe
push
jp
call
add
pop
ret
ds
hlt
mov
scas
int
mov
ins
dec
xchg
adc
mov
jo
cmp
sub
enter
cmps
fdiv
pop
dec
push
and
js
add
mov
cmp
pop
sbb
mov
mov
mov
scas
pop
imul
inc
lahf
sub
push
lock
jp
jmp
nop
cmps
cmc
shl
cli
sbb
jg
xchg
int3
sub
sbb
in
movs
or
and
mov
inc
movs
daa
mov
test
adc
aad
out
xchg
add
call
adc
sbb
mov
adc
ficomp
cmc
mov
test
shl
shl
idiv
jo
add
dec
mov
dec
jg
dec
test
loope
and
scas
sbb
xor
mov
or
mov
(bad)
jmp
inc
adc
mov
into
and
rol
test
mov
jl
pop
sbb
out
add
inc
or
fwait
jno
adc
ret
xchg
rol
jno
xchg
cmps
xchg
aad
and
ret
out
jbe
outs
ja
cmps
aam
int
and
mov
xor
or
sbb
in
addr16
hlt
les
dec
adc
push
inc
pop
pop
jmp
xchg
sbb
outs
ins
leave
xor
inc
mov
test
out
hlt
push
adc
out
dec
(bad)
add
push
pushf
mov
ret
popa
push
push
cmps
or
mov
xor
sbb
and
inc
cmps
mov
enter
das
es
push
out
sbb
push
fld
fst
inc
out
mov
(bad)
xlat
add
lock
aas
xchg
lds
mov
xchg
jbe
fstp
add
popf
arpl
movs
rcl
jae
xor
inc
test
test
jmp
out
mov
mov
mov
daa
sbb
dec
and
dec
adc
jmp
data16
stc
push
inc
in
and
inc
dec
cmp
(bad)
mov
bound
mov
frstor
push
lea
(bad)
sbb
cmp
in
les
dec
sbb
mov
sbb
xor
or
rol
sti
push
gs
push
inc
cwde
mov
jmp
adc
fsubr
inc
add
push
mov
(bad)
push
stos
(bad)
jg
mov
and
test
test
xchg
sub
adc
rcl
in
test
mov
pop
xor
das
lods
lahf
inc
push
pop
sbb
popa
mov
hlt
movs
mov
adc
mov
mov
xchg
mov
adc
push
imul
ret
aaa
mov
push
out
push
pop
(bad)
mov
xor
aas
sub
add
mov
mov
ds
dec
xchg
and
xchg
aaa
lgs
mov
mov
push
bound
pop
add
pop
or
push
fcom
cs
xchg
out
rcl
hlt
aad
push
and
in
mov
dec
mov
test
adc
test
fdivrp
addr16
xchg
xor
hlt
lahf
mov
sub
mov
and
cmp
xor
mov
je
(bad)
in
jnp
xor
sbb
xchg
pop
jecxz
pop
push
mov
movs
ret
push
movs
call
out
cwde
rol
pop
movs
xchg
ins
or
push
push
test
repz
imul
mov
fdivr
ret
pop
into
jo
inc
ss
sub
loope
fsin
adc
pop
inc
ret
(bad)
fisubr
jnp
adc
call
test
sbb
cld
mov
and
loope
sbb
cdq
leave
icebp
cmps
xchg
ja
ret
lock
jg
not
movlps
hlt
ins
fcomp
out
push
fdivr
ss
mov
clc
dec
or
jo
(bad)
pop
cmp
dec
dec
add
cmps
mov
(bad)
sub
jb
mov
aas
sub
jb
pop
addr16
xchg
pop
pushf
test
dec
fwait
stc
js
cs
retf
out
inc
into
and
cmps
test
dec
jnp
scas
inc
mov
imul
jl
pusha
aam
mov
faddp
jnp
mov
fwait
cdq
cmp
jno
(bad)
out
or
imul
xchg
loopne
out
pop
sbb
scas
shr
cmovbe
sub
in
ins
mov
and
add
xchg
pop
cmps
cld
cli
jnp
scas
std
addr16
imul
loope
fst
push
or
xchg
cmp
xchg
and
popf
lods
pushf
fld
cmp
out
into
and
daa
xor
cmp
xchg
mov
ret
mov
inc
xchg
sbb
(bad)
fsubr
dec
jecxz
push
xchg
call
rcl
or
aaa
jnp
ror
xchg
push
sub
and
inc
add
repz
clc
call
mov
mov
(bad)
out
pop
out
nop
cmps
fwait
cmps
fistp
pop
pop
inc
bound
mov
lahf
mov
xor
outs
cs
in
(bad)
rol
cwde
push
pop
jecxz
test
out
sub
mov
sbb
shl
mov
mov
jmp
stc
mov
jge
(bad)
in
mov
lods
adc
push
das
sub
pop
sub
cmc
test
int
popa
add
sub
push
loope
cmp
cmp
stos
sub
leave
pushf
fcom
xchg
test
imul
scas
pop
retf
jge
and
mov
fwait
add
leave
jbe
mov
retf
dec
mov
arpl
inc
cld
(bad)
inc
stos
ins
fistp
imul
cli
mov
dec
jbe
and
jmp
sbb
sbb
xchg
pop
dec
fmul
hlt
rol
xor
inc
cli
and
cmc
int
inc
leave
test
xchg
clc
sti
enter
jg
jg
call
lahf
fwait
repnz
cmp
sub
ret
iret
retf
cmp
sbb
rcr
push
mov
push
mul
(bad)
call
pop
pop
pop
outs
ja
sbb
pop
xchg
mov
bound
stc
sub
mov
cmp
or
add
lods
jmp
xor
jl
es
out
sub
sub
test
test
movs
clc
lea
and
push
mov
in
into
jge
mov
(bad)
ficom
inc
cdq
out
dec
jmp
jmp
bound
test
loopne
jne
sbb
mov
pop
xor
push
mov
adc
xor
or
jb
lahf
xchg
leave
push
cmp
fld
or
add
add
or
xchg
jle
dec
and
mov
sub
xchg
xchg
inc
fdiv
ss
test
pusha
fcmovnb
call
cmps
outs
or
pop
xchg
popa
mov
pop
ins
jo
sbb
(bad)
ror
test
mov
in
sbb
arpl
jg
or
dec
cwde
aam
mov
cdq
test
(bad)
adc
sahf
pop
xor
iret
inc
fdivr
in
(bad)
xchg
in
sub
inc
mov
aam
je
sbb
jno
xor
sbb
push
push
ds
retf
repnz
out
pusha
pushf
sbb
mov
or
les
out
pop
pop
push
cli
clc
dec
sbb
mov
mov
push
jnp
icebp
or
mov
mov
dec
js
mov
aam
lds
sahf
jecxz
pusha
jl
popf
push
push
bound
es
mov
ret
push
mov
mov
adc
sbb
mov
mov
pop
(bad)
cwde
mov
test
xchg
loope
sar
das
pop
in
jge
rcl
stos
neg
jmp
fidiv
push
rcr
adc
or
lock
xchg
cli
sbb
rcl
xchg
scas
xor
xor
inc
lds
pop
sub
push
pop
and
mov
sbb
push
add
imul
xchg
cmp
or
js
or
bound
das
adc
mov
pop
ror
jno
push
add
cmps
aaa
jmp
movs
inc
int3
scas
mov
repnz
xor
jae
xor
pop
call
or
mov
adc
mov
jmp
cmp
mov
sbb
add
lds
or
mov
dec
in
daa
push
inc
pop
outs
scas
stos
pusha
lods
movs
loope
cmc
push
lock
cdq
xlat
xchg
das
icebp
lds
jmp
mov
fdiv
inc
shr
sub
rol
pop
call
push
repz
sub
jnp
in
pop
test
call
dec
xchg
rcr
inc
outs
shl
or
cwde
retf
stos
jae
jge
adc
std
dec
imul
push
sub
cmps
jle
call
dec
leave
cmps
test
fbld
and
fisubr
mov
sub
jae
nop
cld
cmc
mov
(bad)
mov
into
repnz
stc
cmp
fwait
cmp
lahf
mov
mov
leave
pusha
push
cmp
mov
in
sbb
lds
sbb
ss
mov
pop
jecxz
test
repz
mov
push
ja
adc
pop
add
cmc
and
loope
push
jle
arpl
inc
fild
test
lahf
(bad)
rcr
add
xchg
ror
popa
jo
ja
in
mov
xor
fsub
mov
sahf
dec
sbb
cmp
mov
xchg
jg
call
xchg
adc
push
bound
cli
loop
push
ffreep
stc
adc
int3
cmp
jecxz
loop
add
popf
jno
fsubr
mov
sbb
sub
pushf
sahf
sti
(bad)
add
arpl
jge
imul
lea
mov
call
call
inc
dec
sbb
add
jne
fidiv
pop
fcmove
push
mov
inc
sbb
jle
dec
push
add
sar
xchg
or
into
int
add
jno
out
xchg
out
addr16
xor
jecxz
xchg
push
xor
jmp
dec
or
ficomp
in
mov
call
icebp
jge
dec
movs
cmp
in
pop
adc
jbe
pop
in
test
out
(bad)
pop
clc
into
adc
xchg
mov
arpl
and
pop
mov
push
movs
dec
xchg
add
push
push
ss
and
jmp
mov
sub
pop
fdivr
pop
leave
loope
mov
into
add
enter
mov
jp
and
repnz
out
add
loopne
pop
push
push
or
fdiv
lods
dec
test
pop
and
loop
fiadd
inc
xor
fsubr
inc
(bad)
pop
mov
or
sub
popf
inc
scas
mov
test
sti
jle
lock
mov
pusha
jo
dec
test
test
mov
movs
sub
ffreep
xchg
test
dec
and
(bad)
(bad)
xlat
xchg
pop
int3
(bad)
jge
pop
aas
(bad)
es
lock
mov
pop
dec
in
ja
ins
inc
(bad)
cwde
inc
xlat
pop
pop
jae
int3
stos
imul
inc
out
cdq
or
lea
dec
and
pop
movs
add
add
pop
ss
retf
xchg
push
jmp
cwde
or
lahf
cli
icebp
adc
push
jle
jns
loope
add
retf
fdiv
fild
fsub
cmp
ds
mov
xor
fnstenv
loope
or
pop
and
in
movs
fimul
scas
mov
mov
addr16
dec
mov
inc
or
hlt
cmp
out
inc
mov
sub
in
cmc
add
div
mov
mov
adc
fwait
ret
cmp
dec
xor
les
mov
fisubr
imul
sbb
xor
cmps
push
dec
out
and
dec
adc
sub
leave
enter
cmp
jmp
aam
mov
outs
xchg
xchg
inc
inc
pop
sub
and
xchg
sti
push
jmp
adc
cmp
stos
clc
jo
dec
popa
lea
adc
out
inc
mov
test
jmp
sbb
popa
(bad)
xlat
jp
ds
lahf
scas
dec
xor
fdivr
push
jp
jne
or
mov
pop
(bad)
xlat
ins
inc
pop
and
scas
mov
int
(bad)
ret
lods
sub
fstp
ds
(bad)
ficomp
inc
outs
push
ja
gs
or
enter
fwait
cmovge
mov
data16
pop
pop
add
cld
aam
jl
daa
push
mov
mov
cwde
pop
cmp
test
fwait
rcr
das
(bad)
mov
cmps
sbb
aam
fmulp
sub
pop
cmp
push
scas
loope
test
add
xor
adc
cmps
pop
adc
(bad)
outs
loopne
scas
les
arpl
mov
jmp
call
pushf
and
mov
call
push
xor
fdiv
imul
jne
xor
(bad)
xor
loop
mov
sbb
sbb
inc
sar
fld
xchg
ds
fwait
pop
pop
xchg
add
and
or
scas
fstp
nop
repz
xor
addr16
out
mov
push
or
xor
cwde
sbb
out
dec
adc
xchg
mov
lock
(bad)
setae
cs
pop
aaa
push
pushf
ds
dec
mov
push
popf
fisttp
jae
dec
push
jns
mov
dec
pusha
push
lea
xlat
cmp
mov
(bad)
imul
xchg
out
or
out
add
enter
shr
push
sahf
add
fsubr
ror
sahf
mov
cmp
adc
pop
ficomp
inc
mov
adc
lds
cmp
push
sbb
push
call
out
push
sahf
push
clc
or
sar
mov
loop
dec
aaa
pop
test
sub
test
jo
xchg
(bad)
call
iret
popa
imul
out
inc
push
mov
push
push
sbb
cli
dec
sbb
into
lock
ret
push
inc
outs
or
cmp
xchg
cmp
popa
or
sbb
and
cmc
jge
loope
cmp
push
adc
mov
cld
mov
jmp
daa
push
cs
(bad)
mov
clc
dec
or
xchg
in
xor
cwde
js
inc
and
inc
stos
sbb
add
dec
inc
sar
mov
fs
movs
outs
mov
xor
mov
sub
retf
out
cmc
rcl
pusha
fwait
dec
int3
dec
ins
inc
push
adc
push
gs
cmc
lods
es
mov
push
xchg
out
test
es
rol
lods
sub
adc
bound
stc
inc
enter
adc
jnp
aas
xchg
adc
sub
ja
jmp
inc
xlat
adc
mov
push
(bad)
dec
add
sub
inc
xor
adc
fmulp
outs
add
mov
xchg
mov
stc
sub
(bad)
nop
pop
fbld
fwait
icebp
cli
icebp
or
sub
(bad)
fsub
scas
cld
iret
jl
aad
xor
in
inc
xor
icebp
or
push
mov
jno
test
sbb
xchg
out
call
inc
inc
cmp
push
and
in
cmps
adc
stos
cwde
aas
inc
fnstcw
repnz
fmul
fwait
push
or
in
xlat
not
mov
push
mov
and
adc
ds
ins
retf
inc
xchg
mov
movs
mov
add
(bad)
iret
cli
jns
adc
les
mov
sbb
sti
clc
int
icebp
or
mov
mov
fld
adc
das
std
sbb
dec
cmps
xor
cli
pop
hlt
sbb
ret
fwait
sbb
loope
cmp
dec
jmp
cmps
call
or
xor
add
(bad)
jnp
xchg
xchg
enter
movs
mov
mov
aad
shl
adc
stos
or
or
add
add
jbe
xor
inc
sbb
xchg
(bad)
pop
sar
inc
rcr
pop
mov
leave
sahf
(bad)
mov
inc
mov
out
pop
or
adc
in
test
xchg
cmc
mov
cmps
jp
mov
dec
mov
arpl
mov
mov
pushf
mov
outs
and
shr
cmp
loop
call
out
cld
popa
mov
push
popa
and
cmc
inc
mov
jae
pop
xchg
jg
pop
push
jo
popa
stc
fst
stos
xor
into
in
jbe
xchg
adc
adc
jns
mov
(bad)
mov
loope
out
adc
pusha
ss
shl
xor
imul
xchg
mov
int
loope
addr16
lock
ins
mov
mov
(bad)
frstor
es
inc
jecxz
loopne
ror
sahf
scas
repz
xor
cmp
sub
sti
test
add
rol
jo
inc
adc
sub
jno
mov
mov
mov
add
mov
adc
push
push
inc
jb
test
stos
lods
inc
imul
add
pop
inc
retf
cmp
push
mov
sub
jg
jne
xchg
adc
pop
int3
dec
and
out
fisttp
call
std
outs
xchg
mov
sbb
cmps
mov
enter
inc
push
jmp
ret
xor
call
push
in
out
mov
push
fld
mov
cld
loop
mov
out
mov
cwde
shl
pop
test
call
or
mov
(bad)
or
inc
out
ret
jp
lahf
xor
bt
xor
es
or
clc
push
inc
pop
adc
out
mov
out
fstp
ret
push
xor
dec
push
xchg
outs
movs
pop
int3
push
js
out
sub
leave
sub
sub
mov
push
cdq
inc
fisttp
push
aaa
mov
mov
call
push
lods
and
push
add
mov
xchg
test
popa
scas
ins
sub
add
push
adc
cmps
push
mov
fbld
inc
pop
mov
ins
mov
jle
sbb
add
mul
dec
sahf
cld
inc
(bad)
cli
mov
mov
push
dec
add
int
lahf
int3
ss
and
data16
pop
mov
mov
sbb
and
mov
mov
and
or
stos
push
jmp
aam
cmp
inc
stc
cmc
mov
xor
call
loop
nop
js
xor
das
leave
cwde
out
or
jecxz
call
adc
mov
loop
mov
stos
cmc
(bad)
aam
sbb
or
dec
mov
cmps
(bad)
fild
leave
and
jle
sbb
push
sbb
cwde
aad
jecxz
cli
rol
mov
test
xor
mov
push
movs
jmp
mov
icebp
mov
enter
adc
cmp
sbb
or
xchg
sub
lods
inc
mov
jl
jge
movs
(bad)
mov
inc
dec
xchg
or
dec
stos
sub
or
pop
loope
loop
test
mov
xchg
mov
xchg
jge
or
inc
adc
fwait
and
xchg
ret
fld
mov
call
mov
xchg
xor
in
clc
out
ds
bound
(bad)
retf
pop
dec
ins
imul
pop
dec
dec
mov
pushf
(bad)
cwde
pushf
lea
xchg
scas
and
xor
cld
dec
pop
jne
xor
xchg
add
mov
cwde
xlat
cmps
adc
aad
inc
rcr
xchg
pop
rcl
cmps
test
cld
std
retf
pusha
ret
out
les
cmp
mov
dec
popf
lods
add
and
xor
jp
dec
xchg
sub
ror
(bad)
fisub
sbb
jp
mov
sbb
fadd
fisttp
sub
add
and
mov
jmp
jns
xchg
jb
and
jp
in
jns
aas
pop
mov
or
mov
add
mov
mov
push
outs
int3
and
std
jne
xchg
jl
and
sbb
cwde
lock
push
cmp
push
outs
arpl
jmp
jb
pop
cmps
adc
(bad)
and
cmp
int
inc
(bad)
push
pop
adc
mov
pop
sub
lods
sub
cdq
pop
adc
mov
out
jl
mov
mov
jl
fcmovnbe
xchg
fcmovne
push
sbb
jno
std
mov
cmp
adc
push
push
adc
jl
es
retf
push
xor
fld
cmp
pusha
adc
push
or
stos
leave
rol
xchg
pushf
push
adc
adc
and
cmp
add
cli
fs
(bad)
imul
cs
mov
in
jp
iret
dec
cmp
inc
jo
outs
out
add
xchg
lea
test
mov
hlt
pop
dec
bound
adc
dec
jle
les
out
and
push
cmps
std
scas
sub
jle
fsub
ins
push
scas
mov
sbb
cdq
fbld
push
ret
sbb
and
inc
mov
stc
xor
mov
mov
call
mov
adc
sti
iret
add
daa
mov
jo
sbb
dec
mov
jno
std
adc
nop
sub
std
hlt
sub
or
lahf
inc
dec
cmp
jno
jmp
loop
sbb
mov
pop
xor
les
jno
adc
int
push
nop
dec
jmp
xchg
icebp
sar
data16
imul
push
jg
or
adc
fld
aaa
pop
cmp
inc
adc
adc
mov
sbb
dec
mov
es
xchg
movs
sub
ins
sahf
int
and
in
cmp
jmp
lea
call
(bad)
in
ins
sbb
(bad)
mov
dec
movs
mov
mov
mov
imul
pushf
xchg
fidiv
cmc
aad
pop
int
aaa
mov
ss
sbb
xchg
mov
(bad)
outs
add
mov
inc
arpl
sub
sub
pop
xor
push
jge
sbb
inc
jnp
leave
aad
inc
fcomi
les
mov
aam
fs
dec
inc
inc
sbb
ror
push
push
out
imul
movs
push
enter
xchg
mov
sub
repnz
jo
dec
das
inc
retf
shl
inc
dec
adc
pop
xchg
ror
push
hlt
pushf
push
add
jo
mov
pop
(bad)
jae
aas
outs
mov
cld
(bad)
icebp
test
adc
aad
dec
jge
xor
mov
add
and
xchg
(bad)
sahf
into
das
pop
int
fs
mov
int3
adc
ds
ins
fadd
cwde
cli
xchg
sbb
inc
out
(bad)
das
js
sub
cmp
mov
ja
ss
or
pop
xchg
add
outs
div
sbb
nop
pop
pop
lahf
jmp
call
pop
xor
dec
jl
or
xchg
push
fst
pusha
fst
jp
sbb
sti
scas
(bad)
bnd
scas
xor
jae
adc
mov
sub
xlat
ins
inc
add
push
mov
jge
xor
arpl
sub
jge
jno
outs
aam
cli
es
add
loope
dec
pop
loop
xor
ret
xchg
bound
rol
aam
sub
pop
into
out
or
int
cmp
test
daa
pop
cmps
dec
push
retf
outs
mul
or
pop
push
inc
inc
dec
sar
jno
cmp
mov
sub
aam
mov
sahf
add
adc
rcl
cmps
jmp
xchg
mov
sbb
jle
std
inc
fmul
fdivr
(bad)
xchg
pop
loope
pop
popa
pop
daa
pop
jg
dec
fucom
or
dec
cs
pop
mov
ins
outs
cwde
popf
scas
retf
inc
mov
or
push
movs
mov
sbb
je
ret
cmp
pop
adc
push
sti
sar
inc
in
in
dec
push
bound
mul
out
dec
addr16
(bad)
ins
loopne
inc
sbb
sub
lock
or
push
xor
je
xchg
sti
pop
xchg
call
fidiv
leave
aas
cmc
std
mov
jmp
pop
pop
lock
or
xchg
adc
fwait
in
mov
fst
push
jne
add
rcl
imul
in
ret
scas
xor
mov
scas
popf
out
aam
xor
jae
fs
push
adc
dec
xlat
add
add
mov
sar
jno
out
outs
cmp
inc
mov
shl
jmp
sti
hlt
jo
add
xor
adc
push
mov
fsub
jne
stc
mov
shr
cdq
test
popa
leave
retf
stos
fist
xchg
adc
stos
jnp
mov
push
aam
addr16
xor
int
outs
jno
in
push
dec
xor
out
loopne
(bad)
stc
(bad)
xor
fist
cmp
push
xor
sbb
fistp
lods
push
mov
jge
sti
std
sub
(bad)
rcl
repz
inc
cmps
test
aam
movzx
inc
(bad)
fidivr
stc
lods
std
and
sbb
mov
xchg
arpl
dec
add
cdq
popf
mov
inc
and
cld
pop
stos
cmp
out
fbstp
aas
(bad)
imul
adc
pop
ret
cmp
loope
inc
pop
in
test
cmps
push
mov
cs
sti
(bad)
icebp
aas
push
sub
lock
jbe
add
add
test
repz
xchg
movs
ret
mov
push
xchg
js
mov
fsub
cmp
ja
mov
in
add
cmps
ds
push
not
mov
daa
pop
sub
imul
aam
and
call
addr16
dec
xor
js
or
in
into
inc
push
push
sbb
ins
(bad)
out
xor
push
mov
push
mov
daa
cld
xor
test
adc
or
leave
and
jae
and
test
jb
mov
ficomp
inc
dec
mov
cs
mov
out
cmp
div
stos
dec
fisub
into
and
or
clc
jmp
mov
ins
loope
cli
dec
call
repnz
mov
fcomp
mov
sar
mov
cmp
jnp
cmp
sub
cld
test
ins
retf
ins
cmc
sub
ret
out
push
pop
pop
sbb
scas
(bad)
inc
and
out
xor
add
popa
mov
je
adc
add
add
dec
rcl
and
mov
pop
out
sbb
in
in
cmps
(bad)
dec
dec
mov
mov
aas
jg
scas
fcomp
out
ret
ror
imul
cmp
mov
dec
cmp
daa
cmp
mov
fnstsw
mov
outs
popa
sar
scas
aaa
jecxz
push
cld
push
fstp
outs
sub
shr
ss
push
inc
std
pop
les
lds
daa
std
aad
sub
pop
shr
fwait
xchg
xor
movs
ins
and
inc
sub
aaa
jmp
ds
je
push
rep
rol
imul
pop
loope
push
jne
int3
add
mov
xor
ins
pop
cmp
sub
pop
and
inc
mov
rcr
cwde
ficomp
jne
std
das
popa
imul
fs
daa
ret
scas
test
mov
or
fidivr
cmp
sbb
sti
inc
adc
xchg
dec
enter
push
sub
clc
(bad)
call
adc
out
in
shr
daa
inc
outs
mov
(bad)
test
out
leave
mov
jo
ins
clc
add
fnstenv
jmp
out
adc
std
mov
adc
jbe
idiv
sub
test
nop
lods
out
enter
sbb
jl
adc
cmp
lahf
push
xor
jmp
std
push
popf
test
scas
add
xor
sub
adc
pusha
inc
dec
in
stos
xlat
mov
pusha
cmp
adc
sub
cmp
xchg
int3
mov
adc
inc
cmps
sub
fisttp
mov
cs
sub
std
imul
arpl
lock
loope
push
mov
jns
retf
lahf
mov
jg
jle
ret
and
popa
inc
xor
or
out
out
scas
jg
dec
mov
gs
xchg
xchg
daa
xor
mov
dec
call
and
gs
mov
sahf
sahf
dec
loop
fidiv
loop
rcl
icebp
fsub
jl
add
arpl
sub
nop
and
mov
jno
add
push
in
sbb
mov
sub
fdiv
fimul
dec
adc
cli
sub
shl
dec
jae
cmps
fwait
int
js
dec
out
dec
shl
dec
mov
sub
stos
mov
mov
dec
sub
std
test
and
dec
sub
xor
and
xchg
call
(bad)
iret
iret
shr
aas
je
call
cmp
iret
(bad)
jne
lahf
or
adc
mov
(bad)
push
(bad)
jnp
push
mov
rcr
push
dec
jmp
ins
cs
in
mov
dec
sbb
fisubr
sub
adc
xlat
xchg
mov
fld
addr16
(bad)
push
mov
sar
xchg
ret
psubw
push
pop
push
mov
push
mov
test
jg
leave
add
fild
loope
xchg
push
aaa
cld
pusha
(bad)
test
xchg
xchg
adc
adc
repz
iret
xchg
mov
cmps
bound
jg
mov
push
dec
imul
xchg
cmp
aas
nop
(bad)
add
inc
or
repz
call
add
mov
push
mov
push
mov
out
daa
and
daa
fldenv
retf
cs
ss
loopne
out
scas
mov
stc
sbb
dec
dec
test
aas
dec
add
arpl
leave
fadd
jns
or
xchg
(bad)
mov
arpl
xor
mov
frstor
mov
or
(bad)
lds
pusha
adc
push
mov
repnz
cdq
pop
(bad)
loope
sub
xor
sbb
sti
sbb
sbb
xor
(bad)
pop
in
das
add
outs
pop
outs
add
pop
jg
cmp
aam
adc
es
and
push
outs
mov
mul
(bad)
or
ret
pop
outs
lahf
xchg
add
add
push
outs
sar
mov
inc
imul
ss
dec
dec
dec
sar
cwde
outs
into
dec
adc
mov
sbb
and
pop
test
lods
mov
out
test
jae
lods
iret
sbb
jge
stos
mov
fild
shl
cmp
addr16
aam
cmp
lods
popf
and
aad
mov
push
mov
ja
arpl
jnp
dec
push
leave
(bad)
or
bound
das
sub
or
aaa
lods
mov
mov
or
in
and
and
pushf
shl
and
int
jo
xchg
shl
inc
push
rcr
jmp
nop
lea
mov
and
push
pop
sub
sub
jle
xchg
adc
pushf
(bad)
mov
cwde
pop
es
pop
and
(bad)
xchg
pop
arpl
loope
retf
pushf
fisttp
pusha
mov
icebp
dec
inc
pop
mov
xchg
leave
fs
mov
pop
pop
jecxz
outs
movs
mov
out
sbb
push
sti
and
push
cmp
enter
clc
jl
mov
lea
fistp
hlt
fdivr
ret
mov
clc
rol
cli
in
sti
mov
pop
out
es
push
adc
push
(bad)
fist
ficom
movs
fucomip
xchg
mov
xor
xlat
stc
xlat
mov
pop
add
out
call
mov
(bad)
lahf
icebp
lea
sbb
stos
jbe
mov
mov
or
and
dec
push
and
sbb
sbb
loop
pop
addr16
movs
jbe
adc
repz
(bad)
retf
shl
xor
movs
loope
rcl
dec
mov
retf
jmp
daa
ja
jp
mov
scas
inc
sbb
jo
pop
dec
test
dec
aas
push
es
and
jb
mov
lahf
jo
jne
jge
pop
addr16
test
mov
sbb
inc
test
cmp
in
mov
sahf
ror
push
jae
mov
lahf
(bad)
push
(bad)
cmp
nop
or
sub
xor
sbb
sbb
adc
jns
sbb
pop
dec
sub
aad
sbb
mov
mov
loope
hlt
bound
fstp
lea
lds
retf
pop
pop
imul
xchg
xchg
into
xor
lods
gs
or
push
add
fsubr
mov
mov
lds
and
cmp
cld
add
mov
fild
mov
ins
ins
push
mov
mov
loopne
jle
add
(bad)
loop
xchg
gs
push
sbb
inc
mov
fisub
sub
shl
mov
add
sbb
mov
clc
psrlw
hlt
shr
dec
pop
iret
sahf
or
mov
jecxz
inc
pop
cmps
mov
mov
les
aas
ja
in
adc
fsubr
rcr
sbb
xchg
jmp
cs
mov
idiv
(bad)
mov
xor
js
xor
lds
mov
jmp
push
ret
sbb
push
and
mov
adc
mov
sbb
inc
and
jne
out
cmc
ret
enter
loope
shl
out
xor
push
sub
fsubrp
sbb
in
mov
or
cmp
popa
dec
scas
cs
fldcw
dec
movs
sbb
int3
loop
jae
scas
mov
sbb
cwde
or
(bad)
sbb
xor
lods
stos
and
ret
mov
shl
pop
inc
outs
sub
fsubp
xchg
mov
(bad)
fistp
jbe
jmp
test
repnz
and
lods
dec
push
cmp
mov
jb
xor
std
fistp
pop
cmp
(bad)
pop
and
fdivp
jmp
loope
outs
sub
icebp
and
outs
dec
lock
sbb
and
retf
mov
stc
pop
sub
hlt
jle
dec
test
sahf
outs
popf
mov
sub
fdiv
push
scas
cmp
pop
mov
and
je
not
add
fdivr
adc
or
mov
addr16
mov
addr16
mov
cmp
sbb
cmp
jp
cmps
test
pop
inc
xchg
imul
sub
fcom
jno
fnstcw
sub
ds
sti
mov
mov
loop
push
imul
mov
add
out
bound
in
mov
push
mov
aaa
neg
sub
dec
shl
arpl
push
div
aas
mov
inc
int
pop
adc
test
jns
push
pop
pop
dec
mov
add
cwde
pop
mov
xor
jmp
jmp
gs
add
cld
cmp
pusha
das
adc
lahf
(bad)
cli
out
pop
inc
adc
pushf
mov
lods
pop
and
iret
sbb
mov
hlt
out
jl
js
sbb
adc
iret
jp
stos
call
std
loopne
leave
mov
dec
fistp
mov
mov
in
aam
les
(bad)
mul
fwait
in
sbb
loop
(bad)
adc
psubusb
xor
hlt
and
mov
dec
call
xor
and
and
mov
sbb
cmps
leave
popf
sti
mov
add
outs
mov
pushf
addr16
inc
adc
pop
arpl
mov
mov
cmp
leave
mov
jbe
mov
jmp
sub
jle
jnp
cmp
int3
loopne
xlat
jmp
mov
dec
out
loopne
fcom
xchg
ins
mov
mov
into
mov
mov
mov
xor
fst
cdq
in
fnstsw
xchg
xchg
lods
mov
mov
dec
and
add
cwde
dec
cmc
popa
mov
(bad)
fistp
mov
cmp
shr
xchg
fidiv
xchg
fcomp
retf
add
lds
cmp
out
fbld
test
jb
inc
pop
call
sahf
popf
sbb
xor
scas
dec
loopne
cmp
pop
push
push
movd
mov
xchg
or
add
xor
(bad)
pop
adc
xor
cdq
aam
xor
inc
cmc
shr
daa
loope
inc
out
mov
call
sub
mov
dec
adc
cld
repz
mul
lahf
mov
lods
out
int3
sahf
sbb
push
(bad)
and
(bad)
sub
and
fld
add
cdq
repz
lock
ret
jo
mov
and
in
and
adc
dec
fdivr
sub
mov
mov
mov
adc
pop
mov
mov
ret
test
jbe
addr16
push
jl
sbb
je
add
stos
pop
ss
add
push
movs
rdtsc
aam
ds
pop
out
xor
mov
test
mov
in
(bad)
aaa
mov
or
fmul
add
test
ins
push
sbb
shl
cs
xor
repnz
dec
stos
ja
clc
xchg
retf
popa
bound
(bad)
arpl
mov
pop
aas
mov
pushf
mov
mov
cmp
xor
inc
dec
call
outs
xchg
cmc
ss
xor
jmp
push
jae
sbb
or
fisub
ins
or
add
xchg
fucom
mov
scas
sar
adc
add
(bad)
push
sub
call
movs
jbe
push
mov
jne
sub
jmp
daa
nop
inc
popf
mov
sub
xor
adc
test
xor
aaa
aam
ins
push
push
test
xchg
cdq
je
hlt
ss
lahf
scas
movs
push
dec
cmp
jecxz
or
out
aad
loope
retf
rcr
ror
mov
(bad)
loop
and
int
sub
add
(bad)
sahf
imul
cmp
rcl
mov
jle
mov
adc
dec
shl
not
pop
movs
in
call
stos
pop
push
and
push
loope
xor
gs
and
mov
cdq
stos
test
mov
xor
clc
sbb
sbb
mov
and
mov
mov
aad
loope
sub
ins
push
scas
mov
imul
and
pop
xchg
cmp
std
shl
lahf
dec
gs
lods
mov
test
cmp
imul
(bad)
xor
xor
or
and
clc
cs
cmp
popa
(bad)
lods
inc
push
cmp
or
jae
ds
fwait
cdq
outs
sbb
ret
jmp
inc
into
and
xor
sub
xchg
(bad)
repnz
inc
adc
mov
pop
mov
lods
scas
jnp
xor
jb
dec
jne
pop
das
das
ret
add
scas
js
push
inc
or
cmp
cmp
and
shl
or
inc
ret
xor
leave
dec
mov
adc
mov
xchg
jge
sub
or
in
and
stos
out
xchg
call
push
addr16
xchg
(bad)
jmp
jne
xchg
cmc
adc
sbb
(bad)
push
xor
ds
hlt
setae
std
and
jns
aad
std
jmp
xchg
leave
inc
mov
test
rol
cld
and
lods
rcl
xor
and
ins
lea
test
test
shl
adc
mov
stos
jp
push
fnstenv
shl
(bad)
push
push
cmps
daa
mov
test
sub
fisttp
dec
jge
inc
mov
arpl
sub
lock
sub
mov
add
cmc
neg
mov
adc
xchg
xchg
into
repnz
scas
les
adc
xchg
cwde
dec
enter
mov
stos
mov
rol
jne
(bad)
rcl
(bad)
mov
out
add
mov
jae
icebp
ins
(bad)
push
stc
jmp
jae
push
xchg
rcl
cmp
xchg
scas
cmp
push
xor
int
std
jnp
or
adc
sub
fwait
jmp
(bad)
in
loope
push
mov
sbb
stos
pop
and
hlt
leave
adc
outs
loope
popa
and
cwde
aaa
sbb
push
mov
cli
cmps
jbe
cmp
and
xor
sbb
cmp
cs
dec
icebp
mov
stc
cmp
loope
fmul
fsub
add
cmps
popf
sub
push
into
pop
repnz
popf
push
or
or
ror
adc
rcr
pop
dec
adc
jae
pop
test
mov
clc
iret
sub
dec
mov
pop
int
xor
xchg
mov
and
push
retf
jb
loope
leave
adc
imul
xchg
hlt
test
or
mov
ins
adc
pop
arpl
imul
das
cdq
sub
inc
daa
or
xor
les
dec
ins
(bad)
cmc
xor
xor
jne
push
mov
aaa
cmc
stc
mov
cwde
push
ret
sub
sahf
jns
pop
mov
dec
shr
aad
or
jmp
(bad)
jno
push
iret
inc
adc
lock
icebp
or
mov
test
hlt
dec
loopne
and
(bad)
push
and
enter
cwde
or
add
xchg
xchg
dec
jns
shl
(bad)
test
scas
adc
push
(bad)
pop
jmp
(bad)
lock
adc
xor
xchg
or
gs
cmp
mov
les
stc
scas
arpl
mov
das
xchg
fistp
leave
out
test
loop
xor
cwde
jp
sub
jle
push
call
mov
nop
xchg
cdq
lods
hlt
lds
popf
mov
push
std
cmp
xchg
les
inc
les
dec
jmp
ins
scas
and
pop
mov
mov
jmp
sahf
xchg
jmp
fstp
bound
lea
mov
(bad)
sti
neg
cmps
out
xor
fucomi
int
and
pop
ds
scas
bound
leave
push
cwde
jp
stos
scas
scas
xchg
and
call
retf
shr
jmp
mov
cmp
mov
fwait
rol
or
dec
or
test
add
in
cmp
jle
(bad)
xchg
bnd
sahf
jo
sbb
push
xor
dec
ins
data16
fs
inc
mov
xchg
div
rcl
lea
test
data16
mov
sti
pop
mov
ret
sub
add
retf
hlt
test
cmps
add
fstp
mov
cmp
out
push
jecxz
mov
jmp
stos
retf
add
dec
imul
stc
push
add
xor
hlt
add
mov
jp
inc
cwde
xchg
xlat
mov
push
push
mov
aas
jmp
popf
repz
ss
rcl
mov
mov
mov
cmc
pop
out
xor
push
(bad)
jo
sub
dec
add
mov
loope
inc
outs
mov
xchg
call
shr
loope
std
inc
bound
into
cmps
(bad)
mov
add
adc
or
daa
dec
ret
loop
and
pop
pop
and
mov
mov
clc
inc
xchg
dec
push
popa
and
jae
arpl
cmp
cmp
call
mov
and
jmp
push
mov
inc
out
jp
inc
jnp
sub
push
mov
outs
jae
fnstenv
jne
mov
or
or
sti
in
call
add
cs
mov
inc
xchg
(bad)
mov
in
je
ja
fimul
inc
or
imul
sysexit
xor
mov
inc
or
stos
sub
add
ja
push
ret
xchg
inc
cwde
in
ss
rol
push
les
fistp
jmp
out
out
dec
out
call
das
jmp
jge
retf
pop
xchg
scas
and
in
das
or
out
push
movs
adc
xor
pop
xlat
popf
call
hlt
jns
sub
js
(bad)
push
sub
pop
cmp
fisttp
repnz
lods
jno
jb
data16
mov
dec
mov
adc
ficomp
fwait
push
and
cmp
sub
retf
cs
scas
mov
cmp
sbb
jmp
adc
pop
jle
rcl
out
je
inc
ss
and
imul
sbb
push
(bad)
pop
jle
sub
xchg
aas
xor
xchg
xor
push
xor
mov
in
add
push
push
mov
pop
ins
sbb
mov
movs
sar
rcl
pop
gs
frstorw
imul
or
xlat
mov
or
test
cli
mov
cmp
add
jl
push
outs
aad
fs
loopne
fbstp
mov
popa
fs
pop
in
retf
push
push
or
and
sahf
call
clc
mov
jle
lock
inc
jb
dec
pop
lahf
loopne
xchg
push
sub
fcomi
aaa
repnz
ror
push
jno
mul
js
jecxz
cmc
call
and
cmp
pop
lods
in
mov
enter
mov
sub
daa
jg
iret
and
jmp
mov
adc
fwait
xor
test
lds
fsub
mov
pop
cmp
lods
icebp
mov
and
jmp
ja
jnp
jbe
pop
push
cmp
pop
xor
jle
arpl
aaa
jae
loope
inc
call
bound
movs
pushf
jbe
wbinvd
fwait
cld
and
or
int3
sub
adc
movs
std
test
mov
imul
out
cmc
idiv
sub
loope
mov
xlat
outs
and
mov
xchg
jp
add
fdivr
loopne
xchg
ja
push
jge
inc
and
ret
fidivr
mov
cmp
mov
and
cmp
sbb
mov
jnp
sbb
and
mov
aas
sbb
sbb
mov
sbb
mov
xchg
cwde
pop
(bad)
repnz
xchg
mov
push
popa
dec
and
jb
repz
mov
cwde
(bad)
jnp
xor
push
xchg
icebp
jp
add
cwde
xchg
cwde
test
push
cmp
pop
mov
xchg
dec
(bad)
int
ficom
xchg
sbb
cs
call
out
sub
mov
mov
leave
retf
aad
adc
inc
out
adc
push
jmp
in
aad
mov
mov
bound
cmp
mov
sbb
pop
(bad)
mov
dec
cmp
int
cmps
movs
movs
dec
loop
aad
int3
movs
jecxz
test
mov
es
inc
mov
dec
jecxz
cmp
cld
out
lods
ins
and
retf
retf
adc
and
cmp
in
push
cmp
paddusb
cmp
jmp
cmp
xor
adc
xchg
xchg
xchg
stos
shr
jne
scas
dec
mov
(bad)
stos
(bad)
dec
cld
rol
dec
mov
rol
xchg
ret
loope
push
push
das
or
or
cmc
fistp
cmc
xchg
jo
les
ror
xor
adc
sbb
aam
sub
pop
gs
pop
mov
fdiv
push
pushf
(bad)
push
xchg
pop
repz
pop
jbe
mov
adc
jb
loopne
test
jp
mov
mov
cs
push
fnsave
in
inc
aad
push
xor
hlt
and
test
ja
fisttp
data16
mov
jge
pop
popf
jne
(bad)
fsubr
call
jl
pop
push
das
mov
stc
cmp
lods
mov
sbb
repz
mov
retf
sub
fstp
push
aad
cmp
sbb
jo
dec
stc
sbb
jb
imul
lods
ret
push
jge
sub
pop
sub
xor
pop
fdiv
loope
inc
xor
mov
pushf
cwde
fld
mov
mov
or
xor
movs
sbb
xor
or
adc
imul
adc
inc
je
xchg
push
jb
mov
mov
xchg
dec
xchg
mov
stos
in
cmp
clc
jle
shr
das
sbb
jmp
cmps
mov
push
imul
imul
dec
dec
xlat
out
lahf
xor
jno
(bad)
dec
mov
ret
xchg
jns
sbb
std
int
ror
ss
rcr
fdiv
mov
add
ror
aas
in
cli
movs
mov
xor
aam
ret
sbb
dec
inc
push
mov
ret
mov
daa
fdiv
xor
xor
js
xchg
ja
mov
pop
imul
inc
mov
push
aam
mov
cmps
in
(bad)
cmp
dec
cs
cmp
imul
hlt
iret
es
test
jmp
inc
jne
call
push
inc
movs
xchg
pop
mov
in
and
rcl
sbb
dec
or
and
imul
sub
pop
jo
cmp
idiv
popf
sub
xor
pop
xor
in
xchg
aad
or
fwait
cmp
mov
hlt
mov
dec
retf
pop
sbb
push
push
adc
call
aam
iret
movs
mov
adc
fnstsw
sub
mov
imul
es
sbb
fcmovbe
stos
cmp
sbb
or
pop
in
push
fwait
dec
push
nop
lock
push
xchg
fmul
mov
add
pop
and
push
inc
xchg
(bad)
jge
rcr
mov
sub
inc
xchg
push
pop
push
mov
xor
xchg
cwde
retf
out
mov
aaa
inc
cmps
outs
add
mov
xor
fbld
imul
ret
ror
(bad)
int
pop
(bad)
mov
out
cdq
fwait
push
enter
xor
iret
xor
jecxz
push
test
push
sahf
xchg
push
iret
add
mov
add
pop
mov
ret
lea
pushf
fcmovb
loope
add
lods
ret
pop
mov
dec
mov
fnstcw
and
cmp
cmp
push
sbb
lods
push
sub
push
or
les
mov
ja
lods
rol
and
pop
inc
jo
in
dec
mov
push
shl
mov
(bad)
cmp
xor
mov
mov
jmp
arpl
cmp
mov
dec
sub
add
fstp
xchg
adc
jmp
ss
mov
xchg
jle
add
fwait
pop
jmp
mov
stos
lods
fadd
aas
pop
sub
or
jns
ret
arpl
les
pop
jne
push
lea
sbb
fisub
or
cmps
xor
push
jge
mov
sbb
xor
jno
adc
jne
mov
jnp
xchg
jno
mov
jl
adc
retf
test
and
pop
jno
push
call
in
jp
jmp
cmps
cdq
mov
mov
les
pushf
xchg
js
fs
je
sti
and
in
cmp
jg
dec
cmc
push
mov
jae
jle
outs
fadd
adc
daa
sbb
jns
jno
outs
fnsave
rol
loop
add
lock
xchg
imul
retf
out
push
inc
popf
xchg
or
pop
cmp
int3
push
loope
call
push
out
sar
jbe
push
test
cmp
aad
add
sub
adc
cmps
dec
movs
or
jmp
aas
mov
aas
or
pushf
dec
popa
into
add
xchg
dec
sbb
lock
or
loope
push
sub
sub
stos
adc
js
xor
fistp
push
mov
push
xor
xchg
aas
popf
test
dec
ins
cs
pop
cdq
sti
lods
mov
inc
imul
push
call
pushf
(bad)
mov
cmps
ror
sub
jmp
mul
sbb
test
fwait
enter
jo
movs
dec
stc
inc
inc
(bad)
jbe
jp
mov
sub
mov
mov
shr
rol
xchg
jae
data16
fmul
ja
fistp
repnz
outs
jmp
fs
fisubr
xor
movs
pop
lea
stos
sar
retf
jmp
mov
mov
push
or
xchg
dec
jns
in
fnstenv
or
push
inc
pop
popf
and
ret
shr
scas
out
fidivr
fcomp
push
jmp
outs
sbb
not
call
mov
push
jne
(bad)
cmp
ret
daa
mov
add
xor
arpl
mov
fs
daa
cld
add
rol
pop
jg
mov
mov
xor
fs
xor
je
in
sub
test
shl
add
das
call
fs
fisubr
xchg
scas
pop
push
inc
in
stos
outs
ror
in
ret
inc
movs
jp
jo
cmp
xlat
aad
leave
cli
loope
jno
mov
call
lds
cmp
xor
iret
(bad)
stc
mov
jl
jnp
fs
cmp
mov
jns
xlat
sbb
add
add
mov
test
movs
jne
cmc
xor
ss
jo
cli
aas
mov
out
lods
lahf
lahf
and
jne
shl
fnstenv
cmps
je
loope
and
repnz
mov
out
jmp
xlat
xor
mov
pop
jne
retf
push
mov
xchg
push
jmp
mov
wrmsr
movs
ffreep
rol
pop
rol
xchg
mov
xchg
movs
sahf
mov
imul
sbb
xchg
js
and
ins
pop
in
xor
out
inc
cld
or
mov
jbe
add
out
je
sbb
inc
xor
dec
outs
xchg
cmp
jb
outs
dec
out
xor
clc
jns
stos
sbb
sub
cmc
inc
aad
mov
inc
inc
sub
in
cmp
mov
mov
inc
xchg
cld
int
(bad)
icebp
dec
test
add
jecxz
bound
(bad)
add
adc
ins
in
dec
outs
out
jno
fs
ins
nop
in
jbe
aam
pop
jmp
les
int3
(bad)
xor
loope
mov
push
pop
stc
mov
sbb
xor
cmp
mov
mov
cld
cmps
xchg
movs
mov
dec
jbe
inc
rcl
inc
mov
push
jmp
push
mov
adc
pop
aad
dec
jmp
push
cmp
(bad)
adc
jmp
cwde
xchg
mov
and
js
jmp
shl
repnz
and
pusha
test
and
lahf
sbb
add
push
xor
mov
les
sub
inc
je
and
sbb
add
push
inc
and
js
cmp
adc
retf
xchg
sar
popa
and
add
mov
push
xor
xchg
ins
xor
movs
jecxz
adc
(bad)
jne
ret
xchg
cld
and
mov
dec
cmp
lds
sbb
imul
repnz
(bad)
jl
mov
repz
pop
push
and
(bad)
sub
pushf
ds
jg
es
sub
mov
mov
lea
js
add
ret
push
sub
cld
cs
scas
iret
or
or
jne
add
bound
iret
daa
clc
xor
xor
jne
das
jno
arpl
and
test
sub
dec
jns
ret
imul
sbb
scas
fcmovu
loop
mov
ret
jge
ins
xchg
in
(bad)
stos
pop
push
sbb
cmp
test
jo
cmps
cwde
jns
pop
ds
sti
sti
dec
(bad)
fcomp
xchg
cmp
mov
ret
movs
test
dec
mov
push
shr
jmp
aam
enter
inc
dec
sub
mov
sbb
jecxz
clc
sti
cmps
in
or
add
cmp
mov
clc
cmp
mov
popf
sbb
inc
gs
push
std
lods
ror
push
and
pushf
xchg
data16
fisubr
fmul
cdq
inc
pop
dec
xor
add
call
jae
jne
pop
pusha
or
dec
leave
cmp
sub
rcr
dec
or
ret
dec
iret
cmc
sbb
push
or
ficomp
out
push
mov
jns
fs
jg
(bad)
scas
not
xor
pop
pop
sbb
mov
sar
push
repz
adc
xor
pop
sbb
sub
xchg
mov
xor
cs
in
or
cmps
xchg
pop
mov
cmp
aad
xor
clc
push
jbe
mov
cmps
clc
popa
adc
pop
add
in
mov
mov
cld
jle
mov
mov
(bad)
sbb
mov
ss
adc
outs
lods
mov
(bad)
shl
mul
into
inc
adc
mov
aam
fwait
and
mov
mov
push
inc
mov
xor
cmp
add
sbb
inc
sbb
dec
pop
jge
adc
icebp
cdq
or
inc
hlt
les
xor
pushf
mov
adc
out
add
sbb
add
imul
imul
pop
gs
sub
jmp
xor
mov
add
imul
mov
ss
xlat
mov
add
cmps
mov
in
cmp
ss
adc
stc
or
stos
loopne
xchg
frstor
pop
out
popf
(bad)
pop
adc
out
lahf
xchg
stc
cmovg
add
(bad)
sahf
repnz
mov
je
jecxz
scas
push
jmp
inc
retf
ds
repz
cdq
xor
or
aaa
pop
loopne
adc
jmp
stos
sbb
fwait
pop
dec
repz
out
enter
das
shr
fwait
leave
outs
xor
mov
leave
ja
sub
and
int
push
sti
mov
dec
cld
xchg
sub
sub
pop
popf
push
imul
dec
sub
aas
cmp
sbb
adc
mov
scas
mov
dec
adc
retf
jns
push
add
push
leave
retf
or
je
xchg
ret
sbb
lahf
lea
fnclex
inc
out
shl
push
ret
fisttp
aam
out
sub
push
in
adc
(bad)
(bad)
push
dec
fidiv
push
rcr
xor
fcmove
js
jmp
out
sbb
mov
mov
cli
imul
sbb
pop
xlat
bnd
(bad)
test
mov
stos
int
cmps
and
int
adc
pop
sub
aam
push
jno
cmp
clc
pop
xlat
loop
ins
mov
dec
fisubr
sbb
push
xchg
jp
sbb
sub
pop
shl
or
hlt
jne
mov
jg
mov
dec
(bad)
cdq
and
pop
sbb
mov
and
push
adc
ins
pop
jb
fsubr
call
xor
das
(bad)
fs
int3
lods
ret
imul
outs
xor
fs
add
adc
adc
pusha
fs
stc
pop
xchg
popf
jge
test
or
mov
cld
mov
imul
repnz
(bad)
sub
sub
pushf
stc
(bad)
(bad)
jmp
adc
iret
es
fisub
(bad)
das
or
inc
add
(bad)
mov
cmp
cmps
sbb
movs
dec
cdq
stc
jmp
lahf
cs
jo
ucomiss
sti
jmp
jmp
mov
enter
and
mov
add
mov
dec
ss
and
test
(bad)
cmp
mov
push
mov
inc
push
fistp
xchg
adc
rcl
jge
dec
loop
sub
out
iret
(bad)
cmp
jbe
xchg
jle
mov
aad
inc
test
sub
jg
jmp
outs
ins
cmp
pop
leave
inc
ficomp
cmp
sbb
ret
pop
movs
repz
push
clc
xor
or
mov
aam
mov
and
loopne
popf
cli
into
mov
fwait
sub
adc
in
(bad)
jmp
(bad)
fs
retf
mov
mov
push
and
fucomip
add
cli
mov
push
fsubr
jnp
push
add
mov
in
mov
stc
jnp
scas
or
push
fistp
data16
mov
lods
fidiv
inc
shr
repnz
mov
adc
cmp
jnp
aam
add
es
bound
inc
dec
push
adc
(bad)
fs
add
mov
es
pop
xor
add
jmp
dec
cmp
lods
fwait
inc
dec
test
sar
xchg
adc
retf
js
dec
mov
xchg
push
sar
adc
enter
ret
pop
inc
jae
lods
stos
fs
out
mov
sbb
(bad)
xchg
aas
movs
ret
mov
mov
xor
iret
adc
adc
fst
int3
repnz
imul
pop
sbb
push
or
xor
xor
dec
add
add
es
sbb
fmul
xchg
xor
retf
xchg
push
dec
imul
jmp
or
xchg
mov
popf
dec
iret
dec
rcl
inc
stc
sbb
add
jnp
jae
jge
mov
xchg
xor
stos
fdivr
or
aad
call
mov
mov
rol
loopne
cmc
and
pushf
mov
push
xor
jmp
pusha
sub
dec
icebp
cmp
cmp
sub
retf
in
aaa
xor
ja
mov
xchg
inc
ins
dec
dec
ds
rcl
ror
loop
or
cmps
xor
test
sbb
(bad)
outs
std
inc
and
mov
(bad)
retf
mov
aad
jle
inc
retf
inc
push
icebp
jno
cli
mov
xor
fbstp
push
mov
xor
dec
dec
ror
stos
cmp
sub
mov
xor
mov
cmp
sbb
jne
add
adc
dec
fisubr
movs
imul
sbb
idiv
push
fdecstp
sub
jge
sub
js
fadd
das
cmp
mov
mov
jae
inc
repz
mov
cs
cmp
pop
adc
mov
push
ja
in
cwde
xchg
bnd
out
inc
mov
fbld
jae
dec
jno
jl
xchg
fcmovnu
xchg
(bad)
out
movs
sbb
test
jecxz
enter
xlat
xchg
and
add
mov
cli
jg
adc
sbb
cmps
call
outs
fidivr
test
xor
ins
pop
retf
mov
fs
lods
adc
out
adc
mov
inc
or
push
cmp
adc
scas
daa
pushf
in
das
jg
jo
pop
dec
aam
dec
mov
mov
add
fld
xor
test
cmps
test
mov
out
(bad)
push
inc
retf
sahf
mov
in
in
loop
jno
sub
jp
jmp
push
xchg
mov
or
mov
push
das
jns
cmps
add
ds
and
sbb
cwde
aam
loopne
(bad)
pusha
ret
xor
cld
dec
cmc
inc
jmp
jmp
jmp
add
push
movs
popa
dec
and
lods
xor
in
rcr
push
stos
movs
movs
inc
lds
pmaxsw
add
ja
cmp
mov
adc
cmp
pop
mov
adc
popf
jns
sub
pop
test
rol
jp
pop
push
push
arpl
dec
ins
add
popa
icebp
fld
xor
xor
push
das
sbb
adc
xchg
cmp
lods
(bad)
pop
ficom
add
xor
mov
cmps
cmp
pop
out
mov
fild
icebp
xchg
sahf
shl
imul
xchg
or
in
push
cli
and
imul
scas
dec
es
popf
repnz
adc
pop
add
loope
xchg
jns
scas
sub
adc
dec
xor
push
pop
inc
std
push
mov
sub
mov
push
test
mov
fsub
xor
div
inc
add
pop
into
ret
cdq
add
add
or
icebp
pop
loop
cs
ficomp
popf
icebp
test
pop
inc
inc
cmps
pop
mov
pusha
xor
xor
mov
adc
dec
call
pop
mov
out
mov
dec
add
out
add
push
(bad)
enter
lods
test
and
cmp
fcomip
ds
inc
dec
out
aad
icebp
inc
lods
div
jns
stc
mov
mov
or
cld
std
pusha
cdq
pop
scas
add
dec
(bad)
inc
adc
inc
push
mov
jge
std
ins
outs
and
pop
scas
icebp
push
fwait
mov
xchg
add
jae
xchg
mov
(bad)
sub
push
test
sub
lock
dec
pop
mov
inc
add
aaa
icebp
cmc
ja
icebp
aaa
fst
add
mov
dec
popa
jo
pushf
mov
sahf
call
shl
sahf
jo
jne
lahf
arpl
test
mul
inc
add
jg
stc
int
scas
aam
xor
pop
stos
push
int
mov
lahf
int3
stc
sbb
mov
(bad)
retf
xor
push
push
test
call
add
inc
xor
cmp
dec
xor
mov
js
push
xor
inc
shl
repnz
jge
cmp
mov
sbb
push
mov
adc
in
cmp
add
xor
out
inc
push
aas
sub
mov
pop
(bad)
jns
mov
or
or
sbb
call
cwde
xchg
cld
sbb
xor
imul
paddsw
(bad)
pushf
sub
ja
loopne
jae
pop
sahf
sahf
std
outs
stc
les
sbb
mov
mov
push
jbe
cmp
das
inc
mov
scas
inc
test
and
and
push
or
iret
mov
cmp
adc
xchg
outs
cmp
push
xor
mov
push
dec
cmp
je
pop
(bad)
cmp
mov
jb
outs
fsubr
nop
sub
push
not
popf
mov
add
fwait
into
sub
dec
mov
movs
cmp
xchg
rol
lds
xor
test
push
cwde
mov
sbb
add
and
popa
or
sub
inc
in
adc
lods
jecxz
and
daa
push
test
xor
mov
loope
clc
cmc
jp
cwde
std
xor
fbld
ds
cmp
out
xor
sub
lea
js
dec
cmp
sub
dec
push
mov
das
or
cmp
sbb
aas
push
pop
lods
ror
mov
(bad)
fdivr
mov
adc
jae
int3
push
push
jle
jge
fsub
jo
hlt
cld
xor
adc
std
mov
or
inc
and
and
sbb
pushf
dec
movs
sbb
adc
cmp
cmps
scas
pop
iretw
aam
jns
pop
xor
cli
inc
add
aad
sub
xor
mov
fwait
js
cwde
add
adc
mov
lea
fwait
and
adc
pop
xor
pop
mov
mov
or
lahf
pop
ds
dec
jp
leave
not
bound
(bad)
pop
pusha
loop
(bad)
outs
movs
mov
jmp
inc
scas
mov
(bad)
aaa
fucomip
scas
nop
outs
lods
ret
mov
xchg
inc
and
into
rcl
pushf
dec
(bad)
call
jl
dec
or
cli
mov
mov
mov
lods
jp
xlat
pop
and
mov
lock
xchg
sbb
pushf
pop
sbb
xlat
mov
add
add
or
sbb
rol
ret
loop
mov
mov
dec
stc
je
jbe
push
fs
push
call
sbb
stc
pushw
int
shr
pop
and
sbb
ins
mov
or
pop
ins
dec
fdiv
xchg
cmp
ret
dec
movs
das
(bad)
retf
mov
cmp
jmp
scas
pushf
add
ficom
in
mov
inc
into
fcomp
test
rcl
sbb
pop
jmp
jmp
sub
add
and
cmp
jmp
aad
push
xlat
or
xchg
sbb
add
out
xchg
push
jo
inc
sti
sub
cdq
in
jp
test
aad
stos
loope
sahf
jo
lahf
xor
jmp
out
paddb
sub
cs
retfw
jmp
jne
rol
cli
(bad)
cmp
sub
xchg
(bad)
xlat
leave
mov
outs
std
inc
pop
cld
and
add
pop
push
and
push
mov
mov
mov
xchg
call
je
jmp
and
jle
cs
call
xchg
clc
inc
nop
and
mov
outs
xor
(bad)
movs
adc
inc
test
aam
cmps
cmp
pop
shr
sub
mov
jae
ins
sbb
hlt
sbb
and
hlt
sub
data16
mov
xchg
mov
mov
outs
pop
ja
sbb
sbb
push
shr
fs
xchg
jge
push
push
push
xchg
mov
dec
int
pop
adc
sub
ins
aad
push
push
mov
lea
mov
repz
retf
sub
sub
adc
retf
sar
add
enter
and
and
adc
add
mov
push
mov
loopne
and
dec
fcom
pop
mov
inc
call
cmp
sbb
rcl
popa
lods
dec
cmps
sahf
in
test
leave
cmps
aad
movs
fstp
in
mov
push
dec
(bad)
adc
jb
inc
cmp
int3
sbb
xchg
popf
in
fwait
pop
outs
cmps
push
push
ins
ror
mov
sar
xchg
dec
xor
lods
inc
fs
xchg
dec
ret
cmc
jge
cli
addr16
mov
pop
ins
(bad)
mov
(bad)
fld
mov
jo
pop
or
pop
in
scas
cwde
jecxz
cmps
je
call
(bad)
cld
repnz
or
cmp
mov
xor
cld
aas
mov
cli
push
inc
mov
call
out
out
dec
shr
inc
(bad)
jns
cmp
cmp
add
fdiv
in
mov
hlt
fs
inc
imul
xchg
in
in
mov
js
in
loop
pop
fisub
xchg
lods
ins
jbe
repnz
mov
pop
gs
and
das
(bad)
pop
inc
ficomp
mov
sbb
adc
add
scas
out
fsubr
mov
lods
neg
mov
clc
retf
cmp
add
jne
fcmovbe
inc
sbb
adc
or
idiv
push
sub
ss
cli
mov
jmp
sbb
and
dec
xchg
xlat
dec
sub
adc
popa
mov
add
cs
sub
aad
inc
or
jb
or
mov
jae
jo
popa
xor
call
movs
adc
into
lds
pop
rcl
inc
mov
mov
in
inc
test
repz
dec
and
hlt
sub
pop
mov
adc
sub
mov
cmp
ds
add
and
outs
jns
jge
push
cli
repz
aad
imul
in
movs
dec
int
idiv
jne
pop
add
fadd
ds
mov
cs
out
add
dec
adc
mov
push
cs
sbb
fwait
enter
div
jl
sbb
hlt
pop
not
push
xchg
fisubr
mov
xchg
in
rcl
or
shr
icebp
sbb
mov
(bad)
imul
and
push
test
push
add
dec
xchg
inc
movs
and
mov
push
mov
dec
jmp
sbb
pop
aaa
daa
cli
lock
sbb
sbb
jo
pop
das
aas
pop
gs
cmps
fucomp
ja
aad
mov
xchg
nop
mov
sbb
mov
xchg
in
mov
imul
sub
scas
xchg
mov
loopne
ret
dec
(bad)
loop
shr
cmps
adc
test
ja
std
inc
stos
mul
pop
fcmovbe
retf
sub
mov
test
and
(bad)
push
cwde
cmp
inc
jle
mov
in
ret
in
shl
fisub
sbb
jg
cmp
xchg
std
js
mov
retf
push
inc
outs
retf
mov
inc
ficomp
out
imul
lea
and
mov
sub
out
loopne
popa
xchg
jmp
test
and
cwde
test
sar
cmp
push
fcmovnb
gs
sub
sub
(bad)
out
pop
pop
imul
pop
aam
arpl
dec
aad
int3
shl
mov
pop
dec
cmp
adc
(bad)
imul
sbb
(bad)
arpl
outs
test
jg
sbb
push
jp
es
outs
push
mov
mov
paddsw
mov
out
aaa
pop
sub
stos
xlat
sbb
adc
das
mov
mov
call
pop
dec
icebp
and
xchg
mov
int3
outs
lahf
dec
ins
jbe
std
shr
jae
pop
iret
mov
xor
inc
retf
pop
scas
push
mov
rcl
sbb
data16
dec
fdivr
mov
push
jg
or
pushf
fimul
iret
pop
sar
(bad)
pop
inc
loop
adc
or
in
push
push
sbb
dec
clc
push
push
cmp
mov
push
scas
mov
enter
mov
xchg
jle
or
mov
scas
add
fdivr
mov
adc
arpl
sbb
jl
fwait
push
nop
std
stos
and
test
popa
cmp
lea
jne
or
or
loop
popa
and
mov
scas
jno
pop
xor
outs
stos
mov
fwait
mov
sub
stos
xchg
xchg
push
jle
mov
outs
xchg
add
movs
xlat
hlt
push
ja
(bad)
and
dec
dec
pop
adc
pop
xchg
ins
cdq
es
(bad)
gs
sbb
out
outs
xor
push
dec
add
sub
imul
inc
inc
lock
int
and
loope
(bad)
cmp
dec
aam
jo
out
cmp
in
cmp
or
or
sub
popf
push
and
es
mov
ins
ins
repnz
daa
mov
add
imul
cmc
mov
popa
pop
cmp
sub
mov
int
sub
fild
push
xor
bound
dec
fcomi
ins
push
fmul
mov
retf
loope
xchg
mov
push
add
rol
adc
or
mov
ins
movs
push
xor
mov
int3
jb
xor
aad
pop
jmp
mov
popf
pop
mov
cmp
and
repz
daa
jne
test
ret
push
dec
or
cmp
popf
mov
xor
dec
popa
sbb
xchg
xchg
sub
push
add
fadd
lods
inc
mov
jl
or
or
or
xchg
cmp
mov
test
(bad)
shl
arpl
fnsave
shl
pop
sahf
stos
mov
cmp
int
rcr
in
push
push
sub
iret
(bad)
std
dec
dec
dec
push
ficomp
jmp
popf
adc
xchg
sub
inc
mov
push
imul
or
ret
cwde
jecxz
adc
xor
sbb
push
loop
mov
adc
shl
pusha
(bad)
dec
cmc
dec
js
push
dec
and
sub
mov
test
mov
pop
jl
sbb
sub
sbb
mov
xor
xor
cmp
out
test
stos
mov
jno
inc
into
hlt
dec
std
push
jmp
cmp
mov
rcl
sub
push
cmp
daa
into
test
cdq
dec
sbb
scas
sub
out
int3
icebp
xor
or
int
in
mov
sub
xchg
mov
push
mov
arpl
popa
leavew
out
aaa
dec
add
pop
icebp
inc
xchg
jl
test
mov
pop
inc
jecxz
pop
cdq
mov
lods
lock
adc
std
inc
dec
add
ins
inc
leave
leave
out
cwde
in
movs
mov
lahf
mov
dec
pop
fs
sbb
cmp
sub
imul
gs
sub
mov
ins
jo
mov
jp
nop
xor
(bad)
mov
rcl
push
add
xchg
adc
push
test
xchg
stos
and
xchg
arpl
(bad)
pop
int3
aaa
inc
pop
lock
clc
std
and
mov
outs
sub
inc
sbb
sub
or
aaa
or
popf
mov
cmp
ds
mov
inc
aas
xchg
icebp
dec
xchg
adc
sbb
pop
lea
aas
lds
xor
mov
lock
test
retf
iret
pop
loopne
dec
dec
cmp
push
cmps
jge
or
retf
cmps
xor
xchg
into
out
dec
call
sahf
setnp
mov
xor
xchg
jae
xchg
cmp
cmp
stc
mov
or
dec
outs
inc
cmps
xlat
cs
xchg
cld
xchg
out
sub
add
dec
mov
cmp
sbb
and
pop
lods
push
test
sar
fwait
push
fsub
pop
and
mov
loop
fcmovne
jno
jnp
jecxz
retf
xor
je
adc
das
leave
dec
xor
inc
or
mov
ds
sbb
sub
mov
mov
rcl
cli
retf
add
pop
shr
xchg
clc
sbb
test
xor
out
inc
sbb
xlat
and
pop
push
(bad)
or
and
dec
xlat
(bad)
fsub
add
sub
mov
fwait
pop
cmp
sub
ins
ror
dec
mov
icebp
in
mov
(bad)
ficom
daa
dec
mov
dec
cld
push
xchg
(bad)
jns
add
jne
cmp
cs
fwait
adc
imul
jl
adc
sub
cld
mov
pop
movs
or
jl
push
cmp
jp
scas
mov
pop
or
(bad)
icebp
adc
jmp
xchg
test
fxam
std
inc
outs
rol
dec
push
pop
stos
mov
out
ds
cmp
(bad)
jge
and
xlat
pop
dec
clc
icebp
mov
mov
aas
xor
scas
test
pushf
add
jbe
adc
aaa
jne
int3
dec
data16
and
shr
ds
ret
dec
lock
(bad)
jmp
xor
cmps
or
leave
cmp
imul
sar
addr16
out
les
jbe
jge
push
mov
pop
push
sbb
test
enter
int3
sar
sbb
call
or
imul
push
pop
add
stc
cmp
mov
cmp
mov
push
(bad)
sbb
sub
cmp
pushf
aam
das
xchg
fld
cli
and
push
(bad)
mov
retw
daa
cmp
sbb
sti
or
into
pusha
jge
and
and
outs
shr
push
push
bound
or
call
inc
push
add
pop
lods
jns
inc
mov
jl
xor
push
retf
cmps
xchg
mov
xor
jmp
ja
pop
iret
sub
pop
les
pop
push
push
ret
mov
cmps
jo
(bad)
jb
dec
dec
fldenv
lahf
dec
cmps
push
inc
aas
test
in
test
cmp
cli
sar
push
mov
xor
je
cmp
add
sahf
push
les
fwait
xor
sbb
data16
mov
add
adc
fwait
or
or
aad
mov
hlt
hlt
pop
das
jl
out
push
out
mov
imul
test
push
shr
(bad)
outs
fsubrp
lock
lds
or
cmps
ins
push
sub
mov
outs
mov
xchg
ds
pop
inc
icebp
cmp
cmp
mov
fisub
ror
xchg
dec
loopne
and
cwde
repnz
cwde
sbb
mov
mov
retf
lock
push
mov
ret
fiadd
fdiv
cmp
icebp
pop
mov
pop
movs
(bad)
retfw
nop
in
mov
jg
mov
not
jns
test
mov
sete
dec
ret
sbb
stos
adc
stos
cdq
and
push
je
and
pop
xor
pop
cmp
sbb
js
icebp
xor
push
cmp
xchg
aam
dec
xchg
mov
xor
add
xchg
cmp
sub
retf
movs
xchg
je
push
and
into
push
std
aaa
es
loop
and
outs
mov
adc
dec
pop
in
icebp
mov
jo
(bad)
mov
mov
pop
push
ja
imul
das
inc
cmp
lahf
xor
lahf
mov
inc
test
cli
sbb
sbb
shl
fnsave
dec
imul
sbb
leave
inc
ins
cmp
jne
hlt
push
test
mov
xchg
inc
pop
add
icebp
push
jmp
jae
jae
xchg
cmps
lods
cmp
fcomp
int
out
jg
or
fdivr
rcl
add
inc
sub
mov
into
test
ins
js
repnz
push
fbstp
ja
movs
stos
lahf
pop
cmps
push
enter
pop
pop
push
out
clc
in
and
add
jae
mov
fiadd
sub
leave
jmp
iret
out
dec
and
pop
inc
inc
push
xchg
xchg
fiadd
bound
or
push
cmp
cmp
aad
fdivr
push
sbb
in
and
or
jns
pop
push
push
pop
(bad)
mov
mov
jno
mov
jnp
sbb
(bad)
(bad)
jle
call
(bad)
cmps
xchg
repz
xchg
xchg
and
push
mov
(bad)
xchg
sub
leave
jp
mov
add
jecxz
or
jmp
sahf
scas
mov
sub
fild
lahf
xchg
push
pusha
loop
jmp
fadd
xor
jl
ins
(bad)
shl
test
fidiv
mov
clc
(bad)
dec
mov
push
pop
add
dec
xor
xchg
fwait
scas
xor
inc
sti
cmp
xlat
adc
lea
out
sub
out
lods
movs
xor
in
pop
das
mov
push
or
mov
in
push
fsubr
loope
xchg
mov
pop
into
stos
out
add
int3
(bad)
js
mov
adc
ret
stos
mov
dec
sub
xchg
push
mov
jbe
xchg
(bad)
and
sub
cmps
xchg
sbb
ret
aaa
out
popf
xchg
inc
dec
and
mov
sbb
icebp
pop
jmp
shr
cmps
arpl
in
push
adc
fcomip
cmps
sbb
sub
xchg
cli
inc
push
outs
add
rcr
mov
clc
adc
push
retf
out
retf
cmp
sbb
push
mov
lea
les
fisub
and
and
jl
hlt
xor
pop
arpl
cmp
stc
dec
mov
pop
pop
push
push
std
xor
adc
mov
in
mov
xchg
mov
in
mov
jmp
or
or
and
jmp
scas
call
in
dec
and
sub
imul
neg
xor
mov
mov
clc
jle
das
scas
int
(bad)
pushf
out
xchg
das
add
mov
ins
pop
sbb
data16
mov
cmps
mov
cmp
and
push
iret
mov
icebp
int3
pop
lock
jl
mov
inc
xchg
test
jno
add
cmps
mov
cmp
inc
push
push
mov
jmp
enter
leave
pushf
sti
daa
xchg
inc
ror
stc
cmp
inc
mov
das
mov
jbe
cmp
pop
mov
ror
push
mov
rcr
sbb
and
iret
sub
push
fsubr
(bad)
ret
repnz
shl
shr
cli
jge
je
dec
fistp
ss
mov
mov
dec
push
dec
(bad)
imul
call
inc
jl
pusha
and
(bad)
retf
jno
xor
mov
jge
rol
hlt
cs
jnp
arpl
fdivr
and
loope
adc
push
ins
mov
(bad)
idiv
dec
xchg
mov
jg
mov
jae
pop
mov
push
pop
sub
iret
and
popa
mov
into
xchg
or
sub
add
sbb
bound
scas
sbb
jp
inc
and
(bad)
loope
test
outs
inc
cmp
ficomp
nop
mov
jb
sub
and
pushf
xor
cmp
sbb
mov
test
bound
sbb
jp
adc
add
jmp
inc
mov
pushf
push
add
mov
mov
jp
mov
inc
mov
daa
es
sbb
sbb
jns
jle
pop
(bad)
dec
inc
call
retf
lods
xchg
retf
jnp
xor
data16
dec
popf
add
or
dec
gs
mov
aas
icebp
sbb
ror
adc
add
mov
test
and
hlt
lea
sub
enter
dec
mov
into
sub
cli
aad
es
add
inc
jmp
repz
ds
mov
pop
inc
push
mov
in
inc
rcr
inc
movs
cld
pop
test
and
mov
cmps
mov
add
xchg
cs
mov
or
retf
sub
dec
idiv
mov
jne
int
shl
jle
add
cmp
cmp
jo
inc
mov
mov
dec
pop
add
cwde
and
sub
mov
xchg
mov
inc
jb
inc
popf
cmp
pop
xchg
fist
add
int3
retf
mov
inc
jp
jecxz
jno
movs
dec
push
jae
cli
pop
or
out
(bad)
adc
(bad)
xchg
(bad)
fsub
jo
outs
in
and
dec
inc
setb
retf
(bad)
adc
addr16
aad
dec
mov
pop
xchg
in
adc
lock
dec
push
xor
nop
movs
cdq
std
inc
xor
imul
mov
pop
fwait
jo
inc
aam
ins
and
dec
sar
adc
pop
jae
and
imul
push
xor
mov
aad
and
cmc
fwait
pop
jp
hlt
jne
push
add
iret
ret
int
pop
iret
rcl
mov
jle
loope
inc
adc
inc
out
lds
push
in
mov
pop
lea
sti
stc
mov
sbb
fistp
shl
adc
jne
hlt
inc
loopne
push
repnz
sahf
dec
pop
push
sub
icebp
ins
jbe
jg
dec
cmp
test
(bad)
mov
push
or
iret
mov
cmp
add
pop
nop
cmps
movs
fcmovbe
aam
pop
cmp
cld
mov
push
inc
xchg
mov
lahf
scas
push
xchg
inc
imul
pop
js
addr16
imul
ret
outs
(bad)
out
fs
retf
icebp
mov
cmp
mov
inc
rcr
lds
mov
shr
mov
pop
rcr
pop
aaa
ret
es
clc
add
or
test
cmp
bound
iret
adc
mov
mov
imul
out
xchg
jmp
inc
das
sbb
ss
mov
movs
jmp
out
test
xchg
aas
mov
leave
pop
mov
or
cmp
adc
scas
cli
fcomip
(bad)
(bad)
xlat
add
shl
(bad)
mov
push
popa
das
add
shr
xchg
ins
dec
int
test
adc
sbb
push
fcmovnbe
pop
out
dec
sub
fidivr
cli
(bad)
(bad)
or
jno
xchg
fucompp
popf
imul
mov
pop
and
loop
pop
cmp
pop
addr16
cmps
add
bound
pusha
sbb
ds
rcl
shl
ret
or
mov
push
xor
or
sbb
daa
popf
mov
xlat
iret
and
mov
xor
dec
fsub
pushw
or
mov
jns
mov
ror
retf
pop
ret
clc
xor
xor
mov
xchg
xor
and
inc
mov
cmp
cdq
dec
mov
pop
das
mov
scas
aas
jb
dec
inc
cmp
pop
mov
jnp
hlt
sbb
dec
aaa
call
jmp
ret
mov
das
sub
test
inc
call
xchg
outs
pop
mov
stos
cmovne
mov
sbb
sahf
push
pop
or
stos
jle
adc
int3
imul
inc
mov
(bad)
add
add
sbb
rol
add
pushf
sbb
sbb
sbb
scas
push
push
mov
sar
inc
in
ret
(bad)
(bad)
dec
shl
inc
push
adc
jl
adc
shr
(bad)
rol
pop
pop
sahf
addr16
inc
jp
xchg
retf
xchg
mov
adc
jg
inc
jecxz
and
pushf
mov
movs
pop
mov
stos
or
push
cmp
fcmovnb
scas
fwait
pop
loop
pop
mov
inc
cmp
sub
xchg
shr
push
cmp
xchg
test
les
push
cmp
ds
add
jae
shl
mov
in
cdq
pop
mov
jl
mov
lea
stos
test
xor
movs
int
xor
or
fcmovu
cmp
cmp
ds
call
rcr
or
push
push
mov
sbb
adc
push
ret
and
enter
pop
add
cmp
dec
inc
xchg
mov
cwde
popf
xchg
retf
add
jb
enter
and
push
inc
jp
mov
mov
dec
retf
repz
xor
push
cdq
cmc
jbe
leave
enter
addr16
rol
int
enter
or
mov
or
stos
js
imul
adc
movs
add
js
mov
(bad)
sub
stos
lea
jl
fstp
imul
or
aam
pop
addr16
in
stos
lods
fiadd
ja
dec
jbe
sub
dec
aas
fwait
inc
mov
xor
int
ja
ins
mov
std
jbe
pand
loop
retf
and
sar
lock
mov
dec
dec
aad
mov
push
push
leave
xchg
or
cli
xor
(bad)
jno
test
sbb
leave
das
inc
ins
lock
jns
mov
mov
add
add
(bad)
or
test
test
stos
sbb
jl
mul
lock
mov
je
add
dec
gs
push
sbb
scas
pop
inc
sub
dec
xchg
mov
pop
and
out
jmp
ror
add
daa
inc
ins
and
add
bound
jbe
mov
enter
sbb
push
movs
mov
inc
push
push
push
push
pop
sti
aaa
dec
loope
into
aam
mov
lods
test
(bad)
das
dec
dec
icebp
jmp
int3
in
out
pop
push
push
dec
call
stos
loope
sub
add
loopne
cmps
dec
adc
mov
dec
loope
xchg
mov
arpl
cmp
fwait
es
dec
mov
iret
mov
sbb
sub
inc
dec
inc
push
lea
std
jae
aaa
and
mov
pushf
scas
fst
mov
outs
cmps
int3
lahf
pop
cmp
std
sti
scas
jnp
cmp
cmp
jecxz
mov
cld
inc
push
push
inc
imul
hlt
xchg
aam
mov
jp
test
jmp
sbb
mov
js
aaa
call
or
mov
add
add
cmps
cmps
push
retf
shl
mov
clc
mov
mov
inc
mov
ins
dec
mov
adc
push
add
mov
rcl
sub
adc
inc
pop
popf
ja
jae
addr16
out
sub
iret
retf
or
fisttp
mov
stc
dec
mov
sbb
xor
add
push
mov
outs
jecxz
clc
mov
cli
inc
push
ja
lods
ficomp
test
mov
add
cli
mov
mov
cmps
(bad)
pop
repnz
call
ins
pushf
push
and
pop
stos
popa
add
or
pop
ins
mov
int3
les
push
mov
and
fsub
shl
xor
adc
dec
in
push
je
shr
cld
gs
nop
cmp
shl
inc
adc
pop
mov
ficomp
mov
fiadd
mov
popa
test
hlt
mov
(bad)
(bad)
sbb
cwde
test
inc
and
ja
add
repz
mov
test
cmp
sbb
or
add
fst
lahf
jmp
imul
add
test
mov
data16
or
shl
fwait
xor
or
inc
adc
pop
add
out
push
push
daa
lods
inc
(bad)
aas
stos
add
push
(bad)
enter
pop
xchg
sar
mov
cli
inc
or
sub
adc
out
jg
aas
mov
aad
inc
dec
pusha
push
adc
(bad)
push
neg
and
and
sub
mov
test
loope
mov
lods
jecxz
sbb
in
outs
je
(bad)
adc
cdq
push
xor
nop
leave
std
xchg
pop
clc
popf
jae
cmp
xlat
add
mov
and
call
loop
or
mov
add
jmp
outs
nop
adc
cs
cmp
jmp
jmp
sahf
xor
or
(bad)
(bad)
fistp
sbb
jp
pop
xor
out
retf
jns
sub
jae
fild
mov
add
ret
push
adc
outs
es
into
test
push
add
push
xor
cmp
aaa
mov
popf
fidivr
repz
or
push
adc
in
sbb
out
sbb
movs
mov
aas
ret
cmps
sti
push
inc
push
add
jp
and
jl
jnp
and
loope
scas
or
dec
nop
es
fisttp
loope
jle
jl
mov
dec
std
(bad)
cs
es
sbb
test
jle
fcmovnu
sbb
xchg
hlt
mov
push
add
movs
dec
inc
jg
test
mov
adc
adc
dec
push
jns
mov
mov
jp
retf
xchg
ficomp
jne
outs
loope
das
es
(bad)
icebp
and
mov
ja
enter
adc
and
data16
adc
adc
xchg
into
xchg
xor
in
pusha
sub
and
test
xlat
loope
cmp
push
push
ins
shl
xchg
cwde
test
inc
rcl
pop
aas
push
stc
inc
mov
pop
aad
dec
mov
popa
sbb
inc
mov
sub
mov
mov
movs
sahf
and
jl
mov
sub
adc
sbb
jmp
lods
test
pushf
les
cmps
mov
mov
retf
ins
je
dec
cmc
jne
cmp
iret
das
fldln2
scas
cmp
push
jbe
icebp
cmp
(bad)
and
imul
sub
adc
(bad)
xchg
dec
jno
ror
cmp
fwait
in
cmp
pop
imul
and
cmp
loop
mov
div
sub
xchg
pop
pop
or
shl
shr
cmps
sbb
sbb
xlat
loope
leave
cmc
or
sub
shl
sahf
jns
mov
mov
mov
outs
pop
mov
outs
mov
sub
or
pop
inc
inc
ret
imul
dec
arpl
stos
xchg
cmc
push
mov
pop
sbb
gs
jecxz
pop
dec
cmp
(bad)
mov
push
jecxz
jl
add
adc
jb
popf
fs
sbb
stc
sub
(bad)
fs
retf
outs
add
inc
mov
aas
dec
or
cmc
fs
inc
cmps
adc
lea
jbe
std
jecxz
jns
and
lods
dec
xchg
xchg
mov
(bad)
mov
popf
sar
dec
pop
enter
test
les
and
(bad)
pop
clc
push
repz
inc
push
fst
xchg
icebp
inc
fdivp
xchg
mov
daa
adc
xchg
iret
sbb
movs
fld
test
rol
in
(bad)
push
in
addr16
cdq
add
inc
lds
xchg
push
xor
or
out
inc
(bad)
ds
fisttp
push
or
enter
jle
or
cmp
retf
retf
popa
dec
dec
xchg
mov
test
sub
xor
ins
add
cmp
xchg
popa
push
pop
(bad)
pushf
jns
rol
sub
mov
pop
jb
dec
out
jb
call
movs
inc
dec
lea
mov
cmp
in
mov
mov
out
adc
or
push
push
lods
or
cmp
sti
stos
ja
mov
cld
push
data16
fstp
or
xchg
pop
mov
cmp
movsx
cli
out
pop
rol
mov
or
jecxz
jg
aam
out
gs
mov
les
pop
mov
xchg
or
cmp
jae
div
push
xor
aaa
fadd
and
dec
mov
jnp
arpl
xor
daa
cmc
sti
cmps
call
pop
sub
ficomp
stos
je
push
mov
das
and
push
add
imul
xchg
mov
adc
push
arpl
inc
jl
stos
test
or
push
xor
stc
test
es
xchg
test
out
jge
pmaxsw
daa
ret
in
loope
jecxz
jecxz
sub
sbb
xchg
fild
dec
push
mov
(bad)
call
das
dec
std
adc
xchg
fcomp
popa
mov
adc
out
and
pop
into
aaa
sbb
inc
(bad)
mov
mov
push
dec
dec
popf
ja
mov
dec
jns
aaa
pop
call
or
pop
push
push
fisttp
push
jnp
outs
mov
mov
popa
repz
neg
add
test
push
aaa
lods
pop
sub
mov
(bad)
mov
in
xchg
jge
dec
dec
and
cwde
dec
fmul
icebp
sub
mov
xchg
fcom
sub
push
(bad)
lock
sbb
call
out
(bad)
enter
sub
dec
sbb
fstp
pop
adc
mov
push
xchg
in
inc
cmp
ret
call
pop
jnp
ret
les
jecxz
out
or
out
jo
xlat
cmp
fcomp
aad
fadd
pop
test
add
outs
xchg
iret
rcl
lods
jae
mov
add
inc
jo
jle
(bad)
(bad)
in
adc
int
inc
popf
and
mov
(bad)
inc
loop
jns
cdq
in
int3
into
mov
push
retf
pop
jle
sub
ins
pusha
xor
movs
mov
add
or
les
inc
jns
inc
fidivr
and
rol
shr
hlt
mov
cmp
lock
mov
mov
jno
ret
fs
jle
imul
stc
pop
xchg
add
aad
aaa
and
dec
dec
aaa
jg
(bad)
movs
sub
mov
dec
addr16
mov
jecxz
gs
pop
lea
cs
les
cmps
and
sar
dec
pop
test
mov
fsubr
pushf
mov
in
push
add
cmps
sbb
cmp
lods
lahf
loop
fldcw
in
or
pop
out
ffree
ins
fimul
rol
dec
lahf
shl
lock
dec
or
icebp
or
(bad)
jg
mov
xlat
es
push
and
add
std
push
jbe
pop
xchg
xor
sbb
and
mov
stos
adc
add
xor
mov
inc
mov
pop
mov
arpl
fcmovne
mov
iret
call
nop
stc
fdivr
xchg
mov
mov
out
mov
gs
ins
add
cmp
(bad)
out
ins
ror
loope
fidivr
add
fld
das
in
inc
push
pop
mov
dec
xor
les
test
iret
pushf
jge
icebp
(bad)
(bad)
jge
cmps
mov
(bad)
aad
xor
mov
xor
mov
jecxz
or
xor
and
inc
imul
mov
jae
adc
ficom
sbb
stos
pusha
xor
xchg
adc
push
fisubr
in
mov
pop
mov
(bad)
in
(bad)
mov
idiv
mov
outs
sar
lods
sub
icebp
int
cmp
and
aas
fstp
xchg
stc
or
push
jg
lock
cmp
sub
in
mov
inc
inc
sar
add
fsubp
push
inc
jnp
mov
cmc
lea
mov
loop
jnp
enter
sbb
pop
mov
and
jbe
mov
in
std
and
in
std
xor
sbb
shl
dec
mov
stc
mov
cmc
mov
mov
lds
xchg
stc
sub
adc
sbb
(bad)
jl
clc
mov
jecxz
shr
or
and
popa
test
cli
pop
fnstsw
aaa
popf
pushf
retf
and
cmc
test
jp
adc
pop
ins
je
mov
xor
mov
bound
lods
rcl
aad
sbb
mov
aam
fimul
aas
lock
add
inc
mov
or
mov
xor
aam
(bad)
mov
enter
xchg
mov
lods
mov
es
xchg
loop
xchg
(bad)
cmp
push
sbb
sbb
bound
and
mov
mov
stos
out
aad
fucomip
xchg
mov
mov
aaa
call
xor
out
cmp
dec
lea
xchg
mov
inc
mov
loope
jmp
mov
xor
pop
mov
pop
test
dec
dec
mov
int3
or
sub
imul
ss
pusha
in
je
mov
mov
or
mov
add
adc
mov
mov
push
and
inc
mov
cs
mov
fnstcw
pop
inc
out
cmc
(bad)
mov
xor
(bad)
fisttp
push
ds
and
in
es
scas
(bad)
cdq
dec
call
ins
icebp
aad
cmp
sbb
xor
fbstp
push
mov
lds
or
pushf
int
sub
int
mov
jge
icebp
icebp
pop
dec
sbb
add
mov
jg
add
mov
repz
imul
xchg
adc
cdq
xor
(bad)
repz
idiv
or
popf
jnp
mov
xchg
std
(bad)
mov
repnz
sti
in
xor
lods
jns
sar
int3
lods
cmp
into
pusha
retf
inc
out
cmp
dec
hlt
dec
jmp
pusha
cli
test
dec
adc
int3
add
pop
mov
mov
in
dec
xor
jmp
sub
or
pop
test
mov
mov
lahf
out
push
inc
xchg
lods
jmp
jl
mov
out
call
jo
(bad)
push
imul
xchg
pop
add
cwde
shr
in
adc
imul
cmp
or
fist
inc
inc
outs
add
sbb
loope
inc
imul
push
inc
mov
fs
mov
jmp
fbstp
in
scas
(bad)
ss
or
icebp
lods
jo
std
aam
xchg
mov
lea
jecxz
lods
out
mov
dec
xchg
dec
cmp
fs
mov
pop
and
test
mov
or
sbb
mov
and
repz
fst
imul
or
sub
pop
imul
mov
pop
retf
xchg
add
xchg
repz
cmpxchg
pop
inc
xchg
stos
add
adc
adc
popf
hlt
add
xor
retf
sbb
xchg
rcl
push
cli
and
cmps
sti
retf
sar
lea
xor
idiv
push
mov
retf
sub
dec
inc
inc
imul
xchg
lods
les
mov
mov
adc
mov
ja
les
mov
jnp
aad
loop
adc
int3
fcom
in
push
int3
jle
fcmovu
add
aas
(bad)
dec
push
and
push
sti
int3
aam
(bad)
js
sti
mov
push
cld
sub
mov
push
push
cmps
inc
push
ds
mov
mov
xor
callw
push
xchg
push
enter
pop
jp
xchg
call
rcr
adc
sbb
sub
sub
xor
test
aam
xchg
scas
jmp
(bad)
cmp
mov
gs
(bad)
popf
sbb
cmps
mov
lds
repz
mov
dec
shr
sub
jno
mov
jns
cli
pusha
iret
add
dec
in
retf
ret
xor
mov
ins
retf
push
and
jmp
mov
(bad)
sub
adc
pandn
inc
and
xchg
adc
bound
shl
cmp
mov
mov
pop
test
sub
iret
std
daa
push
movs
gs
jno
leave
mov
das
shl
mov
add
imul
pusha
popa
in
mov
popf
call
or
jp
mov
fistp
xor
rep
int3
lock
(bad)
xchg
pushf
movs
or
cmp
mov
je
inc
sahf
inc
sub
cli
add
jp
rol
cmps
in
dec
and
sub
and
js
add
loopne
or
cmp
fisub
cdq
mov
out
adc
mov
sub
mov
push
lahf
sbb
int
adc
mov
pop
mov
(bad)
es
das
mov
clc
ret
fidivr
and
xor
fadd
xchg
xor
loope
push
ss
pop
out
xchg
lock
mov
std
neg
xchg
int3
(bad)
sti
xor
loop
push
sbb
sub
and
xchg
cmc
adc
shr
adc
cmp
pop
mov
fs
in
inc
mov
xchg
mov
in
sub
fwait
icebp
loopne
cwde
stos
outs
xchg
push
jb
mov
xor
mov
cmps
xchg
repnz
cmc
cmp
inc
pop
ins
xchg
push
dec
sub
and
jg
inc
jbe
test
mov
test
and
out
jo
cmp
mov
je
push
std
gs
cld
mov
jg
into
or
iret
inc
jno
addr16
push
je
sub
adc
mov
cld
xchg
inc
mov
adc
mov
shl
std
lock
dec
cmp
mov
jae
(bad)
jns
in
stc
arpl
rol
ins
adc
push
popf
test
(bad)
mov
mov
xchg
enter
fwait
xchg
outs
(bad)
inc
dec
mov
or
mov
cmp
int3
mov
outs
jmp
les
xor
jno
cs
dec
repz
sub
mov
mov
mov
jbe
gs
loope
and
cmp
outs
or
(bad)
fld
mov
xchg
out
cmp
xchg
push
xor
adc
dec
inc
into
(bad)
pusha
enter
in
mov
(bad)
jns
push
push
push
add
(bad)
fisttp
sub
cmp
fsubr
cmp
or
jns
cs
out
xor
ds
scas
and
in
or
mov
fdivr
add
or
aad
push
add
cmp
mov
add
or
mov
mov
pop
lea
sub
cmp
cmps
loop
into
sbb
pop
sub
xchg
xor
xor
xlat
xchg
ret
xor
mov
daa
xchg
cdq
icebp
mov
sbb
xchg
and
cmps
mov
ins
movs
push
dec
clc
stos
loopne
mov
push
xor
mov
inc
and
out
mov
rcr
pop
add
imul
(bad)
jp
out
push
mov
xor
retf
xchg
aam
mov
xor
push
xor
das
jne
push
mov
jb
mov
ja
cmps
loop
adc
stos
pop
pop
xor
lds
scas
xor
cmp
adc
mov
xor
sub
add
sbb
mov
call
inc
es
or
call
or
mov
fwait
mov
sub
ror
ss
push
mov
std
shl
push
test
cdq
sbb
sbb
add
sbb
jmp
pop
clc
jns
cld
jae
cmp
xlat
add
jnp
call
xchg
sub
aas
(bad)
into
mov
clc
in
jno
nop
hlt
xchg
push
nop
cmc
mov
ret
cdq
cmc
imul
fadd
imul
and
cs
sub
inc
sbb
push
mov
push
pushf
jns
call
addr16
or
sbb
sbb
icebp
(bad)
jmp
imul
inc
mov
test
int
jmp
cmp
cmp
outs
cmp
dec
adc
mov
ss
add
ins
push
popa
lods
jae
mov
call
jg
cld
shl
das
dec
repz
fadd
mov
aas
stc
ins
clc
push
or
das
std
push
add
mov
push
push
jmp
lahf
aaa
mov
sahf
ror
les
cli
(bad)
jmp
out
dec
push
mov
adc
xor
call
sahf
nop
jno
addr16
pop
ins
add
mov
and
cmc
jno
xchg
ins
ja
nop
call
or
pop
cmp
xor
and
lahf
daa
push
out
add
sbb
outs
push
fmul
es
jle
(bad)
mov
sbb
and
pop
jmp
mov
mov
call
retf
pusha
cmp
mov
jno
fmul
ficom
mov
pop
test
and
fmul
lods
cmp
data16
pop
jns
sbb
aaa
hlt
lea
lods
add
adc
inc
fwait
push
daa
hlt
cs
ja
push
push
sbb
jp
pop
es
adc
mov
out
into
push
xor
fisubr
bound
dec
scas
xor
in
aad
aaa
and
repnz
xlat
jg
fdivr
cmp
neg
adc
cld
mov
cwde
cmc
cli
mov
test
mov
pop
pop
cmp
and
inc
add
or
inc
cmp
iret
outs
shr
xchg
mov
stos
nop
inc
mov
test
inc
pop
arpl
sub
jmp
ins
fsub
popa
adc
out
xchg
inc
mov
scas
inc
pop
add
arpl
or
or
add
xchg
fdiv
retf
mov
pop
sub
scas
xchg
outs
ja
mov
div
outs
rcl
pause
shr
sahf
mov
repnz
movs
fst
add
(bad)
fist
jnp
mov
mov
jg
pop
or
ds
pusha
xor
ret
int3
sbb
push
data16
cmp
fnstcw
ds
cld
cmp
rcl
and
jg
xor
push
mov
paddsb
hlt
mov
cmc
ret
sbb
jb
add
out
xor
push
mov
pop
or
adc
das
dec
inc
sar
bound
stos
pop
(bad)
or
in
mov
mov
dec
hlt
ja
dec
push
jmp
mov
inc
jle
sbb
je
add
sbb
inc
scas
in
mov
and
cli
adc
dec
adc
adc
(bad)
enter
nop
les
scas
mov
cli
inc
outs
sahf
jp
xchg
(bad)
into
cmp
out
xor
push
imul
scas
lods
out
fld
sbb
out
stos
inc
(bad)
fdiv
repnz
sub
popa
xor
xor
push
sub
push
stos
sbb
cmp
inc
loope
pusha
or
cmp
daa
or
push
stos
inc
scas
ja
pop
cmp
mov
inc
lds
inc
loope
and
mov
ins
test
push
or
xor
and
pop
xor
sti
xchg
scas
fcom
push
pop
inc
cmp
push
or
push
sub
jnp
cwde
pop
push
cmp
lea
icebp
les
mov
push
repnz
loope
push
gs
popa
or
mov
inc
xchg
mov
xchg
popf
push
xchg
sub
mov
(bad)
mov
sbb
daa
mov
inc
lahf
imul
inc
and
cmp
add
cmp
hlt
xor
jmp
mov
xchg
dec
mov
or
sub
lods
sub
mov
cdq
jbe
sub
lds
push
jns
xor
sub
adc
fisttp
mov
sbb
push
cmps
pop
and
(bad)
cmps
sbb
sti
xlat
out
mov
ror
call
xchg
je
enter
cmc
imul
mov
retf
add
adc
daa
sbb
adc
push
mov
das
jbe
cmp
es
scas
xchg
push
cs
cmp
jge
and
fdiv
scas
cld
sti
sbb
loop
fstp
cmp
stos
stos
lahf
add
cmp
xor
scas
out
out
mov
jo
xchg
addr16
js
jecxz
les
dec
imul
scas
jecxz
test
sub
sets
xchg
les
cmp
int
ins
push
and
xchg
pushf
xchg
mov
and
xchg
jmp
jmp
add
call
leave
mov
mov
iret
sub
xchg
repz
dec
mov
mov
sbb
out
lods
sub
ins
jb
xor
mov
lock
adc
xlat
lahf
xchg
and
dec
jns
call
add
(bad)
pop
add
dec
or
sub
mov
xchg
bound
jmp
and
std
push
mov
jl
pop
cs
call
inc
dec
cld
les
dec
in
mov
mov
cmps
sahf
mov
mov
sub
mov
imul
shr
inc
inc
xor
js
ss
call
aad
or
push
push
gs
shl
mov
sub
bnd
sti
mov
jle
loop
mov
nop
cmp
mov
rcr
loopne
icebp
fcom
fwait
xchg
fistp
jl
out
pop
ret
or
adc
cmc
test
and
pop
jle
fisttp
sbb
push
dec
ins
lea
lock
cmp
sub
lds
jns
pop
push
mov
or
scas
cwde
add
stos
in
and
jo
enter
mov
test
rol
ins
je
mov
cwde
or
push
fwait
fwait
test
inc
shl
fisttp
das
out
(bad)
mov
pushf
xor
jge
jg
pop
mov
dec
das
call
inc
dec
jo
push
mov
dec
test
push
adc
cli
pop
or
mov
inc
das
push
int
fs
sbb
or
nop
mov
or
sti
sbb
jno
int
pop
sti
imul
fs
aad
xchg
pcmpeqd
repz
stos
fstp
pushf
das
lock
(bad)
ret
pop
ss
sbb
les
fsubr
(bad)
xlat
jne
iret
xchg
xor
jne
xor
cmps
pop
cmp
adc
int
xor
jmp
and
std
dec
out
loope
add
inc
cmp
jne
xchg
outs
mov
mov
adc
aam
repz
jae
cmp
pop
out
mov
loopne
or
sub
sahf
in
inc
dec
outs
push
getsec
mov
xchg
xchg
outs
dec
mov
add
in
sub
mov
mov
aam
int
xor
mov
out
xchg
cwde
outs
mov
mov
cmp
test
xchg
vmaskmovdqu
jmp
fadd
cmp
stc
mov
fldcw
cmp
add
sbb
fsub
cmp
xor
arpl
call
in
inc
div
jb
xchg
ins
mov
push
dec
jp
fs
cdq
std
inc
jmp
in
cmc
lock
xor
mov
and
xchg
mov
popa
pop
into
inc
jns
gs
dec
stos
adc
pop
fwait
popf
(bad)
(bad)
fild
rcl
pop
xchg
das
pop
push
cmps
loope
inc
pop
mov
xchg
test
popf
push
hlt
push
xor
adc
xchg
sub
or
fadd
inc
leave
pop
or
aam
aas
dec
dec
or
xchg
cld
pusha
sub
pop
or
test
sub
pop
jb
test
retf
into
ss
pop
loopne
dec
(bad)
cmp
nop
sub
lahf
test
xchg
sub
mov
mov
mov
fucomip
(bad)
xor
sub
inc
add
shl
xchg
fdiv
pop
mov
loopne
mov
sbb
pop
ins
scas
cmc
or
xchg
rcr
sti
popa
cmps
sbb
dec
sub
fld
rcr
out
(bad)
cmp
sub
int3
outs
mov
sbb
push
pusha
retf
jno
ret
popa
jmp
mov
mov
shr
lds
(bad)
sbb
aam
ss
and
sub
jle
inc
test
mov
adc
push
inc
(bad)
movs
sub
into
xchg
mov
lahf
(bad)
jl
(bad)
in
inc
call
into
icebp
push
mov
outs
mov
call
std
and
mov
movs
xchg
icebp
sahf
mov
nop
adc
sbb
adc
cwde
(bad)
aad
xor
idiv
out
xchg
pop
ds
das
xchg
lods
xchg
out
movs
mov
arpl
sub
adc
aas
push
sbb
test
jecxz
xor
push
mov
test
mov
push
hlt
sub
inc
aad
or
out
mov
lea
mov
sub
or
mov
ret
cmp
xchg
iret
out
or
jmp
icebp
xchg
std
mov
mov
outs
fs
es
adc
retf
call
test
add
cmp
loope
(bad)
sbb
xor
mov
sub
(bad)
(bad)
xchg
mov
jns
(bad)
ficom
mov
aas
(bad)
jns
jg
adc
test
call
add
jae
mov
shl
or
(bad)
and
pushf
pop
ja
and
or
ins
sub
pop
into
in
inc
ror
push
or
iret
aam
xor
dec
push
mov
dec
test
repz
mov
fidiv
inc
in
inc
jbe
mov
(bad)
das
(bad)
xor
(bad)
in
cmc
mov
stos
cmps
adc
mov
cmc
jle
dec
cs
and
push
mov
and
lahf
or
push
cwde
jp
ret
mov
hlt
mov
jmp
mov
push
(bad)
lock
fcmovbe
sub
push
mov
cmp
popa
xor
push
inc
idiv
aam
loope
add
sar
cmp
lds
cmp
(bad)
dec
adc
repnz
sub
lahf
and
push
xor
popf
xchg
loop
or
inc
outs
add
fsubr
ret
mov
imul
in
xchg
or
xor
cmc
push
or
xchg
mov
or
imul
popa
jmp
lds
add
mov
enter
cld
int3
shr
jnp
out
mov
pop
or
cld
jae
add
cmp
mov
sub
and
inc
sti
sbb
cmps
mov
ror
js
lahf
enter
dec
pop
cdq
mov
call
bound
mov
imul
mov
inc
fsubp
aaa
push
sar
adc
adc
ins
jb
push
test
mov
(bad)
arpl
xchg
mov
mov
fld
lds
pop
fwait
push
dec
sbb
cmps
dec
mov
jae
dec
into
pop
ins
cmp
scas
fdivr
lds
or
xor
dec
or
mov
push
inc
add
mov
retf
mov
stc
ret
icebp
ja
sbb
xor
jmp
push
pop
iret
stos
movs
mov
in
mov
(bad)
imul
shl
pop
jnp
stc
fild
ins
call
xor
aaa
popf
js
test
loopne
cmc
mov
(bad)
dec
pushf
jg
and
pavgw
cmp
into
mov
in
out
push
ret
mov
push
clc
fiadd
or
xchg
fs
add
sbb
push
lea
js
xchg
fisubr
pushf
movs
sbb
jbe
push
dec
in
sub
cmp
pushf
les
int
mov
inc
pop
push
xor
dec
jg
and
pop
outs
call
mov
jns
inc
push
test
pop
xor
das
aaa
mov
push
or
(bad)
mov
adc
inc
sub
jmp
cld
rcl
mov
inc
cmc
and
popf
mov
jmp
ins
jns
and
push
loope
out
ss
cmc
in
mov
push
push
fwait
bound
arpl
int3
pop
push
jae
push
outs
jge
(bad)
jle
mov
dec
imul
mov
and
jbe
xor
mov
inc
and
pop
stos
sub
ror
xchg
ds
mov
(bad)
or
shl
sbb
pop
out
aad
mov
and
add
jp
add
cmp
out
xchg
push
ja
inc
lock
fidiv
sub
xchg
sbb
lahf
test
icebp
mov
jecxz
xchg
cmps
movs
iret
(bad)
push
sub
cmp
mov
ja
jp
pushf
cdq
ds
(bad)
cmp
stc
add
pop
mov
aam
dec
adc
mov
setnp
xor
sub
push
jbe
pop
ret
push
push
pop
push
inc
lods
xchg
cwde
jmp
ins
rol
cmps
add
loope
mov
fisttp
loopne
stos
add
out
js
in
imul
mov
inc
pop
xor
stos
push
mov
lock
pop
jns
jbe
sub
arpl
sti
mov
sub
sub
sub
fmul
push
mov
xchg
es
das
mov
inc
sbb
stc
imul
inc
shl
push
cmp
retf
adc
or
jbe
mov
sub
xor
cli
xlat
pop
adc
jne
sub
cmc
inc
xchg
mov
add
sub
in
ret
shr
rcl
adc
aad
daa
and
add
inc
dec
and
dec
pop
xchg
data16
mov
es
mov
and
sbb
mov
add
xor
test
mov
ins
jo
add
neg
push
loop
or
xchg
add
add
inc
xlat
xor
test
xchg
les
pop
dec
xchg
xchg
fcom
fmul
enter
ror
out
outs
ret
jmp
nop
push
repz
cmp
test
mov
arpl
loop
inc
cmp
ret
adc
jo
out
or
mov
les
pop
jle
xchg
lods
daa
js
lea
out
cmp
in
push
cmp
shl
push
jp
or
adc
test
push
xor
fs
stos
repnz
mov
mov
sti
aam
dec
xchg
and
or
cwde
sub
pushf
push
inc
xor
or
and
popa
lods
mov
scas
in
test
or
fst
stc
adc
(bad)
lahf
and
push
inc
xchg
icebp
jge
ja
mov
or
xchg
cmp
call
jmp
ins
cmp
mov
or
mov
(bad)
xor
mov
dec
or
and
(bad)
mov
xchg
fisttp
mov
xor
push
cmp
mov
jg
scas
xor
push
mov
xchg
leave
mov
mov
push
jge
pop
sbb
sti
cld
cli
xor
xor
cwde
jge
or
icebp
mov
adc
mov
xor
clc
ret
xchg
(bad)
hlt
or
push
inc
add
out
jnp
rol
inc
clc
pushf
add
clc
or
rcr
js
arpl
add
pushf
stos
arpl
mov
add
or
pop
leave
xor
xor
mov
xchg
cld
or
inc
inc
jg
into
xchg
repnz
jo
clc
mov
adc
jp
mov
xchg
jl
cli
(bad)
in
lahf
lds
push
stc
mov
inc
jmp
stos
enter
xor
jge
or
and
hlt
sub
add
mov
or
or
push
adc
inc
mov
rol
ins
xchg
add
or
adc
xchg
stos
mov
test
mov
mov
ror
stos
add
and
xor
adc
push
sbb
ret
push
inc
ins
retf
stc
hlt
mov
mov
dec
cmp
dec
mov
ror
(bad)
pop
std
adc
dec
push
test
pop
inc
xlat
push
dec
and
jo
fisttp
imul
daa
dec
lods
mov
stos
vpmadcsswd
cmp
fisubr
mov
cs
sbb
fmul
sbb
retf
xchg
outs
push
sbb
or
iret
fdivr
cmp
movs
(bad)
je
push
lods
inc
out
dec
and
jmp
mov
mov
xchg
xlat
test
xchg
shl
mov
mov
mov
xor
xlat
sub
sahf
popa
dec
addr16
pushf
push
out
mov
stos
inc
mov
dec
pop
sti
jmp
stos
or
mov
cmp
sub
push
ja
dec
and
jg
dec
xor
and
sbb
or
and
test
ret
inc
mov
pop
add
sbb
inc
jmp
lock
jae
push
jae
mov
or
mov
out
repz
ja
je
and
imul
mov
xchg
sub
jb
pop
ss
dec
ja
push
int
pop
nop
out
lock
jp
cdq
pop
xor
ror
cwde
xor
pop
imul
mov
daa
sub
inc
(bad)
inc
mov
push
pop
daa
dec
add
cmp
loopne
retf
jae
push
out
mov
imul
mov
xor
call
popf
dec
cmps
xchg
mov
sub
pop
call
stc
jl
jl
js
pusha
jg
sub
int
mov
into
sub
jl
(bad)
les
or
xchg
mov
push
xchg
xor
ret
sbb
ss
in
fnsave
retf
or
sahf
mul
push
push
and
mov
jmp
and
fcomp
les
pusha
and
jno
dec
mov
mov
fmul
shr
fadd
aad
shr
aad
loopne
scas
xchg
popa
data16
aas
loop
xchg
inc
jae
int
mov
jno
jge
scas
imul
int3
mov
les
xchg
push
ja
sbb
mov
sub
rcl
cmp
frstor
rcl
pop
mov
add
rcr
das
dec
xchg
js
or
pop
in
mov
fsubr
lahf
sahf
ret
inc
loop
xchg
out
std
cmps
lods
mov
sub
mov
cld
push
mov
out
outs
dec
jae
call
inc
enter
lea
xor
aas
aaa
or
enter
aad
inc
prefetcht0
lahf
retf
jnp
mov
pop
xchg
loop
jcxz
adc
loopne
mov
not
aam
cmp
test
repnz
nop
lahf
cmps
or
lods
jmpw
jecxz
pcmpeqb
jmp
push
pop
xchg
adc
and
addr16
pop
push
in
movs
push
dec
ret
adc
cmp
mov
xor
outs
pushf
push
sbb
scas
popf
or
add
xchg
dec
xor
in
sti
sbb
sbb
push
movs
in
and
pop
add
push
jbe
jge
(bad)
sahf
mov
loope
jnp
push
mov
popf
pusha
mov
inc
pop
push
sub
pop
je
ror
test
ja
cmps
arpl
push
test
outs
outs
and
cmp
in
shl
jecxz
fsubr
xchg
bound
pop
aaa
push
mov
mov
out
or
aaa
stos
ins
lds
loop
fcomp
push
jge
adc
pop
pushf
cmps
inc
fs
icebp
pop
ins
add
push
inc
inc
pusha
std
nop
jne
mov
ja
jp
sbb
mov
scas
shl
push
jecxz
jp
push
stos
cwde
movs
out
outs
jle
sbb
pop
jle
mov
cld
ja
pop
cld
push
enter
test
push
and
push
pop
xor
xor
addr16
push
inc
lea
or
dec
inc
fdiv
stos
clc
cwde
daa
fadd
xor
mov
and
lock
xchg
shr
leave
dec
(bad)
ret
dec
cmc
imul
out
sar
xor
rol
frstor
or
inc
imul
sub
jae
in
out
sbb
sbb
add
jbe
and
fstp
jmp
or
mov
mov
iret
xor
ret
ds
sub
dec
and
mov
xchg
xor
pop
sbb
inc
aaa
cmp
pushf
pushf
dec
xor
sahf
sub
ds
test
stos
mov
out
pop
out
mov
add
js
addr16
fwait
inc
dec
stos
inc
iret
inc
imul
or
fcom
inc
push
call
pop
scas
cmp
mov
leave
mov
lahf
jns
fidiv
cmp
pop
mov
(bad)
sbb
add
inc
fdivr
add
push
sub
sbb
mov
outs
pop
out
mov
sub
mov
add
sahf
adc
mov
cmps
iret
sub
fmul
ins
cmp
outs
jl
fst
jns
push
pop
call
jl
stos
movs
sbb
adc
imul
stos
cs
std
mov
push
std
dec
ret
mov
xchg
loope
outs
test
mov
inc
lahf
cmpps
and
aaa
stos
mov
gs
cmp
scas
(bad)
into
xchg
repz
pop
cdq
pop
rol
aam
adc
xchg
adc
test
(bad)
(bad)
out
aam
xor
test
ror
push
push
mov
mov
std
stos
out
mov
jmp
clc
xchg
je
adc
mov
lods
jb
mov
repz
loop
xchg
repnz
cld
loop
stc
jbe
out
push
push
(bad)
dec
fbld
add
lock
mov
jmp
cmp
or
cmp
jnp
cmps
shl
mov
xchg
cmp
add
icebp
push
or
mov
in
bound
cld
adc
mov
in
or
add
movs
sbb
and
jb
adc
outs
and
push
cwde
gs
and
(bad)
out
call
ror
lods
cmp
mov
cmp
xchg
shl
idiv
or
push
xchg
push
shr
repnz
jmp
pusha
nop
dec
and
xchg
xchg
xchg
push
iret
int3
pop
mov
lods
or
push
push
leave
sub
iret
inc
hlt
mov
ret
xor
inc
je
out
test
cs
ja
sbb
push
mov
int
cmp
mov
sar
push
scas
test
(bad)
sbb
scas
xor
loop
out
mov
int
mov
mov
fwait
das
outs
rcl
xchg
mov
imul
inc
adc
sbb
(bad)
xchg
cli
mov
pop
xor
idiv
xor
ins
pop
test
xlat
cmp
cmc
neg
and
mov
add
xchg
mov
stos
into
fisub
jmp
(bad)
fimul
xor
cmp
jmp
movs
jmp
mov
jmp
int
fimul
in
mov
mov
out
(bad)
or
cmp
cli
rcl
call
or
data16
out
xchg
mov
mov
push
aas
inc
mov
mov
sti
cmps
imul
push
jp
adc
fmul
ins
dec
jmp
rcr
pusha
inc
push
xchg
out
lds
fsubr
ins
add
popf
retf
mov
push
jmp
add
sbb
aas
mov
inc
(bad)
rcr
in
mov
aas
and
add
xchg
fidiv
push
sbb
push
shl
bound
lods
dec
repz
sbb
inc
add
lds
adc
jns
idiv
jae
cmp
pop
gs
aam
retf
ror
jp
test
sub
mov
dec
icebp
mov
push
pop
in
out
call
nop
frstor
inc
aam
test
mov
mov
adc
or
adc
je
push
push
mov
scas
fistp
dec
out
pop
jnp
add
div
add
mov
push
(bad)
xlat
mov
std
in
leave
pop
arpl
xor
dec
cdq
pushf
div
js
aam
lods
mov
sar
xchg
and
gs
syscall
pop
jb
jno
pop
push
mov
mov
retf
scas
jp
leave
pop
imul
loop
or
adc
test
dec
sub
push
jg
outs
cmps
sub
xor
cdq
mov
cmps
mov
hlt
jge
mov
push
out
outs
jle
aam
xor
retf
add
jmp
ja
jle
push
or
mov
test
mov
out
dec
cwde
jmp
adc
sub
loop
ret
pop
cmps
stos
scas
cmp
push
jmp
lods
sbb
dec
mov
pop
add
inc
loope
test
lods
jg
mov
stos
dec
lods
out
jl
jg
inc
out
mov
arpl
mov
mov
lea
pop
mov
inc
mov
sub
xchg
pop
fisttp
xor
bound
inc
push
jp
fwait
test
rcr
scas
stos
fstp
je
pop
inc
enter
inc
jmp
jmp
loopne
xchg
push
rcl
outs
add
xor
test
neg
xor
out
cmp
push
and
xchg
je
push
movs
mov
add
and
sbb
ret
sub
jae
out
outs
repnz
push
xor
fild
stos
int3
mov
test
int3
imul
mov
push
sbb
loope
cld
inc
lock
xchg
xchg
or
dec
jmp
call
pop
shl
in
cmc
loop
je
retf
inc
jg
cmp
arpl
shl
xchg
push
rep
ss
loopne
pop
sub
xchg
inc
inc
add
fdivr
jae
sbb
scas
mov
dec
fidiv
sbb
adc
xor
mov
push
test
jne
mov
movs
fwait
xor
test
call
mul
pop
push
inc
cs
aam
cwde
imul
push
dec
push
stos
mov
jae
push
and
dec
cmp
mov
mov
test
ds
pop
dec
cmp
mov
and
add
push
mov
nop
out
mov
mov
sar
push
xlat
lea
lahf
jbe
popa
inc
cmp
cwde
sub
popa
or
mov
pop
retf
cmp
push
pop
add
rcl
xor
or
cmp
test
jp
sub
pusha
aam
and
dec
call
pop
loop
sbb
imul
sub
sar
cmc
and
mov
or
mov
adc
fnstenv
pop
mov
imul
or
div
or
push
fsubr
cmp
popa
dec
push
outs
adc
sub
cdq
sbb
fist
hlt
iret
sbb
cmp
call
sub
jle
scas
cdq
xchg
cmp
mov
sbb
sbb
xchg
or
jle
jmp
jnp
ror
dec
sbb
rcl
add
sar
das
dec
cmp
add
xchg
push
mov
xchg
dec
mov
sub
int3
xor
mov
imul
adc
push
or
js
or
cmps
outs
xor
pushf
push
test
jae
dec
adc
push
shl
daa
in
inc
add
sti
addr16
imul
jb
lahf
dec
test
dec
fucomip
or
loopne
call
and
je
pop
lods
setge
sbb
popf
sbb
fsubp
stos
loopne
sahf
in
xor
add
mov
fdiv
dec
and
xchg
adc
dec
mov
mov
inc
sbb
sub
and
cmp
cmp
ins
fadd
mov
iret
fiadd
gs
clc
or
outs
test
add
dec
or
adc
mov
ins
jmp
sub
mov
cmp
retf
xchg
(bad)
jbe
jle
xor
mov
sahf
mov
push
mov
xchg
inc
inc
sbb
lods
inc
test
outs
out
push
mov
cmp
ins
ret
add
xchg
xchg
mov
and
ds
or
inc
mov
or
loopne
(bad)
mul
mov
ins
sahf
fisubr
mov
jbe
mov
jmp
adc
and
xor
mov
jp
jle
iret
aad
ss
icebp
test
pusha
sahf
or
outs
mov
push
mov
ins
test
mov
loop
stos
stc
mov
inc
xor
loop
adc
xchg
xor
mov
arpl
push
adc
cmps
test
jo
xchg
out
jle
xchg
cli
inc
popa
xchg
jl
sahf
out
int
xchg
mov
dec
or
jae
cmp
xor
loopne
xchg
dec
mov
and
cmp
or
retf
adc
adc
cmp
or
cwde
cmp
(bad)
outs
in
add
inc
pop
cwde
jmp
add
adc
pop
loop
movzx
sar
inc
mov
xchg
or
jbe
xor
div
xchg
jns
nop
cmp
int3
sbb
mov
push
sub
mov
sbb
cmp
loop
jnp
inc
or
dec
xlat
cmp
adc
retf
add
add
push
loop
mov
inc
fwait
popf
xor
sub
(bad)
outs
xchg
sbb
loope
test
lahf
and
into
int
cmp
sbb
(bad)
mov
xchg
mov
std
out
js
adc
int
movs
mov
jne
xor
push
cmp
xchg
nop
pop
outs
and
lods
iret
pusha
cwde
sub
inc
push
xlat
sbb
mov
mul
adc
push
dec
mov
test
xchg
stc
cmp
jmp
ror
lds
mov
icebp
je
cmps
pop
mov
mov
adc
adc
push
lods
iret
cmp
cmp
sub
add
push
inc
shl
or
add
and
push
test
out
fadd
mov
push
push
push
ins
jmp
xchg
inc
ror
ss
not
imul
mov
pop
cmp
inc
dec
aam
push
adc
and
aas
xchg
inc
adc
add
sub
outs
outs
repnz
xlat
cmp
imul
mov
mov
sbb
fadd
fsubr
leave
dec
and
into
mov
jmp
pop
jp
or
std
sbb
xor
mov
mov
lods
xchg
add
inc
fs
and
lock
cmc
pop
pusha
jecxz
push
add
in
clc
push
jmp
mov
(bad)
ja
dec
xor
popa
imul
mov
cmc
sbb
mov
sbb
aam
test
mov
jl
mov
jbe
test
in
mov
ucomiss
(bad)
movs
mov
aad
outs
ds
fcomi
sahf
cmp
cld
jb
in
retf
cmp
pop
add
and
in
jne
daa
push
add
out
clc
pop
mov
clc
mov
and
add
inc
repz
lahf
inc
and
pop
jmp
js
sahf
loop
rol
sbb
xchg
cli
rcr
pop
push
adc
js
pop
inc
cmp
daa
pushf
(bad)
pop
jg
adc
and
and
adc
loopne
and
loopne
int
push
imul
pop
sub
loope
cli
popf
xor
jecxz
inc
std
mov
or
sti
imul
nop
dec
lods
cmp
or
jge
aaa
mov
sub
gs
addr16
xchg
push
in
sbb
imul
or
mov
xchg
ins
or
in
call
push
and
(bad)
cli
call
or
inc
cwde
retf
push
mov
adc
fmulp
aas
arpl
jl
ss
and
add
je
rcl
imul
mov
and
mov
icebp
out
cld
pop
mov
xchg
cld
sbb
cmp
jmp
add
(bad)
loop
jle
sbb
push
or
mov
or
ficomp
ret
mov
sub
(bad)
out
xor
cdq
fadd
add
arpl
retf
xor
inc
dec
mov
test
mov
and
(bad)
clc
scas
(bad)
lock
mov
pop
jmp
les
xchg
das
xchg
push
mov
aam
iret
adc
je
inc
ins
cmp
xchg
test
sub
mov
pop
dec
addr16
xchg
(bad)
push
mov
inc
dec
adc
mov
jecxz
inc
popf
nop
mov
test
out
xchg
pop
js
jb
push
or
in
lods
cld
enter
xor
int3
pop
cmp
int
push
std
test
lahf
add
outs
mov
movs
jecxz
out
lea
scas
mov
and
arpl
mov
push
lock
in
cwde
cmp
cmp
push
mov
neg
stos
sbb
sar
sub
mov
shl
or
pop
inc
leave
sbb
jns
(bad)
sbb
out
inc
inc
(bad)
jmp
ja
xor
iret
add
ss
fimul
shl
cmp
push
mov
pop
nop
jl
aaa
jae
fisttp
leave
shl
mov
cwde
sar
cmp
ss
mov
or
loopne
cmp
mov
aas
push
push
xchg
mov
mov
xchg
or
repz
shr
(bad)
(bad)
sub
mov
in
add
sti
mov
cmp
cmp
leave
push
leave
(bad)
addr16
cmp
pop
scas
stc
mov
loope
sub
or
add
mov
mov
sbb
and
iret
dec
inc
dec
pop
ret
aad
pop
imul
mov
cwde
lods
and
push
xlat
push
dec
mov
sub
push
dec
mov
cmp
ret
pop
xchg
cmp
or
dec
repz
in
jge
test
add
aad
xchg
add
xchg
xor
sub
int
xchg
jmp
stos
cld
adc
dec
leave
je
ss
pop
cmp
xchg
scas
dec
out
repz
cmp
aas
or
std
mov
mov
mov
cmp
scas
ss
rcl
push
shl
cmps
in
jg
xchg
and
lods
loop
imul
gs
das
outs
pop
mov
fsubr
scas
sub
fcomp
imul
sbb
jnp
call
pop
adc
fist
inc
mov
int3
popf
xlat
mov
ja
jmp
pop
std
push
enter
into
mov
adc
sar
sub
pop
cmc
mov
movs
cdq
jg
call
leave
daa
adc
xchg
mov
cmp
sub
in
cmp
test
add
enter
icebp
inc
xchg
mov
(bad)
mov
scas
test
and
sbb
fwait
add
xor
xchg
cli
or
hlt
cwde
sbb
jns
(bad)
scas
into
xchg
dec
scas
jne
inc
add
ss
cmp
xchg
sahf
outs
inc
fimul
adc
out
push
neg
xchg
or
xor
cld
mov
js
leave
loopne
jg
mov
push
cld
enter
popa
cmc
dec
mov
scas
push
(bad)
movs
iret
adc
add
dec
sbb
je
(bad)
sbb
in
dec
adc
outs
idiv
push
push
int
retf
sub
lds
and
pop
jb
(bad)
fs
dec
into
js
out
or
push
outs
test
mov
inc
sub
mov
ret
(bad)
adc
movs
sbb
pop
mov
mov
std
enter
call
inc
jecxz
jge
rol
add
mov
pushf
pushf
lods
xor
retf
xchg
movhps
inc
ror
mov
(bad)
cmps
movs
xchg
pop
sub
mov
pop
push
ret
pop
inc
enter
dec
loope
mov
ds
lahf
cdq
std
loope
sub
inc
sbb
loop
xor
add
xor
aaa
sub
adc
dec
sub
sbb
ret
push
iret
out
leave
xchg
cmps
jmp
pop
(bad)
mov
jl
gs
jecxz
in
in
nop
jp
sbb
sub
mov
lea
stos
call
ret
mov
pop
jae
dec
jg
es
jl
jo
mov
dec
xor
push
mov
pop
adc
xchg
into
adc
sub
dec
mov
lods
mov
dec
pop
shl
mov
in
shr
aam
sub
add
aas
inc
aas
push
jb
and
cmp
mov
je
sbb
jl
movs
jb
mov
stos
lods
mov
or
adc
sub
or
shl
out
pop
add
push
mov
add
sub
inc
test
mov
mov
ficom
xchg
stos
dec
pop
leave
sub
push
scas
and
bound
inc
sub
push
ss
gs
dec
jnp
push
adc
xchg
out
loope
mov
sub
or
imul
lods
das
hlt
push
aad
xchg
pop
rol
call
daa
fsubr
mov
lods
xlat
frstor
add
add
fiadd
mov
jp
xor
mov
mov
cmp
xchg
(bad)
in
xchg
add
mov
out
lahf
cmps
xlat
cli
mov
fisttp
arpl
push
sbb
arpl
and
ror
scas
dec
jle
and
iret
sub
jg
and
mov
cs
imul
pop
retf
sbb
pop
test
aaa
mov
sub
inc
pushf
xor
and
retf
cmp
or
in
and
mov
adc
fisubr
xor
sbb
push
repz
jbe
movs
imul
or
or
out
adc
sub
push
lods
or
sub
jmp
push
fwait
shl
mov
les
(bad)
cmp
fst
xlat
mov
mov
cmps
loop
xchg
es
cmp
std
inc
mov
dec
sub
(bad)
in
sbb
fs
mov
mov
push
inc
xor
mov
fwait
shr
and
jmp
dec
sbb
mov
dec
rcl
ret
xchg
inc
lea
cmp
jnp
cmp
in
enter
pop
xlat
or
pop
push
adc
mov
iret
idiv
add
hlt
pop
xchg
jle
movs
mov
and
retf
pop
test
out
add
std
inc
sbb
shl
imul
cmp
das
cmp
add
in
and
stos
push
jno
jecxz
rol
popa
fld
inc
dec
mov
mov
test
movs
(bad)
ss
jae
xor
mov
lods
xchg
xor
push
rcr
dec
dec
retf
and
fwait
pop
push
mov
or
stc
and
aaa
ret
out
data16
xchg
rol
jo
xchg
mov
xchg
aaa
cdq
adc
ss
cld
les
pushf
mov
xor
or
mov
mov
scas
cli
add
pop
xchg
aaa
fimul
retf
out
add
nop
inc
cmp
adc
nop
push
and
push
mov
push
je
cmc
sbb
sbb
scas
(bad)
cmp
dec
sub
jg
add
test
frstor
aam
aas
cmps
cmp
cmc
test
outs
out
enter
mov
sbb
inc
adc
aad
je
cmc
xor
pop
retf
jb
cmp
aaa
lods
sbb
enter
inc
cmp
call
sahf
cld
aas
fist
loop
stos
mov
dec
ins
ja
xchg
adc
push
jg
push
jg
into
or
fwait
pusha
add
bnd
or
xchg
lods
ja
shl
daa
fstp
adc
pop
icebp
inc
pushf
out
jle
repnz
push
test
mov
mov
loop
inc
ja
adc
sbb
dec
push
rol
and
inc
or
cli
fnstenv
adc
mov
outs
dec
retf
mov
dec
sbb
popa
dec
ss
pop
jo
cmp
loopne
stos
push
mov
packsswb
ficomp
test
retf
cdq
leave
mov
or
test
sbb
lock
xchg
xchg
lods
sti
xchg
sbb
jne
(bad)
mov
and
pusha
fbld
cmps
fisubr
pop
ins
pop
inc
bound
lock
ret
cld
iret
pop
mov
(bad)
and
add
push
sbb
stos
pop
aam
scas
jns
fyl2x
test
in
jmp
scas
or
dec
sbb
sar
xlat
mov
stos
push
jmp
ds
inc
int3
lods
mov
xor
mov
cli
push
sbb
ret
mov
adc
fisttp
jecxz
ds
ins
les
adc
cmp
pop
ins
adc
mov
shl
xor
lock
mov
mov
xchg
push
loopne
out
sbb
nop
cs
js
inc
dec
lock
dec
ins
aaa
jmp
dec
arpl
lahf
in
push
sbb
nop
mov
push
outs
inc
icebp
addr16
pusha
cmp
das
push
loope
pusha
mov
mov
out
scas
dec
mov
jnp
sub
in
aad
repz
mov
cmp
or
into
jecxz
addr16
sub
pop
jge
ret
pop
adc
sbb
cdq
xor
ja
pop
mov
ret
loope
mov
sbb
loope
lock
repnz
dec
push
mov
mov
jg
pop
cmps
test
xor
lods
xor
hlt
rcl
ror
mov
nop
pusha
retf
or
adc
aas
push
fistp
popf
ror
aad
ds
in
and
sbb
dec
sahf
cmps
cmp
std
mov
mov
mov
movs
and
xchg
pusha
xchg
test
sub
int
retf
std
out
(bad)
sub
(bad)
fmul
jb
jmp
ss
ja
outs
or
and
into
inc
ins
cmp
mov
fdivr
xchg
bound
pop
or
xchg
fld
sbb
mov
mov
popa
sbb
mov
sbb
lods
jns
ins
test
stc
push
inc
jbe
ror
jns
pop
add
push
gs
xchg
(bad)
shl
stos
mov
mov
mov
clc
and
cmp
aaa
pop
pop
mov
jno
or
inc
dec
mov
lahf
mov
jmp
add
inc
dec
mov
cmp
push
hlt
lahf
jnp
sub
lds
iret
add
xor
jmp
and
push
mov
xor
or
loope
sub
outs
fxsave
or
mov
and
dec
rcr
mov
aad
test
mov
adc
and
mov
mov
idiv
adc
jl
inc
jg
pop
sbb
div
(bad)
sbb
pop
adc
jge
dec
pop
mov
bound
imul
fwait
ja
dec
or
sbb
call
out
pusha
push
jmp
pop
jle
ret
xor
pop
icebp
repnz
inc
retf
ror
int3
retf
imul
mov
xchg
mov
inc
mov
gs
sbb
rcr
inc
and
popa
aaa
pop
repz
fisubr
sub
mov
aaa
jne
pop
add
fwait
icebp
hlt
aaa
sbb
xchg
add
sbb
mov
xchg
cdq
push
cmps
or
cmc
mov
jno
mov
push
(bad)
push
fsubr
xor
jns
sub
cli
jns
sbb
add
mov
test
daa
jb
cld
daa
ret
jbe
mov
pop
(bad)
(bad)
fist
shr
push
add
sti
cmp
pusha
sub
xor
in
mov
or
cmps
call
cmps
gs
mov
jp
sub
data16
stos
jg
js
ss
lods
jmp
sub
bound
aad
xor
imul
xchg
fild
or
push
fld
stos
fidiv
adc
push
pop
jge
fiadd
jnp
mov
in
es
outs
loop
outs
pop
sbb
fist
and
mov
stos
stc
cmp
sbb
aaa
jge
sub
push
inc
sub
adc
mov
outs
cmp
jge
adc
mov
(bad)
mov
push
xor
outs
add
push
mov
cmp
cli
js
adc
xchg
stos
dec
pop
dec
jg
stc
outs
lods
in
loop
cmp
mov
lods
hlt
mov
pop
sbb
add
in
dec
sub
push
retf
mov
and
inc
mov
cli
ss
adc
aam
cwde
lods
push
jnp
mov
adc
mov
pop
xor
repz
and
xchg
push
cmp
cwde
xor
repz
sar
mov
jne
hlt
push
div
in
jl
mov
xchg
rcl
add
jb
inc
add
pop
xchg
sti
or
inc
or
jae
out
jo
xor
(bad)
pop
pop
push
sti
cmps
mov
pop
xchg
xchg
cs
je
outs
pop
jmp
in
adc
(bad)
push
stc
ret
pop
jle
outs
bound
dec
jmp
scas
cmp
lahf
clc
xchg
gs
jecxz
jle
xchg
mov
jmp
test
cmp
fild
and
mov
mov
inc
inc
mov
sbb
in
mov
xchg
sar
sub
popf
cwde
mov
xor
sbb
(bad)
xor
cld
ficom
cmp
bound
aaa
sub
adc
xchg
dec
adc
cwde
sub
rcr
pop
(bad)
in
popa
pusha
bound
and
sbb
retf
aam
das
adc
mov
repnz
mov
jo
xor
cmp
dec
lea
pop
dec
loopne
cmps
(bad)
push
mov
dec
mov
shl
dec
mov
sub
push
mov
xchg
adc
push
icebp
jecxz
dec
scas
push
repnz
inc
je
add
adc
cmps
fild
ins
xor
jle
or
inc
xchg
add
push
cdq
pop
dec
inc
stos
int
sar
inc
sbb
pop
iret
movs
(bad)
rcr
stos
fst
call
or
add
jl
xor
cmps
jnp
(bad)
adc
int
imul
and
outs
cwde
jmp
inc
push
out
loope
aad
ds
xchg
adc
cdq
mov
imul
pop
cmp
sar
xchg
add
mov
fsubp
ror
retf
in
enter
nop
mov
push
pop
add
pop
stc
nop
repz
into
xlat
mov
out
jge
sbb
mov
mov
mov
pop
aam
retf
mov
or
test
jne
jecxz
jae
jl
pushf
shl
sub
(bad)
int3
mov
aam
add
mov
ins
push
retf
push
stos
stc
pop
cld
jle
addr16
sub
cmps
data16
mov
bound
add
lahf
pop
add
xchg
in
fmulp
adc
sub
leave
jmp
imul
into
jmp
ins
fcom
pop
mov
jnp
cld
popa
push
fcmovnbe
rcr
movs
movs
dec
dec
iret
fst
call
dec
cdq
jb
dec
xor
out
cs
pop
dec
mov
and
test
js
mov
or
shl
xchg
sub
mov
pop
stos
adc
jmp
arpl
dec
stc
mov
popa
jmp
or
shl
fdivrp
push
xor
adc
int
pop
(bad)
pmaxsw
(bad)
sbb
mov
add
les
(bad)
xor
jo
jb
inc
mov
rcr
outs
fcom
(bad)
cli
add
call
out
lods
pop
xchg
and
xor
dec
xchg
scas
rol
dec
jno
ins
push
data16
jo
mov
xchg
scas
mov
sbb
call
pop
dec
leave
into
jp
cmp
or
lods
sbb
gs
inc
add
mov
(bad)
sbb
push
es
pop
icebp
or
push
outs
sbb
xchg
dec
sub
cwde
loop
inc
mov
add
cld
dec
fimul
mov
inc
cs
js
(bad)
popf
repnz
dec
push
xchg
lds
jge
push
mov
ffree
les
xchg
repz
adc
scas
pop
(bad)
mov
and
outs
pop
dec
jb
movs
mov
sub
ret
fnsave
xchg
jno
cli
xlat
mov
imul
(bad)
loope
inc
push
mov
out
std
mov
daa
(bad)
push
retf
pop
pop
js
movs
and
cs
fs
jg
pop
xchg
sbb
neg
mov
adc
or
xchg
inc
neg
sahf
out
fist
dec
daa
jle
xor
jns
mov
mov
or
les
fstp
sub
loope
stos
and
retf
fs
movs
sub
scas
mov
fist
aam
pop
(bad)
mov
cmps
cli
shl
jmp
push
movs
mov
mov
mov
sbb
fild
push
outs
cmp
mov
idiv
lds
mov
cmp
(bad)
sahf
aas
mov
jae
sti
scas
cmps
stc
mov
stc
and
pop
xor
sbb
dec
sar
pop
sbb
gs
cmc
pop
rcr
stos
sub
in
mov
jg
cmp
mov
push
into
leave
sbb
mov
mov
data16
pop
inc
sub
shr
mov
jl
cmps
push
mov
call
cs
mov
pop
in
or
push
div
(bad)
push
arpl
hlt
test
xchg
jmp
mov
aas
mov
inc
sbb
scas
leave
lods
sub
inc
lods
(bad)
aad
fist
mov
gs
jmp
push
cmp
das
push
mov
push
loope
ucomiss
jns
mov
gs
sbb
mov
inc
push
jno
test
fdiv
inc
bnd
repz
xchg
xlat
aam
clc
and
scas
pop
pop
adc
outs
pop
fisttp
dec
sub
xchg
mov
popf
dec
mov
xchg
out
fs
xchg
inc
retf
cmps
test
stc
mov
leave
(bad)
es
scas
push
mov
push
ja
clc
loopne
push
loopne
dec
inc
iret
cmp
jns
rcl
enter
cmc
aaa
(bad)
shl
push
push
leave
push
pusha
shr
retf
shr
mov
inc
adc
and
adc
mov
cwde
ja
ret
mov
std
mov
sub
jp
xchg
fbld
inc
jno
imul
adc
(bad)
hlt
dec
mov
dec
retf
inc
pop
jg
xor
dec
pop
adc
in
hlt
dec
xor
jmp
lahf
inc
adc
out
xchg
xor
repnz
mov
into
xor
sub
sub
mov
retf
sbb
xchg
xchg
sahf
rcl
lods
xchg
xor
lods
jns
lahf
mov
push
add
sar
adc
push
shl
sbb
sbb
pop
repnz
sbb
mov
rol
(bad)
out
dec
fmul
loop
and
movs
xchg
sub
or
test
jno
pop
mov
(bad)
cli
mov
mov
jg
jo
inc
test
ret
arpl
test
push
rcr
rcr
(bad)
xchg
sub
lods
inc
ja
(bad)
int3
add
loop
(bad)
call
movs
xor
mov
lock
inc
push
aam
pop
or
push
sub
bound
call
movs
pop
pop
out
pop
cmp
aam
mov
mov
jne
xchg
daa
cmp
jbe
jb
in
(bad)
jnp
repz
and
(bad)
in
dec
ficomp
jae
(bad)
cs
pop
pop
(bad)
std
adc
add
xor
dec
pop
mov
sbb
fistp
jno
fisub
hlt
sub
sub
cmp
pop
jb
fild
mov
or
push
repz
push
imul
jl
push
rol
xor
out
ror
or
cmp
mov
jp
call
dec
mov
in
dec
fld
sub
jno
fild
jl
add
xor
aam
jmp
(bad)
shr
call
out
adc
xchg
push
in
xchg
jnp
int
or
and
fsub
jge
jnp
add
xchg
(bad)
popf
imul
mov
pop
(bad)
fcom
push
mov
das
sbb
add
sbb
jecxz
sahf
mov
xchg
inc
xchg
pop
xor
and
repz
and
ror
cmp
jg
sub
call
xor
adc
in
int
fmul
mov
mov
imul
jae
push
nop
mov
test
test
std
and
pop
add
jnp
les
aam
out
int3
fstp
or
movs
outs
push
inc
cmp
nop
xor
mov
out
inc
(bad)
retf
jl
mov
fst
aad
push
loop
test
loope
mov
dec
adc
inc
mov
jns
mov
out
adc
rol
fistp
fstp
mov
xchg
cdq
mov
inc
jge
sti
jg
dec
and
outs
retf
ins
sub
inc
out
les
mov
xchg
adc
lahf
add
loopne
movs
mov
js
repz
in
retf
push
rol
cld
stos
adc
rcr
push
imul
sub
xor
adc
lock
mov
fucom
(bad)
ja
fstp
out
scas
xlat
lds
fistp
ss
mov
pop
adc
shr
mov
xlat
lods
mov
aam
inc
pushf
adc
adc
cmp
dec
popf
std
scas
fdiv
push
mov
sub
push
xor
sub
mov
dec
retf
cmp
inc
test
sbb
mov
jno
push
mov
pop
mov
in
fldenv
mov
(bad)
inc
mov
aad
dec
out
jecxz
mov
mov
jno
cmp
std
ret
inc
sub
mov
outs
fimul
(bad)
mov
in
push
aas
inc
jle
cs
jp
addr16
mov
test
xchg
out
dec
dec
xor
(bad)
ror
js
lahf
ds
retf
das
jo
cmp
test
arpl
mov
inc
lahf
aas
test
xchg
mov
enter
xchg
loope
push
mov
adc
xchg
ficomp
cwde
repnz
inc
xor
push
fcom
dec
out
lods
shl
inc
mov
das
jge
xlat
lods
loop
push
push
(bad)
inc
stos
inc
pop
mov
xor
lds
push
add
sbb
jcxz
ds
cmp
call
test
leave
inc
(bad)
test
push
push
enter
shl
leave
xlat
pop
imul
adc
and
push
sahf
mov
push
call
xchg
(bad)
pop
ficom
pop
repz
repz
and
jno
arpl
lods
mov
hlt
or
movs
fucomip
mov
call
leave
jmp
jmp
mov
in
sub
sub
scas
in
fcom
push
jge
mov
lds
dec
xlat
pop
shl
out
sbb
add
(bad)
int
outs
mov
call
mov
icebp
js
not
pop
sbb
xchg
inc
mov
aam
repz
push
lea
popa
push
rol
inc
ret
jnp
xchg
pop
jmp
in
fcom
in
mov
mov
jmp
fdiv
push
fdivr
xchg
leave
jb
pop
push
sub
and
repz
dec
adc
retf
push
add
push
add
js
inc
ret
out
mov
sbb
in
es
sbb
jo
leave
adc
jno
ds
je
mov
jmp
xchg
(bad)
mov
xchg
add
fucomip
test
mov
ja
repnz
cld
pop
lahf
ficom
test
push
push
aad
sbb
pop
dec
shl
xchg
push
pop
popa
cmp
shl
loope
call
cwde
mov
jmp
leave
pop
fist
out
and
inc
mov
lahf
mov
mov
sbb
into
mov
mov
(bad)
cmp
les
popa
ins
rcl
jg
jmp
mov
ror
scas
dec
xchg
imul
cmp
or
cmp
jecxz
mov
fwait
mov
xchg
pop
movs
iret
loopne
sub
and
rcl
test
xor
sahf
sub
jg
and
pushf
gs
lods
jl
add
push
and
mov
cmps
mov
stc
lahf
jmp
sbb
cmp
iret
das
stc
pop
sbb
mov
sbb
pusha
mov
mov
scas
lds
dec
xor
jg
gs
callw
(bad)
mov
daa
mov
lods
ins
jl
leave
lahf
adc
sub
dec
ret
pusha
dec
call
and
fdivr
add
gs
xorps
push
ins
cmp
xor
test
shr
and
mov
push
clc
aas
sub
or
cmp
scas
mov
scas
hlt
bound
adc
jp
lahf
add
add
call
das
cmps
enter
xchg
imul
mov
fcomp
pop
jg
inc
mov
pop
dec
shr
adc
jo
mov
mov
jo
xor
es
inc
lods
mov
fisttp
and
adc
je
ins
mov
add
test
sub
enter
mov
call
in
cli
popf
mov
stos
ss
popf
inc
xchg
stos
sub
lods
mov
ret
xchg
mov
pop
and
clc
dec
test
sub
repnz
neg
mov
mov
dec
dec
imul
jge
aas
mov
jnp
loope
cmp
add
mov
pop
sahf
dec
out
sub
mov
push
test
es
mov
ret
add
sti
xor
cmc
popa
mov
cmc
out
jae
xor
test
push
xor
retf
xchg
push
loop
test
call
mov
hlt
ds
test
mov
sub
add
data16
sbb
cmp
xor
cmp
jne
push
and
shl
data16
and
xchg
clc
xor
test
pop
fsub
div
jg
sub
mov
stos
mov
(bad)
movs
pusha
daa
add
out
and
ins
push
jp
jg
mov
call
sbb
sahf
call
adc
xor
aam
inc
mov
iret
aas
dec
pop
std
mov
pop
mov
adc
scas
add
mov
jmp
adc
xchg
ins
fild
lahf
add
mov
lods
ins
and
or
sti
ins
inc
pop
cmc
dec
mov
mov
push
adc
sbb
mov
lods
push
fst
cmp
gs
mov
test
jae
retf
cmp
hlt
and
and
imul
sub
shl
push
pop
cmp
xchg
mov
daa
stos
ss
mov
sbb
or
movs
sub
push
stos
leave
inc
push
ins
out
inc
in
fucom
push
imul
mov
or
mov
leave
xchg
pop
dec
dec
and
dec
ror
cmp
icebp
loope
sub
xchg
adc
loop
daa
repz
pushf
lods
mov
(bad)
cmp
or
nop
sbb
cmp
in
fwait
and
shl
push
aam
out
in
shl
stos
jno
jns
dec
push
ins
int
cmp
xchg
mov
sbb
and
jge
push
jmp
sub
fisttp
scas
bound
outs
retf
jno
jl
(bad)
pop
(bad)
not
push
ror
mov
push
jmp
or
mov
pop
inc
pop
push
push
ins
fadd
lahf
lods
mov
retf
dec
pop
rcr
push
mov
int
(bad)
push
out
and
xchg
lock
leave
arpl
sbb
rcl
call
mov
sub
addr16
out
int
outs
add
cmps
cld
inc
push
test
sub
xlat
in
outs
cmp
int
dec
add
lods
add
cmp
loopne
movs
jmp
jns
aam
adc
(bad)
std
xchg
adc
int
add
addr16
push
clc
js
add
mov
and
inc
mov
mov
inc
cmps
in
push
aam
jbe
adc
adc
inc
scas
inc
fcom
push
jp
das
xchg
xchg
cdq
add
push
shl
rcr
(bad)
and
cmp
or
mov
or
(bad)
scas
test
out
mov
sub
test
jnp
ror
push
stc
(bad)
(bad)
xchg
(bad)
out
dec
add
pop
lds
add
(bad)
cmp
xor
inc
aaa
jno
mov
push
clc
movs
ins
mov
scas
leave
aam
(bad)
neg
sbb
bnd
shr
and
and
ja
xor
inc
scas
xor
inc
shl
ja
addr16
es
push
mov
pop
cs
arpl
xor
xor
sbb
(bad)
aam
mov
out
cmp
push
test
mov
js
cmp
loope
es
rol
in
aaa
pop
push
and
outs
sbb
ficomp
push
sbb
(bad)
sbb
jae
cmps
jle
inc
and
(bad)
jmp
aad
fwait
in
std
dec
dec
and
je
das
fidivr
cmp
and
xor
jge
lods
jns
nop
push
jae
cwde
push
mov
mov
out
add
cmp
fbld
mul
mov
mov
repnz
xor
js
cmps
mov
xchg
fucomi
neg
mov
sbb
push
mov
retf
jg
fdiv
lea
sbb
js
loopne
xor
add
xchg
inc
arpl
mov
pop
pusha
into
ds
cmp
sub
fisubr
lds
pop
sbb
xor
xchg
jg
mov
mov
xchg
icebp
aad
ret
jno
push
mov
mov
stos
pop
sub
xlat
out
or
xchg
in
mov
push
mov
inc
dec
daa
mov
inc
jl
call
jmp
(bad)
arpl
pop
jle
idiv
or
push
jp
aaa
pop
add
mov
mov
dec
aaa
sar
into
jb
(bad)
js
jno
cld
in
and
(bad)
je
icebp
in
shr
mov
jmp
aam
jecxz
cs
ret
jp
lds
xchg
sub
jg
mov
mov
add
push
fwait
sbb
sub
nop
push
or
jno
and
xor
mov
fnstenv
add
sub
push
fidiv
and
push
add
icebp
mov
or
adc
bound
jge
leave
dec
xlat
dec
xchg
rol
or
fmul
std
mov
sti
addr16
jle
mov
sub
mov
cmp
jno
push
push
gs
sbb
retf
dec
lsl
push
sbb
loope
cmovg
jbe
fwait
popf
mov
ins
std
and
call
mov
fmul
daa
mov
add
cs
dec
mov
test
jnp
or
jb
mov
popa
cmps
mov
mov
pop
sahf
dec
shr
dec
mov
movs
fdivp
jecxz
stc
pushf
cmp
jmp
icebp
inc
xchg
jno
add
jns
out
inc
mov
hlt
rcr
sub
gs
call
std
mov
push
mov
les
addr16
iret
stc
clc
push
dec
popf
gs
stos
mov
cdq
sahf
arpl
(bad)
int
icebp
mov
test
adc
retf
push
in
pop
loopne
dec
mov
rcr
popf
cmp
jno
retf
jmp
popa
cmps
nop
lods
jo
in
mov
bound
pop
daa
cdq
test
test
inc
nop
xor
out
add
lods
outs
rcr
aas
sbb
(bad)
mov
div
cmps
arpl
aaa
cmp
push
mov
mov
cmp
jp
setle
and
adc
ja
add
fcom
loope
mov
int3
pop
push
scas
sub
mov
dec
mov
push
cmps
jb
mov
(bad)
mov
jge
push
loope
rol
jo
mov
mov
push
es
std
mov
(bad)
pop
add
pusha
or
xor
mov
rol
iret
nop
xchg
xchg
neg
out
jmp
in
xchg
ins
add
repnz
not
or
cmp
lods
jbe
data16
add
adc
push
cmp
test
fiadd
stos
xor
and
imul
fcomp
adc
ffreep
inc
loopne
push
xor
dec
xor
pop
push
mov
cmp
xor
sbb
mov
jae
sub
mov
test
movs
adc
pop
xchg
(bad)
cmc
fist
adc
mov
mov
pop
jo
std
adc
push
cmp
das
and
sub
sbb
sub
cwde
or
cmps
dec
into
mov
fisub
mov
sbb
mov
arpl
mov
and
sub
dec
sbb
jo
xchg
mov
mov
inc
sbb
fs
js
(bad)
ds
(bad)
outs
into
sbb
xchg
aad
sbb
sbb
aaa
jmp
shl
mov
ss
repnz
cwde
sub
mov
icebp
rdmsr
add
push
ins
and
or
les
push
dec
or
sub
lock
sub
cmps
pop
cdq
mov
repnz
mov
xchg
fnstsw
and
ret
add
jo
ja
out
push
das
ds
out
push
movs
test
arpl
mov
in
pusha
jmp
cmp
mov
pusha
pop
cmp
adc
mov
pushf
ud1
or
call
jmp
fdivr
mov
cs
jle
jb
sbb
rcr
jl
pop
push
cmp
outs
popa
jg
ss
call
test
mov
pop
mov
sar
sub
enter
cwde
lahf
adc
mov
dec
lock
xor
stc
mov
int3
in
scas
dec
imul
sub
scas
mov
(bad)
scas
pop
mov
test
popa
mov
push
jge
addr16
lods
pop
ja
mov
ins
lods
in
or
mov
lea
inc
or
push
cli
sub
fistp
jae
mov
sub
pop
cmp
jmp
push
and
cmp
out
rcl
sbb
ss
dec
jae
fs
push
hlt
xchg
popa
div
ficom
fwait
pushf
jg
push
test
pushf
call
test
cmps
pop
push
jge
out
jae
xchg
imul
dec
sub
fisub
add
adc
mov
cld
test
add
inc
js
adc
add
cdq
mov
add
repnz
hlt
popa
mov
out
rol
or
clc
push
add
or
pushf
xor
mov
repz
pop
dec
gs
add
sub
mul
add
fmul
neg
shl
add
jle
pop
jns
out
into
adc
pop
jmp
js
pop
pop
or
xchg
sbb
sbb
(bad)
loop
inc
std
xchg
and
xor
xor
jg
fistp
stos
mov
std
jge
jo
add
test
jb
scas
and
(bad)
movs
in
add
jp
int
movs
ror
dec
mov
mov
fwait
xchg
mov
add
pop
mov
shr
mov
lods
imul
pop
pop
in
mov
jo
xor
jg
cmp
in
daa
and
cmp
jno
mov
fwait
leave
ins
call
les
adc
or
nop
cmp
shl
mov
jge
lods
and
xlat
push
test
shr
loopne
sbb
add
je
out
mov
pushf
sar
mov
push
mov
or
pop
fst
hlt
inc
mov
neg
sahf
push
push
xchg
idiv
out
test
imul
jno
mov
xchg
inc
inc
shl
pop
cmp
je
adc
mov
lahf
cmps
pop
xchg
data16
xchg
fisttp
cmp
mov
in
xor
push
scas
dec
call
loopne
je
add
test
sbb
mov
jmp
add
in
pop
imul
(bad)
jmp
pushf
push
pop
adc
inc
outs
pop
popf
xchg
out
sub
xchg
mov
cdq
jbe
iret
addr16
jg
cmp
or
adc
push
out
xchg
jo
test
inc
mov
stos
fcomp
leave
lods
and
lock
inc
ficomp
xor
or
push
iret
push
stc
mov
in
pop
cmp
xor
mov
inc
fsub
outs
ret
iret
cwde
in
or
or
movs
jp
shl
lods
sbb
sub
jno
add
movs
stos
mov
jb
sbb
dec
mov
cmp
mov
xor
(bad)
bound
ret
mov
not
fwait
push
mov
push
mov
mov
jo
neg
shl
fisubr
stos
pop
mov
jmp
mov
ds
in
pop
clc
ins
xchg
das
sbb
(bad)
mov
out
mov
sub
hlt
jae
mov
adc
in
pop
shl
mov
sub
aam
outs
dec
sbb
es
sbb
repz
or
enter
sahf
out
sbb
nop
push
lahf
repnz
frstor
mov
(bad)
cmp
out
inc
mov
push
fs
xchg
and
pop
imul
addr16
(bad)
in
rcr
sub
mov
ss
cli
push
sbb
inc
jmp
mov
fnstsw
popf
or
adc
cmp
jl
out
cli
aam
xor
(bad)
ror
or
in
cmc
sbb
xor
and
jle
cwde
movs
mov
ins
add
fmul
fs
sub
in
scas
jmp
xchg
xor
mov
test
mov
out
mov
mov
ja
leave
dec
div
scas
adc
cwde
cwde
mov
clc
inc
adc
push
in
add
dec
jmp
pop
divss
fmul
daa
lahf
icebp
add
(bad)
jnp
mov
fldenv
sti
mov
stc
dec
call
jmp
xor
scas
out
lock
push
pop
dec
(bad)
push
mov
push
jmp
icebp
or
mov
add
xchg
xor
jns
push
push
aam
aaa
ins
sbb
in
sbb
repnz
sbb
test
outs
or
retf
jecxz
sar
push
add
mov
loopne
(bad)
sub
add
pop
mov
clc
aam
icebp
icebp
(bad)
adc
loopne
mov
dec
xchg
add
int3
dec
push
arpl
idiv
push
push
xor
sub
jp
out
jno
iret
(bad)
fldcw
enter
inc
mov
or
mov
sub
adc
mov
cmps
dec
and
movs
cmp
(bad)
outs
jl
mov
and
inc
push
cwde
xchg
adc
inc
dec
and
cmc
xchg
ja
adc
fxch
sub
sub
bound
sub
loopne
mov
push
dec
or
push
mov
mov
mov
ja
jne
(bad)
cmc
xlat
rcl
pop
stos
sti
sub
outs
xor
pushf
cmp
lahf
je
sar
dec
and
add
or
xor
jmp
das
sbb
xor
dec
out
pop
out
jae
(bad)
xchg
mov
fidiv
fst
dec
or
in
les
aaa
aas
fist
aas
bnd
lds
aam
mov
(bad)
xlat
scas
mov
(bad)
pop
cmp
pop
sub
adc
out
mov
mov
sbb
jp
mov
or
data16
cli
xchg
add
mov
pushf
mov
lahf
(bad)
push
cmp
jns
jb
push
inc
shl
sbb
js
aam
add
mov
mov
sub
mov
lods
daa
retf
in
lock
data16
xchg
clc
or
in
ja
movs
jl
mov
jge
mov
add
bound
rcr
cmp
push
and
sub
movs
cmp
int3
pop
xchg
push
jno
add
shl
sub
push
inc
pop
sbb
sahf
cmc
ds
xor
hlt
push
repnz
dec
mov
mov
pop
jmp
cmp
aaa
sbb
adc
and
adc
rol
frstor
or
sub
pop
mov
test
sub
mov
call
push
pop
fwait
sbb
dec
imul
sbb
xchg
sub
pop
inc
fstp
(bad)
adc
outs
(bad)
repz
cmps
sub
cs
and
or
test
xchg
mov
ror
add
enter
inc
adc
pop
sub
in
bound
sub
jp
push
mov
jae
cmp
ins
cmp
dec
xchg
(bad)
adc
xchg
mov
addr16
add
(bad)
sar
and
sbb
daa
push
mov
xchg
inc
and
(bad)
mov
push
mov
push
dec
ins
imul
and
pusha
int
adc
cmp
(bad)
push
out
pop
cmp
and
stos
int
dec
call
mov
cmp
cmp
movs
test
test
ret
into
and
inc
dec
mov
test
mov
push
fiadd
mov
scas
mov
and
aas
test
lds
push
push
push
add
dec
cdq
add
shr
lods
mov
loope
xor
out
ret
and
adc
(bad)
js
jmp
xchg
sahf
or
xor
outs
xor
or
mov
inc
jb
mov
jle
repz
sub
cmp
cmp
push
dec
and
fldcw
(bad)
xor
enter
ficomp
iret
xor
sahf
aad
popf
or
mov
test
jo
out
adc
call
mov
sahf
loop
mov
call
nop
fdiv
sub
mov
and
mov
imul
sub
out
push
out
mov
dec
sub
cwde
fld
add
or
outs
pushf
sbb
and
jno
sbb
das
dec
stc
inc
mov
std
aad
xor
les
sbb
mov
pop
mov
xchg
add
xchg
sbb
and
mov
fwait
fs
jbe
(bad)
in
arpl
(bad)
fisttp
pop
mov
mov
mov
push
int3
cli
imul
pop
movs
push
shl
adc
push
fwait
inc
aas
ret
fnstcw
out
xchg
push
ror
(bad)
xchg
out
movs
call
ret
inc
cmp
xor
mov
fiadd
je
fidivr
sbb
inc
jb
or
cmp
imul
mov
aad
out
xchg
mov
clc
aas
jmp
or
dec
dec
ret
out
es
push
movs
fwait
inc
push
shr
xor
sub
jle
mov
adc
or
pop
lock
jae
push
mov
adc
leave
inc
scas
push
leave
loop
jg
jg
xor
sub
arpl
retf
dec
imul
jns
pop
popf
addr16
movs
leave
mov
mov
xor
call
ins
clc
aam
mov
das
sub
jae
sub
(bad)
mov
push
ins
or
shl
repnz
pushf
cmp
pop
and
or
nop
fisttp
shr
aam
dec
pop
js
mov
dec
mov
enter
nop
not
(bad)
imul
loop
or
daa
sahf
in
pop
sbb
adc
lods
push
adc
pop
dec
xchg
xchg
adc
icebp
sbb
and
pop
sub
push
pop
xchg
dec
mov
cmc
mov
pop
mov
shl
daa
xchg
pop
rcl
mov
push
in
out
jg
leave
dec
movaps
inc
mov
pop
jne
arpl
xor
jb
fsubp
push
(bad)
cmc
stos
push
push
js
and
or
dec
lea
push
jecxz
(bad)
(bad)
(bad)
cmp
adc
xor
xchg
cmp
repz
aad
dec
mov
stos
lahf
(bad)
stc
xlat
sub
or
pop
sbb
cmp
stos
mov
mov
fldenv
(bad)
sub
xchg
push
in
push
inc
jmp
fidivr
les
mov
int3
and
xor
neg
inc
fimul
cdq
push
add
aaa
test
and
std
ss
push
add
sti
cmp
pop
mov
scas
sahf
mov
pushaw
mov
cdq
sbb
in
add
inc
je
in
scas
cmp
push
scas
mov
retw
xchg
sbb
and
cmp
push
rcl
mov
rol
mov
aas
pushf
jmp
in
jno
sub
add
aam
cmps
scas
stc
cwde
imul
adc
loop
push
cmp
jne
jle
test
mov
sbb
inc
pop
jbe
cmps
out
(bad)
(bad)
into
test
in
cmp
push
inc
jno
ror
xchg
push
sti
stc
xor
pop
stos
dec
lock
adc
mov
inc
shl
sbb
pop
xchg
mov
das
or
mov
hlt
dec
call
jle
push
test
jnp
fdiv
mov
push
mov
cld
popf
adc
adc
jge
sahf
mov
add
test
ja
je
into
jle
ja
add
xchg
clc
push
call
mov
cs
push
push
adc
push
aam
push
rol
inc
adc
inc
push
mov
clc
xchg
push
inc
and
sub
cli
das
cmp
pushf
push
push
xor
xor
dec
ds
xor
inc
dec
add
test
pop
test
jge
lods
scas
push
stc
xlat
movs
and
pop
clc
pop
dec
sbb
std
adc
xchg
cmp
adc
jnp
jl
jno
mov
cmp
cmp
gs
mov
mov
in
mov
sbb
cmps
in
fisttp
push
cli
mov
mov
in
pop
imul
jle
xchg
mov
xor
repnz
shl
ss
fcomp
inc
mov
fwait
pop
icebp
jp
loop
jl
xor
add
aaa
or
pushf
inc
cld
jmp
rcr
aas
ror
add
inc
cmp
loop
iret
fidiv
fwait
pop
and
repz
and
and
arpl
jns
in
jnp
cli
rol
jge
rcr
adc
(bad)
out
les
shl
shl
mov
mov
and
pop
lods
lahf
cmps
pop
ror
sbb
push
bound
scas
push
loope
call
imul
imul
mov
int3
test
jmp
in
mov
addr16
mov
sub
(bad)
cwde
pop
enter
test
xchg
and
gs
pop
sub
aam
jb
sub
mov
mov
push
idiv
ss
pusha
inc
jo
and
(bad)
stc
xchg
out
(bad)
loope
push
jo
pop
pop
clc
rcl
imul
(bad)
and
and
pop
and
pop
hlt
outs
cwde
mov
stos
(bad)
and
cmps
lahf
mov
movs
shr
sbb
int
aas
les
jb
mov
sahf
or
ss
sar
jnp
push
retf
enter
xor
cmp
sbb
mov
call
mov
repz
cli
sahf
sub
mov
and
cmps
jp
inc
add
sbb
jmp
repnz
inc
lahf
jle
jmp
cwde
jae
in
pop
cmp
lods
jae
adc
arpl
xor
jmp
pop
loope
mov
dec
fidivr
and
cmp
sbb
cmp
ret
adc
outs
div
jmp
dec
outs
cmp
retf
rcr
xchg
lahf
aas
dec
mov
xor
cwde
jecxz
cld
outs
cld
xchg
jo
call
scas
pop
xchg
mov
sub
mov
xchg
push
jb
shr
scas
iret
aaa
dec
(bad)
mov
jo
pop
cdq
adc
inc
dec
inc
out
cli
cmp
fwait
or
icebp
lea
add
js
jl
push
xchg
popa
pop
jo
inc
and
(bad)
add
out
inc
in
mov
out
sbb
cli
(bad)
shr
ds
sub
sbb
pop
dec
mov
out
jbe
fwait
loopne
xchg
retf
shl
push
xor
jo
pop
mov
loope
fadd
dec
fsubrp
mov
arpl
push
xchg
movs
cmp
push
fstp
inc
cmp
jo
sub
and
(bad)
dec
mov
(bad)
cmp
in
jno
push
add
mov
add
aad
dec
fcmovnb
inc
outs
or
(bad)
xchg
or
jmp
out
aam
(bad)
loop
adc
add
aas
mov
pop
mov
adc
inc
call
adc
(bad)
sbb
sahf
sbb
cmp
push
xchg
mov
imul
or
sub
push
in
cs
or
dec
lahf
test
scas
pushf
xchg
inc
out
retf
mov
jne
push
xor
or
pop
lods
jae
fsub
pop
scas
lods
mov
not
int
fild
push
sub
mov
call
cld
enter
sub
clc
jmp
or
loop
(bad)
fstp
in
xchg
xchg
sar
call
test
jmp
imul
jge
dec
xchg
or
and
mov
mov
and
inc
std
jbe
ins
xchg
hlt
sub
mov
mov
pop
int
(bad)
int3
(bad)
adc
movs
sbb
xchg
cwde
aas
cmp
sti
int3
mov
sub
sbb
fist
cmc
xchg
(bad)
movs
ja
dec
xor
adc
(bad)
mov
lods
pop
or
jmp
retf
push
mov
mov
inc
xor
fbld
push
dec
(bad)
and
dec
out
cmp
imul
cwde
addr16
mov
ss
into
cmps
mov
jle
cmp
or
outs
pusha
adc
iret
retf
add
out
mov
cmp
xchg
call
pop
clc
xor
xchg
sub
fist
inc
mov
xlat
mov
out
or
jbe
dec
in
ins
xor
pop
rol
shl
lock
mov
scas
out
mov
pop
mov
(bad)
cld
pop
outs
or
cmp
pop
ret
(bad)
std
xor
and
or
loopne
push
fldenv
and
dec
mov
mov
call
cli
and
xor
jb
cmp
cld
ficomp
fxam
xor
(bad)
retf
(bad)
aaa
pop
aas
hlt
shl
sbb
xchg
test
call
shl
pop
sub
test
daa
movs
pop
fild
push
iret
xor
cli
add
mov
push
inc
and
iret
lock
or
out
fwait
mov
pop
ins
call
cmp
cmps
mov
cmps
popa
sbb
iret
fwait
mul
cmp
retf
xor
jg
dec
sbb
and
push
xchg
out
mov
dec
(bad)
out
shr
adc
mov
adc
jle
fld
icebp
and
push
mov
mov
in
inc
rol
mov
jbe
sbb
ins
mov
out
popf
xchg
jge
ret
stos
sub
cld
inc
je
dec
outs
sub
xchg
arpl
push
dec
out
or
fstp
adc
mov
dec
je
dec
retf
xchg
push
mov
and
add
jae
sub
sub
ror
in
dec
inc
cwde
xchg
sub
leave
in
mov
mov
and
xor
add
mov
jmp
call
cmps
sub
test
out
xor
jge
xchg
xchg
mov
into
xchg
lock
popa
mov
pushf
xchg
stos
(bad)
sar
(bad)
mov
mov
(bad)
mov
and
pop
dec
ret
push
mov
dec
mov
call
inc
jg
outs
jmp
xchg
jle
loopne
popa
das
fistp
mov
pop
hlt
leave
push
scas
push
js
sbb
outs
movs
jg
and
or
std
rcl
or
sub
dec
shl
inc
jp
sub
inc
adc
dec
push
xor
out
hlt
pop
or
mov
mov
data16
imul
push
unpckhps
push
in
sbb
stos
sbb
fild
mov
pusha
or
cld
pop
out
nop
retf
dec
imul
jmp
or
fst
pop
xor
mov
(bad)
retf
push
push
shr
mov
jle
ds
xor
scas
pusha
ficom
mov
out
xchg
dec
cs
dec
aas
js
rcpps
(bad)
sub
sbb
pop
fdiv
lds
push
cld
(bad)
adc
leave
into
mov
(bad)
cld
out
xor
push
retf
sbb
push
and
js
pop
pop
fsub
jmp
sub
inc
nop
ins
cdq
test
dec
jns
scas
lahf
rcl
jl
call
dec
rol
cmp
dec
push
sbb
test
sbb
mov
dec
lods
arpl
(bad)
xchg
push
lods
daa
in
fld
cmp
mov
lods
pop
daa
retf
inc
push
mov
test
sub
ss
pop
lods
ins
pop
jns
aas
je
dec
mov
std
adc
ins
cmp
dec
cmps
pop
or
xchg
mov
push
lea
inc
int
aam
imul
std
iret
jbe
jmp
and
(bad)
jno
mov
bound
mov
and
stos
jl
pop
lods
push
adc
sar
push
cmp
dec
int
hlt
sbb
pushf
hlt
or
sub
xchg
xchg
mov
addr16
imul
add
dec
ss
or
dec
xchg
test
inc
mov
cmp
dec
push
lods
cmp
dec
cli
shr
dec
pop
push
ins
ins
sub
popf
shr
jmp
stos
dec
les
retf
daa
pop
mov
or
stos
dec
dec
repz
xchg
retf
cwde
inc
or
mov
call
stos
and
dec
popa
adc
arpl
out
mov
pop
inc
data16
not
iret
pop
mov
lods
inc
cmp
iret
retf
in
jmp
adc
pop
add
jmp
sub
add
xchg
(bad)
push
inc
pop
jb
xchg
stc
and
and
outs
dec
sub
popf
(bad)
into
sub
dec
mov
or
fstp
sub
push
jns
popf
out
inc
call
xchg
inc
popa
outs
push
sar
das
dec
jmp
mov
sbb
aas
jge
jns
lock
into
push
in
add
inc
je
mov
inc
fs
xchg
jmp
push
pop
les
mov
jp
mov
(bad)
fcomp
add
rol
scas
xchg
xor
(bad)
aad
(bad)
push
sub
int3
push
fcom
sub
addr16
push
aam
sbb
fwait
stos
aam
dec
add
xor
inc
rcr
lea
mov
inc
icebp
sar
mov
hlt
jmp
out
inc
rcr
test
xchg
mov
mov
xchg
adc
mul
pop
push
mov
out
(bad)
sub
aam
into
jae
mov
xchg
xchg
mov
inc
xor
pop
mov
icebp
hlt
inc
das
inc
mov
dec
mov
fldenv
add
dec
xchg
aam
mov
aas
repnz
lds
push
mov
dec
inc
cmp
mov
sahf
ret
sub
inc
test
push
outs
mov
bound
mov
mov
in
dec
add
push
cmps
pop
and
int
ja
pop
mov
push
jge
or
sub
shr
pusha
pop
sub
push
mov
mov
clc
pop
push
test
pop
cmp
mov
aas
loopne
popa
jmp
test
int3
inc
sbb
cmp
mov
mov
dec
xor
push
adc
sbb
loopne
xor
jmp
jns
inc
aad
mov
iret
cmp
stos
mov
ds
pop
ins
pushf
adc
jecxz
ror
je
cmps
cmp
jmp
in
dec
aas
xor
clc
jne
lock
xchg
(bad)
jp
jbe
mov
push
and
push
pusha
test
xor
pop
mov
enter
or
adc
adc
jecxz
push
mov
dec
mov
dec
jecxz
cmp
adc
and
push
mov
dec
push
and
jl
xor
cmp
out
aas
pushf
or
mov
cli
xor
sub
idiv
cli
adc
jmp
pushf
inc
ret
in
ret
je
jg
mov
lods
ss
scas
jno
inc
dec
xchg
lods
add
std
iret
pop
jg
cmp
inc
imul
nop
xor
mov
or
mov
popa
nop
inc
sbb
jp
jo
iret
scas
or
scas
mov
mov
push
push
xor
xor
lock
pop
push
scas
je
push
push
arpl
fwait
mov
add
and
push
jne
jg
push
fsub
sub
or
mov
(bad)
cmp
push
adc
in
xor
clc
xchg
and
dec
mov
fmul
push
pop
mov
fadd
shl
mov
xchg
sbb
and
leave
leave
cld
fst
fidivr
stos
xor
pop
out
into
loop
mov
inc
in
jne
cli
jb
adc
test
jp
shl
sbb
(bad)
xor
outs
inc
sub
dec
mov
push
and
call
outs
push
pop
pop
mov
jg
adc
pop
popf
stos
push
mov
inc
rol
scas
cmp
pusha
adc
aam
inc
arpl
pop
lea
test
lea
rsqrtps
cmp
sbb
jb
jl
inc
mov
add
shr
outs
sub
dec
or
test
(bad)
sbb
fwait
inc
or
jecxz
daa
in
test
pop
(bad)
shl
in
jl
push
dec
mov
adc
hlt
push
sbb
dec
out
push
call
rcr
sub
test
shl
nop
adc
shr
(bad)
(bad)
pop
cmp
fdiv
fisub
loope
aaa
mov
shl
mov
pop
xor
int3
lods
cwde
int3
sub
lds
in
jecxz
cli
not
stos
cmps
loopne
in
nop
or
dec
sbb
adc
mov
popa
inc
rol
pop
inc
xchg
xchg
mov
sub
retf
leave
jnp
aam
int
(bad)
leave
push
sub
push
ret
adc
mov
and
movs
outs
fiadd
xchg
ins
sub
jae
pop
sub
push
sub
adc
push
mov
xchg
aam
fisubr
mov
loop
and
xchg
add
inc
pop
leave
mov
cmps
xchg
fldcw
xlat
pop
xchg
jmp
fild
stos
fdecstp
je
imul
ret
(bad)
jp
dec
cmps
clc
mov
arpl
call
nop
pop
push
pop
cld
shl
sbb
test
xor
add
jle
push
lock
das
daa
push
(bad)
cld
pop
inc
push
pop
mov
arpl
cmp
pop
addr16
push
xchg
das
and
sar
xchg
dec
and
fbstp
fimul
cmps
loopne
rol
pop
jp
ret
push
jmp
imul
fyl2x
jmp
call
adc
mov
les
and
rcr
jns
(bad)
std
cwde
loope
cmp
int
xchg
fbstp
inc
mov
add
outs
leave
pop
xchg
sti
and
add
test
scas
fmul
call
js
cs
sub
xor
lock
pop
pop
jge
loope
push
int
adc
xchg
push
rcr
cdq
(bad)
adc
and
sub
add
dec
lahf
and
cdq
pop
sub
adc
(bad)
retf
mov
push
add
push
sub
repz
dec
mov
(bad)
cmp
mov
push
push
mov
cmp
and
sahf
sub
nop
inc
cmps
rol
cmp
call
repz
mov
xor
in
xchg
scas
(bad)
fcmovne
mov
movs
rcr
xchg
and
js
xchg
stos
stos
mov
aas
leave
mov
iret
shl
or
mov
push
xor
(bad)
cmp
sub
adc
and
jae
lahf
or
adc
mov
(bad)
fdiv
icebp
fdivr
add
and
mov
jg
and
sbb
fwait
dec
loope
std
adc
add
std
and
mov
loope
xlat
inc
push
cmp
out
dec
and
or
cwde
mov
ror
cmovs
(bad)
cmps
push
xor
fstp
jb
inc
daa
nop
xor
inc
sub
iret
ficomp
and
inc
mov
xor
or
fdivr
bound
sti
jae
push
ror
bound
dec
addr16
dec
int
jmp
xor
push
push
mov
iret
mov
and
fild
sub
inc
or
push
add
mov
xchg
and
in
inc
repz
test
mov
adc
dec
mov
mov
rcr
pop
pop
cmp
mov
in
mov
jns
xchg
leave
es
cmp
sub
sub
in
fisub
push
mov
sub
sub
outs
jp
cmps
mov
jg
int
sahf
add
inc
test
fwait
or
mov
imul
inc
mov
jle
jmp
sbb
inc
cmp
inc
xchg
adc
push
cdq
dec
movs
mov
push
cmp
cmp
ror
xchg
mov
sbb
psllq
jb
test
stc
inc
stc
icebp
pusha
js
lds
jl
push
inc
push
dec
and
ret
mov
sbb
test
repnz
pop
and
push
dec
sbb
adc
mov
imul
sub
add
test
mov
sbb
or
call
stos
adc
out
aaa
or
cmp
xor
loope
mov
push
add
mov
and
xor
ret
ror
xchg
sub
jae
iret
imul
rol
mul
sub
aaa
adc
test
rcl
mov
mov
mov
add
stos
test
lock
push
(bad)
add
sar
xlat
aad
sub
adc
fs
cmps
lods
or
nop
xor
outs
popa
add
and
pop
adc
mov
or
jge
sar
mov
outs
cmps
(bad)
push
int
imul
cli
je
mov
imul
fsub
outs
fdiv
cdq
adc
mov
es
mov
fiadd
dec
leave
cld
adc
(bad)
sti
sbb
xchg
push
jne
add
aaa
dec
int3
mov
sbb
mov
adc
out
test
aam
dec
or
iret
push
es
pop
lock
mov
test
jle
pop
mov
repnz
add
test
jns
pop
ret
jae
js
rcl
lock
cmp
cld
and
clc
(bad)
neg
aad
lods
int
aaa
and
adc
and
mov
push
rol
dec
ss
jg
cld
dec
dec
cli
dec
rcr
jo
pushf
jns
movs
cs
scas
icebp
cdq
pop
mov
jecxz
clc
outs
dec
xchg
out
xor
ds
mov
adc
aas
inc
cmp
int3
adc
aad
icebp
cli
add
cmp
push
mov
aad
inc
out
adc
push
inc
mov
push
sbb
out
lock
cwde
enter
js
pop
and
mov
cdq
arpl
pop
mov
mov
and
push
xor
mov
ins
stos
inc
jmp
sti
out
jne
fnstcw
sbb
or
out
movs
cmp
mov
jmp
adc
test
loope
out
adc
adc
fimul
pop
test
and
xchg
pop
push
pushf
scas
fimul
mov
cmp
xchg
shr
xor
push
sbb
sbb
add
push
sbb
test
or
movs
xchg
daa
aaa
sbb
out
lock
push
sbb
mov
dec
les
ret
mov
cmps
fwait
cmp
jae
push
sub
push
outs
retf
xor
mov
mov
jg
or
enter
inc
ret
pop
outs
xchg
hlt
add
ins
push
xor
add
fistp
push
lods
mov
push
jns
push
xor
movs
enter
jg
jl
call
pop
cmp
sbb
inc
inc
cs
clc
or
push
aam
push
xchg
jle
or
add
mov
ret
ja
pop
lea
or
test
mov
jl
loop
sahf
xlat
ins
mov
jb
adc
cld
jbe
or
lock
ins
pop
push
fisub
jmp
ins
dec
fsub
pop
sti
repz
retf
(bad)
dec
in
aam
nop
retf
sbb
xor
pop
les
or
stos
cmc
cli
pop
into
imul
imul
push
jns
fwait
(bad)
push
or
mov
fidivr
loopne
cmps
js
push
mov
sbb
ror
push
scas
(bad)
mov
mov
mov
leave
jecxz
shr
pop
xor
imul
pusha
and
jecxz
outs
adc
push
mov
popf
add
ins
inc
sub
jns
mov
jmp
jno
mov
ins
ins
lahf
jns
push
xor
fnstenv
pop
inc
stc
push
int
outs
rdmsr
inc
xchg
mov
hlt
loopne
mov
inc
mov
cmps
mov
lock
into
adc
inc
add
(bad)
and
dec
adc
int
xchg
cmp
lds
pop
dec
loop
jno
adc
les
or
test
mov
cmps
aam
cmp
xor
fadd
xor
and
pop
mov
xlat
in
nop
jno
imul
or
push
jbe
xor
and
pushf
(bad)
fmul
fidiv
in
or
or
pop
jb
loop
sar
push
xchg
clc
cmp
pop
jp
xor
shl
adc
push
arpl
sti
aas
push
loopne
pop
inc
in
dec
jmp
das
dec
add
sbb
aam
push
pusha
mov
(bad)
es
mov
mov
iret
js
or
out
call
push
xchg
xchg
fdivr
sbb
mov
dec
mov
add
or
mov
push
jb
add
pop
adc
(bad)
dec
push
add
mov
adc
pop
mov
outs
dec
scas
and
mov
lods
jae
mov
cdq
mov
pop
fistp
cld
xor
and
pop
je
and
rol
jp
pop
adc
gs
mov
test
xchg
jnp
inc
push
stc
or
mov
cli
mov
call
int3
fsubr
int3
dec
sbb
sbb
mov
pop
xchg
sti
push
loop
adc
xchg
adc
daa
mov
repz
retf
mov
aad
outs
out
mov
daa
(bad)
push
and
in
jmp
ret
inc
xchg
xchg
int3
rol
push
outs
xchg
sahf
inc
cdq
sub
test
adc
cmps
xchg
test
in
push
xor
rcr
nop
push
retf
xor
mov
lahf
popf
int
xor
cmc
(bad)
test
and
addr16
inc
xchg
push
shl
add
(bad)
nop
dec
mov
les
inc
iret
outs
sti
ins
aaa
xlat
pop
push
loop
or
cmp
and
pop
ds
movs
cwde
mov
push
in
imul
mov
xchg
push
mov
mov
mov
in
int
push
cmp
and
imul
xor
mov
in
(bad)
mov
sbb
push
icebp
xor
sbb
fcomp
jmp
push
ins
or
fisubr
popf
push
outs
sub
jl
or
daa
addr16
in
dec
xchg
add
adc
add
mov
and
cmp
scas
(bad)
(bad)
fst
xchg
in
mov
ret
cmps
adc
push
cmc
sbb
push
in
lods
sar
js
inc
(bad)
mov
jne
inc
sub
dec
idiv
cmp
repnz
xchg
mov
and
ret
movs
call
pop
add
mov
dec
jmp
push
push
(bad)
mov
inc
dec
jo
mov
sbb
mov
or
sub
jge
(bad)
xlat
push
pop
sub
mov
jmp
lods
test
mul
cmps
imul
mov
sub
xchg
mov
pop
scas
xchg
xchg
lds
ret
push
out
fbstp
cmp
inc
mov
shr
int3
shr
inc
test
mov
data16
retf
and
mov
ror
adc
retf
pusha
popf
jno
fldcw
icebp
add
mov
mov
fwait
ror
jo
fimul
ss
inc
pop
sbb
pop
(bad)
in
repz
(bad)
cmc
push
sar
(bad)
retf
add
retf
mov
mov
mov
push
lahf
sbb
push
inc
sbb
test
mov
clts
xchg
cmc
call
xor
or
movs
adc
repz
retf
mov
in
mov
fcomp
lods
fiadd
dec
inc
and
push
add
scas
mov
sahf
xlat
sbb
cmp
ret
lds
je
xor
jecxz
add
gs
cmp
repnz
lds
bound
and
cs
adc
or
into
in
aaa
icebp
ins
lock
add
std
push
dec
jmp
mov
cmps
std
sub
dec
mov
dec
iret
pop
pop
fs
or
inc
movs
out
cmp
mov
es
int3
call
sbb
add
clc
sbb
test
add
mov
push
pshufw
jl
cmp
es
sbb
add
dec
nop
and
push
popf
cmp
mov
mov
fstp
popf
arpl
lahf
jp
je
fadd
inc
mov
fdiv
ret
shrd
rcr
mov
mov
je
mov
xor
out
test
and
nop
outs
loop
mov
fst
hlt
and
jbe
jmp
xor
and
int
jno
jl
jp
jmp
add
ja
gs
push
stos
jle
pop
mov
xchg
sbb
xor
push
xlat
xor
sub
mov
lods
xor
adc
pop
jbe
inc
cld
mov
fstp
nop
ins
ret
pop
add
cmp
or
in
inc
and
sar
aas
sbb
aam
push
mov
iret
(bad)
xchg
mov
(bad)
jmp
sbb
aam
sub
dec
jae
or
jecxz
(bad)
(bad)
jg
fisttp
cs
dec
sti
outs
xchg
test
cwde
mov
mov
imul
idiv
and
jmpw
jno
shl
sbb
or
jb
retf
shl
stos
push
sti
lahf
test
rcl
aam
dec
std
xor
int3
sbb
and
arpl
jb
ficomp
mov
xor
test
pop
inc
pop
sbb
and
jmp
fldcw
bnd
xlat
ja
inc
xor
inc
xchg
xor
jne
pop
retf
ja
adc
sbb
in
push
dec
mov
jo
or
sub
and
push
pop
push
push
cmps
stos
cld
std
xchg
loope
and
xchg
or
dec
adc
xor
mov
jmp
fprem1
mov
jge
dec
fst
out
cwde
jno
mov
adc
in
jle
sbb
aad
loop
fisttp
inc
adc
xchg
mul
lds
xchg
inc
stos
in
jmp
nop
xor
out
dec
mov
scas
loope
fadd
mov
ror
(bad)
dec
sub
enter
jecxz
mov
xor
xchg
repz
sbb
cmp
aam
in
xchg
je
out
ds
repnz
lods
(bad)
cdq
add
and
aas
das
push
xor
lock
into
adc
jle
cmc
fldenv
movs
cmp
push
push
mov
adc
push
es
dec
dec
mov
cmp
add
mov
sbb
add
js
sbb
xchg
js
shr
mov
pop
sbb
in
repz
(bad)
xchg
lods
cdq
sbb
or
mov
xchg
push
mov
leave
fnstenv
inc
jae
pop
sub
xchg
or
jo
adc
or
pop
jne
push
pop
pushf
ret
int3
jae
mov
xlat
push
aad
ror
or
pop
pop
pop
ss
pushf
inc
lods
fistp
xlat
bound
xchg
fbld
test
xchg
cwde
sbb
pop
test
shl
or
mov
mov
in
push
je
pop
mov
in
mov
mov
mov
adc
jnp
dec
jns
dec
iret
dec
js
jne
pusha
out
xor
jmp
scas
mov
pop
sbb
fldenv
push
mov
call
ret
(bad)
(bad)
or
mov
and
xor
out
fimul
mov
loope
inc
push
mov
idiv
daa
cmps
pop
xor
jl
xor
cmp
jne
std
scas
sub
jmp
je
dec
enter
pop
mov
pop
pop
xchg
jmp
adc
xchg
sbb
cmp
(bad)
push
sub
dec
mov
shr
nop
hlt
js
sub
inc
adc
dec
fs
adc
push
das
and
mov
jecxz
adc
cmp
or
std
xchg
mov
(bad)
stc
add
mov
(bad)
xlat
mov
xchg
mov
nop
pop
movs
test
call
and
add
aas
mov
call
xchg
jbe
jno
outs
adc
push
mov
dec
test
leave
lods
jno
stos
jmp
mov
dec
jb
mov
cmp
lock
xor
push
add
mov
sub
in
inc
test
ret
(bad)
cmp
arpl
outs
mov
(bad)
(bad)
mov
test
sbb
mov
int3
sbb
push
aad
and
retf
inc
popa
fcom
mov
mov
push
xchg
shl
fnclex
mov
push
and
retf
xor
inc
test
mov
add
pusha
in
inc
shr
js
mov
hlt
jl
aad
mov
mov
mov
loop
jbe
jmp
leave
ror
xor
iret
fnsave
popf
push
bswap
lods
scas
push
cmp
push
repz
sub
sahf
adc
sti
cmp
mov
pop
mul
jg
mov
mov
fnsave
add
pop
jmp
repz
xor
dec
cli
jne
xchg
daa
add
bound
js
and
imul
mov
push
shr
add
inc
or
sbb
daa
ror
je
fwait
and
dec
dec
adc
imul
adc
(bad)
addps
(bad)
fist
pop
dec
(bad)
lahf
imul
mov
adc
cmps
mov
not
sub
pop
inc
push
jmp
sahf
sub
popa
rcr
gs
cwde
sti
call
je
adc
jo
push
jo
add
out
sub
jbe
icebp
fist
lods
fst
pop
ret
mov
bound
inc
xlat
bound
push
bnd
loop
or
repz
stc
mov
enter
mov
dec
lds
sbb
xor
mov
repz
scas
movs
xchg
ret
mov
cwde
sbb
jmp
int
je
jle
call
add
jne
(bad)
std
xlat
or
lea
lock
sub
or
mov
sbb
inc
out
push
mov
pop
dec
sub
xchg
dec
jmp
and
xchg
mov
int
popa
jb
mov
and
clc
aas
sets
pop
fiadd
jmp
sub
jmp
adc
or
and
add
lahf
pop
pusha
shr
data16
push
data16
(bad)
fsubr
test
pop
outs
bnd
nop
xchg
mov
cmp
sti
bnd
aad
mov
or
das
fidivr
pop
fild
xlat
push
call
dec
hlt
push
xlat
loope
jmp
and
inc
lods
movs
aaa
jns
mov
xlat
ret
in
std
jnp
or
test
sub
cmp
fwait
aad
inc
xchg
mov
adc
(bad)
shl
xchg
jbe
and
hlt
cmc
lods
mov
jmp
lods
or
dec
sti
in
ret
push
out
je
xor
mov
lock
not
jns
jmp
div
pop
jmp
int
xchg
addr16
(bad)
out
xor
xor
movs
in
pop
imul
test
popa
pop
push
rol
push
lds
jmp
push
push
mov
pop
jnp
mov
xor
jae
int3
cld
push
dec
clc
xor
dec
inc
jle
daa
(bad)
rcr
sub
test
(bad)
outs
(bad)
scas
loope
xchg
int3
dec
cmp
add
sar
xchg
mov
les
(bad)
imul
jecxz
jmp
pop
(bad)
push
sub
fwait
xor
lock
das
movs
jmp
sub
call
cmp
mov
or
pop
jge
add
push
mov
aad
pop
push
or
jo
dec
retf
jecxz
mov
adc
and
xchg
daa
cmp
out
push
lea
mov
scas
sub
xor
mov
mov
in
lea
jnp
pop
xchg
adc
cli
inc
sub
pop
out
cmps
dec
jnp
pop
and
cmp
sar
dec
daa
and
faddp
rcr
bound
sub
icebp
retf
mov
mov
xor
push
add
push
pop
(bad)
mov
(bad)
leave
push
aaa
(bad)
data16
ror
daa
mov
mov
int3
and
mov
imul
ret
push
mov
fbstp
push
mov
(bad)
test
cdq
rcl
js
rol
hlt
push
in
ss
icebp
xor
mov
mov
jo
mov
or
arpl
jo
mov
ret
pop
std
or
ja
lods
test
jo
mov
(bad)
jle
push
push
adc
daa
lock
movs
jne
push
int
mov
pop
lods
adc
stos
std
add
pushf
bound
std
or
or
lods
jmp
sub
push
and
int
test
inc
inc
scas
(bad)
push
(bad)
mov
icebp
xchg
not
mov
inc
movs
adc
sbb
stos
sbb
scas
fs
in
xlat
sbb
cmp
jecxz
xor
push
and
cdq
ret
jo
push
outs
pop
sbb
mov
dec
(bad)
(bad)
sub
lods
xchg
(bad)
push
sahf
push
gs
push
adc
push
loopne
fsub
inc
outs
(bad)
call
push
jmp
pop
pop
sbb
popf
sub
lods
in
push
jae
mov
mov
xlat
cmp
add
ficom
adc
jbe
mov
je
sbb
ins
aaa
sbb
sbb
sub
mov
cwde
pop
ss
shl
pop
inc
xor
adc
xchg
aaa
mov
mov
ss
popf
xor
xor
sahf
jmp
push
push
fcomp
xor
xchg
mov
xchg
or
mov
shl
jecxz
lock
retf
xor
push
int3
sub
dec
stc
jb
fistp
fldcw
adc
data16
sub
dec
mov
jge
fwait
dec
test
dec
and
outs
xchg
or
aas
nop
sbb
dec
test
or
and
cmp
sub
or
mov
push
pop
sti
loopne
mov
scas
(bad)
sub
int3
fs
outs
sbb
outs
outs
xchg
xchg
test
jbe
icebp
je
cld
cwde
xor
js
pushf
out
or
push
push
fisttp
xor
aaa
loope
ret
xlat
cmps
adc
test
jno
ss
mov
mov
inc
push
push
sub
clc
repz
or
addr16
sbb
leave
mov
push
lahf
scas
sub
hlt
cmc
cmc
jbe
aam
js
idiv
pop
rcr
movs
push
sub
jmp
dec
sti
pop
lods
jne
inc
mov
cwde
mov
fld
add
push
js
lidtd
mov
jp
dec
xchg
mov
xchg
sbb
daa
sub
les
ja
push
add
push
(bad)
(bad)
shr
mov
fsub
cmp
or
je
mov
inc
ss
in
cmp
out
jp
cmps
mov
js
ss
or
clc
rcr
shr
sbb
dec
jle
in
je
in
sub
in
not
mov
ins
popf
xor
xchg
fisttp
adc
(bad)
call
addr16
sbb
push
sbb
xor
mov
data16
adc
repnz
fisttp
hlt
ror
push
jno
adc
sub
pop
shr
mov
movs
rcl
(bad)
ret
and
test
push
rcl
(bad)
loop
inc
out
sbb
pop
pusha
add
add
ror
mov
movs
dec
cmp
xor
(bad)
xor
push
pop
xchg
pop
in
out
mov
dec
call
ret
fisubr
or
jp
xchg
scas
mov
fisttp
cmp
hlt
int3
aad
rcl
mov
ins
push
(bad)
adc
push
ficom
int
fimul
inc
dec
(bad)
jle
inc
std
(bad)
cwde
mov
jbe
adc
cwde
fild
in
stc
cdq
mov
je
sahf
nop
sbb
xlat
sbb
(bad)
dec
stos
jb
mov
push
mov
sbb
out
adc
cmp
or
je
cmc
xor
mov
inc
fdivr
dec
and
rcr
jb
dec
in
sub
xchg
adc
xchg
mov
inc
(bad)
int
retf
xlat
shr
fwait
add
and
imul
push
arpl
mov
jnp
scas
adc
(bad)
xchg
sbb
out
adc
add
sub
sbb
stc
pop
lds
shl
daa
inc
add
push
dec
pop
xor
mov
xor
test
repnz
pop
rol
cmc
pushf
pop
popf
xchg
imul
aam
call
pop
lea
pop
ret
loope
loope
xchg
sbb
repz
xchg
lds
jp
cmp
add
add
mov
push
repnz
xchg
push
sub
inc
push
push
lea
enter
cmp
sahf
or
jno
shr
ret
and
loope
cmps
mov
ss
sbb
mov
mov
jmp
dec
call
leave
cdq
dec
lods
mov
inc
enter
imul
out
lea
sbb
(bad)
aam
push
scas
out
push
mov
add
add
fld
xor
mov
pop
sahf
pop
jo
dec
stos
sbb
scas
xchg
xchg
hlt
addr16
retf
adc
stc
mov
pop
sub
movs
mov
mov
adc
lock
adc
popf
or
and
mov
out
mov
pop
(bad)
retf
daa
cmp
(bad)
aas
daa
add
adc
mov
scas
jb
dec
ds
adc
fnstcw
mov
and
leave
push
outs
jmp
jp
jle
rcr
or
mov
fdiv
cmp
loop
test
or
cdq
jne
add
mov
pop
cmp
repnz
xchg
aam
dec
ins
mov
dec
sub
or
jns
in
inc
dec
jae
cld
dec
cmp
push
mov
iret
cli
(bad)
push
sub
add
and
and
and
sbb
loope
push
addr16
mov
dec
in
xchg
shr
fidivr
sub
in
xchg
xchg
dec
sub
(bad)
addr16
mov
hlt
cmp
out
fistp
in
jns
test
jle
in
mov
out
push
xor
pop
mov
cdq
xchg
jb
adc
jmp
adc
retf
cmps
xchg
out
aam
sbb
adc
jae
adc
repnz
pop
psubusw
mov
inc
mov
neg
mov
sub
outs
and
jmp
loope
or
mov
push
push
loop
xor
aad
(bad)
cmp
mov
shl
mov
sbb
in
sbb
out
sub
jmp
fwait
dec
pop
(bad)
mov
pop
sbb
mov
add
lahf
cmp
jae
jg
leave
cmps
or
retf
add
pop
bound
push
pop
and
cmp
mov
aad
out
repz
je
test
push
mov
sbb
jo
push
rol
mov
mov
les
mov
fwait
lds
cli
pop
push
mov
ror
mov
ins
(bad)
(bad)
mov
sbb
aaa
mov
push
shl
fdivr
je
jmp
gs
cli
mov
mov
ins
lods
pop
repnz
xchg
pop
push
xor
aas
in
inc
jmp
out
jmp
(bad)
mul
push
enter
arpl
dec
dec
in
pop
jg
int3
cmc
jl
int
test
mov
imul
push
mov
jnp
aam
fistp
stos
pop
imul
jg
out
inc
mov
push
icebp
xchg
call
push
mov
push
adc
ret
sub
xchg
push
stc
xchg
test
xor
addr16
or
cmp
idiv
rcr
in
mov
cld
data16
fisttp
xchg
mov
mov
mov
ds
(bad)
test
mov
loop
push
out
jecxz
push
ja
add
sub
jle
sti
call
iret
jnp
rcl
and
aad
dec
stos
mov
sub
xor
adc
or
sbb
push
and
pop
mov
test
inc
add
clc
fdivr
mov
push
mov
sub
icebp
repz
sbb
test
fisub
jo
sub
pushf
cmp
jl
dec
add
cmp
shl
fild
shl
repz
jmp
aam
out
retf
mov
inc
lods
outs
xchg
fstp
cmp
push
mov
popf
mov
loopne
loope
jne
pushf
es
iret
(bad)
iret
jg
xchg
std
cmp
arpl
inc
inc
sbb
dec
call
jnp
dec
and
fstp
in
cmovns
xchg
jb
mov
mov
xchg
test
or
fidivr
mov
int3
xchg
nop
ret
in
mov
mov
daa
aas
mov
xor
xor
mov
push
daa
push
sub
xor
or
sahf
push
and
mov
mov
mov
mov
fdiv
shl
leave
pop
dec
mov
dec
setp
dec
sbb
xchg
popa
(bad)
cmp
dec
xor
jge
push
arpl
das
(bad)
cld
retf
inc
xor
pop
loope
or
sti
sbb
ror
pop
pop
cdq
inc
int3
scas
sti
add
lea
out
neg
mov
adc
in
rcr
jae
mov
adc
pop
mov
xchg
or
jnp
sbb
std
or
pop
and
mov
int3
xchg
mov
push
xlat
sub
jg
xchg
xchg
push
adc
lahf
mov
mov
ja
in
xchg
push
pop
pop
sbb
cmps
adc
or
mov
jae
loopne
sti
cmp
repz
adc
jbe
xchg
push
mov
or
mov
sbb
inc
jbe
xchg
cmp
fisttp
push
in
lods
mov
pushf
jnp
adc
dec
mov
mov
je
je
adc
clc
dec
sub
test
mov
(bad)
(bad)
imul
fst
in
push
and
lock
push
sub
cmp
cmp
inc
jge
sbb
shr
in
or
icebp
or
fidivr
push
push
push
fstp
fisubr
inc
push
fist
mov
je
dec
inc
jp
jnp
and
mov
mov
clc
rcl
mov
shl
cmc
sbb
cmp
xbegin
sar
or
rcr
shl
out
push
es
clc
xlat
fisttp
out
and
sar
cmp
mov
add
mov
cmp
xchg
push
test
cdq
cmp
mov
ja
test
mov
loope
pop
cli
stos
jecxz
jmp
scas
jle
imul
mov
jno
fwait
jmp
mov
popa
inc
stos
clc
lods
rol
aad
adc
xlat
dec
or
std
(bad)
(bad)
add
mov
and
lods
and
push
push
fisttp
cmp
and
xchg
icebp
test
mov
ret
imul
ds
xchg
imul
add
fst
cmp
cdq
cdq
xor
fadd
push
fidiv
inc
xchg
jg
sbb
cmp
add
cmp
inc
rcl
aaa
in
std
int3
or
and
movs
jmp
cmps
cmps
icebp
shr
xchg
or
jne
es
fadd
das
aam
jbe
rsm
cli
or
in
lahf
les
mov
push
arpl
and
and
popf
mov
pop
pusha
adc
sti
add
mov
sub
enter
inc
dec
mov
scas
mov
fs
sbb
ins
xchg
cmp
fstp
xlat
and
inc
scas
shl
(bad)
dec
fwait
(bad)
sbb
push
xchg
iret
call
jo
and
cmp
sbb
add
mov
inc
adc
pop
(bad)
dec
daa
jmp
lds
jnp
pop
and
pop
push
cmc
sar
in
(bad)
adc
inc
or
add
mov
cli
(bad)
mov
rol
mov
sbb
ret
ins
addr16
ins
ss
loopne
adc
jo
add
js
call
add
shl
inc
and
(bad)
and
push
adc
sub
in
inc
dec
push
arpl
outs
mov
addr16
jp
mov
inc
push
adc
push
imul
mov
arpl
add
adc
jne
stos
and
mov
pop
push
mov
out
cdq
cld
cmp
push
xchg
das
shr
jle
lea
push
call
aam
adc
pop
in
aaa
xor
je
nop
and
xchg
dec
mov
dec
mov
sbb
cli
mov
inc
out
adc
imul
dec
shl
ins
lock
fsub
(bad)
jb
xor
movs
sbb
scas
mov
sbb
mov
cmp
push
cdq
ds
sub
jb
lods
cld
ja
xchg
inc
jb
or
(bad)
(bad)
in
and
lock
data16
push
dec
stos
or
or
inc
je
push
pop
or
mov
dec
jae
jne
scas
xchg
ja
jno
(bad)
shl
ss
pop
mov
xchg
mov
cmp
sub
ja
push
lods
outs
xchg
mov
mov
xor
movs
push
retf
fnsave
xor
aaa
cld
inc
sub
jmp
leave
or
push
shl
xor
gs
iret
das
aaa
ja
fsubr
stos
lods
pop
cmp
fbstp
jnp
lods
mov
mov
clc
loope
add
sub
inc
retf
cwde
into
les
mov
loop
push
dec
push
test
adc
cld
dec
movhps
cwde
mov
ins
retf
mov
jp
sbb
call
pop
scas
pop
in
xlat
or
xor
pop
push
or
pop
adc
aaa
aas
pop
jmp
add
jmp
push
mov
or
mov
xchg
pop
jecxz
imul
icebp
pop
into
cwde
fs
cwde
call
sahf
xchg
aaa
sbb
in
sub
jmp
mov
dec
sub
mov
xchg
xchg
adc
add
test
pop
jno
test
das
fst
or
neg
jo
jmp
jmp
daa
sbb
mov
jle
into
adc
mov
les
mov
jnp
add
in
out
jecxz
or
pop
mov
jnp
jns
retf
inc
fbld
test
retf
add
xor
jns
ficom
xchg
dec
outs
jle
fisub
xor
inc
mov
mov
outs
cmp
(bad)
sbb
lock
sub
lds
test
mov
or
mov
(bad)
lods
xchg
sub
lock
push
ss
mov
lock
hlt
scas
mov
sbb
push
mov
push
inc
dec
cdq
cmp
lea
stc
sub
fucomi
mov
or
dec
loopne
or
pop
mov
popf
xchg
cmp
inc
sbb
int3
das
xchg
gs
sub
sahf
sbb
sbb
in
push
fs
push
mov
add
stc
cmps
test
xchg
lock
add
sbb
adc
out
inc
cmp
xor
loop
cli
mul
scas
das
icebp
loop
std
stos
std
(bad)
pop
fxch
pushf
jg
pop
xor
aaa
xor
ficom
sub
pop
je
in
cmps
test
outs
data16
push
mov
in
js
mov
pop
cmp
mov
jge
xor
mov
ficom
test
cwde
je
retf
jge
test
lock
stos
xor
ja
mov
rcl
mov
aaa
imul
or
adc
mov
jg
xchg
xchg
adc
pmulhuw
shl
xlat
push
aad
jge
cmp
movs
cwde
jle
xor
pusha
inc
cmp
sub
test
sti
bound
daa
adc
dec
mov
cdq
leave
push
mov
and
jp
pushf
movs
add
xor
cmps
push
out
pop
lahf
repnz
ds
add
sub
lea
jnp
dec
pop
xor
pop
dec
(bad)
push
ficom
daa
xchg
aam
push
sub
leave
test
cli
or
aas
inc
cmp
pop
and
(bad)
fidiv
lds
cmp
xchg
xchg
icebp
fcmovnb
push
xchg
out
fist
aaa
inc
movs
loope
jle
jp
push
inc
jge
or
test
out
sbb
mov
jp
mov
rol
push
js
mov
adc
adc
sbb
lea
adc
in
mov
test
pop
add
inc
ins
inc
out
outs
das
iret
push
out
push
jns
and
cmp
jnp
outs
xchg
push
sbb
inc
push
push
jno
mov
jnp
lods
leave
dec
stc
(bad)
and
aad
adc
sahf
sbb
fsubr
icebp
mov
or
sbb
and
cli
das
dec
fdiv
in
sbb
aad
mov
lods
xchg
clc
sti
inc
mov
push
mov
mov
retf
mov
jnp
les
lahf
stc
lock
aas
mov
popf
inc
mov
fcmovnbe
xor
fimul
push
rcr
jecxz
or
int
aad
and
scas
or
bound
loopne
jbe
dec
ins
add
mov
aam
pop
mov
fsub
stc
(bad)
cmp
fnstcw
sub
adc
mov
mov
pop
and
mov
mov
jnp
dec
mov
dec
xor
mov
loopne
(bad)
call
lds
inc
imul
xchg
sar
pop
popf
push
aaa
out
mov
xchg
aas
push
push
repnz
in
sbb
mov
dec
and
ror
jle
jae
xlat
xchg
mov
in
jne
mov
mov
retf
xchg
retf
test
mov
movs
cwde
mov
mov
sub
fdivr
jne
pop
add
pop
push
sub
inc
sub
test
loope
leave
mov
jmp
mov
xchg
nop
loop
cwde
stos
jle
rol
shl
outs
aad
mov
add
fisubr
arpl
in
add
cmp
add
and
sub
and
(bad)
xor
pusha
loopne
lea
xchg
dec
outs
mov
es
cdq
sbb
and
push
xor
les
cld
xor
or
popa
dec
pop
lods
imul
pusha
out
pop
mov
jl
or
or
jp
test
inc
mov
mov
dec
dec
data16
mov
push
in
mov
add
addr16
(bad)
lods
jbe
pop
push
popa
mov
mov
adc
test
adc
jae
push
push
out
push
in
outs
jne
push
jge
jp
sahf
mov
std
shl
dec
xlat
fcom
(bad)
add
daa
mov
(bad)
xchg
cmps
push
mov
ds
push
mov
cmp
and
int
data16
bound
inc
test
mov
rcr
loop
rcr
loop
xchg
rol
jb
pop
jp
mov
cld
rcl
stos
adc
xabort
je
aaa
sub
lods
add
and
stc
mov
push
(bad)
rcr
dec
test
cmps
loopne
movs
mov
mov
imul
mov
je
xchg
ds
adc
ja
nop
mov
movs
lock
jp
inc
test
retf
fndisi(8087
stos
jae
or
cwde
mov
pop
or
rdtsc
mov
or
sub
mov
xchg
fs
jmp
xor
xchg
lods
int
cmps
cli
out
in
push
inc
push
mov
xchg
(bad)
push
dec
stos
and
mov
xchg
outs
push
fwait
sbb
(bad)
imul
push
sbb
inc
ja
lods
jecxz
popf
aas
mov
push
jne
fwait
or
sti
and
lea
mov
dec
pushf
aam
sub
sti
test
mov
(bad)
fldenv
es
das
inc
loope
scas
mov
mul
loope
sbb
dec
add
out
add
or
mov
les
sub
(bad)
clc
das
xchg
pop
pop
(bad)
mov
leave
ret
int
xor
in
mov
std
jnp
or
sar
movs
out
ret
push
mov
call
test
inc
adc
mov
test
imul
mov
outs
das
out
jbe
adc
movs
lds
cmp
or
jle
imul
repnz
push
pop
xchg
(bad)
or
neg
mov
scas
int
pushf
fwait
mov
pop
jns
(bad)
xchg
mov
inc
mov
or
fld
fistp
push
test
mov
(bad)
in
jb
mov
mov
int
push
push
pop
loop
xchg
(bad)
lods
sbb
mov
sbb
lods
adc
sub
jmp
pop
fld
push
fcmovne
(bad)
mov
outs
mov
out
js
gs
cmc
add
sub
sub
sbb
hlt
jp
aad
fwait
call
xchg
sub
cli
sub
mov
or
addr16
push
cmps
mov
mov
inc
push
push
ds
xchg
xor
adc
pushf
jmp
int3
push
dec
push
movs
addr16
aas
enter
and
jmp
fdiv
sbb
rcl
or
dec
mov
mov
les
ds
pop
sbb
(bad)
in
arpl
inc
adc
das
pop
ins
sub
mov
les
adc
push
inc
xor
data16
cmp
xor
push
cwde
xchg
leave
div
or
push
stc
xor
mov
dec
push
fimul
sub
shl
or
mov
push
add
fnstenv
fiadd
push
lds
inc
jg
jo
adc
hlt
mov
nop
add
mov
xor
sahf
inc
sub
rcr
in
push
repnz
adc
dec
les
test
sbb
pop
push
push
aam
sahf
pop
ror
add
test
push
or
add
clc
mov
fs
push
adc
(bad)
xchg
ins
into
dec
add
push
jge
dec
dec
jle
dec
rcl
pop
add
mov
xchg
mov
dec
xor
push
or
je
and
fld
push
movs
je
mov
mov
and
sbb
jp
pop
outs
mov
call
hlt
sbb
xchg
pusha
cwde
mov
inc
call
pop
push
mov
outs
add
inc
adc
push
jg
(bad)
dec
cmp
daa
cmp
out
loope
mov
neg
xchg
and
or
mov
xchg
push
cmp
clc
mov
shl
es
xor
inc
mov
inc
(bad)
gs
not
shr
not
gs
stos
int
push
nop
lods
(bad)
mov
lds
and
push
aaa
stos
inc
jae
mov
(bad)
out
add
pop
sbb
inc
mov
ins
or
sar
je
sbb
and
pop
dec
pavgb
mov
dec
iret
sub
sub
pop
retf
pop
retf
sbb
mov
mul
neg
pop
mov
xor
(bad)
clc
xchg
out
lahf
cmc
pop
outs
push
add
arpl
aad
std
repz
into
mov
push
push
mov
jo
inc
sub
pop
inc
adc
xchg
(bad)
popf
sub
add
sar
or
test
or
push
fidiv
add
mov
cmp
cmc
xchg
add
fistp
add
pusha
arpl
or
dec
out
(bad)
xor
lahf
mov
pop
sbb
stc
pop
or
std
jnp
je
cmps
scas
push
sbb
push
into
(bad)
pop
xchg
and
push
ret
jl
outs
lock
test
push
xor
xor
pop
xor
sbb
pop
sub
cmp
and
mov
lds
dec
ja
imul
movs
sub
dec
cmp
xor
sbb
sbb
xor
test
push
test
push
cmp
outs
xlat
vmread
inc
inc
jp
(bad)
mov
inc
add
inc
inc
mov
cdq
(bad)
mov
fnsave
ret
push
mov
fst
add
std
ins
dec
xlat
sub
into
jae
cmp
stos
dec
push
ror
pop
jg
sar
test
gs
or
loopne
cmp
adc
inc
jl
hlt
xchg
or
dec
jmp
jecxz
repz
movs
ror
push
(bad)
jle
push
aad
cmp
into
(bad)
addr16
pop
and
jge
pop
stos
mov
mov
jo
in
adc
push
movs
leave
inc
dec
add
test
in
sub
jae
(bad)
enter
test
xchg
ins
push
jge
int3
sbb
ja
nop
cmp
inc
sub
mov
ins
sti
rol
sub
and
adc
mov
fmul
jb
dec
imul
ins
fimul
(bad)
fwait
mov
ret
fdivr
mov
mov
test
test
dec
xor
add
icebp
test
les
mov
outs
stos
leave
popf
push
daa
adc
int
mov
enter
lods
mov
jne
push
je
jb
inc
std
dec
(bad)
pop
jnp
adc
xor
push
inc
das
lea
pushf
stc
movs
ss
sbb
dec
xor
test
cmps
pop
mov
jmp
cli
scas
pusha
mov
retf
adc
xor
fcom
nop
loope
xchg
outs
mov
stos
stos
lahf
mov
fsub
push
fcomp
sub
xchg
and
push
push
cs
pop
test
jmp
arpl
loopne
fwait
adc
sub
jnp
dec
(bad)
leave
xor
sar
dec
fwait
outs
mov
lock
and
sar
(bad)
cmp
adc
std
inc
add
adc
fsubr
imul
movs
into
mov
repz
cmp
xchg
rol
retf
sar
pop
pusha
jp
retf
add
jge
dec
mov
out
mov
mov
data16
stc
test
outs
es
jp
call
arpl
cmc
lds
inc
sti
scas
fst
test
fs
pop
sub
dec
push
das
sbb
dec
xor
and
(bad)
inc
jnp
push
mov
aaa
cdq
push
call
jl
jge
(bad)
scas
jmp
adc
sbb
mov
out
mov
enter
xchg
arpl
and
retf
xor
imul
dec
aas
dec
jg
sub
ins
sub
lea
pop
lea
in
sbb
jecxz
cs
ror
test
out
shl
sub
loopne
aas
fistp
mov
sub
ret
rcl
movs
and
popa
daa
xchg
xchg
adc
cdq
pop
shl
jp
mov
jmp
outs
dec
mov
pop
ins
xor
xchg
inc
jb
push
pop
mov
lahf
cdq
dec
stos
mov
or
jmp
and
lods
ins
xor
xchg
movs
sahf
xchg
call
or
xchg
(bad)
aad
jbe
mov
cmps
outs
or
push
lock
lock
iret
mov
dec
std
aas
dec
push
movs
mov
outs
cmp
sbb
cmp
shr
add
les
in
in
pusha
xchg
std
push
jbe
cmps
rcr
xor
mov
ret
ss
rcl
mov
cmp
test
mov
in
jo
xchg
jge
les
pop
and
jmp
in
lods
sbb
idiv
mov
push
and
mov
mov
int
jl
repnz
mov
lods
test
cmp
fcmovu
add
pop
fadd
das
or
cmp
xchg
shr
ins
mov
and
rol
out
add
test
(bad)
hlt
cmp
cdq
js
ror
xlat
es
pop
add
jmp
mov
jl
jg
jb
test
xchg
jecxz
ss
shr
xchg
xor
outs
jae
push
icebp
mov
clc
inc
add
pop
cmp
into
jb
sahf
or
popa
dec
add
mov
aaa
inc
jne
cmp
cmp
scas
gs
daa
mov
adc
scas
cwde
xchg
loope
xchg
cmp
inc
mov
lods
movs
test
les
mov
in
(bad)
fdivr
jmp
jg
stos
adc
xchg
(bad)
(bad)
call
xor
push
in
sub
outs
aad
adc
push
jae
aad
mov
sbb
cmp
jp
fisubr
xchg
dec
retf
fstp
jb
or
adc
fwait
jb
test
add
pop
adc
(bad)
and
rol
mov
cmp
dec
stos
and
(bad)
sbb
cmps
xchg
(bad)
rcr
stc
lods
imul
scas
mov
push
or
in
retf
out
fnstsw
add
lods
inc
push
inc
pop
mov
rcl
pop
stos
inc
and
test
dec
dec
mov
ja
xor
adc
xchg
pushf
adc
push
push
add
out
pop
jmp
pop
repnz
or
and
in
inc
pop
in
int3
jge
xchg
xor
mov
inc
push
addr16
mov
push
sahf
leave
shl
mov
mov
dec
pop
mov
xor
stos
mov
dec
cmp
fistp
call
push
push
ss
cmp
mov
(bad)
jp
popf
loope
mov
add
pop
xchg
jae
mov
arpl
push
dec
add
sar
push
out
inc
cmp
mov
cld
es
dec
call
fisubr
cli
aad
clc
mov
arpl
and
in
out
push
mov
(bad)
(bad)
mov
dec
push
ret
push
jnp
les
aam
mov
and
repz
or
add
nop
or
test
pop
mov
sbb
cmps
test
dec
jmp
pop
pop
scas
imul
cmp
fld
jmp
out
ffree
pop
cmps
loope
xor
out
mov
dec
in
jmp
out
fstp
jmp
xchg
mov
adc
cmp
sub
test
cmps
popa
and
imul
xchg
ret
lds
aad
lods
test
sub
inc
push
cmp
adc
sub
ret
mov
push
cmc
cmc
iret
pop
pop
int3
add
into
xchg
pop
shr
mov
dec
xor
jle
(bad)
fidivr
ret
iret
ss
js
adc
jo
(bad)
jae
add
dec
mov
movs
clc
frstor
mov
cmp
arpl
test
sahf
xchg
sub
(bad)
fld
jb
mov
stos
mov
dec
in
stos
ret
cmp
and
lods
jbe
jecxz
ja
mov
push
das
xchg
or
mov
push
xor
gs
dec
push
mov
jmp
push
mov
ins
arpl
fcomip
xchg
cmc
sbb
push
pop
ror
mov
stos
aam
jmp
aad
push
les
cmp
cwde
clc
or
push
pop
les
fldln2
stos
mov
xor
stos
scas
test
mov
mov
addr16
mov
add
mov
retf
inc
imul
pusha
jne
mov
dec
test
xchg
test
xchg
mov
add
xchg
retf
inc
stos
cmps
and
sbb
cdq
xor
sub
and
(bad)
pop
loopne
inc
not
(bad)
and
popa
xor
ret
fwait
es
rcl
inc
cmps
mov
inc
sbb
and
sbb
dec
jp
fcom
xchg
ins
addr16
sub
int3
or
cmp
adc
adc
in
mov
scas
add
sbb
xor
mov
or
push
imul
mov
aad
test
scas
mov
xchg
cs
into
pop
mov
push
add
mov
inc
push
fisttp
jns
mov
or
adc
out
fldcw
leave
push
test
dec
mov
retf
icebp
and
rcl
xchg
lea
stos
imul
shr
scas
scas
aaa
into
mov
jecxz
xor
in
pop
lahf
and
call
xor
jbe
xchg
rcr
jne
fidivr
jl
dec
mov
cmps
(bad)
lods
xchg
je
outs
nop
sahf
push
xchg
push
mov
add
sub
aaa
push
sub
xor
or
dec
adc
in
into
ins
and
add
pop
push
pop
repnz
mov
xchg
sub
cwde
fbstp
sbb
or
mov
push
xor
ret
cmp
mov
rcr
inc
cld
xor
adc
push
cmp
fdivr
xchg
pop
mov
ror
mov
xchg
lods
call
push
js
rcr
mov
or
sub
xchg
add
and
out
lods
ins
add
fs
dec
inc
into
mov
pop
pop
fwait
push
test
or
push
sbb
jg
inc
(bad)
out
dec
lods
xchg
sub
out
ss
xlat
mov
clc
mov
ins
dec
inc
inc
out
sub
jns
mov
sub
add
shl
clc
mov
add
sub
shl
cmc
in
outs
ret
call
inc
mov
mov
arpl
loopne
movs
sahf
push
adc
jno
sub
repnz
or
mov
mov
dec
push
movs
fld
retf
mov
push
fst
mov
scas
xchg
fnstcw
or
ror
inc
shl
pop
lahf
std
mov
int3
xchg
push
mov
stos
dec
(bad)
sbb
cmp
or
pop
fisub
add
push
adc
imul
stos
inc
dec
into
call
jnp
data16
test
push
test
add
and
jo
outs
(bad)
mov
cld
add
retf
aad
cmps
xor
mov
pop
imul
push
dec
sbb
popf
test
jns
xor
cmp
jbe
adc
aad
sub
xchg
mov
das
or
xchg
sti
jle
adc
push
and
and
out
movs
dec
call
pop
in
std
xor
loopne
enter
pop
cdq
xchg
pop
retf
sub
bound
xor
dec
add
adc
cmps
cdq
push
into
sub
and
mov
in
add
lods
icebp
inc
fstp
dec
aas
out
cmp
stos
arpl
leave
out
inc
mov
mov
idiv
xchg
mov
rcl
retf
cmp
jae
(bad)
ret
stc
add
pushf
jl
xor
inc
cdq
loope
mov
push
pop
xchg
mov
ins
push
jmp
xchg
xchg
jo
mov
iret
mov
les
xchg
aaa
adc
add
jmp
sub
xchg
push
xchg
aam
mov
inc
xlat
fmul
arpl
dec
sub
sbb
jno
out
stos
in
(bad)
loop
cmp
shr
neg
or
fisttp
das
xor
nop
pop
in
inc
neg
cmp
les
out
push
mov
push
aam
pop
adc
sub
mov
int3
leave
sbb
pop
rcr
or
out
repz
ret
add
xchg
fcmovnbe
es
repz
adc
mov
sbb
aam
inc
push
mov
mov
outs
jg
adc
xor
jbe
sbb
lds
and
pop
mov
int3
call
cmc
sahf
mov
mov
dec
retf
inc
sbb
fdiv
ja
mov
adc
pop
in
in
mov
repz
jb
outs
cmps
das
push
jmp
push
sub
lods
dec
push
(bad)
ins
push
les
pop
mov
ja
xchg
in
rcr
adc
xchg
js
inc
pop
mov
mov
xchg
xchg
sbb
pop
mov
sub
shl
frstor
imul
or
loopne
frstor
pop
dec
cwde
rcl
je
push
fldenv
push
mov
mov
add
fcomp
or
fistp
adc
lea
or
sbb
adc
inc
mov
movs
push
mov
pop
cdq
lock
mov
stos
ds
jo
pop
inc
jmp
popa
sub
dec
gs
retf
out
sahf
(bad)
pusha
add
jg
(bad)
sub
inc
pop
cmps
sub
jns
(bad)
cmc
jo
repz
retf
ret
imul
sbb
xor
sub
inc
xchg
mov
add
and
jle
(bad)
mov
mov
iret
aas
xchg
sbb
pop
and
test
rcr
sbb
inc
(bad)
pop
shr
mov
aas
xchg
jg
push
ror
pop
imul
or
xor
loope
inc
lock
jp
outs
jb
stos
sub
inc
inc
mov
mov
mov
out
test
jno
lods
jp
cmp
cmps
pop
loopne
mov
lock
fsubr
(bad)
xchg
add
push
inc
push
out
push
mov
scas
fisub
mov
cdq
xchg
(bad)
pop
fwait
cld
inc
push
jo
inc
xchg
ret
or
out
xchg
je
jno
and
repnz
fistp
rcl
push
bound
inc
xor
add
cmp
inc
mov
adc
setge
cdq
out
add
add
cmp
jnp
out
push
sbb
jnp
pop
rol
cli
lock
xchg
add
fbld
jae
pushf
push
in
mov
sbb
push
dec
iret
adc
jnp
cmp
pop
ror
pop
int3
stc
or
push
push
loope
int
pop
pushf
mov
xor
cdq
and
or
cmp
push
jle
jne
dec
or
mov
scas
pop
or
xor
fs
xchg
call
es
loopne
xor
xchg
jns
not
imul
xor
jnp
out
add
(bad)
xlat
cmps
repz
sahf
add
xor
pop
xor
add
pop
jns
sub
mov
das
ja
mov
enter
aas
(bad)
mov
push
push
xchg
lea
mov
lahf
sub
sbb
lds
leave
movs
call
je
neg
xlat
sub
fisttp
jmp
ret
pop
dec
dec
push
(bad)
mov
push
clc
loop
or
aas
mov
or
sub
leave
xor
ret
jnp
repz
loopne
loopne
pop
mov
ss
lods
pop
aam
(bad)
mov
jl
push
in
enter
inc
pushf
leave
fisubr
leave
add
xor
push
fld
(bad)
push
mov
ror
jb
dec
cld
je
fs
xor
xchg
rcl
adc
cmps
jb
mov
rol
lock
inc
out
lahf
dec
sub
(bad)
fadd
push
lods
jmp
push
xor
outs
ds
ins
pop
mov
adc
dec
mov
(bad)
mov
cli
dec
test
loope
add
jmp
clc
push
(bad)
jmp
inc
inc
and
out
mov
bound
aad
mov
inc
pop
repz
push
mov
push
loope
push
shl
and
fld
sub
xchg
in
les
adc
jmp
xchg
bound
(bad)
loopne
cmp
ja
xor
mov
mov
out
dec
or
jmp
xor
test
in
popa
push
or
les
push
mov
adc
inc
inc
es
jae
push
hlt
pop
mov
dec
sub
arpl
in
aam
shl
mov
jne
xor
mov
pop
dec
mov
pop
mov
xchg
lods
jmp
add
mov
in
aas
mov
dec
inc
loope
push
sbb
movs
add
jno
or
xor
dec
mov
jmp
ja
mov
mov
xchg
rol
in
or
push
ss
add
or
dec
xor
in
push
mov
aad
cs
test
test
jle
(bad)
fst
pop
mov
mov
lea
xor
(bad)
sub
mov
fsub
nop
inc
dec
sub
mov
adc
pusha
and
gs
jg
mov
lahf
mov
into
xchg
rcr
sub
pop
cmp
and
or
mov
std
addr16
loop
push
pop
sar
dec
std
mov
xor
es
enter
icebp
rol
pop
nop
push
test
push
mov
mov
imul
adc
pop
aaa
imul
icebp
inc
shl
xchg
stos
mov
cmp
mov
or
aaa
bound
xchg
movs
pop
cmc
out
jo
and
dec
jmp
pop
test
cmp
in
pop
into
push
mov
into
sbb
shl
(bad)
aad
xchg
mov
sub
xor
or
dec
mul
imul
xor
sbb
jecxz
in
adc
add
retf
popa
inc
sbb
cmp
in
mov
xchg
push
mov
aad
add
mov
cmp
push
pop
(bad)
cwde
fwait
lds
bound
out
(bad)
mov
daa
xchg
mov
push
outs
ret
inc
push
sbb
out
mov
inc
jne
cmp
dec
sub
pop
push
call
popf
push
imul
repz
push
loopne
xor
inc
cmovne
sub
or
or
outs
xchg
out
call
xor
ins
lea
nop
sub
cmp
mov
stos
mov
lods
ja
repz
dec
xor
jmp
or
mov
or
mov
fnstenv
rcr
sbb
stc
fdivr
pop
sbb
mov
cwde
daa
xchg
mov
cmc
inc
xchg
ins
add
push
out
mov
aaa
and
loope
cmp
outs
jmp
mov
sti
gs
inc
push
retf
or
fisttp
lahf
push
and
or
out
and
jb
inc
scas
adc
sbb
mov
jb
out
jmp
sub
(bad)
xor
pop
xchg
cmp
mov
lds
in
pusha
lods
fucomi
pop
pop
fwait
push
stos
pop
xor
in
jmp
jns
pop
stos
stc
xlat
pushaw
daa
ss
dec
adc
or
clc
xor
pop
frstor
daa
imul
mov
(bad)
pop
jle
mov
or
xor
inc
(bad)
sbb
xor
push
jbe
xchg
loop
push
data16
sar
aad
cmp
scas
stos
daa
inc
add
out
mov
dec
xchg
cmp
stos
call
imul
jp
sbb
retf
(bad)
and
pop
mov
dec
rcl
and
xor
mov
mov
into
cli
retf
cmps
es
mov
xchg
cmp
mov
cmps
mov
xor
pop
sub
in
les
inc
ret
(bad)
dec
call
sub
pop
mov
test
dec
(bad)
add
fwait
mov
xor
jns
fld
and
jle
and
in
and
mov
outs
jno
and
push
adc
pop
mov
aaa
(bad)
icebp
add
xor
sbb
imul
pop
les
in
inc
xor
loopne
add
aad
idiv
or
fstp
outs
jnp
sub
jge
fstp
popa
xchg
test
xor
js
sbb
or
sub
test
cmc
repnz
mov
test
push
xchg
sar
test
inc
jbe
movs
push
inc
or
add
xchg
out
push
xor
lock
(bad)
scas
movs
mov
cdq
stos
out
add
push
push
jmp
(bad)
scas
mov
mov
mov
scas
ror
xor
jmp
shr
ja
jecxz
dec
add
or
pop
xchg
mov
xor
(bad)
out
pop
mov
push
push
mov
sub
push
or
ins
out
pop
lods
pop
test
ficomp
dec
sub
lock
ror
and
mov
ret
xor
inc
lods
xchg
mov
clc
add
mov
pushf
jge
mov
aam
sub
and
mov
jle
jae
and
sbb
int
inc
ds
(bad)
pushf
loope
repz
ja
mov
mov
mov
xor
or
xlat
xor
aas
mov
xcrypt-cbc
cmps
nop
lods
and
push
cli
sub
sub
xor
xchg
dec
add
div
mov
pop
sub
cmps
addr16
add
adc
add
ja
pop
jb
inc
or
loop
inc
xchg
ret
fbld
out
mov
pop
xchg
xor
push
cs
mov
icebp
ja
cmp
(bad)
xchg
push
cmp
xor
and
fs
clc
jne
(bad)
test
mov
int3
pop
mov
bound
or
push
call
push
push
mov
data16
inc
call
sbb
sub
jne
jns
lds
fnsave
arpl
jnp
pop
test
push
std
iret
in
dec
dec
cli
inc
imul
and
mov
xor
jo
mov
and
inc
test
inc
rcl
mov
mov
and
pop
sub
cmp
push
js
inc
add
xchg
mov
sbb
push
pusha
lods
xlat
inc
jge
xchg
outs
xchg
fist
or
leave
and
cmp
push
pop
adc
jno
sbb
mov
mov
xchg
jle
shl
and
push
pop
cmps
sub
(bad)
ins
dec
lds
and
push
lahf
mov
out
aad
cmps
sub
jmp
cmp
test
pop
and
xchg
mov
in
jnp
lds
mov
int
and
push
adc
mov
cli
push
push
je
push
je
pop
addr16
sub
pop
ror
mov
mov
aas
call
pop
xor
pop
mov
dec
outs
fidiv
and
jae
out
enter
ret
test
imul
mov
repnz
pop
sti
or
dec
ins
mov
retf
adc
rcr
mov
je
xor
int
retf
push
ins
test
sti
test
pop
cmp
inc
mov
inc
mov
jb
adc
inc
into
cmps
xor
pushf
push
ja
addr16
or
mov
aam
std
cmp
mov
pop
sbb
sbb
inc
in
or
push
ret
mov
mov
lea
or
dec
sub
daa
sbb
rcl
xor
test
popf
fimul
retf
mov
retf
xor
sbb
loopne
addr16
inc
sub
rcr
ror
cmp
outs
iret
lods
mov
out
shr
adc
push
nop
fwait
adc
jmp
aam
add
and
iret
pop
push
mov
and
cmp
ret
inc
inc
popf
or
loopne
nop
retf
pop
in
mov
scas
imul
dec
dec
inc
xchg
mov
push
xor
std
cmp
pop
pop
and
mov
fistp
icebp
dec
das
add
test
mov
stc
repz
jge
repz
mov
dec
lea
cdq
in
add
hlt
test
popf
dec
adc
mov
inc
stos
push
test
mov
loopne
enter
inc
nop
fdivr
maskmovq
not
dec
pop
sahf
adc
enter
add
imul
mov
cmp
call
fsub
pop
pop
mov
imul
cmps
mul
inc
cmc
push
mov
xchg
xchg
mov
imul
pop
ret
mov
jnp
cmp
cdq
pop
out
or
clc
mov
call
icebp
sbb
ret
outs
xchg
fist
in
iret
push
mov
hlt
mov
cmp
or
inc
xchg
les
outs
jp
test
mov
fidiv
or
pop
shr
jmp
xor
inc
push
adc
mov
(bad)
mov
outs
adc
test
jae
push
cmps
pop
add
rcl
popa
mov
sbb
inc
in
imul
push
addr16
mov
jb
loopne
fcmovu
out
push
sbb
aam
jae
sbb
push
and
fbstp
add
(bad)
call
and
jbe
or
mov
aam
mov
push
jbe
iret
sbb
or
(bad)
je
or
cmp
icebp
aas
inc
(bad)
retf
shr
and
test
mov
arpl
push
adc
mov
das
inc
dec
lods
fiadd
jb
mov
shl
ins
scas
fs
stc
leave
(bad)
out
jbe
add
fist
daa
out
cld
jo
mov
push
mov
push
jno
xor
jae
ret
mov
sub
mov
sbb
mov
imul
sub
fdiv
out
push
dec
pushf
lahf
das
dec
xlat
lods
inc
imul
or
mov
add
xor
ffreep
push
push
sbb
adc
adc
into
aad
loopne
movs
mov
ret
scas
(bad)
into
jne
test
xchg
pop
daa
loope
arpl
mov
push
jle
fwait
scas
mov
and
cli
imul
out
pop
mov
push
popf
sub
popf
mov
popf
pop
sub
sar
mov
imul
adc
or
(bad)
sbb
outs
les
icebp
push
push
mov
push
push
inc
js
mov
mov
pop
or
dec
mov
mov
cmp
sub
ret
icebp
lea
fdivr
into
mov
rcl
sbb
shl
arpl
ins
xchg
(bad)
xchg
ret
sub
cwde
push
inc
les
sub
and
jecxz
inc
sub
retf
mov
pushf
fisttp
inc
cli
sbb
ret
or
and
mov
ins
aaa
or
cs
xchg
mov
fnstenv
ins
and
xchg
mov
leave
(bad)
adc
and
test
pop
(bad)
sbb
jmp
inc
and
sub
jae
lods
dec
lock
outs
sub
mov
xor
je
test
mov
stos
dec
test
sub
sbb
aas
mov
and
out
call
xchg
xchg
int3
push
xchg
xchg
xor
loop
sbb
jns
inc
push
mov
aam
repz
(bad)
mov
and
dec
mov
xor
inc
xchg
scas
addr16
popf
mov
sti
sahf
sub
xor
lahf
into
and
add
sub
add
stos
dec
mov
add
nop
aad
mov
out
iret
aad
scas
enter
pop
xchg
push
(bad)
dec
pushf
mov
pop
sub
jp
imul
clc
pop
imul
dec
push
gs
out
daa
jb
sbb
shl
ss
cli
sub
stos
mov
fucomi
mov
mov
inc
stos
xchg
ds
in
movzx
mov
pop
sbb
ja
mov
in
dec
and
fcom
xchg
(bad)
pusha
shl
std
test
inc
(bad)
lock
test
loope
dec
test
lea
scas
cmp
push
stos
(bad)
cmps
dec
imul
into
test
fnop
icebp
push
leave
dec
mov
stos
scas
scas
mov
sbb
outs
out
xor
push
push
stos
sub
fwait
xchg
xchg
adc
dec
push
mov
xor
xor
rcl
mov
test
jl
(bad)
mov
push
stos
aaa
retf
mov
iret
mov
loope
xor
ficom
call
pop
mov
rcl
xchg
mov
repz
dec
sbb
rol
xor
jno
scas
cli
mov
add
sub
or
xchg
int
out
(bad)
xchg
or
into
mov
and
push
mov
xor
loopne
out
ins
test
ins
test
mov
dec
or
cs
mov
adc
aas
stos
sar
(bad)
leave
and
fistp
ss
pusha
popf
(bad)
shl
jne
lea
shl
rol
push
jmp
ss
daa
fild
pushf
pop
mov
jmp
xor
mov
push
xlat
add
ror
mov
dec
mov
clc
xor
shl
jl
add
into
jns
out
pop
out
call
in
xchg
jmp
sahf
mov
jle
adc
je
aam
pop
sbb
out
mov
ret
push
and
xchg
push
jne
cmp
fdiv
inc
mov
dec
push
aas
lods
stos
jae
mov
lods
scas
out
arpl
push
or
cmp
jge
adc
adc
jge
data16
pop
push
xor
icebp
out
push
out
bound
daa
fdiv
sahf
mov
pop
push
and
ss
or
in
add
mov
popa
leave
mov
jp
mov
test
(bad)
cwde
or
imul
push
idiv
mov
lds
mov
in
fwait
jo
adc
out
mov
push
adc
mov
xchg
mov
jmp
jno
xchg
(bad)
dec
int
lock
push
sbb
repz
rcl
sub
push
mov
push
ja
test
stc
sahf
jne
fnsave
movs
dec
jl
in
mov
inc
aas
sbb
lods
fst
inc
dec
fdivr
adc
mov
jbe
add
out
add
push
mov
cli
retf
inc
popa
jge
adc
jnp
add
in
in
call
xchg
movs
xchg
dec
and
inc
int3
mov
add
repz
cdq
adc
dec
das
repz
sbb
adc
(bad)
and
out
sbb
jmp
inc
mov
in
mov
inc
mov
cmp
scas
and
test
add
aad
clc
in
dec
sbb
aas
adc
scas
cmps
outs
data16
test
clc
cmp
aaa
movs
rcl
push
shl
push
mov
xchg
adc
nop
sbb
or
daa
repz
push
pop
(bad)
cdq
out
loop
xchg
dec
test
mov
rcr
or
into
leave
cmp
adc
popf
movs
mov
jbe
or
add
dec
fisub
es
jg
sbb
mov
fcomp
fisttp
inc
scas
arpl
loop
movs
adc
test
in
sub
sahf
dec
loope
mov
neg
fiadd
pop
sbb
sub
jecxz
pop
sub
or
shl
(bad)
ret
sub
lds
sub
or
sbb
sub
push
and
xchg
mov
fnstenv
arpl
cmps
adc
xor
mov
pop
pop
xchg
jae
mov
jns
push
lods
add
sub
add
xlat
outs
fs
lods
inc
and
cmc
and
add
xor
jno
ret
mov
xchg
fcomp
ror
mov
mov
leave
push
add
add
test
fwait
push
fwait
mov
lock
pusha
fnstcw
mov
jnp
loop
cmp
shr
push
jae
cmps
test
es
mov
mov
xchg
xchg
dec
cdq
movs
mov
and
dec
dec
or
(bad)
push
pop
sbb
inc
cld
dec
nop
push
mov
lods
(bad)
retf
popf
inc
mov
mov
fidiv
in
retf
or
or
rcr
fst
sbb
push
ins
test
pop
jno
int
std
ds
sub
or
div
cmp
ror
sub
jp
pop
movs
pop
mov
pop
push
mov
es
(bad)
(bad)
cmc
scas
jge
test
push
mov
or
pop
nop
mov
out
mov
hlt
xchg
inc
dec
shl
add
dec
xchg
push
scas
cs
xchg
push
(bad)
sti
outs
xor
pop
into
mov
and
shl
bound
out
jo
jae
xlat
cli
push
or
rcl
call
shr
jp
retf
aas
je
fistp
adc
mov
adc
pop
xchg
daa
dec
mov
lahf
adc
ret
ret
mov
js
pop
cmp
dec
push
inc
ret
jne
push
ins
xchg
stos
stc
jno
inc
push
nop
or
popf
xor
add
nop
push
adc
jecxz
mov
(bad)
cmp
add
jmp
mov
outs
dec
xchg
in
xor
test
mov
sti
mov
inc
mov
push
jo
sbb
adc
add
cmp
push
fisub
iret
xchg
sbb
pop
jmp
test
mov
enter
lods
lahf
pandn
and
inc
test
mov
cmp
inc
out
and
aas
xchg
pop
cmp
lds
pop
inc
es
call
call
add
idiv
or
rcl
(bad)
fld
add
std
xor
mov
sar
push
ds
(bad)
and
adc
push
pop
push
sbb
popa
retf
mov
xchg
jno
mov
gs
mov
mov
ret
xor
popa
add
leave
mov
jns
fnsave
dec
add
mov
push
popa
sub
aad
inc
mov
jp
mov
popf
dec
mov
aas
and
sub
mov
es
loope
or
and
dec
jl
mov
mov
icebp
pushf
xchg
out
xor
loopne
aas
pop
das
push
loop
sbb
pop
sub
jp
mov
lock
(bad)
aaa
xor
ffree
bound
pusha
sbb
lock
(bad)
imul
mov
cld
xchg
repz
jg
mov
test
test
sbb
push
lahf
(bad)
icebp
imul
imul
pop
(bad)
jmp
or
cld
mov
rol
adc
push
imul
cmc
sub
loope
add
add
cmp
mov
cmc
sub
sbb
add
ss
mov
cmp
cld
ins
dec
push
movs
xchg
mov
sbb
inc
inc
shl
add
dec
shl
pop
cdq
mov
repnz
rcr
gs
(bad)
hlt
xchg
pop
or
push
daa
daa
hlt
mov
or
push
mov
nop
fistp
dec
cmp
pop
sbb
ficom
mov
shr
pop
adc
loope
xchg
int3
sub
scas
repz
add
sbb
cmp
iret
(bad)
fbstp
mov
ja
xchg
test
je
push
or
movs
sbb
lea
inc
add
repz
inc
mov
and
inc
pop
mov
cmp
fs
mov
jno
sub
pop
adc
cmp
(bad)
(bad)
mov
add
mov
sub
adc
in
mov
movsx
or
mov
cmc
adc
and
sahf
repz
lods
(bad)
retf
xchg
shl
inc
in
into
cmc
pop
jle
imul
(bad)
mov
pusha
jbe
cmp
not
aaa
sbb
sbb
cmp
mov
jecxz
mov
mul
mov
mov
jmp
adc
jge
icebp
xor
das
in
pop
push
fstp
xchg
sbb
retf
sub
xor
lods
ret
push
jmp
mov
ror
push
loope
jmp
imul
fiadd
pushf
sbb
idiv
mov
mov
push
xchg
mov
les
push
push
pop
into
pop
mov
or
adc
cmp
inc
jg
sub
aas
ror
lock
pop
mov
dec
push
inc
into
das
dec
imul
adc
mov
ret
aad
std
push
inc
cmp
push
les
stc
mov
arpl
or
pop
push
xor
or
rcl
push
adc
dec
mov
fs
out
jns
lds
addr16
mov
inc
fsub
jb
or
jge
sbb
add
outs
inc
or
(bad)
retf
int3
loop
or
out
push
pop
das
sub
call
(bad)
adc
mov
mov
pop
pop
arpl
popa
jns
push
or
mov
cmp
call
(bad)
cmps
dec
mov
daa
xchg
cmp
adc
xchg
jbe
dec
or
inc
add
jmp
ret
mov
or
(bad)
(bad)
mov
fsubr
and
adc
inc
call
sar
movs
push
push
mov
jl
stc
push
xor
xchg
sbb
adc
test
mov
int3
daa
std
jns
aad
aam
jg
or
xchg
lock
push
pop
outs
retw
outs
fimul
push
leave
push
xchg
loope
and
push
rcl
ja
mov
jno
retf
stos
sbb
pop
xor
and
daa
sbb
call
jbe
jmp
mov
add
adc
pusha
retf
arpl
jge
mov
(bad)
jo
or
stos
cdq
add
push
mov
sahf
(bad)
dec
mov
jb
stc
iret
movs
test
aam
pop
adc
ins
xchg
out
mov
fninit
movs
out
mov
jbe
dec
jb
lea
pop
jge
in
inc
sbb
mov
jle
ss
adc
icebp
cmps
retf
shl
jle
loop
xchg
les
cdq
loopne
jecxz
mov
dec
and
retf
idiv
adc
sub
fadd
pop
lods
sbb
sub
aaa
(bad)
pop
xor
pop
std
cmp
jno
hlt
rcl
gs
retf
inc
and
pop
mov
icebp
inc
or
inc
loop
jecxz
call
push
mov
sub
stos
outs
imul
jl
mov
and
retf
push
addr16
mov
pop
xchg
cmp
mov
dec
shr
in
mov
mov
ins
retf
add
icebp
jmp
mov
test
xor
jg
das
addr16
jle
sub
fsincos
add
pop
enter
mov
popa
dec
sub
pusha
arpl
fdivr
pop
les
dec
mov
jge
sbb
pop
movs
xor
addr16
jle
add
fwait
pop
imul
scas
shl
cmp
fbld
outs
jae
mov
popf
xor
test
ficom
imul
push
pop
push
jge
sbb
push
xchg
mov
das
jno
mov
xchg
aaa
pop
dec
jno
push
xchg
hlt
stos
xchg
fistp
dec
adc
pusha
loop
call
inc
setae
push
jmp
mov
jecxz
shl
sbb
adc
xchg
scas
adc
outs
adc
daa
pop
popa
lds
repz
daa
jb
mov
push
mov
sbb
push
mov
test
sbb
call
fistp
imul
add
rcl
ss
and
mov
inc
(bad)
pop
scas
test
push
stos
js
dec
add
mov
push
push
push
push
sbb
(bad)
jnp
inc
cwde
into
lds
test
sub
push
ja
popf
rol
push
sbb
add
pusha
mov
inc
jne
or
test
inc
cmc
mov
pop
lock
(bad)
mov
stos
repnz
push
xor
jp
push
dec
fs
nop
mov
inc
mov
adc
rcr
sub
ja
out
mov
xchg
cdq
mov
lock
inc
sbb
sub
popa
es
sar
leave
add
xchg
push
mov
dec
or
dec
inc
xchg
loope
mov
mov
movs
(bad)
fcmovnu
xchg
xor
rcl
fstp
(bad)
jecxz
sub
dec
jl
jp
push
cmp
sub
or
dec
repnz
cmp
fwait
sub
nop
mov
ret
mov
pop
mov
std
imul
mov
fsub
pop
mov
pop
adc
fdiv
add
xchg
sub
pop
xor
jbe
pop
call
cld
xchg
imul
lods
adc
sub
sahf
mov
into
into
aas
sub
inc
push
cmps
ret
pop
rol
and
loopne
inc
test
mov
mov
cmp
call
cli
add
adc
out
sbb
add
in
jmp
dec
rcr
cmp
leave
in
clc
out
adc
pop
rcr
jno
add
jmp
adc
inc
jmp
(bad)
nop
or
and
cmp
test
sub
jno
mov
les
iret
in
or
lahf
xchg
outs
lea
rcl
jp
test
pop
fwait
mov
xor
std
jne
jmp
push
out
pop
sahf
dec
in
mov
mov
sub
sub
fwait
lahf
test
cs
dec
test
pop
or
imul
pop
or
mov
sub
jo
dec
dec
outs
sbb
adc
mov
mov
ror
pop
loop
xchg
(bad)
scas
outs
pop
and
fsubr
jecxz
mov
fild
jns
pop
inc
call
push
push
and
and
out
es
cs
mov
std
add
imul
fldcw
mov
popf
and
mov
iret
lea
stos
jge
pop
jle
test
dec
icebp
call
cmp
dec
call
mov
pop
clc
ins
mov
enter
adc
addr16
fist
xor
add
movs
xlat
or
stos
in
pop
jg
ins
loope
sub
jl
in
inc
jno
sti
or
das
mov
iret
mov
nop
adc
sbb
jbe
sbb
mov
inc
push
aas
cwde
mov
cmp
arpl
mov
cmp
mov
pusha
outs
fadd
(bad)
mov
cs
jg
or
dec
imul
pop
popa
movs
dec
adc
ret
in
movs
xchg
xchg
lods
loop
arpl
aam
mov
jmp
xchg
jno
loope
xchg
dec
jno
fild
fnstenv
xor
add
xchg
int
xlat
sbb
into
mov
cli
fs
mov
popa
ja
es
lods
push
xchg
out
ins
dec
cs
push
cmp
fcomp
mov
or
das
cmps
imul
jecxz
sub
push
mov
in
xor
pop
cmp
into
pop
test
mov
sbb
into
xor
hlt
inc
add
or
ds
xchg
push
icebp
xchg
inc
pop
sub
pop
popa
sub
xchg
rcl
lahf
rcl
neg
repnz
call
sbb
jp
mov
int
jmp
mov
mov
nop
(bad)
mov
ror
mov
mov
inc
xlat
scas
(bad)
sahf
or
sahf
sub
push
std
push
cld
xlat
inc
and
bound
pop
aam
jmp
pop
rol
add
xchg
inc
lods
std
push
push
push
aad
arpl
loope
fsub
(bad)
out
mov
sbb
stos
and
sub
xchg
dec
aaa
or
stos
jg
iret
out
test
retf
jl
push
sti
cmp
xchg
push
jns
inc
mov
scas
inc
imul
fisubr
sti
ret
(bad)
in
in
movs
adc
cmp
jge
cmps
and
out
mov
fist
addr16
cmps
loop
pop
aam
adc
fwait
or
ror
or
imul
out
cmps
sbb
adc
les
pop
push
inc
or
adc
call
sub
dec
enter
jb
cli
jo
add
pop
xchg
aam
cli
or
mov
mov
(bad)
push
cmp
test
out
in
and
mov
popa
cmp
repz
ret
inc
adc
push
mov
fisub
out
dec
fdiv
push
sbb
daa
mov
dec
mov
shl
jle
scas
movs
mov
(bad)
lock
sbb
hlt
jecxz
loop
or
lahf
xchg
int3
ja
hlt
jnp
push
icebp
add
shl
adc
inc
lds
mov
retf
push
pop
mov
mov
outs
stos
popa
cmc
div
fdivp
mov
adc
xchg
enter
cmp
cdq
inc
sub
mov
cs
mov
repnz
xor
add
xchg
pop
aas
fmul
add
mov
jecxz
cmp
fst
dec
mov
loop
scas
push
add
sub
xchg
add
xchg
mov
das
in
bound
jg
sar
sub
adc
outs
cld
jge
mov
push
push
xor
sub
lods
xchg
icebp
in
jno
jmp
(bad)
cmps
ja
mov
ins
ins
dec
mov
pop
mov
sbb
daa
shl
xor
arpl
mov
inc
inc
cpuid
dec
pop
cs
loop
sub
xor
jmp
or
test
dec
icebp
fcmovnbe
mov
pop
push
xchg
inc
rol
pushf
sbb
cmp
xchg
clc
es
mov
gs
and
cmp
das
int3
ja
adc
cdq
add
pop
mov
loopne
repnz
mov
dec
push
jge
xlat
loopne
dec
push
shl
mov
adc
push
mov
inc
mov
jae
xchg
jbe
jne
ja
xor
inc
mov
outs
xchg
fldcw
jmp
ror
xor
mov
ins
lods
in
sti
dec
and
xor
(bad)
push
ss
(bad)
(bad)
and
fs
mov
sbb
sub
cdq
xor
pop
sti
push
push
and
scas
pop
in
and
fld
sbb
cmp
or
push
mov
nop
sub
push
push
bound
(bad)
call
pop
mov
je
or
cmp
ret
mov
fisttp
mov
mov
add
fild
add
pop
scas
mov
aas
sub
js
or
rcr
mov
and
sti
lea
icebp
dec
xchg
pop
(bad)
mov
lock
in
push
fcomp
aad
icebp
(bad)
sbb
pop
stc
test
stos
sbb
retf
imul
xor
call
pop
dec
inc
test
push
lea
push
mov
jno
adc
or
mov
jmp
loope
pop
mov
pop
aad
scas
aad
iret
dec
mov
jns
js
in
shr
aad
jmp
or
push
lods
es
sahf
pop
dec
fld
xor
arpl
xor
int3
das
inc
jns
adc
pop
xor
xchg
iret
inc
out
ror
bound
addr16
pop
jg
xor
dec
or
mov
rcr
mov
ins
push
rcl
or
mov
dec
inc
push
(bad)
jb
out
sub
jae
adc
bound
cmp
cwde
add
dec
test
mov
(bad)
push
sub
jl
loope
dec
sub
ds
out
fdivr
pusha
dec
int
add
mov
inc
scas
sbb
xchg
mov
mov
clc
aas
rcr
mov
pop
mov
(bad)
ds
xor
int3
bound
push
xlat
leave
cli
enter
inc
sar
pop
and
pop
into
jno
mov
retf
aad
and
mov
mov
clc
jns
nop
iret
lds
scas
out
inc
push
jecxz
jl
and
out
fcomp
sbb
stos
(bad)
(bad)
or
and
sub
jmp
idiv
sub
fiadd
pop
jo
fistp
lea
mov
mov
hlt
mov
mov
xor
dec
xlat
imul
int3
test
lods
push
lds
and
mov
sub
int3
repz
mov
in
add
mov
cli
adc
xchg
pop
cmp
dec
xor
(bad)
push
mov
or
aam
shl
sub
arpl
fbld
push
or
sbb
xchg
repnz
mov
lods
jmp
in
xchg
cmp
clc
imul
in
idiv
sbb
xchg
(bad)
adc
cmp
push
(bad)
xchg
sub
xchg
in
call
adc
aad
dec
add
ins
in
jno
std
mov
ja
rol
adc
loop
pop
movs
mov
pop
lods
ds
(bad)
into
xchg
push
in
push
sub
cld
stos
or
cmp
cmp
inc
or
shr
pop
xchg
jle
pop
mov
pop
stos
mov
xlat
lods
scas
pop
and
and
out
cmp
les
out
sub
(bad)
jmp
jmp
jbe
pop
addr16
sub
add
fdiv
and
in
cmp
out
call
mov
jns
(bad)
cmp
mov
xlat
sub
jg
xchg
sub
xchg
scas
mov
repz
jle
dec
int
jmp
xlat
dec
stc
fstp
add
rol
add
xchg
loope
sub
sar
loop
push
or
cmp
repz
imul
xor
popa
in
xor
mov
lahf
mov
dec
mov
xchg
stc
or
aaa
mov
cli
or
lea
mov
pop
adc
mov
aam
adc
data16
xor
rcr
ja
mov
and
lock
fwait
pop
test
enter
pop
out
bound
dec
push
imul
xor
aad
les
out
inc
sbb
ins
jmp
(bad)
ds
xor
aaa
jno
jg
inc
daa
push
adc
bound
ins
movs
xchg
fidiv
cld
dec
imul
xor
and
mov
dec
sbb
in
inc
mov
fadd
mov
fimul
pop
mov
ret
(bad)
repnz
add
loope
fcom
jl
test
lock
mov
jl
xlat
adc
adc
push
imul
clc
mov
xor
sub
and
push
xchg
push
jnp
mov
add
(bad)
xchg
test
mov
movs
and
jae
imul
sub
cdq
popa
retf
(bad)
jb
fwait
mov
pushf
cmp
or
push
ss
mov
out
in
xchg
mov
lock
inc
dec
mov
mov
adc
repnz
popa
(bad)
cld
call
add
out
fnstcw
add
lds
or
rcr
shr
sbb
mov
fs
in
mov
jl
pop
sbb
dec
(bad)
jno
cs
xor
pop
pop
fld
fwait
aam
sub
mov
xchg
or
sbb
inc
jmp
and
push
and
test
push
into
mov
test
and
push
loop
int3
mov
mov
fld
and
cmp
jno
or
das
mov
lock
mov
xchg
imul
mov
ficom
xchg
pop
psadbw
fwait
mov
imul
mov
imul
aad
mov
xchg
jle
js
jne
gs
fld
adc
repnz
sbb
add
and
ins
nop
xor
xchg
stos
xchg
out
or
add
(bad)
cmp
xchg
pop
jmp
sbb
xor
jbe
dec
mov
jno
sbb
sbb
add
stc
dec
hlt
cs
inc
dec
into
xor
pop
pop
popf
add
cmp
rol
ror
in
mov
mov
arpl
pop
xchg
int3
lock
mov
or
xor
adc
and
aas
inc
sar
hlt
js
imul
push
push
call
out
pop
es
inc
xlat
mov
repz
jg
add
adc
xchg
(bad)
sahf
je
push
mov
paddd
push
mov
inc
sbb
cmp
add
scas
inc
ret
add
dec
nop
ror
mov
cmc
loopne
sbb
adc
loope
xor
(bad)
dec
push
or
in
add
leave
std
inc
mul
shr
in
add
add
repnz
adc
mov
jg
push
pop
or
xor
push
push
neg
out
xchg
imul
call
dec
not
pop
fwait
push
mov
test
xlat
rcr
rol
jbe
out
std
ins
aad
adc
pusha
pop
add
call
and
call
mov
mov
lds
jne
mov
sbb
xchg
add
loop
dec
xchg
aas
call
scas
mov
aam
jo
pop
in
sbb
popa
retf
lahf
rol
nop
rol
jmp
xor
imul
icebp
addr16
fwait
inc
sub
rcl
cli
dec
out
stos
pop
mov
and
in
mov
stos
mov
test
jmp
out
repnz
add
fisub
scas
mov
sub
sbb
repnz
and
push
cmp
idiv
mov
jo
sbb
cmc
jnp
cdq
pop
mov
sbb
pop
dec
sbb
cmps
xchg
and
test
add
xchg
lea
je
movs
mov
fwait
push
popf
cmc
jb
aad
and
jle
push
aam
and
stc
dec
outs
(bad)
shl
(bad)
pop
ds
pop
cmp
out
or
mov
test
dec
xchg
loop
shl
hlt
xchg
icebp
lods
sahf
jno
(bad)
cs
xchg
cwde
test
enter
push
push
dec
retf
jle
pop
mov
fisub
mov
push
pop
jg
xor
in
dec
clc
std
adc
cmp
call
or
call
inc
and
adc
outs
push
out
mov
push
cld
fst
inc
mov
aas
das
das
aaa
jbe
ret
sub
inc
adc
sbb
iret
xchg
mov
sbb
cli
or
sub
push
loop
adc
sub
push
retf
sbb
xor
cmp
mov
mov
stos
fwait
jp
sbb
push
movs
call
add
call
stos
dec
inc
pop
ds
ds
push
scas
dec
adc
imul
test
dec
call
sbb
lahf
ret
xor
cmps
mov
kmovb
(bad)
dec
adc
mov
pop
pop
mov
(bad)
jle
jno
jne
push
mov
sbb
and
(bad)
movs
xor
pop
or
sub
or
test
lods
adc
icebp
fcomp
xchg
jno
cmp
in
in
mov
scas
adc
inc
iret
xor
cmps
ins
fidiv
test
xor
rcr
dec
push
cwde
jnp
daa
dec
sar
adc
call
ret
rol
jb
and
mov
call
pop
cmp
cmc
nop
fxch
rol
gs
push
loop
stos
xchg
jp
idiv
inc
test
rol
fs
popf
in
inc
push
cmp
pusha
stos
lea
div
sub
ins
cmc
cdq
cmp
sub
loopne
add
loop
das
outs
xchg
mov
ds
sbb
mov
fadd
fwait
bound
mov
fsub
mov
cmp
mov
push
dec
add
add
cmp
(bad)
(bad)
mov
xor
call
jns
xor
inc
repnz
jge
loopne
or
or
fwait
(bad)
out
lods
pushw
(bad)
cmps
movs
lock
in
push
sub
cmp
inc
vandpd
sbb
ror
xor
cmps
jge
pop
jg
adc
pop
test
push
sub
and
iret
cli
lods
hlt
mov
test
cwde
sub
call
jge
in
gs
push
outs
inc
lods
inc
sub
and
mov
jne
ds
sbb
rcl
test
stc
sub
jl
cmp
or
pop
repnz
push
xlat
(bad)
aas
daa
mov
cmps
lods
jnp
pop
rol
ins
cmc
mov
int
or
and
add
ret
or
ds
add
imul
loope
fwait
ret
xchg
cmp
(bad)
or
adc
aas
mov
dec
data16
or
fwait
add
push
hlt
or
loope
xlat
mov
aaa
adc
ins
mov
xchg
fsubr
xor
(bad)
neg
adc
pop
jno
mov
daa
pop
lods
mov
pop
mov
rcr
jmp
imul
fisub
mov
add
sub
repnz
jp
(bad)
movs
sub
out
xchg
outs
int
mov
rol
add
xchg
add
inc
out
inc
mov
popa
popf
pop
cmp
jge
enter
cmp
retf
push
pusha
push
sub
add
pop
adc
repnz
fbstp
and
mov
mov
push
fst
test
clc
stos
sub
mov
mov
std
sbb
jmp
call
mov
pop
lds
add
lods
cmc
cmp
dec
or
retf
mov
mov
or
es
push
add
push
mov
loopne
sti
sub
adc
add
lods
or
push
xor
in
test
retf
xor
add
sub
lods
out
jp
sbb
jo
loopne
or
lds
xor
sbb
lods
cmc
adc
jo
in
pop
jo
dec
push
adc
dec
cmp
cmp
dec
mov
inc
jg
cmps
push
and
mov
inc
cmps
pop
xchg
lock
fwait
add
shr
in
ss
mov
sub
inc
ror
xchg
xor
call
push
add
dec
sub
inc
pop
jns
not
xchg
gs
leave
call
cld
adc
test
bnd
jno
xchg
sbb
nop
sub
les
jle
sahf
add
sub
(bad)
outs
inc
stos
ror
adc
xchg
and
sub
aad
add
in
lds
inc
adc
pop
test
mov
shr
or
pop
aam
adc
fimul
out
dec
dec
push
xor
mov
iret
(bad)
or
push
push
pusha
enter
sbb
cmps
dec
sti
jg
aam
add
ss
popa
rcl
inc
pop
add
ss
icebp
mov
loope
mov
pop
loop
pop
adc
lds
arpl
bound
xor
dec
mov
and
xchg
xchg
outs
out
iret
(bad)
es
jmp
ds
or
mov
jp
imul
push
shl
jmp
pusha
std
adc
call
int3
cdq
pop
test
lods
popa
mov
in
or
popa
arpl
enter
pop
fidivr
dec
and
sub
pop
test
jp
mov
out
mov
sub
and
adc
xor
fnstcw
jle
xchg
aam
add
sub
jne
push
mov
dec
(bad)
mov
dec
imul
test
adc
vpshufd
test
push
and
cmp
mov
sbb
(bad)
and
jbe
mov
(bad)
cmp
aam
mov
add
fnstenv
pop
adc
adc
in
retf
sub
imul
push
loope
cli
xor
hlt
in
pop
cmps
int
js
xor
aad
mov
jmp
add
dec
(bad)
lock
cld
mov
mov
fisubr
rol
fdivr
into
mov
test
push
aaa
cmp
or
call
ins
push
sbb
fst
jbe
leave
mov
fwait
mov
fidiv
mov
retf
mov
add
sub
push
sub
call
adc
pop
dec
dec
sub
push
enter
sar
loop
jle
cmps
repz
jge
mov
jmp
pop
adc
outs
int
sti
ret
fidiv
dec
imul
adc
push
push
and
xlat
orps
int
or
sbb
xchg
rol
in
fidiv
repnz
xor
call
and
add
adc
lods
(bad)
cdq
push
pop
xchg
and
das
push
fisubr
sbb
call
push
lods
adc
ja
jge
jge
cmp
pop
pop
mov
imul
(bad)
pop
push
cli
test
and
int3
ret
jl
and
out
xor
daa
inc
fidivr
mov
mov
fisttp
cmc
js
cmpxchg
xor
loopne
call
pop
fidiv
mov
fisubr
test
and
adc
test
and
gs
cmps
fstp
aam
inc
and
xchg
add
daa
mov
push
jae
mov
inc
push
das
out
fnstsw
loopne
pop
in
gs
aad
push
(bad)
jl
pop
mov
loope
mov
stos
ficom
out
scas
cmp
add
(bad)
dec
adc
add
cmc
int3
je
gs
add
push
cs
mov
shl
mov
pusha
xchg
shl
mov
in
add
push
inc
jnp
xchg
inc
xchg
sbb
cmp
jl
add
lods
in
pop
mov
xchg
fwait
pop
inc
push
mov
mov
repz
add
inc
cmp
loope
cli
arpl
arpl
inc
(bad)
out
mov
(bad)
out
xchg
jmp
push
out
mov
js
in
sub
mov
nop
and
inc
loope
push
xchg
aad
call
and
cmp
test
adc
imul
repz
dec
test
push
mov
arpl
mov
sub
jnp
cmp
add
stos
mov
inc
iret
or
mov
ss
loop
rol
stc
lea
cli
jne
cmp
mov
call
iret
mov
pop
inc
dec
retf
sbb
ffree
pop
pop
loopne
xor
les
jb
jle
xchg
(bad)
into
mov
test
sbb
jg
icebp
xlat
mov
test
sbb
inc
cmp
loop
(bad)
retf
and
clc
add
mov
xchg
cld
sub
movs
dec
(bad)
mov
ror
dec
outs
das
mov
mov
movs
mov
ror
inc
dec
inc
(bad)
je
sbb
mov
mov
jecxz
push
add
call
push
mov
(bad)
or
loopne
xor
xchg
(bad)
ja
hlt
and
dec
lea
(bad)
call
repz
fnstcw
add
push
lock
loopne
and
ja
mov
fdiv
div
jecxz
retf
fs
adc
xor
push
neg
add
dec
pop
(bad)
nop
xchg
test
div
or
movs
inc
jo
mov
add
mov
and
sbb
inc
in
aad
inc
sar
fsubr
sbb
dec
into
in
fdivr
pop
stos
mov
pop
mov
push
call
lock
test
shl
test
sbb
push
push
jmp
pusha
fcom
(bad)
(bad)
addr16
movq
fadd
push
jp
xchg
xor
or
retf
mov
or
sbb
scas
cmps
and
and
mov
fcmovnbe
jmp
fadd
mov
push
mov
push
les
nop
in
mov
ja
movs
ret
lds
xor
jnp
push
std
fdivr
in
(bad)
clc
xor
xor
mov
out
adc
out
dec
push
dec
cwde
repz
pop
pop
fwait
cld
aaa
inc
pop
mov
mul
aad
pop
or
inc
dec
rcr
test
cli
stos
fwait
(bad)
retf
sub
sbb
fisubr
xor
pop
cmps
(bad)
sub
cmps
es
jmp
sub
cmp
mov
std
dec
shr
test
fstp
or
or
adc
cld
idiv
in
sub
imul
mov
sub
out
mov
xlat
popa
movs
sub
ds
inc
sub
cmps
push
xchg
(bad)
jg
pop
cmp
jle
xchg
mov
ja
loope
imul
push
jg
add
sub
stos
cwde
xor
cmc
iret
push
dec
or
inc
cmp
loop
popa
mov
push
clc
cwde
pop
jmp
mov
aas
or
xor
test
xchg
inc
iret
cmp
retf
(bad)
cli
dec
cli
or
inc
cmc
push
pop
push
lahf
sbb
(bad)
cli
in
js
inc
ds
mov
push
sbb
xor
sar
outs
add
cmps
and
fld
sbb
(bad)
dec
out
sub
pop
in
xchg
ror
int3
jmp
jmp
mov
daa
push
lahf
sbb
nop
sub
(bad)
out
push
pop
pop
in
(bad)
xor
push
cmps
adc
add
loopne
arpl
fbstp
fisttp
jo
shr
shr
sbb
pop
sub
dec
pop
jmp
and
movs
jb
loope
in
mov
adc
je
xchg
shl
mov
jge
and
pop
arpl
ins
in
cmc
pop
in
mov
add
mov
clc
inc
repnz
or
nop
push
sub
repnz
lock
or
or
scas
nop
mov
sub
pop
or
pop
mov
ret
stos
add
dec
ss
into
add
cs
xchg
(bad)
mov
hlt
in
out
ss
fldpi
xchg
jne
inc
inc
xchg
dec
sbb
int
sbb
jmp
cwde
lea
push
mov
add
stos
push
push
inc
mov
enter
(bad)
mov
sub
lock
enter
cmp
cmp
pop
data16
shl
mov
inc
popa
xor
add
adc
push
push
imul
jl
mov
pop
xor
cli
aas
cmc
cmp
mov
ror
bound
or
xchg
call
imul
xor
(bad)
neg
mov
adc
mov
inc
out
mov
add
test
test
das
jg
test
push
cwde
lds
test
aas
xchg
sub
movs
push
pop
(bad)
jb
xor
pop
push
push
push
mov
or
and
shr
jae
mov
ficom
mov
jg
sub
xchg
std
test
sub
push
movs
leave
cld
js
cmp
adc
mov
xchg
dec
push
jo
mov
nop
mov
stos
jb
push
lds
mov
sub
mov
ja
pop
lock
mov
fmul
repz
sti
popa
or
hlt
(bad)
push
in
popf
mov
mov
mov
shl
outs
jg
xchg
icebp
mov
mov
inc
adc
pop
and
icebp
xchg
(bad)
outs
xchg
and
mov
iret
sub
xor
stos
imul
loopne
shl
mov
xchg
test
stos
add
or
std
nop
sbb
adc
mov
mov
inc
cmps
ret
pop
jo
push
or
dec
push
mov
cwde
dec
icebp
mov
or
xchg
in
xor
fidiv
(bad)
xchg
daa
arpl
push
mov
or
pop
mov
adc
fadd
or
mov
in
mov
ins
pop
cmp
mov
push
inc
push
(bad)
aam
es
push
sahf
dec
lea
frstor
popf
stos
adc
test
push
push
sahf
ins
lds
jae
test
int
stos
sbb
pop
not
sbb
mov
ins
jg
mov
pop
push
pop
pushf
inc
das
xor
gs
push
push
jmp
jmp
mov
stc
jnp
mov
lock
dec
rcl
mov
mov
pop
cwde
and
in
dec
je
fmul
dec
jae
jecxz
adc
adc
mov
jmp
aaa
test
xchg
xchg
sub
xchg
in
mov
fcomp
mov
in
call
mov
shr
inc
not
mov
daa
aas
test
inc
stos
inc
cmp
xor
sbb
sub
(bad)
int
imul
xor
adc
inc
clc
repnz
cmp
fadd
pop
sub
and
cld
sub
xor
adc
or
cdq
xor
push
repnz
mov
daa
xor
pop
outs
jmp
or
jmp
xchg
rcr
adc
scas
pop
jl
push
in
lds
push
xor
cmp
fwait
sbb
and
jb
adc
test
adc
dec
push
je
ds
(bad)
cli
out
xchg
rcl
and
jecxz
sub
(bad)
cs
mov
std
cli
in
ret
int
push
cdq
or
mov
or
shr
inc
mov
loop
ins
push
jno
push
mov
in
cmovne
and
push
cmp
(bad)
jbe
add
cmps
pop
mov
enter
in
cmp
test
adc
dec
cld
cmps
xchg
je
hlt
sub
ins
fbstp
popf
movs
pusha
ror
push
jle
mov
jne
mov
popa
arpl
fld
cmp
xchg
push
dec
ins
aas
dec
and
fimul
cld
sub
je
add
mov
inc
sti
out
mov
sar
sbb
(bad)
in
shl
ss
pop
sub
jecxz
cld
and
scas
idiv
jp
adc
pop
fisttp
xchg
dec
outs
dec
inc
mov
inc
cmp
cwde
ret
lock
cmp
push
dec
sub
jecxz
push
mov
fs
nop
sbb
jecxz
mov
dec
push
lock
jg
enter
or
jne
and
jecxz
mov
stc
int
xor
cld
outs
mov
xor
ins
outs
dec
(bad)
out
sub
xor
push
dec
dec
cmp
int
inc
xor
arpl
mov
and
adc
cmp
jle
and
lahf
cmp
(bad)
sbb
cdq
mov
push
je
scas
xchg
cmp
sbb
mov
lds
dec
pop
and
and
jg
je
out
or
mov
shr
test
inc
das
fistp
test
add
adc
fld
jo
fwait
mov
imul
cmp
adc
adc
mov
push
cmps
fwait
int
adc
dec
lock
cmps
pop
mov
mov
loop
lea
mov
pop
mov
push
int
xchg
cdq
cdq
mov
cmp
push
nop
xchg
fs
jmp
nop
mov
xchg
mov
out
mov
(bad)
stos
cmps
xchg
inc
cli
dec
test
adc
fwait
sbb
sar
cmp
adc
lock
aas
icebp
mov
or
dec
pop
push
inc
movs
outs
jmp
mov
pushf
cld
fwait
mov
add
sti
push
add
pop
jmp
lmsw
(bad)
jbe
mov
retf
inc
add
bnd
push
adc
stc
stos
add
cmp
stos
shl
dec
push
or
iret
scas
repnz
dec
adc
push
or
pop
cli
inc
ins
mov
rcl
or
pop
aaa
and
jbe
in
mov
in
stc
sbb
add
(bad)
mov
pop
push
jae
push
inc
out
cmp
and
scas
fsub
popf
cmps
sar
dec
in
test
nop
(bad)
js
or
lds
mov
loop
sar
fs
in
pop
sub
sbb
and
lock
push
xchg
cmp
in
jae
outs
out
add
out
sti
add
out
sub
ins
fadd
call
mov
cmp
cmp
mov
call
cmp
out
(bad)
retf
push
or
loop
test
arpl
outs
sub
jle
test
sti
mov
dec
jmp
ret
pusha
add
cmp
dec
adc
xchg
mov
shr
cld
stos
mov
inc
sahf
mov
push
sbb
cmp
(bad)
out
(bad)
mov
jmp
push
retf
xor
dec
aad
int3
mov
xchg
test
xor
test
cdq
mov
movs
push
cmp
dec
jnp
loop
outs
cmps
sbb
cmp
aam
(bad)
ja
out
(bad)
mul
jmp
mov
jle
stos
das
mov
pop
inc
repnz
push
add
pushf
inc
lods
aaa
js
jp
push
mov
adc
mov
xchg
and
xchg
mov
cmc
sub
push
shl
out
cdq
sahf
mov
jmp
data16
push
leave
sbb
cmp
out
jo
mov
mov
mov
or
daa
(bad)
test
adc
inc
jae
push
add
movs
xor
jge
rol
and
popa
mov
loopne
sub
cmp
pop
pop
ficom
cmc
lods
mov
imul
mov
inc
call
adc
xor
push
(bad)
cmp
cdq
jb
out
adc
mov
xor
lock
and
out
or
cli
or
jl
test
xor
sub
div
sub
xor
(bad)
js
mov
lahf
add
jno
popf
xchg
and
test
hlt
dec
arpl
arpl
and
test
cwde
jmp
idiv
xchg
push
out
xor
jae
shl
pop
call
in
arpl
push
shl
in
fidivr
hlt
je
iret
jae
pop
jle
cs
sar
add
mov
in
cmp
(bad)
js
cs
dec
xor
cmp
jnp
cmp
push
mov
lods
sbb
aaa
mov
lea
push
pop
jnp
push
add
outs
xchg
cmp
xchg
outs
out
cmp
adc
sub
mov
pop
enter
dec
(bad)
out
xchg
and
cwde
and
push
cld
mov
jl
int3
loope
and
lock
stc
hlt
add
lods
adc
outs
cmp
mov
test
mov
sbb
jne
mov
xchg
sbb
xor
repz
mov
sbb
xchg
pushf
int
or
outs
add
mov
or
nop
lahf
popa
inc
clc
dec
sub
push
jb
int
sbb
or
fadd
lds
lds
(bad)
xchg
mov
lods
clc
pusha
arpl
add
or
add
fst
in
sub
jmp
sbb
outs
dec
cmp
imul
add
mov
(bad)
xor
inc
das
ret
mov
mov
xor
jg
xchg
js
pop
dec
push
ret
inc
sti
and
ret
xchg
and
mov
cmp
pop
adc
test
loop
xchg
add
shr
ins
xchg
test
cdq
cwde
mov
or
mov
cmp
jb
jmp
stos
pop
aam
(bad)
fisub
ins
cmp
jns
das
shr
mov
and
lods
jle
pushf
lock
rcr
in
mov
pop
sub
out
std
sub
inc
stos
xchg
imul
sar
ror
or
(bad)
aaa
dec
xchg
stc
stos
sub
aas
lock
outs
inc
dec
mov
and
jl
(bad)
es
and
sti
mov
sub
or
inc
sub
mov
add
not
push
mov
sar
mov
sbb
inc
add
lods
mov
push
adc
mov
or
lods
(bad)
iret
fldpi
(bad)
loopne
xchg
sub
push
push
mov
xor
mov
fstp
sbb
outs
ins
xor
icebp
push
push
(bad)
sti
call
iret
and
dec
daa
shr
loopne
xchg
sub
das
call
das
push
sti
jb
cmp
fnstsw
and
lock
jae
mov
pop
test
daa
jle
xlat
xor
xor
add
pop
retf
js
popf
pop
in
or
outs
(bad)
repnz
jb
jp
cs
dec
jl
push
xchg
push
lahf
xchg
test
pxor
dec
outs
fidivr
inc
mov
sub
ins
ss
loopne
dec
jl
adc
fmul
jo
pop
in
push
adc
sbb
pushf
jbe
inc
sbb
mov
ss
push
lock
jl
call
mov
pop
lea
in
mov
xor
das
push
xor
movs
cmps
fdivr
dec
sbb
clc
sbb
mov
popa
adc
mov
mov
addr16
movs
rol
pop
jnp
mov
test
mov
mov
fistp
mov
cmp
adc
or
dec
dec
pusha
cmp
movs
inc
adc
ficomp
sahf
into
fsub
xor
jmp
mov
pop
xchg
ja
fild
adc
out
or
adc
or
mov
xchg
aad
cmp
lahf
push
push
cmp
cmp
mov
dec
add
ret
aas
(bad)
aaa
repz
xchg
nop
repnz
clc
out
out
mov
pop
inc
mov
push
adc
js
loopne
mov
cmp
test
pusha
not
add
xchg
mov
xor
addr16
adc
retf
add
mov
(bad)
pop
jge
cmps
fdivr
push
loope
js
or
mov
shl
cmp
(bad)
mov
call
ret
in
mov
inc
rcr
cmp
push
add
inc
retf
and
iret
push
and
push
push
retf
outs
xor
sbb
test
loopne
cli
push
int
push
pop
leave
mov
pop
scas
adc
hlt
or
sbb
mov
rcl
mov
mov
int3
aas
push
dec
int
xor
dec
or
repnz
add
lds
mov
and
mov
test
add
ins
inc
mul
jmp
stc
sbb
xchg
push
fild
adc
and
push
cmp
shl
jp
fs
out
mov
jecxz
test
loop
xor
data16
adc
call
inc
sahf
and
in
shl
fucomp
bound
(bad)
fdiv
in
test
arpl
fcom
fcomp
retf
adc
(bad)
test
ins
int3
inc
mov
cmp
inc
test
out
pop
in
cmp
into
loope
retf
sbb
push
inc
dec
jno
inc
pop
jne
dec
sbb
mov
or
push
into
mov
inc
hlt
stos
mov
xchg
ins
out
adc
fiadd
leave
adc
mov
vcvtsi2sd
and
rcr
in
idiv
enter
mov
js
call
inc
mov
mov
outs
adc
out
ror
imul
mov
(bad)
pop
or
push
movs
test
or
jle
call
hlt
(bad)
and
pop
cli
pop
lock
dec
fwait
and
xor
shl
ret
cmp
add
lds
mov
sbb
movs
outs
mov
fucompp
jp
cmp
push
shl
int
dec
je
arpl
add
pop
dec
aad
stos
lock
shl
xchg
inc
(bad)
push
rcr
dec
add
aaa
call
dec
sbb
test
gs
hlt
(bad)
mov
mov
lock
hlt
in
inc
or
pop
ret
test
aaa
je
and
bound
movs
jmp
xor
fidiv
retf
mov
sub
xor
int
cdq
xchg
push
ins
retf
pop
fstp
xor
add
stc
and
aad
arpl
ds
std
hlt
in
ins
cmp
call
mov
mov
lds
lahf
inc
shr
ror
fnstsw
test
(bad)
ja
cmp
jbe
int3
daa
int3
cdq
mov
and
dec
es
inc
add
popf
pop
(bad)
fisubr
push
aam
and
mov
loop
into
or
and
jmp
xor
out
cdq
shl
or
dec
test
add
sbb
xor
jb
sub
adc
or
xlat
inc
dec
pop
xlat
mov
push
jmp
or
xor
sub
pop
in
retf
inc
ins
sub
loopne
pushf
icebp
repz
out
and
scas
jge
mov
sti
movs
mov
xchg
ficom
sub
push
inc
pop
cmps
aas
gs
mov
mov
mov
lock
jnp
dec
and
in
pop
ins
shl
ja
mov
xor
shr
pushf
les
jmp
or
inc
or
dec
pop
cmps
je
mov
sbb
or
(bad)
xchg
test
mov
and
pop
adc
ja
out
pop
iret
and
jo
aad
add
xchg
push
ret
sbb
inc
icebp
mov
test
jmp
dec
gs
and
jae
xlat
(bad)
scas
mov
ins
mov
push
fs
and
imul
xor
add
cld
loop
jae
xchg
xchg
clc
xor
gs
scas
cmps
sahf
pop
rol
cs
fsubr
imul
and
int
test
mov
out
aam
sbb
cmc
mov
call
inc
pop
mov
add
mov
mov
call
ror
xchg
pop
sub
pusha
xor
mov
sar
mov
pop
pop
js
rcr
dec
dec
push
cdq
dec
add
mov
fdiv
jmp
rcr
jg
fimul
add
mov
jb
push
add
add
and
pop
or
mov
clc
mov
mov
ret
aad
push
adc
or
not
popf
pop
mov
mov
or
stc
mov
push
adc
(bad)
in
test
and
arpl
jns
xor
mov
lock
scas
pop
popf
aad
push
dec
and
mov
ins
push
adc
dec
xor
lods
movs
xlat
pop
push
lods
jg
xchg
mov
pop
retf
bound
push
inc
loope
daa
add
arpl
and
cwde
inc
cmp
fistp
sub
aam
bnd
loope
jle
push
push
mov
aaa
jp
shl
test
and
fcomp
or
ret
aam
out
shl
aad
dec
arpl
daa
mov
aam
addr16
xchg
mov
test
stos
mov
inc
inc
dec
ins
sbb
scas
add
stos
xor
(bad)
out
out
adc
jecxz
mov
and
mov
push
xchg
sbb
mov
fldcw
shr
pop
mov
js
movs
pop
mov
iret
sahf
stos
or
ss
adc
jp
mov
popf
(bad)
jmp
es
test
jge
dec
fidiv
mov
adc
mov
jns
lahf
(bad)
stos
retf
sahf
mov
hlt
dec
inc
xchg
mov
(bad)
fsubr
pop
mov
cmp
out
push
or
test
add
pcmpgtb
test
pop
outs
sub
ret
sub
out
pop
lods
pop
fadd
adc
adc
out
mov
test
lock
(bad)
rcr
xor
shl
pop
push
push
inc
sar
push
ins
pusha
mov
fwait
pop
in
out
int
cmc
xlat
pushf
mov
dec
adc
add
mov
arpl
jne
enter
stos
mov
imul
out
pop
or
push
jmp
popa
sub
cmp
(bad)
jecxz
repz
mov
(bad)
lahf
imul
inc
(bad)
and
xchg
cwde
outs
pop
and
popf
push
ret
icebp
sahf
jle
pop
movsx
in
pop
inc
movs
add
push
sti
adc
and
lock
mov
aas
jno
sar
xchg
dec
outs
daa
xor
aaa
pop
fmul
sub
cmc
out
movs
loope
inc
inc
mov
sbb
xor
stos
jle
push
pop
stos
int3
mov
jb
cdq
sqrtps
mulps
pop
dec
push
push
movs
les
in
js
sub
and
popa
xchg
sub
push
mov
lea
icebp
hlt
icebp
jmp
add
push
add
push
dec
mov
or
xor
loop
pop
movlhps
mov
pop
jmp
jne
aam
nop
out
imul
in
push
mov
xchg
jo
jg
pop
sbb
or
pop
ficom
hlt
sub
pusha
jmp
adc
push
popf
in
(bad)
fdivr
sbb
adc
fwait
lock
xchg
xchg
adc
retf
stos
jno
retf
ret
push
sub
mov
add
pause
shr
(bad)
mov
mov
cmps
or
cmp
jns
push
dec
hlt
adc
mov
cmc
outs
pop
out
scas
cmp
call
jns
into
mov
jb
int
or
jecxz
cld
mov
into
cmps
sub
mov
xchg
fucomi
sub
out
movs
addr16
pop
or
xchg
adc
ds
pop
mov
dec
ds
cli
movs
scas
push
pop
leave
jmp
adc
cs
scas
int
mov
push
sbb
in
sbb
add
jae
(bad)
and
mov
cwde
(bad)
(bad)
pushf
cmp
std
and
ds
(bad)
xor
ror
xor
imul
ins
and
std
mov
dec
mov
sahf
cmp
fld
and
sbb
addr16
push
movs
scas
ins
mov
icebp
sub
xchg
scas
repnz
mov
icebp
mov
ret
es
sub
hlt
dec
pusha
add
dec
cmps
push
ins
mov
loope
stc
cwde
sbb
dec
sbb
jnp
mov
paddw
imul
cmps
add
ds
sub
mov
push
dec
inc
xchg
daa
inc
gs
shr
add
outs
sub
push
cmp
sbb
mov
ret
cmp
lea
xchg
xor
in
fild
pop
sbb
test
pminsw
jbe
xor
scas
xor
iret
imul
dec
gs
ds
jo
cmps
sbb
iret
pusha
ins
pop
rol
daa
sub
cwde
sub
fs
pop
dec
sti
mov
addr16
jbe
cld
sbb
push
or
sub
adc
and
jmp
mov
mov
and
sbb
jne
sbb
mov
rcl
(bad)
xor
shl
mov
or
xlat
jl
stc
and
jmp
adc
push
mov
mov
sbb
iret
xor
pop
rcr
fstp
imul
loopne
out
jbe
shr
mov
stc
cdq
add
dec
cdq
push
stos
shl
jo
jmp
cmp
push
and
aaa
es
xor
and
cli
add
int3
or
dec
mov
xor
sbb
sub
(bad)
retf
ret
inc
jecxz
sub
popf
mov
fisub
loope
stos
fld
ret
jmp
fstp
pop
mov
nop
or
cmp
xor
mov
push
(bad)
fidiv
mov
dec
inc
cmps
ja
enter
and
and
iret
sbb
or
jno
(bad)
mov
xor
and
aad
or
jbe
push
(bad)
test
adc
test
pop
sub
push
jo
xchg
pop
mov
cmp
push
mov
pop
adc
jl
jae
test
pop
fcomp
or
fwait
dec
dec
ds
sbb
stos
idiv
and
jno
jmp
dec
fmul
mov
pushf
mov
adc
adc
pop
lock
dec
ds
mov
int
loope
or
enter
stos
inc
into
les
jb
or
test
es
cmp
dec
pop
push
ja
in
and
shr
pop
nop
mov
mov
jle
imul
ss
idiv
ins
add
leave
sbb
cs
jle
cmp
xchg
(bad)
in
cmp
fwait
rol
mov
arpl
push
test
push
pop
xchg
enter
sahf
xlat
xor
pushf
mov
mov
adc
mov
fidivr
mov
and
sbb
enter
sub
scas
mov
inc
shl
adc
sar
fisttp
cli
loop
and
neg
jbe
test
ds
fcmovne
test
push
es
loop
add
jl
cmp
add
xchg
and
pop
ret
je
xchg
sbb
int3
fst
xor
and
mov
pop
xor
xchg
call
imul
or
or
data16
mov
jl
shl
jmp
cmps
mov
jmp
(bad)
push
mov
and
out
xor
sbb
cmp
repnz
cmp
(bad)
jnp
mov
adc
or
fisttp
rcr
lods
lahf
fld
mov
imul
sahf
push
push
mov
mov
and
inc
push
aas
mov
in
lods
je
jp
pushf
pop
and
pop
icebp
enter
imul
mov
outs
xchg
fmul
out
cmp
cmp
inc
movs
sbb
daa
aad
jbe
add
dec
sbb
cwde
data16
pop
arpl
ror
sub
retf
mov
cmc
mov
addr16
xor
mov
(bad)
mov
inc
xchg
xlat
test
add
retf
out
jl
and
ins
push
pop
into
rcr
pop
stos
imul
add
xchg
aas
pushf
mov
jge
pop
or
out
mov
call
std
jb
sbb
pop
movs
jno
or
sub
(bad)
mov
jno
jns
pop
push
pop
mov
clc
call
in
mov
out
mov
jae
add
es
lods
nop
fwait
dec
and
mov
call
ret
clc
or
icebp
sub
imul
in
loopne
fcmovnbe
jmp
or
into
outs
sbb
xchg
or
std
xchg
mov
inc
cmp
xchg
retf
dec
sti
sub
test
cmp
dec
mov
and
les
pop
jg
dec
dec
imul
push
cld
xor
pop
(bad)
sbb
pop
pop
psubusw
jno
fsub
hlt
mov
int3
mov
push
and
jl
lods
sub
(bad)
or
xor
mov
retf
adc
cwde
jmp
push
imul
je
imul
enter
push
sub
lahf
pop
dec
push
dec
(bad)
out
pop
fiadd
sub
sub
push
clc
inc
sbb
mov
pop
fild
fwait
mov
mov
sbb
ins
pop
fwait
push
xor
out
imul
sub
jno
xor
inc
cld
xchg
mov
fwait
jmp
xor
fs
loope
cmp
sbb
scas
xchg
push
out
js
ja
or
arpl
int
test
in
ror
mov
mov
jmp
adc
sti
shr
shr
inc
adc
inc
mov
repz
add
mov
add
aaa
jmp
stos
test
add
sahf
or
jmp
(bad)
mov
mov
loopne
inc
mov
and
icebp
push
and
sbb
in
jg
ret
mov
adc
inc
fs
shr
push
mov
out
mov
out
imul
inc
xor
pop
ss
inc
cmp
aad
test
adc
(bad)
add
mov
inc
adc
or
xor
sub
xor
mov
push
enter
jg
adc
push
jle
les
jle
cmovp
inc
pop
mov
mov
jmp
jb
(bad)
enter
int
cdq
scas
cs
stos
ds
or
cli
xor
jp
hlt
rol
xor
dec
mov
cmps
mov
inc
nop
inc
dec
call
push
dec
movs
lods
ret
std
out
(bad)
lds
aam
(bad)
xchg
rcr
mov
popa
xor
cdq
pushf
in
in
jbe
jle
test
sub
xor
cmp
lds
pop
xchg
push
cmp
hlt
or
and
cmp
daa
movs
adc
outs
pop
adc
cmc
mov
push
or
jne
xor
jo
push
(bad)
fdiv
jne
and
push
push
push
jne
fwait
cmp
fst
int3
call
hlt
or
sahf
outs
pop
jl
push
mov
out
loopne
bound
mov
mov
jb
popf
es
mov
and
mov
and
push
jp
fidivr
and
sbb
lock
mov
sbb
aaa
das
cmps
inc
pop
pop
sub
mov
into
aaa
int3
in
mov
in
jl
movs
sahf
int
rcr
cmp
nop
mov
jl
sbb
xor
cld
mov
ins
inc
popa
mov
(bad)
mov
iret
pushf
popa
add
cmp
cld
mov
lock
rcl
sbb
bound
movs
mov
or
xchg
jbe
adc
out
jo
ss
sbb
lds
movs
dec
icebp
out
(bad)
mov
mov
pop
jg
dec
gs
popf
pop
mov
xchg
into
imul
dec
or
xchg
setnp
lods
ret
mov
inc
cmp
fisub
sti
pop
in
(bad)
jns
jmp
mov
push
push
(bad)
rol
mov
jbe
sub
hlt
push
pop
stos
aad
(bad)
pushf
jnp
popf
pop
cs
call
dec
or
fwait
movs
outs
adc
movs
fisubr
fisubr
mov
lea
push
cs
enter
sbb
inc
lods
xchg
jmp
ins
ja
fxch
gs
inc
repz
cmp
cmc
inc
shr
mov
cmp
lods
mov
sahf
fnsave
out
push
mov
pusha
sbb
outs
mov
cmc
fist
loop
aam
call
jns
pop
and
mov
and
inc
or
mov
cmp
scas
mov
jbe
call
mov
jp
mov
sti
and
into
mul
jl
cdq
cmp
sub
and
mov
std
pop
mov
loopne
ja
js
das
sti
(bad)
push
cmp
mov
scas
mov
test
(bad)
push
hlt
inc
add
mov
test
xchg
dec
cmc
add
fisttp
pop
popf
push
adc
mov
clc
or
dec
adc
test
and
retf
cmps
push
inc
loop
enter
mov
(bad)
xchg
int3
je
xor
call
loopne
add
jle
xor
sar
mov
and
movs
test
add
sub
inc
cli
mov
out
inc
xor
mov
mov
pop
aas
(bad)
dec
push
mov
xchg
inc
repnz
out
mov
ds
aaa
scas
xlat
cmp
daa
push
es
stos
xchg
pop
addr16
pop
dec
aaa
and
cmovae
xchg
js
aad
mov
add
pop
fld
and
loop
sub
shl
ins
dec
rcl
inc
cdq
loope
test
cmps
push
inc
jmp
daa
neg
dec
aam
pop
cmp
je
lock
jg
jo
test
dec
adc
popf
adc
dec
pop
div
push
les
cli
pop
mov
sub
pop
adc
xchg
cmp
mov
test
jp
add
dec
cwde
cli
xlat
lahf
and
lahf
stc
jle
popf
jnp
(bad)
(bad)
fisub
inc
icebp
cdq
adc
out
pop
jno
dec
js
inc
xor
sbb
and
dec
fwait
xor
scas
cmc
push
pop
fiadd
dec
and
xchg
inc
(bad)
mov
addr16
das
xchg
clc
call
mov
rcl
scas
lea
dec
add
mov
retf
leave
movs
or
and
push
arpl
cmc
aad
cli
mov
loopne
jnp
xlat
fwait
dec
lods
dec
repz
retf
leave
int3
int3
pop
pop
outs
xlat
fadd
(bad)
icebp
dec
sub
sbb
or
lea
xchg
push
xchg
dec
cs
sub
lock
pop
and
sub
(bad)
(bad)
dec
in
ret
pop
aaa
vminpd
fdiv
adc
rcl
repz
mov
mov
or
adc
ss
mov
aaa
std
mov
ja
pop
and
sub
xchg
sbb
xor
jmp
cmps
mov
addr16
stc
push
xchg
(bad)
jne
push
xchg
retf
mov
mov
in
cwde
popf
sbb
mov
(bad)
xlat
xchg
push
out
cmps
cld
push
pop
test
lods
ja
loop
cmps
xchg
or
scas
fisttp
add
out
xlat
cwde
or
jo
xlat
push
or
ficom
add
mov
leave
cmps
pop
dec
inc
cmp
mov
rcr
mov
push
mov
jne
shr
sahf
or
(bad)
push
mov
sbb
sti
shl
cwde
adc
jp
in
dec
mov
xor
inc
dec
jb
mov
cld
iret
stos
xchg
inc
or
test
adc
ins
outs
popf
add
scas
fucom
int3
mov
and
add
je
or
push
retf
int3
pop
lea
test
jmp
xchg
jbe
or
mov
push
inc
mov
push
data16
and
push
mov
mov
sub
push
sub
and
pop
xor
push
pop
stc
call
aaa
xchg
stos
ds
out
mov
xor
fisttp
push
(bad)
push
outs
xchg
mov
adc
popa
pop
ret
adc
(bad)
or
jae
repz
int3
sub
or
inc
or
sub
add
stos
xchg
pop
mov
adc
test
mov
test
pop
xor
xor
adc
aam
(bad)
in
stc
cmp
xor
mov
js
cmp
movs
fwait
bound
jmp
cmp
jge
jo
das
ja
std
adc
popa
and
mov
mov
adc
std
jb
mov
stc
test
ins
addr16
cmp
push
movs
nop
lea
sbb
clc
(bad)
daa
xor
add
mov
iret
mov
sbb
mov
mov
ins
and
das
shr
mov
adc
pusha
mov
popf
inc
fst
fisubr
imul
sub
call
aam
(bad)
imul
jo
stc
mov
jl
sub
xlat
loope
shl
(bad)
xchg
cli
sub
sahf
mov
pop
mov
out
mov
mov
dec
pushf
push
repnz
sub
sub
xchg
dec
sbb
outs
and
jmp
dec
inc
xor
adc
call
sub
sbb
jnp
adc
ret
lahf
popf
sub
repz
mov
fst
sbb
cs
aas
in
repnz
ins
jno
mov
sbb
add
pop
or
shl
leave
je
push
push
mov
push
lea
jb
daa
xchg
pop
imul
push
mov
in
rcr
sbb
ror
pop
loopne
xor
sbb
les
and
pop
jl
loop
push
movs
ins
pop
jge
retf
adc
je
mov
mov
int3
cld
lods
fist
lods
push
push
cmc
dec
sbb
sbb
cmc
sbb
pop
mov
sub
(bad)
in
scas
jecxz
das
or
std
ins
push
mov
int
pop
outs
add
outs
dec
push
bnd
into
shl
fidivr
fld
ja
stc
rcr
lock
mov
adc
retf
mov
add
mov
pop
arpl
xchg
mov
es
dec
cld
xor
jmp
jecxz
pushf
and
jg
mov
sbb
push
jmp
adc
dec
test
jnp
test
test
and
add
pusha
mov
stos
jg
scas
jae
clc
mov
arpl
xor
jo
ret
sbb
aas
(bad)
mov
icebp
shl
nop
mov
das
sub
mov
lods
rcr
add
je
dec
jo
pusha
mov
popf
and
cmps
dec
das
pushf
retf
add
dec
outs
push
test
sbb
mov
repnz
imul
int
movs
cwde
sbb
js
lods
sub
test
pop
fisub
movs
lods
jge
loop
test
sti
inc
push
(bad)
outs
aam
stos
push
and
ror
lds
add
sub
lds
mov
mov
sub
mov
movs
mov
leave
mov
add
xor
sub
sbb
into
push
adc
xchg
cdq
dec
jb
(bad)
sbb
ror
dec
stc
retf
fisub
adc
adc
xchg
xchg
xchg
add
mov
repnz
mov
(bad)
into
or
ja
or
jp
or
addr16
push
lea
jae
mov
sub
adc
pop
mov
hlt
push
or
mov
and
jg
push
lods
aad
xor
gs
dec
push
push
add
movs
dec
out
cmp
push
test
pop
jl
scas
push
bound
test
adc
mov
add
lds
in
inc
mov
jp
cmp
push
xor
test
je
fidivr
push
psrlw
dec
push
retf
add
xchg
push
pop
xor
pop
or
loopne
pop
loope
xchg
or
ret
aam
call
(bad)
call
call
shr
sub
sbb
(bad)
lock
pop
cmp
dec
jle
test
int3
call
mov
pop
xor
dec
xor
sbb
retf
repnz
(bad)
fs
jmp
jge
les
lds
and
pusha
or
push
xchg
test
in
ret
out
xchg
mov
aad
in
bound
pushf
enter
push
xor
and
mov
sbb
in
xchg
xchg
repnz
xor
hlt
ret
jl
fwait
pop
outs
cmp
movs
daa
jge
(bad)
jne
call
fwait
xor
fild
test
push
iret
inc
inc
repz
mov
jno
adc
mov
loop
jo
mov
or
cmps
inc
arpl
pcmpeqd
inc
xor
add
adc
popf
es
xchg
sub
loope
iret
jnp
add
push
cmp
pop
sub
xchg
rol
pop
xor
add
push
movs
and
cld
js
or
xor
retf
mul
inc
sub
mov
adc
jae
test
jmp
add
mov
push
cmp
push
push
sti
mov
mov
mov
js
mov
jle
and
dec
push
stos
jp
xchg
jb
call
push
les
pop
arpl
(bad)
or
mov
imul
lods
jmp
inc
sbb
enter
stos
or
cmp
inc
fsubrp
das
ret
push
or
xlat
sti
adc
lods
movsx
mov
push
dec
cmovne
sti
test
pop
pop
sahf
sar
in
dec
push
retf
pop
mov
out
push
out
pop
call
(bad)
fidivr
aad
lods
and
in
mov
mov
sbb
cdq
iret
call
pushf
cmp
hlt
retf
adc
and
push
(bad)
jns
sub
std
cmps
popf
pop
jle
adc
test
push
outs
rcr
ins
add
es
sub
clc
popa
arpl
fdiv
mov
jg
jmp
push
xor
aaa
and
sub
repz
and
push
loope
pop
mov
imul
out
stos
gs
add
cwde
mov
repnz
or
(bad)
call
push
adc
(bad)
jge
mov
push
call
push
xor
cmps
sbb
ins
xlat
xor
sub
adc
pop
lahf
enter
stos
out
push
imul
test
lea
xchg
cs
fneni(8087
mov
aad
movs
std
fs
sti
jmp
push
ret
jb
fcomp
mov
sbb
popa
xchg
aad
inc
sbb
pop
(bad)
(bad)
out
jecxz
aad
xchg
out
arpl
scas
dec
repnz
leave
xor
dec
mov
fs
out
fisubr
lods
pop
cmp
mov
pop
mov
pop
cmps
jl
test
jmp
ror
std
cmp
jbe
add
pop
adc
ret
iret
sbb
fisubr
xchg
(bad)
fadd
add
xor
arpl
xor
cmps
cmc
jle
icebp
sbb
and
adc
add
cdq
or
push
and
in
(bad)
imul
sbb
mov
call
stos
xchg
dec
sbb
mov
adc
sahf
loope
mov
mov
fstp
out
or
cs
sbb
adc
push
and
and
repnz
repnz
add
sbb
out
ja
jo
cmp
cmp
fs
retf
int3
fwait
adc
lahf
scas
mov
xor
out
cmp
sbb
jle
mov
(bad)
stos
sub
pushf
xlat
jp
neg
jb
pop
pop
mov
xchg
sub
push
pop
dec
sbb
loope
sahf
dec
lahf
mul
aam
and
jns
jno
retf
or
pop
test
xor
imul
test
push
sbb
lea
out
out
jnp
ret
test
nop
push
outs
adc
mov
sbb
inc
and
xchg
ins
mov
(bad)
clc
enter
push
dec
push
(bad)
fsubr
push
cmp
lods
pop
(bad)
lods
sbb
jl
inc
in
cmp
bnd
or
cmp
jmp
or
xor
js
sahf
and
je
lods
lds
int
or
inc
or
sti
xor
dec
dec
cmp
ret
data16
xor
xchg
add
movs
adc
mov
fwait
rol
dec
sbb
inc
mov
and
jnp
push
add
fdiv
je
push
mov
pop
pop
mov
or
inc
jb
sub
daa
ror
outs
in
mov
int3
imul
fstp
in
mov
xor
jb
or
jg
cwde
scas
mov
xchg
pop
mov
pop
and
fxch
ret
hlt
sub
add
sub
pop
xchg
data16
out
or
(bad)
int3
aaa
je
push
and
adc
sti
cmp
scas
and
jmp
sti
sbb
aad
sbb
push
addr16
or
fist
mov
xchg
ret
pop
loopne
mov
xchg
retf
adc
lods
cmps
jne
jg
xor
jnp
push
pop
sub
std
cld
fild
or
push
dec
and
aam
xor
sub
(bad)
movs
xchg
jmp
mov
dec
mov
fnsave
lods
outs
stos
das
mov
sub
rcr
mov
rcr
fs
jb
repz
pusha
jmp
push
fld
xor
inc
(bad)
(bad)
mov
out
mov
mov
push
mov
outs
push
mov
mov
mov
pop
std
and
outs
pop
adc
(bad)
sahf
add
sub
in
sbb
mov
fs
and
xor
adc
fld
sub
lods
push
add
out
das
retf
mov
clc
aas
mov
push
cmp
push
jge
sub
pop
push
inc
out
bound
sub
movs
fdiv
push
add
mov
into
xchg
nop
xchg
adc
xchg
push
fnstcw
mov
lahf
fisttp
push
pop
movs
fucomp
enter
imul
cmp
movs
inc
xchg
rol
mov
mov
popf
dec
jnp
sub
stos
ja
xchg
(bad)
or
cmp
es
xchg
jbe
scas
outs
adc
daa
shl
sub
inc
(bad)
dec
dec
xor
adc
xchg
adc
test
sub
ss
mov
inc
mov
adc
sub
frstor
iret
dec
out
xchg
je
dec
imul
pop
(bad)
out
test
fisub
fwait
push
sub
xchg
adc
pusha
in
cs
dec
add
mov
repnz
fcmove
(bad)
dec
imul
xchg
push
add
repnz
cli
movs
or
pop
leave
pop
(bad)
jmp
daa
xor
push
rcr
adc
adc
jmp
test
bound
sbb
(bad)
and
cwde
je
icebp
cmp
and
sbb
inc
push
and
cmps
test
pop
es
sub
adc
sub
leave
mov
push
dec
dec
jae
sub
loopne
(bad)
cli
cmp
clc
add
sti
sti
sbb
push
mov
jbe
xor
outs
push
lods
cmp
pop
or
call
movs
inc
fs
mov
add
das
mov
in
push
and
and
clc
xchg
cmps
in
push
xchg
je
fwait
mov
bound
popa
push
cmps
cmp
pop
imul
mov
xchg
arpl
mov
or
rol
mov
cdq
pop
call
xchg
sub
sti
addr16
inc
sbb
add
ret
fnstcw
shl
cdq
test
int
jo
fwait
inc
movs
cmps
inc
and
shl
mov
push
and
jo
and
jp
dec
inc
lods
jne
in
jns
fimul
call
sbb
mov
inc
and
xor
xchg
adc
jl
jae
aaa
in
loope
push
into
adc
xchg
pop
push
jg
pop
popf
fdivr
push
pop
mov
cmp
sbb
test
sti
test
imul
in
add
imul
cmp
jmp
mov
out
aaa
jno
xor
xchg
int3
and
jo
aam
xchg
push
sub
std
cmp
repz
mov
jmp
rcr
sub
jmp
gs
je
dec
jmp
(bad)
jns
adc
pop
jbe
and
in
push
adc
cmp
push
dec
mov
add
mov
add
fwait
mov
mov
xor
lods
lock
inc
sub
inc
fwait
arpl
stos
sub
sar
lock
mov
dec
fcmovu
aas
aas
pushf
xchg
and
add
clc
jl
repz
call
clc
push
aas
ffreep
rcl
pop
fcmovu
ins
inc
pushf
arpl
lods
test
mov
in
shl
cmp
mov
inc
add
setl
stc
sub
lock
shl
fcmovne
shl
rol
(bad)
xchg
and
cld
mov
push
pop
fisubr
fxch
or
in
jbe
inc
(bad)
or
mov
into
repz
cwde
adc
call
inc
adc
xchg
aas
mov
sahf
shl
scas
div
xor
(bad)
fmul
sbb
out
gs
mov
ss
mov
test
cmps
call
in
cmp
mov
es
mov
inc
lea
pop
sar
clc
sbb
xchg
xor
xchg
cmp
in
fnsave
or
mov
(bad)
pushf
push
xlat
popa
mov
aam
mov
mov
push
sti
(bad)
arpl
(bad)
out
(bad)
out
test
jmp
jb
add
mov
pop
mov
push
(bad)
dec
inc
lds
inc
xor
cli
cs
jl
jae
sbb
adc
inc
pop
fnstsw
jl
enter
cmp
sub
cwde
jno
scas
leave
or
add
pushf
sub
cli
cwde
mov
push
push
iret
xchg
push
push
movs
sti
retf
rcr
sbb
nop
aam
add
popa
dec
and
dec
(bad)
dec
xor
das
scas
jge
adc
xchg
mov
fld
neg
aam
jo
(bad)
xor
icebp
inc
outs
pop
xlat
iret
mov
mov
sahf
push
add
xchg
xor
xchg
arpl
leave
(bad)
stc
fcomp
jo
ins
out
stc
pop
jl
invd
jle
jne
and
add
div
mov
call
and
mov
(bad)
or
sbb
sbb
cli
rcl
ror
push
dec
mov
test
mov
xchg
add
jle
inc
jno
in
or
movs
jmp
pusha
xchg
push
aad
adc
inc
xor
jo
test
add
add
adc
repnz
outs
test
loope
popa
pop
inc
out
push
jmp
pop
inc
test
xor
and
adc
or
bound
fcmovne
popa
xchg
jbe
push
xchg
pusha
ins
inc
fmul
and
xchg
add
xchg
sub
rcl
loope
ss
in
scas
mov
adc
mov
sub
xor
mov
pop
jae
dec
adc
mov
je
fs
jne
cmp
and
cmp
in
and
fcmovnb
test
push
test
cmc
jns
cmc
mov
dec
stos
test
xchg
pop
mov
xchg
xchg
jns
jecxz
pop
outs
movs
call
stos
repnz
retf
inc
add
scas
sub
ds
mov
ret
jae
out
cmp
ja
xlat
or
ficom
cdq
push
push
dec
inc
xor
dec
xor
add
aam
ins
or
scas
sub
xchg
xchg
pop
xchg
xlat
or
(bad)
in
push
in
inc
sub
mov
xor
scas
sub
or
cmp
add
fidiv
retf
push
mov
cmp
xchg
es
stc
xor
xchg
and
pop
or
hlt
cmc
push
cmp
sahf
nop
frstor
ss
jmp
mov
inc
outs
mov
xchg
adc
inc
cmp
cli
mov
inc
xchg
pop
xor
sbb
jae
je
add
xor
ja
ins
mov
add
mov
sub
push
pushf
add
add
sub
test
pusha
sub
aam
sub
movs
push
daa
scas
or
rcl
out
sub
fiadd
xor
loopne
mov
fnsave
lock
mov
js
jb
mov
push
push
loope
arpl
mov
cmp
dec
loopne
cmp
and
and
daa
ins
add
std
fiadd
xchg
fsubr
push
out
imul
pop
fld
mov
or
mov
dec
mov
out
pop
ret
and
sbb
lods
pop
fcmovnbe
or
mov
dec
adc
mov
or
iret
mov
(bad)
sub
inc
ffreep
cdq
or
rol
jge
imul
and
mov
ins
into
add
push
inc
sub
cmps
cmp
gs
xchg
mov
shr
xor
mov
jb
mov
sbb
nop
xchg
icebp
push
test
cmps
mov
mov
into
scas
push
mov
mov
push
pop
adc
dec
stos
ja
and
xchg
enter
rcl
xchg
adc
mov
clc
int3
jmp
or
sub
in
clc
inc
xor
ret
push
add
or
clc
test
or
inc
mov
xchg
and
cmp
jae
jnp
call
add
ror
out
imul
jnp
rol
sbb
xchg
ret
push
jmp
mov
xchg
mov
das
sbb
mov
mov
adc
int
stos
jmp
add
das
xchg
xchg
js
mov
xchg
(bad)
int
jp
add
aam
mov
mov
or
xor
push
jno
adc
mov
mov
(bad)
fstp
sbb
ret
or
cmp
mov
jp
xor
rcl
ins
or
sbb
mov
(bad)
ins
outs
pop
push
(bad)
adc
dec
int
mov
mov
mov
(bad)
vfrczsd
mov
test
xor
cmp
sub
jle
rcl
scas
(bad)
enter
mov
loop
xchg
aaa
(bad)
or
lods
push
aas
mov
or
jne
inc
push
add
sbb
jecxz
fucomi
pop
int
mov
sti
stc
jge
add
add
mov
test
bound
daa
adc
imul
xor
jmp
add
leave
repnz
and
mov
adc
or
ds
in
dec
push
enter
(bad)
jle
adc
sbb
lods
cmp
cmp
out
cmp
mov
pop
add
or
pop
jmp
jmp
jp
adc
mov
sub
mov
mov
nop
dec
fnstenv
cmps
test
nop
fist
add
add
imul
lods
cmp
sub
sbb
loop
pop
mov
jmp
(bad)
out
rcl
mov
mov
or
jbe
loope
pop
jns
aad
js
fcom
pop
enter
(bad)
jns
ins
mov
lahf
or
jl
(bad)
sbb
movs
int
in
push
rcr
ss
cmp
inc
or
xchg
ins
xor
retf
pop
sti
mov
mov
std
mov
lods
jae
fwait
test
push
cmp
mov
lds
popa
(bad)
ja
idiv
pop
pop
in
adc
mov
mov
push
bound
xor
into
add
enter
or
out
ret
mov
ficom
fcom
jg
repz
pop
push
dec
push
mov
in
dec
mov
fucomip
retf
dec
repnz
push
mov
mov
iret
ret
les
add
mov
cmp
movs
leave
lea
xchg
xchg
loop
inc
aas
mov
jp
fcomp
sahf
stos
imul
data16
data16
lods
in
fldenv
and
or
pop
lock
mov
dec
sbb
jge
data16
cmp
ins
cmps
test
xchg
jne
movs
or
mov
or
or
inc
jns
jg
pop
push
inc
dec
pop
xchg
std
mov
and
pusha
rol
aaa
out
(bad)
gs
std
push
jl
mov
(bad)
shr
sahf
enter
add
cmp
cmps
push
push
daa
xchg
cmp
(bad)
jne
das
sbb
cdq
inc
xchg
add
leave
jns
sub
inc
and
(bad)
test
jp
push
out
lock
int3
fdiv
call
add
mov
lahf
outs
or
xchg
enter
mov
jge
aaa
shld
lock
jnp
xor
xchg
mov
leave
ret
pop
xor
jae
fistp
repz
imul
push
and
push
mov
and
(bad)
dec
inc
jmp
pop
mov
xchg
aad
(bad)
fidiv
add
test
mov
xor
cwde
out
fs
push
add
hlt
and
shr
mov
jecxz
dec
adc
dec
xchg
add
and
jb
or
sbb
imul
lahf
sub
sbb
repnz
push
or
jno
test
jae
movs
jecxz
repnz
add
cmp
mov
mov
retf
leave
xchg
cmp
sti
mov
cmp
ja
mov
retf
loope
cli
pop
mov
xor
cmp
retf
jmp
or
pop
push
dec
clc
xor
mov
inc
scas
fs
dec
movs
ds
ror
lahf
adc
and
test
pop
inc
cli
xchg
outs
(bad)
test
sbb
xchg
jecxz
xor
mov
in
push
imul
inc
adc
stos
sbb
int
mov
jne
aam
loop
imul
lahf
inc
or
cli
clc
std
aas
and
and
and
push
jno
ss
jno
popa
fld
mov
push
sub
pushf
xlat
mov
outs
mov
or
or
pop
int
mov
push
cmps
pop
sub
stos
dec
call
xchg
popf
test
xor
fist
jmp
inc
jno
jne
call
inc
xchg
jo
mov
or
cmpxchg
in
xchg
rcl
dec
cmp
jb
and
dec
stos
cwde
fcmovnb
jmp
stos
push
or
dec
in
pop
push
xor
clc
xchg
or
adc
lods
out
jmp
xor
sbb
mov
cmp
repz
push
add
xchg
movs
xchg
push
aam
int3
iret
mov
mov
inc
add
add
(bad)
push
imul
imul
mov
mov
stos
mov
mov
in
mov
ja
retf
sbb
iret
std
push
call
inc
out
mov
es
nop
pushf
inc
jnp
(bad)
and
(bad)
add
hlt
test
scas
xlat
xor
inc
(bad)
sbb
cmp
cmp
lods
scas
test
fwait
mov
pop
dec
mov
dec
xchg
fidiv
std
jbe
aam
inc
out
xor
sbb
mov
stc
in
xchg
rcr
xchg
mov
call
bound
xchg
xor
sbb
mov
mov
mov
adc
iret
mov
sbb
jg
(bad)
sub
fucomp
dec
(bad)
cmp
test
mov
sti
call
dec
add
pop
push
daa
xchg
jmp
xor
xchg
inc
mov
mov
pop
cwde
push
and
sar
repnz
mov
leave
mov
(bad)
mov
add
xchg
xchg
(bad)
push
out
mov
sti
pop
xor
inc
aam
ins
dec
repz
test
fbld
rol
push
fnstsw
out
jnp
cmovp
jmp
nop
cmc
jg
and
mov
inc
mov
mov
jge
push
add
jmp
sub
aas
lahf
mov
cmps
xlat
outs
dec
bound
cmp
iret
jbe
mov
popf
(bad)
jg
outs
mov
retf
mov
dec
add
mov
movs
(bad)
jmp
stos
fidivr
mov
ror
in
cmp
inc
pop
(bad)
sub
outs
jno
loop
mov
xchg
push
clc
mov
push
sti
xor
fcmovnbe
loope
shr
cs
inc
and
ror
fcom
inc
dec
cmp
daa
ret
imul
ds
lods
pushf
and
call
dec
arpl
pop
int
jl
push
test
cmp
and
in
addr16
jns
shl
mov
popa
mov
fwait
nop
push
arpl
adc
sbb
cmp
xchg
dec
and
in
inc
inc
ss
adc
(bad)
test
(bad)
(bad)
(bad)
lahf
test
mov
jmp
aad
jb
loop
shl
sbb
(bad)
movs
pop
mov
in
scas
pop
mov
repz
or
repz
sub
cld
sub
adc
push
sbb
leave
push
push
out
pop
xor
mov
pop
adc
iret
push
or
bound
ror
adc
add
call
mov
ret
cwde
(bad)
int3
aas
jno
ret
ins
inc
mov
mul
pop
les
cwde
inc
add
push
sub
push
(bad)
sbb
mov
mov
mov
aad
jae
outs
lods
mov
mov
imul
mov
mov
jl
(bad)
mov
in
dec
outs
inc
into
out
inc
or
pop
jno
out
mov
sub
xchg
out
mov
dec
test
aas
and
fcomp
sar
in
mov
sub
add
sbb
dec
dec
loop
sbb
jb
xor
or
jecxz
addr16
icebp
pushf
inc
pop
cmps
daa
mov
mov
bound
pop
inc
arpl
out
stos
leave
pop
add
mov
fstp
jbe
pushf
inc
cmp
imul
fld
jne
inc
nop
jmp
dec
mov
mov
rol
xchg
imul
sub
fwait
xchg
jne
mov
mov
mov
dec
rcl
sub
cmp
mov
pop
sbb
mov
gs
add
mov
dec
jne
cmp
mov
jae
pop
inc
fcomip
xchg
or
dec
sub
cmp
push
sub
fst
(bad)
jmp
imul
or
sbb
mov
aaa
ret
or
sti
mov
das
mov
shl
cmp
dec
cmp
jmp
ret
test
adc
pop
dec
jno
clc
sbb
rcl
fnstsw
jecxz
hlt
cmps
mov
push
das
sti
sbb
cs
push
jl
data16
pop
and
lea
mov
cmp
sti
mov
jbe
mov
add
(bad)
ja
fistp
sub
ficomp
pop
enter
jg
adc
mov
fiadd
rol
xor
xor
aaa
pop
jp
movs
jns
sub
clc
out
pop
addr16
and
adc
cmps
inc
cmp
repnz
dec
pop
ret
fld
xor
push
add
std
rcr
into
mov
mov
enter
jb
mov
cmp
imul
mov
xchg
adc
aad
das
cmp
ror
lock
adc
mov
mov
data16
adc
(bad)
push
mov
push
daa
adc
neg
clc
pop
sbb
fbld
pop
les
pop
inc
jne
xor
inc
test
rcr
lods
and
sub
pop
lds
popf
cmp
jne
ds
jecxz
push
sub
pop
pushf
add
lds
ins
fnstenv
out
fs
xor
push
(bad)
sub
mov
rol
push
mov
push
pop
pop
adc
daa
jmp
sub
movsx
jecxz
movs
iret
or
sub
mov
imul
push
push
xor
ret
addr16
cmp
je
rcr
jbe
shr
sbb
sar
stc
rol
push
jge
ins
xor
fiadd
and
sub
adc
push
imul
cwde
leave
xlat
pushaw
or
xor
jecxz
mov
sahf
cmp
xchg
xor
or
fiadd
xchg
scas
shr
fcmovne
lods
test
push
out
ss
mov
xchg
lahf
inc
and
sbb
fs
shr
xchg
add
cmp
(bad)
js
dec
icebp
int3
cmp
retf
addr16
mov
cmps
jnp
sti
dec
dec
xor
fimul
and
lods
mov
ins
and
adc
and
mov
dec
repz
or
xchg
jle
mov
mov
ins
dec
sbb
jnp
cmp
inc
fsubrp
aad
sbb
jmp
test
xrelease
ror
aaa
jb
push
push
sar
out
inc
aad
jmp
adc
cld
mov
or
push
sbb
fcom
(bad)
xor
and
sub
fsub
(bad)
(bad)
fwait
cld
sub
jnp
add
scas
outs
adc
mov
xor
cld
test
pop
pop
loope
cld
jmp
loope
lds
test
mov
inc
mov
mov
dec
sbb
lock
into
je
loopne
(bad)
je
lahf
popa
aad
jnp
or
pop
or
or
sbb
xchg
mov
xchg
lea
adc
sub
data16
mov
mov
bound
push
cmp
jmp
add
xor
clc
mov
rep
retf
sbb
pop
leave
mov
sbb
or
add
dec
push
inc
sub
or
dec
add
add
ins
dec
lods
push
cmps
call
add
xchg
jo
ins
sbb
in
idiv
mov
adc
imul
push
sub
iret
mov
mov
jns
test
in
push
in
inc
pop
jl
popf
not
mov
jmp
xor
inc
retf
ja
sbb
adc
imul
mov
fwait
or
mov
jb
hlt
hlt
std
nop
mov
clc
out
cwde
gs
ins
and
call
and
aas
repz
mov
gs
in
test
lods
push
mov
sub
xor
out
inc
je
lock
loop
mov
cmps
fild
test
dec
push
(bad)
std
xchg
iret
add
lea
sub
(bad)
(bad)
push
pop
mov
scas
sub
test
ret
out
mov
lock
or
out
mov
lds
pushf
mov
sar
adc
sbb
or
mov
add
pop
mov
mov
add
add
sub
or
push
mov
cmp
cmp
xor
inc
mov
repz
stos
mov
push
shr
out
push
fsubr
jle
push
retf
stc
in
iret
pop
sub
stos
xchg
test
add
in
int3
adc
fdivr
aas
fld
cld
fbld
test
fiadd
rcl
push
movs
dec
cmpps
inc
mov
les
fild
inc
xor
inc
movs
movs
xor
sub
ret
ret
adc
cmp
js
shl
jns
and
int3
adc
pop
std
add
pop
call
push
mov
sub
jb
call
and
inc
imul
in
dec
mov
(bad)
xchg
rol
es
lock
inc
or
imul
stc
loope
cmp
push
mov
add
mov
adc
mov
dec
movs
mov
call
and
dec
xchg
in
and
xchg
enter
add
xor
pop
fcomp
repz
cs
cmp
in
test
enter
cmp
add
xchg
mov
inc
push
out
jo
push
xchg
and
push
jmp
push
add
or
test
stos
push
std
outs
xchg
stos
and
mov
jns
mov
sub
clc
pusha
cli
jb
(bad)
inc
xchg
xor
ds
push
js
inc
jmp
push
clc
mov
repz
rcl
mov
jmp
jno
das
movs
fdiv
int3
out
sub
push
out
nop
aaa
loop
cmp
ret
pop
pop
xchg
sub
or
mov
movs
push
mov
mov
std
inc
pop
daa
test
mov
dec
stc
xor
and
and
jmp
out
cmp
add
dec
popf
aaa
cmc
scas
mov
jae
xor
mov
(bad)
push
or
xor
dec
and
cmps
mov
xor
mov
or
sahf
iret
sahf
push
jl
stc
mov
int
aad
out
(bad)
sahf
add
nop
jbe
adc
shl
inc
cdq
pop
sbb
push
retf
jno
ret
cmps
loop
(bad)
iret
mul
(bad)
xlat
mov
push
popf
inc
movs
cmp
call
not
mov
mov
sub
imul
mov
enter
ret
scas
xor
pop
dec
or
xchg
div
aas
push
xor
retf
nop
xchg
pop
retf
ror
(bad)
or
xchg
add
iret
adc
(bad)
dec
idiv
mov
aad
enter
xor
test
mov
mov
mov
pop
mov
sbb
ret
sbb
fisttp
push
dec
loope
push
and
jb
xchg
adc
sub
mov
imul
retf
fisub
mov
pop
lahf
cdq
pop
or
int3
call
mov
fsubr
cmp
pop
in
add
fwait
push
outs
dec
or
aas
add
and
mov
or
pop
daa
push
add
mov
nop
dec
sub
pushf
(bad)
jmp
sbb
dec
ins
enter
mov
test
add
inc
shr
hlt
mov
mov
loopne
mov
fisubr
test
leave
jmp
xlat
movs
and
cld
dec
adc
xchg
and
jl
arpl
cmp
das
sti
adc
xchg
leave
push
push
iret
cdq
imul
cmp
dec
ret
ja
cwde
or
gs
lock
adc
shl
arpl
and
mov
cmp
mov
pop
cmp
or
jge
mov
mov
jmp
xchg
mov
bound
je
shr
pop
dec
dec
inc
jmp
lahf
repz
div
pop
ret
add
xchg
stc
xor
out
add
mov
sub
sbb
xor
or
pop
popa
and
jmp
push
push
add
jnp
cmp
jae
xchg
ins
jb
call
fiadd
scas
adc
xchg
arpl
and
mov
aam
mov
sbb
sub
push
jnp
inc
dec
pop
sti
jle
ins
add
cmps
icebp
mov
ret
mov
mov
adc
popa
jl
loop
xchg
inc
mov
xchg
fldcw
xchg
pusha
xor
dec
mov
std
retf
nop
arpl
sub
je
dec
sub
shl
(bad)
daa
jae
mov
mov
cmp
pop
enter
cmp
xor
mov
ins
cmp
pop
(bad)
cli
xchg
xor
pop
ss
pop
mov
jmp
test
scas
fidivr
in
pop
or
stos
inc
sub
add
fadd
(bad)
cli
fucomip
rcr
cli
pop
out
cmp
mov
adc
mov
xor
pop
xor
or
or
jle
and
or
push
inc
mov
dec
in
dec
test
call
inc
mov
mov
fwait
into
ror
imul
lds
adc
daa
xchg
inc
in
cmc
cmp
sbb
add
xor
in
fimul
inc
mov
inc
ret
inc
sbb
jmp
mov
fnsave
add
add
and
out
loop
and
aaa
adc
pop
jbe
scas
and
hlt
test
jg
cmp
test
xchg
enter
stos
push
pop
(bad)
jbe
xor
enter
or
sbb
mov
sub
bound
add
pushf
and
push
jns
sub
sar
sbb
pop
and
out
les
push
push
mov
and
fistp
and
pusha
mov
(bad)
adc
hlt
inc
(bad)
xchg
jns
xchg
ins
mov
jo
es
jge
cmp
jne
jecxz
sbb
pop
sub
ja
add
mov
sbb
and
jl
int
rcl
add
push
outs
mov
adc
sbb
inc
mov
(bad)
dec
arpl
cmps
pop
rcl
and
mov
pop
ror
mov
pusha
cdq
popf
sbb
pop
test
push
xchg
imul
xchg
inc
retf
gs
scas
hlt
inc
aas
push
inc
out
mov
mov
sbb
and
xchg
push
fld
aas
mov
pop
inc
xchg
sub
jbe
pop
push
xchg
cdq
mov
in
(bad)
loope
add
mov
outs
xchg
mov
iret
dec
lock
shl
mul
mov
scas
pop
mov
jle
jmp
in
sbb
mul
push
inc
jmp
ds
not
dec
popa
jge
mov
ret
js
sub
arpl
or
mov
cmp
fs
lea
or
sbb
push
cmp
xlat
scas
or
test
mov
in
pop
sbb
rcr
sub
mov
sub
mov
stc
xor
pop
test
cmp
adc
in
shr
mov
retf
out
lahf
lods
jg
or
sti
pusha
or
shr
sete
xchg
or
jle
clc
jne
shl
(bad)
or
shl
loopne
adc
sub
imul
ja
sub
ja
adc
test
sub
and
push
stc
mov
xchg
shl
mov
mov
lock
inc
out
jmp
or
sbb
es
hlt
imul
dec
(bad)
and
xlat
sub
and
in
xchg
dec
jmp
lods
ds
rol
cs
cmp
in
lock
div
sub
loope
pop
and
mov
(bad)
movs
and
sahf
ds
push
popf
mov
popf
mov
mov
xchg
dec
push
xchg
mov
stos
cmp
clc
cmc
xchg
cmp
iret
or
dec
inc
or
or
rol
mov
add
adc
jmp
jae
test
and
pop
xchg
adc
pop
out
inc
push
sub
sahf
cmps
push
lock
test
push
push
(bad)
jmp
xchg
stos
push
mov
mov
sti
movs
fmul
imul
inc
and
ret
inc
inc
enter
pushf
pop
mov
mov
mov
or
mul
push
(bad)
(bad)
mov
mov
dec
lods
cdq
das
sub
sub
cmps
push
mov
ret
lods
movs
jge
push
pop
adc
pop
sub
pop
pop
mov
sub
jnp
aas
dec
xchg
and
push
or
leave
dec
push
mov
out
or
jo
movs
xchg
pop
inc
enter
sub
mov
aaa
test
retf
cmps
mov
lock
movs
fnstenv
icebp
xchg
out
icebp
inc
inc
aam
inc
stc
mov
rcl
ret
pop
mov
enter
adc
lods
or
fst
movs
aas
mov
dec
sub
jb
mov
mov
in
ror
lock
add
repz
add
mov
test
adc
out
icebp
mov
js
test
ins
outs
adc
test
(bad)
mov
xchg
call
mov
int3
cld
and
je
ds
push
push
mov
dec
lock
sbb
jno
cli
xor
mov
pushf
cmps
retf
arpl
and
xchg
std
out
cwde
imul
xor
mov
adc
test
dec
mov
jae
fxtract
(bad)
shl
push
cmps
xchg
or
out
sbb
dec
xor
mov
mov
stos
aas
not
push
mov
pop
mov
fcom
inc
xchg
and
stos
cmps
rcr
inc
dec
inc
stos
push
push
sbb
jmp
pusha
jmp
pop
mov
adc
dec
xor
icebp
clc
add
mov
jbe
bound
xchg
fdiv
outs
jecxz
fsubr
and
fild
xchg
lahf
shr
sub
mov
push
into
test
jge
cmp
adc
cmc
dec
jmp
in
imul
xor
add
or
icebp
ins
pop
into
sub
jle
xor
ss
call
ja
test
push
not
push
xchg
inc
jmp
push
(bad)
cmc
add
dec
mov
stos
xchg
out
aaa
xor
je
mov
push
jmp
jp
aas
sar
(bad)
call
out
and
push
mov
push
cmps
test
pop
sub
mov
popa
push
popa
mov
cmp
fdivr
dec
push
or
lahf
stc
movs
mov
pop
xor
addr16
lea
or
sub
cmp
xor
leave
cli
xchg
mov
movs
(bad)
bound
adc
push
aam
and
xchg
or
fsub
mov
xlat
cmps
sbb
cwde
xor
sahf
dec
or
sbb
test
xor
cmps
push
daa
or
fidiv
push
arpl
es
sub
test
movs
test
movs
lods
test
pop
out
(bad)
hlt
xchg
cwde
xchg
mov
jo
inc
repz
aam
sbb
sub
sbb
retf
mov
xchg
fsub
dec
mov
fnstsw
js
imul
ins
cmp
sub
es
(bad)
mul
xchg
addr16
sub
jmp
and
mov
sub
dec
push
mov
pop
int3
aam
adc
mov
and
adc
jecxz
mov
cmp
xor
pop
or
imul
sub
sub
adc
pop
test
ds
mov
push
xor
outs
(bad)
jecxz
mov
pop
cmp
dec
add
ret
push
inc
imul
or
jmp
jle
std
add
ret
movs
ins
leave
ins
sbb
jo
sbb
in
ror
or
out
add
cld
sahf
or
pop
loop
pop
daa
mov
inc
jle
ja
xor
xor
gs
mov
enter
mov
and
movs
arpl
sub
add
test
or
nop
int3
mov
dec
leave
bound
jecxz
lds
xor
and
dec
add
hlt
(bad)
mov
push
fldenv
inc
jae
add
bswap
cs
mov
fisub
daa
(bad)
xor
sub
dec
in
xor
scas
mov
xchg
push
(bad)
enter
mov
out
ss
in
int
pop
leave
sub
sub
pop
mul
push
test
dec
mov
inc
push
mov
lock
xchg
(bad)
add
lock
jmp
stc
cmps
mov
xchg
add
mov
mov
sub
sbb
push
mov
popfw
cmps
movs
xor
std
pop
call
cwde
inc
adc
stos
gs
lahf
or
aaa
daa
movs
dec
sbb
js
aaa
pop
mov
mov
shr
pop
mov
sub
xchg
ins
jb
lods
or
mov
outs
mov
pop
int3
leave
push
in
and
pop
mov
bound
test
xchg
push
mov
dec
fcomp
loop
mov
jne
aad
in
fdivr
jb
rcl
dec
jmp
dec
xlat
adc
int
dec
mov
(bad)
add
or
scas
mov
jne
pop
popf
adc
jecxz
bound
inc
jb
cdq
data16
mov
xor
mov
outs
cmp
rep
jl
jmp
fsub
nop
adc
rol
and
lahf
jae
xchg
out
mov
mov
iret
jecxz
adc
inc
cmp
cdq
adc
loopne
and
out
loope
and
ja
inc
mov
cmp
fild
cs
retf
adc
mov
jge
inc
jmp
dec
not
mov
mov
bswap
repnz
loope
xchg
mov
and
sub
frstor
imul
pop
and
leave
out
mov
out
push
inc
rcr
loopne
(bad)
je
sbb
mov
daa
and
and
and
or
out
idiv
imul
or
(bad)
xchg
pop
fild
dec
loope
push
cmps
lods
das
out
stos
adc
leave
daa
lahf
mov
xor
sub
adc
inc
xchg
push
sbb
test
ret
test
push
jg
or
adc
pop
sti
movs
mov
push
xor
lock
pop
pop
dec
movs
push
es
fs
imul
(bad)
mov
inc
lahf
leave
push
push
cmp
push
data16
cli
push
push
fwait
lock
add
dec
mov
out
call
ss
jp
inc
pop
int3
retf
push
inc
push
inc
loope
inc
xor
sub
mov
ja
push
add
in
jmp
inc
mov
sub
add
lea
xor
cmp
ret
push
inc
and
mov
es
shl
mov
lods
sub
xor
jmp
nop
mov
shl
mov
sti
loopne
sbb
dec
mov
or
popf
xor
shl
test
sbb
aaa
arpl
cmp
sub
fld1
mov
add
push
pop
shl
cwde
cs
(bad)
mov
or
fld
cmp
or
in
adc
adc
xchg
sub
push
es
pop
stc
jl
cmp
fldcw
jae
xor
fdivrp
test
in
mov
ins
repnz
fld
xchg
push
cmps
fidiv
push
fwait
push
out
ffreep
shr
sub
(bad)
pop
sbb
stos
adc
shl
pop
jnp
hlt
sbb
dec
jbe
mov
(bad)
xchg
fdiv
xor
push
stos
jle
and
push
rcr
cmps
jo
lds
setge
retf
int
or
cmp
dec
test
sub
adc
mov
lods
add
test
aas
xchg
imul
mov
and
loopne
pop
pusha
xchg
imul
std
loop
jmp
sub
nop
retf
sbb
adc
mov
pop
xchg
adc
ss
pop
jns
jnp
add
mov
ins
adc
sar
sbb
popf
(bad)
mov
ins
dec
ror
stos
pop
jnp
(bad)
les
cli
out
(bad)
test
add
lds
push
mov
cmp
pop
mov
and
stc
sbb
mov
call
push
sahf
adc
inc
and
mov
inc
lock
retf
cmp
lea
js
(bad)
mov
fidiv
mov
jmp
push
outs
rol
mov
aam
mov
pop
movs
cmp
stos
cmps
jmp
push
adc
daa
neg
(bad)
mov
or
mov
stos
retf
fisubr
mov
or
loop
xchg
xchg
pop
iret
popf
or
aam
pop
or
cli
movs
mov
or
and
outs
(bad)
push
push
repz
fnsave
pop
pushf
push
aad
xor
mov
mov
out
clc
lea
inc
pop
push
lods
mov
retf
loopne
scas
xchg
sbb
imul
popf
xchg
out
repz
aam
jp
sbb
jp
jno
mov
cld
lock
or
cmc
mov
lahf
push
mov
je
ds
pop
xchg
cmps
and
cli
nop
ret
add
mov
aas
add
mov
nop
push
test
rcl
scas
les
jp
test
push
int
not
scas
mov
or
push
mov
mov
test
fwait
sub
adc
add
cmp
mov
daa
pop
rcr
(bad)
add
std
xchg
(bad)
popa
sbb
adc
xchg
adc
clc
fidivr
pop
xchg
pop
imul
fsubr
ret
push
repz
jb
ins
push
push
aaa
xchg
ficomp
push
push
pop
pusha
adc
sbb
stos
iret
sbb
fwait
xchg
dec
in
mov
sub
je
lahf
mov
adc
dec
mov
fmul
bound
jns
stc
or
je
xor
repz
pop
fldcw
ficomp
in
or
adc
lods
mov
add
or
pop
loop
ss
sbb
push
inc
xchg
test
mov
xlat
xchg
mov
xchg
xchg
xchg
mov
fidiv
push
push
or
inc
aaa
add
imul
jo
imul
push
lods
lea
not
jno
icebp
fdivr
sub
xchg
out
fst
fst
int3
sbb
loope
fs
cmps
aam
out
pop
inc
dec
dec
sbb
jmp
idiv
and
sbb
mov
cmc
test
push
and
enter
mov
into
add
icebp
add
jl
inc
xor
fs
(bad)
lea
mov
sub
fdiv
inc
or
mov
cmp
adc
jge
mov
(bad)
(bad)
cld
movs
shl
movs
pop
dec
inc
pop
sub
out
add
mov
push
es
jge
push
fs
dec
ds
dec
fdivr
add
popa
scas
je
push
cmp
fimul
inc
inc
repnz
jmp
cdq
lea
mov
aas
rol
pop
inc
sbb
or
xor
int3
cld
dec
mov
ja
pop
push
scas
dec
or
and
shl
(bad)
xchg
sahf
loop
xor
clc
in
xor
xchg
push
jge
or
mov
int3
fs
repz
enter
xor
fst
(bad)
in
xchg
inc
xchg
loope
mov
dec
push
dec
int
lock
popa
icebp
pop
retf
sar
jae
jle
aad
jecxz
cmp
call
inc
mov
leave
ins
xor
pop
icebp
mov
or
out
popf
cli
pop
mov
push
mov
sub
cdq
pop
daa
hlt
inc
mov
test
mov
mov
jmp
dec
and
sub
sar
daa
xlat
ds
or
call
mov
lods
or
jmp
and
or
inc
fmul
push
stc
aas
pop
mov
fwait
adc
mov
adc
repz
hlt
xchg
adc
test
inc
push
xor
sahf
dec
adc
sbb
mov
pop
in
dec
jne
fidiv
mov
imul
stos
(bad)
data16
xor
xlat
xchg
movs
add
mov
ss
adc
int
shl
adc
repz
dec
cmp
stc
xor
cmps
pop
out
jb
out
pop
xor
into
es
pop
rol
inc
pop
push
test
mov
mov
fst
xor
lock
pop
sub
aad
or
mov
ror
xchg
cmp
xchg
imul
rcr
mov
shr
outs
sbb
aaa
popa
push
movhlps
daa
repz
jnp
test
or
iret
mov
ret
das
cli
mov
ins
add
jp
mov
push
rcl
xor
sbb
sub
adc
in
enter
dec
cmp
out
dec
xor
ds
dec
push
outs
popaw
cmps
cmp
pop
push
sub
out
mov
(bad)
arpl
xchg
lea
pop
inc
push
push
sbb
mov
sub
or
cmp
test
xchg
aaa
mov
repz
mov
outs
(bad)
fldl2e
jno
inc
or
sub
inc
(bad)
aaa
or
bound
(bad)
pushaw
ja
dec
pop
in
lahf
sbb
mov
push
outs
ja
fwait
inc
jl
sahf
neg
pop
xor
cmps
fistp
or
ror
add
xor
sub
cmp
jge
inc
icebp
shl
daa
cmps
mov
xchg
or
sub
adc
sub
push
cmps
sbb
mov
scas
aam
retf
push
mov
retf
pop
jne
sub
sti
inc
cmp
and
sahf
fisub
add
imul
mov
mov
gs
call
andnps
and
mov
in
jae
sub
movs
xchg
jle
push
mov
popf
push
ins
cdq
and
js
(bad)
and
xchg
jle
mov
mov
mov
sahf
mov
cs
scas
and
push
inc
std
pop
jg
out
in
rcr
mov
call
int3
inc
popf
pop
sub
rcr
mov
push
ficom
sub
retf
sub
inc
in
mov
mov
(bad)
xor
ja
(bad)
jp
fisub
rcr
or
fistp
jne
sub
aad
movs
sbb
std
outs
xchg
cmp
out
xor
jecxz
mov
and
sar
std
inc
xchg
jl
stos
add
into
popa
setne
mov
into
or
inc
inc
leave
adc
mov
add
mov
out
jo
imul
jmp
in
out
mov
add
jnp
jl
mov
inc
inc
fsub
aad
mov
cli
arpl
enter
push
mov
pop
push
mov
pop
mov
pop
mov
inc
and
pop
pop
inc
push
dec
icebp
outs
and
call
popa
outs
add
sbb
pop
xor
xor
aam
ins
dec
movs
retf
mov
sbb
xor
xor
mov
pop
call
mov
mov
test
jb
and
lock
iret
xor
xchg
push
xor
retf
inc
jecxz
xacquire
inc
sbb
arpl
cmp
jmp
pop
xchg
nop
mov
sbb
cmps
jmp
std
bound
lds
mov
(bad)
movs
and
(bad)
leave
mov
sbb
mov
and
and
cmp
sbb
fs
std
add
mov
cli
jns
and
fwait
mov
jg
pop
inc
sbb
push
nop
jno
repz
js
push
mov
jmp
cld
adc
pop
into
sbb
ins
mov
jp
ficomp
es
adc
ret
int
mov
adc
jge
jecxz
xor
mov
add
or
test
movs
xor
dec
jo
ss
ror
mov
push
sbb
jno
push
jecxz
je
add
mov
mov
js
div
xchg
call
fmul
adc
lds
ins
adc
cmp
adc
cld
pusha
cmp
cmps
leave
mov
(bad)
out
retf
fnsave
lock
add
mov
bound
cmp
call
arpl
stos
cmp
sti
out
dec
retf
xor
bound
mov
sub
cmc
sqrtps
(bad)
(bad)
xchg
xchg
mov
in
inc
push
daa
retf
std
add
call
ffreep
cmp
rcl
push
adc
je
or
inc
cdq
jecxz
or
pop
jb
push
mov
mov
mov
lods
or
fs
dec
out
jnp
mov
push
loope
scas
pusha
pop
mov
xchg
mov
gs
outs
and
pop
or
mov
push
jbe
and
xchg
js
pusha
ds
inc
xchg
jmp
xchg
ja
in
mov
aam
sub
adc
aaa
in
lahf
cmp
scas
shr
jge
or
fist
dec
je
cli
jle
bound
mov
cmp
and
sbb
dec
or
leave
retf
lock
call
dec
(bad)
iret
jecxz
mov
rol
xor
cmp
and
or
push
iret
in
sub
sbb
mov
jno
jl
sub
push
mov
sbb
bound
ds
aad
fnstenv
fwait
stos
aad
mov
test
fdivr
mov
shl
mov
shl
jb
fiadd
jns
adc
add
mov
sub
or
(bad)
adc
ficom
es
daa
jp
adc
jge
fnstcw
mov
or
ss
out
test
pslld
shl
push
xchg
cmps
int
cmp
sbb
push
pusha
cmp
push
pop
movs
push
xor
adc
out
jnp
call
je
sbb
popa
test
jno
into
sbb
mov
or
cmp
in
cmc
test
xor
loope
out
and
xor
out
adc
ror
lods
jle
popa
bound
mov
pusha
fistp
into
mov
fbld
sub
sbb
cli
into
or
jno
pop
daa
std
test
fs
dec
mul
hlt
(bad)
push
out
or
fwait
ja
adc
add
(bad)
cmp
mov
jb
push
xlat
mov
ror
xor
lods
(bad)
pop
les
js
dec
mov
mov
mov
ret
cmps
rcr
mov
jns
sar
popa
dec
push
fidivr
xchg
cmc
add
movs
adc
mov
pop
pop
inc
gs
jge
ror
adc
mov
mov
push
or
pop
ret
in
call
fidiv
jns
out
call
dec
sbb
fisub
jmp
out
jne
sbb
xlat
dec
cwde
(bad)
popf
nop
sbb
sbb
imul
inc
(bad)
cmp
ret
cli
arpl
fidivr
sub
dec
repz
jae
cli
jo
ds
mov
push
jne
mov
jl
xchg
ja
sbb
ficomp
pop
push
inc
cmp
fmul
dec
in
repnz
adc
cmp
imul
pop
and
pop
(bad)
pusha
ins
inc
mov
lahf
mov
scas
ss
dec
jne
push
in
test
xlat
dec
loop
(bad)
adc
dec
push
sahf
aaa
xor
pop
add
cmp
jbe
adc
fldenv
sbb
mov
jns
mov
scas
pop
cmp
popa
loope
xchg
mov
repnz
and
lahf
sub
mov
push
jbe
or
xchg
outs
jae
xor
outs
xor
in
out
xor
or
and
add
fmul
push
jp
and
adc
cdq
mov
shl
aad
cmp
scas
pop
pop
mov
and
xchg
mov
inc
xchg
sub
xor
mov
xchg
push
adc
cmp
mov
sbb
sbb
adc
movs
es
jbe
pop
ss
mov
cmp
jo
push
ret
lods
inc
sub
add
stc
mov
pop
jo
or
lods
and
dec
lods
push
jge
nop
jnp
(bad)
icebp
(bad)
push
jnp
mov
out
addr16
jle
test
aad
mov
(bad)
out
pop
pop
mov
push
xchg
mov
js
xchg
mov
call
(bad)
cmp
dec
sub
add
add
mov
enter
lds
out
jp
xchg
xor
repnz
stc
jge
data16
mov
sbb
neg
cmp
jl
ds
jmp
cs
pop
inc
(bad)
mov
mov
sbb
cld
xor
aas
or
imul
jl
jae
or
mov
jg
test
enter
inc
pop
fwait
jns
sahf
mov
xor
jmp
add
int
add
enter
and
or
rol
cmps
arpl
fcom
pop
stc
int3
mov
(bad)
test
dec
or
lock
inc
mov
retf
mov
jae
ja
enter
push
inc
mov
and
loope
iret
ror
mov
add
push
inc
add
leave
ficom
int3
fstp
test
jns
mov
push
out
push
in
imul
in
cmps
fistp
enter
call
int3
mov
int3
push
call
retf
pop
es
sbb
pop
xor
and
jns
sub
out
das
daa
daa
cmps
sub
inc
or
gs
xchg
je
or
movs
adc
icebp
rcl
mov
ds
jl
lds
xor
ja
ins
outs
and
(bad)
xor
sahf
xor
inc
push
lahf
les
stc
push
adc
xor
mov
sahf
jmp
test
cmp
ja
and
inc
cmp
mov
in
xchg
jp
ret
rcr
jmp
out
arpl
pop
pop
aaa
fmul
ins
xor
inc
les
push
adc
int3
adc
push
pop
mov
cmps
gs
adc
ds
inc
(bad)
adc
jmp
imul
pop
test
das
xor
and
fdivr
adc
or
dec
add
pop
pop
sar
jo
std
adc
and
test
out
shl
add
push
jg
aad
pop
lods
xchg
(bad)
fisttp
int3
push
add
mov
cmp
hlt
sub
xchg
(bad)
stos
jnp
test
js
add
mov
cdq
sar
pop
dec
les
dec
sub
fld
aaa
aaa
int3
xchg
pop
cmc
sbb
push
ret
sub
pusha
test
dec
daa
pop
or
mov
fisttp
jns
push
adc
mov
xchg
adc
adc
cmp
dec
(bad)
pop
sbb
push
xchg
or
mov
idiv
mov
mov
cmp
adc
test
sub
lahf
dec
xchg
fldcw
das
pop
dec
ror
sub
adc
jmp
xchg
pop
ss
jge
pop
repnz
sub
or
test
mov
enter
lahf
or
enter
xor
rol
cli
mov
jle
stos
xchg
add
call
push
xchg
mov
sbb
pop
cli
sbb
mov
mov
aas
inc
mov
or
cmp
inc
mov
daa
fdiv
sbb
loopne
enter
add
test
ja
loope
dec
sub
mov
mov
inc
xchg
mov
lea
mov
add
inc
push
mov
mov
retf
call
int
pop
mov
movs
inc
jo
inc
lock
jnp
xchg
pop
mov
popf
mov
cmp
or
inc
jae
adc
adc
pushf
mov
jle
xchg
push
inc
bswap
mov
cld
sti
shr
sbb
loop
adc
dec
rol
cs
arpl
cmps
out
xchg
stos
xchg
outs
adc
pusha
pop
mov
ret
xchg
ficom
dec
sbb
daa
push
xor
ret
xchg
inc
sbb
js
adc
add
and
pop
mov
rcr
imul
pop
mov
mov
xchg
idiv
fldenv
jge
mov
repnz
sub
retf
jge
sti
(bad)
cmp
nop
pop
or
jg
mov
out
call
out
sbb
and
mov
in
xchg
(bad)
mov
dec
adc
bound
add
scas
enter
cmp
movs
in
jmp
les
loopne
mov
adc
or
(bad)
jno
lods
popa
loop
jp
les
mov
retf
mov
sub
(bad)
xchg
int
loope
sbb
fst
cmc
lds
jmp
cmps
jo
pop
fs
popa
add
mov
push
shl
out
cmp
or
ret
dec
icebp
call
pop
push
clc
lds
imul
jo
jmp
pop
das
std
dec
in
inc
push
sbb
push
test
mov
jbe
xchg
xchg
das
loopne
push
call
movs
jecxz
cwde
cdq
aas
adc
xor
cli
pop
aas
leave
inc
int3
ins
ins
and
sar
push
jns
push
jp
cmp
jno
sbb
jnp
dec
into
xchg
cmp
das
(bad)
and
inc
dec
pop
mov
ss
lods
xchg
addr16
movs
mov
mov
dec
into
pop
out
(bad)
retf
dec
lea
mov
or
sub
ja
aam
repz
mov
xchg
cmps
mov
or
mov
clc
mov
imul
rcl
push
mov
mov
push
cmp
xchg
scas
in
int
ds
clc
jnp
inc
out
dec
adc
inc
aas
leave
call
or
cmps
sub
cmps
jle
mov
inc
(bad)
or
mov
adc
push
dec
mov
add
add
jg
lds
lock
push
aam
jecxz
jno
mov
sub
dec
push
pop
stos
cmp
adc
(bad)
mov
push
xor
mov
sbb
sbb
ds
dec
mov
mov
out
call
(bad)
(bad)
cld
inc
fisub
and
mov
neg
fcmovnb
scas
cwde
lods
call
mov
mov
aaa
push
call
sbb
lea
push
push
add
cmp
mov
add
out
adc
in
mov
or
leave
pop
sub
xchg
mov
adc
or
jb
shl
data16
xchg
loopne
cmp
out
xor
ds
pop
mov
loop
test
aad
jge
out
xor
dec
in
pushf
scas
lods
cs
pop
pop
add
push
(bad)
cmps
fistp
push
mov
dec
sbb
sti
mov
in
bound
add
pop
bound
push
sbb
sub
outs
loopne
pop
xor
add
lahf
ins
fidivr
xchg
inc
pop
add
xor
and
fmul
sar
jbe
xchg
xchg
mov
loop
cmp
mov
push
fadd
int3
neg
sbb
out
inc
fld
mov
out
jle
cs
push
outs
push
loope
pop
jbe
add
lock
and
adc
pop
inc
add
xchg
jl
div
adc
imul
pop
pop
pop
or
and
pop
idiv
jmp
xchg
ins
sub
lock
mov
(bad)
mov
dec
mov
mov
push
adc
pop
push
lea
out
push
jns
cmp
call
stos
sub
movlps
ss
or
inc
repnz
push
fcom
clc
push
pop
jle
inc
das
call
xlat
and
sar
aaa
js
pop
iret
hlt
xchg
push
ins
pop
lea
mov
fcmovne
mov
dec
fcomi
mov
pop
add
xchg
inc
and
pop
add
cmc
xor
div
mov
aad
aas
push
xor
cmove
test
fdiv
cmp
add
xchg
jle
rcl
mov
(bad)
xor
imul
test
lods
xor
cwde
add
inc
adc
or
xchg
sti
mov
(bad)
movs
add
(bad)
push
or
movs
lds
dec
je
pop
aam
jp
(bad)
clc
inc
mul
adc
leave
ins
lods
loopne
add
mov
jno
rol
hlt
sbb
or
fdivrp
pop
xor
push
xor
test
jne
xor
outs
cmps
in
inc
add
pop
mov
mov
movs
lods
rcr
mov
pop
fld
mov
jb
push
lds
(bad)
icebp
xchg
adc
pushf
or
cdq
mov
inc
mov
adc
popf
in
pusha
out
shl
xchg
or
(bad)
in
mov
dec
jmp
mov
(bad)
mov
(bad)
mov
mov
sub
fldcw
jbe
ins
in
loopne
jmp
je
cmp
pop
pop
mov
and
mov
rcl
repnz
pusha
dec
inc
pop
and
retf
pushf
outs
jmp
xor
mov
(bad)
jne
and
sbb
in
or
push
cld
xchg
(bad)
push
ss
mov
add
mov
movs
test
inc
out
or
clc
scas
add
cmp
aas
adc
mov
(bad)
push
ja
outs
sub
idiv
dec
test
test
jp
or
(bad)
sub
fdivr
mov
in
imul
cld
mov
out
cmp
(bad)
les
fsub
scas
mov
stos
ds
jo
and
mov
adc
shl
jmp
dec
xchg
ret
lods
lock
adc
add
or
(bad)
pop
and
gs
push
push
inc
scas
inc
repz
xor
add
adc
cs
out
pusha
pop
outs
and
sbb
lock
pop
fist
jmp
sbb
in
aas
aas
push
cs
call
shl
scas
leave
fisttp
test
rcl
test
add
loopne
pop
int
in
iret
pop
xchg
fdiv
lahf
jle
jmp
pop
sti
js
daa
cli
pxor
ret
shl
retf
jecxz
cmp
mov
xor
push
addr16
retf
xchg
mov
sub
and
push
punpcklwd
test
add
push
not
retf
dec
push
mov
sub
pop
dec
repz
mov
inc
add
pop
and
or
jns
sbb
pop
in
mov
sub
jnp
cdq
popa
call
jne
mov
imul
cmps
fst
retf
mov
aam
ins
or
test
fs
mul
lds
add
add
std
sbb
aaa
imul
mov
idiv
scas
sub
dec
movs
and
inc
test
sbb
push
int3
inc
ror
pinsrw
sub
add
sub
push
dec
inc
daa
pop
test
imul
add
mov
push
dec
sub
fmul
pop
bound
xchg
mov
sbb
jb
adc
fild
lods
cli
cmp
jg
cmp
test
int
or
ret
iret
pop
in
push
in
xchg
ss
leave
jg
mov
mov
pop
outs
jae
stos
pop
dec
into
cli
mov
retf
test
sub
cmp
popa
push
xchg
cmps
pop
adc
cmp
out
sub
les
not
(bad)
jnp
jmp
push
sub
(bad)
popa
jae
popa
mov
in
ss
mov
int
jb
xchg
test
xchg
mov
cmps
push
pop
stc
movs
loope
mov
ins
xor
fidivr
rcl
sub
ss
int
xchg
es
add
gs
(bad)
aaa
xor
cmp
cmp
jp
fstp
pop
jae
mov
iret
movs
fst
pop
lods
stos
add
daa
js
out
inc
lea
test
push
frstor
jnp
cmp
mov
pusha
getsec
mov
xor
mov
dec
xchg
mov
je
outs
ds
or
dec
test
cdq
xor
add
cwde
or
jbe
and
btc
adc
pop
retf
test
into
or
inc
add
mov
int3
pushf
sub
sbb
add
sub
xor
mov
xchg
test
test
fstp
(bad)
icebp
xor
aam
rol
sub
aaa
sbb
enter
sub
out
mov
in
int
mov
enter
mov
sbb
mul
ins
xor
sub
adc
inc
dec
in
in
std
retf
call
adc
pusha
loopne
out
inc
cmp
push
imul
mov
inc
mov
ja
mov
jg
loope
push
retf
fdivr
push
fucomi
push
ret
in
pushf
mov
lahf
push
lea
(bad)
pusha
xchg
xchg
sub
inc
mov
leave
div
lods
push
lahf
ror
and
cs
inc
xchg
aaa
jmp
sbb
rcr
or
mov
sbb
fstp
adc
ins
sub
outs
retfw
adc
pop
test
adc
jmp
sahf
xlat
enter
cmp
sub
mov
xor
mov
(bad)
push
mov
cmp
xchg
jecxz
in
mov
(bad)
out
ret
rol
stos
outs
adc
std
cmp
loop
outs
jl
bound
dec
jmp
shr
and
cmp
dec
pop
mov
mov
cs
loop
lea
cmps
sahf
fwait
out
mov
movs
retf
stos
push
and
cmp
xor
push
dec
add
dec
icebp
out
addr16
jo
pop
jb
sub
mov
ja
scas
hlt
jl
dec
pop
mov
inc
fwait
or
ror
cmps
mov
(bad)
(bad)
jae
pop
inc
cmps
and
es
push
movs
push
aad
inc
sub
stos
fsubp
jmp
(bad)
push
adc
leave
outs
sub
push
sbb
jle
je
retf
fs
das
jns
out
push
xchg
adc
and
jmp
(bad)
and
imul
sbb
daa
jno
int
fs
cmp
movs
jp
mov
fmul
push
xor
dec
xchg
or
add
jo
mov
bound
add
repz
out
aas
fisubr
or
sbb
inc
cld
mov
pop
pop
into
enter
in
sahf
mov
jne
pushf
iret
pusha
or
adc
and
push
test
sbb
retf
inc
sbb
int
lahf
fadd
or
push
adc
and
aaa
cs
je
or
jnp
pop
ss
jbe
or
push
mov
hlt
push
jg
add
jmp
out
sbb
fwait
mov
cmp
sbb
add
mov
stos
stc
adc
jle
xchg
sbb
lock
mov
sub
call
mov
(bad)
dec
ret
and
adc
cli
outs
data16
jl
bound
push
or
dec
xchg
aas
movs
aaa
push
jg
sub
repz
inc
push
imul
nop
rcl
aam
sub
jb
add
jecxz
push
mov
mov
mul
sub
xor
xchg
mov
dec
push
fisub
daa
shr
mov
clc
dec
in
jb
shr
shl
rcl
and
arpl
dec
and
in
pop
adc
jns
pop
int
push
push
cmp
scas
jle
jecxz
outs
mov
or
jns
cmp
loop
ins
imul
push
std
test
pop
call
fsub
jecxz
pop
pusha
pop
jb
call
ficomp
shl
test
jbe
jp
jg
adc
pop
adc
imul
movs
or
(bad)
cmp
pop
clc
popa
or
jmp
fsubr
es
imul
iret
sub
sbb
cwde
pop
js
or
xor
pop
loop
mov
mov
pop
cmps
cmp
pop
push
cs
stos
jecxz
test
out
les
ficomp
cmp
cmp
int
mov
mov
scas
in
mov
push
aas
test
jbe
shr
das
jne
in
mov
cmps
inc
(bad)
aam
ins
sbb
pop
ds
fist
push
aaa
mov
call
mov
xchg
arpl
loope
push
int3
call
cmps
mov
into
inc
pop
js
test
dec
addr16
cmps
jns
std
(bad)
loope
jecxz
dec
out
xor
pop
or
mov
jp
cmp
xbegin
mov
iret
jmp
cs
popf
ds
adc
scas
enter
dec
or
mov
push
stc
inc
xchg
sub
fdivr
in
inc
mov
push
mov
(bad)
and
push
mov
jl
or
push
mov
ins
aas
push
adc
mov
test
cmps
mov
add
xlat
xor
nop
inc
jbe
fdiv
inc
mov
mov
daa
mov
pop
inc
js
sub
call
sahf
mov
arpl
xor
jle
sbb
cld
(bad)
std
lods
adc
jno
push
mov
ret
sti
test
add
jae
push
out
rcr
xchg
cmp
lahf
fsubr
dec
ins
jp
call
or
loope
mov
mov
mov
outs
push
scas
and
les
adc
outs
sub
push
out
xchg
cs
and
test
(bad)
xchg
sti
xchg
pop
and
add
sbb
mov
cmp
(bad)
push
xlat
cmp
fisub
jno
pop
pop
cmps
inc
inc
sbb
call
xchg
dec
(bad)
adc
xchg
jae
pop
inc
push
pop
mov
cmp
arpl
or
jae
int3
mov
test
retf
cs
adc
adc
pusha
dec
cmps
jmp
sub
add
sbb
and
nop
inc
adc
ss
gs
xor
sbb
rcr
or
je
mov
sub
mov
xchg
(bad)
sub
push
stos
add
jns
pop
lahf
mov
cmc
cmps
sub
pop
fdivr
xchg
jne
pop
ins
pop
cmps
cli
retf
ja
sub
cmp
scas
ret
adc
cld
jmp
div
jns
or
fcom
xor
mov
jp
ficom
push
call
jmp
dec
fadd
jmp
shl
sbb
scas
out
or
jle
xor
cmp
push
leave
mov
movs
shl
aas
cld
sbb
cmp
mov
mov
fild
sbb
xchg
ror
outs
gs
aas
jmp
mov
mov
mov
cmps
iret
mov
jge
in
hlt
jbe
xor
rcr
push
mov
out
nop
jo
push
or
shl
sbb
sub
and
pcmpgtd
loopne
mov
and
sbb
push
aas
add
add
ins
fdivr
outs
out
jmp
test
adc
dec
jl
rcl
bound
add
mov
jno
stos
mov
mov
(bad)
push
mov
pop
enter
push
push
and
jnp
jmp
pause
loope
jo
ins
push
shr
stos
jge
and
cdq
mov
addr16
push
leave
jl
(bad)
or
lods
sbb
pop
sub
mov
mov
xchg
adc
dec
pop
imul
data16
sbb
mov
loopne
int3
fdiv
pop
jae
sbb
dec
sbb
mov
add
mov
jno
loopne
mov
sbb
cmp
jge
popa
xor
mov
or
gs
jge
(bad)
in
ret
mov
jno
popa
pop
sbb
test
stos
push
outs
pop
and
movs
xor
aaa
leave
movs
daa
jmp
or
je
pop
push
push
icebp
sub
add
dec
adc
ret
js
cmp
sbb
loope
enter
sbb
mov
in
cmp
iret
push
jmp
scas
jno
mov
sub
dec
(bad)
imul
jnp
cmp
es
mov
pop
mov
ror
adc
movs
out
div
and
push
dec
sub
jl
or
shl
popa
pusha
test
cmp
addr16
pop
cmp
scas
jle
cdq
xor
xchg
mov
sahf
adc
and
loopne
icebp
pop
inc
cld
and
fisttp
jmp
aas
stc
mov
xchg
adc
je
push
repnz
fwait
repz
(bad)
cli
cmps
sub
lea
and
(bad)
pop
cmp
xchg
jmp
push
test
test
push
arpl
stos
inc
dec
mov
test
fisttp
adc
push
adc
ins
enter
and
fimul
out
call
fs
or
ret
adc
add
xor
xchg
arpl
or
mov
mov
test
xor
dec
mov
cdq
pop
fs
aad
mov
jmp
mov
cmp
adc
mov
movs
leave
dec
rol
xor
mov
stos
int
dec
xchg
pop
icebp
jp
ret
mov
ret
fisubr
scas
les
xchg
(bad)
jecxz
jle
fild
fisubr
pusha
jns
pop
ja
mov
push
sbb
fstp
push
adc
push
rcr
test
cmps
or
or
stos
nop
(bad)
adc
jecxz
ror
fs
test
mov
(bad)
mov
jle
loopne
adc
ret
cld
aam
jo
imul
retf
pop
push
popa
xchg
dec
xchg
dec
mov
and
fistp
mov
mov
int
jno
adc
cmp
fsub
dec
stos
and
fnsave
sbb
push
or
retf
inc
leave
cmp
(bad)
mov
fwait
(bad)
fiadd
and
jle
and
movs
mov
cmp
and
cmps
mov
jmp
jge
cmps
imul
mov
inc
sub
dec
call
mov
cwde
rcl
sbb
movs
cmp
mov
jp
(bad)
sbb
rol
ss
add
xchg
xlat
adc
adc
retf
sahf
jmp
inc
imul
and
cmps
jl
dec
add
sbb
mov
cli
xchg
scas
dec
pop
scas
fwait
popa
adc
rol
stc
cwde
or
push
push
ret
adc
js
rcl
mov
outs
add
not
fcmovb
add
pop
not
ror
sahf
jle
fild
push
xor
xor
repnz
outs
adc
loope
jmp
inc
popf
outs
addr16
hlt
in
clc
repz
mov
jmp
mov
mov
sahf
les
add
adc
dec
lea
pop
imul
mov
cmp
imul
pop
mov
pusha
jmp
and
inc
aaa
sbb
clc
add
xchg
loop
arpl
leave
sahf
je
sbb
inc
or
adc
pop
jbe
xor
jo
(bad)
xor
mov
add
aas
mov
aaa
shr
mov
(bad)
icebp
cmp
test
mov
ds
aas
ret
rcr
mov
jge
mov
mov
jne
inc
add
outs
sti
popf
jp
push
sahf
aam
push
scas
mov
test
fadd
int3
sbb
loope
cwde
cdq
daa
sub
and
sbb
pop
jl
xor
cmps
nop
push
cmp
test
into
fisttp
imul
jns
movs
mov
movs
jmp
daa
je
mov
ds
and
jmp
sub
or
mov
mov
jno
loopne
adc
mov
xor
xchg
popf
cmp
stos
or
mov
mov
es
aad
jmp
jb
pop
test
call
out
cwde
mov
jbe
leave
(bad)
sub
int3
xor
jne
pop
shl
sub
ins
add
sub
push
xor
and
adc
aam
mov
pop
push
call
adc
mov
test
adc
dec
add
cld
pop
xchg
icebp
iret
aaa
sub
add
les
xor
mov
das
aaa
cmps
iret
sbb
pop
xor
mov
mov
dec
dec
inc
sub
out
mov
push
mov
fsubr
or
push
xacquire
mov
mov
xchg
dec
cwde
adc
push
jecxz
adc
retf
bound
ins
jnp
call
hlt
test
push
adc
inc
fld
out
lahf
sbb
rcl
shl
jnp
or
sbb
jp
pop
in
adc
pop
stos
mov
mov
ret
shl
push
mov
retf
jmp
(bad)
outs
add
mov
push
outs
inc
call
and
pop
cmps
or
cmp
popa
fist
cld
cmps
cmp
pop
movs
out
ror
push
sar
mov
sti
int
xor
aam
(bad)
adc
jecxz
dec
push
js
(bad)
out
push
lahf
arpl
pop
pop
mov
inc
dec
push
dec
inc
aad
mov
enter
lock
imul
stc
mov
and
mov
(bad)
dec
daa
push
add
mov
loopne
and
mov
and
(bad)
and
imul
jae
mov
loope
or
and
sbb
(bad)
lock
xor
xor
push
fwait
lea
pushf
push
and
inc
mov
sbb
leave
mov
and
fdivr
call
int3
pop
movs
fild
loop
adc
test
dec
js
xchg
retf
or
iret
imul
pop
(bad)
out
cld
mov
mov
jb
lods
inc
cmp
repz
xchg
mov
in
mov
or
jo
lahf
ss
scas
jno
out
(bad)
(bad)
mov
xchg
aam
addr16
call
xchg
iret
push
jno
ja
out
iret
dec
mov
xchg
inc
cs
out
cli
mov
repnz
dec
aam
mov
ds
sbb
mov
or
mov
inc
scas
jno
xchg
aas
add
sbb
addr16
(bad)
cwde
(bad)
and
cld
out
out
mov
adc
pop
or
pop
mov
or
jae
pop
inc
dec
mov
xchg
outs
enter
(bad)
jmp
sbb
cld
sbb
sbb
addr16
jge
jle
iret
pop
xor
inc
ficomp
jbe
add
es
xlat
dec
jns
scas
pop
xor
xchg
dec
push
add
xlat
xchg
aad
shl
adc
(bad)
sbb
xchg
nop
clc
xchg
shl
xchg
jmp
or
or
das
dec
ficom
in
test
xor
mov
jnp
shr
mov
repz
movs
push
pop
or
xchg
cli
cld
cmp
sbb
jg
cmc
xor
cmps
mov
mov
(bad)
fdivr
lods
call
jo
retf
aaa
pop
nop
xchg
mov
jmp
dec
jnp
fstp
sbb
add
dec
dec
sar
or
mov
xchg
or
cli
or
ret
jmp
loope
pop
aas
mov
push
dec
call
sub
aas
jne
fcmove
or
push
mov
lods
adc
icebp
imul
lock
xchg
xchg
xor
push
fcmovbe
in
xchg
xor
cmps
ja
xor
aas
imul
add
or
or
adc
out
jbe
jl
mov
imul
mov
ds
dec
icebp
shr
ret
push
(bad)
daa
add
xchg
out
inc
stos
in
movs
sub
mov
ds
jge
shl
scas
and
leave
pop
neg
shl
adc
(bad)
adc
test
sub
fisttp
gs
retf
hlt
sub
aad
cmc
xor
jge
pusha
mov
xlat
bound
loop
pop
mov
fwait
(bad)
fsubr
stos
push
jbe
push
ins
sub
xchg
jo
int
inc
mov
mov
cwde
xor
add
dec
adc
cs
or
mov
not
out
mul
adc
scas
mov
rcr
mov
cmp
push
call
push
adc
fxch
push
xchg
or
lods
cmp
jne
jns
dec
mov
add
movs
push
adc
jmp
das
ja
mov
pop
inc
mov
adc
pusha
(bad)
aad
lds
sbb
fild
pop
push
in
sub
and
repnz
retf
inc
xchg
push
pusha
and
and
dec
mov
dec
or
xchg
ds
mov
push
cwde
jbe
pop
out
mov
xchg
pop
ss
stos
loope
mov
inc
cmc
sub
or
loopne
mov
int3
das
or
sbb
adc
loopne
int
push
dec
push
push
mov
sub
jb
data16
sub
fs
popf
jns
call
dec
out
ret
and
ret
(bad)
pop
mov
add
mov
xor
cmp
mov
cmc
call
(bad)
xchg
xor
jge
and
mov
ins
or
inc
aam
ror
imul
sub
jmp
fnstcw
pop
mov
test
and
call
hlt
test
jno
rol
or
call
inc
test
daa
adc
fisub
addr16
pop
inc
aam
xchg
fcom
xchg
mov
xchg
idiv
push
or
push
inc
shl
jne
inc
sbb
sbb
mov
jae
movs
(bad)
pop
rcr
sbb
imul
fnstsw
mov
and
fiadd
movs
test
xor
dec
rcr
push
or
stc
mov
dec
pop
ds
int3
sub
rcl
inc
retf
adc
mov
xchg
push
mov
push
gs
sub
inc
sub
jae
pop
xor
sub
pushf
mov
xchg
adc
or
xor
add
add
dec
scas
mov
add
pushf
add
shr
xor
xchg
and
das
cmp
dec
ins
pop
lahf
sub
pop
loop
daa
push
nop
add
je
sub
jne
fsubrp
and
pop
scas
pushf
cmp
jo
cdq
loope
sub
cmp
(bad)
loop
push
jge
cld
inc
(bad)
int
push
xor
(bad)
in
test
rcr
mov
xor
xchg
pusha
and
cmp
jae
xlat
cmp
mov
jne
inc
xor
inc
loopne
jmp
inc
call
aam
or
stc
ror
push
adc
sub
sar
cmp
push
mov
stc
jp
jmp
(bad)
pop
movs
sahf
mov
out
je
sbb
scas
enter
ret
sub
adc
mov
sub
mov
push
and
mov
inc
ins
nop
sahf
jne
popa
repnz
cmps
add
inc
xchg
rol
pop
cmp
pop
mov
into
out
loope
and
push
mov
lods
jne
les
mov
jb
mov
test
pop
cmp
and
sar
cmp
ds
dec
cmovae
loope
jb
int3
ins
test
(bad)
clc
dec
or
wbinvd
mov
dec
push
cmp
push
scas
and
out
test
fimul
push
(bad)
jge
je
push
sbb
mov
cmp
inc
xor
jp
popa
add
push
mov
push
add
xor
mov
jae
mov
pop
or
cmps
je
sub
mov
xchg
retf
add
xchg
mov
mov
(bad)
js
loope
adc
sbb
adc
cs
sbb
sub
jmp
scas
cli
lea
push
mov
scas
jp
jecxz
retf
push
mov
movs
cmp
pop
pusha
sar
cmp
aas
sub
inc
xchg
inc
pop
(bad)
sbb
fidiv
or
sbb
lea
loopne
push
or
and
std
jp
(bad)
les
cmp
xchg
dec
adc
stmxcsr
ret
sti
push
mov
add
or
jbe
shr
cmp
pusha
push
adc
jb
sbb
and
sti
add
in
das
test
pusha
out
jmp
iret
mov
out
lods
sub
and
inc
std
and
mov
pop
pop
mov
inc
xchg
jecxz
mov
rcr
dec
push
addr16
(bad)
in
cdq
retf
cmp
(bad)
jne
pop
rcl
rol
sub
dec
imul
cmp
mov
xchg
jl
imul
and
int3
and
sbb
hlt
sbb
mov
pop
cs
adc
push
fstp
cmp
pop
cmp
inc
or
push
les
adc
loope
push
cli
push
jp
push
pop
nop
cdq
retf
sub
mov
pop
imul
inc
ja
fwait
jnp
push
add
sbb
sbb
imul
fnsave
sub
xor
subps
test
pop
fmul
jecxz
outs
dec
cmps
sub
fwait
(bad)
cmp
(bad)
fcomp
pop
or
outs
fxch
mov
xor
or
pop
lds
pop
sbb
sub
xor
movlps
mov
jne
cmc
dec
push
mov
rol
dec
pop
std
(bad)
xor
shr
jmp
adc
ret
popa
aas
xchg
sub
(bad)
mov
add
imul
lods
or
cmp
add
movs
push
jnp
xchg
add
mov
gs
mov
add
push
popa
mov
jmp
sahf
scas
(bad)
sub
jl
mov
inc
lods
(bad)
test
es
xor
shl
sub
and
loop
mov
outs
jbe
xor
jae
push
test
xlat
rol
sbb
ds
sub
xor
sbb
arpl
arpl
mov
push
stos
xorps
push
jecxz
mov
(bad)
push
mov
dec
(bad)
sub
mov
cmp
(bad)
int3
mov
jae
cmp
fimul
jnp
jmp
call
inc
loop
jg
and
and
sub
mov
jmp
xor
mov
(bad)
outs
jno
(bad)
cmps
pushf
fld
gs
and
rol
and
rcr
dec
jbe
cld
faddp
shl
fwait
test
clc
mov
sub
add
mov
push
add
lods
or
pop
retf
icebp
into
mov
mov
pop
cmp
dec
pop
or
(bad)
push
xchg
repnz
enter
out
mov
push
sbb
int3
test
jle
adc
sub
shl
jne
imul
or
sbb
jge
in
repnz
addr16
jg
xor
popa
pop
push
xor
xchg
jbe
fmul
jne
jmp
sysenter
retf
repz
in
cmp
cmp
fs
cmp
stos
das
(bad)
xlat
mov
inc
and
inc
xor
jns
jno
sbb
movs
cmp
mov
ins
push
into
xchg
inc
ins
mov
push
fwait
movs
xor
add
ds
and
dec
fs
adc
cmp
addr16
xchg
lds
push
cmp
cmps
cdq
add
(bad)
cmp
arpl
pop
ja
pop
jne
mov
aad
add
aaa
ja
cmp
stos
stc
cmp
add
cwde
clflush
daa
mov
mov
fwait
pop
movnti
and
outs
mov
xchg
mov
fwait
mov
hlt
jmp
push
(bad)
sar
ins
daa
mov
push
cmp
dec
jae
dec
pushf
ret
mov
leave
stos
ins
std
int
shl
xchg
and
jmp
push
mov
cmp
aad
mov
mov
ret
dec
je
jbe
cdq
cmc
inc
adc
(bad)
fisubr
push
push
pop
aas
sub
add
pcmpgtb
fbld
push
inc
jb
dec
mov
(bad)
js
sub
jnp
xchg
sbb
stos
js
xchg
mov
cld
and
push
std
jno
outs
test
xor
loopne
xor
pop
aaa
cs
or
pusha
pop
test
cmp
xchg
add
int
mov
mov
imul
cmp
ja
jmp
xlat
movs
call
repnz
dec
dec
out
jmp
aaa
cmp
cmp
lods
data16
mov
mov
and
and
movs
dec
cmp
out
jne
ret
outs
jo
mov
daa
call
jp
mov
aad
push
rol
mov
sar
mov
test
loope
jo
sub
cmp
call
inc
jge
out
cwde
jge
or
jmp
lods
push
stos
inc
rol
mov
arpl
ret
outs
adc
mov
leave
cmp
pop
jo
push
ret
push
xchg
shr
jmp
sub
fwait
adc
pop
stc
adc
(bad)
popa
pop
push
lock
aas
mov
mov
or
setl
das
pop
jb
mov
mov
inc
mov
fwait
mov
(bad)
bound
jle
dec
inc
popa
xor
and
and
or
push
xchg
mov
mov
xor
(bad)
mov
dec
sahf
pop
test
jl
out
sub
popw
and
push
out
(bad)
jp
loopne
aas
fsubr
test
add
push
mov
es
mov
imul
loope
ror
jge
imul
call
(bad)
shl
jge
fcomp
mov
mov
call
pop
cmp
pop
pop
ficomp
pop
inc
pop
outs
adc
stos
mov
jne
cli
push
adc
mov
jno
call
xlat
aad
stos
or
inc
jnp
push
lods
jp
sub
stos
cwde
into
fldenv
adc
inc
push
mov
daa
pop
fsubr
push
mov
and
xchg
scas
and
loop
push
push
mov
cdq
aas
leave
(bad)
ja
cdq
into
cld
dec
sar
in
mov
les
jnp
xor
jo
movs
adc
mov
or
mov
add
lahf
mov
xor
pop
push
push
push
jl
sbb
dec
pop
push
xor
test
xor
pushf
lahf
lods
or
and
movs
push
scas
sbb
sbb
and
adc
mov
sbb
adc
jae
out
mov
into
sub
mov
rcr
inc
retf
das
in
push
or
sti
rcr
adc
xchg
jg
mov
jl
je
add
outs
jp
test
nop
jbe
sar
mov
inc
mov
repz
push
mov
retf
sub
fdivr
push
jge
es
(bad)
jne
mov
mov
mov
lods
jl
test
lds
addr16
add
test
call
adc
pop
mov
mov
clc
mov
cdq
fmul
xchg
clc
rol
xlat
push
lahf
enter
outs
not
adc
retf
ret
(bad)
cld
nop
les
jb
jbe
pop
xor
jl
outs
pusha
test
daa
mov
clc
mov
in
ja
pop
sub
lock
imul
dec
dec
pop
(bad)
mov
js
add
or
in
add
ss
fsub
mov
xor
sbb
int3
and
xchg
mov
jae
pop
xlat
add
rol
ffreep
test
pop
xchg
mov
bound
shl
fsub
in
aam
out
mov
pop
fld
or
test
push
pop
push
(bad)
aad
xor
dec
out
cmp
jno
sub
push
or
sub
cmp
nop
rcl
out
scas
mov
fadd
dec
lods
mov
mov
cmp
pusha
xchg
or
rcl
xlat
push
in
aas
sbb
or
push
sbb
pop
ds
pop
jne
cmp
not
xchg
jge
mov
jae
(bad)
cmps
scas
cmp
or
push
xchg
int
xchg
mov
icebp
push
test
or
aam
cmp
push
xor
out
inc
fisttp
lea
fidivr
pop
mov
dec
xor
(bad)
call
fstp
enter
and
mov
mov
jno
cli
out
test
push
push
cmp
fcmovnb
clc
fnstenv
inc
jp
and
fwait
repnz
and
popa
push
(bad)
add
mov
in
ret
icebp
mov
xlat
pop
sti
xchg
or
(bad)
aaa
retf
adc
mov
xor
iret
ins
adc
jmp
sbb
addr16
or
or
ffree
inc
xlat
test
shl
push
jg
mov
fmul
idiv
jmp
lds
mov
jl
out
icebp
scas
mov
movs
data16
lock
dec
jl
inc
cmp
dec
sub
and
into
aaa
pop
(bad)
sub
hlt
mov
push
test
push
dec
retf
dec
ins
xchg
inc
shl
in
es
xchg
call
jo
xchg
push
sub
mov
clc
mov
bswap
inc
sbb
ret
shl
das
mov
leave
scas
inc
fistp
xchg
fisub
fdiv
test
sbb
jmp
or
mov
cdq
dec
and
and
or
ss
leave
xchg
xchg
pop
or
repz
cli
adc
addr16
inc
dec
test
out
addr16
in
scas
sbb
cmps
and
es
xchg
jae
mov
sub
iret
push
jp
jns
push
es
fwait
outs
fsubrp
imul
adc
into
inc
dec
movs
or
addr16
inc
pop
fbstp
call
es
or
ret
out
xor
loop
sbb
push
movs
fsub
sti
mov
popa
rol
out
pop
in
pop
ror
ja
sti
bound
and
sub
ficomp
and
jl
fist
mov
adc
cmps
cmp
div
adc
push
cmp
and
push
mov
fidivr
stos
cmc
jns
jnp
jae
adc
adc
jmp
popa
or
nop
or
leave
push
daa
and
jl
pop
je
stc
pop
sbb
fwait
int
add
ja
jmp
sbb
outs
mov
jnp
pop
arpl
xor
in
fist
in
adc
cmp
add
arpl
ins
jno
sub
push
(bad)
or
fcomp
fnstenv
jnp
mov
dec
popf
aaa
je
xlat
xchg
int
cmp
mov
enter
adc
cmp
repnz
fs
and
pop
pop
test
js
mov
xchg
sbb
sbb
jbe
dec
cdq
clc
mov
pslld
jecxz
rol
cwde
pop
jl
es
pop
push
movs
sbb
or
ret
(bad)
dec
sbb
xchg
cmp
sbb
lods
fimul
mov
mov
dec
fidiv
mov
test
fadd
xchg
or
sbb
in
jae
scas
add
arpl
pop
push
cmp
jns
xor
sbb
jo
sbb
and
and
(bad)
cmp
idiv
push
ins
push
(bad)
mov
ins
out
mov
dec
mov
sub
dec
or
addr16
pop
lods
pop
lock
arpl
movs
cmp
sbb
retf
int
xor
clc
dec
and
enter
cmp
add
mov
sbb
mov
jl
sbb
in
jnp
cmp
imul
adc
mov
movs
fisttp
jge
inc
jno
js
sub
fnstenv
sbb
push
dec
push
pop
and
retf
mov
sub
ror
mov
retf
jmp
or
add
jecxz
pop
jnp
lahf
xchg
pop
cs
jno
lods
inc
leave
arpl
mov
mov
pop
in
cmp
ret
stos
or
mov
adc
cdq
adc
or
sub
ret
movs
retf
or
outs
xchg
mov
jg
cmps
xchg
jge
dec
ror
pop
jl
repz
inc
sub
ins
jne
cmps
out
aas
into
sahf
nop
imul
dec
inc
cmp
push
pop
jo
retf
test
scas
adc
test
mov
fisttp
jns
jmp
xchg
lds
popa
pop
mov
adc
add
xor
ins
inc
dec
shl
jnp
mov
add
mov
out
dec
push
inc
fcomip
cmp
ins
mov
xor
push
arpl
loope
mov
cmp
jo
and
imul
into
enter
lahf
adc
push
loope
stc
nop
push
jb
add
fisub
cmps
test
cs
dec
mov
xchg
into
and
fisttp
rcl
sub
ficom
push
jbe
inc
mov
inc
xchg
sbb
adc
dec
sar
sbb
ins
dec
xchg
sub
lock
out
clc
sbb
fsub
lods
sub
push
test
repnz
sub
and
add
pop
jae
cld
add
fmul
in
xchg
jmp
xor
add
add
cmc
pop
aaa
ins
fadd
pop
add
out
adc
or
inc
inc
mov
pop
js
jns
sbb
retf
jg
into
in
pop
cmp
xor
push
push
dec
in
test
les
sbb
mov
xchg
pop
jge
inc
or
call
ja
adc
loopne
sti
inc
scas
repnz
les
jmp
inc
loop
cld
push
mov
call
das
push
inc
jnp
(bad)
or
or
das
ficom
push
sbb
ins
bound
push
push
jbe
sti
sar
ja
sbb
aas
loop
add
fsubr
test
pop
mov
loopne
inc
add
icebp
and
mov
retf
add
mov
jle
sub
dec
mov
ds
div
sahf
mov
cmps
(bad)
mov
inc
mov
call
lds
imul
push
adc
cmp
arpl
sti
lods
mov
mov
cdq
retf
bound
pop
cwde
loopne
mov
dec
mov
inc
jecxz
jl
jne
cmp
mov
lea
xchg
in
sbb
lods
hlt
mov
cmp
mov
jb
outs
pusha
mov
jp
cmp
and
call
pop
cmp
shl
(bad)
aad
jns
mov
push
mov
ja
cmps
shr
stos
jne
out
ss
ja
nop
push
ret
and
inc
sub
adc
mov
jb
jge
mov
fwait
loop
les
or
inc
icebp
addr16
cmp
aam
adc
jmp
jge
push
dec
pop
dec
cwde
aad
scas
rcr
cmps
adc
pop
(bad)
in
stos
pop
pop
lds
jbe
jle
ret
addr16
(bad)
out
push
sbb
int3
pop
and
sbb
shl
cli
ins
fldcw
fst
xchg
pop
pop
outs
jle
and
jecxz
fnstcw
jb
push
pop
or
pop
adc
ins
mov
retf
jno
xchg
xor
rcl
jo
or
sahf
push
dec
imul
loope
cli
je
clc
cli
fmul
movs
cmp
add
stos
fwait
pop
sub
cld
pop
mov
daa
cs
sbb
sar
sub
add
aaa
xor
mov
fiadd
adc
sub
not
cmps
xor
fs
pop
sar
jne
pop
daa
cld
jbe
shr
data16
mov
sub
push
popf
ret
push
jge
add
pop
sar
call
xchg
data16
not
loope
into
cmp
retf
daa
loope
push
cmp
(bad)
test
sbb
mov
daa
inc
adc
idiv
fidiv
iret
jmp
xlat
sar
mov
data16
out
adc
jp
fadd
mov
cmp
cwde
shr
lahf
int
push
cmc
fist
aaa
inc
mov
sub
mov
adc
jnp
mov
std
imul
xor
mov
inc
dec
adc
cmps
fisttp
cmp
xor
sbb
test
pop
add
dec
mov
int
xor
retf
push
jle
inc
dec
push
jae
pop
outs
dec
(bad)
in
cwde
mov
sbb
mov
dec
jmp
in
mov
xor
int3
mov
(bad)
mov
push
and
jne
and
retf
ja
jl
mov
or
sar
adc
movs
das
retf
in
iret
test
mov
sub
cmp
ins
and
pop
shl
sbb
pop
shl
and
sbb
xchg
xlat
adc
mov
icebp
sub
and
sub
or
fs
arpl
sub
in
xor
loop
movs
out
jae
xor
or
cmp
(bad)
bnd
mov
dec
xor
pop
clc
xchg
fcomp
add
sbb
mov
call
lahf
repnz
fcomp
les
lea
add
xchg
clc
pop
mov
or
hlt
push
and
sbb
sbb
test
into
xor
pop
ds
push
push
lock
xor
cmp
jmp
push
in
sbb
adc
xchg
pop
int
adc
daa
mov
sbb
jg
(bad)
push
xor
add
cmp
dec
imul
sbb
(bad)
jmp
scas
aam
xchg
cli
add
mov
xchg
xor
sub
movs
mov
mov
xor
test
cmp
(bad)
fimul
popf
push
push
push
dec
mov
xchg
mov
pop
push
out
push
jle
ds
xchg
retf
add
dec
call
mov
xlat
sbb
mov
mov
cwde
dec
popf
int3
xchg
fcom
rol
(bad)
sub
popa
mov
xor
into
fdivrp
scas
test
mov
stos
out
mov
mov
push
sahf
mov
pusha
(bad)
mov
aad
(bad)
dec
mov
pop
dec
add
mov
cmp
sbb
xor
lods
inc
call
mov
jp
jb
or
mov
and
mov
mov
pop
into
adc
jmp
dec
inc
or
(bad)
sub
stos
arpl
sbb
jae
sahf
adc
in
cld
aaa
adc
inc
loop
push
call
xlat
push
fcmovnu
call
movs
int3
cmp
jae
sbb
imul
aas
aam
xor
mov
test
sub
pop
jbe
push
mov
and
not
xor
cmp
pop
lea
js
inc
xchg
je
cmc
(bad)
sub
imul
pop
imul
retf
lds
daa
cmp
mov
cmps
jle
push
and
cmp
inc
xchg
out
lods
sbb
inc
cmps
je
out
xlat
add
cmp
push
stc
icebp
push
xor
adc
jecxz
mov
add
popf
shl
mov
push
je
jno
cli
loopne
test
adc
mov
shl
fild
sbb
sbb
test
stc
imul
lds
jle
(bad)
adc
and
sbb
or
shl
jmp
adc
lock
out
pop
xlat
or
dec
scas
and
in
mov
(bad)
out
xchg
stc
ret
adc
sbb
mov
push
or
stos
push
ins
pop
xchg
mov
jnp
sbb
push
ret
mov
js
repz
add
dec
jae
add
push
add
xor
jmp
adc
inc
retf
push
aad
mov
es
cmp
sbb
xor
add
sbb
iret
or
push
mov
mov
cmp
lahf
mov
ret
retf
jnp
in
std
loop
imul
jg
jbe
lods
jnp
rcr
fs
sub
mov
sahf
stos
cdq
fimul
(bad)
ins
mov
mov
repz
repz
pushf
shr
rcr
stos
shr
das
(bad)
fnstsw
(bad)
or
mov
pop
lea
sub
sub
cmp
mov
jns
jmp
jmp
fwait
mov
call
(bad)
push
and
fwait
aam
ret
xchg
(bad)
ror
stc
mov
mov
sub
fucomip
(bad)
jmp
repz
or
xchg
inc
jo
js
(bad)
mov
sti
dec
shl
shl
aad
adc
lea
adc
cmc
std
jecxz
inc
(bad)
rol
out
call
(bad)
pop
ins
inc
pop
and
mov
dec
xchg
xor
enter
mov
push
outs
dec
mov
popf
call
rol
sub
cld
cld
lods
(bad)
dec
shr
inc
jp
lahf
adc
(bad)
jecxz
lock
ds
mov
out
mov
loop
aad
xchg
pop
mov
xchg
push
jge
lea
adc
loopne
jg
movs
add
sbb
inc
and
cmp
mov
sahf
push
jbe
je
xor
jbe
clc
inc
in
scas
push
nop
or
inc
imul
sbb
fisub
fdivr
lahf
and
retf
xor
sbb
adc
sbb
shl
fiadd
mov
xchg
bnd
xor
std
cli
(bad)
(bad)
mov
push
mov
leave
das
push
retf
inc
xchg
dec
jl
sub
push
cs
shl
xchg
ja
sub
fs
adc
pusha
sub
leave
sub
push
push
inc
repz
pop
cmpxchg
ja
mov
push
mov
cmp
cs
mov
mov
fiadd
ficom
into
push
and
mov
dec
loopne
add
adc
cmp
mov
and
cmp
mov
dec
(bad)
jmp
dec
add
(bad)
cwde
bound
shl
gs
mov
ret
fisub
scas
pop
jnp
sub
inc
push
and
in
inc
arpl
pop
xchg
cmp
or
daa
push
xchg
ins
sub
push
aaa
pop
pop
mov
jge
push
mov
int
sbb
mov
(bad)
call
jno
push
mov
sub
cdq
js
add
add
mov
cmp
popf
jb
add
loopne
das
push
push
les
cmp
int3
and
mov
cmp
xchg
push
mov
jle
push
ret
test
cmp
pop
jb
shl
bound
xchg
cmp
aaa
jmp
stc
scas
shl
cs
daa
aad
dec
iret
sbb
or
sbb
jno
aam
clc
push
xchg
jge
das
mov
mov
jo
sub
int3
push
xor
xchg
or
ror
and
cmp
std
cmps
cmp
call
or
jecxz
loope
imul
rcr
in
mov
xor
cmp
lahf
mov
sub
and
xor
inc
shl
into
dec
ins
add
lods
adc
lods
or
mov
rcl
(bad)
push
mov
dec
ja
data16
fldl2t
mov
sti
outs
cmp
nop
rcl
jle
movs
lock
les
ror
cmp
lahf
pop
xor
sub
(bad)
jbe
xor
mov
or
jbe
or
inc
cld
jle
imul
push
cld
test
arpl
ja
mov
bound
out
sbb
mov
loope
movs
xor
loope
mov
push
(bad)
sbb
(bad)
retf
not
(bad)
sar
mov
mov
fst
hlt
sbb
xchg
xchg
or
stc
pop
mov
outs
lods
xchg
mov
sub
jmp
add
aam
mov
jmp
ret
and
dec
mov
test
mov
out
js
stos
int3
inc
mul
sahf
(bad)
popw
or
jae
cmp
cmps
out
sub
xlat
cmps
fwait
sbb
mov
out
jnp
cmps
cmp
ja
mov
mov
push
test
(bad)
fmul
std
and
loopne
fwait
and
jnp
aam
lods
addr16
mov
lahf
lods
push
int
sahf
dec
out
repnz
or
push
dec
adc
in
inc
pop
xchg
dec
push
and
inc
fld
or
movs
lea
fistp
repnz
push
xchg
loopne
xchg
mov
daa
mov
int
sbb
sbb
js
cmp
retf
or
or
jge
dec
jns
push
inc
imul
xor
and
into
push
add
pusha
sbb
mov
loope
bnd
pop
ret
(bad)
mov
inc
mov
mov
cmc
outs
pop
out
(bad)
ror
mov
sub
adc
pop
bound
pop
(bad)
and
inc
xchg
aad
sub
xor
and
scas
cdq
cmp
int3
(bad)
jne
jge
ficom
sbb
push
stos
sub
repnz
push
and
fs
mov
adc
sbb
(bad)
cld
mov
loope
cmc
icebp
clc
lahf
pop
push
xor
mov
inc
fnstenv
dec
ja
inc
in
mov
retf
mov
or
fs
xor
add
mov
mov
nop
mov
iret
loop
cmp
xor
ins
adc
pop
pop
pop
out
and
jmp
(bad)
and
shr
and
and
stos
mov
mov
arpl
push
mov
mov
pop
xchg
cmp
lds
adc
inc
es
jmp
sbb
hlt
scas
or
sti
pop
pop
rcr
mov
xor
cdq
pusha
dec
xchg
xor
cmps
ret
shr
xchg
shr
and
xor
xor
imul
sub
test
in
ja
lods
dec
sub
dec
mov
adc
js
jl
push
int3
jmp
fwait
and
mov
call
fcmovnb
sbb
cdq
icebp
sbb
pop
les
push
rol
jp
mov
out
ins
push
repz
sbb
daa
cli
mov
add
jl
in
jmp
cld
lock
push
mov
mov
sbb
les
fnstenv
jne
retf
mov
xor
ja
jns
not
fwait
ror
ret
test
xor
mov
aam
fstp
scas
jl
jecxz
and
cmps
data16
cld
cmp
push
outs
jnp
scas
and
fmul
sub
iret
and
or
jl
repnz
lahf
dec
fsubr
xor
mov
popa
xchg
lods
push
out
mov
sti
mov
cwde
dec
cmp
xchg
ret
leave
push
sar
sub
in
add
sti
xchg
add
das
pop
xchg
mov
sub
jbe
shl
jae
push
adc
dec
fcmovnb
push
stc
xchg
(bad)
jge
and
fadd
fbld
ret
add
ret
add
js
cmp
scas
ja
xchg
pusha
neg
mov
add
mov
or
sbb
cmp
and
out
int3
sbb
push
movs
or
xor
adc
cli
clc
pop
fimul
pushf
stos
shr
or
in
test
push
xchg
ret
gs
xchg
jge
call
mov
into
call
push
pop
arpl
lock
faddp
scas
sbb
dec
sbb
xchg
sub
(bad)
in
pop
shr
add
mov
sub
imul
jne
scas
nop
pop
dec
sbb
cmp
jle
xchg
pop
adc
enter
sahf
jnp
shr
retf
adc
in
cmp
(bad)
popa
or
packssdw
mov
cwde
pop
les
pop
test
inc
mov
xor
jns
xor
(bad)
pop
shr
repz
imul
popa
mov
fs
mov
loop
jmp
inc
fwait
sbb
bnd
dec
fs
imul
sbb
lds
push
lods
in
repnz
fiadd
cmp
push
imul
rol
in
cmp
cmp
mov
inc
inc
cmps
pop
(bad)
cmps
sbb
add
mov
jb
cmp
(bad)
mov
es
(bad)
jle
inc
retf
in
cmp
sbb
in
or
lahf
jnp
xor
mov
pop
sbb
adc
imul
call
pop
xchg
or
xor
iret
imul
retf
push
pop
mov
cmps
ror
pop
mov
(bad)
xchg
jns
or
push
mov
cmp
outs
rcl
dec
call
fist
sub
xor
fsub
aad
stc
mov
sti
adc
or
leave
pusha
fild
pusha
outs
cmp
inc
int
xor
and
lods
pop
cmp
fmul
sbb
inc
cmp
sti
clc
xchg
mov
xchg
cmp
cdq
cmp
cs
mov
loop
aas
sar
out
out
sbb
lgs
test
lahf
cwde
add
call
stos
(bad)
dec
sub
push
dec
mov
arpl
dec
sbb
icebp
jo
pop
arpl
jo
fstp
jnp
into
pop
cmc
or
test
stos
jo
mov
mov
add
jge
jae
sub
ret
pop
movs
stc
test
hlt
mov
inc
xchg
inc
test
sbb
pop
enter
adc
arpl
xchg
inc
inc
pop
mov
in
retf
mov
mov
repnz
cld
sub
and
cdq
dec
ret
push
aad
adc
ss
lock
pushf
add
pop
adc
pushf
pop
dec
aas
add
fstp
call
ret
out
stos
inc
adc
not
jno
adc
imul
mov
sbb
stos
outs
or
or
fs
or
out
jg
pushf
cmps
push
mov
adc
push
popf
pop
jb
es
fild
retf
mov
sub
mov
ret
dec
add
cbw
fcomp
mov
loope
xchg
pusha
inc
lea
popw
mov
inc
call
sbb
cld
inc
(bad)
fst
mov
cmp
pop
sub
cs
adc
add
fisubr
mov
or
shr
pop
in
pop
les
popa
lods
dec
(bad)
and
shr
into
(bad)
fsubr
inc
adc
mov
jbe
inc
mov
sbb
xor
lahf
test
mov
ja
fwait
arpl
aaa
fstp
push
sbb
cmps
mov
jae
out
mov
sub
xor
mov
push
enter
hlt
imul
push
adc
jl
imul
mov
je
xor
fxch
mul
fucomi
jbe
outs
xchg
jnp
shl
int
addr16
dec
mov
xor
xlat
popf
jmp
sub
add
adc
in
pop
cwde
sbb
cmp
cs
xchg
adc
mov
neg
std
ret
in
mov
xchg
sbb
mov
in
scas
enter
dec
test
lods
shl
mov
push
cmp
push
push
cs
mov
out
cmp
mov
lods
leave
lods
fbld
jne
cmp
push
(bad)
loopne
out
jle
mov
rcr
fadd
jmp
rol
pop
leave
rcr
jge
sbb
rcr
push
sub
retf
popa
mov
fwait
pop
xchg
cmp
cmps
loope
fmul
lea
cdq
add
sub
sub
push
pop
mov
adc
mov
div
xlat
les
push
and
mov
mov
pop
dec
cs
iret
pop
jo
cwde
inc
shr
and
xchg
shl
cmp
dec
pop
dec
sub
xchg
stos
ja
inc
jns
xchg
jo
xchg
sub
pop
icebp
out
retf
mov
adc
neg
pop
add
int
mov
mov
in
add
jg
inc
and
mov
(bad)
cld
ror
aam
adc
jb
fwait
cmp
push
aas
fisttp
push
pop
call
fdiv
xchg
jg
mov
test
je
xchg
call
pushf
jns
and
cmps
xor
mov
in
mov
sbb
imul
or
jo
jl
sub
cmps
sub
dec
push
and
stos
imul
out
push
lods
dec
push
jmp
sub
retf
in
in
or
rcl
cmp
icebp
sbb
ffreep
pop
out
(bad)
jg
mov
or
add
cmp
ror
(bad)
lods
leave
xchg
imul
cmp
cmps
mov
loopne
lods
sub
mov
sub
into
inc
(bad)
retf
stos
inc
xchg
test
popfw
pop
adc
aas
retf
(bad)
push
out
test
fs
call
pop
int
lahf
push
jge
xchg
xchg
lock
(bad)
sti
xor
inc
mov
fnstcw
dec
sub
inc
push
jle
push
(bad)
repz
push
hlt
aaa
scas
mov
je
rcl
mov
and
mov
retf
ins
xor
cs
mov
sbb
mov
in
jmp
pop
stc
pop
shr
pusha
imul
sbb
mov
leave
ret
pop
sbb
mov
les
sar
ins
or
lahf
cs
or
sub
mov
push
mov
test
pop
jmp
sbb
jmp
scas
je
in
cwde
dec
test
mov
sbb
or
inc
out
loop
dec
xchg
or
sub
das
imul
lahf
fadd
mov
add
sbb
dec
mov
inc
in
jg
clc
imul
jne
ins
and
xchg
in
movaps
sbb
push
xor
addr16
pop
mov
lock
das
pop
outs
push
in
int
inc
sbb
xchg
adc
push
push
pop
and
ret
jmp
nop
push
mov
xor
inc
sub
ss
jbe
call
mov
shl
jmp
xchg
cmovnp
sub
out
das
aam
or
inc
inc
cdq
jb
pop
out
adc
xchg
stos
je
xchg
sbb
pop
cmps
and
pop
jbe
sub
imul
dec
mov
mov
sti
in
adc
sbb
je
ss
std
rcl
push
je
das
dec
pop
leave
xor
push
adc
loop
xchg
add
dec
adc
and
or
imul
lds
inc
fcmovnb
ja
and
and
les
movs
mov
mov
xor
add
sub
add
xchg
xlat
or
pop
mov
pop
mov
lods
add
jle
cs
or
dec
lock
int
jne
mov
arpl
cmp
ins
mov
jl
dec
mov
arpl
xlat
sub
push
scas
push
cmps
mov
fadd
pop
stos
leave
cwde
xchg
je
sbb
mov
les
lods
cmp
xchg
jge
pop
ret
out
aaa
test
mov
scas
lds
aas
movs
frstor
jmp
repnz
clc
xchg
out
inc
mov
ret
mov
js
or
sub
dec
idiv
lods
cmp
fist
stc
int
(bad)
dec
dec
mov
jge
jns
adc
je
das
mov
and
mov
(bad)
mov
mov
movs
(bad)
popa
(bad)
cdq
std
outs
push
(bad)
rcr
(bad)
shr
cmps
icebp
adc
xor
mov
test
aad
pop
icebp
mov
aaa
or
scas
inc
out
sti
retf
repz
jg
addr16
ret
shr
lds
push
imul
rcr
fist
push
mov
fwait
xor
loop
push
add
push
jo
in
pop
pop
xchg
or
icebp
ss
out
jno
movs
sbb
add
xchg
pushf
sbb
push
not
add
xor
imul
or
jo
(bad)
fldlg2
xchg
add
call
fsub
inc
loop
fstp
cmps
je
xor
cs
or
ds
je
fadd
test
push
retf
and
scas
dec
in
(bad)
cld
ret
shl
cli
sub
popa
imul
or
in
xchg
inc
test
jg
call
add
mov
xchg
xchg
das
cld
sar
dec
addr16
inc
iret
(bad)
aam
inc
mov
psubusw
pushf
push
push
jns
lods
dec
dec
push
enter
push
inc
loop
add
jbe
fisub
adc
inc
mov
sub
aas
test
mov
lock
call
xchg
das
out
test
mov
mov
lds
mov
and
adc
fucom
inc
(bad)
cmp
mul
pop
cmp
mov
inc
sub
scas
mov
dec
aaa
(bad)
adc
movs
cmp
ret
fst
imul
cmp
xchg
mov
push
rcr
daa
psrad
jp
rcr
pop
jmp
pushf
lds
add
or
in
add
loope
jb
xor
dec
push
sbb
(bad)
dec
outs
lods
xor
out
fist
xchg
imul
lods
icebp
or
movs
mov
sbb
and
test
inc
pusha
in
lods
and
xor
in
xchg
mov
sub
in
mov
xchg
mov
and
inc
xchg
ret
add
repz
scas
xor
out
dec
aas
outs
aas
and
dec
jl
pop
(bad)
fcom
pop
add
aam
xchg
xchg
mov
cmp
sub
cmp
mov
or
outs
mov
sub
mov
lea
popf
ror
or
mov
adc
hlt
lods
jle
out
daa
int
outs
(bad)
mov
addr16
fcmovb
fild
pop
test
ins
pushf
fwait
imul
jb
cmp
mov
adc
mov
cmp
fisttp
in
inc
inc
into
xor
mov
mov
fild
jecxz
mov
xchg
and
(bad)
sub
inc
inc
and
jb
pushf
xor
mov
adc
inc
aam
jge
in
mov
inc
rol
mov
push
lods
mov
lahf
cmps
mov
or
mov
inc
repnz
ins
shl
push
sbb
mov
shl
sub
jle
stos
gs
sub
dec
test
shl
rol
je
xchg
adc
push
sub
outs
mov
ins
fwait
icebp
loope
mov
gs
std
lock
in
cmps
mov
inc
pop
cmp
jecxz
in
dec
nop
scas
ret
push
inc
jns
adc
je
inc
sub
ror
mov
mov
nop
inc
mov
mov
gs
and
shr
dec
xchg
stos
pop
test
adc
lock
nop
loope
adc
mov
mov
aad
mov
xchg
xchg
mov
mov
mov
push
ss
jae
(bad)
movs
cmp
pop
and
fld
or
xchg
movs
arpl
ficomp
scas
in
(bad)
mov
stos
jmp
pop
push
sub
(bad)
cs
sub
clc
fwait
or
arpl
push
shl
pop
adc
lock
cmp
rol
loope
out
inc
cdq
aaa
xchg
les
or
data16
scas
mov
cmp
(bad)
rdtsc
div
mov
in
daa
mov
mov
cld
inc
push
icebp
push
stc
ds
lds
adc
outs
mov
mov
pop
and
cmp
or
xchg
lds
adc
int3
sar
movs
mov
pusha
bound
in
aad
sar
jo
test
sub
xor
push
into
dec
stos
stc
jp
dec
(bad)
shl
test
mov
add
push
ins
cmps
jp
jge
stos
out
sub
adc
retf
imul
jbe
inc
adc
test
add
in
cmc
or
shl
cmp
aaa
jnp
pop
cmc
sbb
pop
jmp
leave
push
test
pop
mov
data16
add
sub
push
pop
jmp
push
gs
push
mov
pop
cwde
wbinvd
push
imul
push
sbb
mov
jo
push
lock
out
cmp
push
ret
aam
dec
pop
ins
mov
xor
std
inc
push
popa
sbb
in
push
mov
lock
out
inc
mov
jmp
jo
and
sbb
ror
(bad)
(bad)
test
test
mov
mov
sub
jne
lods
jns
jne
fmul
pop
adc
add
and
mov
push
jo
fidiv
cmp
xor
and
test
pushf
cwde
sbb
adc
inc
out
push
cmp
add
mov
and
jnp
jmp
or
mov
xlat
sbb
(bad)
addr16
cli
mov
xchg
pop
mov
jg
cmc
and
test
pop
push
pop
enter
pop
dec
push
jne
xor
js
adc
std
jmp
dec
loopne
push
xor
mov
cli
aaa
jae
push
xchg
jnp
jle
fwait
push
call
mov
daa
inc
fisttp
pop
fnstcw
sub
add
and
fstp
iret
loopne
fistp
add
iret
xor
mov
mov
or
cdq
adc
push
mov
dec
fisttp
std
lea
xchg
in
cmc
test
inc
adc
mov
or
ret
imul
and
mov
les
fld
lods
adc
xor
js
fdiv
addr16
sbb
jecxz
cmp
jecxz
mov
nop
ins
and
inc
and
aaa
sbb
loope
bound
xchg
sbb
div
cmp
retf
xor
cdq
adc
jae
cmp
call
xor
jmp
in
repnz
xchg
movs
add
fisub
test
mov
fld
dec
jae
inc
fdivrp
cmp
sbb
sub
aaa
push
sub
sub
add
dec
movs
mov
jbe
ins
lods
xchg
mov
or
jmp
and
jle
fcomip
mov
nop
pop
sub
sti
ror
mov
fist
fwait
mov
mov
retfw
jge
cmps
or
mov
pop
and
repnz
pop
out
(bad)
fxtract
jo
rol
cmc
or
fwait
cld
out
iret
inc
ss
mov
or
adc
mov
dec
cld
xchg
push
inc
jae
add
adc
push
pop
dec
xchg
mov
ret
xor
jbe
sbb
into
popa
test
push
mov
dec
and
jbe
sub
loopne
mov
test
xor
rol
xchg
mov
stos
sbb
retf
sbb
mov
pop
js
inc
mov
jl
sub
hlt
sub
mov
xlat
cwde
push
ins
add
ja
mov
out
jo
cdq
lods
pop
push
pop
push
inc
(bad)
push
xchg
lock
sbb
mov
sub
(bad)
pop
adc
xchg
mov
test
gs
or
ret
pop
jb
mov
imul
adc
aaa
repnz
retf
call
add
sub
sub
es
cmps
dec
mov
inc
jmp
mov
jle
mov
push
pop
cmp
(bad)
repz
imul
push
push
mov
push
mov
dec
push
xchg
push
adc
mov
retf
lock
ss
sbb
dec
adc
out
mov
add
xchg
outs
imul
xor
fmul
cmp
icebp
mov
test
push
mov
(bad)
enter
mov
in
cmp
or
jecxz
pop
sbb
cmp
inc
dec
neg
fsub
lahf
mov
fwait
ror
pop
loopne
mov
scas
frstor
push
arpl
or
repz
cs
sub
sbb
pop
daa
ret
jbe
shl
lods
and
mov
push
cmps
or
cmp
mov
add
push
mov
sub
pusha
ficom
in
dec
xchg
mov
mov
mov
push
mov
fcmovb
sbb
or
cmps
repnz
or
push
inc
push
jnp
sbb
xchg
cdq
ja
icebp
adc
popa
adc
pusha
std
adc
ss
(bad)
push
or
cwde
or
push
(bad)
adc
mov
shl
(bad)
idiv
jp
in
outs
sub
xchg
add
in
fisub
call
stos
xchg
scas
pop
push
mov
push
mov
or
inc
jg
inc
(bad)
rcr
xlat
dec
or
pushf
pop
ret
out
and
xor
jmp
inc
mov
cli
ret
push
sbb
dec
imul
cmp
ins
fldcw
xor
sub
xchg
dec
sahf
in
xor
int3
cmp
push
vpcmpeqb
arpl
mov
data16
call
and
not
std
in
loop
bound
pop
pop
mov
sub
jmp
push
imul
and
movs
scas
lods
mov
mov
pop
jb
pop
sub
jo
xchg
xchg
mov
gs
(bad)
cs
xchg
cmp
(bad)
in
pushf
lock
frstpm(287
xchg
out
mov
repz
aaa
cli
mov
loop
into
xor
cmp
or
add
stc
sub
xchg
xchg
pop
into
scas
call
push
sahf
and
jb
cmc
stc
add
pop
mov
cmp
mov
retf
ret
or
and
and
adc
cmp
dec
shr
popa
pop
mov
leave
imul
push
in
popf
adc
out
push
xchg
(bad)
in
inc
stc
jecxz
pop
outs
cdq
and
ficom
jge
mov
fdivrp
sahf
mov
iret
push
out
push
ins
std
mov
cmp
sub
add
xchg
pop
ins
mov
adc
adc
data16
daa
jp
cmp
out
in
hlt
cmc
and
push
ret
sbb
pop
mov
movs
test
xor
pop
or
sub
xchg
int3
(bad)
pop
xor
mul
mov
sub
daa
fstp
hlt
add
pop
inc
cs
dec
or
xchg
pop
sub
or
pushf
(bad)
paddusw
ins
cmps
int
mov
mov
push
bound
inc
mov
pop
(bad)
cmp
dec
hlt
sbb
mov
pop
(bad)
ds
add
ds
xor
sbb
mov
mov
cwde
into
dec
jl
add
into
mov
mov
mov
std
clc
xchg
and
bound
dec
and
and
inc
(bad)
(bad)
push
pop
add
arpl
fadd
push
mov
clc
push
inc
sub
cld
adc
enter
push
xchg
mov
rcl
out
sub
inc
dec
cmp
hlt
push
and
inc
aas
mov
fisttp
js
scas
jnp
unpckhps
add
xor
std
shl
add
rol
or
mov
or
fcomp
add
ins
push
xchg
repnz
push
or
hlt
dec
inc
xchg
or
(bad)
and
or
enter
out
add
push
xor
jmp
mov
shl
jge
repnz
mov
loop
xchg
xchg
cwde
xor
pop
mov
or
aad
movs
jl
adc
jmp
sub
cld
retf
out
arpl
loop
fimul
inc
and
bound
out
dec
push
inc
test
and
pop
xchg
jmp
arpl
fdivrp
call
outs
daa
adc
popa
xchg
je
popa
dec
push
call
cld
and
je
es
jae
imul
mov
pop
dec
scas
jae
pusha
mov
(bad)
loop
daa
les
mov
movs
push
movs
jno
pushf
mov
sbb
loope
or
ret
cli
adc
ja
jge
nop
xchg
fimul
inc
sub
(bad)
retw
dec
scas
and
or
push
std
fwait
ret
test
(bad)
call
jmp
jno
fst
inc
adc
pop
sahf
sub
icebp
and
push
push
gs
sbb
ja
cmp
sub
pop
mov
scas
fsubp
adc
ss
and
mov
in
dec
mov
adc
and
cmc
popf
sub
xchg
inc
out
add
shr
fwait
mov
leave
loop
jmp
and
mov
js
push
mov
neg
push
stos
mov
cwde
pop
cmps
or
enter
int
adc
setp
cmps
cmp
inc
aas
loope
push
stos
mov
in
xlat
jmp
mov
int3
lock
jmp
jae
aad
cmp
or
push
mov
std
xchg
and
cmc
push
call
inc
sbb
je
aad
sbb
push
dec
aam
push
and
je
mov
or
mov
pushf
(bad)
test
int
int
mov
push
in
xchg
retf
lds
and
cmp
shl
pop
stc
popf
test
xor
xor
add
adc
xchg
(bad)
ins
cld
lea
pop
lea
retf
pushf
lahf
jo
popa
dec
mov
test
inc
repz
push
and
cmps
xchg
(bad)
fwait
lods
and
clc
add
add
pop
out
mov
popa
scas
dec
xlat
push
jmp
sub
stc
nop
jecxz
sahf
xor
aaa
in
push
icebp
lods
cmp
cli
icebp
shl
mov
xor
test
cld
daa
lahf
retf
cmp
jb
mov
retf
push
push
pop
push
jecxz
mov
sahf
fisttp
inc
xchg
or
mov
or
stos
xchg
xchg
stos
add
xor
sbb
(bad)
les
ret
lea
stc
mov
out
adc
stos
jnp
xor
aaa
sbb
iret
pop
ins
adc
mov
dec
loope
cmp
jb
dec
inc
jns
mov
adc
test
cmp
es
jno
pop
sbb
mov
fisubr
call
test
fidivr
xchg
cmp
push
xchg
sbb
inc
inc
or
call
loop
out
daa
fmul
xchg
pop
add
mov
pushf
jecxz
push
pusha
mov
and
rcr
mov
inc
or
xor
ror
mov
push
dec
stos
mov
(bad)
loopne
aaa
retf
enter
test
push
mov
adc
test
repnz
sub
jbe
fimul
out
sub
lahf
push
fist
into
mov
mov
lods
std
ss
dec
sub
cmp
ds
jnp
cwde
sub
call
cdq
repnz
jae
sub
inc
sbb
mov
or
pop
loop
out
cmps
ja
call
test
test
imul
movs
inc
xlat
cmp
and
mov
dec
adc
sub
sbb
imul
clc
adc
mov
push
cmps
mov
ror
loopne
shr
aad
pop
inc
or
or
nop
push
inc
sar
push
and
mov
inc
out
je
add
mov
mov
mov
pop
and
fisttp
stc
scas
mov
jmp
jmp
das
fnstsw
cmp
mov
pop
iret
ror
jmp
vpmacssww
retf
xchg
adc
(bad)
fisttp
aas
dec
shl
loope
dec
mov
push
mov
idiv
jne
push
jl
jmp
popf
push
stos
or
push
mov
push
shl
xor
or
cmps
or
aad
cmc
jmp
push
mov
push
jl
clc
retf
xlat
and
sbb
xchg
lods
add
push
mov
inc
call
mov
jecxz
jbe
(bad)
lods
dec
push
xor
xor
adc
(bad)
mov
es
ficomp
repz
push
stos
xchg
xor
dec
scas
mov
push
xchg
ss
mov
xchg
fs
xchg
cmps
push
xchg
mov
xchg
sbb
or
lahf
push
(bad)
adc
or
add
ret
into
inc
mov
es
cld
push
(bad)
adc
adc
(bad)
xchg
fild
push
sub
mov
inc
sbb
push
dec
stos
mov
and
stos
sbb
mov
inc
outs
mov
in
jmp
inc
mov
jbe
xchg
sub
ja
ror
xchg
and
in
ficomp
cmc
into
mov
cld
cmp
lds
inc
cmp
inc
sbb
fisttp
jnp
(bad)
or
ja
jl
mov
popa
push
movs
test
lock
idiv
stos
sbb
das
out
mov
xchg
adc
not
mov
fimul
ja
imul
pop
sub
rcr
or
test
arpl
xchg
mov
movs
pop
bound
repz
mov
xor
ror
push
scas
sub
xchg
inc
adc
ins
and
jno
cmps
das
(bad)
in
jg
xchg
dec
(bad)
mov
sar
sub
scas
inc
ds
cmc
dec
scas
dec
enter
nop
mov
sbb
cwde
mov
sub
push
(bad)
sub
cdq
pusha
mov
std
sub
inc
pushf
push
mov
push
pop
in
mov
mov
bound
enter
inc
leave
stc
mov
sbb
xlat
dec
cmps
pop
sbb
repnz
mov
inc
xchg
out
and
mov
fiadd
stos
push
fmul
sub
mov
sub
sbb
or
sub
push
adc
mov
push
xchg
mul
pop
jo
jb
bound
(bad)
int3
shr
cmpxchg
test
push
sub
jno
lahf
call
jnp
mov
daa
or
mov
jmp
adc
add
xchg
rcr
adc
loopne
fstp
or
out
fcmovne
xchg
push
loope
xchg
sbb
std
imul
mov
fwait
xchg
ins
push
lds
mov
dec
and
ins
xchg
arpl
xlat
add
sub
push
in
je
retf
sbb
ja
or
stos
dec
sbb
push
imul
test
jge
xor
repz
(bad)
dec
adc
xor
add
sub
mov
add
aad
iret
xor
sahf
inc
iret
inc
cli
mov
popf
rcr
push
add
(bad)
(bad)
sbb
mov
retf
sub
inc
arpl
adc
aaa
imul
mov
int
dec
aaa
pop
loope
xchg
retf
loop
imul
fs
push
jge
ret
pop
out
dec
ret
pop
out
jno
push
lock
xchg
inc
pop
in
out
(bad)
stc
idiv
daa
sub
push
call
sub
cmps
in
pop
loope
call
cli
in
mov
jle
(bad)
xor
mov
mov
test
adc
cmp
jle
(bad)
out
dec
stos
xchg
push
xchg
and
xchg
or
cmp
pop
ins
out
repnz
ror
sub
fstp
jmp
daa
fisubr
loopne
mov
or
in
add
mov
retf
cmp
xchg
(bad)
out
mov
mov
jbe
xor
pop
cmps
mov
and
cmp
into
inc
pop
inc
ins
call
cmp
(bad)
adc
jmp
das
and
movs
push
ret
sbb
loop
es
int
aas
mov
adc
je
mov
mov
pop
cmp
mov
jmp
push
and
not
add
loopne
pop
cmovbe
stc
nop
mov
inc
inc
icebp
and
aas
push
xchg
mov
jne
cwde
icebp
jmp
mov
fadd
cmp
loope
scas
add
dec
outs
les
movs
(bad)
out
pop
xor
ins
iret
lods
jecxz
stos
(bad)
xor
mov
outs
sbb
mov
or
imul
mov
aas
test
fistp
cmc
cmp
test
rcr
popa
inc
retf
arpl
mov
add
std
or
dec
push
mov
jnp
rol
dec
pop
pop
pop
inc
push
sar
dec
dec
dec
inc
je
popa
aas
scas
add
cli
mov
ret
xchg
stc
or
pop
dec
sub
(bad)
jge
mov
cmp
in
dec
inc
xchg
movs
lea
dec
jg
movs
cmc
cmps
add
and
add
lds
dec
jmp
sbb
sbb
sub
adc
sub
and
(bad)
dec
jmp
cmp
inc
int
mov
push
cmp
xchg
call
mov
loop
push
push
and
fistp
or
sar
jp
mov
in
rcl
cli
pop
and
pop
xchg
xor
fsubr
sub
lock
sti
sar
sub
dec
imul
sub
add
mov
dec
push
push
mov
sbb
sub
cmp
int
in
mov
aas
mov
lock
and
hlt
ss
cmp
mov
push
push
cmps
movs
fist
sbb
jg
xor
xchg
stc
push
aas
ret
pop
ja
push
repz
je
sbb
cmp
push
sbb
clc
fist
mov
addr16
inc
movs
fisttp
xor
mov
sti
lea
jmp
stos
mov
idiv
add
xchg
and
in
mov
xchg
fisttp
jge
shl
mov
or
add
ret
(bad)
mov
dec
jmp
(bad)
cld
sub
cmc
xchg
push
push
fs
adc
std
push
in
and
push
xchg
mov
inc
push
jns
mov
ss
scas
rcl
push
push
sar
into
mov
pop
inc
sar
mov
adc
sub
adc
inc
test
sbb
loope
shl
push
mov
push
je
jbe
rol
mov
daa
sub
fdivp
xor
outs
and
inc
daa
mov
inc
inc
or
std
or
cmp
pusha
pop
mov
push
stc
jns
in
retf
dec
pop
add
push
fnsave
inc
popf
jns
and
cmps
loop
(bad)
das
movs
push
out
lods
loopne
cmc
xor
and
stc
lds
mov
xor
retf
call
mov
shr
inc
(bad)
data16
fistp
jmp
xchg
xchg
iret
mov
ins
imul
ret
gs
aas
in
sahf
popa
shl
adc
push
es
in
adc
ds
icebp
sti
ss
fdiv
imul
call
fdivr
xor
aas
(bad)
pop
pusha
jl
call
fs
push
mov
push
fistp
push
xor
xor
in
dec
jmp
mov
inc
imul
rcl
xchg
loop
js
and
pop
xor
mov
imul
lds
mov
popf
mov
imul
cdq
lods
int
ret
push
jne
xchg
xchg
dec
xor
(bad)
jmp
dec
fs
mov
ret
bnd
fucom
add
mov
es
ss
or
sbb
and
lods
mov
xchg
int3
sbb
inc
jle
pop
ins
lods
adc
sub
mov
push
push
mov
add
stos
mov
adc
push
jo
mov
xchg
ficomp
in
mov
sub
mov
or
es
or
into
inc
js
push
loop
or
retf
push
(bad)
cmps
pop
jmp
jmp
nop
xchg
pop
loopne
mov
popf
ins
in
out
and
or
retf
cmp
imul
xor
xchg
adc
push
inc
lods
jbe
mov
adc
mov
sahf
test
push
xchg
mov
mov
pop
jecxz
mov
push
outs
dec
jle
pop
adc
inc
daa
ds
fcomp
leave
mov
sahf
xchg
xchg
inc
jmp
sar
lods
pop
add
mov
jno
sub
inc
(bad)
xchg
loope
push
jmp
das
mov
aam
push
add
dec
xchg
push
jbe
pop
enter
scas
push
push
xchg
ds
push
rcl
ins
cmp
jp
shl
data16
(bad)
popa
std
js
xchg
call
sbb
cmp
and
arpl
retf
xchg
sbb
das
popf
outs
pop
sbb
rcr
xchg
aad
ret
fs
aam
mov
retf
adc
pop
pop
enter
mov
xchg
dec
xchg
mov
movs
and
pop
jo
and
sub
jbe
inc
fs
jecxz
int3
xlat
xor
mov
cmp
pop
push
aad
xchg
hlt
pusha
mov
in
mov
dec
mov
mov
pop
xlat
scas
shl
cmps
push
in
cmc
xor
adc
jae
add
inc
mov
mov
pop
fidivr
scas
sbb
jns
add
dec
sub
mov
pop
inc
sti
fsubp
je
jmp
or
fyl2xp1
xchg
aas
(bad)
ins
jb
stos
adc
into
inc
mov
mov
mov
fisubr
sbb
sbb
out
cld
mov
shl
or
je
dec
inc
or
test
adc
cmp
sbb
pop
cmps
neg
add
gs
xor
bound
mov
pushf
icebp
popa
sbb
jns
repnz
add
inc
addr16
ins
pop
or
dec
fcom
xchg
cmp
mov
xchg
aam
mov
xor
xchg
jae
push
cmp
fidivr
int
mov
add
push
and
test
push
mov
(bad)
jns
and
pop
(bad)
pop
ja
cmp
xchg
imul
pop
jmp
cdq
sub
movs
dec
and
adc
xor
fcomp
ss
in
mov
jle
cmp
hlt
xor
sub
pushf
xchg
xchg
loop
psubusw
jmp
ficomp
sti
xor
inc
sbb
aaa
xor
not
je
ds
repz
loop
out
test
xor
mov
loopne
cdq
and
dec
xor
jnp
fnsave
les
sahf
mov
rol
sub
iret
cmp
cdq
push
(bad)
mov
adc
and
pop
dec
repnz
mov
mov
fwait
outs
adc
dec
mov
inc
xchg
adc
loopne
iret
fld
fbld
or
dec
mov
loopne
add
test
xor
fdiv
aas
add
cmp
dec
in
std
ficomp
out
xchg
cmp
cmps
jp
xchg
mov
mov
mov
stos
cmc
push
add
push
inc
int3
cmp
out
in
rcr
add
aaa
cmp
arpl
jo
jb
dec
adc
bnd
repz
loope
mov
push
adc
scas
pop
dec
xchg
adc
push
mov
(bad)
repnz
xchg
ds
jg
popa
mov
daa
lahf
rcr
mov
les
dec
fadd
ja
out
mov
ins
ret
rcr
call
and
shl
lahf
aas
sar
fadd
pop
mov
mov
push
push
push
xor
lods
fsubr
xchg
sub
outs
push
sub
pop
cmp
jge
dec
jge
nop
enter
add
(bad)
mov
pop
cmp
aam
sub
fsubr
push
movs
fist
jns
das
clc
adc
cmp
xchg
sar
jbe
out
inc
ret
mov
jl
mov
xlat
into
fiadd
jae
aam
cmps
int
jae
xchg
xchg
and
stc
mov
retf
add
jl
push
jg
lea
push
inc
inc
mov
push
popa
daa
pop
push
sbb
and
cmps
pop
push
test
jns
call
lahf
es
and
add
test
dec
popa
out
test
mov
js
mov
and
out
rcl
cwde
sub
cmp
stos
mov
xchg
mov
leave
add
mov
xor
fsubr
test
fcmovnb
push
por
popf
mov
push
jmp
or
pop
and
(bad)
xchg
sub
cld
arpl
stos
imul
xchg
mov
bound
adc
adc
or
popf
in
or
cmc
xor
fidiv
aaa
aad
push
add
out
or
clc
jl
cmp
int3
inc
inc
xchg
(bad)
mov
loopne
aad
xchg
mov
or
mov
das
loop
jns
mov
js
out
fisub
das
inc
daa
pop
pop
cwde
ja
test
pushf
mov
inc
fadd
scas
pop
cmp
lea
mov
mov
fcmovu
and
xchg
dec
sbb
jmp
xor
leave
jge
inc
xchg
outs
aas
int3
out
push
jae
outs
adc
add
mov
mov
icebp
add
cmps
cmp
fsubr
push
repnz
int3
jl
outs
dec
add
sbb
stos
pop
leave
movs
sub
push
into
aaa
inc
lods
shl
cmp
aam
adc
pusha
lahf
add
and
inc
popf
lods
fsubr
sbb
cmc
pop
push
jmp
lahf
jae
adc
dec
xor
xchg
dec
adc
xor
sub
mov
or
test
popf
movs
in
sbb
dec
lods
movs
cmp
into
loop
and
jmp
inc
xchg
mov
jl
sbb
gs
out
mov
add
mov
adc
fcmovnu
sub
push
stc
test
push
mov
inc
ja
pushf
inc
pushf
mov
mov
adc
jmp
cmp
mov
mov
call
outs
jb
sub
mov
inc
lods
mov
and
push
jp
je
mov
mov
push
jmp
fldcw
adc
sbb
retf
and
out
cli
fadd
push
push
sbb
rol
ja
hlt
(bad)
test
mov
les
xchg
in
outs
xchg
jb
and
mov
or
je
daa
dec
mov
add
jp
call
fild
shr
dec
(bad)
push
loopne
stos
mov
xchg
push
scas
test
rcr
sbb
xchg
mov
push
cmps
(bad)
mov
fisttp
cmp
sub
sbb
or
dec
sub
add
push
push
xor
std
pop
add
ret
push
jmp
pop
xchg
adc
and
cmp
aaa
sub
rol
and
in
pushf
outs
jnp
int
(bad)
push
pop
add
dec
xchg
fsubp
scas
call
retf
jns
jp
or
std
test
shl
mov
sbb
or
push
mov
out
or
ds
(bad)
(bad)
aam
push
test
fwait
and
cmp
(bad)
dec
loope
mov
jb
adc
inc
test
xor
push
mov
xchg
test
ins
cmp
mov
cs
jg
daa
mov
call
pop
ret
pop
scas
pop
gs
pop
push
jb
mov
(bad)
mov
shl
movs
pop
push
shr
repnz
aaa
les
outs
call
js
push
xchg
mov
gs
push
push
mov
gs
bswap
fnsave
daa
into
sar
popf
popa
loopne
pop
jae
and
call
dec
cmp
xchg
ss
xchg
(bad)
int
(bad)
call
dec
aaa
in
lods
loop
jmp
pushf
sub
and
pop
cli
lds
push
hlt
pop
icebp
mov
into
scas
arpl
fs
imul
(bad)
(bad)
xor
rcr
pop
mov
enter
cmps
retf
call
lds
xor
jo
pop
out
adc
stos
mov
pop
xchg
mov
mov
push
mov
jecxz
mov
cs
push
fimul
push
and
push
xor
mov
mov
cmp
jmp
(bad)
push
in
pop
arpl
inc
cli
loopne
pop
push
mov
ins
and
mov
jge
cmp
pop
data16
sbb
adc
lods
adc
mov
push
push
sub
or
sti
adc
add
push
and
jns
dec
lahf
jno
(bad)
sahf
je
cmp
mov
inc
cmps
pop
mov
pop
mov
mov
inc
test
pop
aam
mov
aas
dec
stc
lea
mov
enter
and
je
retf
ret
and
xchg
lds
cmp
hlt
mov
aad
mov
jae
lahf
sbb
push
out
(bad)
sbb
retf
gs
hlt
shl
cmc
(bad)
pushf
scas
shl
fs
sbb
imul
out
xlat
ins
stc
out
cld
scas
rcl
(bad)
in
jno
jge
pop
sub
sbb
jae
push
add
dec
or
mov
mov
movs
mov
dec
ins
pop
mov
retf
into
mov
out
mov
sub
mov
cmps
push
adc
fdiv
cmp
cdq
jp
and
push
pop
push
mov
out
xchg
xchg
(bad)
dec
(bad)
mov
out
dec
pop
lahf
add
add
mov
in
dec
cmps
in
das
in
mov
mov
retf
inc
cmps
mov
and
adc
jnp
enter
into
idiv
mov
cli
(bad)
jl
push
push
and
pop
push
clc
mov
or
fst
jge
add
loopne
ja
test
popf
(bad)
cmp
xchg
xchg
daa
imul
scas
clc
jmp
repz
fsubr
sub
or
xchg
push
sub
or
imul
enter
push
loopne
icebp
aad
loope
mov
add
and
jle
sbb
pop
shl
enter
imul
dec
jge
cmc
mov
push
jl
push
(bad)
adc
sbb
cld
iret
mov
mov
aam
sbb
fldenv
fistp
ja
in
loope
jo
aam
jne
mov
mov
fist
jo
sbb
xchg
jecxz
cmp
push
xchg
jl
inc
les
xchg
pop
(bad)
jno
add
push
test
sub
stos
sub
xchg
adc
mov
mov
jge
push
add
mov
call
out
jmp
jmp
pop
cmp
jecxz
ins
mov
pop
or
sbb
push
ins
push
nop
fwait
inc
jno
push
push
sahf
push
sub
push
mov
and
mov
mov
push
push
or
push
sbb
xchg
mov
sbb
call
push
ins
ds
xchg
fwait
cmps
(bad)
jmp
jae
xchg
mov
mov
cwde
mov
inc
sub
push
or
ret
in
ror
call
aam
xchg
fidivr
pop
and
jno
cli
das
pop
sub
call
jge
enter
xor
and
sbb
mov
sar
jge
aas
inc
mov
iret
jbe
clc
ins
xchg
hlt
sbb
or
popf
cmp
jecxz
retf
lahf
mov
dec
fsub
test
test
out
pusha
add
jb
int3
imul
fs
push
and
lea
mov
mov
sub
repz
movs
retf
mov
lods
iret
cmps
fldenv
jl
xor
ins
repnz
bound
(bad)
jb
lods
or
test
iret
arpl
rcl
nop
imul
outs
push
ret
fild
xchg
cmc
jp
xchg
xchg
(bad)
fimul
jno
cli
mov
shl
cmp
push
cmp
or
rol
mov
mov
pop
inc
mov
pop
mov
(bad)
icebp
aas
push
xlat
cmp
mov
jle
adc
call
mov
jb
xor
fcomp
add
loop
mov
mov
push
out
sub
mov
or
or
call
pop
call
mov
inc
and
mov
pop
shl
dec
xchg
dec
jmp
push
hlt
aam
sahf
ja
mov
add
jmp
or
jle
ret
repz
mov
rcr
mov
in
das
pop
ficomp
mov
addr16
int3
outs
jae
sbb
les
scas
push
xor
cdq
out
xchg
int3
mov
aaa
xor
inc
jmp
pushf
mov
add
fs
outs
aas
popf
sbb
jb
push
pop
cmp
jle
mov
stos
aas
push
movs
adc
ins
xlat
push
and
or
les
fs
clc
loopne
fwait
add
cmp
ins
(bad)
mul
push
jno
out
mov
inc
fimul
xor
or
aas
push
push
mov
fwait
out
lods
movs
mov
in
sub
jb
aad
dec
cdq
dec
ins
jo
pushf
cmp
sbb
cmp
and
dec
fcom
(bad)
hlt
cdq
fstp
aam
dec
mov
(bad)
cmps
xor
mov
mov
add
rcr
mov
jmp
repz
fwait
movs
or
push
(bad)
adc
sub
rcl
adc
push
add
adc
cld
(bad)
push
imul
daa
mov
out
sbb
sub
cmp
ror
pop
stos
pop
pop
out
mov
adc
mov
dec
and
xlat
stc
mov
aas
dec
in
in
out
mov
xchg
xchg
jne
sahf
xchg
xchg
out
xchg
sub
and
dec
jmp
mov
mov
or
sub
imul
jg
mov
sub
retf
cli
adc
icebp
cmp
stos
pop
push
jns
aad
inc
inc
mov
pop
mov
das
cdq
dec
outs
rol
shl
jae
test
mov
xor
jle
xchg
stc
addr16
adc
jno
or
shl
(bad)
adc
js
inc
dec
sub
sbb
push
loop
mov
cmc
fbstp
mov
sub
add
pusha
mov
pop
(bad)
imul
jmp
sub
repz
dec
into
cmps
mov
mov
sbb
repz
mov
or
pop
lods
mov
out
pushf
loop
iret
or
inc
dec
mov
loopne
fnstenv
push
sbb
(bad)
addr16
mov
dec
fwait
rcl
es
fs
into
xor
xchg
cmc
bound
call
xlat
pushf
pop
mov
ret
or
mov
pop
cwde
neg
push
inc
jae
inc
adc
mov
xlat
or
push
push
popf
dec
pop
cmps
jge
xor
repz
mov
sbb
rcl
xchg
ror
retf
jmp
movs
ins
push
xor
mov
in
call
ss
push
mov
test
inc
iret
jge
cld
fidiv
mov
test
inc
inc
(bad)
cmp
add
push
adc
ins
adc
movs
inc
add
je
xchg
in
adc
sbb
pop
loopne
push
gs
sahf
sub
ficomp
adc
cld
push
aas
jl
fidiv
push
xlat
mov
push
pop
cmp
(bad)
pop
imul
xor
mov
add
outs
mov
jle
mov
pop
js
fnsave
test
pop
in
scas
clc
arpl
pop
add
push
lods
ja
mov
pop
lods
mov
mov
xchg
push
inc
(bad)
fcomp
inc
mov
inc
call
out
mov
hlt
cmp
lods
imul
and
push
xchg
and
call
or
jnp
fidivr
sbb
xor
dec
aam
mov
add
adc
dec
iret
jg
pusha
xor
sahf
pusha
ret
push
or
fcomp
mov
or
pop
cli
and
mov
lahf
sbb
mov
sub
mov
fsub
pop
imul
sahf
popf
(bad)
cmc
adc
gs
push
fnstenv
push
and
push
mov
mov
popa
push
xchg
push
imul
xchg
pop
mov
sahf
inc
push
cli
popf
cld
dec
push
mov
and
adc
inc
ja
ror
lods
adc
cld
sbb
xor
xchg
lea
test
and
mov
xchg
lods
sbb
inc
test
es
jno
sub
out
push
add
add
inc
mov
enter
ja
xlat
add
ficomp
fidiv
test
loopne
stc
pop
push
pop
sub
xlat
jo
out
xchg
sub
xchg
leave
cli
mov
fwait
jmp
add
mov
leave
repnz
cmp
add
sub
push
dec
fld
cwde
out
cs
mov
int3
out
out
adc
mov
retf
data16
fldln2
aaa
sub
loopne
pop
jne
jmp
xchg
cdq
push
fcom
in
leave
xor
bound
mov
add
dec
cmp
mov
mov
inc
cmp
int3
out
in
out
neg
push
into
out
loope
lods
pop
sar
xchg
mov
pop
pop
sbb
clc
push
call
add
cmp
ss
sahf
add
cmp
xchg
cdq
mov
jbe
push
pop
js
movs
test
pop
das
mov
(bad)
add
inc
jge
mov
mov
mov
add
mov
xchg
mov
mov
xchg
ins
js
pop
mov
cmp
es
out
inc
popa
pushf
dec
call
cs
imul
cmp
cmp
adc
scas
pusha
cmp
fs
xlat
outs
in
lods
add
movs
outs
mov
mov
add
(bad)
in
(bad)
or
jp
xor
clc
pop
lea
mov
pop
dec
jb
cmp
nop
ins
push
ror
fidiv
pop
cmp
out
add
lods
rcl
jmp
popa
mov
aad
popf
imul
je
xor
jmp
mov
push
adc
stc
cmp
sub
sub
add
and
scas
movs
and
fs
add
std
div
(bad)
mov
push
pusha
popf
xor
fs
xchg
rcl
fcom
fistp
mov
mov
test
cmp
mov
or
add
outs
xchg
adc
push
pop
fstp
jle
jle
ror
and
jns
mov
sbb
lock
aaa
fnstcw
neg
scas
sub
cmp
sbb
out
dec
stos
outs
and
dec
std
sbb
mov
pop
sub
mov
rcl
nop
mov
sub
out
dec
xchg
aaa
lahf
mov
inc
xchg
icebp
mov
ss
(bad)
ins
aas
gs
add
(bad)
imul
mov
cmps
in
fsubr
xchg
mov
pop
sub
loopne
hlt
outs
in
inc
pop
mov
xor
fadd
icebp
jb
jb
sub
jecxz
fld
adc
push
sahf
movs
fild
std
adc
cmp
mov
sbb
pop
aad
inc
scas
sub
out
(bad)
cmps
mov
mov
(bad)
xor
arpl
(bad)
and
loopne
jb
addr16
mov
or
xchg
mov
and
dec
mov
dec
sahf
aaa
mov
(bad)
and
call
xor
mov
inc
out
shl
nop
sbb
sub
mov
xchg
cmp
cmp
cmp
mov
jmp
outs
mov
test
es
sub
xor
movs
hlt
rcl
setb
inc
jb
nop
pop
loopne
ret
in
sbb
cmc
sub
outs
sub
jb
pop
pop
dec
jb
xor
jns
push
inc
inc
or
mov
retf
lds
dec
xchg
ja
cmps
push
xor
mov
sbb
cmps
adc
xchg
push
or
lahf
xor
mov
aaa
lahf
ret
xchg
nop
jle
jmp
ja
ins
cmc
pop
out
mov
push
pushf
dec
cmc
(bad)
mov
mov
jmp
call
fild
and
cmp
lahf
imul
scas
ss
add
int3
jp
pop
sub
(bad)
xor
mov
xchg
cmc
cmp
dec
mov
cmp
loop
add
mov
or
mov
mov
xor
mov
gs
stos
fimul
es
inc
xchg
rcr
daa
repz
inc
mov
aaa
popf
xchg
shr
jae
mov
out
mov
repnz
sbb
ret
add
sub
xor
add
js
out
jnp
fsub
pop
jb
cs
adc
pop
push
add
or
inc
sbb
xchg
jmp
bound
inc
cmps
mov
adc
cmp
scas
jno
cmp
aaa
jbe
leave
in
shr
sbb
call
or
mov
jns
dec
cmp
int3
cmps
sbb
adc
in
in
adc
je
xor
lods
sbb
xlat
in
inc
pop
mov
fisttp
xchg
adc
push
mov
aam
pop
fidiv
or
adc
dec
dec
jno
cmps
xor
test
lds
ds
(bad)
std
pop
daa
and
cmp
dec
stc
xchg
inc
jl
lahf
sbb
sbb
add
sbb
jmp
mov
stc
mov
cli
cmovg
cmps
inc
pop
cmps
fadd
or
jbe
(bad)
pop
pop
cmp
mov
lods
mov
enter
int
movs
add
dec
iret
push
mov
jns
lods
xor
mov
ror
jns
xor
or
or
fcom
lds
push
cmps
mov
cmp
(bad)
push
xchg
gs
jb
in
repz
stos
test
fiadd
dec
add
mov
retf
bound
mov
pushf
(bad)
in
add
scas
and
dec
push
inc
xchg
jo
cld
jl
sub
push
fisub
mov
aas
sbb
rol
in
idiv
jnp
and
ret
ror
sub
loope
ds
je
jb
dec
sbb
push
out
add
jg
push
and
sub
aaa
stc
or
mov
and
pop
sbb
jl
push
rcl
cmp
repz
pop
sahf
mov
out
outs
test
iret
adc
adc
and
pop
xor
or
ins
ss
sbb
test
(bad)
xchg
ja
fmul
or
sub
push
add
int3
push
shl
loopne
and
xlat
(bad)
and
adc
push
xor
or
shl
call
or
in
inc
mov
cld
adc
xchg
dec
add
push
scas
call
outs
in
mov
sub
jae
sub
int
test
dec
(bad)
or
pop
jl
jmp
ret
jb
out
sahf
pop
xor
loope
mov
sub
(bad)
fmul
pop
xchg
fistp
cwde
(bad)
clc
shl
xchg
inc
mov
xchg
pop
dec
pop
movs
lods
test
mov
adc
stos
add
int3
rcr
loopne
push
cmps
and
mov
dec
add
scas
out
dec
gs
js
push
jle
sbb
mov
dec
xchg
push
lahf
test
fwait
pop
add
mov
and
mov
fwait
add
jmp
push
mov
sbb
add
shl
mov
shl
adc
jno
mov
lea
fsub
mul
aam
jmp
pop
icebp
inc
adc
out
xor
pop
pop
int
dec
cwde
retf
stos
add
xor
jne
jae
movs
adc
mov
loop
lods
add
mov
jecxz
pushf
ficomp
inc
dec
ss
or
test
add
or
shl
lods
ins
jecxz
hlt
mov
sbb
pop
add
jne
mov
daa
sbb
jnp
es
sahf
xor
and
mov
mov
inc
stos
aas
int3
in
and
pop
xor
dec
jae
adc
mov
cld
or
dec
or
xchg
fstp
icebp
or
test
jmp
jecxz
cmps
adc
aaa
xlat
push
fiadd
sti
sar
std
sbb
mov
mov
aam
push
push
jns
(bad)
sub
xor
mov
push
mov
jmp
jmp
sbb
dec
fnstcw
dec
aam
test
cld
cmp
sbb
add
sub
mov
adc
jo
sub
adc
test
xor
mov
loope
in
or
push
or
maskmovq
mov
test
sub
lods
(bad)
mov
mov
xor
call
jg
sub
imul
mov
rol
stos
iret
das
pop
add
(bad)
jb
pop
scas
xor
push
add
sbb
cmps
add
stc
dec
jge
xor
sbb
sub
cs
jnp
das
jb
outs
xor
scas
or
imul
cmp
mov
fmul
inc
mov
in
add
sbb
jnp
xor
outs
fcomi
cmp
cmps
xchg
fstp
imul
fsub
inc
pop
inc
mov
call
inc
jbe
inc
adc
jne
jne
push
rol
retf
mov
aam
mov
(bad)
sub
ss
jecxz
sub
jmp
sahf
and
movs
ins
xchg
mov
(bad)
adc
mov
cmps
ds
call
out
mov
arpl
out
xor
das
ror
(bad)
mov
sbb
pop
mov
add
out
dec
fstp
push
mov
test
btr
dec
es
arpl
jl
jae
(bad)
jle
mov
retf
xchg
jnp
les
dec
mov
cmps
sub
into
stos
jge
dec
retf
adc
aam
aas
dec
imul
fnsave
lds
shr
ja
cdq
in
sbb
push
enter
xor
pop
ret
dec
iret
cmp
cmp
fiadd
xlat
sub
ret
push
scas
mov
fiadd
pop
aas
imul
push
sar
lods
fucomp
push
pop
sub
and
int3
cmp
mov
neg
inc
gs
mov
jno
repnz
cmp
fstp
cmp
icebp
mov
test
inc
dec
je
dec
sub
mov
(bad)
and
sub
fidivr
test
pusha
xchg
jl
arpl
mov
pop
pusha
cmps
jnp
call
mov
or
mul
dec
adc
xor
xchg
jp
fidiv
call
aad
adc
clc
frstor
jge
cld
test
jecxz
cmp
cmp
scas
pop
push
leave
xchg
xchg
xchg
sub
aam
retf
jns
movs
jb
in
(bad)
int3
ret
pop
in
outs
lods
(bad)
add
add
icebp
retf
mov
xchg
jo
mov
popa
sbb
jnp
ret
test
scas
outs
fs
adc
jmp
sbb
mov
push
aaa
push
stos
jns
mov
adc
add
mov
test
loop
in
cmp
mov
pop
adc
mov
scas
test
xor
cld
test
hlt
imul
push
les
sbb
pop
pop
mov
and
adc
out
repz
push
ins
arpl
cmp
xor
jp
aas
xchg
int
int
cmp
int3
inc
push
jl
bound
test
pop
inc
pushf
mov
aas
inc
ret
imul
xchg
fisubr
(bad)
sti
mov
gs
cmp
shl
cli
fbstp
ja
xor
xchg
sahf
shl
sbb
add
sbb
fnstsw
mov
out
cmps
pop
and
sbb
aad
mov
jecxz
mov
mov
js
loopne
loopne
jns
cs
inc
sub
push
shl
and
int
je
rcr
cmp
sbb
cmps
stos
fwait
lods
sub
jmp
push
mov
xchg
sahf
out
sub
mov
cli
hlt
mov
mov
or
dec
cmp
(bad)
jp
test
inc
mov
cmp
fadd
clc
or
cmp
test
cmp
and
into
mov
xchg
bswap
movaps
dec
sbb
mov
iret
dec
cmp
mov
mov
xchg
cmovbe
fidiv
mov
and
sub
and
popa
mov
xor
in
jmp
xor
test
ret
push
jmp
aam
add
icebp
stos
movs
push
push
inc
xor
mov
xor
sbb
add
enter
xchg
int3
mov
repnz
fsubr
clc
or
and
cld
push
loop
call
sbb
pusha
or
call
sub
fld
and
das
mov
repnz
inc
nop
mov
sub
ret
cwde
sbb
shl
addr16
sub
cld
push
daa
inc
hlt
mov
fsubr
std
mov
loop
ret
data16
add
xlat
add
push
add
mov
outs
rcl
fisttp
retf
adc
mov
cld
shr
lods
enter
fisttp
inc
aas
retf
and
ficom
jmp
add
mov
sub
jbe
inc
inc
and
inc
repnz
add
out
je
xor
rcl
push
xor
jbe
call
add
mov
sub
ins
mov
sbb
enter
pushf
xchg
add
scas
mov
push
out
xchg
push
lahf
cmp
xlat
cwde
cld
arpl
pusha
pop
sub
cwde
cmp
cmp
ret
aaa
xor
cli
sbb
fwait
cdq
jmp
dec
lods
mov
(bad)
shr
je
dec
mov
add
hlt
push
and
add
push
fild
rcr
dec
pop
popa
arpl
dec
scas
js
cmp
mov
cmp
and
ja
pop
sbb
pop
out
and
mov
jmp
bound
xchg
fadd
cmp
stc
jg
stos
push
add
fcmovne
jae
mov
shr
scas
ins
mov
cmp
pop
push
jae
stc
ins
retf
push
aas
cmps
mov
mov
mov
lea
aad
inc
pusha
sub
sub
xchg
jg
xor
jnp
loopne
dec
or
aam
and
in
or
int
and
in
fld
jmp
ins
jle
sbb
stos
push
jg
xlat
fs
mov
or
retf
adc
in
sub
sti
sahf
and
test
mov
inc
(bad)
shl
dec
lods
dec
adc
rol
icebp
cmps
push
jbe
inc
sub
push
dec
xlat
pop
lods
xchg
push
lds
sbb
out
inc
das
fimul
fidivr
or
lods
push
pop
bound
in
push
clc
xor
mov
out
cmp
fs
mov
sti
sub
adc
mov
shl
mov
pop
pusha
cmp
and
or
push
sub
repnz
inc
das
sbb
cld
push
cmp
pop
int3
sbb
iret
xor
add
inc
neg
cld
mov
inc
imul
mov
inc
xlat
adc
xchg
retf
sub
cmp
pop
dec
xchg
nop
xchg
cli
or
push
jo
lea
into
shl
push
loopne
je
push
jns
jecxz
(bad)
mov
add
mov
(bad)
or
test
fs
sub
pop
push
outs
(bad)
jmp
imul
sub
inc
pushf
add
or
out
mov
push
jecxz
push
outs
test
mov
jbe
push
and
jae
mov
xor
mov
fild
pop
inc
cdq
neg
sbb
xchg
lock
sbb
add
fpatan
pop
imul
gs
ret
mov
dec
std
int
(bad)
jmp
sbb
or
or
add
ja
sbb
sti
xor
jle
into
out
jno
mov
data16
outs
fbstp
pop
fild
ss
and
test
in
enter
rcl
shr
dec
jns
inc
rcl
clc
rcl
fwait
pop
xchg
and
aad
rcl
adc
std
test
add
mov
neg
mov
sbb
add
sub
data16
in
hlt
inc
ret
cmp
imul
js
fldenv
jmp
and
pop
mov
mov
push
pop
ins
icebp
push
pop
(bad)
push
out
pop
sub
daa
xor
test
sbb
test
shr
xchg
cmps
cmp
pop
xchg
stos
retf
test
sbb
xor
inc
push
in
in
addr16
pop
mov
or
repz
movs
ss
cmps
pop
xchg
ret
cdq
sub
push
mul
fiadd
jecxz
mul
dec
movs
es
mov
cmp
icebp
fisttp
mov
stos
adc
int
int
mov
lahf
dec
(bad)
out
dec
test
push
out
push
mov
and
in
in
mov
retf
outs
mov
shl
jl
cmp
rcr
and
outs
mov
push
mov
push
push
adc
pop
das
fild
mov
lds
test
and
out
inc
and
pusha
pop
pop
and
loop
jne
fwait
cmps
bswap
test
or
cmps
aad
mov
fcomp
jmp
add
pop
xchg
lock
ret
jb
xor
mov
dec
lods
cmp
cld
fs
daa
push
outs
test
pop
lods
add
pop
push
cmc
cmp
pop
fs
loop
mul
outs
fcmovbe
jns
xor
out
mov
cmp
mov
xchg
xchg
stc
push
test
(bad)
fiadd
xchg
push
cmp
fisub
fstp
daa
mov
jle
sub
inc
mov
and
sbb
arpl
ins
push
scas
cmp
retf
retf
pop
mov
jp
aad
fs
and
cmp
pop
push
addr16
add
aas
loope
cmp
cwde
mov
jne
or
test
or
mov
mov
fwait
push
push
mov
inc
aam
pop
popf
imul
jp
test
stos
fcom
fwait
stos
int
cmp
sbb
push
jp
jmp
loopne
inc
dec
call
shl
jle
in
cmps
jo
mov
mov
jecxz
add
sub
daa
mov
shl
push
loop
(bad)
xchg
xor
cmc
fdiv
pop
push
scas
push
xor
leave
test
fistp
jge
(bad)
or
(bad)
popa
pusha
sbb
shl
imul
xchg
arpl
mov
js
or
je
adc
sar
in
cli
jo
xor
cmp
jnp
xlat
(bad)
lock
xor
movs
add
dec
jg
shl
clc
out
push
push
loop
(bad)
lahf
std
push
loop
jmp
or
addr16
test
(bad)
scas
retf
fild
pop
and
mov
in
sub
mov
inc
mov
popa
jno
js
adc
test
mov
ficomp
(bad)
movs
sbb
std
cwde
(bad)
xor
pop
pop
push
movs
sub
jl
sub
add
mov
popf
imul
dec
jge
adc
add
lock
push
adc
movs
call
sti
dec
jae
or
cmc
mov
sub
rol
and
cli
sub
dec
dec
cmps
sbb
cdq
and
fs
out
inc
push
sub
xchg
mov
sbb
sbb
arpl
inc
xchg
jg
inc
push
and
aad
stos
stos
mov
sbb
add
mov
inc
push
mov
jne
or
call
bnd
push
nop
inc
jl
mov
sbb
pushf
sar
sbb
push
in
and
rcl
push
sub
icebp
adc
(bad)
hlt
fs
aam
lock
rcl
pusha
adc
mov
lods
shl
and
idiv
mul
popa
dec
call
push
rol
in
sub
js
xor
in
sbb
in
sbb
sar
(bad)
loop
call
movs
imul
xchg
fwait
in
mov
cmps
outs
movs
sub
sahf
lods
or
lea
mov
mov
call
sub
adc
sbb
mov
pop
inc
pop
div
mov
pop
test
and
xchg
hlt
gs
push
in
xor
mul
xor
fld
adc
lods
aaa
aad
sbb
mov
mov
xchg
pop
fadd
ins
cli
adc
jae
jge
sub
sbb
fisubr
xor
rol
cli
mov
pop
cwde
sahf
inc
mov
fs
xchg
mov
lock
xlat
mov
or
aaa
dec
mov
in
inc
sub
(bad)
add
aam
add
adc
scas
jb
jae
in
sar
mov
test
add
jmp
int
and
sbb
fwait
lea
jg
ja
jo
push
dec
mov
jnp
lahf
outs
push
mov
jns
shl
push
leave
or
sub
cmp
mov
sbb
or
xchg
push
mov
fnstenv
out
mov
jb
pop
sbb
xchg
loopne
ins
adc
mov
push
xchg
cmp
(bad)
xacquire
iret
pop
mov
pop
es
scas
das
and
xchg
push
or
loope
inc
call
xchg
mov
inc
sbb
icebp
xchg
jb
cmps
clc
ret
std
hlt
dec
sub
mov
sbb
inc
bound
pop
mov
movs
sahf
jae
sub
fwait
inc
mov
mov
and
cmps
inc
jge
jmp
fstp
and
or
inc
cmp
nop
in
adc
(bad)
push
repz
dec
inc
mov
inc
shl
mov
pop
aaa
cdq
pop
test
cmps
in
(bad)
xchg
(bad)
icebp
pop
sub
shl
push
add
bound
mov
mov
stos
xor
pop
dec
sbb
test
sbb
ficomp
aad
les
sbb
call
sbb
sahf
mov
or
sub
adc
adc
dec
push
aaa
fimul
add
daa
fidivr
add
inc
jno
frstor
cmps
cmps
or
push
(bad)
fiadd
stos
sbb
dec
mov
enter
push
and
(bad)
mov
pop
sub
je
and
aaa
icebp
imul
and
cmc
arpl
popf
or
and
mov
test
stos
xor
xchg
adc
aaa
jg
mov
and
push
jge
sbb
xor
adc
das
scas
in
lock
xor
pop
out
and
or
cmp
cmp
dec
pushf
and
int3
arpl
nop
fs
in
xor
jecxz
dec
add
sti
pop
outs
popa
pop
dec
inc
fldpi
xor
push
jle
sbb
popf
popa
push
inc
sbb
test
dec
jmp
fcmovne
xchg
adc
ds
leave
mov
add
push
inc
mov
or
sub
sahf
push
pop
inc
pop
push
mov
popf
movs
mov
rol
in
(bad)
shl
mov
xor
xor
aaa
adc
mov
fst
outs
retf
xchg
jmp
mov
dec
inc
inc
daa
fldcw
xchg
addr16
aad
mov
xlat
cmp
clc
mov
cmp
stos
inc
pop
adc
into
xchg
xor
inc
xchg
sub
or
inc
in
call
repnz
inc
pop
xchg
mov
test
call
out
cdq
pop
mov
nop
add
and
sub
loop
rcr
in
inc
or
fmul
popf
pop
pop
xchg
in
es
sbb
test
imul
repnz
mov
pop
hlt
mov
mov
ins
xor
adc
mov
pushf
stos
push
stos
shl
pop
jmp
fldenv
sub
shl
push
dec
cmp
call
adc
ins
adc
pop
pop
dec
xchg
mov
and
adc
in
mov
fidiv
cmp
pop
jo
cwde
out
pop
and
and
repz
hlt
pop
inc
mov
lods
cld
call
jecxz
pop
and
popa
sar
imul
mov
dec
cmp
inc
pushf
push
ins
cs
xor
jecxz
movs
enter
(bad)
stos
dec
in
sar
js
inc
pop
sar
sbb
and
sub
fadd
jne
out
lods
push
ja
clc
cmp
xor
mov
pop
sbb
inc
mov
pusha
push
jecxz
add
cmp
stos
dec
or
fwait
sti
or
pop
add
or
lods
adc
xchg
scas
or
(bad)
outs
call
cmp
mov
or
pop
dec
cmp
aas
sub
(bad)
out
dec
in
mov
pop
push
inc
xor
sub
mov
adc
std
push
jmp
fwait
jge
aad
into
int3
dec
sbb
jnp
cli
arpl
les
mov
mov
jbe
sbb
fimul
fisub
pop
push
jbe
add
retf
ins
fisubr
pop
movs
call
mov
imul
mov
ret
sub
lods
fmul
lahf
push
add
vpermi2q
xor
rol
jp
sub
outs
mov
aas
mov
adc
cmp
test
pop
(bad)
jge
jns
add
dec
jbe
push
repz
fldenv
push
in
fisttp
mov
sub
dec
adc
jge
lods
enter
ins
pop
jle
fisubr
push
fmul
ret
outs
cmps
pop
xlat
jle
ss
daa
(bad)
nop
dec
sbb
mov
scas
das
int
add
inc
and
rcr
jle
add
nop
push
inc
jle
pop
(bad)
icebp
adc
inc
call
jne
adc
mov
mov
fwait
cmp
pop
pop
scas
dec
aaa
outs
lods
mov
xor
xor
fdiv
ins
mov
sub
add
neg
sar
aam
int3
scas
scas
out
cmc
or
sbb
push
push
sub
je
jne
push
fadd
and
cmp
pop
test
fdivr
fucomip
sub
stos
stc
(bad)
rol
loopne
adc
ss
pop
xor
sub
rcl
rcr
and
out
mov
pop
imul
mov
mov
dec
mov
add
jle
cld
fcmovb
jb
add
dec
add
retf
dec
outs
and
inc
cmp
sahf
sub
into
dec
mov
and
push
adc
(bad)
in
and
xchg
loopne
mov
push
mov
imul
fidivr
push
xchg
add
mov
es
retf
(bad)
xchg
dec
aad
(bad)
jo
xor
dec
ins
dec
or
jmp
adc
das
ds
add
pop
repz
adc
(bad)
mov
add
add
lahf
fstp
jo
cdq
inc
adc
and
dec
pop
cmp
mov
inc
je
mov
pop
int3
mul
test
push
lods
push
push
out
out
xchg
and
mov
dec
push
jmp
stos
and
pop
mov
inc
and
sbb
js
mov
stc
sbb
adc
outs
add
movs
mov
xchg
jbe
imul
jg
dec
push
and
into
pop
mov
cmp
cmps
jmp
sub
jo
fs
das
loope
fmul
push
scas
es
dec
fbld
sub
arpl
pop
push
out
(bad)
mov
(bad)
lea
in
jbe
fadd
fist
or
inc
loope
aaa
sar
movs
mov
dec
push
add
aaa
xor
lock
sti
mov
pop
xor
out
test
or
cmp
es
adc
clc
lahf
outs
pminsw
stos
jne
ror
ins
mov
mov
pop
cmp
and
ret
jecxz
xor
(bad)
jge
sub
and
push
not
jge
xchg
or
into
je
jmp
mov
dec
stc
add
or
arpl
fistp
out
push
mov
scas
test
push
sub
call
mov
cmp
add
add
nop
dec
push
ss
xchg
xor
mov
add
mov
dec
in
lea
ja
js
rcl
ins
loope
fwait
ins
fcmove
data16
and
inc
sub
adc
clc
(bad)
inc
lods
push
mov
out
xor
neg
sbb
inc
cmp
int3
test
arpl
mov
dec
mov
push
push
mov
imul
dec
daa
imul
outs
je
repz
inc
mov
inc
sbb
push
test
cmp
js
adc
jb
mov
loop
cmps
add
pusha
mov
test
into
and
mov
pop
xor
cmp
mov
gs
sbb
add
pop
or
inc
cmps
cmp
les
sbb
push
call
hlt
imul
stos
aam
bound
(bad)
mov
xor
adc
movs
jl
inc
cmps
ins
and
sahf
imul
imul
scas
rcl
dec
jl
lock
jbe
mov
sub
push
div
lods
push
rcr
cmp
xor
xchg
cmp
movs
mov
sub
ret
xor
movs
stos
lock
in
push
(bad)
arpl
loope
scas
lods
xchg
add
icebp
sbb
mov
mov
bound
mov
mov
xchg
test
aas
stos
mov
sahf
cmc
sbb
lahf
pop
push
in
dec
pop
cs
pop
sbb
in
adc
dec
adc
jmp
aad
movs
loopne
mov
leave
push
xor
push
rol
js
jno
inc
mov
jns
outs
mov
xlat
ins
repz
jo
pop
(bad)
loopne
inc
pusha
lods
call
mov
pop
pop
xchg
scas
call
test
adc
pusha
arpl
jecxz
xor
inc
or
jl
cs
arpl
fstp
add
cmp
sar
jns
jns
shl
fist
jg
scas
or
pop
cmp
mov
inc
cs
xchg
in
xor
mov
scas
cmps
(bad)
push
inc
repz
aas
push
into
push
mov
inc
mov
cmp
inc
sti
adc
shl
(bad)
aam
pop
in
nop
sub
loope
popa
in
sub
xlat
mov
pop
(bad)
add
xchg
jo
fistp
jns
pop
add
movhps
ins
and
mov
xchg
outs
push
jae
sub
sbb
push
(bad)
cli
aam
fwait
cwde
xor
cwde
xchg
lea
js
adc
fstp
pop
icebp
or
in
add
sbb
call
jne
outs
xlat
and
in
mov
dec
aad
sar
fidivr
pop
mov
xor
(bad)
mov
call
icebp
aaa
mov
adc
popa
jbe
ss
shl
aad
out
sbb
ret
ficomp
(bad)
cdq
cld
adc
int
or
add
push
fstp
push
sbb
push
cwde
and
test
mov
inc
scas
imul
xchg
gs
mov
push
scas
push
data16
aaa
add
nop
pop
mov
jb
mov
mov
loope
dec
xor
xchg
xor
into
xlat
fwait
jno
(bad)
mov
int
mov
cdq
scas
(bad)
loopne
xlat
push
inc
in
ins
retf
stos
cmp
stos
mov
in
ficomp
adc
sbb
mov
ins
mov
mov
mov
icebp
inc
repz
movs
repz
jbe
pop
or
mov
and
or
mov
cmp
push
div
jns
and
mov
in
aad
stc
aam
cmps
push
out
add
dec
out
imul
xchg
loope
xlat
test
fnstenv
call
daa
mov
xchg
dec
xchg
xchg
call
mov
(bad)
jnp
push
pop
out
es
js
sbb
pop
adc
cdq
shl
(bad)
adc
data16
out
adc
dec
out
or
test
icebp
pop
xor
jae
not
ret
test
das
call
sbb
and
test
in
test
mov
das
cdq
call
add
and
mov
nop
push
or
dec
sub
cmp
cmp
add
je
jo
adc
sbb
jns
cmc
pop
push
iret
dec
stos
mov
jns
lods
cmps
enter
fcmovnb
mov
adc
bound
mov
cld
push
imul
leave
movs
xor
nop
sub
cmp
std
cmc
ds
and
scas
jge
xchg
fdiv
daa
pop
xchg
xlat
and
add
push
pop
jl
test
fwait
leave
or
into
cmp
sub
fsub
inc
aad
in
add
mov
dec
popa
fstp
jns
lea
gs
mov
adc
mov
inc
adc
inc
(bad)
cmp
retf
stc
jne
fst
mov
daa
pop
and
mov
push
pop
mov
mov
sbb
jb
mov
adc
or
stc
sub
inc
xor
mov
je
adc
dec
push
jmp
imul
ret
pop
and
inc
fwait
movs
adc
xor
fs
cwde
ja
mov
into
lea
pop
cdq
arpl
aas
xchg
ret
sbb
xor
dec
aam
xchg
fldcw
lea
mov
push
push
xchg
xor
rol
dec
push
sub
nop
push
pop
aas
mov
outs
das
stc
stos
outs
dec
ins
ins
test
mov
sbb
cwde
jb
mov
dec
rol
cmp
and
xor
idiv
aas
jno
clc
fidivr
jl
lahf
mov
xchg
leave
cmps
adc
out
pop
dec
mov
in
mov
mov
and
cli
lods
xlat
push
cmps
adc
test
leave
arpl
ror
aad
cmps
mov
rcr
pop
clc
sbb
xchg
clc
(bad)
call
or
xchg
xchg
add
ins
scas
jne
inc
sub
dec
cld
stc
push
xor
cs
push
lods
push
fs
add
adc
mov
add
mov
std
or
mov
pop
scas
aas
es
jle
aam
add
retf
lods
push
or
xchg
xor
in
pushf
loop
je
scas
ss
imul
out
fwait
aad
test
lds
and
shr
xchg
rol
aas
popa
movs
daa
ss
out
xor
add
cli
lods
jbe
stos
cwde
into
ret
arpl
cli
jp
ret
das
mov
stos
add
fdiv
ins
fnstenv
dec
std
inc
inc
pop
and
mov
push
sbb
loope
(bad)
jle
cwde
leave
xchg
popa
daa
int
in
fild
in
repnz
loop
xchg
test
stc
(bad)
jl
lahf
adc
les
xchg
ret
pop
push
es
adc
(bad)
iret
sahf
inc
add
mov
cmps
js
inc
iret
jg
xchg
(bad)
inc
mov
(bad)
jbe
outs
mov
mov
mov
dec
repnz
xchg
scas
enter
lods
add
dec
inc
or
push
xchg
call
lds
jo
jmp
mov
mov
sub
dec
outs
test
imul
or
sbb
je
out
xchg
imul
sbb
push
pop
pop
not
push
and
ret
mov
std
push
xchg
je
jno
mov
movs
dec
adc
xchg
cmps
les
stos
jnp
dec
jne
mov
xchg
jno
mov
iret
rol
dec
daa
and
js
mov
lds
mov
add
or
add
aas
dec
xor
pop
adc
out
inc
adc
xor
xor
pop
add
fbstp
leave
mov
in
jl
icebp
jg
cmp
fnstenv
aaa
push
adc
xchg
fdivr
xchg
pop
add
xchg
pop
out
and
test
lods
cmp
daa
jmp
jle
in
dec
nop
mov
movs
js
(bad)
nop
xor
dec
int
cmp
arpl
inc
add
jae
or
out
popa
popa
mov
mov
mov
mov
(bad)
mov
xor
inc
mov
loope
dec
mov
mov
jle
(bad)
jo
popa
ins
ret
mov
je
movs
jl
fist
(bad)
out
into
jno
lahf
out
aad
fistp
or
push
xor
mov
shl
mov
fbstp
add
xor
mov
addr16
xchg
and
(bad)
ins
xchg
fst
jg
int3
outs
popa
mov
mov
call
xor
mov
hlt
(bad)
xchg
retf
in
pop
jns
sbb
jns
dec
xchg
mov
packssdw
add
jns
pop
ins
pop
cld
mov
fs
stos
add
push
mov
jae
and
jns
jg
lods
aas
pusha
xor
sbb
jl
retf
push
lahf
lock
pop
or
mov
mov
aas
out
sub
add
lods
ins
add
jl
sbb
xchg
or
rol
sbb
adc
ret
mov
push
pop
push
addr16
xchg
imul
mov
imul
push
and
test
push
scas
shl
lea
bnd
lea
les
inc
out
xlat
mov
loope
push
addr16
dec
push
push
add
pop
call
repnz
sub
es
xchg
jo
repz
fld
mov
rcl
sti
sub
jp
dec
(bad)
mov
cmp
sbb
call
mov
cmps
pop
xchg
push
fs
cmp
fxch
add
cli
ret
out
jg
clc
adc
outs
dec
retf
and
dec
mov
pop
dec
mov
enter
add
xchg
ss
xor
mov
sbb
addr16
stc
mul
call
leave
sbb
xor
mov
popf
xchg
repz
add
cmp
dec
fldcw
and
add
in
push
inc
xchg
cmp
cmp
mov
xchg
dec
fs
pushf
inc
pop
cwde
loop
fldcw
(bad)
dec
mov
mov
das
int3
mov
pop
test
add
inc
inc
push
inc
fsubr
or
dec
sbb
fnsetpm(287
shl
pop
out
push
bound
mov
xchg
inc
add
xchg
popa
and
pop
xchg
rol
dec
inc
add
inc
mov
je
leave
xlat
repnz
aam
jb
cmps
aam
push
cmps
movs
pop
mov
mov
nop
in
jl
pop
(bad)
cdq
test
mov
shl
scas
mov
nop
imul
movs
retf
ror
mov
aam
or
mov
and
aas
mov
faddp
ret
xchg
or
repz
jo
in
xchg
hlt
out
popf
dec
iret
jge
imul
mov
outs
gs
or
pop
jne
push
fdivp
and
jle
iret
adc
dec
cld
in
inc
pop
ss
test
mov
xor
push
add
adc
xlat
scas
dec
inc
mul
lds
jle
dec
pusha
push
push
push
ja
test
prefetch
or
(bad)
ja
xchg
lock
xor
cmc
jmp
xchg
inc
pop
mov
xor
dec
into
int
retf
sti
pop
hlt
pop
aas
pop
jle
mov
push
idiv
cmps
repnz
add
sahf
mov
test
mov
aaa
cwde
jo
shl
or
mov
push
xchg
lods
mov
inc
mov
push
mov
pmaddwd
test
fist
stos
imul
pop
mov
mov
mov
out
movs
ret
fucom
in
mov
adc
xchg
cmp
adc
pop
shl
mov
or
test
movs
push
rcl
repz
adc
imul
or
(bad)
cmp
and
mov
mov
nop
mov
fdivrp
in
adc
cmc
dec
mov
add
push
cmc
rcr
push
cld
imul
sbb
sub
push
sahf
or
fs
jmp
adc
jns
in
xchg
neg
xchg
cmp
pop
addr16
nop
xor
push
pop
jl
rcr
inc
std
mov
ja
cmp
or
jno
sub
js
mov
stos
pop
repnz
jno
gs
inc
inc
xor
jmp
add
jmp
mov
inc
jo
sbb
add
pushf
inc
pop
mov
or
jmp
add
fdivr
xor
pop
lahf
mov
fbld
aad
or
rcl
lock
in
jns
push
xchg
fist
xchg
xchg
adc
mov
test
arpl
mov
fadd
loop
xchg
push
ss
in
or
jno
pop
test
sahf
bound
or
cmp
ret
xor
ja
cmc
test
int
inc
mov
rol
dec
sbb
cli
pop
add
outs
inc
jb
ds
mov
jne
ror
adc
inc
ins
sub
mov
out
xchg
inc
jb
mov
je
adc
push
fcmovne
add
call
sbb
jno
rol
cmp
arpl
jnp
scas
xor
movs
xor
mov
lds
mov
mov
fist
dec
xchg
outs
pop
out
and
in
iret
push
or
push
lods
pop
fwait
xor
sahf
aad
xor
xchg
or
or
add
das
mov
push
sbb
mov
fucom
mov
adc
cmp
aas
lods
push
pop
or
ins
pop
sbb
add
stc
add
cs
jp
aas
adc
addr16
mov
fisubr
ss
add
mov
nop
outs
mov
push
add
xor
cmps
jge
je
xlat
addr16
mov
mov
sti
div
push
mov
cwde
mov
adc
push
xchg
and
fstp
and
sti
pop
outs
das
mov
fsub
setno
jbe
icebp
xchg
out
jle
inc
ins
push
leave
jno
pop
aaa
cmp
push
stc
int3
inc
push
xor
xchg
jne
inc
cwde
xor
mov
hlt
jnp
dec
retf
retf
xchg
sub
addr16
mov
das
sub
push
or
cs
inc
stos
fld
add
arpl
cmp
movs
cmp
les
sar
push
aam
stos
adc
outs
das
into
ret
adc
sbb
xchg
pop
mov
stc
stos
repnz
mov
xor
add
clc
and
mov
scas
test
sub
ret
fdivr
repz
adc
pop
push
std
cld
xchg
dec
into
fwait
push
sbb
fldenv
sbb
push
add
arpl
jb
cdq
mov
push
add
loope
movs
outs
lock
pop
outs
cmp
mov
sbb
jb
sbb
push
dec
sahf
addr16
lds
jmp
(bad)
sub
stc
(bad)
gs
pusha
mov
sbb
aas
xor
out
shl
sub
jg
ret
and
xchg
inc
fadd
mov
repnz
push
scas
adc
pop
fucom
adc
cmps
jns
xor
shl
and
xor
rol
push
dec
pop
sub
div
arpl
adc
(bad)
adc
xor
jmp
inc
sbb
push
(bad)
fidiv
jns
out
das
sbb
cli
dec
cld
out
mov
hlt
movs
push
repnz
dec
jno
loop
cmc
add
mov
jb
(bad)
dec
(bad)
icebp
adc
in
fxch
retf
jecxz
jmp
dec
or
sub
adc
mov
inc
fistp
int
inc
leave
push
and
inc
pop
adc
pop
jo
(bad)
sbb
leave
fist
and
push
out
dec
push
jno
xchg
xchg
sbb
xchg
cmps
sub
cmp
push
pop
js
cs
into
xor
jl
cmps
(bad)
(bad)
mov
(bad)
cmp
rol
sar
(bad)
xor
call
fisttp
jg
jns
sub
fcomp
xor
cmp
pop
cmp
cmp
jne
ja
hlt
pushf
inc
xchg
mov
sti
pop
mov
fiadd
bound
mov
xor
mov
dec
or
in
mov
add
jge
into
clc
lea
mov
cmp
mov
mov
leave
imul
mov
lods
add
cdq
sbb
es
push
call
sbb
adc
mov
addr16
lods
cmp
arpl
cs
inc
push
and
(bad)
fdivr
adc
fnstenv
fbstp
imul
dec
repz
loope
mov
jo
mov
sbb
cdq
dec
(bad)
mov
jmp
js
cmp
dec
js
aas
out
loopne
(bad)
mov
rol
idiv
xor
mov
call
and
daa
dec
or
xor
cmp
iret
movs
xchg
and
cmps
jb
cmps
push
dec
or
fucomi
xchg
(bad)
data16
mov
dec
outs
sub
mov
or
les
outs
shl
and
aad
test
scas
or
pop
stos
mov
adc
push
xor
std
add
or
jno
std
pop
inc
into
pop
jo
pop
test
aad
xor
sbb
xchg
xchg
sti
mov
aaa
inc
cld
aas
inc
(bad)
lock
fiadd
lds
shl
jns
xor
sbb
enter
ds
cmps
lds
mov
push
inc
js
adc
cmp
jnp
jae
(bad)
ss
mov
mov
cmps
pop
and
cmps
xlat
jb
push
repz
mov
and
in
sbb
xchg
aas
movs
mov
mov
and
jae
sar
mov
or
fs
jl
inc
jae
jmp
out
lock
cmps
push
sbb
add
cmp
xchg
and
out
adc
inc
fwait
or
mov
stos
sub
out
or
es
cld
dec
sbb
or
or
mov
out
call
sahf
push
clc
popa
jmp
dec
pop
ja
add
or
shl
and
mov
out
clc
loopne
mov
xor
cmp
arpl
mov
push
and
div
popa
loop
sar
pop
or
xchg
addr16
retf
add
pop
mov
fsub
sub
inc
(bad)
jmp
fidivr
push
pushf
aas
movs
das
push
cmps
cmc
push
mov
dec
inc
cmp
inc
fsubr
jmp
invd
mov
imul
cmps
dec
stos
in
clc
sub
ficom
mov
xchg
inc
sbb
fldenv
out
and
scas
jl
cli
mov
jmp
add
out
scas
add
mov
movs
jo
jmp
aad
pop
scas
xchg
xlat
inc
pop
dec
arpl
add
pop
scas
inc
push
mov
push
jne
popf
jecxz
sbb
scas
sub
xchg
jmp
lea
jo
inc
cmp
push
(bad)
imul
xor
out
data16
push
in
sub
(bad)
or
fadd
sar
fnstenv
leave
jle
in
pop
(bad)
mov
mov
sub
arpl
ds
leave
test
movs
jl
ds
xchg
dec
out
stos
mov
mov
jns
jae
pop
jecxz
jp
dec
rol
out
sbb
imul
and
enter
or
or
sbb
inc
pop
popf
sbb
imul
push
sbb
out
xor
xor
mov
mov
push
out
neg
stos
push
adc
add
imul
lahf
push
jae
add
push
or
test
fdiv
shl
push
xchg
cmp
in
push
ret
mov
std
mov
jne
out
adc
rcr
in
fdiv
stc
mov
add
pop
mov
ins
cmp
sbb
xchg
out
push
sahf
sar
or
mov
cs
fisubr
scas
lock
imul
fs
mov
push
fldenv
jmp
fs
push
xor
test
hlt
pop
lods
xor
test
jne
push
mov
adc
(bad)
outs
mov
cmp
cmp
shl
loope
or
xchg
push
(bad)
call
popa
fwait
jbe
mov
dec
loope
stc
es
or
arpl
dec
xchg
fucom
cdq
into
xchg
mov
shl
cmps
cmps
and
dec
mov
adc
cmps
jmp
fidivr
mov
je
inc
aas
das
jge
rcr
jae
lods
sbb
mov
retf
sbb
scas
mov
mov
push
mov
inc
pop
test
jg
(bad)
mov
neg
jae
pop
mov
fwait
loop
imul
ins
int
ds
pushf
call
and
in
test
retf
(bad)
data16
test
cs
lods
xchg
jns
cmps
jp
jl
xor
lods
loop
aas
cmp
or
mov
sbb
lods
xchg
test
inc
je
sar
dec
outs
inc
push
aad
shr
cmp
sub
cmp
dec
jmp
jecxz
mov
dec
push
xor
cmp
js
outs
push
shl
pop
cwde
or
jo
fsub
push
outs
xor
jmp
push
cs
add
movs
cmps
outs
dec
je
(bad)
push
push
test
movs
test
in
xchg
shl
ins
ins
fild
cld
cmp
dec
mov
jns
sub
lea
(bad)
call
pop
aaa
aas
pop
pop
push
sbb
es
push
add
cli
dec
pop
(bad)
jl
and
sub
and
out
pop
fisttp
cmp
scas
pushf
or
dec
add
pusha
call
cwde
imul
mul
jmp
add
push
iret
add
scas
outs
push
movs
xchg
ficomp
(bad)
jg
push
loop
test
mov
and
fnsave
push
mov
or
xchg
scas
retf
mov
mov
or
rol
xlat
shl
(bad)
ror
dec
popf
xor
popa
cmc
jnp
inc
ins
mov
(bad)
dec
push
pop
mov
pop
in
inc
bound
sbb
les
add
ins
fstp
int
pop
cmps
add
daa
loope
sub
mov
div
cmp
mov
mov
sbb
iret
cwde
jmp
add
cmps
cmp
push
xchg
sbb
nop
or
sub
(bad)
rcr
pop
cmp
leave
dec
sbb
xor
pop
mov
mov
mov
and
clc
mov
sbb
xchg
dec
lods
(bad)
shr
pop
jb
xor
or
dec
or
mov
push
fwait
sbb
add
or
add
div
or
fldenv
xor
sub
mov
adc
jo
je
cmp
fst
call
out
adc
add
inc
in
sar
mov
pop
ret
rcr
test
add
mov
ret
ja
dec
adc
(bad)
push
nop
fimul
loop
mov
push
test
mov
xor
inc
(bad)
in
pop
cmp
push
(bad)
inc
lds
xchg
outs
add
xor
cmps
arpl
ins
aad
in
and
or
jne
dec
mov
ret
or
rol
add
mov
mov
lods
retf
rcr
inc
dec
push
(bad)
out
xor
mov
call
mov
pop
(bad)
mov
sbb
or
cmps
mov
mov
jns
mov
jnp
inc
sbb
fcomp
jmp
or
movs
jl
add
push
push
cmp
sub
xor
imul
inc
addr16
push
mov
add
xchg
and
icebp
push
or
pushf
mov
aas
push
and
adc
add
pop
inc
enter
ins
pcmpeqw
(bad)
pop
sub
add
enter
ins
push
ins
adc
das
jl
xchg
fisubr
dec
adc
mov
call
add
mov
scas
add
into
jge
ss
xlat
or
push
sbb
jmp
sbb
mov
jb
loop
xchg
retf
jle
pop
mov
arpl
inc
xchg
cmp
cmp
(bad)
lahf
and
bound
jmp
inc
or
xchg
or
mov
pop
ror
mov
dec
fdiv
xor
push
mov
xchg
jne
inc
in
les
(bad)
jecxz
xor
jbe
test
dec
mov
adc
rcr
mov
icebp
inc
lods
mov
repnz
dec
jnp
call
mov
mov
pop
aas
cld
inc
jo
and
add
cld
jmp
neg
jge
sbb
gs
lods
rcl
inc
imul
int3
mov
or
mov
push
jb
ins
nop
sub
cmps
add
rcl
sbb
in
inc
jp
inc
jle
dec
movs
aad
push
sub
and
imul
mov
sar
das
sbb
xchg
out
jne
stc
imul
adc
movs
call
pop
loopne
push
push
or
pushf
adc
pop
mov
mov
ja
lds
repnz
xor
adc
enter
sbb
fiadd
not
cdq
add
add
mov
fiadd
dec
movs
xlat
mov
inc
call
shl
sbb
ret
push
cmp
xchg
pop
test
xchg
aas
add
shl
movs
dec
xchg
and
xor
loopne
ja
push
mov
ds
mov
imul
ret
add
pusha
pop
mov
data16
sub
jge
test
mov
mov
arpl
sbb
push
sbb
push
add
push
jo
retf
cwde
push
fist
inc
cmps
daa
in
fild
imul
dec
mov
ror
enter
pop
lods
or
xchg
aaa
inc
jno
aam
and
hlt
push
jae
pusha
rcl
lds
repz
lea
loope
shr
ins
mov
inc
jae
lods
shr
xchg
adc
lahf
cmp
inc
mov
fld
inc
adc
aam
xor
or
mov
sti
sar
cmp
cld
test
adc
cmp
adc
push
mov
aas
xchg
push
idiv
jne
jne
adc
fiadd
mov
movs
rcr
nop
jmp
inc
aas
dec
mov
dec
adc
cmp
out
sbb
ror
ja
xchg
push
mov
icebp
mov
cmp
ins
fcmovb
out
ret
pop
push
retf
neg
mov
sbb
push
repz
xor
inc
mov
ror
mov
loopne
adc
cmp
mov
sbb
sar
pushf
inc
daa
sub
jl
outs
int3
push
in
test
int3
pop
jg
cmps
xor
ss
xor
xchg
ins
out
loope
push
fcom
dec
xor
popf
xor
push
jae
xor
push
and
xchg
dec
loope
push
adc
push
or
cli
div
dec
and
(bad)
and
rol
pusha
push
lods
or
cdq
stc
test
push
mov
aaa
scas
scas
xchg
std
cmc
mov
inc
loopne
mov
jno
xlat
adc
mov
xchg
jmp
es
in
arpl
in
xor
xchg
dec
lds
mov
cdq
popf
add
xchg
inc
retf
inc
xlat
xor
push
sbb
jbe
mov
retf
out
adc
push
mov
test
mov
xor
pop
lahf
mov
adc
inc
shr
rcl
repz
es
mov
push
push
xchg
push
ins
ins
pushf
mov
xchg
retf
xor
lock
jp
adc
fstp
dec
push
and
out
mov
add
movs
xor
and
loope
inc
mov
xchg
pop
fwait
sub
push
jge
mov
sbb
fs
dec
cli
stos
and
push
push
aad
or
ret
xchg
mov
cld
xor
add
add
cmp
mov
jmp
mov
mov
outs
adc
sub
int3
mov
and
push
or
mov
cmc
out
add
movs
dec
sub
imul
daa
mov
nop
rol
ja
push
jns
(bad)
sahf
xchg
mov
hlt
hlt
cli
jle
shl
imul
sbb
add
ja
call
sub
cld
mov
mov
retf
or
inc
push
push
ficomp
sahf
enter
or
retf
test
adc
sub
pop
call
nop
xchg
icebp
into
in
jg
mov
popf
cmp
push
push
xor
(bad)
repz
sbb
retf
push
inc
(bad)
sbb
scas
jmp
std
lahf
movs
inc
ret
or
rcr
sahf
movs
or
ds
push
mov
lods
icebp
shl
mov
inc
mov
xchg
xchg
add
std
xchg
mov
jne
cmp
sbb
mov
dec
push
ss
pop
movs
xor
jl
shr
out
or
mov
mov
stos
adc
cdq
sahf
(bad)
dec
push
or
sub
inc
cmp
pop
mov
xor
dec
or
mov
sbb
mov
sbb
in
fnsave
(bad)
pop
inc
pop
enter
sub
xor
pop
fwait
pop
in
out
dec
jge
push
mov
sbb
cmp
sub
dec
fcmovu
nop
or
push
leave
xor
aad
lods
test
out
adc
repnz
fist
mov
cmp
neg
sbb
xor
add
sbb
cmps
sahf
dec
fld
mov
and
or
mov
push
mov
jo
add
mov
cld
push
jge
sbb
imul
cmp
out
pop
mov
imul
and
fcmovne
and
rcr
adc
mov
mov
pusha
retf
mov
out
popa
mov
ffreep
daa
fadd
adc
push
scas
out
xor
out
push
mov
stc
fsub
dec
sti
sbb
sub
dec
cdq
mov
cmps
sbb
sar
outs
xchg
bound
sub
sub
icebp
outs
lods
jmp
cmp
nop
jecxz
xchg
dec
mov
or
addr16
ja
cmp
pop
dec
fnsave
ds
push
aas
hlt
loopne
sub
mov
shr
mov
mov
ja
push
mov
jno
jp
iret
xor
cdq
cmp
scas
out
test
add
xlat
push
xchg
frstor
jbe
cmc
sti
mov
(bad)
leave
jb
xor
xchg
(bad)
xor
inc
fbld
adc
ficom
(bad)
icebp
mov
lock
push
in
xchg
push
test
push
mov
aad
xchg
pusha
fsubr
out
pusha
out
cwde
inc
mov
dec
jecxz
push
sti
cmp
retf
pop
push
inc
pop
adc
mov
ins
cmp
jmp
inc
sbb
xchg
inc
pop
je
adc
iret
cwde
dec
int
addr16
dec
test
or
xor
dec
rcl
lock
dec
lods
adc
popa
dec
aad
aad
rcr
add
cmp
push
fcomp
xor
jbe
aas
sub
enter
dec
in
cli
cld
ret
mov
pop
and
push
jge
bound
rcl
xor
push
scas
cmc
push
xor
in
sbb
sub
gs
adc
or
push
mov
out
push
aas
icebp
into
retf
and
sbb
sbb
in
mov
mov
jb
in
fisttp
sbb
popf
cwde
out
jae
mov
arpl
fcmove
or
hlt
dec
neg
push
mov
mov
push
add
mov
retf
or
mov
mov
lods
aas
or
pushf
push
sub
sbb
call
lds
aad
sahf
pop
test
and
ins
jbe
cmc
mov
sti
loop
inc
cmp
fadd
pop
sub
and
into
mov
inc
cmp
xor
aaa
or
out
fdiv
sbb
dec
mov
loope
aas
lock
add
icebp
jge
mov
mov
mov
je
jo
xchg
jbe
sti
pusha
bt
neg
xchg
repnz
or
mov
or
jecxz
sub
jecxz
or
sahf
imul
xchg
mov
iret
inc
call
or
or
jmp
sahf
cmp
lods
retf
inc
add
jecxz
std
push
stos
nop
jg
sti
mov
and
mov
arpl
cmp
aas
int3
popf
fisub
popa
fwait
push
xor
(bad)
jmp
fisttp
iret
(bad)
lock
es
ficom
push
jne
mov
(bad)
jmp
out
stos
inc
xor
ret
cmp
push
cmp
out
jg
cdq
jmp
xor
dec
int3
push
ss
jmp
arpl
shl
adc
ret
dec
push
inc
or
cmp
neg
lods
and
pop
lock
push
test
out
retf
cmc
das
push
mov
push
iret
les
pop
xchg
rol
mov
xchg
ror
pop
popf
fiadd
adc
or
xor
mov
add
mov
out
cmp
(bad)
aaa
sbb
in
and
mov
or
sbb
mov
mov
cs
mov
in
inc
clc
test
popf
cmp
push
sub
add
jecxz
and
loopne
jmp
jmp
cmp
fcomp
mov
enter
or
call
inc
and
mov
adc
adc
mov
adc
fistp
dec
hlt
push
jbe
push
into
mov
ss
dec
es
enter
repz
dec
fbstp
sbb
adc
in
or
jbe
in
mov
les
lods
or
push
ss
ins
mov
inc
or
data16
sbb
stc
mov
int
call
ja
xchg
ss
aaa
cmp
cmp
sbb
leave
mov
xchg
jmp
fisubr
imul
mov
clc
mov
xchg
mov
icebp
in
loopne
hlt
mov
jmp
dec
ds
unpckhps
pop
out
(bad)
mov
mov
stos
hlt
loopne
xor
imul
jg
fmul
test
sub
int3
fldenv
lods
nop
leave
or
fadd
xor
push
pop
xlat
jbe
icebp
mov
(bad)
push
pop
not
push
push
add
clc
in
cdq
faddp
mov
shl
retf
rol
es
aas
ror
pop
adc
(bad)
and
rcl
test
sub
movs
je
xchg
jo
cwde
cwde
dec
add
mov
mov
and
xor
shr
shl
fidivr
ror
aad
lods
shl
jb
sbb
in
mov
out
(bad)
les
dec
pusha
jmp
mov
call
or
scas
adc
popa
fdivr
sub
adc
push
jbe
pop
and
lods
pop
add
or
fisttp
imul
test
dec
or
int
sub
xchg
mov
push
adc
lahf
push
call
and
jns
or
dec
mov
sub
cmovbe
dec
neg
push
push
mov
xchg
dec
pop
jmp
mov
out
iret
leave
xchg
adc
hlt
push
jecxz
pop
or
dec
cmp
inc
jmp
rcl
sub
cs
pop
adc
or
pop
xor
and
mov
inc
fadd
xchg
movs
pop
mul
mov
mov
push
cmps
cmp
repnz
lea
adc
dec
lea
push
loop
out
scas
gs
mov
adc
xchg
xor
jno
ins
fcmovnu
test
pop
xchg
inc
mov
jo
fadd
mov
dec
inc
jecxz
adc
mov
das
pop
ins
(bad)
fwait
daa
adc
pop
cmp
pop
xchg
xchg
ret
aas
and
fdivr
cmp
fnstcw
and
test
(bad)
rcr
dec
dec
pop
movs
les
xchg
movs
xchg
adc
aas
into
iret
mov
mov
mov
je
fst
shr
shl
in
cmp
out
push
hlt
jp
das
add
pusha
ret
leave
add
pop
loop
inc
adc
retf
sub
mov
lahf
scas
fisttp
sub
inc
aad
xchg
dec
xchg
fcom
pop
js
lods
imul
dec
in
test
cld
pop
js
ds
push
add
jmp
xchg
push
addr16
mov
ja
sbb
jle
int
aad
jne
js
jge
mov
or
js
mov
(bad)
cmp
sub
cmp
in
test
cld
sar
outs
push
jmp
pop
sbb
bound
movs
cmps
sub
arpl
es
push
or
jg
pop
push
fs
fdivr
sub
pop
outs
and
stos
les
inc
dec
inc
cmp
mov
add
xor
call
popa
sbb
pop
dec
pop
sub
dec
inc
pop
xchg
int
xor
aas
inc
or
xlat
daa
leave
dec
inc
or
sbb
loope
sub
pop
inc
mov
dec
add
push
aad
push
push
mov
push
adc
inc
gs
ins
mov
je
sub
adc
loopne
mov
push
rol
ret
bound
push
gs
mov
test
addr16
mov
outs
jp
mov
es
int
jnp
mov
jmp
jecxz
je
xor
jg
jg
int3
fcmovbe
xor
addr16
(bad)
pop
push
scas
sar
inc
xchg
mov
jl
call
imul
push
or
popf
mul
add
cmp
cmp
push
xchg
mov
cs
sub
sub
inc
cmp
sahf
mov
add
cmp
fdivr
pop
rcl
mov
gs
addr16
dec
in
sbb
mov
movs
xchg
pop
test
(bad)
push
fwait
xor
fbld
sub
and
cdq
sub
inc
mov
data16
adc
hlt
xor
sub
xor
dec
mov
pop
out
and
movs
shl
sbb
lea
push
mov
and
jmp
cld
xchg
mov
call
push
(bad)
js
loopne
add
jne
clc
loop
jecxz
mov
adc
mov
jl
push
mov
cmp
mov
out
mov
mov
lahf
js
cmps
sub
arpl
scas
push
xor
xor
adc
mov
inc
movs
fwait
pop
push
adc
dec
pop
ss
pop
dec
adc
xor
test
jmp
mov
test
adc
pop
nop
pop
arpl
jp
sub
ja
xchg
call
popf
jno
cmp
hlt
mov
mov
sbb
lds
ins
fwait
jmp
fwait
mov
and
mov
sti
sbb
data16
add
xor
or
scas
repnz
inc
xchg
add
into
aad
jg
inc
xor
push
pushf
in
cmp
sti
test
mov
cwde
(bad)
out
std
test
(bad)
adc
dec
sub
scas
mov
inc
mov
inc
pop
xchg
into
mov
adc
ja
ja
and
into
xor
fcomp
xchg
das
cmp
xchg
or
movs
xor
xlat
inc
imul
cmp
fist
retf
xchg
test
jle
clc
fs
add
jg
call
rol
adc
sbb
(bad)
neg
pop
js
pop
repnz
xor
cmc
(bad)
jge
inc
test
push
push
fcom
sub
jbe
pop
sub
jmp
adc
mov
fs
movs
mov
stos
sbb
pop
popa
lods
and
xchg
leave
ficomp
push
xor
xor
mov
mov
repnz
push
fsub
mov
stc
call
mov
pusha
test
sub
movs
adc
loopne
cmps
push
sbb
outs
pop
nop
aas
in
add
xor
jmp
xchg
mov
sub
stos
adc
inc
push
das
(bad)
fs
pop
and
bnd
push
cmp
dec
add
adc
xchg
(bad)
pop
pop
mov
les
mov
or
xor
lahf
fdivrp
xor
sbb
out
test
push
cmp
into
sbb
vaddsubps
mov
or
push
daa
or
sub
mov
test
jmp
xchg
mov
sub
xor
stos
daa
fcmovnb
pop
bswap
pushw
sub
adc
leave
mov
mov
cdq
adc
sub
std
iret
movs
pop
sbb
imul
inc
pushf
stos
(bad)
out
das
cmp
outs
and
cmp
pop
in
test
fsubr
stos
nop
xchg
push
into
cld
out
movs
cmp
adc
sahf
pop
xchg
cmp
cmps
les
aad
scas
sar
inc
mov
jmp
xacquire
sahf
pop
popf
jnp
(bad)
jne
mov
call
cmp
inc
add
dec
shl
dec
je
arpl
in
add
jle
mov
loope
std
add
shr
test
pmaddwd
pop
push
cmc
and
push
aam
in
pop
movs
leave
cdq
test
outs
pop
popa
lods
and
repnz
jle
inc
sbb
jae
inc
lea
aaa
test
sbb
xchg
outs
mov
push
dec
retf
xchg
fisub
stos
pop
daa
nop
adc
inc
mov
aam
leave
xlat
imul
xchg
test
sbb
sub
mov
push
cwde
xchg
imul
jbe
and
xchg
sti
mov
call
ror
fnsave
mov
outs
xor
jecxz
adc
sub
retf
jmp
sbb
pop
daa
inc
retf
jg
fcmovbe
sbb
adc
and
xchg
push
or
add
dec
push
mov
lahf
das
mov
adc
fdivr
aaa
xchg
pop
ins
dec
cmp
push
add
cmc
aad
sbb
retf
sub
add
add
push
fs
dec
sbb
xchg
int
pushf
dec
push
aas
jmp
cmp
shr
repnz
inc
enter
outs
stc
mov
add
test
push
shr
dec
pop
adc
inc
loope
push
sar
cs
jecxz
push
test
xchg
jnp
mov
cdq
xor
mov
pop
sbb
jae
add
pop
pop
jmp
dec
loop
xchg
sbb
retf
mul
mov
inc
sub
pop
push
pop
call
out
mov
pop
or
popf
not
inc
add
jno
xchg
mov
dec
loope
and
add
mov
xor
lock
loopne
iret
push
pop
cmps
push
xor
pop
fst
jne
cld
cli
pop
stos
sbb
arpl
ret
out
mov
cld
int3
cmp
cld
test
xor
popf
mov
and
(bad)
nop
and
mov
pop
test
(bad)
jg
and
sbb
cmp
addr16
dec
ret
inc
sub
call
ds
shl
jo
push
leave
mov
rcr
jne
out
cmp
loope
cli
xor
push
repz
popa
xor
retf
mul
dec
nop
sbb
pop
aas
stos
xchg
mov
sahf
xor
cmp
mov
mov
xlat
pop
inc
sub
inc
retf
cwde
push
pop
cli
mov
hlt
pop
jbe
jmp
mov
cmp
or
or
push
cmp
popf
fdiv
cmp
mov
xchg
imul
jo
pop
sub
push
ret
leave
sub
ficomp
iret
stos
(bad)
imul
pop
mov
test
mov
mov
sub
xchg
dec
test
(bad)
out
leave
dec
hlt
dec
daa
sbb
mov
pusha
dec
test
xchg
test
cmc
mov
adc
shl
mov
or
cmps
lea
aaa
jp
ins
pop
arpl
jmp
sbb
jae
push
adc
jbe
add
jns
scas
aaa
mov
inc
jle
outs
fptan
mov
mov
int
xchg
mov
rcr
inc
mov
outs
out
rcl
enter
sbb
aam
jns
ret
(bad)
enter
std
and
cmp
xor
imul
popa
dec
retf
mov
lock
test
pop
repz
pop
xchg
cmc
ins
cmp
pop
aaa
pop
sub
(bad)
cmp
nop
jmp
mov
jle
mov
sub
aas
jb
add
jae
or
jo
neg
dec
in
loop
push
dec
ins
xchg
ror
mov
test
mov
jle
and
cmps
push
xchg
xor
push
mov
loopne
lahf
cmc
jp
or
inc
imul
mov
sar
das
gs
bound
sbb
mov
cmp
add
or
xlat
xor
sti
out
sub
inc
pop
int
dec
mov
xchg
das
xor
sbb
(bad)
loopne
ds
and
pop
enter
into
pop
iret
pop
add
sahf
sub
out
enter
xchg
push
cmps
sbb
aad
movs
add
mov
movs
sbb
mov
fisttp
popa
mov
imul
fst
cmp
stc
and
arpl
in
ins
loop
nop
mov
sbb
ja
jae
push
repz
cs
int3
in
(bad)
out
sbb
repz
ins
es
imul
out
and
(bad)
call
scas
jmp
xchg
sub
sbb
add
mov
pop
xchg
fisub
and
pop
enter
xor
and
les
cmc
ss
cmp
mov
add
xor
inc
std
or
mov
dec
(bad)
push
push
push
scas
ins
jmp
cmp
jge
jne
jbe
pop
test
sub
fidiv
jmp
sti
ds
mov
mov
psrlw
adc
xchg
lock
scas
xchg
and
or
into
aad
xchg
xor
fsubr
jmp
xchg
adc
dec
in
pop
jmp
fsub
adc
xor
mov
les
test
sub
mov
test
fs
jle
mov
test
push
xchg
push
dec
mov
inc
mov
push
rcl
shl
mov
mov
shl
cmp
push
pushf
out
sub
es
mov
add
pop
sub
inc
movs
fcomp
pop
mov
test
movs
jb
mov
lea
rol
xchg
xlat
pop
out
mov
mov
jo
fs
rcr
mov
pop
sbb
mov
push
loopne
inc
shl
add
mov
pop
cmp
jp
jg
ja
push
push
cmp
aaa
mov
add
dec
cld
pop
xor
ja
inc
pop
lahf
xor
and
dec
jno
pop
iret
ror
jp
test
stc
clc
xchg
enter
sbb
mov
mov
es
push
movs
in
ret
dec
sub
mov
stc
push
sbb
mov
aam
loope
es
mov
sbb
push
enter
sbb
retf
not
loopne
in
fldcw
mov
nop
sbb
mov
xlat
pop
push
fistp
(bad)
jns
int
jne
mov
inc
mov
(bad)
ins
cld
fxch
sub
sbb
mov
cmc
mov
fld
or
in
xchg
sub
adc
shr
std
mov
fcmovnbe
scas
setae
adc
dec
cmp
test
mov
mov
inc
aam
push
mov
cmps
or
sbb
movs
mov
pop
das
jmp
xchg
and
push
lods
outs
sbb
rol
dec
jns
and
pop
xlat
(bad)
hlt
mov
inc
(bad)
ins
jmp
ins
fldenv
sub
mov
stos
outs
bound
sub
nop
mov
jo
movs
cmp
or
aas
sbb
int3
cmc
jmp
cmp
ss
sub
sbb
xchg
lods
or
fisubr
jno
push
loop
data16
pop
stos
paddusb
retf
out
jl
or
mov
loope
sub
outs
fadd
xor
mov
or
cmp
pushf
out
jnp
les
(bad)
and
hlt
cdq
cli
lea
retf
xor
push
retf
fld
sbb
dec
int
(bad)
cmp
push
jnp
sti
dec
sub
or
dec
test
movs
push
mov
cld
jo
xor
sbb
into
and
into
inc
imul
es
cmp
adc
push
mov
xor
ror
aam
sbb
fstp
mov
adc
iret
movs
jb
js
sbb
sti
dec
cmp
and
sbb
sub
inc
sti
int
sub
xor
mov
mov
pop
add
mov
jmp
in
mov
(bad)
cld
or
lea
outs
gs
(bad)
cmp
mov
or
lock
push
jne
fcmovnb
or
jnp
mov
jle
(bad)
mov
nop
mov
adc
xchg
retf
xchg
sub
fs
fild
test
clc
push
xor
emms
test
test
cli
loop
mov
jo
sbb
in
icebp
jae
je
pop
and
lods
mov
mov
or
js
and
loopne
hlt
cmp
fiadd
ins
mov
xchg
mov
inc
push
jl
bound
mov
test
lods
inc
mov
sub
scas
and
cmp
test
pop
pop
sahf
sbb
call
adc
dec
pop
or
jecxz
mov
jmp
mov
test
leave
xchg
add
mov
push
cmp
xor
loop
sahf
imul
cwde
cmp
mov
xchg
out
sub
inc
cmp
dec
loopne
gs
mov
jmp
push
jne
xchg
mov
div
jle
daa
cld
fist
je
push
cmp
aaa
hlt
pop
dec
mov
dec
mov
(bad)
loopne
(bad)
iret
adc
ja
pop
test
mov
xchg
sbb
sub
sub
mov
(bad)
jl
or
sbb
sbb
rcr
ficom
psadbw
mov
xor
jnp
ins
push
xchg
xor
fs
clc
repz
jb
push
aad
cld
push
push
jmp
xchg
cwde
out
and
push
sub
pop
jg
pop
inc
mov
addr16
int
mov
pop
xchg
mov
inc
sbb
or
pop
pop
adc
push
adc
mov
xor
ret
push
inc
inc
add
fisttp
pop
aad
pop
adc
jmp
(bad)
neg
dec
cmp
fimul
adc
push
adc
icebp
inc
mov
mov
and
push
xchg
mov
cs
nop
pop
jnp
xchg
sub
nop
fwait
push
push
pop
adc
lods
jbe
sub
outs
iret
fidiv
inc
aas
enter
int
pop
mov
and
(bad)
cwde
inc
adc
and
mov
dec
cdq
sub
mov
jns
inc
mov
outs
jg
inc
scas
cwde
fs
push
pushf
pop
ss
inc
xor
fs
(bad)
les
cmps
stc
jecxz
pop
test
leave
dec
fisub
aas
iret
sar
neg
aas
nop
inc
scas
ret
xchg
loope
push
ins
add
je
aas
xchg
jns
inc
cmp
xchg
push
das
sbb
ins
and
mov
push
jns
out
cmp
push
test
cli
(bad)
(bad)
mov
cmp
test
(bad)
neg
xor
jnp
adc
rcr
ds
fsub
sub
lock
xchg
xchg
xchg
fcomp
ss
push
add
scas
movs
inc
daa
ret
bound
fld
pop
add
push
push
and
sti
push
mov
sbb
lds
mov
lahf
fsin
jb
fsub
add
or
aas
(bad)
pusha
jecxz
push
and
mov
adc
inc
neg
and
cmc
neg
(bad)
cmp
pop
scas
popa
fild
push
nop
mov
sub
nop
movs
iret
mov
neg
push
ja
(bad)
in
iret
sbb
call
out
jb
fld
inc
jo
inc
cmp
mov
out
int3
mov
push
test
add
aaa
and
mov
aam
sbb
jo
aad
jmp
adc
inc
xchg
mov
das
mov
(bad)
push
ins
push
cwde
fistp
cld
sti
cli
das
pop
mov
jb
pop
nop
adc
xchg
lahf
xlat
mov
cmp
rol
(bad)
leave
add
push
inc
mov
push
lahf
call
pop
mov
xor
xchg
xchg
std
outs
pushf
jo
and
sub
das
popf
sbb
rcr
in
jge
push
dec
add
push
dec
popf
xlat
or
adc
mov
mov
or
pusha
or
push
(bad)
lock
push
cmps
jp
pop
hlt
push
sub
ins
inc
inc
scas
push
mov
clc
pushf
(bad)
sbb
push
lods
dec
add
pop
lock
inc
iret
test
lds
pop
jne
inc
shl
mov
push
mov
mov
pop
dec
dec
sbb
dec
repnz
fdivr
mov
rcr
pop
jnp
pop
mov
ss
nop
and
xor
loope
sbb
jg
test
loope
xchg
jb
and
movs
pusha
add
mov
mov
xor
push
(bad)
adc
mov
pop
mov
(bad)
jecxz
jle
fwait
imul
push
(bad)
adc
mov
jmp
xor
xor
jg
and
add
jg
mov
fs
fstp
stos
xchg
sub
retf
inc
and
dec
sub
pusha
inc
lea
fdivp
push
ins
out
mov
call
fimul
aaa
mov
push
xchg
sbb
add
push
rol
mov
arpl
cmps
jns
mov
mov
jb
xchg
jnp
pop
mov
or
repz
and
sar
push
popa
movs
mov
or
dec
xor
fld
or
cli
jbe
clc
xchg
add
gs
add
mov
shl
in
mov
mov
rcr
jge
mov
sahf
cmc
ss
and
add
out
push
ret
pop
jle
jmp
imul
xlat
stos
mov
mov
or
pop
jecxz
adc
in
pusha
cs
shl
movs
and
mov
movs
add
sbb
sub
lods
pop
iret
retf
mov
aad
outs
sub
vpsubb
push
mov
repnz
js
and
cmc
jo
int
xchg
fst
sub
fld
lods
call
inc
ds
bound
rcr
jge
xor
jmp
push
ret
sub
mov
fstp
dec
leave
jne
pop
loope
mov
and
pop
ins
sbb
and
clc
mov
inc
and
dec
in
ja
sbb
hlt
sub
add
dec
call
mov
pop
xchg
mov
es
es
push
jae
(bad)
push
cmp
fcmovne
push
call
mov
sbb
call
sub
cdq
cld
adc
bound
xchg
ins
push
fld
aad
loope
smsw
ret
jg
push
nop
pop
mov
inc
mov
icebp
fstp
inc
bound
add
mov
fisub
mov
xlat
xor
out
test
sbb
jb
imul
pop
movs
pop
inc
mov
inc
jecxz
out
cdq
jo
(bad)
mov
aaa
add
inc
jp
in
lahf
jne
test
mov
out
cmc
movs
leave
std
pop
cli
sbb
mov
sar
pop
ins
ror
pop
or
lds
sub
stos
xchg
cmps
mov
or
mov
inc
inc
mov
icebp
(bad)
jp
iret
push
fsubr
test
cmp
fild
jecxz
pop
xchg
xor
inc
out
movs
stos
jno
rol
test
adc
xchg
cdq
das
and
inc
mov
mov
add
sbb
(bad)
into
inc
xor
(bad)
or
repz
push
cmc
sbb
mov
mov
mov
push
outs
xor
xor
call
out
(bad)
in
jp
jbe
clc
in
mov
xchg
sub
cmp
and
xchg
push
mov
es
xor
xlat
push
mov
shl
sbb
sbb
mov
mov
fiadd
rcr
mov
mov
das
mov
dec
leave
loope
arpl
jne
sub
ja
add
push
rcl
clc
jge
test
sahf
mov
mov
cli
rol
cmp
adc
jmp
std
dec
(bad)
adc
xor
push
sbb
loope
mov
mov
push
int
jns
lea
popa
test
loope
cmp
ret
sub
fsubr
inc
clc
mov
aad
pop
iret
cmp
retf
(bad)
loope
pop
pop
fs
arpl
push
std
icebp
adc
xchg
bnd
add
push
lds
into
test
or
mov
out
fnstcw
shr
add
mov
and
imul
inc
push
dec
fldcw
cli
daa
shl
sbb
pop
jmp
fs
inc
mov
je
gs
mov
rcl
pusha
add
retf
mov
xor
jp
sub
add
sub
pop
inc
dec
in
cmps
mov
fnstenv
scas
aad
xchg
fidiv
ds
xor
stos
fnstenv
in
cli
mov
cmps
or
mov
inc
out
or
iret
pop
xchg
jmp
sub
xor
inc
cld
adc
rcl
mov
inc
(bad)
call
sub
pop
cmp
mov
stos
es
and
jnp
sahf
push
into
pop
les
test
sahf
xchg
mov
aam
mov
scas
scas
stc
gs
mov
out
clc
inc
outs
std
add
nop
mov
cmps
sbb
stc
add
mov
and
pop
cmc
jge
xchg
jns
sar
int3
mov
push
sub
stos
cmp
jmp
pop
aaa
sbb
jg
arpl
lods
clc
in
cmc
loop
ja
inc
inc
sbb
jns
in
mov
cmp
loope
les
xor
mov
sub
arpl
test
fdiv
mov
dec
fimul
jnp
pop
dec
push
rol
xchg
push
aaa
jno
mov
or
inc
pop
jp
cwde
loope
ds
xchg
test
(bad)
xchg
push
out
repz
push
mov
aaa
leave
(bad)
xchg
retf
pop
sbb
std
inc
or
fucomp
cdq
push
mov
popf
pushf
outs
pop
sbb
xlat
pusha
lahf
mov
(bad)
dec
sbb
dec
jnp
mov
mov
aaa
(bad)
scas
cmp
fs
mov
pop
push
jecxz
xchg
callw
(bad)
arpl
add
outs
pop
jmp
ficom
pop
dec
fld
sbb
das
mov
cmps
mov
loop
pop
xchg
dec
es
test
or
lds
xchg
lds
lock
jb
daa
scas
jg
xor
popf
nop
mov
ficom
inc
das
lds
out
or
test
aam
cmp
sti
retf
sbb
inc
mov
sub
sar
add
mov
inc
jecxz
dec
popf
ror
aad
and
loopne
xchg
mov
sti
push
mov
adc
popf
jmp
adc
out
push
jmp
add
(bad)
and
outs
push
jmp
push
(bad)
jecxz
push
and
jbe
push
cmp
mov
dec
pushf
cmps
mov
ret
out
push
mov
sub
gs
jmp
ror
ins
inc
in
fisubr
int
push
jo
xor
out
mov
movs
loope
out
arpl
int3
jg
bound
xlat
inc
stc
mov
mov
jo
pop
pop
cmp
lods
idiv
popa
pop
mov
(bad)
ret
fdivr
pop
inc
mov
inc
jge
or
cli
fstp
xchg
clc
fsub
shr
dec
call
scas
mov
shl
push
push
retf
sbb
xor
jle
cmp
jns
outs
js
sub
mul
push
or
xchg
dec
add
inc
fbld
sbb
shr
xchg
xchg
pop
jo
into
sub
sub
ret
into
pop
fnstenv
adc
pop
dec
loopne
inc
lods
add
test
dec
mov
pop
push
in
js
(bad)
mov
outs
add
xchg
sub
stos
test
imul
shr
push
lock
ds
jnp
inc
adc
dec
mov
lea
call
test
gs
movs
push
mov
fld
push
ror
and
(bad)
fadd
inc
adc
pop
and
push
ficom
mov
cmps
or
dec
into
push
jns
lods
sub
push
add
push
and
add
iret
adc
(bad)
es
cld
dec
cmps
shl
inc
cwde
out
jl
push
or
push
sub
ins
bound
aad
or
jmp
xchg
stos
inc
mov
or
push
sbb
pusha
cmp
xchg
imul
lods
inc
mov
addr16
cmps
clc
mov
sub
nop
and
test
sub
mov
psadbw
mov
adc
push
stc
push
out
jmp
and
fucomi
cld
jmp
add
gs
sar
or
sti
add
ret
adc
shl
inc
call
cli
push
and
jmp
dec
loope
sub
sbb
xchg
add
dec
jb
cld
loope
mul
stos
fwait
sbb
mov
cmp
shl
clc
jno
push
mov
cld
frstor
cmp
jmp
into
pop
mov
pop
mov
js
sbb
dec
clc
sbb
inc
ja
(bad)
jnp
rcl
cwde
lahf
push
mov
pop
mov
jo
stc
inc
adc
push
cmp
adc
sub
sbb
mov
ret
ins
cld
movs
push
and
mov
adc
xlat
jl
in
xor
xor
imul
cmps
(bad)
(bad)
pop
ficomp
mov
shl
dec
ds
jl
cmc
jl
sub
inc
push
push
xor
fst
mov
mov
inc
xchg
fdivr
aaa
push
mov
push
xor
cmc
test
in
pop
fadd
jmp
icebp
ins
icebp
jmp
sahf
je
xchg
push
or
inc
xor
sar
adc
sti
jae
cmp
or
jo
retf
stc
call
fdiv
sbb
sar
push
es
xor
test
or
repnz
repnz
rcr
xchg
jmp
test
sbb
mov
shl
(bad)
std
icebp
jle
jae
xlat
push
mov
cmp
lock
mov
dec
pop
ret
ins
xor
and
stc
rcl
adc
scas
adc
push
in
setl
sub
add
imul
data16
outs
(bad)
jp
inc
pushf
aas
loopne
xor
add
mov
fcomi
add
jnp
xor
clc
inc
shl
xor
fwait
mov
pop
nop
sahf
mov
lods
jl
scas
or
ret
fisttp
mov
mov
and
xchg
enter
cmp
adc
fwait
mov
ror
inc
inc
sahf
xor
inc
jecxz
ror
pop
pop
pop
pusha
sub
mov
or
inc
sub
shl
aaa
pop
adc
xchg
ds
sub
retf
(bad)
rol
dec
in
add
cwde
cmc
out
jno
ins
out
dec
arpl
add
ja
pop
scas
retf
aaa
repz
push
hlt
mov
fdiv
mov
popf
pop
cmp
inc
call
mov
jge
(bad)
sahf
xchg
mov
out
out
pop
sub
ds
mov
and
(bad)
and
not
dec
jecxz
jb
dec
out
(bad)
sahf
sub
inc
fild
test
xor
jmp
xchg
inc
inc
sub
gs
or
and
test
popf
xchg
jno
inc
ja
aas
cwde
pop
or
jecxz
xor
cmp
xchg
in
movs
movs
shl
pop
and
imul
ds
stc
test
arpl
ds
sub
jae
arpl
lods
popf
xchg
jno
fcmovbe
push
cmp
mov
std
dec
and
push
adc
int3
jle
mov
push
inc
adc
sub
out
push
mov
and
gs
shr
pop
and
push
rcr
xchg
sbb
les
fwait
ret
scas
push
xchg
mov
pop
cmp
xor
aas
lea
mov
cmp
mov
xor
test
mov
pushf
xor
popa
sahf
js
sub
dec
cmp
cmp
jo
aam
test
loopne
cvttps2pi
push
nop
mov
jnp
xchg
sub
(bad)
aam
test
xor
pushf
push
leave
push
inc
mov
dec
arpl
ja
xor
pop
lods
dec
jbe
lock
jl
push
adc
add
in
mov
mov
mov
retf
and
inc
dec
adc
stc
repz
dec
repz
dec
jo
add
movs
add
aaa
xor
pop
sti
mov
adc
fmul
add
pop
cmp
clc
test
or
dec
in
popf
movs
mov
sti
sub
cmp
fbstp
sub
xor
dec
xchg
in
mov
lods
and
cli
ins
xchg
fwait
sti
xor
xor
dec
push
add
mov
pop
jmp
or
out
mov
lahf
xor
push
jmp
imul
push
push
push
pop
cmp
adc
cmp
push
or
es
cmps
push
ror
(bad)
mov
ins
out
mov
shl
sub
mov
sub
and
cmp
xor
jl
xchg
out
adc
movs
inc
xchg
mov
sub
jns
dec
adc
test
retf
loop
push
inc
fistp
iret
scas
push
dec
out
adc
clc
loope
retf
cmp
hlt
pop
dec
(bad)
retf
sub
add
add
data16
imul
mov
mov
mov
ret
adc
mov
push
int
sub
pop
inc
leave
int
push
lods
les
add
(bad)
cmc
inc
outs
ds
sar
shl
add
sub
xor
xchg
jnp
dec
lea
and
out
dec
int
mov
sub
jmp
dec
bound
xchg
lahf
pusha
dec
repz
rol
mov
inc
popf
gs
arpl
hlt
pop
mov
sub
add
lods
sub
mov
jo
movs
jae
mov
cmp
out
add
push
xor
and
jp
scas
ja
aaa
jnp
and
bound
shl
lods
jo
add
inc
test
cs
test
movs
leave
inc
arpl
or
cwde
push
(bad)
std
xchg
enter
mov
leave
pop
not
int3
mov
lds
cwde
lods
scas
mov
mov
ret
mov
lock
loope
sub
cmp
or
xchg
and
sub
(bad)
aad
fs
(bad)
fcomp
xor
jge
loopne
pop
not
fcmovnbe
pusha
push
mov
adc
and
cmp
add
fst
(bad)
mov
adc
push
fcomp
mov
mov
add
add
(bad)
adc
cmps
test
ss
out
mov
jb
cwde
mov
nop
sbb
inc
inc
or
push
sub
(bad)
or
push
out
dec
and
or
xchg
pop
out
scas
mov
sub
push
adc
div
in
lds
pop
push
push
loopne
jns
push
pop
ret
adc
lahf
cdq
vmovdqu
jmp
dec
int
xor
mov
test
cmp
es
jmp
xchg
and
jb
jbe
das
icebp
aam
repz
stc
pop
jo
adc
pop
stos
sti
adc
pop
in
jge
ins
pop
test
add
into
jb
test
cmp
repnz
pushf
add
mov
movs
int3
in
call
inc
(bad)
aad
jb
bound
addr16
stos
pop
jb
mov
mov
push
pushf
add
mov
pushf
cmp
in
and
ret
inc
and
sbb
scas
(bad)
out
fist
push
ins
and
cwde
sbb
out
adc
popa
cmp
loopne
adc
sub
popf
fmul
mov
adc
mov
ins
test
arpl
lds
sub
jae
and
add
in
cli
mov
stos
loop
ins
int3
push
and
aam
scas
out
add
arpl
cmp
pop
jbe
movs
mov
pop
outs
xchg
in
jmp
mov
aaa
push
xchg
and
sub
fucomi
shr
mov
popf
das
retf
pavgb
pop
mov
pop
out
mov
inc
mov
cmp
push
jmp
pop
sub
in
jge
imul
push
shl
mov
mov
cmp
fucomp
mov
cmp
mov
inc
adc
ins
cmp
sub
enter
jbe
pminsw
mov
sbb
movs
and
mov
add
mov
jmp
xor
or
mov
inc
push
test
leave
dec
xchg
jl
dec
cmp
pop
xchg
test
mov
(bad)
xor
sub
dec
xchg
ss
stos
xchg
int
xchg
cmp
out
pop
out
jecxz
lds
out
lea
pop
mov
sbb
inc
mov
push
adc
movs
dec
addr16
lock
adc
mov
mov
xor
and
pushf
jl
daa
mov
inc
lahf
jo
lock
ds
push
mov
mov
dec
pop
xchg
mov
sub
std
stc
les
in
push
inc
jne
push
cmc
pop
mov
jmp
mov
adc
xchg
lock
or
sahf
xchg
jge
cmp
jmp
add
sbb
ins
mov
es
retf
test
inc
call
inc
dec
ror
jo
cmp
jb
inc
ss
test
pop
fsubr
mov
iret
aas
in
sbb
add
push
xor
nop
dec
mov
cmps
shl
add
add
pop
sbb
das
adc
mov
ss
call
add
and
sti
xlat
sub
test
push
sbb
adc
ja
imul
frstor
mov
stc
or
push
sub
ja
sbb
mov
and
sbb
cmp
stc
js
or
dec
test
imul
ins
cli
test
test
adc
in
scas
or
arpl
cld
pushf
jae
mov
mov
xchg
retf
(bad)
xor
outs
movs
pop
pop
jnp
arpl
push
shr
test
add
sub
mov
mov
add
cmp
dec
pop
sub
jge
rcl
mov
and
and
scas
xor
aam
(bad)
jmp
mov
lahf
cmp
hlt
and
push
xor
ins
cmp
js
iret
mov
addr16
sub
or
lahf
pop
cmps
xor
dec
(bad)
scas
mov
in
and
je
jg
jno
retf
mov
(bad)
mov
clc
add
pop
dec
xchg
cli
cmp
pushf
jbe
fcmovne
dec
pushf
rep
sub
imul
out
enter
pop
xchg
sbb
adc
je
mov
(bad)
sub
sub
mov
daa
stos
and
push
sub
dec
les
lds
in
dec
in
rol
inc
sbb
and
(bad)
xor
mov
or
mov
into
mov
push
pop
push
popa
pop
into
test
out
in
jp
or
in
ds
xchg
mov
in
jmp
icebp
mov
loope
stc
in
xor
jb
addr16
cmps
das
pop
fadd
mov
xor
imul
add
aas
pop
addr16
lahf
(bad)
xor
mov
cmp
(bad)
mov
adc
adc
add
dec
ins
push
enter
in
add
lea
or
popa
js
inc
call
pusha
out
push
mov
mov
or
add
cli
dec
inc
lds
sub
(bad)
or
xlat
ins
test
sbb
movs
in
xchg
cs
ds
lock
ret
push
fldcw
shl
sbb
stc
add
sti
(bad)
fwait
ret
inc
enter
test
jmp
(bad)
movs
outs
retf
adc
dec
cli
in
aaa
sti
jp
aas
jmp
outs
sbb
inc
cmp
enter
push
push
and
test
js
and
sub
je
cmps
sbb
and
movs
rep
cli
pop
pop
xchg
lods
xchg
mov
jg
das
addr16
cmp
ja
cs
(bad)
rcr
scas
ficomp
add
push
ins
push
into
loop
rcl
jmp
mov
fidiv
fcomi
mov
fdiv
push
in
out
scas
mov
xor
jmp
scas
std
cmp
retf
mov
jbe
loop
dec
sbb
ins
sub
lods
stos
mov
rcr
dec
addr16
jle
sub
push
ss
push
cmp
outs
cmps
call
mov
cmc
sub
jmp
repz
dec
cmp
xchg
push
mov
cmps
push
add
retf
fsub
xor
xlat
xor
or
addr16
dec
ds
cmp
ins
xchg
enter
(bad)
xchg
dec
imul
cmps
push
int3
mov
mov
stc
(bad)
fisub
adc
mov
adc
xchg
cmp
mov
pop
and
sub
fwait
pusha
or
int3
sbb
mov
nop
cld
mov
mov
mov
sar
mov
fiadd
inc
jmp
popa
div
push
gs
gs
(bad)
adc
dec
mov
popf
into
push
paddb
adc
nop
jmp
mov
in
inc
loope
sub
mov
aam
sbb
or
into
gs
cs
and
inc
scas
out
xor
sub
push
out
adc
add
ins
inc
jmp
cli
rcl
mov
shr
mov
push
push
(bad)
(bad)
mov
sbb
stos
push
or
popf
imul
ret
and
dec
sbb
enter
imul
inc
adc
das
add
mov
cmc
sub
(bad)
dec
jg
adc
(bad)
sub
pop
leave
inc
add
sbb
addr16
lods
nop
outs
push
and
inc
mov
mov
sbb
push
ret
push
mov
ret
repz
mov
mov
jg
add
sub
mov
(bad)
ja
jbe
dec
js
(bad)
fisttp
inc
icebp
(bad)
mov
lods
add
ror
adc
bnd
scas
outs
shr
dec
outs
or
mov
mov
mov
fdiv
test
push
push
jp
sub
and
bound
adc
xor
dec
stos
inc
inc
push
ss
(bad)
je
add
jecxz
jle
mov
shl
push
shl
adc
inc
loopne
retf
inc
cmp
scas
push
inc
mov
jb
shl
bound
in
or
sbb
dec
push
fsubp
rcr
idiv
fdivr
out
adc
je
xor
aas
mov
imul
in
sub
std
jl
pop
xor
dec
mov
faddp
pop
lods
mov
xchg
and
aam
and
inc
pusha
add
cmp
shr
loop
push
int
outs
lds
cmp
stos
(bad)
dec
xor
out
jno
push
sub
pushf
pop
sbb
jae
hlt
mov
hlt
rcr
cdq
mov
sbb
mov
ins
jo
loopne
pusha
ds
test
clc
es
dec
pop
(bad)
push
and
daa
int3
or
pop
(bad)
(bad)
push
pop
or
ss
daa
dec
loope
mov
sahf
push
mov
lods
mov
out
dec
mov
mov
hlt
loope
ins
fld
out
mov
and
fisubr
dec
xor
mov
sub
lods
out
cwde
jmp
mov
pop
rcl
call
jmp
lods
sub
int3
xchg
fistp
fisttp
inc
call
rol
add
loop
(bad)
fnstsw
push
inc
mov
(bad)
pushf
mov
outs
pop
pop
in
fcomp
enter
cmp
(bad)
pop
xchg
mov
sar
cmp
daa
push
addr16
mov
js
inc
out
mov
ins
(bad)
hlt
jb
lods
jmp
imul
repz
inc
cmp
lock
xchg
data16
data16
adc
outs
repnz
aaa
loopne
aaa
addr16
mov
sbb
cmc
hlt
pop
fdivp
ins
in
mov
mov
mov
sub
addr16
add
mov
add
aam
jmp
bound
cmc
div
test
pop
inc
(bad)
fist
or
or
sub
mov
sti
lahf
fsubr
ja
loope
sar
and
jl
xchg
dec
loope
cmps
stos
je
rcr
(bad)
mov
mov
xor
adc
xchg
jmp
call
lods
pop
xchg
cmps
mov
cdq
in
xor
sar
or
cmp
mov
inc
mov
sub
nop
clc
sahf
or
neg
cmc
fcom
popa
enter
lods
pop
or
add
pushf
pushf
push
push
imul
cmp
pop
xchg
jge
jne
adc
lock
cmp
sbb
frstor
jle
daa
push
lahf
mov
pop
cwde
dec
(bad)
mov
rcr
std
xchg
or
mov
mov
mov
xor
and
out
sbb
adc
(bad)
xlat
xchg
clc
int
lock
dec
mov
cmp
call
cmp
(bad)
mov
(bad)
mov
push
sbb
jmp
arpl
sub
sbb
stos
mov
and
rcl
mov
lea
pop
push
inc
cmp
icebp
adc
push
add
fcomp
test
xor
mov
add
lods
std
xchg
jp
ror
std
movs
das
pop
cmc
cmc
cmps
mov
lahf
cmp
xchg
les
aas
jb
mov
dec
cmc
ja
mov
lock
or
xlat
arpl
jb
inc
dec
jae
imul
or
dec
push
xchg
movs
test
adc
in
xchg
fisttp
mov
inc
sub
mov
push
dec
xchg
jle
addr16
test
cmp
lds
(bad)
or
xchg
call
dec
mov
or
bound
aad
int3
cmps
loope
xor
je
inc
pop
gs
jno
adc
mov
pop
clc
sbb
lods
xor
or
xchg
out
fcmovnu
sbb
ss
pop
je
mov
inc
push
mov
and
jns
in
ins
xor
and
scas
shl
je
push
mov
rcr
push
bound
cmp
lea
mov
nop
push
mov
call
cli
xor
inc
and
jbe
adc
inc
cmp
sub
mov
imul
jno
nop
pusha
int3
xchg
nop
fimul
(bad)
fimul
sbb
jmp
aaa
mov
mov
loopne
popa
popf
lock
arpl
bound
xor
inc
(bad)
loope
mov
mov
pusha
not
push
sahf
in
or
stc
mov
sar
dec
in
cmp
retf
iret
xchg
cli
dec
imul
adc
aas
daa
ja
dec
(bad)
dec
jne
test
div
push
pop
sbb
push
leave
into
fstp
sub
retf
jle
cmp
jl
loop
mov
retf
fistp
test
pop
and
je
test
sub
adc
push
or
push
repz
stc
jnp
(bad)
jle
mov
push
xchg
stos
push
stc
or
mul
push
(bad)
mov
or
call
sbb
cld
(bad)
push
cmp
cmp
dec
fild
cli
pop
imul
xor
scas
add
stos
test
repz
loop
or
mov
cs
cwde
add
call
je
push
dec
movs
xchg
or
ficom
cmovns
jmp
xchg
pop
dec
mov
loopne
inc
sbb
aad
sar
or
cmp
xchg
push
iret
push
nop
aam
push
add
adc
in
sahf
and
jmp
movs
jbe
data16
ret
xor
push
xchg
cli
sahf
adc
dec
sub
(bad)
cmp
add
call
pop
js
shl
xor
retf
inc
mov
clc
repnz
test
mov
jns
dec
mov
push
int
imul
cli
cmp
or
sahf
add
sbb
cmp
push
xchg
dec
popf
pop
xor
out
loope
mov
ret
scas
mov
push
xchg
or
jmp
sbb
push
call
cmp
add
neg
enter
lahf
cmp
fld
cmp
(bad)
xchg
(bad)
ret
inc
mov
mov
mov
out
jbe
or
aaa
pusha
shl
pop
dec
mov
test
(bad)
cmp
mov
loope
stos
adc
shl
jge
adc
sahf
sub
repz
outs
cmp
pop
sahf
and
cmp
fdivr
mov
inc
stos
popf
mov
call
jb
dec
push
out
jle
clc
pop
mov
sbb
mov
test
xchg
stos
or
in
scas
clc
sbb
fmul
push
cli
ins
adc
inc
xchg
mov
bound
ficomp
xchg
add
jmp
adc
stos
loop
mov
repnz
pop
fs
inc
jmp
ins
jae
jmp
dec
jns
inc
jno
cdq
and
jae
inc
lea
icebp
mov
sbb
xor
int
ins
test
repnz
out
clc
in
mov
les
adc
sub
xchg
ja
scas
rcr
jne
inc
dec
cmp
cmps
and
test
repz
(bad)
push
cmp
call
ret
sti
sbb
cmps
xor
mov
push
fild
xchg
pop
out
or
mov
sti
inc
loope
fwait
retf
xchg
fisub
ret
sub
jns
pop
stc
push
sbb
jecxz
mov
sbb
out
push
or
adc
mov
ficomp
cmp
hlt
push
outs
mov
movs
mov
(bad)
aam
and
movs
lds
jecxz
in
jns
(bad)
cmp
pop
inc
pop
imul
test
push
mov
pop
popa
shl
scas
mov
mov
jae
enter
leave
or
imul
mov
fdiv
fidiv
shl
ret
daa
ss
iret
pop
mov
dec
icebp
jl
push
paddusb
or
cs
mov
dec
into
cdq
mov
in
jbe
in
pop
mov
aaa
pop
mov
icebp
mov
push
shr
mov
push
pop
ins
aad
and
inc
enter
push
sar
dec
pop
popf
mov
retf
mov
dec
mov
ret
inc
or
push
xchg
sbb
aam
arpl
mov
jns
push
cmp
dec
sbb
push
mov
popa
xor
shl
pop
add
icebp
fadd
and
imul
jl
lods
mov
lods
add
xor
push
aas
pop
pop
sbb
in
sbb
adc
add
mov
icebp
imul
test
mov
outs
mov
es
test
pop
(bad)
std
stos
test
call
dec
arpl
inc
(bad)
imul
sbb
in
push
retf
jbe
mov
sub
stos
or
frstor
jge
jb
push
mov
xchg
sub
or
(bad)
addr16
push
xchg
ja
mov
and
xchg
(bad)
shr
push
jge
mov
sub
inc
xchg
(bad)
mov
scas
out
push
in
dec
or
mov
jmp
add
xlat
mov
pushf
push
or
xchg
repnz
jo
pop
xchg
push
mov
mov
jns
mov
inc
popa
xor
pop
add
in
mov
iret
sub
in
and
mov
xchg
cmps
xchg
inc
(bad)
leave
(bad)
in
jno
loope
pop
mov
mov
jmp
out
int3
sbb
imul
adc
je
pop
dec
mov
sub
jno
pusha
out
adc
mov
or
xchg
mov
or
(bad)
and
js
(bad)
fld
shl
inc
lods
mov
in
imul
pop
aas
adc
shl
cld
sar
add
push
jmp
gs
es
shl
xchg
mov
pop
call
pop
jle
or
jns
push
or
aam
nop
js
fucom
mov
lods
sbb
jns
out
add
jle
xchg
(bad)
jmp
in
cmps
jb
hlt
jae
jl
ins
cmps
pop
inc
repz
dec
xor
sub
push
or
jae
fild
stos
mov
cmp
xchg
sub
out
aaa
(bad)
call
mov
sub
jbe
xor
(bad)
loopne
mov
retf
cmp
cmc
not
test
daa
jge
lods
push
push
call
pop
dec
ret
outs
sahf
xor
out
xor
mov
test
push
imul
clc
fild
mov
mov
fucomip
mov
and
pop
ins
mov
scas
aam
cmp
pop
loope
or
adc
stos
xchg
sbb
sar
lock
repz
push
mov
xor
je
sbb
sub
cmc
or
mov
out
out
out
sbb
in
fiadd
imul
sbb
iret
adc
dec
jne
mulps
push
rcr
fcmovb
xor
mov
pop
dec
cmps
jp
mov
inc
add
cmp
xlat
push
cmps
fstp
movs
shl
iret
popa
pop
ins
dec
fs
adc
jae
mov
cdq
js
cwde
scas
sub
sbb
cmc
lods
xchg
mov
inc
clc
icebp
ins
or
aas
jnp
iret
(bad)
idiv
shl
aas
and
sbb
and
sub
sbb
mov
push
xchg
xchg
loope
adc
sbb
leave
adc
xor
ficom
xor
sbb
mov
inc
popf
dec
ins
pop
mov
mov
movs
jne
mov
mov
xchg
jmp
sub
mov
stos
stos
mov
pusha
push
shl
sub
icebp
jg
and
mov
xchg
lea
jp
sbb
or
pop
xor
inc
mov
pusha
xchg
aas
int3
cmp
and
xor
jns
enter
mov
pop
or
fadd
int
loop
cmp
out
pop
in
inc
inc
pop
inc
lock
xor
pusha
xor
xor
sub
pop
nop
jbe
xor
jmp
mov
push
push
fwait
cld
fcomp
lods
outs
nop
dec
sub
leave
mov
aaa
ins
sti
hlt
outs
sbb
push
pop
pop
test
in
mov
sbb
ins
(bad)
std
add
sbb
xchg
(bad)
mov
jns
add
(bad)
or
into
bound
push
inc
xchg
mov
pop
jmp
cmp
dec
into
test
fnstcw
std
enter
push
enter
push
test
dec
loopne
adc
xor
repz
or
dec
jecxz
sub
add
mov
or
push
xlat
mov
mov
sub
xchg
or
jl
push
popf
cmps
sar
outs
inc
ss
std
xor
cmp
daa
push
pop
je
mov
stos
outs
jne
jg
jge
inc
out
or
ss
loop
test
data16
cmp
pop
out
addr16
and
inc
(bad)
scas
pop
in
pop
jmp
push
dec
into
jne
neg
imul
loope
jmp
cwde
retf
hlt
jo
and
sbb
ret
inc
retf
cwde
mov
ret
js
mov
jbe
aam
cwde
pop
xor
xchg
xchg
push
jmp
test
jle
inc
push
adc
(bad)
cmp
ficomp
mov
sbb
lea
push
dec
cmp
add
jae
icebp
xor
xchg
pop
int
jecxz
add
xor
fcom
ret
mov
lods
pusha
(bad)
xchg
psubusb
pop
sahf
aam
(bad)
mov
pusha
and
lahf
jo
cs
mov
pop
mov
mov
shr
sahf
std
push
xchg
in
adc
sub
mov
add
lea
dec
mov
and
dec
xlat
cmp
jp
cmp
adc
cmc
fstp
or
loopne
jmp
pop
sbb
mov
pop
sbb
dec
in
jle
into
iret
mov
scas
das
jo
retf
jno
mov
xor
add
and
mov
paddusw
xchg
loopne
loope
dec
(bad)
cmp
mov
mov
push
xchg
shl
sub
rol
cli
pop
lods
loope
mov
jg
rcr
or
pop
in
xor
movs
inc
xor
jmp
and
in
mov
enter
loope
repnz
jno
jae
push
mov
(bad)
push
out
pop
sub
nop
xor
adc
fnstsw
std
adc
lock
aam
maxps
xor
cmps
xchg
or
push
xor
sub
pop
jmp
sar
arpl
sub
out
or
arpl
jne
cmp
xlat
jp
jl
add
repz
(bad)
cmp
xor
mov
jb
scas
cli
xor
xchg
daa
mov
retf
lods
inc
lods
add
sub
arpl
and
cmp
aad
(bad)
pop
fs
pop
dec
or
(bad)
add
jmp
push
inc
sbb
test
jmp
enter
rol
jge
call
fldcw
call
mov
xor
push
dec
aas
imul
and
inc
aas
mov
push
mov
or
pop
cmp
lods
test
xor
int3
sahf
mov
in
test
xchg
cli
test
adc
mov
ret
jo
jmp
mov
inc
and
xor
sub
sar
or
hlt
mov
nop
pusha
jmp
inc
repnz
adc
(bad)
loopne
push
jp
mov
xchg
enter
ret
push
les
(bad)
icebp
ins
fist
pop
inc
bound
or
shr
gs
jp
leave
sbb
mov
(bad)
mov
mov
pop
push
mov
adc
dec
lods
gs
test
repz
loope
outs
in
cmp
and
sub
call
add
shl
dec
sbb
int3
adc
push
dec
jl
call
in
in
outs
dec
mov
or
mov
add
adc
pop
or
sub
ficom
retf
fild
icebp
lods
fist
leave
mov
enter
mov
mov
int
lds
adc
jno
and
push
sbb
dec
lock
shl
push
(bad)
in
es
xchg
pop
icebp
lods
mov
adc
push
sub
aaa
stos
(bad)
lock
or
pop
and
pop
gs
jg
cmps
scas
das
jmp
shr
mov
retf
or
pop
pusha
jge
fnsave
cmp
pop
push
(bad)
sbb
into
icebp
add
jp
pop
jmp
mov
je
(bad)
jmp
out
add
fisubr
imul
jnp
lods
mov
push
out
fist
sbb
mov
imul
cmps
dec
sbb
stos
icebp
lock
xor
pop
and
or
push
push
pop
xchg
push
shl
lahf
mov
mov
sub
jmp
push
fistp
in
and
fstp
dec
sbb
mov
sub
push
cmp
ss
dec
mov
jmp
movs
imul
push
call
push
mov
sbb
pop
mov
mov
cs
mov
(bad)
adc
(bad)
pop
jne
xchg
pop
in
fidivr
mov
dec
shl
inc
push
rcr
add
add
mov
adc
mov
mov
xchg
lods
cmp
sub
push
cmps
and
cmp
ss
dec
and
cwde
ficomp
aaa
cdq
iret
and
rcr
mov
push
dec
rcl
call
ins
iret
xchg
lahf
(bad)
cmc
in
out
test
push
and
pop
pop
(bad)
jecxz
pop
popa
dec
jmp
iret
push
dec
adc
lds
ss
daa
mov
push
imul
int3
clc
mov
mov
lea
add
or
fidivr
aad
mov
test
bound
mov
push
iret
fxch
xchg
sti
shl
mov
aas
and
pop
jecxz
loop
fimul
inc
add
xor
xchg
mov
cmp
retf
dec
mov
(bad)
fsubp
sub
jecxz
gs
clc
mov
xchg
sbb
daa
leave
(bad)
js
xchg
add
jnp
pop
xchg
add
div
jmp
iret
xchg
ja
adc
lds
popf
ins
sahf
push
add
into
and
mov
dec
fisub
stc
push
mov
add
in
mov
call
push
pusha
es
mov
pushf
and
xor
std
cmp
movs
out
jo
sbb
push
xor
ds
jb
cmp
sbb
outs
dec
gs
mov
test
and
shl
xchg
popa
pop
inc
mov
(bad)
jo
jns
inc
sbb
mov
fisttp
stc
cmp
pop
nop
adc
xchg
dec
retf
mov
jp
mov
and
or
inc
jo
mov
push
data16
imul
ror
imul
in
inc
or
mov
push
les
sub
jp
cdq
mov
mov
jmp
dec
mov
dec
mov
dec
loop
sbb
lods
jge
cmp
adc
xor
(bad)
fdivr
shr
ficom
xlat
ds
xor
inc
iret
addr16
sbb
mov
adc
retf
lea
lods
inc
sbb
pop
test
jb
mov
push
aad
adc
(bad)
mov
mov
xchg
xlat
jne
or
xchg
addr16
or
mov
mov
cmp
mov
in
not
js
xor
push
stc
push
jns
std
mov
pop
test
loopne
mov
js
mov
xchg
xor
sbb
bound
xor
cmp
fild
das
push
or
mov
aas
loopne
(bad)
mov
repz
dec
loope
sub
inc
std
or
sti
cmp
jecxz
xchg
stc
jp
nop
arpl
xchg
pop
cmp
loop
call
adc
rcr
sub
xlat
adc
rol
int
jae
inc
pushf
pop
sub
xchg
pop
data16
sbb
pop
mov
xor
shr
mov
pop
push
inc
scas
inc
test
pop
cdq
(bad)
mul
sub
sbb
or
bswap
bound
xor
fld
cdq
adc
xor
mov
cwde
mov
dec
in
shl
jmp
push
pop
push
cmp
jecxz
mov
pop
test
xor
adc
inc
outs
pop
lods
in
adc
cmp
repnz
pop
icebp
pop
cmp
xor
arpl
xor
leave
das
adc
imul
loop
ret
inc
cmp
and
adc
mov
test
xlat
add
ds
stos
shl
in
sub
add
mov
(bad)
xor
int3
sbb
pusha
in
mov
adc
add
retf
sub
cmp
xchg
fstp
out
mov
inc
sbb
and
aad
or
daa
push
xchg
push
and
and
mov
mov
and
in
(bad)
aas
add
aas
aas
pop
push
pusha
(bad)
cld
xor
int
adc
icebp
dec
and
jl
fs
test
popa
mov
pop
mov
pop
aam
ins
pop
fisubr
mov
sbb
mov
retf
arpl
enter
cli
es
call
dec
mov
mov
ss
out
sub
cmovnp
in
cmp
dec
call
sub
mov
xchg
clc
std
or
mov
pushaw
test
in
dec
inc
in
mov
int
or
clc
pop
and
lods
stos
mov
pop
adc
mov
mov
dec
fstp
jle
add
sub
lods
push
mov
pop
jo
inc
lock
dec
rcl
(bad)
pushf
stc
in
movs
or
retf
jo
mov
rol
add
jae
and
icebp
dec
jle
xlat
dec
mov
adc
inc
es
cmps
push
mov
dec
xchg
das
lock
arpl
and
test
mov
fld
mov
out
test
and
mov
xchg
mov
aas
lods
rcl
retf
std
sub
jg
bound
sub
int
movs
adc
sub
inc
push
dec
cld
in
std
dec
or
lahf
arpl
sbb
stos
mov
sub
jbe
inc
jns
sbb
jne
sbb
bnd
movs
in
mov
mov
pop
mov
add
mov
std
push
xor
jno
int3
or
fdivr
jo
rol
mov
pmuludq
lahf
int
fdivr
sti
fiadd
inc
mov
fwait
das
out
imul
shl
in
call
jb
fdivr
mov
hlt
fbstp
and
jbe
push
xor
cwde
mov
xor
dec
or
and
jge
mov
or
mov
xchg
jo
stos
in
mov
or
or
repz
mov
mov
test
pushf
sbb
ror
adc
loope
in
add
int3
pop
mov
inc
shl
push
cli
xlat
into
dec
inc
xor
imul
inc
xlat
loopne
in
xchg
mov
popa
jecxz
cmp
sub
loopne
clc
jmp
or
pop
loop
dec
jmp
lahf
fnstsw
sub
iret
lods
out
arpl
lahf
stos
mov
bound
ret
mov
mov
jae
cmp
inc
out
jecxz
jbe
push
xor
xchg
mov
inc
(bad)
fisttp
es
(bad)
xchg
stos
xchg
mov
dec
aas
stos
pop
mov
xor
or
jmp
repz
xor
fsubr
cmp
cmps
inc
gs
mov
js
dec
inc
jg
loop
out
hlt
sbb
cld
push
lock
dec
add
push
out
scas
imul
inc
and
hlt
sub
pop
dec
dec
aam
xchg
inc
aam
jbe
fsubp
cli
add
pop
test
outs
or
int
cmps
lods
sbb
mov
call
jecxz
inc
cmp
fisttp
mov
mov
loope
cmps
inc
cmps
scas
cmp
in
add
fiadd
inc
out
loopne
imul
and
xchg
jo
sub
shl
hlt
inc
sbb
movs
or
push
sbb
je
pop
add
and
mov
neg
retf
inc
arpl
adc
data16
out
call
lahf
sti
and
push
add
pop
inc
cmps
sub
pop
add
mov
mov
xor
or
cmp
and
jne
dec
and
arpl
push
xchg
dec
(bad)
xchg
pusha
and
add
sub
loope
cmp
mov
push
and
dec
dec
loope
and
xor
std
in
pushf
push
jge
xor
xchg
pop
inc
add
mov
imul
jg
test
inc
cmp
icebp
fwait
jecxz
out
repz
ds
test
(bad)
mov
(bad)
popf
mov
mov
mov
xor
lods
std
pop
xchg
pusha
mov
push
sahf
(bad)
fwait
loopne
push
popf
int
stc
sub
cmp
mov
xchg
xchg
ins
ret
arpl
xchg
and
sbb
int
xor
imul
jo
stc
mov
imul
in
ss
lds
ds
(bad)
cmp
neg
cmp
dec
add
xlat
adc
in
imul
not
add
push
pop
push
add
cmps
mov
pop
mov
cmp
retf
ins
pusha
out
push
mov
pop
push
add
fidiv
dec
add
mov
lods
(bad)
mov
pop
fcmovnb
mov
xchg
cld
push
nop
ds
pop
out
daa
add
fwait
inc
bound
adc
repz
mov
mov
rol
mov
and
dec
xor
les
popa
sub
ss
jb
cwde
aam
(bad)
jmp
dec
sub
cmps
push
xor
mov
adc
dec
lea
ins
pop
add
xchg
daa
ret
es
out
cwde
retf
dec
fild
cmc
(bad)
dec
dec
jge
ja
cmp
jp
cmp
push
es
nop
jp
rcr
arpl
jbe
dec
xchg
jns
mov
nop
xor
pop
aad
pushf
or
inc
arpl
test
outs
shr
dec
loopne
cs
mov
out
inc
jb
and
js
call
cmps
jno
pop
fcom
ds
pusha
movs
pusha
nop
ins
adc
arpl
mov
xor
xchg
inc
(bad)
or
fldenv
test
iret
mov
cmc
call
cmps
test
ds
pop
dec
jmp
cmp
into
push
leave
arpl
cmp
movs
sbb
ficomp
jne
sbb
adc
dec
push
or
xchg
cmp
and
mov
fist
and
mov
popa
dec
sub
mov
addr16
mov
aam
mov
add
and
cs
repz
pop
mov
cmp
jle
enter
push
add
dec
and
out
fldenv
inc
lds
xchg
out
inc
and
xor
std
xor
dec
xchg
aad
or
int3
mov
push
mov
pop
pop
loope
out
cmps
stc
sbb
outs
test
sbb
sbb
ja
cwde
js
sbb
je
mov
iret
jge
xchg
adc
sub
mov
add
push
mov
dec
in
jecxz
and
(bad)
ror
cdq
mov
stos
jbe
adc
jle
push
sti
sub
and
cwde
loope
mov
cmp
xchg
xchg
xor
sub
push
and
retf
dec
mov
(bad)
mov
inc
inc
or
cmp
cmc
pop
in
bswap
(bad)
cdq
loop
das
dec
pop
xlat
ds
jle
stos
in
mov
js
das
lahf
(bad)
into
and
pusha
daa
mov
xchg
out
or
ds
cmp
adc
jno
lods
cmps
jl
push
cmps
mov
cs
mov
aaa
push
das
lods
sbb
in
lds
jns
adc
or
in
mov
jno
fs
cmp
(bad)
test
shl
dec
xor
js
(bad)
and
adc
repnz
div
fistp
test
call
jb
cmps
test
mov
in
fiadd
mov
xlat
jp
push
sbb
mov
mov
mov
sub
add
sbb
mov
cwde
pop
push
sub
pop
movs
ret
icebp
adc
fwait
inc
xchg
mov
mov
popa
and
inc
(bad)
jmp
lods
push
mov
test
test
jmp
cmp
xchg
popa
mov
jmp
mov
ret
add
jae
xchg
popf
loop
lea
mov
clc
and
add
std
mov
xchg
jbe
xchg
cli
mov
or
retf
aam
jecxz
pushf
lock
add
retf
pop
cmp
push
mov
fimul
sbb
movs
aad
imul
cmp
dec
mov
lock
adc
fmul
cli
or
jecxz
cmps
or
clc
sbb
or
sub
call
(bad)
ret
push
push
mov
and
mov
mul
cld
stos
jo
sub
out
and
enter
or
aaa
dec
jnp
lods
scas
sbb
jo
pop
cmp
jl
test
jl
lods
or
xlat
mov
fdiv
xchg
out
mov
int
imul
mov
iret
push
aam
pop
out
inc
add
xchg
pop
adc
je
jp
xor
jg
shr
adc
push
je
cwde
mov
cwde
mov
mov
dec
jl
pop
data16
retf
out
ins
arpl
push
push
int
xchg
lock
lods
cmps
push
push
enter
lods
xchg
push
movs
pop
jbe
and
xor
and
add
sahf
mov
xor
sub
in
(bad)
sbb
jmp
push
xor
mov
retf
enter
retf
popf
fiadd
leave
(bad)
pop
(bad)
imul
dec
mov
push
and
push
leave
push
out
push
mov
or
(bad)
pop
jne
adc
in
loop
add
push
bound
push
ss
push
data16
fwait
shl
inc
pop
scas
ins
cld
inc
and
jmp
repz
adc
xor
mov
xlat
lea
pop
rcr
retf
pop
adc
push
or
cdq
pop
jmp
inc
out
jp
jmp
mov
pop
cdq
ja
out
or
test
jmp
adc
jle
popf
sbb
and
sub
test
pop
or
in
lock
inc
out
jmp
je
dec
inc
and
aaa
xchg
pop
mov
pop
pop
les
pusha
push
sub
mov
stc
cmp
into
fistp
sub
or
imul
pop
inc
and
cli
mov
add
es
out
faddp
sbb
pop
shl
dec
push
(bad)
mov
or
xor
push
inc
bound
mov
xchg
ins
push
mov
rcl
movs
call
add
fsub
fwait
shr
add
cmp
add
sbb
sbb
mov
stos
retf
sbb
mov
pop
aam
jge
sub
inc
shr
ins
push
daa
icebp
(bad)
push
sbb
mov
push
push
scas
int
xor
aad
(bad)
jmp
out
mov
jo
cmp
adc
xchg
or
adc
mov
xchg
jo
(bad)
fimul
fwait
retf
or
push
shr
sar
jno
gs
mov
lods
inc
mov
cmps
movs
shl
sbb
test
aas
xor
lds
repz
stos
add
adc
ret
loopne
mov
loope
das
int3
sbb
mov
retf
mov
loope
loopne
mov
mov
ins
jno
mov
inc
pop
dec
push
test
adc
pop
jecxz
add
daa
wbinvd
push
call
(bad)
xchg
js
sub
int3
dec
jno
push
mov
xor
popa
push
pop
pushf
mov
jge
add
js
out
mov
push
movs
iret
aad
aad
mov
std
test
push
xor
dec
dec
add
adc
push
pop
adc
ins
dec
sar
daa
repz
jns
mov
add
dec
or
mov
imul
aam
fsubr
cmps
std
pushf
mov
stos
(bad)
jp
dec
mov
inc
enter
mov
js
cmps
mov
add
jae
mov
mov
xchg
imul
sahf
pushf
xchg
mov
inc
retf
sub
dec
and
mov
push
push
jns
(bad)
sub
jp
js
add
sub
mov
(bad)
jne
jne
jp
jnp
jl
loopne
and
ins
cmp
mov
and
mov
(bad)
lea
push
movs
pop
mov
add
adc
cs
add
xchg
repnz
add
mov
pop
pushf
jge
rol
xchg
es
push
jne
les
inc
inc
imul
xor
pushf
(bad)
hlt
fwait
jo
stos
hlt
loope
dec
in
push
rol
adc
sbb
jge
adc
or
adc
ja
xchg
cmp
outs
sbb
(bad)
rcr
std
jl
call
cld
mov
xor
movs
or
and
aas
fbld
cmp
sbb
xchg
jmp
dec
mov
cmp
gs
out
cmp
mov
push
fldenv
shl
dec
retf
les
or
inc
cli
cld
addr16
add
jns
push
out
(bad)
jno
xchg
push
bnd
sbb
out
cmps
cmps
fld
mov
leave
int
adc
loop
addr16
adc
jae
xchg
mov
xchg
les
jge
mov
cli
cdq
xchg
add
jnp
sub
out
push
or
pop
cld
pop
mov
div
fmul
into
pushf
or
mov
sbb
pop
std
adc
xchg
inc
mov
sbb
(bad)
cmp
jl
in
add
inc
test
lods
imul
hlt
fucom
jnp
jnp
mov
mov
jle
dec
or
adc
(bad)
test
xchg
(bad)
jb
into
sahf
les
dec
out
mov
cwde
cmps
xchg
xchg
(bad)
enter
fist
jecxz
mov
cmp
and
xchg
pop
or
lds
dec
ss
inc
or
cmp
dec
pop
inc
ds
adc
or
loope
outs
inc
sbb
add
iret
push
dec
inc
jp
jmp
in
xchg
pop
inc
daa
js
cmp
imul
xor
lock
mov
sub
pop
mov
add
add
jb
or
inc
lahf
inc
jbe
pop
sbb
fstp
aad
and
jecxz
xchg
shl
into
aam
dec
dec
aad
es
popf
lahf
xchg
(bad)
xchg
xchg
push
mov
pop
add
shl
stos
push
xlat
or
adc
mov
dec
in
xchg
stos
add
pushf
rcl
pop
sub
sbb
in
mov
(bad)
cs
or
jae
and
mov
mov
cmc
push
ret
es
push
icebp
bound
lahf
adc
std
(bad)
jg
or
arpl
push
or
icebp
pop
out
mov
daa
jmp
outs
arpl
imul
std
hlt
jnp
xor
cmp
xor
dec
jmp
mov
stos
pop
lds
sub
lock
not
inc
ja
ret
dec
ins
pushf
sub
ficom
pop
fsub
jno
or
pop
inc
pop
mov
out
out
loope
inc
push
jle
fcomp
out
movs
xchg
or
mov
int3
in
and
cmp
cld
rol
or
jle
adc
jmp
xchg
adc
enter
(bad)
inc
and
scas
jbe
pop
out
pop
push
mov
sti
sbb
rol
mov
mov
cmp
sbb
mov
mov
inc
ret
adc
cmps
lods
popf
ficom
cmp
inc
cmp
dec
mov
int
inc
popa
cld
xchg
outs
dec
lods
and
jle
xchg
sub
das
std
cmp
je
jae
stc
addr16
jbe
jmp
lea
and
rcl
ins
sbb
enter
stos
dec
dec
xchg
dec
neg
mov
adc
xchg
jle
es
test
dec
mov
push
and
(bad)
int3
loope
mov
and
pop
push
call
iret
retf
cmp
pop
retf
lock
sbb
add
dec
jge
pop
pop
pop
js
and
sub
cwde
mov
into
push
cld
leave
test
movs
int
and
sub
das
xchg
jl
jne
les
mov
push
int3
fadd
mov
psrlw
ins
xor
and
rcr
fcom
stos
adc
jb
xchg
lock
push
sahf
scas
cwde
repz
cmp
pop
arpl
jmp
xor
(bad)
push
mov
(bad)
jp
push
xchg
sbb
pop
into
enter
imul
lahf
mov
nop
and
push
pop
or
and
mov
mov
xor
aas
int
or
push
repnz
cwde
bound
cmp
clc
mov
movs
push
in
test
jne
outs
iret
pushf
inc
loopne
repz
ins
xchg
sbb
or
and
inc
sbb
pop
dec
push
idiv
jbe
ror
gs
jae
push
arpl
dec
jns
sbb
and
push
out
repnz
ss
cmp
sbb
test
mov
ins
jmp
addr16
mov
or
mov
jmp
out
(bad)
jmp
jae
adc
jns
jle
mov
pop
inc
cli
jecxz
push
mov
sbb
imul
jp
jb
mov
pop
call
cmp
and
pop
jnp
lock
push
mov
jae
ror
aam
mov
(bad)
push
ja
dec
out
mov
test
shl
mov
push
mov
sub
jge
xchg
push
cmps
cmps
xchg
sub
loop
daa
sbb
or
cs
sub
mov
jo
push
dec
inc
mov
in
pop
(bad)
xchg
data16
push
aam
outs
mov
adc
into
push
dec
xor
pop
mov
add
add
or
test
retf
pop
inc
iret
jmp
xor
mov
adc
in
je
cmp
out
sbb
(bad)
pusha
sub
jne
rcl
int3
push
xor
push
lahf
or
jmp
fs
pushf
sub
adc
imul
cs
inc
(bad)
mov
mov
jne
rcr
mov
pop
fild
jle
loopne
test
cdq
mov
or
xchg
sbb
or
ret
push
push
enter
retf
pusha
xchg
adc
div
cs
sub
das
inc
mov
outs
mov
ins
es
add
xchg
imul
fcomp
push
inc
cmp
or
dec
mov
mov
add
jno
jno
fwait
mov
adc
add
add
in
sub
and
mov
dec
lock
add
mov
jp
sub
sbb
xor
ret
adc
push
xchg
out
lea
push
dec
fist
fisub
inc
daa
int3
repz
ja
and
mov
shl
mov
jp
xchg
sub
shl
cld
cwde
cmp
repz
pop
jge
jbe
mov
sbb
adc
in
adc
lock
and
jnp
mov
dec
cmps
mov
xor
add
and
enter
stos
js
mov
dec
ins
xchg
sub
pop
popa
(bad)
sub
pop
sti
mov
mov
hlt
test
xchg
xchg
cdq
push
shl
ret
div
imul
push
or
ret
es
dec
sbb
addr16
addr16
dec
dec
in
stos
add
es
rcl
push
pop
mov
aad
xor
ins
or
jmp
aaa
xor
clc
je
outs
sbb
mov
ins
imul
adc
xor
retf
mov
mov
aas
leave
sub
out
xor
clc
repz
aam
retf
mov
je
leave
inc
jge
adc
cmps
jno
test
jne
pop
sub
dec
repz
jmp
cld
inc
movs
or
sbb
ret
mov
dec
icebp
in
cwde
ficom
or
in
pop
out
ins
js
daa
in
out
jmp
xchg
lock
or
repnz
push
jge
cmp
test
std
call
inc
hlt
clc
jb
pusha
sbb
js
sub
call
movs
mov
inc
adc
pop
fisub
pop
repz
push
loop
and
ja
cmp
arpl
je
adc
sub
movs
leave
mov
aas
dec
mov
and
out
push
jl
aas
inc
shl
mov
je
aam
jecxz
push
fwait
mov
jmp
pop
out
fiadd
add
jae
xchg
push
fsubr
sti
les
fwait
pushf
adc
sti
add
push
ins
sbb
out
pop
xor
xor
das
outs
aam
cmp
xchg
pop
adc
aad
cmp
xchg
push
stos
push
xor
mov
mov
shr
push
cmp
pop
daa
(bad)
mov
or
cmp
fisttp
gs
lods
and
xor
pusha
inc
xchg
enter
adc
lods
stos
bound
retf
jp
std
xor
lahf
dec
jecxz
cmp
ds
scas
add
sub
add
scas
loopne
dec
popf
(bad)
dec
mov
into
pop
ja
mov
jp
jns
jp
adc
je
jl
stc
sub
das
jl
push
inc
or
fwait
and
sbb
rol
ins
aas
(bad)
xor
jne
lahf
cmp
add
(bad)
cmp
retf
retf
cmps
mov
aam
repz
addr16
mov
cmp
lods
stc
mov
pop
into
inc
sbb
mov
dec
and
gs
mov
sub
push
not
repnz
push
adc
mov
cmp
sub
sub
push
frstor
adc
imul
cmps
xlat
mov
mov
sub
cmps
popa
sti
dec
add
inc
jmp
add
adc
fnsave
xor
xchg
cmc
pop
adc
test
repz
sub
(bad)
movs
(bad)
div
ins
test
or
popf
pop
imul
inc
sub
cmp
gs
mov
and
jmp
or
(bad)
shl
outs
mov
inc
loop
into
and
push
shl
clc
xor
cmp
xor
or
test
lods
dec
cmp
push
lds
jmp
mov
sar
or
(bad)
imul
cld
or
push
mov
or
mov
cmp
add
jmp
inc
imul
xor
fmul
les
mul
mov
push
jmp
cmp
jo
stc
lea
jmp
or
cli
pushf
and
loopne
push
jmp
out
cli
test
sar
shl
mov
sbb
mov
or
push
iret
(bad)
dec
sub
inc
inc
out
push
int3
jmp
aas
ss
cmp
stc
stos
xor
popa
ins
inc
push
adc
mov
cmp
and
inc
test
and
jge
out
scas
push
cmp
mov
add
inc
ins
int
pop
rcr
push
daa
inc
out
pusha
daa
sbb
clc
cmp
ret
mov
push
xchg
push
dec
mov
test
ror
xor
mov
out
inc
and
movs
xchg
lahf
(bad)
ffree
inc
push
das
aas
jbe
push
lea
push
adc
stos
sahf
in
jb
es
push
rcpps
push
adc
or
mov
push
das
inc
add
add
test
jmp
jo
fbstp
sub
out
and
sti
mov
ss
sub
hlt
sub
push
push
add
stos
push
sub
shl
ret
stos
jp
ret
idiv
or
mov
push
dec
mov
cmc
push
stos
mov
push
mov
sbb
rcl
out
xchg
mov
enter
stos
sbb
add
push
and
int3
ins
cdq
pop
test
or
out
hlt
xchg
(bad)
call
aad
dec
mov
push
adc
(bad)
mov
xor
adc
push
sbb
mov
in
adc
fld
xor
iret
mov
cmp
jnp
scas
enter
pop
jmp
fsub
call
jmp
mov
sbb
(bad)
fnstenv
icebp
scas
fmul
stos
pop
add
inc
out
inc
in
in
fs
mov
pop
mov
cmp
cmp
repz
pop
sbb
push
fdivr
in
jbe
test
xchg
pop
ret
imul
jbe
cmp
scas
int3
cmc
leave
or
adc
mov
leavew
mov
lods
cmps
shr
(bad)
push
add
(bad)
dec
cmp
(bad)
sahf
mov
cs
xchg
or
out
jne
enter
adc
scas
lods
scas
aaa
aaa
pop
sbb
in
pop
movs
ja
iret
shl
jnp
jne
dec
aam
movs
dec
push
dec
jl
imul
push
imul
dec
inc
adc
js
pop
je
sub
(bad)
inc
addr16
retf
push
adc
mov
or
mov
sbb
rcr
or
sub
test
pusha
cdq
xchg
pushf
and
fwait
sbb
xor
popf
sub
fwait
add
in
test
sbb
das
adc
std
int3
gs
gs
cs
xor
and
scas
(bad)
push
scas
mov
fisttp
loopne
rcl
mov
dec
outs
push
jb
sbb
icebp
call
mov
adc
push
inc
dec
stc
adc
mov
dec
jecxz
or
aad
jge
lahf
pop
aad
js
and
shr
pop
clc
js
or
aaa
data16
(bad)
retf
mov
jb
xchg
lea
(bad)
adc
sbb
mov
das
pushf
mov
and
xor
xchg
jg
std
loopne
je
mov
out
xchg
sbb
(bad)
pushf
xchg
mov
mov
xor
(bad)
cmp
shr
dec
cmp
xlat
mov
and
sbb
cld
xchg
push
and
loop
mov
push
mov
jecxz
sub
lods
cmp
pop
push
push
sbb
repz
sbb
cdq
nop
xchg
inc
sub
call
xor
mov
sbb
xor
dec
and
xchg
aas
jbe
not
rol
cli
test
jg
adc
add
xor
fadd
push
je
mov
and
add
in
mov
lds
and
cmps
push
scas
or
loope
or
pop
sbb
ds
jg
dec
jne
add
stos
mov
loopne
pop
pop
dec
jmp
inc
jo
lock
jl
xchg
push
sub
popf
(bad)
jae
adc
xor
jge
lods
cld
ret
xchg
mov
out
jg
jno
inc
and
pop
daa
call
test
push
imul
out
shl
sbb
push
jo
jno
or
mov
add
enter
jge
scas
jl
stos
adc
adc
and
mov
mov
sbb
sbb
jl
pop
sub
call
xchg
jbe
or
inc
loopne
(bad)
or
pop
repz
data16
(bad)
sti
cli
addr16
pusha
jo
mov
xchg
std
jecxz
adc
xchg
shl
jmp
out
gs
out
xor
pushw
outs
bound
aad
and
jnp
fmul
jne
popa
cmps
xchg
inc
jae
push
pusha
dec
pop
ja
rcl
mov
push
push
xor
icebp
jmp
xchg
call
inc
dec
push
sbb
push
(bad)
fcom
call
jo
jns
or
or
xchg
pop
aaa
mov
aaa
xchg
inc
fmul
dec
push
daa
sub
mov
daa
sbb
or
arpl
shl
xchg
(bad)
push
sbb
mov
add
push
aam
sub
adc
adc
jns
popa
cmp
ret
lea
adc
sub
(bad)
out
sub
sbb
lods
enter
lock
loope
jg
(bad)
fnsave
push
pushf
mov
inc
push
ret
je
fld
pop
and
xor
stos
pop
(bad)
bound
xchg
pop
mov
ja
sub
jmp
popf
nop
pop
gs
rcr
fadd
push
mov
jo
cmc
ja
call
fwait
or
pop
out
xor
mul
lahf
int
out
retf
aad
imul
loop
call
(bad)
scas
mov
pop
and
pop
jae
push
mov
mov
pop
popf
mov
sub
test
sub
pop
inc
cmp
mov
or
sbb
push
daa
sub
(bad)
sbb
fcmovnbe
mov
xchg
lds
loop
xchg
xchg
jle
add
add
xchg
ss
xor
pop
jne
cdq
adc
push
ds
lds
or
mov
xor
mov
arpl
test
cmp
mov
dec
xchg
dec
pop
add
fs
mov
xchg
xor
pop
xor
add
and
ins
fidivr
cli
daa
hlt
inc
mov
jb
add
push
rol
sub
xor
dec
inc
mov
add
js
mov
cdq
aad
pop
es
out
cwde
jmp
fwait
push
dec
popf
push
cmp
jle
cli
shl
jmp
push
or
sar
mov
cwde
or
int
jno
les
xchg
xchg
aad
mov
sub
jbe
adc
rcr
enter
push
std
pushf
pop
xor
dec
jg
movs
adc
lods
adc
or
push
add
arpl
jge
add
push
or
scas
shr
push
fbstp
ret
fadd
daa
cmp
mov
mov
or
xor
(bad)
mov
scas
cld
cmp
ss
and
mov
retf
pop
dec
adc
mov
push
(bad)
sub
cmp
out
pop
lahf
js
lods
fld
fs
push
(bad)
mov
jl
iret
jmp
xchg
xchg
or
jecxz
nop
fist
push
imul
mov
cs
fdiv
lar
xor
shr
push
in
in
jbe
call
inc
xchg
les
or
mov
xor
stc
push
cmp
sbb
xchg
jecxz
stc
scas
mov
xchg
ret
mov
not
movs
ret
xchg
inc
mov
pop
push
jne
jmp
cmp
mov
push
repz
adc
inc
lea
inc
out
xchg
jle
out
dec
or
lahf
pop
das
lods
in
adc
loop
enter
mov
stos
jns
into
push
sub
jp
out
aad
scas
movs
retf
cmc
pop
xchg
(bad)
mov
out
xor
test
push
sub
lods
push
sahf
push
pop
int3
push
and
push
movs
fisub
jbe
inc
inc
dec
leave
mov
mov
pop
dec
loopne
ds
pop
inc
lods
clc
mov
mov
nop
jno
pop
pushf
push
retf
js
ss
add
test
mov
cmc
out
or
bound
ins
stos
push
inc
cmps
cmp
aam
mov
cld
fisub
xor
push
xchg
ja
pop
xchg
push
jo
sbb
mov
cs
(bad)
sbb
imul
dec
or
daa
lods
sub
push
(bad)
int3
inc
add
adc
xchg
xor
out
and
mov
call
mov
stos
jmp
ror
xchg
ss
adc
add
pop
mov
(bad)
mov
psrlw
js
lea
add
cmp
and
cld
in
dec
cli
push
pop
and
mov
mov
sub
adc
dec
out
pop
cwde
lods
mov
pop
es
pusha
xchg
jmp
shl
push
repnz
fnsave
cmp
ret
iret
xchg
xlat
adc
sbb
int3
push
retf
and
lds
es
enter
jge
cmps
inc
sbb
jbe
loopne
sub
xchg
pop
pop
movs
mov
nop
daa
mov
hlt
xchg
add
mov
mov
cs
shr
mov
pop
lds
lods
mov
inc
stos
(bad)
jp
dec
push
test
fistp
and
lahf
pop
or
les
dec
push
repz
ret
mov
xlat
sar
(bad)
outs
adc
fnsave
jp
add
sti
aaa
out
xchg
mov
sbb
add
inc
push
push
cli
retf
mov
imul
rol
dec
push
ds
adc
add
fs
sti
call
rcl
ss
inc
stos
add
xchg
xor
loope
mov
cmp
dec
push
push
inc
xchg
daa
sub
jno
cdq
xor
adc
aad
out
test
xor
std
in
xor
hlt
sbb
test
(bad)
cmps
inc
pop
ret
daa
mov
jl
mov
mov
lahf
cmp
dec
sub
movs
push
fisub
mov
jmp
add
dec
(bad)
xor
xor
dec
inc
and
jo
fwait
and
loop
fs
mov
test
pop
ror
ror
pop
dec
sbb
mov
sub
pop
aas
mov
or
cmp
push
mov
(bad)
mov
not
retf
mov
add
jb
(bad)
(bad)
in
cmc
mov
dec
lods
call
js
iret
or
in
icebp
fcom
jnp
cmp
mov
cli
cmp
push
shl
aam
iret
sub
rol
add
lea
push
pop
movs
hlt
out
cmp
dec
mov
movs
mov
test
mov
cmp
sbb
sub
test
aaa
cmp
sub
jb
cmp
inc
clc
(bad)
imul
fcomi
inc
test
or
pusha
mov
sub
dec
ja
or
popf
jmp
test
sar
vandnps
shl
sbb
jbe
jmp
outs
ret
cmc
jno
cmp
inc
pop
or
or
pop
mov
leave
popa
call
jecxz
xchg
mov
mov
mov
f2xm1
call
leave
mov
pop
popa
(bad)
out
and
call
inc
ins
sbb
ins
jmp
xor
push
and
cmps
sbb
cmp
mov
xchg
push
(bad)
pop
sub
std
loope
stc
adc
aam
mov
loope
pop
inc
mov
lods
aaa
aaa
pop
add
fcomp
jbe
(bad)
xchg
call
test
ss
mov
jle
cmp
lea
inc
stc
sbb
ins
cmp
imul
pop
sbb
lea
mov
jmp
dec
(bad)
imul
jne
jo
call
jo
dec
aaa
aam
and
sahf
dec
sbb
sbb
xchg
test
inc
or
mov
in
jecxz
leave
mov
cmc
cli
push
jno
pop
out
dec
imul
hlt
add
(bad)
ds
ret
pusha
(bad)
push
xchg
mov
int3
(bad)
cmps
mov
xchg
xchg
sub
mov
jp
mov
jnp
fcomp
inc
cmp
add
push
pop
in
sahf
jo
jg
aaa
dec
in
dec
mov
sub
mov
mov
add
loopne
popa
ins
jne
sar
pop
fwait
loop
lds
int
mov
cmp
out
push
movs
(bad)
fsub
cmps
(bad)
call
ss
ds
(bad)
loope
jnp
mov
and
pop
loope
iret
loopne
mov
cmps
aas
js
in
mov
xchg
orps
movs
sub
pop
pop
mov
inc
test
sbb
pop
push
push
test
mov
addr16
push
and
sub
outs
mov
popf
lahf
sbb
mov
adc
loopne
mov
mov
xchg
cdq
out
mov
cmp
pop
xchg
xchg
dec
push
and
movs
mov
test
mov
jle
jne
xchg
jno
outs
pop
push
dec
test
and
imul
jnp
inc
outs
xchg
lds
pop
movs
cmc
dec
jecxz
(bad)
repnz
mov
push
jns
add
dec
(bad)
adc
inc
fist
mov
jae
add
cmp
es
or
inc
pop
ficom
je
lds
sbb
clc
sub
push
lods
outs
nop
inc
mov
and
loop
(bad)
dec
push
jge
ficom
mov
dec
fsubr
imul
push
push
sar
stc
xlat
in
jnp
jp
popf
mov
jno
inc
push
inc
lods
mov
fwait
push
jmp
mov
jmp
nop
dec
arpl
(bad)
jmp
mov
xlat
(bad)
adc
jb
in
xor
out
ds
dec
push
inc
adc
outs
jmp
pop
inc
lock
adc
add
ins
cmp
sbb
sahf
lods
icebp
outs
ja
jle
test
mov
jmp
fdivr
cmp
pop
ret
fidiv
cwde
in
cwde
jp
xchg
adc
in
fldcw
sub
add
inc
sub
fstp
sbb
push
pop
mov
adc
sbb
add
call
sbb
cmp
push
daa
addr16
xlat
push
push
and
sbb
gs
(bad)
aad
adc
push
mov
push
std
jo
or
popa
das
and
xor
(bad)
xlat
sub
es
in
push
cmp
jnp
leave
mov
sub
mov
cmp
ret
xor
jecxz
mov
out
pop
repz
leave
cmp
(bad)
cld
fisttp
into
movs
or
aad
daa
jg
and
mov
je
fs
jnp
mov
adc
mov
xchg
and
je
scas
rol
loop
cmp
xchg
ss
mov
stc
(bad)
and
inc
mov
xchg
enter
adc
bound
scas
inc
push
add
aaa
xchg
loope
add
sti
test
and
cdq
movs
xor
xor
mov
add
outs
cs
mov
mov
add
or
icebp
jecxz
sub
or
icebp
dec
clc
sti
movs
popf
mov
mov
outs
fcom
loope
clc
push
sahf
int3
call
inc
leave
xchg
and
sahf
imul
cmc
pop
xlat
in
jecxz
stos
das
mov
or
adc
cld
int3
xor
lods
(bad)
ffree
cmps
push
loop
out
mov
imul
(bad)
(bad)
cwde
pop
sub
lds
cmp
hlt
cmps
cmp
imul
das
mov
test
inc
jmp
mov
fwait
(bad)
lock
jae
into
mov
into
call
ja
lea
fsub
mov
xchg
dec
jo
ficom
jmp
fcmove
add
mov
dec
jge
xchg
inc
(bad)
mov
jmp
push
aam
test
xor
icebp
rcl
adc
jns
push
cs
jg
mov
xchg
shl
and
mov
push
inc
aad
into
repz
xchg
(bad)
pusha
repnz
ins
popa
(bad)
(bad)
pusha
rcl
aad
arpl
pop
and
push
inc
imul
sbb
rcl
(bad)
pop
mov
jl
adc
pushf
pop
dec
(bad)
mov
aaa
or
setb
aad
cmp
aas
adc
sub
imul
cmp
add
pop
sub
jg
out
push
out
lahf
push
lods
xchg
cdq
sbb
sti
mov
es
in
rcr
int
loope
(bad)
and
jecxz
call
and
aad
cwde
ins
sbb
sahf
pop
movs
div
xor
xchg
push
ss
sub
push
imul
dec
mov
pop
dec
or
cli
pop
(bad)
inc
xor
jnp
inc
pop
mov
dec
adc
outs
enter
mov
clc
and
dec
cmps
lahf
mov
(bad)
jecxz
sahf
mov
fdiv
loope
in
fidiv
inc
loope
xor
jnp
push
pop
dec
dec
jne
fucomip
fwait
sahf
out
in
scas
lea
jns
push
mov
xor
aas
add
out
in
arpl
nop
pusha
push
mov
dec
jecxz
xlat
jae
jmp
retf
test
outs
scas
and
nop
fst
scas
push
xchg
inc
mov
shl
cmp
xor
xor
cmp
arpl
mov
cmp
lahf
jb
sub
and
sub
repz
mov
jp
rol
push
add
(bad)
mov
inc
test
les
js
xchg
jo
jp
pop
xchg
das
push
xchg
std
ins
out
mov
xchg
push
or
jp
jbe
mov
mov
nop
sti
push
push
aas
adc
stc
jb
in
call
jecxz
or
push
arpl
cmp
or
add
jmp
mov
out
sbb
(bad)
jmp
or
dec
fisttp
jmp
test
clc
mov
mov
and
loop
cmps
ds
repnz
call
lahf
push
mov
out
ja
pop
jo
and
js
dec
mov
pushf
jmp
sahf
xchg
sub
mov
and
mov
lea
test
(bad)
adc
data16
imul
jns
imul
xlat
add
es
fdiv
cmc
pminsw
jbe
jmp
std
inc
jge
adc
outs
pop
push
adc
les
mov
jae
dec
jmp
cmp
scas
adc
xor
jbe
lods
or
and
push
test
or
jbe
inc
or
hlt
shr
jg
pop
les
inc
xchg
jmp
sbb
push
push
jae
ret
dec
arpl
dec
add
inc
ja
not
mov
jae
xor
jl
sub
xor
sbb
or
lods
jmp
push
jne
push
imul
or
inc
js
test
(bad)
jmp
pop
dec
ins
mov
scas
jl
xor
or
pop
clc
push
popa
jnp
or
or
repz
mov
pop
in
and
inc
cmp
xor
jb
fsub
lods
mov
idiv
sub
ins
les
ret
push
ins
jb
inc
sbb
push
mov
lods
aas
jae
movs
push
sahf
pop
bnd
stc
cmp
dec
mov
(bad)
cdq
repz
cmovs
mov
jmp
or
es
call
or
shl
lods
dec
push
sub
pushf
ret
sub
jg
jg
cmp
mov
xchg
std
icebp
iret
push
pop
mov
(bad)
inc
popf
imul
mov
xchg
push
aam
cdq
jp
inc
ins
and
arpl
jne
leave
cmps
es
mov
pop
push
imul
pusha
jne
mov
mov
sbb
int3
or
ss
les
add
sub
test
call
aaa
fs
retf
ret
mov
outs
jne
jbe
in
mov
es
gs
imul
or
xor
push
inc
or
je
scas
adc
push
cmp
mov
out
jne
mov
jno
dec
push
push
icebp
push
mov
xchg
js
in
cmp
sub
rcr
in
add
sbb
mov
lahf
(bad)
mov
cmp
cmp
cmps
ins
test
fs
fwait
test
sbb
in
sti
mov
or
dec
ret
scas
mov
push
sub
fwait
push
mov
xor
jae
test
ret
out
push
jb
add
test
imul
add
dec
mov
gs
fcomip
rol
in
and
enter
movs
movs
inc
iret
clc
neg
mov
adc
je
daa
jnp
push
test
sbb
dec
xor
inc
loope
out
in
pop
pop
pop
and
and
jl
and
push
mov
ja
jp
scas
in
icebp
push
fldenv
in
into
push
adc
pop
xor
loop
sar
xchg
xchg
fbstp
jmp
and
arpl
inc
in
repz
sbb
jge
mul
stos
sub
push
cwde
or
stos
cmps
mov
mov
and
jmp
or
icebp
mov
movs
jmp
cli
push
inc
and
cli
shr
sar
fnstenv
out
ds
jmp
cmp
jl
ins
push
and
cmp
and
inc
adc
scas
inc
test
add
or
push
lahf
cld
push
sahf
add
test
add
jmp
cli
sbb
jg
out
leave
(bad)
push
(bad)
push
retf
test
sub
xor
inc
ds
mov
xlat
scas
mov
mov
pop
pushf
pop
mov
popf
fsubr
pop
mov
pop
or
fld
sbb
rcl
ja
sbb
lds
cmp
inc
and
retf
jo
inc
and
or
or
mov
cmc
xchg
js
pop
lea
inc
push
jp
out
or
dec
xchg
and
test
dec
in
test
inc
pop
sbb
or
and
out
cwde
sub
push
mov
outs
mov
mov
imul
les
jns
bound
sub
sub
sub
push
dec
sbb
cmp
sub
data16
add
out
add
pop
xor
mov
and
ror
jge
call
and
cmc
std
jbe
icebp
test
retf
cmps
sbb
lock
retf
or
push
sub
arpl
and
push
dec
sbb
mov
mov
jae
in
into
jbe
scas
push
call
push
xchg
xchg
sub
clc
adc
scas
mov
add
adc
push
mov
dec
mov
int3
push
jmp
into
mov
scas
out
loopne
sahf
push
add
cmp
sub
adc
out
mov
rol
popf
iret
adc
push
lahf
cmp
or
xor
loop
repz
(bad)
cli
test
cmp
cmp
idiv
scas
xchg
not
fdivr
sbb
sbb
popa
ja
mov
ja
xor
int3
inc
pop
mov
sub
mov
mov
fldcw
fstp
call
out
cmp
arpl
jge
mov
add
xchg
xchg
cmc
ficom
dec
rcl
cmp
stos
lea
mov
or
pop
jecxz
test
les
sub
lds
ins
in
cmp
pop
or
or
popf
out
push
sub
cld
and
add
sbb
or
jbe
cdq
pop
repz
pop
cmps
sbb
clc
retf
cmps
xchg
jg
scas
imul
sbb
lds
test
into
and
xchg
dec
ret
jae
pop
jmp
fld
pop
adc
adc
lock
xchg
test
iret
sahf
pop
push
(bad)
popf
mov
cwde
fisubr
xor
inc
pop
mov
dec
add
ss
fstp
inc
adc
dec
cmp
rcr
jnp
push
dec
or
push
jge
ins
mov
mov
add
rcr
arpl
adc
lds
outs
into
scas
ja
std
in
fwait
jo
fist
inc
push
out
mov
mov
and
xchg
(bad)
mov
jge
mov
adc
repnz
inc
inc
xchg
xor
mov
xchg
shr
or
sub
jg
(bad)
outs
ret
cmps
imul
xor
mov
in
repnz
mov
pop
or
and
mov
dec
enter
add
cli
mov
cld
out
ret
dec
xor
sar
shl
cwde
adc
in
daa
pop
push
das
iret
inc
ss
mov
call
push
add
fdiv
pop
push
pop
cli
hlt
mov
sbb
jecxz
aas
jns
inc
sti
call
test
and
pop
mov
jg
in
push
fwait
jb
adc
repnz
fist
sahf
push
inc
in
in
sub
jmp
loopne
mov
loop
outs
loop
or
and
push
add
sbb
push
push
inc
pop
and
xchg
adc
jle
add
icebp
fstp
add
scas
(bad)
cdq
sbb
xor
dec
xchg
shr
sub
sbb
imul
push
and
push
cdq
jbe
inc
mov
jbe
push
push
lea
jb
xor
or
les
idiv
in
daa
xlat
jo
sub
jle
mov
jecxz
cmps
ss
fwait
jle
stc
cmp
out
push
shl
jo
sub
jno
fsubr
sub
push
adc
or
inc
xchg
and
test
es
retf
fisttp
mov
jb
lods
pop
add
pop
mov
retf
addr16
adc
push
pop
dec
sbb
jl
mov
test
int
shr
xor
xchg
sub
sub
jecxz
xor
jnp
add
pop
xlat
pop
push
xchg
cld
das
jmp
ret
outs
pmulhw
cmp
fcomp
scas
pusha
mov
sti
dec
sbb
inc
imul
ss
cli
out
and
test
test
fld
aam
shr
push
xor
xor
jg
(bad)
mov
mov
push
inc
fucomi
adc
shl
mov
std
iret
mov
enter
jle
cmp
fsub
ds
repz
inc
lahf
xchg
cmp
adc
out
cmp
inc
add
xchg
push
push
and
call
push
adc
stos
jecxz
pop
mov
pop
and
retf
xchg
(bad)
jge
push
cwde
and
inc
add
cli
call
lahf
lods
scas
dec
mov
fst
sar
xchg
jns
mov
dec
mov
sahf
popf
push
int
aas
ror
sbb
iret
cld
les
jg
out
outs
in
jmp
out
test
stc
xor
add
push
xor
lods
fsubr
push
daa
cli
(bad)
lahf
outs
mov
push
dec
scas
push
(bad)
adc
into
iret
cmps
test
xchg
mov
jns
repnz
repz
scas
jecxz
pop
mov
fcmovu
sub
arpl
mov
jns
stos
mov
and
sbb
icebp
jnp
test
ror
hlt
mov
mov
cmp
pop
aad
push
xchg
data16
xlat
rol
cli
mov
ret
cli
or
dec
ret
fimul
call
shl
retf
lods
or
and
adc
push
leave
in
jecxz
jne
out
cmps
sub
push
test
jne
mov
aam
nop
adc
push
pop
mov
jge
mov
or
jnp
adc
leave
xor
(bad)
jno
shr
cdq
push
loope
ret
retf
aaa
adc
addr16
add
sbb
call
es
cmp
cwde
mov
cs
and
mov
adc
icebp
into
mov
js
mov
or
xchg
and
push
xor
mov
and
das
and
ss
inc
push
js
std
cwde
call
jb
jg
sbb
arpl
dec
arpl
inc
push
cmps
mov
sbb
or
mov
movs
inc
dec
dec
mov
sbb
mov
jecxz
pop
and
arpl
xor
xor
and
dec
sbb
les
xchg
sub
cmp
test
bound
mov
cli
pop
adc
mov
xor
and
fldcw
ss
je
adc
pop
iret
and
push
jno
push
adc
call
test
or
(bad)
loop
movs
test
or
mov
and
hlt
and
jg
sbb
daa
rcl
dec
pop
mov
repz
ror
aas
xor
push
and
shl
es
pop
add
test
hlt
and
and
push
cvttps2pi
sahf
repz
cmp
je
inc
int
outs
ins
dec
sub
cmp
mov
sub
jle
or
jmp
dec
cmps
xchg
ret
jmp
fbld
pop
cmp
add
cmp
add
lock
icebp
xchg
jecxz
sti
pop
les
add
xchg
jb
mov
pop
xchg
mov
movs
mov
dec
push
adc
mov
or
sbb
xchg
pop
ss
arpl
sub
(bad)
jecxz
sbb
push
cmp
add
or
fwait
or
fidiv
sub
lods
and
pop
stos
test
das
hlt
mov
(bad)
push
rcl
push
sbb
lods
fdiv
out
mov
sbb
mov
adc
(bad)
dec
cmp
stos
les
adc
and
jbe
pminsw
loop
mov
or
idiv
pop
aam
mov
jecxz
xchg
cmp
push
sbb
jp
mov
dec
cdq
gs
add
shl
xchg
push
(bad)
icebp
inc
dec
cmp
aaa
(bad)
addr16
xchg
cmp
or
aam
pop
dec
mov
lahf
inc
popa
cwde
sbb
cs
repz
stos
cmp
xchg
pop
mov
daa
push
ror
sub
mov
out
cmp
or
cmp
push
fisub
in
mov
mov
adc
fmul
scas
push
xchg
cli
cmp
pop
fdivr
mov
mov
popf
pop
mov
pop
jecxz
daa
sti
repz
ins
push
sub
or
dec
or
jge
ss
pop
imul
and
imul
jno
icebp
retf
ins
in
or
mov
mov
(bad)
mov
xor
mov
sub
rcr
shl
es
ror
sub
dec
lock
jmp
ja
cmp
sbb
sbb
ror
fsubr
cmps
xor
adc
mov
loopne
dec
mov
jmp
add
sub
push
(bad)
in
lahf
cmps
out
xchg
test
stos
loopne
push
enter
xchg
adc
loop
daa
ror
push
push
bound
lahf
cmc
iret
mov
aam
pushf
inc
js
inc
jmp
mov
mov
(bad)
idiv
mov
loop
mov
inc
mov
jg
aad
in
stos
add
jae
(bad)
fwait
jg
fcomp
cmp
in
or
inc
dec
outs
clc
mov
adc
and
xor
out
retf
mov
icebp
adc
inc
lods
and
clc
rol
sub
in
jo
adc
in
leave
and
ins
xchg
adc
enter
xor
push
jg
pop
sbb
(bad)
jnp
jnp
sub
inc
je
mov
jno
xchg
mov
sub
mov
aaa
ds
stos
shr
(bad)
sub
adc
aaa
dec
mov
pop
sbb
jb
sub
pop
jge
adc
dec
mov
call
mov
xchg
cmps
xchg
leave
rol
imul
push
mov
lahf
cmp
mov
push
jmp
pop
daa
mov
mov
ret
(bad)
std
mov
mov
dec
and
hlt
xchg
xor
fimul
pop
sub
dec
cmc
xchg
inc
ret
scas
cld
and
xchg
es
and
cld
jne
popf
cmp
lahf
std
or
jne
push
(bad)
cdq
gs
loop
sti
xor
bound
jp
add
cmps
fdivr
lea
sub
push
mov
mov
xor
sub
(bad)
mov
sahf
adc
fld
imul
and
fdiv
dec
pusha
ret
call
xor
mov
test
dec
lea
jb
stos
retf
push
ror
or
int
addr16
lock
fild
pop
mov
cmp
or
xor
fwait
(bad)
cmps
jo
xor
inc
mov
sbb
std
add
pop
test
test
cwde
mov
lahf
push
mov
pop
pop
jmpw
adc
adc
stc
cs
fisub
xchg
jb
sbb
pop
shl
sar
movs
ffree
and
or
js
into
jnp
mov
aaa
mov
jmp
aas
push
repnz
scas
aaa
(bad)
out
and
add
mov
fst
inc
jg
cmp
sbb
sub
sbb
ror
xchg
aas
rol
sbb
mov
mov
aaa
push
push
push
adc
cmc
dec
push
int3
jg
ins
fdivr
mov
jp
pop
sar
inc
icebp
shl
sbb
mov
scas
pushf
lds
sub
call
and
add
jg
(bad)
std
int3
lods
push
adc
mov
or
and
xchg
inc
fwait
out
add
add
and
sub
out
fistp
lods
sub
out
push
jbe
jne
cmp
cmps
dec
ss
or
dec
inc
inc
pop
xor
mov
and
dec
adc
and
icebp
inc
jge
inc
mov
jno
ss
push
push
aas
and
pop
shrd
mov
mov
jge
hlt
adc
stc
mov
or
sub
mov
ins
int
(bad)
pop
aad
sub
inc
push
cmp
sub
sub
inc
jb
movs
sbb
test
call
inc
retf
and
aas
inc
xchg
push
arpl
jnp
outs
xchg
das
jbe
add
add
pop
xor
inc
cwde
fsubr
or
scas
jl
mov
xor
jp
adc
and
sahf
ror
ins
loope
xchg
repz
in
and
sbb
jbe
out
push
adc
mov
sub
in
loop
mov
aad
lahf
sub
mov
push
hlt
mov
and
jecxz
pop
out
loop
cmp
jmp
add
aas
or
jae
retf
mov
jb
lock
mov
pop
fisttp
loope
rcl
and
cld
mov
test
ret
cmp
(bad)
stc
fcomp
sar
cmp
imul
inc
push
lods
pop
es
xchg
in
dec
std
into
test
sub
out
sub
inc
(bad)
fiadd
inc
jne
sbb
fwait
push
jecxz
cdq
push
pop
mov
push
mov
cmp
cli
push
out
repnz
test
or
jo
fadd
cmps
cmp
inc
mov
adc
mov
xadd
sbb
jmp
and
ja
aas
inc
and
push
stos
inc
call
xchg
cmps
push
lods
xchg
js
sbb
pop
shr
cmp
iret
aad
fisttp
and
or
push
ret
int3
xchg
add
ins
movs
lahf
imul
shr
pop
lods
sbb
mov
pop
aam
jnp
mov
push
pop
mov
push
mov
push
stos
ret
inc
mov
pop
xchg
in
cdq
cmc
and
lahf
jb
bound
sbb
loope
adc
je
mov
cmp
pop
push
retf
xchg
push
inc
sbb
add
dec
xor
iret
addr16
(bad)
xlat
sbb
jle
repz
ss
sub
cwde
leave
and
mov
inc
adc
shr
pop
mov
sbb
push
cdq
mov
xchg
adc
jge
or
out
jbe
jae
es
popf
adc
mov
arpl
jo
sbb
xor
adc
push
aaa
mov
pusha
xchg
fdiv
stos
pop
or
(bad)
pop
icebp
cmp
inc
push
cs
mov
jo
lahf
imul
pusha
loop
popf
push
pushf
mov
jns
or
into
mov
or
sub
mov
mov
inc
stos
scas
(bad)
les
pop
jp
jns
dec
and
dec
mov
movs
loop
xor
pop
stos
dec
xchg
pusha
outs
imul
jns
rol
mov
sbb
ja
jne
int3
not
or
jecxz
xor
mov
mov
xchg
adc
aas
or
nop
aaa
fwait
pusha
ret
pop
xor
inc
arpl
mov
jb
inc
and
mov
mov
push
lea
rol
clc
push
adc
(bad)
cmc
xlat
std
call
bound
dec
outs
push
jne
jns
xlat
aaa
cmp
scas
ins
pop
addr16
adc
es
adc
rol
std
push
mov
aaa
arpl
ds
dec
push
push
cld
jmp
xchg
or
pop
adc
rcr
test
dec
loop
cmp
mov
aaa
fwait
jmp
(bad)
sub
pop
jge
sbb
adc
pusha
pop
repz
imul
inc
xor
retf
and
fcom
xor
and
adc
pop
test
bnd
adc
add
cld
mov
retf
int3
mov
stos
xchg
or
test
pop
xor
dec
mov
cld
push
push
js
aad
pop
pushf
or
(bad)
sti
mov
ficom
sahf
mov
movs
jle
fsub
das
adc
inc
or
push
jb
aaa
push
retf
jne
arpl
jbe
mov
sub
call
adc
outs
addr16
retf
or
jbe
loop
retf
fwait
adc
push
sbb
pop
push
cwde
and
data16
push
and
sbb
xchg
out
push
popa
clc
or
push
push
dec
adc
lds
sbb
es
mov
cs
mov
mov
sti
loop
stos
or
push
jge
push
add
test
in
ins
and
mov
(bad)
xchg
aam
and
pop
dec
cmps
rcr
pop
xlat
cdq
sbb
add
ss
xor
lock
out
xchg
movs
push
push
je
cli
mov
fldcw
je
inc
pop
loope
daa
jl
adc
mov
out
mov
lods
fmul
dec
mov
mov
xchg
dec
cmp
cmp
outs
fidivr
cdq
imul
lds
aam
push
jmp
jge
cmp
rsm
leave
push
imul
push
mov
leave
imul
cli
jge
out
jns
mov
pop
mov
sub
push
(bad)
jecxz
into
mov
sbb
call
dec
fadd
pop
int
daa
cvtdq2ps
dec
std
sbb
sub
jo
adc
push
test
iret
xchg
jne
sub
adc
dec
pop
xor
xchg
enter
cld
mov
sub
arpl
cwde
jecxz
arpl
pop
int3
mov
xchg
jmp
in
(bad)
dec
xchg
je
repz
das
inc
(bad)
fistp
in
sub
pop
mov
cmp
fst
and
addr16
mov
sub
sbb
popf
mov
pop
sub
js
and
xchg
repz
push
ret
mov
mov
mov
scas
xchg
fiadd
push
sahf
jecxz
adc
add
pop
bound
push
fcmovbe
arpl
out
sub
dec
mov
js
jns
shr
aas
lea
addr16
call
mov
jp
push
dec
add
(bad)
cli
imul
imul
daa
jae
loop
inc
ret
adc
sub
adc
shr
cmp
das
xchg
movs
xchg
hlt
sbb
test
inc
ret
ror
mov
movs
int
fwait
retf
mov
outs
adc
mov
sbb
clc
cmp
and
icebp
mov
or
jae
je
or
popa
hlt
jmp
or
(bad)
(bad)
fsubr
cmp
push
adc
mov
or
add
xchg
xchg
sar
jmp
movs
inc
inc
mov
movs
cmp
add
mov
pop
sti
mov
or
pop
dec
pusha
xor
push
ins
mov
add
jmp
lahf
retf
lds
icebp
jp
pop
test
in
xor
sbb
jae
push
adc
loope
jmp
pop
bound
jecxz
cs
das
mov
(bad)
pop
bound
rol
inc
add
pop
outs
mov
int
out
push
xchg
mov
fmul
in
sub
pop
or
int3
mov
push
ret
push
xchg
jecxz
cmp
sub
mov
sbb
das
mov
push
dec
cmps
cmp
jmp
sti
xor
in
ds
cmp
test
and
adc
inc
xchg
dec
cdq
mov
cmp
pusha
pop
es
mov
ret
push
in
mov
fs
fwait
lods
mov
mov
xor
loop
fmul
mov
add
or
(bad)
xchg
xchg
inc
icebp
dec
movs
adc
cwde
nop
adc
or
shl
dec
push
xor
bound
retf
add
imul
adc
lahf
inc
rol
jl
lods
xor
fwait
push
adc
retf
test
popa
addr16
popa
js
es
xor
das
push
add
sub
sbb
in
lea
sbb
push
repnz
pop
inc
or
loop
or
mov
popa
mov
adc
retf
inc
cli
cmps
xor
aam
inc
leave
cmps
repnz
mov
or
jle
out
daa
sbb
in
in
popf
jg
in
or
push
sub
adc
imul
push
mov
cs
mov
jp
inc
sbb
cmps
cld
xchg
mul
inc
imul
sbb
push
sbb
push
dec
icebp
cmp
pop
xor
pop
push
mov
jbe
sbb
int3
sub
pop
int
jae
pop
imul
sbb
push
push
adc
xor
and
mov
push
sub
cmc
add
jo
call
push
adc
jge
int3
lods
aas
in
dec
in
push
div
fcmovu
and
movs
std
push
dec
push
sbb
dec
das
call
pop
loope
call
cmp
into
and
into
mov
sahf
cli
daa
fmul
jp
leave
loopne
dec
sar
shr
ret
repnz
add
ror
es
pop
and
dec
pop
mov
loop
nop
xor
adc
jg
or
das
(bad)
mov
xlat
jmp
loop
(bad)
jmp
pop
out
das
xor
cs
loope
fimul
inc
mov
push
test
dec
push
data16
pop
or
xchg
dec
inc
mov
mov
or
push
cmps
sub
retf
and
popa
add
(bad)
push
mov
aas
cmps
repnz
(bad)
fbstp
clc
add
add
arpl
and
xlat
mov
mov
mov
stc
jmp
add
sbb
mov
xor
and
jmp
cmc
stos
repnz
pop
fidivr
(bad)
xchg
pop
fcom
pop
push
adc
xor
pop
dec
jg
jb
jbe
ret
inc
sub
mov
inc
fimul
fst
dec
pop
hlt
push
arpl
xchg
popa
(bad)
movs
dec
cmps
retf
addr16
jecxz
and
imul
sbb
ins
inc
or
xchg
add
mov
std
push
imul
inc
out
dec
xchg
pop
ss
in
mov
js
mov
imul
and
cmp
push
pop
mov
lods
lahf
fisub
push
inc
scas
jp
or
inc
inc
xor
loopne
js
addr16
xchg
pop
jo
sbb
jmp
bound
sbb
mov
jae
and
push
test
dec
mov
adc
(bad)
outs
jae
aas
jo
sahf
add
adc
in
xor
dec
jge
retf
jnp
outs
cwde
and
addr16
mov
movs
das
sub
pop
movsldup
dec
adc
sub
add
cdq
jmp
inc
jbe
ja
dec
push
dec
mov
cld
and
leave
mov
data16
add
dec
repz
pop
stos
ret
adc
sub
out
(bad)
arpl
ja
in
sti
rcr
sub
mov
mov
mov
cli
arpl
inc
and
mov
repnz
out
mov
push
ret
movs
sub
loopne
pop
or
add
aam
dec
leave
sbb
fwait
scas
pop
jnp
mov
cli
mov
add
shl
lods
movs
jns
adc
inc
outs
dec
add
mov
test
mov
(bad)
lds
dec
xor
adc
inc
mov
addr16
sub
ss
mov
jbe
mov
mov
pop
xchg
cs
loopne
in
in
pushw
cdq
lea
ret
xor
and
jmp
gs
fwait
jne
xchg
dec
mov
sbb
xor
add
inc
inc
jnp
xor
lock
xchg
cmp
sbb
sub
out
pop
jo
aaa
jnp
(bad)
mov
dec
aad
adc
sbb
stos
mov
rcr
in
add
inc
adc
dec
and
push
mov
xchg
lahf
outs
dec
cmc
leave
mov
cmp
jnp
push
push
push
stc
xchg
lods
pop
pop
push
jb
add
xchg
push
sbb
mov
jbe
adc
hlt
popa
pop
and
mov
xchg
cmps
mov
ins
xchg
pop
aam
std
div
jecxz
cmp
lds
mov
leave
mov
mov
and
test
or
stos
stc
push
add
(bad)
mov
mov
sahf
mov
sbb
jae
and
mov
fs
mov
sar
test
rcl
cmp
scas
mov
sub
adc
inc
add
push
popa
fwait
enter
sbb
dec
ror
shl
jp
fwait
and
cmps
dec
xor
les
bound
jmp
jecxz
fist
or
cmps
mov
arpl
ror
and
xor
jecxz
mov
mov
in
dec
bound
int
and
adc
iret
pop
(bad)
aad
imul
imul
jg
jl
rcr
mov
cmp
or
inc
mov
fild
addr16
jp
jle
aas
popa
push
jmp
mov
add
stc
dec
(bad)
dec
cmc
xor
icebp
cs
out
call
ins
dec
xor
cmp
das
aad
int
mov
imul
fimul
(bad)
xchg
pop
jmp
out
mov
addr16
dec
fisttp
xor
inc
inc
jecxz
sbb
fistp
inc
cmp
int
scas
mov
inc
jge
mov
jae
mov
mov
dec
xchg
out
push
ret
fs
push
mov
into
push
jecxz
mov
neg
jmp
cmp
dec
push
jmp
hlt
mov
ins
sbb
inc
pop
xchg
stc
scas
cmp
sbb
outs
xor
mov
pop
and
fldcw
outs
bound
xchg
retf
xchg
pop
in
icebp
sbb
ret
fild
and
addr16
sbb
pop
inc
es
cld
je
(bad)
xchg
inc
sbb
adc
add
scas
mov
hlt
xor
movs
in
inc
push
es
in
push
(bad)
in
sub
or
(bad)
mov
je
push
sub
mov
jno
sbb
push
pop
jno
aad
cli
push
outs
ins
jnp
repz
pop
pop
inc
in
ja
in
bound
lods
fs
es
jmp
mov
or
ja
mov
enter
test
push
fistp
(bad)
pop
loop
or
pop
push
mov
mov
mov
fadd
mov
imul
and
xchg
pop
or
xchg
xor
push
sbb
push
sbb
pop
dec
cli
push
cli
lds
ins
or
mov
sbb
sub
not
inc
iret
clc
pop
retf
cli
adc
sbb
mov
mov
gs
jne
pop
mov
test
test
xor
ret
sub
div
aas
mov
jns
xor
push
xchg
lock
xor
pop
sub
sbb
sub
jb
adc
addr16
xor
ins
(bad)
imul
mov
fdivrp
xor
inc
cmps
push
dec
jg
jns
mov
push
cmp
loopne
jmp
neg
cs
retf
ret
push
sub
int3
push
jmp
cmp
xor
jg
mov
mov
lds
test
add
or
push
std
pop
out
push
out
sbb
fwait
adc
and
push
dec
cmp
les
shl
cli
cli
neg
xchg
pop
int3
stc
test
inc
test
sar
pop
jge
ret
aas
sbb
adc
inc
mov
pop
idiv
cdq
add
pop
push
mov
fwait
add
jg
mov
cmps
push
push
pop
mov
push
ins
loope
test
cli
adc
loope
push
retf
mov
test
mov
mov
jmp
ins
fadd
fs
les
fs
inc
or
push
xchg
adc
(bad)
add
jno
fld
into
shl
push
jge
pop
retf
mov
jno
jmp
jp
lock
adc
and
fwait
push
or
aad
jmp
int
mov
sub
sbb
jbe
mov
and
imul
gs
gs
mov
jle
xchg
add
adc
jmp
xchg
ins
mov
scas
mov
(bad)
cli
push
xor
adc
pop
xor
in
jmp
pop
push
iret
pop
pop
js
jne
xchg
lea
mov
jmp
mov
inc
int
or
fldcw
pushf
cli
(bad)
in
mov
and
dec
int3
cli
repz
push
cmp
xor
loope
mov
(bad)
jle
xor
mov
out
lahf
mov
add
dec
push
not
stos
mov
nop
retf
sahf
and
jge
icebp
jg
hlt
push
dec
rol
addr16
ins
mov
dec
and
test
mov
xchg
test
in
fs
cmc
inc
dec
cmp
adc
ins
jmp
mov
icebp
lods
xchg
pop
mov
pop
shr
adc
(bad)
sbb
into
add
mov
in
mov
gs
in
mov
int
(bad)
mov
ret
idiv
scas
cmps
pop
mul
add
sub
in
adc
dec
ret
pushf
mov
inc
popf
xor
dec
sub
mov
imul
jb
fdiv
pop
retf
je
outs
fcomp
aam
imul
jae
adc
mov
dec
sub
mov
enter
ds
mov
out
jle
cld
arpl
adc
inc
arpl
mov
xchg
leave
pop
mov
pop
loop
cwde
fwait
jg
fsub
imul
adc
jg
addr16
stc
mov
inc
in
push
mov
jbe
add
cmp
jnp
dec
inc
and
dec
jmp
shr
adc
ret
in
fisubr
inc
sub
sub
pmulhuw
cmp
stos
pop
std
pop
arpl
test
push
adc
pop
sub
and
xchg
(bad)
adc
movs
das
fwait
fs
daa
jo
inc
(bad)
jp
(bad)
in
push
inc
push
ja
lods
imul
test
pop
jns
jb
ja
xor
adc
scas
clc
push
lea
inc
adc
adc
cmp
test
xchg
cmp
nop
add
dec
add
cmc
popf
in
sahf
xor
adc
push
inc
inc
inc
sti
and
je
push
cwde
xchg
pop
adc
rcr
jns
pop
jmp
es
int
inc
bound
push
push
in
xchg
lock
repnz
jmp
add
dec
lock
and
xor
push
dec
jns
jns
lods
xchg
or
adc
(bad)
popa
dec
cmp
fdivrp
xchg
mov
test
jle
les
sub
sbb
inc
sbb
stos
mul
pop
jns
adc
rcl
sub
or
js
sub
loope
inc
call
jns
cli
mov
aas
xchg
in
mov
nop
push
ror
mov
ja
fcomp
pop
les
outs
dec
jmp
mov
mov
out
jp
pop
dec
loop
hlt
dec
fs
inc
adc
or
mov
lds
retf
xor
ret
mov
lods
sub
js
or
mov
in
pop
inc
and
std
sbb
jne
cli
inc
pop
jbe
xor
jl
or
xor
and
icebp
test
(bad)
sub
pop
lods
adc
pop
(bad)
repnz
neg
mov
pop
scas
daa
lds
mov
xchg
dec
leave
test
aaa
and
inc
inc
add
xchg
pop
inc
repz
retf
pop
jmp
inc
cdq
xchg
(bad)
mov
js
setg
cmp
jmp
(bad)
adc
aas
and
arpl
out
sub
bswap
pop
ret
push
repnz
lods
outs
sbb
mov
mov
out
add
ss
push
repnz
push
das
(bad)
mov
call
call
rol
ins
cld
cli
fstp
push
shl
sar
xor
bound
(bad)
(bad)
jg
push
jle
pop
ds
mov
mov
pusha
popf
sub
xor
in
fbld
cli
dec
fldenv
lods
mov
in
movs
mov
test
loope
outs
mov
lods
cmp
or
shl
fldlg2
cmp
cmps
sub
push
push
mov
sbb
or
loop
push
jp
inc
je
rcr
ror
jnp
inc
scas
iret
mov
js
inc
jmp
std
in
movs
cmp
push
jne
mov
jbe
fild
cs
idiv
dec
cld
clc
lahf
jecxz
inc
jg
and
mov
xchg
sub
bnd
push
repnz
movs
in
outs
xor
mov
lods
cld
frstor
pop
test
and
fld
xor
in
popf
(bad)
leave
and
or
sub
or
lds
es
or
arpl
aas
cld
mov
les
cmp
repz
into
std
in
aas
and
movs
mov
arpl
inc
(bad)
pushf
xor
xor
fidivr
xchg
add
pop
or
clc
lea
addr16
fistp
dec
loop
movs
retw
test
fld
aam
in
and
fbstp
cli
test
push
sbb
aad
popf
and
je
(bad)
xlat
add
xor
jmp
bnd
ds
push
call
pop
xor
mov
add
test
fbld
and
jecxz
(bad)
jl
jmp
dec
mov
adc
std
ret
fst
adc
sbb
push
cmc
cmps
ffree
popa
jl
imul
loop
inc
sti
add
mov
xor
xlat
in
inc
les
mov
jecxz
jbe
push
cmp
lock
in
mov
sbb
mov
push
aas
jns
cwde
inc
dec
xor
xchg
lods
sbb
fisttp
call
fsubrp
jb
scas
adc
xchg
fs
cli
add
xchg
shr
pop
and
jg
outs
adc
and
pop
pop
sub
dec
pop
mov
mov
call
and
ret
dec
push
adc
hlt
enter
mov
mov
les
in
icebp
mov
mov
test
and
lahf
mov
clc
pop
scas
cmp
add
or
dec
out
sub
push
ret
aas
xchg
xor
sbb
outs
jmp
mov
imul
inc
push
mov
repz
out
xchg
add
push
ror
add
mov
adc
scas
jmp
inc
mov
lods
arpl
cmp
sbb
mov
mov
dec
popa
fdiv
call
mov
repz
sahf
or
push
repz
sub
mov
je
mov
cmp
shl
sbb
pop
imul
mov
pop
pop
push
jmp
test
inc
and
ins
(bad)
retf
xchg
jne
aaa
lds
loop
fwait
scas
retf
mov
and
pop
dec
adc
sbb
add
mov
nop
dec
mov
cli
dec
popa
call
sbb
js
xor
mov
cmp
cmp
push
(bad)
xchg
xor
out
cmp
mov
sbb
clc
sahf
and
mov
(bad)
int
leave
sbb
ss
cmp
pop
cmp
jg
pop
sbb
push
mov
add
jno
in
fstp
scas
adc
addr16
xlat
mov
cld
adc
aas
and
dec
and
jne
sahf
mov
jp
les
cmp
call
xchg
pop
and
js
or
das
int3
out
nop
pop
movs
xchg
jl
push
add
cld
and
adc
outs
cmp
ja
jnp
popa
ins
push
les
mov
aas
and
dec
bound
retf
mov
div
daa
cdq
ss
dec
inc
cmps
(bad)
sahf
pop
jle
xor
out
out
fistp
and
adc
(bad)
out
icebp
push
mov
sub
push
leave
imul
push
mov
pop
mov
in
sbb
adc
ss
xor
cmc
jmp
mov
clc
shr
mov
lds
dec
test
out
mov
out
cmp
ins
fidiv
scas
ins
jecxz
push
sbb
xor
push
imul
jg
jo
ja
vaddps
scas
add
or
mov
dec
adc
and
mov
mov
out
push
jp
xchg
push
cmp
jmp
sub
pop
jge
repz
aad
ins
xor
repz
out
dec
pop
ret
loopne
cmc
jns
hlt
mov
fild
xor
xchg
repnz
dec
xchg
jmp
pop
stos
retf
std
ins
rol
jb
pop
bound
jo
sbb
dec
mov
rcr
jns
(bad)
sbb
jo
mov
mov
mov
cmps
pop
repnz
aad
sti
imul
les
adc
dec
pop
adc
or
std
int3
in
mov
cwde
push
fdiv
sbb
xchg
test
je
scas
xrelease
add
addr16
mov
fmul
sub
push
int3
sub
xchg
pop
and
in
inc
stos
sbb
inc
in
das
pop
mov
jge
hlt
imul
push
mov
mov
aas
jg
cmp
scas
pop
cmps
leave
gs
add
push
mov
mov
fistp
(bad)
or
(bad)
cmps
inc
mov
popf
or
jmp
lock
scas
inc
dec
sti
xchg
int3
dec
cmps
out
mov
(bad)
in
ss
retf
mov
sub
outs
inc
pop
mov
test
imul
or
in
repz
out
pop
push
mov
xor
mov
in
ins
fdiv
mov
hlt
std
cmp
mov
in
sbb
sub
scas
sbb
jb
adc
cmps
push
popf
in
jae
mov
test
out
popf
scas
(bad)
inc
mov
out
lds
pop
push
cmp
pop
je
jb
sbb
sub
sbb
mov
aas
ds
cmc
sahf
or
nop
out
retf
and
gs
imul
adc
xor
not
loope
jbe
bound
sub
inc
xchg
jl
mov
fstp
out
loopne
dec
adc
cs
daa
ds
pop
jecxz
inc
mov
jbe
in
xchg
jge
cli
cmc
fisub
push
fst
mov
sahf
and
popa
daa
(bad)
arpl
mov
scas
mov
pop
test
movs
mul
mov
out
cmc
pop
inc
mov
mov
push
stc
jge
mov
aaa
jnp
or
jecxz
pop
icebp
shl
in
aam
repz
xor
lods
lds
movs
mov
(bad)
into
inc
mov
cmp
sub
inc
ins
mov
shl
mov
or
adc
xchg
sbb
rcl
pop
jecxz
mov
fisttp
sar
rcl
(bad)
popf
aaa
mov
ds
jnp
adc
adc
icebp
aad
xchg
lock
cmp
shr
jge
lods
xchg
popf
cmps
cmps
call
push
pop
jle
movs
icebp
push
and
mov
push
push
cmp
adc
fisubr
add
mov
aaa
sub
ss
fild
lods
sti
shr
inc
je
xlat
add
outs
int
cmp
fsubr
call
jnp
out
arpl
sub
mov
adc
aas
mov
cli
pop
adc
shl
sub
push
dec
daa
cmp
call
inc
ror
cmp
cmps
not
(bad)
hlt
cmp
ror
movs
dec
gs
js
in
icebp
loop
xchg
push
xor
dec
xor
xchg
xchg
punpckldq
lea
in
ret
scas
or
push
repnz
nop
push
cmp
int
ins
mov
shl
stos
dec
stc
mov
pop
inc
dec
sar
mov
mov
ss
jmp
or
jmp
xchg
jb
xchg
das
xchg
leave
popa
leave
aad
dec
mov
and
add
loope
arpl
rcr
dec
pop
pop
addr16
jbe
mov
mov
bound
shr
fmulp
xchg
sub
mov
in
(bad)
in
mov
pop
add
cmc
out
stos
mov
fs
sti
mov
pop
ja
lds
mov
inc
(bad)
cli
push
cmps
mov
push
repnz
pop
fcom
xor
add
jb
jg
xlat
pop
jmp
jl
pop
push
sub
movs
mov
push
fisubr
cmp
push
push
dec
cdq
push
stc
movs
xor
pop
and
pop
pop
leave
sub
cmps
ins
mov
mov
nop
jecxz
sub
adc
mov
mov
dec
jb
sub
sub
fsubr
and
jne
enter
mov
push
(bad)
mov
xchg
add
hlt
sub
bts
dec
stos
jbe
test
pop
ss
cmp
jg
je
mov
xchg
call
mov
push
imul
add
pop
push
gs
gs
scas
out
inc
jnp
sub
shr
lods
pop
sbb
loopne
cmp
mov
jl
jae
aam
fild
js
fwait
movs
push
ins
mov
fwait
pop
jo
fsubr
and
push
fwait
xchg
pop
int3
add
(bad)
mov
pop
sbb
test
add
loope
call
jg
ds
repz
mov
jmp
jge
jns
mov
add
xchg
push
adc
xchg
mov
(bad)
enter
or
mov
fild
aad
cmp
fst
cmp
inc
pop
mov
add
int3
sub
jle
js
sub
mov
adc
mov
sar
jne
add
push
mov
push
mov
lods
retf
add
ret
adc
push
adc
mov
dec
and
mov
cmp
or
sub
jge
dec
out
mov
lds
lea
mov
jo
push
movs
jb
nop
ret
or
pop
fistp
jns
into
stos
mov
dec
jb
xor
iret
mov
jmp
(bad)
push
popf
add
ds
cmp
or
je
in
(bad)
shl
dec
xchg
mov
clc
retf
cmps
ja
mov
lods
dec
cmp
mov
ficomp
xor
std
scas
xor
aad
or
sbb
cmp
retf
test
fsubr
jecxz
sub
mov
push
repnz
loop
outs
shl
sub
cmp
stos
cwde
sub
push
fnstsw
xchg
test
out
ret
adc
dec
leave
imul
cmp
sub
cmc
ja
push
nop
push
shr
pop
popa
daa
ins
inc
sahf
stc
sti
and
xchg
xchg
clc
push
cmp
enter
jae
xor
push
and
inc
push
mov
cmps
pop
cmps
mov
fst
push
popf
jnp
fimul
or
and
inc
pop
rol
sub
pop
or
push
jge
mov
mov
movs
push
scas
pop
movs
mov
sbb
inc
inc
push
dec
and
add
xlat
pop
cmp
sbb
jecxz
push
inc
mov
sbb
xlat
pop
dec
or
xlat
jnp
iret
sbb
pop
mov
dec
pop
pop
jl
(bad)
int3
or
push
sub
or
jnp
fstp
add
sbb
cmps
jno
shl
dec
add
add
sti
add
fiadd
or
jp
out
outs
dec
dec
sub
shl
bswap
add
frstor
xchg
push
aam
outs
cmps
clc
and
push
sar
and
pusha
ss
mov
pusha
and
imul
add
dec
stos
sub
sar
test
or
push
aad
iret
call
push
and
xlat
mov
out
cmp
lds
fimul
push
pop
inc
in
stc
loopne
test
mov
pop
call
sbb
or
(bad)
add
mov
fs
sub
sub
pusha
cli
jg
data16
inc
xchg
push
cmp
adc
jmp
in
inc
lahf
mov
into
xor
pop
add
jg
outs
sbb
inc
xor
out
push
(bad)
in
movs
fwait
or
push
sbb
repnz
mov
xchg
push
lods
fmul
jmp
sti
jg
popa
loopne
arpl
test
leave
popf
xchg
adc
call
hlt
xchg
ret
mov
mov
pop
das
ins
pop
sti
inc
cli
sbb
xor
push
jecxz
test
pop
dec
lods
in
mov
rol
sahf
std
mov
in
xor
add
mov
dec
movmskps
test
and
jl
jmp
div
cmps
mov
pop
fmul
sbb
xchg
call
dec
jo
mov
stos
xor
jl
cmp
imul
mov
mov
jecxz
jno
gs
je
aaa
fnstcw
mov
idiv
retf
outs
push
nop
mov
xor
mov
dec
movs
sub
stos
add
inc
fstp
ja
dec
ror
push
or
call
dec
mov
mov
fsub
std
sub
mov
scas
inc
jl
pop
mov
loope
adc
inc
fwait
je
pop
sub
inc
inc
repz
enter
in
mov
fwait
leave
mov
outs
sbb
jg
outs
xlat
test
pop
mov
int
popa
adc
ins
push
lea
sbb
iret
addr16
adc
push
sub
hlt
lods
ret
dec
mov
es
adc
ds
add
loope
aad
daa
(bad)
pop
loopne
lds
hlt
jae
data16
(bad)
cli
jns
add
sbb
enter
push
or
sub
dec
bound
xchg
cdq
or
adc
push
lds
xor
dec
mov
xchg
xor
test
mov
or
push
cmp
out
mov
or
shl
mov
xor
ret
sbb
mov
nop
adc
cld
jo
sub
pop
xlat
retf
(bad)
in
mov
sbb
out
sub
push
out
xchg
in
add
scas
aas
cmps
dec
inc
dec
xchg
aam
or
dec
adc
fnsave
or
sahf
stc
mov
push
inc
mov
das
jecxz
adc
fsub
xchg
mov
arpl
sub
inc
pop
cmp
adc
(bad)
mov
aaa
ins
adc
xor
or
stc
sub
aam
or
mov
mov
mov
or
adc
retf
fist
dec
mov
xchg
cwde
pop
dec
fist
test
xchg
call
outs
cwde
clc
jle
retf
out
or
outs
in
cmp
pop
jl
ins
leave
jno
jge
jge
jle
jl
inc
mov
xlat
pop
push
(bad)
mov
mov
je
stos
mov
adc
test
add
aam
mov
cli
div
outs
imul
mov
xor
mov
cmps
dec
add
push
adc
cmp
in
or
push
sbb
mov
clc
sahf
inc
mov
test
cmp
retf
popa
(bad)
mov
cmps
add
rcl
iret
dec
ror
push
and
adc
call
enter
scas
jle
push
out
in
and
ja
xor
pop
outs
xchg
out
test
in
out
push
bound
mov
mov
shr
inc
xchg
shl
lods
mov
fcomp
mov
dec
dec
nop
test
in
jmp
pop
sub
retf
test
das
cmp
pop
pushf
int
and
xchg
aad
imul
fbstp
pusha
xor
mov
adc
sub
mov
and
popf
(bad)
fsub
add
out
pop
in
inc
push
retf
sbb
add
inc
cmps
jmp
lods
and
mov
push
je
cmp
pushf
sub
mov
push
sbb
daa
pop
mov
das
cli
inc
xor
and
mov
int
ja
ret
out
add
movs
outs
mov
jne
and
inc
outs
mov
shr
cmp
sbb
push
dec
mov
push
cmp
push
out
test
dec
push
push
rcr
cmps
stc
cs
add
(bad)
mul
(bad)
repz
shr
jle
repz
mov
mov
test
push
sahf
arpl
aad
ja
xor
cdq
and
lds
jge
aam
sub
or
push
pop
mov
sahf
mov
push
sub
data16
pop
add
cmps
sbb
icebp
and
mov
mov
xor
adc
(bad)
outs
int3
dec
(bad)
mov
and
enter
xchg
stc
adc
sub
cmc
add
das
pop
cmp
adc
sub
sbb
aam
mov
les
cwde
shr
add
loopne
imul
or
inc
or
jns
adc
sbb
rcr
les
cs
addr16
ins
cli
push
into
cld
int3
(bad)
or
je
ret
and
pop
xor
ins
pusha
retf
jmp
retf
js
inc
es
jmp
out
cwde
dec
mov
test
loop
pusha
scas
fdivr
jae
xlat
fisttp
push
les
cmp
sbb
add
cs
rol
call
cmp
xchg
inc
nop
jne
adc
push
dec
nop
retf
or
adc
js
enter
mov
pop
(bad)
stc
add
stos
and
mov
pop
sub
and
pop
jge
mov
xchg
cmc
dec
mov
and
stc
cmp
push
xor
ins
fwait
mov
inc
or
(bad)
loope
lea
mov
sbb
out
add
pop
or
xor
idiv
jo
gs
retf
and
ins
rcr
and
add
xor
mov
push
or
jnp
imul
(bad)
stc
imul
xchg
jmp
aas
test
test
mov
iret
aas
loop
cld
es
fadd
ss
(bad)
enter
inc
movs
or
adc
fdivrp
jae
call
or
aaa
push
xchg
jnp
xchg
(bad)
ins
dec
xor
jno
add
call
dec
xlat
cmp
mov
movs
or
inc
add
fstp
in
xchg
jne
and
inc
sahf
dec
ss
mov
ds
imul
lock
mov
ins
cli
loopne
inc
mov
xor
lahf
in
ss
into
dec
inc
mov
dec
js
leave
pop
leave
pop
dec
and
lods
inc
mov
pop
les
mov
adc
cwde
sar
jbe
addr16
xchg
in
xor
xor
pop
mov
ss
jns
dec
loop
lods
(bad)
cmp
into
into
sbb
stos
out
xchg
mov
xchg
lea
ss
jns
rcr
dec
hlt
fldcw
enter
or
mov
dec
sbb
xchg
cmp
out
in
cmp
xor
jno
or
mov
je
xchg
xchg
jne
adc
aaa
sti
mov
and
lods
jns
into
or
ret
jmp
int3
or
sbb
mov
jnp
add
mov
dec
push
push
rcl
cs
shr
scas
adc
pop
lea
adc
sbb
out
dec
mov
out
std
sub
lahf
das
imul
push
lea
ret
test
shr
push
movzx
test
mov
and
repz
xchg
cmps
mov
mov
push
fchs
and
push
cmps
cli
ds
and
mov
leave
(bad)
fldenv
and
push
(bad)
jmp
mov
mov
mov
ret
cli
cmp
pop
out
mov
mov
mov
fcmovne
addr16
scas
and
aas
jno
and
adc
fisubr
icebp
stos
cmp
shr
xor
xor
ds
je
adc
push
and
shl
cli
and
and
mov
cdq
sub
in
lods
xchg
iret
fwait
add
fiadd
mov
test
pop
pop
push
stos
lahf
pop
sbb
std
sahf
mov
mov
add
cmp
cwde
push
mov
jb
aad
aas
popf
pushf
push
fidivr
mov
cmp
mov
fdiv
aaa
aas
aaa
out
mov
push
push
push
sub
cli
call
sub
ja
mov
jg
cmp
inc
push
out
in
fcom
(bad)
adc
js
jp
push
and
mov
jne
std
or
dec
repnz
xchg
pushf
push
outs
popa
arpl
int
mov
leave
push
and
dec
jne
aas
fisubr
cmps
(bad)
lock
add
leave
sub
mov
pop
inc
mov
xchg
ret
jmp
out
jl
in
retf
mov
pop
inc
or
leave
and
iret
out
fsin
(bad)
or
xor
lods
sbb
scas
int
test
xchg
xchg
push
shl
adc
xor
inc
jge
loop
cmp
es
cmp
fst
push
ss
cmp
(bad)
out
fisttp
jmp
add
jno
stos
or
xchg
retf
ja
jecxz
jb
push
rcr
push
xchg
sti
icebp
movs
fmul
aas
adc
test
add
adc
fidivr
fld
dec
adc
xchg
rol
(bad)
dec
stc
adc
dec
mov
clc
(bad)
arpl
dec
xor
cmps
jle
mov
les
xor
and
mov
push
iret
imul
fsub
push
mov
xchg
lods
mov
or
setge
mov
into
and
repz
adc
sbb
lahf
jg
push
push
sub
scas
mov
mov
retf
fnstenv
mov
inc
cwde
dec
jno
daa
cmps
aam
push
push
nop
cmp
pop
repnz
xchg
std
mov
sbb
(bad)
cwde
call
push
jns
icebp
addr16
dec
ds
out
jbe
xor
mov
shl
test
jmp
dec
mov
and
(bad)
pop
push
and
and
lock
dec
popf
inc
idiv
in
and
aaa
ins
test
add
imul
mov
push
out
mov
mov
push
xor
inc
push
dec
loop
ss
ret
jle
aas
icebp
mov
(bad)
cmps
inc
es
outs
add
in
jae
inc
jmp
mov
mov
hlt
add
inc
fwait
xchg
mov
push
xor
sbb
xor
dec
test
mov
adc
mov
cmps
pushf
aad
ja
sti
push
mov
loop
clc
mov
imul
or
and
push
sbb
add
clc
jne
pop
mov
xchg
cmps
inc
pop
in
outs
lahf
(bad)
outs
adc
jbe
mov
or
xlat
sub
mov
cmp
pushf
in
pop
ror
sbb
retf
and
and
mov
jl
pop
xor
cs
daa
inc
sbb
fimul
sub
imul
arpl
cmp
jle
fsubr
(bad)
jmp
or
fmul
cli
push
jmp
mov
mov
mov
(bad)
inc
pop
adc
sbb
jecxz
push
push
pop
push
pop
jo
out
mov
sbb
stc
adc
sbb
adc
mov
test
ins
es
repz
cmp
sub
mov
shl
jmp
cmp
mov
xchg
pop
xor
test
sti
lods
rcl
out
cwde
ret
cld
sbb
or
scas
sub
sti
and
out
sahf
and
test
mov
je
mov
push
xchg
inc
mov
bsf
pop
jle
mov
cwde
inc
outs
inc
jbe
or
mov
call
mov
push
xor
mov
fmul
fdivr
clc
cmp
loope
adc
mov
(bad)
push
push
int3
dec
dec
dec
lock
xor
repz
or
xor
dec
cmp
repz
outs
mov
and
jmp
xchg
scas
(bad)
push
dec
dec
jmp
inc
int3
mov
sahf
push
adc
add
dec
push
aad
iret
adc
fs
jle
cmp
jecxz
dec
add
or
sub
call
retf
lods
inc
push
les
jp
mov
pop
push
pusha
push
mov
or
call
stos
es
bnd
ret
pusha
xchg
add
push
retf
loop
adc
inc
stos
daa
mov
push
jmp
mov
ret
jne
mov
dec
stos
lds
mov
xor
mov
cmp
repz
pop
(bad)
fstp
adc
sub
jbe
jg
das
arpl
jmp
xor
mov
and
sub
aam
arpl
xor
mov
mov
ror
xor
push
pop
mov
mov
(bad)
sub
test
test
cdq
and
and
test
sbb
loope
shr
xchg
inc
and
dec
mov
dec
jb
imul
loopne
cmps
push
sub
out
jg
push
jle
leave
pop
fstp
lahf
test
push
sub
aad
adc
xchg
js
out
out
rcl
inc
icebp
inc
cmp
mov
fidivr
xor
pop
test
cmp
je
cmp
cwde
adc
jl
jne
jecxz
jbe
mov
pusha
add
cmc
sub
mov
imul
call
add
mul
mov
xor
ja
icebp
hlt
add
fcomp
and
mov
xchg
adc
dec
movs
add
jb
cmp
and
in
adc
sti
in
push
push
outs
pop
jle
loop
dec
jp
into
sbb
adc
jbe
cld
inc
push
dec
(bad)
inc
xor
push
bnd
arpl
shl
loopne
xchg
arpl
add
rol
bound
(bad)
mul
adc
cmp
sar
dec
jo
sbb
mov
in
fcmovu
int
push
push
div
ficomp
daa
inc
xlat
dec
mov
fsubr
mov
push
mov
dec
movs
push
dec
mov
xor
adc
jb
jecxz
je
push
dec
jp
sub
pop
jmp
pop
sbb
iret
repz
or
fucomip
sbb
dec
and
jmp
adc
xor
cdq
mov
mov
cmp
test
hlt
xor
and
dec
dec
dec
imul
xor
fiadd
adc
fidivr
das
adc
arpl
arpl
and
sub
scas
ds
add
inc
push
imul
jae
pusha
jne
jb
pop
push
call
mov
test
pusha
xor
lods
dec
push
jle
sar
dec
fbld
xor
inc
jmp
bnd
push
mov
jo
cdq
test
jp
adc
mov
inc
out
and
mov
mov
into
scas
scas
imul
mov
jo
out
xchg
mov
in
gs
cld
shl
push
(bad)
adc
jecxz
cs
lahf
in
push
mov
hlt
or
or
cmp
loop
sbb
mov
adc
lods
mov
mov
pusha
mov
mov
in
cmp
dec
jge
ja
cmp
mov
pop
adc
jns
test
ret
jb
inc
mov
into
dec
xchg
inc
jo
nop
daa
xor
fwait
jns
cmps
pop
push
sub
jecxz
adc
add
lea
mov
aad
xor
inc
sub
hlt
popa
cmc
dec
movs
xchg
call
pop
cld
jae
mov
sbb
dec
jo
(bad)
stos
cmp
stos
imul
jecxz
out
and
(bad)
int
fstp
cwde
fwait
push
xchg
call
cmp
aas
packsswb
lea
push
mov
aam
ss
and
leave
iret
les
out
mov
xor
arpl
push
sbb
(bad)
sbb
pop
popf
data16
fnsave
mov
cmps
jle
xchg
movs
ds
repz
jl
sbb
loopne
call
ror
imul
mov
pop
aad
mov
dec
cmps
nop
or
and
add
cmp
inc
imul
and
push
sbb
cmc
mov
xor
int3
inc
mov
arpl
leave
dec
inc
aad
shl
sbb
das
in
jl
sti
daa
addr16
out
cmp
cmp
mov
add
xchg
scas
mov
repnz
pushf
xor
or
sti
gs
cmp
push
or
add
jns
ds
sti
mov
cmp
xchg
fbld
fild
sub
jl
mov
popa
add
cdq
and
adc
imul
and
xor
pushf
cdq
cmps
shl
adc
pop
fs
jno
push
and
in
sti
jmp
retf
jge
pop
pusha
scas
fiadd
addr16
fcomp
push
cld
sub
retf
add
push
ret
test
jle
dec
xchg
out
mov
(bad)
xchg
jg
cmp
inc
adc
inc
fild
cmc
jae
push
rcl
fcomi
dec
and
sbb
add
xor
rcr
xor
mov
adc
fist
cwde
xchg
pushf
inc
mov
ret
lea
aas
ins
shr
int3
adc
push
imul
es
adc
cmp
lahf
test
mov
sbb
or
fnsave
mov
adc
push
pushf
jmp
add
xor
mov
push
out
jo
lods
pop
sub
adc
push
sbb
dec
aas
jne
and
and
mov
vpacksswb
int
push
out
ret
jns
test
ss
dec
fst
loopne
das
pop
shr
cmp
jns
mov
xchg
jo
pusha
xchg
cmp
lds
jecxz
mov
mov
or
or
xor
out
inc
dec
mov
sub
rcr
test
mov
popa
mov
fbstp
outs
cmc
mov
push
and
(bad)
aas
adc
xor
aad
pop
leave
out
jo
es
and
mov
add
pusha
jb
mov
xlat
cmp
lea
fld
mov
shl
xchg
xor
ss
fld
sbb
in
inc
dec
mov
nop
push
popa
push
push
dec
dec
jnp
inc
jecxz
xchg
mov
(bad)
mov
jmp
lea
mov
sub
test
ret
out
dec
sbb
mov
inc
(bad)
xchg
adc
xchg
inc
je
bnd
dec
out
call
adc
cli
(bad)
jecxz
inc
add
daa
dec
push
outs
imul
add
daa
and
cmp
dec
inc
(bad)
dec
ret
ret
sub
mov
mov
cmova
and
daa
dec
push
or
test
je
push
mov
xor
arpl
push
sbb
mov
fistp
dec
mov
adc
data16
xchg
xor
inc
sub
pop
enter
mov
dec
or
inc
jge
stos
leave
add
fidiv
sub
push
mov
int3
pop
sti
mov
xchg
mov
mov
lods
mov
lahf
adc
mov
cmp
xor
push
mov
and
clc
imul
mov
xchg
sub
int3
sub
inc
cmp
mov
xor
es
in
bound
pop
mov
enter
in
iret
dec
int3
mov
mov
push
les
dec
out
lods
xor
or
sar
jp
retf
cmps
pop
or
dec
inc
scas
add
and
mov
jp
jne
jp
ss
pop
iret
or
retf
xchg
adc
push
add
fucomi
adc
dec
ins
mov
jl
neg
sub
jmp
or
ss
sub
xor
mov
imul
out
das
out
cmp
pop
sub
imul
push
sub
ins
jo
bound
adc
das
jbe
sar
jbe
inc
mov
sub
pop
outs
jecxz
data16
test
dec
dec
jg
pop
inc
and
and
and
aam
nop
or
lods
iret
xchg
mov
push
jno
lods
outs
shl
mov
enter
xchg
mov
scas
push
std
in
sub
mul
adc
xchg
adc
add
inc
clc
or
sub
or
pop
xchg
icebp
loope
seta
ss
push
cmp
dec
inc
(bad)
xor
out
add
adc
pop
mov
mov
xchg
cmps
adc
inc
fs
or
ds
push
pop
pop
outs
fisub
mov
mov
fisub
mov
or
xchg
pop
mov
retf
stos
fs
aaa
and
add
pusha
and
mov
scas
(bad)
sub
mov
inc
in
adc
(bad)
fstp
push
in
(bad)
ds
in
movs
push
cli
(bad)
in
xchg
pop
test
pop
scas
fiadd
xchg
fs
and
xchg
dec
jno
aad
xchg
sub
and
or
sub
ror
sbb
in
leave
hlt
adc
mov
(bad)
or
mov
pop
repnz
mov
jle
mov
sbb
mov
int3
test
int
or
cmp
rcr
test
lock
ret
cdq
cmp
iret
pop
or
cwde
add
jns
mov
push
hlt
add
addr16
ret
add
(bad)
je
or
in
data16
fisubr
adc
stos
add
dec
xor
inc
add
dec
inc
cmp
mov
mov
cmp
xchg
cld
js
sbb
stos
cmp
dec
jp
jle
jae
or
mov
add
pushf
push
shl
jbe
sub
cmps
push
fcmovne
test
sub
or
cmc
adc
in
jbe
sub
icebp
in
sbb
add
lock
add
retf
dec
or
cld
and
ret
or
fnstenv
cmp
(bad)
push
addr16
ds
inc
(bad)
xchg
xchg
sti
aas
vpcomuq
or
adc
sub
add
xchg
cld
out
shl
clc
test
lock
ret
neg
fsub
int
push
mov
xor
mov
call
xchg
sbb
ss
retf
cwde
loop
(bad)
fld
pop
cdq
mov
jg
repz
gs
adc
sbb
mov
pop
ins
xlat
and
cmps
shl
xchg
pop
inc
cmps
icebp
jno
xor
sar
jns
mov
and
xor
inc
movs
ret
mov
push
loope
or
xor
dec
cmp
ret
call
sub
xor
paddb
pop
movlps
xor
loopne
ins
adc
in
fisttp
or
jo
xchg
jns
fisttp
(bad)
into
cmp
adc
inc
ds
mov
mov
je
mov
out
fsubr
pop
movs
mov
push
test
dec
popf
pop
cmp
jmp
aad
sub
push
sti
sub
jne
inc
je
xor
xchg
std
adc
lahf
push
sbb
gs
mov
adc
mov
nop
fiadd
test
hlt
in
push
std
je
xor
xor
(bad)
cwde
nop
cmp
gs
mov
fwait
push
sub
xchg
push
mov
jne
dec
pop
dec
push
mov
mov
dec
mov
and
leave
inc
lahf
pop
neg
push
jmp
cmp
dec
fst
push
cs
jo
sbb
sbb
cmp
fst
sub
or
dec
sub
mov
push
ins
aas
xchg
dec
mov
sar
je
ins
pop
in
jle
daa
jge
xchg
pushf
jp
in
out
mov
and
jo
sbb
rep
ret
mov
jbe
pop
fwait
mov
xor
push
rcr
arpl
aaa
aas
aad
jge
mov
cmp
xor
dec
(bad)
pop
into
inc
(bad)
cmc
jno
ror
fnstenv
jae
loope
inc
cwde
cmp
or
pop
fs
mov
movs
adc
mov
fcomp
push
push
push
mov
es
mov
(bad)
add
jmp
repnz
repnz
out
jmp
cmp
outs
mov
xor
pop
cmp
jns
xor
sub
in
adc
int3
das
cmp
or
shl
xchg
jno
fbstp
xor
jmpw
xor
adc
mov
xor
shr
cwde
(bad)
pop
inc
push
leave
lea
and
xchg
inc
xor
push
fidivr
xor
mov
sub
das
dec
call
ds
ja
adc
inc
inc
jl
xchg
dec
sub
enter
shl
(bad)
rcr
xchg
cmp
dec
push
out
data16
dec
pop
sbb
push
test
xor
int
pop
lock
pop
enter
adc
stos
sahf
jle
or
mov
or
ror
ror
xchg
mov
push
xchg
inc
jmp
pop
cmp
sub
aaa
pushf
idiv
xlat
test
mov
ds
retf
div
jecxz
gs
setbe
xchg
inc
dec
sub
pop
in
xor
pop
and
adc
cdq
or
jp
add
out
shl
push
mov
clc
xor
pusha
push
nop
or
adc
mov
outs
pop
xchg
pop
push
pop
std
add
mov
mov
inc
dec
jle
ins
aas
sub
adc
jne
stos
add
add
lahf
cmc
xchg
mov
hlt
pop
js
jg
lds
mov
ja
xchg
sbb
test
lds
cmp
xchg
popf
pop
(bad)
aaa
pusha
out
xchg
loope
mov
arpl
pop
sbb
sub
pop
mov
or
inc
pop
(bad)
add
dec
ss
inc
les
xor
push
pop
pop
ins
pop
sbb
in
ror
mov
jge
dec
ss
inc
inc
mov
jle
cmp
mov
push
and
push
add
sbb
shl
cmp
sbb
cs
jno
push
adc
jmp
push
stos
lock
adc
add
dec
cli
mov
imul
mov
les
gs
or
inc
jbe
loope
popf
inc
push
mov
sub
mov
mov
cdq
ss
mov
or
xchg
(bad)
ss
test
add
push
and
sub
jo
xlat
leave
(bad)
imul
push
add
daa
and
rcr
mov
sbb
cmp
cmp
aad
inc
dec
shr
loopne
xchg
mov
imul
movs
and
push
ds
mov
cmps
push
pusha
lods
loopne
jmp
out
cmp
jae
sbb
cmp
push
mov
xchg
mov
ja
dec
inc
neg
nop
mov
dec
add
(bad)
fiadd
pop
les
icebp
jg
ret
jl
je
and
cli
dec
and
xchg
push
dec
test
outs
pop
mov
outs
and
mov
outs
or
je
cmps
stos
out
fwait
jp
sbb
das
pop
pop
sub
outs
pop
push
pop
outs
sbb
aas
movs
mov
call
and
jmp
mov
or
stos
xor
mov
mov
jae
stc
mov
mov
data16
aad
xchg
movs
adc
mov
mov
xor
aaa
jg
bound
mov
int
push
sub
mov
mov
in
je
rol
pop
out
aam
and
stos
in
jb
neg
or
popa
lock
in
push
push
icebp
inc
ret
outs
or
in
lock
test
xor
fist
inc
jl
pushf
mov
retf
js
jns
xor
div
(bad)
sub
in
imul
mov
cmp
and
jmp
jnp
out
ss
leave
(bad)
fnstcw
and
test
and
dec
icebp
pop
pop
scas
fidivr
dec
inc
ret
mov
pop
mov
push
and
in
(bad)
fdiv
fdiv
icebp
lahf
or
ins
inc
sbb
push
fldcw
pop
or
scas
sahf
xchg
xchg
sbb
jecxz
xchg
push
dec
sub
mov
push
mov
sbb
pop
lahf
push
xor
cmp
push
mov
out
add
sub
jg
mov
push
sbb
dec
test
sub
and
sub
push
dec
jbe
jle
push
retf
test
outs
retf
inc
dec
ins
mov
sbb
mov
cmp
lahf
pop
xchg
(bad)
sti
mov
ud2
pop
push
ret
cdq
add
pop
jno
addr16
dec
mov
int
int3
addr16
cmp
cld
std
aam
jne
push
xchg
daa
push
and
ins
mov
jbe
mov
mov
adc
fisubr
lock
fidiv
mov
mov
lahf
push
dec
inc
xchg
pop
sub
mov
mov
xor
jl
sub
data16
mov
lods
mov
es
mov
adc
rcr
mov
lods
jg
test
mov
lock
gs
stos
mov
test
scas
add
cmp
cdq
loop
fwait
mov
cmc
mov
xchg
cmp
ficom
inc
push
(bad)
adc
fild
push
dec
push
and
lea
enter
jno
mov
movnti
aad
xor
jae
pop
and
sti
out
push
cmps
pushf
mov
inc
or
ja
outs
cmp
jae
sub
add
jp
dec
iret
lds
jno
pop
and
aaa
or
push
fadd
or
fcomp
jno
dec
cmc
adc
dec
ja
inc
int
shl
loopne
shl
cmp
cdq
icebp
loope
loope
push
fcomp
inc
add
rcr
popa
std
jge
cmc
jae
cli
cmp
xor
inc
jnp
shr
push
pop
pop
push
inc
in
aaa
test
cmc
xchg
ds
mov
xchg
pop
sti
adc
mov
inc
mov
lock
jbe
push
add
add
adc
and
inc
xor
add
popa
outs
ins
loop
or
jl
or
add
fild
lods
or
stos
mov
or
outs
sub
pop
xchg
psubsw
sub
in
mov
test
mov
mov
div
or
pop
inc
cmc
loopne
fcomp
mov
pop
fiadd
stos
jae
adc
inc
lods
(bad)
sub
xor
dec
xchg
mov
pushf
pushf
(bad)
aaa
das
lds
aad
dec
push
popf
movs
iret
inc
mov
push
in
jo
mov
or
aas
cld
pop
call
int3
stc
push
je
aam
jne
test
sbb
or
push
rcl
int
cwde
test
sbb
dec
push
in
xor
popf
push
adc
stos
mov
push
adc
data16
push
jb
inc
xor
jb
adc
fsubr
mov
adc
mov
idiv
outs
icebp
and
(bad)
or
ret
dec
inc
mov
sub
xor
aad
mov
jl
xchg
repz
imul
add
mov
in
in
push
adc
mov
ret
icebp
arpl
fldenv
inc
(bad)
push
fld
enter
pop
sub
pop
push
pop
lods
xchg
repnz
jns
aas
das
push
xchg
test
push
dec
jg
(bad)
movs
dec
xchg
(bad)
out
xchg
ins
int3
dec
push
imul
inc
fistp
adc
adc
out
cmps
mov
and
and
fwait
mov
or
xor
cmp
mov
fstp
add
and
push
nop
in
das
sub
pop
jns
loop
mov
pop
jae
or
stc
(bad)
adc
les
xchg
(bad)
xchg
inc
jle
mov
and
call
add
pop
fcom
sub
sub
cmp
(bad)
adc
gs
(bad)
out
sar
ins
fsubr
pusha
iret
out
dec
xor
lea
cmps
sbb
adc
fsubr
ds
mov
xacquire
inc
xchg
lea
jae
sbb
pushf
cmp
pop
jmp
ins
out
jne
in
mov
lds
or
mov
aam
fst
inc
icebp
inc
xchg
fcos
fiadd
sub
inc
in
cmp
fnstcw
dec
(bad)
pop
or
sub
add
xchg
ret
sbb
lahf
push
or
addr16
lock
in
dec
push
cwde
fistp
fs
cs
mov
fidiv
fadd
dec
rcr
(bad)
cmpxchg
inc
cmp
push
cmp
sbb
jb
pop
adc
inc
jl
imul
js
xor
call
jmp
push
mov
jb
enter
fdivp
test
sub
inc
aas
clc
xchg
mov
cmc
jne
or
push
xchg
arpl
rol
mov
push
scas
mov
dec
sub
lea
int3
lds
sub
pop
ja
loope
stos
or
pop
push
push
test
lea
xor
jl
mov
add
mov
mov
or
or
xchg
mov
(bad)
loope
(bad)
push
pop
and
pushf
mov
pop
dec
cld
rcl
dec
add
xchg
popa
lahf
daa
pop
(bad)
mov
inc
add
xor
cmps
out
jmp
mov
ins
call
std
mov
cli
imul
mov
jb
test
add
mov
fadd
lds
mov
dec
fist
hlt
sbb
xor
ror
scas
fwait
movs
push
fdivr
push
push
lods
push
ja
repz
xchg
shl
(bad)
out
(bad)
push
lds
xchg
xor
mov
popa
push
mov
rcl
retf
fist
mov
adc
out
mov
or
cld
mul
retf
adc
fadd
xor
daa
std
mov
cmc
(bad)
(bad)
pop
leave
mov
sbb
jmp
aas
sub
mov
cmp
xchg
pop
popf
cmp
popf
ds
inc
cs
shr
das
mov
lock
sub
fdiv
pushf
or
les
inc
adc
leave
js
in
mov
pop
push
mov
xchg
inc
sbb
or
ret
push
mov
clc
lods
lods
je
retf
cwde
out
jb
cwde
or
movs
jno
pop
sbb
call
sub
aas
or
jg
pop
fiadd
mov
iret
fcomp
outs
ja
xchg
add
(bad)
nop
jle
repnz
inc
ret
sbb
pop
xchg
mov
adc
movs
push
pop
jge
mov
jg
dec
jg
fisubr
or
push
(bad)
push
std
sbb
(bad)
scas
add
mov
push
shr
cwde
stos
aam
xchg
jne
dec
mov
cmp
cmp
cmp
or
loopne
test
mov
fsubrp
stos
jmp
sahf
or
and
pushf
dec
inc
iret
test
loopne
mov
and
or
stos
pop
sub
mov
lea
out
push
mov
mul
(bad)
and
xchg
lds
mov
repnz
inc
mov
std
inc
call
cmp
not
loop
inc
cmc
and
jg
call
xor
cmp
loopne
int
lock
push
mov
mov
adc
aam
je
loop
in
push
xor
jl
or
in
xchg
pop
mov
and
jne
sbb
out
(bad)
call
or
xor
sub
icebp
add
pop
int
dec
and
aas
stos
test
mov
mov
jbe
enter
jne
push
or
jg
xchg
pop
cmp
xchg
push
shr
sbb
push
jo
test
(bad)
out
ins
test
addr16
dec
rcr
test
push
iret
out
cmc
stos
and
mov
xchg
and
bound
pop
in
daa
mov
dec
cmp
(bad)
clc
push
sub
imul
fistp
call
pusha
ds
movhps
and
mov
cmps
icebp
cmp
cmp
mov
sahf
out
cli
rol
mov
mov
xor
dec
(bad)
xchg
xchg
cwde
push
pop
retf
push
xchg
mov
jmp
es
lahf
mov
cli
jbe
mov
pop
pop
xor
mul
sbb
pop
push
jbe
hlt
aaa
adc
cmps
call
icebp
adc
xchg
pop
into
and
outs
jle
jbe
sahf
sar
inc
mov
retf
cmp
jecxz
mov
and
and
pop
lahf
outs
call
dec
lods
jp
pop
mov
rol
in
in
push
iret
push
or
test
push
out
mov
pop
push
mov
add
lds
sbb
add
xor
cmp
inc
xor
imul
sbb
cwde
push
in
pop
inc
in
cmp
adc
je
test
jo
mov
dec
lods
xchg
pop
inc
js
inc
push
not
or
mov
jnp
outs
inc
pushf
inc
add
out
xchg
xor
cs
cmp
pushf
(bad)
rol
mov
mov
dec
jne
and
into
enter
add
ins
sub
in
(bad)
std
dec
fsub
call
pop
(bad)
popa
std
ret
ins
aas
adc
stc
lahf
sub
add
arpl
pop
mov
dec
mov
inc
inc
pop
ficom
sub
mov
arpl
lock
mov
aam
inc
inc
movs
fptan
jmp
es
dec
cli
bound
push
mov
xor
xor
cmp
inc
cmp
and
mov
ffreep
jle
cwde
mov
xchg
and
xor
or
test
pop
cmp
xor
dec
(bad)
out
lock
or
push
and
cmp
pop
mov
mov
ror
in
push
jo
dec
adc
fistp
outs
test
out
sar
jnp
scas
add
xchg
mov
or
or
mov
sbb
push
push
leave
shl
sub
or
and
hlt
pop
dec
test
cli
adc
jge
xchg
jb
out
adc
imul
xchg
nop
cs
aam
mov
cmp
out
or
leave
mov
cld
out
cli
sti
lods
xchg
pop
int3
xchg
out
push
mov
sub
mov
fnsave
into
xor
mov
movs
and
mov
pop
out
add
adc
fld
sub
shr
inc
jmp
mov
rcr
pushf
es
xor
push
adc
xor
unpcklps
and
ret
iret
stos
lds
pop
dec
mov
je
and
sub
cmp
shr
push
xor
(bad)
loope
cmp
movs
fldcw
imul
shl
and
and
xor
sub
jno
addr16
push
movs
push
fdiv
pop
(bad)
mov
add
pop
ror
jae
push
add
outs
jecxz
adc
cmc
rep
push
in
std
pop
test
adc
inc
aad
cmp
xor
or
vaddsd
std
bswap
arpl
test
or
aam
xor
jecxz
mov
add
xor
xor
adc
in
sbb
mov
inc
into
mov
in
pop
rcl
int
ficom
retf
ss
sub
fld
retf
in
and
je
adc
ret
push
and
sbb
(bad)
cmp
jbe
int
push
loope
ret
ins
fld
mov
mov
or
adc
sti
pop
adc
mov
movs
xor
xor
ret
lds
mov
inc
or
mov
jae
(bad)
retf
lock
je
dec
jge
inc
scas
cmps
nop
out
inc
xor
test
out
repnz
ins
outs
mov
jg
pop
inc
jno
fidiv
mov
mov
push
add
xchg
into
je
push
or
sbb
test
push
(bad)
adc
inc
fild
arpl
push
les
dec
pop
inc
cmp
pop
or
aas
mov
xchg
jmp
icebp
sysexit
push
stos
and
push
test
rol
sar
test
cwde
cs
ret
mov
mov
cmps
cmps
(bad)
mov
sbb
inc
push
scas
sub
xchg
mov
mov
fst
fstp
cmp
retf
inc
xor
cmc
arpl
fwait
lock
or
in
xor
or
and
icebp
jb
test
jo
outs
push
jnp
int3
fadd
mov
das
js
sub
dec
ror
mov
outs
jmp
daa
aaa
repz
dec
ja
mov
mov
mov
fsub
push
popa
jmp
popf
or
mov
jecxz
push
cmp
lock
out
or
retf
sub
sub
and
push
pusha
pop
cwde
out
les
out
jae
outs
shl
adc
popa
jno
(bad)
pop
push
mov
xchg
lods
push
in
sbb
sub
inc
lock
(bad)
cmp
ret
adc
mov
in
jle
test
mov
dec
ror
inc
mov
inc
xchg
push
jle
add
mov
popa
adc
retf
loop
xchg
sub
pusha
jne
push
stos
scas
sub
(bad)
cmp
jecxz
test
mov
fucomip
push
push
xlat
mov
bound
add
scas
mov
in
jmp
pop
(bad)
push
and
cmc
mov
movs
push
jg
bound
pop
push
iret
clc
xlat
xchg
test
out
leave
or
and
adc
movs
or
test
shl
xor
or
mov
addr16
test
xor
shl
enter
(bad)
push
mov
shr
mov
sbb
ins
sti
sbb
shr
xchg
stos
dec
aam
inc
adc
aas
ret
adc
pop
ret
movs
mov
add
lods
cmp
shl
push
or
sub
xchg
jbe
js
js
jp
sbb
cmps
js
das
and
xchg
mov
fsubr
xor
shr
sub
add
fwait
cld
dec
sub
out
hlt
jle
add
aad
cdq
mov
push
add
add
xor
cmc
test
enter
scas
int
sub
push
fwait
xchg
rcr
inc
jae
cmc
mov
setnp
and
movs
sbb
loopne
lods
pushf
cmp
adc
pop
xor
push
sbb
push
cmps
inc
daa
scas
in
hlt
repz
clc
sbb
out
lock
lds
pop
add
jne
sub
sub
push
cmp
aas
push
add
pop
shr
les
adc
or
les
fdivr
outs
in
iret
sbb
(bad)
cmp
or
mov
pop
(bad)
mov
inc
xor
jp
stos
outs
rcr
imul
nop
dec
mov
adc
inc
or
stos
popa
mov
in
dec
rcr
seto
(bad)
xor
ficomp
jge
out
cmp
clc
ins
dec
sub
add
rol
movs
cmp
xor
out
mov
mov
pop
ret
fistp
xor
rol
and
mov
repz
pop
icebp
push
add
call
add
enter
jo
sbb
push
mov
push
push
stos
dec
push
jo
std
ret
in
cmp
pop
sbb
retf
test
pushaw
add
jle
dec
imul
cmps
jns
push
xchg
mov
rcr
cld
lahf
out
pop
pusha
mov
fild
push
mov
xchg
int
jg
ror
inc
in
mov
test
jnp
jb
inc
sbb
ficomp
push
(bad)
rcl
add
jg
adc
add
and
mov
cmp
repz
xchg
pop
and
lock
adc
add
mov
sub
fisub
clc
jne
ret
lock
mov
sbb
sti
retf
add
sub
mov
in
jnp
xchg
xchg
sbb
pop
push
loope
pop
(bad)
aaa
sbb
sahf
inc
jbe
jmp
sbb
int3
add
jb
push
xchg
cwde
xor
stc
push
pusha
sub
repz
fwait
bound
xor
add
pop
mov
mov
dec
mov
(bad)
and
xor
pop
inc
sbb
mov
or
(bad)
(bad)
icebp
pop
and
sub
inc
push
mov
(bad)
aas
mov
fwait
xlat
jae
rol
sbb
outs
das
push
jecxz
aam
pop
pop
imul
fmul
adc
cmp
and
hlt
jno
pushf
popf
add
sub
sbb
xor
pop
mov
ret
loopne
in
iret
or
and
or
dec
cmp
adc
out
jne
fdivrp
test
xchg
add
mov
sbb
call
adc
outs
add
cmp
and
cmp
push
retf
xchg
loop
in
cmp
mov
push
add
stos
ret
stc
stos
outs
test
jle
mov
push
push
call
out
stc
fsubr
pop
pop
movs
inc
mov
movs
sti
(bad)
xchg
ins
sbb
adc
aas
loop
cmp
cs
fdiv
mov
and
pop
fsub
and
imul
and
jns
jle
aas
jno
in
ret
add
sub
jno
xchg
fnsave
stos
pushf
addr16
inc
idiv
enter
add
daa
lock
pushf
mov
jmp
push
adc
shl
iret
stos
hlt
(bad)
outs
icebp
addr16
add
in
ss
xor
or
jmp
(bad)
fcom
push
cmp
or
pop
add
neg
cdq
dec
in
and
adc
gs
xchg
sbb
cmps
fist
cwde
cmp
mov
lea
pop
in
dec
lds
shr
lds
mov
loope
add
mov
xchg
dec
sahf
mov
call
ficomp
mov
jecxz
rol
add
popf
fwait
fs
sar
mov
adc
mov
jnp
int3
leave
add
aam
cwde
in
pop
loope
out
xor
call
movups
sub
jno
xchg
loop
jbe
(bad)
cmp
outs
hlt
xor
jno
or
dec
imul
lods
dec
out
pop
mov
pushf
jmp
test
lea
rcr
or
mov
aam
mov
test
adc
and
fidiv
sub
jmp
in
arpl
test
xor
fld
int3
jp
and
dec
adc
das
adc
pop
push
inc
int3
jno
in
and
or
jmp
mov
(bad)
or
fs
enter
add
and
jmp
dec
pop
xchg
mov
movs
pop
idiv
shl
cld
ins
stos
cdq
pop
sahf
xor
xor
je
(bad)
jle
jge
iret
fidivr
adc
add
sbb
leave
es
mov
addr16
aaa
xchg
push
push
xchg
data16
dec
(bad)
pop
xchg
icebp
sub
ds
call
dec
dec
rcl
in
ss
pop
outs
call
push
pop
mov
mov
lahf
ror
aad
mov
mov
fisubr
mov
xchg
jle
scas
or
test
inc
xor
(bad)
or
and
cmp
mov
inc
(bad)
jo
xor
sti
(bad)
repnz
ds
push
arpl
mov
mov
int3
sub
pop
xchg
add
xor
mov
mov
mov
mov
jmp
push
je
xchg
pusha
cwde
cmp
mov
(bad)
fadd
test
jle
dec
or
push
or
mov
dec
jmp
inc
mov
dec
or
rol
xchg
xor
jae
into
mov
jnp
test
out
or
lock
xchg
add
(bad)
xor
cdq
xchg
lods
sbb
or
clc
fcomp
hlt
push
in
mov
push
xchg
cmp
movs
fs
pusha
rcl
sbb
xchg
int3
clc
push
mov
aas
std
pop
cwde
sub
mov
jo
dec
mov
icebp
pop
movs
jns
in
mov
mov
inc
das
rcr
fnsave
jnp
je
dec
aas
outs
xchg
push
shl
mov
fcmovb
dec
ja
(bad)
mov
cmc
mov
and
cmp
pop
cmp
loope
pop
out
mov
cmp
es
in
shl
and
mov
mov
(bad)
test
ss
sahf
xor
stos
push
cli
lds
adc
das
pop
into
icebp
scas
clc
mov
pop
pop
fcomp
sub
nop
dec
popf
pop
fsubr
out
jae
or
in
rcl
ror
cmp
outs
inc
cwde
sub
inc
jmp
(bad)
cmp
add
cs
ss
sbb
inc
pop
jne
shl
and
mov
mov
mov
mov
xchg
cmp
inc
loopne
inc
movs
rcl
aam
pusha
stos
xor
xchg
outs
aaa
jno
(bad)
push
jnp
clc
and
cdq
pop
inc
push
xchg
sub
shl
xor
cmp
dec
add
ds
xchg
movs
lea
stc
push
mov
mov
mov
or
inc
pop
jle
popa
pop
cmp
xlat
mov
mov
cmp
jbe
jns
inc
retf
mov
mov
push
or
adc
xlat
push
sbb
outs
add
ror
in
or
fwait
mov
sub
sti
push
icebp
scas
call
adc
adc
inc
(bad)
pop
cmps
or
ret
mov
call
(bad)
and
ins
pop
out
loop
adc
sbb
xor
icebp
xor
out
mov
push
gs
sti
cmp
add
fadd
xchg
fs
fcmovnb
adc
push
stos
xor
test
pop
cmp
jl
in
aam
loope
aad
sahf
and
popa
loop
cli
fsubp
cmp
in
sahf
cwde
adc
out
jecxz
rol
loopne
mov
mov
add
int3
jae
rcl
add
mov
sbb
add
js
adc
popf
mov
mov
or
inc
and
stos
outs
sub
and
int
dec
xchg
push
ds
cdq
push
pop
shr
adc
clc
pusha
shl
gs
mov
dec
cwde
or
cwde
cs
push
xchg
pop
mov
pop
shrd
aas
sub
add
mov
mov
fistp
fimul
std
in
mov
in
mov
pop
and
mov
or
stc
out
(bad)
push
inc
dec
shr
add
pop
pusha
sub
pop
leave
loop
aam
fsub
mov
sbb
xchg
jp
pushf
inc
sub
jmp
push
dec
dec
iret
sbb
in
(bad)
js
(bad)
xor
movs
jmp
loopne
call
sub
sahf
mov
sahf
sbb
pop
xor
add
cmps
bound
dec
dec
push
xor
or
stos
jns
dec
nop
sbb
inc
push
(bad)
mov
ja
movs
(bad)
xlat
fsub
pop
mov
std
adc
add
push
out
sar
(bad)
push
icebp
repz
fisubr
and
aaa
xor
pop
mov
lock
in
je
retf
jmp
push
(bad)
ss
and
fistp
adc
in
add
out
jns
mov
mov
push
push
sub
jecxz
and
(bad)
push
sub
aad
mov
shr
cld
std
sar
sbb
xor
lods
shr
inc
mov
xchg
lahf
and
adc
dec
lea
imul
mov
hlt
fsub
bswap
and
jne
xor
inc
pushf
in
repz
out
or
add
out
fmul
scas
jle
mov
in
jle
ins
sbb
imul
push
test
sbb
popf
arpl
push
mov
xor
mov
lds
xor
gs
loope
aad
cwde
xor
mov
stos
scas
rcr
xchg
push
aaa
and
ins
cld
mov
xor
out
push
pop
pushf
iret
inc
les
or
scas
imul
inc
not
mov
stos
dec
push
and
dec
das
cmp
fadd
xor
nop
shl
jg
xchg
imul
or
or
inc
(bad)
and
loope
ss
dec
in
fdivr
or
sub
fstp
mov
pop
lds
cmp
out
xchg
adc
(bad)
xor
pop
add
add
pusha
pop
ds
sahf
ss
jne
xchg
cmps
inc
pop
cmps
call
or
cli
jle
xor
pop
and
or
jg
xor
bound
push
fidivr
ret
addr16
xlat
lods
add
xor
inc
lahf
xchg
inc
add
mov
iret
or
in
mov
xchg
mov
or
bound
out
ss
jmp
push
jmp
cdq
repz
test
stos
into
mov
dec
push
call
cmp
ret
(bad)
stos
add
or
out
and
xchg
dec
pop
jmp
jge
mov
repnz
int
(bad)
xor
dec
enter
push
xor
(bad)
lock
xor
pushf
inc
mov
pop
xchg
dec
arpl
mov
sub
aad
call
test
icebp
mov
mov
ins
adc
inc
fstp
inc
xchg
cmps
push
xchg
push
clc
add
ret
(bad)
xlat
xor
cmp
int
sbb
cld
out
adc
pop
xor
in
cld
xchg
push
int3
mov
jnp
inc
push
pop
jmp
dec
ins
xchg
xor
retf
xchg
inc
lea
push
iret
add
cmp
sub
mov
rcl
mov
cmp
jno
add
nop
fmul
ss
retf
push
cmps
ins
fnstenv
bound
inc
js
dec
or
mov
clc
fld
(bad)
out
ret
cld
repz
mov
outs
pop
mov
or
cmp
ins
into
cmp
mov
push
rcl
adc
dec
and
cmp
int3
mov
xchg
daa
ins
je
and
iret
or
push
aas
inc
lods
jno
xchg
jae
push
stos
add
mov
scas
and
jmp
test
int
jb
jecxz
xor
(bad)
jne
test
adc
ret
inc
into
scas
lods
int
inc
and
or
push
pop
dec
test
jne
pop
jbe
loop
cmp
sbb
xor
and
lods
data16
icebp
cmp
movs
retf
push
aaa
push
lahf
(bad)
mov
or
or
xchg
xor
add
adc
inc
xchg
or
(bad)
repz
push
inc
push
jg
mov
xor
sbb
jbe
ins
xchg
daa
daa
and
jnp
daa
xchg
jcxz
jg
hlt
xchg
pushf
sti
or
cmp
cmp
and
aad
lock
cs
popa
mov
add
ret
hlt
push
add
xlat
xor
mov
jp
and
out
push
mov
mov
cmp
push
das
push
sbb
ins
stos
xchg
mov
push
sbb
imul
sar
je
movs
nop
sub
fwait
push
fsubr
jg
les
xchg
cmp
stos
pop
and
inc
fsub
(bad)
mov
cmp
enter
jg
inc
daa
(bad)
dec
mov
data16
or
retf
shl
add
fidivr
lea
jl
jp
test
sub
add
lods
jb
mov
mov
and
jmp
jecxz
jle
sbb
aad
hlt
jnp
adc
call
jle
inc
mov
lock
adc
test
test
(bad)
pop
mov
test
sbb
mov
nop
dec
pusha
test
xchg
stc
je
rol
mov
mov
data16
fidiv
push
push
daa
popf
mov
ret
ds
or
jp
add
lods
mov
mov
retf
adc
movs
pop
pop
stos
sbb
and
pop
test
nop
pop
inc
xchg
in
ret
adc
xor
fnsave
xchg
arpl
xor
mov
jmp
(bad)
pop
jle
lods
jbe
or
(bad)
rol
int
pop
push
stos
xchg
mov
loop
in
dec
mov
or
(bad)
jb
shl
jnp
cmps
xchg
data16
add
dec
jnp
outs
test
mov
cmp
xchg
fwait
mov
mov
add
hlt
ret
sti
nop
pop
xor
inc
push
popf
cs
repnz
rol
fwait
test
and
enter
dec
pop
(bad)
sbb
or
jmp
mov
daa
in
and
mov
hlt
iret
jns
push
mov
mov
push
pop
jbe
int3
and
or
pushf
mov
cs
leave
xchg
stc
call
jns
lahf
cmps
pop
out
mov
sub
sub
adc
or
or
ror
sti
fwait
xor
push
out
ret
sbb
add
in
dec
or
mov
or
jae
mov
idiv
mov
add
repz
push
mov
lds
sahf
repnz
sub
outs
mov
test
test
cmps
jmp
fsub
sti
fcmovu
mov
or
and
ds
push
sub
loop
cwde
(bad)
add
push
test
mov
into
xchg
sbb
stos
jecxz
ds
ins
xor
out
fwait
cdq
xchg
in
mov
push
xor
popf
push
dec
imul
gs
sub
mov
lahf
shl
ror
mov
cmps
bswap
xchg
sub
xor
mov
push
xor
mov
cs
dec
jb
cdq
enter
push
sbb
sbb
push
cmp
mov
sahf
aam
or
out
es
ins
aam
sub
xchg
add
shl
jecxz
addr16
mov
mov
jle
sbb
dec
add
add
es
push
mov
mov
push
inc
(bad)
inc
push
jmp
push
push
mov
arpl
gs
dec
daa
repnz
xor
adc
mov
ds
mov
mov
inc
cs
int
push
fwait
lods
fwait
les
fiadd
and
ins
push
in
out
mov
daa
cmp
aas
cmp
adc
in
dec
mov
xchg
xchg
cdq
mov
sbb
add
lock
cmp
arpl
cmp
inc
add
pop
jp
jns
dec
dec
jg
ja
or
outs
cmp
mov
or
jns
sar
push
and
cmp
movs
inc
mov
imul
fcom
aaa
cmps
enter
shl
mov
dec
add
cmps
in
call
jmp
cmp
in
test
retf
mov
sbb
fwait
mov
jecxz
cdq
sahf
cdq
lock
add
pop
test
je
cdq
and
sub
push
sti
push
sbb
push
mov
lods
call
je
das
ret
arpl
bound
outs
fwait
mov
test
cli
aas
iret
push
xchg
pop
and
jne
push
ds
out
jo
popw
icebp
out
adc
rol
out
js
stc
mov
rcr
(bad)
stc
cmp
adc
xor
cmc
adc
add
jmp
dec
into
cmp
sub
dec
call
jo
sti
adc
fisttp
cmp
call
bound
mov
xor
movs
inc
mov
sub
into
xchg
(bad)
add
shr
xchg
mov
jbe
repz
xor
popa
sbb
retf
cmps
dec
push
add
(bad)
pop
or
shr
or
inc
dec
out
and
jno
prefetch
xchg
dec
fidiv
or
mov
ror
jne
cmc
ss
push
iret
adc
add
fdiv
dec
movs
repz
jo
pop
or
inc
jo
les
cmps
lsl
cli
xchg
ds
adc
pop
and
push
mov
lea
cmp
push
cld
(bad)
bnd
jno
adc
sub
test
popf
mov
lea
std
pop
dec
mov
sub
adc
xchg
pop
fprem
sbb
in
xchg
inc
xor
and
pop
jne
cmp
cs
retf
dec
shr
cmp
adc
mov
movs
xor
aad
fnstenv
leave
aad
hlt
jae
scas
push
lods
fdivr
dec
xchg
das
sub
add
lods
imul
pop
xchg
(bad)
call
test
jbe
lds
dec
leave
into
pop
rcl
push
les
or
mov
fwait
inc
outs
mov
or
test
arpl
aaa
adc
sbb
in
xor
arpl
push
mov
add
push
jmp
cwde
aad
outs
into
div
xor
das
mov
dec
(bad)
xor
pop
add
cmp
adc
into
sub
mov
stos
lods
adc
js
mov
neg
adc
loopne
and
stos
jl
call
lahf
aad
mov
outs
call
mov
xchg
inc
js
outs
clc
hlt
icebp
leave
out
pushf
wbinvd
inc
leave
scas
sbb
jmp
out
add
pop
cmp
mov
pop
push
xchg
pop
(bad)
addr16
or
jp
stos
mov
mov
sahf
stos
cdq
nop
xor
push
sbb
xor
lods
sbb
xchg
adc
aad
sti
addr16
inc
popf
fcompp
pop
xchg
push
xor
or
mov
jmp
adc
dec
add
push
add
cmps
cmp
mov
sub
xchg
and
test
adc
and
pop
mov
ss
outs
ret
jl
(bad)
(bad)
inc
adc
pop
popf
test
es
inc
adc
pop
dec
fwait
mov
pop
loopne
xchg
mov
ja
xchg
popa
in
push
pushf
pop
in
xchg
add
mov
and
jmp
test
push
rol
inc
test
jecxz
jmp
adc
push
retf
and
inc
xchg
sti
xchg
pop
mov
mov
pop
mov
mov
mov
pop
clc
pop
imul
or
loop
dec
retf
les
add
iret
push
lods
pop
xchg
icebp
pop
dec
jbe
test
xchg
or
jns
pop
mov
adc
mov
add
jmp
sub
jle
cmc
pop
push
adc
jmp
cwde
stos
sbb
inc
push
or
ret
pop
gs
xchg
mov
adc
jl
fsub
dec
pop
jne
dec
or
mov
sbb
xchg
xchg
call
mov
add
mov
pusha
inc
or
mov
inc
jae
mov
(bad)
fsub
push
bound
outs
and
push
push
lahf
mov
out
outs
add
inc
leave
les
mov
inc
arpl
mov
repz
mov
or
adc
mov
xor
rcr
or
mov
cli
(bad)
das
jp
xor
mov
dec
shr
mov
or
bound
mov
mov
and
movd
enter
fld
cmps
hlt
jmp
out
ret
inc
add
test
adc
cmp
mov
jmp
iret
js
sbb
inc
or
popf
xor
aas
ins
cld
test
pop
push
(bad)
mov
inc
xor
mov
loopne
ds
jns
pop
xchg
push
push
or
inc
test
xlat
lods
xor
dec
push
ins
hlt
daa
pop
or
retf
sbb
sub
pop
jmp
adc
ds
or
rcr
sbb
xchg
cdq
sub
xchg
out
stos
ret
sub
sahf
es
in
into
cmp
mov
and
faddp
dec
cmp
jbe
(bad)
rol
cmp
pop
dec
lock
inc
xor
in
and
(bad)
iret
cld
repz
sub
movs
mov
push
(bad)
and
cmp
jno
pop
sbb
mov
int
cmp
push
hlt
inc
fdiv
mov
mov
push
mov
out
shr
imul
pusha
cmps
sub
rol
push
inc
data16
mov
xchg
add
pop
cmp
es
jge
xchg
cmp
shl
cmp
imul
cmc
dec
and
repnz
shr
sbb
mov
fwait
xor
fcomp
dec
test
movs
xchg
pop
jp
ret
iret
es
mov
pop
mov
xchg
inc
loopne
sub
cs
pop
dec
pop
mov
ds
fnstenv
leave
mov
lods
pushf
push
adc
mov
je
pushf
and
movs
fld
mov
das
jne
das
push
rcr
sbb
hlt
inc
aam
mov
ins
mov
push
ror
aad
inc
sub
out
sub
push
shr
hlt
add
ss
push
push
pop
shl
or
(bad)
mov
dec
or
jmp
ret
pop
adc
dec
mov
ffree
xchg
pop
outs
jns
popf
les
sbb
sub
and
test
or
stc
popa
mov
fst
ss
fcom
dec
mov
out
retf
shl
jmp
nop
ins
push
mov
cmp
rcr
bound
call
aad
(bad)
retf
out
aam
mov
sub
mov
mov
jnp
adc
int
xchg
xchg
aaa
dec
cld
mov
add
mov
in
sub
jmp
add
shl
sub
in
adc
xchg
inc
or
cmp
cld
iret
outs
fisttp
cmp
loopne
mov
add
xchg
dec
mov
sbb
(bad)
cmc
mov
sbb
xor
inc
out
xor
call
pop
sbb
mov
mov
and
mov
cmp
and
mov
jecxz
and
aas
shr
and
gs
sub
daa
push
adc
adc
cmc
push
lods
scas
sbb
mov
add
imul
jl
add
and
mov
fwait
jns
or
gs
mov
dec
push
sub
or
imul
std
pop
pop
rep
mov
outs
mov
mov
shl
cmc
push
pop
mov
in
adc
mov
jmp
sbb
push
fcomip
scas
jecxz
adc
xchg
xchg
imul
outs
dec
jne
pop
push
arpl
push
aaa
sub
and
hlt
dec
pop
adc
mov
(bad)
push
movs
loopne
jmp
fincstp
not
jnp
sbb
popf
mov
mov
jo
push
mov
jge
cwde
dec
or
jbe
das
adc
mov
pop
push
cmp
mov
jg
mov
sbb
dec
add
push
pusha
jl
es
and
mov
sub
lea
int
inc
repz
push
sbb
int
dec
retf
jbe
icebp
sub
mov
pop
shl
ds
mov
jle
jmp
push
jne
or
pop
sbb
sbb
lahf
ja
fs
push
fistp
scas
or
stos
pop
sbb
loope
pop
repz
sub
and
jo
test
rcl
out
jge
fdivrp
sbb
rcr
dec
imul
test
mov
jle
imul
sahf
fnstcw
cmp
sbb
popf
sbb
mov
ins
mov
sbb
and
push
daa
outs
(bad)
sub
loopne
mov
enter
fcmovne
add
shl
pop
sub
adc
adc
das
in
inc
cmp
fisttp
inc
shl
dec
std
lahf
xchg
out
jno
jp
ret
loopne
mov
pop
pop
cli
inc
push
add
sub
pusha
clc
cmp
xor
test
hlt
stos
and
shl
mov
push
pop
jl
sub
adc
push
cmp
push
call
mov
mov
jmp
or
dec
fmul
jge
sbb
cmp
adc
push
nop
lea
aaa
sti
and
push
add
in
scas
sbb
(bad)
xor
jge
mov
jp
and
jge
mov
mov
loop
cmps
sub
xchg
sub
add
xchg
ja
aas
mov
and
movs
fld
aam
test
leave
mov
jl
nop
retf
xlat
or
mov
push
sub
je
jge
add
aas
jge
scas
jae
xor
ja
mov
dec
or
and
cmps
xchg
cmp
xor
lds
push
sbb
cmps
scas
xchg
jb
mov
inc
(bad)
pop
out
mov
add
repz
mov
fisubr
call
xchg
loop
pushf
icebp
(bad)
sar
inc
xchg
repz
fist
jp
cs
repz
cmps
adc
push
fptan
and
dec
movd
mov
stos
fidiv
add
add
retf
hlt
mov
in
je
pop
inc
mov
fsubr
lea
or
inc
mov
cld
pop
ds
sub
pushf
push
mov
push
and
mov
adc
cmps
pusha
add
in
scas
sub
imul
pop
hlt
pop
cdq
dec
jo
mov
jecxz
mov
sbb
add
stos
cli
(bad)
ror
movs
(bad)
addr16
js
test
or
(bad)
xchg
or
ins
loop
sti
mov
shl
jnp
int3
jmp
aad
push
mov
xchg
(bad)
int
mov
call
out
(bad)
mov
outs
ret
adc
xchg
sbb
push
xor
out
cmp
out
adc
sub
mov
shr
inc
jmp
out
test
int
mov
jb
xchg
mov
xor
not
ror
sub
ja
and
cdq
adc
mov
int
dec
sar
jns
nop
aad
xor
sbb
outs
xchg
mov
cmc
sub
mov
inc
adc
jmp
int
xchg
inc
xlat
fs
loop
imul
mov
cs
repz
cmp
fnstenv
aaa
xchg
retf
jnp
(bad)
sar
pop
add
or
(bad)
cmp
inc
repnz
dec
lods
aad
sub
shl
sbb
jecxz
sbb
xchg
je
pop
(bad)
pop
jbe
(bad)
dec
call
fnstsw
or
clc
xchg
add
in
xchg
sbb
nop
repz
jmp
or
inc
push
sub
(bad)
mov
nop
retf
leave
pop
sbb
push
add
and
pop
jecxz
sti
pop
mov
cmp
call
cmp
jno
mov
dec
shr
iret
inc
sbb
out
not
inc
arpl
popa
pushf
imul
dec
or
xchg
test
push
jmp
push
xlat
push
in
rcr
retf
mov
xchg
out
in
aam
movs
hlt
mov
out
push
dec
aaa
aas
sar
bound
inc
inc
into
xor
xchg
sbb
xchg
mov
xor
jecxz
test
jbe
jne
dec
cmp
lods
sbb
test
xor
push
outs
loopne
mov
sbb
inc
fwait
rol
dec
or
push
xchg
push
scas
jae
xchg
pop
pop
mov
sar
iret
or
cmps
mov
cmps
dec
retf
pop
or
ret
or
adc
lea
mov
xor
inc
(bad)
(bad)
aaa
sub
mov
loop
xchg
ins
or
movs
xor
sub
xchg
pop
and
jecxz
xchg
jo
shr
xor
rcl
mov
pop
out
mov
or
xor
sub
fmul
and
loop
sbb
movs
jl
mov
lds
inc
dec
ds
enter
cli
jecxz
cmps
push
add
shr
mov
pop
pop
xchg
test
scas
cmp
or
cmp
cmc
or
mov
inc
cli
dec
loopne
std
aam
cmps
mov
lods
fldcw
cmps
bswap
inc
jmp
mov
mov
sub
cmp
les
push
mov
xlat
inc
sar
cmp
pop
xchg
aas
test
leave
in
or
js
(bad)
cmp
retfw
(bad)
dec
add
mov
jl
dec
sbb
dec
cmp
sub
test
in
mov
mov
cmp
in
mov
and
or
sub
rcr
jnp
out
call
xchg
cmp
mov
and
push
fstp
dec
xor
addr16
xlat
mov
jl
sbb
sbb
dec
and
or
ret
test
sbb
xor
add
out
mov
pop
jp
dec
popf
cdq
mov
test
int3
jle
or
mov
xchg
mov
push
or
inc
mov
shr
mov
xchg
cmp
jmp
add
lahf
ffreep
les
xor
addr16
cld
popf
cmp
mov
pop
(bad)
dec
test
adc
jge
dec
pop
sbb
xchg
push
clc
ret
lods
cmp
xor
mov
add
pop
jl
retf
js
(bad)
pop
ins
aad
jmp
(bad)
(bad)
pop
loope
scas
(bad)
ins
adc
xor
dec
push
mov
in
outs
sub
in
loop
retf
xor
icebp
bound
and
push
jae
mov
mov
pop
mov
sbb
jns
pop
je
ins
mov
adc
lock
adc
dec
dec
jae
stos
sub
int
fwait
pop
ins
repz
aaa
mov
jmp
dec
shl
loop
jno
fwait
ds
test
push
push
xchg
mov
xchg
xor
or
pop
and
(bad)
dec
scas
popf
lock
mov
jl
and
inc
jbe
icebp
sbb
xlat
and
in
scas
sub
test
repz
add
lock
add
rcl
and
mov
mov
add
ror
push
cmp
jmp
jb
cli
test
(bad)
push
lds
ins
aam
mov
rcr
shr
inc
(bad)
or
jmp
jae
push
inc
push
cs
and
stos
dec
push
push
lods
xor
push
mov
shr
jno
cmc
aaa
cdq
cmp
pop
aad
(bad)
pop
dec
enter
mov
es
mov
cmps
fsubr
hlt
cdq
xchg
addr16
in
inc
push
lahf
inc
les
sar
pop
pop
inc
pop
stos
rcr
mov
stc
jecxz
push
xchg
push
or
test
lea
ds
lods
push
mov
push
mov
cmps
mov
leave
test
mov
inc
neg
retf
adc
sahf
inc
outs
int3
jl
lock
adc
dec
inc
push
rol
pop
mov
lods
inc
inc
cmp
push
(bad)
lock
int3
mov
int3
mov
cmp
jmp
mov
imul
int
add
or
inc
out
mov
dec
sub
pop
gs
inc
scas
xor
mov
dec
jecxz
mov
push
jb
in
adc
inc
pop
cmp
and
scas
adc
sti
push
push
pop
dec
stos
xor
xor
dec
and
jmp
(bad)
in
ficom
sub
cdq
and
xchg
sbb
aas
jmp
add
mov
std
movs
sahf
ror
mov
fisubr
fcomi
xchg
mov
(bad)
aad
das
mov
repnz
test
sbb
and
jmp
push
push
out
cld
scas
inc
idiv
mov
push
ins
aas
pop
adc
cmp
mov
pop
jo
add
cmps
mov
inc
lods
pop
rcr
stos
cli
repnz
cmp
inc
mov
adc
push
mov
retf
xchg
in
push
mov
lock
out
cmp
push
sub
loop
and
cmp
jmp
js
cmps
clc
jbe
dec
dec
pop
stc
inc
xor
jne
xchg
call
imul
fwait
inc
call
add
add
jl
jb
(bad)
and
stos
loop
and
xor
push
push
sahf
cmp
xor
pop
call
mov
xlat
clc
mov
fsubr
cmp
cmp
popa
or
push
mov
mov
xor
jae
loop
popf
add
push
ins
fld
jmp
jecxz
ja
pop
mov
xchg
jmp
outs
jb
mov
(bad)
shr
div
gs
mov
adc
std
sbb
inc
jp
stc
jle
(bad)
icebp
stc
and
mov
mov
xor
cmp
xor
pop
mov
xchg
in
push
repnz
cld
ins
sub
int
pushf
adc
ss
push
cmp
adc
and
push
xchg
jmp
mov
call
popf
mov
push
pusha
mov
mov
sbb
cld
jg
xchg
test
adc
dec
scas
cmp
(bad)
loopne
(bad)
xchg
sar
leave
adc
test
mov
mov
jp
add
out
movs
sahf
lds
sub
cmp
daa
out
and
loopne
cmp
shl
sub
iret
push
sub
cmp
shl
cmp
and
std
xor
icebp
inc
cmp
(bad)
sub
cmp
in
jo
scas
jp
popaw
cli
jmp
aaa
adc
or
aam
sub
leave
mov
mov
dec
sub
shl
pop
aad
jno
xchg
jo
cld
jmp
or
loope
lods
(bad)
sbb
add
jmp
adc
inc
xchg
push
pop
mov
cmp
fldenv
and
add
inc
outs
mov
cmp
mov
sbb
sbb
xlat
(bad)
xchg
dec
repz
mov
hlt
ins
sbb
shr
cld
cmp
call
push
inc
jbe
push
in
add
add
mov
push
dec
mov
sbb
mov
call
pop
das
pop
cmp
movs
push
mov
popf
or
call
and
lods
int3
lea
sub
mov
sub
or
or
aam
pop
xchg
sar
rcl
add
scas
pop
xchg
test
inc
inc
inc
ins
and
ret
inc
mov
rcl
lock
inc
jp
fidivr
mov
inc
jmp
mov
dec
dec
lods
aaa
and
icebp
hlt
push
lods
out
clc
jmp
jmp
sbb
dec
(bad)
dec
pop
nop
push
nop
and
(bad)
das
(bad)
mov
repz
sub
pop
mov
dec
add
and
mov
and
test
int
mov
mov
dec
daa
arpl
jg
js
adc
jl
xchg
sbb
pop
sbb
popa
xor
out
mov
out
fsubr
and
inc
stc
cmc
add
push
xchg
pop
dec
fmul
fsub
fldcw
dec
add
dec
test
cmps
cs
ins
(bad)
lea
js
sbb
sub
xor
jl
or
mov
cdq
popf
cmp
sti
xor
scas
imul
inc
fisubr
int3
cmp
cwde
xchg
push
pop
or
push
mov
(bad)
adc
daa
mov
aaa
test
scas
xor
jmp
shr
jecxz
sub
sbb
push
test
repnz
and
cli
fidiv
dec
cmp
mov
xchg
imul
xlat
data16
(bad)
or
xchg
push
js
js
leave
adc
jle
dec
jo
push
xchg
aad
pop
sub
movs
inc
mov
xchg
jle
aam
dec
sbb
ja
lea
ss
in
lahf
int
mov
int
mov
(bad)
sub
inc
mov
lea
pop
inc
pop
(bad)
mov
mov
push
cmp
mov
hlt
fs
rcl
addr16
sbb
sub
xchg
repz
ret
add
into
leave
push
cmp
and
jp
movs
pop
and
clc
mov
ret
pop
xor
jns
fild
leave
and
mov
push
mov
idiv
and
sub
mov
adc
jae
jno
cmp
push
xchg
inc
cmc
sbb
pop
jae
scas
push
cmps
pop
jp
jmp
push
gs
ins
sub
pop
(bad)
fnstenv
mov
push
in
in
xchg
fld
xchg
xchg
pushf
and
ja
int3
aad
ret
cmps
mov
lea
inc
pop
mov
test
loope
pop
or
jo
sbb
inc
popa
fldl2t
sbb
jae
or
inc
push
jl
aaa
cmp
fidiv
aam
ds
scas
push
lock
(bad)
scas
fs
fistp
sub
xchg
cmp
ja
mov
in
jbe
jl
mov
(bad)
xchg
and
imul
dec
mov
xor
ror
fdiv
test
scas
jmp
add
and
xor
sti
nop
and
ret
mov
shr
push
out
lock
in
mov
adc
lahf
dec
adc
(bad)
stos
fiadd
jns
jg
pushf
mov
jl
pop
jp
in
mov
(bad)
adc
scas
inc
adc
mov
lods
cmps
into
dec
(bad)
mov
push
out
and
aaa
and
mov
cs
ret
ror
repz
dec
outs
push
mov
retf
pop
mov
and
sahf
sub
jecxz
lds
inc
inc
aam
popa
stos
dec
data16
mov
out
out
bound
inc
push
imul
(bad)
repz
fild
sahf
mov
dec
inc
mov
xlat
hlt
adc
cwde
xor
push
mov
ins
or
cdq
gs
xchg
std
adc
and
or
lea
retf
sbb
clc
xlat
lods
ins
shr
push
push
push
push
faddp
fcmovb
in
push
es
out
sub
fiadd
lock
mov
sbb
xchg
add
cmps
push
xor
xchg
sbb
mov
sbb
sub
(bad)
mov
sub
daa
and
loop
and
or
add
sub
ins
add
cmps
stos
outs
test
stos
pushf
sub
add
pop
sub
dec
shr
loop
jmp
stos
cmp
into
out
mov
mov
sbb
xchg
mov
push
(bad)
ja
mov
int
or
stc
cmp
and
xor
mov
cmp
or
sub
imul
dec
hlt
push
and
adc
jae
mov
int
arpl
mov
jns
std
dec
nop
sbb
sub
mov
icebp
bound
iret
fld
movaps
stos
cs
or
jecxz
(bad)
aaa
push
in
add
outs
aaa
and
push
mov
mov
mov
cmps
add
lock
shr
or
xchg
adc
scas
jb
mov
fdivp
sub
lahf
loop
cdq
or
pop
push
mov
into
cmc
cmp
out
out
test
enter
je
sub
pop
or
mov
fadd
jle
test
xchg
sub
pop
add
std
fsubr
xor
add
push
jecxz
xchg
mov
daa
pop
mov
aaa
dec
pop
ret
add
xor
and
push
adc
xor
fxch
outs
mov
iret
mov
cmp
out
aaa
enter
sub
scas
test
das
in
inc
inc
scas
outs
pop
retf
leave
xchg
pop
sub
enter
jo
(bad)
int
imul
sub
sahf
rol
fcmovu
or
shr
mov
or
pop
xlat
mov
scas
je
add
lock
sub
ja
mov
movs
dec
sub
pop
xchg
fidivr
sbb
mov
jbe
dec
sbb
outs
cmp
idiv
dec
pop
adc
add
clc
fidiv
jnp
sbb
mov
movs
jmp
stos
out
(bad)
jmp
fwait
leave
pop
adc
loopne
aam
cmp
add
cmp
out
cld
sub
shr
push
push
and
sbb
and
retf
xchg
xor
pushf
gs
xchg
leave
leave
call
xchg
cmc
cmps
mov
xor
xchg
adc
mov
nop
xchg
pop
sub
sar
xchg
inc
ins
xchg
jmp
in
mov
mov
xchg
inc
cmp
int3
popf
mov
outs
pop
pop
aad
pop
inc
sti
rcr
int
push
jne
adc
cmp
mov
mov
sbb
push
cmp
or
in
addr16
imul
dec
mov
dec
fdivr
sbb
push
xchg
mov
mov
(bad)
add
pusha
fneni(8087
dec
push
fistp
movs
in
inc
xor
xor
sbb
rol
jmp
in
mov
sub
cmp
shl
movs
std
xor
mov
fsub
sbb
cs
outs
loope
leave
ss
aaa
shr
push
adc
rcl
dec
xor
adc
daa
dec
lock
test
sub
mov
push
mov
mov
push
movs
dec
push
cmp
daa
rcl
mov
push
ja
jg
mov
fnstcw
push
sbb
shl
sbb
xchg
pop
loope
jo
lea
xor
pop
call
ss
es
js
jbe
repz
in
hlt
data16
dec
pushf
mov
dec
cdq
mov
outs
shr
fwait
nop
pusha
xchg
nop
hlt
(bad)
iret
adc
and
jmp
or
out
push
push
sbb
or
push
lods
xchg
push
hlt
jo
or
add
inc
into
jg
pop
jno
or
sub
or
pop
and
and
loopne
dec
vmwrite
ror
add
xlat
inc
test
popa
aad
fs
pop
sub
cwde
test
cli
add
sub
add
aas
hlt
push
jae
mov
ja
and
mov
and
add
pop
lods
inc
push
test
mov
cli
or
inc
mov
or
add
jno
pusha
mov
sbb
xor
sbb
add
push
cld
xor
sbb
shl
stos
sahf
sbb
scas
pusha
loopne
push
jecxz
mov
dec
xor
mov
mov
xor
fild
ins
or
cmp
out
adc
mov
cwde
pop
or
cmp
pop
sbb
in
add
xchg
jp
enter
lock
aam
xlat
sub
loope
(bad)
mov
nop
pop
ja
sub
xchg
iret
cmp
sbb
mov
retf
cmp
test
bnd
(bad)
fcmovnbe
sub
jmp
popf
pop
sahf
fsub
dec
or
fdivr
mov
not
ds
(bad)
pop
push
push
cmp
adc
cmps
adc
mov
not
inc
ins
cmp
lea
mov
lock
xor
or
and
add
cmp
pop
(bad)
jecxz
outs
data16
add
inc
or
xor
outs
test
imul
mov
retf
dec
cmp
fucom
push
mov
mov
and
xor
fstp
pushf
out
(bad)
pushf
sbb
pop
inc
mov
dec
adc
and
mov
push
jmp
cs
jno
xchg
mov
std
inc
xor
out
dec
or
add
outs
adc
sbb
jg
stos
jmp
push
arpl
jno
inc
xchg
and
dec
mov
mov
jp
add
xor
xor
out
xchg
enter
retf
sub
jmp
outs
mul
call
adc
mov
mov
es
or
jne
shl
add
sbb
adc
arpl
outs
aam
sar
rcr
and
dec
dec
pop
add
stos
lds
cmp
cwde
stos
mov
test
ja
sub
jmp
jge
iret
stc
mov
sbb
jp
gs
fisub
stos
pop
imul
test
mov
add
out
inc
repz
inc
push
cs
mov
cmps
jmp
pop
out
add
lods
jp
lods
dec
pop
sbb
mov
(bad)
cli
inc
push
mov
ficom
movs
es
mov
mov
pop
mov
jp
xor
cmps
sbb
mov
leave
int3
sbb
stc
cmp
push
push
mov
cmp
jmp
stos
nop
inc
xor
sub
mov
add
fs
jno
loopne
sub
mov
(bad)
mov
mov
inc
jmp
mov
or
and
xor
popaw
or
arpl
(bad)
mov
jge
dec
pop
ret
mov
adc
sbb
sub
sub
mul
mov
test
(bad)
and
in
test
sbb
inc
(bad)
push
les
hlt
push
push
pop
cmp
sub
xlat
pop
call
mov
mov
inc
mov
sbb
scas
sub
(bad)
(bad)
push
jns
mov
adc
xor
inc
pop
xchg
imul
aas
xchg
push
and
jo
push
addr16
repnz
push
jo
cmp
inc
cmp
dec
mov
cmps
int
and
ds
pop
cdq
cmc
in
test
ror
sub
mov
fs
fdivr
addr16
js
mov
out
jmp
(bad)
out
xor
add
xchg
shl
jmp
and
jmp
xchg
popa
(bad)
imul
not
lea
call
jae
sbb
dec
out
jae
mov
bound
out
out
lea
out
sbb
pop
neg
inc
pop
aaa
js
out
test
aam
xchg
cli
nop
mov
add
sbb
out
sub
jns
call
mov
jb
out
or
mov
inc
or
popf
dec
fadd
sub
in
leave
and
jmp
dec
out
add
fs
popa
mov
popf
outs
sbb
call
lds
enter
jbe
push
xor
inc
mov
cmp
add
ja
test
(bad)
dec
rol
mov
mov
retf
inc
push
sbb
(bad)
jbe
leave
pop
(bad)
ja
mov
sbb
fnstenv
xchg
movs
inc
sbb
mov
or
fstp
or
mov
mov
mov
shr
out
or
dec
and
xchg
fwait
das
jns
push
cdq
movs
inc
mov
movs
adc
sar
leave
sbb
push
pop
out
loop
mov
cmp
imul
or
cld
outs
ins
cli
jb
imul
bnd
mov
push
mov
sahf
xchg
dec
out
cmp
fstp
cmp
cwde
scas
mov
push
sar
fwait
cmps
add
and
mov
lods
clc
or
push
cdq
cdq
mov
inc
inc
test
pop
and
mov
pop
xchg
xor
add
call
es
call
cmp
cli
mov
scas
sahf
add
mov
xchg
popa
aad
aaa
push
test
ja
stos
call
xor
idiv
dec
mov
int3
mov
shl
iret
inc
out
test
pop
repnz
ret
rol
rcr
sub
outs
xchg
scas
dec
jbe
out
iret
jnp
or
popf
lds
adc
adc
push
mov
adc
(bad)
dec
jbe
rol
mov
inc
btc
aam
or
xor
push
iret
ficomp
daa
retf
ss
xchg
or
sbb
xchg
mov
mov
cmps
jl
jg
pop
movs
retf
mov
mov
lock
das
shl
pop
stos
mov
fst
cwde
sbb
cmp
arpl
sub
or
adc
shl
add
hlt
imul
popa
xor
call
cli
shr
xor
inc
mov
mov
clc
in
or
pop
aad
jmp
fsubr
jo
lds
pop
fadd
out
jae
mov
jmp
gs
cmp
push
inc
push
mov
xchg
push
add
jmp
jns
cdq
xchg
(bad)
xor
mov
popa
jmp
add
dec
outs
cld
or
jmp
push
nop
cmp
fs
mov
stos
test
jo
and
inc
stos
scas
stos
push
jp
dec
push
in
lods
nop
xor
sbb
mov
mov
shl
inc
mov
call
ret
add
and
fst
mov
jnp
outs
jae
imul
cwde
ins
cmp
cmp
add
popa
pop
mov
push
mov
push
push
xor
push
lock
pop
mov
shr
sar
enter
fild
shl
cmp
out
retf
inc
cmps
mov
add
and
adc
nop
push
add
call
je
pop
jle
rcr
shr
pop
jae
popf
add
xor
pop
out
cmps
es
sbb
sub
push
aam
shl
fisttp
lahf
adc
(bad)
pop
mov
mov
xchg
mov
icebp
adc
xchg
pop
sbb
sbb
sbb
sub
and
jge
dec
dec
dec
mov
push
cdq
and
inc
int3
std
fwait
mov
inc
xchg
dec
mov
jp
mov
sbb
cmp
ins
add
enter
mov
inc
in
int
sbb
stc
sbb
fisttp
inc
lock
mov
dec
movs
mov
es
cmps
dec
ds
shr
int3
xlat
sar
add
mov
jmp
aam
mov
jns
sar
popa
jnp
xor
fiadd
ja
xor
cmp
add
mov
jb
into
inc
add
addr16
stc
xchg
cmp
push
std
imul
jbe
mov
dec
sub
push
fmul
pop
xor
call
pop
push
in
mov
dec
jmp
shr
addr16
int3
pusha
pop
add
mul
xchg
inc
xor
and
mov
push
cli
shl
ins
sbb
gs
cld
stos
inc
retf
shl
les
xor
adc
adc
ror
pop
sahf
mov
nop
adc
pop
xchg
push
add
and
add
and
es
or
dec
mov
loopne
rcl
and
repnz
mov
xchg
shl
xchg
mov
rol
imul
pop
daa
push
cmp
test
in
ja
add
retf
inc
push
(bad)
repz
std
ret
push
push
call
dec
test
inc
mov
or
out
xor
rol
inc
pop
add
packsswb
inc
fwait
mov
or
imul
push
cmp
pop
xchg
xchg
clc
push
ss
or
push
jne
inc
xchg
ja
and
(bad)
stc
shl
ja
and
adc
loope
mov
and
jno
mov
out
loopne
movs
push
sub
push
pop
imul
xor
js
clc
cmp
fbstp
fist
loopne
sti
(bad)
and
movs
jp
dec
shl
mov
cmps
xchg
sahf
xchg
fisubr
popf
ins
mov
out
ret
mov
xchg
jmp
iret
jb
or
test
mov
or
std
call
sub
jge
pop
sahf
pop
retf
mov
xor
clc
std
mov
or
ss
cmp
fstp
test
fcom
mov
add
inc
fsub
sbb
pop
adc
nop
pop
sar
inc
movs
cmp
test
arpl
and
push
enter
sbb
xchg
aad
ret
aaa
adc
and
xor
adc
pusha
outs
adc
lods
repnz
shl
repz
pop
cmps
scas
jmp
mov
cmps
fcom
ret
mov
aad
fwait
test
pop
inc
xlat
outs
or
out
mov
cmps
push
mov
sbb
xor
sar
fdivr
fsubr
and
adc
pop
js
(bad)
arpl
(bad)
lock
ja
das
jae
fst
aaa
mov
rcl
push
fisub
lds
mov
mov
and
add
test
in
sbb
push
pushf
push
mov
mov
stc
mov
fnstsw
in
and
mov
xor
cmps
cdq
pop
std
or
ins
fld
test
test
mov
dec
scas
icebp
sub
push
mov
lods
call
test
jmp
fistp
retf
pop
pop
not
or
repnz
fs
shl
add
mov
scas
fwait
or
rcr
push
cs
cmp
push
fstp
int3
sbb
mov
add
xlat
mov
and
mov
pop
imul
or
mov
icebp
mov
je
movs
lock
xor
xor
xor
mov
sar
pop
jb
mov
or
setne
or
movs
xchg
adc
ins
into
xlat
inc
adc
and
(bad)
test
pop
shr
and
addr16
shr
adc
mov
out
je
pop
mov
adc
sub
retf
sbb
xchg
sar
imul
mov
lods
push
adc
push
lods
es
jg
addr16
repnz
imul
dec
mov
lods
scas
movs
inc
push
mov
dec
mov
ins
cmps
xor
(bad)
out
sar
push
cmc
jo
not
test
clc
sbb
test
call
xchg
lea
or
mov
adc
mov
outs
cwde
push
imul
rol
js
fs
sbb
cmp
nop
add
pop
in
lea
cmp
inc
pop
mov
push
sub
jbe
push
in
movs
cmp
jl
pop
stos
jecxz
mov
dec
cld
outs
jmp
gs
sub
fsubr
in
mov
addr16
sub
mov
ret
inc
and
cli
sub
dec
dec
addr16
aaa
shl
dec
push
dec
repz
fstp
fiadd
pop
ret
cmp
ret
icebp
add
mov
movs
and
loope
xor
sub
sbb
scas
gs
neg
or
imul
add
xchg
ja
sahf
pop
inc
adc
pop
not
stos
pop
mov
pushf
movs
push
scas
int
and
movs
xor
add
lods
in
cmp
cmp
xchg
imul
cmp
hlt
pop
adc
or
pop
mov
ins
xor
out
dec
jno
xchg
sti
mov
mov
loop
mov
inc
fstp
es
dec
add
inc
outs
mov
stc
mov
jmp
push
mov
sub
ds
jg
icebp
in
jmp
imul
pxor
fisttp
jp
sbb
call
dec
adc
sti
xchg
iret
pop
out
cmp
jo
xchg
bound
jno
xor
sbb
inc
rcl
xchg
xchg
iret
inc
lds
outs
movs
icebp
and
xor
mov
lds
inc
mov
xchg
jmp
rcr
mov
sub
int
mov
dec
pop
add
in
pop
jle
sbb
rcl
inc
cmp
(bad)
pop
dec
mov
out
dec
dec
hlt
scas
jae
dec
mov
dec
jmp
fwait
mov
or
imul
je
pop
fldcw
scas
jno
pop
ds
jmp
loope
ficomp
(bad)
jns
test
or
leave
in
pop
lahf
mov
push
push
lea
jmp
data16
dec
int
xchg
sub
fcmovne
sbb
shr
xchg
and
pusha
call
jp
loope
retf
push
xchg
adc
mov
dec
outs
pop
and
jae
scas
adc
inc
clc
aam
leave
jns
cmps
jnp
clc
cli
cwde
idiv
mov
mov
fnstenv
in
scas
test
mul
shl
movs
and
je
xor
sub
mov
cmp
xchg
mov
and
push
inc
imul
xor
je
and
imul
jns
mov
pusha
lock
and
jns
loopne
and
inc
fnstenv
xor
test
mov
dec
pop
mov
or
ss
shl
dec
inc
les
pop
push
dec
retf
enter
ret
fisttp
or
int
push
cwde
out
int3
pop
nop
sbb
fnstenv
sar
fidiv
(bad)
jbe
xor
dec
in
(bad)
mov
pop
jne
mov
ror
inc
aas
cmp
cmps
push
arpl
adc
cmp
mov
pop
dec
mov
push
add
jae
ins
or
xor
push
inc
ret
and
jne
xor
es
xchg
push
repz
xchg
mov
ins
xor
mov
aas
test
lock
or
or
retf
addr16
cli
popf
iret
ret
sbb
push
(bad)
sub
loop
cld
or
popf
cmc
fcom
sub
retf
aas
lods
jmp
dec
mov
fist
ss
pop
cmc
fnstsw
xchg
mov
mov
mov
daa
retf
mov
adc
in
jae
mov
fdiv
add
and
add
out
and
pop
lods
push
cmp
adc
fld
in
xor
inc
(bad)
xor
jnp
imul
(bad)
repnz
xchg
inc
frstor
fs
push
fld
sti
inc
mov
icebp
js
jnp
sub
in
add
in
jl
mov
xchg
mov
stos
push
mov
jo
bound
ja
push
into
pop
xor
jno
push
mov
lods
cmp
arpl
gs
cmp
sbb
nop
not
mov
arpl
arpl
inc
mov
retf
sti
in
or
scas
loopne
stos
sbb
out
std
test
test
inc
cmps
(bad)
sahf
shl
(bad)
fbstp
lds
mov
lahf
shl
fldl2t
hlt
hlt
(bad)
scas
xor
mov
sar
push
out
je
and
adc
sub
ss
sub
mov
mov
push
js
dec
cld
xlat
jmp
jge
cmp
stos
leave
aad
xchg
stos
jne
retf
cmc
test
inc
lock
movs
in
or
out
jns
add
mov
xchg
loope
pop
jns
hlt
lock
sub
icebp
inc
jb
out
fs
mov
mov
inc
push
loop
loopne
pop
stos
jmp
cmps
fidivr
jae
daa
mov
rcl
cs
fild
loope
in
out
sub
sub
imul
repz
and
or
xchg
xchg
mov
mov
xor
icebp
mov
add
cmp
sub
mov
pop
out
enter
xchg
(bad)
push
ror
sbb
jae
xchg
cdq
cmp
fldcw
xchg
adc
out
test
enter
sbb
stc
arpl
jo
fwait
idiv
fucomp
dec
inc
ret
sbb
mov
ds
in
stc
dec
adc
stc
inc
fwait
fs
xor
push
arpl
test
addr16
mov
lods
cmps
pop
xchg
es
push
daa
cs
call
in
adc
inc
pop
jnp
mov
sbb
outs
(bad)
clc
sub
and
pop
sbb
aad
pop
mov
mov
mov
mov
cmp
mov
outs
idiv
out
or
shl
or
lock
in
movs
cwde
sbb
mov
ret
cmps
call
or
cmp
mov
push
repz
mov
mov
jmp
mov
test
cdq
mov
jb
dec
add
sbb
fsubr
cmp
push
daa
cmp
xchg
add
xor
sub
and
xor
and
arpl
push
mov
call
add
out
cmp
mov
or
lea
xchg
out
mov
div
pop
lods
je
sub
test
xlat
imul
pop
rcr
mov
pop
mov
cwde
inc
mov
aaa
bound
pushf
or
jge
cmp
jle
push
fwait
ret
xlat
add
stos
pushf
movs
test
xor
imul
fwait
mov
dec
add
cmp
add
das
(bad)
lea
dec
push
movs
in
loop
sbb
mov
arpl
dec
xor
retf
or
arpl
push
sbb
in
jae
fbld
mov
gs
into
xor
sub
ret
in
xchg
mov
cmc
or
push
mov
loop
push
sub
inc
jo
pop
push
js
bound
inc
scas
mov
xchg
xchg
jnp
pusha
sbb
xlat
fbstp
(bad)
fmulp
outs
cmp
and
fdivr
test
test
cdq
loope
ins
std
pop
fisub
ret
and
dec
sub
xchg
loopne
mov
aad
gs
jecxz
je
mov
jo
test
fbld
xchg
mov
idiv
push
adc
icebp
mov
in
mov
and
jmp
ja
std
adc
sbb
or
scas
mov
mov
test
push
out
das
nop
mov
aam
and
dec
push
xchg
pop
push
adc
pop
xchg
jle
sbb
into
arpl
jle
enter
mov
mov
lahf
add
das
xchg
and
push
pop
xchg
xchg
inc
popf
inc
dec
xchg
push
inc
mov
arpl
js
and
cld
inc
mov
das
sub
pop
push
sbb
into
stos
(bad)
lods
inc
lea
and
fwait
icebp
(bad)
fnstsw
and
rdpmc
jp
cmp
push
mov
inc
out
lahf
jnp
sub
sub
pop
pusha
daa
stos
icebp
pop
add
aam
mov
in
and
iret
push
aam
dec
fdivr
fdivr
loop
(bad)
xchg
popa
or
rol
push
mov
cmp
mov
sub
jp
mov
pushf
call
pop
or
imul
popa
push
mov
sbb
daa
pop
out
and
fisttp
cdq
aad
add
add
int
mov
dec
mov
lea
scas
int
inc
dec
sbb
cwde
ret
movs
jnp
dec
nop
adc
sbb
mov
aas
pop
push
push
pop
pop
dec
fsubrp
iret
xchg
xor
lock
inc
xor
cwde
pushf
jo
in
jp
and
jmp
or
mov
jmp
dec
cwde
mov
aam
cmp
or
cmps
add
xchg
cmp
fstp
push
cmp
out
imul
addr16
iret
pop
and
jmp
rcr
jge
pop
iret
cmps
(bad)
int3
or
sahf
inc
adc
(bad)
ds
inc
inc
mov
arpl
xchg
sub
aaa
xor
(bad)
xor
pop
jne
loopne
sub
and
ret
sbb
mov
and
mov
and
jno
sbb
adc
retf
pop
push
sets
add
mov
pop
fmul
aad
lahf
ins
pop
push
fs
add
jbe
or
xor
fwait
jg
in
jns
lods
out
add
imul
inc
loopne
push
dec
jnp
adc
push
rol
or
jecxz
push
outs
ja
lds
pop
ja
mov
jl
cs
jns
pop
sahf
add
call
mov
fwait
retf
(bad)
and
xchg
lahf
lods
mov
and
(bad)
arpl
cmp
and
add
jnp
sbb
imul
ror
xchg
pop
jp
fs
push
sar
in
imul
rcr
cmc
pop
adc
cdq
pop
dec
call
popa
mov
jecxz
or
fucomi
sub
jmp
cmps
xchg
retf
shr
pop
cwde
imul
les
or
pop
(bad)
popa
jo
imul
js
xor
or
xor
adc
cmp
fdivr
dec
xchg
aas
jb
scas
mov
pop
push
fwait
jmp
jl
inc
sbb
outs
dec
stc
or
dec
cmps
enter
jg
pop
pushf
jmp
xor
retf
retf
les
outs
mov
dec
and
imul
push
je
xchg
add
test
pop
or
das
inc
add
js
aas
lods
iret
fld
cld
and
inc
push
bound
das
xlat
xchg
push
mov
lods
out
gs
or
mov
add
xchg
inc
adc
in
cmps
(bad)
jl
mov
hlt
(bad)
cmp
scas
test
sub
mov
push
push
mov
dec
ffreep
and
call
ja
pop
add
jnp
cmc
retf
(bad)
pop
sar
pop
push
fdiv
mov
(bad)
in
sub
adc
cmp
sbb
mov
fld
cwde
test
retf
sbb
adc
push
test
push
sub
pop
push
cmp
test
mov
cmp
dec
addr16
xchg
mov
mov
(bad)
shl
ins
sub
sti
js
loopne
test
sbb
sbb
sub
push
inc
repz
ror
addr16
nop
push
nop
sbb
test
push
sbb
mov
addr16
arpl
imul
sti
std
cmp
push
(bad)
cmp
mov
outs
and
push
sti
jns
aam
fnstsw
out
mov
xchg
(bad)
cmp
inc
lods
in
movs
jnp
test
mov
aaa
cmp
mov
out
(bad)
mov
retf
es
mov
sub
out
jmp
outs
mov
jns
sub
out
pop
pop
adc
add
mov
or
push
cmp
cdq
in
(bad)
std
sti
add
pop
or
call
push
lock
mov
fild
mov
or
xchg
sub
xor
inc
test
dec
fcmovbe
pop
into
cmps
rcl
xchg
hlt
dec
jge
xchg
or
push
cld
jecxz
pop
out
inc
imul
int3
push
ficom
pop
pop
and
aas
pop
imul
pop
dec
(bad)
jo
xchg
xor
push
(bad)
xor
outs
jne
mov
pop
push
or
and
sbb
jne
outs
arpl
cmp
test
pop
push
sbb
adc
cmp
fnstsw
(bad)
cld
adc
xlat
adc
or
dec
ss
out
pop
sahf
lock
ror
in
mov
les
and
jmp
or
out
jp
pop
sub
jmp
test
xor
pop
or
push
push
ror
push
aam
mov
daa
or
cmc
mov
mov
cmps
inc
cdq
arpl
pop
mov
or
xchg
sbb
mov
test
mov
mov
enter
mov
arpl
add
movs
dec
xlat
mov
mov
loop
dec
call
push
retf
(bad)
cwde
stos
pop
adc
in
lods
sub
ret
mov
xor
aad
or
mov
xchg
fstp
pusha
outs
ror
dec
loop
mov
mov
jmp
jmp
enter
dec
inc
(bad)
cmp
loop
xor
and
aas
mov
inc
dec
dec
add
add
pop
dec
out
mov
popa
fldcw
rcl
pusha
and
pop
cld
or
shr
adc
cmp
int
adc
out
pop
xor
xchg
cmp
and
xchg
mov
ret
and
sbb
jnp
outs
(bad)
movs
sbb
push
xchg
or
and
inc
or
pop
and
pop
mov
jle
(bad)
pop
sbb
sub
out
push
sub
cwde
xchg
push
cdq
imul
in
xchg
pushf
push
fwait
inc
pop
add
lahf
das
mov
retf
stos
popa
popf
mov
dec
mov
int
xchg
jp
mov
test
jg
cmp
push
in
xchg
in
cwde
jb
mov
push
push
les
cmp
pop
add
cli
lea
push
xor
and
cdq
fs
pop
cmp
cmp
fwait
cmp
dec
pop
jecxz
add
xor
arpl
jbe
dec
dec
xor
xchg
test
jnp
aaa
and
mov
dec
sbb
mov
dec
dec
imul
sbb
adc
mov
fs
sub
retf
mov
test
cmp
lods
or
imul
mov
ror
or
and
mov
jge
push
retf
(bad)
sti
in
loopne
ins
jmp
mov
mov
mov
dec
std
iret
xchg
mov
lock
sub
or
mov
inc
cwde
aaa
push
push
adc
xor
outs
cs
sbb
dec
jmp
pop
push
add
push
fldcw
xlat
clc
clc
mov
rcr
out
nop
ficom
test
or
mov
mov
lods
sbb
repz
test
hlt
pop
scas
xchg
cmc
jne
sbb
pop
fnsave
dec
stos
inc
ss
sub
rol
or
and
icebp
in
adc
xlat
dec
rcl
mov
shr
lahf
dec
mov
lahf
repnz
mov
xor
sub
call
aad
sbb
out
or
movs
fbld
add
fstp
mov
es
iret
mov
outs
mov
outs
adc
pop
lods
repnz
jmp
fidiv
lea
jb
gs
or
retf
inc
test
sti
loop
xor
aaa
fnstsw
fsub
push
movs
stos
adc
das
and
out
int3
ins
aad
das
cmp
jno
fldenv
je
add
sbb
push
sbb
pop
and
xchg
mov
ins
xchg
xor
fldenv
call
xor
jl
dec
jne
xchg
out
xchg
mov
icebp
cwde
call
outs
addr16
pop
or
js
div
mov
push
pusha
aas
or
inc
outs
lea
leave
jno
pop
sbb
adc
imul
cmp
cmp
jns
xor
push
push
or
test
cmp
jo
mov
aas
dec
mov
pop
out
xor
mov
or
adc
test
add
and
xchg
adc
and
jle
jno
add
cmp
xchg
ja
mov
fist
xor
mov
xchg
fisttp
rol
dec
xchg
gs
dec
sub
loope
fldenv
push
xchg
cmp
sbb
aad
dec
loop
mov
in
sub
sbb
mov
inc
sub
xor
mov
mov
jo
adc
data16
icebp
imul
fistp
sub
pusha
arpl
aam
cmp
add
mov
mov
div
mov
pusha
jno
ins
inc
test
push
inc
cmps
jg
int
and
inc
push
mov
or
xor
sahf
lods
xor
mov
jns
in
repnz
inc
ja
fstp
add
fist
imul
jmp
loop
ins
or
aad
jno
adc
mov
ds
inc
xor
push
rcr
push
sub
mov
fstp
xor
loope
mov
clc
dec
xchg
xor
(bad)
mov
ds
rcr
cwde
ins
dec
ja
xor
cs
push
cmp
mov
ss
jl
pop
mov
je
dec
jae
push
pushf
and
mov
sub
inc
mov
adc
jnp
lods
(bad)
fcomp
icebp
inc
push
rcl
or
daa
mov
js
dec
int3
leave
jnp
test
sub
xor
gs
adc
lea
cmp
pusha
out
test
pusha
add
adc
ss
jle
aam
pop
mov
test
jne
bound
mov
cwde
pop
mov
xchg
or
ror
les
cmp
hlt
aas
adc
not
sbb
mov
mov
dec
mov
js
mov
lahf
pop
jmp
inc
jmp
mov
dec
push
mov
adc
dec
in
out
shl
ins
cld
stos
clc
sbb
fsubr
jb
xchg
inc
(bad)
xor
push
mov
pop
das
and
test
dec
push
mov
dec
jb
sbb
cld
jmp
xchg
rol
cwde
xchg
stos
in
leave
mov
or
or
adc
das
inc
icebp
jle
inc
add
mov
(bad)
mov
stc
and
pop
(bad)
in
cld
adc
cli
add
jmp
fimul
bound
hlt
adc
xchg
shl
add
push
adc
pushf
mov
fstp
outs
jno
cmp
mov
lock
repz
dec
cli
and
mov
push
mov
push
repnz
and
pop
mov
push
push
ins
mov
rol
retf
jne
xchg
add
cmp
mov
adc
mov
add
ins
pop
and
pop
arpl
sub
cmp
mov
ins
sub
cmc
xchg
dec
lods
add
sbb
(bad)
pop
mov
mov
jmp
pop
hlt
pop
cmp
mov
jae
scas
ds
ds
aas
(bad)
daa
sahf
or
stc
xor
scas
mov
daa
sti
push
imul
je
sub
jae
fild
in
xchg
jmp
jmp
lods
or
push
sar
add
mov
hlt
cmp
adc
arpl
xor
mov
lock
popa
push
dec
int
sti
addr16
inc
or
pop
mov
add
in
in
pop
mov
inc
fdiv
xchg
shl
gs
cmp
mov
mov
mov
je
div
sbb
jns
add
pop
addr16
push
enter
dec
xchg
xlat
xchg
xor
adc
addr16
cwde
fcom
add
and
imul
add
adc
out
and
and
inc
ins
imul
adc
inc
cmp
pop
cs
cmp
sbb
aad
mov
repz
push
pop
pop
cld
add
mov
sub
adc
pop
sub
out
lock
js
or
mov
sbb
mov
mov
xchg
and
adc
and
aad
and
adc
mov
add
cld
jne
movs
mov
cmp
dec
lods
leave
mov
add
mov
outs
mov
xor
fdiv
arpl
stos
push
daa
jae
mov
fucomi
(bad)
or
mov
jnp
add
xchg
(bad)
retf
cmp
xor
push
cmps
int
in
addr16
fistp
pusha
dec
sbb
(bad)
bound
jge
outs
wrmsr
sbb
jno
push
sahf
lds
mov
not
or
repz
in
ret
cmp
sbb
lock
sub
mov
push
ror
and
rcl
hlt
cmp
cmps
mov
call
dec
pop
mov
adc
sub
sysenter
push
clc
out
shl
or
mov
popf
test
jo
int3
imul
jecxz
mov
fs
loop
cmps
pop
cdq
les
mov
out
add
xchg
inc
xor
aaa
iret
loop
dec
stc
pop
dec
in
int3
cli
or
xchg
das
inc
in
xchg
sbb
in
jnp
inc
xchg
mov
xchg
into
mov
ret
aaa
es
es
pop
popa
xor
idiv
aas
imul
mov
rcl
test
dec
imul
les
lahf
or
mov
movs
imul
(bad)
lea
mov
sbb
or
(bad)
outs
push
xchg
pop
lahf
xchg
lea
dec
retf
(bad)
xor
shl
call
cmp
jle
(bad)
jmp
(bad)
xor
call
dec
push
test
shl
sbb
loop
out
adc
xor
imul
cmc
add
xor
int
test
jmp
lahf
cmp
add
inc
loope
cmps
daa
push
hlt
cwde
dec
xchg
mov
(bad)
cmp
in
sahf
popf
popf
push
xor
sar
or
add
cmp
ds
mov
addr16
or
imul
mov
pop
in
lods
int
stos
xor
jmp
stc
jo
xchg
mov
out
ror
adc
mov
adc
jns
ret
call
movs
fnstenv
or
fimul
push
in
push
and
sub
mov
out
mov
aam
jne
daa
mov
cmp
shl
rcl
or
test
addr16
mov
sahf
mov
mov
das
cmp
pop
stos
pusha
mov
push
sub
push
out
outs
mov
pop
add
test
shl
push
rcr
mov
mov
(bad)
or
ins
fst
gs
loop
xchg
addr16
aaa
mov
mov
clc
add
jne
daa
sti
ins
mov
movs
ror
pop
pop
add
fsub
jne
cmps
jge
mov
mov
mov
pop
mov
rol
lea
imul
mov
rol
dec
adc
push
retf
push
leave
jecxz
sti
mov
rcl
test
mov
add
ins
cdq
or
jns
outs
hlt
fimul
cmp
adc
push
sub
xchg
sbb
stc
cwde
jbe
rol
xor
test
jecxz
jne
clc
popf
les
xchg
adc
ror
std
rol
enter
test
xchg
sub
mov
lds
xlat
fwait
push
and
mov
inc
jns
push
or
sub
and
int3
jge
repz
sbb
scas
cmp
adc
test
push
fcmovu
(bad)
sub
adc
mov
dec
out
pushf
and
and
xor
in
and
mov
pop
push
mov
push
gs
xchg
and
in
call
sbb
fcomp
xchg
push
xchg
rcr
repnz
(bad)
adc
add
out
fbstp
dec
mov
pop
push
xchg
mov
aam
or
add
pushf
inc
call
das
les
ret
jmp
aaa
movs
sahf
in
test
ficomp
lea
or
xchg
rcl
cld
call
adc
call
(bad)
data16
out
jmp
stc
adc
xor
dec
lahf
push
mov
retf
loop
popa
ds
scas
mov
aaa
stos
jl
cs
daa
sbb
retf
(bad)
add
sub
fdiv
cdq
xor
rcr
jmp
or
ss
mov
in
in
sub
jle
and
mov
leave
int3
mov
pop
mov
ins
adc
and
sub
lods
push
mov
rol
mov
mov
(bad)
shr
mov
mov
pop
mov
and
mov
in
retf
xlat
or
xchg
xor
dec
outs
dec
jae
imul
or
or
imul
jno
push
or
repz
sbb
test
inc
mov
mov
dec
cmp
mov
xlat
daa
jns
xor
mov
fdiv
(bad)
movups
(bad)
aam
mov
pop
adc
retf
inc
mov
int3
daa
int
ss
or
mov
dec
jmp
cmp
out
mov
retf
dec
mov
ss
push
test
xchg
mov
xchg
cmps
adc
and
mov
rol
dec
movs
mov
test
test
dec
sbb
adc
(bad)
not
int
sbb
div
or
xor
imul
cmp
jns
pop
cli
cmp
repnz
stos
call
dec
js
ret
inc
imul
das
push
push
xchg
fwait
push
add
mov
xor
mov
loop
inc
cmp
call
jge
push
shl
mov
xor
mov
sbb
movs
loop
inc
pushf
clc
arpl
jmp
inc
jae
sbb
mov
ret
(bad)
push
cmp
sbb
ret
xchg
js
mov
jno
lea
mov
loop
and
jbe
xor
lods
jge
lods
enter
pop
sti
inc
rcr
aam
xor
or
ss
icebp
shl
out
mov
xchg
in
mov
ins
jne
cs
xlat
stc
push
mov
sti
xchg
jmp
leave
retf
mov
jmp
cmp
sub
mov
jge
sbb
test
xor
add
push
loope
cld
cmps
or
idiv
cmc
adc
mov
in
loope
in
pop
pop
jl
mov
sbb
sbb
js
es
mov
mov
popf
fwait
loopne
cmp
fcmove
in
cld
repnz
mov
data16
cwde
adc
push
iret
xchg
iret
and
xor
xor
je
xor
cmc
pop
mov
cs
inc
out
xchg
nop
rol
mov
cmp
dec
or
lock
or
mov
js
sbb
mov
or
sub
ds
jg
sub
jge
into
adc
call
pusha
ret
call
dec
cld
mov
mov
and
movs
test
jecxz
out
stc
hlt
push
sub
push
sti
(bad)
pushf
push
xor
fcmovbe
pusha
scas
inc
pop
sub
jp
cwde
sub
push
aaa
sub
shl
std
je
rol
or
or
or
cli
call
(bad)
icebp
or
fist
xor
mov
lds
(bad)
cmp
jmp
xchg
(bad)
bnd
adc
xchg
das
xchg
jb
mov
aam
mov
(bad)
into
mov
mov
int
xchg
sub
sahf
in
imul
push
rcl
adc
inc
sbb
aad
pop
lea
sbb
ficom
cmp
cmp
fst
ins
xchg
and
push
jnp
mov
cwde
int3
nop
xor
push
popa
ret
shl
and
cs
adc
pop
outs
lods
arpl
xchg
ja
push
sub
out
adc
xchg
push
retf
leave
pop
dec
pop
in
push
dec
pop
stc
mov
ret
sub
fwait
ret
mov
nop
pop
enter
iret
inc
xor
mov
adc
fldenv
dec
retf
stos
and
dec
(bad)
jl
mov
mov
aad
inc
ds
ss
and
xor
fwait
retf
push
icebp
pop
pop
cs
mov
test
mov
mov
inc
xor
push
mov
add
loop
sbb
hlt
movs
sbb
sub
mov
stc
or
lea
push
dec
or
lahf
arpl
and
das
jmp
adc
jg
add
hlt
pop
cld
add
hlt
stos
mov
clc
cwde
inc
pop
dec
aas
in
fdivr
mov
mov
mov
cld
into
mov
adc
sahf
push
jg
shl
test
mov
cmps
add
push
xor
sub
pop
out
aam
or
mov
js
add
test
mov
int3
cmps
mov
jmp
(bad)
enter
cwde
jmp
cld
push
ins
xchg
jle
mov
lock
xchg
mov
xchg
pop
mov
and
(bad)
(bad)
dec
fsin
lods
aaa
into
mov
leave
loop
dec
js
fiadd
push
push
mov
jmp
cmp
lods
cs
push
xor
aas
mov
cdq
sub
jnp
jbe
and
icebp
cmps
mov
in
in
lds
mov
in
movs
leave
movhps
into
push
mov
sbb
test
mov
cmps
cs
lahf
fnstenv
adc
lahf
enter
imul
psubusb
test
mov
add
jns
push
into
and
push
dec
cmp
cwde
retf
push
clc
cmp
sub
test
mov
retf
dec
shl
lock
sbb
ret
xlat
mov
je
push
leave
sti
ret
cdq
mov
sar
in
lea
xor
mov
iret
stc
and
mov
mov
jge
int3
ret
mov
sbb
out
pop
imul
dec
sub
push
lahf
dec
mov
test
sti
pop
mov
loop
rol
jecxz
popw
call
imul
push
xchg
add
pop
outs
cmp
jbe
sub
jns
std
sub
sar
stos
mov
imul
xor
push
adc
cld
push
mov
push
sbb
pop
js
pop
sub
mov
xchg
mul
daa
mov
fwait
dec
sbb
bound
or
jmp
jmp
cli
pusha
bound
test
cmps
dec
xchg
mov
inc
lea
mov
cdq
xchg
int
mov
pop
sar
and
cmps
adc
sbb
push
inc
mov
add
cmp
xchg
xchg
sbb
mov
mov
sbb
sbb
and
pushf
(bad)
push
fsubr
std
rcl
imul
sbb
(bad)
adc
sub
ror
test
arpl
fldenv
hlt
sub
pushf
sbb
in
bound
inc
jns
mov
push
out
jmp
mov
ss
or
loope
pop
add
sti
mov
jbe
imul
addr16
test
outs
ds
std
test
push
lds
std
mov
in
sub
mov
leave
stc
xor
ret
xchg
sti
mov
jbe
ret
jae
loop
push
(bad)
stc
sub
push
icebp
jmp
lods
arpl
mul
into
in
jno
mov
in
adc
std
or
xchg
pop
adc
xor
rol
(bad)
ret
sub
cmp
add
cmps
jne
loop
in
sub
(bad)
imul
inc
addr16
fild
inc
and
int3
pop
add
scas
sub
cmp
cmc
mov
sbb
jno
xor
xor
cld
mov
mov
jae
lock
das
mov
jl
sbb
mov
sbb
in
mov
push
jl
bnd
mov
sbb
daa
cmp
push
psubsw
jne
lea
out
xchg
test
xchg
imul
sub
push
mov
jg
push
jne
data16
mov
inc
add
fs
fdivr
iret
icebp
imul
mov
pop
div
data16
(bad)
fiadd
push
dec
adc
dec
pop
cmp
inc
in
aas
jecxz
pop
xchg
fldenv
mov
fisubr
mov
mov
mov
cmp
push
lock
ins
popf
cs
das
sub
sbb
mov
xor
(bad)
sbb
mov
(bad)
jg
sbb
push
mov
out
xchg
sahf
enter
sbb
movs
(bad)
cdq
enter
add
fstp
sbb
int
push
jg
mov
sbb
scas
hlt
inc
jmp
imul
mov
ret
jg
loop
scas
xchg
(bad)
cmp
xchg
int
retf
out
pop
sahf
push
mov
rcr
std
jmp
mov
mov
fiadd
jae
retf
and
cmp
rcr
cmp
out
imul
mov
jns
push
or
movs
sbb
clc
jae
cmps
pop
mov
pop
test
push
or
pop
gs
rcr
add
mov
aas
push
aaa
gs
(bad)
retf
push
movs
adc
adc
add
mov
retf
jae
std
movs
push
aas
fsub
fs
xchg
fimul
push
rep
stos
lock
inc
dec
sub
(bad)
push
mov
repnz
shl
aad
ds
sub
dec
xchg
sahf
inc
stos
push
push
into
push
push
sub
xchg
and
or
mov
aam
mov
pop
in
sbb
and
into
cld
movs
inc
jno
push
fstp
ja
pop
cli
lock
pop
cwde
pop
aas
sahf
mov
add
std
sub
and
mov
jmp
les
xor
mov
add
cmp
mov
inc
shl
movs
(bad)
in
xor
push
fdiv
loope
or
push
inc
icebp
jbe
jo
out
mov
sub
xor
stos
les
and
dec
pop
out
cmp
ret
adc
out
es
xchg
iret
inc
(bad)
(bad)
in
int3
push
or
sbb
imul
sbb
shl
pop
fs
loopne
fs
cmp
adc
jmp
xchg
rcl
pusha
ss
adc
mov
dec
sbb
enter
jne
xor
xchg
fisubr
pop
cmp
push
daa
lea
loope
or
movs
and
cmp
fimul
adc
or
mov
push
nop
inc
aas
call
jnp
pop
adc
dec
(bad)
(bad)
mov
mov
lds
in
dec
pop
add
cmp
mov
push
(bad)
adc
cmp
ret
xlat
and
cmp
add
scas
push
cmp
mov
test
retf
pop
(bad)
inc
pushf
and
sbb
scas
jne
pop
xchg
pop
call
mov
outs
cmps
out
mov
dec
js
sbb
xlat
add
arpl
in
add
mov
enter
out
sub
xchg
push
jl
bound
shl
or
adc
sub
inc
push
leave
jle
jo
or
jmp
scas
pop
mov
cmp
out
xor
lods
shl
aaa
mov
mov
lods
inc
icebp
xlat
lahf
push
call
lahf
cmp
ret
add
movs
pop
out
push
shl
fs
push
nop
cmps
inc
cmp
enter
push
repnz
inc
or
int3
ins
fwait
out
inc
loop
mov
cdq
lods
pop
jnp
(bad)
fidiv
icebp
and
jg
mov
lea
cmp
dec
js
mov
retf
mov
dec
and
inc
jmp
dec
hlt
call
js
repz
pop
inc
lods
adc
mov
jmp
aad
adc
jne
sub
cmp
push
daa
inc
(bad)
xor
sub
(bad)
shr
bound
mov
aam
mov
nop
push
xor
mov
mov
scas
dec
aad
mov
sub
mov
outs
pushf
outs
mov
xor
mov
fisttp
daa
shl
popa
dec
jns
jmp
in
movs
or
sbb
gs
jmp
pop
add
xor
mov
cmps
addr16
loope
mov
sub
jg
ret
stos
in
arpl
retf
dec
jae
push
mov
push
int3
cmp
pop
xchg
xchg
adc
jg
mov
loop
inc
ret
sub
cdq
push
jmp
inc
icebp
push
push
cwde
inc
sub
mov
cmp
idiv
pop
push
test
lds
fld
sub
movs
in
mov
lods
out
add
cs
repnz
outs
cs
mov
jl
lods
(bad)
jo
mov
pop
pop
leave
out
icebp
test
in
jl
sbb
int
nop
xchg
fld
int
mov
add
lahf
repnz
jo
aam
into
ficomp
sub
xchg
call
icebp
js
test
cli
ror
cli
pop
dec
and
add
inc
int3
in
sub
fst
ffreep
pusha
call
or
push
lods
movs
jae
popa
sti
shl
push
inc
and
and
sbb
ins
int
fcomp
test
ins
pop
and
or
pop
inc
popf
and
xchg
and
jbe
cmp
pop
and
xor
dec
js
sti
mov
pop
fidivr
or
aaa
pusha
or
dec
and
push
sbb
sahf
rol
inc
sbb
cmp
fist
push
jnp
pop
loope
or
jle
adc
fisttp
outs
cmp
jb
mov
les
xchg
pushf
pop
icebp
inc
cwde
mov
jl
inc
imul
push
imul
daa
neg
ss
add
fadd
xchg
pushf
out
jmp
jmp
ror
cmp
mov
ds
xor
aam
push
or
pop
test
xlat
sar
mov
(bad)
dec
mov
fadd
push
aas
xchg
jmp
mov
icebp
jo
cmp
in
xor
in
test
jno
ins
rcr
cwde
idiv
outs
lods
in
push
scas
lahf
xor
sti
ret
xor
xchg
fisttp
xchg
mov
sbb
pop
dec
pushf
and
mov
jae
clc
cmp
cmp
ja
cmps
aad
mov
sbb
test
xchg
jae
jne
aad
(bad)
mov
or
push
cmp
jg
fs
in
sub
cmp
into
push
jns
jp
and
sbb
cwde
aam
jns
or
repnz
or
dec
inc
std
mov
mov
ins
mov
iret
enter
xor
outs
mov
ins
mov
bound
mov
mov
loop
jl
(bad)
and
fcmovu
mov
data16
and
sbb
pop
push
inc
imul
jl
mov
fmul
and
ins
pop
in
mov
ds
ja
mov
out
scas
mov
imul
cmps
cmp
pop
lock
scas
out
loop
pop
push
push
rcl
stos
nop
sub
sub
sbb
pop
out
push
pop
in
push
adc
rol
cmp
fmul
sub
mov
sar
cmps
adc
fs
icebp
sti
sbb
xchg
ins
cmps
xchg
mov
jg
shl
push
mov
popa
sbb
in
mov
sub
lea
fisub
adc
(bad)
ins
push
xor
xchg
pop
in
jb
aas
icebp
mov
or
bound
je
js
cmps
xchg
icebp
sub
mov
out
dec
ins
add
xchg
mov
shl
cdq
push
mov
inc
mov
mov
repz
(bad)
sub
outs
in
retf
iret
sub
add
les
aas
cdq
jmp
inc
outs
repz
sbb
mov
lds
stos
(bad)
jg
jne
pop
sti
out
daa
stc
inc
mov
dec
xor
adc
push
sbb
sbb
mov
fneni(8087
and
pop
adc
inc
pop
mov
in
push
push
in
rcr
dec
cs
or
in
stos
fcmovne
push
icebp
push
repnz
mov
ret
sbb
bound
inc
xor
push
pop
inc
mov
ins
add
sahf
cmps
add
and
mov
or
fstp
aam
ins
pop
pop
mov
jno
(bad)
popf
sub
dec
mov
addr16
icebp
push
cwde
mov
jo
xor
scas
jb
xchg
push
int3
cmp
fnsave
(bad)
daa
js
push
xor
xchg
fucomi
xchg
jmp
pop
nop
aas
xchg
pop
inc
and
cmps
retf
xor
fimul
fadd
fwait
jno
inc
inc
cmp
cmp
adc
in
and
xor
loop
repnz
(bad)
jo
ds
popf
stc
cwde
not
inc
add
xchg
jns
xor
xor
xor
dec
push
lods
scas
dec
or
jg
jmp
out
addr16
(bad)
jg
nop
xchg
sbb
out
xor
sbb
call
je
cmp
fsub
scas
pop
fist
mov
push
jbe
xor
stc
(bad)
xchg
sbb
mov
fsub
outs
test
jmp
div
pop
cmp
xchg
jecxz
mov
inc
daa
jbe
push
add
lock
pop
adc
or
pop
adc
fiadd
jg
fadd
mov
jmp
fld
xchg
sar
not
fidiv
adc
add
mov
add
jecxz
(bad)
push
imul
add
rcl
call
jbe
sar
jmp
loope
es
scas
lock
mov
(bad)
fisttp
cdq
cmps
mov
test
bound
and
(bad)
pop
sar
xchg
ins
jge
pop
aam
pop
out
sub
stc
fwait
outs
les
nop
fcmovbe
test
pop
in
in
xchg
test
mov
popf
cmp
retf
or
nop
cmp
retf
out
(bad)
jmp
mov
jmp
mov
add
js
cli
out
in
inc
movs
gs
push
rcr
inc
sub
add
(bad)
adc
sahf
aam
psrlq
inc
xlat
fimul
mov
push
cmps
xchg
add
mov
xchg
fnstcw
jle
dec
jmp
(bad)
adc
and
test
and
ja
mov
inc
hlt
out
and
pushf
jne
test
int3
cmc
adc
add
xchg
push
popf
fidiv
and
and
push
adc
cmps
repz
ret
jmp
sar
jl
mov
leave
or
mov
sahf
and
adc
cmp
inc
and
arpl
es
aas
ss
scas
(bad)
aas
and
rcl
cmps
js
dec
or
jecxz
imul
mov
cmc
push
arpl
mov
jbe
daa
pop
(bad)
adc
mov
pop
mov
push
jnp
adc
fcmovnbe
in
sbb
mov
(bad)
ret
nop
adc
div
dec
xor
mov
pop
out
stc
rcl
sub
mov
inc
cmps
mov
ret
stc
and
pop
les
aad
xchg
js
add
je
retf
rcl
stc
mov
mov
scas
jae
sbb
dec
pop
jo
xchg
or
outs
cmp
sbb
gs
out
adc
mov
mov
xchg
mov
cmp
cmpxchg
pop
test
ins
popf
or
push
pop
mov
add
gs
call
inc
pop
outs
sbb
ror
movs
or
xchg
adc
test
dec
push
xor
(bad)
lahf
lods
test
cmp
jno
jl
mov
push
xor
and
mov
jo
push
cld
mov
mov
dec
jno
lar
or
rcr
jmp
jecxz
add
das
mov
mov
mov
dec
mov
pop
inc
stos
test
(bad)
pop
adc
mov
push
cmc
adc
mov
sbb
jmp
hlt
popa
xchg
sbb
gs
cmp
jecxz
or
mov
call
cs
mov
and
xchg
and
jns
push
cmp
jg
(bad)
lods
cmp
or
out
push
sub
cs
mov
cmps
(bad)
xor
jg
lods
ss
sub
rcl
fs
dec
jmp
pop
(bad)
push
push
nop
addr16
pop
jl
inc
push
fist
xor
ja
adc
rol
mov
sub
call
xchg
nop
jne
lods
sahf
mov
stc
inc
jnp
mov
xchg
mov
movs
dec
xor
imul
hlt
stos
mov
mov
push
test
add
xchg
mov
jg
xchg
cld
adc
(bad)
sub
repnz
dec
ss
call
xchg
out
dec
cmps
cli
dec
stos
sbb
xchg
dec
test
cmp
int3
xchg
mov
fwait
stos
jmp
add
pop
hlt
stos
scas
cdq
mov
mov
ins
not
ret
lods
(bad)
cdq
push
mov
retf
in
push
mov
or
and
enter
add
mov
pop
(bad)
aad
pop
jae
sub
clc
push
push
cwde
add
cdq
leave
fdivr
shl
shr
adc
out
sub
xchg
mov
(bad)
cmp
mov
outs
ja
adc
rcr
outs
xlat
std
mov
int3
mov
jl
and
mov
sahf
stos
mov
mov
mov
xor
loop
xor
les
lods
pop
adc
stos
dec
add
push
es
cmp
inc
add
imul
xor
hlt
test
adc
iret
sbb
call
sbb
je
push
mov
loopne
adc
sbb
mov
ror
jne
mov
push
mov
outs
into
pop
int3
in
mov
jnp
jo
loopne
rcr
stos
repz
push
dec
rcl
xchg
jmp
inc
push
call
std
jb
jbe
pop
jmp
cmp
cdq
outs
js
jo
je
xchg
mov
loopne
adc
cwde
push
not
jb
dec
call
push
ficomp
or
pop
adc
xchg
xor
mov
or
daa
cmc
rol
jbe
inc
sub
jne
scas
test
pop
sub
inc
sub
nop
jbe
inc
repnz
ins
push
cmp
mov
mov
ins
call
punpckldq
jmp
imul
or
jns
jns
loope
and
mov
stc
fld
xor
xor
xchg
shl
repz
or
pop
mov
and
scas
pop
nop
mov
scas
pop
xchg
shr
out
xor
test
jecxz
push
pop
(bad)
push
jne
push
dec
adc
bound
int3
push
push
or
jp
sub
mov
jge
fs
nop
sbb
or
jge
outs
das
(bad)
jg
fst
test
inc
adc
loopne
aad
rol
jbe
shl
repz
add
mov
inc
loopne
sub
lods
jge
jle
pop
adc
jnp
stc
sbb
mov
mov
popf
push
jno
retf
int
jnp
jmp
mov
iret
and
mov
fidiv
mov
(bad)
scas
aad
aaa
test
pop
dec
sub
or
push
cld
mov
jge
lods
outs
fucomp
sub
mov
cld
adc
or
loope
in
add
lea
dec
ror
repz
cmp
xchg
and
or
les
push
sub
iret
push
stos
bnd
push
imul
xor
mov
adc
sub
adc
sub
mov
fsubr
xor
dec
adc
les
pop
jg
mov
mov
mov
mov
stc
aad
mov
xchg
xor
outs
sub
cmp
enter
dec
je
xor
test
loope
jne
pop
pop
cld
push
xor
cli
push
push
jb
test
xlat
daa
outs
xor
out
mov
sub
imul
dec
pop
dec
xchg
test
cwde
fisttp
jg
push
xor
add
pop
fist
cmp
test
inc
(bad)
push
fiadd
inc
aad
mov
stos
adc
jno
mov
cwde
push
cld
lods
popa
add
mov
inc
mov
inc
sbb
jmp
in
fs
mov
add
cmp
pop
call
std
adc
dec
mov
pusha
loopne
pop
popf
aaa
bound
mov
cs
outs
push
test
ss
xchg
jge
ds
cwde
mov
dec
mov
loop
stos
jmp
dec
mov
and
add
jns
jmp
rol
out
hlt
xchg
out
into
jge
(bad)
xchg
jmp
pop
or
cmp
inc
push
and
mov
jno
in
push
xchg
pop
stos
jb
shr
add
inc
jns
cmp
pop
mov
addr16
rcr
ins
nop
(bad)
and
sbb
stos
or
int
bnd
int
sbb
push
sahf
sahf
arpl
out
fisubr
imul
std
aad
dec
test
xchg
out
push
bound
in
cmc
pop
mov
jmp
add
out
es
dec
mov
adc
xchg
inc
repnz
mov
(bad)
ins
gs
mov
retf
cmc
test
das
pop
cs
xor
lahf
fpatan
mov
fisubr
add
aaa
sub
cmps
mov
out
pop
scas
cmp
les
or
rol
dec
push
and
out
jnp
aad
cdq
sub
push
xor
test
mov
aaa
inc
pop
lods
mov
sub
push
pop
jbe
shl
xchg
mov
lods
outs
pop
push
sub
mov
jnp
retf
loop
adc
adc
cmp
fcomp
ficomp
mov
dec
stc
les
mov
js
mov
icebp
pop
dec
dec
stos
push
adc
enter
dec
bound
sbb
push
inc
cdq
imul
jmp
push
pop
stos
mov
mov
ds
les
jbe
jbe
xchg
(bad)
loopne
xchg
out
retf
jle
pop
fidiv
mov
jne
push
cmp
push
sub
into
mov
and
out
xchg
sub
push
push
mov
pop
ja
xchg
sub
pop
scas
pop
mov
push
push
jmp
add
das
lds
fld
mov
xchg
pop
mov
dec
pop
cli
aam
hlt
mov
inc
sti
stc
cdq
sbb
icebp
and
sbb
test
and
aaa
cmp
mov
stos
jnp
cmps
(bad)
push
jecxz
enter
cwde
neg
add
mov
(bad)
fadd
sub
les
daa
sub
pushf
push
je
int
in
inc
dec
cmp
pop
pop
mov
ds
ins
dec
jo
sahf
push
sub
ss
dec
xchg
aad
sub
dec
xlat
movs
push
cmc
inc
cmc
jmp
outs
xor
stc
div
mov
sbb
daa
js
shl
push
call
popa
nop
xchg
pop
xor
(bad)
int
and
push
jp
ss
cmovne
neg
mov
hlt
or
popa
push
mov
add
dec
cmps
mov
inc
in
add
retf
ror
test
add
sub
jnp
and
or
jp
push
or
sahf
popa
ss
clc
mov
(bad)
cmp
adc
dec
cli
push
mov
call
xabort
and
mov
in
rcl
jmp
and
ja
mov
sub
xor
inc
cmp
imul
mov
mov
shl
jp
and
mov
cmp
fmul
movs
mov
test
fwait
push
cmp
adc
sbb
ror
pop
push
dec
enter
add
ins
(bad)
je
cmc
mov
lahf
fist
push
xchg
dec
push
test
and
imul
in
mov
fisttp
inc
jg
push
dec
cmp
xchg
mov
daa
gs
test
in
mov
gs
and
xchg
cmp
sbb
fmul
lods
int
ins
rcl
cld
pop
xchg
jnp
clc
imul
shl
adc
mov
fwait
jmp
fucomip
sbb
cmp
aad
inc
test
cmps
nop
jbe
add
mov
call
nop
es
cli
sbb
xchg
imul
sub
push
outs
mov
cs
in
pop
pop
out
and
test
mov
adc
add
push
stc
jmp
mov
mov
xlat
mov
jne
addr16
call
xchg
push
lods
(bad)
mov
jnp
mov
repnz
repnz
cmp
sbb
pop
dec
mov
cmp
stos
stos
fwait
push
imul
pop
cmp
adc
jmp
outs
stos
xchg
or
sub
outs
jno
sub
(bad)
stos
gs
push
jecxz
jmp
shl
inc
js
inc
outs
sub
inc
dec
sbb
ins
dec
rol
mov
jmp
addr16
mov
call
scas
mov
sbb
test
mov
xlat
dec
aas
or
jne
lahf
out
imul
out
mov
push
xor
rol
xchg
out
xor
fst
mov
dec
mov
pop
ror
fidivr
rcr
mov
cmc
mov
mov
sahf
dec
(bad)
cdq
daa
stos
mov
xor
pusha
pusha
lods
fwait
push
icebp
ror
push
fwait
ja
push
inc
fst
push
test
jecxz
sar
fisub
push
xlat
xor
push
rcr
mov
fxch
pop
xchg
inc
jo
inc
mov
out
inc
fwait
ins
pushf
(bad)
sub
(bad)
xor
cmp
and
xor
pop
pop
inc
sub
and
mov
enter
mov
leave
unpckhps
mov
cmps
ja
test
dec
stc
sub
pushf
mov
adc
bound
gs
outs
jl
sbb
push
rcr
mov
cmps
add
jno
adc
ja
push
scas
mov
push
xchg
fisub
mov
std
fwait
arpl
inc
mov
dec
inc
pop
test
mov
movs
fmul
mov
jo
icebp
adc
fwait
enter
loopne
ror
fstp
add
xchg
pop
lods
popa
cmp
or
xor
push
in
xchg
mov
inc
push
aam
xchg
outs
sbb
mov
mov
and
xlat
push
aad
int3
leave
(bad)
xor
sahf
xchg
xorps
(bad)
fcomp
adc
ja
sbb
inc
aad
mov
push
fnstsw
cwde
and
clc
stos
retf
popa
xor
cmp
dec
or
sub
sub
(bad)
push
cmp
xchg
mov
lahf
add
cmps
jae
pop
loope
sbb
js
and
popf
xchg
movs
pop
out
inc
scas
out
repnz
mov
xchg
push
adc
cmp
mov
ret
xor
cmc
jnp
pop
iret
and
sbb
stc
push
jg
push
outs
leave
scas
or
hlt
jl
int3
adc
xor
and
xchg
pop
mov
jp
hlt
xor
ds
xchg
pusha
push
sbb
or
mov
outs
sbb
dec
xor
ret
stos
jl
add
mov
test
in
bound
call
clc
mov
loop
leave
mov
loope
into
(bad)
adc
jno
cmp
mov
bound
jp
inc
jp
scas
aaa
stos
xchg
inc
and
addr16
xor
sbb
jmp
nop
je
ds
pop
and
outs
imul
jp
add
jecxz
dec
arpl
lahf
mov
add
dec
stos
sub
mov
mov
loop
retf
stos
add
push
das
test
push
push
sbb
lods
dec
enter
das
das
pop
fisub
fldenv
add
inc
jge
test
retf
xor
mov
sub
test
nop
and
out
retf
dec
aaa
mov
cld
cmp
mov
mov
outs
imul
fstp
out
cwde
sub
fsubr
fs
xlat
bound
push
(bad)
stos
data16
fadd
adc
stos
mov
pop
xchg
nop
popf
(bad)
mov
mov
jo
mov
je
pushf
add
retf
lods
sbb
(bad)
into
or
loopne
clc
lock
gs
(bad)
sbb
add
adc
xchg
mov
out
(bad)
jl
sahf
fcom
pop
mov
and
mov
pop
lahf
add
leave
sbb
xchg
mov
pop
or
pop
ins
mov
ficom
inc
push
push
sbb
inc
scas
jg
stc
xchg
loopne
mov
inc
dec
push
sbb
sbb
sub
ss
xchg
xchg
add
shr
mov
cdq
iret
into
cmc
mov
sbb
or
hlt
adc
sar
cdq
adc
sbb
cmp
or
jnp
xchg
sbb
adc
xlat
js
add
xchg
pop
sub
rcl
add
cld
jle
xor
add
cmp
sbb
and
sub
imul
sbb
pop
nop
lock
std
jbe
xor
dec
and
xchg
loop
lahf
cwde
ins
push
xchg
cs
dec
mov
cmps
in
call
or
cmp
jno
dec
in
or
out
movs
stos
(bad)
sbb
and
xchg
inc
iret
cli
jne
sub
daa
sbb
push
(bad)
jmp
sahf
jmp
xchg
jmp
mov
inc
xchg
add
sbb
(bad)
rcl
xlat
iret
in
pop
hlt
outs
pop
dec
inc
aaa
xchg
icebp
dec
leave
popf
int3
enter
fs
mov
mov
mov
push
and
xchg
daa
adc
adc
xor
call
push
push
aaa
jo
repnz
imul
xchg
inc
jae
mov
xor
mov
push
(bad)
(bad)
sub
in
iret
stc
popf
mov
fwait
mov
sbb
dec
adc
jno
add
inc
fsubr
xor
jae
imul
adc
dec
sbb
sub
lods
dec
cdq
cmps
outs
les
movs
xchg
ss
sbb
mov
jmp
sahf
fnstenv
in
jg
test
mov
aas
fs
retf
push
movs
call
pushf
mov
popa
xchg
mov
aam
inc
adc
cmps
push
or
jo
cmp
fidivr
test
or
push
jecxz
aas
mov
sar
cld
adc
mov
sar
lahf
fwait
mov
daa
mov
movs
sbb
mov
ins
ret
sbb
jle
dec
jmp
daa
push
jbe
int
out
aas
cmps
or
fsubr
(bad)
outs
movs
test
outs
mov
or
loopne
sbb
jbe
mov
aad
mov
sbb
inc
fmul
fnstcw
xchg
aas
or
xor
or
pop
xchg
ficomp
popf
jae
pop
jmp
and
mov
leave
ret
fdivr
movs
js
mov
retf
and
inc
push
xchg
(bad)
lahf
xor
loopne
jno
dec
ret
sbb
push
sbb
cmps
push
and
push
or
jne
add
dec
jmp
inc
test
(bad)
mov
les
xor
inc
add
aam
movs
test
and
sub
retf
in
jae
into
lods
pop
int
dec
std
and
add
lahf
pop
mov
xchg
mov
lods
sub
sub
cli
out
pop
in
dec
mov
cli
cli
jmp
xor
bound
dec
mov
cmp
dec
test
inc
inc
adc
sahf
fs
shl
mov
sbb
mov
fs
inc
sti
loopne
xor
mov
mov
out
pop
cmp
mov
jns
push
imul
clc
leave
cmps
lds
scas
sbb
mov
mov
or
cmp
sbb
call
ins
pop
mov
sbb
repz
mov
add
xchg
neg
xor
and
scas
xchg
loopne
ror
push
cmp
mov
and
lods
or
mov
cmps
inc
mov
jbe
hlt
outs
loop
push
stos
retf
pop
add
add
xor
dec
sub
sub
stc
or
xchg
xchg
loopne
or
jg
out
in
adc
mov
and
jp
and
mov
bound
call
mov
xor
sub
pop
fsub
inc
cs
or
xor
test
add
ins
sbb
imul
cli
cli
dec
or
fsub
jge
jmp
arpl
bound
jmp
test
shl
cmp
in
push
imul
push
(bad)
out
adc
inc
stos
sub
sub
pop
cmp
adc
mov
sub
jb
ficomp
in
jl
or
aad
stos
push
cmpxchg
inc
cmp
loop
ins
test
jmp
ins
mov
sbb
pop
inc
push
mov
fbld
and
and
jo
leave
sbb
pop
push
push
mov
cmps
fist
or
push
mov
sub
div
pop
(bad)
aam
loopne
mov
sar
mov
push
retf
inc
xor
jbe
stos
lods
add
mov
imul
xor
inc
aas
(bad)
(bad)
js
dec
inc
push
xchg
and
xchg
mov
dec
cmc
fcom
rcr
popa
lods
adc
jecxz
adc
or
push
(bad)
jl
(bad)
outs
in
inc
ins
call
imul
jbe
mov
repnz
test
push
xlat
dec
sar
add
cmp
sbb
push
dec
jae
int3
(bad)
lock
adc
jns
or
cmp
ss
and
inc
sahf
push
adc
test
xchg
pop
enter
mov
(bad)
mov
lds
ret
jnp
or
clc
dec
sbb
mov
cmps
movs
mov
jbe
cmp
cmp
scas
mov
nop
pop
lods
adc
movs
pop
adc
cmps
pop
push
mov
jae
sbb
hlt
(bad)
(bad)
dec
mov
pop
ret
stos
fild
jbe
std
mov
(bad)
lahf
adc
rol
mov
das
cmp
loope
push
fmul
dec
jge
xor
xchg
retf
fnstenv
cmp
mov
pop
jmp
jge
rcl
mov
inc
adc
sahf
sub
pand
mov
dec
and
stos
push
ficom
cmp
call
jo
mov
dec
je
or
mov
cdq
add
dec
fistp
dec
sti
std
sub
out
and
mov
sub
inc
jmp
add
jecxz
inc
push
dec
add
and
xchg
dec
frstor
retf
fsub
sub
adc
and
cs
stos
jo
dec
push
pop
arpl
nop
and
cmp
in
mov
ficomp
jmp
scas
and
adc
and
test
pop
retf
enter
gs
cwde
loop
mov
ret
fsqrt
sub
xchg
add
dec
xchg
(bad)
jl
mov
in
call
cmps
xor
adc
(bad)
iret
out
es
gs
rcr
dec
int3
leave
jecxz
and
addr16
cmps
xchg
test
fadd
xchg
xchg
sti
jecxz
add
inc
and
mov
inc
out
ret
ja
push
adc
mov
cmc
xor
xor
in
xor
mov
ins
scas
fdivr
mov
aaa
mov
push
imul
dec
out
sbb
imul
daa
inc
add
cmp
push
pop
lahf
push
cli
jnp
xor
jno
das
mov
cld
ret
jmp
aad
jno
in
stos
or
stc
mov
pushf
adc
cmp
push
mov
mov
cdq
sahf
fimul
add
outs
mov
sbb
and
add
push
cmp
retf
dec
loop
ds
fdiv
test
pop
fwait
pop
cmp
pop
arpl
or
out
pop
cwde
test
sbb
gs
mov
out
pop
or
loope
dec
mov
mov
dec
sub
(bad)
pop
(bad)
sbb
push
mov
cmovle
cli
add
sbb
mov
in
retf
adc
mov
mov
mov
cwde
xor
sbb
sbb
xor
jbe
scas
jge
add
shr
inc
xor
xchg
std
unpckhps
inc
mov
mov
mov
not
jp
push
movs
sub
or
mov
and
sbb
inc
pusha
mov
dec
stc
xor
rcr
jbe
cmp
jns
push
push
(bad)
inc
(bad)
fcmove
add
(bad)
mov
sub
mov
pop
cmp
cmp
(bad)
cmp
data16
lds
std
jmp
sub
inc
addr16
adc
cld
mov
add
adc
pop
and
mov
call
rcr
mov
fsubr
aas
pop
or
mov
cmps
loope
hlt
arpl
mov
mov
(bad)
inc
aad
sbb
inc
or
pop
in
push
iret
jne
mov
stos
pop
cmp
dec
mov
and
lods
dec
bnd
int
mov
ret
repz
pop
jge
stos
jg
(bad)
enter
data16
dec
xor
dec
fisttp
or
cmp
add
inc
sub
fisttp
jl
dec
popa
jne
sub
push
pop
adc
jge
mov
xor
scas
fldlg2
stos
mov
add
and
stos
nop
mov
mov
scas
xor
(bad)
cwde
std
dec
outs
les
cmps
mov
mov
xor
mov
repz
jo
bound
icebp
or
movs
iret
mov
out
lods
loop
stos
or
sti
mov
repz
pop
repz
push
mov
pop
sub
gs
js
xchg
fs
call
sar
push
adc
push
push
mov
xor
cld
pop
test
movs
fs
stc
ret
xlat
pusha
lds
xchg
xchg
sar
mov
inc
sti
fwait
neg
ins
lahf
aas
mov
je
fiadd
dec
dec
and
xchg
xchg
pop
cmp
jecxz
test
jmp
xchg
add
aad
enter
sub
lahf
pop
shl
jmp
shl
cld
fwait
mov
xor
sub
cmp
mov
scas
xor
sub
add
movs
cmps
or
mov
xchg
rol
and
cmps
in
jns
and
stos
inc
(bad)
rol
iret
add
and
inc
je
sub
clc
test
shr
cmps
nop
push
and
cs
stos
jmp
cli
in
in
cmp
icebp
ins
and
into
rcl
iret
push
in
imul
jle
(bad)
cs
mov
pop
outs
or
stos
bound
sbb
mov
call
jecxz
sti
js
push
cmp
shr
sbb
xor
sahf
jmp
xchg
jl
xor
xor
cmp
push
fadd
add
ret
mov
pop
push
lea
pop
or
and
in
lock
sti
imul
jmp
clc
icebp
jle
daa
loop
xor
inc
pop
adc
xor
inc
nop
push
or
retf
add
js
rcr
out
push
mov
cwde
movs
add
adc
mov
mov
outs
push
dec
les
clc
test
int3
stos
lods
lock
jo
inc
data16
sbb
jmp
or
dec
imul
cwde
push
clc
dec
sbb
dec
pusha
mov
stos
pop
jmp
cmp
xchg
fst
adc
push
lods
inc
and
inc
loopne
or
mov
sahf
lods
retf
cmp
jbe
mov
jne
stc
sub
sub
das
test
cmps
dec
out
xchg
and
sub
pusha
push
push
adc
dec
ss
mov
or
ins
and
xor
loopne
repz
or
adc
mov
sbb
inc
sbb
fmul
pop
sbb
icebp
clc
sbb
sahf
and
sbb
push
adc
xlat
xlat
sbb
lods
cmp
cmp
push
fwait
xchg
sbb
std
int3
push
adc
call
jbe
out
adc
push
cmc
fs
cmp
sbb
sub
adc
pusha
(bad)
adc
xchg
xchg
fwait
leave
pop
xor
lahf
in
(bad)
pop
cli
jbe
push
pop
repnz
arpl
ror
pop
lods
jl
jne
and
mov
pop
mov
push
(bad)
(bad)
std
bnd
mov
dec
retf
dec
scas
das
lds
sar
or
mov
push
stc
mov
fld
cli
jae
jbe
jmp
repnz
stos
cld
mov
fsubr
add
jmp
enter
gs
cmc
sbb
mov
mov
popf
out
add
inc
pop
cmp
mov
call
sbb
or
add
outs
enter
and
pop
jg
popf
enter
shl
jnp
and
jbe
aaa
out
inc
out
jmp
mov
push
dec
(bad)
out
mov
jbe
mov
aas
and
fistp
inc
lahf
jp
sub
inc
shl
retf
push
fwait
pop
test
test
stos
cmp
pop
(bad)
jmp
into
jecxz
(bad)
call
mov
mov
xor
pmaddwd
add
hlt
(bad)
mov
clc
mov
xchg
sbb
pop
dec
test
std
jae
inc
xor
inc
popa
leave
mov
pop
adc
jg
mov
js
dec
fcomp
sbb
shl
(bad)
int3
aas
lods
jae
(bad)
pop
lea
or
cmc
(bad)
leave
(bad)
out
xchg
or
aam
fs
fldpi
dec
or
mov
jbe
sbb
mov
mov
mov
cmp
mov
out
outs
add
cli
cmp
cld
test
scas
rcr
in
mov
xchg
popa
jmp
or
rcl
cmc
push
and
fimul
ja
push
scas
std
pop
fldcw
mov
inc
xchg
cdq
int3
xor
lea
add
adc
es
mov
fdivr
push
sbb
dec
pop
jge
js
addr16
js
enter
int3
mov
fiadd
sbb
(bad)
jbe
sbb
inc
and
outs
test
sub
and
hlt
sub
xor
jmp
out
in
mov
test
fild
adc
ja
call
dec
or
aad
fdivr
or
adc
adc
sbb
sbb
mov
adc
mov
pop
fmul
add
and
mov
mov
mov
stos
js
push
sbb
xor
mov
aas
lea
cmp
retf
pop
ret
mov
dec
xor
shl
mov
(bad)
xlat
jb
lods
xor
ins
stos
int
sbb
push
(bad)
test
push
in
clc
hlt
jnp
add
ds
inc
mov
cld
call
adc
loop
jnp
nop
add
inc
mov
or
aas
pop
push
sbb
mov
dec
inc
add
fld
add
in
fldenv
lock
sub
push
repnz
xor
pop
inc
cwde
fidivr
jecxz
sub
iret
imul
jge
jle
imul
xor
mov
cmp
call
int
in
mov
test
mov
pop
retf
pop
dec
pusha
mov
rcl
push
dec
fcomip
cmp
scas
dec
imul
mov
pop
sbb
adc
sub
cwde
cmps
push
add
pop
push
js
movzx
aam
and
and
push
inc
ror
push
adc
cmp
pop
xchg
pop
sbb
mov
push
outs
bnd
add
sub
dec
enter
jnp
pop
(bad)
aam
pusha
and
inc
adc
push
imul
pusha
mov
or
aad
mov
mov
mov
xchg
test
out
hlt
add
add
sub
mov
dec
inc
sub
or
test
sbb
xchg
lea
pop
jle
jbe
push
es
fisttp
cli
xchg
cdq
int
jl
sti
cli
adc
inc
movs
dec
push
jge
daa
mov
mov
inc
jo
push
adc
or
sbb
nop
into
dec
xor
add
push
sub
bound
hlt
xchg
xor
add
(bad)
sbb
add
add
in
ins
(bad)
repz
push
fwait
mov
push
pop
cld
inc
mov
cmp
sbb
add
adc
mov
add
and
dec
lods
add
xor
loop
pop
clc
lods
xchg
cmp
xor
addr16
imul
mov
repz
xchg
sbb
loop
sub
push
and
sbb
fwait
mov
pop
sub
and
out
aaa
movs
rcr
in
stos
ins
lods
lods
into
sti
adc
pop
inc
mov
ins
sbb
push
lods
leave
cmp
adc
jp
sub
sub
rcl
div
pop
adc
iret
out
test
pop
cmp
xchg
call
mov
adc
jae
ins
cmps
sbb
mov
enter
stos
imul
cmp
repz
test
xchg
loope
pusha
push
xchg
fldenv
in
(bad)
test
hlt
mov
fmul
and
jo
int
mov
fxch
enter
daa
mov
add
pop
rcr
mov
add
push
jl
jle
sbb
repz
test
adc
cli
jnp
jne
fs
std
and
xchg
aad
or
mov
call
shl
dec
cmps
adc
dec
mov
pushfw
(bad)
cli
outs
aam
fild
les
sbb
dec
sbb
ja
jg
loope
dec
inc
enter
jmp
adc
cdq
add
jb
mov
and
test
clc
ins
(bad)
push
sub
add
dec
push
push
outs
inc
scas
test
iret
pushf
pop
jbe
add
jnp
ret
js
adc
adc
sub
je
aad
add
addr16
out
arpl
inc
retf
jbe
ins
jne
hlt
out
add
in
and
aam
lods
shr
push
fisub
cmpxchg
jmp
jle
mov
push
pusha
and
jge
and
scas
inc
imul
shr
push
jle
inc
sbb
cli
scas
scas
sub
inc
gs
or
retf
and
xlat
retf
xchg
mov
jl
xchg
xor
stos
xchg
cmp
inc
pop
int
movs
in
pop
cmp
inc
in
adc
xor
stc
xor
adc
test
cmp
cwde
mov
mov
inc
dec
mov
je
mov
jle
jns
icebp
sbb
or
cdq
dec
into
retf
push
xchg
fld
jecxz
test
and
fsubrp
or
sub
jbe
out
push
ins
add
xor
mov
(bad)
xor
inc
adc
or
push
sbb
in
push
mov
js
push
xchg
sahf
sbb
lea
fdiv
cmp
rol
rol
mov
test
mov
add
js
aad
xchg
mov
jle
stos
xchg
cdq
les
in
mov
mov
into
jns
jmp
test
inc
add
lahf
mov
leave
mov
sbb
xchg
(bad)
jno
into
push
xchg
cwde
push
out
jae
mov
jae
pushf
out
jo
sahf
xor
dec
jnp
or
(bad)
lahf
lds
mov
push
call
movs
(bad)
push
jmp
shl
sbb
inc
mov
arpl
movs
adc
test
sub
jns
and
sar
xor
div
not
pop
sbb
rcr
movs
outs
sahf
pop
hlt
xor
ds
cld
adc
sar
mov
xlat
into
inc
popf
sub
rcl
and
cld
inc
and
dec
es
mov
icebp
mov
rol
in
adc
mov
rol
mov
pop
cld
mov
xchg
sub
lock
dec
cmp
xor
pop
cmp
dec
or
aad
sbb
and
in
cmps
lods
repz
or
adc
lods
call
inc
rcl
fsubr
or
movs
push
xlat
mov
sbb
pusha
js
test
sti
(bad)
scas
loope
pause
ins
sahf
in
fisub
lds
sbb
or
cmps
xchg
xchg
gs
jl
int3
cli
dec
(bad)
lock
push
mov
xchg
or
fsub
stos
leave
pop
cmp
gs
dec
jmp
vhsubpd
into
mov
int
iret
and
or
loop
mov
xchg
fcom
mov
jg
aas
jbe
lods
add
(bad)
jmp
pop
mov
mov
out
sbb
xchg
cdq
dec
cmps
add
popf
inc
call
outs
stos
imul
jl
sbb
pop
pop
call
xor
aas
push
inc
cmp
jecxz
test
mov
scas
cwde
mov
pop
jge
mov
lea
icebp
inc
retf
push
mov
sub
not
adc
xchg
test
(bad)
aam
lds
icebp
sub
lds
cmp
pop
repnz
cli
inc
aas
call
sub
pusha
fld
cdq
ucomiss
idiv
movs
sbb
bound
mul
div
pushf
rol
dec
xor
adc
push
cmp
cmp
push
dec
cli
inc
scas
out
jo
mov
in
cmp
cmp
push
mov
shl
ds
inc
sti
sti
push
xor
add
or
jbe
cmp
push
mov
jecxz
clc
int
push
jecxz
xchg
fsubr
push
adc
sbb
cmp
pop
test
or
dec
and
add
pop
jo
ja
xchg
sub
sub
test
dec
pop
fst
dec
ror
lahf
jmp
inc
jmp
push
and
xor
fnstenv
inc
dec
sbb
push
ss
loopne
and
movs
mov
jg
fwait
push
ror
mov
mov
fst
rcr
xor
jmp
test
gs
stos
mov
xchg
fisttp
sbb
sub
jl
cmp
arpl
js
mov
jne
sbb
sbb
adc
arpl
call
pop
cmp
jmp
and
aam
(bad)
test
dec
scas
pop
sub
pop
sbb
mov
or
mov
into
mov
xchg
sbb
dec
sahf
jl
cmc
mov
xor
inc
sub
div
pop
sahf
mov
pcmpeqd
jge
jecxz
mov
dec
idiv
sbb
(bad)
popf
sbb
arpl
push
or
cmp
hlt
mov
dec
arpl
shr
jns
imul
movs
inc
add
inc
cmp
push
aad
pushf
inc
out
sub
push
inc
rol
ins
push
fadd
jne
neg
add
push
mov
ss
sub
or
cli
inc
jno
adc
dec
pushf
sub
mov
mov
out
jo
stos
fdiv
popa
retf
jg
les
aad
cld
adc
sub
jo
push
outs
or
in
cmp
fisubr
xchg
cmp
scas
push
dec
pop
xlat
stos
das
or
xchg
daa
pop
mov
jp
and
js
mov
inc
fsubr
adc
xor
loopne
jnp
loop
mov
stos
lods
sub
inc
xor
mov
jmp
xchg
ss
loopne
cmp
les
mov
mov
lahf
cdq
fcomp
sbb
mov
sbb
jno
mov
add
scas
aaa
(bad)
lods
repz
push
jmp
add
sub
loop
nop
pop
push
and
xlat
adc
mov
lea
out
push
or
xlat
movs
lds
sbb
ds
xor
imul
(bad)
cmp
inc
push
mov
and
jno
pop
mov
and
xchg
sbb
mov
int3
aaa
iret
adc
push
dec
sbb
mov
fwait
jne
ins
int3
cmp
sub
push
out
dec
loop
dec
adc
mov
repz
into
call
pop
mov
cld
mov
dec
cwde
mov
and
movs
mov
xchg
sub
call
and
inc
icebp
jge
and
mov
call
mov
test
enter
scas
push
clc
iret
adc
add
(bad)
retf
push
dec
test
gs
adc
cli
out
add
lods
xlat
adc
adc
(bad)
fidiv
test
lods
dec
or
adc
cli
je
push
pop
mov
movs
cmp
jbe
ficom
mov
leave
mov
jp
mov
rol
dec
in
mov
push
inc
adc
out
int3
xchg
adc
(bad)
xchg
retf
call
or
push
(bad)
icebp
leave
in
xchg
push
stc
sbb
or
mov
inc
mov
idiv
cdq
jmp
leave
push
xor
mov
enter
pop
inc
add
fwait
in
idiv
repnz
mov
hlt
outs
cmp
inc
pop
lea
dec
aas
pop
ds
mov
aas
out
rol
mov
out
pop
push
xor
jp
leave
pop
movs
sbb
sbb
lahf
mov
mov
inc
adc
test
data16
fcom
push
mov
ss
or
ja
jne
ins
mov
loopne
jg
fild
sub
cwde
fisubr
fmul
cld
mov
andps
xlat
pushf
and
pop
mov
jmp
mov
lods
retf
(bad)
repnz
retf
sbb
inc
mov
adc
xchg
fucom
sti
das
xchg
les
sti
cmp
retf
out
out
inc
clc
push
push
pop
or
and
jnp
adc
into
mov
push
cld
in
push
sub
inc
(bad)
jp
sbb
jle
dec
clc
and
call
mov
push
iret
xor
add
cmp
inc
push
test
xor
dec
div
push
retf
popf
jmp
inc
pop
call
jecxz
push
pop
mov
hlt
cmp
or
test
mov
mov
fcmovnbe
cli
xchg
pop
sub
iret
stos
cdq
sahf
fistp
push
jbe
mul
out
dec
jb
mov
(bad)
outs
jl
dec
cli
dec
inc
dec
pop
cmp
inc
inc
je
addr16
pop
xor
call
sbb
cdq
sub
(bad)
pop
aam
add
sar
sbb
jne
adc
test
and
jnp
cdq
jmp
lods
add
jecxz
enter
dec
out
(bad)
cmps
xor
lods
lods
cmp
ja
dec
xchg
jp
loopne
jmp
and
dec
out
clc
pop
push
popa
sub
rol
je
addr16
arpl
mov
ins
push
loop
and
cdq
mov
inc
pop
call
aas
inc
data16
test
sbb
fistp
cdq
push
lock
push
nop
jns
pushf
cmp
xor
imul
jnp
int
dec
cmp
mov
add
pop
or
adc
mov
xchg
jne
cli
mov
test
sbb
cmp
jl
sbb
push
popa
cmp
push
add
pop
outs
into
add
shl
retf
pop
hlt
repnz
inc
sub
mov
ret
xchg
add
sub
pop
dec
gs
lods
jne
pop
cdq
mov
stos
xchg
iret
mov
jle
fwait
in
mov
gs
mov
jp
push
push
jno
push
pop
jne
or
stc
int3
jp
mov
(bad)
dec
or
xchg
shr
aaa
push
push
adc
aas
add
push
lahf
dec
cmps
stos
scas
das
jle
mov
ins
jmp
movs
cmp
enter
xor
mov
shl
dec
lds
popf
movs
or
jp
xor
pop
loopne
cmc
or
adc
dec
cmp
sbb
cmps
je
push
jo
(bad)
call
mov
lds
jb
pusha
outs
lea
aaa
data16
sbb
out
mov
stos
push
cmp
push
cwde
push
shl
pop
adc
adc
ret
test
mov
mov
sub
xchg
add
les
test
cmc
mov
inc
pop
sbb
hlt
stc
mov
imul
sub
iret
push
pop
dec
ss
pop
pop
adc
cwde
cmps
ss
push
call
jns
mov
shl
movs
mov
add
sbb
aad
popf
int3
in
xchg
or
cmps
inc
fiadd
cmp
jecxz
fcmovnb
or
out
pop
mov
jae
stc
sub
jmp
ret
ror
fadd
scas
cmps
xor
dec
pop
cs
pusha
bound
xchg
cmp
cdq
bnd
js
call
daa
adc
sub
repnz
xor
(bad)
out
mov
dec
jg
push
in
or
ret
loope
sar
test
mov
add
popa
loop
jns
jo
repnz
push
lea
loopne
pop
pusha
jl
dec
adc
pop
sbb
inc
imul
ret
fldz
xchg
popa
movs
push
bound
add
ins
in
sbb
adc
push
and
add
and
push
mov
and
loope
das
xor
(bad)
lods
hlt
movs
mov
repnz
call
mov
std
ins
mov
scas
mov
add
icebp
rol
mov
mov
cmc
sar
fbld
mov
ror
das
(bad)
fmul
frstor
cs
fnstenv
mov
pushf
sub
sub
loop
jg
mov
inc
mov
stos
mov
test
push
nop
test
dec
mov
cld
les
push
in
(bad)
outs
data16
xor
xchg
xchg
inc
cmp
retf
(bad)
int
out
and
rcr
mov
cmp
cmp
mov
lods
xor
je
mov
add
fistp
repz
mov
int3
sbb
call
xchg
xor
jle
mov
out
retf
sbb
xchg
shl
xchg
adc
pusha
out
into
movs
clc
lods
enter
pop
sbb
into
xor
push
lea
and
pop
mov
push
adc
mov
push
jge
xchg
ficom
and
(bad)
lds
mov
dec
jecxz
cmps
fnstcw
cdq
cmp
popf
imul
outs
or
cdq
movs
dec
sub
inc
adc
test
xchg
inc
les
mov
popf
aaa
pop
sub
inc
retw
xchg
sbb
outs
outs
xchg
cmp
inc
loopne
out
mov
std
mov
repnz
push
xchg
shl
mov
jae
cs
aad
push
outs
fwait
pop
and
jbe
popa
mov
inc
xchg
add
retf
data16
dec
cmp
jns
jae
xor
pminub
pusha
inc
jbe
mov
jle
sahf
dec
ds
pop
add
xchg
int3
out
or
icebp
in
sbb
jb
fldcw
jmp
sti
pusha
mov
mov
and
or
daa
mul
mov
pop
out
cmp
mov
scas
cmc
loope
inc
mov
adc
or
cwde
mov
ja
mov
movs
jno
and
push
mov
cmp
arpl
ret
push
aaa
add
test
sub
dec
jne
rcr
(bad)
sub
mov
(bad)
sbb
or
pusha
jge
adc
test
out
call
mov
lahf
and
cmp
and
jns
pop
repnz
adc
or
xor
sahf
mov
add
inc
mov
cmp
imul
mov
bound
aam
push
push
je
push
inc
push
sbb
jns
ss
sub
aad
inc
rcl
aas
sbb
jle
xchg
sti
fimul
inc
test
push
cmp
dec
push
mov
popa
xchg
xchg
or
mov
sbb
add
add
dec
(bad)
jb
adc
mov
or
jno
popf
pop
in
ja
xor
push
cmp
fisub
cli
in
cli
mov
cmp
retf
ror
and
xor
and
sbb
xchg
aam
pop
call
repz
bnd
push
cmps
sbb
loope
popf
cmp
jo
lods
push
in
push
mov
iret
les
mov
nop
retf
jnp
pop
retf
or
sbb
or
mov
lods
(bad)
das
sub
add
mov
fld
lds
mov
inc
dec
outs
add
cs
pop
sub
xchg
mov
sub
ficomp
mov
aam
dec
movs
push
pop
jge
and
inc
fcmovnb
inc
scas
jb
enter
inc
jl
xchg
pop
fnstcw
push
pop
pop
mov
cmp
mov
hlt
and
pusha
clc
cmc
inc
sbb
ret
mov
and
cmp
cdq
adc
leave
int
cmp
setbe
mov
out
mov
test
mov
out
inc
(bad)
pop
sub
rcl
xchg
lods
fild
xor
xchg
sub
inc
out
jle
xchg
push
out
mov
cmc
xor
pushf
cmp
sbb
cwde
pop
jle
mov
mov
pop
mov
sub
mov
enter
xor
dec
js
and
jmp
inc
test
pop
scas
aad
push
in
into
jno
cwde
pop
fwait
les
lods
mov
enter
fs
cmps
in
mov
xchg
dec
sbb
cmp
mov
cmc
mov
xor
mov
xor
inc
(bad)
push
mov
aaa
ficom
cld
sub
pop
out
iret
mov
mov
pop
sar
fs
xchg
aaa
push
push
and
(bad)
mov
jp
dec
or
lods
out
pop
ins
pop
jge
add
add
adc
shl
jl
fs
jo
xor
mov
mov
pop
mov
aaa
jl
popf
rsm
sar
xchg
xchg
sti
mov
popf
adc
ins
cmps
or
lock
lods
xor
fisub
xor
pusha
stos
adc
jge
jl
xchg
dec
lods
inc
shr
cmp
in
mov
mov
mov
jmp
lock
stos
mov
aas
out
push
cld
mov
adc
fild
outs
fdivrp
icebp
stc
or
cdq
xor
hlt
and
jns
push
sub
cmp
mov
daa
out
cwde
inc
daa
mov
adc
xchg
xor
mov
idiv
push
popf
imul
pusha
push
call
aad
mov
push
clc
inc
jae
pop
mov
mov
jno
cdq
adc
movs
lods
mov
pop
stos
or
jno
sbb
cli
ud2
scas
cmp
jbe
pusha
jp
cmps
cmp
fistp
dec
inc
rcl
jp
loop
xor
dec
int
push
add
retf
xor
ins
push
sub
pop
int
pop
pop
jb
inc
in
inc
pop
mov
ins
or
lea
or
out
xchg
cmp
mov
fwait
cmp
sbb
dec
adc
mov
mov
push
mov
jg
mov
pop
cs
arpl
xchg
mov
or
and
mov
mov
mov
dec
adc
aad
xor
pop
mov
lods
add
in
in
mov
jno
imul
cs
adc
lds
imul
clc
or
pop
sbb
ins
push
fisubr
pop
mov
pop
jmp
(bad)
pop
mov
jne
shr
inc
call
or
or
(bad)
jno
sub
xchg
dec
jl
inc
dec
or
stc
scas
cmps
mov
mov
fist
xchg
xor
jns
in
addr16
aam
dec
cmps
popa
xchg
lock
xchg
mov
es
ficom
pop
add
xchg
adc
leave
ds
lahf
bound
repz
mov
inc
adc
ds
leave
shl
push
fld
xchg
mov
xor
int
movs
mov
push
xor
push
scas
and
cld
enter
mov
push
jmp
out
cwde
or
mov
inc
hlt
lds
aaa
ja
mov
mov
xor
pop
sub
loopne
add
inc
gs
(bad)
loopne
leave
pop
mov
enter
pop
popa
and
mov
adc
movs
push
inc
jle
int3
add
pop
stos
jno
(bad)
pop
shl
fs
dec
btr
scas
cmps
repz
stos
lods
xor
sti
or
cmp
inc
xor
pop
int
mov
ja
in
dec
inc
test
(bad)
pop
aad
out
or
data16
(bad)
iret
sub
call
sti
cmp
cmps
std
arpl
arpl
mov
test
push
jl
arpl
in
mov
or
sub
mov
pop
and
mov
popa
je
jbe
mov
add
(bad)
sub
mov
mov
rcr
icebp
jmp
(bad)
loopne
push
dec
sbb
mov
cmp
sbb
cmc
and
cmp
ret
sub
xchg
jge
xchg
fsub
push
bound
adc
cmp
mov
mov
iret
xor
jmp
mov
clc
mov
add
mov
push
mov
lea
je
jge
sbb
scas
test
sbb
sub
inc
and
hlt
pop
sub
cmps
and
sub
test
push
data16
inc
mov
jns
jbe
and
pop
dec
xchg
mov
mov
push
fs
pusha
push
aaa
cmp
sbb
sub
fdiv
adc
add
mov
xchg
lahf
enter
aam
push
add
push
fadd
inc
bound
vcvtsd2ss
xlat
dec
pop
ds
mov
popf
mov
and
pushf
loope
call
(bad)
arpl
fst
pop
repnz
ja
push
stos
popa
or
mov
and
mov
mov
mov
dec
out
in
lds
xor
fnsave
push
ins
repnz
mov
dec
dec
lds
mov
sub
or
cs
lds
jnp
std
lds
and
retf
leave
adc
add
push
jl
add
leave
ret
pop
mov
pop
in
test
ja
cld
fcom
xchg
cdq
int
scas
test
mov
mov
pop
or
loop
pop
jbe
fistp
test
pop
dec
fisttp
sbb
cld
push
test
push
mov
pop
and
repz
retf
jae
sub
jo
pop
pushf
mov
call
rcl
jae
pusha
(bad)
ins
dec
dec
addr16
shl
sub
std
lods
bound
jg
xor
lds
mov
(bad)
jmp
jle
inc
mov
adc
xchg
sub
inc
sti
rcr
mov
enter
out
loope
xlat
loope
xchg
inc
mov
and
ins
mov
jl
jmp
adc
(bad)
jo
push
stc
clc
data16
cld
dec
bound
loop
push
ret
jmp
sbb
mov
push
movs
imul
pop
(bad)
(bad)
jne
or
cmp
in
push
js
xchg
test
data16
inc
pop
call
add
pusha
inc
aas
xor
jmp
sar
jne
and
xchg
xchg
mov
mov
jns
mov
arpl
mov
bound
in
(bad)
adc
add
add
dec
jmp
cli
inc
mov
aad
jmp
mov
cmp
mov
repz
lds
mov
test
xchg
jg
dec
cdq
or
mov
push
sub
pushf
pop
xchg
and
scas
jecxz
sbb
push
jne
mov
in
mov
(bad)
cmc
je
movs
fstp
mov
sbb
ins
jnp
pop
clc
aam
cmp
adc
add
les
test
cmp
xchg
dec
xchg
ds
jnp
sbb
addr16
pop
rol
xchg
mov
lahf
adc
leave
cwde
add
jns
jp
test
daa
sahf
out
add
imul
call
leave
xchg
push
outs
jle
enter
add
push
mov
popf
pop
sbb
movs
push
xor
loop
std
pop
jns
jmp
ja
mov
cmps
push
mov
(bad)
or
neg
test
(bad)
pop
retf
cmps
pop
push
jns
mov
ss
jns
pop
(bad)
push
xor
pop
(bad)
aad
test
in
xchg
bndldx
(bad)
sbb
jl
(bad)
pushf
jl
xchg
adc
fs
add
or
cli
shl
sbb
pop
(bad)
(bad)
mov
mov
lahf
inc
outs
int
imul
xchg
push
(bad)
mov
cmp
(bad)
ins
mov
xor
jnp
call
xchg
stc
xchg
sbb
xor
mov
mov
xor
mov
nop
sar
cmp
or
ret
sahf
cmp
sbb
mov
mov
xor
mov
or
jmp
retf
out
or
pop
outs
add
mov
test
sub
xchg
in
daa
sahf
mov
mov
pop
(bad)
in
cli
fcomp
out
add
cmc
adc
adc
fld
mov
xor
push
inc
xchg
sti
imul
aas
pop
dec
pop
into
mov
xchg
lods
mov
xlat
aas
jecxz
or
dec
pop
fidivr
cmp
jmp
xor
jbe
push
(bad)
mul
add
inc
inc
gs
inc
addr16
mov
mov
daa
sub
mov
(bad)
push
push
push
xchg
into
dec
in
in
jge
mov
mov
ds
sbb
out
cmps
or
sub
loop
dec
cmp
fcmovbe
jmp
cmp
and
das
rol
nop
sti
or
pop
add
inc
sbb
mov
and
xor
xor
mov
push
mov
fs
imul
or
push
aas
pop
cmp
mov
jmp
call
fidivr
push
addr16
push
sahf
fld
(bad)
and
push
js
das
jl
test
cmc
add
into
loopne
cmps
es
and
ret
mov
pop
jns
lods
xchg
and
sbb
addr16
out
mov
push
movs
rol
jmp
bound
mov
aas
cld
and
inc
push
jl
push
jbe
push
add
imul
in
jl
scas
mov
cmp
imul
mov
(bad)
(bad)
push
pop
cmp
iret
test
xor
or
retf
rol
jns
or
movs
pop
jno
dec
fcmovb
add
push
idiv
lods
mov
call
mov
mov
adc
in
call
fchs
add
pop
repnz
xor
xor
mov
mov
adc
and
cmp
retf
movs
and
pop
xchg
sbb
test
push
pusha
call
arpl
xor
movs
pop
movs
arpl
in
ds
imul
sbb
cmp
mov
pop
movs
popa
jnp
adc
cmp
idiv
stc
lods
mov
xchg
lods
in
mov
jns
out
xchg
and
cmp
pop
jno
jmp
xchg
push
fild
shr
inc
xchg
out
fstp
leave
outs
sub
pop
in
mov
out
mov
pop
lock
data16
jl
movs
fisub
inc
lahf
jecxz
shr
inc
inc
fnstsw
addr16
scas
(bad)
cmp
fdivr
arpl
mov
stc
es
jno
push
scas
jecxz
dec
adc
iret
jo
jmp
daa
cvttps2pi
dec
mov
sbb
jae
ins
ss
fcmove
pusha
lahf
mov
cmp
and
shl
cwde
das
and
xadd
inc
jle
cmp
mov
sbb
nop
dec
enter
(bad)
dec
sbb
loop
stos
mov
or
and
js
and
mov
xchg
vmovntps
and
das
addr16
mov
push
loop
imul
xchg
mov
adc
in
push
ja
and
add
dec
dec
loopne
mov
call
or
push
cmc
arpl
bound
cs
dec
ds
cmp
call
add
and
neg
inc
mov
mul
pop
fsubr
dec
nop
imul
xor
inc
sar
lock
iret
sub
in
inc
popf
ret
cmp
scas
mov
test
pusha
push
call
lock
aas
jle
mov
adc
dec
push
sti
sti
mov
ins
xchg
ret
cmps
scas
in
or
ret
(bad)
out
imul
stos
ja
(bad)
or
pop
lds
dec
test
les
sub
xchg
je
sbb
test
dec
sbb
dec
mov
mov
dec
lds
popf
adc
scas
push
pop
test
inc
outs
jno
movs
ja
push
inc
jbe
adc
xchg
pop
popf
or
rol
cdq
inc
push
ins
retf
stos
push
fsub
mov
xor
enter
inc
fcom
jmp
sub
inc
or
ret
sub
shl
out
mov
sbb
int
stc
sbb
enter
mov
jmp
xor
sub
pop
(bad)
jbe
retf
arpl
pop
stc
cld
shl
ret
inc
pop
sub
loope
imul
mov
mov
lods
adc
mov
scas
mov
shr
lds
mov
pushf
push
sub
ret
das
jae
int
lock
xor
inc
int3
cmps
mov
sub
fcmovne
(bad)
push
scas
out
lds
push
repnz
pop
xor
mov
out
fldenv
sub
mov
cli
(bad)
dec
and
cmp
adc
sub
nop
mov
xchg
pop
cwde
xor
cmp
cli
fnstenv
push
sahf
movs
(bad)
arpl
js
je
test
fisub
vpcmpeqd
daa
push
sub
or
xchg
test
std
pop
add
out
push
mov
push
bound
dec
mov
mov
js
mov
data16
or
arpl
jmp
jno
lahf
aaa
mov
test
popf
aam
ja
jnp
push
in
and
pop
add
int3
pop
mov
lods
mov
cdq
xchg
fdivr
inc
xchg
cmp
scas
sbb
rcl
mov
sbb
stc
aas
repnz
cmps
or
cmp
int3
shl
mov
(bad)
cmps
dec
(bad)
lods
sub
xor
icebp
outs
xchg
adc
bound
and
data16
jge
stc
loop
push
js
xor
jecxz
inc
aaa
mov
xlat
jg
add
push
jne
in
pushf
dec
leave
stos
in
inc
hlt
lods
push
stos
cld
add
into
(bad)
dec
outs
leave
stos
div
sar
mov
jg
(bad)
(bad)
xor
pushfw
aad
xor
or
imul
sahf
inc
icebp
inc
fst
mov
les
or
std
mov
jbe
movs
sbb
add
stc
cmp
arpl
shr
das
inc
pop
(bad)
inc
or
popa
adc
movs
mov
push
nop
js
pop
push
xor
cld
sub
jne
int
or
rcr
pop
inc
mov
call
cmp
jge
pop
pop
jg
push
cmp
sub
repz
jo
clc
ret
(bad)
retf
daa
sbb
and
hlt
cwde
pop
fidivr
dec
pop
inc
or
test
cmc
fstp
mov
pop
shl
sti
dec
cmp
push
mov
push
xchg
leave
shl
fs
add
xchg
ret
add
mov
mov
adc
xlat
lds
rol
clc
das
add
cld
loop
jmp
push
stos
mov
pop
aam
pop
xor
ds
stc
loopne
mov
(bad)
mov
mov
inc
jecxz
ja
fldenv
push
mov
repz
call
cmp
sub
push
push
push
push
push
vandnpd
ficom
outs
data16
xchg
inc
add
xchg
jecxz
pop
bound
cmp
mov
xor
call
fisttp
sbb
test
lea
int
test
mov
aaa
nop
cdq
cmp
mov
inc
mov
pop
and
pop
aas
adc
xlat
push
push
dec
dec
test
lahf
lods
popf
shr
shl
xor
into
movs
das
and
scas
es
push
push
mov
jecxz
pop
dec
inc
jecxz
outs
push
sahf
dec
shr
fidiv
sqrtps
mov
fadd
mov
repnz
mov
sub
inc
jmp
ficom
shl
out
xchg
shl
jnp
adc
dec
retf
adc
add
inc
je
xchg
aam
push
jmp
sub
xor
add
bound
and
cmp
adc
inc
xlat
and
and
ins
and
imul
adc
xchg
sub
mov
lahf
cmp
retf
clc
pop
sub
push
or
mov
mov
cmc
push
rol
bound
sub
cmp
in
int3
push
dec
xchg
or
inc
mov
inc
cmp
out
jne
test
ja
(bad)
pop
lock
push
out
pop
sbb
inc
into
fistp
sbb
jg
cmp
push
xchg
xchg
push
jl
fwait
xlat
stos
out
hlt
ss
mov
xchg
ret
or
pusha
mov
jecxz
push
dec
pop
adc
jb
push
leave
sub
mov
and
loop
and
jg
in
and
(bad)
inc
test
jmp
mov
pop
jmp
sub
mov
or
aam
jb
sbb
fdivp
out
dec
mov
xor
mov
adc
jo
xchg
adc
sub
aaa
push
outs
dec
daa
mov
xor
mov
ret
repz
jo
lahf
test
or
and
add
stos
cs
add
xor
push
cmp
jno
mov
sbb
lods
shl
jae
dec
mov
jge
sbb
call
mov
ja
into
jecxz
dec
or
sbb
push
sub
push
cmp
dec
inc
push
fidiv
(bad)
and
xlat
mov
test
pushf
sub
repz
imul
mov
lds
lahf
and
aaa
popa
outs
scas
stc
test
cmp
mov
lods
sbb
jle
add
enter
loopne
jnp
push
(bad)
fwait
mov
xchg
cwde
jp
(bad)
in
iret
mov
adc
mov
cmps
cdq
inc
mov
jecxz
cmp
sahf
cmc
std
int3
test
lahf
sbb
popa
push
jne
inc
xchg
rcr
cmp
pop
jp
jmp
je
mov
xchg
(bad)
mov
dec
add
adc
cmp
mov
xchg
fsubr
(bad)
dec
scas
das
pop
mov
push
sbb
mov
ins
test
mov
jl
sub
cmp
jns
sbb
(bad)
push
xor
mov
sub
cld
pop
cmp
mov
(bad)
push
std
fsubr
js
jg
xor
xchg
mov
xor
cwde
ins
js
call
push
icebp
xchg
retf
cwde
dec
lock
sbb
fld
and
mov
pop
pop
mov
fisub
xchg
(bad)
jns
add
(bad)
add
mov
jmp
add
mov
test
test
adc
aad
mov
daa
mov
frstor
fwait
push
or
(bad)
adc
fadd
jns
in
test
or
push
fs
dec
int
push
inc
add
jl
xor
xor
mov
dec
cmp
xchg
mov
sbb
push
cwde
sbb
jecxz
js
sbb
aaa
movs
je
lods
dec
sub
mov
push
ret
test
and
cs
out
aaa
xchg
fdivr
cmps
sbb
sbb
fcmovnbe
adc
mov
shl
out
mov
popa
inc
xor
xchg
aaa
mov
test
shr
imul
retf
or
cwde
dec
(bad)
pop
mov
aad
retf
scas
out
adc
add
or
mov
outs
mov
cmps
xor
scas
xor
push
cmp
inc
mov
sub
mov
and
push
mov
jp
cld
shl
dec
cmc
inc
xor
push
sub
mov
jmp
or
or
mov
inc
aas
movs
xchg
lods
loopne
pop
and
xor
lods
push
jg
aam
popf
loopne
pop
mov
and
mov
retf
jge
pop
inc
pop
jbe
mov
xabort
cmp
push
and
lahf
push
unpckhps
mov
adc
sub
imul
add
mov
cli
int
xchg
jnp
in
loopne
adc
or
mov
sar
lods
sbb
xchg
sahf
jle
retf
push
sbb
jp
lock
idiv
push
add
cmp
lods
and
or
pop
stc
adc
mov
test
push
shr
aas
or
sub
out
lods
adc
pop
test
cmp
enter
jb
adc
ss
mov
ss
jge
jecxz
pop
xor
cdq
cwde
lock
xchg
sbb
dec
loope
or
fdiv
iret
je
pop
push
or
(bad)
stos
sbb
mov
jecxz
xchg
int3
scas
(bad)
stos
dec
xor
mov
sbb
lock
inc
mov
cwde
jmp
cmps
or
sub
push
and
push
fist
ja
mov
ret
int
xor
push
fldcw
retf
pop
xchg
fcom
out
xchg
scas
push
inc
mov
dec
aad
xor
ds
(bad)
lods
pusha
xchg
dec
ins
push
call
fdivr
cld
and
mov
cmp
or
fist
mov
rcr
and
mov
or
clc
xchg
ss
test
mov
int
mov
xchg
dec
fwait
jp
in
cmp
fld
mov
jo
shl
mov
ror
mov
mov
inc
daa
loopne
rcr
fs
call
push
(bad)
int3
ret
lock
pop
jnp
stos
loopne
mov
cld
sub
addr16
jno
pop
test
sbb
cmp
inc
xchg
add
jnp
xchg
mov
pop
inc
pop
jo
mov
cmps
ins
sar
and
mov
stos
cmp
and
jg
rol
sub
push
cmp
jae
cli
aaa
xor
mov
fstp
and
shr
xchg
popf
fistp
iret
push
bound
xor
push
hlt
stos
dec
jle
(bad)
cs
addr16
and
sub
mov
dec
xchg
scas
outs
leave
mov
push
repnz
std
fst
pop
xchg
jno
std
in
dec
pop
out
in
jmp
pop
mov
jnp
mov
adc
pushf
pop
sub
push
mov
stos
and
pop
and
xchg
add
mov
div
stos
jno
pop
add
mov
push
repnz
jb
sub
sub
or
outs
jmp
out
cdq
xor
bswap
jbe
or
jmp
mov
jmp
adc
and
jnp
shl
dec
jl
mov
pop
ror
call
les
jno
dec
sbb
lods
sbb
dec
pop
lods
daa
retf
popa
cwde
cwde
dec
jno
jmp
sbb
cmp
in
mov
jns
dec
dec
popf
pop
push
or
retf
and
js
es
jmp
outs
prefetchnta
aad
sbb
mov
out
add
leave
cmp
aam
out
jge
push
hlt
sub
dec
mov
push
or
out
int3
arpl
(bad)
cmp
mul
push
or
dec
or
in
outs
leave
in
jecxz
push
xchg
xor
mov
int
stc
cmp
fwait
sbb
jnp
jge
xor
and
add
push
ja
inc
push
dec
test
sub
cmp
and
cdq
cmps
bound
adc
adc
loop
stos
inc
cmc
adc
out
add
(bad)
rol
jmp
add
and
sub
add
stos
in
cwde
nop
xchg
out
adc
and
and
es
imul
fs
fs
jp
xor
xor
mov
mov
(bad)
sbb
cmp
mov
addr16
and
call
dec
lods
jb
jle
rcl
enter
add
xor
jnp
add
xor
sub
out
mov
jmp
pop
lods
push
inc
push
sbb
retf
or
mov
ror
jg
mov
push
sub
test
or
sbb
sub
fist
jl
cvtpi2ps
div
fild
fadd
(bad)
je
test
and
pop
and
inc
sub
cmp
(bad)
push
add
clc
mov
pop
sahf
stos
xchg
sbb
mov
lods
ror
sub
nop
mov
(bad)
cs
add
jmp
push
sar
sub
mov
push
mov
mov
movs
xor
imul
xchg
rol
sub
jb
sub
push
or
fnstenv
jbe
ret
(bad)
jmp
mov
mov
xor
lods
adc
ret
push
xchg
repz
sub
repnz
outs
das
push
mov
adc
xor
inc
mov
mov
div
imul
in
pop
(bad)
mov
jmp
das
shl
pop
pop
push
jns
stc
sbb
jge
mov
xor
repz
loope
pop
jmp
mov
shl
dec
pop
dec
xchg
xchg
add
enter
ss
shr
repnz
sbb
ds
cmp
lock
sub
inc
icebp
or
icebp
jp
int
add
sbb
push
cmp
sub
int3
outs
pop
xor
fdivrp
mov
xchg
push
pop
int
mov
sub
sub
mov
cmc
jnp
jl
cli
(bad)
fwait
scas
ins
sub
mov
jne
pusha
or
jle
xor
test
jecxz
jne
(bad)
mov
int
sahf
enter
call
jecxz
test
in
cmp
mov
bound
(bad)
lahf
shr
sub
fcom
cwde
aad
xor
push
sbb
ret
ss
xor
mov
xchg
pop
out
(bad)
cwde
cld
jg
aas
xchg
repnz
mov
push
adc
clc
push
retf
(bad)
sub
popf
mov
fisttp
outs
adc
cld
fisttp
out
mov
test
mov
sbb
(bad)
retf
loopne
sub
jp
loope
aad
sub
outs
pop
or
imul
sub
mov
int
xor
and
mov
sub
ret
fsubr
push
imul
or
mov
xchg
mov
xor
scas
stc
xchg
cmp
push
outs
daa
ins
rcl
popa
pusha
mov
push
lods
add
movs
pop
test
leave
jecxz
mov
jmp
pop
jg
pop
repnz
data16
ret
jno
push
fisttp
mov
ret
add
or
movs
mov
xchg
push
shl
sbb
cmps
jmp
stos
add
cmp
sub
int
cmp
jae
push
or
icebp
dec
aas
ja
out
repnz
aas
ins
test
les
sbb
sub
rol
ficomp
xchg
retf
inc
and
lds
adc
test
ins
std
fisttp
popf
nop
mov
cmps
jno
cmp
cmp
dec
cmp
hlt
mov
loop
popf
retf
mov
in
mov
retf
push
pop
mov
es
movs
mov
ds
xor
hlt
fdiv
mov
test
inc
iret
leave
(bad)
test
mov
dec
test
frstor
pop
gs
jbe
jmp
jmp
shl
outs
data16
or
cs
adc
sub
jmp
retf
jg
lahf
mov
mov
inc
xchg
outs
daa
mov
lock
pop
jmp
enter
sub
and
std
in
adc
lds
in
inc
sbb
fcmovb
loopne
or
in
retf
hlt
add
in
frstor
loop
xchg
mov
mov
inc
nop
jmp
test
xor
sub
mov
inc
inc
sbb
xchg
int3
xor
pop
retf
cli
dec
adc
loop
leave
and
neg
ins
loop
add
test
ss
mov
scas
inc
dec
pop
and
cs
mov
cmp
fist
adc
xor
xor
fsubp
arpl
test
fdiv
mov
xchg
mov
fisttp
add
out
or
mul
dec
shl
call
lods
cmp
pop
push
fwait
mov
cmc
push
jp
jno
fwait
mov
push
dec
aad
and
stos
inc
mov
xchg
push
imul
out
inc
arpl
mov
jmp
push
loop
bound
or
shl
rcl
cld
jl
adc
or
js
(bad)
cmp
neg
sub
lahf
sbb
pop
mov
rcr
xor
cmc
cli
imul
ins
or
shl
push
dec
xchg
or
rol
sbb
xlat
jmp
imul
mov
fidivr
mov
repnz
stos
xchg
push
dec
dec
aaa
inc
mov
test
and
outs
xchg
push
xchg
(bad)
mov
rcl
into
les
push
fidiv
aas
mov
cmp
push
inc
jae
imul
aad
imul
add
js
adc
out
mov
nop
jno
ins
jae
test
dec
and
cdq
inc
push
cmc
ret
add
leave
pusha
inc
in
pop
inc
(bad)
cmps
dec
or
std
and
xor
sub
add
aaa
or
call
pop
rcr
mov
push
mov
popa
aaa
(bad)
push
shr
(bad)
add
mov
ja
setae
add
clc
cwde
cmp
jmp
shl
addr16
fstp
or
(bad)
dec
dec
mov
jmp
jp
xor
jne
shl
(bad)
cmp
cs
inc
xchg
cmp
jl
and
push
sahf
into
xchg
xchg
sbb
outs
add
and
(bad)
shl
es
or
or
lds
clc
jo
test
jbe
push
div
mov
mov
lds
not
and
ret
cmp
ja
cmp
retf
mov
cs
adc
mov
imul
fst
inc
push
out
inc
mov
daa
mov
mov
aaa
inc
xchg
call
mov
into
pop
test
push
es
ja
int
mov
es
mov
xor
adc
out
shl
pop
sahf
rcr
call
nop
xchg
repz
repz
xchg
lea
pop
dec
clc
imul
outs
fcmovu
fs
pop
jnp
pusha
aas
push
(bad)
pop
lods
push
rol
dec
cmp
movs
and
mov
fldcw
add
push
shl
mov
neg
sbb
pushf
cld
push
ja
ins
mov
lahf
fcom
test
mov
push
or
add
sbb
dec
jb
(bad)
hlt
movs
call
ins
sbb
test
rcl
push
es
dec
pop
mov
inc
cs
lods
lahf
repz
inc
cmp
dec
(bad)
mov
xchg
fidiv
inc
xchg
inc
test
sub
cmp
adc
retf
(bad)
sti
or
lods
leave
jnp
inc
mov
les
out
inc
sti
imul
cdq
cwde
pop
sub
or
inc
not
les
mov
shl
fcomip
cmp
and
int
pop
cwde
aam
mov
xchg
ins
loope
stos
mov
cmp
jl
(bad)
or
mov
out
shl
cmps
inc
jns
mov
jo
add
stos
packsswb
jae
push
leave
mov
mov
jge
cwde
push
push
push
push
call
sub
fdiv
lods
(bad)
out
into
fadd
sahf
fmul
lea
(bad)
loopne
out
jl
stos
bound
inc
lock
les
test
add
mov
das
xchg
lock
cli
pmulhw
xor
pusha
xor
movs
jg
or
std
xchg
and
icebp
mov
sbb
leave
jmp
or
dec
pop
fld
xchg
rcr
inc
jo
push
jo
sbb
sub
push
adc
(bad)
push
arpl
call
inc
jnp
mov
jns
mov
add
or
mov
jge
popa
dec
cmps
das
sbb
push
int3
(bad)
mov
xchg
jbe
fs
lods
lea
cs
shl
xchg
pop
dec
sti
popf
sti
sar
push
jns
pop
mov
stc
xor
inc
fucomi
push
out
mov
ds
mov
mov
xchg
push
xor
cmc
push
mov
or
enter
int3
add
inc
(bad)
pushf
mov
inc
gs
inc
test
xchg
cld
pop
into
fdiv
cmp
push
inc
stos
addr16
jl
sub
in
sub
(bad)
adc
cmp
pusha
addr16
inc
leave
push
ds
in
or
jl
mov
or
mov
movhps
ins
push
out
mov
dec
call
repnz
dec
call
mov
sub
adc
xchg
jae
dec
cld
pusha
(bad)
icebp
pop
jp
sbb
cdq
inc
call
jmp
not
dec
outs
enter
out
int3
addr16
push
xor
mov
fdivr
ret
fidiv
loopne
sti
imul
mov
test
mov
ja
pusha
mov
mov
in
and
mov
inc
add
dec
in
pushf
nop
mov
aam
sti
arpl
leave
mov
add
push
mov
std
sub
lea
pop
test
mov
and
mov
std
mov
fld
stos
sti
or
ret
push
adc
xor
pop
jo
push
add
cmp
lock
cmp
push
ret
jecxz
jg
stos
cmp
mov
cmp
cwde
xor
and
jge
leave
xor
mov
mov
add
mov
add
and
pop
mov
mov
call
hlt
out
mov
js
dec
icebp
cwde
push
loop
cli
int
lahf
(bad)
popf
mov
xchg
xchg
jmp
or
jmp
push
xor
pop
push
jne
xor
add
aam
jbe
fsubr
mov
das
inc
pop
aad
xor
mov
sbb
retf
(bad)
out
stos
xchg
movaps
cmps
fld
pop
add
xor
mov
add
popa
pop
movs
mov
dec
cmps
xor
lods
xchg
pop
daa
xor
pop
pop
push
popa
add
jg
push
dec
sti
out
aam
inc
int
xchg
xchg
xor
pop
and
xor
mov
(bad)
jne
out
pop
fld
xchg
mov
mov
mov
std
and
pop
ins
loop
mov
mov
pop
mov
push
and
sbb
xchg
xor
js
(bad)
fwait
mov
pop
int3
cmp
mov
cli
adc
or
out
gs
sbb
fdiv
cmp
pop
ret
mov
daa
sbb
xor
ror
fidiv
fcom
adc
jp
xchg
call
xchg
mov
(bad)
xor
cmp
jmp
dec
int3
test
(bad)
jmp
dec
mov
cld
jo
dec
cmp
sti
push
shr
cwde
push
lds
ja
cmp
pop
idiv
or
mov
arpl
pop
xor
inc
add
mov
mov
imul
int
test
loopne
out
dec
int
mov
aas
in
push
xlat
adc
sar
sbb
int3
inc
scas
mov
les
inc
push
and
push
mov
or
dec
call
xchg
pop
mov
sahf
xor
adc
test
mov
rcl
push
sar
add
xchg
push
mov
imul
fisub
repz
hlt
test
imul
or
lds
out
mov
neg
dec
loopne
fldenv
test
inc
mov
push
cmps
sub
(bad)
iret
push
cdq
out
mov
cmp
sbb
call
sahf
cmc
sbb
hlt
(bad)
int3
xchg
js
jl
shl
cld
rcl
in
lahf
gs
stc
jns
popf
pop
mov
popf
nop
mov
push
inc
jb
jp
jmp
inc
dec
in
add
icebp
in
or
push
mov
adc
lahf
xchg
lahf
in
mov
inc
aam
sub
cs
mov
popa
adc
cmp
xchg
das
lds
cmp
and
sbb
sahf
sbb
adc
data16
inc
test
mov
jno
adc
jno
in
call
and
xchg
mov
inc
mov
mov
mov
leave
(bad)
movs
hlt
je
rol
sub
sub
js
cwde
or
xor
adc
das
dec
movs
call
mov
es
adc
ret
(bad)
adc
(bad)
in
je
aas
stos
loop
or
and
dec
push
out
cmp
cmp
in
push
sub
cmp
or
cmps
sbb
in
call
mov
nop
movs
jl
pop
aaa
fdiv
fdivr
sahf
sbb
xor
dec
jge
inc
shl
fsubr
addr16
or
les
push
in
mov
mov
cli
xchg
scas
add
mov
inc
test
fsubrp
sub
data16
scas
addr16
and
into
aad
jno
sbb
mov
(bad)
add
(bad)
push
xor
or
or
pushf
out
add
add
adc
dec
xor
xchg
lods
push
xor
mov
sub
mov
stos
and
cwde
mov
cli
popa
dec
imul
aas
stos
xchg
aam
sbb
rcr
(bad)
sti
dec
hlt
mov
lock
ret
dec
loopne
fs
outs
fsubr
sbb
sbb
pop
mov
mov
loope
jmp
push
add
in
mov
test
ret
pop
lds
push
inc
inc
cdq
pushf
popf
sar
mov
pop
and
jg
into
aam
addr16
inc
mov
arpl
lods
setl
cmps
es
mov
jmp
ret
fwait
stos
jmp
mov
add
pop
test
mov
movs
xor
cmps
xchg
add
pop
imul
outs
in
psllq
loop
fwait
movs
es
and
cmc
inc
sahf
stos
push
fimul
imul
sbb
mov
or
fst
shl
arpl
in
mov
mul
int3
and
scas
test
push
jg
jmp
xchg
in
sub
inc
mov
cdq
daa
push
pusha
sbb
(bad)
cs
pop
mov
icebp
jl
test
les
aam
lods
(bad)
fxam
dec
inc
xor
in
mov
cmp
imul
sbb
xchg
or
xor
out
pop
sub
test
or
pop
fnstcw
mov
adc
mov
jnp
push
inc
je
repz
mov
test
jp
xchg
dec
add
xchg
or
add
adc
enter
pushf
pop
and
cmps
movs
jle
scas
loope
fdivr
in
sub
xchg
fisttp
cmp
fistp
jmp
push
dec
movs
and
dec
in
call
push
adc
xor
aaa
push
push
mov
xor
outs
inc
in
push
or
pop
addr16
pop
adc
aas
pushf
sub
lds
imul
cmp
mov
(bad)
fmul
js
xchg
sub
jge
in
push
bound
popa
pop
aaa
(bad)
pop
fst
jge
movq
add
dec
fcomp
mov
leave
jns
retf
fwait
repz
jbe
push
mov
lds
les
arpl
cwde
jmp
jge
and
bound
or
shl
add
mov
jae
inc
mov
push
ja
out
movs
scas
mov
pushf
scas
xor
rdmsr
xchg
scas
inc
xor
jbe
add
mov
out
push
jae
in
mov
xchg
fcmovu
sbb
and
lea
sbb
xchg
mov
data16
imul
add
ins
test
push
and
mov
pop
hlt
cdq
dec
loopne
inc
inc
or
cs
fwait
retf
pusha
and
int
push
adc
jmp
fisub
out
inc
aad
mov
dec
shl
sahf
fist
scas
add
or
(bad)
pushf
pusha
imul
in
fdivr
shl
xchg
scas
mov
or
mov
jnp
push
gs
mov
mov
sar
or
xchg
loope
sahf
repnz
sub
mov
lahf
push
daa
ror
nop
dec
iret
(bad)
cmc
xchg
ins
(bad)
cli
and
inc
test
repnz
xor
sar
rol
not
dec
cmp
xor
leave
lods
sbb
jae
test
add
or
jge
xchg
inc
stc
popf
ret
sti
ret
jl
unpckhps
loop
cdq
and
xchg
cmp
call
(bad)
mov
sub
push
sbb
inc
scas
jne
xchg
xchg
dec
mov
adc
mov
push
push
test
scas
(bad)
fisttp
outs
inc
push
push
out
add
aad
jno
shl
(bad)
in
cld
pop
xchg
and
mov
push
xor
push
pop
mov
xor
sbb
jmp
nop
das
mov
fisttp
lods
mov
std
je
jmp
icebp
push
in
dec
add
arpl
mov
pop
dec
pop
push
sub
dec
jmp
mov
aam
into
rcl
pop
cmp
mov
sub
dec
and
xor
ficom
adc
dec
cmp
jmp
mov
bsr
pop
daa
dec
std
xchg
push
pushf
push
inc
jnp
dec
push
push
xlat
mov
imul
jne
add
iret
inc
dec
sti
ret
in
mov
nop
pop
mov
fnsave
movs
mov
dec
loop
jns
sbb
ficomp
push
ins
sar
pop
mov
mov
push
pop
add
int
jmp
int
movs
xor
test
lods
ret
into
cmps
and
aas
xchg
inc
add
(bad)
push
shl
or
push
aam
or
mov
(bad)
cmps
cmp
out
dec
mov
test
jle
in
popa
cs
ins
stc
clc
xor
add
xor
or
push
inc
clc
xor
mov
in
and
stos
pop
scas
jb
push
repnz
test
sub
mov
in
inc
sahf
push
mov
loop
sbb
push
cmp
xchg
jp
(bad)
out
add
sar
jnp
ror
add
icebp
int
out
icebp
or
inc
pop
jmp
dec
mov
inc
sub
iret
cmp
arpl
mov
jle
or
sub
jbe
and
jns
unpcklps
xchg
mov
stos
ins
mov
push
ret
jle
and
sbb
icebp
cs
out
leave
xchg
aas
ror
add
xchg
jo
pop
mov
xor
data16
scas
shr
mov
jle
adc
add
mov
push
enter
cmp
in
aam
loop
jge
fadd
pop
(bad)
xlat
(bad)
scas
out
sub
rol
sub
mov
sbb
and
inc
and
dec
or
push
cmps
add
stc
inc
jns
lahf
inc
es
push
unpckhps
sub
or
cmp
jns
add
kmovw
stc
xor
popf
idiv
in
(bad)
lea
mul
(bad)
jbe
dec
cld
cmp
adc
or
adc
mov
push
das
retf
jno
loope
dec
ficom
xchg
lea
shr
cli
mov
je
test
imul
or
repz
(bad)
cmp
or
sub
adc
push
cmp
popa
test
push
pusha
mov
xor
mov
push
mov
pop
fild
adc
in
pop
sbb
jae
add
cmp
aam
out
dec
dec
adc
dec
fcomp
inc
icebp
xor
fld
movs
mov
cmp
rol
icebp
ja
and
adc
mov
mov
dec
bt
scas
imul
mov
sahf
cmps
call
cmp
fidivr
jg
adc
fwait
push
cmps
(bad)
push
mov
cmp
add
mov
cmp
mov
pop
cmp
into
adc
sub
out
shl
jno
aas
sbb
icebp
dec
movs
push
mov
adc
cmovp
xchg
push
xchg
mov
pop
test
mov
out
mov
nop
inc
out
jno
leave
mov
sbb
mov
xlat
pushf
je
fs
data16
sub
js
dec
adc
xchg
dec
xchg
(bad)
std
xchg
(bad)
lods
sub
fist
movs
call
fist
jge
fldenv
push
jbe
sbb
iret
fld
sub
pause
stos
mov
adc
mov
daa
add
or
neg
mov
(bad)
adc
mov
leave
xor
jmp
adc
int3
mov
cmps
cmp
not
push
iret
test
lahf
stc
push
dec
fs
call
pop
loope
call
(bad)
push
cmp
outs
pop
xor
mov
push
jmp
sub
jns
dec
frstor
imul
cdq
or
cwde
cdq
dec
push
mov
jmp
neg
pop
sub
jnp
xor
xchg
and
mov
popa
imul
jb
idiv
ins
sub
pushf
outs
ror
adc
push
add
push
scas
pop
int3
jg
or
inc
in
call
stos
in
fmul
pop
push
pop
pop
movs
ficom
add
xchg
in
fistp
or
dec
jb
mov
jmp
lea
fmul
jns
rcl
jne
xchg
and
pop
sbb
in
or
inc
jecxz
dec
adc
adc
rcl
lock
fwait
ja
pusha
and
push
jne
stos
out
cmp
push
cmp
dec
mov
sub
popa
jb
jns
clc
aad
arpl
outs
movs
lock
aaa
xor
test
xor
loopne
rol
push
(bad)
jle
mov
rcr
lods
je
jmp
loop
sbb
sbb
dec
dec
lock
cld
sub
or
out
push
cld
mov
aam
arpl
or
addr16
lods
test
jg
jbe
and
and
xor
in
fidivr
xchg
aas
add
inc
inc
mov
or
loope
and
stos
lods
gs
cwde
les
lods
adc
dec
mov
int
into
and
je
pop
mov
xchg
push
outs
push
dec
arpl
hlt
in
dec
aaa
xchg
cmp
xor
fld
xchg
mov
adc
or
push
popf
jae
stc
rcr
out
call
inc
clc
push
xor
mov
xchg
lock
mov
in
cmc
(bad)
ins
imul
mov
mov
mov
mov
sbb
mov
lea
cli
(bad)
les
dec
(bad)
cmp
arpl
push
sub
ins
xchg
mov
std
sub
mov
xchg
mov
jo
ss
mov
xor
mov
inc
lock
repnz
pop
xor
pop
test
xchg
jl
jle
enter
mov
aam
mov
fisttp
sub
aad
das
push
fild
in
outs
jbe
sbb
repnz
scas
adc
cld
inc
(bad)
fnsave
nop
inc
sub
fsubrp
mov
popf
in
add
cmp
mov
push
rcl
mov
mov
gs
and
xchg
stc
mov
ficom
(bad)
jmp
dec
scas
and
xchg
push
js
lods
inc
adc
loopne
sub
xchg
pop
(bad)
sbb
mov
or
and
(bad)
mov
and
out
jo
xlat
add
mov
mov
pop
(bad)
les
loopne
repz
scas
jge
fild
das
jnp
in
or
dec
and
add
nop
inc
add
movs
sar
jmp
ds
cli
jne
ret
mov
or
cmp
test
(bad)
popf
xchg
push
pop
cmp
data16
dec
mov
jne
cdq
nop
loope
dec
xor
push
mov
mov
dec
jmp
sub
inc
push
nop
loope
mov
fsubr
rcr
jl
add
pop
call
stos
das
xor
dec
cmp
dec
pop
mov
nop
ret
jmp
adc
push
adc
or
mov
test
cmp
sub
(bad)
arpl
adc
mov
ss
std
mov
xlat
fadd
std
stos
jb
lea
fisttp
retf
push
fist
sub
inc
stos
and
jne
popf
int
fs
mov
or
test
(bad)
xor
jl
pop
div
mov
inc
shl
mov
jmp
outs
and
and
jo
push
xchg
pop
out
js
ins
fstp
mov
pop
pop
or
scas
dec
je
jo
xchg
out
jmp
or
add
push
push
mov
sub
jmp
popa
loop
outs
or
aaa
or
fcmovnb
pop
cli
dec
nop
int3
pop
xlat
inc
inc
jbe
(bad)
mov
mov
and
test
dec
push
mov
aad
add
jecxz
xchg
hlt
pop
xchg
mov
cmp
push
push
das
mov
inc
or
sbb
out
lock
mov
js
daa
icebp
mov
inc
and
cmc
jns
movs
inc
push
pop
pop
add
imul
xchg
out
sub
jmp
call
pop
and
push
mov
push
xchg
cmp
idiv
and
ja
mov
out
repnz
call
and
xchg
adc
pop
adc
mov
xor
jecxz
aad
pushf
dec
xchg
inc
sbb
sahf
cmp
fisubr
ret
sar
or
jnp
push
jmp
add
loop
push
xor
mov
push
fiadd
cli
mov
enter
arpl
adc
std
sub
out
iret
cwde
in
push
push
mov
push
ret
sbb
xchg
cs
adc
pop
mov
pop
jl
push
ds
test
lods
dec
iret
cli
xor
int3
mov
movs
nop
cmp
or
jmp
not
retf
adc
arpl
push
add
inc
hlt
xchg
into
sti
xchg
sbb
add
mov
and
push
add
mov
outs
stos
inc
or
xchg
sbb
cmp
aad
shr
inc
inc
std
outs
mov
test
dec
xchg
xchg
and
shr
ret
gs
inc
daa
jb
pop
cdq
jne
pusha
movs
jge
inc
xchg
xchg
daa
push
xor
je
and
test
outs
test
fwait
xlat
mov
sbb
in
mov
movs
xchg
xor
xchg
mov
fld
int
xchg
xchg
jae
cmp
inc
xor
cmp
mov
retf
enter
ficom
cli
mov
mov
add
mov
retf
push
pcmpeqw
mov
(bad)
xchg
popa
sar
dec
pop
push
sub
or
punpckhwd
cmp
sahf
mov
and
sti
cmp
lds
mov
aas
and
dec
and
outs
inc
jbe
adc
addr16
pop
dec
mov
xor
repnz
mov
lea
sub
mov
ins
pop
jp
call
push
mov
scas
sahf
inc
jno
mov
es
add
mul
std
jl
(bad)
mov
xor
jge
inc
ins
es
push
aam
cmp
jno
xchg
push
cmp
push
ins
scas
das
or
xlat
mov
push
xchg
mov
jnp
cli
pusha
mov
push
lea
inc
pop
fs
in
sbb
jns
sub
(bad)
fs
enter
add
push
adc
in
mov
fld
or
sub
push
inc
ds
sti
lock
pop
je
sti
mov
inc
adc
stos
mov
sub
jmp
mov
call
inc
mov
daa
fcomp
xchg
inc
enter
push
jl
jge
shl
arpl
pop
inc
lea
pop
mov
mov
inc
shl
or
dec
mov
add
lods
pop
(bad)
sbb
pop
call
fwait
cmp
dec
lods
pop
mov
adc
push
test
test
and
cdq
xchg
clc
sar
js
mov
add
dec
cwde
arpl
mov
push
adc
dec
test
fild
xchg
gs
add
pop
out
out
jg
dec
out
pop
cmp
xor
mov
mov
dec
dec
and
std
adc
lock
fld
arpl
and
sbb
inc
sahf
test
ss
jmp
pop
clc
scas
mov
std
add
add
fcmove
retf
mov
push
push
(bad)
mov
std
hlt
in
cmp
shl
neg
xor
pop
mov
jp
mov
or
mov
sti
shr
pop
push
inc
sti
lods
adc
scas
idiv
inc
mov
mov
aam
repz
cmc
mov
mov
sbb
xchg
and
pop
pop
mov
fs
push
add
xchg
fcom
jp
les
leave
mov
dec
ret
pop
fmul
sbb
xchg
push
shl
push
jnp
or
cs
retf
lock
add
or
cmp
xchg
add
movsx
push
ficomp
mov
movs
inc
cmp
jg
arpl
scas
xor
xor
or
inc
push
jbe
mov
scas
sbb
pusha
mov
push
jecxz
clc
stc
cwde
adc
xchg
fnstenv
push
inc
add
mov
stos
mov
je
xchg
std
ret
mov
or
inc
ret
js
sub
loopne
out
(bad)
out
pop
add
jmp
pop
div
or
dec
jae
jg
(bad)
push
aas
mov
test
ja
xchg
stos
cmps
pop
pop
jns
loope
int
cmc
aas
or
sbb
(bad)
movs
in
nop
add
test
out
xchg
rcr
sbb
jge
mov
ss
mov
pop
outs
mov
xor
cmp
pop
cmp
fwait
loop
rol
sbb
xor
jecxz
retf
dec
call
mov
pop
add
idiv
cdq
sbb
add
scas
retw
mov
or
cmps
jo
je
popf
cmp
std
das
pop
mov
rol
cmp
pop
inc
shl
add
pushf
in
imul
pushf
lods
jmp
dec
mov
dec
aaa
mov
push
inc
loopne
or
xor
shl
jmp
sbb
pop
cld
lock
mov
ja
mov
pop
adc
(bad)
push
sub
inc
imul
sbb
mov
outs
sbb
nop
xchg
or
pop
pop
xchg
fdivp
enter
out
sahf
and
call
out
inc
or
xchg
mov
(bad)
mov
adc
sbb
add
and
inc
neg
sbb
cmp
clc
mov
fidivr
out
cwde
fs
add
mov
in
loopne
jecxz
push
out
and
cmp
inc
retf
rol
adc
xor
xor
push
loop
and
inc
sub
gs
inc
add
sub
test
pusha
inc
dec
push
gs
int
mov
retf
(bad)
ss
fwait
inc
les
xchg
adc
mov
fist
pop
or
xor
retf
cmp
push
lock
ins
or
scas
xchg
aaa
sahf
push
xchg
bnd
push
dec
mov
push
jo
(bad)
clc
add
or
dec
in
mov
xor
movs
lea
pusha
mov
and
cld
xchg
outs
jp
adc
cmp
call
jge
sbb
push
jmp
push
or
test
cmp
mov
mov
out
iret
lds
jmp
add
ret
in
mov
xchg
and
loopne
pop
lods
mov
or
xor
xchg
loope
pushf
jle
pop
in
repz
test
cmp
out
bswap
xchg
pop
mov
ret
in
pop
arpl
dec
jno
inc
ret
ret
pop
mul
add
fld
mov
mov
pop
jge
mov
adc
lahf
push
adc
hlt
inc
jo
sbb
aam
adc
sbb
mov
inc
inc
jae
aam
sbb
wrmsr
cmp
inc
pop
or
(bad)
jmp
cwde
lahf
sti
xchg
sbb
sahf
pop
mov
sbb
hlt
sbb
pop
xchg
inc
dec
in
jle
dec
hlt
jmp
fs
in
dec
push
push
mov
or
dec
ret
and
pop
push
cs
out
pop
bound
lock
stos
add
dec
push
sub
mov
cmp
ret
adc
jo
mov
jmp
or
test
imul
cmp
xor
(bad)
sub
mov
xchg
repz
(bad)
rcl
call
(bad)
sub
jg
test
xchg
(bad)
enter
imul
and
out
or
gs
push
add
shl
cmc
jae
mov
sub
aas
push
mov
mov
(bad)
sub
sub
cmp
mov
or
arpl
into
in
inc
or
das
ds
stos
xchg
retf
lods
ror
push
inc
pop
dec
sbb
adc
out
xor
cmp
imul
imul
and
loope
pop
pusha
adc
das
inc
jns
ja
arpl
daa
lods
clc
out
nop
pop
xlat
inc
(bad)
mov
jle
mov
push
jmp
mov
pop
push
mov
bound
cli
dec
pop
sub
jg
push
xchg
gs
mov
stos
pop
dec
add
dec
test
push
add
inc
test
inc
mov
sti
or
dec
pusha
or
mov
push
gs
iret
ret
test
jns
dec
xchg
adc
fcmovbe
aad
jmp
popa
mov
mov
inc
fisub
outs
jnp
movs
je
jno
jns
adc
inc
pop
call
shl
(bad)
cmp
push
mov
sbb
sti
jg
loopne
(bad)
jecxz
xor
hlt
pop
and
sahf
push
frstor
fsub
dec
mov
int3
scas
add
dec
ret
xlat
pop
add
xor
cdq
jg
ins
add
repnz
sahf
fwait
inc
lahf
jle
cmp
jg
in
push
ror
jge
psubusw
adc
xor
das
dec
fldenv
test
push
neg
push
nop
inc
push
aam
cmp
out
pop
outs
add
cmp
push
pop
pop
out
(bad)
jne
rol
je
cmp
or
std
rol
outs
mov
pushf
retf
and
mov
stos
in
pop
inc
lock
lods
stc
and
sbb
aas
test
inc
xor
outs
fst
in
or
xchg
adc
sar
dec
cmp
sbb
and
test
dec
add
xchg
mov
mov
mov
pop
xchg
test
mov
std
ret
js
jp
cmp
cmps
shl
push
(bad)
hlt
enter
or
mov
jno
sub
sahf
outs
fsub
inc
lea
rol
jb
dec
ins
adc
popa
fstp
je
shl
(bad)
div
imul
cmp
outs
mov
dec
cld
pop
jmp
fwait
fwait
sub
cmps
add
js
mov
fwait
adc
jmp
out
dec
fdivr
mov
mov
ins
mov
mul
jo
or
lock
retf
mov
outs
or
mov
pusha
inc
clc
fld
sub
enter
cmp
mov
imul
jg
push
rcl
ss
fsub
xchg
mov
push
or
sahf
loop
jecxz
sub
outs
and
adc
call
push
js
mov
cmps
xor
xchg
gs
jae
aas
pop
sub
mov
out
ss
jnp
mov
add
xchg
sub
cmps
in
lods
mov
cmps
imul
into
mov
sub
or
mov
popa
int3
mov
ins
fcmovu
jb
cmovnp
cmps
pushf
icebp
cmps
cmpps
mov
mov
das
imul
inc
and
xor
pusha
inc
cmp
lsl
xchg
cdq
add
icebp
cwde
mov
scas
cld
push
cld
fimul
xor
inc
add
jb
ja
jns
xor
sahf
push
jge
and
sub
retf
ret
hlt
pop
pushw
jmp
adc
test
pop
xchg
mov
not
lahf
push
cs
add
cli
hlt
cmps
jbe
and
adc
push
out
fidivr
jns
push
mov
mov
out
adc
xor
icebp
lods
fdivr
jnp
sub
int
lahf
das
jmp
push
jns
mov
push
adc
stc
scas
mov
xchg
(bad)
sub
ins
inc
xchg
cdq
mov
mov
xor
sub
sbb
cmc
call
xlat
inc
and
or
sbb
pop
int3
daa
add
cli
pusha
fadd
fdivr
sub
adc
ror
jecxz
out
sar
int3
pop
scas
jmp
inc
enter
rcr
addr16
into
lods
stos
mov
pusha
das
add
xor
pop
adc
jb
mov
sbb
imul
mov
into
pushf
jb
imul
ficomp
xchg
fucomip
and
shr
clc
mov
cli
xchg
xchg
jae
pusha
bnd
shl
lahf
mov
inc
or
mov
je
pushf
xchg
into
mov
jno
xor
scas
scas
into
rcl
mov
rol
test
inc
mov
cwde
add
icebp
cmp
mov
xchg
fist
aas
mov
sbb
mov
push
sti
cwde
(bad)
stos
dec
fucomip
mov
daa
(bad)
int
mov
pop
jge
inc
loope
sbb
mov
mov
outs
jae
pop
les
scas
or
mov
inc
dec
enter
(bad)
ficomp
pop
mov
jns
pop
jnp
in
or
jmp
and
int3
lea
inc
imul
dec
rcr
fdiv
mov
add
and
prefetch
and
or
out
mov
mov
mov
fwait
add
or
aam
test
and
ins
adc
stc
shr
adc
sub
retf
jl
mov
and
cmp
ja
or
mov
(bad)
xchg
rcr
ds
nop
shr
mov
loope
or
xchg
loopne
cmp
stos
sbb
inc
ret
fld
and
in
sti
test
(bad)
in
iret
cmc
dec
aaa
jbe
xor
fcom
ret
add
sub
mov
dec
sti
imul
mov
fs
xchg
and
push
gs
pop
je
or
mov
and
imul
push
mov
xchg
clc
push
int3
cmc
ja
push
cmp
add
rcr
test
jmp
adc
movs
pop
push
push
test
adc
inc
pusha
idiv
sbb
out
and
loope
fs
add
fs
cmp
repnz
icebp
push
(bad)
ins
enter
or
stos
sub
jl
cmp
lods
mov
(bad)
mov
mov
adc
mov
sbb
pop
shl
xchg
mov
sbb
jns
jmp
sbb
call
mov
mov
(bad)
movs
push
ds
sub
cmp
xor
sbb
dec
sub
stos
dec
out
hlt
mov
dec
test
into
fdiv
ss
xor
inc
inc
fs
and
loopne
xor
sbb
or
(bad)
jnp
into
pop
cli
mov
lahf
rcl
stc
ret
loop
bnd
leave
sar
sbb
pushf
sub
mov
stc
in
add
mov
lods
jge
mov
xchg
xor
mov
inc
sbb
fdiv
push
jns
xchg
rcl
sar
jmp
cmp
push
push
and
or
rcl
jns
daa
iret
test
pop
mov
fsub
cs
xchg
fwait
loop
jae
xchg
adc
dec
mov
mov
fdiv
jge
jb
jae
push
mov
add
mov
fisttp
xor
(bad)
cwde
xor
dec
mov
push
adc
sub
retf
lock
or
xlat
sahf
add
in
test
pop
push
push
aaa
outs
xor
and
aas
xchg
pop
daa
adc
fmul
or
inc
dec
gs
cmp
and
lahf
sub
push
imul
cmp
jp
mov
cmp
imul
lds
mov
lods
clc
in
mov
stc
sub
pushf
jg
jecxz
push
ja
xchg
mov
ret
sub
cli
and
clc
xchg
loope
xor
mov
retf
jg
add
mov
sub
(bad)
jecxz
imul
je
pusha
pop
adc
add
sbb
xchg
cmp
sti
cld
push
fwait
add
xor
sub
mov
dec
sbb
mov
fisttp
fcomp
mov
nop
xor
call
dec
xchg
push
mov
(bad)
mov
std
mov
jmp
ficom
and
int
adc
pop
pop
fmul
cmp
adc
test
out
pop
shl
xor
push
sub
jns
add
loopne
pop
pop
imul
movs
push
jno
add
mov
out
enter
pusha
lock
pop
test
out
rol
cwde
pop
stos
jecxz
and
mov
shr
retf
push
pop
sbb
aas
clc
xchg
iret
sub
push
add
test
pop
movs
jecxz
and
push
jns
sbb
int
rol
mov
lods
mov
repz
sub
mov
add
cmp
sbb
pop
gs
lea
cli
jge
adc
push
cmps
jbe
add
xchg
mov
lock
inc
mov
mov
pop
cld
aaa
aaa
inc
cmp
in
in
sub
cld
repnz
(bad)
and
jo
stos
daa
jge
ror
aas
ins
push
in
fsubr
paddw
push
rol
dec
clc
xor
call
lahf
adc
ja
leave
ret
in
sub
ins
push
jb
pusha
addr16
pop
daa
push
sub
mov
or
sahf
retf
pop
mov
popa
sti
and
mov
cwde
mov
es
pop
xor
xchg
jbe
push
pop
fsubr
dec
jmp
(bad)
sub
fld
push
retf
ror
int
ins
aaa
xor
or
sub
pop
dec
sub
clc
(bad)
pop
rol
rol
pop
ja
and
sbb
inc
sbb
or
mov
ja
out
cmps
or
daa
cmp
hlt
inc
retf
inc
pushf
xor
dec
addr16
addr16
outs
mov
ins
inc
push
xchg
xor
or
jle
or
add
shr
cmp
adc
inc
sbb
sub
push
adc
ds
mov
jp
loop
loop
adc
leave
out
cmps
loopne
mov
dec
sbb
je
iret
cdq
cli
jae
inc
inc
mov
mov
jge
add
into
add
jae
rol
std
or
pop
add
loope
inc
in
pop
pop
adc
retf
cld
sub
mov
mov
cmp
movs
lea
or
mov
or
out
jns
mov
adc
add
mov
xchg
and
repz
cli
mov
shl
jnp
jmp
ss
jb
ja
cmp
xchg
div
retf
adc
mov
nop
fptan
adc
pop
sbb
dec
loopne
xchg
fld
rcl
jp
pushf
arpl
mov
add
(bad)
cmp
cmc
cdq
int3
mov
imul
fidiv
sub
pop
mov
mov
add
data16
add
xor
pop
and
cld
sub
ja
lea
cmp
adc
jbe
bound
(bad)
adc
arpl
outs
hlt
test
jmp
movs
int3
(bad)
add
or
xchg
sbb
push
cmp
or
cmp
test
dec
adc
ds
xchg
jae
es
cmp
in
sub
das
test
fisubr
(bad)
push
push
adc
xchg
fnsave
pop
sub
(bad)
pop
pop
popf
xor
mov
pop
shl
imul
fldcw
scas
jns
imul
cmp
les
xchg
and
ror
jmp
jle
fld
xchg
mov
ficomp
add
outs
adc
mov
bnd
pop
push
pusha
les
add
and
shl
xchg
mov
ins
fstp
add
rol
(bad)
icebp
cmp
shl
cld
fs
test
aas
or
push
(bad)
mov
out
and
adc
xchg
xchg
cwde
inc
jo
in
sub
ins
mov
mov
inc
dec
fnstcw
sub
adc
into
pop
fwait
jb
xor
mov
adc
daa
iret
push
test
mov
shl
in
into
sub
nop
mov
loopne
(bad)
cmp
sahf
jmp
mov
leave
jmp
scas
adc
shr
iret
loope
dec
dec
jmp
xor
jecxz
mov
jbe
cdq
push
ror
xchg
jae
push
push
mov
movs
xchg
mul
jmp
int3
addr16
sub
dec
fistp
stos
aaa
fmul
inc
bound
sub
inc
add
jge
mov
repz
and
mov
leave
idiv
xor
cmp
and
int
fisub
je
cld
jnp
mov
mov
xchg
in
fisub
loope
xchg
retf
fwait
inc
add
lock
jb
in
cmps
cwde
jae
pop
push
call
ficomp
adc
hlt
clc
xchg
mov
xor
mov
sahf
(bad)
xchg
iret
pop
mov
std
pop
dec
push
xchg
pop
or
mov
fwait
and
retf
pop
dec
lods
sbb
jmp
push
adc
cmp
add
mov
pop
inc
cwde
loope
pusha
fcomi
dec
xor
xchg
mov
out
mov
sti
test
push
ins
push
or
mov
push
cmp
out
test
jmp
movs
addr16
outs
cmp
(bad)
add
in
xchg
inc
fwait
lods
imul
movs
int
mov
mov
sub
hlt
push
sbb
inc
sub
push
scas
inc
sbb
or
xor
mov
stos
mov
or
add
xchg
xlat
inc
mov
addr16
inc
aaa
inc
adc
cdq
scas
adc
mov
or
out
inc
outs
sbb
or
(bad)
mov
fcomp
pop
jbe
shl
xlat
xlat
adc
test
sub
push
fiadd
dec
sbb
add
gs
inc
and
push
leave
mov
or
out
jnp
in
mov
or
je
cmp
jmp
and
jp
pop
xchg
mov
pushf
sbb
xchg
int
sahf
mov
dec
pop
mov
dec
mov
fwait
hlt
inc
int
add
jl
das
out
outs
ins
clc
call
cmp
xchg
aas
xchg
(bad)
retf
cmp
(bad)
push
inc
mov
or
sub
pop
idiv
mov
add
sbb
push
aam
jne
sub
shl
adc
xchg
mov
stos
mov
jmp
inc
xor
stos
int3
and
xor
jne
imul
push
or
js
mov
mov
ins
or
mov
or
mov
dec
jbe
scas
sti
rol
lahf
out
out
push
shl
push
jge
mov
sbb
mov
loopne
xor
enter
push
outs
int
xchg
std
cmps
cmp
arpl
shl
rcr
lds
cmps
add
mov
aad
dec
pop
dec
mov
ret
js
hlt
sti
adc
aad
out
xchg
push
call
mov
sar
mov
std
pop
enter
sub
xchg
movs
xchg
mov
dec
mov
push
mov
jle
cwde
arpl
jo
or
call
pop
jne
xor
int3
xlat
jle
mov
test
pop
mov
xor
push
leave
sub
mov
jl
enter
ins
repz
ror
rol
ins
mov
adc
pop
lods
imul
inc
inc
inc
xchg
xor
cmp
pushf
shl
imul
mov
sub
outs
dec
lea
test
repz
shr
cmp
int3
in
movs
lds
outs
xor
stc
fwait
shl
lods
cwde
adc
out
sub
jns
xor
daa
sbb
adc
stos
xchg
sbb
pop
cmp
add
nop
jecxz
cdq
ja
jno
cmp
pop
sbb
into
mov
inc
loopne
mov
(bad)
je
inc
sahf
fwait
fs
push
std
fwait
js
movs
(bad)
ftst
xchg
xchg
stos
adc
xchg
xlat
xor
adc
into
imul
fdiv
sub
jne
iret
jno
int3
(bad)
mov
inc
in
les
push
js
dec
pushf
fdivr
dec
scas
add
jnp
test
pop
das
loopne
retf
js
push
push
into
rol
adc
jl
dec
jno
popf
stc
xchg
add
push
dec
(bad)
pop
jl
test
fadd
cwde
inc
pusha
in
in
cdq
hlt
pop
push
mov
cdq
cmp
mov
jnp
jge
cli
fisub
int
push
jmp
sbb
adc
cmps
imul
pop
mov
dec
icebp
gs
and
pop
pushf
int3
test
sub
cmp
mov
jb
add
jmp
push
lds
lea
cdq
mov
push
push
push
sti
movs
enter
xor
clc
dec
cld
aaa
repz
rcr
out
and
sub
mov
add
push
mov
sti
jnp
pop
cmp
dec
cdq
fidivr
cmps
jae
les
rcl
call
sbb
fld
inc
xchg
test
push
sub
pop
stc
mov
sbb
fstp
or
enter
cmp
dec
jp
adc
fcom
dec
jne
mov
mov
xlat
push
and
mov
and
stos
ins
inc
jl
pusha
enter
sbb
gs
sbb
in
or
imul
sub
mov
loope
xchg
pop
pop
loop
mov
push
or
mov
retf
mov
mov
xchg
pop
out
inc
ins
cmp
sbb
mov
inc
dec
cmp
push
cmp
jecxz
into
or
dec
sub
fs
pop
cmp
sub
push
xor
sahf
pause
jae
push
mov
ins
push
xchg
xor
mov
adc
xchg
jae
adc
loop
add
jle
mov
add
add
dec
retf
pop
pop
pop
sbb
push
jns
in
sub
mov
xor
jae
addr16
call
cmp
sahf
adc
push
mov
xchg
daa
add
mov
push
cs
scas
stc
mov
call
jmp
movs
(bad)
shl
pop
gs
pushf
mov
pusha
push
push
(bad)
daa
mov
mov
sahf
cmp
sub
stos
pop
jo
pop
xor
mov
dec
jle
push
or
dec
int
ss
inc
xchg
retf
cmp
adc
xor
pop
test
add
inc
lea
fcmovnu
mov
pop
inc
inc
pop
adc
xchg
fadd
adc
cli
mov
dec
jo
mov
or
cmp
adc
add
pop
jle
lea
call
sub
repz
ds
xchg
gs
or
mov
cmp
xchg
pusha
je
(bad)
retf
sub
fs
jl
xor
daa
lock
data16
call
popa
mov
add
mov
cmp
in
dec
mov
fwait
jbe
mov
pop
loop
shl
jge
ds
mov
mov
shl
mov
sahf
and
sbb
xchg
push
aad
test
jno
scas
popf
mov
mov
push
test
inc
dec
mov
ret
pop
jl
mov
mov
inc
cmc
push
dec
je
cmp
jbe
xor
fs
loopne
mov
dec
daa
mov
dec
and
addr16
fwait
aad
mov
into
je
jb
fisubr
xchg
icebp
cmp
neg
(bad)
sbb
or
in
out
pop
jae
push
jno
leave
xor
fsub
out
jge
sbb
or
cmps
fdivrp
pop
out
xchg
xchg
mov
mov
out
imul
jp
movs
push
(bad)
imul
add
shl
push
push
xor
ja
popf
mov
adc
and
retf
xor
gs
pop
fild
adc
xor
mov
popf
mov
jmp
rcr
push
mov
cmp
std
mov
cld
movs
das
shl
ret
rcl
fst
xchg
test
in
sub
test
addr16
(bad)
dec
std
jg
rcr
push
pop
jmp
push
jl
sub
scas
dec
movs
data16
cmp
mov
mov
loopne
push
mov
call
out
cmps
ss
add
or
xchg
pop
lea
pop
cmc
mov
dec
jmp
jmp
sbb
cdq
(bad)
jp
mov
sub
mov
add
adc
jne
add
xor
int3
cmps
push
retf
jge
cmp
cmp
stc
pop
into
pop
xchg
xchg
cmp
shr
cmp
retf
push
jo
fcom
pop
adc
jge
push
mov
or
sti
pop
sub
or
dec
sbb
mov
sbb
cmp
adc
inc
aam
jno
dec
(bad)
fist
jne
push
movs
outs
mov
inc
iret
adc
rcr
ret
stos
and
push
popa
mov
mov
ret
inc
call
out
push
cmp
xchg
xlat
in
fwait
jmp
arpl
imul
jmp
lock
les
imul
push
pop
imul
scas
adc
push
sub
mov
push
sbb
mov
loop
pop
and
xchg
bound
lock
xchg
cwde
stos
lea
push
inc
cmps
xchg
sub
les
rol
adc
cwde
mul
stc
call
mov
push
movs
pop
xchg
dec
xchg
test
and
and
out
mov
inc
cld
xor
sub
scas
add
jge
cmp
es
push
mov
(bad)
int
fld
jns
ss
popf
daa
enter
pop
push
xchg
outs
push
imul
push
mov
push
xchg
into
fisub
in
test
inc
mov
(bad)
mov
pop
out
inc
and
pop
mov
cmp
mov
mov
and
into
pop
fisub
mov
jle
out
fstp
jmp
pusha
sbb
rcl
push
iret
cmp
or
jmp
xchg
or
add
movs
fstp
out
sub
or
daa
xchg
test
adc
(bad)
xor
dec
cmps
cwde
rol
aas
cmps
jl
lahf
scas
loopne
jae
cmps
mov
stos
inc
clc
xchg
cmps
xlat
jg
leave
cmp
adc
push
retf
push
push
xor
dec
adc
push
add
leave
imul
cdq
xchg
push
mov
xor
or
xchg
push
stos
imul
xchg
cmp
in
pop
dec
retf
(bad)
(bad)
lods
cmp
pop
jl
rol
jbe
data16
(bad)
mov
xchg
movs
aad
popf
sahf
ss
sar
jne
jle
cmps
xor
add
fistp
sbb
cmp
jbe
shr
in
push
fstp
mov
adc
adc
outs
pop
jnp
fcom
inc
aad
mov
jecxz
mov
repnz
xor
adc
popa
xlat
sbb
lahf
mov
push
lahf
test
mov
pushf
arpl
shr
in
pop
mov
sbb
shl
pop
and
sar
or
adc
arpl
jo
mov
mov
js
add
sti
push
push
and
loopne
mov
cmps
push
(bad)
gs
jg
jnp
xchg
jns
dec
cli
out
sti
popf
retf
mov
xchg
fbld
cs
or
jae
jp
jge
fs
out
mov
dec
dec
scas
into
and
test
cmps
cld
and
jb
mov
test
sub
add
xchg
es
lock
xchg
jl
int
or
ins
aaa
movs
addr16
jmp
adc
pop
ror
jge
out
mov
jge
mov
sub
cld
popf
or
push
mov
iret
fwait
adc
dec
out
adc
(bad)
sbb
jo
clc
inc
fcmovne
(bad)
cmc
int3
loope
sbb
shl
int3
push
rcl
inc
fidivr
iret
jns
mov
jno
lods
xor
and
add
leave
sbb
(bad)
push
cmps
arpl
mov
test
stc
in
cmp
fild
or
mov
or
call
out
out
fs
fsubr
(bad)
cmp
xchg
in
pusha
pop
push
cmps
dec
pop
sar
pop
clc
call
rcr
or
lock
out
pop
loopne
in
aas
pop
mov
xor
ror
fcomp
ror
das
rcl
sub
lods
lock
std
xor
jno
dec
mov
push
push
out
pushf
pop
xor
aam
and
jns
shl
cmp
dec
push
repz
stos
and
inc
or
(bad)
mov
and
push
iret
sub
mov
mov
or
cwde
sub
sub
inc
sar
je
ror
cmp
xor
mov
push
mov
int3
inc
mov
jge
dec
jne
push
sub
pop
pop
test
ins
jae
and
icebp
in
shr
and
test
mov
(bad)
shr
xor
ss
dec
icebp
cs
mov
sbb
cmp
xlat
out
mov
and
repnz
and
push
xchg
(bad)
mov
push
test
aad
shl
add
add
mov
adc
iret
pop
sbb
cld
or
adc
push
pop
adc
loopne
(bad)
cld
lods
pop
repz
ja
(bad)
(bad)
xchg
jmp
aam
test
test
cld
loop
cmp
dec
call
cmp
and
stc
ja
movs
inc
pop
jp
adc
add
stc
fldenv
aad
inc
enter
mov
xor
sbb
scas
test
nop
cmc
leave
nop
jecxz
mov
shl
jecxz
ins
pop
aas
and
loopne
xchg
cli
mov
in
xor
jecxz
mov
hlt
pop
jne
(bad)
fadd
pop
mov
hlt
or
imul
jge
bnd
mov
lods
cmc
mov
mov
sub
dec
jmp
stos
cmps
xor
pop
repz
fmul
dec
popa
inc
jae
test
sbb
dec
rol
test
ss
cdq
xor
test
leave
in
adc
sub
pop
adc
and
mov
inc
out
fstp
jns
xor
mov
int3
mov
jmp
jge
fpatan
sub
ins
cmp
inc
addr16
div
scas
pop
mov
cmp
mov
xor
call
pop
hlt
inc
push
xor
repz
sti
inc
int3
hlt
adc
mov
dec
adc
mov
int3
add
out
loop
(bad)
jp
ds
push
sar
mov
enter
scas
jp
add
shl
mov
jo
push
aas
push
xchg
clts
mov
fisubr
mov
ins
bnd
in
jle
xchg
mov
loopne
inc
mov
push
mov
es
in
push
add
fs
push
push
shl
mov
mov
sub
into
das
std
or
imul
jo
js
ins
js
cs
iret
adc
lods
cmc
push
(bad)
adc
loope
pop
lods
bound
shl
into
pop
fadd
inc
pop
pop
sbb
cmp
or
or
xchg
dec
(bad)
xor
(bad)
fst
jle
dec
stc
mov
mov
add
cmp
sti
lods
dec
ins
mov
dec
sbb
clc
jecxz
ins
add
gs
sub
jmp
addr16
daa
cld
jnp
(bad)
cli
mov
cmp
add
scas
(bad)
fdivr
aam
xorps
cmp
xchg
add
sub
jecxz
pop
jp
cdq
xchg
jo
mov
js
icebp
inc
push
or
shr
dec
movs
stos
push
ja
dec
mov
or
xor
xchg
mov
push
(bad)
push
dec
mov
bound
pop
iret
mov
inc
imul
popf
aas
adc
sti
out
out
cs
lods
ja
and
push
aad
(bad)
pusha
rcr
xchg
sbb
jl
fcom
inc
lea
push
int
repz
outs
and
cmp
or
lea
or
mov
shl
ins
popf
les
popa
pop
push
inc
jmp
or
mov
retf
outs
sbb
pushf
sti
(bad)
jo
mov
mov
xchg
mov
sbb
adc
fsub
or
out
sbb
nop
gs
push
les
mov
jge
inc
pop
pop
pop
retf
mov
ret
enter
call
test
mov
repnz
push
or
fs
outs
mov
cld
xchg
xor
(bad)
hlt
dec
test
arpl
into
ins
adc
jp
cmp
mov
sbb
add
imul
jmp
jbe
std
call
fs
push
cs
nop
(bad)
pop
ret
clc
fs
scas
bound
add
jge
mov
xchg
jbe
std
mul
and
dec
or
call
je
cmps
(bad)
xlat
(bad)
jns
sbb
xchg
cmp
leave
std
cwde
mov
leave
mov
jle
inc
xor
pop
(bad)
push
pushf
sbb
sub
int3
loope
dec
test
fadd
sar
mov
mov
pop
lods
cld
rol
rcl
call
arpl
loopne
(bad)
push
xchg
mov
adc
loop
push
int
hlt
xor
mov
es
in
out
cmp
mov
sub
push
daa
pop
(bad)
mov
fimul
cmp
push
imul
xchg
popa
push
mov
aam
push
js
lock
lahf
mov
jecxz
icebp
out
jb
call
outs
adc
pop
in
fld
jne
cmp
fldcw
out
stos
movs
pop
pop
shl
rcr
sub
int
xchg
call
add
jmp
fst
jmp
mov
xchg
mov
loopne
push
jmp
out
fwait
sub
cmps
repnz
lods
sub
enter
cs
mov
lods
nop
loopne
loop
mov
pop
xchg
rdmsr
pop
ret
pusha
fs
xchg
sahf
push
push
adc
xor
sbb
pop
cli
jmp
push
sti
xor
jbe
pop
pushf
add
cmps
sub
pop
nop
adc
pop
iret
call
pusha
lods
push
cmp
inc
cld
stc
adc
jg
stc
pop
dec
mov
jne
sbb
(bad)
jns
loope
test
sub
out
xchg
add
add
sbb
repz
xor
mov
outs
xor
push
or
push
and
fild
cmp
aad
not
out
push
xor
and
jg
xlat
xor
fisub
icebp
adc
push
aad
push
sub
sbb
rcl
or
cs
ins
jmp
or
mov
sbb
mov
dec
mov
mov
jne
push
add
mov
ret
scas
jg
adc
pop
xchg
enter
and
movs
rcr
jae
icebp
pop
xchg
add
pushf
push
push
(bad)
scas
fidiv
cs
add
std
repnz
cmp
xor
popa
ja
sbb
inc
add
and
ret
lods
xchg
fisttp
jl
std
sbb
pusha
mov
ja
mov
jg
pop
and
jge
stos
dec
lods
loope
xchg
iret
out
rcl
ds
push
in
das
leave
push
scas
loop
xchg
add
xchg
and
cmp
das
call
jp
xchg
jnp
push
vrsqrtss
in
mov
in
add
adc
je
cmp
mov
inc
(bad)
in
mov
leave
dec
jge
std
std
push
inc
shl
mov
cmc
push
es
cmp
xor
gs
imul
jp
add
jne
ins
and
jmp
push
mov
test
repz
sbb
pop
cmps
and
mov
fisub
iret
fisub
popa
adc
call
lea
mov
add
(bad)
jl
loop
pop
test
xor
scas
in
test
mov
loop
cmp
sub
rcl
sti
scas
mov
xchg
loop
cmc
mov
out
ret
mov
das
or
mov
dec
mov
or
add
retf
and
cmp
call
jge
shr
xor
pop
stos
or
add
pop
pop
mov
and
inc
(bad)
sub
adc
dec
hlt
and
cmp
xchg
xor
sbb
(bad)
push
pop
mov
add
pusha
sbb
dec
jno
enter
mov
inc
lahf
sbb
outs
sbb
test
pop
cmps
jmp
sbb
enter
stos
and
cdq
xlat
fwait
icebp
lock
push
adc
nop
cmp
out
scas
(bad)
mov
add
sub
sbb
fxch
mov
dec
inc
js
push
cld
js
in
lea
add
shl
call
loop
jp
and
inc
xor
aam
ds
or
mov
adc
int
xchg
push
mov
lods
sbb
push
cld
or
add
sub
cmps
test
fistp
call
cli
dec
addr16
ins
fcompp
sub
add
popf
dec
aas
xchg
retf
xchg
mov
sub
(bad)
pop
out
in
push
in
addr16
mov
pop
cmc
in
jmp
outs
xchg
(bad)
hlt
ficom
int3
lock
pop
test
ins
inc
add
ret
call
test
(bad)
mov
xchg
loop
aaa
jg
jo
out
dec
js
loope
movs
aaa
or
in
mov
call
(bad)
push
lods
dec
cmp
lods
inc
mov
hlt
pop
mov
mov
mov
je
xor
inc
call
pop
cmp
popf
xchg
jecxz
xchg
fs
jo
gs
and
jg
popf
stc
mov
fcom
or
rol
sbb
test
or
(bad)
out
dec
in
pop
inc
sub
gs
ins
pop
hlt
add
inc
jno
sub
sbb
sbb
sbb
cli
popf
shl
(bad)
inc
outs
and
fxtract
iret
lock
jmp
out
xor
adc
inc
add
loope
pop
outs
leave
ins
cmps
fisubr
pop
inc
jmp
popa
pop
jnp
sbb
das
repnz
aaa
jp
adc
cmps
sub
cli
sahf
and
ins
pop
dec
scas
fwait
hlt
jp
mov
sbb
jo
(bad)
xor
sbb
imul
pop
jno
cs
sub
fs
mov
xchg
ss
mov
movs
fbstp
test
out
cmc
jle
mov
mov
jns
jge
in
fdivr
fimul
dec
or
sbb
test
(bad)
xor
aad
ss
inc
xor
call
inc
cs
fisub
cmps
bound
lds
dec
inc
fdiv
jl
sub
test
arpl
arpl
jmp
pop
cmp
mov
out
xor
adc
sbb
dec
ficomp
xchg
call
jp
(bad)
repnz
mov
sbb
call
sbb
ret
or
sbb
and
int
mov
lods
mov
ss
push
cmp
xchg
mov
(bad)
(bad)
push
scas
dec
into
mov
shr
sbb
stos
inc
and
ret
bound
xchg
outs
fwait
not
rcl
out
pushf
jl
movs
cmp
jmp
mov
cwde
mov
xor
dec
cmp
mov
fsub
fs
or
inc
push
(bad)
sbb
(bad)
fstp
dec
pop
ja
popa
call
xchg
arpl
xchg
ror
imul
jmp
call
add
arpl
mov
lods
fcom
add
data16
retf
xchg
or
pop
dec
jns
push
push
(bad)
popa
sub
or
in
sub
aad
fistp
loop
push
xor
cmp
punpckldq
fnstsw
cmps
popa
xlat
pop
pop
cld
cmp
sub
pop
dec
(bad)
adc
dec
cdq
test
sbb
test
sub
icebp
cs
loopne
jmp
xchg
mov
rol
nop
add
push
mov
xor
inc
(bad)
ins
daa
jns
dec
add
fcmove
movs
cld
mov
jbe
push
sbb
repz
aad
or
xlat
inc
aam
call
ins
mov
pop
push
cwde
popa
xchg
or
rcr
xor
and
inc
push
mov
loope
movs
push
sub
inc
cmp
pop
push
push
addr16
jb
mov
shl
int
sub
mov
sti
test
xchg
pusha
xor
fsub
retf
jmp
enter
and
ss
xchg
repz
push
mov
sub
imul
pop
jne
mov
pop
inc
loop
jl
sub
test
mov
and
repnz
stc
test
call
cmp
retf
cmp
daa
push
loopne
das
jns
and
add
jb
mov
sbb
sub
ins
dec
adc
or
pop
mov
fnop
enter
push
jge
sar
fidivr
sub
mov
push
mov
mov
lods
jnp
retf
inc
jle
mov
fld
test
stos
mov
push
clc
dec
push
jg
addr16
js
test
mov
sub
retf
cmc
lea
imul
ds
inc
pushaw
mov
(bad)
mov
cmp
repnz
push
lods
into
arpl
push
add
cmp
jno
jg
jne
or
push
pop
push
xor
ficom
int
mov
pop
mov
push
dec
loope
inc
sbb
retf
mov
js
mov
retf
xor
cmp
sti
cmp
xchg
shl
out
xchg
push
lds
(bad)
mov
push
mov
scas
fcomp
add
ins
xchg
mov
mov
inc
mov
adc
int3
push
enter
mov
test
jb
(bad)
int3
xchg
sbb
ror
xchg
fidiv
dec
xchg
mov
imul
test
xor
sub
sub
outs
jae
int3
dec
rcl
cli
(bad)
fldcw
add
adc
int3
sub
gs
lahf
xchg
dec
sbb
dec
xor
hlt
pop
xchg
ss
mov
adc
jp
shl
addr16
inc
jae
or
or
pop
loope
aas
xor
cmp
leave
jge
ret
bound
jno
js
cmp
test
and
jecxz
mov
pop
push
lds
lds
int3
mul
cwde
dec
pop
sub
das
jle
sbb
pop
sub
rcl
iret
jle
daa
or
cmps
cdq
mov
lahf
pushf
mov
hlt
ss
pushf
push
xor
add
enter
pop
xchg
inc
mov
xor
cdq
or
mov
outs
and
loop
or
les
pop
shr
pop
cmp
scas
ret
sbb
pushw
lods
scas
and
sahf
cli
cmp
mov
or
daa
loopne
dec
pop
mov
or
or
push
adc
xchg
das
jbe
cwde
les
inc
sbb
dec
jno
retf
daa
xchg
and
push
mov
xchg
test
sub
fisubr
rcl
retf
std
and
mov
push
scas
or
mul
jg
xlat
fistp
push
mov
jmp
jnp
sbb
adc
dec
clc
fwait
ret
mov
enter
sub
stc
sub
ror
enter
cmps
fld
and
test
pop
mov
cmc
sti
sti
js
out
mov
inc
sub
pop
call
and
jne
call
and
add
in
arpl
pusha
mov
inc
out
popf
xor
retf
pop
aad
xlat
call
fsub
push
retf
inc
adc
(bad)
daa
out
pop
shr
sbb
aam
cmp
jmp
mov
jmp
or
jmp
sbb
out
dec
fisttp
sub
stc
loopne
pushf
inc
xor
fsub
ss
mov
jge
pop
cli
out
and
or
add
test
dec
sahf
sahf
mov
dec
aam
push
mov
mov
ins
retf
arpl
push
(bad)
clc
mov
fist
int
or
pop
adc
pop
dec
arpl
jmp
clc
(bad)
xchg
pop
sub
test
in
(bad)
enter
fisubr
icebp
inc
adc
jmp
mov
sti
push
mov
rcr
dec
in
fcom
jl
cmp
and
popa
movs
push
jmp
les
sti
popa
sbb
add
(bad)
aam
inc
call
sub
push
(bad)
cmp
leave
add
cmc
dec
stos
data16
cmp
push
xor
loopne
ins
hlt
cdq
test
xchg
mov
inc
xchg
sbb
mov
sbb
or
scas
or
add
mov
fdivr
fcomip
rcl
and
jmp
inc
fdiv
rol
mov
or
sbb
scas
(bad)
repz
mov
js
mov
(bad)
int3
in
pop
xchg
stos
push
fcom
mov
mov
fwait
mov
outs
imul
sub
sub
push
js
(bad)
int3
lds
mov
imul
mov
jmp
and
aad
int3
enter
int
jae
loope
cwde
dec
jnp
jg
lods
in
int3
mov
mov
and
or
fst
shl
dec
pop
jmp
xchg
cwde
xchg
or
scas
sbb
inc
ins
pusha
fiadd
in
cli
fdivr
cli
popf
cmp
fist
cli
aas
fcom
dec
dec
(bad)
loop
xchg
inc
jne
aam
and
outs
or
shr
and
cmp
jge
pop
and
pop
pop
adc
add
das
jg
das
mov
shl
scas
test
(bad)
pop
jge
mov
push
ins
imul
inc
inc
xchg
cdq
mov
or
clc
gs
push
jns
jae
mov
and
call
cmp
sbb
out
retf
mov
xlat
daa
sub
scas
adc
and
xchg
out
pop
xchg
and
(bad)
xchg
push
and
and
cmp
sbb
aaa
push
fisttp
jne
jmp
jo
dec
sub
add
mov
jbe
and
inc
add
(bad)
mov
sbb
xchg
and
push
cdq
dec
mov
inc
adc
mov
add
aas
loope
aas
push
cmc
xor
xchg
push
mov
pop
and
xchg
ins
loope
inc
(bad)
push
jae
cmp
loop
mov
ret
push
and
pop
dec
add
pop
push
cwde
out
retf
mov
iret
(bad)
scas
jmp
xrelease
fisttp
dec
aas
mov
movs
les
ins
jge
adc
inc
fistp
out
ja
jo
sbb
scas
rcl
fisttp
pop
test
add
shl
out
int
outs
push
mov
outs
and
push
push
into
out
jmp
xchg
stc
push
out
mov
mov
push
cmp
mov
inc
cmp
ret
jmp
out
jmp
jne
pop
stos
mov
aaa
jb
jne
stc
into
cmp
xchg
sbb
or
(bad)
push
jns
lods
pop
mov
pop
pop
test
jp
add
rcl
or
(bad)
(bad)
mov
xor
into
push
loopne
retf
lea
pop
cmc
jb
mov
jbe
cli
cdq
stos
inc
icebp
imul
xchg
shl
jg
test
fwait
cmp
xchg
add
add
push
add
xor
mov
lods
stc
sub
or
sub
adc
aad
dec
or
dec
jmp
jne
ror
mov
xchg
jle
cmp
and
xchg
bound
imul
and
stos
outs
inc
ss
(bad)
jg
push
jge
sub
jno
mov
jae
dec
daa
sbb
adc
lock
pop
inc
stos
xor
mov
test
pop
mov
rsqrtps
sbb
push
jmp
mov
(bad)
call
or
stc
pop
ss
outs
mov
pop
or
push
xchg
lahf
outs
jae
test
sub
add
cmps
cs
mov
loopne
adc
pop
lds
into
add
add
inc
imul
shl
int
push
jl
data16
adc
cmps
push
cmps
(bad)
sub
cwde
xor
outs
arpl
js
sub
push
cld
lds
or
xchg
jle
inc
xor
int
lock
ret
outs
push
out
jns
out
adc
jecxz
ins
push
cld
stos
(bad)
fbld
xor
test
dec
cmps
ins
(bad)
mov
sbb
clc
sub
mov
enter
popf
shr
shl
pushf
add
jmp
in
out
pop
out
rcr
sbb
gs
rcl
test
call
in
lea
cmps
stos
jmp
mov
(bad)
dec
cmp
cli
push
jg
cmp
adc
and
aas
andnps
(bad)
iret
inc
test
sub
fld
xor
mov
mov
push
outs
repnz
xchg
sub
in
inc
cld
mov
hlt
cmc
pop
in
sub
push
gs
aaa
pop
retf
push
cmp
call
mov
shr
xchg
jle
adc
mov
fcomp
dec
lds
jmp
lds
adc
clc
sub
int
jae
popf
cmp
cmps
das
ins
adc
fdiv
pop
cli
std
add
jmp
pusha
jb
mov
pop
push
jl
xchg
cmp
ret
cwde
dec
xor
(bad)
(bad)
push
push
scas
push
mov
xor
dec
xor
adc
push
hlt
cdq
mov
pop
in
push
out
push
adc
xor
mov
or
mov
lods
repz
mov
lahf
mov
into
xchg
inc
mov
imul
bound
stos
or
div
mov
pop
sti
add
sub
out
mov
fadd
push
into
sbb
adc
sbb
scas
xlat
mov
push
repnz
outs
xor
cli
(bad)
out
in
call
ret
iret
inc
repnz
jl
fidivr
jmp
dec
fild
icebp
cld
test
lods
mov
fsub
into
(bad)
mov
dec
push
adc
jl
popf
jmp
or
cli
cmps
clc
dec
clc
xchg
dec
out
sbb
push
scas
lea
call
jp
push
je
(bad)
xchg
pop
sbb
test
int3
add
fiadd
dec
(bad)
in
mov
ret
jecxz
fnstcw
xchg
icebp
or
fistp
cmp
xchg
fstp
test
inc
jl
mov
mov
pop
in
mov
test
mul
popa
mov
push
adc
push
pusha
adc
pop
mov
jne
daa
mov
xchg
stc
mov
adc
jp
pop
adc
(bad)
or
inc
call
inc
mov
cld
sub
inc
pop
cmc
loop
hlt
adc
add
repz
dec
push
sbb
cwde
xor
cmps
sar
xchg
sahf
jno
sub
xor
push
dec
ja
and
shl
stos
and
push
add
scas
int
mov
std
dec
xor
or
shr
dec
repz
inc
mov
mov
push
sbb
pop
push
test
pusha
fwait
mov
xor
pusha
scas
cmp
test
sub
imul
lahf
test
pushf
inc
in
addr16
jle
mov
es
or
jmp
adc
cmc
pop
sahf
xor
ins
retf
not
push
inc
test
in
ror
lds
sub
and
sbb
cwde
je
pop
push
stos
xor
repnz
mov
fidiv
or
cmps
(bad)
push
adc
jnp
xchg
stos
repnz
in
inc
and
and
adc
ret
call
xchg
xor
jle
cmps
xchg
sub
test
popf
pop
mov
in
ins
loopne
bound
dec
pushf
or
add
push
leave
jmp
mov
ds
retf
fnstcw
pushf
push
scas
push
and
in
stos
xlat
aam
in
inc
inc
dec
mov
mov
mov
aaa
add
in
out
cmp
mov
lock
dec
add
aas
inc
mov
sbb
cmp
imul
sbb
shl
imul
test
jb
leave
inc
addr16
hlt
cmps
mov
mov
loopne
mov
jp
jl
pusha
lds
adc
mov
cmp
push
pop
and
ret
xchg
scas
mov
popa
mov
xor
add
jmp
or
or
sub
push
dec
xchg
sbb
in
add
int3
in
sub
sbb
call
adc
add
xor
push
retf
sar
xor
mov
jne
into
push
jno
mov
ins
mov
pop
inc
and
xor
dec
mov
mov
pop
inc
push
xor
fisttp
enter
out
movs
dec
mov
imul
faddp
push
cmp
les
scas
xchg
arpl
cmps
xor
cmps
cmps
or
retf
std
push
dec
in
pop
data16
rol
pop
call
mov
(bad)
rep
jno
inc
mov
pop
or
js
dec
cld
xchg
sti
add
ret
iret
rcl
ror
outs
shr
add
add
hlt
add
and
call
dec
push
cmp
pusha
pop
div
inc
gs
mov
out
mov
out
ror
addr16
fwait
pop
dec
push
loop
hlt
inc
add
mov
call
cdq
jae
sbb
xchg
mov
adc
daa
xchg
jl
aas
push
int3
stos
dec
mov
jg
pushw
lock
or
pop
cmp
icebp
push
xor
ficom
das
ss
xor
xchg
push
mov
mov
mov
xchg
loop
stos
sahf
fidivr
jb
push
adc
(bad)
movs
ins
adc
cmp
sbb
adc
ss
mov
(bad)
je
jp
ret
imul
adc
or
dec
push
xor
and
hlt
sub
(bad)
sbb
inc
sub
cmp
fninit
fwait
and
and
imul
nop
xchg
push
psadbw
push
mov
je
mov
sub
adc
imul
pop
lds
mov
lods
cdq
jl
and
adc
mov
jo
fadd
inc
cmps
cmps
into
das
push
call
hlt
fcmovb
add
shl
inc
xchg
jp
sbb
add
call
sbb
data16
int3
movs
push
out
call
repz
jecxz
(bad)
je
push
and
xor
dec
xchg
cmp
div
sub
xor
gs
dec
pop
jmp
push
jp
pop
(bad)
ror
loopne
adc
push
mov
xor
js
inc
stc
test
loop
push
ss
adc
cmp
inc
sbb
shl
loopne
xlat
das
or
popa
pushf
mov
js
iret
mov
and
stc
jge
sub
adc
mov
arpl
adc
test
add
fdivr
(bad)
mov
sbb
cli
add
sbb
mov
adc
xchg
pop
in
xchg
jg
mov
imul
mov
pop
out
mov
mov
icebp
dec
cmps
jnp
sub
inc
pop
popf
jle
dec
cs
leave
cmp
(bad)
cmps
and
xchg
fistp
push
retf
in
inc
cld
or
mov
add
xor
xor
mov
sub
pushf
cmc
lods
mov
jge
cmp
jg
push
nop
scas
adc
pop
aas
mov
inc
pop
sub
adc
bnd
jbe
mov
shr
cld
lods
inc
(bad)
ficomp
rol
sub
in
jb
loopne
cmps
cmp
call
(bad)
fmul
xor
retf
loop
cmp
mov
loopne
bound
sahf
hlt
push
shl
sbb
cli
popa
cmp
mov
mov
ja
xchg
or
jno
imul
popa
sahf
mov
movzx
inc
int3
jmp
push
jne
das
or
enter
cmp
mov
xchg
sub
inc
mov
and
pop
push
mov
xor
pop
repz
imul
(bad)
cld
stos
xchg
fsubr
dec
leave
and
rcl
(bad)
cmps
push
push
loop
(bad)
push
jge
std
mov
mov
sub
add
inc
inc
pop
je
call
arpl
mov
ja
out
(bad)
fisub
clc
mov
adc
fcmovnb
enter
xor
xlat
or
inc
mov
nop
mov
dec
hlt
sbb
movs
imul
xchg
jns
sbb
test
sbb
jb
sbb
xor
scas
dec
idiv
jb
dec
inc
imul
in
push
pop
out
sbb
int
push
rcl
and
daa
mov
(bad)
imul
cmp
shr
adc
rol
mov
jecxz
lods
xor
inc
jns
leave
xchg
aad
xchg
jne
movs
repz
and
mov
add
jmp
inc
or
fiadd
sbb
outs
dec
inc
fnsavew
and
add
jae
sub
nop
stc
fstp
cmp
icebp
sub
add
adc
push
dec
xlat
ins
inc
push
jmp
xor
mov
add
sbb
and
mov
popa
fwait
cmp
cmps
adc
xchg
ins
pop
or
xor
cmp
sub
xchg
loopne
vpsraw
xchg
(bad)
and
std
pop
pop
add
or
mov
(bad)
mov
push
daa
push
pop
cmp
leave
mov
pusha
xchg
popf
test
mov
push
adc
dec
adc
outs
mov
loopne
push
xchg
clc
into
xchg
je
xor
xor
push
repnz
mov
jmp
inc
adc
pop
ss
je
daa
(bad)
inc
arpl
push
je
cwde
icebp
fld
xor
shl
movs
pop
aaa
adc
adc
jo
sbb
xlat
xor
(bad)
push
xor
out
aad
fcomp
imul
fs
leave
jl
retf
push
nop
xchg
outs
dec
ins
or
outs
jo
aas
sbb
jecxz
pop
jg
retf
fld
and
lds
jnp
shl
sub
test
xor
jns
stc
das
outs
adc
and
xchg
mov
adc
push
and
mov
jg
mov
int3
sbb
neg
pushf
xor
jbe
adc
scas
push
das
ficomp
jae
pop
pop
jno
xor
push
push
repz
jae
imul
popf
inc
aaa
in
push
push
jmp
lds
call
mov
push
adc
pop
mov
adc
or
inc
loop
inc
mov
add
out
stos
(bad)
or
leave
xlat
cmp
pushf
ins
in
mov
in
ror
xchg
adc
mov
(bad)
retf
jmp
in
int3
jae
lods
or
push
in
aad
jmp
nop
aam
ins
cdq
loopne
clc
mov
fucom
dec
inc
cmp
sub
data16
or
cld
nop
les
pop
mov
xlat
xchg
aam
push
out
retf
scas
xchg
inc
call
sub
js
ret
or
and
loop
shr
lock
cmp
test
adc
aas
push
sub
and
das
js
sub
jnp
inc
in
adc
sbb
test
sti
push
jmp
mov
movs
xchg
fisub
xor
cmp
fwait
cmp
sub
xlat
jge
call
dec
movs
jne
inc
mov
dec
std
xchg
sub
pop
mov
sbb
jl
push
mov
mov
ret
shr
arpl
sbb
mov
in
ins
adc
popf
push
rcl
jnp
sub
leave
into
sub
xor
push
cs
push
push
ror
std
sti
mov
clc
in
rcl
dec
and
fsub
add
xchg
cmp
add
and
dec
enter
(bad)
mov
imul
scas
inc
pop
daa
push
sbb
xchg
pop
cld
cmp
inc
lock
nop
in
out
xor
add
push
movs
pop
or
push
mov
nop
sub
dec
clc
lahf
dec
outs
das
cdq
mov
and
add
sbb
movlps
fwait
out
outs
popa
or
movs
push
xor
push
add
sub
pop
inc
mov
xchg
(bad)
aam
dec
ja
sbb
in
cli
jge
imul
fild
shl
dec
add
jp
arpl
push
jp
sub
call
xor
leave
add
cmp
push
imul
(bad)
fmul
jnp
push
std
sbb
retf
dec
xchg
dec
popf
cmps
cld
add
and
xchg
sbb
stc
and
adc
(bad)
sbb
sti
and
lods
arpl
mov
scas
cmp
pop
scas
shl
pop
icebp
nop
add
fidiv
mov
inc
mov
scas
shl
test
sbb
fst
cmp
repz
pop
imul
movs
stc
or
adc
aas
test
sbb
outs
cmp
sbb
out
sub
dec
or
mov
fimul
dec
out
adc
mov
repnz
call
aam
into
inc
fldenv
fcomi
sbb
out
pop
sub
add
inc
(bad)
dec
aam
sub
jmp
cmps
pop
inc
out
add
adc
sti
sub
cmp
scas
mov
dec
xchg
movs
mov
jge
push
adc
es
xchg
inc
scas
lods
scas
pushf
xor
xchg
popa
ja
jo
sub
xor
(bad)
aam
icebp
imul
mov
int3
std
pop
sahf
push
pusha
adc
jo
test
inc
mov
inc
push
repz
pop
jle
iret
in
or
js
cli
test
(bad)
jb
imul
mov
dec
repz
pop
xchg
cs
push
cli
cmc
je
sub
or
mov
and
mov
push
and
push
fistp
pop
jbe
loope
jecxz
push
(bad)
lock
in
sub
pop
mov
mov
jle
leave
sti
fdivr
mov
mov
cli
imul
mov
scas
mov
push
jb
fwait
push
out
retf
pop
sub
jmp
mov
repnz
sbb
scas
daa
(bad)
jecxz
jge
out
cdq
and
repz
aam
loopne
stc
sub
xchg
(bad)
movs
mov
rcr
aad
xor
nop
xor
mov
and
and
imul
(bad)
das
fwait
out
xor
outs
mov
mov
sar
pop
mov
call
stos
pop
push
jns
popa
jae
sub
push
lods
popa
cli
out
push
dec
xsave
call
pop
cmps
(bad)
fisttp
aam
ret
jnp
in
sub
inc
les
sbb
rcl
mov
mov
add
add
dec
repz
movs
fs
jne
cmc
mov
push
lods
test
push
inc
sbb
scas
sub
cmp
jl
lods
add
add
adc
ror
pushf
dec
mov
push
cli
shr
ds
push
jno
or
mov
inc
xlat
mov
jbe
cmp
or
cmp
cmps
mov
xlat
in
jp
mov
sbb
mov
add
out
sub
xor
loope
clc
ret
sub
mov
jmp
add
mov
pop
cmp
shl
pop
fsub
outs
popa
xchg
sar
pop
ds
fcomi
pusha
or
loope
adc
loope
ins
test
adc
repz
xchg
(bad)
aaa
xor
idiv
and
lds
aaa
push
adc
clc
inc
das
push
out
gs
and
xor
jno
adc
add
cdq
dec
imul
fadd
in
mov
sub
add
dec
fwait
add
fyl2x
add
mov
jg
fadd
inc
xor
ret
adc
ins
cmp
add
or
pop
push
sub
jns
add
repz
and
mov
push
push
cmp
mov
dec
mov
mov
mov
push
pop
sub
loop
(bad)
loop
dec
mov
xchg
ss
xlat
mov
push
jle
aam
jnp
jnp
jno
jnp
sti
mov
cmps
sbb
jle
or
push
xor
cs
loop
xchg
clc
scas
clc
imul
mov
fldcw
sbb
adc
and
or
xlat
shr
fbstp
movs
stos
aaa
or
shl
out
gs
adc
pushf
inc
pop
and
sub
cmp
cmps
mov
jb
rcl
ficom
movs
ins
ins
lods
iret
fstp
xchg
push
jge
jecxz
cmps
pop
test
retf
es
cs
mov
pop
cmp
je
test
mov
retf
sbb
jecxz
and
js
lds
lock
mov
nop
and
add
es
xchg
stc
ret
shr
xor
out
ins
dec
into
sbb
cdq
repnz
inc
add
aaa
sbb
mov
xchg
aaa
push
or
inc
jb
xchg
movs
inc
pop
inc
call
mov
push
pop
fwait
add
loop
pop
leave
xchg
psadbw
(bad)
(bad)
xchg
test
lahf
neg
xor
cmp
jp
jo
xchg
fist
fsub
dec
stos
cmp
dec
sahf
inc
jge
mov
xchg
cmp
cmc
cli
dec
mov
sub
pop
call
dec
ja
dec
xlat
call
mov
cs
lods
sbb
push
es
out
adc
xlat
mov
mov
push
jno
sub
fadd
call
sbb
push
sahf
fiadd
or
jbe
shl
(bad)
fimul
mov
push
or
and
cwde
setne
sbb
hlt
pop
pop
ret
fdivr
into
sbb
sbb
(bad)
jecxz
jg
adc
dec
neg
jg
inc
xor
mov
clc
test
jae
adc
loop
cmp
mov
test
test
(bad)
or
fcomi
sub
addr16
jl
cmp
push
or
sbb
pop
inc
data16
and
scas
and
addr16
lods
mov
loop
pop
scas
or
add
ficom
xchg
stos
cmc
inc
mov
add
gs
inc
int
xchg
xchg
adc
shl
ret
sar
outs
push
pop
adc
xchg
dec
fsub
aad
inc
ins
int3
fadd
push
xchg
(bad)
loopne
xor
outs
cmp
or
inc
add
cs
pop
pop
imul
jmp
dec
out
cmc
pop
xchg
lods
les
cmp
mov
jmp
jl
xor
cmc
cmp
clc
shl
dec
push
test
cmp
mov
sti
jle
jmp
push
push
fs
or
retf
inc
xchg
pop
cld
pop
add
out
maskmovq
test
mov
push
and
pop
add
inc
push
push
sahf
retf
lods
fisttp
jno
aas
adc
push
call
sbb
sbb
js
xor
mov
jno
pop
inc
add
test
dec
pop
xor
push
loopne
pusha
call
pop
dec
mov
inc
mov
push
push
adc
call
pop
dec
mov
cmp
pop
or
(bad)
dec
mov
mov
outs
call
inc
nop
scas
stos
or
(bad)
test
xchg
repz
mov
sub
xor
fsub
pop
bound
xor
mov
movs
sub
sbb
sbb
pop
jae
mov
out
push
mov
hlt
daa
sub
dec
retf
mov
sbb
and
shl
les
out
xchg
cdq
dec
adc
pusha
mov
int
pop
shl
jmp
enter
mov
sbb
sar
scas
xor
dec
and
and
enter
or
or
ror
cmp
and
mov
inc
fld
int3
emms
aaa
mov
fucomi
jp
scas
inc
js
aas
jne
ins
gs
cld
or
into
push
adc
sub
in
or
je
test
add
ins
pop
mov
cmp
xchg
mov
cmc
cli
cmp
adc
or
call
test
mov
movs
inc
les
outs
adc
add
out
and
imul
push
rcr
and
inc
sahf
test
push
adc
lahf
pop
outs
mov
retf
mov
mov
push
cdq
mov
addr16
out
inc
dec
clc
jne
add
or
out
call
nop
call
inc
dec
imul
pop
fstp
rol
leave
pop
bnd
jno
aaa
mov
iret
popf
jl
add
add
outs
out
xlat
scas
cmp
rcl
xchg
es
aad
mov
pop
mov
pop
aam
xchg
xor
out
mov
mov
mov
jb
ror
outs
popa
jbe
pop
push
dec
xchg
je
cmp
xchg
pusha
hlt
and
arpl
adc
mov
mov
or
jne
cmps
xor
xor
sbb
xchg
iret
ins
stos
movs
or
jb
xchg
xchg
movs
mov
(bad)
push
pop
dec
cwde
stos
mov
in
adc
push
fwait
lods
mov
inc
jp
cdq
fdiv
mov
push
clc
retf
mov
add
cwde
pop
inc
call
fdivr
jo
cdq
sub
xchg
sti
push
in
xchg
dec
xor
or
or
les
mov
imul
enter
out
loope
mov
jge
adc
aaa
or
loop
std
lods
rcl
add
mov
cmp
data16
scas
(bad)
inc
add
jne
cmp
xor
lds
or
les
xor
xchg
xor
dec
push
dec
dec
push
inc
mov
rcl
sbb
xchg
(bad)
daa
leave
movs
dec
pop
arpl
mov
ja
xchg
fdivr
psrld
or
mov
arpl
and
stos
fwait
jne
mov
cwde
inc
sub
ss
lods
scas
inc
sub
ins
pop
ds
out
sbb
adc
daa
add
rcr
(bad)
(bad)
mov
test
fimul
or
scas
cwde
cmp
fs
add
pusha
mov
sbb
push
call
adc
dec
cli
lea
js
rcr
mov
and
popa
inc
pop
ret
add
cmp
fisubr
je
sub
out
mov
ret
jbe
in
ss
mov
sub
push
out
retf
js
ins
inc
sbb
xchg
ss
jp
dec
out
stc
sbb
(bad)
sti
mov
mov
(bad)
sub
fsubr
je
sbb
mov
mov
loop
push
cmp
mov
cmc
cmp
dec
sub
jecxz
push
and
int
adc
sti
adc
jg
mul
test
inc
test
xor
repz
inc
pop
(bad)
mov
pop
mov
jmp
(bad)
shl
mov
inc
and
dec
hlt
push
scas
(bad)
cmp
add
lahf
mov
inc
push
imul
jns
test
out
xchg
sbb
retf
cli
les
sbb
dec
icebp
xor
ret
adc
sahf
xchg
pop
add
xor
pop
dec
and
sub
sbb
pop
pop
mov
add
into
mov
dec
cmp
sub
jg
sbb
sub
shl
movs
hlt
mov
inc
pop
mov
cmp
sub
fsubr
cmp
pop
shl
push
mov
pop
pop
mov
mov
sub
mov
jecxz
popa
xchg
xor
jmp
inc
adc
push
or
out
sub
outs
jp
inc
fst
iret
cmps
scas
pop
sub
cld
and
std
nop
xchg
or
loope
ds
fist
leave
ror
xchg
aas
inc
test
in
imul
in
mov
stos
sub
ficomp
enter
or
jmp
sub
loop
jne
aaa
or
push
es
std
retf
icebp
xchg
clc
dec
das
mov
adc
(bad)
cmp
arpl
inc
inc
dec
sbb
cs
jnp
and
xchg
cmps
lea
fstp
jae
dec
jo
mov
xchg
into
popa
movs
in
aam
pop
popa
inc
xchg
mov
sbb
icebp
xchg
xchg
cwde
cmp
adc
and
sbb
xchg
arpl
cmp
outs
popa
or
sub
jne
lock
in
jmp
mov
aas
std
(bad)
and
pop
cmc
in
cld
rol
mov
cmc
pop
arpl
stos
adc
and
and
cs
cmps
mov
xchg
adc
cdq
call
icebp
jl
(bad)
or
mov
add
fmul
sub
(bad)
pop
sbb
outs
mov
shl
call
xchg
icebp
jl
or
jb
mov
ja
mov
mov
push
sbb
scas
mov
jecxz
cld
sub
adc
scas
iret
adc
mov
(bad)
ins
je
sbb
stos
outs
xchg
cwde
addr16
push
mov
dec
ror
dec
shl
mov
jns
rcr
fwait
popf
push
mov
test
add
mov
push
test
pop
xor
or
push
retf
or
jnp
add
lods
cmp
ds
(bad)
mov
jno
cmps
mov
fs
stc
cmp
pop
xor
xchg
stos
adc
cmp
lahf
cmp
popa
adc
xor
push
add
and
inc
enter
dec
mov
out
dec
lods
push
aam
mov
mov
cmp
mov
popf
fdiv
and
pop
or
fs
(bad)
mov
out
adc
adc
jne
das
xor
hlt
inc
mov
ss
xor
mov
out
fisubr
jmp
and
sbb
xor
inc
(bad)
bound
jmp
jno
or
sub
enter
rcr
enter
mov
mov
mov
cmc
and
xor
iret
ss
xchg
jno
adc
stc
in
mov
add
mov
(bad)
sbb
adc
push
mov
dec
dec
pusha
clc
ret
imul
je
or
jge
in
and
cmp
mov
sub
ret
push
jmp
or
or
sbb
mov
ficom
xor
test
push
mov
or
dec
inc
call
jb
add
push
jg
repnz
sahf
mov
cdq
sbb
das
mov
xor
mov
dec
dec
push
or
lea
outs
lock
jnp
loop
lock
ret
mov
shl
cmp
ins
outs
ins
pop
pusha
jle
sahf
aam
inc
mov
pop
pop
gs
(bad)
in
jge
lods
push
or
ficom
in
pop
cmp
cmp
push
mov
adc
ins
lahf
sbb
fnstcw
cwde
mov
xor
int
mov
and
push
inc
test
xor
push
loopne
enter
jge
fsub
sbb
push
or
push
pop
mov
ja
lock
dec
mov
add
push
jle
jmp
int3
mov
fistp
cli
push
cs
dec
mov
jmp
clc
aad
cmc
pushf
xchg
mov
jge
cmp
scas
inc
adc
cmps
jnp
inc
inc
cmp
loop
xor
and
dec
daa
xchg
dec
xor
scas
es
and
fisubr
ins
dec
sub
xor
xchg
in
mov
imul
sbb
xchg
xor
pop
mov
loopne
cmps
shl
or
jb
sub
jnp
sbb
(bad)
mov
cli
and
and
xchg
cmp
jns
movs
mov
xchg
cs
dec
stc
and
stc
fsub
adc
mov
clc
test
xchg
mov
mov
pop
sub
sub
sub
mov
leave
cmc
lods
xchg
ds
or
ret
jmp
sbb
dec
push
mov
push
imul
fist
mov
xchg
lea
pop
retf
pusha
nop
loop
sbb
mov
pushf
cmp
mov
aad
xor
mov
(bad)
push
cmc
mov
or
pop
sbb
ins
jno
rcl
in
mov
fcomp
aad
cdq
or
stc
call
push
push
int3
fstp
mov
repz
in
js
mov
pop
mov
xor
rol
stos
pusha
out
lods
shl
add
mov
adc
nop
sbb
sbb
sar
retf
cli
pop
mov
mov
mov
xchg
push
ins
in
jle
aad
fld
sub
cmp
loope
push
inc
mov
imul
push
dec
pop
int
rcl
ins
(bad)
sub
jae
dec
add
mov
mov
ins
stos
dec
stos
inc
cmp
sar
and
mov
in
into
stos
fiadd
xor
push
jg
or
and
mov
cmp
pop
outs
mov
xor
cmps
push
sbb
and
(bad)
mov
out
scas
push
cmp
lods
ins
test
lods
std
pop
or
gs
fiadd
aad
es
pop
ret
call
arpl
jne
mov
aas
add
mov
clc
dec
lea
cdq
test
sbb
dec
sahf
xchg
test
jecxz
mov
pusha
out
push
mov
add
mul
sub
mov
ss
test
dec
mov
popa
shl
mov
sbb
int3
into
cmp
fbld
cli
(bad)
out
or
or
fcomip
fsub
adc
and
add
outs
adc
pop
adc
rol
repz
out
push
fst
mov
pop
xchg
fdivrp
jns
aas
sub
daa
lock
xchg
scas
inc
(bad)
push
sbb
shl
dec
add
fldenv
outs
ret
sub
pop
shr
dec
mov
push
(bad)
in
xchg
and
cmp
dec
inc
pop
mov
cmc
mov
shr
inc
or
mov
add
ja
int
hlt
call
or
retf
mov
(bad)
std
mov
jmp
push
ret
ds
mov
dec
stos
lock
cmp
stc
or
test
sub
lds
not
bound
sub
popa
sbb
cmp
push
push
jnp
jae
int3
ror
jns
cdq
sbb
mov
push
mov
adc
push
adc
xor
clc
icebp
(bad)
dec
pop
ins
in
mov
or
fadd
push
push
or
sub
adc
stc
sbb
jge
mov
jmp
xor
lds
mov
repnz
scas
jp
pushf
stos
push
clc
xchg
dec
sar
in
push
ret
test
ss
stos
sbb
jmp
(bad)
scas
cmpxchg
cs
inc
popf
movs
test
jp
iret
dec
idiv
jb
inc
push
popf
mov
and
std
dec
pop
jl
push
cmp
pop
cmp
and
push
out
and
push
shl
jmp
popf
or
xor
jae
and
dec
pop
test
fucomi
addr16
data16
dec
jns
pop
in
mov
pop
ja
mov
outs
stos
mov
jo
mov
push
push
adc
dec
or
dec
push
mov
adc
daa
sti
es
imul
ror
jle
arpl
add
pop
cld
add
sbb
xor
jo
xchg
pop
out
(bad)
xlat
sub
sub
or
inc
gs
jno
daa
das
cmps
repnz
jb
mov
jo
fild
jb
fild
add
pop
push
es
mov
mov
dec
sub
jbe
mov
xor
cmps
(bad)
mov
mov
dec
push
in
sahf
fnsave
xor
mov
push
mov
daa
rcr
or
enter
push
push
out
add
jbe
mov
popf
xchg
dec
enter
jmp
push
loopne
retf
cld
fcmovb
mov
xor
scas
or
(bad)
scas
scas
and
cmp
jge
ret
mov
xchg
ror
je
jae
retf
add
sbb
pop
int
fwait
xchg
mov
sahf
push
rol
dec
cmp
scas
int3
imul
pop
idiv
daa
mov
cmp
rcl
(bad)
and
push
out
cmp
(bad)
fsubr
sub
and
xor
rcl
fsub
jne
jae
rcr
and
out
mov
pop
cmp
adc
fstp
out
fs
or
sbb
pop
ret
scas
adc
shl
stc
xchg
mov
cmps
mul
mov
(bad)
dec
mov
cmp
loope
(bad)
loop
mov
and
xchg
cld
call
cli
fwait
hlt
push
dec
adc
mov
sahf
std
int3
js
mov
in
jle
jecxz
sar
add
cmp
sub
pop
xchg
add
fstp
sub
jb
aaa
adc
fidivr
sahf
ins
cmp
ss
pusha
push
test
popf
das
fldcw
(bad)
pop
shr
xor
stc
in
je
mov
mov
test
fs
mov
ins
(bad)
mov
out
push
xor
and
stos
jl
daa
push
int
outs
and
ins
add
xchg
xor
movs
mov
or
inc
(bad)
adc
xor
cmps
sub
and
adc
sahf
stos
gs
cmp
or
mov
or
and
xchg
dec
jnp
xor
sub
and
and
mov
sti
push
dec
dec
cmp
pop
mov
retf
shl
add
pop
mov
lds
mov
repnz
mov
in
lods
ffreep
xlat
ins
add
out
fld
mov
fwait
icebp
or
add
add
and
cdq
add
pop
add
sub
data16
and
loope
ins
xlat
xchg
xor
xchg
lds
jl
xor
shl
pop
test
test
test
mul
pop
add
jnp
ds
and
stos
jnp
mov
into
inc
fisttp
(bad)
retf
rol
in
sbb
out
ret
out
ja
or
inc
jle
adc
sti
jle
and
xchg
push
stos
fucom
inc
fimul
mov
add
mov
fldenv
leave
call
push
push
pop
mov
rcr
mov
dec
clc
inc
loope
pop
sbb
jno
xchg
xchg
mov
xlat
mov
out
push
sbb
push
out
shr
stos
dec
mov
mov
dec
jo
and
push
dec
mov
mov
cwde
cmp
dec
push
xor
or
jl
leave
int
dec
or
ja
daa
and
pop
xor
icebp
aaa
and
scas
and
(bad)
mov
dec
mov
push
mov
fsubr
xchg
rcr
jns
mov
adc
pusha
shl
fldcw
push
icebp
cli
jge
test
mov
sahf
mov
and
pop
or
mov
sub
push
sar
sub
shl
or
jns
les
inc
cmc
mov
and
dec
sub
or
scas
bound
loope
cwde
inc
int
jno
retf
mov
js
sahf
call
add
in
loope
mov
xor
pop
xor
das
mov
int3
test
in
push
jne
inc
pop
sub
imul
pop
nop
enter
es
add
xor
jl
fld
popa
popf
adc
cmp
(bad)
js
ds
mov
cwde
bound
xor
cs
stos
xor
sbb
sbb
hlt
mov
add
mov
inc
imul
retf
xchg
pop
stc
sub
cmps
fild
sbb
cmp
push
fcom
ret
sar
outs
(bad)
mov
jp
xchg
jle
xchg
xor
dec
lea
ja
sar
cwde
cmp
inc
jge
bound
dec
xchg
(bad)
es
in
dec
xor
into
sub
fild
pop
(bad)
and
pusha
fiadd
repnz
adc
je
test
push
mov
fisttp
push
test
or
imul
ins
xchg
pop
jecxz
jg
inc
inc
mov
sbb
push
daa
stos
lds
xchg
into
pusha
retf
inc
bnd
ret
pop
pop
(bad)
jge
fbld
mov
xchg
xor
mov
push
repnz
fistp
jbe
add
pop
call
push
inc
stos
push
mov
and
(bad)
out
push
inc
xor
cmc
xor
cli
cli
add
jmp
ds
lods
retf
mov
rol
lahf
inc
and
pop
jns
cwde
mov
movs
(bad)
mov
stos
or
jl
shr
push
cwde
pop
jne
test
(bad)
cmp
shr
out
scas
dec
pop
je
jmp
push
adc
push
xor
dec
inc
stos
inc
cmp
sbb
dec
fistp
mov
adc
mov
stc
aaa
xchg
test
es
sub
sbb
pop
push
cmp
inc
pop
(bad)
xlat
lods
sub
int
pop
lock
pop
mov
cmps
mov
add
nop
cmp
and
add
cmp
sbb
out
pusha
inc
mov
inc
mov
fwait
add
jge
out
test
cli
(bad)
imul
cmp
jmp
jnp
(bad)
fmul
aad
jne
mov
inc
cmp
es
cwde
je
mov
xchg
enter
xlat
mov
sub
fimul
ss
adc
mov
add
pop
call
jl
dec
ret
stc
cmp
jmp
add
pop
xor
push
dec
cmp
arpl
inc
stc
xor
jo
mov
daa
adc
es
adc
inc
jne
mov
les
(bad)
adc
cmp
cmp
or
push
jnp
enter
es
xchg
pop
dec
mov
dec
rol
dec
mov
lahf
mov
aaa
inc
xchg
stos
lock
xchg
and
ja
jmp
xchg
jg
xchg
mov
cmp
pop
inc
jmp
mov
fstp
fbstp
cmps
xchg
sub
jns
(bad)
dec
les
cmc
aad
cli
mov
je
mov
aad
fnstenv
push
mov
jbe
fadd
(bad)
test
popf
int3
jmp
pop
ds
into
push
adc
pop
lock
mov
out
add
jmp
mov
xchg
jbe
fst
dec
cmp
pop
in
outs
inc
(bad)
fcom
dec
dec
xchg
repz
mov
jbe
and
dec
(bad)
lahf
jbe
mov
leave
(bad)
mov
mov
jecxz
shr
mov
jmp
xor
cli
aas
out
sub
ja
loope
aaa
pop
jmp
sbb
or
out
imul
sub
sub
int3
fcmovu
push
xchg
pop
pop
xchg
rcr
inc
mov
xchg
mov
mov
mov
icebp
fnstcw
sub
add
and
pop
pushf
mov
dec
rcl
push
xchg
dec
stos
and
pop
clc
adc
call
rcr
cli
cmp
pop
mov
mov
dec
add
stc
gs
inc
jnp
ja
in
fwait
mov
int3
sub
lds
addr16
mov
mov
lock
(bad)
jecxz
aam
mov
pop
pushf
aam
inc
pop
lock
repz
(bad)
movs
push
add
sahf
ffreep
or
add
mov
cli
dec
mov
daa
int3
fidivr
add
xchg
xchg
adc
jge
sbb
scas
ds
mov
enter
repnz
pop
xor
sub
pop
push
push
mov
xor
repz
pop
or
iret
sbb
xor
std
(bad)
aas
mov
ret
pusha
popf
jne
jns
fcomp
fwait
bound
push
loopne
test
inc
add
cs
sub
adc
push
xchg
in
add
mov
data16
pop
ins
xchg
adc
aad
icebp
xor
mov
or
jge
fs
in
in
dec
pop
push
pop
pcmpeqd
pop
in
mov
or
stos
sub
mov
jnp
mov
scas
and
call
leave
int3
shl
enter
fmulp
inc
es
ret
or
pop
cmp
ds
jnp
mov
pop
(bad)
inc
in
xor
sub
loop
outs
fidivr
pop
icebp
cld
mov
es
mov
adc
pop
adc
sub
aad
jb
and
leave
and
loopne
adc
xchg
sar
sbb
enterw
out
mov
mov
imul
stos
aaa
and
fisubr
jae
ins
cli
xchg
mov
jmp
cmc
cmps
cwde
(bad)
dec
movs
and
call
jno
dec
push
jmp
out
sbb
(bad)
jmp
cmp
pop
jno
xor
mov
and
xor
movs
mov
mov
cdq
test
pop
shl
and
les
je
popa
adc
xchg
and
movs
retf
jle
adc
pushf
push
or
jnp
aam
dec
mov
push
xchg
adc
popa
test
cli
lahf
pop
in
scas
push
imul
add
cmp
ins
scas
mov
or
xor
sbb
ins
aas
fdiv
jmp
pushf
test
sbb
aam
sub
push
mov
add
jo
rol
jl
or
jb
dec
adc
call
cmp
shl
jge
test
sbb
sub
mov
scas
mov
femms
scas
or
mov
mov
bound
enter
(bad)
imul
cmc
xchg
jno
test
cmp
dec
call
xchg
cmp
inc
sar
jl
out
add
dec
mov
mov
cmp
pop
jl
data16
pop
clc
dec
fs
es
dec
adc
jo
jae
jno
test
fldcw
jae
or
inc
inc
into
pop
cs
stos
pop
mov
or
pop
imul
mov
pushf
fdiv
sbb
(bad)
cmp
dec
pop
out
frstor
sub
cs
xchg
js
cmps
in
pop
xchg
sub
pop
xchg
sub
push
cmp
ins
push
lods
mov
jle
xchg
fadd
cwde
adc
popa
push
movs
test
dec
jl
jno
mov
out
out
inc
sbb
inc
rol
add
pop
cdq
es
or
call
icebp
xchg
pop
repz
and
pushf
xchg
xchg
sbb
jmp
mov
jle
xchg
cmp
(bad)
jns
int3
adc
inc
dec
add
mov
in
sub
loope
push
ret
inc
dec
in
scas
and
fdiv
mov
push
mov
push
ins
mov
aam
lock
mov
dec
jb
stos
je
xor
jns
cwde
dec
inc
stos
lods
add
jo
pusha
mov
cmp
push
stos
mov
pop
scas
and
sbb
or
xchg
fdivr
sbb
sbb
ss
sub
pop
lahf
int
push
cmp
jg
mov
fdiv
cmps
call
retf
xchg
pop
enter
lea
lock
shr
pop
out
jbe
pop
xor
sahf
push
adc
adc
inc
mov
imul
sti
jb
and
mov
out
xor
sti
jb
in
xor
and
dec
jno
adc
out
fild
xlat
fldcw
pop
xchg
int
fdivr
push
outs
aad
push
inc
jl
scas
stc
mov
daa
es
hlt
mov
mov
cmps
mov
ja
into
pop
or
push
push
mov
ret
ret
lds
ins
and
popf
sbb
push
imul
sbb
push
scas
sbb
mov
add
adc
fidiv
movs
mov
gs
gs
repz
fwait
push
in
loope
sbb
nop
and
xor
add
push
fild
push
adc
sti
mov
push
pop
lods
call
ret
dec
(bad)
lock
fcmovnu
mov
lahf
fwait
dec
mov
mov
shr
mov
jmp
xor
mov
int
xor
inc
cmc
sub
xchg
sahf
sahf
and
cmp
loop
cmp
scas
push
(bad)
movs
adc
or
pushf
mov
dec
cmp
mov
fwait
inc
ret
test
loope
int
sahf
add
ror
dec
mov
shr
dec
xchg
push
jno
cwde
call
ja
les
das
sbb
imul
add
xor
retf
fiadd
fwait
sar
(bad)
shl
pop
adc
jg
jle
in
fwait
test
fiadd
mov
cli
jns
sbb
into
jns
mov
cli
mov
sti
lahf
fadd
pushf
mov
jl
in
das
cmc
jl
clc
addr16
in
inc
outs
data16
sar
mov
sub
fldcw
nop
xchg
jl
push
adc
and
push
mov
mov
cdq
xchg
shr
pextrw
jo
jmp
push
mov
jg
xchg
or
mov
popa
push
shr
cmp
pop
icebp
add
int3
add
xor
pop
out
inc
scas
je
sub
inc
ret
xchg
jl
mov
daa
mov
jmp
out
loope
sar
pop
push
or
push
rcl
lods
retf
fdivr
inc
push
mov
in
dec
xchg
jecxz
std
jbe
dec
fist
jmp
nop
xchg
inc
clc
psllq
fild
sub
xchg
jnp
repz
dec
xchg
push
clc
cdq
clc
(bad)
xor
mov
mov
fidivr
fsubr
aam
ret
pop
popa
push
lods
int3
shl
xor
mov
je
adc
ret
call
std
push
jmp
lock
daa
imul
pop
or
retf
sbb
mov
(bad)
iret
into
pop
cmp
lods
xchg
sahf
pop
adc
xlat
push
inc
fs
aam
dec
(bad)
and
ds
mov
aas
dec
into
(bad)
mov
sub
addr16
clc
ffree
inc
call
mov
mov
mov
movs
jb
sbb
adc
sbb
arpl
jae
not
add
clc
sub
jne
es
ficomp
xchg
push
jae
xchg
push
movs
xor
out
and
ins
xchg
cmp
push
and
add
aaa
ror
fimul
mov
sub
test
mov
rcr
inc
cld
fstp
in
mov
dec
ss
ins
sub
sbb
and
imul
mov
lock
retf
lods
mov
cli
retf
movs
pop
and
dec
fs
or
adc
ss
call
adc
pop
cmc
shl
jo
mov
test
xchg
inc
fistp
jo
dec
out
sub
and
shl
jmp
adc
pop
inc
xor
mov
das
dec
xor
ins
mov
jbe
add
jne
jl
sar
ins
add
mov
(bad)
jbe
mov
(bad)
sahf
xchg
sbb
call
mov
add
xchg
xor
rcl
retf
into
inc
pop
sbb
mov
cmp
arpl
and
cwde
cmp
(bad)
add
and
lea
xchg
lea
add
or
jecxz
dec
xor
adc
add
ins
outs
repz
xchg
pop
add
lods
and
pop
jmp
inc
les
out
or
jns
sub
aas
in
js
mov
adc
fist
sbb
das
xchg
xor
mov
push
mov
mov
nop
bound
ret
out
push
fwait
ss
mov
je
adc
arpl
xchg
sub
popf
or
cmps
or
movs
fld
inc
jne
add
mov
dec
in
or
mov
xchg
jne
ret
jmp
in
mov
pusha
dec
push
inc
loope
outs
adc
jl
out
xor
push
je
(bad)
mov
push
xor
pushf
mov
scas
xor
into
xlat
std
lods
pop
mov
jns
imul
xchg
cmp
sbb
sar
iret
mov
repz
xor
jmp
mov
fdiv
mov
lods
(bad)
mov
mov
in
js
jecxz
aaa
ret
mov
ins
adc
xchg
in
aam
je
pop
fwait
into
daa
imul
mov
xchg
jns
int3
cmp
aam
dec
inc
sub
sbb
dec
xor
and
mov
sahf
xor
sub
push
cmp
mov
jnp
fst
mov
xchg
pop
loop
bound
xlat
xor
enter
popa
mov
xchg
mov
inc
and
dec
push
mov
add
add
inc
retf
cld
mov
gs
sub
std
push
lods
adc
iret
sub
or
inc
mov
mov
shl
popa
pop
je
mov
arpl
arpl
retf
and
jmp
mov
xchg
loope
dec
or
cmp
cdq
imul
fdiv
in
js
into
enter
or
pop
xlat
mov
scas
inc
outs
repz
scas
aas
inc
pop
loop
mov
jne
push
lods
sti
je
pop
aas
pop
cmps
push
xchg
mov
push
stos
je
cmp
dec
icebp
data16
sbb
push
add
sbb
mov
jno
dec
in
and
sti
jbe
push
mov
int
jmp
sar
xchg
outs
sub
retf
movs
out
and
retf
test
pop
dec
sub
dec
dec
inc
inc
ret
shr
mov
lods
sbb
cmps
mov
dec
sbb
adc
dec
and
ficom
ins
test
inc
jp
pop
inc
or
mov
xchg
aas
fimul
in
jno
fwait
repz
outs
xchg
loop
hlt
pop
rcr
and
and
mov
adc
mov
pushf
rol
inc
mov
sbb
imul
jo
daa
push
(bad)
out
sub
push
loope
jo
push
xor
aas
jg
inc
rol
test
pop
std
addr16
sub
mov
xchg
fwait
stos
mov
ret
(bad)
pop
mov
xor
mov
in
sub
nop
mov
cmps
push
inc
fcomp
mov
mov
out
lods
int
mov
(bad)
mov
pop
xor
mov
loop
mov
pop
in
mov
in
sbb
sbb
js
es
les
nop
mov
in
adc
cwde
and
jl
test
movaps
push
inc
push
lea
mov
sub
aaa
out
rol
pop
push
out
in
xor
cmp
mov
ror
xor
inc
pop
jo
mov
loope
mov
xchg
dec
or
imul
mov
mov
jp
push
imul
mov
rcl
add
add
or
jns
ins
push
xchg
or
loopne
and
pop
cmp
pusha
hlt
nop
pushf
pushf
pop
mov
mov
ret
xchg
cli
shl
mov
sahf
mov
adc
xor
xchg
pusha
inc
xor
xchg
xor
xchg
adc
lea
cmp
jge
(bad)
(bad)
ret
mov
test
mov
push
pop
inc
repnz
and
dec
movs
xor
xchg
inc
or
push
cmp
outs
adc
jne
loope
inc
adc
sub
xchg
popa
xchg
mov
ins
pop
hlt
xor
daa
call
test
fmul
loope
ret
out
inc
mov
lahf
stos
mov
xchg
dec
into
jo
dec
inc
mov
int3
sub
push
ds
jne
pushf
hlt
iret
stos
sbb
sbb
test
jns
fadd
hlt
sbb
jmp
mov
adc
or
inc
jne
lea
test
shr
dec
jns
rcl
xor
(bad)
es
jmp
inc
mov
push
mov
jl
xchg
adc
mov
loopne
gs
add
adc
pop
sub
sub
(bad)
push
inc
aaa
mov
and
cmp
aaa
out
push
mov
pop
icebp
pop
inc
pusha
inc
je
mov
(bad)
leave
das
ins
add
pop
leave
outs
mov
cmp
(bad)
pop
xchg
xor
adc
out
hlt
cmp
or
mov
popa
jns
rol
pop
mov
fld
rcr
mov
or
je
(bad)
into
xchg
xchg
pop
aas
xchg
mov
es
mov
pop
scas
xor
(bad)
jl
jnp
cmp
xchg
lock
shl
ins
xchg
mov
(bad)
fld
div
sbb
cwde
sub
stc
xlat
xor
pop
xchg
and
or
push
inc
and
retf
fsub
fist
dec
xchg
sub
push
jmp
lods
dec
fcmovu
ins
(bad)
cmc
and
sub
shl
push
jmp
lock
(bad)
iret
mov
cmp
mov
call
hlt
xor
sahf
aad
jle
cs
xor
jae
in
aas
fst
fcmovnbe
push
outs
pop
(bad)
dec
jle
imul
cwde
adc
inc
adc
in
inc
xchg
in
or
pusha
aad
adc
pop
outs
scas
mov
movs
pop
and
js
mov
loopne
cmc
icebp
loope
popa
push
out
cmps
stc
jb
or
inc
scas
les
clc
out
mov
rcr
pop
mov
mov
dec
adc
jne
jns
sbb
aaa
mov
push
loop
jecxz
movs
int
shr
mov
dec
pop
loop
xchg
mov
push
aas
add
push
out
push
(bad)
xchg
or
jp
dec
lock
or
xchg
push
mov
daa
arpl
(bad)
mov
sub
push
sub
icebp
rcl
scas
dec
push
jp
cs
jns
(bad)
je
pop
test
stos
inc
sub
inc
lods
(bad)
cwde
xor
leave
jo
repz
xchg
push
cdq
fistp
and
mov
(bad)
cmp
in
jns
fldenv
fidivr
add
fadd
in
mov
movs
mov
jbe
sbb
push
xor
es
int3
cdq
or
push
gs
sar
xchg
fidiv
test
and
cs
mov
call
or
cmps
xor
pop
pop
call
or
adc
(bad)
(bad)
xchg
movs
push
repnz
(bad)
imul
pop
shl
pop
sti
jnp
jge
dec
cmc
mov
jl
imul
jecxz
xor
nop
clc
ret
(bad)
int
mov
dec
or
pop
or
clc
jg
add
into
push
push
fadd
xchg
aad
lahf
xor
xchg
test
cmc
fcomi
add
hlt
inc
dec
push
ja
xor
jmp
cs
in
or
es
fadd
outs
clc
and
inc
out
cmp
xchg
push
out
scas
out
xchg
jbe
inc
neg
in
add
xor
(bad)
ret
and
and
pusha
jg
idiv
(bad)
(bad)
loopne
sub
stos
mov
xchg
xchg
lahf
xchg
out
or
and
outs
inc
push
adc
test
adc
leave
mul
loope
inc
add
mov
out
inc
xchg
mov
cli
or
push
cmc
movs
scas
inc
adc
xchg
hlt
sub
retf
dec
or
lods
sahf
lock
cmps
sub
pop
stos
dec
add
sti
jge
inc
out
je
(bad)
(bad)
cmp
xchg
push
cld
push
repz
pusha
and
add
test
jmp
jle
xor
pop
dec
mov
mov
rcl
sbb
js
aas
rcr
sbb
mov
xchg
outs
in
and
xchg
xlat
cmp
addr16
jmp
shl
jecxz
mov
jg
and
sub
lods
push
or
(bad)
sub
aam
mov
lods
xchg
adc
mov
jl
leave
mov
push
cmp
inc
adc
test
test
lahf
mov
iret
xchg
jnp
jno
aad
xchg
aaa
xchg
or
mov
jecxz
arpl
xor
jnp
dec
lea
arpl
leave
test
push
mov
bound
inc
mov
push
pop
mov
cmp
call
sbb
stos
cmp
or
mov
pop
iret
neg
mov
into
jp
jmp
loope
or
sub
jl
inc
pop
sbb
add
cmp
nop
cwde
das
in
stos
push
movs
mov
mov
(bad)
pop
aam
(bad)
mov
mov
repz
adc
cmps
out
cmp
out
stc
jl
int3
pop
mov
dec
jecxz
loope
nop
leave
xor
xor
xchg
or
in
xchg
enter
dec
adc
cmp
call
das
aaa
add
ror
outs
(bad)
sahf
in
xchg
sub
ror
daa
add
jmp
mov
ret
jae
cwde
mov
fidiv
pop
(bad)
xlat
adc
je
out
fldcw
sbb
mov
test
aad
dec
cmp
adc
mov
adc
push
cmp
ficomp
xchg
add
push
xor
adc
outs
add
jbe
shl
pusha
push
or
xchg
push
xchg
xchg
and
or
cli
dec
mov
sete
call
inc
dec
jecxz
pop
test
jmp
mov
leave
out
add
gs
mov
xlat
test
mov
data16
das
std
inc
pop
mov
pushf
test
out
sbb
mov
loopne
or
push
mov
or
fsub
into
cmp
dec
movs
cmp
ror
jb
add
pushf
clc
sbb
mov
in
lock
stos
mov
push
into
push
das
outs
loope
out
ret
inc
shl
out
sub
nop
xchg
mov
inc
mov
dec
dec
mov
cli
jecxz
cld
fxch
repz
int
in
mov
mov
in
fild
jmp
repz
or
inc
out
movs
inc
add
call
fdivr
mov
aaa
xchg
jge
fld
imul
mov
mov
xor
aam
popa
mov
test
fsub
not
jmp
pop
push
add
inc
dec
nop
xor
mov
mov
(bad)
jb
popf
nop
jmp
stos
loop
mov
cs
mov
fsubr
xchg
aas
jge
mov
dec
scas
cwde
pop
rcl
jnp
fstp
fdivr
pop
movs
sub
jg
sbb
rol
pop
xchg
xor
add
jmp
push
fsub
adc
(bad)
mov
popf
repnz
mov
loop
add
push
dec
leave
daa
adc
mov
pop
test
addr16
jge
movs
or
push
or
bound
fadd
(bad)
imul
add
scas
cmp
xor
ret
mov
test
jle
adc
stc
mov
xchg
outs
jecxz
int3
or
mov
jge
test
sub
jbe
pop
inc
dec
ds
jle
dec
xor
mov
xchg
dec
push
into
mov
and
inc
scas
cmp
or
(bad)
ss
sub
(bad)
fstp
jnp
into
ret
(bad)
cmps
inc
data16
dec
js
mov
add
inc
xchg
adc
dec
push
frstor
or
cmc
mov
push
xor
inc
cmp
gs
mov
mov
dec
pop
jb
fdiv
pop
test
fild
mov
out
cmp
inc
dec
push
adc
sbb
outs
cli
dec
gs
(bad)
and
bound
add
sub
jnp
(bad)
stos
mov
pusha
std
mov
jne
dec
ret
cmp
neg
push
cmps
lods
cmc
shr
popa
fst
jmp
inc
sub
mov
je
out
cld
dec
imul
call
add
leave
fnstenv
mov
fimul
test
pop
push
inc
pushf
out
idiv
and
movs
fwait
mov
or
push
or
mov
xchg
ret
call
mov
push
int3
repz
es
sbb
loopne
jmp
pop
cmp
enter
push
lds
push
mov
xor
test
out
and
(bad)
dec
ins
arpl
xor
mov
arpl
pop
and
daa
mov
gs
pop
mov
dec
iret
push
in
xchg
fld
mov
mov
ret
cmps
inc
jle
sub
mov
dec
jmp
mov
dec
(bad)
push
cdq
outs
test
daa
pop
add
xor
iret
aaa
in
xchg
jge
sbb
mov
or
cmp
adc
rcr
inc
jnp
fstp
or
lods
ret
cdq
adc
mov
in
and
jo
mov
mov
pop
iret
loopne
sub
rcr
imul
mov
fs
fsubr
pop
or
lds
popa
and
data16
xlat
jo
loopne
ins
xchg
sbb
jmp
shr
(bad)
in
xchg
daa
mov
mov
sub
fidivr
mov
mov
pop
pop
imul
imul
ins
push
sbb
jne
mov
jbe
js
dec
pop
pop
in
cmp
sub
jb
ins
pop
aad
leave
mov
loopne
icebp
and
adc
or
movs
ja
movs
movs
lods
mov
pop
je
in
daa
fsubp
pop
xchg
mov
hlt
xchg
dec
popa
sar
or
enterw
clc
pop
dec
mov
add
pop
push
dec
movs
mov
push
jo
cmp
sahf
xchg
mov
pushf
lods
adc
xchg
out
(bad)
mov
fadd
push
dec
rcr
fs
jmp
out
jo
shl
cmp
ds
inc
cmp
movs
cmc
inc
fdiv
pop
mov
mov
retf
movs
loopne
inc
pop
jmp
cwde
sub
pop
ja
and
mov
fwait
mov
std
cs
xchg
inc
jbe
sbb
iret
mov
fwait
push
sub
xor
outs
pop
(bad)
test
imul
mov
mov
sbb
jp
repnz
inc
outs
fwait
and
test
rcl
mov
xor
mov
scas
add
aaa
cld
or
pop
xchg
adc
inc
clc
in
lahf
sti
mov
cmp
gs
cmp
stos
and
imul
movs
cmc
fs
and
push
xor
repz
push
mov
sub
pcmpgtw
jg
mov
pusha
cwde
repz
xchg
hlt
pop
cmc
and
mov
push
int3
aad
ror
pop
adc
nop
lods
scas
hlt
pop
and
inc
jge
or
stos
iret
jmp
aam
movlps
pop
inc
jno
and
in
cld
fisttp
repz
mov
mov
movs
popa
in
mov
add
paddq
mov
sub
dec
mov
xor
lods
jbe
mov
pusha
mov
push
ins
in
push
out
fbld
adc
or
xchg
shl
xchg
es
dec
outs
jno
sub
daa
in
test
mov
jno
dec
in
push
push
and
idiv
push
and
adc
mov
ja
push
rcl
aas
jno
adc
addr16
pop
js
inc
fsubr
loope
aas
and
clc
shl
add
jmp
jns
push
imul
iret
test
sub
pop
in
mov
dec
xchg
push
int
push
das
dec
sbb
jnp
pop
sub
mov
mov
nop
call
arpl
or
not
push
lods
add
jmp
(bad)
fstp
gs
(bad)
outs
or
mov
nop
ja
mov
loop
inc
iret
mov
jae
push
inc
bound
jl
jg
dec
jecxz
stc
popf
out
sub
mov
enter
push
ror
fnstcw
push
(bad)
outs
or
fcom
leave
jns
mul
mov
cmp
repnz
adc
pusha
mov
scas
mov
adc
add
sbb
mov
pop
xchg
xchg
ins
inc
cmp
test
lods
dec
xchg
mov
out
jg
mov
sub
jne
lods
xchg
or
dec
xchg
and
cli
ins
mov
and
push
out
xor
ss
into
fsub
mov
xor
jns
aam
jle
aam
mov
xor
into
xor
inc
stc
pop
xchg
adc
cmp
mov
xchg
pop
leave
call
mov
cmp
lods
mov
mov
xchg
imul
cmps
sub
fbstp
loope
inc
lahf
dec
mov
and
jbe
and
sbb
push
(bad)
popf
(bad)
div
movs
or
sub
ins
jne
lock
leave
mov
push
jno
sub
jns
int
sub
clc
jmp
das
or
call
jge
ss
push
fwait
in
cmc
mov
repz
pop
jle
or
je
cmc
scas
dec
jns
inc
xchg
adc
neg
dec
add
bound
mov
sbb
loope
jecxz
inc
inc
cmp
sub
hlt
mov
scas
loope
mov
push
and
jbe
sub
ret
lods
fstp
int3
in
cmp
cli
pop
fwait
cs
sbb
mov
push
inc
cmp
retf
xchg
xchg
mov
push
imul
cdq
lds
call
cmp
add
aas
fmul
stc
xchg
int3
push
cs
(bad)
fcom
leave
mov
cmps
jg
out
mov
xor
hlt
dec
sub
cmp
dec
les
mov
xchg
mov
add
repnz
or
or
and
jmp
cmp
call
cmp
mov
in
inc
rol
sbb
aas
hlt
jae
fidivr
mov
or
and
add
dec
push
pop
sti
jne
xchg
scas
xlat
fistp
sbb
das
jns
xlat
mov
mov
movs
sub
add
fdiv
push
xlat
outs
or
jbe
inc
inc
fstp
pop
icebp
scas
pushf
jmp
mov
inc
daa
adc
cld
stos
cmp
add
or
test
xchg
sub
icebp
clc
cmp
xchg
ret
ss
jle
mov
fmul
es
cwde
lahf
sub
pop
xor
fisub
retf
mov
xchg
xchg
mov
add
xchg
sbb
dec
xchg
sub
cs
ss
and
or
pushf
push
sahf
jmp
in
and
sub
repnz
fsubr
scas
adc
push
jb
mov
xchg
hlt
pop
mov
xchg
vmread
iret
fnsave
arpl
jno
or
pusha
pop
retf
inc
stc
sbb
fs
ret
mov
dec
jecxz
mov
sub
sbb
cs
cmp
mov
cdq
out
add
cld
and
push
data16
fwait
inc
sub
or
xlat
stc
popa
push
into
pop
cmc
mov
dec
scas
or
mov
in
out
or
shl
repz
mov
pop
inc
call
lods
(bad)
cmp
xor
mov
lds
les
or
inc
sub
cdq
sbb
fisubr
je
imul
ret
jg
pop
jmp
repnz
loop
mov
jmp
into
adc
out
or
push
in
loopne
inc
(bad)
js
add
test
mov
dec
call
or
push
inc
lock
addr16
aam
mov
icebp
dec
adc
push
cmp
pop
scas
push
push
jmp
loopne
and
cs
mov
sbb
call
cmp
mov
bound
lahf
test
push
out
and
scas
pop
dec
fidiv
inc
fidivr
aas
je
in
xchg
test
add
inc
daa
(bad)
nop
mov
lock
lods
aaa
xchg
ja
sub
mov
xchg
iret
or
push
(bad)
not
hlt
nop
inc
pusha
mov
std
gs
adc
bound
pop
lahf
mov
dec
add
daa
fcmovu
cmp
sbb
mov
add
movs
int3
jmp
cmp
fstp
mov
mov
imul
sub
test
add
xchg
jle
data16
fstp
mov
add
jbe
ins
jmp
sub
int3
or
aaa
in
in
shl
add
stc
jbe
add
rcl
add
xchg
call
das
mov
pushf
mov
int
and
pop
and
(bad)
fld
adc
jmp
pop
rcr
sub
mov
dec
cmps
xor
dec
dec
stc
sbb
clc
mov
jmp
mov
hlt
and
(bad)
xchg
mov
adc
add
sbb
mov
and
or
fidiv
rcl
or
cmp
mul
sub
sub
cmp
dec
dec
mov
cmp
and
ja
xchg
enter
nop
adc
test
lods
cld
xchg
cmp
cmps
cmp
stc
movs
jmp
repnz
jmp
pop
xor
movs
fistp
outs
std
or
test
xor
mov
inc
jne
movs
loopne
sub
push
(bad)
sub
dec
or
xchg
xchg
adc
lock
jle
lods
jns
shl
jge
mov
xor
je
pop
pop
push
outs
cmc
je
mov
jae
fnsave
mov
enter
rol
fbld
cmp
pop
retf
mov
xchg
stos
pop
sbb
fucomip
test
les
in
push
pop
mul
sub
mov
div
dec
jp
movs
xchg
(bad)
add
push
(bad)
lods
(bad)
mov
jg
dec
jp
clc
cwde
mov
mov
mov
jb
fwait
(bad)
jmp
jp
mov
pop
inc
pop
adc
push
out
imul
jno
jnp
mov
test
jge
in
mov
mov
retf
pop
ds
sub
scas
gs
stc
test
test
adc
test
ja
inc
mov
loop
rcr
loope
adc
or
and
jle
leave
stc
sbb
pop
sub
les
fild
in
cmp
cmp
rol
leave
xor
ror
push
ds
push
pop
cmp
xchg
test
cmp
popf
into
sub
dec
pop
out
imul
outs
in
or
xor
xor
add
sbb
fnstcw
mov
lahf
lock
cmp
push
mov
xchg
mov
ja
inc
in
sub
xor
inc
dec
popf
mov
inc
mov
loop
aas
mov
les
inc
scas
and
jne
lock
or
mov
movs
jg
loopne
retf
push
jno
mov
stos
jl
inc
movs
inc
mov
pop
das
or
xchg
sub
(bad)
hlt
cwde
hlt
pop
dec
test
call
push
add
in
dec
daa
clc
dec
(bad)
xchg
mov
js
xchg
rcr
ins
inc
(bad)
push
jg
out
sar
jecxz
adc
test
cld
inc
(bad)
loop
mov
call
inc
fisttp
push
xchg
cli
jae
les
xor
ror
out
daa
sbb
pop
jmp
jecxz
call
adc
mov
adc
pop
push
xchg
fst
dec
xor
ret
leave
push
sbb
xchg
popa
sbb
mov
inc
fsub
jmp
loop
stc
cmp
and
push
dec
mov
add
or
loope
dec
or
push
jae
mov
dec
xchg
ja
cmc
push
out
arpl
push
mov
dec
sbb
ficomp
pop
rcl
or
lahf
rcl
or
push
mov
or
adc
push
push
in
pop
cmps
dec
jbe
cmp
mov
cmp
(bad)
aad
or
fcomp
mov
fsub
int
aas
ins
mov
mov
inc
or
imul
cli
mov
and
mov
hlt
add
mov
or
pop
js
xchg
jae
pop
(bad)
xchg
retf
sub
mov
xchg
mov
ret
dec
enter
jle
add
(bad)
jb
out
mov
push
lods
fs
mov
jns
jbe
(bad)
mov
cli
push
xor
in
jecxz
stc
jbe
ret
xor
dec
cmp
iret
pop
gs
(bad)
dec
ss
sbb
push
test
sub
jno
loopne
gs
mov
jb
ds
out
addr16
pop
xchg
nop
xlat
add
jle
test
adc
xor
mov
and
cmp
call
retf
nop
test
lea
adc
sub
push
adc
(bad)
inc
lea
(bad)
fcmove
call
paddd
xlat
in
or
jo
lods
adc
lahf
sar
xlat
jne
(bad)
mov
inc
xchg
pop
push
stos
out
sbb
int
push
mov
adc
and
xchg
imul
mov
jno
push
sub
cld
sub
jo
inc
jno
inc
and
xchg
fsub
ds
dec
ret
or
fist
arpl
inc
mov
or
enter
inc
js
dec
mov
or
ins
jae
addr16
mov
inc
push
inc
lock
je
dec
xchg
push
loopne
mov
sub
scas
pop
and
sub
xchg
and
loope
ror
je
into
daa
cli
repz
clc
scas
cmp
push
stos
bound
pop
nop
xor
sub
outs
fild
fnstenv
stos
add
xchg
cmps
popf
mov
repz
test
xchg
and
loope
jne
jmp
das
test
adc
imul
inc
sar
scas
push
mul
mov
push
xchg
add
xor
movs
ret
stc
inc
and
retf
mov
cdq
or
daa
adc
popa
add
add
lods
push
push
sbb
xor
in
mov
hlt
iret
xchg
dec
jg
pop
jmp
(bad)
sar
fwait
mov
or
sbb
rcl
push
jle
jnp
mov
lahf
push
inc
and
mov
xchg
jno
push
xor
fwait
push
ret
lahf
jg
mov
sub
lods
mov
sbb
fistp
sti
push
adc
aaa
es
ss
retf
push
ficomp
or
scas
dec
pop
das
in
push
sahf
xchg
ror
cmpps
push
mov
dec
mov
outs
mov
mov
loopne
pop
nop
ins
inc
adc
or
mov
mov
es
adc
xor
xor
jb
shl
sub
scas
aam
stos
sbb
mov
(bad)
mov
ret
inc
aam
pusha
out
dec
jb
lds
adc
sti
sbb
jmp
lods
fisttp
mov
push
clc
imul
addr16
dec
push
mov
sbb
daa
fild
shl
mov
cmp
popa
xor
inc
or
pop
add
pop
mov
push
jecxz
sti
adc
bound
fbld
or
ins
dec
push
movs
loope
inc
in
add
or
into
xor
cmp
jl
test
cmps
xchg
sub
fwait
(bad)
aam
aaa
mov
jbe
ficomp
adc
xchg
iret
xor
adc
loop
fldl2t
pop
mov
mov
pop
sbb
ror
add
mov
in
stos
fucomp
adc
xor
or
pop
sahf
in
mov
pop
sub
mov
jg
xchg
(bad)
mov
jae
xor
and
cld
sbb
push
push
cmp
jnp
out
sbb
shl
pop
cmps
pop
out
add
inc
xchg
adc
sub
ret
push
mov
aaa
lods
sti
bound
aas
iret
sub
sar
pop
xchg
inc
jmp
outs
jl
cmp
fstp
mov
mov
icebp
add
inc
enter
push
cmp
in
scas
sbb
dec
adc
mov
push
cmp
jge
push
outs
sub
mov
jl
dec
neg
xor
jg
cld
mov
imul
push
dec
pop
fwait
cmp
mov
or
pop
adc
jge
pop
mov
cli
mov
cmp
and
imul
sbb
add
gs
(bad)
das
push
loope
rol
(bad)
repnz
mov
js
fnstcw
jae
cdq
push
mov
ins
xor
jno
repz
dec
(bad)
cld
or
stc
(bad)
jecxz
inc
sbb
aad
test
push
fcmove
jno
or
pop
jecxz
xor
scas
mov
add
mov
add
mov
stc
mov
stos
sbb
jle
fs
inc
pop
xor
sar
outs
cmp
mov
out
je
(bad)
test
rcl
xlat
ror
call
pushf
jle
mov
xchg
mov
ret
dec
ja
setno
dec
shr
inc
in
mov
cli
and
push
xor
inc
add
shr
mov
mov
xchg
aam
lods
shr
adc
sar
out
inc
pushf
mov
fidivr
pop
dec
popa
icebp
aaa
push
sbb
pop
add
add
mov
aas
mov
(bad)
fbstp
add
ss
shl
les
jg
cs
pop
dec
and
repnz
iret
jns
mov
rcr
arpl
mov
jne
pop
iret
stos
pop
sbb
or
cmp
push
hlt
sbb
sbb
cmp
arpl
inc
pop
mov
ret
cs
in
pop
xor
imul
popf
sbb
inc
push
mov
(bad)
jp
dec
xchg
jmp
mov
in
jl
add
pop
les
xchg
cmp
adc
xor
call
push
retf
retf
or
xlat
addr16
xchg
sti
dec
or
nop
pop
aam
mov
xchg
dec
mov
and
cs
jmp
je
iret
ficom
sub
inc
xchg
imul
or
push
out
jae
ds
dec
sti
or
into
cmps
cmp
jo
or
jl
stos
push
add
loop
jne
pop
es
and
pusha
or
enter
add
and
cmp
dec
test
sub
add
cmps
jmp
lods
sbb
cld
fld
in
(bad)
aad
inc
xchg
cs
ins
shl
test
gs
into
test
inc
sbb
ja
adc
ret
adc
and
and
jge
loop
cmp
mov
jg
(bad)
cld
mov
stos
icebp
pop
mov
inc
cmc
mov
push
rol
sahf
pusha
jb
xor
outs
fdiv
pop
aad
in
ficomp
mov
jle
and
pop
rcr
push
dec
imul
push
pop
cmp
add
cmps
fst
das
sub
retf
mov
sbb
enter
sahf
xchg
pop
popa
jge
stos
mov
in
adc
jno
retf
ds
and
mov
in
adc
adc
mov
icebp
pop
mov
repz
inc
sbb
icebp
mov
enter
ds
jmp
sbb
int3
(bad)
xchg
adc
and
push
dec
inc
and
ins
in
jbe
xchg
push
lock
push
movs
paddb
adc
pop
push
(bad)
push
mov
outs
push
push
pop
push
inc
adc
mov
outs
sahf
mov
sub
pop
imul
cmp
ss
fidiv
and
add
scas
mov
icebp
popa
inc
cmp
ret
addr16
mov
pop
mov
sbb
out
jbe
mov
hlt
rcl
bound
cmps
inc
sub
retf
cmp
movs
inc
das
je
out
pop
test
lock
jle
mov
adc
push
jb
stos
push
push
mov
inc
sbb
int3
sar
inc
mov
inc
dec
fxch
jg
stc
mov
data16
xchg
sbb
sub
cmp
adc
bound
mov
ja
mov
aas
jns
xor
imul
inc
stos
jmp
pop
lds
add
xchg
loopne
mov
jl
lahf
ins
hlt
sbb
sahf
xchg
ss
fst
cmp
xchg
sbb
in
pop
mov
sbb
rol
jno
mov
sbb
call
lea
loop
xchg
in
cli
out
sbb
and
mov
and
xlat
call
lds
(bad)
mov
(bad)
call
push
and
dec
sbb
retf
pop
or
cmps
mov
loop
push
loope
leave
pop
das
jg
pop
add
sub
mov
push
inc
nop
adc
aas
pop
push
popa
or
fisttp
inc
test
es
sub
loopne
es
imul
hlt
clc
cli
mov
sub
gs
xor
nop
pop
or
cdq
and
ret
lods
dec
ja
or
mov
xchg
pop
cmp
mov
ins
jbe
fsubr
jb
scas
sti
jp
xchg
xor
mov
fcomp
cmps
jge
mov
out
js
js
sar
jl
(bad)
aas
sti
jg
mov
add
inc
cdq
adc
or
fidiv
jne
mov
and
test
lahf
sub
lods
mov
ret
and
(bad)
shl
mov
call
mov
clc
stc
adc
jb
push
or
out
jnp
mov
mov
out
or
sbb
xchg
gs
pop
xlat
cmc
pop
mov
xchg
je
jmp
sbb
mov
dec
hlt
xchg
mov
out
jle
or
inc
es
shl
test
or
mov
test
push
shl
xchg
pop
outs
sub
packsswb
aas
or
movs
fld
inc
lods
push
xchg
cli
cld
push
repnz
div
xchg
mov
rdtsc
pop
jnp
popa
das
add
sub
popa
hlt
movs
mov
popa
int3
mov
ds
pusha
mov
inc
dec
bound
xor
scas
cmp
in
xchg
dec
sbb
add
aad
popf
ja
sbb
push
push
sub
mov
mov
sub
and
sbb
sub
dec
push
iret
hlt
jmp
xlat
ins
fild
mov
pop
ss
mul
jmp
out
and
outs
and
sub
std
loopne
mov
retfw
(bad)
popf
fadd
pop
push
mov
push
popf
push
dec
jge
leave
push
imul
adc
and
push
sbb
imul
lods
in
lods
test
and
or
or
xor
dec
push
ja
inc
mov
jno
jle
(bad)
aad
sub
xchg
(bad)
arpl
hlt
push
(bad)
pusha
or
and
and
dec
dec
enter
xchg
jbe
movs
loopne
mov
push
ret
out
jl
sub
add
mov
test
and
dec
popf
or
add
out
or
retf
xchg
mov
dec
movs
lea
out
push
jge
out
scas
xchg
xchg
loopne
sbb
imul
dec
pop
mov
in
pop
pop
pop
out
sub
sbb
mov
das
jnp
jmp
inc
push
std
mov
push
ds
dec
scas
push
push
bound
ins
pop
fadd
cli
add
inc
jp
xchg
leave
sbb
or
(bad)
(bad)
aam
idiv
inc
enter
inc
cmp
sub
sub
call
jge
int3
push
movs
ins
retf
xchg
cmps
jb
fstp
(bad)
call
loopne
mov
outs
cmp
pop
or
mov
ins
nop
(bad)
hlt
jmp
lock
outs
inc
scas
mov
test
pop
inc
push
jbe
out
into
cmps
and
push
fldenv
xchg
pop
dec
add
in
test
and
jg
jae
(bad)
loopne
movs
or
iret
call
mov
ss
loope
jle
out
push
xchg
fbld
sub
and
or
jb
lahf
scas
jns
dec
xchg
add
add
aas
repz
fwait
xlat
dec
sbb
dec
out
push
test
and
jmp
out
fild
mov
aad
inc
in
popa
idiv
outs
(bad)
mov
add
mov
xchg
loop
or
inc
shl
push
rcl
pop
adc
sbb
repz
(bad)
(bad)
addr16
cdq
enter
idiv
cmps
or
mov
cmp
imul
cmp
pop
push
xor
dec
scas
or
push
jns
div
inc
adc
jmp
or
adc
dec
pop
hlt
adc
add
(bad)
fidiv
adc
jg
imul
cmps
push
push
cmp
push
inc
dec
sub
mov
cmp
dec
lock
cli
out
cmp
add
inc
adc
enter
loopne
mov
dec
mov
pop
call
loop
and
test
cli
xor
fnsave
mov
mov
pop
ja
repz
add
mov
rol
ins
mov
pop
push
xchg
add
push
push
sub
dec
outs
cmp
in
dec
lods
(bad)
xlat
push
in
arpl
ret
mov
jecxz
out
call
int
sbb
sbb
push
jg
xchg
push
push
dec
retf
dec
mov
push
mov
aam
mov
pop
aam
jb
into
push
mov
in
adc
(bad)
enter
adc
fisub
pop
cmp
das
frstor
cmp
mov
inc
aam
ins
mov
icebp
imul
or
dec
retf
or
dec
adc
mov
cmps
leave
ret
adc
lahf
mov
out
mov
std
push
mov
shl
jmp
push
lods
aas
mov
daa
jl
sbb
pop
jmp
cmp
xor
pop
add
fldenv
pop
pop
add
push
xchg
cmps
inc
adc
pop
iret
mov
test
mov
push
push
pushf
push
cmp
dec
dec
pop
icebp
or
jp
add
pushf
nop
xor
test
xchg
repz
pop
mov
adc
test
fcom
jp
sub
mov
push
inc
fwait
and
add
inc
in
sbb
fdivr
fistp
add
pop
adc
out
sub
inc
dec
cld
mov
xchg
pop
imul
fwait
repz
mov
aas
dec
cdq
repnz
outs
jne
jmp
fs
clc
rep
retf
push
test
ffreep
jmp
fidiv
mov
mov
mov
push
and
push
shr
dec
jne
jmp
dec
loopne
hlt
daa
or
inc
mov
adc
test
mov
dec
jmp
jae
xchg
and
fwait
shl
arpl
pop
inc
retf
and
sub
fsub
adc
call
retf
xchg
sbb
movs
dec
bound
out
push
aaa
mov
movs
mov
add
add
mov
repz
sahf
out
sbb
leave
mov
dec
pop
dec
xchg
push
mov
data16
hlt
or
movs
fs
dec
inc
add
or
cmps
mov
cmovp
lods
pop
cld
(bad)
aam
mov
and
fadd
and
pop
ss
jae
repz
push
fistp
gs
fisttp
mov
cs
ror
mov
vmovntdq
shl
shr
ret
fisub
push
xor
les
mov
xchg
loopne
jae
mov
retf
les
jo
ins
push
pop
jmp
out
cli
cmp
sub
je
fadd
fbld
fcom
pop
dec
mov
dec
jno
jmp
sub
jl
xchg
adc
in
call
retf
pop
fsub
icebp
pop
cmc
and
pushf
in
pop
cmp
movs
ins
cmp
aad
sbb
cmp
xlat
sub
js
inc
retf
jb
dec
ins
retf
fst
mov
sbb
mov
cmp
in
and
jp
outs
adc
aas
push
jbe
xor
mov
mov
fcomp
fsubr
add
icebp
cmp
lock
stc
mov
and
mov
sbb
sbb
ss
lahf
add
sub
dec
dec
(bad)
movs
fwait
mov
lods
and
fistp
out
repz
js
outs
sbb
inc
ret
push
sub
(bad)
mov
inc
sar
jae
loope
or
xchg
mov
sar
dec
cmp
int
out
add
pop
jg
stos
mov
xchg
int3
punpcklwd
fdiv
ud1
xchg
retf
clc
pushf
sti
(bad)
push
jnp
mov
and
stos
push
movs
adc
gs
pop
(bad)
push
hlt
adc
inc
out
xor
sub
dec
push
adc
retf
xor
fild
cdq
dec
arpl
adc
aaa
outs
xchg
mov
sub
sub
std
inc
cmps
inc
repz
mov
xchg
scas
fisubr
cmc
mov
(bad)
xor
jns
push
rcl
cmc
outs
sbb
fsubr
retf
retf
ins
inc
hlt
lds
jae
lock
sbb
std
mov
iret
sti
in
pop
push
clc
aaa
sti
bound
repnz
push
xchg
leave
dec
xchg
scas
jmp
or
xchg
push
jnp
addr16
jo
loopne
and
mov
call
jp
ja
retf
jmp
sub
dec
sbb
iret
mov
cmp
fadd
and
(bad)
mov
mov
(bad)
clc
add
js
mov
ret
das
pop
lahf
xor
pusha
ror
popa
inc
inc
lea
or
sbb
popa
fidiv
sbb
imul
(bad)
test
pop
xchg
push
xor
mov
fimul
fwait
loope
adc
jmp
ret
stos
dec
pop
xor
enter
(bad)
fld
fist
movs
or
push
jmp
fisttp
iret
push
xchg
jbe
lds
pop
sub
add
fdivr
jp
cmps
or
pop
sub
test
arpl
inc
jnp
mov
mov
scas
ja
push
faddp
xchg
stos
xchg
jbe
jp
stos
loop
mov
mov
and
cmps
ror
mov
push
and
adc
pop
movs
mov
stc
xor
sbb
adc
xor
add
xor
popf
arpl
or
cld
lock
adc
dec
jae
retf
pop
stos
in
pop
add
movs
jmp
jp
out
pop
out
jbe
sub
data16
cld
dec
outs
adc
and
add
jbe
mov
xor
push
fisttp
arpl
icebp
sub
lahf
in
rcl
mov
ja
lahf
cs
jp
and
icebp
pop
sbb
sahf
pop
popa
jp
ins
not
mov
jbe
or
(bad)
and
aam
add
stos
movs
sbb
xchg
and
inc
add
(bad)
jns
popf
rcr
in
inc
cmp
rcr
leave
push
xor
mov
adc
into
add
jle
jne
lea
mov
in
cmps
pop
fdivp
into
add
aaa
pushf
mov
add
mov
lea
push
sub
add
sti
inc
mov
mov
xor
push
xlat
push
or
nop
lock
lods
pop
jb
adc
repz
test
or
call
test
cmc
sbb
in
mov
and
aad
loop
xchg
cmc
arpl
pop
cmc
hlt
xor
shl
mov
loopne
popa
mov
(bad)
mov
lea
mov
out
xchg
pushf
ror
test
sub
sbb
ret
sub
mov
mov
in
lods
lods
dec
aas
test
fs
xchg
aam
add
adc
stc
fs
mov
std
push
(bad)
stc
mov
ins
push
cli
mov
or
sbb
or
push
repnz
cmp
lock
movs
adc
jp
aas
cdq
inc
shr
out
push
(bad)
js
push
and
lods
mov
dec
popa
pusha
pop
je
xchg
mov
mov
test
add
pop
dec
iret
loope
jecxz
cmp
or
and
or
in
out
mov
dec
adc
ret
ss
dec
xor
je
xchg
test
outs
mov
rcr
pop
jecxz
or
add
div
shr
mov
cdq
test
int
cmc
arpl
mov
int
cmps
add
mov
mov
rcr
push
add
add
mov
pop
mov
inc
mov
test
int
into
jnp
enter
adc
daa
push
add
xchg
sub
popf
inc
int3
repnz
add
test
stos
shl
arpl
call
jne
aam
(bad)
arpl
jo
jge
repz
push
nop
in
arpl
lea
xlat
mov
cmp
cmp
add
adc
jmp
retf
mov
leave
mov
fisubr
xor
and
addr16
xchg
mov
cmp
movs
(bad)
out
in
inc
add
std
push
xlat
add
pop
pop
fdivr
stc
mov
iret
rcr
cmp
add
(bad)
fbstp
dec
push
xchg
xchg
cmp
cmp
lock
pop
test
dec
retf
sbb
push
rcr
es
pop
xchg
pushw
mov
cmp
aaa
scas
popa
fsubr
vmwrite
call
lods
stos
(bad)
loope
das
and
daa
jns
out
mov
pop
iret
imul
arpl
push
out
adc
xchg
cdq
ror
outs
cmp
push
aaa
push
outs
sahf
or
mov
and
cmp
gs
sar
fs
enter
pop
mul
and
mov
hlt
daa
test
and
mov
adc
dec
retf
sub
adc
sbb
dec
mov
dec
repz
jge
hlt
clc
add
pop
jle
scas
cmc
pop
imul
mov
mov
gs
jns
push
push
ins
mov
imul
loope
into
sbb
aam
das
mov
add
out
int3
cmp
sbb
fucom
sbb
cmc
xchg
jle
push
cdq
or
sar
pop
cmp
xchg
adc
inc
mov
add
popa
jb
scas
xor
(bad)
ins
repz
imul
or
js
sub
inc
cmp
mov
mov
xor
mov
sub
js
into
mov
ds
push
xor
inc
jno
xchg
jge
int
dec
mov
sub
and
lods
shl
cmp
dec
cdq
push
jl
retf
and
in
les
mov
mov
fdivr
outs
(bad)
iret
or
arpl
xchg
xchg
xchg
in
mov
stos
bound
fmul
dec
mov
fidiv
ss
push
data16
loopne
cld
mov
push
lahf
add
lods
(bad)
in
pop
mov
sbb
imul
(bad)
dec
add
cmp
sahf
xchg
jb
inc
(bad)
dec
jmp
xchg
(bad)
loopne
xchg
sbb
imul
arpl
daa
inc
aas
aam
jno
mov
cld
cmps
xchg
xchg
(bad)
or
into
xchg
xchg
mov
(bad)
push
loope
push
dec
xor
aas
repnz
mov
inc
mov
fs
or
sbb
or
or
leave
add
scas
fstp
aad
pop
daa
(bad)
enter
fiadd
sub
push
jmp
jmp
loop
xchg
sub
shl
mov
and
(bad)
cdq
pop
and
push
cmp
int3
jmp
es
push
xchg
call
push
sbb
je
pushf
mov
enter
(bad)
lock
ret
cdq
aas
mov
addr16
int3
mov
movs
or
daa
inc
retf
mov
pop
int3
adc
mov
test
fcom
ret
popa
dec
sbb
in
and
adc
nop
add
sbb
lds
pop
aas
daa
(bad)
sahf
scas
jne
daa
out
stc
(bad)
jo
mov
sbb
fwait
popf
xor
xor
mov
(bad)
idiv
popa
adc
(bad)
lock
ret
(bad)
xchg
sub
sub
xchg
jns
dec
cmps
xor
dec
outs
xor
out
icebp
outs
inc
xor
jno
adc
jge
movs
xchg
jle
std
in
push
and
cmp
sub
addr16
out
or
sbb
icebp
dec
stc
jg
mul
xchg
cmp
xchg
mov
mov
push
cdq
(bad)
fwait
aaa
xchg
adc
xor
pop
out
push
cmp
movs
mov
inc
cmps
mov
add
mov
fld
scas
setg
outs
push
jg
pop
xchg
xlat
rol
push
mov
ror
xor
mov
imul
mov
das
pop
add
leave
add
bound
in
outs
jg
jnp
das
in
sbb
stc
adc
test
daa
sbb
mov
stos
aaa
fild
xor
and
mov
sub
pushf
adc
rol
js
cdq
and
xchg
movs
sbb
adc
mov
call
stc
add
pop
jns
fist
mov
cmp
or
mov
dec
fs
inc
test
lds
sub
mov
popf
dec
push
jo
add
out
retf
inc
add
fs
mov
add
add
aas
dec
mov
movs
jo
mov
inc
mov
ja
cmp
mov
int3
add
sub
xchg
jb
cmp
movs
mov
and
(bad)
lea
xchg
es
loop
mov
mov
imul
cdq
adc
stos
in
sbb
pop
or
mov
mov
imul
dec
movs
(bad)
cmp
gs
push
cmps
push
popa
addr16
add
scas
dec
mov
movs
xchg
and
call
dec
pop
es
cmps
mov
xchg
lahf
ss
ds
pushf
mov
sub
xchg
fidiv
xor
jmp
scas
stos
mov
inc
mov
enter
out
and
test
sbb
loope
loopne
mov
out
xor
jno
out
popa
mov
jecxz
sti
add
jmp
cmp
pop
jle
aam
shl
outs
enter
fst
xchg
ins
arpl
jmp
pop
mov
sub
sub
or
mov
call
or
and
and
inc
and
out
fwait
ss
push
imul
shl
adc
in
cmc
xor
(bad)
ins
imul
fmul
cmps
mov
xlat
push
int
stos
mov
jmp
in
jno
dec
push
push
mov
jge
push
movs
sbb
jae
jge
mov
pop
scas
(bad)
not
in
sar
test
fwait
mov
jmp
iret
dec
mov
fistp
sti
dec
lds
fwait
cmc
stc
and
mov
mov
(bad)
stos
outs
add
daa
inc
lods
imul
stc
mov
pop
cmp
fisub
cmc
loope
jbe
sub
jecxz
xchg
scas
jp
mov
fnstcw
xchg
inc
call
dec
inc
xchg
sub
inc
pop
out
pop
xchg
xor
xchg
xor
cmps
in
fild
jecxz
push
xor
jnp
imul
mov
into
xchg
sub
jp
ret
push
mov
cwde
cmps
dec
add
(bad)
push
shl
push
jmp
stc
dec
xchg
sbb
shl
or
popa
mov
mov
xor
idiv
(bad)
xchg
mov
jmp
dec
mov
push
bound
fsubr
xchg
xor
out
adc
jns
int
retf
pusha
xlat
call
imul
adc
out
mov
xchg
inc
pop
retf
mov
js
cmc
inc
push
aad
mov
add
popa
add
push
xchg
pop
push
int
in
jg
jmp
call
sar
push
push
(bad)
rol
leave
out
shl
js
outs
xor
push
pop
(bad)
or
imul
das
or
imul
dec
out
std
dec
xor
and
imul
fmul
add
aaa
daa
mov
cmp
fsub
loop
dec
mov
cmc
and
add
mov
(bad)
pop
sar
add
sti
jno
or
imul
cli
popf
int
cmps
ds
jns
(bad)
jmp
cmps
shl
popf
iret
xchg
xchg
sub
jb
mov
js
pushw
pop
retf
ja
and
mov
stos
aas
mov
dec
movs
shr
xchg
adc
call
movs
es
mov
rcr
push
adc
push
or
in
and
sbb
movs
into
sub
jnp
jns
add
movs
mov
add
mov
imul
push
int
mov
xchg
cmps
mov
add
popf
frstor
sub
clc
fadd
mov
aaa
stos
xchg
add
sbb
cmp
push
mov
es
or
adc
and
ss
stos
movs
lea
call
push
inc
jp
outs
jnp
push
xor
arpl
or
popa
bound
xor
xor
pop
sbb
cmp
push
shr
and
push
loopne
jns
aam
scas
fcomp
xchg
sbb
xchg
idiv
(bad)
dec
aaa
jmp
pop
scas
jnp
stos
jmp
inc
xchg
repz
jno
mov
js
inc
ds
mov
mov
rcr
mov
jg
imul
jle
aaa
(bad)
data16
shl
sbb
push
jg
aaa
add
(bad)
xchg
push
call
lods
call
imul
(bad)
popf
add
loop
fidivr
jle
pop
out
and
retf
xor
cs
dec
add
push
add
shl
mov
popa
mov
xchg
mov
mov
mov
fldenv
sahf
adc
push
xor
leave
pop
pop
ins
jno
mov
repz
inc
enter
and
cmp
mov
(bad)
jmp
jmp
shl
cmps
pop
cmp
sbb
lods
xlat
pusha
ss
mov
jne
sub
push
je
(bad)
jg
cld
mov
dec
sub
pop
(bad)
repz
jnp
xor
adc
sti
repz
pop
(bad)
push
(bad)
xor
ja
lods
pop
(bad)
jmp
aad
mov
push
push
mov
xor
xor
les
adc
in
sbb
vpmaxsw
sar
out
push
dec
lock
cld
push
fcomp
jbe
repnz
dec
dec
arpl
xchg
psllw
sbb
or
out
pop
jno
pop
aam
or
cmp
xchg
push
push
pop
push
in
inc
fs
mov
into
sub
add
adc
add
dec
fwait
loopne
ret
cmp
shr
push
retf
shl
sti
mov
dec
xchg
push
and
inc
jl
(bad)
sbb
lahf
or
cmp
jl
xchg
mov
jp
shl
mov
mov
addr16
xor
(bad)
mov
loope
aam
bound
(bad)
cmp
jg
xchg
test
aaa
dec
test
or
pop
outs
loopne
scas
stc
lahf
push
test
out
and
mov
cli
stos
or
aam
cmp
int3
cmc
stos
push
pop
add
mov
lods
push
mov
stos
push
jbe
dec
add
cmc
leave
scas
adc
mov
adc
pop
(bad)
mov
aas
mov
adc
gs
push
xor
adc
dec
xchg
imul
loop
int3
mov
cmp
add
jp
and
jns
ret
add
fild
lods
or
cmps
repz
aam
scas
add
icebp
mov
inc
jge
adc
mov
fisttp
mul
(bad)
sub
lea
pop
pop
push
stos
add
and
fcom
call
clc
jns
movs
rcr
icebp
jmp
xor
xor
sub
movs
sub
inc
daa
imul
(bad)
int3
aam
cli
adc
and
adc
sbb
jae
and
daa
pop
mov
xchg
call
cmp
cmp
scas
inc
mov
and
arpl
add
mov
inc
div
(bad)
rol
add
pusha
xor
adc
lock
add
jg
add
mov
mov
cmp
es
std
jne
dec
mov
stos
add
push
push
jmp
fld
pop
xchg
into
les
jo
int3
sar
inc
pop
cld
pop
xor
fistp
(bad)
shl
mov
lods
jne
mov
mov
std
aaa
gs
lfs
mov
cmps
pop
fadd
frstor
jle
lea
sti
lea
out
push
jmp
into
inc
inc
mov
addr16
bound
aaa
or
pop
adc
jl
test
fisttp
push
jecxz
retf
fst
cmp
add
mov
fsubr
push
dec
pop
lea
push
xor
mov
or
out
scas
push
xchg
sub
rcr
mov
push
dec
jmp
jge
aaa
ror
cdq
add
xchg
iret
(bad)
push
xor
lods
xchg
jp
add
fst
dec
(bad)
ins
jle
int
int
cmps
xchg
mov
popf
jmp
cmp
fs
pop
add
dec
out
scas
cld
pop
push
fs
or
and
lods
and
add
rcl
dec
fild
jg
dec
jecxz
mov
xchg
lds
xlat
jg
mov
jge
scas
out
mov
icebp
mov
sti
xchg
jl
mov
shl
nop
and
jnp
dec
pop
xor
fisttp
mov
adc
popa
mov
inc
mov
fsubr
adc
in
dec
cmp
icebp
popa
daa
adc
add
mov
add
cmp
or
scas
popf
sub
or
and
pop
jmp
retf
or
stc
imul
xchg
ins
xor
out
leave
retf
or
add
adc
jne
xor
int
lea
dec
movs
clc
and
popf
mov
call
fcmovbe
loopne
cmps
push
stos
into
xor
or
lds
sub
jae
test
call
data16
or
cmc
pusha
fnstsw
loope
xchg
call
mov
sbb
loopne
loope
mov
dec
and
inc
add
push
sbb
mov
inc
stos
push
dec
jg
retf
std
imul
hlt
lea
sub
dec
(bad)
sub
arpl
(bad)
addr16
sub
xchg
call
mov
mov
push
ss
and
add
iret
cwde
push
aad
fsub
pusha
push
in
popa
pusha
sbb
mov
xor
fwait
int3
fsub
dec
mov
dec
imul
push
ret
das
fwait
test
(bad)
jmp
pop
les
push
pop
(bad)
mov
mov
or
mov
mov
xor
xchg
imul
jl
xlat
jmp
xchg
nop
xchg
ins
pop
sub
mov
(bad)
mov
cwde
mov
fiadd
xchg
jnp
xchg
sub
jno
mov
stc
and
inc
push
cmp
jp
dec
popf
sbb
out
inc
lea
sbb
add
ror
dec
sti
jb
sbb
or
jl
sbb
std
cs
inc
ja
pop
cmp
mov
aam
dec
iret
mov
mov
pop
div
adc
frstor
push
test
pop
jle
test
mov
gs
neg
mov
int3
or
pop
clc
xor
outs
bound
push
cvttps2pi
into
pushf
sub
xchg
lds
pop
ss
repnz
add
adc
or
(bad)
iret
pop
mov
push
rol
cld
jmp
add
je
jecxz
shr
sub
jns
mov
cmp
sub
mov
cdq
mov
and
and
lock
not
push
pop
adc
and
adc
fidivr
fidiv
(bad)
xchg
push
and
aam
in
lock
mov
out
imul
sti
stos
mov
pop
pop
mov
rcr
xor
and
mov
in
out
into
fwait
es
mov
dec
test
pusha
xlat
and
(bad)
mov
push
repz
sbb
add
iret
lds
inc
std
push
ss
inc
aas
fcomp
fistp
mov
movs
push
xchg
inc
inc
inc
les
mov
aas
push
(bad)
mov
das
movs
bnd
mov
cmps
jmp
fdivr
iret
arpl
ds
div
data16
dec
fisub
ins
xchg
stc
daa
jg
mov
nop
inc
xchg
repnz
mov
add
mov
dec
iret
mov
lds
cli
fcom
cmp
fist
mov
fdivr
ja
ror
jmp
adc
hlt
icebp
and
push
clc
sub
inc
test
inc
retf
jmp
mov
mov
es
ror
lahf
adc
(bad)
enter
rcr
sub
xlat
out
lods
rol
mov
dec
ret
cdq
or
je
pushf
sub
test
push
mov
jge
inc
in
or
aad
mov
dec
xor
jne
xchg
pop
dec
lds
xchg
sahf
pusha
pop
adc
mov
sti
pop
jae
xor
or
cs
sbb
pushf
cli
das
hlt
loope
mov
pop
and
mov
sti
imul
jmp
ins
popa
ss
fs
mov
pop
sti
cs
rcr
push
repz
mov
jecxz
ins
push
adc
mov
clc
movs
lds
lods
gs
cmp
hlt
fmul
sbb
inc
ins
jl
les
inc
sbb
leave
in
movq
push
pusha
push
add
push
test
in
mov
test
add
dec
loope
test
rcr
and
push
in
mov
popf
loopne
lods
inc
mov
xor
call
or
sbb
mov
jge
cdq
mov
icebp
in
lock
ins
(bad)
and
cmp
shr
xor
out
or
ret
icebp
iret
ficomp
xchg
xlat
inc
cmp
test
lds
mov
rcl
fwait
push
and
pop
add
and
mov
sub
cmp
pusha
rol
lds
add
imul
and
out
pop
inc
faddp
in
mov
mov
pop
inc
stos
xor
xchg
sti
ret
jno
int3
lods
mov
dec
sahf
mov
push
mov
ja
cs
xchg
stos
xor
add
add
pop
fstp
pop
jnp
cmp
and
mov
popa
and
mov
jo
test
loope
add
fisttp
ror
enter
test
and
cmp
and
xchg
mov
clc
jge
aaa
mov
(bad)
jg
out
add
mov
pop
pop
push
cmp
loopne
int3
sahf
bound
mov
cmp
sbb
dec
in
adc
push
sub
out
and
iret
rol
add
arpl
test
push
xor
or
in
pop
repnz
dec
cld
aas
mov
lea
jb
repz
pop
mov
movs
xchg
lea
jmp
mov
xchg
cmps
imul
fwait
imul
adc
pop
mov
aam
scas
ins
js
xchg
imul
test
arpl
add
call
fsubr
imul
push
test
sbb
jmp
aad
and
(bad)
out
push
cmp
loopne
clc
cmp
sub
call
(bad)
cmp
das
or
lods
mov
xchg
fstp
scas
js
jl
fld
jnp
xlat
pop
push
inc
movs
mov
test
movs
cld
mov
cmp
lds
scas
aaa
mov
cmp
mov
fimul
test
cmp
stos
aad
adc
cmps
jp
js
das
daa
mov
dec
loopne
les
inc
in
nop
shr
or
jns
adc
mov
or
cmp
and
push
dec
clc
adc
mov
pop
pop
lock
dec
stos
jecxz
in
lea
ds
out
stos
jle
dec
mov
je
pop
cmps
into
loop
mov
push
sbb
mov
test
pop
aad
call
loopne
nop
sbb
sbb
retf
inc
xchg
cdq
movs
pop
aam
cmp
mov
mov
pushf
inc
ds
pop
push
(bad)
rcr
lock
int
push
ds
dec
fimul
lods
pushf
mov
xchg
rcl
bound
es
enter
call
mov
fnsave
arpl
and
into
test
dec
in
jmp
into
mov
mul
adc
sub
jno
push
call
sti
or
mov
mulps
sti
xlat
jecxz
mov
les
mov
inc
imul
mov
mov
leave
xchg
push
(bad)
jae
pop
daa
aaa
rcr
out
mov
push
mov
push
int
mov
add
jno
sahf
lea
adc
sub
dec
pusha
sahf
mov
dec
inc
call
dec
fidiv
inc
sbb
icebp
add
ret
mov
aas
iret
mov
int3
iret
sub
xchg
stc
cdq
fsub
add
jb
mov
nop
pop
mov
mov
stc
sub
sub
out
sbb
jnp
inc
inc
add
adc
and
(bad)
arpl
or
clc
inc
ins
(bad)
(bad)
lods
push
fwait
clc
push
mov
hlt
jmp
push
xchg
sar
enter
and
outs
pop
push
outs
stos
imul
pushf
push
xor
ret
test
pop
clc
mov
jnp
adc
cmp
push
in
stos
xchg
ins
or
or
pusha
aaa
(bad)
rol
and
pop
adc
arpl
lea
lds
pop
imul
dec
stos
push
pop
(bad)
push
or
(bad)
int3
imul
outs
dec
leave
inc
adc
shl
xor
pop
call
mov
jp
add
or
fwait
inc
iret
xchg
outs
inc
sub
jo
sub
stos
sub
out
(bad)
pop
push
add
(bad)
adc
ds
xchg
(bad)
jne
imul
inc
retf
fs
push
mov
mov
dec
imul
cmps
inc
cmp
out
mov
movs
fsub
div
aas
mov
jp
inc
jg
loope
(bad)
cwde
mov
fisttp
xor
pop
daa
jle
and
test
push
pop
jl
xor
xor
shl
and
pop
iret
xlat
repz
repz
add
dec
loope
(bad)
sub
xor
enter
pop
jmp
sti
pop
push
jno
adc
shr
aas
shr
int3
xchg
ss
or
push
popf
test
cmp
mov
inc
xchg
jecxz
xchg
xor
add
add
adc
je
shr
mov
mov
add
mov
cmp
add
add
mov
lods
cmps
dec
pop
rol
and
sub
adc
int3
adc
stc
or
and
push
cs
data16
ins
push
test
cmp
mov
push
or
pop
test
pop
ret
addr16
out
pop
call
add
cmp
ja
(bad)
lods
pop
daa
movs
les
mov
add
aad
lods
sub
mov
fstp
div
nop
cli
xchg
fdivp
add
fsubr
mov
inc
cmp
pop
dec
mov
dec
popf
retf
inc
or
fstp
push
inc
jge
cdq
inc
sbb
ret
shl
psrld
rcr
test
cmp
nop
test
mov
ret
arpl
aam
aam
rcl
pop
out
in
mov
movs
inc
(bad)
punpckhbw
cmp
cmp
retf
ret
movs
out
ds
xchg
je
fiadd
movs
repz
out
mov
in
push
push
shl
test
adc
mov
xchg
jnp
add
gs
dec
xchg
mov
cmps
jbe
add
jle
xor
jb
(bad)
pop
cmps
in
les
mov
mov
xchg
hlt
pushf
xor
cmp
pop
fistp
sbb
xor
inc
jne
xchg
and
xor
sbb
mov
mov
adc
xchg
pop
push
jmp
push
xchg
sbb
mov
lods
push
mov
arpl
icebp
mov
pop
adc
idiv
dec
jp
repz
mov
adc
jns
mov
jg
push
jne
repnz
xchg
idiv
cmc
sbb
mov
xchg
mov
sbb
add
mov
cmp
xchg
(bad)
inc
mov
push
xor
ss
sub
adc
jle
out
push
test
fcomp
sbb
push
iret
dec
clc
add
mov
je
pop
rcl
leave
int
adc
pushf
outs
cmps
mov
jecxz
pop
adc
into
push
push
sti
dec
mov
iret
mov
in
dec
loop
popa
mov
(bad)
xor
sahf
mov
push
stc
push
push
push
push
xlat
out
jge
dec
adc
inc
aaa
lea
cdq
rcl
lods
int
outs
cmp
sbb
jmp
pop
push
jge
(bad)
enter
movs
ret
fst
icebp
test
adc
fs
sar
xchg
dec
stos
int
push
inc
mov
pop
popa
inc
dec
cs
ins
loope
addr16
cdq
sbb
mov
xor
inc
push
inc
xor
xor
in
mov
test
xchg
retf
cmpxchg
sbb
xor
jmp
out
jg
mov
dec
into
(bad)
mov
ds
jmp
pop
rcl
(bad)
(bad)
fst
enter
adc
pop
pop
adc
test
adc
fstp
nop
sbb
push
push
jp
xchg
and
sub
psadbw
div
push
sahf
fst
or
mov
pop
std
leave
(bad)
scas
in
cmp
jbe
mov
jge
imul
inc
or
cmp
push
mov
add
aam
shr
adc
and
push
out
mul
inc
mov
pushf
jl
fisubr
pop
cdq
in
lock
sbb
(bad)
cdq
inc
xor
cs
mov
push
jmp
lahf
repz
scas
cwde
sbb
je
and
aas
or
mov
inc
adc
or
pop
xor
hlt
adc
popa
inc
jae
and
mov
test
div
cpuid
test
jge
jmp
stos
shl
sbb
jae
pushf
pop
pushf
sar
enter
dec
xchg
(bad)
es
(bad)
imul
lea
fmul
pop
in
lods
mov
mov
mov
out
jns
int
cwde
(bad)
sbb
lds
out
iret
jo
js
sub
mov
xchg
sub
nop
mov
enter
ja
pop
mov
out
lahf
jo
daa
xchg
inc
fnsave
mov
test
into
enter
push
mov
push
ret
enter
(bad)
adc
sub
in
jne
push
push
cdq
lods
push
pop
push
(bad)
mov
jbe
repnz
xchg
sbb
add
pop
cmp
outs
dec
sub
xor
inc
bound
test
mov
pop
xor
neg
push
jmp
or
ror
aad
pop
call
retf
cdq
inc
mov
pop
cmp
adc
xchg
mov
xchg
dec
dec
dec
into
cmp
or
rcr
(bad)
xchg
lock
mov
jbe
cmp
leave
add
adc
adc
jnp
add
stos
ins
adc
dec
mov
cmps
iret
jp
push
mov
cli
pop
mov
or
add
jns
pop
mov
pop
mov
(bad)
pop
push
je
jle
mov
inc
ins
scas
mov
push
xchg
jl
sbb
cld
fiadd
push
neg
test
test
jge
inc
jne
push
test
or
in
sub
mov
arpl
das
imul
inc
add
dec
sub
lods
xchg
sub
rol
fwait
mov
cwde
sub
push
pop
mov
dec
not
imul
bound
pop
outs
lahf
icebp
ds
test
call
lea
ficom
cmp
test
or
mov
xchg
shl
sub
rcr
data16
shl
push
sbb
(bad)
scas
sbb
in
cs
out
iret
xchg
fwait
dec
jp
push
cwde
or
out
add
imul
bnd
(bad)
sbb
xchg
outs
xchg
dec
sub
cmps
shl
sub
fsubrp
or
xchg
ins
push
dec
jo
(bad)
sahf
test
sbb
mov
inc
mov
retf
xor
rcr
arpl
int3
pop
(bad)
mov
stos
push
rol
xchg
mov
imul
les
xchg
ins
mov
pop
fdivr
call
pushf
test
dec
mov
mov
or
mov
jecxz
arpl
lock
enter
rol
sbb
cmc
adc
pop
fidivr
sar
mov
nop
mov
push
retf
mov
push
(bad)
xchg
lock
stos
fcomp
in
movs
xchg
or
in
movs
hlt
mov
xlat
movs
mov
add
ja
(bad)
in
repnz
pushf
outs
fnstcw
push
xor
stos
fldcw
xor
rol
xor
je
ss
call
cli
jecxz
jl
ins
cs
xchg
lea
fld
add
xor
mov
hlt
push
pusha
mov
pusha
je
or
cmp
xchg
cwde
imul
inc
jmp
mov
jp
or
int
test
dec
mov
in
jp
scas
mov
cmp
arpl
sub
jne
sbb
imul
push
xchg
stc
dec
sbb
jl
pop
iret
push
dec
pop
xchg
stc
mov
sub
out
mov
jnp
ins
repnz
and
rcr
lahf
inc
push
loopne
dec
push
pushf
xchg
cmp
push
dec
mov
dec
pop
lods
jno
aad
ins
movs
pop
std
arpl
ds
(bad)
cmp
and
add
and
jns
pop
mov
mov
test
in
or
xor
lods
mov
ficomp
jmp
push
cmps
mov
pop
push
cmp
add
push
add
sbb
jb
cld
mov
aaa
inc
lods
retf
dec
cli
mov
ja
push
in
mov
repz
mov
jle
cmp
fsubr
daa
pop
out
jg
shl
into
js
leave
cli
jmp
test
or
jmp
ins
jle
mov
dec
fiadd
cmp
xchg
(bad)
aam
pop
pusha
dec
add
add
mov
jmp
aas
mov
inc
pop
xchg
push
jae
sub
sub
lahf
cmps
imul
popa
imul
add
pop
pusha
pop
push
push
aad
add
ja
popf
sbb
cmps
and
cmc
cmps
cs
call
xchg
pop
mov
inc
xor
das
cld
mov
pop
cmps
lea
pop
ficomp
cs
imul
sbb
xlat
mov
adc
stos
std
xor
fnsave
inc
jmp
and
aad
ffreep
xor
push
dec
es
sti
mov
in
(bad)
stos
inc
jmp
jno
add
(bad)
stos
mov
inc
sub
xchg
test
das
sub
xchg
inc
fwait
xchg
test
stos
inc
loope
retf
xor
in
dec
cmp
push
adc
pushf
xchg
icebp
lahf
add
mov
mov
pop
test
push
in
mov
sub
in
test
adc
mov
imul
leave
hlt
sbb
inc
es
aaa
das
scas
jb
pusha
retf
std
scas
lock
lock
mov
pop
pop
cdq
or
sub
mov
aad
lea
iret
cmp
and
(bad)
je
shrd
scas
sbb
les
retf
rcl
jno
aaa
cmp
jg
loop
retf
into
into
dec
and
mov
and
xor
push
xchg
sub
addr16
sbb
add
ins
mov
(bad)
jmp
hlt
outs
movs
add
outs
adc
mov
push
pusha
adc
stc
cmps
fnstsw
jl
loop
shr
add
or
jbe
push
ret
adc
push
xor
pop
and
movs
add
int
xchg
sbb
mov
mov
xchg
push
mov
hlt
aaa
imul
and
push
test
mov
ins
adc
mov
fnstenv
xchg
xchg
xchg
fist
sub
mov
mov
sbb
fs
jl
or
mov
mov
add
push
cdq
les
popa
in
ins
inc
mov
frstor
neg
test
sbb
or
xchg
rol
movs
inc
sbb
repnz
xchg
sub
jne
sti
into
out
popa
cmc
push
bound
inc
and
sahf
loop
sub
mov
iret
mov
cmp
add
xchg
adc
add
jle
xlat
inc
add
inc
sub
daa
inc
int3
sbb
push
sub
xchg
not
pop
sub
or
or
retf
and
pop
inc
(bad)
repnz
nop
aaa
lds
cmp
mov
xchg
sbb
push
and
jne
sbb
cmp
dec
jbe
pop
pop
in
jnp
cmp
and
inc
sub
outs
shl
in
dec
push
cmp
int3
mov
jmp
test
mov
inc
push
dec
aas
bound
inc
loopne
out
das
cli
add
jno
ret
mov
mov
aaa
scas
xchg
mov
mov
cmp
nop
sbb
and
imul
mov
pop
add
mov
out
jne
xor
scas
mov
sbb
jl
pop
ret
les
(bad)
and
push
cmps
addr16
push
inc
xchg
sbb
mov
mov
xor
dec
mov
ret
cmp
jg
lock
ins
xchg
aas
loop
outs
or
repz
dec
or
mov
rcr
jl
dec
mov
fs
sahf
xor
mov
js
ret
ret
out
mov
aaa
lds
mov
rol
cwde
fmul
and
ret
dec
adc
push
jne
loopne
loop
and
sar
inc
ja
pushf
cmps
test
scas
or
ret
dec
aaa
adc
arpl
sbb
repnz
into
dec
mov
(bad)
push
rol
mov
cmp
(bad)
mov
jge
aas
inc
jo
push
add
ret
cmc
scas
mov
int
out
mov
rol
mov
mov
repz
sti
inc
adc
add
ret
sbb
pop
mov
jno
dec
into
icebp
neg
jge
lds
stos
xchg
inc
ret
inc
dec
push
pop
test
jmp
sbb
aas
cmc
dec
push
jnp
or
or
(bad)
sti
in
sbb
sub
jb
cwde
jl
inc
das
push
add
sub
mov
or
pop
shl
inc
ins
(bad)
fmul
stc
fdiv
cmps
add
pushf
and
add
or
in
shr
mov
repz
pop
sbb
mov
js
(bad)
mov
not
stos
add
inc
sbb
sti
stos
sub
ins
pop
dec
dec
and
jmp
ins
jae
shl
add
sbb
inc
push
cdq
mov
xchg
cmp
hlt
mov
ja
adc
bound
sbb
jb
std
cli
jp
inc
nop
add
push
and
mov
inc
xor
stos
jecxz
aam
sti
rol
xchg
jl
mul
jp
sbb
push
retf
adc
call
sbb
xchg
sub
(bad)
cwde
dec
in
mov
outs
push
ror
retf
cmp
rcr
adc
pop
iret
inc
into
ins
adc
pushf
push
js
daa
iret
add
cmp
retf
lock
mov
aad
sbb
test
in
sub
fwait
div
retf
mov
ficom
inc
into
in
add
in
push
inc
(bad)
xchg
push
pop
(bad)
stc
cmp
outs
inc
fistp
push
pop
and
or
jbe
jmp
cld
mov
push
cmp
and
or
dec
mov
dec
pop
and
sub
add
and
das
push
cwde
or
inc
push
mov
icebp
sub
jo
or
jmp
mov
daa
in
inc
jmp
xchg
imul
aad
das
dec
movs
adc
daa
imul
aam
xor
dec
stos
hlt
xor
bound
xor
mov
retf
push
lods
stos
imul
mov
xchg
jmp
leave
xor
lods
ja
ins
adc
mov
xchg
int
cmp
mov
pop
pop
sub
data16
xlat
dec
mov
out
in
cmp
dec
jns
ret
and
fucomp
idiv
es
movs
mov
rcl
dec
add
pop
nop
gs
push
hlt
pop
add
loop
mov
mov
pop
retf
or
hlt
sbb
cmp
lods
cmp
push
pop
loopne
and
pop
fisttp
inc
inc
shr
cwde
movs
lods
push
jne
movs
icebp
out
jns
out
add
pop
or
push
inc
mov
or
lods
pop
cwde
ror
push
lds
sbb
popf
sub
mov
and
jnp
sbb
imul
dec
xor
xchg
pop
add
fisttp
push
adc
mov
ins
loop
cmp
pop
mov
jl
stos
xor
xor
jge
not
xchg
xchg
repz
test
pop
mov
lahf
push
outs
movs
in
iret
push
mov
or
bound
stos
out
test
jae
mov
mov
jmp
adc
dec
mov
loopne
mov
sub
int3
fwait
mov
inc
mov
ins
pop
push
sahf
xor
cmp
das
sub
sbb
jo
mov
mov
fwait
int
pop
pusha
outs
add
test
in
shl
enter
imul
rcr
je
mov
es
mov
add
movs
mov
mov
mov
push
xchg
pop
loope
xchg
(bad)
repnz
mov
iret
and
xchg
mov
arpl
popa
push
sahf
cdq
test
dec
add
movs
sub
push
sbb
stos
adc
clc
xchg
sub
shl
jnp
sub
sbb
std
ins
inc
mov
int
jmp
or
in
rcl
sub
es
xor
inc
outs
test
mov
add
jae
div
sbb
in
int3
mov
pop
mov
shl
dec
aas
cmps
rcr
adc
mov
and
das
enter
into
mov
or
cmc
mov
test
nop
loop
mov
jne
arpl
ins
or
push
popf
xchg
out
xor
repz
add
sub
arpl
test
(bad)
cmp
(bad)
inc
and
call
outs
mov
sahf
test
in
mov
icebp
ret
imul
xlat
stos
retf
(bad)
fistp
rol
pushf
sub
mov
test
mov
xchg
pop
fwait
xor
leave
and
xchg
in
mov
outs
xor
popa
or
cmps
and
xchg
pusha
aad
and
xchg
lock
(bad)
push
mov
out
test
jmp
call
inc
icebp
push
push
inc
(bad)
in
xor
add
popa
xchg
in
mov
out
je
jge
int
mov
or
adc
loope
fsubr
sbb
pop
adc
adc
push
pushf
jmp
leave
outs
test
pop
mov
rcl
gs
dec
les
push
inc
div
ror
jecxz
inc
in
es
pop
jle
sub
mov
and
mov
push
mov
hlt
movs
jne
xor
sar
lahf
ds
mov
cld
sub
push
cmp
cmc
cld
in
or
(bad)
arpl
jmp
jb
sub
gs
ss
rol
cmp
sub
fmul
sub
hlt
loopne
jb
pushf
mov
movs
clc
mov
fild
push
mov
add
jge
xchg
test
sysret
jmp
mov
jmp
add
(bad)
retf
sbb
arpl
sahf
mov
ja
into
cmp
imul
(bad)
sbb
inc
ins
add
add
jge
retf
out
aad
test
ins
sahf
int3
add
jp
mov
add
and
lods
arpl
call
push
aad
pop
jns
xlat
mov
rcr
jmp
pusha
pop
mov
rol
adc
inc
(bad)
lds
mov
and
lahf
and
push
and
sbb
jns
dec
movs
pusha
fnstenv
pushf
mov
add
fdivr
icebp
outs
cmps
sub
xor
jnp
dec
and
mov
ja
fld
or
fidiv
mov
mov
jbe
xor
(bad)
cwde
inc
ins
sbb
cdq
push
inc
inc
jl
mov
je
stos
hlt
inc
mov
pop
ss
adc
jns
loopne
xor
hlt
xor
icebp
adc
sub
mov
fild
int
mov
pop
xchg
mov
dec
sub
stos
or
scas
(bad)
repz
sbb
jnp
cmp
retf
push
add
mov
fxch
and
call
ss
pop
and
nop
mov
sbb
(bad)
outs
(bad)
mov
adc
add
dec
and
(bad)
pop
cmp
rcl
fisub
dec
cmc
push
push
dec
cmc
inc
sub
je
je
mov
jmp
xchg
xor
and
rcl
ds
pop
ins
ins
gs
push
ret
(bad)
out
movs
push
aam
sub
enter
fiadd
sub
pusha
(bad)
add
sbb
inc
scas
icebp
cmps
or
jae
outs
push
mov
mov
fwait
data16
pop
fmul
mov
add
cld
test
nop
scas
test
ficom
xchg
and
in
ficom
sub
sub
jns
test
or
cs
(bad)
sub
cdq
call
mov
pop
not
adc
jne
mov
popf
iret
jbe
cmps
mov
xchg
xor
or
push
jae
leave
icebp
dec
sub
div
push
sbb
push
cs
scas
icebp
xor
fstp
ret
popf
xor
ss
outs
in
mov
ins
push
shl
call
fwait
xor
cld
cs
mov
push
(bad)
std
mov
mov
sbb
jmp
mov
xchg
ins
mov
not
pop
adc
mov
neg
push
mov
je
daa
loope
es
loope
nop
cmps
mov
mov
loope
mov
test
xor
inc
add
mov
push
cli
xchg
loopne
jbe
add
mov
push
shl
and
mov
pop
std
(bad)
xchg
rcr
jl
jecxz
outs
mov
push
jno
lea
btr
int
push
aam
pop
and
inc
hlt
aaa
neg
fwait
mov
sbb
js
mov
aam
mov
pop
jmp
sub
cwde
or
xchg
cmp
add
retf
push
(bad)
jg
cmp
pop
cmp
(bad)
push
and
in
and
cmp
cmp
fbld
es
push
rcr
xchg
loopne
arpl
in
jl
push
push
push
scas
outs
push
test
(bad)
aam
inc
dec
jae
xchg
(bad)
jmp
xchg
imul
adc
dec
xlat
add
or
xchg
lea
jno
scas
jbe
retf
fs
cmp
ret
fmul
ror
and
sub
jbe
leave
jmp
pop
fcom
and
and
inc
and
cmps
movs
add
out
hlt
das
sbb
or
cmp
cwde
cmps
gs
xchg
fcmovnb
and
jns
jmp
(bad)
aas
retf
test
cld
sbb
sub
std
add
and
cmc
sub
test
pop
call
add
xlat
sar
push
xor
add
aas
push
jmp
or
sub
xor
fwait
xchg
std
arpl
and
xchg
out
shl
mov
mov
sub
mov
movs
mov
stos
stos
fild
xor
inc
not
xchg
mov
mov
cmp
aaa
mov
add
cmps
outs
(bad)
clc
sub
dec
sbb
out
aad
cli
mov
push
shl
inc
jmp
mov
add
gs
cmp
(bad)
or
inc
mov
cmp
cmp
hlt
stos
push
pop
sbb
cmp
rcr
or
jne
mov
fwait
int
enter
jns
fcmove
xchg
push
push
inc
dec
stc
fldln2
mov
xchg
and
jg
push
inc
aad
dec
inc
sub
sub
mov
dec
inc
(bad)
jmp
adc
lods
clc
or
jno
and
out
shr
jmp
xlat
es
xchg
jmp
pop
jmp
sub
bswap
les
iret
outs
lds
jbe
mov
add
cwde
shl
sar
xchg
movs
dec
loope
iret
push
ins
mov
dec
je
cmp
inc
xchg
lods
out
movs
(bad)
mov
stos
loope
dec
stc
scas
stos
es
xchg
ins
retf
pop
mov
xchg
sub
dec
out
bound
in
jbe
jnp
out
out
shl
(bad)
fs
loope
sub
adc
inc
mov
jmp
(bad)
xor
sbb
mov
retf
cs
jb
mov
dec
sbb
out
sub
cmp
cli
xor
aad
outs
adc
nop
pop
iret
std
cmp
in
push
js
out
ins
nop
popa
xor
sub
dec
sub
dec
fwait
xchg
pop
inc
jl
je
das
xor
ret
retf
jmp
xor
mov
or
pop
clc
js
push
ss
pop
pop
fst
sub
or
mov
aam
or
jmp
and
mov
jge
(bad)
aaa
jg
fs
cmp
mov
xchg
mov
xor
shr
les
pop
push
mov
dec
stos
mov
cs
sbb
pop
lods
xchg
fbstp
mov
jno
xchg
cmp
mov
jmp
es
add
xor
push
adc
push
loope
out
test
into
xor
ss
jmp
and
outs
xor
pusha
mov
rol
retf
imul
mov
in
adc
ins
add
dec
xor
inc
add
sbb
dec
idiv
push
push
(bad)
cli
push
mov
push
fistp
xor
inc
sub
sahf
or
sti
dec
sbb
inc
mov
mov
js
or
in
inc
add
jmp
jmp
mov
lock
push
repz
jl
cmp
aad
inc
xchg
sub
jno
add
sub
xacquire
idiv
cmp
mov
mov
or
xor
retf
cmp
repnz
jb
sub
(bad)
add
loop
ss
xchg
dec
movs
pop
sbb
fnstsw
add
stos
fld
lds
lsl
setno
ds
adc
ins
cmp
and
xchg
or
add
call
aad
pop
lahf
scas
push
test
(bad)
cmp
arpl
ret
retf
dec
add
jmp
add
xchg
pop
ficom
inc
and
mov
cmp
cmp
imul
add
ud2
in
cli
xchg
adc
inc
adc
pop
cs
push
in
push
push
inc
sub
pop
or
clc
adc
in
xchg
es
fcmovb
mov
outs
lock
ds
push
push
mov
cmp
sub
push
push
mov
mov
cdq
aad
sub
or
mov
pop
adc
mov
das
es
jae
xchg
pop
jl
xor
fiadd
idiv
or
pop
aaa
jno
fild
lock
sti
sbb
iret
fist
push
inc
lds
lods
sbb
arpl
das
push
popf
jmp
and
push
push
shl
jmp
scas
scas
xchg
ror
lahf
les
enter
push
in
and
jmp
or
mov
jo
add
push
push
sub
cmps
xchg
mov
punpckhbw
add
xchg
into
dec
sub
mov
adc
(bad)
xchg
and
loopne
lods
jns
mov
mov
sub
jge
mov
pop
nop
xchg
lock
leave
and
hlt
je
sbb
mov
int3
and
dec
inc
adc
cmps
sub
pop
imul
jl
push
mov
adc
pop
leave
mov
out
mov
cmp
fcmovbe
xor
psrad
xchg
(bad)
hlt
jp
retf
mov
nop
add
cmps
push
jns
aam
adc
mov
aaa
cmps
mov
adc
sub
add
in
xlat
xor
fdiv
xor
xor
push
inc
shl
xchg
lds
in
popf
loope
and
inc
mov
sbb
xchg
das
xchg
jno
xchg
rcl
mov
(bad)
xor
mov
scas
xchg
cmc
inc
mov
fmul
bound
scas
and
stos
ss
std
adc
fpatan
mov
out
aaa
sbb
pop
push
push
es
in
mov
sar
or
or
xchg
jns
outs
sbb
icebp
dec
xchg
adc
test
aaa
out
leave
cli
and
mov
fsubr
push
pop
and
loop
out
push
xchg
aad
enter
and
xchg
cli
aam
imul
sub
mov
leave
mov
repz
dec
ins
ret
idiv
(bad)
clc
cmp
sub
rcr
fcomi
mov
push
jmp
inc
(bad)
cmp
in
retf
mov
adc
mov
loope
cmp
adc
xchg
cmp
pop
xchg
rcl
cmc
mov
in
ret
mov
ins
xlat
bound
data16
push
pop
cmp
aaa
cmp
mov
cmc
or
retf
dec
mov
(bad)
adc
(bad)
loop
mov
fidivr
in
pop
jmp
cdq
add
add
fwait
arpl
pop
mov
xor
xor
jbe
mov
in
(bad)
lock
fild
push
lea
push
mov
jge
hlt
adc
clc
xchg
in
mov
mov
out
push
mov
repz
mov
mov
cmp
inc
test
call
adc
rol
and
enter
mov
fwait
add
outs
(bad)
pop
arpl
call
push
in
sar
mov
sub
push
fild
inc
fs
and
adc
inc
movs
sbb
pop
jb
pop
popa
pop
push
mov
mov
out
pop
es
(bad)
je
or
and
or
mov
cdq
dec
adc
pop
mov
stos
cmp
adc
adc
and
mov
cmp
pop
pop
push
fidivr
(bad)
out
(bad)
push
retf
mov
out
or
adc
jo
push
sub
jno
repz
aad
sbb
xor
push
(bad)
aam
or
jl
jge
loop
push
aad
cmp
and
xor
sub
fisttp
sub
push
cdq
(bad)
cmp
pop
jns
ins
cmp
call
fwait
(bad)
mov
sub
pop
out
test
mov
lahf
ins
cli
aad
sub
scas
xor
scas
pop
cli
test
movs
and
mov
js
dec
fisub
aas
mov
call
push
cmps
mov
jae
out
mov
test
(bad)
test
jno
dec
xchg
jl
sbb
fistp
test
popa
jmp
rcl
fst
lahf
imul
adc
mov
add
retf
dec
sti
mov
clc
adc
lods
mov
lds
pop
xchg
sub
rcl
cmps
jp
(bad)
int
enter
sbb
(bad)
enter
rcr
retf
pop
xchg
jne
adc
fcmovne
cli
rcl
ret
lods
das
xchg
xor
mov
fidivr
push
lods
add
cmp
fwait
jmp
mov
repz
sti
(bad)
jge
ret
cld
xchg
sbb
aas
in
aad
or
je
cmps
and
(bad)
or
sbb
dec
and
popf
cld
mul
jmp
sbb
xor
xor
inc
scas
ds
push
sub
addr16
aas
sbb
adc
and
jl
outs
pop
test
xchg
mov
mov
mov
sbb
outs
loop
rcl
sub
hlt
push
pop
shl
js
std
dec
sub
or
jmp
stos
and
enter
inc
call
cmp
and
mov
icebp
or
pop
cs
fbld
fldcw
cmp
rcl
retf
mov
xchg
dec
sahf
dec
and
sbb
inc
arpl
cwde
pusha
lock
add
cwde
adc
add
cmp
ret
add
inc
in
push
xor
ins
fnstsw
mov
jmp
mov
jmp
loopne
pop
push
pop
les
and
movs
shr
dec
fmul
loop
(bad)
pop
iret
cmc
xor
mov
and
movs
retf
into
xor
add
mov
mov
or
popa
loope
push
xor
xlat
xchg
mov
mov
stos
jge
lahf
mov
rep
pop
add
bound
jbe
or
adc
mov
xor
cmc
enter
(bad)
(bad)
rcr
pop
sub
aam
add
ins
cld
mov
nop
retf
out
add
push
nop
nop
cmp
mov
xchg
mov
rcr
das
jmp
xor
mov
xchg
dec
jmp
mov
push
xchg
cmp
outs
push
sti
push
popf
lods
into
dec
in
jae
lahf
jbe
or
add
mov
dec
aas
push
test
add
add
cmps
mov
xor
test
ret
pop
jp
push
add
sar
push
ss
sub
add
push
inc
sar
inc
repnz
jg
sbb
das
outs
cwde
not
cwde
fnstenv
stos
sti
sbb
ffreep
add
pop
inc
jae
pop
les
popa
push
sub
mov
(bad)
out
push
aaa
mov
sub
es
scas
or
and
or
ret
or
push
and
mov
fld
fs
jb
cwde
inc
mov
push
repz
push
out
mov
int3
jecxz
inc
lods
xchg
sbb
std
xor
mov
jo
aam
inc
xor
cmps
inc
out
or
es
cmp
xchg
pop
pop
xor
sub
jae
gs
mov
test
sahf
stos
test
loopne
fbld
xor
xor
imul
push
repnz
cli
xchg
pop
and
lea
int
ins
daa
cs
adc
jmp
shl
sbb
into
mov
cmps
mov
xchg
fwait
push
push
inc
mov
inc
mov
and
clc
pop
ror
inc
std
jnp
cmps
inc
adc
mov
xchg
lods
mov
and
js
fidiv
ss
or
fstp
jae
mov
inc
ja
arpl
xor
jae
push
mov
test
jge
push
jle
sbb
ins
jbe
fisub
fst
call
imul
ret
or
gs
je
xchg
out
adc
pop
inc
mov
adc
or
ds
imul
jl
xor
mov
sar
icebp
iret
(bad)
mov
mov
adc
sub
in
shr
cmps
sti
fld
add
xchg
pop
dec
push
sub
mov
stc
std
mov
mov
rol
mov
icebp
imul
loope
arpl
test
jno
push
je
add
mov
sti
imul
and
pop
sub
sub
sahf
test
xor
and
ja
(bad)
and
aam
mov
repz
popa
push
sahf
jg
xor
sub
out
aas
(bad)
sbb
xchg
icebp
mul
xchg
mov
lock
and
adc
mov
mov
cmp
repnz
int
clc
mov
outs
icebp
loope
or
fstp
xor
or
xchg
fcomp
aam
mov
sbb
xchg
arpl
jecxz
dec
mov
jne
or
or
ja
dec
(bad)
in
and
mov
xchg
imul
addr16
mov
inc
xchg
jo
(bad)
(bad)
ffree
iret
ficomp
push
bound
lods
push
outs
popf
mov
(bad)
sub
mov
out
iret
(bad)
in
or
bound
rcl
sub
cmp
inc
or
dec
mov
leave
pop
fisubr
fcomp
cmp
retf
icebp
jg
xlat
scas
sbb
stos
and
adc
push
pop
sub
ret
xchg
retf
ret
push
loope
scas
fisub
xlat
and
pop
inc
out
xchg
mov
ret
ja
adc
pusha
xlat
fldlg2
test
fdivr
push
cmp
push
and
shl
clc
push
mov
jle
fcom
xchg
(bad)
test
std
sbb
popf
cli
outs
lock
add
mov
scas
dec
push
xor
out
dec
(bad)
jl
pop
ss
cmp
fdiv
in
adc
pop
shl
imul
push
jb
mov
sahf
push
movs
les
push
popf
and
xchg
jb
adc
call
frstor
lea
enter
adc
mov
jge
push
cmp
push
or
shr
sub
jnp
xlat
pop
xlat
xchg
daa
push
jmp
xor
shl
ss
xor
jmp
cmp
mov
(bad)
in
pop
mov
fwait
lahf
xlat
adc
push
cmc
pop
jb
arpl
sub
ret
dec
and
pop
mov
dec
pop
mov
scas
add
mov
inc
mov
out
mov
enterw
sahf
jle
and
dec
lock
push
call
fcomp
test
add
jge
push
stos
mov
fist
add
jg
sbb
cmps
outs
movs
jne
popf
sub
dec
mov
sub
adc
sahf
or
fisub
loope
sub
sub
mov
mov
xchg
xor
mov
hlt
add
mov
(bad)
mov
cmc
ret
mov
les
test
sub
add
scas
ins
std
ins
add
out
frstor
cmp
sub
push
retf
adc
jmp
enter
int
xchg
mov
sub
xchg
jb
mul
and
inc
loop
pop
movs
mov
in
popa
into
cmp
fmul
or
aaa
pushf
in
shl
daa
mov
adc
mov
arpl
sti
cs
or
bound
mov
xchg
push
adc
and
jmp
in
into
aam
add
cmp
jns
sbb
das
mov
xchg
xor
push
xor
cmp
jno
sbb
jp
pushf
mov
call
loopne
mov
xchg
test
psrad
xchg
pop
js
inc
xor
pop
not
jge
xor
jmp
push
repz
mov
push
and
stc
pop
sbb
mov
enter
rcr
jne
jle
dec
pop
pop
in
movs
out
mov
dec
in
push
cmps
lods
ss
xchg
pushf
mov
rcl
adc
stos
pop
pop
mov
scas
jmp
lahf
pop
lahf
and
outs
call
les
and
out
mov
imul
sar
mov
fbstp
inc
sub
adc
xor
adc
test
dec
mov
imul
and
mov
push
stos
fs
jbe
ror
imul
sbb
jae
out
mov
adc
mov
lahf
sbb
hlt
fnsave
adc
mov
inc
mov
and
bound
in
adc
jns
imul
adc
fstp
mov
gs
cli
mov
push
xchg
xor
imul
dec
sbb
jno
aaa
stos
test
out
ins
add
mov
ins
adc
jecxz
inc
pushf
add
push
inc
ins
cld
mov
mov
retf
push
jne
and
inc
outs
xor
xchg
clc
jns
stos
add
scas
not
cmps
(bad)
aam
jnp
test
pop
pop
jl
push
ins
mov
das
rol
movs
inc
test
or
inc
pop
push
sub
sbb
cmp
adc
push
push
mov
pusha
fsub
jg
sbb
dec
jmp
sbb
mov
sbb
dec
sub
cmp
cmp
aad
inc
ror
adc
jmp
sahf
push
xchg
xor
fimul
jno
mov
jecxz
sbb
sahf
inc
mov
mov
psrlw
lock
sbb
lock
pop
or
loope
push
inc
xchg
ret
mov
repz
dec
xchg
mov
mov
mov
out
dec
sar
ds
mov
cmp
popa
clc
add
sti
sub
fld
add
or
dec
es
mov
adc
mov
sub
pop
loop
sbb
cli
mov
outs
xchg
cwde
xor
inc
outs
popa
lods
add
adc
push
pop
cs
lahf
jno
xchg
mov
mov
jecxz
add
mov
and
cld
push
mov
jge
mov
std
imul
pop
aam
add
stos
stc
xor
mov
jl
and
les
ret
daa
add
add
enter
or
(bad)
lock
jg
jmp
push
cmp
dec
ss
mov
xchg
sbb
push
inc
sbb
enter
lds
pushf
dec
jne
mov
cld
loopne
hlt
jne
dec
push
jl
push
addr16
mov
inc
mov
dec
push
pop
mov
movs
aaa
(bad)
push
hlt
or
in
dec
in
test
out
xchg
in
jecxz
pushf
lea
add
aaa
dec
ror
cmp
leave
sub
mov
and
je
ins
std
xchg
out
int3
leave
call
stc
dec
movs
push
xchg
sub
dec
call
mov
stc
xchg
mov
clc
and
jp
nop
mov
(bad)
nop
and
in
test
dec
sub
dec
(bad)
icebp
and
fldcw
mov
xor
dec
xchg
mov
and
ficom
inc
in
push
and
add
push
in
push
cmp
lock
dec
jmp
adc
enter
fisttp
nop
sbb
js
ds
sbb
fcmovbe
cs
cli
(bad)
sbb
out
into
(bad)
icebp
mov
fnsave
xchg
jns
out
jle
sbb
cmovo
sub
mov
(bad)
mov
jae
sbb
inc
imul
mov
popf
cs
movs
retf
loop
cwde
and
fst
jb
lahf
xchg
dec
xor
scas
push
xor
sub
sub
push
cmp
ret
or
cmps
mov
xchg
jno
xor
pop
mov
xchg
shr
add
lea
repz
fwait
mov
jmp
iret
sbb
xor
les
mov
push
es
out
icebp
push
aad
imul
mov
and
xchg
cmps
dec
adc
or
and
test
jnp
sahf
adc
mov
neg
inc
xchg
out
aas
mov
lea
mulps
cli
push
outs
mov
jle
or
in
push
loopne
aam
das
mov
pop
sbb
dec
in
(bad)
fbstp
icebp
add
fs
and
(bad)
inc
ror
sbb
aaa
ins
mov
jno
in
pop
and
jns
mov
cmps
cdq
inc
mov
pop
pushf
nop
pop
mov
leave
test
sub
lds
lds
jle
fcomp
aam
sub
pop
mov
or
pop
cli
push
xchg
inc
cmps
lods
mov
mov
ja
fldenv
shr
jne
lock
test
push
outs
sub
add
pop
and
fisubr
add
sti
mov
fcmovnb
jae
stc
dec
loope
push
mov
xor
out
xor
push
cmps
outs
inc
out
aas
iret
sti
sub
cmp
jo
mov
cli
pop
jbe
ins
pop
inc
inc
(bad)
cmps
out
inc
xchg
mov
repnz
mov
xor
ja
fs
cdq
cdq
ss
mov
(bad)
inc
mov
xlat
fs
dec
out
test
repnz
loop
pop
xchg
jp
cmp
sub
dec
push
adc
jne
pop
sbb
stos
mov
cs
pop
push
outs
test
loopne
jmp
les
nop
adc
push
(bad)
pop
dec
cld
pop
std
cld
push
imul
ss
mov
mov
ins
into
or
jne
movs
xchg
movs
cmp
or
arpl
lods
or
arpl
mov
mov
js
mov
jmp
popf
push
mov
out
jge
xchg
xor
mov
call
aad
loop
xor
(bad)
(bad)
push
clc
cs
xor
pop
lock
and
xchg
out
inc
add
mov
pop
fsub
shl
inc
push
mov
in
aas
(bad)
mov
jmp
pop
xor
sbb
inc
js
bswap
mov
fmul
add
iret
jp
cld
xor
or
or
xor
sti
fs
pop
test
pop
dec
mov
mov
out
mov
loope
sub
jne
mov
aaa
push
mov
adc
inc
sti
daa
ds
add
add
mov
push
mov
sti
stos
jo
ja
sar
xchg
mov
xchg
dec
mov
or
jg
(bad)
jecxz
mov
call
pop
and
inc
push
call
fistp
lock
cmp
out
xchg
stos
jle
dec
sti
inc
into
hlt
push
hlt
xchg
stos
pop
xor
xchg
push
enter
inc
and
ret
pop
adc
adc
(bad)
and
or
xchg
shl
dec
jb
cmc
jb
clc
mov
pusha
ret
or
aaa
ss
push
pop
mov
push
aad
shl
dec
mov
rcr
mov
and
mov
sub
mov
stc
pop
lods
lea
popa
jge
xchg
ja
int
mov
push
inc
pop
push
inc
and
mov
jnp
or
pop
outs
sub
inc
test
test
sbb
xor
xchg
lds
(bad)
dec
loopne
sub
xchg
sti
test
pop
aas
dec
push
inc
das
outs
xor
js
add
jmp
js
call
add
or
in
inc
je
popa
in
cmp
call
popf
dec
pop
sub
hlt
xor
addr16
popf
(bad)
dec
jo
stos
xor
or
rcl
call
inc
inc
xor
and
imul
cmp
sub
fisubr
movs
and
mov
and
sub
or
test
or
add
je
or
idiv
mov
fwait
or
cmp
inc
sbb
shr
inc
cmc
das
(bad)
int
or
(bad)
(bad)
dec
outs
aas
iret
push
or
lock
jo
or
fisub
mov
mov
fdiv
sub
jno
inc
jo
push
loop
in
mov
add
xor
cmp
push
and
xor
sub
cmp
call
aas
mov
pop
not
cdq
mov
cli
int3
push
mov
leave
mov
dec
shl
call
sub
aad
repz
(bad)
jle
push
xor
mov
ja
sbb
push
test
fwait
inc
pop
dec
sub
sbb
cmp
xchg
sbb
pop
sbb
jp
mov
dec
dec
pop
sub
inc
inc
ss
repnz
push
mov
pushf
inc
stos
jmp
imul
mov
inc
pop
scas
mov
repz
ret
push
mov
imul
xor
cmp
retf
(bad)
dec
fbstp
xor
add
pushf
int
sbb
pop
jb
jcxz
push
out
ret
adc
enter
cmc
in
jg
mov
je
movs
mov
data16
adc
xor
and
push
push
mov
popf
sub
mov
sahf
(bad)
fidiv
int
test
mov
retf
mov
jmp
xchg
lods
mov
inc
and
(bad)
cmp
call
mov
sub
fldenv
fcmovbe
pop
lea
cmps
mov
ficomp
out
jmp
sub
lock
xor
lahf
xor
pop
(bad)
pop
jg
jo
scas
xlat
fld
les
push
xchg
sub
xor
push
xor
inc
ret
or
call
loop
mov
jge
sbb
inc
jmp
dec
ror
jle
into
fld
stos
mov
sbb
pop
adc
das
xchg
ja
pop
cmc
xor
neg
daa
dec
jmp
fucomp
cmp
movs
int
xor
push
and
cmps
jae
xchg
jnp
sub
(bad)
mov
stos
(bad)
or
xor
pop
inc
mov
mov
pop
retf
dec
and
std
lods
cmp
loope
mov
pop
push
data16
es
pushf
cmp
xor
and
retf
scas
rcr
repnz
mov
cli
nop
lds
push
shr
jl
call
mov
push
aad
sub
int3
pop
shr
xor
add
(bad)
xor
mov
loopne
pop
cld
cmp
mov
cli
(bad)
lock
les
push
pop
add
jno
cmp
repz
push
das
push
xchg
lds
int
div
sbb
jne
adc
jmp
or
add
stos
xlat
es
fidivr
inc
rdpmc
mov
push
xor
enter
arpl
clc
push
xchg
sar
inc
add
inc
xchg
mov
sub
daa
xchg
test
pop
jmp
pop
xchg
push
mov
push
(bad)
repz
in
fsubr
mov
aad
xchg
test
mul
sub
call
mov
dec
test
mov
sbb
arpl
pop
inc
xor
in
and
sbb
mov
out
loopne
int3
mov
pop
jmp
in
sbb
fcmovnbe
fbstp
and
add
or
gs
cmp
or
cmp
(bad)
(bad)
aaa
or
addr16
jne
stc
xlat
mov
dec
arpl
out
push
cmp
pop
mov
dec
xchg
scas
retf
inc
sbb
xor
fs
arpl
aad
imul
addr16
xor
push
xor
mul
rcl
pop
jb
test
stos
fld
add
lock
add
call
loop
cmp
adc
xor
int
mov
cmp
jb
je
nop
cmp
and
imul
mov
mov
sub
adc
imul
repz
rol
ss
idiv
push
mov
add
xchg
in
hlt
mov
adc
ret
dec
pop
cmp
mov
xor
ins
mov
push
sbb
sbb
gs
cmps
pop
cmp
mov
and
xor
sbb
or
mov
mov
out
push
and
mov
je
xchg
sub
in
stc
(bad)
popf
dec
stos
jmp
jmp
mov
mov
arpl
sub
cwde
cdq
push
out
dec
sar
scas
or
je
loop
in
lahf
jns
(bad)
push
jnp
pop
pusha
leave
aas
push
lods
mov
popf
bound
inc
mov
outs
outs
rol
imul
pop
jecxz
ja
jne
pop
or
xor
aam
cwde
cmc
mov
push
cld
aad
push
(bad)
mov
(bad)
fldcw
add
mov
(bad)
mov
inc
je
mov
mov
mov
xchg
stos
xchg
aam
in
pop
mov
pop
enter
or
call
add
fldenv
loope
jmp
cli
push
sub
push
dec
pushf
mov
sbb
mov
push
mov
cs
xchg
xor
sub
test
xchg
push
sbb
add
xchg
ret
(bad)
in
jnp
ficom
popa
sub
xor
cli
xor
daa
jb
mov
inc
in
ins
popf
dec
jns
xor
xor
add
and
push
xchg
mov
ret
push
ja
xor
clc
in
sbb
loope
hlt
lods
jle
int
add
cmp
sahf
dec
mov
mov
cmp
inc
test
jne
inc
out
adc
mov
fisttp
mov
stc
xchg
out
add
sar
inc
rol
push
mov
inc
mov
ss
pushf
into
mov
jns
pop
xchg
scas
in
loope
cmps
sahf
pop
jne
punpcklwd
jmp
ds
jne
inc
into
pop
add
push
cli
push
sbb
dec
scas
ins
lods
and
pop
cmps
je
push
mov
inc
adc
xlat
daa
je
inc
sub
jle
push
jo
int3
ins
arpl
push
int3
dec
les
push
ja
pop
push
pop
aam
outs
jb
repnz
loop
xchg
movs
pop
dec
inc
xchg
xlat
fwait
xchg
and
push
aam
(bad)
cli
dec
and
retf
fnstcw
sbb
je
les
inc
mov
pop
xchg
out
ror
cmps
int
jp
or
in
adc
push
lds
sti
lods
fmulp
test
sbb
add
push
call
cwde
xchg
(bad)
aaa
mov
ficom
pop
and
dec
pushf
cdq
je
ss
loope
dec
clts
call
push
mov
loope
mov
ins
in
add
sub
pop
pop
jnp
test
cmp
add
push
inc
pushf
shl
jge
loop
push
jns
sbb
fadd
mov
mov
ss
dec
mov
dec
push
push
out
xchg
lea
mov
mov
xlat
rcr
mov
std
or
xchg
dec
test
push
add
or
push
int3
fbld
fs
jmp
jnp
out
idiv
inc
add
in
mov
and
or
and
es
inc
stc
ret
scas
xor
pop
shr
addr16
cmps
sbb
and
mov
add
or
inc
add
xchg
clc
jnp
mov
dec
push
ins
lock
push
xor
jmp
dec
mov
inc
xor
jnp
sti
xor
mov
in
addr16
outs
mov
rol
stos
push
test
fidiv
mov
mov
aaa
inc
lahf
pop
dec
out
ins
scas
mov
loopne
sub
cmp
add
add
stc
dec
cld
xchg
pusha
dec
adc
imul
cmp
sbb
sub
adc
inc
retf
fcomip
and
lock
and
dec
pop
fs
dec
and
cdq
mov
push
mov
mov
pop
sbb
add
sbb
aaa
movs
dec
frstor
push
dec
push
arpl
lds
pushf
mov
lods
out
dec
xchg
scas
and
adc
adc
es
gs
inc
mov
shl
and
pop
mov
fild
push
jne
mov
rol
pushf
jns
mov
clc
ins
mov
shl
mov
(bad)
adc
cmp
or
lea
mov
lock
test
dec
bound
xlat
mov
xchg
push
out
ins
mov
sbb
in
cmps
cmp
xchg
mov
xor
lahf
pop
js
call
in
pushf
pop
fwait
xchg
inc
shl
pop
jb
sbb
or
push
xchg
sbb
adc
mov
(bad)
enter
fisttp
ins
int3
int3
(bad)
ret
push
xchg
es
call
outs
jp
ins
mov
jmp
add
fbld
ja
mov
dec
inc
mov
loop
dec
pop
jo
mov
sbb
cmp
cmp
leave
aas
mov
int
(bad)
pop
ss
inc
test
call
mov
xor
pop
sbb
icebp
jae
dec
and
xlat
ds
ffreep
jo
sbb
pop
out
or
js
inc
adc
adc
inc
sbb
int
mov
mov
mov
mov
or
loope
mov
adc
test
push
rcl
pop
add
mov
xlat
jl
and
jno
xor
sbb
(bad)
adc
pop
pop
or
jnp
jbe
pushf
jp
nop
stos
hlt
pop
adc
mov
push
(bad)
(bad)
bound
sub
cdq
call
sub
jnp
push
sti
mov
fadd
pop
cmc
fisub
inc
aas
in
mov
add
pop
push
pop
dec
xor
mov
call
dec
jne
(bad)
push
jecxz
pop
scas
xor
xchg
test
sub
xchg
cmps
iret
mov
call
xchg
mov
stc
in
loopne
add
ror
inc
xchg
sbb
retf
xor
cmps
push
mov
pusha
lock
and
punpckhwd
or
mov
cld
sub
mov
imul
mov
xchg
push
rcr
into
test
or
ret
adc
cmp
retf
bound
jmp
stos
or
dec
in
adc
jecxz
xor
pop
sub
dec
imul
daa
push
mov
cmp
and
getsec
aad
xchg
dec
out
fild
loop
movs
jb
and
int3
and
in
xor
pmuludq
inc
jb
stos
scas
fidivr
rol
in
push
jmp
jecxz
test
test
call
xlat
(bad)
mov
mov
ins
movs
mov
in
fisttp
(bad)
cli
mov
out
jo
imul
xchg
add
cmp
dec
lea
push
xor
in
fisubr
(bad)
hlt
(bad)
test
lods
test
(bad)
leave
mov
(bad)
cmp
(bad)
and
mov
adc
nop
jmp
or
repz
div
inc
(bad)
movs
adc
pop
fs
mov
push
mov
mov
xchg
push
or
dec
test
push
dec
xor
mov
cmp
and
mov
jno
pop
push
daa
sub
outs
xchg
push
fidivr
xchg
inc
fadd
push
cmp
jp
call
push
jp
cmp
loopne
shl
mov
nop
imul
es
dec
mov
sub
push
mov
cs
les
inc
in
imul
adc
aam
das
mov
inc
out
rol
ret
or
(bad)
mov
pop
or
adc
dec
dec
push
loope
mov
sbb
(bad)
aaa
clc
add
mov
aaa
jmpw
stos
mov
mov
retf
adc
test
mov
(bad)
mov
popa
xchg
fs
mov
cmps
xchg
(bad)
sub
mov
jecxz
xor
pop
pop
xchg
stc
dec
dec
mov
in
loope
cmp
fidiv
sbb
jbe
sub
daa
xchg
jae
push
gs
mov
aad
cmp
mov
jne
iret
(bad)
retf
push
pusha
xor
mov
jmp
push
jl
fidiv
mov
jb
inc
or
push
push
inc
cmp
aaa
push
lea
push
mov
cmps
loopne
inc
mov
mov
jmp
or
pop
outs
(bad)
in
leave
mov
xchg
push
dec
fstp
sub
pop
loopne
in
adc
cld
lds
ficomp
test
sub
add
sbb
cmp
cdq
lock
stos
adc
fistp
mov
pop
mov
iret
dec
push
aam
shl
cmp
sbb
dec
xchg
adc
adc
or
ret
in
dec
in
aad
out
pop
inc
fisttp
(bad)
(bad)
out
inc
add
cmp
js
bound
add
out
or
sbb
push
or
mov
mov
arpl
jns
out
or
(bad)
adc
sbb
cmc
mov
dec
cmp
mov
repnz
xchg
fild
leave
cmps
push
mov
sbb
dec
repz
inc
fsubrp
lea
sbb
or
xor
dec
push
add
int3
push
xor
mov
sbb
lock
jae
sub
icebp
out
pop
adc
jmp
cmp
mov
cmp
mov
dec
mov
lea
mov
and
inc
pushf
into
stos
in
push
xchg
les
sub
xchg
pop
mov
xchg
ret
ja
repnz
and
and
inc
adc
or
gs
pop
popf
xchg
cmp
or
(bad)
gs
add
fcom
loop
popa
fdivp
aaa
les
mov
sub
xor
shl
xchg
add
jae
xchg
jg
dec
xchg
fimul
test
add
retf
mov
or
sar
pop
xchg
ds
(bad)
lock
call
shr
inc
cmp
scas
adc
out
adc
nop
repnz
pop
sub
mov
arpl
sub
loope
sahf
sub
lods
pop
or
repnz
sbb
iret
cmps
jp
xor
fnstenv
sbb
jmp
jle
add
(bad)
jle
xchg
movs
sbb
stos
scas
push
mov
inc
sub
pop
push
cld
sub
bnd
inc
mov
sub
mov
sub
jb
and
mov
pop
xchg
fcomp
rcl
or
icebp
clc
xchg
xchg
xchg
jge
mov
outs
into
out
push
out
aas
dec
fst
inc
fild
aas
inc
dec
iret
sbb
in
mov
out
cmp
repz
pusha
in
jno
mov
std
es
push
add
iret
mov
sub
jg
test
mov
mov
dec
aam
adc
repnz
jge
cmp
dec
add
out
ds
jg
sub
into
jg
mov
ja
jno
shl
daa
out
dec
add
pop
iret
aas
icebp
pop
iret
cld
cmps
fbstp
test
stos
or
loopne
and
dec
sub
(bad)
jg
dec
scas
iret
pop
pop
lods
add
jle
hlt
jno
jns
mov
retf
loope
cli
stc
(bad)
lods
push
adc
cs
mov
stos
aas
pop
ins
cmp
popf
es
pop
sti
push
scas
push
add
or
in
js
neg
js
test
pop
into
pushf
imul
scas
mov
xchg
mov
jbe
ror
jmp
dec
dec
sar
cdq
pop
pop
mov
test
mov
fdiv
lds
repz
push
mov
jp
lock
and
push
inc
mov
mov
inc
call
mov
call
into
jo
movs
popa
sti
push
pusha
sub
mov
std
add
gs
fs
mov
ds
idiv
cmp
fwait
inc
lahf
call
shl
mov
imul
jb
sbb
dec
mov
call
pusha
adc
dec
mov
inc
dec
jecxz
mov
repnz
fidivr
inc
mov
pushf
or
lds
(bad)
pushf
and
in
cmc
out
retf
lock
xchg
std
add
pop
or
arpl
mov
and
pop
addr16
jg
nop
sub
dec
or
adc
jmp
mov
nop
cmp
jne
stc
and
(bad)
cmp
push
les
inc
popa
sbb
mov
bound
loop
call
out
test
sub
inc
pop
sub
mov
scas
aas
call
rcr
sahf
ficom
pop
lea
pop
mul
les
cmp
popa
(bad)
and
mov
out
cwde
mov
hlt
hlt
adc
or
cmp
(bad)
cmp
inc
cmp
jle
call
sub
sub
repz
push
imul
nop
pop
(bad)
test
xchg
in
shr
pop
push
sub
pushf
cmp
sub
pop
mov
das
mov
in
mov
adc
pop
push
pop
xchg
neg
sub
mov
xor
idiv
sub
fadd
mov
inc
inc
cmp
or
enter
lock
in
(bad)
stc
mov
inc
mov
movs
into
cmp
sub
sub
adc
loop
clc
das
call
std
jmp
push
inc
xor
dec
mov
gs
iret
ss
or
nop
add
in
push
ds
aad
(bad)
test
fisubr
adc
sbb
test
lock
or
mov
push
mul
ss
jnp
leave
xchg
pop
ficom
fidivr
idiv
and
and
jge
es
dec
or
jp
js
scas
jo
out
add
push
addr16
xor
mov
mov
xrelease
inc
imul
cmc
scas
and
mov
scas
out
movs
mov
dec
js
inc
xchg
outs
mov
rol
inc
push
lahf
mov
cli
and
scas
push
gs
into
mov
sbb
sbb
cmp
push
pop
dec
sub
mov
jmp
das
mov
adc
add
ds
or
xchg
je
(bad)
pop
add
mov
push
mov
clc
lods
idiv
push
push
adc
jnp
cmps
dec
mov
iret
pop
dec
lahf
jmp
or
pop
jg
cdq
xchg
cmp
loopne
mov
scas
inc
mov
les
pop
or
or
test
add
xor
mov
in
dec
les
in
push
add
cmp
dec
rcr
stos
mov
sar
sub
out
push
fisub
xchg
ret
arpl
iret
mov
lea
inc
inc
shl
out
and
lds
ja
push
mov
sbb
clc
xor
shr
dec
ror
imul
adc
mov
in
jg
xchg
or
add
sahf
stc
repnz
dec
cmp
add
daa
jmp
cmp
cmp
dec
repnz
sbb
fisubr
mov
jne
push
push
push
lea
(bad)
pop
xor
pop
sti
popa
and
xchg
icebp
cwde
fbld
push
sar
iret
sbb
out
shl
xchg
mov
(bad)
jnp
mov
xchg
jmp
lods
xchg
mov
imul
sub
sub
rol
cmp
jl
pop
daa
out
xchg
test
outs
and
pop
inc
jae
pop
int
adc
std
cdq
mov
fdivr
gs
dec
int3
clc
push
in
sbb
push
xor
lahf
jae
retf
jnp
xchg
xlat
pop
inc
(bad)
fld
mov
adc
in
aaa
mov
xchg
and
inc
call
or
rcl
xchg
add
dec
dec
pushf
mov
mov
fadd
and
jo
xor
push
push
ins
mov
push
xchg
jbe
rcr
ins
xor
dec
(bad)
cwde
bound
mov
pop
add
sub
xchg
sahf
stc
lock
outs
cmc
enter
cmps
lds
and
jl
inc
jo
pop
mov
add
lds
in
or
add
cld
(bad)
test
and
fnstsw
test
mov
sbb
stos
sar
xor
scas
out
xchg
imul
fdivr
push
int
add
cld
int3
jne
arpl
dec
add
stos
fistp
out
jg
xchg
sub
push
inc
icebp
inc
ja
xor
jle
aaa
adc
sbb
mov
xchg
xchg
sti
scas
mov
push
push
add
push
add
mov
ror
stc
pop
jge
loope
dec
xor
inc
sub
mov
xor
cmps
mov
stos
jmp
imul
push
out
ins
xchg
jle
in
xlat
stos
ret
push
jo
arpl
mov
pushf
jns
inc
ds
or
cmp
dec
xor
or
ins
cmc
xor
dec
dec
(bad)
out
mov
sub
xor
xchg
pop
mov
mov
xor
pop
jnp
adc
mov
mov
or
mov
xlat
(bad)
pushf
sbb
addr16
fsubr
adc
jb
jno
sub
scas
mov
xor
lock
scas
das
inc
dec
sbb
sahf
add
push
and
ins
xor
mov
pop
mov
mov
cmps
sbb
lods
mov
adc
(bad)
and
mov
adc
jmp
push
xor
lahf
sbb
and
adc
fnstcw
lea
not
mov
or
retf
mov
rcl
addr16
xor
jge
push
in
adc
jmp
ret
jle
aaa
(bad)
in
pop
jne
pop
inc
mov
icebp
mov
sbb
jl
shl
outs
int
fsub
stos
mov
jmp
arpl
fwait
lods
sar
or
cmp
xor
dec
shr
xchg
popa
pop
ret
inc
icebp
push
inc
push
jnp
and
mov
sub
xor
call
cmp
inc
aam
and
(bad)
pushf
(bad)
or
cli
dec
ins
xor
cmp
movs
imul
lock
loope
fld
in
pop
cmp
sbb
jge
clc
stc
dec
jne
adc
add
(bad)
jne
aas
mul
call
cmps
add
jb
mov
inc
mov
mov
mov
cdq
dec
jecxz
push
mov
xchg
in
jo
sub
jmp
pop
pusha
hlt
push
imul
xchg
adc
or
sbb
mov
xchg
mov
lock
test
mov
xchg
mov
jg
push
mov
leave
(bad)
loopne
sub
adc
pop
push
out
mov
out
loopne
dec
daa
retf
ficomp
mov
inc
mov
iret
jnp
inc
std
hlt
sbb
enter
jle
jns
lock
fisubr
out
sub
cmp
xor
push
test
jmp
dec
adc
ror
sar
and
rol
out
cmc
jno
add
(bad)
fsubr
and
cmp
dec
in
les
cmc
ss
and
pop
jg
fsub
jmp
mov
inc
cmp
mov
pop
loop
sub
adc
lds
xor
add
cld
and
aas
push
pop
shl
pop
or
loopne
jge
cmp
mov
cmps
cli
xor
gs
(bad)
adc
pop
rol
xchg
cmp
outs
pop
xchg
(bad)
push
retf
imul
xor
pop
push
xchg
adc
mov
cs
call
imul
inc
fisubr
test
and
add
push
adc
mov
xchg
movs
sahf
nop
xchg
push
mov
sub
mov
jge
jo
adc
popf
jns
mov
sub
fwait
or
call
aam
and
sbb
pop
int
call
lahf
into
xchg
stos
stos
mov
push
(bad)
cdq
out
sub
sbb
(bad)
lahf
out
xor
xchg
or
ins
pop
push
jmp
sar
aam
aas
mov
xchg
fsub
das
push
sahf
xchg
add
imul
mov
dec
test
add
sti
push
cmp
call
sbb
leave
or
dec
imul
imul
pop
fcomp
fsubr
pop
gs
clc
in
stc
sbb
jl
or
dec
inc
pop
mov
icebp
lds
dec
jb
xor
or
es
leave
aas
add
xchg
xor
dec
cmps
in
dec
pop
mov
loop
and
xor
adc
rcl
mov
fstp
add
mov
hlt
rol
(bad)
arpl
pop
adc
(bad)
and
sbb
lea
int
adc
fcom
retf
out
pop
fisttp
jge
xor
add
and
mov
bound
sbb
inc
pop
pop
mov
jne
sub
inc
cdq
mov
mov
retf
(bad)
or
mov
push
test
mov
sbb
mov
mov
(bad)
jp
sbb
data16
sub
xchg
repnz
or
adc
inc
mov
add
mov
int
(bad)
pop
push
iret
mov
jnp
jbe
jnp
jg
add
daa
and
sbb
fimul
jg
sbb
cwde
push
pop
mov
mov
pushf
retf
xlat
in
mov
in
sub
dec
adc
dec
sub
or
pushf
mov
ficomp
or
or
call
fist
jnp
lock
test
das
cmp
(bad)
mov
call
sub
ret
cli
das
push
mov
xchg
jo
jmp
fdiv
jecxz
xchg
inc
jo
inc
mov
out
out
xchg
in
dec
inc
and
in
mov
pop
fs
mov
push
ins
lds
adc
jb
fwait
sbb
icebp
repz
xchg
and
sub
jmp
dec
push
fwait
sbb
neg
shr
sub
pop
shr
mov
popa
xchg
push
scas
(bad)
push
mov
or
xlat
nop
pop
add
fsubr
cld
dec
push
mov
and
leave
dec
mov
out
test
(bad)
cmp
add
mov
imul
dec
mov
or
mov
in
inc
sub
mov
xchg
sbb
mov
das
push
enter
sbb
loop
adc
pusha
loopne
int3
ficom
mov
lods
or
(bad)
cmp
out
hlt
push
scas
cld
xchg
into
pushf
xor
pop
test
mov
fs
(bad)
mov
mov
xchg
test
pop
loope
jnp
push
add
fs
(bad)
stos
or
jbe
mov
xor
and
add
jns
cmp
xchg
daa
frstor
mov
daa
fisub
mov
shr
mov
pop
test
nop
scas
pop
(bad)
movs
sbb
outs
xor
cmps
xchg
adc
sbb
movs
out
sub
and
cmps
sahf
movs
cld
push
adc
sti
fistp
sub
push
sub
pop
xor
sub
popa
repnz
outs
cmp
mov
mov
inc
lock
push
shl
jp
aaa
and
dec
jb
popa
les
cmp
pop
mov
inc
call
xchg
sbb
mov
mov
in
loope
adc
jle
cmp
in
popf
jo
push
(bad)
ds
mov
retf
xchg
xlat
ficom
shl
outs
jbe
out
and
jecxz
jno
(bad)
(bad)
sbb
ret
xchg
cwde
sub
in
popf
imul
ror
shl
jb
and
push
mov
shl
jl
lds
dec
frstor
fstp
cmps
std
inc
sbb
dec
push
(bad)
xchg
idiv
mov
ins
adc
(bad)
push
in
jne
int3
push
sub
mov
jbe
jg
test
(bad)
jmp
sbb
std
xchg
mov
cdq
test
sahf
push
push
(bad)
pop
xor
gs
xchg
mov
push
pop
sbb
ret
sbb
leave
mov
sti
xchg
push
test
jmp
xchg
adc
xor
ds
out
rcr
ficomp
lock
inc
mov
xor
jmp
stc
fiadd
icebp
jl
mov
add
addr16
test
cs
gs
sub
cwde
cmp
movs
xor
call
and
cmc
retf
push
push
push
adc
cmps
adc
sbb
sub
cmp
xchg
enter
sbb
fldenv
mov
sub
cdq
xor
push
mov
int3
xor
outs
out
sub
data16
mov
mov
pop
mov
int3
lock
push
sti
mov
stos
pop
mov
fwait
xor
inc
xchg
pop
xor
ins
in
int3
outs
xchg
xchg
(bad)
scas
fdiv
mov
cmp
lds
out
mov
xchg
pop
ja
ds
jns
into
push
movs
mov
fisub
cwde
adc
cmp
out
mov
xchg
jmp
call
cmp
mov
outs
push
pop
inc
jecxz
shr
adc
pop
test
dec
lods
pop
aas
mov
fld
adc
xchg
fldcw
pop
mov
inc
add
ss
enter
outs
sbb
xor
stos
loopne
(bad)
pop
ins
xchg
fisub
ret
gs
out
aas
js
ss
jle
inc
fsub
mov
add
das
jns
iret
loope
xchg
repnz
ret
popa
loope
xor
add
out
dec
test
(bad)
lock
lahf
mov
in
fistp
adc
xchg
sub
fdiv
imul
mov
pop
cmc
add
mov
outs
(bad)
fimul
dec
call
stos
out
fxch
jo
arpl
sar
arpl
push
(bad)
fmul
repnz
add
pop
aas
cmc
push
fld
in
cmp
idiv
lds
xchg
sub
and
fmul
lock
adc
das
jmp
mov
test
ds
jle
and
jne
aaa
(bad)
call
outs
aas
or
and
stos
fsubr
adc
push
pop
dec
jae
xor
cld
xor
ja
push
cmps
inc
mov
cmp
sar
mov
or
xor
popf
test
(bad)
mov
xchg
bound
push
jae
test
push
xor
into
dec
xor
dec
add
add
pop
mov
fild
xchg
pusha
push
cmp
and
ror
mov
test
sub
out
mov
int3
(bad)
xchg
jnp
lock
push
int3
aas
xor
sub
jmp
cwde
scas
pop
sbb
mov
loopne
jmp
pop
pop
fwait
mov
adc
mov
test
mov
mov
jg
cmps
shr
cmp
inc
in
fsub
fldenv
dec
nop
fadd
aad
sub
sub
add
bound
int3
jge
lea
fs
xor
shr
mov
aam
in
out
cmc
int
mov
pop
out
inc
rcl
jg
mov
mov
pop
cmps
imul
std
xchg
jecxz
jns
sbb
mov
adc
or
cmc
fcmovne
sti
inc
xchg
cmp
pop
push
in
jl
sbb
imul
or
mov
sbb
lock
pop
xchg
fstp
out
mov
mov
addr16
xor
adc
hlt
ret
jge
clc
inc
mov
xchg
mov
lods
shl
pop
add
dec
cwde
mov
xor
add
rol
pop
sub
mov
pusha
cmc
pop
cmp
add
out
sbb
lods
inc
push
cmc
dec
out
xor
add
cmp
push
dec
in
fcmove
dec
inc
add
xchg
std
inc
sbb
sub
inc
sbb
mov
xchg
or
and
pop
test
mov
jecxz
mov
idiv
jmp
mov
dec
movs
cmps
dec
jnp
repnz
inc
das
mov
ds
mov
mov
push
addr16
cli
rcl
out
cmp
or
hlt
or
fdivr
and
and
sub
pop
xchg
aad
or
mov
push
inc
jnp
daa
mov
xchg
loop
pop
prefetchwt1
fmul
loop
add
mov
stos
xchg
aas
int
pop
lds
(bad)
and
rcl
adc
lahf
sub
add
jno
(bad)
jns
rcl
dec
lea
js
dec
imul
add
push
sub
retf
ret
sbb
cmp
sub
fimul
sbb
xchg
daa
cmp
iret
add
cmp
std
(bad)
(bad)
pop
ss
in
mov
jmp
int
sbb
mov
push
(bad)
call
pop
and
test
bound
xchg
jle
sbb
jb
xchg
xor
push
out
test
sbb
xchg
xchg
xor
stos
je
mov
mov
call
mov
xor
ja
cmp
or
imul
sub
cmp
icebp
mov
xor
lahf
in
retf
push
gs
pusha
enter
repnz
push
sbb
pop
loop
jp
mov
les
or
cmp
and
cmps
retf
xor
shl
or
xchg
loope
call
adc
ins
js
push
imul
loopne
shr
cmp
cmp
dec
das
pushf
xor
mov
inc
(bad)
pop
out
jg
lods
and
add
fsubr
xchg
retf
mov
dec
out
inc
js
cmp
jmp
lahf
inc
pop
add
(bad)
sub
div
stos
addr16
js
mov
mov
(bad)
out
adc
imul
movs
ins
xor
sti
or
sub
lahf
pusha
and
std
jp
outs
stc
sub
dec
pop
or
sti
nop
push
fidivr
test
inc
lock
or
fist
aas
retf
les
and
and
jns
dec
fdivr
jl
mov
xor
pop
sahf
aas
out
or
mov
fld
out
adc
push
pusha
fimul
test
jmp
in
jp
or
adc
dec
clc
out
or
cmp
out
outs
cmps
mov
sbb
pop
loopne
xor
cwde
fbld
loop
fsubr
sub
push
add
dec
movs
pop
adc
push
adc
jmp
inc
outs
(bad)
iret
cmp
mov
push
mov
push
adc
mov
xchg
iret
mov
(bad)
int3
cmps
cdq
test
loope
adc
inc
mov
mov
scas
inc
(bad)
sahf
or
mov
add
dec
loope
es
xchg
cdq
xchg
sub
mov
jmp
add
push
mov
inc
mov
push
std
imul
aaa
cld
pop
pop
push
jmp
mov
push
retf
adc
rcl
lods
pop
adc
cwde
daa
mov
sub
lea
out
pushf
ret
mov
pop
leave
arpl
in
in
(bad)
pushf
aaa
fsubp
rcr
in
in
xor
cs
pop
xchg
and
adc
mov
or
xlat
adc
inc
aas
adc
add
xor
sub
or
imul
dec
jbe
push
cmp
mov
and
imul
hlt
fwait
sub
and
sbb
mov
mov
fistp
jo
popf
jne
repnz
test
ins
xor
(bad)
rcl
data16
push
je
in
sub
jecxz
cwde
in
mov
mov
sub
mov
ins
fwait
in
push
jp
aas
jle
add
gs
cmp
data16
sub
mov
pop
enter
add
jbe
push
jmp
mov
pop
mov
mov
add
jmp
ins
or
adc
(bad)
pop
xor
pop
fild
cmps
mov
sar
leave
adc
jge
jbe
and
scas
nop
arpl
xchg
mov
push
or
dec
jns
jo
sbb
jae
add
and
ss
in
retf
neg
xchg
into
mov
test
cmp
out
loope
cmc
adc
sbb
adc
pop
es
gs
pop
or
push
pop
or
or
sti
jnp
mov
fmul
sub
stos
(bad)
cmp
out
xor
inc
int
cwde
leave
cmps
mov
ja
push
xchg
idiv
sbb
je
push
push
rol
hlt
ret
pop
cmp
aas
mov
aad
jb
fisub
jno
inc
push
push
cmp
mov
jge
dec
fs
je
mov
cmp
adc
sbb
jne
mov
ds
xchg
dec
(bad)
(bad)
jns
sub
loop
es
add
aas
xor
cmp
stos
xchg
sbb
aaa
dec
ret
dec
in
sub
sub
mov
gs
iret
or
sar
fiadd
mov
rcl
dec
sub
mov
pop
and
pop
cld
ret
pop
inc
stos
add
jg
mov
xor
imul
movs
mov
mov
(bad)
mov
ds
loopne
ja
scas
dec
inc
inc
mov
gs
lods
adc
and
lods
push
xor
or
push
leave
mov
std
pop
push
inc
pop
fdivr
xor
scas
ror
movs
cmp
xor
aas
jge
xchg
pushf
in
mov
into
adc
test
out
scas
or
cld
jno
xchg
cmps
xchg
push
clc
sub
jo
jno
sbb
std
fist
pop
and
cmps
push
sti
push
pop
xchg
cdq
out
and
pop
push
sbb
mov
xlat
scas
nop
push
add
mov
popa
mov
xor
fsub
sbb
pop
or
pusha
push
ret
(bad)
jge
dec
push
neg
mov
in
mov
xchg
and
or
and
or
dec
fcomp
cmps
or
not
cmp
jg
mov
arpl
and
aad
cmps
fldenv
jge
mov
dec
xor
dec
add
add
sub
test
(bad)
adc
jmp
and
pop
push
sbb
cmps
cmp
mov
mov
sahf
aas
pop
xchg
gs
out
mov
clc
inc
mov
mov
cmc
dec
movs
in
mov
inc
rcl
xlat
adc
pslld
mov
jb
inc
ds
mov
test
(bad)
cli
into
(bad)
(bad)
sub
add
pop
cmc
sahf
cdq
ret
fadd
adc
mov
shr
daa
or
mov
sub
pop
sti
pop
test
pop
jge
add
add
shr
jmp
adc
shr
in
iret
repz
ja
cmp
icebp
push
ror
push
es
aam
adc
sub
sti
jle
(bad)
je
fsub
movs
(bad)
mov
jo
icebp
mov
and
mov
push
in
push
rcl
cdq
cwde
std
xor
fxch
and
pop
sbb
jo
jg
cwde
inc
or
mov
cmps
in
xchg
aam
pop
std
jl
xchg
add
cdq
jmp
dec
cmps
cs
xchg
mov
cmp
jns
and
inc
mov
hlt
retf
sbb
inc
in
pop
mov
mov
mov
mov
xor
xchg
mov
cmp
test
ds
ror
out
dec
arpl
cdq
add
outs
shl
jle
ins
pop
xchg
cmps
inc
out
outs
dec
push
pop
jb
jno
into
loopne
or
sub
lods
add
xor
inc
fwait
aad
dec
jle
call
xchg
push
arpl
push
mov
out
mov
sbb
loopne
sbb
adc
push
sub
inc
inc
shl
sar
or
enter
or
hlt
mov
stos
shl
mov
shr
adc
(bad)
fwait
jb
pop
xor
jne
adc
jns
ss
cdq
xor
outs
xor
mov
or
jnp
jae
cmp
pop
cwde
jmp
sbb
sbb
or
or
xchg
in
call
mov
push
adc
adc
out
dec
pop
and
in
fcomi
push
sub
adc
mov
mov
icebp
out
cmp
pop
faddp
gs
imul
or
cmp
mov
retf
enter
pop
stc
ret
test
fisttp
adc
mov
lock
inc
test
xor
bswap
push
jb
mov
add
leave
arpl
ins
pop
into
rcr
cdq
les
pop
lock
int3
mov
jecxz
inc
mov
sbb
imul
ss
mov
adc
push
fs
aas
xor
sti
pop
out
lahf
inc
or
push
sbb
mov
add
outs
div
sub
sbb
retf
retf
dec
out
ins
cwde
dec
or
xor
fsub
js
dec
jns
cmp
mov
lods
dec
or
or
xchg
xor
xor
fadd
cmp
and
pop
iret
xor
sbb
sub
sahf
daa
movs
int3
jg
js
je
ret
cmp
mov
in
cmp
or
jbe
in
push
addr16
in
fcmove
pop
shr
and
jae
arpl
dec
xor
push
mov
xor
xchg
cmp
fsub
mov
outs
push
(bad)
(bad)
call
iret
inc
(bad)
jp
cdq
icebp
std
loope
cmp
add
ins
das
pop
mov
add
xor
dec
mov
and
push
inc
xor
pushf
mov
hlt
adc
(bad)
mov
jl
mov
emms
adc
scas
push
pop
mov
iret
dec
gs
xchg
lods
in
inc
test
shl
or
bound
xor
movs
dec
(bad)
mov
(bad)
mov
xor
sub
sub
sub
(bad)
jbe
push
jp
jnp
pop
inc
or
shr
push
aaa
xor
jbe
adc
imul
dec
outs
cmp
push
pop
adc
adc
sub
xor
dec
xor
test
xchg
cwde
cmps
jns
fld
xchg
dec
and
dec
inc
jmp
pop
xchg
inc
push
call
stos
add
pop
adc
mov
stc
cwde
outs
movs
hlt
jne
and
jae
mov
adc
dec
sub
sar
jle
test
or
adc
mov
push
pop
outs
or
ror
mov
(bad)
pop
add
add
int
(bad)
fwait
inc
(bad)
dec
mov
hlt
push
clc
jle
jg
mov
(bad)
pop
jg
out
mov
xlat
jl
data16
retf
xlat
enter
or
inc
out
push
imul
repnz
dec
jne
xchg
inc
mov
scas
(bad)
nop
jo
inc
clc
ss
sbb
mov
(bad)
mov
or
add
push
inc
ja
jle
into
into
jbe
or
adc
hlt
xor
lds
hlt
rol
pushf
(bad)
xor
jg
sub
gs
cmps
add
xor
jne
xchg
cmp
retf
sbb
packuswb
or
mov
lods
mov
jmp
fistp
inc
sub
cmc
bound
push
call
mov
ret
push
add
out
mov
lods
jmp
xor
cs
mov
pop
aam
aaa
add
dec
gs
inc
cmc
add
jns
xor
outs
sbb
test
aas
shr
es
or
out
mov
mov
or
adc
(bad)
xchg
jge
(bad)
out
jle
hlt
mov
icebp
and
ficomp
bound
xchg
hlt
jnp
add
rol
jp
jo
or
rcl
aad
xlat
fadd
adc
imul
mov
std
in
pushf
call
mov
sbb
xor
and
(bad)
scas
aad
add
xchg
adc
dec
push
sub
cmc
pusha
neg
pop
int
ss
outs
sub
out
pop
sub
pushf
jecxz
push
shl
xor
cmp
cmp
clc
mov
sub
fs
pop
xor
idiv
dec
sub
icebp
sahf
push
stos
sbb
mov
lock
xchg
cld
shl
add
push
push
test
div
lods
aam
mov
xchg
ja
retf
xlat
inc
jecxz
adc
push
(bad)
nop
arpl
out
pop
adc
jo
fisttp
popa
aad
jbe
dec
rcr
xor
xlat
mov
and
inc
retf
lahf
fild
in
mov
nop
shl
xor
out
xchg
mov
sub
mov
int3
adc
push
dec
add
sbb
pop
shr
das
push
jns
adc
push
push
pop
stos
ins
repnz
leave
loop
cmp
retf
retf
ins
dec
sbb
push
lods
lahf
lea
(bad)
in
je
and
cmp
data16
and
add
in
(bad)
jl
mov
outs
je
jo
outs
daa
cs
mov
push
mov
inc
cmp
jl
inc
enter
mov
and
int
aaa
adc
das
add
ins
xor
cmp
jns
pop
pop
mov
push
sub
pop
sahf
clc
or
sbb
loop
push
push
pushf
push
sub
addr16
add
iret
lea
pop
popa
sbb
mov
imul
xchg
lods
pop
jnp
imul
shl
cmp
dec
lock
iret
sti
xchg
fstp
xor
hlt
stos
add
std
push
mov
rcr
aad
jnp
pop
inc
mov
nop
jbe
test
test
in
inc
sub
mov
rcr
arpl
xchg
scas
rcl
pop
adc
(bad)
stos
rcl
push
aad
dec
(bad)
shr
xchg
sub
cmp
enter
pop
pop
nop
xor
push
(bad)
movs
shr
rcl
cli
adc
xchg
mov
and
packssdw
sbb
push
xchg
add
jge
fild
and
jo
rol
cs
cmp
sbb
cwde
xchg
mov
jbe
pop
loope
and
mov
mov
lods
sub
jnp
sub
push
scas
xchg
jbe
pop
das
inc
addr16
inc
push
sub
sti
call
scas
and
les
stos
or
std
mov
lods
jno
pop
hlt
adc
sti
int
inc
jg
mov
iret
imul
adc
add
inc
sub
add
inc
push
adc
sub
push
jbe
adc
ficom
xchg
pop
push
je
xchg
dec
shr
lea
(bad)
cmps
dec
jmp
mul
movs
imul
mov
or
inc
add
xchg
shl
stos
fdiv
cmps
sbb
popf
mov
fstp
xchg
jno
cs
(bad)
iret
cmp
retf
nop
sti
xchg
cmp
pop
jbe
push
mov
shl
(bad)
mov
daa
xchg
sub
inc
jmp
add
(bad)
jb
and
dec
es
adc
in
xor
cld
dec
add
stc
rcr
pop
pop
xchg
in
inc
pop
mov
ja
cmp
jg
pop
inc
add
out
mov
es
std
fcmove
jl
outs
xor
jne
mov
mov
push
int
adc
pop
sbb
imul
hlt
loop
add
test
mov
push
sar
loopne
jnp
and
daa
cmps
mov
xchg
mov
xchg
stos
repnz
xor
les
test
lea
ret
cmp
(bad)
push
iret
jnp
xor
inc
push
out
and
lock
lea
push
jge
ds
mov
jnp
lea
cmps
aam
pop
inc
jmp
std
movs
stc
les
leave
das
mov
sti
and
scas
hlt
inc
(bad)
daa
dec
movs
mov
xor
pop
int3
in
pop
movs
and
in
mov
and
cmps
jp
mov
mov
mov
jb
ja
pop
mov
ror
pop
mov
outs
xchg
sbb
jmp
mov
xchg
xchg
lahf
or
mov
dec
(bad)
cld
dec
jmp
jmp
or
call
jne
jle
mov
xor
pop
xchg
fcomp
sub
inc
fisttp
pusha
outs
stos
repz
xchg
test
mov
pop
f2xm1
push
cmp
test
push
repz
in
dec
cmps
mov
fsubr
push
data16
popa
mov
or
loop
dec
shl
inc
iret
fadd
and
ins
in
sub
inc
stc
mov
retf
dec
and
cmp
xchg
mov
enter
pop
iret
scas
ins
jg
sahf
loopne
mov
inc
or
jno
and
popf
lods
dec
mov
add
cmp
cmp
aam
jnp
out
dec
add
pop
mov
xlat
sub
cmc
stos
push
cmps
add
add
rol
mov
mov
pop
ja
mov
cmp
test
imul
pop
arpl
jo
mov
(bad)
pop
out
(bad)
stc
repz
fwait
rcl
loope
mov
pop
cs
movs
shl
or
xchg
out
mov
in
jge
mov
jne
or
push
cmps
cmp
mov
js
mov
mov
or
scas
dec
std
adc
int
or
mov
cmovge
push
push
pop
lods
ror
ss
test
fisttp
and
rcr
or
in
add
xor
pmaddwd
out
gs
pop
sti
jb
test
mov
aam
loop
add
dec
xchg
and
or
jecxz
std
sbb
(bad)
pop
sub
(bad)
les
jecxz
cli
dec
cmp
test
inc
ins
xor
ficomp
fsub
icebp
das
sbb
dec
ins
loopne
movs
dec
repz
xchg
mov
nop
ret
xor
push
dec
cmp
or
sub
mov
cmp
cdq
imul
dec
cs
mov
fcom
inc
mov
gs
dec
jne
mov
jg
scas
xchg
out
xchg
sbb
mov
sbb
sar
inc
icebp
cwde
enter
aaa
mov
fs
scas
out
adc
scas
(bad)
xor
dec
icebp
or
dec
je
movs
push
repz
cmp
out
jnp
add
mov
js
scas
pop
and
sub
dec
mov
push
cmp
btc
enter
mov
mov
imul
mov
outs
adc
push
jno
cmp
cmp
out
int3
adc
push
add
sub
adc
and
sbb
cld
pop
xchg
adc
jecxz
jnp
push
push
(bad)
scas
push
mov
sub
int
gs
cmps
ret
cmp
mov
or
rcl
dec
ds
cmp
xlat
xor
outs
or
mov
mov
jo
(bad)
pop
dec
push
dec
pusha
pop
xchg
jl
mov
mov
mov
fnstenv
sub
sub
mov
sub
rsqrtps
ret
imul
stos
inc
xchg
rol
ins
test
xor
std
sbb
test
ja
jb
(bad)
mov
out
fsubr
shl
or
push
sbb
imul
je
popa
cmp
pusha
mov
je
dec
call
ret
and
or
fdiv
pop
pushf
inc
int3
cmps
xchg
inc
pop
sbb
cmps
sub
es
add
inc
sar
inc
idiv
into
pop
inc
inc
jl
loopne
push
jnp
mov
xor
aaa
mov
pop
xor
ins
push
cmp
sti
dec
push
mov
rol
jne
lods
adc
mov
and
push
cmp
adc
movs
xor
jg
neg
setae
cmp
nop
sbb
jbe
retf
jns
jg
cmps
jmp
cmps
cdq
dec
int3
dec
inc
fimul
push
adc
movs
mov
les
pop
stos
fcomp
push
aad
cmp
das
ins
mov
leave
xlat
and
add
jb
cwde
bound
mov
jecxz
test
mov
jns
adc
ss
jns
shr
inc
sti
(bad)
rol
xchg
xor
jg
and
cmps
xor
ss
icebp
fcomp
nop
dec
cs
(bad)
fisttp
(bad)
push
sar
cld
cmps
retf
mov
imul
ins
or
dec
mov
jp
cmp
hlt
sub
xchg
fs
pop
sub
jo
in
(bad)
mov
stos
gs
cmp
add
rcl
sbb
mov
loop
mov
pop
inc
sbb
adc
retf
arpl
and
lock
cmp
inc
xchg
mov
jmp
mov
push
inc
xor
int3
pusha
mov
test
iret
ja
xlat
in
sub
cmp
mov
retf
imul
jge
add
imul
ss
add
iret
ficomp
loopne
daa
fimul
sbb
cs
xor
inc
add
test
icebp
lock
xchg
pop
xchg
mov
div
sar
mov
sub
pop
xchg
mov
lahf
inc
mov
je
dec
mov
repnz
out
add
pop
pop
push
push
xchg
nop
sub
test
pop
xor
adc
hlt
mov
pop
out
or
jp
sub
or
(bad)
call
aas
jmp
js
mov
push
out
jg
sahf
sbb
pop
dec
inc
popf
mov
(bad)
test
or
lods
mov
fiadd
or
fsub
imul
push
aad
pusha
jbe
(bad)
sub
movs
retf
jmp
inc
or
pop
outs
mov
inc
mov
out
out
sub
and
mov
jl
inc
cdq
ins
mov
mov
mov
pop
and
loopne
enter
pop
fld
sbb
retf
and
dec
inc
mov
stos
cmc
jle
lds
xchg
mov
xor
enter
into
ss
dec
subps
into
in
icebp
cmova
and
cmp
bound
aaa
dec
dec
hlt
shl
lods
cwde
sbb
or
clc
sub
jo
or
jmp
add
sbb
push
xor
mov
inc
add
outs
sar
ror
jo
int3
rcl
xor
xor
icebp
(bad)
icebp
jmp
add
scas
sub
bound
dec
xor
sub
add
mov
jne
cmp
cmp
cmp
in
stos
push
mov
enter
popa
mov
ins
sbb
rcl
(bad)
data16
ret
aaa
rcl
mov
rcr
push
stos
xchg
hlt
inc
dec
ins
ins
dec
adc
out
pop
(bad)
movs
imul
das
push
mov
imul
inc
xor
es
mov
stos
int3
jmp
mov
ficom
iret
or
int
pop
sbb
mov
imul
hlt
loopne
std
jno
outs
jecxz
call
lods
movs
inc
push
popa
cmp
xchg
add
pushf
xor
jne
mov
push
pop
enter
xchg
stos
and
loope
pop
adc
retf
lock
div
jmp
lods
add
ins
xor
ja
mov
lods
push
sbb
xchg
push
jmp
mov
fld
mov
xchg
mov
stc
adc
pushf
pop
mov
xor
int
jmp
repz
test
cmp
mov
adc
mov
sub
push
dec
jb
add
add
push
int3
jns
xor
inc
inc
cmp
sub
sub
pop
dec
imul
in
adc
adc
push
lds
jne
inc
(bad)
pop
or
fstp
scas
fwait
xchg
fwait
or
in
dec
jo
jb
push
add
movs
jp
or
shl
fistp
stos
les
mov
push
sti
movs
cmp
fnstcw
inc
jle
dec
outs
mov
ficomp
sub
mov
pop
in
xchg
(bad)
gs
mov
sub
xor
(bad)
jecxz
les
addr16
xor
inc
in
rol
xor
fdivp
bound
xchg
push
lods
mov
hlt
cs
jle
ficomp
ret
pop
inc
cmp
lods
arpl
jbe
gs
bound
rcr
jg
mov
or
fistp
stc
push
mov
xchg
je
out
(bad)
dec
sbb
popa
push
fild
or
data16
dec
(bad)
int3
adc
loopne
outs
scas
aas
adc
dec
nop
dec
(bad)
jecxz
fs
lea
mov
mov
cmps
cmps
(bad)
sub
jo
inc
rcl
sbb
jo
sbb
sbb
pop
mov
fld
xor
xor
pushf
dec
std
les
inc
imul
loope
cmps
xchg
cmp
pop
dec
clc
hlt
and
sbb
and
mov
test
sub
jmp
jecxz
adc
sbb
and
jmp
mov
mov
outs
adc
in
xchg
lds
mov
int3
and
dec
popa
jecxz
out
int
dec
dec
loopne
out
dec
jge
movs
adc
clc
xchg
(bad)
mov
sub
xor
mov
aad
in
mov
(bad)
push
push
jbe
xlat
sbb
xchg
enter
rcr
lods
xchg
pop
ds
loope
mov
lds
add
mov
sbb
mov
xor
inc
fldenv
shl
and
adc
mov
jg
mov
pop
(bad)
sbb
and
cdq
pushf
mul
pop
(bad)
(bad)
xor
leave
push
in
xchg
mov
mov
lea
(bad)
adc
mov
add
imul
mov
jb
push
sub
xchg
inc
pushf
pop
popa
(bad)
repz
inc
mov
call
xor
jge
xchg
push
and
mov
mov
jnp
xlat
adc
jbe
xor
adc
sbb
cmp
mov
sbb
pop
in
mov
cmc
cmp
cmc
in
or
popf
aas
cs
ret
or
inc
lds
mov
movs
(bad)
data16
add
push
xor
jge
xor
xchg
int
mov
shl
push
mov
pop
(bad)
lods
cmps
and
(bad)
shr
or
ja
lea
cmp
fwait
nop
inc
repz
les
lahf
pop
push
inc
movs
fisubr
test
enter
add
cmps
sub
imul
loop
outs
add
not
cmp
adc
int3
push
cmp
sub
fimul
xor
ins
or
dec
popa
jnp
mov
fmul
inc
int
mov
xor
push
popf
mov
xchg
add
nop
inc
pusha
mov
mov
and
mov
or
mov
xchg
mov
jne
in
enter
je
jo
jb
test
inc
xchg
fcomp
imul
xor
pusha
inc
push
sub
pop
mov
sbb
xor
push
pop
aaa
imul
add
dec
push
add
mov
add
imul
cld
sbb
arpl
sbb
lock
test
stos
in
jns
jp
sub
mov
push
push
adc
int
fcmovnb
in
int
or
int3
cmp
sbb
ja
dec
outs
mov
lods
mov
fisttp
dec
loope
aaa
fbld
inc
icebp
adc
cmps
fst
ret
mov
adc
pop
inc
(bad)
imul
jge
pop
les
add
push
arpl
aam
cmp
xchg
mov
and
into
jnp
pusha
test
sub
pop
add
(bad)
fimul
sar
out
inc
jge
daa
dec
or
es
stos
cwde
stos
cmp
or
(bad)
mov
dec
in
int3
cmps
(bad)
jmp
mov
call
adc
mov
sub
pusha
ret
add
mov
and
adc
mov
aam
pop
push
(bad)
sbb
mov
div
add
xor
push
aam
pop
popa
add
dec
out
mov
inc
cmp
je
push
sub
out
xor
int
adc
test
xchg
or
jbe
ja
inc
js
jecxz
stos
jle
push
mov
sub
ja
int3
pop
adc
mov
jl
in
call
xor
mov
adc
aaa
imul
loope
cmp
pop
loop
dec
sub
jbe
ds
xchg
es
cli
retf
add
add
mov
jbe
mov
fs
and
pop
(bad)
cdq
xchg
mov
imul
or
lds
aaa
pop
test
or
in
int
adc
fisub
popf
dec
je
or
push
in
mul
xor
(bad)
retf
xor
imul
jmp
push
icebp
cmp
xor
icebp
addr16
xor
pop
je
cdq
mov
fcomip
psllw
in
mov
jl
ret
rol
mov
fnstsw
call
sub
xchg
inc
or
add
scas
repz
js
std
sbb
inc
sub
(bad)
call
in
movs
in
ins
call
jo
stos
ret
call
xchg
xchg
sahf
or
stc
and
jg
adc
mul
inc
enter
and
into
pop
and
add
xor
sub
mov
sbb
jb
xchg
dec
add
data16
out
push
sti
es
popf
xor
mov
adc
outs
sbb
daa
mov
mov
fdiv
mov
xchg
push
lea
sbb
mov
call
ins
clc
fadd
jmp
retf
add
test
pop
push
inc
stos
int3
cwde
pop
movs
adc
lods
dec
adc
cs
aam
je
or
mov
popf
and
lahf
cmp
shr
xchg
cmp
dec
ins
xchg
out
sar
mov
sub
push
not
aam
retf
or
call
clc
test
test
dec
mov
cmp
aam
rcr
xor
rol
jo
add
enter
mov
push
jmp
test
mov
mov
xchg
test
cmp
into
push
(bad)
je
iret
or
xchg
inc
out
addr16
add
and
cld
sbb
xchg
add
rcr
mul
lods
iret
inc
xchg
push
sbb
dec
in
push
and
call
and
jo
inc
call
fld
inc
icebp
mov
(bad)
in
sub
inc
dec
mov
lods
call
mov
fild
pop
fwait
sbb
cmps
std
push
(bad)
inc
test
retf
cmp
push
mov
lock
push
sbb
jmp
xor
mov
mov
(bad)
das
daa
aad
jmp
aad
and
mov
push
push
mov
stos
xchg
arpl
fstp
movs
adc
jnp
dec
ds
test
pushf
mov
stos
add
xchg
rcl
cdq
sub
and
(bad)
dec
sub
clc
pop
xchg
sbb
and
sub
aam
cs
ds
test
call
div
pop
mov
push
xchg
outs
cmp
adc
dec
stos
add
xor
fcomi
cmp
and
aad
mov
cwde
sbb
inc
sub
inc
ins
int3
inc
cld
jle
mov
fiadd
jbe
inc
dec
das
bnd
ss
add
pushf
sbb
sub
jge
sub
cs
into
jns
repnz
cmp
jg
jno
test
fucomp
dec
dec
cmc
push
pop
sbb
pop
loop
ret
push
rcr
cmp
mov
inc
xor
mov
or
push
pushw
ins
adc
push
scas
mov
push
push
dec
bound
jmp
push
(bad)
xchg
and
inc
sub
mov
pop
pop
adc
lea
cmp
pop
dec
xchg
mov
mov
add
sbb
push
push
dec
fwait
aad
(bad)
sbb
jmp
(bad)
clc
mov
stos
push
add
add
mov
or
inc
xor
es
sbb
in
scas
aad
mov
push
aad
jmp
sbb
sbb
shl
loopne
in
adc
iret
push
cmp
cs
jmp
and
xchg
inc
test
fnsave
lahf
nop
lock
xchg
cmp
jnp
add
into
or
ret
ja
sub
pushf
ret
outs
adc
inc
pop
aad
mov
shr
(bad)
cld
std
movs
loopne
lock
leave
pop
imul
sar
add
sbb
sub
xchg
fistp
test
out
icebp
loop
call
sbb
je
popf
sbb
retf
outs
hlt
sbb
addr16
lahf
int
push
jae
mov
dec
icebp
aad
mov
mov
in
test
(bad)
pop
cmc
jnp
lods
test
mov
inc
ret
out
ror
adc
repnz
or
and
jno
rcl
(bad)
call
push
repnz
or
outs
adc
xchg
xchg
jge
xchg
mov
outs
icebp
mov
xchg
or
in
les
xchg
push
loopne
stos
fcom
cmp
jb
pushf
xor
(bad)
push
popf
loope
repnz
xor
xor
sbb
xor
sub
in
cwde
cmps
pop
xchg
add
cmp
aas
scas
sti
out
adc
out
fbstp
lahf
in
test
inc
popa
and
mov
pop
cmp
cmp
outs
daa
mov
or
inc
lock
pop
int3
mov
mov
jg
cmc
and
sub
sbb
test
inc
dec
pop
xchg
aad
pop
pusha
fisttp
mov
mov
xchg
jge
mov
and
ds
retf
pusha
sub
and
js
or
test
mov
dec
inc
out
sbb
dec
icebp
cli
loope
cwde
add
(bad)
fidiv
fcom
data16
inc
aas
aaa
push
xor
mov
xchg
cli
jg
loope
int3
or
mov
mov
mov
or
mov
mov
add
stc
mov
rcr
into
loop
push
test
xchg
retf
cmps
or
xor
(bad)
loop
ins
xor
jmp
adc
xchg
test
ss
xchg
cli
sbb
adc
or
pop
inc
and
in
sbb
cmc
faddp
xchg
fld
movsx
retf
add
or
(bad)
shl
add
addr16
push
shr
cmp
jle
lods
mov
xor
add
int3
call
dec
xor
ss
and
ret
or
jecxz
add
xor
sti
sbb
fimul
mov
(bad)
in
jge
xchg
push
or
pop
es
fistp
sbb
enter
inc
clc
js
inc
stos
sub
xlat
mov
pop
call
sub
jg
or
sub
inc
sub
push
push
leave
into
inc
sahf
jae
mov
xchg
jo
cmps
outs
or
and
mov
dec
push
out
shl
adc
shl
aas
aam
mov
ins
jge
leave
mov
retf
jp
adc
sub
jne
jne
cmovno
pop
inc
retf
xchg
mov
xchg
cmp
push
shl
dec
cmp
sbb
push
cld
(bad)
fistp
dec
xchg
out
inc
test
test
(bad)
scas
std
mov
sub
dec
jnp
pusha
iret
xchg
retf
cmps
test
ja
inc
loope
scas
ds
sub
cmovge
mov
add
dec
sbb
pop
mov
nop
push
ja
fs
in
pop
mov
xor
sar
dec
loopne
(bad)
push
inc
or
xchg
int
push
or
cwde
inc
fs
lods
jg
mov
mov
loope
push
pop
cld
int
inc
jb
push
pop
dec
pushf
mov
out
int
adc
pop
sahf
push
(bad)
and
je
mov
(bad)
js
xchg
add
jbe
pop
(bad)
pop
in
push
call
xor
loope
clc
icebp
sbb
xor
add
sti
inc
nop
xchg
jl
aam
loopne
xchg
daa
mov
cmp
clc
pop
mov
aad
arpl
js
fidiv
push
imul
sbb
out
adc
xchg
pop
loope
sub
push
loope
test
shl
je
data16
add
sti
ja
cwde
inc
mov
js
js
ds
mov
lahf
sbb
sbb
dec
jae
push
in
inc
mov
hlt
ror
push
in
fild
loop
xchg
jl
loope
add
nop
out
mov
sbb
(bad)
dec
adc
movs
pop
or
sti
movs
sbb
rcl
mov
dec
int3
pop
push
icebp
scas
cmp
arpl
sub
push
lods
adc
and
stos
ds
pop
lods
in
in
push
stc
or
jno
jno
jecxz
push
mov
mov
mov
pop
mov
es
pop
mov
rol
stc
xchg
or
lahf
sti
jle
lea
pop
loope
xchg
cmp
sub
and
xchg
inc
fbstp
loop
add
pop
ss
jge
lods
or
ja
out
ins
jbe
arpl
movs
mov
cs
mov
sub
push
mov
in
out
xor
xchg
pop
mov
adc
pop
add
mov
sahf
adc
pop
lea
dec
sub
daa
lods
mov
adc
push
call
stos
mov
retf
push
mov
push
add
out
repnz
retf
mov
cmp
movs
ss
movs
ds
stos
loope
xor
sti
sar
jns
mov
lds
mov
mov
and
push
cmp
and
pop
add
adc
lods
sar
imul
loopne
mov
jle
xchg
imul
xchg
adc
adc
pop
mov
xchg
cmp
adc
sbb
and
mov
aaa
shl
xor
mov
fcomip
mov
or
inc
adc
mov
(bad)
adc
xchg
push
shr
dec
gs
adc
pop
lgs
jne
or
cli
adc
lahf
and
xchg
popf
push
and
ret
xor
adc
stos
je
ins
push
test
inc
cmp
ret
mov
xor
cmp
mov
cmps
frstor
(bad)
xchg
loope
xchg
cmp
icebp
and
push
add
adc
test
arpl
es
xchg
xchg
push
mov
mov
leave
mov
xlat
xchg
sub
out
inc
shl
sub
dec
arpl
or
into
ins
dec
xchg
add
mov
mov
jnp
loopne
inc
bound
ss
mov
cmp
out
xchg
call
ret
add
in
cld
jbe
mov
ja
jl
adc
popa
hlt
pusha
popa
xchg
and
push
add
ror
enter
mov
jo
dec
inc
inc
lea
dec
mov
div
pop
push
js
dec
fwait
pop
fld
rcl
or
lods
sub
repnz
push
int3
test
and
pop
pop
js
sbb
or
adc
es
xchg
push
and
daa
push
cmp
xor
mov
popa
shl
lea
cmp
jno
ret
retf
mov
adc
std
leave
xchg
lods
js
les
mov
in
aas
cmc
scas
cmp
out
fs
and
xchg
fild
fwait
or
ins
cmp
add
jb
push
sub
shl
mov
and
call
movs
pushf
stos
sbb
in
xor
jne
and
mov
jb
add
cmp
mov
icebp
repz
shr
add
stc
adc
mov
inc
push
lods
xchg
shufps
imul
dec
mov
pop
ret
and
jo
lock
xchg
xor
xchg
outs
cmps
mov
jg
out
sti
arpl
test
pop
loopne
xor
sbb
push
xlat
leave
jmp
push
cmp
ret
pop
or
ja
lods
push
sub
sub
arpl
pushf
push
je
icebp
add
(bad)
cmc
ja
bound
jo
add
jp
outs
xor
mov
and
xchg
xor
sub
xor
mov
(bad)
xchg
dec
or
lea
lods
mov
pop
jnp
jmp
repnz
cdq
gs
push
call
in
jnp
loope
imul
cmps
xchg
bswap
inc
out
mov
adc
inc
pop
aad
sti
or
imul
and
sub
icebp
das
mov
adc
dec
sbb
gs
cdq
je
fwait
inc
jl
aam
dec
push
outs
popa
mov
sbb
mov
and
loop
mov
xor
or
push
sbb
xor
(bad)
cmp
aad
(bad)
out
rcr
cli
pop
shl
in
adc
mov
idiv
ins
push
or
adc
test
movs
xchg
(bad)
rcl
adc
mul
push
push
inc
jle
mov
add
ds
popa
sub
cli
push
mov
jle
fcom
xor
cs
fidiv
push
repz
sub
pop
mov
mov
add
addr16
cwde
dec
mov
push
inc
mov
xor
sub
push
lea
jbe
jg
sbb
xchg
mov
jb
int
sbb
(bad)
push
dec
jbe
xchg
xor
jns
push
scas
lods
xchg
inc
scas
lock
repnz
xor
xchg
es
ss
and
fnstenv
mov
jnp
cmp
pop
stos
sub
cmp
ja
cmp
aas
js
(bad)
inc
mov
fidivr
xor
mov
sbb
jl
les
idiv
and
test
xchg
lea
(bad)
sub
aaa
(bad)
inc
push
popf
mov
mov
shl
inc
xor
int3
adc
xchg
add
mov
cmc
cli
(bad)
fnstsw
add
ds
fmulp
das
jnp
lahf
pop
jnp
cmp
dec
test
ficomp
es
push
(bad)
popa
sbb
pop
inc
int
lods
push
mov
iret
scas
adc
(bad)
xchg
dec
dec
mov
sbb
mov
ds
inc
push
inc
pop
test
inc
out
add
push
les
bound
mov
mov
push
imul
inc
aam
aas
popa
(bad)
mov
int
adc
stc
cwde
fbstp
ret
cmp
add
jo
scas
cmps
inc
fld
mov
icebp
mov
dec
jno
jne
fimul
clc
dec
ins
jb
pushf
add
inc
jno
push
mov
aaa
lock
or
jae
xchg
mov
push
jns
outs
mov
out
push
loopne
mov
repnz
sahf
and
rol
lods
rcr
rcr
ret
int
popf
mov
jle
(bad)
push
mov
push
es
daa
cmps
sub
out
jmp
lock
pop
push
jg
stc
adc
jge
cmps
inc
inc
push
adc
mov
inc
scas
sahf
hlt
(bad)
jnp
mov
(bad)
lds
cmp
jnp
sub
shr
jecxz
cmps
sbb
sub
sbb
frstor
jmp
imul
push
popa
retf
mov
add
imul
cmp
push
dec
mov
sbb
(bad)
mov
icebp
push
fisttp
or
cs
or
mov
adc
(bad)
call
enter
mov
(bad)
lea
or
test
sbb
ret
jb
jno
cdq
cld
mov
mov
dec
sub
jge
cmp
or
rcr
cmp
fnstenv
js
stos
xchg
jl
in
cli
ret
(bad)
les
ror
mov
inc
cli
mov
fadd
lea
jb
add
in
xlat
hlt
jno
add
or
pinsrw
xor
mov
sar
push
(bad)
jbe
aad
jmp
jne
ror
cmp
push
jbe
retf
fild
mov
sub
movs
xor
mov
sbb
inc
retf
xchg
imul
and
sub
lock
push
movs
add
rcl
pop
and
stos
mov
jg
mov
jg
ret
rol
mov
test
aas
push
inc
inc
mov
test
in
loopne
nop
fldenv
mov
pop
inc
movs
outs
mov
mov
das
pusha
dec
test
(bad)
pop
mov
push
(bad)
lahf
push
fdivr
test
pop
sbb
push
fisttp
js
jbe
dec
enter
pushf
not
iret
mov
jle
fisubr
popf
cmps
cmp
rol
push
loope
xor
mov
int3
mov
push
je
pop
adc
jecxz
fsub
cdq
movs
mov
xchg
in
or
or
jmp
repnz
add
inc
push
xchg
aad
cld
ins
data16
fistp
mov
iret
or
mov
push
jmp
je
xor
sbb
inc
xor
mov
into
sub
adc
nop
mov
mov
int
add
mov
mov
arpl
repnz
fs
xchg
lahf
out
fcom
inc
xlat
lds
psrld
pop
movs
jnp
mov
mov
xor
in
in
cs
mov
dec
push
jl
(bad)
leave
push
push
pop
je
sbb
shrd
sbb
clc
dec
xchg
es
icebp
xchg
push
sub
out
mov
(bad)
add
adc
loopne
jae
mov
xor
test
xchg
push
sub
xchg
test
inc
jb
(bad)
jg
xor
sub
aas
mov
mov
popf
test
retf
out
imul
repz
std
mov
imul
mov
int3
repz
cmp
mov
jo
clc
mov
cmp
not
jns
mov
mov
cmp
enter
in
and
mov
dec
shl
shl
pusha
dec
pop
dec
ins
adc
pop
dec
xchg
pop
out
and
adc
fidiv
sar
add
or
dec
out
pop
inc
jns
data16
adc
sub
adc
ja
retf
shl
pop
mov
out
cld
ret
jge
and
dec
pop
xor
inc
outs
mov
retf
lock
jo
repz
xchg
arpl
push
test
cli
adc
mov
push
neg
mov
(bad)
xchg
test
or
and
mov
push
ds
sub
cmc
repz
cwde
jecxz
sbb
xor
mov
movs
scas
xchg
das
mov
sbb
mov
addr16
mov
mov
cmp
rol
dec
imul
and
cli
into
pop
ret
js
dec
adc
inc
outs
dec
push
jmp
test
jecxz
add
sbb
mov
into
sar
fild
xchg
cs
xor
or
fwait
mov
lods
xchg
mov
push
loope
jno
cmp
inc
sub
mov
jecxz
jle
popf
stos
sbb
cmps
push
addr16
sub
shl
fs
dec
pushf
int
push
sar
test
cmp
dec
sub
cmp
jl
xor
fbld
pop
mov
pushf
mov
inc
movs
add
ins
je
add
sub
sahf
inc
mov
lea
cmps
pop
push
sbb
mul
and
cmp
jge
cmp
call
inc
adc
call
pop
sahf
push
jp
add
fisubr
dec
sar
mov
cmp
repnz
(bad)
adc
sti
pop
retf
ror
repnz
jmp
(bad)
or
outs
aas
std
xchg
jg
rcr
mov
arpl
sub
jl
adc
es
aad
jmp
fcomp
jo
movs
retf
iret
push
in
call
xor
xlat
push
jge
cwde
in
ja
cdq
xor
inc
ja
sar
sub
movs
lods
stos
cmc
add
or
fiadd
mov
mov
rcr
cmp
xlat
inc
mul
outs
ret
lods
iret
xor
int
repz
sbb
inc
(bad)
aam
and
dec
mov
es
cmps
std
arpl
dec
cmp
jno
in
bound
jns
push
arpl
in
and
xchg
stos
mov
rol
mov
push
inc
fdivr
loope
loopne
js
call
bound
push
mov
jle
or
cmp
mov
sub
xchg
repz
(bad)
adc
ins
add
dec
es
mov
xchg
das
call
int3
add
(bad)
mov
lods
mov
jmp
push
in
pop
adc
xchg
(bad)
test
pusha
mov
sbb
out
mov
dec
ins
mov
adc
aad
push
pop
xlat
pop
inc
jmp
dec
cmp
mov
mov
adc
mov
les
xchg
pushf
shl
pushf
mov
push
retf
sub
and
or
mov
cmp
xchg
dec
sbb
push
nop
mov
ret
fisttp
push
addr16
cmp
in
jmp
shl
(bad)
movs
adc
scas
sub
enter
push
pop
mov
iret
sub
and
rcl
popf
add
mov
scas
mov
or
je
jb
cmp
push
pop
fist
fs
lea
sar
mov
clc
or
mov
arpl
leave
sub
ror
loopne
aas
mov
call
jmp
lea
fwait
or
xor
sub
cmp
mov
inc
xor
stc
popf
add
xor
loop
stc
movs
pushf
pop
imul
jl
and
loopne
xor
retf
movs
aaa
mov
(bad)
stc
mov
and
xchg
stc
push
mov
and
neg
enterw
adc
jmp
imul
dec
jno
dec
sub
xchg
and
mov
pop
repnz
rol
jmp
add
push
push
in
inc
popf
cli
inc
test
shr
mov
sub
arpl
sbb
loopne
iret
fisttp
sbb
mov
in
daa
and
lock
sub
je
lods
mov
inc
mov
pop
jne
out
or
cmp
cmp
inc
movs
and
mov
(bad)
lock
inc
jge
jg
inc
adc
mov
dec
push
cmc
mov
inc
mov
jmp
cwde
xor
mov
enter
sub
cwde
adc
xlat
aad
sahf
mov
pop
inc
sahf
loop
adc
outs
jmp
mov
mov
jmp
stos
mov
mov
sub
(bad)
shl
retf
popa
mov
(bad)
nop
aas
or
fidivr
call
outs
dec
dec
push
loope
xchg
push
xlat
pop
les
cmp
jae
int3
mov
mul
xor
mov
int
imul
test
cmc
stc
xchg
sub
adc
icebp
xchg
mov
dec
outs
pop
repz
aad
or
xchg
mov
outs
fcmovbe
adc
ja
inc
ud1
inc
repz
sbb
jno
mov
xchg
sbb
jp
sahf
jp
popf
jle
inc
das
or
(bad)
pop
adc
jne
leave
push
lahf
push
adc
xchg
ja
xor
push
dec
and
or
in
mov
or
popf
cmp
es
and
and
inc
popf
pop
dec
scas
cmp
and
adc
imul
push
xor
dec
loop
and
clc
push
retf
fild
js
inc
mov
sub
mov
push
sub
ftst
jno
fsubr
repz
inc
mov
or
in
sahf
arpl
outs
jmp
xor
(bad)
imul
in
xor
push
push
jnp
arpl
cmp
xor
in
ja
movs
dec
enter
cli
xor
(bad)
sub
fwait
out
popf
stc
(bad)
dec
or
nop
mov
push
pop
cmp
(bad)
aam
rol
je
jno
mov
test
loope
mov
sti
repnz
inc
inc
bnd
test
push
push
xor
xor
call
xor
sub
sub
mov
adc
inc
push
jmp
imul
in
mov
and
inc
nop
imul
(bad)
stc
fdiv
mov
jbe
or
fisttp
aad
dec
inc
es
and
in
xchg
jbe
mov
shl
cmp
mov
cmp
mov
cs
jne
push
(bad)
in
adc
add
and
movs
lods
jp
mov
mov
shl
mov
mov
fiadd
js
adc
lahf
inc
cmp
pop
call
leave
fs
dec
(bad)
sub
xchg
xchg
pop
in
jno
sbb
xchg
push
loop
dec
loopne
cmp
lods
mov
xlat
ins
jl
(bad)
stc
movs
xchg
das
adc
pop
adc
imul
or
mov
mov
test
push
mov
ins
push
cmp
enter
ins
pop
ret
out
mov
sbb
and
push
jo
or
int3
xchg
push
loop
js
dec
rol
sti
sahf
jo
neg
fstp
mov
sub
inc
movs
mov
sub
jae
pop
and
js
dec
adc
mov
add
shl
jl
out
(bad)
jae
test
push
shl
aaa
jmp
mov
mov
xchg
sti
dec
cmp
cli
adc
cmp
pop
mov
ror
(bad)
mov
and
or
fld
in
inc
addr16
push
enter
mov
and
jnp
or
mov
inc
or
fistp
jge
mov
sti
pop
arpl
(bad)
adc
mov
imul
inc
jmp
cmps
add
jae
aaa
out
cs
imul
stc
jp
push
pusha
ja
scas
add
call
mov
inc
movs
retf
inc
cs
das
daa
jo
test
inc
mov
jp
mov
popf
(bad)
dec
add
outs
fild
xor
test
xchg
sub
inc
lods
push
push
call
push
add
xchg
inc
inc
add
test
leave
cdq
sti
jae
jo
outs
(bad)
fnstsw
(bad)
imul
jo
je
repnz
mov
dec
inc
add
jecxz
and
repnz
ret
jns
jecxz
push
movs
jns
pop
inc
rcr
mov
aaa
push
call
mov
loop
add
mov
xor
mov
loope
out
bound
mov
inc
cli
bound
mov
add
mov
lahf
cmp
push
or
es
out
push
es
rcl
ja
jl
retf
loope
repz
mov
cmp
xor
sub
(bad)
(bad)
vpmulhw
out
(bad)
les
in
sub
arpl
mov
popa
or
mov
test
pop
inc
dec
push
ficomp
push
iret
mov
std
jp
scas
mov
sahf
out
xor
(bad)
mov
mov
movs
test
inc
jo
add
pop
xor
push
loop
push
mov
fiadd
mov
adc
repz
je
dec
push
mov
cdq
dec
xchg
sahf
inc
mov
rdtsc
mov
xor
push
mov
xor
mov
rcl
pop
mov
cmps
xor
add
div
push
inc
pop
pop
mov
call
pop
fisttp
dec
jle
cmps
imul
lea
fdiv
ret
cmp
dec
pop
jl
mov
sahf
push
lea
jnp
add
sub
retf
(bad)
jo
(bad)
cs
and
lds
or
cmps
or
and
mov
cmps
mov
fdiv
mov
nop
dec
ret
imul
das
or
jp
(bad)
loopne
into
call
dec
push
push
(bad)
int3
in
cmps
mov
jo
or
jmp
pop
mov
sbb
push
mov
stos
or
popf
push
scas
test
es
add
cmc
xor
inc
int
out
push
das
out
pop
loopne
mov
test
stos
mov
dec
adc
xchg
sub
pop
out
xor
aas
sub
push
ror
xlat
xchg
loop
inc
and
adc
sbb
and
movs
pop
xor
mov
jge
shl
stos
mov
outs
push
jno
test
mov
mov
fwait
(bad)
jnp
push
inc
clc
mov
push
sahf
push
dec
outs
inc
shl
(bad)
dec
ret
or
sub
dec
test
sub
in
jno
gs
add
mov
add
out
retf
loopne
cmp
fdivr
jg
pop
or
lea
push
les
push
jg
pop
retf
loope
iret
popa
push
dec
dec
cmc
je
xlat
cmps
inc
mov
or
jmp
enter
cs
jmp
jno
fwait
mov
pcmpeqw
adc
xchg
mov
sbb
hlt
call
sub
push
add
and
cmp
mov
test
loope
bound
push
jg
jo
(bad)
cmp
pop
fimul
(bad)
jae
bnd
call
push
nop
and
mov
dec
dec
mov
repz
sbb
mov
jp
aas
add
aaa
mov
mov
push
cmp
or
arpl
ret
nop
jecxz
pop
call
push
sub
cmp
sub
scas
mov
aad
pop
(bad)
js
xchg
push
mov
push
jmp
pop
pop
jmp
push
xchg
mov
and
ja
jle
push
sub
cmp
out
xor
adc
or
aam
dec
push
cmp
cmp
enter
call
push
fwait
repz
add
mov
dec
mul
cmp
mul
push
jmp
add
pop
add
stc
fs
aam
pop
test
xor
mov
mov
cmp
jno
mov
repnz
or
jae
xchg
out
push
mov
and
leave
adc
mov
inc
mov
rcr
(bad)
pusha
xor
cmc
sbb
mov
mov
adc
xchg
inc
jne
and
shr
stos
jle
xor
icebp
in
jge
and
sbb
pop
fisttp
les
ret
mov
pusha
mov
or
dec
mov
adc
sub
inc
or
jnp
mov
retf
fcomi
add
add
shl
fs
lock
push
mov
dec
fwait
loop
movnti
mov
call
inc
mov
out
fcomp
data16
sahf
lods
cmp
(bad)
and
dec
retf
or
sub
adc
loope
jo
or
iret
mov
das
push
add
fistp
cmc
jb
jo
adc
in
add
test
mov
mov
pusha
shr
xor
mov
ins
dec
cmp
cs
out
xchg
imul
cmc
cmps
jns
push
aam
mov
push
jae
mov
jnp
pop
sub
xor
in
adc
(bad)
and
or
bound
push
ja
icebp
add
scas
lds
and
sar
dec
sub
or
out
pop
int
in
push
adc
jmp
adc
sbb
and
xchg
add
or
imul
ret
xchg
daa
out
aas
mov
dec
mov
rcl
sti
addr16
aas
in
jp
stos
adc
mov
test
repnz
ret
clc
push
popf
aas
fwait
popa
lock
dec
movs
sub
pop
rcr
cwde
dec
jne
es
pop
shl
push
or
clc
ret
fst
xor
mov
mov
add
cmp
mov
dec
rcl
pop
sub
out
pop
and
add
lods
push
cld
pushf
pop
push
aaa
jmp
jmp
or
sbb
mov
xor
int3
movs
retf
xor
jb
sub
inc
xchg
sub
fiadd
mov
lds
jp
stos
js
popf
es
add
cdq
cwde
movs
mov
test
mov
jb
xor
test
call
pop
hlt
in
hlt
fist
mov
stc
rcr
dec
cli
popa
mov
sbb
push
ror
push
or
adc
int
mov
test
push
jle
adc
xor
and
not
inc
call
add
loopne
popf
sub
aaa
pop
pop
mov
jmp
cmps
cli
lods
retf
or
push
pushf
inc
xor
iret
ds
(bad)
adc
retf
mov
cmp
mov
mov
stc
xor
mov
mov
imul
xor
shr
push
lahf
pmuludq
outs
test
pop
loope
imul
out
fisttp
mov
jge
ret
outs
xlat
js
cmp
das
(bad)
mov
adc
add
mov
or
mov
fld
inc
sub
in
mov
adc
int3
mov
adc
jl
stc
cmp
jo
in
clc
mov
pop
out
(bad)
jge
in
mov
test
mov
ins
mov
fstp
adc
cli
cwde
adc
das
scas
lock
jnp
pop
ja
xor
les
jmp
leave
push
movs
mov
add
push
jno
fdiv
push
and
pop
sbb
cmps
jmp
fdivrp
pop
cmc
lahf
jl
lahf
mov
(bad)
int
mov
dec
mov
rcl
jo
xchg
mov
imul
outs
jmp
inc
pop
sbb
imul
mov
and
imul
mov
ja
dec
jecxz
ret
in
cmp
gs
sub
into
jns
mov
push
(bad)
outs
or
mov
and
mov
inc
push
xchg
cmp
(bad)
aam
nop
sar
pop
inc
into
push
dec
test
clc
loopne
jb
push
in
sbb
xlat
and
ds
pop
dec
es
pop
dec
mov
mov
sub
fwait
scas
pop
pusha
ja
sti
jbe
aaa
mov
xchg
xor
jns
inc
push
xchg
mov
je
jb
cmp
test
xchg
xchg
dec
outs
cmp
pop
hlt
loope
data16
leave
sahf
mov
sbb
rcl
pop
xor
pop
pop
add
sub
scas
test
push
mov
sbb
mov
pop
adc
(bad)
sbb
dec
mov
popa
movs
mov
bound
scas
xchg
cwde
addr16
cmp
test
scas
test
push
das
hlt
ins
inc
imul
imul
dec
aaa
jne
(bad)
push
sub
cmp
push
xchg
mov
and
adc
mov
clc
jne
icebp
js
or
sbb
in
push
dec
frstor
movs
cmp
pop
jp
jne
sub
adc
mov
faddp
test
pusha
pcmpgtb
mov
mov
jno
mov
and
(bad)
shl
mov
imul
fdivr
pop
iret
call
adc
retf
push
fucomip
out
imul
inc
scas
xchg
pop
and
mov
aas
es
pop
pop
mov
sub
scas
sub
inc
cwde
shl
sbb
inc
adc
jne
sbb
jle
dec
addr16
mov
movs
sub
dec
xor
push
push
aaa
cs
daa
es
rol
sahf
loopne
outs
add
sub
adc
sbb
(bad)
mov
xor
popf
xchg
ins
leave
scas
ret
xchg
sbb
dec
mov
out
inc
jae
(bad)
in
mov
int3
add
inc
aas
ret
sbb
cwde
gs
mov
mov
fs
pop
pop
inc
dec
jns
lock
leave
inc
pop
xchg
mov
lods
out
daa
(bad)
cbw
(bad)
mov
adc
inc
lods
inc
xchg
jb
pop
lods
or
aam
adc
stos
aaa
dec
clc
out
sbb
add
xor
mov
in
gs
jecxz
(bad)
aaa
push
ds
mov
xchg
add
addr16
scas
fdiv
popf
and
inc
jnp
leave
aaa
jnp
sub
push
movs
add
mov
mov
xchg
dec
mov
sub
mov
fnsave
xchg
push
sub
movs
push
cmp
mov
cmp
mov
lahf
mov
sub
pop
lock
pop
loopne
mov
xor
jns
sub
leave
neg
shl
ss
sbb
push
mov
jecxz
and
adc
jp
pop
xchg
xchg
aad
mov
mov
pop
into
xchg
jno
mov
mov
nop
sub
sar
repz
into
popa
pop
outs
sbb
jmp
mov
inc
popa
aad
mov
out
call
cmp
cdq
and
scas
xor
sub
pop
fwait
mov
cmps
(bad)
in
jge
push
retf
sbb
and
or
mov
cmps
jb
jg
fs
std
stos
pop
mov
or
es
xor
enter
fs
pop
dec
cmp
pop
mul
outs
mov
add
pop
mov
sbb
push
push
mov
ror
int3
mov
xchg
mov
xchg
push
sub
mov
jge
retf
das
popf
jecxz
ins
sbb
mov
sub
jne
mov
pop
xchg
imul
push
test
repnz
(bad)
lods
les
push
and
sub
(bad)
push
adc
mov
repnz
pop
mov
and
dec
in
inc
fwait
jae
ja
inc
imul
ss
not
call
or
pushf
adc
push
scas
add
mov
inc
test
sub
sub
popf
or
pop
pushf
imul
sbb
int3
int3
cmp
mov
mov
pop
mov
outs
not
mov
cmp
or
xchg
stc
sub
adc
xchg
test
jbe
jle
retf
(bad)
sbb
and
jbe
push
(bad)
mov
in
ret
jp
pop
push
add
mov
mov
adc
das
cmp
mov
cli
add
mov
jns
movs
ins
mov
lods
xchg
sub
xor
pop
(bad)
cmp
mov
mov
mov
popa
push
ficomp
inc
jmp
dec
xor
xchg
imul
stc
xchg
dec
jnp
imul
imul
bound
sti
repz
sti
mov
mov
not
sbb
add
mov
jbe
cmp
mov
loop
je
cs
sub
fldcw
xchg
xor
fisub
xor
sbb
mov
add
jp
ror
(bad)
jmp
xchg
sahf
xor
rcr
push
cmp
and
jo
leave
and
loopne
(bad)
dec
sbb
and
daa
dec
push
sbb
jno
pop
leave
(bad)
fldenv
int3
loopne
nop
and
daa
mov
cmp
out
and
jns
leave
sub
scas
outs
sub
lds
inc
loop
mov
jecxz
push
sub
jb
fsubp
imul
pop
clc
popa
(bad)
stc
scas
data16
lock
sbb
mov
scas
cwde
and
fist
das
mov
jnp
inc
and
push
pop
mov
mov
shr
inc
mov
fwait
movs
adc
sub
push
mov
and
jno
sahf
push
add
push
ins
pushf
add
leave
inc
ss
test
out
xchg
xchg
xor
enter
ins
adc
push
outs
inc
cmc
lds
dec
inc
ret
xchg
faddp
mov
cmps
mov
push
push
in
sbb
cmp
xchg
loopne
nop
inc
imul
int3
sub
push
sahf
push
cwde
jbe
jns
and
loop
push
jmp
fcom
enter
test
dec
mov
fadd
ds
in
in
repnz
addr16
loopne
sbb
mov
jmp
ret
sub
xchg
into
mov
dec
pop
ds
jl
div
jnp
js
lods
mov
cli
sbb
data16
jg
bound
repz
aas
jmp
(bad)
jo
add
fiadd
cmps
movs
(bad)
cmp
inc
pop
fist
ja
xor
daa
xchg
pop
movs
je
push
test
jae
jbe
cli
xlat
test
ins
mov
je
or
mov
(bad)
enter
pusha
mov
xchg
push
ret
jl
lods
add
sub
movd
adc
fs
dec
inc
mov
push
cld
ins
mov
js
xchg
dec
stc
push
push
pop
aam
or
mov
gs
in
movs
sub
mov
imul
lock
cmp
lahf
das
xlat
dec
pop
sbb
cmp
inc
fnsave
lea
pop
pop
cs
mov
cmp
jnp
pop
arpl
sbb
fsubrp
imul
dec
mov
dec
clc
popf
mov
xchg
jo
add
test
push
int
dec
sahf
or
test
dec
mov
and
aad
pop
jecxz
mov
je
call
shl
and
dec
cli
push
fadd
jle
sub
lock
mov
neg
fmul
add
pop
aad
add
mov
nop
mov
adc
jns
stc
ret
cmp
gs
pop
ds
shr
js
scas
cmc
add
call
fcmovbe
sub
xchg
retf
push
cmp
arpl
push
jnp
icebp
sub
test
cli
fisttp
fs
cmc
xchg
in
pop
call
repz
cmps
cmp
lods
ret
int
les
jo
fadd
cs
or
cmp
jge
mov
cwd
add
sub
pop
fdivr
fcomp
push
and
pop
into
pop
enter
test
xchg
dec
mov
test
pop
lock
lds
dec
mov
or
and
lds
mov
mov
add
pop
cmp
rcr
movs
fdiv
or
into
xchg
in
arpl
or
movs
mov
mov
movs
dec
dec
test
cmc
movs
shr
fsub
push
in
push
mov
dec
inc
mov
arpl
push
shl
cld
xor
xchg
xchg
outs
pop
or
clc
mov
ror
dec
sbb
pop
add
dec
out
xor
inc
dec
adc
add
cmp
sahf
add
sti
xchg
or
push
adc
sub
scas
cmp
mov
jo
test
repz
pop
sbb
push
test
aaa
pop
lods
pop
pop
mov
lods
rcr
test
cmps
adc
pop
mov
nop
sub
add
pop
mov
or
jl
icebp
mov
jbe
add
sti
lods
cmp
pop
pop
jmp
ins
xchg
les
aaa
pop
jb
stos
dec
dec
rcr
pushf
ja
dec
(bad)
loop
lock
push
sbb
mov
mov
pop
inc
cmp
add
cmps
lea
lods
mov
jne
retf
inc
mov
xor
push
pop
outs
cmp
loope
paddusb
jae
jbe
pop
jno
cli
pop
dec
in
sub
ror
test
addr16
jg
nop
fcom
ror
xor
inc
imul
inc
or
push
stc
and
lods
in
cmp
adc
mov
mov
push
xor
jmp
pop
(bad)
les
or
xor
adc
pop
mov
call
cld
cmovae
add
jmp
sub
fidivr
or
mov
shl
arpl
mov
adc
stos
mov
cmp
test
retf
cdq
(bad)
out
jae
idiv
xor
js
retf
or
rol
(bad)
dec
int3
or
xor
rcl
push
lods
xchg
push
clc
imul
test
or
push
jae
adc
dec
xor
mov
adc
inc
bound
rcl
or
mul
popa
cmp
mov
aam
fdivr
push
test
add
jbe
sub
call
nop
in
jae
xor
fistp
call
or
inc
in
ss
retf
popf
jecxz
push
cmp
jg
cmovno
jle
push
test
sub
mov
xchg
aaa
pop
pop
test
neg
mov
push
xchg
mov
into
cmps
and
adc
das
sbb
imul
mov
fdivr
dec
jge
push
mov
out
push
jae
push
rcl
ins
cmps
ret
adc
fcom
xor
or
sub
(bad)
mov
shr
pop
popf
imul
js
pop
out
test
scas
ret
cmps
into
and
sar
jecxz
enter
test
mov
sar
das
xor
mov
popa
addr16
fnstcw
out
adc
and
mov
(bad)
(bad)
repz
mov
in
mov
or
jle
xor
movs
sub
dec
(bad)
mov
fcomp
ret
daa
int3
push
mov
adc
aad
mov
mov
rcr
jne
xchg
and
or
and
xchg
mov
cmp
xchg
lea
cmc
inc
push
(bad)
shr
adc
adc
mov
push
lods
add
icebp
js
mov
xor
xor
sbb
clc
in
xchg
out
ficomp
fwait
lods
cs
sahf
scas
cwde
out
push
aaa
out
or
xor
(bad)
das
movs
cld
xor
shr
pop
cmp
add
cmp
adc
aad
test
enter
dec
add
and
std
in
inc
inc
xor
mov
xchg
call
jl
jl
sub
dec
mov
xchg
and
xor
repnz
pop
adc
pop
iret
xlat
retf
ds
imul
stos
dec
pop
imul
es
xchg
repnz
mov
(bad)
lahf
or
(bad)
sahf
scas
sar
pusha
mov
push
fsub
xchg
cmp
leave
bound
mov
mov
mov
stos
xchg
into
push
dec
ds
call
or
out
inc
stc
jnp
addr16
rcl
add
orps
ror
imul
lock
jmp
aam
bound
jge
sub
(bad)
mov
sub
paddsw
lahf
and
cmp
xchg
xchg
es
or
xor
clc
test
dec
js
imul
add
(bad)
jbe
in
sbb
adc
in
cmp
mov
jmp
out
mov
fwait
outs
xchg
sub
out
add
arpl
dec
inc
rol
sub
sub
mov
add
jno
xor
pop
aas
lea
jns
enter
xchg
inc
inc
jmp
fdivr
repz
jmp
gs
jno
inc
or
fisubr
aas
cmc
push
inc
not
jmp
pop
adc
test
and
nop
int3
xchg
adc
adc
push
je
sub
cmp
test
adc
fild
iret
in
adc
xlat
xor
sub
lods
cmp
mov
adc
repz
pop
dec
aas
xchg
cwde
and
jp
sbb
cli
lock
sub
jo
into
or
pop
lds
adc
mov
cmp
ins
imul
test
into
mov
push
fsubr
adc
mov
adc
or
sbb
stos
popa
ror
mov
imul
enter
fnstsw
push
mov
mov
mov
mov
jnp
cmc
ja
mov
pop
lods
shl
sbb
inc
je
sub
cdq
xchg
lahf
movs
jo
add
stos
mov
stos
(bad)
mov
std
out
test
push
ds
mov
arpl
xor
inc
sub
inc
je
and
xor
dec
cmps
mov
adc
pop
mov
sub
jno
repnz
inc
sbb
fistp
sub
ret
mov
sbb
ficom
xchg
fist
xor
inc
mov
sub
shl
arpl
sub
sub
jmp
rcl
sbb
(bad)
cmp
push
add
and
(bad)
mov
mov
mov
xor
movs
sar
pop
jns
outs
cmp
mov
pop
fidivr
or
movs
add
bound
pop
sub
cmp
fisub
push
cmc
ds
jg
cmp
ficomp
loop
push
mov
xchg
mov
cdq
(bad)
mov
arpl
repnz
test
mov
ins
or
icebp
imul
and
mov
or
jb
cmps
inc
xchg
push
push
jns
shl
fwait
mov
jmp
test
cmp
clc
inc
mov
aas
cmp
loopne
sbb
mov
ja
push
cmps
cmp
dec
iret
xchg
shl
and
std
fdiv
jmp
test
mov
push
mov
imul
ins
test
retf
or
loope
cmps
retf
jmp
xor
popa
push
in
std
out
cs
and
aam
cmp
imul
sbb
cwde
jae
adc
cli
(bad)
lds
or
xor
inc
and
add
int3
fstp
ja
shl
or
xchg
bound
or
and
dec
cmps
or
mov
gs
call
pop
icebp
jmp
push
sub
fnstenv
jmp
lea
xor
jne
sbb
xor
ds
aam
adc
sbb
sbb
or
in
sbb
popa
sub
adc
popf
push
inc
lds
pop
push
test
nop
ss
aam
sub
fist
je
jge
shl
out
jmp
test
(bad)
(bad)
cmp
dec
jmp
movs
xor
ss
xor
arpl
jae
sub
std
sbb
pusha
es
fwait
in
pop
popa
add
and
sub
mov
and
imul
outs
xor
push
fwait
xlat
ret
icebp
jecxz
iret
or
mov
inc
inc
mov
lods
mov
test
mov
jp
mov
es
mov
mov
mov
cmp
rcr
icebp
jge
jb
add
or
jne
sbb
sub
xchg
or
jmp
cld
ja
nop
or
mov
cmp
sti
cli
or
sar
adc
ja
dec
mov
jmp
mov
je
arpl
push
xor
sub
jns
lds
arpl
xor
xchg
mov
jns
(bad)
xchg
data16
cmp
movs
jmp
fnstenv
ret
retf
in
jle
adc
pop
jns
push
mov
test
sahf
pop
adc
sbb
dec
lods
cli
add
clc
and
call
aaa
or
pop
int3
lahf
mov
retf
push
aaa
test
mov
cmp
fidiv
aas
adc
add
push
int
test
imul
jae
lods
pop
rcr
push
or
daa
mov
data16
das
jns
or
push
shl
neg
push
jns
sbb
lods
push
aad
jae
sub
jge
neg
push
daa
std
test
jmp
dec
fst
out
aas
pop
inc
fsubr
cli
enter
out
cmp
(bad)
imul
ror
fist
int3
adc
dec
loopne
or
dec
mov
mov
cmp
xchg
and
xor
pop
xor
clc
or
inc
push
mov
(bad)
and
es
adc
(bad)
push
es
cmp
or
les
xchg
push
out
xor
add
and
pop
fidiv
(bad)
cmp
dec
adc
in
add
sub
inc
andps
sbb
fild
jnp
adc
arpl
mov
(bad)
xchg
clc
push
pushf
popf
pop
xor
mov
jmp
jno
(bad)
rol
sub
push
add
enter
xchg
sub
xor
popf
inc
ret
cmp
fwait
mov
aad
jg
push
popa
mov
or
add
and
inc
loopne
movs
fimul
cwde
xchg
jge
pusha
mov
sub
mov
test
jmp
lea
jb
js
aad
mov
fcom
ds
loopne
sahf
inc
or
mov
imul
clc
fld
inc
xchg
or
push
or
fcom
cmp
cli
xor
and
or
inc
cdq
dec
push
ret
mov
mov
xchg
dec
fistp
push
sar
in
in
jmp
mov
ret
push
push
(bad)
es
ja
fld
mov
call
xchg
cdq
xchg
pop
jle
and
iret
push
inc
xor
daa
jl
lock
js
mov
xchg
loope
popf
jmp
or
sahf
xchg
push
mov
jno
or
jo
jg
pop
mov
xor
inc
out
ret
xchg
(bad)
jo
cli
int
xor
ror
jl
push
clc
or
mov
sub
les
sub
push
inc
test
cs
es
test
(bad)
or
daa
jb
fstp
adc
int
push
outs
daa
push
inc
cdq
outs
or
pop
mov
mov
add
pop
mov
sbb
outs
call
sbb
int
xor
mov
js
xchg
and
cmc
sub
dec
inc
inc
mov
adc
add
cmc
push
push
movs
and
fsubr
jns
adc
jg
mov
cmc
xchg
mov
pop
imul
ins
push
fild
and
adc
shl
cmp
pusha
and
push
enter
and
mov
in
mov
enter
sub
fisttp
ss
sub
mov
mov
fwait
fs
jb
jmp
push
sbb
xor
ja
into
and
mov
fisttp
out
sbb
inc
hlt
jp
or
jno
rcr
and
mov
add
test
leave
std
retf
rol
xchg
xchg
ins
inc
lock
mov
xor
movs
leave
add
adc
cmp
jns
test
jbe
sar
jl
loope
arpl
(bad)
pop
pop
add
cs
jmp
pop
xchg
and
sbb
sub
jl
jmp
push
mov
divps
lock
(bad)
out
push
add
xor
add
scas
jle
lock
mov
rol
fisub
mov
jo
push
jmp
push
jmp
cmp
push
push
dec
in
mov
call
popa
fistp
pop
adc
test
or
loopne
push
mov
mov
dec
inc
arpl
and
cmp
push
jp
sub
adc
jecxz
cwde
sbb
inc
pop
push
inc
jns
xchg
mov
ficom
jg
test
lahf
fdiv
push
js
jns
pop
jae
adc
or
ror
dec
mov
fadd
add
daa
pop
sar
jo
jg
cmp
jns
cli
xchg
int
pop
push
sti
aaa
or
pop
push
out
mov
fist
cmps
ss
xchg
out
lock
(bad)
adc
mov
loop
sar
add
out
neg
jb
shl
std
adc
sub
out
neg
xor
mov
xchg
jmp
mov
mov
cmc
ds
pushf
(bad)
or
out
(bad)
dec
int3
mov
adc
bound
xor
jno
icebp
dec
fisttp
imul
std
(bad)
pop
cli
js
cdq
jle
cmc
dec
lea
cmp
xchg
test
(bad)
stc
mov
shl
add
loop
pop
rol
pop
js
add
out
sub
ss
cmp
mov
jg
imul
das
mov
ret
mov
rcr
jge
pusha
dec
repz
jl
ror
leave
ja
imul
mov
imul
call
push
inc
out
mov
xchg
jo
sub
mov
iret
adc
shl
stos
fld
leave
daa
and
(bad)
retf
jle
int
test
pusha
cdq
pop
xor
or
(bad)
sti
push
in
sahf
jne
jb
out
add
std
jle
das
movs
sub
sbb
mov
mov
(bad)
stos
xchg
(bad)
fwait
xor
mov
jbe
push
pop
sti
mov
loope
xor
cmp
pop
into
ds
int3
scas
lods
xchg
outs
js
or
rcl
aad
mov
cdq
pop
jmp
rol
fsubr
dec
push
jle
in
mov
pop
push
cmc
jo
adc
add
dec
and
push
popf
sqrtps
xchg
adc
fisttp
xchg
push
dec
in
pop
add
cwde
pop
pop
shl
js
(bad)
mov
mov
loopne
pop
mov
sub
cwde
xlat
mov
cmp
aad
push
(bad)
mov
popa
arpl
mov
jg
outs
jns
ja
xchg
add
dec
mov
mov
sar
pop
jle
and
mov
loope
dec
in
test
outs
imul
xor
cwde
mov
data16
pop
xchg
cs
int
sub
xor
sub
sti
cld
daa
mov
cli
out
fnstenv
push
mov
jbe
scas
ret
mov
data16
loopne
stc
les
mov
jnp
in
pop
mov
rcl
or
mov
ds
pop
sub
pushf
dec
jnp
repnz
ret
imul
add
inc
out
fldenv
fscale
or
ins
outs
cmp
and
mov
push
popf
push
dec
mov
sbb
call
xchg
xchg
scas
sub
loope
jmp
cwde
sub
push
sbb
(bad)
pop
push
test
gs
lods
and
sbb
ret
adc
or
(bad)
int
dec
adc
xchg
add
mov
mov
adc
xchg
pop
mov
xlat
call
mov
xchg
inc
adc
mov
fwait
and
(bad)
das
inc
cdq
fstp
(bad)
dec
dec
and
int
push
or
mov
mov
sub
cmp
xchg
dec
mov
addr16
test
mov
pop
bound
jae
inc
mov
inc
push
inc
xchg
inc
test
cmp
mov
stos
mov
ds
sbb
cmp
out
xchg
sub
pop
in
or
cmps
add
xchg
clc
push
ret
mov
retf
cmps
fbld
mov
jge
shr
pushf
retf
inc
xchg
fild
arpl
or
push
mov
jmp
jb
icebp
mov
fisubr
adc
or
fadd
(bad)
out
nop
fcmovbe
push
(bad)
and
and
dec
push
and
xchg
shl
daa
idiv
dec
cld
xchg
icebp
pop
push
cmp
mov
fcom
sbb
or
fld
fs
xor
fild
xchg
sub
pop
jl
aad
les
inc
jp
movs
xchg
xor
(bad)
inc
mov
mov
xor
push
fnsave
xchg
out
push
jmp
gs
mov
mov
in
xor
out
sbb
stos
rol
add
xchg
jbe
or
mov
fsub
dec
cmp
jae
and
sbb
std
sbb
jns
cmp
out
mov
loopne
cwde
pop
xor
mov
and
sbb
push
xchg
enter
test
ret
lods
xor
xor
mov
xor
pusha
je
sbb
cs
imul
mov
jno
xor
aas
jmp
(bad)
das
jns
mov
adc
stos
inc
ins
and
add
fucomp
cdq
(bad)
cmp
sub
in
shl
nop
popf
jecxz
mov
(bad)
out
mov
push
dec
pop
adc
(bad)
das
mov
dec
pushf
xor
gs
loope
adc
xor
into
sub
addr16
outs
and
mov
cmp
ins
mov
and
mov
je
pop
loop
mov
jmp
popa
cmp
(bad)
or
sub
jae
cmc
ds
fiadd
ret
clc
in
(bad)
lahf
rcr
inc
mov
lods
xchg
pop
mov
mov
dec
add
in
xchg
sbb
aad
loopne
dec
cmp
adc
sti
jl
sub
pop
stc
int
retf
and
jnp
cdq
adc
adc
and
dec
add
jmp
push
and
or
je
imul
xchg
je
xor
ja
stc
xor
aas
jno
movs
sbb
xchg
test
mov
add
std
mov
and
dec
xor
push
ficomp
or
jns
pop
xor
pop
jmp
outs
(bad)
jecxz
pop
pushf
sbb
mov
jb
push
imul
or
shl
call
inc
add
mov
(bad)
xchg
inc
xchg
mov
out
push
call
imul
lock
cmp
xlat
add
les
mov
dec
popa
cmps
(bad)
xor
mov
retf
pop
pop
sub
inc
sbb
sbb
(bad)
sbb
xlat
loop
retf
push
in
xchg
mov
and
js
pop
cs
pop
sbb
je
pop
retf
sti
addr16
push
jecxz
sub
and
sbb
out
clc
cwde
pop
jl
gs
fmul
nop
sub
sub
dec
out
or
xor
cmps
bound
push
cmp
mov
gs
xor
(bad)
pop
or
movs
adc
pop
ror
test
mov
mov
pop
mov
out
ror
sbb
fwait
sub
sub
xor
push
fwait
jns
dec
fisttp
xlat
sar
loop
icebp
sub
jp
pop
cmp
rcl
sti
iret
or
ins
xchg
mov
in
add
call
hlt
mov
das
movs
add
mov
dec
jno
adc
jns
add
xlat
aad
out
sub
ret
sub
(bad)
push
and
test
cmp
mov
sub
mov
add
or
xor
jmp
movs
gs
in
push
mov
xor
and
lods
retf
xor
xchg
je
add
gs
es
pop
jecxz
arpl
cmp
ret
movs
sub
cmp
leave
jmp
out
mov
icebp
repnz
push
pusha
fsubr
pop
add
mov
mov
fnstenv
mov
fstp
jo
out
mov
rcr
hlt
sub
pop
fldenv
add
add
mov
mov
adc
test
dec
inc
mov
or
mov
or
adc
sar
adc
sub
pop
sub
dec
inc
rol
sub
jmp
les
out
imul
ret
(bad)
fisubr
cs
fs
jge
mov
and
sbb
imul
jns
jbe
in
(bad)
or
js
out
pop
adc
sub
pushf
mov
sbb
cmps
cdq
ret
lods
mov
in
retf
cmp
dec
ds
in
call
arpl
(bad)
jmp
arpl
dec
jle
sar
jae
lods
leave
(bad)
mov
jnp
pop
leave
push
xor
mov
pusha
xchg
ror
cs
cmp
fisttp
xor
mov
pop
mov
in
sar
dec
jecxz
add
(bad)
xor
addr16
mov
mov
sar
jmp
mov
(bad)
mov
jo
push
fldcw
ret
inc
inc
sti
sbb
inc
dec
jecxz
call
inc
loop
retf
stc
push
mov
inc
push
(bad)
stos
pop
outs
scas
jecxz
jge
sti
les
int3
sub
imul
out
xor
cmc
mov
into
shl
icebp
std
cmp
sub
sbb
pop
jle
aaa
push
je
sub
out
ss
mov
add
jb
cld
std
ds
pusha
xor
push
xor
fwait
sar
jmp
and
test
into
add
fst
mov
icebp
pop
(bad)
in
mov
sbb
mov
inc
es
cmp
xchg
fdivr
and
mov
addr16
push
loopne
es
test
mov
pushf
call
sub
fs
(bad)
ins
or
cmp
scas
daa
(bad)
shr
aaa
cs
push
or
jl
std
sbb
test
mov
xchg
push
scas
es
out
mov
jne
or
inc
out
test
mov
adc
add
cdq
stos
sti
(bad)
inc
nop
mov
mov
adc
pop
mov
push
fmul
movs
mov
fld
xchg
pusha
cwde
adc
nop
mov
cmp
cs
pop
sahf
ret
sbb
jo
imul
call
push
bswap
dec
add
and
mov
cmp
push
jae
dec
jle
sub
jmp
or
dec
je
loopne
test
je
mov
or
or
pop
lock
xor
in
test
sub
pop
ror
pop
cmp
aad
gs
xor
shrd
xor
mov
test
aaa
imul
push
push
ins
daa
cs
mov
adc
das
cmps
call
test
pushf
shl
xor
sahf
stc
cmp
aad
pop
push
or
fcmovnbe
xchg
adc
push
(bad)
stos
repz
pushf
les
shl
sbb
nop
cwde
mov
mov
jg
aas
jp
enter
jg
fucomp
adc
retf
mov
adc
pop
mov
sub
les
jnp
int
jp
inc
inc
lock
jmp
and
dec
movs
add
push
pop
imul
fadd
jmp
mov
sar
mov
(bad)
cmps
pop
cdq
lea
xchg
cmc
jae
lods
pop
mov
aas
or
aam
call
loop
call
sahf
pop
pop
push
les
(bad)
aad
or
xor
cli
pop
sub
jmp
in
push
xlat
bound
(bad)
scas
int
mov
xor
xor
mov
pusha
iret
jmp
int
scas
sub
push
into
jecxz
in
push
push
pop
mov
das
pop
or
cmps
push
cmc
ret
outs
cmp
scas
xchg
cmp
repz
xchg
std
cmps
in
cmp
pop
lahf
stos
ins
loop
xchg
mov
outs
lods
pop
inc
stos
not
push
dec
neg
fiadd
retf
outs
retf
or
jmp
imul
pop
loop
mov
test
repz
daa
push
loop
scas
mov
jl
lea
mov
jle
xchg
es
shl
push
push
fdivr
push
cs
dec
outs
out
xchg
xchg
call
(bad)
das
xor
xor
xchg
mov
bswap
pop
sbb
call
jmp
lds
mov
mov
mov
loop
(bad)
out
pop
sub
jge
inc
mov
clc
cmc
pop
aaa
adc
push
inc
adc
imul
mov
test
mov
dec
test
pop
xchg
in
adc
call
and
xchg
pushf
arpl
push
jl
push
into
mov
or
ins
xor
and
adc
xor
fidivr
into
adc
push
cmp
mov
imul
jmp
fs
cmp
sub
sbb
(bad)
in
ret
mov
rol
dec
sbb
mov
hlt
out
repz
and
and
sub
sbb
adc
jo
sahf
xor
addr16
test
icebp
mov
cwde
sub
jb
xor
or
sbb
xor
jns
shl
jne
sub
cmps
rcl
add
or
lahf
ss
add
xchg
jl
mov
cmp
cmp
mov
leave
mov
jle
or
fcomp
adc
arpl
cmc
out
mov
pop
(bad)
mov
xchg
fild
fild
in
dec
das
jle
ror
out
adc
ror
sbb
or
iret
sar
pop
or
int
adc
das
out
add
jbe
mov
jg
mov
cs
xor
and
popf
inc
jl
mov
pop
mov
div
ror
add
rcr
movs
mov
leave
shr
add
mov
push
scas
xchg
sbb
inc
and
adc
mov
xchg
push
or
mov
sub
push
adc
push
dec
mov
pop
mov
stc
ja
jmp
or
in
fild
or
aas
fisub
jno
xchg
retf
(bad)
add
lea
pushf
stos
mov
fwait
test
cmp
ss
(bad)
fcom
ret
(bad)
xchg
add
test
pop
pop
ins
dec
(bad)
mov
pminub
aaa
movs
mov
xchg
fcmovnb
shl
or
push
mov
hlt
mov
(bad)
jge
out
cmps
xchg
mov
sahf
or
sbb
sbb
neg
xor
pop
sub
dec
mov
push
mov
mov
nop
gs
dec
addr16
ins
fiadd
or
jmp
push
jl
lahf
mov
lods
ret
call
enter
pop
xor
adc
and
shr
out
mov
cmp
shr
mov
sbb
bound
cwde
push
das
mov
inc
int3
or
(bad)
push
mov
jbe
add
mov
test
jmp
stos
mov
or
test
daa
add
enter
sbb
lea
test
js
adc
or
push
mov
movs
mov
xor
push
xchg
stos
shr
call
pop
jno
fmul
daa
retf
jg
and
adc
jo
repz
movs
jbe
jle
(bad)
std
dec
mov
jb
and
iret
(bad)
jnp
cmp
pop
and
faddp
arpl
mov
(bad)
or
sub
js
dec
adc
fdiv
mov
cmp
dec
popa
imul
mul
cmp
lea
repnz
std
pop
xor
add
or
mov
in
in
(bad)
dec
pop
pop
out
ret
ja
shl
icebp
js
lahf
push
jno
pushf
xlat
and
cmovge
adc
mov
mov
sub
js
cs
push
icebp
leave
stc
aas
shl
cmc
dec
cmc
(bad)
push
mov
adc
ret
aaa
push
fstp
adc
fsubr
dec
test
xchg
stc
xchg
mov
adc
dec
xor
or
lahf
shl
sub
faddp
push
mov
rep
push
mov
jbe
pop
(bad)
fdiv
jge
adc
xchg
call
in
jnp
lods
clc
stos
gs
outs
cld
add
nop
and
cli
push
outs
popf
cld
or
fsub
jl
mov
push
mov
mov
or
jne
ins
dec
jge
sbb
ja
or
lods
rcr
mov
mov
add
mov
ins
sub
lods
mov
adc
(bad)
cmp
xchg
ss
mov
push
push
and
adc
int3
cmp
vpsrlw
dec
aad
cmp
ds
jmp
mov
mov
loopne
dec
fs
pop
cli
jge
jno
mov
push
mov
dec
(bad)
stc
xor
gs
xchg
test
(bad)
loope
mov
enter
mov
cmps
push
sub
sbb
pop
out
or
shl
inc
xor
sub
xchg
dec
or
xchg
xor
adc
inc
outs
cwde
mov
(bad)
mov
mov
repz
xchg
mov
pop
xchg
ret
inc
xchg
mov
mov
mov
pushw
jp
dec
or
cmp
test
and
(bad)
fcomip
sbb
retf
xchg
iret
mov
rol
cdq
cmp
jmp
sub
inc
jnp
sbb
(bad)
loope
cwde
rcr
dec
pop
dec
(bad)
adc
bound
fwait
mov
loope
mov
xchg
mov
ret
jmp
jnp
sbb
cmps
cmp
dec
outs
addr16
sbb
cli
jle
(bad)
and
xchg
adc
xor
sbb
and
and
je
mov
sbb
inc
xor
push
mov
addr16
mov
arpl
mov
mov
xor
xchg
(bad)
mov
(bad)
fbstp
mov
cld
(bad)
cmps
pop
sub
sbb
inc
cld
lds
mov
nop
mov
mov
lods
xor
push
pushf
fs
ss
std
mov
dec
push
push
aad
jmp
and
inc
push
pop
fstp
jle
fidiv
lods
or
and
out
mov
stos
loope
jmp
sub
daa
cmp
and
fiadd
jl
cdq
sbb
inc
cmp
cmp
ret
(bad)
jns
cmps
leave
adc
in
jno
shl
lods
add
ja
xchg
bound
pop
mov
idiv
out
aaa
out
mov
push
fild
fcom
idiv
cmps
js
enter
xchg
lea
imul
and
retf
push
clc
push
and
bound
or
popa
mov
adc
jno
sbb
bound
enter
js
and
fsubr
jg
ins
jecxz
call
mov
pop
(bad)
add
add
sbb
jb
int
jp
pop
sti
xor
cs
adc
jb
mov
inc
lods
daa
mov
jb
pusha
jmp
mov
pop
js
push
test
inc
push
xor
xchg
fnstcw
es
cmp
push
lds
out
jnp
add
push
mov
jne
ror
adc
jne
in
repz
mov
inc
out
pop
in
push
retf
jp
push
xchg
xor
out
test
push
stos
and
lock
dec
and
mov
adc
push
mov
add
dec
mov
leave
pop
inc
pop
cmc
in
stc
nop
in
rol
repnz
or
jl
add
mov
jecxz
jb
retf
and
jl
add
std
and
retf
pop
push
mov
xchg
in
sbb
ins
stos
sub
sub
pop
inc
mov
pop
lock
cmp
mov
push
shl
stos
scas
retf
push
mov
das
sti
mov
mov
cwde
repnz
int3
xchg
mov
stc
push
pop
xchg
push
mov
sti
and
data16
cs
leave
imul
add
scas
ss
push
jo
add
xchg
iret
mov
in
aas
and
xchg
cmp
out
cmp
and
xchg
lods
inc
dec
jmp
sbb
jmp
into
(bad)
imul
movs
xor
adc
cmp
cmps
cwde
aam
idiv
into
mov
inc
sbb
lahf
inc
pushf
mov
push
sahf
lods
lea
loopne
sub
daa
fcomp
(bad)
jl
cmp
pop
cwde
jl
adc
mov
sahf
jno
mov
pop
push
sub
sbb
enter
data16
mov
adc
xchg
xchg
pop
outs
dec
or
in
jge
mov
(bad)
mov
cmp
(bad)
pusha
cmps
pushf
leave
pop
pop
jae
pop
sub
sbb
mov
pop
inc
popw
dec
fild
push
or
push
push
mov
sti
out
jns
inc
rol
cli
ins
fsubp
mov
adc
setnp
add
mov
fst
inc
pop
enter
mov
repz
cmp
mov
jmp
movs
(bad)
pushf
dec
jno
into
ins
push
mov
dec
leave
mov
adc
jno
or
cdq
lds
pushf
sti
xor
out
xor
pop
cmps
inc
mov
js
adc
retf
stos
stc
jno
in
stc
and
ret
jbe
jb
iret
icebp
lds
pop
jl
icebp
stos
cli
sar
and
fdivp
scas
test
ins
xor
ins
leave
(bad)
mov
pushf
scas
dec
stc
mov
outs
out
adc
int3
in
loop
xor
push
mov
jmp
das
inc
push
mov
test
fisttp
shl
arpl
jo
jge
out
movs
call
outs
mov
gs
lock
mov
in
(bad)
into
dec
jp
fs
lods
dec
cmps
ds
mov
icebp
pop
lds
mov
rcl
xchg
pop
sbb
lds
mov
pop
pop
sbb
movs
pop
(bad)
jecxz
loop
mov
mov
pushf
rcl
mov
mov
inc
fsub
in
imul
xchg
int
push
dec
(bad)
adc
and
push
out
sub
fiadd
push
pop
inc
in
pop
sub
out
cmps
mov
imul
push
dec
xchg
repz
mov
test
ss
pop
cmp
sbb
sbb
and
mov
cli
xor
pusha
loope
push
cwde
loope
mov
cs
push
js
ins
mov
jge
mov
push
xchg
aad
aas
(bad)
jg
add
int
push
push
xlat
ins
xchg
or
jp
push
in
or
jnp
in
fisubr
(bad)
imul
daa
pushf
mov
aaa
ret
clc
sbb
lahf
fist
push
fisubr
pop
lods
add
ja
ins
idiv
retf
xor
(bad)
dec
repnz
jb
xor
fucom
leave
repnz
mov
sbb
mul
cmp
retf
js
push
sbb
xor
pop
aas
retf
cmps
sub
jp
ins
aad
into
or
ja
push
mov
or
std
jmp
add
pop
iret
jmp
mov
je
mov
shr
pop
mov
add
sub
jno
scas
xor
std
xor
lea
add
add
sub
jbe
fidivr
int
push
(bad)
(bad)
jo
cmp
daa
lahf
addr16
popf
shl
inc
out
jno
jecxz
stos
sbb
or
add
jg
in
mov
xor
push
jno
jbe
in
jbe
push
lods
cli
jno
xlat
push
dec
gs
cmp
call
ins
mov
and
in
jl
es
jne
or
idiv
nop
call
cwde
div
enter
adc
sub
adc
jmp
inc
(bad)
lock
iret
xchg
push
xchg
dec
adc
test
out
dec
into
push
pop
mov
add
iretw
mov
jno
dec
js
push
out
call
inc
pop
jmp
das
xor
mov
cwde
ror
js
inc
xor
sbb
fs
div
icebp
fiadd
fs
enter
pop
pop
data16
dec
lods
mov
lods
clc
jnp
les
push
mov
shl
sub
pop
mov
cdq
(bad)
pop
call
out
xchg
lock
inc
pop
jmp
int
push
mov
mov
mov
xor
sbb
movs
inc
xchg
or
test
les
push
mov
jbe
ja
dec
jb
scas
repnz
bound
imul
inc
ins
in
add
stc
hlt
add
lods
sbb
push
in
inc
xchg
pop
mov
outs
test
or
jl
(bad)
pop
mov
or
imul
sub
or
arpl
call
aam
xchg
ds
rcr
mov
pop
adc
jbe
adc
int3
jne
test
icebp
(bad)
out
xchg
popa
sub
addr16
adc
clc
test
add
pop
dec
popa
and
(bad)
cld
(bad)
shl
loope
das
sub
xchg
or
push
lds
imul
fmul
push
lahf
ins
mov
and
mov
imul
mov
aad
popf
mov
loop
xchg
mov
or
out
stc
clc
lahf
out
clc
cli
sub
sbb
ins
scas
adc
outs
cwde
or
stc
mov
sub
ins
and
jp
mov
aas
mov
xchg
inc
push
adc
jmp
pop
ficom
add
sbb
les
fucompp
sbb
out
sbb
cmp
mov
mov
pop
push
imul
mov
pop
pop
cmp
rcr
aas
push
pusha
stos
sbb
rol
(bad)
imul
call
inc
mov
nop
stos
adc
mov
push
or
test
mov
adc
sbb
in
xchg
dec
call
or
mov
loopne
dec
add
ret
cmp
in
xor
or
pop
xor
fist
pop
shl
test
sbb
clc
inc
add
ss
add
in
rol
xor
(bad)
xlat
mov
and
adc
xchg
xchg
ins
nop
rol
jns
outs
xchg
xchg
retf
dec
push
(bad)
mov
mov
(bad)
dec
mov
adc
test
and
popf
xchg
js
leave
mov
mov
ret
leave
addr16
lahf
loop
push
inc
push
cmp
(bad)
out
out
leave
cdq
mov
cmp
cwde
xchg
pusha
adc
jo
inc
out
dec
xor
jl
shl
xchg
sbb
int
xor
scas
and
jge
repz
int
(bad)
cmp
inc
sub
mov
sub
test
inc
fwait
iret
out
lods
inc
enter
enter
push
push
sar
(bad)
call
pushf
mov
rcr
sbb
xor
mov
iret
call
xor
imul
ja
mov
xchg
scas
(bad)
out
iret
push
enter
gs
jle
sahf
pushf
dec
mov
shl
aas
mov
cdq
movs
pop
hlt
inc
push
ins
mov
xchg
fidivr
jns
loop
repnz
aas
scas
loope
scas
cmc
xor
shl
mov
xor
mov
(bad)
adc
and
jmp
add
adc
or
jl
(bad)
sar
loope
adc
fadd
push
fxam
adc
popf
jb
mov
mov
xor
push
cmp
mov
stc
cmp
call
mov
mov
xor
call
mov
jae
iret
lahf
jg
ja
mov
in
stos
sbb
int3
mov
(bad)
pop
jl
pop
xchg
sub
add
cli
hlt
jne
add
pop
call
in
scas
(bad)
std
in
enter
mov
ss
arpl
and
push
jl
add
loope
push
ins
or
xchg
sar
mov
scas
out
repz
dec
inc
xlat
clc
cmp
jmp
(bad)
movs
sahf
ret
mov
mov
push
mov
cs
(bad)
push
adc
xchg
into
mov
adc
mov
pop
push
clc
xchg
push
lds
adc
lock
pop
xchg
xor
mov
ficomp
add
inc
sub
mov
int
imul
mov
sub
fs
mov
loop
lahf
xchg
(bad)
jl
loop
popf
adc
mov
out
shr
sbb
mov
sub
inc
and
sub
push
(bad)
js
cmp
lods
popf
stos
inc
lods
cmp
and
sub
std
bound
enter
and
push
jbe
stc
leave
mov
mov
jo
mov
sahf
call
push
int3
out
loope
inc
js
(bad)
lods
cmp
test
rcr
ins
jns
fcmovbe
add
js
loopne
aam
out
mov
add
jmp
cmp
mov
daa
add
in
mov
scas
adc
cwde
ret
fsub
add
jmp
push
cmp
xchg
out
xor
pushf
pop
add
push
sbb
repz
hlt
cmp
dec
xor
adc
dec
outs
movs
sahf
or
or
mov
jge
inc
xor
sub
jno
mov
nop
sar
lahf
in
add
xchg
pop
adc
cmp
xor
cld
pop
sub
push
push
out
mov
addr16
or
ret
add
cmp
test
adc
sbb
pop
push
xlat
enter
cmp
inc
out
fisttp
mov
ss
inc
jne
jp
cdq
dec
or
xchg
xchg
push
repnz
adc
jmp
(bad)
cmp
fistp
mov
aaa
pop
ret
adc
adc
mov
mov
lahf
or
mov
lea
push
push
das
sar
bound
movs
sar
daa
(bad)
sahf
call
push
mov
xor
test
stc
pop
and
mov
mov
je
cmp
into
sar
or
pop
mov
mov
iret
xor
into
jg
xchg
iret
ss
nop
pop
adc
push
jns
mov
imul
push
dec
pop
mov
out
pop
cs
loop
mov
push
add
repz
pop
rcl
out
sub
das
loope
cdq
fisub
mov
sti
cmp
xlat
enter
cmp
and
jne
inc
in
lahf
cmps
popa
mov
mov
push
pop
nop
fld
and
inc
push
or
rol
sub
movs
mov
fwait
test
mov
mov
xchg
arpl
aaa
xchg
pusha
fbld
(bad)
sti
mov
inc
call
aas
pop
scas
shl
call
and
mov
fs
xor
cli
and
pop
ss
loop
jge
jg
(bad)
(bad)
pop
rcl
dec
outs
hlt
pop
shr
pop
(bad)
push
mov
aaa
mov
movs
cmp
xor
stc
jb
aam
retf
cli
iret
pop
cmp
and
jecxz
rol
(bad)
jmp
or
adc
aad
aas
ja
jmp
jl
ins
sub
jnp
or
pop
clc
arpl
and
cmp
adc
aam
mov
outs
mov
push
inc
sub
clc
cmp
repz
dec
mov
mov
into
push
push
popf
bound
call
adc
repnz
xor
mov
sub
test
xor
push
clc
scas
xchg
pusha
and
(bad)
js
lahf
sbb
enter
aas
jp
cli
inc
cmp
push
rcl
neg
cld
cmp
cdq
(bad)
jle
popa
imul
das
dec
pop
bound
and
push
(bad)
cmp
xor
leave
in
pop
xor
bound
adc
xor
(bad)
mov
test
iret
call
sub
sub
sub
aam
test
mov
cmps
dec
rcl
shr
and
adc
add
push
jge
fsubr
jnp
movsx
(bad)
sub
ret
mov
pop
and
outs
das
push
mov
or
hlt
dec
shr
leave
test
jnp
mov
mov
es
mov
pop
push
dec
cmps
mov
pusha
(bad)
(bad)
mov
(bad)
sub
add
xor
xchg
mov
out
loopne
test
mov
cs
push
stc
(bad)
in
add
mov
inc
ins
je
push
mov
out
into
xchg
in
xchg
jl
dec
mov
sbb
aad
pop
bound
jae
in
pop
fimul
mov
js
int3
or
mov
push
cmp
lahf
xchg
sub
shl
jne
jmp
call
dec
pop
aaa
repz
push
cmp
sub
mul
stc
addr16
lds
mov
xor
dec
jg
sbb
mov
and
mov
out
bound
pop
lods
jmp
push
add
jle
test
mov
inc
push
movs
repz
xlat
shr
es
cdq
outs
out
std
lock
mov
sti
gs
sbb
ret
stos
dec
add
bound
sbb
outs
mov
xchg
ret
sub
jns
out
fld
push
pop
fwait
sbb
cmp
lods
mov
jmp
rcl
mov
pushf
or
mov
mov
ret
adc
cmp
fidivr
shl
test
std
mov
mov
addr16
mov
rol
xor
rol
dec
xlat
or
outs
clc
xchg
xchg
in
push
fld
adc
dec
jne
pop
pop
push
dec
lock
add
in
xchg
mov
lock
jno
mov
out
daa
or
push
hlt
iret
loop
cmp
pushf
cmps
into
push
adc
jmp
loop
dec
es
jbe
aas
jg
xchg
pop
push
and
pop
xor
push
dec
jbe
push
call
aam
mov
lds
enter
cld
xchg
shl
jl
fcomp
mov
mov
in
test
mov
or
je
push
call
or
inc
cmp
mov
pop
cld
pushf
and
lahf
(bad)
lds
adc
pop
test
nop/reserved
pop
adc
mov
(bad)
sub
ja
std
inc
xor
out
mov
ror
mov
xchg
movs
and
repnz
add
dec
and
jp
addr16
enter
cmp
cld
lea
ret
xor
jmp
push
and
jae
mov
ins
push
jle
outs
inc
shr
cmp
or
outs
mov
outs
je
inc
out
retf
scas
mov
or
jb
xchg
(bad)
and
or
add
mov
sub
test
xor
sbb
test
mov
inc
into
jbe
mul
or
fxch
movs
daa
pop
lock
rcr
jecxz
and
and
imul
mov
dec
je
push
sub
dec
inc
jbe
xchg
adc
adc
in
push
push
test
cmc
fsubr
test
xchg
sahf
sbb
jp
mov
(bad)
and
jg
pop
inc
sahf
jg
test
xor
ror
pop
je
xchg
cmp
into
xor
cmp
outs
dec
repnz
stos
mov
nop
cwde
loop
jp
lock
scas
out
dec
adc
adc
pop
add
sbb
not
out
lgdtd
add
popf
popa
scas
jne
pop
mov
retw
push
iret
cld
leave
test
sbb
cmp
outs
scas
outs
cwde
fistp
and
mov
mov
test
imul
jns
sub
add
pop
mov
add
ds
(bad)
add
inc
imul
and
mov
push
enter
fsub
mov
adc
movs
shl
mov
and
dec
xor
retf
mov
pop
jne
test
cwde
mov
push
mov
jmp
sub
cmp
ret
fsubr
movs
stos
aaa
imul
lods
(bad)
sbb
inc
popa
out
(bad)
fld1
out
inc
sub
ror
loope
repz
sbb
push
imul
add
fdivr
(bad)
jns
sub
dec
sbb
fidiv
dec
ret
test
push
xor
mov
adc
jbe
je
outs
les
fs
popf
lods
xchg
xchg
(bad)
(bad)
sub
sbb
inc
jns
(bad)
ds
je
dec
push
mov
movs
adc
and
mov
fstp
mov
cmp
test
cmp
xchg
cld
cld
ret
jl
xor
stc
inc
xor
mov
dec
pop
inc
sbb
test
icebp
sub
mov
sub
push
inc
int
push
ja
je
jge
and
lods
pushw
rol
pop
aaa
fisubr
dec
cmc
stos
cmp
mov
fwait
nop
lods
xchg
imul
ins
jnp
jle
aas
cmp
sub
inc
and
test
or
push
es
push
push
psubw
stc
mov
add
sub
mov
std
xchg
ss
xor
iret
push
add
add
dec
not
call
arpl
movs
mov
pusha
ret
pusha
cmp
add
lock
mov
sbb
jns
pushf
xchg
inc
pusha
cmps
bound
inc
(bad)
pop
mov
push
inc
cwde
div
pusha
pop
sub
lods
(bad)
hlt
out
outs
add
jmp
jnp
sbb
cdq
and
dec
jmp
xor
test
push
stos
(bad)
repz
push
movs
loope
pop
xor
leave
stos
(bad)
jo
mov
inc
aas
test
and
mov
lods
mov
dec
popf
test
fadd
call
or
cdq
dec
xchg
cli
sub
retf
(bad)
adc
femms
movs
and
ret
inc
stc
inc
xchg
rcr
push
hlt
(bad)
outs
add
jmp
rcl
movs
fidivr
repz
aas
fimul
lock
and
into
(bad)
jb
fdivr
sub
je
jg
(bad)
mov
mov
test
aas
ss
adc
and
sub
ffree
and
lods
movs
mov
icebp
in
inc
adc
mov
jne
das
test
adc
xchg
and
add
inc
push
lock
and
cmp
mov
hlt
jnp
pop
punpckhbw
cmp
mov
ret
pushf
mov
pop
ss
or
xor
out
push
fs
xchg
lahf
sbb
cmp
or
stos
jmp
das
in
mov
pop
inc
out
push
outs
fdivr
pop
cdq
imul
leave
out
dec
push
jp
in
push
fadd
ds
icebp
rol
aad
sub
dec
adc
aas
xchg
aaa
loopne
sub
jbe
xchg
push
dec
dec
mov
pop
(bad)
fstp
out
outs
inc
js
and
sub
les
jl
in
xor
out
(bad)
jecxz
add
mov
sub
retf
sbb
inc
mov
add
cmp
dec
pop
fidiv
inc
shl
cmps
lods
and
pop
xchg
or
pop
or
lods
mov
mul
pop
and
sbb
fdivr
(bad)
not
(bad)
int
iret
pop
and
mov
cmp
mov
mov
aas
xor
es
icebp
or
pusha
sub
sbb
inc
stc
int3
cmp
addr16
ror
sub
movs
rcl
xor
rcr
je
inc
and
int3
xlat
lods
ja
xor
push
dec
arpl
or
cmp
rcl
loopne
mov
inc
iret
mov
lods
fs
out
cmps
sbb
xchg
mov
or
add
movs
lods
fstp
push
xor
fdiv
dec
xchg
jmp
repnz
sub
rcl
retf
outs
xor
mov
call
enter
outs
inc
outs
mov
inc
fldcw
or
popa
nop
bound
pop
dec
popa
pop
adc
xor
cmp
and
ja
jge
scas
out
and
ins
shr
inc
bnd
aaa
pop
stos
or
or
call
mov
push
not
lahf
inc
nop
popa
sub
jl
(bad)
cdq
cmp
scas
dec
push
leave
mov
adc
and
mov
xor
sub
je
mov
stc
fst
xchg
pop
fidiv
lgs
loopne
and
cmps
mov
or
ins
sub
sub
popf
mov
mov
pop
popa
and
pop
movs
lea
jo
ror
xor
mov
or
lock
out
inc
daa
pusha
sti
aaa
in
lahf
lock
and
test
jno
xchg
scas
xor
mov
in
dec
mov
fsub
xchg
jns
jo
dec
adc
stos
movs
sbb
les
arpl
iret
test
dec
cmc
push
add
and
or
nop
inc
lea
das
ret
xor
cdq
test
xchg
adc
adc
fmul
inc
add
fnstsw
jl
loope
xchg
ret
cmps
sub
mov
push
ins
aam
retf
test
test
pop
and
push
jmp
clc
aaa
rcl
cmp
mov
push
leave
loopne
mov
xlat
daa
adc
fcmovnb
sahf
sub
add
sbb
and
sub
cmp
mov
pop
popw
push
mov
mov
icebp
ret
sbb
sub
push
dec
fiadd
jae
mov
xchg
fcomp
sahf
mov
js
icebp
loope
outs
sub
inc
in
scas
cli
shr
in
xor
fld
jl
sbb
enter
adc
outs
stc
xchg
hlt
shl
repnz
jmp
push
fnsave
int3
(bad)
or
pushf
sub
mov
push
int
sub
jp
fisttp
or
bound
and
sub
cmps
aad
icebp
sub
call
lods
and
popf
cwde
repz
sbb
iret
push
push
jecxz
fdiv
and
(bad)
and
push
mov
add
xor
dec
test
aas
push
inc
out
lea
mov
mov
add
inc
lods
in
mul
add
div
push
call
mov
loop
jecxz
int3
push
add
dec
sub
in
les
dec
popf
dec
cs
mov
test
or
xor
jecxz
mov
xor
mov
cmp
jmp
mov
push
sbb
dec
mov
sub
popa
cmps
pop
arpl
add
call
repz
test
xchg
push
or
sti
pop
and
push
adc
dec
pop
lods
das
bound
mov
and
ss
dec
imul
js
mov
cmps
pusha
xor
aad
sti
int3
ins
(bad)
mov
out
loope
or
fiadd
sbb
out
in
and
and
mov
fild
pop
lods
ins
xchg
adc
adc
push
xchg
loop
xchg
add
jns
scas
leave
and
sub
add
test
test
outs
js
mov
jmp
aaa
adc
mov
lea
(bad)
out
xchg
stos
cs
add
aaa
(bad)
jno
push
fnstcw
das
dec
js
pop
(bad)
fcmovnb
daa
test
(bad)
fsubr
fwait
mov
imul
jbe
and
fsub
cmp
sub
loop
test
lods
jb
test
fisttp
jbe
fsubr
push
sbb
xor
cmc
fiadd
and
xchg
outs
sbb
nop
or
lahf
(bad)
dec
imul
ss
cmps
test
sbb
je
add
push
nop
inc
xchg
cdq
mov
mov
jg
popa
pop
xor
jne
push
mov
add
jne
inc
jecxz
xor
int3
mov
push
push
mov
mov
out
inc
lahf
les
push
and
xchg
push
cmp
jns
push
mov
sbb
mov
popa
jmp
pop
add
test
add
sahf
aad
cmp
push
mov
or
(bad)
push
xor
fwait
iret
cmp
in
loope
or
fild
fnstenv
pop
test
in
fadd
dec
lds
aas
test
mov
std
pop
push
adc
ss
mov
rcl
jns
outs
cmp
xchg
sbb
loop
sub
retf
stos
sbb
imul
dec
jmp
repnz
cmp
in
mov
shl
push
mov
aaa
fdiv
shl
xchg
adc
cli
push
or
push
shl
jl
jge
fimul
das
mov
push
arpl
jmp
cli
pop
or
xchg
stos
jmp
jmp
inc
lahf
add
fbstp
out
repnz
es
adc
cmps
inc
or
repz
or
aas
lds
cmp
ins
int
int3
pop
das
mov
ret
mov
or
push
movs
je
pop
mov
xchg
xor
ss
(bad)
jmp
mov
pop
dec
xor
test
int3
ret
mov
add
sbb
test
fcom
add
sbb
inc
popa
scas
mov
and
add
mov
fucomi
and
inc
cmps
scas
cvtpi2ps
ss
xor
jg
add
test
inc
(bad)
and
lods
add
pop
add
jno
(bad)
outs
pminsw
and
mov
ds
daa
xchg
fdivr
sub
xor
je
imul
jmp
pop
or
jp
sbb
cmp
pop
dec
mov
stos
cmps
pop
lods
pop
cmp
(bad)
or
aad
(bad)
or
add
js
dec
fldenv
mov
rcl
add
mov
sbb
mov
nop
cmp
loope
(bad)
or
jnp
(bad)
jge
inc
(bad)
sub
mov
xchg
lock
jne
movs
mov
adc
pop
outs
xchg
push
dec
sbb
cmp
mov
fidiv
jmp
jo
ret
xchg
pop
and
adc
call
xor
nop
cdq
adc
xchg
jp
push
fstp
jno
fstp
jne
(bad)
mov
daa
pop
xor
sbb
inc
int
imul
sub
sub
call
jg
jecxz
repz
into
mov
les
stos
jl
xor
inc
mov
jle
and
xor
sub
bound
cdq
and
or
jl
sub
jge
inc
call
or
mov
xor
lock
lock
mov
xor
retf
movs
leave
xor
push
lahf
(bad)
shr
push
lahf
sbb
cmp
inc
mul
pop
or
jnp
int3
nop
out
outs
pop
pop
or
pop
mov
dec
sub
ud0
inc
(bad)
jp
leave
mov
dec
lods
inc
dec
push
retf
shr
pop
sub
adc
ror
lea
outs
out
test
push
inc
mov
xor
call
adc
push
out
das
ja
mov
adc
loope
rcr
mov
jae
nop
loope
mov
pop
and
cwde
stos
pop
mov
jns
dec
and
adc
bound
repnz
cli
mov
fwait
iret
push
retf
in
ins
lahf
xor
div
mov
imul
in
cwde
(bad)
aaa
cmc
xchg
sbb
mov
dec
xor
sub
dec
sub
jo
xor
cld
imul
hlt
jne
gs
fdiv
sbb
xchg
or
xor
inc
(bad)
jg
pop
xor
pop
mov
add
clc
push
sub
add
popf
pop
pop
inc
js
ret
xor
mov
mov
mov
gs
stc
or
sub
sbb
pop
jge
and
xchg
pop
retf
pop
mov
cli
cmp
adc
pop
xchg
pop
mov
sub
pop
cmp
push
stc
out
cs
out
mov
and
popf
inc
shl
popa
mov
bound
push
mov
and
jl
mov
sbb
fiadd
cmps
mov
pusha
mov
div
ins
xor
sar
or
cmp
(bad)
jecxz
rcl
cmp
ds
pop
add
scas
jns
loop
or
rcl
mov
cmp
clc
pop
outs
imul
arpl
es
adc
fsub
pop
push
add
cmp
repnz
xor
and
mov
loope
sub
sbb
dec
xor
mov
outs
repz
push
mov
push
jl
jbe
lods
cmp
xor
adc
mov
rcl
hlt
sbb
add
xchg
dec
aaa
inc
(bad)
sub
lds
or
out
mov
push
dec
xchg
leave
inc
into
imul
ret
cmp
mov
icebp
mov
xchg
ins
adc
aad
loopne
add
cmc
inc
adc
mov
sbb
out
daa
pusha
and
fiadd
popa
out
ds
xlat
in
mov
mov
jmp
or
jg
ds
xchg
ins
stc
repz
sar
out
(bad)
out
mov
repnz
popf
sbb
(bad)
cmps
test
mov
fistp
aam
loope
push
retf
in
lock
(bad)
mov
imul
inc
lods
jp
or
mov
cmp
and
ret
mov
sub
jne
push
mov
cmp
jno
into
jns
xchg
or
xchg
js
mov
and
mov
pop
push
sbb
aam
adc
out
xchg
rcr
mov
ret
pop
mov
mov
out
dec
lods
sub
inc
sbb
mov
out
outs
jb
xchg
sub
nop
ret
loope
push
push
cmc
xchg
loope
xchg
xchg
sti
dec
or
(bad)
ds
ins
cmp
les
in
or
jle
sbb
movs
aad
retf
pusha
push
jge
test
and
xchg
push
sbb
push
outs
push
mov
repz
inc
pop
mov
sbb
mov
push
pusha
sbb
pop
pushf
ins
push
pop
enter
pop
adc
mov
push
xlat
inc
mov
dec
lods
mov
xchg
test
push
in
iret
push
sbb
dec
pop
aas
icebp
jbe
mov
lahf
push
out
add
bound
icebp
aaa
js
jge
or
test
pop
test
jecxz
mov
push
push
inc
jecxz
xchg
xchg
dec
jecxz
xchg
leave
call
mov
std
enter
cmp
(bad)
inc
out
or
mov
sub
rol
imul
adc
xchg
mov
xor
pop
mov
nop
inc
xor
adc
and
adc
cmps
cmc
mov
or
and
retf
add
jmp
fimul
leave
fiadd
cmps
pop
or
(bad)
xchg
xchg
inc
imul
outs
scas
cmp
mov
pop
test
and
fnstcw
aad
xchg
xchg
pop
inc
xor
stc
hlt
xor
mov
push
outs
jp
test
mov
fcmovnbe
ins
sbb
mov
inc
mov
push
retf
daa
and
pop
(bad)
and
adc
xor
aaa
ss
mov
stos
jo
rcr
sbb
loopne
out
xor
mov
hlt
jl
movs
call
xchg
cmp
sub
ret
ds
jne
xor
jmp
(bad)
mov
and
jle
sbb
adc
dec
jge
aam
test
les
sbb
scas
jmp
call
pop
and
pop
fisttp
mov
fwait
ds
int
add
dec
test
or
fcmove
pop
test
and
addr16
pop
sub
jbe
lea
add
shl
push
dec
add
mov
(bad)
mov
fs
push
mov
je
ds
pop
les
(bad)
int3
nop
cmc
mov
call
bound
enter
or
xlat
pushf
retf
mov
sbb
stc
jp
or
sub
cmc
pop
xchg
ds
xchg
mov
push
adc
jne
adc
mov
fimul
ds
dec
dec
push
std
jp
rcl
aaa
mov
fcmovnbe
enter
sub
les
fsub
pop
adc
icebp
dec
mov
cmp
mov
cmc
jge
repz
adc
das
aaa
test
push
in
cmps
adc
call
jle
shl
(bad)
retf
dec
cmp
leave
enter
dec
in
mov
clc
sti
adc
xchg
test
(bad)
sbb
inc
pop
mov
push
or
retf
add
inc
add
jecxz
dec
fcomp
xor
mov
(bad)
nop
test
call
adc
inc
mov
fucomp
loop
es
cmp
add
mov
mov
out
movs
enter
repnz
dec
fstp
aaa
mov
stc
sbb
inc
xor
ds
ds
ret
adc
in
fwait
inc
clc
retf
inc
pop
push
ffreep
data16
fist
scas
mov
add
sbb
pusha
(bad)
mov
out
adc
aad
loop
cmps
std
mov
push
inc
xor
cmp
out
dec
mov
retf
in
sub
cdq
fisub
push
jge
inc
xor
bound
(bad)
jg
loop
(bad)
fist
stos
call
or
xor
pop
in
xlat
jp
daa
int
js
call
lods
in
(bad)
je
fisubr
inc
xlat
dec
(bad)
cs
(bad)
rcr
and
dec
inc
push
and
jg
sub
pop
add
pop
fcom
ret
push
and
dec
sbb
addr16
ret
pop
dec
xor
icebp
movs
and
jns
bound
stos
rcl
push
icebp
test
xchg
fild
inc
jae
call
je
cmp
pop
xor
fcomp
xor
icebp
cmps
nop
test
dec
sub
dec
int
push
sbb
xor
jo
popf
dec
inc
jmp
mov
push
fwait
pop
or
out
mov
lock
test
mov
jmp
push
aam
leave
lea
push
(bad)
sahf
jno
cdq
outs
stc
aad
stos
retf
mov
repnz
xchg
add
adc
iret
pop
adc
jae
scas
push
bnd
sbb
movs
cmps
add
nop
das
fs
jo
mov
push
pop
pop
add
and
add
xchg
cld
gs
inc
push
fimul
pop
push
dec
cdq
and
(bad)
aad
jne
pushf
cmp
(bad)
xchg
call
loop
cmp
mov
lock
mov
cmp
outs
cmps
or
pop
imul
out
ja
cmp
jns
arpl
lock
cmc
cmp
xor
cmp
(bad)
sbb
imul
add
and
xchg
test
stos
dec
adc
int
stos
dec
out
push
push
jb
stos
add
xchg
imul
add
movs
dec
daa
mov
iret
outs
test
sub
movs
pop
xor
push
shl
dec
jmp
imul
pushf
pop
daa
push
pop
xor
mov
xchg
push
mov
xchg
shl
pop
scas
arpl
jns
repz
mov
fnstcw
inc
arpl
les
pmulhw
ins
icebp
leave
or
addr16
arpl
mov
adc
xchg
push
mov
inc
jno
cli
push
inc
fcmovu
js
push
and
sahf
push
fnstsw
sbb
movs
push
shl
cmp
into
movs
les
or
mov
inc
repnz
mov
jge
popa
push
jg
mov
clc
popf
sub
jb
add
jne
jg
addr16
in
cli
jae
inc
fwait
iret
and
mov
into
inc
mov
xchg
test
bound
out
pop
sbb
add
pop
mov
xchg
arpl
test
dec
jle
sub
imul
sub
fwait
lods
stos
jp
sbb
not
dec
outs
mov
(bad)
push
jbe
out
inc
in
xchg
pop
les
dec
loopne
inc
loope
ret
scas
mov
xor
jp
jecxz
lea
in
mov
inc
jg
xor
xor
sub
mov
bound
(bad)
mov
jo
nop
das
jno
test
push
rcl
jl
ss
fs
or
sub
dec
into
and
xor
in
add
out
inc
dec
mov
jo
bound
shl
inc
mov
push
push
das
xor
jb
push
mov
inc
cs
push
pop
mov
scas
adc
jecxz
pop
sbb
out
cmc
jmp
call
xor
daa
inc
jmp
popa
sub
adc
je
dec
cwde
sti
loopne
(bad)
jecxz
mov
js
ret
jnp
loopne
imul
xchg
or
sub
in
inc
movs
pop
stos
push
inc
jmp
cmps
mov
xor
inc
ds
jl
test
jmp
inc
push
xor
stos
lods
jae
xchg
mov
fldenv
mov
or
stos
ja
(bad)
fmul
pop
sbb
mov
aas
and
ins
cmp
push
icebp
jle
ins
sbb
xor
mov
int
retf
pop
pop
xor
cmp
out
lock
and
adc
neg
jne
or
mov
imul
cs
bound
(bad)
jo
in
inc
int3
lock
push
pop
out
lods
sbb
jbe
jg
or
add
fsubrp
ss
inc
fwait
mov
(bad)
mov
xchg
jns
shr
push
mov
mov
lods
into
(bad)
mov
outs
div
int
cmp
pop
addr16
adc
mov
dec
je
mov
into
mov
adc
or
push
mov
inc
jo
aad
test
dec
loope
pop
mov
jmp
add
ret
or
mov
jmp
cmp
popa
push
mov
(bad)
sbb
(bad)
pusha
mov
pop
add
test
pop
push
jo
mov
gs
iret
add
scas
std
mov
pushf
cdq
add
dec
je
clc
mov
sub
xlat
jle
or
ds
push
movs
in
mov
jge
mov
mov
xlat
ss
ins
ret
repz
pop
inc
ss
mov
sub
lock
stos
add
sbb
xor
push
out
add
sub
add
pop
inc
mov
rcl
cmp
rcr
sahf
pusha
icebp
scas
fnstsw
ret
mov
mov
das
pusha
cmp
ja
xchg
(bad)
mov
retf
jae
pop
cmps
int
mov
inc
test
pop
xchg
(bad)
shr
into
idiv
nop
lahf
xchg
mov
call
inc
mov
inc
cmp
lds
enter
dec
pop
dec
push
loope
gs
(bad)
je
daa
push
jmp
or
test
mov
push
aad
and
push
sti
lds
pusha
or
push
xchg
cmp
ss
ficom
mov
retf
frstor
outs
ins
jo
push
cmp
pop
push
push
add
pop
adc
int3
mov
js
xchg
push
popa
aas
mov
adc
adc
jb
jg
add
int3
inc
ss
div
fnstenv
or
arpl
adc
xchg
arpl
js
dec
adc
fwait
pop
(bad)
mov
repnz
bnd
adc
(bad)
in
inc
adc
and
inc
jnp
movs
add
sub
nop
cmp
fst
retf
jae
xchg
cmp
push
jno
ret
pop
daa
or
sbb
ds
add
mov
mov
sub
addr16
fsub
adc
cmp
es
mov
adc
aam
cmp
cmps
mov
push
jae
jmp
lods
dec
xor
xchg
inc
mov
in
mov
ret
mov
test
adc
sub
iret
xor
push
xchg
adc
enter
(bad)
sbb
pop
adc
and
int
iret
mov
sbb
scas
fistp
dec
jb
sub
test
in
xchg
dec
push
fwait
(bad)
mov
cwde
je
cmps
push
cmc
in
dec
or
call
xor
push
dec
mov
mov
pop
jbe
cmps
inc
neg
adc
pop
lahf
pop
jge
sub
mov
cdq
push
(bad)
and
scas
push
dec
(bad)
adc
and
(bad)
aam
mov
ss
(bad)
cmp
push
adc
mov
jl
es
sub
mov
loope
xchg
sbb
aam
pop
mov
mov
mov
dec
test
and
jp
dec
jno
xchg
ret
mov
popa
pop
paddb
aas
daa
cmp
fst
push
out
popf
or
dec
and
adc
out
mov
mov
adc
lea
cmc
rcr
push
imul
mov
mov
jo
test
add
shl
test
or
and
mov
ins
jle
sahf
mov
call
leave
ins
dec
and
cld
mov
(bad)
xchg
cmovns
pop
fcomip
inc
stos
xchg
mov
jg
in
push
or
xor
jne
sub
outs
jmp
dec
fidivr
inc
(bad)
adc
mov
std
ret
test
adc
adc
xlat
push
aaa
repz
icebp
cwde
or
in
fdiv
pop
cli
aas
or
retf
push
jle
test
mov
repz
enter
or
aad
add
push
cmp
push
jb
push
xchg
int3
comiss
xor
cmp
mov
(bad)
aad
sub
sti
pop
adc
shl
push
cmps
loop
add
pop
in
cmp
mov
(bad)
xor
inc
pop
mov
add
sbb
popf
popf
or
lds
shl
mov
das
stos
aam
fadd
mov
inc
xor
shl
mov
push
nop
(bad)
sbb
xchg
or
ret
xor
daa
sbb
jns
scas
ret
gs
fmul
dec
iret
call
fsubr
lea
test
test
dec
mov
push
add
xlat
ret
mov
shr
adc
outs
fs
xor
dec
jg
add
pop
and
mov
les
jmp
scas
xchg
dec
daa
out
jnp
fdivr
rol
or
jbe
jns
jno
cmp
outs
out
imul
cmp
adc
fnsave
stc
rcr
(bad)
inc
mov
lea
mov
sub
cwde
dec
scas
mov
lock
loope
jge
ins
not
or
dec
jns
xchg
mov
inc
idiv
mov
bndldx
js
mov
inc
inc
outs
cld
jl
push
imul
pop
pop
hlt
sahf
cmp
or
push
or
or
aaa
(bad)
jl
pushw
xchg
jb
or
into
fs
xor
dec
cmp
inc
xchg
jecxz
outs
push
cs
push
fsubr
(bad)
loope
lahf
pushf
sub
mov
adc
fstp
push
jl
fs
jp
shr
shr
stc
dec
add
scas
mov
mov
call
mov
mov
xor
std
jbe
inc
imul
add
scas
pop
stos
or
mov
adc
ins
scas
mov
push
mov
repz
mov
jmp
clc
cmc
add
test
aaa
outs
psllq
pop
dec
adc
add
in
ds
xor
push
and
pop
popf
sub
sti
add
fldenv
or
imul
cdq
sub
dec
mov
jae
jge
jns
les
cmp
das
or
sti
and
and
imul
mov
mov
popf
arpl
cs
mov
shl
xchg
mov
add
xor
int3
mov
jge
and
les
enter
scas
push
add
iret
xchg
mov
std
loopne
jg
jmp
out
sti
cmp
cmp
xor
adc
les
sbb
cli
or
sub
sbb
sub
and
inc
inc
mov
nop
sbb
push
rep
fisttp
fisttp
and
or
mov
sar
jmp
sbb
pop
jo
xor
mov
push
xor
cli
sub
adc
jl
cmps
push
pop
in
jns
add
stos
(bad)
je
push
inc
xor
popa
popa
jo
mov
das
je
pusha
test
mov
xor
adc
jg
popf
xchg
jae
je
push
cmp
xchg
push
enter
sbb
push
xchg
mov
ret
shl
sub
or
mov
pusha
ss
add
js
popf
push
or
mov
pop
xchg
mov
xor
push
jb
sbb
push
dec
shl
mov
xchg
mov
scas
xor
outs
adc
jmp
push
or
daa
lods
shr
test
int3
mov
mov
loopne
mov
jge
sbb
call
not
dec
mov
enter
rol
(bad)
mov
adc
pop
push
cmp
rcl
cmps
cmps
ret
gs
xchg
rcl
cmp
and
add
scas
clc
mov
sbb
fbstp
inc
adc
pop
ss
and
mov
cli
jb
es
mov
popfw
fdiv
xor
movs
dec
adc
dec
jo
rcl
cli
and
sbb
add
call
mov
fst
and
sbb
imul
dec
sbb
sub
xchg
xchg
push
pop
sub
push
psubb
ret
ror
xlat
mov
adc
neg
in
xor
push
movs
call
sub
sub
mov
mov
cmps
je
push
imul
es
pusha
mov
je
pop
mov
fiadd
and
or
cli
mov
cdq
or
jo
pop
push
xchg
popf
arpl
aas
pop
sar
push
mov
fst
pop
xor
icebp
or
call
push
mov
mov
in
cwde
ins
(bad)
sub
scas
shrd
or
js
xor
fcomi
les
xchg
fdiv
xor
fcom
test
stos
add
movs
inc
fsubr
dec
nop
movs
mov
mov
test
dec
fisub
sti
pop
dec
test
ror
sbb
popa
mov
imul
pop
into
sbb
sahf
(bad)
test
popw
push
xor
jbe
add
adc
das
je
test
or
stos
loopne
lar
(bad)
neg
pop
test
outs
ss
dec
dec
jo
pop
sub
sbb
inc
dec
imul
gs
test
cmp
inc
cmps
std
es
and
mov
pushf
jge
jbe
fs
xchg
je
mov
push
test
xor
dec
add
pop
in
cmp
call
mov
icebp
retf
(bad)
lea
loope
pop
(bad)
(bad)
cmps
idiv
inc
inc
rcr
repnz
or
movs
push
mov
xor
mov
or
(bad)
mov
sbb
mov
outs
pop
xor
pop
mov
pop
mov
rol
add
imul
mov
inc
jo
xor
inc
pop
test
pop
sub
(bad)
lea
call
sub
cli
popf
mov
iret
stos
pop
or
and
sbb
xchg
fwait
out
es
mov
jle
cmp
cmp
sub
sbb
dec
fstp
pop
pop
adc
jo
(bad)
inc
outs
push
fild
es
jmp
jle
mov
sbb
fistp
jb
mov
repz
jg
pop
and
out
es
jae
push
scas
inc
mov
or
lahf
stos
aad
xor
rcr
nop
inc
sbb
and
repnz
pop
ins
shl
sub
lock
dec
dec
loope
jns
lock
and
repz
jmp
mov
ins
sub
or
jmp
fs
mov
pop
cwde
js
frstor
add
or
push
jnp
cwde
inc
push
pop
xchg
pop
mov
inc
shl
dec
sahf
mov
into
jb
push
jecxz
movs
out
(bad)
fsubr
jb
inc
(bad)
icebp
push
mov
cmp
les
int3
aam
pop
xchg
mov
and
call
ins
add
add
mov
dec
dec
xchg
push
jmp
pop
jbe
jns
dec
push
sbb
pop
jl
add
call
mov
inc
dec
jg
push
xor
pop
loopne
add
dec
adc
sti
push
and
cld
pop
or
movs
pop
aaa
(bad)
dec
fcomp
push
rcr
retf
and
test
jnp
sub
add
retf
xor
cwde
fld
les
or
mov
pop
inc
out
push
mov
jmp
fsubr
sbb
imul
shl
xor
sbb
test
jns
jge
cld
jne
cli
dec
fistp
dec
pop
mov
lds
shl
xchg
mov
inc
(bad)
cdq
mov
or
(bad)
hlt
mov
adc
repz
mov
mov
jl
dec
and
inc
or
rcr
popa
pop
into
stos
mov
loope
mov
push
retf
(bad)
mov
pop
(bad)
sub
adc
frstpm(287
cmp
outs
xchg
inc
cmp
rcl
inc
inc
push
jmp
enter
adc
jne
xlat
inc
fbld
inc
out
loop
mov
repnz
nop
pop
clc
jmp
adc
in
aam
mov
inc
icebp
xor
movs
ja
bound
push
push
cmp
mov
xor
sbb
pop
leave
dec
sbb
ss
push
dec
jge
(bad)
mov
pushf
iret
jnp
stos
add
dec
xor
std
shl
add
cli
ins
or
mov
retf
mov
inc
jmp
mov
add
jnp
push
push
mov
xchg
inc
hlt
gs
imul
or
outs
test
dec
and
adc
repz
jmp
mov
fidivr
xchg
push
fnstcw
pop
xor
add
inc
leave
stos
or
call
push
mov
mov
daa
jle
xor
fs
or
(bad)
aad
xchg
xor
cmp
mov
shr
jl
retf
sub
inc
jecxz
push
leave
movs
fldenv
ret
js
das
pop
sub
leave
mov
mov
sbb
pop
or
mov
repz
into
add
sub
stos
jb
(bad)
iret
inc
call
jge
icebp
jb
inc
outs
adc
jnp
mov
cmp
imul
rcl
bound
test
icebp
aaa
adc
sub
pop
push
scas
jae
ficomp
in
cmps
add
not
out
out
mov
icebp
jecxz
push
pop
adc
pop
repz
cmp
je
movs
and
mov
aad
jb
and
out
or
xchg
jmp
adc
in
movs
mov
das
arpl
test
mov
and
aaa
push
ja
js
pop
cmp
xor
je
ds
cwde
add
rcr
sub
addr16
scas
mov
xor
out
push
cmps
cmps
mov
push
ret
push
loopne
fisub
imul
jmp
add
mov
mov
call
dec
popa
mov
add
dec
(bad)
hlt
out
pop
into
call
xchg
inc
push
rcr
xor
addr16
retf
pop
es
daa
add
jp
stos
cmp
fiadd
push
adc
add
xchg
pop
push
inc
movs
dec
sub
dec
stos
push
fwait
leave
pusha
cmp
or
fstp
mov
jl
mov
push
outs
ror
cmps
and
xor
sbb
sub
cs
jo
dec
jno
inc
jle
jnp
fadd
shr
mov
push
outs
jmp
out
ror
and
dec
mov
lock
dec
in
and
imul
mov
fsub
or
mov
and
stc
sub
pop
in
xor
sub
push
mov
(bad)
arpl
jmp
popa
retf
out
jno
cmp
pop
mov
push
aaa
sbb
fcomi
xchg
dec
fild
jne
push
rol
adc
jmp
retf
popa
jmp
add
ds
add
lds
add
lahf
out
xchg
shr
daa
ds
mov
xor
repnz
outs
pop
jg
jg
mov
sub
(bad)
es
mov
dec
loop
stos
inc
out
jmp
shl
ror
loope
out
inc
and
mov
mov
data16
outs
push
into
push
cmp
mov
pop
sub
xor
int
push
mov
out
fdivr
outs
(bad)
popf
adc
add
push
cli
xor
pop
or
sub
dec
pusha
stos
mov
inc
sti
arpl
pop
dec
lods
sahf
inc
fwait
je
add
cmp
xchg
movs
fcom
(bad)
lock
inc
pop
imul
arpl
js
(bad)
std
fld
or
movs
fmulp
sub
or
inc
ds
aam
sub
add
cmp
in
cwde
push
movs
cmp
cmp
mov
push
inc
outs
dec
inc
movs
mov
cli
or
adc
xchg
sub
cwde
jnp
into
adc
cmp
adc
mov
int3
movs
aas
shl
enter
fnstsw
lds
fucomp
and
pop
pop
mov
or
xchg
fistp
push
icebp
jge
sub
sar
clc
(bad)
push
mov
imul
inc
fwait
pop
int
std
pop
repnz
dec
sbb
imul
dec
out
mov
popf
xchg
call
aas
fwait
retf
sbb
mov
das
pop
mov
dec
mov
add
mov
inc
or
outs
pop
push
test
xchg
sbb
popa
popf
jp
or
jp
pop
add
jle
dec
lods
xor
into
fs
das
push
cdq
movs
xchg
sti
js
sub
mov
xor
dec
cmp
scas
das
inc
jno
or
and
fs
adc
aad
scas
adc
ret
jmp
or
pop
hlt
mov
mov
gs
stos
leave
out
mov
xchg
and
jl
movs
imul
je
or
add
daa
inc
pop
inc
mov
and
add
cli
ds
repz
xlat
and
cmp
adc
push
push
rcl
dec
sub
dec
hlt
loope
loop
mov
and
stos
mov
inc
mov
sbb
mov
sub
jl
cmp
xchg
mov
outs
into
dec
push
sub
hlt
(bad)
fild
fld
push
cli
arpl
mov
les
dec
ret
sub
ror
pop
mov
adc
jg
in
dec
nop
fdiv
push
aam
pop
fcom
(bad)
cmc
xchg
(bad)
in
movs
icebp
lock
repnz
test
arpl
mov
lea
aad
and
mov
jl
sub
jecxz
add
dec
jne
or
push
(bad)
adc
sti
pop
out
mov
sbb
outs
stos
addr16
adc
xor
fs
das
test
inc
adc
imul
test
mov
mov
jge
and
pop
sbb
es
in
mov
cmps
dec
xchg
push
sbb
iret
(bad)
(bad)
jmp
int3
les
test
imul
push
adc
shr
inc
mov
add
into
outs
dec
(bad)
mov
jae
fwait
sub
gs
ret
sub
add
pop
sub
sub
cs
push
xlat
pop
inc
sbb
int3
push
iret
pop
mov
in
movs
cmp
mov
scas
repz
dec
jne
pop
gs
loopne
dec
cmp
jl
sbb
add
(bad)
movs
lock
aas
int
bound
(bad)
push
shr
aas
adc
jg
ja
jnp
int3
scas
push
std
xor
sub
cwde
fst
jnp
rcl
xchg
jb
push
xchg
imul
outs
pop
pop
pop
inc
push
js
push
stos
and
vmovss
adc
lahf
mov
sahf
test
adc
enter
and
or
pusha
shr
add
mov
dec
push
sbb
pop
xor
leave
aad
adc
jbe
in
mov
push
cli
mov
dec
dec
pop
sub
dec
in
dec
and
mov
cli
adc
test
xchg
(bad)
pop
out
cmp
ret
and
mov
mov
jb
sbb
push
mov
add
rcl
or
jo
pushf
add
jp
mov
xchg
jnp
add
add
les
jl
xchg
cdq
and
mov
repz
push
xor
mov
scas
push
repnz
sbb
sub
cmp
nop
inc
fistp
mov
push
xchg
cmps
jecxz
and
inc
sar
lds
bound
push
push
int
out
push
mov
bound
xchg
stos
inc
inc
sbb
mov
out
push
sbb
es
mov
leave
dec
imul
aam
sbb
and
xchg
lds
rcr
inc
icebp
inc
mov
push
xor
pop
stos
sar
(bad)
jmp
xchg
jmp
lods
les
mov
arpl
leave
pop
dec
mov
cmp
outs
(bad)
add
mov
fs
xor
add
xchg
cmp
cmps
mov
stc
cmp
ss
mov
xchg
push
or
sub
sbb
jns
sub
jp
stos
dec
loopne
clc
pop
pop
out
mov
loopne
mov
into
mov
mov
dec
xchg
mov
xchg
inc
pop
fwait
test
pop
jmp
cmps
gs
inc
daa
dec
add
cmps
call
lods
cli
pop
mov
xor
and
xchg
cmc
retf
nop
mov
cmc
aam
test
mov
lds
push
dec
imul
outs
inc
mov
scas
adc
pop
les
jp
xor
dec
(bad)
cld
push
cli
mov
mov
jmp
cmps
cmp
vmwrite
shl
stos
lds
inc
(bad)
enter
and
sub
stc
dec
iret
or
mov
pop
jge
mov
adc
out
inc
and
push
shl
mov
imul
add
xchg
sbb
jb
jg
mov
arpl
mov
pop
or
les
mov
or
xor
cmp
pop
hlt
outs
(bad)
pop
sub
pop
retf
cmp
sbb
test
popa
jg
mov
test
and
xor
pop
cli
xchg
cs
std
js
ret
adc
aad
ror
daa
(bad)
arpl
mov
push
mov
mov
jne
push
add
sbb
pop
je
call
pop
ret
mov
jmp
ret
xor
mov
xchg
rcl
fdiv
cli
mov
push
shl
pop
shr
mov
int
shl
ret
arpl
cmp
out
adc
data16
hlt
lahf
gs
inc
lods
inc
and
push
cli
nop
popa
test
aaa
push
xchg
retf
call
and
lock
xchg
sub
lahf
(bad)
fsub
adc
ins
ret
inc
sub
sub
shl
jle
sub
fadd
cmps
or
and
sbb
jo
add
cli
fcmovnu
mov
jno
les
or
mov
fistp
rcl
in
sub
fcom
mov
in
es
pop
pop
jnp
addr16
out
imul
and
mov
push
ins
movs
addr16
push
inc
xor
inc
jo
sbb
addr16
adc
pop
adc
push
dec
jle
push
pop
mov
add
rol
arpl
rol
sub
cli
test
not
cdq
rcl
loope
int3
xor
push
jmp
in
or
(bad)
hlt
test
dec
stos
sub
lock
stc
push
mov
pop
shl
out
xchg
mov
xchg
ret
arpl
inc
jp
inc
jno
sbb
repz
daa
cld
sahf
push
jmp
scas
dec
mov
das
or
lock
push
fdivr
adc
fsubr
ret
adc
add
imul
ins
and
pop
addr16
in
fisub
fstp
push
out
iret
or
in
loopne
xchg
call
test
xor
push
call
and
xor
int3
das
sahf
popf
mov
lahf
add
mov
leave
adc
loopne
ins
fldcw
xchg
mov
les
mov
std
xchg
test
push
mov
mov
cld
cmp
jle
fld
xchg
ja
pop
xchg
or
jb
jmp
mov
in
leave
cmps
pop
sub
test
out
ds
inc
mov
mov
(bad)
dec
test
cmps
outs
mov
add
arpl
jnp
arpl
mov
push
movs
mov
sar
ins
pop
inc
mov
jmp
xor
push
(bad)
jl
jne
std
xlat
ss
jae
pop
aaa
pop
push
popa
sub
cmp
retf
inc
sbb
imul
or
popa
popf
test
inc
fisubr
add
nop
aaa
xor
jecxz
movups
je
bnd
push
popa
fmul
or
jne
pop
in
fs
xchg
cmp
test
loope
lods
mul
inc
xchg
inc
inc
push
mov
xchg
inc
ja
popa
add
int3
(bad)
mov
arpl
arpl
mov
(bad)
pop
inc
in
pusha
jg
(bad)
jno
repnz
rol
jnp
movsx
and
adc
rcr
lahf
and
dec
lods
sbb
into
stos
fwait
sub
jg
fs
movs
and
inc
in
xchg
push
adc
xor
cmp
xchg
mov
xchg
inc
int3
jnp
dec
sbb
iret
push
cmp
mov
ds
push
jnp
pop
cmp
je
loop
adc
xor
outs
loopne
adc
jmp
add
dec
or
in
sub
xchg
cmps
jmp
push
xchg
scas
sti
das
scas
jl
sar
xchg
stos
scas
fldenv
and
dec
aad
out
(bad)
loop
dec
test
pop
pop
sub
mov
xor
aas
mov
mov
test
in
pop
jmp
cmp
push
xlat
cmp
out
dec
xchg
fcmovb
into
add
mov
mul
dec
jae
in
fadd
(bad)
ret
xchg
rol
add
cmp
xor
fbld
pop
imul
sti
xlat
xchg
nop
pop
fldcw
pop
lock
xchg
and
enter
and
clc
cmp
fisttp
cwde
out
(bad)
jo
mov
xchg
push
pop
xchg
imul
jns
mov
mov
adc
or
xchg
mov
ror
adc
fiadd
xchg
rcr
imul
iret
mov
jo
adc
fwait
xor
dec
in
das
jmp
aad
out
scas
push
or
repnz
outs
out
jmp
mov
xor
mov
in
enter
test
jmp
shl
mov
lods
scas
cmp
adc
int3
inc
addr16
mov
out
xchg
in
test
(bad)
sbb
jmp
jae
dec
xchg
push
fmul
cs
pop
outs
fistp
cmps
dec
adc
ret
adc
in
retf
test
or
jmp
cld
fidivr
outs
sub
xchg
pop
ins
inc
xor
jle
call
adc
dec
or
dec
test
fbld
and
fcmovnu
mov
dec
push
jl
(bad)
mov
int3
or
mov
pop
sub
sub
adc
lods
scas
xchg
loopne
popf
mov
inc
out
daa
xlat
mov
push
and
xor
jge
xchg
or
sbb
mov
popf
repz
lds
imul
adc
inc
popf
ins
test
test
in
call
imul
(bad)
fidiv
shl
cmp
fld
pop
pop
push
dec
test
test
fsubr
jmp
aaa
scas
mov
pop
jmp
mov
sbb
and
cli
fdivr
push
out
das
pop
retf
fidiv
lds
ins
xchg
cld
inc
out
ret
sub
dec
mov
sar
fadd
std
xor
add
add
in
add
jmp
add
add
stos
adc
inc
xchg
pop
movs
retf
add
add
cmovo
std
or
lods
sbb
pop
es
ret
sbb
sbb
retw
cmp
div
loope
cmp
pop
push
clc
push
aaa
xchg
inc
cmp
jl
enter
cdq
sub
add
push
es
scas
and
push
inc
mov
sbb
ds
in
or
leave
test
(bad)
retf
adc
repz
add
jecxz
fimul
ja
imul
or
outs
clc
call
(bad)
and
add
push
or
call
lea
std
shr
jbe
xor
or
sub
xor
fsub
push
aaa
mov
mov
or
sahf
out
adc
mov
pop
jg
sti
scas
sub
mov
push
add
mov
mov
bnd
xchg
cmp
out
push
sub
mov
jns
or
push
clc
out
adc
mov
mov
icebp
clc
add
or
jp
adc
xchg
stos
dec
push
pop
xchg
xor
popa
or
mov
jnp
mov
iret
push
fnstcw
and
dec
jb
or
sub
add
popf
add
out
pop
push
out
and
movs
and
pop
jge
and
dec
mov
adc
cmp
lods
add
push
fiadd
bound
repnz
ins
sahf
jo
arpl
sbb
sbb
jl
xchg
jbe
cmps
mov
cmp
mov
pop
add
mov
ds
std
jge
xchg
sar
imul
mov
gs
arpl
push
cmp
sub
mov
cmp
fisub
push
lea
xchg
(bad)
sub
cmc
aad
add
daa
push
dec
jb
mov
lock
ins
pushf
cld
push
and
imul
shl
xchg
fs
xchg
or
loope
and
mov
xchg
jae
pop
cmps
xor
jl
(bad)
loop
xchg
add
push
push
jne
shr
adc
retf
mov
out
out
arpl
push
inc
push
call
(bad)
lea
(bad)
pop
cmps
cmps
push
cmps
xchg
test
movs
xchg
adc
adc
popa
and
int
and
(bad)
aam
or
pop
les
jp
mov
les
jb
inc
test
adc
sub
inc
jbe
sub
int
sub
jbe
js
push
inc
inc
fdivr
pop
jmp
mov
jo
jne
add
jae
cmps
sub
pop
ja
inc
into
pop
sub
add
mov
push
pop
jnp
jns
imul
es
xor
sub
jno
lahf
xchg
ins
push
dec
mov
cmp
sub
xchg
inc
dec
jae
imul
(bad)
push
loopne
mov
aam
pop
ins
sbb
lahf
jecxz
pushf
jne
push
sbb
mov
pop
int3
xor
stos
in
(bad)
fwait
sbb
adc
mov
bnd
shl
movs
push
out
ds
sti
cli
(bad)
mov
jne
or
lods
popa
pop
mov
lock
gs
out
loopne
loope
fwait
pop
sbb
shr
xchg
dec
pop
jb
ror
cmp
pop
mov
test
mov
loope
inc
fxch
jg
loop
and
les
add
xlat
mov
daa
addr16
dec
aas
adc
adc
arpl
xchg
push
dec
push
jb
and
dec
ja
ds
mov
cmp
adc
mov
fs
int
pushf
cwde
and
sub
sbb
ss
cdq
(bad)
sbb
pop
mov
push
and
xor
mov
and
sahf
mov
jmp
sbb
imul
dec
outs
cli
das
add
sbb
push
cld
sub
xchg
aam
pop
rcr
cdq
adc
mov
xchg
not
ds
rcl
jl
mov
mov
fcomp
cmp
or
adc
rep
xchg
(bad)
pop
mov
inc
into
mov
pushf
push
repz
rcr
xor
movs
jae
cli
pop
hlt
je
call
pop
dec
test
mov
imul
inc
les
sbb
mov
sbb
scas
retf
enter
fmul
sbb
popa
fnsave
jmp
cli
mov
mov
add
gs
mov
xchg
and
sbb
imul
fs
jecxz
add
sbb
jecxz
mov
ja
outs
imul
mov
cdq
jle
fmulp
add
aaa
mov
mov
push
(bad)
mov
scas
mov
inc
or
push
fs
xor
retf
mov
(bad)
fcmovu
cwde
rol
lock
repz
pop
push
scas
pop
xor
movs
inc
arpl
enter
in
mov
push
in
cmc
out
jns
fs
or
jp
mov
gs
mov
dec
and
(bad)
retf
jbe
sahf
fstp
jb
rcl
rcr
cs
dec
pop
(bad)
sbb
push
push
repnz
arpl
inc
je
iret
inc
dec
call
push
xchg
sub
stc
repnz
inc
pushf
cmp
mov
sbb
jae
aad
sbb
repnz
inc
arpl
jle
leave
in
ins
inc
dec
push
out
jp
inc
mov
int3
ds
or
push
sbb
aam
fisubr
jmp
scas
push
icebp
jns
dec
push
fmul
cmp
stos
sub
sub
test
inc
mov
(bad)
xor
popf
ss
or
cmps
shr
inc
fst
inc
imul
repnz
mov
pop
cmp
mov
pop
inc
test
shl
aaa
cmp
mov
mov
add
mov
cmp
je
xchg
sti
out
in
test
imul
mov
inc
js
cmp
es
(bad)
movs
fisubr
jg
fwait
data16
and
js
dec
jne
(bad)
movs
out
jae
cwde
in
push
ret
cmp
mov
movs
mov
ror
cmp
add
push
sub
mov
fistp
cmp
ja
jb
jmp
xchg
mov
dec
sub
mov
push
gs
sub
in
sub
jnp
and
sbb
daa
sbb
sbb
pop
xor
pop
pop
and
cwde
mov
call
or
xchg
pop
int3
mov
cmps
dec
mov
inc
jb
(bad)
(bad)
push
mov
mov
loop
dec
pop
les
div
pop
mov
xchg
push
xchg
test
sar
jb
jno
mov
jmp
dec
hlt
mov
mov
scas
and
imul
xchg
or
hlt
js
add
retf
or
jno
fisub
(bad)
out
aad
(bad)
mov
shl
or
out
pop
into
mov
aam
in
jge
add
cmc
jmp
in
iret
lahf
adc
cwde
idiv
push
sub
outs
xchg
fld
push
adc
stos
fwait
rcl
fcmovnu
jbe
add
(bad)
stos
xlat
stos
cdq
push
js
fldenv
mov
leave
(bad)
sub
pop
movs
sub
inc
hlt
call
fisubr
out
xor
lods
arpl
cmp
xor
push
ret
jns
pop
jns
pop
jmp
ja
and
push
and
add
out
push
jmp
jb
fidiv
pop
push
sub
jle
mov
xor
mov
imul
and
lods
scas
leave
(bad)
dec
jmp
hlt
pop
inc
test
push
jne
sub
jp
ins
stc
mov
fidivr
aas
jle
dec
cmps
pop
or
inc
jl
aas
stos
adc
sub
xor
mov
inc
dec
retf
xor
jp
bound
push
rcl
push
jge
maskmovq
test
push
lods
pop
cmp
(bad)
sahf
popa
mov
inc
mov
imul
mov
mov
(bad)
mov
call
adc
pusha
jecxz
int
gs
push
inc
jb
adc
mov
test
sub
and
push
xor
(bad)
or
js
cmc
xchg
adc
pushf
sub
neg
sbb
shr
sti
into
mov
or
mov
adc
mov
cmp
and
jae
mov
mov
or
shl
jne
cld
jecxz
cmps
jb
mov
mov
or
mov
xchg
imul
jne
sahf
push
mov
mov
(bad)
mov
xchg
xor
mov
mov
les
popf
movs
ret
cs
je
pop
icebp
test
dec
test
je
enter
retf
jge
fadd
or
js
jbe
popa
mov
xlat
dec
jl
stos
mov
jp
outs
sub
push
sbb
imul
imul
sbb
cmc
inc
mov
stos
cdq
in
pop
mov
cmp
push
arpl
mov
xchg
sbb
xchg
ret
xchg
popf
mov
mov
jle
arpl
arpl
loopne
and
sbb
test
sbb
cdq
les
jmp
fist
scas
jbe
frstpm(287
push
jecxz
pop
mov
mov
dec
xchg
mov
aaa
pop
jle
les
pusha
outs
js
or
push
adc
dec
jge
add
repnz
lods
call
pop
add
or
es
or
cmp
inc
cdq
and
push
jp
xor
cmp
dec
mov
leave
mov
cmp
icebp
fwait
nop
sub
mov
es
push
add
cli
pop
and
dec
ss
sbb
gs
ins
sti
mov
call
push
out
jno
mov
inc
inc
sbb
mov
sbb
push
push
push
mov
(bad)
jbe
div
mov
adc
loope
sub
shr
mov
pop
pop
xor
jl
sbb
stos
mov
sbb
(bad)
aad
cmps
adc
bound
ficomp
das
in
aas
sbb
jne
lods
jns
or
mov
test
mov
sub
mov
or
mov
je
jno
loope
dec
cmp
fdiv
outs
in
jmp
fidiv
aaa
rol
and
movs
mov
and
ins
sbb
in
rcl
je
outs
jmp
enter
cmp
dec
(bad)
jl
or
iret
dec
sbb
xchg
pop
pushf
ja
dec
dec
inc
pop
in
movs
mov
mov
scas
xchg
ds
out
mov
jmp
dec
lods
adc
or
lods
fidiv
sahf
sar
mov
and
xchg
ret
xor
dec
(bad)
nop
pop
mov
sub
sub
outs
sbb
sub
(bad)
jmp
push
inc
cmp
cmps
lock
imul
clc
mov
push
mul
shl
call
sti
inc
jl
push
dec
mov
add
mov
jmp
loopne
sub
imul
ret
cli
arpl
pop
sbb
xor
xchg
cmp
lods
popf
mov
push
jp
mov
in
or
add
sub
and
jmp
cmps
cwde
push
scas
or
add
je
xor
shl
test
aam
pop
int
sub
in
add
enter
fsubrp
pop
sbb
sahf
add
push
mov
in
mov
ret
out
dec
mov
test
xchg
sub
es
mul
aam
idiv
xchg
xchg
xor
sub
iret
popf
aam
mov
sub
mov
in
aad
fnstsw
in
cmp
int
pusha
sbb
dec
cli
into
outs
or
in
or
push
std
(bad)
pop
pushf
gs
dec
xchg
jne
xchg
adc
xor
retf
ins
rol
mov
cmp
scas
dec
movs
rcr
jae
dec
mov
(bad)
outs
jo
sub
sub
jo
add
cmp
or
xor
pop
sub
and
popf
ret
es
int
dec
dec
scas
xor
cmps
ds
and
jo
sub
jmp
or
xchg
xor
fdiv
dec
push
shl
and
mov
pop
sbb
(bad)
push
sti
mov
pop
sbb
clc
push
mov
pop
add
sub
addr16
popf
cmps
test
pop
repz
(bad)
ds
mov
dec
adc
(bad)
std
push
ss
or
test
jmp
repnz
or
add
inc
(bad)
cmp
or
cmp
rcl
or
mov
sub
pop
mov
sbb
mov
stos
inc
add
call
xchg
sbb
dec
jg
mov
pop
rcl
ret
xor
xchg
and
jns
mov
and
pushf
mov
out
loope
movs
stos
mov
popa
ret
bound
aam
loope
scas
fwait
call
int
outs
inc
sbb
pop
mov
(bad)
pop
pop
adc
ins
out
jl
imul
adc
push
(bad)
push
mov
inc
inc
sbb
jmp
cmp
loopne
xchg
out
(bad)
(bad)
loopne
xchg
push
leave
jl
aad
push
mov
adc
sub
scas
(bad)
cli
mov
nop
shl
jbe
test
enter
out
cmp
ficomp
movs
pop
jecxz
add
inc
push
inc
push
adc
inc
mov
out
sahf
xor
popa
hlt
outs
outs
les
shr
hlt
and
ins
add
sbb
mov
ja
push
out
adc
lea
xchg
aas
jge
(bad)
fsub
add
rcl
mov
sub
pop
dec
adc
out
or
test
pop
fistp
ret
push
test
xchg
xor
jle
add
adc
and
or
cmps
mov
lock
sbb
pop
lods
jmp
dec
loopne
mov
sahf
out
outs
cmp
or
mov
ss
mov
ja
cmp
stos
loop
and
jb
push
add
mov
hlt
inc
cmps
adc
ja
into
mov
setp
push
aad
jno
jb
xor
fcmovne
movs
jge
repnz
lock
jg
sbb
shl
xchg
lea
sidtd
stos
cmp
fidivr
xor
(bad)
sbb
cmp
push
dec
ret
jle
pop
mov
jle
daa
movs
dec
leave
mov
mov
and
jp
pop
jns
repz
aad
push
pop
es
mov
add
jmp
cmp
jo
loopne
loope
outs
mov
or
push
enter
pop
out
push
enterw
dec
mov
jmp
mov
jae
call
repnz
mov
(bad)
fnsave
stc
les
dec
mov
aad
mov
fs
retf
pushf
in
mov
pop
jge
inc
stos
nop
lods
inc
js
mov
js
repnz
add
push
push
sub
jbe
mov
push
test
push
push
mov
dec
push
das
xchg
push
add
sbb
pop
inc
cs
cs
dec
test
cmp
dec
test
je
fs
sahf
in
popa
mov
call
mov
xchg
add
sbb
sbb
push
push
cmp
cmps
mov
lea
(bad)
fisubr
loopne
lock
icebp
inc
outs
mov
mov
ds
ret
lods
scas
ja
fldcw
dec
fisttp
scas
imul
adc
mov
arpl
xchg
imul
push
addr16
xor
mov
fdiv
xchg
ror
push
jge
mov
data16
cmp
stos
mov
pop
and
rol
jnp
and
mov
sbb
jmp
cmp
popf
ins
mov
dec
fwait
jge
mov
nop
test
sbb
inc
dec
movs
hlt
mov
fbstp
dec
lods
jge
repnz
out
mov
int3
imul
sub
shl
mov
data16
cmp
xchg
fwait
inc
shl
jns
dec
adc
imul
push
push
out
outs
inc
and
into
shl
das
dec
aaa
aaa
sar
rcl
add
sar
stos
icebp
dec
jg
aad
mov
sub
mov
and
mov
iret
pushf
sbb
push
dec
stos
(bad)
retf
cmp
pop
pusha
pop
lods
mov
jle
popf
add
mov
mov
lds
xchg
and
inc
pop
cmc
repnz
push
push
cmp
mov
mov
mov
xor
fs
ret
mov
mov
outs
mov
jp
std
cmc
aad
mov
add
add
sub
popf
(bad)
popf
fidivr
in
sbb
mov
dec
fld
dec
dec
sbb
outs
mov
sub
dec
adc
xor
shr
inc
mov
ret
mov
loope
and
mov
push
mov
xchg
or
add
cmp
sar
sub
cli
cmc
dec
add
inc
pushf
jmp
jb
call
mov
sub
xor
(bad)
(bad)
ja
jno
ror
cwde
call
or
dec
imul
adc
nop
jne
xchg
xlat
data16
adc
mov
jne
pop
ins
add
int3
and
mov
in
mov
les
std
in
mov
les
xchg
ret
lahf
in
dec
repz
scas
sub
push
adc
mov
mov
je
push
cdq
test
sti
ins
cmp
sub
clc
push
cmp
bound
adc
out
retf
into
aam
ret
mov
mov
pop
fldenv
inc
int3
les
pop
movs
and
pop
xor
xchg
scas
(bad)
bound
pop
pushf
lock
popf
xchg
cdq
add
test
sbb
or
add
xor
repz
test
out
dec
push
mov
aas
daa
adc
clc
scas
test
cmp
mov
popa
jg
(bad)
std
pop
jp
sar
xchg
icebp
xor
dec
push
lea
xor
xor
fisub
pushf
adc
cs
xor
call
add
xor
bound
push
xchg
movs
ja
inc
adc
test
jmp
jo
int3
aaa
or
and
dec
dec
jp
fst
cmp
lock
jecxz
ds
aam
sbb
imul
and
mov
cmp
fdivr
jns
lods
outs
scas
ds
sbb
cmp
jbe
sbb
out
je
iret
aam
sub
adc
int
or
cmp
sbb
add
lds
add
fmul
inc
push
cmp
movs
lods
(bad)
repz
call
mov
inc
sahf
xchg
int
xchg
and
das
ret
mov
cdq
mov
inc
mov
loop
push
(bad)
inc
sbb
cmp
ffree
mov
cs
in
stc
dec
or
js
ret
call
sub
or
fadd
pop
add
and
ja
mov
or
popf
leave
xor
mul
lods
mov
retf
pushf
aas
and
test
adc
pop
out
(bad)
mov
fcmovne
adc
add
cmp
not
push
nop
sbb
movs
pop
(bad)
ret
mov
dec
(bad)
cmp
fsubr
(bad)
dec
nop
(bad)
pop
push
pop
push
xchg
jo
mov
test
xchg
or
pop
cld
lods
imul
xor
sbb
adc
mov
sbb
adc
fwait
lahf
movs
sub
outs
cmp
xchg
hlt
dec
aam
mov
jns
mov
shr
movs
lods
std
sar
fimul
ss
loop
dec
scas
mov
retf
adc
ja
adc
mov
xchg
lods
std
sbb
je
xlat
loop
xchg
addr16
sbb
(bad)
cli
lea
dec
push
jmp
loopne
push
int
mov
test
in
or
(bad)
aad
call
cmp
out
cmp
loopne
in
dec
je
or
jo
push
retf
les
out
xchg
xor
inc
lsl
lea
cmps
hlt
ret
repnz
xchg
jno
icebp
cmp
add
sub
test
inc
dec
jae
cmp
je
int3
pop
retf
xor
push
jmp
loope
mov
sahf
inc
xor
dec
outs
pop
imul
mov
enter
imul
dec
sahf
mov
mov
dec
add
push
mov
ficom
retf
dec
repnz
mov
mov
or
pop
out
leave
test
adc
dec
sbb
add
test
pusha
call
(bad)
pop
xor
or
jns
dec
mov
pop
shl
inc
sbb
dec
gs
xlat
iret
mov
or
out
xchg
shl
pop
and
je
or
dec
mov
pop
adc
(bad)
je
xor
out
pop
fisttp
mov
mov
pop
lea
sub
outs
repz
push
(bad)
lods
push
in
dec
inc
loope
jo
lods
aad
aam
xchg
sbb
sbb
adc
call
inc
test
test
mov
nop
mov
mov
ret
(bad)
into
or
bound
pop
mov
jo
pop
cmp
mov
out
sub
outs
mov
lock
mov
mul
jl
cmp
or
stos
or
mov
movs
leave
outs
rcr
inc
cmp
cli
mov
fist
repnz
call
adc
stc
out
push
inc
mov
mov
cs
dec
(bad)
call
in
jl
xor
jno
in
imul
push
mov
rcr
mov
jmp
jne
pop
rcr
pushf
scas
or
or
ds
scas
dec
repnz
mov
rol
pop
sbb
adc
xchg
jecxz
cwde
mov
cmp
jnp
jne
icebp
push
sub
das
mov
pusha
inc
xor
inc
inc
add
push
jno
sar
bound
push
add
xor
fidiv
add
xor
jle
mov
xchg
mov
sbb
add
mov
mov
lds
xor
jns
add
enter
out
push
sahf
mov
fucom
cmp
dec
aad
or
mov
push
push
retf
push
or
pop
dec
mov
arpl
xchg
js
mov
hlt
push
mov
xlat
lea
fcomp
stos
out
inc
inc
push
push
push
pop
inc
sahf
pop
dec
add
xor
scas
ds
les
add
retf
pop
mov
mov
pop
ja
and
mov
bound
fdiv
lods
clc
xor
in
fst
inc
aaa
mov
xor
mov
sti
(bad)
mov
pop
mov
sbb
out
push
pusha
(bad)
dec
pop
inc
dec
jg
push
arpl
fidiv
(bad)
push
adc
push
ins
xchg
js
imul
add
int3
lahf
nop
inc
retf
out
dec
or
iret
xchg
pop
push
out
push
test
xchg
mov
mov
mov
pop
imul
leave
or
add
inc
dec
movs
out
pop
aas
mov
jns
ror
dec
mov
mov
add
mov
and
pop
xchg
cmp
xor
(bad)
mov
push
test
or
loop
out
mov
lods
or
dec
jbe
ins
mov
jns
pop
mov
cdq
mov
movs
mov
hlt
xchg
lahf
xor
sub
clc
jae
data16
stc
sahf
cmp
fs
push
xchg
push
fisubr
sub
pop
jmp
push
neg
jbe
in
push
(bad)
jnp
and
ror
sub
test
xchg
add
fmul
mov
pop
xchg
stos
jecxz
or
sbb
mov
data16
jb
mov
or
xchg
movs
inc
jne
add
test
xlat
mov
and
jl
and
test
popa
push
scas
lock
inc
sub
das
test
sbb
stos
js
dec
div
jmp
mov
iret
out
ret
movs
push
popa
pop
and
stos
jecxz
ja
jle
in
cli
scas
cmp
add
lds
push
jge
imul
mov
jbe
push
mov
jle
fimul
hlt
popa
repnz
fucom
push
into
jo
or
or
aas
data16
dec
data16
outs
mov
cld
pop
mov
cmp
in
imul
mov
(bad)
retf
pop
mov
inc
mov
or
stos
sahf
add
cmps
mov
fsubr
mov
stc
fsubr
mov
rcl
jo
clc
and
or
dec
fld
fsubr
leave
rcl
aaa
pop
(bad)
jge
lock
or
imul
stos
push
cmp
xor
rcr
add
or
inc
jge
inc
pop
pop
add
inc
xchg
inc
iret
mov
dec
add
and
cdq
push
push
addr16
inc
adc
out
bound
lea
cmp
cmp
repnz
(bad)
call
ror
rcl
push
leave
arpl
jge
(bad)
pop
out
push
push
dec
push
mov
push
call
pop
adc
cld
push
sub
fld
pop
push
dec
jbe
rcr
outs
xlat
mov
in
stc
jmp
xor
leave
push
aaa
call
outs
mov
pop
scas
cs
repnz
enter
cmp
retf
push
mov
(bad)
sbb
mov
cmp
retf
xchg
pop
imul
push
fnstenv
inc
pop
popa
mov
add
cdq
(bad)
sbb
ins
pop
in
sbb
mov
push
dec
push
repz
ss
cmp
enter
mov
in
call
fucomp
push
ja
mov
dec
dec
ins
push
mov
sahf
add
ja
les
pop
push
fidivr
inc
and
rol
fs
push
xor
call
xchg
sub
or
push
ja
es
std
jge
fidiv
add
jp
jecxz
out
pop
bound
and
xlat
mov
add
adc
push
pop
imul
cmps
add
test
mov
movs
dec
pop
xchg
jns
inc
inc
test
imul
push
xor
sub
add
cmp
shl
xor
inc
or
scas
(bad)
cld
adc
xchg
sar
jne
in
add
clc
or
adc
mov
sbb
add
cmps
(bad)
movsx
mov
add
pop
repz
fldenv
mov
mov
sub
adc
sbb
push
or
in
add
loop
(bad)
hlt
mov
stos
(bad)
jp
pop
fwait
ins
dec
push
lea
add
mov
cdq
jns
out
lods
popa
mov
and
add
and
popf
stos
xor
iret
xor
xor
jmp
out
repnz
adc
pop
sub
into
je
dec
jge
mov
pop
and
rol
cs
nop
imul
jmp
repnz
sbb
test
test
mov
push
dec
aas
mov
jne
add
rcl
push
loopne
ror
inc
jl
scas
fcmovne
into
daa
(bad)
jmp
in
push
or
mov
dec
js
dec
push
lods
mov
mov
outs
scas
pop
ss
aaa
mov
js
push
pop
jle
lods
out
push
outs
stos
cmps
dec
and
pushf
add
pusha
xchg
or
mov
jbe
xchg
mov
sub
and
mov
sub
rcl
fisubr
pop
add
adc
jae
mov
dec
jnp
push
jmp
sbb
cmp
shl
fisub
or
jl
cmp
inc
or
fdiv
xchg
retf
jle
ror
pusha
mov
and
cld
lahf
and
stc
sbb
mov
daa
bound
icebp
xchg
sub
xor
mov
cmp
cs
xor
test
sahf
loope
jns
sbb
in
cmc
rcr
push
add
or
inc
sbb
inc
mov
dec
pop
ficomp
mov
cmp
adc
dec
leave
call
popa
or
mov
aad
cmps
xchg
inc
pop
int
ja
pop
popa
push
jo
lea
add
push
mov
lea
out
bound
cs
sub
cmp
inc
sub
push
cmc
rcr
(bad)
gs
fdiv
sbb
jb
lock
sub
mov
jge
mov
cs
xchg
mov
dec
sbb
sub
sub
and
sub
inc
xchg
mov
call
sbb
add
cwde
cs
mov
outs
mov
push
bound
lods
xchg
clc
mov
pop
inc
in
push
push
pop
push
pop
sub
pop
jge
call
sub
inc
dec
add
and
xor
mov
mov
scas
sub
adc
inc
stos
sub
shl
in
jl
jmp
jmp
ins
jmp
xor
ins
(bad)
cli
and
repnz
inc
mov
push
or
sub
ins
call
jp
jae
or
pop
hlt
push
sub
loope
outs
daa
pop
pop
sub
and
ror
add
mov
pop
loop
and
(bad)
xchg
movs
ss
mov
test
xor
test
inc
ror
test
je
sub
call
push
lock
(bad)
mov
nop
call
test
test
xchg
xlat
js
pop
push
pop
cmps
dec
out
sbb
ret
lds
(bad)
cmps
or
sub
popa
(bad)
sbb
es
push
sahf
mov
push
repnz
in
inc
stc
pop
inc
pop
stos
or
in
sbb
jno
cmc
push
daa
cli
in
xchg
in
lea
out
xchg
pop
inc
push
lea
retf
pushw
dec
jne
sbb
jae
cs
ja
sub
add
int3
lods
jae
icebp
xchg
dec
xchg
pop
in
bound
dec
push
or
retf
adc
push
call
xchg
js
mov
(bad)
aad
xlat
das
mov
push
aad
or
and
arpl
xchg
bound
sbb
call
and
xchg
test
sub
inc
jne
(bad)
sub
mov
cmc
cmps
pusha
fsubr
fcomi
or
mov
sub
jae
scas
and
mov
lods
pop
stos
jne
adc
cmp
retf
jmp
hlt
xchg
idiv
cmp
mov
lds
cld
sub
cld
shr
lods
sub
xlat
movs
(bad)
shl
movs
mov
mov
rcl
sub
xchg
js
in
fisub
mov
xor
out
fiadd
retf
retf
dec
hlt
lds
in
test
imul
or
arpl
imul
movs
push
jmp
push
sub
xchg
mov
sub
out
cmp
jge
and
repz
mov
cdq
call
pop
add
popf
pop
or
aam
popa
sbb
pop
rcr
out
and
and
test
mov
jmp
push
les
cmp
xor
mov
inc
jno
sbb
pop
nop
stc
cmp
mov
mov
and
xchg
pop
push
push
or
push
fnstsw
in
xchg
xchg
out
and
or
enter
int3
or
cmp
jne
jb
xchg
push
sbb
popf
gs
inc
xlat
test
outs
inc
cli
xchg
nop
test
cs
or
movs
loopne
arpl
aam
sahf
sbb
jecxz
cmp
and
xor
in
adc
mov
fimul
movs
lods
rol
and
dec
mov
rcr
jg
xor
cmp
in
push
push
loop
mov
jbe
inc
xchg
jge
inc
das
push
adc
inc
shl
inc
pop
sub
pop
xchg
or
adc
icebp
cmp
js
les
pop
rcl
xor
je
xchg
loope
scas
or
loop
mov
xchg
pusha
xchg
cmps
jnp
or
sub
sbb
in
jg
(bad)
push
in
jp
xchg
sbb
scas
cwde
fnstenv
loope
push
or
inc
xchg
sub
jmp
sub
stos
inc
dec
lock
xlat
lea
mov
int
fwait
inc
sets
mov
test
jle
jae
shl
jb
cmp
mov
int
cmp
in
sbb
retf
icebp
or
cwde
iret
leave
loope
pusha
loop
mov
div
sub
adc
dec
pop
mov
out
outs
test
mov
hlt
inc
push
jge
shr
mov
pop
push
test
xor
mov
enter
xor
sub
repnz
bswap
push
test
aaa
inc
xlat
imul
(bad)
sbb
push
pop
jge
push
ja
push
pop
jno
cs
jne
mov
cmc
repnz
js
enter
push
xor
push
pop
jg
in
outs
in
mov
pushf
push
ret
popf
ja
jns
lods
sub
shr
xor
or
sub
retf
ret
bound
div
or
std
or
push
or
popf
mov
cmps
mov
repz
pop
dec
data16
cmp
cmps
test
cli
pushf
cmp
cdq
mov
bound
loope
in
aaa
cmp
fld
cdq
aaa
pop
push
hlt
mov
mov
loope
sub
mov
jp
cli
ret
mov
sbb
ficomp
xchg
jmp
jno
jmp
xchg
out
adc
pop
xor
mov
mov
test
mov
or
daa
adc
shl
sub
stos
add
fadd
ret
push
mov
mov
outs
mov
pop
mov
push
jbe
adc
aam
xchg
adc
stos
push
xor
stos
push
add
push
jbe
push
mov
rcl
inc
mov
not
fsub
mov
adc
out
add
enter
adc
mov
xchg
retf
call
stos
cmps
scas
ror
fistp
xchg
push
pop
sub
xor
xchg
shl
lods
outs
jmp
pusha
rol
jnp
inc
call
mov
xchg
cmp
punpckldq
xor
adc
inc
push
jne
pop
mov
jg
xor
popa
add
xor
cwde
aam
cwde
retf
jmp
pop
xchg
jmp
or
add
not
icebp
in
daa
cli
dec
jle
xchg
mov
sub
and
movs
imul
fisub
xchg
(bad)
pop
mov
fistp
mov
or
or
out
sub
xchg
mov
ins
test
pop
push
jnp
mov
cwde
adc
cdq
cwde
push
enter
push
pop
jp
imul
leave
pop
add
pop
dec
repnz
loope
js
imul
adc
pusha
mov
jecxz
push
ret
cs
mov
adc
(bad)
xor
xlat
mov
cmp
stos
aam
movs
(bad)
or
daa
data16
inc
adc
aad
daa
sbb
jle
cmp
jmp
jb
movs
call
ins
inc
out
mov
mov
(bad)
call
call
cld
ins
pusha
inc
scas
ins
jnp
pop
mov
ret
or
pop
adc
mov
add
xor
or
outs
jo
cmp
jo
push
or
sub
push
mov
bound
inc
add
add
clc
shr
lahf
cmc
call
xor
dec
popf
stos
mov
push
out
or
ins
mov
dec
push
scas
and
out
and
inc
(bad)
fstp
mov
inc
leave
pop
out
mov
repz
and
adc
scas
sub
lods
out
dec
ja
mov
push
xchg
cs
sub
mov
lea
push
out
shl
fs
push
shl
sbb
gs
pop
pop
mov
repnz
daa
ret
sub
and
adc
(bad)
inc
cmc
jo
js
cmp
ds
daa
outs
(bad)
in
iret
lea
inc
pop
inc
inc
test
data16
xlat
repnz
lods
cmp
pop
xchg
jne
sub
mov
cmps
imul
shl
std
call
lods
cmp
push
cmc
inc
fstp
ret
scas
ficom
mov
mov
sahf
adc
sub
fsub
or
in
push
mov
cli
in
xchg
scas
test
push
fbld
dec
gs
cmp
mov
ins
cmps
imul
popa
shr
mov
xor
cli
lock
lock
fnstcw
cmp
(bad)
icebp
loopne
ins
jns
xor
mov
push
jp
test
lock
xor
add
scas
cmp
sub
pop
dec
out
xor
jecxz
mov
scas
pop
outs
or
es
cli
xor
int
mov
mov
cwde
adc
adc
test
movs
test
retf
imul
mov
shr
inc
mov
clc
cmc
cmps
push
jnp
xchg
arpl
mov
cs
adc
push
popa
sbb
iret
add
cdq
add
nop
dec
push
cmps
push
aad
mov
push
mov
fcom
dec
retf
sub
cmps
sub
push
jl
pop
call
outs
sbb
test
bound
sub
call
adc
dec
outs
sub
mov
iret
(bad)
add
sbb
in
jo
out
xor
lahf
fbld
push
adc
or
ja
outs
xchg
cmp
lods
clc
das
push
jg
dec
stc
rcl
add
mov
ret
call
imul
pop
jp
daa
inc
(bad)
ins
arpl
aad
xchg
dec
cmp
lea
cmps
sub
mov
adc
dec
inc
dec
shl
ins
ins
pop
das
sbb
loop
bnd
imul
popf
sbb
mov
inc
and
cmp
cli
in
jp
ins
call
mov
mov
push
sub
arpl
mov
mov
push
icebp
bound
gs
sub
stos
pop
shl
ins
lods
pop
xchg
repnz
ss
lock
sbb
into
mov
jg
lods
js
test
fnstenv
cmp
imul
(bad)
inc
movs
cmp
xchg
adc
xchg
add
fist
pusha
cmp
jb
fsqrt
test
movs
addr16
mov
fnstcw
rol
mov
shr
jmp
jae
mov
push
or
test
jns
lods
inc
clc
dec
jg
rol
mov
sub
imul
into
js
cmp
mov
sbb
movs
add
pop
js
clc
xchg
aaa
xchg
sub
mov
cmp
(bad)
push
dec
xchg
mov
cmp
leave
ja
pop
mov
sbb
mov
hlt
jmp
xchg
push
shr
sub
xchg
dec
dec
(bad)
mov
js
and
sbb
sub
xor
jmp
gs
dec
mov
adc
xor
lea
add
(bad)
xchg
pop
and
adc
or
pushf
push
lds
test
push
mov
fcomip
enter
jnp
and
inc
sbb
sub
and
cmp
lods
ins
test
mov
adc
dec
fs
retf
fwait
leave
test
hlt
in
imul
out
test
scas
mov
mov
ror
lahf
dec
jbe
adc
outs
adc
in
sahf
scas
repz
pop
mov
into
rol
bound
outs
add
push
push
add
jae
dec
mov
push
out
lods
adc
lods
add
imul
ss
push
xchg
popf
imul
movhps
sar
ss
lahf
popa
xchg
push
mov
cmc
cmp
(bad)
into
jno
cs
scas
and
cmps
lods
and
je
or
(bad)
or
mov
test
add
sbb
retf
addr16
imul
cmps
inc
xchg
inc
pop
ficom
pop
xchg
xlat
jae
jbe
sub
hlt
cmp
jmp
repz
dec
loopne
imul
test
adc
(bad)
pop
fst
cmp
sbb
retf
nop
pop
fidiv
mov
mov
fldcw
push
jns
lahf
adc
jae
push
xor
leave
inc
fisttp
pop
jl
push
add
call
add
push
mov
cmc
sbb
adc
dec
shl
loopne
int
call
enter
and
jl
icebp
sbb
stc
pop
adc
icebp
mov
ret
aad
mov
scas
repz
fcomi
mov
inc
and
add
nop
xchg
imul
into
pop
mov
cmp
stc
mov
lea
mov
mov
and
fiadd
hlt
xchg
mov
cwde
dec
push
jmp
adc
add
dec
adc
imul
pushf
aad
sub
pop
mov
out
lahf
sbb
jb
and
cmps
test
or
mov
and
les
(bad)
xor
or
xchg
pop
retf
cmp
daa
sbb
push
ret
mov
out
push
ret
ret
je
aad
out
mov
cmps
jbe
mov
jo
push
sbb
(bad)
(bad)
rol
ret
push
int3
std
rcl
adc
data16
cmp
(bad)
xor
popa
xchg
pop
inc
lahf
(bad)
fwait
scas
mov
sahf
int3
cmp
or
inc
push
stc
xor
cmp
xchg
fwait
cmc
ins
lods
push
movs
mov
retf
test
or
inc
jmp
xor
sub
ror
mov
das
out
add
stc
jmp
(bad)
(bad)
jecxz
dec
xchg
enter
cmp
mov
nop
sti
adc
jns
shl
retf
sbb
cmp
stos
adc
frstor
add
test
cli
xor
div
fistp
sbb
out
sbb
out
adc
fistp
mov
scas
mov
scas
repz
call
or
pop
stos
sub
or
or
push
push
jmp
iret
rcr
enter
and
out
repnz
mov
out
cmp
call
jns
iret
mov
push
sbb
fld
mov
mov
test
ret
aad
cmps
imul
push
pop
out
addr16
inc
int
mov
push
out
cmp
out
adc
outs
and
mov
sbb
nop
fidiv
cmp
sti
in
mov
pop
pop
mov
sbb
movs
inc
xor
imul
sar
bound
xchg
mov
ins
add
fidiv
shl
shl
mov
add
mov
pop
sar
mov
popf
aam
cmps
(bad)
lds
or
mov
repz
push
jl
adc
cmp
jmp
(bad)
cmp
out
fwait
and
inc
ins
cmp
outs
xchg
inc
sbb
mov
test
mov
jbe
clc
add
cmc
push
push
cwde
mov
repnz
mul
add
aas
mov
shl
test
add
sub
sub
(bad)
stos
retf
pop
ins
outs
stos
dec
mov
hlt
cmc
out
outs
or
jo
cld
fsub
and
test
js
adc
xor
add
cdq
sbb
jge
push
stos
mov
outs
pop
mov
adc
bts
in
mov
mov
xchg
push
cs
test
in
add
cmp
in
nop
dec
in
lods
dec
frstor
clc
repz
fimul
push
ja
dec
les
in
inc
push
adc
xchg
jl
and
bound
dec
mov
mov
xchg
jns
fst
xor
xchg
pop
stc
xor
sub
lods
jl
movs
cmp
jle
pop
and
add
fs
xor
div
in
aaa
in
repz
mov
fdivrp
ret
fisub
in
cmp
adc
sub
(bad)
sahf
leave
scas
dec
dec
fs
mov
fistp
mov
push
loopne
cmps
stc
rcr
das
pop
jmp
fistp
out
imul
cmps
mov
sub
gs
mov
dec
int
enter
pop
mov
outs
ss
icebp
add
jp
xchg
sub
inc
add
sbb
outs
ror
outs
lds
rcr
push
outs
outs
dec
ret
push
movs
inc
movs
(bad)
popf
or
cld
push
stos
rep
xchg
lock
cmp
jge
rol
cmp
mov
xchg
pop
loope
mov
lods
stc
hlt
sub
dec
mov
or
jbe
pop
jb
pop
stos
xchg
call
jae
add
sbb
push
outs
jne
xchg
iret
dec
mov
xor
aaa
sti
retf
sahf
cmp
dec
enter
or
lock
xlat
js
dec
cmp
or
push
pushf
mov
pushf
dec
aaa
push
pop
addr16
mov
pop
mov
push
jmp
mov
mov
inc
outs
sbb
movs
mov
inc
fbstp
aas
cmp
mov
(bad)
(bad)
push
cld
cmp
sbb
pop
push
jg
pusha
push
inc
arpl
mov
xor
loope
ret
add
je
and
test
adc
and
in
push
inc
ja
lahf
sub
xor
push
imul
cs
clc
jl
sbb
(bad)
push
cmps
mov
or
sbb
out
xchg
dec
mov
fistp
pop
loopne
enter
mov
cmc
push
ret
jl
pop
pop
mov
cmp
cwde
jmp
add
xor
pop
test
into
inc
fisttp
sub
jge
mov
sub
fcomp
lds
dec
addr16
pushf
out
test
int
out
shr
sbb
jmp
push
xor
shl
xor
test
icebp
rcl
inc
push
leave
sahf
mov
aaa
xchg
inc
mov
cmp
vmovd
cmps
loop
out
sub
jmp
push
inc
xchg
lock
mov
push
fimul
stos
pop
jg
push
movhps
lods
push
jmp
jle
add
push
ds
rcr
jo
movs
stc
dec
dec
mov
out
(bad)
jmp
test
adc
retf
out
pop
pop
fnsave
adc
or
aaa
mov
push
cmc
daa
xor
adc
bswap
(bad)
sahf
inc
mov
mov
and
sbb
xchg
lahf
inc
and
sbb
pop
push
cdq
loope
pusha
aad
cmp
lsl
sbb
adc
mov
das
mov
push
mov
cmp
aad
test
jns
es
stos
(bad)
sub
out
lahf
movs
loope
test
dec
pop
pop
mov
xchg
call
adc
jo
scas
push
loopne
dec
pop
pop
sub
push
cwde
loop
xchg
fmul
add
jmp
and
sahf
mov
ret
inc
sbb
adc
inc
retf
or
pop
add
movs
out
das
cmp
and
xchg
dec
pushf
sub
(bad)
je
and
push
ins
pop
push
xlat
sub
push
inc
sub
ret
loopne
xor
and
add
or
imul
mov
push
mov
(bad)
and
push
inc
popf
into
int
and
daa
das
or
addr16
pop
les
std
inc
daa
sbb
movs
sbb
repnz
xchg
cmp
xor
xor
sub
popa
xlat
cmps
dec
push
retf
sbb
sub
lahf
data16
mov
into
or
fstp
imul
add
mov
rcl
das
mov
pop
out
cmps
cmp
mov
mov
inc
jns
(bad)
push
mov
cmp
outs
cmp
xchg
inc
adc
sbb
pop
fcmovnbe
pushf
add
inc
jne
jmp
sub
shr
jno
cs
mov
pop
sti
adc
inc
or
aad
fwait
add
pop
retf
dec
(bad)
ins
(bad)
ss
sbb
mov
cmc
ja
sub
scas
jb
std
fcom
pop
adc
in
hlt
retf
ror
mov
stos
stos
inc
sub
dec
pusha
sub
fisubr
call
jmp
mov
sub
pop
dec
sub
das
push
(bad)
xchg
jg
mov
jne
retf
inc
jmp
or
mov
and
stc
sub
ds
daa
xchg
sbb
test
sbb
inc
stos
aas
sub
ins
retf
cmp
stos
sar
inc
pop
pop
js
xchg
mov
sbb
fdivr
enter
jno
call
add
or
sub
inc
cmps
pop
mov
cmps
jmp
call
push
aad
xchg
jl
inc
ins
(bad)
xor
lahf
mov
push
or
cmp
dec
mov
cs
push
xchg
jge
push
in
adc
xor
mov
xor
fbstp
inc
xchg
mov
lock
pop
mov
mov
adc
adc
int
in
adc
mov
push
ds
push
jb
mov
xchg
data16
dec
inc
aaa
hlt
mov
jnp
out
mov
in
push
mov
inc
out
les
inc
cmps
jno
sub
push
xchg
xchg
jmp
pop
pop
in
icebp
mov
into
stos
add
xchg
mov
fdivr
shr
pop
xor
pushf
pop
add
dec
inc
xchg
inc
sub
popa
cmp
cmp
mov
int3
outs
push
bound
and
movs
jno
jmp
dec
adc
or
scas
adc
sbb
inc
into
gs
icebp
push
cli
push
pop
xchg
pop
xchg
aaa
pop
cdq
lock
dec
stc
cld
into
mov
sbb
cld
sbb
push
lods
and
out
es
inc
ret
add
mov
xchg
pushf
xlat
push
(bad)
mov
cmps
xor
arpl
sub
int
push
push
cmp
mov
sahf
dec
cdq
xchg
cli
cli
lea
mov
pop
add
mov
sar
xor
mov
inc
mov
inc
sbb
nop
inc
bound
push
push
push
dec
add
in
clc
inc
xor
adc
xchg
jmp
retf
outs
jp
mov
pop
shl
shl
mul
push
movs
pushf
mov
inc
ret
or
push
fcom
pop
push
pop
inc
xchg
ret
leave
mov
mov
jns
cmp
outs
pop
stc
or
test
jbe
or
fsub
jno
aad
mov
or
das
adc
test
das
xchg
aam
mov
jl
shl
mov
add
fdiv
jge
mov
sbb
inc
xor
xchg
cmps
xchg
add
xchg
sbb
inc
mov
bound
sub
pop
sbb
dec
fimul
fcom
push
(bad)
clc
les
(bad)
std
leave
out
cmps
inc
aaa
sbb
cwde
popf
or
push
dec
mov
xchg
ror
rol
aam
lock
and
(bad)
retf
loopne
jmp
test
data16
stc
sti
add
cmp
fldcw
push
daa
pop
adc
aaa
or
mov
fisubr
sbb
mov
cmp
mov
pop
dec
adc
cmps
fs
rcl
pop
popf
out
or
add
cdq
inc
pop
mov
rcr
je
js
jne
cli
hlt
in
sbb
push
push
stc
pop
test
add
push
repnz
sahf
clc
mov
mov
mov
pop
int3
xchg
lods
fstp
inc
mov
mov
pop
shl
dec
mov
and
add
outs
adc
and
ds
fmul
mov
addr16
imul
sbb
loope
add
dec
stc
sbb
or
mov
pop
xor
movs
or
xor
movs
dec
xor
retf
std
repnz
stos
push
mov
add
mov
sahf
push
jp
cwde
xchg
jbe
dec
push
(bad)
jae
(bad)
scas
push
dec
in
sub
cmps
sti
rcr
inc
(bad)
pop
and
xor
(bad)
int3
jp
fmul
pushf
imul
es
add
test
add
dec
fld
xchg
xchg
std
sbb
push
dec
call
fidivr
mov
rol
add
mov
pop
mov
dec
pop
or
retf
pop
(bad)
(bad)
push
leave
pop
movs
aam
fisub
cmps
xchg
ins
adc
mov
pop
dec
test
fild
and
jmp
xchg
sti
idiv
adc
xor
mov
mov
jecxz
mov
out
xor
cmps
inc
adc
fs
adc
mov
pop
push
outs
adc
mov
cmp
push
push
jle
(bad)
sar
aaa
cs
sar
mov
jne
hlt
retf
or
fwait
bt
cmc
inc
cmc
jecxz
js
jne
or
mov
mov
adc
or
xor
leave
mov
inc
call
mov
popa
mov
inc
xlat
dec
mov
movs
scas
movs
and
push
mov
push
mov
dec
sbb
pop
inc
test
nop
add
xchg
mov
outs
pop
popf
lods
outs
fadd
in
add
add
(bad)
shl
push
mov
jp
sub
mov
jge
aad
and
xchg
xor
xor
cs
aad
or
pop
add
cmp
pop
push
ins
not
xchg
js
lods
hlt
and
xor
pop
in
and
idiv
sbb
sbb
sbb
sahf
pop
dec
enter
idiv
out
adc
iret
cli
jecxz
(bad)
mov
jo
or
and
mov
pop
and
mov
mov
test
div
mov
and
mov
bswap
sub
and
fisubr
call
(bad)
mov
mov
in
bound
cmps
loopne
inc
sbb
stos
jo
dec
leave
imul
pop
dec
cs
adc
xor
mov
(bad)
std
push
les
inc
(bad)
cmps
cdq
jle
cmp
pusha
test
mov
add
mov
fild
shr
scas
xor
in
jb
(bad)
mov
jo
ja
and
fwait
sbb
xor
sub
and
je
inc
add
pusha
in
inc
jnp
xor
mov
xor
sub
sahf
ret
test
in
stos
sar
push
xor
clc
repz
sti
test
int
stos
clc
fild
mov
movs
push
shl
mov
add
jge
addr16
popf
mov
or
imul
cmp
and
adc
sar
int
push
sub
dec
dec
mov
stos
jne
dec
lods
xor
leave
sub
jne
and
xchg
or
dec
add
imul
dec
sbb
shr
lods
jl
dec
adc
mov
fsubr
div
adc
ds
mov
or
cmps
push
cld
push
xchg
jecxz
inc
retf
(bad)
int
jne
push
xor
ins
test
out
mov
rcl
jbe
mov
dec
stos
cmp
outs
push
retf
push
mov
xor
xchg
or
inc
pop
mov
repnz
lahf
adc
ss
mov
and
xor
addr16
lock
aas
inc
cli
test
daa
aam
xchg
popa
imul
mov
cdq
push
das
(bad)
int3
push
inc
jne
push
pop
and
jno
addr16
push
nop
(bad)
pop
(bad)
ja
(bad)
sub
rcl
pop
into
adc
cmp
mov
imul
in
inc
pop
dec
lock
lea
push
xor
scas
icebp
rcl
jne
xchg
or
sbb
mov
xchg
xchg
gs
add
into
(bad)
xchg
mov
sub
cmc
es
dec
lods
imul
cmp
mov
(bad)
push
mov
arpl
rol
scas
test
dec
ret
sub
es
sub
jbe
jp
cmps
icebp
push
hlt
(bad)
dec
push
jecxz
test
inc
es
pop
(bad)
pop
mov
xchg
enter
jmp
mov
pop
repz
jo
push
int
add
scas
mov
mov
inc
cli
sub
inc
jmp
mov
jle
scas
xor
pop
pop
pusha
imul
or
mov
fcmovne
outs
(bad)
test
or
mov
movs
push
xor
pushf
mov
pop
outs
out
jnp
mov
aaa
cli
mov
mov
fistp
dec
adc
inc
(bad)
in
xchg
jno
call
sbb
pop
pop
pop
jae
dec
sub
aad
ins
mov
cmp
mov
arpl
ins
jb
mov
cmps
movs
xor
ror
ret
out
jg
(bad)
xchg
ror
or
loop
push
imul
jle
adc
dec
push
jb
fbld
sbb
cs
loope
dec
add
imul
and
fnstsw
jmp
nop
sahf
addr16
cmp
inc
pusha
fwait
jbe
ins
jno
push
jmp
push
pop
sbb
mov
pop
idiv
scas
mov
jecxz
(bad)
pop
inc
ret
out
and
das
repnz
mov
int3
xchg
cld
cmps
int3
sbb
les
or
lock
mov
test
movs
xchg
imul
or
aaa
mov
retf
loop
(bad)
out
add
popa
add
mov
push
mov
add
xor
fnstsw
out
inc
sbb
(bad)
repz
bound
aam
psubq
sahf
das
ds
and
cmp
pop
adc
in
adc
mov
or
cmp
mov
xchg
in
leave
popf
retf
mov
or
retf
jmp
inc
loop
pushf
nop
push
jo
pop
aam
sub
pop
aas
pushf
mov
mov
push
mov
and
inc
mov
daa
clc
call
xor
and
aad
cmp
hlt
aas
int3
out
ficom
stos
mov
sub
(bad)
xlat
pushf
rol
push
(bad)
int
mov
int3
pop
or
aaa
repz
shr
stos
or
or
mov
mov
psubw
add
mov
push
inc
lods
inc
inc
mov
sti
sbb
inc
mov
mov
adc
xchg
pop
pushf
inc
stos
scas
gs
fucomp
daa
push
int
and
stos
add
mov
sbb
into
inc
mov
(bad)
scas
add
movs
fnsave
leave
shl
fs
retf
jle
add
mov
mov
dec
push
imul
mov
mov
sar
mov
aam
mov
pop
imul
add
pop
add
mov
cmp
les
fmul
dec
clc
xchg
test
cs
jae
call
icebp
(bad)
fadd
int3
mov
or
dec
mov
mov
push
jg
outs
push
fst
jmp
outs
aas
ja
dec
ret
dec
jecxz
push
push
lds
jb
or
ja
cdq
loop
mov
mov
js
inc
mov
dec
jbe
and
pop
and
dec
mov
add
into
mov
mov
or
dec
adc
idiv
sbb
retf
outs
xor
enter
pusha
mov
xchg
loope
jp
ss
arpl
lock
(bad)
jl
neg
jno
push
and
(bad)
aad
sbb
dec
shl
pop
push
mov
jo
mov
sahf
cmp
mov
in
mov
sahf
cmp
shl
fnsave
dec
mov
nop
mov
inc
arpl
je
cmp
pop
mov
sbb
pop
mov
mov
cmps
cmp
and
in
sub
iret
clc
sub
fcom
int3
push
inc
mov
jge
rcl
xor
scas
mov
ret
mov
inc
fidiv
xchg
aas
fstp
cmp
pushf
inc
je
mov
or
ror
sub
sub
ja
arpl
jle
call
outs
dec
loop
adc
and
pop
dec
in
cwde
mov
shr
hlt
sub
mov
mov
mov
inc
pop
out
push
and
pop
add
adc
repz
cwde
pop
das
sub
inc
jl
in
inc
pop
(bad)
adc
gs
je
ret
popf
sub
add
das
adc
adc
sbb
out
sub
inc
xlat
add
xchg
xor
mov
xor
pop
fs
or
or
aad
inc
push
xchg
pop
leave
inc
fwait
into
mov
xchg
or
(bad)
(bad)
movs
test
mov
push
mov
mov
mov
jae
push
jge
mov
jmp
dec
lahf
push
les
stc
sub
into
or
(bad)
aaa
iret
js
mov
stos
ins
xchg
inc
ret
dec
out
fdiv
sar
pop
sti
scas
xchg
aaa
push
sbb
cmps
iret
mov
fwait
sub
and
movs
xor
jne
lods
cli
mov
lock
push
pop
pop
add
pop
dec
push
lds
cmp
or
or
inc
sub
pop
dec
xor
in
js
out
dec
dec
pop
ins
xchg
mov
call
jmp
cmp
or
xor
pusha
fcomp
sub
push
out
mov
sbb
stos
das
jge
loopne
ss
cmp
mov
clc
mov
push
mul
les
pop
push
or
jmp
int3
mov
cmps
out
call
push
sub
sub
or
repz
movs
call
dec
pop
dec
sub
mov
cmp
(bad)
dec
movs
pop
aas
out
loope
pop
mov
outs
not
bound
outs
lods
pop
imul
enter
jnp
inc
mov
push
loop
mov
add
mov
jp
and
fdiv
mov
jmp
in
movs
test
jbe
in
sbb
mov
retf
jg
js
add
push
test
and
push
rcl
jmp
push
lods
xchg
dec
aaa
cmc
cmp
nop
stos
xchg
cmc
in
push
leave
push
dec
cwde
into
xchg
test
fs
test
(bad)
movs
xchg
test
outs
dec
xor
xor
sti
jns
stc
std
and
mov
mov
jp
cmp
nop
fcmovb
pop
dec
nop
jge
mov
jns
(bad)
cmc
enter
imul
addps
push
xchg
fstp
jae
cmp
retf
arpl
fisub
fwait
or
(bad)
jae
pop
jg
fs
lahf
add
cmp
lds
inc
in
aad
push
test
jge
sti
adc
and
ins
sar
dec
mov
mov
int3
pop
call
or
call
jb
nop
pushf
ds
jmp
sbb
fild
cmp
adc
mov
lds
outs
cmc
adc
xchg
jg
call
dec
mov
out
add
inc
sbb
jnp
adc
dec
loopne
jecxz
test
mov
movs
xchg
cmp
jecxz
add
pop
fcmovu
addr16
ficom
and
(bad)
mov
shr
test
cld
in
mov
push
xchg
ins
xchg
pop
scas
sahf
not
popf
mov
xchg
imul
push
xor
push
dec
int3
jb
mov
sahf
sahf
fucomp
les
cmp
xor
dec
adc
push
inc
lea
adc
fidivr
test
cmp
jg
and
inc
std
inc
in
mov
popa
jnp
xor
fwait
dec
fadd
dec
mov
dec
jmp
inc
call
movsx
jnp
sub
daa
movs
int
std
mov
cli
jge
aaa
retf
mov
in
mov
aas
mov
push
push
es
push
frstpm(287
lds
in
inc
in
clc
and
test
xor
or
cmp
les
adc
sub
outs
leave
push
mov
jecxz
sti
mov
mov
xchg
mov
xchg
cli
sub
test
inc
and
xchg
mov
lea
stc
popf
pop
xchg
add
sbb
scas
mov
sub
dec
mov
jb
fwait
jge
enter
(bad)
shr
lahf
pop
mov
mov
mov
xchg
push
cs
outs
inc
ja
idiv
ss
pop
pop
cmp
push
mov
or
sbb
jno
xchg
sub
mov
js
iret
in
pop
xor
cmps
sub
jl
imul
dec
int
pop
cmps
or
dec
push
cmp
lahf
das
jle
test
neg
jle
out
fist
call
mov
sub
mov
and
or
fistp
push
mov
iret
mov
mov
lds
inc
xor
cmp
push
mov
inc
idiv
out
sahf
mov
je
mov
cmc
in
xor
in
hlt
test
pushf
cli
sbb
xor
rol
sbb
lea
sbb
add
dec
push
inc
mov
add
lods
xor
lods
cld
and
dec
xor
push
jbe
loope
lahf
xor
popa
add
push
adc
pop
sbb
pop
mov
out
icebp
dec
mov
aaa
pop
push
std
jns
mov
pop
sub
add
retf
les
dec
mov
adc
mov
sub
mov
aad
push
dec
sar
clc
stos
arpl
adc
fstp
neg
xchg
inc
mov
cmp
add
adc
pop
push
mov
(bad)
fiadd
pop
inc
das
outs
dec
(bad)
jmp
out
out
(bad)
cs
ins
ret
dec
jae
sbb
adc
mov
ins
ret
test
mov
rcl
icebp
stc
push
cmp
cmp
push
scas
retf
xor
jge
jle
cmp
lds
mov
fstp
mov
pop
icebp
lds
(bad)
cld
clc
lods
cmp
lods
mov
lock
stos
pop
(bad)
in
push
pop
xchg
cmps
ja
xchg
pop
xchg
arpl
bound
iret
mov
or
mov
cdq
(bad)
aas
push
jp
mov
(bad)
mov
out
popa
sbb
cmc
(bad)
push
bound
test
push
ret
inc
sbb
jbe
jge
jb
cmps
mov
sti
mov
mov
popfw
adc
cmp
fisubr
jo
test
add
div
call
std
ins
xor
arpl
xchg
dec
sub
pop
cmc
fiadd
cdq
hlt
dec
les
xchg
pop
stc
xlat
dec
aam
cmp
imul
inc
mov
aas
call
enter
repnz
test
cwde
mov
loopne
jns
xchg
out
xchg
dec
push
es
retf
imul
aaa
not
xchg
sbb
inc
inc
je
nop
cmps
icebp
push
inc
js
int3
cli
adc
iret
mov
aad
fwait
adc
ins
inc
inc
jns
movs
mul
aaa
dec
sub
mov
into
sahf
cmps
jno
aaa
xlat
and
sbb
xchg
(bad)
rol
and
dec
movs
xor
jnp
inc
push
aas
sbb
out
xlat
and
xchg
mov
enter
stos
ja
pop
add
cdq
in
addr16
cmps
adc
push
dec
and
je
mov
sar
jmp
jno
fidiv
jmp
jg
nop
inc
shl
xor
sub
test
(bad)
dec
push
movs
div
sbb
dec
cs
iret
ja
push
(bad)
pop
and
push
add
es
pushf
call
push
cmps
add
adc
addr16
int
fidivr
cmp
mov
push
pop
adc
jmp
and
cmp
rcr
pop
xor
sub
push
push
das
retf
inc
or
or
fcomp
cmps
jmp
repnz
dec
and
pop
mov
pop
xor
out
test
fsub
jmp
jo
xchg
add
mov
inc
and
inc
out
mov
ins
mov
adc
push
(bad)
fdivr
aam
adc
pop
and
arpl
ins
cmc
test
test
or
pusha
inc
and
das
pusha
and
sub
sub
aam
pop
push
jbe
call
mov
int
xchg
call
(bad)
sub
fcom
fidivr
xchg
fwait
call
in
mov
in
stc
call
mov
out
inc
mov
xor
neg
sbb
xchg
pop
cmp
outs
inc
dec
jmp
jmp
clc
outs
js
clc
and
imul
sahf
xor
imul
fdiv
adc
(bad)
out
test
xchg
adc
cs
(bad)
adc
ret
add
push
test
shr
push
mov
xor
mov
cmc
sbb
sub
leave
retf
(bad)
xlat
fnstsw
lahf
jbe
or
xlat
in
iret
outs
mov
fnstenv
cmp
and
shl
fwait
in
push
(bad)
xor
pop
les
sbb
mov
xchg
sub
jmp
pusha
jae
xor
cmp
add
pusha
push
or
pop
test
es
xor
data16
mov
mov
sub
not
frstor
jecxz
push
inc
fdivr
pop
je
cmp
adc
sbb
sub
(bad)
xchg
and
mov
aas
test
jle
test
dec
xor
sub
ret
adc
pop
pop
jg
mov
cs
jp
cmp
in
mov
aad
jle
jmp
jmp
xor
shl
and
leave
retf
mov
adc
mov
xchg
mov
fnstenv
xor
add
jge
pop
add
scas
pop
jb
dec
aad
pop
dec
popa
pop
mov
pop
shl
sub
aas
push
gs
(bad)
(bad)
mov
out
(bad)
or
jae
fs
test
(bad)
movs
(bad)
mov
jge
movs
rol
out
cmp
lods
icebp
rol
mov
add
mov
add
cmp
retf
xor
movs
push
jge
mov
repz
lods
cwde
mov
xchg
add
xor
fbld
arpl
test
mov
mov
cmps
mov
test
sub
retf
dec
mov
fst
pop
inc
es
mov
jno
enter
inc
jb
out
inc
adc
retf
inc
add
mov
daa
leave
adc
dec
repnz
icebp
xchg
dec
fiadd
aad
pop
mov
lahf
lods
in
(bad)
cmp
repz
adc
sub
test
fistp
test
sub
cmp
dec
push
dec
(bad)
ds
data16
push
push
repz
clc
xchg
mov
cli
ret
out
fadd
neg
jo
stos
sub
aad
test
push
sbb
pop
jbe
push
out
es
or
cmp
cmps
cmp
jg
mov
jl
hlt
pop
int3
js
mov
(bad)
mov
out
mov
add
aad
icebp
ret
pop
pop
movs
out
xor
cmp
xchg
adc
cli
or
push
sub
aaa
mov
and
mov
out
ret
jge
or
stos
or
shr
pop
push
dec
mov
pop
sub
call
stos
icebp
inc
cld
jmp
pop
cwde
dec
rcr
test
adc
enter
adc
mov
sbb
inc
into
dec
stos
mov
in
lds
(bad)
sub
adc
push
jmp
and
shr
mov
cwde
sar
and
fistp
mov
repnz
and
mov
ja
imul
push
test
std
add
mov
fcom
shl
(bad)
(bad)
aaa
call
mov
mov
inc
mov
mov
(bad)
xor
mov
adc
mov
(bad)
(bad)
fist
xchg
mov
scas
and
addr16
call
sti
dec
sub
xchg
mov
dec
mov
xor
jge
mov
ins
mov
in
jl
push
mov
ficomp
in
adc
adc
push
lds
adc
(bad)
pop
outs
clc
jmp
jo
sbb
mov
pop
cwde
xchg
dec
pop
mov
mov
adc
and
sub
aaa
cmps
fadd
out
push
movs
mov
mov
iret
add
dec
mov
dec
inc
lds
fadd
dec
movs
scas
cmp
nop
in
addr16
add
and
jnp
pop
inc
clc
loope
pop
push
adc
cdq
push
add
retf
and
movs
mov
das
xchg
arpl
or
sub
dec
loop
or
fiadd
jle
sbb
push
fdivrp
adc
clc
imul
out
call
je
sub
xor
fisttp
pop
shl
jle
test
dec
dec
cmp
nop
xor
call
sbb
(bad)
imul
ffree
push
clc
pop
jecxz
ret
(bad)
stos
shl
stos
cmp
pop
mov
mov
mov
test
lea
test
push
mov
dec
xlat
xor
pop
cmps
in
mov
sub
or
adc
fsub
adc
stc
mov
sbb
xor
stos
in
gs
ret
repz
shr
dec
xlat
pop
dec
fdivrp
out
icebp
cmps
out
pushf
xor
mov
ret
jmp
add
je
(bad)
sbb
xchg
hlt
in
iret
pop
jnp
fdivp
jl
hlt
pop
inc
or
movs
push
or
mov
push
inc
cwde
mov
pop
data16
test
sahf
xor
out
pop
inc
(bad)
fldcw
adc
imul
cs
sub
inc
push
xchg
add
adc
pushf
dec
mov
sbb
mov
adc
stc
repz
pusha
mov
(bad)
int3
dec
repnz
popa
jo
mov
out
cwde
scas
inc
jmp
push
(bad)
sub
pop
pop
sbb
xor
push
xchg
pop
(bad)
pop
mov
pop
cwde
cmp
mov
bound
shr
mov
lea
and
shl
aas
stos
mov
jp
pop
outs
rcr
jmp
mov
lock
(bad)
clc
out
mov
xchg
xor
out
xchg
(bad)
jmp
stos
arpl
ss
jne
mov
dec
dec
jmp
xchg
test
and
push
cmps
jo
mov
dec
jae
scas
iret
and
pop
out
inc
cmp
shl
lds
cmp
jg
mov
mov
shl
iret
std
addr16
enter
mov
mov
clc
or
dec
jno
std
(bad)
je
add
bound
xor
inc
inc
clc
sahf
shl
sub
pop
inc
add
rol
jb
icebp
outs
mov
mov
bound
jge
and
sub
out
call
jb
add
mov
lods
mov
mov
adc
or
imul
sub
or
imul
js
jecxz
jnp
jno
mov
jns
or
pop
ret
dec
clc
shl
dec
test
fisttp
lock
lods
sbb
xchg
mov
sbb
jae
sbb
mov
and
jbe
push
mov
mov
and
mov
mov
dec
push
shl
xor
or
into
cmp
or
dec
out
sbb
cs
retf
mov
addr16
ins
mov
fnsave
or
dec
aaa
and
cld
int
fs
(bad)
std
xlat
jns
loope
inc
dec
adc
cmp
scas
xor
stos
mov
inc
push
pushf
out
sub
les
xchg
inc
dec
fimul
mov
stos
test
pop
dec
adc
sbb
test
jl
ficom
loop
mov
sub
sbb
cli
pop
inc
add
aad
lea
retf
or
xor
add
mov
test
adc
outs
div
mov
cmps
add
clc
sbb
mov
int
fldenv
dec
sbb
mov
xchg
stos
out
les
adc
and
retf
js
jle
xchg
ds
loope
dec
(bad)
push
jmp
es
sbb
out
xchg
ss
jg
(bad)
frstor
pop
scas
or
call
addr16
out
sahf
repnz
push
mov
inc
inc
arpl
push
les
mov
xchg
or
int
pop
icebp
add
stos
ror
psubsb
add
daa
out
fs
adc
mov
cwde
(bad)
and
jge
adc
fdiv
fisubr
and
gs
jg
inc
mov
loop
inc
cmps
xchg
ret
xor
in
nop
fdiv
dec
push
test
dec
pop
mov
gs
push
push
pop
adc
outs
(bad)
pop
ffreep
push
adc
movs
mov
stos
sub
popa
push
fsubr
aad
sbb
sahf
adc
adc
dec
dec
fistp
adc
push
in
mov
jnp
cdq
cwde
out
inc
and
(bad)
push
jb
into
or
dec
arpl
jo
mov
in
ds
pop
push
adc
hlt
cli
pop
not
jno
mov
dec
or
mov
ret
sbb
adc
int3
outs
sub
pop
xor
and
stos
call
and
inc
movs
xchg
int3
mov
in
dec
loopne
adc
mov
cmc
mov
test
movs
loopne
sub
(bad)
adc
push
mov
pop
xchg
jmp
jnp
xchg
fs
hlt
cmp
out
loop
add
push
ins
or
cmp
out
push
jmp
push
lock
cli
push
stc
imul
dec
adc
xor
sub
dec
fcmovb
push
pop
aad
pop
sbb
inc
retf
inc
push
out
mov
pop
inc
xor
push
retf
sbb
ja
xchg
js
leave
dec
jecxz
int
in
mov
adc
xor
sar
xlat
popf
push
jp
pop
adc
jecxz
aad
mov
(bad)
(bad)
mov
cmp
xlat
mov
into
inc
fimul
sub
lock
push
mov
or
cld
push
mov
and
aam
inc
jmp
out
xchg
mov
dec
ror
mov
mov
mov
mov
loop
int
iret
mov
xor
add
loopne
mov
and
stc
cmp
cmp
lock
jmp
or
mov
adc
adc
std
cld
out
push
inc
or
push
shl
lods
mov
jle
rcr
inc
dec
add
xchg
xchg
adc
xor
sbb
push
pop
pusha
jecxz
loop
mov
push
outs
jmp
inc
mov
xchg
lock
pop
stos
aaa
xchg
dec
in
adc
pushf
aaa
mov
push
cs
add
test
and
std
add
sti
in
inc
xchg
mov
stos
mov
rcr
jecxz
jp
pop
mov
cmp
test
lods
jo
repz
sti
sub
in
adc
inc
test
push
mov
setb
(bad)
(bad)
xor
adc
and
and
aad
mov
fiadd
cmp
jmp
std
push
out
push
popf
push
push
aas
sbb
in
retf
xchg
clc
test
jg
dec
pusha
mov
pop
mov
xchg
mov
add
adc
pop
nop
les
sub
imul
(bad)
pushf
xchg
push
mov
into
(bad)
pop
add
sub
or
adc
sub
popf
data16
es
pop
scas
adc
or
xor
mov
pop
sub
xchg
sub
pop
test
int
jl
mov
fidiv
adc
fs
push
into
jne
mov
fnstenv
push
mov
(bad)
dec
in
mov
out
mul
fadd
sub
mov
pop
push
sar
rcl
out
mov
push
ret
or
rep
mov
add
es
test
cmp
cmp
inc
mov
test
outs
push
lahf
loop
outs
jnp
mov
dec
add
inc
inc
xor
xor
gs
push
in
cmp
or
push
or
lahf
and
rcr
lds
leave
mov
mov
adc
cdq
(bad)
push
sbb
xlat
in
or
or
add
imul
pop
lock
cmp
push
pushf
imul
mov
daa
out
mov
adc
sar
inc
dec
fist
daa
mov
sahf
mov
dec
or
add
mov
loope
inc
push
sub
outs
outs
ins
push
aad
lods
movs
push
push
iret
hlt
fidiv
sar
inc
push
movs
frndint
fst
dec
test
mul
test
pcmpeqd
inc
fstp
hlt
cmps
or
out
cmp
shl
mov
inc
test
cmp
outs
pop
sbb
in
in
call
or
pop
dec
and
in
add
lds
mov
pcmpeqb
sub
aam
xchg
pmulhuw
xchg
(bad)
push
je
jno
sub
push
test
push
loope
(bad)
(bad)
mov
test
mov
aas
and
add
mov
iret
je
mov
ret
add
out
mov
test
inc
mov
aam
jmp
dec
fidivr
rol
addr16
mov
call
mov
movs
cmps
jl
pop
setno
mov
sub
rol
cld
lods
inc
xlat
imul
jmp
scas
jb
cmp
shl
add
icebp
fldlg2
test
and
hlt
stos
fs
mov
call
icebp
call
and
lds
inc
and
xchg
pop
jb
mov
adc
push
jl
sbb
mov
or
push
sti
xor
lds
push
shr
mov
(bad)
xchg
sub
pushf
mov
fisub
sbb
jle
jo
lods
dec
or
mov
fmul
adc
add
pop
xchg
pop
sub
dec
(bad)
mov
cmp
mov
lahf
(bad)
rcr
stos
movs
and
call
loope
pop
pop
call
xchg
out
push
adc
pop
repz
iret
rol
sub
xchg
dec
or
scas
add
pop
adc
xor
mov
push
fbld
cmp
jbe
cmp
mov
mov
mov
and
ret
in
je
(bad)
enter
jg
ret
cmp
sub
jne
int3
lods
icebp
rcl
fld
stos
iret
sar
adc
scas
mov
mov
lahf
out
pop
jg
lods
dec
repz
mov
jmp
daa
popf
add
ja
and
mov
add
loop
leave
ret
and
neg
fsubrp
dec
and
and
inc
push
cmp
mov
test
xchg
sub
mov
adc
or
iret
ret
push
in
add
jno
retf
loopne
stc
cs
jp
sub
test
leave
pop
out
and
cli
cs
(bad)
in
adc
ret
xor
outs
cmp
mov
mov
add
sub
cmc
sahf
sub
imul
aas
jecxz
imul
sub
mov
in
and
adc
into
in
lods
adc
retf
jnp
push
scas
inc
ins
neg
and
scas
int3
pop
cs
cld
add
mov
out
ret
push
neg
out
adc
fcomp
ds
lahf
shr
or
xlat
jge
retf
inc
popa
call
or
imul
outs
popa
dec
pop
jge
jle
mov
fs
dec
push
inc
pop
xor
sub
add
sub
mov
test
(bad)
xor
mov
sub
sahf
xchg
inc
xor
jp
xchg
mov
ins
adc
cs
js
iret
adc
xor
ds
or
out
in
sar
loop
push
jge
addr16
adc
xor
inc
lea
dec
rcl
bound
cmps
enter
into
xor
and
fist
adc
loope
outs
js
mov
sbb
pusha
dec
ror
pop
pop
fld
mov
sahf
push
les
lahf
imul
mov
js
or
stc
and
pusha
mov
dec
cmp
cmp
xchg
lods
ds
aas
push
mov
dec
and
fwait
dec
sub
xor
std
inc
and
mov
sbb
adc
jo
repz
dec
mov
xchg
xchg
call
jl
mov
and
adc
push
xor
in
add
(bad)
xchg
fst
push
mov
cmp
std
aam
inc
or
inc
add
leave
fisttp
retf
cld
push
mov
int
cli
test
xchg
add
or
retf
outs
addr16
dec
inc
mov
fwait
ror
pop
enter
dec
std
outs
push
arpl
mov
imul
pop
outs
ficomp
jno
ins
mov
leave
arpl
add
bound
and
push
popa
test
lds
xchg
das
pop
mov
inc
pop
mov
xchg
test
dec
cdq
lods
mov
mov
or
sub
stc
sub
cs
xchg
enter
aad
jg
sbb
ret
mov
outs
cmp
jecxz
jns
jne
neg
xchg
arpl
cdq
sbb
cli
sub
mov
cmp
ins
cld
sbb
adc
jp
ds
fild
adc
in
loope
pop
inc
(bad)
and
jecxz
and
in
xchg
jnp
mov
les
shl
and
repz
xor
jns
icebp
push
mov
pushf
add
sbb
ss
stos
xor
arpl
sti
push
fucom
xor
adc
cmc
cdq
ret
mov
out
std
nop
add
push
std
cmps
ja
mov
xchg
outs
lea
js
fcom
addr16
add
(bad)
jns
cmp
lahf
iret
sub
xor
mov
jmp
lods
loop
jge
dec
push
pop
jbe
mov
ret
jle
lahf
sub
and
fnstenv
ins
repz
jne
hlt
and
call
movs
rdmsr
mov
mov
sti
pushf
int
gs
pushf
sbb
xor
adc
dec
pushf
ss
jbe
or
and
fisttp
mov
jo
jno
mov
dec
(bad)
mov
in
aaa
mov
jo
rcl
cmp
adc
cmps
arpl
repnz
pop
movs
lock
outs
adc
dec
imul
inc
and
and
out
dec
faddp
(bad)
xchg
xchg
inc
call
ins
inc
inc
cmp
aad
jp
int3
aad
mov
sbb
pop
mov
cdq
push
cmps
shr
mov
into
stc
outs
out
inc
mov
cmps
jbe
popa
jecxz
gs
(bad)
movs
sub
inc
jmp
in
xor
xchg
js
(bad)
sbb
nop
hlt
jecxz
repz
cld
repnz
mov
sbb
arpl
sti
mov
in
and
mov
and
push
pop
jae
jno
push
jnp
repnz
movs
inc
aad
cld
xchg
inc
or
sub
hlt
int
mov
(bad)
xchg
xchg
jne
movs
and
fisubr
ret
mov
fild
cmps
jb
and
std
loop
inc
adc
shl
xor
imul
(bad)
inc
repz
int
and
jl
lock
mov
std
aad
mov
repnz
cmp
jns
(bad)
aaa
clc
test
jns
mov
sub
repnz
(bad)
cmp
cmp
aas
push
jmp
dec
sub
fmulp
mov
gs
cmp
sbb
dec
sbb
rcr
jg
es
(bad)
shr
cld
cmp
pop
xadd
mov
hlt
outs
cs
mov
xor
int
inc
jae
xor
int
mov
pop
cdq
pushf
dec
in
inc
fst
rol
nop
aaa
push
movs
(bad)
mov
xchg
repz
push
cwde
ds
inc
mov
inc
icebp
dec
xor
popa
call
ret
sbb
ror
rol
cmp
movs
lock
aam
cmp
test
push
jle
and
lds
or
pop
xchg
jmp
push
fdivrp
ins
push
xor
out
or
jo
push
ret
push
sbb
push
enter
neg
ds
push
ja
adc
neg
jl
sar
mov
adc
xor
clc
pop
mov
cmp
mul
and
pop
or
fwait
sar
pop
pop
out
sbb
push
sub
mov
and
icebp
lock
push
lods
es
sub
out
dec
loope
out
mov
jg
sbb
mov
or
loopne
enter
in
sahf
sti
cmps
inc
cli
and
xchg
xchg
xchg
mov
cmps
pop
div
pop
add
dec
in
push
and
movs
xlat
xor
sahf
nop
cli
pop
ret
mov
xor
jne
popa
cwde
imul
push
aas
xchg
in
sbb
imul
pop
dec
sub
(bad)
cmp
add
and
push
fild
cmps
push
mov
and
je
inc
cmp
sub
push
cmp
pop
jl
daa
mov
neg
adc
dec
adc
cmps
dec
sbb
div
and
sub
inc
xor
fwait
xchg
mov
inc
mov
and
hlt
cmp
arpl
and
mul
bound
fist
ins
cs
mov
pop
mov
cdq
mov
sbb
add
dec
(bad)
fld
dec
es
adc
loope
inc
ror
inc
add
call
mov
xchg
enter
ret
rol
sbb
fist
out
sbb
push
jb
mov
inc
mov
mov
cld
stc
out
mov
push
xchg
in
mov
and
in
mov
push
ret
es
(bad)
lock
inc
outs
daa
shl
in
test
add
pop
xor
fnstenv
xchg
mov
cmp
rep
idiv
inc
cld
sub
jecxz
inc
push
call
jle
adc
icebp
or
cmp
std
xchg
jb
sti
sub
cmp
mov
pop
jmp
inc
call
ja
jbe
mov
data16
stos
fcomp
std
jecxz
(bad)
cmps
mov
push
xor
dec
push
push
xrelease
lods
jnp
xor
in
test
mov
mov
jb
pushf
jle
mov
mov
mov
les
idiv
popf
gs
or
jnp
ror
loopne
mov
mov
nop
fisttp
add
mov
stc
add
jecxz
mov
and
call
scas
push
cdq
mov
call
data16
retf
stc
test
fs
dec
hlt
jp
dec
lods
sub
add
div
popf
add
xchg
outs
popf
jle
xchg
je
add
fmul
fcomp
lds
cmp
fistp
inc
stos
mov
mov
fdiv
popf
dec
sbb
sub
out
retf
xor
movs
ins
lds
sub
pop
inc
mov
xor
or
sbb
stos
jb
sub
sub
clc
icebp
stos
jbe
or
adc
adc
cmps
repnz
retf
repnz
or
repz
fistp
jmp
pusha
add
sbb
movs
stos
ret
adc
fcmovb
lods
fadd
lock
mov
sub
aaa
int
mov
jmp
adc
add
and
iret
es
call
popf
(bad)
outs
jmp
das
adc
inc
dec
cmp
dec
cmp
std
pop
iret
mov
movs
mov
push
out
push
jmp
loop
sar
sbb
adc
and
jmp
popf
jl
xchg
ja
dec
mov
daa
lea
mov
jl
bound
loop
enter
and
std
mov
adc
inc
pushf
and
ds
aam
test
mov
xor
cmp
icebp
pop
add
xchg
xor
push
fsub
add
jecxz
mov
and
sbb
cmp
lahf
xor
inc
aas
jp
push
loop
sub
adc
pop
stc
xor
jne
movs
imul
cld
dec
les
mov
mov
pop
push
or
daa
push
in
jmp
dec
inc
xchg
sub
or
sub
pop
push
out
ficom
jmp
in
mov
out
adc
mov
popf
jl
dec
inc
retf
pop
cmps
mov
ins
lods
jnp
neg
sub
cwde
inc
sub
jns
outs
push
arpl
cdq
jmp
add
daa
push
jg
loopne
cmp
fwait
call
daa
fisubr
pop
cwde
test
lahf
fs
xor
daa
mov
sbb
rol
mov
cmps
pop
xor
cdq
inc
rol
sub
in
in
loope
pop
or
jo
xchg
add
or
les
xlat
mov
shl
gs
das
retf
jmp
call
push
sub
xchg
cs
jl
push
loopne
outs
int
(bad)
in
leave
dec
jecxz
scas
jmp
mov
xor
adc
test
mov
popf
push
and
loop
rol
mov
dec
push
aam
dec
lods
mov
sub
movs
retf
ins
sti
loope
push
cmc
pop
jle
dec
mov
add
es
es
fisub
adc
inc
fmul
adc
cmp
and
scas
xor
int
mov
fild
stos
adc
enter
inc
fst
sbb
fwait
shl
ins
outs
div
pusha
mov
mov
xor
je
(bad)
fcom
add
(bad)
daa
mov
jg
aas
mov
mov
(bad)
push
cmps
out
test
(bad)
mov
pop
push
xchg
and
push
imul
mov
mov
shr
ret
jmp
adc
sub
add
cmp
scas
and
adc
nop
cli
rol
cmp
sti
loopne
movs
out
fwait
or
mov
add
cmp
xchg
shl
mov
xchg
ds
xor
sbb
inc
add
adc
das
xchg
sub
pop
mov
mov
cmp
mov
ret
jo
sub
cld
data16
mov
loop
out
test
retf
cld
mov
inc
aas
mov
test
(bad)
fsub
fs
imul
fmul
mov
leave
pop
call
add
movs
fcomp
add
test
pop
xor
xor
inc
repz
cmp
xor
test
out
push
xchg
arpl
pop
jle
movs
sub
les
repz
mov
sub
loop
sti
fstp
cmc
xchg
mov
lea
ins
aas
call
mov
sub
or
mov
push
test
popf
adc
retf
outs
nop
sbb
mov
sti
adc
ret
and
ds
(bad)
mov
dec
or
test
test
or
mov
sbb
fisubr
scas
push
bound
or
pop
lods
mov
and
lods
retf
sub
adc
test
je
xor
mov
xlat
sar
into
pusha
or
push
mov
ds
xchg
xchg
dec
xchg
jno
inc
fld1
or
xchg
clc
and
or
bound
dec
push
jge
xchg
fwait
rcr
adc
div
gs
xor
inc
ins
push
mov
cmps
cdq
pop
lods
sbb
cmp
sbb
jg
fidiv
mov
arpl
pop
or
pop
in
inc
mov
inc
ss
and
lods
mov
mov
inc
inc
dec
and
ds
lahf
mov
sub
lods
push
mov
(bad)
mov
int3
add
aaa
int3
and
pop
xchg
mov
jne
rol
repz
jge
cli
and
arpl
and
mov
cdq
clc
imul
lods
pop
pop
jae
mov
mov
stc
mov
sub
jmp
sti
stc
retf
retf
dec
cmc
push
push
adc
pop
add
loope
outs
in
repnz
call
call
loop
push
je
dec
(bad)
pop
and
inc
ss
or
js
mov
mov
lods
jmp
xchg
mov
xchg
mov
xchg
sub
push
mov
sub
leave
jbe
mov
add
stos
stos
ss
mov
and
jmp
jo
push
les
popf
mov
pop
push
inc
fimul
outs
bswap
mov
dec
or
and
js
int3
mov
(bad)
fimul
dec
mov
cmp
fist
jp
dec
mov
sub
xlat
daa
add
popf
aaa
enter
jmp
xchg
add
outs
jns
aad
repz
add
mov
pop
or
xlat
(bad)
jmp
or
jae
icebp
xor
cmp
loopne
lods
cmp
mov
xor
mov
jecxz
mov
ja
mov
fnstcw
leave
call
test
mov
cmps
nop
cmp
out
mov
mov
(bad)
dec
push
adc
cld
test
ds
sbb
adc
repz
aaa
jns
mov
sbb
lock
jle
outs
sbb
repz
pop
inc
fnstsw
xchg
pushf
inc
push
jnp
dec
loopne
xor
adc
test
fcom
xor
(bad)
jo
or
or
sub
sub
out
scas
int
dec
xchg
in
(bad)
outs
mov
add
jae
call
arpl
jle
arpl
or
mov
stos
mov
in
stos
cwde
loopne
dec
dec
mov
sub
shr
sbb
dec
pop
pusha
mov
shr
xlat
sbb
dec
adc
out
(bad)
ss
sub
scas
(bad)
mov
int
mov
push
mov
xchg
sbb
shl
fadd
push
ins
or
fiadd
dec
call
movs
xchg
mov
pop
sbb
out
ret
aaa
loopne
and
into
aas
cmps
mov
xchg
sti
or
into
ins
fdivrp
pushf
mov
inc
inc
cdq
or
xchg
loopne
or
and
(bad)
add
test
adc
xor
jbe
(bad)
icebp
xchg
ret
mov
das
sub
pop
mov
pushf
xor
pop
inc
cmp
shl
xor
lds
mov
aad
hlt
and
mov
cmp
(bad)
xchg
iret
int
enter
mov
dec
jbe
xor
cs
inc
out
xchg
aad
outs
out
ret
sti
dec
fbld
lock
xor
imul
iret
ret
push
adc
push
cmp
sbb
aaa
imul
bound
retf
shl
gs
int
je
lods
cs
mov
(bad)
cmc
jb
pop
add
dec
xor
aaa
dec
outs
and
push
push
arpl
mov
push
jl
xor
clc
or
gs
cmc
or
(bad)
repnz
aas
pop
call
inc
jmp
hlt
mov
jno
test
mov
into
mov
mov
frstor
int3
inc
loope
jo
jo
fistp
jns
cdq
push
dec
pusha
push
and
or
jb
mov
nop
jae
xchg
hlt
fsubr
in
and
xchg
sbb
push
and
fisubr
aas
fsubr
pop
inc
jge
fs
push
adc
pushw
xlat
adc
add
pop
push
jns
(bad)
jmp
das
xor
cs
aaa
dec
or
pop
mov
cmc
xchg
sbb
mov
sahf
fist
shr
push
cmp
and
pop
(bad)
mov
cmc
sub
mov
ds
mov
add
addr16
sbb
xor
mov
push
pusha
cmps
jbe
cdq
sub
jg
gs
fisubr
fstp
cmp
aas
popf
adc
jmp
sub
cmps
sub
mov
jge
mov
push
mov
mov
into
xchg
add
mov
mov
mov
ror
pop
mov
and
data16
and
(bad)
xor
xlat
xor
lea
cmp
jae
and
mov
hlt
shl
jmp
or
cmc
mov
sbb
pop
test
dec
mov
sbb
(bad)
xor
repz
mov
mov
xchg
pusha
push
push
sbb
jb
jmp
pop
push
jmp
daa
pop
push
mov
jmp
sub
movs
xchg
sub
adc
loope
sbb
add
add
out
or
leave
inc
aas
push
sub
retf
ds
dec
out
add
xor
push
adc
or
inc
mov
mov
xchg
adc
sbb
inc
rcr
jmp
jl
(bad)
add
dec
pop
cmc
rol
test
dec
outs
ins
stc
add
mov
cmp
and
cmp
xchg
xchg
int3
sub
mov
data16
inc
cmp
inc
(bad)
pop
mov
ins
and
ins
cmp
jnp
adc
pop
cmc
push
je
jmp
adc
jp
aaa
xchg
adc
test
cli
outs
sbb
mov
fimul
or
dec
adc
jle
in
jno
mov
in
arpl
jl
es
test
jecxz
mov
jbe
xchg
and
loopne
or
sbb
xchg
sbb
adc
and
loopne
mov
inc
mov
mov
pop
repnz
xor
scas
aas
pop
scas
mov
mov
jno
aam
rcl
ror
aad
mov
adc
pop
pop
cli
popa
sahf
mov
sbb
and
and
clc
pop
outs
push
xor
aad
movs
or
cwde
jno
pusha
mov
push
dec
test
adc
outs
inc
mov
fcomp
stos
movs
outs
dec
xchg
(bad)
pushf
lods
push
fnsave
sbb
inc
inc
and
adc
nop
push
xchg
imul
lods
std
leave
adc
cdq
dec
jmp
jmp
ja
stos
fidivr
push
shl
int
mov
(bad)
movs
aaa
jl
add
mov
mov
aaa
into
cmps
loop
mov
xchg
(bad)
loope
test
out
das
(bad)
jns
inc
leave
mov
mov
popa
(bad)
dec
sub
pop
sbb
mov
xchg
aas
ror
je
test
(bad)
repz
fimul
(bad)
jmp
ret
mov
inc
js
inc
shl
xlat
mov
iret
mov
cmp
enter
icebp
ret
or
xor
dec
dec
pop
sbb
adc
inc
dec
jmp
xchg
ins
jmp
shr
mov
jmp
aad
call
sar
nop
sar
rol
outs
inc
pop
and
dec
push
sbb
push
cli
xchg
iret
cmp
dec
inc
enter
mov
pusha
fwait
mov
dec
jo
mov
sub
mov
pop
out
mov
and
pop
ds
loop
or
js
data16
dec
ret
add
icebp
call
mov
jmp
mov
push
inc
jmp
add
pusha
test
lds
test
mov
lods
xor
xchg
nop
(bad)
loopne
out
cmp
addr16
xlat
arpl
fmul
test
adc
test
scas
xor
js
mov
mov
mov
xchg
mov
xchg
sbb
nop
add
popa
sub
jo
push
fs
mov
mov
test
add
les
outs
cmps
mov
loope
pop
out
and
mov
and
cld
in
mov
sbb
cwde
jae
sub
dec
bound
fs
fwait
xor
loopne
adc
movs
fcom
cmp
imul
cmps
xchg
sbb
aam
adc
scas
repnz
addr16
push
pop
shl
dec
jb
xor
fcmovne
add
jmp
pop
or
shl
retf
mov
cmp
and
es
pop
xchg
push
mov
loopne
xchg
cmp
fisubr
push
sbb
mov
loop
(bad)
outs
das
stc
sbb
outs
div
ins
fwait
cmp
xchg
loop
sbb
ror
mov
(bad)
mov
cli
mov
mov
mov
sahf
mov
or
push
mov
scas
dec
adc
mov
sbb
popa
adc
xor
mov
adc
xchg
lods
xlat
(bad)
xor
push
sbb
xor
inc
push
xchg
mov
push
mov
push
loopne
imul
xor
rcr
mov
lods
jne
ret
and
mov
mov
xor
push
mov
push
cli
inc
dec
adc
es
dec
repz
adc
pop
xor
adc
neg
xchg
aas
mov
(bad)
lahf
mov
xor
jmp
jmp
xchg
adc
icebp
jbe
xchg
push
test
arpl
jecxz
(bad)
scas
lods
jae
cmps
(bad)
lods
movs
das
and
jno
push
fimul
fmul
in
mov
inc
inc
jle
xor
test
jmp
mov
cli
les
xor
iret
stos
sub
dec
iret
shl
pop
aaa
cmp
mov
mov
dec
mov
mov
dec
stos
cmp
enter
push
push
mov
bound
add
movs
jp
push
fist
push
icebp
enter
mov
xor
call
push
and
das
sub
mov
(bad)
les
lds
xor
fsubr
call
sbb
in
cmp
pusha
or
shl
and
xchg
das
out
enter
les
movs
or
pop
ds
div
add
cmp
cmc
(bad)
repz
stos
xchg
cmp
jne
out
cmp
sar
inc
aas
adc
and
sub
out
int
cmp
and
lods
and
cmp
fwait
pop
or
in
inc
xchg
inc
setae
push
mov
ins
call
push
add
mov
mov
add
bound
inc
fisubr
mov
loopne
nop
mov
daa
xlat
retf
jno
xor
sub
sub
nop
mov
sub
mov
shl
inc
cmp
mov
xchg
test
sub
mov
aas
xchg
dec
icebp
in
mov
jae
adc
loop
xor
sub
push
je
adc
push
movs
cmp
adc
fcomp
shl
pop
nop
inc
test
in
mov
scas
jnp
dec
in
inc
cmp
pop
cmp
xchg
dec
jne
cmp
sbb
push
mov
push
pushf
jmp
jbe
mov
fiadd
xchg
push
jae
or
mov
popf
call
or
int3
fcomp
inc
pusha
or
lds
xchg
and
pop
cmp
sbb
cdq
fdivr
mov
bound
and
out
jmp
push
daa
stc
shr
jmp
xchg
jmp
mov
pop
pop
int
in
fld
ins
mov
push
and
test
sub
mov
inc
ja
scas
cli
mov
pop
shl
dec
(bad)
loope
icebp
in
cli
pop
xor
xor
add
and
imul
cmps
or
shr
adc
xor
xor
inc
imul
cmps
jbe
jb
imul
jb
jo
ss
sub
scas
jmp
loope
inc
sub
sbb
cs
mul
cmp
adc
stos
clc
xchg
out
dec
test
lods
xor
push
sub
aam
shr
push
add
lods
inc
fistp
mov
mov
or
sub
pushf
pop
sub
or
and
test
daa
sbb
hlt
out
shl
lods
mov
rcl
loop
aad
inc
cdq
cld
add
iret
(bad)
jno
fbld
cdq
loopne
xchg
sbb
fistp
in
or
or
bound
inc
pop
repz
and
js
xchg
pusha
sub
jns
mov
dec
lock
test
int
mov
imul
int
int
dec
out
pop
in
pop
adc
lahf
out
mov
sti
mov
push
jb
fistp
mov
out
je
mov
ds
mov
dec
mov
cld
cmp
rcr
push
pop
rcr
outs
das
xchg
daa
xor
jne
xchg
mov
cmp
add
ret
outs
dec
(bad)
cmp
ja
pop
push
in
ficom
adc
or
push
mov
in
xchg
and
stos
sub
pop
cli
mov
popa
mov
sub
retf
push
loopne
test
out
cmp
into
bound
inc
cmp
les
int
cmp
jns
ror
popa
scas
and
sbb
inc
mov
jp
pop
jb
ret
fist
inc
popa
adc
ret
fstp
cmps
movs
xchg
mov
inc
adc
pusha
retf
outs
ret
inc
loope
push
stos
les
sbb
mov
out
jo
fisub
fst
mov
mov
test
adc
add
jle
xchg
xchg
imul
or
mov
(bad)
mov
mov
pop
mov
and
imul
movs
mov
(bad)
jle
clc
enter
popa
jb
outs
push
sbb
xchg
and
add
fdivr
test
scas
sub
(bad)
inc
repnz
jl
lea
int
mov
shr
add
movs
dec
adc
in
xchg
cdq
jmp
(bad)
mov
lsl
sar
inc
movs
int
add
iret
sub
push
add
shl
repz
out
fild
imul
xor
fwait
popa
ret
xchg
xor
cmc
test
add
cmp
test
outs
mov
inc
out
imul
fcomi
jmp
jmp
xchg
outs
xor
std
out
add
jae
(bad)
sub
movs
out
jno
sub
(bad)
out
aaa
popf
adc
and
loopne
xchg
out
lock
in
(bad)
(bad)
mov
ret
icebp
ror
xchg
cmp
pop
outs
mov
mov
add
inc
jge
or
outs
inc
aam
add
(bad)
sbb
xchg
das
mov
imul
imul
cs
(bad)
loope
(bad)
in
shr
or
les
xchg
and
sub
pop
pop
fbstp
ror
cwde
push
sar
out
adc
in
ret
lea
xchg
cwde
rcl
sbb
dec
pop
and
xchg
loopne
cmp
cmps
or
xchg
mov
jnp
xor
retf
gs
pop
jmp
outs
sbb
mov
adc
fdiv
adc
daa
push
mov
loop
mov
pop
dec
xor
mov
and
mul
in
push
enter
test
sub
xor
ins
sub
sub
pop
icebp
xchg
mov
xlat
in
push
pop
xor
imul
fadd
outs
mov
xchg
inc
ret
test
cmp
sub
fsubr
sbb
out
fbstp
push
out
xchg
pop
jmp
shl
cmc
sub
(bad)
js
mov
ins
in
inc
aam
mov
xlat
sbb
cmp
jb
push
xchg
cmp
xchg
scas
test
jl
push
cli
fimul
xchg
sahf
cs
inc
inc
mov
lods
mov
(bad)
jns
jmp
and
or
xor
xor
mov
aam
xchg
adc
aad
inc
sub
shr
xchg
adc
mov
ret
push
int
mov
adc
or
cmc
or
xchg
add
add
fdivr
jbe
jp
out
dec
jl
aas
cld
xor
xor
daa
jnp
push
inc
into
mov
cmps
pop
ss
xor
test
sti
call
dec
das
aam
sbb
inc
inc
into
(bad)
ins
sub
and
jbe
push
lahf
adc
xor
pop
loop
call
movs
xor
pop
jno
add
test
dec
in
data16
push
imul
jge
xor
push
mov
call
test
xchg
mov
fld
pusha
bound
je
test
call
(bad)
call
dec
inc
or
mov
test
repnz
mov
rol
xchg
mov
out
ret
mov
aaa
outs
jge
(bad)
nop
(bad)
or
movs
jl
(bad)
(bad)
scas
out
lods
push
mov
xchg
jecxz
adc
pop
dec
enter
mov
cmp
mul
fstp
and
dec
add
pop
add
aam
dec
ror
ins
arpl
(bad)
cmc
stos
xor
pop
ret
inc
sub
stos
pop
adc
xchg
sub
mul
stos
test
adc
sti
lds
and
icebp
sti
mov
xor
pusha
mov
sub
mov
cdq
sbb
retf
mov
add
not
mov
mov
pop
mov
pop
mov
(bad)
call
jo
dec
mov
cli
dec
test
fist
cmp
xchg
fistp
bound
cmp
mov
sub
inc
sub
bound
out
pop
mov
mov
or
adc
inc
(bad)
push
sub
js
mov
fs
cli
xor
shl
fwait
je
fbstp
mov
mov
clc
ins
and
cmp
cmp
xchg
xchg
loope
loop
cmp
std
mov
pushf
mov
push
and
mov
inc
aad
and
mov
fadd
cmp
mov
lds
sub
mov
imul
cmp
mov
adc
ret
dec
sbb
(bad)
pop
sbb
and
mov
add
inc
cwde
xor
gs
jp
sahf
ss
mov
cmp
dec
jne
out
push
add
lahf
adc
push
dec
popa
jbe
dec
movs
jb
jae
mov
in
xchg
fsubr
jmp
jmp
adc
fs
pop
xchg
in
push
aam
loope
adc
xor
sbb
nop
jns
daa
ds
add
jl
aam
mov
scas
retf
ds
jle
retf
inc
pop
sub
iret
pop
les
pop
jg
and
add
and
outs
mov
dec
or
mul
gs
imul
fs
stc
fidivr
out
adc
sub
outs
adc
out
shl
scas
inc
push
push
sub
xor
push
push
and
xor
mov
mov
cld
add
test
in
mov
dec
pop
push
add
xlat
add
add
mov
js
xor
cmp
jbe
and
lock
cmc
es
lock
push
syscall
push
and
push
cwde
test
push
popf
or
push
push
out
ret
pop
int
pop
jns
imul
push
dec
popf
hlt
add
loop
inc
gs
setl
leave
stos
(bad)
fimul
(bad)
mov
sahf
fs
mov
mov
idiv
in
cmp
icebp
jnp
mov
push
xchg
es
xchg
dec
out
adc
cld
sub
fdivrp
rcl
sub
rcr
cmp
dec
test
jmp
not
scas
test
jp
push
daa
aam
push
push
repnz
dec
cmps
sbb
movs
arpl
(bad)
mov
inc
ja
pop
pop
sub
or
nop
(bad)
repnz
out
ret
dec
int
arpl
rol
je
jns
cmp
mov
xchg
push
imul
xor
repz
and
sub
popf
das
cs
outs
pop
call
push
inc
sub
mov
dec
pushf
adc
or
cli
rcr
pop
push
pop
popf
adc
jo
dec
mov
mov
mov
repnz
cld
str
mov
das
inc
add
lahf
add
ror
xchg
adc
pop
adc
add
(bad)
push
lock
fbstp
sub
mov
pop
cmp
jmp
sub
jne
out
movs
add
pop
xlat
pop
(bad)
lahf
dec
push
cs
dec
shl
fisub
jno
enter
pop
popa
pop
and
cmps
leave
sbb
shl
mov
or
js
mov
cmps
aam
jmp
(bad)
ror
ins
movs
lock
mov
ins
jo
add
jl
pop
push
test
jmp
ror
in
jae
sub
mov
sub
xchg
jg
jo
outs
inc
mov
pushf
in
jmp
xchg
push
ja
ins
lods
mov
and
and
ror
push
jmp
lahf
cmps
dec
push
pop
stos
jnp
ds
adc
lock
retf
dec
pop
not
in
or
cmp
(bad)
nop
pop
xchg
adc
test
xor
mov
mov
inc
cwde
bound
xor
pop
cmp
mov
inc
daa
xlat
aam
xchg
clc
pop
cmps
sar
or
aad
dec
daa
hlt
xchg
cmp
or
lods
js
xor
add
jns
(bad)
outs
(bad)
dec
lock
test
mov
xchg
lods
aad
js
push
inc
out
imul
sub
cmps
out
ins
xor
(bad)
shl
cmp
cmp
inc
cld
xchg
and
loop
leave
add
mov
mov
int
and
(bad)
jb
add
add
sub
mov
dec
ja
pop
cmps
lahf
mov
ret
jno
shl
in
lea
push
inc
popf
data16
mov
jmp
(bad)
mov
cmps
mov
jno
mov
sub
call
mov
sbb
cmp
adc
push
fimul
popa
jge
(bad)
cld
xchg
in
xor
push
outs
in
rcl
mov
fbld
sub
(bad)
push
icebp
inc
mov
and
in
push
mov
xchg
lods
pop
inc
inc
mov
stc
int3
jno
and
dec
movs
pop
int
push
xchg
jmp
cmp
add
jmp
push
cld
mov
(bad)
sti
add
add
mov
jno
mov
cmp
mov
lock
(bad)
fsubp
inc
xchg
call
enterw
add
or
pop
imul
and
sar
push
fist
aaa
out
jns
js
mov
adc
cmp
jmp
movs
pop
dec
pop
in
stc
mov
cld
push
fs
je
push
adc
repnz
repnz
rcr
mov
fdiv
(bad)
in
xchg
pop
mov
mov
sahf
imul
movs
mov
adc
je
sbb
cs
loop
retf
inc
push
add
inc
nop
dec
mov
and
dec
xor
call
ins
ret
(bad)
lds
dec
and
or
fcmovbe
cmps
pop
push
or
or
push
xor
jnp
adc
xor
push
add
jb
cdq
lock
dec
aaa
fstp
or
movs
mov
outs
mov
add
xchg
jl
lds
js
mov
sbb
loope
aaa
enter
mov
jmp
les
push
out
(bad)
fsub
and
aaa
xchg
sbb
inc
ins
xchg
fld
dec
inc
or
dec
add
jecxz
fbld
bound
or
(bad)
aam
cmp
sub
mov
bound
jo
cmp
pop
mov
sbb
arpl
jl
jns
sbb
dec
retf
xor
in
and
sti
neg
xor
inc
pop
cs
stc
or
push
or
inc
jl
and
repnz
stc
push
xor
pop
inc
cmc
pop
retf
test
fdiv
xor
jnp
(bad)
test
repnz
out
mov
fimul
mov
pop
cmp
lahf
jns
xor
gs
rep
jl
and
test
mov
push
ds
and
and
aam
pop
test
xor
push
xchg
inc
stc
dec
pop
adc
dec
mov
mov
cli
test
xchg
adc
xor
aaa
ja
inc
imul
pop
movs
and
jns
push
neg
add
outs
and
loope
movs
xchg
test
out
in
call
shl
xor
ret
jp
push
inc
leave
inc
in
mov
enter
xchg
es
fwait
leave
xor
jnp
push
inc
cwde
out
cdq
jp
fldcw
imul
jp
call
cmp
jnp
mov
gs
cld
cmc
mov
cmps
fisubr
dec
push
stos
es
movs
push
repz
pop
fnstenv
xchg
ja
cli
sub
call
in
fild
push
push
arpl
inc
dec
(bad)
fmul
enter
or
pop
sub
lds
ud2
out
pop
adc
inc
aam
ror
ror
icebp
mov
mov
jmp
fsubr
jmp
push
bound
sub
mov
inc
xor
jg
push
scas
outs
mov
adc
push
and
push
and
fcomi
shl
adc
dec
popf
loopne
xchg
fist
and
adc
ss
scas
and
(bad)
jl
xor
shr
lea
mov
adc
mov
outs
lock
xchg
add
stos
cwde
push
jo
xlat
push
(bad)
jae
cmp
mov
std
pop
xor
and
sbb
iret
jno
imul
xchg
cwde
mov
leave
fsubr
nop
push
pop
aad
jge
loopne
fwait
mov
jmp
in
hlt
mov
retf
gs
jnp
sbb
out
cmp
adc
imul
das
jecxz
pop
adc
dec
addr16
and
push
xchg
in
xchg
mov
idiv
cdq
clc
push
inc
push
and
jns
dec
or
fwait
cmp
mov
inc
mov
mov
pushf
je
arpl
or
push
xor
fdivr
in
jno
nop
loop
(bad)
shl
and
xlat
stos
jnp
jnp
(bad)
pop
and
fsubr
add
mov
and
xor
mov
cmps
sbb
xchg
sub
mov
pushf
mov
inc
mov
movs
es
jno
sub
xor
push
sti
push
mov
outs
xchg
xlat
fchs
stos
and
sti
cmp
sub
ins
jg
test
xor
mov
fimul
push
mov
pop
ja
pop
or
inc
outs
xor
das
bound
inc
out
loope
test
fistp
pop
push
xchg
(bad)
das
fsubr
xor
movs
cmp
sub
and
sbb
mov
(bad)
out
je
push
add
pop
ret
adc
bound
push
(bad)
int3
imul
and
or
push
pop
fdivr
and
stos
and
adc
mov
xchg
adc
mov
ins
adc
mov
cld
stc
jge
mov
div
lea
pop
std
pop
int
clc
xchg
out
nop
cmp
cmp
mov
mov
cmp
clc
add
ja
cmp
outs
jge
cmp
loopne
into
popf
and
pop
cmp
jbe
push
ret
adc
aam
out
push
add
push
lods
retf
ja
inc
js
xor
scas
imul
leave
push
int
ret
mov
dec
nop
(bad)
clc
pop
in
mov
dec
jecxz
in
in
loop
setb
inc
popa
outs
mov
jmp
pop
loopne
fstp
lahf
pushf
outs
je
xor
into
scas
jnp
mov
xchg
sbb
mov
ficom
call
dec
xchg
mov
leave
retf
enter
add
sti
and
sar
sub
(bad)
repz
out
mov
inc
pop
and
pop
mov
sbb
fcomp
ins
sbb
xchg
in
out
stos
int3
rcr
add
add
pop
es
adc
adc
std
pop
pushf
fnsave
jmp
lods
std
pop
stos
jns
fld
das
pop
outs
and
les
sbb
out
mov
mov
outs
and
sub
cmps
stos
fild
shl
inc
push
sbb
push
pop
sub
sbb
(bad)
cmps
xchg
repz
retf
xchg
addr16
ret
pop
ins
mov
mov
call
lods
mov
pop
(bad)
fadd
cmp
and
dec
sub
cmp
adc
mov
jge
nop
shl
push
fdivr
imul
xchg
jge
sbb
dec
inc
ss
xchg
pop
add
mov
or
pop
fiadd
aaa
cdq
pop
sbb
inc
or
fsubp
push
adc
or
call
jmp
push
sti
fwait
(bad)
dec
push
push
lds
jecxz
pop
dec
ja
add
cmp
mov
mov
push
cwde
out
inc
outs
sahf
enter
outs
jmp
add
int3
aas
mov
dec
adc
xor
add
mov
popf
mov
pop
int
cwde
adc
outs
pop
loopne
xchg
loope
movs
shl
das
and
mov
xor
pop
fwait
test
mov
bound
(bad)
jne
inc
xchg
push
arpl
loope
sahf
inc
push
cmp
adc
inc
add
fisttp
aaa
mov
enter
stc
(bad)
in
mov
int
int
sub
dec
pop
sub
addr16
repz
mov
sbb
mov
inc
xor
gs
mov
push
pusha
push
scas
and
jl
shl
mov
mov
xlat
or
cdq
xor
adc
lea
adc
rcl
ficomp
fist
(bad)
fld
fld
sbb
and
push
sbb
xchg
sbb
fdivr
xchg
jecxz
sbb
adc
sub
cmc
stos
inc
idiv
jno
lods
adc
push
in
xor
loop
pminub
loopne
pop
repnz
in
adc
mov
bound
aas
inc
fld
inc
repz
or
sti
mov
push
and
rcr
ret
pop
ror
push
neg
in
adc
sub
gs
loopne
shl
mov
es
push
mov
mov
jmp
imul
sub
xchg
loopne
mov
pop
cdq
push
mov
jl
dec
push
lea
mov
and
adc
and
inc
test
pop
jae
arpl
xchg
pop
pop
or
cmp
enter
sar
sub
mov
jecxz
dec
sar
mov
call
inc
aaa
sbb
rol
pop
jecxz
stos
je
jge
adc
push
shl
xchg
ins
shl
outs
sub
test
xchg
enter
mov
mov
stos
outs
mov
movs
xchg
add
out
ret
stos
bound
push
xlat
test
cmovp
lods
pop
adc
int3
cld
lods
mov
dec
rcl
mov
mov
bound
sbb
ds
push
loope
sbb
inc
mov
sahf
neg
pop
fmul
lods
test
shufps
push
mov
adc
jb
dec
mov
imul
cld
out
fadd
sub
in
fld
xchg
pop
arpl
adc
and
mov
movs
jmp
dec
mov
imul
stc
sub
(bad)
imul
sbb
jge
mul
test
cmp
data16
cld
test
fcomp
xor
shl
inc
sbb
xchg
mov
stos
push
mov
mov
jle
stos
les
mov
retf
adc
arpl
cmps
je
pop
iret
fwait
movs
aad
dec
bnd
out
inc
inc
push
xor
sub
mov
xor
sbb
adc
(bad)
fidivr
cmps
push
gs
gs
add
out
ret
outs
push
xchg
xor
sub
dec
scas
mov
mov
mov
in
add
sbb
xor
leave
fs
mov
mov
mov
sbb
int3
xchg
xor
mov
fisttp
cmp
dec
pop
aad
out
mov
out
ds
mov
mov
sub
jg
and
jmp
xor
inc
pushf
jp
jb
push
daa
xor
cwde
mul
dec
push
mov
shl
push
add
and
pop
in
jmp
rcr
xchg
cmp
les
pop
xor
or
cmps
jnp
inc
xchg
jo
call
cdq
mov
pop
addr16
ins
mov
stos
retf
add
mov
push
xchg
xchg
xlat
shl
xor
mov
pusha
sbb
xchg
or
mov
lahf
loopne
cmovle
inc
jle
cmc
cld
sub
cmp
sub
sub
push
into
test
fstp
hlt
mov
mov
xor
sub
iret
push
cmps
loopne
push
push
jge
push
and
fs
mov
lods
push
icebp
fwait
test
rol
inc
sub
or
lods
pushf
xchg
test
push
and
lds
add
mov
test
mov
in
in
cld
(bad)
(bad)
repnz
test
mov
loope
mov
sahf
push
sub
jge
fs
ins
enter
xchg
sub
ins
loopne
cmps
add
ret
sub
push
mov
dec
cld
fstp
mov
sub
adc
push
std
arpl
xor
add
pop
repz
or
and
mov
loop
retf
jmp
sbb
inc
cmp
mov
repz
add
jb
jecxz
cwde
sub
clc
outs
cmc
mov
xchg
or
lods
cdq
lahf
pop
inc
gs
pop
sub
push
mov
mov
inc
(bad)
data16
lods
stos
(bad)
push
and
mov
vandpd
loop
or
sahf
stos
sub
ret
jnp
movs
(bad)
addr16
retf
movs
mov
cmp
and
sub
jp
or
add
pop
lea
jmp
and
mov
popf
cmc
and
sbb
call
push
(bad)
fwait
test
popf
imul
cmp
add
aad
(bad)
arpl
jle
add
repnz
inc
repnz
(bad)
movs
sar
mov
xchg
mov
adc
fadd
mul
sub
scas
repnz
call
ror
mov
rol
lods
daa
ret
or
shr
xor
sub
cli
cmp
dec
mov
cli
test
mov
fadd
and
mov
or
mov
iret
inc
sbb
xchg
mov
sahf
pop
xchg
mov
lods
inc
xchg
ds
inc
xor
scas
ss
rcl
inc
push
sub
shl
retf
call
fimul
repz
loop
dec
mov
add
ins
dec
inc
jno
test
out
mov
push
mov
pop
cmp
mov
pop
std
sub
cmc
or
fst
dec
test
lahf
cs
popf
jmp
mov
pop
and
xor
(bad)
xor
push
addr16
fwait
pop
inc
mov
pusha
rcl
and
xchg
jle
fs
sub
loope
stc
test
outs
hlt
and
ds
cmp
xchg
mov
or
(bad)
push
jl
mov
dec
clc
je
fild
cmp
add
adc
jp
nop
dec
jge
add
in
add
push
and
aaa
and
jmp
lods
mov
dec
push
add
mov
pop
mov
dec
sbb
daa
push
sbb
out
xchg
scas
pop
xchg
pop
sub
hlt
icebp
pop
lahf
jnp
mov
mov
retf
ret
pop
iret
and
cli
in
push
mov
push
int
xchg
sub
push
push
fisttp
mov
and
mov
adc
or
cli
nop
dec
out
repnz
mov
mov
mov
ret
cmp
dec
dec
es
or
dec
pop
jae
sbb
jmp
in
ja
sub
in
mov
fsub
rep
add
out
pop
xchg
mov
bound
push
mov
xor
pop
push
xchg
push
shr
sahf
jnp
inc
jle
push
pop
pop
out
mov
mov
lods
mov
mov
mov
(bad)
sbb
ins
ds
stc
cmp
lods
sub
shl
movs
(bad)
xchg
inc
or
or
lea
fs
cmp
xchg
movs
mov
vpaddd
jge
pop
mov
xchg
mov
jns
jo
cli
rcr
xchg
or
jno
in
popf
mov
je
test
mov
mov
imul
mov
pusha
(bad)
shl
mov
push
test
jle
mov
inc
xor
push
jmp
adc
inc
nop
dec
sbb
imul
push
idiv
in
mov
mov
pushf
je
inc
or
xchg
mov
mov
mov
mov
mov
mov
lods
fs
cld
xor
mov
bound
repnz
pushf
jo
push
mov
sar
dec
fisub
ret
inc
sbb
push
cmp
mov
jecxz
lods
xor
adc
nop
dec
enter
mov
xlat
mov
lea
call
ret
mov
call
(bad)
shl
sub
cmp
sub
push
ror
jb
mov
out
ror
jge
and
jl
gs
in
mov
push
xchg
in
arpl
adc
or
stos
pop
loop
aas
add
scas
adc
mov
idiv
hlt
push
loope
scas
scas
push
retf
adc
inc
cmp
dec
jecxz
mov
mov
pop
jge
cs
fiadd
xchg
mov
rcr
dec
xor
inc
cmp
mov
repnz
sbb
imul
outs
sub
stos
pop
or
dec
test
xlat
mov
mov
lahf
rcr
sti
dec
mov
in
movs
pop
jmp
or
sbb
xchg
adc
jl
mov
popf
add
sahf
and
mov
ds
addr16
ret
inc
cmp
sub
arpl
repnz
jecxz
in
aam
jnp
xor
fs
fnsetpm(287
out
in
mov
mov
mov
les
aam
xchg
pusha
pop
sub
push
movs
cmp
mov
sub
les
lods
xchg
push
arpl
jae
push
jbe
and
or
push
mov
ror
dec
nop
mov
adc
xor
mov
cmp
xor
loope
sbb
cmp
xor
lods
cmp
lds
pop
pop
push
push
stos
jg
cld
std
(bad)
fcom
mov
sub
das
xchg
jnp
imul
or
inc
pop
or
mov
xor
xchg
jmp
push
inc
xlat
mov
loopne
xchg
mov
retf
gs
mov
out
cmp
xchg
inc
lds
js
jmp
(bad)
mov
loopne
movs
loopne
(bad)
cmc
loope
mov
dec
and
bt
(bad)
ins
out
fucomp
cld
push
retf
aas
repnz
dec
lahf
lds
sub
inc
(bad)
cmp
test
outs
nop
scas
mov
dec
pop
inc
jno
add
or
mov
int
xchg
cmp
adc
addr16
scas
mov
ret
cmp
adc
mov
sahf
pop
cmp
mov
jl
sahf
cmps
iret
pop
jmp
dec
cmp
lds
mov
and
mov
fisttp
out
rcl
push
jge
xchg
mov
mov
scas
xor
std
mov
ins
lds
(bad)
pop
popf
pop
cmp
pop
retf
adc
stos
xchg
mov
mov
pop
outs
leave
pusha
push
retf
loope
test
add
pop
or
mov
(bad)
rol
add
mov
mov
lds
xchg
xchg
js
cwde
rcr
jns
aad
sub
add
fistp
and
jmp
sahf
fmul
cmps
xchg
inc
add
push
inc
or
jmp
sar
sbb
(bad)
and
call
dec
adc
jns
test
hlt
xlat
lea
dec
fbld
sti
lods
push
push
bound
push
lea
push
jno
loop
mov
retf
dec
push
cli
xchg
sub
or
mov
dec
fdiv
mov
mov
inc
out
mov
or
jp
cld
pop
jge
icebp
test
js
pop
xor
outs
jnp
push
in
cmps
inc
and
jno
pushf
jb
out
cmp
repz
adc
aas
mov
mov
clc
ins
push
loopne
add
arpl
jb
adc
sub
(bad)
adc
ret
xor
js
addr16
call
add
outs
dec
loop
push
mul
fst
mov
xchg
push
ds
pop
pop
mov
mov
sub
mov
jno
push
out
jno
lock
or
or
in
call
loop
mov
inc
push
adc
mov
or
(bad)
dec
jns
nop
pop
jbe
cmp
lods
test
add
test
iret
push
xlat
sbb
je
mov
mov
in
les
xor
push
push
out
dec
add
test
pop
neg
(bad)
xor
movs
loope
mov
aam
add
cs
pop
test
cmp
cmp
or
out
mov
out
push
(bad)
out
xlat
mov
pop
xor
(bad)
sar
add
and
(bad)
gs
lahf
daa
mov
push
cmp
pusha
inc
mov
jbe
jl
xor
jle
sbb
and
inc
mov
(bad)
jmp
int3
mov
pop
jl
fcmove
fidivr
jg
pop
jbe
cmp
lahf
push
addr16
cmp
ret
push
sbb
rol
push
dec
cdq
cld
ds
stc
pop
mov
and
sbb
popf
sbb
or
mov
xchg
sub
add
and
adc
stos
bound
test
into
movs
jl
sub
xor
ficom
lods
jbe
xor
mov
bsf
mov
retf
xlat
mov
lods
inc
pop
adc
in
jmp
hlt
sbb
mov
or
push
into
dec
ds
call
and
ret
inc
adc
fld
sub
nop
pop
xchg
jle
js
sbb
imul
(bad)
(bad)
mul
xchg
jmp
pop
mov
jae
retf
dec
mov
cli
push
xchg
ins
jle
jne
mov
daa
test
into
into
test
mov
call
jmp
and
test
lock
shl
ret
or
jo
aad
inc
js
sbb
dec
mov
ins
pop
jno
jecxz
je
push
mov
xor
cmp
add
mov
or
jmp
cmp
in
push
sub
test
shl
loope
cmps
jmp
nop
jp
and
add
gs
mov
xchg
mov
or
repnz
jb
xchg
adc
inc
xor
clc
in
sub
aad
jp
test
lods
and
fdiv
sub
pop
add
sbb
add
and
mov
cmp
inc
mov
jne
out
jnp
cli
push
jg
sbb
mov
test
push
aad
inc
mov
pop
loop
sbb
call
adc
or
inc
cld
shl
xor
cmp
mov
pop
in
fcmovnu
(bad)
and
(bad)
sbb
mov
cmp
adc
mov
sub
sbb
ins
arpl
inc
jle
cmc
jl
outs
mov
jnp
pop
mov
xor
dec
and
xor
dec
in
mov
lea
movs
fldz
cmps
jmp
adc
inc
lock
inc
xor
push
and
xchg
in
vmovshdup
jl
fild
adc
xchg
imul
imul
das
bound
push
call
xchg
push
push
fsub
push
and
mov
mov
jmp
sub
jno
mov
es
aam
xor
fcomi
jne
sbb
bound
inc
pop
call
fwait
mov
outs
xrelease
push
cmp
mov
and
pop
js
int
jns
in
imul
ret
into
dec
(bad)
aam
neg
add
jge
shl
push
les
mov
(bad)
repz
aaa
add
aam
pop
xchg
mov
pop
bound
jl
adc
ret
push
cld
xchg
inc
loope
xor
pop
adc
mov
(bad)
and
inc
inc
scas
jge
test
fimul
and
cmp
int3
fdiv
jne
dec
test
arpl
fcmovnu
xor
cli
mov
jbe
add
push
cmps
out
cwde
out
xchg
jb
sar
nop
pop
das
jecxz
imul
nop
add
cdq
data16
popa
sub
dec
adc
dec
stos
shl
mov
and
fcmovne
clc
repnz
jg
and
nop
ins
fmulp
and
stos
xor
jmp
adc
or
sub
(bad)
not
aad
add
xor
mov
js
fadd
mov
inc
rcr
adc
fwait
cli
dec
daa
add
add
fnsetpm(287
scas
fcmovnu
or
clc
lahf
pop
pop
je
pop
mov
adc
cli
in
or
mov
adc
jmp
xchg
or
fwait
ret
adc
inc
mov
push
shl
mov
mov
add
sbb
pop
aad
bound
dec
and
icebp
cmc
call
mov
inc
(bad)
stos
xchg
jmp
jo
repz
xchg
dec
shl
stos
arpl
cmc
fisubr
pop
pop
fst
repnz
jbe
pusha
mov
mov
adc
xor
test
mov
or
arpl
adc
mov
ins
mov
movs
ret
pop
cld
test
xor
xchg
clc
mov
jno
pop
nop
stos
xchg
pop
mov
add
scas
cld
mul
add
jnp
inc
out
shl
rol
ss
dec
push
jg
cmp
mov
adc
out
pusha
cmp
imul
outs
or
rdpmc
imul
dec
fwait
popa
out
pusha
cdq
test
sbb
ss
mov
icebp
cmp
jmp
xor
outs
jmp
mov
adc
jo
sub
push
cdq
mov
fistp
push
(bad)
jecxz
sbb
xchg
xchg
int3
pop
hlt
fdiv
push
cmps
iret
cmc
out
cli
ret
imul
jg
mov
in
stc
fisttp
js
sar
sub
repz
mov
sub
mov
movs
push
xor
(bad)
out
xchg
sahf
xor
jg
mov
jp
dec
inc
add
and
cs
arpl
sub
out
push
cmp
cmp
sub
xchg
push
adc
fs
stc
out
dec
mov
lea
mov
mov
push
sub
sti
outs
das
les
retf
xchg
fadd
in
push
stos
adc
xchg
add
loop
arpl
jmp
mov
jmp
mov
(bad)
jecxz
add
and
sar
push
mov
inc
rcl
push
jmp
icebp
add
cwde
sti
push
inc
mov
mov
lods
add
in
lock
scas
in
adc
shl
pop
enter
mov
pop
push
nop
mov
(bad)
mov
adc
sub
cmp
pushf
sub
repz
ins
stos
cmc
dec
pop
push
mov
(bad)
cmp
ins
(bad)
es
jno
or
sahf
dec
sub
es
scas
shl
lods
fwait
mov
daa
sbb
pop
mov
outs
lahf
shld
mov
fwait
or
xchg
add
sub
enter
pop
pop
adc
mov
fisub
loopne
mov
outs
add
ins
out
(bad)
mov
(bad)
(bad)
lods
in
ins
fidivr
xchg
ins
outs
cli
add
and
jno
dec
pop
stc
sub
call
in
sahf
aas
out
pop
test
rcr
xor
lods
fistp
mov
ret
xchg
into
sbb
cwde
out
sahf
into
int3
lods
out
fwait
adc
(bad)
ds
or
sbb
test
outs
mov
fs
adc
xor
mov
popw
cwde
outs
mov
mov
pop
shl
test
sub
xor
inc
pusha
fstp
in
ins
(bad)
movs
ret
pop
adc
ja
addr16
jmp
cdq
cmp
cmps
mov
sub
ss
mov
jle
ss
xchg
jl
mov
es
sub
cmps
adc
push
jb
cli
add
dec
sbb
ret
adc
(bad)
retf
inc
in
sti
daa
cmc
sbb
inc
dec
sub
mov
sar
(bad)
or
dec
xchg
xchg
jae
es
fsubr
mov
dec
out
shr
(bad)
clc
in
jbe
jo
push
enter
mov
mov
hlt
and
lods
sbb
or
xchg
pop
add
mov
fcmovbe
push
mov
mov
je
fdiv
sbb
mov
sub
pop
in
pop
cmp
stos
inc
shl
(bad)
arpl
add
js
mov
pop
imul
ins
repnz
dec
xor
jo
lock
sub
inc
adc
jge
sub
out
cmc
aas
push
mov
xchg
fwait
jmp
aaa
lea
adc
psubb
and
dec
jnp
outs
add
icebp
xchg
pop
loopne
pushf
mov
loope
and
xlat
dec
xchg
push
sbb
add
stos
clc
in
outs
xor
test
or
xor
lock
push
mov
inc
lock
mov
or
mov
add
mul
in
cdq
ret
dec
cmp
push
icebp
out
(bad)
call
ds
sbb
cmc
(bad)
xchg
es
jno
push
int
call
add
ja
movs
mov
rol
mov
pusha
mov
shr
dec
mov
scas
or
mov
push
in
jmp
sti
and
pop
je
or
in
(bad)
cmps
inc
dec
outs
(bad)
adc
std
sbb
jecxz
in
push
icebp
(bad)
outs
add
popf
jne
ror
in
cld
pop
mov
mov
(bad)
add
inc
stc
movs
cmp
int
scas
xchg
shl
cmp
or
xchg
jo
cmp
mov
inc
bound
jle
mov
xchg
xchg
fwait
arpl
add
push
pop
sbb
mov
or
enter
das
push
aam
pop
fcom
push
cli
cmc
aad
push
mov
rcr
cmp
jl
xchg
add
adc
mov
pop
popa
dec
out
jecxz
fwait
test
bswap
mov
jo
dec
iret
mov
fst
arpl
ds
mov
sbb
mov
jge
ins
pop
pop
retf
dec
jp
xchg
loopne
loop
dec
syscall
aad
cdq
xchg
xchg
cmc
iret
aad
add
add
inc
pop
sbb
push
loope
sub
sub
bound
neg
push
imul
add
imul
test
test
dec
pusha
cmps
int3
(bad)
stc
mov
popa
icebp
cmp
add
out
xlat
pop
repnz
or
dec
and
and
mov
sub
hlt
scas
jecxz
sti
mov
(bad)
mov
xchg
xor
retf
inc
ror
xchg
push
and
mov
mov
pop
das
out
lea
adc
test
add
iret
iret
mov
and
repz
dec
movs
sub
cmp
jle
mov
xchg
adc
xchg
sub
jge
imul
pop
or
bound
xor
aad
mov
lahf
jae
cmp
jne
inc
aam
cmp
inc
sar
mov
std
addr16
mov
xor
mov
sahf
adc
xadd
hlt
(bad)
mov
stos
xchg
jmp
mov
jns
imul
xor
inc
xor
(bad)
mov
sti
stos
mov
aad
int3
push
movs
xchg
inc
mov
push
adc
loop
cli
adc
jmp
adc
stos
push
mov
and
in
cs
pop
inc
inc
add
or
into
xchg
jne
dec
sub
dec
pushf
popa
int
sub
sbb
cmp
fisubr
and
mov
push
sahf
test
cld
mov
lods
gs
outs
test
jnp
or
xchg
pop
test
mov
or
imul
push
ret
mov
xor
pop
sub
mov
push
shl
(bad)
in
push
and
cwde
mov
sbb
jmp
cs
enter
out
ja
aad
stos
dec
xchg
or
pop
cmp
pop
pop
jbe
inc
pop
lods
ret
mov
movs
test
ins
idiv
and
rol
sbb
jnp
and
cmp
daa
adc
(bad)
xor
sbb
aad
push
test
pop
cmp
data16
mov
gs
xchg
call
inc
(bad)
dec
inc
push
push
add
fcom
and
sbb
scas
adc
scas
outs
or
add
push
cmp
rcl
inc
inc
mov
mov
or
jns
cwde
jnp
push
cwde
adc
sub
stc
and
sub
cmp
mov
mov
ret
retf
(bad)
gs
push
lds
ret
pop
(bad)
(bad)
fiadd
inc
jge
js
(bad)
(bad)
xor
dec
pop
xor
sbb
data16
sbb
and
dec
or
push
imul
call
dec
mov
js
mov
inc
(bad)
cmp
push
daa
adc
pop
daa
mov
icebp
in
std
(bad)
pop
loop
cmp
ja
cvtps2pd
push
leave
cmp
rol
mov
adc
fwait
xchg
mov
not
push
jmp
js
shr
shr
outs
and
movs
and
cmp
mov
mov
leave
mov
dec
into
sub
mov
arpl
pop
sub
sub
inc
and
mov
or
das
push
mov
sbb
xchg
pop
(bad)
es
test
xchg
rcl
and
addr16
test
nop
ss
add
loope
adc
dec
mov
pop
inc
mov
xchg
das
jp
push
repnz
inc
es
sub
(bad)
fmul
xor
xchg
mov
ja
push
or
fisub
inc
sahf
fist
mov
rcl
add
push
bound
push
sub
mov
sahf
cli
sbb
retf
outs
in
mov
cmp
iret
cmps
daa
movs
repz
cwde
lock
icebp
loope
cwde
std
inc
pop
pop
in
adc
das
push
inc
lods
leave
ret
pop
inc
push
xchg
mov
jnp
aas
movs
jle
pop
sub
mov
das
cmp
mov
dec
repnz
fistp
in
and
add
jo
out
push
mov
or
(bad)
(bad)
jns
xchg
shl
mov
xor
cmps
ror
cmc
xor
pop
jl
stos
xlat
mov
outs
jp
movs
ja
in
sbb
xchg
inc
mov
mov
jmp
xchg
sbb
mov
inc
loope
pushf
push
outs
xchg
inc
fstp
push
mov
xchg
movs
sbb
adc
dec
stos
mov
pop
mov
lahf
ret
xchg
(bad)
dec
call
(bad)
setnp
test
std
xchg
retf
jmp
mov
add
cli
or
inc
xor
adc
adc
daa
int3
adc
out
cmp
mov
mov
aaa
test
(bad)
xchg
sub
loop
push
xor
popa
dec
fisttp
cwde
dec
mov
hlt
mov
cmp
sbb
mov
std
fild
rol
push
cdq
xor
test
test
mov
push
rcr
sbb
(bad)
mov
scas
int
adc
gs
shl
sbb
pop
cdq
(bad)
cmp
arpl
add
cmp
rep
mov
loope
outs
(bad)
sbb
jmp
arpl
push
dec
xor
jle
xchg
test
fadd
push
push
dec
clc
mov
dec
pop
dec
ds
loop
fcom
sub
mul
jno
jmp
inc
fst
lea
int3
jbe
pop
scas
stos
aaa
fdiv
sub
lods
add
mov
jo
shl
jmp
fld
mov
mov
dec
shl
std
arpl
aas
xor
leave
or
dec
xchg
inc
jecxz
ror
pop
fwait
or
pop
adc
dec
in
dec
rcl
mov
call
scas
idiv
add
mov
ds
pusha
das
out
mov
mov
xchg
jge
inc
mov
std
sti
sub
xchg
cmp
loop
push
xchg
mov
pop
js
(bad)
les
repnz
push
loope
xchg
jmp
icebp
push
lods
or
neg
cmps
iret
cdq
movs
jl
je
mov
stc
add
pop
nop
cmp
movs
add
repnz
int3
push
dec
sub
int3
push
xor
or
dec
lea
xchg
cmps
jle
dec
popa
jae
sbb
pop
push
ret
jb
je
pop
fwait
gs
outs
mov
sbb
ja
adc
xchg
ds
aad
(bad)
out
adc
add
cwde
mov
test
icebp
fisttp
ret
jmp
xlat
fdivr
movs
push
mov
dec
mov
mov
ret
imul
rcl
mov
sub
mov
add
push
mov
loope
cmp
add
jmp
rcl
lock
xlat
scas
aas
push
jbe
jmp
add
pop
es
icebp
pusha
inc
or
nop
push
jmp
popa
stos
test
or
aam
ss
cmp
push
push
pop
pop
dec
fcomp
add
enter
aaa
ins
jbe
call
arpl
shl
ret
cwde
ror
jge
push
push
ins
push
mov
sbb
or
pop
jmp
in
jns
xchg
dec
inc
inc
jae
and
clc
xor
scas
push
je
mov
sbb
xchg
sbb
jg
sbb
fstp
sub
sbb
xchg
adc
push
and
mov
xchg
(bad)
out
xchg
push
outs
adc
xor
fist
retf
xor
sbb
lahf
pushf
adc
cmc
cmc
into
xor
jae
sahf
je
es
lahf
xchg
add
pop
cmp
je
sbb
dec
cmc
sbb
das
mov
fld
jnp
or
push
dec
add
mov
sub
add
in
call
retf
xor
les
push
imul
loope
loop
jno
loope
lea
(bad)
sub
(bad)
ss
scas
mov
cmps
daa
xor
fist
gs
daa
pop
add
popf
cmp
jne
(bad)
sahf
cmp
inc
or
lea
mov
sub
dec
cli
xor
or
mov
jmp
cmps
adc
mov
jmp
fstp
ror
and
out
jl
leave
(bad)
fs
ds
ds
mov
jnp
push
pop
iret
test
into
push
mov
fs
pop
lds
(bad)
das
push
iret
ror
(bad)
cmp
pop
(bad)
cmp
mov
xor
or
jp
jne
fdiv
dec
xor
xor
or
mov
popf
das
and
sub
iret
xor
sbb
sbb
cmc
in
sub
cmp
xchg
fwait
aad
xchg
sub
cmc
jecxz
(bad)
arpl
stos
mov
push
push
ds
fs
sub
aas
test
in
adc
jle
scas
sbb
loop
xchg
sbb
ds
xlat
inc
inc
pop
push
clc
enter
mov
jle
push
loop
cmp
(bad)
pop
shl
sar
cmp
lods
sub
xor
aaa
dec
retf
cmc
mov
pop
rcl
aad
hlt
jp
lds
clc
xchg
pop
push
jmp
int3
(bad)
xor
pop
es
movs
adc
push
aad
cmc
(bad)
sahf
out
popf
test
xlat
and
in
inc
push
daa
xor
push
lahf
xchg
idiv
fisubr
in
pop
out
retf
jns
add
cmp
xchg
mov
adc
cmp
xor
inc
cmp
sub
adc
shl
(bad)
sub
out
out
mov
push
push
ffreep
arpl
jo
sbb
xchg
test
pop
pusha
(bad)
rol
in
mov
cmp
fidivr
jno
lods
add
jne
lock
lods
jae
cmp
iret
fist
jns
cmps
ss
arpl
xor
pop
shl
jns
into
cmp
sub
inc
push
sbb
retf
(bad)
(bad)
enter
dec
(bad)
sar
into
sbb
in
and
out
lods
push
sahf
mov
and
jno
jg
movs
es
pop
pop
(bad)
xor
adc
lock
ret
adc
jmp
xchg
xor
add
sbb
leave
dec
add
fmul
jl
loope
sbb
xor
mov
cmp
push
ror
xor
cdq
test
into
nop
in
mov
and
dec
cmp
mov
inc
rol
enter
fwait
add
mov
sahf
repz
ins
mov
and
jp
xor
cmp
dec
and
psrld
add
mov
jne
sbb
push
cli
(bad)
push
sahf
or
pop
rcl
sbb
mov
jbe
mov
xor
push
jno
aam
push
cmp
cmps
iret
mov
inc
jb
mov
add
ror
call
fsub
xchg
mov
adc
les
popa
xor
inc
pushf
test
sbb
mov
out
push
xchg
sub
push
jmp
stos
adc
ret
cmp
and
daa
shr
test
(bad)
xor
fmul
out
shr
rep
sub
jbe
fistp
fild
xchg
sub
(bad)
pop
push
jmp
and
sub
mov
and
pop
into
or
bound
push
inc
push
push
dec
enter
cwde
adc
in
xchg
sti
lock
dec
movs
ds
pop
ret
mov
into
enter
mov
sbb
jnp
lahf
jecxz
cdq
mov
aad
shl
ret
jp
jl
ins
add
mov
and
ins
jns
xchg
sti
loope
pop
loop
pop
mov
or
dec
sbb
or
ins
jo
repnz
inc
ficom
dec
mov
outs
jne
outs
push
sub
pop
rcr
cli
sbb
xor
and
dec
fld
xchg
int
jno
xor
pop
push
repnz
cli
or
mov
mov
pop
stos
arpl
dec
test
inc
mov
fs
js
gs
xor
dec
dec
loop
sbb
scas
sub
push
cmc
(bad)
push
lds
or
mov
sbb
add
popf
jnp
adc
lahf
lods
add
cdq
outs
pop
lods
call
rcl
into
into
popa
mov
pop
sbb
(bad)
stc
loope
or
and
xchg
repz
add
cmc
in
cwde
call
jno
jbe
imul
pop
pop
xchg
out
fistp
pop
out
scas
stos
outs
movs
in
cmps
sar
movs
(bad)
ficom
cmp
xor
jo
cld
cmp
dec
add
xchg
push
xchg
or
mul
and
dec
int
dec
into
add
pusha
pop
fld
(bad)
jbe
jmp
and
mov
(bad)
sbb
xor
sar
sub
xchg
fsub
int
xchg
lahf
fwait
mov
out
pusha
out
(bad)
mov
jecxz
mov
ds
bound
div
and
pop
hlt
out
inc
jmp
cs
xchg
ja
gs
fldcw
cwde
and
push
lods
hlt
cmc
jge
outs
pusha
mov
mov
nop
dec
es
sar
ret
ret
xchg
shl
xor
adc
jl
xor
shl
dec
pop
jp
push
fnstsw
sbb
jne
xchg
inc
adc
push
adc
cmp
add
into
or
and
adc
out
mov
add
scas
gs
sub
inc
pop
adc
cs
pop
(bad)
ror
dec
or
cmp
es
call
xor
push
aam
ret
push
pop
push
lods
xor
and
shl
inc
pusha
ret
cs
fild
out
pop
ret
icebp
mov
dec
pop
lock
jo
enter
xlat
pop
stos
inc
sub
ins
sub
add
into
rol
pop
push
add
(bad)
out
push
pop
sub
dec
mov
mov
call
ror
mov
(bad)
pop
mov
mov
mov
lds
(bad)
aad
js
data16
cli
adc
leave
mov
pop
adc
rcl
adc
shl
nop
add
pop
movs
or
ds
mov
jp
repz
lea
push
pusha
lea
rcr
pop
or
cmp
or
out
cmps
cmp
out
rol
push
loop
nop
in
dec
dec
mov
cmp
ins
sub
dec
xor
(bad)
(bad)
dec
addr16
fstp
inc
imul
mov
mov
dec
jge
dec
jecxz
push
mov
mov
hlt
cmp
cmps
push
mov
mov
cmp
test
sbb
cld
pop
jbe
lods
cwde
loope
mov
scas
xor
mov
sub
out
mov
es
cmp
rcr
xor
call
sar
in
movs
arpl
stos
jae
idiv
in
shl
cli
add
mov
inc
sub
cmp
imul
or
pop
pusha
dec
clc
int3
adc
shl
mov
retf
shr
fmul
sbb
sub
mov
stos
mov
xchg
cmp
add
jp
xchg
lahf
cmp
mov
adc
sbb
pop
shl
int
outs
xlat
mov
push
adc
outs
mov
push
mov
push
sbb
mov
shl
cmp
cs
jo
(bad)
ins
je
jp
outs
lock
imul
adc
adc
mov
mov
aas
push
in
stc
loope
push
jbe
adc
pop
arpl
test
inc
jo
rcr
aaa
xlat
cmp
inc
and
repz
clc
mov
fwait
sub
ins
add
test
fcomip
int3
adc
aad
bound
popa
(bad)
dec
push
cmc
fdiv
loopne
out
dec
or
add
inc
stos
xchg
test
loope
mov
push
out
in
jle
scas
js
mov
jae
lds
mov
in
call
jbe
retf
inc
cmp
jne
push
mov
inc
add
sub
jmp
fdiv
fisubr
push
loope
inc
pushf
xor
lock
loop
inc
lods
push
push
xor
sub
xchg
adc
sub
xchg
or
xchg
les
mov
movs
call
cmp
not
cld
add
xchg
stos
inc
ins
shl
and
mov
in
test
fcmovu
pop
cdq
mov
jle
mov
fistp
dec
push
cmp
lds
push
xor
or
ror
xchg
jg
sbb
daa
std
nop
jns
push
jne
fstp
daa
lahf
adc
bound
push
stos
test
sub
stos
out
cwde
push
sub
and
sub
cwde
dec
ror
jae
mov
aad
aad
es
mov
loope
xchg
mov
ds
es
and
mov
pop
shrd
xor
cmp
mov
cmp
movs
inc
inc
xchg
sbb
xor
mov
pushf
lods
loope
jnp
push
mov
xchg
jnp
add
mov
sbb
test
sbb
push
(bad)
adc
ret
push
push
popa
sbb
jbe
push
lahf
or
cmc
ja
lods
ficom
adc
xchg
retf
cmp
aaa
xchg
inc
out
sbb
cdq
or
repnz
sti
jecxz
push
loop
repnz
cld
std
pop
sub
loopne
jne
mov
jae
cwde
sub
shr
inc
cmp
add
mov
fs
cli
outs
jne
jo
dec
and
cmp
ror
or
add
jg
ror
jp
push
(bad)
push
inc
and
adc
jle
shr
dec
pop
cdq
add
mov
aad
in
into
mov
repz
retf
cmp
mov
xchg
(bad)
outs
(bad)
bound
or
jge
daa
mov
push
inc
add
arpl
mov
js
inc
cmp
push
mov
icebp
push
inc
xchg
pop
adc
push
pop
outs
hlt
xlat
call
fst
mov
jmp
xchg
inc
nop
enter
push
imul
or
mov
stos
inc
adc
or
hlt
popa
aaa
inc
mov
xchg
pop
sub
mov
jecxz
pop
leave
retf
dec
data16
cld
daa
rcr
xchg
cdq
jns
mov
sbb
gs
inc
push
cld
xor
std
loopne
int3
sbb
out
in
push
mov
in
cld
push
lods
mov
loope
mov
cwde
xchg
inc
inc
pop
(bad)
(bad)
mov
pop
jecxz
push
pop
add
(bad)
or
xchg
jnp
xchg
aaa
fwait
mov
push
cmp
shr
mov
jg
cs
push
test
dec
ret
mov
inc
xlat
ins
outs
rcr
lahf
je
lahf
or
pop
aas
push
(bad)
push
xchg
data16
inc
or
xchg
jb
(bad)
aam
xchg
jmp
lea
lahf
push
inc
shr
mov
out
pop
ja
add
push
xchg
jo
jns
xchg
sbb
nop
inc
aam
call
retf
mov
clc
or
cmc
xor
pop
icebp
jecxz
add
aas
push
(bad)
lock
popf
jge
popf
ret
xchg
mov
mov
or
jo
and
jae
(bad)
sub
imul
xor
push
xchg
dec
iret
adc
sbb
in
cmp
dec
jmp
adc
scas
retf
mov
cmc
push
int3
jecxz
stos
add
out
dec
jae
mov
rcr
mov
xor
or
ds
mov
das
retf
inc
pop
add
lea
scas
enter
cmp
in
jmp
mov
jno
fimul
in
add
sub
sbb
add
sbb
push
and
outs
mov
mov
scas
push
stos
fs
jbe
outs
sti
cmps
xchg
lods
popa
mov
cli
push
and
xchg
into
push
inc
stos
pusha
int3
and
or
fld
or
ror
or
dec
out
jne
fadd
sub
push
or
mov
jecxz
sbb
ja
cli
xor
pop
fnstsw
jmp
imul
fs
add
dec
dec
hlt
xchg
das
mov
fucomip
dec
or
jno
mov
enter
test
out
mov
fild
ret
add
mov
sbb
push
dec
mov
sbb
sbb
add
sti
jno
test
fwait
xor
es
pop
fsubr
(bad)
xor
es
call
inc
xor
gs
in
sbb
dec
and
(bad)
test
push
mov
jae
mov
cmp
out
rcr
xchg
adc
xlat
out
push
jne
loopne
sbb
jecxz
daa
dec
push
jge
fldcw
xchg
je
in
xchg
push
jne
out
je
pop
ficom
inc
xchg
sahf
sbb
sbb
scas
mov
lods
sbb
or
fst
test
mov
in
jecxz
mov
clc
push
fstp
les
xor
popf
or
inc
gs
rcl
(bad)
sbb
loopne
mov
sbb
pop
fsubr
adc
mov
int
push
test
repz
xchg
imul
aad
sahf
ins
fs
mov
scas
jle
jnp
call
das
cmps
mov
adc
adc
sbb
es
dec
xchg
mov
mov
out
movs
xor
push
push
(bad)
idiv
lods
jmp
push
sahf
jle
push
cmp
bound
lock
xchg
inc
in
shl
imul
das
mov
mov
adc
inc
call
ffreep
xchg
push
xlat
retf
test
push
nop
jp
xor
cmp
retf
repnz
ds
lea
xlat
inc
mov
cmp
shl
xor
dec
pop
adc
call
xor
or
ret
add
addr16
cdq
and
popa
push
mov
scas
lahf
ret
xchg
push
pusha
fidivr
movs
mov
sub
xor
sub
dec
cmp
(bad)
popa
inc
lahf
sbb
mov
adc
cwde
dec
test
pop
dec
repz
dec
daa
dec
push
fcomp
jmp
cmp
ret
(bad)
enter
mov
pop
scas
cmp
popa
repnz
mov
add
cmp
mov
data16
or
add
adc
sub
sbb
(bad)
fimul
xor
and
cdq
fcom
add
inc
mov
jae
cmps
mov
jno
mov
jae
mov
mov
sub
icebp
jge
xor
movs
adc
(bad)
iret
add
dec
mov
xor
into
fidivr
xor
pop
sub
ins
jecxz
fnstcw
scas
inc
call
add
push
outs
xor
sti
mov
ds
aas
in
out
and
mov
outs
add
or
mov
add
jmp
stc
(bad)
(bad)
test
and
add
pop
xor
clc
mov
mov
and
sub
push
mov
push
mov
movs
cmps
sub
loop
mov
shl
movs
movs
out
es
outs
mov
add
jae
cwde
shl
arpl
mov
or
imul
cli
cld
mov
(bad)
(bad)
jns
cmp
(bad)
(bad)
out
retf
mov
inc
test
xor
xor
dec
and
push
jae
xchg
mov
fistp
lds
inc
les
ss
cmp
imul
dec
xor
jmp
ins
std
dec
ficomp
mov
pop
call
daa
dec
mov
push
aas
mov
pop
icebp
adc
adc
pop
xchg
cs
cmp
or
xchg
out
pop
aad
ror
sub
jnp
or
lods
adc
popa
jae
icebp
inc
xor
mov
fbstp
fwait
sub
aaa
jle
adc
sub
or
dec
repnz
pop
cdq
pop
pop
mov
aas
lods
inc
fbld
xchg
ss
and
jb
xor
inc
jo
mov
or
mov
pop
mov
push
mov
shl
xchg
add
int3
mov
cwde
dec
test
lods
mov
sahf
jnp
fdivr
test
loop
mov
lahf
mov
sbb
fwait
and
fs
les
mov
jne
cmp
mov
mov
or
test
inc
dec
xor
fidiv
add
mov
adc
and
xor
push
xor
sahf
aas
scas
nop
xor
daa
add
xor
xchg
xchg
outs
dec
mov
test
cmp
adc
adc
adc
mov
lahf
sub
ficomp
int3
stos
inc
cmp
pop
mov
push
push
fwait
mov
das
mov
in
sub
mov
sar
and
dec
jecxz
pop
push
inc
inc
sbb
test
(bad)
xlat
imul
aad
mov
test
idiv
mov
data16
nop
aaa
pushf
dec
push
add
mov
rcl
aas
pop
mov
cmp
call
lea
fisub
ror
add
out
jns
daa
movs
daa
ja
test
scas
or
ret
pop
pusha
fnsave
pusha
test
and
xchg
xlat
or
xchg
leave
imul
inc
mov
mov
mov
pop
outs
xchg
jae
sbb
jb
pop
push
shl
enter
cmc
mov
ins
cmps
and
push
je
imul
cli
(bad)
jb
into
or
mov
call
ror
jo
push
mov
or
je
mov
enter
xchg
push
sbb
push
in
retf
jae
mov
hlt
push
js
cmp
xchg
sub
or
fistp
pushf
in
cdq
call
in
fstp
add
mov
stos
sub
rol
and
scas
shr
jmp
std
cmp
repnz
dec
cmps
sub
jmp
push
fwait
cmc
adc
enter
loopne
fsubr
dec
sbb
test
lods
cmp
jmp
push
xor
cmp
jecxz
aad
fld
imul
inc
stos
das
fs
and
mov
imul
mov
sti
push
dec
push
jp
ja
pop
cmp
mul
pop
iret
mov
sub
and
pop
cmp
push
scas
mov
push
in
repz
push
add
std
jo
and
add
mov
xchg
pop
inc
add
adc
or
sbb
fcom
cs
(bad)
push
fwait
or
repnz
loope
call
loop
test
movs
push
push
push
retf
hlt
cmc
jp
cdq
jmp
shr
inc
(bad)
aad
adc
in
enter
jno
mov
pop
outs
mov
push
dec
(bad)
push
cli
mov
add
and
xor
rol
rcl
mov
sub
mov
xor
out
fisubr
and
inc
xchg
pushf
sti
scas
inc
aaa
xchg
pop
cld
sbb
inc
xchg
loopne
bound
pop
neg
pop
(bad)
in
xchg
xor
inc
lds
jge
sbb
fidivr
add
jmp
imul
(bad)
jo
push
dec
push
mov
ins
xor
cld
xor
scas
jg
xchg
xchg
push
inc
push
shl
adc
mov
push
inc
aam
pop
dec
dec
test
xchg
fisub
(bad)
pop
(bad)
test
jno
(bad)
jle
mov
lock
and
icebp
test
cmc
dec
out
and
cmp
mov
sub
shl
out
jle
xlat
or
dec
shl
mov
(bad)
pop
sbb
(bad)
loopne
int3
mov
pop
div
cmps
test
ja
mov
bound
inc
out
xor
mov
ret
imul
and
mov
mov
add
sbb
pop
cmp
add
mov
cwde
push
inc
clc
es
gs
adc
sub
ficomp
push
push
dec
sti
and
(bad)
fcom
jns
xchg
addr16
test
inc
push
jmp
sub
mov
add
out
mov
push
in
(bad)
xchg
clc
cs
mov
(bad)
pop
in
mov
call
and
out
je
sbb
scas
cli
(bad)
cmps
sub
jnp
fwait
dec
jno
jne
push
or
add
mov
sub
pop
sub
jo
fldcw
push
out
dec
in
adc
sub
popa
xor
jge
inc
pop
lea
pop
loop
push
(bad)
jp
cmp
push
stos
iret
and
jmp
clc
pop
ins
adc
sbb
jge
mov
and
push
xchg
and
push
mov
jg
icebp
push
mov
sbb
xor
mov
mov
in
ins
sub
inc
les
and
dec
sub
lods
jp
jb
xor
jnp
outs
jmp
lods
nop
jg
or
add
mov
(bad)
pop
sbb
jecxz
adc
sub
pop
mov
cmp
clc
dec
ret
inc
sub
or
es
jns
mov
adc
sub
sahf
mov
outs
mov
cmp
xchg
aas
inc
popf
(bad)
(bad)
pushf
fiadd
icebp
add
(bad)
pop
ja
cmp
add
or
mul
cmc
xor
clc
std
jae
pop
dec
inc
mov
inc
lods
add
pop
(bad)
movs
cwde
xchg
ins
pop
mov
push
mov
sbb
imul
je
push
movs
pusha
movs
(bad)
std
mov
leave
push
cmp
mov
push
sub
fmul
jae
imul
repnz
cmp
mov
imul
aad
pop
push
int
cs
je
aas
pop
xor
jl
xor
or
ret
jl
in
ins
je
repz
dec
sub
sub
(bad)
fsubrp
sbb
pop
imul
bound
cmps
sub
mov
jae
(bad)
sub
pop
sbb
mov
lds
cs
inc
ja
push
pop
or
aaa
shl
add
push
repz
repz
jae
cmc
(bad)
dec
push
inc
cli
cmps
jae
aas
cmp
fwait
jns
test
repz
stc
test
or
cmp
push
shl
fs
div
sbb
xchg
hlt
outs
sub
ins
dec
ins
push
mov
in
lahf
popf
lods
pushf
inc
movs
inc
mov
out
mov
xchg
(bad)
jmp
jmp
pop
and
or
shl
push
mov
shr
aam
inc
mov
jae
jecxz
or
push
je
cmps
mov
call
call
bound
ss
cs
push
mov
fcmovnb
sahf
push
icebp
mov
xor
repz
mov
push
lea
dec
test
outs
leave
add
dec
shr
das
(bad)
call
add
hlt
dec
xlat
es
mov
movs
ret
(bad)
push
cld
ins
aaa
sub
ss
xor
adc
jno
test
xchg
sub
mov
mov
data16
mov
sbb
dec
xor
xchg
cmps
push
inc
inc
xchg
lods
xor
mov
cwde
rcl
dec
test
mov
or
fisubr
cmp
xor
pop
cmovs
cmps
out
iret
sbb
dec
mov
lods
in
daa
(bad)
movs
nop
push
dec
cmp
cld
mov
push
pop
data16
mov
cmc
mov
and
adc
scas
sbb
repz
pop
inc
jne
add
inc
rcr
neg
test
mov
xchg
jae
lods
push
mov
or
fsub
push
into
push
xchg
mov
sbb
cs
jmp
(bad)
inc
mov
and
xchg
pop
pop
xor
fsub
les
sbb
mov
fidivr
mov
in
cld
test
xchg
mov
pop
imul
cwde
cld
dec
rcl
rcr
add
and
nop
stc
adc
jle
ficomp
dec
dec
lahf
fnstsw
xchg
test
mov
or
std
cld
xchg
daa
ds
push
fdivr
outs
popf
data16
fldcw
jbe
in
inc
and
pop
(bad)
cmp
cmps
jecxz
add
mov
add
mov
ret
ins
push
mov
inc
or
js
xchg
pop
arpl
sub
mov
add
ret
int3
xor
and
sbb
mov
jae
or
sahf
and
cwde
mov
add
ins
(bad)
mov
stc
xor
push
ss
mov
fild
mov
gs
adc
and
out
jnp
sar
xchg
mov
pop
cmps
cmps
jbe
test
lds
div
(bad)
and
mov
mov
je
or
out
loope
jmp
stc
push
dec
sbb
pusha
inc
adc
push
pop
enter
inc
and
call
cmps
adc
enter
sbb
push
inc
dec
mov
or
push
stos
cwde
lds
cmps
jle
dec
dec
mov
push
xchg
fimul
pop
sub
mov
in
mov
xlat
jae
mov
mov
jge
mov
stos
push
leave
ror
inc
std
out
and
iret
jne
xchg
shl
rcl
or
movs
or
std
push
sbb
lds
mov
out
add
ficomp
test
jae
imul
push
(bad)
arpl
nop
xor
push
mov
mov
sub
cmps
cmp
adc
cmc
sub
in
shl
stos
cld
jmp
inc
vfmsubaddps
dec
jae
fidiv
lock
xor
pop
scas
out
push
sbb
nop
inc
mov
sub
fwait
mov
call
in
add
mov
(bad)
std
cmps
pop
fcom
ds
fnsave
loop
jb
lods
mov
and
inc
dec
jo
dec
shl
jmp
push
inc
push
bound
push
fcmovnu
xor
ins
jb
pop
ror
fcomp
nop
xchg
add
jmp
adc
ret
sub
cmp
movs
and
lock
xchg
loop
adc
jb
stos
xchg
push
add
sub
imul
int
dec
jnp
fadd
mov
(bad)
xlat
or
movs
sahf
push
sub
sub
rcr
jle
xor
outs
jmp
cs
sub
or
out
adc
cmc
mov
shl
and
arpl
sti
mov
xor
clc
inc
fisub
sub
rcl
mov
mov
ins
test
out
fild
or
jp
push
inc
sti
scas
sbb
je
enter
enter
pop
push
clc
or
xchg
jns
mov
jbe
ret
xor
sbb
in
xchg
jbe
int3
ins
mov
or
cmps
sti
ret
data16
int3
jg
or
sbb
cmp
mov
fld
popa
and
jno
jmp
mov
mov
jg
lahf
out
ret
push
bound
out
xor
and
loopne
icebp
cmp
inc
les
xor
and
pop
xchg
and
mov
xor
push
xor
sub
sbb
lods
mov
addr16
lock
ror
pop
icebp
ins
xor
jge
out
call
imul
(bad)
mov
ins
imul
xchg
mov
or
adc
xor
sbb
sub
jb
movs
push
(bad)
cld
daa
daa
stos
ins
in
dec
sbb
loope
jp
push
push
mov
clc
mov
ret
mov
leave
or
jmp
and
lds
add
sub
or
push
mov
mov
jae
ret
shr
xchg
xchg
mov
ins
cmc
(bad)
lods
dec
(bad)
xchg
cli
pop
ret
mov
cmp
movs
repnz
sub
std
shl
cwde
sub
shl
ret
loop
mov
jge
mov
imul
mov
test
and
ins
aas
cmc
sbb
inc
outs
arpl
inc
fadd
mov
jmp
mov
pop
and
sub
cmps
popf
dec
mov
mov
dec
cmp
jb
xor
repz
jmp
or
jae
adc
sbb
mov
addr16
push
test
jle
push
movs
das
outs
test
pop
mov
out
xor
adc
outs
mov
xor
(bad)
mov
add
push
mov
imul
jb
jp
in
mov
out
xchg
ret
dec
and
ret
fdiv
inc
out
repnz
into
pop
pop
ja
dec
sti
push
push
xor
leave
movs
sub
or
test
pop
mov
test
nop
call
mov
bound
adc
jp
es
imul
fsub
push
adc
pop
scas
xchg
bound
loopne
pop
add
es
mov
mov
das
in
xor
gs
setge
pop
and
mov
xchg
jb
mov
xor
jg
mov
out
movs
or
xor
ins
and
movs
push
inc
leave
sub
(bad)
int3
cmp
xchg
mov
je
xchg
in
addr16
cwde
imul
mov
jle
jl
(bad)
dec
mov
out
loope
sbb
outs
or
inc
sub
mov
push
int
not
inc
push
xchg
cmc
iret
sub
call
ret
or
cmc
sar
sbb
imul
sbb
jns
mov
mov
xlat
push
(bad)
loopne
or
pop
int
mov
pop
js
inc
shl
(bad)
push
and
ins
inc
outs
stos
cmp
jnp
sub
in
cmp
movs
and
pop
cmp
adc
adc
ret
xchg
xor
mov
cli
push
movs
xchg
dec
mov
and
pop
retfw
sub
mov
mov
dec
daa
lock
(bad)
dec
xchg
(bad)
imul
aam
mov
pop
xchg
sbb
dec
lock
mov
adc
pop
or
addr16
out
das
xor
inc
pop
push
ins
inc
daa
inc
sub
int3
push
mov
add
sub
adc
inc
mov
fidiv
es
dec
cmp
enter
lods
rcl
dec
stos
sub
mov
leave
scas
sbb
ins
mov
and
retf
jbe
sub
jl
dec
mov
cdq
or
stos
cli
not
(bad)
cmps
test
fadd
int3
sbb
and
rcr
xchg
sub
cmps
cmp
aad
xchg
mov
jo
lock
dec
movs
mov
clc
sbb
sbb
pop
je
es
pop
mov
out
pop
(bad)
mov
(bad)
jecxz
icebp
mov
cmps
xor
or
pop
nop
inc
or
mov
in
jmp
mov
fistp
add
jo
push
mov
adc
push
cli
adc
cdq
cmp
out
imul
in
sbb
inc
adc
inc
ret
pop
mov
pop
loop
ins
(bad)
fwait
ins
in
test
dec
mov
push
jmp
aas
movs
inc
scas
mov
inc
sub
cli
inc
sub
sbb
jmp
je
xchg
push
inc
mov
xchg
jl
test
add
xor
addr16
adc
push
jb
inc
xor
(bad)
fld
jae
add
cdq
sub
ja
stc
bt
retf
leave
cmp
bound
push
in
push
stos
xor
mov
inc
and
xor
push
sub
mov
or
mov
call
lods
xchg
hlt
ret
push
(bad)
and
js
cmp
jnp
stc
in
push
adc
and
sar
sub
ja
call
mov
cwde
xor
fmul
mov
push
mov
fwait
and
dec
xor
and
sar
sahf
iret
fwait
pusha
call
(bad)
and
je
imul
cmp
mov
mov
xor
xchg
adc
jae
repz
xlat
sub
ret
js
jecxz
jmp
fcom
scas
xor
aam
dec
or
popa
outs
ss
cwde
mov
add
outs
lods
and
imul
fidiv
jmp
dec
add
xchg
dec
adc
pushf
dec
lods
add
adc
pop
mov
sbb
cli
jle
xor
dec
(bad)
jp
jbe
aam
jmp
js
cmp
bound
mov
jns
fbld
pop
cmp
lods
and
loop
xchg
pop
push
mov
sbb
ror
mov
push
ja
mov
mov
ins
mov
jae
mov
mov
sub
test
and
jl
push
mov
addr16
adc
cmp
jp
loop
test
xor
cs
dec
cdq
add
jne
sahf
out
inc
fimul
clc
xor
std
sbb
pop
movs
test
leave
icebp
adc
popf
cmp
shl
pop
jp
sub
xchg
inc
enter
das
xor
mov
ror
xor
mov
cli
out
mov
sub
pushf
or
(bad)
neg
adc
pushf
xor
sbb
fadd
dec
stc
das
pop
loop
imul
sub
pop
push
js
rcl
sahf
stos
adc
ins
sub
int3
repz
xor
hlt
fistp
stos
scas
sub
adc
ret
mov
out
fst
(bad)
mov
mov
hlt
pop
pop
lock
or
add
inc
leave
mov
imul
mov
mov
arpl
or
mov
ja
mov
jmp
(bad)
lock
add
mov
in
(bad)
adc
and
jmp
dec
xor
sti
sbb
in
adc
or
mov
xor
fldcw
mov
test
scas
outs
outs
push
jae
add
call
jns
jg
enter
xor
stc
test
call
inc
inc
sbb
inc
test
sbb
(bad)
pop
imul
test
push
pop
dec
rcr
pop
into
mov
mov
cmp
xchg
into
repz
push
out
rcr
test
xchg
popa
test
or
xor
ja
cwde
or
or
mov
pushf
out
sub
and
or
cmp
push
add
lds
dec
cmp
add
inc
lds
mov
push
jmp
in
dec
jno
out
retf
je
inc
push
stc
(bad)
retf
mov
mov
jp
sar
outs
lods
push
inc
sbb
lods
cwde
ins
add
cs
test
dec
adc
dec
scas
push
sub
cmc
add
fsubr
fistp
dec
aas
xor
inc
push
or
pusha
add
pop
add
jae
icebp
pop
mov
mov
jbe
xchg
test
jg
inc
mov
add
mov
int3
mov
mov
call
and
cdq
and
push
push
mov
mov
dec
das
push
and
mov
cmps
mov
jecxz
add
xor
rcl
push
pushf
inc
add
mov
push
jb
and
sti
inc
aam
dec
das
lahf
jae
(bad)
loopne
ret
xlat
cmp
add
xchg
jb
(bad)
dec
push
fwait
adc
dec
outs
cmp
mov
adc
dec
gs
mov
lds
jns
sub
lods
das
sbb
cmp
out
jnp
sbb
mov
inc
mov
mov
cmp
stc
jecxz
mov
xor
sub
add
xor
fmul
iret
jmp
sub
outs
imul
ins
movs
je
xor
mov
xor
out
and
push
cmps
sbb
ds
inc
mov
push
sbb
mov
retf
or
popf
(bad)
cmp
dec
push
xchg
hlt
xor
dec
nop
sub
lock
dec
xchg
loopne
(bad)
jnp
or
or
out
movs
push
sub
inc
cli
jbe
sti
or
sub
in
push
sbb
xchg
popa
or
dec
adc
rcr
pop
or
into
or
sbb
je
add
and
or
daa
sub
sbb
sti
inc
push
mov
push
(bad)
xchg
movs
icebp
push
je
loopne
xor
aad
loop
add
(bad)
xor
mov
mov
fdivr
mov
adc
xchg
mov
fnstsw
dec
mov
ret
push
add
inc
mov
cwde
jmp
mov
out
lods
out
test
inc
aaa
pmaxsw
and
cmps
data16
cwde
mov
fisub
lods
in
popf
imul
clc
neg
mov
ins
leave
outs
addr16
ins
in
es
mov
cwde
add
mov
fdiv
(bad)
sub
int
test
outs
inc
lods
jg
dec
mov
cmp
dec
pop
fsub
mov
ins
cmp
call
dec
bnd
xor
add
pop
sub
mov
xor
out
(bad)
pop
add
ds
in
shr
nop
xchg
sub
mov
(bad)
das
stc
repz
clc
mov
pop
jns
ror
daa
xchg
ja
scas
cmp
adc
mov
int
je
or
mov
xchg
mov
test
lods
jmp
hlt
push
shl
pop
retf
jmp
js
mov
push
cmp
push
cmp
iret
xchg
pop
dec
mov
ret
movs
lahf
loop
das
into
jl
lds
sub
int
push
xor
cs
imul
cmp
mov
pop
dec
adc
xor
adc
mov
fsubrp
repnz
add
hlt
je
pop
jno
clc
jge
pop
retf
dec
sbb
int3
jmp
in
lahf
aam
xchg
leave
sahf
jecxz
inc
(bad)
(bad)
retf
into
fld
ins
stos
outs
es
cs
lds
mov
pop
and
ins
mov
aam
int
mov
push
fdiv
and
call
rep
retf
sub
jae
nop
adc
mov
cmp
xor
push
and
xor
aad
push
lods
into
xchg
adc
add
mov
cmc
loop
cmp
imul
fwait
call
aam
nop
mov
inc
pop
mov
(bad)
mov
xchg
std
sub
mov
sub
xor
mov
repz
mov
jno
(bad)
cmp
in
test
shl
push
pop
call
sub
push
add
je
cmc
(bad)
and
jle
mov
and
jnp
add
loopne
addr16
and
dec
xchg
retf
add
add
mov
mov
scas
movs
pop
loop
cmp
call
add
push
pop
xor
cdq
mov
lods
sbb
jnp
lods
fs
sti
inc
fsubr
ret
sub
nop
jmp
mov
xchg
push
pop
and
sbb
mov
stos
adc
cmp
push
lock
retf
inc
(bad)
mov
cmp
jle
std
mov
xor
hlt
sub
add
xchg
pop
test
mov
xchg
(bad)
jo
pusha
mov
jp
dec
loope
jg
dec
add
dec
repz
jno
call
mov
pop
xor
xchg
jle
xchg
add
mov
stos
push
sub
pop
sub
loope
pop
inc
inc
mov
sub
lods
int3
jl
sub
popf
jmp
or
leave
pushf
imul
dec
sbb
mov
test
repz
ins
xor
movs
jo
rcl
inc
fcmovnu
sbb
test
outs
xor
cdq
shr
jle
adc
push
push
push
cdq
fcom
push
js
std
adc
push
push
and
int
fist
loope
dec
push
shl
cmc
xchg
mov
push
in
aam
pop
imul
jmp
in
mov
push
sbb
or
je
int3
(bad)
push
and
data16
fisttp
std
inc
or
inc
mov
dec
(bad)
lea
leave
std
pop
sub
int
fwait
xor
pop
stc
gs
add
nop
out
out
pop
imul
lahf
sub
jae
ret
pushf
inc
hlt
out
mov
push
fidivr
loop
adc
sub
cmp
icebp
mov
cmp
pop
cs
push
adc
imul
dec
(bad)
inc
add
jne
push
ror
and
jecxz
nop
mov
iret
popf
in
lea
jmp
or
pop
rcl
cmp
or
ins
js
sub
sti
into
dec
enter
arpl
nop
in
cmp
xchg
xor
cld
add
mov
cld
cmp
and
xchg
or
push
jl
xor
xchg
stos
sub
mov
out
cli
xor
sub
and
add
enter
sahf
(bad)
pushf
add
mov
adc
pushf
add
mov
xor
lahf
fidiv
dec
sub
and
cmp
dec
es
cmp
xchg
mov
pop
jns
pop
pop
sub
xchg
adc
or
xchg
jp
cmp
dec
push
xchg
cmps
sub
push
sub
jns
pop
fnstcw
aas
cmp
cmp
mov
test
leave
sar
aam
xlat
jecxz
push
xchg
and
mov
adc
inc
xchg
dec
cmp
into
fimul
jb
ret
fcom
mov
add
scas
ret
out
fimul
add
pusha
jle
inc
adc
shl
mov
loop
or
aad
aad
enter
in
cmp
std
sub
mov
mov
sti
fs
cdq
mov
popa
adc
addr16
rcl
sub
stos
xor
ror
xor
mov
inc
pop
sahf
jae
mov
or
test
jmp
mov
fisubr
inc
sbb
mov
leave
iret
cmp
pop
mov
les
movs
jb
popf
out
in
mov
push
sahf
cmps
ds
gs
call
and
jnp
in
or
mov
call
outs
adc
stc
cmp
fadd
sub
mov
dec
out
xlat
popf
sbb
div
aam
mov
repnz
adc
pop
adc
or
lds
cmc
jl
loop
std
imul
test
jmp
or
(bad)
xor
add
sub
sub
cmp
loopne
inc
mov
and
add
movs
ja
sar
packssdw
sbb
outs
and
mov
add
jae
add
ja
mov
mov
pop
test
pop
repnz
inc
cmp
ficomp
jnp
mov
push
jnp
shl
loope
mov
sbb
jle
or
repnz
xor
fimul
cwde
inc
dec
cdq
cmp
mov
jge
jmp
ja
aad
jae
cmovp
lahf
dec
mov
loopne
popa
or
out
ja
or
or
call
push
pop
imul
push
aam
mov
int
and
data16
test
call
cmp
jge
sbb
sahf
scas
pop
sahf
fwait
xlat
cmp
mov
dec
xchg
ins
(bad)
push
and
adc
push
adc
stos
dec
mov
inc
add
lea
mov
shr
leave
jg
pop
xchg
dec
daa
and
jle
mov
dec
and
scas
movs
sbb
mov
outs
or
mov
cmp
loop
mov
jns
jno
push
or
xor
jge
xor
retf
push
xchg
xsave
lea
pop
imul
fild
and
lds
mov
sbb
adc
push
pop
cmc
push
fistp
and
ja
leave
lock
hlt
fnstsw
idiv
mov
(bad)
in
add
jbe
xchg
adc
imul
(bad)
fld
mov
xlat
pop
shl
out
xchg
movs
sub
mov
xor
add
xchg
sub
call
push
sub
sti
xchg
lahf
xchg
push
mov
jmp
mov
mov
(bad)
bound
xor
push
mov
dec
daa
inc
mov
cwde
jo
pusha
(bad)
push
cmp
cli
popf
push
xchg
add
cmc
mov
mov
stc
je
icebp
cmp
mov
mov
and
cmps
je
cmp
mov
cmp
int
stos
mov
(bad)
mov
xchg
ja
out
or
hlt
scas
das
sub
fld
lods
jnp
or
shl
and
cli
xchg
or
mov
sub
xchg
jb
cld
xchg
cmp
pop
xchg
cmp
xor
out
stos
sahf
cmc
jno
sbb
in
out
data16
or
outs
out
push
mov
repnz
daa
mov
loop
xlat
js
rol
mov
adc
in
out
cmp
sub
or
lock
and
xchg
cmp
cmps
xor
les
mov
adc
xor
mov
ds
xor
outs
ins
sub
mov
cmc
mov
adc
rcr
adc
jnp
retf
inc
scas
ds
out
cmp
add
aas
xor
or
xchg
nop
fdiv
sbb
(bad)
mul
ds
or
pop
sbb
push
shr
hlt
add
inc
ds
add
pop
and
or
cmps
or
cdq
retf
push
lods
add
mov
sar
ret
repnz
add
xor
sbb
loopne
sahf
ja
push
and
gs
jmp
pop
push
scas
cld
inc
sub
(bad)
xchg
fbstp
pop
adc
in
ins
pop
leave
fcomi
sub
xchg
push
scas
ds
push
inc
int3
and
out
test
xchg
sub
int3
ins
jae
bound
sub
cmp
stos
retf
or
fdiv
mov
or
push
and
repz
sub
dec
out
jecxz
mov
mov
xor
data16
out
arpl
adc
aas
fldl2t
jge
xchg
mov
sbb
sbb
lea
and
mov
add
adc
outs
mov
into
mov
(bad)
and
or
stc
xchg
xor
mov
ret
pop
dec
xchg
mov
add
push
jb
mov
les
fstp
fild
out
test
sbb
dec
lea
(bad)
pop
ins
outs
add
js
and
repz
or
test
add
loop
pop
(bad)
mov
fcom
jge
retf
mov
jmp
arpl
xor
jns
mov
fs
sti
aam
jns
jl
xor
mov
mov
stc
scas
cmp
dec
leave
imul
int3
xor
call
daa
dec
xlat
cdq
pop
pop
xchg
xor
or
push
jge
mov
cmp
xchg
mov
mov
xchg
jno
ja
fild
repz
enter
call
test
(bad)
rol
xor
inc
cmps
or
call
ja
cdq
in
push
push
dec
mov
(bad)
int
cdq
cwde
imul
xchg
or
les
pop
mov
xor
push
inc
arpl
pop
or
cmps
popa
cmp
sbb
outs
sub
push
sub
xchg
iret
jne
jb
ds
jle
jae
inc
(bad)
aas
stos
stc
(bad)
ds
cli
jmp
mov
push
(bad)
lds
fist
fwait
inc
cmp
test
call
xlat
inc
add
or
mov
push
test
push
mov
in
or
xor
xchg
push
out
cli
and
xor
(bad)
dec
inc
cmp
cdq
aam
lea
les
nop
cmc
mov
daa
js
stos
loope
push
repnz
std
or
ds
or
sub
jbe
sbb
(bad)
xchg
sahf
hlt
xchg
jecxz
enter
mov
mov
mov
repz
jg
mov
push
fld
cmc
xchg
test
push
push
dec
test
leave
mov
leave
mov
pop
mov
inc
mov
jmp
outs
xchg
cmp
fwait
test
in
push
push
mov
lea
xor
sbb
(bad)
pop
cld
mov
cs
inc
movs
dec
jo
in
push
fsub
sbb
push
xor
mov
mov
retf
mov
repz
int3
mov
jmp
dec
fcmovb
adc
pop
call
fmul
aas
jne
rcr
loop
mov
inc
xchg
cmp
daa
je
test
ins
jae
sub
pop
xchg
adc
enter
mov
call
mov
cmp
xchg
or
sbb
cmp
or
in
inc
mov
dec
lock
mov
lea
jmp
jg
cmps
add
stos
pop
adc
xor
sub
aaa
dec
js
sub
test
xchg
mov
mov
dec
outs
jge
jbe
jo
mov
pop
cwde
pop
pop
sbb
mov
mov
push
jae
scas
cmp
jp
sub
stos
(bad)
mov
je
ret
xchg
shl
outs
push
adc
aad
ss
push
fild
dec
ss
push
es
inc
aam
les
movs
scas
cli
mov
inc
ret
jo
fidivr
mov
or
pusha
loope
ins
aas
xor
xor
bound
popa
xchg
mov
sbb
push
inc
and
lahf
pusha
shl
xor
jb
sbb
std
(bad)
mov
mov
adc
out
mov
ins
xchg
cmp
mov
pop
sbb
or
push
jecxz
sbb
imul
jae
sahf
aad
add
lods
cmpps
mov
in
cdq
in
fidiv
popf
fwait
mov
out
aas
out
mov
lock
cmp
mov
inc
stos
mov
inc
ds
es
push
jmp
inc
dec
push
(bad)
mov
sbb
xchg
jmp
dec
pop
mov
mov
push
arpl
clc
mov
mov
xchg
das
jno
icebp
mov
gs
pop
jge
dec
fwait
les
jmp
enter
xchg
push
mov
jmp
adc
mov
test
mov
fstp
sbb
xor
retf
adc
push
cmp
dec
push
add
mov
cmps
rcl
mov
sti
mov
sub
sbb
rol
popf
inc
retf
loopne
sbb
ror
dec
push
hlt
inc
ins
mov
add
in
test
rcl
lahf
jmp
push
inc
bound
jnp
adc
in
cmps
cwde
push
sub
xchg
xor
movs
sub
add
hlt
add
pop
push
mov
mov
push
sbb
(bad)
adc
add
sahf
adc
xor
add
mov
stc
leave
in
xchg
cmp
inc
adc
ret
out
popa
cwde
repz
aaa
pop
pop
and
dec
push
neg
jns
and
mov
inc
cs
or
and
jno
ds
cld
(bad)
mov
xlat
sar
out
or
push
stc
adc
pop
lods
mov
cdq
xchg
out
jl
data16
and
ret
xchg
dec
into
mov
adc
or
xchg
pop
addr16
xchg
ret
mov
cdq
pop
call
xor
jno
and
out
jg
xchg
call
lods
add
pop
mov
cmps
(bad)
lahf
jp
dec
push
cmc
js
dec
lahf
push
fsub
sub
into
push
xor
jg
dec
aam
or
and
movq
jne
add
cmps
xor
add
jae
retf
or
inc
cmc
rcr
lea
xor
sahf
hlt
and
cs
aas
shl
jbe
or
push
aas
aam
test
les
pop
rcr
sub
dec
jo
cmp
jecxz
sbb
lahf
ins
pop
call
push
movs
mov
aas
rol
xchg
fstp
call
lea
mov
loope
ins
clc
mov
cmp
pop
inc
cmp
cmps
lods
sbb
nop
(bad)
lods
jge
movs
popa
setp
bound
or
into
fistp
fadd
adc
movs
retf
fsubr
and
(bad)
fild
push
jmp
mov
in
sub
pop
mov
mov
pushf
sub
push
imul
or
js
mov
sub
ror
dec
gs
inc
mov
dec
repnz
scas
frstor
add
test
sbb
movs
into
cmp
pop
sbb
stc
fiadd
ins
(bad)
(bad)
dec
scas
mov
jmp
cmps
sub
ss
dec
cld
mov
adc
mov
push
mov
daa
int3
mov
loope
div
ss
jle
dec
jl
pop
sbb
out
lea
push
test
adc
fld
mov
pop
outs
xor
cmp
push
mov
nop
std
int3
or
sub
test
sti
retf
aaa
bound
pop
outs
fwait
lahf
inc
popf
nop
ja
dec
push
dec
cdq
pop
fild
test
push
(bad)
xlat
jl
mov
or
frstpm(287
dec
cmp
ret
push
jmp
lock
fcmovb
push
push
lock
jno
cmps
(bad)
dec
lds
sbb
sbb
or
leave
ja
cmp
and
div
arpl
cwde
out
test
sub
mov
xor
jg
xchg
adc
mov
lock
xor
shl
cmps
xor
mov
sahf
sbb
mov
out
dec
push
mov
mov
not
aas
xchg
fidiv
mov
bound
mov
pop
ret
dec
inc
mov
add
ss
data16
xchg
lahf
mov
or
push
(bad)
lods
pop
pop
in
nop
jbe
loopne
jne
mov
movs
aam
push
push
aad
adc
dec
fiadd
cld
mov
(bad)
and
mov
push
adc
cmp
fimul
pop
pop
fmul
xchg
xchg
sahf
and
mov
(bad)
sbb
jae
retf
loope
dec
push
xchg
lods
xchg
or
inc
mov
push
cmp
loopne
and
dec
outs
sbb
lahf
xchg
sbb
into
je
aad
pop
mov
lss
mov
or
cmp
push
push
mov
add
cmp
mov
das
outs
xchg
stos
or
or
mov
xchg
sbb
imul
loopne
lea
push
xor
ficom
aaa
imul
pop
push
push
jno
xchg
ja
inc
rcl
sar
into
imul
dec
mov
in
repz
repz
cmp
cmc
push
sbb
shr
repz
loope
push
pop
ja
aam
mov
push
mov
or
popa
cmp
(bad)
mov
inc
push
adc
pop
add
daa
call
sbb
mov
sar
retf
rcl
aaa
xchg
cld
js
mov
xor
mov
or
call
in
xor
jae
test
or
jl
int3
and
dec
shl
dec
inc
adc
call
ret
loope
push
mov
rol
add
mov
dec
idiv
aas
adc
pop
imul
inc
mov
sar
inc
fstp
sbb
xchg
adc
xchg
jae
test
mov
das
add
icebp
xor
sar
and
xor
jge
es
int3
mov
(bad)
stos
pop
loopne
and
sub
into
ds
imul
lods
gs
(bad)
push
push
pusha
movs
inc
inc
mov
imul
out
outs
fs
pusha
(bad)
cmp
cmp
in
js
addr16
push
xor
adc
mov
xchg
sar
add
mov
lods
rol
call
test
mov
jnp
or
add
sti
or
jnp
cs
(bad)
js
(bad)
push
add
mov
and
sbb
mov
sbb
loopne
mov
inc
adc
lahf
mov
and
outs
push
jecxz
cld
inc
scas
mov
inc
sbb
nop
pop
jecxz
jp
cld
inc
mov
cwde
nop
adc
leave
aam
push
mov
sub
mov
and
stos
hlt
inc
fcom
mov
mov
(bad)
sbb
jecxz
stc
adc
xchg
cmps
iret
fimul
rcl
neg
shl
stos
mov
or
mov
sub
xchg
push
pop
xchg
mov
jp
fucomi
adc
rcr
outs
ret
fdivp
or
vsqrtps
pop
mov
int
and
fdivr
loope
cmp
xchg
pusha
lahf
scas
jmp
add
xor
jne
xchg
push
mov
inc
mov
rol
sub
xor
mov
enter
or
fs
iret
push
aas
repz
lds
inc
adc
dec
lods
rol
retf
dec
jecxz
inc
add
pop
push
arpl
sbb
je
jle
or
cmp
sbb
mov
loope
es
mov
mov
and
hlt
mov
inc
push
sub
mov
pop
mov
stos
int3
enterw
push
aas
xchg
pushf
in
popa
(bad)
sub
jae
ds
push
push
jne
ror
and
push
and
dec
or
xchg
cmp
and
lea
xchg
ds
inc
mov
ret
repz
mov
dec
add
mov
sar
jns
jg
div
(bad)
setbe
aad
rol
xchg
jmp
jle
call
outs
call
or
pop
sahf
outs
lahf
dec
cmp
push
push
mov
mov
aam
or
movs
icebp
sub
jecxz
mov
inc
pop
fwait
mov
not
or
fwait
cmps
fstp
dec
add
and
(bad)
in
test
sbb
mov
ss
pop
(bad)
(bad)
popf
scas
test
leave
pop
sar
sub
aas
adc
shl
add
clc
xor
call
cmp
rol
lock
rcl
add
movs
shl
adc
sub
mov
mov
sbb
jp
mov
(bad)
sub
jbe
lahf
xor
add
dec
sbb
fadd
les
pop
retf
mov
mov
add
shr
jmp
pop
loop
in
rol
fisttp
jbe
and
or
leave
push
inc
or
dec
mov
dec
cli
inc
in
sbb
std
or
cmc
stos
test
mov
adc
cmp
cmp
inc
js
xchg
cmc
dec
xor
(bad)
jb
xor
shl
push
fcom
loope
in
mov
push
(bad)
loopne
cmps
pusha
idiv
adc
cli
adc
sbb
jb
repnz
test
xchg
ss
outs
test
sti
int3
rcr
rcr
pop
dec
ins
xor
jno
jnp
int3
jmp
jle
in
sar
popf
ins
inc
pushf
mov
test
scas
in
std
pop
or
inc
adc
sbb
inc
stos
lock
aaa
cmp
push
ficom
arpl
dec
in
pop
lods
or
sub
jae
inc
aam
fadd
adc
pop
mov
test
mov
push
inc
out
shl
push
test
sub
adc
xor
pop
adc
mov
add
mov
inc
in
lea
cmps
movs
rol
or
jbe
cmc
js
or
pop
movlps
push
push
dec
dec
xchg
jge
ins
dec
shl
into
push
mov
adc
push
sbb
or
mov
mov
call
add
inc
shr
scas
mov
mov
fs
and
aam
mov
add
jmp
setns
dec
and
jno
pop
push
popf
cdq
aaa
ins
ins
xor
aam
mov
push
xchg
sahf
xor
jne
mov
cmc
rcr
fmul
retf
mov
push
out
div
pop
into
sub
mov
in
(bad)
jg
dec
sbb
lds
mov
add
aas
sub
call
pushf
sub
inc
int
in
pop
adc
mov
xchg
lods
popa
xchg
mov
push
or
aad
push
push
fucom
imul
push
shr
xchg
xor
popf
add
xchg
mov
outs
retf
xchg
dec
push
mov
test
cld
mov
adc
repz
push
cmc
add
pushf
daa
push
pop
mov
sbb
es
ds
xlat
sar
bound
inc
push
leave
leave
sbb
into
ret
xlat
push
push
nop
enter
nop
jg
add
lods
jmp
loopne
and
leave
mov
loopne
add
and
dec
push
mov
inc
mov
or
daa
mov
out
add
sar
push
mov
test
cmp
mov
xor
loopne
sub
sar
aaa
mov
mov
mov
lock
sub
(bad)
repz
shl
sub
rcl
push
test
(bad)
mov
ins
adc
pop
ret
ror
pop
push
push
dec
call
pop
cmps
retf
dec
adc
push
jmp
hlt
(bad)
cmp
mov
gs
aaa
adc
(bad)
mov
in
jns
ss
sbb
pop
clc
xchg
ficom
xchg
pushf
xor
adc
add
jnp
or
ss
aas
inc
leave
sahf
push
jns
mov
push
and
repz
jle
sub
shl
mov
retf
loopne
out
gs
add
push
push
mov
add
test
jle
pop
in
xchg
ror
sbb
sub
shl
call
ja
loopne
loopne
jno
mov
xor
sub
add
or
and
retf
cmp
stos
test
mov
xchg
jp
inc
mov
push
xchg
bound
fnstenv
cs
mov
mov
outs
pop
mov
mov
pop
push
call
cmp
fsubrp
and
or
push
mov
(bad)
fidivr
mov
xchg
jns
mov
and
dec
push
dec
addr16
or
cmp
xchg
(bad)
add
xchg
jecxz
cmp
sbb
pop
sub
ret
sbb
mov
mov
push
fwait
jae
mov
movs
or
das
sbb
stos
pop
repz
std
cmp
mov
lds
jecxz
mov
push
rcr
leave
dec
cwde
mov
or
lds
fisub
loopne
stos
jne
fwait
cmps
xchg
stos
adc
inc
sbb
test
ins
and
or
movs
int
fmul
iret
pop
mov
fbld
mov
mov
or
and
iret
mov
sub
push
lods
push
popf
push
adc
pusha
cmp
cmp
ret
scas
pop
mov
jmp
mov
paddw
sub
in
add
icebp
dec
call
out
outs
neg
inc
xchg
xor
out
mov
hlt
and
mov
in
jmp
cmp
dec
push
add
pop
mov
setl
jne
lods
rol
hlt
mov
lea
out
pop
cmp
movs
(bad)
pop
adc
push
cmps
lock
cdq
mov
dec
outs
stc
cmp
xchg
push
and
and
dec
dec
push
fldcw
add
pop
nop
cmc
lods
pop
pusha
ds
das
in
loop
lods
jg
push
dec
and
nop
sar
sti
jns
dec
sub
jns
stc
repnz
imul
fwait
call
loop
imul
mov
adc
fcmovnu
stos
inc
or
icebp
(bad)
push
shl
std
rcl
cdq
push
aad
xchg
sbb
call
mov
pop
fidivr
daa
data16
xor
push
sub
mov
std
jg
add
mov
nop
leave
leave
repz
jmp
pop
add
jmp
call
(bad)
xchg
mov
dec
sub
pop
xchg
xchg
clc
inc
mov
lock
(bad)
jns
fwait
jmp
xchg
lea
test
in
add
mov
fld
xchg
mov
or
dec
lea
call
shr
iret
mov
cld
mov
mov
xchg
retf
sahf
inc
out
add
jmp
mov
sub
call
and
adc
jmp
sbb
or
adc
push
test
loopne
js
repz
imul
fisub
es
vmovq
mov
mov
jp
adc
pop
test
les
ins
mov
sbb
and
int
pushf
or
(bad)
loope
inc
push
inc
adc
(bad)
bound
adc
clc
cs
xchg
inc
mov
mov
sub
fld
mov
xchg
sub
xor
repz
call
add
jbe
jp
ja
fcomip
inc
or
(bad)
jecxz
cmp
inc
cdq
adc
cmc
jbe
fst
inc
movs
sub
adc
mov
retf
push
pop
not
xor
mov
daa
fsubr
ins
mov
cwde
mov
xlat
push
jmp
mov
cmps
adc
sbb
lock
mov
jbe
js
mov
scas
jno
loop
repnz
jne
mov
bound
ins
sub
ret
ja
inc
inc
out
fldcw
xor
cli
inc
sub
retf
mov
cwde
stc
adc
mov
frstor
call
mov
push
or
fdivr
test
adc
add
sub
xor
cmp
push
sub
adc
and
into
jae
mov
push
cmp
inc
clc
jne
jge
mov
loope
or
das
adc
xchg
shl
xchg
je
retf
cmps
int3
cmp
add
stos
dec
sbb
fmul
sub
dec
retf
jl
mov
add
nop
test
cmp
dec
icebp
jl
jl
push
ja
xor
nop
xor
fucomp
(bad)
lods
aad
into
stos
(bad)
neg
lahf
mov
aaa
cld
mov
out
in
inc
imul
mov
cmps
pusha
pop
push
jmp
push
fwait
adc
dec
out
movs
mov
mov
call
scas
out
inc
adc
mov
int
adc
outs
stc
adc
or
add
jl
mov
popf
cli
pop
outs
gs
lods
lds
inc
and
outs
pop
pop
dec
fs
ds
pop
stc
pop
push
sti
imul
and
jno
cmp
push
in
sbb
je
pop
(bad)
jle
cli
ins
arpl
inc
cmc
(bad)
mov
add
test
inc
mov
add
shl
es
and
cld
jnp
stc
or
jge
int3
sub
push
or
int
(bad)
stc
sahf
dec
dec
inc
pop
mov
mov
xor
dec
adc
cmp
jbe
sbb
jo
sbb
stos
adc
sahf
adc
cmp
inc
inc
xchg
mov
call
outs
enter
(bad)
clc
dec
pop
mov
or
mov
mov
out
adc
dec
sti
fsubr
ror
adc
jg
out
pop
mov
lahf
leave
dec
push
arpl
out
enter
cld
pusha
dec
push
inc
dec
cmp
adc
retf
add
mov
(bad)
mov
leave
ins
push
inc
retf
and
xor
lahf
cld
jnp
add
ds
xchg
dec
sub
mov
mov
sub
xchg
out
shr
lea
call
xor
fistp
(bad)
stc
xchg
inc
call
push
leave
sbb
push
aam
dec
neg
mov
clc
pcmpgtd
cmps
and
rcr
fwait
sub
cwde
loop
push
push
test
jp
and
sub
out
mov
mov
sub
sub
lock
jne
in
jb
inc
push
test
adc
int
ds
(bad)
xor
xchg
dec
and
mov
mov
xchg
movs
std
mov
add
repnz
sahf
imul
xchg
mov
inc
je
idiv
mov
nop
pmaddwd
pushf
repz
xor
bound
jecxz
(bad)
jge
xchg
pop
dec
aas
cmp
xchg
ffreep
cmc
loope
retf
pop
xchg
pop
cld
out
xchg
add
push
inc
xchg
sub
retf
stc
inc
or
sub
cmp
(bad)
xchg
dec
pop
movs
ss
pushf
or
psrad
je
ret
cwde
xchg
cmp
div
dec
aad
xchg
dec
sbb
inc
out
adc
mov
pop
push
sahf
cmp
test
sub
shl
aam
and
fld
outs
fs
sbb
xchg
in
mov
out
out
add
or
and
dec
inc
pop
mov
scas
pop
sub
inc
adc
dec
ins
and
popf
adc
mov
push
data16
test
push
dec
aaa
dec
call
sbb
lea
xlat
repz
fs
pop
sub
cld
jle
stc
(bad)
in
fisttp
ss
xor
es
loopne
scas
or
jge
or
pop
aaa
sbb
nop
push
rep
dec
dec
or
add
cmc
mov
jno
sbb
mov
into
xchg
xchg
push
cmp
daa
xchg
mov
aas
mov
retf
imul
mov
jl
fsubr
fcmovne
dec
clc
(bad)
repz
xchg
(bad)
mov
mov
cwde
(bad)
fldenv
fsub
loopne
cmp
cmp
dec
cmp
pop
test
shl
sub
into
je
call
sahf
mov
int3
lods
sub
push
je
outs
sbb
int
js
push
push
dec
cmps
cmc
xor
lahf
push
cs
gs
mov
test
push
mov
pushf
add
lea
or
repz
fnsave
xchg
jbe
nop
xlat
xor
adc
sub
sbb
xchg
lahf
add
jmp
aas
add
aam
fadd
fdiv
sub
rol
fld
xor
xchg
pop
loop
cli
es
pushf
xor
in
(bad)
jecxz
mov
into
mov
adc
lock
outs
xor
sar
add
push
jnp
repnz
jg
add
mov
bound
scas
push
dec
loop
loop
aaa
movs
mov
cmp
call
ds
adc
xchg
int
cmc
in
mov
jg
and
shl
add
cmp
dec
push
sbb
inc
call
pop
cmps
rcr
bound
(bad)
lahf
adc
sbb
sub
lods
mov
lds
arpl
pushf
xlat
icebp
stos
icebp
sti
jo
aam
jb
inc
test
inc
jb
add
shl
cwde
mov
mov
mov
push
jns
(bad)
cs
push
out
movs
pop
sbb
add
int
outs
inc
cli
mov
adc
inc
fbld
add
add
cmps
xor
std
mov
dec
push
(bad)
int
mov
jbe
xor
lahf
fmulp
dec
lods
cmps
push
nop
cmc
out
mov
and
fs
mov
fwait
lock
cmps
retf
dec
test
push
nop
sub
pop
shl
sub
xor
das
dec
push
jl
mov
jmp
loop
xor
inc
lahf
inc
inc
lods
sbb
popf
lods
jno
test
xor
mov
mov
sub
repz
cdq
sub
lods
mov
or
pop
xchg
(bad)
jo
loopne
mov
sbb
dec
sub
dec
outs
jb
loop
xor
data16
dec
mov
sbb
fidivr
and
push
push
in
ja
dec
push
jo
sub
pop
and
fucomi
pop
fadd
sbb
xchg
bound
fst
mov
sub
inc
add
arpl
pop
xchg
sahf
push
aas
or
mov
movs
adc
(bad)
ficom
test
adc
pop
in
jmp
and
xchg
ins
dec
rcl
(bad)
jle
dec
mov
int
in
imul
pop
sbb
cwde
imul
add
sub
js
test
xchg
call
ret
loopne
aad
rcr
shl
pop
bound
mov
loop
in
mov
out
int3
add
mov
push
scas
sub
imul
pop
mov
pop
add
pop
and
sub
jae
xchg
cs
xor
jo
cmc
outs
data16
xchg
and
and
sub
push
inc
or
in
mov
ret
pop
rcl
and
xor
push
ja
fmul
mov
ds
pushf
rcr
leave
jns
add
jne
jmp
push
retf
imul
lea
loopne
and
mov
fisubr
mov
or
and
outs
jno
ins
push
retf
pop
popf
xchg
lss
jns
bnd
inc
scas
in
iret
jmp
test
cmps
cmp
ret
imul
das
loope
aam
inc
(bad)
jne
mov
push
inc
add
in
xor
lahf
sbb
and
aam
int
cmp
cmps
cmp
sub
call
push
jno
and
repz
je
and
ds
xor
and
enter
inc
jl
in
dec
ds
push
adc
add
in
adc
jmp
xchg
mov
mov
enter
pop
mov
enter
sahf
dec
out
sbb
push
add
cmp
ror
dec
out
loop
lods
ret
das
add
add
dec
cmps
iret
ja
lock
cwde
call
ficom
mov
lea
cwde
loop
xlat
sbb
pop
ss
inc
inc
sbb
cmp
add
pop
fcmovnu
adc
and
(bad)
lahf
mov
sbb
int
in
outs
movs
adc
(bad)
jne
shr
lods
stos
jbe
mov
enter
xor
imul
iret
ins
fwait
mov
in
hlt
cmp
jge
jg
pusha
jo
xor
mov
addr16
out
les
cmc
repnz
shl
mov
mov
sub
jo
adc
push
daa
imul
out
arpl
jle
adc
sub
test
mov
mov
pop
add
movs
int
out
push
push
aaa
or
xor
pusha
xchg
xor
adc
(bad)
mov
push
daa
rcl
or
fs
out
xor
loope
clc
adc
out
mov
icebp
jbe
(bad)
cmp
jo
push
add
out
sti
xor
mov
xchg
and
ja
cmps
retf
jl
jmp
(bad)
rcl
pop
std
pusha
xor
icebp
in
ret
and
push
lock
jmp
aaa
dec
shl
adc
inc
in
test
cmp
sbb
jbe
and
test
clc
inc
outs
push
push
xor
fsubr
popa
mov
push
cmp
push
rcr
imul
mov
dec
pop
ins
ret
dec
mov
sub
cmps
mov
retf
pop
xor
pop
imul
int3
sub
mov
fistp
leave
test
jo
dec
cmp
xchg
add
repnz
fimul
xchg
ins
test
xchg
push
push
inc
jecxz
mov
add
rcr
shr
aad
add
xlat
fisub
mov
pop
stos
outs
(bad)
pop
mov
inc
sbb
mov
enter
out
or
push
clc
cld
xchg
inc
inc
mov
popf
shl
cmp
data16
movs
sti
movs
sbb
iret
jecxz
aaa
sbb
add
or
adc
or
dec
(bad)
cwde
ret
addr16
mov
inc
and
dec
cmps
test
test
rep
icebp
fmul
clc
das
or
add
fnstenv
jnp
cmps
mov
dec
or
lods
dec
(bad)
scas
jg
xchg
pop
add
sbb
sti
rcl
xor
movs
xchg
bound
int3
das
inc
mov
aas
dec
push
mov
cld
push
pushf
mov
dec
repz
scas
sub
cmps
or
pop
fst
outs
aaa
dec
xchg
dec
lods
rcl
pushf
cli
jae
push
mov
les
test
sub
retf
mov
jno
xor
fucom
cli
and
(bad)
sbb
nop
push
mov
dec
inc
in
repz
imul
lds
clc
enter
jnp
push
outs
jge
cmp
scas
sub
mov
hlt
mov
mov
clc
push
ret
fwait
mov
mov
xor
push
sub
jns
repnz
movs
push
repnz
mov
jns
sbb
int3
jl
dec
add
or
cmp
fadd
adc
sbb
idiv
(bad)
jg
inc
gs
sbb
mov
xchg
pop
push
jo
cmp
fdivp
cs
xchg
es
adc
stc
adc
mov
jmp
inc
jmp
pop
stos
shr
rcr
mov
xor
fst
push
repz
test
call
or
popf
ret
sbb
jecxz
ret
daa
push
ror
ds
loope
mov
push
mov
adc
inc
push
leave
out
mov
movs
iret
outs
in
jl
sub
aas
pop
lods
mov
std
sub
jp
enter
push
jbe
fwait
dec
cmp
leave
xor
xor
stc
cmp
sbb
sbb
ret
or
dec
dec
test
push
jg
cmps
sub
sub
out
call
(bad)
loopne
lock
mov
xor
cmp
pop
push
ins
dec
mov
sbb
mov
push
cwde
imul
sbb
or
xor
fmul
mov
aad
inc
lds
fistp
pop
sbb
sub
jo
mov
inc
imul
xchg
and
mov
nop
mov
push
aaa
(bad)
(bad)
std
pop
shl
jno
ficomp
pushf
dec
leave
xchg
test
ret
imul
sub
scas
fstp
jnp
idiv
jmp
hlt
(bad)
jecxz
adc
ja
daa
inc
fcom
jp
(bad)
dec
dec
cmp
mov
mov
mov
and
push
push
mov
mov
movs
out
push
imul
addr16
xchg
sub
shl
repz
push
mov
movs
sub
xor
mov
jae
push
mov
add
or
adc
sub
xchg
ror
inc
sbb
and
cmc
jnp
push
popa
iret
mov
outs
(bad)
xchg
js
cmp
dec
gs
ret
mov
mov
xchg
cdq
loop
jbe
push
pushf
sbb
sar
cmp
ins
call
bound
pop
or
or
mov
stos
mov
inc
leave
outs
lahf
ins
pop
jbe
and
addr16
js
jnp
out
push
call
sbb
mov
in
out
cmp
retf
scas
cmp
xchg
push
mov
add
or
sub
(bad)
cmps
push
xor
adc
in
inc
pavgb
pop
push
nop
inc
sahf
cld
adc
scas
stos
sub
dec
pop
scas
cmp
popf
or
call
or
inc
sti
icebp
jp
xchg
ror
mov
cmp
push
jle
bound
sub
add
clc
popf
out
ja
jmp
cs
sldt
xchg
cmp
(bad)
mov
and
mov
shl
shl
shr
(bad)
pop
mov
jne
jo
test
mov
inc
jns
das
or
addr16
pop
sti
popa
arpl
ss
push
sti
sar
sub
or
xor
cmp
inc
test
push
dec
fidiv
outs
add
or
sbb
jb
and
test
sub
outs
and
fcmovbe
int
dec
loop
adc
cmp
cmp
imul
mov
inc
icebp
sub
loope
fwait
pop
sti
iret
adc
xor
arpl
fwait
data16
xor
inc
in
jecxz
loop
mov
dec
imul
test
les
and
dec
or
mov
shr
retf
pop
jb
add
fdivr
mov
out
sbb
pop
in
or
(bad)
sbb
(bad)
fldcw
cdq
retf
jno
rol
pop
repnz
inc
clc
mov
push
xchg
aas
scas
mov
add
push
xor
int3
adc
test
pop
dec
fdiv
adc
jb
ficomp
push
adc
icebp
pop
das
in
out
add
push
pop
shl
inc
mov
clc
sbb
in
pop
dec
fst
adc
loope
pop
aam
fimul
sbb
mov
xor
fidiv
hlt
pop
repz
cmp
mov
dec
std
shl
and
cmc
and
ficom
inc
inc
outs
ins
hlt
outs
mov
mov
daa
in
mov
retf
std
push
mov
scas
shr
pop
mov
es
gs
xchg
mov
adc
jmp
add
sub
jb
cdq
mov
fstp
push
adc
pop
sbb
push
sahf
loop
add
or
into
fnsave
add
stc
push
push
shl
(bad)
repnz
scas
std
jns
mov
dec
xcrypt-cbc
cmps
xlat
into
or
enter
mov
jge
xchg
mov
sub
xchg
adc
or
sbb
xchg
add
js
int3
inc
and
out
stos
(bad)
cld
leave
mov
adc
add
sub
ret
fwait
or
movs
mov
jg
push
xor
xor
jb
adc
mov
adc
and
inc
retf
xchg
and
inc
push
aaa
mov
rcr
lds
call
xchg
std
outs
(bad)
dec
test
mov
jp
adc
mov
scas
fcmovnb
pusha
xchg
out
pushf
movs
shr
sar
add
(bad)
das
jne
adc
xchg
jb
cmp
xchg
es
jns
fdiv
ret
push
les
jbe
pushf
sahf
xchg
jb
jge
test
mov
ins
xchg
pop
je
ins
popa
test
or
neg
mov
hlt
push
rep
inc
mov
arpl
and
jne
xchg
scas
mov
fwait
xchg
js
xchg
mov
adc
es
aad
ins
xchg
push
retf
add
aad
mov
mov
adc
jmp
stos
(bad)
add
xor
pusha
movs
and
mov
gs
jae
cli
ret
cdq
data16
cmps
add
jne
dec
mov
fistp
mov
mov
cld
xor
nop
mov
sub
jge
fs
jecxz
jnp
mov
test
cmp
dec
repnz
sub
dec
pusha
jp
mov
neg
out
dec
xchg
add
cmp
pop
js
test
mov
shl
cmp
in
sbb
shl
xchg
sub
or
(bad)
scas
js
jmp
pop
leave
arpl
sub
lods
or
(bad)
imul
cmp
sbb
aaa
out
xor
aam
(bad)
inc
in
hlt
in
lds
push
xor
ins
pop
in
mov
int3
push
in
sub
or
loop
retf
mov
bound
test
cld
cld
loopne
test
cdq
rol
rcr
rcl
imul
sbb
sahf
arpl
sbb
test
in
(bad)
cmps
sbb
in
jmp
cmp
arpl
test
xchg
adc
lahf
jb
ret
pop
fucomp
(bad)
nop
in
pop
addr16
test
cmp
sahf
into
mov
scas
stc
aas
cmp
pop
jp
mov
mov
inc
adc
or
stc
jecxz
sub
pop
jns
cmp
xor
inc
dec
mov
bnd
aas
(bad)
jmp
rcr
scas
faddp
xlat
xchg
adc
xlat
daa
gs
cmp
add
push
retf
sub
ret
ins
daa
pusha
cld
push
xchg
aaa
stc
movs
add
pop
(bad)
fst
push
mov
std
retf
push
cmp
push
lock
in
push
retf
inc
retf
rcr
sbb
adc
lds
into
sbb
scas
push
mov
repnz
pop
pusha
sbb
scas
push
outs
ja
jnp
das
cdq
bnd
mov
les
rcl
mov
retf
pop
scas
and
mov
mov
iret
jae
xchg
imul
mov
cmc
sub
fiadd
aam
inc
mov
jecxz
and
jp
jl
dec
sahf
and
mov
outs
xchg
pusha
or
pushf
mov
(bad)
out
sbb
sub
add
mov
xor
jae
mov
sub
sbb
jp
loop
sar
or
add
imul
daa
jp
mov
mov
cmp
loopne
pushf
jl
xchg
dec
leave
mov
test
clc
cld
or
cdq
outs
fld
(bad)
jecxz
xchg
aad
sbb
pop
jb
cmp
sub
cmc
inc
fs
add
loop
or
rcl
cld
cmc
dec
bound
xchg
rol
movs
test
and
jbe
mov
add
mov
movs
xchg
push
repnz
imul
mov
stos
sub
das
dec
pusha
out
rcr
mov
jb
fild
cmc
lea
jnp
lea
add
call
jno
jecxz
(bad)
test
shl
inc
icebp
retf
push
in
pop
mov
dec
mov
sbb
cmp
(bad)
jle
(bad)
out
dec
adc
mov
in
call
jbe
adc
retf
pop
out
mov
cmp
cmps
test
adc
push
fwait
sar
dec
loopne
and
fst
lock
jmp
pop
push
in
ja
cmc
out
ins
std
mov
lea
ins
movs
movs
pop
dec
loope
call
push
pop
add
sti
and
adc
cdq
pushf
mov
js
dec
not
loop
mov
pop
push
or
lea
or
sahf
imul
out
ins
mov
inc
and
(bad)
outs
add
hlt
mov
xchg
out
pop
fld
push
cmp
and
mov
mov
cwde
inc
dec
pop
sbb
xchg
sub
and
test
pop
sub
hlt
adc
cmp
(bad)
jmp
jae
les
retf
push
(bad)
jge
push
mov
bound
daa
cmp
mov
xor
xchg
loopne
enter
jle
cmp
lods
push
jmp
fninit
mov
js
pop
inc
into
mov
mov
xchg
xor
or
popf
cmp
add
sub
sub
sbb
iret
in
jae
fimul
cmp
jae
pop
out
not
clc
adc
mov
xor
jns
pop
addr16
cld
stos
out
gs
lods
pop
inc
and
sbb
or
inc
dec
push
dec
das
mov
data16
or
ds
(bad)
mov
cli
in
add
and
push
es
inc
int
cmp
clc
xor
jns
aaa
pop
mov
sub
test
xchg
sbb
push
sub
sbb
leave
loope
xor
push
fist
cs
mov
pop
(bad)
imul
inc
idiv
sar
ss
jbe
jae
(bad)
sbb
and
aas
and
pop
xchg
nop
js
retf
nop
and
jae
je
pop
or
push
push
push
xor
fsubr
out
cmp
and
fwait
pop
xor
dec
test
std
cmp
cmp
xchg
lahf
sbb
jl
xchg
test
(bad)
fisubr
mov
pop
xchg
inc
mov
ret
fucomp
out
xor
sub
mov
xchg
popa
push
stos
cwde
cmp
ret
cwde
push
adc
push
adc
pop
shr
dec
cmp
repz
xor
das
cmp
dec
cwde
sbb
mov
or
or
mov
push
fs
adc
cdq
mov
retf
std
push
adc
sub
or
and
xor
fbstp
mov
cmps
enter
or
sub
add
mov
imul
jmp
cmp
xchg
cmc
or
shl
and
mov
jg
xchg
mov
mov
clc
xlat
pextrw
xor
loopne
xchg
pop
xchg
add
(bad)
mov
pop
idiv
inc
mov
(bad)
pushw
mov
retf
jg
xchg
nop
mov
pushf
ret
and
cmps
lods
outs
out
pop
inc
and
xor
aad
movs
dec
lock
inc
mov
sbb
push
jb
mov
fidivr
sub
dec
cmps
sub
jmp
mov
test
jp
(bad)
in
sbb
and
leave
(bad)
int
and
and
add
push
sti
das
mov
dec
or
mov
and
xchg
ins
jbe
loop
not
data16
mov
test
adc
outs
out
push
fiadd
fsubr
push
bound
or
lods
jae
imul
cwde
mov
push
dec
outs
sbb
inc
mov
cmp
adc
or
lahf
inc
xchg
mov
rol
cmp
cmp
and
mov
or
jmp
pushf
dec
xor
cdq
aas
out
fld
inc
pusha
arpl
pop
push
mov
js
and
retf
cmp
cmp
jecxz
je
jne
jno
lods
scas
pop
aaa
into
not
into
mov
xor
test
mov
inc
cld
sahf
popf
and
ins
or
aam
enter
mov
fisttp
sbb
push
lahf
mov
dec
xor
add
ret
xchg
pop
or
inc
aas
or
test
push
daa
mov
cmps
cmp
aas
pusha
movs
jge
mov
ins
xor
fnstsw
lock
sahf
push
daa
fwait
mov
push
push
fyl2xp1
loop
pop
hlt
push
pop
inc
dec
aas
stos
imul
out
lods
xchg
adc
sbb
lods
add
div
mov
push
popa
popa
aas
xor
sbb
jns
pop
idiv
sbb
sub
(bad)
mov
push
movs
mov
sahf
arpl
into
cmp
jb
fwait
inc
in
push
push
(bad)
mov
fsubr
cmps
cli
icebp
or
out
sbb
adc
jno
fdivr
bound
sti
mov
loopne
cs
addr16
adc
xor
push
je
mov
and
mov
pop
mov
fwait
mov
xchg
mov
cmp
push
jecxz
mov
adc
add
rcr
xchg
xor
das
or
mov
push
adc
cmps
ficomp
bound
mov
jns
xchg
sub
mov
and
adc
pop
neg
push
push
push
pop
lock
enter
dec
dec
mov
push
fs
adc
pop
mov
fwait
imul
test
pop
xor
outs
scas
push
mov
js
sub
out
mov
mov
pop
hlt
outs
sar
fild
(bad)
out
call
jno
mov
dec
cld
jg
cmp
add
rcl
lods
(bad)
sub
jb
cmc
pop
popf
(bad)
mov
fdivr
pop
and
iret
mov
cmp
push
xlat
mov
push
fldenv
gs
jg
(bad)
rcr
(bad)
daa
pop
sbb
ss
mov
mov
and
sub
xchg
pop
or
icebp
jl
cmc
movs
push
xchg
jmp
mov
xor
(bad)
or
mov
in
jb
js
push
mov
fisub
xchg
mov
add
mov
aam
xchg
cmp
add
inc
inc
pusha
mov
arpl
xor
repnz
ss
jae
cli
sub
mov
cmp
sbb
inc
xchg
adc
xchg
and
fstp
fimul
fcomp
cmp
add
jg
cld
mov
loope
mov
sbb
popa
inc
in
inc
ins
stc
mov
inc
dec
fsubr
mov
imul
fs
stos
jno
fild
(bad)
adc
sbb
jmp
in
(bad)
(bad)
and
or
mov
call
cs
arpl
inc
rcl
mov
out
cmp
test
sub
mov
or
fnstsw
sbb
xor
(bad)
push
sub
div
jl
psadbw
pop
popf
pop
aaa
movs
imul
sub
sub
ret
jmp
mov
inc
in
adc
xlat
sbb
iret
out
arpl
sub
bound
test
xchg
or
push
pop
mov
adc
xchg
push
cwde
aas
imul
jo
and
xchg
out
fst
xchg
mov
sub
xlat
stc
mov
imul
sbb
xchg
adc
push
inc
out
xchg
mov
in
xchg
adc
xchg
int
cwde
fs
arpl
cli
lods
cmc
mov
and
test
jne
or
and
push
jmp
inc
sar
out
in
mov
lods
idiv
scas
cld
pop
daa
mov
mov
jnp
les
mov
dec
(bad)
fnstcw
shl
adc
in
dec
fs
sbb
add
sbb
cs
leave
push
in
cmp
popa
or
push
hlt
test
mov
mov
stc
mov
cli
ja
dec
adc
aaa
jae
stos
sti
dec
and
jge
push
retf
cmp
retf
popf
cs
xchg
adc
int
add
xchg
jl
xor
aam
in
fist
dec
in
push
xor
mov
pop
fnstsw
addr16
push
pop
xchg
leave
push
fwait
data16
inc
inc
stos
push
sbb
mov
aas
mov
add
cli
jne
test
xor
push
dec
or
sub
xor
inc
sbb
cmp
jle
neg
fwait
sbb
mov
pop
aas
push
inc
mul
(bad)
push
cmp
mov
add
inc
xchg
sar
lods
or
jle
in
pop
add
push
ror
pushf
sbb
cmp
inc
lods
inc
mov
fsubrp
(bad)
jmp
add
movs
mov
cmp
mov
mov
sub
sub
dec
or
fmul
stos
and
jp
push
jg
pop
pop
pop
xchg
add
call
outs
mov
jmp
(bad)
pop
out
or
jge
lods
jns
cmp
arpl
adc
clc
cmp
lea
xchg
mov
loop
dec
mov
mov
cs
or
fdivp
fsubr
out
mov
add
xchg
jbe
mov
and
sub
test
pop
mov
dec
push
fnstenv
loopne
fdiv
mov
in
mov
adc
xchg
mov
cmc
inc
nop
cs
test
cs
xor
jbe
inc
pop
sub
pop
je
cdq
or
or
mov
mov
les
inc
sub
fadd
fbstp
pop
int
xchg
(bad)
mov
(bad)
mov
and
push
in
mov
inc
dec
pop
dec
xchg
loop
movs
lods
outs
xor
test
(bad)
xchg
fcomp
mov
in
ret
lods
push
js
repz
nop
cli
push
call
push
test
or
cld
jo
(bad)
sub
dec
lahf
shr
xchg
jnp
cmp
xor
jle
dec
pop
cmps
sub
sbb
(bad)
fsubr
push
and
mov
xchg
stos
nop
in
not
add
xchg
cmps
cmp
mov
scas
pop
mov
push
sahf
outs
dec
dec
mov
jg
loopne
imul
pop
fisub
movs
mov
mov
jno
jns
clc
out
(bad)
pop
mov
enter
test
aaa
hlt
out
add
adc
sbb
xlat
mov
in
xor
jmp
lods
ret
je
int3
add
cmp
loopne
adc
aas
jb
or
ins
adc
mov
cmp
inc
in
movs
pop
pop
aad
push
mov
popf
stc
or
jg
loop
jnp
mov
jne
mov
push
push
cmps
jle
fwait
js
jge
std
stos
sar
mov
es
sbb
push
scas
pushf
(bad)
in
cmp
inc
add
or
repz
push
push
cld
jne
aad
bound
scas
and
adc
ss
rol
pop
enter
cmps
jnp
das
jbe
rcl
jne
imul
jb
sub
xor
pop
jecxz
(bad)
adc
mov
mov
jae
sti
in
les
bound
jmp
add
out
or
jne
jl
(bad)
lock
xor
shl
out
push
jge
bound
mov
ins
sub
jb
fwait
adc
adc
mov
clc
(bad)
jle
dec
fnstsw
pop
sub
jmp
inc
call
stos
adc
xchg
pop
mov
lea
sbb
lds
mov
aaa
mov
jge
pop
arpl
mov
and
pop
inc
cwde
and
cmp
sti
xor
cmp
jo
ret
movs
push
mov
(bad)
xlat
xor
cmp
add
dec
pop
mov
jno
lods
xchg
lock
cmps
xchg
add
sbb
ss
push
rcl
hlt
or
fcmovne
mov
test
mov
inc
ja
ins
mov
mov
cli
cs
xor
repz
sbb
mov
mov
and
push
dec
iret
add
dec
hlt
mov
(bad)
cwde
xchg
mov
fcom
dec
xor
sbb
clc
das
jb
outs
jnp
xlat
shl
adc
int3
pop
or
cmc
mov
adc
arpl
test
aas
pushf
loopne
ret
push
xor
jns
or
xor
or
leave
movs
shl
je
mov
(bad)
xor
and
lods
dec
xor
loopne
cdq
fwait
and
pop
adc
or
fcomp
sbb
ds
cmp
(bad)
push
nop
fldenv
and
and
sbb
je
clc
int3
(bad)
lods
pop
mov
mov
leave
pop
les
lds
fisub
sub
aaa
and
adc
call
pop
mov
test
clc
xchg
add
cli
fist
or
cmp
dec
push
push
dec
xchg
sub
aad
push
xchg
jmp
and
scas
fsubr
push
mov
loopne
daa
gs
push
fs
mov
mov
jle
pop
pop
ss
retf
push
cmp
push
fsub
mov
pop
hlt
xchg
xor
mov
xchg
jne
xor
scas
js
rcr
dec
cwde
inc
loop
push
jne
jmp
mov
out
test
mov
leave
sub
test
dec
mov
jo
stc
sahf
pop
in
and
sar
fwait
mov
icebp
cmps
dec
test
out
inc
retf
push
into
mov
mov
jmp
or
aas
or
push
popa
push
mov
fnsave
mov
sub
imul
inc
cmp
mov
pop
dec
clc
inc
loope
inc
fs
mov
popa
pop
fwait
cmp
jne
mov
cld
add
fdivr
jnp
jnp
xchg
daa
sub
push
add
mov
inc
cld
rcr
or
xchg
fild
movs
test
sbb
mov
jmp
test
xor
cmp
cwde
(bad)
call
cmc
sub
adc
pop
xor
in
data16
int
xor
into
jg
cmp
adc
jmp
mov
popa
and
sbb
inc
test
adc
shl
cmps
mov
popa
add
stos
movs
stos
sub
jns
xchg
push
add
stos
xchg
jns
fwait
pop
add
cmp
pop
push
aas
push
mov
ds
or
ja
adc
push
mov
mov
inc
mov
gs
sti
ret
add
sub
and
mov
test
push
add
mov
xchg
push
and
push
bound
mov
daa
mov
or
mov
out
sbb
cwde
mov
sub
in
cmp
mov
mov
sbb
and
mov
aam
or
mov
mov
add
cmps
xor
mov
enter
sbb
pop
sti
mov
mov
pop
jne
mov
jg
inc
push
dec
mov
lock
push
push
(bad)
ss
mov
push
(bad)
sbb
inc
adc
sub
movs
sub
loopne
ins
pop
mov
cdq
sub
and
mov
clc
pop
cmc
cmc
fldenv
mov
repnz
ins
nop
dec
sbb
(bad)
stc
sub
cmp
fwait
cli
fst
scas
pop
push
and
in
sti
fisttp
ret
or
mov
and
in
popf
mov
push
xor
call
mov
cmp
cdq
aas
into
push
ds
xchg
addr16
and
add
dec
cmp
sbb
(bad)
nop
pop
xchg
test
(bad)
fistp
gs
mov
and
adc
rcl
mov
test
stc
shl
outs
and
mov
(bad)
rcr
call
xor
cmp
hlt
clc
xor
add
jl
cld
xor
ss
in
in
lahf
(bad)
aad
cmp
test
sub
xchg
call
inc
add
sbb
nop
cmp
jo
test
xchg
jmp
xlat
cmp
mov
pop
fnstcw
clc
dec
mov
or
cmovo
add
mov
mov
int3
sbb
out
test
sbb
mov
repnz
test
sub
jne
inc
and
push
push
mov
or
xchg
add
fsub
daa
loop
pop
shl
mov
sahf
dec
xchg
gs
repz
jmp
icebp
popf
push
sbb
stc
(bad)
sbb
jb
push
call
data16
xchg
out
ficom
mov
mov
fild
sbb
adc
cli
cli
sbb
mov
push
pop
inc
in
mov
int3
or
xlat
mov
mul
or
pushf
js
lock
cmp
or
call
cmp
jbe
xor
inc
xor
pcmpgtb
push
or
xchg
mov
push
cmp
idiv
jg
jl
out
adc
fmul
loop
xor
cld
xchg
cwde
mov
inc
nop
push
xchg
inc
xchg
sbb
cmp
int
xor
xor
and
mov
js
in
inc
ret
in
inc
jnp
mov
out
inc
pushf
inc
mov
jae
inc
inc
add
addr16
clc
pop
xchg
mov
mov
scas
mov
add
adc
add
sbb
mov
inc
pusha
mov
push
aaa
cmp
lahf
data16
(bad)
int
dec
leave
in
icebp
(bad)
pop
in
cmp
sub
jmp
dec
fdivr
xchg
jg
into
ja
stc
push
scas
xchg
imul
jne
mov
mov
xchg
jae
jmp
in
into
and
movs
mov
add
pop
ss
js
xor
jbe
mov
enter
mov
movs
sub
out
or
inc
lock
xchg
adc
(bad)
or
cwde
in
fwait
mov
push
daa
add
fs
inc
mov
bsf
scas
xor
call
test
xchg
mov
mov
pusha
pop
adc
push
xchg
shl
cmp
dec
mov
inc
xor
jmp
dec
icebp
push
mov
jo
out
jo
ds
push
sbb
mov
push
loop
xchg
fild
out
and
mov
sbb
in
jno
rcl
scas
mov
push
sahf
ja
stos
mov
xor
scas
call
jbe
in
xor
loop
mov
dec
clc
cmps
inc
xor
dec
or
es
lock
and
(bad)
pop
das
fs
lea
add
inc
cdq
fs
jae
mov
jmp
(bad)
and
cmp
call
xchg
and
xor
stc
shl
ret
rol
mov
mov
pop
pop
das
mov
fisubr
lds
in
dec
popa
adc
(bad)
mov
xor
jmp
dec
out
mov
xor
popa
jne
fldenv
push
push
and
(bad)
mov
jns
sub
outs
xchg
in
cmp
das
mov
out
jle
adc
sub
and
xchg
sbb
inc
lods
push
stos
mov
jl
and
jl
fidivr
cmp
test
aam
jbe
push
xchg
mov
test
(bad)
xchg
lods
sbb
js
push
jo
mov
sbb
and
out
fs
sub
out
out
mov
fsubr
cmc
retf
std
out
je
xchg
aas
mov
or
std
adc
or
ret
mov
cld
(bad)
xchg
xchg
inc
xchg
mov
xchg
es
adc
xchg
add
ins
arpl
imul
xchg
scas
and
sub
and
sub
es
mov
cmps
mov
inc
xor
jo
scas
add
mov
dec
pop
sub
retf
pushf
leave
sub
ss
dec
popa
pop
fadd
xlat
cld
(bad)
retf
in
fwait
imul
mov
inc
fs
scas
rcr
xchg
hlt
(bad)
or
sub
sub
fcomp
cmp
int3
shr
pusha
push
int3
js
aaa
cdq
popa
adc
data16
clc
(bad)
cmp
data16
je
loope
push
push
inc
aam
icebp
data16
and
(bad)
lock
movs
mov
sub
xchg
cmp
pop
ficomp
or
xchg
pop
push
jne
in
fld
jo
sub
daa
mov
sub
push
dec
(bad)
outs
cld
cmp
imul
daa
jbe
dec
add
adc
call
mov
lods
rcr
jmp
stos
dec
(bad)
xor
and
mov
in
jbe
out
inc
cld
inc
jbe
mov
inc
pop
in
add
mov
cdq
sub
xor
jo
fstp
jmp
and
stos
pop
outs
mov
push
xchg
push
push
fistp
cli
scas
mov
inc
cs
neg
cdq
sahf
mov
pop
adc
lods
jmp
ins
mov
adc
mov
pop
(bad)
test
dec
ss
add
out
and
(bad)
push
int
jg
iret
mov
mov
sub
or
outs
adc
bound
sub
jb
xchg
outs
test
mov
int
js
arpl
je
xor
cmp
pop
sbb
jno
mov
add
push
xor
mov
jp
pop
add
sahf
lahf
push
xor
jne
mov
mov
or
add
sub
pop
push
rcl
xor
push
inc
leave
inc
lods
jno
xlat
cld
(bad)
fdivr
dec
mov
cmp
loop
sub
in
sbb
cmp
mov
fisttp
dec
das
dec
arpl
das
mov
xor
pop
and
add
imul
in
mov
inc
lock
rcl
mov
adc
push
push
cmp
lahf
pop
out
repz
(bad)
adc
lahf
addr16
push
mov
stos
sub
mov
sbb
test
std
sub
leave
retf
fisttp
mov
dec
mov
call
dec
in
mov
mov
xor
ret
adc
inc
clc
loopne
xor
adc
or
std
push
push
ds
ins
ret
movs
mov
add
es
arpl
lds
mov
mov
push
js
retf
out
cmp
jmp
add
dec
les
pop
and
pusha
push
fnstcw
arpl
ret
push
xor
sub
icebp
cmc
dec
dec
stos
xchg
repnz
out
jl
adc
sbb
pop
add
outs
ret
ret
or
jle
popa
das
hlt
imul
adc
fdivr
adc
outs
rcl
jmp
mov
sar
dec
nop
and
sub
jge
test
adc
(bad)
icebp
rcr
hlt
data16
mov
dec
es
sub
pop
repnz
sbb
(bad)
fmul
push
cwde
xor
hlt
mov
mov
sbb
retf
shl
lock
jns
mov
jle
outs
(bad)
fiadd
push
ins
mov
adc
movs
xchg
test
pop
bound
out
mov
dec
int3
fld
mov
ret
imul
mov
and
fs
(bad)
sahf
push
sbb
lock
add
mov
cmc
(bad)
into
adc
sahf
gs
fisub
push
inc
inc
cli
sbb
mov
xchg
xchg
cmp
add
cwde
or
test
dec
or
xor
adc
shr
cmp
push
ss
(bad)
jmp
leave
jne
or
enter
cwde
mov
lods
xor
es
pop
mov
mov
hlt
cmps
mov
outs
jnp
xor
push
push
enter
push
push
pusha
jg
xchg
push
lahf
inc
add
mov
dec
or
ret
cmp
mov
or
adc
inc
cdq
repnz
mov
jmp
jne
xor
mov
jmp
sub
sub
xchg
stos
inc
sub
movs
pop
and
popa
fs
mov
inc
sbb
push
call
cld
(bad)
out
dec
add
call
in
add
xchg
rcr
enter
fsubrp
in
dec
inc
xchg
pop
cs
adc
push
or
add
push
stos
cmp
dec
cmp
and
or
leave
mov
sbb
mov
cmp
jno
mov
popa
xchg
lods
into
rol
mov
push
sbb
mov
dec
xor
ins
or
cld
rol
and
xchg
stos
ficomp
enter
jmp
mov
stc
repz
lods
sub
arpl
xor
inc
cmp
sub
leave
xor
inc
cmp
mov
xor
adc
add
cdq
push
jne
push
add
imul
movs
out
popa
jb
sbb
and
or
xor
repz
leave
cwde
push
jns
lods
dec
mov
in
sub
fiadd
imul
sbb
ss
sar
xchg
jbe
shl
lds
xor
lea
mov
sub
fnsave
push
dec
loope
fcmovnbe
std
pushaw
retf
ins
dec
adc
imul
inc
cmp
rcr
cmps
xchg
icebp
pop
jl
cmc
or
add
xchg
mov
push
sbb
jle
inc
pop
or
jbe
(bad)
mov
fidiv
inc
ins
sub
mov
test
stc
fild
sub
mov
cmp
jge
scas
lds
test
aam
xchg
nop
lods
push
push
stc
adc
adc
sar
ins
scas
lahf
dec
add
fiadd
fiadd
and
or
inc
mov
aam
pop
dec
add
add
call
jo
xor
jmp
cli
repz
mov
push
retf
aam
cmp
out
mov
fistp
leave
jl
inc
xchg
sbb
lahf
mov
adc
ja
inc
mov
jle
push
ret
(bad)
ds
das
(bad)
lock
inc
dec
dec
lea
or
les
loop
push
call
cmp
sbb
sbb
push
inc
sbb
aas
adc
popa
popf
pop
ror
xchg
or
ret
and
loope
xchg
cmp
popf
lds
push
sub
stc
mov
popf
mov
xchg
sub
push
rcl
mov
push
mov
cmp
sub
div
test
jb
jb
mov
and
cwde
add
and
ret
es
cmp
call
ret
pop
or
mov
sbb
add
fcomp
pop
dec
jns
hlt
iret
enter
or
call
xor
ds
dec
jae
movs
neg
adc
push
daa
and
test
(bad)
pop
sub
pop
bound
xchg
je
cmp
or
stc
cli
add
pop
(bad)
adc
inc
push
mov
jle
xchg
mov
test
xchg
dec
test
test
xchg
loop
jo
or
xor
imul
dec
and
ret
bound
mov
xchg
pop
ins
jmp
adc
or
call
sahf
hlt
push
stc
sbb
out
(bad)
sbb
fsubr
retf
inc
daa
test
xchg
jno
xchg
dec
sub
mov
push
int
int
in
push
in
dec
ss
or
fcmovnu
loop
cli
jmp
xchg
add
test
sub
mov
rcl
gs
cli
retf
mov
stc
cmp
sti
sbb
sub
cmp
mov
add
sbb
repnz
call
ins
jle
fwait
jp
into
ret
div
mov
gs
arpl
xor
fwait
add
push
or
push
aaa
cmp
add
(bad)
popa
add
dec
mov
or
dec
lea
push
push
or
jp
shl
cmc
cs
mov
pop
mov
sti
pop
or
cld
cs
cmp
int3
mov
cmp
(bad)
adc
addr16
push
test
loope
add
push
mov
add
ss
lock
bound
xchg
mov
push
js
inc
popf
imul
mov
jle
sbb
std
dec
(bad)
mov
bound
fnstenv
mov
mov
cmps
mov
leave
xchg
mov
cmp
push
mov
dec
in
sbb
push
movs
push
repz
adc
aaa
idiv
mov
(bad)
leave
sbb
call
mov
lock
ins
ins
fisttp
xchg
and
shl
cmps
inc
aaa
and
inc
shr
inc
je
jbe
xor
add
xchg
outs
mov
or
test
push
(bad)
sbb
inc
add
in
jbe
test
int3
arpl
pop
mul
jns
js
inc
adc
or
add
leave
adc
cmps
faddp
div
cmp
(bad)
inc
retf
dec
and
rcl
movs
(bad)
cmp
pop
inc
mov
es
dec
jp
jmp
in
mov
pop
inc
leave
jbe
punpckhbw
jp
out
mov
clc
or
and
or
fisubr
clc
adc
std
or
das
jo
or
mov
ret
and
mov
pop
cmps
ins
pop
imul
cmp
jl
test
sbb
mov
repnz
sub
and
stc
aad
imul
cmp
call
sar
fiadd
rcr
aaa
cld
jae
mov
sub
mov
sub
daa
xor
mov
adc
or
mov
shl
mov
pop
mov
jo
dec
add
mov
(bad)
(bad)
cmp
jg
push
js
mov
cmp
adc
xor
fild
sub
ja
jmp
cmp
sbb
cmp
inc
sub
(bad)
or
(bad)
into
mov
sbb
lds
push
mov
lea
cmp
sub
mov
cli
cmps
mov
push
in
xchg
icebp
pop
add
(bad)
fbld
not
push
pop
(bad)
in
scas
(bad)
retf
lods
fmul
jo
mov
xchg
test
pop
push
stos
xchg
and
jbe
gs
inc
loop
mov
mov
mov
fsub
test
pop
add
mov
repz
cld
int3
mov
(bad)
xchg
and
lods
aam
ins
stos
add
cdq
shl
dec
pop
lds
fnstenv
dec
cmp
js
test
pop
clc
cdq
ins
frstor
sub
inc
or
add
mov
std
xchg
and
ja
adc
ss
push
movs
setl
xchg
nop
mov
jae
ss
xchg
cmp
add
dec
jp
or
mov
lods
dec
rcl
add
(bad)
fwait
cmp
outs
bound
popf
arpl
popa
sub
sbb
sahf
pushf
adc
shl
sbb
mov
cli
ss
int3
pop
aam
loope
sub
sub
jbe
push
fld
pushf
xchg
sbb
cld
xchg
aad
ret
ja
cld
sub
dec
xchg
cmp
push
cmp
je
jl
pop
sbb
xor
lea
add
cmps
leave
mov
mov
in
mov
or
scas
cli
repz
or
imul
or
inc
xchg
ss
mov
sub
mov
js
(bad)
stos
call
in
xor
test
sub
mov
ds
cmp
in
es
aad
mov
push
mov
add
lds
xchg
lock
fsubr
sar
fsub
xor
jge
cmp
dec
xchg
and
test
stos
test
pop
cdq
sub
and
imul
les
out
jbe
jecxz
(bad)
jl
xchg
lods
js
mov
jb
pop
arpl
sar
int3
cs
jg
xor
addr16
sbb
in
push
div
ror
jl
icebp
test
out
xchg
mov
add
cmps
icebp
fisttp
mov
shr
xchg
add
ja
adc
std
rcl
mov
push
sbb
cmps
xor
sub
add
xchg
repnz
mov
fdivr
dec
xlat
inc
cmp
cmp
push
mov
xchg
sbb
mov
mov
add
loop
push
lds
adc
dec
sbb
pop
dec
fcomp
xor
fsub
dec
das
mov
dec
movs
sti
xchg
ds
xlat
inc
pushf
ins
fwait
xor
mov
shr
or
dec
enter
xor
jl
sahf
in
xchg
mov
sti
inc
test
pop
mov
test
adc
cmp
in
sahf
xchg
mov
stos
(bad)
call
sub
push
jns
popf
fwait
mov
dec
stos
cmp
nop
mov
dec
push
popa
sar
test
nop
mov
mov
sub
inc
sbb
ds
int3
xor
sar
pop
into
inc
mov
mov
(bad)
in
inc
ror
add
mov
mov
shl
cmps
add
push
pop
fdivr
xchg
out
sbb
mov
mov
shl
inc
out
test
sbb
movs
mov
cmp
and
cli
adc
pusha
aas
pop
pusha
mov
jle
shl
addr16
xchg
pop
addr16
push
leave
std
(bad)
ja
adc
in
pop
jle
or
push
dec
sahf
add
movs
stos
xchg
push
jb
std
mov
(bad)
cmp
jmp
jae
int3
and
inc
outs
hlt
pop
mov
pop
dec
popa
sbb
adc
loopne
jg
dec
fwait
lods
cmp
sub
jmp
push
pop
inc
adc
daa
jno
inc
mov
mov
pop
and
into
jo
ret
sbb
xchg
dec
lods
pop
push
dec
xor
inc
jle
mul
or
cmp
adc
pushf
sub
xchg
cld
js
sti
or
add
cmc
cli
sub
jne
xor
je
rcl
lods
lock
or
rcl
lds
push
cmc
add
and
outs
scas
push
adc
mov
mov
cmp
pop
adc
ror
ret
lahf
mov
mov
pop
enter
je
ret
xor
(bad)
jge
cmp
movs
xchg
jno
lds
adc
dec
adc
bound
inc
neg
stos
xchg
inc
cmp
and
dec
repnz
pop
into
mov
mov
int3
into
in
xchg
cli
std
pop
sbb
daa
xchg
inc
sbb
jge
fdiv
jbe
sub
sub
in
xchg
test
pop
loop
add
es
(bad)
mov
(bad)
iret
data16
lahf
fst
and
jmp
or
popa
shl
or
dec
push
cwde
or
mov
shl
in
adc
inc
dec
jge
fst
xchg
data16
xchg
int
lahf
mov
cmp
mov
imul
loope
cs
jae
aad
outs
jmp
fs
adc
sbb
leave
scas
xor
mov
xchg
xor
movs
lock
jmp
pop
ins
mov
adc
repnz
fs
lods
dec
adc
adc
xlat
mov
dec
cmp
inc
repnz
dec
jbe
jp
shl
cmps
dec
add
out
ret
dec
mov
bound
sbb
bnd
dec
pop
in
or
(bad)
cdq
cmp
xchg
ja
(bad)
out
xor
loopne
adc
mov
ds
push
jecxz
mov
adc
out
sbb
pusha
push
daa
cmp
lods
fdiv
cmp
jae
jmp
jp
cmp
pop
mov
xlat
sbb
pushf
pop
push
outs
jg
mov
in
mov
fst
inc
or
mov
jb
in
cmp
arpl
fdiv
pop
addr16
mov
out
retf
dec
stc
mov
fs
pushf
test
fs
add
shl
pop
into
call
es
cli
cwde
jmp
cmp
cld
jnp
dec
and
cli
xchg
es
sbb
xor
test
call
cmp
cmps
movs
mov
ins
mov
fs
shl
or
aaa
add
pop
retf
jl
jb
inc
xchg
je
push
not
fldcw
push
es
popf
call
or
into
inc
dec
fs
xchg
fisttp
lods
out
inc
aas
fs
sbb
in
push
dec
rcl
dec
(bad)
and
sahf
inc
cmp
imul
adc
adc
data16
pop
or
dec
iret
imul
arpl
popf
enter
inc
std
neg
adc
dec
loop
sbb
jle
jle
(bad)
fild
add
mov
mov
(bad)
lods
xor
fstp
lods
inc
(bad)
dec
jbe
mov
mov
or
pop
bound
mov
leave
inc
(bad)
mov
push
sub
dec
pop
test
inc
adc
push
jmp
adc
dec
adc
pop
jge
xchg
ret
inc
pop
cmp
(bad)
in
repz
jns
pop
push
and
xchg
sbb
loop
push
adc
mov
vpunpcklwd
pop
mov
std
mov
cdq
mov
xlat
pop
sbb
test
pop
inc
mov
push
leave
jno
jnp
mov
arpl
icebp
fiadd
push
cmp
xor
aaa
(bad)
ror
je
fs
ins
rcr
sbb
push
ds
or
pop
adc
inc
ds
adc
jle
cs
mov
mul
xor
mov
cmp
or
sub
and
loope
sbb
js
test
cmp
push
push
sbb
dec
stc
dec
sub
jno
push
cmps
mov
mov
inc
movs
jno
repz
cdq
leave
(bad)
mov
test
sub
scas
outs
loope
ja
cmps
gs
jne
test
call
adc
mov
sub
ficom
jae
stc
stos
fild
cmc
push
xor
push
push
clc
in
arpl
sbb
xchg
push
shl
cmp
mov
mov
ja
dec
jnp
jb
jnp
outs
out
and
mov
jmp
cdq
xchg
fsubrp
imul
das
test
xchg
mov
xchg
out
rcl
sbb
sbb
ffreep
push
jns
movs
pusha
add
mov
pop
pop
dec
adc
fild
xchg
mov
out
jb
lds
pop
icebp
push
or
cmp
mov
mov
popa
dec
sahf
in
lea
call
shr
mov
cmp
test
or
pop
inc
inc
fistp
xchg
js
mov
mov
xchg
sub
pushf
mov
fstp
outs
mov
or
dec
fucomip
arpl
and
cs
pop
and
mov
inc
es
cwde
sbb
aam
mov
xchg
cmp
dec
sti
xor
jnp
sbb
stc
call
jns
mov
xor
push
lods
add
mov
and
lock
pop
fisub
mov
xor
(bad)
push
popa
sti
xlat
cmp
lea
int3
scas
pop
daa
inc
je
out
or
lods
jg
push
or
inc
pop
jp
popf
lods
add
lods
daa
jmp
adc
jg
arpl
pushf
into
stos
push
push
mov
imul
xchg
pop
aas
pop
add
jae
mov
fist
out
add
push
in
sbb
out
jno
das
loopne
aad
mov
push
pop
mov
fisub
sub
jge
sar
aaa
jle
sbb
mov
mov
ror
fcmovb
add
or
(bad)
icebp
sub
mov
arpl
push
icebp
rcr
ret
gs
cmp
or
leave
mov
lods
call
cmp
div
call
mov
hlt
stc
mov
pop
xchg
mov
mov
dec
push
pop
cmp
cmps
outs
sub
aas
adc
mov
sbb
cld
dec
out
pop
mov
iret
pop
xchg
inc
push
mov
xchg
pop
cwde
or
or
into
(bad)
mov
imul
psubw
push
or
dec
ins
sub
push
dec
mov
push
cmp
xchg
mov
imul
repz
add
dec
pusha
mov
sbb
push
lods
lahf
jle
inc
inc
into
test
iret
cs
dec
loopne
add
sbb
js
test
in
adc
push
xor
xor
ret
sbb
mov
shr
adc
inc
ds
and
xchg
inc
inc
arpl
pop
bound
xor
hlt
dec
icebp
sbb
xor
mov
je
push
out
jb
out
add
xchg
lea
cdq
add
(bad)
pop
xor
cmps
lods
js
mov
(bad)
es
cmp
sbb
mov
test
jle
xchg
aad
fs
sub
cmc
loop
pop
mov
push
stos
loop
into
pop
test
ret
inc
pop
jp
(bad)
mov
sbb
xor
xchg
dec
mov
repnz
sub
loop
inc
push
inc
lds
repz
aaa
jmp
pop
lds
inc
dec
add
and
mov
pop
sbb
and
jle
sti
pop
sbb
(bad)
jns
cs
test
cwde
retf
(bad)
mov
cmp
jno
mov
inc
mov
sub
call
cs
cmp
nop
je
fsub
add
cwde
iret
imul
mov
jge
mov
rcr
mov
pushf
mov
inc
mov
mov
jl
pop
or
mov
ins
mov
loopne
cmp
adc
or
inc
out
fincstp
mov
mov
mov
mov
sbb
out
js
mov
or
test
std
cmp
jnp
dec
adc
lods
pop
in
and
repz
outs
mov
xor
loope
adc
or
pop
aam
xchg
pop
(bad)
mul
in
inc
sbb
adc
jmp
adc
inc
mov
aam
ja
call
xchg
push
in
and
jbe
(bad)
(bad)
fcom
inc
jo
or
add
mov
nop
jae
sub
fiadd
mov
call
xchg
icebp
jns
das
add
pop
cmp
rol
pop
push
mov
jmp
xor
xor
jge
mov
and
add
(bad)
iret
push
shl
mov
lods
sbb
imul
mov
mov
fwait
pop
pop
inc
shl
hlt
cmc
jg
mov
jb
xlat
inc
mov
mov
push
add
call
push
xor
pop
mov
push
cmp
test
pop
push
cwde
mov
or
jnp
test
cmp
in
and
arpl
cdq
or
cli
hlt
jmp
xchg
sub
xor
out
(bad)
out
dec
push
add
push
pop
or
aaa
adc
sbb
jnp
cs
sub
inc
pop
ja
repz
cdq
jle
add
lds
adc
or
mov
fsubr
jmp
leave
or
(bad)
shl
ret
mov
and
xlat
sub
and
mov
mov
(bad)
mul
xor
pop
outs
mov
push
lahf
jns
aam
push
jp
nop
loope
dec
cmps
pop
(bad)
push
stos
es
adc
nop
addr16
ins
inc
and
cmp
cmp
mov
aas
daa
aas
bndstx
sbb
int3
mov
mov
pop
jb
xchg
stc
jmp
adc
xor
bswap
pop
jbe
retf
pop
pop
mov
cmp
stos
ret
mov
sbb
sbb
adc
jne
jno
pop
xor
in
ror
shl
push
lods
cmp
xor
pop
(bad)
dec
in
aad
out
jbe
xor
retf
pop
scas
nop
mov
ffreep
xchg
out
jl
rol
fwait
xor
xchg
arpl
fdivr
sub
or
or
lahf
out
add
dec
cmp
jo
leave
adc
repnz
mov
xor
add
adc
xchg
les
adc
dec
arpl
lahf
adc
mov
int
(bad)
xchg
mov
(bad)
dec
ss
adc
rol
xor
(bad)
jg
mov
loopne
mov
in
in
movs
jmp
cmovp
imul
mov
push
or
pop
movs
test
push
pusha
ja
scas
into
mov
jp
loope
les
test
(bad)
stos
in
imul
cmps
pop
mov
or
(bad)
inc
icebp
mov
sbb
jbe
pop
push
lock
std
push
xchg
dec
inc
add
call
loopne
mov
inc
lock
push
loop
leave
sbb
sbb
jp
(bad)
and
mov
push
dec
jne
fsub
add
pop
push
dec
jge
push
(bad)
fwait
ins
out
pushf
xor
test
outs
adc
mov
(bad)
fistp
popa
sbb
sub
ds
and
pop
cmp
mov
cmps
cmc
(bad)
add
es
dec
or
inc
jle
pushf
xchg
mov
mov
pop
xlat
add
xchg
data16
jle
inc
xchg
mov
in
cmp
ss
xchg
aas
mov
jmp
imul
jge
mov
stos
mov
aad
add
retf
mov
(bad)
jp
div
(bad)
push
aam
sahf
stos
es
add
sub
mov
xor
pop
sbb
mov
adc
add
sub
jle
stos
dec
test
into
xchg
sub
xor
and
ins
movs
outs
lahf
and
dec
loopne
icebp
cmp
jge
arpl
sti
repnz
pop
mov
jmp
cmp
bound
test
xor
and
das
jb
mov
or
call
add
xchg
sub
jmp
and
ror
or
icebp
mov
jle
mov
and
ret
add
add
sbb
or
sub
repnz
sub
movs
inc
sahf
push
shl
les
outs
outs
jmp
cmc
push
jl
sbb
fmul
xlat
inc
mov
movs
inc
popf
cmp
jg
sub
gs
std
ds
push
test
in
dec
out
in
fs
out
pop
jmp
sub
mov
outs
cmps
sar
mov
data16
jle
jo
data16
pop
ss
jle
cmovno
add
xchg
and
mov
enter
test
pop
jg
push
xlat
lds
jnp
out
in
dec
stos
push
sub
jo
xor
push
or
mov
inc
(bad)
dec
push
fisttp
(bad)
cmc
daa
add
sub
sub
xchg
cli
(bad)
hlt
mov
push
and
(bad)
test
inc
bound
inc
mov
mov
mov
xchg
fsubrp
adc
fimul
mov
ret
xor
push
xchg
cmc
test
xchg
pop
mov
inc
ins
mov
sub
xchg
jecxz
add
ins
bndstx
pop
add
xor
outs
inc
stc
cmp
mov
mov
pop
xor
fsubr
xchg
rcl
pop
(bad)
cmp
xchg
dec
outs
outs
sub
shr
mov
sahf
in
xchg
or
inc
push
xchg
mov
or
mov
int
and
mov
out
pop
cmp
pop
mov
aas
cwde
pop
mov
out
loope
or
pop
imul
inc
mov
sub
(bad)
jg
sahf
cmp
imul
adc
fmul
xor
mov
adc
jmp
and
pop
pop
in
test
and
movs
dec
ins
fnsave
jmp
outs
xor
mov
jecxz
and
push
mov
jno
retf
es
mov
jp
scas
das
sub
out
jmp
mov
and
dec
push
dec
rcl
mov
sub
shr
bound
outs
int
push
loop
dec
out
jge
xchg
scas
out
mov
and
or
xchg
mov
adc
test
fsubp
les
scas
and
mov
mov
aad
std
aas
std
cs
mov
int3
mov
inc
pop
shr
and
call
cmps
leave
sub
lock
or
mov
outs
mov
std
div
mov
test
push
outs
(bad)
or
jae
jmp
sbb
jo
call
xor
mov
jnp
cmp
scas
shl
push
or
push
repnz
scas
cmp
sbb
add
test
xchg
lods
mov
rol
aam
fdivp
or
cmp
mov
neg
rol
lahf
jne
push
jbe
clc
mov
ret
xchg
scas
(bad)
cwde
ja
add
cmps
bound
and
addr16
bound
and
fld
jae
sbb
retf
mov
in
call
js
jmp
jb
retf
in
or
(bad)
call
dec
add
das
div
push
test
retf
add
dec
in
test
aas
test
add
push
add
scas
mov
mov
sbb
frstor
pop
mov
pop
xor
add
je
icebp
out
fwait
sub
mov
scas
das
das
adc
outs
popa
cmp
je
jmp
(bad)
mov
cmp
add
cmps
fldenv
les
pop
mov
push
pop
ins
sti
lock
dec
and
push
ss
(bad)
push
mov
mov
mov
int
sbb
jne
(bad)
fdiv
xor
cmp
or
ret
mov
or
pop
ret
adc
(bad)
pop
push
inc
and
ins
cmp
leave
dec
adc
mov
in
pop
cmp
dec
pushf
mov
gs
mov
iret
or
scas
lock
cs
adc
mov
xchg
imul
xor
fisubr
ss
xor
dec
mov
adc
cmp
add
jb
mov
outs
stc
or
jbe
in
sar
lock
loopne
add
or
mov
adc
jle
add
sar
jmp
mov
mov
in
add
push
lds
jnp
dec
sbb
inc
mov
fild
add
shl
jbe
sbb
inc
push
retf
test
mov
arpl
dec
jmp
dec
mov
mov
nop
push
mov
cwde
xor
idiv
jnp
adc
out
dec
lahf
and
repz
cmp
xchg
call
mov
sub
sbb
scas
mov
in
aam
xlat
push
inc
push
lods
mov
jmp
in
ins
movs
inc
or
dec
iret
pop
repz
pop
inc
mov
xchg
inc
iret
jg
not
outs
adc
scas
inc
mov
cmp
push
dec
sub
cmp
int3
repz
mov
or
inc
stc
in
sbb
pushf
sti
hlt
movs
call
mov
dec
out
(bad)
push
icebp
fs
fcmovb
inc
leave
out
fsubr
xchg
push
or
mov
mov
push
mov
dec
(bad)
cmp
sbb
push
pop
or
mov
adc
dec
adc
jbe
fnstsw
loop
aad
rol
fwait
fwait
mov
inc
push
loopne
adc
jge
loopne
mov
iret
jecxz
pop
push
test
xlat
(bad)
pop
fild
adc
jecxz
mov
scas
inc
pop
push
int3
push
int
retf
push
jne
aaa
int3
and
dec
pop
pop
or
sbb
(bad)
add
sbb
test
fnsetpm(287
out
xor
shl
fld1
imul
je
dec
add
cmp
lahf
idiv
movs
int
sbb
inc
sbb
pop
cwde
jno
adc
movs
cmp
hlt
cmc
test
mov
sbb
mov
jmp
dec
(bad)
(bad)
jg
dec
iret
arpl
cdq
dec
cmps
or
lds
lea
imul
in
and
mov
or
adc
adc
(bad)
retf
hlt
imul
vmovlpd
cmp
call
sahf
jmp
lods
cmps
add
adc
or
repnz
jo
cmp
pop
lods
pop
cmp
push
shl
mul
xor
scas
mov
cdq
push
xor
mov
lods
ja
inc
mov
or
push
movs
cmps
es
inc
mov
ret
stc
aad
stc
xor
pop
push
les
in
inc
xor
add
push
jmp
(bad)
ror
mov
retf
jns
fnstsw
cdq
bnd
imul
stc
movs
jmp
repz
pop
fisubr
jne
xlat
dec
xchg
ret
(bad)
dec
cmp
mov
dec
pusha
cs
lds
sub
inc
jle
scas
xchg
add
push
pop
ss
mov
lock
inc
scas
or
push
ds
add
and
shl
rol
sub
push
in
push
and
shl
das
(bad)
daa
inc
call
js
pop
xor
mov
push
imul
clc
(bad)
push
jmp
fidivr
xor
push
fsqrt
or
sbb
inc
test
daa
lahf
out
push
dec
pusha
mov
pop
retf
shr
or
(bad)
adc
in
jno
ss
les
jns
out
push
in
jbe
outs
popf
jmp
fwait
mov
mov
ins
inc
cmps
xchg
aad
or
aad
outs
lods
xchg
jmp
pop
cmp
push
mov
mov
jb
dec
mov
mov
popa
or
jl
jns
(bad)
mul
mov
xchg
(bad)
sti
jge
cdq
gs
mov
ss
adc
sub
mov
ja
sub
mov
pop
lods
mul
pop
addr16
and
xor
loop
and
mov
sub
in
pop
ret
xchg
push
push
cmps
dec
in
or
cmp
lock
sub
loope
push
add
call
aas
add
neg
ds
add
loop
sbb
adc
scas
lods
test
or
in
mov
xor
(bad)
or
test
add
dec
es
xlat
enter
inc
test
aaa
xchg
inc
mov
rcr
jo
sbb
xor
shr
scas
mov
pop
fist
(bad)
or
ret
pop
stos
inc
lods
mov
and
lods
lahf
xor
jle
push
sbb
adc
mov
ds
popa
pushf
cmp
into
jle
or
loope
stos
adc
inc
mov
jno
adc
adc
mov
movs
nop
js
ret
jg
pushf
test
inc
or
xchg
xchg
adc
cmp
and
cmp
pop
ret
dec
xchg
adc
xlat
mov
cmp
call
jle
pop
mov
dec
cmps
xor
leave
inc
hlt
cs
sbb
enter
jne
inc
xchg
or
push
ror
add
cmps
mov
pop
mov
ret
mov
fisub
ds
fdivr
jns
repz
cdq
jnp
adc
mov
sbb
retf
xchg
js
nop
cmp
dec
mov
bound
jp
xor
mov
pop
rcr
mov
das
add
movs
jg
popf
push
jmp
mov
loop
xor
inc
nop
xchg
ins
movs
vpandn
pcmpgtb
int
jecxz
in
idiv
das
je
add
cmp
push
mov
fnstcw
lods
adc
jp
(bad)
fwait
(bad)
cli
mov
retf
leave
sahf
loope
outs
xlat
stos
mov
out
icebp
jb
and
stos
cmp
out
jae
mov
push
and
inc
mov
mov
jp
mov
sbb
sbb
and
cmp
test
jge
mov
jbe
retf
cmp
and
sbb
dec
daa
mov
icebp
mov
sbb
scas
daa
aam
mov
mov
aas
xchg
mov
add
js
lods
test
jmp
lods
call
sti
mov
(bad)
jge
int3
mov
sub
ret
inc
sbb
mov
pop
into
popf
fistp
test
(bad)
adc
pop
nop
lahf
dec
in
test
daa
cs
ror
adc
push
pop
push
les
dec
and
aad
inc
aad
loopne
in
cmp
jb
out
push
loop
inc
repnz
push
imul
(bad)
push
push
pop
adc
push
xchg
mov
inc
add
adc
test
ror
pop
jmp
dec
bound
sub
or
xchg
imul
inc
or
jb
sbb
xchg
xchg
fs
or
ret
cmp
rol
sub
push
ror
popa
push
lea
mov
stos
loop
mov
cmp
loope
imul
sbb
jmp
jo
mov
add
add
push
inc
ror
xchg
jno
mov
repnz
(bad)
popa
retf
shl
jns
push
ret
fwait
dec
or
out
shr
scas
outs
jg
or
mov
sbb
or
sub
jmp
loop
outs
push
mov
pop
retf
loope
or
cld
xor
push
cmp
sub
shl
rol
adc
lock
jbe
add
fldcw
iret
push
cmp
dec
mov
in
sahf
das
ss
lods
sbb
int
icebp
sbb
loop
mov
or
jbe
inc
jmp
fisubr
test
xchg
inc
jmp
push
mov
sub
sti
mov
xor
push
repz
gs
leave
mov
mov
stc
mov
test
and
into
jne
or
stc
jbe
stos
mov
push
jl
fdiv
dec
mov
add
sbb
inc
ror
or
xor
pop
ds
lea
cdq
bound
cmp
mov
rcr
stos
xor
je
fcomip
or
test
dec
aas
fcom
cmp
cmp
push
sub
ficom
xor
inc
jne
sub
xor
(bad)
or
in
or
dec
fdiv
mov
fwait
rcr
call
aad
jns
sti
cmp
test
sbb
lea
mov
inc
mov
sub
lds
jno
(bad)
push
or
popa
inc
jle
jb
or
inc
jmp
cmp
retf
xchg
sub
leave
sub
mov
sbb
fst
add
jns
sub
pushf
sti
movs
push
mov
mov
jns
lock
adc
fidiv
shr
and
out
out
test
in
stc
xchg
sgdtd
cmp
das
push
push
or
ret
movs
jae
inc
test
jbe
inc
fnstsw
adc
mov
push
popa
sbb
cmp
xchg
add
sub
xor
sbb
push
je
ins
fwait
or
shl
add
fwait
cmp
jmp
mov
fs
mov
adc
je
jmp
xchg
mov
mov
dec
or
mov
aam
(bad)
enter
sahf
pop
push
jle
sbb
pop
jle
and
cwde
sar
aam
xchg
jmp
mov
and
lea
fcmovnb
jns
fild
inc
sub
ficom
mov
sahf
sar
mov
mov
call
pop
imul
lock
mov
jmp
lock
out
sahf
xor
dec
mov
inc
retf
jo
pusha
xor
jbe
aad
mov
(bad)
call
push
(bad)
jnp
and
push
sar
fld
mov
mov
stc
mov
xchg
sub
scas
leave
mov
cwde
sbb
adc
sbb
push
adc
sbb
int3
pop
mov
js
arpl
outs
jbe
call
popa
loope
inc
jmp
fcom
jmp
popa
and
loop
mov
dec
dec
fimul
pop
cmp
mov
inc
mov
lea
jns
(bad)
push
push
xchg
mov
xor
push
jo
cmc
jle
sub
mov
push
das
sahf
push
xchg
push
adc
ja
push
xor
mov
retf
repnz
jp
push
inc
cdq
shl
repz
jge
inc
adc
js
mov
inc
and
popa
cmps
dec
push
fwait
imul
cdq
out
mov
test
scas
push
(bad)
xlat
or
lock
xor
add
icebp
sbb
mov
mov
push
sbb
sar
addr16
ret
loop
push
shl
mov
cmp
adc
pop
clc
fistp
shl
mov
add
mov
leave
and
(bad)
fidivr
repnz
es
xor
jl
fisub
lock
mov
clc
jg
in
idiv
sbb
push
jge
aad
fmul
ja
xchg
out
mov
jecxz
push
test
xor
and
xlat
pop
sub
xor
push
xor
xor
push
in
nop
jge
test
xchg
cmp
aas
cmps
leave
stc
dec
addr16
inc
pop
cdq
inc
add
push
nop
jbe
(bad)
fmul
js
shl
sahf
mov
das
mov
mov
outs
jbe
mov
pop
jne
xor
sbb
push
adc
push
jp
pop
jnp
arpl
push
mov
mov
daa
lock
cmps
loopne
stc
xchg
sbb
mov
pmulhw
(bad)
in
sbb
fnsave
fidivr
push
xlat
xchg
xchg
neg
jae
and
push
mov
fsub
hlt
cmp
and
dec
pushf
aaa
dec
cdq
ds
aas
and
cmp
sub
retf
adc
cmp
sti
push
push
mov
jb
out
das
int
mov
mov
cdq
in
test
sub
retf
repnz
stc
xor
pop
sub
xor
mov
add
outs
xor
pmaddwd
xchg
jo
pop
js
imul
iret
or
stc
and
xor
dec
adc
mov
pushf
or
mov
xor
call
(bad)
lock
xchg
dec
sbb
ds
aaa
(bad)
pop
cmp
or
pop
jne
jmp
cmp
les
mov
mov
fwait
jge
or
mov
add
into
ins
and
shl
push
fwait
mov
xabort
xor
adc
sub
clc
mov
cmp
subps
mov
mov
adc
push
lods
mul
pop
rcr
pop
repnz
inc
out
out
dec
ds
or
dec
fwait
rcl
push
push
std
jb
aaa
sbb
inc
or
xor
fucomi
cmps
jl
mov
jb
or
lahf
sbb
sbb
adc
stos
mov
shr
mov
push
sub
jge
push
repz
movs
mov
push
sbb
or
xchg
jl
xor
jno
mov
sbb
sbb
aad
dec
fmul
sbb
fld
sub
popa
adc
fs
in
mov
pushf
sahf
mov
cmp
pop
fdiv
add
pop
addr16
data16
sbb
popf
nop
imul
or
push
mov
xchg
jmp
cli
sub
mov
cmp
and
dec
loope
(bad)
xor
mov
add
mov
movs
scas
cmps
mul
and
inc
lock
fmul
test
cld
adc
int
sbb
jno
push
pop
loop
aaa
vaesdeclast
ins
mov
xor
fimul
stc
add
inc
imul
movs
mov
test
mov
cmps
outs
push
xchg
sbb
cmp
into
cmc
mov
add
ret
or
push
pop
fsubrp
aad
push
sbb
idiv
xor
ss
std
rcr
out
ins
mov
sbb
std
inc
retf
mov
neg
cli
push
ja
jmp
xlat
fadd
jle
mov
dec
aad
adc
lahf
pop
loope
(bad)
aad
icebp
(bad)
je
dec
imul
pop
jno
jno
add
arpl
jmp
cmpxchg
pop
mov
lock
leave
pusha
mov
and
(bad)
fsub
mov
xlat
fcmovnu
mov
fild
stos
sbb
xor
int
xchg
xchg
ror
neg
in
pop
gs
jg
add
jno
fmul
aas
fdivp
sbb
cwde
dec
dec
xchg
jp
scas
bound
mov
repnz
lods
aaa
imul
stos
dec
inc
push
dec
enter
test
jg
mov
pop
fmul
in
pop
iret
cmp
cmp
(bad)
dec
dec
or
movs
lea
xor
jb
push
fnstcw
stc
popf
sbb
jbe
xchg
dec
lods
lods
fld
xor
sub
pusha
(bad)
cmp
popf
adc
inc
and
push
sahf
cmp
in
jecxz
lods
fidiv
ret
mov
out
mov
jmp
test
or
lods
iret
adc
mov
imul
xor
scas
stc
addr16
scas
pushf
aam
rcr
in
xchg
fimul
lods
sub
mov
mov
mov
popf
pushf
pop
xchg
sub
push
mov
mov
pop
add
fld
cmp
jmp
unpckhps
inc
adc
loopne
(bad)
es
or
sbb
mov
xchg
faddp
dec
dec
xor
test
dec
std
icebp
xlat
leave
bound
adc
imul
push
repnz
and
inc
fld
sub
mov
or
jmp
push
and
loopne
pop
loopne
cli
mov
sbb
sbb
imul
push
test
dec
push
xor
cld
repz
or
jns
gs
iret
(bad)
xor
inc
fidiv
(bad)
mov
out
in
dec
mov
push
or
add
shl
jle
fstp
and
mov
addr16
ins
les
fwait
sbb
je
sub
xchg
gs
test
retf
in
jo
fs
or
clc
shl
mov
dec
xor
aad
xchg
xor
and
add
pushf
outs
or
lahf
gs
mov
sub
gs
xchg
pop
xchg
(bad)
nop
push
xor
push
aaa
jbe
mov
mov
inc
stc
(bad)
ja
xor
cmp
ss
xor
cdq
xchg
out
lods
popa
mov
sub
mov
jp
xor
aam
das
mov
inc
fiadd
and
nop
repnz
xor
shl
dec
in
xchg
jbe
std
adc
dec
(bad)
sbb
push
xor
dec
or
lds
dec
mov
push
ins
add
dec
idiv
lods
xchg
xchg
std
pusha
sbb
test
mov
loopne
dec
pop
pop
add
imul
or
xchg
std
cmp
js
add
sbb
push
push
fisttp
inc
mov
and
mov
movs
inc
xor
xor
adc
mov
iret
add
es
push
cwde
das
int
jo
mov
leave
arpl
int
push
cmps
adc
add
push
ins
test
push
push
cmp
mov
gs
(bad)
jecxz
out
movs
adc
jle
jo
rcr
pop
pop
xchg
mov
add
mov
ja
iret
ins
push
scas
sub
in
(bad)
mov
xchg
mov
sti
mov
inc
add
dec
fwait
and
sub
mov
sbb
aas
push
mov
xchg
out
sahf
jl
dec
mov
mov
or
pop
retf
hlt
add
in
push
cmp
sub
es
(bad)
adc
fcomp
(bad)
xchg
mov
cmc
js
repz
dec
call
ror
hlt
cmp
add
int
add
xchg
sub
shl
mov
xchg
mov
jae
call
inc
(bad)
(bad)
push
pop
adc
pop
jo
stos
(bad)
mov
mov
in
sti
aad
push
sub
pop
fidivr
cs
cdq
jae
test
imul
mov
dec
loope
or
mov
retf
popa
mov
xor
cdq
xlat
sub
sbb
mov
mov
jmp
lock
aas
lock
mov
pop
(bad)
sbb
sub
pop
inc
adc
pop
(bad)
jmp
adc
dec
or
enter
pop
(bad)
outs
movs
sub
sub
cli
ins
mov
push
ror
sub
mov
sub
jge
int
or
pop
jns
jl
dec
mov
or
(bad)
mov
cmp
in
jns
gs
test
stos
fisubr
sub
xor
cli
dec
imul
loopne
fsubr
cmp
jbe
in
push
push
popa
sbb
pop
add
mov
outs
addr16
rcl
xor
cmps
push
dec
xor
movs
jns
idiv
xchg
pop
mov
cld
outs
icebp
xor
fisttp
mov
sahf
and
jno
outs
adc
mov
inc
call
cmps
jnp
cld
retfw
cmc
shr
xchg
sahf
push
cmps
fcom
frstor
mov
imul
mov
fwait
lock
retf
sub
repnz
or
jmp
fsubr
ins
mov
inc
test
adc
mov
pop
into
mov
mov
xor
popf
test
push
jmp
stos
stc
rol
inc
sub
test
repnz
in
scas
(bad)
mov
push
data16
add
jo
mov
jmp
mov
clc
leave
call
jne
xchg
jle
jb
pop
cs
cmps
(bad)
(bad)
xor
add
shl
mov
and
(bad)
imul
xor
cmp
cmc
data16
dec
add
and
mov
test
sbb
xor
dec
jl
sbb
mov
mov
fcmovnb
xor
cwde
popf
mov
int3
int3
dec
jmp
sub
dec
mov
movs
outs
cmps
(bad)
cmp
loop
add
int3
std
stos
mov
sbb
fs
pop
mov
jle
mov
cmp
xchg
fstp
movs
call
push
add
cmp
movs
lds
bound
loope
enter
pop
enter
adc
pop
nop
mov
and
dec
jle
pusha
jnp
cmp
push
rcl
and
fs
jb
in
inc
dec
jmp
mov
retf
aad
cmp
sub
dec
adc
call
mov
pusha
imul
and
inc
ret
add
inc
scas
jge
adc
xchg
add
test
pop
wrmsr
(bad)
repnz
sbb
call
out
dec
fisubr
jmp
(bad)
loopne
mov
mov
sar
iret
pop
mov
pushf
mov
ror
aam
sahf
inc
leave
repnz
sbb
jecxz
mov
mov
inc
jge
enter
lahf
sahf
cmp
fbstp
inc
adc
ss
add
test
in
mov
les
fisubr
or
sti
or
dec
fisttp
and
adc
mov
inc
sbb
cmp
jmp
fisubr
test
push
das
cwde
or
inc
fs
inc
mov
or
outs
(bad)
push
pusha
xchg
jno
push
loope
inc
pop
xor
push
jmp
pushf
cwde
sbb
adc
(bad)
mov
jle
push
dec
sbb
arpl
push
mov
jne
pop
and
lds
push
js
jp
cmp
ss
loop
cmp
lock
add
jecxz
cmps
cmp
push
add
and
cmp
or
jnp
pop
xor
into
mov
inc
mov
xchg
mov
lock
pushf
mov
test
test
cwde
jp
jbe
dec
push
mov
ss
inc
leave
shl
movs
cmps
mov
daa
ret
add
mov
std
jp
hlt
cmp
out
dec
(bad)
lock
mov
jnp
or
shr
mov
inc
fwait
call
cmp
mov
push
inc
mov
aaa
not
xor
repnz
aam
loop
inc
scas
push
enter
arpl
dec
jle
or
lods
mov
aas
repnz
sub
or
loope
and
adc
(bad)
in
adc
push
outs
and
sbb
inc
rol
lahf
in
inc
mov
adc
repz
leave
repz
arpl
or
ins
ja
into
ins
scas
lock
lods
hlt
retf
xor
dec
or
jnp
push
and
fild
xor
jbe
cdq
adc
jp
sub
adc
hlt
and
add
and
sbb
dec
cmovnp
lea
call
jmp
cli
cmc
pop
and
shr
inc
cdq
dec
pop
mov
cmp
inc
fidivr
cmps
cmp
call
pop
cmc
dec
pop
leave
pop
mov
test
xor
inc
scas
call
and
stc
out
mov
sub
into
push
pushf
mov
sbb
adc
not
repnz
(bad)
mov
lods
mov
sar
retf
or
sti
pop
jbe
repz
int
retf
add
hlt
and
mov
add
call
add
jecxz
retf
mov
std
repnz
and
sar
push
dec
pop
cmp
(bad)
clc
loopne
hlt
mov
inc
inc
into
(bad)
or
test
fisttp
cmc
cdq
jae
aaa
icebp
mov
call
dec
loope
faddp
(bad)
mov
mov
popa
mov
dec
mul
and
cmps
out
xchg
inc
mov
pop
cmp
dec
lahf
mov
outs
mov
ficom
stos
adc
mov
adc
or
xchg
jmp
add
inc
ds
cmp
xor
stos
ss
cwde
jmp
sti
push
mov
jg
les
mov
mov
add
add
jmp
fisttp
and
je
push
enter
clc
and
jmp
sbb
add
fcom
dec
popa
sub
movs
push
pop
ror
mov
fnstcw
hlt
mov
test
cmp
les
xchg
adc
cmp
inc
hlt
test
cwde
loopne
rcr
(bad)
or
loopne
out
jno
jns
xor
jae
ds
pop
xlat
add
pop
lahf
clc
push
cmc
call
mov
popf
push
or
adc
or
xchg
inc
mov
repnz
sbb
dec
ins
jmp
push
jmp
add
ins
push
(bad)
cmp
mov
push
mov
sub
inc
pop
retf
or
cmovge
ret
cdq
jns
aad
pop
mov
xor
mov
and
nop
mul
sbb
sbb
pusha
imul
mov
jp
pushf
or
push
inc
cdq
pop
(bad)
cdq
das
xchg
push
push
pop
hlt
test
fstp
jne
popa
shl
and
mov
push
sbb
std
clc
add
mov
cmovbe
dec
mov
loop
xor
imul
cmp
into
(bad)
repnz
fsub
xchg
pop
sbb
push
test
xchg
and
or
mov
imul
es
enter
std
sbb
mov
sub
adc
das
mov
lock
push
loope
xrelease
stos
jle
ds
lahf
fdiv
pushf
(bad)
les
jmp
push
fstp
pop
pusha
and
jnp
imul
cwde
cmp
and
mov
mov
cmps
es
rcl
mov
xchg
ret
adc
sbb
aam
sbb
inc
lock
cli
(bad)
mov
sub
ds
rol
rcr
dec
das
push
push
add
icebp
outs
leavew
jmp
pop
jo
push
add
in
shr
out
fbld
imul
sub
cmp
popf
das
cdq
pop
addr16
ja
mul
add
loopne
int3
stos
xlat
outs
sbb
add
cmps
pop
sar
or
adc
jg
push
ret
and
out
jns
rol
(bad)
jmp
test
movs
call
push
xchg
popa
pop
add
xchg
in
xchg
into
mov
pop
jmp
and
inc
adc
sub
(bad)
adc
cmp
xchg
pop
mov
pop
mov
shl
and
in
mov
adc
and
test
adc
xchg
mov
mov
or
pusha
pop
xchg
mov
and
jno
xlat
and
fmulp
mov
jmp
dec
loop
and
retf
aam
inc
ss
stos
fsub
lds
xor
lods
jmp
pop
or
ins
mov
(bad)
test
mov
adc
sbb
pop
xchg
ror
pop
cli
or
and
stc
pop
js
fs
nop
in
and
stos
leave
xor
pop
xlat
cmp
aam
jmp
fmul
dec
mov
inc
dec
gs
cdq
mov
mov
add
ds
call
shl
xchg
sub
rcl
(bad)
push
pushf
call
(bad)
mov
inc
iret
daa
mov
ret
mov
fcomp
mov
adc
mov
out
adc
data16
movs
std
aaa
cmps
movq
std
sub
rol
jmp
mov
xchg
or
lods
out
outs
inc
sub
aaa
daa
xor
retf
or
adc
or
xor
call
cdq
adc
sub
inc
pop
ja
xchg
idiv
ja
cmp
push
push
pop
(bad)
sbb
lea
cmps
xor
jle
push
neg
cmp
or
xchg
sub
scas
jns
jne
cmc
pop
addr16
sbb
lahf
sub
push
fiadd
pusha
int3
pop
push
(bad)
ins
int
pop
pop
sub
push
aam
aam
adc
jo
sbb
clc
in
xor
mov
dec
ins
shl
enterw
ror
adc
mov
add
jge
xor
and
cmp
mov
jp
mov
pop
cwde
sub
adc
mov
int3
fmul
adc
daa
add
retf
dec
mov
xchg
lahf
fisttp
(bad)
push
in
add
mov
in
cwde
sar
mov
and
pop
xlat
or
add
xlat
sub
fwait
popf
pop
jg
pop
iret
add
xchg
sub
jmp
push
adc
dec
repz
push
adc
outs
cmps
dec
mov
xchg
pushf
inc
clc
adc
loop
mov
inc
adc
jno
xor
es
jmp
pusha
jne
(bad)
push
sbb
lahf
push
sbb
clc
sub
sbb
mov
ror
icebp
ror
cmp
sbb
sub
shl
fisub
fidiv
in
pop
pusha
vpmullw
lock
or
add
fiadd
inc
ins
sbb
xchg
push
arpl
ftst
sbb
sbb
push
adc
mov
sbb
adc
jbe
jbe
jmp
lods
dec
or
repnz
in
data16
not
mov
inc
es
out
mov
je
adc
rcl
jae
clc
lods
adc
or
popa
dec
les
xor
pop
repz
pop
xchg
ret
adc
ret
les
std
adc
addr16
cmp
sub
shl
jle
shl
push
xchg
sahf
shr
add
lahf
sub
mov
aam
shl
mov
sub
retf
stos
pop
xor
push
cmps
and
imul
in
mov
rcl
dec
addr16
(bad)
mov
popf
cld
add
cli
lods
ins
pop
fidiv
ja
rcl
call
jge
and
add
sub
pop
je
pop
adc
or
call
jbe
dec
mov
mov
out
pop
mov
adc
jns
(bad)
pop
cdq
cld
adc
loopne
cmps
out
imul
add
retf
repnz
cs
addr16
xchg
(bad)
sbb
repnz
outs
mov
lods
sbb
dec
hlt
adc
cli
jmp
or
mov
and
sbb
push
jmp
mov
xor
dec
fs
das
xchg
mov
mov
arpl
sbb
mov
sbb
pop
aad
retf
sub
addr16
pop
push
xchg
jl
outs
cmp
pop
inc
enter
mov
sbb
jnp
add
pushf
pop
cmc
fwait
pop
or
lods
mov
push
sub
push
jmp
icebp
jmp
mov
cmp
imul
cli
ss
outs
loop
jb
inc
cmp
leave
cli
xchg
xchg
inc
out
sbb
nop
ins
rcl
mov
sub
and
pop
mov
mov
xchg
inc
dec
test
nop
or
bound
xor
sar
arpl
adc
inc
mov
aas
jne
test
outs
and
div
mov
xor
xor
enter
pop
std
(bad)
je
sub
sbb
(bad)
pavgw
pop
cmp
push
mov
push
ds
pop
(bad)
out
push
mov
aam
cmp
jecxz
xor
xor
jbe
pop
(bad)
mov
cwde
xchg
rcr
xor
cmp
push
(bad)
mov
aam
and
adc
push
ss
xchg
mov
outs
in
shl
in
pop
adc
cli
jno
sbb
cmps
mov
cmp
jl
add
mov
mov
add
xlat
mov
xlat
bswap
jae
jmp
adc
cmp
sub
add
inc
inc
adc
or
jge
daa
and
ins
scas
movs
cmp
shl
(bad)
(bad)
pop
jmp
dec
cmps
scas
inc
es
iret
jne
sbb
lods
jp
sbb
mov
push
sbb
add
fxch
mov
hlt
je
fidivr
xchg
in
retf
xchg
scas
addr16
je
pop
xor
jne
rcr
cmp
ficomp
rcl
xchg
fiadd
pushf
dec
nop
mov
mov
inc
shl
int3
rcl
adc
(bad)
and
sbb
sti
adc
push
xor
inc
lods
pop
sub
int3
ret
ja
inc
pusha
hlt
cwde
cs
clc
sti
jmp
ds
dec
cmc
adc
out
test
call
jns
xor
lods
imul
sar
out
loop
xor
and
out
add
sub
js
sub
in
sbb
pop
cmp
cmps
xor
movs
mov
addr16
and
pop
and
test
popa
push
jae
adc
and
adc
dec
int
int
cmps
mov
inc
or
jne
and
lods
out
xor
(bad)
mov
add
test
ret
inc
add
fwait
and
or
cmps
call
mov
fisub
push
addr16
mov
inc
loope
in
jnp
neg
add
idiv
aaa
jg
gs
inc
daa
in
xor
mov
mov
ins
mov
or
push
icebp
call
ds
stos
jbe
std
adc
aam
je
cmp
xlat
xchg
push
mov
jmp
adc
add
mov
pop
xchg
outs
ss
push
test
jnp
add
mov
sbb
fisttp
addr16
xchg
mov
add
in
sbb
jo
in
push
mov
inc
adc
jg
hlt
push
test
jge
cwde
scas
call
jle
sbb
jecxz
cmps
shr
sub
int
jnp
aad
jne
jl
or
cmc
(bad)
cmc
popa
or
mov
out
rcr
repnz
sbb
sar
nop
les
mov
xchg
pop
mov
shl
xor
ins
daa
jmp
in
fstp
out
dec
mov
in
ror
daa
ja
aam
and
pop
xchg
sbb
pop
je
cmps
and
dec
idiv
dec
lea
dec
lods
pop
hlt
pushf
sbb
daa
in
pushf
pushf
fsub
xchg
inc
ret
ins
in
cli
mov
aas
pusha
xchg
or
mov
jecxz
sub
cmc
xchg
pop
push
out
mov
mov
mov
(bad)
sub
cmp
faddp
(bad)
mov
xchg
mov
sbb
inc
sub
mov
add
data16
ins
mov
mov
das
stos
xor
jno
out
mov
pop
sub
fwait
adc
lock
stos
mov
mov
(bad)
pop
mov
out
jne
mov
jmp
call
movs
dec
daa
adc
push
pop
pop
adc
ds
or
push
or
dec
je
mov
add
sub
mov
cld
aaa
add
stos
add
push
inc
cdq
add
fs
sub
adc
rcr
call
icebp
mov
mov
enter
fs
sub
xchg
adc
shl
(bad)
rol
push
pop
neg
xor
stc
dec
in
dec
nop
and
jo
jns
movq
mov
sbb
cmp
cmps
(bad)
in
inc
jns
and
clc
pop
lea
sub
sbb
dec
cmps
ror
jbe
(bad)
out
and
out
or
cmp
jno
aas
(bad)
mov
cmp
mov
mov
sub
or
sub
retf
mov
iret
mov
ins
loopne
popf
ret
inc
cmovle
jge
adc
cmp
dec
mov
cmp
ret
mov
mov
mov
mov
adc
adc
dec
cld
add
cmp
outs
popa
mov
and
fidivr
repz
mov
cmps
out
or
and
pop
fadd
jae
pop
out
into
sahf
inc
ja
mov
pop
enter
push
cmp
adc
push
iret
shl
sbb
add
lea
jb
xor
rol
inc
pop
sub
xchg
cld
and
cmp
mov
(bad)
out
idiv
arpl
fsubr
pusha
dec
cli
dec
adc
shl
and
out
pop
sbb
and
mov
aad
pop
scas
mov
or
cmp
movs
add
cmp
int3
les
cmps
int3
and
inc
xor
test
jbe
into
loop
sbb
(bad)
add
repz
sar
jnp
fdivr
ficom
mov
fldenv
jmp
jmp
into
scas
idiv
adc
loopne
push
stos
inc
mov
(bad)
aas
sub
hlt
fisttp
pop
fisttp
sahf
pop
push
das
mov
jmp
movs
(bad)
pop
add
in
int
pop
(bad)
pop
(bad)
enter
ret
(bad)
and
inc
jecxz
scas
out
clc
xchg
aad
and
sbb
pop
loop
popf
daa
push
movs
sub
mov
and
dec
add
jno
test
xor
icebp
sbb
call
add
mov
mov
fcomp
pusha
in
neg
test
cdq
js
pop
and
xchg
xor
shl
(bad)
sbb
push
fs
stos
xor
add
stos
ja
adc
inc
pop
std
ins
aaa
or
sub
jp
pop
pop
scas
lahf
xor
fiadd
push
in
inc
int
dec
sbb
and
push
push
gs
pop
movs
(bad)
loopne
sti
jg
std
add
sbb
nop
push
pop
cmp
or
mov
aam
daa
mov
jge
mov
adc
or
sti
test
shr
xor
pusha
sbb
lahf
ds
mov
arpl
ficom
aaa
mov
cli
jns
dec
mov
inc
call
stos
push
(bad)
repz
or
dec
outs
inc
sbb
ret
and
mov
sbb
sbb
lea
lock
cs
jno
movntps
pop
in
mov
sub
add
arpl
mov
mov
in
mov
pop
imul
xor
sub
dec
xor
xor
mov
mov
or
pop
jle
fs
pop
push
mov
cld
mov
xor
jne
loop
or
xor
add
xor
into
ror
mov
mov
jecxz
xor
in
jne
hlt
and
jb
pop
jb
addr16
and
add
jg
(bad)
jle
repnz
mov
gs
xor
and
adc
mov
or
mov
mov
lods
cmps
in
and
fisub
shl
aad
jge
movs
pop
and
sub
mov
adc
push
test
sar
push
out
xor
rcl
mov
and
sub
rol
pop
stos
push
ret
push
(bad)
mul
call
imul
dec
test
mov
add
jmp
cmps
cli
push
cmps
pop
and
xor
movs
nop
mov
sbb
in
popf
pop
or
mov
shr
sub
repz
inc
jmp
iret
mov
cwde
imul
cmp
loope
je
int
cdq
iret
cmp
cmps
xlat
adc
sbb
cwde
inc
add
leave
mov
retf
push
inc
push
mov
sub
(bad)
call
outs
arpl
getsec
xor
into
std
jo
add
jbe
push
jnp
xchg
icebp
test
les
push
xchg
add
lds
loopne
dec
dec
jnp
xlat
lock
idiv
int
arpl
push
ja
pop
xor
add
add
shl
mov
adc
movs
test
inc
dec
dec
pop
push
aad
jmp
sub
test
and
mov
jp
sub
popa
add
push
enter
adc
loop
or
dec
out
fst
or
movs
bound
add
inc
ins
fstp
bound
adc
push
or
adc
sbb
dec
xchg
sub
lods
cmps
ins
in
out
es
psadbw
(bad)
pop
nop
inc
push
or
jne
cmp
jmp
pop
fcmovnu
push
pop
cmp
movs
nop
sub
and
push
cmp
clc
pop
fadd
and
sbb
mov
ins
fistp
imul
in
adc
cmp
or
(bad)
(bad)
jecxz
inc
imul
mov
xchg
xor
icebp
push
outs
inc
popf
dec
int3
sub
dec
adc
jl
ret
push
(bad)
pusha
mov
pop
adc
test
test
and
aas
(bad)
movs
jae
(bad)
push
lahf
adc
xchg
dec
in
sbb
xlat
loopne
and
jo
in
or
leave
push
mov
ins
bound
sub
cdq
(bad)
jecxz
cli
mov
sbb
nop
pop
inc
dec
int3
add
sbb
inc
cmp
mov
sub
add
sti
cmp
mov
and
scas
cmps
(bad)
xor
dec
fs
adc
ins
nop
neg
inc
or
mov
adc
lods
cmp
aam
shr
pop
mov
test
fstp
xchg
loope
dec
push
popa
jno
sub
sbb
sub
fcmovnu
cmp
jbe
xor
xchg
mov
shr
push
cmp
push
push
mov
shr
dec
or
push
fnsave
pop
aaa
aaa
outs
and
inc
xlat
out
lea
pop
lock
jne
mov
cld
push
adc
mov
sub
inc
push
int3
popa
fbstp
loope
(bad)
push
out
arpl
out
add
mov
mov
(bad)
jbe
pop
mov
pop
dec
sbb
setle
cdq
cld
inc
jmp
add
xchg
pop
sub
and
jecxz
and
or
gs
hlt
movs
dec
cld
(bad)
sub
(bad)
out
mov
mov
inc
push
bound
scas
pop
push
pop
lods
jmp
pop
call
xchg
jge
mov
fcomp
jne
retf
xor
es
and
ins
inc
and
cmps
jmp
dec
pop
and
jbe
stc
cld
push
xor
mov
dec
inc
adc
inc
idiv
xor
outs
arpl
mov
cmp
and
jb
xchg
fdivr
or
xor
leave
pop
dec
xor
inc
cmp
push
sahf
push
mov
es
aam
sbb
push
or
inc
scas
les
push
dec
jo
icebp
xlat
cld
inc
mov
das
inc
cmp
daa
(bad)
ds
pop
retf
dec
push
test
(bad)
enter
mov
xor
es
xor
adc
dec
pop
mov
fucom
add
mov
out
test
cdq
xchg
xchg
cdq
iret
dec
xor
mov
scas
cld
cmp
xchg
add
(bad)
es
iret
cmps
xchg
out
retf
pop
out
push
mov
and
dec
lods
cdq
outs
ret
mov
cld
(bad)
movs
push
pushf
xchg
mov
inc
adc
cld
stos
es
jmp
inc
dec
push
mov
loope
pop
mov
xor
jmp
cmps
or
adc
cmc
ins
sti
push
push
pop
jge
inc
lods
nop
or
test
push
jbe
dec
jecxz
jmp
inc
xchg
mov
dec
sbb
cmps
scas
jnp
sti
xor
sbb
sub
or
fdivr
cmps
fs
lds
call
mov
cli
stos
movs
jns
ror
push
xor
push
cli
aas
test
cmps
test
xchg
mov
sbb
fdiv
out
fwait
pop
fwait
(bad)
and
xor
int3
xor
add
mov
push
lds
lods
daa
mov
push
and
push
mov
inc
jns
imul
fistp
je
pop
mov
xor
cmp
pop
stos
xchg
xor
sbb
fimul
push
dec
sbb
push
shr
xor
sbb
outs
ins
mov
out
xor
jge
jg
jp
inc
aas
ret
xchg
shl
mov
out
push
sbb
or
es
loop
(bad)
bound
mov
and
rol
(bad)
cmp
call
loopne
pop
xchg
icebp
ret
cmp
push
xchg
ins
mov
add
mov
inc
pop
sahf
sti
int3
imul
neg
jecxz
jg
in
cmp
adc
sub
pop
cmp
mov
mov
or
fwait
add
lds
movs
sub
or
jmp
fdivr
push
mov
aad
stc
lods
sahf
(bad)
in
dec
or
rcr
in
pop
xchg
fwait
and
or
imul
leave
mov
or
pop
jmp
push
xchg
fdivr
xlat
dec
mov
jle
test
xor
int3
or
jno
retf
adc
xchg
mov
xchg
pop
(bad)
lock
inc
dec
sbb
sbb
(bad)
(bad)
adc
jne
clc
scas
loope
icebp
cwde
push
push
or
scas
sub
fwait
mov
adc
sub
dec
push
call
or
and
jge
dec
aas
mov
mov
push
ss
(bad)
out
stos
ret
mov
out
imul
jecxz
test
and
sar
xor
loop
jmp
cmp
sti
pop
pop
cld
iret
dec
adc
aam
dec
aas
cs
mov
push
xor
fldenv
sub
or
stos
lahf
imul
mov
jmp
(bad)
adc
jl
xor
adc
push
mov
leave
sub
fadd
mov
add
mov
jle
pop
cli
sbb
outs
out
jp
scas
call
add
imul
icebp
test
inc
ins
sti
adc
pop
or
out
xchg
repnz
test
push
pop
push
mov
push
test
sbb
jmp
inc
fild
pop
jae
mov
imul
mov
test
aaa
mov
inc
or
and
or
std
jecxz
xchg
mov
retf
push
ret
loopne
das
jmp
jne
sub
test
mov
cmp
sub
add
add
jp
mov
jns
inc
fldenv
cmp
sub
gs
dec
xor
pop
repz
xchg
cwde
cmps
arpl
fbld
jl
pop
aam
pop
sub
dec
mov
adc
call
sbb
shl
dec
inc
out
sub
xchg
ror
adc
xor
(bad)
test
adc
in
leave
pop
pusha
inc
dec
pop
or
xchg
push
or
mov
sbb
pop
pop
xlat
hlt
mov
retf
fild
adc
adc
fwait
mov
not
nop
unpckhps
sbb
ins
addr16
cmps
gs
cwde
mov
pop
add
xchg
add
outs
shl
in
push
push
inc
adc
out
fsub
enter
push
pushf
loopne
push
add
hlt
push
movs
and
fsubr
fs
mov
out
add
jmp
scas
popf
bound
xchg
das
dec
mov
dec
daa
jne
jl
(bad)
fsubp
and
lock
inc
jle
(bad)
sar
(bad)
mov
std
icebp
dec
jnp
lea
stc
xchg
out
ret
jne
push
cmp
mov
lock
imul
ja
lock
jae
xlat
inc
jb
cld
pop
xor
pop
or
jnp
test
gs
pop
je
aaa
retf
xor
push
cmc
scas
and
in
and
and
xlat
mov
jl
das
dec
es
push
jg
rol
movs
cmc
ret
bound
stc
repz
or
cmp
sub
movs
in
hlt
xchg
jp
outs
dec
push
mov
stos
lods
aaa
leave
mov
xchg
mov
call
inc
cmps
cwde
idiv
xor
mov
mov
xor
js
addr16
sar
cmp
outs
mov
test
in
and
xor
cli
sub
jmp
mov
outs
aad
push
inc
hlt
xchg
movs
mov
aaa
ss
xchg
out
or
loop
cs
inc
jbe
pop
ins
ja
or
movs
stc
pop
push
mul
jne
push
(bad)
cdq
dec
loopne
inc
mov
mov
xor
pop
fcom
daa
dec
adc
ror
fs
test
test
enter
jge
fdivrp
or
mov
sub
mov
mov
stos
mov
imul
sub
inc
outs
mov
add
cld
imul
push
ret
ins
cmc
lds
mov
mov
xor
add
mov
push
jmp
aam
(bad)
jnp
in
push
dec
jnp
jge
enter
mov
cmp
shr
scas
xchg
xchg
jl
push
(bad)
outs
retf
mov
add
loopne
test
(bad)
jo
mul
jle
push
xchg
daa
xlat
nop
fistp
in
lods
mov
repz
sub
fsubp
hlt
inc
xor
push
fiadd
adc
retf
fwait
in
daa
adc
xchg
mov
fidiv
push
mov
setbe
cmc
or
out
inc
adc
add
js
xchg
push
iret
sahf
adc
or
outs
cmps
xchg
retf
or
in
mov
out
shr
popa
lods
in
xchg
cmp
mov
adc
out
test
sbb
clc
mov
ret
and
mov
into
enter
inc
xchg
pop
sbb
rcr
and
ss
or
sub
sbb
sub
fimul
sbb
daa
aaa
push
out
mov
fnsave
inc
mov
lds
stos
pop
fisub
xor
retf
nop
lock
pop
pop
pusha
dec
lds
push
jle
sub
gs
out
mov
lea
cmp
mov
out
xor
pop
fs
inc
cs
int3
and
xchg
push
fsub
inc
stc
pop
sub
gs
mov
mov
imul
stos
add
retf
lods
adc
or
dec
xchg
(bad)
loop
and
xor
dec
aam
push
(bad)
xchg
inc
inc
mov
loop
push
popa
adc
inc
in
loope
stc
lds
arpl
mov
ins
mov
add
in
in
dec
test
mov
into
shr
pop
out
add
push
sbb
out
adc
pusha
add
leave
imul
jno
ja
push
jge
jl
adc
adc
xor
ret
pop
cmp
pop
push
lahf
mov
dec
fld
add
jmp
sbb
out
mov
nop
sbb
jb
push
mov
sub
sahf
add
retf
lods
push
dec
gs
ss
add
xor
ret
lea
es
push
sub
cli
repnz
push
pop
ret
sub
inc
nop
xor
cmp
mov
fld
push
imul
or
mov
aas
push
xor
cmp
mov
(bad)
push
mov
retf
or
pop
xchg
(bad)
pop
mov
push
xor
jne
jg
into
fnstsw
add
mov
loope
daa
sar
(bad)
xchg
in
sbb
fsubr
mov
lea
xor
outs
test
xor
adc
fisttp
push
das
shl
xchg
fcmovne
arpl
shld
jb
retf
or
rcr
mov
data16
call
ins
mov
ja
mov
(bad)
mov
inc
addr16
inc
outs
sub
dec
add
jl
sbb
sbb
mov
aaa
sub
or
int
out
sbb
sbb
call
sbb
out
push
xor
pop
xor
push
pop
jl
push
ret
shl
test
hlt
in
iret
sahf
mov
jecxz
es
xor
jae
or
lods
mov
stos
jb
inc
adc
sti
or
je
out
fsub
push
lods
lods
mov
popa
cwde
(bad)
aam
imul
sub
out
shr
icebp
pop
lods
rol
lock
or
sahf
pop
or
add
jg
in
xchg
bound
pop
mov
retf
sbb
mov
adc
xchg
jne
add
mov
sar
mov
sub
cs
adc
stos
and
dec
xor
ret
cmp
mov
mov
shr
fild
jnp
push
in
retf
enter
mov
dec
mov
mov
movs
stc
repz
mov
cmp
cli
lock
pop
loopne
enter
push
pop
and
hlt
int3
popa
and
xor
scas
fisubr
adc
fsub
cmp
jns
xchg
fcomp
pusha
arpl
mov
push
test
push
jo
dec
push
imul
add
sub
inc
lods
(bad)
cmp
cmp
adc
and
mov
xor
push
sub
cmp
mov
dec
xor
(bad)
xchg
dec
fdivp
hlt
xlat
inc
adc
mov
pushf
push
ds
push
dec
or
and
mov
add
cmps
and
add
scas
pop
mov
inc
cmps
pop
cmps
das
ins
clc
dec
or
dec
jmp
cli
fiadd
cmps
(bad)
lods
fwait
(bad)
lahf
xchg
mov
or
pusha
cs
fisttp
jmp
sbb
pslld
push
shl
add
adc
(bad)
cld
jmp
push
lea
mov
pop
jecxz
fchs
adc
dec
or
sbb
out
mov
lods
in
aam
in
mov
mov
pop
mov
clc
bound
or
sub
add
aam
cmp
add
jl
dec
mov
outs
outs
test
mov
push
mov
xchg
shl
and
inc
xor
cs
and
mov
pop
mov
arpl
cld
fnstenv
mov
cmp
loope
pop
add
jb
jb
push
dec
popf
sahf
cdq
(bad)
out
mov
stos
jmp
dec
xor
add
and
jmp
retf
xchg
loopne
inc
pop
xchg
cwde
aad
cwde
push
add
int3
adc
mov
adc
or
add
sbb
jne
int
xchg
pop
(bad)
stc
lds
fldln2
hlt
shl
add
out
iret
popa
sbb
js
add
mov
mov
jp
cmps
sbb
xor
push
mov
cmp
xchg
xchg
lods
(bad)
in
jmp
pop
cmp
fidiv
pop
sahf
xchg
arpl
les
fs
je
ja
and
mov
(bad)
sub
push
jne
sti
or
call
jg
xor
add
push
sbb
jmp
test
adc
xor
add
inc
call
cwde
fidiv
(bad)
outs
popf
fs
xchg
cmp
xchg
jns
je
imul
std
mov
leave
fwait
sbb
cmove
jl
lahf
sti
cmp
in
or
sub
dec
dec
push
mov
inc
add
mov
gs
sub
inc
mov
mov
sbb
mov
out
sbb
iret
mov
or
or
dec
aaa
in
sub
sub
sbb
and
dec
sub
add
sub
ds
adc
inc
or
arpl
jne
(bad)
jne
cmp
jmp
stc
enter
sbb
adc
mov
cmps
dec
pop
and
daa
imul
mov
sti
stos
push
dec
(bad)
shl
mov
not
adc
jo
ror
push
in
pop
outs
pop
stc
pop
sbb
repnz
loope
or
out
(bad)
mov
ret
jnp
dec
(bad)
cmp
mov
jnp
pusha
push
sbb
pusha
sahf
icebp
xor
inc
test
pop
sbb
rcl
jo
inc
ja
adc
push
lods
(bad)
adc
mov
xchg
sti
mov
clc
(bad)
cmp
jo
stc
daa
or
cli
(bad)
icebp
sub
ficom
ss
out
scas
xchg
xchg
jns
push
into
ds
std
and
mov
test
cmc
xlat
xchg
mov
pop
or
loope
daa
sub
xchg
xor
sbb
inc
mov
sub
icebp
enter
aaa
mov
sub
and
scas
jb
mov
xchg
adc
in
sbb
xchg
out
and
jmp
cmp
jp
je
int3
enter
jecxz
enter
inc
retf
pop
call
out
ins
les
push
fwait
mov
sbb
repnz
movs
mov
in
nop
mov
inc
retf
and
bound
sar
stc
pop
in
mov
push
jnp
test
mov
dec
sbb
jle
retf
jle
jp
push
pusha
push
jecxz
mov
pop
retfw
sub
xchg
repz
mov
mov
push
cmp
mov
xchg
mov
js
retf
pushf
mov
jp
pusha
mov
pop
rol
ret
gs
lods
rcl
mov
xchg
cmc
ins
dec
adc
pushf
pop
cmps
push
cli
and
rcr
fdivr
enter
xor
aaa
(bad)
aad
js
cmp
mov
sbb
push
nop
and
rcl
and
(bad)
jp
pop
jl
sub
fnstsw
and
jle
pop
or
jg
jge
push
enter
stos
xor
es
sbb
addr16
imul
sub
cmp
fdiv
xor
cmps
adc
pop
repz
or
pop
add
dec
jecxz
jnp
jnp
jecxz
pop
or
jecxz
sub
iret
ja
push
xchg
sbb
jnp
and
imul
inc
xor
pop
pop
stc
imul
dec
pusha
add
and
jae
popa
pop
mov
cmps
mov
call
or
adc
stos
sbb
dec
mov
(bad)
inc
sti
mov
stc
pop
xchg
sub
sbb
mov
aam
or
adc
and
mov
call
aad
xchg
xlat
jne
outs
jecxz
sbb
cmp
in
jle
cli
test
outs
cmp
bound
or
out
lock
or
fbstp
leave
out
cmp
and
dec
loop
xor
dec
add
out
mov
pop
arpl
clc
push
mov
add
cmp
xor
test
add
movs
mov
mov
inc
mov
(bad)
or
fs
inc
dec
xor
fwait
mov
int
outs
pop
pop
mov
ja
jno
add
or
fbstp
aam
scas
add
in
xor
mov
jbe
bound
jns
cmps
add
cld
mov
cmc
pop
dec
idiv
mov
imul
adc
jl
call
test
lods
out
je
jmp
mov
mov
adc
push
mov
iret
dec
call
pop
sub
and
ins
out
add
lock
dec
jle
xor
dec
(bad)
ret
jbe
std
and
push
test
dec
aaa
mov
fist
xchg
pop
out
adc
pushf
mov
push
fcomp
out
push
es
in
jno
xchg
int
and
test
push
mov
ss
test
cmp
out
pop
setle
or
mov
mov
dec
and
ins
adc
inc
loope
lea
xchg
xor
imul
cmc
xor
fsub
or
stc
xlat
pop
rcr
cli
mov
test
push
adc
mov
in
inc
dec
mov
mov
pop
(bad)
frstor
ins
fisubr
fs
and
test
das
test
jno
pop
sti
cld
stc
lods
sub
lahf
xchg
repz
ds
pop
cli
ds
cmp
pop
xor
inc
adc
pusha
push
mov
sub
(bad)
mov
sub
adc
jnp
lahf
mov
arpl
sahf
push
stos
stos
(bad)
loopne
ss
pop
sbb
jns
retf
pop
scas
mov
push
stc
push
mov
adc
sub
(bad)
arpl
out
and
xlat
mov
push
dec
cli
jmp
and
in
test
sahf
pop
bound
sbb
stc
ret
jle
xacquire
inc
cmp
mov
mov
cmp
inc
jmp
xlat
int3
icebp
push
xor
sbb
mov
movs
data16
aam
bound
pop
outs
adc
push
mov
push
mov
lods
pop
out
xor
xor
adc
ds
addr16
scas
ret
mov
cld
mov
mov
test
pop
ret
xor
mov
push
daa
scas
fsub
psllq
xor
xchg
adc
and
shl
xor
mov
dec
cmc
cmps
shl
rol
pop
add
sub
and
push
jg
xor
jo
and
cld
in
pop
rol
je
sbb
imul
mov
fs
mov
jne
ficomp
call
pop
lahf
sub
xor
cli
and
dec
clc
cmp
adc
pop
adc
bound
jmp
mov
sbb
pop
fdivrp
and
adc
and
inc
xchg
dec
loop
jae
out
js
call
lods
or
leave
ror
js
jmp
adc
sub
clc
(bad)
push
movs
(bad)
mov
xor
dec
cmp
and
mov
push
or
(bad)
loop
xor
adc
mov
mov
or
arpl
mov
movs
cdq
jecxz
inc
jo
push
mov
loope
and
mov
sub
pop
jmp
jo
push
movs
or
push
aas
xchg
adc
cmc
sar
inc
add
lahf
shl
add
sub
pop
repnz
xor
repz
lahf
dec
fist
lea
iret
xor
fwait
loop
mov
pop
mov
push
cdq
fwait
jp
push
pop
loope
or
xor
ins
jbe
jnp
add
es
add
pop
pop
sub
xor
pop
adc
test
or
or
pusha
adc
sub
mov
retf
aad
lahf
sub
int3
adc
sahf
adc
pop
inc
ds
mov
adc
ss
xchg
xchg
xchg
lods
into
adc
mov
iret
push
enter
popf
shr
push
jl
cmp
jmp
xchg
xor
cmp
sahf
loopne
out
dec
xlat
shl
xor
div
out
daa
jl
jl
dec
imul
je
fisttp
sbb
ficom
lahf
jp
xchg
add
cwde
push
in
cmp
pop
cmp
imul
in
inc
or
jnp
sub
loope
movs
mov
sub
pushf
xor
inc
mov
xor
test
test
jle
dec
fdiv
mov
test
sub
cmc
or
ret
pop
neg
jg
jno
sahf
dec
les
(bad)
cmp
fcomp
add
es
push
xor
jp
push
loopne
and
jbe
les
push
xchg
mov
sub
cld
out
js
scas
lds
fadd
add
test
cmps
pop
fild
sub
fidivr
mov
xor
pop
jle
sub
and
cmp
mov
push
inc
mov
pop
inc
jl
in
mov
lea
mov
jp
std
jae
sub
xchg
lods
jmp
mov
dec
fidiv
(bad)
test
adc
or
hlt
ja
lods
cmp
jg
(bad)
sub
jmp
std
inc
pop
mov
add
fwait
pop
mov
cmps
rol
adc
jnp
scas
mov
inc
push
mov
jmp
or
and
or
(bad)
mov
mov
pop
sbb
push
movs
cmp
add
push
jecxz
rol
fdiv
loop
dec
dec
add
fcomp
sub
loop
test
hlt
stc
dec
(bad)
test
mov
push
popf
outs
jno
stos
pusha
and
sub
dec
icebp
fs
hlt
xor
jl
push
mov
jns
movs
jo
shl
into
cmps
sti
fadd
test
mov
outs
jae
cld
cmp
cld
sti
cli
inc
je
xor
or
cld
dec
(bad)
and
scas
jns
movs
jmp
and
movs
sub
add
psrad
or
jae
inc
clc
xchg
mov
popa
xor
imul
ds
inc
movs
(bad)
scas
pop
adc
daa
jmp
retf
int
(bad)
fadd
iret
popf
shl
fcomp
dec
test
push
retf
pushf
call
fcom
adc
stc
imul
cwde
mov
or
dec
jge
lahf
sub
ja
add
or
mov
xor
out
ror
pop
sbb
fnstenv
push
popf
push
cmp
stc
pop
enter
sub
(bad)
dec
or
repnz
xchg
xor
mov
dec
sbb
out
icebp
or
jo
adc
add
lahf
jno
mov
leave
pop
xchg
xchg
pop
sub
in
popa
in
cmp
in
jecxz
jmp
push
mov
xchg
cs
mov
shl
xor
lock
or
push
out
das
mov
push
push
jmp
rcr
xor
ret
cmps
loop
lods
pop
xchg
test
rol
frstor
sbb
dec
xor
shr
test
jge
(bad)
inc
rcl
mov
cs
lds
add
mov
pop
push
mov
arpl
inc
rcl
sub
shl
es
mov
scas
dec
jnp
cmp
push
js
inc
jmp
sbb
pop
jb
mov
adc
mov
mov
sbb
call
fidivr
lahf
(bad)
jmp
or
jmp
loope
jmp
(bad)
int3
add
iret
xchg
mov
and
cmps
addr16
int
push
jnp
call
sbb
pop
nop
adc
cwde
dec
enter
repnz
(bad)
in
or
popf
sahf
mov
push
mov
xchg
(bad)
xchg
das
mov
pop
fnstcw
bound
mov
dec
sub
lahf
cmc
sbb
sbb
xor
jg
cmps
std
jae
shr
push
scas
sub
mov
(bad)
sti
sahf
test
add
(bad)
outs
cli
and
mov
inc
ret
pop
push
cmp
lods
dec
(bad)
cmp
sbb
aas
mov
test
dec
not
data16
mov
ss
sti
shr
sbb
out
xor
push
xor
js
mov
hlt
xchg
mov
(bad)
iret
fs
sbb
add
dec
js
inc
xor
cmp
xor
mov
cmp
les
idiv
nop
pushf
or
call
cvtps2pd
cdq
repnz
add
fucomi
cmp
popf
movs
fimul
add
(bad)
push
xchg
sbb
mov
push
fld
lods
out
mov
pop
inc
mov
popa
es
leave
int3
and
xchg
movs
jb
mov
fnstsw
(bad)
xor
pop
mov
mov
icebp
xor
xchg
cdq
ror
jecxz
scas
and
mov
out
push
cmps
jmp
mov
pop
scas
addr16
cmp
je
loope
inc
jbe
cmp
mov
mov
daa
or
loope
into
out
xchg
push
fsubr
scas
and
sbb
jp
pop
jae
in
fnstsw
mov
stc
dec
jnp
mov
gs
lods
js
gs
lahf
pop
adc
jmp
out
jne
pop
fs
pop
sti
pop
pop
push
push
mov
nop
call
adc
xor
dec
in
or
sub
ret
fdivr
shl
inc
bound
mov
xor
loopne
mov
pushf
dec
xor
add
push
adc
mov
sbb
add
jo
and
cmc
cwde
xchg
cmps
mov
fcomp
and
out
xor
sub
sbb
dec
or
dec
das
ss
pop
pop
adc
neg
shr
mov
hlt
clc
add
jg
popf
out
mov
rcl
ins
ins
jae
aam
pushf
inc
jp
(bad)
adc
out
sub
shr
adc
fld
mov
daa
jne
(bad)
inc
call
test
mov
sar
cmp
fwait
stos
dec
out
add
movs
movs
dec
xchg
add
shr
push
mov
jp
push
pushf
add
in
and
xchg
push
adc
inc
adc
sbb
neg
mov
push
dec
xor
dec
nop
jno
pop
add
lods
pop
jae
in
inc
mov
mov
ror
mov
jl
aas
icebp
xlat
push
or
ins
enter
aaa
mov
repnz
xlat
pop
mov
lock
outs
adc
jbe
stc
aad
fistp
imul
std
clc
imul
daa
add
lods
gs
dec
dec
ins
mov
jmp
push
pushf
mov
xchg
es
cmp
pop
out
not
sbb
push
adc
loopne
std
xor
jl
xchg
mov
mov
mov
dec
fadd
sub
(bad)
jecxz
loop
jo
aaa
retf
shl
cmp
sbb
in
xchg
sahf
mov
fucomip
test
mov
adc
leave
mov
repnz
pop
(bad)
into
mov
add
mov
pop
push
pushf
adc
loop
dec
das
mov
pop
in
mov
mov
push
mov
mov
loope
push
xchg
inc
imul
(bad)
out
dec
sahf
ins
adc
push
cld
jg
xor
sub
test
xchg
aaa
pop
arpl
mov
or
mov
sbb
pop
jmp
push
ret
push
inc
mov
les
ja
inc
pop
fnsave
adc
popf
pop
fcomp
sbb
jb
ficom
cmc
xor
es
xchg
dec
push
jg
mov
dec
retf
not
sbb
xchg
sub
mov
(bad)
jecxz
test
aad
mov
xor
lods
in
pop
dec
shr
repnz
xor
push
cmp
mov
cmp
mov
das
outs
iret
sub
loope
mov
lea
jmp
xchg
pop
lods
aas
xchg
pop
ins
loop
mov
jl
into
sbb
and
xchg
inc
ss
push
mov
xchg
xlat
pop
ins
pop
adc
inc
addr16
rol
sbb
in
push
push
jp
push
pop
adc
cmp
je
pop
cmp
dec
jnp
shr
test
cs
add
jns
xchg
aad
addr16
das
lods
sub
and
push
pop
jmp
mov
push
aaa
fst
lahf
repz
inc
cwde
fsubr
call
outs
sub
scas
dec
pop
(bad)
out
jl
sar
icebp
out
push
iret
leave
mov
push
cmps
inc
sbb
or
test
xor
ins
xchg
out
jb
sahf
xchg
ret
addr16
neg
out
test
arpl
imul
push
xchg
push
mov
sub
jge
popf
cmp
je
sub
scas
ins
mov
dec
xchg
add
push
cmps
call
mov
call
in
iret
cpuid
ret
repz
int
fwait
into
xor
xchg
or
push
inc
inc
mov
pop
ficom
mov
stos
dec
dec
sbb
cmps
pop
in
loopne
push
lock
cmp
add
sbb
xchg
pop
shl
push
jo
push
addr16
jns
out
adc
sbb
inc
or
into
jle
push
in
xchg
push
sti
ficomp
inc
repz
cmc
mov
int
cmps
sub
out
es
push
cmp
cmps
lock
mov
sub
imul
mov
or
mov
and
add
repz
movs
fwait
popa
aam
add
fwait
jge
cmps
xchg
mov
out
dec
jp
or
retf
les
mov
sahf
call
jl
fstp
mov
adc
ret
cmp
daa
out
rol
ret
sbb
lock
dec
jg
push
mov
das
mov
inc
or
mov
cmp
xor
mov
fld
les
inc
add
push
mov
out
loop
call
rol
jb
div
cdq
je
mov
pop
pop
neg
ss
les
add
sub
xchg
cmp
push
jno
jb
cmps
sar
inc
daa
xor
call
xor
js
jmp
bound
add
arpl
mov
icebp
lds
cwde
mov
les
and
mov
push
aad
in
cmp
sub
mov
and
xor
scas
sbb
int
xchg
outs
setl
test
and
add
call
adc
retf
push
cmp
push
repz
jo
cli
push
into
(bad)
pop
out
scas
jb
lock
popw
and
lahf
sub
pop
test
jmp
jae
loope
inc
adc
push
jp
dec
push
mov
or
ror
sahf
mov
pop
xor
push
pushf
cmp
rcr
jl
pop
movs
(bad)
dec
or
fldcw
sbb
and
pop
out
mov
xchg
mov
aaa
ret
pop
cs
iret
mov
xor
sub
stos
sub
xchg
fs
sbb
loop
inc
xchg
push
cmp
sahf
mov
nop
cdq
inc
add
fisttp
jp
mov
jno
dec
fwait
adc
in
not
or
mov
pop
mov
call
outs
push
out
stos
cmp
adc
and
xlat
pop
ret
pop
sub
mov
loopne
jge
hlt
popa
cld
nop
xchg
dec
xor
adc
pop
fisttp
fsincos
jb
mov
fbld
push
inc
cmp
jnp
dec
bound
aad
push
retf
pop
sub
sub
ficom
push
(bad)
or
jnp
mov
mov
adc
ret
enter
mov
nop
mov
xlat
sbb
push
add
(bad)
xor
mov
popa
mov
imul
xor
scas
adc
sti
cmp
sub
cld
sbb
xchg
sti
cmp
or
ror
push
mov
adc
in
fucom
pop
adc
fsubr
mov
movs
sub
clc
or
outs
cmp
dec
iret
mov
sub
out
out
retf
dec
mov
lods
xchg
mov
imul
gs
jnp
xlat
jne
pusha
test
pop
dec
push
mov
arpl
cwde
enter
fisttp
mov
cmps
nop
sub
fldenv
mov
jae
aad
bound
ficom
fistp
pop
or
ror
(bad)
ins
push
addr16
shl
pop
adc
and
pop
shr
pop
cs
add
fwait
push
adc
push
dec
cmp
arpl
out
xor
stos
adc
sbb
and
in
jbe
shl
mov
jno
xchg
mov
(bad)
sub
jmp
rcr
or
mov
push
mov
shl
in
daa
inc
mov
xchg
sub
hlt
add
imul
in
push
jne
scas
mul
or
cmps
add
imul
test
repnz
inc
hlt
movs
cmp
sub
push
stos
and
push
je
ss
fdivp
ror
jle
mov
sbb
mov
jge
stc
mov
sub
mov
push
lods
call
fsubr
jmp
cmps
jno
repz
(bad)
sbb
mov
lea
mov
lahf
dec
cli
test
clc
in
out
ja
ja
cld
jmp
mov
mov
cwde
lods
lahf
aas
sbb
sbb
loop
push
adc
ret
sub
(bad)
fbstp
cmp
mov
inc
xchg
mov
xchg
icebp
add
or
xchg
popa
add
retf
movs
xor
push
sbb
daa
dec
jge
lea
pop
push
cmp
out
lods
sub
cmp
sub
mov
outs
sub
and
cmp
jle
xor
shl
xlat
paddsw
sbb
mul
mov
pop
and
mov
repnz
and
fsubr
stos
cmp
inc
xor
add
jno
mov
(bad)
cmc
push
inc
pop
xor
or
(bad)
out
mov
xchg
xlat
imul
stc
lock
sub
leave
pop
add
int3
call
jmp
out
fild
mov
jg
(bad)
adc
mov
out
test
sub
rol
lds
adc
hlt
mov
sub
fcmovb
out
cdq
data16
into
cdq
shl
lea
jae
push
jno
nop
or
jmp
daa
scas
adc
stos
cld
add
jp
loopne
sar
ret
xor
mov
imul
js
test
inc
jae
jnp
pop
mov
jno
fdivp
sbb
adc
cmp
xor
ror
push
ja
clc
into
dec
push
cmp
sub
pop
or
int
push
push
sbb
mov
cmp
adc
popf
dec
aas
fnsave
mov
inc
inc
jmp
pop
adc
jne
xchg
fnstsw
aaa
sahf
sbb
jle
scas
movs
pop
push
dec
pop
dec
inc
jmp
(bad)
shl
loopne
leave
push
and
and
inc
nop
lea
sub
or
and
(bad)
cmp
adc
xor
mov
pop
jp
sti
jl
jge
pop
xor
sub
test
repnz
inc
daa
push
dec
fwait
sub
sbb
adc
popf
in
call
jbe
xchg
les
add
xchg
dec
fwait
cld
xchg
dec
mov
push
movs
mov
or
sbb
xor
sahf
add
push
pop
pop
xchg
cmps
sub
je
jge
fdiv
push
outs
ds
ror
call
cmp
in
aaa
xor
int
mov
lock
adc
cmp
dec
dec
dec
inc
dec
stos
push
in
cmc
xchg
add
jl
ror
push
hlt
sub
dec
pop
ret
pop
mov
mul
xchg
push
push
xor
adc
shl
jns
clc
or
pop
mov
leave
adc
jle
xchg
pop
add
ins
jecxz
cs
out
xor
and
fldenv
inc
add
lods
sbb
cmp
add
sub
popf
aaa
pop
pop
jns
push
sub
(bad)
pop
dec
or
lods
xchg
aad
pop
int
shl
retf
mov
xchg
fadd
stos
or
popa
ret
jg
scas
and
push
or
and
ins
inc
pop
cli
and
xchg
mov
(bad)
imul
or
cmp
mov
add
sti
sahf
mov
dec
js
(bad)
mov
js
jmp
ss
push
std
or
aam
push
push
mov
in
dec
cmp
push
ins
jg
arpl
xor
and
inc
and
mov
fadd
(bad)
outs
icebp
cmps
call
sbb
jge
cdq
xchg
in
mov
mov
xor
fcomp
mov
inc
fld1
mov
jns
std
cmp
push
adc
xchg
jge
popf
mov
and
rcl
lea
and
or
sbb
inc
add
jb
dec
mov
jae
jns
ins
lods
mov
shl
cmp
outs
nop
test
andps
inc
cld
mov
jmp
scas
and
adc
and
adc
push
dec
fild
rcr
js
aad
mov
xchg
push
fild
and
xor
sbb
fdivr
scas
scas
fisttp
lods
les
(bad)
cld
xlat
data16
mov
mov
enter
sar
imul
cmp
pop
repz
ror
mov
outs
(bad)
stc
int
jno
sbb
(bad)
int3
inc
(bad)
ror
shl
rcr
sbb
cmps
xor
mov
mov
push
jmp
cwde
sub
pop
sahf
fisubr
pop
sub
pop
xlat
xor
mov
aas
call
jb
ins
add
sbb
mov
jns
or
mov
dec
push
gs
and
imul
aas
cmc
mov
and
or
and
push
repz
test
lods
sbb
outs
(bad)
(bad)
xor
sbb
cmp
push
xor
push
ret
mov
xchg
dec
in
add
adc
cmc
dec
pop
enter
sub
add
sub
test
push
ins
mov
arpl
mov
jne
cmps
inc
pop
jecxz
addr16
sub
cdq
lea
jp
pusha
jo
mov
sub
out
sar
mov
leave
push
fs
pavgb
repnz
mov
mov
cmc
inc
jp
test
pop
loop
in
iret
xor
lea
xor
and
and
dec
xor
jge
mov
lods
stc
(bad)
stos
clc
fwait
aaa
aas
int
xchg
pop
aaa
adc
das
xchg
xor
daa
jb
dec
in
xor
or
pop
loope
cmps
xchg
mov
out
mov
jbe
xor
cli
sbb
outs
cmp
sub
stos
xlat
outs
jg
cmp
ret
mov
fld
daa
xchg
xchg
call
pushf
rol
cld
(bad)
imul
jg
lds
and
dec
dec
sub
pop
sbb
sti
cmc
ins
ds
ja
mov
sbb
mov
push
loope
iret
ret
ins
mov
in
in
xchg
mov
jl
popf
mov
xchg
jne
aam
xor
test
test
add
retf
jne
pop
mov
sti
inc
xor
ret
push
push
inc
fdivr
mov
or
xor
call
inc
jmp
(bad)
mov
mov
fwait
xor
adc
call
cld
jg
addr16
sbb
adc
ins
add
dec
popa
cmp
and
mov
fsubr
push
int
cdq
xchg
scas
jb
pop
pop
mov
xchg
imul
push
xor
repz
lock
ret
jo
inc
xlat
ins
adc
xchg
xlat
popa
mov
repnz
and
pusha
cmp
dec
shl
dec
adc
mov
and
push
fs
inc
sub
rol
lahf
jmp
clc
in
push
dec
xor
inc
in
inc
sbb
(bad)
(bad)
jo
xchg
loop
lods
fs
pop
dec
sub
xchg
xchg
fiadd
xor
push
test
neg
das
inc
mul
fimul
(bad)
inc
mov
mov
test
jge
pop
cmp
popa
jmp
add
and
int
push
dec
adc
push
out
repnz
add
push
pop
adc
mov
retf
jno
jns
jbe
out
(bad)
pop
leave
popf
mov
sti
test
addr16
sub
mov
xchg
aas
in
(bad)
loop
call
push
ret
(bad)
clc
xor
loopne
lds
push
scas
cwde
icebp
dec
mov
push
call
clc
and
cmp
mov
mov
int
pop
clc
adc
cwde
pop
shr
es
dec
ficom
and
mov
dec
add
imul
out
mov
push
fld
test
jecxz
(bad)
fnstenv
(bad)
push
and
adc
or
cld
push
jl
in
mov
and
ss
retf
jmp
jge
test
idiv
cmp
imul
in
cmps
icebp
std
iret
xchg
add
dec
adc
fwait
inc
inc
add
sub
and
shl
pop
xchg
ins
out
mov
into
inc
xchg
fdivr
mov
loopne
adc
mov
pop
or
ds
aas
fsub
arpl
add
icebp
cmps
mov
inc
dec
pop
(bad)
sar
stc
mov
cmp
retf
lods
nop
popf
js
xor
pop
cmc
out
and
out
nop
and
xchg
add
aas
jmp
ja
pop
and
stos
lock
repz
inc
pop
pop
pusha
adc
pop
call
pop
jbe
cmp
push
shl
add
pusha
repnz
xchg
out
(bad)
(bad)
nop
xchg
in
adc
mov
fnstsw
jns
and
call
out
mov
mov
and
cmc
jmp
mov
imul
or
call
bound
mov
iret
iret
es
pop
popf
call
lds
outs
fwait
jne
sbb
es
in
jno
sbb
mov
fwait
bound
xchg
mov
and
das
adc
out
jb
jecxz
xchg
cmps
jae
sbb
fucomip
jo
dec
mov
clc
inc
(bad)
xchg
and
cmps
pusha
loope
jge
dec
mov
jo
inc
xor
pop
xor
dec
add
(bad)
test
mov
jns
push
aad
sub
mov
sub
inc
push
fisub
sbb
les
push
mov
mov
data16
pusha
or
pop
xchg
cmp
push
mov
ja
mov
retf
add
fist
inc
aad
call
mov
mov
push
leave
faddp
pushf
sahf
sbb
fdivr
xor
or
rcl
push
test
imul
add
sub
inc
out
or
dec
lea
jns
add
pop
test
int
push
inc
mov
pusha
jp
ficom
sub
inc
inc
pop
cwde
mov
fdivr
or
stos
xor
and
mov
adc
inc
inc
je
je
mov
xor
test
fsub
cmc
(bad)
cld
aaa
daa
mov
xor
sub
fild
(bad)
test
daa
sub
ret
pop
popa
into
push
in
sub
div
retf
inc
rep
cmp
mov
enter
pop
or
xor
pop
mov
mov
mov
push
jmp
sti
scas
nop
mov
popa
jl
cs
sub
push
scas
test
not
mov
jl
and
or
ror
inc
adc
jmp
retf
je
jns
sbb
jmp
rcr
test
pop
push
ror
jmp
inc
pop
(bad)
mov
jl
repnz
push
push
call
div
sbb
add
inc
in
in
repz
ror
mov
jne
mov
fisub
inc
sub
dec
or
cmps
push
xchg
out
enter
pop
aad
cmps
sbb
repnz
out
inc
mov
int
push
out
push
dec
jns
addr16
push
xchg
jmp
inc
popf
fld
inc
stc
les
sbb
pusha
mov
loopne
movs
pushw
enter
xchg
mov
fidiv
sub
(bad)
test
xchg
xor
jmp
xor
pushf
int3
add
mov
jmp
in
aas
inc
jle
xchg
dec
mov
mov
retf
push
jbe
add
fwait
mov
ret
pop
jecxz
sbb
jnp
(bad)
ins
inc
or
mov
out
inc
leave
ror
in
jns
mov
fnsave
in
mov
or
bound
and
ret
jne
xor
in
xchg
mov
out
scas
loopne
imul
cdq
xor
ins
cmps
pop
retf
lods
and
jecxz
or
out
(bad)
aam
ss
xor
dec
nop
and
adc
mov
xor
jo
mov
inc
adc
mov
int3
into
(bad)
pop
outs
pop
inc
jb
nop
dec
(bad)
hlt
jne
retf
loope
pop
aam
mov
cmp
mov
js
dec
je
in
(bad)
cdq
lea
pop
les
dec
jmp
mov
jno
fldenv
faddp
push
push
ss
inc
jbe
out
fnstcw
add
mov
dec
rcl
cwde
mov
out
jbe
or
mov
out
sbb
ret
in
or
fadd
inc
nop
pop
sbb
pop
cmp
push
adc
jg
mov
dec
call
mov
or
pop
les
cmp
bound
cmp
sub
lds
in
cmp
cdq
push
xchg
cmps
xlat
xor
dec
mov
iret
fst
iret
push
add
dec
mov
pop
xor
sub
fs
dec
fdivr
inc
or
out
push
or
pop
iret
movs
ret
pop
gs
xchg
push
bound
xor
jae
pop
cmps
dec
add
out
int3
scas
jecxz
repz
dec
(bad)
sub
aas
xor
call
cmp
test
push
in
jecxz
push
cmp
icebp
xlat
gs
imul
cs
jle
cmp
adc
dec
mov
je
sti
js
fwait
test
pop
mov
add
adc
sbb
enter
push
cdq
in
loope
push
mov
inc
leave
pusha
push
cmps
stc
and
sbb
xor
push
loope
pop
movs
dec
inc
sub
dec
xor
das
cli
sti
ins
and
mov
mov
mov
and
sahf
mov
arpl
movs
mov
sub
dec
jg
and
adc
call
cli
fwait
sub
leave
sbb
mov
out
pop
xchg
sub
(bad)
fisubr
outs
outs
jo
pop
mov
out
bound
adc
adc
(bad)
hlt
lods
push
and
cli
xor
sub
cmp
inc
sub
inc
jp
add
sbb
xchg
and
mov
sub
jbe
call
mov
mov
cmp
add
hlt
jp
frstor
jb
pop
aam
leave
ins
pop
xor
in
cld
cmps
pusha
iret
xor
adc
aam
js
call
ss
jae
int
jne
cdq
and
cmp
(bad)
loope
pop
sbb
xlat
and
pop
mov
pusha
fdivrp
inc
pushf
inc
js
jb
lahf
mov
movs
sub
mov
aas
rcl
mov
mov
(bad)
push
cli
in
lahf
repz
push
repz
mov
pop
in
pop
push
add
push
je
in
add
add
inc
push
xchg
imul
adc
fwait
push
arpl
in
pop
mov
int3
int
xor
cli
inc
xchg
inc
popa
stos
and
pop
xchg
fmul
fwait
or
bound
pushf
pusha
and
dec
pop
rcl
push
mov
cs
jnp
xchg
add
ret
inc
jmp
stc
fimul
lahf
mov
int
sbb
imul
into
fs
ss
push
mov
mov
sub
cmps
ds
sub
and
ret
clc
es
sbb
mov
hlt
aaa
push
xchg
or
jo
daa
jae
inc
pop
icebp
dec
cmps
test
cmp
mov
inc
cmp
aas
xchg
ins
ret
mov
in
pop
cmp
and
clc
jae
mov
or
mov
ss
out
retf
add
out
in
mov
cmp
retf
mov
push
ror
das
iret
mov
pop
and
jl
push
and
cli
xchg
sti
cmps
test
aam
jle
and
outs
sub
mov
inc
(bad)
cdq
xor
dec
xchg
out
push
movs
push
leave
mov
call
jmp
sub
nop
adc
or
std
sub
adc
jg
pop
mov
aaa
aad
(bad)
hlt
jg
or
fbld
mov
lock
jmp
inc
jl
pop
xor
in
and
mov
xor
aaa
das
repz
pop
imul
mov
out
je
call
cmp
inc
dec
enter
(bad)
or
sub
shl
dec
jg
mov
jle
sbb
lock
mov
cmps
xchg
mov
imul
mov
lock
jne
pop
xor
fcom
dec
pop
(bad)
pushf
iret
mov
adc
in
test
fimul
jmp
retf
nop
not
pop
sub
xor
or
pop
pop
mov
mov
in
ror
mov
mov
jl
popa
int
or
cmc
movs
(bad)
(bad)
push
inc
cli
pop
inc
xor
out
ins
mov
xchg
or
dec
call
add
push
fs
aaa
movd
pusha
repnz
sub
cmp
jo
and
pop
es
retf
(bad)
mov
int
push
outs
mov
mov
jmp
xchg
inc
(bad)
mov
sbb
push
dec
inc
dec
(bad)
mov
hlt
into
xlat
aaa
mov
ret
psrlw
repnz
or
pop
clc
mov
cmp
pop
test
sbb
test
fwait
popa
scas
lods
nop
jo
cli
out
xchg
imul
in
out
retf
hlt
xor
fdivr
hlt
push
dec
jno
jo
push
bound
imul
jmp
mov
pushf
xchg
lods
inc
push
movs
mov
aam
jecxz
ror
pop
jg
add
dec
int3
mov
push
mov
je
movs
loop
push
cmp
add
mov
(bad)
not
mov
cmp
popa
sub
std
and
arpl
jns
lods
daa
movs
sbb
or
or
jp
dec
pop
aas
inc
pop
outs
and
stos
mov
hlt
sbb
mov
dec
push
add
pop
fist
mov
les
test
jmp
cmp
xor
xor
sub
pop
call
cmp
xlat
lds
lahf
inc
out
enter
int3
in
stc
popf
inc
int
sbb
lods
inc
dec
out
lods
ss
cmp
push
mov
jo
and
iret
jp
mov
or
pop
int3
mov
in
jo
std
mov
push
daa
xchg
es
xchg
pop
js
aas
and
sub
js
sub
inc
dec
xor
(bad)
fistp
stos
sti
repnz
or
jp
cli
fnstenv
test
mov
push
push
sbb
fmul
ret
pushf
stc
cmps
retf
(bad)
icebp
fmul
mov
lods
mov
scas
sub
inc
shr
(bad)
mov
jne
mov
bound
push
in
int
jne
lahf
(bad)
ja
inc
push
sub
into
aad
sbb
mov
fild
push
dec
jge
add
call
pop
and
dec
sbb
mov
stos
sub
aas
in
cmp
sbb
and
push
aaa
cmps
arpl
xchg
sbb
add
mov
arpl
call
push
push
lods
(bad)
or
enter
fldcw
mov
xchg
jbe
mov
lock
les
rep
cmps
iret
cmc
jae
xchg
add
xchg
aaa
and
jno
imul
sub
mov
jecxz
mov
or
pminsw
jl
and
xchg
scas
mov
in
call
jp
stos
aas
pop
test
pop
nop
repnz
mov
and
sbb
dec
lock
out
call
inc
scas
fcmovnbe
cmp
push
pushf
xor
out
dec
int3
in
cld
daa
fcmove
push
inc
push
lock
jl
in
add
mov
pop
aam
(bad)
stc
lods
mov
xor
shr
lock
jp
mov
(bad)
jno
sbb
fwait
jbe
or
dec
add
loopne
xchg
or
mov
cmp
push
mov
mov
arpl
mov
daa
and
mov
repnz
adc
fsub
jo
outs
jns
out
sahf
stc
dec
pop
das
or
and
sub
ja
sbb
mov
cdq
xor
lahf
mov
push
sbb
fwait
clc
dec
mov
pusha
fcomp
inc
dec
sti
cmp
dec
lods
or
sub
fs
mov
sbb
les
xchg
jne
add
lahf
mov
retf
outs
dec
push
pop
fsub
dec
test
loop
gs
es
cmps
jmp
lahf
jns
js
cmp
movs
and
dec
xchg
xchg
xchg
mov
jne
inc
push
jo
test
jb
scas
push
imul
sahf
clc
dec
and
mov
fucomi
ret
cmps
data16
les
scas
jecxz
cwde
out
cmp
fcmovne
shl
sar
jne
inc
mov
pop
popf
(bad)
stos
adc
cmps
pop
fiadd
(bad)
ss
fadd
repnz
ffree
xor
ins
dec
push
and
sub
add
push
popa
adc
add
shl
add
and
jle
or
push
jb
jecxz
jl
(bad)
les
and
pop
mov
mov
pusha
test
test
dec
and
fcom
jo
sub
fs
adc
pop
add
test
stc
rcl
pop
push
push
pushf
inc
mov
xlat
sbb
xchg
test
pop
xor
mov
fisubr
push
mov
fs
adc
mov
ret
and
fs
add
addr16
lods
jnp
dec
in
cdq
rcr
cli
mov
mov
loop
jnp
xchg
adc
mov
rcr
loop
stos
sub
and
xchg
imul
sub
cmp
loop
push
(bad)
adc
outs
ss
pop
shl
add
xchg
cmp
inc
push
inc
in
pop
cmps
ret
or
ret
xchg
pop
jl
mov
jne
push
call
std
and
aad
dec
or
mov
sbb
jnp
cmps
cmps
adc
jp
jae
(bad)
(bad)
out
dec
dec
pop
shl
cld
sbb
popa
cmc
aaa
imul
out
pop
cmp
jmp
cmp
ins
rol
jb
xor
mov
inc
lds
dec
xchg
out
ins
sahf
ret
retf
add
int
push
pushf
sub
(bad)
ds
jbe
fcmovnbe
xor
cmp
shl
push
cmp
mov
test
(bad)
test
xlat
in
xchg
imul
test
cmp
sahf
cmps
sub
mov
adc
adc
jmp
cs
xor
dec
call
gs
jecxz
lds
pop
idiv
adc
jnp
in
adc
fnstsw
test
mov
nop
adc
xchg
popf
stc
clc
mov
mov
ja
pop
mov
push
jmp
mov
scas
retf
sti
dec
adc
cwde
outs
in
movs
pusha
cmps
daa
lods
bound
mov
imul
push
fnsave
in
sub
mov
scas
xchg
test
or
mov
stc
pop
xchg
push
outs
lods
inc
jno
lahf
rcr
mov
loop
js
mov
inc
xor
jno
xor
dec
mov
jle
pop
iret
je
mov
jecxz
movs
push
jp
jnp
sbb
rcl
mov
aaa
cdq
and
outs
int
popa
retf
inc
xchg
leave
imul
imul
repz
add
ss
inc
cmp
out
and
mov
out
loop
add
jl
xor
sbb
mov
sar
jmp
rcr
(bad)
cmps
pop
add
xlat
jge
adc
push
sbb
out
ds
std
add
jle
stos
push
ja
idiv
(bad)
cli
dec
adc
jge
inc
lea
lea
mov
call
mov
stc
dec
repnz
jmp
leave
mov
pop
xchg
and
dec
push
cmps
lahf
dec
stos
inc
ret
mov
adc
loope
or
sbb
inc
push
frstor
jns
mov
movs
ins
mov
jns
dec
sbb
daa
shl
test
in
imul
leave
mov
(bad)
inc
js
adc
inc
pop
call
add
gs
fld
xchg
push
and
mov
dec
cwde
loopne
mov
push
out
or
adc
adc
inc
mov
mov
push
mov
push
movs
xchg
pop
ins
or
clc
ficom
add
lahf
sub
rcl
xor
retf
fs
popf
dec
nop
add
sbb
pop
cld
xchg
push
out
sbb
fcomp
pop
stc
cld
and
into
pusha
cmps
jb
sahf
imul
add
ds
add
loop
test
sbb
dec
jns
fwait
mov
ds
sbb
sbb
lods
lods
sbb
ja
sti
int3
ret
push
fprem1
stos
dec
les
les
shr
sbb
xchg
xor
loop
or
mov
add
lahf
inc
sahf
ret
fwait
inc
jg
sbb
movs
adc
jmp
cmp
int3
sub
adc
in
sbb
in
dec
cli
addr16
push
icebp
mov
rcr
ss
lock
xchg
mov
xor
mov
sub
jp
dec
mov
cmc
add
sbb
pop
jle
dec
jb
fs
push
movs
outs
mov
enter
pop
les
add
jnp
jb
sub
and
fnstenv
mov
sbb
add
ds
jge
xchg
pop
mov
jb
test
dec
mov
dec
xor
mov
push
jg
add
pop
pop
sahf
jge
sub
xorps
movs
jmp
xchg
sahf
adc
arpl
mov
aas
or
repnz
push
icebp
ret
lahf
repz
(bad)
fistp
in
jle
jnp
int3
enter
repnz
inc
jecxz
ja
les
mov
scas
pop
fcom
sub
xor
in
and
int
call
xor
not
jns
cmp
and
mov
mov
pop
aam
popa
inc
add
pop
arpl
in
rcl
daa
and
mov
addr16
ja
rcl
jl
xor
lea
adc
mov
and
push
mov
add
(bad)
mov
movs
in
inc
fisub
mov
iret
sbb
aaa
ins
xchg
push
adc
mov
mov
fidiv
(bad)
push
in
test
jno
add
nop
or
lods
in
push
movs
imul
adc
xor
mov
neg
or
push
dec
(bad)
in
test
mov
scas
adc
push
push
aam
sbb
hlt
xchg
adc
mov
outs
sti
cmp
jnp
in
pop
mov
mov
xor
(bad)
cli
mov
(bad)
or
cmps
mov
or
jbe
inc
pop
or
sub
push
xchg
imul
lahf
cmp
fcom
and
mov
or
stos
cmp
jle
add
push
cld
xor
pushf
jle
dec
loop
adc
adc
neg
mov
xchg
mov
movs
outs
push
sub
push
add
sub
retf
push
sub
mov
and
std
adc
lods
lods
push
ja
mov
push
pop
xchg
or
in
scas
jg
push
dec
out
not
pop
ins
out
movs
jmp
test
(bad)
addr16
cmp
sbb
stc
cmp
js
push
xchg
mov
dec
test
push
inc
cwde
xchg
push
loop
add
ds
or
inc
and
adc
aaa
popa
out
jns
lods
das
mov
lods
or
test
test
mov
mov
test
mov
dec
int
daa
jg
push
ins
inc
inc
mov
xchg
ins
inc
sub
mov
retf
xor
dec
push
jne
shr
xchg
push
mov
sbb
pop
sub
test
add
jno
xchg
daa
add
sbb
adc
push
cmp
mov
repz
mov
push
cdq
or
retf
and
mov
add
push
xlat
or
mov
fstp
ds
popf
sub
xchg
shl
adc
jbe
xchg
sub
les
pavgw
adc
popf
in
xchg
dec
push
cmc
add
aam
mov
jb
fistp
or
inc
mov
pop
movs
cmps
cmp
jecxz
sub
les
lock
jns
add
cmps
adc
repnz
dec
adc
or
cmp
fisttp
std
retf
out
out
adc
jp
mov
(bad)
lea
loopne
into
in
dec
xor
xchg
sub
pop
ror
addr16
jns
jg
mov
xor
fnsave
cli
nop
into
sub
pop
repnz
mov
sbb
lea
jmp
fimul
add
push
pusha
mov
gs
nop
push
xor
sti
movs
jge
lds
mov
jp
mov
sbb
and
and
add
xchg
mov
dec
out
sar
retf
popf
push
out
jno
(bad)
hlt
sbb
xor
outs
rcr
movs
push
cld
mov
lods
xchg
out
enter
(bad)
pop
pop
lods
lods
shl
mov
bound
pop
jmp
imul
aam
lock
out
pop
dec
mov
fild
push
sbb
cmc
xchg
adc
jmp
or
mov
add
inc
fcomip
xchg
test
push
js
push
pop
(bad)
push
(bad)
loopne
dec
lock
jg
push
aaa
pop
and
cmp
retf
cmps
rcl
int
mov
cld
mov
fcomp
and
inc
dec
xor
mov
rol
xchg
mov
or
or
fisttp
push
pop
mov
out
or
sbb
stos
fcomp
scas
(bad)
fnsave
out
mov
or
std
gs
ds
cwde
aaa
cs
in
jb
mov
jge
xor
adc
call
inc
add
pop
jo
popf
addr16
dec
xchg
sub
in
mov
sar
movs
xchg
hlt
xor
adc
or
lods
out
std
mov
push
push
and
sbb
fld
pop
push
jp
loopne
push
fwait
or
inc
ret
fs
js
inc
js
test
sbb
fisubr
inc
popf
lock
nop
fwait
ja
mov
add
ins
push
imul
rcr
cmc
sub
push
clc
sbb
repz
and
iret
pop
loopne
pop
jno
sbb
mov
xchg
loope
push
call
loope
mov
nop
push
jle
pop
dec
sti
cdq
and
jge
pop
sti
das
mov
adc
cmps
aas
movs
addr16
daa
and
in
out
test
sbb
unpcklps
data16
push
xlat
dec
fsub
xor
sbb
mov
stc
mov
jecxz
movs
into
repnz
aas
mov
cmps
xchg
fsub
std
(bad)
repnz
and
inc
out
cld
or
sub
test
fucom
and
pop
cli
mov
mov
outs
dec
cld
jle
sahf
mov
dec
pushf
data16
cmp
or
pushf
pusha
out
arpl
hlt
imul
inc
mov
mov
ds
jbe
pop
aas
test
repz
fcomp
ja
and
aad
pop
jae
jb
iret
cmp
inc
and
loop
lds
pop
dec
jmp
repnz
push
aaa
ror
fs
add
push
test
cwde
jae
cmps
xor
aam
add
xchg
in
cs
mov
xchg
in
inc
mov
adc
xlat
mov
pop
hlt
fcomip
imul
out
cmp
(bad)
cli
xor
or
or
rcr
dec
and
jns
push
js
fisub
add
into
es
push
jecxz
mov
cld
or
cmp
mov
gs
loope
out
ja
arpl
jo
fidivr
sbb
jb
outs
adc
lahf
int3
dec
jle
jb
fidivr
test
aas
and
add
xor
rcr
add
mov
repz
icebp
dec
loope
(bad)
ins
mov
mov
jp
mov
fsubr
push
xchg
or
inc
ret
pop
jl
lods
add
movs
inc
xor
fcom
gs
pop
mov
xchg
test
or
pusha
xor
outs
ins
lods
repnz
inc
js
sub
mov
mov
xchg
xor
or
sub
mov
xchg
mov
inc
lods
xchg
inc
add
cmc
imul
and
cdq
xor
inc
mov
mov
mov
pop
jnp
inc
sbb
ins
jmp
aaa
adc
dec
out
jne
out
mov
inc
fldcw
sbb
push
outs
lock
scas
je
and
bound
push
lds
in
ds
push
aas
add
sbb
stos
(bad)
call
sti
enter
sbb
xor
in
xor
sti
repnz
shr
pop
pop
adc
mov
inc
cs
test
sbb
jnp
lds
jp
add
call
(bad)
push
imul
lds
dec
push
cld
and
cmp
(bad)
cli
sbb
scas
loope
cmps
pop
jno
adc
sbb
and
add
movs
adc
inc
or
fsubp
xchg
loopne
test
sub
pop
pop
adc
std
lea
gs
pop
fbstp
cmp
mov
cmps
mov
fbld
sub
add
push
jnp
adc
adc
fwait
das
repz
mov
out
jns
push
lods
mov
(bad)
sbb
mov
inc
mov
jb
retf
iret
movs
xchg
jmp
lods
mov
and
pop
fidivr
(bad)
movs
in
dec
jno
jbe
mov
ins
xchg
jmp
mov
sub
outs
loop
outs
jns
in
retf
ins
mov
dec
lahf
out
test
cwde
jmp
and
or
xor
fdivr
fmul
cmp
aaa
icebp
push
mov
mov
mov
lea
dec
test
lahf
add
fmul
ror
push
or
or
mov
push
out
rcr
xor
adc
adc
icebp
jecxz
jno
sub
cmps
sbb
or
mov
jmp
push
mov
dec
and
cmc
xor
jmp
lods
call
popf
jl
inc
jmp
xchg
ss
cld
lods
mov
pop
mov
aam
stos
and
scas
in
lds
xor
or
dec
mov
dec
and
or
jbe
bnd
mov
fstp
mov
cwde
push
adc
add
lahf
cs
sub
mov
dec
outs
cli
mov
xor
mov
and
push
sti
push
add
(bad)
hlt
ja
mov
fidivr
ja
ret
pop
sub
jns
mov
or
ror
pop
pop
and
rsm
xor
mov
and
aad
mov
add
xchg
mov
in
mov
mov
stos
(bad)
push
ss
xor
mov
cmp
cwde
scas
call
jno
adc
inc
or
gs
cmps
inc
js
test
scas
dec
test
loop
(bad)
lock
movs
ja
out
mov
add
clc
add
jnp
and
push
es
dec
fnsave
sub
sti
mov
aad
dec
and
cmp
pop
test
pop
push
or
mov
ins
cmp
or
cmp
sti
repnz
xlat
and
or
bound
js
retf
es
adc
add
movs
and
aad
outs
cli
jge
lds
jg
fdivr
sbb
mov
sub
iret
mov
loope
mov
aas
loopne
add
mov
jno
mov
dec
pushf
xchg
cmp
ret
cmp
dec
fwait
les
hlt
fwait
(bad)
out
in
call
pop
(bad)
aam
xor
xchg
int3
dec
arpl
jecxz
sbb
popf
not
jmp
das
push
adc
outs
imul
mov
pusha
sti
push
retf
cli
pop
xchg
ins
rol
adc
mov
out
lahf
xlat
cmp
ins
and
jae
or
jnp
sbb
sbb
out
or
imul
and
jp
movs
adc
sub
push
adc
bound
jl
test
cvtps2pd
mov
and
cmp
mov
push
pop
repnz
push
pop
add
dec
push
xor
xchg
cmp
sbb
adc
das
adc
mov
lods
test
or
pushf
push
dec
sbb
outs
pop
scas
add
aas
shl
mov
lods
loopne
ins
in
sti
ins
inc
or
leave
in
fwait
xor
les
retf
jb
lahf
loope
sbb
mov
call
lods
les
jge
xchg
lea
xchg
mov
mov
loopne
inc
inc
or
xor
lahf
jg
adc
and
loopne
mov
jl
gs
lds
rcl
add
adc
test
mov
sar
retf
sub
movs
addr16
mov
pop
push
xchg
xchg
sub
push
outs
out
in
xchg
adc
jno
add
sub
pop
pop
adc
addr16
pop
(bad)
mov
cmp
dec
lea
scas
pop
sbb
xlat
or
popf
add
dec
mov
test
mov
sub
add
fcmovnbe
push
add
xchg
mov
mov
cmp
aaa
fucompp
loop
xchg
popa
fadd
add
in
xchg
add
cwde
xchg
or
rcr
daa
jg
xlat
dec
and
retf
xchg
xor
push
xor
dec
sub
pop
cmp
loop
cld
retf
sti
pop
movs
idiv
scas
ja
adc
inc
sbb
sbb
mov
pop
mov
dec
es
pusha
mov
cmp
add
shl
cld
loop
mov
cmp
dec
pop
push
test
cli
inc
xchg
rol
jecxz
jbe
(bad)
lods
retf
xor
in
repz
pop
cmc
mov
and
imul
pop
push
adc
mov
clc
xchg
pop
cwde
sub
mov
sub
(bad)
call
jne
jecxz
inc
(bad)
das
in
fst
xchg
xchg
out
xchg
pop
js
mov
(bad)
mov
push
fisttp
inc
xchg
bt
jl
cmc
lods
mov
xlat
hlt
xlat
add
and
ins
loopne
sbb
xor
adc
mov
fnstcw
xchg
dec
pop
push
adc
sahf
nop
dec
mov
jb
test
test
lods
stos
les
mov
mov
fs
addr16
imul
jns
arpl
adc
dec
addr16
inc
adc
ins
or
xor
lods
fsub
jmp
jne
movs
cdq
and
pop
mov
jo
aad
fidiv
in
add
sub
out
sbb
cmps
xchg
ror
nop
or
sub
in
add
in
push
inc
test
cmp
cmp
xrelease
pop
jns
inc
js
fimul
lock
test
pop
lock
fbstp
jmp
mov
and
je
ja
xchg
and
loopne
push
dec
mov
call
push
scas
neg
xchg
loopne
inc
imul
pop
push
pop
js
mov
push
inc
js
movs
(bad)
adc
loop
outs
mov
push
push
out
jecxz
or
inc
out
mov
inc
inc
jae
fidiv
xor
add
adc
xor
enter
inc
push
loope
aas
xchg
push
xor
adc
and
inc
pop
push
ret
(bad)
sub
mov
sbb
add
sbb
sub
push
lods
pop
adc
aaa
out
movs
aaa
loopne
cmps
xchg
mov
and
pushf
mov
and
add
iret
xchg
dec
movs
(bad)
icebp
jmp
lahf
fisubr
in
test
retf
repnz
in
popf
lds
sbb
sub
inc
in
retf
and
cld
inc
ss
rcl
call
retf
lahf
sbb
push
sbb
jmp
es
add
xor
or
test
jmp
and
adc
gs
cmp
lods
enter
in
rol
imul
push
push
test
jp
lds
je
push
add
sbb
scas
and
inc
adc
mov
mov
add
sahf
sbb
pop
push
mov
adc
ins
dec
nop
rcr
pop
cmp
clc
cmp
dec
test
inc
mov
mov
lods
std
dec
adc
data16
in
ds
pop
ds
and
lock
scas
arpl
cmps
je
out
mov
sbb
mov
push
jecxz
dec
push
scas
mov
ror
cmps
pop
sbb
fisubr
push
mov
xchg
xor
sub
cmp
dec
mov
popa
push
sbb
cmp
ins
loope
(bad)
outs
popa
lahf
bound
cwde
in
int
xor
mov
gs
repnz
sub
fadd
lock
pop
cmp
push
out
out
mov
pop
xor
or
dec
xchg
pop
call
clc
cmp
out
cdq
ror
jmp
inc
cmc
or
push
xchg
pop
rcl
leave
(bad)
fwait
(bad)
out
ds
int
cmc
xor
addr16
in
inc
cmp
xchg
inc
jbe
lods
inc
pop
mov
dec
or
stos
jp
out
int
dec
xor
push
in
mov
sub
shr
arpl
imul
sub
inc
das
pop
ins
cmp
jecxz
mov
arpl
push
ins
cmp
mov
and
and
or
call
push
out
xor
cdq
fcomp
add
inc
int3
lea
cmp
or
test
dec
mov
pop
arpl
es
sub
dec
xchg
sub
outs
and
daa
stos
in
push
outs
test
fcom
ins
mov
mov
rcr
xchg
rcl
cmps
mov
int
pop
fist
scas
das
leave
push
mov
mov
or
addr16
adc
cmp
xchg
push
fmul
sbb
sar
mov
cmp
lods
sar
shl
outs
inc
xor
adc
xchg
retf
sbb
ins
jae
movs
ret
dec
cdq
sar
push
add
xchg
jp
xor
sbb
mov
cmp
push
mov
ret
add
jnp
pusha
out
aas
test
es
pop
sbb
mov
test
in
sub
add
cli
mov
cli
repnz
(bad)
cmps
push
imul
or
sbb
nop
sub
ret
xlat
mov
jp
inc
inc
dec
call
(bad)
into
adc
lock
(bad)
sub
test
(bad)
aad
sahf
and
fst
js
dec
mov
push
mov
in
sar
lahf
ins
xchg
outs
inc
sub
sub
rol
leave
inc
addr16
sbb
add
jnp
pop
xor
(bad)
ins
mov
mov
sbb
mov
jbe
sbb
push
mov
js
mov
data16
loope
jmp
adc
bound
(bad)
mov
in
jns
call
dec
pop
push
mov
call
and
jno
sub
mov
fsubp
xor
and
mov
jbe
pop
fnstcw
sub
movs
push
out
and
jmp
lahf
fimul
and
aam
fadd
cmp
sub
daa
hlt
xchg
push
mov
mov
and
packssdw
jnp
sar
icebp
cs
aaa
mov
out
jl
lock
movs
les
aam
lods
neg
stos
ss
pop
retf
push
(bad)
push
xchg
cdq
sbb
dec
jl
sub
pop
lea
cmps
mov
aaa
mov
and
and
out
add
cld
push
lds
pop
shr
jns
jne
jae
les
pop
movs
test
cli
or
mov
sub
add
movs
cdq
dec
ja
pop
into
sti
hlt
retf
sbb
shl
mov
mov
fidiv
les
mov
adc
sbb
test
xchg
cmc
data16
out
or
mov
add
les
sar
cdq
retf
iret
fild
xchg
lahf
or
pop
dec
cmps
xor
adc
dec
mov
les
sar
cmp
inc
repnz
dec
mov
arpl
test
dec
add
sub
iret
rcr
adc
int
cmc
pop
xchg
retf
lods
mov
retf
das
cmp
lock
push
ja
sahf
jp
shr
sbb
jmp
ins
test
stos
fistp
iret
es
cmps
gs
or
add
daa
cmp
jp
outs
or
icebp
mov
xchg
lock
inc
and
mov
aaa
sub
ficomp
ins
les
mov
pop
bound
leave
inc
push
dec
and
cld
cmp
outs
push
mov
push
cmp
lea
das
test
mov
icebp
fdiv
xor
pop
push
adc
mov
and
dec
add
jecxz
mov
mov
mov
outs
cmp
ins
sub
fstp
adc
shr
sub
cld
push
or
cdq
mov
or
adc
addr16
leave
pop
fnstsw
pop
data16
mov
aas
out
jb
(bad)
daa
pop
out
mov
xchg
cmp
push
dec
mov
adc
data16
ret
jb
mov
mov
push
add
pushf
add
and
loop
stc
sub
int3
ret
popf
sbb
jecxz
cmc
ds
enter
pop
stos
jl
xchg
popa
xchg
jl
imul
push
jo
add
xor
imul
jb
xchg
dec
or
xor
mov
sbb
rcl
into
or
cmps
fisubr
add
neg
xor
aam
push
fmulp
daa
add
fadd
xor
call
or
sti
or
or
or
xor
jl
or
test
mov
(bad)
and
or
mov
mov
ret
ror
add
jae
sahf
or
push
(bad)
sar
mov
sbb
mov
adc
ficomp
inc
cld
imul
stos
mov
(bad)
jg
popf
retf
xor
sahf
mov
pop
ret
dec
sub
adc
dec
add
jmp
push
mov
mov
(bad)
sbb
es
fist
pop
pop
mov
in
adc
lds
lahf
dec
adc
pusha
lods
outs
add
rol
ins
mov
pop
es
push
movups
mov
add
das
xor
mov
clc
scas
cmp
jbe
mov
adc
stos
jae
cmp
mov
mov
rcl
pusha
jecxz
push
mov
int3
push
push
pushf
mov
aad
push
xchg
fcom
shl
or
and
stc
mov
mov
shl
cmps
(bad)
jb
lods
int
pop
fs
pop
mov
in
(bad)
sahf
jmp
sub
add
jns
dec
int
out
inc
outs
stos
jo
cmp
mov
cmp
movs
loope
lock
loopne
ja
dec
or
pop
pop
leave
inc
mov
inc
mov
cs
cmp
shl
adc
jg
test
mov
rcr
pop
push
je
jnp
outs
add
or
sub
jo
loop
ja
movs
add
and
sbb
mov
jns
jecxz
(bad)
not
into
cmp
cdq
lds
cmp
sbb
mov
push
inc
inc
fsubr
jo
pop
or
inc
xchg
mov
stc
fdivr
mov
mov
dec
adc
mov
push
call
aaa
jnp
jle
sbb
sub
nop
gs
setne
out
out
idiv
mov
jle
mov
rcr
adc
sub
xchg
test
mov
dec
adc
mov
stos
aam
les
imul
pop
out
adc
jp
mov
rcl
test
jl
and
pop
xchg
mov
sub
daa
sub
data16
mov
cmovns
push
adc
les
jp
je
sbb
mov
ds
jne
fisubr
in
mov
push
aas
mov
xor
and
mov
jno
sub
iret
cmp
push
movups
adc
dec
aad
sub
outs
jmp
lds
fmul
mov
mov
mov
movs
dec
inc
cmp
scas
mov
cmp
js
mov
cdq
sub
mov
je
pop
or
in
and
sahf
xlat
xor
test
or
adc
out
push
rcr
and
ja
mov
pushf
mov
adc
cmp
pop
imul
int
cmc
mov
ins
mov
sahf
pop
dec
loop
lahf
or
jns
push
mov
xchg
mov
push
inc
inc
mov
mov
mov
test
cmc
push
sbb
mov
push
cmps
xchg
and
jle
mov
dec
xor
shl
paddd
xchg
mov
test
stos
out
mov
mov
pop
dec
mov
push
add
outs
js
xor
jnp
outs
repnz
add
enter
rcl
adc
fs
in
repnz
pop
xchg
mov
ins
out
nop
xor
iret
enter
out
mov
mov
stc
test
mov
mov
aas
movs
shr
arpl
retf
push
adc
jmp
hlt
int3
push
arpl
sbb
es
lahf
inc
repz
fidivr
ja
fwait
ror
js
fnstenv
das
mov
pop
ret
dec
stos
lea
lea
outs
ins
je
leave
sti
stc
scas
push
mov
dec
ret
shl
stos
pop
or
mov
popa
add
popa
xchg
cmp
jne
and
and
gs
xlat
into
imul
xchg
pop
mov
xor
gs
scas
dec
jl
sbb
(bad)
pop
xchg
pop
movs
lea
dec
jno
add
ja
mov
fst
pushf
cs
sbb
test
pushf
and
repnz
cmc
sub
aaa
(bad)
into
sbb
retf
daa
hlt
dec
fmul
aas
scas
jle
cmp
xchg
cmp
xchg
push
hlt
pushf
xchg
and
(bad)
xchg
lods
xchg
imul
inc
(bad)
jmp
push
(bad)
mov
push
je
cld
test
mov
gs
xchg
push
inc
fstp
(bad)
mov
push
mov
cs
cmp
lahf
sti
push
mov
mov
xchg
outs
mov
jecxz
iret
fld
xchg
push
jb
and
dec
push
out
retf
inc
cmp
cli
call
mov
mov
push
ja
xor
mov
sbb
je
daa
ins
mov
in
popa
cmps
leave
jp
jmp
push
sbb
ins
mov
push
(bad)
ds
idiv
jmp
jae
pop
mov
push
mov
les
aad
cmp
(bad)
sub
pop
mov
(bad)
cdq
es
ror
pop
movs
in
cmp
popa
fdiv
jno
jmp
cmp
mov
cmp
sub
pop
fcom
mov
and
test
xchg
mov
jl
dec
xchg
cmps
bound
push
inc
js
and
adc
push
mov
xor
mov
test
out
mov
arpl
fadd
adc
pusha
push
mov
scas
cmp
pop
or
jl
or
cli
sbb
imul
xor
and
jbe
pop
inc
dec
sub
pop
xchg
in
cmp
sub
push
(bad)
mov
inc
mov
or
sbb
jnp
rcr
out
sbb
in
into
ins
xchg
into
cmp
scas
push
jmp
jecxz
mov
imul
hlt
xchg
test
sbb
shr
(bad)
sub
mov
jo
out
xor
test
fnstsw
jmp
push
popa
add
(bad)
fldln2
mov
clc
and
les
data16
scas
push
push
sub
ins
add
jno
inc
sub
fdiv
lea
inc
push
pop
xchg
lods
jmp
mov
push
inc
stos
icebp
out
aas
xor
scas
loope
int
cmp
push
mov
and
das
mov
mov
out
or
loope
and
dec
test
inc
sar
lods
repnz
jmp
sbb
jl
jl
lods
jnp
mov
sub
mov
(bad)
jle
stc
inc
mov
sub
adc
push
stc
(bad)
lds
add
fidiv
mov
aad
and
jnp
dec
in
mov
nop
push
popf
aas
cmp
stos
xchg
cmp
jno
jbe
xchg
inc
lods
shl
cmps
stos
not
fidiv
cld
mov
xor
push
fwait
ror
push
ins
sub
test
fs
sbb
sbb
xor
sub
dec
xchg
in
loope
add
and
or
mov
call
jne
xchg
fisubr
add
pop
cvtdq2ps
ss
dec
leave
popa
ins
mov
sub
inc
add
cmps
shl
out
jmp
aam
mov
mov
dec
dec
icebp
mov
cmp
ror
les
stc
sub
xchg
adc
fs
jecxz
or
imul
mov
bnd
mov
loope
xor
(bad)
(bad)
push
dec
xchg
push
(bad)
cmps
sub
(bad)
(bad)
mov
cmp
aad
xlat
push
push
push
daa
xchg
rcl
push
rcr
push
repz
add
iret
pop
pop
mov
push
fldenv
push
aam
mov
mov
pop
cdq
add
adc
inc
push
into
push
dec
enter
or
int
mov
scas
push
jb
sub
mov
inc
inc
lods
pop
cmp
daa
xlat
ds
sbb
push
cmp
xor
call
bound
mov
push
xchg
(bad)
jb
cmp
dec
dec
cli
or
iret
jmp
and
les
jb
add
jnp
sub
fistp
push
in
pushf
and
pop
shl
xor
mov
jmp
mov
popf
rcl
adc
push
pop
add
sar
pop
mov
into
fnsave
push
push
add
pusha
dec
repz
cli
outs
icebp
shl
sbb
imul
retf
es
mov
inc
dec
in
lea
cmps
neg
les
js
(bad)
jnp
jns
fiadd
scas
xor
int3
inc
sub
mov
push
rcr
mov
jl
je
mov
retf
inc
les
in
cmps
lods
repz
mov
dec
xor
sbb
xchg
ret
icebp
adc
jmp
cmp
mov
leave
fild
inc
neg
imul
mov
push
jae
mov
inc
and
js
mov
fld
out
into
ror
sbb
mov
lahf
add
inc
cld
dec
cmps
outs
je
cdq
loop
or
ror
inc
fistp
icebp
push
jmp
cmp
sub
stos
fwait
xor
dec
fistp
pop
jae
mov
dec
xor
pop
jmp
fiadd
push
mov
xchg
push
(bad)
sahf
jmp
les
pop
or
xlat
jmp
jmp
sbb
add
cmp
adc
jmp
popf
mul
daa
xchg
jbe
mov
das
es
cmc
add
shl
mov
vprotb
push
rcr
or
ins
frstor
mov
ret
out
cli
jne
std
adc
sub
call
outs
jae
push
ja
mov
pop
sbb
enter
xor
sahf
dec
mov
add
pop
(bad)
jae
inc
mov
adc
ins
xor
mov
repnz
mov
gs
or
or
mov
aam
cmp
movs
sub
dec
adc
cmp
dec
xor
hlt
(bad)
in
ret
test
into
inc
sbb
ror
xlat
cli
mov
shl
dec
push
pmuludq
loopne
jo
inc
popa
mov
jnp
cmp
lahf
pushf
sbb
mov
fsubr
push
retf
lods
jbe
ds
fcomp
sbb
cmp
adc
add
pop
dec
and
clc
and
inc
iret
retf
call
xchg
add
lds
shl
add
loope
or
cmp
pop
or
inc
adc
and
(bad)
in
mov
ret
jo
fdivr
sbb
js
sub
repnz
xchg
cmc
test
mov
xchg
bound
cmp
pop
push
aas
test
xchg
and
jae
pushf
enter
mov
mov
std
imul
inc
out
shr
cmc
gs
dec
adc
mov
addr16
scas
lahf
and
push
ja
xchg
dec
rcr
(bad)
lock
cmc
mov
ins
sbb
cld
xchg
cmc
psrlq
mov
out
inc
mov
mov
or
repz
dec
jmp
daa
ret
xchg
adc
adc
sub
paddw
sbb
cwde
ins
repz
mov
loope
xchg
mov
imul
mov
repnz
and
rol
sub
push
sub
ret
sbb
mov
inc
nop
pop
(bad)
cli
mov
inc
nop
je
xchg
push
add
xchg
mov
pusha
xchg
cmp
mov
and
(bad)
xchg
aas
push
sahf
fisttp
stos
test
aad
(bad)
pop
scas
jno
inc
dec
pop
sahf
gs
lea
out
jp
push
lock
aam
nop
and
fisttp
pushf
fwait
das
icebp
pusha
ja
jl
mov
pop
sbb
sub
fiadd
movs
adc
xor
or
js
xchg
or
(bad)
call
mov
add
addr16
std
xor
mov
clc
fild
aad
inc
(bad)
push
in
sar
mov
sub
out
scas
ret
mov
and
lahf
xchg
sahf
dec
imul
call
sbb
push
lock
cmp
pop
stos
adc
hlt
fild
mov
int3
aam
dec
inc
test
fidiv
sysret
fstp
dec
xchg
fucomip
sub
cmp
gs
test
dec
fwait
daa
mov
inc
aaa
sub
ds
ror
jbe
(bad)
lods
outs
imul
mov
in
test
or
jg
inc
cmp
adc
mov
xchg
xor
xchg
jle
dec
bound
mov
in
and
adc
xor
lds
fadd
sub
mov
dec
(bad)
xor
(bad)
int3
fcmovnb
and
imul
dec
inc
cmp
mov
movs
(bad)
cmc
mov
jmp
fbstp
fstp
pushf
push
adc
or
ror
sub
dec
out
pop
mov
cmp
dec
retf
push
mov
in
pushf
(bad)
pop
dec
inc
xchg
xor
cmp
pop
xlat
arpl
imul
lods
sub
fist
shl
sub
jno
pop
std
nop
addr16
add
div
retf
aaa
mul
cmp
and
xchg
cmp
in
xchg
cmp
shl
sbb
call
(bad)
cmps
out
mov
xor
mov
jp
jnp
inc
test
out
cmp
sub
iret
pushf
sbb
in
inc
jns
push
xchg
cmc
inc
adc
mov
outs
fs
das
pop
mov
ret
jo
xchg
xchg
out
shl
lock
shl
or
add
dec
out
xor
mov
shr
mov
inc
or
in
dec
int3
outs
cld
push
push
sti
cmp
sbb
imul
dec
sbb
gs
dec
jbe
and
sar
rol
jns
inc
(bad)
movs
dec
push
add
mov
mov
sub
loopne
repz
pop
sahf
iret
fldenv
and
mov
push
ret
frstor
setns
repz
mov
pusha
add
aad
dec
jp
fs
sub
lahf
ror
arpl
mov
(bad)
repz
push
lock
cli
and
inc
fmul
ds
jb
push
inc
jbe
popa
add
pusha
je
jg
jmp
mov
add
push
out
dec
add
pusha
and
jecxz
or
and
cld
jns
hlt
add
dec
retf
outs
std
pushf
retf
test
int
mov
call
jl
push
pop
jns
ins
cmp
das
adc
(bad)
leave
inc
mov
push
mov
(bad)
adc
and
loop
addr16
dec
jle
cmp
test
cdq
dec
js
mov
jl
retf
mov
ds
mov
mov
pop
aam
rol
mov
lock
test
jg
cs
pop
jbe
fnsave
pop
clc
mov
ja
xor
(bad)
jp
shl
push
test
das
les
ja
sbb
jl
dec
sti
not
push
je
inc
in
ss
or
or
dec
xor
mov
in
push
fdivr
jno
xchg
je
fst
cdq
mov
xrelease
dec
sub
int3
push
cmp
test
xchg
imul
xchg
mov
xchg
xchg
push
or
add
dec
pop
fsubr
movs
stos
mov
ss
xor
lds
fcmovnu
inc
mov
js
mov
sub
out
mov
xor
fldenv
dec
add
mov
push
mov
mov
mov
mov
fs
mov
mov
mov
mov
fst
lods
inc
sbb
cmp
jb
subps
aas
xor
arpl
(bad)
mov
dec
data16
push
pop
push
xor
out
jmp
(bad)
popa
movs
push
mov
sahf
cmp
popf
enter
pusha
ins
cmp
xchg
ja
adc
lods
push
test
jle
jae
fsubr
into
femms
(bad)
rol
cmp
or
inc
sub
movs
xor
adc
mov
sti
mov
mov
add
xchg
dec
pop
cmp
adc
das
xlat
push
int
adc
mov
inc
ret
loope
mov
dec
xor
and
xchg
sub
or
or
ja
mov
pushf
fwait
xor
mov
jae
mov
cmp
nop
not
xor
pop
ror
and
aaa
sbb
mov
mov
sub
shr
push
pop
inc
repnz
rcl
inc
ins
retf
push
retf
js
xchg
mov
ds
aaa
mov
push
xchg
jmp
scas
jae
(bad)
pusha
mov
push
scas
cmp
imul
and
ficom
and
cwde
dec
ja
mov
fist
gs
aas
jg
in
test
or
mov
mov
push
into
fst
xlat
retf
pop
ss
(bad)
jl
out
test
pusha
fst
test
mov
leave
or
int3
or
and
mov
out
sbb
jo
jbe
daa
adc
cmp
xchg
stos
in
out
dec
mov
cld
sbb
sub
mov
nop
sbb
and
dec
and
push
out
mov
je
lea
xchg
sbb
jne
outs
out
mov
jge
or
sbb
loopne
push
fst
das
repz
push
mov
ds
xchg
popa
jno
mov
jmp
sub
and
cli
je
sbb
sbb
nop
cmps
and
les
xor
dec
shr
pop
adc
(bad)
out
sub
cmps
jge
retf
xor
jge
in
and
test
ins
loope
pop
dec
and
mov
cmp
sbb
shl
add
sbb
xlat
xor
and
jnp
stc
imul
xchg
ret
lds
bound
sahf
push
push
jmp
and
in
stos
in
retf
cmp
mov
and
and
mov
movs
cmp
les
call
add
pusha
(bad)
cld
mov
push
test
mov
jb
in
mov
test
inc
fist
sbb
xor
pop
jbe
cmps
aam
aas
mov
jb
mov
fidivr
cmps
movs
jb
jne
out
vpsubsw
lahf
daa
xchg
sub
xchg
fldl2t
adc
jl
fstp
aam
aas
xchg
pop
fwait
shld
ret
lock
pop
mov
popa
repz
pop
cmp
and
cmp
mov
loope
enter
stc
sbb
iret
in
inc
inc
sub
fimul
mov
cmp
sti
sub
fiadd
cmp
push
jno
mov
cmps
rep
cmps
cmp
rcr
mov
sub
out
mov
push
iret
adc
stos
movs
call
xchg
in
dec
popf
mov
cmp
ret
dec
xrstor
cmp
cwde
or
ins
loopne
jle
daa
shl
sub
lock
fcomip
movs
mov
ja
dec
stos
mov
aam
test
div
xor
loop
cmp
lahf
daa
in
pusha
pop
outs
ds
push
or
into
out
ja
xor
adc
mov
data16
in
fs
cdq
xchg
adc
push
sub
dec
call
mov
xchg
(bad)
stc
pop
fwait
cmp
movs
adc
mov
cmps
dec
fidivr
mov
or
aaa
popf
dec
pushf
(bad)
and
mul
int
cmps
dec
int3
stos
rcr
xchg
cmp
xor
xchg
popf
cdq
jp
jae
shl
lock
inc
jp
ss
test
lock
xchg
add
test
outs
push
adc
mov
or
lahf
cmps
retf
test
daa
or
add
hlt
loop
stos
fsub
xor
lea
sbb
pop
add
jge
popa
mov
fst
lds
lock
or
mov
repnz
loop
lock
adc
dec
sbb
imul
ins
icebp
sub
add
pop
pop
sub
mov
add
add
mov
cmp
pop
mov
or
jp
popa
retf
loopne
mov
jmp
xor
int
xlat
(bad)
fisttp
lock
xor
dec
mov
jg
inc
rcr
mov
mov
xchg
jecxz
repz
bound
cmc
pop
lock
and
neg
mov
call
mov
mov
movs
js
shr
les
sbb
(bad)
mov
xor
push
test
mov
cmp
jle
call
mov
pop
mov
sub
shl
dec
cmp
cli
ins
pop
cs
pop
cs
call
add
add
or
and
ds
push
and
push
out
loop
popa
mov
xchg
gs
jnp
cwde
ja
or
test
sub
out
lds
js
ja
ja
shl
leave
add
push
sbb
xchg
les
pop
retf
push
mov
imul
push
mov
xor
cmp
xor
bts
xor
adc
xchg
imul
sar
dec
icebp
sar
cmp
sub
inc
ficom
pop
sub
adc
dec
aaa
mov
pop
inc
push
jne
leave
shl
and
(bad)
aaa
xor
adc
cmp
inc
pop
cli
sub
or
push
out
add
aaa
ficomp
std
dec
in
ficomp
mov
sbb
jbe
sbb
out
loopne
stos
ja
movs
popa
mov
add
mov
fild
mov
dec
out
jns
or
mov
les
cmp
popf
inc
imul
retf
call
mov
sbb
pop
ret
pop
jmp
sbb
test
push
push
sub
je
jae
mov
adc
in
or
adc
adc
in
mov
jbe
push
mov
sbb
mov
sti
imul
sub
jmp
lds
adc
mov
and
mov
jp
ret
inc
(bad)
mov
mov
xchg
mov
jecxz
ins
jno
dec
pop
adc
jle
xor
jno
popa
int
pop
xlat
test
test
imul
test
(bad)
int
pop
jg
push
or
fwait
xchg
shr
dec
jecxz
mov
cmp
push
jb
jns
jmp
or
mov
push
sub
inc
mov
sbb
inc
icebp
ret
dec
bound
push
pop
mov
and
test
das
adc
push
and
das
mov
jae
aam
sbb
jmp
(bad)
es
jns
jge
not
xchg
int3
(bad)
jb
dec
icebp
xchg
dec
sub
data16
xchg
xor
add
loope
inc
push
adc
fwait
pushf
inc
sbb
movs
push
(bad)
adc
js
xchg
inc
sahf
mov
ror
lahf
sub
inc
lods
aas
mov
mov
popa
mov
popf
cmps
xor
mov
repz
aaa
mov
push
or
cmp
inc
cmp
add
scas
icebp
push
dec
cmp
ins
hlt
adc
dec
inc
stos
add
scas
mov
adc
adc
push
push
or
jl
cli
add
(bad)
addr16
(bad)
imul
sub
inc
fs
sbb
jmp
push
mov
dec
inc
rol
test
nop
movs
mov
dec
scas
sub
sub
mov
imul
aam
enter
xor
sahf
out
pop
mov
out
mov
mov
xor
pop
sub
or
dec
out
stos
ret
(bad)
xchg
cmp
xlat
cmp
(bad)
es
inc
popa
push
mov
mov
add
xchg
pushf
rcr
mov
lds
xchg
jp
and
xchg
jl
sahf
jecxz
daa
dec
div
sub
mov
sub
aam
mov
(bad)
sub
out
pop
not
jmp
icebp
out
sbb
scas
xchg
addr16
adc
xor
adc
leavew
pmaxub
mov
jo
pop
jae
lock
and
gs
sub
xchg
pop
jne
jle
pop
add
ror
stc
in
sbb
jne
xor
xor
mov
sbb
ror
xor
sbb
push
in
mov
ss
mov
ja
mov
scas
ins
bound
push
loop
mov
adc
xlat
in
dec
fsub
cwde
or
sar
push
mov
xchg
xchg
pop
dec
mov
sbb
rol
scas
ja
lock
xchg
push
push
fnsave
sar
(bad)
test
jmp
add
loope
shl
dec
sbb
and
xor
iret
repz
mov
push
pusha
cmp
(bad)
ficom
sub
push
mov
in
leave
mov
push
sub
pushf
iret
push
test
push
cs
in
mov
cli
cmp
fnstenv
fild
retf
push
sub
jg
clc
or
dec
inc
pusha
test
outs
fild
dec
ins
dec
popf
jle
shl
mov
push
sub
call
lock
mov
push
xchg
nop
and
ja
(bad)
adc
fnstcw
imul
in
mov
push
jo
adc
ins
mov
fs
pop
nop
dec
leave
mov
sbb
div
test
sbb
xchg
pop
and
and
(bad)
and
mov
sbb
shl
(bad)
mov
es
test
xchg
jl
mov
push
in
push
mov
fld
xlat
lods
das
cli
dec
in
scas
test
sub
fs
xor
in
popa
fs
adc
xor
addr16
push
ror
(bad)
aam
pop
std
imul
pop
ja
mov
test
dec
jae
test
cmps
pop
xchg
xchg
fldcw
rcl
sub
icebp
mov
jbe
cmc
mov
mov
xchg
cdq
jnp
(bad)
pop
and
ins
sbb
jo
inc
sbb
lods
daa
aaa
cli
xor
xchg
(bad)
jnp
cmps
cmps
and
mov
mov
jne
cmp
pushf
jmp
in
lds
jge
inc
dec
scas
lea
outs
pusha
and
sbb
push
cwde
ja
xchg
xchg
xchg
stc
push
test
push
fadd
dec
jo
add
push
imul
fxch
(bad)
fcomp
cmp
and
sbb
stos
or
add
pop
adc
ins
in
and
jg
sbb
cwde
mov
cmp
hlt
call
mov
icebp
(bad)
fdiv
repz
ins
xchg
test
cld
out
xchg
in
pusha
pop
sbb
int
pop
out
jle
cmp
add
ss
adc
or
jno
fnstsw
shr
adc
outs
push
(bad)
mov
sub
loopne
mov
fisub
sub
jb
pop
mov
inc
add
adc
mov
jae
faddp
cmp
xor
lea
lahf
int
lods
push
inc
adc
pop
in
jno
and
dec
cmc
xchg
mov
adc
cld
jns
or
(bad)
inc
mov
inc
push
aaa
sbb
in
movs
add
test
push
mov
in
adc
lods
xchg
cli
lods
aad
xchg
aam
xor
and
mov
ret
xor
sub
pop
movs
add
outs
int
mov
jno
les
dec
cmc
or
ds
repz
pop
inc
mov
ror
outs
outs
enter
jae
sub
mov
fwait
enter
inc
imul
xchg
pop
xlat
std
(bad)
stos
lods
cmps
stos
adc
(bad)
lea
je
push
sub
cmp
sbb
and
mov
jae
add
ret
call
mov
sbb
jp
mov
jns
pop
sub
ret
ret
pop
xchg
cmc
inc
or
fisubr
dec
add
arpl
hlt
xchg
mov
stos
push
arpl
mov
or
adc
hlt
add
es
data16
shr
dec
dec
jp
aam
xlat
lock
pop
mov
cmp
out
movs
pushf
mov
call
dec
(bad)
pop
dec
popf
das
mov
add
push
and
mov
pop
(bad)
mov
pushf
fstp
mov
fs
adc
pop
out
cdq
xor
pusha
pop
mov
sbb
adc
mov
mov
sub
or
xchg
pop
and
aas
and
(bad)
outs
cmp
popa
mov
iret
ss
push
femms
sub
mov
or
add
cmps
enter
test
das
aaa
jecxz
and
loope
inc
inc
rcl
mov
inc
mov
adc
lds
sbb
push
mov
je
pop
adc
xchg
sub
xchg
cmp
into
ja
xor
pop
sahf
cld
cmp
mov
dec
ret
adc
xchg
int
in
es
mov
movs
inc
mov
pushf
jmp
out
test
push
out
pop
or
or
sub
(bad)
mov
add
push
xchg
add
call
pop
shr
cmp
sub
mov
lds
imul
shr
stc
retf
xchg
inc
xor
ins
or
or
mov
adc
cwde
and
push
loopne
idiv
jns
add
inc
xor
sti
loope
pop
into
das
test
in
call
or
dec
jle
fisubr
in
sbb
fldenv
into
imul
pop
fdivr
xchg
xchg
movs
xor
mov
aaa
cmps
mov
cs
and
cmp
stos
retf
arpl
mov
mov
sub
les
dec
and
cld
pop
xchg
jecxz
pop
cli
rcl
cmps
lods
test
(bad)
fwait
mov
sbb
push
cdq
jp
push
shl
pushf
aas
test
test
imul
lods
add
lock
das
dec
or
mov
adc
mov
lds
jbe
and
call
into
popf
stc
cld
arpl
pop
scas
dec
pop
pop
into
ficomp
mov
nop
dec
addr16
inc
or
test
(bad)
daa
popa
pushf
in
xor
daa
fimul
dec
jecxz
sub
loope
js
push
arpl
cmps
into
scas
sar
mov
mov
or
retf
dec
xor
stc
mov
iret
fisubr
dec
mov
cmp
push
xor
and
mov
lds
out
adc
(bad)
enter
mov
sbb
(bad)
or
mov
lods
(bad)
int
ret
add
aam
push
test
inc
jnp
dec
rol
mov
cs
sbb
dec
aaa
(bad)
adc
xor
mov
jmp
sbb
add
cwde
or
or
popf
test
jns
jbe
cwde
jae
das
jo
scas
jns
push
out
push
scas
fisttp
jecxz
and
jno
dec
rcl
mov
mov
lahf
xor
in
xchg
bound
lea
gs
test
iret
gs
inc
in
pop
or
mov
das
out
push
addr16
push
fwait
outs
xchg
(bad)
scas
hlt
(bad)
arpl
aaa
lock
rcl
mov
add
nop
faddp
and
add
jno
sbb
fwait
vtestpd
bound
js
cmps
scas
mov
mov
pop
or
dec
bts
lea
push
push
fs
out
jo
iret
out
retf
pop
and
jne
fs
push
(bad)
jecxz
inc
xchg
inc
popa
xchg
push
sar
mov
mov
jbe
or
add
sahf
and
pop
adc
dec
mov
xlat
mov
lds
in
mov
test
cmp
add
std
loop
mov
sbb
mov
popa
pop
leave
ins
addr16
add
sub
sub
push
call
fadd
ss
or
cs
sub
(bad)
fidivr
sub
loope
ror
or
push
cdq
nop
test
sbb
add
mov
pop
inc
dec
pop
xor
repnz
sahf
cld
cwde
ret
sub
rol
aas
inc
mov
push
push
and
and
mov
cmp
neg
or
fcomip
xor
into
sbb
mov
cmp
dec
ds
xchg
sub
mov
push
shl
xor
mov
cld
xchg
mov
rcr
inc
les
shl
dec
inc
mov
in
iret
pop
stos
daa
jp
jecxz
mov
add
xchg
xor
fmul
cmps
and
outs
icebp
hlt
sub
call
fwait
sub
mov
fstp
dec
das
aaa
pop
pop
dec
adc
pushf
out
sar
xchg
ss
ja
dec
xchg
xchg
ins
jne
fstp
out
inc
cmc
aam
call
out
pmovmskb
pop
mov
js
push
mov
jbe
cli
hlt
enter
dec
xchg
aas
fild
loopne
xchg
in
jmp
adc
add
sar
xor
push
cld
mov
icebp
jne
xchg
jnp
jg
and
jb
push
hlt
dec
imul
ret
(bad)
iret
pop
movs
or
fist
adc
les
scas
out
or
pop
ins
pushf
call
test
(bad)
or
and
mov
imul
stc
inc
(bad)
(bad)
enter
adc
inc
fsub
or
mov
sub
jmp
jmp
jae
mov
sub
or
movs
jg
out
call
sub
pop
cmp
rcr
push
ins
sbb
repz
push
xchg
sub
popf
dec
ins
pop
lods
loopne
push
mov
jge
pop
fstp
aam
das
popa
stos
mov
xchg
fnstcw
inc
fs
shr
mov
jge
pushf
rcr
vpmadcswd
aad
dec
outs
push
cld
pop
sub
sbb
cmps
push
mov
(bad)
js
lea
dec
aaa
aad
mov
sub
sub
sub
push
rcr
out
aas
pop
dec
leave
call
sub
and
jg
std
retf
and
mov
pop
cld
dec
loop
cdq
mov
nop
jno
call
fwait
add
or
lahf
lods
mov
rol
je
pop
cmp
in
add
xor
mov
int
into
or
sbb
jno
rcr
adc
adc
pusha
dec
mov
and
mov
and
cmp
jmp
adc
(bad)
arpl
pop
popa
mov
mov
imul
enter
dec
jno
adc
dec
daa
repz
push
jl
pushf
adc
jne
pop
ins
int
mov
cmc
out
sub
mov
xor
ss
and
xchg
aaa
mov
pop
das
mov
fsubr
shr
rcr
cs
rol
outs
push
sub
dec
ja
inc
into
and
sbb
scas
adc
ret
xor
(bad)
int3
aam
ins
add
outs
sbb
retf
in
sub
sbb
mov
lea
xchg
push
and
sub
sar
sub
(bad)
add
inc
cwde
push
ins
mov
push
mov
sub
pop
stos
hlt
add
push
into
popa
es
sbb
cmp
gs
xor
push
movs
rcl
cld
movs
ds
fadd
shl
mov
fidiv
hlt
jecxz
int
rcr
add
jle
ret
dec
sbb
dec
add
mov
outs
mov
xchg
add
lds
mov
or
adc
cwde
sbb
fwait
add
push
cmps
pop
mov
nop
push
jnp
aam
and
dec
mov
call
or
pushf
jb
inc
int
and
imul
cmc
add
data16
loopne
inc
pop
push
ret
pop
aam
and
loope
(bad)
fwait
jmp
sbb
adc
add
cmps
leave
dec
jnp
jmp
push
xchg
sub
pop
jns
or
sahf
int3
fnstcw
shl
jbe
jne
wbinvd
mov
cmps
lods
push
cmc
push
je
pop
scas
stc
cmps
mov
jnp
ficomp
(bad)
push
les
cmp
(bad)
loop
imul
mov
(bad)
rcl
add
xor
add
clc
les
imul
imul
pushf
xchg
js
jecxz
iret
out
xor
arpl
add
or
ins
les
or
mov
dec
push
iret
jns
into
sub
je
imul
addr16
test
pusha
arpl
jecxz
popa
fisttp
sahf
gs
test
jo
sbb
leave
push
dec
push
jmp
push
push
sbb
or
in
icebp
sbb
dec
clc
mov
adc
icebp
jmp
outs
pop
cmp
sbb
out
call
repz
scas
add
push
cdq
pop
jge
rcl
sub
int
sti
call
ficom
scas
and
xlat
mov
cmps
outs
push
sar
fcom
cmps
pop
int
mov
push
(bad)
pusha
mov
jb
sub
adc
mov
outs
push
adc
jg
and
out
bound
push
repnz
inc
inc
shr
or
xchg
or
push
push
sub
xor
push
sub
or
retf
into
mov
popf
jmp
sbb
or
xor
fwait
dec
call
vmwrite
push
pmaxub
dec
nop
imul
mov
sbb
lods
xchg
das
adc
call
inc
lahf
pushf
loop
ror
sub
imul
vpackuswb
enter
mov
jno
adc
sub
sti
cmp
fld
inc
fyl2x
and
cmp
iret
imul
scas
or
sub
add
fimul
cmp
repnz
imul
sahf
xchg
xor
mov
stos
loop
into
xchg
cdq
pop
xchg
(bad)
mov
add
xchg
repz
rcl
repnz
mov
adc
(bad)
xor
push
shl
cwde
pop
int
xchg
mov
cdq
and
push
mov
cmps
cld
push
pop
adc
pop
push
les
jecxz
sub
icebp
(bad)
mov
stos
int
lds
movs
in
pop
jno
arpl
sbb
or
sbb
push
enter
mov
hlt
inc
sahf
inc
xor
nop
repz
cmps
and
push
aas
mov
inc
inc
cmp
lods
lock
stos
mov
sub
pop
inc
sti
sub
pusha
add
rcr
mov
cmp
outs
pusha
ds
fwait
sub
inc
cmp
xor
mov
(bad)
cmps
sub
jo
clc
dec
push
mov
jmp
mov
loop
lods
(bad)
dec
inc
adc
add
adc
loope
adc
xor
xchg
adc
cwde
enter
inc
add
or
inc
xor
pop
push
test
outs
pop
jne
dec
dec
(bad)
sar
adc
mov
retf
or
out
inc
pop
call
punpckhwd
push
pushf
ds
bound
fldcw
fnstcw
mov
pop
imul
pop
mov
stos
(bad)
ins
pop
fnsave
scas
push
push
cmps
lods
mov
xchg
sbb
cdq
mov
add
push
and
enter
jle
retf
and
push
pop
(bad)
mov
sbb
and
ins
inc
dec
mov
xchg
mov
xlat
out
movs
add
retf
retf
xchg
loopne
push
(bad)
imul
adc
fistp
push
in
test
popf
dec
add
jbe
jg
mov
lahf
and
add
lahf
ins
sub
fst
mov
adc
pusha
out
sbb
jnp
clc
xor
ret
mov
fsub
out
fimul
into
mov
inc
push
cwde
mov
pop
pop
push
cmp
cli
scas
inc
mov
mov
mov
js
rol
pop
jmp
ror
lods
inc
sbb
fild
pop
bound
adc
leave
hlt
ret
mov
pop
xor
dec
jno
mov
call
jmp
mov
mov
xor
fwait
retf
imul
push
not
and
fucom
adc
ja
cs
clc
(bad)
out
sbb
pushf
push
lahf
mov
cmp
iret
mov
inc
imul
cmp
jle
cmp
sbb
dec
fisttp
ror
ror
lods
(bad)
test
sub
sbb
popa
pop
lock
mov
xchg
inc
xor
mov
arpl
fidiv
es
xor
push
aaa
inc
ds
dec
push
int
sub
nop
xchg
(bad)
aas
jae
fwait
pop
xchg
pop
aad
into
sub
sub
repz
push
jnp
push
ret
sbb
retf
inc
lock
ja
into
mov
adc
cdq
adc
test
enter
adc
shl
pop
mov
inc
xchg
jle
inc
mov
mov
push
xchg
fnsave
outs
push
jp
jmp
cmp
mov
movs
xor
pop
les
mov
push
xchg
dec
sbb
cmp
stos
mov
idiv
lock
xor
fwait
sub
jno
sub
jnp
dec
(bad)
gs
inc
mov
mov
inc
fcmovb
mov
(bad)
dec
inc
out
pushf
pushf
mov
(bad)
rcl
cmps
retf
fs
xor
dec
jno
xor
dec
push
and
daa
nop
imul
dec
sar
mov
dec
arpl
stos
inc
iret
bndstx
pop
sub
mov
pop
sti
fcom
out
jnp
div
dec
mov
push
clc
jnp
es
fnsave
jg
ss
mov
cmp
(bad)
fs
xor
or
mov
adc
mov
into
xchg
fstp
inc
xor
ret
jle
repnz
push
sbb
push
out
cmp
adc
cmp
test
popa
cwde
lods
dec
inc
inc
div
inc
inc
es
(bad)
arpl
enter
inc
imul
sahf
cld
ins
loope
xchg
(bad)
iret
leave
mov
push
stc
add
ror
push
jge
aaa
idiv
add
arpl
pushf
cmc
or
or
retf
pop
push
cld
mov
push
pusha
call
push
dec
mov
mov
xchg
mov
push
push
out
or
and
stos
shr
into
sbb
pop
dec
pop
cmc
or
sub
pushf
pop
clc
cmp
dec
into
cmp
in
adc
cld
jg
dec
push
dec
imul
mov
pop
push
pop
call
fwait
lock
sbb
add
cmp
xor
xlat
jle
mov
sbb
loopne
mov
movs
cld
xor
ins
push
ds
and
or
xor
fisub
mov
push
jmp
adc
and
scas
and
jb
lock
repz
jns
rep
fwait
sub
jb
jae
out
mov
xor
loopne
or
jmp
dec
mov
repnz
popf
jne
inc
mov
inc
(bad)
outs
fadd
pop
mov
add
lahf
rcl
add
add
scas
mov
pop
push
push
ins
mov
ds
cdq
je
dec
jmp
(bad)
xor
mov
inc
jle
mov
test
adc
fs
jae
lods
cs
ins
jmp
jl
xchg
pop
js
bound
sbb
mov
mov
test
sbb
or
adc
mov
add
dec
loopne
out
sub
pop
inc
ja
push
mov
pop
sub
icebp
xor
stc
rcl
inc
xor
in
jp
jecxz
xlat
sbb
add
jle
jns
das
xchg
ds
lea
inc
xor
mov
xchg
cmovno
test
ret
pop
pop
jmp
in
stos
jl
fisttp
and
dec
sub
pop
and
sar
bound
shl
inc
in
lods
sti
pop
not
xchg
retf
test
pop
scas
or
into
or
out
out
ss
popf
add
loopne
cmc
and
sbb
inc
sbb
loop
mov
movs
adc
test
mov
xor
mov
retf
cwde
icebp
(bad)
cmps
xchg
popa
mov
sbb
retf
js
dec
pop
ffree
xor
aad
cmc
(bad)
(bad)
iret
rol
js
jl
or
dec
lahf
movs
mov
pop
inc
fcmovne
jnp
sbb
retf
inc
loop
stc
sub
push
jno
add
jmp
or
(bad)
push
cmp
rol
(bad)
dec
idiv
adc
jne
sub
ror
jnp
mov
aaa
add
icebp
pop
ins
adc
add
sbb
cdq
mov
mov
cmps
pop
lds
inc
pop
cmp
push
(bad)
mov
ds
jl
push
mov
call
mov
pushf
xchg
jae
adc
cs
inc
retf
push
mov
je
mov
(bad)
shl
data16
ds
jge
mul
into
imul
mov
mov
push
xor
jle
inc
in
fmul
popa
(bad)
fadd
inc
arpl
mov
shr
out
stos
push
in
leave
xor
ret
sub
ret
int
aam
add
dec
repnz
not
loop
jmp
sahf
xor
push
jnp
pop
les
lods
adc
push
pushf
pop
es
hlt
pop
test
int3
js
cwde
add
das
out
int
movs
add
nop
adc
jmp
dec
or
lds
scas
xchg
inc
add
inc
dec
sub
mov
mov
mov
sbb
xor
pop
inc
(bad)
test
imul
mov
stos
(bad)
cld
mov
pop
fwait
sti
mov
push
pop
call
int
xchg
aaa
loope
stc
jmp
outs
push
loop
aas
int3
arpl
(bad)
jg
sar
xchg
sahf
mov
fwait
add
pop
call
lahf
fidiv
push
loopne
inc
dec
mov
add
std
int3
fdiv
je
push
mov
sub
dec
(bad)
jle
fidiv
bound
or
and
lds
jge
repnz
xchg
cmc
imul
jne
mov
inc
lods
jecxz
scas
fisubr
cmp
inc
gs
jo
fucomp
or
adc
inc
jg
add
pop
iret
hlt
popa
fcom
ss
mov
imul
push
std
enter
sub
mov
dec
fidiv
fs
adc
fcom
dec
fdiv
sahf
cs
bound
sub
imul
outs
mov
fidivr
lea
ins
int
push
mov
in
(bad)
outs
pop
dec
sub
aas
aaa
imul
ret
xchg
adc
dec
mov
add
fistp
pop
cmp
fucomp
jecxz
fdivr
jmp
mov
dec
loope
sub
cmps
cdq
std
inc
fidivr
dec
xchg
sbb
idiv
imul
mov
xchg
mov
lods
test
jp
sbb
in
sbb
out
mov
mov
sbb
dec
mov
ret
test
test
and
add
cs
adc
jecxz
cdq
mov
xchg
sti
out
mov
and
retf
ret
dec
stc
stos
mov
jmp
data16
hlt
ja
mov
mov
sub
and
adc
enter
fwait
sahf
rcr
mov
mov
das
das
xchg
push
pop
out
(bad)
cmp
mov
in
data16
jmp
mov
dec
fdiv
mov
push
out
dec
pop
int
pop
retf
test
jmp
jbe
push
jmp
pop
cmp
jns
pop
add
(bad)
lahf
xchg
and
cmp
inc
mov
sub
sar
jge
and
and
retf
xchg
jns
in
fadd
es
jns
mov
and
mov
adc
inc
aas
dec
xor
into
mov
mov
mov
out
jb
std
or
inc
mov
mov
mov
fs
pop
cmp
enter
mov
jne
jle
imul
cmp
jbe
pop
scas
shl
jmp
fnstsw
pop
bound
add
adc
inc
enter
jp
xchg
adc
xchg
clc
in
and
dec
adc
mov
ds
jbe
cmc
mov
sub
mov
mov
adc
adc
pushf
(bad)
mov
jo
jp
test
add
(bad)
mov
or
cmp
clc
pusha
repz
jge
sbb
hlt
inc
jae
mov
add
scas
pop
adc
mov
pop
pop
loopne
inc
xchg
call
iret
stc
das
jmp
mov
loope
clc
push
imul
inc
adc
xchg
les
cdq
sub
outs
mov
push
adc
cmps
psubq
rcr
sub
leave
aaa
adc
int
jnp
test
pop
scas
sbb
cwde
jbe
call
jns
imul
leave
push
jp
scas
add
arpl
stos
jns
cdq
(bad)
dec
add
movs
jecxz
clc
inc
int3
jmp
push
adc
pop
add
adc
and
repnz
inc
into
mov
mov
cdq
mov
mov
(bad)
ds
pop
adc
mov
adc
sbb
arpl
loope
movs
mov
adc
xchg
(bad)
ret
retf
sar
lahf
xchg
fisttp
dec
mov
dec
sub
push
mov
jno
xor
ss
sub
xchg
mov
dec
cmp
in
lds
sub
movs
test
cmps
cmp
bound
cmp
or
loopne
ror
sub
fld
in
mov
mov
mov
pop
jmp
lods
adc
nop
add
push
call
mov
nop
xchg
add
pop
jo
ss
dec
cmc
imul
mov
ds
mov
out
cmovp
add
repz
loope
and
push
repnz
dec
and
sub
cmp
push
loopne
push
das
cld
fcom
test
mov
in
leave
icebp
push
test
push
lds
out
cmp
std
lods
movs
fadd
sub
push
retf
jecxz
in
adc
adc
or
rcl
cmps
int
jle
hlt
adc
pop
adc
push
push
test
out
popa
or
pop
adc
or
adc
mov
sti
mov
jno
inc
nop
dec
jg
movs
lahf
xchg
cmp
adc
(bad)
or
push
fcmovne
pop
pop
push
outs
mov
inc
add
mov
enter
in
je
ins
pusha
push
or
call
dec
jbe
in
push
push
popf
hlt
fdivr
arpl
xchg
iret
pop
or
dec
cmp
loope
scas
icebp
test
xor
mov
hlt
xor
jecxz
adc
cld
repz
adc
mov
jmp
xchg
call
sbb
outs
mov
mov
cmp
int3
xchg
test
mov
jno
sub
adc
dec
imul
xchg
jbe
fisub
inc
pop
jb
sub
das
adc
ds
add
call
adc
push
leave
in
adc
or
fdiv
jl
add
cmp
or
movs
xlat
add
cld
jae
xor
and
push
dec
push
ins
outs
fiadd
gs
out
popa
inc
cli
aas
cmp
and
sub
jp
xchg
add
(bad)
lock
xor
pop
add
leavew
ins
(bad)
mov
(bad)
xchg
lods
cli
push
(bad)
xchg
pop
test
ss
and
outs
sbb
dec
cdq
xchg
sbb
and
push
jb
inc
fucomi
call
popa
sbb
mov
push
xchg
imul
mov
movs
xchg
retf
jmp
mov
or
inc
push
cmp
and
xor
xchg
or
movs
ds
add
(bad)
(bad)
mov
or
lds
sbb
and
das
jl
out
cmps
mov
dec
aas
jg
cmp
adc
lods
jle
int
in
sub
stc
inc
fsub
ja
push
in
cwde
in
arpl
bound
xchg
retf
xor
fldenv
call
ret
retf
(bad)
repnz
mov
iret
ss
jbe
dec
pusha
test
(bad)
shr
sbb
inc
jb
scas
into
cmp
call
inc
pop
sub
sbb
out
cs
mov
fbstp
int
clc
mov
bound
sub
(bad)
rcl
dec
mov
(bad)
pop
dec
repz
iret
sbb
inc
ins
mov
enter
in
push
xchg
inc
iret
jl
scas
cmc
or
add
loop
je
adc
stos
or
mov
sbb
sub
sbb
mov
in
mov
mov
inc
data16
outs
stos
enter
push
mov
jns
mov
jl
pop
sub
pop
sub
std
sbb
loope
and
cmp
(bad)
cmp
leave
fbstp
jae
inc
push
aaa
jp
push
fnstsw
cmp
push
cmp
cmp
push
scas
pop
repnz
xor
push
lods
movs
aad
or
mov
mov
push
loope
mov
cmps
add
popa
mov
aas
add
mov
gs
and
mov
shl
fisub
loop
mov
cwde
rol
popa
jne
push
mul
int
or
movs
jnp
jl
mov
iret
mov
inc
stc
stos
jnp
ja
test
mov
add
and
std
sub
loop
out
popf
cmc
fimul
inc
cmp
or
fiadd
mov
out
xchg
adc
mov
jle
cmp
cwde
add
mov
outs
mov
ins
mov
cmp
and
mov
mov
jmp
fild
pop
in
(bad)
and
or
xor
jp
push
xor
aas
imul
jb
jl
rcl
xchg
dec
mov
repz
cmp
pop
sub
pushf
jmp
mov
ins
add
or
mov
push
jecxz
xor
(bad)
int
cmp
(bad)
outs
jnp
hlt
mov
(bad)
or
popa
loopne
out
cmp
enter
mov
test
jge
dec
push
cmp
jae
mov
sbb
fucomi
and
adc
sbb
add
jecxz
push
repz
aam
pop
sahf
imul
push
fsubr
iret
js
xchg
cld
fst
(bad)
pop
cmp
stos
icebp
repz
jne
mov
icebp
xor
mov
hlt
aad
xchg
aaa
inc
std
pop
aaa
push
fild
movs
iret
and
sbb
adc
pop
outs
hlt
inc
jmp
jl
xchg
in
mul
pusha
jmp
inc
pop
jmp
shl
mov
jl
and
sbb
cmp
mov
cmp
or
js
aam
fsubr
daa
ins
outs
jbe
nop
mov
jge
into
add
xchg
aaa
push
jl
mov
(bad)
shl
jb
xchg
add
in
repz
ret
mov
(bad)
sbb
sub
ds
std
test
sbb
cld
mov
out
push
xchg
add
aaa
hlt
push
sub
int3
cli
ins
call
ins
fisttp
and
not
inc
lods
ret
and
xchg
mov
(bad)
neg
loopne
pop
mov
add
mov
dec
bnd
and
add
jg
pop
xchg
(bad)
ss
shl
test
dec
sub
push
jmp
inc
or
xor
test
fcom
iret
jbe
ja
push
mov
sub
rol
push
mov
mov
xor
and
hlt
iret
cs
ins
or
xchg
aas
add
adc
jg
mov
push
sub
fdivr
adc
cwde
mov
(bad)
es
pop
popa
ds
push
dec
repz
cmp
adc
xchg
ins
data16
sub
inc
adc
rcr
jno
(bad)
movs
mov
stc
jo
in
mov
jns
cmp
and
out
popa
jl
aam
test
inc
imul
movs
mov
(bad)
mov
js
adc
sub
shl
into
gs
add
mov
ret
adc
fadd
mov
mov
mov
mov
std
movs
neg
xor
or
es
aad
push
ins
push
or
into
xlat
or
ret
adc
call
mov
repz
pusha
js
nop
and
fucomip
data16
icebp
jbe
fisttp
jecxz
sub
shr
mov
icebp
mov
lahf
add
fnstsw
add
dec
outs
adc
xchg
add
mov
xor
dec
jno
xchg
push
jmp
cmps
push
stos
scas
xchg
fstp
add
loope
scas
retf
adc
test
inc
test
hlt
pop
int
dec
(bad)
or
adc
sub
(bad)
push
push
lea
iret
fimul
or
mov
call
lods
cmp
je
mov
addr16
sub
jmp
jno
xor
sub
mov
jnp
int
push
js
mov
in
jae
stc
aaa
fild
mov
ins
add
xchg
in
ss
clc
dec
add
cmps
ins
and
mov
lahf
jge
fistp
scas
sub
mov
adc
dec
ficom
aam
or
push
gs
(bad)
fnsave
in
data16
cmp
ds
movs
jb
push
push
mov
sar
jb
lea
push
in
push
mov
sbb
mov
outs
test
scas
mov
mov
xchg
or
dec
outs
push
(bad)
jle
mov
inc
push
xchg
data16
out
push
add
and
jb
adc
push
call
cdq
fdiv
clc
pop
mov
retw
test
es
fdivr
imul
xor
cmp
ja
jmp
jge
pop
xor
neg
sub
mul
test
inc
xchg
je
rcl
mov
push
es
je
fs
test
pop
add
adc
clc
cmp
aas
or
push
mov
test
repnz
xlat
out
ret
aas
push
mov
ret
mov
adc
outs
pop
inc
add
test
adc
cs
inc
push
ja
mov
jmp
or
xchg
clc
shl
sub
mov
cwde
adc
aad
call
retfw
push
(bad)
(bad)
loope
adc
jnp
mov
scas
pop
sbb
in
jo
les
xchg
sbb
div
push
push
and
sbb
call
jecxz
lods
call
sbb
cdq
mov
mov
pop
mov
call
xchg
jmp
xchg
mov
std
cmp
retf
add
jge
push
push
loope
test
in
lock
dec
rcl
xchg
test
mov
sbb
aas
dec
pushf
inc
fild
out
js
frstor
sbb
int
inc
fisub
pop
pop
jnp
arpl
mov
addr16
popa
sbb
js
mov
(bad)
(bad)
sti
les
mov
push
lahf
aaa
push
adc
xchg
test
cmp
mov
sbb
dec
lahf
in
sub
fild
adc
mov
stos
jb
call
sbb
aas
in
xchg
mov
mov
or
loopne
aas
xchg
dec
gs
and
mov
mov
pushf
pop
or
jne
xchg
jl
scas
xor
aad
pop
mov
mov
(bad)
lea
mov
(bad)
xchg
test
scas
repnz
test
frstor
nop
inc
cli
fcom
clc
push
push
push
cli
dec
dec
call
dec
or
iret
in
leave
sbb
add
mov
cmps
xlat
mov
jle
or
sub
ss
int3
repnz
aam
mov
mov
lds
lahf
jns
sub
pop
adc
pop
jge
movs
clc
scas
xchg
pop
jmp
cmp
test
rol
inc
iret
mov
mov
sbb
cld
jnp
sub
cmc
push
adc
int
inc
call
loopne
jno
js
adc
add
jbe
or
jg
xor
test
jp
sbb
inc
call
push
pop
adc
shl
sub
push
mov
mov
repnz
(bad)
je
xchg
into
lods
shl
(bad)
(bad)
sbb
loope
mov
hlt
jmp
xchg
mov
jl
jnp
push
add
mov
or
mov
pushf
xchg
pop
cmp
test
lahf
std
(bad)
in
sub
leave
adc
jl
inc
pop
mov
shl
aad
sub
into
rcr
loopne
push
hlt
push
je
ja
mov
and
test
aad
and
nop
pop
push
cwde
push
xchg
jnp
imul
mov
(bad)
dec
adc
bound
or
sbb
imul
and
fwait
xor
cmp
sub
daa
mov
ret
(bad)
int
pop
mov
les
in
loope
push
mov
dec
jbe
jle
(bad)
jb
push
jns
push
cmp
dec
adc
imul
adc
mov
dec
(bad)
out
ret
jnp
cld
cmp
mov
test
add
xchg
dec
ret
pop
mov
out
jmp
push
adc
pop
in
and
pop
fsub
out
cmp
jb
sbb
(bad)
mov
mov
xchg
jb
outs
in
add
xchg
adc
call
stos
int
xchg
test
lods
inc
push
inc
ss
rcr
cdq
retf
add
mov
dec
mov
inc
out
stc
shr
and
inc
test
ja
jmp
retf
jno
les
jmp
and
xor
cmps
lds
loop
pop
pop
and
imul
or
mov
call
hlt
xor
(bad)
sahf
pop
dec
loope
add
fcomp
dec
sti
int3
call
dec
push
je
mov
mov
cs
mov
imul
and
nop
stos
sbb
(bad)
scas
cmp
add
stc
cwde
in
jmp
lods
push
inc
sub
mov
out
jmp
mov
mov
jp
into
dec
out
ins
mov
lea
mov
into
pop
cdq
pop
fild
in
xchg
cwde
aaa
mov
out
(bad)
(bad)
into
sbb
inc
hlt
dec
push
lock
dec
adc
loopne
xchg
repz
test
in
aad
pop
loope
mov
(bad)
aad
aad
jnp
je
outs
sub
push
sbb
pop
or
mov
cmp
lods
out
retf
lock
(bad)
jmp
fs
jb
das
fcmovb
test
fldenv
push
loop
(bad)
pop
cld
ins
call
ins
sbb
adc
jno
adc
mov
xchg
jg
ins
call
pop
test
fnop
push
push
push
mov
fild
adc
jle
mov
dec
xor
inc
cmps
pop
xchg
xor
pop
sub
stos
ss
nop
push
mov
jnp
pop
repnz
ret
or
adc
jb
int3
add
inc
xchg
sub
jno
inc
mov
pop
call
inc
xor
cmc
shl
nop
sub
mov
xchg
jno
aad
or
pop
mov
mov
popf
cmp
pushf
cmps
dec
add
adc
xchg
iret
mul
shl
ret
inc
push
pop
sub
dec
pushf
sahf
bound
aas
pusha
add
rol
lds
mov
jecxz
jae
mov
ret
cmp
mov
pop
mov
callw
and
shl
popa
rol
pop
idiv
xchg
push
mov
mov
adc
mov
fs
pop
fist
sbb
mov
jp
jl
add
ds
adc
jns
dec
sar
lods
das
mov
cmp
mov
push
bound
and
lds
push
mov
adc
adc
arpl
out
xor
jg
lea
icebp
or
inc
mov
jmp
cmp
xchg
inc
inc
movs
mov
xor
inc
mov
ds
dec
push
pop
int
jnp
jnp
xlat
aad
pusha
pushf
std
and
jb
sbb
adc
es
mov
add
nop
mov
dec
xchg
jecxz
sahf
mov
mov
sub
(bad)
mov
mov
push
dec
shl
dec
das
movs
clc
popa
(bad)
mov
mov
pop
sbb
dec
push
shl
pop
ret
ffreep
sbb
in
jno
inc
jnp
add
ror
ror
ret
lods
inc
mov
jl
shl
and
jl
mov
add
aas
jmp
dec
mov
xchg
loop
fist
mov
pop
xchg
mov
mov
cwde
bound
sub
cmp
add
xchg
not
rcl
pop
lods
mov
xor
fimul
mov
pop
icebp
xor
std
or
sti
test
cmp
mov
cmp
and
(bad)
mov
call
ja
jecxz
sbb
mov
push
and
xchg
outs
push
push
xchg
outs
sub
mov
dec
add
mov
dec
mov
cmp
pop
xchg
push
rcr
mov
(bad)
scas
sub
rol
rol
(bad)
clc
loope
or
pop
aas
ja
xchg
pop
into
add
stos
add
popa
xor
popa
add
mov
dec
xor
movs
pusha
cld
es
sbb
pusha
xchg
mov
(bad)
(bad)
out
push
shl
jmp
fcom
repz
xor
xor
arpl
popa
outs
jmp
inc
xchg
xor
push
test
sub
xor
loop
mov
inc
or
je
sub
xor
(bad)
loopne
mov
inc
sub
(bad)
movs
jg
in
and
mov
add
inc
not
pop
sbb
in
xlat
xchg
leave
in
xor
sbb
pop
jne
inc
or
mov
and
fcomp
or
mov
jecxz
pop
or
pop
outs
iret
mov
pop
fisub
sub
popa
cmp
std
inc
jle
cmp
sbb
mov
xor
daa
or
data16
pusha
test
xchg
push
enter
popa
ins
stos
sub
repz
sahf
sti
sbb
popf
inc
arpl
loop
or
mov
inc
mov
out
fisubr
into
xchg
or
mov
adc
xor
push
std
(bad)
fcomp
mov
(bad)
int3
and
in
out
jo
pop
sub
aaa
rol
push
ret
icebp
jecxz
dec
sbb
cmp
mov
fwait
xchg
cs
mov
pop
dec
call
pop
repnz
lock
aad
mov
fld
jns
or
sahf
xor
ror
jns
dec
inc
cmp
test
add
mov
(bad)
in
sub
mov
add
mov
cmc
bound
dec
fmul
out
dec
iret
xchg
inc
dec
popa
dec
xor
inc
stos
cwde
(bad)
push
div
mov
outs
jne
outs
lock
pop
or
shl
pop
mov
adc
mov
mov
repz
pop
xchg
mov
sbb
test
in
mov
dec
xor
sub
mov
jp
xchg
jp
cmp
lahf
out
pop
ja
dec
pop
rcl
addr16
in
jg
and
(bad)
and
gs
xchg
dec
push
xor
outs
and
push
and
sub
adc
cmp
shl
shl
adc
sbb
(bad)
mov
mul
push
cmps
adc
in
pop
xor
pop
gs
jmp
clc
xchg
loope
xor
push
sbb
or
call
sbb
shl
lea
xor
fwait
mov
retf
sub
mov
xor
and
iret
(bad)
inc
jbe
mov
nop
stc
mov
jmp
push
xchg
loop
scas
lds
sub
popf
fldcw
xchg
lods
mov
out
sub
add
enter
out
out
mul
cmp
or
push
mov
(bad)
ds
out
jmp
or
call
loop
pop
neg
xchg
cli
out
mov
adc
inc
add
gs
test
mov
ins
aas
ins
in
xor
jmp
mov
scas
xchg
jle
pusha
jmp
mov
sub
xor
iret
or
and
aam
mov
xor
adc
lahf
leave
jbe
nop
popa
shr
pop
xor
sub
test
repz
jbe
add
mov
popa
ss
stos
sub
xchg
push
cli
mov
out
je
xchg
sbb
dec
fcomp
jne
add
stos
mov
cmc
pop
dec
cld
ins
add
scas
mov
dec
out
cmc
add
jb
push
nop
test
pop
cmp
dec
fidiv
sbb
js
push
mov
stos
jg
dec
jne
daa
push
addr16
dec
sbb
and
sub
das
xor
pop
rol
scas
sbb
mov
mov
xchg
mov
sar
pop
clc
cmp
rol
stos
pop
fcomp
mov
cmp
fsubr
pop
imul
retf
lods
push
int
jno
inc
pushf
and
ret
lock
inc
xchg
inc
ds
pop
sti
(bad)
mov
icebp
cdq
sbb
inc
out
gs
(bad)
fcmovnbe
retf
adc
xchg
int
pop
mov
push
repz
pop
sub
jg
cwde
ret
mov
xchg
push
cmp
adc
xchg
inc
and
mov
cmp
add
mov
loope
fisub
push
mov
or
jbe
xchg
rcr
cld
fiadd
aas
fdiv
adc
jmp
xchg
leave
sbb
mov
jmp
mov
mov
cld
int
lea
mov
je
cmp
and
push
cmps
mov
popa
jae
jg
jne
mov
adc
retf
jp
adc
rcl
sbb
repnz
mov
mov
es
cmp
sbb
or
add
aad
cmps
ds
pop
movs
and
sahf
xchg
(bad)
stos
cmp
(bad)
fidiv
and
arpl
cdq
push
mov
cmp
(bad)
mov
cmps
dec
dec
ds
out
push
leave
out
adc
or
test
adc
add
cwde
cmp
mov
xchg
cmp
mov
jl
xchg
mov
xor
dec
and
add
pusha
xchg
jae
cmps
je
sub
loope
nop
and
xchg
lods
shl
(bad)
loop
les
xchg
add
into
std
cmp
inc
jmp
pop
ins
fldlg2
push
and
into
or
dec
mov
xchg
mov
jge
or
arpl
out
test
add
pop
fs
inc
mov
mov
out
cwde
out
icebp
fwait
stos
cdq
add
shl
adc
sbb
sbb
push
or
das
ins
cmc
ret
mov
push
jg
mov
lds
aad
in
out
fbstp
loopne
push
test
popf
mov
sub
jns
ror
pop
(bad)
push
sbb
sub
mov
xchg
adc
push
mov
aad
imul
mov
ins
jg
hlt
push
js
repz
pop
adc
xchg
pop
sbb
xchg
int
sub
iret
fs
in
pop
mov
popf
mov
dec
pop
(bad)
and
aaa
ins
and
retf
xor
add
not
pop
sbb
out
test
cmp
sub
sbb
sub
dec
mov
and
cmp
movs
inc
cwde
cs
scas
push
jp
cmp
hlt
jne
imul
dec
cmp
repz
mov
push
aam
mov
stos
mov
dec
lods
sub
pop
(bad)
mov
clc
lea
jecxz
mov
inc
lea
sbb
popa
pop
lds
aas
not
push
push
out
popa
dec
loop
inc
sbb
add
and
(bad)
pop
jns
fidivr
stc
daa
and
rcl
push
cs
cmps
sub
repnz
outs
sub
sahf
daa
xor
std
jne
rcr
mov
pop
mov
fadd
call
mov
out
scas
loopne
inc
hlt
cwde
popa
(bad)
mov
stos
and
push
std
add
es
aaa
mov
jge
cmc
cmp
fld
mov
cld
or
sub
lock
bnd
(bad)
(bad)
and
xchg
mov
dec
lahf
xor
jo
push
jmp
mov
fldenv
pusha
cmps
imul
iret
adc
loope
cli
xchg
sti
cmp
test
pop
dec
xor
pop
dec
movs
cmp
xor
das
sbb
ja
les
xor
cwde
lahf
adc
xlat
cdq
lock
ret
cmp
push
add
data16
jae
gs
js
out
pop
in
movs
push
sti
imul
sub
mov
add
mov
sub
cmp
and
add
fs
repz
cmps
retf
adc
mov
leave
pop
out
lods
je
mov
or
push
sbb
stos
lods
fisubr
jg
xchg
punpckldq
das
pop
(bad)
sbb
out
mov
sub
push
inc
in
imul
dec
into
cmps
inc
or
mov
dec
lahf
sahf
push
mov
and
pop
xor
outs
movs
mov
in
cmp
scas
out
pop
idiv
adc
mov
adc
xor
pop
int3
and
(bad)
imul
nop
mov
sbb
frstor
dec
test
data16
dec
jmp
cmp
rcr
push
adc
in
loope
fstp
in
pushf
xchg
dec
cmp
sbb
loopne
mov
nop
arpl
fnstsw
or
gs
test
cli
push
sub
repnz
fisubr
inc
lock
leave
xor
(bad)
xchg
outs
sahf
mov
dec
int3
and
ds
mov
pop
jp
xor
cmp
mov
ret
cmp
mov
jb
ror
adc
retf
mov
xchg
fs
ror
pop
repnz
jns
mov
push
mov
and
ficom
int
mov
repnz
pop
ret
push
xor
sbb
cli
sub
mov
jmp
and
xlat
pop
nop
dec
gs
dec
cmps
je
cmps
add
xchg
mov
add
rol
jmp
push
add
jge
inc
in
xor
mov
ja
je
lahf
adc
fxch
push
call
fstp
aad
adc
push
cmp
scas
cli
pusha
scas
xchg
les
pop
inc
dec
xor
inc
mov
retf
imul
mov
push
shl
xor
mov
(bad)
lds
pop
mov
jp
icebp
test
push
mov
sbb
iret
sbb
int3
cmp
lods
push
(bad)
and
cmc
push
mov
adc
xor
iret
sbb
pop
ret
adc
shr
shl
mov
push
cdq
aad
adc
int3
adc
push
sub
mov
mov
xor
mov
outs
push
icebp
cld
sbb
pushf
ins
shr
mov
or
and
cmp
pop
push
cmp
loopne
mov
push
outs
or
ja
or
pop
add
xchg
jle
adc
mov
mov
mov
adc
xor
or
push
cmp
sbb
loop
jecxz
dec
(bad)
cmp
ds
sahf
push
pop
cmps
fwait
adc
movs
push
arpl
and
xlat
mov
mov
mov
xchg
jnp
sub
cli
xchg
cmps
push
js
aaa
loope
add
cmp
adc
data16
cli
add
aaa
lds
enter
lods
cmp
dec
xor
jle
push
jb
push
and
rcr
mov
and
push
fwait
sbb
dec
jne
mov
mov
inc
mov
jnp
lods
(bad)
xchg
mov
inc
mov
xchg
test
fidivr
push
sbb
(bad)
jae
push
cs
xchg
jo
inc
nop
pushf
repz
retf
and
adc
ret
xchg
pop
stos
in
sbb
out
sub
ficomp
std
mov
or
push
stos
pop
lods
push
out
(bad)
mov
in
popf
pusha
sbb
out
aad
in
pop
movs
cmps
cmps
ret
outs
(bad)
adc
cmp
shr
out
cmps
fisttp
mov
add
jge
xchg
xchg
cmp
jns
dec
pop
ret
adc
xchg
xor
dec
ja
cli
xor
xchg
pop
(bad)
jmp
movs
cld
jo
cmp
sar
jecxz
test
cmp
dec
out
fs
sub
xchg
or
pop
aaa
(bad)
fidiv
mov
outs
jmp
retf
cmp
cld
adc
fstp
mov
and
cmp
mov
xchg
cmc
xchg
sub
pop
sti
cld
inc
or
jp
shr
int3
pop
xchg
dec
out
push
jmp
lock
ror
lahf
cmp
mov
sbb
mov
pop
xchg
mov
mov
push
retf
mov
sbb
test
xchg
mov
sub
cmp
pop
cmp
mov
xchg
pop
in
ins
pop
xchg
ret
(bad)
push
lock
repnz
stc
cli
cmp
popa
mov
test
cmps
mov
push
jno
jns
cmp
movs
sub
jecxz
xchg
sbb
fcom
pop
lahf
popa
je
in
xor
and
scas
aam
xor
ficom
push
addr16
or
mul
cmp
add
jb
stc
mov
and
push
iret
ror
in
jne
add
xchg
imul
(bad)
stos
sbb
test
mov
scas
dec
xor
ret
jbe
sub
call
add
je
push
test
icebp
jbe
stos
jne
mov
and
stos
mov
mov
xor
lahf
dec
outs
scas
ja
mov
inc
out
retf
out
jmp
dec
enter
loopne
(bad)
lods
push
adc
mov
shr
xor
xlat
adc
loop
sub
mov
mov
(bad)
jmp
sti
mov
cwde
xchg
xor
push
aas
dec
daa
dec
nop
fs
daa
xchg
sbb
int3
jne
pop
(bad)
rcl
xchg
std
cmc
rcr
xchg
pop
mov
or
call
pop
das
ins
popa
cld
jnp
loope
sbb
or
dec
push
add
mov
mov
inc
mov
fcomp
adc
mov
push
push
cs
mov
inc
vucomiss
sar
cs
inc
jmp
xchg
int3
and
mov
int3
(bad)
gs
fcom
retf
aas
faddp
(bad)
fimul
sub
lods
repz
fwait
xchg
pop
sub
mov
and
scas
lods
sbb
jae
add
push
adc
push
nop
push
test
int3
jp
arpl
scas
lds
jecxz
sbb
call
pop
inc
xor
imul
jns
pushf
add
inc
mov
in
or
pop
fwait
pushf
jnp
fld
pop
lods
fs
lock
add
mov
cmp
lds
mov
ins
sub
lods
lahf
pusha
mov
and
mov
repnz
stos
gs
jne
cmp
mov
add
mov
popf
jmp
and
pop
retf
shl
inc
sar
inc
mov
sti
push
dec
jge
xlat
xchg
jae
xor
add
out
xchg
pusha
push
outs
ja
das
sbb
pop
les
mov
mov
xor
fisttp
push
xchg
div
sbb
jle
sub
and
mov
fbstp
cmp
push
or
xchg
rcl
fidivr
cmp
mov
pop
fwait
xchg
popa
jmp
cmp
mov
jne
stos
jo
and
fisttp
ds
mul
pushf
xor
fs
or
xor
inc
aas
pop
(bad)
mov
lds
icebp
adc
mov
jp
mov
adc
das
add
test
adc
sbb
xchg
sub
adc
push
jbe
xchg
inc
std
or
movs
push
mov
ficomp
adc
pop
ins
les
push
mov
fwait
jge
int3
repnz
and
cmc
mov
pop
fwait
les
push
jge
or
push
jmp
in
cmp
retf
addr16
and
inc
cs
icebp
movs
mov
fadd
gs
cmp
push
(bad)
mov
in
push
cmp
push
loope
icebp
sbb
fcmovnu
pop
clc
adc
imul
movs
int3
lds
ja
mov
addr16
cmps
cmp
stos
pop
push
xchg
jl
loopne
neg
shl
push
or
std
mov
ret
lock
in
sbb
xor
rcr
nop
imul
dec
push
ds
(bad)
call
stos
bound
lahf
xchg
inc
and
popf
jno
cmp
ds
xchg
pop
push
jns
sbb
adc
gs
test
dec
js
push
ins
and
imul
icebp
add
fidivr
fwait
jnp
movs
rcr
repz
lahf
hlt
iret
outs
les
push
bound
fs
xchg
fstp
adc
inc
mov
adc
fst
ss
test
dec
(bad)
hlt
cli
jb
push
arpl
push
sbb
in
inc
pop
xchg
push
adc
(bad)
jle
dec
mov
popa
sbb
mov
and
(bad)
mov
add
por
test
out
cwde
inc
sbb
add
fisttp
es
sub
(bad)
xacquire
je
jb
push
push
or
lds
xchg
lds
ins
ins
adc
sahf
aas
inc
push
mov
sahf
jg
mov
sahf
add
jae
cmp
pop
das
in
stos
nop
je
js
sbb
mov
in
cld
push
adc
push
inc
adc
sbb
out
fwait
mov
jb
jbe
dec
jl
icebp
mov
mov
(bad)
(bad)
push
adc
ss
add
pop
addr16
xor
test
inc
je
xor
push
(bad)
push
clc
dec
scas
pop
dec
dec
jo
or
mov
add
fmul
mov
xchg
mov
mov
cdq
es
in
xor
sub
add
dec
push
ds
mov
pop
(bad)
je
pop
xor
fst
jg
int
jb
mov
inc
mov
clc
in
test
not
sub
daa
push
push
scas
in
sbb
mov
test
pop
pop
mov
pop
or
test
or
aam
push
push
mov
ret
out
push
xchg
mov
mov
xchg
jne
xor
jns
into
cs
sub
clc
cs
mov
sub
ror
inc
loope
lods
inc
pop
push
lods
(bad)
mov
in
add
sub
add
sub
pop
xchg
outs
(bad)
icebp
stos
call
add
mov
dec
sbb
mov
or
mov
lods
repnz
mov
cmps
and
sbb
ds
jnp
imul
imul
sbb
cmp
iret
jmp
xchg
jb
in
(bad)
push
adc
push
ins
dec
fstp
sub
fcmovnbe
movs
cmp
push
adc
mov
inc
gs
dec
test
popa
std
mov
ins
xor
mov
push
out
pop
scas
retf
or
(bad)
dec
push
mov
inc
fwait
pop
add
outs
in
test
adc
xor
int3
sbb
test
movs
fdivp
pop
dec
(bad)
mov
sbb
or
imul
(bad)
xor
add
dec
xchg
and
and
jmp
push
add
shr
xor
jnp
dec
push
pop
mov
daa
imul
lea
xor
lea
icebp
inc
ins
push
push
outs
add
mov
mov
sub
cmps
rcr
xor
add
out
lods
mov
push
cld
mov
xchg
sub
fcom
add
adc
pop
inc
outs
ja
jmp
imul
stos
cld
std
scas
push
mov
pop
sbb
outs
xor
les
(bad)
ror
mov
movs
sub
sub
aad
mov
dec
pusha
fisub
cmp
xor
dec
pop
pop
test
aas
jmp
test
ins
in
mov
lahf
pop
popf
std
pop
or
jle
dec
loopne
daa
rcl
sar
lahf
test
bound
lods
xor
dec
aaa
enter
idiv
stos
mov
push
out
stos
jmp
cwde
pop
mov
mov
test
bnd
lods
shl
add
dec
and
imul
or
or
cmps
xor
ins
inc
pop
pop
add
loopne
or
cmps
lds
add
cmc
pushaw
or
lds
pop
xlat
cmc
xchg
ret
repz
repnz
mov
ds
cmp
and
test
outs
xor
inc
std
push
mov
stos
lods
xor
popf
in
mov
dec
adc
in
xchg
stc
loope
jmp
inc
movs
call
xchg
cli
cmps
outs
and
mov
and
or
xchg
lds
loopne
sub
mov
scas
mov
retf
mov
or
inc
ss
jecxz
and
das
cmp
stc
nop
xchg
mov
xlat
mov
sahf
out
fmul
stos
mov
lock
and
cs
or
push
sub
push
jle
ins
scas
rcr
cmp
add
push
sbb
or
xchg
lea
iret
movs
inc
xor
hlt
jb
outs
retf
dec
ret
rcr
sbb
ja
punpckhbw
sbb
jno
aam
test
pop
ss
ss
cmp
or
je
in
int
sub
push
(bad)
and
inc
outs
push
ss
ja
test
and
pop
rcr
stos
inc
xor
push
add
call
sbb
jae
gs
cmp
in
cli
pop
imul
call
push
dec
ins
iret
pop
ins
mov
lods
mov
das
bound
jecxz
aam
dec
cmp
dec
or
inc
cli
daa
test
cld
xor
out
pop
retf
rcl
mov
add
scas
test
cs
push
mov
cli
sub
cs
mov
add
clts
xor
pop
scas
dec
loopne
pop
out
retf
push
fs
in
push
dec
outs
das
inc
mov
fmul
sbb
aad
loope
stos
adc
cmp
call
lods
xor
repz
cmp
pop
xchg
mov
lods
cmp
xor
icebp
and
mov
popf
pop
adc
scas
(bad)
sbb
add
jnp
inc
xor
jno
mov
inc
(bad)
mov
cwde
fldcw
(bad)
aam
shl
cmps
inc
mov
aam
fld
mov
repz
daa
mov
inc
sub
call
ins
jb
cmc
push
das
sahf
jmp
(bad)
jne
test
lea
mov
test
inc
pop
push
mov
dec
(bad)
ins
or
in
fimul
lods
shl
shr
pop
mov
xchg
xchg
hlt
dec
sbb
aad
dec
lods
out
push
test
sbb
xchg
or
mul
cs
in
xor
mov
dec
shl
loop
mov
push
mov
sbb
jmp
fiadd
push
pop
test
sub
leave
call
lds
mov
(bad)
jae
pop
xor
sbb
mov
mov
(bad)
sbb
inc
jbe
pushf
mov
adc
call
sbb
aas
cmps
movs
mov
mov
ja
and
sbb
cli
mov
shl
(bad)
icebp
mov
mov
jl
inc
pop
cmc
popf
(bad)
cmp
imul
test
pop
ret
sbb
clc
aam
jge
sbb
gs
jmp
add
cli
fs
cld
in
and
es
gs
jmp
outs
bound
stos
or
rol
push
mov
cmp
xor
push
pop
mov
dec
fistp
and
cmp
dec
mov
cwde
mov
mov
clc
leave
mov
pop
lods
into
and
adc
out
popf
add
retf
xchg
mov
mov
loopne
add
stc
stc
movs
adc
ds
retf
cmp
sub
push
sti
sub
loopne
std
cmp
stc
outs
cmc
mov
ins
or
mov
sbb
mov
push
adc
call
into
enter
hlt
or
add
cmp
aas
lds
dec
pop
icebp
cwde
sbb
shr
push
loopne
(bad)
out
movs
mov
sub
out
jecxz
lods
clc
mov
test
inc
js
dec
xor
jle
jle
push
ds
ss
into
loopne
es
out
mov
jp
or
jns
dec
(bad)
xchg
sar
cmps
ret
sar
sbb
mov
mov
cmp
icebp
mov
inc
hlt
adc
ja
retf
ror
popa
pop
jno
cwde
mov
xchg
inc
xor
mov
(bad)
cli
(bad)
ds
loope
jnp
or
jle
adc
ret
mov
sbb
inc
scas
cmp
out
or
dec
mov
dec
ins
add
jns
sbb
pop
fisubr
jle
add
add
dec
or
out
sbb
cmp
jg
sub
push
cdq
mov
inc
jge
dec
sub
popa
rcr
inc
in
ds
sbb
add
adc
mov
pop
call
and
jmp
jl
cmp
movs
pop
sbb
jmp
icebp
inc
adc
sub
test
and
lea
cmp
in
movs
add
mov
bound
add
(bad)
sbb
sti
inc
scas
push
xor
mov
jbe
adc
out
gs
adc
pop
pop
xor
and
jle
cmps
repnz
jl
int3
add
pop
and
ss
mov
mov
jge
or
and
mov
mov
(bad)
leave
(bad)
jp
sub
je
ss
mov
out
cmp
mov
pop
and
sbb
arpl
out
push
call
adc
in
jbe
and
push
fsqrt
mov
cmp
addr16
sub
jns
test
repnz
mov
cmc
dec
lods
sbb
mov
jmp
mov
sub
push
cs
outs
mov
rol
sbb
(bad)
cmc
push
popa
push
pop
ret
out
retf
inc
add
or
mov
jg
jns
and
fidivr
mov
or
ins
cmp
movs
jg
imul
xchg
jmp
dec
mov
pop
cdq
imul
mov
movs
cmovs
inc
(bad)
xchg
xor
scas
repnz
repnz
dec
and
div
add
jmp
ss
mov
inc
adc
in
stos
loop
stos
idiv
ins
test
mov
in
push
into
dec
lods
adc
fsubr
arpl
mov
ret
leave
inc
jo
mov
xchg
xchg
ret
and
push
dec
test
mov
fwait
call
repz
test
outs
inc
xchg
fmul
xor
inc
imul
cwde
xchg
push
ins
retf
retf
shl
sub
adc
pop
push
inc
rcl
aam
xchg
dec
test
repz
icebp
out
pop
cs
aaa
out
aas
fist
add
in
pushf
xchg
loope
add
pop
repz
jge
(bad)
sbb
stos
pop
paddsw
(bad)
push
or
or
cmp
jg
in
in
cmps
jmp
mov
movs
mov
scas
dec
push
sub
mov
movs
lods
dec
(bad)
pop
push
xchg
push
ret
fnstcw
xchg
sub
push
push
cmp
push
loopne
test
add
and
mov
mov
das
mov
dec
jg
bnd
jge
jns
(bad)
jnp
jno
push
cld
cdq
scas
sbb
jno
xor
mov
test
shl
imul
cmp
test
push
jno
imul
cmp
mov
repnz
xchg
jle
xchg
dec
cld
retf
push
jg
into
xchg
repnz
push
dec
xchg
inc
ficom
jmp
ds
repnz
jle
aas
inc
cmc
push
es
repnz
mov
push
jo
std
rcr
cwde
adc
fimul
(bad)
push
xor
and
mov
mov
add
jge
add
jnp
sub
stos
and
dec
mov
cwde
mov
leave
mov
imul
add
call
rcr
mov
jp
pop
adc
pop
sbb
push
repz
or
cmp
ret
movs
imul
mov
fistp
int
dec
loope
sbb
leave
cwde
cld
mov
cmp
jecxz
push
adc
aaa
mul
push
adc
test
dec
dec
adc
lods
dec
xchg
test
mov
out
cli
pop
in
push
out
aaa
mov
or
mov
cmp
push
jle
sub
inc
iret
mov
sbb
jmp
xchg
cli
jecxz
icebp
xchg
cs
push
test
inc
(bad)
mov
ss
xor
sub
in
(bad)
cmp
pop
int3
repnz
cld
test
jp
mov
mov
add
mov
test
fcmovnb
sbb
mov
xor
add
mov
mov
or
sub
adc
pop
jns
jno
mov
dec
int3
jo
adc
sti
sbb
int
xor
loop
cli
jl
mov
dec
imul
imul
jo
xchg
movs
push
(bad)
ins
arpl
test
cmp
add
cmp
jne
aad
push
jnp
pushf
test
push
movs
fild
inc
in
adc
dec
mov
xor
pop
cmp
push
sti
inc
jbe
int
jnp
pop
and
or
push
inc
ins
(bad)
cdq
inc
scas
pop
scas
sub
push
in
jmp
hlt
jae
pop
sub
jmp
fsub
jno
scas
(bad)
mov
jnp
in
pop
shr
mov
mov
pop
lods
gs
push
xchg
jmp
dec
inc
xchg
adc
xchg
into
dec
xchg
es
add
push
mov
add
jno
add
and
fsubrp
gs
into
or
mov
dec
sub
(bad)
mov
not
popf
xchg
pop
js
sub
adc
push
or
arpl
cmps
mov
nop
mov
inc
(bad)
nop
or
fstp
lea
xchg
mov
movs
add
mov
cld
jnp
test
adc
outs
add
xchg
mov
push
mov
cwde
mov
in
adc
jge
mov
fistp
out
into
clc
ds
leave
sbb
imul
mov
jmp
dec
mov
popf
call
mov
xchg
(bad)
dec
pop
xlat
repnz
fadd
pop
mov
mov
push
xor
in
repz
scas
div
xchg
test
mov
loope
leave
aas
xor
push
repnz
mov
ret
sahf
scas
pop
sub
aam
loopne
pop
mov
mov
(bad)
test
popa
adc
ret
or
adc
pop
push
ss
(bad)
sub
scas
(bad)
xlat
jp
cmps
fisub
mov
add
and
pushf
int
xchg
jae
dec
pop
test
shr
xchg
out
mov
ds
rcr
push
imul
push
imul
cmp
jno
movs
ret
dec
mov
push
ds
fs
push
sbb
imul
add
pop
retf
ins
in
and
fisubr
repz
jmp
xchg
int
mov
sub
inc
mov
and
in
fcom
push
and
inc
dec
pop
mov
xchg
pop
cli
into
mov
jno
jnp
gs
fcomp
xor
inc
lea
in
sbb
inc
fstp
push
test
xor
gs
xchg
sbb
jno
repnz
jle
jmp
aam
dec
neg
and
dec
fwait
scas
stc
loop
pop
clc
inc
sub
scas
in
jmp
lods
dec
mov
stos
inc
and
jb
stos
test
mov
pop
imul
ds
popf
push
je
btr
ja
and
mov
mov
pop
sub
sub
sub
cmp
pop
adc
dec
daa
outs
lods
mov
xchg
or
jmp
int
aam
les
push
xchg
xor
cmps
out
push
scas
retf
and
mov
dec
dec
pop
iret
xchg
cmp
jmp
shr
sub
out
pop
test
pop
mov
je
jmp
fimul
sub
jecxz
cmp
fwait
nop
mov
mov
fnstenv
sub
jae
cdq
test
mov
sbb
scas
movs
and
mov
aaa
xchg
pop
bound
mov
pop
xchg
adc
int
jg
or
js
push
cld
dec
jnp
pop
icebp
ins
or
and
fdiv
iret
fsubr
cmps
inc
jns
jecxz
(bad)
clc
lods
and
sub
or
or
pop
ds
ror
jmp
ret
push
addr16
adc
enter
sbb
add
dec
push
jmp
cwde
sar
add
push
xor
push
inc
adc
movs
pop
lods
cmp
das
mov
leave
jnp
mov
push
mov
dec
pushf
dec
cmp
das
mov
les
cli
mov
jo
movs
push
or
push
ret
sub
mov
out
jecxz
sbb
or
push
xchg
addr16
popf
xchg
push
scas
and
and
push
and
stc
push
ror
pop
ret
lds
add
sar
call
pop
enter
adc
bound
and
push
or
cmp
fisub
add
in
cmp
push
xor
mov
inc
or
loop
jge
and
jmp
mov
adc
pop
push
ins
cmp
ins
sub
test
daa
mov
fs
xchg
lock
test
xchg
pop
mov
ficom
mov
mov
mov
out
xor
mov
push
ret
in
out
push
cmp
add
cmp
test
xor
xchg
lahf
push
jp
into
mov
push
inc
in
jno
sub
mov
dec
mov
(bad)
jecxz
and
adc
cmp
mov
(bad)
mov
cmp
push
fdiv
jp
lods
xor
sahf
fs
inc
loopne
and
lds
mov
in
jp
and
mov
xchg
cmp
in
clc
mov
mov
rol
adc
mov
call
add
mov
mov
popf
mov
inc
jp
xchg
lds
out
iret
xor
sbb
add
mov
inc
rol
mov
inc
bnd
sahf
pushf
ds
xor
les
icebp
push
test
add
adc
aam
loope
cmp
cmps
jmp
push
test
sbb
mov
out
adc
data16
xor
or
adc
pushf
sbb
xchg
and
aaa
add
sbb
stos
mov
mov
imul
jp
sub
mov
mov
gs
lahf
sbb
or
dec
icebp
ret
jecxz
sbb
pop
lods
into
jp
add
imul
fst
xchg
mov
aam
dec
jae
fdivr
sub
jecxz
push
inc
inc
push
mov
fist
sbb
sub
sbb
add
push
fcom
data16
rcr
xlat
les
dec
pusha
xlat
fdiv
(bad)
fisub
retf
sub
push
add
test
push
push
test
dec
(bad)
cmp
xor
ror
pop
jo
das
xor
iret
inc
(bad)
mov
pushf
loope
jo
xchg
aam
aam
pop
loopne
loop
xchg
push
les
pop
(bad)
test
pop
xchg
mov
jne
loopne
cmp
popa
popf
wbinvd
push
pop
lea
loop
pop
lea
dec
cli
out
dec
sub
sbb
mov
loopne
pop
mov
and
mov
adc
sbb
test
sbb
and
test
mov
pop
mov
leave
jl
xchg
add
push
inc
jmp
shl
outs
ret
stc
mov
scas
jb
js
mov
imul
add
add
aad
add
push
(bad)
jg
cmps
push
xchg
adc
in
dec
push
xor
and
leave
adc
ret
mov
jne
(bad)
and
ja
nop
(bad)
fistp
or
das
dec
test
xor
add
mov
retf
mov
mov
push
sub
(bad)
neg
sti
jl
in
push
sub
xor
push
xchg
fstp
mov
iret
ins
jl
pushf
jo
fisttp
je
xor
xlat
in
inc
xchg
sbb
xchg
sar
pop
ret
dec
pop
and
push
lahf
jnp
test
push
xchg
mov
dec
adc
dec
in
jmp
jp
clc
lahf
jle
stos
nop
xor
movs
sub
pop
mov
mov
fwait
cs
pop
mov
mov
fcomp
xchg
mov
icebp
lds
inc
xchg
push
fcomp
adc
out
les
dec
pop
inc
ret
xchg
adc
test
cmp
je
cwde
mov
div
jo
jne
dec
mov
mov
lock
pop
mov
into
fsub
inc
jbe
push
adc
retf
dec
adc
mov
bound
jae
loope
dec
fs
sbb
mov
push
stc
xchg
ds
dec
sub
xchg
mov
fwait
scas
fsincos
jmp
std
jle
and
push
adc
pop
imul
ins
adc
jns
cmps
(bad)
mov
fistp
addr16
add
out
cmps
(bad)
mov
mov
pop
jecxz
in
repnz
je
xor
sbb
push
inc
pop
out
pop
rcr
jnp
dec
or
es
(bad)
mov
and
push
daa
std
or
popa
out
lea
and
inc
call
fwait
adc
jae
or
repnz
out
in
jmp
push
dec
sub
adc
dec
sti
les
pop
ror
std
add
int3
out
cwde
jo
and
jp
rol
pop
fsub
in
jecxz
icebp
xchg
push
mov
ret
in
mov
cmc
outs
mov
pop
jp
mov
pop
push
pop
inc
cmp
pop
(bad)
sbb
jmp
and
adc
dec
add
clc
dec
loope
(bad)
repz
ror
mov
or
je
pop
or
retf
popf
mov
xlat
aaa
jecxz
mov
popf
scas
mov
sub
mul
push
scas
icebp
inc
cmp
sbb
mov
hlt
pusha
enter
fst
and
cmp
dec
std
lods
xor
rol
cmps
ds
xor
mov
cmp
inc
mov
stc
pop
and
xlat
dec
lahf
push
xchg
jno
push
hlt
pushw
cwde
ja
mov
popa
movs
pop
rcl
(bad)
(bad)
sbb
lods
push
or
push
and
fimul
(bad)
out
adc
cmp
loop
mov
outs
and
push
stos
inc
and
test
dec
xor
hlt
xchg
movs
inc
lahf
sbb
ja
out
mov
es
jp
adc
jbe
inc
jb
test
pop
pop
into
jns
pop
jecxz
test
hlt
inc
hlt
in
sbb
and
push
push
aad
movs
test
dec
lods
lea
je
sbb
xchg
xor
mov
cmp
xchg
pop
test
push
pop
and
ins
mov
mov
aad
and
out
push
mov
mov
xor
pop
ds
iret
cdq
mov
scas
ss
xchg
jl
movs
pop
or
xchg
cs
pusha
int
sbb
fs
xchg
push
hlt
mov
pop
sub
retf
jge
cmp
mov
call
js
adc
lods
mov
sbb
jne
sub
jae
lahf
popf
dec
jecxz
scas
cmp
ds
js
(bad)
call
mov
in
jno
pushf
mov
(bad)
stc
add
mov
adc
sbb
test
retw
push
jnp
ss
jl
mov
stc
and
data16
sbb
dec
pop
shl
push
add
outs
je
mov
int3
das
pop
mov
adc
jp
repnz
jae
push
mov
mov
push
push
add
mov
xlat
repnz
jnp
daa
push
fwait
or
mov
mov
ja
rcr
adc
call
dec
adc
push
xchg
out
and
out
push
aam
pop
xor
jle
mov
adc
xor
cmp
adc
cmp
outs
aad
scas
pushf
mov
lock
sbb
std
cs
cmp
adc
hlt
xchg
jb
fs
(bad)
sub
cmp
jecxz
push
mov
scas
jo
js
cmp
sbb
cmp
ss
pop
repnz
outs
xchg
cli
xor
rol
jmp
dec
js
and
xor
xlat
loop
or
pop
lds
loopne
lahf
xchg
sahf
sub
scas
test
test
ret
mov
imul
mov
retf
ins
sbb
retf
adc
scas
xor
mov
packuswb
cmps
fldl2t
js
jle
mov
xchg
iret
cmp
scas
dec
mov
inc
je
and
adc
jae
pop
movs
mov
adc
xchg
mov
aas
jle
leave
in
cmp
push
jmp
jnp
shr
xchg
dec
pop
aaa
jmp
mov
fbld
(bad)
adc
push
fwait
pop
aam
cmp
mov
add
mov
inc
xchg
pop
popa
fild
ins
xchg
push
clc
outs
fiadd
cmps
or
cmc
mov
dec
and
(bad)
icebp
sub
ins
je
pop
movs
jmp
xchg
arpl
sbb
loope
fdivr
xchg
jge
push
movs
imul
out
dec
mov
sbb
adc
lods
out
dec
and
sub
lock
cdq
jno
lock
(bad)
retf
dec
mov
pop
stos
cli
fs
cmp
stos
jecxz
cmc
loopne
in
loope
cmps
xor
retf
movs
xor
xor
data16
and
sub
imul
les
popf
mov
and
iret
test
dec
(bad)
loopne
adc
xchg
stos
dec
mov
lods
cdq
inc
pop
shl
outs
jge
mov
jb
sahf
add
in
or
jb
fwait
test
xchg
lock
fstp
jae
or
pop
push
cmp
inc
ja
push
mov
push
pop
shl
pop
jmp
(bad)
push
cli
mov
inc
add
popa
mov
mov
aas
adc
dec
mov
ss
gs
je
fs
rol
sahf
jge
adc
xchg
mov
cmc
movups
or
mov
and
and
std
jp
ss
xor
into
gs
mov
test
cmp
sub
sub
cmp
mov
inc
mov
xchg
add
pop
mov
in
pop
hlt
or
and
in
mov
xor
dec
sbb
dec
dec
pushf
or
and
cmp
stos
jecxz
pop
cvtpi2ps
dec
ret
popa
cmps
adc
add
pop
xor
repz
pusha
std
cmp
test
pop
pop
mov
mov
sbb
adc
push
(bad)
(bad)
shl
(bad)
out
pop
ja
fnsave
push
mov
retf
shr
mov
cmp
outs
cmps
jle
cmps
add
dec
sub
mov
sbb
aas
add
mov
repnz
xchg
add
and
out
mov
sbb
xchg
in
cmp
icebp
(bad)
rcr
xor
xchg
nop
(bad)
push
(bad)
jo
ins
push
sub
mov
imul
cmps
dec
hlt
mov
mov
mov
mov
adc
xlat
cdq
popf
mov
jmp
mov
sbb
imul
mov
adc
push
pop
mov
int
sti
(bad)
std
pop
arpl
mov
sub
and
les
mov
in
mov
mov
mov
jmp
pop
add
sub
cmp
dec
or
xchg
push
mov
and
sub
ins
mov
fimul
dec
inc
dec
pop
mov
pop
xchg
mov
pop
fadd
mov
xchg
inc
jo
inc
and
mov
cmp
dec
std
adc
and
not
cmps
jg
push
cmp
and
mov
pop
xchg
jmp
lahf
(bad)
ins
push
cmp
fidivr
imul
inc
push
jge
pop
rcr
test
mov
adc
lods
or
imul
mov
add
aad
jno
jp
add
push
and
jecxz
jl
cmc
xor
test
jno
mov
push
inc
jmp
or
call
das
xor
adc
rcl
push
std
xlat
jo
loope
cmp
out
mov
xor
sub
imul
mov
fldln2
add
scas
jns
daa
jne
adc
dec
popa
pushw
jne
adc
xchg
jmp
std
mov
or
stc
ins
cwde
cmp
std
pusha
sbb
pop
inc
xchg
mov
scas
shl
dec
jnp
dec
mov
xor
loop
cmp
xchg
push
call
xor
xlat
jmp
adc
xchg
cmp
repnz
sub
cdq
adc
pop
xor
jae
retf
addr16
push
xlat
inc
out
test
outs
add
rcr
popa
jns
push
sub
enter
imul
and
push
cli
add
and
mov
sbb
cmps
rcl
js
cmc
mov
mov
mov
fst
jmp
xor
mov
inc
or
mov
shr
outs
sub
cmp
es
jmp
adc
jmp
cmp
nop
and
imul
push
xor
sub
jb
(bad)
mov
imul
std
mov
cmp
outs
adc
adc
adc
shl
ret
std
cmp
cli
arpl
mov
cli
rep
pop
inc
mov
dec
ins
in
dec
push
arpl
and
mov
add
mov
add
xchg
imul
jae
in
adc
out
jo
lods
mov
add
jge
xor
lds
mov
add
neg
out
push
push
pop
mov
popa
repnz
scas
daa
aas
sbb
es
int3
mov
loope
popa
jb
loopne
or
pop
lahf
mov
shl
push
call
retf
test
mov
or
mov
sub
mov
sbb
out
xchg
mov
sar
sub
and
bnd
test
imul
cmp
pop
les
repnz
(bad)
mov
rcl
pop
cwde
out
leave
retf
fdivr
scas
ret
les
inc
mov
das
lea
xchg
jmp
gs
popa
add
shl
sub
xchg
fwait
iret
ins
inc
mov
cmp
jp
pusha
dec
es
rcr
or
mov
sbb
inc
mov
jle
in
push
out
jmp
fild
pop
push
cmp
sbb
dec
and
sub
cmp
add
gs
push
mov
xor
pop
inc
jns
dec
or
ins
push
xchg
or
pushf
mov
xor
adc
fidivr
jp
xchg
clc
fsubr
or
sub
pop
pop
jg
adc
xor
adc
fistp
and
mov
cwde
loopne
push
mov
test
js
jnp
mov
mov
scas
inc
idiv
cmp
aam
sub
ds
adc
in
in
or
call
fst
out
(bad)
jle
fsubr
push
sbb
cli
sti
cld
add
ins
sbb
or
frstor
test
inc
inc
mov
icebp
mov
cli
cwde
int3
es
gs
movs
test
push
jns
mov
jb
push
cmp
cwde
push
sbb
add
pop
adc
jnp
xlat
jae
xor
and
popf
inc
fdivr
jg
inc
sbb
out
or
mov
xchg
jmp
push
jo
leave
sbb
mov
cwde
cdq
test
adc
xor
pop
sbb
dec
lahf
in
mov
mov
test
and
inc
outs
fwait
pop
fldcw
xor
daa
sub
imul
jecxz
inc
cmp
jmp
aam
push
xchg
bsr
dec
fiadd
in
inc
loopne
sbb
push
adc
jo
push
jno
out
fidivr
xchg
nop
call
int3
out
(bad)
jl
push
inc
jns
cmp
xchg
mov
add
pop
pop
jb
mov
mov
movs
pop
loopne
sub
sbb
pop
jbe
adc
jl
bound
sbb
or
cdq
pusha
scas
or
fs
mov
les
jnp
adc
cmc
daa
call
pop
and
adc
cmp
lds
lea
jecxz
jp
jg
movs
jb
mov
mov
es
ins
bound
test
fcmovbe
push
ss
sub
retf
arpl
mov
push
xchg
ins
fild
add
mov
sbb
fisubr
test
xor
fcomp
das
lds
rol
add
pop
inc
add
outs
sub
cmp
fild
ins
adc
out
xor
dec
inc
mov
(bad)
cmps
sbb
push
adc
inc
dec
sahf
sub
jbe
fsub
xchg
cli
leave
add
ja
cmp
mov
jl
vpshld
inc
pop
retf
retf
push
or
nop
mov
stc
add
mov
xchg
icebp
das
mov
(bad)
mov
or
stos
sbb
scas
mov
inc
mov
sbb
idiv
stos
in
xchg
xchg
in
adc
test
mov
pop
xchg
shl
das
cmp
(bad)
push
pop
cmps
jl
lds
mov
cmp
push
pop
dec
xor
sub
movs
rol
cmp
jno
sbb
ins
jae
jo
jns
(bad)
lods
push
rcl
call
push
dec
jne
and
mov
jmp
outs
and
out
xchg
dec
push
dec
and
mov
shl
jle
fwait
imul
push
dec
sbb
push
fs
retf
retf
mov
out
fimul
aaa
add
inc
std
int3
sub
loop
mov
xchg
xchg
dec
lock
faddp
jae
mov
aam
cmp
popa
stc
mov
dec
adc
cmp
cmps
fwait
and
call
leave
adc
ins
and
or
(bad)
aaa
jge
jmp
mov
add
loope
pop
ins
mov
rol
ins
ins
xchg
retf
dec
jle
jb
push
sub
jp
sbb
int
xchg
pop
sub
mov
fisttp
mov
call
gs
or
dec
adc
push
add
inc
adc
inc
pop
int
add
push
outs
push
push
stc
xchg
lds
dec
pop
adc
pop
sub
push
mov
jbe
pop
das
xor
lock
cmc
xor
mov
mov
test
jecxz
sub
pop
inc
inc
(bad)
cmc
cmp
ret
ret
retf
xor
jmp
sub
cli
ss
and
aaa
cmp
lods
and
cmp
pop
mov
pushf
jb
xchg
pop
daa
aad
ss
pop
inc
lea
cmp
sbb
test
or
dec
add
push
xor
mov
jmp
xchg
fisub
fstp
add
pushf
(bad)
popf
dec
jecxz
mov
(bad)
xor
rcr
adc
fnstenv
or
shr
sbb
inc
(bad)
(bad)
xlat
addr16
int3
in
push
mov
test
pop
fwait
dec
cmps
sub
aas
jecxz
shr
test
and
shl
repz
lods
movs
and
movs
or
mov
xchg
jae
and
pop
inc
addr16
test
jmp
add
loop
add
add
and
pop
(bad)
xchg
add
pop
retf
enter
sub
xor
movs
test
xor
mov
dec
rol
nop
inc
ds
pop
xchg
fsub
sbb
mov
stc
inc
loop
jae
std
rcl
sbb
das
xchg
jmp
das
ja
(bad)
cmp
stos
xor
das
mov
mov
das
pop
ins
ja
sub
or
inc
nop
dec
cmc
mov
inc
in
inc
mov
dec
out
div
popf
or
push
push
jl
aaa
cs
js
push
pop
sub
mov
out
pushf
daa
or
pop
xchg
ins
aam
jne
jecxz
dec
jmp
rol
fiadd
jp
push
or
dec
out
imul
jnp
xor
cmp
or
test
loopne
jp
test
(bad)
ret
inc
out
pop
push
pop
and
adc
cmps
jmp
cmps
jbe
pop
icebp
(bad)
mov
lock
jb
repnz
mov
jnp
stos
das
aas
adc
(bad)
sbb
mov
ss
mov
mov
jle
cmps
pop
call
push
cmp
mov
retf
scas
sub
or
dec
dec
outs
cmp
mov
xor
pushf
and
test
pop
lods
lock
mov
pop
add
pop
dec
cdq
outs
ret
sbb
cmp
cs
adc
in
dec
out
ds
cdq
mov
xor
out
inc
adc
sbb
xor
push
pop
(bad)
push
sbb
test
cmovbe
pop
add
or
add
les
cdq
and
retf
jmp
pop
je
cmps
cmp
int3
sbb
(bad)
pop
imul
push
(bad)
add
stos
in
mov
ror
adc
rcl
sub
(bad)
push
push
rcr
inc
push
(bad)
(bad)
fld
cmp
or
adc
push
int
xor
mov
jmp
pop
mov
lea
ins
mov
ret
mov
adc
dec
mov
sbb
jl
sahf
in
push
or
les
and
cmp
or
inc
cwde
adc
sti
into
shl
(bad)
jmp
or
enter
imul
pop
fild
jge
scas
jge
sub
in
xor
xchg
sub
les
jle
hlt
push
fdiv
sbb
add
iret
adc
jle
pop
int
jno
pusha
nop
outs
mov
iret
setns
ret
sbb
pop
cwde
jecxz
and
xchg
push
add
lods
(bad)
jge
sub
pop
pop
xor
ret
addr16
test
icebp
enter
mov
and
adc
sbb
cmc
mov
sub
sbb
js
xor
rcr
cmp
ror
mov
fcom
and
fbstp
mov
ins
sub
fdivrp
movs
(bad)
sbb
jbe
daa
mov
ror
xchg
xchg
xor
adc
push
jmp
cmp
lods
movs
fs
push
ins
cdq
not
jae
dec
xchg
dec
loope
mov
test
icebp
sbb
clc
popf
cld
repnz
mov
fbld
into
mov
(bad)
jecxz
or
clc
mov
xchg
xchg
mov
pop
es
ja
and
sbb
loopne
in
push
ins
sub
adc
fld
sub
sti
test
pop
pop
shr
inc
xchg
push
aaa
int
loope
out
pop
push
xlat
dec
xor
out
repnz
mov
sbb
jb
out
push
pop
inc
out
push
jo
mov
jl
or
cdq
outs
cmc
imul
js
shl
push
daa
out
(bad)
cmps
jmp
push
test
shr
and
sub
das
iret
push
(bad)
loope
xchg
fcmovne
push
mov
push
loopne
cmp
and
fld
sub
dec
cld
mov
ror
ins
cs
cdq
jbe
int3
xor
fsub
push
arpl
mov
mov
push
test
mov
jecxz
movs
inc
and
mov
mov
push
lods
test
sahf
cmp
xchg
ins
push
movs
dec
ins
adc
int3
fs
ds
hlt
movs
sbb
cmc
js
mov
int
sbb
pop
into
pop
xchg
in
mov
lahf
inc
nop
mov
xor
call
ror
sub
ret
sbb
nop
add
mov
fimul
jp
leavew
push
push
or
jl
in
cs
movs
imul
aam
iret
rol
push
bound
cmp
mov
(bad)
cmc
lods
xor
dec
lods
(bad)
(bad)
mov
in
(bad)
daa
sbb
inc
add
sbb
jae
(bad)
and
inc
sahf
out
or
adc
jge
inc
call
ja
fisttp
bound
(bad)
aaa
cmp
sbb
jns
cdq
sahf
fs
push
test
outs
xor
in
pop
jnp
aam
fmul
jae
jle
daa
nop
fisub
inc
inc
mov
xchg
jecxz
inc
addr16
fdivr
sub
fmul
cmc
xor
cmp
or
in
bound
stos
jg
adc
jae
cmp
pop
push
std
xor
fs
stc
mov
aad
repz
sub
and
out
inc
pop
jecxz
aad
inc
mov
push
xchg
jno
in
xor
test
rol
mov
inc
sub
fiadd
add
mov
and
jne
dec
mov
(bad)
in
mov
fisubr
adc
jno
inc
ret
sbb
sbb
sahf
test
add
daa
pusha
test
sbb
mov
push
push
or
js
fst
mov
aam
cmp
pusha
pop
pop
jmp
dec
sahf
loopne
sbb
add
shr
adc
mov
imul
or
add
and
push
jns
sub
add
std
cmps
lahf
add
pop
popa
sbb
fs
mov
sbb
adc
bound
imul
dec
pop
pop
pop
inc
test
imul
pop
rcr
mov
xchg
retf
enter
cmp
jne
adc
iret
in
xchg
in
jmp
int
jl
sub
push
fmul
jae
mov
test
fdivrp
or
bnd
ds
fld
xor
fwait
inc
xchg
cli
pop
xor
scas
call
pusha
rol
jbe
inc
cmc
stos
call
fwait
out
pop
pushf
inc
fsub
sub
call
nop
mov
in
aas
inc
js
dec
mov
xor
push
dec
lock
std
and
dec
pop
aam
mov
mov
and
out
aas
push
lahf
push
fimul
or
les
mov
aam
test
add
mov
and
mov
aaa
ja
rcl
(bad)
mov
cdq
mov
rol
jge
xchg
pop
mov
sbb
repz
mov
jbe
pop
cmps
jle
and
xchg
dec
inc
(bad)
sub
push
jmp
outs
jmp
or
mov
or
sti
mov
push
scas
ud1
fmul
les
mov
jae
mov
cmps
ds
mov
cli
(bad)
cmp
pop
faddp
fiadd
into
mov
into
scas
push
and
mov
shr
fcomp
mov
js
mov
mov
jns
ins
push
adc
mov
pop
or
push
push
pop
pop
outs
daa
push
nop
xchg
pop
xor
mov
mov
sub
mov
or
jns
xor
xchg
(bad)
xchg
jne
inc
cs
fadd
mov
cmc
lea
bound
jl
or
sub
test
add
call
hlt
mov
sub
mov
sahf
add
stos
movs
daa
in
mov
(bad)
lock
mov
enter
movs
mov
out
sub
scas
sub
lods
frstor
sar
xchg
sar
mov
jb
pop
cmp
scas
add
hlt
mov
retf
or
mov
push
sub
movs
les
cmp
mov
xor
adc
xchg
push
out
jge
imul
mov
inc
fnstsw
adc
cmp
inc
xchg
repz
rol
xchg
fsub
aad
inc
aad
nop
add
pop
push
(bad)
mov
mov
xor
adc
xor
sub
or
push
mov
jne
add
push
ins
retf
xchg
fsub
add
and
push
rcl
repz
les
fimul
scas
mov
int
scas
push
xchg
outs
mov
fnsave
jmp
out
xchg
lahf
pop
mov
(bad)
je
add
stos
cs
push
cmp
and
push
sub
sub
aas
jmp
js
sub
mov
pushf
movs
iret
shr
sbb
cs
icebp
mov
sub
mov
cmp
mov
mov
and
inc
sub
dec
push
fldcw
test
cmps
in
or
mov
cli
sbb
das
sub
aam
sub
mov
pushf
out
loopne
dec
test
imul
mov
add
dec
or
(bad)
(bad)
sbb
push
dec
ins
or
jle
(bad)
pop
mov
pop
and
xchg
out
imul
pop
retf
cli
jmp
mov
xchg
jge
call
pop
addr16
mov
jp
pop
pop
mov
jp
es
pusha
sbb
call
inc
jae
mov
push
cli
sub
sbb
jl
fisttp
add
or
mov
xchg
and
dec
cdq
xchg
sub
xchg
mov
(bad)
scas
je
nop
ins
or
call
stos
push
inc
data16
cmp
nop
push
pop
fnstenv
jno
fimul
mov
fist
int
dec
retw
fisub
cmp
out
mov
adc
cli
or
cmp
dec
fisttp
test
add
xor
js
xchg
mov
aam
or
xor
(bad)
jle
xor
lds
add
(bad)
ds
out
ror
mov
mov
cmp
pop
jecxz
imul
repnz
mov
mov
mov
adc
xor
mov
mov
(bad)
sti
or
das
pushf
adc
mov
lahf
int
inc
sbb
ret
js
fwait
mov
jno
les
xchg
add
scas
ja
lods
hlt
ret
push
adc
test
sub
daa
jnp
jns
or
(bad)
cmp
fcmovu
mov
mov
pop
rcr
outs
cli
movs
test
push
and
out
mov
xchg
push
xchg
jno
test
pop
add
jmp
test
push
adc
mov
movs
adc
xor
jbe
(bad)
cmp
add
enter
imul
sbb
shr
stos
div
jp
xchg
adc
jne
(bad)
cmp
push
and
cmp
enter
(bad)
es
fmul
gs
in
cmp
xchg
inc
add
outs
data16
ds
loope
xor
ja
and
std
jg
xchg
loopne
mov
jbe
mov
push
sti
clc
or
mov
daa
inc
jne
mov
pusha
pop
sub
and
(bad)
movs
ins
sbb
pop
(bad)
xor
mov
(bad)
imul
mov
shr
add
das
fdiv
dec
and
or
lock
stc
sbb
addr16
lea
bound
hlt
movs
sub
add
add
xlat
retf
imul
pop
cmps
xchg
add
sahf
dec
mov
push
ins
add
xchg
lahf
mov
nop
in
xchg
or
pop
cmp
and
arpl
call
gs
xor
jns
rol
xchg
adc
fstp
cli
mov
outs
mov
push
in
fld
inc
jae
arpl
fstp
bound
mov
loope
dec
ffreep
mov
dec
(bad)
cmp
stos
dec
bound
lds
adc
inc
pop
shr
(bad)
sub
arpl
pop
xor
push
loope
add
ins
adc
push
lods
jb
mov
test
stc
stos
inc
xor
mov
dec
dec
fs
popa
fdiv
inc
sahf
out
jmp
push
ror
xchg
mov
icebp
leave
cmp
leave
inc
lahf
mov
lods
mov
in
fnstenv
lahf
mov
push
test
mov
push
(bad)
out
jp
loope
(bad)
out
stos
sbb
xor
pop
and
add
mov
xor
jae
lahf
into
imul
daa
and
sub
leave
ror
or
or
push
lock
cmp
pop
imul
repz
mov
mov
mov
push
movs
push
jo
mov
outs
mov
aaa
mov
xor
jl
and
fld
xchg
xor
inc
cmps
retf
pushf
push
jge
mov
sub
mov
cmps
xor
enter
call
xor
inc
sbb
inc
jl
push
mov
nop
ja
add
ins
sbb
xchg
jecxz
xor
jp
jo
jnp
push
jle
scas
pop
inc
into
sbb
ror
sub
scas
cli
mov
(bad)
test
outs
xchg
fwait
inc
mov
mov
bound
cwde
fdiv
xchg
sub
imul
cmp
push
sub
fmul
shl
and
xor
push
adc
adc
femms
add
dec
pop
cli
push
xor
dec
or
dec
cdq
add
fiadd
lods
mov
lahf
push
cmp
sbb
sub
pop
ds
shl
sbb
mov
push
in
clc
test
pop
les
push
imul
mov
test
pop
ficom
xor
and
fs
adc
sbb
mov
jge
shr
jl
dec
addr16
mul
mov
mov
das
adc
scas
mov
hlt
mov
push
push
(bad)
adc
xor
add
sub
ja
ret
sbb
and
clc
jnp
ficomp
mov
retf
lock
imul
mov
mov
aaa
test
sbb
push
scas
sbb
jb
and
xor
idiv
jns
repz
inc
sbb
out
enter
(bad)
je
dec
sar
clc
cmp
pop
pop
pop
jp
int3
out
movs
and
(bad)
mov
(bad)
cmps
jecxz
mov
imul
fdivr
scas
adc
popa
std
mov
pop
and
sbb
icebp
shl
out
and
xlat
cli
push
(bad)
cmc
enter
mov
pop
sub
ss
int3
add
in
sbb
cdq
pop
fmul
pop
int3
add
mov
and
dec
inc
data16
outs
push
dec
dec
pusha
xor
inc
push
add
cwde
mov
cmc
outs
int
cmc
pusha
sbb
test
add
jecxz
or
pop
sar
xor
mov
push
js
add
pop
cld
stc
test
push
call
aaa
divps
aaa
cmp
mov
push
sub
add
fs
imul
pop
pop
add
cmps
pop
cmp
pop
cmp
into
xor
or
dec
scas
jg
sti
jne
mov
outs
sub
cmp
cmp
cli
cdq
stc
xchg
sahf
xor
add
lock
mov
jg
js
aam
fcom
jns
aas
xchg
sub
and
mov
jl
(bad)
cmp
jg
push
stc
pusha
inc
lds
pop
pop
jo
push
and
push
fisttp
mov
ret
lahf
sbb
sbb
loop
js
and
mov
sub
mov
enter
aam
mov
jb
loope
test
loope
(bad)
rcr
jbe
popf
popw
sub
pop
movs
cmps
push
cmp
push
arpl
push
pop
add
pusha
xor
ror
xor
out
pop
xor
mov
add
scas
cmp
cdq
dec
pop
add
mov
(bad)
fnstsw
fadd
call
and
inc
cmp
mov
clc
sbb
xchg
test
movs
mov
das
movs
push
adc
rol
test
ins
mov
push
popa
stos
out
pushf
cmp
test
push
mov
or
gs
push
enter
sub
add
hlt
fiadd
(bad)
push
ins
or
pop
fcmovnb
jae
dec
out
cmp
xchg
sub
cmp
punpckhdq
pop
mov
clc
or
nop
jnp
ret
and
or
fucomip
leave
js
pop
jmp
xor
out
mov
xor
nop
xlat
jle
mov
int
dec
retf
test
adc
pop
out
mov
imul
pop
push
mov
inc
lods
jle
retf
shld
(bad)
(bad)
test
mov
push
xor
xchg
cmp
add
ins
sbb
nop
pusha
mov
in
ror
jb
mov
adc
xchg
or
pop
mov
mov
or
jns
push
jb
cmp
jbe
out
and
sbb
aas
xor
call
sbb
xlat
sbb
ins
(bad)
es
ins
test
sub
and
xchg
dec
sub
and
mov
idiv
jb
xchg
pop
out
out
jae
in
sbb
or
or
add
ja
mov
sub
adc
loope
add
js
bound
loope
and
(bad)
retf
mov
(bad)
jb
loop
cld
or
leave
inc
push
inc
or
sbb
fs
les
push
in
fld
push
repnz
push
jle
loope
loopne
add
out
jl
popf
xor
push
add
fsub
repz
daa
xchg
sar
cdq
leave
add
push
movs
daa
pop
and
(bad)
stos
pop
pop
mov
ins
loop
ret
or
push
pop
inc
test
into
adc
fist
cmp
ror
push
das
fcompp
or
jmp
mov
ror
cmp
sti
(bad)
or
pop
jb
es
inc
add
mov
int
dec
stos
aas
and
jae
jge
je
jge
mov
push
add
inc
mov
pop
loope
push
sbb
push
mov
sub
jecxz
inc
mov
xlat
sahf
push
ja
shr
ret
and
idiv
outs
and
leave
jmp
cwde
cmp
mov
call
mov
test
jne
push
pusha
add
jmp
imul
xor
mov
cdq
adc
xor
daa
mov
das
xchg
popa
(bad)
inc
inc
cs
sub
movs
pusha
movs
mov
cmc
jnp
inc
jo
cmc
mov
push
scas
push
sbb
mov
daa
and
in
xchg
cmp
(bad)
test
clc
outs
xor
push
mov
rcr
dec
repz
push
ds
(bad)
xchg
stos
mov
jno
mov
mov
mov
jmp
pop
(bad)
adc
dec
sub
xchg
xchg
clc
sahf
adc
pop
(bad)
inc
and
lods
push
mov
pop
adc
mov
xor
jp
fisubr
loopne
add
or
(bad)
in
mov
pop
inc
mov
xor
xchg
pop
rol
cwde
sub
fs
je
mov
fst
lea
add
nop
lahf
and
mov
mov
mov
and
jbe
sub
and
das
push
mov
dec
and
stos
xchg
push
pop
push
cmps
imul
add
mov
mov
lock
mov
out
xchg
xor
imul
jecxz
mov
xor
mov
data16
sub
jp
stos
or
mov
sbb
sub
lock
ret
sub
xchg
popf
addr16
pushf
mov
daa
test
push
mov
mov
xchg
rcr
inc
fwait
mov
sahf
push
mov
push
aaa
sbb
rcl
mov
push
jecxz
dec
dec
lea
xor
out
mov
fnstcw
or
mov
push
push
xor
mov
rep
jecxz
ret
sbb
aas
(bad)
jns
(bad)
jns
inc
adc
lfs
inc
out
out
in
cmp
test
ret
fldcw
mov
add
stc
mov
or
loop
popa
dec
gs
aad
ins
in
in
sub
push
arpl
ficom
ins
mov
inc
adc
rcl
jp
loope
cmp
mov
js
push
pop
call
arpl
jmp
movs
mov
inc
das
repz
popa
dec
push
pop
scas
ds
xchg
nop
mov
fwait
jb
xchg
fisubr
jb
inc
das
leave
jo
cmp
(bad)
(bad)
call
sar
pop
push
sub
stos
inc
mov
cmp
sbb
or
mov
mov
test
add
and
ret
cmc
es
not
dec
push
icebp
daa
outs
xchg
std
int
(bad)
mov
fs
and
dec
loope
aad
or
mov
sbb
push
xchg
xor
pusha
sub
test
mov
rep
mov
mov
hlt
stc
in
cmp
push
push
adc
mov
or
push
jg
outs
retf
mov
loop
pop
ret
xor
fwait
stos
xor
div
xchg
xor
mov
add
or
call
repz
mov
in
in
les
push
movs
sub
and
jno
jbe
jae
in
stos
dec
retf
and
push
enter
test
fs
inc
loopne
push
xchg
stc
pop
adc
rol
add
sub
fisubr
push
push
out
sar
push
lock
dec
rcr
jecxz
int
pop
sub
inc
jnp
cmp
imul
cli
aad
hlt
inc
add
leave
adc
mov
dec
xor
daa
xchg
sub
pop
cmc
int3
jmp
adc
in
aam
fistp
ret
mov
sbb
pop
scas
sub
out
mov
cli
jp
adc
cmp
inc
inc
push
pop
imul
idiv
cmp
nop
jo
js
lahf
sar
and
sbb
lahf
dec
scas
cmp
dec
pop
loopne
mov
ins
dec
stc
(bad)
and
mov
int3
aad
in
rcl
push
fidivr
test
stos
call
mov
push
fld
jae
xchg
push
int
xchg
mov
or
js
inc
jbe
add
push
retf
inc
cmps
mov
test
jg
dec
mov
and
rol
add
xchg
jno
pop
pop
jns
pop
addr16
mov
inc
ja
std
fsub
cs
mov
lods
xchg
push
aad
inc
fbld
idiv
sub
inc
ficomp
push
cmps
loop
sti
mov
push
mov
dec
xchg
ja
mov
movs
data16
inc
xor
(bad)
or
stos
je
es
xchg
xchg
pop
pop
xchg
sub
inc
ins
fadd
not
mov
pushf
adc
adc
mov
iret
cdq
(bad)
loop
daa
dec
sbb
cmc
dec
(bad)
mov
loope
inc
int
jb
fsub
inc
(bad)
dec
and
mov
xor
and
sub
sti
mov
gs
jp
popa
sub
or
sub
inc
cmps
shl
movs
push
push
or
lea
jecxz
push
adc
cmp
xchg
movs
sbb
mov
inc
aaa
jl
cld
or
(bad)
and
sub
nop
or
push
cs
pop
sub
inc
adc
aad
fld
add
bound
dec
pop
and
pop
cli
jae
in
out
lods
(bad)
out
imul
call
pop
inc
adc
in
fistp
or
jmp
mov
and
into
ss
rcr
and
imul
sbb
leave
jge
in
shl
stos
and
push
cdq
rcl
dec
or
pop
cmp
and
cli
inc
jmp
cmc
or
stos
xchg
mov
pop
cmps
mov
sbb
data16
push
mov
imul
mov
mov
cmp
xchg
mov
jl
(bad)
lods
imul
mov
stos
test
hlt
pop
xor
or
stc
(bad)
sub
sub
(bad)
fsubr
sub
test
adc
ficom
adc
mov
jp
push
sub
outs
iret
adc
mov
pop
js
(bad)
cmp
(bad)
sbb
mov
jb
js
mov
dec
mov
add
bnd
jae
(bad)
call
in
cmp
stos
in
push
push
jo
(bad)
ror
jns
push
leave
sar
push
fistp
cmp
xchg
xor
mov
inc
push
mov
mov
push
push
leave
cmp
xchg
das
add
dec
xor
mov
inc
jne
xchg
rol
dec
push
xor
daa
sub
push
pushf
retf
add
add
rol
pushf
dec
shl
and
fs
mov
or
mov
out
pop
pop
mov
jno
sbb
lods
out
daa
cmp
and
or
les
mov
enter
or
sahf
clc
dec
pop
add
lock
in
pop
les
mov
out
mov
xor
mov
rol
sbb
imul
cmp
int
aaa
fstp
sub
scas
xchg
call
call
adc
inc
shr
mov
mov
inc
push
adc
leave
jno
shl
shl
repz
not
xchg
inc
dec
mov
rol
in
lea
daa
hlt
mov
in
mov
out
inc
push
sbb
sub
mov
push
sbb
mov
or
cmp
and
push
scas
scas
in
test
mov
xchg
cdq
xor
mov
sub
xchg
xchg
or
sub
js
cmp
and
inc
popf
fidiv
xchg
call
leave
mov
or
rcl
add
xor
adc
and
pop
pusha
leave
sahf
clc
test
dec
imul
push
repz
outs
ja
retf
or
sbb
es
stc
jbe
sti
cdq
jno
lock
fld
retf
gs
stos
test
dec
das
shr
das
jecxz
mov
jne
ja
and
cmp
mov
jmp
stos
inc
jbe
add
std
cld
pop
movs
xchg
inc
push
xchg
mov
mov
cld
repnz
push
sbb
js
cwde
(bad)
movs
inc
mov
stos
shl
jg
or
in
mov
sub
js
mov
and
int
xor
push
mov
imul
jmp
sbb
jecxz
sbb
and
test
in
mov
sbb
jle
shr
(bad)
pop
and
sbb
sahf
xchg
inc
jno
test
in
clc
inc
pop
jmp
and
loop
pop
inc
mov
ss
dec
outs
cmp
push
cmc
ret
into
or
test
stc
mov
cmp
pop
cmp
cs
push
adc
jb
je
ja
push
jno
test
rol
scas
int3
push
call
test
repz
push
cmp
inc
fild
ltr
inc
scas
cmp
mov
xchg
jno
cmps
dec
mov
jge
dec
xor
dec
inc
leave
outs
hlt
fwait
sbb
fcom
in
daa
dec
fistp
sbb
rol
ins
cli
and
sub
inc
mov
jle
mov
jle
xor
or
out
mov
jg
lahf
(bad)
sbb
rol
(bad)
mov
daa
call
rcl
les
int
les
nop
das
pop
out
loop
mov
ins
adc
ja
mov
mov
sbb
lea
scas
cmps
sub
mov
mov
aas
cmp
jno
call
fcom
leave
sub
(bad)
mul
xchg
lods
push
cmp
stos
stos
pop
shr
stos
dec
or
fdiv
mov
cmp
xchg
sub
sub
xchg
cmps
(bad)
aad
inc
inc
and
mov
imul
push
jge
es
sub
mov
xchg
dec
mov
test
inc
push
fild
push
cli
fwait
sbb
mov
pmovmskb
rcr
fs
(bad)
and
test
dec
movs
pop
lods
inc
(bad)
xchg
mov
test
test
in
gs
or
inc
xchg
mov
xor
pop
into
arpl
stc
lock
push
nop
icebp
lods
imul
mov
test
cmp
jns
push
out
fs
xlat
cmp
outs
fsub
(bad)
lock
(bad)
sti
mul
in
test
pushf
scas
push
and
inc
pusha
add
adc
jmp
popa
repz
add
mov
(bad)
fiadd
xchg
fwait
push
data16
push
enter
dec
test
outs
in
lods
sub
inc
push
cli
cwde
retf
out
popf
iret
mov
ret
cmps
loop
leave
jp
mov
out
or
xchg
xor
movs
pop
push
sbb
push
mov
pop
movs
cli
shr
data16
xor
addr16
(bad)
dec
xor
and
test
jo
sbb
xchg
jns
in
pop
(bad)
test
cs
or
adc
dec
xchg
or
jbe
sti
sub
push
sbb
add
into
inc
dec
imul
jnp
aam
mov
pop
pushf
lds
ds
int3
lock
ss
std
add
mov
cmp
cmp
jnp
imul
stos
rcr
aas
out
inc
inc
push
fmul
movs
popa
mov
ror
and
ins
ja
jg
aas
mov
push
call
mov
imul
repz
std
xchg
gs
sbb
inc
outs
jns
adc
and
pop
xchg
aad
push
push
rol
imul
scas
adc
adc
inc
adc
aaa
add
cmc
(bad)
cmp
stos
and
call
(bad)
std
ror
retf
mov
stos
loop
sub
ret
mov
(bad)
idiv
push
dec
add
add
ret
in
fst
imul
out
ret
jnp
scas
rcr
ds
mov
jl
add
fisubr
out
sub
mov
ss
push
std
movs
movs
cdq
movs
cmc
xor
pop
xlat
ins
outs
out
cs
jo
sub
call
xchg
push
jbe
cmp
mov
push
jge
nop
sbb
jno
jae
loop
pushf
cmp
ss
jnp
xor
or
shr
dec
aaa
aad
fwait
jg
ja
xchg
add
xchg
mov
in
xlat
(bad)
int3
ss
jle
fs
jae
(bad)
mov
cli
mov
sbb
sbb
pop
adc
into
mov
xlat
and
xor
dec
mov
xor
repz
in
push
push
outs
call
lods
out
xor
sbb
pop
xor
adc
inc
push
cwde
addr16
xchg
div
sbb
(bad)
or
mov
mov
sahf
inc
push
mov
stos
test
pop
outs
data16
xchg
jbe
pushf
(bad)
imul
fisttp
rol
jno
movs
aam
mov
dec
xchg
(bad)
popf
(bad)
sub
cmp
jp
jne
ins
or
out
movs
mov
push
dec
jge
dec
jge
xor
sbb
loop
mov
mov
pushf
pop
bound
xchg
push
pusha
jbe
jecxz
lea
push
jle
pushf
jmp
cwde
les
push
mov
push
hlt
fistp
cs
xchg
add
add
dec
xor
mov
das
xchg
add
fs
hlt
xchg
and
jl
test
push
or
and
jns
cmps
sub
push
jno
shr
cmps
popa
mov
dec
fsubr
mov
call
mov
xlat
hlt
cmp
shl
mov
mov
jl
inc
add
sbb
iret
int
or
cmps
jmp
jne
sub
arpl
inc
repz
outs
hlt
pop
ins
in
lea
pop
jmp
add
sub
stc
jp
sbb
icebp
mov
pusha
fst
cmp
stos
sbb
inc
mov
push
mov
repnz
dec
sub
fcomip
inc
mov
(bad)
push
std
dec
adc
in
in
loope
sbb
jns
and
daa
in
repnz
mov
adc
icebp
repz
dec
xchg
sahf
stc
sar
mov
xlat
(bad)
mov
jnp
mov
cmp
jge
fldenv
or
popf
mov
adc
movs
push
aas
stos
stos
hlt
pop
enter
fwait
stos
xchg
or
ror
push
data16
pop
or
movs
inc
pop
scas
and
push
scas
push
inc
mov
retf
frstor
inc
jno
fcom
dec
push
add
lods
pop
fscale
stc
nop
dec
lods
jns
and
ss
adc
es
xchg
mov
jge
aad
sbb
pop
into
sbb
arpl
js
(bad)
push
jmp
(bad)
test
push
out
repz
not
xchg
stc
iret
xor
cs
lods
adc
pushf
outs
mov
ret
lds
pop
fwait
xor
(bad)
inc
pop
int3
call
xor
ds
cmps
in
adc
dec
xor
xor
add
out
push
mov
stos
in
sbb
sub
adc
ja
imul
mov
js
cmp
adc
jne
out
fdivr
xchg
and
fisubr
cmp
inc
sub
inc
jb
xor
push
mov
aad
xor
call
cmp
jns
xor
movs
or
in
xlat
js
ins
mov
inc
jbe
sub
jmp
pop
ret
push
sub
or
sar
cmp
cmp
fdiv
in
loopne
pop
out
mov
pop
jno
fstp
mov
sbb
sub
xor
test
gs
push
cmps
call
dec
push
mov
mov
je
adc
cmp
xchg
call
aas
in
pop
pop
dec
jbe
mov
and
pop
mov
jnp
ss
aas
lahf
push
jmp
repnz
push
xchg
in
clc
adc
pop
pop
scas
sub
add
iret
inc
pop
mov
cmp
sbb
daa
mov
inc
shl
icebp
int
cs
sbb
pop
mov
das
xchg
rcl
mov
and
push
and
lea
and
mov
push
mov
cmp
shl
ds
dec
push
(bad)
arpl
mov
pushf
xchg
imul
xchg
jb
out
lea
test
(bad)
pusha
cwde
push
daa
ret
add
clc
(bad)
cmps
ficom
js
jb
int3
inc
push
leave
popa
adc
xchg
xor
stos
sbb
and
mov
data16
sub
repnz
cld
test
push
cmp
pop
add
(bad)
shr
das
sub
jp
or
jns
inc
xor
outs
push
bound
lds
or
ss
loope
mov
(bad)
in
fsub
inc
vpsubsw
dec
cmp
rol
imul
cld
out
dec
and
sub
inc
mov
scas
push
shl
mov
sub
jg
fprem
cli
cwde
lods
cld
cdq
scas
adc
xor
les
outs
mov
xor
aas
int3
jle
mov
call
adc
xor
dec
mov
push
push
push
jge
je
retf
sub
sti
xchg
jo
dec
out
and
xchg
pop
cmp
mov
lds
shl
std
xor
je
jns
dec
sub
ss
mov
stos
scas
xor
sar
js
loop
(bad)
push
es
fldenv
cwde
fcom
retf
fistp
cmp
mov
hlt
(bad)
ins
jns
aas
sbb
mov
mov
xchg
push
and
inc
mov
mov
adc
cmp
test
jmp
imul
in
scas
mov
fs
lock
jno
neg
mov
xchg
adc
mov
fadd
fimul
mov
xor
pop
sub
sbb
arpl
sti
xlat
push
xchg
std
data16
or
or
jecxz
xchg
aas
cli
dec
fld
jae
xchg
jmp
inc
jp
and
dec
stc
or
ret
push
cs
jle
fwait
scas
push
mov
inc
cs
popf
dec
clc
outs
std
xchg
jg
jge
xchg
or
pop
inc
sub
scas
mov
cmp
add
cwde
outs
pop
or
mov
add
dec
cmp
pop
mov
pop
sti
xchg
add
mov
cmp
(bad)
pop
sub
xchg
js
in
daa
dec
movs
ss
stos
add
mov
xor
js
pop
outs
ds
bnd
scas
cwde
daa
sti
or
ins
movs
cmp
ins
data16
and
adc
xchg
jno
pop
jg
repnz
scas
cmc
imul
fst
(bad)
push
add
jo
and
dec
mov
push
sub
xchg
jae
mov
xchg
mov
lock
das
lds
jo
pusha
inc
les
sar
fnstcw
test
pushf
loop
pop
cld
mov
stos
jo
int
fucomi
jmp
lock
retf
out
push
fs
and
jae
lods
mov
neg
(bad)
xor
lds
pop
lea
pop
adc
jmp
movs
je
xchg
inc
jmp
rcl
(bad)
aad
add
adc
loopne
scas
clc
nop
xchg
in
mov
push
ins
fisubr
cmp
rcr
push
xchg
and
gs
inc
or
mov
inc
dec
add
mov
push
gs
mov
lock
adc
push
lahf
nop
arpl
ins
cmps
mov
xchg
lods
ret
xor
ins
jle
hlt
jg
iret
sahf
leave
ins
jnp
sbb
mov
fsub
cmp
mov
pop
call
mov
outs
fisttp
sub
lods
test
pop
or
sub
fs
lods
addr16
xchg
inc
xchg
xor
xchg
out
jae
sbb
sub
push
mov
les
addr16
mov
adc
in
mov
mov
in
popf
outs
stos
cwde
pop
pop
je
and
cmc
clc
dec
(bad)
xchg
mov
in
push
xchg
aad
int3
and
pop
cmp
fndisi(8087
sub
or
lods
inc
cmp
(bad)
(bad)
xor
cmps
inc
cdq
sar
sbb
mov
ret
aad
out
das
mov
in
xchg
push
pop
(bad)
js
pop
mov
outs
test
cmp
mov
add
push
stos
loop
sub
push
inc
push
mov
mov
lods
ss
dec
pop
xchg
out
repnz
push
(bad)
movs
jge
ja
cmps
xchg
jns
enter
add
shr
stc
outs
xchg
push
fild
xchg
and
clc
sbb
pop
xor
mov
push
ja
xchg
jge
inc
mov
faddp
cmps
xor
scas
inc
or
pop
ds
dec
jae
or
sub
cli
lods
cld
or
dec
push
cmp
mov
popf
push
or
cs
(bad)
in
stos
jno
and
cmp
retf
mov
arpl
scas
mov
xor
cwde
cli
cmp
ret
pop
nop
pop
inc
ja
enter
outs
lock
popa
and
mov
mov
test
stos
jle
rol
daa
sub
sub
lock
mov
or
mov
add
push
scas
pop
jmp
dec
movs
je
jge
xchg
xchg
mov
mov
cli
cmp
shr
fist
push
or
ds
ret
push
into
cmps
nop
add
jnp
int
ins
cwde
fisubr
inc
pop
pop
(bad)
pop
inc
scas
mov
test
je
mov
iret
mov
add
add
ffree
fsubr
fimul
jns
cwde
call
fs
mul
jae
mov
jns
or
fidivr
xchg
rcl
xor
sti
jns
inc
hlt
cmp
sub
sbb
jl
fcmovu
je
sub
clc
loope
pop
and
adc
xchg
fisubr
fs
cmp
add
push
bound
push
mov
push
dec
pop
retf
dec
rcr
push
int3
mov
push
mov
(bad)
in
jl
fld
sahf
cmps
add
xchg
div
shl
push
ins
call
out
jae
mov
and
int
popf
push
lods
or
int3
es
repnz
add
in
or
jne
pop
jb
push
pop
sti
arpl
mov
lods
(bad)
rcl
sub
test
mov
add
jbe
test
jecxz
ds
in
loope
dec
mov
(bad)
icebp
in
sub
jnp
jbe
stos
jnp
mov
js
mov
add
add
sahf
fcom
adc
add
cmps
inc
sbb
jmp
fucomp
pop
mov
fidivr
std
outs
data16
lock
xor
nop
es
xchg
cmps
lea
test
leave
adc
mov
outs
sbb
shl
ret
pop
xchg
jle
mov
xchg
or
sbb
ret
out
add
fcom
sbb
shl
loop
pop
fst
(bad)
in
sub
cmp
and
int3
mov
pop
test
inc
jmp
adc
js
mov
(bad)
xchg
sti
(bad)
cmc
in
mov
jmp
sbb
mov
pop
test
push
mov
mov
stc
xor
jge
call
or
xor
ror
pushf
aaa
xor
fucomip
mov
adc
test
pop
add
hlt
jns
aam
mov
push
add
jge
mov
adc
es
test
retf
cmp
sti
push
add
out
sub
xchg
pop
pop
sysenter
test
push
and
dec
out
popf
push
push
(bad)
mov
dec
sbb
icebp
or
rcl
mov
cwde
sub
ds
repnz
pop
sub
xchg
fadd
xchg
pushf
int
dec
add
or
sub
movs
test
test
xchg
daa
adc
or
cli
int
pop
mov
out
iret
cli
cmp
mov
mov
test
jle
test
adc
into
and
xor
lahf
dec
dec
shl
xor
mov
es
pop
pop
sti
cmc
inc
cmp
fdivr
xor
fcom
dec
idiv
dec
pusha
in
cmp
hlt
jmp
mov
add
out
push
and
out
and
cmp
sar
jge
jmp
loop
sahf
mov
stos
mov
xchg
inc
jle
(bad)
xor
jne
(bad)
lock
mov
adc
(bad)
cld
adc
ins
xchg
mov
inc
push
adc
mov
push
mov
xchg
cld
sub
or
cld
sbb
pusha
aaa
lods
mov
rcr
cmc
xor
mov
mov
mov
push
repz
or
frstor
lods
mov
pop
mov
pop
gs
into
aas
sbb
lods
push
hlt
adc
adc
out
movs
mov
adc
ins
dec
cdq
lods
or
xchg
mov
push
or
mov
adc
mov
xlat
imul
dec
dec
jmp
cmp
jmp
iret
cmp
push
cmp
pop
xor
clc
nop
add
aad
jno
cmps
(bad)
push
test
jl
xchg
or
push
mov
xchg
sbb
push
or
push
adc
xor
(bad)
cmp
adc
push
or
push
pop
ja
pop
ins
jmp
sub
out
or
sbb
sbb
cwde
mov
jb
test
dec
retf
rol
add
mov
data16
fcmovu
and
and
xchg
push
test
dec
mov
int
xchg
mov
push
cdq
mov
cmps
jns
add
int3
mov
stos
stos
out
and
mov
xchg
stos
adc
retf
sti
cmps
cmp
xor
jno
pop
clc
cmp
xchg
(bad)
repnz
(bad)
xor
push
loope
arpl
cmp
scas
out
iret
arpl
rol
sahf
out
xor
pop
fcmove
(bad)
repnz
jns
xchg
cdq
xchg
fild
pop
in
mov
loope
cmp
retf
add
outs
mov
sub
(bad)
jo
gs
inc
cmps
add
sub
pop
rol
inc
leave
cmp
ffree
push
lock
push
xlat
mov
inc
cmp
pop
test
arpl
and
lds
sbb
es
mov
int3
iret
sub
jns
gs
je
jo
add
pop
fisttp
cld
jg
jge
in
lods
mov
adc
inc
retf
cwde
loope
push
dec
dec
push
lods
scas
xor
fidivr
cmps
jle
not
cmp
jbe
sbb
mov
or
mov
xchg
jmp
fstp
push
scas
cmc
xor
movs
popa
iret
adc
dec
pop
mov
ja
sub
dec
je
add
mov
shr
call
dec
pop
cmps
in
jecxz
dec
call
int3
mov
lods
jnp
push
adc
sahf
outs
pop
and
in
hlt
mov
int3
ffree
sbb
les
mov
mov
xor
adc
mov
shl
mov
add
xchg
pop
cdq
and
pop
mov
outs
out
mov
push
enter
adc
nop
test
popa
cli
(bad)
int
test
out
add
jbe
sbb
les
out
shl
adc
sahf
push
popf
mov
jp
jmp
jmp
loopne
xchg
in
pop
push
shr
fs
jmp
ds
in
dec
out
dec
test
mov
xchg
scas
stos
(bad)
jg
cmp
pop
mov
sub
ins
psllw
xchg
jl
or
dec
mov
mov
nop
call
stc
mov
sub
push
fs
mov
inc
or
jp
jae
cwde
or
mov
jp
and
retf
pushf
(bad)
in
sbb
icebp
and
jle
nop
(bad)
aas
push
test
xchg
jno
push
xor
sub
in
dec
sub
cdq
outs
arpl
mov
push
leave
push
xchg
or
add
pop
or
or
jmp
inc
pusha
retf
adc
push
jnp
xor
sub
sub
iret
jo
push
or
push
pushf
xchg
push
jne
mov
test
sar
mov
(bad)
(bad)
pusha
sub
stos
xor
mov
or
pop
sahf
inc
jl
mov
dec
in
pusha
lods
sub
dec
fidivr
push
repz
jnp
mov
or
jge
iret
dec
or
dec
lods
pop
sub
jl
or
(bad)
ds
mov
(bad)
in
pop
cmp
scas
jne
xor
(bad)
cdq
enter
into
dec
ins
out
adc
dec
cld
loop
fcmovbe
inc
call
mov
ins
jmp
dec
aaa
add
or
cmc
and
xchg
nop
cmc
jo
mov
rol
xchg
gs
(bad)
daa
mov
lods
lock
cmps
cdq
or
loop
scas
dec
out
adc
inc
mov
pop
mov
xchg
push
push
stos
fst
pop
inc
icebp
nop
xor
lods
es
fnsave
inc
ins
xlat
lods
xchg
mov
push
fcom
fisubr
(bad)
ficomp
push
inc
pop
mov
adc
sbb
jecxz
mov
imul
and
jmp
leave
push
aad
mov
cmp
cmps
and
les
int3
mov
xor
rep
pop
mov
inc
daa
mov
cmp
dec
ror
or
adc
sub
in
mov
es
dec
mov
mov
and
sbb
pop
mov
inc
sar
and
add
xchg
cs
out
xlat
sar
or
push
iret
outs
mov
and
and
pop
xchg
or
popf
mov
popf
mov
call
or
repnz
movs
movs
and
clc
in
mov
aad
cmc
push
call
add
idiv
stos
dec
or
xor
or
xlat
add
(bad)
or
iret
inc
sbb
jg
pop
add
inc
mov
xor
mov
or
add
mov
sbb
mov
retf
ds
stos
jmp
sub
xor
adc
aaa
mov
mov
or
push
and
and
movs
jne
icebp
test
(bad)
retf
repz
xor
mov
mov
out
jns
xchg
aam
fdiv
jne
inc
outs
inc
mov
adc
test
aad
cmp
and
xor
test
jne
xlat
pop
(bad)
inc
fnstcw
mov
xor
(bad)
leave
daa
leave
and
mov
dec
push
adc
xchg
mov
xchg
shr
jg
jg
cmp
(bad)
pop
adc
add
icebp
push
dec
jae
dec
loope
not
fsub
adc
and
sbb
ss
pop
dec
cdq
in
jle
jge
gs
fst
fiadd
jne
(bad)
cmp
lods
into
mov
inc
div
les
pop
bound
mov
pop
adc
hlt
addr16
cmp
add
push
repz
push
aad
dec
fimul
inc
mov
mov
aam
outs
int3
sub
inc
sbb
sbb
data16
xchg
mov
(bad)
mov
int
xchg
sub
and
adc
jno
mov
cs
cmc
fcom
cmp
pop
sub
rol
jmp
sub
pop
ins
sub
inc
xlat
and
outs
mov
(bad)
and
mov
stos
xor
lods
adc
call
mov
in
lock
pop
push
jp
scas
daa
inc
mov
rcr
in
adc
pop
add
cmps
std
repnz
test
add
sbb
retf
std
mov
cmps
in
pop
push
cs
add
ficomp
or
adc
add
out
or
lods
mov
popf
lea
xor
cmps
cmp
mov
pop
add
sbb
mov
sbb
xor
lock
sub
lods
loope
ds
inc
or
outs
pop
and
cwde
push
js
shr
sar
fld
inc
sbb
and
fdivr
jne
pop
cmps
pop
pop
jge
mov
add
push
daa
adc
nop
jmp
add
sub
mov
inc
mov
(bad)
(bad)
lods
jp
stos
and
dec
rcl
add
out
repz
add
hlt
stc
sub
jl
retf
add
xor
inc
mov
div
mov
dec
sbb
push
adc
sub
mov
loope
cmp
mov
or
outs
jmp
ins
push
test
add
dec
mov
xor
dec
fcom
ins
cmp
dec
jle
gs
loope
div
les
faddp
jecxz
mov
pop
xchg
mov
in
sub
mov
add
push
sbb
mov
xchg
xor
mov
loopne
fsub
shr
bound
pop
xchg
push
int3
xchg
mov
jmp
and
xchg
mov
repnz
sub
hlt
mov
adc
in
fwait
je
jb
sbb
scas
(bad)
(bad)
adc
stos
pop
pop
pop
mov
stos
inc
jmp
mov
cmc
ror
jnp
sub
test
clc
mov
mov
packssdw
push
fidiv
(bad)
leave
xor
ins
sti
ins
xor
ret
push
pop
fist
call
outs
and
sbb
pop
retf
paddusb
xor
shl
push
test
fs
cwde
dec
adc
sbb
bound
fucom
fdiv
cs
or
adc
(bad)
mov
addr16
pop
bound
jecxz
loope
adc
in
mov
xor
push
jnp
sbb
imul
xchg
fdivr
es
jmp
loopne
or
sub
push
add
jns
jp
jl
retf
mov
hlt
pop
inc
push
xchg
inc
or
push
mov
stos
fild
sahf
inc
and
fs
inc
sbb
push
retf
adc
(bad)
and
xor
movs
add
and
retf
stos
and
fs
dec
mov
call
dec
push
push
movs
push
stos
sbb
repnz
mov
cmp
dec
cmove
call
mov
stos
jns
mov
int3
lock
jnp
aas
popa
jb
pushf
add
sub
xor
ds
ja
sbb
lods
out
xchg
mov
(bad)
aad
xor
bound
leave
not
cmp
cwde
mov
inc
adc
popa
mov
cmps
adc
sub
test
call
pop
dec
fiadd
js
ret
adc
adc
in
xchg
sub
sub
ret
or
adc
(bad)
(bad)
mov
pop
(bad)
fcomp
adc
sbb
adc
sbb
or
add
nop
jecxz
out
ins
iret
loopne
mov
adc
xor
push
cwde
leave
stos
imul
iret
inc
jno
jbe
sbb
pop
dec
sub
mov
daa
(bad)
loop
add
xlat
cmp
xchg
loopne
iret
dec
fdivp
mov
jns
mov
dec
cmc
sub
loope
(bad)
cmps
aam
fcomp
loop
adc
and
mov
jmp
pop
pop
(bad)
or
pop
fsub
jae
sbb
loope
xchg
cwde
fidivr
fwait
mov
movs
and
into
jnp
mov
enter
inc
aaa
push
jp
mov
dec
mov
push
adc
popf
mov
and
mov
sbb
in
jo
add
push
jge
(bad)
sbb
push
jp
xchg
mov
push
xchg
jno
leave
and
in
inc
xchg
int3
ja
xchg
and
scas
scas
add
inc
sub
inc
pushf
push
jp
fsubr
rcl
imul
push
pushf
stos
xchg
cmc
(bad)
retf
lods
inc
dec
addr16
pushf
xor
inc
shl
stos
xchg
mov
int3
sbb
outs
sbb
(bad)
sbb
cli
and
push
iret
or
or
fcomp
sub
adc
xor
mov
lods
pop
ja
jl
ins
popa
icebp
mov
add
sar
add
jnp
mov
jno
xor
sbb
aad
xchg
fcmovb
pop
jle
das
push
test
jg
inc
stos
retf
or
mov
xor
loopne
inc
sbb
imul
push
retf
repz
pop
aam
fsubrp
call
add
sub
or
xor
xor
outs
cld
ins
jmp
adc
sbb
ins
test
popw
sbb
cmps
enter
xchg
xchg
sbb
rcl
icebp
aad
pop
imul
stc
arpl
test
mov
fdiv
iret
stos
fsubrp
inc
aaa
sub
sahf
jae
rol
mov
js
add
push
mov
inc
enter
iret
stc
and
adc
fisub
adc
jb
neg
push
xchg
pop
mov
sbb
adc
add
mov
mov
push
sub
imul
fmul
and
mov
mov
xor
mov
lahf
test
ja
inc
cwde
ror
jbe
mov
std
fisttp
jae
mov
pop
sub
dec
push
sub
mov
jae
and
jg
enter
push
push
sub
fisttp
ret
mov
sti
or
jbe
std
imul
fadd
dec
das
add
aam
push
dec
mov
popf
add
scas
scas
lods
sbb
lds
ret
jno
lods
fisubr
adc
mov
adc
in
push
movs
jl
fld
ins
push
push
cmp
dec
cmps
sub
jecxz
inc
mov
inc
push
lds
(bad)
mov
cmc
aam
pop
gs
push
mov
stc
mov
mov
xchg
and
mov
jge
ss
sub
pop
test
xor
(bad)
movs
icebp
out
xchg
icebp
imul
ja
jb
test
mov
jnp
ffreep
inc
mov
in
and
fild
mov
dec
adc
pop
adc
push
cli
loope
fwait
pop
inc
daa
sbb
cmp
sub
(bad)
das
addr16
cli
fwait
cmp
xchg
mov
dec
aaa
test
inc
movs
pop
dec
mov
cmp
xchg
jns
mov
test
ja
imul
inc
fld
and
scas
dec
and
(bad)
push
nop
stos
push
cli
sub
mov
cmps
push
test
mov
xor
lea
imul
mov
inc
aad
bnd
das
pop
int3
sub
xor
gs
inc
inc
in
stos
push
cmc
xor
scas
bound
stos
mov
cmp
xchg
jnp
or
mov
pop
sub
(bad)
adc
fisubr
push
test
mov
adc
push
fwait
xchg
push
xlat
mov
(bad)
out
(bad)
int3
imul
test
test
mov
(bad)
aad
mov
dec
push
js
mov
div
mov
sbb
clc
repz
mov
hlt
mov
or
or
ret
loope
jno
xor
xchg
jns
out
cmp
data16
stos
xor
imul
int
jb
call
ins
dec
scas
test
loop
lods
into
arpl
push
push
inc
popf
data16
jne
dec
xor
jno
or
shl
fcom
mov
fcom
and
(bad)
jmp
mov
mov
aas
addr16
les
lods
mov
jb
repz
fisttp
aam
cmp
pop
(bad)
mov
stos
add
mov
imul
push
inc
dec
aaa
mov
leave
jg
xchg
mov
xchg
xor
(bad)
sbb
mov
xchg
test
mov
(bad)
adc
pop
shl
or
retf
dec
jb
test
test
leave
sti
sti
js
out
fs
adc
std
sub
(bad)
in
loop
in
outs
sub
mov
mov
(bad)
sub
fs
pop
retf
push
pop
cld
dec
repnz
int3
xor
test
jecxz
retf
jns
fnstenv
cmps
data16
fs
fiadd
popa
(bad)
pop
sbb
xchg
das
inc
sub
loope
clc
call
sub
adc
std
popf
jmp
push
jo
js
jp
xor
not
std
lea
xor
sub
xchg
mov
jne
das
mov
or
mov
cld
in
inc
fs
adc
inc
adc
push
stos
mov
mov
cli
test
arpl
mov
hlt
and
jmp
lods
cmp
dec
and
cmp
push
and
add
mov
add
(bad)
fcmovne
mov
shl
inc
nop
adc
leave
sahf
cmp
cmp
mov
xchg
xchg
int3
in
shl
loope
test
mov
mov
mov
mov
out
mov
or
inc
aaa
xchg
pushf
jne
xchg
pop
jb
fistp
sub
or
sar
cmc
sub
lods
in
stos
inc
rcr
or
cmp
in
test
sbb
and
or
add
addr16
inc
stos
lock
jae
mov
out
out
jecxz
mov
inc
jo
cwde
push
inc
mov
out
mov
push
add
pop
mov
add
sub
leave
call
adc
adc
ffreep
shl
mov
mov
push
ficom
loopne
rcr
nop
int3
xchg
dec
and
mov
aad
enter
aaa
mov
xchg
or
je
outs
clc
ins
push
icebp
and
inc
cmove
mov
xchg
lods
jecxz
or
mov
in
test
mov
jecxz
jns
add
loop
mov
pop
dec
fimul
ja
mov
mov
sti
mov
or
xchg
xchg
dec
mov
loopne
repz
test
ja
push
imul
addr16
add
or
cwde
inc
and
push
sbb
mov
push
les
jp
repnz
xchg
xchg
sub
shl
mul
cld
mov
dec
inc
and
cmp
fwait
add
mov
scas
pushf
mov
mov
aaa
inc
sub
or
dec
movs
fs
sub
mov
rcl
pusha
es
leave
dec
dec
sub
fucomi
cld
in
out
xor
push
mov
fdiv
ds
fcom
aaa
int
and
test
pop
enter
or
push
adc
leave
(bad)
ins
(bad)
fsin
popa
xchg
out
call
scas
daa
cs
(bad)
dec
dec
push
ret
push
loop
jno
jne
sbb
fld
add
jle
cmp
jp
pop
rcl
cmc
jns
push
jmp
sbb
lahf
into
shl
movs
adc
test
arpl
nop
int3
imul
sbb
adc
mov
sbb
(bad)
sbb
adc
jmp
stos
inc
jnp
or
jge
cdq
xor
sar
adc
push
pop
xor
shl
xlat
cmp
lds
out
or
xchg
jne
inc
aaa
push
xor
push
loope
(bad)
adc
icebp
aad
mov
xchg
xchg
mov
(bad)
ret
sub
hlt
or
mov
dec
xchg
xchg
ret
mov
mov
dec
es
stc
pop
xor
mov
pop
jbe
hlt
jp
outs
inc
data16
xchg
(bad)
ins
mov
pop
(bad)
mov
cmps
leave
jne
mov
xchg
mov
xchg
pop
fldenv
or
dec
push
lahf
cmps
mov
cmp
and
or
dec
fcmovnb
test
repz
dec
push
movs
in
inc
dec
inc
popf
jo
mov
add
jb
cwde
inc
xchg
jns
push
repz
lock
(bad)
dec
pop
mov
mov
xchg
xor
jge
xlat
aad
jne
inc
xor
jp
jge
imul
jg
ds
mov
cmc
jo
mov
cpuid
cmp
dec
xchg
movs
iret
adc
clc
test
ret
add
pop
test
xchg
ror
shr
add
stos
xor
cmps
sahf
push
int3
mov
mov
aaa
and
add
add
dec
ret
int
in
mov
je
out
sub
movs
xchg
sbb
stos
or
ss
mov
jne
and
xchg
pop
or
in
sub
push
jns
dec
or
rcr
jbe
aad
std
lock
push
adc
cld
pop
push
clc
jb
sbb
rcr
mov
xor
iret
cld
sbb
xor
sub
mov
scas
jl
lock
or
div
(bad)
repnz
idiv
movs
xchg
clc
dec
loopne
mov
dec
jns
frstor
mov
ror
repnz
sub
push
cmp
mov
xor
xchg
jmp
jecxz
dec
or
fs
sahf
sub
mov
cmp
call
stos
outs
lea
xor
out
std
out
mov
dec
mov
jecxz
mov
in
xchg
popa
inc
mov
mov
in
mov
add
dec
push
mov
and
cmp
push
inc
fsubr
jp
fcom
repnz
aam
dec
sar
movs
cwde
cmp
and
pop
shr
cmp
add
xchg
shr
sub
push
sbb
jge
shl
test
ror
inc
div
inc
rcl
mov
inc
add
clc
push
popa
test
sahf
and
cmp
jmp
aas
sub
add
rep
cmp
mov
vpaddq
dec
or
cmp
sbb
sub
and
loopne
sub
cmp
pop
rcl
stos
mov
pop
loopne
daa
neg
push
les
dec
jmp
lahf
or
xor
fild
in
fdiv
sbb
stos
rcl
lock
or
ss
jo
push
es
pop
clc
aaa
jb
dec
push
jae
ds
fld
xlat
lahf
and
sbb
inc
outs
aas
pop
repnz
xchg
sub
and
rcl
es
addr16
push
inc
call
cs
cli
mov
test
push
push
retf
inc
je
jl
or
xchg
pop
dec
(bad)
outs
cmp
adc
xchg
dec
sahf
jno
cmp
cld
xchg
(bad)
jne
ds
sub
call
enter
clflush
ret
cmp
movs
sbb
imul
dec
lock
(bad)
push
mov
daa
ja
push
cmp
and
in
rol
mov
into
ficomp
(bad)
out
push
pushf
in
or
dec
mov
xchg
lock
outs
loop
imul
push
fs
add
scas
stos
ss
sbb
mov
cmps
inc
loope
inc
inc
test
data16
shl
jbe
aaa
lods
xor
pop
dec
push
sbb
stos
movs
dec
add
dec
cmp
js
or
pop
xchg
adc
add
cdq
int3
jge
pop
ds
fnop
mov
push
or
and
shl
out
dec
pop
adc
bound
fwait
ror
sbb
mov
jl
inc
or
xchg
(bad)
jmp
adc
arpl
int3
or
dec
fsub
in
fs
in
ss
nop
jecxz
mov
pop
push
shl
push
popa
retf
push
aas
scas
dec
test
xor
daa
ins
mov
mov
ret
(bad)
bound
data16
sbb
xchg
addr16
dec
leave
or
and
neg
in
mov
dec
dec
mov
jno
shl
hlt
and
add
jmp
xchg
out
cmp
loope
(bad)
out
pop
jg
dec
sbb
add
dec
mov
xor
adc
nop
push
jp
out
jmp
add
push
push
fwait
stos
mov
cmp
inc
es
repnz
fst
or
sub
cmp
mov
adc
adc
ss
(bad)
jnp
das
cmp
test
popa
cmp
repz
dec
or
ret
fcomp
or
(bad)
mov
dec
xor
mov
adc
mov
sbb
leave
cs
pushf
enter
ret
iret
mov
inc
cmp
mul
call
or
dec
rcr
ins
cli
mov
or
adc
sti
popf
mov
or
mov
add
add
lock
fild
popf
scas
jb
xor
mov
lahf
push
stos
add
shr
test
sbb
es
enter
imul
pop
outs
push
jo
jae
jmp
call
cmps
mov
push
mov
jg
push
je
int3
les
sub
aam
stc
sbb
add
outs
ss
jnp
lahf
jmp
outs
jo
clc
in
cmp
mov
inc
add
data16
les
arpl
or
xor
jo
jp
test
dec
fcomp
adc
push
push
aaa
stc
fld
ins
retf
out
mov
cmp
in
cmp
cli
(bad)
shl
movs
daa
add
in
and
sub
les
xchg
stos
xchg
push
sub
stc
jo
cld
in
out
cmp
jge
adc
mov
mov
stos
jne
into
jb
jge
jge
sub
mov
jle
mov
lods
gs
xchg
sbb
sbb
lods
push
jp
jg
shl
(bad)
out
shl
jbe
cli
xor
xchg
xchg
fdiv
or
nop
call
mov
inc
adc
jl
shl
push
sub
outs
mov
outs
leave
inc
mov
aas
add
icebp
sub
cdq
out
xchg
bound
push
cwde
daa
push
hlt
enter
repnz
mov
in
in
pop
scas
add
ror
sahf
xlat
push
mov
mov
fisubr
xor
stc
lods
add
call
mov
and
(bad)
lea
mov
pusha
xor
mov
nop
xchg
inc
fisubr
jnp
sub
pop
das
mov
rol
adc
fsqrt
outs
stos
movs
or
test
mov
pop
mov
add
cmp
adc
int3
adc
fnstsw
mov
outs
add
stc
shl
push
and
pop
loop
xchg
rol
jnp
cmps
outs
jno
xchg
int
and
sub
hlt
pop
clc
mov
das
popa
adc
and
je
adc
pop
test
sbb
jmp
dec
addr16
les
jg
xchg
xchg
inc
xor
enter
mov
ss
inc
cbw
mov
data16
mov
push
shl
mov
movs
mov
or
push
cli
cs
arpl
xchg
es
aaa
or
sub
or
mov
mov
pop
inc
sub
jmp
xor
push
or
stc
hlt
lahf
ret
add
add
sbb
jae
mov
iret
aaa
ficomp
ret
test
sbb
dec
add
mov
rcl
jmp
sti
and
push
pusha
sub
inc
mov
fwait
xor
inc
enter
test
cld
pop
cdq
mov
xchg
xor
bound
inc
jns
pop
xlat
fs
nop
push
sbb
dec
mov
js
stos
int3
ret
daa
xchg
scas
ins
mov
pop
dec
sar
mov
(bad)
popa
and
movs
mov
fnclex
mov
adc
jmp
and
arpl
setp
mov
std
cmp
sub
jg
jge
mov
mov
adc
adc
into
clc
test
ja
gs
retf
cld
mov
dec
ret
rcr
sub
add
jmp
mov
pop
test
pusha
mov
adc
push
adc
mov
push
fsub
adc
call
push
(bad)
lock
imul
retf
sub
sbb
ret
lds
aas
and
fimul
sbb
call
imul
cmp
push
sti
cmp
pop
xor
xchg
bound
mov
inc
fidiv
not
jbe
sub
repz
xchg
sbb
mov
loopne
out
repz
mov
mov
mov
out
xor
cwde
pushf
in
jns
mov
push
sub
imul
jns
pop
mov
jno
dec
rol
(bad)
and
and
lods
sbb
mov
test
iret
jmp
(bad)
popf
push
arpl
fistp
adc
xchg
inc
loope
daa
sbb
inc
movs
stos
pop
sub
xchg
xchg
push
sbb
jecxz
loope
xchg
gs
sub
pop
or
call
lds
dec
adc
mov
cmp
mov
mov
or
in
jno
shr
sti
push
and
sbb
icebp
inc
mov
xchg
loope
add
and
arpl
cmp
lock
push
data16
push
xchg
jmp
pop
jmp
mov
daa
pop
mov
mov
pop
push
sub
mov
push
outs
sbb
sbb
dec
push
rol
mov
into
jp
aam
dec
jmp
adc
mov
mov
add
xchg
test
aaa
mov
add
data16
sar
mov
imul
sub
inc
inc
ret
sub
push
test
push
push
out
jle
out
data16
sub
mov
adc
out
jge
xor
jne
es
call
(bad)
mov
mov
pusha
retf
imul
and
inc
dec
inc
shr
mov
in
(bad)
or
jns
push
pop
cmp
and
pop
mov
stos
jp
add
jle
out
test
lods
inc
jnp
(bad)
out
jmp
pop
mov
sub
mov
jb
addr16
mov
push
jmp
sub
mov
cmps
(bad)
mov
inc
sar
or
mov
stc
dec
int
inc
outs
pop
push
xchg
jl
sbb
das
jnp
inc
movs
out
inc
cmp
xchg
hlt
rcr
in
add
and
mov
cs
mov
add
icebp
mov
mov
lock
push
movs
and
movs
enter
sub
das
jmp
xacquire
and
lods
cmp
add
cs
fnstcw
ja
mov
lods
push
add
xlat
pop
(bad)
cmp
pop
pop
(bad)
dec
(bad)
cmp
inc
inc
test
push
jle
jecxz
aam
les
je
mov
mov
mov
mov
repnz
and
xor
push
(bad)
sbb
pop
ins
dec
std
das
inc
xchg
out
bound
mov
das
cld
fld
mov
inc
scas
imul
lods
mov
mov
repnz
imul
iret
jg
sbb
jb
pop
mov
pop
xlat
clc
not
pop
sub
fadd
sbb
fldcw
xor
mov
std
les
das
(bad)
leave
stos
dec
adc
cmp
lds
retf
sbb
in
mov
nop
push
es
das
sbb
lahf
shl
(bad)
aam
dec
rcl
aad
test
ror
push
in
lock
sbb
hlt
mov
cmp
xor
imul
shr
sub
mov
out
out
mov
out
fidivr
xlat
adc
sti
cmp
xchg
adc
inc
div
or
int
push
and
gs
test
ret
mov
fiadd
lods
imul
xor
test
sub
rcr
dec
pop
sbb
mov
cs
xchg
mov
cmp
jge
ins
dec
jl
enter
adc
mov
fiadd
cmp
daa
jbe
out
les
or
int3
sbb
sub
mov
imul
repz
and
dec
stos
sbb
mov
mov
dec
pop
fadd
jb
xchg
sub
push
inc
cmp
stc
inc
dec
retf
xchg
pushf
push
imul
or
or
and
cmc
or
dec
scas
mov
lods
or
call
jbe
and
lods
popf
dec
cli
neg
leave
je
fcomi
(bad)
iret
sbb
popf
cmp
fldcw
jae
push
movs
push
repnz
rcl
lods
jmp
cmp
jle
scas
inc
mov
addr16
sahf
iret
xchg
popa
gs
(bad)
jl
add
std
push
push
stos
in
(bad)
inc
add
je
pusha
lea
ret
mov
repz
and
or
mov
mov
outs
push
sbb
mov
mov
pop
jmp
test
js
stos
push
jne
jb
in
inc
adc
xchg
mov
(bad)
lods
imul
out
inc
(bad)
pop
loop
aad
adc
add
repz
pop
stos
test
mov
out
cmp
sar
or
mov
adc
xchg
fild
(bad)
and
or
sar
repnz
aad
add
daa
pop
inc
dec
movs
stc
icebp
add
pop
fisub
hlt
fsub
push
lods
pop
push
retf
dec
outs
mov
lea
xor
push
xchg
aas
mov
mov
jae
frstor
xchg
aas
leave
popf
sub
pop
dec
sub
(bad)
repz
jnp
sar
pop
out
inc
gs
out
and
pop
jns
mov
sub
adc
mov
popa
xor
mov
inc
mov
push
push
in
xor
out
out
cmp
loopne
mov
int3
out
aaa
ins
nop
sahf
or
repz
retf
inc
loope
xchg
movs
or
sub
loopne
inc
pop
adc
sbb
push
xlat
xchg
gs
stos
cmp
jns
ret
jb
loopne
add
imul
mov
arpl
sub
mov
pop
and
pop
ins
adc
push
shr
sahf
call
jb
test
inc
dec
cdq
adc
jl
nop
xchg
cmc
idiv
xor
sub
cmp
jbe
mov
jno
pop
imul
test
ins
(bad)
out
shr
xor
add
not
div
int3
test
and
outs
dec
sub
push
sbb
add
mul
ret
jmp
loopne
sar
adc
lds
push
fmul
and
retf
push
cli
les
shl
pusha
call
sub
cmp
ja
dec
sub
pushf
mov
ins
add
loop
cmp
add
jns
movs
or
xor
adc
pushf
jae
or
stc
stos
bound
dec
punpckhwd
adc
sbb
pushf
hlt
push
mov
cdq
imul
jne
shr
cmp
push
inc
(bad)
std
es
inc
sub
or
add
fisubr
retf
or
and
shr
push
mov
adc
imul
add
outs
push
out
dec
movs
in
add
hlt
mov
(bad)
push
movs
sbb
add
add
mov
ds
fst
adc
or
aaa
ja
ins
mov
pop
leave
in
push
test
out
adc
or
push
mov
sti
inc
mov
mov
retf
iret
xor
div
sbb
push
inc
jnp
aas
movs
sub
push
in
aad
fsub
xchg
jne
pop
mov
movs
sbb
or
stos
(bad)
leave
hlt
or
mov
jae
dec
lods
icebp
aad
pop
add
movs
std
jae
xchg
out
cli
pusha
dec
jmp
sahf
cmps
push
adc
sbb
pop
cld
mov
xchg
(bad)
popf
dec
ret
in
enter
add
adc
daa
mov
loop
aad
scas
jmp
mov
test
stos
and
dec
gs
rcr
scas
test
cmc
jl
jae
daa
aaa
mov
push
int3
out
pushf
sbb
dec
loope
repnz
inc
jmp
xor
cmp
ins
cmp
pcmpeqb
cmp
jg
fs
cli
hlt
pushf
jne
lods
mov
push
dec
fucomip
sub
cmp
pop
inc
fisub
retf
cmps
cs
gs
jmp
sar
and
mov
inc
cmp
pop
dec
cwde
scas
mov
mov
mov
out
dec
retf
dec
aam
pop
mov
fsqrt
mov
xchg
aam
push
xchg
jo
or
xchg
jmp
sub
sbb
jmp
repnz
shl
jb
pop
ja
mov
inc
mov
pop
retf
jae
add
xchg
and
data16
add
hlt
mov
cld
mov
sub
div
retf
sbb
mov
inc
inc
sbb
dec
xor
xchg
or
scas
mov
gs
sbb
ror
jne
xor
mov
sbb
jmp
xchg
and
jns
call
inc
(bad)
sbb
sub
call
popa
out
cmp
mov
fnsave
in
adc
int
sub
inc
cmp
punpckhdq
push
mov
adc
hlt
adc
or
outs
data16
or
sar
inc
lea
call
pushf
lahf
aad
fadd
xor
stos
sub
movs
jo
jb
movs
scas
adc
mov
inc
fnstsw
add
mov
jns
push
neg
retf
cmps
movs
add
sub
push
cmp
int
cmc
imul
sahf
jns
addr16
ins
neg
pusha
jecxz
add
xor
fcom
out
mov
sbb
adc
push
cmps
movs
pop
push
cs
loope
sbb
mov
mov
sar
cmps
mov
xchg
jecxz
jp
cmps
js
shl
fnstenv
and
jge
dec
jmp
scas
cs
lods
jmp
arpl
jecxz
imul
jmp
ret
retf
(bad)
daa
jno
stc
sahf
dec
movs
pop
pop
jmp
mov
xor
dec
jno
stos
fadd
or
js
cmp
mov
in
push
pop
mov
aas
xor
sti
icebp
push
ss
adc
and
inc
or
loope
mov
mov
loopne
push
lods
pop
add
(bad)
cld
jno
or
and
sahf
add
mov
shl
mov
std
imul
dec
arpl
stos
push
aam
jo
sti
int
sub
or
test
aas
mov
fcomp
js
ror
sub
or
dec
push
or
adc
mov
mov
sub
call
jo
test
push
icebp
mov
sbb
mov
bnd
adc
pop
or
adc
mov
stos
cs
mov
lods
cmps
scas
and
sub
ret
mov
pop
pushf
xchg
and
mov
stc
mov
push
int
push
es
jnp
adc
mov
mov
adc
mov
data16
or
int3
inc
xor
es
ins
dec
imul
pop
jmp
adc
inc
cmp
adc
xor
mov
xchg
popf
(bad)
aad
fnstenv
xor
outs
sbb
pop
pop
int3
lock
lods
cmp
fmul
mov
retf
xor
lock
add
adc
outs
sbb
sub
mov
je
fadd
mov
adc
out
inc
out
loop
inc
into
cmps
xor
or
sbb
fld
stos
imul
out
test
das
or
push
dec
push
sub
xor
adc
outs
pop
mov
push
xchg
add
jo
dec
pop
push
add
sub
mov
loopne
jne
pop
and
or
test
or
push
data16
test
int3
cmp
inc
mov
mov
xchg
outs
pop
out
push
shl
fs
mov
jmp
aas
xchg
push
xor
fsubr
push
fwait
fs
stos
mov
mov
push
das
push
popf
fmul
xchg
loopne
cmp
loope
ins
dec
in
aaa
(bad)
inc
push
adc
not
cmps
rcr
sbb
loopne
mov
mov
movs
popf
sbb
test
xchg
pop
arpl
mov
fidiv
cmp
in
mov
push
push
(bad)
in
or
mov
and
pop
mov
add
(bad)
pop
test
(bad)
fs
data16
test
into
push
pusha
leave
outs
or
icebp
stos
leave
pop
xor
stc
(bad)
div
inc
or
or
rcl
movq
pop
dec
mov
cmp
aaa
lock
mov
mov
push
frstor
repz
iret
call
(bad)
(bad)
mov
(bad)
jns
fcomi
xor
nop
ins
jae
add
ins
jno
rcr
test
sbb
mov
pop
push
and
sub
push
call
mov
push
out
test
cs
stos
or
in
vcvtdq2pd
xchg
lock
xor
and
xchg
test
loope
mov
inc
push
hlt
cmp
ja
ins
movzx
shr
call
pop
mov
out
xchg
mov
int3
xchg
xor
mov
sub
shr
sbb
and
inc
retf
addr16
lock
mov
ror
test
daa
(bad)
jg
sti
sub
xor
push
in
pop
test
push
mov
jbe
fistp
push
daa
mov
mov
push
dec
mov
add
lahf
or
aaa
aam
add
dec
icebp
cmps
lods
out
mov
mov
js
add
jg
js
pop
js
push
or
aam
mov
xchg
sbb
jg
mov
mov
inc
pop
inc
adc
dec
or
sbb
push
cmp
or
test
xchg
retf
fiadd
out
call
cmc
sbb
data16
out
retf
retf
inc
cmps
push
and
test
sbb
shl
shr
call
jl
ror
jo
sbb
movs
lods
and
jp
lock
lock
fist
(bad)
jne
jb
(bad)
push
pop
mov
scas
ret
fstp
cmp
out
rol
not
xchg
fidiv
sbb
jecxz
mov
jg
data16
xor
sub
pop
sbb
adc
push
sti
pushf
lea
sbb
mov
inc
push
loopne
(bad)
jge
popf
push
sbb
cmp
hlt
aad
js
shl
fnstsw
iret
pop
cwde
mov
push
mov
sub
mov
sub
xor
push
ret
out
dec
jb
push
arpl
repz
daa
and
or
mov
sub
inc
and
sbb
mov
mov
inc
or
add
inc
pop
cmp
inc
imul
leave
hlt
sbb
gs
pop
cmp
(bad)
mov
pop
push
call
aad
mov
paddd
cs
fadd
push
retf
je
pop
sbb
ret
clc
adc
pop
xor
lahf
cmp
cmp
out
push
mov
pop
mov
inc
xchg
std
cmp
add
mov
cmc
jle
pop
sub
or
pop
cmp
xchg
ds
xor
add
mov
cmps
adc
in
shl
xchg
inc
jne
mov
out
jbe
sbb
stc
sbb
jl
mov
sbb
or
retf
scas
aam
(bad)
retf
cdq
add
sub
(bad)
call
icebp
pop
repnz
sbb
ret
inc
add
cmp
stos
into
cmp
mov
xchg
push
dec
lds
xchg
sub
je
pop
sbb
int
adc
stos
cmp
dec
outs
(bad)
jb
xor
cs
adc
cmp
cmps
(bad)
loop
adc
(bad)
hlt
jle
retf
jl
shl
dec
stc
xchg
out
mov
ret
pop
or
add
loopne
pop
loope
lahf
ss
call
cmp
xchg
call
cwde
aad
adc
add
jbe
es
(bad)
ficomp
and
mov
popf
cdq
xor
fiadd
mov
sbb
sub
jne
int3
add
aam
dec
jecxz
rcl
aaa
pop
test
(bad)
ins
cli
inc
jmp
mov
mov
adc
sbb
add
inc
stc
repnz
(bad)
daa
cdq
sar
fstp
adc
xlat
enter
push
mov
inc
dec
fnclex
mov
xchg
iret
cdq
test
xchg
inc
mov
cmps
pop
shl
mov
mov
pop
mov
mov
sub
cmp
(bad)
stos
jge
fild
xchg
jo
add
nop
outs
pop
cwde
or
das
inc
es
(bad)
in
aam
dec
mov
cmp
pop
pop
lahf
ret
test
mov
pop
add
push
xor
aad
inc
test
pushf
les
add
mov
sub
aam
je
push
and
push
inc
lods
out
and
repnz
pop
dec
ror
xchg
inc
ss
pop
frstor
leave
dec
lock
and
gs
cld
enter
pop
sub
je
jnp
sub
int
shl
xor
retf
ja
pop
sar
jecxz
repnz
adc
add
lahf
mov
xchg
adc
push
movs
push
loop
ror
fdiv
or
push
ja
jbe
jno
(bad)
or
xor
fs
inc
add
ins
dec
lock
xchg
in
rcl
dec
in
call
dec
dec
push
stc
out
clc
cmps
mov
xor
adc
mov
pop
jne
dec
mov
test
dec
dec
adc
mov
mov
cmps
or
clc
int3
push
(bad)
jmp
jmp
test
mov
pop
jb
popf
xor
cwde
je
mov
adc
fwait
mov
rcl
mov
les
daa
(bad)
int
cdq
sub
popf
xor
stos
mov
xor
test
inc
pop
mov
call
call
or
ins
jmp
xchg
cmp
sbb
pop
nop
fwait
mov
call
cmc
mov
std
ds
cmp
sub
xchg
test
daa
xchg
(bad)
mov
add
call
es
xchg
sub
fpatan
sbb
leave
inc
jge
stc
xchg
cli
scas
stos
fisttp
inc
arpl
out
xchg
cmc
fcomp
(bad)
push
sbb
mov
hlt
std
ins
jnp
pop
int3
jb
push
mov
jne
dec
push
test
inc
call
mov
call
aas
mov
sahf
dec
sub
pop
sbb
fwait
in
push
push
jno
ins
jecxz
mov
push
stos
mov
sub
loop
adc
int3
(bad)
(bad)
clc
aad
stc
aad
or
sbb
dec
xor
jle
adc
mov
lock
test
imul
shr
jge
cmps
jge
cmp
es
pop
imul
xchg
and
out
cli
int
adc
push
adc
mov
cli
lahf
xchg
fistp
test
dec
cmps
retf
enter
mov
std
fiadd
adc
icebp
mov
mov
daa
mov
cmc
fs
ror
nop
push
mov
dec
pushf
stos
mov
stos
cmp
aad
pop
in
mov
adc
mov
jg
and
fs
xor
inc
les
and
xor
add
jbe
loope
loop
adc
fdiv
sub
pop
jge
ins
jmp
push
repnz
jg
and
sub
hlt
adc
jb
js
aas
into
popf
dec
in
mov
popf
inc
add
pop
out
pop
js
pop
cmp
mov
js
ins
push
inc
test
into
std
push
and
cmp
pop
sub
dec
(bad)
cmp
inc
xchg
jne
(bad)
daa
xlat
mov
mov
push
add
push
int
xchg
out
call
mov
ret
mov
call
mov
jns
cs
jl
outs
nop
cwde
jb
dec
int3
jge
arpl
std
pop
lods
in
mov
xchg
cmps
popa
push
inc
xchg
rcr
push
inc
outs
(bad)
retf
in
ret
popa
retf
inc
jnp
es
shl
aad
in
jno
push
jp
or
nop
fstp
jmp
mov
imul
xchg
fsub
adc
movs
shl
inc
jge
jns
dec
imul
movs
loope
loop
xchg
loop
xchg
dec
mov
push
in
lea
jle
out
daa
imul
mov
fs
and
retf
sti
push
pop
jecxz
cmp
sub
hlt
adc
test
adc
js
cmp
mov
ror
mov
gs
push
sbb
or
pop
sub
push
adc
pusha
and
les
dec
lods
icebp
out
call
inc
scas
sahf
rol
icebp
in
xor
shr
pop
mov
call
mov
das
pop
xor
test
adc
and
inc
popa
dec
mov
mov
mov
sbb
mov
stos
sar
aad
mov
leave
hlt
out
and
hlt
sbb
ins
pop
in
xchg
out
scas
mul
jae
mov
int
mov
pop
cmp
out
dec
in
mov
xor
mov
jb
mov
add
jb
pushf
loopne
bound
push
xor
outs
sbb
push
jge
(bad)
(bad)
jmp
inc
loopne
sahf
mov
cmp
dec
mov
cmp
enter
test
mov
and
in
jl
xchg
add
sar
imul
mov
dec
cmp
mov
daa
adc
repnz
mov
frstor
sbb
and
or
pop
or
mov
jmp
inc
inc
xchg
sub
je
aas
fidivr
cmp
adc
xchg
cmp
lea
pop
xchg
xchg
mov
shr
jmp
sub
cmp
mov
add
mov
push
xchg
or
rol
mov
jo
adc
pop
cmp
jo
ret
sub
mov
pop
and
inc
xchg
ret
mov
call
mov
jnp
xchg
mov
and
shl
pop
sub
cmp
shl
adc
(bad)
dec
sbb
out
xor
add
lods
cs
push
add
sahf
loop
xchg
dec
mov
jmp
mov
inc
lahf
ins
push
mov
sub
fist
dec
dec
mov
xchg
xor
dec
into
out
inc
push
cmps
add
mov
inc
retf
aas
mov
test
add
loopne
stc
sahf
sbb
loopne
pop
jo
cmc
aam
in
xor
stc
int
mov
add
inc
sub
cmps
push
popa
popf
mov
push
popa
sub
fimul
outs
and
cli
jl
je
mov
div
cs
mov
ret
pop
jmp
scas
or
jecxz
push
daa
inc
push
or
add
sub
mov
aad
(bad)
pushf
shl
mov
pop
adc
adc
dec
mov
outs
dec
les
cwde
stos
leave
pop
div
sbb
jmp
add
jge
and
ja
mov
lods
mov
ret
mov
xchg
or
nop
or
mov
xchg
pop
gs
popa
into
inc
test
jmp
add
movs
push
aas
jmp
dec
jl
popf
aam
inc
(bad)
fild
jge
jne
stos
ret
mov
movs
movs
lods
bound
or
and
pop
(bad)
sbb
imul
pop
mov
push
cli
add
in
add
or
int3
es
call
jl
cmc
fcom
int3
ss
xchg
das
mov
popf
xchg
mov
std
int
jnp
cmps
retf
rcr
mov
ins
in
mov
or
mov
jae
jl
push
mov
ss
loope
int3
enter
sar
loope
rcl
inc
in
xchg
cmps
pop
es
mov
int
stos
out
sub
push
movs
rol
mov
clc
(bad)
jecxz
xor
jg
stc
sbb
xchg
dec
pop
ret
mov
repz
outs
pop
ficom
sbb
xchg
xchg
dec
xor
mov
xchg
repnz
sbb
xor
inc
imul
aam
dec
jmp
imul
sub
push
pop
pusha
cli
inc
div
push
sbb
pop
mov
mov
cmp
movs
movs
mov
push
mov
inc
mov
push
fimul
push
jne
dec
jnp
jecxz
lea
lods
rcr
mov
mov
add
fucomp
dec
xchg
mov
sar
das
shl
ss
test
cld
cs
enter
movs
push
sub
sub
xlat
ret
mov
icebp
aam
lahf
xor
mov
cmps
mov
xchg
mov
xor
test
repnz
xor
aaa
test
cli
add
sar
add
pop
xchg
xchg
retf
xor
lock
inc
jo
mov
jl
mov
mov
sbb
push
sbb
mov
dec
in
test
data16
jnp
shrd
data16
sbb
cmp
inc
stos
fild
and
ret
xor
daa
loopne
push
mov
add
outs
ja
mov
push
mov
(bad)
nop
jnp
retf
dec
pop
xchg
add
add
shl
ins
test
mov
push
push
mov
jnp
cmc
ds
in
fsub
xchg
es
fcomp
xor
xor
popf
icebp
push
int3
mov
and
mov
or
into
test
dec
adc
xchg
dec
nop
push
aad
mov
jmp
nop
cmp
shl
sbb
xchg
xchg
aad
add
xchg
outs
sub
(bad)
sbb
mov
mov
mov
sub
aam
jecxz
jo
xchg
je
sub
std
(bad)
pusha
scas
push
das
adc
pop
pop
shl
inc
out
sar
bound
nop
inc
jl
fsubr
enter
sbb
stc
pop
cmps
and
mov
xchg
inc
int
popa
std
pop
jne
mov
pop
inc
dec
and
xor
mov
xor
jno
test
cmps
cmp
ja
loop
(bad)
int
cmps
dec
fmul
cmc
int
push
dec
pop
icebp
call
test
fcomp
ja
push
les
sbb
iret
arpl
xchg
xchg
sbb
gs
mov
cmp
pusha
cmp
mov
mov
push
dec
(bad)
fwait
cli
mov
jb
loopne
les
adc
ret
jle
pushf
call
fistp
inc
cmps
jmp
aaa
push
xor
mov
sbb
pop
add
outs
mov
pop
xchg
jmp
adc
retf
repz
jl
popa
push
inc
xchg
xor
mov
jmp
xchg
into
jle
mov
mov
ret
cmp
xchg
sbb
add
fbld
cs
rol
mov
push
popa
pop
pushf
and
push
jmp
outs
and
out
(bad)
sbb
pop
cmps
or
pop
mov
rcl
push
jno
ror
dec
add
cld
int
les
push
rol
xor
fst
pop
xlat
lods
fs
inc
xlat
sbb
nop
scas
inc
mov
fidiv
dec
jl
mov
cwde
and
icebp
xor
jo
xchg
fbstp
push
push
jnp
push
pop
xchg
mov
or
add
add
mov
inc
iret
std
xor
dec
dec
in
mov
push
xchg
jbe
or
and
ret
fs
adc
ret
push
or
push
sub
aaa
sbb
arpl
(bad)
inc
movs
xor
cmp
push
sbb
xchg
sbb
aad
js
dec
or
pop
and
mov
pop
jo
sbb
aad
dec
ins
dec
mov
or
clts
lods
shl
int3
sti
xchg
push
add
jne
lock
(bad)
pop
adc
js
xchg
mov
leave
fadd
into
and
jle
icebp
sti
sub
sub
sahf
jmp
adc
(bad)
ins
inc
sub
int3
jnp
call
pusha
dec
mov
ins
movs
push
das
add
retf
fldenv
mov
fimul
loope
(bad)
cmp
rcl
cmp
icebp
in
add
sbb
addr16
sbb
outs
and
and
into
cmp
inc
cld
sbb
pop
and
cdq
pop
inc
adc
xchg
add
lea
loopne
mov
xor
sub
add
inc
sbb
mov
ss
mov
ret
pop
fisub
adc
pop
and
add
jp
sbb
lds
jge
retf
jge
push
fisubr
popa
mov
pop
mov
and
push
loope
pop
pop
(bad)
and
xor
cmp
lock
(bad)
jnp
aam
fisttp
xor
icebp
mov
jl
dec
test
pop
test
xor
out
add
dec
(bad)
out
or
in
in
outs
xchg
pushf
sub
fstp
sbb
or
cmp
jb
stc
cmp
aam
rol
mov
and
ret
ds
(bad)
mov
pop
mov
mov
adc
call
mov
ins
adc
cdq
es
inc
dec
mov
dec
pop
mov
jp
popf
outs
rol
into
in
mov
outs
cli
imul
mov
mov
jle
inc
pop
stos
sbb
or
xchg
into
cli
xchg
cmp
stos
enter
aas
mov
mov
jge
lahf
je
sub
xor
xchg
dec
cld
fild
xchg
or
adc
ret
push
fldenv
jecxz
jnp
sbb
jmp
popa
fwait
call
mov
sub
mov
test
and
add
dec
push
dec
int
inc
bound
jbe
and
fimul
mov
out
push
push
adc
jp
jnp
mov
lods
sti
int3
jle
jl
cmp
scas
mov
(bad)
cmps
jp
push
iret
in
fstp
fcomp
js
pop
cmp
jbe
mov
pop
jecxz
movs
cmp
xor
or
or
push
aaa
call
bound
js
dec
sbb
adc
inc
pusha
cdq
push
scas
xchg
out
xchg
cmp
xchg
(bad)
stc
pop
rep
retf
mul
pushf
dec
(bad)
out
or
mov
push
jge
jmp
xor
pop
dec
sar
or
ret
fxch
popa
jle
inc
push
inc
icebp
xchg
add
or
cs
mov
sti
mov
fcomip
cmp
rcl
cmps
mov
push
pop
into
call
or
imul
movs
outs
(bad)
rol
mov
add
in
mov
js
jae
data16
mov
sbb
xor
sar
add
cmp
test
addr16
push
movs
push
outs
(bad)
ficom
fwait
adc
test
and
jg
pusha
cdq
add
and
mov
jg
mov
add
fimul
add
add
fild
inc
sub
add
jmp
fisttp
repnz
ds
mov
call
push
imul
cmp
stos
or
fcmovbe
dec
or
jle
inc
iret
xchg
enter
adc
in
cmp
or
js
popf
xchg
sahf
out
daa
aad
push
ins
mov
push
imul
mov
nop
xchg
js
movs
cmps
lods
lds
loopne
cmp
xor
add
adc
leave
clc
pusha
clc
ret
adc
(bad)
repz
xchg
repz
addr16
xor
stos
stc
xchg
movs
(bad)
sub
push
xor
loop
test
out
adc
adc
out
cmp
adc
shufps
vpminsw
mov
sbb
xor
jecxz
rcl
sbb
cs
not
or
mov
cdq
fdiv
out
inc
inc
repz
push
aam
adc
out
retf
push
sbb
or
mov
fyl2x
add
retf
mov
push
aaa
fs
outs
retf
xchg
enter
retf
call
inc
fnsave
sbb
sub
xchg
clc
jle
es
cmp
mov
xchg
fcmovnu
sahf
jno
lods
add
test
dec
pushf
mul
inc
pop
cmps
call
mov
sbb
push
(bad)
enter
inc
jne
fwait
mov
aad
es
fdivr
sbb
cs
jns
mov
jecxz
and
daa
jecxz
jmp
adc
xor
shl
sub
pop
fbstp
lock
test
movs
jg
push
das
push
loopne
jns
pop
mov
sahf
clc
mov
ret
xor
dec
dec
and
pop
div
pop
mov
call
mov
pop
ret
jmp
jmp
repnz
mov
loop
ror
cmp
js
pop
mov
outs
mov
mov
inc
xor
cli
inc
sahf
xchg
pop
(bad)
push
pop
jnp
pop
(bad)
repnz
aam
jo
ja
js
retf
sbb
inc
and
in
(bad)
stos
rol
pop
or
mov
mov
dec
add
cs
test
repz
add
out
mov
mov
pushf
push
push
mov
adc
dec
nop
mov
daa
ins
adc
xchg
xor
mov
fidiv
add
jge
stc
ror
outs
add
imul
test
stc
dec
in
rcr
retf
outs
in
jb
cmc
and
push
mov
add
imul
and
sbb
rcr
jns
cdq
cmp
test
mov
push
add
sub
ror
leave
and
test
call
xlat
mov
outs
inc
xchg
into
add
add
jae
shr
and
and
dec
hlt
ds
sar
stos
hlt
add
dec
sbb
aas
out
pop
or
add
in
mov
ds
in
pop
mov
jge
imul
mov
dec
cmp
scas
clc
sbb
cmp
mov
push
js
xchg
movs
cmc
mov
iret
adc
retf
sahf
stos
mov
xor
and
jp
daa
xchg
push
mov
dec
sub
in
cmp
out
cmp
mov
xchg
jp
rcr
or
loopne
adc
xchg
aaa
dec
dec
int
test
aam
or
aad
jo
jne
add
mov
mov
imul
ja
mov
adc
daa
sahf
mov
sub
js
add
xchg
add
test
sub
push
(bad)
adc
sahf
push
(bad)
loop
into
push
int
loop
iret
movs
movs
cmp
(bad)
jmp
out
out
push
stos
lea
xchg
push
xlat
shl
stos
ret
movs
pop
mov
sbb
in
push
cmp
lods
arpl
jbe
mov
sub
mov
mov
adc
dec
and
jmp
popa
mov
or
dec
retf
xchg
(bad)
add
mov
aas
nop
popf
retf
(bad)
in
mov
push
and
in
pop
adc
dec
push
test
pop
sbb
add
add
cmp
sub
in
push
in
inc
les
jecxz
pop
xlat
sub
gs
fs
inc
adc
in
sbb
add
cmps
enter
mov
cwde
repz
(bad)
aas
cmp
sar
mov
loopne
ds
sub
and
push
test
cmc
sub
mov
sti
(bad)
dec
icebp
dec
(bad)
ror
sub
dec
call
lods
gs
out
push
jg
cld
mov
sub
(bad)
in
in
mov
adc
(bad)
outs
fnstsw
xor
sbb
out
dec
jbe
pusha
push
bnd
imul
mov
sbb
xchg
imul
lock
mov
adc
ret
jae
aad
popf
adc
aad
aas
fistp
mov
jo
lahf
adc
cdq
lea
jbe
jmp
or
jb
aas
xor
sbb
test
retf
test
xchg
inc
stos
movs
mov
and
cmp
pop
shl
shr
cwde
in
add
or
sbb
jb
scas
sbb
cmp
pop
inc
sar
stos
cmp
pop
daa
loope
add
movs
lea
int
outs
push
add
outs
add
sub
jns
mov
sbb
vmovhpd
jecxz
loopne
mov
in
sti
xor
in
adc
jo
jge
mov
sbb
add
(bad)
pop
call
cmp
arpl
popf
out
adc
or
cmp
out
cmps
popa
jge
mov
pop
retf
and
movs
push
jb
and
stc
xor
push
mov
scas
pusha
push
cmp
push
cdq
adc
popa
daa
dec
pop
das
push
mov
js
sub
outs
ret
movs
lods
push
push
xlat
in
xchg
jg
test
out
and
mov
dec
push
les
fs
push
in
call
(bad)
clc
iret
outs
fwait
jle
cdq
cdq
mov
mov
stos
dec
ret
jmp
cld
ds
cmp
test
add
loopne
or
and
jp
xchg
xchg
aam
pop
aad
dec
mov
out
stc
lods
jns
ffreep
inc
aas
jge
push
and
ds
sbb
mov
jge
sar
bound
sti
imul
ins
xchg
cmovs
pop
lahf
mov
and
mov
int3
cmp
push
data16
(bad)
(bad)
in
add
pop
daa
mov
push
mov
adc
xor
push
xchg
pop
clc
out
pop
and
mov
mov
popf
xchg
fild
or
and
cdq
sbb
xor
add
movs
adc
ds
push
(bad)
ja
fs
or
fst
frstor
inc
fwait
(bad)
(bad)
aam
addr16
repnz
icebp
cmp
ret
pop
mov
ja
mov
movs
and
sbb
imul
and
mov
shl
add
cmp
pop
or
add
div
jp
dec
fnstcw
sbb
xor
mov
adc
pop
(bad)
arpl
xchg
shr
dec
dec
and
jle
pop
jo
movs
and
xchg
xchg
stos
and
jp
xchg
sub
ss
push
sbb
hlt
cdq
sub
bound
movs
inc
adc
scas
xor
aad
into
fistp
cmp
pop
sbb
sti
lahf
adc
inc
dec
push
push
scas
mov
fmul
add
xlat
mov
push
retf
sub
(bad)
jl
jno
and
and
pop
cmp
test
int
jmp
mov
cld
mov
mov
test
or
ds
fmul
mov
loope
jecxz
add
cmp
aad
fnstenv
ds
or
pushf
out
inc
(bad)
inc
sbb
jp
jmp
(bad)
repnz
xor
push
pop
data16
out
pop
fwait
(bad)
call
dec
sahf
out
out
and
in
enter
mov
hlt
stos
inc
es
add
idiv
fld
push
pop
sbb
adc
out
jbe
cld
jge
pop
cld
shr
pop
jb
es
into
js
and
adc
mov
pop
xchg
sti
ror
push
or
clc
test
pop
adc
repz
movs
mov
push
pop
cmps
xchg
add
adc
sub
outs
lahf
scas
lahf
sahf
cld
scas
inc
lods
jmp
mov
jle
and
xor
call
xor
loopne
inc
(bad)
hlt
pop
sbb
mov
mov
jne
loop
lds
sar
test
std
and
and
mov
pop
dec
sub
gs
ja
stos
pop
add
push
mov
xor
call
xchg
lds
push
xor
mov
mov
pushw
stos
mov
mov
push
inc
push
push
mov
out
pop
dec
jne
pop
cmp
and
xchg
(bad)
cmp
fild
repz
je
rol
repz
xor
nop
sub
pushf
xchg
add
lock
int
mov
or
push
mov
push
sub
and
xor
ds
cmp
inc
imul
call
mov
and
cmp
fadd
aad
cmp
pop
dec
pop
mov
popa
inc
ret
int3
jecxz
dec
movs
and
ins
cmp
aas
shl
movs
adc
aad
pop
pop
or
cdq
xor
sub
dec
push
xchg
adc
cmp
aam
push
push
push
movs
popa
adc
shl
jecxz
out
cmps
leave
inc
enter
cmp
lods
adc
inc
mov
and
push
mov
(bad)
(bad)
adc
mov
sub
inc
mov
pop
sahf
and
pop
inc
lods
test
and
xor
loope
shl
xor
inc
pop
push
rcl
pop
pop
mov
mov
sahf
jmp
or
test
in
lds
ficomp
inc
loop
xchg
fisttp
sbb
popf
shr
les
jmp
jge
xchg
clc
jle
stc
or
jmp
ja
int3
imul
stos
mov
mov
dec
fisubr
bnd
sar
mov
push
arpl
mov
or
sahf
mov
xchg
and
fldcw
pop
cld
daa
cld
fs
jae
lods
pop
je
cmp
sub
pushf
mov
sbb
retf
mov
dec
ins
out
out
outs
push
inc
cdq
mov
cmp
jne
aam
arpl
mov
mov
fisttp
cmp
jbe
adc
cmps
cmp
cmp
mov
js
add
mov
shl
aam
xchg
or
leave
dec
mov
inc
scas
in
jmp
and
mov
aas
rcl
inc
fwait
cmps
add
jmp
sub
xchg
imul
int3
or
pusha
dec
outs
mov
aad
xchg
scas
lock
xchg
cmp
inc
mov
sub
hlt
inc
cwde
pop
int3
add
test
add
dec
(bad)
mov
movs
ja
dec
stc
mov
mov
aaa
inc
outs
in
pop
sbb
mov
rol
cdq
pop
xor
xchg
and
mov
and
dec
sub
ror
mov
dec
inc
mov
mov
std
pushf
inc
sbb
or
sub
jge
push
sub
xchg
idiv
mov
cmp
mov
jno
lock
xchg
pop
sbb
test
jbe
stc
cmp
out
add
add
lahf
add
mov
xchg
jae
mov
mov
xchg
push
pusha
add
test
push
dec
sbb
mov
sbb
shl
scas
jmp
push
dec
fucomip
out
fwait
repnz
call
jmp
xchg
fild
xor
call
cmp
js
xchg
inc
ret
add
jecxz
add
xchg
ret
xchg
into
fimul
out
adc
mov
mov
movs
adc
iret
mov
jmp
ins
sbb
mov
push
outs
and
fimul
sbb
retf
retf
adc
ds
cwde
and
jmp
dec
and
dec
cli
push
push
cmp
scas
push
icebp
cli
xchg
fdivr
aaa
sub
push
int3
push
push
or
call
cwde
pop
add
outs
mov
lahf
aaa
pop
retf
mov
jns
retf
int3
pop
adc
mov
pop
mov
retf
movs
cmp
or
push
in
(bad)
imul
in
jp
inc
adc
lods
pop
sub
shl
jbe
push
test
xchg
xor
mov
retf
adc
clc
dec
cli
xor
inc
dec
stos
xchg
bound
das
test
xchg
(bad)
and
jmp
add
out
xor
out
cli
rol
fisttp
imul
adc
daa
mov
adc
out
je
ins
iret
ret
xor
push
hlt
(bad)
push
(bad)
jle
xor
out
push
push
neg
sbb
xchg
inc
loop
or
imul
fwait
(bad)
or
ds
fild
jmp
jbe
fld
clc
add
xor
lock
inc
xchg
fidiv
pop
xchg
push
call
push
fild
ja
test
xchg
popa
fcom
jge
in
sbb
push
fcmovbe
aam
dec
in
aaa
push
sar
call
add
scas
xor
mov
sub
sub
mov
loope
push
or
jns
cld
add
dec
sub
cld
sub
cld
cmp
inc
sub
adc
dec
inc
bound
lods
aad
push
xor
mov
rcl
inc
data16
nop
dec
(bad)
sar
mov
xlat
cmp
xchg
or
and
cld
(bad)
jne
lods
pop
test
adc
mov
pushf
call
push
jp
shr
imul
in
icebp
jle
push
ins
xlat
test
mov
mov
in
test
push
xlat
or
adc
inc
or
inc
jnp
xchg
mov
pop
in
sbb
mov
mov
or
popa
inc
sbb
mov
inc
inc
xor
sar
or
inc
pop
fmulp
nop
jae
inc
lahf
jbe
fs
jne
fcomp
xor
rol
push
add
push
lsl
vpmacssdql
sub
add
push
push
sub
xchg
pusha
fld
rcl
xchg
sbb
add
sub
dec
pop
mov
movs
mov
pop
setb
add
mov
call
bnd
or
adc
jecxz
fucomp
jp
jmp
mov
and
push
call
xor
loop
or
sub
(bad)
sbb
in
add
out
mov
mov
ja
mov
std
cli
je
out
sub
pop
push
test
popf
pushf
dec
lods
je
dec
outs
pop
cmp
(bad)
repz
xchg
xchg
xchg
cmp
lods
repnz
(bad)
popa
or
aas
jmp
ret
xchg
or
loopne
idiv
mov
iret
je
pop
fcomp
xor
mov
mov
or
mov
add
and
or
sub
jmp
and
mov
fsub
int
sbb
jbe
test
jmp
pop
push
pop
xor
out
cmp
dec
cmps
ret
jge
xchg
fiadd
pop
add
mov
int
adc
or
in
cdq
and
es
shl
dec
ret
mov
cld
push
mov
bound
mov
retf
push
and
adc
cld
outs
sub
test
mov
scas
(bad)
mov
xchg
arpl
push
adc
jl
movs
and
mov
push
pop
push
jle
aaa
sahf
jl
hlt
dec
push
std
outs
mov
push
scas
xchg
pop
lahf
add
mov
(bad)
or
cmp
jmp
in
xor
push
jl
sub
xchg
sbb
or
jnp
push
xchg
sqrtps
js
loope
sbb
clc
les
das
cmp
mov
fwait
pop
sub
popa
xchg
mov
cmp
pop
or
loopne
not
adc
dec
mov
fsubr
push
shl
outs
xor
sbb
das
xor
pop
or
lods
movs
jb
popa
(bad)
mov
ins
jg
sahf
idiv
addr16
fucomp
mov
adc
dec
pushf
outs
mov
pop
cli
popa
ret
aam
adc
push
ins
movs
pop
bound
cmp
cmp
add
push
lds
daa
popa
cmp
cmps
scas
pop
mov
popf
dec
cmp
retf
fs
mov
adc
inc
jb
jae
ret
push
adc
test
mov
out
adc
mov
mov
sbb
adc
in
inc
mov
mov
fs
popa
in
test
out
push
shr
sar
mov
jg
push
push
push
outs
in
sub
mov
or
rol
mov
xchg
sub
cmps
int
jge
in
inc
cmp
dec
clc
jnp
push
mov
lods
fsub
add
xor
jae
sar
ret
cmp
call
dec
test
fsub
jno
call
outs
xchg
int3
dec
push
jl
xchg
setno
(bad)
or
test
mov
je
shr
sub
fwait
test
loope
cmp
cwde
sub
xor
mov
sub
cld
jne
dec
popa
pop
adc
pop
xlat
jecxz
and
popa
inc
(bad)
cmp
mov
mov
ins
gs
into
adc
stos
cmps
jnp
cmp
cmp
jg
jg
mov
loopne
mov
push
add
adc
dec
sar
jle
ror
pop
mov
clc
xchg
fwait
cmp
test
cdq
mov
mov
push
ret
icebp
or
aad
pop
mov
dec
sti
xchg
hlt
pop
add
dec
or
and
test
cwde
outs
jp
cmps
xor
call
dec
fs
jge
and
(bad)
cmp
push
and
in
aad
jne
out
scas
int
dec
test
aad
cmps
cmps
rcl
enter
adc
std
cmp
jp
sbb
push
clc
sub
push
mov
xchg
push
mov
ins
test
sub
inc
and
into
inc
push
imul
cmp
scas
out
push
mov
js
mov
and
xor
mov
(bad)
xchg
sbb
dec
pop
gs
fild
loop
(bad)
aad
pop
add
add
test
mov
in
or
gs
xchg
mov
ret
dec
mov
xor
stc
pop
aas
cli
js
push
sbb
sub
jne
add
sbb
sbb
psubd
dec
pop
pop
inc
retf
cmp
mov
in
pop
mov
jge
mov
fstp
pop
lock
(bad)
jmp
fbld
sar
xor
jno
sti
mov
mov
pop
pop
loope
xchg
loop
ror
xchg
cmps
retf
cmp
xchg
push
xor
mov
das
(bad)
popf
mov
arpl
ins
aaa
jg
xor
fxch
shl
data16
xchg
sbb
pop
iret
dec
mov
cld
push
xor
loope
cmp
out
push
imul
addr16
cmc
inc
dec
pusha
daa
sti
push
les
adc
xchg
test
mov
push
test
std
mov
mov
jnp
cli
call
pop
pop
or
jns
pop
and
mov
addr16
or
lods
add
ret
les
popf
mov
cwde
int
scas
push
dec
shl
add
jmp
xlat
stos
data16
aas
loop
mov
stc
rol
mov
clc
jmp
(bad)
clc
add
test
sub
outs
mov
ror
pop
mov
popf
add
cmp
sub
cmp
sbb
sbb
or
out
push
mov
jno
into
loope
fsub
cmc
mov
mov
cmp
and
in
adc
xor
(bad)
fstp
or
jmp
cwde
add
xor
pop
fld
jge
rcl
pop
out
int3
add
stos
mov
sahf
outs
clc
pop
cmp
mov
shl
inc
mov
stos
mov
sti
int
aaa
xchg
outs
push
outs
xchg
xchg
or
scas
(bad)
ds
scas
aaa
outs
and
jp
jmp
fcmove
xchg
icebp
stos
xchg
sub
jo
dec
dec
inc
movs
pop
dec
dec
rcl
adc
fs
cmp
dec
(bad)
in
sbb
stos
rol
xchg
enter
pusha
fistp
mov
add
rcl
ret
or
lods
jbe
xchg
mov
push
pop
adc
loopne
or
jmp
rcl
adc
loopne
popf
add
dec
out
xchg
daa
jb
jl
mov
pop
iret
cmp
or
hlt
mov
and
call
xor
cmps
rol
bound
fimul
pop
sbb
(bad)
cli
sbb
mov
inc
out
sub
cwde
scas
xchg
fstp
test
into
lahf
push
or
(bad)
jecxz
(bad)
and
fistp
stc
cmp
rcr
pop
loope
jmp
mov
enter
add
adc
mov
push
arpl
arpl
cmp
xchg
pop
jbe
mov
std
rol
bswap
mov
hlt
mov
sub
leave
imul
adc
enter
imul
pop
and
fcmovb
es
pop
sbb
jbe
loop
bswap
add
xchg
adc
addr16
arpl
sub
popf
movs
movs
fwait
scas
mov
add
xchg
fs
rcl
fcomp
xchg
dec
std
jnp
jnp
jecxz
jle
xchg
mov
jl
test
cmp
ds
cwde
xchg
push
add
dec
sub
xor
push
aam
xchg
or
dec
std
cld
imul
add
jns
ror
gs
inc
cmp
cmp
enter
les
mov
jnp
jecxz
xor
adc
mov
mov
std
imul
aaa
sbb
push
test
dec
lea
inc
and
out
push
je
xor
in
in
inc
cmovne
fstp
retf
mov
inc
call
pop
jmp
adc
loopne
cmps
push
into
in
pop
test
cmp
loop
jb
int3
aaa
mov
mov
cmp
es
add
mov
in
lods
in
mov
cld
mov
or
jne
clc
cmc
fwait
push
pushf
jmp
cmps
and
loopne
aas
(bad)
push
popf
icebp
dec
adc
call
adc
push
mov
test
mov
mov
push
cli
pop
add
cmp
pop
scas
sub
daa
and
jmp
add
outs
retf
lods
fwait
sub
arpl
dec
popa
daa
lds
(bad)
shl
dec
imul
xchg
cmp
outs
push
ror
repnz
test
jbe
cmp
pop
retf
and
enter
xor
fucomip
mov
jg
jmp
aaa
in
dec
in
cmp
cmp
cmp
pop
xor
and
rol
inc
mov
addr16
stc
fbstp
loop
fs
sub
std
dec
iret
and
sbb
ins
outs
sbb
call
mov
sub
mov
cdq
in
sbb
stos
cmp
xchg
ret
pop
push
int3
inc
or
mov
outs
and
call
data16
jnp
jbe
sub
hlt
mov
pop
inc
js
clc
mov
rcr
hlt
jo
sub
stos
gs
cmp
pop
loopne
push
popa
sbb
sub
adc
test
ror
fdivr
dec
js
and
xchg
xor
gs
dec
cmp
jle
and
fmul
xlat
push
cwde
mov
mov
adc
test
cmp
xlat
dec
inc
aam
push
in
aam
xchg
xchg
adc
push
pop
ret
dec
pop
push
sbb
jo
mov
xor
repz
ds
mov
mov
or
or
dec
daa
rol
dec
mov
cmp
inc
and
sub
dec
sbb
addr16
add
call
inc
jo
shl
in
hlt
jne
mov
dec
sub
imul
and
mov
cmp
add
movs
int3
into
add
push
fbld
dec
mov
inc
outs
push
std
push
test
adc
(bad)
jns
add
mov
dec
mov
je
lea
aas
in
sub
repz
hlt
mov
mov
out
push
movs
scas
xchg
lahf
movs
movs
or
repnz
xor
stos
retf
cmp
add
lods
jns
sbb
shr
pop
out
and
cli
adc
xchg
jp
bound
shr
in
xor
jbe
daa
dec
mov
xchg
adc
xor
sub
cmp
cmp
(bad)
sbb
repnz
(bad)
rol
sub
inc
lock
in
sysenter
sub
jbe
int
pop
fdivp
xor
dec
mov
popf
in
pop
inc
adc
add
ds
jl
aad
cwde
jae
test
mov
mov
sub
xchg
test
leave
jo
mov
and
sub
dec
lods
push
inc
sub
test
pop
std
or
mov
jbe
push
ins
xchg
mov
push
xchg
adc
cmps
cwde
fbld
or
ss
dec
in
cmp
cmp
mov
sub
in
ja
test
mov
jmp
cmps
icebp
sbb
or
stos
fidivr
push
cmp
dec
retf
add
out
lahf
dec
ins
nop
mov
mov
scas
ins
aas
(bad)
mov
mov
cmp
pushf
pop
pop
rcr
inc
out
fst
aaa
imul
in
cld
cmp
dec
inc
icebp
retf
scas
out
jb
mov
shr
xor
cmc
sbb
into
retf
in
adc
push
mov
sbb
push
in
sub
mov
fld
mov
mov
push
shr
mov
out
or
mul
cmps
iret
fcmove
in
inc
ret
cmps
and
mov
jmp
push
fdivr
inc
fild
xchg
data16
ss
mov
outs
lods
cs
mov
xor
mov
pop
into
pop
int
pop
in
jp
cmps
jg
retf
ds
adc
mov
pop
dec
imul
jle
lods
cmp
pop
mul
mov
and
in
fadd
repnz
dec
mov
cdq
clc
mov
dec
aaa
adc
ds
dec
nop
out
jnp
stos
test
sub
adc
jne
adc
popa
jmp
mov
xor
inc
sub
movs
ss
std
xor
lds
inc
cmp
or
add
cdq
mov
mov
mov
cmp
out
add
pop
push
out
add
sub
and
call
xor
ins
in
mov
mov
and
mov
(bad)
ja
or
gs
xor
movs
test
mov
mov
push
repz
jecxz
inc
pop
cmp
ret
adc
and
cmp
retf
imul
sub
sub
and
sbb
pushf
dec
pop
push
cwde
jns
test
xchg
int3
sub
cwde
dec
dec
sbb
inc
loope
(bad)
scas
scas
js
scas
cmps
mov
ror
test
test
or
das
stc
imul
xor
push
or
adc
xor
inc
les
stos
adc
in
mov
es
loope
fisubr
lock
in
or
mov
xchg
jg
pop
jmp
fistp
sub
and
test
ss
pushf
push
jb
sbb
pop
out
clc
pop
outs
dec
call
push
xchg
in
into
add
dec
repz
inc
inc
pop
jns
cld
adc
scas
mov
inc
push
pusha
pop
test
pop
cdq
cmp
ins
aas
jecxz
(bad)
rol
fild
movs
xlat
pushf
shl
xor
mov
cld
ret
mov
aam
push
inc
inc
jecxz
pop
inc
aas
mov
loope
cmp
adc
dec
addr16
xor
in
cmps
sahf
sahf
sub
imul
mov
loop
dec
and
jge
jb
js
ins
adc
or
mov
mov
test
lahf
mov
div
xchg
lods
pop
fld
call
and
lods
sbb
ficom
sbb
mov
sti
add
(bad)
(bad)
add
rcl
mov
dec
add
or
mov
xchg
call
loopne
aas
nop
pushf
xchg
pop
sbb
xchg
push
imul
jo
push
jno
aaa
imul
sbb
push
inc
inc
or
jnp
add
cmp
pop
and
test
icebp
inc
loopne
dec
jo
jnp
pop
jne
les
add
mov
cdq
cmp
xor
adc
mov
test
arpl
inc
inc
xchg
cmp
(bad)
sub
xchg
int
xlat
scas
add
jo
clc
mov
rol
and
shr
xor
jge
pop
std
movs
into
jbe
jns
outs
push
jno
add
pushf
push
mov
ja
shl
fcom
jmp
add
(bad)
mov
fwait
jae
movs
(bad)
mov
and
xchg
and
push
and
imul
sbb
call
es
jg
and
lar
cs
movs
rcl
add
enter
or
jns
outs
or
xor
das
lods
test
movs
inc
and
pop
retf
xchg
or
jno
or
mov
retf
setne
std
imul
cmp
xor
std
add
test
mov
loopne
ja
test
dec
xor
pop
pusha
je
enter
pop
push
shr
ret
xchg
pop
call
mov
test
xchg
in
push
mov
movs
dec
repz
and
add
add
mov
cmp
adc
lods
mov
pop
and
push
mov
cmp
sbb
aas
nop
mov
mov
in
out
lahf
mov
outs
push
fidivr
xor
retf
and
cmp
sub
out
pushf
sar
dec
jne
push
ins
jge
sahf
iret
push
cmp
mov
sbb
dec
cwde
ror
imul
sub
and
idiv
imul
mov
xchg
(bad)
mov
mov
das
(bad)
jge
out
scas
retf
jo
(bad)
movzx
retf
cmc
int
inc
repnz
pop
jae
lds
arpl
inc
outs
xchg
and
cmp
push
out
jmp
call
rcr
dec
dec
fld
xchg
mov
loopne
enter
inc
mov
mov
mov
or
call
ret
std
cmp
ret
or
pushf
outs
push
dec
movs
loop
data16
shr
add
fbstp
jle
sbb
shr
in
mov
popa
and
inc
jp
and
jmp
pop
and
xor
fwait
jne
nop
push
test
inc
mov
arpl
gs
cs
cmp
push
pop
sahf
stos
pop
enter
cmc
mov
int
out
cmps
add
rol
ret
or
shl
fcmovbe
cdq
das
xchg
push
push
xchg
push
xor
pop
xor
xor
sub
push
imul
scas
push
call
sub
mov
imul
push
inc
mov
and
push
xchg
fild
mov
xchg
inc
out
xchg
sub
xor
adc
and
mov
xor
xchg
push
add
(bad)
bound
retf
clc
aad
ins
xchg
sbb
and
dec
xlat
(bad)
stos
inc
outs
icebp
push
pcmpeqb
xor
(bad)
push
fidiv
cmps
push
jp
cmp
cli
sahf
jle
inc
fistp
int3
add
mov
out
lods
sbb
sub
mov
(bad)
jge
push
aad
shr
int
(bad)
adc
outs
or
mov
das
add
scas
push
mov
sub
xchg
(bad)
fmul
adc
xor
cmp
dec
sub
js
pop
in
xor
dec
out
(bad)
lds
mov
sbb
mov
popf
cmps
nop
and
sti
cmps
lods
xor
push
push
mov
mov
fmul
cmp
test
xor
dec
sub
dec
daa
xchg
cs
inc
test
repz
dec
jg
je
inc
mov
pushf
inc
pop
cmp
adc
mov
fwait
mov
push
or
xchg
repnz
jno
xor
and
mov
hlt
pop
xor
movs
xchg
pop
jo
les
rcl
dec
mov
loope
mov
retf
inc
lods
push
into
imul
pop
xor
movs
jno
pop
rcr
in
mov
push
or
jo
xchg
sbb
cli
push
out
rcr
sti
xchg
xchg
data16
xor
mov
sub
imul
pop
jmp
jae
and
mul
cmps
xlat
in
test
test
loope
cs
mov
das
mov
push
loop
inc
add
cmc
nop
push
shl
inc
bnd
dec
cld
test
xor
or
adc
sub
test
inc
popf
sbb
js
fucom
sahf
add
add
ja
jbe
mov
xchg
cli
repnz
outs
mov
(bad)
mov
mov
mov
scas
aaa
fist
movs
pop
icebp
push
sub
add
xor
jns
push
ins
jo
push
gs
inc
aam
mov
mov
sub
jbe
mov
lods
sub
jne
push
dec
mov
or
enter
push
int3
cmp
(bad)
leave
cmp
mov
pusha
(bad)
fcomp
bound
and
cld
mov
mov
xchg
test
dec
mov
leave
je
out
(bad)
adc
mov
and
inc
retf
sbb
adc
fs
cwde
mov
pop
sbb
pop
xlat
fs
call
jns
icebp
ret
or
gs
push
clc
mov
jge
and
sub
inc
sub
ret
dec
and
movs
jnp
ret
out
repz
test
ret
pop
es
xchg
push
xor
adc
loop
data16
fld
test
fild
ja
mov
lds
cli
sub
xor
test
(bad)
sbb
loopne
sub
scas
sub
mov
add
shl
fwait
mov
cmps
dec
leave
ss
add
pushf
or
inc
push
ins
rol
test
(bad)
and
retf
sbb
fsubp
pop
ss
dec
mov
das
imul
out
sbb
in
sub
outs
mov
sub
pop
es
sbb
pop
in
jbe
mov
pop
add
push
fimul
add
scas
pop
mov
pop
jnp
jle
cmps
add
addr16
mov
cmps
adc
mov
mov
aam
shl
inc
pop
sub
mov
cmps
lahf
and
call
jg
mov
pop
retf
adc
mov
retf
xchg
xor
shl
in
jo
jle
dec
inc
pop
pop
pop
sub
retf
push
xor
jne
xchg
mov
or
imul
xlat
test
or
outs
dec
scas
add
outs
cmps
mov
xor
mov
ja
icebp
pop
jae
xor
rcr
call
sahf
imul
fdivr
je
out
cmp
mov
addr16
movs
cmps
push
sbb
icebp
and
(bad)
sub
sub
pop
xchg
sbb
mov
xchg
jle
xor
cmp
mov
arpl
call
std
push
adc
pop
xor
cli
sbb
cmp
xchg
cmp
lods
movs
jge
out
xor
inc
dec
in
push
xchg
pop
xchg
jge
adc
mov
rcl
inc
xor
fadd
pop
cdq
jb
and
mov
pop
jmp
jl
daa
push
ret
xchg
sar
mul
daa
sub
(bad)
mov
mov
xor
imul
mov
inc
mov
daa
pop
lods
sbb
ret
jbe
shl
xchg
pusha
mov
mov
cdq
cmp
pop
fucomp
mov
dec
xchg
xor
movs
dec
inc
mov
(bad)
popf
xchg
fstp
ficomp
ret
mov
and
jge
xchg
xchg
bswap
sar
or
push
test
pushf
push
imul
or
in
pop
aas
xchg
adc
jmp
(bad)
push
fs
pop
jne
pop
sub
push
popa
test
jbe
mov
sar
cmp
rcl
rcr
lods
call
arpl
and
push
mov
pop
xchg
call
inc
pop
or
xor
jmp
or
std
cmp
fs
push
bndstx
imul
je
add
call
jmp
stos
scas
jmp
aaa
or
popa
shl
ret
dec
hlt
(bad)
jnp
push
js
mov
mov
cmps
xchg
sbb
push
adc
loop
cmps
mov
neg
pop
fisubr
add
movs
xor
rol
cmp
out
mov
aas
push
sbb
daa
jle
iret
sub
xor
push
dec
xchg
(bad)
pop
jl
call
dec
lods
mov
jmp
mov
sub
xchg
cmp
cmp
das
inc
sbb
fld
and
imul
pop
adc
push
loop
adc
sbb
aam
jno
mov
js
cmps
repnz
add
fsubp
cmps
and
mov
nop
dec
push
imul
jmp
push
adc
pop
jmp
cmp
pushf
xchg
jbe
push
ror
cmc
shr
sub
enter
lods
xchg
dec
xchg
inc
push
data16
fmul
mov
sbb
inc
loopne
dec
inc
xchg
xor
jmp
shl
in
scas
das
dec
add
add
adc
sub
outs
jmp
mov
jne
mov
stos
fsubr
push
sbb
sbb
add
xor
xor
dec
sbb
xchg
mov
mov
mov
mov
xchg
cmps
mov
xchg
idiv
test
pusha
jg
aas
push
dec
out
push
dec
retf
or
hlt
out
lock
push
and
or
xchg
jo
test
fcom
in
repz
dec
repnz
scas
cld
pop
shr
sbb
test
lock
loop
xchg
and
out
hlt
and
push
movs
test
imul
fcmovu
ins
outs
test
pop
pushf
dec
and
lock
das
and
sub
and
data16
call
sbb
and
pop
jmp
repz
fs
arpl
(bad)
outs
scas
pop
outs
not
and
cmp
adc
les
ret
fs
ja
loope
outs
aad
test
fs
and
cmps
fst
sub
sbb
retf
xchg
imul
out
fisttp
add
push
test
inc
pushf
push
enter
movntps
shr
(bad)
loop
(bad)
push
dec
sub
xchg
iret
add
adc
mov
add
in
retf
retf
pop
add
cs
or
fmul
repnz
add
retf
dec
mov
mov
jmp
pop
out
addr16
xchg
shl
lea
xor
ss
test
cli
fcom
sub
pushf
xor
push
or
lock
repnz
push
pop
xchg
inc
mov
fdivr
ror
inc
test
iret
dec
add
repz
sub
mov
and
cmp
sbb
repnz
sub
mov
es
jno
mov
jg
ds
aas
sub
out
or
jbe
or
ret
dec
sub
sahf
test
vsubps
cmp
ds
mov
(bad)
mov
aam
mov
test
adc
les
cmp
pop
jmp
mov
xchg
lods
or
jno
imul
add
xor
out
xchg
xchg
bound
mov
dec
xchg
aaa
dec
stos
cmp
inc
add
add
jne
mov
out
in
in
mov
aaa
(bad)
jb
mov
pop
mov
or
jb
pop
and
add
jl
add
lock
rcr
clc
cmc
sahf
adc
pop
das
mov
sub
cwde
add
xor
xchg
(bad)
cli
jae
xor
(bad)
mov
sysexit
ret
push
jae
xchg
fiadd
adc
lds
aam
mov
loope
aad
fcomp
or
mov
(bad)
mov
cmp
inc
popf
data16
cs
retf
mov
sbb
jp
pop
dec
push
mov
pop
movs
jmp
mov
mov
jnp
sti
push
add
lea
add
ret
adc
xchg
scas
sub
add
add
mov
sbb
sub
mov
jl
and
jbe
inc
add
(bad)
jmp
sbb
call
aas
call
pop
(bad)
popf
xor
imul
xchg
adc
sub
and
xor
and
push
cmp
xor
pop
mov
pop
fwait
adc
dec
outs
inc
cmp
cli
imul
and
movs
scas
push
pushf
inc
xor
out
arpl
jmp
leave
xor
xor
cmps
(bad)
call
mov
dec
or
pop
dec
xchg
shl
test
pextrw
xor
idiv
and
dec
jnp
pusha
sub
rcr
out
push
outs
pop
cmp
(bad)
cld
add
xchg
pusha
aad
not
xchg
mov
mov
pop
(bad)
das
rcr
xchg
mov
or
stos
sub
mov
inc
call
(bad)
(bad)
stos
inc
xchg
lahf
push
in
ds
jns
pushf
cmp
mov
jae
mov
dec
adc
push
mov
ficom
and
pop
mov
add
test
xchg
cmp
push
xchg
popa
inc
or
and
popaw
(bad)
adc
jo
jns
adc
jo
ret
out
or
dec
mov
ror
push
movs
xchg
jo
xchg
or
cld
jno
ins
inc
repz
dec
mov
call
sub
pop
mov
(bad)
aaa
cmc
cli
add
inc
cmc
add
mov
jmp
or
int3
cmp
shr
neg
int
out
sub
(bad)
in
sbb
je
pusha
dec
inc
jecxz
in
inc
fstp
lods
sbb
std
lea
sti
das
aad
test
cmc
xchg
push
cmc
leave
add
sbb
mov
inc
mov
fcom
je
stc
(bad)
or
out
jne
xlat
cmp
loop
test
push
ins
dec
xor
pop
ror
inc
fwait
add
repz
movs
jns
lea
test
inc
pop
in
sahf
cmp
fucom
and
loop
inc
arpl
fldcw
outs
retf
pop
cmc
sub
mov
(bad)
andnps
cmp
iret
cmp
rcr
jns
cmp
jl
xor
ja
repnz
pop
mov
jne
jne
stos
bound
imul
fstp
mov
je
xchg
cmp
shl
sub
adc
add
push
popf
sbb
dec
cld
adc
mov
rcr
aaa
adc
mov
pop
je
inc
cmc
xor
es
push
sub
sbb
ja
mov
jecxz
jp
add
push
mov
dec
or
add
sbb
div
mov
push
int
mov
fist
shl
aam
xor
std
sbb
mov
test
fstp
inc
mov
jnp
mov
pop
mov
sub
scas
mov
mov
in
js
inc
sub
pushfw
addr16
mov
jno
test
cs
ins
add
jle
repz
inc
jg
inc
imul
xchg
(bad)
mov
adc
mov
repnz
ins
mov
jae
xchg
mov
ret
jae
add
pop
sbb
jne
dec
iret
sub
imul
push
div
movs
(bad)
imul
fs
call
xor
lfs
imul
xchg
inc
ins
in
dec
dec
sahf
xor
and
push
xchg
sbb
fdiv
add
cmp
sub
movs
clc
sub
push
test
fwait
pop
sbb
loop
in
xor
cmp
daa
xor
sbb
xlat
and
popf
in
or
jmp
mov
ja
(bad)
xor
dec
mov
sahf
sub
mov
test
movs
add
dec
ds
mov
das
ds
sbb
push
ins
cmp
pop
call
mov
add
inc
popf
jno
call
pop
add
mov
popf
ror
mov
mov
jae
les
in
inc
pop
and
xor
and
jmp
push
sub
jne
jp
(bad)
hlt
js
je
psubusw
imul
xor
jmp
cld
sbb
add
sar
fcom
out
test
sahf
(bad)
pop
(bad)
jo
sbb
repnz
loop
clc
mov
lods
sbb
inc
out
cwde
sar
mov
enter
jmp
in
jg
mov
jmp
push
mov
pop
adc
clc
dec
xchg
mov
cmp
adc
push
push
cmovg
dec
in
cmc
mov
fs
icebp
push
xchg
(bad)
ds
sub
(bad)
in
add
mov
nop
daa
push
and
dec
push
lods
mov
das
in
in
mov
add
jno
mov
jge
mov
mov
hlt
fcomip
sbb
add
xchg
dec
dec
or
push
mov
xlat
loopne
pop
popa
push
int
dec
cmp
scas
and
mov
adc
mov
shr
inc
xchg
stc
jle
jle
int3
mov
inc
sub
adc
xchg
jnp
inc
out
mov
xor
xchg
dec
cld
aam
jmp
shr
popf
imul
push
inc
scas
pushf
pop
out
aad
mov
in
jnp
xchg
push
rol
jo
leave
pop
xchg
and
outs
sub
and
cmp
mov
fst
cmp
adc
mov
and
loope
xlat
xor
pop
adc
mov
loop
xor
or
sbb
(bad)
sbb
cmp
ficomp
push
iret
pusha
add
shr
push
mov
cli
pop
icebp
mov
dec
mov
push
add
sub
inc
pop
push
xor
fstp
and
xlat
ficom
pop
adc
mov
adc
sbb
aad
shr
xchg
int
mov
fst
(bad)
sar
or
push
dec
(bad)
aam
adc
pushf
imul
repnz
mov
adc
push
shl
fwait
mov
loopne
xchg
in
inc
cmp
xor
xchg
jl
mov
sub
push
cmp
and
adc
adc
int
ins
push
adc
in
daa
or
pop
cmp
mov
hlt
sub
sbb
ins
mov
inc
aaa
or
inc
add
shr
(bad)
pop
pushf
or
sub
and
sub
or
xchg
fistp
jns
jle
daa
sub
das
inc
fdivr
xor
sub
jnp
fdiv
xor
lods
(bad)
xor
enter
dec
and
sbb
gs
pop
dec
push
jmp
iret
nop
push
pop
or
into
outs
mov
or
xchg
loopne
adc
nop
lods
stos
daa
cmp
sub
and
rcl
in
xor
stos
imul
fwait
sub
jge
and
sar
call
push
mov
in
xor
push
imul
jmp
jmp
inc
lahf
leave
lods
mov
outs
jmp
into
adc
xor
mov
add
pop
adc
jo
sub
shl
sub
(bad)
mov
repnz
aaa
push
shl
mov
ins
retf
push
jae
cmps
or
sub
and
out
out
popa
mov
cmp
fs
outs
ror
fnstenv
mov
pop
mov
shr
push
jns
ins
add
mov
xor
ror
test
inc
icebp
(bad)
mov
repnz
jle
adc
mov
into
cmc
and
stos
jno
jae
xor
fdiv
jo
pop
mov
(bad)
cmp
xchg
lea
mov
div
retf
dec
std
retf
sub
push
jns
bnd
mov
dec
xor
cmc
mov
inc
sbb
jg
jl
and
and
jmp
push
jmp
mov
cdq
loope
xchg
mov
call
jmp
adc
push
test
xchg
mov
(bad)
retf
mov
sub
outs
shr
ss
and
and
fstp
sub
aaa
out
xchg
mov
int3
mov
dec
pop
les
pop
jo
rcr
dec
and
mov
les
in
adc
cli
addr16
cmp
fdivr
int3
retf
xchg
ror
jle
adc
add
cmps
adc
ins
jmp
adc
sti
pop
adc
jno
and
clc
fwait
ret
dec
xchg
pop
aas
mov
sbb
lds
and
xchg
sub
mov
or
or
in
mov
mov
inc
mov
inc
in
jp
scas
mov
outs
dec
mov
(bad)
vpshuflw
imul
mov
mov
push
sar
mov
inc
sub
test
leave
dec
fwait
pop
stc
scas
and
and
stos
out
loope
es
test
daa
xor
mov
mov
jge
cmp
aas
(bad)
and
ret
sub
xor
(bad)
inc
mov
lds
xchg
retf
jg
aas
mov
cmp
idiv
scas
mov
loope
mov
fsub
enter
cmp
fcom
les
push
setp
std
sub
(bad)
shl
and
jo
(bad)
cdq
inc
out
add
call
nop
dec
or
lahf
hlt
cdq
fidivr
lods
test
loopne
ja
jl
out
or
jne
(bad)
and
ret
lock
scas
jo
mov
jl
imul
jge
popf
cmp
add
push
fwait
pop
inc
loopne
or
or
shl
ret
dec
mov
les
xor
imul
add
pop
sub
jp
(bad)
(bad)
and
and
add
mov
jae
pop
loopne
movs
gs
fwait
test
dec
or
cmp
pop
retf
nop
lahf
dec
push
jo
ins
xchg
mov
std
sbb
xor
push
xor
repnz
sbb
test
cdq
cld
push
jmp
sbb
add
and
fisub
das
jl
push
and
adc
sbb
xchg
arpl
movs
mov
cdq
push
jb
adc
pusha
pop
and
or
in
xor
xor
je
xchg
in
cdq
mov
and
test
popa
mov
in
add
mov
push
lods
out
popf
push
xor
jb
test
add
imul
xor
arpl
sub
lods
push
call
xchg
mov
push
add
or
dec
icebp
lea
ja
in
pop
xlat
adc
mov
sbb
movs
cmc
repnz
push
add
rol
lock
outs
pop
and
stos
dec
mov
inc
pop
gs
ins
call
dec
dec
jp
jne
jl
sub
loope
mov
imul
push
add
inc
push
sub
cli
push
out
gs
mov
mov
stos
repz
sub
test
or
cs
sbb
add
push
push
fmulp
sub
scas
inc
cmp
or
sahf
xchg
inc
sub
mov
inc
jge
jae
sub
mov
cmps
adc
leave
and
clc
aas
pop
ds
leave
jnp
sbb
(bad)
xor
adc
xchg
jne
mov
lds
inc
(bad)
movs
sub
xchg
jmp
mov
pop
mov
and
push
movs
into
movs
inc
push
cdq
jb
mov
push
mov
mov
cmp
aas
inc
into
inc
test
xor
lds
or
sub
(bad)
jg
add
push
mov
fsubr
push
xchg
or
push
inc
outs
xchg
pop
cmp
mov
jno
imul
call
cmp
fstp
add
cmps
mov
popa
mov
push
or
test
imul
mov
inc
xor
push
repnz
dec
ins
add
cwde
loopne
mov
mov
lahf
dec
or
or
and
or
movs
adc
pop
ins
std
sar
rcl
mov
sub
jmp
test
sti
mov
push
inc
jmp
icebp
and
rol
inc
ins
cdq
push
mov
mov
sar
xor
and
loopne
imul
lods
mov
or
ins
out
push
mov
add
inc
mov
arpl
inc
cdq
cmp
lea
adc
inc
aas
xor
call
fst
jecxz
jmp
leave
movsx
out
out
adc
je
arpl
or
and
fisub
mov
and
call
pop
mov
cmp
or
push
adc
jns
xchg
shl
jg
mov
cmc
jne
pop
xor
loop
sub
out
pop
dec
bound
mul
repz
or
jns
retf
mov
inc
pusha
jecxz
pop
mov
out
xchg
jne
mov
test
push
out
push
arpl
mov
(bad)
rol
xchg
xchg
js
add
setg
or
es
push
dec
bound
out
jecxz
sbb
xchg
in
lds
adc
and
jno
xlat
ds
(bad)
mov
xchg
in
stos
outs
ja
shl
pop
or
icebp
inc
cli
jg
gs
popf
xchg
xor
or
in
jg
dec
repz
xor
pop
movs
popa
dec
sub
fisubr
movs
add
imul
inc
push
std
lock
cwde
(bad)
sub
mov
popa
or
jp
daa
jecxz
sbb
sub
fsubrp
inc
cmp
adc
xchg
data16
sbb
xchg
inc
repz
loope
xor
sbb
ja
jne
mov
dec
jl
enter
das
pop
sbb
sub
adc
push
xchg
fstp
aad
mov
into
ret
imul
jo
stos
not
lahf
ins
jno
push
loopne
sar
add
ds
inc
stc
push
es
je
xchg
adc
(bad)
mov
push
icebp
cmps
cwde
xchg
pop
fidiv
in
fcom
jp
push
pop
inc
cmp
lock
stos
mov
sbb
outs
popa
es
jecxz
cmp
rol
sahf
repz
not
bswap
lock
mul
stos
aaa
stos
fmul
shr
push
mov
dec
pop
cld
(bad)
mov
jns
xor
jmp
adc
xlat
jbe
scas
stc
leave
aas
dec
jmp
mov
xchg
leave
push
adc
(bad)
jnp
jae
push
jle
cmps
fsub
cmp
jmp
or
pop
shl
cmp
cmp
es
fnsave
add
cmp
dec
out
mov
jmp
add
pop
jg
pop
cmp
pusha
scas
popa
pop
call
cwde
pop
adc
loopne
fs
pushf
pop
fimul
xchg
pop
jne
add
cmp
xor
lods
aad
xchg
cwde
iret
sub
mov
sub
pop
das
cmp
sbb
les
dec
ret
sbb
jno
sub
cwde
aam
cmp
test
repz
aaa
popf
xchg
icebp
gs
push
aas
or
(bad)
(bad)
out
mov
jl
add
imul
push
rcr
lods
sbb
js
cmc
dec
mov
je
or
xchg
mov
loop
adc
mov
sti
add
jo
mov
and
ficomp
jno
gs
daa
pop
push
dec
dec
dec
sub
bound
(bad)
cmp
fldcw
jo
jge
(bad)
call
mov
lock
push
jo
jg
jge
push
sub
cdq
sbb
outs
jo
inc
lea
imul
popa
push
shl
add
cmp
mov
mov
jle
outs
add
xor
loope
push
inc
fild
and
pop
outs
loop
repz
push
xchg
ss
sti
inc
or
sar
mov
sti
test
lds
mov
inc
or
adc
cwde
(bad)
add
sbb
dec
je
adc
stc
pop
xor
jo
rol
fld
fsubp
out
leave
clc
adc
cmp
test
lods
adc
xchg
or
repnz
inc
in
jle
xor
add
jle
inc
add
fsub
dec
(bad)
dec
sub
mov
xchg
xchg
adc
mov
out
(bad)
(bad)
or
popf
xor
add
mov
sbb
clc
mov
outs
mov
jbe
test
mov
(bad)
inc
mov
outs
jecxz
daa
jge
inc
cmps
movs
or
xchg
sbb
iret
out
xor
pop
xchg
sbb
sbb
pop
test
mov
dec
icebp
cmp
(bad)
arpl
loopne
call
jbe
mov
jno
mov
cmp
add
gs
movs
sar
fwait
mov
gs
lahf
adc
and
cmps
sti
pop
into
fwait
dec
(bad)
std
int3
retf
push
in
cmp
mov
cmc
fwait
into
adc
mov
inc
sub
xchg
inc
popa
and
mov
push
xchg
retf
and
rol
xlat
xchg
add
push
mov
int
jmp
sbb
mul
dec
movs
xchg
ins
adc
add
xchg
lds
cmp
jge
cmps
(bad)
imul
test
(bad)
cli
sbb
jmp
pop
jmp
inc
jns
(bad)
stc
mov
add
jne
int
aad
adc
test
sub
pop
jle
push
movs
jae
lea
xor
adc
js
mov
sbb
inc
imul
mov
sub
push
sub
daa
jo
stos
(bad)
daa
sub
ss
hlt
mov
scas
ficom
mov
pop
mov
popa
loopne
add
and
ret
aas
bound
mov
add
xchg
add
movs
pop
mov
out
cli
and
movs
pop
fwait
out
inc
(bad)
js
inc
pop
pop
loop
cmp
jl
sub
aas
scas
ret
push
stos
push
pop
mul
jmp
pop
fadd
or
dec
sub
add
xor
dec
std
mov
cld
push
adc
add
jmp
ins
js
aam
movs
dec
dec
(bad)
loope
push
xor
pop
xchg
test
fsub
push
mov
rol
dec
mov
mov
pop
adc
fs
pop
push
jecxz
jmp
inc
add
mov
mov
ret
sbb
push
adc
ret
xchg
cmp
xchg
pop
sub
repz
dec
fdivr
mov
fcomi
sbb
jmp
gs
pop
cs
loop
and
in
and
rol
and
arpl
fcomp
xor
sbb
sub
lods
add
sahf
fstp
jg
sar
popf
sub
inc
das
inc
arpl
test
rcl
repnz
jae
bound
imul
retf
cwde
and
xchg
xchg
fst
(bad)
cmp
cdq
cmp
sub
mov
sbb
fimul
mov
ja
ds
push
pop
cmp
lods
cmps
mov
out
daa
mov
imul
dec
push
pop
jge
aas
fcom
xchg
retf
add
xchg
xchg
ins
sbb
jecxz
aaa
hlt
cmp
xchg
lods
push
(bad)
pop
aam
in
xchg
cdq
lods
int
inc
call
push
pop
add
je
fwait
adc
clc
and
push
and
lahf
jl
pop
scas
sub
push
fsubr
sub
les
stc
jg
icebp
push
outs
std
pop
adc
popa
dec
jae
jp
jge
mov
out
retf
fisub
ja
push
je
and
shl
shl
lods
or
jno
or
xor
mov
xchg
test
fsubr
aas
sub
sub
movs
int3
xor
pop
out
jne
pop
loopne
sar
icebp
mov
arpl
adc
add
inc
ds
cdq
sbb
xchg
add
cmp
mov
pop
add
aad
dec
stc
jns
repz
outs
gs
mov
mov
lods
bound
arpl
xchg
gs
or
fwait
fs
rcl
dec
xor
lahf
xchg
aas
pop
cmp
adc
or
cli
xor
daa
jl
fnstenv
mov
pop
jmp
cli
ds
retf
push
sbb
mov
cmp
outs
fcmove
pop
xchg
sti
mov
cli
push
mul
das
in
shl
hlt
pushf
inc
and
jl
arpl
xchg
enter
jg
loopne
mov
icebp
push
sahf
mov
ja
hlt
in
stos
xor
mov
xor
and
popa
repz
jmp
fild
fisub
cwde
xchg
and
ss
stos
dec
sti
inc
(bad)
sahf
daa
jl
sub
out
and
sub
int3
or
clc
mov
jp
(bad)
outs
mov
in
leave
popf
inc
push
retf
push
out
mov
xor
movs
inc
daa
jb
lods
push
retf
daa
and
nop
dec
inc
jmp
into
xor
gs
ror
sbb
sub
pop
out
and
inc
(bad)
xchg
movs
mov
aas
mov
jl
or
xchg
cmp
sub
mov
add
in
jnp
adc
fwait
inc
push
outs
loope
mov
sti
xchg
psubd
xor
int
rol
xor
jg
jns
adc
pop
imul
retf
and
loope
cld
movs
push
add
lea
ret
push
jmp
add
and
repz
cwde
adc
push
inc
repz
mov
dec
aas
scas
push
xchg
stos
push
jns
xchg
fdivr
ret
ret
lock
sub
outs
enter
dec
pop
(bad)
int3
stc
out
es
xor
out
jle
jnp
sub
ja
jnp
fild
hlt
mov
leave
into
data16
adc
cdq
jne
lods
mov
lds
div
jb
cmp
mov
jb
mov
push
scas
mov
push
movs
jno
daa
out
and
jle
and
or
jbe
xor
xchg
and
xchg
adc
xor
sub
jne
movs
jg
xchg
fiadd
dec
ins
addr16
aam
je
repnz
shr
jo
call
fcomip
aam
(bad)
and
mov
inc
retf
pop
call
inc
sub
and
cli
dec
outs
xor
jp
repz
(bad)
adc
push
or
push
xchg
adc
or
imul
imul
xchg
imul
jmp
jle
sahf
adc
shl
cld
out
cmp
es
ds
gs
add
lea
or
mov
xchg
inc
jno
out
push
sbb
xchg
and
adc
xchg
dec
fist
ins
xchg
add
pop
pop
lahf
dec
xor
test
retf
dec
cdq
xchg
cmp
call
cmps
sbb
mov
or
jge
fcom
push
out
inc
push
rcr
rcl
push
repz
inc
mov
cmps
stc
and
ja
fisub
ins
xor
cmp
adc
inc
sbb
aaa
jmp
data16
mov
rcr
out
sbb
mov
outs
mov
imul
mov
test
ja
not
mov
push
pushf
inc
into
lahf
mov
adc
test
out
cmp
adc
in
out
lds
sub
js
mov
jnp
push
dec
fidiv
neg
frstor
sub
push
sub
popa
add
fdivr
mov
mov
pop
push
rcl
scas
shl
push
popf
mov
ja
jo
add
iret
pop
jle
clc
jbe
(bad)
int
jnp
test
int
sar
sbb
ss
aam
test
push
test
pop
mov
addr16
retf
push
mov
jecxz
mov
cmp
jnp
cwde
pop
or
add
and
cdq
sub
push
ja
sbb
shl
stc
jmp
cmp
jmp
and
pop
sahf
imul
or
jnp
push
or
pop
in
inc
popa
dec
enter
inc
pop
daa
cs
out
push
imul
adc
daa
pusha
movs
neg
mov
(bad)
movs
pop
mov
push
mov
push
shl
push
mov
jmp
add
ins
or
out
js
mov
out
or
(bad)
scas
sub
cli
xlat
push
dec
mov
inc
push
in
(bad)
cmp
mov
scas
stos
xor
xor
push
xchg
mov
hlt
xchg
add
aaa
fnstsw
inc
int
push
adc
in
pop
add
ins
shl
shl
dec
iret
imul
mov
std
push
push
(bad)
push
test
mov
in
dec
xchg
adc
xor
dec
jmp
mov
iret
or
sbb
pop
shr
xchg
jns
cwde
cs
pop
cli
add
xlat
dec
jns
(bad)
aas
jbe
adc
rcl
fidivr
jae
ret
shl
cmps
lds
mov
xlat
mov
nop
push
ins
mov
in
xor
fnsave
xor
sub
mov
aas
push
jnp
jecxz
cmp
movs
and
mov
and
jecxz
out
add
pop
inc
outs
fimul
jmp
fistp
push
mov
push
test
or
or
mov
int3
mov
or
and
frstor
xor
enter
add
mov
in
sbb
sti
xchg
or
adc
test
shr
xchg
gs
mov
mov
xor
adc
and
pop
jno
mov
je
imul
test
or
(bad)
dec
adc
xor
lods
adc
clc
or
outs
dec
jp
pop
pop
xchg
push
add
cmc
cmps
fst
stc
jl
mov
sahf
lods
loope
arpl
jg
xchg
fwait
ror
xchg
daa
jne
dec
adc
sbb
movs
or
imul
sub
mov
adc
inc
pop
pushf
je
push
or
shr
es
xchg
ret
sub
in
xchg
ficom
mov
xlat
pop
or
xor
sub
sbb
adc
test
jnp
jne
dec
pop
loope
xlat
ficom
dec
jae
cwde
jo
adc
add
pop
imul
fistp
lds
sar
mov
xor
mov
into
add
sahf
stc
movs
hlt
out
ja
adc
in
cdq
pop
test
jle
movs
ret
out
lea
dec
jno
push
jg
and
push
pop
xor
adc
pop
mov
jle
xor
fiadd
push
pop
xor
push
adc
cli
aaa
sub
mov
adc
pop
test
adc
jbe
lods
loopne
stos
dec
xchg
test
jb
cmp
(bad)
mov
add
inc
xchg
or
cld
push
mov
pop
lods
imul
jbe
mov
ds
xchg
movs
retf
sbb
pop
mov
ss
cmp
js
cmp
cwde
sti
or
(bad)
jo
push
fistp
jl
xchg
test
xor
daa
jle
add
(bad)
js
ja
dec
enter
mov
jp
mov
jmp
mov
adc
dec
mov
pop
mov
int
mov
iret
imul
sub
xchg
lahf
mov
out
rcl
lock
sbb
inc
imul
push
ja
sbb
out
fwait
mov
ins
push
stos
adc
out
sub
in
popf
xor
popf
call
mov
jecxz
and
int3
movs
arpl
aad
pop
xor
lea
mov
mov
or
xchg
cwde
adc
dec
out
ret
mov
inc
adc
fsubp
shl
and
or
(bad)
and
pop
mov
xor
sub
retf
pop
jb
retf
sub
jne
mov
mov
sbb
out
clc
arpl
dec
mov
add
push
fwait
aad
xchg
xor
hlt
and
pop
out
jnp
daa
(bad)
sti
or
mov
mov
adc
out
sub
xchg
sbb
pop
mov
and
bound
cmp
cwde
ficomp
jl
pop
sbb
gs
xchg
sub
or
js
les
(bad)
xor
pop
movs
std
pop
push
int
mov
add
mov
cmp
fldcw
out
iret
das
or
outs
mov
mov
jl
adc
jmp
push
sbb
and
pop
pop
in
mov
dec
into
pop
add
dec
lds
or
mov
jl
into
es
leave
add
pushf
adc
pop
retf
out
push
cmp
mov
sub
push
pop
cmp
xchg
mov
loop
inc
aaa
mov
icebp
cli
ret
dec
xchg
addr16
gs
xlat
dec
fs
cmp
aad
popa
movs
or
ins
inc
mov
mov
mov
mov
mov
mov
cmps
mov
xor
test
addr16
lahf
fsubr
mov
add
sub
out
mov
loop
das
sbb
add
inc
idiv
cmps
xchg
outs
and
inc
push
lds
sti
jno
arpl
test
sbb
imul
cld
mov
xchg
lds
iret
jno
or
out
jo
mov
xor
mul
mov
(bad)
pop
and
mov
in
ins
fsubr
inc
fwait
js
lods
jns
test
xor
pop
shl
pop
mov
imul
out
adc
imul
pushf
dec
inc
cmp
dec
daa
push
xor
xchg
sub
inc
sbb
into
jns
cmp
out
scas
stos
ins
aad
std
pop
add
xchg
bound
pusha
adc
cld
aam
pop
mov
cmp
or
xchg
addr16
aas
popf
pop
dec
arpl
jo
cmps
pusha
mov
pop
stos
mov
mov
cwde
jl
arpl
movs
out
cmps
xor
je
inc
sbb
push
cdq
nop
sbb
push
pop
cld
aam
xchg
jns
jge
sub
in
cmc
sbb
(bad)
mov
pop
iret
fwait
xor
xchg
jb
jg
mov
push
(bad)
rcl
pop
or
mov
in
inc
push
stos
hlt
mov
xchg
mov
adc
jl
out
and
retf
xchg
ret
push
add
push
div
jmp
sahf
sbb
or
rol
je
xchg
cld
push
retf
mov
pop
leave
(bad)
lds
jmp
out
push
clc
icebp
pop
fld
fwait
xchg
lahf
xchg
mov
mov
dec
das
and
lods
aaa
pop
(bad)
scas
jmp
outs
mov
enter
xchg
in
mov
or
xchg
xchg
call
(bad)
mov
cmps
lds
cmp
sub
pusha
adc
push
dec
fimul
call
retf
and
mov
movs
in
fs
es
test
mov
rol
cmc
pop
xchg
cmp
stos
fst
aam
mov
out
fcmovnu
sub
inc
shl
pop
mov
pop
cmp
inc
xor
in
mov
cmp
add
jecxz
xor
push
push
push
fs
lods
ds
lahf
mov
or
repnz
sub
sub
add
mov
mov
mov
jne
pop
and
or
sbb
mov
xchg
fs
pop
fdivr
mul
test
sub
sti
cld
mov
bound
cmp
add
add
fdiv
ret
pop
and
sub
ret
xor
rol
push
inc
popa
push
jl
mov
js
pop
fld
adc
js
in
cmp
xlat
xlat
mov
jmp
rol
aaa
push
dec
jmp
call
adc
mov
jnp
cmp
mov
and
(bad)
or
scas
jb
fnstcw
jns
mov
(bad)
jmp
xchg
push
(bad)
fwait
mov
sub
repnz
nop
xor
xchg
mov
jb
fidiv
ret
jns
daa
pop
push
test
sub
pop
pop
(bad)
data16
and
mov
test
mov
enter
imul
cwde
imul
inc
jmp
push
cmp
dec
mov
xchg
sbb
and
fist
jb
sbb
in
jo
int3
inc
fisttp
movs
out
push
repnz
in
mov
shl
mov
(bad)
push
mov
xor
inc
mov
stc
cmp
dec
jae
fld
mov
xchg
popf
iret
xor
sub
xchg
adc
imul
pop
std
sti
aaa
pop
in
add
xchg
call
xor
mov
jb
mov
sbb
mov
dec
cmp
out
gs
popa
fimul
push
loope
pop
inc
mov
test
add
dec
xor
jl
jbe
nop
repz
fadd
aad
pop
cld
cwde
(bad)
dec
pop
mov
inc
jae
cwde
fist
leave
in
into
mov
out
(bad)
mov
jp
jmp
and
les
mov
pop
ror
add
mov
mov
xchg
repnz
loopne
jb
add
push
lods
push
mov
or
mov
add
push
mov
dec
sub
cmp
lods
hlt
lods
push
ret
jle
rcr
xchg
cld
push
pop
outs
jbe
std
enter
ds
in
icebp
push
std
mov
sti
and
scas
out
retf
mov
add
or
xor
pop
sti
dec
fdiv
adc
bound
or
pop
movs
scas
push
in
add
pop
inc
fsubrp
outs
xchg
out
std
cwde
rcr
adc
ins
(bad)
frndint
ja
mov
std
loopne
ja
cmp
or
loope
test
and
xor
sbb
inc
push
stc
cmc
nop
push
fisubr
xor
jne
les
sub
outs
inc
popf
ret
push
aad
pop
xchg
std
pushw
pop
fdiv
pop
or
pop
and
nop
jge
cld
fwait
stos
dec
nop
rol
sbb
lods
fld
rcr
pop
xor
add
lods
int3
lods
(bad)
add
test
ss
shl
fiadd
and
push
aam
shl
mov
push
jns
mov
sar
pop
int
sub
and
daa
cmps
leave
pop
jmp
inc
retf
lds
add
test
fs
sti
bound
cmp
xor
push
pop
pop
nop
mov
push
div
xchg
les
sub
pop
imul
sbb
and
jge
stos
movs
push
and
dec
call
sub
pop
das
test
(bad)
mov
adc
test
inc
sub
stc
scas
xchg
shr
mov
pop
cmp
je
cmps
fs
add
sti
lds
mov
jmp
aas
cdq
and
push
popf
loopne
sub
test
scas
xchg
or
pop
fiadd
or
mov
jne
repnz
cmps
jp
out
cmp
(bad)
int3
pop
lock
rol
das
mov
in
movups
mov
inc
imul
gs
les
or
jmp
xchg
mov
xchg
ret
in
sbb
pop
jnp
jo
pusha
mov
sahf
mov
mov
fwait
or
les
ds
ins
stos
shl
(bad)
out
repz
in
xor
mov
ss
cmp
gs
xchg
ficomp
dec
add
pusha
cmp
cmp
stc
mov
sti
ret
pop
push
stos
inc
sub
fadd
xchg
push
int3
sub
sub
ja
push
push
es
ins
cmps
mov
(bad)
jae
mov
cs
std
and
(bad)
cmc
pmulhuw
or
add
mov
mov
movs
rcl
add
cmps
sbb
push
or
in
pop
or
nop
cli
jnp
push
shl
pop
popf
lock
jb
sti
aad
cmps
xlat
fisttp
loop
lods
mov
popa
adc
mov
(bad)
xchg
mov
jmp
mov
(bad)
int
push
inc
add
and
fs
dec
mov
push
mov
and
jmp
ins
pop
fst
test
adc
jg
adc
data16
xchg
fmul
push
xor
xchg
add
imul
dec
sti
pop
js
clc
fwait
dec
adc
jmp
sub
popa
and
in
mov
push
mov
cmp
sti
cmp
or
leave
fsub
call
push
inc
add
lahf
push
sbb
jns
dec
xor
xchg
xchg
push
scas
mov
pushf
addr16
cmp
(bad)
xchg
fnstcw
or
call
jg
(bad)
les
and
test
mov
fmul
or
popf
stc
scas
xor
test
stc
(bad)
jmp
dec
popf
mov
loopne
xchg
mov
pop
aad
sub
push
dec
aaa
pop
cmp
aam
pushf
add
outs
and
(bad)
dec
scas
mov
out
cmc
es
mov
lods
push
std
std
jmp
dec
lock
sub
ror
mov
retf
mov
or
cwde
push
adc
(bad)
in
cs
adc
ins
xor
movs
cmp
mov
aad
push
shl
loopne
fwait
jo
ret
sbb
mov
ja
lea
and
rol
pop
adc
daa
jge
ja
stc
xchg
lods
pop
jle
jl
adc
mov
sbb
mov
jne
mov
adc
push
jmp
or
aaa
mov
clc
mov
loop
jns
sbb
mov
sub
(bad)
adc
ret
or
dec
in
rcl
and
arpl
mov
mov
aaa
adc
cmp
fwait
imul
mov
aam
test
out
dec
xchg
mov
or
scas
jmp
inc
mov
jle
icebp
inc
add
mov
leave
push
test
xchg
and
cmp
cmp
popf
mov
push
sub
push
or
out
mov
ret
dec
shr
mov
and
sbb
mov
stos
add
jp
jne
shl
ss
push
add
push
out
repnz
add
call
into
cmp
movs
ds
push
push
or
lods
mov
jmp
and
in
test
cmp
push
(bad)
sahf
mov
cmp
and
aam
ins
(bad)
pop
cdq
add
push
sub
clc
enter
mov
push
mov
xchg
add
cmp
(bad)
into
adc
ins
sbb
and
shl
outs
mov
movs
xchg
movs
mov
push
(bad)
push
cmp
or
mov
and
repnz
mov
xchg
mov
jae
jle
inc
cdq
push
mov
inc
das
xacquire
xchg
test
sbb
jmp
xchg
mov
dec
push
dec
sbb
(bad)
xchg
lock
cld
sti
mov
add
imul
dec
mov
sbb
pop
add
inc
add
leave
ret
sahf
mov
dec
imul
cmps
add
fisttp
scas
jge
call
aam
sub
sub
call
add
sub
mov
xor
test
int
add
sbb
int3
aad
(bad)
sahf
loop
jb
loope
inc
sbb
mov
ss
call
leave
mov
pop
lock
or
aas
add
gs
dec
jns
cmps
mov
cmp
repz
mov
rol
and
popf
into
mov
aam
out
mov
into
daa
call
jmp
fistp
lahf
or
cli
push
inc
loopne
pop
in
dec
push
inc
hlt
and
and
ror
loopne
pop
cmp
retf
ins
pop
out
jecxz
pop
push
jge
mov
and
mov
scas
or
pop
mov
fnstsw
inc
(bad)
(bad)
xor
call
adc
cmps
jl
and
stos
sbb
sbb
test
jns
and
lds
test
lods
mov
mov
pop
aam
add
inc
mov
arpl
scas
pop
movs
jle
dec
ror
xchg
or
imul
jmp
rcr
adc
sbb
fs
sbb
jmp
iret
js
inc
ins
dec
mov
fstp
pop
sub
(bad)
lea
loop
mov
push
add
mov
pop
adc
add
jmp
pop
sbb
ins
cmc
movs
xchg
clc
and
int
loope
mov
xor
push
mov
cmp
pop
mov
push
out
cmp
hlt
xchg
pop
mov
fldenv
mov
nop
xlat
jecxz
hlt
(bad)
adc
into
jle
pop
xchg
pop
popa
stc
mov
lods
neg
retf
sti
add
mov
push
sahf
lahf
inc
xor
push
xor
imul
pop
test
add
or
inc
inc
lods
xor
aaa
mov
(bad)
call
ret
sub
push
stos
ja
push
retf
loopne
fwait
out
sub
ss
jg
stos
dec
xchg
nop
das
scas
sbb
xchg
push
pause
add
jns
or
xor
inc
frstor
movs
into
inc
sub
(bad)
shr
xchg
mov
push
test
inc
dec
loop
rcr
or
ret
or
int
and
jg
pop
shl
inc
add
dec
jle
add
loopne
sub
or
stos
pop
inc
lea
mov
shl
fs
ja
mov
inc
xchg
pop
in
icebp
cs
mov
sti
mov
xor
xchg
mov
mov
push
xchg
ret
and
push
movs
fs
or
dec
cmp
movs
in
shl
jmp
dec
push
aaa
retf
ja
clc
mov
add
fucomi
push
int
xor
jmp
pop
dec
jne
mov
jmp
add
(bad)
mov
cmp
jecxz
sbb
push
inc
mov
std
sub
fsub
and
pop
cld
aas
clc
shl
inc
call
adc
js
iret
mov
or
cwde
mov
sub
inc
outs
mov
sbb
jle
shl
dec
stos
lea
daa
jp
test
out
sbb
bound
lods
dec
jno
retf
lods
jae
inc
jmp
stos
fldcw
les
retw
sbb
mov
add
xchg
pop
jo
inc
jle
jnp
(bad)
push
mov
xlat
cli
xchg
gs
push
into
outs
or
into
std
dec
les
sub
gs
xor
cwde
and
cmps
(bad)
adc
sbb
push
inc
and
(bad)
aaa
ins
or
sub
mov
in
test
stc
xchg
jmp
sar
jl
popf
stos
icebp
cmp
sbb
add
sub
push
jmp
jp
std
sar
mov
add
idiv
movs
sbb
or
push
jnp
or
pop
sbb
pop
test
out
test
push
jb
cld
out
je
icebp
push
inc
adc
push
stos
or
loop
jecxz
pop
push
pop
mov
les
scas
loopne
jl
ja
xchg
cmp
loop
(bad)
stc
sar
mov
inc
xchg
sub
aam
cmps
pop
cmc
sbb
pushf
xchg
nop
push
mov
mov
repz
rol
add
sub
mov
cwde
xchg
ds
xor
ja
or
jnp
fwait
hlt
lea
mov
xchg
enter
test
sbb
fadd
mov
pusha
cmps
inc
push
jle
pop
scas
ficom
call
push
sbb
push
popf
loopne
lahf
movs
sahf
or
fbld
js
mov
std
xchg
fisttp
ja
hlt
sub
push
or
and
lock
cld
cmp
push
out
scas
adc
push
dec
jg
mov
pop
inc
fcmovb
mov
stos
loop
dec
pop
inc
push
add
inc
cs
dec
div
ret
xor
mov
inc
clc
cmp
xor
loope
jmp
sub
or
inc
pop
arpl
sub
jno
sub
neg
and
push
adc
fdiv
ds
pop
xor
aam
call
jno
out
popf
push
or
gs
movs
rcr
cld
test
xor
test
jp
push
cmp
cmp
xchg
mov
jle
cmc
mov
xchg
arpl
stos
repz
sahf
fiadd
mov
pop
retf
ins
cld
dec
xlat
mov
(bad)
fs
cmp
aad
out
sub
mov
pop
inc
(bad)
in
movs
add
dec
(bad)
adc
inc
push
ret
loop
mov
or
inc
xlat
mov
push
scas
rol
into
sub
dec
add
outs
mov
fst
sub
xlat
xchg
retf
push
mov
pusha
and
test
push
out
jns
data16
xchg
lock
gs
ins
mov
push
jne
pop
dec
xchg
xchg
std
or
cld
mov
into
pop
inc
inc
(bad)
or
test
test
fsubr
mov
pop
lea
imul
fisubr
ret
out
(bad)
or
in
es
cmp
ins
add
push
or
xchg
lods
leave
test
popa
dec
rcl
cmps
mov
jge
mov
(bad)
cs
sub
pop
pop
loopne
push
push
and
add
fld
jecxz
add
mov
push
pop
test
pusha
retf
ds
icebp
mov
in
pop
sahf
and
out
jns
cmps
push
xchg
pop
cmp
retf
(bad)
pop
dec
lea
int3
int
stos
jge
inc
loop
lods
cmp
or
scas
aas
cmc
push
xor
sbb
cli
jo
inc
movs
dec
mov
daa
jbe
cmp
popa
sub
setge
push
jmp
lock
aas
btr
aas
sti
mov
mov
test
popa
addr16
add
scas
sbb
mov
push
ins
cmps
pop
mov
and
and
cmp
mov
inc
pop
leave
out
jle
mov
mov
push
pop
xchg
fwait
hlt
add
mov
js
add
mov
test
xor
rol
lods
xchg
enter
jnp
and
out
lods
xor
stos
aas
mov
call
mov
fist
(bad)
out
lods
test
xrelease
shr
imul
fisttp
daa
mov
push
lock
push
(bad)
jge
loope
xchg
push
aas
arpl
jae
dec
das
cld
inc
in
pusha
test
jge
sub
dec
sub
add
in
sahf
xchg
push
lds
or
mov
scas
or
pop
(bad)
push
sbb
push
sbb
fldcw
sbb
cs
shr
cmp
inc
fwait
push
in
pop
fistp
jmp
jne
mov
cmp
(bad)
pusha
arpl
fisttp
jp
mov
pop
fist
sub
add
fnstenv
fsub
mov
test
jmp
add
ret
cdq
cmp
std
aad
xlat
rol
es
clc
cmc
jns
cs
pop
inc
mov
rcr
in
pushf
mov
mov
jo
push
lahf
inc
ins
mov
push
out
loope
(bad)
dec
adc
adc
aam
aam
cwde
stos
test
lds
fld
inc
and
push
in
push
movs
jecxz
add
es
jmp
popf
lock
cmp
xchg
enter
and
fisttp
out
aas
imul
inc
retf
daa
jne
sub
in
rol
add
adc
in
push
xor
add
imul
rol
call
ficom
in
push
idiv
xor
push
rcl
cvtps2pi
sahf
or
aaa
movs
xchg
aad
pop
fldenv
xchg
(bad)
dec
xor
jbe
jge
pop
inc
jne
pop
dec
dec
or
mov
cs
jp
add
adc
test
xlat
jbe
imul
mov
adc
mov
mov
es
push
out
mov
fbstp
movs
out
aad
push
fisubr
(bad)
mov
jp
add
push
int3
sub
into
mov
outs
pushf
xchg
ret
sub
outs
adc
test
std
inc
sub
repz
sub
dec
jnp
cmps
sub
in
pop
push
push
hlt
push
not
fimul
mov
sysenter
xor
ror
mov
das
pop
jl
fld
jb
adc
push
and
jge
popa
and
mov
es
xor
fidiv
cmp
xor
ret
int3
mov
cmp
jo
rol
and
mov
mov
mov
mov
es
clc
inc
mov
test
mov
xor
sub
retf
pop
mov
dec
mov
mov
pop
dec
mov
dec
cmps
mov
pop
cwde
test
stos
adc
xor
xor
mov
inc
inc
or
movs
test
int3
pusha
mov
xchg
popf
test
jp
jmp
lock
cdq
or
rcl
aad
ss
mov
adc
cmc
cmps
push
aaa
aaa
cmp
stos
jns
stos
push
daa
or
leave
fsub
ror
sbb
sub
sub
jo
push
popa
imul
(bad)
imul
lods
jnp
sbb
cmps
jecxz
jae
inc
push
or
dec
(bad)
jns
jne
movaps
mov
xchg
cdq
rcr
mov
pop
or
adc
dec
xlat
sub
or
fidivr
mov
mov
ins
sbb
cld
xchg
call
xor
dec
cs
push
jmp
jecxz
xchg
mov
add
into
add
test
test
jno
in
rcl
in
dec
pop
mov
stos
shl
dec
mov
icebp
enter
adc
jmp
dec
aaa
add
add
cmp
sti
mov
fucom
push
mov
adc
jnp
int3
mov
xor
in
sbb
fwait
sbb
and
add
or
pop
and
jmp
rol
jns
cmp
call
adc
movs
(bad)
sar
dec
jo
cmp
mov
(bad)
cli
ret
mov
inc
mov
inc
aaa
push
mov
jmp
leave
push
movs
rcr
shl
das
inc
cmps
sub
inc
pop
call
sbb
test
mov
(bad)
push
test
pop
popa
mov
cmc
outs
mov
adc
sbb
or
cmp
popa
add
xor
stos
mov
xor
jo
mov
mov
scas
inc
inc
ins
loop
bound
into
and
adc
test
pushf
or
sbb
push
mov
cdq
push
or
inc
pop
xchg
aaa
imul
ja
dec
mov
or
pushf
cmps
adc
scas
mov
mov
inc
mov
dec
fisub
xchg
cwde
adc
mov
loop
(bad)
jle
call
out
fiadd
lods
ret
pushf
cld
push
fisttp
in
mov
sti
and
hlt
inc
cmps
dec
push
jns
loope
mov
jmp
push
sbb
das
add
xor
mov
push
pop
sbb
std
nop
mov
mov
test
adc
adc
pop
jl
fwait
cmps
jns
out
push
test
inc
xor
in
mov
mov
dec
aam
add
xchg
adc
int3
jo
imul
or
jmp
mov
nop
xchg
jecxz
sbb
nop
call
dec
rol
ins
push
cmps
xchg
sbb
jmp
cld
and
jne
inc
mov
rcr
inc
shl
sbb
or
shl
not
cmp
push
add
(bad)
sti
dec
(bad)
sub
mov
push
(bad)
fcomp
xchg
leave
push
xor
inc
outs
and
hlt
add
fsub
mov
mov
cmp
outs
mov
jb
sbb
push
jae
in
lods
es
lods
dec
jmp
idiv
cli
call
jnp
rol
clc
push
idiv
inc
sar
test
in
stc
loop
fst
ins
int
js
mov
mov
mov
movs
ss
cmps
jl
call
fdivr
mov
push
imul
sbb
inc
fild
sub
out
in
mov
loop
imul
aas
aas
aam
push
push
lahf
pusha
lods
(bad)
(bad)
shl
(bad)
fcmovb
cmp
or
mov
sub
jl
add
in
arpl
and
inc
add
aaa
aam
mov
pusha
xchg
add
mov
pop
push
out
rol
jmp
fs
or
inc
out
imul
aas
(bad)
dec
fisubr
mov
add
cmp
outs
sti
std
not
jmp
repz
cmp
stc
add
outs
out
xor
add
fild
pop
mov
pop
cmp
sub
mov
push
push
pop
xchg
mov
cld
dec
ret
sbb
scas
jmp
fldcw
(bad)
mov
xor
cwde
jmp
push
and
mov
nop
(bad)
loop
mov
jge
cwde
out
add
mov
mov
iret
bound
ins
into
in
inc
jmp
or
mov
push
pop
sub
or
xchg
aad
pop
fs
(bad)
stos
sbb
adc
xor
imul
movs
mov
jnp
loope
jo
(bad)
push
(bad)
loopne
inc
ja
call
hlt
pop
dec
sahf
inc
lea
jb
pcmpeqb
stc
xchg
mov
das
popf
pop
(bad)
adc
in
aam
jb
mov
mov
or
adc
test
test
mov
not
test
xchg
mov
adc
(bad)
ret
sbb
fcmovnb
ret
inc
jecxz
pop
mov
push
adc
xchg
mov
inc
std
cmp
(bad)
aas
and
inc
jno
xchg
(bad)
sahf
shl
adc
std
add
cmp
cli
mov
js
xchg
icebp
pop
fcom
mov
xor
pop
outs
out
push
into
std
daa
sbb
lods
test
and
test
sub
mov
outs
push
sbb
jnp
and
xchg
idiv
xadd
les
xchg
popa
aad
loopne
fstp
dec
jmp
xor
je
shl
inc
into
vpmaddwd
retf
jne
add
mov
mov
test
dec
inc
inc
inc
pop
pop
xchg
inc
lods
push
lods
sahf
and
mov
loop
xchg
pop
mov
movs
not
and
mov
inc
lock
mov
ror
sbb
and
lods
scas
add
sbb
(bad)
in
outs
outs
dec
pop
cmps
ds
xchg
xchg
mov
sub
sar
and
and
pop
das
(bad)
mov
fldcw
ror
dec
mov
out
(bad)
(bad)
lods
pop
jecxz
loopne
xchg
mul
mov
lock
adc
push
cmc
lock
repnz
int
call
or
pop
js
lahf
lds
xchg
leave
sahf
jnp
cmp
jmp
sbb
pop
out
(bad)
cld
lahf
(bad)
loopne
loop
mov
and
pop
out
lods
test
push
add
mov
jg
cmp
add
pushf
repz
cmp
test
sub
ins
mov
rcl
test
in
ins
cld
jmp
add
or
and
xlat
sbb
daa
adc
mov
jmp
inc
dec
or
sub
sub
aas
adc
stc
cmp
sub
mov
popf
jbe
xor
cmp
adc
and
mov
movs
pop
(bad)
es
in
inc
xlat
jle
out
movs
jg
cmp
mov
xor
fild
dec
inc
int3
inc
push
(bad)
pop
mov
mov
movs
adc
mov
dec
push
mov
les
js
pusha
call
mov
clc
jmp
sahf
enter
xchg
or
add
sub
jnp
jmp
(bad)
sub
push
movs
imul
nop
inc
imul
jmp
out
icebp
test
fidiv
in
dec
cmps
test
in
inc
sub
sub
iret
test
xchg
cmc
les
ret
ror
and
or
mov
jne
sub
shr
cmp
ret
xor
rcr
mov
jecxz
sub
pop
hlt
out
aaa
inc
mov
xor
inc
cmp
jbe
lahf
(bad)
jne
cmp
wrmsr
pandn
mov
jno
mov
jp
in
jmp
stos
pop
pop
mov
inc
xchg
or
cmps
jnp
push
out
loop
cmp
std
sub
add
cmp
popa
cmps
sub
mov
or
push
es
sar
les
stos
leave
popf
xor
rol
push
or
jns
loope
jge
or
stos
arpl
dec
mov
imul
movs
or
mov
lods
dec
pop
push
mov
test
push
add
xor
int
cmp
ret
aam
mov
mov
stos
mov
loopne
int
pop
pop
adc
jl
push
fmulp
shr
fidiv
mov
add
leave
aaa
mov
cmp
xor
mov
sbb
dec
push
repnz
rcl
add
mov
mov
popa
dec
(bad)
ficomp
gs
cmp
mov
fcomi
dec
mov
clc
mov
popf
mov
mov
cmp
xchg
push
adc
fild
es
sbb
arpl
movs
enter
sub
push
std
add
(bad)
pop
movs
dec
adc
dec
inc
jbe
xor
or
dec
push
mov
std
sbb
cld
jle
fld
into
push
jmp
cmp
fst
pop
adc
jmp
dec
and
or
and
xchg
jbe
dec
dec
mov
cmp
or
push
shl
push
mov
mov
jp
mov
sbb
cmps
stc
fs
call
push
(bad)
movs
jb
adc
shl
(bad)
loopne
and
rcr
xor
ror
into
pop
pusha
gs
mov
adc
call
imul
add
int
lods
aaa
mov
fimul
adc
aam
jl
lods
jp
adc
and
sub
cwde
push
pop
scas
dec
(bad)
into
sbb
out
pop
or
out
add
cwde
fbstp
mov
fsub
mov
test
into
mov
enter
inc
ins
xor
sahf
lea
inc
sub
mov
pushaw
push
sbb
inc
mov
ss
bndldx
adc
push
outs
adc
xor
icebp
js
sub
arpl
and
int3
arpl
movs
sub
je
les
sub
dec
inc
popa
scas
jecxz
cmp
hlt
enter
call
sub
inc
and
or
aas
jge
inc
xor
adc
sbb
out
jg
dec
xor
aas
mov
ja
nop
std
(bad)
cmps
inc
ret
mov
les
cmp
push
inc
ja
push
sbb
jmp
xchg
pop
test
rol
dec
sub
mov
mov
fadd
je
sub
jle
lahf
jge
xchg
jbe
mov
mov
jo
lea
dec
mov
test
add
adc
aad
xor
dec
fidivr
sub
or
sbb
in
pop
pop
sbb
pop
ss
retf
das
hlt
es
xchg
sbb
push
scas
stc
bnd
cmp
loopne
jp
cs
xor
dec
adc
fsubr
cmp
mov
shl
push
out
jmp
xlat
sbb
and
pop
je
pop
test
stos
or
mov
or
and
push
ret
fcomp
je
(bad)
sar
mov
pop
aas
sar
repnz
push
inc
jp
pop
mov
test
pushf
push
push
mov
and
jnp
mov
mov
jae
in
pop
aas
mov
rol
arpl
(bad)
mov
and
add
sbb
rcl
cmp
cmp
fs
cmp
mov
icebp
scas
mov
cmp
sbb
loopne
popf
dec
dec
ret
pop
shl
cmc
cs
xor
mov
mov
adc
push
neg
adc
fild
mov
mov
push
je
dec
leave
cmc
enter
fs
retf
mov
push
xchg
xchg
cs
rol
jl
inc
push
jmp
pshufw
stos
idiv
push
test
fbld
stos
xchg
ins
leave
fwait
dec
std
hlt
inc
adc
dec
mov
adc
test
and
push
adc
adc
cdq
dec
icebp
xor
mov
cmps
sub
adc
stos
sub
movs
xlat
cmp
scas
adc
sub
mov
xchg
jne
in
sub
sti
popa
bound
pop
inc
lds
push
inc
es
mov
push
movs
add
hlt
xchg
cmp
pushf
ja
mov
ds
jg
into
mov
jmp
dec
ja
mov
dec
dec
and
dec
dec
jp
loope
xor
mov
lds
mov
jb
add
fisttp
popf
mov
out
ins
adc
aaa
jb
hlt
(bad)
adc
push
inc
push
adc
mov
jp
xchg
test
or
sbb
push
or
and
je
or
jp
aaa
sbb
mov
cmps
jge
lods
movs
(bad)
nop
(bad)
test
ins
je
les
pop
sbb
jg
or
mov
push
jne
cmp
pop
lods
mov
aad
mov
shl
mov
xor
adc
sub
rcl
lods
adc
xor
mov
push
push
hlt
aaa
shr
mov
adc
test
imul
xor
pop
pop
cmps
shr
xor
sahf
cli
dec
mov
sub
stos
(bad)
xchg
in
movs
pop
rcr
push
jbe
imul
popf
or
fcomip
add
nop
sbb
in
push
xor
aam
sbb
xlat
mov
xchg
xor
sbb
mov
xor
shl
dec
mov
js
add
xor
aaa
jg
fbstp
jmp
sub
jb
push
xlat
sub
icebp
or
cdq
ds
mov
inc
push
int3
mov
dec
stos
push
dec
pushf
int3
add
fldenv
call
and
jmp
sbb
test
es
out
add
mov
mov
loop
mov
pushf
sub
mov
add
pop
mov
dec
and
dec
out
std
jne
imul
sar
aaa
pop
test
mov
jne
dec
mov
clc
and
test
adc
jae
test
ret
fwait
out
sbb
call
add
add
daa
mov
addr16
mov
daa
push
jmp
push
mov
in
imul
(bad)
xor
into
inc
bound
stos
push
dec
mov
and
push
mov
outs
dec
add
enter
mov
xchg
ins
in
cld
call
add
iret
or
scas
lahf
test
push
mov
cmp
mov
xchg
cmp
mov
mov
call
bound
cmp
imul
or
xor
xchg
retf
sub
mov
out
xchg
dec
inc
pop
adc
and
mov
(bad)
dec
repnz
imul
jle
mov
fnstsw
pop
mov
pop
mov
aam
in
pop
std
daa
and
or
in
or
mov
sub
stc
dec
iret
es
push
xchg
gs
adc
in
pop
sub
adc
and
dec
inc
push
pusha
lock
(bad)
stos
ins
mov
jmp
jo
jl
push
pusha
enter
sub
ss
and
mov
(bad)
lahf
mov
outs
mov
mov
repnz
sbb
icebp
jp
out
mov
fadd
sbb
jns
and
cli
push
sbb
fld
pop
mov
int
mov
nop
inc
popf
mov
push
test
in
xchg
dec
mov
shl
cld
jo
push
and
sub
(bad)
mov
es
ins
(bad)
lods
into
(bad)
(bad)
inc
pop
rcr
scas
sar
or
push
sbb
lahf
dec
(bad)
(bad)
pop
stos
mov
sub
mov
or
add
iret
fwait
jecxz
mov
imul
es
and
lods
push
mov
(bad)
cdq
sub
dec
xor
xchg
aam
and
mov
dec
(bad)
jne
movs
add
jo
mov
inc
jp
rcr
pop
hlt
pop
jg
out
stos
in
outs
call
adc
fisub
loop
ror
jecxz
iret
icebp
jmp
ror
movs
gs
movs
jno
ret
mov
pop
and
rcr
xor
add
or
cmp
(bad)
lods
inc
pop
aad
into
adc
xchg
push
sbb
add
mov
call
xor
mov
out
mov
mov
sub
and
xor
sub
icebp
(bad)
push
in
(bad)
mov
adc
push
popf
inc
lock
xor
dec
clc
dec
mov
int3
pop
jno
push
(bad)
adc
sbb
mov
clc
out
adc
mov
mov
push
mov
push
jb
sub
mov
test
aam
arpl
cmp
js
adc
or
outs
aaa
icebp
bound
xor
cdq
pop
mov
(bad)
and
ret
add
sbb
jnp
inc
icebp
add
mov
cwde
shl
lahf
add
add
ds
inc
out
leave
inc
jb
les
xchg
sub
inc
ret
bound
push
jns
and
daa
xchg
adc
mov
andnps
xlat
pop
adc
nop
jmp
xchg
mov
xchg
fs
lods
xor
in
and
sbb
pop
mov
and
lock
(bad)
pop
int
pop
mov
icebp
fimul
mov
dec
cmc
pop
or
cmp
cmc
xlat
hlt
add
in
(bad)
mov
nop
adc
mov
hlt
and
push
f2xm1
push
xchg
inc
xor
pop
scas
ret
cmps
call
into
daa
leave
lods
stos
push
inc
pop
add
ins
dec
int
sub
lea
jge
push
push
or
inc
mov
and
ret
in
sub
mov
cmc
jmp
and
call
mov
(bad)
mov
push
pop
mov
xor
and
and
rcr
fldcw
ja
adc
xchg
in
mov
xchg
out
mov
jp
loop
iret
in
lds
iret
and
loope
mov
retf
stos
mov
scas
(bad)
xor
mov
mov
jmp
sbb
add
jo
push
push
adc
inc
pusha
and
inc
cmp
enter
mov
xor
ss
dec
push
sbb
xchg
ds
mov
sub
inc
das
xchg
popf
push
xchg
push
and
cmp
dec
mov
cmp
lods
inc
movs
cmp
or
inc
push
test
aad
aad
dec
std
jne
gs
mov
repnz
mov
pushf
ins
dec
imul
movs
mov
test
jne
dec
push
nop/reserved
out
fadd
jg
jne
test
shr
in
mov
out
xor
or
xchg
adc
push
ret
mov
jne
data16
or
es
cmp
loop
mov
fisttp
mov
and
xbegin
add
cmc
lahf
ret
loope
std
dec
push
icebp
mov
jmp
bound
push
dec
je
mov
adc
adc
imul
outs
cmp
cdq
es
and
ja
cs
pop
inc
push
in
mov
lods
inc
jg
push
xchg
call
push
int3
retf
xor
int
sbb
pop
fst
fistp
cmps
ins
out
xchg
pop
rcl
inc
adc
gs
and
ds
fld
push
loopne
and
mov
fnsave
daa
cmp
cmp
lahf
ins
repnz
cmps
fst
fistp
jnp
xchg
xchg
jl
movs
jo
push
inc
pop
arpl
(bad)
fistp
or
cmps
cld
push
dec
mov
cs
add
cs
mov
repz
mov
jg
xor
adc
call
or
dec
stc
fisttp
(bad)
push
mov
jp
das
popa
in
pop
fmul
pop
mov
int3
lahf
mov
rcl
dec
imul
pop
sbb
movs
in
shld
call
xchg
jmp
stc
cmp
mov
sti
or
jmp
add
xor
sub
fldenv
stos
add
lahf
in
xlat
mov
xor
inc
scas
out
xchg
sbb
adc
mov
ins
mov
stos
inc
cmp
es
cmp
dec
inc
nop
test
aad
cmps
ins
sub
dec
iret
rcr
or
mov
push
jge
adc
call
loope
xor
outs
xchg
ins
mov
pop
ja
pop
mov
loopne
ds
xchg
mov
mov
stos
out
cmps
enter
dec
out
push
daa
leave
ror
sbb
xor
mov
out
js
add
add
mov
std
bnd
adc
add
adc
pusha
ja
pusha
push
and
xchg
push
add
xlat
outs
test
loopne
cld
add
push
movs
dec
fsub
dec
lods
rcl
popf
cdq
cmps
mov
jmp
cmc
js
lods
imul
pop
or
pop
dec
fs
into
pop
(bad)
lds
jp
or
and
mov
aad
sti
aad
int
jns
scas
add
fisub
cmp
mov
cmp
pop
outs
push
arpl
fild
fstp
outs
repnz
test
push
rol
sbb
into
fstp
mov
jns
fstp
add
pop
test
(bad)
aas
pop
and
loop
mov
lea
les
dec
lods
repz
in
sti
shl
call
out
xchg
mov
push
dec
sbb
or
loopne
pop
scas
adc
fcomp
aas
ins
pop
sbb
scas
sbb
test
daa
ss
faddp
js
fmul
mov
cmps
add
xor
pusha
mov
pop
clc
cmp
aam
lea
xchg
cmp
(bad)
xchg
icebp
and
adc
mov
mov
lods
mov
test
xchg
cmp
add
aaa
popa
(bad)
xchg
add
(bad)
fidivr
jecxz
cld
enter
mov
dec
mov
fadd
dec
sbb
adc
jns
cs
retf
pop
pop
and
xchg
push
div
cmp
and
loop
mov
(bad)
sub
addr16
dec
push
ins
push
push
rol
mov
outs
imul
adc
pop
cld
sbb
fcomi
dec
sahf
jle
scas
cmp
cwde
sub
push
shl
or
adc
ins
retf
cli
pop
jmp
xor
retf
dec
fadd
jmp
cmp
dec
iret
loopne
sbb
or
movs
xchg
idiv
inc
push
xchg
out
xchg
inc
aaa
xor
adc
xchg
cmp
adc
ret
(bad)
test
mov
ret
neg
xor
mov
popf
adc
xchg
mov
mov
jl
sub
(bad)
sbb
and
jnp
leave
enter
mov
daa
jo
jnp
mov
or
xor
or
mov
cli
pop
fadd
cmp
dec
fcmovu
fwait
movs
pushf
cmp
mov
sbb
inc
into
mov
jnp
mov
cld
into
mov
mov
pusha
mov
aad
or
call
push
and
mov
cmps
mov
mov
ss
mov
mov
je
lea
es
fld
scas
add
imul
xlat
add
iret
imul
repnz
inc
mov
pushf
lock
sbb
(bad)
cld
pushf
dec
xor
inc
pop
popf
rcl
loop
out
mov
cmp
(bad)
loope
(bad)
adc
ret
(bad)
pop
pop
es
cs
mov
in
sbb
add
movs
mov
gs
ficom
aad
aad
push
out
adc
mov
cmp
jl
sub
lods
ins
mov
sub
call
xchg
mov
shl
mov
fs
cmp
pop
pusha
mov
inc
cmp
mov
jmp
sbb
xchg
cmp
xchg
scas
jb
mov
jne
adc
outs
mov
xchg
sti
pop
cmc
sbb
shl
cs
rcr
pop
add
daa
xchg
hlt
(bad)
das
jns
inc
aas
mov
sbb
jge
or
jecxz
ins
dec
adc
or
cmp
push
sti
mov
or
mov
push
call
cld
pop
cld
push
adc
icebp
xchg
xchg
mov
or
or
inc
sub
mov
(bad)
cli
jne
mov
dec
sub
or
mov
inc
push
(bad)
or
adc
sar
or
scas
rcr
inc
jl
adc
lock
out
pusha
jno
loope
ds
sar
jno
jg
adc
mov
movs
aas
call
into
xchg
add
lds
add
es
or
and
js
inc
movs
(bad)
jno
aam
sub
jnp
or
adc
xchg
retf
jae
mov
mov
inc
pop
imul
and
mov
mov
sub
xchg
pop
mov
xor
push
loope
xchg
inc
jb
xchg
call
hlt
xchg
adc
retf
lahf
cwde
add
out
fbstp
std
faddp
cmp
push
mov
inc
and
(bad)
out
retf
rol
lods
add
mov
rcr
and
mov
pop
shl
and
pop
test
popf
retf
neg
jp
mov
push
sub
xor
dec
push
mov
mov
push
jmp
push
outs
mov
scas
adc
jmp
fiadd
add
sub
mov
push
pop
popf
fwait
inc
mov
add
mov
add
imul
sahf
push
scas
mov
dec
xchg
ins
xchg
repz
pop
add
pop
jmp
inc
jae
adc
sbb
add
adc
int3
(bad)
movs
outs
loop
into
mov
pop
pusha
lock
sub
int3
mov
aad
in
scas
ficomp
lods
fwait
xchg
cmp
mov
pop
sti
mov
adc
retf
mov
xchg
jmp
pushf
cdq
cmp
pop
lea
imul
jb
les
add
mov
aam
cmps
xlat
out
xchg
adc
mov
fidivr
adc
mov
(bad)
xchg
icebp
les
mov
xor
hlt
jg
movs
(bad)
pusha
imul
and
jnp
inc
inc
jne
sbb
xchg
int3
adc
xchg
mov
pop
in
lods
pop
sar
push
push
shl
mov
push
es
dec
mov
retf
stos
mov
or
xor
cld
(bad)
sbb
cs
adc
in
and
cmp
sub
lds
test
sahf
in
push
jno
sub
and
jb
aam
jb
dec
jl
inc
xor
jns
in
xchg
arpl
sub
neg
aas
jno
jp
fwait
pop
cmp
add
xchg
ins
aad
jmp
sub
and
shr
cmp
sar
mov
mov
add
adc
dec
cmp
clc
adc
cmps
xchg
(bad)
pop
xchg
mov
shr
push
mov
cwde
cmps
outs
pop
or
ffreep
and
test
pop
pop
mov
call
or
adc
push
xchg
add
jae
adc
stc
jecxz
cmps
mov
aad
cs
mov
and
clc
jge
push
mov
inc
sti
popf
imul
retf
jmp
jle
ja
pop
sti
test
hlt
nop
stos
add
jbe
data16
sub
(bad)
jne
jge
xor
jno
js
add
add
add
mov
leave
mov
cmp
sbb
repnz
cmp
sbb
fld
es
(bad)
xlat
sbb
jp
cli
loop
(bad)
movs
xor
or
add
push
inc
outs
mov
call
xlat
push
xchg
inc
sub
sub
pop
push
mov
clc
imul
mov
lods
xchg
jp
mov
outs
(bad)
sub
rcr
push
lds
loopne
scas
inc
outs
jmp
mov
adc
pop
mov
pop
mov
loopne
adc
mov
push
cli
or
sar
mov
test
scas
jo
fadd
push
jb
jnp
(bad)
mov
push
jo
jns
ins
xchg
add
ins
repnz
dec
popf
lea
out
mov
adc
test
sbb
sub
fs
fwait
xchg
rcr
dec
cmp
xor
sar
out
pop
dec
xchg
enter
inc
loope
pop
mov
fs
int
arpl
push
shl
cmp
imul
ds
iret
in
ja
out
out
xor
loope
shl
add
inc
xchg
dec
outs
inc
fistp
mov
test
xor
outs
dec
sub
cmp
call
dec
pop
movs
fist
mov
lds
outs
mov
mov
jnp
xchg
out
scas
and
cwde
xchg
test
xor
gs
(bad)
xchg
inc
inc
stc
mov
aam
mov
hlt
hlt
into
dec
cdq
in
pop
ret
mov
pop
mov
movs
ja
(bad)
int3
fdivr
xor
inc
jle
fs
addr16
mov
ins
and
xor
sub
xor
iret
gs
mov
jbe
inc
and
jb
adc
cmp
bound
mov
cwde
mov
jns
adc
(bad)
and
xor
inc
xor
push
sub
enter
adc
icebp
addr16
std
aad
retf
xchg
rol
imul
sbb
sar
mov
pop
test
ror
into
cmc
scas
or
xchg
int3
call
mov
adc
cs
mov
or
sub
je
adc
inc
call
call
cmps
call
adc
inc
adc
or
dec
xor
fcomp
mov
clc
mov
push
jl
cmp
sbb
shr
cmp
mov
sub
sahf
mov
mov
lods
xchg
sub
sub
in
adc
jmp
sub
retf
jl
mov
cli
shl
dec
jecxz
sbb
xchg
and
mov
inc
and
cmp
mov
mov
xchg
jmp
loopne
and
sbb
call
out
inc
ret
cli
inc
pop
adc
lahf
nop
cmp
out
ds
imul
mov
fisttp
sbb
fs
sub
and
pop
pop
jno
cld
pop
jg
or
push
pop
jg
movs
scas
add
sub
xchg
xor
stos
push
dec
js
xlat
inc
cmc
out
push
fwait
pop
lods
push
or
test
(bad)
mov
or
(bad)
cmp
neg
pusha
add
xchg
add
pop
xor
outs
je
inc
dec
(bad)
pop
dec
pop
arpl
xchg
mov
sub
jmp
cdq
cmc
mul
stos
jge
pop
sub
xchg
bound
or
xchg
(bad)
call
(bad)
sti
(bad)
pusha
les
sub
jbe
jae
lods
fldenv
(bad)
fstp
repnz
add
cmp
loope
mov
push
test
lds
cli
jecxz
mov
shl
jnp
and
mov
adc
cwde
cld
test
call
dec
lock
mov
(bad)
mov
sbb
push
scas
sub
jmp
sar
fnstsw
sbb
int
aad
jg
idiv
fist
mov
lock
xchg
aad
(bad)
shl
xchg
cmc
mov
inc
int3
fisub
shl
jecxz
imul
mov
in
adc
mov
sub
les
aad
xor
ficom
push
xchg
rcr
shl
jae
cmps
cs
pop
inc
dec
call
pop
hlt
mov
or
popa
sbb
imul
mov
out
rcr
ins
lds
in
test
push
test
call
add
imul
push
sbb
loopne
mov
or
adc
and
loopne
push
xor
add
jo
test
into
fidiv
and
imul
mov
pop
sub
clc
enter
mov
jmp
mov
or
mov
mov
fmul
movs
daa
cli
lods
adc
cmps
push
push
push
fwait
jle
inc
ds
add
add
mov
xchg
push
ins
and
fldenv
dec
stos
out
push
leave
mov
xchg
retf
mov
(bad)
mov
lods
aas
sub
or
movs
loope
dec
std
cli
and
pop
jo
mov
icebp
mov
data16
jecxz
lahf
mov
jmp
sub
and
sub
and
dec
pushf
movs
jge
movs
fdiv
lock
aad
xor
adc
dec
es
jno
test
std
sti
movs
jb
dec
push
fimul
fwait
(bad)
aad
and
sti
stos
int3
iret
jmp
icebp
pop
stos
xchg
pop
wbinvd
jae
pop
(bad)
add
lds
push
lock
xchg
jp
and
fs
fisttp
les
adc
or
ins
cwde
std
rcr
repz
and
call
xchg
stos
mov
adc
xor
push
mov
data16
ret
cmp
pop
(bad)
cmps
jmp
(bad)
retf
pop
arpl
fdivr
cmc
jle
and
fwait
aam
int
dec
pop
fwait
fs
dec
xor
repnz
xchg
cwde
or
pop
xchg
ret
rcr
mov
or
adc
xor
pop
mov
bound
shl
aaa
lock
sub
inc
mov
cmp
stos
shl
sub
mov
scas
inc
cmp
imul
mov
pop
jmp
adc
mov
dec
jl
mov
mov
add
js
pop
mov
cdq
mov
test
fadd
div
pusha
jge
push
mov
jl
mov
mov
loopne
leave
ja
out
mov
dec
cli
retf
push
mov
stc
adc
mov
xchg
xchg
sub
sub
fisttp
adc
mov
inc
cmp
cli
les
test
jbe
sub
int3
pusha
inc
cwde
add
test
sub
push
adc
jbe
push
pusha
dec
in
in
inc
test
pop
arpl
out
into
(bad)
fst
cmp
push
shl
bound
mov
mov
lods
std
fadd
pop
cmova
add
jmp
and
mov
add
jbe
lea
and
inc
sub
jle
pusha
std
fwait
stc
mov
cli
adc
mov
pop
mov
sbb
jo
dec
xor
cli
jnp
jl
lock
jno
xchg
mov
push
xchg
dec
or
push
addr16
pop
xor
and
sbb
xcrypt-ecb
push
mov
clc
rcr
lahf
mul
es
stos
popa
call
cmps
xchg
sub
shl
test
aad
sub
dec
sub
or
outs
rcr
mov
aam
test
in
mov
shl
ja
mov
xchg
fstp
pop
mov
xchg
cmp
and
and
mov
sub
mov
inc
ins
push
adc
mov
arpl
jecxz
ins
dec
test
gs
popa
adc
mov
push
movs
ret
shl
mov
inc
cmp
cwde
mov
addr16
pop
mov
mov
ret
mov
mov
js
push
pusha
mov
aad
mov
cmps
add
(bad)
adc
lods
sub
test
js
dec
xor
mov
sub
sbb
jmp
push
cmp
xor
in
jecxz
jno
or
fadd
xchg
ficomp
ja
call
fwait
jmp
leave
sub
and
stc
add
mov
addr16
(bad)
sahf
rol
fs
mov
pop
pop
pop
pop
stos
xor
sub
cmc
mov
jmp
cmp
sub
ja
jne
ins
and
sbb
popf
sub
jnp
fstp
lahf
inc
gs
scas
outs
cmp
cs
or
inc
stos
add
fwait
mov
aad
dec
ins
xor
aas
xor
and
out
cmp
cli
push
jne
movs
add
or
or
pop
fisub
arpl
mov
inc
cmps
push
js
and
ds
add
xchg
popa
push
in
iret
adc
mov
jle
cmps
fld
xchg
scas
iret
push
jmp
daa
jae
test
and
test
or
lock
adc
jb
pop
cmp
loopne
adc
dec
or
adc
cs
push
sbb
jl
addr16
stc
dec
ret
retf
aaa
icebp
and
cmp
xor
aam
mov
add
or
mov
cmps
mov
jecxz
sub
sbb
cmp
pop
into
jecxz
gs
push
test
add
pop
add
add
and
ret
test
ret
scas
and
sahf
dec
pop
fcom
icebp
push
cmp
hlt
int
xor
sub
adc
xor
mov
sub
call
aam
push
fdiv
shr
sub
sub
outs
inc
sbb
ins
push
les
pop
stos
jg
fs
stos
in
dec
lahf
daa
pop
mov
mov
xor
test
fisub
iret
je
pusha
imul
mov
cmp
aas
and
xchg
sbb
jmp
add
into
adc
repz
clc
js
add
or
scas
call
ror
xor
dec
adc
les
inc
sub
adc
and
std
imul
xor
pop
clc
and
jns
(bad)
imul
cmp
mov
and
sub
add
cs
or
xchg
ins
aas
cmp
test
xchg
sub
mov
adc
mov
adc
cmps
add
xchg
das
cmc
out
and
clc
(bad)
dec
xchg
sbb
and
xchg
inc
xor
lahf
xchg
jmp
outs
fs
fisttp
std
mov
(bad)
or
fbstp
loopne
push
jp
mov
jmp
sbb
fsubr
inc
pusha
cmp
fisub
call
cwde
ins
inc
sbb
xchg
xchg
sub
push
pushf
cmp
xchg
push
test
adc
shr
and
(bad)
jb
xchg
inc
jno
fist
aaa
mov
retf
ins
sbb
xchg
(bad)
sub
inc
dec
push
out
or
inc
call
pop
xlat
push
aad
cld
lock
mov
and
pop
push
dec
adc
loop
mov
ret
or
mov
and
call
push
mov
push
cmp
gs
test
sbb
push
enter
fnstenv
pusha
std
retf
stos
dec
jae
ss
mov
add
cmp
fbstp
pop
addr16
mov
sub
daa
push
in
inc
clc
jbe
mov
fiadd
mov
inc
stos
fild
into
in
pop
xor
test
(bad)
in
loop
xor
adc
push
mov
(bad)
mov
dec
inc
fiadd
cmp
in
adc
add
out
push
push
cmps
outs
or
push
or
push
imul
mov
dec
xor
fisttp
xor
add
sub
sbb
or
push
or
push
inc
aaa
rcr
mov
xlat
out
iret
ret
cmp
adc
loop
fstp
jbe
xchg
arpl
sub
cmp
in
jge
mov
xchg
loope
push
or
ss
ins
cli
out
xor
xchg
xor
fistp
xor
inc
rol
(bad)
xor
mov
mov
pop
pop
pusha
iret
dec
movs
push
xor
add
jb
and
lahf
add
jge
addr16
int
add
adc
sti
mov
push
jns
stc
dec
push
mov
ss
mov
push
dec
jge
jecxz
cmc
int3
mov
sar
push
mov
xor
mov
jmp
jns
in
repnz
dec
adc
ins
xchg
inc
fsub
jmp
push
pop
out
pusha
js
les
sub
and
les
adc
and
cmp
mov
sti
inc
arpl
sahf
add
out
ins
ins
ja
jmp
in
fcmovne
aas
adc
xchg
sub
repz
pusha
mov
cmp
ror
test
sub
neg
loopne
call
cmovne
and
xor
rcr
jecxz
and
inc
inc
(bad)
jns
pop
in
ins
pushf
fcmovb
mov
add
jmp
xchg
inc
dec
mov
or
fwait
js
addr16
sbb
mov
(bad)
push
mov
jle
xchg
inc
fidiv
add
cmp
out
loopne
and
dec
or
rol
mov
add
(bad)
(bad)
cmp
add
mov
add
sub
(bad)
xor
xor
pop
dec
imul
and
in
xor
loop
loope
jp
pop
xchg
inc
cmp
dec
xchg
mov
movntq
out
mov
jo
arpl
or
jge
dec
arpl
nop
ins
jmp
sub
and
xchg
mov
outs
enter
fnstsw
repnz
fstp
jmp
push
sub
and
adc
fidivr
push
hlt
push
sar
addr16
mov
or
out
test
int
xchg
out
movs
push
aam
stos
sub
push
pushf
mov
mov
ror
and
cmp
test
sbb
cmp
cmp
sbb
hlt
(bad)
stos
inc
fidivr
cmp
mov
xor
pusha
pusha
fild
jecxz
mov
movs
xchg
cmp
sub
or
dec
xor
xor
ja
push
out
pop
cld
aaa
in
jb
stc
mov
push
pushf
ins
inc
jle
and
pop
sar
jl
movs
pop
or
inc
retf
shl
shr
mov
xchg
xchg
movs
iret
pushf
adc
mov
int3
and
xchg
pop
pop
sub
mov
and
jno
int
pop
(bad)
add
lods
add
adc
sbb
jl
push
pop
call
(bad)
and
sti
js
fcom
mov
mov
and
inc
cwde
das
ss
push
(bad)
dec
fdiv
pushf
and
jmp
push
lahf
stc
pop
adc
lods
sub
cmp
ds
jl
stos
fwait
call
enter
(bad)
cmp
inc
ret
pop
stos
jne
or
push
lock
pop
repz
in
xor
leave
int3
movs
imul
sub
xlat
jge
ficomp
xchg
add
push
inc
addr16
mov
xchg
push
scas
cli
fisttp
(bad)
(bad)
mov
inc
cmp
and
add
jle
cmps
aad
dec
push
repnz
inc
stos
clc
les
lea
inc
push
dec
cmp
out
push
push
loope
outs
lods
test
in
adc
call
es
ret
ret
push
mov
ja
mov
shr
popf
scas
clc
retf
push
jl
dec
(bad)
imul
rol
ja
push
sbb
shl
imul
(bad)
iret
div
sub
test
lods
adc
mov
mov
mov
sub
inc
(bad)
jns
pop
mov
les
stos
or
add
jbe
neg
mov
dec
outs
mov
mov
cmp
shr
out
sub
or
xor
pop
pop
cmc
(bad)
push
add
pop
call
pop
test
dec
sub
pop
rcl
aas
sub
(bad)
shl
adc
retf
shr
adc
in
iret
mov
inc
fcomp
adc
dec
sub
out
jne
adc
mov
loope
aad
mov
out
(bad)
mov
push
mov
pop
push
sbb
or
ja
cwde
popf
mov
aad
pop
daa
cmps
pop
sbb
push
popa
mov
mov
mov
dec
xor
std
mov
push
clc
mov
mov
mov
or
xor
leave
mov
xor
in
and
(bad)
sar
pop
pushf
pop
cmp
movs
push
pop
bound
pop
shl
mov
push
mov
push
xor
dec
mov
and
ds
mov
stos
adc
sbb
paddusw
addr16
lock
push
jns
xchg
mov
lea
les
sub
dec
sub
sti
ret
fdivr
adc
sub
sbb
fadd
adc
xchg
retf
pop
push
stos
scas
les
out
dec
add
bound
and
daa
into
sub
inc
sub
mov
stc
sbb
lea
push
sub
sub
jno
daa
sbb
stos
jns
jns
and
jg
(bad)
aaa
and
and
and
pop
ins
fisttp
lds
das
adc
or
fdiv
cld
lods
or
add
or
fst
cld
pop
or
sbb
pop
mov
dec
push
xchg
loope
(bad)
out
cmp
dec
pusha
xchg
ret
cmp
jo
je
push
pop
lahf
call
icebp
out
imul
add
mov
sub
or
add
mov
push
pop
popf
out
fsub
test
cwde
or
fldcw
fucomi
push
mov
std
mov
jecxz
push
jecxz
retf
jbe
jmp
mov
inc
imul
dec
add
push
cmp
clc
aam
dec
inc
dec
and
cmp
pushf
dec
out
mov
repz
jmp
cmp
add
data16
mov
in
xchg
xchg
pop
sbb
jle
out
sbb
bound
int3
lahf
sbb
and
dec
nop
mov
pop
shr
add
shr
(bad)
jno
popf
(bad)
xchg
cmp
fadd
outs
add
retf
sbb
jg
nop
into
xor
cmp
(bad)
idiv
sbb
aam
(bad)
test
imul
aaa
(bad)
fistp
inc
je
fld
mul
pop
rol
nop
loopne
pop
xchg
jbe
shr
or
sub
mov
jle
(bad)
mov
sbb
adc
popa
loope
ins
jge
jae
mov
push
scas
popa
hlt
pop
out
or
pop
mov
arpl
cmp
dec
es
dec
cld
or
jg
pop
addr16
test
xchg
ins
mov
cmp
aaa
lahf
test
mov
enter
cld
or
jb
xchg
ss
movs
cli
adc
ins
cmp
push
out
mov
sbb
fcomp
nop
or
inc
retf
cs
push
fild
out
xchg
lea
ins
dec
jmp
loop
jmp
retf
popf
xor
inc
dec
mov
inc
int3
jmp
std
inc
lods
inc
pop
sub
xor
adc
fild
inc
mov
rcl
jle
pop
sbb
xchg
jecxz
jecxz
cmp
xchg
and
mov
dec
in
sahf
dec
test
cmps
add
mov
sbb
dec
inc
out
ja
aaa
pop
in
cmp
sbb
xor
cmp
icebp
pop
(bad)
xor
or
scas
mov
jp
add
mov
fstp
arpl
mov
mov
repz
(bad)
ror
call
(bad)
jge
movs
add
mov
push
sbb
add
adc
in
mov
add
test
mov
outs
mov
inc
test
cmp
test
ror
sbb
ret
mov
movs
push
movs
sbb
pushf
iret
bswap
inc
and
add
fist
popa
dec
sub
(bad)
pop
in
fbld
push
inc
xchg
nop
inc
fs
scas
lds
pop
pop
jmp
ror
push
sbb
pop
sub
leave
ss
and
xchg
(bad)
gs
jl
test
sbb
imul
inc
push
scas
(bad)
pop
push
dec
lds
ss
ret
leave
mov
scas
mov
imul
imul
in
mov
fcomp
jae
loopne
xchg
ret
test
xchg
add
(bad)
pop
inc
xor
xor
fnsave
retf
mov
inc
cli
dec
shl
aas
retf
dec
add
popf
fsub
cmp
sub
lods
dec
xchg
scas
xor
cmps
loope
xlat
push
pop
pop
pop
push
hlt
lods
mov
inc
popf
push
pop
pop
pushf
pop
sub
and
mov
ds
sbb
cdq
mov
bound
movs
ins
fs
test
retf
xor
js
jns
xor
movs
sub
or
push
push
test
daa
in
(bad)
std
stos
inc
xor
enter
cmp
xchg
cmc
xchg
sub
pop
nop
xor
sbb
jns
pop
jl
cmp
jns
and
das
lahf
sbb
jo
push
jne
or
pop
pop
cmc
pop
jmp
pop
sub
and
cmc
mov
xor
pop
(bad)
rep
dec
push
mov
inc
xlat
pop
mov
(bad)
jecxz
fisttp
test
xor
lods
push
movs
inc
and
popa
movs
pop
sbb
mov
add
jno
push
push
rcl
add
aad
push
jnp
lock
push
xor
pushf
int3
repz
xchg
stos
in
shr
mov
xchg
psubusb
out
push
lea
popa
jg
xor
(bad)
mov
(bad)
cld
enter
push
imul
xor
jp
cmp
mov
jmp
loope
mov
or
fcom
push
nop
cmp
jmp
xlat
leave
mul
mov
xor
or
xlat
movs
in
(bad)
cmp
add
or
scas
dec
jmp
mov
sub
jp
and
or
inc
test
into
xchg
ss
bound
sbb
js
xchg
rcl
adc
repz
inc
popa
int3
mov
or
les
data16
push
icebp
pop
adc
pop
xlat
xor
cmp
fiadd
mov
xchg
cli
push
ffreep
add
jmp
hlt
mov
mov
mov
sbb
mov
cmpxchg
test
inc
shl
sar
call
rcpps
adc
mov
jne
xor
nop
call
ds
mov
mov
adc
mov
daa
push
xchg
ds
ds
pushf
adc
js
sti
adc
aaa
pop
mov
sub
movs
jl
std
mov
push
pop
stos
in
push
adc
dec
push
ja
mov
jl
ss
mov
adc
push
not
mov
shl
or
shr
inc
jns
pushf
jo
fwait
and
lea
jo
cmp
mov
jbe
ror
and
imul
lea
push
clc
sti
xor
jno
and
call
mov
cmp
fcmovnb
sti
mov
ret
movs
data16
rcl
xor
je
jno
add
adc
iret
lea
and
loope
arpl
fsubr
pop
jbe
call
scas
cmps
shl
loop
adc
mov
js
pop
mov
pop
pop
mov
jecxz
cld
push
sbb
cmp
rcr
mov
jmp
dec
inc
outs
xor
or
sub
mov
cmp
popa
cmp
jo
add
dec
mov
lea
sbb
mov
pop
xor
cmc
cmp
rol
popf
scas
mov
outs
(bad)
pop
std
clc
fdiv
out
dec
push
data16
cmp
fcomp
sbb
jmp
lods
inc
push
fimul
mov
sar
std
jno
mov
push
cmp
aas
pop
push
xchg
sbb
mov
mov
sbb
dec
cmp
in
sub
dec
add
lea
xchg
sbb
adc
pop
daa
mov
jns
jns
cld
loope
or
mov
xor
das
push
les
repnz
add
sbb
or
mov
out
sub
or
stc
mov
repnz
fxch
pop
shl
sub
mov
ins
add
mov
jge
ins
es
in
call
or
iret
fisttp
movs
das
and
mov
leave
inc
and
jnp
xchg
mov
mov
fs
xor
pop
cs
push
call
sti
mov
xchg
mov
imul
ret
lock
nop
aas
mov
dec
fdiv
cld
lods
cli
imul
xlat
fst
leave
inc
xor
push
call
dec
rcr
xor
jmp
or
dec
sar
fnstcw
push
inc
(bad)
aaa
lods
dec
adc
or
sbb
xchg
ficomp
mov
jecxz
ror
pop
cmp
jle
pusha
add
push
rcr
xchg
sub
cmp
lock
mov
pop
mov
in
xor
xchg
fs
xchg
sbb
test
ror
mov
test
pushf
rol
std
ja
iret
dec
call
add
call
add
adc
stc
jle
mov
adc
push
scas
add
mov
push
cmp
in
daa
test
cmp
sbb
and
jecxz
jl
xor
xchg
outs
cmp
xlat
jmp
mov
mov
or
cdq
adc
cld
mov
enter
retf
sbb
xor
add
cmp
sbb
cli
fimul
mov
sub
xchg
xor
je
cmp
es
mov
cmps
cmp
sub
mov
jbe
popa
cmp
inc
(bad)
int3
xchg
out
add
mov
outs
sar
xchg
gs
or
(bad)
lods
test
out
daa
add
xchg
cmp
dec
jns
sub
sbb
dec
aas
inc
outs
(bad)
popf
dec
adc
movs
in
mov
lds
hlt
int
cmp
add
popa
adc
test
(bad)
cli
xor
mov
cmps
xchg
cmp
(bad)
or
pusha
mov
xor
xchg
mov
pop
stc
fisttp
push
cmp
xchg
pop
push
imul
adc
add
loopne
xchg
and
retf
xchg
xchg
lock
imul
scas
rcr
pusha
daa
outs
add
das
pop
mov
out
shrd
ja
retf
mov
adc
pop
cmps
mov
cmp
(bad)
repnz
clc
in
cmp
mov
outs
popf
dec
and
fisubr
mov
in
test
xchg
sub
das
dec
pop
pop
cmp
call
aaa
fs
cmp
pop
ins
cld
mov
adc
std
(bad)
adc
mov
inc
sti
jle
outs
dec
cli
adc
jp
aad
mov
test
adc
call
fwait
int3
enter
and
and
lahf
retf
out
sub
sbb
mov
lock
mov
mov
int
mov
das
sub
mov
pop
dec
adc
in
pop
outs
push
aam
repnz
cmp
xchg
pop
out
pusha
dec
pop
xor
retf
or
xchg
jle
iret
cmp
jge
(bad)
mov
imul
addr16
mov
lds
sub
scas
xchg
rcr
mov
hlt
pusha
pop
mov
lods
adc
and
add
(bad)
lock
popa
loop
es
pusha
mov
cmps
inc
imul
fist
mov
dec
push
pop
sub
cld
loopne
ret
mov
ds
jl
pop
es
and
jmp
xchg
int
in
cli
mov
outs
dec
mov
mov
stc
or
pop
ret
sub
dec
test
test
sti
jmp
pop
mov
(bad)
dec
repnz
add
fs
fisub
or
jmp
mov
sub
cmp
sbb
dec
iret
test
adc
dec
jl
mov
mov
sbb
or
aad
ror
lods
fwait
jle
fistp
pop
jp
cmp
push
add
or
sub
mov
test
inc
inc
test
repnz
cld
pop
and
adc
jg
push
ins
stos
(bad)
shl
test
stos
lods
sub
pop
imul
movs
xor
scas
jecxz
sub
gs
add
or
push
inc
js
cmp
ins
or
pushf
add
(bad)
cmp
jno
cli
and
push
imul
(bad)
std
xchg
push
test
shl
mov
lock
or
mov
inc
aam
call
ins
(bad)
add
movs
mov
nop
pop
mov
mov
inc
ror
mov
mov
xor
scas
adc
jmp
cwde
lock
mov
dec
push
fwait
clc
pop
xchg
push
inc
mov
(bad)
imul
cmp
fdiv
ffree
pop
xchg
xor
into
inc
push
sahf
lahf
out
stos
arpl
pop
retf
sbb
stos
pop
sahf
cmp
fs
jnp
inc
and
mov
movs
pop
repz
icebp
pop
inc
in
std
mov
mov
or
xor
call
adc
jp
jns
mov
int3
lahf
and
push
cmps
lods
ds
leave
inc
pop
stc
fs
lods
(bad)
cdq
pop
pop
sar
mov
lock
rcl
cmp
cld
cmc
div
sbb
pop
ins
mov
sti
int
mov
icebp
mov
mov
jbe
xchg
push
test
cli
ss
and
das
cmp
call
pop
xchg
pop
nop
pop
sti
inc
jb
cmp
push
test
movs
ret
lds
add
push
jmp
mov
test
push
pop
stos
ret
push
and
push
pop
dec
xlat
outs
inc
fnsave
arpl
push
popf
and
xchg
(bad)
mov
jno
inc
pop
fistp
or
dec
fldl2t
pushf
daa
repnz
and
sub
xchg
pop
cld
dec
jp
cmp
gs
jmp
lock
add
or
sub
mov
jmp
out
into
scas
idiv
push
and
ins
push
iret
jecxz
xchg
mov
jo
sub
in
jne
neg
mov
test
adc
xchg
out
stc
or
sbb
xor
loop
retw
test
out
pop
adc
mov
aad
cmc
movs
jnp
les
cmp
and
mov
mov
scas
mov
lods
xchg
push
loopne
pop
and
and
out
imul
pop
push
sbb
xor
mov
jmp
arpl
push
aas
scas
lock
repz
pop
clc
xor
into
xor
sub
test
ror
xchg
adc
shr
inc
movs
das
call
cdq
mov
jle
sar
sbb
adc
pushf
ficomp
iret
pushf
xor
adc
xchg
hlt
es
push
jnp
and
out
xor
xor
add
push
adc
jns
into
jae
sub
or
push
mov
xor
mov
test
mov
ror
jg
bound
int
xchg
dec
inc
mov
out
fwait
mov
call
fwait
push
mov
es
sub
xor
xor
arpl
int
dec
jno
enter
add
xor
(bad)
jmp
sbb
imul
gs
xor
iret
enter
mov
mov
xchg
scas
out
shl
inc
cld
push
cld
inc
outs
scas
aas
ins
stos
loopne
dec
inc
or
stc
pop
imul
xor
sub
movs
mov
jbe
cwde
leave
cs
out
and
mov
(bad)
mov
push
(bad)
xor
jecxz
arpl
or
mov
imul
sub
in
dec
aaa
dec
pop
inc
push
cmp
shl
ins
je
dec
mov
inc
call
dec
push
loop
sbb
(bad)
or
test
push
mov
push
push
lock
dec
in
cmp
add
icebp
add
(bad)
adc
fldenv
sbb
and
icebp
in
jbe
cld
fs
jno
stos
sub
push
push
cmp
std
mov
or
lods
stc
jp
repz
test
or
lahf
popa
aad
jg
sbb
jnp
(bad)
and
sbb
and
add
and
jp
rol
sub
adc
inc
adc
xlat
and
or
sub
mov
push
ret
dec
sub
cmp
mov
sub
sub
popf
aam
inc
push
jns
sub
xchg
sbb
xor
out
jmp
fmul
imul
aaa
mov
or
mov
pop
lock
pop
add
jg
call
xor
xor
mov
or
or
mov
mov
scas
out
test
xor
fs
call
add
mov
icebp
pop
mov
cmc
add
mov
test
sbb
cmp
shl
fnsave
mov
or
pop
retf
xchg
scas
inc
mov
rcl
pop
icebp
nop
push
push
mov
pop
les
push
pop
xor
adc
dec
pusha
es
shl
add
xchg
lea
mov
call
mov
dec
inc
out
and
pushf
pop
cli
repnz
daa
clc
xor
inc
sar
sbb
repnz
mov
xor
repz
lock
mov
mov
rol
shl
jns
fst
sbb
shr
fldenv
sti
and
clc
inc
push
xor
hlt
cmp
out
mov
test
imul
pop
lahf
cs
sbb
in
mov
out
loop
scas
mov
scas
imul
imul
nop
imul
jnp
shl
dec
adc
retf
cmp
and
fild
imul
in
dec
jo
je
pop
cwde
outs
leave
jae
push
imul
idiv
movs
dec
sbb
mov
sbb
pop
or
sub
dec
stc
jbe
xor
add
or
mov
mov
(bad)
out
xchg
mov
inc
retf
iret
daa
mov
mov
xchg
aas
loop
mov
mov
push
adc
inc
xor
loope
cmps
cmp
daa
mov
test
xchg
sbb
call
call
aad
icebp
iret
cdq
ret
or
ins
push
mov
or
retf
fidivr
(bad)
jp
bound
mov
inc
or
fistp
xor
sbb
pop
push
bound
pop
dec
(bad)
push
inc
nop
push
loop
push
xchg
mov
ja
fs
cmp
fdiv
lods
gs
call
adc
call
xor
add
jno
sub
lods
xchg
xchg
inc
ja
jmp
jns
dec
fmul
cmovg
xchg
cmp
movs
inc
fsubr
test
add
jp
dec
push
jle
rcl
stc
fcomp
adc
cmp
push
cmc
xchg
out
mov
rol
sbb
pop
ja
(bad)
cmps
dec
jmp
sbb
(bad)
fimul
mov
stos
lea
outs
enter
dec
dec
adc
in
inc
adc
or
dec
pop
push
add
rol
xchg
test
xchg
inc
adc
movs
rcl
push
in
cli
sbb
ja
pop
xor
js
clc
mov
jbe
adc
das
pop
mov
cmp
push
mov
ins
adc
push
xor
inc
push
mov
repnz
adc
jno
inc
out
ret
loop
mov
and
and
stc
xchg
sbb
icebp
adc
inc
loopne
push
(bad)
ss
jmp
aam
inc
fcmovne
jge
mov
clc
jle
test
sub
cmps
pop
xor
ret
xchg
div
push
inc
in
mov
fdivp
sbb
mov
cwde
ds
in
mov
fsub
xchg
mov
mov
fidivr
gs
and
fs
push
sar
jmp
and
and
push
cmp
movs
or
fcom
sub
shr
stos
(bad)
ins
or
jmp
sub
push
sahf
int
jno
mov
stos
and
sub
mov
xchg
popa
and
sbb
mov
dec
rcl
aam
(bad)
push
dec
jae
xor
jle
pop
xor
out
jb
push
int
jg
cs
mov
aaa
xchg
add
loopne
pop
icebp
shl
popf
pop
retf
rcr
fidivr
xor
mov
shr
inc
cwde
inc
and
ret
or
pop
retf
sub
mov
out
(bad)
(bad)
aas
xor
les
stos
mov
dec
(bad)
jle
xchg
jg
shl
lahf
sbb
push
cmp
out
mov
pop
dec
and
sub
enter
mov
iret
push
fistp
inc
mov
xor
mov
xchg
dec
mov
cmp
outs
aam
mov
in
inc
lock
mov
push
sbb
add
jno
push
inc
ds
gs
aas
mov
es
cs
and
and
pusha
dec
push
cwde
add
push
(bad)
push
iret
movs
fwait
out
inc
cld
inc
or
ret
inc
mov
mov
rcl
xchg
mov
push
cmps
adc
cmp
pusha
gs
inc
sub
out
cs
xchg
adc
repz
cmp
push
sbb
or
pop
retf
fisttp
dec
push
adc
xor
jl
jl
ja
pushf
inc
outs
test
fwait
dec
mov
sub
cwde
mov
dec
stc
lea
add
scas
in
mov
push
jno
mov
add
adc
push
das
sbb
mov
pop
pextrw
xchg
or
pop
je
push
pop
das
jns
inc
xchg
je
mov
mov
pop
sub
cmp
dec
jne
test
jns
mov
and
mov
call
inc
mov
sbb
dec
pop
mov
push
or
push
add
pop
xlat
movs
push
(bad)
ret
add
mov
pop
jne
icebp
call
enter
icebp
cld
adc
dec
adc
cmps
jb
xchg
cmp
aam
rcl
sbb
test
test
lar
(bad)
aam
mov
xor
ds
nop
(bad)
aaa
out
repnz
sub
mov
sbb
push
mov
and
lds
loope
push
mov
imul
xor
xor
push
jmp
jmp
mov
dec
pop
mov
xchg
or
xchg
xchg
and
push
adc
or
or
mov
add
push
xchg
popf
cwde
mov
shr
outs
rcr
je
test
inc
mov
into
push
mov
mov
push
dec
cmps
ss
cmc
push
sub
pop
jbe
xor
sbb
cmp
pop
pop
popa
or
pushf
ja
sub
adc
gs
iret
jo
xchg
inc
add
push
popa
and
leave
push
push
xchg
loopne
cld
scas
pushf
pop
(bad)
rol
(bad)
mov
jmp
jecxz
push
pushf
xchg
push
push
sbb
popf
imul
jnp
gs
test
pop
js
push
fdiv
jbe
popf
cmp
icebp
sti
cmp
jl
cld
call
cmp
mov
aad
push
outs
shl
and
or
jmp
out
lea
repz
adc
cld
xor
xchg
test
xor
and
ss
jp
mov
add
sahf
ror
cmp
arpl
call
pop
pop
jbe
xor
dec
enter
sub
pop
dec
cli
ret
jb
jl
xchg
adc
push
jle
and
fstp
add
fld
in
push
pop
inc
add
mul
ins
lods
arpl
jo
neg
jbe
movs
or
scas
icebp
sub
std
(bad)
fdivr
into
jmp
bound
push
sub
and
mov
pop
fnstcw
mov
pop
call
jbe
jmp
dec
shl
or
popa
adc
dec
mov
mov
mov
mov
adc
xor
xchg
ss
add
jecxz
adc
xchg
xchg
les
xor
aam
and
int
adc
inc
fs
ret
(bad)
add
push
fadd
xchg
gs
xchg
je
je
jmp
lods
out
pushf
pop
add
dec
inc
pop
adc
sub
jb
ud2
xchg
scas
adc
jg
jb
test
mov
call
xlat
(bad)
mov
loopne
inc
xchg
ret
mov
pop
loope
daa
jmp
mov
mov
xchg
lahf
mov
dec
(bad)
sbb
add
hlt
mov
cmp
pop
dec
(bad)
pop
icebp
mov
test
xchg
vmcall
add
jnp
jae
fbld
ffreep
ror
sar
dec
sbb
xor
pop
out
dec
and
bound
aaa
pushf
out
inc
movs
cld
out
push
jnp
ret
fisubr
jbe
sub
push
aaa
mov
in
mov
xor
mov
jns
add
dec
cmps
mov
and
sub
(bad)
xor
out
fist
or
cld
(bad)
mov
cmp
aad
pop
dec
mov
mov
int3
fistp
and
inc
push
int
add
mov
xlat
sub
and
aaa
cmc
jne
push
cmp
sbb
enter
adc
sub
and
test
mov
idiv
lds
mov
(bad)
push
scas
cdq
cmp
or
or
cmp
jae
lea
dec
lds
ja
fimul
test
adc
push
fild
test
scas
pushf
bound
pop
cld
mov
mov
sbb
mov
test
push
push
cmp
add
out
imul
retf
ror
fistp
mov
and
imul
jp
sub
jno
mov
aad
and
ins
cld
call
scas
add
(bad)
shl
popf
dec
adc
int
aas
or
in
sub
icebp
jb
push
push
daa
arpl
mov
pop
and
and
jge
jae
call
lock
xchg
push
cld
jg
into
xor
movs
scas
test
adc
push
mov
adc
gs
movs
xor
aad
sub
test
push
xchg
leave
xchg
jns
leave
test
push
xor
frstor
mov
sbb
mov
sub
mov
jmp
add
mov
push
push
fisubr
jp
call
retf
cs
imul
cmp
aam
jno
outs
xchg
fcmovbe
pop
pop
scas
xchg
sub
and
pop
jbe
fdiv
test
add
fcmovbe
jp
ins
pop
imul
js
and
cmp
add
cmp
mov
loop
retf
shl
sbb
inc
xor
or
pusha
dec
cmp
into
(bad)
xor
mov
test
pop
or
xor
sbb
add
cmc
mov
rcl
repnz
and
loop
int3
repnz
loope
or
std
mov
fst
jno
leave
xchg
dec
xor
cmp
jbe
pop
iret
rcr
xor
mov
test
mov
add
push
dec
ror
adc
xchg
jmp
sbb
push
inc
js
pop
mov
push
in
xor
sub
adc
and
jno
loop
adc
retf
jle
xchg
clc
outs
in
shr
ret
enter
mov
clc
add
in
(bad)
(bad)
test
mov
mov
test
test
cdq
sub
add
and
push
cmp
push
push
fisub
push
xchg
xchg
mov
inc
shl
mov
sar
outs
scas
jns
jmp
jmp
push
dec
hlt
test
mov
cld
mov
dec
xchg
call
fnstcw
adc
pop
test
jmp
aaa
jg
cmp
loope
repz
sub
push
mov
loope
pusha
add
aad
adc
ss
xor
sar
or
out
loope
push
or
and
enter
mov
stc
fcom
mov
mov
push
movs
sbb
sbb
enter
shl
mov
pop
ss
jle
out
call
mov
xchg
sub
icebp
loope
pop
ja
aaa
pusha
pushf
xlat
jg
aad
nop
jle
adc
int
xlat
pop
(bad)
xor
adc
scas
jbe
xchg
add
outs
int3
scas
cmc
mov
js
cmps
sar
mov
rol
nop
sbb
in
sti
out
dec
xchg
sbb
mov
mov
fistp
adc
mov
sbb
push
sbb
xchg
sahf
fcomip
cmp
push
popf
pop
ret
lock
into
daa
push
jno
dec
ins
in
adc
inc
in
movs
xchg
cmc
mov
adc
mov
sahf
pop
retf
ds
test
out
push
mov
leave
jle
(bad)
xchg
adc
ret
add
and
gs
ja
and
jb
gs
inc
or
in
add
je
pop
jmp
push
retf
std
packsswb
xor
mov
mov
and
sar
in
inc
mov
jno
pushf
js
dec
adc
jb
sub
pop
add
daa
push
cmp
push
and
sahf
(bad)
aaa
in
aas
dec
cmp
xchg
jne
dec
or
imul
loopne
jbe
sub
lods
sti
not
xchg
add
test
mov
push
out
ss
fcomp
loopne
cdq
mov
and
xchg
stc
add
movs
repnz
clc
jmp
mov
inc
jne
push
xor
add
out
jecxz
mov
sub
fist
sub
adc
iret
cmps
pop
dec
pop
and
mov
mov
aad
addr16
mov
jne
pop
sbb
pop
xor
mov
mov
test
in
arpl
das
mov
jae
adc
mov
add
in
retf
or
mov
loop
push
xor
ror
fldcw
mov
repz
add
mov
jo
add
in
jb
mov
mov
inc
or
cli
int
xchg
cwde
call
cmc
inc
push
or
xor
mov
ins
lea
jmp
fild
imul
mov
js
ret
lods
inc
jl
cmp
inc
add
sbb
sti
dec
lock
mov
push
sub
push
jno
mov
xchg
idiv
xor
xor
xor
inc
int3
push
jmp
xor
in
or
sub
scas
fdiv
mov
rsm
in
push
call
enter
cmp
sbb
das
push
data16
je
aam
iret
and
nop
adc
jp
cwde
aas
pushf
jae
jg
repnz
rcl
stc
push
dec
pop
inc
shr
dec
ins
test
pop
xchg
sub
mov
inc
cmp
jns
jmp
add
pop
jmp
lds
ja
loop
or
mov
bound
daa
fld
xlat
fidivr
fadd
lea
xchg
aas
popa
jle
shl
sub
(bad)
sub
popa
retf
out
inc
xchg
dec
aam
cmp
push
dec
das
retf
mov
imul
nop
fnstenv
cmps
imul
mov
push
jno
mov
mov
push
sub
push
sub
lock
push
in
inc
xor
icebp
xor
cmp
sbb
mov
aaa
jnp
bound
jno
dec
adc
clc
out
mov
(bad)
jg
out
lea
pop
and
clc
xchg
sub
call
sub
inc
mov
cmp
mov
aad
neg
popa
jns
mov
(bad)
push
xchg
push
imul
stc
push
and
bound
lock
jae
aam
test
sub
ret
push
dec
mov
(bad)
push
call
xlat
cmp
mov
xchg
mov
mov
inc
movs
enter
in
pop
push
jmp
sahf
mov
cmps
sub
mov
xchg
inc
jns
sub
(bad)
popf
jnp
lahf
push
aaa
mov
add
int
and
mov
sub
inc
shl
nop
rol
xchg
pop
cmp
psllw
cwde
jmp
inc
ins
lds
jp
push
xor
test
inc
sbb
mov
cmp
jae
cmp
fist
clc
xchg
xor
or
clc
inc
mov
push
retf
(bad)
sub
into
xchg
push
popa
push
adc
imul
ja
xor
xor
xor
idiv
retf
out
jmp
inc
(bad)
out
sbb
nop
bound
push
inc
mov
push
jbe
add
sahf
or
jmp
stc
xor
hlt
jb
mov
js
pushf
push
outs
ret
jnp
jge
mov
cmp
jge
ret
stc
out
pop
inc
ret
scas
pusha
std
cmp
ret
aas
mov
ds
xchg
mov
inc
ss
jle
cmp
sbb
popa
xchg
xor
clc
daa
daa
sbb
je
sbb
inc
scas
movs
cmp
retf
rcl
sub
test
inc
sbb
fs
cld
arpl
sar
or
dec
add
fwait
or
jecxz
adc
leave
call
(bad)
mov
and
mov
sub
aam
and
or
xor
jae
jmp
hlt
or
stos
mov
jmp
adc
cmps
sbb
int3
(bad)
or
call
or
cmps
out
sbb
repz
stc
(bad)
jl
movs
repz
mov
jmp
lahf
push
sbb
inc
dec
xchg
repz
and
mov
stos
mov
dec
jmp
mov
popf
dec
xchg
adc
mov
inc
jns
add
xor
(bad)
dec
xchg
adc
or
(bad)
aam
retf
xor
neg
(bad)
mov
fcom
fucomip
push
imul
add
pop
cmp
(bad)
cld
outs
push
pop
test
inc
xor
mov
popa
inc
in
jp
jl
sbb
mov
enter
pop
loop
(bad)
aaa
in
mov
cmp
and
jg
in
shl
push
and
pop
xchg
test
lea
and
adc
xlat
lea
sub
xor
mov
ja
add
mov
scas
sbb
xor
mov
mov
ret
inc
test
scas
xchg
scas
dec
movs
leave
add
hlt
mov
or
inc
cmp
xor
push
push
xchg
sbb
out
jae
jno
mov
ss
ror
add
mov
add
jae
mov
sbb
pop
dec
sar
and
pop
std
scas
sbb
outs
hlt
add
ror
mov
in
sbb
les
pop
mov
imul
mov
je
mov
xor
xchg
retf
retf
lea
test
xchg
adc
or
pop
call
jo
into
pushf
dec
pop
add
sbb
cli
popa
mov
fwait
int3
fnstenv
mov
adc
or
and
int
shl
mov
ds
jl
pop
pop
pop
sar
fmul
inc
aas
xor
xchg
dec
inc
and
sub
pop
mov
and
loop
es
out
jle
pop
rcr
xor
and
xor
or
sbb
rcr
lock
(bad)
ins
dec
pop
aaa
xor
ret
xchg
add
mov
out
clc
call
dec
mov
push
xlat
push
mov
fcmove
fistp
jmp
and
aaa
es
out
rol
neg
int
dec
scas
cmc
aaa
shr
dec
cmp
xor
icebp
and
movs
or
fld
xlat
dec
pop
std
es
sbb
lods
aad
aam
fs
rcr
scas
int3
hlt
push
test
mov
push
adc
jb
mov
push
std
mov
mov
pop
push
mov
push
in
add
pop
sbb
inc
pop
mov
cmps
(bad)
jbe
in
sbb
out
sub
ret
cmps
cs
mov
or
hlt
pushf
inc
jge
scas
mov
movs
movs
popa
out
ins
push
sub
mov
inc
mov
xor
or
icebp
xor
jge
and
cwde
add
sub
xor
enter
mov
fld
jecxz
adc
shr
ffree
fwait
outs
fdiv
mov
and
adc
pop
sbb
repnz
push
je
sbb
sbb
jmp
and
sub
hlt
iret
das
bound
jns
jle
xor
leave
ret
js
push
test
icebp
pop
fnstsw
push
adc
mov
pop
inc
in
jg
cmp
mov
pop
lods
es
lds
cld
jge
sub
xchg
ret
pop
shr
aas
push
retf
mov
sub
and
arpl
inc
retf
and
mov
jl
push
stos
xchg
arpl
push
mov
js
push
pusha
fdiv
(bad)
or
push
sub
or
loopne
add
mov
add
pop
sub
sbb
jnp
inc
pop
sbb
jge
dec
mov
in
sub
xchg
lods
jecxz
aad
cmps
push
in
mov
mov
inc
mov
or
mov
in
nop
jno
ret
cli
and
in
mov
sbb
retf
xchg
add
pop
xchg
adc
test
pop
jg
add
hlt
jmp
pop
add
sbb
push
lahf
xchg
iret
sub
cmp
jmp
dec
ret
aam
cmp
ror
xchg
adc
adc
pop
mov
ret
call
lods
std
test
fnstenv
dec
and
fnstsw
sub
(bad)
xchg
out
adc
inc
jl
call
shl
sbb
les
mov
cmp
push
repnz
add
shr
or
dec
sub
jae
fs
call
add
cli
mov
mov
sti
out
and
and
enter
xchg
and
push
idiv
icebp
retf
xor
fsubr
push
cwde
mov
ret
jo
cmps
and
jno
mov
jmp
(bad)
popa
test
push
out
xchg
test
int
mul
out
add
xchg
add
jae
dec
(bad)
and
push
ror
ins
push
cli
cmp
pusha
rol
inc
movs
jne
retf
mov
imul
fild
jae
mov
sub
or
aaa
push
popa
hlt
shl
cmp
adc
inc
fbld
jns
add
leave
cmp
cmp
cdq
into
mov
gs
jmp
not
mov
mov
enter
xchg
loope
in
sti
cmp
(bad)
into
fnstcw
or
loop
(bad)
scas
popf
daa
add
cli
sub
int3
jmp
into
in
pushf
rcr
ret
or
scas
aas
fs
out
sub
adc
ds
jge
retf
pusha
and
add
int3
ss
sub
iret
mov
xor
sbb
fild
pop
xor
cmc
out
push
push
scas
pop
movs
pop
scas
or
cmp
(bad)
(bad)
and
xor
dec
inc
aad
scas
je
pop
push
ss
repz
in
repz
mov
popa
enter
das
mov
ror
cmp
in
shl
fcomp
mov
loop
pop
push
xchg
jl
jns
movs
pop
push
aaa
mov
push
pop
jns
pushf
cmps
pop
push
xchg
loop
lahf
sbb
inc
dec
cli
adc
pop
inc
cld
push
pop
imul
sti
cld
jg
mov
rcl
pusha
out
push
cli
fwait
sub
cwde
sub
and
mov
mov
popa
and
push
push
das
dec
cmps
add
gs
aad
jp
call
enter
push
out
pop
movs
push
cmp
adc
scas
xor
rcr
bound
pop
xchg
aad
stc
gs
cwde
inc
ret
sub
pop
int3
add
jmp
out
dec
aad
push
xchg
lock
pop
cmc
ins
or
and
aaa
jl
sub
jecxz
xor
mov
push
sbb
or
xchg
inc
dec
in
jb
cmp
adc
les
xor
and
push
push
sub
ins
add
dec
mov
fisubr
(bad)
jmp
inc
pop
dec
push
jmp
adc
and
dec
out
fist
lea
push
mov
jmp
and
cmp
and
add
std
pop
or
outs
sub
js
movs
push
pop
add
push
out
push
jo
dec
aam
xchg
movs
aas
push
jmp
mov
adc
cdq
jns
inc
aaa
(bad)
adc
lea
cmc
add
mov
cmps
inc
loopne
aam
add
sbb
sar
dec
push
pop
dec
add
inc
cmp
mov
dec
xchg
add
jno
cld
sahf
jo
sbb
xchg
cmp
retf
mov
lods
test
popf
sbb
add
xchg
hlt
jne
pusha
pop
loop
dec
repnz
add
repnz
xor
mov
jl
adc
loope
sub
in
xchg
das
cmp
adc
add
mov
es
xor
ficomp
inc
push
in
jnp
idiv
add
cmp
cmp
sbb
pop
lock
pop
fdiv
gs
clc
or
cmp
mov
out
inc
xchg
adc
loope
repz
mov
jmp
pop
retf
movs
jns
jns
add
mov
jbe
jecxz
mov
mov
or
jle
sar
xchg
cdq
sbb
retf
sub
push
adc
push
or
rcl
and
hlt
(bad)
aas
lods
ds
add
mov
fnstsw
mov
mov
mov
and
jbe
loope
pop
mov
sbb
mov
mov
adc
pop
jmp
ins
sahf
jnp
das
sar
mov
jg
push
adc
pop
mov
stos
or
mov
leave
jmp
add
inc
aam
pop
sub
ret
retf
lock
sub
stos
jp
ret
fwait
adc
pop
xchg
mov
inc
adc
cmp
jno
nop
jb
(bad)
ss
or
ins
dec
ret
pop
jo
add
xor
push
xchg
sub
loope
retf
scas
mov
jno
aas
stos
jnp
add
ss
add
pop
outs
jae
xchg
push
push
xor
test
pop
outs
hlt
lods
sub
xchg
xor
inc
cmp
and
cmps
push
mov
outs
push
mov
es
inc
loopne
adc
ds
sub
cmps
sahf
and
or
xchg
jmp
jae
push
pusha
add
(bad)
jg
and
sub
popf
daa
jo
add
pop
(bad)
add
mov
push
sbb
out
leave
je
in
mov
bound
sub
mov
dec
rcr
enter
das
dec
call
inc
xchg
cs
neg
add
js
xchg
iret
pop
add
(bad)
or
fs
xchg
inc
imul
cmps
sti
das
dec
or
jge
ins
sub
popa
jo
xor
icebp
jle
jns
mov
inc
xchg
ins
cmp
cs
cmovbe
push
dec
sbb
out
cli
cdq
loopne
and
xchg
inc
xor
les
ror
jle
push
jmp
test
xor
leave
loope
sbb
pop
sub
fs
gs
fwait
in
out
fmul
loope
dec
jo
and
adc
std
stos
test
std
mov
out
(bad)
test
sahf
push
xchg
js
fcmovbe
and
adc
xlat
cmp
and
jnp
in
repz
movs
imul
outs
push
dec
test
loopne
jmp
sbb
js
push
push
jb
jle
movs
adc
and
pop
data16
(bad)
jmp
test
fadd
cmps
sub
mov
gs
or
or
out
not
xchg
push
pop
and
retf
pop
mov
cmps
fld
jge
push
and
imul
push
(bad)
xor
pop
call
push
movs
div
cmp
or
ja
out
push
pushw
retf
sti
jecxz
(bad)
ffree
sbb
adc
or
dec
sbb
out
dec
xor
pop
rol
push
mov
adc
adc
leave
out
aaa
imul
add
dec
mov
bound
mov
(bad)
leave
mov
fsub
aam
fwait
push
cmp
cmps
sahf
pop
and
cli
mov
pop
inc
out
(bad)
popf
pop
push
xchg
xchg
mov
dec
mov
test
push
repnz
outs
sbb
not
fld
and
dec
cmps
in
xchg
jnp
jbe
jns
jge
nop
or
add
rcl
cmp
jo
std
xchg
mov
cmp
and
inc
fs
push
mov
adc
sar
fbstp
(bad)
mov
scas
aad
sbb
neg
dec
jb
popa
mul
xor
dec
push
or
adc
pop
shr
das
leave
cmp
test
mov
xor
fucomi
jmp
sub
out
push
pop
fstp
push
js
push
mov
xchg
movs
xor
mov
pop
and
ins
xor
sbb
clc
xor
movs
aas
movs
imul
mov
mov
fnstenv
cs
xchg
adc
das
jmp
out
iret
shr
mov
cwde
movs
ss
test
dec
pop
or
mov
or
daa
sbb
test
mov
mov
or
mov
sbb
fldenv
sub
mov
and
stc
jne
xor
fidivr
into
and
enter
cwde
cld
jecxz
sti
outs
dec
repnz
jnp
mov
xchg
mov
psubb
jb
jle
inc
push
add
push
mov
xlat
adc
cmp
inc
jo
adc
lods
pop
bound
bound
add
add
sbb
(bad)
mov
pusha
(bad)
inc
sbb
sbb
test
and
cdq
inc
stos
or
or
dec
and
mov
(bad)
xor
jmp
and
jl
jmp
popa
jg
and
je
sbb
pop
in
popf
xor
loope
scas
fcmovnbe
fcmove
fsub
popa
rcl
dec
push
pop
imul
sub
mov
push
add
hlt
leave
add
pop
sub
cli
fwait
inc
mov
int3
cdq
jb
cdq
adc
or
pop
xchg
(bad)
pushf
jo
fiadd
sahf
mov
call
movs
sahf
xchg
push
icebp
pop
loopne
pop
xchg
lds
jge
mov
cmp
out
repz
stos
pop
pop
cmp
pop
or
out
lahf
int
cmps
shl
add
mov
mov
retf
fucomip
ja
mov
clc
jg
and
xor
inc
scas
hlt
xor
aas
pop
adc
mov
xchg
into
push
mov
cmp
cmp
rcl
mov
iret
(bad)
fstp
xor
sub
(bad)
mov
xchg
mov
jb
lea
and
xchg
jle
enter
inc
jmp
dec
loopne
and
js
popa
push
imul
(bad)
lock
(bad)
(bad)
adc
ficomp
mov
aad
cwde
mov
push
mov
leave
daa
bound
test
ret
or
xchg
lahf
and
fisttp
adc
iret
and
mov
les
and
scas
push
xor
movs
clc
add
cmps
and
xchg
jae
push
and
jmp
xchg
push
imul
cmc
fucomp
mov
int
xor
in
(bad)
jno
sahf
add
dec
fdiv
out
aaa
ins
or
xchg
xor
cmp
xchg
ins
push
leave
xchg
daa
xchg
es
add
xchg
mov
sub
xchg
xchg
and
add
div
nop
adc
or
jmp
mov
xchg
or
jnp
pop
sub
nop
jmp
or
outs
(bad)
jns
(bad)
jo
in
jg
add
stos
xor
or
test
mov
loop
inc
push
mov
pop
inc
xor
into
leave
mov
inc
sbb
xchg
and
inc
xchg
mov
gs
cli
or
xor
lahf
fwait
in
stos
push
sub
cdq
dec
fwait
pop
adc
or
or
xor
jne
(bad)
xor
(bad)
into
addr16
mov
jl
popf
sar
btc
adc
test
pop
mov
xchg
jecxz
stos
push
push
out
mov
xor
out
lods
sbb
or
fist
ins
pop
les
and
outs
inc
lea
xor
(bad)
lds
sti
test
test
mov
dec
jge
test
or
cmp
pop
retf
(bad)
fcomp
out
mov
jno
inc
xchg
shl
mov
jg
(bad)
in
stc
or
xchg
dec
push
inc
leave
jmp
pop
mov
jnp
push
rcl
add
mov
inc
mov
push
mov
xchg
fimul
push
mov
dec
imul
and
js
push
jbe
test
or
mov
daa
out
jns
into
xchg
xor
xchg
jp
cmp
cmp
mov
sbb
gs
cmp
inc
mov
inc
jg
mov
ds
jg
outs
jl
fdiv
push
or
mov
mov
cli
sbb
mov
jno
cld
sahf
cmp
mov
inc
cmp
dec
rcl
fs
enter
pop
mov
movs
cwde
mov
mov
stos
push
out
movs
cmp
imul
cmp
or
push
in
adc
pop
add
add
je
cld
cmp
not
movs
(bad)
pop
pop
jl
add
pusha
sbb
popf
imul
test
pusha
aam
mov
shl
mov
(bad)
pop
or
sub
movs
inc
sub
test
pop
je
cmps
enter
les
inc
inc
stc
sub
shrd
sub
adc
popa
rcl
and
repz
dec
ficomp
jg
pushf
(bad)
pop
push
scas
fcomp
retf
int3
js
xor
fld
sub
jo
add
lods
or
mov
push
ret
mov
sub
and
movs
xchg
mov
jge
mov
push
push
cmp
in
aas
and
jg
pop
add
jmp
sub
stc
push
(bad)
adc
test
jmp
push
imul
jns
fstp
xor
ins
popf
aaa
xchg
xor
cmp
retf
cli
pop
dec
inc
ficom
inc
and
(bad)
cli
out
push
cmps
mov
dec
xchg
outs
xchg
ret
sbb
mov
in
pop
mov
sub
push
sbb
xchg
push
daa
bound
call
popa
mov
xchg
lods
stc
(bad)
jmp
push
cmp
push
popf
aad
push
leave
push
movs
cmp
fsub
or
mov
je
ins
stos
repnz
xchg
shl
pop
ret
sti
inc
imul
mov
sahf
rol
push
imul
mov
retf
xor
lds
mov
fwait
adc
and
loop
test
cmp
rcr
mov
sub
(bad)
jb
push
jbe
mov
jae
(bad)
aas
imul
fnstenv
sbb
cld
jecxz
mov
jp
fs
push
std
repz
mov
xor
or
je
push
or
add
and
mov
and
xor
fs
or
pop
pusha
xchg
je
imul
adc
imul
push
cs
or
cmps
sbb
call
jns
jl
and
xor
sub
pusha
mov
pop
mov
outs
fld
jmp
mov
dec
dec
push
xchg
push
sbb
call
jecxz
stos
dec
and
clc
adc
pushf
dec
jp
retf
jns
out
add
mov
cmp
adc
mov
out
iret
pop
fild
shl
xchg
sbb
lds
not
xchg
jecxz
in
mov
push
sub
cmp
cmps
sbb
mov
rcl
mov
dec
or
out
clc
xchg
stc
jno
add
sub
xchg
shl
push
push
push
cmp
cli
fistp
paddsw
test
xchg
cwde
lods
retf
add
ror
test
add
sbb
out
mov
lods
ror
fmul
dec
mov
lods
pop
inc
cmp
xor
mov
mov
push
aas
add
out
inc
xor
inc
loopne
je
loope
(bad)
mov
jmp
adc
inc
inc
push
add
inc
lds
dec
inc
imul
inc
and
test
jge
into
and
add
movs
mov
or
shl
adc
add
sub
iret
je
out
and
lahf
std
dec
xchg
cdq
add
jo
push
pop
jo
dec
popf
add
mov
xor
(bad)
loopne
repz
fs
xchg
adc
pop
out
mov
movs
or
sbb
cmps
jl
add
cmp
stc
daa
stos
inc
jae
pop
sahf
adc
mov
addr16
dec
sub
mov
icebp
bound
icebp
lds
cmp
hlt
cmp
jae
xor
(bad)
test
ins
leave
xor
mov
sub
xchg
adc
pop
push
push
push
jmp
pop
std
or
adc
mov
mov
or
push
or
push
xlat
push
loopne
movs
out
les
pop
cmps
fist
mov
imul
xor
and
and
sub
pop
test
mov
ss
mov
mov
sub
inc
and
push
lahf
ins
out
or
mul
imul
push
sub
mov
mov
mov
sub
(bad)
lea
inc
repz
push
mov
cmps
cmc
and
cmps
push
mov
push
inc
ret
ins
cmps
inc
dec
ins
shr
jae
aam
lahf
ret
inc
jmp
sti
xor
iret
push
jno
out
jo
es
arpl
shl
call
push
mov
in
mov
adc
clc
xor
ret
xlat
sbb
enter
xchg
sahf
ds
loope
stos
jecxz
mov
mov
mov
std
ins
or
mov
jge
lods
lock
dec
addr16
pusha
and
pop
cdq
dec
popa
(bad)
push
imul
ins
cmp
aas
push
xchg
dec
add
sub
inc
mov
fst
bound
call
cld
cdq
pop
sub
or
mov
push
push
xor
adc
sub
sbb
test
sbb
push
push
fsubp
(bad)
lock
pop
movs
aaa
add
fsqrt
cdq
pop
data16
loope
or
jo
sahf
stos
call
pop
adc
inc
pop
aaa
data16
inc
adc
les
jle
test
mov
pop
pusha
sbb
add
dec
in
scas
sahf
les
jno
into
imul
rcr
cmc
pop
push
(bad)
jecxz
pop
fbld
mov
mov
xchg
test
lds
cmps
pushf
stc
pop
dec
nop
sub
dec
loop
mov
ficomp
pop
mov
xchg
adc
jmp
jbe
inc
add
ja
cmps
es
dec
std
xchg
retf
ret
mov
cmp
(bad)
ss
inc
mov
push
hlt
(bad)
inc
push
or
and
push
outs
xchg
mov
adc
pop
aaa
push
add
dec
mov
lods
mov
fnsave
jo
jmp
xchg
jnp
daa
or
repz
mov
ret
pop
mov
adc
ret
adc
(bad)
fs
push
sub
paddsw
(bad)
adc
xor
in
cmp
dec
leave
aas
sbb
mov
mov
pushf
popf
cmp
rcl
sti
jl
inc
dec
mov
in
jmp
xchg
jno
shl
pushf
mov
pop
pop
mov
das
(bad)
sub
sar
inc
jl
add
(bad)
std
xor
not
fnstsw
outs
xchg
call
sub
lods
push
adc
mov
inc
adc
push
inc
fnsave
enter
adc
jecxz
test
mov
push
psllw
push
mov
in
data16
(bad)
mov
call
mov
mov
xchg
imul
inc
aam
sub
in
mov
lds
arpl
push
call
int
ret
cmp
ret
sbb
scas
(bad)
fs
pop
and
add
daa
jg
mov
les
scas
adc
inc
xchg
xchg
push
push
xor
inc
cmp
sbb
push
jl
stc
iret
sbb
mov
pusha
mov
mov
iret
loopne
mov
inc
addr16
outs
inc
or
cmp
ret
sbb
gs
mov
enter
pmullw
hlt
adc
sahf
(bad)
push
stos
jns
cmp
lahf
fs
out
adc
jne
aas
add
(bad)
jmp
pop
lods
jp
jmp
das
clc
sub
xchg
ins
sbb
repnz
xchg
add
fisttp
je
push
clc
xchg
mov
xor
push
sub
mov
out
std
add
sbb
or
sti
ret
push
sar
mov
jecxz
xchg
add
adc
ins
sbb
xor
sbb
adc
xlat
and
lock
in
or
push
pushf
cld
cmp
adc
retf
sbb
jmp
mov
not
adc
idiv
push
aaa
push
repnz
inc
gs
rcl
ror
out
ins
js
jmp
pop
adc
sbb
push
jne
movs
add
gs
popf
aad
outs
aaa
xor
idiv
es
je
and
clc
retf
imul
gs
mov
addr16
in
pop
ret
not
pushf
repz
sub
mov
out
fbld
jge
adc
pop
jb
sbb
pop
ds
or
sbb
gs
mov
ror
adc
dec
lods
fcmovnb
xchg
adc
test
adc
cwde
add
mov
(bad)
test
fdiv
fneni(8087
add
push
xchg
xchg
or
ja
adc
mov
jne
std
mov
std
loope
fisub
mov
sti
cli
push
sbb
xchg
and
pusha
push
pop
mov
es
int3
adc
ins
push
sbb
icebp
inc
or
pop
push
add
jmp
adc
mov
cmp
mov
cld
lea
unpcklps
out
pop
dec
hlt
push
jmp
fwait
out
mov
mov
sub
sbb
rcl
int
repnz
out
lods
push
mov
jmp
icebp
popf
cmps
dec
addr16
and
enter
xchg
jne
push
addr16
or
mov
cmp
jmp
cmp
js
xlat
jmp
mov
(bad)
loop
ret
add
xor
(bad)
in
push
and
xchg
out
mov
popf
shl
clc
dec
aas
shl
popf
test
xor
out
(bad)
test
(bad)
aad
movs
pushf
mov
addr16
mov
mov
(bad)
loope
push
icebp
mov
jo
jge
addr16
cwde
xor
push
dec
pop
inc
les
out
xor
pop
push
dec
mov
rcl
aaa
mov
and
sar
in
hlt
cmp
adc
arpl
sub
fnsave
pop
lahf
dec
pop
mov
rol
adc
push
pop
comiss
add
dec
push
into
fucomi
push
std
jbe
sti
mov
stc
push
arpl
sbb
add
push
dec
leave
stos
xlat
fmul
ins
mov
mov
cdq
push
inc
scas
(bad)
fsubp
mov
or
inc
mov
adc
jp
dec
jge
inc
cmp
ins
cs
scas
cdq
add
adc
test
mov
dec
xor
movs
mov
xchg
into
sbb
cwde
sub
stos
xchg
and
mov
and
jg
(bad)
retf
mov
fldenv
adc
(bad)
repz
mov
and
inc
stos
cmp
mov
xor
fstp
bound
mov
fisubr
push
inc
mov
stc
aas
fisttp
jp
push
fcomp
mov
xor
cmp
pop
mov
push
mov
ja
pop
xchg
push
xor
add
iret
rcl
stc
pushf
iret
push
test
fidiv
cdq
jle
arpl
aas
loop
and
sbb
cdq
pop
dec
scas
imul
mov
xor
out
xchg
cmp
mov
dec
inc
in
push
imul
inc
push
mov
fs
(bad)
cld
je
jne
jl
bound
popa
das
or
mov
add
std
(bad)
fild
add
sbb
ins
and
or
scas
mov
fwait
dec
cmp
mov
rcr
pop
push
daa
in
add
jmp
mov
sub
dec
mov
out
dec
sub
mov
repz
or
push
je
jp
sub
sbb
fild
adc
inc
in
frstor
lahf
ins
test
cs
jo
cmps
cdq
add
jo
data16
(bad)
les
cmp
in
mov
jbe
rcl
push
call
je
fcomp
sbb
outs
pop
sbb
(bad)
and
xchg
jecxz
hlt
iret
pop
(bad)
pop
inc
mov
sti
or
inc
xchg
inc
mov
add
leave
pop
repnz
cmp
cmp
xchg
jecxz
retf
movs
sbb
mov
dec
cdq
std
sbb
mov
cmp
je
shl
mov
into
jns
addr16
dec
dec
div
cmp
cmps
dec
mov
jae
add
(bad)
jns
mov
adc
cmp
data16
(bad)
rcl
pop
popf
test
mov
sbb
lods
mov
push
mov
std
push
out
fst
xor
xor
icebp
icebp
jmp
sbb
push
mov
aaa
loopne
pop
and
cmc
ret
imul
sar
push
push
ret
icebp
mov
jge
mov
(bad)
pop
test
pusha
rcr
push
dec
sub
ins
sub
push
mov
adc
clc
sub
je
jbe
(bad)
cdq
add
mov
cwde
pop
(bad)
xor
icebp
and
mov
fcom
fwait
jae
and
pop
sbb
xchg
sbb
sbb
mov
mov
addr16
movs
je
addr16
xchg
call
cs
leave
inc
outs
fisub
stos
mov
inc
pop
add
pop
fwait
(bad)
out
int
dec
and
push
jg
mov
int
pusha
stos
jmp
xchg
icebp
pop
shr
mov
cdq
imul
test
pop
fidivr
cmp
xor
inc
push
or
ret
inc
push
jmp
les
inc
mov
jmp
ficom
push
mov
xlat
cdq
ret
or
xchg
call
mov
(bad)
mov
or
imul
shl
inc
sub
repnz
xchg
sub
sub
sub
mov
pop
div
xchg
lahf
add
mov
dec
ret
mov
imul
ret
ja
dec
pushf
fwait
push
movs
sub
je
fsub
sub
xor
or
push
pop
ss
push
pop
stc
call
sub
sub
inc
(bad)
sub
jno
lock
xlat
sbb
dec
mov
mov
mov
mov
loope
or
push
fistp
pushf
xchg
js
test
mov
enter
sar
push
mov
and
jmp
push
bound
in
rcl
inc
mov
push
jge
shr
aam
popa
jne
daa
dec
shr
(bad)
cmp
push
mov
outs
adc
dec
add
mov
scas
cld
mov
sti
psrld
lahf
iret
push
mov
(bad)
loopne
cmps
sahf
dec
leave
pop
test
xchg
push
mov
or
(bad)
adc
rcr
inc
out
sub
mov
mov
in
jbe
sbb
fs
and
cld
dec
dec
sbb
and
jmp
mov
lods
pop
dec
mov
and
mov
mov
push
xchg
and
sbb
ret
je
jge
push
retf
mov
sub
mov
repz
xor
cwde
(bad)
pop
pop
xor
leave
push
retf
sub
dec
cwde
adc
pop
mov
bound
in
(bad)
mov
dec
std
and
sub
xchg
pop
popa
add
adc
stc
adc
xor
es
jl
(bad)
out
sbb
and
sar
outs
(bad)
mov
push
mov
jne
xchg
sar
ret
aad
arpl
enter
jnp
cld
fnstsw
(bad)
fdiv
jno
xchg
xchg
xchg
xchg
or
xor
fwait
pop
dec
adc
jae
mov
loop
mov
add
fsub
mov
sub
xchg
nop
inc
in
iret
pop
pop
fimul
add
xor
adc
xchg
xor
or
sbb
push
das
sbb
mov
or
sub
dec
mov
sysret
xor
ds
js
xchg
stc
int
mov
inc
mov
imul
jp
dec
(bad)
jmp
xchg
fild
pop
(bad)
adc
sub
sti
sbb
movs
dec
pop
dec
inc
sub
push
sbb
dec
sbb
mov
sbb
rcr
(bad)
fbld
dec
jmp
sti
jl
xor
(bad)
out
fxch
in
and
push
pop
or
ins
xchg
enter
arpl
ja
jp
lea
adc
movs
jle
xor
sub
jno
pusha
dec
clc
aad
imul
fisub
mov
or
sub
test
inc
fldcw
aad
jno
jle
mov
push
mov
jecxz
add
sub
lea
into
aam
jmp
jmp
and
and
dec
retf
jb
push
mov
jb
popf
sbb
pop
and
sbb
and
xor
or
cld
mov
mov
push
fmul
jg
mov
std
cwde
mov
ss
imul
push
in
jmp
mov
mov
jno
fdivr
aam
loope
cmp
mov
pop
jecxz
mov
pop
cmps
pop
dec
call
fstp
inc
enter
pop
cmp
ins
out
pop
repnz
pop
push
mov
jecxz
shr
jbe
push
fs
bound
dec
and
(bad)
push
mov
mov
or
imul
mov
cmps
out
mov
lds
add
cwde
cli
in
xor
inc
outs
pop
sub
cwde
dec
movs
in
data16
mov
cli
pop
jno
pusha
xchg
pop
js
iret
inc
test
or
jmp
and
lods
cmp
std
dec
ds
sub
ja
and
shr
js
(bad)
outs
imul
inc
or
outs
ret
add
and
aam
js
add
pop
aaa
sar
adc
push
xor
cmp
sbb
xor
ret
lods
addr16
imul
ror
mov
push
and
outs
aad
xor
imul
jnp
jne
mov
mov
jle
mov
fldcw
(bad)
sar
push
dec
loop
adc
xchg
scas
in
sbb
push
inc
scas
int3
push
in
push
pop
mov
pop
mov
dec
jecxz
push
xchg
sub
ins
mov
mov
shl
ror
dec
xlat
retf
push
add
repnz
in
lods
xchg
or
dec
push
inc
in
mov
loop
xor
std
repz
imul
xlat
push
shl
(bad)
aam
inc
add
mov
out
xchg
dec
maskmovq
test
push
pop
rol
cld
sub
cmp
jns
and
dec
outs
retf
pop
stos
ret
push
ds
clc
call
mov
mov
pushf
movs
in
out
or
mov
jp
popa
or
pop
add
push
repz
loope
outs
jo
daa
adc
sar
out
inc
push
movntps
stc
int
cmc
ficomp
adc
sbb
sub
daa
push
dec
mov
pop
sbb
mov
mov
mov
or
fwait
mov
mov
sub
sbb
mov
cmp
mov
shr
inc
out
push
dec
clc
gs
mov
cli
mov
mov
xor
(bad)
jb
adc
adc
stos
xchg
jo
mov
cli
in
jne
clc
and
mov
clc
xchg
dec
stos
or
mov
cdq
test
lahf
das
mov
push
leave
loope
pop
jns
or
call
int3
inc
aas
inc
lods
pop
push
or
xor
jno
and
mov
jns
mov
ret
outs
mov
bound
call
xor
sbb
mov
test
and
xchg
mov
mov
stc
sbb
scas
(bad)
mov
mov
sub
inc
icebp
or
jle
ds
out
inc
ret
not
push
mov
scas
mov
call
sar
mov
test
out
dec
cwde
sbb
aaa
jb
inc
push
sbb
fisubr
jno
test
fisubr
jns
push
out
fwait
pop
mul
xor
and
iret
pushf
and
scas
add
outs
or
stos
jecxz
and
ficom
stc
pop
icebp
in
loopne
push
(bad)
rcr
jl
push
movs
ss
pop
test
inc
das
xor
jns
pop
test
push
add
fist
movs
adc
add
ds
sti
inc
cwde
(bad)
push
mov
mov
scas
imul
or
dec
stc
push
enter
lods
dec
out
aam
sahf
mov
psadbw
imul
shl
(bad)
aad
bound
jmp
scas
mov
inc
test
xchg
pop
mov
mov
pop
pushf
adc
in
inc
dec
pushf
pop
sbb
mov
add
and
(bad)
cmp
and
rcr
imul
cmp
sar
mov
fsub
dec
jecxz
lahf
push
arpl
dec
fst
gs
in
push
add
adc
iret
cs
dec
mov
(bad)
xor
sub
jae
inc
pop
ins
dec
pusha
sbb
push
adc
xlat
jmp
inc
mov
jbe
mov
mov
cld
jnp
xor
lea
sbb
mov
daa
aam
jne
or
repz
mov
imul
xor
lahf
cli
mov
jg
push
cmp
ja
mov
sbb
or
mov
out
outs
jle
inc
sub
add
sub
das
call
out
rcr
dec
repz
mov
push
jo
jg
sub
pop
rcl
pushf
arpl
(bad)
out
cmp
fadd
push
and
loopne
cmc
cmp
dec
out
add
or
(bad)
add
cli
into
cmc
xchg
test
inc
stos
lahf
ja
call
mov
jbe
test
pop
or
mul
pop
retf
mov
rep
push
aas
fs
mov
dec
xlat
loop
outs
sub
mov
cmp
jbe
movs
mov
mov
call
adc
mov
cmp
sub
cmc
scas
imul
push
call
retf
dec
cmp
sub
or
(bad)
jmp
push
lds
popf
test
gs
in
sub
push
rcl
cs
test
jb
das
and
push
pusha
cmp
bound
pop
test
and
inc
xor
mov
jecxz
inc
nop
mov
pop
cmp
clc
lods
xor
dec
jo
sub
test
sbb
xlat
imul
jp
push
jbe
lahf
fiadd
lds
mov
jmp
mov
pushw
jp
or
loopne
inc
jb
sub
xchg
push
movs
pop
ror
inc
mov
or
xchg
je
aaa
push
add
pop
push
mov
ds
(bad)
jge
ror
repz
cs
inc
sub
shr
xchg
push
push
jmp
mov
ret
jmp
call
sub
ds
call
sub
inc
clc
adc
dec
mov
push
adc
mov
hlt
imul
and
and
sub
clc
call
adc
sub
mul
jl
sbb
ja
fsub
fadd
push
ins
int
nop
jg
cmp
stc
(bad)
in
xchg
and
cmc
shl
xor
jae
dec
mov
out
fbld
jae
pop
push
(bad)
popf
inc
adc
inc
cmps
cmp
rcl
nop
jge
pop
ss
xor
scas
adc
es
push
and
cmp
jbe
cli
mov
cmps
jmp
mov
outs
jge
mov
dec
addr16
cmps
imul
fnstsw
xor
test
ja
cmps
jmp
push
pop
and
add
in
fiadd
loop
rol
fist
arpl
in
pusha
jge
mov
in
ins
or
out
rcr
lods
ret
jne
or
repz
adc
div
add
jp
sub
fmul
dec
and
inc
cmps
lahf
popa
mov
imul
adc
mov
mov
push
or
jp
add
jge
lahf
mov
jecxz
(bad)
inc
and
call
pop
xlat
fwait
stos
jmp
shr
mov
stos
mov
retf
and
push
xchg
jns
xchg
jns
std
lods
imul
jne
leave
repnz
pop
mov
sbb
call
je
pop
arpl
movs
or
dec
fmul
ret
pop
(bad)
fstp
neg
pop
cdq
in
adc
cmp
fcmovnbe
ins
cmps
pop
cs
push
cmps
or
js
cmp
pop
pop
pop
sti
mov
push
pop
mov
sar
push
out
dec
test
jge
imul
es
or
jp
xchg
adc
mov
in
inc
loop
fild
pop
fstp
jg
les
out
adc
lea
pop
leave
xchg
mov
jmp
out
jge
daa
mov
cmp
lea
arpl
lahf
pusha
sbb
push
xchg
mov
rcl
mov
push
out
sub
and
outs
add
add
dec
aas
push
xchg
fucomi
scas
stos
iret
sub
cmps
aaa
dec
cs
das
ret
fnstenv
push
cmp
adc
sub
xor
adc
ins
mov
mov
mov
cli
mov
loop
outs
pop
shl
scas
jg
or
ret
inc
jl
sahf
nop
(bad)
icebp
leave
ds
dec
jmp
pop
cli
mov
jnp
jp
pop
add
or
lahf
jne
cli
retf
hlt
and
lds
push
and
xor
and
inc
sbb
jge
sub
cmps
ins
retf
call
xchg
mov
dec
mov
outs
repnz
stc
pop
sbb
retf
scas
jecxz
xchg
xchg
gs
stos
in
push
push
jns
retf
mov
cmp
inc
mov
mov
or
aas
xor
inc
test
push
retf
inc
mov
add
cmp
call
mov
jmp
add
sbb
mov
jns
daa
rcl
add
into
or
pop
jle
cmp
mov
or
dec
mov
(bad)
jae
jae
or
arpl
xchg
cld
imul
aam
call
sbb
mov
cmps
push
inc
mov
shl
jl
inc
push
jo
retf
dec
retf
and
adc
adc
jnp
pop
xchg
fs
mov
mov
jl
out
rcl
test
lds
pop
adc
and
daa
(bad)
cmp
and
mov
mov
fild
lock
dec
in
retf
outs
fadd
cmp
sub
inc
es
jno
mov
mov
mov
mov
imul
les
in
mov
pop
ins
repnz
push
aam
lahf
ja
mov
or
push
xchg
mov
adc
push
retf
fucomi
cdq
das
jmp
ss
movs
sub
fisub
cdq
jl
cld
inc
or
and
xchg
scas
cdq
and
cmc
or
out
sahf
into
adc
adc
into
adc
xor
int
inc
aam
push
popa
fiadd
adc
call
adc
push
sub
out
out
rcl
jl
mov
sbb
stos
pusha
pop
pushaw
mov
mov
out
in
shl
push
mov
adc
pop
mov
lock
lock
ja
sub
addps
fild
aaa
mov
cdq
outs
pushf
iret
push
adc
out
push
js
fmul
dec
loope
sbb
xchg
adc
sub
mov
sbb
cmp
sbb
cmps
popa
push
add
mov
adc
mov
jl
push
pop
out
inc
xchg
jmp
ret
pusha
int3
enter
mov
pushf
jge
and
add
jg
shl
mov
pop
sar
push
int3
dec
sbb
adc
cmc
xor
mov
pop
push
out
cmp
dec
xchg
jbe
pop
cmc
nop
fisubr
mov
std
pop
push
test
push
fadd
ret
sbb
adc
dec
and
jp
bound
sbb
fstp
dec
jno
idiv
pop
add
lds
or
ins
jae
mov
test
out
out
xor
shr
cli
outs
ins
push
sub
mov
mov
mov
adc
aaa
shr
push
leave
xor
pop
mov
and
sub
sbb
ja
into
test
ror
pusha
fwait
jo
outs
ins
outs
mov
fstp
mov
rcl
in
push
mov
dec
test
sbb
xchg
imul
dec
in
mov
out
jae
lods
push
cmc
cdq
test
dec
jo
push
js
add
inc
mov
das
cs
sahf
mov
adc
xchg
mov
in
repnz
shl
rcl
xor
test
gs
or
pop
(bad)
jo
mov
mov
inc
cmps
or
cmp
jp
or
cwde
sbb
mov
mov
hlt
sub
pop
push
jmp
lock
ja
cmps
jae
adc
test
xlat
retf
aam
stos
nop
loopne
cmp
push
lahf
ret
push
(bad)
sbb
push
shr
(bad)
int3
shl
jbe
loop
test
sub
and
and
mov
jp
stc
ss
hlt
jg
pop
jns
and
fmul
clc
or
je
fwait
sub
add
stc
fsub
push
jg
fmul
jo
cmp
in
dec
call
cmps
dec
test
fidivr
push
xchg
pop
std
sub
neg
mov
or
lock
or
jmp
mov
sub
inc
loopne
and
mov
xchg
mov
push
cs
or
cmc
adc
dec
shl
jge
inc
loop
mov
push
jno
ss
push
jmp
push
inc
dec
outs
jne
sub
sub
clc
stc
add
jo
sbb
(bad)
mov
and
(bad)
mov
sub
ror
xchg
xlat
lock
out
dec
push
xor
push
or
shl
in
adc
cmp
js
test
div
cmp
addr16
imul
fwait
mov
std
fimul
shr
jmp
dec
addr16
aam
lahf
imul
gs
xchg
out
rcr
jno
cmp
add
popf
hlt
xor
xor
dec
sbb
ficom
jne
cmp
scas
sub
mov
int3
loop
mov
lods
jo
jmp
mov
fs
or
(bad)
mov
xchg
(bad)
in
fcomp
inc
cmp
and
mov
out
daa
jp
mov
and
jno
jge
sar
sub
push
in
gs
push
cmp
outs
fmul
add
jmp
dec
stos
std
int
mov
sbb
or
clc
fwait
mov
dec
data16
pop
arpl
adc
jl
mov
jno
and
mov
pop
dec
aaa
mov
clc
add
jno
sbb
pop
sub
std
stos
pop
sub
test
mov
int3
scas
adc
hlt
mov
dec
sub
out
xor
jp
in
push
out
or
movs
gs
mov
sub
loop
mov
jbe
pusha
cli
icebp
push
xchg
xchg
int
xor
inc
inc
and
icebp
pop
push
add
pop
jge
add
or
out
push
adc
add
xor
jmp
fst
and
and
cmps
in
jmp
repz
adc
mov
and
es
fmul
int3
xchg
(bad)
xchg
xor
pushf
xchg
xlat
pop
inc
dec
jbe
push
jmp
jle
jmp
pop
sub
(bad)
(bad)
rol
dec
ins
xchg
lds
dec
jnp
outs
cmp
out
nop
pop
popf
sub
or
sar
shr
sbb
enter
mov
ror
pop
jne
mov
mov
xor
inc
fwait
cmp
jle
cmps
pop
lods
aas
js
dec
xchg
xor
stos
fcomp
ficom
mov
push
mov
bnd
mov
fisub
icebp
inc
adc
add
nop
mov
lds
daa
daa
jg
das
mov
(bad)
loopne
xchg
loope
imul
imul
dec
fs
fwait
pushf
and
mov
lea
sbb
push
dec
xchg
(bad)
ret
aam
ret
outs
and
int3
xchg
in
(bad)
and
push
leave
mov
xlat
add
iret
mov
push
mov
push
cmp
adc
lods
(bad)
mov
pop
ja
or
std
inc
adc
push
and
jae
int
sbb
or
stos
xchg
es
inc
lods
sub
sub
stc
inc
mov
and
out
clc
pusha
lods
cmp
mov
xchg
fiadd
sub
jl
dec
cmp
and
pop
(bad)
cmp
dec
dec
cdq
jnp
push
imul
and
fs
push
dec
adc
out
into
sbb
mov
add
mov
fstp
(bad)
cdq
and
xor
cli
call
std
fnsave
das
arpl
xchg
inc
(bad)
jecxz
adc
cmp
outs
loope
mov
data16
mov
cmp
in
fimul
add
xrelease
(bad)
mov
ret
shr
sbb
pop
mov
dec
sub
(bad)
and
aas
pop
pop
jp
fadd
out
inc
xor
add
and
pop
gs
mov
mov
pop
sbb
push
repz
loop
sbb
frstor
pusha
lds
adc
adc
sbb
mov
mov
les
in
les
xchg
add
lock
sub
push
mov
scas
jb
xor
aaa
xchg
cld
in
dec
js
(bad)
mov
xchg
mov
mov
adc
imul
into
enter
(bad)
mov
cld
sub
lea
mov
je
pop
dec
aaa
jg
outs
jle
sub
and
in
push
dec
add
aad
loopne
(bad)
hlt
inc
dec
xor
out
pop
xchg
cdq
fwait
inc
jle
xor
xor
push
push
outs
cld
movs
fmul
sbb
lock
and
lock
mov
xchg
and
cwde
jmp
test
sub
cmp
xchg
in
das
dec
ja
dec
dec
test
xor
xchg
sahf
adc
mov
rcl
mov
sti
jae
adc
ss
arpl
stc
xchg
dec
inc
(bad)
xchg
dec
cmp
xchg
ja
inc
jb
and
(bad)
sbb
push
push
pop
lock
pop
es
mov
pusha
push
sub
loop
(bad)
mov
int3
xchg
mov
push
aad
jp
sbb
dec
jg
add
les
sub
and
or
(bad)
(bad)
mov
xor
outs
sbb
add
leave
in
and
mov
icebp
mov
aaa
cmp
add
inc
ins
jno
cmp
ss
shr
sbb
dec
mov
movs
push
punpcklbw
sub
push
xor
mov
jmp
(bad)
ret
mov
xchg
and
loopne
and
ss
in
jp
mov
dec
les
dec
nop
add
pop
mov
push
fisub
add
daa
dec
xchg
cli
mov
ins
jl
mov
cli
lods
iret
mov
sbb
xchg
(bad)
rcr
push
jne
aas
rol
cwde
test
(bad)
xchg
adc
add
mov
jno
imul
pop
mov
sbb
shr
mov
mov
dec
push
ror
leave
dec
aas
fiadd
mov
(bad)
mov
inc
fld
loope
inc
loope
lock
ret
ficom
xchg
mov
jno
mov
mov
idiv
cmp
sub
aam
mov
cmps
pop
and
push
jp
and
mov
shl
movs
adc
imul
loope
arpl
cli
pop
adc
in
lock
dec
push
xchg
daa
fldcw
jecxz
loop
stos
jecxz
ins
iret
pop
imul
je
imul
mov
mov
push
stos
mov
ins
popf
pop
(bad)
sar
push
jmp
xchg
sbb
xchg
sbb
out
in
push
pushf
enter
sbb
pushf
or
dec
and
mov
enter
shl
dec
sub
fwait
jp
pop
mov
adc
xor
inc
cli
cli
mov
dec
fadd
test
cli
jp
fld
movs
push
push
call
mov
cld
hlt
test
mov
retf
cmps
outs
ud2
dec
sbb
or
xchg
mov
sbb
mov
cld
dec
(bad)
cld
cmovg
mov
cdq
mov
push
and
add
(bad)
repz
xor
aam
adc
pusha
outs
jmp
or
xchg
shl
retf
and
xchg
es
add
test
inc
xchg
shr
repz
fabs
inc
inc
push
pop
popf
pop
adc
loop
mov
jb
loop
inc
push
ds
xchg
xor
cs
or
call
push
xlat
or
mov
(bad)
stc
adc
call
sbb
xor
mov
or
fimul
(bad)
test
add
(bad)
and
pop
mov
push
push
mov
shl
sbb
repz
fnstsw
sbb
lds
clc
pop
adc
cmp
stos
rol
mov
mov
cmp
sub
xor
cwde
setne
mov
and
test
shl
jge
scas
lods
popf
mov
xchg
mov
mov
pop
adc
sub
push
mov
or
xchg
mov
ror
hlt
add
cmp
cmp
ror
push
sub
fcmovb
test
jno
pop
inc
cld
pop
data16
and
fwait
sub
lea
xor
icebp
cld
xor
nop
push
push
pop
sub
xor
xor
cmp
fisttp
ret
fsubr
leave
lds
arpl
and
or
adc
dec
pop
retf
in
(bad)
jmp
mov
inc
cmc
cli
jnp
add
mov
enter
xchg
daa
aam
jge
mov
es
icebp
retf
mov
(bad)
sti
mov
retf
cmc
mov
loopne
xchg
int
retf
call
pop
inc
in
pop
or
jecxz
dec
sub
jb
popa
sbb
addr16
xchg
add
sub
sbb
loopne
xchg
pop
lods
jo
ds
outs
and
cmps
hlt
mov
out
adc
mov
pop
rol
inc
cmps
je
dec
xlat
and
push
ja
addr16
cs
jmp
fisub
adc
jne
pop
or
jmp
pop
lea
jns
pop
pop
mov
sbb
popa
pop
mov
ss
dec
jne
dec
mov
or
jle
not
add
cwde
add
sahf
sub
(bad)
je
or
repz
mov
mov
add
inc
mov
shl
fdiv
jno
adc
clc
sub
call
xchg
vpsubsw
not
sub
ror
and
jb
icebp
cmc
xor
pop
sbb
adc
dec
add
fdivr
jns
cmps
lods
xor
repz
mov
in
adc
inc
lock
neg
fiadd
fisub
mov
xchg
int3
(bad)
mov
jp
xor
add
imul
dec
fild
das
xchg
lods
add
jb
fsubr
in
cwde
sbb
cwde
sar
pop
sub
and
pop
sub
add
call
xchg
jmp
sub
cmp
push
arpl
pop
iret
loop
sbb
loop
(bad)
loopne
mov
mov
mov
xlat
retf
pop
or
iret
push
jp
into
jnp
pop
clc
(bad)
stos
inc
bound
or
pusha
cdq
sahf
push
pop
mov
pop
pcmpeqb
(bad)
jb
xchg
sti
mov
mov
mov
mov
mov
out
dec
sahf
mov
push
nop
adc
pop
cld
xchg
jge
pushf
inc
jge
lock
(bad)
xor
xchg
rcr
movs
test
repnz
fwait
sti
(bad)
cmps
or
loopne
clc
out
jg
jecxz
fisub
ins
jnp
adc
cmp
jno
mov
jno
retf
mov
test
push
or
mov
fwait
jmp
xchg
cli
adc
call
xchg
int3
add
retf
ja
call
mov
aam
or
loop
inc
mov
ret
popa
(bad)
rol
xchg
sbb
inc
adc
enter
sub
nop
scas
stos
das
hlt
sub
repz
pop
cmp
shl
gs
in
push
neg
imul
sub
push
mov
jge
sub
(bad)
rcr
xor
mov
dec
jl
and
movs
inc
sbb
(bad)
ja
ret
(bad)
hlt
dec
retf
lock
jg
aad
and
pop
cmp
fdiv
mov
or
call
sbb
mov
out
mov
(bad)
imul
mov
push
push
sub
push
(bad)
shr
lods
push
cld
stc
mov
fs
jg
lahf
in
mov
and
cmp
loope
fimul
jg
mov
or
jb
push
jge
xchg
fcom
test
pop
retf
pop
arpl
imul
add
leave
imul
imul
fiadd
push
xchg
ss
aas
and
pop
cmp
nop
jg
sub
sub
mov
pop
jae
pusha
xor
aaa
call
xor
xchg
inc
call
(bad)
in
dec
fadd
jl
sub
inc
push
outs
cli
xlat
imul
ins
call
add
jmp
out
cld
ret
dec
add
jno
inc
jno
test
(bad)
mov
imul
nop
push
out
sub
pop
mov
int3
jno
sub
(bad)
into
dec
sub
retf
push
call
dec
cli
and
push
jb
mov
pop
jae
or
fbld
cli
idiv
pop
push
repnz
jnp
sbb
adc
(bad)
mov
aam
jo
cld
sub
mov
pop
repnz
arpl
sar
dec
retf
ss
push
xlat
mov
mov
(bad)
pop
sti
xchg
jo
jmp
dec
push
cmp
scas
sub
fnstsw
clc
and
lahf
ret
sub
and
xor
add
push
mov
mov
mov
and
das
stc
retf
pop
push
lds
leave
mov
ror
pop
fdiv
lea
ins
fst
rcr
(bad)
rcl
and
scas
cmps
sub
xor
mov
xchg
sub
test
add
or
ficom
adc
test
and
adc
repz
dec
outs
mov
cmp
cmps
loope
dec
push
adc
mov
cwde
pop
mov
lock
sbb
aaa
scas
test
sbb
dec
sbb
clc
jle
das
shl
mov
mov
imul
sbb
adc
jle
mov
test
xor
mov
inc
inc
cmc
repz
mov
es
nop
cmc
push
mov
jne
xlat
stos
lahf
(bad)
mov
push
add
xchg
adc
jne
xchg
sar
call
rol
cmps
mov
jae
adc
sbb
xchg
and
sub
test
retf
sub
push
test
je
dec
pop
pusha
aas
rcl
xor
xchg
fdivr
ret
aas
push
adc
pop
ss
repz
jae
dec
pushf
arpl
jle
mov
fcomp
dec
mov
dec
pop
push
inc
adc
push
stos
xchg
mov
mov
shl
ror
movs
mov
ins
and
adc
lods
(bad)
ins
push
out
jl
iret
or
aam
(bad)
call
sub
cli
mov
xchg
dec
cwde
je
dec
imul
sbb
retf
stc
repz
pop
xor
in
cmc
not
or
icebp
mov
call
(bad)
xchg
mov
jbe
(bad)
cld
lds
adc
dec
inc
xor
(bad)
fs
xchg
jge
fstp
pop
sub
mov
fnstcw
or
(bad)
jmp
sub
aaa
and
mul
das
call
outs
lods
mov
test
popf
push
fldenv
int
jg
jge
xor
dec
xor
sbb
adc
sub
pushf
push
add
fsub
add
fist
out
out
push
cmp
inc
jecxz
cli
push
(bad)
push
xchg
mov
iret
jno
push
inc
mov
jnp
hlt
push
pop
inc
mov
add
sub
xchg
inc
mov
sti
in
cdq
sbb
sti
dec
(bad)
int
pop
jmp
inc
int
push
fild
out
mov
sub
push
and
xchg
or
pop
cdq
jecxz
call
xchg
push
cmps
jo
ror
inc
sbb
sub
loopne
cmp
sbb
(bad)
inc
xchg
or
shl
cmovge
div
sub
pushf
pop
sub
hlt
inc
xchg
popf
adc
jmp
mov
loope
inc
aad
push
mov
das
xchg
dec
or
mov
cwde
push
mov
into
imul
es
xchg
iret
(bad)
cdq
xor
inc
and
push
jae
loop
mov
jmp
in
cmp
inc
push
adc
pop
inc
mov
in
imul
inc
popa
int3
test
dec
pop
loop
fld
loope
rcr
push
jne
cmps
imul
sbb
int
sub
push
arpl
sahf
dec
or
jns
out
cli
mov
sbb
aaa
popf
adc
bound
dec
pop
jbe
ja
sbb
push
sahf
jbe
xor
test
sub
mov
mov
neg
add
xor
mov
ins
(bad)
shr
pop
add
ins
push
out
push
(bad)
rcl
adc
mov
pop
cmps
sub
ds
sub
movs
into
cli
nop
shl
xor
xor
inc
popa
mov
out
add
retf
mov
es
cmp
js
jmp
scas
aas
scas
lods
dec
mov
sub
dec
pcmpgtw
push
or
arpl
xchg
push
ins
xor
mov
dec
je
lock
cmp
jno
mov
mov
add
cmps
dec
fsubr
xor
cmp
lock
adc
sub
imul
cmp
jg
(bad)
in
or
jp
adc
inc
sub
cmp
call
js
inc
jne
loope
cmp
mov
test
xor
scas
pushf
push
push
out
jmp
mov
sbb
push
mov
cmp
(bad)
out
dec
loopne
loop
sub
dec
dec
fsubr
leave
pop
or
jnp
loopne
dec
push
out
fdiv
xchg
clc
jmp
repz
mov
cwde
mov
js
js
pop
movs
stos
jp
in
ins
aam
retf
inc
aas
jb
inc
inc
cmp
cld
and
pushf
retf
push
xor
dec
jp
in
fmul
fisubr
scas
jnp
mov
call
xor
mov
clc
ins
leave
sbb
mov
shl
add
sub
aas
cld
sbb
cmp
daa
pop
xor
(bad)
ror
clc
add
jb
fsub
push
or
ficomp
mov
mov
adc
pop
xor
(bad)
imul
jp
rcr
jns
sub
into
mov
mov
stos
add
(bad)
inc
clc
sar
call
dec
sbb
or
sbb
or
pop
jnp
loopne
xchg
aas
cli
sbb
mov
imul
pusha
aam
(bad)
pop
not
cwde
xor
aas
push
hlt
data16
mov
enter
jmp
daa
in
push
retf
mov
mov
(bad)
jne
add
and
shl
push
inc
and
ss
mov
cld
cli
(bad)
popa
push
outs
dec
inc
jp
mov
inc
push
call
pop
mov
cmp
jae
mov
mov
inc
test
mov
loopne
xor
dec
nop
mov
and
cmp
cmps
mov
clc
add
lahf
sbb
stos
jb
sub
mov
pop
push
outs
(bad)
jae
cmp
inc
jmp
or
(bad)
and
xlat
clc
arpl
idiv
into
sbb
jb
loop
inc
sub
pop
jae
imul
cmp
adc
mov
push
(bad)
retf
loopne
xor
ret
mov
scas
icebp
test
xor
aad
push
and
sub
hlt
or
mov
mov
loop
jmp
adc
cmc
stos
outs
fistp
imul
and
and
mov
mov
dec
sub
or
xchg
inc
jns
sbb
nop
mov
mov
push
nop
lds
adc
in
adc
addr16
fs
movs
lahf
call
or
cld
adc
xor
aam
xchg
jge
imul
cmp
mov
mov
fisub
aaa
jno
mov
mov
movs
cmp
cs
movs
call
pop
jne
mov
je
out
not
pop
jg
pop
(bad)
fucom
enter
outs
jmp
repnz
adc
ret
or
inc
inc
and
mov
mov
push
dec
jl
ffreep
daa
cld
sti
add
(bad)
icebp
sub
fwait
or
ror
mov
sar
loop
xor
cmp
dec
pop
dec
add
jae
mov
push
jmp
adc
aam
push
add
push
(bad)
cwde
inc
jge
dec
adc
pop
jo
or
adc
cmp
sbb
imul
daa
fimul
inc
push
paddb
scas
cmp
and
out
mov
out
in
call
test
dec
bound
scas
mov
pop
adc
xor
xchg
cld
outs
pop
dec
cmps
test
push
jbe
fwait
mov
pop
repz
add
jge
(bad)
mov
prefetchwt1
dec
mov
cmp
jle
xchg
adc
lock
and
or
es
jp
xchg
adc
inc
sub
and
(bad)
shl
inc
xor
dec
pushf
push
and
mov
dec
xchg
js
pop
sub
or
or
(bad)
outs
(bad)
cld
outs
mov
(bad)
jae
mov
push
push
sar
push
daa
mov
outs
mov
xor
pop
imul
xchg
in
pop
in
inc
mov
in
push
inc
ds
jns
or
fldenv
sbb
(bad)
test
mov
ss
jae
mov
ror
lahf
mov
sbb
je
pop
ror
aas
nop
xlat
xor
mov
mov
add
dec
adc
fld
stos
cmc
cwde
push
icebp
xor
ss
ja
rcl
ja
ss
addr16
mov
popf
repz
xor
push
xor
mov
sar
ss
xor
add
pop
jnp
rcr
mov
push
pop
push
xor
call
xor
int3
aam
enter
ins
and
xor
mov
rcr
or
cwde
sbb
xor
and
xchg
daa
dec
mov
xchg
push
mov
(bad)
enter
inc
and
jmp
adc
int
xor
pop
pop
shl
cli
lock
sbb
and
in
or
cwde
movs
stos
ret
xchg
popa
mov
fld
pushf
cdq
jp
push
aas
add
enter
sbb
cmp
mov
ds
call
outs
lahf
push
cmp
leave
and
aaa
or
enter
xor
(bad)
(bad)
or
not
add
fstp
mov
jecxz
xor
jecxz
dec
xchg
pop
int3
jmp
(bad)
push
cmp
idiv
jae
xchg
cmp
pop
stos
(bad)
mov
mov
inc
mov
test
add
jns
ss
ins
pop
rol
imul
aaa
pop
push
dec
ins
pop
dec
cli
cmp
repz
in
mov
jo
and
or
push
sbb
mov
inc
stos
inc
pop
sub
aad
int
cmc
gs
push
mov
push
arpl
retf
pop
sub
sub
xrelease
stc
movs
sti
lods
int3
sub
push
mov
cs
add
cld
mov
xlat
out
xor
mov
call
push
popf
in
dec
clc
or
xchg
outs
loop
push
push
cmp
out
loop
push
dec
push
dec
out
dec
adc
loope
out
sub
std
mov
pop
inc
ss
les
jnp
adc
adc
sbb
ins
sahf
aam
jo
out
xchg
jecxz
jecxz
fmul
jmp
(bad)
aas
fwait
je
xlat
sub
xor
jo
jp
out
aad
popa
or
add
scas
xchg
rcl
retf
retf
xor
cmp
stos
out
ins
fidivr
or
scas
cli
jb
loop
rcl
adc
dec
std
inc
ja
repnz
and
push
cmps
xor
scas
add
dec
adc
mov
xchg
mov
pop
out
mov
cmc
xchg
mov
(bad)
scas
fistp
fiadd
in
xor
push
add
shr
adc
retf
loop
enter
adc
xor
inc
or
or
mov
add
add
xchg
cs
imul
add
and
out
fdiv
or
adc
sbb
xchg
test
sbb
or
mov
fidivr
push
in
fisttp
lock
dec
jno
stos
xor
xlat
mov
bound
dec
mov
hlt
xor
inc
nop
in
inc
sub
gs
push
push
adc
outs
or
sub
dec
scas
pop
aas
cmp
push
lods
lea
xor
push
pop
sbb
sbb
dec
enter
pop
push
addr16
mov
call
add
call
inc
stos
shl
dec
loop
push
mov
pop
adc
inc
hlt
sbb
sar
or
ss
xor
ss
push
call
loop
push
icebp
fsubr
or
imul
test
push
(bad)
mov
lds
pop
sbb
leave
xor
jno
mov
push
cmp
cmp
(bad)
out
div
xor
mov
xchg
jecxz
xor
daa
pop
jmp
jb
call
ret
addr16
loope
rcr
(bad)
inc
sub
fnstcw
cmp
and
imul
mov
fbstp
shl
jecxz
push
pop
clc
add
imul
loopne
sbb
push
test
and
pop
sbb
mov
shl
cdq
xor
data16
mov
lock
inc
jle
jmp
jmp
aas
test
retf
fdiv
sub
or
(bad)
in
imul
mov
loop
dec
jno
mov
mov
and
cmp
js
ins
dec
movs
sbb
in
out
test
repz
mov
jmp
test
fcomp
mov
adc
and
fld
and
test
xor
stos
popa
rcr
enter
fwait
add
retf
outs
sahf
mov
pop
hlt
and
popa
pop
push
out
xchg
aas
add
mov
test
fucom
cwde
mov
and
repnz
pop
nop
clc
cmp
sub
cli
adc
inc
sbb
inc
add
leave
mov
xchg
sbb
xor
jg
cmc
cmc
aaa
sub
mov
xor
daa
mov
jno
jg
xor
inc
adc
jns
xchg
loopne
mov
in
cmps
into
loope
lds
xchg
(bad)
ret
jmp
pop
or
cmp
ret
aad
xchg
mov
mov
lods
fnstsw
aam
inc
mov
jno
mov
or
inc
sbb
icebp
jle
cli
pop
and
mov
mov
mov
push
ins
movs
pop
fwait
inc
dec
nop
push
repnz
imul
add
sbb
call
loop
xor
cmp
test
adc
gs
cmp
and
adc
js
out
cwde
adc
or
(bad)
out
mov
push
lahf
lea
ja
jbe
push
(bad)
jne
fwait
stc
pop
mov
dec
(bad)
cs
adc
adc
add
imul
push
stos
int3
and
dec
dec
mov
shr
mov
or
sub
xchg
cmp
das
mov
loop
rcr
clc
inc
xchg
jns
dec
test
jnp
inc
(bad)
aam
ss
adc
add
jno
mov
cmp
inc
aam
idiv
(bad)
or
inc
and
jecxz
out
aam
into
inc
das
lods
xchg
cs
lea
clc
xor
or
call
pop
lds
scas
xlat
mov
xchg
rol
or
imul
out
push
sbb
je
add
popa
jp
lea
jmp
in
mov
jbe
into
(bad)
mov
je
push
in
scas
fcmovu
cld
xchg
cs
inc
cmps
stc
add
das
mov
mov
mov
adc
mov
push
dec
cmp
mov
fld
setnp
sub
pushf
pop
imul
sar
jmp
seto
stos
pop
dec
stos
cmp
xlat
daa
dec
or
jno
cmp
paddb
movs
and
repz
pop
pop
sahf
stos
test
push
lahf
pop
clc
daa
jp
out
into
sub
test
sub
mov
hlt
inc
es
mov
icebp
jp
out
push
inc
inc
(bad)
xchg
jg
and
sub
jmp
call
inc
aam
or
push
xchg
ror
or
enter
out
loop
out
mov
inc
jge
add
jl
pop
pop
xchg
or
and
push
jmp
mov
jge
mov
jmp
popa
jmp
jbe
jnp
cmp
sub
pop
adc
jmp
ja
inc
mov
hlt
not
mov
xlat
enter
icebp
xor
ror
(bad)
test
aas
std
xor
add
ins
cmps
mov
outs
js
lods
pop
mov
or
pop
cmp
dec
dec
loop
ret
mov
clc
push
xchg
xor
jns
pop
and
add
pop
xchg
mov
imul
pop
jne
push
pushf
fucomip
inc
mov
sbb
out
test
lods
in
cmp
mov
sbb
ret
fdivr
in
jmp
and
out
jno
jmp
fcmovnb
shl
aas
test
mov
sbb
movs
add
stos
rcr
mov
int
or
cmps
xchg
retf
jge
xlat
push
sbb
test
mov
in
out
idiv
gs
test
adc
pop
add
das
dec
sti
mov
repnz
fistp
xor
out
mov
das
inc
cld
std
retf
jno
call
out
pop
add
xchg
cmps
jmp
sub
sbb
popf
pop
rol
ficomp
inc
cmps
cmps
enter
addr16
xchg
cmp
jae
test
ds
mov
mov
xor
lods
inc
sub
adc
sbb
mov
into
push
add
fidiv
or
xor
ins
dec
out
adc
int
cmc
pop
pop
sub
xchg
or
shl
mov
sbb
popa
ins
push
jmp
cli
cmps
gs
ins
push
dec
cs
(bad)
sbb
sbb
aas
pop
ss
jb
mov
push
icebp
ja
jecxz
repz
inc
push
push
mov
mov
xchg
jns
pop
push
iret
prefetchw
cmps
push
jmp
call
sbb
(bad)
bswap
(bad)
xchg
mov
fsubr
dec
xchg
push
mov
pusha
lahf
ins
imul
sar
sub
sti
addr16
pop
jmp
call
adc
movs
or
dec
shl
aam
outs
je
cld
cli
adc
lods
sbb
and
mov
add
loopne
mov
dec
xchg
cmc
jle
cmp
fsubr
(bad)
int
or
mov
arpl
or
add
cmps
test
ja
jbe
fnsave
in
ins
fild
loope
jecxz
das
fwait
sub
xor
in
or
dec
fldcw
mov
sahf
inc
leave
pushf
mov
pop
pop
loopne
cmps
lds
jb
pushf
inc
adc
jno
dec
and
stos
movs
push
mov
mov
retf
pop
jle
nop
clc
mov
add
cwde
mov
mov
adc
mov
nop
mov
sub
imul
enter
and
and
mov
jo
inc
frstor
jno
loope
jae
adc
imul
sbb
mov
std
imul
jmp
imul
adc
jns
repz
pop
fbld
into
cmp
adc
sti
lds
jecxz
ror
loope
push
aas
adc
mov
aas
ins
daa
mov
cmps
retf
out
test
fmul
mov
cdq
icebp
sbb
inc
lea
imul
scas
push
test
dec
adc
cli
outs
cs
cs
mov
stc
dec
add
push
rol
or
neg
sbb
sub
adc
data16
iret
cmp
and
mov
pop
dec
dec
sahf
cs
cwde
xor
fcmovne
jmp
mov
movs
lods
jmp
or
in
inc
and
in
lds
out
cmp
arpl
movs
fwait
inc
sbb
repz
(bad)
ins
out
cwde
jne
pop
xlat
fcom
xchg
or
cmp
sbb
in
mov
out
(bad)
xchg
adc
mov
adc
push
stc
movs
push
sbb
cdq
mov
and
inc
jmp
data16
data16
in
mov
mov
(bad)
rcr
movs
loope
lock
sbb
jecxz
sahf
jg
add
stos
ror
cmp
movs
mov
inc
jbe
sbb
push
cmps
jle
mov
and
lahf
hlt
pop
call
enter
dec
or
(bad)
sahf
push
pop
xchg
(bad)
(bad)
push
xchg
sbb
xor
cmp
lock
mov
xchg
cs
mov
xchg
ret
call
and
aam
dec
aam
mov
cmp
ficomp
xchg
and
push
pop
shl
xchg
mov
aad
mov
xor
xchg
scas
adc
xor
push
or
or
popf
and
pusha
pop
cmc
xor
jno
call
inc
retf
cmp
dec
mov
scas
jno
test
or
cmp
shl
mov
pop
movs
sti
mov
cmp
push
or
fnstsw
push
push
lea
das
retf
or
inc
out
push
dec
(bad)
pop
xchg
cmp
inc
jecxz
adc
in
in
xchg
pushf
inc
cdq
mov
cmp
repz
movs
dec
lds
or
mov
mov
mov
rcl
ret
xchg
xchg
sar
push
and
mov
xchg
jmp
adc
mov
ret
cmps
repnz
jecxz
sbb
icebp
push
in
push
and
xlat
mov
lods
cmc
cli
test
mov
fld
xor
int3
jle
pop
push
fisttp
aas
jno
imul
fnstenv
push
xchg
push
push
add
in
pop
pusha
es
mov
push
js
xchg
data16
or
iret
xchg
outs
and
jmp
imul
retf
stc
sbb
dec
je
test
dec
jge
xor
lods
mov
cmp
ss
sub
cs
es
cmps
push
cmps
xchg
push
std
xchg
inc
push
push
(bad)
sbb
dec
or
and
cmp
pop
lea
inc
xchg
mov
clc
ja
fmul
or
pop
or
xchg
mov
pop
push
cmps
test
dec
sbb
mov
pop
pop
or
dec
mul
and
cmp
in
fnstsw
push
jnp
(bad)
pop
hlt
daa
and
retf
mov
push
(bad)
enter
pop
repz
mov
(bad)
scas
or
les
and
fucomp
fwait
cli
mov
jecxz
mov
mov
adc
nop
xchg
cli
or
mov
mov
push
push
add
jl
push
ins
nop
mov
xchg
add
dec
dec
sbb
xor
fiadd
push
repz
ins
sbb
jmp
push
and
or
xlat
xor
popa
scas
(bad)
(bad)
jle
imul
inc
cmp
cs
psubw
in
scas
or
mov
(bad)
mov
repnz
xor
sar
and
xchg
aaa
aaa
not
cmp
cmp
push
out
fwait
mov
pop
and
mov
call
xor
retf
call
mov
push
and
xor
pop
loope
iret
jo
cs
aaa
fstp
cs
mov
(bad)
dec
push
xchg
ret
out
lea
xor
inc
push
pop
xor
push
(bad)
cmps
xor
sar
je
dec
sub
and
dec
lods
add
bound
add
pop
dec
sub
test
push
push
ret
daa
cdq
mov
fs
xchg
inc
test
mov
test
pushf
mov
or
fs
fld
setp
cmps
je
or
mov
and
and
data16
ins
jo
in
fsubr
aaa
inc
mov
mov
fs
xchg
retf
pop
and
pop
cmp
jmp
inc
sub
in
add
inc
sahf
jnp
out
cmp
mov
pop
and
and
push
xchg
cwde
jne
xor
mov
jecxz
xor
mov
aaa
jg
dec
cmp
loopne
and
in
cwde
inc
outs
inc
cmp
push
arpl
dec
shr
xchg
push
dec
adc
and
adc
cs
jmp
stc
xchg
add
cmp
adc
in
cld
sub
mov
pop
xor
addr16
int
xchg
clc
pusha
ficom
into
mov
mov
jle
fsubr
fsubr
push
cdq
les
jl
pop
ins
stos
pop
xor
cmp
pop
sub
std
mov
cwde
gs
arpl
ja
jb
jge
mov
aam
jno
cmp
cmp
aaa
dec
fadd
push
pop
and
rep
or
xchg
ds
jne
inc
sub
rol
fst
xchg
jmp
cmp
adc
mov
mov
xor
pop
outs
aam
xchg
adc
stos
and
clc
xor
pop
setns
ja
adc
div
jp
jo
ror
hlt
jge
add
das
cmp
sahf
pop
ds
aam
sub
push
pusha
and
jmp
sbb
and
adc
adc
mov
ror
call
cmp
repz
pop
dec
in
aam
out
out
sti
add
dec
fucom
dec
inc
jl
aad
fwait
cmc
(bad)
push
jbe
sub
mov
push
jmp
push
xchg
cld
push
pop
adc
adc
stos
mov
es
mov
into
gs
jb
(bad)
sub
xchg
cmps
dec
imul
xor
cmp
retf
cs
fld
mov
dec
sub
shl
popaw
xchg
pop
dec
cmp
dec
pop
xor
dec
das
ret
dec
clc
add
jbe
out
test
mov
mov
jg
inc
pop
xor
nop
aam
mov
pop
push
jmp
fwait
addr16
mov
push
cmovs
pop
popa
xchg
sub
inc
mov
xchg
clc
in
retf
lea
cmp
scas
and
or
fisubr
push
retf
and
mov
bound
push
nop
sbb
out
jbe
push
out
and
xchg
jb
xchg
xor
cdq
into
icebp
xchg
xor
mov
jb
lds
je
ss
pop
xchg
popf
dec
es
movs
cmp
adc
jne
sti
push
jmp
fcom
call
and
shr
mov
pop
ds
dec
daa
(bad)
xchg
push
xor
mov
sub
(bad)
daa
mov
pop
sub
xchg
ret
stc
pop
push
push
shl
mov
push
test
xor
repz
mov
imul
add
push
ds
push
cmp
push
repnz
dec
jecxz
sahf
enter
sub
xchg
repnz
sbb
(bad)
out
shl
pop
mov
sar
mov
adc
stos
cld
stc
xor
xor
adc
rcl
ret
fs
jae
mov
popa
xchg
sbb
int3
ins
xchg
xchg
jbe
repnz
inc
fdivr
fcmovnb
icebp
mov
arpl
or
mov
sbb
(bad)
xlat
jmp
mov
test
mov
xchg
jnp
xchg
cs
dec
pop
ins
repz
cs
fmul
inc
inc
call
ret
jnp
mov
push
js
pop
fadd
xor
cmp
cli
ss
popa
ret
xor
out
mov
out
out
sti
les
rol
int
pop
cwde
push
lock
sbb
cmp
add
out
inc
jbe
inc
add
scas
mov
jmp
push
dec
(bad)
dec
fild
in
sub
adc
mov
ins
push
mov
mov
xor
dec
inc
push
fmul
cmp
add
loope
bswap
loopne
pop
sbb
test
sbb
outs
and
cmp
jno
loop
push
pop
popf
retf
sub
gs
adc
clc
popf
out
daa
mov
aad
jae
mov
aad
ret
adc
mov
xor
mov
loop
repz
pop
jnp
cmp
inc
mov
dec
pop
fidiv
cmp
sub
or
sub
pop
ds
dec
call
scas
or
push
push
pop
adc
sub
push
retf
popf
jbe
andps
mov
bound
xchg
bound
retf
fnstsw
pop
arpl
cld
(bad)
hlt
cmps
fwait
pop
shl
ja
adc
ja
jno
add
cmp
mov
xchg
mov
lock
and
lods
mov
cmp
cs
and
je
aaa
scas
adc
xchg
retf
dec
xor
push
push
pop
sub
ret
sub
push
push
movs
xor
adc
int3
enter
sbb
mov
daa
sbb
and
xchg
sub
sub
pop
loop
jg
adc
outs
sbb
lods
addr16
push
mov
fidivr
(bad)
jnp
fisttp
outs
out
push
aad
add
in
call
jne
imul
xchg
sub
or
cmp
aad
shr
dec
pushf
sub
mov
rcl
adc
pop
shr
(bad)
cmps
jno
call
cli
mov
xchg
cs
push
dec
scas
add
stos
xor
mov
jns
mov
add
cli
xchg
fild
mov
add
and
mov
push
pop
xchg
or
pop
ins
rol
push
sbb
xchg
(bad)
cwde
dec
dec
dec
stos
mov
aad
data16
mov
ret
mov
jae
xchg
gs
and
ret
inc
adc
(bad)
call
and
xchg
ss
adc
jle
shr
mov
mov
aaa
jb
inc
scas
lods
out
fdiv
jp
popf
mov
add
rol
sub
lods
cli
cmc
xor
dec
in
push
std
imul
iret
or
add
mov
jb
mov
out
dec
aad
mov
fld
daa
cmp
xor
fadd
fwait
lahf
cmp
mov
stos
jbe
xchg
mov
sub
data16
scas
and
(bad)
sar
sub
push
jae
(bad)
push
xchg
xor
or
mov
xchg
ins
jns
jmp
int
mov
(bad)
sbb
inc
popa
jb
in
(bad)
mov
retf
push
mov
xchg
push
loopne
mov
scas
push
movs
sbb
cmp
sub
sahf
xchg
test
xchg
arpl
xor
push
adc
test
mov
ror
mov
and
inc
push
retf
icebp
xchg
sbb
push
aaa
out
cs
test
test
or
mov
mov
test
and
out
cmps
daa
(bad)
aam
inc
stc
outs
int3
in
cmps
sub
or
(bad)
(bad)
bound
mov
sub
adc
and
gs
xchg
inc
addr16
fs
fst
jae
or
push
push
xlat
lods
fisttp
pop
jle
mov
outs
push
sub
mov
int3
(bad)
out
(bad)
icebp
mov
aas
xchg
clc
or
inc
stos
out
pop
xchg
iret
mov
xchg
movs
jecxz
shl
bound
sub
inc
movs
(bad)
daa
xchg
inc
mov
pop
jmp
in
inc
outs
cmp
sub
mov
cmc
inc
(bad)
mov
dec
call
sahf
mov
enter
or
(bad)
lock
test
sbb
xor
popf
sub
pextrw
popf
jmp
test
icebp
aam
jbe
out
out
outs
aaa
retf
pop
sub
mov
mov
icebp
and
movs
popf
scas
dec
in
adc
jnp
fisttp
loop
pop
push
inc
add
jne
sub
stos
mov
xchg
cmc
stc
dec
mov
and
xchg
loope
fcom
inc
xchg
loopne
or
cwde
mov
loope
xchg
pop
lds
push
inc
xor
out
dec
jb
sub
jmp
cmps
xchg
shl
cdq
jae
mov
inc
sub
int
fistp
cmps
retf
cmp
rcl
cmp
push
inc
mov
mov
mov
enter
sub
lods
lods
les
fcmovnbe
inc
mov
shl
mov
and
fs
hlt
xor
jmp
xlat
js
mov
enter
inc
adc
bound
fcomp
(bad)
(bad)
(bad)
cmc
push
xor
cmps
addr16
jno
popa
push
div
stc
daa
mov
imul
ds
scas
daa
add
pop
dec
pushf
jp
and
cdq
(bad)
adc
and
mov
idiv
adc
or
xor
pusha
inc
mov
xor
shl
lahf
xlat
ins
sub
shl
sbb
into
adc
push
sti
sti
mov
enter
inc
lock
int
shr
inc
adc
aas
add
dec
xchg
stos
imul
inc
dec
in
jmp
stos
ins
pop
fnstenv
fs
fcmovnu
mov
push
fsubr
dec
in
sub
mov
(bad)
dec
sub
mov
jb
dec
sub
jnp
stos
push
sbb
push
pop
imul
sbb
outs
mov
cld
test
mov
xor
(bad)
push
gs
loopne
xor
std
pop
or
cld
mov
fwait
push
jns
sbb
xor
xchg
mov
call
arpl
xchg
push
or
or
bnd
arpl
lea
sbb
xor
retf
dec
out
add
in
cmp
dec
mov
push
stos
push
shr
xlat
es
sbb
adc
push
mov
jle
je
sub
(bad)
rcl
rol
in
jne
jae
shl
rcl
mov
xchg
inc
or
pop
xchg
pop
in
jns
push
and
or
mov
scas
(bad)
sub
adc
outs
sbb
out
lds
mov
(bad)
sub
sbb
cmp
in
mov
or
xchg
shl
in
pop
rol
jle
push
mov
imul
pop
jle
pusha
or
retf
adc
shl
dec
fldcw
push
pop
add
add
fsub
pop
out
dec
pop
mov
dec
mov
mov
std
test
movs
dec
mov
clc
xor
pop
(bad)
mov
dec
adc
and
push
(bad)
or
daa
mov
cli
ins
adc
pop
xchg
push
cwde
ss
out
(bad)
mov
sub
adc
dec
sbb
loope
stc
sbb
add
jge
pop
movs
mov
stos
mov
jbe
ror
neg
popa
push
aam
mov
(bad)
and
sbb
dec
std
pop
xor
inc
push
in
xchg
lahf
and
loope
fdiv
adc
add
jb
ins
jnp
push
inc
mov
enter
retf
and
iret
sbb
test
push
mov
jg
adc
mov
mov
pop
jbe
aam
loope
or
mov
sbb
fimul
arpl
repnz
jnp
or
fs
jo
aad
test
test
int3
cmp
mov
mov
mov
inc
sbb
mov
sbb
cmc
inc
fistp
push
ss
sbb
mov
movs
add
div
lea
ret
dec
cvttps2pi
and
dec
shl
mov
pushf
cmp
sub
js
test
inc
lods
xchg
out
fld
cmp
mov
icebp
sbb
out
pop
in
enter
inc
mov
cmps
mov
mov
jne
adc
cmp
mov
dec
mov
mov
mov
mov
shr
dec
fsubrp
jmp
mov
mov
(bad)
leave
call
fs
xor
loope
mov
add
retf
xor
repz
mov
movs
popf
pop
loopne
xchg
dec
inc
shr
out
sahf
add
mov
cmc
daa
pop
mov
pop
sub
loopne
dec
sub
lahf
das
das
mov
mov
(bad)
dec
out
and
cs
pop
cli
push
cld
std
ja
dec
sub
mov
mov
das
push
cmp
leave
addr16
scas
iret
inc
push
lods
adc
js
add
jb
mov
icebp
cmp
add
jmp
sub
jne
jne
imul
ins
adc
adc
iret
sub
xchg
ins
popf
cdq
jl
outs
xchg
sti
dec
clc
aas
int3
adc
std
fs
jbe
ss
imul
mov
cmp
ja
ins
sbb
push
mov
cs
iret
mov
inc
test
jae
mov
(bad)
pop
test
mul
sub
sub
sub
pop
cmc
outs
imul
in
das
rcr
cmp
mov
add
(bad)
repz
push
(bad)
bound
sahf
inc
mov
push
pop
jae
mov
dec
adc
cmp
sahf
mov
sbb
xor
mov
stc
lea
push
(bad)
sbb
and
mov
mov
fwait
or
(bad)
sbb
ficom
mov
push
sti
hlt
dec
cmp
outs
mov
xchg
retf
jns
or
les
jno
in
cld
mov
mov
shr
jg
mov
add
or
xor
fisub
add
mov
test
nop
ret
push
xlat
aad
mov
aam
repnz
cmp
push
cld
fisubr
js
mov
fsub
adc
dec
test
mov
mov
mov
add
inc
mov
int
loopne
adc
jo
in
in
fisub
mov
push
or
jge
jmp
out
inc
loope
retf
hlt
sbb
jns
xchg
das
daa
dec
(bad)
xchg
movs
lahf
push
(bad)
sahf
jnp
cli
jno
mov
push
mov
or
je
add
neg
mov
dec
outs
push
ins
in
adc
inc
push
add
push
stos
add
cmp
push
das
(bad)
icebp
pop
add
fild
fdiv
sub
mov
loopne
cmps
jno
dec
repnz
pop
inc
lods
in
add
stos
ss
outs
jmp
cmp
fs
jecxz
ret
or
mov
jbe
inc
xchg
pop
mov
inc
mov
sbb
cmp
inc
mov
shr
fnstcw
je
es
inc
nop
or
push
jnp
fistp
sbb
push
inc
ja
(bad)
hlt
gs
sub
adc
lods
imul
out
and
sahf
push
dec
mov
sub
add
lods
pop
aaa
inc
dec
fist
movs
(bad)
(bad)
pop
aad
adc
(bad)
bound
sbb
xchg
cmps
(bad)
inc
xor
sbb
sub
cmc
int
jle
sub
xor
pop
mov
popa
in
cmps
(bad)
out
pop
data16
pop
jbe
add
sub
es
jo
(bad)
push
inc
ds
sub
retf
fiadd
push
jmp
cli
and
test
mov
ret
mov
mov
retf
xor
xor
bound
aad
ss
adc
lea
hlt
add
stos
shr
outs
jno
repz
test
xchg
aaa
mov
in
or
lods
add
aaa
sub
cwde
mov
retf
adc
fdivrp
push
cmp
mov
aam
loop
sti
sbb
cmp
lahf
fdivr
fnstsw
or
mov
push
mov
sbb
sbb
mov
push
stc
out
lock
jecxz
shl
sbb
push
ds
dec
xchg
push
cmp
xor
fdivr
shl
fistp
mov
push
retf
hlt
(bad)
adc
movs
les
fld
xlat
mov
gs
sbb
sbb
fstp
fmul
mov
movs
sub
stos
sbb
push
es
movs
push
pusha
sbb
and
inc
add
or
iret
test
dec
mov
cwde
ins
sbb
mov
or
mov
and
aad
cld
fidiv
cmps
mov
jns
shr
movzx
ins
xor
mul
inc
sub
adc
std
pushf
inc
cmp
lods
pop
and
mov
mov
in
push
dec
stos
xor
pushf
and
and
jb
stos
stos
fcomp
pushf
out
clc
shr
add
pusha
pop
pop
sbb
sti
push
or
inc
into
sahf
inc
push
sar
xor
xor
bnd
push
imul
movs
outs
ins
mov
nop
xor
mov
inc
jne
stos
xchg
xchg
fisubr
adc
call
xor
aad
xor
outs
(bad)
out
cmp
sahf
lock
mov
mov
adc
cwde
movs
push
test
pop
add
retf
sbb
icebp
bound
pop
xor
jnp
sar
mov
nop
push
inc
retf
lods
aad
daa
mov
xchg
mov
inc
outs
(bad)
iret
add
ror
mov
jge
mov
fdivr
repnz
call
dec
loop
scas
mov
enter
(bad)
push
mov
ds
test
push
imul
dec
add
rcl
stos
push
movs
adc
jp
movs
imul
jmp
(bad)
fidivr
les
lds
xor
lock
cmps
jns
sub
lea
jo
div
add
int3
rol
enter
imul
psubsb
ror
adc
jge
xor
pop
test
movs
jno
mov
out
mov
adc
mov
daa
(bad)
dec
mov
push
mov
adc
out
add
lock
cmp
fwait
sbb
inc
pusha
xor
(bad)
mov
mov
stc
add
xor
mov
push
movs
push
adc
jecxz
loop
inc
sbb
xchg
aam
fldenv
mov
inc
(bad)
inc
xchg
mov
mov
mov
pop
cld
repnz
dec
(bad)
pop
and
addr16
jae
test
shl
fs
inc
(bad)
(bad)
pmulhw
mov
in
xchg
xchg
scas
scas
xor
mov
fcmove
cs
test
jb
(bad)
js
push
retf
xor
push
xchg
jo
ins
cli
pop
mov
mov
out
jecxz
xchg
dec
repz
popa
cli
and
idiv
pop
fsubr
sub
jbe
jmp
movs
and
pop
dec
adc
loop
jnp
sbb
sbb
mov
xchg
and
fcom
push
mov
adc
cwde
fld
mov
cmps
sar
mov
cdq
(bad)
pop
push
rcl
mov
in
shl
(bad)
mov
dec
xchg
xor
icebp
movs
xor
push
cmc
cmp
mov
mov
into
xchg
and
mov
cmp
mov
jp
adc
sbb
pop
js
add
hlt
sahf
pop
inc
jl
test
test
lods
fild
add
repnz
mov
fimul
dec
cmp
je
pop
push
and
loop
xchg
(bad)
and
or
adc
inc
mov
test
mov
imul
sbb
inc
popa
or
or
xchg
sbb
inc
shl
(bad)
ins
jne
mul
sar
cmp
add
mov
jo
xlat
inc
(bad)
or
cmp
sbb
mov
push
jmp
iret
push
xor
ss
jl
(bad)
xchg
adc
lds
shl
xor
xchg
cmp
xor
fsubr
cld
aam
adc
das
int
out
mov
jp
sbb
rcr
mov
(bad)
add
leave
mov
mov
inc
lods
shr
shr
jle
jl
les
gs
mov
pop
retf
push
inc
test
pop
mov
in
iret
pop
push
std
jmp
call
(bad)
and
aaa
lds
push
add
mov
jb
sbb
nop
adc
(bad)
dec
leave
nop
jae
adc
xor
sbb
lods
and
push
add
out
sbb
xchg
or
xchg
add
adc
and
jp
in
xchg
aam
gs
(bad)
loopne
cld
bound
faddp
or
mov
call
mov
mov
and
mov
inc
rcr
inc
mov
push
repz
imul
cvtps2pi
mov
iret
sub
add
jp
cmp
pop
or
fs
out
dec
call
sbb
in
jns
les
loope
je
retf
adc
xor
adc
js
jmp
and
cmps
add
in
pop
adc
lea
lods
mov
sbb
out
popf
dec
and
fwait
pop
inc
dec
push
pop
leave
or
popa
xor
mov
add
neg
ror
push
inc
add
hlt
mov
lea
call
push
jg
(bad)
into
rcl
push
aam
mov
push
movs
repnz
jns
push
ret
call
mov
out
pop
or
mov
xor
inc
cmp
sbb
mov
mov
jne
mov
jbe
jnp
xchg
aaa
stc
aad
dec
(bad)
enter
bound
aas
(bad)
jnp
jno
mov
ss
cmc
or
cmp
ror
sbb
jo
cdq
cli
iret
shl
aad
addr16
jnp
mov
mov
es
outs
cmps
mov
and
lods
cmp
xor
and
mov
call
movs
mov
pop
mov
xor
mov
push
leave
jne
aaa
jmp
xor
cmp
jmp
xlat
sbb
sbb
ret
xchg
jmp
mov
ins
arpl
xlat
arpl
stc
clc
sahf
push
and
not
fwait
sahf
inc
and
jle
stc
push
inc
mov
js
pop
pop
sub
mov
and
(bad)
addr16
cdq
pusha
sub
inc
mov
pop
stos
retf
mov
frstor
push
cmp
inc
retf
movs
push
into
jg
pop
repnz
jmp
sub
push
or
or
sahf
setno
push
aam
add
push
sub
jne
cmps
cmp
xor
bound
out
xor
dec
out
dec
stos
pop
mov
sbb
call
arpl
pop
lods
add
loopne
or
mov
adc
adc
sub
out
mov
jge
jo
test
push
scas
cmp
sub
ds
jae
add
(bad)
jb
mov
cdq
jl
mov
popf
jb
mov
mov
jle
std
test
rcl
dec
mov
xchg
(bad)
or
dec
mov
or
jg
ins
jo
and
cli
arpl
fsubr
in
aas
(bad)
adc
add
and
push
pop
pop
frstor
scas
mov
out
mov
int
ins
cmp
in
clc
sbb
enter
push
sbb
lea
fidiv
lods
(bad)
aaa
jne
add
mov
lods
mov
jb
jmp
fimul
mov
dec
xchg
rcl
ror
jb
test
std
pop
cs
imul
nop
into
nop
or
sub
inc
dec
inc
pushf
test
sbb
mov
(bad)
pop
xor
jns
cs
or
add
xchg
cmp
mov
(bad)
iret
lock
mov
lds
dec
or
push
jo
ret
and
pop
pop
add
fld
pop
pusha
mov
cmps
js
inc
lock
jns
popf
jecxz
cmp
cwde
mov
mov
xchg
into
sbb
cmp
stc
icebp
xchg
fisttp
mov
sbb
add
mov
jnp
mov
shr
mov
xchg
loope
add
xor
jmp
inc
arpl
push
sub
and
or
scas
call
mov
sub
(bad)
and
push
loopne
xor
cwde
pop
pop
scas
(bad)
stos
and
cmp
add
scas
outs
ror
and
xlat
fsubr
dec
add
test
push
sahf
jno
es
mov
mov
cli
cmp
pop
outs
loop
cld
aas
popa
pushf
std
div
daa
rol
test
dec
sbb
ss
add
xor
cmp
inc
outs
pop
jbe
and
out
xor
ss
pop
je
fldenv
sub
sub
call
cdq
mov
fiadd
mov
add
jg
iret
dec
xor
mov
mov
cld
int3
cmc
mov
sar
push
aam
mov
pop
cmp
dec
inc
mov
stos
fistp
loopne
es
xchg
push
pop
mov
inc
xchg
pop
add
or
pop
jno
iret
mov
iret
jnp
mov
icebp
xor
push
sub
jae
enter
retf
int3
sub
sub
in
push
lahf
push
les
xchg
pop
mov
pop
je
jne
jb
lods
aas
in
test
daa
xor
sbb
lods
test
mov
stos
es
pop
xchg
icebp
cmp
leave
fadd
mov
cmps
aad
sub
push
sub
clc
push
into
movs
xchg
ror
and
xchg
lahf
(bad)
xor
shl
retf
push
add
lods
cmp
jns
imul
push
inc
cld
int
mov
sbb
dec
js
jne
setno
and
jb
sahf
out
retf
jnp
(bad)
mov
imul
cmp
cmp
xchg
movs
cmp
inc
push
inc
fcom
and
mov
mov
add
or
clc
jge
mov
xchg
clc
jmp
popf
xchg
sti
sbb
icebp
jmp
or
sub
push
stos
cld
ds
cdq
xchg
adc
aam
cmp
push
(bad)
in
je
mov
cdq
mov
les
push
out
cmp
pop
stos
and
js
mov
adc
je
or
js
sub
jmp
sbb
nop
arpl
jmp
pop
mov
cmp
adc
sub
scas
push
pop
mov
mov
inc
and
mov
out
push
fisubr
int3
daa
jnp
(bad)
mov
mov
mov
cmp
sub
cmp
stos
xor
mov
rcl
xchg
mov
loop
shl
xor
(bad)
fnstsw
fisttp
jmp
fdivr
sbb
adc
jns
imul
ret
cwde
xchg
popa
or
cdq
imul
add
mov
add
sbb
sbb
sahf
in
je
ret
xchg
imul
mov
imul
add
dec
mov
jb
les
or
clc
fwait
sbb
(bad)
pusha
imul
cs
out
adc
inc
sub
in
stos
cmc
fcom
xor
int3
jb
nop
push
(bad)
(bad)
mov
jmp
pushf
mov
pop
push
or
call
ds
pop
mov
outs
test
std
ja
push
adc
out
pusha
add
push
jns
push
call
std
sub
rol
push
je
outs
(bad)
cdq
mov
cmc
cmc
inc
and
test
dec
bound
cdq
xlat
jg
mov
fisttp
das
imul
aad
ins
push
add
sub
and
inc
mov
cmps
jmp
sbb
cmp
or
retf
and
mov
mov
inc
pop
jecxz
popf
sub
pop
inc
mov
retf
mov
idiv
mov
xor
jmp
and
lea
pop
lds
mov
ins
jo
pop
dec
sub
mov
inc
stos
imul
nop
fst
daa
outs
out
shl
fwait
aad
ret
out
mov
add
inc
iret
mov
jmp
test
sbb
sbb
sbb
test
ins
xchg
jb
pushf
mov
dec
mov
adc
in
cs
mov
fild
jns
lds
pop
inc
xor
xor
dec
fadd
repnz
inc
je
add
mov
sbb
or
xchg
cmc
cmp
cmp
pushf
mov
loop
jo
lds
pop
in
cli
movs
je
in
sub
mov
sbb
les
scas
pop
std
daa
cmp
iret
movs
jmp
out
pop
bound
loop
rcl
add
mov
and
je
inc
div
cmps
out
push
test
xchg
xchg
test
add
fcomp
mov
ret
rcl
and
mov
pushf
test
test
adc
stc
jo
data16
cmp
jecxz
adc
sbb
xor
sub
cmp
das
out
gs
ror
jmp
and
ins
dec
inc
sub
jge
push
mov
adc
imul
fadd
xchg
imul
mov
jne
jmp
fidiv
cli
movs
mov
gs
cmp
shl
stos
adc
test
repz
or
lods
push
ins
repnz
dec
jb
and
mov
in
and
or
jl
and
mov
loop
sub
lods
adc
cvtdq2ps
aaa
push
adc
add
and
jge
imul
or
dec
and
xchg
push
stos
pop
or
dec
xchg
popa
pop
dec
(bad)
inc
daa
jmp
push
sbb
ja
packsswb
cdq
das
fwait
ret
cmp
ss
mov
test
jo
jg
and
add
movs
sub
inc
cwde
stc
movs
or
enter
push
ins
xor
loope
mov
dec
pop
cld
push
test
inc
jne
and
jb
pop
loop
and
sub
mov
enter
cmp
cmp
in
push
adc
(bad)
pop
retf
push
fwait
mov
dec
adc
mov
fwait
aam
inc
pop
not
mov
adc
bound
cdq
loop
test
fstp
xor
jo
dec
jb
or
sub
loope
jecxz
pop
sbb
and
add
inc
dec
mov
sub
cmp
loopne
sub
push
fbld
pusha
mov
sub
daa
sbb
pop
xor
cld
leave
test
aam
lock
jge
call
mov
sbb
add
dec
cmovo
popa
scas
popf
mov
ficomp
fdivr
push
aas
mov
or
(bad)
outs
inc
inc
sub
int
scas
pushf
call
push
add
push
push
push
cmp
and
push
dec
mov
jnp
xor
jmp
mul
test
mov
jmp
mov
add
and
inc
sti
sahf
adc
repnz
add
and
icebp
inc
sar
out
ror
or
nop
loope
or
mov
nop
push
sbb
ins
aaa
or
jg
fcmovnbe
mov
stc
aad
adc
repz
iret
ret
pop
out
jo
cmp
dec
iret
jl
or
jg
frstor
or
push
loope
aad
repnz
push
jo
xor
mov
sti
mov
mov
mov
add
(bad)
(bad)
stc
or
jne
mov
aam
or
jecxz
dec
dec
fxch
xlat
aas
jae
frstor
push
cmp
push
ret
(bad)
cmps
xchg
mov
mov
jmp
xchg
add
sub
dec
add
aas
xor
pop
aam
push
jmp
fdivrp
pop
movs
in
dec
fucompp
dec
outs
pop
out
mov
push
push
lds
jl
xor
stos
sub
xor
dec
add
cmps
enter
loop
call
adc
jl
out
test
sar
mov
test
pop
push
call
or
imul
push
pop
sub
adc
push
aad
(bad)
fcom
xchg
scas
repnz
or
dec
mov
mov
xchg
mov
cmps
inc
adc
push
mov
jl
jae
and
out
gs
lods
pop
mov
push
cmp
ficomp
xchg
add
call
mov
and
clc
pop
cmp
mov
push
adc
inc
cmp
je
shl
(bad)
fisttp
pushf
adc
add
sub
mov
mov
push
mov
and
ins
paddsw
lods
adc
shl
sar
jmp
dec
gs
jge
es
mov
imul
add
inc
dec
push
cmps
mov
pop
ins
jns
(bad)
xchg
je
fdivr
div
or
test
sti
rcl
add
pushw
xchg
push
pop
daa
(bad)
cmp
mov
shr
pop
imul
loopne
sub
xchg
out
sbb
dec
or
aaa
imul
bound
out
es
sub
fsubr
mov
inc
je
js
repz
sar
push
jns
cmp
test
ror
mov
rcr
aad
repz
and
pop
mov
imul
fnstcw
out
or
outs
cmp
int3
mov
push
jns
add
shl
in
adc
aam
mov
pop
xchg
data16
cmp
test
int
xor
mov
xchg
pop
ja
mov
or
or
aad
(bad)
js
mov
lea
cmp
mov
mov
mov
mov
sbb
outs
add
lods
popa
push
adc
jmp
add
pop
(bad)
ja
inc
lds
mov
fisttp
sbb
shl
cmp
ret
shr
push
adc
add
mov
sbb
or
jl
pop
dec
jmp
data16
cmp
jnp
test
dec
out
mov
sar
inc
or
and
cld
(bad)
xchg
sub
arpl
fld
and
mov
jmp
in
test
aas
cmp
dec
xor
jae
lds
sub
jmp
adc
push
fsubp
sbb
int
movs
push
and
sub
push
jle
stos
lods
das
push
retf
dec
into
mov
retf
js
cld
mov
imul
in
inc
push
shl
cmps
pusha
pop
cmp
mov
(bad)
ss
xor
or
clc
push
and
fwait
mov
gs
cmps
pushf
movs
call
jl
xor
je
dec
fiadd
push
fdivr
loope
sub
mov
lock
retf
push
out
pushw
fdivr
(bad)
sub
test
cwde
mov
rcl
pushf
sbb
or
cwde
aaa
test
xor
out
push
es
and
xchg
fdiv
fs
lea
mov
xor
mov
cmps
inc
dec
mov
cmp
sub
cmp
or
div
pop
in
arpl
push
and
jbe
pusha
loopne
xor
enter
icebp
pop
mov
inc
mov
cmp
or
push
ins
sub
iret
xchg
(bad)
sub
jo
xchg
xor
push
(bad)
or
sub
push
(bad)
dec
mov
outs
leave
push
pusha
push
push
dec
fdiv
mov
ja
or
sbb
inc
sub
shr
mov
fimul
pop
mov
mov
adc
jle
stos
das
fstp
cli
cli
lahf
dec
pop
scas
xchg
sbb
ja
fsub
out
cwde
shr
jle
adc
pushf
dec
add
jno
dec
xor
call
scas
xchg
inc
xor
in
jg
stos
sti
xchg
outs
neg
jnp
mov
aaa
mov
push
push
mov
pop
ficomp
push
and
sub
or
push
ins
ins
daa
adc
cmps
mov
stos
cmc
xchg
rcr
mov
push
push
pusha
adc
mov
aaa
jle
mov
jmp
shl
rol
sar
in
push
loope
(bad)
aam
repnz
jmp
mov
sar
inc
sub
jb
adc
inc
daa
(bad)
outs
xchg
xchg
jb
inc
mov
pop
adc
add
fisub
cmp
jmp
leave
and
sub
data16
int
popf
ins
xchg
js
in
xlat
mov
cmp
js
loope
add
gs
fdivr
cmc
push
mov
jmp
adc
jecxz
ins
aas
js
mov
aas
cdq
jno
lahf
ss
bound
call
out
pop
iret
add
xchg
fld
sbb
and
out
pusha
hlt
ret
mov
jno
adc
jb
push
dec
cmp
in
enter
dec
das
bound
add
outs
jmp
push
dec
cmc
out
jne
jnp
jns
test
int3
enter
out
mov
or
add
ins
mov
mov
ja
shr
sbb
call
mov
int3
je
sbb
scas
mov
ret
int
sahf
pop
and
mov
call
loop
and
sub
faddp
cmc
sbb
or
ret
inc
jecxz
sbb
jp
sbb
aam
or
mov
fcmovnu
jns
cmp
inc
outs
clc
repnz
pop
fnstcw
ss
sub
shr
xor
and
cld
push
imul
rol
mov
call
xor
into
or
mov
jmp
bound
iret
sbb
ins
dec
mov
or
stos
neg
cmp
mov
cmp
cwde
sti
push
mov
dec
pop
mov
ja
mov
add
pusha
push
not
mov
stos
mov
sti
mov
and
mov
mov
sbb
pop
xchg
inc
and
mul
leave
adc
cmp
lahf
or
adc
jl
sub
xchg
pop
xor
in
pushf
xlat
dec
jl
stos
sub
sbb
enter
mov
dec
xor
xchg
xor
(bad)
or
leave
repz
add
fnstenv
and
test
adc
ja
mov
pop
adc
add
dec
mov
xchg
xor
xor
cdq
mov
add
push
mov
inc
enter
call
inc
ss
iret
push
sbb
jns
pop
sub
xor
jb
ss
xlat
cs
sub
int
(bad)
cld
imul
and
xchg
push
sahf
test
ins
shl
std
movs
jne
cmp
dec
jmp
and
dec
ret
(bad)
jb
pushf
(bad)
shl
leave
outs
test
push
pop
sub
test
jns
fcom
loopne
mov
mov
jmp
adc
loope
das
cli
fst
pop
sub
lea
out
or
loopne
dec
fistp
adc
ret
sub
mov
test
sbb
(bad)
das
add
cmp
in
(bad)
adc
pop
cli
aam
add
scas
clc
pusha
push
call
into
movs
int3
or
ret
sar
pop
push
cmc
adc
add
inc
jmp
xchg
and
cmp
push
xchg
shl
add
stc
sahf
and
push
cmp
ret
or
xor
cmp
mov
pop
(bad)
out
jecxz
and
sti
sbb
add
jnp
and
push
inc
pop
outs
push
imul
dec
es
ficom
cdq
dec
repz
mov
(bad)
call
test
push
xor
and
jmp
xchg
and
je
inc
sar
ret
lods
mov
mov
enter
into
pop
pop
sub
aaa
adc
and
arpl
fist
in
ss
jecxz
cmp
xchg
bound
jo
push
xchg
icebp
rcr
lahf
push
out
sub
imul
cld
test
jnp
mov
or
mov
sbb
out
call
or
loopne
and
cwde
sbb
add
sbb
mov
add
mov
lods
xchg
test
xchg
xchg
xchg
ss
loop
add
mov
pop
scas
and
shl
call
inc
js
mov
and
jno
rcr
jbe
addr16
jge
xchg
aaa
pop
nop
add
mov
adc
(bad)
stos
lods
int
pminub
mov
cmp
test
fxch
jecxz
jmp
jmp
call
int3
test
hlt
sub
ins
mov
out
lock
popa
call
pop
xor
pop
jge
add
test
in
xor
je
inc
mov
imul
in
inc
fcom
or
inc
hlt
movs
adc
out
rol
xchg
cmp
mov
xchg
or
or
repz
xchg
icebp
cld
test
in
popf
pop
mov
ret
test
je
iret
sbb
sbb
mov
mul
cmps
lahf
sub
stc
sub
rol
add
imul
sbb
sub
inc
arpl
xor
or
mov
adc
test
inc
add
push
sub
adc
dec
lods
xor
leave
mov
push
and
inc
jnp
stc
bound
fwait
pop
repnz
(bad)
fisubr
push
gs
sbb
mov
out
jle
mov
adc
test
jecxz
xchg
frndint
loopne
sbb
sbb
push
jno
or
cli
cmp
add
ss
rcr
ret
icebp
lods
sbb
adc
cmp
dec
fcom
mov
rol
cmps
xor
dec
push
xchg
adc
jp
dec
and
scas
add
pop
test
sub
inc
or
std
lods
sub
test
loop
sahf
stos
dec
mov
in
fs
dec
pop
and
and
call
push
ss
stos
jbe
addr16
pop
ja
pop
add
jecxz
cwde
out
sub
lds
int3
shr
iret
jmp
pushf
cwde
rcr
je
mov
lds
outs
bound
leave
sub
es
mov
or
(bad)
sbb
and
cwde
mov
pusha
movs
outs
int
sub
sbb
and
pusha
test
fdiv
daa
outs
mov
jne
mov
loop
rcl
cmp
xchg
loop
test
adc
xchg
sub
adc
inc
xchg
adc
push
out
bndstx
retf
add
inc
jmp
imul
and
in
test
jge
sub
hlt
xlat
jns
mov
adc
cmp
ror
mov
retf
shl
inc
cwde
jl
test
movs
jnp
lods
call
lods
out
xor
pop
icebp
push
inc
pop
call
popa
ret
pop
je
fs
cmp
pop
sar
(bad)
(bad)
jno
mov
pop
jge
sahf
jbe
ficom
xchg
lods
into
jne
test
xchg
and
lock
mov
dec
inc
push
out
cmp
in
push
pop
sahf
dec
fstp
ret
cmp
mov
cs
xlat
inc
or
mov
(bad)
mov
xlat
lods
dec
push
(bad)
clc
pop
pop
repz
jp
xor
cmp
lods
jb
lock
pop
shr
pop
jo
leave
push
sti
mov
sti
(bad)
push
lock
mov
jbe
outs
sti
lahf
push
cwde
push
and
mov
cmp
xlat
loopne
adc
pop
mov
cli
push
mov
or
pop
dec
ror
xor
mov
push
mov
loope
pushf
ins
loop
mov
jns
(bad)
popf
fdivr
shr
xchg
aad
fcmove
imul
jmp
sub
jnp
xor
xchg
jbe
out
arpl
ret
dec
or
mov
add
cmp
fnsave
(bad)
dec
call
(bad)
xchg
xchg
fild
in
(bad)
jno
lods
movs
(bad)
test
fwait
push
pushf
inc
adc
dec
push
rcl
cmp
je
out
aam
jle
pop
rol
mov
shl
ins
dec
test
scas
cmp
push
rol
xor
xor
or
outs
mov
push
cmp
or
popf
sbb
jno
mov
loopne
mov
inc
jns
cdq
popf
push
add
sub
(bad)
pop
addr16
mov
test
mov
out
rcl
and
fcmovb
add
mov
ins
mov
adc
enter
push
loopne
xor
fistp
inc
pop
mov
add
sar
jl
add
jo
cmps
push
cmp
data16
push
cmp
cmp
mov
retf
fisubr
fnstsw
js
dec
inc
push
pop
scas
push
lock
fs
popa
stos
and
fsub
cmp
push
jmp
jne
mov
pop
test
xchg
cmps
xor
and
es
fcomp
cmp
adc
push
mov
pop
in
jbe
fiadd
dec
ja
and
cmps
out
and
loope
cli
xor
sahf
sbb
or
jno
lea
rdmsr
fdivr
sub
(bad)
call
cmc
repnz
(bad)
push
and
mov
mov
sbb
mov
fidivr
movs
xor
mov
push
xchg
popa
push
sar
jp
inc
pushf
cmp
sub
sub
iret
dec
pop
add
scas
dec
out
lock
popa
ins
and
push
pop
sbb
sbb
and
call
xchg
push
addr16
(bad)
aam
scas
nop
mov
push
fsub
movs
cld
nop
shl
and
sub
stos
cmp
pusha
cmp
inc
jle
cdq
pop
sbb
out
loop
repz
call
outs
cmp
sub
mov
ja
mov
xlat
scas
push
outs
mov
imul
inc
cmps
xchg
in
sar
pop
dec
dec
not
out
int3
in
cmp
push
mov
aas
mov
loop
push
cmc
cmp
mov
arpl
add
cmp
lea
cmc
sbb
mov
push
mov
add
loope
fadd
movs
dec
pop
pop
loope
imul
add
test
mov
jae
mov
pmulhuw
sub
std
in
inc
add
outs
push
loope
frstor
in
sbb
push
icebp
mov
adc
xchg
inc
mov
pop
(bad)
fiadd
sbb
lods
mov
outs
sub
adc
movs
retf
pushf
ins
mov
mov
mov
sbb
mov
push
clc
inc
xor
cmp
mov
cli
outs
lea
lahf
repnz
jg
lock
pusha
popf
mov
push
jl
mov
std
in
adc
push
pop
mov
jbe
push
lea
lock
jmp
(bad)
jns
dec
jg
pop
or
xchg
lods
cwde
rcr
mov
mov
dec
idiv
dec
outs
stos
push
stc
add
dec
xor
adc
sahf
adc
aas
xchg
movs
daa
push
lds
jns
test
push
xor
pop
mov
xor
out
mov
icebp
xchg
pusha
mov
xchg
cmp
cmp
lods
popa
dec
neg
pop
xchg
inc
aad
(bad)
xor
inc
mov
cmc
(bad)
shrd
popa
mov
fwait
ins
sub
jmp
int
mov
jb
jne
mov
cmp
mov
mov
dec
pmaddwd
test
mov
inc
into
dec
mov
xor
scas
and
shl
iret
test
push
fabs
mov
add
scas
jno
clc
mov
inc
mov
dec
and
outs
call
loope
mov
test
sub
cmps
jo
sbb
stc
ror
mul
mov
mov
push
push
adc
mov
aad
jmp
hlt
jns
mov
mov
out
cmp
adc
xor
or
mov
(bad)
and
adc
call
mov
mov
cdq
retf
sub
jbe
es
pushf
cmp
lahf
enter
ins
fst
jno
dec
xor
mov
leave
xor
sub
rcl
out
and
into
stos
fdiv
ds
mov
mov
add
mov
clc
cld
popa
dec
popf
int
mov
inc
push
mov
xchg
das
push
sahf
xchg
sbb
bound
push
pop
push
loopne
clc
mov
lahf
out
push
and
push
int3
add
fadd
push
dec
(bad)
jl
sub
fsubr
mov
cmp
inc
(bad)
retf
loopne
shl
popa
sahf
les
jmp
hlt
pusha
and
popa
loopne
mov
xchg
xor
out
fwait
loopne
and
pusha
xchg
adc
jno
mov
push
loop
(bad)
push
jbe
or
or
or
shl
fisub
je
test
xchg
adc
int
lds
jmp
jb
ret
mov
rcl
mov
xor
nop
sub
xchg
xor
or
push
imul
inc
repz
js
mov
push
mov
cdq
push
mov
ja
mov
ss
cmp
outs
inc
popf
rcr
or
loopne
cmps
shl
and
lea
pop
xor
push
cmp
pushf
sbb
push
add
mov
rcl
bound
mov
mov
jmp
jb
mov
xchg
push
mov
sub
test
test
(bad)
jae
and
mov
lods
cmp
int3
pop
cdq
push
mov
mov
cli
out
xor
inc
jbe
arpl
arpl
dec
jo
push
pop
out
sub
in
aas
sbb
and
sub
sbb
add
add
cmc
imul
cld
clc
adc
daa
xlat
popf
xchg
add
and
shr
imul
adc
scas
in
jno
test
add
loope
fwait
outs
mov
mov
jmp
inc
adc
mov
cli
pop
or
adc
add
mov
inc
pop
cmc
add
rol
dec
je
aam
dec
int
lods
xor
jp
outs
inc
inc
xchg
pop
repz
or
inc
xor
inc
rcl
sub
push
jl
sub
popf
inc
push
mov
adc
fdivr
adc
mov
pop
xor
dec
(bad)
aam
movs
push
dec
sti
std
xchg
loope
adc
pop
mov
inc
fwait
repnz
fld
mov
pop
sti
cmp
xor
pop
add
mov
mov
cmp
xchg
jbe
cmp
mov
stos
icebp
push
pop
ja
jmp
stos
and
imul
xchg
int
mov
pop
push
jecxz
test
cli
int3
pop
shl
out
sbb
xor
xchg
das
loop
test
and
mov
stos
sbb
lods
fisub
sbb
sbb
pop
int3
repz
jno
or
add
call
bnd
jne
xchg
aaa
stc
cld
gs
cmp
test
mov
mov
xor
out
add
inc
std
xchg
pop
dec
shl
xor
mov
jo
push
adc
adc
xor
sti
ret
lods
inc
popf
pop
pop
mov
or
inc
pop
fnstcw
inc
add
repz
mov
xchg
mov
cdq
mov
xchg
mov
movs
mov
xchg
inc
iret
lods
les
push
cmc
sbb
loopne
mov
and
(bad)
sbb
xor
fwait
mov
retf
not
das
std
stc
xchg
imul
nop
je
ins
out
stos
stc
test
call
pop
mov
cmp
fmulp
enter
jge
sbb
mov
xlat
arpl
adc
or
out
and
and
mov
movs
jle
pop
nop
xchg
cdq
ins
jnp
out
ret
(bad)
and
repz
mov
arpl
int
mov
into
lods
out
leave
and
cmps
aaa
lahf
lods
sbb
xchg
les
aas
pop
and
jg
es
dec
hlt
stos
jp
mov
cmps
sub
repz
adc
jmp
or
cmp
push
fisub
cmp
and
xor
xor
lods
add
std
test
mov
ss
outs
lea
cmp
ins
xor
retf
push
test
scas
dec
adc
adc
pop
outs
sbb
in
add
cwde
loope
adc
add
shr
jge
iret
mov
xchg
or
(bad)
outs
inc
test
in
inc
inc
lea
xor
in
push
or
push
fidiv
cwde
enter
mov
add
ds
je
push
push
jecxz
xor
lods
add
test
fmul
sahf
ror
je
push
daa
adc
repz
push
mov
in
add
ss
sub
mov
daa
jb
and
sub
nop
and
mov
mov
inc
sahf
xchg
adc
mov
jle
(bad)
je
rcr
cmc
call
cmp
out
imul
in
jne
pop
in
dec
cmp
mov
and
mov
dec
cld
push
gs
sub
jmp
std
push
popa
mov
cmp
rcl
and
add
enter
test
or
cmp
loop
dec
fld
adc
dec
xchg
jle
mov
cmp
or
adc
aam
cmp
or
stos
push
hlt
ins
mov
xor
pop
std
imul
hlt
js
cmps
outs
push
int3
xchg
dec
sub
ds
inc
cmp
jg
cwde
jae
jb
adc
popf
aad
inc
mov
inc
and
xor
mov
dec
loope
xor
stos
test
mov
and
leave
std
jnp
adc
xlat
fwait
cmp
bound
push
and
out
jno
in
shl
cmp
and
fstp
ret
mov
out
fimul
add
xor
sub
popf
mov
xor
and
mov
sbb
mov
jne
and
(bad)
and
ficom
mov
jge
jl
fisubr
or
jbe
cmp
mov
pop
bound
cmp
jmp
inc
ins
pop
repnz
adc
mov
sub
dec
outs
imul
inc
ret
arpl
aad
sub
dec
cmc
lea
fild
jb
xor
sub
aam
neg
stos
fild
test
xlat
push
push
pop
pop
fidivr
test
push
daa
mov
inc
clc
test
mov
hlt
ins
dec
ret
sbb
xchg
fld
adc
push
adc
hlt
ins
dec
ds
or
loope
fild
mov
loop
loopne
push
pop
bnd
mov
or
(bad)
fwait
aad
lds
scas
xor
in
push
imul
hlt
(bad)
ret
mov
mov
xor
jae
in
push
je
clc
and
mov
repnz
and
inc
mov
fistp
sub
mov
iret
inc
mov
dec
mov
sub
ins
into
adc
jmp
test
cmp
mov
mov
sub
mov
ja
jge
repz
and
inc
jle
add
jg
add
and
mov
clc
jmp
jmp
mov
add
jp
nop
cmp
les
push
adc
jecxz
dec
ja
sbb
popf
(bad)
push
into
fwait
gs
mov
dec
mov
add
mov
sub
(bad)
(bad)
in
pop
in
push
push
daa
pop
mov
sbb
sbb
popf
inc
cmp
test
imul
jne
ficomp
and
cmc
addr16
popa
lods
jg
lea
adc
mov
pop
push
lock
mov
mov
aam
or
cmps
ret
and
mov
xor
sub
xchg
call
xor
call
jp
cmp
arpl
in
cmp
imul
in
cwde
and
sbb
addr16
test
pop
shl
and
pop
sub
clc
div
dec
jne
jmp
adc
movs
push
aam
jg
dec
or
dec
lea
jne
or
cwde
sbb
inc
push
dec
push
dec
add
jg
imul
ficom
and
cmps
xchg
xchg
cwde
(bad)
jl
and
aad
xor
inc
and
lea
outs
gs
mov
lea
lea
(bad)
sbb
outs
pop
mov
daa
dec
sub
sub
inc
rcl
test
pop
sbb
es
cmp
jmp
jnp
sbb
add
out
lods
mov
scas
sti
nop
fwait
jle
push
ja
mov
in
inc
mov
outs
push
shl
jmp
jae
call
sbb
xchg
push
cmps
in
cmp
pop
cmp
cmp
xor
cmps
fs
imul
inc
stos
jae
sahf
mov
pop
mov
or
pop
fld
fstp
xchg
leave
les
push
inc
in
push
inc
or
or
dec
cmp
jae
and
loopne
xchg
test
(bad)
lea
rol
adc
dec
call
(bad)
push
call
jmp
out
pusha
pop
(bad)
js
enter
movs
loopne
mov
out
scas
addr16
pushf
imul
jl
adc
mov
inc
rcr
mov
(bad)
mov
shr
pusha
xchg
xchg
and
cli
das
pop
rcl
outs
mov
push
out
adc
mov
(bad)
movs
cmp
aam
sbb
push
add
sti
pcmpgtw
xchg
aad
push
cs
cwde
shl
fs
dec
shr
pop
int
das
or
(bad)
(bad)
addr16
dec
fadd
push
dec
fnclex
rcl
push
jo
xor
mov
pop
mov
retf
cmp
jecxz
mov
ins
jg
mov
inc
sub
ja
xchg
mov
jnp
cmp
dec
mov
add
call
pop
lods
fstp
mov
cmps
push
pusha
idiv
pop
and
push
push
dec
xchg
jbe
dec
ins
adc
xchg
daa
inc
lock
sub
or
jl
js
shr
inc
mov
mov
adc
pop
mov
and
push
xchg
add
push
xchg
fs
hlt
jb
push
lods
in
mov
repz
fwait
in
pop
xor
xchg
jo
call
push
inc
sub
repz
jp
inc
adc
ror
scas
xor
push
mov
mov
inc
dec
pop
mov
pop
mov
fldenv
das
xor
mov
jp
das
mov
je
mov
loop
add
adc
pop
cmp
icebp
retf
cmps
cwde
cwde
icebp
push
sub
or
inc
push
popf
mov
add
dec
or
int3
sbb
stc
xor
xchg
xchg
cdq
in
xchg
into
mov
iret
jmp
sti
jnp
ret
jne
jb
in
add
or
out
mov
cmp
adc
cmc
pop
jmp
xchg
push
cmp
mov
call
mov
push
cmp
mov
cwde
cwde
and
xor
div
jne
movs
outs
cmp
jmp
outs
add
pop
repz
xchg
jle
repnz
mov
mov
pop
xor
scas
pop
call
iret
cmp
sub
dec
mov
or
aad
mov
dec
push
bound
leave
test
dec
sahf
repnz
data16
push
inc
cmc
inc
mov
xchg
jns
lea
ror
pop
ins
sbb
nop
sahf
mov
pop
aad
fs
cmp
inc
push
jge
pop
inc
iret
cdq
pop
out
xchg
stos
jg
mov
cmp
xor
shl
repnz
stos
test
push
mov
push
rcr
sub
jo
inc
fiadd
mul
ret
fwait
push
push
dec
imul
(bad)
hlt
sub
and
adc
push
jb
pop
mov
mov
mov
adc
or
loopne
xchg
jle
mov
mov
test
cdq
push
imul
push
enter
add
or
dec
inc
aam
sbb
in
arpl
push
(bad)
pop
adc
fsubr
(bad)
aas
das
gs
jnp
sti
cmp
leave
jp
sub
push
bound
dec
push
call
dec
outs
lahf
add
int3
sahf
popa
outs
inc
mov
es
mov
push
out
test
aam
int3
dec
pop
and
(bad)
mul
(bad)
lahf
mov
int
in
cmp
and
xchg
adc
aam
jo
retf
push
loopne
dec
stc
cdq
or
and
mov
add
mov
cmp
movs
div
ja
out
test
cli
pop
xor
and
call
adc
jg
setae
ret
xchg
inc
pop
cmp
xchg
inc
jecxz
mul
int
(bad)
aad
in
arpl
shl
addr16
inc
out
cmps
mov
mov
dec
mov
test
dec
(bad)
in
(bad)
aaa
out
(bad)
out
cmp
dec
neg
dec
xor
adc
gs
dec
scas
cmp
aaa
sub
pop
(bad)
enter
cmp
mov
outs
arpl
push
outs
ds
push
xchg
dec
sub
enter
ja
loopne
call
pop
mov
clc
repz
sbb
hlt
xchg
mov
out
arpl
call
or
push
inc
imul
fcom
jl
and
pop
dec
add
inc
scas
jbe
lds
cmps
lods
ds
or
and
cdq
pop
scas
push
and
pop
add
test
fisttp
jo
sub
lgs
lods
jge
fdiv
adc
mov
jo
icebp
cwde
jecxz
inc
mov
xor
sti
fstp
dec
sub
mov
add
xchg
push
jo
inc
xlat
and
mov
sbb
gs
mov
or
jecxz
cli
lea
loopne
imul
(bad)
sub
js
and
in
sahf
aam
cmps
mov
push
push
pusha
mov
repz
cli
js
xlat
and
cmps
jmp
stc
mov
inc
shr
add
pop
inc
or
lock
xchg
repnz
test
sub
clc
cmp
rol
mov
mov
inc
dec
adc
adc
call
adc
sub
aam
jg
dec
das
sub
movs
sahf
add
add
or
pop
enter
aas
cmps
mov
int3
fstp
cmp
enter
sbb
add
imul
mov
scas
(bad)
mov
cmp
(bad)
addr16
or
pop
rol
bound
and
xlat
xor
xchg
in
cs
adc
inc
mov
add
add
lock
jp
sub
inc
jg
xchg
sbb
imul
jne
cmc
scas
inc
push
outs
xchg
add
jne
push
in
mov
adc
lea
lock
mov
scas
les
loop
pop
push
or
stos
mov
imul
or
jmp
test
call
rep
mov
(bad)
mov
inc
std
arpl
arpl
hlt
jl
ins
fs
pop
mov
push
bound
iret
sub
int
outs
ins
aas
out
int
and
leave
cmp
shr
xor
pop
adc
std
mov
jp
les
data16
mov
push
push
or
push
xchg
mov
das
or
inc
aas
mov
cmp
sub
push
out
mov
stc
mov
cwde
js
into
mov
stc
mov
push
mov
add
sbb
push
sub
jne
clc
push
leave
les
mov
outs
mov
(bad)
test
mov
and
lds
lea
in
stos
xchg
dec
inc
mov
push
adc
stc
movs
jp
imul
cmp
(bad)
sbb
leave
aas
inc
sbb
repnz
das
(bad)
mov
ins
outs
dec
adc
push
cli
(bad)
fcmovne
test
rol
adc
shl
push
jno
ja
cs
inc
add
cmp
out
and
mov
js
dec
xchg
and
inc
int3
mov
dec
jae
loopne
scas
inc
into
neg
ds
mov
call
pusha
xchg
sahf
push
ret
pop
jae
in
mov
xchg
jge
jecxz
mov
sbb
or
pushf
mov
dec
adc
push
mov
(bad)
dec
stc
mov
xor
pop
mov
inc
mov
push
or
stos
or
jge
mov
int
xlat
in
in
jnp
or
add
aas
ja
jle
push
data16
adc
adc
push
daa
sbb
mov
dec
daa
sub
out
cld
shr
bound
(bad)
movs
xor
or
pop
push
lods
rcl
pop
cli
mov
addr16
dec
dec
and
(bad)
cdq
and
xor
adc
inc
mov
sti
imul
dec
jb
and
inc
cmps
xchg
cmp
es
push
js
or
(bad)
xchg
dec
mov
popf
arpl
mov
cmps
mov
jmp
inc
popf
sub
push
jecxz
dec
and
call
dec
cmc
sbb
jmp
xchg
mov
jg
les
retf
ret
fnstcw
div
retf
jbe
and
xchg
xor
mov
mov
sahf
fs
inc
fwait
dec
xor
call
or
je
js
test
les
push
cdq
cwde
sub
and
ss
movs
in
mov
push
jns
inc
adc
popf
shl
sub
ficom
sub
xchg
repnz
dec
push
jmp
sahf
sbb
bound
inc
inc
call
and
push
ins
mov
mov
test
retf
shl
ja
pop
(bad)
or
dec
mov
call
lea
or
lds
iret
aaa
jmp
ret
pop
stos
inc
je
dec
add
test
push
inc
push
mov
outs
mov
xchg
into
inc
push
out
data16
ss
add
push
sbb
(bad)
call
out
icebp
mov
mov
mov
cld
mov
adc
sbb
outs
push
cld
xchg
setns
int
je
xor
sbb
xchg
xchg
xor
sahf
test
std
sub
int
test
xor
addr16
mov
mov
retf
into
fldenv
jne
(bad)
cmp
jnp
push
adc
or
adc
xchg
call
xchg
nop
dec
sub
fsub
movs
mov
sbb
lahf
aaa
repz
mov
ret
inc
pop
ins
pop
sbb
xchg
mov
push
dec
jl
push
jl
xor
out
pop
jae
pusha
pop
cmp
sbb
pop
cmp
ret
sub
sahf
fild
mov
or
push
mov
clc
loopne
int3
xchg
scas
inc
int
dec
xlat
cmps
inc
pop
in
call
fidiv
and
test
xor
leave
cmp
repnz
inc
push
(bad)
sub
sub
jmp
dec
mov
pusha
popa
push
pop
inc
pop
xor
pop
inc
adc
cmp
bound
jb
jle
jle
mov
fmul
inc
mov
mov
cdq
pop
fadd
dec
xor
mov
test
and
xchg
add
fsub
mov
daa
sbb
pop
lds
scas
repnz
and
push
push
neg
and
or
addr16
xchg
push
test
jno
lock
mov
cld
mov
pop
pop
pusha
mov
mov
sub
cmp
retf
add
gs
add
xor
(bad)
cmp
lea
daa
jmp
in
test
push
mov
mov
sahf
pop
push
push
xor
jecxz
call
addr16
in
dec
retf
mov
jmp
aam
mov
xchg
mov
cmp
sbb
das
cmps
push
scas
sbb
xor
push
jae
nop
mov
mov
cdq
inc
sub
mov
jae
std
(bad)
subps
dec
lea
pop
ja
arpl
xor
xlat
or
adc
adc
daa
stos
adc
pop
xchg
mov
in
dec
test
repz
add
mov
ins
jmp
sub
es
sahf
test
(bad)
mov
mov
dec
ds
neg
cdq
sbb
adc
xchg
ror
inc
sub
scas
daa
cli
and
call
or
xchg
mov
add
sbb
cmp
add
mov
inc
cwde
add
pop
mov
add
and
push
sub
mov
outs
out
sub
loope
call
into
hlt
push
or
push
pop
retf
jnp
inc
mov
iret
sahf
push
movs
adc
mov
mov
xor
jl
xor
pop
das
dec
mov
adc
mov
jne
ins
cmp
arpl
loop
lea
add
sahf
jp
jns
jbe
mov
das
sar
inc
mov
push
add
out
push
adc
test
mov
in
dec
inc
in
pop
xchg
fdivr
push
cdq
movs
add
ficom
or
cwde
inc
pop
int
out
sub
add
mov
mov
jge
mov
xor
nop
rcr
and
aam
jecxz
fild
xlat
adc
add
fdivr
inc
std
mov
ret
shr
xor
(bad)
pop
sub
(bad)
shl
dec
dec
cmp
inc
repz
push
std
jp
std
xor
test
bound
shr
ins
cdq
jle
lods
jp
mov
in
inc
xor
jl
gs
or
xor
mov
hlt
inc
daa
fnstsw
xor
in
xor
xchg
cmp
sub
xlat
shr
cmp
retf
call
or
icebp
out
xor
pop
xor
cmp
fucomip
in
and
sbb
int
pushf
push
jge
popf
lahf
or
cmp
push
jmp
lea
xor
dec
les
test
std
xchg
push
(bad)
div
mov
pusha
mov
jnp
adc
call
adc
and
and
pop
fld
scas
sbb
(bad)
mov
sub
aad
pop
stos
jbe
fisttp
cdq
imul
add
lea
mov
pop
ins
xor
popa
and
inc
repnz
or
cmps
shl
loop
mov
or
jne
pop
out
outs
shl
pop
push
cmp
into
adc
xchg
pop
and
or
stc
imul
fsub
cmps
cmp
(bad)
pop
sbb
cld
mov
cmp
and
xor
in
ficom
xchg
scas
jmp
call
lods
xchg
jnp
dec
es
sbb
ins
call
dec
add
pop
add
repz
mov
jge
pop
xchg
dec
movs
mov
cmp
dec
cmps
aas
adc
jle
cld
xor
cmp
data16
inc
push
or
sub
scas
hlt
pusha
(bad)
scas
cmp
clc
add
mov
adc
fmul
pop
(bad)
ds
jge
xchg
or
sub
ins
daa
and
sti
(bad)
pop
dec
xchg
mov
push
enter
scas
ret
xchg
mov
imul
into
dec
je
cs
out
mov
push
xor
retf
enter
in
mov
adc
xchg
in
aam
jge
ret
test
inc
adc
sbb
shl
rep
add
aad
xlat
mov
or
pop
aad
scas
cmp
jle
push
push
jp
mov
pusha
in
sbb
dec
lea
les
sub
cmp
aas
xor
mov
fist
jae
jmp
repnz
cs
std
xor
aad
aaa
mov
aam
xchg
fs
push
mov
pop
lock
mov
out
pop
and
ret
in
sub
mov
jns
mov
mov
mov
push
push
ds
xchg
mov
xor
pop
xchg
adc
mov
mov
and
cmp
loope
test
jmp
in
and
push
arpl
xchg
rcr
sub
and
lds
mov
fldenv
and
icebp
stc
rcr
js
cli
aad
test
cli
pop
jmp
sub
dec
xor
leave
mul
lods
mov
bound
stc
jno
setle
jne
fwait
test
int3
mov
and
push
das
addr16
hlt
ins
sbb
and
mov
loop
cmp
and
dec
nop
mov
xchg
stc
shl
ins
cmp
xchg
data16
sahf
retf
cmp
cmp
scas
in
mov
jecxz
repz
dec
xchg
aaa
aas
hlt
cmps
push
addr16
adc
lods
add
ss
mov
xchg
outs
inc
in
fbld
movs
add
adc
mov
xor
sub
repz
inc
mov
inc
test
push
xchg
in
inc
push
test
aad
mov
cwde
push
jge
mov
cmp
cmp
bound
test
loop
rcr
ja
sar
les
push
jge
or
int
mov
fwait
fs
sub
pop
adc
fild
ss
or
jo
dec
popa
fucomip
jl
dec
jae
shl
adc
sbb
in
push
pop
or
dec
arpl
jae
xchg
or
xor
mov
fisttp
test
mov
and
repnz
dec
jno
mov
cmps
mov
sbb
xchg
sbb
jns
cmp
xchg
mov
mov
and
mov
sar
or
jg
sub
jg
and
cmps
ins
pop
test
add
icebp
and
push
rol
mov
sbb
xchg
(bad)
shr
fs
mov
in
icebp
sbb
sbb
xor
xchg
sbb
sahf
stc
fnsetpm(287
xchg
cmps
lds
aam
shr
enter
fbld
pop
sbb
add
mov
pop
sar
jb
sbb
retf
push
mov
in
xor
mov
jmp
daa
dec
inc
mov
adc
ins
cmp
fisubr
jb
xchg
popa
lods
xor
pop
inc
xchg
shl
cli
inc
and
not
jnp
test
aaa
sbb
mov
(bad)
jmp
sub
arpl
pop
sbb
test
lea
mov
jmp
adc
loopne
jne
or
nop
jo
push
dec
add
push
sbb
xchg
adc
jmp
js
push
iret
jge
inc
xor
mov
in
inc
shl
jb
icebp
into
dec
cld
call
or
aam
sbb
fbld
lods
stos
push
mov
add
fbstp
jecxz
sub
stos
pop
sbb
jp
cli
repz
ss
inc
aam
ror
pop
rcr
xor
inc
push
mov
inc
or
cmc
mov
or
adc
xchg
sbb
movs
nop
je
mov
cmp
pop
(bad)
bnd
dec
mov
(bad)
lock
adc
dec
cmp
aas
call
push
ins
push
call
lock
mov
mov
lds
jmp
pop
and
jb
inc
mov
push
push
fsubr
icebp
rcr
xchg
jmp
int3
mov
sbb
addr16
adc
inc
mov
enter
sbb
idiv
dec
sbb
in
sbb
add
xchg
adc
div
jmp
mov
jmp
xor
data16
cmps
shl
xor
jl
mov
pop
and
loop
adc
mov
mov
fist
jnp
sub
mov
retf
jmp
and
inc
adc
fmulp
mov
mov
lock
jbe
rol
movs
sbb
push
loope
(bad)
pop
mov
adc
add
ins
jnp
add
sub
jl
jb
lahf
mov
lock
ficom
fbstp
das
ins
enter
jl
fsub
sbb
enter
xor
in
push
jecxz
lds
clc
sbb
adc
ds
and
(bad)
lock
fdiv
inc
scas
out
or
in
mov
jmp
mov
and
cli
cmp
icebp
ss
out
sub
add
leave
rol
cmc
jnp
jmp
jno
repnz
movs
je
shl
je
adc
aas
cmp
push
mov
jne
(bad)
es
dec
pop
adc
nop
aaa
inc
adc
outs
dec
mov
xchg
lods
in
cmp
sahf
or
push
and
retf
ret
(bad)
dec
inc
xchg
mov
adc
cdq
jmp
ss
xchg
shr
out
inc
and
mov
mov
sub
les
xchg
sbb
xchg
push
and
and
inc
or
scas
lods
push
and
push
sbb
push
cmps
inc
inc
sahf
jmp
js
mov
pop
retf
and
jp
repz
into
dec
mov
bound
adc
xchg
mov
mov
mov
mov
pop
xor
push
and
(bad)
push
xchg
jg
pop
or
cmp
pop
or
and
das
outs
iret
adc
adc
addr16
das
xchg
sbb
int
repz
ja
or
retf
call
test
xor
test
popf
fs
fld
shr
dec
loopne
jno
loopne
cmp
dec
repnz
and
and
sahf
jle
sub
sub
xchg
xor
push
test
mov
cmp
adc
or
popf
or
dec
cs
jle
pop
sti
and
xchg
xor
js
pushf
jno
enter
inc
enter
inc
push
sbb
adc
sub
pop
mov
and
adc
push
dec
repz
jmp
xlat
sbb
xchg
ja
mov
dec
dec
jle
inc
mov
lahf
mov
rcl
fnsave
push
pusha
popf
inc
scas
dec
shl
iret
mov
xlat
or
and
pushf
loopne
sbb
(bad)
mov
mov
sti
ins
cs
inc
mov
(bad)
push
test
mov
push
call
(bad)
cmp
xor
mov
enter
pop
mov
jnp
iret
mov
mov
ret
xor
mov
mul
sbb
lods
mov
sub
js
retf
cdq
cmp
and
xchg
clc
inc
pop
add
leave
inc
lods
add
jmp
(bad)
push
inc
iret
push
js
stos
bound
outs
mov
comiss
in
pop
(bad)
aam
push
mov
add
adc
push
xor
jmp
xor
outs
mov
mov
call
lock
test
(bad)
fcos
dec
shl
rcr
frstor
mov
add
cld
inc
mov
or
fcmovnb
add
inc
adc
sbb
test
adc
movs
xchg
cmc
push
push
jle
addr16
mov
ret
stc
inc
mov
jg
retf
or
push
hlt
inc
fdivr
test
sub
add
js
aaa
test
add
aad
shl
cli
icebp
jno
lahf
loopne
aaa
push
repz
icebp
fst
int
mov
add
cmps
(bad)
fsub
mov
inc
push
mov
mov
or
pop
aaa
inc
sar
iret
sbb
out
ret
or
xor
pop
shr
jl
aad
(bad)
adc
push
loope
inc
and
test
push
je
outs
ret
fisub
sbb
jp
dec
fstp
cld
sub
jge
push
movs
lods
add
imul
xor
sbb
stc
mov
xor
jecxz
inc
pop
and
(bad)
adc
fwait
sbb
or
inc
mov
fnstenv
into
push
(bad)
daa
nop
retf
dec
movs
fld
mov
pop
xor
fldenv
push
dec
ret
adc
cmp
dec
jns
daa
inc
cmp
(bad)
cmps
xchg
inc
sub
cmp
cmp
sbb
movs
jmp
push
fsubr
push
and
in
jmp
xlat
fnsave
add
adc
add
aas
pushf
sub
adc
sar
mov
hlt
mov
and
cld
lock
sar
retf
jb
outs
cmp
jecxz
ins
jns
lds
mov
ins
fs
das
adc
jne
(bad)
adc
add
push
rcr
pop
test
pop
dec
outs
nop
das
pop
scas
aaa
and
pop
int3
push
push
dec
fbstp
dec
popa
shl
scas
out
inc
sub
aad
add
xlat
add
lock
out
xor
adc
outs
xchg
(bad)
popf
add
xor
adc
mov
bound
clc
mov
or
adc
int
fild
retf
repz
fadd
sbb
enter
pop
cdq
(bad)
test
shr
and
mov
inc
data16
(bad)
(bad)
(bad)
es
xor
lea
fnsave
xchg
cdq
repnz
imul
cmp
push
adc
xor
mov
xor
jmp
cld
xchg
lea
es
(bad)
lahf
out
jecxz
lock
cwde
adc
dec
mov
jo
sbb
or
pop
jle
cmp
or
js
pop
push
out
add
retf
fiadd
mov
sahf
shr
inc
daa
iret
pop
(bad)
arpl
xor
mov
pop
retf
add
mov
outs
pop
cmps
pop
or
shr
std
rcr
je
mov
sub
and
ret
sbb
adc
sub
xor
mov
fidivr
fcomp
pop
js
ja
in
retf
call
cmp
movs
cmp
adc
cmps
popa
retf
sbb
dec
shr
jnp
push
jbe
(bad)
mov
rcl
jns
lods
lods
in
ret
xor
sub
test
sub
cwde
fiadd
loope
xchg
in
mov
mov
push
mov
stc
pop
pop
mov
neg
call
push
test
pop
cmp
mov
and
cdq
fs
add
cmp
test
adc
pop
test
lahf
lahf
pop
in
lods
push
cmps
es
popa
rcr
and
push
sub
std
inc
xchg
iret
das
mov
fwait
mov
jns
and
aad
dec
mov
mov
mov
jnp
in
adc
ret
icebp
dec
dec
add
and
and
mov
xchg
mov
lock
das
push
push
ds
dec
aad
sti
and
mov
dec
cmp
nop
xor
int3
loop
inc
retf
in
xchg
or
out
call
bound
fadd
in
mov
inc
mov
jp
arpl
push
sub
or
inc
ds
adc
sahf
pushf
hlt
out
stc
or
shl
xchg
mov
fisubr
ins
fbld
(bad)
mov
aad
sbb
loopne
lahf
test
mov
mov
into
in
bound
movs
xchg
mov
xor
rcl
inc
sub
cmc
adc
and
fist
xor
int3
pop
ins
icebp
bound
data16
jb
sub
(bad)
jmp
inc
mov
in
cmp
dec
icebp
mov
scas
sbb
xor
or
(bad)
inc
stos
sub
int3
sub
add
xor
cmp
inc
mov
add
and
jns
js
loopne
in
repnz
pop
jae
or
(bad)
push
addr16
ret
out
inc
loope
lahf
cmc
ds
aaa
jnp
and
mov
xchg
pop
pushf
adc
push
out
inc
in
movs
mov
sti
and
xchg
inc
(bad)
shl
mov
leave
mov
dec
adc
movs
jb
fnstenv
fst
or
fdivr
loop
xor
dec
push
outs
scas
adc
imul
lds
jp
push
es
les
pop
leave
xchg
add
or
xor
repnz
out
dec
lds
(bad)
repnz
cmp
(bad)
mov
(bad)
and
xor
ja
and
jmp
mov
out
fcomp
(bad)
xchg
mov
fistp
(bad)
sbb
mov
xor
add
adc
sbb
popa
mov
adc
add
xchg
cmp
xchg
dec
cld
mov
inc
mov
loop
or
mov
cmc
arpl
mov
ja
add
inc
fwait
nop
mov
jo
jmp
lods
xchg
js
test
mov
(bad)
test
mov
std
arpl
inc
bound
sahf
adc
inc
cmp
add
into
dec
mov
add
imul
ror
fwait
stc
in
out
push
movs
sbb
int
push
xor
jmp
sub
sbb
sub
pop
add
jl
fdiv
jb
dec
rol
mov
and
or
les
cs
inc
jno
sti
scas
dec
je
dec
pop
jge
out
or
stc
fldpi
jge
dec
outs
mov
jae
(bad)
sub
neg
inc
test
call
sub
fwait
movs
dec
popf
clc
ret
mov
pop
push
and
and
pop
cmp
mov
dec
sbb
or
jg
xchg
test
je
cs
mov
sub
dec
iret
out
int3
xchg
pop
js
xor
movs
push
xor
cmp
mov
sbb
and
push
scas
jp
push
fistp
inc
cmp
xchg
jbe
xchg
pop
xor
stc
sbb
xchg
pop
push
mov
push
xor
retf
xchg
push
pop
sti
(bad)
jae
pop
lahf
inc
cmp
fst
sub
test
push
int3
rcr
cs
ja
aas
pop
lea
mov
pop
pop
add
mov
or
push
mov
icebp
sbb
adc
jno
jbe
aam
sti
loopne
aaa
adc
dec
mov
cs
dec
mov
lods
jnp
fist
ss
lods
jl
mov
or
cmp
inc
xchg
push
sbb
inc
sar
ret
mov
push
mov
mov
ret
xchg
mov
out
ror
dec
sbb
(bad)
out
(bad)
stos
das
int
pop
rcl
sbb
jge
loopne
xchg
fs
dec
add
inc
lods
test
mov
loop
jnp
xchg
jbe
cmp
jns
mov
jae
jmp
xchg
fimul
ret
inc
inc
lods
cs
or
push
xchg
mov
xor
inc
pushfw
adc
or
aad
cmps
lea
cmp
dec
repnz
pop
pushf
ja
int
aaa
xor
mov
cli
and
pushf
add
pop
(bad)
test
xchg
cmp
sbb
cmp
retf
loope
lea
cmp
jmp
ret
or
js
cmp
dec
lods
out
pop
sar
or
sub
adc
jns
xchg
rol
jmp
adc
jmp
cmp
lahf
ficom
test
sbb
addr16
aam
cmove
jecxz
jl
jno
test
or
push
bound
fbstp
iret
cmp
cmp
pop
or
loopne
and
xchg
cmp
fidiv
in
les
lds
add
test
mov
fcmovnb
stos
adc
sbb
ss
mov
mov
sub
(bad)
xor
repz
jmp
inc
fcom
pop
dec
xchg
shld
gs
mov
jns
hlt
sub
ret
mov
popf
idiv
cmps
in
mov
push
cmp
movs
in
enter
popf
loopne
addr16
mov
xor
imul
ds
jl
xor
mov
icebp
cwde
pop
ins
fstp
dec
sahf
push
vpshab
pop
sbb
mov
iret
mov
loopne
dec
ror
sbb
sbb
test
mov
push
dec
dec
add
add
ret
push
jo
outs
pop
jnp
xchg
cli
pop
or
jmp
sti
adc
cmps
dec
push
leave
call
fdivrp
(bad)
imul
fst
inc
out
in
(bad)
add
mov
cmp
push
hlt
push
pop
cmc
cmp
icebp
pop
mov
sar
or
xchg
jo
shl
and
les
xor
xchg
push
popf
xchg
sub
and
cmp
adc
fwait
stc
repnz
sub
xor
pop
movs
pusha
sbb
lahf
add
jl
and
sub
push
inc
test
sbb
in
lock
loope
stos
mov
out
push
and
test
mov
adc
sar
dec
dec
leave
jecxz
(bad)
retf
out
cmp
retf
xchg
imul
mov
shl
inc
cdq
jp
or
push
cs
adc
push
sub
loop
pop
movs
cmp
mov
call
jb
mov
pop
dec
test
addr16
js
push
sub
daa
and
in
sub
ss
push
ficom
sti
pop
in
retf
mov
data16
mov
out
clc
stos
fst
cmp
dec
call
add
sbb
and
xor
mov
ins
cmp
dec
ds
shl
fcom
mov
cld
jbe
cs
push
aaa
das
leave
xor
loope
sbb
and
gs
js
ja
jne
mov
cdq
call
fld
icebp
jns
into
adc
movs
dec
pop
sbb
sub
hlt
cwde
xchg
or
stc
mov
or
mov
inc
addr16
sbb
mov
add
std
hlt
inc
repnz
icebp
clc
das
sar
fisttp
xor
cmp
dec
daa
(bad)
fldl2t
push
dec
push
mov
outs
cmp
ins
xchg
retf
cmp
fisttp
pop
inc
sub
pushf
add
pop
xchg
leave
inc
sti
fistp
movs
sbb
push
push
jnp
pushf
mov
rol
sub
sub
xchg
and
mov
icebp
xchg
int
fsubrp
popf
add
mov
cwde
jp
ins
test
rol
add
(bad)
push
dec
sub
leave
push
mov
out
jmp
dec
mov
lods
jmp
push
(bad)
mov
xchg
cmp
sbb
aas
mov
movs
adc
push
outs
shl
fdivr
add
shr
pop
inc
mov
fild
cmps
push
mov
aad
add
lock
lods
mov
sub
inc
sbb
retf
arpl
jne
pop
mov
clc
int
addr16
pop
and
mov
and
sub
fcom
add
test
cmc
int3
popa
mov
pop
mov
mov
inc
shr
ss
xor
(bad)
aas
sub
add
adc
test
pop
push
sbb
or
aas
stc
(bad)
int3
fdiv
fistp
jmp
mov
and
(bad)
jnp
cdq
adc
test
inc
inc
das
sub
(bad)
int
cmp
push
aad
cmp
(bad)
loope
or
fcmovu
cmp
sbb
xlat
cmps
out
cld
xor
inc
xor
cld
aas
ja
out
xor
jae
jmp
xchg
enter
pop
and
mov
int3
push
mov
hlt
add
mov
mov
pop
(bad)
jp
fst
mov
sahf
sbb
mov
lods
call
sbb
or
mov
in
adc
cmp
pop
pop
std
adc
out
cmp
add
sub
jne
loopne
cmp
lock
cmc
rol
xchg
dec
cld
fisttp
pop
je
jnp
mov
inc
outs
(bad)
(bad)
mov
in
(bad)
push
arpl
pop
mov
repnz
push
adc
add
mov
adc
adc
retf
aaa
cmps
call
js
test
adc
jne
inc
xchg
mov
mov
or
and
xor
fnstenv
adc
ror
ret
and
rcr
mov
push
xchg
jb
xchg
or
(bad)
jl
pop
mov
or
ss
stos
adc
sti
xor
popa
jae
add
arpl
ss
into
adc
dec
jecxz
sar
cmc
xchg
shl
or
lahf
mov
push
jno
mov
sbb
ret
mov
out
pop
dec
inc
xchg
fcom
add
or
pop
addr16
hlt
pop
cwde
mov
fs
dec
add
dec
sbb
xchg
data16
xchg
adc
retf
imul
loope
cld
xchg
add
js
fld
push
lods
in
imul
adc
das
dec
in
dec
sub
imul
mov
mov
test
mov
(bad)
das
xchg
sahf
daa
sub
sub
daa
jns
cmp
outs
retf
adc
xchg
jno
sahf
pop
and
addr16
push
xchg
push
xchg
fimul
cmps
cmp
dec
cdq
jl
push
retf
cmps
pop
addr16
mov
push
das
pand
add
push
(bad)
add
iret
cld
mov
or
add
xor
push
std
mov
sbb
jmp
stos
jmp
mov
pusha
arpl
cld
repz
pop
nop
jb
and
push
dec
sub
dec
scas
shr
mov
jmp
or
movs
mov
cmp
jg
cmp
push
push
mov
aas
push
fsub
sub
ins
adc
mov
jmp
paddq
(bad)
or
mov
push
mov
dec
xor
pop
xchg
mov
mov
mov
cmp
push
rcr
imul
push
loope
std
lods
sub
pop
ja
xchg
mov
ret
fwait
cmp
push
jbe
mov
cmps
ret
icebp
clc
adc
lds
test
cmps
pop
jns
aad
mov
inc
pop
and
dec
leave
fsubr
fidivr
sub
pop
cmp
fnstenv
aam
xchg
inc
inc
inc
dec
pusha
out
sahf
jg
and
xchg
mov
add
(bad)
mov
push
aaa
xchg
lock
mov
inc
aaa
jmp
mov
lods
hlt
arpl
push
imul
dec
dec
mov
xchg
mov
dec
les
push
mov
sahf
daa
dec
movs
mov
retf
iret
mov
stos
je
cmps
cmp
jle
(bad)
pop
xchg
jae
add
nop
in
push
loope
ins
(bad)
adc
sbb
mov
ret
hlt
ror
fnstenv
bound
hlt
outs
ror
fidiv
jae
xchg
(bad)
fld
test
or
dec
(bad)
pop
repz
cdq
std
push
sbb
loope
xor
ficomp
mov
fadd
dec
jmp
aad
mov
rcr
xchg
add
sbb
arpl
inc
imul
pop
inc
add
(bad)
fsubr
xchg
retf
xchg
and
xor
ins
aas
test
stos
test
cmc
neg
fmul
cmp
sti
(bad)
loop
je
and
xchg
xchg
inc
mov
mov
lods
dec
or
cs
inc
mov
pushf
int3
scas
jmp
inc
sub
fimul
fwait
and
test
dec
sub
(bad)
jns
dec
ret
das
sub
or
scas
ds
(bad)
mov
lods
add
addr16
loop
data16
ss
jbe
in
ja
cmc
inc
daa
movs
pop
js
(bad)
pop
ret
jns
xor
jl
jge
dec
pop
ficomp
test
jmp
adc
jmp
sub
jmp
aas
mov
push
pop
jg
mov
(bad)
test
sub
popf
es
cli
xor
and
sub
dec
cmp
inc
cmp
int
pop
pop
sbb
ficomp
call
or
ret
add
pop
hlt
outs
mov
hlt
nop
jae
sub
in
addr16
nop
ss
data16
(bad)
push
loope
(bad)
cmps
out
out
aam
add
xlat
mov
xchg
std
mov
(bad)
stos
mov
sbb
jne
sbb
leave
xchg
ss
xor
inc
ret
push
test
lods
mov
shl
jle
nop
shr
sahf
sub
in
jl
jp
sbb
push
xor
mov
jg
mov
cs
in
les
xchg
cdq
adc
xor
inc
push
sub
jmp
stos
jb
dec
cmp
jnp
aas
cmp
jmp
into
xchg
cmc
mov
cmps
push
data16
leave
mov
pop
sbb
pop
fadd
mov
cmp
addr16
enter
lock
jmp
jmp
dec
mov
shr
imul
xchg
imul
adc
mov
xchg
xchg
ins
loop
stos
outs
xor
pop
jge
mov
sub
jns
shl
cmps
scas
test
in
or
inc
push
mov
inc
fist
push
xor
jno
shl
fisttp
push
in
mov
into
(bad)
cmc
cmp
push
out
das
mov
(bad)
rcl
xchg
mov
rol
dec
adc
nop
iret
fdivr
aaa
xlat
add
mov
pusha
nop
bound
mov
cmp
mov
sahf
or
xchg
jmp
adc
jl
cwde
pop
inc
cwde
adc
pop
push
imul
cmp
mov
pop
pop
jp
push
es
setne
push
add
ins
push
jmp
imul
sar
sub
mov
mov
and
jle
xor
rol
dec
sub
in
mov
aaa
iret
fstp
and
data16
call
adc
sbb
(bad)
imul
pop
or
ror
push
mov
inc
cld
icebp
movs
addr16
pop
pop
pop
pop
push
(bad)
mov
into
lds
fisttp
ds
xchg
xchg
aam
pop
imul
sub
int
mov
daa
daa
or
jbe
xchg
sar
enter
gs
cmc
mov
adc
rcl
jle
xchg
sub
std
clc
(bad)
sbb
mov
mov
inc
lods
fnstenv
sub
call
cmc
je
scas
mov
scas
rcr
adc
inc
dec
jae
xchg
and
pusha
push
fwait
in
xlat
pushf
in
xor
ficom
mov
pop
mov
(bad)
pop
call
icebp
scas
retf
and
push
in
cdq
sbb
xor
pop
push
fcmovu
retf
popf
fxrstor
xor
clc
les
mov
iret
xchg
les
stc
idiv
pop
jle
sbb
adc
sbb
sub
cmp
sbb
ror
mov
fsubr
into
push
ret
retf
ror
das
push
fisub
fcmove
jo
pusha
pop
sti
dec
jbe
mov
(bad)
int
dec
sub
loopne
jae
std
(bad)
xor
outs
xor
fadd
or
mov
sub
lods
push
mov
sub
sub
jecxz
mov
je
mov
add
sbb
arpl
stos
rol
or
mov
lahf
popa
mov
inc
mov
inc
pop
push
dec
jns
or
cs
fnop
scas
sti
shl
cmp
jmp
adc
jmp
xor
daa
(bad)
push
popa
cli
inc
jnp
idiv
mov
retf
and
mov
(bad)
adc
jns
fstp
xchg
adc
xor
movs
or
add
mov
out
cmps
pop
adc
adc
and
xchg
retf
inc
cs
cmc
pop
jge
ret
mov
dec
or
les
out
aaa
cmp
sbb
sbb
mov
jbe
dec
push
jge
popa
dec
lds
add
in
cli
xor
jg
out
pusha
xor
fmul
xor
mov
or
test
(bad)
test
ins
push
or
test
inc
or
dec
sbb
test
lods
xchg
jecxz
jmp
inc
push
jecxz
call
loopne
jl
ja
push
call
mov
inc
xchg
call
sbb
mov
add
sbb
in
lods
call
call
ds
mov
movs
cmp
bound
mov
xlat
mov
test
mov
movs
push
and
cmps
add
sub
mov
bound
daa
imul
push
cmps
sub
mov
xlat
(bad)
or
push
scas
jae
pop
push
inc
adc
stc
(bad)
xchg
mov
adc
aad
mov
pop
jg
xchg
les
and
xor
mov
inc
dec
and
mov
cmps
pop
mov
mov
cmc
cmp
ffreep
xor
shl
scas
cmp
sub
dec
cwde
shl
mov
xchg
mov
rcl
pop
jns
sbb
arpl
xlat
outs
inc
shl
rcl
jmp
jl
lods
aam
imul
sbb
jecxz
fcom
and
(bad)
int3
sub
mov
jmp
dec
xor
push
dec
fwait
imul
enter
inc
shl
mov
adc
movs
mov
neg
leave
rol
outs
lock
cmps
dec
mov
pop
xlat
or
push
xlat
mov
pop
aas
xchg
inc
mov
les
lods
cmc
xchg
rcr
into
mov
or
xor
dec
cmp
outs
inc
mov
mov
inc
fidiv
sbb
cmp
es
fbld
push
movs
retf
adc
xor
adc
fcmovbe
aam
sub
pop
ret
mov
mov
inc
cmp
mov
xchg
mov
fiadd
dec
leave
sub
xchg
sub
test
(bad)
sub
dec
stos
fcom
push
jg
push
ja
out
mov
jmp
cwde
nop
mov
dec
repz
fist
lds
aam
adc
cmc
aad
fdiv
dec
aad
aam
loope
aaa
es
dec
pop
data16
outs
ror
(bad)
(bad)
and
ror
pop
(bad)
add
nop
movs
pop
lahf
inc
xor
pop
leave
xchg
(bad)
cld
cmp
int3
dec
cmp
push
xor
push
push
mov
mov
push
xchg
jb
jno
(bad)
imul
call
jne
cmc
in
in
stc
fnstcw
shr
jb
add
daa
mov
mov
xor
xchg
xor
adc
hlt
push
adc
or
sbb
(bad)
jmp
cmps
mov
std
sub
mov
(bad)
jge
jle
and
int
loopne
push
cmps
mov
stos
aaa
sub
and
jmp
hlt
clc
push
shl
adc
push
xchg
in
ror
(bad)
ins
xor
pop
add
das
jp
adc
fnstsw
das
in
jecxz
int
or
mov
out
lods
fs
or
outs
pushf
aad
mov
cmp
(bad)
mov
jle
call
ja
pop
std
adc
pusha
mov
mov
xlat
sub
and
pop
and
test
std
cwde
jmp
jnp
mov
jmp
jp
dec
aaa
lahf
push
adc
inc
movs
out
xor
mov
(bad)
retf
sub
inc
mov
jecxz
mov
pop
jl
pushf
into
xchg
je
lahf
js
jle
imul
bound
pop
rcl
int3
adc
mov
jns
or
or
ret
fwait
movs
cwde
fstp
mov
inc
jno
inc
push
jg
pop
dec
fsub
jmp
out
inc
mov
shr
xor
sub
(bad)
in
adc
push
fild
push
imul
sbb
push
mov
push
add
and
mov
pop
shl
pop
fst
in
cmp
test
imul
push
and
cmp
mov
iret
push
jge
dec
mov
pushf
lods
inc
xlat
push
cli
dec
add
push
aaa
inc
sub
loop
les
adc
jo
push
ja
shl
mov
and
dec
xchg
(bad)
leave
sub
cmp
or
scas
dec
popa
push
cmp
data16
mov
adc
mov
fsubr
pop
xor
in
jmp
cmc
or
sbb
call
mov
out
out
push
dec
rol
retf
sbb
clc
int3
add
out
pop
or
add
cwde
cwde
aad
push
lahf
lock
out
movs
or
shr
leave
mov
mov
pusha
mov
add
std
mov
les
stos
jb
lock
das
xchg
or
add
movs
and
call
mov
ins
js
xchg
or
(bad)
addr16
stc
sar
mov
(bad)
pusha
cmp
push
lahf
push
dec
jl
cmp
xchg
push
stos
ds
adc
aas
cld
pop
adc
jmp
or
cdq
lahf
pop
push
push
cmc
inc
mov
ret
inc
jno
push
sbb
out
inc
xchg
pop
push
popa
clc
pop
arpl
mov
test
xchg
inc
add
out
mul
jle
push
fsub
rcl
mov
cmp
sub
out
rcr
data16
add
add
fwait
nop
jo
mov
and
push
mov
sub
push
sub
mov
sbb
add
jo
add
out
sub
(bad)
and
push
push
nop
jle
(bad)
repz
scas
mov
ret
int3
pop
cmc
pusha
fistp
or
pop
je
jo
xchg
or
dec
fs
jp
xor
std
mov
xchg
sub
push
lock
cmp
jp
cmp
mov
hlt
dec
or
or
mov
xchg
sbb
xor
push
mov
push
cmp
jge
out
lock
cmps
mov
ins
jnp
push
inc
push
jno
cmp
pop
mov
inc
loope
xchg
add
adc
pop
or
ins
dec
je
dec
mov
push
int3
mov
fistp
add
cmps
push
rdpmc
fiadd
inc
adc
pop
xchg
push
mov
(bad)
mulps
gs
sub
loop
adc
cmp
js
ins
ins
cmp
xor
(bad)
jmp
dec
mov
mov
popa
nop
cmp
sub
dec
mov
imul
xchg
mov
movs
inc
shr
adc
popf
pop
cs
neg
jbe
sbb
mov
sbb
xor
cdq
test
cmc
inc
cli
and
shl
pop
sbb
and
adc
popf
adc
jmp
inc
xchg
sub
xor
xchg
dec
dec
js
ror
mov
push
loopne
outs
stc
cdq
iret
pop
add
test
mov
xor
push
loop
daa
mov
add
es
pop
pop
mov
sbb
adc
jne
jmp
shl
fcmovbe
rol
or
xchg
xor
sub
xchg
ficomp
or
xchg
xor
xor
dec
add
cmps
daa
outs
inc
push
mov
pop
sub
pop
loopne
das
cdq
sub
fs
das
and
add
ret
bound
call
mov
arpl
xchg
adc
inc
retf
push
sgdtd
addr16
mov
ror
adc
inc
pop
push
inc
(bad)
pushf
jb
sub
(bad)
inc
mov
jmp
clc
dec
retf
jp
enter
test
ja
push
mov
in
sbb
mov
iret
xchg
jmp
adc
jo
aam
out
pop
data16
popf
xlat
sbb
sahf
(bad)
fstp
ficomp
push
mov
add
sti
sbb
js
mov
dec
std
repz
je
call
jo
add
jl
leave
lock
or
nop
int
jb
shr
call
adc
mov
or
lea
clc
(bad)
jae
fs
std
push
mov
mov
or
mov
pop
(bad)
or
xchg
pop
xchg
adc
xor
cs
jle
mov
push
pop
sbb
push
mov
jns
pop
mov
lock
cmp
sub
pop
call
inc
pop
jbe
push
lods
sub
push
jno
add
mov
jecxz
cmc
clc
cmc
pop
mov
ret
clc
jo
lds
inc
xor
lods
adc
push
xchg
or
adc
ret
adc
or
fxch
inc
cli
or
stc
fcom
jne
jo
(bad)
and
sub
pop
xor
mov
jbe
sub
push
ss
push
mov
out
jmp
pop
les
fisttp
sar
stos
inc
mov
lea
add
jmp
mov
ds
jb
or
xchg
or
std
call
xchg
loopne
aam
retf
shl
or
xchg
lods
call
inc
out
icebp
(bad)
sbb
nop
xor
out
jle
xchg
xor
jmp
jcxz
mov
push
cs
outs
lds
or
fnop
cmp
mov
xchg
mov
pop
gs
push
ja
xchg
fs
outs
sbb
mov
adc
sar
test
out
push
jp
mov
iret
jbe
stos
jae
test
pusha
add
jp
or
add
stc
and
dec
loopne
jnp
xlat
mov
add
dec
test
add
lock
jno
xchg
repz
test
aaa
xchg
fsub
repnz
push
dec
shl
sub
(bad)
cmps
es
cmp
pop
lods
mov
mov
ror
cmc
mov
test
adc
movs
mov
(bad)
stos
mov
or
xor
in
jmp
cmp
sbb
movs
mov
(bad)
pushf
adc
jae
and
outs
rcr
jae
xor
aaa
pop
imul
mov
and
cmp
out
addr16
gs
test
ins
add
in
mov
sar
sar
mov
inc
mov
(bad)
stc
(bad)
mov
mov
jo
popf
jmp
inc
inc
mov
nop
bound
rol
(bad)
jg
outs
out
leave
push
cdq
les
shr
ret
mov
mov
in
test
clc
pop
pop
push
mov
pop
repnz
call
mov
sbb
mov
sub
(bad)
push
je
imul
mov
mov
fdivr
dec
(bad)
fdiv
inc
add
xor
or
call
and
pop
pop
push
or
mov
fwait
es
adc
pop
or
sbb
aam
jns
add
sbb
jnp
(bad)
leave
add
pop
add
pushf
rol
aad
xchg
pop
mov
cs
dec
fcmovnb
lahf
xlat
mov
call
push
push
dec
fdiv
xor
jnp
sub
retf
stos
retf
cli
push
lock
cmps
or
jmp
(bad)
je
push
jno
or
fadd
jae
lahf
bound
fs
pop
and
(bad)
jb
and
jmp
jecxz
and
fsub
retf
dec
shl
jmp
xchg
sbb
cld
dec
out
ds
popf
adc
cmp
icebp
unpckhps
jne
sub
call
gs
test
xchg
inc
jnp
rol
les
sahf
call
stos
inc
push
lahf
push
rcl
and
(bad)
push
(bad)
icebp
push
jecxz
dec
mov
(bad)
cmc
mov
lea
mov
mov
pop
mov
dec
push
dec
mov
adc
fist
test
add
enter
imul
sbb
sar
rol
sbb
lods
ins
xchg
popa
out
loopne
in
jmp
sbb
bound
dec
jl
into
popa
loopne
mov
sahf
sub
mov
mov
mov
lea
rcl
push
test
dec
push
push
xchg
test
pop
sar
sbb
add
aaa
leave
xor
cli
xchg
push
shr
lock
idiv
sbb
mov
pusha
sbb
fdiv
mov
xlat
pop
push
(bad)
movs
pop
ins
mov
retf
vmovups
dec
cmp
leave
push
ins
inc
scas
add
js
jl
clc
mov
call
sbb
scas
or
ret
and
mov
or
rol
ins
loopne
lahf
or
pop
rcr
sub
pop
adc
sub
test
das
lock
xor
mov
xor
pop
cmp
xchg
jno
cli
fisubr
push
inc
test
jo
push
inc
or
clc
inc
dec
pop
cs
addr16
mov
mov
nop
or
call
test
xchg
inc
arpl
pushf
shl
mov
xchg
xor
cmp
outs
jmp
std
lock
test
leave
xchg
mov
rcr
ds
push
stos
icebp
int3
xchg
jmp
mov
push
adc
adc
inc
cmps
and
cld
pop
dec
dec
pushf
inc
and
in
jb
stos
jmp
pusha
sub
fldcw
test
xchg
lods
jg
stc
mov
lods
sub
push
cmp
cwde
sub
inc
pop
and
jns
and
xor
mov
int
cmp
mov
adc
shl
sub
jmp
add
retf
retf
imul
in
sahf
outs
inc
add
inc
jecxz
scas
cmp
jmp
(bad)
fcmovnu
inc
addr16
fild
sbb
repnz
mov
outs
dec
ficom
mov
xor
xchg
push
aas
ret
sbb
jl
adc
out
mov
mov
push
mov
inc
sbb
push
adc
dec
or
and
clc
sub
and
pushf
pop
imul
data16
and
xchg
jb
mov
inc
add
pop
mov
imul
xchg
das
mov
test
outs
or
(bad)
jmp
enter
lahf
xchg
call
rcr
(bad)
in
or
dec
int
cwde
daa
jmp
dec
ds
outs
cs
mov
rcr
fnstsw
inc
imul
xchg
es
mov
jno
adc
sub
xor
sbb
sbb
je
rol
sub
into
adc
rol
cld
inc
mov
and
mov
jecxz
inc
aas
xor
push
add
mov
mov
aaa
sbb
sub
movs
lahf
xchg
es
gs
jae
cmps
loope
jbe
into
leave
mov
pop
stos
leave
fs
not
adc
lahf
into
mov
cld
and
xor
or
and
xchg
push
lea
pop
add
push
push
jg
pop
sub
fcmovnu
jecxz
xchg
das
(bad)
mov
call
sahf
mov
in
xchg
enter
and
mov
(bad)
push
inc
outs
pusha
inc
push
or
test
inc
in
fdivrp
xchg
ds
jge
ds
pop
lods
movs
sbb
lahf
or
xor
mov
cmps
pop
cwde
bound
xchg
xchg
pop
add
jne
mov
pop
lods
jne
jge
dec
mov
xor
aad
and
(bad)
les
in
shl
xchg
adc
cmp
adc
pusha
out
push
das
cmc
sbb
and
in
jl
jl
adc
sub
xchg
shl
xchg
jp
mov
shl
mov
fsub
xor
xchg
(bad)
loopne
push
mov
or
mov
test
pop
jmp
gs
cmp
sti
dec
push
add
scas
scas
pop
add
cmp
jns
sbb
sbb
imul
mov
ja
adc
out
rol
push
out
scas
(bad)
enter
dec
add
sub
push
movs
push
xor
sub
pop
adc
jae
jno
in
pop
jns
mov
imul
popa
inc
push
ret
popa
inc
(bad)
or
rcr
in
stc
pop
lea
mov
lods
stc
xor
sub
int
les
loop
sbb
cmp
xchg
shl
xchg
daa
movs
mov
mov
xor
sbb
popa
xchg
cmp
and
mov
jo
pop
add
aad
dec
(bad)
into
arpl
repnz
test
fcomp
inc
pop
or
pop
pop
mov
mov
ins
inc
pop
repz
jecxz
pop
push
mov
(bad)
jb
mov
icebp
add
inc
movs
adc
pop
ret
js
mov
inc
sar
arpl
mov
inc
mov
mov
sbb
fbstp
sar
mov
pop
xor
cmps
popa
outs
cs
fisubr
sahf
push
xchg
mov
xchg
or
in
jae
lods
xchg
shl
outs
test
(bad)
jp
inc
pop
pusha
dec
xabort
aaa
cdq
or
mov
es
cmps
cmps
xchg
stos
push
fnstsw
jne
ret
xchg
rcr
lock
xchg
jns
pop
mov
xchg
sbb
lock
repz
mov
fcomp
push
inc
xchg
sbb
rcr
test
(bad)
aam
aad
push
or
dec
pusha
mov
in
jmp
mov
je
mov
test
inc
push
stc
pusha
int3
adc
ins
inc
mov
fnsetpm(287
jge
push
xlat
jmp
dec
xchg
jnp
mov
jb
clc
push
push
stos
push
jns
icebp
xor
rcr
out
jp
inc
sub
lock
xchg
icebp
xchg
scas
pop
xchg
outs
xchg
sbb
mov
sbb
std
out
adc
adc
ins
in
dec
jl
sbb
dec
rcl
sub
inc
mov
jae
(bad)
cmps
test
xchg
pop
xchg
mov
nop
cmps
sub
fst
mov
outs
rcr
inc
sar
jno
enter
pop
test
ret
mov
xchg
clc
sub
pop
sub
repz
or
mov
jb
add
call
mov
movs
retf
xchg
ds
shr
pop
add
inc
(bad)
daa
icebp
call
mov
cmps
hlt
sub
cmp
cdq
js
sbb
(bad)
lods
mov
mov
pusha
pop
mov
mov
bound
push
repz
not
sub
cld
dec
repz
inc
add
int
pop
xchg
ret
shr
jg
jmp
mov
aaa
cmp
push
mov
inc
mov
inc
in
sahf
int
add
je
xchg
nop
cli
test
jb
dec
sbb
je
push
mov
je
jge
fstp
pop
add
cmp
loopne
or
mov
(bad)
pop
fist
xchg
jl
and
daa
push
sbb
into
(bad)
sbb
mov
mov
aad
dec
std
retf
jne
dec
dec
sub
je
or
mov
jmp
popf
jle
jp
out
jge
int
fiadd
xchg
retf
mov
shr
cmp
daa
popa
mov
retf
adc
inc
adc
aam
call
mov
add
jmp
popa
lods
cmp
ds
mov
arpl
xchg
adc
lods
mov
sar
(bad)
mov
cmp
cmp
xor
push
js
push
out
stc
sahf
push
test
or
push
ds
fidivr
adc
rol
adc
mov
jne
shl
inc
mov
fsubr
fs
push
pop
xor
std
push
mov
fdiv
pop
mov
mov
scas
aas
push
add
push
cmp
push
mov
mov
ret
dec
sbb
or
ja
and
lock
inc
mov
addr16
fnstenv
add
sbb
lods
(bad)
out
and
push
std
sbb
mov
js
lock
cmp
ficom
inc
data16
ret
imul
imul
inc
and
mov
mov
mov
mov
repnz
mov
xchg
dec
jb
(bad)
shr
icebp
jecxz
bound
pop
test
(bad)
cld
push
and
sbb
cmp
mov
loopne
xchg
int3
pop
jg
xchg
push
xchg
adc
(bad)
fnstcw
add
test
idiv
push
test
sub
push
out
mov
(bad)
cwde
pop
rcr
sar
lock
sub
into
lods
nop
ficomp
push
sub
xchg
push
push
jo
ja
shr
mov
pop
push
xor
mov
mov
out
cmp
and
mov
(bad)
jmp
out
(bad)
xor
lods
sbb
xchg
stc
add
cmc
adc
adc
mov
cmp
les
loope
adc
sbb
xor
or
mov
movs
pop
(bad)
push
jmp
das
push
mov
push
retf
daa
and
mov
sub
cmps
jmp
iret
push
in
das
stos
and
sbb
aam
cmps
pop
and
shr
mov
cmps
dec
lock
jmp
xor
loop
xchg
cwde
inc
pop
int3
or
push
(bad)
fdivr
les
push
inc
xchg
loopne
rcr
and
or
fisubr
add
call
movs
xlat
cmp
adc
and
nop
sbb
cld
call
mov
(bad)
push
fbld
nop
adc
daa
mov
mov
push
add
add
jle
out
and
push
rcl
mov
adc
push
and
push
xor
cmp
push
ins
xchg
add
inc
cmp
sbb
adc
and
push
popf
clc
scas
rol
movs
sar
jno
les
fstp
repnz
add
lahf
cmp
dec
and
shl
cmp
lahf
xor
push
sbb
dec
fidiv
imul
aad
bound
inc
inc
test
test
ss
cmp
mov
xchg
push
sar
jbe
sbb
mov
hlt
pop
addr16
xchg
out
fst
fmul
jmp
pop
or
std
out
mov
adc
sub
in
aas
sub
sbb
cmp
adc
mov
sbb
xlat
xor
sub
pop
xor
loopne
add
pop
punpcklbw
dec
add
loopne
(bad)
enter
add
xlat
add
push
sbb
imul
and
and
jmp
mov
fdivr
sub
push
sar
ror
cmp
sub
sbb
ds
push
xchg
lods
cmp
je
add
and
loop
rcr
add
inc
cmp
cmp
xchg
jl
ret
int
call
adc
cmp
add
aas
sub
loop
cmp
mov
push
sbb
sub
idiv
cmps
fisub
scas
ret
inc
jae
unpckhps
movs
adc
adc
rcr
nop
mov
pop
scas
call
pop
add
(bad)
loope
pop
int3
inc
adc
clc
(bad)
mov
adc
push
mov
or
sbb
sbb
(bad)
mov
dec
add
pop
addr16
es
pusha
ret
jno
mul
dec
add
jne
jp
pop
mov
cmc
fdivrp
jnp
mov
mov
cmp
adc
jmp
cmp
(bad)
push
jno
mov
ins
mov
leave
xchg
rcr
enter
ins
mov
dec
movs
mov
dec
pop
mov
jge
scas
outs
pop
test
inc
icebp
es
clc
out
or
mov
push
(bad)
cmp
sti
sbb
sbb
cli
cmp
sbb
std
call
leave
into
sub
shl
stos
mov
mov
jnp
push
or
imul
dec
div
jl
gs
les
hlt
fiadd
mov
xchg
adc
xchg
xchg
vphaddwd
fnstsw
pop
inc
xchg
js
out
dec
xchg
dec
push
arpl
loop
mov
loop
div
mov
push
xchg
gs
shl
out
xor
xchg
test
jmp
cwde
retf
outs
push
fisub
(bad)
sub
addr16
sbb
adc
fdivp
dec
xchg
push
mov
or
cwde
jae
mov
test
cmp
pop
xor
loop
enter
cli
pop
and
lods
add
pushf
mov
push
jmp
push
call
or
scas
sbb
mov
mov
pop
ins
and
jb
push
pop
or
ins
sbb
inc
mov
adc
inc
je
in
lea
aas
pop
dec
xor
icebp
and
pushf
inc
sbb
cmp
retf
xchg
xchg
popa
imul
iret
out
jmp
and
aad
mov
sar
fbstp
inc
jp
sbb
pop
out
jno
(bad)
jo
lock
enter
push
popf
xchg
mov
repnz
inc
in
fnstcw
push
and
pop
sub
jns
lahf
ficom
aad
dec
cmp
xor
adc
xor
sbb
sbb
push
mov
pop
pop
mov
retf
jae
popa
push
sub
jns
sub
sbb
add
inc
cdq
call
test
cs
retf
or
mov
movs
push
xchg
(bad)
out
dec
pop
scas
sub
xchg
in
jno
cmp
scas
pop
push
rcr
mov
mov
mul
ror
adc
mov
je
pop
cmc
js
xor
sbb
xor
shl
loopne
xchg
xlat
cvtps2pi
add
loopne
mov
pusha
jp
lds
dec
push
retf
les
js
fst
inc
addr16
and
popa
gs
lahf
xor
ds
addr16
aas
out
retf
mov
call
dec
jbe
jno
or
iret
cs
in
jl
xor
mov
pop
add
cmp
cmp
xor
test
jp
dec
fdivrp
add
ins
or
out
inc
mov
sti
add
and
mov
or
jl
sbb
sub
fucom
outs
jl
adc
cs
sub
dec
push
fcmovnbe
aam
mov
mov
jle
inc
inc
test
sbb
adc
and
in
mov
aam
in
xlat
and
inc
jg
retf
xchg
push
add
jnp
jecxz
xchg
and
dec
pop
mov
je
ds
clc
test
(bad)
cli
xchg
adc
mov
(bad)
js
test
popa
jns
in
repnz
adc
xor
imul
lahf
stos
dec
loopne
cli
xchg
ins
cmc
mov
inc
imul
sti
xchg
lods
xchg
add
aad
lahf
out
add
cmp
(bad)
outs
push
nop
add
arpl
adc
mov
push
outs
jbe
div
sbb
or
cmc
iret
xchg
cmp
rol
push
or
mov
dec
xchg
push
or
bound
jno
dec
mov
pushf
add
std
mov
push
stos
rcr
data16
or
and
or
mov
pop
push
pop
fxtract
pop
ins
and
jge
pushf
leave
test
push
je
mov
(bad)
cmps
mov
push
sbb
js
or
out
or
or
inc
dec
push
inc
movs
cmp
call
shl
inc
cmp
out
ins
fst
xor
add
shr
ret
mul
inc
inc
push
popf
mov
test
fimul
fcom
sbb
stos
adc
mov
out
das
les
xchg
inc
inc
outs
pop
jb
jp
sbb
les
int3
ins
push
and
pop
js
fisttp
(bad)
outs
fld
dec
push
pop
inc
repz
ja
js
call
push
icebp
push
and
je
lds
mov
dec
ret
aas
mov
arpl
inc
sub
xchg
inc
nop
(bad)
test
lods
into
push
lea
pop
sbb
(bad)
scas
mov
enter
inc
xchg
mov
jmp
and
mov
push
pop
add
not
cli
enter
int3
add
(bad)
call
ret
cmp
cmps
mov
in
shr
jne
mov
jg
xchg
js
sub
les
aam
arpl
cmc
mov
mov
cmp
jne
mov
cmp
push
cmps
scas
jns
sub
lods
loopne
cmp
mov
in
ja
mov
in
es
fstp
stc
test
mov
mov
iret
push
push
dec
jne
inc
mov
mul
mov
mov
aad
inc
jmp
dec
out
mov
test
iret
mov
push
mov
(bad)
sbb
xor
cmovns
stos
int3
mov
ret
dec
push
add
xor
dec
add
mov
pop
push
push
xor
je
popa
push
mov
pop
and
shl
push
add
and
vmulps
add
jae
arpl
ds
or
test
clc
and
out
jg
jge
mov
fsub
cmps
xchg
mov
cmps
clc
mov
dec
mov
push
test
mov
enter
or
mov
neg
fdivp
sar
mov
shr
mov
pop
or
fnstcw
les
outs
out
jmp
ds
arpl
rcr
sub
jmp
xchg
ret
mov
cmp
(bad)
jge
mov
xlat
cmc
pop
cdq
cmp
movs
pop
leave
xchg
cmp
imul
shl
call
mov
inc
iret
lods
xchg
jl
int3
retf
ficom
aas
ret
imul
aas
mov
push
sub
dec
mov
cmp
jl
hlt
fidiv
mov
pusha
pop
ja
pop
leave
popf
mov
mov
mov
push
push
inc
fs
vpcmov
fld
mov
and
mov
int
repz
push
push
or
and
stos
fs
dec
shr
(bad)
and
cmp
mov
ins
mov
movs
fdivrp
xor
sbb
pop
or
xor
push
ror
daa
add
pop
daa
sbb
popa
push
inc
test
xchg
xchg
bt
cmp
dec
retf
inc
jb
out
cli
inc
and
lds
in
sar
out
int3
jp
ins
jbe
mov
inc
inc
fist
or
adc
pop
xchg
fdivrp
loop
dec
mov
adc
dec
mov
dec
outs
es
call
(bad)
popf
pushf
xor
adc
das
icebp
or
ds
lock
jns
and
inc
fisubr
fs
cmp
popf
add
scas
xchg
(bad)
aaa
jge
mov
push
mov
test
verr
lea
pop
push
fucomip
cmp
in
sub
adc
out
mov
bnd
inc
inc
jmp
out
sub
xchg
ins
or
popa
scas
add
jge
xor
add
loop
pop
sbb
mov
cwde
addr16
in
enter
adc
xor
int3
inc
stc
lds
loop
push
xchg
call
xchg
push
int3
movups
cmp
cmps
xchg
sbb
xchg
xor
lahf
jg
int
adc
enter
cmps
lods
cs
imul
sbb
stc
in
add
loopne
sbb
pop
xor
ins
int
retf
mov
adc
lods
dec
xchg
pop
aas
call
xor
pop
test
aad
and
and
shl
inc
dec
add
push
mov
(bad)
push
daa
out
mov
adc
or
sub
inc
xchg
mov
int
inc
xchg
jns
outs
mov
shr
(bad)
cmp
sti
jecxz
fwait
xor
aas
repz
js
in
mov
jecxz
and
loope
push
dec
jbe
pop
dec
and
les
mov
es
xchg
scas
xchg
mov
mov
push
shl
or
jge
test
push
test
pusha
push
(bad)
lock
dec
sbb
movs
js
push
push
jne
add
mov
mov
mov
push
scas
out
dec
jecxz
int
rcr
cli
scas
scas
pusha
shr
ja
push
repz
adc
stos
fcom
push
je
adc
outs
xchg
rcl
lock
std
and
outs
jbe
mov
xlat
iret
xor
xchg
daa
stos
gs
jge
mov
or
int
out
mov
inc
leave
or
mov
popf
push
or
sbb
pusha
jne
call
cmp
adc
sbb
cmp
push
mul
aad
cmp
fisubr
fs
xchg
push
jb
pop
ret
jnp
xchg
mov
fwait
jg
jbe
mov
stc
rcr
or
xchg
or
push
inc
dec
sub
out
sub
xchg
mov
add
icebp
stc
addr16
pop
adc
xchg
neg
loopne
test
mov
pop
jae
clc
mov
add
sub
outs
xchg
pop
daa
adc
mov
xchg
ret
imul
adc
or
test
imul
sbb
and
jo
mov
or
push
push
rcl
and
mov
xchg
jecxz
pop
jp
sbb
cmp
imul
add
sbb
das
cmp
data16
push
inc
inc
mov
mov
sbb
add
test
mov
dec
lods
lods
xlat
fiadd
out
dec
shr
mov
stos
lea
idiv
or
out
pushf
inc
int
ja
ret
or
xchg
or
imul
ret
loop
inc
call
imul
aas
add
int3
js
adc
mov
cmc
xlat
sbb
and
pop
pop
test
push
stos
mov
lods
(bad)
aaa
or
test
movs
cmp
jge
gs
sub
scas
retf
mov
pop
jbe
inc
(bad)
arpl
xchg
jmp
dec
push
mov
jo
jl
rcl
cmc
call
shl
fnsave
dec
push
out
and
mov
aas
repz
sbb
sbb
or
pop
in
adc
add
into
cld
sub
ret
dec
sub
ja
mov
ret
dec
mov
jecxz
fs
lds
jl
fst
inc
inc
push
xor
je
jp
addr16
xchg
inc
mov
mov
mov
inc
push
loop
in
mov
clc
addr16
add
das
mov
add
scas
enter
pop
in
das
cmps
out
xor
sub
adc
mov
sub
push
test
cmp
daa
fmul
mov
mov
xchg
out
ja
mov
pop
mov
and
add
(bad)
xchg
iret
cmp
repnz
test
pop
cmp
dec
fwait
dec
dec
into
inc
or
test
cmp
mov
hlt
mov
je
pop
sti
sahf
(bad)
outs
enter
std
and
mov
adc
push
mov
add
xchg
enter
cmp
fcmovu
jp
mov
jbe
fs
cmp
idiv
cmp
add
xchg
les
and
xchg
loope
test
and
stos
loope
xchg
(bad)
mov
pop
sub
enter
adc
scas
xchg
cmp
cmp
cmp
mov
sub
iret
ret
dec
jo
push
cmp
cmps
es
jl
imul
jl
mov
les
sub
mov
cmp
mov
fistp
push
sbb
popa
js
fwait
push
bound
xor
push
shl
mov
(bad)
mov
adc
fbstp
(bad)
div
and
push
or
ds
(bad)
icebp
jne
mov
sub
xor
call
push
and
stos
dec
push
add
push
ret
mov
popa
add
mov
dec
jb
push
or
dec
dec
xchg
hlt
push
mov
xor
imul
ja
cdq
add
std
aaa
pop
jg
std
rep
or
xor
sbb
or
mov
loop
adc
enter
xlat
mov
jno
xor
dec
mov
adc
idiv
sbb
call
shl
xor
mov
jbe
arpl
push
icebp
sub
sti
fwait
out
mov
cmp
xchg
addr16
repz
popf
xchg
cdq
in
inc
jmp
sbb
jmp
loop
lods
cmp
out
cmp
inc
and
xor
push
icebp
lea
or
fucom
or
test
pop
pusha
push
imul
add
sbb
mov
mov
lock
sbb
mov
in
push
inc
ins
xchg
push
retf
jp
and
sub
add
or
jbe
mov
sbb
hlt
fs
popa
adc
adc
pop
mov
pop
les
cmp
outs
inc
xor
loopne
xor
stc
mov
ror
mov
xchg
outs
in
outs
sar
sbb
rol
xor
in
lods
push
jns
adc
adc
je
xchg
and
adc
jae
or
sub
dec
mov
jae
aam
pop
or
stos
xchg
sub
xor
sti
push
push
int3
adc
outs
(bad)
mov
hlt
jl
scas
mul
fcmovbe
loopne
mov
xor
mul
jo
xor
test
fs
xchg
jmp
dec
lahf
jbe
imul
push
clc
movs
mov
gs
and
mov
and
inc
cwde
mov
ins
movs
outs
(bad)
in
xor
fwait
pop
shl
mov
sub
mov
mov
enter
jge
jns
bound
jae
ja
fcmovbe
xor
mov
fucomp
mov
push
xor
xchg
scas
sub
sti
mov
mov
fidiv
mov
inc
test
pop
retf
stos
dec
pop
int3
shr
(bad)
mov
jp
lea
mov
stc
dec
test
popf
or
stc
jnp
out
daa
(bad)
mov
pop
dec
pop
nop
fstp
loope
inc
add
push
iret
and
stos
xchg
mov
lea
and
xchg
aad
pop
cmc
loopne
add
enter
dec
add
jne
inc
add
lods
sahf
dec
das
push
das
ss
or
and
add
mov
or
mov
push
jb
popa
call
xor
mov
fwait
xchg
std
mov
or
test
(bad)
clc
lods
retf
push
push
cmp
adc
inc
fsub
sbb
jne
pop
leave
test
mov
jbe
cmp
and
mov
call
icebp
call
inc
push
fist
mov
fist
mov
pop
jmp
mov
cmc
dec
pop
or
sub
fidiv
adc
or
fs
scas
(bad)
jae
jg
jecxz
adc
sub
dec
sub
push
inc
mov
aas
adc
mov
xor
div
(bad)
xor
std
xchg
fmul
dec
dec
dec
es
jmp
dec
stos
or
lods
jmp
cld
leave
pop
xor
jb
add
mov
mov
mov
sub
in
cmps
push
inc
ret
cli
pop
arpl
add
ja
mov
cmp
push
jmp
mov
ficomp
pop
(bad)
sbb
jo
aas
push
loopne
pop
mov
push
stos
les
cwde
xchg
adc
inc
das
pop
pop
nop
pop
sub
leave
mov
push
sbb
jl
add
cmp
cmps
cmp
pop
mov
cdq
test
pop
nop
mov
and
dec
add
mov
arpl
xchg
mov
dec
lds
jne
push
iret
sbb
cmp
mov
mov
test
sub
cs
add
movs
retf
(bad)
(bad)
lahf
and
ds
lods
test
add
xor
cmp
mov
(bad)
bound
mov
mov
fistp
mov
mov
adc
push
fbstp
repnz
shl
(bad)
cld
push
les
xchg
inc
and
mov
xchg
arpl
inc
and
inc
and
popa
(bad)
adc
retf
les
mov
call
mov
retf
test
jge
add
inc
push
cmp
xchg
aad
stos
imul
inc
sbb
repz
jg
sub
(bad)
or
inc
into
mov
aam
add
(bad)
and
out
push
cli
pop
xor
add
lods
fcmovnbe
retf
sub
idiv
sbb
xor
int
xchg
adc
mov
in
fnstcw
sub
stos
push
or
scas
idiv
xchg
pop
in
sub
cmp
addr16
aam
cdq
adc
push
xchg
jne
es
out
mov
mov
stos
cmp
pop
repnz
jl
sub
js
push
stos
imul
or
int
mov
movs
ins
(bad)
dec
movaps
retf
push
ret
pusha
cmp
and
push
ret
dec
sbb
cmp
jg
int3
xchg
adc
sbb
dec
mov
and
mov
sbb
dec
jnp
clc
inc
mov
mov
mov
sub
es
call
mov
jns
sbb
mov
mov
outs
out
jmp
sahf
(bad)
fwait
adc
mov
data16
retf
imul
test
mov
neg
hlt
cdq
(bad)
cwde
retf
cmp
fwait
shr
fst
lods
das
xor
ja
clc
pushf
adc
pushf
dec
out
enter
cmp
movs
adc
cwde
es
pusha
fsub
data16
mov
pop
sahf
or
lods
pusha
bound
fcmovbe
cmp
fldz
jb
add
(bad)
lock
xacquire
xor
shl
pop
mov
out
aas
or
popa
popf
jo
ds
movs
push
pop
push
push
adc
in
test
jb
dec
ins
mov
enter
cld
stc
sbb
push
hlt
mov
xor
or
out
leave
jno
int3
xchg
xlat
mov
xchg
push
pop
pusha
sahf
mov
cmc
inc
mov
xlat
cli
mov
stos
cwde
xor
dec
sti
enter
inc
rcr
pop
sub
and
inc
mov
cmps
int
push
int
pop
mov
nop
push
test
test
into
mov
jno
call
lods
clc
xor
in
xchg
push
stos
inc
ds
push
or
dec
push
fbstp
lea
mov
arpl
aam
mov
in
mov
es
mov
jg
repz
test
scas
pop
adc
inc
jne
jecxz
xchg
sahf
mov
sbb
add
xchg
ds
pop
in
push
shl
lahf
inc
xchg
jmp
out
ror
push
xor
or
(bad)
push
cdq
xor
call
cmps
das
dec
pushf
ja
dec
ror
fsubr
sti
in
sub
call
cmp
test
das
pop
loope
or
stos
scas
mov
dec
sbb
in
mov
pop
cmp
add
jp
cld
(bad)
fldlg2
cdq
push
inc
push
hlt
sub
das
data16
daa
adc
leave
sub
fst
mov
loop
jge
or
mov
bound
std
lahf
shl
retf
push
stos
dec
add
cmps
ja
and
mov
scas
pop
inc
int
int3
pop
retf
mov
pop
add
ja
repz
retf
out
jmp
xchg
iret
jne
sub
add
xchg
push
fstp
sbb
stc
and
cmp
mov
repnz
dec
imul
shl
mov
dec
scas
mov
adc
jmp
ffreep
sub
or
scas
sbb
fdiv
rcl
leave
fiadd
ret
data16
mov
inc
dec
sub
sti
pop
xchg
dec
gs
jno
add
cmps
test
out
cmp
dec
fs
fistp
dec
aad
call
pop
bound
pop
mov
mov
aam
inc
mov
mov
adc
cmp
out
jecxz
lahf
mov
lock
fstp
cmc
push
add
and
jle
clc
test
stos
cmp
iret
sbb
out
(bad)
push
shl
pusha
jge
arpl
iret
imul
cdq
repz
aas
call
xchg
(bad)
add
mov
neg
push
add
push
fs
stc
mov
inc
pushf
cdq
adc
daa
mov
in
inc
cmp
and
scas
push
jmp
inc
(bad)
xchg
or
fsubr
(bad)
jno
pop
mov
cmps
cmp
aam
push
cmc
adc
pop
cmp
mov
ret
push
jb
xor
mov
aaa
xchg
call
in
pop
jmp
fimul
jns
lods
fiadd
pop
js
js
shl
je
(bad)
mov
inc
div
jle
dec
rcr
jno
(bad)
in
mov
mov
pop
or
les
add
xor
and
xchg
mov
jmp
ror
dec
int3
cmps
mov
mov
jp
enter
jmp
ds
vpmaxsw
jbe
jo
mov
adc
fiadd
push
xchg
(bad)
ds
pop
add
loopne
scas
retf
pop
mov
pop
ins
mov
clc
xor
int3
mov
pusha
jecxz
mov
fwait
movs
pop
popf
xlat
ss
outs
mov
pop
sbb
or
or
cwde
loop
mov
jnp
sub
mov
xchg
pop
dec
jae
inc
pusha
inc
aas
test
pop
pusha
call
shr
xor
dec
mov
pusha
adc
jmp
test
mov
mov
enter
xchg
xchg
xchg
dec
dec
or
scas
pop
sbb
sbb
repnz
xchg
or
xchg
dec
jmp
repz
call
jae
enter
ror
or
sti
sbb
mov
push
loope
inc
cmp
div
adc
loope
adc
outs
fiadd
stos
icebp
retf
lock
jg
ins
into
repnz
shl
(bad)
fimul
jg
test
jbe
xor
xchg
xrelease
out
sbb
adc
or
ins
sbb
ret
and
or
idiv
xor
mov
add
popa
sahf
out
les
call
into
pusha
sub
outs
sub
sti
cdq
test
mov
sbb
mov
aas
sti
xchg
int3
repnz
sub
pop
int3
sub
sub
movs
mov
sbb
jg
aam
lods
xchg
adc
or
mov
push
call
sub
ror
scas
not
jnp
dec
pushf
enter
mov
lea
xlat
aad
test
clc
add
xor
mov
xor
sbb
xor
cmp
jecxz
xor
(bad)
sar
das
inc
and
cmp
jne
cmp
jmp
dec
hlt
out
jne
std
loopne
and
popa
div
lahf
jl
xor
cwde
retf
movs
popa
fistp
cmc
push
cli
ret
jns
ins
mov
adc
add
inc
pop
jg
ss
in
mov
sbb
inc
fld
int3
add
ins
mov
xor
arpl
dec
repnz
jb
sti
adc
dec
mov
add
cli
xchg
pop
xchg
cmp
sub
xor
mov
mov
jecxz
dec
imul
jle
or
and
sub
mov
out
(bad)
fld
loopne
dec
faddp
icebp
cmps
sbb
stos
stos
jo
mov
dec
(bad)
dec
int
push
push
mov
push
test
xor
fstp
iret
sbb
jg
jmp
retf
outs
mov
mov
jae
jnp
rcl
and
dec
sahf
out
jnp
(bad)
xor
add
jecxz
push
(bad)
rcr
mov
push
jnp
mov
inc
mov
xor
pop
dec
imul
add
xor
pushf
push
mov
ja
push
leave
pop
lds
xchg
vunpckhps
sub
mov
jp
clc
or
or
mov
fwait
mov
in
outs
mov
sbb
pop
mov
test
cmps
pop
(bad)
sbb
xchg
cmp
sub
dec
mov
sbb
in
out
icebp
adc
das
jnp
cmc
pop
out
sbb
add
aaa
adc
repnz
and
sahf
js
pushf
sbb
lock
lock
or
lea
jne
call
sub
and
mov
lods
mov
(bad)
in
(bad)
iret
cwde
dec
shl
loopne
rol
imul
mov
sbb
pop
jg
push
xchg
ins
push
je
outs
add
and
sbb
mov
jo
retf
stc
inc
mov
sbb
outs
mov
je
xchg
mov
inc
lods
lods
clc
pushf
or
dec
dec
lock
sahf
(bad)
mov
cmovo
xchg
stos
lock
fisub
or
push
or
cmp
inc
out
mov
mov
dec
dec
out
xor
cmp
stc
and
cmc
jno
iret
cwde
lds
adc
fcomp
fbstp
ins
in
adc
mov
jg
mov
jl
jp
xchg
adc
inc
mov
out
xor
xlat
xor
ins
adc
loopne
jo
mov
test
lds
aas
sbb
xor
jecxz
int
scas
push
jnp
in
jmp
arpl
or
xchg
xchg
ret
jg
ror
ret
loop
add
loope
mov
idiv
(bad)
xchg
mov
push
lea
dec
vandnps
jbe
ins
shl
sbb
clc
add
stc
sti
aam
jle
mov
dec
div
or
(bad)
(bad)
loopne
lock
ret
sbb
(bad)
mov
(bad)
jmp
ja
inc
xor
pop
(bad)
loopne
xchg
xchg
enter
leave
cmc
inc
test
imul
xchg
mov
fiadd
aas
mov
or
push
pop
mov
stc
dec
jno
lds
push
dec
dec
xchg
xor
retf
je
add
imul
imul
inc
(bad)
mov
push
xchg
add
dec
xor
ret
cmp
hlt
int
push
(bad)
repz
scas
call
xchg
cwde
pop
mov
xlat
jbe
xchg
call
push
pop
or
lods
out
inc
les
addr16
pop
mov
xor
arpl
call
leave
add
push
pop
jno
loope
je
xchg
or
add
adc
sub
fisttp
ins
or
xchg
(bad)
sbb
fsub
loopne
fisub
push
popa
pop
sbb
test
mov
and
int
nop
aas
cmp
(bad)
lods
fld
mov
je
inc
adc
cmp
clc
test
leave
add
int
repnz
mov
push
cmp
jle
cmc
fnstenv
dec
adc
lock
dec
cld
lock
fwait
retf
xchg
repnz
iret
cmp
loop
mov
cmc
in
mov
pop
sahf
sub
adc
loope
fimul
add
cmp
xchg
jo
xor
pusha
push
inc
mov
mov
mov
xor
push
xor
dec
mov
fmul
push
mov
movs
xchg
stos
mov
(bad)
test
cmp
mov
(bad)
xlat
and
or
cmps
lahf
xor
test
push
rcl
mov
xor
and
int3
outs
fs
sbb
out
ja
mov
sbb
xchg
es
xchg
in
int3
push
repz
sbb
aad
test
test
add
nop
cmp
sub
dec
into
call
fs
fimul
(bad)
movs
mov
shr
movs
test
pop
cdq
cmp
out
cmp
addr16
add
and
add
lea
pushf
jp
jmp
push
call
arpl
es
(bad)
ret
test
ins
aad
mov
fsub
xchg
test
push
cld
push
repz
pop
xlat
into
sub
sti
int3
mov
jbe
pop
addr16
mov
ins
retf
sub
mov
jmp
imul
add
jmp
xor
mov
ins
cmp
rcl
lds
push
add
pop
addr16
dec
fwait
cmps
push
push
add
mov
xchg
fcom
ins
loopne
and
inc
push
jo
and
mov
sahf
mov
jb
ret
mov
ret
mov
dec
mov
jno
mov
sbb
call
mov
ret
stc
call
shl
jmp
or
dec
js
outs
add
(bad)
les
mov
addr16
dec
push
push
mov
lea
mov
les
mov
push
(bad)
hlt
in
stos
clc
add
outs
sbb
xor
lea
loope
lds
stos
movs
call
or
xchg
cmp
cwde
dec
add
data16
(bad)
fcomi
movs
scas
cdq
rol
leave
fimul
sub
hlt
stos
in
xchg
xchg
rol
mov
les
dec
cmp
mov
xchg
inc
add
loopne
sbb
lahf
pushf
cmp
sbb
push
ins
into
push
pusha
mov
add
mov
daa
xor
ss
jo
rcl
pop
nop
or
xchg
lods
rol
data16
shl
aam
and
xchg
es
shl
mov
out
clc
(bad)
mov
dec
cmc
mov
out
mov
push
jecxz
pop
ficomp
jg
inc
in
fwait
ins
inc
and
push
push
jecxz
jmp
jno
inc
mov
scas
ds
and
out
cmp
xor
adc
push
sbb
mov
mov
mov
movs
ins
pop
mov
sbb
xchg
std
jecxz
jmp
(bad)
daa
and
lds
test
pop
nop
sub
fcomp
arpl
xchg
and
in
sar
inc
fistp
mov
mov
or
arpl
pop
outs
aaa
sti
daa
jmp
xchg
in
daa
aam
outs
and
cmp
push
mov
or
mov
add
fstp
jae
ficom
jecxz
movs
cmps
and
lds
mov
out
into
loop
and
scas
call
cmps
rcl
sbb
and
outs
neg
aaa
mov
iret
push
push
sbb
or
xlat
mov
pop
xchg
mov
shl
mov
fwait
popf
ret
and
or
sub
jl
inc
jge
rol
ret
cwde
rcr
hlt
sub
adc
and
nop
jno
jmp
sbb
in
aaa
cwde
out
dec
imul
or
(bad)
xchg
inc
iret
ret
push
call
xlat
push
in
shl
pop
or
or
inc
call
jl
in
cld
jae
lds
jb
ret
xchg
pop
mov
sub
push
jno
dec
xchg
push
lods
adc
fist
push
xor
add
ss
js
fcmovu
or
sbb
jl
push
inc
test
mov
xchg
mov
and
adc
(bad)
mov
sti
or
(bad)
mov
ror
mov
je
pop
gs
arpl
mov
test
aad
and
pop
movs
fwait
aam
push
sti
sbb
ret
repz
mov
js
aaa
and
dec
mov
inc
lods
cld
shl
pop
sti
pop
scas
or
jmp
stc
hlt
dec
and
test
pop
cli
jl
xor
sbb
les
jmp
mov
xchg
cmps
add
ja
(bad)
jg
sbb
adc
fstp
imul
test
lock
aas
loopne
jle
es
scas
out
test
mov
mov
xchg
cs
jmp
mov
lds
jp
lods
mov
fisubr
pop
sub
mov
sub
or
xchg
and
aad
push
cmp
xrelease
sub
lahf
dec
sub
add
xor
or
sub
dec
pushw
jo
dec
mov
mov
inc
cmps
mov
xchg
jne
mov
xor
ror
mov
stos
dec
mov
loope
nop
leave
add
and
xchg
xchg
inc
mov
mov
mov
mov
mov
repnz
jmp
or
sub
int
sub
sub
and
jl
movs
cmps
sbb
and
and
xchg
push
mov
pop
mov
imul
bound
pusha
add
mov
lds
cmps
xchg
push
in
mov
pop
hlt
enter
jecxz
cs
lahf
test
jns
push
movs
xchg
cwde
cmc
rcl
xlat
ins
xor
dec
out
lods
(bad)
or
pop
fisub
aas
mov
jecxz
es
shr
pop
xor
shr
and
mov
jns
out
test
(bad)
sar
add
xchg
call
mov
out
push
out
call
cmp
lods
loopne
jmp
or
add
and
cmp
mov
nop
cmps
test
test
pop
xlat
inc
mov
pop
mov
pop
jb
imul
rcl
add
xchg
push
sbb
nop
loopne
push
into
pop
(bad)
lahf
and
or
pop
mov
dec
jns
push
pop
js
cld
jecxz
imul
jmp
cld
inc
and
clc
mov
pop
mov
je
sub
pop
jge
add
dec
sbb
jnp
mov
out
lea
loop
pop
pop
mov
scas
push
daa
jmp
pop
mov
lods
scas
(bad)
xor
sbb
mov
jle
pop
dec
xchg
or
loopne
lock
mov
aaa
xor
hlt
in
xchg
sub
inc
aas
js
cld
gs
pusha
push
add
cli
cld
sub
push
pop
push
stos
sbb
cmp
sub
shl
jnp
ins
cwde
xor
(bad)
mov
arpl
pusha
sbb
sbb
sahf
idiv
lods
fisubr
(bad)
std
sub
add
inc
fist
dec
nop
push
pop
mov
ret
inc
out
add
or
pop
dec
cmp
mov
jnp
test
pop
es
call
xlat
xchg
enter
sbb
xor
cld
jg
lock
(bad)
es
or
jecxz
sti
dec
mov
dec
add
gs
jo
add
sub
sbb
lods
adc
cmps
retf
lds
inc
test
lods
call
xor
mov
mov
addr16
aas
inc
and
dec
lods
mov
mov
jle
pop
call
xlat
jne
pushf
dec
shl
jmp
jne
sbb
(bad)
popa
cmc
jne
push
jg
xchg
mov
push
pop
xrelease
addr16
fisubr
ins
pop
add
repz
jns
cmps
add
aas
(bad)
xor
mov
cmp
aas
or
adc
aam
and
loopne
jmp
and
lock
mov
int
or
xlat
pop
aad
cs
inc
cmc
in
add
stos
add
int
cmp
mov
lods
mov
cmp
mov
sti
mov
and
cmp
pop
ds
cwde
xchg
shl
out
jns
pop
push
inc
mov
and
bswap
cmps
call
sbb
repz
ret
xor
shl
xor
sub
pop
push
repnz
mov
cmp
and
jl
stc
push
mov
leave
pusha
bound
pop
push
mov
pop
div
or
inc
cmps
pop
test
mov
cmp
xchg
push
ja
jbe
mov
dec
jl
and
adc
test
(bad)
add
fstp
call
cdq
stc
test
lds
(bad)
jp
add
pop
cmp
cdq
and
loop
mov
cmp
dec
mov
add
mov
mov
(bad)
dec
add
push
add
fstp
push
cmps
es
ja
retf
mov
jmp
jmp
push
and
xchg
inc
mov
xlat
pop
or
push
les
popf
mov
out
ss
and
ins
xchg
xor
ffreep
sbb
pop
iret
sar
out
js
sbb
imul
cdq
sbb
ss
out
mov
icebp
mov
xchg
add
pop
loope
(bad)
aaa
loope
imul
lahf
sbb
mov
and
sub
in
cmp
mov
mov
mov
jmp
and
leave
pushf
loopne
or
jns
rol
add
xor
clc
call
jnp
mov
xchg
jne
lahf
cmp
int
sti
add
jge
dec
jg
arpl
ss
xor
dec
mov
fmul
jg
pushf
xchg
mov
retf
ret
pop
loop
sub
imul
into
inc
lds
push
sbb
daa
dec
pusha
mov
jg
sbb
ins
mov
pop
mov
mov
xchg
cdq
pop
ror
mov
enter
cs
retf
clc
mov
mov
or
xor
retf
sub
inc
push
lahf
aaa
lods
ret
jl
dec
pop
rcr
dec
dec
xor
(bad)
movs
mov
xchg
shl
std
arpl
xchg
pop
or
jl
aam
sbb
fdivr
pop
int
ret
out
jge
inc
aad
xchg
lahf
xor
jmp
repz
arpl
dec
sti
xchg
js
hlt
and
retf
sub
sub
out
bound
and
stc
repz
sbb
mov
cmp
cmp
mov
gs
dec
mov
dec
sti
mov
dec
fsubr
dec
pusha
iret
movs
js
pop
xchg
sub
das
leave
xor
les
push
fs
jae
sti
(bad)
scas
mov
dec
jg
ds
cli
push
sub
pop
adc
call
xor
movs
cwde
into
sbb
push
scas
push
mov
movs
(bad)
mov
sar
inc
add
fwait
jg
cdq
(bad)
mov
push
(bad)
fwait
stc
pop
mov
sahf
loopne
xchg
lods
mov
sub
pushw
push
and
push
popf
or
xchg
xor
std
jl
adc
imul
push
sub
pushf
fcmovnu
loopne
pushw
sbb
retf
test
add
jb
inc
inc
add
sub
repnz
xchg
pop
add
jl
dec
push
mov
add
bswap
or
rcr
mov
repnz
cmp
xor
(bad)
xor
jmp
and
dec
mov
mov
push
pop
cdq
fisttp
into
sub
(bad)
icebp
in
iret
push
icebp
jp
imul
mov
(bad)
scas
push
and
inc
mov
(bad)
mov
lock
xor
adc
mov
mov
aad
jns
or
inc
xchg
pop
push
ds
pop
icebp
jecxz
xor
jmp
int3
out
leave
push
cmp
aad
jle
fistp
das
jnp
js
aaa
xchg
push
sahf
adc
dec
xlat
pushf
xchg
cmc
mov
inc
ja
ror
pop
repz
add
mov
cmp
cmp
push
sbb
mov
inc
mov
sub
retf
movs
icebp
aad
jns
pop
les
jnp
xchg
mov
mov
push
fldcw
ret
xor
mov
jnp
enter
adc
pop
inc
sub
push
aaa
pop
mov
mov
and
lods
push
jmp
xchg
mov
iret
test
test
mov
or
aam
sub
pop
jecxz
leave
ins
je
mov
mov
mov
fidiv
xchg
test
retf
dec
out
mov
mov
xchg
out
(bad)
xor
fld
es
mov
mov
inc
int
add
lea
popa
pop
mov
mov
cmp
add
aas
addr16
vphsubbw
sbb
inc
shr
loopne
aam
fs
ss
js
push
test
ins
mov
out
dec
pop
paddb
pop
xor
out
loope
shl
xchg
ds
cli
scas
mov
pop
add
pop
loopne
ret
dec
and
fwait
jb
sub
push
ins
inc
stos
adc
or
mov
call
sbb
test
add
adc
loopne
push
add
mov
pop
in
push
in
out
adc
outs
adc
ret
mov
cmc
mov
out
mov
jl
ret
and
push
adc
shr
jecxz
clc
shl
dec
out
sti
mov
mov
pop
(bad)
cmp
xor
xor
inc
xor
xchg
fldenv
inc
or
xor
mov
call
pop
retf
scas
mov
inc
stos
nop
inc
es
inc
add
push
or
jnp
dec
rcr
xchg
push
sub
jmp
scas
and
hlt
mov
mov
retf
ret
mov
or
or
fsub
loopne
xchg
adc
or
jle
jecxz
cmp
cdq
jecxz
push
adc
ins
sbb
dec
sbb
enter
hlt
call
adc
inc
retf
rcr
cld
xchg
shl
adc
ins
mov
mov
dec
or
add
movs
sti
cmpxchg
sub
add
sub
xor
(bad)
cmc
sbb
sub
push
or
jmp
hlt
movs
pusha
ret
and
xchg
retf
sub
push
sub
cli
xchg
push
les
ud1
mov
adc
or
adc
xor
pop
cmps
fwait
int
xchg
xchg
addr16
jecxz
outs
pusha
dec
lea
xor
cdq
(bad)
dec
and
outs
ins
movs
cli
js
xor
(bad)
xor
push
into
xchg
cli
fistp
bswap
test
jo
inc
jmp
fsub
cvtps2pd
lds
(bad)
sti
xchg
cli
(bad)
outs
mov
imul
mov
mov
mov
push
xchg
pop
retf
xlat
pop
xor
fmul
dec
aas
les
movs
pop
lods
jle
(bad)
jno
xchg
pushf
adc
mov
div
mov
lds
movs
jmp
xchg
jmp
(bad)
and
jbe
stos
shl
cmps
fisttp
aam
xor
push
xchg
inc
in
cmc
call
loope
push
jecxz
mov
adc
sti
mov
or
fld
sahf
in
add
stc
loop
popf
daa
aas
lea
mov
cdq
xor
mov
jp
fldcw
popa
repz
sub
and
test
sub
stc
jbe
adc
test
pop
jle
adc
test
fst
xchg
dec
loopne
and
mov
and
pop
shl
ss
jmp
js
pop
aad
fild
push
sub
jle
jge
stos
xor
jbe
jle
out
iret
sub
pop
xchg
push
(bad)
repz
rcl
fidiv
mov
inc
jl
aam
mov
lock
adc
or
aam
fwait
xor
jmp
jo
mov
popf
adc
xor
loope
push
bound
cmp
sbb
cld
add
sub
movs
mov
cmp
gs
add
(bad)
jnp
sub
xor
mov
add
ret
cli
in
lock
jno
fisub
in
sub
je
mov
push
jecxz
mov
cmp
mov
nop
je
test
rcl
mov
sti
and
in
in
mov
or
out
adc
cdq
push
test
mov
mov
aad
add
fwait
mov
mov
add
stos
pop
mov
add
jecxz
xchg
mov
shl
ret
fist
push
adc
pop
jnp
lock
jmp
icebp
cmps
sub
imul
add
enter
pop
pop
shl
cmp
(bad)
cmp
je
fist
dec
xchg
ficomp
aaa
mov
fwait
mov
xor
imul
adc
test
daa
(bad)
jmp
push
ds
push
pusha
cmp
sbb
call
lods
mov
push
pop
mov
jg
js
xchg
mov
cmp
add
(bad)
jns
cmp
rol
mov
adc
sub
test
test
mov
inc
imul
xchg
dec
test
mov
dec
stos
jb
out
fild
add
jb
xchg
lock
mov
mov
or
pushf
push
call
cld
inc
mov
leave
shl
xchg
inc
ds
enter
mov
out
fld
sbb
cmc
cmp
sub
pop
int3
loopne
or
mov
and
popa
jmp
scas
es
int
inc
into
adc
daa
pop
mov
mov
ins
stos
xchg
rol
and
pop
push
or
mov
movups
icebp
mov
hlt
(bad)
sbb
cmp
sub
inc
out
push
jb
mul
or
adc
sbb
dec
adc
mov
scas
shl
mov
mov
jle
iret
shl
imul
test
inc
cmp
push
adc
rcr
lahf
mov
mov
dec
push
push
enter
loop
pop
jl
sub
ret
loopne
sbb
mov
div
xchg
test
mov
es
retf
pop
ss
push
jb
inc
sub
ror
push
push
xor
add
mov
in
xchg
fisub
dec
jl
outs
or
sar
dec
jnp
cmps
xchg
inc
push
and
sahf
mov
mov
outs
and
push
mov
mov
les
into
lods
fld
xor
jle
movs
shr
jno
pop
ror
rol
jp
add
mov
(bad)
push
in
neg
pop
dec
fnsave
mov
shl
cmp
mov
pop
out
dec
aam
jno
adc
and
popf
repz
dec
in
fsubr
aas
mov
push
and
int
popf
ins
int
mov
imul
cmp
xchg
sbb
ins
mov
out
or
jge
xor
mov
das
cmc
pop
clc
add
xor
jp
out
sbb
mul
fimul
cld
pop
int
movs
xchg
sbb
mov
xor
sub
or
sbb
add
icebp
ins
xor
cmps
mov
popf
mov
lods
mov
(bad)
dec
sahf
fld
sub
mov
jg
movs
sub
rcl
arpl
pop
sbb
mov
jp
adc
mov
inc
dec
into
mov
jns
or
cmp
adc
adc
mov
mov
mov
or
pop
(bad)
jp
cli
ja
fadd
inc
loopne
push
jb
inc
push
adc
cs
leave
inc
mov
(bad)
or
add
push
pop
or
mov
js
loopne
pop
inc
mov
fdivr
pop
mov
or
ins
loop
aaa
aas
jo
cvttps2pi
xor
cwde
inc
mov
mov
sub
adc
mov
std
adc
dec
out
pop
push
mov
mov
in
push
call
push
daa
sysexit
pop
fwait
call
pop
jmp
add
or
icebp
rcr
or
cli
fcmovnb
xchg
xchg
in
add
icebp
shl
iret
fcmovnbe
aam
or
dec
fs
movs
jp
aam
mov
mov
mov
xchg
add
push
push
fisttp
dec
sar
movs
stos
push
ins
jmp
test
sbb
mov
cwde
and
xchg
out
nop
pop
js
add
dec
into
daa
xchg
lahf
xchg
pushf
call
jl
lods
mov
mov
cmp
cmp
push
lds
mov
pop
or
fild
pop
inc
les
sub
sub
mov
dec
xchg
push
out
pop
xor
xor
sub
xor
add
sbb
xor
hlt
out
sti
test
jp
imul
add
pusha
out
xchg
sbb
sbb
mov
in
js
and
push
scas
iret
outs
dec
sbb
xor
adc
pop
dec
loopne
lahf
jae
cs
mov
mov
pop
and
sub
(bad)
sbb
mov
sahf
pop
cmp
ret
jle
adc
fcmovb
mov
stc
call
mov
mov
aaa
ds
or
add
scas
loopne
test
mov
fs
fst
cmps
in
push
xchg
mov
inc
add
ror
outs
xchg
addr16
repnz
loop
in
sub
ret
setns
retf
fisttp
jmp
pop
aad
int3
(bad)
shl
das
cmp
adc
pop
popf
xchg
arpl
out
lods
pop
cs
xchg
pop
nop
jno
push
sbb
(bad)
dec
jns
jge
cmp
push
iret
mov
neg
pushf
push
jmp
pop
sub
jle
xor
jmp
and
mov
cmp
ret
pusha
std
push
aam
(bad)
lods
push
(bad)
pop
jo
aas
xchg
jno
push
cdq
xchg
fld
cmp
ret
test
out
mov
add
mov
dec
add
mov
jge
pop
(bad)
mov
sub
ds
icebp
xchg
loop
lds
jbe
push
fdivr
popf
fwait
push
fnstenv
mov
shr
mov
or
pusha
cmp
cmovb
pop
inc
out
push
xor
hlt
push
outs
sbb
mov
shl
sbb
scas
les
nop
idiv
sbb
enter
xchg
sbb
js
ins
es
daa
rol
es
xchg
add
aaa
xchg
mov
mov
ds
movs
pop
or
std
mov
ficom
mov
mov
rol
aas
out
mov
sub
push
inc
push
push
dec
je
jl
push
retf
loope
mov
mov
xchg
(bad)
xor
inc
or
lahf
xchg
in
xchg
jne
sub
shl
nop
movs
mov
sti
jg
fld
sbb
fsub
pusha
dec
pop
ins
test
dec
test
cmps
in
loope
dec
push
aam
rcl
stos
ins
add
jno
mov
test
push
pop
ja
push
and
addr16
gs
aad
or
pop
and
push
inc
mov
into
neg
jge
pop
stos
mov
shr
dec
test
movs
add
inc
popa
mov
mov
loopne
cmp
fstp
sub
out
and
xchg
push
mov
fstp
not
jmp
jne
shr
loope
adc
mov
cmp
lds
js
cli
ret
jb
dec
cmc
loope
cdq
cmp
iret
inc
lds
iret
fsub
push
mov
pusha
jmp
(bad)
mov
add
lock
adc
out
mov
stos
cli
enter
(bad)
push
hlt
shl
gs
adc
mov
repz
mov
mov
clc
in
stos
aaa
test
cmps
or
push
pop
dec
stos
jmp
jmp
push
jno
push
xchg
inc
ret
aad
fs
mov
and
nop
out
mov
pop
sti
adc
inc
push
jb
push
daa
retf
pop
bound
ja
shl
adc
pop
mov
fnstenv
fs
(bad)
or
and
pop
int3
imul
and
ins
std
fimul
mov
sar
mov
dec
jmp
and
ds
bound
repnz
idiv
mov
dec
dec
pop
sbb
xchg
or
in
adc
push
jnp
sbb
outs
out
das
push
je
push
(bad)
mov
iret
lock
cmc
lods
xchg
push
sbb
jnp
dec
xor
inc
retf
mov
ret
mov
push
outs
sbb
cmp
jg
inc
bound
sub
jnp
inc
arpl
xchg
xchg
inc
inc
push
jg
(bad)
jae
(bad)
mov
jecxz
xchg
xor
add
jns
movs
sbb
mov
pop
out
xchg
pushf
(bad)
jno
sub
cmps
cli
mov
lahf
adc
rol
jp
out
adc
or
inc
mov
pop
(bad)
pop
addr16
cdq
mov
aad
xor
icebp
sub
mov
in
out
aam
xlat
(bad)
lods
xchg
mov
sbb
adc
ins
pop
and
push
dec
jle
into
xor
push
pop
rcr
push
add
jecxz
lahf
aad
dec
fsubr
pusha
lahf
inc
inc
call
shl
and
hlt
sbb
mov
add
dec
jmp
pop
ss
pop
jg
cmc
fisubr
xor
jbe
push
es
les
xchg
mov
pop
pop
push
cli
xor
outs
dec
dec
pop
sub
jmp
push
pop
cs
cmc
xchg
mov
dec
js
mov
std
ret
pop
xor
pop
jmp
sbb
dec
and
ja
push
sbb
inc
sbb
mov
out
jl
sti
fimul
lock
imul
in
in
push
mov
call
dec
dec
inc
add
mov
(bad)
jno
xchg
enter
imul
fcomp
sub
inc
in
and
xchg
inc
retf
xor
add
ret
cwde
data16
std
xchg
ins
xor
dec
mov
dec
cmc
ret
xor
fcom
mov
(bad)
rcl
adc
inc
jmp
aas
shl
fnsave
enter
sbb
test
push
xor
mov
in
ret
jns
adc
imul
cmp
shl
sub
jecxz
mov
jecxz
sbb
push
sbb
and
loopne
xchg
xchg
nop
arpl
xchg
test
xchg
adc
inc
xchg
mov
jge
int3
jmp
mov
sub
loope
xchg
sbb
hlt
sbb
mov
ins
rol
push
add
mov
push
jle
push
or
mov
les
aas
push
cmp
outs
ss
jnp
frstor
jmp
seto
cmp
pop
pop
scas
or
push
mov
fstp
adc
inc
int
mov
(bad)
pop
jne
mov
push
pop
retf
pop
cmps
ret
or
pop
dec
adc
test
ficom
mov
sub
outs
and
and
div
cmp
gs
pop
push
in
or
lea
adc
call
or
mov
and
jmp
mov
neg
sbb
retf
loope
aam
mov
imul
mov
sub
(bad)
mov
out
jmp
or
cmp
lods
inc
push
sub
arpl
or
cmc
xchg
pop
pop
addr16
jle
std
pop
and
lea
xchg
cmp
call
pushf
stos
imul
leave
xchg
js
sbb
fiadd
bound
sub
aaa
fs
jecxz
push
push
lds
inc
cmps
cli
loop
inc
mov
xor
jl
xchg
fnstsw
pop
fs
ret
mov
cmps
jge
popa
outs
(bad)
mov
aam
push
xor
out
cmp
sahf
mov
loop
mov
test
test
inc
dec
mov
std
jnp
scas
adc
push
loopne
cli
xor
xchg
xor
movs
push
lods
jns
adc
xor
ror
mov
adc
pop
and
mov
and
mov
mov
fisub
pop
jmp
mov
sbb
xchg
fcom
xor
mov
sar
xor
(bad)
fwait
sbb
pop
sbb
bound
out
push
std
es
(bad)
std
iret
outs
repz
jns
clc
xor
mov
cmp
mov
stos
push
mov
xchg
push
cmp
fld
movs
cmps
rcr
mov
jmp
movs
pop
je
loopne
rcl
xchg
jb
sbb
mov
mov
mov
sub
popf
test
test
push
ret
lahf
movs
shr
xchg
xchg
repz
dec
add
inc
rcl
es
div
xchg
lahf
aad
movs
mov
mov
imul
mov
sub
(bad)
fbstp
mov
or
cmps
jp
int
add
inc
push
mov
cmp
lea
dec
out
jmp
push
xor
enter
xor
pop
daa
imul
cli
sbb
enter
int3
test
shr
push
xchg
cmc
je
mov
shl
loop
dec
in
jae
rcr
sbb
icebp
mov
pop
clc
pop
cmps
cli
out
push
inc
sbb
(bad)
jns
inc
jbe
fisub
fldenv
sbb
neg
or
or
lahf
fisub
add
xor
stos
cmp
xor
xchg
retf
jbe
lds
out
out
add
add
pop
or
add
pop
pop
mov
jns
lods
outs
xchg
and
sbb
inc
fwait
mov
(bad)
xchg
xor
clc
arpl
mov
ds
mov
jl
dec
sub
popa
loopne
fcom
fimul
xor
not
adc
retfw
xor
leave
pop
js
fcom
pop
pop
mov
xchg
sbb
xchg
cli
push
data16
gs
jno
add
adc
loopne
aas
cmp
push
mov
fiadd
out
xchg
pop
cmp
loop
cmp
scas
add
sub
lahf
push
fucomip
(bad)
repnz
sbb
jbe
cmc
ror
out
mov
fwait
pop
movs
xchg
dec
stc
mov
mov
sub
cmp
fcomp
cmp
test
mov
sar
imul
inc
pop
or
adc
pushf
mov
in
scas
(bad)
ins
mov
xor
aas
pushf
in
mov
or
punpckldq
int3
mov
mov
sbb
sbb
push
loopne
mov
sbb
(bad)
aam
mov
test
and
stos
pop
inc
nop
std
adc
cmc
cmc
mov
and
pop
daa
in
(bad)
out
xor
les
jo
sbb
jl
mov
repz
xchg
xlat
and
sbb
dec
(bad)
fs
pop
sub
fldcw
cli
jb
cmp
jbe
das
mov
xchg
(bad)
out
adc
or
mov
adc
xchg
push
int3
sub
ja
mov
movs
inc
js
adc
into
adc
fild
jl
icebp
sbb
stc
dec
sbb
or
lods
adc
xor
pop
inc
xor
cmp
in
call
jb
jl
or
ret
shl
pop
mov
dec
cmp
inc
int
fcmovb
or
or
and
add
jo
add
je
imul
shr
data16
retf
(bad)
jmp
loope
add
(bad)
mov
add
jns
cmps
int
fsub
pop
cmps
movs
and
push
dec
imul
test
out
xchg
fadd
pushf
sbb
mov
loopne
sub
cmps
idiv
cmp
movs
mov
call
sbb
sub
stos
mov
js
add
adc
adc
jo
loop
pop
add
dec
addr16
fst
ret
mov
push
imul
fsub
jge
repnz
test
mov
std
or
dec
icebp
int
sub
mov
fidivr
rcl
cmps
adc
cld
push
cmp
fild
sub
pop
loope
push
outs
sub
lock
pop
cwde
jb
ret
out
int
(bad)
(bad)
test
cs
mov
hlt
arpl
jo
mov
outs
mov
arpl
jo
fnsave
sub
xor
int3
add
ret
call
gs
(bad)
xor
xchg
push
rcl
test
jnp
hlt
aaa
xchg
stc
push
xchg
add
and
loop
jp
sbb
stos
xchg
sub
adc
push
pop
push
jae
mov
fcomp
(bad)
aaa
and
inc
jno
loop
dec
inc
shl
and
and
aad
(bad)
cmp
and
nop
pop
pop
lods
or
jb
sbb
pop
(bad)
stc
sti
ins
cmp
dec
js
mov
pop
movs
mov
inc
xor
icebp
hlt
dec
fwait
out
retf
loopne
push
aad
xchg
adc
loopne
ss
cld
or
add
dec
lahf
fcom
mov
popa
mov
and
gs
sahf
fs
add
imul
xor
rcl
retf
jae
jge
push
adc
stc
and
add
jmp
pushf
fsubp
fsubr
and
sub
cli
and
in
ja
ja
adc
nop
mov
out
xchg
dec
fsubrp
(bad)
mov
push
push
mov
dec
lds
dec
outs
out
dec
fldcw
inc
in
fbstp
repnz
call
add
bswap
inc
sahf
(bad)
data16
inc
les
pushf
scas
push
out
mov
rcl
std
pop
jmp
shl
std
fidiv
lods
inc
shl
lahf
popf
outs
sbb
xor
jmp
mov
pop
add
lds
fidiv
cmp
(bad)
adc
leave
dec
ficomp
adc
mov
adc
adc
js
xor
(bad)
mov
je
repz
push
bound
aas
lahf
mov
in
out
jle
pop
imul
ins
xchg
jmp
add
xchg
mov
popf
shl
mov
add
xor
inc
mov
jecxz
icebp
pop
(bad)
outs
xchg
xchg
mov
sbb
scas
scas
(bad)
lods
inc
cmp
or
fld
cmp
inc
mov
sub
dec
add
xchg
test
xchg
loope
mov
adc
xor
cld
in
or
(bad)
ret
mov
in
aas
mov
xor
cmps
and
push
xor
popa
jmp
movntps
mov
inc
push
mov
jecxz
mov
push
add
sbb
test
and
dec
sbb
cli
std
mov
addr16
xchg
sub
stos
pop
in
and
bound
add
adc
jg
pop
iret
push
dec
xchg
loopne
dec
xor
mov
xchg
cmps
jl
fmulp
cmc
jb
aas
je
mov
fisub
cs
fnstcw
inc
movs
test
xchg
sti
in
leave
pop
jg
cmp
push
nop
inc
mov
test
sub
mov
and
cmps
xchg
push
ss
jg
add
cmp
and
test
gs
fstp
je
imul
add
into
fldcw
add
cmp
repz
mov
add
fcmovb
pop
mov
movs
fisttp
sbb
dec
mov
push
jg
mov
mov
mov
adc
dec
dec
sbb
inc
clc
push
mov
push
ds
xchg
pop
jo
cmp
icebp
mov
or
mov
jmp
call
sub
test
mov
adc
clc
pop
xchg
jle
shl
inc
jge
xor
fild
sbb
xor
add
into
mov
pushf
fild
cmp
daa
gs
push
push
test
test
ins
jne
(bad)
fsubr
fwait
mov
mov
xor
inc
mov
xchg
out
(bad)
out
arpl
adc
mov
dec
xlat
jmp
dec
xchg
mov
repz
(bad)
sbb
std
shr
mov
add
out
repz
pusha
hlt
push
pop
jbe
out
popf
or
jl
cld
fwait
or
imul
mov
xor
stos
xchg
xlat
xor
and
jg
mov
div
ins
lods
shl
pop
repz
and
ror
bound
mov
or
adc
outs
cwde
loopne
in
div
jmp
add
sub
jle
adc
ret
daa
pop
xor
sub
xchg
call
leave
pop
mov
inc
popa
and
ds
sar
sbb
xor
fisttp
(bad)
(bad)
aam
or
mov
test
test
dec
popa
pop
iret
fadd
adc
push
push
sub
or
test
and
jmp
mov
cdq
jo
test
and
push
jns
mov
jmp
jae
aad
addr16
movs
outs
jle
and
out
cmps
pusha
push
sahf
xchg
adc
fild
sbb
cdq
mov
rcr
(bad)
(bad)
(bad)
and
pop
sbb
inc
loope
shr
push
jne
push
push
cld
stc
sbb
add
call
dec
jno
aas
or
sub
sti
ror
(bad)
sahf
ds
push
mov
cld
les
jg
iret
icebp
ds
out
shl
xchg
in
sahf
push
add
stos
adc
mov
and
nop
fxch
jecxz
(bad)
cmps
ficom
popf
leave
push
xor
cmp
add
mov
jmp
gs
out
in
jne
add
enter
pop
stos
stos
or
jne
jae
xor
add
cmp
mov
push
mov
sbb
sbb
jecxz
xchg
imul
bound
adc
xor
retf
pop
mov
adc
jno
sbb
mov
loope
mov
test
ret
inc
bts
xchg
and
in
imul
cld
dec
adc
addr16
aam
inc
daa
mov
mov
adc
cmp
inc
sti
fwait
xchg
push
cld
inc
sub
xchg
or
xchg
or
sbb
jbe
sub
fisub
mov
jb
cmps
ret
js
popf
jne
jns
cld
mov
mov
sbb
xor
pop
in
push
icebp
cmps
or
les
xchg
xchg
out
push
fdivr
(bad)
(bad)
mov
or
ins
jg
repnz
dec
jp
ins
sub
or
xchg
xor
lods
(bad)
cdq
cwde
mov
cmp
movs
mov
mov
(bad)
mov
or
cmp
mov
pop
loop
xchg
cmc
inc
pop
test
nop
jno
push
lea
lds
bound
inc
xchg
aaa
pop
fdiv
movs
cmovb
pop
jmp
into
xor
shl
fisubr
js
push
out
dec
jl
cmp
int
out
or
js
sub
test
mov
jl
enter
inc
inc
inc
sbb
mov
mov
repz
mov
in
jp
mov
or
xchg
sub
xor
add
mov
dec
dec
icebp
adc
test
out
mov
mov
aam
inc
jbe
jle
out
mov
shl
push
push
(bad)
adc
sti
push
aaa
test
jmp
jp
and
push
(bad)
(bad)
jns
sbb
fwait
aam
add
nop
or
repz
push
stc
cld
or
push
arpl
test
imul
cmps
dec
idiv
mov
call
daa
int
and
cdq
popf
mov
(bad)
ins
sbb
inc
dec
ficomp
mov
or
pop
sbb
add
(bad)
sub
adc
mov
(bad)
adc
in
inc
rol
xor
stc
out
retf
imul
cmps
add
push
cmp
out
xchg
add
mov
stc
sub
and
pop
cs
jae
xchg
leave
ret
sbb
nop
int
or
push
add
dec
(bad)
jb
pop
sub
into
pop
js
ins
cmp
dec
jge
xchg
mov
leave
lods
sbb
les
dec
push
jmp
mov
dec
adc
cs
lock
dec
and
loopne
sar
jl
dec
test
xchg
dec
push
ss
arpl
push
cmp
dec
lock
inc
push
(bad)
in
mov
sub
push
cli
shr
mov
ret
jl
leave
fcom
les
shl
push
lods
aas
sub
dec
cmc
xor
loop
dec
jge
dec
cmp
ds
xor
loope
cmps
mov
and
mov
(bad)
movs
(bad)
enter
mov
jbe
mov
mov
cmp
and
mov
fisubr
out
mov
sub
retf
outs
in
pop
sub
mov
mov
jecxz
push
add
add
jns
leave
(bad)
(bad)
pop
push
sbb
(bad)
pop
sub
mov
pop
ss
test
out
or
cwde
push
xor
sbb
lods
jne
out
pop
jp
fisubr
cmc
div
std
mov
(bad)
bound
xchg
dec
retf
sub
imul
pop
mov
pop
dec
sbb
pop
sahf
pop
popa
imul
pop
jno
and
test
xor
lahf
adc
std
cmc
pop
jo
push
(bad)
dec
mov
shl
iret
add
push
(bad)
iret
fdiv
js
dec
and
(bad)
cld
in
outs
daa
cmp
push
data16
pop
mov
sub
std
mov
cmp
(bad)
shl
inc
repnz
mov
pop
or
(bad)
fdivr
rol
out
inc
(bad)
int3
es
jmp
or
ds
dec
pop
sub
dec
lods
ss
stos
sub
xlat
ins
cmps
not
jmp
shr
mov
int
mov
pop
fcmovbe
shl
stos
push
or
mov
imul
xabort
inc
xchg
jo
mov
push
outs
loop
adc
pushf
dec
pop
test
daa
ins
fcmovnbe
jno
scas
mov
cmc
int
jo
imul
mov
cmp
sbb
dec
(bad)
(bad)
sbb
inc
adc
aam
add
sub
icebp
xor
jg
mov
cmp
fs
rcl
cld
into
daa
(bad)
inc
cmp
int
popf
adc
push
jmp
xor
adc
jge
push
leave
les
jl
jno
pop
rcl
jge
iret
sbb
(bad)
xor
adc
mov
(bad)
jae
or
xor
in
dec
mov
mov
mov
leave
mov
jae
stc
lods
mov
or
mov
je
imul
mov
in
push
push
ret
out
fisub
out
or
lods
out
xor
mov
xor
out
mov
rcl
pop
cmp
int
rcpps
inc
jmp
icebp
sbb
cmps
add
(bad)
in
jecxz
cmp
ret
xor
out
stc
and
mov
mov
retf
jecxz
out
inc
lods
mov
shl
sbb
jp
cmp
pop
leave
addr16
xor
ds
(bad)
out
push
cmp
dec
push
xchg
out
daa
retf
mov
in
mov
rol
xor
adc
out
and
push
xchg
in
adc
push
cmp
leave
ds
pusha
imul
fisubr
push
inc
and
push
rcr
test
and
loope
aaa
push
jmp
mov
test
ss
push
jns
sahf
pop
pusha
mov
xchg
push
pop
inc
mov
jno
and
sbb
dec
adc
sbb
fwait
sbb
adc
fidivr
out
fsubr
xchg
and
cmps
retf
mov
idiv
fst
inc
out
mov
ror
sbb
rcr
dec
ret
es
xor
mov
stos
pop
mov
imul
sub
stos
jl
mov
push
dec
(bad)
mov
sub
test
popa
sbb
jle
cmp
add
test
lods
push
mov
ja
push
fs
fld
mov
jb
fsubr
loope
and
ds
movs
sbb
adc
pop
cmp
cmp
sub
dec
ins
shl
or
mov
mov
xchg
push
dec
cmp
cmp
scas
inc
stos
adc
inc
mov
jl
xchg
(bad)
test
sub
fstp
imul
callw
and
and
sti
out
ins
shl
shr
push
xor
xor
pop
sbb
sub
das
xlat
push
inc
cmp
xor
sub
add
or
pop
xor
cmps
stos
or
push
loope
in
cmps
aaa
rcr
jbe
retf
or
call
lock
neg
dec
jmp
shl
pop
sbb
adc
push
push
fld
jp
cmp
push
mov
ret
out
not
or
addr16
data16
pusha
and
xor
sbb
test
dec
push
repnz
es
inc
iret
pop
sbb
pop
jl
mov
sub
push
imul
dec
adc
push
rcr
pop
sbb
imul
(bad)
in
std
xchg
cmp
push
jns
dec
(bad)
xchg
sti
mov
push
cmc
cdq
push
aad
push
test
cli
fnstcw
fsubr
scas
mov
and
mov
test
retf
cld
sub
adc
mov
cmps
jg
jns
addr16
or
out
jg
dec
test
xlat
js
jl
test
jnp
mov
jmp
aaa
test
sub
loope
mov
add
rcr
retf
loop
retf
push
xchg
mov
fdivr
jle
add
mov
inc
dec
scas
fst
retf
das
add
mov
test
test
test
mov
jb
sbb
or
dec
into
mov
inc
cmp
imul
imul
dec
imul
cmps
pushf
ja
push
popa
sbb
bound
cmp
loopne
xchg
dec
mov
inc
test
arpl
ret
fistp
out
push
mov
jmp
inc
ret
push
(bad)
mov
call
aam
and
test
cmp
outs
mov
retf
mov
xchg
stos
js
call
shr
add
sub
(bad)
and
lock
test
jbe
nop
das
adc
sub
pop
loopne
test
adc
push
ja
or
loop
das
dec
test
lock
inc
inc
or
fst
xchg
repz
(bad)
sub
ror
(bad)
sbb
mov
outs
inc
dec
fsubr
jle
sbb
aas
retf
xor
push
int
out
push
ret
jle
or
pop
cmp
dec
lods
leave
loop
and
cmp
gs
imul
call
jmp
pop
jecxz
out
and
sti
loopne
pop
stos
imul
jg
(bad)
out
push
fcmovu
and
daa
gs
xor
pop
jmp
push
push
add
test
movs
mov
or
sub
in
fsub
or
jg
xor
aas
adc
xor
xchg
(bad)
test
iret
ret
inc
push
(bad)
mov
sub
sub
xor
push
xchg
mov
addr16
add
push
add
repnz
push
cmps
xor
push
pushf
out
sbb
sub
mov
cmp
jmp
push
lahf
pop
xor
mov
inc
data16
(bad)
loop
icebp
mov
and
sbb
lahf
movs
mov
pop
ins
in
xor
mov
and
outs
mov
sub
loope
dec
xchg
mov
push
cmps
movs
mov
mov
dec
adc
sbb
xor
sti
stc
(bad)
popw
fnstenv
or
xor
cmps
jns
int3
stos
xchg
jge
jg
dec
pushf
push
loop
adc
mov
and
je
clc
cmc
pop
push
das
xor
in
js
retf
adc
out
xor
ins
rcr
sti
(bad)
aam
out
(bad)
cmp
in
shl
add
ret
loope
loope
movs
data16
les
push
cmp
mov
aam
scas
rcl
in
ds
sbb
sbb
sbb
aas
loope
dec
(bad)
push
les
jne
call
add
sti
pusha
mov
pop
jp
xchg
enter
test
sahf
dec
sub
outs
inc
xor
and
xchg
aaa
fsubr
inc
test
push
jb
mov
jno
add
mov
mov
outs
xchg
jl
jle
mov
or
adc
pop
pushf
pop
rcr
das
mov
imul
mov
lods
mov
xlat
jb
shl
adc
mov
mov
test
(bad)
imul
adc
push
jno
push
and
movs
pop
dec
and
pop
jle
movs
xchg
lods
mov
jne
add
mov
sub
lock
mov
dec
(bad)
in
add
lods
pushf
movs
mov
and
adc
sub
mov
mov
pop
pop
cmp
pop
cmps
pop
sbb
cs
push
cmp
xchg
mov
rcr
jmp
mov
js
xchg
aad
mov
add
mov
repnz
test
pop
lods
push
xor
aam
pop
xor
out
iret
out
inc
repz
popf
mov
imul
xor
xor
lods
movs
inc
out
test
adc
fidivr
jmp
jns
adc
jo
into
xchg
mov
aad
push
push
enter
add
xchg
ret
xor
scas
jnp
dec
js
jmp
adc
mov
dec
mov
mov
scas
(bad)
out
mov
xchg
mov
cmp
sbb
sbb
imul
sbb
mov
test
push
es
sahf
in
int3
js
xor
pop
cld
neg
test
mov
lods
lock
daa
imul
adc
cmps
jmp
xor
mov
cmp
or
dec
inc
aas
and
sub
mov
lods
inc
daa
push
in
cmp
pushf
in
and
or
mov
push
pop
leave
(bad)
sbb
mov
push
fisub
xor
xor
cs
je
(bad)
jp
push
mov
popf
iret
mov
cmp
into
rcr
cmp
fdivr
stc
mov
jmp
(bad)
jge
cwde
push
mov
and
mov
rcl
push
mov
call
mov
dec
fidivr
in
repnz
addr16
push
sbb
push
sbb
shl
xchg
or
int
shl
mov
pop
dec
jmp
mov
call
xchg
dec
mov
dec
lock
add
push
adc
mov
mov
in
call
nop
mov
jbe
outs
stos
loope
fwait
sub
(bad)
retf
arpl
add
mov
aad
jmp
jno
gs
sub
adc
xchg
sub
xor
jp
mov
frstor
outs
in
enter
ins
das
mov
cmp
(bad)
jns
int
push
xlat
fnstsw
repnz
pop
mov
xchg
imul
pop
adc
jbe
arpl
ror
jge
das
mov
lods
mov
add
idiv
inc
popf
gs
imul
mov
mov
xor
or
mov
add
jo
cmp
into
repnz
sbb
add
cmp
xor
sbb
pop
cmps
pop
outs
or
cmp
bound
ss
das
test
dec
js
leave
lds
leave
push
cmc
mov
call
sti
fdivr
push
dec
jb
ss
jl
std
mov
mov
daa
push
sub
or
add
jmp
sub
or
data16
inc
pop
jnp
(bad)
not
inc
push
or
push
int3
out
and
data16
int
std
xor
push
sub
mov
stos
cmps
(bad)
cld
popa
fist
stos
nop
sahf
cmp
retf
call
mov
and
inc
in
jmp
dec
into
or
mov
sbb
repz
jae
mov
dec
mov
aam
test
push
jecxz
add
ja
inc
or
jbe
pop
daa
lea
nop
loopne
mov
(bad)
mov
cli
sbb
aas
xchg
mov
push
jmp
add
mov
neg
mov
test
sahf
in
xor
push
jnp
xor
jmp
adc
int3
retf
(bad)
xchg
test
xchg
mov
test
test
mov
add
push
mov
jns
xchg
mov
stc
mov
sahf
pop
pop
ins
aas
iret
dec
push
sbb
bound
sub
arpl
xor
pop
scas
cmp
addr16
pushf
sbb
mov
pop
add
cli
fldenv
or
push
sbb
push
push
dec
xor
sub
and
popa
sbb
push
outs
xchg
inc
je
adc
ins
cmp
(bad)
xchg
inc
jns
xor
xor
push
cli
jnp
cmc
inc
in
(bad)
mov
(bad)
cli
push
xchg
xor
dec
outs
(bad)
mov
adc
cmp
div
inc
adc
xchg
mov
jo
fidiv
icebp
push
dec
mov
nop
daa
mov
push
(bad)
pusha
add
push
outs
sub
sub
lds
pop
daa
xchg
sub
pop
and
test
mov
addr16
pusha
cmp
(bad)
js
(bad)
in
inc
push
cmc
mov
pop
lahf
imul
scas
lds
fwait
inc
cmp
push
push
jmp
xor
(bad)
cdq
dec
cmp
in
pushf
div
inc
loope
jnp
jmp
push
stos
in
lahf
push
push
sti
arpl
int
sbb
sub
mul
xchg
xor
cmp
cmp
test
lea
mov
fucomp
adc
lods
fnstcw
mov
mov
add
mov
cdq
dec
jno
pop
icebp
mov
and
bound
and
movs
lods
and
push
pop
jecxz
pop
outs
fild
adc
daa
mov
dec
dec
mov
aaa
sub
daa
in
xor
xchg
xchg
outs
test
lahf
into
out
inc
jnp
xor
mov
xor
mov
popa
adc
sub
inc
fwait
ret
(bad)
aas
add
cmp
sbb
cmps
adc
pop
out
lahf
sbb
dec
dec
aas
jne
call
out
pop
cmp
cli
inc
sub
adc
mov
dec
push
pop
sub
ror
xor
push
sbb
cmp
call
daa
rol
mov
rcl
xchg
sbb
sub
sahf
sub
cli
aad
xchg
cmps
dec
pop
shr
bound
pop
sbb
pop
jg
adc
xor
mov
ins
mov
loop
add
sub
dec
das
dec
das
jg
sbb
inc
mov
push
(bad)
lock
jle
inc
push
cld
fwait
jge
arpl
and
mov
jne
sbb
test
(bad)
lahf
or
dec
add
pusha
iret
nop
mov
push
inc
ror
loop
into
imul
and
mov
cmp
mov
(bad)
jge
dec
imul
cmc
dec
icebp
ins
adc
aad
nop
or
jo
js
jb
jmp
cmc
adc
mov
mov
aas
pop
sub
div
cli
call
or
cmc
out
xor
clc
maxps
sub
mov
outs
inc
push
lock
mov
ds
dec
mov
hlt
dec
cmp
mov
js
add
add
(bad)
loopne
out
retf
ds
dec
push
or
push
mov
loope
sar
nop
pop
loop
or
test
out
loopne
cmp
sbb
clc
dec
in
sub
inc
pop
cld
cmp
int
dec
mov
adc
sti
sub
cmp
dec
aam
mov
mov
add
xlat
aam
retf
cs
xchg
push
cmc
push
ins
(bad)
test
pop
adc
retf
sub
or
sbb
into
pop
mov
jae
popf
dec
cmc
mov
out
(bad)
fcomp
cmc
jmp
cmps
inc
jge
pop
and
pop
enter
pop
xchg
adc
loope
fldcw
sub
mov
mov
push
jle
test
cli
or
jl
add
test
inc
imul
mov
adc
mov
jnp
scas
ror
fild
cmp
mov
jns
nop
push
add
lock
inc
out
sar
in
dec
jb
mov
lea
xchg
add
pop
push
sbb
sbb
popa
fwait
mov
add
imul
test
and
mov
out
cdq
mov
mov
sti
cwde
outs
loopne
iret
clc
adc
and
mov
mov
scas
movs
pop
in
fs
or
and
adc
fst
ret
dec
les
test
jmp
out
push
loop
(bad)
ds
and
mov
out
xchg
movs
aaa
fbld
adc
pop
sub
push
adc
pusha
(bad)
(bad)
nop
rcr
pop
add
xor
push
jb
lds
call
or
cmp
cmp
pusha
inc
aam
outs
out
stc
sub
push
push
and
outs
sub
popf
daa
and
shr
(bad)
cmps
jne
xchg
test
fnstenv
lock
add
sub
inc
pop
leave
(bad)
mov
dec
(bad)
mov
mov
clc
pop
lods
add
std
add
in
in
in
sbb
jne
and
retf
fcomp
mov
pop
add
lahf
mov
test
cld
scas
ds
inc
popa
xor
cmp
(bad)
jmp
jg
retf
xor
xor
inc
fs
js
stos
pop
scas
getsec
mov
and
scas
ins
fucomi
push
inc
jp
sub
test
ret
push
pop
adc
mov
stc
and
cmc
add
hlt
scas
stc
(bad)
or
jmp
xchg
xchg
scas
shl
test
dec
sub
and
jno
das
add
fisttp
rcr
retf
fwait
or
push
dec
cmp
sub
xor
mov
fidiv
xchg
loope
in
sbb
es
(bad)
xlat
add
lock
sahf
aam
test
cmps
ds
stc
mov
test
sub
mov
pop
adc
cmp
scas
out
hlt
mov
mov
dec
add
int
inc
xor
ds
mov
sub
mov
rcr
sbb
jl
jnp
ds
jle
and
hlt
jge
pop
jmp
xlat
bound
sbb
jmp
lahf
inc
cmp
push
hlt
sub
push
cli
jne
cmp
jl
leave
fld
rcl
cwde
ret
mov
jae
push
sub
or
sbb
dec
jl
movs
lock
dec
push
jge
inc
adc
fcmove
dec
xchg
(bad)
push
mov
clc
dec
sub
xchg
sub
sbb
fwait
pop
mov
pop
rcr
sbb
mov
pushf
test
mov
mov
jp
outs
cli
leave
test
mov
ins
jecxz
out
push
or
and
std
test
retf
mov
popf
sub
and
mov
sbb
mov
add
sbb
xor
call
call
jmp
fisubr
stos
jnp
adc
inc
jmp
push
pop
jbe
lods
xor
pushf
js
(bad)
(bad)
ds
push
jmp
adc
add
aaa
fsubr
cmp
cmp
or
jmp
pop
jg
push
xor
leave
pop
jae
push
push
hlt
adc
clc
aaa
daa
outs
xlat
pop
je
and
btc
jae
mov
cmp
add
cmp
cmps
das
mov
pop
loope
dec
aas
and
mov
xchg
sbb
dec
pop
je
popa
lds
js
or
push
mov
xor
inc
ret
mov
loop
popa
stc
dec
mul
shr
mov
or
pop
inc
sti
xchg
scas
mov
idiv
sub
pop
sub
in
sub
jo
inc
xor
mov
imul
dec
scas
shl
xor
jbe
mov
retf
cmps
and
pop
ds
jmp
div
fdiv
push
out
jg
xchg
popa
call
pop
xor
int
or
retf
loopne
shl
xchg
test
pop
mov
jg
icebp
cmps
and
mov
jb
fwait
repz
sub
rol
cmp
leavew
bnd
hlt
and
repz
rol
jo
lods
cmp
daa
into
add
pop
mov
mov
icebp
inc
test
(bad)
jl
es
idiv
xor
call
jmp
add
(bad)
xor
jmp
mov
mov
out
pop
in
hlt
ror
ins
mov
mov
xchg
in
je
repz
xchg
(bad)
out
outs
repz
add
retf
into
jb
and
pusha
retf
sub
inc
pop
lea
fs
mov
push
shl
in
mov
sbb
mov
adc
cli
iret
xor
outs
push
shl
retf
pop
cmp
sets
push
xor
mov
scas
push
jb
inc
ret
and
ds
(bad)
jmp
std
dec
call
cmps
icebp
(bad)
das
jns
mov
xor
pop
loopne
mov
cld
xor
aaa
jnp
xor
xor
add
daa
mov
dec
push
or
xor
jle
test
xchg
xor
call
pushf
(bad)
out
es
dec
rol
mov
out
sub
dec
cmps
xchg
pop
sahf
push
fstp
nop
mov
test
loop
push
lods
rol
stos
imul
iret
jae
int3
add
or
jle
repz
ret
movs
add
stc
mov
mov
jne
mov
adc
push
in
addr16
push
inc
(bad)
rol
dec
push
out
jmp
sub
(bad)
mov
dec
addr16
into
inc
js
inc
data16
cmps
scas
ins
cs
not
mov
lods
xchg
mov
pop
dec
lock
rcl
in
push
or
push
gs
sbb
call
or
mov
push
xchg
push
fisttp
xor
ins
jg
inc
mov
mov
sub
push
pop
push
loope
jns
push
movs
mov
xor
scas
sbb
hlt
push
or
shl
mov
fwait
or
dec
mov
out
mov
xor
or
jl
sar
add
pop
mov
jo
imul
pop
mov
fldenv
inc
sbb
dec
repnz
pop
mov
xchg
dec
enter
cwde
(bad)
mov
lea
cmp
repnz
and
test
cwde
xor
fstp
lea
adc
or
fst
adc
mov
push
sbb
push
mov
aas
into
test
int
shl
stos
cmc
or
mov
ret
sahf
xchg
movs
xor
mov
pushf
icebp
inc
or
ret
jo
add
jge
lods
mov
add
aad
sbb
push
imul
fist
add
cwde
ret
fstp
jmp
push
push
jecxz
call
dec
jg
mov
inc
add
ins
mov
clc
retf
pusha
loop
nop
dec
cdq
inc
or
repz
mov
lods
jno
adc
rcl
jge
hlt
retf
adc
jbe
es
enter
lahf
mov
xchg
test
int
jbe
and
fnstsw
rol
jns
mov
repnz
int
cli
fdiv
das
adc
xor
popa
mov
pop
jl
retf
push
mov
jecxz
cmp
sub
xchg
shr
lods
mov
imul
pop
add
shr
adc
mov
cmps
cmp
test
mov
mov
bound
es
pop
jp
je
mov
pop
scas
xlat
push
fnstcw
xor
pop
lock
xchg
rol
pop
in
ins
jae
mov
sar
mov
in
push
stos
or
inc
cmp
jecxz
call
mov
inc
mov
loop
push
or
mov
pop
push
pop
sub
test
nop
pcmpeqw
shl
push
sbb
es
fisttp
jno
pop
mov
sbb
(bad)
push
mov
xchg
jmp
pop
cmp
push
bound
(bad)
fbstp
in
test
lods
cs
aaa
retf
fisubr
sub
test
pop
div
ficomp
dec
(bad)
jne
xchg
cs
xor
push
push
(bad)
retf
test
xchg
adc
inc
jbe
cmps
fs
out
nop
aas
cmc
test
aad
xor
dec
shr
pop
xor
(bad)
fbstp
int3
cmps
push
push
xor
cmc
adc
scas
lds
mov
lock
push
xor
or
fcom
mov
and
ror
dec
dec
push
ret
push
imul
jno
jnp
loope
pop
xor
mov
xlat
shl
ret
dec
sub
or
dec
rcl
xchg
or
mov
rcr
mov
je
mov
in
dec
bound
ins
sub
adc
mov
dec
cmp
imul
adc
sub
test
je
mov
xlat
cmps
inc
sub
cli
jns
and
push
adc
pop
bound
lahf
pop
or
in
clc
pop
sbb
rcl
xchg
xchg
sub
pop
inc
jbe
into
in
mov
test
xchg
push
dec
add
iret
fnsave
xchg
inc
xchg
mov
les
inc
pop
ins
add
or
mov
inc
jne
push
adc
cmc
rol
daa
(bad)
xchg
jge
jmp
jl
loope
es
inc
xor
fbstp
or
(bad)
cmps
mov
jle
out
ds
je
sub
adc
pushf
push
sbb
fiadd
cwde
daa
jmp
jmp
xchg
loope
inc
retf
adc
pop
mov
pop
or
outs
push
and
xchg
mov
jns
ror
sbb
pop
in
mov
sbb
imul
mov
call
ja
rcr
adc
(bad)
(bad)
lahf
sbb
sbb
xor
mov
cmc
out
sbb
xor
sbb
iret
test
lods
xor
pop
mov
sar
fimul
push
iret
pop
and
sbb
inc
cmps
pop
or
sub
or
dec
arpl
mov
in
inc
jg
addr16
(bad)
jns
outs
adc
push
mov
clc
mov
cwde
call
or
adc
push
scas
cmc
sbb
push
add
add
call
sbb
jp
daa
mov
ss
mov
xor
and
mov
pop
push
mov
leave
push
xchg
fsub
add
pop
push
adc
dec
out
loope
or
cld
cwde
jo
dec
pop
push
popf
out
jl
retf
or
push
gs
xor
mov
call
loop
xor
push
add
lods
mov
push
mov
aaa
js
lock
jb
fnsave
jae
jp
popf
in
cmc
(bad)
shl
and
rol
cmc
ret
mov
adc
fadd
and
ins
cmc
and
in
xchg
lods
aaa
adc
loop
lahf
test
aas
dec
div
inc
xchg
and
sub
mov
mov
xor
sub
pop
adc
popa
idiv
adc
jl
dec
and
(bad)
sub
cmp
imul
push
ja
xchg
stos
add
fiadd
lods
lods
mov
jb
loope
(bad)
mov
jo
xor
mov
jmp
jmp
pop
fs
icebp
push
cli
xchg
jl
sti
in
sub
retf
or
inc
mov
movs
jb
or
xchg
stc
push
xor
jo
inc
in
dec
lea
pop
sub
add
jns
fild
arpl
test
bnd
inc
std
jp
lds
add
mov
and
push
jp
vpsllq
jns
stc
mov
jae
push
popf
pop
js
mov
test
jecxz
and
lods
scas
neg
and
js
or
jle
mov
ret
xor
mov
in
stos
dec
je
ins
add
(bad)
aaa
push
jge
rcl
nop
cmp
pop
pop
push
in
scas
jp
inc
test
pushf
jae
movs
jnp
push
xor
ins
xchg
xchg
inc
test
sub
push
add
cmp
cmps
adc
ret
mov
sbb
adc
mov
mov
xor
inc
or
xchg
fiadd
cwde
fcom
fcmovb
mov
icebp
mov
fsubr
sub
sar
dec
cli
aad
xchg
mov
(bad)
test
push
(bad)
outs
out
sub
fwait
lods
add
xchg
sub
scas
mov
dec
lock
mov
xor
cdq
and
imul
enter
xchg
movs
mov
mov
ja
xlat
jae
idiv
mov
xchg
jge
or
enter
cmp
je
sbb
fldcw
ss
scas
xor
push
inc
mov
arpl
out
dec
shr
jl
jne
xor
mov
test
gs
dec
int
fisub
cmps
rcr
sbb
ja
adc
and
jp
(bad)
arpl
imul
pop
(bad)
daa
arpl
mov
loopne
lds
dec
fisub
pop
pop
jle
cld
push
xlat
out
inc
xchg
mov
pop
pop
cs
loope
test
xchg
(bad)
pop
test
cld
(bad)
add
mov
push
ret
clc
jae
xchg
xor
das
and
add
les
addr16
push
mov
dec
lods
sbb
cmp
lea
xchg
adc
xchg
cld
popa
cmc
dec
cmps
cmp
rol
(bad)
in
jbe
arpl
test
repnz
adc
add
imul
ja
pop
or
push
shr
dec
int
cld
sub
add
std
or
fcomp
bound
int
xchg
jmp
es
cwde
mov
movs
push
(bad)
imul
cmc
push
xchg
gs
nop
push
sbb
aas
add
fsubr
stc
ins
scas
inc
das
dec
test
out
or
inc
adc
outs
mov
or
adc
cmp
imul
test
cli
out
inc
xchg
inc
cmc
jo
test
sbb
sub
jbe
shr
mov
pop
jno
sbb
xor
inc
xlat
mov
mov
mov
mov
dec
mov
cdq
jnp
pop
ins
jo
inc
add
adc
xchg
add
xchg
ss
imul
mov
xchg
stos
push
pop
cmp
out
push
inc
lods
add
pop
jmp
sbb
jge
sub
cmc
adc
in
sub
or
push
cdq
cmp
jp
adc
in
pop
ja
in
sahf
call
inc
xchg
pop
jae
popf
mov
jb
sahf
pop
inc
jl
(bad)
xor
(bad)
loop
pop
xchg
cmp
fs
push
or
pmaxub
inc
(bad)
std
aam
cmp
xchg
sbb
push
icebp
mov
out
mov
add
pushf
mov
aam
fnstcw
shr
wrmsr
scas
jno
add
bound
sub
inc
jo
mov
shl
push
imul
shl
pushf
adc
pop
(bad)
out
mov
jne
call
test
adc
xor
push
push
popw
outs
cmp
bound
std
dec
out
xchg
mov
rdpmc
jbe
int3
mov
fcomp
or
push
sbb
xchg
movs
ret
enter
inc
xchg
cld
cdq
fistp
imul
repnz
pop
sub
(bad)
cld
jmp
int3
xlat
outs
mov
jge
sbb
stc
jo
push
dec
inc
fisttp
cmps
popf
cwde
cmp
les
in
and
inc
add
js
mov
sub
sbb
imul
out
push
scas
out
out
or
sbb
js
cwde
and
icebp
pop
sub
aad
add
fisttp
out
cmp
mov
scas
sbb
mov
jb
lock
sub
and
dec
dec
inc
mov
jo
cmps
dec
mov
call
cmp
stc
cmp
in
xchg
fs
adc
or
pop
mov
fbstp
cmp
test
xor
sbb
out
sbb
push
movs
mov
or
neg
mov
adc
mov
add
sbb
retfw
jl
cli
or
or
adc
mov
xchg
add
push
jecxz
fs
and
pushf
mov
stos
xchg
pop
sub
lahf
pop
sahf
or
mov
pop
ror
push
cmp
and
sbb
fdiv
mov
outs
push
inc
xor
aad
xor
lahf
cmp
clc
scas
sbb
mov
add
adc
pop
scas
pop
xor
ins
fnstsw
pop
out
and
xchg
xchg
sub
ret
stc
fsubr
ret
sbb
jno
call
mov
push
sbb
or
mov
ja
and
sbb
or
iret
add
push
imul
in
shl
cmp
call
aaa
ins
fwait
add
sahf
das
xchg
pop
lods
bound
cs
test
inc
pop
clc
repnz
js
in
movs
ret
cmp
jne
js
hlt
fwait
sbb
cdq
aad
adc
sbb
inc
xchg
movs
vpackssdw
pop
mov
push
jbe
call
ss
push
enter
cwde
out
int3
pop
(bad)
mov
ret
xor
retf
and
push
mov
les
and
repz
test
in
retf
mov
fisubr
ins
pop
jp
bound
xchg
addr16
outs
pushf
movs
or
xchg
jmp
lds
fs
lds
jle
or
add
mov
stos
sbb
call
and
outs
aam
nop
xchg
pop
cmp
sub
cmps
jge
mov
cdq
fadd
push
dec
push
imul
and
jg
mov
fs
adc
mov
gs
inc
loopne
xor
sub
adc
and
pop
add
hlt
into
adc
push
xchg
add
dec
aam
nop
cdq
xchg
push
outs
xchg
pop
mov
dec
mov
fldenv
jge
pop
cmp
imul
dec
and
leave
ja
shl
pop
push
push
stos
arpl
sub
dec
sti
mov
gs
push
xchg
(bad)
fs
leave
xlat
(bad)
nop
cdq
sbb
xor
rol
cmp
dec
dec
pop
jae
and
dec
imul
clc
iret
lock
sbb
pop
leave
jge
adc
cmp
xchg
arpl
in
imul
out
loop
lgs
lock
pcmpeqd
pop
ret
xchg
and
jbe
stc
mov
push
xor
and
mov
jmp
xchg
jne
sar
aaa
in
ret
sar
xchg
dec
adc
or
mov
in
test
movs
jl
xchg
pushf
push
enter
mov
jecxz
fist
adc
test
pop
xchg
ins
inc
add
dec
xor
pop
sbb
jo
test
int
dec
jg
hlt
bound
mov
loopne
nop
enter
jae
pop
pop
loop
repz
ror
aas
ror
pop
dec
or
jl
cmp
push
push
mov
add
jnp
xor
jo
sti
xor
iret
(bad)
cs
jmp
or
xchg
inc
mov
es
fmul
adc
movs
push
(bad)
cli
mov
mov
dec
mov
mov
xor
test
icebp
or
xchg
push
sub
push
pop
mov
dec
cmp
outs
ins
(bad)
popf
push
fdivr
pusha
sub
inc
jno
in
and
add
(bad)
cmp
lahf
(bad)
in
cli
popa
cmps
jo
mov
in
sub
or
fs
jns
in
lahf
jnp
loope
lahf
sub
xor
or
push
je
test
loop
lods
sbb
add
movs
popa
stos
pushf
movs
pop
jbe
mov
shr
ins
clc
btr
shl
fdiv
mov
cli
xchg
push
mov
lahf
jbe
add
sub
(bad)
shr
ret
in
inc
aad
clc
inc
push
mov
out
sbb
leave
(bad)
pop
jns
jp
scas
dec
xor
push
mov
js
shl
outs
out
and
pop
sbb
inc
scas
cmp
push
dec
and
jae
jb
(bad)
out
pop
es
mov
stos
jmp
inc
or
pop
mov
jmp
sbb
inc
lods
xchg
sar
cld
imul
and
inc
or
mov
and
cmp
cmp
in
mov
dec
mov
(bad)
xor
sbb
outs
add
push
frstor
xchg
mov
pop
test
in
fild
push
jmp
test
aad
dec
xchg
test
and
xor
popf
adc
sub
mov
push
jae
xor
inc
xchg
mov
scas
mov
mov
ins
comiss
stos
adc
push
jp
xchg
fnsave
lds
mov
mov
push
out
and
gs
or
and
clc
fidivr
out
(bad)
jle
pop
repnz
stos
pop
cmp
ins
je
xor
inc
mov
data16
sbb
sbb
pop
mov
or
adc
add
jl
popf
cmp
or
sbb
push
mov
jp
shr
mov
xor
mov
repz
push
push
cld
icebp
outs
repnz
mov
cmp
not
inc
loopne
pop
bound
fild
ror
jns
push
xor
jl
aas
test
imul
imul
jns
pusha
fscale
out
iret
add
fild
stc
movs
push
jbe
loop
inc
push
pop
cld
mov
stc
cmp
jg
rep
sub
ret
loopne
int3
push
mov
xchg
stos
shr
jnp
mov
fimul
mov
movs
adc
stc
push
dec
sar
out
mov
mov
pop
sahf
push
fisttp
pop
arpl
adc
jge
mov
call
sbb
xchg
xchg
cmp
into
jnp
and
pop
cwde
es
pop
mov
xor
addr16
mov
jb
mov
outs
mov
sub
hlt
and
mov
pusha
jnp
into
pop
mov
dec
icebp
fisttp
add
dec
jnp
daa
push
push
cmp
mov
and
add
outs
mov
and
ror
(bad)
(bad)
inc
push
ret
pop
sub
xchg
push
dec
adc
jnp
ins
sbb
dec
lock
(bad)
or
fs
cmp
fstp
outs
mul
adc
adc
mov
sbb
neg
fnstenv
cdq
or
test
jmp
fcomp
cmp
icebp
dec
xor
mov
imul
push
xor
or
or
fmul
xor
lods
xchg
sbb
or
int3
es
jmp
push
cmps
mov
jo
gs
fmul
outs
xchg
adc
push
sub
mov
rcl
push
scas
ret
push
jnp
xor
cmp
and
mov
dec
fist
and
cmp
aam
add
sbb
cmp
mul
push
frstor
sub
xchg
pop
in
mov
jg
xlat
lahf
and
in
adc
dec
mov
sar
jge
(bad)
imul
pop
push
daa
jg
sbb
mov
cli
bound
fwait
mov
push
popa
inc
sbb
push
sub
pop
fisub
xor
mov
dec
sbb
ret
pop
mov
jb
push
leave
mov
dec
and
ficom
mov
or
inc
iret
or
adc
push
cmps
jmp
dec
jl
add
add
cmps
push
nop
es
jmp
hlt
dec
sbb
call
push
iret
clc
pop
mov
xchg
push
nop
(bad)
xlat
dec
sahf
stos
or
aas
mov
repz
sti
adc
ret
xor
leave
xchg
inc
pop
sahf
or
call
xor
sub
jbe
test
or
retf
daa
add
out
(bad)
mov
fs
je
mov
add
xor
jmp
pop
mov
mov
push
adc
mov
cmp
movs
add
cmp
cli
mov
xlat
mov
mov
clc
nop
push
mov
(bad)
sbb
cmps
mov
sub
ret
or
dec
push
inc
jmp
dec
aaa
pop
stos
dec
pop
cmc
test
mov
or
ss
pop
ret
sbb
xchg
cmps
mov
adc
pop
mov
dec
push
push
or
push
setg
jnp
mov
xchg
rcr
and
aad
adc
fs
jp
push
pop
cmp
push
add
fmul
cmp
jp
pop
shl
mov
jg
and
aas
mov
inc
cdq
lea
push
cli
xchg
in
sub
pop
and
dec
imul
imul
xchg
xor
xchg
outs
ss
out
into
sub
jbe
dec
pop
xor
push
fisub
mov
lock
mov
in
inc
sub
in
or
sahf
lahf
dec
movs
out
sbb
(bad)
aam
mov
(bad)
fnstsw
cmc
add
jle
hlt
stc
inc
cmp
stos
pop
jo
lea
mov
mov
mov
cmp
jl
leave
imul
xor
mov
fcom
movs
mov
adc
gs
scas
in
pusha
aaa
cwde
pop
cmp
cmps
sar
or
fstp
jmp
hlt
into
push
les
inc
push
and
cmps
adc
adc
(bad)
fisubr
mov
js
pop
pop
inc
and
sub
cmc
xchg
lds
adc
and
arpl
int
(bad)
out
push
ss
shl
scas
cld
cwde
or
jg
lea
sbb
push
(bad)
sbb
cli
ret
jne
cs
sub
dec
mov
aam
inc
mov
retf
push
adc
push
inc
mov
fnstcw
pop
add
xchg
(bad)
mov
jl
mov
cmp
iret
movq
aas
mov
sbb
sub
add
fsubr
dec
or
daa
xchg
push
pop
dec
addr16
mov
aad
fdiv
leave
and
cmp
sar
ss
jmp
movs
xchg
dec
mov
outs
rol
jbe
test
dec
(bad)
imul
cmp
xchg
add
sub
jno
xor
retf
jge
fwait
dec
loopne
or
xor
test
shr
cmps
arpl
push
ins
retf
or
daa
sbb
in
retf
mov
in
in
cmp
and
sti
repnz
in
scas
adc
dec
mov
call
xchg
call
das
sub
in
add
in
std
xchg
xchg
mov
ret
(bad)
(bad)
ja
jns
xchg
cmps
cmp
fstp
inc
punpckldq
clc
cmp
in
pop
mov
movs
mov
mov
jecxz
cmp
cdq
in
jb
pop
popa
aam
das
je
mov
adc
or
in
and
ja
xchg
pop
mov
inc
(bad)
ss
push
loopne
xor
jb
or
add
int
in
lds
inc
sbb
fsub
setb
sub
out
inc
jg
fild
push
adc
inc
(bad)
addr16
sbb
push
jmp
mov
sub
stos
fild
and
and
lods
retf
retfw
mov
jmp
inc
jmp
sub
adc
sti
dec
jmp
lahf
lea
pop
sub
mov
xor
dec
movs
mov
call
(bad)
mov
rcr
mov
or
nop
pop
stc
or
iret
jl
retf
push
jns
jge
aam
ds
xchg
sahf
sbb
repz
int
xchg
(bad)
aam
push
mov
out
push
pop
mov
(bad)
fbld
js
pop
lods
movs
shl
or
stos
mov
fbld
jg
addr16
cmp
jb
loopne
test
in
arpl
mov
popa
adc
and
sub
add
ret
mov
call
push
icebp
(bad)
cli
rcr
mov
mov
aam
jo
sbb
in
cmp
jbe
cmp
sar
pop
les
mov
dec
popf
movs
jecxz
pop
and
sbb
pushf
xor
pusha
mov
add
faddp
outs
xchg
out
adc
pushf
xchg
dec
shl
shl
ds
cmp
add
mov
into
fnstcw
pop
mov
cmp
shl
iret
pushf
(bad)
jp
mov
lock
or
div
sti
pushf
jae
push
and
hlt
mov
mov
mov
repz
gs
jle
cmps
mov
mov
mov
add
xchg
ret
out
scas
and
sub
push
or
or
dec
cmc
inc
aam
sar
mov
ret
push
push
nop
mov
or
pop
movs
push
in
mov
stos
mov
mov
rol
push
out
ret
jl
mov
mov
inc
popf
or
mov
daa
cdq
xchg
out
aas
loop
lds
xlat
cmp
fidiv
fisubr
dec
js
inc
jl
mov
jle
popf
inc
cwde
mov
loope
push
xchg
inc
dec
pop
in
mov
and
xchg
aaa
pop
rol
and
adc
test
inc
aaa
std
xor
lods
inc
or
stos
sub
pop
mov
mov
retf
or
call
mov
or
aas
sbb
ret
repnz
mov
mov
(bad)
or
push
adc
and
sbb
ins
xor
mov
add
inc
or
and
loope
pop
lods
and
fldcw
(bad)
and
adc
mov
js
sbb
pop
mov
mov
sub
sbb
push
sub
adc
jb
iret
pop
stos
cdq
loop
cli
aad
sub
and
enter
mov
push
cwde
dec
adc
jno
(bad)
mov
retf
lods
xor
add
stc
into
mov
lds
cmp
sbb
loop
je
xchg
xor
or
(bad)
xlat
inc
xchg
(bad)
in
imul
popf
lahf
ins
call
fst
sti
retf
cmp
stos
sbb
inc
je
sub
movs
outs
popf
imul
push
cmp
xchg
js
in
cmps
repnz
and
inc
push
dec
xor
cs
rcl
cmp
sub
mov
(bad)
test
pop
pop
xor
loopne
xchg
loop
add
in
repz
repnz
(bad)
sbb
sub
pop
and
jg
out
jno
rcr
mov
daa
(bad)
pop
cmps
sti
jl
mov
adc
jb
(bad)
jle
mov
stos
repz
idiv
inc
jmp
xor
mov
mov
ja
retf
stos
dec
nop
mov
inc
push
xor
es
xor
jmp
das
add
sub
imul
mov
inc
mov
cli
stc
leave
add
std
gs
retf
loop
sub
mov
inc
cmp
not
out
stos
add
sub
retf
pop
idiv
cmp
cmc
sub
ins
je
cli
lahf
push
pop
xlat
jl
mov
lahf
fcomp
rcl
xor
push
add
mov
ret
sti
pop
dec
ficomp
xchg
xchg
xor
and
nop
add
std
pop
bound
push
inc
(bad)
jecxz
cmp
xchg
sahf
arpl
sbb
test
aaa
ds
loope
test
stos
lods
js
mov
pushf
dec
repz
enter
aas
or
mov
popa
out
imul
or
out
das
pop
mov
loopne
pop
sub
xchg
test
pop
mov
aad
cld
add
clc
inc
pop
or
arpl
int3
push
push
mov
add
push
jmp
arpl
inc
jo
or
ret
hlt
test
hlt
shr
das
push
into
je
mov
mov
cwde
push
mov
push
addr16
shl
inc
fdivr
bound
(bad)
fidiv
les
cld
dec
inc
mov
rcr
ret
icebp
inc
es
mov
(bad)
retf
jmp
xor
enter
or
xor
out
mov
mov
pop
mov
popa
enter
sbb
punpckhbw
sbb
inc
fnsave
sbb
pop
into
aad
adc
mov
(bad)
cmp
out
(bad)
rcl
ins
movs
mov
retf
sbb
xchg
xor
adc
ror
(bad)
pusha
push
int
and
lods
in
mov
(bad)
(bad)
mov
out
sbb
cmp
ins
or
or
and
shl
mov
nop
xchg
test
jge
pop
jbe
jecxz
sub
out
out
shl
lahf
jo
popf
rcl
sub
gs
push
xchg
enter
adc
sub
inc
sub
dec
mov
call
iret
pop
cld
ins
ror
dec
push
cmp
add
sti
repz
ss
test
push
jle
lahf
hlt
or
(bad)
out
call
lock
retf
mov
pusha
sub
ins
outs
xor
(bad)
adc
test
pop
adc
(bad)
in
or
jo
stc
js
rol
aas
fwait
inc
and
out
push
inc
xchg
jmp
stos
jmp
movs
int3
stos
sub
push
test
adc
mov
inc
aam
jg
loope
xor
pushf
call
in
(bad)
jmp
clc
xchg
inc
fwait
or
imul
dec
test
pop
int3
popa
jns
jae
enter
sub
xor
push
sar
or
sar
jne
push
inc
lds
mov
mov
fwait
adc
das
repnz
cmp
ins
mov
pusha
call
cmp
adc
jg
sbb
and
mov
mov
adc
push
pop
in
test
ins
movs
stc
sub
sbb
(bad)
stos
out
pop
pop
repz
das
mov
mov
dec
leave
pop
call
mov
retf
fld
rcr
ret
je
rcl
shr
pop
adc
mov
push
retf
mov
jno
hlt
or
xor
sub
pop
cs
in
stc
or
jmp
inc
in
sub
mov
stos
push
pop
inc
aas
add
or
push
push
sbb
sub
pop
dec
push
jnp
in
dec
mov
xor
stos
lds
enter
push
shl
fnstenv
or
cdq
test
pop
mov
cmps
jp
dec
idiv
(bad)
jecxz
(bad)
inc
movs
xchg
adc
int
ficom
pusha
idiv
das
dec
push
outs
dec
daa
movs
adc
mov
outs
xchg
jmp
aad
fcom
cmp
out
ficomp
int
and
dec
pop
xor
rcl
pop
leave
xor
test
xchg
and
dec
jno
jb
adc
ret
push
sbb
sti
shr
cmp
icebp
gs
hlt
jmp
lds
jp
push
scas
bnd
adc
in
inc
mov
xchg
cmps
dec
and
add
jecxz
dec
xlat
bound
in
test
jge
cmp
cli
test
push
mov
lods
adc
push
inc
push
inc
movs
or
adc
push
(bad)
adc
cdq
aas
imul
mov
fisubr
adc
add
ja
cmp
sbb
movs
(bad)
fist
lahf
push
arpl
fsubr
push
adc
add
adc
je
xor
add
mov
jmp
cs
pop
test
movs
mov
ja
repz
inc
imul
add
js
test
cmp
cmps
sbb
shl
popa
xchg
add
cmc
das
sub
dec
fsubr
inc
pop
test
pop
adc
pop
pop
retf
xchg
mov
push
mov
(bad)
call
and
clc
cmp
cwde
push
pop
mov
jnp
fild
out
mov
jecxz
jecxz
mov
popf
mov
movs
dec
ins
xchg
clc
add
mov
enter
dec
pop
imul
aam
xchg
mov
shr
mov
xchg
jp
loope
cmp
cmp
pop
pusha
pop
mov
add
scas
mov
gs
lods
test
push
aaa
mov
mov
sub
in
sbb
mov
cmp
mov
in
xlat
pop
xchg
popf
sub
ins
mov
jnp
enter
inc
arpl
imul
(bad)
ficomp
push
adc
add
inc
(bad)
mov
(bad)
fwait
xor
pop
fisttp
push
hlt
(bad)
cdq
fwait
or
iret
lds
ja
add
cmp
gs
push
mov
inc
dec
push
cmp
push
mov
mov
xor
add
pop
ds
int3
aad
stc
or
sub
push
jle
mov
std
outs
mov
imul
mov
and
add
adc
ja
cli
mov
test
and
movs
jle
xchg
adc
inc
jg
pop
scas
cmc
(bad)
in
imul
cdq
(bad)
enter
inc
ror
push
push
lahf
pop
mov
or
cmps
xor
cmc
sub
clc
(bad)
mov
stos
inc
lds
cs
shl
sub
or
jg
sbb
rcr
jbe
push
mov
rcr
lods
push
dec
inc
push
xchg
push
sbb
xor
stc
xor
pop
(bad)
pop
nop
mov
push
pop
dec
sub
dec
jecxz
rcr
add
imul
dec
shr
xchg
sub
jmp
mov
push
xor
cmp
add
mov
mov
inc
mov
cmp
xor
retf
dec
leave
jmp
or
inc
idiv
dec
hlt
cmp
fdivr
fdivr
sub
pop
or
int3
pop
mov
fild
xchg
and
cmp
test
(bad)
int
lahf
and
and
and
xchg
pusha
sub
mov
or
xchg
or
xchg
add
sahf
mov
loope
jmp
mov
fisttp
cmp
xchg
xor
adc
iret
pop
es
test
add
fwait
(bad)
movs
push
xchg
clc
test
ret
mov
sub
pop
cli
sub
jge
mov
mov
xchg
cdq
fwait
push
out
bound
sub
push
cs
adc
arpl
xchg
fsub
mov
cmps
hlt
jnp
pop
or
xor
bound
(bad)
mul
dec
imul
mov
(bad)
push
adc
mov
add
rcl
jmp
aad
or
das
mov
inc
or
xor
pop
sub
fs
and
test
inc
jnp
pop
push
out
lods
dec
sbb
push
mov
int
enter
(bad)
or
out
mov
add
mov
or
jge
not
sub
mov
rol
or
xchg
stos
xchg
xor
dec
jle
jbe
stos
mov
xchg
or
aam
pop
xchg
pop
cmp
push
jecxz
adc
inc
sub
hlt
les
sbb
cwde
je
out
add
jne
lds
or
sbb
push
cmp
add
add
fcomip
push
dec
loopne
mov
jb
out
in
dec
lds
or
dec
xor
popf
mov
push
dec
pop
fst
es
gs
sbb
mov
adc
sub
mov
inc
push
loope
ror
jbe
popf
jge
test
mov
or
mov
adc
sbb
dec
test
lock
sub
(bad)
test
push
adc
xchg
cmp
adc
jge
iret
clc
sbb
mov
jecxz
push
aad
wrmsr
mov
ficomp
iret
es
(bad)
fdivr
dec
adc
jo
jb
add
test
jl
dec
jecxz
iret
imul
jecxz
retf
lods
sbb
xor
push
mov
aad
ja
rol
fadd
jae
jmp
cli
pop
xchg
or
xchg
ficomp
and
and
cwde
(bad)
push
xchg
mov
mov
fldcw
add
bound
adc
mov
outs
sbb
sbb
and
div
mov
ss
sub
test
ss
lods
jne
jo
in
lea
out
mov
push
imul
and
cmps
dec
push
popf
inc
inc
xchg
iret
xor
add
pop
out
leave
adc
repz
popf
mov
ret
mov
xor
xchg
mov
out
inc
cli
jnp
scas
ret
sbb
mov
push
mov
add
sub
(bad)
popa
jp
dec
jge
dec
out
xor
aam
mov
(bad)
fucomp
and
mov
push
xchg
aaa
je
xchg
jmp
out
xchg
addr16
adc
je
fwait
pusha
cwde
scas
xchg
mov
push
into
shl
std
cmps
int
push
pushf
pop
inc
stos
fdivr
lock
inc
clc
xlat
dec
mov
and
sub
mov
or
cmps
repz
or
les
jb
mov
cmps
sub
xlat
bndldx
out
int3
or
out
adc
retf
cli
mov
shl
jle
and
movs
enter
pop
cmp
iret
mov
push
arpl
add
icebp
mov
xchg
jo
mov
mov
cmps
icebp
xor
ins
int
scas
mov
out
(bad)
xchg
inc
mov
mov
mov
push
or
and
mov
sbb
push
outs
mov
nop
ins
mov
inc
inc
and
mov
jns
jle
fld
jmp
jno
push
push
sar
and
cmp
in
std
add
(bad)
mov
sub
sbb
push
out
adc
ficomp
and
pop
fsubr
mov
out
imul
inc
pushf
(bad)
or
sbb
push
or
push
sub
inc
hlt
adc
pop
inc
xchg
mul
hlt
cmp
sbb
pop
xchg
mov
prefetchw
or
and
mov
jg
inc
jge
dec
and
jecxz
rol
sub
pushf
out
call
xchg
add
jecxz
cli
ds
stc
ror
xchg
int3
das
or
mov
dec
jp
cmps
or
jp
jg
push
xchg
or
dec
mov
push
jg
mov
inc
fs
mov
jmp
pop
adc
popf
out
xchg
xchg
xchg
cdq
sbb
retf
xchg
ins
sub
sbb
ret
sub
xor
jmp
and
xor
push
sub
dec
je
pop
sub
push
mov
outs
fs
jmp
mov
arpl
add
pushf
xor
call
sbb
pop
mov
test
push
pop
lods
sub
addr16
cwde
neg
push
dec
fnstsw
mov
cmp
mov
loope
jmp
mov
ins
cmp
leave
and
xor
int
adc
mov
cwde
cdq
adc
arpl
mov
mov
mov
jmp
shr
std
mov
xchg
cmp
cmp
stos
mov
cdq
inc
xor
sbb
lods
cmp
jb
fiadd
cmp
test
hlt
or
add
and
inc
outs
jae
retf
cmps
inc
inc
push
and
pushf
bound
aaa
sbb
push
pop
outs
add
int3
sbb
stos
lahf
push
out
inc
(bad)
paddq
fcomp
cmp
ins
sub
xchg
mov
push
cmps
dec
dec
ja
popf
jg
ret
push
fdiv
mov
aam
and
sub
adc
pop
dec
add
ds
daa
cli
sub
movs
or
add
shl
fadd
or
aad
popa
(bad)
xor
gs
lds
and
mov
mov
jp
adc
add
(bad)
dec
daa
cmp
adc
mov
cmp
xchg
std
lods
outs
dec
push
mov
aaa
adc
in
or
pop
jle
(bad)
es
pusha
push
pop
stc
or
mov
outs
imul
rol
xor
ret
mov
push
in
movs
ret
sub
iret
add
or
loope
or
pushf
sbb
(bad)
jle
test
pop
push
test
dec
stos
stos
pcmpeqw
xchg
dec
cwde
sub
imul
outs
dec
adc
or
bound
or
xchg
jns
data16
jmp
cmp
sub
and
jge
xchg
adc
(bad)
test
les
ret
or
xor
fimul
push
push
adc
ret
fild
aaa
pop
xor
clc
in
daa
lods
adc
inc
dec
inc
sbb
cmp
ds
dec
in
mov
pop
mov
cmps
sub
sbb
dec
push
imul
dec
mov
pushf
mov
cli
push
sbb
outs
in
dec
in
sbb
movs
dec
out
cdq
xchg
add
js
dec
add
push
jae
or
int3
push
jge
xchg
jb
jl
fnstsw
push
or
mov
retf
aas
(bad)
adc
lea
js
mov
jp
adc
xchg
inc
pop
int
inc
call
into
add
push
add
sti
movs
lds
inc
loop
or
shl
inc
sahf
cwde
jg
push
inc
fld
cmp
cwde
jp
call
pop
mov
arpl
into
repz
pop
xor
sub
dec
stos
and
mov
adc
xor
aaa
inc
ds
sbb
call
pop
test
and
ficomp
rcr
push
add
mov
dec
or
mov
add
pushf
adc
les
sub
imul
inc
sbb
dec
or
mov
inc
ret
mov
push
iret
cmp
test
cs
pop
mov
not
fsub
or
add
adc
push
retf
ins
aaa
lods
pop
push
loope
cmp
pop
adc
inc
stos
push
pop
mov
dec
add
xor
cs
into
add
mov
js
cmp
ret
pop
in
fcmovnbe
hlt
xchg
sti
add
fldenv
and
sar
mov
mov
fsubrp
int3
fst
cmc
inc
fimul
(bad)
and
repnz
imul
rdmsr
push
inc
cs
and
adc
movs
dec
jnp
or
cwde
and
add
jno
and
frstor
push
add
hlt
nop
and
xor
cmp
ret
adc
mov
les
push
data16
dec
jbe
or
stos
daa
repnz
pop
cmp
sbb
cs
in
adc
or
in
jne
sub
dec
out
lea
ret
inc
movs
in
mov
xor
sub
test
mul
mov
xor
gs
out
je
mov
call
pop
pusha
mov
cmp
lea
fist
mov
jge
sub
fstp
mov
xchg
js
mov
push
cmp
push
movs
mov
add
xchg
or
sbb
dec
sbb
sbb
scas
xchg
lock
xchg
popa
sahf
leave
push
icebp
jb
test
inc
into
xor
xchg
(bad)
fimul
adc
push
lods
mov
imul
adc
stc
sub
icebp
xor
inc
xor
xchg
(bad)
repz
dec
dec
aas
push
mov
lahf
outs
stc
ss
fistp
add
mov
les
imul
mov
xchg
push
sti
push
or
dec
jl
xchg
in
lea
in
inc
iret
test
mov
sbb
adc
jns
xchg
mov
shr
xor
in
pop
pushf
xchg
mov
dec
test
push
arpl
jae
lods
push
stos
mov
lahf
push
jb
test
ficom
or
dec
repnz
cmc
movs
xchg
and
ss
fwait
addr16
xor
xchg
daa
push
stc
repz
push
mov
xchg
aad
repz
pop
loop
bound
push
jge
pminub
xchg
(bad)
sub
ins
scas
mov
sbb
sar
pusha
fimul
sti
and
(bad)
jecxz
xchg
sub
rcl
sbb
xchg
jne
shl
sbb
adc
push
mov
pop
jns
mov
jbe
mov
pop
and
js
es
mov
bnd
xor
lea
push
push
jnp
bound
fbld
or
addr16
adc
cwde
sub
and
add
imul
pop
dec
cdq
mov
adc
dec
in
sub
aam
or
or
jbe
cmp
inc
out
in
jp
xchg
jae
or
je
gs
repz
mov
or
sub
xor
lods
fild
mov
movs
test
mov
sar
dec
mov
jmp
add
fdiv
ret
movs
add
pop
stos
inc
int
jge
out
pop
mov
ret
xor
adc
out
jecxz
push
adc
dec
adc
inc
das
adc
jns
stos
cmp
pop
pusha
jae
out
gs
das
add
lds
lock
inc
movs
pop
stos
cs
inc
and
std
retf
fwait
jge
out
adc
js
pop
inc
fld
dec
push
cmp
or
repz
dec
xor
(bad)
loopne
out
mov
sbb
sub
cmp
or
stos
pop
pop
cmp
and
imul
pusha
rol
pushf
jg
mov
aam
daa
(bad)
sub
or
stos
push
(bad)
cld
mov
adc
adc
or
cs
out
mov
jb
xchg
shl
test
pop
cli
ds
pop
xor
icebp
or
aad
stos
dec
mov
adc
fucomi
adc
pop
xor
pop
mov
stc
inc
call
mov
out
movs
mov
push
test
das
mov
lea
cmps
sbb
je
movs
out
or
std
clc
inc
popa
retf
inc
pop
xchg
sbb
push
(bad)
fisttp
push
xchg
sbb
jmp
inc
das
jbe
inc
popa
sbb
jno
pop
dec
jge
sub
fcom
retf
push
dec
xor
addr16
cli
cmp
dec
sub
fadd
das
mov
fisubr
ins
pop
imul
ja
lea
dec
and
das
lock
mov
lods
stc
out
sub
push
sbb
shr
push
inc
movnti
aas
pushf
data16
test
mov
test
cmp
movs
aam
and
mov
rcl
sbb
enter
and
jg
xor
adc
not
xchg
jg
jns
movs
stos
aad
sar
and
push
aaa
mov
scas
push
sbb
inc
xor
xor
arpl
dec
aas
cmp
mov
push
sahf
mov
loopne
das
cld
ins
dec
xor
pop
dec
jnp
sti
lods
adc
call
packuswb
jb
jmp
jmp
shr
cmp
std
mov
fsubr
fs
adc
test
aad
dec
lea
push
sti
pop
pop
call
push
cwde
push
cmp
sbb
cli
xor
shr
xlat
fdivrp
iret
mov
imul
sbb
enter
and
(bad)
sti
repnz
sar
xchg
rcr
int
xor
adc
mov
shl
lock
gs
pop
or
ret
jecxz
pop
sub
test
dec
fst
movs
fwait
retf
cs
dec
rol
sbb
in
popa
outs
mov
lea
rol
sbb
and
jbe
adc
imul
add
mov
jns
in
mov
mov
jmp
les
data16
fisubr
pop
pop
int3
shl
pop
xor
inc
and
in
call
pop
pop
jns
mov
cmp
mov
(bad)
mov
scas
neg
call
sbb
daa
push
sbb
mov
cmc
lea
xchg
adc
js
jbe
push
int3
int
xchg
cdq
(bad)
mov
inc
or
mov
xchg
mov
mov
jg
inc
mov
sbb
ss
sbb
cmp
xchg
js
inc
popa
sbb
pop
lea
inc
movs
fs
dec
in
je
inc
clc
cmp
jmp
xchg
sub
js
stos
cmps
call
pop
(bad)
cmp
ret
inc
popa
fsub
pop
data16
mov
out
mov
mov
clc
loop
or
gs
inc
les
jno
frstor
es
xchg
in
pop
sub
movs
xchg
data16
jl
mov
inc
xchg
call
add
cmp
dec
data16
outs
test
inc
call
and
or
data16
cmp
dec
scas
call
jmp
shl
rcr
cmp
pcmpgtd
push
push
pop
call
shr
mov
clc
pop
iret
or
cmp
dec
ret
push
mov
sub
jbe
push
adc
jns
inc
imul
jp
daa
test
movs
test
or
clc
add
jp
cli
loopne
mov
mov
cmc
test
sub
push
add
clc
pop
cs
xor
mov
js
ja
jp
scas
dec
xor
push
or
inc
loope
int
pop
or
js
fnstsw
inc
mov
jp
cmp
pop
test
jbe
pop
movups
mov
mov
stos
test
sti
push
jp
dec
mov
pop
sub
leave
test
fcomp
jo
out
inc
clc
pop
aad
jp
pop
mov
mov
cmp
loop
stc
bound
clc
cmps
int
jp
xchg
push
test
or
lahf
jp
retf
out
inc
cmps
xchg
repnz
push
sti
jo
xchg
pop
cmp
(bad)
aam
jp
addr16
add
mov
lock
xchg
aam
arpl
fwait
inc
in
test
mov
mov
lahf
cmps
dec
jp
adc
test
js
adc
jp
and
sar
les
test
mov
js
jmp
cs
jns
out
out
test
mov
clc
add
adc
out
idiv
clc
lea
test
test
jne
push
jmp
mov
jmp
jae
mov
jmp
mov
clc
jmp
stc
shl
test
jmp
sub
test
sub
or
mov
jmp
adc
or
sub
jb
xor
sub
pusha
pusha
adc
add
add
jmp
je
mov
test
jne
mov
mov
inc
movzx
ror
mov
sub
mov
cmc
sub
cmp
sbb
shr
xchg
mov
cmp
mov
stc
shl
mov
cmovns
jmp
push
(bad)
adc
and
dec
inc
xor
sub
jnp
xchg
aam
sub
jmp
cmp
jmp
push
(bad)
adc
cs
popa
das
fisub
jge
cdq
js
push
pusha
gs
dec
shl
pop
sub
adc
mov
cmp
inc
(bad)
cdq
clc
jmp
cmp
call
pop
adc
push
xlat
call
mov
xchg
popf
or
repnz
jbe
push
(bad)
cwde
aas
sbb
(bad)
push
or
push
pop
out
enter
js
fcomp
rol
js
sub
add
mov
sub
std
mov
mov
js
loop
add
sti
add
loop
mov
mov
clc
mov
arpl
std
clc
ror
cdq
clc
mov
mov
(bad)
gs
fwait
mov
(bad)
xor
inc
sbb
call
xchg
lods
(bad)
gs
sub
cmp
dec
vpcmpgtw
jl
shl
push
xchg
call
lock
push
mov
stc
cdq
sti
cdq
js
push
ss
sub
call
call
gs
stc
push
sub
ret
jmp
cmp
push
or
gs
dec
iret
call
sub
shl
fisub
call
stos
and
xchg
adc
inc
mov
test
retf
gs
jecxz
xchg
xchg
call
int
rol
mov
cli
cdq
clc
xchg
gs
gs
enter
in
aas
dec
call
sbb
iret
cmp
icebp
cmp
cmp
dec
icebp
cmp
stos
jnp
clc
fstp
ins
icebp
mov
mov
xchg
fcomi
js
ret
pop
cmp
je
pop
mov
mov
mov
and
shl
daa
push
inc
fst
inc
dec
cmp
outs
icebp
js
dec
loop
(bad)
push
lods
das
or
icebp
mov
mov
clc
cmp
sub
icebp
js
in
jmp
or
add
repz
sbb
outs
xchg
mov
and
ret
add
and
jp
sub
dec
ret
call
call
mov
clc
(bad)
push
retf
gs
call
pop
add
cmp
lock
gs
leave
retf
popa
gs
leave
in
jnp
(bad)
push
outs
pop
xchg
dec
adc
scas
xchg
js
push
gs
movs
cmp
stc
mov
cmp
mov
call
ret
sub
clc
xchg
or
mov
call
pop
dec
gs
scas
xchg
std
call
adc
popw
or
call
repnz
outs
stc
js
call
sar
call
xchg
dec
call
jb
gs
jp
nop
push
and
call
stos
das
mov
fnstsw
popw
mov
clc
mov
xchg
loop
sti
add
gs
push
sbb
pop
adc
call
xor
ja
call
mov
cmps
es
or
je
inc
fldlg2
mov
pop
cmp
setp
mov
cmp
rcr
cdq
js
inc
mov
pop
popw
scas
add
mov
mov
js
cmps
and
sahf
fs
xchg
xchg
mov
call
out
sub
add
cmp
pop
shl
cmp
shl
or
jmp
je
mov
push
cmp
push
stc
cmp
cmp
or
cmc
mov
stc
clc
mov
cmp
cmp
jmp
cmc
sub
clc
stc
test
shr
cmp
test
cmp
add
jmp
dec
into
cdq
clc
and
adc
cli
gs
and
loopne
(bad)
xlat
pop
xor
pop
fld
mov
mov
sahf
or
call
loop
std
gs
imul
shl
add
ret
gs
mov
loopne
inc
xchg
push
adc
frstpm(287
gs
or
daa
into
(bad)
xchg
out
dec
sbb
outs
jmp
in
push
retf
xchg
inc
out
push
pop
in
in
cmp
cmp
retf
js
js
shl
jae
clc
mov
push
add
inc
(bad)
shl
pop
add
xchg
sbb
js
retf
inc
sbb
in
lods
dec
dec
sbb
lods
xchg
jo
clc
sub
es
in
cld
cmp
pop
xchg
sbb
shr
inc
retf
jmp
xchg
pop
sbb
mov
js
push
imul
out
xor
mov
popa
xor
add
fst
test
inc
cmp
daa
idiv
fbld
data16
lods
lds
pop
xor
or
adc
sub
jnp
xor
and
cmps
std
sbb
call
mov
test
test
jmp
jae
mov
jmp
pop
jmp
popf
mov
js
mov
inc
popf
adc
ja
gs
retf
call
retf
out
pop
call
es
xchg
ds
ins
call
gs
ins
xor
xchg
rol
jno
gs
push
or
outs
add
cmp
(bad)
cdq
js
arpl
gs
mov
sbb
pop
xchg
gs
adc
call
xchg
or
cmp
and
shl
sbb
mov
inc
jnp
fsub
push
adc
pushf
mov
pop
repnz
std
xchg
scas
clc
xor
mov
inc
shr
clc
loop
gs
mov
xchg
lock
call
stos
fcmovnu
gs
jmp
std
fistp
sub
adc
bound
call
out
in
cdq
clc
mov
ret
(bad)
jg
mov
clc
ret
push
iret
gs
repz
inc
call
cmps
dec
or
gs
cmc
mul
inc
int
jg
(bad)
and
out
pop
sar
call
cld
cmp
call
fstp
(bad)
xor
xor
mov
lods
dec
ins
retf
pop
(bad)
sbb
scas
cwde
call
je
inc
dec
dec
inc
xchg
ficomp
js
cmp
gs
xor
and
call
(bad)
gs
sub
jmp
xchg
popf
in
call
in
fsub
xor
call
jne
gs
not
cli
call
fld
gs
mov
pop
xchg
outs
stc
dec
mov
gs
mov
(bad)
popw
mov
xlat
fs
mov
jno
iret
call
fisttp
push
dec
xchg
adc
jg
call
mov
imul
gs
adc
popw
shr
call
scas
or
inc
stos
cdq
clc
test
push
gs
and
hlt
aad
pop
jge
cmp
call
mov
mov
and
mov
and
jge
call
xchg
cmp
gs
jns
sbb
setg
mov
clc
rol
add
ror
jmp
or
pop
xor
pavgb
iret
sub
mov
sub
cmc
sub
add
bsr
mov
shr
test
sub
cmp
mov
bsr
cmc
movzx
clc
jmp
je
mov
jmp
call
test
jne
mov
inc
bsf
shrd
mov
cmc
sub
test
add
add
jmp
jmp
pop
loope
clc
sub
xchg
jb
mov
clc
imul
gs
inc
das
dec
call
push
in
call
imul
jb
(bad)
cmps
call
out
stc
jl
call
lahf
addr16
sahf
les
stos
xchg
adc
mov
mov
mov
js
xchg
adc
and
scas
jnp
xchg
xchg
call
mov
adc
push
gs
or
push
push
or
lds
mov
clc
or
enter
xchg
adc
mov
cmp
sbb
adc
outs
icebp
cmp
rol
clc
loopne
push
mov
pop
sbb
into
mov
inc
arpl
xchg
add
xchg
jmp
ror
and
xchg
mov
mov
js
imul
xchg
xchg
call
jmp
gs
out
jle
inc
add
xchg
cdq
js
mov
ret
inc
and
xchg
call
(bad)
push
and
popa
gs
xchg
xchg
pushf
xchg
(bad)
sub
cdq
js
stc
cmp
in
xlat
gs
add
out
pop
xchg
push
pop
call
loopne
dec
call
add
retf
jmp
dec
jmp
sub
jmp
jae
mov
rol
shl
mov
cmp
cmc
test
add
test
cmp
cmp
jmp
adc
adc
stc
dec
xor
and
dec
xor
cdq
clc
or
fwait
gs
jnp
cmp
call
mov
mov
ins
gs
int3
mov
call
fdiv
jmp
cmp
jnp
rol
daa
push
xchg
xchg
cdq
js
mov
(bad)
push
gs
jmp
inc
popw
and
adc
mov
into
int3
mov
mov
js
and
pop
cmp
cdq
lahf
pop
call
(bad)
sbb
cli
call
xor
es
dec
adc
mov
mov
jmp
adc
in
inc
call
push
lods
gs
mov
call
retf
gs
sti
adc
gs
mov
test
push
xchg
call
lods
popw
stos
add
mov
mov
cmps
dec
gs
jmp
xchg
repz
(bad)
cmp
inc
or
int
fmul
icebp
xchg
sbb
movs
in
cmps
mov
in
cli
mov
ds
pusha
(bad)
push
mov
jno
cmp
lea
scas
stos
pusha
inc
dec
mov
movs
pushf
js
inc
fisub
pop
jl
arpl
xchg
cmp
pop
int3
lahf
mov
dec
or
or
adc
(bad)
loopne
push
xor
or
or
(bad)
or
sub
or
or
sub
and
add
test
add
jne
cmp
jmp
push
mov
rol
lea
push
setle
xor
rcr
push
adc
mov
lea
xor
sub
clc
seto
mov
mov
cmovae
rol
clc
neg
lea
cmc
jmp
jmp
cmp
clc
shl
or
jmp
mov
cdq
js
pop
pop
gs
mov
icebp
jns
call
mov
cmp
mov
cmc
gs
stos
mov
gs
pop
xlat
cmp
jp
ins
call
mov
cdq
mov
nop
push
pop
dec
xchg
call
fs
clc
fnstcw
popa
gs
xchg
stc
push
gs
and
call
push
gs
std
pop
mov
jnp
cmp
arpl
cld
aad
icebp
cmp
mov
call
push
icebp
clc
int3
out
push
pop
sti
call
cmp
sbb
js
cmps
sti
push
(bad)
pop
js
push
pop
push
jbe
adc
gs
jnp
xor
gs
cli
fdiv
sti
call
pusha
inc
call
cs
xchg
adc
or
call
sub
dec
inc
call
stc
shr
call
sbb
call
gs
jp
jo
cmp
mov
mov
xchg
call
(bad)
in
inc
loopne
ret
ds
mov
dec
push
push
shl
mov
(bad)
into
ins
arpl
sub
fwait
clc
into
(bad)
(bad)
push
cli
addr16
ficom
xchg
addr16
push
test
pop
(bad)
cwde
cmp
fwait
clc
movs
mov
jecxz
pop
or
mov
clc
lods
jp
(bad)
ja
and
inc
sti
cmp
cwde
cmp
fwait
clc
ret
addr16
(bad)
bound
addr16
daa
lock
sub
pop
sbb
sub
mov
ins
fwait
clc
push
and
(bad)
adc
outs
cmps
cwde
cmp
das
pop
leave
fs
clc
xlat
cwde
mov
mov
clc
xchg
mov
xchg
dec
cwde
mov
clc
xlat
jl
addr16
xor
cdq
lahf
inc
xchg
cwde
cmp
or
add
xor
pop
in
jmp
add
js
mov
inc
sbb
inc
gs
mov
sub
gs
into
inc
xor
(bad)
sub
gs
movs
and
push
call
inc
int3
fwait
cdq
clc
pop
les
das
popw
lods
movs
call
fwait
add
call
mov
xchg
or
pop
call
stos
push
push
retf
push
gs
imul
xchg
call
add
gs
icebp
lahf
gs
or
cmp
dec
call
and
call
jne
call
iret
dec
setp
fist
gs
shl
jle
pop
das
sub
call
cmps
jnp
clc
mov
gs
dec
cmp
adc
call
and
xchg
aaa
out
js
sub
gs
cli
pop
push
gs
arpl
mov
rcr
cdq
clc
loopne
out
stc
sbb
in
call
je
xchg
daa
call
aaa
stos
gs
rcl
in
test
popf
in
sbb
or
in
rcr
outs
or
sbb
push
daa
in
icebp
xor
in
pop
jle
sbb
les
inc
into
in
mov
pop
push
movs
rcr
in
and
sbb
js
add
in
push
cld
cmp
xchg
add
xor
mov
clc
or
or
fnstsw
xor
sub
fstp
call
add
pop
jmp
sbb
adc
and
fsubr
lods
rcr
aam
in
add
jmp
or
inc
(bad)
fistp
sub
sub
or
adc
add
mov
xor
and
or
xadd
adc
mov
shl
ror
rcl
and
mov
clc
cmc
sub
jmp
sbb
test
cmc
and
add
jmp
jmp
push
call
jle
cdq
clc
ss
gs
pop
adc
mul
clc
jae
popw
jmp
xchg
gs
sub
pushf
gs
lods
aas
and
scas
gs
lds
gs
fcomp
daa
mov
mov
xor
bnd
call
push
xchg
fwait
icebp
js
out
push
push
(bad)
lahf
cmp
or
clc
dec
ror
mov
sub
icebp
cmp
retf
clc
ss
cli
push
inc
loopne
lock
inc
sbb
mov
(bad)
or
add
mov
icebp
clc
dec
push
or
icebp
cmp
mov
enter
ret
push
pop
or
icebp
mov
adc
bnd
dec
push
(bad)
mov
gs
icebp
js
cs
inc
push
fmul
push
(bad)
dec
outs
in
push
aaa
mov
addr16
imul
cmps
fwait
cmp
xchg
shl
(bad)
sbb
lea
fwait
cmp
pop
adc
(bad)
fwait
mov
js
inc
fs
enter
xchg
sub
fwait
js
std
fs
ror
pop
fild
data16
inc
shl
fs
cmp
fwait
clc
pop
fs
fs
enter
mov
js
int
fs
not
push
addr16
daa
mov
fwait
mov
mov
js
sub
shl
xchg
and
fwait
mov
mov
clc
inc
sub
cmp
jmp
jmp
xchg
mov
jb
inc
mov
xchg
js
gs
jmp
(bad)
push
call
cmp
ja
xchg
sub
call
and
pop
or
in
inc
call
pop
cmc
pushf
jnp
sbb
int
xchg
mov
cmps
xor
or
mov
movs
xchg
loope
js
test
xchg
lds
xchg
mov
or
pop
js
pop
cmc
xchg
xor
(bad)
stc
fstp
js
xor
cmps
test
mov
cmp
js
jle
retf
jnp
jmp
inc
xchg
pop
add
(bad)
fidivr
cmp
js
dec
or
das
xchg
adc
push
repnz
push
xchg
mov
xchg
icebp
js
sbb
xchg
clc
les
xchg
mov
loopne
clc
inc
dec
xchg
xchg
mov
inc
mov
fdivr
lods
addr16
clc
jbe
xchg
mov
lock
jbe
adc
bound
js
xchg
push
into
js
xor
icebp
test
mov
clc
dec
out
xchg
dec
jl
inc
cmp
fs
cmp
sar
mov
ret
stc
hlt
inc
add
repnz
mov
cmc
jmp
jae
mov
add
jmp
aaa
add
popw
daa
jge
call
fsub
mov
pop
pop
retf
clc
inc
sub
gs
adc
ret
cmp
enter
jecxz
call
push
lods
dec
cdq
js
test
loopne
adc
cmp
sbb
enter
(bad)
cmp
sahf
loopne
xchg
in
pop
js
jmp
dec
and
mov
clc
aam
stos
call
pop
fsubp
(bad)
cwde
movs
fucom
inc
sub
loopne
iret
stos
push
push
cmps
sbb
mov
mov
mov
loop
stc
lds
loopne
jecxz
cmp
mov
in
fistp
je
pop
sub
mov
fisttp
je
sbb
cmc
repz
jbe
mov
std
inc
stc
ret
cmps
ja
cwde
ins
mov
pop
jb
xchg
je
int
(bad)
ja
idiv
sbb
mov
fcmovnb
mov
lods
mov
ja
jns
test
mov
aad
xor
shl
mov
js
enter
fst
sbb
jmp
repz
xor
imul
gs
in
cwde
gs
mul
call
and
into
in
pop
dec
test
cmp
sub
retf
in
sbb
out
or
enter
cmp
mov
dec
xchg
mov
js
mov
jo
xchg
std
xchg
cmp
add
clc
and
outs
(bad)
mov
outs
mov
int
push
xchg
cmp
jecxz
xchg
clc
mov
in
inc
xchg
sub
pop
push
out
xchg
js
mov
stc
outs
outs
xchg
clc
fsubr
outs
(bad)
xchg
in
(bad)
test
and
xchg
mov
adc
(bad)
outs
xchg
(bad)
fs
lods
inc
xchg
clc
ja
outs
(bad)
out
int
outs
inc
loope
ins
pop
dec
(bad)
mov
cmp
mov
outs
inc
div
and
sbb
shr
enter
popf
jo
xchg
mov
xor
adc
inc
fcomp
outs
xchg
fcom
xchg
clc
jne
inc
outs
xchg
mov
out
outs
inc
mov
pop
ins
xchg
push
push
clc
enter
inc
mov
in
jae
xchg
(bad)
xchg
xchg
mov
mov
clc
mov
push
wbinvd
xchg
mov
clc
fnstenv
outs
inc
aas
idiv
outs
inc
cmps
mov
mov
xchg
mov
in
dec
adc
inc
and
mov
shr
cmp
sub
bt
bts
mov
lea
shl
movzx
rcl
mov
or
sub
mov
ror
bt
mov
mov
rol
movsx
shrd
mov
movzx
cmp
shr
nop
movzx
cmp
jmp
mov
jmp
jne
cmp
jmp
jae
cmp
jmp
inc
cmp
mov
movsx
mov
cmc
shr
imul
cmp
stc
cmp
jmp
sub
jmp
push
dec
dec
dec
dec
inc
push
cs
ins
add
test
sub
shl
add
pop
pop
cmp
jbe
or
jmp
call
pop
jmp
adc
adc
add
js
or
ret
add
dec
outs
arpl
inc
jb
add
or
add
lea
bswap
mov
not
push
mov
mov
jmp
push
call
add
push
push
js
arpl
gs
add
test
(bad)
inc
cmp
(bad)
inc
loop
cmp
cmp
test
or
clc
shr
jmp
ret
add
push
push
push
push
outs
fs
gs
popa
addr16
add
stos
cdq
js
fidivr
inc
out
data16
(bad)
sti
adc
gs
mov
mov
mov
aam
cdq
clc
dec
pop
shl
and
call
push
xchg
push
test
or
(bad)
sti
push
ret
(bad)
je
inc
mov
sbb
cwde
ror
jno
push
retf
jno
or
jb
fnsave
mov
aam
lea
cmp
das
jno
or
jb
adc
or
adc
push
mov
lea
sysret
push
jno
cmp
je
inc
retf
push
data16
arpl
cmp
pop
cs
lods
jno
fistp
dec
mov
jge
push
jb
mov
cwde
mov
inc
dec
inc
jnp
repnz
(bad)
cmp
pop
dec
mov
mov
mov
mov
jno
mov
mov
gs
jno
adc
sti
add
push
mov
addr16
mov
xchg
ror
inc
xchg
jno
fcom
lock
mov
int
push
mov
call
das
jb
into
mov
aaa
jno
dec
rcr
lea
fcom
jno
fs
jno
pop
das
dec
mov
sbb
or
mov
loope
mov
test
jno
repnz
jb
push
movs
dec
mov
sub
mov
adc
push
mov
das
xchg
jb
lea
jmp
or
adc
aad
and
sub
inc
jmp
mov
jmp
add
inc
outs
jne
push
gs
imul
je
jae
js
add
iret
cdq
js
rol
push
dec
gs
in
hlt
call
mov
mov
repz
call
(bad)
jecxz
call
sbb
gs
or
xchg
imul
enter
and
mov
popw
push
push
push
call
retf
xchg
dec
lods
call
push
sub
push
pushf
or
or
inc
shr
(bad)
cmps
repz
fld
pop
push
mov
clc
scas
adc
pop
bound
cmp
mov
jnp
lods
xchg
or
mov
cmp
inc
or
jnp
mov
daa
in
xchg
js
jmp
fild
scas
test
jge
inc
or
lods
js
dec
jb
js
jmp
into
js
rcr
mov
dec
dec
ja
js
sub
xchg
sub
sbb
sar
cmp
cmp
mov
clc
inc
xor
mov
clc
cmp
pop
xchg
push
(bad)
adc
sub
je
fisttp
or
idiv
pop
lea
xor
btc
mov
movzx
test
stc
cmc
mov
cmp
test
cmp
jmp
or
add
cmp
dec
jle
fistp
mov
(bad)
adc
sub
outs
pop
xor
add
aam
scas
cdq
js
push
jl
inc
jno
cmp
pop
mov
gs
cmp
cmp
sbb
cmp
addr16
cdq
clc
(bad)
mov
xchg
test
dec
das
call
sub
in
ret
call
or
out
popw
rcr
stc
nop
rcr
clc
pop
or
gs
jae
xchg
mov
call
pop
xchg
mul
out
fisub
lock
call
add
gs
inc
leave
frstor
sub
xchg
push
(bad)
jns
int3
inc
lock
mov
cmp
lock
pop
repz
call
pop
push
lock
fild
fist
xrstors
in
(bad)
out
fistp
xchg
pop
pop
shl
cwde
clc
mov
xchg
push
and
outs
push
cwde
js
in
fs
xor
fs
xchg
(bad)
push
fwait
mov
mov
fwait
mov
clc
cmps
pop
fs
jge
bound
mov
fs
dec
pcmpgtb
cmp
loopne
jns
(bad)
shl
dec
fs
xor
das
fwait
fwait
cmp
loope
fwait
mov
clc
xchg
mov
xchg
int3
fwait
mov
clc
aam
jnp
inc
add
aas
fs
cmps
mov
ror
sar
cwde
js
ret
gs
not
mov
sar
dec
fwait
mov
icebp
inc
frstor
leave
dec
cmp
jmp
fmul
call
lock
push
call
and
mov
push
call
idiv
gs
neg
add
call
lods
lds
js
mov
jp
mov
clc
retf
push
(bad)
das
gs
xchg
sbb
(bad)
mov
int
pop
add
test
mov
pop
push
scas
stc
mov
(bad)
gs
jle
shl
mov
push
ja
js
cmp
inc
pop
cmp
call
rcr
inc
fisttp
gs
fsubr
pop
dec
ja
call
loop
stc
loopne
cdq
js
push
mov
outs
jl
call
pop
loopne
mov
data16
(bad)
or
mov
xchg
inc
push
mov
inc
jbe
gs
push
push
and
sbb
push
lds
gs
repz
js
pop
lods
xchg
call
repz
gs
jns
inc
gs
push
mov
push
lds
call
popa
jns
(bad)
cmp
test
jmp
test
mov
call
inc
xchg
push
cdq
js
cmp
cmp
cmps
popf
js
mov
jecxz
cmp
or
js
add
loopne
mov
inc
je
retf
ja
dec
out
mov
cmp
fdiv
cwde
je
push
cmps
mov
mov
clc
das
test
inc
lds
jnp
mov
cmp
aad
ja
sbb
jo
inc
add
pushf
mov
aas
mov
and
(bad)
dec
(bad)
mov
sub
shr
clc
stc
add
not
jmp
jae
shl
cmc
btr
mov
xor
bts
movzx
shl
cmp
clc
test
or
mov
movzx
movsx
inc
stc
dec
shld
mov
bsf
xadd
not
mov
shr
imul
jmp
cmp
call
das
movs
aas
popw
or
jbe
mov
jmp
cmp
gs
sbb
rcr
inc
in
outs
adc
sub
gs
fidivr
gs
jb
outs
stc
jl
cdq
js
mov
push
call
hlt
pushf
repnz
js
xor
gs
ror
call
test
fsub
sub
mov
es
stc
sub
call
sbb
(bad)
xchg
push
add
mov
add
mov
js
xor
lock
pop
pop
call
out
cs
call
pushf
scas
rcr
js
arpl
pop
sar
adc
push
mov
clc
(bad)
push
adc
(bad)
(bad)
fldenv
out
retf
(bad)
and
inc
inc
call
fstp
xchg
popa
call
cwde
cdq
js
ins
pop
gs
or
gs
stos
jno
call
mov
repz
or
push
leave
adc
or
rcl
push
xor
xchg
cmp
nop
rcl
outs
inc
add
outs
pop
rcr
xchg
cmp
out
clc
loope
xchg
outs
inc
mov
and
xchg
mov
clc
mov
inc
xchg
pop
jmp
jge
in
lods
mov
xchg
js
add
cmp
jmp
rcr
inc
test
clc
mov
bound
(bad)
sti
adc
cmp
scas
xchg
js
cld
(bad)
ins
xchg
retf
add
leave
je
(bad)
mov
mov
cdq
mov
movs
ins
xchg
clc
(bad)
push
ins
xchg
je
xchg
mov
clc
mov
je
fild
rol
outs
xchg
mov
adc
ds
gs
das
les
pop
popa
in
call
push
pop
cdq
clc
mov
test
inc
gs
out
aad
pop
into
out
add
imul
dec
scas
in
and
xchg
mov
push
in
call
in
call
call
rol
icebp
mov
call
frstor
mov
sub
dec
add
repnz
inc
dec
imul
inc
xchg
mov
fs
cmp
gs
push
xchg
cmp
push
icebp
mov
aad
popw
pusha
retf
or
call
adc
mov
adc
stc
call
add
xchg
(bad)
call
jno
gs
shr
jne
pop
ins
dec
call
and
and
or
pop
fisubr
call
call
stos
sbb
gs
cmc
jbe
and
cs
sbb
pop
push
add
push
xchg
clc
mov
fisubr
or
adc
xchg
js
ins
jecxz
inc
adc
adc
push
cld
xchg
mov
cmp
inc
xchg
js
dec
(bad)
push
xchg
mov
push
push
(bad)
mov
inc
inc
xor
aaa
aas
imul
mov
stc
xchg
mov
jecxz
push
js
or
(bad)
sbb
ja
cmp
mov
js
mov
jnp
(bad)
lea
scas
imul
mov
xchg
js
push
push
push
imul
dec
xchg
clc
add
call
inc
sub
shr
mov
jae
nop
push
imul
push
daa
xchg
mov
mov
js
out
adc
jecxz
fisubr
hlt
cld
cmp
xchg
mov
clc
mov
jmp
jae
mov
cmc
mov
sub
stc
shr
clc
test
add
mov
mov
cmc
add
jmp
adc
outs
and
push
aaa
jmp
call
xchg
cmp
jmp
adc
cdq
js
xor
add
call
popa
mov
adc
ss
gs
cs
gs
aad
adc
retf
xchg
inc
call
add
sar
sub
in
mov
sar
xlat
clc
gs
js
rcr
(bad)
aas
mov
cdq
clc
aam
gs
pushf
outs
frstor
fmul
pop
sahf
sub
clc
pop
scas
sbb
sbb
rcr
js
push
xchg
rcl
call
inc
arpl
popw
xor
and
cmp
push
imul
cmp
xor
cdq
js
mov
gs
cmc
bound
xchg
call
into
or
call
add
gs
xor
dec
gs
jnp
mov
xchg
(bad)
call
cmp
popa
stos
adc
cmp
enter
inc
or
gs
push
shl
mov
and
mov
clc
shr
gs
adc
arpl
mov
pop
call
mov
imul
adc
push
(bad)
gs
lock
adc
sub
jge
push
call
fnsave
gs
daa
out
cmps
gs
xchg
in
call
cli
repnz
gs
jmp
pop
jmp
stc
cmp
mov
mov
lea
stc
lea
jmp
stc
test
shl
shl
or
xchg
movsx
inc
or
mov
cmc
clc
shr
imul
cmp
jmp
jae
mov
test
cmc
cmp
jmp
ins
int3
cdq
clc
pop
pop
mov
pop
call
ins
(bad)
out
gs
inc
sub
call
cmp
jcxz
gs
push
push
inc
gs
dec
imul
lea
sbb
ss
sbb
movs
or
mov
clc
pop
or
(bad)
mov
(bad)
ja
(bad)
cmp
xchg
or
icebp
cmp
and
cmc
scas
popw
pusha
retf
setp
mov
js
jns
gs
dec
mov
xchg
adc
call
sbb
aam
aam
mov
xchg
add
pop
cdq
icebp
(bad)
call
lock
adc
mov
mov
lds
fs
adc
inc
sbb
call
add
lods
push
call
call
sbb
addr16
cmps
gs
adc
pop
dec
call
jb
call
xchg
movs
jmp
sbb
(bad)
outs
fidivr
sar
test
test
icebp
sub
mov
lds
(bad)
int3
or
call
xchg
mov
xchg
xchg
call
out
inc
and
adc
addr16
popf
fwait
call
cmp
ret
ja
mov
sbb
call
jecxz
sbb
xchg
or
cmps
call
mov
ret
call
int3
adc
mov
fwait
js
cmp
xchg
sbb
fs
cmp
fs
retf
fs
ins
dec
hlt
fs
test
lahf
adc
push
adc
(bad)
div
pop
stc
cwde
js
inc
cmc
fs
xchg
mov
inc
cmp
scas
fs
mov
ror
fwait
mov
clc
(bad)
jecxz
addr16
dec
out
fwait
mov
cmp
out
fs
enter
xchg
push
rcr
loope
xlat
fs
rcl
addr16
inc
inc
fwait
clc
jmp
xchg
xchg
sbb
js
or
fs
sar
sti
in
cmp
(bad)
repz
mov
pop
xchg
gs
cmp
lds
clc
inc
pushf
icebp
mov
and
cld
call
fwait
cmp
jle
add
shl
(bad)
pushf
add
and
xchg
xchg
jne
cmp
push
cmp
pop
ja
js
stos
cdq
fs
sub
pusha
addr16
clc
repz
fwait
cmp
cmp
add
(bad)
xchg
out
fs
or
pop
fs
cmp
xchg
push
cwde
js
test
fs
cmp
adc
jge
fs
xor
sbb
fs
xchg
mov
fs
ins
mov
xchg
ins
push
fwait
cmp
cdq
cwde
js
push
jle
inc
dec
ins
xchg
fs
xchg
push
mov
popf
cwde
js
scas
jecxz
inc
xchg
mov
addr16
inc
out
push
fwait
mov
mov
js
adc
inc
jne
mov
not
cwde
mov
shr
shl
bts
sub
bsf
sub
rcr
bts
lea
add
add
movzx
mov
clc
test
add
jmp
pop
(bad)
sub
das
out
pop
xor
clc
(bad)
mov
push
call
xchg
pop
loop
pop
mov
std
jne
call
xchg
push
test
(bad)
lea
inc
stos
mov
(bad)
jl
mov
jecxz
push
and
and
int3
ss
xchg
jle
call
pop
cmp
clc
and
push
and
in
xchg
mov
call
popa
enter
xchg
je
fwait
gs
dec
sbb
mov
call
hlt
dec
gs
into
enter
ins
mov
stc
int
cdq
js
mov
ja
out
stc
mov
call
icebp
cld
gs
dec
mov
(bad)
adc
mov
mov
clc
movntq
stc
test
call
push
mov
(bad)
sbb
jb
mov
sub
pop
call
push
out
call
push
mov
xchg
xchg
movs
call
call
dec
dec
adc
repnz
mov
push
gs
jne
cs
xlat
repnz
gs
pop
jl
popw
xchg
(bad)
js
mov
test
rol
call
xor
loope
gs
fs
call
jne
mov
cmp
pushf
(bad)
xor
(bad)
call
mov
out
sti
dec
cli
call
add
xchg
call
mov
mov
cmp
xchg
stos
call
outs
cdq
js
std
gs
mov
xchg
gs
pop
mov
mov
and
stos
std
mov
mov
(bad)
push
mov
xchg
das
icebp
mov
clc
test
push
pop
movs
mov
cli
mov
inc
push
xchg
mov
mov
xor
gs
xchg
mov
cdq
js
sub
inc
pop
and
pusha
fcomp
call
mov
in
gs
shr
and
loopne
(bad)
call
ret
js
pop
out
(bad)
stc
jb
popw
(bad)
popf
gs
xor
lea
mov
test
mov
sti
gs
jmp
mov
mov
jmp
pop
gs
stc
cmp
pop
dec
outs
ins
cdq
js
cld
adc
cli
fsubr
popw
ds
movs
call
push
dec
aas
nop
gs
sbb
pop
xchg
into
push
call
xchg
out
(bad)
fs
xor
pop
add
call
mov
or
imul
scas
icebp
gs
or
popf
xchg
call
push
les
xchg
clc
jle
cdq
clc
jo
gs
out
jl
xchg
call
popf
jns
js
push
and
lock
clc
js
cdq
clc
xor
gs
pop
push
rcr
(bad)
dec
sti
out
clc
mov
repnz
clc
shl
clc
gs
mov
gs
sub
cdq
js
push
adc
repz
inc
into
rol
pop
mov
dec
call
je
or
push
call
test
gs
into
jg
stc
or
aad
inc
dec
xor
push
call
cmp
(bad)
dec
in
inc
gs
and
adc
pusha
adc
jg
xchg
retf
gs
mov
repz
sbb
popw
test
mov
clc
clc
and
test
call
add
scas
mov
pop
dec
cli
popw
scas
cmps
xor
mov
clc
push
gs
(bad)
and
call
inc
xchg
call
xchg
gs
movzx
adc
call
jle
imul
aad
call
xchg
outs
stc
sbb
gs
dec
pop
pop
gs
mov
rol
call
push
(bad)
call
and
je
mov
js
inc
gs
leave
in
xchg
gs
cs
popw
sahf
ins
je
hlt
not
cmp
mov
jmp
test
(bad)
dec
ja
pop
sar
jp
xor
jp
movs
cmc
jp
paddsw
lock
adc
test
nop
mov
pop
test
fmul
lahf
jp
mov
pop
aad
(bad)
pop
cmc
test
mov
cmp
scas
or
rcl
pop
jp
call
jle
jp
xlat
push
pop
jp
(bad)
popa
out
js
leave
fild
jp
xor
aam
mov
clc
inc
fild
jp
not
pop
jns
and
or
pop
stos
test
cmp
inc
or
je
mov
mov
push
jmp
sub
mov
sub
add
or
rcl
movzx
movzx
mov
mov
movzx
xor
shr
mov
cbw
xor
mov
adc
sub
mov
dec
sbb
lea
shl
test
bsr
mov
cmp
test
and
stc
mov
lea
cmc
cmp
jmp
add
sub
inc
push
add
add
jae
mov
test
cmp
cmp
jmp
mov
jmp
push
(bad)
adc
dec
sbb
or
and
fdivr
loop
mov
pop
es
and
ins
js
js
jne
gs
in
aad
gs
jge
sub
gs
or
or
in
gs
inc
(bad)
dec
call
cmp
in
aad
cwde
in
mov
add
xchg
adc
mov
cmp
add
clc
clc
ret
xchg
mov
sbb
mov
pop
sbb
xchg
data16
jmp
push
sbb
js
call
xchg
jbe
push
or
in
ins
ret
in
mov
xor
and
stos
xchg
or
sbb
dec
adc
inc
imul
push
jne
in
cmp
clc
(bad)
and
dec
in
je
sbb
push
mov
sbb
stos
or
add
cdq
js
xor
outs
test
stos
int3
call
ds
stos
jmp
or
call
xchg
mov
aaa
mov
xchg
jo
mov
clc
mov
in
gs
or
call
dec
call
xchg
sub
mov
push
call
xor
xor
push
call
add
mov
xchg
leave
call
cld
push
jle
inc
push
enter
or
dec
xor
inc
sub
inc
or
pop
gs
xor
sbb
mov
jb
mov
cmp
cmps
std
jmp
xchg
enter
jl
add
gs
push
cmp
or
mov
(bad)
push
adc
pop
loopne
mov
mov
mov
cmp
add
js
loop
push
inc
loop
push
push
inc
xor
arpl
pop
mov
pop
bnd
pop
and
inc
and
fisttp
icebp
mov
mov
js
mov
cmp
cmc
jmp
mov
movsx
cmovnp
pop
ret
push
cdq
clc
and
dec
iret
add
call
test
add
gs
lock
mov
clc
call
shr
mov
mov
adc
xchg
xchg
rcr
call
dec
cdq
call
cmp
js
ds
push
push
inc
ret
push
mov
push
xchg
push
inc
in
jge
xchg
inc
bnd
int
xchg
icebp
mov
clc
xchg
ret
add
(bad)
es
or
icebp
cmp
sub
(bad)
retf
stc
stc
xchg
icebp
cmp
add
xchg
jmp
repnz
or
push
inc
retf
(bad)
xor
pushw
(bad)
sbb
xchg
pop
jecxz
bnd
xor
mov
pushf
(bad)
icebp
cmp
xor
ficomp
daa
xchg
ins
ins
adc
test
sbb
idiv
movs
fdivr
lods
push
xchg
xchg
jns
inc
cmp
js
cmp
inc
xchg
sbb
test
fwait
test
jnp
test
js
xchg
js
test
mov
jecxz
push
ja
pop
inc
aaa
retf
push
mov
jnp
nop
popa
xchg
sub
xor
fst
add
jmp
fld
jnp
bound
xchg
adc
test
out
das
js
and
imul
adc
xchg
fisub
(bad)
test
mov
dec
les
(bad)
ins
xchg
aaa
mov
call
and
adc
cdq
clc
xlat
lea
jae
mov
clc
test
ret
gs
adc
mov
mov
cmp
dec
cdq
js
neg
xchg
sbb
pop
cs
(bad)
ficomp
adc
call
jno
jecxz
inc
or
push
jge
cdq
clc
jmp
gs
add
xchg
imul
call
in
call
add
popw
(bad)
fsubr
stc
pop
xchg
cdq
js
dec
gs
push
icebp
xchg
call
dec
gs
push
push
jnp
xchg
neg
cdq
js
daa
fsub
or
xor
div
add
gs
aas
cdq
js
retf
inc
fdivr
mov
inc
call
jnp
gs
loope
in
call
mov
rcl
gs
out
in
int
inc
shl
xlat
gs
xor
jl
call
int
mov
mov
push
cmp
stc
pushf
movs
call
add
call
xor
cdq
test
and
inc
ret
js
or
daa
push
xchg
nop
push
les
xchg
cmp
xor
test
popf
imul
or
clc
cmps
stc
push
dec
pop
xchg
push
mov
imul
xchg
cmp
sub
push
mov
push
jae
enter
cwde
loopne
(bad)
or
inc
adc
sbb
iret
xchg
clc
sub
jnp
push
xor
ficom
xchg
clc
jb
ds
shr
into
imul
js
outs
pop
push
pop
call
push
adc
or
mov
inc
pop
dec
push
and
aad
call
xchg
mov
js
in
retf
push
frstor
push
imul
xchg
mov
jmp
push
jmp
adc
and
sub
dec
inc
fild
in
add
ret
rcl
shl
mov
stc
sub
inc
cmp
jmp
mov
cdq
clc
out
cmps
gs
mov
add
enter
test
fadd
cdq
clc
dec
pop
push
xchg
ds
mov
clc
xor
push
call
call
xor
jbe
js
push
das
stc
cmp
fstp
mov
nop
adc
add
or
gs
xchg
mov
popw
dec
out
call
or
inc
mul
push
scas
cmp
data16
fcomp
call
dec
add
enter
int
gs
sbb
inc
push
call
inc
mov
add
gs
cmp
push
mov
push
sbb
das
clc
fild
xchg
outs
call
in
imul
or
out
add
xor
inc
call
mov
add
das
stc
out
call
inc
(bad)
adc
clc
dec
xchg
or
xchg
out
mov
xchg
jecxz
clc
jnp
inc
gs
int3
aas
nop
add
stos
gs
pop
call
fild
gs
cmc
rep
gs
mov
mov
cmp
call
sahf
xchg
pcmpgtw
ins
fsub
and
cs
mov
pop
gs
cmps
addr16
gs
adc
mov
gs
test
into
mov
mov
mov
js
js
gs
jns
dec
xchg
inc
call
or
stos
(bad)
gs
test
frstor
pop
aam
popw
jge
pop
call
cmp
setp
and
gs
pop
(bad)
shl
and
sbb
xor
pop
jecxz
lock
sahf
xchg
or
jmp
adc
js
mov
in
imul
adc
push
xchg
mov
test
call
(bad)
cmps
sbb
xchg
repz
pop
xchg
js
cwde
js
pop
pop
sub
xchg
cmp
jo
xchg
mov
lahf
(bad)
imul
push
xchg
mov
js
push
inc
imul
inc
push
clc
ins
cmp
dec
loope
enter
repnz
push
cmp
xchg
mov
mov
cmp
xchg
mov
je
fwait
push
xchg
mov
js
sub
cwde
pusha
ja
mov
jge
inc
imul
add
mov
jae
js
packssdw
movs
mov
out
xchg
clc
push
pop
imul
sub
xchg
adc
pop
inc
repz
cmp
mov
add
xchg
push
cmp
pop
mov
(bad)
sub
movs
imul
push
xchg
cmp
xchg
cmp
stos
pop
xchg
cmp
int3
push
xchg
clc
ins
jnp
imul
bnd
mov
clc
hlt
shr
sbb
cmp
xor
push
imul
sub
imul
xchg
mov
push
pop
outs
xchg
mov
mov
clc
sbb
lea
jmp
mov
xchg
clc
ja
inc
imul
add
add
sbb
adc
cmp
jle
pop
int
in
jge
xchg
mov
pop
and
sub
and
pop
ror
mov
cmp
and
gs
jecxz
in
gs
mov
mov
lea
cdq
js
inc
adc
aas
aam
pop
addr16
xor
jmp
xchg
div
js
dec
push
inc
inc
std
jbe
pop
ret
icebp
js
daa
(bad)
clc
rcr
js
xchg
push
inc
movs
popa
scas
push
pop
pop
push
icebp
js
mov
loop
icebp
mov
push
xchg
je
test
xor
mov
js
and
mov
push
(bad)
push
(bad)
pop
inc
fdiv
clc
pop
sbb
push
inc
xlat
repnz
xchg
jl
icebp
mov
clc
stos
add
push
inc
inc
mov
jl
xchg
xchg
icebp
icebp
cmp
int3
mov
gs
lock
gs
in
push
adc
pop
xchg
pop
mov
cmp
mov
out
mov
clc
imul
xchg
sub
call
or
gs
in
push
push
pushf
add
inc
push
call
sbb
js
xchg
popw
or
call
inc
int
mov
push
jmp
icebp
mov
or
clc
ror
gs
stc
mov
call
repz
call
mov
pop
dec
nop
(bad)
call
xchg
sbb
clc
addr16
xchg
mov
mov
rol
call
mov
imul
inc
mov
popw
mov
push
call
in
gs
cld
data16
pushf
cmp
xchg
call
mov
fiadd
add
call
pushf
fcomp
gs
ja
jp
xchg
call
cmp
frstor
or
xor
repnz
gs
dec
imul
inc
gs
std
fistp
neg
call
jae
mov
movzx
clc
test
shl
shl
jmp
push
(bad)
adc
and
jno
pop
jae
lea
pop
seto
pop
movsx
xchg
setbe
pop
jmp
push
call
pop
ss
outs
dec
fsub
mov
scas
hlt
pop
call
jno
mov
pop
icebp
arpl
call
mov
sub
pop
jmp
das
stc
push
jl
clc
out
(bad)
popw
xor
out
stc
dec
popf
call
cmc
int
inc
shl
mov
je
inc
dec
cmp
popw
mov
mov
call
cmp
mov
cmp
xchg
mov
push
push
mov
js
jb
inc
or
push
loope
ins
mov
inc
loope
sbb
push
js
fwait
loope
in
aad
push
clc
dec
or
jnp
xchg
inc
arpl
cmp
sbb
(bad)
pop
sbb
stc
daa
les
clc
push
and
(bad)
push
adc
(bad)
fdivr
loope
pop
xor
jmp
ds
loope
stc
cs
int3
sub
xchg
stos
push
mov
clc
push
or
(bad)
sub
repnz
push
mov
loope
xor
int3
cmp
push
pop
push
retf
xchg
inc
stos
lock
js
xchg
je
inc
aam
popa
imul
clc
test
xchg
mov
mov
mov
xchg
mov
cmp
xchg
js
or
imul
dec
fiadd
mov
sbb
shr
js
push
inc
mov
push
stos
gs
js
and
push
mov
jl
js
xchg
ret
push
and
pop
push
ret
xchg
js
ins
pop
push
outs
dec
mov
jmp
lods
xchg
mov
js
mov
adc
sub
mov
in
dec
add
and
jne
aaa
fdivr
pop
outs
xchg
movs
in
dec
pop
inc
mov
mov
pop
jmp
push
(bad)
adc
cmp
push
pop
cmp
(bad)
adc
cmp
jb
cmp
dec
sub
btr
sub
lea
shl
mov
shr
mov
add
btc
mov
sub
rcr
mov
add
or
xadd
mov
cmp
clc
cmp
jmp
cmp
js
adc
gs
push
sub
gs
jmp
fild
pushf
mov
mov
pop
mov
or
gs
rcr
gs
fnsave
int
pop
xchg
sbb
mov
mov
adc
add
clc
mov
in
inc
hlt
idiv
in
inc
shr
pop
cmp
call
add
xchg
bound
xchg
mov
mov
out
js
in
mov
xchg
stos
jecxz
pop
inc
jmp
js
mov
sub
js
cmp
xchg
je
push
test
mov
mov
js
hlt
dec
stc
int
jnp
fsubp
xchg
jg
pop
test
aas
icebp
dec
js
xchg
leave
ins
js
fist
cmp
xor
xlat
and
js
sahf
mov
xor
repnz
or
xchg
sub
js
or
mov
push
mov
or
cmp
leave
dec
xchg
add
xchg
cmp
out
icebp
xchg
lods
or
xchg
in
mov
stos
cdq
clc
dec
mov
mov
adc
movs
call
loope
es
adc
into
call
mov
cld
call
push
or
inc
gs
scas
clc
dec
test
inc
cmp
gs
popf
xchg
call
add
push
push
lds
gs
fadd
icebp
xchg
loope
cmp
rcl
call
xor
adc
mov
or
xor
shl
in
rcl
cmp
push
pop
adc
xchg
cmp
stc
dec
sbb
gs
scas
adc
retf
inc
jmp
stc
mov
fdivr
xchg
call
jmp
pop
jmp
and
call
ins
(bad)
gs
cmps
inc
popw
retf
call
add
clc
test
gs
lods
add
gs
jne
fsub
pop
and
call
mov
gs
pop
mov
cdq
js
cmp
ins
fcomi
xchg
xchg
sbb
gs
add
gs
scas
cmp
int
outs
stc
dec
call
imul
cdq
js
sbb
jle
adc
and
add
mov
push
or
clc
inc
clc
aaa
or
pop
xchg
push
test
mov
(bad)
jp
cmp
or
mov
js
inc
xchg
pusha
imul
push
jl
xchg
cdq
test
js
xor
xchg
popf
js
aas
mov
push
js
in
out
js
xchg
dec
xchg
stos
jmp
xchg
cmp
mov
lds
mov
xchg
xchg
and
test
ja
lock
xchg
xchg
mov
fild
xchg
cmp
xchg
pushf
movs
xchg
mov
xchg
test
ret
inc
jnp
pop
inc
cmp
xchg
jae
mov
movzx
cmp
cmp
shl
clc
shl
jmp
cwde
test
(bad)
mov
or
xor
gs
test
add
call
cmps
and
gs
scas
lods
and
mov
cmp
push
push
pop
gs
fnstenv
push
mov
das
stc
or
call
mov
cdq
clc
pop
repnz
cs
adc
(bad)
xrelease
out
stc
jp
call
(bad)
call
lds
stc
and
cdq
clc
mov
adc
xchg
mov
loop
mov
dec
mov
dec
cmp
jp
js
sub
jno
inc
out
inc
gs
inc
gs
js
mov
std
popw
cmp
cmp
call
inc
aam
pop
int3
pop
ins
call
mov
cdq
jb
gs
iret
dec
or
call
sbb
pop
inc
pop
xchg
int3
call
ss
in
xchg
mov
cmp
(bad)
lods
(bad)
jge
cdq
clc
(bad)
repnz
inc
xor
jno
pop
loopne
call
call
lea
mov
jns
cmp
dec
dec
gs
aas
sbb
inc
fcomp
fbld
inc
cli
jmp
gs
int3
in
in
(bad)
(bad)
popw
cmp
cmps
call
inc
xchg
mov
addr16
mov
js
sub
test
(bad)
xchg
gs
push
sbb
rol
call
push
test
inc
pop
and
and
mov
mov
clc
pop
cmp
push
sub
call
adc
lods
mov
in
xchg
gs
mov
call
or
dec
mov
gs
ret
out
cdq
js
lods
gs
jb
push
popw
mov
sbb
clc
bound
mov
(bad)
jecxz
in
dec
movsx
lea
rcl
push
shl
btc
cdq
push
xor
xchg
push
test
mov
cwd
mov
sub
sbb
movsx
mov
mov
add
or
mov
btr
shl
mov
ror
or
bsf
mov
sub
rcr
bts
mov
mov
sar
mov
test
jmp
out
cdq
clc
xchg
jp
gs
xlat
push
ja
cmp
les
mov
je
clc
andnps
xchg
call
inc
(bad)
jb
pop
pop
xor
call
xchg
scas
pushf
and
in
(bad)
jl
and
xchg
sub
mov
clc
(bad)
inc
push
scas
jge
xchg
call
mov
clc
add
mov
adc
fs
(bad)
in
inc
sbb
es
push
or
js
retf
in
(bad)
xor
jmp
in
inc
mov
push
out
xchg
mov
js
(bad)
stos
push
adc
cmp
pop
adc
jp
in
(bad)
cmp
xchg
xchg
adc
xchg
mov
push
out
pop
rcl
adc
ret
pushf
in
inc
in
imul
adc
xor
in
(bad)
pop
pop
inc
in
xchg
adc
cmp
push
push
out
inc
es
in
inc
sar
xor
add
inc
cld
jmp
je
cmp
jmp
push
call
je
mov
jmp
fdiv
cdq
js
aam
gs
les
(bad)
in
push
imul
cmp
xchg
mov
call
jae
lahf
xchg
xor
call
sbb
or
push
xor
out
xchg
punpckhwd
adc
mov
xor
in
inc
jmp
mov
loopne
daa
in
mov
outs
stc
adc
nop
xchg
adc
mov
in
xchg
icebp
dec
imul
adc
clc
rol
inc
fild
push
out
ja
adc
mov
jp
out
xchg
mov
cmp
mov
mov
sbb
es
pop
jmp
outs
adc
push
(bad)
enter
xchg
retf
mov
jp
pop
call
adc
imul
repz
std
xchg
retf
xchg
js
xrelease
clc
cmp
xchg
fcom
cmp
not
fwait
xchg
and
pusha
jns
mov
clc
xor
clc
and
xchg
xchg
inc
sbb
jns
pop
xor
or
jns
inc
pusha
sbb
jns
call
or
push
xchg
xchg
inc
imul
sub
daa
into
xor
inc
dec
pop
call
jle
add
gs
lods
xchg
jmp
push
call
jge
lahf
gs
jl
xchg
gs
cmp
or
call
repz
gs
jmp
and
inc
adc
shl
clc
aam
mov
scas
repnz
mov
scas
sbb
xchg
call
mov
clc
scas
imul
and
fidivr
jmp
inc
fnstcw
jae
(bad)
ins
adc
idiv
push
sub
clc
mov
out
ins
mov
sbb
and
js
mov
cmp
dec
(bad)
dec
call
rol
mov
(bad)
xor
clc
sar
ret
loopne
call
sahf
fs
js
mov
scas
jnp
inc
imul
and
inc
dec
push
and
sbb
cdq
clc
jp
jnp
(bad)
addr16
inc
jnp
lods
gs
mov
mov
das
call
imul
jle
clc
fnstenv
sbb
ret
mul
sar
sbb
(bad)
push
jno
and
js
push
lea
rcr
mov
mov
arpl
mov
mov
mov
cmp
fwait
push
jno
inc
mov
adc
cmp
jecxz
jno
sub
jb
push
cli
mov
xchg
ds
mov
retf
add
bound
mov
nop
xor
jno
dec
lods
mov
xchg
(bad)
mov
aam
dec
js
inc
cmps
mov
out
loop
mov
dec
xor
jno
or
mov
stos
xor
lea
clc
sub
cmps
inc
mov
cmc
mov
xor
clc
jb
cmps
scas
pop
mov
mov
stos
ret
mov
loopne
cld
jb
cmp
push
fimul
js
add
push
popw
fadd
xchg
jecxz
inc
aaa
pminsw
lahf
or
rcr
gs
ret
dec
pushf
gs
out
add
add
cmp
fmul
adc
push
fisubr
inc
mov
in
mov
scas
lahf
out
pop
cs
mov
clc
dec
adc
fldenv
js
in
sbb
in
pop
dec
(bad)
(bad)
jnp
or
aad
pop
jb
js
sar
xchg
xor
xchg
add
add
mov
mov
clc
push
jne
test
mov
clc
adc
cli
dec
or
clc
dec
mov
int
mov
js
in
xchg
xor
cmp
cmp
add
retf
xchg
lds
test
(bad)
mov
sbb
xchg
and
xchg
lock
jnp
cmps
scas
xchg
xchg
stos
pop
xchg
hlt
shl
xor
mov
jmp
or
dec
xor
in
dec
add
idiv
mov
cdq
clc
lds
gs
rcl
mov
inc
cld
fldcw
jp
pop
sub
call
fsubp
lds
push
les
jle
mul
sbb
int3
fwait
gs
push
ja
cdq
clc
mov
push
cmp
cdq
js
and
inc
xchg
cmp
gs
enter
lds
stc
or
pop
dec
add
ss
pop
rcr
adc
(bad)
sub
clc
aam
in
out
xchg
inc
jbe
xor
adc
sub
cmp
addr16
ds
fld
(bad)
xchg
ds
add
pop
add
mov
js
in
pusha
add
out
mov
inc
add
mov
cmp
arpl
and
add
out
inc
dec
(bad)
mov
cmp
rol
in
dec
adc
and
dec
xor
rol
push
(bad)
adc
sub
je
ds
out
push
bnd
mov
cmp
jmp
push
mov
mov
push
push
push
bts
adc
push
sub
mov
jmp
push
ror
std
outs
cmp
aas
std
jno
or
sub
adc
xor
cdq
clc
cld
cmps
aad
xchg
add
cmp
test
sub
call
neg
add
gs
mov
cs
test
push
adc
sbb
in
cmp
shl
cmps
jp
mov
mov
icebp
fxch
gs
or
push
pop
outs
scas
call
xor
adc
in
jp
sub
clc
faddp
lock
sub
out
ds
sbb
js
aas
xor
inc
sbb
int
test
mov
mov
js
cld
mov
(bad)
cmc
(bad)
out
ret
sbb
mov
clc
mov
mov
inc
sub
jmp
in
pushf
cdq
js
rcl
gs
push
mov
mov
jb
mov
cmp
dec
mov
jmp
xchg
cmp
call
test
call
xchg
rol
push
lods
cdq
clc
add
sub
call
popf
mov
jecxz
pop
leave
xchg
xchg
in
js
fwait
xor
neg
xchg
ficomp
aad
retf
pop
idiv
loop
mov
js
cmp
pop
xchg
aaa
mov
push
call
jne
pop
xchg
pushf
addr16
dec
test
stos
and
pop
mov
push
call
addr16
out
gs
jecxz
push
call
xchg
sbb
xchg
gs
cld
js
call
xor
mov
scas
clc
in
call
nop
xlat
call
push
cmp
ins
mov
cdq
js
ret
mov
mov
pop
mov
gs
cmp
inc
jg
sbb
xchg
cmc
call
lock
js
xchg
cmps
gs
mov
inc
xchg
pop
loopne
inc
cdq
js
jnp
gs
gs
(bad)
popw
xchg
ja
call
lock
push
(bad)
popa
call
adc
retf
pop
pop
fild
call
dec
imul
cmp
xchg
leave
push
gs
popa
mov
gs
gs
mov
rol
inc
scas
gs
pop
call
test
mov
daa
push
mov
push
xor
gs
pushw
mov
jbe
js
sub
jge
inc
in
dec
gs
pop
jg
cdq
js
in
or
inc
jecxz
icebp
popw
daa
mov
sbb
js
loop
gs
(bad)
pop
push
(bad)
call
gs
test
mov
setp
cmp
rcr
xchg
sbb
mov
clc
and
and
aad
jmp
xchg
mov
pop
cdq
js
mov
gs
test
jne
gs
not
pop
cdq
js
dec
and
inc
jp
fldenv
xchg
mov
packuswb
gs
inc
retf
jne
(bad)
lea
pop
adc
adc
call
cld
cmps
mov
xchg
aaa
popa
call
sbb
jp
mov
cmp
rcl
pop
mov
xchg
call
pushf
ins
call
outs
mov
lahf
nop
sbb
adc
movs
call
pop
pop
mov
aas
sbb
add
pop
jge
ins
cdq
js
rcl
gs
(bad)
out
popw
and
adc
mov
shl
mov
daa
scas
call
ficom
cdq
clc
int3
xchg
ss
sub
ficomp
gs
mov
in
call
retf
pop
or
loope
push
mov
sbb
js
jmp
xchg
mov
jno
fld
mov
push
xchg
call
inc
call
mov
dec
cmp
xchg
cmp
push
bound
fs
xchg
clc
loopne
jb
pop
xor
cmps
xchg
clc
movs
aam
push
push
pop
addr16
xchg
clc
inc
jmp
stc
xchg
sbb
mov
js
sbb
push
push
clc
lods
add
rcl
push
pop
icebp
pop
pusha
xchg
js
cmp
(bad)
jmp
cmp
retf
hlt
(bad)
xchg
mov
div
jle
xchg
mov
js
fucom
sti
push
dec
xchg
clc
es
push
push
cmp
sub
xchg
clc
pop
imul
jns
dec
xchg
cmp
xchg
clc
mov
mov
push
sbb
xchg
jmp
jle
push
mov
js
aad
push
imul
or
xchg
mov
mov
js
mov
push
imul
cwde
mov
cdq
or
imul
imul
xchg
cmp
cmp
sub
mov
aas
std
jno
sbb
dec
and
cmp
jle
push
aam
mov
out
sahf
std
inc
xor
sub
outs
push
cmp
sbb
add
cmp
jmp
pop
fimul
mov
dec
je
sub
cmp
cmc
mov
cmp
jmp
push
ret
add
sub
outs
data16
sub
or
cdq
js
lds
aam
jl
clc
fdiv
and
mov
sbb
call
xor
ins
dec
xchg
ins
cdq
js
cmp
gs
shr
cdq
pop
call
push
mov
sub
push
in
xchg
add
popa
call
pop
call
je
call
mov
call
xchg
cdq
clc
popa
adc
mov
call
add
mov
xchg
popf
mov
dec
dec
cdq
js
mov
(bad)
mov
cmps
popw
stc
push
mov
js
retf
gs
inc
icebp
xchg
arpl
cdq
clc
adc
jnp
inc
sub
call
or
lock
stos
cdq
js
jns
mov
inc
test
pop
popw
mov
call
fiadd
xchg
clc
call
sub
dec
jecxz
cmp
cmp
add
and
sbb
sub
pop
xlat
(bad)
call
mov
nop
popw
adc
xchg
cdq
clc
retf
cli
gs
bound
xchg
gs
dec
data16
pop
cmps
or
push
push
call
cs
inc
icebp
xchg
outs
stc
mov
xor
fldenv
gs
push
dec
mov
call
jo
outs
stc
or
cdq
clc
cwde
xor
call
push
clc
fs
lea
mov
pop
call
cdq
js
xor
and
popw
loopne
and
adc
gs
jbe
gs
inc
and
call
xchg
gs
data16
cdq
js
inc
adc
sbb
gs
fistp
cdq
js
xchg
call
ror
pop
cmp
call
jnp
xchg
xchg
call
or
xchg
mov
call
pop
out
nop
push
lea
xchg
xchg
mov
movs
inc
ficomp
stc
stos
rcr
clc
js
cdq
js
les
inc
ret
gs
mov
jo
(bad)
mov
gs
cmp
xor
ss
out
sti
or
clc
dec
movs
gs
rcr
(bad)
popw
cld
mov
cdq
clc
js
jo
inc
in
jmp
call
gs
gs
sub
gs
or
call
xchg
out
call
adc
mov
call
adc
mov
mov
mov
clc
pop
js
xchg
fistp
gs
jo
pop
gs
in
(bad)
adc
push
mov
call
adc
in
scas
stc
and
gs
out
ins
mov
xchg
fs
mov
push
xchg
mov
cmps
mov
out
stc
dec
jge
clc
and
or
aas
call
dec
push
sub
gs
stos
lods
sbb
mov
leave
xor
js
fidivr
push
gs
push
(bad)
arpl
mov
popa
aas
and
sbb
jmp
jmp
gs
push
push
push
mov
xor
movs
sub
gs
movs
dec
jl
pop
(bad)
jnp
call
fdivrp
or
cdq
clc
sbb
and
es
or
stos
cli
call
jmp
cwde
bound
xchg
(bad)
lods
dec
call
(bad)
inc
xchg
inc
cmp
jg
mov
popa
pop
or
cmc
int
gs
push
(bad)
mov
xor
add
xor
jl
pop
(bad)
in
call
leave
repnz
es
push
inc
pop
push
push
(bad)
iret
iret
cmp
cmp
lock
icebp
cmp
test
push
mov
pop
icebp
mov
js
jle
push
inc
push
mov
jle
icebp
clc
xor
push
inc
xchg
fbld
orps
gs
dec
cmp
outs
cdq
js
sub
gs
repz
pop
inc
fs
js
rcl
popw
add
xor
in
js
lds
gs
rcr
gs
cld
pop
js
pop
stos
ficomp
call
pop
rcr
cdq
clc
bound
mov
and
and
gs
sub
ins
in
call
test
cmp
pop
out
push
call
mov
out
adc
xchg
in
call
add
mov
clc
mov
inc
sbb
call
repnz
inc
gs
or
pop
gs
xchg
xchg
cli
xchg
sbb
or
sub
js
adc
outs
and
push
aaa
jmp
call
xchg
xchg
dec
call
mov
call
icebp
gs
gs
clc
gs
cmc
addr16
call
xchg
sbb
test
loop
es
push
hlt
out
xchg
jno
rol
sbb
(bad)
(bad)
jnp
pop
scas
aam
cdq
clc
rol
dec
gs
jl
scas
cld
clc
and
inc
mov
xchg
pop
call
(bad)
lods
pop
call
dec
call
pop
(bad)
enter
aas
cmp
call
cs
gs
fmul
sbb
inc
mov
dec
sbb
mov
pop
push
or
enter
pop
xor
inc
lods
fbld
and
mov
clc
cdq
dec
leave
inc
mov
(bad)
inc
(bad)
jo
pop
pop
sahf
push
cdq
mov
xchg
mov
cmc
jo
inc
test
push
gs
enter
sub
mov
sti
nop
cdq
mov
jmp
not
pop
fdivr
sbb
scas
pop
rcr
clc
cmp
clc
adc
retf
jle
xchg
fcomp
cmp
xor
sbb
iret
loopne
js
(bad)
aad
ror
gs
call
js
push
push
inc
test
jp
pop
sti
out
push
psubusb
xchg
cdq
cmp
xor
cdq
mov
clc
mov
sbb
mov
sbb
call
stos
and
add
cmp
cdq
cmp
lds
inc
loopne
gs
mov
call
inc
add
cdq
mov
clc
ret
add
cmp
adc
jns
(bad)
adc
inc
jmp
ins
stc
or
inc
in
ret
addr16
jb
mov
mov
sbb
call
add
inc
cmp
lods
mov
or
inc
ss
jae
aas
popw
xlat
jnp
cdq
mov
cmp
aas
icebp
mov
xchg
cmp
mov
int
in
sti
mov
call
pop
push
data16
loop
pusha
inc
fisub
gs
lea
call
cmp
or
cdq
mov
clc
cmp
inc
inc
and
xchg
adc
clc
xchg
cdq
cmp
arpl
call
sub
popw
stos
xchg
cdq
js
or
jne
data16
sbb
inc
popw
scas
cmp
cdq
clc
mov
add
sahf
adc
(bad)
pop
rcl
mov
pop
cmp
les
inc
adc
xchg
xchg
aaa
xchg
ret
cmp
js
clc
nop
inc
enter
inc
cmp
dec
popw
mov
inc
sbb
push
data16
sub
shr
jmp
imul
stc
cmp
jmp
adc
and
sub
dec
inc
fild
in
add
clc
or
movs
gs
xor
gs
ficom
popw
enter
js
xchg
fsub
pop
aas
aad
pop
xchg
add
mul
gs
push
gs
out
test
pop
mov
sub
clc
jo
adc
jno
gs
out
popw
pusha
cmp
mov
clc
add
gs
fucomp
adc
aas
out
xchg
inc
(bad)
xor
call
cmp
push
mov
mov
clc
call
and
int3
dec
call
idiv
pop
loope
adc
js
mov
gs
cs
cld
gs
xchg
jl
cmp
jle
clc
(bad)
scas
stc
push
outs
call
jae
gs
test
(bad)
loopne
(bad)
addr16
gs
xor
sbb
test
call
cmp
cmc
sbb
inc
dec
movs
popw
jns
les
call
pop
bound
xchg
call
loopne
cmp
movs
call
shr
call
rcl
loopne
js
and
sbb
cmp
loop
call
outs
jp
gs
push
nop
ds
mov
inc
inc
call
and
pop
xchg
lea
mov
clc
imul
gs
movs
ins
xlat
gs
sub
push
cmps
call
push
pop
lea
fs
popa
gs
lods
ins
push
gs
ds
mov
pop
shr
dec
jecxz
add
add
test
sub
clc
cmp
shr
lea
test
mov
cmp
add
jmp
adc
jle
(bad)
and
sub
mov
cmc
shl
test
add
jmp
jae
cmp
jmp
fidiv
les
inc
and
sub
clc
repnz
xchg
gs
loop
push
call
mov
fstp
gs
aam
aas
gs
lock
gs
sbb
loopne
pop
sub
(bad)
pop
gs
test
xchg
jne
call
pop
in
push
or
in
push
cld
sbb
cmp
sbb
inc
xchg
push
sbb
imul
in
lds
sbb
mov
js
cld
xchg
(bad)
fldenv
dec
out
loop
lods
sbb
mov
clc
mov
sub
sbb
clc
jmp
jae
mov
cmc
movzx
test
shl
shl
test
clc
or
movsx
inc
mov
clc
cmp
test
shr
imul
test
cmp
jmp
enter
mov
lock
gs
std
push
jno
pop
mov
rcr
call
inc
into
rcr
xchg
call
call
test
out
stc
sub
clc
cdq
jge
gs
popa
push
push
call
test
and
inc
add
sub
inc
pop
jbe
push
inc
outs
sbb
pop
out
aad
clc
mov
pop
push
(bad)
leave
xchg
es
fdivrp
call
clc
mov
xchg
gs
dec
inc
call
cmps
cmp
add
addr16
adc
cmp
pop
xchg
cdq
js
xchg
gs
cli
push
or
pop
stc
call
cli
das
cdq
js
add
inc
mov
pop
or
call
jecxz
xchg
gs
xlat
xor
dec
and
call
mov
or
xchg
sahf
pop
call
push
(bad)
out
gs
or
inc
and
xchg
jns
call
pop
push
icebp
gs
pop
jns
gs
cmps
dec
cmp
je
add
cmc
jmp
push
(bad)
adc
and
dec
pop
sub
sub
sub
cmp
sub
cmp
cmc
cmp
lea
sub
mov
jne
mov
test
cmc
clc
cmp
jmp
test
je
cmp
jmp
mov
lock
mov
push
call
mov
test
cdq
clc
inc
sbb
cmp
call
xor
push
gs
and
call
out
cdq
adc
js
fisubr
mov
xchg
loopne
cmp
stc
or
gs
xor
loop
xchg
call
movs
jnp
mov
adc
or
or
in
push
jo
call
sub
call
fdivr
js
dec
shl
int
call
sbb
clc
hlt
mov
add
js
inc
push
xchg
rol
icebp
js
or
push
outs
push
xchg
mov
mov
mov
fld
(bad)
test
add
js
dec
mov
retf
push
(bad)
mov
dec
sub
js
pop
jnp
(bad)
stc
push
(bad)
pushf
enter
scas
or
pop
jmp
fdivr
icebp
cmp
int
js
shl
xchg
pop
test
push
retf
add
ss
inc
mov
call
xor
push
(bad)
icebp
aam
push
(bad)
and
dec
mov
push
xchg
std
xchg
stos
or
icebp
mov
mov
cmp
mov
js
push
out
pop
mov
ja
push
(bad)
jae
or
cmp
imul
(bad)
out
push
inc
(bad)
mov
call
out
sbb
cmp
icebp
js
and
add
loope
icebp
js
dec
or
icebp
mov
clc
pop
cmpxchg
inc
xchg
loope
(bad)
jnp
adc
inc
std
cld
sti
push
adc
or
cmp
fisttp
(bad)
jae
fimul
repnz
fidivr
(bad)
stos
mov
adc
icebp
idiv
jbe
push
fistp
pop
iret
test
jge
xchg
push
sti
jp
pushf
add
lock
cmp
pop
jp
test
les
test
shl
xchg
cmp
jp
clc
jo
jp
aad
inc
jp
lahf
push
mov
call
out
test
nop
data16
(bad)
(bad)
dec
jp
fdiv
clc
adc
test
push
retf
les
jg
jns
(bad)
sar
inc
xchg
cmp
adc
push
mov
js
cmp
xchg
mov
ror
pop
imul
mov
gs
and
ret
gs
adc
call
hlt
jl
gs
loope
mov
sbb
rcr
call
push
outs
clc
xchg
and
gs
xchg
bound
gs
neg
cdq
clc
das
pop
pop
gs
loope
cs
popf
iret
call
dec
not
push
fwait
jmp
dec
scas
xor
(bad)
cs
stos
cli
or
pop
cdq
js
inc
and
jae
fsub
(bad)
and
call
jmp
shl
outs
xchg
cwde
jecxz
call
xchg
hlt
gs
sub
pop
(bad)
gs
outs
out
gs
dec
mov
mov
sub
call
retf
inc
sub
xchg
adc
adc
outs
xor
cwde
test
gs
pop
ja
add
jmp
clc
(bad)
dec
gs
(bad)
call
inc
pop
mov
cmp
mov
push
push
gs
pop
sbb
push
enter
jmp
call
xchg
enter
dec
jp
xchg
aaa
cli
nop
push
imul
(bad)
popf
add
or
popw
xchg
paddsb
cmp
movd
push
out
xchg
out
pop
call
ror
gs
in
mov
xchg
mov
or
inc
jno
cmp
jmp
out
adc
popf
clc
retf
mov
xchg
and
icebp
sahf
clc
(bad)
jp
popa
(bad)
leave
jae
sti
and
popf
clc
nop
mov
jle
cld
popa
(bad)
iret
mov
push
sahf
js
mov
popa
inc
punpckldq
clc
jne
out
(bad)
dec
nop
(bad)
bound
sbb
jmp
js
sub
inc
add
test
jo
sahf
mov
mov
clc
add
xchg
bound
mov
clc
push
clc
pop
popa
inc
mov
sbb
sub
sbb
sahf
cmp
movs
popf
js
xchg
mov
data16
and
jmp
jae
mov
sub
not
mov
sub
cmp
cmc
test
shr
add
cwd
mov
cdq
mov
jmp
mov
pop
jmp
or
add
repz
ds
mov
jmp
push
(bad)
adc
sub
dec
xor
(bad)
adc
or
jno
pop
mov
pop
jmp
sub
cld
xchg
xor
call
add
lods
gs
and
es
dec
mov
fwait
retf
add
pop
gs
add
and
stc
push
out
stc
and
call
sbb
gs
cli
call
or
jb
xchg
call
add
pop
xchg
shr
inc
cdq
js
clc
pop
xchg
out
gs
mov
stc
sub
call
cmp
gs
push
mov
in
call
dec
aas
cdq
clc
xchg
gs
out
xchg
cld
dec
gs
pushf
sahf
xchg
mov
lahf
gs
add
scas
xor
call
cmp
out
cdq
clc
lods
cmc
jg
xchg
cld
rcr
aas
in
(bad)
and
gs
and
cdq
js
aaa
gs
scas
push
imul
in
jmp
gs
sbb
inc
dec
gs
(bad)
inc
neg
gs
xchg
xchg
scas
xchg
imul
gs
dec
mov
gs
push
test
mov
call
add
imul
mov
clc
pop
lock
in
inc
add
ss
xchg
call
push
mov
lea
stc
cmc
push
shr
xor
shl
mov
test
jmp
cmp
leave
push
gs
ins
outs
cwde
gs
pop
jge
gs
scas
and
popw
mov
cli
(bad)
loopne
inc
dec
jbe
gs
loop
push
call
mov
lahf
gs
fwait
ret
je
xchg
add
jmp
pop
stos
sahf
xchg
call
cmps
gs
outs
loopne
gs
dec
push
dec
jbe
clc
sub
and
or
out
cmp
in
sbb
cmp
test
mov
(bad)
jne
out
(bad)
icebp
push
sbb
data16
in
mov
and
jecxz
xchg
jae
sbb
jb
mov
inc
in
inc
addr16
inc
mov
add
cmps
sbb
xchg
fxam
inc
xchg
mov
out
pop
or
cmp
lea
clc
cmc
cmp
jmp
jns
cdq
js
ja
gs
repz
xor
jae
mov
gs
das
cmps
inc
gs
es
gs
push
aam
call
push
je
call
adc
adc
fs
call
pushf
cdq
clc
jne
gs
call
popw
lds
xor
arpl
repnz
inc
cmp
gs
stc
mov
sbb
(bad)
sub
and
gs
test
dec
xchg
cdq
js
rol
gs
jp
gs
jno
sti
gs
pop
push
and
inc
pop
call
js
pop
out
inc
sbb
popw
fstp
call
dec
test
call
jl
gs
jo
mov
imul
gs
jns
pop
popw
pop
add
call
hlt
test
test
cmp
js
loop
gs
data16
call
mov
push
jl
pop
fdivr
inc
cdq
js
push
cmp
shl
push
mov
call
lock
xchg
sub
sub
mov
shr
sub
stc
clc
cmp
jmp
sbb
cmp
gs
sub
fild
pop
inc
ret
cmp
sub
call
mov
jmp
dec
jno
call
lds
movs
rol
cmp
(bad)
sbb
jl
call
loope
gs
bswap
in
pop
popf
jg
call
xor
pop
pop
add
call
aaa
scas
gs
or
stc
gs
lods
(bad)
mov
xchg
add
(bad)
and
icebp
cmp
inc
sbb
hlt
in
cdq
clc
(bad)
push
xchg
(bad)
and
call
call
xchg
inc
popw
mov
cmp
jbe
call
sbb
jle
inc
mov
sbb
gs
in
fstp
call
jg
xor
call
int3
imul
inc
es
xchg
sbb
call
aad
jmp
xchg
not
push
cdq
clc
xor
cmp
inc
pop
pop
movs
xchg
sub
call
add
mov
clc
shl
stc
cmp
shl
cmp
test
or
cmovae
inc
btc
sar
mov
rcr
sar
mov
shr
stc
imul
test
cmp
jmp
cdq
popa
call
mov
(bad)
gs
push
fistp
pop
inc
sbb
call
lods
xchg
in
pop
xor
adc
gs
pop
aad
gs
push
mov
mov
call
fdivp
js
or
push
inc
xor
loop
(bad)
xor
push
xchg
stc
push
icebp
mov
clc
dec
or
or
mov
clc
dec
out
push
mov
les
cmp
mov
mov
je
adc
ss
jo
jge
mov
adc
mov
in
sti
in
ja
xlat
adc
mov
push
adc
mov
xchg
cli
mov
cmp
ja
(bad)
jmp
mov
xor
dec
je
sbb
sbb
mov
mov
mov
mov
js
cmp
mov
pop
in
cmp
fidiv
push
ss
aam
push
je
push
jae
mov
mov
clc
aas
xchg
lock
adc
mov
or
push
mov
sub
imul
nop
jmp
shl
pop
dec
adc
les
movs
popf
int
pop
or
jno
gs
gs
mov
mov
pop
push
call
call
jecxz
retf
pop
push
(bad)
mov
fimul
push
jae
lea
js
ffreep
cli
mov
clc
lods
ror
lea
sub
jb
call
xchg
sub
clc
push
fsubr
mov
bound
jno
(bad)
scas
mov
je
pop
loop
lods
jno
data16
(bad)
fbld
xchg
jno
retf
and
sbb
mov
es
jno
mov
mov
mov
and
xchg
jno
xchg
adc
dec
inc
mov
sub
mov
inc
fidiv
mov
(bad)
and
mov
pop
rcl
adc
lea
mov
xchg
sub
sti
add
inc
mov
ss
mov
in
pop
mov
or
mov
jno
mov
aaa
add
rol
mov
hlt
pushf
and
mov
cmp
sub
aad
inc
add
mov
jno
jns
repz
xlat
push
mov
cmp
mov
mov
je
jne
pop
out
dec
jb
das
jno
mov
popa
leave
lea
mov
jge
shl
jae
mov
cmp
jmp
and
cwde
call
mov
pop
or
gs
mov
mov
clc
sub
gs
jle
xchg
gs
arpl
push
pushf
es
sub
(bad)
imul
call
mov
push
adc
hlt
call
js
repnz
inc
shl
pop
gs
es
gs
mov
dec
pop
sub
shl
cmc
pop
call
mov
sub
inc
daa
call
clc
ror
pop
push
ret
clc
jl
std
gs
xor
cli
mov
pop
dec
retf
adc
call
dec
mov
gs
xchg
std
lahf
fcomp
(bad)
addr16
popw
mov
cmps
add
aad
add
push
xchg
dec
push
xchg
mov
pushf
xchg
cmp
mov
xchg
js
dec
push
jge
inc
xchg
clc
sub
cmp
popf
push
push
pop
imul
(bad)
mov
popf
imul
mov
xchg
mov
clc
ror
xchg
clc
rcl
push
sbb
call
xchg
adc
push
inc
sbb
push
push
fldl2e
imul
jmp
sbb
xchg
js
fld
push
mov
(bad)
push
sbb
fsubr
out
pop
add
je
pop
xlat
lods
xchg
mov
js
push
push
push
mov
push
loopne
push
es
imul
clc
xor
push
inc
in
push
lods
stos
xor
mov
not
(bad)
jnp
jo
pop
adc
or
loopne
push
hlt
(bad)
sbb
or
sub
mov
push
xchg
js
or
and
push
fist
xchg
mov
js
out
jmp
(bad)
out
les
cwde
fs
stos
(bad)
imul
xor
call
mov
mov
call
jo
xchg
gs
push
mov
push
jl
mov
or
clc
sbb
adc
sub
adc
add
xchg
call
cdq
clc
clc
lock
inc
shl
or
inc
and
sahf
rol
(bad)
adc
call
jo
gs
and
retf
gs
popf
push
adc
pop
sub
dec
cdq
js
mov
gs
mov
jg
test
call
push
outs
mov
(bad)
jae
jl
xchg
fwait
call
neg
jmp
or
call
ret
call
scas
hlt
ss
jb
adc
adc
cmp
push
call
mov
cmps
es
cwde
cmp
call
or
xchg
pop
call
push
jle
xchg
jge
pop
call
nop
popw
jns
cdq
js
out
sbb
(bad)
shl
iret
mov
ds
in
xor
ins
pop
mov
xchg
lea
(bad)
mov
scas
(bad)
push
xchg
mov
inc
(bad)
imul
sbb
xchg
mov
xor
mov
xchg
cmp
or
outs
(bad)
mov
jmp
xchg
mov
cmp
mov
and
sub
push
xchg
clc
and
fld
mov
in
outs
inc
jle
shr
arpl
outs
pop
and
mov
outs
inc
lea
ret
mov
mov
js
pop
xor
gs
(bad)
ins
xchg
sbb
xchg
mov
mov
and
xchg
test
mov
cmp
or
or
gs
movs
cmps
mov
xchg
mov
gs
pop
rol
pop
push
or
call
mov
jo
mov
cmp
mov
in
(bad)
dec
ficom
in
pop
pop
adc
mov
js
push
retf
in
inc
imul
pop
lahf
xor
adc
mov
js
xchg
dec
in
(bad)
stos
push
test
xchg
mov
popf
mov
dec
in
inc
jb
cmp
jmp
call
test
jmp
or
add
repz
ds
dec
adc
out
(bad)
call
mov
sub
inc
scas
and
and
add
mov
cmp
pop
sbb
xchg
sbb
xchg
pop
test
sbb
call
ss
adc
mov
mov
dec
call
jp
ja
clc
sub
xchg
gs
mov
gs
shr
mov
mov
sbb
call
mov
add
js
imul
pop
jl
repz
outs
and
gs
mov
push
mov
xchg
push
call
cmp
sbb
(bad)
aad
xchg
fs
outs
stc
add
call
jb
gs
pop
and
push
jmp
cmp
push
or
aam
pop
xchg
in
xor
mov
pop
cmp
xchg
cmp
(bad)
jno
mov
jb
cmpxchg
mov
jno
stc
push
fnsave
test
jno
jne
ss
jmp
mov
repz
lea
jb
jno
adc
xor
jle
mov
fadd
mov
jmp
jb
mov
test
jno
in
or
fnstsw
mov
adc
dec
lea
neg
jno
xor
inc
jno
add
ss
fisub
sti
lea
mov
mov
clc
fwait
mov
sbb
jno
add
jno
sub
stc
cmp
sub
xor
mov
shr
cmp
test
stc
sub
mov
cmovo
inc
test
lea
shr
shl
movzx
cmp
jmp
out
cdq
js
ret
(bad)
ja
and
pop
adc
adc
mov
cmp
inc
test
xchg
xor
cmp
gs
cmps
mov
js
out
gs
mov
jmp
sub
gs
xor
sti
push
call
sub
aaa
(bad)
js
popw
aad
enter
jle
cdq
js
rep
das
cmps
sbb
(bad)
mov
je
xchg
aas
ss
cmp
and
out
add
mov
gs
shr
js
jbe
inc
aad
xchg
cdq
pop
mov
gs
js
pop
call
mov
gs
rcr
gs
ins
mul
push
iretw
call
rcl
cmp
data16
iret
jnp
inc
loope
xchg
gs
mov
js
add
call
xor
shl
push
cmp
gs
clc
push
push
jmp
sub
sub
xchg
bsf
mov
test
shr
test
sub
cmp
mov
adc
mov
jmp
push
cdq
clc
xor
in
pop
dec
iret
inc
call
outs
dec
nop
call
mov
adc
fsub
repnz
enter
pop
clc
nop
leave
call
xchg
mov
cdq
js
ret
inc
and
stc
ror
clc
mov
gs
jge
mul
popf
aaa
call
xor
push
int3
mov
(bad)
cld
imul
addr16
cdq
clc
add
mov
shr
inc
call
and
gs
jmp
push
popw
cmc
sahf
call
shl
jmp
adc
xchg
add
mov
gs
out
out
cdq
js
push
gs
mov
fs
mov
lds
(bad)
fnstsw
cmp
inc
aad
pusha
lahf
clc
mov
or
xchg
pushf
js
outs
push
push
retf
(bad)
or
lea
lahf
cmp
scas
cmp
adc
cmp
mov
stc
jb
lahf
mov
js
mov
lahf
mov
cmp
stos
les
jge
pusha
xchg
lahf
cmp
inc
lahf
cmp
ins
xchg
pushf
clc
or
and
pop
iret
retf
mov
cmc
ja
lahf
cmp
or
inc
push
lahf
mov
js
mov
add
inc
outs
in
xchg
add
lahf
cmp
pop
push
jbe
pushf
js
push
pusha
pop
dec
das
mov
clc
mov
stc
jno
pusha
(bad)
ror
pusha
inc
mov
data16
mov
pushf
js
mov
jmp
sti
and
pusha
xchg
jmp
cmp
fadd
inc
push
arpl
jne
mov
out
pusha
xchg
jns
cmp
adc
pusha
(bad)
in
addr16
(bad)
mov
xor
xor
popf
lahf
clc
jle
mov
fcomp
pushf
clc
aaa
pushf
imul
and
pusha
inc
jns
shl
pushw
pop
lahf
cmp
int
pushf
js
adc
inc
xor
pusha
inc
push
not
bts
mov
btr
sub
push
shr
rcl
add
push
inc
cwd
push
mov
shrd
mov
adc
dec
mov
xchg
btc
stc
mov
cmovne
shl
mov
mov
mov
btr
mov
clc
rcr
mov
mov
mov
mov
btr
mov
rcl
rcr
mov
mov
sbb
shl
shl
mov
mov
cmp
shl
jmp
cmc
sub
cmp
lea
test
cmp
cmc
mov
lea
test
cmc
test
cmp
movzx
bswap
setl
mov
ja
add
cmc
cmp
lea
sub
cmc
test
add
mov
jmp
jne
cmp
jmp
outs
retf
cdq
js
jb
gs
(bad)
jmp
gs
add
sub
cmp
call
ror
mov
mov
clc
sahf
xchg
test
sub
fcomp
xchg
call
outs
(bad)
push
and
das
inc
cdq
js
xchg
cmp
mov
aam
call
cmp
xor
mov
jne
xchg
call
ss
cdq
clc
jge
jmp
dec
call
add
pushf
call
xlat
lea
xchg
sbb
neg
gs
mov
lds
call
add
frstor
je
scas
fstp
mov
xchg
push
call
inc
mov
lods
sub
cdq
js
mov
gs
or
gs
cmps
ss
and
cmp
pop
ficomp
cdq
clc
sbb
test
mov
add
clc
and
(bad)
test
pushf
call
mov
adc
inc
xchg
xchg
(bad)
call
aaa
inc
adc
jbe
frstor
push
or
call
add
call
das
daa
lods
gs
adc
push
mov
aaa
pop
call
inc
call
add
gs
mov
jg
imul
js
push
les
daa
mov
nop
mov
nop
mov
clc
shr
outs
pop
sbb
nop
cmp
rol
outs
(bad)
push
clc
ins
xchg
dec
mov
jno
xchg
sub
cmp
outs
xchg
mov
mov
cmp
inc
push
into
outs
inc
xor
int
pop
les
clc
les
outs
(bad)
icebp
xlat
stos
ins
xchg
popf
push
nop
mov
mov
js
or
outs
(bad)
push
in
ins
xchg
sbb
jmp
addr16
rep
xchg
(bad)
hlt
jo
clc
cs
outs
(bad)
sbb
add
imul
cs
cmp
or
leave
jmp
push
(bad)
adc
and
je
fld
mov
jg
inc
cmp
cmc
mov
mov
shr
test
test
imul
cmp
jmp
(bad)
call
add
push
jne
gs
sar
gs
popa
repz
gs
cmp
jmp
gs
inc
ret
cmp
sub
iret
gs
add
adc
rcl
pop
repz
call
retf
sbb
push
pusha
out
mov
cmps
sbb
loopne
mov
clc
inc
mov
jne
sbb
mov
clc
sub
fwait
out
(bad)
mov
mov
sbb
jp
push
in
cwde
push
push
in
add
jmp
xchg
ja
sbb
bound
dec
sbb
mov
cmp
jae
cmp
jmp
push
call
int
cdq
clc
cmps
cld
in
xchg
rol
mov
clc
cmc
addr16
pop
sar
sub
imul
mov
(bad)
jmp
push
gs
repz
add
(bad)
sbb
xchg
xchg
out
imul
pop
xchg
call
cmp
call
xchg
jle
(bad)
aam
adc
test
dec
daa
sbb
call
in
push
sbb
jl
(bad)
inc
mov
and
add
js
outs
sub
inc
mov
stc
aas
and
js
mov
cdq
sbb
sub
clc
jno
push
out
xchg
sbb
mov
mov
js
lods
das
in
mov
mov
mov
cmps
fstp
clc
aam
out
xchg
xor
sbb
adc
gs
mov
gs
retf
call
out
pop
call
xor
xchg
cmp
call
jns
jp
cmp
dec
call
imul
call
xor
add
ror
retf
pop
mov
xor
out
add
out
cmp
cmp
rcr
jb
pop
mov
rcr
call
push
lods
outs
xchg
mov
call
adc
imul
mov
call
es
clc
jp
dec
gs
jnp
and
mov
int
stc
gs
dec
jno
gs
rcl
clc
lds
add
sbb
gs
xchg
aam
(bad)
cmp
clc
and
xchg
sub
retf
mov
push
mov
adc
or
mov
je
mov
mov
cmp
scas
mov
shl
mov
cmp
icebp
dec
je
cdq
into
ja
mov
in
mov
or
inc
xor
ja
movs
cmp
mov
lea
je
pop
and
shl
ja
sar
mov
adc
mov
scas
(bad)
mov
mov
clc
outs
popw
mov
in
mov
pmulhuw
dec
dec
xlat
mov
movs
cmp
ja
or
mov
popa
test
je
push
popf
mov
xlat
jbe
js
mov
dec
mov
mov
mov
clc
clc
movzx
cmc
shl
jmp
ret
add
cmp
test
test
je
cmp
jmp
sbb
and
add
gs
int3
xchg
sbb
gs
das
pop
icebp
gs
xchg
add
clc
lahf
test
xchg
sar
lea
mov
and
stc
or
call
out
push
std
xchg
ds
call
or
clc
sbb
xchg
call
mov
pop
jg
call
ins
popw
mov
cmp
call
and
jbe
gs
psubw
pop
int
call
cmp
inc
cmp
and
xchg
jmp
and
call
adc
out
call
jmp
gs
imul
neg
stc
mov
call
xor
clc
lds
jp
js
repnz
gs
daa
xor
push
daa
sahf
gs
outs
(bad)
gs
out
retf
pcmpgtw
or
xor
ret
call
mov
call
cli
cmp
pop
inc
popa
imul
jmp
mov
mov
js
add
xchg
push
mov
push
call
pminub
out
idiv
and
es
pop
gs
xchg
add
call
bnd
gs
iret
and
gs
xchg
adc
mov
lods
push
call
pop
add
add
jecxz
pop
sbb
clc
inc
inc
ins
out
and
push
daa
enter
inc
sbb
aad
jne
js
xchg
inc
ja
in
xor
arpl
clc
sbb
xchg
in
adc
jae
in
mov
in
(bad)
jb
js
jecxz
(bad)
mov
ffreep
xor
mov
mov
js
in
mov
cmc
out
stc
jb
sbb
xchg
sbb
or
in
push
movs
fwait
sbb
mov
xlat
mov
and
push
mov
inc
sbb
js
mov
dec
out
(bad)
cmp
sbb
out
dec
ja
push
ins
popa
(bad)
cmp
popa
inc
hlt
jmp
push
popa
xchg
xor
adc
xlat
ins
popa
pop
push
inc
popf
clc
mov
fidivr
sahf
mov
mov
fld
xchg
(bad)
sahf
mov
cmp
cmp
sahf
js
mov
movs
fwait
xchg
bound
dec
int
popa
(bad)
pop
inc
bound
mov
lods
mov
mov
clc
ret
bound
mov
clc
scas
add
popa
inc
imul
test
dec
popf
js
dec
push
popa
inc
xor
adc
fwait
(bad)
div
pop
movzx
movsx
lea
jmp
jae
sub
cmp
clc
test
test
jbe
lea
xor
test
sub
adc
mov
test
jmp
mov
rcl
mov
jmp
jmp
shl
jmp
push
mov
movzx
push
and
push
mov
stc
rcl
cmp
cmovb
not
mov
mov
jmp
add
inc
jb
gs
imul
mov
rcl
inc
mov
stc
cmp
test
shr
cmp
imul
cmp
jmp
mov
movsx
xchg
pop
jmp
lock
call
sti
jo
popw
lds
xchg
sub
sbb
and
mov
sahf
not
gs
cli
jb
gs
iret
and
gs
lods
sub
call
pushf
fisttp
xchg
cmp
push
or
adc
icebp
shl
pop
mov
adc
push
dec
add
out
mov
adc
(bad)
out
in
pop
les
lods
adc
shl
adc
js
jo
mov
inc
in
dec
pushf
adc
popf
pop
out
xchg
push
test
mov
js
sub
in
pop
xchg
xchg
cmp
and
in
test
adc
gs
pop
(bad)
mov
mov
movs
adc
outs
fstp
jle
jne
cdq
js
mov
cmp
cwde
retf
adc
imul
add
pop
gs
sub
and
cmp
mul
js
xchg
gs
mov
les
mov
xchg
clc
cdq
js
mov
and
gs
pop
(bad)
mov
cmp
or
gs
daa
fisttp
xchg
sub
call
inc
arpl
xchg
ret
loope
cdq
clc
aaa
pushf
xchg
loope
ret
jno
or
jae
mov
movzx
shl
clc
test
shl
cmp
or
inc
mov
cmp
stc
shr
stc
cmc
imul
jmp
lea
clc
cmp
stc
cmp
jmp
mov
jmp
jne
cmp
je
mov
pop
xor
shl
cmp
pop
sar
rcr
mov
shld
xor
pop
jmp
jne
mov
bswap
mov
cbw
mov
bswap
movsx
mov
mov
mov
jmp
sbb
adc
cmp
jle
adc
inc
bnd
cmp
jne
lea
not
cwd
mov
mov
movsx
cwde
cmovbe
mov
mov
jmp
push
call
or
shrd
cmp
sub
gs
fdivr
loop
outs
mov
cli
outs
inc
pop
inc
in
cdq
js
stc
in
inc
cmc
jge
gs
fdiv
stos
gs
xchg
adc
call
mov
inc
iret
or
xchg
add
test
gs
pop
push
rcr
adc
add
pop
ins
jo
cmp
fbstp
pop
xchg
cmp
lods
aaa
sbb
dec
lods
ins
pop
(bad)
jmp
inc
test
xchg
js
mov
inc
inc
dec
inc
outs
xchg
xchg
cmp
mov
aaa
mov
xchg
xchg
js
push
outs
xchg
mov
xchg
js
(bad)
cld
outs
pop
pop
ret
loope
cmp
jne
test
outs
xchg
jl
xchg
mov
clc
cmps
or
mov
ins
inc
enter
xchg
mov
inc
mov
ins
inc
xchg
loopne
ins
inc
pop
push
cdq
js
sbb
mov
gs
or
xor
gs
push
frstor
lods
gs
adc
sub
or
call
jmp
in
call
test
pop
gs
cmp
popw
retf
lahf
stos
call
inc
push
xchg
cwde
call
cmp
xor
mov
call
gs
jne
pop
call
pop
jae
mov
sbb
(bad)
movs
lahf
xchg
cmp
add
cdq
clc
xor
gs
push
int3
movs
gs
les
push
ja
xchg
cdq
js
dec
shl
shr
sub
test
cdq
js
rcr
aad
in
inc
cld
push
es
gs
xchg
cmp
outs
inc
(bad)
cmp
gs
pop
push
out
sti
dec
aad
js
adc
loope
pop
stos
mov
xchg
xchg
hlt
jbe
inc
out
pop
gs
push
out
clc
dec
push
pcmpgtw
repz
imul
call
movs
mov
push
data16
daa
(bad)
dec
call
cld
cmp
pop
scas
xchg
ret
loope
cdq
clc
aas
xchg
gs
aad
and
dec
dec
fbld
jbe
pop
call
add
enter
(bad)
lea
jmp
adc
jle
(bad)
adc
clc
data16
gs
jnp
ja
inc
outs
dec
ins
gs
mov
mov
out
call
pop
popa
push
gs
in
jg
call
mov
pushf
inc
gs
cwde
xor
gs
sub
cdq
clc
push
icebp
fcomp
clc
aas
pop
daa
xchg
bound
and
gs
jecxz
call
das
out
jne
clc
test
cmp
mov
clc
call
or
(bad)
gs
xchg
nop
cmp
popf
mov
call
cmps
inc
gs
jl
xchg
popw
inc
sbb
call
lea
mov
jno
gs
dec
lds
(bad)
push
mov
xchg
call
(bad)
loop
popw
ja
adc
aas
pop
gs
xchg
fsub
cmp
pop
xchg
out
call
jnp
xchg
pop
mov
js
dec
loopne
popf
mov
loopne
push
xchg
xor
pop
loopne
out
pop
js
add
xchg
out
sbb
mov
ss
jo
pop
mov
out
pop
cmp
inc
je
xchg
xchg
mov
scas
out
jl
cmp
je
je
inc
and
js
or
inc
arpl
xchg
sahf
sti
in
ja
lock
cmps
mov
push
iret
mov
(bad)
xchg
mov
cmp
jle
je
jp
inc
mov
mov
loope
out
je
mov
jecxz
cmp
je
inc
adc
mov
icebp
dec
je
(bad)
jecxz
je
inc
lea
je
sub
inc
dec
je
cli
push
sbb
je
jnp
push
iret
mov
loope
inc
lock
mov
jmp
inc
pusha
jecxz
inc
scas
outs
ror
ja
in
mov
mov
stos
outs
mov
inc
jmp
je
das
sub
mov
inc
mov
cmp
add
je
mov
jmp
or
adc
cmp
jb
cmp
dec
test
cmp
jmp
add
inc
outs
push
outs
imul
imul
clc
xor
add
or
mov
imul
or
add
pop
mov
mov
ss
leave
inc
jb
(bad)
ror
movs
xor
repz
popw
xor
dec
gs
nop
rcr
call
push
dec
jg
mov
xchg
mov
call
mov
push
and
adc
sbb
mov
clc
out
std
gs
cmp
add
popw
lea
call
cmp
gs
push
test
push
push
xchg
call
sbb
sahf
xchg
popf
loopne
mov
mov
mov
push
frstor
xchg
add
mov
ficom
gs
sar
mov
add
call
pop
aam
cdq
clc
pop
push
and
add
lods
mov
mov
xchg
xchg
fstp
mov
clc
pop
ds
js
(bad)
call
jne
jbe
clc
sahf
and
inc
retf
cmp
or
clc
sub
adc
inc
call
cmp
cmp
sbb
cmp
inc
call
mov
loope
gs
int
stos
gs
imul
cdq
js
jno
cli
jns
call
push
mov
gs
add
cdq
clc
push
sahf
push
mul
push
add
xchg
push
imul
gs
push
call
push
(bad)
adc
and
fwait
call
sub
call
sar
gs
push
ret
xchg
call
sbb
cmp
push
gs
inc
(bad)
repz
pop
sub
call
mov
xchg
xchg
pop
out
stc
mov
sbb
gs
jb
jns
xchg
out
int
js
cmp
sub
cmp
test
lahf
mov
js
push
pusha
(bad)
pop
int
pusha
inc
inc
in
xchg
push
lahf
clc
push
xor
pusha
inc
pop
shl
xchg
mov
cli
pusha
inc
pop
imul
lahf
mov
clc
sub
pusha
inc
mov
dec
inc
pusha
(bad)
ins
pminsw
imul
repnz
pushf
js
xor
(bad)
jb
dec
pusha
inc
dec
jae
mov
inc
les
pushf
clc
xchg
movs
arpl
push
(bad)
mov
mov
clc
adc
jle
mov
clc
inc
xor
pusha
(bad)
sbb
adc
and
neg
lahf
mov
clc
gs
adc
imul
clc
and
fsub
retf
pusha
inc
dec
dec
gs
xchg
out
mov
lds
gs
int
push
call
mov
(bad)
push
mov
jne
inc
(bad)
outs
gs
sub
mov
in
call
leave
xchg
xor
xchg
in
shl
call
sahf
jmp
mov
stc
xor
mov
cmp
push
adc
push
shr
loop
(bad)
lock
adc
cmp
out
xchg
cmp
adc
cmp
or
xchg
aaa
(bad)
test
push
je
mov
js
movs
xchg
(bad)
int
inc
and
or
js
outs
xchg
mov
xchg
test
test
(bad)
pop
or
or
dec
lea
js
adc
and
xchg
out
mov
test
cmc
int
js
ins
mov
xchg
sub
inc
jle
inc
test
mov
pusha
test
js
call
fild
jo
test
mov
mov
clc
sti
fdivp
test
cmp
rcr
in
push
ins
inc
pop
sbb
push
mov
and
imul
or
push
call
mov
cdq
js
mov
gs
xchg
stos
gs
scas
inc
mov
add
call
adc
jp
xchg
mov
mov
clc
imul
out
clc
pop
lea
popw
mov
lds
js
mov
ret
gs
jbe
aaa
call
(bad)
gs
out
sbb
cmp
push
call
mov
cdq
clc
and
pop
shl
push
push
and
xchg
ror
repz
gs
sbb
cmp
outs
push
cdq
clc
je
gs
jne
scas
rol
mov
pop
gs
mov
dec
mov
mov
ret
gs
pop
js
popw
xchg
nop
xor
call
sub
cli
(bad)
call
pop
addr16
mul
call
mov
stos
inc
push
gs
fcomp
call
jmp
lods
fistp
push
mov
gs
xchg
lds
mov
in
pop
aam
cdq
clc
add
sbb
(bad)
xchg
cmp
enter
and
enter
pop
mov
pop
jnp
addr16
repz
xchg
call
test
gs
xor
int3
xchg
sbb
mul
add
das
gs
cmp
js
clc
mov
cli
push
gs
sbb
call
rcr
inc
xor
fild
add
xacquire
mov
mov
cmp
xor
mov
js
hlt
jmp
js
add
inc
stos
pusha
mov
push
mov
js
add
inc
and
(bad)
icebp
inc
and
aas
repnz
add
push
mov
cmp
jmp
inc
or
repnz
push
pop
push
cmp
daa
push
clc
lea
icebp
inc
repnz
es
mov
cmp
fisttp
clc
dec
push
cmps
jg
mov
add
xchg
mov
inc
icebp
xchg
lods
out
js
in
adc
inc
test
jmp
jb
cmp
push
js
test
scas
or
icebp
(bad)
dec
mov
popf
icebp
xchg
(bad)
shl
out
dec
push
mov
mov
jge
xchg
xor
cmp
mov
stos
mov
xchg
ins
adc
xchg
and
out
cmp
adc
mov
js
loop
xchg
fild
add
addr16
xor
xchg
mov
scas
lahf
add
(bad)
dec
push
call
inc
std
(bad)
stc
jno
shl
jb
sbb
or
inc
lods
sbb
pop
ds
ss
clc
sbb
pop
mov
push
pop
mov
aad
push
mov
jo
jno
call
jno
sahf
call
jp
mov
clc
mov
stc
jno
retf
jno
scas
sub
sbb
mov
add
jno
cmp
or
inc
(bad)
icebp
mov
les
push
(bad)
jno
mov
(bad)
push
jno
cld
fldcw
sub
jne
out
jb
xchg
cmp
loope
mov
js
jecxz
jno
shl
stc
or
test
btc
movzx
jmp
hlt
cdq
call
not
ja
(bad)
xor
pop
hlt
call
loopne
sbb
pop
dec
fisub
cs
and
push
(bad)
xor
dec
or
call
sbb
sahf
arpl
push
jne
gs
imul
rcr
js
cli
mov
pop
jp
add
leave
gs
mov
daa
popw
mov
inc
call
xor
inc
jbe
sub
pop
mov
call
call
retf
mov
pusha
lahf
xchg
mov
xor
clc
inc
push
or
add
jmp
mov
clc
aaa
movs
pop
gs
and
call
outs
test
cmp
(bad)
sub
add
gs
out
dec
into
xchg
and
in
gs
cmps
addr16
gs
xor
rcr
gs
mov
jne
sbb
call
xor
cs
popf
in
call
lea
xchg
add
loop
clc
test
pop
gs
mov
int3
inc
xchg
call
stos
das
cmp
(bad)
xchg
xchg
icebp
gs
stos
(bad)
jmp
(bad)
ins
(bad)
fisub
pop
sub
push
adc
scas
and
sahf
push
call
jno
cdq
js
stos
in
inc
xchg
pop
fsub
sti
sub
icebp
js
rcr
pop
clc
mov
xchg
bnd
xchg
push
push
(bad)
xor
out
mov
xchg
test
mov
and
xchg
cdq
clc
stos
add
gs
pop
nop
cdq
gs
in
fs
fwait
jmp
and
js
popf
ret
gs
test
mov
gs
div
xchg
call
(bad)
gs
jbe
les
cmp
call
call
(bad)
pop
gs
clc
loopne
xor
scas
xchg
rcr
call
cmps
jge
call
xchg
repnz
sahf
rol
inc
(bad)
push
ret
pushf
es
clc
mov
or
xchg
inc
outs
icebp
mov
mov
add
or
mov
cmp
repnz
or
push
xlat
int
(bad)
fsubp
mov
fimul
push
hlt
cmp
inc
inc
push
je
push
cdq
inc
je
sub
sbb
mov
cmp
push
ja
cwde
movs
jnp
mov
nop
dec
(bad)
je
clc
mov
je
movs
or
clc
cmp
mov
ret
clc
cmp
cmp
mov
aaa
out
pop
pusha
inc
fnstenv
mov
cmps
mov
repz
mov
adc
(bad)
andps
popa
test
and
(bad)
and
add
hlt
je
adc
adc
daa
idiv
ds
ds
gs
mov
xor
shr
dec
sub
(bad)
int
leave
je
dec
cmp
cmp
cmp
jmp
dec
cmc
and
cmc
shl
cmp
lea
imul
test
jmp
jae
mov
clc
cmc
movzx
shl
jmp
mov
jmp
mov
ds
gs
mov
mov
imul
cmps
cdq
clc
dec
adc
xchg
adc
call
and
call
sub
inc
adc
push
gs
jmp
gs
lds
mov
clc
add
pop
xchg
and
xchg
pop
call
ja
push
call
jp
in
pop
arpl
call
push
jge
stc
mov
call
imul
jecxz
gs
adc
gs
pop
jne
cdq
clc
in
and
pop
xchg
pop
call
add
mov
jg
dec
call
retf
out
(bad)
or
or
into
xchg
loop
call
sahf
dec
out
sti
cmp
cdq
clc
test
pop
mov
mov
pushf
call
jmp
gs
cwde
(bad)
call
add
std
gs
mov
xchg
ja
mov
cmp
test
cdq
clc
sub
gs
adc
or
call
jl
imul
inc
xchg
push
mov
pop
add
mov
gs
xchg
mov
popw
jg
inc
call
or
xchg
mov
not
pop
xchg
movsx
cmovbe
mov
pop
jmp
pop
inc
cdq
js
push
enter
aam
gs
jl
js
clc
push
and
out
mov
pop
call
pop
jg
call
mov
pop
gs
out
xchg
call
popa
cdq
clc
scas
ds
xor
cmc
call
ret
cmp
fwait
cmp
gs
xlat
pop
push
or
inc
xchg
out
call
cmp
sbb
xchg
pop
call
hlt
pop
out
gs
sub
stos
gs
add
call
into
xchg
push
push
stos
(bad)
aad
call
jo
gs
sub
out
cmp
dec
cdq
js
rol
(bad)
js
enter
xchg
push
cmp
sub
push
mov
imul
fistp
call
test
fstp
call
cmc
popf
ret
push
shr
jl
fst
mov
adc
vxorps
mov
rcl
add
jno
sahf
ret
cmps
arpl
(bad)
cld
xor
bound
scas
sbb
test
cmp
popf
inc
cmp
in
cld
into
cmp
bound
jbe
sub
sahf
ret
pop
imul
cld
push
arpl
or
inc
jbe
hlt
(bad)
cld
cmp
out
sahf
inc
xchg
dec
push
add
popf
add
pop
sahf
inc
ins
movs
dec
(bad)
cld
rol
bound
push
inc
(bad)
out
mov
cld
ss
shl
push
push
popa
mov
inc
lods
dec
cwde
(bad)
cld
pusha
adc
bound
popa
cmp
cmp
bound
punpckldq
add
nop
popf
cmp
out
bound
(bad)
dec
popf
adc
and
into
sahf
ret
cmps
leave
bound
and
fsubr
bound
popa
mov
mov
push
int
popa
cmp
cmps
ja
sub
push
sahf
inc
jmp
imul
adc
lods
jae
add
cmps
popf
ret
cld
mov
cmp
pop
sbb
ret
sbb
jl
cmp
dec
jnp
cmp
jno
popf
and
cdq
bound
xor
popf
add
or
xchg
inc
jecxz
popa
cmp
retf
cmp
pop
(bad)
sahf
ret
sbb
mov
mov
pop
popf
add
push
popf
adc
popf
xor
inc
xchg
js
cmp
pusha
popf
add
mov
fmul
rcr
pop
in
popa
mov
loopne
bound
bound
int
popf
inc
xchg
mov
popa
mov
cmp
sahf
inc
leave
and
(bad)
cld
sub
dec
jae
cmp
sbb
popf
ret
mov
test
clc
popf
add
es
jno
xor
pop
add
mov
popf
ret
xchg
lock
jl
pushf
call
ret
or
cmp
jns
popf
cmp
aam
adc
mov
popa
cmp
add
popf
ret
or
(bad)
cld
pop
pop
(bad)
(bad)
cld
push
je
bound
sti
bound
(bad)
fucom
bound
in
ds
ret
aad
test
jl
sub
cmp
fist
jp
add
into
dec
popf
inc
mov
push
or
neg
(bad)
cld
ss
clc
(bad)
cld
mov
add
mov
popf
or
adc
clc
cmp
outs
dec
pop
cmp
jmp
jmp
or
jmp
pop
(bad)
ss
xor
in
in
addr16
mov
jae
inc
inc
jae
mov
shl
sbb
mov
jmp
mov
cmc
mov
cmp
btc
bsf
mov
cmp
test
add
test
and
jmp
jae
mov
mov
movzx
mov
clc
cmp
sub
test
shr
cmp
add
mov
jmp
mov
jmp
mov
jmp
or
inc
xchg
mov
stc
test
shr
jmp
call
add
jmp
sbb
and
std
dec
and
add
ret
or
(bad)
adc
ds
inc
pop
jne
mov
xchg
pop
jmp
or
adc
cmc
dec
add
idiv
jae
mov
mov
cmp
cmp
sub
cmc
shr
cmp
jmp
push
(bad)
adc
and
dec
inc
xor
sub
jnp
xchg
aam
cmp
cmc
shl
cmp
shl
jmp
sbb
js
pop
or
xchg
add
cmp
fist
gs
out
add
add
call
xchg
mov
call
push
push
and
cmp
hlt
scas
stc
call
js
inc
adc
popf
push
xchg
in
mov
js
push
xchg
pushf
neg
mov
ret
inc
xchg
gs
and
xchg
es
cmovl
xchg
xchg
push
push
mov
gs
arpl
gs
lods
jmp
mov
clc
test
inc
ret
add
xor
loopne
gs
xchg
popw
push
out
call
xchg
dec
gs
les
xchg
gs
cmp
rcr
gs
dec
push
cmp
mov
call
jns
gs
iret
xchg
nop
xchg
xor
js
clc
mov
mov
pop
call
movs
mov
jae
cmp
rol
mov
js
and
inc
push
xor
gs
cli
cmp
pushf
cdq
js
out
gs
in
iret
pop
popw
xor
xor
call
push
and
mov
in
dec
adc
sub
imul
push
dec
cs
dec
dec
add
mov
add
pop
dec
ror
mov
sub
imul
add
add
and
add
movzx
neg
ror
shl
shl
xor
shld
clc
or
inc
bt
mov
mov
mov
bt
xor
mov
sub
mov
mov
mov
rol
mov
xadd
btc
bsr
mov
setb
mov
clc
mov
shr
mov
rcr
mov
xadd
mov
shld
lahf
mov
pop
shr
mov
bswap
mov
mov
sbb
pop
movsx
neg
mov
mov
shl
shl
xor
setbe
pop
jmp
jb
mov
pop
jmp
push
xchg
movzx
mov
mov
push
bswap
cbw
mov
push
mov
cwde
mov
jmp
inc
push
cdq
clc
sub
pusha
gs
and
gs
rcr
popw
call
mov
pop
aas
adc
scas
cmp
fbld
gs
rcr
gs
repnz
gs
(bad)
es
js
test
gs
daa
or
stc
mov
call
stos
sbb
inc
mov
and
ficom
mov
mov
clc
add
bound
ror
loope
clc
inc
jmp
jl
gs
xor
adc
or
call
inc
stos
call
pop
js
gs
mov
xchg
popw
test
(bad)
call
addr16
cs
jmp
call
fwait
adc
(bad)
mov
gs
fcomp
xchg
call
repnz
scas
clc
dec
jecxz
js
sub
inc
lods
int
(bad)
mov
clc
jmp
scas
stc
xchg
js
rcr
xchg
sbb
cdq
clc
sbb
sti
mov
pop
sub
in
xchg
pop
add
push
jno
in
xchg
in
fild
(bad)
fsubr
inc
shr
push
sbb
in
pop
add
(bad)
out
(bad)
xor
out
inc
mov
retf
out
xchg
les
cmp
mov
dec
out
inc
bswap
in
xchg
jge
add
mov
push
sahf
pop
out
inc
mov
(bad)
or
aam
pop
adc
adc
xchg
out
inc
fistp
out
mov
(bad)
js
je
out
inc
sahf
inc
out
inc
xor
xchg
in
xchg
push
and
sub
cmps
push
sahf
out
pop
sbb
sub
out
(bad)
jge
out
inc
jmp
xchg
pop
sbb
in
mov
adc
out
pop
mov
jns
adc
jmp
div
dec
push
cmps
mov
jnp
and
(bad)
in
xchg
test
push
adc
jnp
aaa
mov
icebp
push
sub
xchg
mov
clc
mov
test
add
and
pop
(bad)
clc
jnp
je
xor
mov
lods
jno
cmp
push
jnp
std
fsubr
xchg
push
adc
adc
jnp
sahf
les
js
cmp
test
sahf
mov
fst
mov
mov
js
imul
inc
mov
imul
jnp
test
cvtpi2ps
jnp
scas
lds
cdq
js
aad
gs
imul
xor
movs
inc
gs
adc
dec
gs
push
shr
call
dec
push
call
scas
hlt
mov
and
stc
stc
push
call
sbb
out
stc
push
and
fsubr
imul
in
aam
in
dec
xchg
outs
out
sub
pusha
sbb
mov
or
mov
inc
jae
out
in
xor
push
out
mov
mov
in
in
mov
jge
in
mov
lods
out
cmp
sbb
fs
in
push
shl
in
addr16
inc
jg
int
pop
lahf
pop
cs
and
out
in
outs
sbb
clc
ins
(bad)
fsub
inc
xchg
pop
pushf
in
sbb
in
adc
pusha
call
in
addr16
sub
inc
mov
inc
mov
clc
inc
int
popw
pop
add
call
stos
xchg
add
aas
lods
mov
xor
addr16
je
(bad)
push
jle
pop
adc
adc
cdq
js
ret
pop
retf
call
call
sahf
cdq
clc
push
and
aas
popw
loopne
jne
mov
mov
js
in
inc
gs
hlt
push
mov
(bad)
imul
mov
cmp
mov
clc
call
(bad)
pushf
jmp
inc
sbb
add
mov
mov
xor
ror
(bad)
enter
pop
mov
xchg
retf
js
inc
adc
(bad)
aad
xchg
mov
push
call
shr
mov
outs
push
sbb
add
in
fwait
lds
in
mov
int
pop
push
add
js
pop
in
rcr
xchg
cmp
sbb
popa
jl
pop
adc
push
(bad)
in
shr
mov
mov
mov
out
arpl
push
sub
pop
sbb
mov
xchg
in
jg
and
inc
adc
in
sub
cmp
push
xchg
hlt
in
mov
mov
js
arpl
(bad)
icebp
aam
in
ds
in
stc
push
cmp
pop
(bad)
mov
push
cdq
test
jno
sbb
hlt
jb
aaa
pop
sti
mov
inc
ins
lea
sahf
sbb
jno
ret
push
pop
xor
pop
pop
ins
jno
jecxz
scas
mov
mov
inc
lea
movs
div
jno
cli
loope
xchg
push
jno
(bad)
or
cmp
ds
lea
jb
cmp
pop
scas
sub
cmp
add
lock
shl
nop
mov
jb
dec
out
mov
push
mov
sub
mov
cmp
sahf
jb
inc
dec
jns
inc
arpl
mov
push
mov
xor
push
jno
repnz
js
adc
(bad)
stc
jb
popw
jecxz
in
call
or
add
mov
aaa
gs
loopne
jae
(bad)
int
jns
pop
(bad)
or
call
sbb
je
imul
cmp
mov
clc
mov
gs
mov
xor
test
adc
call
mov
pop
popa
call
cmp
or
nop
outs
inc
shr
ins
xchg
adc
inc
xchg
clc
dec
pop
outs
xchg
jno
mov
stos
sti
cmps
outs
inc
push
xchg
or
xor
mov
ins
pop
or
mov
mov
js
push
dec
outs
inc
adc
loope
xchg
clc
bnd
outs
mov
lds
outs
xchg
push
cmp
jmp
ins
rcr
outs
inc
jno
fwait
push
sbb
outs
xchg
xchg
mov
clc
jecxz
outs
inc
jge
shr
add
xchg
fdiv
outs
(bad)
pop
mov
sti
pop
dec
xchg
cmp
push
stos
outs
xchg
inc
xchg
mov
cmp
xchg
cmp
mov
outs
(bad)
adc
out
outs
pop
or
fs
mov
mov
mov
js
imul
pop
mov
outs
pop
pop
es
xchg
cmp
lds
int3
outs
inc
push
ja
ins
pop
cdq
xor
mov
mov
js
movs
dec
outs
(bad)
popf
sub
xchg
mov
mov
clc
lock
inc
shl
cmc
neg
mov
test
cmp
shl
mov
jmp
push
(bad)
adc
and
jae
xor
bswap
lea
test
stc
cmp
jmp
pop
lods
call
push
jb
gs
pushf
pop
xchg
popw
mov
int
and
popa
pop
sub
aad
nop
call
xchg
sbb
(bad)
movs
dec
push
gs
into
mov
sbb
jnp
fs
jle
dec
fs
push
frstor
sbb
out
clc
cld
inc
cwde
js
jbe
mov
out
cwde
clc
sbb
sub
dec
cs
push
movs
fwait
cmp
fwait
clc
push
repz
xchg
fwait
clc
push
(bad)
dec
fs
call
into
stc
rol
clc
test
shl
lock
xchg
js
cmps
push
imul
jo
packuswb
imul
bound
xchg
clc
mov
cdq
sbb
xchg
inc
ficom
push
adc
imul
fisubr
imul
pop
xchg
cmp
push
xor
mov
mov
js
fisub
lock
xchg
clc
inc
imul
add
outs
out
push
imul
xchg
xchg
mov
mov
clc
mov
lahf
xchg
cmp
out
(bad)
daa
inc
or
dec
loop
xchg
mov
cmp
pushf
add
sbb
enterw
cmp
inc
es
xchg
mov
imul
imul
clc
out
imul
pop
pmaddwd
xchg
js
xchg
popa
imul
aas
(bad)
push
imul
sbb
call
ja
push
call
add
adc
mov
clc
mov
push
call
gs
popf
xchg
call
jns
cdq
js
inc
mul
out
(bad)
gs
pop
leave
inc
call
or
int
gs
push
aam
call
dec
push
and
retf
pop
sub
out
inc
jb
js
inc
lock
inc
jge
clc
or
cmp
outs
add
mov
clc
int
test
js
push
or
cmp
ins
dec
icebp
clc
not
in
push
inc
daa
pop
mov
xchg
push
aas
popa
ret
push
xor
mov
adc
popa
jno
xlat
loop
add
mov
add
stc
jno
scas
mov
sbb
aas
mov
cmp
in
jno
arpl
fdiv
jecxz
add
hlt
icebp
jno
popf
pop
mov
push
dec
mov
mov
jecxz
mov
cmp
pop
mov
sahf
jno
adc
adc
cmc
mov
add
mov
inc
add
mov
pop
push
jno
nop
mov
jno
inc
dec
popa
jno
retf
jnp
pop
mov
or
xchg
into
mov
mov
mov
js
inc
mov
inc
les
sbb
jl
sti
add
lea
ins
call
mov
out
or
jno
pop
sbb
(bad)
gs
ror
mov
clc
jo
push
mov
cmp
jb
mov
ja
inc
jne
mov
mov
adc
loope
js
ins
dec
mov
ss
xchg
dec
cmp
cmp
icebp
jb
ins
gs
mov
dec
cli
mov
ins
retf
sbb
cmc
jb
loop
mov
lea
jbe
cmp
mov
cmp
sbb
gs
xlat
pop
(bad)
gs
test
adc
daa
call
int3
inc
call
inc
mov
xor
call
fcmovb
call
dec
ins
sub
xchg
cdq
call
cld
cmp
gs
test
and
dec
pushf
gs
inc
leave
fsub
pop
mov
gs
push
xchg
jo
cmp
xor
or
clc
stc
lds
mov
jmp
clc
mov
jae
xchg
push
add
ss
xchg
sti
dec
adc
lea
mov
cmp
cmp
xchg
mov
inc
call
xchg
fs
cmp
mov
inc
jmp
xchg
jno
add
jb
push
lds
lea
into
gs
rcr
mov
add
pop
jno
stos
xchg
dec
jno
mov
adc
mov
enter
movs
jecxz
mov
mov
js
and
loop
pop
push
fucompp
jno
idiv
jb
retf
clc
mov
mov
cld
ret
jno
stos
mov
jno
jo
(bad)
popf
out
clc
in
fnstenv
mov
js
in
mov
inc
lock
add
and
cmp
mov
js
jns
mov
jmp
mov
add
mov
cdq
std
lea
popf
xor
(bad)
ja
pop
cmp
and
scas
mov
push
mov
pop
jg
cmp
xchg
jbe
add
ror
sub
(bad)
cmp
in
jb
xchg
xor
mov
cmp
jno
cmp
aam
clc
xlat
mov
and
js
lea
icebp
pop
das
jno
pop
xor
or
jno
sub
js
pop
retf
mov
and
lea
mov
js
ins
push
mov
inc
mov
inc
jle
mov
mov
clc
xor
scas
jecxz
mov
clc
inc
jmp
mov
mov
jmp
inc
popa
cdq
js
sar
gs
jle
je
mov
cmp
sar
call
pop
pop
push
gs
push
xchg
sbb
popw
movs
dec
call
dec
pop
adc
cmp
std
push
outs
stc
cld
retf
call
lahf
stc
call
mov
mov
mov
in
loope
push
dec
popa
pop
gs
mov
js
pop
pop
popa
(bad)
xchg
or
clc
xor
js
loop
pop
pop
int
sahf
mov
das
int3
popf
clc
jnp
popa
xchg
popf
js
and
hlt
popa
inc
in
add
popa
pop
repz
sahf
clc
xor
popa
pop
mov
jb
sahf
mov
mov
js
cs
popa
(bad)
push
xor
xchg
xchg
push
loope
popa
(bad)
jecxz
popa
inc
jns
out
pop
popf
mov
jb
sahf
clc
not
popa
(bad)
mov
jp
imul
xchg
sahf
clc
adc
popa
inc
mov
xchg
mov
sahf
mov
js
and
sbb
nop
sahf
cmp
jnp
clc
idiv
jmp
dec
jp
js
bound
add
js
ja
popa
mov
js
sahf
js
scas
popa
inc
and
shl
push
shl
cmp
jnp
js
xchg
sub
mov
xchg
popf
sahf
cmp
jbe
sub
popa
inc
ins
movs
fisub
(bad)
and
out
scas
sahf
cmp
mov
test
mov
mov
fisub
js
inc
sbb
outs
dec
in
pop
mov
jb
mov
clc
cmp
jb
mov
rcr
inc
sub
mov
stc
shl
lea
or
btc
ror
movzx
cmc
cmp
jmp
cmp
jmp
sub
test
sub
btr
mov
shr
cmp
sub
jmp
dec
test
lea
cmc
stc
mov
mov
stc
cmp
test
jmp
sbb
push
mov
sub
js
jmp
cdq
clc
add
push
outs
xlat
call
data16
addr16
push
cmp
call
and
mov
add
push
push
int
inc
dec
ins
xlat
gs
mov
dec
popw
sub
lea
retf
(bad)
(bad)
jp
popw
nop
sbb
call
lods
gs
call
call
scas
pop
push
pop
loop
xchg
pushf
call
les
clc
cmp
neg
call
add
js
lea
(bad)
dec
mov
inc
cvtps2pi
cmp
xchg
fidiv
push
cdq
js
push
mov
cmp
adc
clc
loopne
in
gs
cmps
std
jbe
call
jmp
gs
pop
lds
out
sti
xor
xchg
gs
repz
jno
pop
inc
cmc
call
push
push
rcr
cmp
in
call
push
in
les
cdq
clc
cmp
(bad)
mov
inc
gs
xchg
mov
xchg
call
and
int3
gs
adc
and
ret
gs
jo
das
cdq
js
repz
gs
aad
lods
popw
and
add
pop
call
or
pop
add
and
js
or
add
sub
outs
pop
cmp
das
out
dec
outs
xchg
push
(bad)
adc
sub
iret
sub
jnp
sbb
or
xor
inc
xor
jnp
clc
movs
and
dec
gs
xchg
mov
gs
jb
and
js
add
gs
xchg
mov
or
inc
addr16
dec
gs
push
addr16
mov
push
gs
pop
mov
stc
ror
popw
rol
call
fcom
clc
fwait
nop
gs
sbb
dec
and
push
inc
mov
mov
pop
fsubr
mov
js
scas
nop
gs
leave
hlt
gs
repz
or
ficomp
call
sub
pusha
pop
gs
pop
int3
xchg
call
xchg
mov
pop
stc
xchg
xor
js
pop
retf
outs
adc
aad
inc
test
loope
popw
std
pop
call
call
gs
or
and
pop
scas
shr
call
pop
xchg
cdq
clc
out
gs
stos
test
gs
xchg
dec
fisub
aam
loope
js
push
lahf
gs
dec
outs
bound
mov
pop
xchg
ins
call
in
pushf
sbb
(bad)
cdq
arpl
xchg
mov
ficomp
call
clc
stc
sub
stc
clc
cmp
shr
test
add
mov
mov
mov
jmp
push
(bad)
adc
add
shr
ret
cmp
jmp
xlat
movs
call
sti
mov
mov
gs
or
adc
movs
ss
call
ror
(bad)
in
push
outs
gs
mov
cmps
movs
add
cdq
js
push
add
mov
call
xchg
pop
gs
adc
je
pop
and
jbe
clc
repz
inc
lahf
gs
mov
call
mov
pop
call
add
gs
jge
mov
inc
call
scas
outs
cdq
call
cmc
stos
fcomp
call
shl
gs
ins
add
call
sub
and
clc
dec
retf
xchg
dec
dec
dec
gs
inc
push
gs
lea
test
xchg
rcr
gs
dec
or
push
retf
xchg
xchg
outs
call
sub
push
pop
push
fisub
xchg
mov
call
mov
(bad)
mov
jns
pop
push
dec
leave
lds
(bad)
push
cmp
mov
sbb
loope
inc
popa
add
dec
fwait
mov
clc
sub
addr16
jmp
mov
mov
clc
xchg
mov
xchg
cld
fwait
mov
clc
clc
push
dec
fs
xor
fs
sub
shr
add
mov
mov
cmp
mov
add
jmp
inc
mov
mov
stc
shr
imul
cmp
jmp
push
ror
mov
and
jecxz
loope
bound
mov
and
jle
jnp
cdq
clc
daa
mov
adc
gs
push
cmp
(bad)
fst
popw
jmp
mov
gs
and
cmp
movs
sbb
inc
in
fs
gs
in
inc
jo
inc
sub
mov
ret
ds
xchg
call
ss
clc
outs
movs
call
(bad)
fisub
sbb
fisttp
cmp
out
xchg
mov
adc
push
add
lea
push
cmp
xchg
mov
js
mov
in
leave
xchg
js
imul
imul
push
xor
add
cmp
pop
(bad)
js
mov
pop
(bad)
js
dec
mov
inc
add
je
(bad)
cmp
stc
(bad)
js
(bad)
adc
and
jo
das
sti
dec
sub
add
and
sbb
sub
jmp
or
inc
(bad)
ret
cmp
aas
clc
or
ret
add
sub
leave
and
cmp
fwait
call
dec
ret
push
gs
jb
pop
gs
sub
cld
call
and
bnd
cdq
clc
lock
test
xchg
mov
mov
jb
cmp
push
dec
mul
or
gs
fnstenv
xchg
call
and
mov
pop
mov
cmps
icebp
mov
clc
push
pop
repnz
out
push
inc
xchg
xor
xchg
in
nop
icebp
js
cwde
sbb
xor
(bad)
or
sbb
pop
je
push
pop
shl
pushf
jmp
js
xlat
jl
pop
or
icebp
mov
clc
lahf
xor
push
inc
push
popf
arpl
inc
leave
iret
sahf
push
xchg
mov
pop
fdivp
js
pushf
cmp
inc
mov
clc
fmul
(bad)
jae
mov
movzx
shl
test
shl
clc
cmc
or
jmp
pop
(bad)
ss
and
jb
ss
loop
outs
mov
pop
xor
push
inc
push
xor
cs
ins
add
mov
dec
gs
aad
push
gs
push
popf
xchg
adc
rcr
gs
ret
sti
cmp
jnp
sbb
dec
gs
sub
inc
gs
dec
jge
call
dec
adc
das
cmp
inc
inc
sbb
jmp
cmp
mov
sahf
gs
pop
test
pop
inc
shl
pop
or
fistp
clc
add
mov
in
mov
mov
clc
lods
xchg
xchg
ins
inc
arpl
clc
imul
dec
xchg
mov
js
enter
adc
sub
xchg
ins
xchg
sbb
nop
js
sbb
ins
inc
cvtps2pi
ins
inc
(bad)
ds
ins
pop
jno
rcl
outs
xchg
rcr
in
jg
lds
rep
push
sbb
and
ins
jns
aam
test
or
jmp
ret
ret
pop
popf
imul
das
mov
adc
push
loope
imul
mov
cmp
(bad)
jmp
or
or
push
test
and
js
pop
pminub
stc
ds
imul
dec
add
rol
add
add
adc
ror
and
inc
add
or
add
add
or
gs
mov
outs
call
loop
and
gs
lea
xchg
push
gs
push
fld
(bad)
call
mov
and
sub
ret
add
stc
sub
call
repnz
out
call
inc
gs
in
popw
(bad)
pop
icebp
call
adc
lea
call
mov
scas
cli
or
dec
outs
or
icebp
mov
clc
or
(bad)
jne
push
inc
or
scas
add
lds
(bad)
push
push
in
pop
and
mov
gs
or
mov
mov
pop
push
cli
xor
call
add
add
enter
movs
(bad)
call
push
cmps
popw
mov
shr
adc
jl
sbb
call
fdiv
outs
gs
lea
gs
xlat
push
(bad)
call
jmp
popf
push
dec
cmc
in
pop
push
jno
shl
mov
inc
ins
inc
aaa
mov
repnz
cmp
mov
jle
outs
xchg
mov
xchg
js
rcr
pop
mov
xchg
cmp
movs
xchg
mov
mov
xchg
js
pusha
mov
mov
xchg
nop
js
mov
and
sti
cmc
js
clc
out
fld
mov
out
ins
inc
sub
xchg
cmp
pop
lahf
nop
js
ret
jg
stos
ins
(bad)
push
push
data16
inc
inc
(bad)
jecxz
xchg
xor
xchg
mov
clc
pushaw
ins
inc
leave
inc
sub
js
cld
jo
(bad)
in
pop
mov
pop
xchg
mov
mov
clc
mov
inc
sbb
xchg
mov
clc
in
inc
jo
inc
pop
fbstp
inc
mov
nop
mov
outs
cdq
js
scas
in
inc
or
in
gs
mov
mov
fisub
out
call
nop
gs
xchg
adc
mov
call
inc
int3
xor
gs
or
call
fstp
xchg
mov
pop
call
push
call
into
(bad)
imul
in
gs
push
xlat
mov
pop
mov
mov
gs
or
or
loope
inc
call
lahf
add
call
push
sub
xchg
call
mov
mov
push
gs
div
call
fdivrp
and
cmp
das
jne
xchg
call
pminsw
xchg
jb
gs
push
pop
call
inc
in
out
stc
xchg
mov
js
cmps
or
mov
cmp
pop
(bad)
xchg
mov
call
test
gs
dec
std
popw
clc
nop
and
call
pop
sbb
pop
xchg
lahf
mov
pop
(bad)
ds
pop
jno
gs
test
xor
and
jae
sti
cmp
pop
cli
dec
jo
pusha
push
jo
xchg
xchg
mov
push
fnstenv
xchg
lock
(bad)
jl
sahf
pop
mov
push
jo
push
sbb
mov
pop
call
js
adc
push
(bad)
int
pop
add
jo
out
pop
clc
fmul
jp
pop
shr
pop
add
test
mov
and
outs
jo
fstp
mov
clc
inc
aam
inc
clc
(bad)
out
inc
xchg
cmps
pop
xor
add
loop
mov
mov
js
scas
dec
pop
cmps
mov
pop
sbb
jo
stc
daa
ror
pop
mov
(bad)
retf
jae
push
inc
mov
inc
outs
dec
dec
mov
stos
add
jo
lods
inc
jo
int3
retf
js
mov
pop
mov
mov
in
jo
or
inc
rcl
mov
cmp
shr
cmp
imul
cmp
jmp
movzx
inc
mov
cmc
test
shr
imul
stc
cmp
jmp
jb
lea
push
not
movzx
mov
jmp
push
call
push
(bad)
adc
aas
loope
push
cmp
js
mov
jno
call
pop
not
cmovl
pop
mov
pop
jmp
or
cdq
js
sub
mov
xchg
call
out
pop
gs
sti
adc
pop
test
cmc
call
test
int3
neg
xchg
lea
call
sbb
mov
clc
call
test
or
shl
jno
repnz
mov
mov
mov
(bad)
jno
mov
dec
mov
fistp
sub
jns
icebp
js
ret
push
inc
dec
sahf
fmul
(bad)
retf
or
icebp
mov
mov
js
cmp
(bad)
les
js
mov
clc
jne
cmp
jne
cmp
jmp
jae
mov
jmp
ret
add
inc
gs
jne
jb
outs
je
jb
arpl
jae
inc
cmp
jmp
push
push
cdq
clc
sub
sub
(bad)
call
addr16
pop
call
mov
(bad)
in
sar
call
leave
shr
gs
sbb
jmp
sbb
gs
sub
js
sbb
(bad)
dec
jg
xchg
cwde
jae
call
cmp
xchg
xor
cmp
cdq
stos
or
js
fs
neg
call
jnp
clc
jae
push
xchg
loope
call
(bad)
dec
adc
ds
dec
call
pop
punpcklbw
or
mov
fistp
mov
sbb
inc
(bad)
out
popw
sub
or
call
aam
gs
stc
(bad)
call
rol
gs
stc
xchg
std
call
nop
jnp
call
out
fsub
jmp
(bad)
gs
adc
loopne
pop
pop
pop
cs
xor
and
test
(bad)
cdq
clc
fsub
mov
push
xchg
call
repz
push
call
mov
jno
cdq
js
xor
outs
stc
sub
call
arpl
dec
gs
pop
mov
push
gs
nop
or
outs
stc
push
dec
call
sub
out
gs
cli
clc
pop
call
in
div
js
adc
sub
test
(bad)
sar
xchg
mov
mov
js
inc
test
jno
test
popa
push
test
jl
jp
out
mov
xor
jns
jp
sbb
imul
sar
addr16
test
mov
stc
int
jns
in
test
cmp
inc
xchg
jp
dec
dec
imul
xchg
xchg
test
jb
pop
test
jp
lds
xchg
jns
jmp
test
clc
cmp
test
inc
mov
(bad)
xor
xchg
test
xor
xchg
test
adc
movs
aad
xchg
jns
test
xlat
or
mov
dec
jp
sub
lock
add
(bad)
xchg
jp
pop
repnz
xchg
xor
js
out
add
mov
test
aad
clc
dec
or
test
xlat
test
cwde
sbb
jp
test
clc
mov
inc
mov
repz
jp
fisub
or
vpaddsb
test
clc
xor
jns
pop
add
test
cmp
jp
sbb
xchg
jp
or
and
and
sbb
shl
or
add
push
call
out
pusha
gs
jg
fstp
gs
and
cld
jle
xchg
inc
stos
call
ret
inc
xor
lahf
xchg
sub
mov
int3
gs
push
retf
sti
call
mov
push
cld
call
fdivr
popw
push
dec
lahf
call
stc
shl
inc
add
stos
call
xchg
xchg
call
add
clc
enter
loopne
pop
imul
xor
clc
icebp
or
in
mov
xchg
mov
clc
setp
in
inc
mov
out
xchg
adc
repnz
cmp
cmp
adc
js
popa
mov
inc
add
xor
adc
clc
loop
out
xchg
adc
lods
out
inc
pop
stc
fucomi
xchg
outs
adc
or
jmp
in
inc
ror
test
(bad)
lea
push
xor
xchg
test
adc
test
mov
pop
movs
jg
adc
push
sbb
push
jnp
cli
jne
(bad)
div
push
sub
js
or
push
test
mov
js
cmp
js
mov
fild
js
(bad)
rol
mov
(bad)
mov
mov
js
int
mov
clc
add
(bad)
adc
xchg
mov
js
out
pop
xchg
jmp
js
repnz
push
js
imul
(bad)
adc
mov
mov
clc
imul
pop
xor
sub
outs
pop
xor
and
jmp
je
mov
add
adc
mov
bts
neg
mov
test
cmp
shl
jmp
test
shl
test
shl
cmc
cmp
or
jmp
clc
das
cdq
js
cli
push
gs
push
shr
clc
pop
ss
sbb
shr
gs
jne
mov
call
xchg
cdq
clc
cdq
ret
fisub
cli
aad
call
mov
adc
cli
test
(bad)
cmp
sub
ficomp
gs
ss
popw
out
adc
push
call
scas
fbld
gs
into
xor
xchg
jmp
(bad)
out
mov
cmp
cdq
js
jae
gs
xlat
inc
in
call
scas
daa
and
mov
hlt
jo
call
vminps
cdq
clc
xor
xchg
dec
call
js
cmp
repnz
stc
mov
mov
gs
push
sbb
push
shl
test
cdq
js
xchg
sub
jnp
pop
les
call
mov
(bad)
std
add
enter
xlat
das
call
or
repz
gs
dec
and
mov
cmp
push
call
arpl
gs
arpl
gs
movs
das
repnz
mov
icebp
int
gs
jno
dec
gs
lods
ins
loop
into
sbb
mov
fstp
js
mov
xchg
inc
sbb
xchg
push
movs
in
mov
in
cmp
gs
out
out
gs
aad
dec
gs
and
mov
or
dec
retf
imul
push
or
mov
clc
sub
rcl
call
push
fild
(bad)
stos
add
lds
xchg
adc
inc
xor
gs
sub
sub
bsr
lea
cmp
btr
movzx
mov
cmp
cmp
jmp
push
(bad)
adc
and
jo
das
sti
dec
add
jge
pop
pusha
mov
pushf
not
mov
cmp
out
jge
add
(bad)
mov
sub
and
stos
(bad)
xor
pop
push
adc
jbe
in
cmp
mov
loope
jge
jns
sbb
std
sub
(bad)
gs
fisubr
dec
cmps
std
add
xor
nop
adc
aas
mov
adc
push
ja
fldl2t
xor
ret
ja
mov
ret
gs
rol
mov
jne
imul
cmc
cmp
stc
cmp
jnp
pop
mov
iret
sub
ror
jbe
mov
les
movs
cmps
mov
push
data16
dec
jnp
add
adc
xor
iret
(bad)
xchg
cmp
mov
lods
mov
stc
cmp
in
mov
(bad)
cwde
out
cmp
inc
fild
inc
sar
or
cmps
jmp
and
add
push
mov
popa
movzx
stc
cmp
jmp
call
cmp
jmp
scas
sub
clc
std
push
push
gs
xchg
pop
hlt
call
xchg
retf
clc
push
or
sub
call
add
icebp
gs
and
jp
mov
cmp
sbb
call
(bad)
call
sbb
jge
(bad)
out
add
add
gs
push
nop
call
std
lods
gs
fcmovnu
xchg
gs
cli
jbe
cdq
js
mov
call
out
dec
gs
push
cwde
call
mov
(bad)
jmp
mov
cmp
or
mov
clc
push
xrelease
in
clc
or
call
int3
ins
xchg
push
rcr
cdq
clc
sub
pop
aam
rcr
jns
and
pop
pop
cmp
call
jns
gs
fcom
call
xor
or
xchg
call
iret
add
xchg
sbb
lock
dec
push
cdq
clc
or
(bad)
retf
xchg
call
cdq
call
es
xchg
dec
gs
push
gs
inc
shl
call
mov
(bad)
in
xchg
jnp
mov
cmp
jae
clc
cmps
mov
or
xchg
gs
fisttp
cdq
clc
xchg
dec
xlat
gs
jbe
nop
xchg
fisub
jmp
aad
call
mov
call
gs
js
in
inc
sbb
sub
sbb
call
jmp
cwde
adc
or
or
clc
and
gs
dec
sub
and
add
js
fucomp
gs
loopne
cmp
or
call
imul
inc
loope
xchg
or
js
ret
out
(bad)
fisttp
xchg
cdq
js
in
adc
(bad)
mov
xchg
daa
adc
pop
adc
shl
cmps
data16
out
cmp
sti
sbb
js
cmps
(bad)
in
imul
sbb
arpl
inc
sti
rcl
ins
mov
js
inc
in
gs
sbb
(bad)
popf
xlat
sbb
nop
mov
in
ja
les
cmp
arpl
sbb
inc
pop
in
xchg
imul
in
cmps
and
pop
and
mov
pop
in
and
inc
xchg
out
pop
mov
(bad)
jns
pop
sbb
shl
xchg
in
sbb
adc
xor
js
(bad)
aam
(bad)
and
mov
jns
gs
cs
mov
rcr
inc
push
jne
pop
jnp
xchg
call
jnp
clc
cmps
pop
gs
mov
inc
gs
js
ins
gs
adc
clc
cmc
jg
gs
in
gs
lock
call
push
(bad)
out
mov
adc
inc
mov
int
call
adc
call
jge
fwait
call
push
xor
cdq
clc
pop
mov
cld
gs
call
jp
cmp
gs
(bad)
fnstsw
repz
arpl
clc
push
(bad)
gs
adc
or
and
in
call
in
xor
gs
or
adc
sub
jnp
xor
and
cmps
std
sbb
shr
jno
jmp
inc
xor
xor
jl
dec
mov
mov
jmp
ret
fcomp
gs
retf
call
add
xchg
add
call
std
jne
gs
xchg
mov
cmp
inc
idiv
gs
rcl
das
stc
jbe
call
mov
test
pop
cmp
jle
xchg
leave
cdq
clc
sahf
xor
mov
gs
in
cmp
jmp
mov
cmp
popf
xchg
popf
gs
lods
(bad)
jno
inc
dec
mov
pop
sti
cmp
call
gs
pop
loopne
sbb
inc
pop
aas
imul
xor
repz
gs
idiv
gs
jmp
mov
cmp
mov
mov
or
inc
inc
mov
add
push
lea
mov
lods
aas
lea
xlat
aas
jno
sub
mov
clc
rcl
mov
adc
mov
pop
and
adc
mov
pop
clc
shl
jno
pop
add
jno
sbb
lods
jle
jno
push
inc
mov
mov
jno
cmp
aad
clc
outs
pusha
mov
cmp
jno
rol
gs
sti
stos
lea
and
jno
mov
mov
cli
xor
jno
inc
aaa
mov
cmp
pop
js
clc
call
push
mov
xchg
movs
jnp
or
jno
bt
jb
out
out
mov
xor
mov
mov
test
jb
push
test
mov
push
pop
mov
fptan
jl
mov
mov
in
pop
jb
add
outs
movs
jmp
fmul
jno
(bad)
les
jno
lahf
and
push
mov
cmp
jno
add
cmps
jno
sub
dec
jb
pop
xor
pusha
mov
pushf
sahf
lods
mov
hlt
dec
lea
mov
js
ins
mov
push
fisubr
addr16
aad
clc
lds
mov
repz
inc
mov
sub
jno
std
pop
push
(bad)
mov
clc
arpl
mov
cwde
mov
add
mov
or
lea
jmp
push
push
jmp
or
adc
leave
pop
fld
imul
cmp
sub
(bad)
dec
mov
add
fst
test
inc
xor
paddw
ds
cmp
or
add
call
clc
aaa
pop
test
inc
pop
shr
gs
jp
out
pop
cmp
inc
call
and
ficom
cdq
clc
in
repz
pusha
test
call
sub
(bad)
jae
jp
inc
mov
pcmpgtw
loop
sbb
int
call
cli
int
pop
mov
mov
clc
pop
push
or
pop
mov
xchg
call
or
push
gs
push
imul
xlat
push
imul
iret
push
dec
call
lock
push
call
pop
xchg
clc
mov
stos
gs
test
cs
add
in
call
sahf
into
mov
jecxz
call
bound
popw
shl
gs
stc
sbb
gs
push
sub
loopne
cmps
call
push
xchg
cli
inc
cdq
js
add
gs
jge
jp
(bad)
scas
inc
gs
adc
call
cmp
cdq
js
jp
gs
push
ss
xchg
pop
xor
sub
mov
loope
cmp
(bad)
xchg
clc
test
(bad)
imul
out
sti
or
call
stos
sub
test
and
or
gs
mov
gs
fcom
popw
fiadd
call
fnstcw
cwde
gs
mov
cld
xchg
outs
adc
mov
xchg
les
call
mov
addr16
cmp
test
js
into
(bad)
gs
push
mov
sbb
cmp
out
cdq
js
in
popw
stos
adc
call
lods
pop
leave
call
pop
sbb
js
fs
gs
gs
xor
push
xlat
call
mov
call
jmp
sub
ror
(bad)
cmp
adc
add
jmp
add
and
add
cli
cmps
push
call
or
jmp
dec
fcomp
popw
bound
xchg
gs
mov
(bad)
xlat
call
jne
sbb
push
sbb
sub
(bad)
call
gs
pop
sbb
call
add
js
lock
jle
push
mov
sbb
cmp
fstp
mov
inc
cdq
clc
outs
dec
out
lock
xchg
call
xor
clc
pop
mov
gs
inc
or
and
daa
push
cmp
cdq
js
jno
gs
popa
inc
std
gs
mov
int
pop
cmp
repnz
js
test
gs
mov
cmp
call
xchg
xchg
gs
push
cmc
lahf
gs
jo
cmp
lock
mov
ds
clc
cwde
ret
xchg
out
call
fisttp
gs
jmp
lods
call
(bad)
icebp
mov
mov
cs
inc
call
dec
test
push
and
stc
arpl
pop
outs
xor
jp
pop
sbb
xor
xchg
shl
in
cmp
fcmovbe
test
dec
add
jp
jns
jp
pop
and
mov
jns
jp
inc
xor
jns
add
test
pop
sub
xchg
adc
cmp
sti
jbe
js
sub
stc
push
xchg
cwde
sti
scas
jp
pop
je
stc
ror
js
and
jp
mov
jp
outs
push
out
clc
cli
stos
sbb
xchg
mov
js
mov
jns
(bad)
jno
pop
pop
popa
cmp
and
shl
jp
iret
mov
xchg
add
push
jp
or
and
cmps
jp
addr16
popf
xchg
mov
(bad)
dec
push
jns
fdiv
test
and
push
jns
repnz
pop
test
in
sbb
test
cmp
sub
jns
stc
icebp
inc
test
fld
sahf
test
fwait
mov
cmp
test
jge
test
adc
inc
xor
ja
sti
dec
push
(bad)
adc
aad
push
aam
or
dec
test
jmp
pop
mov
or
movsx
pop
cmp
jbe
or
jmp
add
adc
add
sbb
cmp
pop
mov
push
pop
mov
sti
fstp
jnp
jo
pop
or
ret
sub
in
xchg
std
(bad)
idiv
bound
jo
aaa
xor
fidiv
mov
ins
scas
dec
(bad)
mov
lock
mov
out
mov
jbe
mov
mov
jecxz
mov
cmps
inc
or
bound
dec
mov
out
jmp
mov
jg
mov
into
int3
or
xchg
lods
xchg
in
mov
push
or
push
xchg
int3
fistp
xor
leave
xor
mov
jmp
scas
je
add
jmp
mov
mov
stc
mov
popa
shl
loope
pop
je
aad
ds
jg
jg
xchg
cmp
pop
mov
ret
(bad)
je
leave
add
xchg
cmp
movs
xor
scas
ins
(bad)
lahf
sub
mov
jge
(bad)
sub
dec
fnstcw
xchg
xor
pop
out
dec
adc
push
inc
inc
cmp
cmps
sub
inc
or
dec
cld
inc
pop
dec
scas
cmps
fsub
xchg
int
cmp
push
je
fisttp
cmps
leave
sub
dec
pop
cwde
jo
cs
cli
xchg
sub
sti
(bad)
cli
fnstenv
sub
call
jbe
rcl
in
pop
jae
cmp
imul
mov
or
repnz
dec
fwait
xor
imul
ins
push
sbb
push
sbb
mov
dec
jbe
idiv
out
fwait
mov
shr
cld
test
das
inc
and
cdq
ficomp
(bad)
cmp
scas
mov
mov
cwde
push
out
mov
enter
int3
ja
mov
push
mov
imul
sub
jg
and
sti
or
sti
jecxz
and
and
pop
push
xor
jl
shl
pushf
and
shl
add
xlat
into
outs
scas
mov
ins
movhlps
call
fwait
sbb
cdq
lock
jmp
mov
outs
out
mov
push
(bad)
movs
js
xchg
sub
cmp
sbb
mov
xchg
cmp
mov
jns
mov
out
inc
pop
pop
aad
sbb
mov
adc
xor
inc
(bad)
jne
mov
pop
mov
jb
enter
lods
add
js
arpl
das
mov
outs
inc
addr16
stos
and
add
mov
cs
aam
cmp
jmp
stos
add
popf
push
aaa
adc
sbb
(bad)
mov
mov
adc
dec
iret
int
hlt
fsub
pop
xor
out
aad
pop
jbe
xchg
push
inc
sti
cmp
pop
add
scas
ror
mov
push
and
(bad)
enter
fs
xchg
js
xchg
enter
stos
sahf
and
sub
push
(bad)
add
jae
rcl
in
mov
js
mov
out
mov
hlt
or
js
pop
fdiv
outs
xor
fldenv
push
loopne
fild
daa
ud0
xlat
dec
fisubr
lea
pop
mov
cdq
xor
(bad)
dec
mov
mov
cld
cmp
pop
adc
retf
sub
ins
fisub
sub
leave
xchg
push
jmp
lahf
loope
in
fwait
imul
call
mov
pop
mov
fdivrp
pusha
add
sub
fild
ins
xchg
lahf
and
xor
ret
dec
inc
xchg
adc
ss
sub
xor
je
out
test
into
in
jg
add
or
jg
jo
psubb
sub
xchg
fst
into
ds
xchg
or
int
ins
mov
cmc
sub
div
mov
push
(bad)
scas
push
jnp
inc
out
cs
jp
sbb
not
push
bound
inc
fistp
mov
pop
daa
shl
and
pop
mov
lock
adc
xor
pop
les
imul
sti
sub
fisubr
test
cli
add
pushf
pop
or
into
jb
int
les
push
inc
ins
hlt
popf
jb
mov
mov
int3
or
call
retf
mov
and
inc
fmul
std
enter
xor
mov
sub
jo
icebp
cmc
clc
retf
pusha
loop
jge
sbb
jb
adc
outs
imul
call
xchg
test
cmp
loop
mov
in
inc
sar
imul
sub
scas
(bad)
fsubr
add
je
sub
or
mov
and
test
sub
push
das
rcr
(bad)
sahf
cmp
pusha
pop
call
sbb
jle
push
adc
dec
mov
or
mov
fsubp
cmp
stos
es
mov
cld
es
pop
je
sub
mov
into
mov
inc
mov
shl
fwait
scas
jge
loopne
faddp
inc
scas
mov
inc
dec
xor
arpl
lds
xchg
scas
or
aaa
test
repnz
jae
jl
ins
mov
add
pop
dec
jne
cmp
repnz
(bad)
pop
mov
icebp
(bad)
hlt
cdq
cmp
and
int3
aad
out
jns
dec
jl
test
inc
sbb
movs
or
dec
mov
out
inc
mov
xor
and
mov
dec
mov
loopne
stos
jp
ins
jo
inc
cwde
fnsave
pop
push
fst
cmps
pop
(bad)
int
movs
cmc
in
sbb
mov
dec
dec
xchg
xchg
sahf
push
call
(bad)
loopne
pop
sbb
dec
in
or
(bad)
cmp
jnp
enter
push
mov
xor
mov
shl
addr16
lea
scas
push
dec
adc
sbb
ror
push
add
jmp
dec
pusha
jno
push
imul
inc
sbb
inc
jo
push
dec
out
sbb
mov
xor
jno
mov
into
cli
adc
daa
pop
mov
mov
ror
pop
jl
imul
arpl
imul
xchg
jecxz
sbb
sub
adc
push
jbe
jb
mov
ret
repz
mov
rcr
or
ds
ins
mov
cmp
rol
adc
movlps
hlt
or
test
sbb
movs
adc
xchg
popf
inc
jmp
xor
fild
mov
repz
retf
jns
hlt
pop
jae
bound
fld
pop
sar
sub
pop
pop
stos
aaa
add
pminsw
mov
pop
retf
jnp
cmps
cmp
fcom
repz
jle
fcom
cmp
pop
push
retf
inc
test
mov
jmp
sub
test
mov
jnp
addr16
sub
mov
add
mov
push
sbb
in
pop
lahf
iret
or
xchg
stos
ss
mov
jmp
add
movs
sub
addr16
inc
or
jbe
icebp
jmp
jnp
inc
sbb
jmp
lods
iret
cmp
cmc
imul
stc
sbb
mov
cli
(bad)
dec
popf
push
sti
sub
test
fld
mov
or
out
imul
xor
cmps
scas
retf
sub
inc
xchg
push
xchg
push
and
fwait
push
sti
xchg
mov
or
jo
or
push
and
mov
stos
mov
inc
mov
ret
mov
mov
xor
cwde
adc
inc
cmps
pusha
jnp
ror
or
inc
mov
ret
or
repz
or
jmp
mov
stos
bswap
adc
out
adc
pop
inc
adc
cmps
fbstp
pop
adc
shl
test
cmp
rcl
retf
or
in
fs
int
rcr
dec
cmp
sub
sub
(bad)
jle
mov
jno
jb
dec
ficom
sub
aas
and
pop
stc
jne
jmp
and
mov
add
mov
pop
test
fs
mov
ror
and
mov
adc
mov
jl
ret
mov
jg
adc
mov
in
xchg
jmp
ds
(bad)
in
mov
pop
pop
push
cmp
aas
add
mov
ja
push
scas
cli
mov
call
pop
inc
cld
or
dec
mov
out
in
gs
cmp
inc
add
loope
cmp
dec
mov
das
or
add
pop
push
jmp
push
int3
aam
retf
in
std
push
adc
dec
pop
ja
cmps
mov
cmp
cmp
sbb
aad
mov
ss
adc
shl
scas
jo
fidiv
into
hlt
jnp
inc
mov
imul
pop
push
(bad)
out
scas
mov
jo
aad
cmp
fwait
(bad)
jmp
mov
stos
mov
and
mov
pop
sbb
mov
fnstenv
sub
push
jmp
inc
xor
out
fs
pop
fsubr
js
xor
aam
xor
sbb
retf
hlt
shl
adc
cli
dec
fisub
bt
mov
dec
mov
mov
test
cvtps2pi
jb
or
out
inc
test
cdq
pushf
rcl
inc
out
enter
in
sbb
push
jle
dec
push
xlat
popf
push
clc
jnp
xor
xor
jecxz
push
sbb
in
fwait
loope
push
movs
push
push
and
adc
iret
fstp
push
sub
mov
addr16
bound
arpl
pop
sub
pop
inc
out
mov
inc
jle
loopne
inc
sub
cmps
in
xor
(bad)
pushf
popf
lahf
sbb
mov
dec
mov
xchg
and
movs
cmps
and
loop
shr
outs
arpl
ret
(bad)
cli
or
or
shl
out
ret
inc
es
(bad)
idiv
addr16
popa
jns
mov
outs
movs
popa
daa
fdiv
xchg
inc
inc
mov
xchg
icebp
pop
xor
mov
pop
lods
scas
stos
repnz
sub
adc
in
or
cmp
xor
std
neg
stos
xchg
pop
(bad)
in
cmp
jb
adc
neg
rcr
ja
test
mov
mov
jnp
bound
call
push
pop
loope
cwde
xchg
pop
outs
adc
loope
ja
lea
stc
jg
stc
jmp
mov
or
cmp
xchg
add
sahf
cmp
dec
in
clc
shl
aam
popf
pop
out
nop
and
jbe
sub
mov
ds
add
adc
inc
cmp
dec
sub
mov
and
xchg
nop
inc
test
in
fidiv
jmp
stc
add
pop
fadd
das
lock
sub
sub
xchg
lods
ds
(bad)
sar
das
or
retf
or
inc
in
in
jnp
pop
std
xchg
jae
mov
std
mov
mov
fmul
js
or
cmp
(bad)
in
sar
sub
rep
fadd
fcmovb
out
ja
mov
xchg
aas
loopne
idiv
mov
mov
and
mov
xor
jl
and
neg
cli
cmps
mov
jmp
adc
ret
in
pop
dec
mov
xor
mov
adc
sbb
and
shl
jmp
jmp
add
cmp
out
cs
stos
cmp
xor
ins
scas
sub
jle
std
out
icebp
mov
icebp
mov
inc
jmp
inc
ret
scas
mov
dec
sahf
or
and
repz
dec
add
pushf
sub
xchg
adc
js
mov
mov
lea
push
outs
jo
stos
outs
mov
(bad)
cmps
cmp
cdq
movs
jle
popf
pop
push
cmp
rcr
maskmovq
test
add
xchg
or
jle
xor
call
lods
pop
clc
jae
mov
xchg
sub
push
sub
cmp
xchg
test
xchg
mov
or
cli
and
xchg
or
push
pop
mov
inc
and
(bad)
loop
add
or
pop
sub
gs
cmc
popa
mov
sbb
add
cmps
push
call
push
fdivr
outs
out
std
pusha
adc
imul
imul
jae
mov
pop
add
in
stos
mov
fcom
inc
xchg
cmps
cld
mov
mov
ins
push
in
outs
enter
clc
jmp
ret
retf
xchg
out
push
xor
cmp
fadd
ja
mul
dec
pop
outs
jns
xor
inc
push
jnp
xor
inc
jle
popf
push
addr16
mov
stc
cmps
ins
out
jbe
xchg
xlat
and
dec
or
mov
sar
jb
stos
pop
sub
bound
adc
ja
mov
add
les
xchg
jmp
call
ja
mov
xor
test
gs
sahf
popf
mov
jmp
push
ins
call
jl
jp
xchg
xor
fild
push
xor
mov
cdq
pop
addr16
cli
call
ds
inc
test
pop
mov
sahf
jg
push
mov
sbb
stos
iret
mov
mov
fcomp
je
es
aam
lea
ror
int
clc
or
mov
mov
movs
cmps
repz
out
std
mov
fdivr
(bad)
ja
mov
fiadd
(bad)
jmp
test
sub
gs
sbb
mov
lods
or
adc
xor
repz
xor
mov
leave
fisubr
nop
pop
and
mov
push
(bad)
or
ins
jp
jmp
int
bound
push
dec
fs
cld
cmps
push
leave
xor
int3
xchg
stc
ins
idiv
push
out
jns
rcl
sub
fldenv
dec
push
dec
je
jp
cwde
daa
jle
je
out
mov
cs
rol
push
lods
xor
adc
fcomp
xor
mov
sub
adc
call
push
inc
xchg
mov
or
mov
jge
sub
dec
aaa
push
cld
mov
scas
(bad)
cs
cwde
popa
push
sbb
sbb
std
adc
aad
xchg
inc
int
fld
inc
cli
bound
rcl
push
es
jl
and
repnz
xor
rdmsr
gs
loopne
sti
and
or
daa
fsubr
pop
xchg
jecxz
test
enter
dec
enter
arpl
je
je
test
dec
dec
into
aaa
movs
ror
cli
pop
sti
and
data16
lock
rcl
daa
es
inc
pop
sahf
aam
ja
jns
add
mov
mov
push
lods
jle
test
and
adc
mov
fild
sub
pop
and
and
adc
mov
fld
movs
add
out
lea
jle
adc
fimul
mov
cmps
cmps
sbb
or
iret
mov
cmova
clc
jmp
fdivp
mov
push
mov
repz
movs
fiadd
jno
mov
ret
adc
fist
sub
mov
push
test
add
inc
mov
mov
shr
or
xchg
add
mov
test
nop
hlt
mov
pop
sub
cmp
rol
dec
jg
mov
cmc
xor
pusha
call
pop
or
or
stc
vpminub
inc
jnp
mov
icebp
sub
inc
fidivr
cmp
add
sbb
xlat
push
and
test
lods
pop
ins
add
add
and
out
std
bound
jl
add
inc
mov
pop
js
enter
push
dec
test
xor
(bad)
sub
push
iret
dec
xor
ja
leave
fcmovbe
xor
int3
push
out
dec
xor
pusha
sahf
cli
jl
sub
pop
inc
inc
add
or
jecxz
dec
retf
xchg
dec
mov
mov
sub
rcr
xchg
in
pop
scas
test
xor
xor
xchg
and
pushf
cmp
cmp
xchg
sub
into
adc
in
rcl
das
dec
(bad)
(bad)
jno
jo
(bad)
bound
jg
mov
outs
sub
cmp
add
xlat
fwait
sahf
ret
sbb
dec
js
ins
cmp
retf
setg
shl
aam
push
mov
dec
sbb
sub
mov
scas
xchg
mov
mov
jns
mov
jp
shr
aas
sbb
idiv
jo
add
std
popa
xchg
clc
and
add
call
fcom
in
(bad)
movs
aam
loope
leave
adc
hlt
cmc
adc
cmp
jnp
iret
mov
pop
(bad)
and
dec
aad
stos
loopne
mov
popf
stc
cwde
(bad)
fisubr
stos
mov
out
retf
scas
dec
inc
xchg
push
(bad)
jmp
loopne
sub
pop
push
jb
arpl
in
dec
jnp
aaa
(bad)
and
mov
sub
stos
imul
adc
fwait
(bad)
jo
sub
repz
mov
adc
pushf
test
enter
in
pop
cmp
repz
shr
and
push
popf
into
push
mov
sbb
ja
(bad)
ret
jl
pop
fs
gs
fcomp
imul
xor
xchg
shl
add
and
sub
sar
xchg
mov
(bad)
jo
adc
clc
mov
fdiv
(bad)
(bad)
sti
push
nop
xchg
ins
jecxz
jmp
pop
or
push
mov
lock
xor
and
lahf
jo
test
sar
sub
sti
iret
xor
mov
aaa
inc
adc
fsubr
pusha
jae
pushf
loope
and
rcl
loope
cli
mov
les
or
std
sbb
outs
lock
leave
mov
ficomp
(bad)
(bad)
mov
lods
add
fsub
inc
xchg
mov
pop
pop
adc
test
mov
adc
sub
mov
in
out
add
cmp
or
inc
call
xor
lds
jnp
jns
sub
lock
pop
push
or
xor
loopne
loop
mov
inc
(bad)
dec
pop
push
dec
in
jg
nop
inc
out
test
ss
les
mov
add
mov
dec
push
test
push
xchg
repz
in
icebp
xchg
movs
xlat
fninit
call
aam
(bad)
pop
add
and
jnp
mov
sti
mov
aad
ret
push
out
cmp
enter
shl
cld
add
iret
int3
jne
mov
jmp
out
test
not
or
cdq
mov
add
mov
mov
or
and
pop
and
retf
lahf
lahf
ret
sbb
(bad)
pop
push
(bad)
stos
sbb
xchg
(bad)
cdq
fdivrp
or
push
mov
push
inc
test
jmp
jl
mov
cmp
mov
dec
loope
inc
or
dec
pop
and
mov
sahf
shr
adc
sub
push
retf
mov
and
pop
in
popa
pop
cmpxchg
inc
dec
adc
dec
sub
stos
jbe
outs
mul
repnz
ss
xchg
stc
xchg
jo
push
popa
popa
in
cld
repz
call
mov
jmp
push
xor
mov
inc
lds
fs
jno
cs
inc
int3
mov
data16
pop
inc
add
nop
lock
stos
mov
ficomp
out
pop
or
shl
xchg
(bad)
push
outs
push
ja
xchg
mov
jb
in
or
ja
out
mov
mov
(bad)
jns
xchg
shr
jne
mov
lahf
ret
adc
dec
and
xor
mov
sub
xor
sub
retf
add
push
xor
mov
inc
mov
dec
clc
ja
inc
ret
sub
xchg
mov
out
adc
stos
ret
mov
jbe
mov
test
cmps
cmp
movs
sub
fisub
mov
jbe
xchg
movs
mov
push
ss
push
mov
cmp
inc
int3
sub
repz
ins
std
push
hlt
retf
aas
fdiv
mov
mov
repnz
pop
adc
inc
cmps
leave
xor
or
jae
ins
scas
jmp
je
cmp
fld
mov
adc
sub
pop
inc
or
test
aad
push
jge
dec
das
nop
retf
fdiv
xchg
cmps
jecxz
or
or
add
cdq
popa
rol
aas
lahf
lock
fsubr
fcomp
ds
ficomp
mov
cli
pusha
psubq
(bad)
std
in
int
push
icebp
push
cmp
pop
repnz
daa
test
popa
aaa
mov
and
mov
fimul
xor
jle
outs
lods
sbb
dec
xchg
or
add
inc
push
stos
(bad)
lods
pop
jge
adc
mov
jns
ret
cld
lds
add
out
call
in
push
inc
or
or
xor
and
sbb
or
mov
add
pop
mov
sbb
push
scas
xchg
addr16
imul
test
jb
jge
inc
xchg
sub
sub
adc
inc
mov
mov
rol
cmp
cmp
xchg
xor
out
fisttp
sub
out
test
stos
addr16
mov
push
mov
adc
stc
les
push
or
cmps
jbe
rcl
mov
pop
pushf
mov
push
lods
jmp
imul
mov
mov
push
xchg
inc
(bad)
jo
movs
adc
stc
fwait
pusha
sbb
or
ret
int
jecxz
mov
(bad)
jle
outs
ror
cld
sub
in
jmp
pop
or
sar
daa
jmp
fiadd
xor
or
sbb
add
sbb
or
jo
icebp
daa
xchg
shl
xor
movs
add
out
mov
lods
ins
shl
ins
jnp
std
stc
loop
mov
adc
cmp
sbb
(bad)
das
push
xlat
fsubr
mov
and
add
clc
xchg
add
dec
xchg
jecxz
dec
fidiv
aas
xlat
jno
in
out
jnp
popf
or
mov
jbe
jno
adc
inc
cwde
retf
fs
push
xor
jle
(bad)
aam
loope
movs
dec
inc
out
cs
test
cmp
loop
mov
jno
inc
cmp
add
enter
and
movs
jne
xor
lods
pop
xchg
es
mov
ja
test
xchg
push
arpl
adc
cmp
hlt
push
and
cmp
lods
pop
div
lea
xor
and
pop
sbb
jbe
aas
cmps
ret
sbb
xchg
(bad)
aad
loopne
push
rcr
daa
data16
pop
push
stos
call
in
xchg
ret
inc
in
and
fld
mov
jno
repz
or
cwde
or
cwde
and
jno
xor
or
mov
loope
xor
jmp
inc
popf
pop
push
push
sti
test
sbb
sub
stc
mov
jecxz
aaa
pop
addr16
sar
sbb
movs
movs
js
pop
inc
jno
xchg
aad
fsubr
rcl
rdmsr
and
adc
iret
and
call
pop
es
test
cdq
sub
fwait
icebp
push
jp
add
ret
xor
arpl
push
(bad)
or
sub
rol
outs
fimul
movs
aaa
addr16
jo
adc
shl
add
xchg
or
adc
push
ficom
out
retf
jle
(bad)
push
jno
cmp
sbb
inc
mov
popf
popa
adc
mov
popf
inc
clc
aad
jbe
inc
ins
mov
inc
mov
jmp
xchg
inc
sub
iret
test
cmp
retf
sub
sti
dec
imul
jne
ss
pop
ins
adc
into
rol
into
inc
pushf
rcr
(bad)
aad
js
scas
or
bound
dec
mov
test
xor
(bad)
(bad)
sub
dec
cdq
cmp
enter
sbb
push
ins
je
cmc
sar
mov
ret
(bad)
inc
add
xor
(bad)
(bad)
jns
mov
imul
push
mov
movs
inc
or
mov
or
push
pop
pop
xor
test
(bad)
cmps
stos
mov
rol
out
jmp
(bad)
xchg
imul
shl
mov
arpl
xor
icebp
ror
mov
mov
(bad)
jmp
cmp
adc
and
movlps
jno
jmp
sub
or
dec
fidivr
mov
inc
xchg
sar
ins
pop
sti
adc
xchg
gs
or
jmp
std
das
fucomi
sbb
pop
dec
lea
push
cmp
outs
jecxz
fstp
into
mov
dec
mov
aam
adc
inc
push
add
add
push
lods
push
pop
cdq
dec
push
mov
jge
js
push
mov
jg
cld
or
movs
jno
jecxz
cs
dec
mov
add
mov
mov
fs
or
mov
inc
cmp
fsubr
imul
adc
sub
cs
jmp
retf
js
popf
or
cmp
or
mov
leave
lahf
clc
es
inc
mov
sub
repnz
xchg
retf
repz
and
and
pop
and
fstp
dec
add
aas
xor
mov
xlat
adc
rcr
and
mov
aas
pop
js
push
mov
push
sbb
lahf
arpl
jbe
push
pop
rol
mov
push
inc
mov
cmp
jb
add
imul
rcr
movs
xchg
mov
mov
jo
imul
fst
fsub
push
sti
pop
mov
repz
cli
xor
or
push
xchg
cli
dec
dec
cdq
xchg
xlat
jg
cld
sar
cmp
mov
adc
gs
mov
add
enter
mov
xor
xchg
fnstenv
cmp
scas
int3
mov
cld
cmps
mov
and
mov
mov
scas
or
adc
dec
popa
fsub
push
inc
jo
pop
or
dec
ja
das
addr16
dec
scas
hlt
jno
cmps
test
repnz
imul
mov
mov
arpl
sbb
ss
mov
push
(bad)
jmp
cmp
neg
jmp
or
es
xor
int
jle
fs
jns
cmp
adc
stc
jae
xchg
fsubr
cmp
ror
jge
xor
xchg
(bad)
test
bnd
cmc
push
clc
push
fcmove
xchg
jmp
leave
fist
cld
or
add
lea
inc
or
std
(bad)
jnp
xchg
xchg
(bad)
dec
push
xchg
cmp
xchg
test
mul
and
mov
lods
jl
jg
push
js
add
frstpm(287
dec
int3
ror
push
stos
push
inc
dec
dec
scas
test
outs
cmp
and
mov
adc
jno
imul
inc
inc
imul
fimul
in
push
sar
dec
push
cmp
xor
adc
pop
inc
inc
cmp
mov
mov
sub
in
jg
cmc
nop
jbe
clc
iret
lods
dec
mov
test
repnz
stos
test
adc
std
push
and
data16
push
sti
sbb
add
imul
(bad)
mov
xchg
inc
xor
xor
push
aam
and
dec
mov
or
mov
jb
mov
in
mov
mov
icebp
nop
stos
test
dec
push
cmp
loope
lods
xor
jg
jg
mov
int
xchg
pop
inc
mov
or
stc
cdq
addr16
sti
cmp
push
cmp
into
jecxz
pop
iret
jae
test
xchg
adc
mov
fbstp
mov
inc
sub
movs
popa
mov
pop
xor
sbb
out
inc
push
dec
sbb
addr16
fwait
cmp
mov
mov
sbb
(bad)
mov
push
mov
lods
add
push
jo
sub
fmul
pop
mov
add
xor
mov
sahf
icebp
das
inc
adc
hlt
mov
sahf
aas
(bad)
clc
ins
rcl
ret
pusha
daa
iret
sti
jl
std
push
cmp
cmp
jge
push
xchg
(bad)
cmp
(bad)
xchg
xor
dec
fadd
xor
imul
(bad)
(bad)
jge
out
fnstsw
ins
lods
or
out
dec
sub
rol
pextrw
fwait
sub
outs
loop
fist
fldenv
aad
rcr
sub
jae
sar
sbb
dec
pop
mov
push
pop
pushf
dec
push
adc
jmp
aad
(bad)
jb
cmp
int3
jb
es
mov
pop
xor
push
push
pop
adc
fiadd
idiv
repz
loop
nop
dec
movs
(bad)
cmp
lock
fistp
pop
(bad)
(bad)
xor
fmul
mov
and
clc
loop
jmp
(bad)
ins
and
pop
mov
pop
xchg
mov
repnz
fist
mov
fwait
jmp
dec
addr16
and
call
mov
shr
jp
push
jb
inc
int3
push
ret
add
and
add
popa
add
imul
iret
cmp
dec
ds
push
les
sbb
cdq
push
add
es
pop
les
and
cmp
cli
jae
pop
das
push
fisubr
xor
ret
push
shld
sti
inc
xchg
lods
imul
jge
repnz
push
dec
cs
outs
or
(bad)
nop
dec
and
xchg
sub
cmp
fistp
push
pop
fadd
test
out
inc
push
retf
push
sub
mov
mov
or
inc
jo
(bad)
jle
adc
frstor
lods
push
xchg
xor
pop
cmps
fs
neg
bswap
push
ins
and
cmp
cmp
inc
push
xor
ffreep
add
jb
xor
push
push
(bad)
addr16
aaa
sbb
mov
sar
test
jns
sub
pop
lods
mov
xor
mov
mov
cmp
stos
mov
push
(bad)
stc
and
lahf
movs
mov
(bad)
mov
pop
and
push
cmc
outs
mov
add
jecxz
push
push
mov
jnp
repz
cmp
pop
pusha
jge
sub
jb
adc
mov
inc
sub
dec
mov
mov
pop
xor
mov
cmp
xor
ds
ret
imul
daa
popa
jns
mov
daa
xor
div
mov
inc
shr
sub
mov
aam
sub
inc
fidivr
rol
xchg
or
and
mov
mov
push
mov
cli
xor
mov
add
pmuludq
test
mov
sbb
scas
adc
(bad)
aad
add
das
adc
loope
pusha
shl
stos
fild
jns
cmps
xchg
cwde
div
pop
leave
stc
or
jo
sar
in
aas
(bad)
mov
mov
sub
mov
jmp
mov
les
sbb
adc
cdq
daa
cmp
jp
dec
es
inc
or
js
jge
in
sbb
jnp
jmp
mov
sbb
stos
retf
cmc
mov
cdq
jl
cmp
mov
cwde
pop
inc
mov
or
add
stc
cmc
call
in
in
pop
xchg
out
or
mov
adc
fwait
aam
ficomp
(bad)
adc
stc
(bad)
mov
sbb
bound
adc
ja
in
ror
push
sbb
daa
lods
and
in
mov
ins
inc
neg
push
xor
ret
aam
fnstsw
add
das
dec
pop
or
int3
push
cmp
cdq
ret
pop
icebp
inc
fs
retf
or
mov
arpl
xchg
xchg
mov
int
mov
mov
stc
(bad)
dec
mov
div
call
jo
jg
push
jne
enter
test
hlt
pushf
xlat
sbb
gs
test
fdiv
inc
int3
(bad)
jg
ja
push
xchg
test
push
and
scas
into
fild
sub
cs
dec
test
xchg
add
call
fwait
shl
and
mov
push
inc
mov
jg
pop
dec
pop
ja
rol
adc
out
jae
idiv
test
inc
aaa
or
cmc
mov
and
rol
repnz
ror
stos
cwde
push
fs
sbb
test
lds
shr
fs
(bad)
lea
mov
xchg
jg
cs
xchg
ds
cli
leave
xor
sbb
jae
xor
mov
call
js
stos
mov
shr
jecxz
int
xchg
sub
xor
xor
cmc
push
lock
cmp
imul
or
cmp
cmp
je
mov
cli
stc
test
or
loopne
loop
cmp
aam
push
stc
mov
jp
mov
call
sbb
cmp
outs
(bad)
mov
neg
fild
sets
push
sub
cmp
call
(bad)
and
xchg
mov
fbstp
in
bound
xchg
jg
adc
clc
mov
iret
call
in
ins
push
rcr
push
mov
ins
mov
cmps
adc
xlat
mov
xor
and
loope
mov
ret
sahf
jecxz
cld
std
or
bound
xchg
cmp
fsub
into
xchg
and
rcl
lea
cmp
out
and
jg
fcomp
adc
es
inc
push
cmp
cmp
or
inc
(bad)
xor
gs
imul
push
(bad)
jmp
rcl
jno
(bad)
sti
mov
in
dec
ret
in
jecxz
in
mov
dec
dec
adc
mov
sub
push
xor
inc
mov
push
xor
inc
clc
add
int3
sbb
xlat
mov
fcom
sahf
cmp
mov
mov
xchg
jae
out
sahf
mov
scas
adc
in
adc
aas
pop
jbe
mov
sbb
sub
daa
push
sbb
mov
mov
jo
sbb
outs
sbb
jb
xlat
(bad)
dec
jg
add
pop
lods
jmp
daa
popa
pop
add
xchg
aam
cmp
rcl
mov
push
push
lahf
pusha
imul
mov
mov
push
push
imul
cmp
out
jne
les
sbb
sub
iret
push
dec
fs
out
inc
retf
out
shl
addr16
call
lds
nop
jbe
mov
and
imul
mov
jmp
pop
enter
loop
stos
pop
stc
ss
push
jno
inc
outs
and
outs
cli
sbb
retf
jle
ret
bound
xchg
xchg
fsubr
mov
mov
ror
sub
dec
movs
or
data16
dec
ja
add
aaa
mov
(bad)
cmp
jg
ficom
xchg
mov
adc
inc
fwait
dec
mov
mov
push
aaa
scas
xor
dec
popa
(bad)
dec
cmc
lods
(bad)
xor
(bad)
into
fwait
pusha
mov
ret
jp
push
sub
cmp
and
pop
jae
pop
xor
rcl
xchg
mov
jp
sti
adc
or
jno
or
imul
xor
jl
or
sbb
mov
(bad)
(bad)
repz
ss
push
sbb
sbb
out
inc
fistp
ins
sub
ins
mov
(bad)
das
test
push
fwait
bswap
sub
loop
mul
in
les
lock
pusha
(bad)
arpl
and
or
ins
mul
mov
leave
and
mov
sbb
mov
and
cmp
lea
arpl
rcl
(bad)
fild
cmp
push
stos
scas
mov
pop
pop
xor
xchg
mov
fsub
fwait
or
pop
test
inc
dec
(bad)
xchg
push
xchg
aam
xchg
xchg
aaa
sbb
not
mov
lods
mov
sub
jae
clc
mov
shl
or
or
or
cmp
cmp
pop
cmps
sbb
xchg
loop
pop
ret
mov
cmps
jne
imul
movs
iret
inc
push
(bad)
in
into
gs
nop
xor
arpl
cmp
ins
pushf
push
clc
enter
jmp
mov
ret
ins
jecxz
xor
inc
xchg
jp
cmps
rol
test
sub
mov
in
les
out
js
test
fsub
cmp
gs
push
push
aam
pop
(bad)
cmps
call
sbb
mov
and
test
sbb
sub
dec
int
xchg
stos
sbb
loopne
inc
cmp
pop
and
shl
in
sub
lds
jmp
add
jmp
mov
sub
ret
add
or
cmc
int
gs
data16
scas
push
add
mov
leave
aam
addr16
test
je
mov
adc
jecxz
je
dec
repnz
arpl
fistp
fs
cmp
sbb
add
sbb
ret
arpl
inc
add
push
lds
aad
(bad)
outs
(bad)
ror
or
mov
pop
or
int3
sbb
xor
inc
movs
xor
jg
sbb
xchg
push
retf
repnz
sbb
sbb
in
sahf
pop
add
push
movs
enter
jl
sbb
pop
test
jl
pop
sub
xor
xlat
xchg
dec
mov
outs
xchg
pop
jl
icebp
add
and
jno
jmp
das
outs
cmp
popf
arpl
out
ins
jp
(bad)
out
arpl
retf
div
adc
pop
(bad)
call
xchg
out
mov
les
(bad)
sub
in
imul
dec
mov
ins
cmp
xor
fs
mov
rcl
cwde
out
add
out
jbe
pushf
mov
add
jo
jecxz
cs
shl
xor
and
ins
mov
div
sub
jb
push
aad
lea
adc
jns
out
test
aam
pop
test
mov
pop
scas
jne
in
aam
ds
hlt
push
inc
movs
hlt
and
repnz
push
xchg
push
mov
call
fnsave
jl
adc
adc
loopne
mov
dec
(bad)
jbe
fidivr
dec
in
xor
loope
push
add
in
mov
ficomp
push
popf
jne
mov
sti
dec
mov
jmp
jge
mov
push
es
addr16
mov
jno
jp
sub
or
xchg
in
push
retf
(bad)
jno
enter
rcr
push
cmc
cmp
cmps
fsub
push
shl
loop
test
ret
enter
cld
push
jl
jl
inc
cmova
retf
pop
xlat
inc
xor
or
jae
shr
mov
repnz
fiadd
jno
ds
dec
repz
test
ror
xor
or
inc
and
sbb
punpckhwd
dec
xchg
xor
add
imul
sbb
stos
mov
mov
add
cli
(bad)
mov
outs
add
jge
out
rol
add
push
inc
mov
lds
cdq
dec
call
inc
xchg
mov
pop
(bad)
iret
inc
jb
test
gs
pusha
inc
mov
movs
pop
and
and
sbb
out
jp
push
jmp
jp
pop
cli
dec
jns
jne
fnstenv
jg
pop
add
pop
push
xchg
jno
and
daa
in
shr
aad
sbb
inc
fisttp
push
xchg
mov
sbb
shl
mov
repz
jp
repz
adc
push
fist
jg
(bad)
popa
push
sub
xor
and
jb
outs
mov
mov
or
jns
add
push
lods
adc
int3
jnp
inc
lock
sbb
and
add
jns
(bad)
pop
or
mov
sidtd
das
push
mov
movs
jnp
daa
shl
out
pop
adc
pop
adc
out
and
add
imul
retf
jno
mov
int3
inc
mov
jg
lock
pop
mov
out
in
and
xor
rcl
aad
mov
fisubr
sub
and
push
jo
(bad)
(bad)
dec
xchg
mov
mov
xor
adc
lods
hlt
xchg
loope
iret
mov
pop
pushf
aaa
fnsave
pushf
les
xchg
sub
aad
inc
push
retf
call
(bad)
(bad)
pop
push
ins
lods
stos
inc
popf
inc
push
mov
sbb
cmp
xchg
scas
out
push
fcmovu
jns
inc
adc
pop
jle
lods
std
js
ds
pop
sub
pop
aad
pop
shl
or
xlat
icebp
push
test
int
mov
mov
mov
inc
jo
scas
aad
into
jae
add
mov
or
test
scas
fwait
cmps
retf
or
test
shl
jo
push
sbb
popf
imul
sub
ja
ja
or
imul
mov
out
bound
ret
scas
adc
mov
mov
repnz
pop
arpl
in
ins
mov
sar
sub
gs
dec
stc
or
je
enter
test
xchg
popa
(bad)
jbe
or
repnz
sahf
inc
pop
pop
inc
shl
sbb
xor
lods
mov
sub
jnp
xor
rcl
lea
addr16
mov
xlat
inc
xchg
cmp
es
add
xor
dec
(bad)
jo
mov
dec
xor
push
add
popa
xor
mov
retf
stos
es
scas
data16
test
mov
sub
push
sub
jae
add
movs
rcr
nop
pop
jne
add
mov
and
aam
and
rcl
jne
xor
popf
cdq
dec
or
push
sbb
adc
xor
mov
mov
pop
and
and
pop
sbb
mov
stos
shl
std
popf
gs
push
sqrtps
sbb
aaa
movs
int
call
test
xchg
push
cmp
je
push
out
ds
outs
push
pop
pushf
retf
mov
mov
das
in
adc
fs
iret
popa
inc
cmp
pop
jecxz
mov
and
outs
mov
pop
shl
pop
sbb
jo
popa
mov
aam
jecxz
stc
xchg
ds
daa
cmp
out
fild
mov
aam
scas
out
mov
scas
in
js
mov
das
xor
bound
mov
push
mov
sub
pop
sbb
mov
in
stos
in
mov
cmp
cmp
adc
leave
repz
push
mov
jnp
add
xchg
test
xchg
arpl
xchg
test
xchg
pop
push
adc
lods
mov
enter
mov
rcr
cmps
call
or
aam
push
jmp
mov
sbb
xor
xor
cli
fcomp
popa
hlt
fcom
cmp
das
lods
sbb
dec
lods
inc
mov
jne
add
ja
sbb
loopne
cmp
clc
ss
jmp
enter
inc
xchg
shl
int
pop
addr16
cmp
jecxz
push
jge
dec
pop
jmp
cmc
push
imul
mov
nop
adc
stos
adc
xor
popf
stos
je
mov
fidiv
aaa
jmp
fwait
jnp
aam
div
push
pop
pusha
pop
stos
nop
arpl
(bad)
cld
fnstsw
aas
or
jg
les
neg
stos
pop
dec
mov
pop
sbb
mov
xor
mov
movs
inc
pop
scas
adc
xchg
xchg
test
sahf
jl
scas
push
scas
mov
jp
pop
dec
cmp
movs
lahf
push
sub
jne
js
hlt
cli
fisttp
cwde
ja
mov
xchg
in
jl
inc
outs
add
scas
test
and
mov
jmp
sbb
test
leave
adc
daa
dec
push
and
xor
aas
sbb
fld
sub
ror
call
mov
shl
pop
out
fnsave
ret
les
push
xor
pop
pop
enter
mov
aas
in
push
mov
fadd
dec
or
or
sbb
xor
fnstsw
mov
xchg
rol
xchg
adc
mov
adc
stos
lahf
in
lods
adc
arpl
ret
xchg
jae
mov
movs
sahf
jmp
shl
dec
adc
inc
test
and
dec
push
push
sbb
aam
xor
and
outs
xor
ds
out
loopne
jmp
jp
mov
add
loope
out
icebp
sub
inc
cmp
mov
inc
sub
int3
mov
daa
and
aaa
rcr
mov
lods
push
pop
mov
clc
sbb
mov
add
in
push
mov
adc
(bad)
mov
test
xchg
ds
add
jnp
push
sbb
sbb
mov
push
jge
xor
iret
test
mov
aad
jbe
dec
add
movs
(bad)
lods
ds
mov
test
lock
sbb
adc
sbb
pusha
sti
ja
(bad)
adc
dec
ud2
add
sub
cmc
mov
(bad)
pop
push
and
cmp
inc
sub
daa
data16
test
mov
imul
jnp
add
xor
xor
sub
sbb
mov
popa
xor
sub
sbb
(bad)
fisttp
pop
dec
clc
ficomp
fisttp
arpl
in
(bad)
cli
xchg
jo
shr
bswap
(bad)
cwde
pushf
mov
aas
cmp
xor
cwde
daa
call
sar
mov
cmp
arpl
push
dec
pop
add
mov
jmp
pop
arpl
inc
dec
and
xor
pop
into
adc
test
scas
jle
retf
or
ja
pop
jno
movs
stos
leave
clc
ds
xchg
push
lock
retf
cld
test
repnz
xor
push
dec
dec
fcom
(bad)
in
lds
lds
adc
mov
cwde
mov
mov
push
xchg
shl
iret
inc
pop
dec
dec
loop
dec
ret
jl
mov
or
out
jecxz
add
and
or
mov
jnp
gs
mov
into
pop
clc
xchg
jmp
sbb
jmp
lock
movs
or
out
xchg
inc
push
add
inc
inc
sbb
jle
lds
ret
movs
call
sbb
push
stos
adc
sbb
adc
sar
les
pusha
mov
mov
push
push
adc
jo
cld
push
mov
ins
in
cmc
sbb
push
int
add
cli
xor
and
hlt
(bad)
cdq
jne
fisttp
xchg
xchg
daa
sbb
ret
je
aaa
jp
sbb
cmp
jl
sub
inc
es
mov
ja
jae
xor
adc
add
xchg
cs
xor
enter
mov
jge
cdq
fdiv
loop
inc
aam
dec
xchg
mov
push
add
(bad)
xor
pop
sbb
daa
test
xlat
jne
gs
sbb
stos
dec
pusha
pop
ucomiss
mov
movs
push
jl
pushf
stos
mov
arpl
pop
imul
push
sbb
pusha
shl
ror
cmp
mov
js
mov
dec
les
mov
cmp
(bad)
addr16
in
daa
jg
lea
aas
jle
daa
cmps
mov
or
cmp
cmps
mov
sbb
test
xchg
out
sub
mov
and
push
mov
or
xchg
adc
rcr
sar
adc
out
inc
shr
push
mov
cwde
cli
dec
and
mov
pop
pop
add
pop
cld
cmp
fimul
inc
shl
cli
rcr
xor
xor
popa
pop
and
in
int
pop
mov
cmp
div
je
arpl
cs
push
aam
aam
out
in
pop
xor
arpl
rcr
dec
sub
ret
imul
add
popa
pop
pop
pop
out
jnp
push
mov
xchg
pop
fld
mov
xchg
enter
pop
inc
ins
mov
(bad)
push
sub
sub
xor
xchg
dec
cmp
cmp
inc
aad
jns
ficom
dec
inc
fisttp
adc
ret
or
push
sbb
not
and
mov
mov
cmp
jno
mov
pop
inc
inc
and
test
sti
mov
dec
pop
pop
gs
xchg
jb
mov
aam
leave
or
in
addr16
popa
fisub
xchg
bound
sar
jne
fwait
jg
out
pop
ins
jl
iret
imul
cmp
and
mov
push
out
sub
jle
mov
inc
out
(bad)
jnp
iretw
cmp
push
iret
push
mov
sbb
mov
sbb
ss
sbb
pop
(bad)
and
mov
mov
sub
pushf
in
mov
lods
xor
into
nop
shl
es
push
push
inc
dec
cmp
and
dec
imul
sti
adc
push
and
or
inc
pop
movs
mov
xchg
gs
popf
out
push
enter
cmc
ds
mov
add
icebp
sub
push
mov
or
lods
lods
mov
sub
aaa
outs
outs
jae
stos
lea
sbb
shl
sar
imul
adc
test
cmp
pop
in
xor
in
mov
cmp
ds
repz
mov
or
jb
ins
lahf
and
in
(bad)
mov
cmp
cmp
push
lods
int
inc
sbb
(bad)
ret
leave
iret
rol
xchg
sahf
jmp
fidiv
mov
mov
sar
mov
sbb
je
icebp
test
int3
or
cmp
shl
dec
mov
retf
dec
mov
pop
mov
xlat
dec
pop
or
lea
(bad)
jae
std
jb
js
mov
add
inc
fucomip
and
pop
shl
test
push
push
or
es
adc
mov
pop
das
mov
cld
mov
int
loope
(bad)
push
add
cmp
mov
aas
pop
adc
adc
(bad)
mov
gs
cmp
pop
clc
in
mov
cld
inc
jns
add
jbe
sub
repnz
xor
in
movs
xchg
mov
lock
mov
lods
mov
repz
and
ss
pop
bound
pop
shr
ins
push
ret
push
jmp
jae
add
pop
mov
cld
les
not
mov
mov
jno
aam
out
push
mov
ins
bound
ss
add
fcomp
jecxz
stc
cmp
rcr
mov
popf
cmp
jno
sub
xor
sahf
adc
mov
test
aaa
or
cmp
push
mov
js
push
cli
stos
jl
inc
enter
pop
mov
(bad)
cmp
xchg
inc
sbb
dec
test
pop
ret
movs
retf
std
inc
movs
out
sbb
jnp
push
dec
xchg
push
jle
ss
jecxz
mov
shl
and
nop
jbe
movs
jl
sbb
or
mov
or
in
push
out
jle
into
sub
push
ret
div
add
popa
mov
or
cmp
mov
push
into
arpl
sub
mov
jl
sub
cdq
dec
aad
jno
(bad)
sbb
mov
ss
cmp
out
lea
shl
in
or
test
push
out
mov
xchg
cld
sbb
jbe
mov
cmps
mov
fdiv
mov
xchg
jg
push
rol
cmps
ins
push
push
xor
dec
outs
jmp
mov
es
mov
dec
mov
mov
mov
shl
sub
out
inc
int
movs
inc
popf
jb
enter
jg
jecxz
(bad)
stos
je
xchg
rcr
sub
mov
sub
pop
mov
shr
pop
mov
ins
cdq
push
push
pop
mov
push
retf
and
enter
xchg
jo
dec
loopne
or
shl
adc
ss
fnstsw
mov
scas
pop
cmp
mov
fiadd
jo
ja
cli
enter
dec
std
pop
ja
xchg
sub
mov
push
push
inc
test
jecxz
test
jge
cmp
xchg
mov
mov
inc
mov
push
pop
repz
xchg
push
jg
cmp
mov
in
ret
and
add
sar
inc
fidiv
(bad)
fisttp
push
mov
mov
rol
les
(bad)
into
ret
scas
sbb
loopne
jno
cmp
pop
imul
inc
(bad)
xor
jb
lods
push
int
std
xchg
mov
add
je
icebp
jmp
out
and
in
mov
sar
(bad)
jg
lea
mov
and
ins
cmp
mov
in
fnstenv
jge
and
daa
push
mov
sbb
xchg
(bad)
les
push
imul
inc
scas
stc
push
mov
iret
mov
imul
xchg
adc
aas
stos
pop
xchg
loope
jbe
imul
sub
ret
ror
aaa
in
sub
xchg
pop
cmp
stos
mov
es
adc
movs
fdivr
rcl
add
xchg
jb
xchg
call
cmp
pop
mov
dec
pop
mov
dec
cmp
jmp
fwait
pop
add
sbb
pop
gs
les
shl
mov
cwde
leave
inc
dec
out
addr16
adc
sbb
cmps
mov
or
bound
push
repnz
scas
addr16
push
and
call
jb
xor
imul
pop
mov
(bad)
loopne
or
(bad)
fdiv
adc
inc
jecxz
(bad)
aas
mov
and
push
push
test
cmp
in
clc
loope
pop
inc
sub
xor
inc
rcl
scas
mov
in
mov
test
data16
add
jle
ret
lods
ficomp
xor
and
and
sbb
xor
arpl
pushf
push
and
mov
ret
or
call
mov
pop
dec
mov
mov
(bad)
sbb
add
sar
div
bound
(bad)
(bad)
cmps
pop
mov
fcomp
pop
xchg
xor
cmovle
mov
paddusw
adc
or
ja
repz
mov
push
setl
push
sbb
outs
fsubr
loope
shl
mov
int3
ret
lock
arpl
cwde
inc
mov
sub
dec
mov
das
cld
in
mov
push
sahf
leave
xor
mov
mov
mov
dec
repnz
int
daa
push
ret
stc
mov
dec
les
shl
shr
sbb
addr16
(bad)
push
mov
stos
inc
and
inc
sbb
pop
sub
push
cmp
(bad)
ds
push
leave
inc
(bad)
inc
inc
fs
mov
sub
popf
xor
icebp
add
push
push
dec
mov
sbb
adc
(bad)
mov
push
add
mov
std
popa
add
push
pop
clc
and
sub
xchg
out
in
mov
es
adc
or
or
cdq
jbe
(bad)
cmps
aaa
into
jl
dec
inc
sbb
lock
lea
or
dec
fs
dec
rol
mov
enter
rcr
std
js
sub
cmps
jg
ret
retf
les
retf
mov
outs
ror
out
xlat
mov
jp
out
mov
push
pop
cmps
sub
test
pop
(bad)
call
ror
mov
and
ins
pushf
mov
ja
and
xchg
and
int3
inc
dec
pop
cld
fisub
sahf
xlat
imul
ffreep
clc
jo
mov
je
(bad)
sbb
push
jl
push
and
ror
pop
dec
out
(bad)
pop
push
pushf
out
mov
xor
xor
mov
cmps
aaa
mov
(bad)
pop
bound
lods
lods
pop
pop
ret
mov
repz
lahf
mov
gs
sub
loope
or
pop
out
or
mov
jmp
push
xchg
xor
aad
pop
xchg
xor
mov
cmp
daa
and
in
bnd
push
retf
mov
jg
or
sub
in
adc
shl
mov
cdq
leave
and
xor
and
test
mov
popa
es
mov
jne
jl
(bad)
outs
aam
or
stc
push
push
and
mov
aam
add
xor
xchg
xchg
bound
enter
jb
or
clc
pop
(bad)
mov
repnz
jp
idiv
into
pop
xchg
jo
add
cmp
enter
cmps
push
mov
cli
xorps
xor
dec
sbb
push
jp
sar
cmps
cmps
mov
test
popa
sbb
bound
outs
jo
mov
in
lahf
les
fsubr
inc
and
lods
xor
stos
jmp
mov
mov
out
hlt
and
mov
or
repnz
(bad)
mov
outs
cmp
out
pusha
inc
jecxz
int3
in
bound
push
neg
and
test
xchg
mov
aaa
xor
ss
(bad)
xor
lahf
cmps
or
(bad)
loopne
aas
mov
push
pop
les
push
test
(bad)
pusha
clc
xlat
or
jo
cs
add
cmp
js
out
cmp
retf
in
push
sub
cs
popf
shr
loop
add
lods
add
shl
out
je
pushf
shl
push
jb
or
repz
jne
arpl
sbb
loopne
ja
scas
add
push
cmps
adc
inc
ret
jmp
sahf
push
sbb
adc
data16
jp
rol
add
fcomp
std
jbe
outs
call
mov
mov
jecxz
or
inc
push
jge
push
pop
xor
push
mov
sbb
loopne
pop
jmp
push
ins
test
pop
xor
push
jecxz
xor
inc
(bad)
(bad)
jne
fmul
out
pop
xor
jecxz
imul
xor
or
xlat
mov
je
adc
pop
push
cmp
gs
imul
in
mov
test
repnz
not
sub
aas
xchg
mov
sub
jmp
mov
sub
loop
pop
jg
ret
jb
call
arpl
sbb
jl
(bad)
sti
mov
xor
push
out
test
or
jno
sahf
mov
retf
push
xor
not
cmp
xchg
cdq
or
sbb
mov
pushf
fiadd
(bad)
pop
imul
mov
mov
sub
out
jg
xor
fcmovb
stos
fsub
add
fisubr
loop
mov
loop
xchg
ja
int3
in
nop
mov
sub
ins
adc
je
retf
ja
mov
dec
push
cmp
dec
out
mov
lds
ret
xor
and
daa
adc
(bad)
jae
inc
fwait
test
dec
inc
sbb
and
sbb
and
adc
jno
push
mov
arpl
les
mov
sbb
movs
adc
dec
shl
pop
cmp
retf
lods
ss
sahf
scas
push
hlt
(bad)
cs
xor
mov
inc
mov
fld
push
sub
pop
pop
fisttp
xchg
outs
cmp
mov
out
es
out
pop
jge
add
add
mov
test
push
js
push
lods
std
popf
test
pop
ret
sub
push
fistp
xchg
cmc
mov
std
popf
jb
jle
mov
xchg
mov
sbb
ret
pop
push
or
das
mov
push
push
hlt
(bad)
arpl
lods
mov
inc
test
sub
pop
ins
test
jns
mov
out
and
ins
int
xor
hlt
mov
jnp
imul
leave
dec
arpl
das
xchg
or
mov
dec
xchg
push
jne
retf
jbe
nop
xchg
push
mov
inc
lahf
mov
(bad)
jns
sbb
aam
repnz
mov
mov
popf
pop
(bad)
aam
mov
shl
inc
jp
cmp
test
dec
loop
add
inc
mov
mov
xchg
xchg
ja
ins
(bad)
fist
push
popf
xor
add
std
pop
inc
add
outs
ret
mov
fdivr
or
fldcw
bound
inc
inc
mov
lds
pop
xchg
inc
aad
enter
neg
adc
aad
sbb
adc
iret
je
lods
inc
in
push
jo
push
add
out
sbb
sbb
mov
adc
icebp
cmp
pusha
in
icebp
mov
mov
in
sbb
push
arpl
pop
xchg
dec
push
xchg
ss
mov
dec
popa
inc
pop
or
pushf
imul
les
pop
mov
nop
push
ins
lods
cs
movs
jle
jnp
sti
pop
add
out
pusha
push
aad
mov
dec
imul
sbb
pop
push
rcr
mov
sub
ret
aas
sbb
add
pop
push
mov
mov
jp
mov
add
stos
add
jbe
scas
jb
shl
pop
int
sbb
inc
push
pop
cwde
mov
shl
test
jae
clc
push
test
shr
lock
pop
arpl
(bad)
scas
scas
cdq
mov
adc
das
mov
jle
scas
mov
adc
aad
rol
jmp
pushaw
fwait
imul
mov
ja
or
cmp
fwait
xlat
jge
sti
push
(bad)
and
outs
popa
pusha
push
movs
call
mov
or
movs
sub
stos
adc
mov
jecxz
dec
shl
lds
iret
cdq
outs
jecxz
shl
mov
and
pusha
mov
xchg
scas
xor
es
sub
shl
test
push
into
cdq
dec
cmp
lahf
jecxz
mov
inc
lea
and
retf
ins
(bad)
shl
xchg
mov
clc
cmp
pop
es
imul
shr
mov
inc
daa
pop
xchg
fucomi
outs
lods
sbb
jne
imul
sbb
out
mov
sub
or
(bad)
outs
(bad)
xor
push
movs
sub
push
or
bound
cli
lds
out
cmc
stc
fwait
mov
or
or
lahf
call
test
mov
sub
xor
push
sbb
arpl
adc
ins
xor
lahf
cmps
pusha
mov
or
xchg
xor
pop
add
xchg
pop
(bad)
aad
xor
mov
retf
and
push
pusha
push
std
enter
inc
pop
or
cmp
mov
pop
and
jne
mov
inc
rcr
mov
jge
jbe
or
jmp
movs
in
in
stc
mov
ret
or
or
sub
push
sub
adc
add
jmp
mov
jl
hlt
pop
push
jae
fcomp
aaa
xor
lods
sub
std
push
cmovle
test
inc
pop
add
adc
js
xchg
sbb
mov
inc
dec
add
jge
ret
xchg
cdq
test
(bad)
neg
push
outs
stos
or
inc
fdivr
or
mov
outs
xlat
in
loopne
mov
and
scas
inc
xchg
add
sbb
xchg
xchg
cmp
push
jne
pop
mov
adc
xchg
scas
je
in
xor
loopne
jmp
mov
xor
(bad)
fcom
xchg
add
mov
inc
jno
lds
mov
xchg
inc
cdq
fs
jbe
add
call
inc
or
pop
cmp
dec
cmp
test
mov
mov
ret
std
and
mov
xlat
out
and
pop
imul
fwait
cmp
js
aaa
fwait
pushw
cld
or
and
push
mov
xor
scas
jg
rep
bnd
xor
stos
xchg
bound
pop
push
adc
(bad)
cmps
adc
sbb
xor
outs
xor
dec
in
or
mov
jns
mov
cmps
lock
jnp
retf
jp
mov
or
movs
pushf
stos
push
xchg
cmp
cmp
xchg
jp
jmp
daa
ret
xor
(bad)
sbb
pop
dec
out
test
mov
stc
add
cmp
cwde
arpl
or
outs
add
sbb
mov
xor
(bad)
ror
add
push
pop
shl
aam
mov
adc
and
cdq
jle
or
add
xor
scas
jge
test
inc
retf
xchg
stos
enter
dec
dec
xchg
(bad)
mov
jo
rol
add
imul
das
ret
cli
pushf
cmp
mov
jle
sbb
jae
stos
push
(bad)
call
pop
out
pushf
(bad)
mov
leave
outs
cmp
jnp
and
inc
or
cmovge
push
mov
dec
loope
push
(bad)
int3
mov
push
hlt
mov
(bad)
xor
cmp
(bad)
fcomi
in
iret
adc
mov
sub
mov
retf
jne
in
outs
xchg
in
and
imul
dec
dec
push
test
outs
mov
inc
hlt
mov
test
ins
pop
and
test
pop
ds
mov
cmp
mov
mov
push
sbb
xor
fst
ins
lods
lahf
mov
imul
in
(bad)
xchg
add
mov
ss
sub
rcr
jo
jg
add
sub
lods
pusha
dec
push
mov
and
mov
loop
dec
jge
mov
leave
ja
sar
std
mov
fsub
mov
sti
jno
dec
sub
clc
mov
outs
push
shl
push
cmc
push
xchg
sbb
jmp
std
scas
cmp
dec
les
repnz
add
sub
push
cdq
jmp
cld
pop
shl
inc
cs
jo
out
dec
(bad)
fnsave
ins
ins
jecxz
das
push
cmp
sar
aad
lea
or
test
mov
push
clc
jo
adc
les
inc
repnz
retf
dec
push
(bad)
xchg
sub
xchg
and
mov
cdq
mov
nop
sbb
inc
loop
and
jnp
ins
jmp
or
pop
sbb
xchg
pushf
adc
std
fucom
ror
(bad)
aam
hlt
inc
fwait
mov
(bad)
or
pop
push
icebp
shl
add
mov
pusha
pusha
imul
pop
repnz
adc
dec
les
pusha
js
cmp
jo
(bad)
in
xchg
mov
pop
xchg
cmp
and
cld
ficom
add
dec
popf
push
or
and
sbb
out
jmp
jo
daa
add
mov
pushf
xchg
aam
push
test
(bad)
repz
push
ret
inc
adc
cmps
jmp
cmp
push
mov
and
mov
test
and
xchg
cmps
cmp
sub
mov
repz
jne
adc
jp
(bad)
call
push
pop
scas
(bad)
jne
aad
out
hlt
adc
xchg
aas
loopne
retf
out
pop
pushf
es
lahf
and
rcr
popf
jb
shr
sub
pop
popf
push
retf
daa
out
popf
jo
outs
int3
(bad)
or
sbb
dec
pop
rcl
mov
pop
pop
pop
mov
sbb
lods
push
mov
jb
leave
and
ins
js
in
sub
cmp
cmp
sub
or
cmp
sbb
repz
nop
mov
int
mov
lahf
enter
pop
sub
sub
imul
mov
neg
add
push
add
ja
xlat
push
pusha
test
fs
ret
inc
movs
jo
mov
je
rcl
cld
idiv
xchg
pop
add
add
or
neg
ds
je
dec
adc
(bad)
sub
nop
add
jl
jnp
and
repnz
mov
xor
cli
mov
adc
cmp
aad
shl
daa
pop
ins
dec
add
pop
jne
stc
or
xchg
inc
test
dec
adc
popa
mov
dec
mov
xlat
mov
ret
dec
stc
xor
xchg
(bad)
loopne
fdiv
add
retf
xor
retf
pop
cmp
fnstsw
xchg
fst
shl
nop
cld
cmp
mov
in
adc
sub
loop
or
dec
jae
jecxz
add
data16
cwde
jle
inc
scas
repz
aad
push
push
mov
in
mov
xor
jno
dec
mov
sbb
adc
pop
dec
pushf
pop
sub
lea
out
mov
dec
movs
mov
or
inc
dec
push
dec
jp
dec
push
and
pop
dec
pusha
push
popa
xchg
movs
xchg
xchg
xor
ins
enter
ja
push
jle
push
loopne
popa
stc
or
outs
arpl
fisttp
inc
jbe
mov
mov
sbb
cmc
pop
jg
stos
or
dec
jae
scas
daa
(bad)
and
ins
sub
je
shr
js
arpl
out
repnz
push
ds
adc
mov
adc
dec
and
nop
add
add
in
retf
das
outs
je
ins
and
sbb
xor
dec
xchg
and
fiadd
sub
push
sbb
call
pop
sub
dec
js
mov
add
sbb
jg
shl
jge
and
cmp
pop
cdq
mov
or
dec
scas
jae
cli
mov
pop
dec
out
mov
cmp
xor
xlat
mov
push
jne
push
cmp
adc
loope
(bad)
push
gs
pop
mov
inc
dec
in
mov
mov
call
jns
xchg
xchg
pushw
mov
cld
sub
ret
xchg
cmp
das
(bad)
outs
getsec
adc
dec
and
inc
fld
xor
sub
lods
es
lods
and
mov
xor
loopne
push
add
fwait
aaa
pusha
or
xor
das
fsub
cmc
cmps
ror
add
rcr
adc
ins
push
dec
andnps
repz
pop
lods
lds
test
jno
sub
repz
jo
adc
retf
mov
cmp
sub
stos
add
lea
in
std
mov
inc
push
je
(bad)
aad
push
js
sub
sub
fdivr
and
or
pop
test
rol
adc
(bad)
in
jo
jmp
mov
mov
jne
clc
xor
jmp
or
mov
push
popa
popf
aam
xor
mov
jmp
test
out
inc
and
and
(bad)
rol
test
jmp
jnp
sti
and
pop
movs
int
test
aam
mov
shl
stc
cs
pop
jae
dec
push
stos
push
imul
div
push
(bad)
push
inc
cmps
push
mov
cmp
adc
mov
jbe
and
dec
cli
lods
nop
mov
lea
fist
repz
lods
cmps
xor
in
mov
jmp
mov
pop
fcomp
les
push
mov
dec
loope
push
cwde
xor
in
test
pushf
push
sub
aas
push
and
pop
fldcw
sub
movs
das
or
out
movs
repz
xchg
push
pop
fwait
mov
cmp
add
add
xor
inc
movs
jns
shl
adc
push
mov
pop
mov
pop
inc
jb
ins
nop
retf
sbb
pop
push
fwait
cmc
mov
jne
addr16
das
int3
sbb
out
inc
sbb
jl
xor
retf
inc
xchg
push
(bad)
cmp
cdq
sti
call
ins
add
test
sbb
out
lea
jp
mov
add
xchg
add
sbb
fwait
xchg
sbb
sahf
dec
(bad)
imul
jo
mov
xchg
jo
xor
push
pop
out
mov
xor
lods
neg
inc
in
cs
loope
out
mov
mov
push
dec
and
lahf
push
pop
fdivr
jbe
pop
shr
pusha
add
scas
es
imul
jne
sub
mov
xchg
mov
loop
fadd
jmp
out
xor
lods
repz
bound
and
repnz
inc
imul
(bad)
test
add
mov
cli
and
test
repz
or
xchg
jne
or
or
lds
xchg
mov
dec
mov
movs
xor
sbb
imul
inc
ins
xlat
mov
fs
xchg
cld
push
jbe
sbb
pusha
lea
pop
outs
cli
shl
sub
dec
lea
xchg
or
imul
dec
and
scas
xor
aaa
ja
pop
and
and
mov
fnsave
and
jmp
push
test
sub
ins
lods
jae
jmp
push
mov
mov
or
xor
mov
sahf
sbb
and
cmp
test
sbb
mov
mov
jmp
test
push
in
sbb
in
fisubr
les
aas
mov
jbe
xor
mov
jmp
icebp
adc
shr
pop
jns
pop
hlt
loop
in
call
jbe
fstp
mov
fmul
push
out
addr16
pop
jb
cld
xchg
dec
je
test
adc
fsub
xor
xor
stos
jne
fdivr
adc
dec
es
adc
mov
xor
mov
cmp
ret
mov
arpl
out
stos
out
test
add
movs
mov
iret
call
dec
pop
add
jle
movs
push
or
push
add
test
push
sub
gs
mov
sub
test
add
cmp
pop
adc
rcr
js
adc
and
mov
pop
mov
(bad)
cmc
jecxz
mov
std
push
add
jnp
adc
cmp
ins
inc
mov
call
(bad)
cmp
dec
mov
int
push
test
dec
stos
je
retf
js
call
cmp
shl
mov
pop
cmp
sub
inc
(bad)
out
push
dec
scas
dec
dec
outs
mov
gs
aam
lahf
push
dec
imul
call
fwait
or
jbe
adc
push
add
les
in
sub
shr
dec
sbb
add
bound
push
mov
(bad)
hlt
call
repz
jmp
aas
adc
frstor
call
cmp
(bad)
and
dec
or
inc
ret
rcr
pop
repnz
sbb
in
fdivr
push
mov
xor
and
je
dec
hlt
inc
inc
push
clc
xor
scas
icebp
lock
rcl
inc
mov
xor
ret
adc
dec
mov
test
add
call
sub
out
sbb
(bad)
mov
lahf
test
push
jle
fs
into
sbb
pusha
outs
push
in
add
push
xor
mov
(bad)
call
and
cmc
js
(bad)
xchg
add
jecxz
ja
mov
shl
mov
push
not
xor
mov
inc
push
mov
mov
mov
lock
xchg
push
push
pop
adc
dec
lds
push
clc
ret
pop
cs
call
fidiv
sbb
test
and
inc
stos
mov
ret
and
cmp
mov
sbb
test
sbb
not
mul
mov
add
inc
sbb
aas
clc
es
data16
js
stc
sub
push
adc
mov
pop
enter
add
in
dec
push
daa
aad
or
cmp
mov
mov
nop
or
xor
mov
imul
in
or
scas
add
icebp
push
pop
mov
add
mov
sub
xchg
xor
loopne
ficomp
cmp
push
mov
and
iret
xchg
pop
sub
cmp
xchg
mov
mov
xor
not
imul
xchg
and
jo
enclu
daa
xor
nop
sub
ins
adc
sbb
sub
in
dec
arpl
jbe
push
imul
loope
mov
bound
cmp
jo
or
push
imul
sbb
stos
xchg
and
jmp
les
aam
xor
test
iret
jnp
jb
inc
mov
sahf
in
pop
sbb
jbe
imul
movs
sub
in
loopne
pop
jae
ss
adc
out
movs
imul
adc
cmps
sahf
fdiv
push
dec
sbb
and
outs
repnz
adc
pop
inc
xor
push
aaa
in
jmp
cmc
xor
sbb
cmp
pop
inc
stos
mov
ret
cmps
push
adc
fiadd
sahf
pop
ret
mov
mov
lods
mov
jp
mov
scas
xchg
movs
push
aas
(bad)
mov
aas
cld
aam
inc
pop
and
outs
xor
test
jbe
pop
ss
lds
push
es
jne
fnsave
mov
retf
mov
dec
movs
js
cmp
mov
push
xchg
or
pop
inc
aam
xor
rcl
out
mov
dec
loop
add
jae
xchg
(bad)
dec
xchg
mov
iret
xor
cmp
fmul
xor
cwde
je
es
lods
in
xlat
leave
mov
clc
scas
push
push
and
(bad)
add
pusha
out
retf
sub
xor
or
push
dec
popa
imul
push
sti
pop
mov
clc
aas
push
add
jo
xor
xchg
dec
ret
xor
push
and
(bad)
ret
jns
sub
(bad)
lock
push
movs
scas
jecxz
clc
imul
push
xor
in
sub
gs
scas
sub
mov
sub
cmp
mov
mov
jbe
push
repnz
ds
and
rcl
retf
int
adc
xchg
add
inc
pusha
sti
push
xor
std
lods
xchg
sbb
mov
and
jmp
sub
sub
cmp
mov
xchg
mov
cwde
dec
int3
leave
(bad)
loope
out
imul
stos
dec
xchg
jbe
mov
xchg
cdq
mov
rol
sub
pop
add
inc
xchg
sbb
gs
sub
addr16
test
add
daa
sbb
pop
pop
gs
or
mul
push
rcl
mov
in
and
shl
lea
push
jbe
ret
lahf
push
test
jbe
outs
stos
cmp
cmp
popf
mov
pusha
mov
cmc
and
leave
mov
mov
(bad)
out
xchg
(bad)
mov
mov
hlt
jmp
(bad)
movlps
mov
sub
sub
mov
cmc
ret
cmp
cmp
(bad)
in
adc
fcmovb
sbb
outs
cli
iret
imul
pop
cmp
movs
add
sub
mov
mov
push
mov
mov
iret
sub
dec
ins
popa
mov
push
shr
pushf
bound
sub
mov
mov
add
int
adc
retf
popf
dec
aaa
push
jnp
(bad)
add
mov
xchg
sbb
xor
fcomp
cmp
cmp
popf
xchg
std
xchg
sub
addr16
jg
jmp
push
and
lods
stos
jae
xor
movs
icebp
add
je
mov
fmul
dec
ret
push
test
push
or
cmp
popf
dec
popf
stos
ins
add
fs
mov
jb
sub
inc
sbb
hlt
jl
jl
inc
cmovs
push
push
ror
dec
push
addr16
mov
js
jno
jecxz
call
std
data16
jbe
sub
mov
cdq
leave
ficom
addr16
xor
dec
sahf
aad
adc
mov
or
inc
sbb
xor
sbb
or
jl
fs
loop
adc
jmp
add
fcmovnb
xchg
shl
jo
mov
sbb
lods
push
(bad)
cmps
movs
xchg
in
adc
cli
xchg
data16
(bad)
cmp
jb
xor
inc
mov
jb
pop
cmp
xchg
cmps
mov
pop
sbb
out
xchg
xor
cmc
inc
imul
aaa
and
mov
outs
or
dec
cmp
ret
loop
xchg
stos
sbb
js
call
mov
cs
icebp
dec
add
(bad)
ja
dec
retf
dec
sbb
cmc
and
sbb
movs
stos
dec
in
imul
push
add
inc
jbe
adc
mov
adc
sub
mov
xchg
mov
xchg
stos
outs
addr16
(bad)
out
sub
mov
loope
dec
jp
sbb
(bad)
int
out
dec
mov
mov
inc
or
fldenv
cmps
rol
push
mov
repz
xchg
push
out
jecxz
iret
add
sbb
add
movs
mov
call
xchg
ja
pop
mov
mov
dec
aam
add
dec
(bad)
test
(bad)
push
xor
es
jmp
and
pusha
leave
dec
shl
or
rol
mov
mov
call
retf
popf
stos
xor
jp
jecxz
jns
inc
push
test
jle
xor
sbb
push
dec
in
sar
stc
and
push
adc
shr
cwde
and
out
jp
pop
cld
sub
pop
stos
aaa
(bad)
sub
pop
pop
scas
sar
add
out
mov
jbe
retf
mov
into
or
add
jmp
int
cmps
add
movs
daa
lods
or
rcr
call
or
jnp
stc
jmp
cmp
fsubr
push
sub
sub
cdq
push
sbb
pop
jns
xchg
jecxz
test
add
jnp
add
vmovd
test
xchg
cmps
inc
mov
inc
rcl
call
std
xchg
retf
sbb
stos
push
mov
test
push
inc
into
push
lds
(bad)
push
cmp
jge
sub
dec
(bad)
fstp
clc
ds
dec
pop
sub
lock
jge
lock
rol
out
loope
rcl
div
outs
pop
or
sbb
adc
cmp
fistp
or
pop
movs
test
out
out
mov
push
xor
jmp
mov
in
jbe
sub
sahf
fsubr
sbb
or
pushf
jo
add
ror
cmps
bound
dec
cmp
pop
sbb
cs
cmp
jbe
fmul
stc
movs
jl
scas
(bad)
dec
mov
repnz
add
cli
sbb
push
call
mov
lods
(bad)
mov
sbb
aaa
cs
pop
(bad)
add
aam
jnp
sbb
int3
loopne
cmp
cs
scas
mov
iret
iret
rcl
call
adc
adc
dec
pop
or
into
inc
xchg
aam
sti
add
dec
in
or
cmps
rol
loop
and
xor
pop
(bad)
je
retf
mov
out
mov
es
in
cmp
rcr
popf
adc
scas
dec
xchg
retf
fs
pop
xor
stos
sub
ins
in
lea
and
(bad)
jge
push
mov
push
(bad)
xchg
retf
mov
cmp
loopne
inc
fs
inc
xchg
adc
in
sbb
aad
aaa
pop
inc
bound
add
pop
mov
clc
addr16
pop
inc
and
add
push
mov
mov
jg
push
or
fnclex
mov
fld
xor
bnd
test
lods
mov
mov
adc
inc
pop
ficomp
mov
pop
mov
outs
psraw
das
push
push
fidiv
les
lock
shl
xchg
addr16
push
ins
ror
cmp
rol
retf
js
adc
add
xlat
rol
sbb
jo
push
shl
adc
add
jl
call
adc
sti
pop
sbb
push
out
xor
pop
and
mov
sbb
jmp
push
(bad)
mov
push
mov
mov
mov
or
stos
out
xor
arpl
int3
(bad)
mov
fist
push
jb
xlat
jno
call
lahf
lods
pop
in
fstp
stos
icebp
xor
call
mov
and
push
jecxz
sbb
int
inc
xchg
pop
mov
xor
pop
sar
in
in
jge
and
rol
out
out
cmc
push
ss
adc
hlt
rcl
dec
pop
aad
(bad)
jno
or
xor
pop
dec
cmp
sbb
jno
out
enter
or
in
into
pop
mov
xor
es
imul
ret
push
pushf
cmp
or
xor
push
dec
mov
push
(bad)
clc
xor
scas
out
scas
pcmpgtd
cmp
inc
sbb
dec
in
adc
popa
push
add
dec
jns
ds
mov
retf
mov
jb
int
paddq
cmps
lea
push
mov
inc
adc
or
imul
push
nop
scas
push
ficom
jne
xchg
aam
and
cmps
mov
xchg
retf
test
lods
xor
fwait
retf
out
shr
js
mov
dec
adc
daa
inc
push
imul
mov
pop
cmps
fdiv
repnz
iret
repz
jbe
jl
mov
sbb
pop
xchg
ss
sub
jnp
and
stc
lods
aad
jle
cs
jae
xchg
loope
(bad)
mov
stos
sar
shl
(bad)
jns
mov
jo
lods
lds
test
or
mov
mov
sbb
out
pop
mov
es
cmovne
mov
xlat
mov
dec
sahf
sbb
and
or
(bad)
out
shl
(bad)
xor
cmp
cmp
or
mov
ror
mov
js
mov
add
jp
inc
mov
sub
dec
repz
adc
pop
add
mov
fucomi
pop
cmp
sub
fisub
add
adc
retf
inc
enter
scas
bound
or
xchg
cdq
mov
repnz
call
mov
adc
shl
nop
call
jmp
or
ds
ror
mov
pusha
ins
mov
cmp
cs
jbe
inc
mov
adc
jge
icebp
rcl
mov
hlt
lods
out
and
cmps
mov
and
bound
enter
loop
ds
sub
xor
mov
xor
clc
bound
mov
xchg
movs
outs
call
push
inc
pop
(bad)
cdq
add
call
xchg
out
dec
and
fisubr
and
cmp
aad
adc
pushf
mov
pop
cvtpi2ps
rcl
dec
jb
cld
push
dec
mov
mov
sbb
std
adc
iret
cmp
shl
inc
call
xlat
cdq
repnz
pop
fld
fs
push
retf
adc
pop
sbb
xchg
sti
ss
jecxz
jmp
cmp
sub
cld
jb
push
jae
mov
inc
call
shl
(bad)
push
out
mov
xor
jbe
leave
sar
pop
and
inc
sbb
fadd
iret
mov
into
push
cmps
test
or
xlat
loopne
jae
(bad)
fst
mov
pop
mov
mov
ret
mov
xchg
dec
push
and
dec
int3
retf
ins
ds
loop
sbb
sbb
stos
mov
movaps
(bad)
lock
mov
cmps
test
inc
xchg
pusha
adc
loope
xchg
data16
js
test
and
cmp
xlat
(bad)
mov
push
not
inc
sbb
imul
inc
gs
cmps
xor
cmps
loop
inc
int3
xchg
or
pop
sub
out
arpl
adc
push
gs
ds
fs
jbe
xchg
sbb
in
pop
cmp
test
clc
aam
stos
int3
test
mov
adc
add
gs
pop
popa
push
or
cli
push
iret
cmp
inc
lahf
sbb
shl
daa
pop
xchg
mov
fsincos
or
jecxz
dec
setne
ss
cmps
in
xor
sbb
fldenv
mov
xor
dec
(bad)
outs
(bad)
push
xor
pop
or
xor
jmp
inc
les
mov
daa
movs
int
pop
test
jmp
enter
and
in
mov
out
jg
inc
or
mov
(bad)
sub
fdivr
mov
xor
std
adc
jl
(bad)
jecxz
push
mov
fsub
xchg
xor
scas
(bad)
fist
sahf
xchg
lods
adc
inc
popa
mov
mov
fsubp
mov
jno
in
or
mov
frndint
xchg
pop
and
and
and
mov
enter
dec
push
(bad)
iret
mov
call
jbe
dec
movs
dec
jae
inc
push
xchg
(bad)
adc
adc
push
outs
xchg
lock
popa
ja
loop
out
mov
lods
(bad)
and
xor
paddusw
arpl
out
in
ret
mov
jl
add
pop
sahf
fistp
imul
retf
push
fstp
mov
(bad)
dec
mov
and
add
imul
mov
mov
xor
dec
sbb
test
jle
or
sub
inc
pusha
leave
inc
cmp
inc
fcomp
in
adc
sub
imul
js
inc
jge
test
xor
lahf
or
push
ja
inc
jl
xor
push
cdq
into
lods
lahf
mov
arpl
enter
(bad)
dec
push
or
pushf
mov
test
pop
mov
lods
or
inc
ins
hlt
push
xor
loope
aaa
int3
in
add
popa
out
jle
sbb
scas
or
sbb
fcom
ins
sub
pop
ins
adc
cmps
pop
cmp
sub
sbb
and
je
je
test
loopne
push
rcl
call
enter
hlt
push
or
cmp
(bad)
jp
add
aaa
push
out
(bad)
pop
pop
inc
lahf
jmp
repnz
fld
(bad)
test
fsubp
stos
sbb
fs
sahf
pop
iret
cwde
lods
sar
push
pop
push
gs
out
jle
inc
or
sbb
cmps
fimul
repz
in
loopne
push
hlt
aam
dec
xchg
adc
les
sahf
add
push
aad
int3
je
fldcw
dec
aas
xchg
xchg
jmp
add
inc
cld
add
or
sbb
cmps
cdq
dec
ds
push
xor
xchg
aam
ja
ins
inc
dec
push
fsubr
mov
jg
pop
ins
jle
sub
mov
rcl
movs
add
push
jl
or
dec
aaa
sbb
repnz
adc
jae
test
daa
ret
int
pop
inc
rol
sub
adc
mov
cmp
mov
lods
sub
xor
mov
adc
enter
pop
dec
dec
cwde
cli
stos
fld
retf
fcomi
nop
mov
xor
movs
stc
or
push
mov
sbb
nop
push
sbb
xor
or
es
mov
xchg
adc
daa
sub
xor
stc
daa
jne
jp
test
daa
sbb
aam
sbb
adc
je
jae
hlt
out
sub
push
jp
ins
mov
scas
add
mov
pushf
push
fs
das
push
emms
daa
es
pop
int
xchg
mov
in
retf
cmp
dec
add
in
ja
push
lahf
adc
leave
push
ror
ins
push
sub
or
inc
mov
mov
pushf
mov
pop
cmp
fcmovnb
rcr
dec
ret
cmps
pusha
xchg
and
or
cwde
pop
cmps
rol
pusha
jae
mov
ins
sar
xlat
mov
(bad)
pop
mov
sbb
push
lds
cwde
loop
dec
pop
je
into
ret
arpl
out
xor
or
push
lods
jne
jmp
loop
jns
cdq
xlat
mov
or
push
cmps
jnp
movs
dec
sbb
sbb
jae
mov
out
sbb
pop
les
lods
ja
rol
bound
daa
sbb
lahf
jecxz
mul
add
push
push
arpl
jnp
mov
xor
(bad)
pop
pop
cwde
popf
inc
jecxz
or
adc
pop
popa
jno
jae
cmps
mov
pop
out
in
stc
stc
adc
sub
(bad)
rcr
lods
xchg
xchg
pop
movs
pop
and
cmp
pop
loop
fcomi
jecxz
not
arpl
sbb
(bad)
adc
addr16
add
lock
mov
mov
mov
vrsqrtps
pop
cwde
rcl
into
js
repnz
pop
sbb
dec
fnstsw
sub
mov
cmp
cld
test
xchg
sahf
jno
mov
cmps
xor
outs
stos
cmp
retf
cwde
enter
jae
dec
xor
lahf
jle
retf
cwde
push
xor
(bad)
mov
dec
je
scas
adc
nop
or
pop
jne
cmp
lahf
xchg
cli
mov
dec
mov
retf
ret
sbb
into
stc
cmc
mov
shr
adc
out
movs
adc
push
sub
xchg
jo
sar
sti
mov
sub
jnp
mov
idiv
ja
ror
or
mov
stc
sti
sbb
push
cmp
mov
cmp
mov
jnp
(bad)
out
mov
lods
jg
ins
sub
pushf
push
inc
xor
cdq
mov
sub
cwde
test
call
xchg
iret
retf
sub
ds
push
ds
test
inc
(bad)
(bad)
out
push
stos
cdq
sbb
lods
dec
inc
pop
out
push
or
mov
sub
leave
xlat
xor
and
or
ins
into
xchg
mov
(bad)
pop
pop
sahf
add
cmp
es
nop
mov
pop
pushf
fs
test
sub
into
nop
stos
nop
sti
fnstsw
test
inc
std
adc
shl
ret
adc
sub
mov
sar
add
and
and
dec
push
repnz
repz
mov
push
ins
xchg
out
in
dec
je
inc
adc
mov
inc
out
mov
pop
jno
mov
xor
sub
ror
dec
pop
sbb
or
xor
dec
cmp
xchg
xchg
lods
sbb
ror
jo
jb
adc
push
rol
pop
pop
les
cmps
dec
and
fnstenv
sub
out
stos
push
cs
iret
adc
mov
xchg
xlat
loope
retf
inc
jg
push
popa
jg
(bad)
cmp
test
retf
or
jno
cld
inc
mov
push
push
add
cmp
shl
lds
pop
int
movs
lods
gs
add
mov
or
or
lds
sub
(bad)
(bad)
enter
scas
mov
add
and
or
push
cmovo
push
add
and
sar
cmp
repnz
sbb
hlt
and
inc
or
and
adc
or
add
dec
lods
fsubr
mov
sbb
(bad)
test
cmps
dec
mov
sub
or
and
dec
fadd
jmp
mov
cmp
and
sub
jg
and
xchg
hlt
cmp
test
mov
fisttp
leave
add
imul
js
inc
sub
cmc
out
loop
sbb
lds
cmps
retf
int3
and
jmp
sbb
cmp
iret
sbb
(bad)
pusha
push
stos
push
push
inc
mov
mov
sbb
popa
cwde
movs
ds
pop
cmp
cmp
imul
jmp
data16
inc
lods
pop
rep
in
push
or
(bad)
pop
mov
inc
jmp
out
or
jb
xor
push
sub
scas
mov
dec
sar
jno
sbb
sbb
cmp
add
hlt
call
nop
xor
test
mov
ret
jmp
mov
jb
cmp
push
pop
inc
inc
adc
(bad)
add
jnp
inc
cli
inc
add
sbb
dec
pop
mov
aad
xor
in
mov
mov
push
pop
xchg
jns
mov
shr
jno
sbb
jne
pushf
je
popf
ss
jno
lds
mov
enter
in
jle
test
mov
adc
outs
scas
push
cmps
mov
retf
dec
test
enter
adc
movs
out
fild
cmp
ins
push
xchg
and
cmp
jge
cdq
xchg
movs
add
cwde
std
sub
loope
mov
mov
das
xchg
mov
sbb
movs
sbb
movs
adc
movs
sbb
loop
inc
push
or
mov
jl
xor
xchg
mov
mov
int
aaa
jmp
or
fdiv
iret
or
pushf
pop
jle
lods
lock
pop
mov
push
hlt
ror
inc
lds
sbb
dec
mov
dec
scas
mov
loope
dec
xchg
xor
or
gs
and
dec
push
daa
js
out
push
pusha
adc
pop
sbb
aam
mov
dec
aaa
xlat
cmp
cmc
cmp
xchg
push
jmp
adc
cli
mov
aad
and
mov
aam
nop
xchg
mov
xchg
std
cmps
mov
out
cmps
movs
inc
xchg
adc
js
inc
mov
and
int3
pop
in
sub
pop
int3
lds
xor
ins
fisub
in
dec
pop
repz
lea
sbb
sub
sti
sub
mov
mov
in
repnz
dec
or
ins
jo
popf
ja
in
loope
fdivr
adc
mov
pop
jb
mov
xor
mov
es
cmp
and
dec
sbb
xchg
or
fmulp
sub
outs
inc
xor
fwait
nop
add
jne
bound
push
push
fstp
call
das
mov
pushf
or
dec
or
scas
test
mov
cmp
push
dec
mov
in
and
cmp
jno
iret
sbb
mov
or
pop
and
xor
ret
out
les
sbb
push
loop
or
(bad)
xchg
dec
aam
push
ret
mov
ret
add
adc
jmp
jne
(bad)
sbb
and
add
fist
sbb
mov
add
xlat
xchg
daa
sub
mov
ret
or
pop
mov
rcr
pop
dec
call
popa
cmp
mov
dec
es
cs
bound
jecxz
adc
or
retf
dec
test
mov
mov
in
push
daa
das
sahf
ins
sbb
and
retf
cwde
add
add
adc
push
mov
aad
pop
sar
xchg
call
test
rcl
dec
inc
mov
jg
stos
jmp
or
adc
dec
mov
adc
mov
sub
xor
add
fwait
sub
sub
ja
cs
aam
lods
and
das
push
movs
aaa
int
cld
sub
and
mov
mov
jae
add
nop
(bad)
loopne
xchg
lock
cmp
dec
xor
add
and
mov
push
mov
nop
scas
add
adc
xchg
iret
cmp
lds
xor
sbb
in
mov
sub
mov
popf
repnz
add
adc
push
mov
into
loop
sub
add
rcl
mov
sub
int3
push
mov
gs
cld
ins
stos
jbe
or
popa
jmp
outs
mov
xor
push
adc
xchg
pop
scas
jmp
push
lea
dec
xchg
pop
cdq
cmp
fdiv
xor
mov
xlat
xor
and
push
jle
(bad)
fcom
push
outs
xor
add
or
adc
pop
jae
push
add
ins
add
mov
loop
jg
mov
ja
xor
cmp
pop
xchg
adc
xor
outs
inc
ret
in
xchg
jnp
xchg
jnp
jne
std
dec
in
fs
ds
add
out
mov
in
add
fimul
rol
or
mov
test
enter
and
sbb
mov
(bad)
lahf
ret
rol
add
mov
mov
sub
shl
and
mov
jp
ret
mov
cmp
leave
push
cs
movs
hlt
ror
cwde
pop
sbb
push
imul
(bad)
xlat
push
and
pop
(bad)
sbb
sub
sbb
fwait
lods
and
out
xor
jnp
dec
in
sub
push
shl
inc
pop
xor
sub
cs
sub
push
jl
xchg
xchg
movs
jle
fbld
and
movs
add
sbb
xor
push
std
leave
xchg
add
inc
enter
add
xchg
or
xor
loope
enter
push
jmp
mov
push
sti
imul
ins
fstp
mov
test
pop
sbb
xor
loopne
outs
xchg
mov
enter
sbb
out
push
lgs
and
xor
js
emms
ss
dec
push
jne
xchg
outs
popa
push
cmp
mov
push
mov
imul
jmp
or
es
rdmsr
adc
or
jnp
fwait
and
hlt
jmp
ss
out
mov
add
push
dec
inc
retf
dec
push
sti
sbb
xor
imul
(bad)
jg
mov
push
mov
lods
call
data16
rcr
js
fwait
scas
stc
(bad)
jp
jmp
sub
cli
mov
xchg
rcl
idiv
pushf
pop
into
aas
out
cdq
das
in
fst
cs
repnz
add
aad
not
ss
leave
xchg
aas
push
dec
mov
cdq
sti
xor
dec
in
mov
cmp
mov
movs
lock
adc
adc
jbe
and
outs
daa
stc
out
xor
xor
ret
dec
mov
jmp
and
xor
outs
aas
sbb
icebp
sbb
dec
mov
les
push
inc
pop
dec
mov
pop
fnstsw
repz
adc
jbe
jge
cmp
in
or
mov
test
jmp
(bad)
cmp
add
test
push
or
push
add
cmp
xor
std
rcl
(bad)
and
imul
ror
xor
and
jl
fist
nop
and
shl
pop
daa
hlt
cmps
sbb
sub
outs
adc
dec
jg
or
xor
cdq
and
ins
sbb
cdq
lods
movs
(bad)
scas
and
jp
enter
cmp
jno
sbb
adc
jmp
test
dec
(bad)
adc
in
add
cli
cmc
ins
sub
sti
in
lock
push
jge
mov
mov
xchg
lea
lahf
aad
cmps
mov
aas
in
dec
cdq
repnz
cmp
call
and
ret
sub
jno
popa
mov
cli
mov
cld
sub
aas
adc
jbe
cli
cs
jns
adc
dec
add
call
adc
je
(bad)
aam
mov
push
leave
pop
je
clc
pop
popa
outs
jno
pop
xchg
std
cli
pop
loop
adc
lahf
jo
icebp
test
xchg
popf
ret
(bad)
movs
out
aam
pop
adc
cmc
jmp
movs
cmp
adc
and
dec
xor
cmp
inc
loop
les
iret
inc
in
jbe
leave
out
out
int
mov
inc
cmp
cs
fs
retf
mov
std
in
cmp
lods
or
sbb
mov
test
daa
push
call
jne
movs
das
fsub
add
loope
daa
ins
out
fidiv
mov
cmps
jmp
xlat
in
pop
test
jnp
pop
into
es
ret
xchg
aas
out
jnp
sub
xchg
in
dec
popf
ror
mov
retf
push
sub
cmps
jge
inc
mov
add
mov
xlat
(bad)
les
cmc
adc
adc
inc
mov
fucomp
cmp
pop
pop
and
(bad)
js
cmp
sub
icebp
mov
dec
and
loop
xchg
xchg
ror
movs
out
(bad)
jns
pop
retf
mov
push
inc
(bad)
std
jp
add
mov
cld
out
jmp
dec
fisubr
adc
pop
bound
ret
int
jmp
inc
mov
push
in
out
vpminuq
mov
into
add
jne
pop
and
and
shr
test
repnz
add
leave
in
loop
addr16
daa
push
fwait
mov
inc
fcomp
mov
sti
fs
shl
mov
sti
mov
leave
inc
pop
push
inc
fdivr
popa
fcmovu
or
pop
lahf
add
mov
inc
mov
es
ins
jne
test
inc
sbb
add
mov
js
sub
mov
scas
push
out
test
mov
gs
and
stc
wbinvd
mov
sti
push
jbe
adc
arpl
test
and
mov
cli
mov
pop
jecxz
jae
adc
in
retf
movs
mov
nop
sub
loope
adc
mov
dec
or
sbb
mov
out
rol
ret
xor
enter
pop
ds
sbb
(bad)
push
fmul
fcomp
push
dec
push
dec
cmp
xchg
daa
dec
shl
or
sbb
hlt
str
jmp
sbb
nop
xor
jmp
xchg
push
push
out
and
inc
retf
cwde
inc
cld
mov
and
sbb
cmc
add
xchg
push
fnsave
mov
push
loop
mov
cmc
je
addr16
xchg
push
mov
adc
call
jae
aaa
test
mov
adc
mov
hlt
div
lods
imul
dec
jbe
mov
pop
or
jno
cmps
pop
nop
movs
popf
ret
outs
adc
inc
push
jno
jp
lds
stos
(bad)
pop
adc
fcom
jl
rcl
adc
loope
cmp
jb
ret
xchg
push
jp
cmp
mov
in
sbb
mov
xchg
dec
bnd
retf
(bad)
mov
dec
in
lds
xchg
adc
and
xchg
inc
adc
mov
popa
or
push
xchg
xchg
imul
add
(bad)
and
fs
data16
add
ret
rcl
push
outs
dec
and
xor
xor
jecxz
push
add
xor
jmp
pushf
call
ins
repnz
shr
mov
push
int
jg
and
popf
mov
xchg
pushf
or
inc
jp
pop
popa
dec
gs
and
push
sti
cmp
enter
(bad)
rcr
xor
mov
out
or
mov
cdq
hlt
sbb
retf
cmp
add
jne
nop
and
or
adc
pop
pop
repz
and
mov
call
popa
and
xchg
rcr
mov
adc
das
pop
cs
adc
cmps
xchg
pop
pop
pop
loope
sub
push
add
add
jmp
cmps
mov
data16
add
sub
in
push
adc
mov
xchg
pop
cdq
xor
out
test
rep
sub
das
cmc
imul
pop
cmp
not
or
cmp
add
in
xchg
in
shl
mov
shr
into
push
arpl
and
push
outs
push
loop
and
mov
mov
mov
call
push
push
xchg
outs
cmp
(bad)
jno
add
add
adc
xchg
test
xchg
xlat
sbb
out
into
shr
mov
lsl
(bad)
into
aad
dec
jbe
call
or
mov
cdq
jg
adc
popf
push
data16
out
mov
xchg
call
xchg
mov
dec
loope
cdq
jl
addr16
push
mov
faddp
sub
mov
add
les
stos
push
mov
out
sbb
and
daa
imul
pusha
sar
add
into
std
fild
stc
or
or
or
out
mov
add
xlat
rcl
mov
scas
loop
imul
xchg
mov
sub
cmp
adc
push
dec
add
ss
or
xor
and
xor
jmp
sub
push
dec
test
repnz
shl
cmp
mov
movs
cwde
aas
or
cmp
in
add
cmps
push
int
push
and
and
hlt
jl
pusha
mov
dec
lods
cwde
jecxz
xchg
cmp
jge
xor
push
inc
shl
xlat
jae
dec
jle
sar
shl
jecxz
jmp
lds
comiss
push
mov
pop
sbb
adc
cmps
jge
(bad)
cmp
ret
dec
push
lods
scas
jb
cli
(bad)
and
hlt
and
scas
repz
shl
out
fdiv
inc
sahf
inc
sub
sub
mov
jmp
sub
dec
cmps
fidiv
sub
stc
fsub
stos
xchg
pop
test
mov
test
and
out
sbb
enter
or
pop
or
fsubr
add
imul
pop
jmp
push
xor
and
xchg
push
and
sbb
test
out
mov
push
dec
jmp
cmp
xchg
loop
add
cmp
and
mov
(bad)
cmp
add
inc
int3
int3
mov
jo
out
cmp
js
retf
call
mov
jns
mov
test
mov
out
(bad)
in
fstcw
mov
cld
sub
xlat
mov
mov
pop
inc
adc
mov
push
sar
je
jne
lods
(bad)
dec
inc
mov
rol
test
rol
jmp
cmp
sub
and
clc
mov
retf
ja
out
mov
iret
and
add
adc
(bad)
cmp
xchg
ret
mov
pop
icebp
fucomi
sub
adc
stos
adc
into
dec
pop
cmps
inc
js
push
dec
cmps
gs
hlt
cmp
ret
(bad)
cmps
rcl
(bad)
jns
addr16
pop
jp
jo
iret
shr
and
call
mov
cmp
test
mov
sub
sub
es
aaa
imul
mov
rcr
mov
xor
retf
jne
add
push
mov
xor
in
das
inc
inc
inc
out
pushfw
sbb
ss
imul
scas
outs
or
cmp
out
cmp
hlt
and
jno
jl
ficom
enter
pop
lahf
outs
data16
fwait
push
fisttp
sahf
out
loope
or
movs
dec
and
sub
mov
inc
jmp
jmp
fist
push
cmp
in
jp
ja
cmp
lds
add
pop
retf
push
push
packuswb
sub
shl
xor
mov
icebp
dec
or
push
retf
div
cli
inc
jmp
scas
lahf
call
mov
sbb
lock
js
xchg
push
xchg
pop
jg
enter
pop
fcmovnbe
loope
dec
das
pop
dec
push
inc
and
fsubr
pop
adc
int
sbb
inc
ret
shl
int
jl
aad
inc
jnp
(bad)
outs
cmc
ins
dec
test
and
add
dec
add
dec
sbb
das
sub
jae
adc
cmp
dec
in
mov
aam
sti
push
loope
arpl
jnp
cmp
popa
cli
push
mov
inc
(bad)
dec
fdiv
mov
in
scas
retf
cmp
sahf
(bad)
cmp
xchg
ja
sbb
rcr
dec
sbb
pop
adc
inc
sub
ins
test
int3
sbb
outs
loopne
cmp
hlt
es
(bad)
retf
jno
outs
xchg
jl
test
test
mov
cwde
adc
in
xor
clc
sub
jns
(bad)
sbb
xor
mov
jo
pop
mov
jne
mov
imul
xor
ja
mov
mov
int
sbb
sbb
jmp
enter
dec
enter
mov
xchg
add
sub
ins
js
(bad)
int
icebp
dec
jns
pop
dec
inc
mov
out
push
add
in
hlt
fdiv
pop
mov
sub
fcomp
in
xor
add
pop
lds
mov
push
inc
enter
popa
mov
mov
mov
int
cdq
or
rol
movs
xlat
mov
dec
das
xchg
or
shl
and
(bad)
(bad)
push
popf
loop
fild
xor
cmp
movs
xchg
or
sbb
push
ss
or
and
ja
js
loope
jle
push
cmc
push
je
or
lods
sbb
fwait
stc
inc
xor
sbb
ja
xchg
inc
pop
dec
xchg
cmp
jmp
mov
aam
retf
push
sbb
inc
cmp
add
mov
xlat
add
inc
mov
mov
iret
icebp
inc
add
dec
out
out
push
or
mov
cmp
not
jmp
dec
and
ja
jle
lds
dec
mov
pop
in
mov
mov
imul
(bad)
pop
into
call
push
jbe
popf
jmp
shl
push
pop
std
push
mov
cwde
adc
neg
adc
cwde
aad
clc
fisttp
int3
sub
jle
inc
cmp
ds
dec
fnstcw
mov
jns
fsubp
xlat
mov
shl
test
mov
in
add
clc
les
xchg
xor
lahf
lock
cwde
adc
mov
xor
adc
shr
rol
stos
mov
sbb
jle
ds
push
fcmove
pop
aam
mov
or
mov
movs
fld
xchg
fistp
loop
ret
and
jb
inc
jmp
fistp
add
fbstp
stos
mov
sbb
inc
dec
(bad)
mov
repz
mov
add
ficom
pop
push
xor
adc
pop
enter
sahf
jbe
enter
mul
mov
mov
xor
(bad)
in
fs
cmp
pop
sub
mov
sub
add
inc
mov
int
add
adc
dec
je
fmul
loopne
pop
xchg
sbb
xchg
jae
xchg
(bad)
inc
dec
adc
fiadd
add
das
out
(bad)
xchg
movs
xchg
mov
rol
std
mov
jmp
(bad)
iret
pop
(bad)
push
lds
mov
push
adc
cmps
lds
pusha
ds
movs
adc
cmps
jne
ret
jb
ror
pop
xchg
cmp
add
mov
cdq
test
or
pop
sub
jge
adc
in
mov
xor
cmp
sub
mov
jl
add
mov
add
into
add
loopne
jne
idiv
xor
data16
and
pop
dec
mov
lea
mov
leave
add
movs
and
inc
int3
sub
sub
enter
or
dec
and
add
movs
mov
popf
push
cmps
mov
cmp
mov
lods
out
outs
cmp
das
xchg
addr16
test
fstp
dec
cwde
or
mov
mov
xor
and
dec
cmp
jo
mov
add
push
icebp
mov
loop
cs
push
cmp
jno
add
pusha
xchg
jns
cmp
popf
sti
mov
aas
mov
or
pop
out
sub
xlat
pushf
les
adc
sub
sub
loope
lock
mov
out
or
(bad)
stos
(bad)
cmp
je
outs
sbb
neg
into
jno
xchg
pop
push
fisubr
pushf
adc
retf
push
mov
aaa
push
mov
inc
cwde
sub
call
pop
mov
and
pusha
stc
and
mov
lods
fdiv
je
dec
aam
je
mov
fld
mul
scas
call
xchg
pop
sbb
cmc
addr16
ins
fwait
add
xchg
scas
mov
ins
ins
icebp
je
rcl
test
pop
pop
pop
dec
adc
popf
jecxz
jmp
or
mov
stos
and
sub
mov
push
inc
test
mov
mov
dec
jge
jp
sbb
pusha
arpl
cmp
jle
sub
std
mov
mov
push
ret
mov
xlat
adc
or
adc
mov
ss
adc
and
adc
cmp
cwde
xchg
add
addr16
loop
push
mov
or
in
cli
cdq
outs
test
sub
mov
jmp
popa
lods
sbb
cmp
popa
dec
lds
in
cs
cmp
mov
xchg
jle
inc
xchg
gs
or
dec
daa
pop
add
sub
loope
xchg
xchg
sub
lahf
(bad)
test
lahf
xchg
pop
scas
sbb
cmps
xchg
xchg
jecxz
add
retf
lods
mov
xchg
xor
xchg
xchg
mov
data16
call
pop
enter
test
or
jo
and
dec
fisub
jmp
ret
or
cmps
js
iret
dec
lods
xchg
data16
dec
xor
sbb
mov
cmp
lods
nop
jae
shl
bound
sbb
xlat
inc
test
hlt
jns
fld
dec
ds
ds
sub
dec
and
sbb
push
(bad)
jecxz
std
pop
pop
nop
dec
sbb
jg
rcr
cmp
cmp
sub
sub
enter
addr16
push
xchg
loope
int
push
mov
fstp
mov
dec
in
pop
dec
jg
push
pop
jb
inc
push
xchg
iret
pop
aad
out
push
cmp
inc
in
mov
cld
mov
cmps
pop
loope
xchg
xchg
test
pop
addr16
or
mov
data16
fisttp
jno
pushf
fmul
loopne
or
adc
jae
loopne
call
xchg
dec
pop
and
jno
mov
jg
mov
adc
mov
xchg
push
lods
das
pushf
and
pop
push
jne
aaa
rcl
das
rcl
sbb
xchg
test
push
mov
int3
test
xor
shl
sbb
cmc
(bad)
pop
repnz
shr
add
sbb
jnp
adc
fcomp
les
mov
or
fstp
xchg
pusha
xor
pop
mov
mov
xor
mov
pop
in
int
fiadd
ret
cdq
stos
aas
adc
mov
pop
pop
ret
sbb
sbb
rdpmc
xor
mov
pop
jg
cmps
push
pop
pop
cmc
mov
mov
or
(bad)
(bad)
cdq
jp
xchg
cmp
loop
mov
test
add
in
and
xchg
inc
imul
cmc
lock
pop
and
pushf
ins
inc
loopne
int3
iret
jecxz
movs
clc
adc
and
repz
mov
jl
pop
push
sub
fcmovnu
sbb
xchg
sbb
add
sbb
push
jne
test
test
mov
out
ja
gs
dec
iret
jb
cmp
mov
mov
lea
mov
pop
in
sbb
pop
push
inc
inc
ret
mov
mov
mov
and
cmp
sbb
fwait
or
jl
ins
sub
fdivrp
sahf
lods
imul
add
or
xchg
jo
inc
leave
in
sub
lahf
inc
inc
adc
or
adc
mov
fild
jmp
call
ins
out
sub
mov
mov
repz
jmp
push
rcl
jo
inc
cdq
in
mov
js
(bad)
fcom
mov
fldenv
fsubr
pop
je
adc
ins
xrelease
pop
xchg
adc
dec
xchg
ins
mov
rcr
mov
ins
push
shl
xor
sub
or
int3
pop
out
mov
es
dec
fsubr
in
sbb
and
push
bound
fldpi
inc
clc
mov
jge
inc
cmps
cld
fcomp
jp
iret
jp
xlat
and
cli
and
in
mov
adc
pop
sbb
fst
leave
call
das
jmp
push
aas
and
mov
cmp
mov
inc
inc
std
fadd
push
push
dec
fcomip
adc
xchg
mov
dec
je
jge
cmp
ret
jg
add
and
std
mov
gs
add
mov
les
and
fidiv
and
rcl
mov
lea
shl
jg
cmps
add
mov
xor
adc
gs
and
cwde
xchg
push
ins
imul
(bad)
(bad)
rcr
and
fiadd
dec
les
cld
(bad)
int
pop
imul
setge
stos
repnz
sar
clc
dec
(bad)
mov
cmp
xor
xor
inc
inc
or
test
in
push
enter
sbb
hlt
inc
mov
push
dec
push
sub
xchg
xor
fiadd
ret
call
pop
out
and
inc
sub
pop
in
xchg
xor
lock
mov
loop
in
sar
addr16
lds
sahf
lahf
pop
mov
mov
dec
ficomp
pop
bswap
leave
addr16
pop
mov
push
or
stc
mov
mov
sub
lds
dec
xor
outs
jns
sub
sbb
retf
sub
div
dec
adc
xchg
ins
inc
imul
push
(bad)
fcmovbe
test
inc
xor
sub
push
nop
sbb
xor
out
fstp
xor
loope
daa
xchg
sub
daa
shl
jbe
setg
je
(bad)
out
xor
popa
adc
test
call
jg
pop
icebp
out
pusha
fwait
mov
xlat
scas
sahf
jle
(bad)
shl
dec
call
mov
mov
int
fadd
xor
xlat
dec
xchg
xor
pop
gs
repz
out
mov
neg
mov
cld
xchg
sbb
loope
inc
xor
or
cmp
call
sub
retf
jnp
ja
cwde
cli
or
or
imul
cmc
xchg
lahf
push
outs
and
(bad)
out
push
push
pop
leave
ret
scas
iret
jp
xchg
dec
into
rcl
jle
mov
sub
push
add
pop
dec
clc
push
out
or
fsub
sbb
adc
pop
into
fdiv
loope
xor
cmp
dec
or
jo
(bad)
arpl
xor
dec
adc
lahf
jl
cld
push
sbb
xor
movs
mov
mov
jge
mov
jmp
or
imul
dec
js
inc
lea
je
jmp
mov
outs
scas
jmp
sbb
popf
lods
sbb
movs
xor
xchg
ret
pop
mov
repz
jp
ins
iret
in
pop
fwait
bnd
mov
in
in
cmp
loopne
shl
jb
add
cmp
sbb
sub
es
sti
and
or
mov
cmps
inc
push
xchg
out
js
fld
xchg
xor
rcr
jge
pop
add
pop
ss
out
(bad)
loope
pop
lods
push
loopne
and
popf
or
(bad)
xchg
rol
clc
inc
inc
xor
adc
lock
mov
cdq
cmp
jmp
aaa
or
add
xor
push
cmp
mov
sar
mov
pop
xchg
xchg
test
aam
adc
inc
ins
xchg
rcl
mov
ss
iret
mov
or
sar
mov
push
sar
les
imul
fcomp
(bad)
push
push
psllq
arpl
es
in
out
sar
(bad)
xor
or
cmc
or
fistp
lds
sbb
out
add
xchg
test
xor
fistp
xor
vpcomd
fdivp
push
mov
hlt
fld1
and
popf
fidiv
not
inc
xor
mov
mov
and
xlat
xor
in
inc
loop
sub
mov
gs
jne
mov
ja
mov
sub
jge
in
gs
jne
cmp
dec
cmp
mov
mov
inc
ret
add
sub
mov
shl
dec
loop
mov
fmul
mov
adc
loopne
fwait
jne
xchg
jp
pop
int
jnp
test
jno
push
ds
jmp
pop
adc
or
pop
fimul
xchg
sub
dec
jne
mov
xchg
sbb
dec
popa
adc
add
sub
movs
fs
shl
xchg
fs
mov
not
mov
xor
xchg
adc
fimul
(bad)
pop
addr16
pop
clc
xor
sbb
xchg
jae
retf
or
scas
dec
fiadd
dec
jg
inc
hlt
xchg
dec
int
loope
or
out
dec
scas
nop
cmp
js
push
stc
adc
mov
addr16
fwait
mov
inc
mov
dec
(bad)
or
lahf
test
loopne
push
pop
xor
iret
popf
fcom
into
and
retf
sar
icebp
mov
or
adc
sub
in
dec
test
in
mov
adc
push
push
sbb
mov
pop
cld
cdq
sbb
ins
dec
loope
into
mov
sbb
sub
test
jne
cld
(bad)
in
push
dec
daa
pop
adc
mov
xlat
xchg
test
sbb
cmp
jl
pusha
jecxz
xchg
test
pop
sbb
repz
jns
js
xlat
lods
out
push
cmp
aam
sub
in
movs
movs
hlt
enter
cmc
mov
mov
aaa
push
ror
dec
(bad)
repz
jge
mov
or
push
jae
mov
add
sub
arpl
test
xlat
nop
pop
fsubp
cwde
out
je
jmp
inc
ins
mov
xchg
push
repnz
rcl
test
(bad)
fs
or
push
xchg
ja
retf
dec
pop
daa
inc
out
add
bound
mov
cwde
jae
sbb
or
sti
out
aad
pop
xchg
xchg
and
sbb
cmp
and
icebp
(bad)
lods
and
ds
adc
and
mov
cdq
xlat
loopne
rol
or
and
addr16
mov
retf
ficomp
mov
sub
pop
xchg
dec
cmc
mov
daa
mov
(bad)
jo
inc
call
sub
and
shl
cs
pop
mov
shr
jg
test
enter
aaa
jae
adc
addr16
adc
sub
xor
xchg
jo
fs
fimul
inc
iret
xor
mov
rol
mov
sbb
pop
outs
rcr
jne
icebp
fistp
jg
sahf
cs
test
aam
cmp
sahf
mov
push
retf
or
inc
sub
jg
xor
inc
and
jle
dec
mov
sti
push
popa
test
stos
lods
call
loop
(bad)
pandn
or
sahf
mov
jne
stos
lods
mov
xchg
je
xor
lds
jmp
cmp
sbb
adc
jb
push
dec
dec
cmp
or
in
pop
sbb
shr
mov
add
push
xor
test
or
push
xchg
(bad)
mov
outs
outs
inc
mov
(bad)
mov
outs
mov
pop
outs
out
or
leave
out
scas
(bad)
ret
jmp
bnd
mov
out
and
xor
and
mov
push
call
iret
sub
(bad)
in
clc
addr16
movs
inc
or
fsub
mov
cmp
pop
ds
pop
push
iret
imul
daa
out
(bad)
mov
inc
fistp
sub
mov
fild
(bad)
out
ror
movs
inc
in
xchg
mov
sub
lds
into
ret
xchg
push
mov
bound
sub
daa
pop
js
scas
push
retf
sbb
push
fild
cmc
add
iret
or
xchg
gs
clc
push
mov
int
adc
scas
mov
mov
pop
cmp
push
sub
(bad)
aaa
sub
popf
and
clc
adc
out
sbb
xor
mov
dec
xchg
cld
mov
ror
scas
jnp
ss
mov
pop
pop
inc
lock
inc
jg
pop
imul
nop
mov
fldl2e
cmps
(bad)
iret
shr
scas
and
nop
mov
jmp
add
xchg
mov
inc
inc
mov
push
es
xlat
push
cmp
sahf
cmps
pusha
repz
enter
mov
pop
rcr
and
sbb
stos
push
iret
fimul
push
out
pop
mov
out
xor
in
test
fistp
xchg
inc
pop
jmp
jmp
test
retf
imul
xchg
mov
or
sti
add
aas
adc
loope
xor
(bad)
and
icebp
(bad)
(bad)
or
mov
mov
jmp
ror
add
cmp
add
ret
lahf
add
cld
push
sbb
jl
fmul
sbb
rol
ja
jnp
or
or
mov
out
jae
pop
ret
xlat
jge
jbe
out
xchg
jmp
jge
in
pop
push
daa
adc
pusha
xor
add
test
and
mov
cmp
test
inc
xor
and
test
lahf
push
ss
dec
(bad)
loopne
pop
xor
test
loopne
inc
jge
and
inc
sbb
add
mov
mov
idiv
pop
dec
lea
jbe
add
call
lds
lods
jns
add
stos
cdq
iret
js
adc
cmp
push
add
das
adc
sub
clc
sub
out
pop
pushf
mov
pop
rcl
add
fld
lock
pop
sbb
push
sbb
fnstenv
sbb
mov
add
push
mov
xor
jle
js
inc
(bad)
arpl
test
inc
mov
popf
pop
dec
aas
push
cmp
js
lahf
sub
sbb
jno
aad
mov
xchg
nop
pushf
cmp
imul
xchg
add
xor
nop
in
xchg
iret
in
cmps
mov
sub
mov
cmp
aam
icebp
pop
sbb
mov
or
sar
inc
push
jns
test
mov
retf
push
inc
mov
mov
(bad)
lock
clc
or
xchg
push
dec
fs
mov
call
sub
scas
stc
enter
pushf
fs
xlat
mov
mov
ds
pop
jle
pop
mov
in
and
jae
sub
(bad)
jge
sbb
xchg
sbb
push
xchg
pop
mov
ret
fwait
xchg
shl
enter
cli
sub
push
(bad)
jns
lahf
add
dec
mov
dec
inc
mov
mov
mov
bound
nop
int
(bad)
push
jns
in
loopne
sbb
jecxz
es
mov
cmp
lods
jl
sbb
pop
fs
addr16
xchg
rcr
sub
scas
(bad)
cmp
dec
xchg
cmp
cmp
fcom
int
mov
xchg
cdq
(bad)
sub
xor
pusha
cmps
xlat
call
jp
cwde
mov
mov
stos
and
push
cmp
mov
mov
and
xor
sbb
aaa
inc
das
rcr
test
or
cli
dec
popa
jle
movs
mov
shl
mov
push
cmp
xlat
mov
(bad)
hlt
xchg
jp
dec
rcl
loopne
pop
lea
aam
test
cmp
jae
ret
repz
imul
scas
dec
(bad)
inc
and
hlt
cdq
sub
pop
iret
jl
mov
lock
ret
in
adc
jne
in
pop
stos
push
sub
ja
or
xchg
pusha
nop
ins
cli
mov
push
movs
cmc
push
and
ret
jl
dec
push
and
out
add
add
xchg
pop
inc
push
fwait
test
mov
jmp
pop
sti
addr16
jne
dec
fwait
cdq
les
dec
mov
scas
sub
pop
pusha
ins
mov
mov
mov
jmp
cmc
nop
xor
xor
adc
jecxz
pop
pop
xor
mov
test
jae
cdq
mov
gs
inc
pop
sub
mov
(bad)
mov
retf
push
cmp
and
mov
push
and
inc
push
pop
fwait
(bad)
mov
test
jecxz
jbe
mov
pop
and
sbb
push
pop
out
pop
or
pop
mov
adc
lea
cmp
test
push
mov
jbe
sar
push
lahf
push
adc
jnp
xor
icebp
jmp
cwde
xchg
inc
test
fsub
shl
adc
mov
or
in
int
out
mov
mov
scas
fnstsw
dec
pusha
(bad)
push
icebp
addr16
lahf
sub
sbb
sbb
mov
rcl
cmc
push
pop
cmps
sub
pop
mov
jecxz
ds
test
imul
nop
inc
jne
mov
out
xchg
mov
push
mov
sbb
das
mov
or
xchg
outs
psubq
movs
push
cs
(bad)
xchg
ror
pop
pop
stos
(bad)
aas
fistp
cmovb
or
mov
cs
(bad)
jbe
adc
cmp
xchg
lods
jae
stc
sub
enter
pop
push
bound
call
and
mov
and
xchg
addr16
sbb
repnz
sahf
xchg
xor
pop
push
cmps
jmp
jnp
dec
in
cli
cmp
lods
inc
and
out
adc
adc
dec
push
mov
lahf
xchg
mov
dec
repnz
std
lods
cmp
cli
aas
ficomp
movs
shl
push
sbb
add
int
fld
popa
lods
cwde
aaa
div
imul
inc
es
cmp
fadd
jne
faddp
and
push
lods
mov
pop
mov
pop
xor
dec
pushf
popa
(bad)
nop
in
and
loop
dec
cmps
ret
in
addr16
cli
ret
sub
icebp
ficom
dec
inc
push
push
in
lahf
adc
pop
repz
pop
xchg
mov
enter
cld
test
lods
mov
xor
jnp
cmc
mov
xor
ret
push
inc
xor
sbb
jnp
jp
out
leave
xor
js
cmp
out
pop
fst
mov
or
ins
fldenv
cmp
lea
std
addr16
ins
(bad)
fcos
push
sub
pop
dec
and
or
or
jg
ja
aas
jne
outs
inc
jne
or
loopne
pop
xor
xlat
mov
(bad)
std
push
fild
repnz
cmp
pusha
repz
dec
out
mov
dec
xchg
push
std
imul
push
mov
inc
mov
xor
jb
sbb
inc
push
repz
mov
sahf
add
jno
imul
addr16
dec
aad
cmp
popf
inc
push
sbb
stc
cmp
inc
xchg
xor
fs
cdq
add
or
and
in
inc
jae
jg
mul
fcmovb
mov
stos
sub
test
add
jecxz
lods
cld
mov
cmps
dec
mov
ins
adc
push
dec
mov
ss
sbb
cmp
or
sub
and
mov
push
sub
sbb
mov
lods
pop
xor
fs
push
outs
jmp
rcr
fs
xchg
mov
ret
mov
or
stos
shr
add
test
pop
jmp
add
dec
retf
xor
out
sahf
ds
mov
pop
mov
inc
push
pushf
jno
sub
(bad)
out
stc
jnp
retf
in
pop
jg
je
push
mov
or
sbb
push
xchg
loopne
add
pop
xor
fisttp
sbb
out
dec
sbb
mov
cwde
jnp
idiv
(bad)
stos
test
(bad)
out
inc
cmp
mov
enter
or
fucom
add
cli
repnz
outs
jno
xor
push
out
pop
mov
out
jge
lods
xor
mov
std
(bad)
adc
bound
cmp
(bad)
add
int3
cmp
push
rcl
rol
push
imul
xchg
movs
mov
fdivr
cmp
adc
(bad)
icebp
adc
aam
jo
fcmovbe
or
push
inc
ror
daa
mov
jo
xchg
mov
jno
add
loopne
ja
add
mov
xchg
(bad)
pop
pop
pop
jb
jnp
mov
(bad)
or
ret
(bad)
inc
mov
push
test
(bad)
sub
test
jmp
test
ss
sub
jg
pop
mov
mov
push
addr16
sub
lods
popf
jp
inc
repnz
jo
aaa
lods
pop
adc
xchg
mov
popa
push
mov
cli
jo
retf
arpl
stos
in
adc
inc
mov
sub
pop
or
cwde
sti
dec
adc
retf
(bad)
fcmove
and
mov
stc
mov
sbb
aas
sti
data16
mov
je
add
fldz
sbb
jnp
(bad)
pop
pop
jne
jmp
movs
movs
ret
fistp
adc
rcr
(bad)
xchg
mov
push
cmp
cmp
rol
adc
cmp
nop
ja
imul
shl
cmp
inc
cmp
dec
mov
aad
loope
mov
lea
adc
ja
repnz
lock
cli
cld
and
sbb
jae
retf
xchg
mov
aad
xor
dec
dec
test
loopne
lahf
(bad)
in
dec
push
and
fcomi
or
ins
xchg
xor
lods
or
cmp
adc
aam
push
mov
gs
jne
cmps
test
js
mov
adc
sti
rcl
inc
outs
aad
mov
mov
sbb
mov
call
iret
adc
daa
rcr
xor
inc
lahf
jecxz
lds
retf
aas
xor
and
jle
xor
hlt
or
push
scas
loope
rol
inc
sbb
xchg
xlat
adc
or
fcom
sbb
pop
mov
jo
push
ja
scas
leave
ficom
pop
pop
adc
xchg
inc
add
adc
xchg
mov
mov
mov
sbb
mov
cmp
sub
push
out
cmp
movs
adc
dec
fwait
ss
ret
in
lds
repnz
or
in
pop
mov
dec
add
and
pop
addr16
in
pop
pop
cmp
fsub
add
lock
std
ds
arpl
mov
cmp
test
in
pop
shl
test
add
aam
push
cmc
xchg
dec
pop
ds
adc
jle
(bad)
adc
jl
xor
ja
ins
ins
(bad)
and
adc
cmp
or
sbb
sub
pop
sub
mov
adc
push
dec
mov
mov
inc
fwait
cmp
rcr
inc
outs
int
sbb
imul
sub
xchg
cmps
idiv
add
xor
inc
sub
js
stc
(bad)
loope
test
xchg
pop
mov
popa
sub
and
aaa
cmp
inc
and
cmc
(bad)
or
push
sub
sub
mov
and
pop
mov
jbe
fcom
xor
xor
nop
jecxz
inc
mov
inc
adc
cmp
push
jno
arpl
fs
mov
in
and
lahf
pop
idiv
pushf
retf
dec
xor
daa
sub
mov
push
dec
inc
pop
pop
mov
div
test
aas
mov
es
cmp
dec
ret
push
or
dec
lds
bound
out
jg
ds
pop
sahf
ds
sbb
pushf
jge
pop
inc
sbb
inc
loope
arpl
repnz
in
das
mov
jb
lock
add
jge
sub
ret
das
iret
fst
cmp
add
push
cwde
aam
cmc
dec
loopne
outs
sbb
mov
inc
pop
into
dec
xor
ins
and
inc
xor
fnstsw
adc
out
mov
dec
fs
xchg
cdq
inc
add
fcom
and
outs
shl
sbb
imul
fiadd
sub
mov
mov
sbb
fwait
or
aaa
lahf
adc
in
call
pop
in
mov
mov
icebp
mov
adc
sub
jmp
or
ror
add
aam
jnp
cmp
adc
mov
(bad)
scas
ds
mov
loope
fcom
sbb
cld
mov
stc
xchg
(bad)
jns
pop
stos
mov
pop
mov
inc
push
outs
xor
aas
mov
lds
jo
sbb
(bad)
xor
fisubr
es
inc
push
pop
jae
cmps
dec
mov
xor
and
clc
fist
mov
inc
(bad)
jl
stc
lds
fsubr
int
or
sub
push
mov
pop
arpl
add
test
je
sbb
inc
push
mov
inc
shr
sub
cli
dec
xor
repz
cdq
stos
mov
pop
fidivr
cld
sub
xchg
mov
sbb
pop
scas
ficom
outs
clc
xor
dec
sub
fcom
sbb
leave
out
call
mov
ins
jge
cmps
inc
sub
(bad)
xor
loopne
lods
mov
sbb
push
xchg
fst
pop
outs
jmp
cmps
mov
or
dec
ja
mov
test
pushf
and
das
mov
clc
mov
imul
push
mov
aad
xor
out
jno
sbb
mov
inc
jg
jne
pop
addr16
pop
or
mov
iret
mov
test
(bad)
mov
dec
mov
push
push
mov
xchg
pop
mov
sbb
cli
mov
sbb
mov
test
and
mov
in
mov
mov
xor
ret
popa
pop
call
sbb
retf
jmp
and
push
or
mov
iret
in
mov
test
dec
add
mov
fs
out
add
ds
xor
jno
sbb
jbe
mov
sub
mov
sbb
lds
inc
pop
sbb
or
mov
xor
xor
sub
mov
int
hlt
cmp
stos
jmp
inc
push
xchg
stos
pop
push
or
in
push
cdq
jmp
call
jne
fmul
repz
pop
cmp
xor
aaa
ins
add
in
add
sub
loop
(bad)
jl
sbb
push
jnp
cmp
pusha
dec
addr16
inc
push
cmps
mov
enter
mov
test
sbb
dec
fnstenv
or
into
dec
xor
daa
in
xchg
mov
or
sub
push
add
rcl
icebp
fwait
cwde
or
into
pop
mov
mov
hlt
sar
(bad)
jge
or
(bad)
bound
les
stos
ja
call
jno
mov
pop
sub
jle
xor
popa
jne
fdiv
xor
jne
inc
xchg
outs
and
mov
(bad)
dec
push
dec
cmp
leave
or
stos
imul
or
loope
(bad)
mov
pop
adc
nop
jo
dec
mov
cmp
pop
adc
add
test
and
jmp
fidivr
xor
jo
jno
mul
cli
add
sub
jne
mov
aaa
and
imul
arpl
arpl
es
adc
mov
jbe
push
ins
repz
mov
push
jno
dec
adc
in
dec
cmp
fwait
inc
inc
into
pusha
sub
jl
out
add
das
xchg
cld
in
fsub
dec
ins
imul
outs
sub
sar
jl
mov
and
inc
mov
dec
icebp
jbe
retf
pop
xor
sbb
scas
add
daa
cwde
and
imul
loopne
dec
and
push
or
addr16
inc
inc
data16
retf
repnz
pop
xor
dec
rcl
mov
pop
loope
popa
ins
cwde
into
das
xchg
loop
mov
push
push
fs
mov
or
jns
hlt
xchg
lock
jno
ret
inc
adc
outs
sar
sub
jle
mov
pop
dec
(bad)
mov
outs
aaa
or
fmul
out
lea
int3
sub
inc
std
mov
pop
pusha
pop
(bad)
out
add
rcl
(bad)
int3
hlt
mov
aad
call
test
pop
and
adc
cwde
fwait
inc
call
xchg
not
add
dec
lea
mov
add
jecxz
mov
mov
es
fnstsw
push
xor
sbb
out
pop
pop
test
sub
dec
fstp
mov
stos
cmc
in
push
cmp
dec
adc
call
aas
xchg
cdq
mov
xchg
lds
inc
jb
mov
cmp
imul
stos
sub
(bad)
push
jo
inc
stos
mov
sub
mov
movs
leave
xchg
cmp
pop
in
cmps
xchg
mov
pop
fnstcw
stos
xchg
pop
popa
dec
or
test
movs
sub
jno
mov
repnz
sub
daa
(bad)
imul
mov
test
mov
into
jle
mov
fxch
ret
cmc
mov
stos
pop
aaa
popf
arpl
stc
jne
inc
push
lahf
stos
dec
out
and
cmp
jmp
es
sub
ret
jmp
rol
mov
adc
inc
and
int
jmp
(bad)
iret
movs
into
neg
add
sbb
push
(bad)
xchg
imul
pop
fptan
imul
lock
or
jnp
mov
(bad)
shl
retf
sub
jge
xor
xor
inc
pusha
dec
sub
dec
test
push
jg
cmps
jle
mov
out
mov
mov
mov
pushf
out
nop
xor
sub
xchg
leave
dec
movs
mov
mov
and
sub
in
jb
mov
int
in
enter
or
xor
retf
fidiv
mov
or
fstp
cli
int3
(bad)
mov
push
jb
scas
loopne
sbb
jl
int3
adc
pop
or
inc
xchg
dec
retf
leave
and
add
mov
imul
fxch
(bad)
inc
dec
sbb
cmp
inc
xchg
push
fisttp
pop
int
push
pop
dec
adc
(bad)
push
adc
movaps
mov
push
and
jl
sahf
pop
mov
pusha
inc
jbe
mov
xor
lahf
lea
aam
sub
loopne
call
pusha
cmp
(bad)
pop
mov
pop
les
push
and
xchg
sbb
nop
imul
xor
outs
cwde
mov
cmp
js
add
inc
cmp
lds
sbb
test
inc
jp
inc
or
xchg
shl
das
popa
cdq
fcom
and
nop
or
shl
sbb
or
call
and
into
dec
rol
jmp
inc
xlat
sar
and
jmp
(bad)
xchg
data16
lds
hlt
pop
sbb
and
(bad)
clc
in
jp
fs
jle
mov
jo
jne
jns
pop
sub
gs
cld
mov
sar
sahf
mov
repnz
test
xchg
jbe
cwde
in
shr
in
push
push
mov
leave
adc
aaa
cmp
push
jo
iret
fwait
or
not
or
sbb
jge
mov
adc
imul
repnz
call
fwait
test
fcomp
es
add
xor
push
cwde
pop
scas
inc
and
xchg
push
hlt
xchg
outs
(bad)
push
fdivrp
mov
icebp
call
call
leave
jmp
sub
repnz
mov
push
pop
sbb
adc
aad
mov
ins
aaa
scas
pop
pop
jno
sbb
sub
retf
jne
mov
gs
sar
mov
or
(bad)
std
call
sub
sbb
sub
cmc
jns
out
leave
add
inc
aas
or
ret
xchg
stos
fmulp
cli
divps
fucomi
lods
sub
jbe
pop
jmp
xor
mov
sbb
mov
mov
(bad)
sub
ret
les
jno
scas
mov
fwait
test
xor
push
adc
mov
dec
cs
int3
(bad)
mov
push
arpl
cmp
in
and
pop
in
nop
sub
mov
mov
cwde
cli
int
sbb
inc
outs
call
pop
xchg
rcr
mov
pop
cli
fcom
push
retf
(bad)
into
xor
jbe
pop
cs
mov
je
mov
pop
js
or
repnz
mov
stc
lods
sbb
scas
je
sbb
(bad)
retf
or
enter
add
inc
dec
sub
dec
lock
test
pop
push
and
(bad)
and
test
ret
xor
imul
inc
xchg
sti
sbb
mov
into
popa
gs
sub
mov
mov
inc
scas
retf
add
outs
rcl
data16
das
xor
sbb
aad
leave
add
enter
and
call
iret
push
data16
inc
shl
test
push
adc
xchg
jns
loope
inc
mov
addr16
sub
arpl
lods
cmps
jnp
int
push
or
pop
jge
in
or
in
mov
test
xchg
add
mov
inc
jbe
or
fcmovu
enter
(bad)
mov
out
jmp
jo
dec
pop
lea
inc
cld
popf
and
add
or
inc
fimul
gs
dec
push
mov
or
lods
ja
into
push
fisub
out
pop
cdq
ins
div
test
outs
popf
cli
jnp
cmc
inc
or
xchg
pop
(bad)
xchg
mov
int
lds
out
xchg
loopne
gs
xchg
push
jge
cmc
lahf
ror
clc
(bad)
scas
pop
adc
pop
mov
cld
inc
jge
call
mov
mov
cmp
push
int
push
hlt
fisubr
jnp
pop
call
daa
sbb
test
popf
push
inc
call
jne
rcr
ja
or
add
ins
popa
cdq
out
icebp
jmp
push
sub
xlat
jle
test
shr
inc
in
pop
mov
or
std
push
(bad)
cmc
outs
leave
mov
mov
ret
xchg
aas
and
(bad)
out
sbb
pop
stc
jae
cmp
sti
repz
dec
mov
out
je
push
pop
nop
ja
bound
and
es
sbb
dec
cld
shl
push
push
xchg
xchg
bound
shl
leave
mov
push
rcr
stos
retf
ja
jmp
cmp
mov
movs
enter
sub
in
loopne
inc
push
leave
fidiv
mov
jne
icebp
leave
sub
xor
push
adc
retf
aaa
jns
push
pusha
gs
inc
lahf
cdq
jp
(bad)
dec
ret
pop
inc
push
adc
test
std
and
(bad)
pop
cmc
jo
xchg
jecxz
mov
sbb
loopne
xchg
loope
mov
nop
in
into
mov
ffreep
push
inc
pop
inc
scas
adc
test
call
int
(bad)
in
inc
outs
mov
xchg
neg
push
sub
stc
lahf
jne
outs
movs
lods
jo
sbb
sbb
and
mov
loopne
pop
idiv
pop
out
sti
adc
loope
push
loopne
push
mov
cdq
pop
(bad)
jge
nop
or
ds
test
mov
jp
test
std
lods
ss
repz
dec
xchg
xchg
pop
adc
ins
cs
mov
xor
or
sub
das
cmps
fs
adc
sbb
mov
rol
les
adc
movs
je
push
lds
push
xchg
call
push
mov
xchg
retf
aam
js
mov
out
aam
sub
call
std
scas
nop
test
fsubr
jbe
adc
sahf
imul
pop
iret
and
jae
xor
mov
aaa
pushf
inc
jp
mov
les
or
movs
rcl
outs
xchg
or
outs
cld
fst
fdivr
leave
rcl
ja
(bad)
and
iret
and
mov
cmp
sub
(bad)
push
iret
fwait
inc
xchg
mov
xlat
push
outs
(bad)
(bad)
mov
dec
jmp
mov
add
mov
stc
test
mov
test
cmp
icebp
dec
xor
xor
(bad)
idiv
out
outs
(bad)
pusha
cmp
les
das
fmul
lods
and
sub
and
ror
mov
cmps
imul
(bad)
cmc
in
sbb
adc
sub
fstp
push
sbb
cmp
lock
pop
outs
lahf
out
daa
fwait
push
cmp
fs
clc
push
mov
scas
dec
mov
push
popf
je
mov
sub
dec
or
dec
pop
inc
fld
xlat
mov
ss
cld
inc
pop
lds
jmp
pop
rcl
pop
clc
jle
push
dec
adc
in
push
and
jmp
aad
cs
mov
inc
pushf
push
or
mov
jnp
mov
fadd
imul
sbb
pusha
add
and
dec
sbb
imul
push
or
das
jg
ss
push
neg
mov
fisttp
mov
mov
push
xchg
scas
mov
dec
das
shl
mov
xchg
in
arpl
add
cmp
jecxz
dec
out
(bad)
sbb
lahf
dec
out
jno
loope
mov
arpl
and
jo
out
push
xlat
sbb
jo
mov
pop
fistp
inc
out
mov
dec
call
cmp
retf
inc
ret
and
push
sub
call
sub
sbb
fisubr
push
mov
lar
sbb
int
popa
cmp
repnz
adc
call
je
daa
push
push
and
xchg
adc
sub
push
jmp
dec
pop
or
sub
fisubr
cmp
mov
push
xor
cmp
js
or
data16
adc
adc
in
xor
add
call
out
ret
gs
mov
cmp
pop
nop
push
mov
fidivr
popa
call
test
fnstsw
ja
jmp
push
retf
adc
jbe
and
push
aad
mov
test
loope
or
inc
adc
push
nop
pop
mov
nop
xor
daa
mov
and
push
out
bound
div
inc
cmp
test
int3
pop
pusha
pop
add
popf
xchg
(bad)
xlat
and
mov
push
imul
loopne
xchg
jbe
inc
inc
dec
test
aam
es
sub
dec
loopne
fcmovne
int
sahf
xchg
inc
push
mov
sub
mov
dec
xor
push
xlat
es
addr16
test
clc
dec
fwait
outs
outs
js
jnp
jp
fcom
dec
not
xor
adc
nop
mov
inc
pop
aas
(bad)
mov
mov
mov
dec
(bad)
pop
mov
adc
push
xor
cdq
lock
mov
loope
inc
or
shl
call
push
inc
xchg
adc
test
loope
pop
cs
loopne
jae
jbe
fld
retf
sbb
hlt
jb
xchg
jb
push
lea
retf
shr
or
dec
sbb
inc
ja
pop
jno
adc
cmp
js
stc
imul
inc
sub
repz
adc
(bad)
push
push
in
adc
jo
dec
ins
add
sub
cmps
sbb
mov
aas
sub
fist
push
mov
mov
dec
pop
cmp
arpl
lods
dec
pop
repz
test
out
push
push
jle
lock
and
push
loop
adc
jle
jbe
add
or
lods
push
pushf
sub
and
ins
cmp
addr16
xor
jp
inc
aad
test
outs
shl
inc
jl
and
test
ins
jnp
xchg
adc
mov
ins
mov
stc
lds
or
scas
push
mov
pushf
ins
xor
movs
dec
pop
paddd
scas
ins
cwde
sbb
pop
movs
cli
and
sub
fld
cdq
mov
inc
into
add
pop
xor
pusha
pop
inc
scas
mov
fstp
mov
ja
sti
mov
mov
movs
jg
mov
push
scas
in
and
mov
inc
push
adc
xchg
jl
jmp
cwde
mov
add
addr16
jmp
pop
fisttp
or
and
in
fidivr
push
xor
pop
cmp
inc
cmp
retf
rcl
aam
dec
sub
sub
jae
fwait
xchg
in
mov
(bad)
mov
adc
push
push
das
xchg
imul
imul
popf
and
xor
mov
loop
scas
addr16
cmp
inc
cmps
and
inc
mov
pop
push
scas
jnp
push
pushf
sbb
jne
ret
push
out
push
dec
push
cwde
cmp
xchg
sbb
gs
sbb
inc
sbb
int3
hlt
xchg
fcom
push
sbb
fidivr
js
rcr
iret
jbe
in
lahf
xchg
pop
cli
xchg
fs
ds
lock
pop
mov
xor
xchg
xchg
mov
lahf
mov
xor
cmp
jmp
dec
cwde
push
leave
sub
mov
dec
xor
icebp
mov
ret
popa
gs
sahf
push
mov
das
cs
sbb
sub
xor
mov
mov
add
inc
adc
push
shl
adc
mov
dec
dec
and
add
jmp
xchg
jle
mov
std
mov
adc
outs
cmp
sub
in
inc
bound
push
loope
and
call
mov
xchg
inc
cli
mov
xchg
inc
jmp
mov
lods
mov
fs
or
push
xchg
data16
cmp
push
std
dec
and
jo
(bad)
dec
jmp
scas
and
sbb
jmp
sub
jp
mov
mov
mov
xor
loope
fsub
out
jp
adc
mov
in
leave
pop
out
jb
das
or
sbb
inc
ins
cmps
xchg
scas
cmp
into
dec
and
sti
ins
cmc
retf
in
jge
add
iret
pop
cwde
pop
addr16
push
std
hlt
fs
callw
inc
fptan
ret
repz
bound
mov
movs
mov
push
xor
mov
or
jne
lods
mov
in
div
push
leave
pop
jns
pop
cmp
jbe
inc
es
dec
gs
xor
out
out
add
sub
sbb
scas
push
xor
cld
add
cdq
cmps
jmp
and
xor
out
mov
dec
mov
das
jbe
jnp
enter
pop
cs
stos
push
and
div
(bad)
dec
ins
div
call
cld
mov
loopne
nop
cdq
sbb
cmp
and
clc
dec
bnd
jb
mov
sbb
fild
popf
mov
mov
leave
add
repnz
push
cwde
push
daa
cmp
mov
add
push
sete
stos
ror
test
dec
jbe
in
imul
pusha
xor
pop
rcl
cmps
movs
xor
aam
cs
(bad)
mov
sbb
sbb
in
shl
sbb
das
dec
inc
iret
ins
mov
sbb
fs
cdq
pop
mov
xor
sub
test
(bad)
ds
mov
stos
fld
(bad)
leave
sti
cmp
cmps
shr
mov
(bad)
xchg
lahf
gs
add
adc
(bad)
call
cld
loop
fucomi
cmp
xor
in
dec
mov
mov
test
pusha
and
repz
jbe
mov
dec
rcl
inc
leave
ror
test
(bad)
sub
(bad)
cmp
mov
sahf
test
sbb
cdq
sbb
std
adc
iret
out
out
cmp
bound
add
popf
test
stos
and
rcl
pop
inc
cmp
out
stc
adc
loope
or
leave
jg
xchg
and
or
xchg
sbb
aad
sti
ins
data16
std
adc
test
enter
(bad)
js
cmp
mov
repz
call
pop
cwde
aad
pop
xor
sbb
or
cmps
pop
inc
cmp
sub
jecxz
les
or
ja
(bad)
cmp
sub
test
int3
ja
mov
jbe
mov
hlt
pop
int
imul
adc
sbb
aaa
je
ret
div
push
aam
jecxz
and
jle
mov
cmp
out
adc
fnstenv
or
or
hlt
retf
iret
jo
cmovge
jg
js
pushf
jg
pop
inc
mov
xchg
mov
push
mov
push
cwde
cmp
ret
push
sub
xor
inc
cdq
or
lds
mov
addr16
loope
inc
mov
pop
and
mov
hlt
fcmovne
jbe
mov
lds
shr
mov
mov
mov
mov
mov
xchg
mov
mov
rol
movs
mov
inc
sti
(bad)
adc
jle
or
out
out
sbb
lods
xchg
mov
adc
retf
(bad)
mov
push
pop
inc
pop
adc
xchg
js
jne
cs
push
push
(bad)
dec
push
sub
sbb
cmp
mov
cmp
nop
lahf
push
outs
and
clc
pop
cmp
jbe
test
loopne
out
pop
imul
stc
jle
mov
lds
add
dec
mov
dec
xor
push
pop
mov
mov
xlat
sahf
add
sti
jp
call
sub
stos
imul
dec
pop
call
loope
mov
xor
mov
mov
imul
mov
pop
cmp
int
mov
xor
xor
push
mov
cmp
or
xor
retf
mov
xor
mov
int3
jae
in
mov
lea
and
jmp
lds
mov
enter
jmp
add
je
inc
out
std
xchg
mov
mov
xor
cmc
adc
inc
xlat
mov
stc
ja
push
mov
or
push
clc
les
sub
cs
pop
in
pusha
push
and
retf
jb
and
xor
inc
cwde
push
call
mov
mov
(bad)
xchg
lea
pop
mov
dec
pop
pop
or
push
push
mov
in
mov
sub
fsub
nop
mov
je
and
pushf
xor
mov
push
pop
jecxz
add
arpl
push
imul
scas
jmp
outs
mov
cli
jmp
jmp
fwait
daa
mov
sti
push
ror
fild
and
fcom
cmps
dec
inc
jl
inc
fimul
cmp
clc
(bad)
sub
je
or
inc
cwde
xor
lods
mul
fbld
addr16
push
loopne
loopne
xor
gs
ds
dec
xchg
cmp
mov
or
xchg
mov
and
inc
and
bound
out
retf
xchg
xor
out
scas
pop
xor
sub
inc
cmps
inc
ficom
fisttp
loopne
xor
icebp
(bad)
repnz
mov
aaa
inc
call
inc
retf
push
mov
imul
inc
jbe
add
xor
inc
retf
sahf
mov
hlt
out
sub
lods
test
lds
xor
mov
fnstenv
ja
push
mov
fdiv
shl
ds
sbb
and
jmp
call
cmps
mov
gs
(bad)
out
jl
sahf
int3
lods
stos
fs
cli
sub
xchg
stos
test
xor
dec
add
push
push
loope
push
repz
sbb
push
mov
dec
rol
and
mov
pop
rep
and
sbb
xchg
jge
xor
mov
pop
push
daa
iret
or
(bad)
inc
sbb
jo
lahf
pop
jle
ds
pop
mov
shl
sbb
ins
out
xor
das
pop
ret
inc
dec
retf
out
scas
cli
push
dec
mov
xchg
ins
dec
inc
aam
aaa
cmp
sub
lds
pop
test
mov
mov
sbb
fnsetpm(287
stos
add
xor
fistp
aam
out
jg
adc
xor
mov
push
jmp
xchg
mov
cmp
nop
les
(bad)
ror
sub
pop
adc
stos
push
out
aaa
push
mov
es
jmp
jmp
and
sti
sub
neg
mov
mov
lds
jmp
mov
pop
mov
add
retf
jmp
js
aaa
nop
mov
fdiv
ret
sub
xor
cwde
stc
loop
add
mov
out
call
aam
add
mov
das
popa
lock
sub
les
std
inc
dec
mov
sub
mov
cli
hlt
pop
fwait
cmp
jae
(bad)
and
sub
dec
sub
cmp
xchg
loope
test
inc
jns
inc
add
mov
iret
jmp
cmp
push
shl
xchg
sub
loopne
mov
arpl
ins
dec
xchg
int3
js
adc
xchg
mov
ins
jmp
mov
movapd
inc
adc
pusha
jmp
lods
loope
sahf
cmp
cmc
cmp
push
xchg
cmc
loop
lock
repz
pop
lea
mov
hlt
xor
aad
cdq
pop
popf
shl
add
aam
mov
loop
js
xchg
fiadd
mov
(bad)
cwde
outs
ror
mov
cmps
and
inc
and
pop
retf
pop
pop
xor
pop
jb
mov
push
add
cdq
(bad)
imul
or
adc
sub
or
out
repnz
cmps
mov
push
inc
(bad)
mov
push
pusha
or
nop
or
adc
cmp
cmp
jmp
(bad)
aaa
mov
push
sub
xchg
aam
scas
imul
sbb
sub
push
push
inc
pop
push
into
pusha
sub
neg
(bad)
pop
pop
xor
adc
inc
mov
fiadd
push
push
or
cmp
pushf
jge
ins
aas
pop
retf
or
inc
fadd
sti
mov
or
cdq
shl
push
loopne
pop
push
aad
jb
pop
add
push
pop
jae
jg
addr16
stos
jo
lods
gs
retf
lods
sti
rol
push
je
stos
adc
outs
cmp
in
mov
loopne
outs
cmp
xor
cwde
ret
xchg
mov
mov
xchg
fadd
retf
adc
sbb
sbb
out
outs
jae
lds
call
ret
(bad)
cmp
(bad)
sbb
call
cmp
scas
xchg
or
xchg
and
adc
or
cmp
out
push
addr16
inc
add
es
and
fwait
pushf
cli
das
or
push
scas
into
push
lea
and
pop
sbb
mov
out
sbb
popf
sbb
jl
cmp
mov
out
sbb
xor
or
fist
inc
out
(bad)
pop
ds
mov
(bad)
pop
(bad)
sub
test
push
sets
in
sbb
inc
or
cmp
imul
cmp
sub
fiadd
lock
jo
std
les
(bad)
test
mov
fsubr
sar
clc
inc
aad
sub
fcom
sub
nop
adc
int
mov
dec
out
and
pop
mov
add
lahf
mov
fcom
push
addr16
sub
mov
fiadd
daa
aad
xor
xchg
lea
cmp
dec
mov
dec
cmp
ret
ds
sbb
or
(bad)
stos
jns
jns
repnz
inc
rol
mov
mov
cld
jmp
xchg
aaa
push
jg
movs
mov
(bad)
pop
arpl
sahf
imul
xchg
push
fucomip
nop
out
and
push
or
out
imul
je
mov
xchg
jb
ins
test
sahf
and
xor
iret
push
push
cmc
in
into
retf
sub
add
or
cmp
add
das
movs
dec
pushf
push
and
out
push
shl
inc
xor
lahf
stos
xor
mov
push
mov
sbb
outs
(bad)
out
dec
movs
retf
iret
dec
popa
push
add
addr16
xor
not
and
pusha
sub
retf
sub
pop
dec
sbb
frstor
cdq
nop
jnp
inc
cmps
dec
sub
test
imul
mov
(bad)
jae
jnp
or
out
jae
aam
cmp
loope
loopne
pop
ins
xlat
repz
bound
aas
xor
dec
jae
dec
rcl
pop
inc
out
jle
push
sub
(bad)
aas
rep
jmp
retf
(bad)
cwde
cmp
mov
stos
cs
sub
xlat
mov
dec
mov
dec
movs
jb
jl
call
ret
sub
push
inc
jmp
lahf
shl
dec
out
aad
mov
call
jns
xchg
cmp
and
mov
fsub
xor
mov
jne
mov
mov
xchg
adc
dec
(bad)
fsub
mov
mov
or
in
int3
test
xchg
xchg
shr
xchg
or
add
pushaw
fcom
data16
sub
push
inc
pop
jl
fdivr
pop
mov
pop
adc
out
ret
jl
or
sbb
ins
repz
xchg
sub
lahf
aad
leave
fwait
jmp
pop
test
inc
mov
push
test
arpl
clc
mov
pop
std
xor
mov
add
fwait
xchg
cmp
mov
std
sahf
push
mov
jae
jl
xor
test
jl
outs
icebp
xor
sahf
pop
test
push
adc
xchg
dec
adc
mov
retf
iret
imul
pushf
ins
jno
mov
loop
push
je
jmp
sbb
jb
mov
pushf
adc
loope
les
and
inc
popa
sbb
shl
adc
retf
into
fldenv
outs
cs
jne
ret
sub
and
loop
int
pop
aad
push
sbb
retf
push
mov
pusha
push
dec
or
xlat
lds
fild
lahf
or
sub
add
sti
mov
xor
scas
push
sub
sub
retf
add
cmps
rcl
push
jmp
push
fwait
xchg
inc
dec
and
in
movs
je
imul
ror
sti
sub
mov
add
push
ficomp
pop
aaa
or
push
les
mov
push
mov
jb
sub
dec
pop
pop
pop
das
(bad)
push
es
mov
aaa
dec
xchg
cmp
push
sar
mov
adc
je
out
cmp
(bad)
in
ret
mov
cmp
mov
lock
adc
push
dec
std
sar
int3
in
les
inc
or
mov
sbb
jge
stos
das
in
(bad)
push
push
mov
imul
xor
aaa
cdq
ja
aas
push
sbb
(bad)
push
mov
movs
pop
js
mov
mov
sar
mov
loop
adc
(bad)
dec
retf
movs
cmp
inc
mov
enter
cli
cmp
leave
push
rcl
cmp
rol
push
xchg
sub
inc
ja
push
ds
pop
dec
jne
mov
ds
xchg
jle
out
loopne
jno
mov
gs
and
jecxz
pop
cli
imul
xchg
lods
or
push
cmp
out
call
inc
or
sbb
pop
test
cmp
fisub
js
fisubr
cmp
cmp
mov
mov
xor
repnz
fimul
xchg
jo
cmps
cmp
cs
popa
mov
inc
leave
dec
xor
loope
imul
jl
movs
and
pushf
scas
push
adc
adc
fs
fwait
jmp
retf
daa
mov
js
inc
ins
imul
not
or
fnsave
(bad)
loop
sub
daa
lds
test
inc
fld
int
add
and
add
test
pop
stos
sbb
retf
clc
ret
out
fistp
jmp
or
mov
mov
dec
cmps
call
cmp
sbb
pop
ror
pop
cmps
cmp
inc
dec
and
in
test
or
shl
inc
and
push
repnz
(bad)
out
ja
xor
cmps
gs
hlt
sub
lea
cwde
add
fstp
mov
sub
es
mov
push
arpl
dec
mov
sbb
cmp
out
mov
mov
out
jo
pop
sbb
lods
call
ret
sbb
and
pusha
jmp
in
xor
add
xchg
shr
imul
sbb
icebp
dec
xchg
les
cwde
pop
push
adc
ret
dec
shl
mov
xlat
and
cmps
push
cmp
int3
clc
rol
and
int3
push
call
mov
(bad)
outs
dec
sub
cmps
push
sub
mov
rcr
jle
aam
ficomp
mov
jmp
sbb
and
add
mov
bound
nop
in
jne
inc
in
pop
mov
mov
std
(bad)
(bad)
add
sub
cwde
popa
fadd
cmp
outs
or
push
mov
and
(bad)
pop
nop
aaa
push
cs
or
push
cmp
pusha
popa
and
sub
pop
movs
jno
push
push
cmp
jle
movs
dec
pop
das
pop
jae
cmps
stos
dec
test
fstp
mov
mov
sbb
xchg
enter
shl
push
inc
rcr
scas
addr16
shr
pop
xor
fcmovu
jno
jns
sub
dec
push
fsub
lods
shr
cmc
mov
popf
cmps
int
pop
adc
bound
xchg
or
push
inc
call
or
shl
cmp
test
repz
sbb
test
aaa
sub
(bad)
psrad
call
lds
pop
mov
aas
cmp
cmp
sbb
jno
mov
add
dec
mov
adc
std
dec
mov
push
cdq
sbb
xor
jae
xchg
inc
pop
pop
or
jmp
push
adc
enter
mov
imul
mov
and
xchg
fisub
push
icebp
push
(bad)
popa
fst
pop
out
push
pop
(bad)
or
les
jae
jmp
iret
aam
aaa
(bad)
xchg
das
test
ret
xor
outs
jbe
or
mov
sub
push
pop
mov
xor
div
mov
in
div
and
aad
mov
or
jbe
dec
mov
pop
jno
mov
rcl
(bad)
outs
retf
jmp
movs
adc
jg
ror
mov
or
stos
jmp
in
pusha
movs
loope
cmps
rcl
sub
ret
sub
adc
push
in
xchg
shl
mov
push
cmps
ss
jmp
pushf
or
xchg
pop
dec
arpl
push
pop
arpl
pop
ret
pop
stos
pusha
jecxz
lock
aaa
push
das
jae
das
push
mov
xor
and
(bad)
sbb
stos
movs
sbb
pop
aas
push
push
and
adc
rol
lods
stos
bound
mov
loope
lods
xchg
movs
jmp
mov
lahf
scas
cmp
(bad)
pop
cmp
jmp
sub
stos
xchg
cwde
adc
test
jle
mov
pop
add
aad
jbe
fsubr
jne
mov
idiv
push
test
mov
sahf
scas
shr
pop
xchg
loopne
and
fwait
sub
(bad)
shl
sub
clc
push
xor
(bad)
cdq
jnp
daa
inc
mov
arpl
(bad)
dec
sti
push
les
xchg
mov
cmp
(bad)
clc
adc
xor
jnp
mov
jnp
imul
loop
ror
jg
pop
pop
loopne
or
mov
push
stos
fbld
leave
int3
imul
push
loope
dec
bswap
cmp
mov
arpl
and
aas
dec
call
fisub
(bad)
in
retf
mov
or
push
sub
jno
jl
stos
mov
(bad)
sar
movs
pusha
mov
fbld
mov
das
adc
sar
out
fwait
cmp
ins
mov
push
mul
jmp
dec
outs
sbb
or
and
(bad)
xor
push
adc
jne
imul
xchg
dec
mov
push
cmp
daa
jns
rcr
in
and
ins
loope
jmp
push
xchg
mov
inc
mov
fwait
shl
pop
shr
shl
xchg
icebp
jns
cmps
out
mov
jg
mov
sub
(bad)
outs
jbe
mov
sub
mov
ins
lds
cmp
inc
retf
pop
dec
sbb
push
test
mov
jno
adc
add
call
adc
sub
fmul
push
bound
mov
in
xchg
movs
leave
and
(bad)
repz
inc
sub
jno
dec
jp
retf
mov
mov
das
add
pop
retf
ror
rcr
jle
sub
retf
stos
pusha
inc
inc
adc
or
xchg
movs
adc
repz
outs
lds
outs
xor
(bad)
cmc
int
push
js
cwde
movs
ja
lock
ins
scas
iret
xchg
test
xchg
push
fwait
jle
lahf
xchg
aad
jns
inc
iret
xchg
mov
xor
ins
inc
inc
inc
(bad)
pop
fwait
adc
shl
test
mov
cmp
fld
dec
mov
aad
dec
out
mov
ret
and
outs
pop
sub
into
push
imul
ja
fsub
ins
sub
mov
mov
mov
(bad)
cwde
push
leave
sbb
dec
ficom
cdq
sub
xor
ins
pop
inc
(bad)
or
mov
jb
xor
ins
xchg
cmp
pop
out
es
inc
mov
add
ins
pop
jl
push
inc
jg
mov
sbb
pop
movs
xchg
cmp
fdiv
push
push
lea
cs
dec
(bad)
imul
stc
or
inc
test
fldcw
sub
xor
jne
jnp
imul
cmps
sub
jge
push
mov
stos
and
fisubr
pop
mov
pop
fst
stos
arpl
les
inc
mov
imul
or
mov
add
leave
dec
and
xchg
or
int
cmp
jo
dec
aam
lea
les
jge
cmp
xor
push
pushf
loopne
adc
inc
push
cmp
sbb
add
push
outs
mov
jl
xchg
add
adc
dec
mov
jl
jae
mov
daa
cmp
popa
jl
mov
into
jge
loope
adc
stos
shr
inc
dec
mov
adc
add
jbe
pop
lahf
lea
push
push
adc
movs
add
iret
sti
test
retf
test
fisub
xchg
lds
pop
mov
push
in
mov
mov
lods
loopne
ins
jmp
jo
jmp
adc
sbb
(bad)
xchg
xor
popf
mov
fwait
sbb
dec
sub
(bad)
icebp
cmps
or
pop
push
cmp
push
sub
xor
repz
sbb
add
out
sub
test
test
ja
or
scas
das
int3
jp
scas
mov
add
adc
out
dec
in
cmp
pusha
gs
enter
daa
inc
push
push
std
push
imul
in
ss
or
fdivrp
mov
es
cmps
imul
push
out
sub
sahf
rcr
nop
fldcw
js
(bad)
ins
mov
shl
movs
pop
je
mov
pop
push
mov
std
les
and
inc
pop
or
loopne
mov
cmps
ficom
ret
rdpmc
int
popf
xlat
add
and
inc
push
call
inc
leave
mov
ror
not
popa
and
fwait
movntps
cli
out
das
mov
scas
add
ret
jno
xchg
pop
sbb
test
es
pop
cmps
pop
jae
jecxz
add
fwait
cdq
pop
cwde
dec
fldenv
pop
data16
ficom
xor
ds
les
adc
(bad)
dec
sbb
sbb
mov
xor
ja
lea
loop
mov
sub
scas
cmps
sbb
jg
imul
and
sbb
mov
rol
fidiv
xchg
mov
sbb
dec
aad
in
arpl
sub
or
bound
fbld
aad
mov
inc
sub
outs
bound
seta
pusha
adc
and
repz
mov
xchg
add
mov
xchg
scas
std
or
pop
pop
cld
sbb
das
xor
push
mov
fldcw
in
adc
cdq
sbb
lods
daa
jg
and
add
es
add
imul
int
xor
and
shl
push
sbb
inc
push
mov
and
jae
jae
leave
ds
test
cmc
or
xchg
push
inc
jo
leave
pusha
shr
jbe
add
inc
sbb
jo
add
mov
stc
add
shr
iret
ins
jl
inc
aam
pop
mov
mov
add
inc
adc
cli
mov
cld
push
ficomp
mov
stos
cmp
jo
into
ins
mov
repz
test
mov
test
stc
mov
sbb
pop
adc
mov
mov
xchg
jnp
push
or
fdiv
xor
cdq
ficomp
sub
in
jmp
mov
cs
dec
mov
(bad)
aas
ficomp
loop
mov
cmp
fild
frstor
daa
sub
jb
mov
ds
ret
cld
cwde
dec
retf
jb
nop
cmps
xlat
xchg
xchg
xor
daa
cs
sub
and
ins
inc
lahf
xor
lds
pusha
addr16
push
repnz
push
mov
sub
leave
mov
imul
shl
bt
dec
shl
ror
mov
sbb
movs
or
inc
inc
inc
push
sub
and
jp
into
in
fistp
jg
xor
enter
sahf
push
pop
sbb
mov
neg
cmp
sbb
pop
sub
mov
and
inc
sub
cmp
sti
mov
sbb
jmp
mov
fwait
ins
imul
sub
shl
pop
sti
sahf
pop
out
jp
mov
cli
cmc
fbstp
inc
pop
or
xchg
cmp
inc
mov
(bad)
rcr
ins
push
sub
ds
sbb
push
mov
js
xchg
mov
pop
pop
cld
inc
test
and
and
jne
scas
aas
sbb
adc
xor
out
add
xor
les
add
ja
std
mov
xchg
push
mov
add
pop
pop
or
sub
fdiv
jg
cld
pop
shr
push
imul
(bad)
xchg
pop
imul
mov
fimul
jecxz
mov
sub
rcr
push
mov
ret
xor
loope
push
(bad)
cli
sub
pop
adc
aam
fmul
shl
inc
(bad)
fmul
xchg
in
cmps
adc
dec
jae
push
adc
or
shl
or
sbb
ficom
jg
mov
mov
fimul
arpl
scas
out
cmc
xchg
rcl
jmp
and
call
lds
dec
xchg
movs
gs
and
mov
jge
stos
mov
push
jo
xlat
sub
sar
imul
sahf
mov
sbb
push
push
in
enter
outs
inc
out
aaa
adc
in
scas
je
iret
xor
sbb
cdq
cmp
(bad)
aas
jecxz
push
and
or
pop
ds
xor
push
out
sub
fldenv
outs
loop
cmp
push
out
sub
std
pop
icebp
(bad)
push
ss
mov
adc
movs
mov
mov
xlat
xor
cmp
xor
fmulp
sti
cmp
dec
xor
jmp
xor
adc
jmp
ds
mov
xor
pop
pcmpeqd
pop
and
sub
fisttp
push
inc
add
jge
not
pop
(bad)
iret
(bad)
es
dec
push
adc
push
jb
dec
mov
aad
test
push
xlat
(bad)
imul
int3
jno
stc
push
arpl
js
or
adc
and
in
add
call
jmp
(bad)
cdq
sahf
pop
out
popf
cmp
idiv
xchg
sub
add
push
xchg
dec
jecxz
add
out
fild
mov
cmp
push
push
mov
push
adc
imul
aad
inc
cs
ret
mov
jl
inc
aad
sbb
jmp
mov
and
dec
push
xchg
std
dec
cmp
add
xchg
fistp
pop
test
dec
mov
push
adc
scas
cmp
push
ror
adc
or
add
pop
mov
ins
ss
aam
mov
pop
test
mov
mov
shl
mov
fcomp
cs
ss
mov
mov
dec
sbb
rcl
xchg
mov
not
pushf
rcr
jmp
mov
stos
add
push
push
cmp
or
das
push
mov
(bad)
jb
xor
cmp
xor
sub
mov
(bad)
arpl
xchg
inc
pop
imul
mov
loope
and
loopne
stos
cmp
clc
ja
cwde
fisubr
aas
mov
(bad)
ja
sub
pop
mov
pop
xor
es
and
inc
ds
shl
sbb
sub
adc
or
mov
push
cld
mov
imul
push
test
fdiv
movs
ds
cmp
jbe
and
bound
xlat
test
sbb
push
fst
sub
pusha
neg
hlt
ds
ror
sti
xchg
repnz
dec
mov
pushf
les
jmp
or
fidivr
scas
pop
xchg
cmp
cld
in
mov
bound
(bad)
movs
into
push
mov
mov
(bad)
adc
cmps
arpl
repz
sub
test
test
in
mov
icebp
jg
sub
cmp
js
cmps
cs
add
fimul
push
dec
xchg
dec
loop
and
mov
(bad)
cdq
lock
mov
mov
mov
stos
cld
lods
mov
jb
aas
xlat
iret
shr
dec
out
jl
cmp
retf
mov
xchg
retf
cmp
pop
push
int3
aam
je
push
inc
jae
push
jae
cmp
cs
inc
sahf
test
adc
repnz
test
inc
jo
fwait
dec
fsubp
xchg
mov
pop
inc
pop
pushf
(bad)
js
sub
inc
fmul
ror
cmp
mov
jmp
sbb
stos
fdivr
jp
pop
jmp
jg
add
cld
std
pop
shl
pop
in
cmp
jge
movs
popa
pop
mov
enter
pop
int3
xor
mov
lods
add
or
sub
jbe
ficom
xchg
and
inc
fdivr
mov
sbb
icebp
pop
ds
mov
mov
aaa
je
pop
outs
mov
lea
mov
add
cmp
inc
rcl
pushf
xlat
fwait
and
in
cmps
(bad)
out
sub
or
nop
hlt
inc
and
sbb
scas
retf
mov
mov
call
and
pop
stos
pop
push
hlt
sbb
shl
fstp
pop
pusha
sbb
and
daa
cmp
mov
call
popf
stos
test
jne
into
int
nop
shl
rol
mov
pop
int3
not
cdq
ret
lahf
sbb
and
rol
xchg
arpl
inc
pushf
loopne
stc
xchg
adc
or
and
lahf
dec
leave
push
push
mov
push
jo
xor
push
pop
pop
xchg
push
scas
iret
adc
js
xchg
inc
bswap
mov
and
xchg
dec
ficomp
(bad)
jno
add
xor
sub
call
push
fwait
aam
inc
sbb
xlat
hlt
mov
cmp
jge
cli
bound
inc
neg
mov
jp
in
jns
jnp
mov
(bad)
call
and
loopne
xor
dec
mov
arpl
test
jle
mov
scas
sbb
add
sub
fdiv
adc
xor
stc
adc
adc
jns
aas
dec
cmp
push
sbb
std
inc
xchg
pop
sbb
dec
std
movs
pop
icebp
or
xor
inc
into
js
pop
inc
jae
sbb
xchg
or
sub
sbb
xor
inc
(bad)
push
hlt
lds
xchg
xor
sub
mov
fucomi
or
mov
sbb
xchg
data16
dec
jmp
cmc
gs
sub
adc
inc
xor
addr16
je
in
aam
out
xor
xor
out
jae
jbe
mov
shl
lea
dec
mov
or
fdiv
pop
sbb
adc
int3
clc
fbstp
ror
clc
mov
xor
and
in
fnsave
fimul
and
cmp
(bad)
or
rol
int
push
loopne
jb
aaa
or
mov
inc
ror
cmc
xchg
cwde
(bad)
xlat
mov
pop
fnsave
loopne
loopne
dec
mov
adc
and
ret
fdiv
dec
inc
ss
inc
sub
mov
jp
adc
imul
mov
add
jno
jg
push
imul
mov
xchg
lods
xchg
test
add
pop
in
scas
cmp
pop
lods
mov
bound
aad
jp
cmc
out
adc
dec
sbb
(bad)
call
sbb
and
add
pop
cmps
adc
ins
aad
fimul
js
mov
push
push
cmp
outs
arpl
push
ret
ja
jl
jnp
push
test
mov
mov
ins
ins
out
pop
rcr
nop
sahf
loope
rcr
sbb
or
nop
icebp
mov
test
loop
mov
movs
pop
dec
sub
sub
je
jne
jmp
sub
cmp
xchg
enter
(bad)
fisub
stos
ins
les
push
and
cs
stos
repnz
mov
out
sub
in
aad
pop
aam
push
cmp
fucomi
mov
cwde
popf
adc
pop
jae
pop
retf
sbb
jns
mov
ret
adc
inc
popa
mov
mov
cmp
cmp
xchg
adc
dec
jl
cli
jbe
aaa
aam
dec
pop
pop
jne
into
dec
or
int3
scas
push
das
popa
or
cld
jge
pop
mov
(bad)
in
inc
dec
aam
dec
add
and
adc
add
xlat
and
mov
imul
shl
daa
xchg
sar
ror
stos
sbb
aad
jecxz
sbb
stos
push
das
sub
fistp
mov
mov
lahf
or
mov
iret
test
ret
pop
mov
cli
scas
mov
call
jo
push
jmp
mov
int
loopne
pop
inc
jbe
push
je
shr
sub
dec
lock
adc
ficom
dec
cdq
pop
jl
dec
and
fstsw
inc
mov
xor
(bad)
jns
pop
(bad)
repz
pop
enter
lods
jecxz
adc
xor
lock
test
(bad)
scas
adc
pushf
xchg
sbb
add
inc
test
call
add
pushw
call
loop
pop
jne
cmp
jle
add
cmp
xor
cmp
movs
cs
out
shl
in
sbb
add
xor
cmp
test
mov
es
xchg
int3
(bad)
fbstp
cmp
fs
leave
add
hlt
pop
xor
sbb
xchg
push
add
cmc
iret
sub
push
out
adc
or
arpl
mov
ins
dec
cmp
lods
out
push
adc
mov
icebp
and
fs
movs
push
imul
dec
or
and
mov
fild
repz
pushf
add
sub
(bad)
xor
push
dec
cmp
cwde
rcl
mov
ret
push
pop
mov
push
into
push
es
or
mov
xchg
push
ret
imul
sbb
mov
cmp
xchg
fistp
pop
ins
je
mov
inc
cmp
sub
pop
dec
mov
dec
dec
xchg
push
and
mov
aaa
dec
mov
pop
cmp
push
mov
nop
jno
add
mov
inc
sub
jp
mov
add
sbb
leave
mov
pop
dec
inc
loopne
clc
sahf
add
loope
sub
call
fwait
into
pop
push
mov
retf
sub
addr16
out
inc
lods
mov
sub
mov
jmp
out
mov
xchg
jmp
sub
push
test
imul
jle
jnp
lahf
jns
int3
lods
cld
(bad)
div
jl
cmp
mov
aam
aaa
mov
call
pop
test
jnp
or
repz
xor
xchg
xchg
repz
sbb
data16
cmps
mov
sub
cld
adc
cdq
js
mov
int
cmp
and
push
shl
cdq
ja
stos
outs
cdq
pop
push
jmp
sub
jae
lds
das
inc
je
mov
pop
jge
shl
push
dec
into
movs
fstp
sub
stos
jmp
cmps
lahf
or
inc
xlat
and
into
mov
mov
xchg
idiv
shl
add
or
cmp
test
sub
jmp
mov
hlt
sti
dec
xchg
cmp
scas
pop
fcomp
loope
pop
fsub
cdq
lods
push
pushf
inc
(bad)
shr
xor
fwait
outs
shl
cmc
pop
mov
(bad)
pop
pushf
xor
or
inc
aaa
jl
inc
outs
xlat
fs
jl
enter
shl
loopne
call
inc
sbb
ret
push
stos
jge
mov
cwde
jl
iret
std
xchg
fist
dec
push
fwait
mov
or
hlt
mov
leave
out
(bad)
in
xchg
movs
in
push
shl
mov
icebp
jp
jnp
pop
and
add
into
jmp
dec
out
test
push
sahf
ret
xor
test
bound
jnp
test
dec
test
popf
jg
jmp
je
mov
mov
xor
call
mov
mov
jl
push
mov
jns
push
sbb
add
sbb
sub
mov
jne
jle
cwde
(bad)
cmp
call
adc
push
dec
xchg
cmp
dec
push
repz
or
pop
pop
xchg
scas
das
popa
mov
ret
adc
mov
sub
xchg
out
mov
sbb
sub
cmps
or
fst
repnz
punpckldq
mov
std
outs
shl
cmc
add
cmp
pop
xchg
fadd
pop
(bad)
pop
xchg
cli
pop
sbb
out
movs
movs
mov
fidiv
mov
repnz
sti
xchg
xlat
ror
enter
icebp
mov
cmps
jmp
push
stos
dec
sbb
sbb
inc
inc
pop
sbb
dec
sbb
nop
cwde
jecxz
inc
cmovg
sbb
imul
not
imul
xchg
ficomp
jnp
xchg
mov
(bad)
int
sbb
xchg
ss
adc
imul
inc
(bad)
adc
repnz
out
xor
fisubr
mov
popa
xchg
sbb
out
daa
inc
es
and
sbb
cmp
mov
js
iret
mov
and
pop
adc
push
mov
jns
scas
sti
shr
pop
xchg
fucom
xchg
jmp
add
push
push
test
or
in
enter
jle
mov
mov
lods
jl
pop
in
stc
xchg
and
jecxz
mov
stos
ins
sbb
repnz
adc
dec
fstp
jp
mov
sar
pop
xor
mov
jp
and
fstp
sub
inc
and
adc
outs
xchg
test
inc
aam
je
call
das
and
(bad)
out
es
aaa
cli
mov
add
outs
adc
and
sbb
inc
dec
arpl
dec
outs
sbb
(bad)
ins
sub
sbb
xchg
xchg
xchg
les
test
cwde
pop
and
imul
sub
pop
(bad)
ins
ja
push
mov
xor
mov
push
inc
mov
pop
scas
xchg
js
gs
inc
xor
pop
sar
inc
push
jbe
aad
pop
out
das
xor
ins
add
lock
aam
cmp
xor
imul
xchg
shr
fsub
mov
movs
cmps
push
mov
push
popa
mov
sbb
mov
sti
xchg
mov
mov
mov
addr16
movs
ror
js
mov
xor
adc
das
in
or
test
scas
mov
cli
mov
push
sbb
dec
sub
xchg
jg
test
mov
jne
xor
jmp
cli
mov
add
nop
es
ss
xor
out
jecxz
dec
fst
and
adc
stos
rcr
sub
imul
dec
stc
or
test
cmp
movs
rol
xchg
(bad)
aam
jg
jns
call
cvtps2pi
vmovq
mov
xchg
dec
jnp
add
jbe
in
out
daa
pusha
push
add
shl
jmp
gs
fwait
inc
dec
inc
inc
sar
pop
pop
mov
push
lahf
retf
test
mov
xor
es
icebp
dec
jnp
and
push
add
add
mov
pop
fidivr
push
bound
rol
fwait
or
popf
iret
in
cmc
inc
in
add
add
and
int3
neg
ins
rcl
jo
pop
add
add
cmp
and
ja
cdq
js
fidivr
outs
pop
xor
push
ret
jo
and
lahf
and
adc
jmp
movs
ja
or
xor
or
addr16
pushf
sub
addr16
rol
cs
mov
lods
jl
int3
and
mov
mov
scas
fs
sbb
jmp
sub
ss
pop
out
loop
outs
ja
lahf
lds
repnz
or
dec
sbb
xchg
adc
push
cmps
outs
(bad)
in
aad
sub
xor
fstp
fstp
push
test
call
call
pop
ret
jmp
mov
cmp
retf
cmp
clc
dec
and
adc
mov
mov
cmps
jb
mov
faddp
jmp
and
jo
lods
xor
loope
mov
mov
add
test
mov
add
clc
enter
rcl
add
sbb
dec
movs
enter
jnp
and
mov
test
call
mov
test
pop
xchg
pop
data16
mov
add
call
mov
call
out
imul
mov
(bad)
repz
aas
cmp
imul
hlt
icebp
add
jg
mov
outs
sub
ror
xor
mov
mov
inc
fucomi
and
mov
sbb
lahf
jle
pop
xor
pop
outs
movs
cmp
xor
add
jmp
xchg
jo
or
movs
(bad)
(bad)
adc
mov
cmps
xchg
adc
stc
add
loopne
mov
scas
dec
dec
call
xor
(bad)
sub
cmps
stos
aam
aaa
repnz
fdiv
fs
lods
or
mov
cmp
xchg
outs
rcl
push
xchg
fdiv
add
inc
inc
shl
nop
(bad)
mov
shl
mov
addr16
add
lock
jmp
ret
cmp
int
leave
movs
aad
imul
fstp
jp
inc
ss
bound
cmp
push
js
ret
xor
mov
pop
push
or
shr
sbb
inc
test
jle
xchg
mov
and
lods
mov
mov
outs
cld
frstor
jp
aad
dec
ja
rcr
mov
sar
cmp
hlt
sbb
sub
or
pushf
mov
stos
mov
jo
fdivr
and
and
xchg
sbb
mov
sbb
lea
retf
inc
cld
jle
push
retf
icebp
cmps
nop
ja
nop
pop
sub
icebp
dec
push
ds
cs
jp
nop
imul
popa
or
mov
xchg
cmps
jnp
push
shl
add
xor
mov
iret
fwait
cmp
pop
pop
out
arpl
mov
adc
shl
mov
pop
or
(bad)
lods
test
test
add
mov
scas
dec
inc
mov
add
addr16
pop
cmp
mov
aad
dec
cs
cmps
inc
dec
or
xor
xchg
ss
mov
jno
and
or
sbb
cmp
mov
das
xor
inc
inc
adc
aad
mov
call
sub
ss
cmps
inc
mul
mov
dec
or
push
lods
and
fld
ins
mov
jne
pop
mov
push
xor
test
add
enter
call
sbb
bound
clc
test
int
lea
mov
push
arpl
and
out
out
pop
pop
aam
cmps
mov
jecxz
fisttp
scas
xchg
add
aas
js
push
or
mov
mov
movs
rcl
(bad)
stc
icebp
dec
loope
gs
mov
xor
daa
sbb
mov
adc
sbb
mov
int
jae
jge
or
jmp
ret
pushf
dec
aas
aas
mov
loope
push
push
sub
push
sbb
outs
dec
gs
jp
push
cmc
ja
call
pushf
mov
mov
mov
inc
mov
push
sbb
dec
shl
clc
cmp
mov
lods
push
pop
adc
in
loope
mov
scas
jp
loopne
add
pop
adc
call
push
jnp
jbe
lods
or
mov
repnz
cli
adc
(bad)
pop
xlat
jbe
jl
jg
bound
lods
in
and
pop
inc
mov
mov
retf
fwait
sub
mov
loopne
mov
mov
dec
cmp
in
dec
sub
into
movs
icebp
aas
into
mov
mov
call
mov
pusha
push
fwait
retf
and
jp
sub
gs
push
(bad)
adc
loop
(bad)
js
pop
push
(bad)
xchg
clc
xchg
leave
push
push
data16
mov
jae
lock
call
retf
fisub
pop
inc
mov
push
pushf
jo
push
mov
jg
xchg
aaa
div
xor
mov
add
mov
mov
lahf
mov
pop
aad
mov
cmps
hlt
add
sub
xor
jbe
fs
jns
sbb
fstp
cmp
int
test
loopne
loop
imul
pop
xchg
sbb
ffree
mov
(bad)
clc
mov
pusha
push
sahf
push
ret
dec
add
stos
cmp
enter
mov
or
push
je
add
inc
sbb
mov
loope
ret
cmps
ds
mov
int
pop
xor
mov
add
lock
xor
xchg
pop
xlat
or
rcr
gs
aam
and
mov
mov
jne
mov
sti
arpl
pop
paddusw
(bad)
lods
mov
push
push
mov
pusha
outs
or
stos
(bad)
aam
lods
inc
mov
or
push
cdq
sbb
(bad)
push
and
iret
add
bound
add
jl
in
aad
sub
fldenv
sbb
mov
push
cmps
test
addr16
pop
jmp
pop
iret
jns
fstp
ds
shl
in
call
inc
cmp
push
aas
test
int3
cwde
call
mov
jge
add
cmps
retf
jbe
retf
(bad)
mov
mov
gs
iret
mov
add
(bad)
shr
lahf
sbb
in
pop
(bad)
stos
jl
xchg
fadd
cmp
xor
cmp
sub
inc
hlt
mov
sub
test
jecxz
dec
pop
enter
add
mov
ins
outs
xchg
(bad)
xchg
mov
or
and
sbb
adc
ds
test
mov
or
(bad)
cld
sub
mov
mov
add
scas
and
jmp
xor
sbb
test
sbb
adc
mov
sub
fidivr
adc
lock
or
mov
daa
pushf
mov
icebp
(bad)
in
iret
bound
mov
loop
sub
jns
test
pop
pop
dec
jno
lock
rol
jge
cmps
mov
xchg
adc
cdq
fs
cmp
sbb
mov
pop
cmp
ja
test
mov
sub
jnp
inc
pushf
ja
inc
nop
cmp
jne
mov
cld
hlt
cmp
daa
jb
sbb
out
dec
inc
daa
fcmovne
jge
fs
fbstp
mov
adc
pop
and
add
xlat
jle
dec
call
loop
shr
dec
pop
scas
pop
scas
leave
lock
ret
dec
ins
jae
sbb
xchg
stc
(bad)
mov
sub
repnz
pushf
mov
clc
push
pop
repz
nop
loope
lea
jns
mov
mov
jg
das
jnp
aas
push
(bad)
int3
dec
push
push
inc
mov
in
jle
xor
pop
push
cli
data16
push
cmp
push
aad
cmps
mov
pushw
adc
pop
retf
cmp
add
lds
test
jle
jmp
arpl
dec
jmp
ret
cmc
test
jl
pop
in
pop
fistp
or
push
cld
push
dec
and
pop
pop
xor
clc
scas
pushf
in
adc
sbb
bound
fsubr
dec
mov
mov
call
callw
sbb
mov
mov
push
(bad)
repz
inc
popf
(bad)
dec
push
(bad)
xor
fist
clc
fisttp
adc
jne
adc
sbb
stc
js
push
fisub
mov
leave
das
or
sbb
lahf
push
ins
add
div
and
lds
dec
push
inc
dec
cmc
xor
outs
add
mov
repnz
clc
icebp
sahf
js
out
dec
leave
lds
jae
(bad)
hlt
ror
adc
movs
push
jb
sub
pop
sti
mov
or
push
gs
ss
in
mov
sub
jae
xlat
ret
bound
pop
xchg
xchg
cli
cdq
fld
xchg
cmp
in
mov
addr16
(bad)
(bad)
jg
stos
mov
xchg
or
(bad)
sub
lods
loopne
int
cli
jl
and
cmps
(bad)
jo
cmp
push
push
xchg
aad
das
test
pop
out
pop
xor
scas
ss
ins
test
outs
pop
aad
(bad)
sub
sbb
stos
or
add
or
mov
and
fadd
(bad)
cmp
dec
shl
sbb
mov
mov
mov
movs
and
in
imul
mov
jne
mov
mov
jns
cmp
adc
xor
out
das
xchg
add
cs
mov
clc
adc
push
sub
mov
pop
jl
stos
xor
in
sbb
mov
pop
mov
enter
hlt
or
dec
imul
stos
(bad)
shl
jl
clc
cdq
lock
fcmovnb
xchg
push
test
test
das
retf
push
int3
popf
or
retf
pop
loopne
das
mov
movs
das
mov
aas
retf
jmp
and
mov
inc
rol
jae
popa
jb
(bad)
imul
and
out
(bad)
fst
pop
enter
xor
cwde
loop
cmps
adc
pop
fwait
push
mul
mov
adc
mov
ins
dec
xchg
mov
sbb
repnz
sbb
inc
mov
sbb
cmp
mov
mov
cmp
(bad)
jo
cs
jg
mov
xor
adc
or
cmp
cdq
sub
hlt
loopne
push
loopne
leave
mov
fist
iret
lods
call
xchg
out
sub
add
iret
call
test
loope
jae
call
call
retf
cmp
inc
inc
aas
(bad)
jg
cmp
xchg
pop
cmp
cmp
in
int3
lds
jnp
scas
stos
popa
mov
jae
test
imul
mov
inc
pop
jns
or
sub
and
leave
cwde
fiadd
adc
pop
adc
ss
setnp
xchg
fadd
xor
imul
sbb
loopne
mov
ffree
js
ret
(bad)
xor
xor
mov
sbb
daa
(bad)
loopne
jg
enter
xor
sbb
lock
push
inc
mov
and
adc
adc
nop
pop
and
aaa
call
test
jmp
and
loopne
mov
in
aaa
and
or
adc
rol
dec
retf
jmp
or
xlat
inc
mov
xor
cmp
adc
push
mov
mov
and
pop
dec
out
mov
mov
cmps
inc
mov
aam
sbb
loope
jne
(bad)
mov
out
xchg
and
(bad)
jns
dec
cmp
or
out
add
lahf
int
xor
cmp
mov
sbb
inc
mov
pop
pop
xchg
or
iret
cs
nop
mov
stos
hlt
pusha
(bad)
je
cmc
push
inc
dec
ins
mov
pop
loope
movs
cli
adc
out
lods
aas
leave
(bad)
push
sub
mov
mov
int
fimul
sbb
mov
mov
cs
dec
je
cmp
mov
icebp
arpl
push
sbb
aas
out
add
inc
cmp
mov
mov
push
test
jle
sub
jns
rcr
rcr
dec
hlt
ss
enter
jl
int
xor
retf
pop
cmps
push
cmp
mov
fistp
sbb
dec
push
scas
or
aad
outs
fdiv
lea
pop
nop
aam
adc
jmp
aam
call
lods
clc
movs
or
and
or
pop
mov
rol
fistp
pushf
loopne
hlt
cmp
in
(bad)
adc
(bad)
stc
cpuid
cmps
test
xchg
adc
pop
jmp
adc
xchg
xchg
addr16
sbb
in
or
sbb
mov
(bad)
int3
(bad)
sar
loopne
pcmpeqb
inc
sbb
int3
jle
push
push
not
mov
in
cmp
push
ins
jb
js
bound
mov
adc
xchg
inc
lods
xor
xlat
mov
stos
leave
inc
scas
in
(bad)
sub
cmp
xchg
push
fcomp
cmp
lods
jmp
arpl
cmp
(bad)
add
or
sbb
sbb
dec
xor
xor
jl
stos
cld
and
sub
in
pop
mov
imul
jge
leave
cmp
fbld
out
xchg
sbb
or
fwait
pop
aaa
dec
cli
dec
sbb
cmp
(bad)
fmul
ins
ss
aam
sti
xlat
cld
aaa
int
and
push
mov
cli
cmp
mov
cli
mov
jns
bound
cwde
mov
int3
ret
cwde
cs
fild
es
inc
or
out
push
xor
pop
repnz
dec
cmp
or
sbb
pop
in
shl
pop
mov
cmps
dec
lahf
sbb
ret
inc
sub
into
lahf
lock
js
jp
cmps
pop
xchg
aaa
push
jl
sub
sbb
pop
push
test
cmps
add
push
stos
xchg
test
in
shl
nop
pop
loopne
jp
jne
mov
and
adc
inc
fisubr
into
dec
in
es
mov
cmp
jae
cmps
mov
mov
mov
and
sbb
or
loop
mov
xchg
xlat
xchg
(bad)
test
xchg
inc
pop
inc
or
push
sbb
mov
and
inc
dec
or
nop
xor
or
ja
xchg
pop
dec
leave
sbb
cmp
imul
cmp
sbb
mov
mov
dec
sub
mov
stc
xchg
mov
loopne
dec
fst
and
mov
inc
inc
adc
mov
rcl
sahf
push
pop
xchg
jne
push
mov
push
loop
mov
cwde
mov
js
dec
rcl
ret
mov
sbb
cmp
sti
add
xchg
repz
adc
push
adc
sub
xor
cmps
imul
cmp
inc
push
lods
test
imul
leave
retf
lods
leave
test
or
and
data16
lods
push
ret
imul
sbb
pop
inc
mov
and
shr
aad
adc
fisubr
loopne
clc
or
and
dec
sub
inc
ss
cmc
pop
push
push
jnp
inc
xor
mov
stos
retf
cdq
shr
add
xchg
jmp
mov
test
or
mov
sti
in
nop
scas
pop
call
adc
dec
dec
xor
xor
jp
push
jo
sub
jmp
scas
or
xor
test
and
stc
dec
pop
push
and
mov
adc
sub
sub
push
jne
lahf
sbb
frstor
mov
and
cli
sbb
aam
in
aam
sub
jmp
xchg
imul
dec
sahf
loope
push
or
(bad)
jmp
fwait
into
mov
scas
(bad)
jno
(bad)
pop
sbb
push
adc
sbb
es
push
test
push
xlat
fcom
loop
jb
fwait
mov
cmp
xor
dec
int
fsin
(bad)
jle
cmps
outs
jp
mov
popf
fild
(bad)
cld
daa
ss
pop
cmc
push
xchg
in
cwde
fst
inc
pop
xchg
in
inc
sbb
cmp
xchg
push
or
jmp
sub
mov
clc
and
xchg
(bad)
dec
mov
mov
xchg
or
imul
xchg
xor
mov
or
addr16
clc
cmps
jae
ret
adc
sub
cwde
or
gs
jmp
dec
bound
nop
mov
add
shl
sub
std
lds
dec
inc
push
aas
vpcomw
jge
mov
jecxz
push
push
cmp
jbe
scas
pop
cmp
cmp
or
xor
inc
and
call
mov
add
adc
pop
mov
fsubp
mov
lods
imul
jbe
push
and
mov
movs
outs
pop
dec
and
cdq
xchg
xor
push
mov
ins
push
rcr
imul
push
movs
cld
fimul
out
mov
cmp
in
jb
imul
das
and
cmp
dec
dec
mov
mov
dec
jnp
push
bound
pop
mov
jns
adc
in
push
aas
sbb
loope
mov
pop
fwait
and
dec
sub
div
sub
in
jae
sbb
mov
inc
pop
mov
add
mov
sub
cwd
(bad)
loop
imul
aad
mov
sub
mov
shl
cmp
pop
mov
sbb
push
jnp
imul
ret
addr16
fist
jmp
inc
jg
addr16
rcr
rcl
bound
aad
pop
xchg
leave
adc
pop
jae
jg
out
and
xor
pop
imul
adc
push
fistp
pop
in
sbb
jbe
xor
ds
inc
outs
iret
in
mov
stos
(bad)
(bad)
sets
or
fild
pop
push
dec
jl
loop
shl
ins
shl
mov
sbb
xchg
xchg
loop
fwait
sbb
dec
xor
in
fwait
iret
jp
popa
outs
add
outs
cmp
fucom
sub
mov
pusha
repnz
cmp
and
jge
pop
jle
cmp
sbb
inc
pop
dec
pop
push
fcomp
pop
dec
movs
les
dec
aad
inc
fs
sbb
sbb
rcr
sub
push
jmp
pop
mov
stos
pop
push
mov
xchg
cmc
adc
(bad)
daa
dec
out
xchg
stc
pop
clc
fdivr
mov
sub
lods
ss
jo
iret
push
test
in
jae
into
jl
into
leave
pop
lock
adc
neg
add
or
add
pushf
mov
sti
inc
add
iret
out
mov
add
mov
fwait
sub
dec
xor
lods
call
not
adc
jo
mov
xor
mov
nop
in
sub
jno
xchg
ret
dec
loop
adc
ins
cmp
sub
pop
adc
xlat
stc
or
fnsave
ret
inc
sub
jne
xlat
xor
dec
jmp
mov
jno
sbb
inc
clc
or
jno
int3
aam
in
ret
cmp
imul
test
pop
sub
jmp
xor
sub
mov
sbb
in
addr16
cs
ss
or
loop
mov
mov
push
jno
test
fcom
int3
inc
dec
not
and
add
shl
ins
mov
nop
mov
cmps
ds
popf
cmc
adc
lods
(bad)
push
(bad)
ins
nop
shl
mov
cdq
sbb
xchg
div
mov
enter
mov
in
jecxz
xor
cdq
jae
arpl
into
stos
out
sub
pop
jmp
mov
mov
cmps
into
cmp
mov
xor
rcr
push
jge
xchg
mov
mov
xchg
fwait
(bad)
fild
jg
lods
mov
cmp
adc
cmp
hlt
lds
test
lahf
cmp
in
in
pop
cmp
ror
shl
mov
push
add
xchg
lods
in
adc
adc
mov
fdiv
sub
jae
into
aas
frstor
push
inc
mov
repnz
mov
add
pushf
aas
xor
adc
mov
cwde
mov
repz
imul
imul
test
xchg
stc
mov
cli
ror
mov
in
pop
or
addr16
pop
jmp
out
call
ss
mov
daa
add
xchg
ficomp
les
shl
aaa
bound
(bad)
inc
xchg
sahf
mov
cmp
dec
lea
xchg
hlt
add
into
mov
xor
mov
sub
xchg
inc
lock
sub
fadd
dec
mov
jno
cmp
adc
ret
out
and
mov
es
dec
imul
sbb
jb
sbb
cmp
inc
out
rcl
fistp
pop
inc
inc
jg
fstp
movs
aad
pop
cld
loope
scas
mov
leave
inc
mov
mov
(bad)
mov
aas
(bad)
retf
adc
pop
jno
cmp
in
loopne
pusha
mov
(bad)
daa
es
jbe
cli
sub
aaa
scas
and
ds
xlat
and
push
int
xor
ss
scas
or
call
fisttp
cmps
mov
call
pop
xor
pushf
cmp
cs
fiadd
popf
lods
popf
adc
dec
dec
xchg
fst
leave
cmp
inc
mov
fcomp
xor
mov
add
cmps
dec
movs
sbb
imul
add
adc
mov
int
cs
test
rcr
mov
jmp
xor
test
add
push
xchg
xor
ins
int
sbb
jmp
call
jno
dec
sti
mov
lods
dec
out
mov
cs
xchg
mov
xchg
fnsave
add
stos
ds
clc
(bad)
and
add
ret
test
nop
stos
or
cs
cld
pop
inc
popf
inc
jmp
stos
out
or
ret
out
out
outs
xor
lock
sbb
mov
dec
xor
into
sbb
in
ss
(bad)
arpl
fs
cmp
mov
inc
fdiv
jne
inc
add
push
mov
aam
imul
and
and
aas
aas
daa
fwait
cmc
dec
jle
iret
sbb
push
js
scas
test
je
mov
push
ds
inc
lea
and
dec
gs
mov
xchg
fsubr
adc
cmps
adc
in
mov
mov
lds
lahf
or
mov
aad
xor
out
fwait
inc
inc
push
sbb
sub
out
stos
sbb
outs
out
xlat
add
sahf
repz
aas
mov
lods
or
push
xor
out
cdq
shl
retf
lea
std
inc
add
cmc
or
ja
push
pop
fst
lods
je
xchg
mov
mov
in
outs
fisttp
icebp
call
int3
cmp
loope
loopne
jbe
sub
or
arpl
in
and
pop
scas
pop
xchg
mov
loope
sbb
outs
xor
mov
xor
retf
movs
int
aam
hlt
mov
ja
add
xchg
sub
das
ins
stc
cmp
cwde
mov
jg
mov
sub
inc
or
loope
pusha
in
push
mov
cmp
add
xchg
loopne
pop
inc
jmp
(bad)
aad
inc
xor
dec
mov
sbb
xor
dec
or
sar
rcr
dec
(bad)
cwde
movs
and
add
xchg
cwde
jmp
mov
int
lea
mov
lods
loopne
and
pop
jmpw
fs
call
div
add
ss
cli
mov
cmps
xchg
sbb
loopne
cli
scas
jg
retf
(bad)
mov
pop
(bad)
sub
cli
dec
xlat
add
fistp
int3
pop
xor
and
xchg
test
mov
and
out
push
xchg
cmp
je
imul
inc
ret
add
jmp
jp
call
jmp
mov
in
mov
sti
fisttp
xchg
jl
adc
out
adc
call
inc
dec
jno
clc
mov
out
add
mov
pusha
mov
pop
jecxz
jmp
loopne
sub
jae
dec
inc
stos
imul
sub
mov
bound
or
and
pop
(bad)
add
push
call
jae
test
stos
adc
jns
cdq
jecxz
jnp
sbb
movs
sbb
dec
ss
mov
xchg
cmp
mov
mov
outs
pop
inc
xor
cli
stos
adc
fild
iret
stos
jne
push
cmps
push
test
add
out
loope
mov
xor
sahf
imul
shl
pop
outs
jo
inc
cwde
mov
add
cmps
push
xor
pop
mov
cs
mov
iret
jne
inc
jns
jbe
fldenv
xchg
out
jns
pop
push
repnz
ret
mov
cwde
jo
lods
pop
inc
gs
add
inc
jmp
ret
add
fst
xchg
into
out
cmp
mov
push
hlt
or
(bad)
push
outs
add
(bad)
out
imul
mov
sahf
leave
and
inc
dec
inc
sahf
fnstsw
add
ss
ins
retf
mov
jg
std
idiv
xor
sbb
and
test
adc
mov
pusha
cmp
cmp
fiadd
jge
pop
pop
mov
jns
fisub
mov
add
rcl
out
mov
jbe
out
push
dec
sbb
mov
popa
popf
adc
cmp
icebp
pop
inc
into
clc
dec
push
aas
or
sub
retf
test
jo
push
mov
rcl
add
jne
sar
fisubr
(bad)
or
jl
call
inc
push
(bad)
repz
pushf
and
jg
das
jecxz
xchg
(bad)
inc
jle
(bad)
adc
adc
add
fstp
inc
sbb
sbb
lds
test
loopne
dec
adc
in
(bad)
cld
xchg
add
fisttp
ins
fnstsw
movs
mov
popf
sub
add
dec
and
repz
inc
mov
jmp
enter
mov
or
cmp
xchg
leave
xchg
aas
xor
pop
xchg
fldenv
hlt
icebp
cmps
fldenv
jbe
mov
jle
pop
jmp
mov
jge
mov
dec
xchg
fild
jae
xor
stc
pusha
pop
sbb
and
dec
lods
scas
imul
dec
jo
das
retf
pop
gs
jns
sub
scas
mov
mul
rcr
mov
xchg
inc
pop
mov
sahf
pop
and
push
rcl
cmp
repnz
cmp
dec
mov
movs
aaa
pop
mov
stos
in
add
xchg
and
sbb
out
xor
mov
mov
iret
outs
(bad)
aad
mov
inc
dec
int
stos
inc
fwait
in
sahf
fwait
pop
rcl
add
adc
test
push
xor
push
mov
les
jl
cld
mov
mul
rcl
inc
lods
popa
ja
dec
retf
xchg
retf
out
add
inc
xchg
les
fidivr
fsubr
ror
jo
push
pop
xchg
inc
fistp
fs
ffree
and
and
rcl
popf
xchg
retf
push
add
lods
sti
mov
ins
push
mov
bound
outs
push
lds
je
mov
sub
add
cmp
sbb
sar
mov
scas
push
out
das
iret
inc
cwde
mov
xchg
add
aam
ror
mov
sub
xor
call
movs
cmp
(bad)
adc
ds
sub
enter
jmp
mov
or
cmps
inc
xchg
aaa
lahf
call
test
jmp
push
bound
xor
shl
jle
xchg
cmp
popf
outs
pop
ror
dec
das
in
std
xchg
push
test
int3
pop
sbb
vxorps
jo
movs
xor
ss
mov
fstp
dec
mov
push
mov
mov
and
out
mov
ja
cmp
into
jmp
xchg
xchg
iret
mov
fisttp
sbb
jp
mov
jno
jmp
mov
icebp
imul
arpl
es
xchg
cs
shl
and
pop
mov
daa
mov
ja
je
mov
sahf
iret
pushf
aam
(bad)
idiv
push
ret
nop
inc
push
fwait
retf
mov
clc
mov
popa
xchg
dec
cs
retf
or
sub
xor
xchg
dec
mov
jne
sbb
cmp
mov
shr
sahf
test
mov
pop
iret
movs
aam
ret
ins
loop
inc
fwait
cmp
dec
mov
(bad)
and
add
outs
xor
dec
add
leave
sbb
sub
or
lds
add
stos
int
cmp
repnz
push
cmps
cld
push
lock
sbb
mov
pop
mov
jl
xor
dec
fcomp
cmp
jge
mov
inc
hlt
jp
scas
loopne
sub
or
mov
xor
push
pusha
push
out
mov
imul
or
rol
dec
mov
add
xchg
mov
sub
adc
adc
aaa
jno
(bad)
add
add
xchg
(bad)
sti
inc
inc
fild
and
test
add
mov
ss
out
imul
inc
or
push
push
mov
jb
cmc
loope
cmp
mov
scas
movs
push
les
jo
leave
jp
mov
jae
mov
pushf
scas
mov
sbb
ret
dec
xchg
int
in
cdq
pop
das
dec
scas
es
jae
dec
les
fadd
pop
mov
fwait
cmp
in
scas
(bad)
mov
out
out
xchg
nop
mov
cmps
push
ds
jo
mov
fucomi
push
cmovge
mov
sub
sti
in
call
aam
pop
jmp
fbstp
dec
mov
sub
fidivr
sbb
mov
mov
xchg
out
rcl
xor
fist
inc
xchg
xor
add
xchg
cmp
pop
sbb
(bad)
and
(bad)
mov
mov
xchg
out
adc
push
jns
and
lods
imul
mov
scas
inc
movs
xlat
into
adc
mov
jbe
sbb
popf
outs
jo
jl
push
pop
and
imul
les
(bad)
cmc
cmps
arpl
inc
rcl
jno
test
fucomip
mov
push
pop
mov
arpl
jbe
repz
sahf
push
js
daa
aad
pop
or
jecxz
rcl
movs
xchg
movs
cld
test
addr16
(bad)
and
mov
xor
fidivr
in
and
pop
xlat
sbb
out
jns
dec
lea
int3
mov
aad
mov
xchg
in
cmp
mov
fwait
and
push
sti
sub
adc
mov
jae
jnp
bound
stos
data16
or
idiv
jne
adc
pop
mov
and
jns
or
(bad)
adc
out
adc
ins
sbb
add
(bad)
mov
cmp
xor
mov
aas
movs
fwait
js
arpl
mov
mov
mul
xchg
jns
jb
scas
fadd
push
push
out
push
shl
jbe
sub
add
cmps
inc
lea
pop
push
pop
out
cmp
adc
sbb
mov
mov
mov
popf
push
test
loopne
inc
add
fidiv
add
lods
ins
sbb
cld
(bad)
scas
jno
push
loopne
cli
xchg
jbe
xor
ret
popa
fwait
lock
mov
pop
out
dec
jno
loopne
sbb
cmp
fwait
clc
and
pop
cwde
repz
dec
push
es
data16
sub
mov
aaa
in
mov
pushf
push
or
xchg
sbb
cmc
call
mov
ja
mov
mov
sbb
ficom
xor
add
(bad)
xor
push
cs
cdq
sub
pop
mov
inc
arpl
cdq
stc
push
ins
loop
inc
in
rol
(bad)
push
mov
sbb
ja
outs
fldenv
sbb
jb
inc
je
inc
sub
(bad)
nop
mov
cmp
mov
ret
xlat
pusha
data16
sub
retf
or
xor
xchg
adc
fld
xchg
test
cli
push
mov
pusha
lock
popf
inc
cwde
rcr
and
mov
test
jge
cmp
pop
out
adc
mov
movs
mov
cmp
in
nop
js
movs
jae
fldcw
call
icebp
xor
mov
cmp
ins
hlt
(bad)
cmp
mov
aas
cmc
aad
pop
pop
cdq
jmp
test
mov
cdq
pop
outs
sbb
fwait
pop
mov
xchg
cmp
add
push
movs
push
imul
xchg
xchg
loopne
aaa
mov
jb
xchg
mov
sbb
pop
sub
test
sub
sbb
cmp
jp
xchg
cld
movs
outs
mov
arpl
mov
xlat
push
das
push
sbb
mov
xchg
and
jge
sub
in
add
sub
xor
call
imul
shl
mov
add
sub
je
or
aaa
stos
inc
jb
inc
pop
fbld
pop
and
ins
dec
and
mov
xor
lods
jmp
push
mov
popf
pop
cmp
xor
ins
xchg
aam
lds
pop
stos
cwde
dec
shr
fmul
je
push
push
push
push
push
push
mov
push
loop
xor
loopne
ja
xchg
and
xchg
gs
ss
inc
dec
and
or
dec
ja
call
mov
dec
rcr
pop
jae
call
inc
mov
inc
mov
add
sbb
or
mov
scas
mov
or
pop
xor
and
lahf
cmp
stos
and
scas
neg
fisubr
mov
sbb
(bad)
adc
adc
movs
in
out
ss
xor
outs
inc
iret
(bad)
shl
or
or
jle
popf
push
dec
jp
inc
sub
push
cmp
dec
out
jge
adc
int
sbb
mov
test
daa
lahf
add
dec
cmps
imul
cmp
repz
not
fwait
and
popa
mov
clc
and
ffreep
fwait
dec
add
rcl
daa
jl
dec
(bad)
popf
xor
cmp
rcr
push
loop
jecxz
cwde
cld
sahf
sub
mov
xor
and
xor
pop
push
pusha
stos
ficomp
adc
stc
add
sahf
or
retf
xor
ror
stc
imul
mov
push
or
pushf
or
fdivr
mov
gs
rcr
sub
lds
aaa
xchg
sbb
mov
sub
ss
cmc
cmp
ins
xor
pop
add
dec
lahf
dec
mov
mov
int
das
jae
mov
test
int
inc
shl
jnp
sbb
addr16
dec
loope
jo
out
mov
mov
and
in
inc
jecxz
push
inc
sbb
or
scas
push
mov
sbb
fistp
into
lahf
mov
jae
xchg
adc
lods
std
cmp
xchg
and
add
lods
jmp
sbb
popa
enter
mov
and
fcom
sbb
push
inc
pop
xchg
std
cld
push
stos
cmps
and
push
fs
lahf
loope
call
clc
ins
add
cs
mov
or
les
push
lods
dec
jecxz
leave
cs
xchg
in
ror
pop
xor
inc
jg
fnstsw
lgs
push
test
add
sub
jl
jno
jge
fistp
jae
dec
or
mov
sub
ins
ret
call
pop
cs
adc
(bad)
xor
fcom
mov
jmp
daa
ds
aas
lea
lds
invd
(bad)
leave
adc
cmc
dec
xchg
sbb
xor
fisub
sub
dec
dec
movs
fst
lds
movs
fld
scas
mov
fisttp
aas
movs
xchg
lahf
emms
repnz
adc
test
fimul
stos
rcr
iret
fsub
mul
inc
shl
add
adc
mov
jg
rcl
or
inc
xor
ret
jl
adc
xchg
xchg
gs
jne
add
jp
mov
inc
push
mov
fdivr
pushf
cwde
inc
sub
gs
cld
inc
mov
mul
jp
xchg
or
mov
and
(bad)
sub
imul
outs
ins
and
push
bswap
mov
icebp
mov
dec
in
fisubr
xchg
push
popa
push
jo
call
mov
psrlw
or
dec
jne
ja
das
mov
mov
push
(bad)
sar
mov
jp
leave
xchg
jns
mov
and
mov
xor
or
clc
adc
fmul
sub
xor
int
ins
mov
xor
in
mov
push
add
les
cdq
xchg
cmps
stos
cmp
bound
fsub
out
shr
cmp
pop
mov
xchg
ja
loop
push
add
push
sub
add
cdq
mov
add
mov
cmp
test
stos
mov
lods
adc
loopne
xchg
pushf
ins
inc
adc
ret
lea
dec
(bad)
sub
stos
in
mov
mov
pop
mov
loope
dec
cld
xchg
aaa
sbb
push
in
and
pop
(bad)
cs
(bad)
mov
(bad)
push
jne
ret
(bad)
mov
rcr
inc
sar
pop
push
les
inc
addr16
aas
sbb
aad
cli
fstp
xchg
pop
mov
and
outs
ins
push
(bad)
push
xchg
fld
dec
lds
mov
sbb
mov
push
mov
loope
dec
dec
dec
push
clc
fcomp
int
sti
and
mov
xchg
mov
jo
xchg
pushf
jbe
jp
nop
lods
and
jmp
cmp
dec
xor
imul
xchg
dec
stc
mov
sahf
mov
ds
mov
out
sub
jl
jmp
fwait
adc
mov
mov
aad
ja
mov
mov
test
sti
outs
test
fimul
out
jg
adc
fidivr
fcom
int3
pop
int3
sub
repz
dec
add
arpl
in
pop
mov
arpl
rol
cwde
and
neg
call
jge
and
xor
push
outs
xchg
out
sub
cdq
adc
jns
push
push
jno
xor
mov
pop
pop
adc
stc
cmp
mov
cmp
xor
mov
jmp
and
add
mov
sbb
xor
ret
(bad)
inc
mov
out
aad
and
xchg
sub
ret
enter
in
push
pop
cmc
adc
pop
stc
add
mov
fwait
enter
dec
xchg
rcl
xor
sti
fild
sbb
stc
jle
jg
je
loopne
ins
dec
xchg
lock
aas
jp
cmp
pop
out
mov
cli
push
int3
mov
sbb
and
pop
iret
push
js
cmps
in
loop
mov
xchg
or
clc
xchg
daa
cmps
add
xchg
aad
mov
xchg
mov
xor
xor
inc
(bad)
push
mov
call
sbb
mov
xchg
jb
scas
push
int3
retf
in
fiadd
into
ss
cmp
pop
jmp
adc
xor
fwait
push
into
or
sub
clc
jmp
or
mov
aad
fcmove
dec
rep
popa
test
mov
or
repz
je
fisttp
jle
mov
push
sbb
add
fwait
call
mov
xchg
xchg
stos
jb
icebp
sub
sbb
mov
pop
cmps
mov
mov
cmp
cmp
and
lods
cmp
xchg
cmp
dec
aad
leave
mov
jmp
jbe
pop
or
out
lea
(bad)
bswap
or
leave
dec
mov
inc
sub
(bad)
bound
out
(bad)
inc
test
mov
and
std
fcom
jbe
mov
bound
fwait
hlt
imul
std
push
aaa
mov
cmc
in
hlt
adc
dec
and
sbb
int3
push
and
push
inc
push
retf
xchg
add
aas
lods
dec
mov
cli
sbb
cmps
(bad)
jmp
cmc
mov
pop
mov
scas
sub
gs
mov
xor
daa
mov
pop
inc
jmp
sub
sbb
in
sar
add
pop
sbb
jb
push
adc
ss
mul
icebp
mov
test
leave
inc
push
push
rcl
fs
sub
cs
xchg
push
xor
cwde
call
in
mov
mov
test
lods
sub
adc
xor
jge
addr16
(bad)
and
jl
ficom
sub
(bad)
mov
pop
int3
out
add
cmps
cmp
pop
movs
and
in
inc
sbb
inc
enter
fidiv
scas
pop
mov
inc
movs
inc
xlat
mov
fild
in
pusha
sti
popf
push
and
mov
ror
xor
sbb
int
es
cmps
(bad)
mov
sbb
ins
int3
rol
jp
(bad)
data16
and
jns
xchg
into
xchg
mov
sub
mov
test
dec
mov
stc
pop
add
ror
sub
(bad)
lea
inc
inc
xchg
outs
mov
aaa
jbe
stos
retf
push
in
or
inc
ror
das
and
and
mov
(bad)
sti
inc
sub
sbb
(bad)
push
jo
mov
and
ds
imul
call
dec
test
add
jae
test
pusha
in
dec
add
mov
dec
mov
leave
aaa
mov
mov
outs
and
cdq
pushf
ror
xor
jbe
fs
push
std
ja
push
into
mov
mov
or
cmp
jg
xor
test
and
jmp
std
(bad)
ja
xchg
mov
in
(bad)
call
jmp
js
popf
add
(bad)
cmp
jmp
mov
sbb
push
dec
jb
sahf
xlat
push
ins
ffreep
mov
int
pop
std
(bad)
xor
in
xchg
call
push
adc
xchg
xor
xchg
sahf
mov
cs
push
shl
mov
mov
rcl
pushf
fbld
les
inc
lea
fidivr
mov
xchg
dec
sub
stos
adc
pop
cmp
pop
mov
add
jbe
pop
pop
loope
stos
dec
mov
repz
mov
and
pop
jb
xor
out
xchg
mov
arpl
dec
pop
jg
dec
fisub
mov
push
retf
mov
(bad)
mov
mov
gs
xor
push
ret
je
test
cmps
jae
mov
je
or
sbb
call
xor
aad
mov
sbb
add
push
mov
or
shl
ret
jno
pop
aas
aad
jmp
push
fcom
cmps
ss
sysenter
ret
mov
cld
daa
mov
and
jg
rcl
mov
dec
push
jmp
test
fs
xchg
sbb
push
adc
jl
movs
popf
or
hlt
push
fcmovbe
outs
call
mov
mov
(bad)
adc
push
mov
ss
sub
subps
stos
test
loop
stos
shl
jb
push
sbb
div
push
scas
push
dec
es
les
push
je
add
dec
xor
cmp
inc
jg
shl
mov
mov
neg
retf
xchg
das
lds
ret
frstor
repnz
jns
shl
scas
and
push
dec
cld
inc
mov
xlat
mov
in
repz
mov
sbb
push
outs
dec
aaa
loopne
jo
inc
popf
push
hlt
test
js
dec
mov
mov
jnp
test
mov
fsub
adc
push
xor
movs
jmp
pop
jo
pop
arpl
lods
test
leave
cdq
ret
popa
and
sub
cmps
fild
mov
inc
iret
xchg
jo
add
inc
mul
dec
test
(bad)
cli
loopne
adc
inc
loop
pop
fwait
mov
das
fisttp
ja
in
cmps
adc
cmp
adc
pop
push
scas
cdq
ins
test
mov
xor
mov
dec
sahf
pop
fld
push
xchg
shl
mov
sbb
pop
cdq
daa
fwait
(bad)
xor
inc
pop
arpl
mov
jbe
inc
rol
dec
xlat
dec
mov
push
xchg
push
je
push
dec
mov
push
xor
pusha
ss
cmp
(bad)
loope
adc
mov
mov
sub
std
movs
xchg
dec
sti
imul
xchg
sbb
in
inc
mov
cmp
std
mov
xchg
sbb
imul
push
(bad)
(bad)
lds
stos
outs
mov
sahf
mov
cmp
call
inc
push
pop
cmp
retf
pop
lods
adc
aaa
je
pop
sbb
add
or
add
cli
pop
sbb
clc
sbb
(bad)
sbb
fwait
mov
cmp
cmps
fwait
and
test
xchg
int3
xchg
jle
push
retf
das
xor
pop
test
sub
push
mov
test
add
sub
xchg
movs
or
mov
inc
push
dec
xchg
add
ds
mov
sbb
cmp
cwde
sti
cmp
cmc
lods
sbb
adc
sub
mov
or
call
(bad)
push
jne
pop
jp
popa
mov
loope
int
leave
inc
popf
sbb
in
push
lods
inc
pop
icebp
les
das
pop
rol
std
sbb
xor
cdq
cld
inc
mov
inc
rcr
enter
stos
xor
mov
call
outs
jnp
div
jecxz
pop
les
imul
xchg
cmp
cs
lds
push
jne
mov
mov
xchg
inc
add
mov
lea
adc
stc
scas
dec
inc
jl
repz
or
inc
xchg
xlat
dec
ret
es
ss
xchg
push
inc
adc
sahf
mov
jle
test
fadd
cld
fadd
call
movs
sbb
mov
dec
imul
xchg
icebp
(bad)
sbb
sbb
or
cmp
mov
or
jb
movs
sar
imul
or
fwait
mov
data16
push
push
fst
xchg
retf
fdivr
xchg
data16
or
in
nop
(bad)
cmp
mov
mov
xor
cli
mov
xchg
mov
retf
int
xor
ins
sub
mov
lods
and
mov
cmps
fidivr
push
int
sub
sub
fistp
sbb
mov
mov
jmp
cmp
mov
mov
fdivr
xchg
jge
mov
pop
shl
inc
out
(bad)
adc
out
inc
hlt
dec
cmp
out
sbb
push
aas
fmul
sub
fwait
or
(bad)
sub
gs
(bad)
xor
xor
jmp
jmp
out
outs
rcr
push
jb
in
or
ins
jge
(bad)
sub
add
sti
mov
iret
xchg
add
imul
(bad)
push
mov
or
push
rcl
dec
test
neg
pop
(bad)
fs
mov
call
or
push
imul
loopne
retf
add
test
(bad)
(bad)
cmps
dec
dec
jbe
lea
jmpw
push
mov
fisttp
mov
dec
jns
xor
and
adc
pop
pusha
sbb
cwde
xchg
stos
mov
jge
int3
mov
mov
sbb
scas
lahf
xor
jecxz
adc
mov
jo
cwde
push
ficomp
push
cmps
xor
scas
jns
and
cmp
push
and
maskmovq
imul
sub
cmp
clc
xor
jmp
cmovns
dec
push
cwde
out
and
repnz
add
dec
in
or
and
jne
retf
outs
hlt
jmp
dec
adc
popa
nop
in
ret
shld
or
mov
push
in
sbb
mov
hlt
pop
into
and
jb
push
dec
pusha
inc
mov
out
push
and
sahf
enter
and
sbb
pminsw
mov
retf
in
add
and
push
inc
mov
pusha
popf
adc
jle
stos
arpl
xchg
sub
repz
cmp
scas
repz
push
outs
(bad)
arpl
cmp
xor
sub
aam
add
xchg
les
jo
inc
cld
mov
sar
pop
dec
pop
mov
lea
sub
push
push
push
inc
push
add
fisttp
scas
xchg
xor
sbb
in
jge
rcl
cmps
and
stc
dec
call
jl
in
iret
aas
test
mov
test
jge
mov
stos
sub
leave
jp
cmp
call
in
jle
dec
test
lahf
cmp
mov
mov
jo
cmp
jmp
add
and
add
loopne
xor
test
push
imul
icebp
in
inc
mov
mov
mov
enter
mov
mov
movs
in
push
inc
test
fsubr
icebp
pop
jbe
xchg
xor
aad
dec
movs
mov
add
mov
sub
fnstenv
stc
mov
pop
and
add
jo
dec
shr
cmps
push
into
leave
mov
scas
fiadd
xor
mov
adc
push
shl
std
mov
ja
push
les
addr16
aaa
nop
shl
int3
sbb
push
xor
mov
add
jns
or
or
dec
popf
adc
popa
jmp
fwait
push
ja
sbb
ficomp
inc
mov
sbb
cwde
test
add
enter
or
retf
imul
jae
xor
cs
inc
and
fcomip
ret
mov
push
fidiv
push
and
xchg
dec
cmc
out
not
add
sub
fst
leave
sbb
jns
shl
mov
retf
xor
test
dec
xchg
sti
hlt
sar
mov
xor
xor
fcmovu
or
ins
icebp
pop
gs
inc
fnstcw
mov
sbb
dec
clc
add
sahf
xor
pushf
add
sub
aaa
outs
add
(bad)
arpl
pushf
scas
imul
popf
mov
pop
push
cmc
cli
fisttp
sub
sub
pop
fwait
adc
jae
pop
nop
inc
jge
ja
jb
push
inc
push
enter
push
mov
mov
sahf
mov
pushf
mov
loop
push
neg
sahf
cmp
sbb
xchg
in
pop
pop
out
clc
enter
mov
aad
mov
mov
mov
add
repnz
daa
ret
push
repnz
sbb
loope
or
call
fidivr
sbb
enter
mov
jnp
ins
jle
movs
and
adc
bound
adc
dec
inc
dec
enter
pop
sbb
jne
adc
inc
mov
pop
pusha
(bad)
leave
xor
mov
dec
cmc
mov
inc
xor
sub
int
sub
xor
lea
push
pop
les
push
mov
cdq
and
popf
jmp
sahf
xor
xor
xor
add
push
pop
mov
(bad)
jmp
push
mov
dec
imul
dec
clc
std
xor
pushw
sub
xchg
and
cli
cmp
es
or
and
dec
das
and
aad
into
icebp
and
jg
dec
loop
int3
xor
xchg
inc
mov
aad
adc
out
push
and
loope
ds
and
lods
scas
or
int3
int
pop
pop
push
push
jg
or
call
je
or
adc
and
int
cs
stos
jp
dec
xchg
xor
(bad)
jbe
or
(bad)
mul
retf
dec
jmp
scas
arpl
jecxz
(bad)
cmps
push
sub
ins
in
mov
fdiv
add
lock
movs
(bad)
loop
jb
(bad)
pop
xchg
mov
fcmovnb
jo
sub
sub
jmp
push
pushf
movs
or
scas
or
xchg
pop
mov
and
imul
mov
sub
mov
ds
data16
scas
jl
test
test
fs
ret
mov
or
add
dec
inc
(bad)
movs
and
jg
push
popf
std
cdq
or
cmp
push
ja
ror
sbb
xor
xor
mov
inc
pop
fisttp
(bad)
mov
aad
(bad)
popa
push
sbb
mov
test
add
fdivr
adc
mov
xor
scas
stos
dec
jmp
mov
jl
out
les
std
imul
add
test
ret
js
add
fucomp
fmul
daa
in
and
jle
dec
stos
pop
add
fistp
push
ja
adc
inc
(bad)
jns
cmps
inc
mov
push
jg
(bad)
stos
movs
and
cld
dec
inc
push
cmp
ret
cs
mov
jmp
in
test
push
aad
das
push
repnz
xchg
mov
pop
or
imul
pop
stc
mov
stc
mov
mov
ds
cmp
aaa
pushf
pushf
jno
cmp
xor
mov
pop
sub
popa
rcl
outs
out
punpckhbw
outs
mov
mov
es
push
jnp
in
pop
nop
icebp
mov
xchg
mov
scas
les
ret
test
dec
xor
xor
sub
aad
cmp
push
pop
enter
ret
dec
xchg
loopne
or
test
sub
int3
xor
in
push
les
sub
das
and
ja
cmp
mov
or
das
xor
add
xor
(bad)
fisub
cs
inc
or
xor
pop
movs
out
fisttp
mov
xchg
ss
sar
sub
push
mov
mov
xor
push
rcl
push
mov
add
mov
push
iret
int
xchg
adc
mov
cmp
lds
lods
pop
(bad)
jne
mov
fdivr
retf
outs
inc
xor
jg
jb
mov
add
mov
mov
sbb
mov
loopne
faddp
jo
mov
xchg
or
pop
and
mul
retf
mov
lods
add
pop
daa
call
mov
nop
out
sbb
int3
sub
cmp
movs
xlat
mov
fst
or
shl
sbb
sub
push
mov
std
inc
xor
mov
dec
mov
(bad)
pop
movs
adc
loopne
scas
jo
cmp
cdq
lds
cmps
icebp
jo
xchg
jnp
(bad)
es
outs
(bad)
iret
aas
(bad)
aad
into
outs
or
retf
adc
std
xor
loope
shr
push
cdq
dec
cld
daa
mov
fldenv
pop
inc
sub
out
repz
out
sbb
out
shl
cmp
(bad)
(bad)
scas
mov
mov
sub
jnp
inc
xchg
call
add
in
cmp
or
fld
push
cdq
jne
std
clc
xchg
in
stc
and
mov
xchg
pushf
imul
dec
out
int
fs
jo
dec
or
into
mov
fist
inc
mov
xchg
ss
mov
lods
ins
push
(bad)
retf
adc
push
mov
xchg
push
add
mov
mov
and
or
das
sar
jle
test
fucomi
mov
movs
jno
pop
xor
push
mov
push
call
jbe
dec
shr
test
out
gs
adc
mov
aad
dec
je
xchg
and
mov
(bad)
sub
xchg
mov
dec
fidivr
(bad)
pop
mov
jp
dec
sbb
add
int
and
lock
sar
push
pop
pop
xor
jmp
mov
ret
test
lods
outs
and
or
push
cdq
cmp
sub
in
sahf
mov
inc
push
repnz
outs
test
push
mov
pop
lds
repnz
add
add
mov
lods
es
push
in
inc
push
mov
retf
add
in
call
cld
xor
(bad)
fld
imul
sbb
fistp
leave
cmp
xchg
pop
fbstp
mov
xchg
fsubr
dec
ror
cmc
and
cmps
and
aaa
ret
adc
jge
pop
ins
icebp
add
cmp
mov
mov
call
rcr
dec
xor
mov
ss
out
hlt
adc
mov
sbb
mov
test
outs
push
jbe
packuswb
enter
test
fidivr
imul
sub
mov
pop
push
jbe
jmp
dec
stos
jo
(bad)
cmp
cmp
jecxz
inc
push
sbb
(bad)
ss
div
popa
dec
jmp
jle
sub
push
nop
es
cmps
in
adc
repz
push
fidivr
mov
sub
cmps
mov
and
aam
xor
out
push
jae
(bad)
adc
out
(bad)
adc
inc
call
inc
outs
push
sbb
dec
pop
mov
mov
(bad)
sti
idiv
out
cmp
and
mov
mov
cmp
enter
and
jns
daa
inc
jno
mov
or
sub
cmp
pop
pop
xor
adc
hlt
stc
mov
xor
cmp
sbb
adc
popf
lods
and
ret
jle
add
jne
lds
lods
mov
adc
xchg
cmp
jne
pop
daa
inc
xor
push
das
rcr
enter
sar
pop
adc
cmps
mov
int
cmps
inc
push
sub
sar
imul
shr
loope
out
call
enter
xchg
cmp
call
nop
push
stos
imul
lahf
xchg
pop
cmp
jmp
nop
sbb
dec
ds
push
sahf
xlat
xor
pop
loope
(bad)
(bad)
arpl
adc
inc
sar
adc
ret
jg
sar
or
xor
es
scas
fisttp
xor
fcmove
(bad)
out
div
cmc
stos
sub
mov
test
aam
cmp
xor
loop
stos
test
inc
xor
mov
ja
jns
mov
push
arpl
dec
mov
jae
mov
lahf
mul
xchg
mov
setne
bound
cmc
pop
mov
shl
sti
inc
div
jl
xchg
(bad)
rcr
jl
rcl
dec
ror
pop
jle
int3
pop
jne
cdq
popf
pop
adc
mov
aas
(bad)
cmps
jns
mov
mov
cs
fisttp
test
not
sub
hlt
dec
aam
sub
sbb
fisub
cli
pop
out
sub
mov
call
push
sbb
test
ffreep
hlt
push
sub
or
clc
cmc
sub
xchg
and
pop
cmc
sub
movs
cmp
mov
adc
icebp
arpl
sbb
mov
mov
mov
cmp
repz
sub
pusha
adc
pushf
fistp
imul
jns
popa
inc
xchg
cdq
(bad)
or
push
cmp
sbb
inc
popf
mov
dec
into
es
retf
pop
and
mov
mov
in
fidivr
jns
sub
mov
xchg
and
push
push
pop
popf
loope
je
mov
dec
pop
call
xchg
mov
sahf
sbb
mov
add
sbb
mov
cli
dec
inc
fwait
add
adc
cmps
jno
int
fbld
mov
mov
je
ss
hlt
cli
mov
leave
shl
fcom
inc
ficom
call
fisttp
(bad)
sahf
std
inc
cwde
(bad)
jnp
(bad)
mov
fsub
cs
sub
push
(bad)
ret
inc
out
repz
jns
push
aad
ror
mov
jmp
and
adc
sub
pop
mov
hlt
imul
ja
inc
push
and
shl
jmp
xor
in
arpl
add
pop
ret
mov
xor
in
addr16
hlt
das
adc
sub
inc
fneni(8087
data16
xchg
push
scas
cmc
fldcw
dec
jl
and
jmp
push
mov
jb
push
sbb
nop
cli
cmp
outs
adc
icebp
add
cmc
stos
jnp
and
imul
add
ds
add
xor
jmp
push
imul
xor
and
imul
mov
lahf
dec
ret
nop
arpl
fs
mov
jmp
push
retf
clc
fcom
iret
stc
retf
sub
sbb
sbb
push
cmp
mov
xor
dec
popf
sub
xchg
js
sub
in
sahf
xor
dec
inc
xchg
retf
push
mov
cmp
lock
dec
dec
aam
stos
sti
push
std
cmp
sahf
push
lea
mul
jne
sahf
mul
sub
dec
sub
daa
xchg
inc
xor
add
or
hlt
inc
push
es
add
sahf
fwait
and
mov
sub
mov
ja
in
jecxz
xchg
cwde
enter
test
inc
pop
jmp
es
push
cmp
pop
sub
mov
jp
(bad)
test
out
xor
shl
mov
inc
es
cwde
add
inc
push
push
ds
cld
fsub
xchg
or
loope
div
test
pop
mov
mov
scas
jns
ds
shr
mov
adc
pushf
adc
jmp
lock
push
or
mov
push
iret
out
and
xchg
cdq
mov
xchg
pushf
gs
iret
jl
into
cmc
jb
shl
mov
arpl
mov
mov
mov
push
arpl
cwde
or
jl
or
inc
adc
and
pop
lahf
(bad)
xlat
repz
imul
fcom
lds
cld
lock
faddp
pop
push
inc
(bad)
out
hlt
call
push
repz
rol
out
mov
js
aas
jnp
cld
push
sbb
popa
add
je
out
inc
and
sahf
pusha
rcl
cmps
dec
call
hlt
js
rcl
dec
xchg
pop
inc
sahf
pop
push
test
add
cmp
je
stos
mov
pop
fs
adc
stc
inc
enter
dec
lock
ds
mov
pop
popa
sub
shr
imul
mov
mov
stc
mov
dec
scas
dec
(bad)
call
cmp
mov
lock
jno
mov
in
xor
lds
adc
sbb
js
pop
sar
(bad)
pop
mov
xor
mov
sub
cmc
jbe
dec
jecxz
add
dec
sbb
(bad)
jnp
jge
ficom
lods
out
mov
idiv
jp
mov
not
sahf
sub
fcomp
adc
cmp
jmp
mov
mov
mov
arpl
aaa
sbb
mov
dec
dec
fs
test
jle
fimul
test
and
ins
add
push
add
inc
sahf
adc
loop
xor
das
fsubr
mov
push
mov
aad
out
out
ins
mov
push
mov
mov
mov
xchg
mov
lea
cmp
rcr
push
sbb
dec
pop
lea
xchg
imul
inc
push
lock
mov
call
add
test
jmp
pop
adc
rol
mov
dec
xor
adc
stc
pusha
or
int3
cmps
repnz
push
seto
adc
frstor
and
push
inc
push
cwde
dec
imul
std
aaa
(bad)
in
test
sbb
loop
jne
ficomp
cmp
es
or
stc
cmp
popf
xor
ffree
test
pop
xor
scas
ins
xor
xchg
pop
aas
jg
xor
adc
(bad)
push
repz
sbb
inc
adc
jae
ret
mov
ja
xchg
xchg
mov
lods
mov
fs
fstp
ror
mov
mov
mov
loop
adc
push
or
rcl
sbb
xchg
sbb
daa
pop
adc
loope
ror
popf
or
arpl
neg
jbe
inc
lock
ror
xchg
stc
out
pusha
inc
ror
sub
inc
and
stc
cmp
sbb
in
lods
push
call
mov
xchg
pop
shr
mov
pusha
jl
cmc
xor
pop
ret
sbb
mov
and
call
inc
and
sub
cmc
or
enter
xchg
xor
adc
adc
mov
pop
(bad)
in
jg
mov
out
retf
leave
aaa
popf
or
icebp
pushf
cmp
out
jnp
mov
mov
mov
push
pop
sub
xor
mov
sub
fsub
sub
out
lock
jmp
(bad)
fadd
fcomi
outs
addr16
sar
mov
sbb
sbb
mov
xchg
mov
jmp
shr
pop
rol
dec
sub
pop
fld
out
ret
add
pusha
xchg
popa
xor
mov
enter
mov
fiadd
mov
es
and
loop
jno
packsswb
fcmovu
push
inc
fild
mov
adc
sbb
out
sbb
mov
not
data16
fisttp
sbb
adc
or
fsub
push
out
xor
add
out
jmp
lock
addr16
(bad)
or
inc
lods
adc
out
pop
mov
movs
jmp
mov
jo
sbb
outs
ss
jmp
sbb
jno
inc
loop
ja
scas
mov
iret
pop
adc
jns
xor
scas
cmps
push
div
(bad)
cmps
pop
push
mov
or
mov
popf
dec
or
or
stos
and
scas
rcl
imul
dec
test
mov
call
out
push
and
aaa
pop
push
push
enter
mov
push
outs
(bad)
adc
push
addr16
rcr
aam
mov
es
inc
or
out
jo
jnp
gs
ret
daa
xchg
call
iret
xchg
jl
retf
int3
mov
loop
xchg
(bad)
fst
pushf
pop
xchg
sbb
jb
xor
pop
jbe
xchg
or
push
inc
mov
pop
push
inc
cld
adc
retf
ins
enter
out
and
cwde
cmps
jae
out
loop
push
js
shl
sbb
jg
daa
dec
stos
(bad)
push
mov
(bad)
inc
add
or
add
popa
lods
xchg
adc
mov
lods
je
adc
vpsrlq
pop
cwde
mov
sub
leave
push
add
and
jnp
gs
shl
mov
es
mov
ins
xor
sub
retf
mov
dec
aas
cmp
add
jns
inc
inc
and
mov
fimul
push
jno
inc
cmp
stc
(bad)
fnsave
inc
sub
retf
adc
sub
mov
cwde
or
shr
push
pop
push
mov
out
retf
call
sub
mov
(bad)
stc
push
sub
ja
out
sbb
mov
call
push
sub
mov
iret
sbb
aaa
dec
mov
sub
fmul
stc
cdq
dec
mov
and
adc
pop
inc
mov
inc
fst
cmc
xchg
add
jg
std
cmc
cmps
in
and
lock
cmp
mov
jo
sahf
or
ret
dec
sbb
xor
call
pop
out
add
lods
stos
imul
jbe
stos
in
js
adc
sub
mov
and
xchg
cmp
out
or
sub
fadd
fdiv
aam
jbe
xchg
xor
mov
ins
jbe
mov
mov
cmc
scas
loopne
and
dec
(bad)
jmp
lods
mov
and
xchg
stc
mov
lods
pusha
test
movs
inc
pop
arpl
shr
cdq
jnp
out
scas
xor
mov
mov
fbstp
jl
dec
jns
cmps
call
mov
cmp
lock
aad
out
sbb
push
jle
scas
ja
pop
xor
push
adc
fmul
dec
gs
or
add
out
or
sub
dec
aaa
and
push
xchg
stc
addr16
stos
sub
sub
mov
shr
retf
and
in
jnp
pop
and
comiss
pop
sbb
pop
xor
cmp
retf
mov
and
enter
popa
pop
xchg
and
das
mov
jnp
cld
push
push
xor
mov
sbb
jmp
cmp
mov
es
and
call
scas
mov
sbb
pushf
or
jle
pop
(bad)
shl
xchg
jae
stos
data16
fbld
adc
lahf
adc
fst
enter
loopne
sar
jecxz
aad
mov
call
sar
inc
hlt
cmps
xchg
and
ficom
(bad)
bt
arpl
ss
jno
dec
dec
mov
pop
pop
pop
(bad)
mov
call
add
pushf
mov
push
mov
int3
ss
jbe
dec
mov
dec
xor
and
and
loope
jae
sbb
pushf
mov
dec
mov
and
mov
cli
xor
shl
cmp
outs
stc
add
dec
cmc
xchg
ret
mov
cmp
add
ins
xchg
stos
or
sub
mov
xchg
jl
outs
jb
cmp
cli
mov
scas
xor
jno
jae
push
ret
xor
adc
mov
sbb
shl
jae
aad
cmp
call
sub
jbe
sub
xchg
xchg
xchg
inc
dec
ret
pop
pusha
push
and
cmp
inc
inc
shl
jno
push
popa
push
jne
scas
mov
lods
cmps
xlat
pop
movs
mov
shr
loop
adc
dec
shl
sbb
cmp
inc
mov
inc
in
pop
cmp
fwait
or
std
and
or
out
mov
sti
xchg
jne
popa
popa
push
jp
in
add
mov
rcl
movs
rcr
les
push
sbb
cmp
call
push
xor
dec
loop
sub
stc
in
sbb
icebp
and
lds
imul
mov
mov
ds
cmc
movs
aam
xor
fwait
hlt
rcr
mov
push
js
fsub
repz
repnz
loopne
bound
fwait
lods
jbe
mov
xchg
mov
pop
mov
mov
stos
pusha
ja
and
inc
ret
movs
mov
ss
jp
sbb
jno
(bad)
sub
neg
pop
add
test
mov
push
jno
addr16
cwde
sbb
outs
test
adc
fnstenv
inc
pop
cmp
hlt
add
dec
mov
jns
dec
stc
inc
(bad)
leave
aam
add
xchg
dec
dec
jg
pop
repnz
mov
dec
jge
add
cmps
pop
add
xlat
repnz
dec
arpl
test
nop
mov
or
push
jo
out
push
cmp
lds
mov
cmps
lea
lock
dec
sbb
mov
lds
repz
jecxz
lods
push
clc
pop
inc
popf
pop
sub
push
push
inc
jno
retf
xor
xlat
jg
(bad)
push
repz
test
(bad)
mov
xor
aaa
xchg
mov
dec
out
das
dec
inc
jo
mov
sbb
mov
imul
(bad)
adc
push
scas
push
int
xchg
add
push
ror
out
pop
xor
ja
shl
scas
enter
aam
dec
add
pop
add
or
cmps
mov
cmp
add
pop
sub
dec
mov
jae
add
push
or
ret
loopne
out
fisubr
xor
mov
pop
aam
into
comiss
sbb
movs
mov
rcl
mov
push
out
jp
fdivr
dec
jnp
shl
pop
cli
mov
imul
jb
imul
scas
sbb
sub
sysexit
xor
xor
jle
test
aaa
pop
push
mov
call
push
mov
xor
hlt
lea
repz
add
push
add
clc
shl
mov
mov
cmc
popf
imul
mov
pushf
int
mov
pop
pcmpeqb
in
pop
movs
in
fiadd
xchg
pop
sbb
(bad)
or
mov
jae
xchg
dec
or
stos
cmc
bnd
daa
ficom
popa
push
jmp
or
shr
(bad)
and
adc
or
movs
cmps
pop
adc
and
popf
jp
out
inc
mov
sti
fcom
pop
add
jmp
(bad)
shl
call
push
cdq
dec
mov
or
neg
xchg
aam
cmp
(bad)
(bad)
sub
test
mov
gs
popa
pop
imul
test
and
fucomip
or
jns
rcr
push
les
xor
mov
jg
push
mov
(bad)
pop
bound
jmp
sub
retf
nop
test
cmps
out
mov
(bad)
and
sub
xchg
ret
sbb
inc
retf
out
test
std
aam
cmp
pop
sbb
int3
cmp
repz
adc
ret
loopne
xchg
push
ficom
bound
aam
inc
out
mov
push
nop
mov
inc
fwait
test
mov
mov
push
mov
adc
iret
inc
cmp
inc
in
xor
(bad)
lea
jnp
mov
rcr
shl
mov
add
push
hlt
xor
call
popa
cmc
in
fst
jg
pop
cmp
pushf
lock
stos
movs
nop
jge
mov
leave
mov
daa
jno
jo
xchg
adc
xor
outs
je
pop
rcl
(bad)
push
and
mov
lahf
pop
mov
push
or
jns
stos
jl
mov
fucom
scas
out
mov
int
pop
bound
xchg
nop
cwde
mov
in
ja
les
dec
mov
inc
xlat
inc
add
xchg
mov
xchg
sahf
cmc
dec
sub
mov
nop
mov
and
cdq
add
mov
add
xchg
test
mov
sub
aaa
pop
dec
mov
push
dec
int3
or
mov
mov
cmp
inc
mov
ss
sbb
mov
stos
xchg
stc
lds
bound
call
out
or
aam
mov
mov
icebp
xlat
les
jo
rcl
sub
inc
movs
cmp
sub
rcl
add
inc
mov
or
ret
les
das
int3
stos
inc
stos
pushf
aad
cmp
popa
fwait
sbb
xchg
mov
jb
icebp
(bad)
cmp
lea
adc
sahf
adc
xlat
xor
cmp
xchg
dec
fs
loopne
push
call
pop
jno
jnp
xchg
jne
jbe
rcr
sub
or
ja
dec
ficom
iret
dec
cli
push
ins
adc
ret
lahf
push
jl
adc
add
ss
adc
imul
xor
pop
push
leave
jle
shl
adc
shl
xchg
ja
cmp
add
push
adc
out
jge
imul
in
imul
in
mov
and
ret
fist
test
push
push
add
sahf
push
mov
mov
mov
mov
cdq
cmps
push
loop
push
cwde
ins
push
scas
dec
fnstcw
add
(bad)
mov
stos
push
in
lahf
(bad)
sbb
dec
push
mov
lahf
in
xor
cmp
mov
pop
(bad)
pop
and
ins
xchg
popa
or
xchg
fwait
dec
mov
test
and
fwait
cmp
jno
sbb
fisubr
push
div
ds
data16
pusha
iret
cmps
jmp
stos
cli
cmp
push
push
test
test
push
xchg
add
jg
mov
rcl
pusha
shl
pop
pushf
add
imul
inc
mov
repz
jecxz
or
mov
(bad)
fdivr
and
cs
jl
add
je
(bad)
neg
pop
cmp
pop
sti
dec
mov
cmps
add
xor
stos
gs
fdivp
add
cmp
lea
dec
repnz
jbe
dec
ret
lods
dec
jmp
aaa
(bad)
fstp
adc
jmp
js
jecxz
xor
jmp
xchg
sbb
jmp
adc
in
daa
cmp
or
jns
jg
or
test
cmp
mov
stos
or
cwde
(bad)
mov
sbb
lahf
mov
sti
add
scas
int
(bad)
cmp
mov
cmp
cmp
mov
shr
pop
into
data16
xchg
movs
je
sbb
xchg
je
popa
hlt
pop
xchg
add
gs
ret
icebp
dec
dec
jne
shr
popa
push
in
out
jne
fs
frstor
mov
dec
sub
icebp
fcom
or
mov
dec
ja
popf
cmp
stos
ret
lods
adc
push
cmp
(bad)
test
xchg
ja
push
mov
or
es
pop
test
inc
data16
push
push
push
iret
loop
fisubr
add
test
dec
mov
inc
sbb
mov
and
aam
push
not
mov
daa
sbb
sub
(bad)
xchg
lea
and
popf
retf
bound
cli
mov
(bad)
test
retf
and
fwait
jle
cdq
rcr
pop
(bad)
retf
loopne
rcpps
popf
inc
pop
dec
and
in
hlt
out
or
jmp
aad
mov
pop
out
fcomp
cmp
pop
push
clc
call
adc
jmp
pop
xor
push
lds
mov
and
sub
out
or
add
jge
(bad)
enter
adc
xor
inc
in
mov
xchg
jnp
dec
aam
mov
adc
inc
arpl
daa
test
rep
retf
fld
loope
icebp
mov
popa
imul
jo
add
retf
cmps
cld
inc
hlt
(bad)
push
sbb
or
add
mov
and
outs
sahf
frndint
sub
jg
ret
(bad)
(bad)
pushf
push
or
jnp
mov
sbb
mov
les
call
dec
sbb
xchg
test
test
sbb
xchg
adc
pop
sbb
push
jbe
scas
(bad)
dec
sub
xlat
adc
pop
adc
cmp
popa
pop
pop
fbstp
ror
das
xor
popf
inc
movs
mov
aaa
bound
out
cdq
xor
sti
push
mov
xchg
mov
dec
push
je
test
push
push
arpl
scas
popa
jg
stc
ficomp
inc
push
or
pop
ror
push
mov
sub
data16
xor
and
xchg
lods
enter
nop
adc
cli
dec
leave
fsubr
adc
inc
xchg
jo
mov
and
mov
mov
mov
cmp
bound
adc
jbe
xor
jp
jge
mul
pusha
pop
test
int
adc
mov
push
mov
and
aad
inc
mov
mov
pop
push
(bad)
ja
in
mov
cmp
stos
movs
les
inc
add
sbb
push
push
fsub
mov
cmps
addr16
push
std
hlt
rcl
dec
pushf
stc
sub
test
imul
test
add
out
sub
or
ror
pop
clc
or
scas
pop
mov
push
aad
sub
xchg
fldenv
test
in
mov
(bad)
dec
inc
scas
sbb
aad
fs
push
imul
inc
xor
push
or
daa
pop
jle
add
ds
sub
jo
aaa
scas
cmp
ror
retf
add
push
addr16
out
lahf
mov
xor
and
stos
jae
addr16
inc
lds
cdq
mov
test
and
dec
or
pop
and
call
push
add
popf
add
out
pop
cwde
xor
pushf
stos
mov
int3
test
jmp
inc
call
fidiv
mov
adc
mov
dec
pop
shl
adc
push
inc
lods
outs
add
out
pop
cmp
in
mov
(bad)
into
xchg
mov
hlt
and
xchg
test
add
pusha
cdq
or
jne
test
cmp
popf
xchg
push
sbb
add
aas
adc
frndint
int
jne
retf
xchg
push
cli
stos
stc
shl
pop
sbb
mov
int3
push
add
and
add
or
dec
sub
lds
fstp
xlat
arpl
(bad)
loope
xor
pop
shl
mov
in
aam
inc
ja
popa
push
xchg
(bad)
lea
add
inc
inc
jp
out
repz
jmp
jo
daa
lods
inc
fcmovu
add
leave
in
pop
pop
inc
and
mov
test
movs
xchg
retf
arpl
cmp
jmp
push
cwde
push
fistp
jmp
xor
je
push
cmc
lods
mov
pop
(bad)
sub
(bad)
loop
fwait
xor
setae
int3
enter
cmp
xor
xchg
dec
ins
xlat
pushf
cmp
xor
pushf
pop
and
hlt
dec
push
movs
push
xor
mov
js
imul
and
addr16
bound
xchg
push
mov
dec
lahf
push
clc
scas
cmp
ds
out
jmp
fild
or
or
and
or
xor
sti
sub
sbb
std
jne
fild
call
gs
std
mov
cwde
xchg
daa
mov
popa
test
mov
add
jo
pop
loopne
push
aad
and
int3
mov
pop
push
leave
int3
jb
pop
lods
push
es
mov
imul
sbb
out
loopne
rol
push
fidivr
loopne
scas
ja
in
pop
dec
repnz
out
push
dec
repz
adc
mov
adc
aad
xor
xchg
mov
or
mov
and
mov
xlat
fcom
ja
(bad)
(bad)
mov
pusha
dec
sub
test
lea
pop
shl
fnstcw
xchg
ss
rcr
rcl
mov
jae
or
daa
sub
dec
sbb
(bad)
leave
hlt
jle
outs
outs
mov
in
out
jl
inc
test
inc
cs
and
adc
mov
fcom
mov
out
test
or
(bad)
jmp
fisub
jbe
aaa
xchg
push
test
cmc
stc
add
in
jnp
fdivr
fstp
stos
std
mov
jns
xchg
pop
cmps
retf
xor
aaa
nop
das
mov
adc
movs
inc
cmps
aam
adc
push
test
movs
mov
dec
mov
mov
movs
dec
pop
ret
push
add
lods
jae
pop
xor
mov
and
inc
int3
pop
pop
test
icebp
inc
movs
(bad)
push
and
add
mov
xchg
mov
int3
mov
sbb
retf
jp
(bad)
add
pop
into
int
hlt
or
xor
sbb
mov
xchg
mov
imul
fwait
loopne
out
dec
into
mov
sub
cmps
jl
sar
in
sub
std
out
and
outs
jl
jl
movq
push
add
scas
inc
stos
scas
mov
stc
ror
jo
xor
fld
pop
data16
xlat
nop
add
out
icebp
jle
jp
add
add
mov
xor
loope
sbb
pusha
in
retf
push
pop
and
xor
inc
xor
fs
xchg
shr
xchg
add
rol
push
outs
mov
inc
pusha
add
dec
xor
call
ficomp
lods
sar
sub
mov
xor
fidiv
fstp
dec
hlt
sub
fwait
sub
and
clc
push
repz
mov
inc
cs
sub
jo
stc
push
mov
shr
loop
repz
push
bound
push
mov
xchg
aas
int3
or
and
sbb
(bad)
push
int3
pop
bound
mov
movs
pop
cmps
stc
mov
adc
inc
(bad)
push
sbb
xchg
sbb
aaa
scas
not
sbb
pushf
ss
push
imul
cmp
test
push
popa
retf
inc
push
mov
jecxz
mov
mov
or
jecxz
mov
in
dec
and
lods
adc
ins
mov
xor
cld
fs
or
adc
test
or
mov
mov
xor
(bad)
mov
mov
mov
mov
cmp
popa
and
jp
das
pop
cs
jl
mov
mov
outs
out
mul
aad
(bad)
sbb
adc
push
add
cmp
or
inc
adc
daa
movs
jne
dec
shl
js
jae
cmp
mov
retf
add
push
mov
rcr
in
pop
sbb
or
and
mov
lods
jecxz
jg
jmp
out
push
dec
pop
adc
fwait
ret
std
dec
inc
pop
rol
adc
test
pop
pop
xor
sbb
cdq
js
cmp
jge
in
jne
loop
cmp
add
lock
div
in
mov
xchg
mov
mov
dec
icebp
popa
daa
mov
pushf
je
test
cld
retf
pop
jg
push
cmp
jne
push
call
outs
mov
adc
mov
int3
out
and
sub
test
adc
mov
(bad)
pop
cmps
jno
sub
shr
shl
jp
jb
les
dec
cmp
mov
xor
dec
loope
in
test
jl
push
jmp
int3
fs
dec
mov
ins
loop
test
cdq
xchg
popf
js
icebp
sbb
ins
ffreep
push
test
imul
xor
mov
mov
popa
and
or
inc
push
adc
push
scas
mov
or
mov
adc
aas
and
jmp
xchg
pusha
das
inc
call
xor
and
pop
jle
push
push
popf
xor
fnstenv
(bad)
mov
leave
dec
mov
jge
lea
add
mov
pop
cwde
aad
or
push
(bad)
xchg
mov
in
outs
pushf
das
mov
dec
cmp
movs
xor
adc
jae
sbb
mov
int
mov
xlat
mov
ja
mov
cmc
gs
loopne
scas
dec
iret
jno
xor
or
mov
push
ror
test
sub
neg
pop
xchg
(bad)
(bad)
lods
xor
or
add
mov
cmps
loope
push
and
push
and
or
xchg
and
cmp
adc
and
out
xchg
pop
xor
pop
dec
dec
mov
inc
add
imul
cli
add
mov
add
jno
and
sub
xor
call
fcomip
sbb
(bad)
xor
dec
into
sbb
fidivr
sub
mov
mov
fnstsw
jns
inc
pop
jecxz
and
in
addr16
test
push
push
sbb
jbe
rcl
mov
dec
mov
dec
mov
push
add
aas
loopne
adc
sar
sbb
ins
test
outs
adc
sub
rcl
or
neg
es
ret
in
dec
adc
fimul
sti
add
imul
enter
fmul
and
adc
xlat
sbb
fdiv
xchg
xchg
stos
mov
mov
mov
inc
mov
mov
push
nop
dec
lea
lea
movs
cmp
sub
and
ds
xor
sub
jl
retf
sahf
lahf
xchg
push
sahf
scas
xor
imul
sbb
scas
add
rcr
int3
(bad)
cmc
sar
imul
stos
mov
inc
pop
xchg
push
pop
sahf
sbb
xchg
add
fild
mov
iret
mov
inc
push
les
shr
lea
cmp
int
test
out
in
addr16
mov
mov
dec
push
movs
out
inc
pop
sbb
nop
ret
sbb
push
xchg
xor
jmp
rol
jl
xchg
add
cmp
(bad)
xchg
sbb
std
or
push
rdrand
add
jmp
scas
dec
scas
adc
jne
loop
dec
cmp
or
loope
add
fsub
ror
stos
mov
stos
adc
gs
jp
adc
fsubrp
adc
cmp
cmp
sbb
ins
call
jo
and
and
push
mov
push
mov
mov
sub
or
enter
fimul
sbb
push
sbb
pop
sti
scas
mov
rol
mov
js
shl
jne
test
pusha
mov
lea
adc
mov
pop
pop
cmp
(bad)
dec
dec
ror
add
scas
mov
add
cmc
ror
cli
jne
adc
jmp
xchg
(bad)
aam
jmp
add
mov
fadd
dec
cmp
fcom
mov
pop
enter
mov
mov
push
loope
and
sbb
xchg
cdq
cs
ret
push
xor
inc
and
nop
stos
push
lods
dec
push
cs
cwde
ret
or
cmps
and
adc
or
in
cmp
les
cli
cmp
mov
(bad)
hlt
adc
aaa
loope
loopne
mov
rcl
test
xor
cmps
mov
or
dec
xchg
dec
retf
fld
mov
jns
stc
push
in
ficomp
xor
test
movs
loopne
cmps
mov
dec
out
cwde
frstor
not
and
dec
les
xlat
ins
sub
adc
and
and
call
or
or
leavew
(bad)
shl
ins
retf
js
push
xchg
cmp
bound
(bad)
in
mov
rol
ins
add
mov
std
or
lods
adc
outs
dec
fistp
mov
add
lock
jne
xor
jbe
sbb
pop
pushf
push
dec
in
and
push
sub
faddp
cmp
das
sub
sar
xor
mov
rcr
inc
into
mov
mov
adc
fcomp
jl
jmp
push
add
push
jmp
js
mov
xor
mov
cmp
inc
cmp
div
sub
mov
mov
xchg
mov
movs
retf
imul
dec
popa
nop
dec
(bad)
aas
mov
aam
and
dec
div
add
mov
je
xchg
mov
in
rcr
mov
jne
pop
cmp
xchg
dec
and
loope
rcr
jbe
dec
add
dec
xlat
jo
call
push
into
ret
rol
mov
ins
rep
xor
push
sub
arpl
pop
push
and
sub
rcr
xchg
push
cmp
xor
ficom
movntq
popf
sar
xor
dec
mov
fwait
push
mov
test
lock
xchg
adc
push
iret
sub
pushf
sub
adc
mov
cmps
sbb
add
mov
push
sbb
pop
mov
imul
jle
addr16
(bad)
out
ins
xor
call
pop
clc
xor
adc
lds
pop
and
loope
xor
sar
dec
pop
adc
mov
in
sub
cli
pop
(bad)
arpl
pushw
mov
inc
test
push
mov
cmp
fcomp
(bad)
or
mov
je
jmp
cs
add
xchg
or
add
pusha
cmp
sbb
dec
and
or
lods
xchg
mov
out
mov
cwde
pop
push
in
adc
jo
data16
je
imul
mov
push
inc
(bad)
push
xchg
xor
xchg
fsubrp
sbb
xor
jnp
sub
or
jo
push
lds
cmp
jns
(bad)
std
test
dec
pop
pop
jg
mov
push
dec
add
test
dec
int
aam
fdivr
push
mov
call
xchg
mul
pop
loope
in
push
pushf
jo
test
ret
dec
jg
push
and
ja
in
xchg
and
mul
daa
int3
jmp
psadbw
mul
pop
ins
call
or
scas
cld
inc
jl
inc
fnsave
pop
jecxz
retf
das
inc
xor
ins
cmp
mov
pop
mov
loope
pop
rcr
jo
int
xchg
jns
test
fdiv
aam
stc
jecxz
mov
xchg
mov
adc
loope
adc
shl
retf
arpl
dec
test
icebp
xchg
std
loope
pop
mov
movs
and
into
jle
movs
sbb
mov
js
int
popa
inc
adc
pop
popw
outs
sub
add
out
xor
push
(bad)
shr
cwde
pusha
cmc
and
rol
xor
scas
sub
bound
jo
fwait
push
inc
push
aaa
jecxz
inc
das
in
leave
out
or
jmp
(bad)
xchg
lds
jo
pusha
iret
bound
call
cmp
test
loopne
daa
jle
icebp
mov
cmp
mov
ret
aaa
jmp
inc
aad
leave
inc
mov
pop
test
dec
pushf
dec
push
aam
pop
es
mov
dec
xor
and
in
push
jecxz
paddusw
imul
and
mov
out
push
xor
cwde
mov
addr16
inc
mov
into
cmp
mov
pusha
jae
jbe
int3
pusha
pusha
ds
jmp
clc
push
pushf
sub
lea
scas
jle
mov
sub
mov
adc
push
and
in
jmp
inc
add
clc
xor
in
adc
xchg
xchg
xchg
lods
or
jge
not
popa
pop
xor
call
fs
or
or
xor
mov
xchg
mov
adc
imul
xor
sbb
sub
pop
cmp
neg
cmp
fidiv
jbe
out
dec
xor
adc
call
std
mov
jp
xlat
popa
sti
pop
fild
inc
pop
or
jmp
or
mov
call
dec
(bad)
xchg
pop
pop
push
xchg
scas
jbe
icebp
mul
jae
push
adc
jb
xor
pop
fst
aaa
pop
inc
inc
test
push
enter
dec
not
rcl
mov
xor
jmp
jmp
mov
test
shl
jae
sub
repnz
sub
cmp
adc
inc
rcl
jo
sbb
adc
enter
iret
and
mov
dec
das
stc
pushw
sbb
adc
sub
push
or
xchg
and
imul
pop
(bad)
inc
push
adc
int3
loope
popf
icebp
xchg
stc
fstp
stos
out
pop
pop
out
lods
in
dec
cli
inc
pusha
push
scas
rep
xchg
out
ja
inc
mov
and
add
mov
push
xor
retf
and
adc
inc
cld
inc
cmc
or
push
cmp
xchg
sub
add
repz
and
or
dec
sbb
in
adc
or
xchg
cmp
jecxz
sahf
iret
xchg
and
and
(bad)
fisubr
inc
jecxz
dec
xor
jle
rol
lds
xacquire
stos
mov
int
dec
or
lods
cli
jbe
xchg
pop
add
sub
push
or
jle
icebp
sbb
(bad)
arpl
imul
fild
or
ficomp
lds
dec
frstor
ds
ins
add
repz
or
jae
cmps
ins
mul
xchg
js
int3
pop
push
lahf
leave
movs
lods
push
repz
mov
movs
xor
outs
or
or
mov
sub
movs
add
lods
(bad)
pop
sahf
ror
inc
mov
pop
mov
add
loopne
jge
lods
pop
push
inc
mov
nop
inc
and
test
ret
inc
fwait
sub
adc
dec
or
pop
stc
xchg
cmp
test
int
aas
scas
push
mov
std
push
(bad)
ficomp
ds
into
xchg
cs
mov
ins
push
int
in
fmulp
ret
pop
dec
inc
xchg
or
sbb
adc
mov
sbb
(bad)
out
xchg
imul
fsubr
(bad)
aaa
sbb
mov
xchg
push
add
(bad)
gs
dec
inc
dec
pop
inc
jp
imul
aad
cmp
out
pop
ss
cmp
sub
idiv
mov
mov
mov
jge
ins
push
cdq
dec
out
or
aaa
shr
or
loopne
cdq
scas
sahf
pop
sti
int
(bad)
sbb
popa
arpl
daa
add
fldcw
dec
pop
cmp
test
push
ja
les
push
xchg
loope
push
(bad)
repz
mov
scas
add
loop
and
ss
push
aaa
pop
or
cmp
pop
mov
ins
xor
ret
test
ds
loopne
clc
fdiv
inc
ror
bound
int3
xor
dec
add
and
cld
or
mov
stos
and
push
fisttp
jo
retf
inc
aad
sbb
out
(bad)
push
jne
cld
test
mov
jo
and
push
sbb
pop
mov
stos
cwde
cli
mov
sbb
xchg
push
mov
mul
mov
mov
push
pop
cmps
jns
jns
sub
xor
ja
pop
rcl
sti
cs
outs
dec
mov
jle
and
cwde
jo
mov
sub
push
jmp
push
cmp
lock
(bad)
add
pop
out
and
fwait
jmp
aad
repnz
data16
popa
mov
cld
cmp
pop
jle
add
cmp
daa
bound
gs
mov
or
mov
cli
in
std
mov
pop
lds
cdq
sub
sbb
iret
ret
loop
cld
add
cld
mov
cwde
pop
push
or
dec
mov
test
xor
ins
push
cli
jb
mov
jns
and
icebp
inc
fld
mov
cmp
jbe
aaa
mov
mov
dec
in
pop
lods
sti
mov
pushf
dec
fs
outs
pushf
lds
mov
lods
aaa
push
xchg
mov
cld
(bad)
fwait
int3
cwde
sbb
dec
aas
out
fistp
mov
stos
fadd
loopne
xchg
rcl
int
mov
cs
scas
test
adc
out
lahf
(bad)
les
rol
sub
mov
push
fwait
add
mov
push
push
pop
xor
stos
xor
jb
pop
fild
std
pop
mov
(bad)
jp
sbb
add
and
aaa
repz
repz
mov
sbb
or
mov
mov
leave
sub
push
xor
daa
mov
cld
pusha
loop
mov
xchg
jmp
inc
gs
je
fld
fist
or
mov
fcmovu
call
or
mov
push
ret
pop
inc
cmps
call
or
jmp
outs
jb
lock
lds
ret
scas
popa
sbb
test
sub
fcmovnbe
loop
lods
in
xor
ds
fidiv
push
les
mov
sub
push
into
aaa
mov
dec
mov
xor
test
fsubr
cmp
test
retf
mov
addr16
(bad)
fcomp
hlt
push
add
and
xchg
loop
call
mov
jecxz
stc
xchg
cmps
add
std
push
lds
enter
add
shl
sbb
ja
fistp
or
ds
xchg
push
sbb
int
dec
cwde
test
xchg
es
out
sbb
sbb
shl
push
dec
imul
jne
loope
cmp
ja
fdiv
sbb
xlat
sbb
js
imul
dec
ror
(bad)
fwait
adc
inc
lds
aad
lods
mov
addr16
test
arpl
push
push
mov
adc
pop
es
cmps
mov
idiv
(bad)
outs
popf
in
test
call
mov
pop
xchg
push
mov
mov
push
hlt
dec
mov
(bad)
in
mov
lock
cmp
mov
fnsave
ds
fcomp
and
push
loopne
fld
jno
pop
iret
outs
cmc
mov
mov
mov
dec
cmp
daa
loop
mov
and
rcr
mov
(bad)
out
retf
cmp
xchg
mov
test
mov
mov
dec
xor
leave
inc
or
cdq
jo
add
shr
xchg
shl
popa
test
call
pop
mov
adc
mov
aas
sahf
dec
test
test
aaa
mov
inc
pop
add
lock
(bad)
push
jecxz
cmp
adc
sti
idiv
push
jmp
inc
fldcw
dec
and
(bad)
imul
jl
jmp
dec
nop
bound
dec
add
lahf
das
or
xor
hlt
fidivr
in
inc
cmp
cdq
cmp
mov
cwde
xor
leave
repz
imul
stos
xlat
mov
push
jo
adc
in
ja
(bad)
xchg
sub
sar
dec
push
jb
pushf
adc
inc
mov
mov
and
pop
sbb
mov
int3
pop
cld
xchg
sub
clc
inc
and
ja
rcl
repz
loope
sbb
and
dec
push
dec
imul
mov
in
sbb
or
ins
and
call
sub
lahf
repnz
(bad)
sbb
push
in
dec
frstor
not
movs
pop
mov
int3
sbb
retf
or
jmp
scas
(bad)
rep
das
out
cmps
sub
data16
mov
jno
push
nop
jge
ret
pop
(bad)
mov
and
ja
push
ret
mov
popf
sbb
mov
pop
lods
popf
movs
sbb
and
fsub
pusha
pop
ja
add
data16
test
add
pop
or
cmp
mov
push
inc
jl
jae
cwde
mov
lds
jge
xlat
inc
adc
xchg
inc
xor
dec
jns
fisubr
jns
hlt
(bad)
push
xor
call
into
stos
pop
mov
outs
int
and
or
xchg
in
cmp
sahf
mov
ins
fwait
(bad)
mov
pause
xor
xor
mov
clc
aad
lahf
add
add
sub
add
mov
stc
sbb
pop
and
add
mov
mov
fidivr
fwait
sbb
mov
dec
dec
arpl
call
xor
and
fwait
in
(bad)
or
mov
mov
mov
nop
pop
mov
fisubr
mov
popa
jmp
xchg
in
cmps
and
pop
jae
inc
in
jno
rol
cdq
or
sbb
stos
scas
adc
mov
movs
out
ror
xchg
xor
sub
lds
icebp
mov
jo
pop
retf
mov
loop
add
in
lods
mov
pop
sub
cmp
xor
cmps
dec
push
cmc
mov
xor
fistp
push
(bad)
jp
rol
push
in
push
mov
xor
or
cdq
push
dec
push
das
int3
jno
dec
xor
inc
cs
iret
push
cmc
push
dec
(bad)
push
dec
mov
pop
xchg
loopne
sbb
(bad)
call
mov
aam
sbb
int3
cmp
jne
pop
push
jge
jp
imul
pop
push
outs
pop
in
jnp
or
xchg
pusha
mov
lds
mov
pop
(bad)
jb
fcomp
jo
icebp
(bad)
in
add
mov
sbb
add
fdiv
jne
or
ret
sub
ja
popf
xor
nop
mov
jae
rol
jmp
pusha
jmp
rol
loopne
fs
jmp
pop
repnz
dec
mov
xlat
retf
mov
xchg
fdivr
ins
mov
daa
aaa
jmp
sub
xor
cmp
cdq
(bad)
hlt
movs
mov
cmp
popa
and
test
and
add
imul
dec
movs
cmp
fadd
fst
movs
scas
pop
xchg
pop
retf
xchg
(bad)
and
sub
addr16
cmps
retf
dec
push
pop
and
adc
test
call
mov
cmovno
push
imul
fmul
and
cmc
mov
out
popf
mov
int
mov
xchg
mov
pop
ds
jl
ins
xchg
out
or
(bad)
jmp
jmp
xchg
xor
xchg
or
stos
xor
cli
push
out
dec
jmp
or
xchg
aad
les
add
icebp
imul
push
cs
lods
in
xchg
outs
int
pusha
lods
pusha
lods
xchg
mov
movs
sub
mov
xor
mov
sbb
fild
push
(bad)
call
cmp
retf
sbb
jbe
xor
mov
loope
in
aam
outs
dec
push
imul
inc
shl
(bad)
pop
cmc
push
aam
cmp
call
mov
lea
arpl
data16
cmps
sub
sar
sbb
jnp
xchg
mov
dec
stc
daa
cmp
repnz
loope
out
aas
ret
adc
pop
js
mov
xor
mov
jg
(bad)
mov
jbe
dec
aaa
sbb
movs
sbb
out
push
aam
or
cmp
mov
push
retf
leave
in
push
mov
xchg
cmp
fidiv
ds
mov
test
fimul
inc
into
ret
out
and
lock
pop
push
pop
gs
or
cmp
fs
addr16
inc
adc
dec
mov
jecxz
or
push
jb
and
add
repnz
mov
dec
imul
jp
repz
int3
fwait
mov
imul
mov
out
(bad)
imul
les
mov
lods
sub
push
cdq
pusha
aam
inc
cmp
sub
cmp
fld
mov
or
loopne
outs
es
stos
cmp
cmc
push
ss
mov
aas
pop
aas
aad
sbb
jbe
push
iret
nop
scas
adc
in
mov
rcr
in
sbb
rol
cmc
push
test
jle
mov
xor
sbb
mov
(bad)
test
call
cmps
adc
xchg
out
sti
or
jle
leave
fldcw
xchg
mov
cmp
cmp
sbb
xchg
mov
lods
push
fldcw
fstp
stos
ret
int
jmp
loope
jecxz
jecxz
mov
or
pop
popf
iret
sub
lea
push
in
or
cmp
jl
xchg
sbb
inc
mov
jnp
fbld
scas
jno
mov
dec
ss
xchg
jp
stos
push
ja
js
leave
cs
jmp
stos
mov
lea
jns
add
pushf
out
repnz
mov
ins
dec
test
cmps
cmp
cmps
rcr
stc
dec
xchg
sbb
pop
push
push
sub
jmp
or
jbe
shr
mov
jmp
loop
into
loopne
dec
jg
scas
jo
pop
mov
push
gs
inc
jg
popf
popa
rcr
int3
xor
mov
(bad)
fcom
inc
jecxz
push
movs
sahf
fisubr
lds
jne
psadbw
aas
out
dec
std
in
stos
inc
sbb
popa
jge
nop
xor
popf
dec
xchg
out
shl
mov
and
sbb
mov
xchg
pop
or
inc
pop
mov
shr
xor
outs
inc
fwait
xchg
xchg
lahf
xchg
adc
retf
fistp
outs
inc
dec
sub
test
dec
adc
mov
add
adc
add
movs
add
cmps
cmp
jae
arpl
jnp
cmps
jp
adc
ins
clc
sbb
pusha
sbb
sti
xor
mov
sub
and
add
stos
lods
or
loop
shl
repnz
inc
mov
xchg
mov
adc
ficom
pusha
jp
out
faddp
fist
enter
popa
out
add
stc
jo
out
xor
mov
je
mov
(bad)
popf
(bad)
jns
dec
out
loopne
mov
mov
sub
addr16
repnz
or
inc
sbb
(bad)
or
pop
in
sbb
inc
inc
cld
in
xchg
pop
aam
std
xchg
mov
loope
or
jns
cmp
mov
xchg
adc
push
inc
mov
add
(bad)
fiadd
pusha
cdq
hlt
inc
rcl
into
stc
sbb
popf
jge
rcl
inc
cld
ins
and
retf
test
cmc
jecxz
push
aas
and
lods
stc
retf
stos
pcmpgtd
sbb
popa
es
xlat
add
ror
loop
push
daa
push
inc
ror
cmp
jmp
dec
mov
es
mov
jge
cmp
ss
cli
gs
mov
ret
call
adc
fild
mov
and
loope
jge
pushf
stos
jno
push
dec
retf
xor
cmp
or
lea
mov
push
ja
hlt
pop
xchg
out
xchg
xor
(bad)
imul
test
(bad)
aas
cld
cmps
cdq
cs
sbb
xor
pop
add
and
icebp
sbb
jg
dec
(bad)
jns
div
lods
pop
stos
ret
or
xchg
fwait
lea
out
mov
adc
neg
enter
stos
cmp
xor
ja
xchg
and
in
retf
xor
movs
sub
(bad)
push
cmp
loopne
stc
repz
mov
inc
lea
daa
mov
mov
sub
mov
or
fs
fxch
sub
fcomp
fld
pop
jne
dec
add
mov
out
push
ins
lods
dec
lods
xlat
(bad)
call
loope
pop
rol
jmp
pop
lds
(bad)
repz
adc
lds
inc
inc
adc
add
test
mov
mul
cmp
aad
ret
jne
out
and
fmul
in
pop
lahf
xor
push
retf
out
fidiv
ins
mov
xchg
scas
mov
jb
pop
adc
mov
test
leave
jmp
sub
sbb
shl
fisubr
cwde
xchg
mov
cmps
(bad)
int3
mov
mov
stos
stc
adc
add
rcr
push
sar
scas
ja
call
inc
js
push
pusha
into
cmp
cmp
out
sti
and
or
aas
inc
mov
push
stos
aas
xlat
(bad)
sahf
xchg
cli
lods
adc
jmp
dec
test
cmc
leave
pop
sar
push
jecxz
xor
xchg
xchg
mov
sub
cmp
test
fbstp
mov
sub
mov
int3
fidivr
scas
mov
pop
mov
jo
jmp
sub
pushf
fisttp
mov
fisubr
icebp
pop
imul
mov
inc
mov
push
push
in
add
xchg
inc
test
or
jge
or
lods
jg
fidivr
add
fisub
and
xor
fwait
ret
mov
cmp
adc
dec
jmp
lds
xor
(bad)
inc
push
push
cs
lds
(bad)
cmp
sahf
pop
add
pusha
mov
fmul
dec
in
(bad)
dec
jo
lahf
and
pop
jl
sbb
hlt
in
dec
dec
(bad)
and
lods
cli
in
push
ds
and
mov
cmp
add
lods
mov
int
dec
inc
dec
inc
movs
xor
sub
jge
std
xchg
jne
sahf
imul
xor
cmp
cmps
aas
nop
popf
ret
in
add
mov
pop
mov
mov
jne
push
mov
sbb
mov
ins
sbb
popa
fidiv
icebp
jne
push
jnp
cmps
jne
outs
cld
mov
pop
lods
fld
in
dec
cmc
(bad)
or
pop
iret
sub
or
frndint
dec
fdiv
clc
fisubr
pop
or
cld
imul
mov
(bad)
cmp
popa
xchg
pop
ret
adc
repz
mov
cmp
push
inc
pop
arpl
std
jb
pushf
lock
in
int3
push
and
inc
sar
scas
pop
xchg
lds
scas
push
and
mov
or
addr16
push
push
pusha
and
pop
xchg
mov
into
adc
sbb
push
inc
daa
pop
mov
setle
mov
les
mov
sbb
ss
dec
dec
arpl
cmp
push
jne
jne
adc
arpl
inc
ins
das
popa
mov
jle
sbb
bnd
dec
ffreep
fadd
push
je
add
imul
mov
sbb
sbb
stos
nop
jle
dec
movs
xor
push
ss
out
lods
bound
jecxz
xor
jmp
int
or
push
loope
outs
mov
push
or
pop
arpl
lock
mov
cli
in
push
test
aas
push
dec
adc
pop
jbe
adc
int
or
or
inc
lahf
fwait
ins
enter
mov
sub
lock
mov
in
mov
fcomip
je
sub
adc
jmp
add
sbb
pop
dec
test
pop
mov
xchg
out
xchg
mov
push
sbb
bnd
adc
out
stos
arpl
inc
mov
push
lock
mov
mov
nop
dec
pop
sbb
cs
cmp
xor
cmp
push
ror
or
test
xor
fs
mov
into
movs
and
cmp
jmp
adc
sub
dec
mov
fs
xchg
sub
mov
jb
ret
ins
pop
call
adc
lock
shl
add
fnsave
mov
in
push
mov
retf
xor
xchg
retf
loopne
pop
dec
sbb
mov
dec
mov
adc
add
push
inc
pop
inc
mov
mov
mov
pop
mov
cmc
sub
add
int3
ficom
lods
xchg
daa
pop
fdivr
jg
ret
jp
jecxz
add
mov
ffreep
jmp
jno
adc
inc
push
push
dec
(bad)
sub
shl
cs
xor
add
mov
cmp
out
xor
adc
adc
clc
stos
shr
push
iret
ror
imul
imul
cmp
ja
scas
or
sahf
into
scas
retf
ds
push
retf
mov
dec
and
ret
(bad)
(bad)
out
sti
sar
push
xor
movs
repz
sub
daa
fwait
pop
rcl
ins
push
sahf
xchg
or
and
inc
fistp
jecxz
sar
pop
mov
pop
jmp
arpl
push
and
jbe
ja
cmp
(bad)
ds
scas
enter
clc
inc
repnz
test
in
outs
jecxz
mov
test
dec
ss
inc
push
adc
and
pause
jp
mov
pop
xchg
les
inc
call
jge
out
sub
push
sub
dec
pop
sbb
jg
retf
lock
fwait
ja
jmp
adc
mov
btr
mov
mov
mov
arpl
jae
out
xor
cmp
push
cli
es
or
ret
pop
adc
test
and
aaa
(bad)
jne
pusha
lods
ds
and
jecxz
sbb
je
dec
push
out
add
xor
(bad)
adc
stc
add
adc
lods
lock
jbe
sub
sub
dec
push
pop
dec
movs
jg
push
fcmovb
dec
daa
rcr
retf
xor
sbb
ins
mov
mov
jae
movs
out
std
sbb
leave
mov
inc
sbb
retf
push
mov
stos
sub
lock
lahf
retf
add
pop
ins
push
popf
pop
pop
shr
out
and
imul
ret
mov
pop
int3
cmp
mov
jg
call
fiadd
test
arpl
test
jle
lock
xlat
shr
scas
mov
(bad)
inc
pop
mov
iret
xchg
ret
retf
pop
adc
les
retf
loop
nop
cmp
pop
fwait
mov
js
sub
inc
daa
out
std
mov
je
loopne
test
test
scas
mov
bnd
outs
mov
sbb
xor
shl
cmp
lahf
push
mov
push
dec
xor
mov
add
pusha
movs
daa
cmp
pop
mov
push
jecxz
jno
or
pusha
sbb
iret
xchg
pop
loopne
inc
addr16
outs
push
jns
sub
stos
mov
(bad)
cmps
xadd
iret
outs
sub
imul
mov
fiadd
jle
push
inc
add
mov
fsubr
sti
ja
pop
and
(bad)
push
addr16
out
lahf
jb
jle
mov
fist
int3
or
outs
aam
out
out
mov
call
ins
nop
push
push
movs
shl
dec
fiadd
inc
ins
dec
lea
sbb
mov
icebp
mov
dec
mov
xchg
mov
inc
out
cmp
sbb
inc
cmc
mov
imul
push
and
pushf
pop
mul
push
jo
mov
push
pop
inc
sysenter
add
pop
int3
push
psraw
repz
das
jge
xchg
out
push
sub
ds
inc
rcr
aas
int3
(bad)
pop
cdq
int3
jbe
mov
stos
arpl
push
fiadd
lea
shl
xchg
mov
aas
xor
xchg
xchg
outs
shl
inc
jg
dec
imul
pushf
gs
outs
inc
lds
or
fcmovnb
dec
dec
cmps
cmp
out
inc
push
outs
cmp
adc
data16
ret
loope
not
aas
hlt
cs
push
out
mov
mov
inc
stc
or
mov
repz
scas
imul
ins
retf
jmp
cmps
icebp
dec
lea
imul
xor
xchg
pop
test
scas
movs
inc
adc
scas
or
loop
cmc
mov
repnz
dec
xor
mov
inc
adc
lds
shl
push
inc
pop
mov
jb
mov
dec
jnp
mov
daa
jno
mov
add
pop
leave
mov
jnp
inc
sbb
inc
sub
mov
inc
or
js
cmp
dec
jnp
aas
pop
out
push
jns
sbb
xor
mov
sub
clc
(bad)
xchg
inc
into
xchg
in
ret
mov
add
stos
dec
imul
mov
sub
add
adc
aas
das
jecxz
mov
rol
sub
xor
xor
ror
push
(bad)
loope
ins
loopne
sub
or
jp
push
sti
jae
and
iret
mov
out
inc
repz
lahf
and
mov
out
mov
xchg
push
popa
in
pop
or
mov
data16
jle
inc
inc
dec
and
loop
loope
lds
stos
add
mov
mov
fisub
pop
sub
add
scas
jle
in
lods
lea
pop
inc
in
and
xor
cmp
aad
push
or
cwde
xchg
push
vandnps
sbb
xchg
dec
pop
js
xlat
out
popf
or
push
inc
cmp
test
repz
ss
repz
add
arpl
mov
adc
adc
pop
xchg
scas
dec
xor
pusha
cmps
cmp
sbb
xchg
and
xor
test
cmp
lahf
mov
mov
and
(bad)
dec
fild
ds
cmp
push
inc
cmp
jmp
xchg
mov
and
mov
pop
mov
shr
mov
jb
mov
setne
cmps
int
or
mov
pop
je
scas
inc
fld
pop
inc
jg
pop
jmp
cmp
add
(bad)
into
(bad)
jnp
inc
(bad)
add
aas
add
(bad)
cmp
leave
cmps
leave
mov
sub
or
das
or
fmulp
xchg
adc
shr
jmp
adc
fdivr
aam
push
addr16
cmp
fwait
push
pop
lahf
mov
call
push
jno
rol
in
ror
sub
sub
mov
lea
add
retf
mov
add
inc
adc
push
rcl
jbe
pop
cdq
mov
add
add
sbb
(bad)
or
fdivr
mov
xchg
dec
mov
mov
mov
dec
fiadd
xlat
jp
and
hlt
daa
loop
gs
inc
inc
cmp
dec
sti
test
xor
scas
shl
shl
out
lock
scas
popf
in
shr
mov
lods
dec
push
(bad)
int
xchg
cmp
fwait
iret
jo
dec
cs
frstor
ficomp
pusha
cmps
sbb
addr16
out
call
aam
mov
mov
xor
mov
enter
push
adc
jnp
scas
mov
loope
xchg
test
ret
in
sub
jmp
inc
push
sub
inc
mov
xchg
stos
pop
or
paddd
rol
or
aas
xlat
add
fs
loopne
push
pop
test
xor
adc
ja
aad
lahf
je
scas
add
int3
(bad)
mov
gs
in
mov
push
je
jmp
jle
and
cmp
es
mov
ret
mov
xchg
(bad)
mov
push
dec
cmp
push
fucomi
pop
add
push
mov
jb
adc
pusha
and
dec
popa
mov
mov
jne
mov
test
mov
jle
push
test
mov
movs
cmp
(bad)
in
dec
sub
icebp
cmp
scas
sub
lock
dec
sti
dec
xor
std
mov
or
sub
sub
retf
dec
mov
xor
loop
inc
sub
mov
mov
sti
int
popa
outs
addr16
mov
mov
mov
push
repnz
cmovnp
shl
inc
pop
movs
adc
jl
add
(bad)
and
test
loope
pop
push
fist
adc
or
and
sahf
jle
xchg
outs
imul
add
test
push
push
aad
(bad)
(bad)
mov
sbb
inc
lods
(bad)
mov
cmp
inc
fcom
mov
push
mov
mov
rcl
loope
inc
cmps
pop
push
movs
lahf
jmp
xchg
mov
xchg
sbb
in
pop
clc
push
jle
mov
fadd
xor
dec
sub
(bad)
and
fsubr
stos
push
cdq
rol
dec
mov
mov
xchg
loopne
cmp
dec
jge
and
mov
or
cmp
push
and
or
int3
jb
inc
mov
mov
outs
icebp
(bad)
xor
pushf
and
or
jns
adc
int
xor
cmp
push
jb
outs
test
fistp
fisub
ds
ret
sub
xchg
inc
push
jmp
lods
enter
test
mov
aad
and
or
daa
popw
movs
pop
jae
mov
mov
jb
sbb
lea
hlt
jecxz
cs
(bad)
sbb
mov
cdq
cmp
mov
cld
sbb
into
pop
fcom
mov
je
dec
nop
retf
jecxz
outs
jg
cli
xchg
les
push
sub
adc
add
pop
xchg
pop
add
add
sbb
or
call
fild
imul
stc
(bad)
fsubr
mov
sbb
cmp
and
adc
adc
movs
mov
or
jo
mov
dec
cmps
pushf
stos
mov
repz
shr
cmps
and
push
add
leave
xchg
pop
bnd
mov
pop
rcr
sbb
in
sub
je
jp
sbb
fwait
mov
push
lea
repnz
add
cli
add
push
adc
jmp
idiv
pop
cmp
adc
xchg
bound
mul
dec
stc
jmp
stc
or
out
sub
sub
add
cmp
sub
das
or
call
les
adc
das
jns
cwde
test
jmp
in
and
mov
push
xor
push
or
out
jmp
adc
lahf
test
pop
int
test
mov
idiv
movs
out
(bad)
cwde
stos
rcr
iret
daa
rcr
pop
mov
cld
aam
dec
in
xchg
and
fidiv
push
sub
inc
add
sub
jae
cwde
jns
test
into
push
dec
addr16
xchg
aam
mov
in
jbe
inc
jo
adc
sbb
cmp
stos
addr16
out
push
xchg
xchg
dec
into
(bad)
popa
sahf
xor
movs
out
mov
stos
sbb
and
imul
or
es
mov
ret
add
sub
int3
xchg
cmps
or
aad
pop
mov
and
pop
arpl
mov
(bad)
lock
cs
in
aas
and
add
out
inc
mov
adc
cmps
jmp
push
jmp
jo
nop
out
xchg
pop
push
das
push
rol
xor
xor
call
jg
xor
fsubr
imul
(bad)
sbb
sbb
iret
neg
out
sbb
mov
jle
push
data16
cdq
sub
ja
outs
cdq
jge
(bad)
mov
xchg
ss
jle
outs
fst
xchg
daa
mov
push
test
clc
jmp
push
lds
mov
inc
xor
movs
push
dec
cmp
xchg
sub
out
out
mov
adc
xchg
jb
mov
std
aas
mov
lahf
daa
bound
(bad)
stos
sar
inc
cmp
fidivr
ror
jmp
mov
gs
repnz
pop
les
shr
dec
mov
dec
pop
fwait
mov
ret
mov
mov
mov
mov
imul
leave
imul
push
and
inc
sbb
jmp
pop
pop
inc
loope
jmp
shl
mov
les
sbb
retf
and
out
mov
inc
xor
test
pop
fcmovnu
lock
mov
xchg
repz
mov
sub
aad
or
jae
rcl
jmp
imul
les
xor
sub
lea
push
push
out
jbe
mov
hlt
mov
idiv
or
js
(bad)
push
xchg
pusha
mov
and
lahf
(bad)
cli
mov
mov
(bad)
sahf
not
jg
call
jge
ret
pop
data16
mov
sbb
sar
inc
push
xlat
aad
cmps
pop
inc
inc
mov
addr16
inc
cmps
cdq
movs
scas
retf
pop
xor
add
inc
ficomp
dec
paddusw
(bad)
push
jmp
add
xchg
push
ds
ins
retf
sahf
adc
jecxz
outs
icebp
clc
outs
pop
adc
stos
mov
lahf
xlat
jmp
pop
leave
sub
lahf
ffree
js
pop
les
add
adc
mov
sub
mov
mov
push
sub
ins
push
xchg
mov
in
lahf
enter
dec
shr
imul
jecxz
into
sub
rcl
popf
aad
loop
pop
and
cmp
cmp
dec
imul
xchg
xor
(bad)
(bad)
out
into
pop
mov
pop
fdivr
sbb
push
les
xchg
add
pop
addr16
mov
scas
fild
pop
call
mov
test
adc
(bad)
and
mov
sub
adc
test
loop
in
add
loope
push
xor
repnz
gs
dec
mov
inc
test
pop
loope
cmp
sbb
jo
addr16
dec
call
fsubr
xchg
push
mov
mov
popf
adc
popa
dec
mov
into
in
dec
lods
retf
push
inc
push
je
xor
js
sbb
sti
stos
xor
xchg
popf
das
xor
mov
mov
mov
mov
cmps
out
sub
fcmovnb
add
mov
push
outs
popa
adc
dec
stos
jmp
mov
pop
unpcklps
inc
imul
loop
jge
pop
xor
imul
fisttp
outs
lock
adc
mov
mov
sub
push
add
sub
xchg
jmp
inc
aaa
in
cwde
push
sbb
cwde
fisubr
xlat
je
xchg
dec
mov
cmp
dec
popf
sub
dec
shr
lods
mov
cmp
in
pusha
cdq
cld
icebp
add
cmp
ja
pop
mov
movs
ret
xchg
pop
add
outs
pop
sbb
cmp
jle
ret
jmp
sbb
cmc
inc
scas
push
add
in
jl
jb
cli
push
lea
cli
inc
xchg
rcl
pop
hlt
push
or
js
inc
inc
and
mov
sbb
in
mov
xor
mov
add
dec
pop
inc
out
es
scas
xchg
sbb
or
dec
mov
out
lods
popf
mov
mov
lods
mov
and
adc
jl
pop
jbe
ror
lahf
xchg
adc
inc
sbb
mov
cli
sbb
adc
push
dec
lods
ret
xchg
and
xchg
xor
enter
or
push
add
je
clc
add
adc
mov
(bad)
retf
xchg
stos
push
lods
sbb
test
mov
aaa
mov
inc
mov
and
jns
hlt
dec
stos
mov
std
ds
xchg
xor
sbb
sti
sbb
aaa
xor
std
cli
aaa
mov
mov
out
es
mov
mov
lock
mov
imul
jg
pop
pop
ficomp
cmc
into
ret
rcl
mov
dec
es
ret
cs
xchg
jo
add
or
movs
retf
cmp
lahf
xchg
mov
ret
ins
pop
test
jmp
xchg
inc
into
mov
mov
push
pop
retf
mov
popa
mov
push
mov
or
in
mov
aaa
in
addr16
daa
pop
dec
mov
pop
sar
data16
out
xchg
pop
mov
pop
mov
out
pop
push
sti
pop
mov
out
xchg
nop
mov
sub
in
xchg
dec
in
imul
cmp
pop
jno
outs
xchg
fcmove
lods
daa
icebp
xchg
sbb
movs
xor
jb
retf
xchg
sbb
not
pop
call
out
test
sbb
jle
call
shl
xor
cmp
les
push
cmp
xor
nop
and
cmp
cmps
fidivr
and
xchg
and
xchg
adc
lahf
test
test
xor
sbb
xchg
pusha
mov
mov
inc
push
xor
and
dec
cli
push
jmp
xchg
(bad)
outs
add
push
nop
pop
out
sbb
in
jg
dec
and
je
dec
outs
stc
pop
cld
xchg
jb
rcl
mov
ins
mov
int
div
add
adc
add
neg
ins
pop
(bad)
out
into
les
rol
fdiv
cmp
out
mov
mov
imul
cli
pop
xchg
enter
jns
ret
lds
mov
xchg
ja
test
cmc
jg
mov
movs
imul
inc
aaa
xchg
or
in
rcr
es
test
idiv
leave
arpl
inc
(bad)
adc
inc
stos
dec
mov
xor
int
sub
int
cmp
jno
adc
jg
or
cli
shl
xor
(bad)
xlat
sbb
fisub
rcr
shr
mov
xchg
xchg
je
or
int
adc
rcl
cmps
je
push
mov
je
push
and
inc
dec
and
fs
(bad)
icebp
popf
aaa
push
les
mov
push
xor
loope
aaa
jo
pop
xchg
inc
sub
xchg
or
dec
icebp
mov
(bad)
ds
sbb
inc
push
in
add
ret
int
xchg
lea
std
adc
fistp
fldenv
add
(bad)
bound
xchg
add
and
mov
add
mov
cmps
stos
push
add
inc
mov
call
xor
and
sbb
sbb
test
mov
xchg
hlt
add
retf
mov
push
and
jbe
scas
das
inc
dec
and
cmps
and
dec
and
xor
sub
std
rcl
stos
jno
push
loop
xor
xor
imul
jp
xchg
in
mov
inc
xchg
(bad)
shl
rol
dec
xor
rol
mov
dec
mov
fisubr
stos
jmp
or
out
aas
ja
loope
ret
pop
(bad)
lock
adc
(bad)
mov
out
pop
popa
(bad)
push
jmp
mov
aaa
imul
pusha
gs
sti
ficom
mov
mov
inc
mov
pop
xchg
dec
mov
lds
aam
inc
inc
repz
adc
repnz
push
sar
dec
add
mov
cwde
mov
jae
inc
sub
push
cmc
out
out
mov
test
xor
jl
xor
icebp
sub
fs
loope
popa
push
retf
aaa
cmp
adc
out
push
add
pop
sar
mov
mov
into
lds
sbb
sub
sahf
and
lods
xchg
cmp
pop
inc
in
cmp
add
push
cmp
mov
xchg
dec
outs
es
out
into
adc
mov
cmps
repnz
pushf
pop
push
imul
ds
lds
into
shr
(bad)
adc
or
aad
xor
dec
fstp
loope
dec
inc
rcr
xchg
into
inc
cli
call
xor
lods
mov
and
pop
cdq
ja
jae
into
add
fdivr
add
(bad)
nop
jne
popf
pushf
jecxz
hlt
xchg
or
or
mov
mov
lahf
push
aaa
pop
popa
add
mov
test
jb
dec
mov
fldcw
and
les
lahf
ss
and
outs
pushf
in
fdiv
stos
pop
inc
mov
push
and
pop
sub
or
daa
and
jns
mov
scas
outs
retf
int3
xor
mov
ret
xchg
(bad)
fwait
aam
xchg
ss
push
ins
jmp
sbb
les
into
inc
adc
add
or
outs
in
mov
jge
inc
mov
inc
repnz
ss
pop
add
out
sbb
xchg
icebp
or
in
dec
xchg
ss
add
mov
(bad)
add
xor
xchg
sbb
adc
pop
das
shl
fdivr
mov
dec
dec
jmp
xor
mov
dec
movs
pop
push
dec
jmp
sbb
popf
pop
out
les
add
mov
push
or
add
(bad)
js
adc
pushf
ins
inc
adc
cmp
iret
ins
clc
in
mov
or
test
jo
xchg
ins
xor
faddp
mov
movs
mov
mov
out
mov
(bad)
cmp
data16
lods
mov
pop
pop
icebp
call
fmul
mov
sahf
pop
ss
pop
jae
loope
xchg
sub
cld
mov
fidivr
fs
cmp
adc
(bad)
push
js
das
push
cmp
xchg
call
jno
mov
ret
pop
mov
mov
(bad)
mov
dec
push
pop
div
push
rcl
push
call
jecxz
adc
jb
pop
xor
stos
repnz
ret
lahf
scas
enter
lock
fnstcw
js
ret
or
and
out
out
add
out
test
pop
in
(bad)
in
arpl
push
and
std
push
sub
dec
jne
(bad)
sbb
or
mov
sbb
push
mov
inc
xchg
arpl
gs
adc
call
pop
sub
dec
mov
cdq
scas
fnstenv
movs
jb
add
call
mov
adc
sbb
inc
call
xchg
and
in
pop
js
sahf
pushf
push
fsub
fsub
outs
sbb
fwait
outs
mov
pop
arpl
fisubr
and
xchg
(bad)
jne
loopne
aas
cmp
sar
ds
inc
jle
mov
(bad)
mov
pop
push
mov
and
daa
stc
clc
mov
cld
hlt
xchg
mov
fcomi
mov
inc
xchg
cs
mov
jg
call
(bad)
pop
mul
iret
cmp
call
add
add
ins
ret
call
mov
pop
and
ss
jmp
pop
push
js
or
push
push
jae
stos
repnz
xor
cdq
adc
dec
and
and
and
pop
push
fs
test
mov
sub
adc
and
call
fistp
out
jo
mov
fnstsw
cmp
(bad)
jp
push
and
sbb
xchg
pop
aas
sti
xchg
mov
(bad)
and
inc
xchg
int
ds
pop
cmp
add
mov
push
or
pop
lds
dec
inc
sub
das
cmc
sub
xor
xor
and
retf
dec
(bad)
jge
dec
jae
push
inc
sbb
or
adc
gs
adc
mov
and
idiv
outs
dec
out
mov
out
xchg
or
mov
xchg
or
(bad)
icebp
outs
pop
or
test
mov
neg
push
lea
pop
packsswb
das
mov
ja
push
cmp
mov
data16
push
sbb
jle
cmp
dec
add
shl
and
in
cmp
rol
jno
push
in
mov
in
inc
cwde
push
scas
push
and
add
(bad)
call
add
dec
imul
pop
and
int3
sbb
xor
fist
pop
mov
push
xor
hlt
(bad)
imul
xor
add
xor
cmp
add
xchg
adc
int3
movs
push
pop
jge
stos
jle
push
pop
or
and
jg
xchg
jne
add
sti
add
dec
dec
mov
mov
sbb
fcom
and
push
sti
mov
xor
sbb
cwde
int3
out
idiv
arpl
je
mov
mov
call
or
mov
(bad)
push
mov
outs
mov
xchg
out
jmp
jbe
xor
xchg
aas
pop
fisub
and
cmp
xchg
xchg
add
dec
or
lock
or
fstp
pop
pop
fmul
call
pop
adc
movs
mov
push
jns
sahf
and
mov
jae
stos
mov
stos
ficom
enter
jge
imul
push
pop
xchg
jbe
jnp
sub
pushf
(bad)
adc
stos
jecxz
sbb
addr16
push
dec
and
jecxz
adc
push
mov
dec
popf
mov
or
and
test
xor
cld
lahf
into
nop
int3
mov
push
int3
push
hlt
dec
jnp
inc
xchg
mov
push
fs
es
aad
imul
retf
sbb
shl
xor
stos
movs
dec
stc
movs
sbb
enter
enter
mov
sub
ds
inc
into
rcl
xchg
test
pop
sbb
ss
xchg
call
sbb
or
mov
scas
jnp
push
and
jb
mov
cmp
push
xchg
out
adc
cmp
cmp
inc
scas
add
xchg
ficomp
shr
cs
mov
into
shr
dec
aad
sbb
sub
push
repnz
pop
xchg
add
rol
scas
cmps
xchg
out
inc
(bad)
xor
and
out
scas
xlat
ja
cmps
fcomp
in
mov
repz
mov
push
stos
sbb
xchg
push
pushf
pop
push
and
shr
sbb
dec
jmp
cmc
cmps
pop
jb
call
imul
and
test
cwde
xchg
push
sbb
stos
push
push
(bad)
push
push
int3
sub
loope
jg
inc
adc
dec
stos
mov
inc
in
mov
jo
gs
xor
mov
mov
lea
push
pusha
and
sub
or
pop
daa
ins
dec
(bad)
data16
pop
xor
int3
jmp
mov
pop
dec
mov
pop
dec
outs
jnp
call
inc
test
(bad)
cld
es
jle
mov
repnz
dec
(bad)
adc
xlat
xchg
and
(bad)
adc
dec
popa
hlt
jmp
stc
mov
cmp
repnz
das
xor
mov
out
xor
pop
jnp
jp
fld
lds
gs
and
in
(bad)
or
into
call
jno
shr
out
leave
sub
nop
dec
fmul
sbb
cli
and
int
add
dec
lock
retf
retf
jmp
cmc
xor
nop
scas
sbb
and
lds
mov
out
sub
mov
hlt
scas
mov
repz
(bad)
aam
pop
fild
sbb
in
cmp
ds
jmp
pop
sub
lds
ja
ss
jb
mov
jl
scas
aam
int
jge
and
hlt
xor
retf
push
push
adc
loopne
jmp
inc
xchg
and
imul
pushf
add
jl
jmp
mov
jmp
xor
or
jb
jo
jp
adc
sar
or
leave
int
mov
adc
into
(bad)
mov
lods
push
sbb
xchg
stos
mov
inc
fld
pop
mov
dec
nop
and
inc
jbe
scas
jecxz
mov
test
and
cli
pop
pop
in
mov
mov
hlt
xor
mov
das
xor
fsubr
xchg
or
push
jmp
cmp
jge
imul
inc
arpl
sahf
mov
sbb
xor
es
aas
cli
jle
aam
iret
imul
mov
push
xchg
out
jg
leave
xor
cmps
sub
xchg
sub
loop
dec
inc
pop
popa
mov
(bad)
fadd
leave
ds
cmp
cmp
aaa
lods
cmp
jp
mov
cmp
test
out
mov
sbb
fst
and
push
xor
sahf
adc
inc
jecxz
(bad)
cmp
add
sbb
xor
clc
and
nop
scas
push
xor
xor
jnp
push
push
pop
push
retf
retf
(bad)
and
pop
xchg
pop
rcl
xchg
out
(bad)
in
aad
pushf
inc
fcomp
and
pop
rcl
fcos
cmp
repz
sub
lds
jno
sbb
cmp
and
mov
scas
xchg
in
call
or
std
sbb
dec
push
inc
fs
mov
cmps
mov
dec
push
cmp
jmp
mov
jge
cmp
mul
and
pop
push
mov
sub
mov
dec
sub
sbb
daa
adc
ds
jae
pusha
sti
mov
or
dec
sbb
xchg
sbb
pop
jae
mov
call
sbb
out
rcl
repz
cdq
xchg
addr16
sub
mov
mov
xchg
scas
cmp
pop
jbe
sub
and
cmp
daa
and
ror
push
push
fmul
dec
push
dec
(bad)
lock
mov
and
ja
or
push
shl
test
sub
out
jp
mov
pop
push
(bad)
shl
inc
and
inc
xor
stos
pushf
ret
out
movs
add
popf
sbb
sub
jp
in
icebp
dec
js
pop
jo
xor
sbb
xor
jmp
mov
xor
fstp
sar
sub
pop
rcr
imul
or
cmp
jbe
or
lods
inc
fstp
fst
add
das
lock
mov
pop
jae
fwait
mov
imul
mov
xchg
aad
test
inc
xor
mov
cmps
xor
and
or
push
pop
aad
adc
shl
pop
xchg
jb
sub
sub
and
and
(bad)
and
bound
sub
pop
cmp
or
jo
fs
mov
mov
fs
in
sub
push
int
lock
ja
mov
mov
mov
das
pop
rcl
pop
or
jnp
cmp
xor
xchg
sub
xchg
ret
jmp
push
ss
hlt
movq
in
out
ins
test
cmp
push
outs
in
shl
add
fmul
mov
gs
xor
mov
mov
sub
fsubr
mov
sub
ins
sbb
mov
sub
enter
aas
dec
pushf
xor
je
ret
enter
sub
lods
out
sbb
cmp
rol
push
movs
xchg
inc
mov
add
rol
mov
xchg
adc
jmp
dec
test
xor
cmp
pop
add
nop
mov
(bad)
mov
jmp
lock
and
add
mov
stos
in
dec
popa
aas
mov
outs
inc
mov
mov
pop
dec
adc
je
(bad)
stc
sahf
fs
adc
and
or
inc
hlt
inc
lds
or
add
xor
dec
mov
xchg
imul
js
mov
mov
xor
mov
mov
mov
sub
mov
aam
push
or
dec
sbb
or
xchg
loop
ja
dec
iret
ins
or
leave
pushf
cmps
adc
and
mov
leave
xchg
push
lahf
pop
add
fisttp
data16
add
ret
pop
push
stc
push
call
jmp
jno
pop
mov
cmp
movs
mov
(bad)
outs
dec
adc
aaa
sub
jge
mov
rol
je
es
stos
push
dec
ins
sub
adc
test
jmp
pushf
fld
and
cli
xchg
lods
call
loopne
pop
dec
icebp
xor
adc
sbb
xchg
retf
aaa
sub
pop
icebp
xlat
xor
gs
out
(bad)
push
mov
add
in
aaa
jbe
mov
xor
jo
jnp
dec
inc
cmp
nop
adc
sar
ins
gs
imul
pop
je
(bad)
sahf
leave
sar
cmps
and
jb
xchg
inc
and
mov
lods
pop
std
(bad)
int3
sbb
hlt
aam
test
mov
leave
jl
xchg
mov
fistp
push
mov
mov
mov
outs
rol
div
xor
inc
mov
sub
cmps
into
cdq
xchg
retf
sub
and
mov
sub
add
(bad)
jge
or
cmc
stos
das
adc
and
sub
icebp
cs
movs
cmp
and
cmp
in
inc
test
stos
xchg
lods
imul
icebp
add
out
cmp
xchg
and
pop
rcr
xor
xchg
mov
sbb
movs
fsubr
cli
push
test
xor
inc
mov
mov
jmp
daa
fwait
inc
leave
cwde
retf
jge
ret
es
std
mov
ficomp
add
(bad)
jae
mov
out
jg
ret
stc
ficom
xor
lahf
dec
mov
mov
stos
sbb
cmps
push
xor
fcomp
fs
pop
fild
dec
push
repnz
ja
mov
rol
mov
repnz
inc
jecxz
dec
lods
push
pop
cmp
repnz
ret
jb
cmc
jmp
loope
sub
add
xchg
cmps
int3
pusha
test
dec
mov
cs
aas
jbe
add
ror
push
std
lahf
pop
xchg
push
xchg
retf
pop
or
fimul
lods
test
int3
mov
cmp
xchg
scas
fcomp
js
push
in
retf
inc
cmp
test
pop
xchg
dec
lods
ret
inc
mov
push
bound
cmp
xchg
inc
mov
(bad)
xor
imul
push
xor
jb
adc
js
pop
test
sbb
pop
js
push
call
and
cdq
or
sbb
add
sbb
gs
xchg
mov
mov
ss
outs
pop
repnz
jp
mov
xchg
xor
leave
xchg
push
icebp
add
jbe
or
or
(bad)
sub
inc
dec
cmp
call
xchg
fistp
in
sbb
(bad)
xchg
(bad)
mov
cmp
lahf
cdq
outs
sbb
jle
das
imul
xchg
or
call
pop
mov
and
int
push
shl
enter
mov
or
add
in
(bad)
pcmpeqb
add
ds
out
arpl
iret
push
mov
in
stos
mov
push
or
inc
lods
adc
cdq
jns
loop
dec
pop
jl
xor
jo
stos
out
jmp
jbe
dec
sub
mov
loope
pushf
pusha
xchg
sub
sub
mov
sub
jns
adc
jle
mov
movs
shl
and
mov
adc
icebp
xchg
les
into
push
imul
xchg
cmps
out
pop
jb
pop
test
cmp
sub
es
ds
js
adc
pop
clc
fwait
out
test
fwait
(bad)
and
cli
das
lds
cwde
add
xor
sbb
call
adc
jne
lods
jl
adc
aaa
dec
ficomp
sub
adc
mov
jne
stos
call
add
cmp
fcomp
mov
(bad)
(bad)
xor
mov
rcr
cmp
js
mov
shr
add
add
das
test
aam
test
loope
or
(bad)
sar
push
jp
push
ins
add
out
or
retf
sbb
pusha
mov
sti
es
jge
mov
add
sbb
data16
cmp
paddw
jne
sub
mov
mov
mov
dec
(bad)
mov
sbb
stc
movs
sub
dec
mov
mov
push
int3
and
inc
les
jmp
xor
inc
mov
sub
gs
xor
ss
nop
(bad)
adc
cmp
pop
outs
inc
out
fwait
mov
mov
or
push
sub
push
data16
mov
jl
add
cmc
sbb
fsub
sbb
xchg
outs
mov
sub
sbb
xor
bnd
inc
enter
lods
in
xchg
imul
cmps
mov
iret
adc
ficomp
cmp
mov
pop
cmp
push
lods
repnz
cwde
mov
test
pop
sub
cdq
mov
or
cld
jmp
push
mov
sahf
cmc
push
xor
cdq
sbb
or
popa
xchg
xor
xchg
in
int3
sub
test
add
push
pop
(bad)
call
lds
mov
call
pop
cmp
ds
xchg
pop
cmps
addr16
or
add
mov
sub
pop
sbb
iret
xor
das
inc
pop
es
stc
push
push
adc
mov
push
sub
call
dec
popa
dec
retf
jnp
cmp
pop
sbb
nop
loop
hlt
pusha
test
xor
jnp
xchg
mov
inc
xchg
lea
pop
sub
add
mov
inc
fnsave
mov
call
(bad)
lahf
jecxz
or
push
fst
ins
imul
xor
xchg
sahf
loop
mov
iret
inc
shl
pop
mov
adc
or
pop
or
std
push
retf
mov
jmp
xchg
push
or
push
int3
call
cli
dec
movs
nop
and
mov
inc
jle
sub
mov
leave
xor
pusha
jb
cmp
and
outs
and
ror
cdq
mov
push
(bad)
leave
pop
mov
ins
push
mov
hlt
inc
cmp
dec
ror
jno
mov
daa
mov
mov
push
add
xchg
mov
or
xchg
inc
dec
jge
mov
xor
data16
pop
sbb
xor
xor
push
data16
add
jmp
loope
xchg
jmp
inc
sub
in
pop
cmp
in
or
arpl
icebp
jp
mov
mov
in
(bad)
leave
aaa
mov
fwait
out
cmc
cwde
mov
sub
inc
jno
inc
push
sbb
mov
xor
jmp
int3
mov
leave
jb
and
(bad)
loopne
or
dec
adc
ror
sbb
mov
mov
xor
dec
push
jns
lahf
jno
add
in
inc
sahf
xlat
inc
nop
inc
dec
outs
mov
cdq
add
dec
jns
dec
(bad)
fsub
lock
cmp
mov
mov
retf
ficom
or
(bad)
stos
idiv
and
sbb
jmp
and
fldenv
aad
jmp
inc
jo
mov
adc
adc
ins
mov
dec
xchg
dec
frstor
mov
push
mov
mov
data16
dec
mov
dec
(bad)
mov
lahf
sub
loope
and
push
cmp
dec
add
sbb
outs
jmp
and
aas
dec
mov
test
cmp
jp
adc
data16
mov
sub
cmps
cmps
push
pop
mov
jbe
out
leave
es
xchg
icebp
jg
rcr
fcomp
pusha
ret
add
jge
xchg
xchg
pushf
jbe
xchg
mov
push
push
sahf
repnz
pop
leave
push
push
out
fbld
cmp
xchg
ret
data16
jae
xor
aam
or
dec
es
(bad)
mov
mov
rol
cmps
jbe
pop
or
ins
ja
(bad)
sbb
fild
shl
mov
or
mov
mov
add
xchg
out
fst
cmps
das
pop
inc
jl
mov
sub
ss
cdq
sub
cld
jp
(bad)
les
xor
popf
shr
push
jecxz
stc
leave
aad
lea
cmps
pop
xor
call
arpl
test
sbb
jle
mov
icebp
and
addr16
clc
sbb
and
shl
aam
mov
in
imul
adc
inc
dec
adc
movs
sbb
and
not
jecxz
jo
call
loope
sub
sbb
jg
xor
jnp
sub
lods
add
adc
sub
jmp
xchg
stc
pusha
mov
xchg
jp
mov
adc
inc
adc
jmp
inc
int3
enter
push
aad
jae
push
jl
sbb
sbb
xor
mov
retf
out
cmps
sub
mov
sbb
push
out
into
pop
push
shl
sub
jmp
(bad)
push
mov
loop
jp
mov
dec
mov
xchg
(bad)
adc
imul
cmps
mov
adc
aam
ret
stos
adc
pop
cld
imul
sahf
cmps
push
adc
mov
arpl
jae
test
inc
pop
mov
out
mov
(bad)
sub
ret
pop
ret
outs
leave
loop
and
fidiv
push
into
inc
push
jp
sbb
ficom
out
cmp
bound
clc
adc
cmp
cmp
pop
ins
add
shl
iret
add
repnz
xor
jmp
xchg
cmp
sti
daa
data16
sub
fnstcw
gs
inc
in
es
and
mov
sub
cmp
xchg
dec
add
add
fs
adc
add
sub
adc
out
shl
outs
jl
test
push
sbb
outs
pop
and
aas
dec
imul
mov
adc
in
adc
and
mov
cmp
or
adc
data16
pop
cwde
adc
jns
xchg
stos
ss
push
xlat
test
ret
cld
inc
outs
stos
nop
stos
push
ins
rol
xor
jp
sbb
aaa
std
jo
mov
jl
or
ins
sahf
inc
inc
push
dec
shr
fld
or
cmp
or
sub
adc
pop
fcmovnbe
clc
add
inc
push
inc
loopne
loop
jmp
movs
enter
lds
aaa
xor
fnsetpm(287
(bad)
pop
cmps
lock
sub
xor
xchg
jne
es
imul
push
push
(bad)
mov
lea
mov
adc
and
ins
mov
or
mov
pop
pop
scas
test
push
imul
xchg
(bad)
ds
add
fcom
pop
inc
mov
fcomp
mov
loope
inc
push
jae
ror
pop
mov
xor
or
fisub
aas
adc
cmp
(bad)
out
je
enter
aad
rcr
sub
ret
pop
je
shl
out
jle
daa
inc
jmp
popa
dec
push
rol
adc
in
mov
outs
lds
(bad)
pop
sub
scas
into
cdq
hlt
pop
and
jbe
dec
je
div
xchg
xchg
lock
retf
sbb
inc
xor
test
ss
cdq
add
sub
popa
mov
mov
sbb
int3
dec
movs
out
mov
xchg
jo
xchg
mov
js
push
aas
cmps
and
xchg
iret
mov
call
inc
cmps
mov
sti
and
inc
in
mov
jno
nop
adc
and
stos
jbe
sahf
pushf
fdiv
push
mov
jnp
(bad)
or
ss
neg
bswap
mov
mov
jbe
movs
mov
div
adc
adc
push
and
enter
cmp
mov
mov
sbb
pop
adc
xor
scas
adc
std
cmp
cmp
push
xchg
add
xchg
fidivr
lahf
inc
sub
jecxz
dec
fcomp
ror
mov
or
mov
cdq
cwde
repz
aam
enter
push
retf
test
jne
push
push
push
jno
scas
aas
add
fisttp
mov
cwde
clc
xchg
pop
into
cmps
call
sbb
outs
in
lods
add
das
cmp
jmp
cmp
loope
adc
mov
jmp
jg
sub
and
outs
mov
jae
test
sub
fsub
add
dec
sub
jle
inc
fst
ss
rcr
cmp
sub
arpl
pop
loopne
dec
or
push
xor
rcr
jae
pop
mov
cmp
mov
stc
sub
pop
xchg
stos
add
cmp
fsubr
out
mov
nop
add
inc
or
jp
fsubp
sbb
pop
dec
pop
and
ror
and
not
sbb
mov
call
xchg
xchg
inc
xor
sti
add
repnz
dec
imul
lahf
mov
jmp
mov
mov
jge
pop
jl
sbb
sbb
stos
or
cli
push
pop
mov
add
dec
sub
jmp
mov
out
pause
cmps
cmp
stc
imul
ror
jg
(bad)
(bad)
pop
jbe
xchg
and
ficomp
sti
movs
test
ret
push
jle
scas
mov
pop
push
idiv
test
cmp
mov
jmp
in
mov
das
xor
nop
lds
adc
dec
pop
mov
inc
dec
pop
adc
xchg
jmp
or
and
fldenv
ret
jmp
push
call
lds
sub
je
loope
das
jns
rcl
sub
xchg
mov
dec
fwait
pop
sub
jmp
in
(bad)
call
fisub
mov
mov
mov
pop
pop
sbb
xchg
pop
adc
imul
sub
test
sbb
sbb
mov
cmp
sbb
ss
mov
(bad)
mov
aas
pop
lahf
inc
mov
inc
fs
push
sbb
xchg
retf
scas
in
not
mov
inc
jl
or
sar
movs
sbb
je
dec
mov
ins
or
cmp
and
or
push
int3
mov
xor
stos
mov
and
pop
jnp
add
shl
repnz
outs
xor
push
cdq
repz
cmp
inc
or
or
and
out
mov
sub
stos
jnp
mov
push
std
push
inc
inc
jbe
(bad)
(bad)
int3
adc
add
dec
add
pop
or
adc
xor
ins
les
sbb
jae
jne
and
and
mov
xchg
into
mov
pop
(bad)
cld
outs
aad
inc
icebp
sub
sbb
sub
pop
fst
lock
mov
ins
or
(bad)
hlt
js
jg
daa
inc
cld
pop
jne
mov
or
push
mov
sbb
(bad)
add
sbb
jns
pop
mov
aam
mov
add
mov
adc
jo
sbb
imul
outs
or
add
cli
in
mov
lods
jae
jge
adc
test
rcl
jnp
ret
or
xchg
mov
sub
stos
lods
fcom
mov
test
out
outs
inc
sbb
aas
test
das
shr
idiv
inc
mov
lock
stos
push
test
clc
adc
gs
jl
mov
xor
and
scas
rcl
pop
iret
or
stos
clc
int
push
nop
in
xchg
mov
aaa
cmps
and
in
and
and
jb
xor
cs
add
and
inc
and
mov
fs
or
dec
fdiv
ror
test
sbb
mov
cmp
adc
inc
iret
fisub
cli
pop
sahf
jb
xchg
dec
rol
mov
mov
mov
clc
adc
mov
pop
pusha
dec
dec
rol
bound
test
cmp
jmp
ror
xor
sub
scas
std
mov
movs
inc
sar
rcr
pop
mov
movs
xchg
add
(bad)
in
add
outs
(bad)
lods
or
stc
sti
and
stos
in
or
mov
shl
add
repz
fs
mov
lods
cmp
add
xchg
outs
xor
push
add
fwait
mov
test
test
lds
sub
cs
and
(bad)
iret
xor
std
inc
mov
aas
(bad)
(bad)
popf
mov
jl
fidivr
ins
inc
mov
stos
ja
add
adc
mov
imul
mov
loop
les
sub
int3
or
sbb
jno
(bad)
push
push
and
push
mov
ds
(bad)
(bad)
pop
jnp
mov
add
push
cdq
jmp
pushf
dec
enter
jecxz
shl
arpl
out
ror
mov
pop
mov
or
push
xchg
fst
mov
xor
push
adc
jl
pop
scas
or
lds
push
jmp
pop
fild
xchg
test
adc
cli
test
fs
retf
sbb
push
(bad)
sbb
push
push
cld
mov
pop
movs
hlt
dec
outs
jne
mov
push
mov
adc
sub
scas
and
arpl
adc
popa
in
cmps
stos
repnz
dec
jmp
xor
into
nop
lahf
or
or
(bad)
push
scas
loop
movs
not
stos
imul
aad
push
in
jg
popf
pop
cmps
mov
mov
jl
out
pop
push
pop
pmaxsw
jmp
and
into
mov
ret
repnz
push
add
mov
and
(bad)
(bad)
add
lds
daa
cmp
jecxz
fild
cmps
ss
in
lods
and
push
and
call
mov
lods
popf
pop
gs
das
fwait
stos
pop
rol
ret
inc
add
retf
add
test
(bad)
lods
xchg
js
sub
inc
(bad)
es
outs
inc
dec
adc
daa
add
pop
cmp
cmps
ins
les
xchg
test
into
adc
cmp
xor
cmp
and
pop
cdq
mov
xlat
xor
push
dec
popf
adc
sar
mov
add
fsub
adc
aad
sbb
scas
push
or
aad
inc
mov
mov
jle
jo
call
fisttp
pop
enter
pusha
popa
push
in
xlat
mov
pusha
lea
inc
sub
pop
ja
ror
(bad)
repz
sbb
push
push
sahf
sbb
mov
(bad)
ja
in
fidivr
pop
cmps
jb
xor
xor
add
push
pushf
(bad)
cmp
clc
sti
mov
add
or
outs
or
or
sub
mov
push
pop
inc
adc
jge
fidivr
data16
mov
jle
jl
shr
and
pusha
mov
inc
into
inc
mov
inc
int
jb
sub
in
stc
fsubr
sar
call
test
repz
rcr
cmp
aaa
loope
and
xor
adc
cmp
mov
mov
(bad)
test
and
nop
arpl
push
or
cmp
and
or
inc
dec
ret
dec
mov
retf
imul
lock
adc
daa
xor
xchg
push
mov
test
mov
mov
ret
into
and
hlt
aaa
int3
cld
push
mov
loopne
lock
sar
and
cmp
cmp
mov
test
gs
popa
lock
mov
adc
add
aaa
movs
push
cs
mov
mov
pushf
jecxz
fs
dec
in
call
pop
and
push
sbb
stc
ret
xchg
in
cmps
mov
dec
lods
dec
dec
loope
cdq
mov
mov
adc
or
sub
in
or
mov
inc
jg
cmp
addr16
cs
aam
xor
int3
inc
cmp
pop
cld
add
mov
lods
lods
cdq
(bad)
into
xor
cmp
mov
add
jmp
mov
inc
or
mov
test
cmp
test
neg
fwait
jle
test
sbb
loop
ins
mov
xchg
call
sub
movs
mov
shr
add
mov
xor
cmc
mov
xchg
cmp
(bad)
mov
aas
dec
sub
cmp
add
int
mov
or
mov
pop
iret
pusha
jp
hlt
fidiv
jg
sbb
xchg
loope
cmp
and
test
lock
sub
sub
xor
stc
jg
fsub
mov
fsub
(bad)
pop
lahf
sub
aam
adc
and
cmp
sbb
out
fs
inc
out
out
out
xor
fxam
or
loope
ds
rcr
idiv
pop
into
inc
ffree
je
xchg
adc
jmp
cmp
inc
dec
ja
cld
cmp
aaa
mov
adc
xor
dec
jne
xchg
jne
fcomi
mov
es
xor
mov
fisttp
dec
lock
mov
inc
jmp
inc
add
mov
and
movs
jge
mov
add
fwait
or
mov
and
mov
xchg
cwde
pop
mov
cmp
lea
jl
ficomp
mov
xchg
and
push
stc
inc
jmp
(bad)
adc
outs
inc
popf
cmp
jg
inc
push
push
(bad)
dec
aaa
push
fcomp
mov
mov
jg
arpl
repnz
arpl
fbld
mov
adc
ja
int
shr
movs
fstp
shl
and
sbb
div
jl
repz
les
and
fiadd
and
out
test
daa
inc
xchg
out
adc
loopne
mov
or
sbb
push
push
pop
addr16
mov
cmp
pushf
mov
sub
shl
cmp
push
xchg
mov
mov
daa
daa
sbb
in
inc
pop
mov
dec
cmp
repnz
pushf
cmp
inc
inc
dec
retf
mov
xchg
aas
fcom
mov
repz
stos
or
fs
adc
jo
or
mov
mov
jns
outs
cdq
cmp
xor
movs
std
gs
sahf
popa
jns
sbb
loope
(bad)
xchg
ja
pop
pop
add
and
les
loope
push
dec
or
bound
mov
sub
js
mov
fidiv
data16
or
ret
inc
mov
data16
adc
jge
xchg
mov
mov
sub
stos
das
retf
retf
cmp
mov
mul
pop
scas
sub
aam
imul
pop
movs
mov
dec
fisub
(bad)
sub
test
test
adc
adc
rcr
adc
adc
sbb
cmp
ins
mov
or
shl
jb
mov
pop
xchg
cmp
fistp
push
sti
inc
add
in
gs
out
repnz
push
arpl
push
neg
out
cld
jno
push
xor
(bad)
push
clc
sbb
shl
(bad)
cmps
ret
jns
ror
push
(bad)
in
inc
fwait
sub
xor
inc
cmp
fld
sti
cmp
clc
push
in
mov
add
ror
jmp
test
dec
cmc
fidiv
in
clc
inc
in
int3
xchg
xchg
nop
jo
std
and
repnz
movs
ret
mov
(bad)
xchg
push
pop
jne
sahf
jmp
call
shr
and
sbb
inc
int3
xor
pop
ret
add
and
push
add
push
popa
icebp
xor
xchg
add
in
popf
ja
mov
adc
xchg
and
xchg
jge
lock
jp
clc
jb
int
inc
cmps
cmp
(bad)
adc
loopne
ror
adc
popf
sub
mov
clc
repz
jb
movs
loop
cmc
pusha
aas
mov
jnp
lods
enter
aas
test
cmp
sub
aas
pop
jle
leave
xchg
test
add
add
movs
mov
jb
dec
or
jecxz
cmp
clc
mov
stc
nop
pop
rcl
mov
inc
rcr
add
dec
push
outs
xor
and
call
pop
mov
leave
xlat
xchg
adc
nop
mov
jo
xor
and
push
out
push
rol
out
push
fwait
movaps
jns
imul
xor
dec
mov
add
and
xchg
dec
xlat
dec
out
cmp
popa
mov
jge
mov
fwait
dec
in
fld
xor
repz
push
sub
mov
popf
test
mov
dec
inc
lods
ret
neg
in
add
push
arpl
xchg
stos
xor
sbb
adc
fnstcw
add
test
jmp
ja
fdivr
arpl
nop
(bad)
iret
repz
inc
mov
mov
into
ins
sbb
fbld
loopne
dec
add
inc
scas
jp
mov
cmp
mov
idiv
mov
mov
and
jne
scas
fdivr
cdq
xor
in
sti
addr16
push
cmps
mov
retf
add
stos
fmul
(bad)
xchg
mov
cmp
jbe
and
imul
repnz
call
movs
test
ret
movs
mov
xchg
(bad)
xchg
sub
icebp
sub
fnstcw
sbb
jo
sbb
pop
enter
iret
xor
xchg
sti
jns
icebp
xor
in
lods
out
imul
mov
xchg
adc
test
cmp
sub
mov
xor
jg
test
add
inc
and
xchg
adc
out
jecxz
jmp
jb
(bad)
daa
xchg
push
pop
test
repnz
jge
shl
sbb
shr
(bad)
cld
ret
mov
add
mov
pop
shl
mov
mov
es
test
xchg
test
in
jae
or
and
int
adc
imul
mov
call
fidiv
sub
pop
sbb
adc
bound
jmp
mov
scas
outs
test
adc
popa
cmps
mov
sbb
sbb
pop
pop
jl
stos
inc
or
mov
mov
inc
mov
jge
(bad)
fisubr
ins
jmp
and
jge
xor
vmwrite
jbe
dec
fwait
test
and
in
push
je
push
pop
cmc
retf
xchg
aam
pop
aaa
lea
mov
add
dec
pop
mov
jns
cmp
mov
ret
dec
jns
jnp
arpl
shl
cmc
cmp
inc
iret
add
movs
fadd
mov
jae
sti
inc
xchg
sahf
ins
pusha
fisttp
mov
enter
push
add
retf
and
add
jb
mov
jge
pop
push
lds
mov
xor
pop
loope
sub
enter
cmp
je
xor
sub
adc
out
repnz
xchg
out
jnp
jb
cmc
ins
mov
mov
lea
dec
stc
dec
add
movs
shufps
push
jo
retf
and
jle
(bad)
ins
xchg
(bad)
ds
push
in
jle
mov
mov
push
or
pusha
mov
push
test
push
dec
(bad)
ja
sub
rol
mov
inc
rol
mov
(bad)
fstp
aaa
jl
aas
mov
dec
lds
ss
push
mov
out
cmp
push
xchg
jle
addr16
repnz
jg
ret
ror
push
pop
xchg
xchg
popf
pop
call
enter
cmp
push
test
push
add
fsubr
loope
sbb
dec
pushf
in
icebp
iret
xor
cli
cmp
dec
out
mov
neg
lea
aad
lahf
les
ret
repz
out
mov
sbb
aad
sbb
jmp
sbb
push
outs
dec
sbb
mov
repnz
addr16
outs
sbb
lock
push
sub
movs
sub
pusha
mov
inc
pop
cmp
gs
add
imul
add
(bad)
in
mov
and
repz
or
mov
xchg
and
push
cli
add
call
not
add
xchg
call
mov
int3
daa
adc
or
shl
loop
and
dec
mov
jle
call
mov
inc
aaa
aas
or
xchg
jg
cmps
pop
(bad)
leave
pop
cmp
outs
fwait
(bad)
dec
fs
call
adc
sbb
dec
ret
div
fcmovu
scas
in
adc
dec
repnz
loopne
call
rcr
in
loopne
inc
addr16
stos
xor
xchg
push
or
adc
xchg
arpl
jl
fst
jnp
int3
jno
and
jmp
jns
and
mov
cmp
dec
js
sbb
push
je
cmp
iret
cwde
dec
mov
pop
or
daa
loopne
stos
add
into
imul
pop
cmp
jp
pop
(bad)
jmp
in
test
dec
std
mov
and
and
div
aaa
aaa
lahf
xchg
push
popf
int
mov
ret
in
or
mov
sbb
xlat
lds
mov
stc
pop
fnstcw
cmp
mov
sub
mov
or
add
mov
js
mov
mov
lods
fs
pop
scas
mov
cmps
imul
and
in
push
cmc
jne
aam
test
push
push
inc
mov
out
dec
xchg
mov
add
inc
push
mov
mov
sub
sbb
jge
jne
sbb
push
inc
xchg
xchg
fs
inc
psubsw
xchg
mov
cmps
and
or
adc
fsub
ficomp
sub
sub
pop
or
inc
pusha
push
pop
popa
cmp
cli
ins
adc
inc
mov
adc
je
es
sbb
into
inc
add
jmp
inc
jp
enter
enter
pop
lea
xchg
add
mov
xchg
push
or
daa
adc
sub
pushf
(bad)
aas
enter
mov
jae
push
lods
sbb
xor
fs
jae
in
stos
pop
xchg
xchg
aas
cwde
dec
cmp
int3
rcl
jmp
(bad)
in
xlat
out
cwde
pop
adc
rol
(bad)
in
mov
pop
inc
pop
js
sbb
inc
pop
rol
inc
and
(bad)
push
or
inc
xchg
cld
or
out
add
gs
iret
mov
cwde
or
(bad)
sahf
add
std
call
dec
sub
mov
inc
mov
pop
cmp
pop
xchg
add
inc
xchg
jmp
jns
int3
adc
inc
jmp
mov
push
cmc
loop
test
sub
aas
enter
xchg
cld
xor
icebp
pop
mov
pushf
push
jbe
inc
mov
fcom
xchg
std
sbb
cmp
in
xor
and
(bad)
outs
inc
sti
movs
add
fcomp
loopne
cld
or
push
pop
loopne
fbstp
test
cwde
dec
into
push
adc
ins
adc
mov
les
add
not
jecxz
mov
jp
sbb
call
and
or
(bad)
(bad)
das
aaa
lods
sub
loope
ja
aas
lds
mov
int3
(bad)
xchg
fist
add
sub
inc
or
not
ret
ret
sub
push
mov
dec
add
aas
stos
jecxz
addr16
ret
mov
mov
jle
pop
mov
cmc
test
jle
push
mov
fstp
push
popa
xchg
mov
fidivr
sub
daa
mov
push
push
mov
mov
jnp
push
mov
out
lods
lea
mov
mov
sub
loope
movs
ficomp
sbb
movs
fst
sti
sbb
mov
jmp
dec
int
jae
mov
pop
cmp
mov
fidiv
push
lea
cmps
(bad)
aaa
adc
mov
jne
dec
aam
or
stos
(bad)
bnd
push
sub
push
push
xchg
aam
loopne
sbb
cmp
in
ss
sbb
inc
ja
mov
push
inc
fsub
push
rcl
inc
pop
out
mov
jo
test
clc
scas
cmp
lods
pop
rol
pop
cwde
push
mov
in
mov
dec
mov
xchg
pop
push
jmp
(bad)
div
xor
add
pop
xchg
(bad)
fld
push
lock
pop
(bad)
fcom
dec
sub
xlat
mov
sar
sbb
les
cmp
xlat
cmp
push
(bad)
xchg
sbb
pop
sbb
imul
xchg
push
fcmovu
xadd
and
call
inc
ja
inc
dec
repnz
rol
icebp
(bad)
lahf
and
imul
dec
ja
loopne
pushf
ror
jo
add
jb
dec
loop
daa
cmps
mov
and
and
add
inc
xchg
add
fs
jmp
call
jmp
jb
inc
ret
push
(bad)
sbb
pop
pop
or
mov
xor
add
adc
cmp
sbb
fimul
fdivr
les
or
mov
dec
sbb
push
mov
mov
call
sub
out
ret
fnstcw
mov
inc
imul
aad
jg
mov
cmc
cmps
retf
xchg
jnp
stc
out
xor
mov
sub
add
ror
rol
out
xchg
push
rcr
push
sbb
pop
imul
pop
outs
test
cmp
(bad)
sub
neg
daa
add
out
mov
in
cmp
scas
lods
cmps
xor
call
jle
bound
(bad)
rcl
sub
fnstcw
xor
loope
mov
stos
call
cmp
mov
mov
dec
cmp
shl
xchg
pusha
in
out
imul
sti
sbb
mov
mov
ins
inc
data16
in
movs
loopne
jne
sub
mov
jmp
ins
repz
dec
fistp
dec
mov
mov
sub
fisttp
and
mov
jmp
inc
mov
or
or
push
cld
js
xor
inc
sbb
ds
or
xor
ins
cmp
push
sbb
sub
push
xchg
aad
pop
mov
push
daa
mov
jg
stos
loop
xchg
jg
jle
rcl
adc
inc
jno
cmps
mov
outs
inc
pusha
int3
dec
mov
xchg
sub
gs
popa
in
repz
push
add
mov
in
add
or
inc
or
xor
jge
xlat
mov
sar
shl
inc
xchg
xor
fsubr
scas
int
pop
lods
xchg
ret
sub
mov
pop
test
rcl
retf
or
jno
fistp
cmps
cmp
sub
xchg
out
xchg
xchg
in
add
repz
outs
stos
push
xor
add
or
mov
cwde
push
in
addr16
inc
in
mov
push
jge
popf
out
xor
dec
aam
jge
lods
int
mov
ret
ins
(bad)
out
fsubp
mov
lea
mov
add
fbstp
xchg
or
test
cmps
xchg
jmp
sbb
sub
hlt
out
test
pop
leave
loop
dec
dec
repnz
in
push
mov
icebp
stos
add
dec
or
dec
push
out
aad
loope
jnp
pop
loope
inc
fidivr
sbb
mov
cmps
addr16
and
pop
pushf
jmp
sahf
cld
add
rcl
sbb
popf
add
mov
stc
sub
fs
retf
adc
pop
jae
jno
mov
mov
xchg
mov
les
and
jle
cmp
dec
shl
jmp
movs
in
push
xor
mov
inc
shl
inc
fisub
add
shr
push
sbb
xchg
jno
push
and
pop
or
hlt
or
sbb
inc
daa
push
mov
movs
sbb
lock
push
xchg
aad
cdq
sub
out
or
mov
pop
xchg
in
aaa
fild
lahf
xchg
or
xlat
in
cwde
lea
imul
ror
adc
(bad)
jmp
js
sbb
sub
enter
push
outs
jae
mov
sbb
sbb
(bad)
and
mov
add
mov
imul
mov
push
push
mov
xchg
push
jmp
and
cmp
sub
push
pop
add
sub
xchg
mov
sti
test
pop
sub
shl
adc
mov
call
push
pop
retf
xor
cmps
dec
push
loop
fistp
mov
sbb
sbb
xchg
out
(bad)
adc
jb
fimul
mov
or
bound
call
test
fsubp
xor
arpl
sub
ins
inc
or
arpl
js
pop
mov
dec
retf
xchg
adc
lahf
cmps
clc
or
data16
shr
pop
pop
mov
outs
stos
mov
dec
wbinvd
cld
xchg
xchg
or
dec
jmp
dec
outs
cmp
into
je
test
xor
arpl
jne
sahf
sbb
xchg
pop
sbb
push
jg
dec
xchg
lock
(bad)
aad
xchg
xchg
lahf
jmp
mov
(bad)
into
xchg
mov
rcr
jecxz
int3
xchg
inc
out
mov
das
enter
cmp
mov
lds
pop
add
jns
pushf
jno
aam
(bad)
int3
nop
pop
rcr
dec
ror
inc
jge
mov
mov
fmul
xchg
pop
push
and
xchg
dec
push
(bad)
pusha
dec
pusha
(bad)
ret
dec
call
ret
xchg
jno
xchg
cmp
es
stos
mov
sbb
popf
sahf
add
je
cmp
fld
cmp
jns
dec
test
sbb
fild
mov
jmp
(bad)
clc
xor
loopne
push
pop
push
mov
fidiv
mov
jp
and
out
lods
or
pop
mov
jg
ficomp
sbb
pop
rep
xor
les
pop
in
rcr
mov
pop
or
outs
push
jno
add
bound
cmp
mov
xor
lock
sub
in
je
inc
or
ja
shr
fucomi
mov
sub
mov
push
or
mov
shr
cdq
loopne
or
xchg
and
and
pop
sub
push
repnz
movs
lock
add
xchg
leave
pop
test
(bad)
ds
movs
pop
scas
mov
ficom
push
jno
fwait
push
dec
popa
cld
sbb
leave
fisttp
mov
mov
sub
imul
sbb
pop
xchg
jl
sub
jne
mov
pop
jle
sub
jbe
mov
jne
mov
mov
mov
iret
lods
js
add
cmc
ret
repz
std
or
sbb
add
rol
(bad)
and
and
jmp
and
mov
or
inc
dec
push
arpl
and
ret
idiv
jle
cld
jbe
mov
outs
dec
mov
sbb
call
popa
pop
jnp
jno
mov
cmc
loop
movs
dec
inc
and
add
mov
sbb
add
scas
pushf
lahf
mov
(bad)
shr
fcmovnu
push
ja
mov
xor
mov
sbb
addr16
add
retf
sbb
xchg
in
adc
jae
dec
fldcw
addr16
fdivr
mov
shl
push
fs
or
pop
xor
loop
arpl
xor
inc
mov
ret
sbb
jmp
jbe
into
inc
test
es
sub
xchg
inc
aam
push
imul
outs
clc
lock
sahf
mov
sbb
mov
mov
hlt
sar
and
test
jmp
jge
or
add
add
fs
rol
add
and
adc
jp
ficom
adc
dec
test
cdq
(bad)
push
add
ss
inc
nop
rol
jo
adc
jecxz
leave
out
xchg
scas
movs
(bad)
repnz
stc
jmp
sbb
jl
add
hlt
add
jne
cmp
push
mov
jno
call
fwait
push
loop
aas
arpl
push
push
(bad)
mov
test
jge
sub
je
sub
adc
fstp
loope
call
bound
cmc
adc
cmp
ror
scas
call
not
mov
fs
adc
popa
add
inc
sbb
aad
adc
jmp
mov
test
popa
cli
jg
cwde
and
inc
mov
xchg
(bad)
push
(bad)
mov
cld
out
push
push
sbb
lods
stos
push
adc
lods
dec
inc
sbb
sbb
mov
stc
into
dec
rol
je
clc
enter
loop
test
push
inc
sbb
mov
pop
enter
lock
sub
xor
sub
frstor
push
fbstp
xor
push
add
mov
dec
pop
cmc
addr16
sub
and
pop
mov
scas
adc
add
ret
xchg
adc
mov
iret
sub
and
jo
inc
ja
mov
xor
jns
sti
syscall
pop
stos
jmp
mov
or
sub
inc
imul
repz
inc
gs
mov
mov
mov
jmp
out
lea
adc
gs
xor
outs
jge
mov
movs
mov
jl
jp
cs
push
and
out
imul
les
retf
popa
dec
cld
jae
aas
test
jns
adc
add
lea
adc
mov
adc
dec
loop
jae
div
push
cmp
and
add
xchg
dec
shr
and
loop
push
outs
xchg
pop
call
mov
in
mov
(bad)
arpl
adc
bound
push
bound
aam
div
sub
inc
mov
cli
not
adc
adc
push
xchg
or
cmp
test
call
aam
push
ret
mov
(bad)
jle
mov
add
pop
fs
aam
idiv
mov
jecxz
gs
jno
lahf
inc
int3
push
jl
jo
pushf
daa
sbb
mov
cld
push
ret
mov
imul
(bad)
cmp
mov
js
sti
adc
sub
pop
xor
test
inc
mov
stos
or
jbe
popa
pushf
pop
cmp
cld
adc
int3
or
mov
lods
rcr
into
push
repnz
pop
fsub
adc
jecxz
mov
in
test
cs
xchg
xor
(bad)
out
jo
sbb
push
pop
cmp
ins
out
das
mov
add
jg
mov
push
test
(bad)
clc
mov
jb
xchg
stc
fidiv
es
les
mov
inc
cmc
fcmovu
pop
dec
(bad)
ror
adc
mov
retf
and
fcmove
xchg
in
enter
xchg
test
int
add
shl
nop
and
shl
sub
in
cmp
retf
sub
ins
xor
xchg
xor
cmps
pop
jb
jne
fisttp
hlt
in
mov
dec
call
outs
out
out
xor
in
ret
push
cld
dec
push
frstor
in
call
imul
adc
into
pop
inc
neg
inc
sbb
outs
xchg
rol
dec
outs
pop
push
cld
pop
push
fnsave
sub
jo
push
jo
xor
lods
xlat
aad
pushf
shr
mov
mov
cmp
mov
into
sbb
(bad)
add
adc
popa
dec
mov
mov
xor
aad
test
jmp
xchg
pop
pop
xchg
xchg
je
ins
add
call
push
push
fucom
xchg
xchg
movs
(bad)
je
daa
sub
cmp
xlat
cmps
push
and
sahf
aam
ja
cmps
adc
adc
inc
mov
jae
push
xlat
pop
or
xchg
fidiv
jecxz
in
repnz
jecxz
sbb
repz
xchg
pop
pop
mov
hlt
mov
pusha
dec
xor
lock
xor
(bad)
cmp
push
xor
sbb
js
sbb
cli
call
mov
fbld
test
arpl
xchg
ins
lahf
dec
adc
cmp
loop
jbe
sbb
mov
out
jmp
imul
xchg
(bad)
out
call
mov
bound
jl
iret
daa
cmp
xlat
or
sbb
in
adc
jge
push
rcl
in
dec
inc
adc
cmp
retf
jne
push
sub
lahf
adc
xchg
imul
ss
(bad)
inc
mov
ja
mov
mov
icebp
jae
mov
mov
ins
jle
pushf
add
or
xchg
mov
push
jg
int3
in
sbb
mov
(bad)
and
pop
bound
ret
cs
inc
mov
mov
adc
jge
mov
shl
div
mov
arpl
sbb
movs
dec
cmp
aaa
add
mov
call
xrelease
cmp
fs
add
cmp
xor
jl
aam
mov
sub
sub
inc
adc
mov
loope
rol
popf
cdq
jmp
pop
aaa
pop
imul
jmp
(bad)
stc
(bad)
sub
(bad)
loopne
or
std
xlat
dec
mov
jl
ret
sbb
mov
add
jl
in
inc
stos
push
mov
(bad)
clc
shr
dec
lods
sub
call
mov
sbb
test
enter
dec
sbb
jnp
mov
dec
pusha
dec
mov
xor
nop
outs
out
rol
xchg
jns
clc
aad
shl
js
jb
daa
inc
push
sbb
push
stos
sub
movs
lock
aam
movs
int
mov
xchg
and
mov
jno
outs
push
(bad)
ja
inc
ds
sbb
fwait
inc
mov
dec
sbb
jmp
sub
mov
lock
(bad)
jmp
(bad)
mov
mov
cmp
ss
push
pop
adc
cli
xor
icebp
scas
in
mov
fisubr
jo
stos
inc
pop
sbb
sub
xchg
scas
aam
sti
ret
int
xchg
mov
sub
mov
pop
out
fdivr
mov
jmp
cmp
push
fidiv
cmp
jmp
(bad)
and
pop
pop
dec
or
push
mov
cvtps2pi
or
cdq
xchg
or
outs
xor
js
dec
sub
test
popf
fnsave
daa
cld
cmp
aad
out
movs
sbb
push
pop
add
cdq
mov
and
jbe
bnd
lods
and
out
call
pop
les
cli
add
and
call
adc
jo
out
mov
sub
or
xor
je
mov
sub
hlt
push
arpl
pop
ror
addr16
or
add
(bad)
sub
push
mov
pop
jno
repnz
jge
movs
or
mov
movs
sbb
push
mov
data16
es
jg
ja
(bad)
in
mov
rcr
mov
call
pop
inc
loopne
jp
add
aaa
(bad)
shl
mov
add
or
maxps
les
(bad)
lock
mov
adc
mov
scas
jle
ins
shl
mov
aaa
xlat
loope
xlat
ret
adc
mov
retf
call
add
jle
xor
(bad)
hlt
pop
bndldx
dec
dec
outs
movs
jmp
and
sub
mov
jp
mov
in
push
push
pop
sbb
aas
shr
push
pop
je
mov
out
add
in
pushf
outs
jnp
mov
sbb
xchg
xor
mov
push
addr16
js
repnz
mov
je
dec
mov
loop
stos
push
cdq
lods
jge
sti
mov
add
out
and
jle
int
or
push
(bad)
stos
cmp
sbb
dec
adc
repnz
pop
test
icebp
jg
push
xor
lods
and
popf
imul
pop
xchg
sbb
sbb
jno
inc
cmp
mov
sub
dec
sub
mov
js
call
fnstsw
xchg
(bad)
cs
or
xor
xor
jne
push
adc
aam
adc
fstp
(bad)
push
jecxz
pushf
sti
es
out
frstor
mov
out
mov
lds
xchg
mov
mov
sub
addr16
test
dec
cmps
les
xor
ss
xor
mov
outs
xor
sbb
aam
imul
les
and
call
jg
popf
test
add
mov
jne
push
push
jnp
nop
inc
mov
imul
cmps
inc
and
inc
int
cmp
(bad)
mov
or
jae
push
inc
test
xchg
jmp
push
sub
les
cmp
push
pusha
(bad)
es
test
fcom
pop
mov
call
sbb
not
mov
(bad)
sbb
mov
aam
add
rcl
pushf
mov
pop
ror
loopne
xor
jle
add
(bad)
sahf
mov
test
jg
add
mov
movs
push
adc
sub
test
jle
aaa
pop
test
xor
clc
inc
push
jge
dec
xlat
push
js
and
push
inc
mov
mov
fwait
stos
mov
stos
xor
nop
daa
test
jmp
pop
stc
xor
mov
mov
dec
xchg
imul
and
lahf
adc
es
aas
pop
leave
mov
sbb
lods
(bad)
int3
or
adc
inc
or
dec
inc
arpl
fst
cmc
mov
dec
and
in
dec
cmp
fwait
daa
jmp
out
and
inc
sub
out
xchg
adc
mov
ja
push
hlt
sbb
call
nop
lea
mov
dec
fild
dec
sar
test
mov
loop
inc
push
clc
adc
pop
in
jg
pop
mov
xor
mov
and
ds
scas
movs
jns
push
out
xor
data16
cmps
jge
neg
pop
stos
sbb
sbb
sub
sar
rol
mov
int3
sub
cmp
jl
mov
into
fldenv
fisttp
pop
or
dec
ds
(bad)
out
fs
idiv
mov
repnz
sbb
call
ror
mov
cli
fisub
adc
pop
pop
test
outs
mov
cmps
data16
xchg
jae
inc
gs
bound
je
push
data16
inc
es
push
(bad)
cmp
add
fmul
jle
xchg
mov
repnz
pop
or
xchg
and
fdivr
add
ret
jb
ds
(bad)
or
clc
mov
jg
pop
out
int3
jg
out
or
stos
pop
pop
cmp
jo
mov
call
repz
jle
xor
mov
out
ret
pushf
shl
mov
and
mov
sbb
sbb
mov
mov
push
nop
pusha
call
xchg
add
outs
sbb
jb
cdq
pop
dec
xchg
push
repnz
arpl
xor
sahf
adc
dec
inc
iret
pop
into
and
out
jno
lods
movs
add
out
push
(bad)
and
jb
dec
mov
xchg
(bad)
sbb
sar
cmp
dec
sub
aaa
inc
jmp
push
inc
cwde
pop
sub
push
fxch
arpl
jno
pop
imul
push
aad
jne
push
xchg
imul
test
jmp
and
fs
fistp
jne
or
adc
repz
push
pop
pop
mov
pop
cmp
and
xchg
push
sahf
pop
out
inc
adc
int3
sbb
xor
cwde
dec
inc
mov
add
rol
into
push
or
jp
mov
mov
cmc
mov
adc
sti
mov
int3
cmp
adc
xlat
ss
fwait
xlat
jmp
adc
cmps
jb
call
adc
pop
mov
and
pop
icebp
loope
cmp
mov
jnp
into
lods
loop
inc
mov
dec
cmps
fisub
mov
jecxz
jecxz
xor
(bad)
je
sub
ss
shr
rcl
cmps
ret
jb
xchg
out
data16
pushf
adc
jmp
sub
movs
and
or
jecxz
push
mov
(bad)
and
(bad)
jo
mov
int
jno
sbb
push
call
hlt
inc
cmp
aaa
adc
push
adc
and
lahf
jmp
das
sbb
das
mov
xchg
ret
jae
sahf
int
cld
and
jns
stos
inc
mov
inc
call
sbb
(bad)
jle
inc
stc
push
mov
jecxz
daa
movs
test
jmp
shl
inc
repz
bound
inc
jae
test
and
dec
aaa
or
or
fs
jnp
add
inc
push
popa
push
retf
pusha
jg
test
push
sub
nop
push
ja
dec
repnz
xchg
add
in
imul
and
outs
loopne
xchg
mov
mov
lahf
cmps
xlat
retf
stc
stos
int
push
loope
xchg
dec
clc
push
cld
sub
popa
imul
cmc
loop
xchg
hlt
cli
push
mov
inc
adc
fcomp
jo
mov
cld
cwde
hlt
pop
cwde
xchg
mov
mov
sub
pop
cmp
les
jl
xor
repz
mov
xchg
jmp
sar
imul
outs
mov
ins
pop
jmp
jp
sub
mov
fisttp
lea
pop
in
pop
push
and
out
add
fs
scas
sar
repz
cmp
xchg
rol
push
xchg
adc
repz
lahf
lods
popa
sti
clc
pushf
mov
dec
fwait
addr16
dec
sbb
popf
js
xor
xlat
int3
or
push
stc
xor
mov
inc
rcl
int
out
push
sbb
int3
add
dec
mov
mov
xor
dec
sbb
push
pop
test
daa
pop
sbb
test
mov
dec
in
jecxz
pop
retf
imul
jno
lods
(bad)
mov
sbb
jb
push
mov
aad
xchg
je
loopne
ja
in
int3
inc
sbb
pop
lahf
push
add
push
jns
ret
mov
xchg
sub
dec
xlat
lds
adc
aad
cmps
sbb
inc
adc
jp
aam
and
les
aam
ds
add
fwait
dec
into
shr
jns
aaa
mov
dec
cmps
inc
jmp
in
int3
mov
dec
xor
out
push
(bad)
pop
mov
cdq
stc
call
jne
jl
das
test
jmp
add
mov
cdq
in
mov
adc
repnz
cmc
mov
mov
pop
mov
ret
test
add
aad
aam
(bad)
adc
push
mov
retf
js
push
leave
or
or
mov
outs
pusha
in
test
push
push
iret
jns
(bad)
pop
fidiv
jae
xor
aam
push
or
mov
movs
loop
repz
cld
mov
add
push
sar
sbb
jne
and
stc
push
xor
rcr
xchg
push
movs
add
sbb
rol
mov
std
into
push
test
call
retf
lods
push
xchg
retf
imul
mov
inc
and
jg
jnp
pusha
frstor
inc
mov
adc
adc
mov
fdivr
sub
jle
cmp
xchg
xchg
jecxz
adc
outs
mov
inc
inc
cmp
hlt
inc
pop
or
nop
(bad)
xor
mov
pusha
jecxz
jns
inc
mov
ja
iret
pop
cli
(bad)
sub
mov
stos
or
mov
and
sar
and
mov
fs
pop
and
mov
ja
rcl
adc
mov
pop
add
(bad)
xchg
ret
and
(bad)
mov
push
idiv
xchg
xchg
sti
fwait
xchg
dec
mov
es
ja
xor
scas
or
add
shr
pop
(bad)
mov
push
lock
dec
mov
pop
les
xor
pop
stc
or
add
movs
pushf
ins
das
push
dec
push
adc
cmps
mov
sbb
sub
stc
leave
test
xchg
and
mov
ins
jae
iret
jmp
std
bsr
jecxz
ret
inc
mov
sub
xor
sub
out
(bad)
arpl
add
or
xchg
into
mov
sub
call
mov
mov
das
push
jmp
pop
cmps
imul
mov
fdiv
cwde
(bad)
into
cs
fisub
ret
cmc
ret
sub
lods
mov
mov
lahf
dec
xchg
sbb
inc
push
inc
jecxz
inc
cmp
(bad)
push
imul
mov
sbb
push
xchg
rcl
pop
dec
jmp
in
push
dec
idiv
jnp
push
aaa
cmp
sbb
xlat
je
aas
shr
pop
push
jae
mov
adc
mov
push
sub
xor
pusha
and
ins
pushf
mov
adc
add
xor
(bad)
outs
pop
mov
dec
cmp
mov
xor
cmp
lahf
adc
sbb
push
call
popa
xor
cmp
or
jne
imul
rol
jmp
mov
scas
loope
mov
push
jmp
jbe
fimul
adc
pop
leave
daa
daa
fnstsw
dec
mov
cmp
pop
sbb
inc
fs
or
popf
xor
aam
cdq
cmps
ss
aam
out
repz
test
loopne
bound
fdivrp
push
out
dec
jb
gs
jb
leave
outs
ins
xor
jge
aaa
pop
sub
or
out
popa
pop
adc
sbb
xchg
mov
sbb
call
cmps
or
and
int
inc
ja
arpl
or
sbb
sbb
sbb
outs
sub
outs
push
cmc
pop
inc
push
cmc
sti
sbb
mov
inc
jmp
sub
loop
hlt
es
ret
shl
jb
movs
push
test
lea
int
mov
push
cmp
bound
jo
in
into
xchg
pop
and
or
fsubr
mov
jbe
inc
push
cmp
aad
inc
inc
add
aaa
das
mov
fisttp
mov
pop
jne
in
jp
mov
pop
lds
lods
jo
les
pop
sar
mov
ficomp
push
pop
retf
mov
aad
mov
jmp
push
ret
jbe
lea
jno
xchg
push
fisttp
mov
sbb
push
dec
loope
stc
sub
retf
cmp
int
sub
and
in
repz
aaa
test
fs
out
ror
mov
xor
ins
mov
sahf
push
sahf
inc
adc
xor
iret
popa
xchg
xchg
test
xchg
add
fld
stos
adc
aaa
out
jl
and
push
in
in
aam
mov
add
fstp
stos
ja
mov
mov
enter
xchg
outs
xor
ror
cmp
jbe
and
pop
adc
jne
loop
cld
mov
xchg
popf
xchg
in
dec
lods
iret
lds
shl
add
loop
and
xor
add
jp
call
mov
sub
iret
sub
add
hlt
adc
popa
push
xchg
or
loopne
icebp
mov
repz
bound
xor
pop
fdiv
dec
adc
push
cmp
pushf
pop
movs
xchg
xchg
xor
push
bound
and
(bad)
add
bound
xor
hlt
and
sahf
cmp
cld
push
out
or
mov
cmps
dec
fistp
inc
mov
fsubr
outs
stc
xor
jle
call
in
pop
or
mov
xchg
inc
fs
mov
mov
fistp
shl
cwde
jmp
cmp
sbb
dec
add
xchg
mov
mov
out
mov
hlt
jmp
pushf
sahf
inc
push
scas
dec
adc
jge
stc
(bad)
and
mov
mov
adc
test
ins
and
inc
sbb
fadd
sbb
cmps
sub
sub
loope
ins
lds
loopne
arpl
pop
lock
and
pusha
push
mov
fbld
dec
sahf
hlt
adc
test
xor
(bad)
movs
jecxz
pop
out
or
movs
test
aaa
arpl
ss
mov
mov
cmp
cwde
cli
pop
or
loop
or
lea
loope
push
or
fldenv
sub
adc
out
add
fcom
test
aam
cs
sbb
inc
fdivrp
jg
mov
adc
fnsave
mov
bswap
das
push
jecxz
mov
scas
add
arpl
xor
mov
enter
cmc
bnd
repnz
jne
jae
mov
jg
popa
cmp
jmp
ret
mov
adc
or
data16
and
dec
inc
mov
pop
je
shr
outs
sbb
retf
fldcw
repnz
jecxz
pop
inc
mov
adc
xchg
test
mov
aad
inc
xchg
sub
mov
push
pop
(bad)
data16
ficom
adc
adc
leave
sub
mov
jae
cld
test
mov
adc
loope
sbb
jp
call
hlt
ror
dec
cmc
adc
es
retf
ins
sbb
std
jmp
mov
fisubr
rcl
in
cmp
add
leave
int3
adc
in
xchg
retf
out
int3
loope
stos
fstp
xchg
adc
aad
fcmovnu
pop
and
cmps
mov
jbe
or
xlat
jmp
sub
pop
push
xor
popf
pop
mov
push
sahf
inc
in
inc
dec
ds
mov
dec
add
cli
aas
push
jmp
adc
or
pop
inc
mov
add
mov
sbb
(bad)
popf
gs
js
mov
loopne
sbb
dec
repz
imul
adc
dec
mov
and
imul
jns
or
xchg
xchg
lds
mov
jne
dec
mov
cmp
inc
(bad)
dec
jecxz
fisttp
int3
xchg
shl
adc
and
inc
fsub
lock
jp
test
clc
or
daa
jge
add
das
sahf
push
lods
fadd
loop
popa
fwait
xor
dec
dec
push
sbb
nop
mov
hlt
jmp
dec
dec
or
std
adc
adc
mov
daa
xchg
out
sub
std
ja
cmps
mov
retf
sbb
mov
pop
sbb
fwait
push
stos
xchg
xor
push
push
dec
mov
inc
cmp
mov
sbb
adc
mov
pop
xchg
lahf
dec
mov
xor
cmps
add
in
aaa
xchg
sub
js
pop
(bad)
xor
stos
popa
mov
(bad)
aas
mov
or
repnz
aad
enter
mov
sbb
icebp
movs
(bad)
stc
mov
sbb
dec
repnz
or
mov
mov
jb
adc
adc
std
out
pusha
and
loop
cmp
dec
data16
aas
ja
xor
jns
adc
xlat
dec
int
fs
into
push
stos
push
jno
push
cdq
dec
aas
cmc
dec
xchg
aad
imul
loope
not
loop
or
mov
(bad)
and
call
data16
pushf
call
dec
xchg
or
adc
fild
push
jmp
xchg
and
xor
xchg
pop
js
rol
loop
sti
dec
aad
aaa
mov
cmp
dec
push
addr16
mov
xchg
ins
(bad)
ja
je
jmp
ins
and
dec
inc
aam
gs
mov
test
stos
push
cmp
and
jmp
shr
add
enter
aas
adc
fiadd
or
(bad)
icebp
into
popf
shl
mov
mov
adc
scas
dec
fs
loop
mov
xor
(bad)
sbb
jno
mov
scas
scas
loope
inc
and
and
jb
test
add
push
cmp
in
sub
out
fild
push
jge
pop
xchg
xlat
xchg
cdq
cli
outs
mov
jg
scas
xchg
cld
sbb
out
test
pop
jns
mov
mov
aas
cli
add
shl
pop
adc
xchg
jg
cmps
mov
mov
adc
push
movs
push
and
xchg
loop
inc
popa
inc
daa
xchg
arpl
push
retw
jmp
adc
inc
in
push
inc
inc
frstor
push
push
jecxz
push
and
jb
int3
test
std
pushf
jle
adc
adc
loope
pop
sub
cmp
inc
dec
sub
push
test
pop
inc
adc
je
push
lea
ins
(bad)
es
jno
adc
cmp
mov
in
(bad)
test
bound
or
and
and
dec
inc
hlt
mov
jb
loop
sar
pop
xchg
call
sbb
inc
mov
test
and
arpl
add
sbb
int
xchg
std
fsubr
or
repz
or
addr16
pop
cld
adc
iret
sub
fisubr
ja
xchg
mov
test
xor
adc
push
fstp
les
dec
jne
pop
xchg
xchg
dec
xlat
addr16
xor
mov
jle
push
lods
ss
inc
out
cmp
(bad)
(bad)
outs
test
or
pop
movs
hlt
pop
loop
movs
leave
cmp
pop
xor
add
or
jae
xchg
aaa
adc
add
lods
add
jg
jmp
pop
inc
adc
xchg
sti
sbb
out
loop
xchg
sbb
jno
mov
lea
mov
push
pop
repnz
lds
cmp
ficomp
push
gs
push
rol
scas
cmp
movs
ffree
gs
cld
mov
(bad)
push
sti
(bad)
(bad)
sub
outs
pop
dec
xchg
sbb
ret
dec
push
mov
dec
or
cmps
jmp
cdq
inc
xchg
in
sti
jne
imul
fild
lods
ins
ss
in
pop
jg
mov
jge
adc
xlat
hlt
mov
mov
shl
add
and
pushf
pushf
stos
xchg
pop
shl
(bad)
iret
adc
xor
arpl
jb
dec
and
jns
and
push
dec
stc
xor
gs
das
pop
xchg
das
mov
outs
aas
xchg
(bad)
leave
loope
add
icebp
cwde
push
dec
pop
fwait
sub
add
imul
xchg
xor
lock
push
dec
dec
mov
inc
rol
push
jge
aas
push
call
xchg
cmp
js
shl
(bad)
mov
push
jmp
imul
cmps
mov
jmp
imul
ror
xor
or
fsubr
mov
pushf
fidiv
aad
ficom
and
adc
sub
inc
(bad)
(bad)
jp
or
test
(bad)
mov
mov
mov
xor
add
push
add
imul
cmp
fsub
sbb
add
mov
mov
push
bound
pop
(bad)
lods
das
add
mov
adc
mov
jno
mov
or
or
mov
add
push
das
sbb
sbb
retf
fidivr
dec
dec
mov
mov
xchg
pop
jmp
dec
ins
mov
lds
pop
sar
stc
pop
or
idiv
sub
pop
fmul
mov
ror
and
adc
jne
mov
jns
(bad)
mov
pop
push
xor
sub
(bad)
xor
xor
pop
cmp
popf
enter
jmp
nop
ss
mov
xor
xchg
ss
adc
mov
cmps
addr16
movs
fs
pop
leave
in
jl
fst
movhps
hlt
jmp
push
out
gs
xlat
inc
pop
bound
add
push
or
mov
aas
inc
das
addr16
push
cmp
push
(bad)
xor
xor
xchg
aad
mov
es
mov
movs
mov
xchg
push
add
sbb
mov
test
and
inc
pop
and
xchg
ja
dec
ret
cmps
call
fs
mov
mov
cmp
les
stos
addr16
and
call
push
adc
ret
(bad)
rcr
xchg
shl
sub
ins
(bad)
icebp
daa
icebp
and
call
sar
add
clc
ds
dec
test
mov
cwde
adc
push
pop
cmps
push
mov
jmp
inc
daa
jle
inc
or
pop
cmc
adc
ja
(bad)
aas
lock
or
adc
cmps
test
jno
jb
jnp
ret
ds
jns
push
das
adc
sbb
fwait
arpl
ficom
pop
push
xchg
sbb
mov
cmp
outs
es
xlat
inc
leave
jp
ins
cmp
mov
int
jnp
pushf
cs
fiadd
movs
pushf
daa
sub
gs
(bad)
iret
daa
pop
cmps
inc
push
addr16
repnz
pop
pop
sub
rcr
cmp
mov
and
test
mov
hlt
or
mov
adc
test
mov
push
ss
pop
mov
movs
call
xor
push
or
inc
stc
adc
les
pop
push
movs
lock
and
jl
test
cmps
loope
push
sub
dec
mov
inc
hlt
std
jno
mov
lahf
xchg
icebp
inc
rcr
ds
sbb
fimul
retf
fmul
push
xor
cmpxchg
rcr
repnz
mov
bound
mov
mov
in
pop
xchg
xchg
fdivr
cld
outs
ins
test
jl
in
pop
hlt
push
xchg
ficom
jp
inc
inc
sbb
dec
push
(bad)
stos
stos
xor
ds
addr16
xor
inc
sbb
mov
mov
(bad)
lahf
xor
aas
fstp
or
push
mov
xchg
(bad)
fmul
jae
in
loope
nop
dec
outs
dec
sbb
aaa
push
mov
int3
sbb
or
xlat
xor
inc
(bad)
push
hlt
jns
outs
cmps
repnz
lods
mov
jecxz
xchg
mov
cmp
jbe
pcmpgtb
and
and
popa
pop
mov
xlat
push
sub
les
push
add
cmp
hlt
push
inc
and
pushf
adc
mov
(bad)
(bad)
push
xchg
scas
popf
fld
es
or
mov
sahf
sar
shl
jmp
in
xchg
push
repz
xchg
test
fcomp
cmp
test
movs
xchg
and
jb
in
mov
aas
jb
mov
xor
mov
std
ret
mov
sub
jb
movs
pop
pop
push
mov
fld
gs
shl
cmp
arpl
scas
dec
xor
loop
lahf
xor
out
and
inc
jl
aas
jnp
push
test
pushf
xchg
xchg
in
test
cdq
fisttp
and
dec
mov
jge
cwde
test
movs
jnp
aas
ss
or
div
inc
jns
push
inc
xor
mov
inc
ins
je
sar
sti
inc
ret
adc
lods
fs
call
add
fadd
cs
idiv
retf
loope
push
mov
pop
lods
retf
xor
jle
jnp
mov
icebp
out
cmps
int3
(bad)
push
fwait
mov
cmp
std
addr16
mov
jp
test
daa
(bad)
js
inc
arpl
mov
mov
ss
push
movaps
sub
(bad)
cli
aaa
cdq
xchg
pop
xchg
adc
xor
aas
xchg
sbb
out
(bad)
xchg
cmp
sub
or
outs
xor
mov
mov
xchg
sbb
push
adc
mov
pop
cmc
pop
adc
ds
fisubr
sub
cmp
sbb
(bad)
pop
or
loop
jmp
prefetch
aad
pushf
sub
mov
jg
mov
out
add
add
cmp
sbb
cmc
loopne
sbb
out
int
sub
nop
fxam
sar
dec
popa
mov
xchg
xchg
xlat
sbb
ss
div
xchg
and
or
jae
retf
and
div
call
push
push
mov
add
dec
xchg
rcl
dec
xor
pop
mov
sub
dec
dec
xchg
push
jmp
les
cs
enter
mov
and
sbb
or
(bad)
dec
xchg
push
mov
es
mov
inc
push
stos
push
cmp
sub
idiv
mov
int
push
sbb
push
lds
xchg
out
push
mov
(bad)
jae
je
loopne
sub
out
or
lock
jg
mov
sub
sbb
mov
sbb
aad
adc
xchg
out
jo
add
xor
jle
jae
xchg
xor
(bad)
pusha
sbb
inc
(bad)
rcr
mov
call
inc
rcl
mov
repnz
mov
movs
cmp
sub
mov
add
and
sahf
leave
daa
lds
jns
push
mov
push
sti
div
ja
pop
sar
enter
mov
cmc
lods
dec
sti
inc
gs
dec
adc
ins
mov
dec
push
pop
adc
jg
mov
repnz
inc
outs
repnz
xchg
inc
inc
out
xchg
dec
out
pop
call
retw
jge
sub
daa
mov
shl
sbb
fcmovnbe
cmps
pop
pop
outs
mov
add
out
es
sub
aam
jmp
test
lahf
aaa
outs
in
xchg
pop
fisub
inc
lds
retf
cdq
jmp
or
lea
xchg
addr16
inc
mov
jle
and
jge
sahf
mov
ins
fld
imul
push
stos
test
add
leave
fisub
push
or
mov
inc
dec
sub
das
pop
pop
cs
pop
pop
bound
mov
dec
fs
stos
cmp
cmp
mov
add
(bad)
icebp
cmp
mov
add
fdivr
sbb
mov
adc
mov
xchg
or
push
mov
dec
icebp
(bad)
push
sub
mov
js
pop
aad
or
push
(bad)
ins
fbld
pop
or
dec
fld
pushf
cmps
sbb
add
xor
mov
div
jns
test
and
cmp
dec
retf
mov
push
dec
repnz
ds
outs
outs
pop
xor
les
dec
pop
sar
call
ins
sub
xor
and
int
fwait
pop
dec
mov
push
fcmovnu
xor
mov
jl
fdiv
call
pushf
xchg
shl
hlt
test
xchg
jg
outs
pop
sbb
add
retf
and
add
jae
inc
inc
lods
loopne
lea
mov
push
int3
xchg
push
(bad)
mov
jp
jp
mov
icebp
jmp
iret
cmp
retf
push
jecxz
xchg
jl
les
gs
inc
(bad)
movs
retf
add
das
imul
cmp
clc
push
or
jl
lods
jecxz
lds
iret
jmp
and
pop
mov
push
(bad)
cmp
add
call
imul
push
sub
lahf
mov
inc
out
add
in
mov
lahf
cmp
rol
call
push
arpl
dec
jecxz
gs
adc
stc
jne
xor
or
jecxz
inc
retf
pop
jae
rcr
or
cmc
pop
add
adc
push
sar
mov
icebp
inc
aam
push
inc
push
push
sbb
fsubr
add
adc
jl
push
test
fsub
xchg
(bad)
xchg
and
xsha1
cmps
or
(bad)
cs
mov
jae
jmp
add
jmp
and
and
int3
iret
sbb
xchg
(bad)
adc
loopne
cmp
sub
in
movs
stc
ds
xchg
push
xchg
xchg
imul
enter
stos
mov
dec
call
stc
dec
bound
cli
sbb
outs
ins
xor
pop
mov
iret
dec
cmp
inc
ret
cmp
(bad)
hlt
outs
popa
(bad)
(bad)
pop
xor
stos
lods
jb
fwait
outs
pop
sub
xchg
cmp
js
add
div
out
mov
jbe
daa
mov
test
mov
push
xor
inc
repnz
shl
neg
pop
ret
cli
idiv
nop
inc
iret
xchg
mov
or
loop
adc
lahf
ret
lahf
mov
pop
ret
pop
xchg
sbb
ds
(bad)
ficomp
repz
adc
in
jge
sub
fucomp
scas
fidivr
push
ss
or
pop
adc
cmps
and
out
pop
mov
outs
jne
sbb
rol
or
stos
lods
lock
cwde
jl
and
loopne
mov
rcl
pop
sbb
ss
mov
mov
mov
sub
sbb
mov
and
arpl
cmp
outs
jecxz
inc
(bad)
push
out
or
cmp
shl
fbld
es
push
and
arpl
xchg
retf
and
test
rol
or
push
(bad)
(bad)
jecxz
push
or
std
mul
test
jmp
test
and
dec
push
sbb
adc
and
cld
ins
add
xchg
and
ret
mov
push
mov
adc
cmp
or
pop
jecxz
inc
test
and
push
fldenv
inc
ds
into
pusha
sub
mov
sub
pusha
mov
xchg
jne
xor
push
div
imul
hlt
xor
sub
dec
push
mov
mov
pop
inc
mov
mov
arpl
movs
loop
aam
cli
lods
stos
lock
mov
addr16
sti
xchg
push
mov
or
and
ja
(bad)
sub
or
ins
es
int
ret
xchg
cwde
sub
jmp
int3
xchg
cmp
sbb
mov
jecxz
sar
addr16
pop
adc
adc
fstp
xlat
mov
jb
pop
in
push
shl
mov
repz
adc
xor
add
push
in
push
loope
mov
jbe
jno
xor
loope
call
loopne
mov
dec
pop
or
out
xor
pop
test
pop
and
(bad)
fwait
xchg
mov
test
sbb
rcr
rcl
mov
pushf
mov
adc
sub
stc
xor
test
shl
lahf
popf
jbe
or
in
push
inc
ficom
jns
pop
(bad)
enter
fist
call
or
or
mov
nop
xchg
fisttp
xchg
mov
fsub
arpl
les
xor
js
mov
dec
jb
loope
push
sbb
stos
iret
dec
push
xor
add
adc
and
pop
fcmovu
pusha
fidiv
xchg
je
and
pop
sti
inc
push
cmc
add
sahf
je
test
mov
xchg
xchg
add
outs
mov
push
cmps
push
jae
cmp
out
pop
int
sbb
cmp
in
ds
sbb
pop
iret
cmp
pusha
and
mov
cmp
fdiv
mov
or
je
stos
mov
xor
loop
jno
cmp
inc
or
cmps
sbb
outs
sub
jo
xlat
fmul
add
xor
and
adc
push
fist
and
inc
jge
mov
mov
out
jmp
xchg
sbb
inc
jno
or
jmp
push
hlt
addr16
lock
sbb
in
sar
sbb
rcl
aas
ds
jp
daa
push
retf
sub
push
push
xchg
xor
movs
mov
mov
gs
idiv
sbb
ret
dec
lods
or
imul
xor
shl
fbld
add
or
push
jo
xchg
cdq
arpl
pop
outs
xor
xor
jns
je
aas
dec
cmp
out
lea
jne
or
inc
(bad)
mov
sbb
push
sbb
xchg
sub
sar
xchg
mov
scas
aad
mov
lods
stos
fidiv
js
mov
xor
sub
mov
adc
push
test
mov
jo
mov
clc
cmp
fdiv
nop
test
clc
inc
js
fbld
xchg
push
inc
addr16
mov
es
das
inc
scas
sbb
cmp
adc
pop
mov
ror
imul
jp
(bad)
sbb
aam
mov
retf
lock
xchg
pop
sbb
pop
(bad)
ret
test
jmp
cmovne
and
pushf
add
dec
pop
mov
je
jmp
mov
push
pop
jns
xor
mov
(bad)
(bad)
das
dec
fidivr
jae
out
lahf
jle
push
ret
clc
jecxz
jb
hlt
data16
jae
mov
sub
fsub
pop
jnp
fabs
mov
or
retf
and
call
adc
mov
or
not
pop
xor
jge
mov
stos
imul
rol
dec
fdiv
cld
jno
mov
sbb
out
push
arpl
mov
fwait
ss
cdq
pop
loopne
enter
mov
add
fimul
rol
inc
inc
enter
mov
inc
sub
mov
cmc
xchg
bnd
push
xchg
cs
mov
lods
lods
scas
adc
add
add
call
pop
paddsb
xor
pop
pop
call
retf
push
les
sub
icebp
dec
jg
imul
and
rol
xor
adc
pop
xor
cmp
jo
sbb
retf
mov
jae
adc
mov
jmp
mul
mov
sub
lods
jbe
ins
xchg
js
out
push
jmp
xor
lahf
push
(bad)
cmp
cwde
xor
jnp
ins
movs
push
loop
xor
data16
pushw
jg
call
or
in
sbb
int
pusha
lahf
xlat
leave
sub
sar
daa
or
jecxz
cld
out
mov
mov
stc
xor
fcmovnb
cld
push
mov
adc
mul
push
loope
and
scas
stos
mov
jl
xchg
pop
jnp
pop
push
addr16
(bad)
mov
pop
xchg
mov
adc
mov
loope
sbb
fnstsw
stc
outs
jne
mov
rol
and
je
lods
jae
sbb
pop
mov
inc
ins
adc
push
packssdw
test
push
int
inc
inc
lahf
(bad)
xchg
mov
shr
outs
repz
jl
jno
popa
dec
adc
ds
(bad)
ffree
popa
fld
call
aam
mov
mov
push
pushf
jmp
adc
cmp
cwde
in
jl
ret
les
movs
(bad)
stc
clc
enter
sub
push
jl
dec
inc
adc
pushf
rcr
nop
mov
inc
fld
jnp
jmp
iret
(bad)
in
sub
jbe
repz
inc
(bad)
gs
cwde
adc
arpl
cmp
xlat
call
dec
nop
xchg
or
inc
fsubr
fbstp
in
jae
mov
dec
jnp
rcr
stc
push
(bad)
cld
or
aaa
pop
xchg
add
call
xchg
das
popf
movs
xchg
dec
jne
iret
jge
inc
dec
in
jo
jnp
shl
dec
(bad)
lea
mov
test
adc
push
sub
retf
aad
stos
les
aas
cmp
addr16
jo
test
int
push
jbe
loopne
xchg
call
cwde
sub
fstp
sbb
mov
es
or
pop
mov
lods
icebp
call
es
lods
inc
jl
aaa
lods
jle
mov
ss
add
int
cmp
addr16
ins
or
pop
cmps
pusha
lods
inc
or
call
call
dec
mov
clc
arpl
or
sti
or
xchg
movs
xor
jno
ds
js
adc
int3
(bad)
nop
fidiv
push
sub
call
inc
pop
ins
push
adc
adc
pop
jg
dec
pop
xor
mov
sbb
cs
and
pusha
dec
cmps
stos
(bad)
mov
dec
xchg
inc
mov
push
adc
aam
retf
test
push
sub
inc
test
sbb
mov
xlat
out
mov
neg
mov
xchg
push
push
js
ret
jmp
adc
and
nop
enter
push
inc
aam
call
fimul
jbe
int
jg
cwde
int3
mov
mov
mov
cli
scas
nop
pop
adc
mov
cmp
cwde
mov
(bad)
fidivr
in
or
adc
inc
int
mov
and
int3
pushf
rol
mov
mov
and
fisttp
sbb
jle
inc
dec
add
cld
mov
js
jmp
mov
imul
xchg
fidiv
(bad)
retf
cmps
dec
les
xlat
lock
cmp
jns
xchg
sub
and
stos
push
fmul
or
repz
mov
xor
mov
dec
(bad)
out
pop
and
mov
mov
push
ss
(bad)
fbld
or
clc
sub
sti
push
mov
js
pusha
ror
jg
xchg
jp
xor
xlat
push
shr
push
js
inc
pop
nop
cmp
cmp
xlat
shl
pop
push
sbb
and
xchg
sti
jne
cdq
xor
adc
jg
dec
inc
gs
inc
sub
inc
rcr
xlat
xor
es
lds
movs
cmp
repnz
jnp
dec
call
not
sbb
mov
int
loop
mov
pusha
mov
mov
cmp
popa
loope
sbb
sub
cmc
xchg
adc
and
movs
cs
lods
xchg
push
test
dec
mov
cs
and
(bad)
test
retf
inc
daa
sbb
test
xchg
mov
add
aas
div
pop
into
add
sub
lods
aas
retf
pushf
shr
fisubr
jb
or
pop
push
xchg
adc
out
mov
cmp
push
add
(bad)
outs
mov
ficom
ret
ret
mov
pushf
(bad)
pop
ds
in
mov
shr
add
fisub
add
int
cmp
sbb
cmp
mov
ins
in
push
imul
cwde
leave
xor
stos
aas
sbb
rcr
push
fsubp
or
inc
jecxz
inc
daa
mov
jns
jo
rcr
mov
aad
adc
xchg
jmp
dec
pop
sub
imul
(bad)
push
(bad)
adc
or
jns
movs
lahf
les
cmps
or
into
mov
les
or
loop
xchg
cmp
cmp
in
pushf
or
inc
sti
mov
bound
aad
xchg
or
adc
into
or
mov
jecxz
icebp
ins
jno
jmp
mov
ins
nop
fstp
fbld
inc
cmp
mov
mov
add
ss
push
lahf
sbb
das
mov
js
mov
jno
dec
pmulhw
adc
inc
cwde
loopne
icebp
or
jo
jmp
xor
clc
pop
or
enter
call
jge
adc
shl
sahf
xchg
imul
push
dec
lahf
stos
pop
shl
in
call
and
rcr
pop
jg
pop
sti
and
add
loope
and
adc
je
adc
aaa
pop
inc
and
mov
lahf
mov
ja
aas
sbb
sub
pcmpeqb
jns
dec
jle
fchs
fldenv
std
jns
es
adc
mov
aas
mov
test
push
arpl
fnstsw
call
fadd
jg
aam
ins
cmp
movs
test
mov
sbb
pop
jns
jbe
leave
xchg
out
retf
xor
or
dec
xchg
inc
stc
inc
xchg
mov
nop
inc
cmps
add
xor
ss
sar
ja
nop
push
ja
pop
iret
iret
das
xchg
enter
outs
and
aad
fimul
stos
hlt
xchg
mov
repz
xchg
sbb
push
ret
gs
pop
pushf
push
je
mov
movs
fbstp
jo
mov
daa
pop
pop
xchg
call
cmp
jge
fsubr
xor
or
mov
pop
push
cdq
xor
dec
mov
jae
gs
jns
or
dec
cmp
push
bound
inc
out
loope
shr
popf
adc
xor
xor
push
xor
ret
push
cmp
(bad)
push
adc
sbb
xchg
mov
mov
xchg
out
lods
rcr
fcmovbe
mov
inc
xor
inc
push
pusha
stos
mov
jo
pand
sbb
in
or
xchg
data16
mov
xor
rcr
add
or
xchg
popf
cli
pop
and
mov
cmp
pop
daa
dec
jp
mov
aas
pop
fsubr
test
push
push
or
xchg
(bad)
cld
push
bound
and
mov
or
inc
cmp
jl
movs
mov
mov
cmp
enter
jnp
mov
or
ds
add
movs
je
pop
pop
or
in
inc
(bad)
jecxz
sub
sub
sub
jge
push
or
ret
adc
adc
sar
dec
or
fdivr
mov
movs
adc
pop
jecxz
xchg
mov
push
scas
xchg
jnp
test
out
inc
fidiv
cmp
fucom
mov
mov
xchg
mov
cli
or
mov
jne
and
xchg
lods
dec
xchg
jae
or
nop
leave
out
and
jp
and
iret
pop
cwde
(bad)
push
push
cmp
adc
add
inc
repnz
mov
xor
dec
push
cmps
aas
push
adc
pop
mov
inc
imul
pop
dec
jne
mov
leave
mov
call
shl
xchg
and
dec
sbb
mov
retf
jmp
jl
jbe
test
into
outs
icebp
enter
test
hlt
mov
in
mov
mov
fwait
push
adc
popa
out
mov
test
cdq
xchg
pop
inc
or
repnz
add
pop
mov
mov
mov
sub
call
lea
jg
imul
test
adc
push
lods
mov
fs
aam
xchg
or
adc
pushfw
xor
dec
xlat
clc
xchg
hlt
fsub
adc
mov
adc
push
push
add
push
cmp
arpl
ja
jg
movs
and
mov
iret
sahf
lds
jae
jb
test
dec
jbe
out
test
jno
mov
sti
shl
out
pop
push
loope
dec
lods
cwde
in
jecxz
repz
and
stos
(bad)
shr
fcom
cmp
repz
or
cs
lods
(bad)
loopne
push
and
retf
jp
pop
adc
fmul
and
imul
cmp
jae
xchg
fild
xor
push
ret
push
cmps
test
or
inc
rol
loop
inc
fisttp
lods
jb
(bad)
fld
iret
gs
inc
push
lock
aam
loope
ss
pop
and
xor
mov
movs
jl
xor
push
fisub
cmp
push
mov
int3
popa
push
mov
mov
lea
xchg
xor
mov
fdiv
inc
out
mov
enter
add
sbb
dec
stos
test
out
dec
push
adc
into
clc
jb
test
int
inc
add
fcom
inc
aad
enter
or
pop
inc
push
les
nop
jge
test
mov
(bad)
jb
aaa
icebp
inc
jp
xor
mov
out
imul
mov
daa
in
nop
cmp
inc
stc
test
(bad)
inc
pop
adc
(bad)
or
addr16
popa
mov
push
enter
xchg
retf
and
(bad)
sti
sbb
sbb
mov
lds
and
ja
loop
xchg
ds
mov
int3
push
mov
imul
jo
inc
ret
pop
call
js
inc
xor
pextrw
jo
call
and
es
mov
mov
lea
xchg
int3
cmps
xor
mov
xchg
dec
int3
in
mov
xor
lods
ins
std
and
(bad)
outs
or
test
lahf
in
ja
lods
and
xor
dec
push
mov
lods
xchg
das
mov
imul
pop
ficom
scas
sub
push
retf
mov
and
mov
xlat
or
arpl
xor
test
icebp
out
(bad)
mov
pop
xchg
inc
stos
jecxz
cs
clc
push
adc
mov
rcr
sti
or
cdq
stc
(bad)
adc
leave
ret
movs
retf
jmp
(bad)
push
cmp
inc
out
jle
cmps
sub
xchg
pop
sbb
push
lahf
sbb
loop
test
cmc
into
cmp
jb
sar
or
xor
pop
jmp
fcom
xchg
cmp
xchg
xchg
hlt
mov
cwde
push
xchg
clc
push
(bad)
out
fs
scas
cmps
mov
fld
inc
mov
es
lods
mov
adc
mov
add
xor
(bad)
gs
in
push
repnz
adc
jp
es
xchg
push
aad
ss
xor
mov
pop
fmul
cmp
aam
(bad)
dec
sbb
mov
inc
pop
loope
ret
xor
out
sti
rcr
dec
xor
mov
xlat
fimul
mov
add
mov
pop
adc
(bad)
mov
add
pop
int
add
loop
in
add
dec
sbb
cwde
or
gs
cmps
and
idiv
inc
inc
pushf
mov
add
ins
(bad)
xchg
pop
scas
sub
jb
in
xlat
push
pop
sub
xchg
xchg
mov
out
test
repz
rcl
lahf
jp
shl
mov
sub
mov
out
jmp
pop
ss
pop
or
jns
jg
daa
out
cs
or
xor
xchg
imul
and
adc
inc
cmps
dec
xchg
clc
jmp
jae
in
or
or
xchg
push
repz
(bad)
ds
call
cli
int3
ror
xchg
iret
mov
retf
xor
adc
or
dec
lahf
(bad)
in
adc
pop
fbld
push
leave
mov
jno
xor
sar
in
sub
cmps
repz
mov
dec
and
sbb
rol
mov
(bad)
aam
(bad)
lock
mov
aam
repnz
lea
xor
sub
out
mov
(bad)
pop
mov
or
add
das
mov
or
nop
daa
sti
pop
aas
pushf
mov
gs
xor
cmp
mov
call
cdq
push
scas
cmp
hlt
outs
jo
aad
add
aaa
push
and
retf
bound
pop
add
adc
mov
out
mov
rcr
rol
xor
fild
leave
mov
adc
iret
mov
inc
sub
int3
sub
(bad)
imul
outs
adc
mov
jmp
push
lds
sub
adc
pop
xchg
jae
gs
xchg
mov
xchg
retf
lock
mov
push
ret
xlat
loop
jecxz
cmp
stos
cmps
jecxz
mov
loop
mov
fldenv
lods
mov
sub
movs
es
inc
rcr
call
in
sub
mov
xchg
aas
dec
pop
and
(bad)
pminsw
push
jo
adc
jno
shl
out
dec
in
push
inc
adc
lea
add
jo
dec
add
cmp
loop
pop
push
mov
add
loop
push
sbb
es
fcmovbe
int3
outs
ds
or
fistp
cli
fnstcw
or
stc
add
add
jns
jns
sti
mov
in
mov
out
xor
rol
in
sbb
mov
fcom
sub
mov
adc
push
out
dec
push
enter
bound
dec
lahf
ins
shl
jecxz
(bad)
aas
add
pop
mov
ds
sbb
int
cdq
daa
push
cmps
mov
fcomip
fld
fbstp
icebp
sahf
inc
cmp
and
aas
mov
push
aaa
push
xchg
pop
(bad)
loopne
jno
aaa
jmp
dec
push
cld
mov
mov
pop
mov
and
jne
fucomi
aam
jmp
stos
mov
xchg
test
hlt
sbb
add
(bad)
lods
adc
ja
add
mov
inc
xchg
mov
cmp
mov
cs
push
mov
push
jae
mov
or
sahf
xlat
iret
adc
mov
ret
add
xchg
in
mov
jb
mov
add
je
push
test
loopne
dec
mov
dec
jmp
jg
xor
shl
xchg
jmp
rcr
pushf
lahf
call
repz
aaa
push
sahf
jmp
inc
leave
int3
mov
rcr
int3
mov
in
out
xchg
je
dec
mov
mov
ja
movs
ins
aaa
sub
inc
mov
or
cld
rdtsc
cmp
sbb
popa
adc
(bad)
mov
(bad)
xchg
mov
jg
xor
xchg
cmps
mov
xor
jb
push
and
cmp
dec
jne
out
mov
pop
xchg
sqrtps
push
add
out
adc
cld
push
mov
scas
sub
test
xlat
add
sub
cli
xchg
mov
hlt
std
pop
xchg
sar
sar
gs
push
inc
xchg
ins
jb
adc
dec
xor
add
jmp
mov
xor
outs
cmps
sbb
mov
xchg
scas
mov
pop
nop
xchg
fs
sbb
pusha
cs
sbb
push
dec
sbb
movs
movs
pushf
and
gs
out
iret
push
xor
or
enter
call
jge
jnp
cmp
push
jecxz
cmp
xor
lock
icebp
enter
add
xlat
xlat
cmp
cmp
push
push
push
test
inc
(bad)
imul
cmps
dec
cmps
div
mov
rcl
es
push
push
pop
mov
and
and
inc
imul
shl
imul
pop
sub
cmp
xor
(bad)
mov
loopne
sbb
repnz
test
les
imul
cdq
std
xchg
mov
cmp
call
pop
mov
or
call
je
fstp
rcr
popa
adc
adc
cli
rcr
out
xchg
sysret
inc
in
add
xor
in
outs
cmp
aad
test
mov
xor
icebp
add
in
pop
cli
call
push
pop
push
push
jg
std
lods
scas
dec
dec
cli
les
out
repnz
sub
inc
ins
sub
push
ins
movs
sub
lock
cmps
in
cmp
or
xlat
cli
pop
pop
xchg
stos
xlat
jp
neg
(bad)
xlat
(bad)
mov
leave
sbb
sub
jnp
jmp
xchg
adc
scas
cmp
mov
push
mov
js
cmp
jns
sub
sahf
xor
bound
push
or
aad
enter
or
sahf
push
imul
or
rcr
adc
adc
or
xor
ret
xchg
mov
adc
ins
movs
jecxz
or
ror
add
iret
in
adc
sbb
outs
mov
ins
sub
std
lods
clc
repz
or
ret
jle
xor
lds
mov
addr16
aad
ficomp
stc
(bad)
daa
adc
inc
xchg
into
mov
sub
cs
lods
pusha
cmc
inc
inc
outs
loop
sti
movs
test
fisub
fild
add
push
xchg
sbb
fisttp
daa
pushf
push
push
sbb
ja
dec
dec
sbb
push
inc
les
jmp
mov
push
xchg
pop
test
pop
inc
and
xchg
hlt
int
cmp
sbb
jmp
mov
pusha
lock
or
mov
test
or
aas
mov
fld
xor
addr16
cli
jns
fcom
popf
mov
rcr
cmp
or
lods
mov
loope
fld
gs
pop
jb
imul
test
aas
add
inc
retf
f2xm1
in
das
ja
out
mov
sahf
inc
cmp
add
mov
sub
sub
in
cmc
neg
adc
outs
outs
jno
push
bound
cmp
xor
dec
inc
jge
imul
jp
pop
jmp
ss
out
fwait
leave
mov
call
and
inc
stos
dec
mov
sbb
hlt
mov
(bad)
fsub
test
xchg
aam
cmp
ficomp
mov
mov
(bad)
dec
mov
mov
dec
xor
imul
cmp
push
add
inc
aaa
(bad)
pop
fstp
and
mov
(bad)
bound
xchg
push
test
addr16
jno
pop
ins
xor
stos
inc
les
xchg
sbb
and
sub
sti
mov
add
jecxz
sar
push
jle
lahf
push
pop
cs
and
mov
dec
mov
lahf
and
(bad)
and
leave
dec
sub
aam
scas
jo
jle
loopne
dec
movs
mov
mov
xchg
and
in
repnz
mov
and
fcmovnb
xchg
lods
mov
jecxz
inc
ja
sub
inc
pushf
ret
mov
xchg
fidiv
int3
retf
xchg
xor
cmp
or
sahf
jp
xor
scas
push
cdq
pop
adc
mov
jecxz
or
lods
pop
js
ficom
xchg
retf
mov
(bad)
not
xchg
leave
xor
loopne
pop
(bad)
jge
xchg
and
jmp
test
(bad)
in
scas
jne
pop
(bad)
cs
xchg
popf
test
loopne
add
push
mov
pop
test
repnz
xchg
sub
je
add
xchg
je
xlat
cmp
xor
push
pop
popf
fldenv
in
add
imul
or
ror
dec
pop
es
or
ss
lds
mov
fwait
pop
icebp
xchg
(bad)
pop
jne
stc
xchg
or
sahf
xchg
repz
xchg
mov
es
ror
inc
xchg
leave
(bad)
push
push
in
and
xchg
cmp
dec
cwde
movs
ret
out
sbb
je
mov
mov
out
out
(bad)
fldenv
icebp
jnp
inc
dec
mov
cmp
in
aas
xor
shl
cmps
or
push
and
adc
push
add
aam
cmp
icebp
retfw
push
adc
in
jge
mov
or
aad
fcom
cmps
jle
repnz
mov
fwait
or
rcr
out
adc
sub
pop
fnstcw
or
fild
and
mov
bnd
inc
cmp
sbb
add
push
idiv
or
iret
mov
jns
xchg
or
or
sti
jle
xor
dec
or
fmul
sub
ins
push
jno
ss
jmp
push
stos
xor
push
in
mov
imul
fdiv
jbe
mov
push
(bad)
les
je
sub
jb
fiadd
add
mov
ins
inc
into
pop
cmp
cli
fnstsw
bound
push
rcr
add
imul
add
xchg
iret
(bad)
cmp
pop
mov
retf
test
(bad)
sti
xor
push
cmp
data16
sbb
cmc
ins
adc
or
data16
jne
scas
mov
outs
shr
mov
enter
push
sbb
cmc
xor
mov
push
dec
cmp
ins
pop
pop
imul
sub
pop
into
sbb
(bad)
and
int3
mov
mov
pop
inc
sbb
inc
inc
pop
loope
cmps
mov
aad
das
sub
jmp
data16
push
rcr
pushf
gs
sbb
sub
cmp
imul
push
cmp
adc
leave
cld
xchg
es
ficom
call
vprotb
cmps
xchg
sbb
outs
nop
mov
stos
cmc
push
(bad)
or
repnz
cmc
loope
ins
and
loopne
iret
lods
jno
sub
mov
inc
pusha
xchg
pop
loope
mov
addr16
jns
pop
pop
xchg
xchg
sti
lock
push
outs
rcl
sub
cmp
pop
adc
popf
fwait
cmp
jo
push
pop
or
mov
movs
cmc
loop
sub
fmul
cmp
arpl
aad
jns
dec
xchg
inc
or
sbb
loopne
adc
sbb
in
jmp
push
popf
jl
jno
(bad)
adc
fidivr
mov
sub
hlt
dec
loopne
xor
xor
jmp
test
inc
ds
jae
je
cwde
xchg
rol
jnp
jl
outs
ja
inc
jg
mov
and
arpl
(bad)
pushf
ret
les
(bad)
hlt
jl
movs
jae
iret
cmp
and
shl
rcr
test
xchg
xchg
in
adc
icebp
jnp
dec
lahf
rol
push
sub
jmp
mov
add
mov
bound
xchg
jb
or
xchg
ss
div
jl
ss
pop
mov
int3
mov
pop
ins
or
cli
sub
xchg
scas
fs
in
loope
les
xchg
aaa
mov
xor
inc
popf
add
cmps
inc
sub
sub
fidivr
xor
jmp
mov
push
push
sbb
mov
adc
mov
sbb
adc
sbb
pop
jo
mov
out
fs
mov
imul
test
xchg
mov
dec
mov
adc
pop
fwait
jmp
popa
fsub
jmp
int
rcl
push
popf
xchg
sbb
push
add
idiv
test
xor
mov
sbb
out
add
push
jmp
cwde
mov
cmp
dec
jbe
in
ds
pop
aad
int
sar
add
iret
mov
sub
les
aaa
sub
aaa
pop
(bad)
xchg
fsubr
jne
cvtpi2ps
imul
xchg
loopne
mov
xor
mov
rcl
pop
sbb
push
mov
dec
stos
cmp
fiadd
cli
fs
add
in
pop
adc
retf
mov
add
pop
mov
jbe
xchg
int3
test
mov
std
xchg
iret
inc
ins
(bad)
jnp
imul
fwait
ss
xor
sbb
bound
xchg
push
es
cmp
pop
fprem1
push
push
xchg
jmp
(bad)
std
sqrtps
adc
dec
inc
bound
aad
xor
mov
add
mov
cwde
or
xchg
repnz
fwait
popf
(bad)
cmc
sub
jns
mov
jns
ficom
and
je
sub
lods
mov
jmp
stos
jp
cmp
sbb
sar
xor
dec
add
cmp
xor
sbb
mov
jnp
push
pop
ss
cmp
ins
dec
sbb
std
cmps
jbe
sbb
mov
fcom
scas
jmp
jnp
(bad)
scas
inc
adc
popa
adc
mov
div
(bad)
icebp
inc
scas
bswap
aas
pop
lea
mov
lods
inc
cmp
adc
sbb
jb
lods
sbb
cld
jns
inc
push
ret
idiv
icebp
push
sbb
(bad)
retf
xchg
mov
jb
xchg
sbb
sub
aam
repnz
mov
cmp
leave
mov
and
rsqrtps
ss
(bad)
out
fsub
es
in
mov
sub
test
pop
or
out
mov
leave
push
bound
fcomp
call
push
fwait
sahf
xchg
sti
sbb
arpl
add
rcr
sar
mov
mov
retf
repnz
div
fld
fcom
dec
sahf
mov
sub
retf
push
dec
xchg
push
test
pop
sbb
pop
xor
inc
push
(bad)
cmps
cwde
fisubr
push
stc
mov
arpl
pop
outs
jecxz
(bad)
imul
dec
xchg
adc
dec
add
pusha
fmulp
addr16
add
aas
shl
xor
ins
jp
dec
inc
gs
pop
xchg
clc
jne
jns
inc
mov
or
pop
fist
and
mov
rcl
xchg
push
push
and
div
or
xor
sub
push
loopne
xor
push
test
dec
jo
jle
and
jecxz
dec
aas
lahf
cmp
and
sub
fwait
mov
(bad)
aas
mov
jo
mov
ins
cdq
inc
stos
sub
ret
fnsave
inc
retf
cmp
jmp
xchg
mov
or
idiv
jge
sbb
(bad)
cdq
cmp
test
xchg
add
inc
xchg
in
add
dec
cs
ss
and
mov
xchg
adc
fs
jmp
fcmove
mov
wrmsr
mov
and
xchg
mov
arpl
mov
(bad)
adc
mov
lods
inc
(bad)
push
test
inc
mov
push
add
push
xchg
sbb
data16
jnp
dec
mov
js
js
fld
sbb
cli
cmp
out
lock
xlat
(bad)
xor
xlat
push
mov
daa
xchg
cmps
or
add
jmp
sbb
js
icebp
inc
test
and
mov
call
es
xchg
mov
retf
push
push
or
popa
xor
sub
stc
retf
lods
loopne
sub
xchg
lock
popa
dec
and
push
sahf
into
sbb
xchg
or
lock
call
into
aas
pop
ins
jne
jmp
ja
cld
jp
test
iret
push
dec
imul
and
xchg
and
xchg
dec
xor
rcr
lods
sahf
xor
inc
mov
xor
pop
fisubr
pusha
dec
inc
pop
sub
test
cld
mov
cmps
push
(bad)
fld
movs
std
cmp
std
nop
pop
ds
pop
outs
xor
leave
pop
(bad)
hlt
bound
fs
xchg
push
std
fsubr
xor
xchg
xchg
rol
jmp
test
dec
fmul
pop
imul
scas
xor
stos
and
push
jl
xor
add
scas
leave
xor
and
push
out
pop
std
fstp
nop
push
rcr
aad
xchg
ja
mov
pop
outs
or
test
(bad)
pop
(bad)
mov
xor
inc
pop
test
sub
xchg
push
sub
out
dec
ss
(bad)
call
ret
push
dec
call
test
jp
mov
sub
add
add
call
bound
(bad)
aad
sbb
inc
adc
sub
std
mov
iret
mov
(bad)
out
xchg
dec
or
mov
(bad)
add
bound
outs
rcr
lds
mov
lock
lds
pop
mov
into
xchg
enter
dec
inc
repz
mov
inc
jg
pop
test
sar
cwde
or
daa
(bad)
lea
fdecstp
aad
dec
pushf
adc
jmp
jecxz
sub
(bad)
out
mov
mov
into
in
into
into
test
clc
iret
data16
or
je
iret
jmp
xlat
sub
outs
jns
push
cli
inc
and
jo
sbb
xchg
mov
jae
aas
jo
mov
or
int
clc
(bad)
out
push
out
fstp
pop
loop
icebp
mov
xor
dec
jnp
mov
fmul
cs
push
sub
mov
test
ins
jl
enter
sbb
add
ins
out
nop
int3
stos
sub
fldenv
sbb
outs
in
jg
cwde
in
imul
outs
adc
jnp
jle
dec
and
pop
arpl
int
jns
jl
inc
(bad)
cmc
int
iret
sub
test
add
and
xor
data16
mov
xchg
stos
lods
call
cmps
arpl
mov
or
adc
push
mov
mov
mov
cmp
mov
mov
into
test
mov
jg
test
inc
shr
in
nop
outs
push
adc
sbb
dec
jae
sub
adc
or
std
loop
push
jo
pusha
mov
lods
cwde
cmp
icebp
ins
cmp
cli
ret
sub
lea
lods
(bad)
test
push
fcom
push
sbb
or
out
sub
add
fwait
test
mov
add
in
test
mov
not
jge
and
mov
inc
ret
cmp
ror
jecxz
xchg
ret
mov
jp
cmp
xchg
mov
sub
xchg
movs
jb
sbb
inc
jecxz
fs
xor
and
push
pop
jecxz
mov
in
fldenv
ja
pop
fstp
cli
sub
fdivr
sti
add
xor
dec
ret
lea
inc
push
les
pushf
daa
fcomp
inc
dec
dec
or
jae
sahf
cli
(bad)
jg
mov
popa
xchg
mov
int
iret
mov
jae
pop
cmp
jb
mov
xchg
cmp
and
jmp
into
mov
inc
adc
xor
dec
mov
in
loop
dec
out
adc
push
push
push
mov
sbb
cmps
mov
dec
dec
mov
mov
mov
stos
out
sub
pop
mov
xor
test
dec
mov
lods
je
(bad)
cmp
inc
jnp
gs
outs
or
or
js
mov
dec
(bad)
mov
ds
fsub
adc
icebp
mov
xchg
es
cmp
aam
inc
cmp
mov
out
outs
mov
mov
lods
inc
add
enter
sti
iret
cld
or
cwde
movs
mov
je
rcl
cmp
xor
mov
cmc
xchg
jmp
or
sbb
(bad)
xlat
outs
arpl
pop
xor
inc
das
cmps
icebp
in
(bad)
xor
aaa
mov
js
push
(bad)
aam
jmp
xor
shl
outs
ja
hlt
popa
gs
mov
push
lock
and
push
inc
dec
enter
xchg
ss
add
push
xor
cwde
int
or
repnz
dec
imul
and
movs
(bad)
jno
gs
sub
dec
mov
les
outs
retf
hlt
and
add
cmp
push
ds
jg
lds
xchg
addr16
call
gs
sub
pop
mov
or
mov
clc
call
loope
jns
xor
xor
sbb
shr
call
stc
jmp
cmp
addr16
jae
test
(bad)
sub
inc
rcl
and
fbstp
jl
fsubr
mov
(bad)
pushf
xor
xor
xchg
sub
or
mov
mov
xor
adc
push
(bad)
in
pop
jle
loopne
ds
fisttp
xor
push
inc
addr16
xlat
or
push
cmp
add
push
sbb
lods
fdivrp
ret
ror
push
push
cmp
jmp
lea
ror
int
rol
js
add
xchg
cmps
movs
mov
push
xchg
push
loope
iret
adc
inc
adc
dec
mov
out
cmps
add
retf
inc
mov
xchg
loopne
fisttp
jmp
into
stos
js
inc
nop
inc
push
xor
mov
fcom
movs
cmp
jmp
mov
mov
out
call
(bad)
cld
mov
arpl
mov
pusha
sbb
dec
rol
dec
jle
stc
mov
xor
add
bound
mov
sub
jle
dec
div
dec
sbb
out
daa
cdq
lods
scas
xor
std
ins
(bad)
(bad)
jno
je
inc
xor
out
ja
cmc
xor
xor
and
dec
mov
push
lock
mov
and
xor
mov
fsubr
stos
cmp
push
in
test
les
js
stc
(bad)
push
sbb
scas
adc
(bad)
inc
push
bound
push
inc
jl
add
mov
data16
(bad)
lahf
outs
je
shr
outs
push
cs
call
stos
ror
fnsave
jmp
jecxz
jge
mov
mov
dec
pop
adc
or
jb
fdiv
mov
add
mov
sbb
push
xor
sbb
xor
cli
retf
and
ss
cmps
scas
bound
lock
ret
inc
jmp
mov
jae
ret
sub
test
sti
mov
sysexit
ret
sub
jb
ins
xlat
lea
scas
outs
cmp
cs
push
mov
js
stos
adc
add
fucomip
xor
or
inc
push
ds
jle
iret
mov
out
jb
add
scas
adc
cmps
ss
mov
xor
inc
repz
mov
sahf
sbb
popa
das
or
lods
jbe
dec
push
cdq
mov
push
stos
xlat
pop
adc
imul
js
mov
movs
add
mov
pop
repz
test
cld
push
ror
test
mov
(bad)
push
stos
xor
call
inc
pushf
ds
adc
in
icebp
push
test
ins
cli
call
jge
cmp
pop
outs
push
mov
jmp
adc
jp
dec
fidivr
les
fisttp
jno
and
fldcw
add
call
mov
push
push
cdq
dec
addr16
stos
add
jle
mov
sbb
and
lds
ret
lahf
retf
pop
xchg
add
loopne
and
cmps
or
out
(bad)
xlat
xchg
ret
lods
xchg
in
aad
shr
xchg
(bad)
in
pop
fisub
xchg
pop
ins
(bad)
jmp
js
xchg
xchg
mov
adc
call
(bad)
retf
add
mov
xchg
push
rcl
sub
fldcw
and
pop
xor
dec
dec
je
or
dec
mov
cmp
xchg
leave
cmp
pop
inc
pop
into
jmp
fcomp
dec
xor
popa
cmp
test
ror
adc
push
add
xchg
cmp
sbb
mov
out
fcomp
and
mov
sub
dec
cmp
repz
ja
cmps
out
push
or
imul
rcr
push
or
cwde
add
mov
pop
imul
add
jl
mov
(bad)
sbb
lds
pushf
mov
jo
std
pop
mov
inc
inc
mov
popa
mov
pusha
sbb
mov
xchg
fimul
sahf
and
xor
push
shr
sbb
cli
in
and
test
mov
iret
stos
and
nop
xlat
or
nop
shl
in
sahf
loop
(bad)
mov
or
pop
jbe
pop
fs
inc
aad
fs
imul
int3
(bad)
imul
rcl
mov
mul
int
jp
ins
in
ret
(bad)
cs
adc
pop
xchg
xor
add
sar
nop
test
sahf
mov
mov
sbb
test
cmp
xor
outs
push
push
shl
mov
mov
rcr
xchg
sub
jb
in
lods
popa
mov
sti
popa
xchg
pop
test
push
push
pop
add
cmp
lock
inc
lods
pop
jle
shl
lock
fisub
stc
add
fbstp
push
fstp
jmp
pushf
dec
(bad)
lea
sbb
and
xchg
aad
inc
ret
fstp
(bad)
cmp
adc
repnz
push
sub
imul
cmps
and
ret
adc
sbb
mov
xor
xor
xor
aaa
sbb
mov
jns
or
mov
and
daa
cli
add
inc
jmp
popf
xor
aad
popa
mov
cmps
xchg
fdiv
int
ins
mov
fimul
in
retf
es
aad
xor
cs
pop
sub
lods
push
xor
push
push
xor
xchg
and
add
(bad)
xor
or
ja
or
aaa
adc
adc
lea
loopne
repnz
jnp
ficom
gs
icebp
stos
or
ret
inc
punpcklbw
hlt
ret
or
xchg
aas
push
sysexit
mov
jnp
sub
cs
lea
xor
std
fdiv
nop
popa
and
pusha
lods
vmovaps
xchg
xchg
xchg
pop
lods
jge
mov
pop
lea
imul
dec
das
push
out
xchg
adc
loope
inc
adc
cmc
mov
bound
sub
loope
sbb
shl
add
das
imul
cmp
add
add
fldcw
lds
adc
leave
imul
or
test
in
jmp
imul
adc
les
cmp
mov
add
sahf
jb
push
or
(bad)
movs
jno
xchg
call
add
test
les
lods
add
jmp
push
int3
xchg
jl
sub
dec
inc
cmp
inc
push
inc
cmp
lds
mov
sbb
add
outs
dec
js
cwde
sub
retf
popa
xchg
lahf
(bad)
jb
mov
jbe
push
fisub
scas
mov
js
inc
adc
mov
mov
jne
sbb
xlat
arpl
xchg
or
test
movs
pop
sbb
mov
sub
imul
mov
jle
and
dec
push
sub
or
pop
fld
scas
inc
jmp
pusha
sti
das
test
push
sub
dec
mov
xor
leave
mov
cmp
repz
push
les
pop
aad
pop
movs
aas
shl
aam
repnz
adc
leave
xor
sub
mov
jmp
mov
push
sbb
imul
and
inc
int
add
das
sbb
cmp
push
inc
jb
ret
mov
sub
icebp
inc
inc
in
or
sub
mov
std
inc
mov
cli
mov
push
in
adc
add
stc
scas
xchg
ret
ss
adc
data16
sbb
fwait
shl
jp
xchg
or
and
or
fisub
push
push
cmp
(bad)
addr16
dec
imul
cdq
loop
sahf
scas
mov
call
and
sbb
aaa
pop
mov
or
test
ror
or
add
push
inc
jno
loope
div
or
adc
out
jmp
cmp
jl
cmps
or
pop
out
or
rep
ror
sub
ins
xor
jmp
add
(bad)
dec
es
aam
fmul
or
inc
mov
xchg
rol
inc
push
jecxz
fnstenv
mov
inc
pop
ins
jecxz
inc
imul
and
inc
ss
and
rcl
xchg
mov
or
xor
or
xchg
adc
inc
sub
dec
lods
call
lahf
sar
mov
sbb
jne
movs
push
pop
fdivr
in
mov
push
loope
and
sbb
mov
shr
mov
jge
stc
adc
nop
(bad)
out
dec
inc
or
mov
ror
xchg
shl
mov
fsubr
inc
xor
xor
pop
sahf
mov
dec
adc
add
mov
jl
(bad)
call
stc
add
ins
shl
leave
pop
(bad)
out
mov
in
stos
stos
int
mov
je
push
out
pushf
and
sub
addr16
in
sbb
push
xlat
mov
adc
sbb
lock
push
push
push
mov
icebp
retf
nop
push
add
icebp
pop
or
add
stc
fidivr
out
push
in
inc
je
inc
scas
and
inc
lock
leave
cmps
stos
sbb
sub
popa
jne
cmc
dec
mov
in
add
xor
push
aaa
jle
pop
pop
stos
test
xor
mov
mov
fadd
or
push
fdiv
mov
mov
outs
inc
ds
cmp
loopne
into
xor
std
pop
pop
dec
mov
sahf
imul
push
nop
pushf
sbb
aad
pop
movs
neg
cmp
call
push
cmps
inc
(bad)
retf
dec
(bad)
das
pop
sub
sahf
imul
ficomp
nop
sbb
imul
mov
fld
mov
mov
outs
push
sbb
(bad)
sub
sti
stos
int
xchg
xchg
push
shl
adc
jmp
ja
in
stos
push
outs
xor
or
sbb
gs
cli
ret
adc
leave
nop
xchg
mov
push
fmul
clc
sbb
xor
pop
jmp
fbstp
sbb
jmp
xor
retf
sahf
xchg
aas
(bad)
in
jbe
jnp
mov
clc
out
sbb
or
nop
inc
xor
mov
sar
xchg
jno
push
pop
hlt
lods
das
call
shl
imul
(bad)
stc
ret
push
mov
into
call
clc
dec
sbb
jmp
dec
mov
jmp
dec
add
jmp
push
push
and
and
jno
inc
push
mov
push
fdiv
sub
xor
(bad)
std
cs
popf
mov
jbe
movs
imul
mov
cs
and
cmc
cdq
cmp
jle
sbb
sub
push
inc
lock
push
xchg
inc
ret
jge
inc
mov
push
out
fwait
repz
cmc
daa
xor
ja
js
cmp
mov
jmp
mov
jp
iret
adc
pop
push
push
int
cmp
sub
clc
dec
push
mov
mov
cmps
or
add
icebp
daa
call
cmp
dec
xchg
pop
mov
aaa
or
xchg
pop
sbb
sub
push
add
rcr
push
or
mov
xor
jecxz
push
fcom
cmc
hlt
test
xchg
repnz
sbb
mov
and
jns
hlt
ficom
shr
dec
lods
out
push
fwait
ds
jno
js
mov
pop
enter
sbb
fnstcw
fmul
mov
iret
in
jbe
jnp
mov
mov
adc
out
(bad)
dec
pop
repz
fisubr
pop
dec
jns
xchg
ja
mov
inc
gs
xchg
pop
adc
mov
xor
enter
add
jnp
xchg
call
call
mov
rol
add
(bad)
push
lds
arpl
mov
cmc
sahf
test
gs
int
shl
ror
push
xor
(bad)
push
mov
das
test
pop
rol
jmp
mov
ins
das
xchg
add
daa
dec
mov
push
xchg
loop
sub
mov
push
fstp
(bad)
mov
test
seta
mov
rcr
scas
fdiv
(bad)
xchg
popa
xchg
mov
or
add
sbb
idiv
push
out
and
test
jg
mov
sbb
cmp
cmp
fld
sub
lods
pop
pop
push
add
test
xchg
xchg
sbb
jge
retf
imul
sar
add
sbb
dec
mov
jnp
gs
pop
out
add
lea
jne
lods
mov
xlat
(bad)
jg
xor
mov
cmps
hlt
xchg
mov
push
adc
jl
fwait
pop
in
in
out
nop
cmp
ja
mov
in
mov
loopne
test
add
cdq
ds
jle
pop
ror
jle
jns
fiadd
test
cdq
xor
inc
int
jmp
sub
ucomiss
shl
(bad)
mov
inc
or
xchg
aad
xor
inc
or
pop
rcl
lods
sub
xlat
jecxz
movs
push
sub
dec
mov
lds
jl
and
dec
dec
push
mov
repnz
pop
leave
add
pushf
std
pop
mov
retf
ja
ss
push
xlat
sub
out
std
cmp
movs
or
xlat
pop
mov
xlat
lods
daa
pop
nop
sti
xor
in
jecxz
mov
in
or
add
sbb
and
mov
mov
push
addr16
repz
adc
clc
jns
and
mov
lea
add
cli
and
lds
sub
pushf
adc
and
ret
jmp
push
cdq
adc
scas
(bad)
mov
fimul
daa
xor
fwait
cmp
adc
push
int3
adc
test
loop
add
retf
retf
inc
stos
adc
xchg
mov
add
cmovl
push
loop
hlt
xchg
add
push
jmp
sar
inc
cmp
push
pusha
jns
jno
mov
mov
stos
pop
gs
fnsave
sahf
loop
(bad)
xor
cli
add
dec
imul
ja
jge
cmp
xchg
mov
ins
int
or
inc
and
and
mov
pop
cdq
ins
xchg
mov
mov
inc
les
das
push
data16
es
out
cmp
and
inc
mov
push
out
jne
cmp
(bad)
mov
test
clc
pop
inc
pop
or
fdiv
(bad)
push
loope
shl
cs
(bad)
lea
into
add
sbb
and
push
std
jl
mov
mov
xlat
push
(bad)
sbb
in
cdq
xlat
cwde
mov
push
jnp
inc
or
arpl
lahf
add
lods
inc
js
pop
and
in
jbe
call
nop
adc
jmp
sysenter
(bad)
stos
ds
mov
repz
ins
jecxz
pop
test
inc
xor
repnz
mov
shr
jno
cmp
loop
xor
pop
cmps
dec
push
ja
dec
test
mov
pop
loop
repnz
sub
dec
push
jb
imul
jecxz
adc
call
mov
pop
into
pop
retf
pop
xlat
mov
cli
stos
in
pop
xchg
call
call
(bad)
jns
in
popf
vpmacsdd
loope
push
pop
dec
inc
scas
pop
test
jb
jg
not
int
lds
cli
out
outs
in
dec
ret
mov
ins
pop
jge
lock
mov
or
ret
push
sbb
jecxz
jne
xor
mov
loopne
retf
mov
pop
mul
(bad)
ret
push
test
pusha
adc
xor
mov
cmp
addr16
sub
xchg
imul
xchg
lahf
xor
pop
mov
int3
in
xchg
mov
movs
jb
or
arpl
push
fldcw
es
cdq
cmp
ins
nop
scas
ins
cmp
mov
add
sub
xor
jg
mov
mov
sar
out
lods
into
aaa
(bad)
jecxz
xchg
dec
mov
jbe
call
cmps
jo
dec
push
sbb
shl
cmps
mov
(bad)
fxch
lods
or
mov
pop
mov
stos
or
enter
push
push
bound
jnp
and
popf
pop
adc
push
call
aad
bound
fsub
mov
inc
repz
iret
test
shr
pop
or
mov
jbe
push
mov
jg
pop
xchg
sti
into
lea
test
jae
movs
push
les
ficom
and
sbb
jnp
jp
push
loop
xchg
push
pushf
les
mov
jmp
xchg
xor
adc
push
out
jb
ins
mov
xor
sub
mov
pop
pop
out
xor
ins
dec
mov
mov
push
enter
adc
adc
mov
pop
nop
daa
push
add
adc
sub
xchg
jo
cmp
mov
fs
fstp
leave
ins
mov
pop
das
out
add
xchg
pushf
aam
adc
jbe
push
xchg
adc
mov
int
and
jae
repz
add
mov
cmp
pop
out
jo
(bad)
jmp
pop
addr16
fild
jle
and
in
mov
in
imul
out
cwde
test
or
inc
pop
dec
and
std
add
fsincos
inc
clflush
xchg
mov
jb
pop
int3
sbb
gs
lods
dec
sbb
xor
ja
mov
mov
cmc
mov
add
cli
mov
cmp
fsub
sub
fild
inc
xor
cs
lods
add
push
dec
pop
jmp
je
fwait
push
fiadd
and
xor
jb
adc
push
dec
out
mov
outs
mov
mov
adc
loope
and
fcomi
jnp
cmp
adc
sbb
int
repz
mov
test
pop
dec
pop
jns
add
adc
fcomp
adc
fisttp
mov
sahf
pop
cmp
add
or
pop
icebp
test
mov
mov
xchg
adc
test
cmp
add
int3
jecxz
outs
mov
pop
xor
pop
push
cli
mov
adc
shl
pop
xchg
mov
int3
stc
pushf
leave
fsub
push
fwait
cmp
xor
mov
xchg
lods
sbb
bound
xor
vpunpcklbw
lahf
movs
pop
and
stos
xor
mov
adc
or
push
ret
fcomp
jmp
test
mov
xchg
push
cmp
push
jmp
mov
enter
lock
lds
shl
mov
fimul
cmp
push
sub
sub
mov
bound
push
stos
cdq
ss
pop
ret
sbb
inc
stc
sbb
lods
stc
mov
lahf
jle
out
lahf
xor
push
inc
cs
and
inc
loop
jl
(bad)
clc
lods
out
sub
push
jo
push
push
cmp
and
mov
idiv
jp
retf
mov
and
retf
loop
gs
mov
jae
inc
call
out
xchg
and
add
mov
ret
outs
stos
rcr
popf
js
jge
add
push
cmp
test
xor
sbb
fst
mov
sub
cmps
xchg
enter
js
or
test
or
faddp
inc
xor
dec
frstpm(287
sub
xchg
dec
scas
bound
movs
mov
fiadd
xlat
shl
jecxz
cmps
inc
mov
repnz
jo
xchg
ss
and
mov
push
ins
in
aad
lea
add
dec
xor
ss
fdivp
imul
repz
jle
ins
sub
add
or
jns
lea
lahf
movs
add
mov
or
dec
repnz
sar
pop
bound
mov
push
jb
sti
add
aaa
pop
pop
shl
mov
arpl
dec
ficomp
xchg
push
repz
mov
mov
xor
mov
sbb
scas
jmp
mov
test
enter
xchg
test
and
xor
ins
or
in
icebp
int3
pop
add
enter
dec
movs
ins
cmp
ret
lea
or
jae
mov
pusha
es
add
mov
lods
scas
adc
xor
inc
in
lock
fiadd
daa
inc
lds
xor
cmp
and
ret
fld
xor
pop
sub
or
stc
fcmovnu
and
hlt
ja
mov
or
jne
mov
sub
sbb
inc
std
hlt
cmp
out
ror
cmp
call
push
loope
addr16
add
test
add
imul
xchg
dec
in
jo
pusha
pop
mov
mov
and
mov
sbb
or
cmps
dec
xor
sub
add
ret
push
and
jmp
ins
cmp
jns
pop
add
ror
adc
sahf
repnz
xchg
and
neg
mov
mov
pop
cwde
mov
xchg
jae
sar
xchg
pop
push
daa
aas
pop
xchg
dec
out
cmp
pusha
mov
lahf
mov
inc
or
or
xor
cwde
enter
imul
jmp
imul
and
test
push
sbb
xchg
popa
retf
and
movs
ror
mov
pop
inc
push
or
mov
lds
and
sbb
push
mov
cmp
add
(bad)
push
lds
sbb
cmps
test
and
xlat
adc
jbe
jno
and
addr16
push
inc
dec
aam
ins
aas
jno
jb
mov
mov
lea
imul
push
(bad)
dec
test
push
push
fdivrp
leave
loope
int3
add
pop
fisubr
and
xchg
sbb
(bad)
cld
jnp
inc
pop
in
out
dec
inc
dec
test
retf
fild
arpl
or
and
cld
or
outs
out
dec
dec
loope
cs
mov
ror
test
inc
ins
pop
(bad)
xchg
arpl
sbb
and
and
mov
lds
imul
loopne
inc
gs
sub
pop
pop
test
(bad)
test
call
xchg
leavew
adc
mov
cmc
and
enter
out
xchg
popf
cs
popa
mov
mov
sub
xchg
stos
adc
mov
sti
imul
dec
xchg
retf
adc
sub
pop
dec
iret
mov
fwait
sbb
pop
inc
loope
adc
add
jae
stos
popa
dec
movs
pusha
repz
jl
(bad)
fstp
out
dec
cmc
movs
or
push
pop
(bad)
ds
lock
cmc
(bad)
mov
test
mov
mov
mov
pop
retf
inc
adc
inc
mov
jno
xchg
cli
mov
mov
push
retf
(bad)
shl
or
jns
mov
mov
mov
adc
aam
scas
inc
mov
loope
int
xchg
jmp
je
lea
dec
fdivr
pop
aam
push
inc
fadd
jbe
mov
jb
shl
add
inc
mov
xchg
mov
xchg
call
xchg
push
mov
out
ret
pop
sbb
cwde
mov
xor
aam
xor
je
jo
and
push
lock
test
fld
xor
lds
jnp
xor
int
(bad)
mov
mov
sahf
sbb
xor
aam
add
adc
aad
sub
mov
and
fnstenv
dec
xchg
cmp
ins
(bad)
(bad)
sbb
sbb
ds
(bad)
mov
cdq
sbb
and
idiv
xchg
dec
repz
xlat
sub
(bad)
jne
cmp
enter
dec
inc
jb
daa
cmc
rcl
and
sar
aam
or
xchg
add
sar
out
add
mov
inc
sub
jmp
sar
fs
ret
enter
mov
dec
mov
push
cmc
xchg
fwait
or
jmp
add
sbb
push
jmp
test
(bad)
pop
sbb
mov
xchg
pop
adc
mov
mov
nop
nop
pop
lock
jecxz
sub
pop
idiv
cld
jg
aas
das
int3
push
aaa
jo
lods
xchg
cmps
or
retf
loop
jecxz
pushf
fadd
icebp
add
mov
int3
jbe
mov
ret
dec
ins
push
stc
xlat
mov
inc
and
loop
sbb
adc
xchg
mov
jns
out
xchg
out
(bad)
adc
loop
daa
cs
pop
jp
stc
push
or
pop
popf
inc
outs
xchg
xchg
push
in
pop
test
nop
shr
fcmovne
sub
cmps
pop
xor
dec
or
rol
jb
mov
in
pop
pop
fwait
sbb
jge
xchg
enter
clc
ja
rcr
cld
loopne
adc
clc
ror
out
(bad)
ror
icebp
lock
jg
(bad)
push
test
adc
mov
push
inc
xchg
adc
ficom
fild
in
leave
mov
mov
arpl
mov
out
pop
fstp
icebp
pop
lods
int3
sbb
pop
inc
xchg
ins
xchg
pop
mov
cmp
pop
push
mov
mov
mov
fldcw
and
jb
dec
sub
pusha
xor
stos
mov
js
mov
das
and
test
or
cmp
fnstsw
cmp
lock
test
pop
pop
retf
mov
inc
leave
shr
adc
mov
cwde
add
push
imul
pop
mov
cmps
fisub
das
ds
mov
pop
and
mov
repz
popf
loope
cmp
or
(bad)
sbb
mov
rol
adc
push
imul
neg
and
retf
sub
stc
and
pop
fidivr
fnstenv
lods
out
(bad)
or
fmul
out
es
popf
shl
out
push
sbb
je
mov
mov
rcl
cs
(bad)
loope
adc
inc
ss
(bad)
ss
cmp
fwait
xlat
push
out
fistp
aad
cmps
loopne
out
ins
adc
lock
sbb
repnz
push
sub
(bad)
aas
pop
cwde
dec
dec
ror
jno
jmp
and
push
jmp
les
ds
lds
bound
jnp
cmps
cmps
gs
sahf
mov
dec
xchg
aad
cwde
cmp
push
mov
xor
repnz
xor
in
pusha
pusha
fcom
add
stc
cli
orps
mov
push
lods
push
mov
in
mov
jmp
inc
and
jne
xchg
adc
mov
push
repnz
adc
lods
in
fdivr
call
leave
mov
mov
retf
mov
stc
cmp
xchg
mov
inc
hlt
mov
retf
jp
sbb
xchg
scas
or
addr16
shl
(bad)
xor
sti
in
outs
pop
es
in
push
cs
push
out
and
and
mov
sub
mov
xchg
mov
xor
fnsetpm(287
pop
and
div
icebp
loop
stc
leave
jg
sub
jne
push
sti
mov
mov
repz
icebp
daa
inc
daa
jae
adc
stos
or
ror
adc
mov
scas
pop
iret
push
ins
jg
pushf
sub
add
inc
xchg
adc
push
mov
jecxz
test
repnz
sub
mov
scas
xor
fdivr
xchg
aaa
(bad)
in
cs
fimul
imul
mov
jne
into
mov
fidiv
inc
mov
add
jo
dec
loop
jo
cmp
ret
outs
or
cmps
call
aas
retf
xlat
(bad)
xor
stos
jg
cmc
jle
pop
sbb
adc
push
sbb
push
std
test
jmp
je
iret
mov
and
sub
imul
sub
cmp
fstp
das
push
ret
mov
jle
mov
ret
not
jns
jmp
add
jg
push
jg
ret
mov
lock
jmp
mov
(bad)
out
ins
fsubr
into
xchg
sub
cmp
mov
out
loopne
ins
add
mov
pushf
push
sbb
push
jns
mov
rcr
cmp
jg
ins
imul
fwait
dec
jl
ror
out
cmp
lods
pop
fsub
test
das
enter
retf
outs
xor
jo
adc
ds
sub
fs
dec
xchg
lods
adc
loop
data16
mov
dec
mov
test
out
mov
pop
push
shr
push
int3
aaa
sub
bound
ins
orps
mov
(bad)
mov
scas
push
test
xor
dec
mov
xlat
repnz
pop
dec
ror
pop
not
lahf
fisub
push
inc
push
cli
je
pop
lds
mov
xchg
add
test
mov
add
xor
out
popf
stos
jno
(bad)
sti
aad
popa
lock
cs
xor
mov
add
push
mov
gs
sub
cmps
std
out
stc
fsub
ins
pop
and
xchg
mov
push
imul
mov
mov
inc
mov
sbb
iret
cmc
into
inc
pop
inc
call
mov
and
clc
mov
mov
sbb
loopne
push
adc
adc
xchg
push
movs
imul
xchg
das
repnz
push
pop
dec
mov
dec
xchg
adc
(bad)
sahf
pop
jae
cmc
leave
ret
hlt
and
idiv
shr
sub
hlt
cwde
pusha
mov
aaa
daa
jmp
and
mov
mov
sar
mov
(bad)
js
pop
(bad)
sti
test
fxch
push
pop
out
jbe
sahf
hlt
std
and
add
jnp
enter
(bad)
jge
push
push
and
cmp
hlt
fbld
add
je
add
in
mov
pop
pop
xor
pop
adc
je
sbb
shl
cmp
and
jmp
shr
push
jo
popf
sbb
push
sub
sbb
cmps
pop
aaa
out
outs
enter
push
jg
pop
sbb
xchg
scas
adc
stos
cdq
je
cmps
gs
daa
and
cs
inc
not
ret
dec
ja
cmp
call
fld
jle
repz
loop
leave
test
dec
mov
jb
dec
iret
jne
xor
push
enter
add
fmul
pop
and
movs
ret
out
sub
xchg
mov
cli
jecxz
popw
xor
sub
and
xchg
pop
aaa
out
mov
cli
(bad)
mov
lea
dec
setb
cmp
adc
xor
xor
adc
mov
scas
or
addr16
mov
adc
sbb
xlat
pop
int
ss
jle
push
mov
outs
sbb
repz
cld
fcomp
dec
add
mov
inc
repnz
xchg
push
fcom
push
and
into
int
jmp
adc
mov
pmulhuw
fimul
sti
jae
jnp
jne
fimul
je
sub
and
or
ins
hlt
aaa
push
cmp
hlt
mov
sbb
lea
hlt
cmp
jg
arpl
aam
ds
out
out
not
add
stos
xor
inc
ret
mov
sub
stos
dec
nop
scas
mov
es
pop
out
sub
in
fidiv
(bad)
sbb
aaa
scas
cmp
adc
jmp
dec
aam
fdivr
sub
fbld
ins
js
out
ins
mov
cmp
mov
add
in
pop
inc
out
out
outs
jb
push
or
add
stos
dec
push
push
cmc
jl
out
jmp
adc
sub
mov
call
inc
daa
mov
in
test
call
sbb
and
inc
shr
stc
fnstenvw
fcomp
or
call
(bad)
cmp
jp
mov
adc
aad
cmps
les
ins
call
and
jmp
sbb
in
jmp
inc
xchg
mov
adc
cmp
int3
stos
sbb
cmps
push
(bad)
inc
mov
cmc
inc
add
mov
or
jp
scas
jmp
inc
aad
pop
mov
cs
gs
fdivr
movs
aad
mov
pop
dec
mov
ins
pop
and
or
pushf
jae
test
outs
lods
adc
push
movs
shr
mov
xor
jne
dec
dec
mov
jae
sti
in
mov
rol
sbb
inc
retf
xchg
jns
(bad)
sbb
mov
popf
sbb
mov
ficomp
fstp
imul
cmps
xor
mov
fnstcw
cdq
jae
imul
ret
jecxz
ins
mov
retf
out
js
es
jmp
lea
js
dec
adc
cmp
xchg
mov
pop
int3
xchg
xor
mov
(bad)
daa
jmp
fistp
inc
or
icebp
aaa
loop
ss
pushf
movq
mov
pop
add
not
mov
inc
xchg
cwde
xchg
push
push
hlt
pop
in
pop
sar
out
mov
inc
dec
test
icebp
sub
daa
dec
push
mov
(bad)
aad
retf
lds
push
adc
xchg
cmp
je
out
or
in
(bad)
js
push
push
stos
fisttp
ins
jb
fbld
test
out
mov
(bad)
pop
loop
sub
iret
hlt
add
movs
jmp
loopne
sahf
ror
mov
adc
xor
mov
mov
and
xor
jne
mov
dec
cmp
inc
adc
inc
fidiv
pop
push
cdq
sbb
mov
sbb
cld
test
(bad)
pop
sub
push
sbb
jecxz
pop
popf
mov
mov
dec
call
xchg
pop
pop
pop
loope
xchg
out
or
and
mov
in
mov
sbb
mov
(bad)
ret
stos
ror
cmp
outs
adc
cmp
mov
(bad)
or
jg
fs
dec
mov
clc
xor
xor
dec
xor
add
loopne
mov
adc
and
sub
cli
test
shl
repnz
sub
out
xor
pop
mov
ins
enter
es
icebp
jno
pop
jmp
data16
sub
xchg
fmul
pop
inc
mov
test
xchg
mov
sti
test
inc
les
pop
mov
pop
int
cmp
jns
pop
popa
or
cmp
stos
fmul
pop
imul
mov
pop
pop
jp
das
xchg
xchg
sub
jecxz
repz
push
ins
retf
cdq
test
sbb
dec
and
sbb
and
jp
fcomp
mov
inc
daa
scas
sub
lods
pand
mov
or
inc
cmc
popf
(bad)
cmc
es
fmulp
cmp
out
and
nop
sbb
(bad)
dec
out
mov
test
out
imul
pop
mov
ds
aaa
push
xchg
loope
push
mov
mov
mov
hlt
add
xchg
cmps
test
mov
add
and
adc
dec
xor
imul
enter
cmp
pop
in
(bad)
xor
sbb
adc
cld
push
xor
fs
repnz
out
hlt
daa
push
pop
(bad)
outs
mov
pop
add
inc
mov
sub
lahf
mov
dec
pop
and
stc
pop
cmp
push
iret
mov
mov
push
lds
push
cmps
jmp
stos
popa
arpl
data16
jle
imul
jecxz
psadbw
retf
shl
scas
mov
or
in
outs
sub
and
shl
mov
mov
mov
shr
add
rol
pusha
enter
frstor
xchg
mov
repnz
das
jae
mov
sub
xchg
pop
pop
mov
mov
mov
sub
in
xor
or
xchg
jno
mov
enter
sbb
xchg
mov
jbe
call
push
cmp
sub
or
push
div
out
ror
(bad)
in
mov
out
stc
imul
sbb
(bad)
adc
push
cmc
inc
cmp
div
cmp
and
xchg
push
out
mov
pop
sub
enter
scas
ret
iret
xadd
jmp
mov
call
mov
mov
movs
test
arpl
std
(bad)
rol
xchg
adc
loop
test
pop
or
pop
mov
sub
das
dec
add
leave
push
sbb
inc
sti
icebp
push
ret
dec
out
shl
nop
lahf
into
add
aad
inc
ins
imul
aad
sbb
test
adc
movs
aas
dec
jl
push
dec
int
dec
fsub
cs
lock
add
cli
push
sbb
jp
mov
int
imul
and
add
mov
popf
xor
dec
jae
mov
inc
retf
clc
mov
repnz
(bad)
rcr
stos
pop
stos
fldenv
loopne
clc
stos
ds
cwde
(bad)
aad
push
dec
into
in
stos
nop
and
retf
fisub
shl
jmp
test
dec
das
xlat
js
sub
icebp
pop
mov
add
sbb
pushf
out
push
adc
(bad)
icebp
xor
ja
pop
cmp
or
rcl
fs
out
inc
inc
adc
adc
fisttp
mov
push
je
inc
inc
or
jae
xchg
sbb
sub
shl
dec
xchg
pop
push
push
je
sub
dec
xor
fs
loopne
jmp
adc
cli
or
dec
cmp
sub
in
cld
stos
lods
push
repz
cmp
test
movs
sub
inc
mov
cmp
pop
mov
sahf
mov
dec
push
addr16
xchg
(bad)
movs
cmp
aas
repnz
imul
push
pop
(bad)
dec
cmp
push
jns
retf
idiv
clc
inc
sahf
dec
scas
pushw
mov
inc
cwde
inc
cmp
pusha
jmp
cmp
test
hlt
test
cmp
jae
inc
inc
in
adc
xchg
loop
jl
out
adc
adc
xor
mov
mov
adc
jecxz
fwait
sti
mov
mov
repnz
push
sbb
jge
sbb
clc
jns
fistp
call
adc
(bad)
dec
iret
sbb
iret
sub
xchg
aam
mov
or
xchg
in
mov
push
std
lds
popf
mov
int
jb
pop
or
stos
punpckhwd
nop
adc
sub
pop
fnstsw
jle
push
sbb
stos
out
adc
mul
sbb
jmp
cmp
mov
fwait
in
loopne
mov
push
mov
pop
cmp
test
outs
aaa
popa
movs
inc
test
mov
pop
pop
jo
fcomip
adc
fisttp
(bad)
cmp
fdiv
cli
mov
addr16
jmp
mov
cmp
repnz
xchg
cld
sub
and
xchg
retf
test
fxsave
retf
or
jne
in
xchg
and
jbe
inc
sub
lea
add
sub
mov
call
xchg
hlt
ficom
jl
mov
das
repz
xlat
data16
retf
xor
(bad)
pop
jns
es
push
fistp
mov
mov
mov
dec
mov
pop
popf
mov
pusha
push
shl
jle
ja
fxch
icebp
dec
jmp
jge
inc
jnp
popf
dec
xchg
sub
les
push
sbb
in
cmp
mov
addr16
movs
gs
shl
xchg
mov
pop
mov
inc
mov
push
xchg
hlt
inc
mov
hlt
cdq
xchg
jo
cmp
jnp
clc
loope
xor
ja
sub
sub
(bad)
call
in
fnsave
sbb
fbld
xor
push
das
test
(bad)
les
loope
and
and
adc
and
ja
inc
fisubr
(bad)
(bad)
stc
mov
cwde
xchg
and
xor
jnp
mov
mov
push
sar
arpl
js
add
ror
mov
das
pop
lock
in
fnstenv
sti
cmps
sub
hlt
pop
in
jl
mov
loop
loopne
test
or
lods
push
xlat
lahf
gs
and
pop
lods
xor
cmps
aad
les
and
je
push
movs
inc
mov
aas
jo
xor
xchg
int
mov
cmc
out
cmp
inc
fucomp
sub
fwait
jo
test
aas
ins
out
iret
xchg
jecxz
cmp
xchg
adc
loop
je
in
adc
ds
pop
xchg
mov
ins
pop
stos
add
adc
push
(bad)
movs
(bad)
push
xor
int
inc
ins
push
dec
mov
dec
mov
sbb
pop
bound
and
cwde
mov
dec
jecxz
mov
ret
cld
jnp
retf
fucomip
jl
inc
dec
aam
add
mov
sar
retf
dec
aaa
(bad)
and
push
fisubr
jle
add
cld
stc
sub
rol
fstp
cli
dec
jecxz
jne
retf
pop
lahf
cld
xchg
das
pop
sub
ret
cmp
retf
cmps
(bad)
ins
ja
mov
pop
shr
mov
(bad)
scas
ror
cli
fcomp
pop
cmp
in
inc
xchg
and
fst
cdq
sbb
jge
xor
scas
mov
mov
mov
mov
jb
mov
mov
xchg
mov
inc
inc
mov
in
lea
xor
jns
lock
lock
outs
(bad)
loope
jmp
cmps
icebp
js
addr16
push
xor
dec
dec
and
int
and
aaa
jnp
mov
mov
pop
cmp
mov
mov
in
cli
jmp
push
and
test
lods
in
mov
jl
adc
call
(bad)
cmp
mov
aad
xlat
jge
in
les
sbb
int
push
fidiv
call
mov
sub
mov
js
mul
sub
push
cwde
xchg
out
(bad)
xchg
and
shr
fidivr
in
std
aaa
fcmovnbe
or
pop
(bad)
pop
cmp
add
aad
hlt
addr16
rcr
outs
ja
pop
outs
jle
mov
cdq
std
mov
mov
inc
adc
test
adc
ins
mov
pusha
movs
out
push
popa
aaa
ds
icebp
loop
call
lods
inc
cmp
push
and
mov
adc
loope
popa
xor
add
loope
sbb
xor
push
test
push
ret
or
mov
aam
or
inc
scas
push
aad
cmp
out
mov
mov
add
xchg
dec
sub
je
inc
test
leave
or
adc
cs
and
xor
ds
mov
adc
gs
push
inc
sbb
and
(bad)
mov
xor
loop
mov
inc
pop
pushf
cmp
mov
mov
or
shl
jno
cmp
or
in
clc
clc
aaa
jbe
cmps
bound
or
mov
fwait
or
xor
push
int3
shr
cmp
addr16
nop
inc
dec
push
ret
cwde
inc
fidivr
mov
aam
jno
test
ss
clc
or
in
xchg
mov
test
jmp
aaa
cli
mov
pop
(bad)
mov
adc
add
and
xor
xchg
add
inc
pop
cmp
mov
dec
pop
test
cmps
xor
inc
pusha
push
(bad)
jle
arpl
jno
and
fld
out
mov
add
jg
fsubr
addr16
std
jns
push
call
les
sahf
inc
xchg
mov
and
push
mov
mov
cdq
lock
retf
loopne
test
xchg
in
mov
mov
add
sbb
xor
dec
jne
xlat
outs
je
dec
sub
xor
adc
inc
mov
push
or
dec
fcomp
pop
cwde
retf
adc
jnp
imul
call
loope
ret
jne
nop
aam
dec
movzx
enter
fs
mov
pop
hlt
rcr
cwde
jbe
push
add
cmp
clc
push
repnz
xchg
rcr
adc
or
xchg
adc
les
fld
push
sti
mov
fdivp
pop
jb
dec
jne
xor
lds
push
test
std
mov
movs
xchg
xor
scas
or
cmc
cmp
loopne
sbb
xor
dec
repz
jns
(bad)
int3
ss
scas
mov
xrelease
add
leave
inc
clc
scas
ja
(bad)
pop
mov
lea
adc
js
jnp
aam
btr
cwde
fst
mov
pop
pop
dec
add
pushf
and
mov
sub
add
fistp
int
mov
mov
mov
xchg
pop
jecxz
mov
cmp
dec
out
pop
inc
ror
mov
jl
rcl
mov
jl
sbb
add
cmp
xchg
pushf
jl
cli
mov
mov
and
repnz
jg
into
nop
and
dec
outs
jmp
sbb
mov
mov
inc
std
xchg
leave
data16
out
dec
ss
mov
adc
sahf
inc
mov
bound
movs
shr
cmc
mov
pop
div
mov
loope
retf
sbb
pop
push
pop
mov
sbb
gs
xchg
arpl
gs
pop
out
mov
sahf
inc
inc
sub
xor
push
leave
cmp
or
dec
add
leave
pop
ror
push
sbb
in
xor
jl
inc
imul
cmp
sub
xlat
mov
jns
jecxz
sbb
in
cmp
in
fs
je
pop
jmp
fldl2t
movs
int
xchg
fnstcw
sub
lds
push
inc
loope
adc
mov
sub
jmp
and
enter
repz
repnz
dec
ret
shl
jle
gs
xchg
cli
pushf
mov
sub
popa
jb
fwait
pop
inc
pop
fsubr
jecxz
cmp
dec
mov
mov
xchg
adc
fcom
xor
jb
aaa
fadd
(bad)
ss
xor
xchg
pushf
xor
xor
mov
and
adc
ficomp
mov
add
inc
into
mov
lock
cmp
sub
int
rol
or
fsubrp
in
clc
fdivr
jo
adc
stos
adc
and
and
mov
xchg
mov
and
or
mov
les
sbb
(bad)
out
xchg
xchg
retf
aaa
cmp
inc
xor
nop
stos
stc
clc
inc
dec
leave
clc
fiadd
sub
fld
xchg
fucomi
(bad)
mov
out
or
mov
lahf
jmp
leave
push
xor
pop
ds
cmp
and
and
loopne
push
test
popf
jecxz
add
xchg
mov
js
or
dec
pop
fst
inc
leave
or
sub
fst
enter
push
or
sbb
pop
cmps
mov
mov
adc
test
add
pop
aad
xchg
or
in
inc
(bad)
cli
movs
outs
mov
sbb
inc
movs
fs
xchg
cmp
stos
std
dec
in
mov
jns
mov
daa
pop
ja
cmp
cmps
into
add
repz
xor
test
(bad)
jg
add
lods
sub
iret
inc
mov
jecxz
xor
ret
dec
xor
rol
lods
add
clc
sbb
ss
sub
test
sbb
inc
popf
xor
jnp
stc
sar
cmp
and
outs
sti
jmp
popf
lods
scas
js
shl
sub
sub
and
hlt
push
ds
fst
lock
push
mov
add
sar
ficomp
pop
mov
sub
shr
and
ins
sub
xor
dec
sar
pop
fcmovnb
(bad)
(bad)
push
pop
test
inc
int3
cmp
popa
and
cmps
mov
loope
call
bound
addr16
pop
sub
jo
aad
pop
popf
out
(bad)
pop
aad
or
mov
inc
repnz
cmps
pushf
sbb
in
dec
and
stos
stos
add
inc
push
in
xlat
jns
push
push
xchg
or
mov
in
clc
xor
imul
mov
cs
scas
inc
int3
ja
xchg
add
loop
sub
mov
aas
push
add
sub
dec
into
mov
dec
out
mov
jge
mov
cs
push
push
push
loop
popa
jne
icebp
dec
mov
ins
ret
cmp
gs
push
repnz
js
cmp
int
sbb
ins
add
sub
sbb
and
push
ins
mov
cld
cmp
pop
xor
inc
inc
push
inc
loopne
jb
cld
fs
mov
ret
out
gs
sub
jge
das
call
adc
(bad)
or
push
enter
test
mov
outs
aaa
arpl
repz
jg
sub
pop
and
xor
ja
xor
test
and
aaa
jl
test
(bad)
sub
nop
mov
dec
jge
shr
xlat
dec
fwait
pop
stos
and
and
inc
and
fs
add
(bad)
(bad)
sub
lods
mov
mov
adc
push
mov
dec
add
ja
in
mov
or
(bad)
cmp
addr16
enter
fnstsw
pop
mov
neg
xor
adc
sub
push
pop
inc
add
and
dec
dec
inc
pop
cmp
fimul
mov
mov
in
popf
retf
jnp
fstp
fdivrp
mov
cmp
ins
int
dec
popa
adc
lods
mov
test
push
cs
cwde
cmp
sbb
ins
sti
or
repnz
or
outs
leave
fbstp
pop
cmps
mov
fwait
outs
out
in
pop
fisttp
fwait
push
pop
mov
mov
stc
sti
mov
enter
popf
test
call
cmp
daa
xlat
cld
or
pop
in
loope
ins
add
cld
sti
xor
mov
jmp
fisttp
xor
or
add
xchg
mov
dec
mov
scas
outs
pop
jne
push
pop
inc
fidiv
mov
xchg
aad
aam
sbb
add
cli
fwait
cmp
add
push
inc
add
retf
adc
xchg
sub
xchg
lea
pop
jns
dec
xchg
div
leave
pop
dec
popf
pop
cli
cli
inc
cmp
mov
jne
lods
xor
lods
sar
or
test
mov
daa
pop
shl
lea
cwde
adc
std
cmp
icebp
mov
jbe
push
fdivr
out
push
repz
stc
pusha
xor
add
push
jmp
call
xchg
xlat
imul
(bad)
mov
xor
push
ins
push
mov
sub
mov
xor
sub
or
push
sub
pop
add
call
ficom
mov
pop
cmp
repnz
iret
pop
leave
mov
mov
mov
icebp
lods
(bad)
sub
ds
push
cmp
push
or
pop
mov
adc
push
test
xchg
daa
pushf
clc
or
punpcklwd
xor
je
adc
sahf
mov
sbb
inc
cmp
or
adc
pop
fistp
outs
jp
lods
repnz
inc
in
arpl
pop
les
hlt
or
scas
push
into
jge
dec
pop
inc
dec
mov
mov
dec
into
fdivrp
jmp
gs
jmp
or
jle
dec
dec
push
repnz
mov
xor
aam
dec
ins
jg
sbb
mov
jmp
inc
call
retf
and
cmps
cmps
call
push
pop
loop
xor
repz
aad
repz
test
rcl
pop
and
popa
xlat
add
mov
les
fsubr
push
add
stc
aas
dec
or
cmp
push
out
mov
dec
xchg
into
(bad)
cmp
mov
cld
xor
dec
les
cmps
mov
pop
dec
ins
xor
test
mov
xor
lds
xchg
jle
out
lods
out
dec
out
cmp
mov
stos
adc
je
inc
fild
jbe
cwde
test
and
jo
retf
lahf
clc
xchg
adc
xor
xor
dec
fcmovnu
jge
mov
popf
in
pop
mov
mov
mov
jbe
mov
sub
mov
aas
dec
fisubr
adc
jle
fisubr
pop
sub
sub
adc
or
xor
cwde
pusha
lea
retf
inc
cmp
cwde
jge
pop
fnsave
(bad)
repz
mov
mov
or
retf
push
aam
adc
shr
inc
adc
cmp
fxch
daa
ret
adc
push
xchg
mov
mov
test
in
lock
adc
push
add
jg
not
int3
nop
mov
movs
cld
jp
int
push
xor
or
xchg
inc
sub
fwait
jge
fs
das
xor
or
inc
jne
imul
leave
jbe
cmps
pushf
movs
mov
stos
and
inc
mov
(bad)
xor
xor
pop
xor
test
lahf
push
js
sahf
ror
cmp
(bad)
mov
rcl
jne
aas
cmp
mov
ss
dec
cmp
xor
dec
mov
test
xchg
loope
jne
int3
cli
ret
sbb
sbb
sub
stc
movs
mov
add
cli
test
xchg
lock
(bad)
sahf
loop
xor
xchg
lds
jmp
rcl
rcl
push
lea
inc
sbb
repz
xor
leave
adc
push
sbb
dec
push
add
ja
pop
and
movs
push
add
sub
js
dec
data16
cmp
popa
adc
cmp
std
dec
inc
push
stos
cmps
xor
mov
sahf
clc
in
out
xchg
mov
or
in
jbe
je
cmp
mov
ret
rol
shr
push
mov
jae
hlt
dec
xchg
int
jp
test
cmp
sbb
lahf
push
lods
(bad)
scas
xor
pop
cmp
gs
push
mov
sub
(bad)
leave
inc
xlat
mov
mov
(bad)
repnz
enter
sahf
xor
push
jmp
push
mov
xchg
std
pushf
bound
repnz
mov
cdq
pop
js
mov
int3
cdq
aas
int3
rol
xlat
ficom
adc
pop
popf
jne
jmp
inc
jno
movs
pop
js
ins
out
mov
test
xchg
or
pushf
lahf
xchg
repnz
iret
cmps
pop
cwde
adc
mov
add
mov
add
push
rol
mov
rol
pop
xor
mov
(bad)
and
mov
and
out
jae
mul
adc
jp
lahf
lea
fucomip
data16
xchg
or
fwait
movs
not
retf
fldenv
scas
inc
fcom
dec
push
add
nop
cli
adc
leave
adc
inc
stos
imul
dec
pop
cmp
mov
xchg
sub
(bad)
cmp
inc
ffreep
mov
test
push
mov
sar
out
mov
jle
add
sbb
jmp
mov
mov
std
retf
push
fwait
cmp
dec
mov
and
inc
int3
repnz
xor
test
adc
mov
pop
rcr
add
sub
mov
jmp
dec
ret
push
mov
int3
ds
adc
popa
mov
clc
in
gs
rcl
xchg
imul
(bad)
dec
pop
lea
outs
dec
pop
dec
aad
in
popa
mov
pushf
in
add
leave
sbb
or
mov
pop
pop
jns
(bad)
mov
pop
inc
mov
adc
jecxz
add
fisub
sbb
xchg
pop
jge
inc
sub
pop
retf
aad
jp
push
mov
addr16
sbb
or
add
sub
gs
dec
xchg
push
cwde
cli
pushf
es
mov
shr
sub
sub
push
dec
push
xchg
sub
or
cmp
inc
mov
bound
mov
jmp
dec
enter
sar
push
popf
jo
or
lds
mov
in
lods
sti
pop
ret
sbb
pop
nop
mov
cmp
ins
in
imul
test
lods
neg
pop
mov
jns
dec
sub
pop
pop
loop
push
das
add
stos
fild
cld
enter
push
lds
mov
int
sbb
addr16
adc
or
nop
retf
scas
push
mov
das
xor
dec
pop
icebp
pop
ret
lock
add
mov
inc
jg
in
xor
push
and
cmps
dec
aam
scas
pop
pushf
test
aad
or
sub
and
shl
inc
sub
bound
mov
fist
mov
inc
xchg
retf
sub
lds
movs
add
push
pushf
mov
inc
(bad)
jmp
popf
mov
or
std
cmps
lahf
int
push
jge
xlat
cmc
je
add
and
outs
sub
out
push
jecxz
das
sub
jne
in
jge
ror
fild
dec
dec
je
push
rol
xchg
xrelease
xor
sar
(bad)
addr16
pop
mov
add
sbb
or
dec
sub
adc
stc
in
mov
add
movs
mov
jmp
push
jl
test
cwde
cmps
aaa
cmp
mov
fnsave
stos
scas
pop
pop
cld
ins
stos
jg
adc
cmp
xchg
sub
jle
push
dec
pop
dec
mov
stos
fisttp
test
ret
ins
mov
int3
pop
mov
mov
adc
ret
xchg
mov
xchg
fild
mov
jge
dec
cmps
jmp
xchg
mov
popa
push
mov
cli
mov
xchg
jbe
pop
sub
jmp
jl
push
les
xchg
sub
jle
adc
adc
(bad)
fisttp
xlat
nop
cmp
std
pop
ds
mov
add
add
aam
adc
cmp
movs
or
leave
xor
pop
sub
jnp
inc
inc
iret
xor
(bad)
add
mov
inc
movs
inc
in
(bad)
(bad)
arpl
and
arpl
ss
mov
or
lods
test
data16
push
lock
and
(bad)
shr
and
pop
outs
push
xchg
xchg
mov
cld
in
in
imul
(bad)
call
inc
ds
leave
push
jmp
fild
pop
in
xchg
pop
shl
jae
das
mov
icebp
ret
sbb
cmp
xor
aad
inc
ja
mov
hlt
cmc
sub
popa
popa
push
shr
add
scas
out
std
scas
fninit
inc
in
mov
push
lahf
sbb
add
jbe
les
and
push
out
jmp
cmp
or
jmp
sbb
jp
icebp
dec
test
xlat
ss
stos
push
sbb
ins
clc
or
sbb
sti
cmp
push
neg
shl
leave
jecxz
iret
rcl
jne
xor
inc
loopne
push
sub
out
xchg
bound
sbb
jmp
popf
adc
jne
and
add
mov
and
mov
adc
rcr
or
add
jbe
push
sub
and
cmp
push
sbb
push
call
cmp
movs
push
setns
cs
xor
movs
lods
rcr
or
sbb
cli
in
imul
rcr
retf
dec
(bad)
jle
xlat
mov
fcmove
aaa
jmp
jecxz
xchg
loopne
lods
jecxz
or
add
jb
imul
fcom
in
ins
scas
(bad)
and
pop
rol
idiv
sub
cld
push
es
jg
dec
outs
das
lahf
add
xchg
les
cmp
mov
inc
imul
pop
add
mov
pop
arpl
xchg
push
dec
push
(bad)
loopne
loopne
es
push
jns
sbb
imul
stos
inc
fimul
cmps
aad
test
loope
mov
rcr
cmp
aas
xchg
push
not
cmp
outs
stc
fistp
xchg
scas
push
and
lds
jbe
add
mov
addr16
movs
mov
mov
pop
xchg
ficom
fisubr
xchg
xor
jmp
xchg
mov
jp
lahf
aam
push
add
cli
pop
es
mov
das
shl
test
rcr
test
xchg
pop
sahf
lea
mov
popa
jmp
repnz
enter
ret
into
dec
out
jp
sub
int3
add
aaa
cmp
push
push
sub
cmp
clc
sub
rcr
xchg
loop
loop
pop
cld
into
jge
je
dec
daa
fcomp
xor
adc
(bad)
jnp
adc
and
fsub
pop
enter
aaa
sub
mov
sbb
imul
lods
or
adc
hlt
nop
iret
sbb
xor
push
jo
push
ret
(bad)
pushf
inc
shl
inc
retf
into
add
cwde
fcom
(bad)
mov
int
push
xor
push
lods
int3
stos
sbb
aas
or
rol
push
mov
lods
cmps
cmps
push
push
mov
hlt
mov
fnstsw
xchg
adc
sub
cmp
lods
in
aad
(bad)
cmp
pusha
xchg
sub
push
mov
outs
retf
stos
xchg
sub
mov
xchg
lods
pop
test
xchg
adc
and
test
ins
jmp
(bad)
fcom
fisub
and
add
scas
mov
mov
pop
push
cli
push
push
fnstenv
jb
mov
js
sub
loope
sbb
les
add
je
mov
add
arpl
add
xor
push
or
ins
pop
enter
xchg
iret
ret
call
xchg
stos
or
cmps
inc
sbb
pop
fxch
fsub
dec
or
or
in
pop
sub
fwait
xchg
std
pop
sub
jg
and
ds
sub
lods
sar
(bad)
inc
jns
lock
lds
push
retf
or
or
out
mov
xchg
ret
icebp
pop
test
mov
mov
sahf
pushf
ret
cmc
aas
sbb
shr
shr
cs
inc
call
add
(bad)
cwde
push
xchg
and
pop
push
mov
ret
pop
and
mov
call
push
cli
xor
mov
popf
push
addr16
mov
inc
xor
pop
fcmovnb
data16
jmp
scas
(bad)
push
inc
inc
push
imul
jnp
mov
imul
mov
add
sti
jno
mov
mov
aaa
push
daa
xchg
and
mov
popa
out
in
fwait
mov
stos
xor
push
je
fisttp
or
xor
and
sti
add
jmp
jmp
test
ret
fistp
nop
lods
adc
cs
or
hlt
sbb
(bad)
xor
dec
(bad)
aad
pop
les
rcr
int
data16
out
mov
bound
bound
or
out
pop
sbb
sahf
loope
mov
add
pop
ss
retf
xchg
dec
pop
jecxz
adc
int
clc
mov
sub
dec
xchg
add
stos
jo
and
outs
(bad)
scas
pop
push
ret
adc
mov
neg
lods
push
xchg
fwait
pop
cwde
sbb
xchg
ret
sbb
mov
fwait
add
xor
sar
test
mov
cmp
mov
pop
imul
dec
add
daa
adc
imul
gs
jmp
fbld
cmp
(bad)
sar
popf
not
inc
xchg
push
pop
int3
mov
movs
adc
je
inc
stc
add
je
pop
xchg
loop
xchg
xchg
xor
pop
pop
dec
cli
mov
test
rcl
ss
mov
jb
or
adc
xchg
mov
call
jle
inc
pop
jmp
push
int3
(bad)
std
in
and
cld
aad
or
mov
jne
js
out
mov
cdq
jecxz
cmp
in
cmp
outs
leave
outs
test
fisttp
mov
int
je
cmps
dec
sbb
out
cmc
jae
jbe
lea
rcl
test
ins
jmp
jnp
sbb
mov
mov
adc
sbb
loope
cmp
aam
adc
push
sbb
mov
push
pop
lahf
lea
repz
in
mov
(bad)
lds
in
sbb
jmp
cmps
xchg
pop
jmp
mov
imul
test
outs
push
mov
gs
cdq
jp
sub
add
sbb
xchg
test
jmp
rcl
or
jge
cld
jbe
clc
dec
cmp
mov
and
push
add
adc
xchg
push
adc
inc
and
cld
repz
call
push
xchg
bound
or
retf
in
or
or
shr
sbb
sahf
hlt
xor
retf
xor
dec
iret
push
aad
sub
fadd
lahf
rol
xchg
jge
cdq
jmp
xor
lods
repnz
dec
xor
pop
aaa
nop
test
mov
mov
sahf
or
mov
push
cwde
push
ficomp
or
arpl
sub
xor
(bad)
inc
jg
movs
out
dec
pop
out
push
cld
adc
jg
lods
out
imul
test
pop
sbb
adc
mov
and
std
sub
or
(bad)
jl
fisubr
out
push
dec
sbb
pushf
shl
jp
pop
pop
retf
add
inc
add
fwait
aaa
mov
scas
push
lods
jg
in
cs
in
dec
pushf
movs
sahf
xchg
bound
push
test
out
loopne
test
out
mov
lds
lods
stc
xchg
cmc
lds
test
sbb
cmp
adc
clc
mov
push
stos
mov
ror
cli
outs
out
push
jge
scas
push
into
ror
aaa
push
sub
iret
neg
outs
retf
dec
xchg
mov
addr16
icebp
dec
rcl
jmp
xor
scas
fnstenv
out
or
sti
out
jae
loope
mov
add
jno
xchg
out
mov
mov
push
fistp
jp
inc
icebp
sub
lods
jmp
cli
or
sti
div
mov
jo
adc
dec
loop
sbb
add
mov
mov
jp
adc
sub
mov
dec
into
sbb
push
nop
aaa
sbb
push
scas
adc
add
jnp
pop
lods
sub
test
aad
mov
mov
ja
(bad)
cmp
in
mov
sbb
std
adc
es
loop
push
shl
rol
jmp
ins
ror
ja
cmps
aad
shr
inc
movs
sub
xchg
loop
mov
xor
jb
dec
mov
shr
cmp
adc
rol
cmps
sar
mov
jp
xchg
or
imul
icebp
cmps
btc
pop
fistp
mov
pusha
cmp
mov
fidivr
push
adc
ss
imul
xor
push
shr
sub
inc
fsubr
sbb
in
xor
xchg
adc
dec
xchg
clc
inc
mov
xor
mul
out
popf
rdtsc
and
shr
ret
pop
mov
pop
scas
fnsave
mov
aad
xor
mov
jge
out
stc
pop
ins
mov
iret
ins
lahf
imul
mov
xchg
mov
ror
test
jbe
es
out
pop
or
call
push
icebp
js
add
dec
jg
cmp
mov
push
sub
dec
xchg
repnz
ret
inc
mov
sbb
add
adc
and
push
xlat
mov
xlat
gs
xchg
jne
push
ss
jae
mov
push
dec
popa
xchg
sbb
loop
cmp
sub
dec
mov
xchg
mov
push
mov
jp
enter
xchg
pop
mov
cdq
inc
jmp
mov
mov
js
sbb
ins
mov
pop
imul
pop
jb
inc
arpl
pusha
pop
mov
cld
mov
add
sbb
int
aad
sbb
inc
xchg
imul
mov
xlat
dec
sbb
mov
xor
mov
adc
mov
outs
clc
inc
push
sbb
cmp
adc
mov
push
inc
test
mov
lock
aad
test
fs
mov
mov
lds
jge
in
dec
sti
into
sub
(bad)
push
ja
push
data16
fisubr
push
push
lahf
imul
mov
(bad)
in
pop
ds
stos
and
push
ds
cmc
out
fsub
ss
pop
les
daa
les
div
ins
sbb
mov
ds
xor
mov
dec
and
push
jp
and
popa
bound
rcl
mov
mov
add
mov
xchg
xchg
xor
loopne
ss
mov
jae
xchg
outs
xor
mov
mov
jl
cmp
pop
pop
xchg
lods
(bad)
jmp
inc
push
shl
inc
div
std
repnz
std
push
shl
inc
icebp
sar
mov
push
das
lock
jl
jo
mov
fmul
inc
adc
shl
or
or
call
outs
aaa
inc
fisttp
dec
ficomp
dec
dec
pusha
loope
adc
push
retf
and
(bad)
jmp
xchg
fcom
fmulp
mov
add
sub
dec
pop
ffreep
mov
xor
jne
ret
fcmovu
add
icebp
add
add
jle
or
cmc
daa
pop
push
enter
push
sub
or
loop
or
clc
sti
or
add
sbb
dec
fcom
pop
sub
xlat
xor
inc
lods
out
int3
addr16
fdivr
out
leave
cdq
sub
xchg
mov
mov
inc
addr16
cmp
inc
inc
or
jecxz
push
or
out
sbb
out
lods
int3
(bad)
(bad)
(bad)
or
jb
lahf
xchg
aam
sub
test
jne
dec
push
retf
stc
xchg
(bad)
push
sub
arpl
mov
pop
jle
push
ret
jo
mov
mov
call
ins
into
adc
xor
xchg
mov
push
inc
jge
add
jns
xor
and
test
aaa
scas
inc
cmp
adc
repnz
std
dec
(bad)
mov
and
sbb
mov
icebp
sub
mov
fchs
and
push
fcom
lods
or
cdq
cld
sub
js
rcr
(bad)
sbb
imul
sbb
(bad)
mov
add
push
mov
pop
push
push
imul
cli
pop
test
sub
push
mov
lock
out
add
imul
or
xor
sbb
sahf
sbb
inc
fwait
sub
mov
mov
pop
jnp
sar
jns
xchg
mov
jmp
das
inc
add
push
retf
push
test
jns
sbb
adc
stc
mov
js
fist
xchg
sub
mov
lds
mov
ficomp
jmp
cwde
mov
mov
pop
push
mov
adc
push
mov
out
repnz
inc
in
ins
out
sti
rcr
cmps
imul
jbe
imul
hlt
pop
jnp
push
shr
xor
(bad)
lea
cli
xor
fisttp
mov
dec
add
sbb
push
and
mov
push
fisub
sub
adc
pop
push
xchg
or
xchg
pop
jle
push
ds
pusha
(bad)
sti
in
retf
or
cld
mov
inc
sbb
xchg
cld
or
dec
mov
xchg
cmovae
and
pop
lods
push
dec
ins
(bad)
sbb
mov
loope
pop
and
inc
sbb
iret
into
int3
jne
push
ror
push
subps
aam
xchg
push
or
je
mov
retf
xchg
sub
add
xchg
and
mov
mov
jmp
imul
shl
cmc
xchg
mov
cld
push
sbb
je
fdiv
ins
pop
and
aam
push
dec
stos
ss
outs
add
jbe
xchg
sbb
cwde
dec
nop
enter
sti
sbb
dec
push
sti
adc
es
iret
sbb
pop
pop
stos
xchg
retf
jl
test
cld
pop
jmp
jbe
jo
add
jmp
pop
jbe
mov
popf
sub
xor
repz
cmp
and
push
inc
iret
cmps
dec
js
js
(bad)
push
xlat
mov
xchg
imul
add
aam
xchg
jb
adc
dec
push
dec
xchg
xchg
xchg
add
dec
mov
cs
push
mov
fsave
leave
into
dec
das
or
sub
jo
jp
push
or
std
aas
pop
cwde
adc
call
scas
cmc
stos
pop
imul
cmp
stos
add
add
pop
movs
dec
dec
jg
xor
outs
outs
fld
fwait
add
daa
and
push
idiv
sub
fcom
in
fld
fucom
adc
es
mov
mov
rol
call
pop
in
lahf
test
repnz
inc
ds
rcl
and
ss
and
add
call
mov
push
cmp
dec
std
cmp
or
lods
ret
popf
ret
jmp
pushf
aam
xchg
xor
popa
mov
sub
in
out
pop
leave
jb
mov
fucomp
in
data16
push
sub
push
imul
adc
or
nop
shr
int
das
fst
sbb
pop
pushf
stos
test
xchg
jmp
fiadd
in
not
into
addr16
std
push
out
inc
out
mov
call
push
add
pop
mov
xor
enter
ss
push
push
push
sbb
jne
sub
(bad)
dec
mov
out
adc
(bad)
div
das
cmps
inc
adc
lods
sbb
adc
mov
scas
mov
mov
push
test
sahf
dec
test
dec
ss
daa
mov
mov
lea
or
mov
push
mov
mov
inc
dec
adc
sub
xor
cmp
xchg
mov
mov
les
lods
aas
or
jno
xchg
mov
enter
repnz
fsqrt
inc
xor
or
lahf
sub
mov
clc
out
jg
out
jbe
mov
mov
inc
imul
sub
idiv
dec
(bad)
or
fidiv
jns
xchg
in
dec
jecxz
repz
push
mov
pavgw
fild
fucomip
and
or
retf
cmp
loopne
and
and
sbb
out
inc
or
xlat
cld
or
call
fsubr
add
es
xchg
cmp
aad
popa
lods
mov
mov
jg
lods
pop
dec
jmp
retf
(bad)
xor
jge
and
adc
inc
pop
xor
jmp
popf
loop
bound
add
call
stc
je
repz
mov
gs
inc
xchg
loopne
cli
leave
or
push
ret
test
enter
cdq
std
push
adc
xor
jne
or
xor
pop
stc
loopne
sahf
movs
(bad)
es
fld
adc
in
push
sbb
or
sub
and
scas
sar
push
xchg
lahf
xchg
jo
dec
out
(bad)
jmp
add
inc
popf
add
sbb
aam
test
push
lock
pop
cld
jno
pop
f2xm1
mov
xchg
call
jmp
add
jmp
mov
stos
shl
pop
mov
mov
sub
test
fstp
jbe
movs
and
sbb
mov
out
jle
sahf
enter
xchg
pop
jge
ret
fisubr
pop
retf
stos
(bad)
(bad)
(bad)
imul
shr
add
xchg
clc
sub
jne
push
aad
and
pop
ja
aam
inc
sbb
mov
shl
xor
in
cmp
cmp
stos
leave
and
and
je
dec
pusha
jmp
adc
movs
add
enter
xor
xchg
push
add
dec
pop
pop
mov
mov
dec
inc
arpl
ja
xor
mov
sub
or
pop
cbw
gs
mov
inc
xchg
es
xor
cli
loop
sub
jl
mov
xor
fwait
mov
mov
cld
jmp
mov
push
(bad)
mov
push
or
push
cmps
imul
adc
hlt
mov
sahf
sub
in
stc
lahf
push
test
push
inc
and
iret
pop
fcomp
(bad)
int3
fcmovnbe
add
int3
cmc
ds
or
mov
xchg
(bad)
mov
mov
push
push
jae
fnstcw
fidivr
mov
fcomp
(bad)
and
add
dec
inc
jmp
scas
ja
imul
jmp
fdivr
xchg
add
mov
dec
mov
jle
hlt
cwde
push
and
xor
dec
inc
out
push
and
and
jmp
(bad)
mov
pushf
jnp
mov
mov
or
test
ret
pop
jp
jg
sub
in
xlat
ret
fs
(bad)
jns
and
xchg
ss
push
das
test
adc
jecxz
test
and
jno
cmp
mov
xchg
jle
pop
jbe
fist
call
movs
xchg
scas
push
push
sub
mov
mov
mov
test
clc
rcr
pop
xor
inc
int
jge
addr16
(bad)
mov
in
cs
iret
mov
sub
test
jecxz
sub
inc
scas
repz
pop
and
mov
stos
jle
and
jae
mov
test
std
push
xor
cmp
xchg
pop
xchg
xchg
ret
xor
pop
into
imul
lods
rol
xlat
sub
ret
mov
sbb
lea
ins
jmp
push
xchg
dec
in
imul
xchg
jae
in
nop
add
stc
fisub
rcl
enter
ss
xor
out
mov
es
or
mov
icebp
cmps
mov
nop
js
xor
loop
outs
mov
ret
mov
retf
daa
ins
ss
pop
repnz
and
clc
pop
xor
or
fnsetpm(287
call
daa
xchg
outs
jmp
pop
xchg
adc
stos
adc
test
cmp
push
clc
mov
mov
xor
aas
(bad)
xor
inc
lods
xchg
leave
call
cs
lds
es
call
lods
mov
inc
repnz
jnp
hlt
mov
in
xor
sbb
or
cli
jecxz
sbb
push
out
inc
test
or
pop
call
mov
fwait
loop
inc
sahf
icebp
in
hlt
enter
jmp
dec
cli
mov
div
pusha
cmp
or
sub
outs
mov
lods
inc
aas
and
mov
in
pop
lods
dec
cld
das
aas
cmps
xchg
in
repnz
out
xchg
mov
mov
push
fidivr
clc
mov
or
jb
lahf
or
out
(bad)
int3
mov
fprem
jg
jecxz
enter
sub
adc
dec
(bad)
dec
cmp
out
int
xor
cmps
fisubr
add
or
inc
mov
xlat
mov
movs
ret
fnstcw
loopne
stc
pop
sbb
inc
push
test
les
fcom
jle
(bad)
loopne
ror
daa
sbb
or
leave
jne
and
add
cmp
lods
xchg
add
ins
(bad)
jne
mov
inc
hlt
fild
dec
fwait
sub
adc
retf
add
adc
(bad)
mov
jle
pop
and
mov
or
jno
xchg
not
repz
leave
test
lock
jbe
jecxz
test
jbe
xchg
inc
xchg
aas
xchg
pusha
xchg
jno
xor
mov
sub
outs
mov
mov
xor
mov
aad
mov
mov
es
dec
cmp
adc
aas
mov
fsincos
jo
nop
pop
xchg
and
jno
cmp
jecxz
je
fdivr
popa
hlt
imul
daa
jge
xor
or
cmp
test
sub
mov
pop
fist
adc
popf
dec
cmps
iret
pusha
and
xor
push
xlat
mov
jmp
inc
mov
mov
repz
rcl
scas
fisttp
xchg
or
popa
dec
(bad)
fs
pop
mov
jns
xchg
mov
hlt
int3
pop
push
cli
ja
fwait
push
inc
inc
mov
push
sub
xchg
inc
and
xor
xchg
mov
xchg
cmp
cmp
xchg
mov
daa
out
inc
xor
and
jne
xchg
lock
das
leave
jmp
addr16
les
push
inc
add
mov
mov
movs
push
mov
xchg
sbb
dec
push
pop
test
stos
jmp
or
std
pop
int
leave
adc
fsub
mov
imul
fisub
leave
fcom
fstp
jae
or
les
out
add
jae
in
mov
mov
push
pop
mov
mov
jle
add
xor
aaa
test
cwde
retf
xchg
push
nop
das
(bad)
add
pop
mov
pusha
add
mov
out
push
imul
adc
imul
mov
cwde
stc
ss
aam
scas
sbb
mov
pop
test
or
or
mov
aas
cmp
neg
push
jns
xlat
jno
xor
std
fisub
and
and
jmp
pop
fst
loop
in
mov
fwait
mov
sbb
add
bound
in
or
aaa
shr
in
mov
jns
sbb
lahf
ficomp
inc
in
rol
test
movs
inc
mov
mov
mov
mov
xor
rcr
push
xchg
rol
fistp
gs
push
outs
jb
leave
mov
(bad)
(bad)
cli
cmp
push
lock
xchg
dec
jmp
pop
or
cwde
inc
out
les
pop
cmps
push
gs
or
push
sub
sbb
mov
or
and
sbb
imul
push
sti
or
cmp
mov
sbb
inc
jmp
shr
(bad)
mov
dec
or
hlt
dec
cmp
mov
dec
lods
push
lahf
jle
sub
(bad)
adc
fadd
lahf
out
rol
test
inc
pop
jp
(bad)
pushf
dec
jl
jmp
pusha
sub
pusha
pushf
cmps
mov
fwait
dec
xchg
rcr
in
nop
daa
or
jno
ins
ins
push
sub
aaa
retf
out
cld
rol
push
cld
ins
cmp
pop
mov
cld
jne
pop
jbe
rcr
sub
(bad)
popa
add
push
mov
push
ficom
push
outs
xchg
ror
cdq
xchg
and
push
xchg
shl
inc
loope
out
mov
(bad)
mov
sub
les
xlat
repz
(bad)
popf
jl
test
sbb
and
adc
retf
lock
xlat
sub
je
fsubr
push
jp
fucom
and
sti
cmp
push
and
add
and
ror
sub
cmp
ret
xchg
imul
and
push
inc
cmp
push
xchg
pop
out
aaa
push
xor
mov
mov
push
xchg
push
add
jbe
mov
fucomi
sar
mov
rol
test
xor
(bad)
addr16
inc
int
push
fst
cmp
sbb
frstor
sbb
add
xchg
pop
pop
icebp
mov
jae
xor
mov
shr
jg
push
scas
cmp
add
inc
fmul
ror
adc
aas
mov
ins
dec
adc
pop
mov
xor
ins
arpl
sti
ret
push
inc
int
enter
cld
jne
sar
in
clc
cmp
jecxz
inc
es
sbb
cmp
in
mov
adc
jp
lock
loope
inc
pushf
push
(bad)
mov
lods
retf
aad
dec
push
adc
mov
fistp
arpl
int3
xchg
mov
add
adc
pop
pop
aas
sub
in
(bad)
dec
movs
icebp
pushf
mov
sub
in
and
addr16
jo
imul
jg
stos
inc
mov
fsub
jmp
movs
push
sbb
pop
or
fdivr
xchg
or
jmp
popa
or
icebp
fldenv
daa
inc
sub
sbb
ss
and
imul
loope
nop
ror
inc
xlat
outs
dec
pusha
add
pop
add
cmp
movs
aam
into
jmp
mov
call
mov
xchg
xchg
pop
jnp
rcr
push
inc
rcr
sahf
lea
aam
std
je
out
ins
mov
adc
test
or
(bad)
mov
mov
sub
pop
ret
shl
mov
jmp
ret
fild
cdq
jne
xchg
lds
jns
test
outs
or
sbb
sub
add
inc
into
sub
ret
jns
mov
xchg
jl
sti
sbb
inc
or
fs
or
xor
retf
sbb
xor
shl
loopne
scas
and
outs
retf
mov
jle
out
mov
lahf
(bad)
clc
fsubr
or
fld
iret
fsub
add
adc
mov
and
sub
push
(bad)
jmp
push
(bad)
xor
lods
mov
adc
sub
jecxz
inc
popa
mov
mov
cmp
outs
jo
push
in
sbb
mov
inc
xchg
pop
sti
jno
inc
jmp
add
inc
hlt
pop
cmp
mov
sar
sbb
fistp
aad
ret
(bad)
adc
xchg
push
and
add
mov
inc
xor
imul
sub
push
lock
ds
adc
xchg
fisubr
ror
pop
dec
cld
mov
outs
popw
cli
xor
imul
mov
cmps
out
push
dec
sub
call
stc
aad
jl
pop
cmp
push
lds
std
sti
sti
es
movs
jp
adc
xchg
daa
add
ins
cmp
pop
test
shr
scas
pop
push
add
push
cmp
push
out
sar
and
addr16
jo
imul
test
sbb
inc
jmp
aaa
fs
pop
repz
sub
mov
outs
and
ss
icebp
jmp
test
fistp
xchg
or
inc
cmc
pop
add
inc
sahf
mov
cdq
rep
jns
js
sub
in
add
hlt
arpl
test
mov
js
fsubr
pop
mov
cmps
and
popa
repz
pop
loop
xor
adc
(bad)
pop
movs
(bad)
sahf
mov
or
mov
cmc
dec
ret
mov
mov
pusha
xor
dec
lock
idiv
stos
sub
sub
jge
sub
jae
mov
out
jg
movs
fistp
sub
sbb
fisttp
fnstenv
push
mov
sub
xchg
in
and
scas
cwde
in
repz
sbb
sbb
aad
pop
test
lea
dec
test
fidiv
stos
mov
sub
retf
jns
ss
jnp
sub
add
pop
jp
jnp
xor
out
test
fs
jmp
outs
xor
jb
(bad)
mov
loope
scas
popf
mov
pop
pop
cli
and
push
add
mov
jl
imul
test
xsave
ficom
xchg
xor
gs
pusha
mov
jo
xchg
add
pop
push
mov
imul
fs
popa
xor
xor
retf
pop
addr16
jne
mov
dec
jbe
mov
das
cld
lods
fs
mov
in
call
shl
and
adc
or
test
lea
sbb
nop
cmps
out
out
jmp
inc
xchg
jne
test
test
addr16
cmp
cmp
mov
loop
fwait
jl
int3
and
push
sub
cmp
mov
pop
dec
dec
xor
cmc
cmc
popf
jnp
call
cmps
test
jne
stos
fnsave
js
add
imul
loop
dec
or
jp
xchg
xchg
popf
lea
in
inc
je
int
fstp
dec
mov
call
imul
add
xchg
or
dec
scas
stos
sub
movs
gs
cmp
repz
jmp
mov
repz
daa
add
nop
xor
xchg
ret
jb
xor
xchg
pop
cli
retf
lods
mov
inc
cmps
(bad)
jle
lahf
cwde
push
xor
fcmovnb
and
jns
inc
mov
jle
icebp
mov
ja
cmps
pop
mov
cmp
in
test
leave
and
repnz
mov
cmp
adc
out
repnz
stos
push
sahf
aas
or
popf
shl
clc
inc
push
in
enter
mov
pop
sub
fiadd
or
pop
loop
mov
test
jg
jge
jmp
daa
mov
cmps
pop
mov
inc
pop
jne
loope
out
pop
mov
inc
xlat
stc
test
dec
iret
faddp
dec
and
rol
sahf
clc
mov
daa
adc
adc
xchg
mov
sbb
(bad)
hlt
sub
sub
fild
jo
mov
retf
jg
inc
pop
pop
pop
in
leave
mov
add
dec
xor
inc
jmp
jne
add
loopne
mov
mov
mov
pop
fwait
cmp
push
iret
in
fstp
mov
push
leave
xor
mov
cmp
inc
gs
jae
dec
mov
sub
jp
jecxz
pop
lods
xchg
sti
push
std
xchg
(bad)
xor
push
push
xor
add
fucomi
xlat
out
repz
aam
cmp
inc
out
xor
inc
je
cmp
(bad)
mov
cdq
mov
push
add
fistp
and
loop
and
and
xor
jno
pop
or
mov
call
ror
mov
in
mov
dec
icebp
ret
std
and
mov
mov
sbb
mov
push
mov
jmp
mov
push
lock
cmp
pop
stos
enter
stos
push
in
jl
dec
imul
xor
stos
xor
rdtsc
imul
shl
sbb
dec
inc
je
addr16
push
and
xchg
pop
mov
or
pusha
inc
mov
shl
(bad)
fwait
push
ficom
pop
sub
xor
mov
je
and
xchg
inc
dec
and
add
daa
repnz
pop
loope
mov
sbb
mov
retf
icebp
and
mov
jg
mov
xor
mov
xor
test
std
loopne
fcom
loope
rcl
(bad)
mov
jecxz
sti
inc
in
sub
or
xor
add
out
sahf
adc
xchg
shl
sbb
lods
mov
int
jno
es
sbb
jg
add
fdiv
int
sbb
rcr
ror
inc
sbb
ret
mov
dec
push
or
or
fsub
xor
xor
pop
xlat
lock
add
mov
pop
push
adc
nop
aaa
scas
dec
and
es
ficomp
cdq
cmps
aaa
sbb
mov
cwde
fld
dec
std
es
pop
scas
xor
xchg
(bad)
and
lods
movs
jns
pop
nop
jp
adc
jbe
in
jle
dec
je
repnz
aam
push
imul
out
lock
adc
fsubr
arpl
fdivr
std
pushf
sti
sub
cs
fld
xor
inc
call
imul
call
gs
repnz
movs
adc
xor
pop
push
push
cmp
xlat
mov
(bad)
fidivr
and
mov
lds
adc
push
adc
in
pop
pop
push
pop
stc
pop
dec
aad
pop
xchg
push
or
push
aad
xor
in
scas
outs
dec
fcomp
ror
cdq
call
adc
push
sub
lods
mov
stos
test
(bad)
jnp
(bad)
jle
repnz
lods
push
adc
xor
xor
mov
push
add
scas
paddsb
and
aam
cs
inc
popf
jae
call
out
test
xor
mov
loop
cmp
into
xor
jmp
test
in
cmc
mov
adc
(bad)
dec
push
sub
test
jecxz
mov
xchg
test
pop
mov
mov
pushf
ds
lahf
mov
sub
pop
fdiv
repnz
push
fwait
loope
mov
inc
ja
lods
cmc
sub
inc
leave
pop
xor
jnp
dec
add
scas
cmp
adc
into
lds
add
mov
leave
cld
pop
jmp
cmp
lock
push
dec
or
cs
cdq
push
or
in
std
(bad)
leave
dec
mov
loope
ins
clc
mov
adc
aam
pop
div
push
fist
mov
cmp
lea
arpl
adc
jne
ret
pop
mov
dec
jmp
cmp
gs
rcr
loop
sub
clc
xchg
in
(bad)
cmc
out
dec
shl
ins
adc
jno
jl
push
jg
mov
sbb
mov
push
jo
shl
sbb
adc
(bad)
adc
cmp
and
sbb
mov
cmp
jae
ja
stc
addr16
mov
sti
in
mov
loope
std
dec
push
(bad)
adc
daa
nop
jg
or
jne
sub
adc
xchg
jbe
jmp
lods
out
add
pop
movs
and
fs
push
test
adc
test
and
sub
xchg
jg
imul
aad
inc
aad
inc
fstp
dec
mov
jmp
addr16
sub
xchg
cs
mov
jae
sbb
in
jo
xchg
loope
movs
fsub
sub
mov
outs
shl
clc
aas
mov
xlat
mov
mov
mov
sahf
inc
pop
cmps
pusha
mov
xor
push
movs
cld
and
jl
call
fstp
adc
mov
push
mov
jbe
and
scas
mov
pop
aad
bound
jns
push
in
push
sbb
push
adc
test
cwde
mov
test
je
scas
cmps
adc
jno
in
jp
cmps
xchg
int3
(bad)
and
movs
dec
or
cmp
stc
test
sub
jle
pushf
not
xchg
xchg
rol
loope
rcl
dec
and
scas
sbb
inc
adc
lock
sbb
lea
test
pop
push
sti
hlt
outs
xchg
mov
in
test
xchg
dec
fld
push
test
(bad)
jge
sbb
cs
les
retf
shl
or
add
cmp
(bad)
jmp
inc
mov
in
pusha
cwde
add
inc
mov
loope
imul
in
xchg
cmps
data16
adc
ins
popa
daa
outs
mov
daa
mov
sub
out
sub
cmc
dec
cld
push
xchg
imul
js
lea
ds
cld
inc
outs
or
in
cmp
mov
inc
ret
cld
ss
inc
scas
je
mov
pop
imul
ret
stc
rcr
or
jmp
cwde
inc
sbb
ret
adc
adc
mov
mov
jb
movs
ss
mov
push
mov
sub
pop
pop
popf
add
mov
push
pop
and
cmp
or
mov
stos
test
pop
mov
out
das
(bad)
daa
jns
pop
sbb
movs
sti
idiv
xchg
mov
and
or
mov
dec
or
inc
mov
ins
dec
pop
jbe
sbb
inc
push
push
nop
jmp
call
add
fcomi
add
dec
repnz
sub
inc
jg
lods
add
test
call
mov
lods
clc
imul
hlt
jmp
aad
and
cmps
ret
and
or
mov
and
xor
jo
ret
xchg
enter
ja
push
(bad)
sbb
ins
xor
enter
pop
retf
test
inc
dec
or
fdiv
in
(bad)
jae
sti
push
imul
push
ins
mov
jmp
popa
add
adc
sub
rol
mov
add
xor
bound
sub
xor
add
pop
inc
jbe
je
and
add
scas
lds
cmps
repnz
retf
add
lahf
fs
dec
sub
pop
cmc
mov
mov
and
add
aam
retf
add
jecxz
call
pop
mov
adc
push
inc
retf
aas
test
sbb
adc
mov
mov
das
(bad)
outs
fs
ret
in
(bad)
stc
fistp
xchg
es
pop
(bad)
or
fdivr
cmc
sbb
sti
imul
pop
mov
add
or
imul
mov
out
mov
popa
dec
xchg
int
icebp
mov
dec
and
jmp
lods
dec
sbb
inc
pop
push
xor
add
mov
lds
mov
repz
push
add
stos
mov
jmp
or
call
fs
xchg
shl
mov
cs
inc
stos
sub
jmp
(bad)
test
pop
jae
xor
popf
mov
adc
jmp
(bad)
inc
cmps
bound
lea
inc
outs
add
fldcw
mov
xor
in
dec
cdq
xor
scas
jle
sub
mov
retf
icebp
ror
(bad)
cmp
mov
cmp
and
pop
pop
pop
je
sbb
xchg
push
loopne
retf
pop
outs
out
and
mov
ret
mov
cmovns
adc
cwde
sub
mov
jl
lods
xor
inc
and
ret
(bad)
(bad)
out
inc
xchg
loopne
xchg
push
jp
sbb
sbb
std
sbb
movs
bound
out
or
cli
and
in
pop
pop
(bad)
inc
xor
fwait
outs
ret
or
pop
and
xor
mov
xchg
test
dec
ins
sbb
xor
inc
inc
jmp
repz
gs
stc
arpl
push
js
(bad)
push
pop
cs
mov
cmp
cwde
popf
inc
icebp
jmp
jmp
cmp
adc
xchg
adc
shr
call
xor
cld
test
sbb
xor
push
cmp
dec
xor
add
dec
cmps
data16
mov
cmp
retf
jnp
pushf
call
ins
dec
es
out
xor
adc
adc
ja
mov
int
lahf
fs
scas
shl
ins
outs
add
iret
aam
jbe
xor
jmp
lahf
and
mov
xor
mov
xchg
pop
xor
and
sub
adc
test
xchg
les
add
(bad)
mov
popf
loopne
inc
push
hlt
je
adc
sbb
arpl
(bad)
and
and
lods
cwde
jmp
adc
jecxz
dec
(bad)
push
push
outs
xchg
in
rcl
xchg
pop
scas
adc
push
cmc
pushf
daa
dec
lds
daa
jl
ret
shr
xor
loop
cld
sbb
add
mov
imul
push
or
fisttp
jge
cdq
daa
pushf
popa
in
mov
mov
cmp
in
popf
jge
lock
jo
test
stos
push
or
xor
xchg
fstp
jl
enter
lock
push
loope
adc
mov
(bad)
psubb
jge
push
cmp
shl
shr
xor
jnp
cs
xchg
iret
jo
add
test
dec
xchg
dec
sbb
mov
test
push
mov
stos
int
enter
push
mov
and
push
or
cli
scas
cmp
and
mov
lds
mov
ss
mov
add
cmp
dec
jbe
test
(bad)
pop
fldpi
cwde
mov
sbb
lds
add
pop
mov
cmc
cmp
push
ds
(bad)
push
imul
es
mov
add
aad
push
in
add
mov
shl
mov
xor
sbb
daa
ret
fs
sahf
xlat
or
xor
or
lods
mov
test
mov
(bad)
mov
fdivr
xor
shl
jnp
xor
jmp
dec
mov
cld
stc
iret
mov
cld
xor
pop
rol
inc
repz
(bad)
push
popa
call
mov
or
cmp
mov
jb
sub
xor
adc
ins
dec
jo
shr
outs
push
addr16
mov
sbb
pop
out
xor
daa
cmp
pop
cmp
inc
inc
ins
mov
aas
retf
mov
out
push
xor
loopne
sub
sbb
and
in
ret
into
sub
mov
aam
adc
jg
iret
icebp
dec
mov
fbstp
sbb
repz
clc
(bad)
sbb
adc
sti
xchg
xor
pop
jae
pop
push
cwde
push
pop
repz
in
add
retf
dec
cli
lods
ins
call
push
test
out
pop
jmp
dec
dec
std
in
fs
sub
pusha
mov
or
jmp
xchg
or
mov
lods
adc
push
xchg
out
inc
cmp
add
mov
xor
(bad)
pop
xchg
mov
add
mov
(bad)
add
std
(bad)
sub
leave
aad
fisttp
push
stc
ss
mov
or
neg
out
add
pop
jmp
xor
xchg
(bad)
out
pop
lods
fnstcw
shl
fistp
das
jno
dec
cmp
mov
push
dec
mov
push
sahf
xchg
sbb
ins
mov
rcl
cmp
aad
icebp
ins
mov
(bad)
jge
(bad)
xlat
test
sar
data16
jnp
add
mov
icebp
sbb
jle
cmp
iret
or
mov
call
jns
(bad)
mov
icebp
test
js
repnz
dec
inc
jae
dec
retf
imul
lods
cmp
mov
pop
mov
cmc
ret
mov
pushf
and
pop
xlat
shr
adc
mov
dec
adc
mov
popf
jnp
xor
test
ja
sub
lahf
ret
rcr
add
test
mov
push
sub
fiadd
jno
inc
ret
loop
sbb
popa
lea
enter
sbb
push
dec
cs
test
jo
dec
mov
or
data16
out
cwde
cmp
sbb
pop
pushf
add
inc
inc
fld
jg
shl
call
mov
leave
and
nop
add
retf
scas
push
ret
js
js
and
imul
out
mov
cmp
aaa
scas
lea
out
(bad)
push
mov
sub
dec
xor
mov
and
xchg
enter
imul
mov
ins
fld
xlat
mov
push
add
mov
xchg
pop
test
mov
mov
pop
add
retf
push
push
push
stc
and
ja
cld
test
loopne
call
jae
(bad)
pop
stos
repnz
sub
ss
in
call
(bad)
push
pop
mov
(bad)
mov
outs
adc
jl
push
(bad)
xchg
ss
(bad)
push
fadd
fstp
movs
shl
and
add
loope
add
jl
ds
cdq
and
add
not
push
ss
mov
add
fisttp
xchg
ins
inc
aad
jae
test
rcl
inc
rcl
call
stos
mov
pop
test
call
cwde
push
fld
int3
inc
inc
js
or
xchg
jne
sahf
das
jno
mov
ss
dec
popf
lods
repz
loop
out
cmc
sbb
mov
add
and
addr16
jbe
mov
jp
fucomip
mov
enter
pop
push
test
and
add
sub
loopne
jnp
ds
pop
aad
(bad)
ins
push
mov
int3
pop
inc
iret
nop
retf
cdq
ficomp
movs
es
push
aaa
inc
cmps
stos
adc
shl
aam
cli
retf
into
sbb
dec
inc
ret
mov
jg
jmp
jle
stos
scas
push
push
inc
sbb
adc
cmps
push
enter
xchg
lahf
stc
mov
sar
add
pop
sub
sti
movs
mov
fs
jp
or
out
and
out
cmc
out
loop
and
fcomp
cdq
ins
and
push
outs
lea
mov
or
scas
leave
and
add
add
jecxz
pop
push
fs
push
xor
cmp
add
ins
(bad)
out
jmp
test
loope
mov
(bad)
fdiv
sahf
in
jno
in
inc
mov
inc
jecxz
mov
sar
jne
push
sbb
(bad)
repnz
cmc
pop
pop
mov
pop
mov
pop
movs
call
scas
inc
outs
pop
shl
cmps
xchg
in
iret
jecxz
iret
addr16
add
call
sub
push
movs
jo
nop
repnz
mov
jecxz
int3
jne
cmp
leave
add
std
push
jns
inc
jb
xor
push
xor
out
loop
jp
mov
pop
sub
or
js
mov
mov
test
test
mov
dec
adc
mov
outs
add
ins
sahf
stos
retf
and
(bad)
xchg
movs
inc
mov
mov
jnp
scas
cwde
in
xchg
mov
jne
call
adc
jns
mov
push
movs
inc
mov
data16
dec
scas
popa
pusha
mov
or
adc
aas
out
mov
pop
out
in
fwait
push
iret
fstp
call
push
mov
popa
int3
jo
gs
jmp
call
mov
mov
and
dec
test
xor
mov
and
in
call
jp
lds
sar
repnz
test
cmc
cmps
es
add
push
mov
shr
inc
inc
mov
fsub
(bad)
leave
clc
inc
mov
mov
jae
inc
mov
out
push
cs
stos
add
out
ffreep
xor
fimul
aad
lods
adc
push
xchg
xor
cmp
mov
push
cld
pop
pusha
sbb
cmp
sbb
arpl
cmp
test
into
jae
bound
inc
lock
dec
in
shl
inc
addr16
mov
lea
mov
add
inc
std
call
and
ins
addr16
call
sti
inc
pop
fsubp
je
loope
setae
fcom
sbb
add
fmul
ss
jmp
xchg
jge
inc
add
ins
movs
clc
jne
cmp
rcl
cwde
ror
hlt
or
jbe
loope
cmc
aam
sbb
sub
ins
data16
inc
push
jae
leave
mov
dec
cmp
fs
aam
inc
addr16
clc
fwait
xchg
mov
stc
js
mov
test
cmps
je
std
dec
pop
jne
cmp
aaa
xor
mov
sub
je
std
mov
xchg
(bad)
pop
retf
mov
es
push
dec
push
push
test
mov
adc
jbe
mov
xor
xchg
arpl
fs
lds
xchg
adc
into
es
push
arpl
stos
push
rcl
rol
mov
pop
test
inc
push
add
std
(bad)
in
pusha
cmp
rcl
mov
rcr
inc
jbe
sbb
or
punpckhbw
adc
ins
sub
add
sbb
xor
loop
lods
adc
repnz
pop
sbb
test
pop
or
or
or
push
xchg
shr
int
(bad)
xchg
out
in
dec
adc
xchg
in
movs
cmp
stos
loope
pop
mov
or
mov
jb
mov
push
or
sbb
rcr
xchg
popa
fwait
and
or
push
cli
mov
jmp
jo
scas
cdq
adc
lds
or
pop
mov
push
xor
pop
mov
out
in
adc
adc
mov
mov
test
aaa
rol
and
push
sbb
inc
cmp
sti
pop
adc
add
mov
mov
das
cmp
imul
repz
js
push
push
int3
jg
push
xor
ins
out
push
pop
fcomp
pop
and
lahf
mov
loop
fs
push
mov
outs
lea
ins
sub
inc
dec
mov
loopne
loopne
or
cmc
and
mov
xor
pop
scas
or
sahf
in
jnp
daa
in
or
jmp
push
sbb
mov
mov
pop
fadd
lods
adc
shl
popa
xchg
repnz
adc
scas
inc
shl
iret
out
out
iret
mov
dec
or
pop
pop
hlt
push
imul
inc
jne
adc
repnz
pop
retf
inc
push
dec
pop
sti
fisub
and
adc
cmp
inc
pop
xchg
add
xlat
inc
or
aad
addr16
cmps
mov
cmp
dec
dec
mov
mov
mov
ss
push
imul
add
jmp
dec
out
dec
push
jnp
fcomp
out
js
les
push
cmp
ror
adc
jp
xor
push
or
push
pop
(bad)
out
or
pop
pop
add
xchg
ins
mov
push
push
dec
or
pop
inc
push
pop
xchg
and
push
push
or
xchg
(bad)
jp
dec
mov
ffree
mov
loopne
adc
lods
cmp
popf
jb
scas
xor
xor
xor
enter
das
xor
or
cmp
scas
sbb
out
stc
clc
sub
out
rol
sbb
rcr
push
fsub
test
stc
je
lds
inc
fimul
aad
and
jmp
jae
add
dec
leave
adc
sub
call
call
or
mov
mov
mov
or
fild
jae
push
jnp
rcl
into
jo
mov
mov
xlat
sub
mov
pop
test
stos
adc
inc
imul
stc
nop
ins
scas
cmp
outs
cmp
jns
ja
mov
pop
add
inc
xchg
sar
ss
movs
in
and
nop
out
movs
xor
jp
outs
ror
arpl
or
sbb
retf
mov
push
pop
in
daa
sbb
lea
gs
lahf
adc
pop
sub
jns
imul
jl
icebp
add
mov
mov
fcom
ja
cwde
mov
push
jae
std
add
mov
imul
das
and
mov
pop
and
das
aas
imul
adc
fnstcw
sbb
cmps
jg
mov
inc
dec
stos
mov
lods
ror
jl
out
mov
inc
pop
movs
xchg
sbb
add
scas
ins
repz
mov
pop
shr
shl
fiadd
push
aam
mov
fld
inc
add
sbb
mov
fld
pop
xor
dec
adc
fld
and
push
enter
mov
mov
push
mov
out
add
out
xchg
push
mov
inc
or
dec
adc
lock
and
shr
mov
stc
and
push
pop
xor
sets
loop
sub
aad
cwde
cwde
push
or
rcl
(bad)
jmp
mov
repz
(bad)
jg
test
xchg
fsubp
cmp
cwde
push
mov
out
mov
and
sub
sub
scas
fs
retf
xor
movs
mov
dec
stc
jg
outs
neg
data16
leave
jle
shl
jno
or
adc
les
xchg
(bad)
mov
leave
push
(bad)
jmp
(bad)
cmps
sub
in
push
pop
mov
mov
arpl
cwde
add
xchg
mov
jp
xlat
jmp
or
test
loop
sbb
cld
push
jne
leave
xchg
and
fsubr
sbb
fs
inc
std
jno
jmp
je
pop
int3
xor
out
mov
aad
xchg
or
or
fistp
mov
and
fnstcw
adc
mov
nop
stos
loope
fdivp
add
or
mov
frstor
dec
jge
ins
pop
pop
ds
mov
xchg
inc
mov
adc
rol
dec
mov
mov
mov
mov
arpl
ror
inc
ret
push
fsubr
lds
push
imul
mov
mov
in
inc
fiadd
add
jnp
out
lods
stos
inc
fyl2x
adc
adc
icebp
test
push
mov
and
fcomip
sbb
cmp
mov
(bad)
aas
dec
cmp
xchg
push
cmps
jp
fistp
and
pusha
loope
repz
and
les
or
loop
jp
inc
mov
add
jmp
test
scas
xchg
pushf
mov
sub
push
jae
int
adc
push
pop
aam
(bad)
into
push
lock
imul
push
sub
add
ficomp
(bad)
movs
jns
sbb
pop
jp
ja
cmp
call
add
mov
js
cmc
hlt
stos
jl
mov
lods
stc
mov
ror
add
xlat
mov
xor
ret
loope
mov
dec
mov
ins
add
push
ret
pop
fnstsw
or
add
sub
test
dec
push
imul
sub
adc
mov
outs
iret
dec
movs
push
pop
cmp
pushf
jns
mov
mov
pop
ret
(bad)
jne
fimul
dec
mov
aam
mov
xchg
mov
fdiv
cmp
rcr
rcl
cmp
or
add
inc
pop
jg
(bad)
xlat
sbb
dec
jnp
(bad)
daa
lods
or
pop
cwde
pop
xor
or
jmp
nop
xchg
popa
xor
das
xlat
mov
mov
dec
test
dec
call
ss
push
pop
cmps
mov
mov
jl
dec
repnz
iret
mov
xchg
add
jae
sbb
out
mov
in
xor
ret
xchg
jl
jmp
inc
push
xor
sti
dec
cmps
push
bound
scas
push
mov
dec
sbb
into
sbb
cmp
inc
adc
mov
(bad)
cmp
add
inc
bound
mov
(bad)
in
rcr
cmp
rcl
and
rcr
neg
out
lods
push
or
popa
push
clc
xchg
stc
xchg
jnp
test
leave
pop
in
cmps
(bad)
aam
fsubr
or
call
sahf
cs
cli
ds
int3
shl
or
(bad)
inc
mov
iret
dec
pop
push
xor
mov
repnz
or
fistp
mov
sbb
arpl
sbb
jno
pop
call
sbb
xor
dec
dec
shl
arpl
les
jno
mov
hlt
add
cmp
mov
cmovle
adc
mov
push
add
jb
aam
mov
jle
fwait
sub
cmp
jno
mov
sti
es
or
push
repnz
xchg
fst
jge
add
outs
mov
adc
(bad)
mov
mov
sar
jo
add
jmp
lods
int3
leave
cdq
cmp
outs
fwait
pop
clc
es
rol
fstp
cmps
adc
ds
cmp
adc
xchg
lods
dec
gs
pand
adc
sub
sub
fimul
ret
sbb
iret
mov
retf
pop
test
loope
sbb
test
sbb
cmp
fs
xor
push
shr
xchg
lods
stc
test
(bad)
ficom
push
or
mov
repz
jmp
std
pop
fidivr
(bad)
les
push
add
push
or
or
shr
push
jns
push
fs
mov
jb
xlat
jno
cdq
dec
mov
mov
cwde
xor
jg
cmp
fsubr
xchg
popf
pop
xchg
cmc
icebp
ja
add
push
cmc
push
adc
sub
daa
sar
movs
pop
aam
(bad)
xchg
push
stos
scas
lahf
dec
ror
or
xlat
xchg
lea
hlt
out
jnp
test
push
push
cmp
in
loope
daa
xlat
sbb
sub
int3
cmp
pop
pop
pop
cdq
pop
(bad)
nop
scas
inc
add
sbb
adc
fdiv
jnp
xor
fcomp
inc
add
sahf
jns
mov
mov
shl
jl
lahf
pop
add
popa
xor
inc
mov
mov
pop
cdq
mov
xchg
shl
in
movs
daa
loope
fs
push
cmp
mov
mov
leave
mov
aam
push
cmc
mov
and
sbb
lods
push
xchg
(bad)
nop
jae
mov
sub
cmc
into
lds
sub
mov
lahf
lods
inc
add
(bad)
pop
mov
inc
enter
ss
icebp
inc
mov
adc
mov
and
sub
sub
mov
repz
jb
sbb
test
mov
xchg
ds
sbb
xchg
jmp
add
push
pop
sub
pop
ds
lea
adc
or
ds
and
adc
iret
and
shl
pop
lock
nop
mov
jns
ret
mov
jle
mov
lea
scas
sahf
jecxz
dec
inc
sbb
test
xor
loopne
and
out
mov
fsub
loop
mov
push
mov
and
in
dec
fidivr
jge
stc
pop
pop
adc
vmread
or
xor
and
xchg
mov
adc
pop
mov
inc
mov
ja
rcl
mov
mov
xchg
jb
js
stos
sub
dec
dec
mov
pop
daa
stos
add
inc
out
sub
in
mov
sbb
xchg
arpl
imul
out
inc
(bad)
stc
adc
mov
xchg
sub
sbb
hlt
loope
fadd
mov
sbb
jmp
fisubr
aam
mov
clc
shl
mul
mov
fsub
adc
inc
aas
mov
outs
or
ret
push
mov
xchg
icebp
xchg
xchg
adc
fxch
add
mov
leave
ins
dec
xor
push
pushf
ja
cs
mov
fild
mov
nop
std
xchg
repz
adc
jl
(bad)
pop
and
jp
sahf
cdq
popa
push
xchg
and
mov
stos
mov
arpl
cmps
lar
xor
frstor
aaa
jg
call
movntps
add
jo
add
dec
dec
dec
and
sbb
cmp
les
xchg
ss
xchg
pop
test
mov
rcl
xchg
xor
repnz
dec
icebp
popf
inc
push
(bad)
push
(bad)
or
js
xchg
fwait
push
lock
movs
xchg
ja
xchg
stos
stos
push
cmps
push
hlt
sbb
cmp
cmp
in
je
(bad)
aad
mov
data16
xchg
sub
rol
dec
sub
mov
outs
sbb
gs
push
pop
xor
pop
xor
pop
inc
les
mov
imul
cmp
inc
fidiv
test
sbb
test
je
or
je
and
push
sub
cli
cld
pop
repnz
ss
jge
(bad)
repz
and
call
ret
sahf
xor
mov
mov
out
inc
out
cmps
pop
mov
cmp
push
xor
movs
ret
loopne
add
popf
dec
push
fwait
cmps
dec
or
shl
pushf
cmps
cmps
iret
enter
sti
push
loopne
test
test
frstor
xor
neg
sub
mov
fiadd
and
sbb
das
lock
fnstsw
xchg
push
nop
mov
mov
test
outs
aad
and
sub
sbb
adc
out
jo
in
lds
and
cmp
pop
xlat
cmp
lock
das
stos
fadd
sbb
movs
jge
xchg
adc
iret
aad
stos
jle
push
cmp
mov
jl
std
fcom
jl
jno
xchg
out
pusha
mov
setg
dec
daa
xchg
xchg
fstp
cmp
in
xchg
loopne
ds
sbb
gs
inc
xchg
xor
sub
sub
arpl
int3
add
cmp
aaa
adc
stc
in
or
cmp
(bad)
(bad)
lahf
cmps
push
mov
(bad)
push
push
sub
pop
mov
sub
mov
or
loopne
out
js
aas
sbb
adc
push
les
xor
inc
lods
loope
popa
add
pop
add
push
rol
daa
mov
jge
cmp
mov
jecxz
push
adc
xor
sbb
sti
jno
test
dec
jle
test
cmps
mov
add
ja
mov
jo
(bad)
and
bound
leave
dec
inc
adc
sbb
mov
idiv
stc
dec
test
mov
rcr
in
popf
dec
repz
cmp
outs
lds
(bad)
outs
push
mov
and
and
mov
lahf
stc
or
ja
fxch
cli
adc
call
lock
add
fcmovne
or
inc
add
dec
xchg
and
loop
xlat
xor
push
push
ss
push
cmp
xlat
add
retf
ja
jno
add
sar
and
shr
mov
fiadd
dec
pop
pop
adc
or
and
mov
mov
adc
fwait
pushf
outs
or
int
xlat
jns
sub
pop
repnz
sub
push
and
es
push
adc
imul
mov
popa
inc
das
mov
mov
test
ja
jo
cdq
fstp
pop
aas
mov
xor
js
jmp
xor
mov
jmp
or
and
adc
ja
mov
push
imul
mov
or
ret
bound
xchg
and
push
pop
xchg
jl
sub
push
pushf
mov
test
outs
and
jo
xor
mov
mov
jb
idiv
sub
xlat
push
mov
or
aas
in
jg
das
out
add
rcr
push
mov
push
adc
sbb
sahf
int3
sub
xor
xor
inc
out
inc
aas
adc
pop
shl
add
iret
int
xchg
imul
out
and
jg
push
cmp
jge
in
test
ds
jmp
xor
popa
or
pop
mov
jecxz
rcl
imul
scas
inc
jbe
pushfw
push
xchg
dec
mov
ins
push
mov
pop
(bad)
jnp
mov
inc
add
inc
inc
dec
lea
jecxz
xlat
mov
dec
jle
rcl
cmps
mov
rcr
mov
outs
inc
mov
jecxz
mov
dec
cmp
mov
mov
dec
div
ins
inc
leave
repz
call
add
pop
xor
ret
nop
imul
push
mov
(bad)
mov
xor
xchg
xchg
pusha
pop
push
(bad)
dec
stos
mov
mov
xor
(bad)
in
nop
je
jle
inc
mov
outs
shl
pop
std
scas
int
mov
into
or
push
das
outs
inc
test
adc
xchg
jno
mov
inc
nop
and
pop
ficomp
test
loope
aas
mov
rcl
pop
shl
sub
mov
call
fidiv
jmp
(bad)
dec
inc
ins
lods
dec
ret
or
test
and
push
cmp
inc
(bad)
dec
inc
clc
cmp
pop
iret
test
imul
mov
sub
popf
inc
loop
loopne
adc
mov
sbb
repnz
jbe
jns
dec
xor
bnd
mov
std
pop
out
mov
jge
jecxz
lahf
pop
jmp
push
jnp
mov
adc
jg
and
xor
imul
stos
sbb
scas
jmp
imul
pop
jb
in
arpl
retf
leave
sub
mov
mov
sbb
mov
out
xor
push
mov
jmp
rcl
mov
xor
lods
jo
add
and
push
mov
sti
pop
jmp
inc
and
aaa
mov
out
jp
cs
lods
cld
push
jl
dec
stos
mov
std
xchg
imul
add
outs
mov
fs
sub
loop
(bad)
mov
sbb
loopne
das
add
sub
pushf
xchg
adc
cli
aad
mov
pusha
(bad)
xchg
or
inc
in
fcomip
ja
jge
mov
jge
add
pushf
mov
push
fist
cwde
into
jge
cli
imul
stos
fwait
leave
dec
imul
xor
mov
pop
repz
inc
out
jg
jp
sbb
pop
gs
(bad)
cmp
test
into
hlt
into
retf
mov
cmp
jne
mov
adc
push
xor
stc
cli
and
pusha
push
addr16
xchg
outs
icebp
test
shl
stos
adc
(bad)
mov
call
xor
push
out
pop
outs
xchg
retf
dec
mov
cdq
pop
sub
push
addr16
and
repnz
dec
cmp
iret
inc
sub
sub
mov
ror
jnp
mov
and
jge
pop
bound
mov
dec
cdq
sub
cmps
imul
cld
les
pop
dec
jne
hlt
ror
xchg
gs
add
pop
aam
jge
add
mov
adc
pop
cmps
loope
das
add
or
inc
mov
test
fsubr
jp
pop
xlat
push
mov
and
jle
dec
jle
clc
adc
and
inc
mov
add
imul
xor
fwait
mov
and
fwait
cmp
jmp
sub
dec
pop
mov
push
test
adc
mov
jmp
lock
and
(bad)
repz
xor
addr16
pop
clc
scas
nop
cdq
sahf
xchg
int
aad
ins
dec
ror
sbb
sbb
shr
or
scas
and
mov
scas
hlt
push
ds
push
jb
inc
lds
fsub
mov
xor
dec
xor
or
lods
xor
pop
cmp
mov
xor
xor
lea
pop
lds
(bad)
cmp
mov
and
scas
pop
(bad)
in
adc
in
add
xchg
inc
test
mov
jbe
lahf
xor
xlat
out
dec
push
loopne
adc
popa
inc
add
inc
clc
nop
or
add
mov
sbb
push
ror
sub
mov
adc
adc
mov
jmp
icebp
loop
mov
in
jmp
cmp
enter
nop
xchg
scas
mov
jge
push
out
adc
dec
push
outs
in
add
sub
sub
cmp
test
jmp
or
cmp
jmp
or
jae
retf
xor
push
dec
mov
scas
ins
hlt
or
shl
push
mov
add
or
pop
mov
ja
jns
dec
adc
jl
shl
out
ins
add
jbe
mov
xchg
out
sbb
mov
movs
in
test
fcomp
push
xchg
inc
in
sub
mov
call
gs
test
mov
outs
inc
jne
sti
mov
repz
mov
imul
in
or
inc
jge
fdiv
sbb
fcmovu
mov
or
mov
loop
jae
jb
push
sbb
mov
pop
pop
jmp
xor
add
bnd
(bad)
jb
adc
loope
and
ror
pop
out
(bad)
loope
pop
dec
cdq
inc
fst
ror
pushf
sub
pop
adc
pop
daa
inc
out
ja
sbb
cmp
test
cmc
fwait
push
mov
cmp
mov
sbb
fcomp
adc
dec
inc
adc
fist
pushf
push
popa
push
mov
or
cwde
jns
dec
lahf
out
and
je
mov
fist
call
mov
scas
jp
mov
cmp
test
outs
ins
inc
inc
pusha
sbb
fst
repnz
mov
std
adc
lahf
call
add
sub
dec
ins
repnz
pop
mov
push
rcr
(bad)
in
or
mov
popa
or
xor
mov
bound
jecxz
out
nop
add
jmp
lods
and
inc
xchg
mov
or
jmp
fisubr
sbb
pushf
pusha
inc
cmp
ja
bound
dec
es
and
fnstcw
sbb
xchg
cld
add
or
les
repz
push
retf
lock
jbe
pop
test
add
inc
call
jg
aas
mov
push
aam
dec
adc
or
cmp
rcr
mov
lds
or
mov
dec
test
sti
loop
cmp
in
out
mov
and
cmps
in
cmp
and
sbb
inc
mov
fnstsw
adc
sar
and
mov
pop
xor
xchg
out
(bad)
push
aad
lock
mov
mov
xchg
fstp
dec
comiss
jb
adc
mov
clc
jne
loop
shr
leave
sbb
adc
add
inc
mov
outs
cdq
bound
pop
repz
lods
imul
jmp
addr16
sar
pop
lods
inc
xchg
or
leave
pop
inc
jae
push
es
fistp
loopne
mov
sub
call
inc
addr16
mov
in
data16
push
sti
and
pop
jmp
jl
ror
xchg
jae
push
jno
jmp
int3
jg
in
and
pop
jnp
sahf
ret
pop
xchg
dec
push
aam
pop
movs
out
or
imul
add
inc
sbb
jmp
addr16
cmp
ror
es
pop
cmp
in
xor
repz
sbb
ins
and
cdq
idiv
leave
lods
add
stos
int
inc
push
jle
mov
adc
movs
xor
mov
adc
(bad)
stc
sahf
xor
jnp
aas
jl
cmp
sbb
(bad)
and
lock
lods
add
push
outs
cmps
aas
int
inc
or
mov
jp
pushf
pop
push
mov
inc
imul
cmps
adc
pop
fbstp
retf
pop
rol
push
scas
xchg
cdq
ja
ja
jp
or
mov
or
or
or
push
dec
jbe
xor
cmps
add
cmps
aad
(bad)
shr
xchg
jb
xor
jo
sub
es
mov
lods
inc
mov
jecxz
adc
mov
imul
mov
ins
jl
pusha
add
push
pop
repz
mov
jl
sahf
jmp
and
push
call
mov
push
mov
jmp
mov
mov
stos
out
mov
(bad)
arpl
add
test
inc
jecxz
sub
or
push
icebp
inc
mov
xor
das
jmp
addr16
imul
cli
aad
out
aas
inc
xchg
shr
mov
xchg
aam
in
dec
rcl
pop
out
dec
mov
and
ss
add
daa
je
and
popf
sub
scas
in
fstp
out
push
retf
outs
jb
in
add
jg
mov
add
cdq
aad
push
push
jl
(bad)
mov
call
(bad)
aaa
sahf
or
cmp
xchg
std
add
je
cmps
adc
sub
arpl
mov
and
sbb
pushf
xlat
xchg
jns
in
jp
sbb
imul
lods
inc
rcl
pop
add
pushf
das
add
es
ss
jns
jg
push
in
fld
popa
mov
push
jg
addr16
jl
in
pop
sub
jnp
fwait
push
jo
push
sub
outs
cmc
fdivr
ins
enter
jns
xchg
iret
dec
das
mov
jo
xchg
cmp
shr
lds
mov
mov
push
jne
cmps
shr
cdq
inc
fnstsw
xor
sub
lfs
inc
lods
daa
test
rcr
dec
pushf
sbb
sbb
les
jg
xchg
daa
sub
jecxz
pop
xchg
push
mov
in
mov
lods
push
fbstp
fs
push
push
add
cs
or
loope
xlat
mov
mov
and
sbb
push
mov
loopne
out
daa
scas
mov
aas
push
loopne
lods
std
sub
push
loope
pop
shl
(bad)
sar
inc
and
mov
popa
(bad)
pop
in
pop
push
nop
mov
or
movs
shl
movs
arpl
xchg
adc
mov
mov
fidiv
mov
arpl
push
gs
aad
cmp
movs
jmp
xor
outs
out
push
jns
test
mov
not
pop
sub
mov
add
cmp
dec
clc
(bad)
cmp
fs
jl
pop
fs
(bad)
popa
in
xchg
rol
mov
dec
and
sbb
loope
cli
pop
dec
sub
fwait
imul
cmc
xor
int3
mov
rcr
imul
xor
shl
ins
and
repz
sub
lea
pop
cmp
push
fisub
add
scas
lock
call
pop
sbb
xor
in
repnz
push
mov
test
or
call
sahf
dec
push
jno
in
jmp
out
lds
jle
cmp
cli
fisubr
mov
cdq
sub
pop
add
xlat
mov
fstp
cmps
ror
arpl
sub
jb
stos
xor
mov
sbb
xor
retf
xchg
or
and
mov
jmp
call
hlt
call
inc
mov
movs
and
ins
popf
inc
popf
popa
call
aad
push
sar
add
push
sub
lods
mov
icebp
shl
sub
test
mov
and
out
adc
push
add
in
xchg
dec
pop
out
push
hlt
cmp
in
cmc
sbb
cdq
cmc
popa
pop
jmp
and
cwde
add
cs
jne
inc
rol
xor
sub
aaa
in
mov
sbb
cld
aas
push
push
inc
shl
jns
retf
daa
mov
aad
jl
into
js
sbb
scas
cmps
add
into
loopne
stc
inc
or
daa
js
mov
xchg
mov
repnz
in
shl
or
push
add
jp
dec
and
jg
sbb
push
lahf
push
stos
jbe
call
or
rcl
pop
lods
xchg
and
cmp
pop
das
repz
mov
sbb
mov
mov
adc
sub
jge
stc
mov
push
mov
ret
dec
sbb
and
sub
(bad)
lods
pop
pop
mov
aam
and
aam
(bad)
push
jns
imul
and
mov
lds
xor
loopne
out
ja
fcomp
and
or
sub
repz
add
cmps
loope
outs
sub
pop
jns
rcr
cwde
mov
in
mov
jmp
jl
hlt
mov
cmp
ins
add
xor
pop
rcl
in
jge
lahf
rcr
xor
add
and
dec
push
mov
mov
mov
enter
dec
pop
or
ds
fist
add
outs
push
das
mov
add
pop
push
inc
jg
call
clc
(bad)
out
dec
push
inc
clc
rcr
mov
test
sar
test
sub
mov
out
aas
jl
shl
scas
loope
jl
adc
and
ficom
fwait
ins
mov
push
pusha
sbb
sub
pop
jae
fst
into
imul
inc
mov
pop
loopne
dec
aas
ss
sub
lods
in
aas
enter
lods
ficom
xor
pop
fs
fist
push
inc
push
enter
in
inc
iret
mov
imul
sbb
aad
(bad)
sub
daa
or
dec
out
xchg
(bad)
mov
jmp
push
xchg
sbb
sbb
(bad)
mov
sub
or
call
out
xchg
sbb
adc
add
imul
push
push
int
xchg
outs
inc
lock
mov
imul
sbb
stos
loopne
mov
mov
data16
out
sub
push
push
or
mov
add
lea
jb
add
jmp
in
pushf
xor
and
mov
pop
cmp
sub
aas
add
cmp
lea
pop
std
fisubr
mov
add
jno
popf
ds
mov
jne
clc
jne
push
(bad)
retf
ins
call
jp
loopne
ret
scas
(bad)
retf
dec
or
pop
ret
aad
jne
call
ja
sbb
sub
inc
xchg
in
cmp
aas
dec
fadd
add
or
mov
push
inc
jb
aam
repnz
pop
jae
mov
stos
addr16
add
and
pop
ss
add
fild
(bad)
ja
loop
sti
rol
sbb
mov
pushf
lea
mov
into
int3
cmp
ret
ja
jns
fsub
dec
mov
adc
in
fistp
pop
xlat
sub
(bad)
int
popa
cmp
add
jb
xor
mov
push
or
sti
mov
test
loop
retf
mov
je
or
retf
xchg
and
mov
mov
std
(bad)
(bad)
stos
inc
and
addr16
sub
aaa
das
mov
add
adc
das
xlat
and
es
or
mov
xchg
jecxz
sub
jb
or
daa
call
jbe
call
pop
xchg
jp
mov
xchg
jl
(bad)
jmp
aam
mov
adc
sbb
add
mov
outs
push
cmc
mov
scas
push
pop
adc
retf
jge
adc
push
jbe
cmps
xor
loop
stc
xor
mov
dec
mov
jecxz
nop
xor
inc
fld
add
(bad)
jne
sbb
call
cmp
das
add
add
push
int3
inc
xor
or
div
mov
in
mov
repnz
mov
sub
adc
dec
cmp
ror
test
fadd
lds
ins
fimul
xchg
sub
inc
xor
xlat
ds
jno
outs
mov
add
pop
jo
fisttp
pop
div
aad
test
mov
adc
pop
je
xor
lea
push
dec
jb
sar
push
mov
nop
fimul
outs
jbe
mov
fucom
repnz
movs
fdivr
xor
jne
outs
add
mov
mov
(bad)
push
nop
cmp
dec
data16
ret
pop
fwait
addr16
cld
std
pushw
adc
lods
in
sbb
mov
fwait
and
mov
jno
sub
(bad)
rol
sti
jnp
and
ins
or
ss
ins
push
inc
or
push
bound
mov
mov
sbb
mov
lea
or
mov
dec
mov
fisub
cmp
popa
jns
std
stc
mov
inc
cmps
mov
call
jns
(bad)
mov
mov
sbb
arpl
outs
pop
mov
mov
(bad)
cld
inc
stos
sbb
arpl
in
loop
rcr
inc
push
jne
lock
pushf
(bad)
and
inc
retf
call
inc
mov
jp
jecxz
and
jmp
xchg
mov
jg
pop
mov
(bad)
movs
add
or
and
outs
mov
cli
sti
push
sti
mov
xchg
fsubr
sbb
cmp
xchg
mov
dec
in
out
jecxz
test
out
mov
nop
pusha
fild
call
pop
ins
(bad)
mov
adc
and
pop
mov
sbb
mov
fldenv
retf
jle
aas
stos
or
data16
sub
bnd
sub
inc
mov
pop
dec
inc
in
jmp
in
push
lds
cmps
outs
adc
pusha
int
loopne
sub
cdq
push
rcr
mov
ss
push
inc
js
loope
inc
sbb
enter
rcr
and
pop
aaa
jl
call
out
mov
xchg
clc
stos
mov
cmp
fdiv
inc
scas
jp
xor
mov
pop
jnp
dec
popa
add
scas
dec
repz
out
repnz
push
sar
cmps
les
sbb
das
fwait
popa
xor
cmp
add
repz
or
push
out
mov
inc
test
xchg
stos
sub
dec
jno
dec
push
cmc
std
mov
sbb
or
ins
sub
stos
and
data16
push
aad
jmp
hlt
repnz
adc
out
imul
test
(bad)
dec
pop
cmp
inc
fdiv
pop
out
loope
rcl
outs
mov
dec
int
leave
outs
inc
repz
icebp
scas
test
xchg
call
pop
shl
inc
and
iret
xchg
and
pop
inc
sbb
(bad)
cdq
cmp
push
fsubr
mov
std
mov
pop
inc
fimul
cmp
rcl
lock
pop
pop
xor
mov
addr16
xchg
std
ins
lock
xchg
jns
je
in
mov
sub
ja
mov
mov
or
sti
or
lock
inc
loopne
mov
and
push
cld
adc
scas
fst
or
push
push
xlat
push
ins
dec
mov
daa
(bad)
out
sub
xchg
push
leave
inc
lods
fild
test
loope
ja
dec
or
dec
popa
xlat
repnz
sbb
and
adc
out
push
pop
inc
jmp
sbb
mov
icebp
mov
dec
int3
mov
mov
retf
rcl
sahf
mov
popf
mov
daa
in
adc
xchg
inc
xor
iret
pop
adc
xor
std
js
push
and
mov
in
fstp
movs
mov
mov
in
data16
lock
ds
xchg
pop
gs
adc
inc
aam
cli
rcl
ins
addr16
xor
jecxz
sahf
and
push
sub
adc
retf
and
cmp
push
add
inc
stos
xchg
test
dec
jno
iret
add
addr16
mov
lds
jbe
inc
inc
sub
mov
jl
pushf
push
imul
shl
mov
inc
push
out
push
jae
add
xchg
add
push
in
push
aad
out
jmp
add
xchg
lock
add
or
push
enter
inc
clc
jecxz
test
push
call
outs
xor
adc
in
push
out
mov
dec
je
and
sahf
adc
cdq
fs
popf
mov
lods
mov
inc
rcr
mov
push
cmps
cli
ins
cmp
or
jo
sbb
cmp
fst
lea
mov
jno
fsubr
sbb
push
dec
neg
lea
daa
(bad)
imul
stos
stos
inc
dec
dec
mov
test
or
aaa
movs
idiv
dec
pusha
or
mov
dec
sti
std
jl
les
jnp
pop
test
aad
pop
xchg
push
aas
adc
cmp
push
fisub
test
scas
xor
dec
movs
mov
add
ins
into
nop
sbb
mov
cmp
or
mov
das
inc
scas
dec
imul
in
in
fcmove
and
test
pop
out
push
arpl
xor
sahf
sub
push
daa
dec
in
jmp
enter
sbb
loop
or
add
sbb
retf
mov
addr16
push
mov
rol
ss
je
mul
sub
out
call
sub
lods
fcmove
xor
pop
push
sub
pop
aad
int
sbb
xor
cmc
jnp
sti
aad
adc
sbb
jne
imul
inc
mov
pop
pushf
mov
cmp
movs
pushf
(bad)
nop
shl
jmp
pop
cmps
fild
xor
mov
rcr
pop
inc
ror
(bad)
push
jp
popf
lahf
add
fs
fsubrp
inc
push
xchg
outs
dec
jno
call
cld
shl
lock
sbb
daa
popf
mov
sbb
idiv
pop
xor
mov
shr
iret
dec
aas
xchg
adc
cli
xor
mov
push
pop
adc
mov
movlps
ins
inc
sbb
pop
lock
movs
cwde
sbb
sbb
push
push
inc
mov
je
sub
test
xchg
loop
mov
push
loop
or
pop
into
jg
cmc
sbb
mov
(bad)
jecxz
jbe
lea
pop
mov
push
push
mov
stos
psrlw
neg
mov
popf
scas
and
or
ja
xchg
mov
push
shl
retf
lahf
and
dec
test
xlat
retw
test
les
sbb
jbe
cmp
data16
fwait
pop
(bad)
ret
sbb
adc
scas
jmp
imul
aas
jl
ins
ret
es
fistp
cmp
pop
out
xor
mov
adc
ins
shr
iret
add
call
stc
mov
call
sub
out
rol
dec
js
cmps
sbb
push
retf
shl
mov
fs
and
clc
mov
pop
pop
js
pop
pop
xor
(bad)
dec
inc
das
mov
popf
adc
sbb
std
lods
sub
push
dec
jno
inc
mov
retf
fwait
scas
and
daa
cmps
mov
mov
add
fstp
in
dec
xchg
push
fs
cmps
movs
aaa
pusha
add
sbb
xchg
mov
and
adc
aam
cdq
cdq
inc
gs
into
xchg
mov
pop
xchg
fcomip
fld
div
mov
movs
push
xlat
dec
xlat
sbb
neg
aad
lea
cmps
inc
dec
mov
out
jmp
xchg
movs
and
cdq
les
and
jne
pop
sbb
dec
dec
retf
in
test
cmp
(bad)
jo
pusha
shr
cmc
dec
cmp
clc
cdq
mov
sbb
pop
aad
fldcw
hlt
mov
in
inc
pop
jbe
push
jecxz
rol
enter
xor
pop
fcmovu
xchg
inc
adc
gs
xchg
sbb
push
jge
fsub
jmp
ror
cmp
fmul
sti
(bad)
aam
mov
jno
cmp
aas
jp
jmp
mov
add
or
rcr
xor
pop
cmc
enter
mov
xchg
and
cmp
push
(bad)
out
inc
lds
cld
adc
jmp
lahf
mov
es
sbb
hlt
nop
mov
adc
inc
push
fwait
jl
js
dec
adc
mov
cmps
daa
shr
fistp
sbb
(bad)
fld
sub
add
sar
popa
gs
(bad)
(bad)
imul
or
ds
jne
inc
and
cmps
sub
sbb
out
leave
mov
ins
mov
xor
dec
jnp
ss
lods
aas
mov
retfw
push
mov
adc
jnp
aas
adc
iret
sbb
jmp
or
push
ret
out
mov
movs
xor
repnz
mov
dec
push
lahf
inc
mov
scas
fistp
sbb
jns
sbb
std
and
fisub
add
inc
dec
sbb
jb
imul
jb
mov
jo
jecxz
add
xor
xor
add
xchg
xchg
gs
mul
xchg
rol
mov
ja
mov
sub
(bad)
sahf
nop
mov
loop
jmp
mov
movs
int
(bad)
clc
stos
cmc
sbb
and
sbb
ret
repz
push
stos
jbe
sbb
dec
cmp
and
imul
in
pushf
mov
mov
int
cmc
xor
inc
sbb
out
gs
adc
push
std
inc
pop
lea
and
push
lea
inc
and
dec
fldenv
sahf
inc
cmp
iret
mov
mov
add
les
int3
and
ins
dec
dec
leave
xor
or
cmp
xor
fisttp
(bad)
frstor
dec
mov
psadbw
pusha
mov
or
shl
cmp
out
les
in
sub
cli
pop
popf
jmp
retf
or
pop
jno
in
inc
xchg
aas
mov
sbb
jmp
dec
jbe
dec
xchg
mov
in
inc
pop
sar
icebp
(bad)
repnz
fimul
sbb
and
xchg
icebp
dec
in
mov
test
lahf
ja
mov
mov
enter
jmp
icebp
fld
mov
sbb
pop
sbb
sub
mov
pop
mov
mov
imul
inc
add
(bad)
test
ror
cmp
xchg
div
xor
pop
les
clc
cmp
ins
sub
call
sar
loopne
out
mov
sub
ror
mov
mov
aaa
mov
clc
dec
stos
shl
inc
rol
xchg
mov
jl
xor
jo
mov
xchg
stos
sub
rol
aaa
les
in
loop
ret
cmp
mov
nop
fdivr
and
jle
mov
inc
pushf
or
jmp
xchg
out
or
(bad)
pushf
mov
mov
lds
ds
fimul
mov
mov
jp
out
inc
(bad)
out
outs
enter
ja
mov
jl
jne
or
add
mov
mov
stos
loope
out
mov
sub
dec
outs
out
xrelease
mov
stc
inc
outs
scas
cwde
xor
dec
(bad)
out
repnz
push
adc
xlat
pop
push
push
cmp
dec
int
adc
adc
stc
or
bound
clc
push
and
sbb
enter
or
adc
or
retf
cmp
(bad)
inc
ds
adc
add
inc
xchg
stos
fwait
ret
push
jp
fnstcw
dec
mov
push
stos
or
inc
hlt
jg
adc
cld
sub
repnz
mov
mov
stos
fild
stc
jne
cmp
jb
pop
mov
or
jb
ror
test
mov
cmps
fdiv
shl
and
pusha
and
jg
test
sti
iret
fcmovu
cmp
mov
xchg
mov
sub
and
out
dec
ss
mov
pop
adc
sub
sbb
into
and
loop
push
cmp
paddsw
mov
shr
push
neg
clc
or
cmps
(bad)
cmp
mov
cmps
aam
mov
aam
in
fidiv
mov
mov
enter
daa
mov
or
mov
into
cwde
push
mov
je
cdq
faddp
aaa
aam
push
enter
push
ds
or
sub
sbb
lock
or
mov
mov
ja
sub
std
and
mov
cmp
sub
jmp
sar
jmp
lock
lock
aaa
out
mov
fdiv
sar
sbb
xchg
or
lds
xor
test
fwait
add
ret
jbe
sbb
push
add
loope
outs
scas
inc
dec
mov
pop
add
fdivr
lahf
lock
imul
daa
inc
fisubr
inc
cmps
loopne
cmp
jno
jge
xor
jge
(bad)
aaa
aaa
sub
mov
pop
into
pushf
shr
ret
adc
and
push
pop
cli
ficom
stos
cmp
fild
jno
push
push
int
and
jns
pop
inc
pusha
or
shr
mov
dec
mov
mov
aaa
fnsave
add
(bad)
adc
lock
xchg
cmp
loop
jo
movs
cmp
pop
mov
xchg
push
cmp
sub
jne
lods
xchg
xchg
xor
mov
out
outs
imul
jns
dec
int
test
and
iret
dec
pop
pop
mov
xchg
or
jnp
ds
jge
fst
xchg
mov
inc
lds
push
fadd
(bad)
push
pop
test
stos
ins
push
mov
jo
adc
jl
repnz
out
push
call
dec
pop
inc
bound
out
add
inc
cdq
std
lods
and
push
out
lock
sbb
popa
sar
push
inc
mov
ret
repz
nop
mul
add
push
inc
sbb
mov
mov
mov
movs
shl
mov
jne
pop
in
xor
pabsb
push
iret
add
icebp
cmps
xchg
jbe
mov
push
cmp
push
or
mov
movs
adc
movs
mov
cmp
frstor
jge
imul
aaa
in
adc
in
sbb
adc
jmp
pop
scas
cmp
test
cmp
and
sbb
cli
rcr
std
jbe
aas
pop
icebp
dec
ss
push
retf
add
sub
xor
lds
rcr
add
repnz
(bad)
neg
xor
jne
dec
add
repz
movs
fistp
pop
add
cmc
out
mov
add
or
mov
in
mov
mov
sahf
js
mov
push
lahf
cmps
sbb
xchg
std
repnz
sbb
mov
mov
outs
shl
cmp
pop
cld
(bad)
nop
sub
in
sub
loopne
and
sub
and
mov
addr16
out
in
cld
shl
das
xchg
pushf
cdq
adc
cmp
out
mov
and
xor
add
scas
adc
xchg
je
jns
add
mov
sub
call
call
retf
mov
sbb
pop
cmp
dec
adc
mov
xor
dec
mov
cmps
or
add
scas
and
sub
lea
scas
push
shr
xor
jae
ins
push
mov
fstp
sub
bound
das
and
push
jge
popa
les
(bad)
out
daa
dec
jb
mov
push
es
and
sub
sub
add
icebp
sti
out
(bad)
je
sub
or
popf
cmp
pushf
pop
push
mov
pop
push
sti
inc
daa
cmp
mov
pop
lea
retf
and
cmp
mov
dec
cli
lea
pop
mov
leave
fdivr
popf
fidivr
or
xchg
xchg
les
out
adc
jge
shr
mov
xor
sub
sub
inc
push
pusha
add
and
(bad)
sub
imul
mov
test
fadd
dec
or
fadd
mov
add
and
test
xor
lods
(bad)
jb
adc
repnz
or
repnz
push
push
add
cld
pop
xor
jb
mov
inc
leave
out
sar
pop
nop
lahf
and
xor
retf
cmc
loopne
mov
arpl
(bad)
pop
(bad)
xor
movs
cmp
pop
inc
adc
cmp
dec
fs
add
int
fisttp
jae
ins
jb
mov
pop
scas
cmp
mov
mov
jne
(bad)
push
sti
mov
push
fwait
stos
mov
iret
pusha
inc
pop
cwde
inc
pop
add
add
or
popa
dec
fist
pop
add
adc
jnp
in
lds
movs
pusha
les
push
int3
push
pop
mov
cli
ror
add
nop
bound
cmc
outs
retf
fsubr
mov
push
repz
cmp
mov
int3
inc
daa
push
rol
mov
sub
cmp
xor
out
lock
cwde
das
push
or
outs
(bad)
sar
mov
(bad)
dec
into
xchg
pop
xchg
cmp
sub
jne
test
fnsave
dec
addr16
ret
jmp
into
movs
dec
loope
adc
fld
mov
movs
push
sub
jne
and
rcr
stos
stc
sbb
xchg
lea
data16
stc
push
xchg
scas
pop
sbb
xor
loop
adc
mov
movs
add
xchg
sbb
retf
pop
mov
adc
sbb
cmp
adc
not
movs
fcomp
inc
sub
cmps
cmp
adc
add
les
mov
lock
inc
in
mov
xrelease
and
out
sbb
cmp
fist
fisubr
out
mov
adc
dec
sub
and
cmp
add
aad
scas
fsub
mov
xor
sbb
out
inc
xchg
int
loope
jnp
mov
inc
sbb
aas
add
loopne
jmp
shl
inc
adc
std
pop
push
mov
jle
adc
imul
stos
call
adc
adc
add
inc
aad
sbb
aas
xor
aaa
movs
xchg
push
ds
add
or
mov
clc
jne
out
arpl
sbb
cli
lea
bsr
adc
out
std
push
mov
jle
(bad)
stc
dec
lock
mov
outs
(bad)
es
xchg
mov
mov
shl
mov
mov
and
add
cmp
sub
int3
pusha
fadd
or
adc
inc
je
mov
add
or
pop
xchg
bound
cmps
(bad)
addr16
out
jl
mov
xor
push
adc
mov
mov
push
lock
in
sahf
dec
call
sbb
mov
jns
dec
push
fsubr
shl
mov
inc
mov
sub
mov
push
cli
xor
dec
pusha
out
sahf
pushf
into
jecxz
ja
xchg
ds
or
in
and
fs
push
push
xlat
lods
aad
into
or
test
fs
outs
es
inc
jne
mov
or
into
cmps
cdq
push
dec
aaa
fidivr
aas
cmc
sbb
mov
pusha
cmp
outs
push
sub
daa
and
or
lahf
neg
xor
es
xor
sbb
iret
js
sub
gs
inc
sub
cmps
and
stos
cmp
jb
dec
iret
test
mov
dec
pop
popf
in
push
das
daa
mov
pop
sbb
mov
lods
iret
imul
or
inc
or
call
ss
inc
push
sti
in
nop
scas
or
or
push
mov
and
add
fwait
mov
fisttp
xor
dec
dec
popa
scas
jle
mov
dec
popa
ss
sar
out
sub
mov
mov
test
inc
pop
push
nop
cs
sar
stc
stos
xor
add
push
movs
into
sub
adc
cmp
fwait
clc
sti
jge
imul
and
xor
ds
das
call
push
and
adc
in
pop
push
cld
fild
nop
int3
(bad)
push
clc
aam
xor
push
fnstsw
add
sub
sub
jno
pop
repz
int
cwde
test
out
repz
movs
mov
mov
jmp
adc
xchg
sbb
in
mov
data16
imul
mov
leave
jl
push
or
inc
outs
jnp
cmp
aad
es
inc
loope
fistp
lea
jae
in
mov
mov
(bad)
adc
cs
lds
scas
cmp
imul
aas
ret
(bad)
in
jl
mov
retf
test
call
xchg
(bad)
sbb
stos
es
fdiv
je
imul
jecxz
in
mov
jecxz
fadd
add
cmp
test
retf
add
add
loop
call
or
imul
fwait
mov
out
add
mov
pop
and
cwde
std
lea
add
mov
popf
outs
xchg
leave
mov
xor
xor
pop
cdq
lds
cdq
ret
in
pop
cli
call
push
push
jmp
pop
cmp
sub
addr16
mov
inc
arpl
mov
push
adc
jb
push
(bad)
ds
mov
fwait
repz
out
fs
inc
inc
mov
push
je
stc
into
enter
iret
xchg
daa
add
mov
cdq
push
popf
in
push
mov
fcomp
mov
aam
sub
je
retf
xbegin
(bad)
xor
add
jg
dec
add
es
add
test
lea
int3
xor
xchg
or
retf
and
dec
inc
inc
adc
sub
or
int3
shr
pop
jno
pop
xor
ds
adc
push
sub
xor
mov
jne
push
loop
(bad)
and
hlt
inc
int
inc
pop
in
mov
pop
fs
cmp
adc
inc
lock
fcom
pop
push
push
loop
pop
sbb
mov
pop
arpl
aad
mov
pop
sbb
(bad)
mov
cmp
fistp
ret
sub
inc
ja
scas
cmp
adc
pop
mov
add
cld
jg
retf
inc
cwde
jb
shl
push
and
mov
mov
inc
mov
fldl2t
sbb
test
sar
or
and
arpl
mov
and
mov
bound
cmps
push
dec
pop
dec
push
cwde
cld
mov
repnz
push
shr
adc
adc
xchg
xor
ret
imul
inc
cmp
inc
fsub
pop
fiadd
das
adc
movs
arpl
out
addr16
(bad)
sar
movs
mov
sub
call
lock
leave
and
in
loopne
push
xchg
nop
repnz
rcr
stos
mov
stos
stc
int3
sub
push
arpl
mov
shr
pop
aaa
or
repnz
inc
sub
mov
mov
pusha
or
sbb
movs
jnp
mov
mov
cmps
and
jg
fist
inc
or
ja
xchg
mov
imul
in
ja
push
jnp
and
popa
fld
outs
jl
xor
or
pop
jo
pop
push
icebp
mov
rol
add
mov
(bad)
mov
sub
jbe
adc
and
(bad)
repz
cmp
inc
and
xchg
stos
xlat
scas
adc
xor
pop
sar
xor
cmp
add
jmp
mov
jmp
xlat
pusha
pop
pop
int3
inc
jns
dec
xor
mov
sar
addr16
inc
stc
pop
mov
jge
aas
(bad)
out
neg
mov
adc
or
retf
cmc
dec
(bad)
jo
jo
jo
out
dec
xchg
and
fsubrp
adc
fninit
sub
push
fst
jnp
pop
jecxz
das
jge
inc
xor
cld
pop
inc
out
push
xchg
stc
shl
sar
cmp
pop
pop
pmaxsw
bound
push
dec
imul
js
and
in
in
jns
scas
stc
div
jae
iret
cmp
je
movs
retf
in
popa
mov
lds
mov
inc
inc
adc
lds
mov
or
adc
push
int
jns
add
xchg
(bad)
in
sbb
fdivr
mov
cwde
xor
jl
clc
icebp
pop
aam
push
sbb
out
lods
imul
(bad)
xor
mov
or
adc
mov
daa
rcr
or
mov
(bad)
sbb
(bad)
pusha
test
push
mov
pop
pop
and
sbb
xchg
nop
and
inc
fsubr
cmc
nop
inc
ins
push
or
inc
sub
mov
cs
scas
(bad)
push
in
pop
push
mov
fisttp
mov
dec
pop
cmp
or
out
sbb
out
lods
push
sub
fsubr
xor
push
sbb
inc
and
jnp
ins
cmps
inc
into
cmps
inc
cwde
test
mov
add
aam
mov
ins
fstp
mov
pop
sbb
fxch
(bad)
jge
mov
push
shl
aam
cmps
mov
div
push
ins
mov
xchg
in
xchg
push
or
fwait
gs
jl
pop
add
add
pop
cwde
jo
retf
jae
rcl
mov
mov
and
push
fstp
gs
sti
enter
fadd
jne
xchg
retf
dec
xchg
mov
aad
xchg
mov
add
cld
or
or
inc
push
sahf
pop
(bad)
std
xchg
test
(bad)
cmp
pushf
jb
icebp
fldcw
push
sub
or
dec
loop
in
(bad)
cmps
mov
nop
mov
jl
lock
(bad)
hlt
xchg
sub
fsub
imul
and
ss
xchg
sahf
std
ret
hlt
popf
mov
shr
je
iret
mov
aam
adc
rol
cdq
pushf
aad
xchg
aaa
fprem1
dec
data16
xchg
(bad)
mov
push
xlat
jae
imul
daa
pop
ror
sbb
jl
adc
out
sub
ins
push
jmp
and
lock
pop
(bad)
jle
or
out
xor
sub
mov
and
into
push
inc
neg
call
dec
pop
sub
and
fnsave
test
out
nop
and
inc
mov
pop
imul
mov
or
mov
mov
mov
add
ror
xchg
mov
mov
in
jecxz
outs
push
call
dec
mov
test
cmp
(bad)
rcr
push
repz
inc
mov
push
imul
mov
lods
lock
push
or
jbe
mov
mov
(bad)
dec
add
add
(bad)
clc
lock
mov
dec
push
(bad)
sub
dec
fs
mov
push
retf
cmp
jno
xchg
inc
push
lods
mov
idiv
sbb
cs
adc
test
xchg
ins
or
push
add
ds
int3
or
in
addr16
inc
mov
or
pop
xchg
fcom
scas
ss
data16
clc
scas
fucomi
mov
push
push
and
stos
or
cmc
sbb
stos
repz
pushf
push
cs
mov
(bad)
or
call
stc
sub
dec
mov
into
lods
and
adc
or
jecxz
mov
das
ja
mov
add
push
int3
lds
sub
jo
and
addr16
in
hlt
out
test
mov
cmps
inc
and
shl
nop
scas
pop
ins
stos
sbb
cld
repz
in
push
cdq
mov
or
dec
pushf
mov
and
sbb
sbb
dec
xchg
xchg
fistp
and
cmp
(bad)
sub
jmp
into
sbb
in
xchg
xchg
xor
cld
aam
aaa
nop
push
push
pusha
inc
and
jmp
jo
inc
cwde
mov
cmp
addr16
pop
fwait
push
ret
outs
scas
xor
pop
dec
mov
pop
sbb
int
sbb
neg
sub
and
sti
jecxz
cs
call
stc
dec
adc
lods
jno
mov
mov
push
add
or
(bad)
pop
push
push
sbb
sbb
cmp
sub
scas
ins
mov
call
jns
xor
dec
jg
xlat
mov
mov
ror
jae
pop
(bad)
cmp
pusha
adc
repnz
add
in
adc
rcr
dec
nop
pop
aam
daa
mov
push
scas
fsincos
xchg
es
add
mov
xchg
imul
psllw
fucomp
or
adc
dec
in
pop
mov
addr16
mov
add
push
lds
or
or
dec
ret
inc
mov
into
mov
sub
inc
push
add
outs
shl
lahf
ret
in
or
sbb
jae
jne
sbb
inc
sub
mov
xor
xchg
xchg
call
and
popf
nop
mov
mov
nop
retf
nop
or
mov
fst
pop
retf
or
xchg
add
test
rcl
push
shl
add
inc
jmp
dec
jae
mov
enter
cmp
mov
shl
cwde
in
xor
inc
push
jmp
sub
cs
xlat
cmc
clc
cmp
fs
add
(bad)
mov
mov
test
ret
cld
jno
stc
sub
add
pushf
mov
(bad)
jnp
adc
js
push
mov
push
pop
nop
movs
pop
jnp
(bad)
lock
nop
and
pop
add
pop
out
test
je
ret
dec
arpl
push
out
mov
shr
or
popa
arpl
repnz
aam
sti
lods
mov
xor
inc
sub
dec
repz
dec
pop
adc
mov
sub
xor
leave
sahf
imul
cmps
aam
or
xor
xor
loopne
js
icebp
stc
jmp
adc
das
cmps
sub
outs
push
and
pop
cwde
stos
cmc
in
stc
js
(bad)
mov
adc
(bad)
fadd
pop
jmp
xchg
pop
xor
pusha
test
rcr
loope
push
cmc
ret
sub
push
stos
jae
lods
(bad)
jbe
out
cmc
arpl
adc
in
xchg
(bad)
jmp
jno
test
loope
dec
std
lea
sbb
dec
adc
mov
mov
mov
push
sub
call
add
arpl
mov
jp
cmps
out
div
push
ror
pop
adc
lock
add
mov
mov
(bad)
ins
xlat
sub
js
daa
inc
push
cmp
or
xchg
fidiv
and
fs
shl
or
sar
jb
scas
push
data16
out
cmp
gs
push
sbb
test
pop
test
sbb
aaa
inc
inc
adc
sbb
push
in
pop
dec
mov
add
push
ins
and
push
xlat
xchg
movs
mov
cwde
aam
add
movs
cmps
ret
jmp
neg
ja
xchg
adc
fnstsw
mov
ror
xchg
cwde
cmps
xchg
aas
int3
rcr
push
scas
rol
sub
loopne
cdq
scas
(bad)
stos
mov
aaa
fs
jl
aad
push
adc
popa
pop
jge
add
out
dec
int
aas
mov
sbb
mov
data16
jge
jp
xchg
fnstsw
jle
mov
fld
jg
loopne
and
mov
ds
cli
cmp
data16
into
jo
sub
cmp
cmp
pop
dec
ss
cmp
and
mov
cmp
jp
push
ret
mov
lods
xor
push
push
mov
test
int3
shr
(bad)
ds
iret
pop
test
dec
and
xor
jno
push
adc
ins
cmp
and
cmps
fisub
sbb
cs
adc
push
dec
repz
fcmove
add
push
jne
loop
push
add
mov
rol
aaa
xor
test
addr16
jg
sub
pushf
pop
sbb
dec
(bad)
mov
in
cld
call
mov
(bad)
cwde
jno
iret
pop
mov
or
jp
in
mov
xor
push
fdiv
jne
das
(bad)
adc
jae
gs
xor
fist
(bad)
xchg
aam
fstp
popf
push
add
and
movs
jge
sub
mov
enter
xchg
scas
sub
stc
cmc
cmp
sbb
cdq
sub
xor
into
repz
push
push
pop
aaa
lahf
pusha
xchg
ret
pop
sahf
add
fcomp
retf
dec
dec
inc
pop
jle
cdq
into
adc
xor
cmp
iret
jns
in
jp
test
pop
aam
jle
xchg
das
(bad)
mov
ss
inc
ficom
in
cwde
loop
in
pop
rcr
add
hlt
sbb
pop
aad
and
mov
adc
into
inc
dec
repnz
sti
ds
movs
bound
lods
popa
in
aas
push
inc
push
add
sahf
loop
inc
dec
stos
lds
jbe
in
xchg
and
dec
out
sbb
jp
inc
sub
and
jg
add
jmp
dec
xor
mov
jb
ret
push
aad
dec
das
adc
jae
mov
inc
in
jnp
xchg
push
sbb
(bad)
xor
cmps
push
push
push
xchg
test
repz
sub
in
or
xchg
pop
sbb
jnp
inc
jge
gs
dec
repnz
jno
clc
jmp
jge
out
repnz
ins
xchg
cli
imul
mov
test
in
dec
adc
adc
inc
and
stc
sub
fcom
ds
pushf
cmps
jb
jb
mov
add
mov
add
jbe
pushf
pushf
xlat
fistp
dec
xchg
cmc
dec
lea
mov
mov
sub
jns
outs
(bad)
dec
outs
mov
mov
xchg
in
pop
in
jg
mov
mov
push
or
jp
jb
add
scas
mov
int3
cs
xchg
cld
neg
pop
std
fistp
xchg
and
xchg
(bad)
outs
dec
movs
(bad)
and
sub
pushf
aaa
and
addr16
mov
or
sbb
cmp
xchg
test
in
ins
jge
mov
sbb
imul
xor
stos
js
xchg
xor
repnz
or
inc
test
sbb
loop
adc
lods
xor
mov
ins
iret
mov
fsub
pop
popa
sub
push
jb
pop
dec
fs
gs
mov
inc
imul
ret
adc
jbe
sbb
das
push
clc
ss
sbb
iret
enter
out
mov
adc
div
scas
xchg
pop
and
out
hlt
in
xchg
std
addr16
xchg
dec
inc
and
mov
pop
bnd
rcr
push
add
xchg
push
sahf
jbe
sbb
imul
mov
movs
push
xchg
retf
in
push
cmps
jbe
movs
sub
sub
add
(bad)
sti
add
jne
sbb
pop
cdq
test
mov
int3
fistp
ficomp
and
add
rcl
jmp
call
movs
dec
test
retf
bound
retf
enter
fidivr
dec
ja
scas
cmp
xchg
nop
mov
pop
cmp
inc
test
jb
cli
or
inc
or
xchg
push
inc
lods
push
scas
and
lahf
lahf
mov
ds
mov
stos
clc
call
dec
xchg
jl
std
(bad)
(bad)
cmp
push
adc
movs
movs
ficom
push
inc
xchg
add
cmp
stos
cmp
int
and
jbe
sbb
push
aad
lea
mov
fadd
div
push
cmc
push
xor
cdq
ror
not
push
sbb
or
cmp
push
jle
fdivr
aad
jb
icebp
outs
int
in
iret
xchg
call
pop
xchg
jl
scas
and
xor
add
mov
(bad)
or
lock
imul
idiv
outs
add
repnz
cmp
sub
dec
pop
jge
int3
mov
cdq
lods
arpl
mov
mov
jecxz
shr
fisttp
inc
mov
mov
xchg
add
or
xchg
leave
mov
pusha
adc
ror
adc
and
test
int
test
jg
int3
mov
inc
mov
loopne
sbb
jg
leave
hlt
mov
sub
jnp
enter
popf
sbb
stos
repz
dec
add
dec
push
(bad)
out
mov
in
ds
xchg
push
iret
xchg
cmp
imul
pop
aad
pop
mov
imul
cmp
ror
jl
data16
adc
xor
lahf
adc
or
push
jecxz
pop
mul
push
out
inc
xchg
dec
and
scas
nop
jne
pop
xchg
das
hlt
or
cdq
xor
cmp
cmps
and
xchg
sbb
ins
lock
mov
push
out
xchg
nop
neg
gs
rol
fstp
pop
xchg
dec
cwde
mul
and
xchg
push
mov
cli
pushf
stc
xor
clc
or
pop
cmp
shr
sbb
xchg
mov
repz
add
clc
jecxz
or
inc
inc
aas
mov
sub
outs
adc
push
push
mov
in
test
aad
retf
in
in
cmp
pop
or
dec
loop
or
xchg
pop
mov
cs
pop
ins
daa
leave
mov
xchg
outs
shl
add
and
hlt
jecxz
ror
dec
(bad)
cmc
inc
ss
aad
fwait
iret
fist
inc
lods
in
push
pop
cdq
rcl
rcr
bound
add
and
push
test
movs
and
pusha
mov
xchg
scas
dec
mov
loopne
sar
(bad)
jp
mov
xchg
aas
(bad)
cmp
retf
out
out
cli
lods
std
sbb
push
ss
jl
xchg
shr
iret
std
pop
dec
int
leave
hlt
mov
aam
mov
ficomp
mov
inc
hlt
(bad)
cwde
add
inc
outs
or
repnz
mov
mov
iret
jbe
or
push
aad
out
leave
lock
data16
daa
jno
sub
mov
clc
pop
dec
inc
mov
pop
push
aaa
adc
and
rol
outs
jno
(bad)
xchg
jns
rol
or
int
xchg
lds
fnstcw
adc
fcomp
mov
add
lods
lods
push
or
in
jne
(bad)
mov
inc
pop
mov
sub
inc
ss
sbb
aam
std
mov
(bad)
inc
mov
pop
and
mov
retf
ins
call
(bad)
add
mov
xor
push
xchg
add
into
out
mov
lock
ds
add
imul
pop
xor
sti
aas
dec
faddp
(bad)
icebp
jle
jl
ins
add
sub
adc
lea
in
push
dec
ins
fidiv
and
mov
xlat
cmp
inc
dec
or
ds
jmp
xchg
fwait
pop
add
cmp
ret
cmps
push
rcl
repnz
(bad)
stc
cli
jp
pop
enter
ror
scas
daa
fisttp
mov
jmp
add
in
push
and
movs
push
repz
cwde
clc
mov
add
rcr
mov
sbb
gs
shr
inc
iret
xchg
push
push
gs
les
and
das
arpl
sbb
sbb
add
movs
mov
mov
sub
dec
adc
mov
fisttp
dec
xchg
retf
mov
enter
sbb
or
jnp
xchg
sub
inc
mov
inc
jmp
fsub
mov
dec
sbb
int3
shl
add
jl
gs
lods
xchg
inc
call
aad
retf
cwde
push
repnz
and
xchg
outs
out
lds
imul
dec
dec
leave
test
daa
sub
cmp
ficomp
inc
mov
loop
cmp
(bad)
mov
push
lods
aas
and
add
xrstor
hlt
add
mov
inc
(bad)
ss
dec
or
or
pop
xor
hlt
dec
scas
adc
lea
daa
or
in
repz
pop
jp
sub
mov
and
mov
push
xor
popf
and
leave
jnp
xchg
loop
push
pop
(bad)
iret
(bad)
cmps
ret
mov
cmp
fcmove
xor
sti
adc
dec
cld
inc
adc
add
bound
cmp
fisubr
daa
call
rol
mov
and
push
popa
je
cmp
in
lea
lock
push
loope
inc
gs
xchg
outs
out
fdiv
shr
mov
jne
fldenv
iret
pop
mov
push
int
xor
imul
mov
bound
outs
cmp
mov
xor
sbb
loop
call
ds
icebp
push
jmp
xchg
call
or
cmp
lds
jo
mov
scas
(bad)
loope
mov
and
sbb
push
mov
shl
call
fild
cmp
sub
sub
fst
xor
js
jbe
(bad)
jmp
cmc
add
add
and
cmps
lahf
or
inc
xchg
jns
xchg
(bad)
lea
jnp
pop
in
not
test
test
sbb
xor
nop
dec
dec
inc
aaa
and
ror
rcl
fcom
fnstsw
ins
iret
repz
adc
pop
fsubr
sbb
dec
cmp
cdq
sar
or
loope
jg
cs
fild
cld
push
test
fldenv
call
mov
pop
inc
pusha
xor
or
fwait
push
loope
cwde
int
les
jae
ja
add
pop
mov
addr16
mov
test
mov
push
ds
and
mov
in
jmp
lock
pop
fidiv
mov
ins
fwait
pusha
cmp
sbb
dec
cmps
adc
mov
std
jl
mov
push
inc
fcmove
inc
pop
xchg
rcr
rol
stos
int3
mov
into
pop
fwait
sahf
jmp
and
aam
cmps
sbb
cmps
cmps
retf
add
hlt
mov
lock
adc
(bad)
call
(bad)
iret
or
sbb
fs
std
out
ins
ret
xchg
test
icebp
sbb
stos
fsubr
xor
xor
cmp
(bad)
xchg
fcmovnu
mov
test
sbb
fdiv
idiv
daa
aas
mov
cmp
cmp
(bad)
xchg
into
add
arpl
jbe
popf
pop
xchg
xchg
sub
cmp
xchg
pushf
xchg
imul
repnz
dec
fidiv
int
push
clc
push
dec
sbb
mov
push
iret
retf
cs
jo
and
sahf
(bad)
xor
pusha
mov
cmp
push
mov
dec
cmc
(bad)
clc
leave
or
call
loopne
xchg
mov
mov
and
cmp
push
sahf
mov
(bad)
call
scas
sub
xor
xchg
sbb
mov
add
sbb
cmps
mov
sub
jno
je
pop
ss
mov
pusha
js
cmp
mov
cli
mov
mov
xor
(bad)
sbb
arpl
out
pushf
adc
cmc
daa
inc
imul
shr
nop
xchg
dec
cmp
push
cmp
push
inc
fst
mov
sub
ja
pop
std
mov
cmc
mov
and
or
pop
repnz
jmp
loope
ins
sbb
movs
mov
jmp
mov
xchg
stos
dec
jb
sbb
fmulp
push
jle
test
xchg
push
jbe
test
inc
test
arpl
mov
xchg
aad
ud2
inc
mov
rcr
sbb
dec
sub
fwait
and
or
jnp
imul
dec
lods
int3
(bad)
enter
std
out
xchg
adc
inc
pop
(bad)
int
push
cli
fadd
fimul
push
lds
stc
(bad)
jle
xor
inc
add
pop
out
push
lods
push
sbb
dec
cdq
ja
jbe
and
outs
or
add
jne
inc
push
jl
(bad)
push
mov
out
aaa
lahf
add
loope
mov
push
xor
(bad)
aad
ret
sub
jg
sub
or
sar
mov
xchg
shl
int
jnp
aad
add
dec
xchg
imul
xchg
aad
and
fisttp
mov
sti
jae
add
add
data16
sbb
dec
sbb
pop
ja
pop
inc
cmp
ror
shr
retf
popf
iret
push
and
mov
(bad)
hlt
xor
data16
add
sbb
stos
dec
adc
adc
mov
mov
je
aad
shl
retf
mov
and
rol
mov
cdq
adc
vaddpd
loop
addr16
mov
jecxz
test
pop
clc
jne
(bad)
xchg
ins
dec
mov
(bad)
lahf
and
int3
xchg
inc
inc
repnz
sbb
xor
je
push
mov
cwde
stc
cld
lahf
jmp
add
dec
loope
dec
ficomp
mov
sbb
and
push
mov
inc
sub
in
mov
mov
les
push
jbe
in
mov
dec
mov
dec
adc
fisub
addr16
ins
fcom
cmp
push
fdivr
mov
jl
dec
out
cmps
scas
call
push
cwde
pop
call
mov
push
mov
and
xchg
pop
das
mov
xor
adc
push
fldenv
and
mov
or
xchg
pop
into
mov
loope
jp
inc
arpl
leave
cld
or
shl
jo
xchg
jno
dec
cdq
and
es
loope
jl
sub
push
jo
mov
scas
sub
pop
imul
fidiv
sub
pop
xlat
cmps
mov
popf
or
jbe
mov
and
jb
fdivp
pop
or
and
mov
or
(bad)
fld
xchg
jl
xchg
pushf
cmps
sub
xlat
sub
pushf
(bad)
sti
sub
mov
sbb
int
xor
jg
or
pop
stos
and
cmp
sub
dec
push
mov
push
and
pop
call
pop
test
xchg
stos
(bad)
jmp
sbb
into
iret
adc
adc
sub
adc
jne
cmc
jmp
ins
jae
jecxz
dec
cmp
mov
jg
cld
jns
sar
add
or
imul
int3
jnp
sar
pop
ror
sti
cmp
jge
and
cs
(bad)
call
pusha
cld
scas
cmp
pop
and
rcl
or
fisttp
int3
stos
pop
sub
(bad)
ja
xchg
sub
lea
cmc
rcr
adc
and
cdq
dec
bound
dec
pop
xor
int3
pop
sti
out
or
ja
rcl
jg
cmp
shr
jp
sub
test
dec
repnz
retf
iret
outs
xor
jbe
add
cmp
push
in
cmps
add
or
push
mov
sbb
cmp
cmp
cmp
dec
lea
jg
and
and
dec
outs
jns
fwait
popf
cwde
xor
jecxz
xchg
jns
shl
(bad)
mov
out
imul
push
mov
movs
(bad)
idiv
retf
jo
aaa
hlt
mov
jb
movs
mov
movs
retf
sub
dec
mul
xor
pop
jns
xchg
lods
push
or
loope
or
call
enter
ror
cmps
sub
lock
lods
shr
or
mov
xor
jo
(bad)
jno
inc
call
mov
test
inc
mov
gs
mov
test
mov
vhaddps
xchg
xor
ss
mov
mov
sbb
call
sub
sbb
test
cmp
push
pop
in
sahf
aas
scas
cmc
cmps
(bad)
mov
jmp
(bad)
into
adc
call
and
lods
adc
inc
ficomp
das
sahf
mov
cwde
push
mov
mov
cmp
jbe
(bad)
imul
test
loopne
imul
inc
or
adc
dec
in
sbb
imul
adc
or
aam
push
push
mov
mov
xchg
dec
pop
jmp
xchg
dec
adc
mov
sti
xor
ins
test
xor
fiadd
test
cmps
jmp
xchg
mov
pop
js
fmul
pop
in
retf
test
or
movs
fistp
jge
test
lahf
push
scas
xor
sbb
std
jns
mov
call
out
push
dec
mov
daa
fistp
cmp
adc
inc
jo
sbb
add
add
mov
jg
lea
push
add
sbb
bound
dec
jb
add
xor
mov
into
sub
mov
sbb
push
inc
fdivr
add
and
ficomp
inc
xchg
cmp
in
mov
sbb
sbb
mov
popa
loopne
push
ret
ja
(bad)
neg
cmps
imul
cmc
add
popf
mov
mov
or
gs
pop
fadd
cld
and
ret
or
mov
push
jecxz
(bad)
pop
dec
rcr
sub
and
out
in
das
jmp
mov
mov
adc
call
ins
push
rcl
xchg
mov
and
ins
and
mov
iret
fs
es
loop
jb
shl
cdq
add
and
xchg
retf
pop
add
rol
mov
mov
add
(bad)
test
call
mov
pop
cs
repnz
call
dec
and
mov
xchg
sti
les
cli
push
xor
clc
pop
jo
mov
arpl
fcomp
xor
jmp
sub
cwde
retf
push
jg
leave
sub
mov
out
lea
lods
add
xchg
test
adc
and
jae
pop
xor
test
cmp
push
sti
and
mov
xchg
out
aam
outs
mov
cmps
mov
sbb
xchg
rol
sahf
fsub
push
jno
call
sub
jl
in
jle
call
mov
jae
in
push
add
data16
outs
out
add
aas
inc
pop
lahf
bound
out
xchg
in
pop
das
inc
aam
loop
and
lock
retf
loop
gs
daa
mov
test
(bad)
jne
or
cmp
fidiv
shr
adc
or
fcomp
sub
cwde
mov
sbb
repnz
xor
jae
rol
mov
sub
push
cwde
fisttp
cmp
inc
or
cli
xchg
pop
and
mov
les
pop
leave
jae
out
fiadd
sbb
pop
lock
imul
xor
rcr
xchg
in
dec
(bad)
jecxz
xor
nop
cmp
add
jecxz
repnz
mov
int3
ss
aas
repnz
cs
fsub
push
xchg
mov
pop
ror
jle
repz
gs
push
adc
pop
enter
pop
jnp
pop
adc
or
std
shl
jne
jb
sbb
mov
sbb
xchg
inc
loopne
and
out
pop
inc
ror
and
or
mov
daa
jne
or
or
xor
cmps
retf
es
fistp
(bad)
ror
in
mov
or
mov
add
aad
xchg
(bad)
xor
es
jp
jnp
push
hlt
lea
out
std
ror
pop
fcomip
(bad)
xchg
xor
mov
fcom
cmp
add
outs
jmp
outs
mov
mov
or
jle
add
xchg
mul
loop
xor
sbb
ja
dec
jmp
lods
aas
cmp
mov
test
icebp
mov
hlt
cmp
adc
js
mov
daa
cdq
pop
push
call
or
inc
add
sti
cmc
cli
jl
add
retf
adc
in
cmps
xor
mov
or
popa
stos
test
retf
(bad)
and
(bad)
jl
dec
mov
and
xchg
add
xor
or
mov
ret
fwait
dec
ins
mov
mov
dec
test
mul
or
cmp
call
mov
and
mov
stc
leave
int3
call
mov
stc
xchg
aaa
(bad)
xor
dec
cmp
shl
mov
rcr
test
in
jp
or
mov
push
jp
cmp
jb
lahf
xchg
pop
cmp
(bad)
scas
bound
xor
pop
and
add
retf
cli
pop
pop
cwde
arpl
xor
std
and
retf
inc
push
xchg
xchg
popf
mov
and
mov
adc
cmp
xor
cwde
push
adc
pop
std
arpl
ficom
push
add
(bad)
popa
das
stc
sbb
std
out
xor
pop
or
or
js
lods
xor
hlt
jle
pop
push
out
xor
(bad)
into
sti
jno
jg
xor
push
ret
out
sti
add
sub
and
loopne
rol
pop
lock
aad
cmps
sbb
popa
imul
inc
lea
pop
ficom
(bad)
daa
mov
adc
in
inc
and
hlt
mov
rcr
lods
mov
dec
popa
test
js
xor
ror
jb
jle
push
out
aam
nop
jge
mov
lea
dec
fld
test
aaa
rol
mov
dec
scas
jns
mov
sub
mul
(bad)
arpl
pop
(bad)
pop
jg
pop
inc
test
outs
add
mov
push
jle
push
cs
ss
sahf
adc
in
aaa
lods
in
in
loope
mov
sub
int3
adc
mov
jns
dec
push
xabort
pushf
(bad)
mov
hlt
or
loop
xchg
xor
jnp
ins
pop
loopne
mov
add
test
cmps
pop
inc
mov
stos
cwde
test
es
mov
ret
mov
xlat
mov
(bad)
fnstcw
sub
lods
leave
data16
int3
lea
call
add
lods
mov
test
test
inc
out
in
les
lea
jo
retf
test
leave
cs
sub
ret
arpl
shr
pop
sbb
add
fstenv
imul
mov
neg
stos
ins
inc
cmp
xor
mov
mov
jmp
out
inc
lods
mov
les
jae
inc
push
lods
adc
xchg
jg
push
(bad)
cmp
lods
sub
ss
mov
xchg
or
std
mov
sub
and
js
(bad)
test
xchg
lods
out
mov
mov
jmp
shl
jp
cmp
ss
popa
push
push
mov
popf
xchg
cmc
test
fistp
mov
mov
mov
mov
gs
in
aas
ret
lahf
adc
sbb
dec
xchg
xlat
jno
mov
cmc
test
jmp
inc
sbb
out
sbb
push
push
(bad)
sub
cmp
std
mov
pop
ret
jb
jg
(bad)
js
add
mov
in
aad
sahf
std
in
mov
cmp
xchg
cld
lahf
pusha
lahf
fistp
push
mov
loop
loope
lds
and
clc
xchg
aaa
cmps
inc
aad
lahf
xchg
dec
dec
push
bnd
xchg
in
or
inc
sub
hlt
lahf
retf
test
idiv
hlt
adc
js
dec
pop
adc
jl
push
out
test
adc
js
dec
cli
test
push
inc
in
sub
cmp
mov
add
pop
inc
xchg
popa
cmp
(bad)
gs
ins
jp
xchg
jo
test
mov
inc
inc
pop
outs
nop
inc
cmp
call
sets
jge
nop
push
sbb
mov
push
aad
mov
out
ret
xchg
pop
add
in
cli
loope
pusha
outs
pop
cmp
pop
out
sti
jl
dec
sub
jg
or
inc
sub
(bad)
aas
push
mov
test
adc
pop
pop
mov
imul
adc
nop
(bad)
cmc
movs
pop
xor
mov
xchg
rcr
js
mov
test
pushf
punpckhbw
sbb
and
rcl
enter
inc
pop
inc
(bad)
cmp
add
pop
outs
jmp
jmp
in
mov
(bad)
cmps
ret
(bad)
jmp
jns
xor
fcomp
add
ficom
pop
jg
xchg
jge
jecxz
cli
test
jmp
mov
and
fidivr
ins
sahf
or
dec
inc
jl
out
in
mov
xor
pusha
pop
(bad)
mov
sbb
dec
imul
inc
call
mov
dec
adc
fimul
nop
outs
or
aaa
mov
cs
jnp
and
pop
gs
sahf
lods
adc
jae
mov
xlat
shr
xor
in
mov
push
movs
stc
es
(bad)
jno
je
add
sub
scas
ror
mov
mov
cmp
mov
push
jne
add
lock
out
inc
stos
dec
xchg
movs
ss
clc
xchg
loope
(bad)
pop
out
(bad)
cli
iret
dec
xor
dec
sub
push
scas
sti
push
mov
loopne
or
retf
retf
shr
and
adc
adc
dec
or
or
sahf
inc
addr16
data16
jmp
mov
aad
popf
xchg
pop
sub
lods
lods
mov
jecxz
ja
(bad)
dec
jo
daa
test
aad
sti
mov
fdivr
and
ss
xchg
cmp
sahf
jle
mov
add
retf
sbb
js
jnp
push
jne
retf
out
fwait
xchg
cmp
or
add
cmp
retf
sub
(bad)
aas
xor
out
int
jmp
inc
pushf
cmp
ins
shl
sti
js
adc
loopne
jle
jo
sti
ss
or
(bad)
mov
inc
cmp
mov
retf
enter
push
fwait
ror
fwait
cmp
pop
push
sbb
sbb
xor
gs
add
retf
popf
mov
(bad)
movs
or
pusha
dec
outs
stos
pop
ret
out
mov
jne
test
into
jge
adc
ds
mov
loopne
adc
dec
add
test
gs
mov
adc
sti
mov
push
sbb
push
cmp
cmps
out
mov
xchg
ss
cs
jg
push
sbb
dec
into
ror
(bad)
lea
push
out
push
js
push
xor
test
push
inc
sub
hlt
jle
(bad)
rcr
(bad)
push
push
outs
std
shl
les
(bad)
aas
fsub
outs
or
outs
jns
fild
push
ins
xabort
arpl
scas
adc
sahf
lods
pop
lea
mov
inc
mov
ja
je
test
adc
jmp
leave
adc
imul
jno
mov
cmp
xchg
idiv
cmc
add
test
bound
mov
mov
out
sub
and
jl
out
stos
test
fiadd
cmp
jmp
jns
test
lods
popa
jb
fisttp
fadd
scas
call
add
inc
fnstenv
nop
stos
xor
lea
inc
dec
pushf
shl
push
jb
sbb
test
dec
push
mov
arpl
sub
xor
jge
scas
stc
and
std
stc
push
xchg
mov
jmp
neg
fucomp
xchg
out
cmp
(bad)
dec
dec
inc
jmp
xor
inc
inc
push
fldl2t
jne
inc
xchg
jns
daa
and
mov
repnz
add
shr
stos
sbb
cmp
jp
dec
in
sub
retf
and
pusha
dec
push
movs
repz
add
inc
les
jecxz
inc
shl
mov
(bad)
popf
pop
not
dec
dec
jg
into
in
or
movs
jne
test
(bad)
mov
jne
mov
ds
and
dec
sbb
retf
cld
mov
cmp
cmp
mov
xlat
loope
pop
lods
rol
icebp
mov
scas
pushf
xchg
xor
xchg
int3
push
xchg
sub
cmps
push
cdq
ss
mov
icebp
lahf
int3
push
pop
out
retf
outs
fs
adc
ins
push
leave
mov
out
xor
xor
fwait
jle
pop
inc
in
and
stos
hlt
push
jmp
mov
imul
jo
test
cmp
cli
scas
ss
iret
ins
inc
dec
xchg
popf
lock
aas
js
jb
fnsave
dec
add
sahf
sub
mov
pop
fisub
jp
not
in
push
push
mov
cli
mov
test
push
stos
adc
jl
lods
out
xchg
xchg
call
and
imul
inc
ret
hlt
sbb
test
psrld
addr16
in
in
mov
sbb
mov
xor
or
ins
ror
cmp
mov
jbe
aad
jp
es
xchg
xlat
retf
out
mov
inc
cdq
jmp
dec
or
jge
mov
push
push
xchg
cmp
enter
xchg
ss
iret
ret
fdivr
pop
mov
mov
xchg
ret
add
hlt
sar
sub
mov
xor
or
inc
xchg
arpl
cs
dec
adc
dec
stos
adc
repnz
cmp
inc
xor
mov
cmp
bound
sub
dec
dec
and
pop
jne
mov
xchg
xchg
xchg
push
and
pusha
lods
pop
pushf
dec
xchg
mov
jl
test
je
imul
scas
loopne
inc
pop
push
mov
out
or
cmp
push
push
mov
adc
add
mov
pop
(bad)
call
or
sub
out
push
(bad)
and
mul
rcl
xchg
popa
lock
xchg
adc
jle
out
jge
mov
sub
adc
mov
dec
mov
movs
iret
adc
pusha
or
and
push
pop
push
jle
js
fadd
(bad)
inc
pop
dec
sbb
jnp
sbb
sbb
out
outs
(bad)
ja
loop
scas
jns
cmp
mov
fstp
inc
mov
mov
pop
dec
mov
dec
cdq
sbb
push
sar
push
icebp
nop
fidiv
and
mov
dec
dec
fcom
ret
pop
(bad)
inc
in
div
mov
test
mov
add
(bad)
adc
rol
shl
jmp
push
or
out
dec
(bad)
jl
inc
aam
or
cmc
inc
div
cli
test
cmp
jmp
sub
out
xor
dec
inc
sub
lahf
(bad)
push
xor
and
(bad)
cmp
sar
ins
sbb
scas
and
inc
push
call
pusha
sti
rcr
fcomp
push
cmp
sub
aam
(bad)
leave
out
pop
lds
dec
add
inc
jg
adc
mov
push
dec
leave
icebp
dec
push
adc
das
(bad)
js
imul
lock
out
jge
aam
cdq
les
es
out
mov
jp
mov
loop
sbb
mov
jp
int
shl
sbb
inc
in
stos
pop
rcr
or
inc
(bad)
clc
dec
mov
xor
pop
sub
hlt
push
jno
xor
movs
loop
dec
sar
push
inc
out
mov
inc
fdiv
outs
push
(bad)
stos
cld
aad
cmp
xchg
mov
xlat
lahf
rcl
adc
mov
xor
pop
jo
lock
xchg
dec
sub
jecxz
retf
inc
push
xchg
fsub
jg
iret
dec
int
xchg
inc
gs
out
push
mov
xchg
or
test
push
jo
mov
add
int
mov
pop
dec
mov
mov
jno
lods
loopne
in
test
mov
aad
pop
jmp
dec
inc
cmp
ins
add
cmps
lods
in
fdiv
cmp
push
sbb
cmp
dec
xchg
jae
push
or
fdivr
in
sar
pop
add
call
sub
loopne
and
(bad)
in
xchg
sub
in
fcmovnbe
sti
push
ins
mov
imul
into
dec
inc
xchg
or
adc
sbb
inc
les
or
js
mov
add
fisubr
aam
retf
mov
xchg
jb
adc
(bad)
cdq
sti
das
fimul
mov
and
into
or
mov
or
call
idiv
mov
jne
mov
mov
nop
mov
in
xchg
xor
lahf
and
out
mov
jmp
xchg
push
inc
jae
dec
jo
scas
xor
(bad)
sti
sub
stc
jg
clc
icebp
add
or
mov
push
mov
add
jecxz
fdivr
repz
les
in
cmps
stos
popf
clc
sti
mov
in
fwait
pusha
add
add
or
cmp
xor
lock
mov
pop
ret
stc
test
arpl
xchg
jmp
mov
test
(bad)
dec
rol
inc
test
xor
inc
sbb
push
ret
pop
mov
or
loopne
retf
fdiv
nop
xor
call
mov
mov
or
mov
imul
test
jmp
xor
jbe
xchg
int
movs
mov
stos
push
xchg
inc
add
xor
movsx
bound
mov
push
cmps
xor
mov
daa
scas
stc
arpl
mov
dec
ss
xchg
cwde
inc
cld
loopne
es
sbb
movs
pop
jne
dec
mov
fcomp
cdq
xlat
data16
call
mov
daa
adc
inc
or
in
shl
pop
jno
sub
cmp
dec
jle
sub
and
cmp
clc
lods
or
retf
not
nop
add
cld
fwait
mov
scas
das
in
sti
test
pusha
xor
test
dec
mov
sbb
popf
stos
dec
movs
push
retf
test
and
(bad)
out
movs
jns
mov
sub
arpl
(bad)
cwde
pop
lock
lahf
std
cwde
fisubr
ja
mov
nop
push
bound
mov
mov
ret
mov
mov
test
repnz
xchg
scas
mov
xlat
in
cmp
mov
stc
dec
test
sub
in
in
push
sbb
stc
pop
xchg
in
gs
cli
out
es
dec
rcr
jle
cmc
add
aam
pop
aam
cdq
jmp
xchg
cs
or
sub
pop
and
in
icebp
inc
mov
outs
adc
fwait
aas
add
mov
xchg
and
dec
rol
ja
mov
adc
clc
adc
adc
data16
out
mov
rcl
cs
cmps
mov
cmc
pusha
pop
cmp
jle
shl
in
mov
xor
inc
lock
out
js
mov
adc
and
inc
xchg
les
outs
xchg
enter
jge
ins
retf
(bad)
sbb
in
add
fcmovnu
mov
fabs
push
adc
mov
push
(bad)
imul
jb
dec
aaa
sbb
das
hlt
int
jb
mov
call
mov
loope
ror
inc
dec
es
xchg
jne
mov
pop
fstp
xchg
movs
jo
jecxz
movs
popf
sar
xchg
sahf
adc
or
sub
cmp
ja
std
pop
cdq
jmp
pop
test
mov
movs
inc
push
jmp
cmp
dec
push
(bad)
sub
mov
scas
mov
repnz
es
push
jns
or
jmp
push
mov
cs
cmp
dec
and
int3
lock
push
popf
inc
test
pop
ja
push
scas
push
daa
ss
mov
mov
(bad)
shl
mov
dec
retf
lods
outs
and
cmp
dec
scas
(bad)
in
std
(bad)
mov
stos
mov
out
mov
push
pop
mov
test
lods
cld
gs
ja
data16
dec
sub
inc
out
mov
push
and
sbb
icebp
xor
and
adc
ds
dec
xchg
js
mov
mov
scas
js
jmp
push
pusha
les
cmp
pop
sub
or
jge
(bad)
add
jbe
retf
pop
int
dec
bound
inc
call
pop
jg
sbb
sbb
push
icebp
dec
adc
cmp
std
xchg
pop
jmp
or
lock
and
mov
mov
pop
jnp
(bad)
dec
mov
es
push
fstp
xor
add
mov
and
mov
dec
fwait
cmp
push
out
aas
imul
sbb
dec
and
jnp
mov
mul
add
loope
jp
pop
inc
inc
cmps
and
cdq
das
and
jno
scas
lahf
ins
jne
lock
(bad)
(bad)
cmp
xor
stos
inc
ja
xlat
push
cmps
push
dec
outs
push
test
pusha
daa
xor
je
xchg
and
out
dec
jle
mov
repz
add
stos
xchg
(bad)
rol
jnp
mov
lea
in
(bad)
int3
call
sbb
daa
outs
cwde
cld
cmp
adc
les
dec
test
rcl
push
dec
adc
jne
test
add
jb
test
dec
(bad)
idiv
mov
ins
imul
mov
sub
mov
fadd
xor
pusha
retf
iret
inc
adc
aas
les
xor
out
push
jp
pop
xor
gs
mov
add
in
bound
scas
xchg
sbb
sbb
(bad)
test
add
mov
pop
mov
cmp
nop
and
xor
fdivr
push
push
jp
or
aaa
sub
mov
and
(bad)
ins
mov
adc
add
jle
nop
push
and
daa
mov
daa
jo
cmp
fcmovb
push
call
ins
mov
cs
enter
adc
dec
pop
stc
inc
in
cmovg
adc
mov
cmp
in
ja
push
xchg
lea
jne
inc
sub
xor
cmp
jo
sar
js
mov
iret
sbb
ins
fdivr
sbb
cmp
or
sub
scas
cmp
cmp
adc
ins
ss
aam
dec
ret
dec
daa
jmp
jmp
push
(bad)
push
mov
repz
sub
scas
push
out
test
arpl
push
jge
mov
or
mov
jns
(bad)
cmp
rcl
and
movups
test
shl
xchg
jl
ss
cld
int3
dec
or
or
mov
fiadd
lea
xor
and
repz
and
mov
and
pop
mov
sbb
push
iret
and
ja
jbe
mov
mov
cmc
xchg
fist
add
icebp
mov
bound
ror
inc
sbb
jno
dec
cmp
je
rep
and
scas
js
push
push
fldcw
sub
out
xchg
adc
loop
mov
dec
adc
mov
mov
sub
jae
jbe
(bad)
inc
arpl
out
sahf
xor
sbb
rcl
shl
inc
xor
push
xlat
outs
push
ins
fisttp
dec
loop
sbb
mov
sar
cmc
jne
pop
idiv
pop
(bad)
xor
das
sub
mov
inc
sbb
in
movs
loope
(bad)
test
xchg
inc
dec
mov
imul
repnz
cli
in
stc
aam
nop
repnz
test
jno
xor
mov
shr
outs
out
(bad)
dec
retf
push
arpl
jmp
sbb
push
jg
gs
add
cwde
sbb
inc
js
dec
(bad)
jg
adc
dec
lock
test
xor
jmp
dec
or
cli
pop
dec
mov
test
inc
xchg
mov
loope
ret
dec
cmp
cmp
fnstcw
mov
pop
push
cmps
inc
or
test
add
pop
inc
(bad)
push
(bad)
xlat
out
out
jp
in
inc
adc
adc
fs
inc
inc
in
xchg
xchg
cmc
imul
cs
fistp
push
dec
(bad)
sbb
rcl
(bad)
jae
mov
cs
mov
or
sbb
mov
ins
xchg
dec
add
(bad)
mov
sub
push
dec
dec
call
(bad)
int
inc
aaa
or
sar
sub
push
ret
pop
mov
ins
adc
mov
(bad)
icebp
jg
test
(bad)
xor
pusha
or
mov
les
call
(bad)
es
fadd
imul
xor
sbb
mov
arpl
test
jge
fneni(8087
xchg
les
jae
cmp
push
dec
les
loop
ins
push
xor
ds
leave
fwait
sub
lock
ja
dec
push
and
test
imul
shr
mov
fimul
push
inc
loop
in
push
mov
lock
in
sub
xor
aas
push
loop
xchg
ja
ins
jmp
rcr
ror
cmps
rcl
dec
and
pusha
and
movs
call
repnz
cmps
into
test
push
test
sub
xor
jl
std
fadd
push
push
(bad)
jecxz
mov
dec
add
out
leave
push
sbb
mov
pop
xor
xor
pop
ins
adc
xor
xor
inc
sub
enter
(bad)
cmp
mov
lods
sub
sub
add
(bad)
mov
mov
xchg
imul
ins
or
jmp
xor
sub
(bad)
mov
sbb
jmp
js
jle
call
stc
(bad)
es
mov
pop
dec
xchg
mov
popa
xor
call
dec
pusha
sbb
cmp
lahf
push
mov
in
inc
lahf
push
pop
mov
push
xchg
xchg
sbb
repz
pop
cmc
mov
push
pop
mov
xor
sub
call
call
or
sbb
lds
and
jmp
ins
jge
sti
ret
rol
std
push
pushf
push
leave
mov
sub
sti
pop
ja
cwde
std
addr16
loopne
mov
popa
addr16
out
adc
aaa
jno
fs
cdq
shl
outs
mov
popa
mov
dec
inc
aas
mov
sbb
add
jne
inc
mov
add
sub
std
loope
call
push
xor
popf
mov
outs
retf
jns
jmp
mov
sub
out
mov
push
xor
into
mov
cmp
push
enter
pop
push
pop
lods
jne
push
rcl
mov
add
and
ret
lea
sub
xchg
test
lods
mov
sahf
daa
push
jns
fld
adc
push
mov
stos
xor
int3
xchg
es
mov
xchg
clc
adc
lods
pop
data16
push
inc
shr
dec
dec
(bad)
ror
out
add
test
pusha
fistp
lds
ror
pop
popa
add
enter
dec
and
mov
ins
xchg
mov
sbb
aaa
lods
dec
cmps
inc
shl
jg
dec
sti
not
inc
not
or
dec
push
nop
pop
push
mov
mov
mov
test
and
add
push
pusha
dec
xchg
imul
aas
mov
sbb
inc
(bad)
adc
pop
lahf
push
call
hlt
mov
xor
repz
adc
push
add
nop
jmp
mov
nop
xchg
mov
push
(bad)
inc
jge
aaa
aad
movs
sub
adc
inc
mov
add
xchg
mov
inc
cmp
cs
and
and
mov
sub
add
(bad)
sahf
call
mov
popa
jecxz
aad
fidivr
imul
(bad)
loopne
pop
movs
jo
push
loopne
mov
cmps
pop
repz
add
jp
inc
out
test
daa
jmp
cmp
and
cld
or
push
les
out
ins
cmp
jp
ret
dec
mov
jp
jmp
bound
push
inc
fidiv
loop
ins
dec
mov
mov
nop
sub
fistp
mov
mov
xchg
push
test
inc
mov
mov
xchg
or
jno
jge
adc
xchg
hlt
or
sub
shl
cmp
(bad)
outs
mov
mov
push
xor
fs
xchg
repnz
add
mov
sub
mul
xor
aas
mov
push
dec
outs
xchg
jp
inc
cmps
out
or
lods
add
loopne
push
rol
cmps
or
push
xlat
add
add
dec
lahf
xor
test
ins
loope
sbb
sti
inc
inc
popf
ret
and
inc
cli
inc
xchg
push
xchg
nop
dec
jl
mov
setbe
jae
push
adc
test
mov
ror
inc
fisub
push
xchg
push
pop
cwde
mov
push
ss
mov
xor
and
push
imul
jg
outs
cs
out
mov
push
cwde
pop
mov
or
or
jo
adc
enter
push
mov
xor
push
jns
mov
add
jb
mov
sbb
mov
push
imul
stc
sti
fisub
sub
jge
outs
ja
scas
cli
mov
add
mov
xchg
in
mov
lahf
xor
pop
mov
(bad)
push
mov
dec
ins
jp
push
or
xor
not
xor
sub
sbb
mov
jb
imul
lock
not
pop
or
std
mov
jle
cmp
sar
adc
and
sbb
scas
cmp
mov
sub
mov
pop
push
cmps
std
cmp
imul
mov
cli
push
jmp
cmp
adc
cmp
fs
inc
xchg
add
inc
in
cmc
aaa
lds
mov
enter
mov
push
bound
xchg
or
retf
lea
cmps
push
sbb
outs
or
fild
push
mov
lods
adc
xor
mov
(bad)
jne
js
fdivr
iret
cmp
imul
mov
subps
shr
int3
or
imul
enter
sub
adc
jno
xchg
or
fs
enter
fidivr
mov
mov
inc
adc
cdq
sub
cmp
fsubr
sbb
fld
minps
push
or
stos
mov
repz
mov
inc
push
push
fs
cld
push
xor
xchg
fistp
add
mov
adc
mov
loop
stos
pop
dec
(bad)
dec
cmp
retf
dec
jp
(bad)
pop
outs
mov
xor
and
mov
rol
dec
mov
dec
sbb
retf
(bad)
js
xchg
inc
adc
and
mov
adc
xchg
jmp
or
and
enter
call
dec
mov
cs
fcomi
shr
(bad)
shr
aaa
scas
popf
sub
inc
leave
xchg
adc
or
(bad)
jmp
mov
(bad)
ja
pop
push
jo
ss
push
and
mov
jb
outs
test
lock
sbb
outs
(bad)
fcomp
xor
pop
add
mov
dec
push
inc
cwde
fwait
cmp
sar
icebp
xchg
into
jmp
scas
pop
fwait
pop
loopne
mov
jg
lock
mov
mov
add
push
pop
cmp
sbb
(bad)
addr16
iret
leave
dec
add
inc
jg
movs
push
or
test
pop
ret
cmp
pop
cmp
or
loope
mov
(bad)
jmp
add
jne
addr16
cmp
dec
mov
fild
adc
(bad)
aam
aas
add
(bad)
or
call
mov
leave
les
nop
and
sub
dec
movs
dec
jmp
jnp
xor
ss
mov
push
or
ror
dec
push
or
mov
(bad)
mov
lods
and
dec
outs
push
or
(bad)
out
xchg
push
pop
jae
jmp
push
dec
xchg
pop
call
mov
test
mov
mov
pop
shl
jmp
add
xchg
mov
outs
add
(bad)
enter
inc
mov
test
(bad)
in
jle
mov
ins
jae
fdiv
jecxz
cs
fwait
sub
sti
lea
jmp
and
test
int
or
ret
cdq
xchg
adc
adc
adc
mov
mov
sub
ja
mov
call
jmp
xchg
mov
mov
or
fdiv
push
sbb
cs
pop
jne
jle
pop
mov
inc
dec
mov
cmp
retf
dec
xor
jns
ja
xchg
mov
dec
aaa
inc
int
ins
ffreep
sub
xor
pop
pop
dec
xchg
xchg
(bad)
pop
or
sar
sub
imul
jo
inc
xor
mov
push
sti
sti
test
shl
(bad)
jns
jb
fimul
inc
push
fnstenv
xchg
add
repz
xor
hlt
and
push
aad
cmp
cmp
xor
mov
fidivr
push
movs
mov
mov
ins
das
push
pop
add
imul
loop
inc
outs
cs
std
sahf
stos
push
mov
add
call
mov
inc
nop
aas
ja
pop
xchg
lods
dec
mov
jae
mov
xlat
push
inc
sub
mov
sbb
xor
into
inc
inc
xchg
cmp
inc
mov
into
stos
jle
popf
(bad)
(bad)
mov
outs
je
ret
stos
mov
ret
outs
clc
scas
daa
pusha
data16
add
dec
push
push
iret
xchg
jae
mov
cld
pop
add
shl
inc
push
sub
dec
lods
(bad)
sub
ret
jo
pop
in
xlat
data16
scas
dec
inc
dec
cmps
sbb
xlat
sbb
(bad)
cmp
in
and
fwait
add
(bad)
in
movs
repz
enter
dec
pop
xchg
iret
or
push
js
adc
add
enter
push
fsub
pop
sub
out
lds
ficom
inc
jl
push
imul
fwait
sub
sbb
add
pop
mov
shl
dec
sahf
adc
fsubr
sbb
call
xor
outs
jnp
pusha
mov
int
rcl
mov
outs
aam
cmp
js
(bad)
fimul
cmps
fcmovu
push
pop
adc
bound
jmp
and
pop
jecxz
in
mov
mov
pop
inc
lds
lods
sbb
in
adc
out
inc
push
pop
sbb
mov
push
cmp
dec
not
mov
sub
sbb
pop
fiadd
mov
inc
cmp
add
pop
jns
adc
movs
retf
out
(bad)
call
out
into
mov
xchg
dec
mov
cdq
stos
and
mov
mov
push
mov
push
xor
mov
push
fcomp
inc
(bad)
mov
xor
arpl
inc
scas
adc
jb
adc
or
add
popf
lock
or
aam
cld
xlat
xchg
enter
in
xor
pop
jo
shl
enter
movs
(bad)
(bad)
imul
dec
loop
bnd
push
pop
or
movs
shr
loope
xchg
bound
sbb
fistp
push
push
cs
jmp
dec
lea
jns
jnp
sub
mov
inc
test
std
adc
xchg
jno
sub
shl
movs
cmps
add
mov
call
inc
popa
xor
ss
mov
rcl
ins
dec
push
mov
sub
add
mov
loopne
add
repz
xor
ss
test
add
mov
loopne
cmp
and
(bad)
dec
sub
rcl
sub
ins
(bad)
fimul
push
add
pop
dec
pop
jmp
adc
xor
push
dec
outs
mov
jge
mov
inc
inc
mov
jmp
call
pusha
je
bound
and
mov
xchg
push
jae
xchg
in
or
push
call
jle
cli
loope
xchg
cli
int3
in
lods
lods
add
sub
sub
out
push
shl
xor
pop
mov
cmp
lea
aaa
sti
fsub
ss
arpl
add
aas
aas
mov
xor
js
jbe
inc
test
push
popf
cmp
mov
gs
jns
mov
and
xor
test
mov
stc
into
or
cmp
sahf
lock
sbb
mov
dec
icebp
push
iret
push
jbe
inc
data16
icebp
inc
sub
jae
xchg
ror
dec
hlt
sub
enter
loope
lods
out
push
jbe
imul
and
es
scas
dec
lods
push
mov
or
mov
cs
inc
sbb
std
mov
test
ins
lds
fidiv
cmp
outs
pop
inc
lods
aam
fs
add
jge
cmp
dec
mov
pop
ret
sbb
mov
popa
push
jnp
sub
mov
sub
dec
pop
mov
inc
cli
mov
leave
shl
sbb
dec
pop
xchg
or
jle
xchg
dec
or
add
lods
jmp
fstp
or
dec
std
and
test
sbb
data16
adc
retf
xlat
cmc
cmps
sbb
push
pop
mov
push
and
and
and
mov
icebp
sbb
out
or
sbb
push
ins
aam
fmul
sbb
mov
mov
hlt
or
push
jle
fucomp
jo
ror
pop
lods
popa
push
xor
cmp
and
jae
nop
dec
fwait
adc
clc
or
mov
aad
jle
das
add
dec
ds
pop
add
nop
push
pushf
dec
inc
inc
fwait
dec
mov
pop
jno
(bad)
(bad)
je
and
dec
test
hlt
ficom
push
mov
jno
mov
sbb
cli
xor
mov
xchg
and
jmp
loope
dec
stos
ins
out
mov
loopne
fmul
test
cmps
daa
imul
pushf
pop
adc
ins
pop
push
gs
cwde
xchg
gs
inc
pop
sahf
jne
cmp
cmp
jb
(bad)
push
fs
adc
dec
inc
mov
popf
outs
mov
enter
mov
inc
push
add
loop
push
sub
mov
retf
loope
out
in
xor
jo
test
mul
je
fwait
mov
mov
mov
mov
imul
pushf
mov
pop
mov
rcl
adc
mov
or
shl
out
ins
push
mov
adc
scas
mov
mov
add
xchg
and
aad
sti
push
jae
xor
(bad)
xor
cmps
mov
lods
std
fimul
and
sbb
ds
fisttp
test
xor
push
scas
push
push
sub
jg
cmp
mov
jle
or
in
push
hlt
call
test
call
mov
jmp
mov
xor
add
call
das
xlat
mov
aam
sbb
scas
push
lds
jg
push
mov
inc
repz
add
push
push
test
ins
pop
jmp
leave
pusha
jnp
stos
sahf
sti
ins
ret
add
fldcw
push
sbb
repz
mov
movs
bound
imul
push
xor
adc
test
movs
(bad)
shr
jb
pop
cmps
jb
pop
inc
inc
int
sbb
or
jl
mov
and
sub
push
aad
imul
(bad)
xchg
imul
test
mov
sbb
cmp
repz
and
or
pop
pop
fs
loopne
adc
in
jns
mov
pusha
outs
test
in
cli
adc
pop
pop
ins
mov
sbb
add
jne
repz
ror
icebp
mov
pop
jmp
scas
push
(bad)
iret
data16
or
loope
xor
out
or
add
sbb
xor
jmp
je
jmp
push
jae
and
xchg
hlt
sar
arpl
pop
cmp
fwait
lea
mov
and
sbb
mov
shl
sub
mov
or
mov
nop
pop
inc
ret
jmp
add
push
mov
push
imul
imul
popf
cwde
scas
in
enter
or
ret
add
ds
add
out
mov
sbb
or
stc
push
add
das
pop
sub
cmp
fxch
jmp
jmp
inc
inc
rcr
ss
mov
push
inc
stos
retf
popf
sar
ds
retw
jg
mov
mov
and
loopne
push
adc
inc
js
xchg
retf
aaa
add
ret
and
(bad)
mov
push
mov
and
(bad)
push
mov
push
mov
hlt
dec
sub
loopne
push
push
mov
jbe
mov
cld
imul
call
sub
retf
popf
(bad)
pop
sub
arpl
sub
mov
aad
mov
inc
aaa
mov
xor
inc
int3
pop
aam
inc
adc
and
or
xlat
sub
jno
dec
push
fs
icebp
sbb
mov
pop
mov
mov
inc
pop
outs
iret
or
cmp
jo
dec
sub
mov
fisub
cld
shr
stos
pop
or
jmp
out
sbb
jmp
xchg
push
or
loopne
ret
cmps
jl
mov
jecxz
sbb
dec
cmp
push
lods
lods
inc
dec
or
push
fldcw
sub
es
adc
outs
add
imul
mov
(bad)
ja
mov
cmp
jmp
mov
xor
movs
movs
addr16
pop
dec
adc
test
out
and
mov
push
lahf
cld
adc
rcr
jmp
sbb
xchg
repz
lock
pop
xchg
cwde
cmc
mov
push
int3
out
and
cmp
popfw
xchg
cmp
xabort
sbb
jb
in
jbe
pushf
pop
data16
aad
jle
into
loop
or
into
loopne
add
fdivr
(bad)
call
xchg
mov
mov
pushf
fisub
pushf
ja
jmp
sub
add
and
jmp
push
int
fcmovnbe
and
sub
or
ficomp
sbb
push
cmp
jb
inc
lods
rcr
push
sbb
xchg
int3
retf
mov
adc
repnz
dec
mov
add
popa
jecxz
call
cld
mov
mov
xchg
int3
push
sbb
test
lods
jns
push
adc
jb
shl
pop
gs
jmp
out
mov
or
xor
shl
mov
adc
pop
dec
dec
mov
cmp
test
(bad)
sub
dec
in
sub
jecxz
cmps
add
call
pop
and
xor
push
call
jns
ins
dec
ins
push
cmp
dec
mov
inc
or
fs
adc
stos
mov
jge
and
rol
test
cmps
mov
sti
lds
inc
arpl
mov
popa
imul
jo
pusha
out
test
pop
popa
push
in
jl
push
push
xlat
bound
scas
in
xlat
push
push
movs
dec
adc
or
pop
xor
xchg
push
dec
jmp
jg
in
push
lock
(bad)
mov
gs
mov
and
ss
ret
or
cmc
push
dec
sub
or
pushf
xchg
mov
in
icebp
loopne
inc
loope
xor
(bad)
scas
mov
pusha
pop
add
lahf
and
jne
and
mov
aaa
jne
stc
aas
out
call
xchg
sar
leave
inc
test
or
pop
push
les
scas
adc
fwait
imul
dec
dec
test
jb
mov
sar
icebp
xchg
mov
pcmpgtb
and
repz
daa
xchg
xchg
sti
push
push
jmp
and
and
or
dec
ror
mov
pusha
mov
adc
test
push
aad
cmp
mov
(bad)
js
pop
sbb
sti
in
xchg
aam
and
scas
das
push
mov
push
ds
retf
ret
cld
push
stos
fcomp
adc
jo
cmp
sbb
sub
cs
cwde
push
jmp
jle
out
jge
mov
inc
or
jo
jp
adc
out
adc
or
out
ss
sar
vcmpsd
enter
dec
inc
int3
cmp
jecxz
out
inc
dec
(bad)
xlat
ja
repnz
cmp
xor
(bad)
mov
cwde
mov
cmp
lea
call
mov
pop
bound
adc
adc
leave
cmp
or
xchg
pushf
inc
mov
repz
or
retf
div
shl
mov
sbb
shl
movhlps
int
jmp
mov
jbe
jno
repnz
jae
pop
in
fcmovnu
sub
jge
adc
(bad)
cs
(bad)
clc
stos
and
adc
adc
fisubr
cmp
jae
fs
jle
mov
gs
and
push
xor
and
fsubr
popf
jp
ins
out
ds
lods
ds
loopne
pushf
dec
inc
jmp
fiadd
push
sub
sbb
outs
out
fistp
and
aas
out
inc
push
inc
xlat
mov
cmps
(bad)
stos
movs
cmc
enter
inc
push
(bad)
fdivr
das
pop
fwait
mov
sti
cmps
or
cmp
imul
sbb
or
pop
push
rcr
imul
xlat
outs
push
sub
fmulp
xor
adc
idiv
aaa
dec
aaa
stos
ss
jg
fs
int3
xchg
cli
hlt
dec
out
shl
jns
mov
mov
push
ds
fstp
fsub
xor
pop
daa
and
je
std
push
inc
push
or
imul
out
adc
sar
in
dec
jae
cmp
jne
int3
pop
mov
mov
bound
popf
repz
retf
inc
mov
int
lds
or
xchg
dec
fwait
pop
xchg
or
cmp
mov
push
(bad)
in
mov
rcl
mov
pushf
push
out
mov
mov
inc
sar
xchg
adc
jecxz
dec
daa
and
jmp
xchg
jle
mov
rcr
into
mov
(bad)
cmp
xchg
sahf
and
ret
adc
cmp
fs
retf
jae
call
xor
fdiv
mov
out
inc
inc
lods
jnp
(bad)
lds
stc
adc
add
jge
dec
fcmovb
cmp
xchg
mov
dec
inc
imul
nop
jle
mov
mov
fst
pop
loope
or
jge
shr
jb
jne
test
out
ins
or
jmp
jmp
daa
or
sbb
leave
outs
xchg
shld
jge
aad
test
je
jmp
iret
call
and
cmp
jb
div
idiv
xor
ins
ret
ja
sbb
ds
es
push
add
sahf
sub
outs
inc
mov
aas
cmp
push
push
mov
push
adc
and
inc
les
mov
mov
mov
fucompp
adc
mov
rcl
loope
xchg
pop
punpckhwd
stos
fwait
pop
mov
out
jnp
ds
mov
cmovg
arpl
mov
jge
jecxz
sahf
lock
movs
mov
out
ja
mov
and
sub
movs
dec
shl
lds
xor
fnstenvw
loop
cmp
pop
out
xor
ja
mov
xchg
dec
pushf
adc
out
into
push
adc
das
jl
out
cs
(bad)
xchg
outs
ins
test
jge
movs
cmp
cmc
out
iret
ret
pop
nop
add
adc
in
ret
adc
xchg
ret
lds
pop
cmp
jmp
int3
sti
mov
mov
jmp
mov
sbb
fldenv
fdiv
loop
xor
outs
pop
sbb
dec
sub
fwait
retf
dec
adc
(bad)
jnp
in
cmps
pop
xor
addr16
add
repnz
sbb
push
test
fnstcw
(bad)
js
jmp
mov
add
test
jne
xor
out
fwait
in
pop
mov
loopne
arpl
(bad)
xor
outs
addr16
or
add
xchg
inc
add
mov
fadd
mov
add
sbb
adc
pop
pop
in
push
jp
xor
je
imul
stc
ins
adc
sbb
lock
push
jmp
out
stos
ins
xchg
cmp
aad
out
mov
push
xchg
test
or
sub
mov
out
ds
loopne
jno
(bad)
stc
adc
add
das
xor
and
sbb
lea
(bad)
lahf
add
dec
idiv
(bad)
iret
clc
cmp
xor
pop
or
dec
cdq
scas
jle
mov
mov
in
mov
jecxz
jbe
das
pop
cmp
dec
ds
lea
and
sahf
jle
enter
arpl
jmp
or
popa
enter
(bad)
fdiv
sar
pusha
imul
cwde
popa
push
(bad)
push
pop
mov
sub
repz
dec
adc
shr
cmp
cs
and
push
sub
inc
xchg
in
mov
pop
test
adc
adc
lahf
dec
outs
imul
and
in
sub
mul
repz
pusha
in
sub
scas
adc
aam
or
enter
jno
and
mov
cmp
sbb
aad
mov
mov
jle
inc
mov
mov
xor
mul
lahf
mov
mov
push
xchg
loop
shl
xchg
in
aam
sahf
stos
mov
mov
mov
loope
out
jns
jmp
jbe
data16
push
pop
add
out
fiadd
in
push
jbe
stc
ins
mov
sahf
jl
jno
out
test
es
aam
jo
jp
xchg
lea
pop
sbb
mov
pusha
int
mov
ss
popa
add
mov
lahf
pop
popa
in
in
cdq
fs
popf
fdiv
pop
test
dec
inc
add
adc
and
jmp
in
daa
in
das
stc
xchg
je
lods
je
mov
imul
xchg
mov
jne
iret
fcmovb
jne
sub
jno
(bad)
int3
jno
inc
mov
push
push
ret
mov
or
aam
adc
outs
xlat
mov
lods
clc
inc
mov
inc
adc
jns
mov
sbb
shr
xchg
jecxz
daa
nop
(bad)
int
mov
fcom
xchg
scas
sub
popa
push
pop
sbb
dec
inc
dec
icebp
test
jl
enter
adc
movs
jecxz
movs
hlt
repz
sbb
xchg
pop
adc
std
dec
test
or
mov
pop
aas
shl
sbb
(bad)
imul
sub
fist
dec
sbb
aam
add
pop
dec
adc
loopne
pushf
jno
jae
pushf
and
test
aaa
push
sbb
pop
ins
mov
(bad)
dec
xchg
cli
cdq
std
es
jmp
(bad)
mov
cmp
jmp
mov
push
aad
repz
mov
sbb
nop
mov
jno
sub
pop
sub
enter
in
jns
fild
pop
les
scas
xchg
mov
out
jg
cmp
fiadd
imul
mov
mov
shr
out
jns
aas
(bad)
sbb
mov
loope
mov
div
dec
and
add
fcom
pop
cmp
sub
xchg
sbb
add
xlat
leave
(bad)
popf
pop
jnp
cld
out
cs
adc
sbb
out
sub
inc
or
leave
popf
or
loop
clc
sub
jmp
scas
and
lahf
ds
pop
call
cld
push
pusha
push
clc
or
cdq
outs
int3
imul
or
pop
cmp
mov
rcl
in
stos
loopne
mov
push
into
pop
retf
ret
xor
std
push
push
retf
(bad)
rcl
aad
sbb
(bad)
dec
xor
or
clc
ja
shl
cmp
sti
cmp
cmps
add
stos
or
dec
dec
ret
es
sub
mov
or
pop
push
jecxz
sub
jb
mov
mov
mov
imul
mov
aad
popf
jl
dec
imul
add
enter
gs
cdq
mov
pop
js
add
mov
cmc
jecxz
push
add
push
sub
jp
je
add
out
pop
into
mov
mov
adc
cs
mov
cwde
retf
lock
xor
sub
fdiv
aad
adc
fiadd
cli
loope
pop
push
out
xchg
xchg
test
bound
retf
xchg
inc
mov
inc
aam
fwait
xchg
(bad)
shr
lods
(bad)
scas
dec
pusha
call
arpl
jle
push
mov
cmp
xor
es
pop
das
lea
retf
inc
xor
fs
pop
retf
addr16
adc
retf
mov
xchg
push
mov
jnp
dec
bound
add
mov
pop
btr
mov
dec
int3
stos
call
mov
rcr
fld
jo
(bad)
fiadd
and
push
(bad)
mov
push
mov
stc
jmp
pop
scas
add
daa
ins
pushf
popa
cmp
dec
(bad)
mov
jne
pop
daa
sbb
mov
bnd
xor
push
mov
xor
mov
std
ficomp
push
addr16
xchg
or
push
pop
cs
scas
aas
xchg
pop
jg
fst
ret
xchg
pop
shr
loop
jnp
pop
xor
jnp
add
rcr
ret
lods
pusha
(bad)
fucomi
mov
test
jb
push
xchg
shl
jnp
add
leave
into
sahf
xor
dec
sub
and
or
outs
jns
sbb
push
mov
aad
mov
xchg
jo
fst
pop
test
push
out
push
cwde
sbb
test
leave
inc
adc
out
repnz
jne
mov
xor
int
ja
cli
out
ins
jne
inc
dec
outs
adc
(bad)
call
add
xor
adc
inc
leave
stos
or
stos
jmp
xor
jecxz
push
jle
and
int3
movs
das
retf
in
lods
push
and
dec
mov
xor
(bad)
xchg
cmp
mov
mov
and
clc
lods
dec
mov
xchg
sub
pop
pop
jl
or
and
ins
or
in
xor
call
shr
sub
retf
ret
call
jo
push
dec
sahf
ds
cmp
mov
adc
xor
jnp
pop
adc
jmp
adc
push
sub
clc
mov
icebp
hlt
movs
gs
pop
push
repz
data16
jmp
cmp
sbb
out
adc
ins
(bad)
mov
xor
xchg
jg
in
(bad)
iret
add
out
push
mov
jmp
movs
dec
scas
mov
(bad)
push
inc
jnp
loopne
mov
fwait
adc
addr16
xchg
into
out
jno
leave
jecxz
into
mov
adc
pop
in
(bad)
call
jecxz
dec
mov
pop
pop
je
aam
xor
cld
fnsave
sub
and
lods
sbb
or
jbe
test
cmp
sub
xchg
stc
push
push
fwait
mov
xchg
pusha
xlat
imul
mov
test
fcomp
sub
mov
ss
xor
test
(bad)
mov
ins
mov
ss
add
fild
repz
loopne
addr16
sar
push
mov
fmul
(bad)
cmp
mov
js
stos
lods
hlt
std
sahf
inc
iret
and
or
test
jmp
jle
push
cmp
fcomp
movs
cmps
lds
rcl
stos
xor
inc
dec
sub
(bad)
out
pop
jp
mov
(bad)
xor
fcom
aaa
adc
dec
(bad)
repz
fiadd
mov
sub
jns
inc
or
mov
xor
cmp
rcl
xor
pop
and
push
inc
xchg
inc
nop
out
call
leave
fld
in
pop
xlat
sbb
stc
stc
gs
nop
inc
mov
sbb
daa
xor
mov
push
sahf
dec
(bad)
outs
add
dec
add
pop
jge
sbb
out
push
mov
mov
outs
jbe
sar
hlt
jb
mov
(bad)
fstp
stos
xor
(bad)
lods
jo
fild
(bad)
cs
xor
fnsave
pushf
inc
mov
pop
xor
dec
aam
and
sbb
retf
mov
jne
pop
fimul
lods
add
lds
lods
xchg
xor
cmp
retf
sbb
rcl
outs
(bad)
loopne
out
cli
jge
push
vzeroall
aaa
xor
add
jae
in
adc
xchg
push
(bad)
sahf
mov
push
and
fisttp
mov
movs
inc
pop
loop
nop
test
aas
push
xchg
fisttp
mov
jge
dec
jge
into
shr
mov
dec
(bad)
dec
add
daa
jp
fld
fldenv
push
cli
adc
pop
pop
daa
arpl
mov
fwait
in
sar
mov
bsf
dec
jae
loop
aaa
cmp
push
rcl
cwde
and
fwait
sahf
icebp
std
dec
lahf
cld
push
xchg
dec
lahf
lods
jmp
std
push
mov
jmp
cs
and
js
jp
ret
movs
inc
xor
xchg
sub
xchg
es
aam
mov
lods
mov
sar
xchg
call
fisttp
mov
pop
and
or
pop
jecxz
adc
lods
ss
lods
dec
lahf
ror
(bad)
adc
mov
dec
(bad)
xchg
sub
pop
dec
into
inc
sub
xor
or
mov
jb
pop
mov
hlt
cld
fwait
pop
fidiv
out
popa
cmp
adc
or
movs
lock
out
xchg
inc
xor
xchg
or
ss
dec
push
add
call
inc
out
mov
stos
fsubr
bound
cmc
or
arpl
enter
pop
inc
repz
sbb
outs
in
sbb
hlt
mov
and
fidivr
jbe
popa
popf
(bad)
out
xchg
push
push
jg
push
ja
div
dec
lods
mov
mov
daa
clc
outs
push
push
cld
pop
pop
adc
imul
aad
test
cmp
enter
push
std
inc
mov
xchg
xchg
inc
(bad)
and
aad
mov
add
ret
lods
inc
out
imul
nop
sbb
ror
jge
cmp
std
loope
cmp
(bad)
jg
adc
or
enter
or
adc
pop
(bad)
inc
sub
inc
push
add
sbb
xor
cmp
push
enter
push
fcmovnu
xor
les
mov
bound
into
lahf
inc
ror
fwait
neg
aam
out
xor
jg
mov
xlat
lahf
mov
mov
fimul
popf
test
sbb
sub
(bad)
(bad)
fistp
xor
in
mov
jle
cld
mov
dec
push
in
call
push
dec
mov
jns
cmps
jbe
mov
lahf
jecxz
dec
mov
mov
pop
cmp
mov
arpl
pop
cmc
sbb
xchg
(bad)
inc
mov
or
imul
fdiv
mov
and
into
xchg
(bad)
mov
push
in
retf
repz
mov
test
dec
fisubr
cmps
in
push
add
mov
mov
cmps
movs
sahf
test
add
sbb
adc
fisttp
sub
jg
mov
and
jmp
movs
inc
adc
loop
bound
jmp
dec
cld
or
call
pop
ds
sub
int3
(bad)
(bad)
ins
scas
add
ins
aad
loopne
adc
sbb
jne
outs
inc
push
xor
(bad)
mov
cmp
inc
cmps
in
jns
repz
xor
cmp
bound
ins
sub
mov
fadd
aaa
dec
addr16
movs
data16
iret
cmp
int
xchg
iret
fistp
add
mov
add
dec
imul
mov
scas
mov
imul
jle
int3
sub
cmps
imul
jno
cmc
push
(bad)
cmp
adc
pop
xor
je
enter
dec
mov
push
(bad)
aas
jo
aaa
es
sub
push
sbb
mov
inc
and
mul
push
pushf
out
fdiv
scas
mov
inc
jo
movs
mov
xchg
test
inc
add
jno
mov
scas
push
sub
sub
pop
or
rcr
fdiv
cmp
sbb
test
enter
mov
fild
sysret
xor
out
mov
pop
(bad)
loope
sub
push
arpl
cmp
add
cwde
push
gs
push
push
cmp
and
sbb
mov
jns
dec
inc
xchg
add
xchg
call
pop
xchg
mov
jmp
test
jle
push
fnsave
jmp
mov
sub
aaa
jg
inc
lods
mov
mov
iret
add
inc
pop
int
dec
mov
pop
popa
add
scas
test
pop
inc
cmp
sbb
std
push
xchg
dec
or
jmp
inc
(bad)
fdiv
mov
int3
xchg
hlt
jge
cdq
jmp
push
or
dec
lods
adc
(bad)
fdiv
jle
or
outs
or
call
xor
mov
scas
xchg
pop
mov
arpl
push
push
ror
mov
popa
call
ss
scas
aaa
inc
movs
dec
mov
add
mov
das
data16
mov
in
lods
inc
push
mov
nop
add
ins
mov
ja
mov
cmc
fwait
mov
add
adc
in
out
inc
xor
aad
(bad)
cmp
outs
dec
mov
ror
fnstsw
(bad)
fistp
out
(bad)
xchg
fist
mov
in
cli
pushf
rcr
aad
xchg
mov
ret
aad
jmp
push
xchg
xchg
mov
mov
add
mov
inc
add
mov
enter
gs
bound
mov
pop
and
int3
aaa
cmps
push
jbe
add
add
xchg
imul
cmp
sti
jnp
inc
add
xlat
sbb
inc
mov
sub
mov
cmps
add
int
(bad)
pusha
sbb
clc
lahf
inc
lods
aaa
adc
push
mov
in
(bad)
imul
int
iret
and
jbe
test
ss
neg
jecxz
sar
adc
(bad)
(bad)
dec
jmp
aaa
inc
(bad)
mov
and
not
jge
shl
pop
movs
dec
pop
daa
pop
inc
inc
pop
sbb
adc
mov
popf
jmp
add
and
pop
xor
pop
mov
mov
push
dec
sbb
mov
std
aad
mov
xchg
xchg
mov
adc
push
jl
mov
adc
out
lock
repz
xacquire
inc
rcr
(bad)
cli
enter
and
or
lods
sub
test
icebp
mov
mov
xchg
dec
call
add
imul
push
xchg
sti
pop
pop
sbb
cmp
les
add
mov
sar
push
adc
pop
pop
xor
pop
hlt
scas
fwait
xor
mov
popa
pcmpeqw
mov
repnz
sar
out
dec
mov
movs
jns
ret
and
outs
out
push
rol
pop
sar
addr16
out
daa
pop
cld
adc
xchg
mov
inc
add
push
cwde
jbe
inc
mov
cdq
adc
fist
inc
dec
aad
jnp
sahf
pusha
mov
jmp
mov
lods
jno
sub
jbe
cmp
jns
cli
(bad)
jo
push
loope
aad
mov
rol
mov
neg
sub
shl
fwait
mov
ja
imul
jge
push
arpl
loope
jg
out
or
fsubr
repnz
leave
add
jo
pusha
jbe
or
lds
xor
push
test
sbb
sti
aam
rol
icebp
btc
mov
sub
jmp
jnp
mov
mov
jb
push
push
mov
sbb
inc
jno
aaa
push
shr
(bad)
icebp
repnz
mov
mov
and
aaa
mov
dec
or
rep
stos
cmp
fwait
push
stc
cwde
(bad)
retf
xchg
out
push
hlt
xchg
(bad)
lock
and
pop
jbe
lock
jl
mov
stos
pop
push
pop
jns
outs
add
sbb
dec
rcl
test
cwde
dec
add
int3
call
lds
cmc
dec
inc
and
repz
push
xchg
stc
fadd
test
xor
push
sub
add
ret
sub
nop
les
pop
loop
pop
in
inc
jmp
rol
icebp
xlat
xor
and
jbe
jne
sbb
xor
sbb
sbb
bound
adc
stc
pushf
stos
icebp
push
add
jb
sti
cs
aaa
aas
mov
fisub
out
in
cmp
(bad)
out
mov
adc
(bad)
cwde
push
loopne
(bad)
mov
in
adc
fsubr
mov
lods
movs
xor
sbb
lods
fs
inc
sub
lahf
sbb
xor
cli
out
iret
dec
mov
mov
xlat
xor
retf
jmp
jo
pop
sub
jno
mov
mov
mov
inc
sub
push
aas
std
inc
inc
and
sti
cmp
push
pushf
xor
cdq
dec
inc
shl
gs
jp
cmp
test
or
(bad)
or
in
jge
aad
out
test
jmp
inc
push
push
aam
stos
add
imul
lods
add
pop
inc
out
rcl
cmp
fcmovnbe
add
(bad)
inc
dec
mov
std
jecxz
adc
(bad)
call
sahf
add
fs
sti
sbb
ss
or
xlat
jmp
jnp
dec
fisttp
out
lds
and
inc
pop
jnp
cmp
movs
push
mov
ins
sbb
pop
fild
or
inc
xchg
mov
push
jmp
adc
xchg
test
ds
jecxz
pop
jp
adc
cwde
mov
(bad)
pop
pop
dec
or
sbb
lods
xchg
adc
jmp
out
stc
xor
in
lahf
or
cmc
test
gs
sub
imul
inc
aaa
mov
jle
sti
fnstcw
push
outs
ret
int
jo
push
iret
jge
fistp
cmps
fcom
pop
cld
pop
mov
das
xor
pop
and
int
mov
repz
jmp
dec
adc
out
out
or
int3
inc
adc
adc
pop
outs
iret
jl
pop
pop
sbb
inc
rcr
mov
in
out
or
cmps
sbb
fild
mov
pushf
repz
jne
cmp
int
xchg
cmp
xchg
xor
mov
rol
ss
icebp
shr
jmp
dec
pop
pop
inc
inc
rol
add
mov
cmps
ret
xor
sub
retf
pop
(bad)
mov
xor
xor
pop
sub
cli
icebp
loopne
mov
jb
fidiv
mov
pop
xchg
(bad)
xchg
dec
push
test
add
push
xlat
jg
jp
jb
jno
loope
add
push
mov
sub
stos
adc
cmps
pop
ficomp
xor
jg
or
jo
xchg
and
rcl
lock
(bad)
cmps
mov
(bad)
f2xm1
sar
cmp
shr
dec
leave
jmp
mov
add
imul
push
cli
inc
imul
aad
stos
add
cmp
cmps
sbb
cmp
add
mov
cmp
bound
jns
loope
mov
xor
sub
or
add
mov
mov
push
sti
dec
pop
push
pop
mov
pop
mov
jb
xor
xchg
cmps
test
out
or
je
jo
gs
js
out
jnp
outs
add
mov
mov
push
in
or
sti
push
jo
xor
inc
pop
pop
mov
xchg
push
fisubr
lahf
cld
jmp
adc
push
dec
dec
ins
and
push
or
dec
ret
mov
f2xm1
xchg
jns
inc
stos
inc
jb
mov
ins
mov
pop
outs
addr16
inc
icebp
lds
clc
xchg
leave
or
arpl
shr
js
pop
dec
mov
push
pushf
test
js
sbb
mov
jmp
(bad)
dec
fwait
inc
outs
stos
sub
clc
pop
imul
leave
sbb
jle
ds
sub
add
out
mov
mov
pop
push
sbb
mov
shl
pusha
(bad)
into
fst
data16
xor
mov
xor
sub
out
xlat
pop
loope
xchg
inc
outs
jnp
xor
mov
and
jp
loope
outs
sbb
(bad)
mov
and
push
stos
pop
sbb
jno
pop
lea
or
shl
mov
and
call
ret
xchg
fnstcw
loope
dec
or
push
xchg
repnz
jg
scas
rcl
ret
xor
scas
cld
mov
mov
push
mov
sbb
stos
out
aad
adc
mov
xor
mov
dec
jbe
and
div
cs
cmp
stos
ds
movs
sar
test
iret
pushf
sbb
jbe
je
enter
cwde
(bad)
prefetch
xlat
leave
pushf
jecxz
mul
in
pop
repnz
sbb
adc
stos
jecxz
lock
in
lods
dec
push
adc
dec
cmps
mov
lock
int
shr
movs
jnp
jb
mov
xchg
add
hlt
mov
push
xor
cmp
jno
pop
ss
(bad)
jl
push
push
dec
data16
pop
jg
std
push
mov
hlt
pop
adc
mov
xor
test
cmp
dec
mov
in
mov
mov
sbb
pop
jbe
lea
push
sar
push
sub
xchg
out
hlt
(bad)
aas
cld
jne
jns
jle
cwde
cmps
test
push
ins
ins
mov
jl
mov
push
rcl
add
mov
adc
outs
mov
mov
in
and
popa
pop
and
lea
mov
mov
mov
pop
adc
es
jmp
pop
(bad)
shl
mov
xchg
ja
sbb
inc
add
stos
mov
iret
dec
xlat
dec
int
pop
mov
retf
adc
mov
push
sbb
cmp
es
scas
lods
leave
rcr
add
or
cdq
(bad)
xor
stos
loop
mov
int3
jmp
imul
scas
pop
cmp
icebp
sub
cmps
int3
xchg
ds
mov
lahf
xor
push
ja
mov
cmp
repz
fcom
or
adc
pop
stc
test
jl
mov
sub
dec
add
lock
xchg
std
loope
ss
xor
adc
adc
push
lahf
add
push
mov
test
pushw
xor
out
jl
sbb
dec
mov
jmp
inc
push
movs
inc
ret
mov
pop
and
and
mov
(bad)
cmp
sahf
jb
mul
or
mov
into
or
jmp
sub
(bad)
jl
xchg
mov
call
dec
pop
ins
sub
or
in
fst
xor
cmps
mov
dec
sbb
jle
loope
bound
jge
pop
das
and
mov
push
outs
mov
pop
inc
ror
out
jmp
rcr
jmp
xor
in
mov
or
das
pop
cli
clc
test
xor
fdivrp
pop
movs
jo
shl
and
xor
pop
fwait
repnz
call
fcom
in
xchg
in
xor
sbb
js
pop
pop
adc
movs
clc
mov
inc
cmps
fst
mov
pop
out
repnz
bnd
fidiv
popf
fcmovnu
dec
movs
dec
stos
push
daa
out
push
jb
aam
cmp
mov
and
loope
mov
stos
int
nop
icebp
mov
pop
xor
popa
inc
imul
loopne
push
xchg
pop
lds
xor
cs
call
xchg
lock
add
cmp
aaa
das
xchg
aam
outs
imul
push
sbb
sbb
rcr
fstp
in
into
(bad)
paddd
cmp
popf
add
mov
cmc
jnp
pop
mov
pop
ret
dec
mov
sbb
add
int3
popf
clc
pop
std
jmp
jecxz
ins
aas
pop
(bad)
cld
mov
(bad)
loop
arpl
xor
hlt
fcom
aas
xchg
call
xlat
push
push
movs
adc
add
ins
mov
inc
cmc
and
outs
outs
movs
jecxz
mov
xchg
into
lods
addr16
pop
stos
hlt
mov
inc
dec
outs
cmp
and
sbb
jecxz
jl
push
call
xor
neg
(bad)
clc
(bad)
lahf
repz
dec
mov
or
adc
in
call
add
bound
mov
gs
nop
jecxz
and
mov
aaa
mov
stos
sti
enter
pop
xor
es
repz
jmp
add
cmp
pop
in
push
push
aaa
scas
(bad)
inc
jl
ins
xor
sti
and
adc
outs
movs
(bad)
xor
test
aad
into
outs
js
and
iret
shr
or
in
pop
or
xor
dec
dec
jecxz
(bad)
jbe
lahf
jo
lds
scas
jo
or
and
stc
xchg
inc
stos
xlat
push
lds
add
call
cmps
out
pop
mov
cmps
popa
(bad)
ja
lea
pop
and
cmp
inc
pop
pop
dec
out
inc
in
pop
imul
aaa
or
adc
rcl
and
in
outs
xlat
sahf
mov
sub
pop
adc
sub
push
ins
(bad)
out
loop
call
pop
movs
pop
mov
adc
test
jmp
jmp
push
movs
cdq
cmp
jmp
sbb
les
shr
add
test
adc
cmp
jae
mov
push
inc
js
enter
(bad)
or
outs
inc
mov
mov
fst
mov
xchg
dec
inc
xor
shl
dec
rcl
mov
aaa
pop
call
cmp
outs
mov
mov
add
addr16
in
or
shl
pushf
xchg
pop
xchg
ins
stc
(bad)
stc
dec
sbb
stc
add
ret
or
cdq
xor
inc
test
fisub
retf
repnz
retf
mov
dec
xor
xchg
pop
std
push
dec
xchg
arpl
clc
mov
test
xor
(bad)
gs
jmp
pop
or
stc
fidiv
cmp
imul
jle
mov
xchg
mov
js
or
inc
pop
sub
(bad)
mov
mov
add
jne
xchg
scas
mov
adc
jmp
stc
aad
push
inc
add
aaa
fiadd
stos
dec
mov
xchg
sbb
mov
shrd
inc
mov
push
jg
xor
cmp
leave
pop
in
xchg
fwait
mov
mov
neg
adc
inc
in
xor
sbb
pop
xchg
push
and
pop
int3
fdivr
lods
pop
mov
imul
data16
mov
cmp
inc
dec
adc
aas
int
cld
push
je
pushf
pop
mov
mov
cli
jge
mov
js
pop
neg
aaa
pop
xchg
mov
xor
test
mov
js
or
xor
xchg
mov
arpl
in
and
push
int3
outs
or
dec
popa
xchg
(bad)
jmp
adc
rcl
mov
mov
out
ds
jns
fst
fld
inc
mov
das
sti
je
in
lods
icebp
aaa
dec
dec
das
loop
mov
add
jge
imul
push
adc
repz
push
lock
push
loopne
lahf
test
arpl
push
in
retf
into
push
add
xor
jne
push
inc
in
data16
cwde
stos
nop
push
(bad)
jne
dec
ins
adc
lahf
ds
adc
sub
xlat
xlat
mov
mov
sar
xor
mul
hlt
fisttp
jle
push
add
fsub
jns
cmps
hlt
repnz
push
pop
loopne
test
cmp
leave
arpl
fist
or
popf
loopne
aad
ret
mov
jno
test
mov
arpl
aam
es
pop
fild
cmova
jl
dec
clc
cmps
cmps
rcl
push
fnstcw
add
mov
rcl
cmp
shl
imul
ins
(bad)
cdq
test
sub
xchg
fs
jl
pop
cld
je
test
cli
stos
sbb
ins
in
mov
dec
aas
push
push
in
(bad)
jecxz
ins
sub
sti
scas
iret
movs
ret
cs
fldcw
div
int3
out
mov
into
and
xchg
test
iret
fisub
push
sbb
mov
(bad)
fstp
adc
popa
add
jae
inc
cmp
sub
mov
nop
xchg
push
cmp
cmp
loopne
mov
sub
ins
jnp
mov
inc
push
cmps
int3
xor
sub
inc
into
push
push
push
sbb
xchg
mov
aas
mov
in
rcl
push
push
xchg
add
movs
retf
push
jo
repnz
in
add
retf
and
jge
clc
inc
clc
lds
stos
dec
std
mov
mov
faddp
cmp
popa
mov
retf
outs
ss
push
dec
push
cmp
pop
(bad)
dec
push
enter
push
in
sub
dec
mov
mov
cmp
or
retf
scas
sahf
movnti
stos
call
nop
fisttp
pop
jecxz
and
cli
jns
add
xchg
push
pop
fisttp
xor
sub
sub
jecxz
adc
mov
arpl
pop
test
adc
adc
pop
mov
cwde
data16
int3
in
(bad)
jp
mov
sbb
ret
in
clc
mov
addr16
fdiv
gs
xchg
add
and
push
pop
bound
fsubp
push
or
outs
ins
jne
mov
cmps
lea
ins
into
add
(bad)
in
popf
push
in
and
outs
out
cs
and
sbb
outs
dec
aaa
mov
shr
jb
mov
movs
daa
jbe
sbb
mov
cmps
aam
mov
into
inc
or
and
jo
enter
push
push
adc
test
xchg
mov
xchg
xchg
sub
in
shl
xchg
sub
jmp
clc
xchg
cld
sbb
(bad)
repnz
jae
outs
mov
lds
or
sbb
cmc
dec
das
mov
fstp
cbw
adc
ret
dec
inc
sub
xor
fcomp
lds
enter
mov
push
outs
push
mov
cmp
sub
jp
mov
mov
fcomp
push
es
data16
push
cdq
push
fidiv
pop
sbb
mov
repnz
(bad)
rcr
leave
outs
fstp
outs
add
xchg
sbb
mov
fsubr
loop
ins
mov
adc
jb
lahf
pop
dec
mov
push
outs
repz
(bad)
mov
cmp
cli
xor
jae
das
push
hlt
(bad)
imul
or
es
mov
cmp
popf
and
adc
inc
pushf
inc
pop
shl
xchg
enter
sbb
push
pop
out
lods
push
mov
add
std
jae
shr
enter
test
push
shl
in
and
ds
fucom
add
or
stos
scas
int
sub
xlat
mov
loop
jb
in
inc
je
ds
dec
adc
mov
jg
je
inc
jns
inc
stc
xor
fild
in
mov
pop
pushf
retf
xchg
cmp
mov
retf
aaa
add
aas
jnp
cmps
retf
imul
adc
or
or
outs
mov
das
and
cli
lds
in
sub
lods
inc
mov
out
adc
test
cmp
es
mov
aad
inc
(bad)
clc
imul
mov
ror
inc
stos
xchg
xor
push
sub
jb
mov
mov
jmp
push
into
ss
xchg
jp
and
pop
jmp
xor
nop
rcr
cmps
(bad)
and
dec
pop
dec
xor
inc
xchg
mov
(bad)
mov
aas
ss
test
xor
pop
inc
mov
loope
sub
test
(bad)
pop
sub
or
aas
mov
mov
push
xchg
retf
into
xchg
pusha
leave
xchg
mov
adc
movs
call
js
(bad)
scas
int
cmc
dec
pop
call
imul
mov
jp
leave
xchg
cmp
pop
pusha
cmp
adc
gs
adc
mov
sbb
lods
xor
sbb
lods
mov
mov
and
xchg
pusha
pop
jg
and
ss
push
mov
shl
imul
dec
xor
(bad)
fnstsw
jle
adc
(bad)
mov
popa
and
out
pusha
push
jbe
iret
movs
dec
imul
push
fwait
stc
pop
inc
jle
(bad)
fs
sbb
clc
shr
test
push
and
cmc
sar
stc
add
sti
ror
loopne
popf
push
fwait
daa
xor
movs
adc
xchg
cmps
mov
pop
lods
add
or
icebp
lods
loopne
fwait
sbb
dec
retf
in
lea
jae
neg
in
retf
fcomi
push
and
push
in
retf
xchg
xor
mov
add
mov
lods
xor
fs
or
retf
out
dec
xor
in
iret
add
in
jmp
jle
ja
mov
dec
ror
fwait
outs
dec
sub
popa
pop
xor
(bad)
pop
fidivr
das
inc
icebp
pusha
add
dec
fcmovne
(bad)
into
mov
add
lock
idiv
add
retf
add
sbb
push
push
cmp
imul
pop
xchg
sub
and
mov
inc
mov
pop
in
add
leave
sti
xchg
pushf
retf
xchg
jae
fidiv
fs
jne
fmul
mov
fimul
cmp
mov
(bad)
(bad)
into
int3
out
nop
addr16
adc
push
data16
add
pop
pop
out
mov
push
cmp
jge
fmul
mov
pusha
mov
mov
(bad)
sub
xor
jp
mov
gs
or
mov
sub
push
or
retf
js
stos
add
sub
fmul
mov
loop
pop
mov
cdq
ret
or
repnz
dec
add
mov
jae
shr
xor
xchg
movs
ins
add
outs
das
sbb
add
out
and
jmp
shl
repz
push
popa
popf
mov
imul
call
das
int
add
mov
out
mov
gs
push
shr
std
int
jmp
push
ss
inc
es
sub
aad
jmp
(bad)
sbb
pushf
test
out
mov
xchg
retf
loope
cwde
xchg
xor
pop
xchg
inc
(bad)
sbb
ins
jmp
mov
push
iret
mov
popf
lds
mov
push
xor
push
(bad)
jno
push
inc
out
pop
jg
pop
jns
gs
mov
aaa
int3
leave
mov
out
ss
xchg
mov
ins
jg
(bad)
xlat
fnstsw
mov
dec
and
pop
ja
mov
iret
nop
icebp
mov
or
add
sbb
into
jns
stc
dec
test
ret
xchg
push
sub
xlat
xchg
cdq
and
es
ss
inc
sbb
retf
gs
mov
push
mov
dec
call
push
out
data16
xor
aas
call
(bad)
fisub
ret
(bad)
mov
sti
jo
cmp
(bad)
mov
and
data16
enter
(bad)
cmp
test
loope
sbb
cdq
or
xchg
or
stos
ror
scas
mov
pop
xchg
cmp
and
cmp
inc
sbb
outs
jb
in
hlt
push
outs
retf
adc
outs
(bad)
or
rol
fisttp
mov
jnp
xor
jns
repz
(bad)
rcl
adc
sbb
push
ss
pop
out
call
dec
call
test
xor
ret
in
xor
dec
popa
xor
(bad)
stos
sar
jp
mov
add
rol
add
jo
movs
into
cmp
pop
sub
or
adc
cmp
arpl
jp
mov
mov
imul
jl
adc
or
shl
gs
cli
mov
dec
(bad)
fs
adc
mov
or
(bad)
movs
icebp
push
xor
adc
test
aaa
sub
repnz
adc
cld
inc
cdq
jns
rol
adc
rol
pop
lea
lea
fdiv
pop
fbstp
bound
icebp
and
sbb
adc
sti
pop
mov
sbb
fsub
int3
mov
daa
dec
cmp
xor
inc
xchg
mov
jecxz
mov
popf
cli
push
pushf
and
or
xor
sub
push
adc
jecxz
je
lods
inc
xchg
push
stos
sub
retf
test
mov
jmp
repz
cmp
out
mov
popf
xchg
pop
inc
div
cwde
pop
push
popf
rcr
clc
pop
or
mov
fstp
test
aam
xchg
xor
inc
outs
fwait
mul
std
lods
sub
dec
add
(bad)
jae
and
sub
fsub
ja
jecxz
cmp
push
ins
sbb
pop
inc
xor
cdq
adc
fist
out
jle
cmp
jae
and
cmp
ins
jnp
xchg
push
adc
sbb
fdivr
mov
mov
fstp
mov
(bad)
jecxz
scas
std
cmps
inc
xchg
retf
jne
pop
retf
push
dec
(bad)
loopne
push
and
in
ror
jno
ror
dec
adc
dec
popf
cwde
cmp
cmp
cwde
or
ret
and
and
sahf
(bad)
call
cmp
xor
fnstenv
iret
cmp
popf
call
xchg
inc
add
fdivr
imul
rcl
and
ja
xlat
retf
adc
(bad)
fnsave
push
sub
or
sub
cdq
stos
rol
outs
pop
shl
add
pop
pop
cmps
fwait
pop
in
pop
imul
(bad)
rcl
loope
and
mov
test
shl
(bad)
cwde
or
mov
stc
adc
imul
adc
xchg
jp
add
push
sbb
cmc
call
inc
mov
pop
int3
sar
repnz
push
inc
outs
pop
mov
or
push
test
popa
pop
push
lea
jnp
and
xchg
mov
push
lock
nop
adc
mov
pop
adc
jl
and
sti
mov
dec
push
mov
and
jecxz
xor
outs
jl
xchg
(bad)
aam
shl
loopne
icebp
jnp
inc
mov
add
adc
pop
mov
and
es
outs
inc
int3
xchg
xor
lock
idiv
imul
(bad)
fstp
sub
pop
mov
sti
call
test
js
mov
mov
mov
jge
sti
and
push
and
add
imul
and
mov
push
pop
pop
int
addps
mov
pop
cmps
sbb
out
add
aaa
mov
stc
scas
sub
(bad)
xchg
shl
sti
(bad)
add
es
adc
adc
pop
fs
leave
scas
adc
add
mov
setge
xor
mov
inc
xchg
xchg
or
es
xchg
xor
sub
xor
dec
jmp
(bad)
pop
jmp
jae
mov
mov
mov
stos
mov
popf
test
fsub
popf
add
xlat
jbe
enter
xor
mov
dec
popf
dec
int3
push
and
xchg
(bad)
call
and
cdq
clc
(bad)
pop
xchg
adc
jl
or
cwde
pop
popa
sar
dec
cmps
test
sbb
jno
mov
push
add
ja
jg
vcvtdq2ps
jnp
gs
dec
xchg
mov
out
sti
dec
std
iret
add
mov
out
adc
cwde
mov
xor
je
dec
ret
mov
adc
neg
jns
gs
popa
sub
out
push
pop
pop
xchg
jl
fadd
test
inc
shr
ins
je
pop
cwde
pop
popf
adc
and
sub
xor
inc
mov
in
js
(bad)
shl
fs
fsub
rcr
aad
jle
jecxz
sub
xor
js
jnp
inc
icebp
cli
leave
pop
add
sbb
sbb
pop
retf
xchg
jge
jecxz
add
hlt
xor
loop
jp
pop
pop
push
inc
repz
ins
cmp
imul
mov
jp
mov
and
or
retf
mov
jl
xor
adc
and
sub
lods
sbb
adc
outs
sbb
(bad)
ficom
inc
adc
mov
pop
stos
push
jae
rcr
cwde
mov
out
(bad)
xchg
and
sbb
cmp
or
clc
adc
fild
cmp
and
dec
xor
loopne
xor
push
jle
mov
ds
ins
and
in
ins
ins
mov
aaa
cdq
std
sub
add
addr16
test
xlat
jl
push
cmc
fs
sti
iret
inc
pop
mov
lea
mov
(bad)
push
jg
or
pusha
pop
jno
jg
sub
xor
mov
clc
out
adc
push
in
push
outs
call
inc
xlat
inc
push
mov
imul
push
jmp
(bad)
adc
in
fisttp
add
mov
mov
jno
iret
mov
dec
or
out
pop
retf
jmp
cs
jl
cdq
call
xlat
pop
xor
jmp
pusha
xchg
sbb
cmp
jno
inc
das
nop
push
into
cmps
sub
mov
xor
mov
cmp
out
add
div
out
in
rol
adc
jno
or
call
ins
dec
cmp
adc
jg
push
mov
xor
adc
xchg
dec
dec
sub
adc
add
into
sti
arpl
adc
ds
and
ins
jne
pop
fwait
and
shl
popf
rcl
hlt
add
sub
push
gs
jmp
outs
dec
sub
sbb
add
cmp
lods
fld
(bad)
outs
pusha
push
jecxz
ins
(bad)
sub
push
mov
and
inc
push
sar
dec
repnz
in
bound
aas
rcl
cmp
ins
dec
leave
in
int
xchg
retf
nop
out
add
les
push
cwde
dec
or
bound
mov
mov
(bad)
nop
test
mov
sbb
xchg
mov
mov
hlt
jae
xor
add
imul
push
mov
cwde
or
cmp
std
pop
je
ret
cmp
int
mov
out
fcomi
cmp
cwde
enter
cdq
dec
mov
test
ins
inc
pop
cli
in
inc
cli
xor
scas
data16
push
sti
jmp
rcl
mul
or
xor
and
xor
inc
xchg
cmp
jno
pusha
shr
out
pop
or
mov
sbb
pushf
pushf
pop
mov
pop
jno
add
sub
inc
sub
mov
cdq
outs
mov
pop
inc
adc
pop
dec
adc
sbb
mov
inc
jb
mov
fdiv
sbb
rcl
test
inc
test
loope
add
ins
push
sub
gs
out
sbb
mov
and
mov
pop
mov
jge
test
mov
or
in
mov
clc
push
and
cmps
xlat
sub
int
lods
push
retf
cmp
or
pop
ss
add
jns
out
mov
xor
call
mov
push
pop
stos
sbb
gs
out
mov
adc
jp
into
and
pop
mov
mov
xor
mov
lods
lea
push
cmp
out
dec
(bad)
jne
std
int3
test
stos
push
ss
icebp
stos
fild
fs
scas
jmp
out
mov
xchg
ds
in
mov
sti
jne
dec
imul
loopne
lock
ret
inc
cmps
out
popf
loope
add
or
shr
xor
inc
or
jecxz
cmp
movs
or
inc
cmp
inc
pop
int3
iret
(bad)
xchg
push
jae
int
inc
pop
pusha
adc
or
jmp
mov
xchg
add
sub
xchg
(bad)
dec
inc
mov
mov
push
xchg
add
test
jnp
ds
jbe
pop
lahf
leave
cmps
mov
fwait
pop
mov
inc
xchg
sub
xchg
push
dec
repnz
mov
fnstcw
add
cmp
out
add
pushf
ja
push
inc
ja
adc
adc
fs
ret
push
cmp
movs
or
jo
add
or
inc
pushf
ins
adc
popa
cmp
imul
push
outs
sbb
gs
int3
push
adc
mov
pop
(bad)
shr
push
gs
xchg
iret
xchg
int
mov
jmp
push
or
inc
js
push
mov
jo
inc
test
sar
add
sub
mov
lahf
add
(bad)
out
mov
xchg
pop
pop
mov
mov
xor
cli
dec
xlat
out
dec
xchg
pop
mov
sub
fist
mov
adc
dec
div
cmp
add
sti
frstor
retf
cmp
push
mov
jge
cwde
add
sbb
int3
pusha
in
ret
xchg
push
jmp
popf
std
add
jne
dec
jmp
xchg
dec
jecxz
add
push
jmp
loop
add
jno
cmps
pop
lahf
ja
movs
dec
adc
or
dec
call
popa
fiadd
adc
jmp
sahf
xor
(bad)
mov
hlt
jno
aas
jne
xor
pop
in
arpl
loopne
sbb
add
cwde
cmp
call
clc
cmp
fwait
adc
scas
mov
inc
jmp
rcl
pop
in
aaa
and
dec
hlt
fistp
(bad)
inc
pop
dec
std
cmp
out
sub
mov
hlt
or
inc
cmp
push
and
sti
retf
loop
mov
in
pop
and
and
call
popf
ds
in
aas
rcl
jmp
daa
cmp
les
(bad)
pop
icebp
dec
sbb
iret
cmp
push
and
push
pop
mov
pop
inc
jb
add
jmp
jmp
pop
inc
fisttp
repz
push
out
xchg
cmps
leave
test
cdq
(bad)
fistp
xchg
jnp
test
arpl
xchg
sti
(bad)
cli
jp
dec
mov
sub
add
and
fsub
xlat
jp
adc
fisttp
daa
leave
or
add
or
cdq
pop
sbb
test
push
hlt
mov
pop
out
sbb
(bad)
shl
jg
in
rcr
inc
mov
mov
into
pushf
fcmovu
sti
fbstp
or
and
push
aad
mov
mov
sahf
jns
in
push
and
iret
or
mov
adc
pop
or
push
mov
sub
xchg
les
fwait
loope
or
push
shl
and
in
ins
and
pop
fnstcw
pushf
or
pop
push
sbb
inc
xor
jmp
add
or
mov
cmp
dec
clc
shr
jo
mov
adc
loopne
mov
add
in
cwde
fnop
jnp
cmp
dec
nop
fidiv
sub
add
xor
adc
mov
pop
mov
ja
xor
shr
jno
sbb
sbb
cli
add
fsubr
pop
jne
pop
scas
out
mov
push
sub
sub
jns
add
fsub
cmps
mov
push
lods
or
ins
ss
aad
ss
popf
mov
pop
inc
inc
push
jecxz
gs
inc
mov
test
loope
(bad)
dec
imul
adc
rol
cmp
mov
xchg
mov
dec
test
jmp
cmps
mov
std
ret
mov
rcl
(bad)
xchg
(bad)
imul
xlat
mov
mov
cmps
mov
outs
sti
sub
mov
and
cs
adc
fs
or
cmps
or
movs
xor
ja
mov
into
cdq
xchg
xor
pop
fs
xchg
cmc
imul
fist
inc
out
fwait
mov
adc
adc
sub
jo
retf
rol
cmp
in
(bad)
int3
jb
int3
test
mov
cmp
test
push
loope
ror
pop
call
adc
in
xor
shl
repz
inc
ret
loope
xchg
adc
jmp
xor
mov
or
movs
push
adc
cmps
pop
dec
and
jno
ror
mov
fdiv
sub
cmp
or
push
push
pusha
int3
mov
pusha
pop
das
inc
mov
push
cmps
inc
dec
test
pop
pop
cmp
mov
popa
addr16
dec
scas
aaa
push
rcr
lea
pop
stos
jmp
sbb
shl
sar
dec
loop
mov
(bad)
stos
push
mov
shl
mov
(bad)
loopne
xlat
dec
push
rcr
xchg
cmp
xchg
jne
jmp
shl
(bad)
lea
pop
fwait
lods
sub
inc
mov
pop
mov
out
dec
xor
sub
cmp
mov
xchg
mov
icebp
xchg
inc
call
sbb
dec
shr
adc
dec
xor
lea
mov
jmp
xor
scas
sub
mov
sbb
sahf
dec
mov
cwde
add
cmps
outs
lock
js
adc
add
xlat
mov
adc
mov
or
xchg
and
fs
pop
test
ret
into
(bad)
jae
push
add
sub
dec
cmp
jbe
dec
sbb
mov
xor
ror
mov
cmps
out
je
sbb
adc
mov
(bad)
iret
sbb
xchg
shr
or
dec
and
aad
cwde
add
inc
add
mov
mov
push
inc
js
adc
push
mov
enter
or
mov
sbb
mov
rcl
ret
scas
jp
jge
mov
pop
sahf
lods
add
xchg
ins
mov
sahf
jno
dec
jmp
adc
xchg
sub
cwde
xor
test
leave
and
dec
into
mov
or
xchg
shl
mov
lods
out
add
leave
div
hlt
scas
xchg
xor
sub
data16
jl
push
dec
call
mov
(bad)
sub
aad
inc
aam
xor
(bad)
shl
jne
jg
or
mov
mov
pop
adc
mov
mov
xlat
cli
(bad)
ror
das
cmp
xor
dec
mov
xchg
jp
xor
js
sbb
sahf
or
cmp
mov
mov
xchg
std
mov
xchg
xchg
push
leave
dec
test
sbb
into
(bad)
push
adc
pop
push
repnz
in
xchg
and
mov
inc
adc
fisubr
pop
cmps
dec
(bad)
in
lods
enter
sbb
sub
cmps
ds
cmp
scas
xchg
ins
ret
xor
mov
xchg
push
lods
dec
push
mov
mov
lods
add
jmp
or
or
stos
out
loope
add
stc
xchg
jmp
call
add
(bad)
repz
xchg
xor
int
leave
pusha
iret
(bad)
pop
data16
movs
data16
fmulp
fldenv
(bad)
(bad)
out
(bad)
cmp
test
sbb
or
cmps
pushf
repz
jl
dec
adc
dec
stc
cmc
int
jo
fstp
jne
out
enter
adc
and
(bad)
cmp
pop
movs
sbb
pop
(bad)
jp
pop
push
cmp
movs
imul
mov
xchg
mov
cli
mov
jg
jmp
test
xchg
adc
and
(bad)
scas
loop
stos
mov
pop
add
clc
jb
adc
(bad)
mov
js
and
cmp
das
mov
ret
retf
addr16
pandn
aas
jecxz
jl
or
into
adc
lods
sar
push
dec
sub
movs
adc
imul
mul
stos
rcr
or
cmp
mov
push
mov
test
and
or
out
neg
out
sbb
lock
ficom
call
jbe
mov
imul
mov
push
fnstsw
jnp
pop
pop
into
fist
pop
imul
xchg
aas
push
mov
and
js
sbb
xchg
pop
push
sahf
xor
or
loopne
adc
push
add
shl
adc
fnsave
icebp
iret
into
dec
push
adc
ror
xchg
sub
dec
jo
pop
cs
in
jmp
jmp
add
mov
mov
cmp
mov
and
mov
aad
xor
xor
rcr
fs
xchg
adc
and
mov
push
mov
pushf
push
scas
or
lods
popw
out
pusha
int
push
xor
std
and
adc
int
jl
pop
cmp
lea
inc
popf
jp
pop
inc
sbb
inc
mov
mov
fnstcw
push
imul
outs
inc
xchg
xchg
(bad)
hlt
cmc
xor
loope
push
adc
mov
lods
cmps
enter
pop
xor
push
pop
pop
(bad)
sub
(bad)
and
mov
push
pop
lods
adc
movs
add
sub
sbb
push
pop
scas
dec
mov
and
out
add
xchg
test
movs
sbb
repz
or
sbb
in
addr16
mov
pop
idiv
xchg
mov
gs
and
sub
jmp
jle
nop
fdivr
jl
xor
retf
jno
pusha
ret
enter
dec
xor
or
pop
mov
mov
lar
ja
shr
push
sbb
or
xor
inc
(bad)
in
sub
push
in
std
mov
xchg
fbld
pop
(bad)
in
(bad)
and
cmp
out
xchg
xchg
fnsave
mov
scas
cmp
inc
mov
cld
sbb
test
cmp
xlat
adc
pop
dec
jne
add
pop
jge
ret
push
mov
cs
aam
in
adc
ficom
stc
jb
or
clc
popa
push
sahf
pop
outs
in
addr16
out
push
mov
sbb
xchg
je
dec
dec
adc
cmp
xor
cmp
sub
sbb
and
fucomp
jp
sbb
in
cmps
into
inc
(bad)
lods
xor
inc
out
pop
retf
and
imul
out
rcl
std
test
lods
dec
lea
sbb
cli
arpl
sub
mov
jge
xchg
adc
shl
sub
stos
or
mov
cmp
mov
inc
mov
scas
mov
outs
repnz
push
pop
xchg
repz
push
rcl
jnp
stc
inc
jo
mov
aaa
and
dec
mov
push
stos
pushf
ins
dec
jl
cmp
popa
pop
push
xchg
jmp
stos
and
pop
rol
cmp
in
inc
xchg
mov
sahf
das
sbb
daa
shl
pop
sbb
outs
pop
shl
mov
je
jo
out
popa
or
fidivr
mov
xlat
arpl
div
mov
test
mov
or
inc
mov
pop
ret
scas
or
retf
mov
retf
mov
in
into
call
xor
adc
mov
imul
adc
xor
outs
dec
add
mov
enter
xchg
les
addr16
lahf
test
push
ds
ret
test
xor
xor
(bad)
mov
push
cwde
dec
mov
pop
das
loop
lahf
enter
push
mov
scas
mov
jae
dec
retf
mov
(bad)
cmc
pop
test
mov
jecxz
out
mov
or
cdq
xor
pop
out
pop
mov
imul
push
pusha
repnz
adc
push
cs
dec
fstp
pop
dec
push
xchg
push
mov
pop
lock
fld
enter
xchg
enter
add
adc
scas
dec
gs
sub
sbb
cld
xchg
test
push
inc
mov
sbb
and
fild
test
cmp
xor
jne
and
call
outs
mov
fisub
js
fisttp
mov
adc
xchg
cmp
mov
jle
(bad)
inc
xchg
pushf
sahf
jmp
mov
enter
push
gs
call
mov
jbe
cmps
sub
in
sub
das
xchg
push
mov
mov
movs
adc
(bad)
or
jbe
leave
add
es
push
add
pop
lea
mov
and
push
iret
mov
bound
cmp
inc
pushf
lds
inc
jp
int
repz
movs
mov
popf
sbb
xor
ins
inc
sti
into
jae
dec
adc
gs
jle
dec
cld
fcmovu
add
xlat
jl
sbb
cmp
out
jb
jmp
ret
out
cmps
sbb
fdiv
pop
sbb
sbb
mov
lods
mov
xlat
repnz
loope
rol
mov
cmp
lahf
jo
inc
cmp
lds
xor
add
imul
ss
aas
and
retf
push
int
out
aaa
pop
paddq
imul
add
repnz
outs
add
adc
rcr
fdivr
lock
cmp
fst
out
shr
movs
jecxz
ret
sub
xchg
(bad)
push
push
mov
jmp
xchg
push
sbb
add
jo
add
pop
sbb
push
cld
pop
inc
retf
lods
popa
sub
pop
test
enter
or
add
jl
ja
dec
dec
xchg
shr
shl
dec
mov
cld
adc
scas
das
cmp
ss
xchg
inc
mov
sar
mov
sub
movs
sub
pop
jg
lsl
xor
hlt
int3
inc
(bad)
stos
mov
(bad)
jp
addr16
not
mov
push
push
sbb
push
in
jae
pop
(bad)
adc
jmp
das
mov
out
repnz
or
adc
xchg
dec
outs
push
mov
inc
addr16
dec
loopne
test
and
ins
shl
rcr
lds
add
adc
fs
cli
retf
hlt
aam
mov
mov
cmp
add
out
pop
ror
adc
dec
add
shr
cli
jl
hlt
cmp
dec
pop
xchg
inc
dec
cmp
sub
mov
dec
gs
xchg
out
and
mov
xor
movs
jmp
cmpxchg
fs
or
mov
xchg
out
test
lea
mov
out
mov
sub
nop
fistp
cmc
out
out
hlt
jmp
outs
xchg
pop
mov
inc
push
add
sahf
call
in
aam
pushf
test
dec
mul
fdivr
push
sbb
sub
mov
sub
(bad)
push
xchg
pop
ins
cmp
mov
mov
sbb
inc
mov
ror
dec
ds
xchg
dec
mov
add
cs
imul
or
mov
xor
lds
jle
(bad)
shl
std
dec
pusha
dec
fs
pop
fwait
aad
mov
mov
or
call
aaa
or
xchg
fimul
(bad)
out
(bad)
pop
xor
mov
jmp
dec
ins
push
adc
push
cmp
loope
xchg
std
das
xor
inc
mov
sub
lds
cmp
aaa
adc
loopne
shl
mov
in
add
jl
(bad)
jge
cmp
aas
cmp
mov
call
cdq
sbb
adc
out
add
ficom
retf
cmp
in
mov
cwde
jl
fisttp
retf
adc
mov
lods
adc
movs
bound
mov
cwde
and
xor
out
ja
adc
add
jl
je
cmc
fsub
push
or
and
jnp
or
shl
dec
jecxz
inc
scas
sbb
xor
sub
ret
in
mov
lds
sbb
lea
dec
xchg
in
jp
mov
inc
adc
loope
into
add
shr
dec
out
bound
mov
jmp
xor
paddsb
paddq
mov
push
mov
jmp
scas
inc
imul
push
lahf
add
movs
in
jnp
lea
cmp
cmc
jbe
out
mov
scas
sbb
xchg
mov
popf
rcl
jle
jns
push
imul
fbstp
or
int3
cmp
jp
pusha
neg
inc
movs
test
and
dec
je
mov
xor
imul
push
add
popa
aas
and
and
mov
push
mov
or
rcr
xchg
scas
jno
dec
(bad)
pop
enter
inc
in
adc
jb
pop
adc
imul
dec
xchg
pop
arpl
adc
mov
mov
xor
sbb
in
xor
mov
aad
popa
int3
fbstp
jg
dec
add
and
lods
and
adc
aad
dec
xor
xchg
mov
sub
push
mov
lods
jb
and
cmps
xchg
js
pop
aas
mov
add
sbb
mov
shl
xchg
mov
cs
push
fwait
dec
test
(bad)
call
jae
jge
adc
add
mov
mov
adc
xor
in
inc
jp
imul
pop
rcr
jg
fpatan
sahf
fimul
inc
jae
sbb
call
jo
lods
jg
mov
nop
jb
mov
and
cmp
sub
mov
push
cmp
dec
hlt
sub
xchg
mov
test
sbb
xor
mov
je
fisttp
or
pop
sahf
pop
add
cmp
rol
cmp
cmp
ret
lods
mov
inc
loope
sbb
sub
jmp
or
dec
adc
xor
dec
fsub
nop
sub
int
leave
je
cmps
stc
mov
dec
ins
xor
stos
jge
test
cmp
das
push
out
ret
jg
jge
clc
fstp
jne
or
repz
fs
lock
cmp
addr16
icebp
call
arpl
pop
mov
les
and
xor
es
rcl
test
addr16
out
dec
jp
sbb
nop
je
fcomip
pop
stos
(bad)
or
ja
vmptrld
imul
into
sar
out
mov
add
test
mov
dec
pop
into
sbb
add
cmp
add
out
aam
rcr
ror
dec
daa
fs
add
mov
hlt
pop
mov
ret
add
cmp
mov
ins
addr16
retf
mov
dec
or
sar
test
mov
jl
jl
inc
dec
scas
int3
push
int
add
test
cld
push
mov
add
out
lods
add
sbb
add
mov
mov
aam
(bad)
movs
scas
pop
fcom
mov
sub
(bad)
sbb
fs
fst
xchg
xchg
or
shr
sbb
(bad)
ret
stos
mov
les
popa
push
and
xor
test
sub
movs
andnps
xchg
out
jp
mov
out
das
pop
jb
fild
into
push
pop
sub
xlat
or
lahf
adc
sub
cmp
das
and
aaa
mov
add
scas
fmul
std
call
jl
fcmovbe
pop
into
pusha
mov
bound
pushf
test
mov
and
mov
fadd
scas
mov
mov
ins
cmp
dec
repnz
jbe
mov
or
and
gs
mulps
mov
jmp
ret
dec
jge
lods
or
dec
pop
movs
out
sbb
sbb
nop
rcl
stc
cmp
sahf
aaa
js
outs
test
xor
cmps
shl
icebp
(bad)
push
ins
stos
pop
in
data16
icebp
jo
js
jmp
call
inc
jmp
cmp
adc
mov
adc
gs
aad
ds
shr
mov
test
mov
test
int3
and
pop
pop
dec
cld
pop
rcl
pop
pop
mov
cmp
iret
add
addr16
push
repz
mov
mov
ds
xchg
ins
push
(bad)
cs
fistp
mov
shl
je
mov
imul
dec
mov
movs
push
push
mov
call
sbb
mov
aas
enter
mov
mov
xor
mov
cdq
adc
mov
sub
mov
jmp
pop
xchg
rol
cdq
adc
scas
popa
rol
xchg
add
cli
jmp
and
call
xor
lock
test
popa
imul
pop
mov
fwait
mov
mov
pop
mov
cli
push
hlt
setg
sbb
and
inc
scas
or
push
pop
cld
mov
inc
pushfw
int3
fcom
jne
pop
xor
ins
rcl
or
in
mov
ret
push
or
bound
sub
(bad)
jnp
sti
pop
aas
mov
inc
sbb
sbb
pop
or
fidivr
sbb
pop
jb
fcomp
mov
xor
fmul
mov
fwait
popf
sub
mov
repz
jmp
xchg
and
mov
sbb
stc
push
inc
mov
cmp
stos
mov
jbe
call
lods
mov
imul
mov
push
retf
adc
pop
add
loop
rcr
mov
vandnpd
scas
repz
push
sbb
xor
sub
add
jle
out
and
sbb
hlt
or
xlat
or
mov
add
enter
fimul
test
in
mov
mov
inc
push
out
push
jecxz
out
cmp
ror
bound
ret
rol
dec
dec
pop
test
and
pop
es
jecxz
jge
bound
inc
or
cmps
std
cwde
out
movs
sbb
stc
es
(bad)
inc
lds
cli
jp
sub
ror
imul
mov
pop
icebp
mov
jns
xchg
(bad)
push
ficomp
enter
jae
push
cld
fdivp
mov
or
dec
into
mov
nop
ins
mov
ins
ret
(bad)
(bad)
(bad)
adc
sbb
mov
sub
lahf
cmp
aam
mov
or
aam
mov
dec
stos
xor
xor
idiv
popf
push
adc
xor
or
lods
ds
hlt
(bad)
in
cmp
push
sti
ret
adc
(bad)
std
shr
xchg
lods
or
test
add
out
jp
cmc
ficomp
(bad)
(bad)
leave
ins
sbb
leave
push
in
or
add
sbb
inc
sti
gs
out
sbb
jl
out
aaa
xlat
arpl
push
popa
test
ds
pop
sub
(bad)
loop
lods
add
in
ja
mov
les
or
inc
fld
dec
cmp
call
adc
inc
mov
mov
sbb
mov
jp
xchg
adc
push
pop
mov
add
mov
std
mov
out
push
jns
pop
rol
fsub
xchg
xlat
xchg
push
fstp
shl
enter
adc
pop
sub
in
xor
pop
push
out
loope
nop
leave
pop
adc
pop
ja
jnp
dec
or
stos
add
sbb
mov
mov
std
mov
inc
call
test
int
or
cld
retf
mov
jecxz
(bad)
cmp
dec
mov
aam
sbb
cwde
push
enter
push
mov
scas
mov
sahf
sbb
lods
(bad)
or
fstp
or
or
inc
jg
cmps
inc
sbb
xchg
xchg
je
fmul
out
jle
pop
push
xor
fldenv
vxorps
mov
cmps
aaa
in
sub
je
mul
jecxz
frstor
into
(bad)
aad
mov
or
(bad)
loopne
mov
add
push
and
int
xchg
pop
lock
pop
ins
hlt
stc
mov
sub
out
adc
adc
test
push
add
sti
retf
shr
shr
pop
mov
dec
int3
sbb
jno
sub
mov
leave
sbb
imul
sar
mov
mov
repz
arpl
jl
pusha
mov
pop
pop
cdq
sar
cmp
retf
jb
or
push
cmp
pop
and
fisub
jo
bound
xor
ins
mov
sbb
sub
jp
and
test
dec
jmp
cli
xor
cs
add
int
sub
repnz
cmps
xchg
int3
jg
jmp
push
sbb
test
xor
imul
loopne
std
ins
inc
imul
and
pop
shr
push
xchg
mov
out
call
rcl
scas
call
mov
popf
js
dec
or
jbe
mov
mov
shl
ret
dec
cmp
shr
mov
add
mov
jae
aas
jno
data16
or
call
cmp
popf
xchg
cwde
xchg
es
xchg
cmps
stos
push
xchg
xchg
fmul
add
jmp
addr16
cwde
lods
fnstenv
enter
stc
cmp
pavgw
mov
mov
aad
mov
aad
adc
in
xchg
adc
xchg
add
pushf
cmovl
push
cli
pusha
fcomp
mov
hlt
push
fidiv
repz
pop
pop
es
(bad)
lods
pop
mov
push
repz
dec
and
add
out
cmc
mov
pusha
popa
dec
call
xchg
daa
out
lods
and
(bad)
mov
iret
ficom
aaa
test
mov
std
mov
sub
mov
adc
pop
mov
cmps
xor
fld
inc
xchg
adc
inc
pushf
xor
jge
es
rcr
mov
stos
dec
cli
push
mov
push
xor
pop
ins
dec
cmp
and
std
sub
rcl
arpl
mov
mov
(bad)
mov
dec
shl
lods
sbb
inc
mov
dec
lods
mov
pop
mov
jae
(bad)
mov
adc
repz
pop
mov
out
cmps
fwait
and
outs
mul
test
in
and
(bad)
hlt
fistp
jl
xchg
les
xor
ds
mov
out
aaa
icebp
inc
or
enter
inc
jle
mov
or
rcl
push
loop
sbb
movs
or
movs
cmp
add
int3
dec
cli
aad
ins
ins
add
mov
jns
inc
cmp
clc
mov
and
add
push
out
fwait
call
push
dec
xchg
arpl
cmps
lods
xchg
pop
pop
sbb
xor
dec
mov
call
ja
icebp
mov
xlat
stos
pop
retf
pop
add
jge
xchg
and
mov
icebp
dec
out
cmp
xor
shr
imul
jge
sbb
scas
fisubr
mov
xor
mov
sbb
or
mov
fnstenv
lods
mov
cmp
stc
pop
lds
repz
call
sbb
scas
push
push
cmp
xchg
pop
std
jae
call
xchg
mov
cmp
out
sub
loop
int
sub
hlt
pusha
stos
aad
pop
sbb
push
cmps
cmc
mov
add
ja
aas
cmps
pop
cmp
mov
pop
(bad)
pop
lods
mov
aad
cmps
imul
fs
stos
je
popa
outs
sti
iret
sar
aad
lahf
mov
xor
pop
mov
cmp
mov
aas
pop
(bad)
xor
inc
sbb
mov
nop
mov
std
jno
sbb
pop
mov
push
cmp
mov
std
in
cmps
out
stos
jecxz
pushf
pop
je
fisubr
jp
stos
xchg
pop
lock
xchg
ss
fld
cmp
push
jmp
sbb
push
shr
sbb
adc
mov
dec
outs
gs
cmp
jb
sub
js
fcomp
(bad)
ffree
cbw
sub
fnsave
outs
lock
mov
and
out
cmps
mov
call
(bad)
inc
in
jmp
loop
enter
nop
int
push
push
call
mov
movs
cwde
xor
add
gs
jg
xor
mov
cmp
mov
repz
test
mov
rcr
pop
dec
js
pop
sbb
out
xchg
adc
cmp
psrld
das
imul
pop
push
pop
jmp
pop
cwde
lea
repnz
popa
fistp
mov
lods
jg
push
pushf
jmp
outs
movs
jo
es
pushf
std
retf
hlt
test
dec
inc
mov
sbb
retf
bound
xacquire
es
inc
into
ins
mov
loopne
shr
loopne
jns
div
test
pop
dec
pop
call
mov
mov
lods
xchg
fwait
retf
shl
mov
in
hlt
lods
(bad)
xor
pop
es
jno
aaa
add
scas
jbe
mov
cmps
mov
or
in
aas
mov
stc
jp
cli
and
pop
cmp
mov
stc
and
sub
mov
xor
(bad)
ins
test
xor
addr16
scas
sbb
shr
fs
idiv
leave
xchg
cmc
in
mov
push
jg
push
imul
lods
test
fs
xor
cmps
sbb
ret
xchg
sbb
mov
fld
into
mov
mov
adc
leave
les
fucom
xchg
gs
ins
cli
pushf
xchg
add
mov
dec
int
cld
xchg
test
pop
mov
cli
es
cmps
ret
aam
ins
sbb
sub
or
fdivr
test
or
cdq
push
mov
ins
rcl
sar
(bad)
mov
jp
adc
sti
ins
std
dec
or
jbe
add
cmp
lds
fisubr
push
adc
scas
inc
xchg
mov
retf
retf
movaps
inc
xchg
ins
xlat
dec
inc
xchg
into
loopne
sub
mov
inc
repz
push
js
pop
dec
lods
fisttp
lahf
mov
fwait
test
(bad)
jae
movs
and
cmps
sbb
jnp
js
cmps
cmps
jo
or
pushf
nop
mov
loope
xchg
jno
int
dec
mov
hlt
sbb
ficom
lock
outs
mov
cwde
mov
xlat
sahf
cmps
imul
adc
jge
push
pop
jg
rcl
jno
sbb
cmp
xchg
test
test
push
and
add
xor
cs
jmp
sbb
jo
or
sahf
cdq
add
aam
and
add
xchg
ror
mov
(bad)
out
add
xlat
lods
mov
std
xchg
pop
push
shl
cmps
shl
test
pusha
pop
or
setb
cmp
jno
ins
loope
pop
sub
lds
addr16
push
adc
pop
das
maskmovq
idiv
sbb
(bad)
pop
cmp
mov
dec
test
mov
add
ret
mov
repz
imul
dec
xchg
es
inc
jnp
popf
pop
test
inc
mov
into
retf
mov
gs
(bad)
icebp
mov
xchg
push
pusha
es
ss
adc
dec
jmp
jb
(bad)
out
pushf
inc
into
shl
xchg
aam
fild
inc
ins
cmps
outs
enter
loop
mov
shl
clc
cmp
dec
mov
push
test
adc
push
adc
mov
xchg
movs
cli
mov
sbb
mov
or
ins
adc
fmul
sub
fsub
fadd
mov
stos
xchg
mov
xor
leave
xchg
or
pop
ret
pop
lds
fldenv
je
ret
dec
jle
lahf
out
mov
add
mov
inc
xchg
arpl
pop
xchg
inc
stos
sar
sub
cmp
cmp
or
push
xor
in
mov
in
xor
in
pushw
cmp
jae
stc
mov
outs
stc
ret
lock
dec
sub
xor
sub
xor
pop
sbb
pusha
dec
xchg
push
rol
sub
(bad)
icebp
adc
xchg
scas
mov
jmp
sub
cmps
jbe
stc
(bad)
daa
int3
lea
adc
out
ss
inc
stos
repnz
push
rcr
sub
add
push
fsub
push
js
inc
cmp
popf
gs
mov
add
icebp
dec
pop
dec
nop
mov
xor
in
sti
push
(bad)
stos
shl
icebp
(bad)
jbe
push
retf
add
xchg
aaa
xchg
or
test
add
jl
cmp
cmp
fnstcw
in
sbb
nop
daa
mov
jns
pop
into
sub
sahf
xor
xor
cwde
test
dec
in
daa
rcl
test
push
sbb
mov
outs
cmc
popf
xchg
mov
dec
xor
xchg
push
popa
cmc
pop
mov
dec
jecxz
mov
out
push
jo
pushf
lahf
call
cwde
mov
enter
imul
pop
adc
pop
push
adc
arpl
pop
ss
jns
pushf
sbb
int3
xchg
cli
je
imul
mov
shl
jns
sbb
lods
pusha
repz
scas
fisttp
fwait
aaa
xchg
fcmovnbe
xlat
xor
xor
aaa
fisubr
loop
jno
clc
and
push
or
das
pop
and
fimul
xchg
and
xchg
das
test
adc
ins
pushf
xor
into
mov
fbld
(bad)
inc
pop
xor
in
test
xor
fbstp
inc
test
leave
mov
in
loopne
ror
jb
(bad)
std
pop
iret
pusha
mov
mov
jge
clc
push
sub
jmp
pop
push
push
inc
sub
sbb
push
push
inc
mov
jmp
jl
push
ins
sahf
pop
enter
test
test
iret
fmul
dec
jb
repz
test
test
inc
fdiv
idiv
jecxz
pushf
and
dec
mov
inc
mov
push
adc
retf
and
rcr
jbe
int
sub
out
iret
lea
jmp
mov
sbb
movs
js
inc
js
fsub
xchg
push
or
jg
push
je
inc
rol
ficom
mov
ret
sbb
xchg
aam
inc
sub
repnz
push
mov
pusha
xchg
mov
push
adc
popf
test
xor
test
addr16
sub
jge
sar
jo
dec
ins
sbb
jbe
bound
cmp
or
cwde
ror
push
sbb
dec
sub
mov
jb
xchg
les
sbb
push
and
sbb
scas
inc
or
mov
xor
dec
imul
mov
cmp
(bad)
ficom
adc
fcom
idiv
loop
push
push
div
jno
jmp
add
ds
fdiv
pop
les
xor
xor
ror
test
push
xchg
add
mov
mov
jno
jmp
add
shl
add
pop
pushf
cli
out
sbb
push
push
sbb
ret
adc
add
into
lock
or
call
xchg
mov
neg
sbb
mov
push
jns
scas
mov
inc
jnp
cmp
cmps
ins
stos
xor
mov
add
lock
mov
jns
add
test
jge
cwde
in
retf
pop
into
into
jno
jne
dec
inc
sub
sar
cmps
push
mov
jge
jno
and
add
call
pop
popf
in
add
(bad)
mov
inc
pop
add
arpl
mov
dec
rcl
push
mov
adc
inc
and
or
inc
pop
lock
mov
mov
outs
fisttp
mov
xor
test
aaa
push
xchg
jne
push
pop
test
leave
imul
enter
(bad)
push
jmp
mov
pusha
je
jg
mov
mov
sbb
xchg
mov
lds
mov
pusha
imul
in
in
pop
ins
pop
rol
add
push
add
into
cdq
pop
cmp
mov
or
div
test
adc
mov
or
shl
pop
lods
in
add
or
push
test
aaa
inc
sub
addr16
stos
mov
adc
dec
cld
adc
ins
retf
dec
mov
jb
cli
lods
or
sbb
test
push
xchg
bnd
sahf
push
fst
loop
pop
(bad)
push
pop
and
(bad)
out
jb
inc
jns
nop
pusha
mov
and
xabort
cmp
ror
movs
aas
das
shl
push
pop
jl
jmp
pop
(bad)
mov
loop
in
gs
inc
cmps
fisub
(bad)
pop
jmp
push
lds
sti
push
adc
(bad)
push
movs
push
or
sub
fs
stos
mov
add
test
ins
call
adc
jbe
jbe
xchg
fst
movs
pop
(bad)
adc
into
add
jo
pop
and
popa
shl
push
leave
ins
xchg
or
jmp
pop
jnp
dec
jnp
or
iret
dec
cmp
sub
xor
or
lods
xor
dec
out
xchg
es
stc
mul
sbb
scas
sbb
push
add
pusha
pusha
push
ret
mov
jns
or
inc
(bad)
mov
mov
(bad)
call
xadd
std
and
int3
xor
push
cmp
xchg
xchg
pop
out
sahf
xchg
div
outs
pop
cli
sbb
mov
daa
sbb
(bad)
add
inc
push
inc
add
(bad)
outs
jno
jge
and
fmul
scas
pop
jl
shl
(bad)
outs
lea
mov
lods
jle
in
pusha
and
jno
cmp
mov
cmp
mov
push
mov
jp
cmp
mov
sahf
mov
cmp
and
leave
pop
dec
push
paddd
push
das
inc
scas
sub
xlat
xchg
sbb
daa
call
in
imul
gs
test
pop
arpl
push
inc
frstor
push
mov
jne
neg
(bad)
test
xchg
fsub
icebp
sub
ficom
mov
in
arpl
inc
inc
dec
lods
jns
sub
dec
xchg
add
sub
call
cli
dec
stos
sbb
imul
dec
popf
lods
repz
push
inc
pop
cmc
sub
pop
(bad)
stc
jmp
jo
xchg
jmp
xor
mov
mov
and
arpl
jg
outs
cmp
add
bound
mov
jge
sub
xchg
sub
sar
rcr
pop
ins
or
push
dec
cmp
stos
out
jbe
sbb
jno
push
sub
out
xor
mov
mov
jecxz
cmp
or
mov
xor
cmp
xor
inc
mov
lods
mov
adc
fmul
sar
sar
mov
push
imul
popa
les
jmp
call
push
daa
iret
(bad)
mov
sahf
jb
dec
cli
test
rcl
ficomp
jbe
jg
jecxz
fs
sbb
dec
adc
test
sub
movs
jge
stc
into
jmp
jnp
das
mov
out
sbb
mov
loop
clc
lahf
mov
add
pop
popa
and
sub
outs
(bad)
and
idiv
dec
add
push
sar
xchg
xchg
mov
dec
pop
repnz
sbb
cli
inc
cmp
aam
sub
adc
loope
test
jns
jnp
mov
sar
lods
(bad)
arpl
or
jnp
stc
adc
mov
cli
or
int3
jns
loope
call
(bad)
push
dec
es
adc
jo
out
mov
lahf
rcr
shl
mov
lds
shr
in
xor
inc
jge
pop
not
dec
push
or
in
nop
adc
or
pop
in
cmps
ret
sub
sbb
adc
cdq
leave
(bad)
inc
mov
jl
movs
add
test
push
adc
adc
or
jp
(bad)
mov
sbb
cld
int
aaa
push
fcmovne
mov
adc
mov
sbb
add
movs
imul
sub
stc
ret
jbe
mov
int3
add
stos
adc
jge
call
xchg
sbb
retf
cmp
aaa
(bad)
dec
sub
adc
inc
push
push
adc
sub
mov
shr
xchg
or
inc
sub
jge
icebp
inc
cmps
add
movs
jle
leave
mov
(bad)
xor
(bad)
cld
mov
ss
inc
cmps
call
mov
(bad)
mov
pop
mov
inc
xor
retf
dec
js
ds
jmp
inc
jbe
cmp
int3
adc
lods
out
jns
in
out
ret
adc
mov
popf
sub
mov
loope
xchg
fld
jne
(bad)
js
pushf
lea
jle
stos
mov
arpl
xlat
mov
popf
out
stc
add
jo
xor
stc
mov
dec
ror
pop
sub
test
js
mov
xor
add
jnp
test
pop
popa
jnp
call
jl
xor
fnstenv
in
jmp
js
adc
fucomp
jecxz
cmps
sahf
xchg
jg
int
outs
test
dec
inc
push
dec
icebp
and
jg
stc
mov
xchg
sbb
or
inc
or
push
or
sti
mov
or
push
push
enter
pop
fcomi
inc
cwde
ins
ror
and
add
mov
not
xor
xchg
push
push
or
test
outs
inc
pop
(bad)
mov
push
mov
xor
push
jnp
xchg
clc
xchg
(bad)
repnz
in
sub
test
jg
add
ja
jns
sti
mov
mov
and
(bad)
data16
mov
outs
mov
mov
or
mov
adc
out
in
outs
stos
jbe
idiv
shl
iret
push
xor
mov
hlt
push
ins
movs
sbb
fcomp
rcr
mov
pop
(bad)
adc
dec
fstp
dec
mov
cmps
xchg
push
sbb
inc
icebp
ss
pusha
adc
mov
and
dec
fwait
cwde
fsubr
cmp
in
int
add
stos
dec
jle
jmp
out
fistp
xor
or
into
hlt
inc
push
xchg
ss
dec
jge
mov
in
sahf
cmp
scas
push
adc
scas
mov
int3
adc
cdq
mov
inc
add
es
add
adc
sbb
mov
cmps
xor
rcl
xchg
xchg
ja
cwde
fldenv
push
adc
ret
pop
mov
push
aam
outs
jmp
add
push
cs
int
dec
jmp
inc
ins
icebp
push
sub
dec
fwait
pushf
dec
and
cmp
das
add
int3
mov
(bad)
cmp
leave
and
mov
int3
jl
scas
pop
sbb
in
mov
test
addr16
clc
retf
xor
and
ficomp
mov
fdiv
stc
or
pop
jb
popf
out
xchg
cdq
iret
les
pop
jb
or
push
ret
shl
scas
dec
pop
cs
bswap
sbb
push
pushf
or
jl
push
sub
inc
mov
les
mov
xchg
mov
or
add
adc
call
mov
xor
fsubr
loop
stc
movs
into
daa
dec
scas
cmp
out
push
dec
or
rcr
push
imul
sbb
(bad)
outs
dec
fsubrp
les
leave
push
and
mov
dec
or
push
jno
retf
pop
pop
mov
sar
lahf
xchg
test
scas
mov
cmp
adc
mov
cdq
pushf
ret
cmp
inc
cmps
out
stc
pop
pop
add
das
stc
pop
xor
repnz
jnp
push
pop
imul
and
out
xchg
push
jmp
loope
inc
adc
loopne
stc
and
pop
sub
add
mov
jno
mov
shl
out
enter
in
dec
in
sbb
in
cli
outs
inc
push
mov
xchg
in
into
add
dec
xlat
out
pop
movs
test
pop
sbb
xchg
sbb
or
cwde
mov
inc
jne
rep
inc
mov
test
mov
mov
int3
jg
adc
xor
loopne
fisttp
pop
movs
(bad)
sub
js
xchg
or
push
(bad)
ds
fimul
(bad)
js
mov
or
mov
push
scas
stos
das
fdivr
mov
shr
lods
push
or
sub
out
pop
lock
and
xchg
push
xchg
xor
lods
fdiv
sub
gs
ins
fwait
dec
cmp
out
mov
loop
or
jbe
push
adc
test
add
inc
lock
sbb
lods
cmp
jnp
pop
popa
iret
aam
(bad)
jp
jecxz
lock
mov
adc
clc
movs
and
or
fisttp
ss
inc
adc
push
dec
or
adc
cmp
sub
icebp
and
lds
mov
test
retf
mov
push
xor
(bad)
popa
movs
mov
inc
mov
nop
push
pop
adc
ja
fcom
les
ins
xchg
sub
test
outs
cmp
scas
arpl
push
scas
call
adc
pushf
(bad)
lods
lahf
or
imul
in
hlt
and
sub
push
push
push
and
je
out
hlt
es
cmp
adc
xchg
mov
mov
pop
lock
mov
cmp
popf
push
ss
arpl
and
cmp
pushf
jg
cli
and
pop
addr16
pop
rol
ficom
idiv
sbb
retf
dec
inc
mov
dec
adc
xchg
retf
cmp
add
push
icebp
mov
or
imul
inc
stc
data16
icebp
xchg
pop
xor
movs
jne
in
out
popf
sub
loop
dec
sbb
clc
adc
arpl
repnz
sub
test
pop
pop
push
mov
xor
retf
(bad)
mov
dec
jl
and
sub
jmp
retf
mov
enter
js
leave
ins
jp
xchg
std
sub
xchg
inc
dec
sahf
adc
ss
dec
mov
inc
lock
mov
or
mov
push
cmp
in
cmp
dec
inc
pop
lds
ins
or
add
mov
mov
cmp
cmp
arpl
ror
xchg
dec
sbb
outs
hlt
dec
pushf
xor
sub
dec
mov
inc
dec
or
sub
or
sub
ret
mov
movs
popa
jle
inc
dec
mov
mov
inc
hlt
test
adc
push
xchg
sub
lods
push
sub
dec
xor
jmp
cmp
leave
sub
movs
jg
cmps
mov
jecxz
adc
mov
scas
push
outs
mov
and
sbb
aaa
dec
fsubr
(bad)
pop
jne
mov
test
xchg
add
into
adc
int
scas
cmp
push
xlat
xor
jnp
xchg
or
push
dec
ror
jecxz
cmps
ins
xchg
lock
mov
sti
outs
pusha
frstor
js
fst
daa
xor
mov
or
stc
xlat
cmp
mov
sar
ret
cmp
or
push
jl
pop
cli
and
xchg
retf
lods
aas
inc
nop
and
xlat
aas
cmp
mov
imul
lock
xor
xchg
imul
popa
push
repnz
jno
inc
sbb
pusha
dec
or
das
dec
popa
imul
xor
rol
shl
cli
sub
mov
ror
jg
inc
loop
inc
sbb
inc
xchg
stos
lods
inc
pop
hlt
enter
pop
ins
pop
and
xlat
in
dec
mov
cmp
xchg
bound
(bad)
mov
stos
cli
jae
mov
push
xor
test
cmp
test
movs
lahf
pop
cmc
dec
popa
in
imul
stos
clc
sub
sub
push
mov
add
mov
fcomp
or
sbb
mov
out
(bad)
and
ret
adc
inc
pop
mov
fcom
xchg
mov
dec
iret
(bad)
pop
test
cmc
ins
pop
leave
shl
pop
ds
push
std
test
cmp
imul
pop
xlat
into
xor
mov
dec
mov
and
fstp
push
cmp
retf
enter
in
mov
in
jmp
ror
or
(bad)
dec
aam
dec
jmp
scas
mov
xchg
scas
test
outs
xchg
push
cmps
xlat
jae
imul
stos
xchg
adc
jo
jb
call
imul
jbe
mov
sbb
cdq
push
les
sub
enter
stos
push
and
xlat
sbb
pop
sbb
ds
push
pop
xor
cli
cmp
xchg
lock
xchg
retf
fisttp
in
test
pop
inc
into
mov
aam
add
cmp
and
mov
lods
sbb
shl
push
mov
pop
mov
dec
hlt
leave
jmp
out
xchg
lods
leave
sub
idiv
dec
test
cmc
ss
scas
fwait
push
sahf
sbb
pop
mov
or
pop
retf
cmp
push
jne
test
pop
mov
pop
clc
std
imul
jo
jp
js
jb
or
jl
jp
ss
add
(bad)
mov
mov
inc
je
(bad)
pop
mov
add
arpl
retf
xor
faddp
adc
push
jp
imul
arpl
lock
inc
imul
dec
popa
sbb
clc
cmp
nop
cmc
rcl
daa
iret
jb
lahf
push
ja
in
mov
cdq
jne
fisubr
push
popa
lods
mov
faddp
xchg
iret
lahf
popf
adc
sbb
jmp
mov
addr16
push
push
jns
inc
aaa
call
xor
adc
inc
xor
fwait
cld
xchg
int
test
dec
dec
jb
sbb
rol
mov
fsubr
pop
int
mov
jb
mov
jmp
push
aaa
xor
mov
aas
pop
and
sub
cmp
push
fisubr
(bad)
sub
mov
cmps
rcl
xor
repz
inc
ss
pop
fbstp
jle
push
and
stc
jnp
repz
sbb
jbe
dec
cmp
push
cmc
jae
stos
xor
push
fwait
xchg
ja
push
sbb
mov
je
dec
inc
xchg
int3
dec
jb
(bad)
mov
out
sahf
shl
enter
jo
adc
es
in
stos
mov
fld
mov
(bad)
xchg
aam
mov
cmp
add
(bad)
mov
jecxz
mov
faddp
sub
cs
mov
test
repz
fcom
fwait
add
and
mov
ins
gs
jp
dec
dec
outs
mov
adc
xchg
aaa
sub
mov
sub
std
inc
and
enter
sahf
aam
mov
into
int3
sbb
xor
(bad)
aas
(bad)
sub
cmp
jle
dec
pop
xchg
stos
add
jle
cmps
std
call
test
adc
jmp
adc
(bad)
sub
mov
outs
(bad)
mov
mov
push
mov
or
sbb
sub
inc
retf
arpl
scas
ret
sub
jns
in
mov
outs
inc
adc
loopne
(bad)
out
scas
imul
push
gs
xor
test
jns
mov
shl
pop
ja
push
enter
xor
dec
push
mov
dec
adc
pop
push
mov
mov
and
jo
add
repz
dec
sub
test
cmp
xchg
imul
xchg
fdivr
pusha
retf
inc
fs
lds
int3
jbe
cmps
push
add
mov
xchg
pop
mov
adc
dec
in
fsub
sub
mov
jle
sub
test
daa
and
leave
inc
mov
not
pop
xchg
retf
mov
(bad)
pushf
stc
pusha
push
add
cmp
fld
popf
pushf
mov
or
inc
jmp
arpl
mul
add
test
sbb
mov
sbb
push
cld
shl
jge
jns
jo
or
(bad)
or
test
ins
fstp
(bad)
bnd
mov
dec
aaa
push
sub
out
xchg
sbb
cmp
and
mov
and
pushf
mov
pusha
enter
into
int
outs
add
(bad)
pop
iret
xchg
in
ret
or
jp
out
dec
mov
out
rcl
fisttp
jbe
retf
cmp
push
aam
add
aas
aad
inc
jge
push
cdq
daa
push
push
ins
and
inc
pop
push
or
push
leave
jo
sahf
clc
cdq
sbb
sbb
and
push
retf
push
rcr
adc
movs
cmp
(bad)
xor
jmp
push
pop
fist
(bad)
and
dec
ds
call
std
sbb
jle
std
dec
pop
inc
cmp
push
rcl
mul
into
lds
add
pushf
xor
fcomip
idiv
imul
inc
jmp
fsubr
and
in
push
xor
das
(bad)
rcl
adc
retf
js
sbb
test
inc
or
out
call
xor
jp
pop
ss
mov
push
call
and
jne
repz
dec
jmp
inc
push
popa
push
jo
nop
mov
jg
jmp
sub
retf
(bad)
mov
sti
das
or
arpl
cdq
adc
cmps
push
dec
pop
icebp
test
xchg
sub
out
pop
cs
fdiv
inc
call
cwde
inc
bound
jmp
stos
frstor
std
xchg
sbb
(bad)
jle
cmp
sub
inc
xor
mov
cmc
push
jnp
or
adc
sub
jp
shl
xchg
cli
add
push
adc
popf
js
and
mov
loop
add
outs
aam
(bad)
(bad)
sub
cmp
(bad)
push
xchg
mov
push
(bad)
cmp
imul
xchg
scas
jg
addr16
(bad)
sbb
test
mov
fucomi
aas
ret
je
ja
jp
cs
cmp
shr
sub
and
cmp
jno
fild
jge
ins
mov
adc
mov
cmp
sbb
rol
ja
scas
ja
inc
mov
(bad)
or
mov
sbb
adc
cmc
idiv
stc
add
add
sub
inc
xor
or
cli
arpl
bound
ret
mov
sub
xor
jmp
mov
xor
sub
sahf
ins
jno
inc
push
dec
ror
ins
adc
xlat
loop
fisubr
mov
adc
xchg
cs
into
and
in
sub
in
adc
pop
push
jg
pop
repz
adc
cwde
into
mov
clc
pop
and
jno
outs
test
push
pusha
xchg
dec
xchg
pushf
xchg
xchg
xor
(bad)
repz
arpl
out
out
or
push
sbb
ja
cmp
out
jle
xchg
loopne
push
or
aad
ja
xor
iret
push
daa
and
inc
dec
adc
mov
xor
scas
dec
add
push
jns
inc
sbb
outs
movs
jnp
loop
repz
shl
stc
addr16
repnz
loope
xor
fbld
dec
push
pop
enter
test
and
lds
inc
stos
inc
cmps
repnz
adc
push
das
idiv
lds
movs
(bad)
jnp
shl
(bad)
test
cmp
arpl
repnz
push
fisub
sbb
out
(bad)
test
ret
into
jge
ror
gs
sbb
xchg
jo
pop
push
inc
iret
popf
scas
loop
sub
sbb
push
repnz
mov
inc
mov
mov
test
jg
push
inc
repz
or
or
xchg
dec
mov
adc
or
pusha
mov
mov
push
add
stc
(bad)
push
pop
dec
mov
adc
stc
div
icebp
inc
xor
and
out
pop
xor
pop
pop
push
mov
(bad)
pop
ss
cdq
jp
pusha
aas
push
xlat
test
sbb
(bad)
pop
les
and
(bad)
popf
fs
inc
mov
xor
mov
dec
sub
ret
inc
jmp
add
hlt
and
jnp
rol
or
cmc
cwde
jnp
pop
pop
shl
sbb
aaa
pop
sbb
add
xor
cmps
push
out
test
fucomp
retf
ins
popf
mov
pop
sub
aas
xchg
sub
mov
sub
xor
pop
ds
clc
jb
cmp
sbb
mov
xchg
lahf
clc
ins
dec
cwde
cmp
(bad)
sti
leave
jne
ror
push
push
(bad)
lds
xchg
mov
pop
jbe
or
scas
std
xor
mov
fs
les
xchg
ret
popa
pcmpgtw
fimul
mov
call
add
jecxz
fwait
sub
addr16
mov
xchg
dec
xchg
loop
mov
test
fst
icebp
je
mov
jne
ss
(bad)
sub
fnstcw
(bad)
inc
outs
es
(bad)
data16
dec
xchg
imul
jne
sbb
adc
inc
idiv
add
add
jmp
pop
imul
shl
dec
pusha
mov
into
mov
jmp
fisubr
inc
call
retf
pop
shl
dec
fcom
mov
shl
mov
xlat
or
xchg
int3
in
popf
dec
sbb
out
jg
neg
jne
shr
mov
jle
fimul
mov
ss
ficom
fisttp
mov
inc
and
add
xor
shr
or
push
jecxz
rcr
sub
inc
mov
sbb
movs
mov
sbb
loop
jmp
js
sbb
push
loopne
push
je
adc
icebp
inc
pcmpeqw
lock
lock
in
xor
push
call
cwde
mov
fmul
xor
stos
test
iret
sub
std
enter
movs
mov
sub
sub
ficomp
push
push
fiadd
mov
adc
push
out
jne
(bad)
cmc
sahf
fidiv
push
jmp
adc
inc
sar
sub
cvtdq2ps
rol
popf
ret
add
push
clc
int3
jne
xor
push
and
and
fld
mov
sbb
push
out
retf
or
pop
push
bound
cmp
(bad)
lock
adc
pop
dec
push
mov
js
call
sahf
pop
stos
xlat
xchg
mov
add
test
xor
mov
cmps
or
adc
dec
jge
push
(bad)
pop
icebp
(bad)
cmps
loopne
mov
add
jbe
xchg
xor
sbb
rcr
jmp
push
loopne
mov
adc
mov
adc
cmp
inc
(bad)
cmp
out
inc
fsubr
in
in
mov
mov
in
xor
jmp
outs
jmp
sbb
sub
add
sub
sbb
gs
out
inc
dec
jecxz
jl
fiadd
xchg
out
clc
xchg
mov
mov
scas
popf
addr16
sti
mov
sahf
inc
clc
stos
sahf
fucomip
das
repnz
div
mov
sar
cld
les
pop
or
mov
ja
mov
mov
ins
test
sbb
mov
push
ds
ror
aas
call
ss
jl
xor
mov
inc
imul
mov
xchg
cs
pop
dec
and
sbb
es
fsubr
rol
pop
cwde
pop
jmp
mov
(bad)
repz
mov
cli
sbb
mov
(bad)
sti
push
and
lahf
jb
jl
adc
xlat
xor
scas
xchg
jecxz
pop
sbb
push
es
movs
stos
add
xchg
inc
mov
mov
int
or
mov
cli
inc
sub
cwde
and
cmp
xor
rcl
adc
ret
lahf
pop
push
and
jge
cmp
mov
nop
(bad)
ds
inc
out
je
cld
or
xchg
push
lds
aaa
test
bndstx
pop
or
jae
sub
adc
cmps
out
(bad)
(bad)
dec
mov
cmps
(bad)
pop
cli
imul
lea
sub
cld
adc
popf
adc
inc
mov
jno
pop
(bad)
push
fbstp
xor
dec
cmp
or
in
out
add
fs
(bad)
mov
lea
outs
jno
fldcw
inc
jp
push
and
jge
(bad)
mov
scas
lds
xchg
pop
retf
ds
outs
jmp
adc
cmp
repnz
mov
mov
sbb
inc
or
clc
mov
pusha
aam
les
dec
(bad)
jbe
inc
scas
(bad)
ins
lea
movs
test
xchg
xchg
sahf
mov
shl
push
fwait
hlt
mov
cdq
pop
into
mov
inc
xchg
or
in
call
jo
jb
mov
push
sbb
mov
fnstenv
adc
popf
mov
mov
enter
int3
push
jbe
sbb
inc
push
jmp
dec
out
sbb
xchg
aad
mov
add
xchg
mov
je
push
pop
inc
sub
dec
mov
repnz
xor
not
push
mov
fst
dec
(bad)
sbb
mov
outs
jne
dec
mov
stc
sbb
pop
xchg
ret
or
outs
inc
and
loopne
mov
je
lahf
mov
loopne
retf
adc
ins
jnp
mov
retf
pushf
pusha
jmp
fstp
enter
mov
or
shl
cmp
push
movs
mov
pop
and
and
sbb
es
js
mov
std
arpl
ret
call
mov
sahf
adc
lea
inc
sti
jae
iret
jmp
jmp
jecxz
cdq
fisttp
sbb
cmp
pop
ss
and
lods
inc
jle
retf
lahf
pop
mov
call
mov
cmp
out
and
outs
sub
jg
fcmovbe
(bad)
inc
aaa
cmps
mov
mov
mov
xchg
(bad)
jg
imul
jb
push
xor
push
cmp
imul
enter
in
sub
jmp
cmps
std
xor
scas
sub
js
xor
cmc
mov
push
scas
mov
rcl
jo
and
sub
dec
pop
retf
pop
test
dec
and
add
jp
inc
sub
std
dec
adc
ja
(bad)
xchg
xchg
pop
pop
mov
mov
push
dec
in
and
or
sbb
adc
mov
mov
xlat
lock
into
add
ret
mov
outs
add
cmp
jnp
mov
sbb
pop
pop
or
popa
lods
mov
scas
cmp
retf
inc
outs
mov
pop
jp
mov
or
loopne
movs
and
xchg
inc
call
mov
je
loop
mov
mov
into
cli
jmp
inc
lea
pop
xchg
jle
mov
sbb
outs
stos
pop
loope
popf
jae
sldt
sti
pop
mov
xchg
jno
mov
mov
iret
pop
dec
icebp
xchg
cmps
ret
ret
sar
sar
cmp
sub
jns
fsubr
retf
arpl
add
leave
fcom
sub
outs
pop
movs
cmp
aad
outs
ds
mov
retf
add
mov
sub
xchg
push
rol
pop
(bad)
retf
or
mov
mov
xchg
add
and
outs
add
mov
out
in
mov
dec
or
loop
sub
out
add
xchg
je
inc
sbb
lea
dec
fidivr
fdiv
mov
adc
fldcw
cwde
jmp
mov
jecxz
xor
sub
js
mov
outs
adc
shl
jle
add
cmovne
ror
push
push
shl
cmp
mov
pop
fs
hlt
mov
mov
fiadd
sub
jne
cmps
xchg
and
jp
(bad)
popf
(bad)
pop
in
sbb
psllw
rol
mov
in
cli
mov
stos
pop
aad
dec
dec
lods
and
pusha
out
xor
out
xchg
loope
sbb
call
sub
icebp
mov
dec
pusha
cmp
int
mov
aad
test
popf
adc
xor
cmp
push
jl
popa
call
inc
mov
pop
mov
es
iret
loop
xlat
lods
add
fist
ins
outs
jnp
push
fsubr
jecxz
rcr
lods
cs
cmp
dec
aas
sti
xor
inc
jo
ficom
push
and
cmp
mov
push
ror
add
sbb
movs
mov
icebp
loop
loopne
mov
push
mov
ss
push
mov
mov
sbb
retf
bound
sub
jne
sub
or
pop
pop
call
test
(bad)
jg
push
or
je
jg
cmc
iret
cmp
movs
xor
or
std
cli
loop
sbb
imul
pusha
push
fist
lahf
(bad)
jo
xchg
jae
push
int
test
pop
adc
aam
mov
retf
dec
and
arpl
imul
retf
mov
pop
aam
lds
cmp
leave
push
dec
cwde
nop
jg
xlat
dec
pop
in
inc
cmp
pop
and
int
jno
mov
push
ins
idiv
adc
imul
push
inc
lods
or
xchg
sub
lods
mov
pop
ins
cmp
test
int3
out
pop
icebp
aas
(bad)
sub
jmp
mov
rol
test
shl
pop
push
sub
pop
or
sub
sbb
sub
inc
or
push
mov
lods
dec
je
and
loopne
sub
inc
pop
push
xchg
xor
jo
fdivr
es
xor
jmp
push
push
jae
(bad)
lds
sub
inc
mov
sub
sub
and
mov
sbb
(bad)
sub
cwde
inc
jne
sbb
arpl
test
jne
adc
fistp
xchg
sub
xchg
xlat
jge
push
out
pusha
test
sub
stc
sbb
adc
sahf
add
inc
ret
repnz
gs
(bad)
in
pop
repz
xchg
xchg
push
xor
xchg
je
push
fld
(bad)
cwde
dec
push
les
sub
repnz
mov
mov
lock
cdq
dec
leave
jmp
jmp
xchg
mov
jle
dec
mov
enter
xchg
or
jns
lea
jl
dec
vshufps
cmp
shl
iret
xchg
mov
les
push
ins
xchg
add
fmul
cmp
cwde
adc
inc
mov
push
fs
fsub
pop
gs
cmp
aas
xchg
scas
(bad)
xchg
cmps
adc
call
iret
imul
xor
imul
sar
clc
fcomp
or
jne
xchg
dec
je
ror
movs
js
xor
mov
cmc
mov
fbstp
push
int
mov
pop
aam
pop
sub
in
popa
or
sti
outs
aas
(bad)
ins
and
push
add
fdivr
mov
into
xchg
cld
outs
addr16
add
mov
lods
mov
mov
(bad)
fdivr
js
push
mov
or
jmp
push
adc
jmp
movs
aaa
retf
xchg
loop
jp
sbb
call
ins
cmps
inc
(bad)
mov
adc
ror
into
push
scas
(bad)
jbe
xchg
in
clc
out
sub
dec
in
stos
fwait
pop
jae
jmp
push
add
lds
cmc
out
dec
sahf
pop
jmp
inc
add
mov
retf
xchg
mov
sbb
je
push
lods
frstor
lds
cmp
jg
gs
ffree
(bad)
into
sub
and
mov
inc
adc
jmp
es
arpl
sbb
cdq
arpl
add
es
push
iret
sbb
sbb
cmp
jmp
pusha
cwde
fsubr
pop
(bad)
pop
xchg
push
add
add
mov
xchg
push
mov
(bad)
ficomp
neg
repz
icebp
adc
cld
inc
icebp
mov
popa
div
in
add
sub
cmp
repnz
cmc
(bad)
(bad)
mov
ror
sub
in
mov
xchg
sbb
cmp
(bad)
lock
pop
cmp
and
sub
fisubr
xchg
xor
mov
adc
stos
(bad)
fcom
or
push
dec
push
mov
mov
mov
and
add
jnp
jmp
push
and
lds
out
xchg
xlat
(bad)
test
inc
push
fs
stc
jno
das
sub
mov
sbb
jne
hlt
push
loope
sbb
cmp
pop
stos
aam
or
dec
mov
in
xchg
mov
shr
jae
ret
xor
xor
mov
mov
popa
dec
mov
out
push
jbe
lea
(bad)
lds
repz
push
jbe
or
sti
jo
mov
or
out
out
dec
mov
dec
or
inc
movs
lock
jne
dec
fs
(bad)
add
popf
sbb
pushf
jmp
loop
sbb
out
out
jmp
es
add
loop
adc
fnsave
shl
mov
push
lods
mov
adc
lea
sub
(bad)
loop
add
inc
cmc
inc
mov
inc
sbb
(bad)
sbb
test
add
pop
mov
jmp
adc
daa
mov
xor
pusha
cdq
jne
mov
xchg
stc
cmp
and
data16
iret
cdq
fild
dec
mov
ins
jp
jl
sub
xchg
(bad)
lds
mov
cli
aad
int3
sar
jo
int
jnp
sub
shl
mov
push
xor
int
mov
or
loope
sbb
inc
add
stos
lahf
inc
lods
shr
pushf
fimul
in
and
dec
xlat
xchg
adc
popa
scas
push
popa
mov
add
cmp
mov
ins
jge
nop
ja
jne
and
xor
dec
push
adc
push
shr
cmps
rcr
dec
inc
fmulp
push
loopne
add
jo
cmc
xchg
xchg
push
add
outs
adc
pop
popf
pop
or
jns
xchg
outs
xchg
outs
adc
pop
imul
rcr
xchg
mov
push
fsubp
mov
jg
sar
ins
pushf
rcl
stos
(bad)
(bad)
ds
pop
retf
jns
(bad)
rcr
mul
(bad)
xchg
test
pop
inc
lds
mov
jo
in
(bad)
pop
dec
cs
jmp
leave
out
add
push
in
loope
ror
inc
dec
jp
sahf
push
in
stos
push
cmp
pop
rcl
fild
dec
movs
jnp
pusha
ds
sub
ror
pop
repz
jns
nop
mov
push
push
push
xchg
in
lods
xchg
push
pop
cld
test
js
imul
out
jbe
inc
pop
daa
inc
(bad)
xor
and
xchg
call
out
clc
and
push
std
(bad)
mov
sahf
or
out
mov
or
mov
or
cmps
inc
and
iret
mov
je
pop
or
jmp
aad
fnstcw
inc
mov
xor
es
and
bound
mov
je
lahf
(bad)
mov
dec
xlat
mov
cmp
xor
sahf
fisub
xchg
lea
hlt
repnz
mov
inc
test
jmp
mov
cmps
xchg
add
xchg
xchg
aaa
mov
cld
or
add
fimul
mov
repz
add
leave
push
adc
inc
arpl
jae
xor
xchg
sbb
pop
scas
das
inc
imul
mov
cmps
ins
out
cmp
mov
cmp
test
dec
daa
xor
(bad)
loope
jge
sbb
mov
call
fdivr
add
hlt
mov
dec
inc
sbb
mov
in
mul
retf
loop
adc
ja
jecxz
xchg
xchg
push
adc
vpacksswb
xchg
jmp
gs
outs
fstp
mov
lds
(bad)
and
sub
pop
xchg
cmps
in
add
push
lahf
or
test
into
fimul
jl
jbe
mov
fbstp
das
pop
dec
xor
mov
xchg
adc
inc
jo
(bad)
push
dec
dec
xchg
movs
sbb
test
sub
test
ss
test
imul
mov
cwde
and
movs
pop
test
or
add
push
aad
ja
mov
xor
addr16
mov
cmp
sub
or
je
jl
repz
jo
jnp
sub
icebp
rol
fisub
shl
push
inc
into
stos
mov
push
mov
in
popa
sbb
clc
sahf
ss
out
cdq
or
sbb
pop
mov
ins
outs
push
enter
adc
sub
ret
fmul
int3
aas
in
iret
shr
inc
js
mov
push
(bad)
dec
sbb
clc
mov
add
push
adc
add
sbb
mov
cmps
and
dec
push
int
stos
icebp
cmp
cdq
add
jg
mov
test
(bad)
int
jb
cmps
fwait
mov
sbb
pusha
outs
adc
mov
jl
mov
test
ss
xchg
dec
dec
rcr
iret
mov
xchg
aad
inc
popa
or
or
jmp
push
je
gs
inc
push
mov
(bad)
mov
jl
jp
dec
jmp
pusha
outs
cwde
daa
inc
mov
cmp
std
es
xchg
or
push
in
or
and
hlt
pop
adc
sbb
fs
xchg
dec
push
sti
sbb
pusha
fldcw
xor
xor
pop
lahf
and
push
cli
pop
hlt
add
lods
or
xlat
pop
cmps
ins
aam
mov
pop
mov
inc
dec
(bad)
ins
in
xchg
arpl
mov
imul
inc
nop
out
fcmovb
mov
jg
inc
(bad)
ins
ficom
hlt
lahf
scas
jl
sbb
jecxz
test
sub
loop
ins
and
xchg
pop
jne
ja
hlt
mov
cmp
or
inc
sub
sbb
mov
dec
imul
cmp
je
mov
div
and
add
inc
add
inc
fadd
inc
jg
icebp
inc
lock
xchg
push
pop
pop
clc
ret
jle
mov
loop
cmp
ret
frstor
dec
pop
cdq
leave
add
in
mov
add
cld
xchg
lds
inc
push
push
push
xchg
jge
mov
ja
xor
out
jle
cld
out
(bad)
bound
mov
fwait
(bad)
mov
retf
jl
stc
sub
call
cmps
or
mov
outs
and
adc
and
lea
inc
test
imul
scas
ds
sub
adc
fidivr
sub
inc
pop
push
fs
cli
ja
sub
das
bnd
pop
pop
sar
add
xor
cmp
mov
mov
dec
push
push
xchg
or
test
retf
or
xor
(bad)
inc
adc
pop
int3
loop
inc
(bad)
lods
push
mov
loope
adc
mov
fs
add
mov
push
out
shl
push
or
retf
aad
push
popf
push
ror
fucom
xchg
lds
cld
and
cs
jnp
push
int
push
sbb
push
add
push
retf
leave
inc
push
add
imul
cmps
push
inc
pop
jbe
outs
out
add
fidivr
inc
sub
cwde
add
pop
pop
cli
adc
xchg
sub
sub
or
jle
je
stos
add
xor
pop
out
je
shl
sbb
into
sub
jmp
xor
int
sti
enter
pop
not
cmp
(bad)
fisubr
xchg
rcr
sbb
pop
dec
xchg
scas
adc
or
(bad)
cmps
cmps
aaa
ret
sar
adc
sbb
dec
test
xor
mov
xlat
jmp
sub
icebp
ins
add
sbb
cmc
sbb
or
mov
pop
cmp
(bad)
mov
jecxz
iret
pop
pushf
and
push
rcr
aaa
mov
or
ret
fidiv
outs
popf
add
jmp
sub
jge
or
cmp
xchg
jmp
dec
jb
aas
pop
xor
mov
mov
and
push
add
gs
dec
popa
sbb
(bad)
xor
inc
fs
push
fild
jbe
call
cs
xchg
cmc
imul
inc
call
aas
aam
aad
pushf
test
fs
rol
pop
jp
repz
pop
out
cmc
in
xchg
sub
out
pop
xor
test
mov
sbb
imul
jno
test
inc
stos
je
jmp
into
adc
mov
div
and
icebp
xor
test
sub
out
add
inc
cmp
sub
inc
adc
add
loope
fidiv
mov
xchg
test
mov
gs
fcmove
popf
push
cs
arpl
repz
cmps
inc
test
adc
dec
in
and
cmovae
sub
fimul
cdq
imul
or
push
movs
xchg
pop
mov
push
call
sub
aas
mov
or
idiv
add
pop
mov
mov
mov
fst
jg
scas
pop
pop
or
push
mov
push
(bad)
xchg
pop
lods
adc
xor
adc
pop
or
icebp
cmp
push
div
fiadd
or
mov
imul
or
mov
out
add
sti
cmp
lds
out
es
bound
aad
rcr
rcl
fcomp
mov
sub
xchg
push
je
(bad)
mov
mov
jecxz
jnp
dec
ds
(bad)
fistp
loop
xor
jmp
test
mov
dec
cs
shl
xor
xchg
repnz
cmp
sub
dec
push
mov
mov
adc
push
retf
scas
mov
data16
gs
cs
stos
clc
mov
popa
jno
xchg
pop
sub
in
fidivr
int
push
or
inc
out
inc
dec
dec
xor
mov
mov
cdq
sahf
cs
or
sbb
dec
cwde
pop
cmp
cmps
add
or
ds
test
lds
pop
push
(bad)
not
xchg
mov
out
fst
push
jb
rol
sub
imul
jo
imul
lahf
jbe
hlt
daa
sbb
add
mov
scas
mov
mov
sti
push
mov
repnz
inc
cmc
mov
or
pop
mov
mov
adc
adc
scas
sbb
into
outs
jno
ss
push
cmp
cwde
movs
cld
and
mov
and
mov
cmps
push
cmp
out
mov
push
inc
pop
dec
retf
or
jns
pop
sti
xchg
mov
pop
cmp
ins
and
ins
fs
jl
in
mov
pop
(bad)
fcomi
jge
ds
fptan
loopne
popa
mov
dec
mov
mov
inc
in
mov
push
cmc
push
cmp
js
xchg
xchg
dec
cmc
movs
(bad)
movs
popa
stos
es
mov
jp
sub
add
sub
jecxz
sub
inc
movs
fld
in
mov
jge
fsub
jbe
call
sub
sbb
mov
pop
add
out
xor
imul
jb
add
(bad)
lahf
jecxz
repnz
stos
cmc
fmul
mov
aaa
mov
mov
jmp
lods
jp
enter
sub
xor
mov
sbb
loop
mov
movs
stos
imul
inc
lahf
rcr
(bad)
mov
xchg
adc
push
pop
lods
xchg
mov
mov
mov
dec
jb
enter
int
or
out
or
loope
retf
push
inc
cwde
lods
pop
pop
es
xor
inc
mov
outs
rcl
inc
pop
pop
stc
(bad)
test
push
sub
popf
test
lods
sub
mov
movs
test
jns
push
lsl
mov
xchg
mov
inc
cmp
xchg
inc
ins
adc
sbb
loope
mov
les
jns
pop
xchg
arpl
fcom
pop
fistp
xor
hlt
test
lea
jno
sbb
loopne
js
ret
xlat
inc
mov
mov
lock
stc
dec
pop
and
push
dec
mov
inc
pop
inc
pushf
add
mov
mov
or
test
pop
inc
cmp
ret
mov
fild
sub
xlat
jbe
xchg
dec
mov
mov
clc
mov
(bad)
and
mov
in
push
in
xchg
dec
cmp
or
sub
inc
push
(bad)
rdpmc
xchg
loope
and
movs
jp
adc
mov
shl
add
and
(bad)
pop
cmp
sbb
outs
cmp
fcomp
in
popf
xor
aam
and
ins
je
mov
jbe
(bad)
pushf
aaa
call
sub
fdiv
sub
dec
sbb
add
push
xchg
dec
lahf
jmp
mov
jo
in
push
bt
call
call
xchg
add
stos
mov
stos
pop
std
ja
or
mov
aas
push
cmp
lea
(bad)
icebp
mov
in
jo
xor
push
sbb
scas
mov
add
std
and
and
cmp
sub
mov
pop
dec
xchg
sub
pop
mov
mov
pop
ja
stc
mov
dec
push
sub
push
and
cmp
mov
stos
daa
jae
ret
sub
sbb
inc
pop
push
pop
addr16
icebp
dec
jbe
bound
rcr
jne
mov
fbstp
mov
and
mov
mov
sub
test
or
add
in
out
repnz
retf
mov
sbb
sbb
jecxz
inc
jmp
fwait
jo
nop
mov
(bad)
mov
retf
inc
mov
mov
jno
push
ins
or
or
inc
mov
(bad)
mov
int3
stos
imul
hlt
sub
jnp
lea
mov
cmps
xchg
sar
inc
push
sbb
loopne
push
not
gs
mov
das
mov
push
mov
push
sbb
and
sub
imul
cmps
stos
inc
hlt
jecxz
rol
add
icebp
mov
jne
mov
mov
outs
mov
cld
pop
mov
xor
out
dec
mov
adc
addr16
pop
pop
std
sub
rcl
adc
stos
clc
mov
imul
add
fild
jno
add
mov
scas
sbb
rol
(bad)
jno
test
mov
dec
test
test
mov
sub
or
aaa
cdq
inc
lods
aas
push
popf
aam
cmps
cwde
in
iret
push
sahf
adc
shr
mov
mov
out
and
jnp
call
sub
jbe
xchg
push
inc
xor
cwde
jns
and
neg
pop
jo
int3
fld
ja
idiv
cli
fimul
dec
aam
aad
scas
jmp
fidiv
pusha
imul
add
mov
je
mov
ins
jg
mov
adc
inc
cmps
movs
inc
jg
and
or
imul
xor
pop
in
test
in
movs
xor
int
pop
dec
mov
fistp
push
popf
sbb
cmp
gs
(bad)
sti
and
add
push
mov
iret
neg
repnz
add
xchg
inc
or
bound
adc
xchg
mov
(bad)
pop
and
xchg
addr16
xor
int
js
and
and
jb
inc
adc
test
adc
xchg
push
jecxz
popa
push
pop
dec
(bad)
out
pop
cmp
sbb
inc
xor
dec
inc
sub
pop
cmps
scas
dec
pusha
dec
and
pop
jg
pop
(bad)
jae
and
push
inc
adc
push
cdq
psrad
cmp
test
sbb
adc
xor
fld
xor
in
out
test
mov
bound
dec
dec
test
and
sub
adc
xor
sub
xor
pop
mov
push
jns
xor
add
fwait
xchg
int3
arpl
je
pop
cmp
cmp
adc
cmp
xchg
call
aam
arpl
pop
add
dec
dec
scas
js
xor
repnz
mov
hlt
stc
stc
mov
cmps
dec
xchg
mov
aad
mov
loop
(bad)
movs
aas
mov
(bad)
push
loop
push
cmc
mov
mov
mov
pop
pushf
mov
adc
lods
xor
pushf
test
int3
sar
out
rol
push
mov
xchg
out
into
in
mov
rcr
mov
and
or
sub
sar
into
test
jno
int
fcmove
bound
mov
aas
inc
pop
test
fs
inc
inc
xchg
adc
adc
sbb
or
push
add
cdq
pop
pop
repnz
fistp
or
mov
jle
ja
rcr
(bad)
mov
aas
in
cld
in
adc
xchg
dec
sbb
xchg
aad
add
daa
dec
push
scas
cli
dec
xor
xchg
jmp
icebp
gs
push
lods
addr16
jns
addr16
dec
xchg
test
loop
pusha
mov
loope
daa
sub
pushf
out
hlt
cld
sbb
bnd
sub
push
hlt
dec
xor
in
mov
adc
jmp
xor
in
mov
sub
add
loop
hlt
in
mov
inc
jl
ins
je
jb
lea
mov
add
jmp
and
ins
pop
dec
xchg
push
mov
les
std
outs
cmps
das
das
jmp
std
mov
lods
call
jl
(bad)
jl
jnp
add
xchg
popf
cmc
outs
mov
imul
cmp
fcomp
repnz
imul
cmps
ja
xchg
repnz
fst
mov
add
repnz
adc
and
mov
mov
test
adc
adc
loopne
mov
test
data16
cmp
outs
push
xchg
fyl2x
cmc
xor
into
sub
push
sub
mov
sub
push
sub
dec
ins
inc
push
cmp
test
push
inc
add
cmp
loop
movs
test
adc
les
inc
add
sbb
xor
(bad)
in
(bad)
mov
and
mov
mov
mov
dec
xor
test
add
push
arpl
push
pop
(bad)
jp
xlat
pop
icebp
stos
movs
push
sbb
jg
inc
inc
in
ret
outs
xor
jp
xor
or
js
rcl
imul
jmp
hlt
xchg
jecxz
imul
mov
add
lahf
pushf
push
add
cmp
lods
lea
and
sub
leave
and
and
aam
mov
les
mov
mov
adc
in
faddp
and
ret
push
jns
push
rol
leave
(bad)
in
shl
push
aad
shl
inc
sti
and
mov
icebp
out
cs
popf
push
add
cli
mul
stos
retf
jnp
cmp
sbb
add
mov
pop
adc
mov
push
xchg
mov
adc
test
inc
push
dec
cs
xor
mov
push
iret
repz
xor
xor
mov
sub
outs
xlat
mov
pop
cmp
pop
iret
call
repnz
cmps
(bad)
mov
pop
adc
(bad)
lahf
(bad)
stc
xor
push
or
mov
bound
shl
cmps
(bad)
lods
aad
(bad)
neg
dec
arpl
pop
jp
in
mov
jne
fnstcw
es
imul
loopne
jne
ins
dec
adc
xchg
sbb
les
aad
push
push
xchg
in
clc
sub
xlat
mov
jne
mov
cmp
js
lods
jne
jo
add
(bad)
into
cmp
es
test
pop
or
in
ins
add
enter
pop
adc
mov
mov
and
mov
push
sahf
and
and
jo
adc
outs
call
in
scas
icebp
popf
xchg
loopne
add
cli
fidiv
mov
shr
fst
fwait
add
arpl
jge
loope
adc
xlat
add
pop
cmp
enter
stos
in
fwait
jle
mov
cmp
jb
dec
mov
mov
jbe
cmp
push
rcl
out
arpl
sub
jp
jle
xchg
mov
ja
sub
mov
test
jg
dec
xchg
inc
jmp
mov
enter
pop
xchg
ror
adc
adc
xor
xor
call
shr
lock
jne
xchg
frstor
add
ins
sub
dec
lea
xor
out
sbb
adc
inc
pop
add
dec
(bad)
ret
mov
mov
test
and
sahf
mov
mov
dec
nop
sbb
push
out
ds
jno
das
test
loop
call
or
mov
pop
dec
mov
(bad)
sti
popa
cmp
ficom
dec
neg
loope
daa
sub
add
xlat
jae
push
shl
xor
add
adc
mov
jno
out
sub
push
jbe
sbb
es
jge
jns
push
pop
dec
push
lds
sub
ja
(bad)
es
aas
mov
pop
in
inc
sbb
or
pop
mov
jmp
xor
(bad)
mov
fcomip
pop
push
cmp
aaa
ins
call
(bad)
out
xchg
adc
sub
mov
(bad)
jp
push
cmps
movs
mov
dec
xchg
sbb
xlat
fistp
push
jns
mov
or
adc
cld
and
movs
mov
sub
pop
and
mov
ficomp
sub
fcomp
mov
hlt
or
add
push
popa
xchg
dec
retf
xor
dec
leave
push
daa
pop
stc
push
xlat
daa
inc
loop
mov
call
jp
out
or
inc
mov
mov
cmp
into
mov
out
xor
call
xchg
push
mov
jnp
mov
or
cmp
inc
mov
sbb
stos
enter
aad
(bad)
div
neg
shl
jge
mov
sbb
pop
and
loope
mov
repnz
popf
scas
sbb
arpl
add
cmp
iret
jp
fs
iret
imul
(bad)
push
mov
jge
sub
pop
movs
dec
aad
adc
push
cld
mov
lock
into
inc
or
jecxz
sub
xchg
xchg
outs
imul
stos
test
and
jl
sbb
ret
adc
aam
pop
push
out
addr16
rcr
adc
in
cmps
das
inc
test
xchg
jns
sahf
xchg
mov
lahf
gs
sbb
popf
cs
pop
push
movs
sbb
adc
shr
iret
adc
movs
push
adc
movs
xchg
movs
dec
adc
ins
pop
aad
mov
repnz
scas
out
sar
jmp
jmp
and
adc
and
popaw
dec
sub
mov
inc
cs
call
out
pop
fsub
out
ins
pop
out
push
push
push
stos
cld
ins
sbb
pushf
cmc
jmp
add
retf
(bad)
sbb
mov
neg
mov
faddp
adc
adc
loop
lock
sbb
stos
or
adc
xchg
adc
cmp
and
or
pop
pop
xchg
mov
jmp
cmp
aad
jbe
xor
in
movs
mov
jbe
lar
mov
or
adc
pop
inc
sbb
dec
jbe
(bad)
gs
add
mov
add
and
jmp
das
add
cmp
cmp
sub
mov
nop
or
dec
ins
add
pusha
and
push
adc
sub
and
stos
xchg
ds
sub
fs
out
cmp
mov
adc
out
ds
lea
cli
and
(bad)
dec
in
scas
das
cmp
ins
rol
call
sbb
jg
mov
push
mov
pop
mov
jmp
mov
movs
adc
rcr
cdq
xchg
sti
loopne
xor
sub
sub
push
adc
push
imul
fadd
pop
stos
nop
(bad)
imul
outs
mov
add
sbb
mov
mov
das
add
xchg
or
mov
jo
xchg
inc
xor
sub
sub
or
fistp
mov
lock
retf
or
icebp
mov
call
cli
aam
adc
push
pop
and
xchg
jns
and
das
pop
cmp
out
dec
loop
cmp
fnstcw
dec
mov
mov
inc
jmp
retf
sub
xchg
inc
cmp
fs
inc
sub
mov
jnp
xlat
and
mov
mov
inc
cmp
or
(bad)
sar
jle
leave
and
sbb
leave
movs
mov
out
and
or
or
mov
mov
sub
pop
lods
pop
mov
outs
add
pop
rcr
arpl
iret
mov
sbb
loop
mov
cs
ds
sbb
or
inc
adc
jo
pop
sbb
adc
xchg
gs
add
mov
jecxz
mov
aaa
xchg
sti
outs
cld
push
xor
inc
retf
xor
out
rcr
arpl
mov
jl
pop
shl
xchg
not
push
shl
test
mov
retf
push
sub
mov
and
or
fwait
pushf
es
lods
mov
sti
add
(bad)
mov
icebp
jbe
mov
sbb
cmp
inc
inc
mov
std
das
icebp
inc
or
inc
repz
adc
(bad)
out
dec
mov
in
xchg
jmp
or
mov
xchg
lock
ds
fstp
adc
adc
retf
jle
sti
sub
lods
pop
cmps
jl
mov
out
adc
out
jl
pop
inc
retf
jl
stos
stos
and
sub
loopne
into
leave
add
test
xchg
cmp
adc
cmp
sub
push
sar
data16
outs
imul
ds
adc
pop
mov
cmc
dec
mov
fnstcw
inc
xchg
rcpps
nop
sbb
ret
(bad)
aad
and
xchg
aad
(bad)
pop
ret
jmp
popf
sbb
mov
mov
jmp
loopne
push
js
pop
push
(bad)
ins
and
add
push
inc
pop
sti
cmp
jge
int
pop
in
stos
das
leave
iret
jno
stc
push
cmp
cwde
ins
out
ja
call
std
jecxz
sub
(bad)
stc
fwait
loopne
xor
mov
call
push
jmp
xchg
es
daa
pushf
push
inc
inc
scas
das
jge
inc
in
clc
mov
loopne
std
mov
call
mul
pushf
dec
jnp
mov
fcomp
in
cmp
xchg
test
test
mov
leave
xchg
xchg
nop
aad
es
es
in
ds
ror
popf
jb
sahf
or
dec
add
icebp
(bad)
jecxz
pop
ins
shr
outs
xor
call
scas
mov
sbb
sub
fwait
in
xor
sbb
lods
mov
in
push
dec
(bad)
xor
sbb
iret
mov
pop
arpl
lods
cmp
jae
out
test
out
shl
test
adc
out
loope
fidivr
cmp
scas
pop
or
cmp
mov
enter
pushf
sub
outs
jo
inc
jle
rdmsr
call
pop
(bad)
pop
mov
inc
je
add
cmp
in
dec
pop
cli
or
jbe
xor
shr
out
fstp
test
scas
jecxz
or
(bad)
icebp
xlat
add
enter
arpl
dec
jmp
jbe
movs
or
cmp
pop
paddw
(bad)
push
inc
dec
scas
fistp
mov
pushf
sub
shl
jl
pop
push
dec
je
mov
rcr
iret
outs
ja
pusha
cli
sahf
jg
or
inc
pop
sub
adc
loope
dec
cs
lods
add
icebp
mov
aaa
jmp
or
dec
jo
mov
adc
push
sub
xchg
mov
inc
scas
jg
test
cdq
std
gs
pop
icebp
adc
lahf
dec
ds
ret
fst
sub
cmp
push
and
mov
inc
jb
mov
mov
add
xchg
or
sub
cld
fucomi
inc
adc
shr
sti
fdivr
mov
punpckhdq
call
cmps
or
cmp
jnp
add
pop
clc
sysexit
ret
adc
add
cld
jo
sub
push
popa
sbb
cs
cmp
jl
jmp
test
loop
out
int
aad
shl
aaa
mov
test
xchg
jo
xchg
cld
test
sub
(bad)
loopne
and
sub
sub
in
test
jne
dec
mov
addr16
fldcw
pop
pusha
rcl
jmp
pop
add
mov
inc
movs
pop
mov
pop
adc
daa
mov
fcmovnb
mov
pushf
push
dec
imul
aas
jb
xchg
sti
fldcw
movs
int3
nop
add
cwde
mov
std
cmps
jne
ins
push
popa
(bad)
(bad)
in
pop
jl
jmp
mov
or
je
ins
push
push
clc
leave
xchg
and
xchg
jbe
push
or
mov
lea
pop
inc
aaa
jmp
cli
inc
pop
mov
repz
test
mov
sbb
cli
inc
pop
fidivr
ret
sub
imul
in
xchg
std
sub
retf
push
mov
jb
cli
add
aas
movs
xchg
sbb
test
retf
push
or
fnstsw
test
rcl
or
daa
xor
adc
je
jnp
cmps
pop
dec
in
mov
adc
jb
push
or
and
ins
fistp
out
cdq
loop
add
(bad)
aam
mov
fild
fmul
clc
jns
xor
adc
xor
mov
clc
xor
sub
xor
add
mov
cmp
stos
sub
addr16
mov
repz
retf
arpl
sub
adc
cmps
adc
out
jle
(bad)
rol
cld
ret
cmp
loop
add
imul
test
xor
push
imul
pop
call
mov
dec
(bad)
cmp
jecxz
shr
mov
aaa
test
xchg
jecxz
add
jo
xchg
enter
mov
in
jo
pop
mov
mov
lahf
sbb
push
scas
xor
imul
inc
jae
pop
xchg
add
mov
(bad)
ds
out
jb
popa
int
sub
or
in
mov
dec
add
jns
test
imul
jecxz
push
int
fild
and
loop
mov
push
or
stc
mov
outs
add
mov
mov
mov
lods
mov
mov
xor
addr16
js
lods
das
jge
mov
mov
pushaw
fsub
leave
dec
xchg
fs
bound
push
cmp
jmp
cmps
or
out
lods
and
push
popf
mov
ret
mov
imul
jns
neg
mov
jb
cmps
xor
push
cmc
test
fdivr
mov
pop
shl
and
sbb
in
ret
pop
mov
adc
out
mov
sub
push
or
or
and
sbb
cli
cmps
adc
arpl
stos
in
(bad)
dec
hlt
adc
sti
adc
int3
cmc
movs
cmc
outs
pop
cmp
push
sbb
shl
fcom
loope
adc
pop
add
(bad)
and
(bad)
das
repz
sar
mov
mov
mov
fsub
icebp
das
pop
mov
addr16
jle
jnp
pop
stos
stos
into
out
out
sub
cmp
arpl
inc
sbb
std
in
imul
push
cs
cmp
ins
push
fnsave
test
cmp
inc
shl
das
lahf
rcl
daa
cmp
add
and
aad
mov
int
inc
test
(bad)
xlat
sbb
lock
loope
add
xor
push
add
adc
add
add
sbb
pop
sub
outs
dec
sub
sar
and
xor
js
push
sub
es
sub
aaa
or
out
push
add
es
mov
int3
xchg
sbb
(bad)
mov
add
daa
or
sbb
inc
sub
out
dec
sub
sub
data16
push
push
add
jmp
inc
cmp
aas
adc
std
cmp
ins
adc
push
(bad)
sub
add
outs
lea
or
and
test
lds
outs
mov
movs
dec
mov
push
jb
push
test
pop
jmp
es
mov
dec
jmp
adc
les
das
lock
mov
sub
fcmovnb
mov
scas
jns
and
out
rcl
mov
sbb
jle
aam
cwde
and
fild
inc
push
jle
mov
inc
in
mov
inc
cmp
sub
fdiv
add
xchg
lods
pop
dec
jmp
int
and
sti
xor
(bad)
jg
(bad)
xor
adc
out
sahf
out
mov
test
cmp
mov
(bad)
ret
or
and
jle
sti
leave
and
push
inc
aad
in
sbb
and
cmc
xor
iret
fbstp
jg
fwait
inc
xor
mov
mov
and
loop
adc
data16
cmp
movs
mov
sub
xlat
fistp
mov
add
call
inc
push
das
sub
dec
inc
stc
retf
or
sbb
test
dec
bound
mov
xchg
sbb
in
clc
std
inc
cdq
xchg
(bad)
mov
add
or
out
ret
sbb
push
rol
jmp
lahf
jae
mov
inc
inc
mov
imul
add
imul
gs
jmp
shl
pop
out
and
or
xchg
(bad)
mov
inc
in
aad
pushf
mov
push
pop
fwait
pop
add
sbb
push
int
xor
pop
cmp
or
ins
not
inc
idiv
fs
or
outs
push
inc
and
sbb
cmps
jecxz
dec
(bad)
lds
inc
lgs
cmp
fmul
cwde
loopne
add
dec
test
movs
mov
in
call
push
or
mov
mov
mov
js
pop
and
mov
ds
jge
test
adc
stos
jg
rcr
outs
xor
outs
xchg
cmp
xor
xchg
sti
or
call
jno
in
mov
pop
push
sti
(bad)
call
add
sbb
mov
hlt
fstp
jl
lds
movs
outs
jle
scas
mov
cmp
mov
cmp
sub
icebp
adc
xor
and
retf
adc
test
dec
(bad)
sub
pop
mov
and
repnz
jnp
and
jg
call
gs
les
fnstenv
xor
and
inc
sub
push
and
cmps
or
cmps
jmp
jo
clc
js
sbb
lds
int3
mov
hlt
test
test
sbb
(bad)
xchg
adc
int
dec
clc
mov
fldenv
mov
popf
jno
sub
imul
movs
push
sar
stc
or
push
jae
dec
out
fisubr
pop
addr16
clc
jo
and
sub
imul
adc
sub
scas
rcl
and
mov
xchg
xor
cmps
cli
daa
pop
pcmpgtb
mov
aam
xor
(bad)
xchg
and
jp
lea
enter
pushf
sub
mov
imul
stc
mov
into
and
inc
fwait
js
shl
retf
or
aaa
cmp
mov
push
cmp
repz
enter
add
cmp
sti
cld
test
mov
call
ins
fstp
push
sbb
pusha
(bad)
adc
jp
xor
push
cmp
sub
popa
add
into
sbb
fdivr
xchg
out
xor
pop
dec
mov
dec
dec
into
movs
push
dec
fst
sub
and
push
or
pop
pop
sbb
jns
out
stc
dec
jecxz
in
pop
mov
aaa
ins
dec
jae
xor
loop
jle
mov
cli
movs
cmp
mov
fisub
mov
fbld
ret
inc
mov
jo
lods
call
call
js
and
cmp
cwde
(bad)
jo
loop
dec
pusha
ins
shl
int3
dec
and
mov
sbb
rcl
push
inc
and
lea
call
test
addr16
mov
dec
jmp
popa
enter
sbb
popa
repz
mov
sub
std
test
pushf
in
push
adc
scas
test
mov
inc
cmc
rol
scas
mov
test
lds
leave
or
jne
jecxz
dec
gs
adc
ins
(bad)
rol
sub
push
inc
inc
jne
dec
shl
push
pusha
sbb
enter
jb
mov
xchg
jmp
adc
push
int
inc
sbb
out
add
in
shr
pop
cmp
ss
cmp
test
mov
aaa
adc
cmp
into
pop
leave
arpl
jb
mov
std
cmp
push
lods
push
cmc
mov
in
sub
ins
or
fisttp
dec
jns
ins
dec
aas
mov
xor
mov
pop
cmc
push
inc
jge
mov
push
fsubr
sbb
dec
pop
pop
shr
fstp
call
shl
mov
cli
jge
inc
pop
aam
test
ret
loope
pusha
inc
and
cwde
stos
rcr
pop
add
movs
mov
mov
xchg
adc
ror
fcomip
lahf
cmp
pop
out
dec
popf
xchg
scas
mov
mov
sbb
int
and
repz
pop
std
sub
nop
in
xchg
pop
ret
aaa
aaa
pushf
sbb
dec
xchg
gs
nop
xor
in
jne
fcomp
pop
adc
imul
out
ret
xor
inc
xor
in
or
ret
iret
sub
mov
dec
(bad)
ror
xchg
inc
pop
mov
stos
and
pop
push
sub
add
xor
push
push
mov
fmul
inc
or
in
cmps
jecxz
ret
rol
pop
jae
ret
inc
fnstsw
(bad)
fisttp
jge
test
stc
cli
jecxz
mov
mov
movs
sub
fcmovu
mov
sbb
dec
ins
mov
cmps
cli
mov
call
sbb
dec
mov
cmc
std
or
mov
ret
fisubr
push
xor
outs
inc
xchg
(bad)
cmp
add
cs
gs
cli
pop
pop
fwait
je
mov
movs
jns
test
mov
into
cmp
jne
inc
hlt
add
adc
adc
add
pop
pushf
mov
mov
jns
cwde
aas
fdiv
xchg
repz
pop
div
fiadd
sub
push
cmp
sbb
scas
jmp
or
cs
jp
sub
cmp
xlat
mov
dec
lds
icebp
adc
jl
in
dec
xchg
int3
ret
inc
dec
pop
shl
pop
jae
(bad)
arpl
push
sahf
xchg
cmps
stc
xchg
add
and
les
pop
push
daa
push
test
mov
nop
fldcw
dec
cmp
inc
shr
adc
test
aas
(bad)
mov
xor
push
inc
push
lock
fstp
sub
jge
mov
retf
and
push
scas
sbb
aaa
cld
lods
movs
jne
mov
mov
retf
adc
out
pop
jmp
adc
push
jno
mov
sub
push
inc
cwde
cmps
and
jno
adc
push
jb
push
push
stc
xor
stos
sbb
dec
cmc
xor
or
icebp
push
pop
xor
mov
inc
add
jae
(bad)
ud2
and
jo
fiadd
je
icebp
arpl
mov
stc
xor
pop
add
inc
sbb
movs
lahf
sub
clc
data16
sbb
in
pop
cs
cmp
mov
hlt
cmc
(bad)
in
adc
stos
stc
ror
arpl
dec
mov
add
test
dec
or
rcr
jno
cmp
pop
test
jae
sahf
sub
outs
into
mov
jl
add
out
jmp
jmp
ja
icebp
dec
pusha
xchg
sub
jl
jg
or
daa
mov
xor
data16
das
sub
stos
cmp
push
lds
enter
cmc
imul
call
out
(bad)
jns
test
pop
sbb
pop
sub
or
xlat
ins
sbb
push
gs
(bad)
mov
nop
xor
bound
jmp
adc
dec
xor
mov
jno
dec
fnstcw
sub
push
cwde
mov
sbb
ins
nop
jle
ficomp
out
retf
cdq
das
inc
stc
sub
iret
and
xor
lea
js
icebp
(bad)
xor
pop
data16
xlat
cmp
lods
sbb
idiv
mov
fld
push
arpl
in
sbb
addr16
add
call
cwde
mov
fcmovnu
dec
add
cdq
sub
in
js
sahf
mov
mov
arpl
out
push
outs
push
or
jg
dec
(bad)
out
leave
sub
mov
cs
mul
fisttp
test
sub
test
sub
mov
loopne
adc
fs
ins
leave
ja
test
sahf
jl
es
inc
mov
dec
jno
fist
mov
mov
fsubr
cmp
xor
retf
hlt
js
cmc
push
dec
mov
sub
add
mov
mov
out
mov
jle
call
mov
es
data16
xchg
pop
sbb
push
sub
jg
popf
sbb
cwde
sbb
jns
aam
xor
cmp
sbb
cdq
cmp
push
mov
push
or
cmp
jmp
movs
sub
ror
retf
add
(bad)
outs
std
xchg
ins
pusha
gs
jecxz
xchg
jbe
push
xor
jmp
pop
fidiv
adc
jnp
xor
or
cmp
sbb
jae
aas
and
xchg
jg
xchg
(bad)
pop
cld
or
iret
enter
jb
push
cs
sbb
jmp
dec
xor
mov
leave
sub
pusha
imul
adc
ror
ficom
cli
lods
dec
push
sub
jbe
sub
cmp
xchg
std
add
(bad)
and
in
fsub
stos
dec
sub
mov
dec
into
ja
cdq
(bad)
retf
push
mov
jle
sub
cmps
cmc
es
bound
aas
enter
inc
(bad)
mov
retf
out
test
imul
xchg
xor
nop
lahf
mov
or
mov
dec
or
aad
add
inc
test
sbb
in
cmp
leave
mov
mov
xchg
cmp
jmp
sar
call
xchg
ds
inc
mov
cs
sub
inc
loopne
mov
and
aam
test
cmp
in
lods
out
hlt
adc
dec
push
sbb
mov
add
je
in
add
int
pop
call
mov
fcom
(bad)
push
out
xor
mov
div
aaa
int3
(bad)
cmp
xchg
in
sub
outs
call
pop
sahf
cmp
sbb
mov
aam
idiv
aam
push
xchg
mov
fstp
je
pop
pop
loope
setl
movs
imul
loop
push
xchg
sub
fild
or
push
xchg
leave
dec
ja
cmc
std
mov
jl
xchg
aad
xchg
mov
div
xchg
(bad)
fld
(bad)
adc
mov
jp
daa
retf
jbe
xor
pop
fisub
sbb
jg
mov
outs
add
or
mov
bound
pushf
fisttp
gs
dec
in
or
xor
movs
outs
adc
int
arpl
sbb
int3
sar
fs
fdivr
mov
mov
cmps
xor
pushf
sub
mov
push
shl
jns
cmps
push
es
imul
ins
gs
push
hlt
ror
xchg
std
div
push
or
mov
fmul
nop
popf
scas
sub
imul
shl
pop
adc
fimul
mov
xor
dec
in
jno
iret
data16
iret
push
repnz
int
cmc
jno
cld
push
imul
pop
pop
sub
or
cli
push
enter
pop
sbb
mov
sbb
enter
cs
enter
test
repnz
and
ret
mov
test
jge
or
xchg
or
and
mov
jo
fs
stos
cmp
adc
jge
add
mov
adc
jp
fstp
pop
jne
sbb
xor
jne
and
mov
and
in
fbld
push
sub
cli
sub
enter
and
fbld
jmp
sub
cmp
es
push
ins
cmp
add
loope
cmp
pop
lods
popa
(bad)
repnz
dec
xor
mov
dec
test
pop
pop
push
call
inc
dec
and
jno
sub
mov
call
rcl
push
aam
mov
cli
jnp
cwde
test
aaa
adc
in
dec
sbb
jmp
rcr
push
mov
jge
xchg
adc
out
out
mov
jle
jne
inc
dec
dec
adc
mov
add
arpl
add
lock
cld
or
aad
cld
(bad)
dec
(bad)
mov
adc
repnz
or
and
lahf
pop
lea
int
add
fsubr
add
xchg
arpl
dec
hlt
xlat
imul
inc
adc
jecxz
and
call
scas
das
and
dec
jmp
push
dec
push
mov
pop
imul
pop
sbb
mov
addr16
push
add
lods
jecxz
and
cmp
into
gs
dec
inc
dec
add
(bad)
cld
int3
mov
cmp
sub
sbb
and
and
into
jns
rcl
pop
aam
movs
scas
fwait
mov
xor
lods
lods
add
loop
cmp
pop
std
inc
or
inc
adc
repnz
outs
(bad)
jmp
pop
add
cmp
sahf
lods
pop
or
mov
fmul
outs
add
add
outs
lea
sub
movs
add
test
sbb
jmp
sub
mov
push
jp
mov
outs
xchg
lods
cmps
cmovp
leave
aad
xor
cmps
ja
mov
dec
test
sub
pop
(bad)
imul
or
push
mov
pop
jp
jmp
test
es
(bad)
ss
in
pop
fldenv
or
xchg
pop
sub
cmp
xor
jmp
test
inc
mov
jecxz
or
jle
push
in
(bad)
mov
lahf
push
cmp
pop
jmp
mov
or
ja
imul
into
inc
cmp
fs
mov
addr16
xchg
cs
and
jl
dec
fwait
push
jecxz
ds
fcomi
add
popf
enter
adc
in
(bad)
out
cmp
or
jne
ins
adc
push
add
sub
push
cdq
fimul
inc
(bad)
inc
jmp
mov
repz
jb
cli
fisubr
mov
xchg
adc
(bad)
mov
inc
or
in
retf
icebp
jbe
xor
and
adc
xlat
in
out
cli
stc
fisttp
sbb
outs
mov
push
dec
mov
dec
jne
mov
sub
inc
adc
and
dec
aad
jmp
dec
mov
xchg
cmp
sbb
cmp
dec
sbb
fmul
cmps
fcmovbe
sub
jne
mov
mov
out
aad
inc
push
xchg
mov
jns
je
inc
jno
dec
xor
(bad)
mov
in
(bad)
adc
dec
gs
hlt
or
sbb
push
cmp
jecxz
or
in
jl
xchg
inc
rcr
rcl
stc
std
fs
add
fisttp
xchg
cmp
test
pop
push
(bad)
xor
add
jne
mov
pop
call
out
jbe
xchg
loope
(bad)
inc
les
data16
cmp
and
add
test
pop
(bad)
in
jmp
cmp
push
adc
push
outs
(bad)
cwde
mov
xchg
sbb
jb
push
dec
add
dec
lea
lea
sti
stc
or
mov
js
std
add
rcr
test
and
cmps
xchg
sub
adc
scas
js
adc
neg
aam
shl
pusha
push
ss
or
pop
jne
mov
shl
aaa
add
add
or
ins
and
ret
and
sbb
jae
jmp
cli
repz
fistp
mov
movs
sub
mov
daa
sub
popa
pop
or
mov
pop
arpl
data16
push
sar
jno
mov
ss
mov
xchg
aad
xor
cmp
add
shl
movs
repnz
je
jp
data16
sub
mov
(bad)
jg
je
mov
sahf
sbb
push
cld
jle
in
and
scas
sti
mov
imul
(bad)
sar
ret
shr
adc
jle
inc
cmp
rcl
popf
cmp
adc
jmp
and
rcl
lock
jno
ins
(bad)
sub
adc
push
(bad)
icebp
enter
mov
cwde
sub
push
stos
xchg
mov
dec
dec
dec
pop
xor
pop
das
cmps
aam
jmp
scas
mov
xor
nop
add
aas
push
aaa
jnp
mov
push
jge
sub
lock
cmps
jns
add
mov
adc
xchg
and
pop
cdq
repz
push
imul
sub
jecxz
popa
jg
movs
hlt
cs
rcr
stos
leave
push
iret
sbb
imul
in
lahf
jae
call
call
ss
fsub
movs
das
xchg
xlat
dec
mov
inc
xchg
jp
lea
mov
rcr
pop
je
add
pandn
loopne
add
mov
add
push
movs
sti
add
xor
and
mov
lahf
lock
push
push
xchg
mov
scas
iret
ret
mov
outs
clc
pop
lock
cwde
sbb
cli
int
add
inc
or
ss
stos
or
jnp
jle
imul
jge
inc
ins
push
mov
cmp
imul
(bad)
sbb
mov
loopne
sbb
dec
shl
adc
xor
xor
lahf
pusha
(bad)
or
or
adc
(bad)
xchg
idiv
inc
call
sti
xchg
fisttp
pop
das
push
add
ja
aam
fwait
cs
aam
jb
das
push
dec
jnp
mov
and
cwde
cmp
outs
sti
or
adc
dec
cmc
jb
dec
out
iret
push
pop
call
cmp
retf
int3
add
cmps
retf
add
and
sub
sbb
mov
sbb
(bad)
fisub
and
leave
mov
pop
mov
retf
adc
fst
cdq
cwde
xchg
sub
imul
les
fwait
pop
adc
inc
mov
pop
ret
test
xchg
leave
aas
mov
(bad)
dec
mov
cs
jns
(bad)
into
or
mov
fild
aas
sar
ds
xchg
fst
pop
sbb
xor
dec
pop
push
adc
(bad)
or
pop
inc
pop
cld
hlt
push
cwde
xor
mov
add
(bad)
adc
push
xchg
movs
jmp
add
sahf
and
lock
ins
pop
(bad)
xchg
pop
and
and
or
fwait
or
lock
mov
lea
pop
dec
arpl
pop
xchg
imul
mov
or
sub
sar
pushf
lods
adc
mov
and
movs
lahf
popf
sbb
mov
fidivr
or
dec
inc
ins
add
add
stc
dec
into
mov
add
adc
retf
adc
inc
sub
ror
sub
cmc
cmc
inc
pop
lods
ret
mov
imul
pushf
lds
jae
lahf
fld
xor
inc
or
(bad)
pop
out
xchg
xchg
mov
mov
mov
adc
pop
xchg
cmps
fst
cmp
es
and
xor
lahf
ret
push
lods
fistp
cmp
xchg
push
idiv
push
outs
pusha
add
jmp
(bad)
push
retf
setno
(bad)
bound
popf
cmp
(bad)
out
aad
mov
xchg
aad
test
aam
(bad)
js
es
nop
imul
(bad)
int3
cs
dec
dec
sub
push
aas
iret
fsubr
stos
push
ins
int3
jno
in
std
or
stos
jns
jmp
push
dec
jmp
cmp
jo
(bad)
cmps
shl
lods
repz
or
xor
cdq
aad
xchg
(bad)
mov
loope
sub
sahf
sbb
dec
bound
leave
nop
daa
cmp
sbb
or
movs
push
mov
daa
xlat
adc
daa
pop
push
mov
jns
(bad)
adc
xor
push
and
jae
shr
fwait
ror
popf
cmp
ins
pop
stos
mov
jl
aam
and
sub
inc
add
jge
(bad)
jo
push
(bad)
daa
(bad)
jl
xchg
mov
(bad)
bound
out
cmps
mov
jmp
sbb
inc
jns
inc
scas
fisttp
inc
gs
hlt
mov
and
mov
push
(bad)
mov
scas
or
fst
add
shl
inc
sti
dec
ds
ret
clc
and
or
iret
cmc
mov
test
scas
push
adc
sti
cwde
mov
jbe
outs
dec
stc
inc
push
sbb
pop
dec
mov
cmp
je
mov
ret
fild
add
adc
cwde
cld
cmc
push
test
push
mov
je
lods
fxtract
js
sti
ds
loope
xor
out
dec
cmp
loopne
ret
inc
ds
cmp
push
das
icebp
fidiv
inc
fdivr
push
inc
mov
mov
cmc
inc
cdq
and
movs
mov
mov
pop
arpl
mov
sbb
jne
sbb
les
scas
ret
sub
jl
jl
lds
fmul
push
or
cld
cdq
test
lods
stc
inc
cdq
call
mov
loope
pop
clc
mov
xchg
sbb
inc
out
adc
mov
addr16
rol
xor
gs
(bad)
out
shl
(bad)
dec
xchg
ficomp
scas
cmp
xchg
and
fisubr
mov
jecxz
rcr
xchg
jecxz
xchg
das
std
(bad)
repnz
mov
jg
shl
push
sub
aad
repz
xor
neg
xor
retf
and
jno
sbb
outs
xchg
js
xchg
adc
ret
and
mov
push
add
xchg
fsub
inc
sbb
adc
out
push
or
fs
dec
cdq
aad
test
pop
call
adc
(bad)
mov
push
mov
pusha
ret
popf
fisubr
and
push
pop
mov
and
retf
cmps
(bad)
movs
lods
rcr
lock
das
push
or
shr
inc
mov
outs
(bad)
(bad)
nop
jnp
xchg
pop
add
add
pop
outs
imul
push
sub
fcomp
push
pusha
rcr
mov
in
int
mov
test
out
sub
in
cmc
pusha
adc
push
jmp
pop
fmul
xchg
xor
xor
adc
(bad)
outs
xor
retf
sub
fbld
dec
aad
and
es
cwde
pushf
not
fsubr
lods
lahf
push
(bad)
push
push
nop
idiv
xchg
push
and
or
mov
fbstp
frstor
xchg
stos
rcr
(bad)
loope
arpl
add
loop
pop
daa
sub
ins
mov
or
stc
scas
push
and
cmp
adc
add
mov
push
fnstsw
imul
lods
xchg
in
std
dec
inc
cmp
not
stos
or
xlat
outs
sbb
pop
mov
ins
push
and
lods
or
int
mov
mov
pop
xor
pushf
leave
das
or
inc
pop
xor
mov
stos
sbb
enter
sub
js
xor
inc
fdiv
ins
aaa
lods
push
xchg
es
add
mov
ret
pusha
mov
adc
dec
push
add
xchg
xchg
mov
shr
mov
push
and
mov
mov
add
es
daa
shl
(bad)
jae
mov
mov
push
pop
push
arpl
pop
xchg
sub
fst
mov
jmp
aam
adc
idiv
pop
jle
ins
cmps
xchg
shr
pop
inc
out
ins
add
sub
fisubr
dec
test
push
add
inc
(bad)
in
sbb
cmp
mov
std
(bad)
icebp
daa
fidiv
ins
inc
pushf
jg
mov
push
loope
xor
pop
cmp
popa
bound
pop
je
jge
mov
retf
add
lods
cmp
stos
outs
dec
dec
inc
mov
adc
addr16
je
cmovnp
mov
das
cmp
push
cmp
dec
neg
stos
aad
sbb
ins
adc
cld
jns
xlat
mov
leave
aad
cmp
dec
scas
gs
retf
push
scas
xchg
or
stos
inc
outs
daa
jb
sub
pushf
es
test
mov
fdivr
cmp
imul
pop
rol
and
mov
xor
pop
inc
inc
imul
cmc
loop
cmps
push
in
xchg
ss
adc
jmp
cld
call
rol
lock
push
cs
pusha
mov
jae
sub
cmps
fist
fnstcw
popf
push
leave
mov
add
or
int3
sub
and
dec
sahf
push
es
jmp
std
jmp
push
test
int
add
std
sti
fs
aas
push
inc
ret
mov
clc
mov
lock
repnz
push
or
sub
in
or
in
call
inc
ret
ins
fist
jle
inc
inc
retf
add
mov
(bad)
pop
pop
adc
cmp
neg
sbb
leave
push
inc
mov
or
scas
sbb
sti
pop
jo
push
in
cmp
mov
sti
out
stos
rcl
and
cdq
(bad)
jle
cmp
add
pusha
(bad)
and
es
mov
pop
fdivp
push
push
imul
data16
jp
add
cmp
xchg
sahf
out
inc
push
push
push
xchg
pop
add
xor
inc
out
pop
jnp
adc
or
loope
aaa
mov
adc
fcomip
fst
(bad)
xor
repz
in
call
add
mov
xor
popa
gs
cmps
outs
fld
stos
(bad)
clc
push
data16
mov
mov
lods
test
mov
mov
in
call
fcmove
fwait
sub
retf
xchg
(bad)
sbb
sub
iret
cdq
mov
mov
xchg
push
fcmovu
cmp
mov
cld
adc
add
xor
loopne
fcmovb
xchg
rcr
or
mov
adc
sub
in
je
mov
lods
add
inc
pop
jmp
mov
das
out
xor
fbstp
ja
cmp
mov
mov
add
and
inc
mov
stos
xor
inc
mov
xchg
pop
sbb
inc
mov
scas
fadd
popa
jnp
idiv
cmp
out
jge
rcr
xchg
fild
pop
mov
imul
popa
stc
out
or
sub
jmp
(bad)
mov
add
adc
(bad)
push
stos
ins
push
push
dec
hlt
nop
mov
cld
out
mov
jns
xor
repz
aam
out
sub
das
cwde
jle
jmp
nop
ins
jmp
dec
mov
imul
stos
xchg
xchg
mov
cld
fbstp
xor
imul
mov
jno
cmp
stos
and
dec
inc
sar
je
stos
mov
aaa
dec
sub
jp
pop
mov
gs
xor
push
das
sbb
push
aaa
adc
(bad)
mov
jl
jmp
cmp
in
(bad)
fild
jbe
lods
stos
or
add
out
xor
mov
imul
inc
test
cmp
jp
scas
push
jl
cmc
sbb
mov
inc
test
cmp
sti
imul
xchg
pop
mov
cmps
mov
ja
iret
pop
test
test
loop
push
in
pop
imul
sar
test
xchg
cmp
push
push
fnsave
cmp
adc
mov
std
sbb
lock
pop
test
push
jns
add
clc
mov
mov
retf
sar
sub
cmc
xor
mov
jmp
lahf
dec
ins
movs
movs
adc
repz
push
nop
xchg
call
mov
dec
outs
add
imul
popf
xlat
inc
adc
mov
push
pop
or
shl
pop
cmps
pop
and
dec
xchg
hlt
test
xor
sbb
test
fdivr
pushf
into
jp
lock
ja
retf
in
inc
cmp
js
fcomp
pop
fistp
movs
(bad)
loope
xor
setg
mov
mov
sbb
ror
aaa
out
adc
dec
in
stos
dec
xor
addr16
retf
push
push
dec
jge
imul
sbb
lea
pushf
in
(bad)
in
(bad)
shr
into
jnp
aaa
jb
scas
push
sbb
inc
xchg
inc
popf
iret
push
mov
or
je
test
sub
jb
daa
inc
xor
or
mov
adc
jno
push
in
int3
std
xor
push
or
fcom
add
int
and
adc
jns
push
in
sub
rcr
add
pop
xchg
lahf
xor
push
repz
jl
stos
cld
in
dec
jecxz
out
hlt
or
iret
aaa
or
mov
sub
push
mov
(bad)
popf
push
sbb
jl
lods
cmp
xor
gs
xor
jnp
je
movs
inc
jno
nop
pop
nop
lahf
mov
push
push
cmps
jmp
pop
mov
dec
mov
ins
inc
lea
call
or
call
hlt
sbb
iret
xor
pop
mov
aaa
inc
neg
mov
and
enter
loopne
enter
and
fidiv
mov
pop
fild
scas
xchg
push
sub
cmp
jp
cmp
bound
xchg
or
mov
sbb
inc
fadd
jl
dec
push
add
aaa
shl
(bad)
idiv
imul
mov
call
mov
fstp
mov
mov
jns
retf
adc
sti
or
push
enter
int
clc
dec
clc
test
addr16
mov
mov
and
push
aaa
or
loopne
fild
jb
sbb
aas
xor
scas
push
add
into
xor
jg
icebp
push
gs
jge
push
mov
push
cmc
in
add
(bad)
fst
popf
icebp
or
cmp
aam
sbb
mov
xchg
xchg
push
sub
inc
stc
in
or
xor
mov
fidiv
test
adc
sbb
mov
aaa
and
add
jmp
xor
xor
inc
ret
push
xchg
or
les
sub
dec
cmp
iret
fdiv
cmp
out
xchg
inc
cmp
or
xor
mov
out
(bad)
movs
(bad)
mov
jns
aaa
pop
jno
mov
adc
pop
and
sub
xor
std
call
push
pcmpeqw
cs
out
pop
gs
push
ret
mov
and
or
sbb
jg
inc
leave
jle
mov
xor
aam
push
std
sahf
mov
sub
das
cmp
mov
mov
movs
movs
in
mov
jno
xchg
pop
cmp
ficom
pop
das
std
or
xchg
in
sub
jmp
aam
fild
lock
and
dec
and
inc
add
mov
stc
push
ins
jp
jp
xchg
fadd
mov
and
pop
out
mov
mov
xor
ds
and
xchg
mov
and
jo
test
jno
mov
mov
mov
test
out
mov
repz
push
push
or
int3
in
test
(bad)
and
ds
fs
jmp
inc
and
xor
mov
or
jb
inc
add
fist
test
dec
sahf
push
and
enter
sub
pop
js
add
xchg
(bad)
add
xchg
mov
add
(bad)
pop
retf
pushf
aaa
repnz
imul
sbb
icebp
sbb
add
hlt
pusha
and
hlt
mov
retf
(bad)
ins
mov
and
sub
jmp
xchg
clc
and
popf
iret
jno
push
outs
sub
loope
pop
xlat
test
ss
jne
mov
push
xchg
out
push
int3
sti
mov
aad
xchg
in
fild
mov
jl
cld
dec
in
imul
mov
lsl
cli
mov
ja
dec
imul
mov
and
pop
mov
pop
aas
jecxz
and
xlat
mov
js
and
fdecstp
pop
cmp
pushf
retf
int
pop
sub
and
dec
jg
jbe
(bad)
ins
repz
add
and
pop
mov
xchg
fst
sub
or
sbb
sahf
xchg
push
out
inc
loop
jp
(bad)
lahf
in
je
jbe
int3
loope
xlat
lds
aaa
jmp
ret
xor
enter
stc
sub
gs
shr
sbb
pop
inc
fcmove
mov
mov
mov
fsubr
movs
aas
add
dec
daa
mov
adc
icebp
shl
outs
bound
(bad)
and
into
sahf
pop
enter
outs
adc
pop
and
add
stos
xor
icebp
add
or
adc
mov
add
mov
mov
fwait
push
retf
sub
cmp
xchg
sub
push
(bad)
in
pop
dec
in
lods
retf
sub
ror
call
xchg
scas
std
or
inc
mov
push
arpl
adc
mov
push
or
mov
lods
dec
retf
or
cmps
dec
push
or
mov
in
inc
fsubr
adc
fprem
jae
jle
pop
fmul
stc
or
stos
inc
or
xchg
in
fimul
and
jbe
sar
mov
ja
loopne
mov
fld
xchg
jo
movs
add
shl
push
mov
sbb
into
shr
cmp
jo
cdq
mov
aaa
cmp
outs
aas
push
push
int
clc
cmps
push
cs
cli
call
je
pop
sbb
jne
and
or
fisubr
loop
aas
and
jo
sub
jbe
cld
retf
push
scas
dec
das
dec
stos
lahf
in
into
mov
ins
aad
sbb
dec
addr16
mov
and
adc
in
dec
test
adc
and
scas
cmc
fs
repz
dec
(bad)
cld
loope
sti
add
sbb
add
xor
test
aaa
int
ja
repz
ret
pop
imul
or
sbb
imul
fwait
xchg
jnp
or
sar
sbb
pop
or
mov
outs
test
or
call
ror
adc
je
cs
cmps
add
cli
lods
jecxz
lods
mov
cmps
mov
loope
mov
inc
dec
fwait
daa
js
xlat
push
mov
out
pop
push
xor
sti
cmc
mov
sahf
out
pop
pop
icebp
cmp
mov
add
cmp
mov
dec
fisttp
xchg
stc
shr
sub
inc
call
sahf
mov
lea
sbb
out
cmp
daa
and
jp
ror
sub
or
dec
sub
leave
pop
ins
imul
daa
rol
mov
or
je
inc
push
test
jp
test
jae
mov
cld
clc
movs
mov
fdivp
add
ja
cdq
aaa
inc
cmp
cmp
call
sbb
add
dec
shl
cmc
pop
mov
mov
daa
pop
ins
int3
in
fadd
sub
lea
setg
js
or
or
nop
jae
dec
int
out
lahf
pop
dec
aas
xchg
test
inc
dec
jno
dec
(bad)
adc
out
(bad)
les
stos
mov
mov
dec
jp
or
sub
xor
fdivp
aaa
pop
jp
mov
mov
clc
pop
or
clc
xchg
(bad)
jno
inc
mov
ror
jmp
div
ja
adc
push
add
xchg
loope
inc
imul
pusha
sahf
push
and
rol
jle
or
cli
adc
jge
ja
jecxz
mov
repnz
mov
loopne
fs
pop
adc
jl
and
push
cmp
not
cld
sbb
(bad)
scas
rcr
sub
xchg
test
inc
push
dec
jecxz
xchg
jl
push
sahf
pop
jo
sub
imul
pop
xchg
and
scas
jmp
fldenv
test
mov
jp
leave
cmp
imul
dec
dec
out
leave
and
mov
mov
add
shl
cmp
rcl
jb
retf
repz
add
and
in
in
loope
inc
mov
popa
call
mov
retf
mov
shl
push
daa
jo
xchg
xlat
add
add
or
call
test
add
inc
jo
in
(bad)
cmp
adc
dec
add
fucom
clc
pop
add
push
(bad)
push
fadd
lods
imul
ror
cmp
rol
xlat
push
inc
pop
mov
fsubr
jno
adc
popf
sbb
in
mov
mov
mov
pushf
adc
pop
mov
mov
cli
es
out
or
or
dec
mov
xor
loop
mov
shl
add
js
jns
sbb
mov
sub
ins
pop
sar
xchg
jmp
or
push
xchg
outs
call
rcl
lods
pop
mov
and
or
int
mov
ja
mov
(bad)
(bad)
xchg
mov
xor
inc
shl
jmp
(bad)
clc
pop
(bad)
pop
mov
test
dec
adc
in
push
jl
jmp
loopne
pop
xchg
gs
div
mov
add
mov
cmp
mov
cmp
rcr
jnp
in
into
sbb
xchg
data16
(bad)
mov
adc
or
mov
or
adc
pushf
mov
sahf
popf
nop
jnp
mov
out
loope
push
jns
mov
and
sub
scas
or
ss
mov
xor
test
jmp
pop
leave
inc
xchg
lea
out
frstor
sbb
or
cmp
jne
mov
xchg
stos
dec
push
xor
mov
cmp
mov
pop
fisttp
pusha
sub
(bad)
push
dec
or
ret
fbld
cmp
adc
fld
idiv
add
aaa
pop
add
fs
jge
pop
ja
shl
out
jmp
mov
xor
movs
jbe
or
lock
cmp
mov
aad
(bad)
retf
mov
xchg
stc
(bad)
jmp
mov
jmp
loope
lahf
mov
xchg
stos
inc
movs
push
mov
or
loope
outs
xor
outs
mov
mov
retf
pop
js
xchg
sub
xlat
pop
xchg
jp
and
aas
pop
sbb
jl
and
popf
leave
mov
popf
dec
dec
and
fdivr
div
push
inc
and
or
ja
sub
and
cdq
jmp
scas
das
add
sub
out
rcr
inc
mov
jnp
sti
dec
mov
jo
xor
loop
mov
xchg
push
test
(bad)
dec
ror
mov
pop
clc
or
mov
jno
and
mov
mov
mov
pop
sbb
mov
inc
hlt
adc
shl
aad
dec
pusha
or
push
mov
mov
scas
jb
sbb
lahf
scas
pop
xor
cmp
xchg
bound
mov
daa
xor
(bad)
sbb
iret
mov
outs
leave
imul
std
add
cmp
imul
sub
pop
or
fist
jmp
inc
scas
push
mov
push
call
and
test
call
mov
jns
push
inc
mov
jmp
mov
in
lds
adc
scas
inc
or
out
btr
jecxz
jo
out
inc
les
std
test
inc
adc
jno
sbb
out
pop
test
inc
sti
cmp
jae
pop
sbb
lods
xor
adc
call
cmp
jnp
fiadd
or
ja
mov
xor
rcr
fucomi
mov
mov
and
inc
xlat
xchg
lods
cmp
(bad)
xor
repnz
xchg
js
cmp
adc
jae
push
shl
and
ins
jmp
jns
outs
push
mov
inc
dec
jge
push
jne
call
cmps
rcr
idiv
cmp
push
xchg
adc
inc
lahf
sbb
mov
and
movs
sti
scas
or
or
dec
cs
push
(bad)
push
dec
in
in
std
pop
retf
outs
push
mov
push
out
jb
aad
mov
ror
sbb
rol
inc
mov
dec
das
jp
stos
push
mov
repnz
add
movs
xor
mov
xor
mov
push
push
or
enter
sahf
sub
stc
pushf
repnz
xor
hlt
push
call
sbb
sbb
cld
mov
pop
imul
adc
fld
xor
ret
arpl
movs
add
rcr
scas
(bad)
jb
(bad)
xchg
jbe
mul
mov
js
push
push
fisttp
arpl
(bad)
and
mov
mov
leave
add
pop
and
icebp
cmps
push
fldcw
push
mov
rol
out
adc
iret
ds
cmp
aas
gs
movs
or
dec
test
and
dec
mov
jmp
rcr
sub
or
jmp
add
inc
or
mov
addr16
inc
pop
retf
xor
xor
push
(bad)
pop
inc
mov
shl
(bad)
int
cmc
icebp
sahf
out
jno
fwait
sbb
es
sub
popf
aam
call
mov
les
rol
mov
enter
cli
jge
(bad)
mov
sahf
cmp
adc
(bad)
cmp
(bad)
addr16
mov
mov
fucomip
movs
adc
jmp
adc
imul
mov
rol
or
aam
push
add
hlt
sub
mov
add
pop
(bad)
sub
stos
inc
ret
mov
pop
sbb
adc
xlat
push
aaa
or
mov
movs
js
mov
lahf
jae
mov
test
loope
loope
dec
or
fmul
pop
(bad)
(bad)
jo
test
fwait
call
xchg
or
sbb
xor
push
jecxz
jae
push
and
sub
in
nop
je
adc
xor
mov
mov
add
retf
call
rcl
lahf
outs
mov
push
or
daa
pushf
daa
push
pop
(bad)
popfw
ficom
dec
stc
in
cmps
mov
pop
inc
ror
and
sahf
in
mov
retf
sub
jp
pop
lods
imul
mov
popa
jle
jmp
ins
mov
retf
jg
dec
sbb
in
sbb
outs
dec
into
push
mov
jp
stc
test
xchg
retf
ja
mov
addr16
sahf
xor
xor
paddb
ficomp
and
aam
lahf
std
shl
(bad)
je
fndisi(8087
mov
xor
repnz
mov
push
ds
sbb
call
sub
mov
jo
push
mov
lods
sbb
fmulp
and
je
fwait
data16
lods
icebp
fwait
push
cmp
mov
mov
js
jmp
inc
push
mov
test
and
mov
arpl
or
les
mov
imul
scas
push
xchg
scas
inc
movs
cmp
cs
sbb
call
jmp
add
add
test
add
mov
mov
and
pop
int3
enter
sbb
and
dec
sbb
cli
push
dec
mov
movs
fst
test
xor
mov
and
out
and
cmp
push
xchg
cmc
push
jle
jecxz
call
outs
in
ror
jno
loop
scas
jge
adc
xchg
jecxz
push
jae
pop
mov
shl
sub
dec
sbb
sub
ins
mov
sahf
leave
adc
sbb
push
mov
aad
mov
test
pop
mov
and
fwait
mov
inc
pop
sub
aad
inc
cmps
hlt
scas
fiadd
add
cld
add
and
out
push
neg
and
pop
jecxz
fnsave
push
cmp
test
and
sbb
mov
int3
or
repz
xor
into
cld
sub
xor
pop
xchg
jmp
mov
sbb
test
movs
jmp
repnz
cmp
js
sti
xchg
inc
es
xor
sti
loope
add
fwait
add
gs
fwait
add
les
mov
lods
jp
imul
(bad)
jb
mov
mov
cmp
mov
out
or
fisttp
setae
daa
ret
imul
mov
sahf
cmp
arpl
into
mov
dec
aad
ja
ror
sbb
mov
sub
shl
xor
push
adc
(bad)
adc
sbb
sbb
into
(bad)
hlt
(bad)
scas
repz
shl
ins
sub
ins
(bad)
outs
fs
gs
or
lds
cmp
repz
mov
xlat
ret
mov
scas
push
shl
sbb
dec
or
cdq
push
mov
mov
aas
pop
ja
movs
fcom
lods
adc
push
shr
outs
xor
jge
shr
test
stos
enter
adc
sbb
cmp
cmp
les
jne
and
in
hlt
inc
ss
not
shl
iret
ss
out
or
dec
inc
push
arpl
fstp
repnz
sar
add
outs
leave
into
pop
dec
sbb
jne
and
and
rcr
xchg
add
adc
aas
dec
jb
and
jb
jmp
loop
or
cmps
lds
fstp
mov
movs
push
(bad)
(bad)
add
jo
std
pop
out
sbb
das
iret
ret
adc
push
push
test
aaa
gs
mov
out
or
and
sbb
cmps
pop
in
xor
stos
adc
outs
push
aad
jno
add
call
in
push
adc
mov
adc
push
dec
and
hlt
mov
in
data16
call
mov
cmp
(bad)
les
bound
jmp
mov
dec
fdiv
mov
push
cmp
pop
clc
stos
aaa
or
(bad)
dec
dec
add
js
cmps
scas
pop
xchg
retf
or
aas
cli
jo
outs
imul
jae
pop
movs
repz
inc
in
call
movaps
sbb
xchg
sub
(bad)
es
cmc
fstp
ret
hlt
scas
dec
add
and
movs
data16
and
in
sub
push
mov
ja
pop
push
adc
sbb
stc
or
push
fcmovbe
fistp
fnsave
push
daa
push
out
adc
xchg
outs
loop
aaa
xchg
leave
cli
std
sahf
mov
push
imul
cmps
loopne
inc
sub
mov
(bad)
cwde
pop
push
leave
inc
push
adc
ins
mov
sbb
ret
cmps
jnp
(bad)
leave
not
jo
aaa
in
mov
pop
and
xchg
xchg
rcr
xor
dec
cmc
stc
scas
xchg
cdq
test
or
xchg
xchg
aas
and
leave
mov
daa
das
jmp
out
pop
sub
imul
stos
scas
(bad)
sbb
pop
and
fwait
add
jnp
mov
mov
pusha
and
push
(bad)
(bad)
pushf
dec
mov
je
cmp
push
add
gs
lods
lds
pop
arpl
mov
out
adc
lock
mov
mov
ds
dec
pushf
(bad)
out
scas
das
cmp
(bad)
dec
loope
pop
sub
les
ss
add
in
fmul
dec
mov
scas
fmul
out
xchg
cmc
mov
aas
or
int
int
inc
or
cmp
cmp
sbb
cmp
out
in
sti
jbe
push
dec
int3
or
ja
xor
ja
jo
inc
cmp
call
adc
pop
inc
jno
mov
bound
and
shl
repnz
xchg
mov
mov
icebp
mov
dec
push
cld
inc
idiv
adc
push
scas
jb
push
jne
out
int
jg
xor
movs
xchg
cmp
jb
(bad)
jnp
and
inc
inc
jno
sub
out
icebp
(bad)
loope
ret
mov
inc
jns
fwait
xchg
dec
pushf
sub
imul
mov
xchg
xchg
sub
mov
cmp
das
mov
push
dec
cli
out
ror
push
inc
pop
xchg
lock
dec
and
jmp
clc
xchg
lds
mov
data16
mov
out
mov
jmp
shr
jl
xor
test
push
inc
jp
mov
adc
sub
rol
adc
xchg
cmp
xchg
cmp
dec
lods
or
retf
add
bsr
mov
pop
xor
aaa
gs
sbb
xor
push
dec
cwde
in
bound
jge
call
push
cmps
sti
sbb
ficomp
xor
ds
int3
xor
dec
aaa
cmp
xor
lods
sbb
mov
cwde
mov
sar
sar
and
shl
jecxz
retf
rol
dec
push
loop
mov
hlt
mov
mov
cmp
pop
gs
lods
mov
fwait
xchg
dec
dec
inc
xor
jno
aad
xchg
loopne
and
xchg
outs
jb
sbb
or
addr16
ror
jge
in
add
sub
inc
rcl
in
pop
pushf
xlat
cld
add
repz
inc
daa
inc
inc
repnz
xchg
pop
add
mov
pop
pop
or
adc
addr16
aam
jg
or
in
sub
adc
fild
stos
mov
inc
pop
xor
xor
xor
mov
xor
sbb
mov
push
mov
into
dec
push
pop
inc
add
stos
inc
nop
pop
adc
out
jl
mov
xor
mov
(bad)
inc
iret
fs
test
sub
call
mov
mov
inc
push
(bad)
icebp
xor
rol
aas
xor
scas
imul
mov
xchg
jmp
jmp
test
popf
add
loop
repnz
mov
adc
movs
adc
fcomp
add
enter
fwait
jmp
arpl
stos
jle
mov
pop
mov
and
and
popa
xor
sbb
aaa
dec
ins
scas
int
jb
ficom
cs
push
jb
shl
es
or
dec
add
add
mov
pushf
jns
stos
adc
or
pop
mov
stos
mov
repnz
xchg
(bad)
adc
out
pop
outs
icebp
daa
pop
jle
loope
adc
rol
jns
xchg
xchg
repz
jb
imul
or
and
inc
jnp
push
cmp
sub
xor
js
cmps
jnp
popf
mov
add
push
or
ret
mov
stc
adc
add
int
add
pop
add
clc
(bad)
jecxz
dec
jns
loopne
cwde
jne
sbb
mov
fist
lds
cmp
pop
xor
stos
adc
in
xor
fcmovu
jbe
push
jle
je
pop
cmps
dec
mov
nop
fild
scas
inc
call
xor
movs
push
dec
pop
stos
jne
fmul
lods
and
cli
xor
movs
bound
xor
es
adc
add
fmul
fsubr
add
ja
ins
sub
inc
dec
out
xor
rol
fnstsw
movs
adc
xchg
push
ret
mov
sar
dec
pop
cmp
scas
fcomip
inc
outs
push
push
ror
cmp
aad
adc
fidiv
sub
dec
loopne
or
ret
xchg
iret
retf
pop
push
or
sub
add
jge
out
jg
cld
xchg
clc
xor
mov
out
out
in
xchg
(bad)
pop
jbe
test
mov
dec
jl
aam
inc
sar
sbb
pop
stos
dec
imul
(bad)
or
iret
mov
lods
push
enter
mov
daa
push
mov
adc
fsubr
push
ret
ds
sti
lods
pop
idiv
(bad)
sbb
pop
adc
out
lea
inc
and
cmp
xor
sbb
clc
sbb
inc
cmp
sub
xor
xchg
jp
jmp
push
add
loope
cld
cmp
sub
xor
outs
cmp
xchg
adc
inc
push
data16
sub
push
cmp
pop
mov
loop
loopne
mov
(bad)
dec
movs
mov
je
in
push
jge
sar
mov
mov
or
ja
in
or
jns
psubusw
sahf
cdq
addr16
into
mov
ret
fnstenv
lock
sub
push
mov
and
sub
mov
(bad)
mov
lock
mov
adc
push
mov
jnp
icebp
and
jmp
adc
mov
out
jae
daa
lods
outs
imul
pop
ja
(bad)
shl
std
retf
jl
(bad)
aam
xchg
out
xchg
mov
xchg
or
dec
xchg
push
or
sub
and
mov
cld
adc
pop
test
pop
mov
xchg
outs
sbb
imul
xor
into
xchg
shl
dec
enter
les
lods
xor
popa
fucomip
div
mov
mov
jbe
and
je
mov
outs
or
repz
fsub
xchg
jle
cdq
xchg
sub
xchg
push
pop
loopne
pop
std
mov
mov
xor
xor
mov
movs
adc
inc
sub
push
mov
repnz
inc
or
inc
movs
and
mov
ins
retf
mov
rep
mov
add
js
adc
dec
push
in
push
xlat
fwait
mov
aas
xor
int3
cmp
inc
push
stos
daa
xlat
inc
shl
mov
mov
(bad)
jl
xlat
cmovle
xchg
into
add
sub
in
bound
add
enter
push
out
push
sti
(bad)
ins
cmc
stos
int3
sti
sbb
and
aam
test
add
int3
mov
add
mov
setp
xchg
jno
mov
and
addr16
sub
jmp
push
std
popa
mov
clc
add
inc
bnd
pop
cli
popa
mov
jmp
mov
int3
cmp
ret
adc
pop
shl
xor
pop
mov
xchg
xchg
add
xor
jmp
jmp
pop
ffreep
jge
mov
mov
jnp
rcl
in
sahf
gs
test
mov
sti
cmp
mov
push
dec
rcl
adc
idiv
mov
popf
pop
xor
dec
scas
bound
mov
xchg
jg
mov
popa
cmp
repz
adc
push
mov
iret
ds
push
movs
shl
jo
in
pop
xchg
ss
(bad)
daa
xchg
fistp
and
add
push
hlt
in
sub
ret
mov
cmps
cwde
mov
div
bound
(bad)
aad
adc
stc
pop
cmp
and
add
test
cmp
sub
dec
pop
sub
push
pcmpgtd
into
mov
and
mov
std
iret
ja
sub
nop
cdq
push
mov
mov
jae
inc
outs
hlt
ficomp
xor
or
test
cmps
clc
sti
mov
mov
(bad)
std
nop
cmp
sub
sbb
xchg
mov
ror
inc
mov
fs
out
mov
add
mov
and
fwait
or
jbe
xchg
pop
cmp
out
shr
repz
arpl
in
call
push
in
push
lock
pushf
lds
fcmovbe
out
mov
stc
test
pop
sub
add
int3
hlt
punpckldq
mov
or
xlat
and
push
jmp
inc
sbb
btc
mov
pop
dec
sbb
div
outs
mov
loopne
inc
jle
xchg
jb
fdivrp
movs
call
cmp
pop
shl
mov
mov
sub
(bad)
cmps
sub
std
add
add
inc
retf
arpl
and
inc
or
lahf
mov
aaa
lahf
pop
hlt
inc
inc
dec
clc
mov
sar
gs
jmp
lods
loopne
int3
shl
pop
pusha
xchg
imul
fstp
icebp
mov
push
lds
popf
pop
hlt
in
dec
popf
imul
retf
js
or
mov
shl
sbb
rol
out
aaa
jbe
xor
aad
fldcw
gs
outs
test
shr
imul
pop
jg
push
fwait
mov
jge
or
mov
test
jae
jmp
mov
and
shl
js
repnz
stc
or
in
cli
lea
and
fcomi
fst
call
aam
or
or
fwait
jl
nop
xor
pop
rcl
neg
mov
cmp
adc
loop
xchg
xchg
in
addr16
rol
push
dec
dec
adc
mov
and
cmp
(bad)
mov
lock
movs
cmps
popf
push
pop
out
sahf
retf
test
popa
inc
mov
dec
or
adc
sub
hlt
xor
cmp
frstor
fnsave
or
inc
imul
mov
jnp
int
push
add
mov
les
sbb
cld
lahf
jno
ins
popf
pop
push
inc
ret
(bad)
stos
push
mov
cs
adc
(bad)
test
adc
adc
or
push
daa
inc
mov
addr16
stc
xchg
std
test
(bad)
and
mov
imul
mov
call
or
mov
loopne
xlat
hlt
enter
fwait
into
xor
movs
lahf
and
mov
lods
les
shl
mov
dec
rcl
cmp
jns
push
push
mov
mov
pop
aad
xchg
push
inc
aam
addr16
stos
rcr
jo
lahf
adc
inc
push
pop
xlat
outs
fbld
loopne
push
mov
pop
push
mov
pop
(bad)
add
loope
mov
mov
outs
aad
push
xchg
mov
jecxz
mov
push
mov
imul
sub
iret
jmp
rcl
hlt
sub
xchg
and
jg
cmps
or
sbb
call
xor
jp
call
add
jns
xor
sbb
lds
arpl
mov
hlt
xchg
jns
inc
pop
sbb
push
push
popa
call
jae
sbb
xchg
(bad)
ins
ret
adc
test
fstp
xor
mov
mov
xchg
sbb
test
adc
icebp
jo
and
push
repz
add
popa
inc
jge
and
dec
cmp
popa
inc
xchg
sbb
popa
(bad)
cwde
jae
popa
pop
ret
sahf
cmp
int
sahf
mov
cmp
fwait
pop
popf
clc
cmp
in
pop
movs
push
sahf
mov
mov
mov
add
or
es
xchg
mov
xor
push
stos
cmc
clc
data16
or
clc
lock
cmp
(bad)
jl
or
clc
and
add
xchg
scas
mov
push
loop
cmp
sub
sahf
mov
clc
je
adc
imul
clc
or
push
cwde
popa
inc
arpl
popa
xchg
sahf
cmp
jl
sahf
mov
test
out
in
cmp
fsubr
sahf
mov
cmp
pop
inc
mov
xchg
sahf
mov
clc
fs
popa
pop
inc
sub
sahf
mov
clc
mov
cmps
xor
jl
cs
(bad)
in
bound
xor
push
les
sahf
cmp
popf
js
leave
popa
mov
ror
or
movs
xor
aas
popa
(bad)
(bad)
jl
(bad)
sbb
jle
xchg
bound
mov
adc
bound
adc
sahf
mov
call
xchg
push
or
inc
mov
xchg
ins
je
js
sub
sti
imul
sahf
cmp
mov
sahf
js
jmp
push
test
jp
cmp
inc
sahf
clc
mov
call
add
js
xor
inc
push
mov
loope
data16
lods
fsubr
jne
dec
or
add
cmp
cmp
push
mov
mov
sbb
sub
(bad)
lock
mov
ret
dec
sbb
aad
dec
mov
clc
cli
repnz
mov
stos
call
push
ins
cmps
mov
in
jg
mov
clc
mov
jae
fdiv
pop
and
jo
mov
loope
mov
mov
out
pop
jne
shr
xchg
jbe
(bad)
jne
inc
in
cdq
mov
out
mov
cmp
jmp
movs
push
js
popf
mov
std
popa
(bad)
cwde
jae
popa
pop
jmp
cwde
sahf
mov
cmp
mov
pop
add
ins
push
loopne
mov
clc
and
popa
inc
xlat
repnz
mov
xchg
push
popa
(bad)
mov
xor
mov
jp
jmp
rol
adc
loop
loope
adc
push
js
pop
loope
sbb
sbb
loope
mov
adc
into
cmps
popa
pop
or
sahf
cmp
push
inc
add
mov
xchg
nop
fstp
in
sub
and
cmp
fsub
mov
pop
in
xlat
cmc
mov
inc
add
and
lea
push
ret
or
out
push
call
je
cmp
jmp
adc
pop
and
xor
xchg
popa
inc
mov
inc
leave
call
mov
pop
popa
inc
cmps
lahf
push
popa
pop
aas
lods
out
sahf
clc
packuswb
inc
jg
and
jp
sub
sub
in
sahf
clc
sub
or
(bad)
inc
popa
(bad)
push
leave
stos
stc
fstp
xchg
retf
jmp
fisub
jmp
adc
popa
inc
xchg
int
sahf
cmp
xor
popf
js
jmp
popa
inc
sti
(bad)
popa
inc
cmp
out
popa
pop
mov
dec
push
scas
popa
inc
sbb
push
bound
loopne
stos
sahf
mov
imul
bound
xchg
into
xchg
sahf
js
jecxz
popa
inc
arpl
popa
pop
fisttp
sahf
clc
call
(bad)
popa
(bad)
sahf
jne
popa
pop
lock
sahf
cmp
js
sahf
clc
lods
add
imul
popa
mov
popa
xchg
jb
mov
clc
or
pushfw
fs
mov
add
or
mov
cmc
cmp
pop
jno
js
pop
or
mov
or
pop
add
xchg
rcr
inc
push
or
mov
clc
add
cmp
mov
pop
adc
in
popf
js
or
cmp
popa
inc
aad
(bad)
popa
pop
jae
jmp
xchg
popa
inc
out
push
pop
test
sahf
mov
mov
mov
mov
mov
sahf
clc
pop
outs
jle
inc
addr16
cmp
lea
popa
pop
xor
xchg
sahf
cmp
xor
mov
cmp
jns
popf
clc
hlt
scas
(bad)
popa
xchg
pop
imul
sahf
mov
cmp
rcr
pop
movs
int3
clc
adc
cdq
js
ds
fbld
sub
cmp
sub
(bad)
es
gs
jmp
xchg
pop
add
cdq
js
jmp
push
popw
inc
in
call
cbw
gs
sti
mov
sub
call
fsubrp
jl
js
cmp
pop
fcomi
scas
call
cdq
push
gs
dec
scas
adc
aad
xchg
sahf
rcr
js
mov
mov
mov
xchg
sbb
mov
add
xchg
shl
xchg
imul
call
cmp
ins
cdq
js
adc
gs
in
push
gs
inc
imul
shl
jmp
mov
mov
js
dec
fwait
gs
push
ss
clc
imul
sbb
and
sahf
cmp
jb
popf
clc
jecxz
mov
pop
sahf
mov
clc
pushf
push
jmp
pop
mov
pusha
sahf
mov
cmp
dec
mov
lock
or
sahf
mov
pop
mov
jnp
(bad)
fwait
addr16
add
push
cmp
jle
cmp
xchg
je
pusha
hlt
mov
clc
je
mov
movs
push
mov
ja
push
ds
pusha
mov
push
inc
(bad)
out
or
icebp
mov
clc
pop
test
cmp
mov
cmp
jge
js
aaa
(bad)
inc
xor
cmc
jmp
lea
jmp
and
sahf
clc
cmp
jp
sahf
js
inc
jne
inc
shr
jl
pop
addr16
lds
popa
inc
adc
icebp
add
jo
mov
outs
sahf
mov
mov
cmps
scas
popf
js
arpl
adc
popa
inc
dec
pop
adc
and
xchg
and
fadd
stos
sub
mov
clc
ret
loope
scas
addr16
cmp
mov
es
pop
rol
loope
into
add
xchg
xor
loope
sbb
loop
dec
loopne
push
mov
mov
(bad)
jmp
sbb
cmp
push
clc
inc
cs
inc
adc
inc
fcom
(bad)
int
hlt
loope
sbb
loopne
xchg
dec
ins
push
cmp
mov
inc
loope
push
mov
loope
push
sub
loope
fwait
mov
hlt
ins
push
mov
mov
cmp
fisttp
mov
neg
xor
and
mov
outs
dec
inc
cs
cmp
pop
pop
and
int3
dec
jae
mov
cmc
clc
test
add
jmp
jne
cmp
jmp
pushf
adc
in
popa
(bad)
(bad)
and
(bad)
cmp
add
inc
mov
pop
popa
inc
(bad)
call
pop
addr16
jmp
bound
das
cmps
es
(bad)
sub
stc
dec
loope
clc
pop
mov
popa
(bad)
popf
and
and
xchg
push
cmp
dec
jge
cmp
push
clc
xchg
clc
loope
scas
sbb
loope
push
test
pop
(bad)
inc
js
or
pop
adc
imul
sti
push
mov
clc
jp
add
pop
enter
js
push
inc
loope
pop
jg
loop
cdq
xor
push
mov
mov
js
nop
shl
mov
ja
add
jmp
or
push
test
dec
mov
jmp
push
call
(bad)
enter
pop
shl
test
sahf
js
movs
ja
inc
add
mov
sub
inc
or
enter
pop
call
ins
sahf
mov
clc
inc
dec
add
jae
bound
(bad)
xlat
sahf
cmp
movs
fsub
out
rcl
cmp
clc
pushf
sahf
enter
add
popa
xchg
dec
and
sahf
js
out
inc
and
cs
bound
clc
pop
cli
inc
popa
inc
scas
sti
(bad)
or
or
xor
jne
and
cmps
mov
(bad)
into
pushf
cmp
jmp
mov
js
out
inc
push
sub
clc
ins
into
mov
mov
popa
jne
sbb
js
lods
mov
push
jne
fidiv
pop
pop
jmp
mov
js
push
sbb
jne
pop
mov
dec
jbe
mov
adc
dec
sub
mov
mov
mov
cmp
(bad)
jne
cmp
cmc
jg
push
jecxz
pop
pop
cmp
dec
jne
mov
out
mov
pop
mov
jne
in
mov
clc
push
xchg
lock
mov
push
mov
mov
arpl
jne
in
lods
jne
mov
inc
or
mov
fucomp
lods
mov
xor
pop
mov
cmp
dec
jne
mov
mov
cdq
jbe
inc
sub
call
cmp
add
stos
mov
mov
dec
adc
mov
cmps
push
jne
xor
mov
lahf
sub
jne
cmp
mov
clc
sar
fdivrp
mov
mov
clc
ja
mov
push
js
pop
ret
jne
inc
aaa
xlat
jne
and
sbb
and
sub
adc
mov
jae
push
jbe
mov
ret
mov
sbb
adc
jne
inc
inc
outs
jne
inc
ins
in
mov
jmp
inc
in
add
(bad)
sub
outs
xchg
popa
inc
(bad)
jmp
pop
push
(bad)
clc
push
cmp
inc
pop
lahf
sbb
sbb
adc
jl
sbb
mov
jo
shl
xchg
mov
call
xchg
imul
sub
push
cmp
lods
fs
js
mov
pop
jbe
xchg
js
leave
push
icebp
xchg
push
rol
push
(bad)
jl
mov
js
inc
clc
push
cmp
in
in
push
leave
std
lahf
imul
cmp
xchg
push
mov
imul
xchg
jge
cmp
loope
xchg
cmp
xchg
js
scas
(bad)
and
into
xor
mov
cmp
xor
cmp
push
jge
push
push
daa
push
xchg
cmp
add
push
pop
jg
imul
mov
mov
js
mov
inc
add
xchg
test
xchg
mov
clc
call
and
xchg
cmp
test
test
dec
iret
add
mov
mov
adc
shl
cwde
mov
mov
mov
bsf
mov
rcl
mov
dec
bsr
or
mov
cmc
movzx
cmp
cmp
jmp
push
ret
add
xor
sbb
push
call
(bad)
cmc
sahf
js
data16
test
cld
bound
cmps
cld
stos
sahf
js
in
popa
inc
dec
jno
popa
pop
std
outs
cli
sahf
clc
fnsave
add
jg
popa
pop
(bad)
jp
sahf
cmp
movs
ins
sahf
clc
pop
push
adc
and
popa
(bad)
mov
adc
aaa
xchg
popa
(bad)
cmps
xor
cmp
popa
xchg
sub
push
ret
push
add
push
mov
mov
loopne
popf
js
pop
push
popa
(bad)
pop
jbe
(bad)
iret
adc
push
and
popa
inc
sub
or
sahf
js
(bad)
xchg
sub
sahf
js
mov
(bad)
fwait
popa
xchg
bound
mov
mov
clc
(bad)
jecxz
bound
mov
clc
mov
push
fwait
or
into
or
popa
pop
push
(bad)
retf
jo
inc
popa
inc
or
add
punpcklwd
jg
lods
sahf
cmp
pusha
sahf
mov
cmp
mov
stc
popa
xchg
dec
imul
clc
or
sahf
mov
call
popa
pop
ds
js
(bad)
adc
mov
cwde
popa
inc
inc
pop
aam
mov
mov
and
call
hlt
and
popf
js
pushf
xor
fldenv
dec
(bad)
jmp
(bad)
popf
js
gs
inc
addr16
push
bound
sub
sahf
mov
mov
mov
push
xchg
mov
mov
pop
ins
jmp
inc
fistp
sahf
cmp
mov
inc
popa
xchg
loop
sahf
mov
clc
out
jl
popa
pop
(bad)
jge
sahf
mov
lahf
inc
sahf
js
movs
sar
outs
pop
loope
loope
scas
push
cmp
(bad)
pop
mov
push
cmp
sub
loope
xchg
(bad)
cld
loope
iret
add
xchg
ret
xchg
push
js
cmp
loope
xchg
xor
xchg
mov
cdq
in
mov
dec
xchg
pop
ds
(bad)
xchg
fidivr
or
rcl
and
push
or
daa
jns
lock
clc
lahf
xor
cmova
xchg
cmova
out
outs
ja
cmp
mov
bsf
cmp
mov
test
jmp
xchg
sahf
clc
test
sti
bound
xchg
lods
sahf
js
call
pusha
inc
popa
pop
cld
outs
std
sahf
clc
loopne
jbe
inc
mov
xor
popf
jbe
popa
pop
iret
dec
call
mov
js
loop
clc
sbb
inc
popa
inc
xor
inc
sahf
cmp
xchg
popf
clc
push
sub
inc
and
adc
pop
ins
popa
(bad)
loope
dec
popa
xchg
sahf
js
dec
enter
ficomp
sahf
clc
sbb
popa
mov
call
dec
movs
popa
inc
push
mov
adc
sahf
mov
js
xchg
daa
popa
mov
mov
xor
jno
xchg
or
out
leave
popa
pop
push
shr
cmp
cmps
sahf
mov
cmp
aam
popa
xchg
icebp
ficomp
sahf
clc
cmc
in
push
popa
inc
adc
cmc
leave
aam
mov
inc
and
popa
xchg
jecxz
sahf
clc
lahf
sbb
arpl
popa
inc
in
adc
fwait
or
pop
js
bound
mov
push
popa
cmp
popa
mov
clc
mov
repnz
inc
sub
popa
mov
js
(bad)
mov
mov
imul
mov
xchg
or
dec
jnp
popa
js
pop
popf
xchg
adc
(bad)
xchg
cmps
popf
pop
lock
ret
inc
push
cli
popa
cmp
out
popa
js
into
cmp
clc
cmp
jns
popf
xchg
xor
bound
xchg
and
add
mov
js
and
sahf
(bad)
and
popf
xchg
pop
shl
popf
xor
shl
push
fstp
popa
clc
dec
imul
popa
cmp
or
sbb
bound
cmps
sahf
inc
mov
rcl
fistp
inc
mov
sahf
pop
and
lods
sahf
(bad)
jno
cwde
sahf
inc
leave
pop
jb
xchg
cdq
popa
cmp
sub
jmp
popa
mov
clc
xor
jmp
enter
daa
mov
jns
(bad)
outs
pusha
sahf
xchg
mov
sahf
(bad)
cmp
fimul
(bad)
and
adc
xchg
pop
rcr
popa
inc
fdivrp
fisub
push
fucomip
popa
pop
mov
aad
js
daa
stos
popa
inc
cmp
aad
sbb
mov
mov
mov
fstp
sahf
cmp
out
pop
sahf
mov
cmp
mov
popf
clc
sbb
dec
jbe
sahf
mov
clc
pop
enter
push
cmp
xor
sahf
cmp
push
push
xlat
adc
and
push
and
popa
pop
movs
(bad)
sahf
cmp
sti
xlat
sahf
mov
mov
xchg
popa
inc
sub
inc
pop
xchg
push
xchg
ins
sahf
mov
clc
bound
scas
popa
(bad)
pop
inc
cmp
cmps
mov
sahf
mov
mov
(bad)
sahf
js
sbb
inc
mov
jns
jl
pop
jmp
test
js
sbb
popa
xchg
rcr
popf
clc
add
(bad)
rcr
ss
inc
fcomi
bound
cmp
(bad)
ins
and
neg
popa
(bad)
fbld
add
test
popa
inc
neg
repz
cmp
popa
inc
lea
popa
(bad)
imul
(bad)
sub
xchg
fwait
mov
mov
xchg
push
push
inc
popa
xchg
stos
adc
pop
popf
cmp
dec
xor
mov
clc
add
jb
xchg
loop
sahf
mov
mov
sub
inc
stc
cmp
pop
push
cs
sahf
mov
xchg
push
mov
adc
jb
cmp
pop
sahf
popf
js
loop
(bad)
icebp
sub
popa
(bad)
mov
jmp
inc
inc
popa
inc
adc
bound
js
jnp
popa
inc
xor
jno
pop
adc
mov
sahf
clc
mov
daa
jo
pop
mov
xchg
sahf
mov
pop
bound
clc
addr16
(bad)
and
sbb
adc
pop
cmp
mov
and
jp
inc
jae
add
clc
aaa
outs
pop
sbb
mov
jae
jo
sahf
dec
pop
jae
push
or
pop
loope
xchg
jecxz
jo
pop
arpl
inc
pop
pushfw
mov
xchg
add
cmp
and
mov
pop
sbb
add
jae
mov
fisttp
mov
sbb
push
mov
mov
js
or
(bad)
xchg
mov
mov
mov
outs
in
add
gs
add
clc
adc
jp
pop
push
rcr
sahf
cmp
adc
setle
mov
fistp
popa
xchg
cli
ins
sahf
mov
clc
out
frstor
out
push
sahf
mov
mov
pop
xchg
push
mov
mov
js
adc
jmp
mov
clc
fst
dec
adc
push
mov
mov
xchg
or
cmp
push
clc
lods
xor
loop
(bad)
push
push
mov
cmp
call
push
shr
call
cmp
adc
jbe
(bad)
fwait
xor
inc
push
adc
call
and
xchg
add
inc
je
or
lock
ins
mov
call
jae
mov
pop
mov
mov
cdq
js
sub
scas
sub
xlat
rcl
gs
sbb
test
cdq
js
mov
mov
mov
gs
in
leave
xchg
cdq
js
inc
out
gs
jns
adc
mov
cld
call
inc
xor
push
add
(bad)
adc
sub
outs
push
sub
dec
pop
movzx
jmp
mov
mov
mov
cmovle
mov
mov
mov
mov
not
push
bswap
lea
jmp
test
or
mov
inc
sbb
mov
cmc
test
clc
shr
imul
jmp
fiadd
popf
clc
mov
(bad)
jnp
sahf
cmp
rcl
mov
cmp
pop
inc
mov
push
shr
bound
popa
pop
pop
xor
mov
mov
fsubr
idiv
jmp
or
inc
jmp
inc
out
adc
pop
aaa
sub
js
lods
jmp
or
lea
jmp
cmc
mov
mov
clc
sahf
pop
and
xchg
out
fsub
mov
add
ins
aam
jge
lods
cmps
or
stos
ss
idiv
cwde
add
sub
pop
jle
push
stos
add
mov
(bad)
aas
jle
dec
and
add
mov
inc
add
js
js
inc
movs
dec
pop
add
mov
mov
clc
jecxz
push
add
xchg
xchg
scas
add
jge
ror
add
sbb
aam
pop
xchg
mov
jge
push
jle
add
in
out
adc
fdivr
or
aas
mov
bound
or
sahf
js
dec
push
inc
retf
popa
pop
inc
aam
sahf
clc
jp
push
popa
inc
cmps
adc
pop
popa
pop
inc
leave
jecxz
mov
clc
mov
or
popa
(bad)
sub
add
xchg
pop
icebp
sahf
mov
clc
cmps
loop
(bad)
cmps
movs
jbe
pop
xor
mov
js
xor
popa
(bad)
or
mov
bound
pop
pop
sub
popa
pop
or
sahf
mov
clc
sub
ds
inc
push
lods
jmp
aam
popa
xchg
mov
popa
(bad)
(bad)
and
and
mov
push
in
popa
(bad)
iret
nop
popa
(bad)
adc
mov
pop
pop
sahf
js
(bad)
popa
(bad)
out
enter
in
popf
sahf
clc
pop
pop
ss
(bad)
js
fsub
fisub
adc
fidiv
push
xchg
push
push
enter
arpl
popf
js
lods
sub
or
popa
(bad)
ins
hlt
xor
xor
or
clc
fadd
popa
inc
push
scas
popa
(bad)
ja
bound
xor
mov
test
cld
mov
push
cmp
jl
out
je
add
mov
je
and
call
xlat
mov
cmp
cmp
cmp
std
je
push
hlt
into
je
add
cmp
adc
mov
sub
mov
cmp
mov
cli
js
(bad)
fidivr
add
lods
dec
ja
or
lock
mov
mov
mov
mov
push
push
mov
jmp
jns
push
je
loope
out
inc
in
iret
in
mov
imul
ja
packuswb
sahf
mov
jo
mov
mov
clc
sbb
repnz
js
mov
cmp
dec
ja
adc
test
inc
adc
inc
mov
sbb
popa
mov
add
jg
pop
add
cmp
sahf
mov
cmp
ficomp
popa
xchg
cmp
popa
sahf
clc
xchg
popa
pop
xchg
push
sahf
mov
cmp
mov
jecxz
fwait
sbb
push
stos
shl
mov
xor
stos
cld
data16
sbb
inc
xor
loope
pop
out
pop
call
cmp
push
push
js
and
loope
xor
loope
push
mov
loope
push
adc
push
mov
ret
loope
cmp
iret
lahf
sbb
loope
es
inc
xchg
loope
dec
arpl
sbb
sbb
pop
push
js
retf
mov
inc
(bad)
xor
je
pop
add
push
mov
push
arpl
(bad)
arpl
loope
xchg
push
loop
sub
push
mov
cmp
out
in
int
sahf
cmp
pop
arpl
bound
jp
add
sahf
clc
fdiv
popa
pop
das
cmc
dec
sahf
mov
js
bound
dec
int
mov
clc
scas
jno
(bad)
retf
xchg
push
bound
xchg
mov
js
push
inc
fcom
bound
fiadd
and
ror
sahf
mov
clc
mov
popa
inc
imul
xor
sahf
clc
mov
out
bound
mov
clc
out
inc
es
inc
or
bound
mov
xchg
adc
popf
js
icebp
cmp
icebp
rcl
popa
inc
cmp
sbb
push
mov
sub
outs
xor
xor
(bad)
dec
movzx
jmp
sub
js
cmp
mov
iret
fisub
dec
retf
cmp
mov
mov
cmp
xchg
int3
sub
in
ror
sahf
mov
clc
std
mov
(bad)
(bad)
mov
data16
pop
stos
adc
xchg
pop
pop
bound
movs
pop
push
mov
jne
mov
ss
bound
and
sahf
cmp
dec
xor
cmp
sub
sahf
clc
lods
dec
shl
and
pop
stos
mov
sahf
cmp
xor
test
das
mov
shr
movs
cmps
popa
inc
pop
mov
dec
dec
mov
pop
jp
sahf
clc
test
popa
inc
dec
add
popa
xchg
adc
popf
js
lea
popa
mov
jge
popa
(bad)
mov
cmp
pop
popf
js
stc
jmp
popa
inc
outs
jp
bound
jle
sahf
mov
js
xchg
jmp
test
dec
popf
js
xor
popa
(bad)
(bad)
bound
mov
hlt
in
mov
popa
pop
cmp
pop
fcomip
popa
(bad)
pop
pop
add
call
cmp
push
inc
sahf
cmp
in
popf
clc
mov
pop
bound
pop
lock
push
sahf
mov
js
dec
and
jg
in
bound
mov
mov
clc
push
xor
bound
mov
cmp
fidiv
or
adc
sub
jb
xor
add
sub
pop
dec
or
jmp
ja
sub
clc
cmp
stc
cmp
jmp
push
imul
(bad)
stos
add
lds
xchg
push
mov
jmp
sbb
dec
push
xchg
mov
sahf
clc
dec
fnstcw
popa
pop
inc
das
mov
mov
cmp
aad
sahf
clc
dec
int3
pop
popa
(bad)
jno
xchg
popa
inc
ins
dec
mov
mov
imul
repz
aas
ret
ss
or
jp
inc
cmp
or
(bad)
cmc
cmp
ret
pop
cmc
pop
or
cmp
cmc
mov
int
popa
(bad)
sbb
es
xor
popf
js
push
jle
popa
inc
mov
adc
stc
popf
js
mov
test
pop
inc
movs
sbb
xchg
add
popa
pop
xchg
cli
sub
sahf
cmp
adc
sahf
clc
xchg
adc
or
inc
and
lds
dec
pop
xchg
sahf
js
or
inc
scas
sub
inc
push
cld
pop
xor
jmp
mov
out
fisubr
sahf
cmp
stos
(bad)
and
js
jmp
popa
inc
mov
xchg
bound
xor
pop
sahf
js
fisub
push
mov
sahf
cmp
lods
popa
inc
sbb
fstp
sahf
js
ss
(bad)
aaa
pop
pop
popa
(bad)
retf
xchg
bound
mov
(bad)
dec
bound
dec
cmps
sahf
cmp
jl
popa
inc
dec
xchg
sahf
cmp
ss
mov
test
popa
inc
jo
adc
sahf
clc
mov
std
add
rcr
sbb
pop
inc
bound
jle
bound
lods
jbe
sahf
clc
sub
popa
inc
loopne
mov
push
ins
bound
sbb
loopne
cmp
and
sahf
cmp
fld1
inc
popa
(bad)
push
sub
fstp
mov
mov
js
push
shl
mov
sahf
mov
js
cmp
bound
mov
mov
clc
clc
fnsave
xchg
jg
sahf
mov
cmp
test
jl
add
and
or
ins
jmp
mov
pop
jmp
jae
mov
rol
bswap
inc
movzx
shl
jmp
push
lock
std
std
mov
gs
pop
ret
jns
repz
jg
and
push
pushf
mov
pop
out
ss
xor
jl
jge
stc
in
test
dec
or
rcl
push
push
into
add
jecxz
and
test
fmul
xchg
inc
and
je
xchg
xchg
push
push
mov
lahf
rol
repnz
fisttp
clc
cmc
cmp
mov
mov
shr
test
imul
test
cmp
jmp
jb
lea
movsx
movzx
push
cwde
mov
jmp
inc
jmp
sbb
add
not
sub
and
or
sahf
clc
adc
imul
cld
push
popa
pop
jl
out
sahf
clc
push
and
and
xor
sub
inc
(bad)
mov
sahf
mov
js
inc
jbe
inc
and
push
push
dec
cli
popa
pop
adc
test
popa
(bad)
mov
mov
pop
or
es
push
popa
(bad)
jmp
jne
(bad)
fdivr
js
inc
and
xchg
popf
js
mov
test
mov
mov
dec
in
sahf
js
mov
jmp
popa
xchg
out
popf
js
cmps
popa
(bad)
je
iret
adc
push
in
cmp
fnstcw
or
add
xchg
xor
add
adc
mov
das
imul
mov
add
xchg
jle
int3
fidivr
cmp
xchg
retf
xchg
pop
add
leave
jecxz
xchg
and
pop
hlt
add
ret
push
dec
jle
mov
inc
jle
jae
add
cmp
xlat
jle
aaa
fldenv
add
test
(bad)
add
pop
pop
jge
loop
sbb
add
sbb
mov
mov
cmp
mov
in
push
fadd
jle
(bad)
fst
jle
pop
fsubp
jle
and
ss
jge
clc
push
adc
push
add
push
(bad)
adc
sub
jl
aas
shr
jo
repnz
cmp
mov
test
cmp
mov
sar
mov
movzx
cmp
test
cmc
cmp
jmp
ja
popf
js
jmp
popa
pop
dec
and
mov
sahf
cmp
outs
sahf
clc
(bad)
out
popa
mov
dec
sbb
movs
das
into
bound
sbb
sahf
js
fnstsw
inc
popa
pop
xor
push
sub
add
jg
cmc
cmp
jmp
js
and
std
cmc
clc
popf
xchg
inc
or
push
test
(bad)
push
daa
or
cmp
cmc
cmp
repz
mov
clc
jnp
ror
aam
cmc
js
xchg
or
je
or
cmp
xlat
adc
js
sbb
or
xor
(bad)
aaa
lock
xchg
cmc
mov
clc
dec
outs
mov
lods
cmc
mov
fcomp
mov
shr
or
mov
cmp
(bad)
push
lea
xchg
sbb
js
stc
ret
dec
xchg
dec
cmc
mov
cmp
cmc
clc
add
sbb
cmp
fisttp
or
mov
jae
cmc
mov
mov
js
add
push
push
mov
inc
cmp
idiv
mov
or
movs
or
inc
in
je
mov
mov
js
pop
or
xchg
add
(bad)
(bad)
jp
(bad)
ins
xchg
lods
or
cmp
in
or
jbe
or
lds
or
jne
pop
lahf
popa
adc
clc
into
mov
sar
jg
js
into
or
pop
aas
add
pop
(bad)
(bad)
cmc
mov
mov
js
pusha
sbb
outs
cmp
sahf
mov
clc
cmp
mov
xchg
icebp
popa
inc
mov
popa
inc
or
dec
lds
sahf
mov
inc
enter
dec
adc
push
popa
inc
stos
xchg
pop
popa
pop
push
mov
sahf
clc
ds
imul
mov
mov
ds
sahf
mov
mov
dec
push
adc
sub
cmp
lods
dec
outs
xchg
bound
mov
xchg
mov
js
mov
ins
pop
(bad)
rol
xchg
js
ds
pop
lea
and
(bad)
shr
xor
(bad)
pop
ins
inc
and
ins
cmp
xchg
mov
vmovdqu
jae
adc
clc
mov
fidiv
dec
xchg
clc
add
mov
add
nop
js
mov
jmp
xchg
cmp
fcomp
sbb
dec
cs
inc
sub
shr
pop
pop
xchg
cmp
xchg
nop
js
inc
je
inc
inc
addr16
ins
inc
mov
pop
and
jmp
adc
pop
dec
in
xchg
mov
cmp
cmp
mov
cbw
mov
adc
pop
bts
rcl
setl
pop
inc
rcl
movsx
mov
xor
movsx
mov
mov
pop
jmp
mov
dec
setne
not
inc
lea
movzx
cmp
jmp
mov
add
movzx
cmc
cmp
jmp
sbb
add
dec
into
adc
popa
xchg
jmp
sahf
clc
ret
popa
pop
out
mov
cld
sahf
cmp
fstp
popa
(bad)
(bad)
cdq
popa
inc
call
sbb
and
sti
xchg
or
fisub
call
jmp
(bad)
ins
inc
bound
mov
sub
and
adc
or
popf
js
cmps
and
and
(bad)
popa
pop
in
rcr
inc
ins
dec
inc
bound
nop
cmp
sahf
mov
mov
popf
mov
or
add
sahf
clc
xchg
std
cwde
popa
inc
icebp
jns
popa
(bad)
in
pop
(bad)
popa
pop
call
mov
mov
ja
clc
add
inc
loop
pop
or
in
das
mov
aas
out
dec
(bad)
xchg
cmp
mov
xchg
cmp
xchg
clc
jae
cmps
clc
add
(bad)
ins
(bad)
out
cmp
test
xchg
cmp
js
xchg
mov
fmul
ins
xchg
sub
xchg
clc
adc
ins
xchg
xchg
cmp
jg
js
sbb
ins
xchg
xchg
js
sti
mov
ins
mov
xchg
clc
jmp
sub
retf
ins
inc
out
shr
fiadd
xchg
mov
push
dec
stos
ins
(bad)
xor
addr16
push
inc
xchg
js
or
fs
mov
js
xchg
ins
mov
mov
inc
xchg
js
fsubr
aad
sub
push
outs
xchg
clc
sbb
ins
xchg
push
xchg
clc
clc
stos
ins
pop
ret
fisubr
sub
xchg
js
and
ins
(bad)
adc
bound
mov
fistp
outs
xchg
call
shl
(bad)
lea
pop
cli
xchg
mov
jl
xchg
ins
(bad)
push
sub
pop
pop
xchg
bound
xchg
clc
clc
les
xchg
sbb
out
push
adc
outs
xchg
xchg
cmp
jge
xchg
clc
adc
ins
(bad)
sbb
mov
pop
push
dec
xchg
mov
js
popa
fisubr
aad
shr
popf
jl
cmp
(bad)
ins
pop
mov
xor
ins
pop
dec
inc
jo
mov
mov
clc
sbb
loopne
in
xchg
mov
clc
dec
out
ins
inc
xchg
pop
push
ins
inc
push
adc
ins
xchg
dec
outs
xchg
cmp
mov
mov
popf
js
push
popa
(bad)
fbstp
popa
pop
lea
or
cmp
lods
fistp
popf
clc
jne
pop
popa
xchg
sbb
mov
clc
push
test
popa
pop
push
push
mov
jmp
fst
xchg
adc
jl
(bad)
repnz
mov
push
mov
mov
js
mov
push
push
mov
cmp
addr16
fst
js
fbld
in
pop
int3
inc
inc
adc
clc
or
adc
push
in
xchg
fst
cmp
jmp
in
inc
cmp
imul
pop
sub
add
mov
fimul
aad
out
mov
xor
btc
sbb
mov
clc
rcr
mov
mov
add
jmp
push
call
pop
hlt
sahf
js
jns
popa
inc
jae
sbb
cwde
adc
bound
mov
cdq
sahf
js
cmc
js
inc
gs
jno
pop
std
outs
enter
test
or
popa
(bad)
mov
or
sbb
mov
or
push
(bad)
popa
pop
add
sahf
cmp
xor
sahf
clc
add
pop
dec
sahf
cmp
(bad)
loope
cmc
cmp
adc
mov
cmp
clc
add
fwait
(bad)
jg
inc
in
inc
pop
and
int
add
inc
fwait
jl
pusha
mov
cmp
adc
lock
jo
jl
cld
sbb
add
clc
icebp
cmp
push
mov
add
add
jmp
pop
ss
lods
jl
lock
inc
xchg
rcl
jl
mov
mov
jg
jl
jge
test
jg
jg
retf
mov
pop
pop
mov
js
out
add
leave
sar
sub
sbb
and
jl
push
cmp
jg
cli
push
jmp
inc
add
scas
add
push
add
inc
jg
sar
jae
lods
hlt
ins
cmp
and
sbb
dec
lea
test
test
mov
movzx
stc
cmp
jmp
cmp
cmp
jae
cmp
jmp
push
(bad)
adc
and
jo
xor
push
je
cmp
jmp
adc
xor
idiv
cmp
sub
add
mov
test
cmp
jmp
jbe
mov
test
cmp
cmp
jmp
pop
rcl
lods
hlt
ins
daa
(bad)
jmp
adc
and
push
pop
aas
leave
dec
push
setnp
mov
jmp
jne
cmp
jmp
push
(bad)
adc
sub
jl
aas
shr
or
div
fwait
(bad)
div
pop
jae
mov
cmovb
mov
clc
test
sub
shr
add
cwd
jmp
jne
cmp
jne
cmp
jmp
ret
jne
ins
ins
outs
outs
cs
ins
add
(bad)
adc
and
js
xor
sub
ins
add
repnz
sub
xchg
mov
bts
mov
test
cmc
jmp
adc
push
mov
dec
mov
cmp
cmc
test
test
jmp
jmp
push
inc
push
push
dec
dec
dec
cs
ins
add
out
pushf
js
cld
xchg
pusha
pop
imul
clc
ins
add
pusha
inc
or
jecxz
(bad)
xor
pop
fisttp
cmp
xchg
lahf
cmp
fwait
rcr
xchg
repnz
lahf
cmp
cmps
in
lahf
mov
inc
sub
stc
call
(bad)
fstp
jnp
push
cmp
pusha
pop
rcr
lahf
js
xchg
jmp
arpl
test
cmp
lahf
clc
mov
cmps
pusha
xchg
or
lahf
mov
clc
pop
mov
or
inc
(bad)
and
xchg
in
clc
cmp
and
and
fcom
pusha
pop
sbb
add
pusha
pop
cmp
adc
(bad)
cli
lea
xchg
lahf
js
ins
pusha
inc
push
inc
and
dec
lahf
mov
js
ja
inc
nop
sbb
pop
xchg
sbb
and
bnd
xchg
xor
lahf
cmp
add
lahf
clc
mov
js
jb
pop
mov
cmp
lahf
mov
js
mov
push
shl
mov
mov
lahf
mov
clc
shl
arpl
mov
cmp
fisttp
mov
neg
xor
and
mov
outs
dec
inc
cs
cmp
pop
pop
and
int3
dec
or
add
das
out
push
or
jb
xor
pop
setge
not
pop
xchg
pop
jmp
jmp
pushf
js
sti
bound
sti
jae
pusha
(bad)
repnz
pop
lods
sub
inc
lahf
mov
cmp
lea
xchg
(bad)
lahf
mov
clc
aaa
xor
pusha
inc
mov
mov
sbb
cmp
sbb
clc
inc
sub
in
sbb
(bad)
in
dec
mov
sbb
dec
cli
jno
je
ret
jno
jl
mov
xchg
pop
or
out
jno
mov
ret
jb
jmp
outs
retf
mov
jno
sbb
push
or
(bad)
xchg
cmp
and
jb
pop
iret
mov
mov
jb
(bad)
call
push
inc
jno
popa
arpl
mov
jbe
xchg
ja
jno
stos
iret
mov
sbb
mov
fsubr
lea
add
add
jno
dec
dec
fidiv
pop
das
push
mov
push
in
call
mov
mov
clc
pop
popf
push
mov
loopne
cmc
or
bswap
inc
adc
stc
mov
shr
cmc
cmp
imul
cmp
jmp
push
call
je
mov
test
jne
mov
add
mov
shr
clc
btr
movzx
mov
mov
and
cmc
mov
sub
shr
clc
mov
test
cmp
shl
cmc
lea
or
sub
mov
cmp
test
imul
test
stc
add
add
mov
clc
jmp
push
call
sbb
adc
cmp
jle
aaa
jmp
call
xchg
or
adc
and
jae
fimul
rcl
shl
ror
jmp
jne
lea
jmp
mov
jmp
push
setno
movsx
mov
mov
movzx
mov
jmp
adc
xor
idiv
cmp
sub
lods
sbb
adc
sub
je
ds
out
inc
repnz
call
xchg
rcr
inc
or
push
pusha
pop
xchg
add
lahf
clc
cdq
icebp
bound
fst
pusha
(bad)
in
pop
sub
pop
mov
mov
fwait
mov
iret
lea
pop
and
lahf
mov
jl
arpl
test
into
lahf
cmp
lahf
js
mov
cli
adc
mov
jle
pushf
clc
mov
jbe
or
div
mul
shl
pop
mov
js
mov
pusha
inc
xchg
mov
pusha
inc
inc
or
lahf
cmp
retf
jmp
stc
xchg
fistp
lahf
cmp
jp
pusha
(bad)
out
(bad)
pusha
inc
out
in
(bad)
or
push
addr16
js
jno
pusha
inc
rol
adc
pop
(bad)
aam
lahf
mov
push
xor
pop
inc
push
js
lods
xchg
pusha
(bad)
push
push
adc
pop
pop
add
clc
push
ret
pop
push
lahf
clc
xchg
lahf
clc
push
in
pusha
(bad)
popf
or
lahf
clc
sti
cmp
or
fwait
pop
pusha
pop
push
or
pushf
clc
mov
shl
cld
(bad)
pushf
clc
test
les
mov
loope
xchg
inc
lahf
mov
clc
retf
adc
nop
arpl
cli
xlat
pusha
(bad)
aas
test
(bad)
cmp
pop
pusha
pop
bound
js
(bad)
cmp
movs
int3
arpl
pop
scas
fwait
lahf
cmp
cmps
lahf
clc
ss
movs
lahf
mov
mov
addr16
pop
push
inc
mov
cmp
mov
pop
jbe
js
xchg
add
add
js
sbb
add
outs
push
jle
push
into
hlt
add
push
mov
iret
and
ins
jle
aad
cmp
xor
jg
inc
jmp
cld
add
js
inc
mov
add
out
dec
jle
scas
inc
mov
ret
(bad)
pop
jnp
add
pop
adc
lahf
jle
fmul
add
cmp
sbb
xor
push
add
xchg
jmp
add
push
sti
jle
cmp
pop
mov
add
bound
jle
mov
jge
clc
cmp
inc
add
lods
pop
jge
jne
mov
add
in
add
add
not
mov
push
movsx
cmp
push
movzx
or
mov
stc
lea
movsx
sub
bswap
ror
sub
movsx
jmp
mov
shl
mov
mov
and
and
sar
mov
jmp
mov
jmp
je
mov
jmp
ret
add
push
ins
gs
clc
mov
rol
mov
test
mov
lea
jmp
add
inc
gs
gs
imul
or
pushf
clc
dec
iret
cmp
push
push
mul
outs
dec
in
pusha
(bad)
xchg
sbb
arpl
mov
cld
ror
pusha
pop
int3
pop
ds
clc
call
mov
icebp
pusha
(bad)
test
cmp
lods
pusha
xchg
adc
cmp
arpl
lahf
clc
movs
popf
lds
hlt
fsub
call
dec
pusha
xchg
data16
lahf
cmp
xor
inc
ins
dec
cmp
mov
sub
xor
js
mov
inc
mov
mov
pop
addr16
std
lahf
mov
mov
xchg
xchg
mul
mov
dec
ret
pop
dec
adc
sub
pusha
inc
mov
xchg
adc
dec
mov
inc
jo
icebp
pusha
(bad)
dec
mov
bound
lahf
mov
mov
push
clc
mov
jge
inc
sar
inc
mov
fild
call
sbb
sbb
inc
jl
push
fadd
stc
imul
xchg
js
and
mov
mov
imul
in
xchg
cmp
sar
xchg
cmp
dec
xor
bound
imul
sysret
jmp
inc
xor
jecxz
xchg
and
xchg
js
stos
imul
(bad)
mov
push
pop
or
js
not
imul
cmps
and
pop
fnstenv
xor
js
xlat
imul
dec
sbb
imul
mov
mov
mov
fld
imul
shl
out
sub
test
test
add
in
imul
movs
imul
sar
imul
mov
test
push
mov
fcom
mov
pop
retf
imul
out
xchg
cmp
mov
sub
jae
sbb
inc
pop
sti
xchg
cmp
xchg
cmp
sub
xchg
mov
js
ins
imul
mov
adc
xchg
mov
clc
(bad)
repz
xor
xchg
mov
clc
scas
add
imul
icebp
test
(bad)
and
sub
ss
cmc
jne
sub
add
ins
fs
pop
inc
push
ror
std
outs
cmp
aas
std
jno
or
mov
pop
jmp
sbb
mov
adc
inc
lahf
js
shl
stos
pusha
pop
fisttp
lahf
clc
call
and
pusha
(bad)
mov
pusha
pop
fcomp
cmp
iret
mov
xor
xlat
pusha
inc
and
jb
(bad)
cld
cli
lahf
js
xor
sub
arpl
pusha
adc
lahf
cmp
and
lahf
clc
dec
loop
pusha
pop
add
mov
lahf
pusha
inc
adc
xor
push
lahf
js
cmps
pusha
inc
addr16
mov
test
imul
mov
mov
in
xchg
pusha
inc
sub
pusha
inc
inc
sub
pusha
pop
add
lahf
cmp
fs
cmp
fld
adc
lahf
js
inc
lods
pusha
inc
or
pusha
inc
and
push
call
mul
sub
pusha
xchg
xchg
pop
pusha
(bad)
dec
in
inc
pop
lds
arpl
sbb
pushf
clc
sub
arpl
pop
push
lods
lahf
js
int3
dec
pusha
inc
fs
pusha
inc
clc
adc
(bad)
lods
jmp
jmp
add
mov
(bad)
pusha
inc
jle
arpl
xchg
mov
mov
cmp
pop
pusha
inc
mov
arpl
cmp
xor
push
pusha
inc
inc
jg
arpl
mov
lahf
mov
cmp
arpl
lahf
clc
sub
shr
pusha
inc
mov
stos
add
(bad)
jmp
mov
mov
js
adc
mov
push
lahf
mov
clc
in
enter
add
lahf
mov
cmp
shr
shl
test
sub
sub
mov
cmp
movzx
test
cmp
jmp
mov
pop
jmp
push
(bad)
adc
and
jo
xor
push
and
movsx
mov
not
pop
pop
ret
call
test
jmp
imul
js
jge
pusha
inc
aad
pop
pusha
pop
push
(bad)
loop
clc
push
cmp
inc
sbb
xlat
daa
pusha
pop
push
(bad)
test
lahf
mov
cmp
xchg
cld
arpl
mov
adc
pop
imul
lahf
cmp
jg
inc
enter
mov
mov
pusha
mov
add
pop
fbld
pop
lahf
js
rcl
pusha
(bad)
loope
pop
arpl
mov
mov
clc
cwde
mov
or
mov
mov
inc
js
pusha
pop
clc
push
lahf
clc
in
test
out
pusha
(bad)
mov
in
pop
jecxz
inc
lahf
cmp
aam
lahf
mov
cmp
pop
pop
adc
inc
test
pop
imul
lea
into
inc
test
and
je
push
or
cmp
pop
call
je
dec
add
mov
jb
mov
outs
fs
mov
mov
cmp
cmp
mov
pop
mov
inc
sbb
clc
test
enter
dec
add
cmp
(bad)
jmp
mov
lock
shl
je
add
rcr
(bad)
lahf
mov
neg
fdiv
jge
mov
push
mov
je
push
outs
add
and
ja
jg
or
mov
dec
xlat
mov
and
ja
loopne
xchg
mov
xchg
pop
pop
mul
je
sahf
push
gs
sub
adc
fmul
je
mov
jmp
push
(bad)
adc
ds
inc
pop
add
inc
js
je
jb
arpl
jae
push
call
or
dec
fs
or
outs
inc
das
lods
adc
adc
daa
idiv
ds
ds
gs
mov
js
inc
pop
inc
sub
lahf
mov
cmp
xchg
pusha
(bad)
dec
dec
call
repnz
(bad)
movs
das
arpl
mov
jno
js
in
nop
pusha
inc
popa
and
adc
pop
xor
mov
adc
pusha
xchg
fild
pushf
clc
pop
pop
retf
pusha
pop
aaa
fs
mov
mov
mov
clc
mov
js
dec
lahf
mov
clc
cld
push
clc
pusha
inc
push
(bad)
mov
ja
(bad)
jae
movzx
shl
cmc
shl
or
dec
bswap
inc
mov
xadd
movsx
bsf
mov
jmp
jb
pop
shr
pop
sub
mov
pop
bswap
pop
jmp
adc
adc
daa
idiv
xor
fs
mov
jle
in
adc
adc
daa
idiv
xor
or
jl
mov
inc
movs
sti
pushf
clc
out
and
cmp
and
push
ja
xchg
setbe
lahf
clc
setge
pusha
pop
cmp
lahf
mov
cmp
enter
inc
lahf
js
pop
arpl
xor
lahf
cmp
push
lahf
cmp
mov
dec
mov
lahf
mov
js
repz
ds
js
je
stc
outs
cld
lahf
js
dec
pusha
(bad)
cwde
or
lahf
mov
cmp
sbb
pop
jb
lods
lahf
clc
les
xchg
lahf
mov
js
add
lock
clc
mov
add
rcr
pusha
mov
es
pusha
(bad)
push
ins
and
int3
sub
lahf
mov
mov
stos
stc
ins
movs
lahf
mov
xchg
icebp
and
pop
mov
pushf
js
jb
pusha
(bad)
in
xor
pop
ja
lahf
cmp
dec
iret
aad
(bad)
jbe
std
arpl
mov
mov
add
lahf
clc
xor
push
outs
xchg
lahf
cmp
pop
pushf
js
push
push
pusha
inc
cwde
pop
arpl
push
xor
out
and
cmps
test
arpl
imul
lahf
mov
mov
cmp
(bad)
or
test
imul
dec
inc
sbb
dec
adc
and
rcr
imul
clc
sbb
(bad)
dec
lea
jmp
nop
stc
pushf
clc
jmp
movs
push
mov
clc
cwde
or
pusha
pop
movs
int3
push
lahf
mov
cmp
and
lahf
clc
scas
sub
jo
inc
mov
cwde
cmps
arpl
cmp
add
push
out
pusha
inc
cmp
xor
pushf
js
popa
pusha
(bad)
mov
xor
pusha
(bad)
pop
dec
int3
add
ret
hlt
mov
push
ins
or
imul
hlt
mov
mov
clc
dec
inc
sub
inc
mov
pop
scas
push
pusha
pop
sub
das
pushf
js
(bad)
push
pusha
inc
cdq
mov
out
lahf
mov
mov
js
push
shl
imul
push
sub
ret
ins
in
pusha
(bad)
jno
inc
pusha
pop
daa
mov
add
lahf
mov
cmp
jbe
pushf
clc
ror
pushf
push
lahf
mov
clc
mov
test
mov
pushf
clc
sbb
pusha
inc
push
loopne
pusha
xchg
xchg
add
mov
idiv
mov
ret
pop
stc
cwde
lahf
mov
clc
out
pop
pusha
pop
mov
imul
mov
mov
(bad)
mov
push
pushf
clc
push
mov
sahf
pop
pusha
(bad)
std
aam
arpl
lods
or
(bad)
icebp
push
mov
add
add
lock
pop
div
bound
js
adc
imul
mov
sbb
cmp
push
pop
xchg
cmp
cwde
ins
imul
imul
sub
xchg
mov
add
imul
push
xchg
js
add
enter
cmp
scas
xchg
js
scas
ds
jmp
pop
inc
test
xchg
clc
or
mov
imul
sbb
xchg
mov
clc
dec
loope
inc
hlt
ror
imul
ins
in
imul
popa
aas
test
push
push
xchg
mov
mov
js
hlt
sub
stc
add
push
xchg
mov
mov
clc
mov
imul
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
pushf
clc
ds
push
imul
lahf
clc
popa
repz
push
cmp
mov
cmp
sbb
pusha
(bad)
dec
dec
ja
inc
inc
bound
(bad)
mov
cld
lahf
jae
cmp
adc
pop
in
lahf
cmp
adc
lahf
js
stc
pusha
inc
mov
and
sub
or
stos
icebp
outs
hlt
js
jmp
inc
daa
pop
jmp
push
hlt
js
repz
inc
mov
or
cmp
or
cmp
dec
idiv
pop
stos
or
push
inc
or
jbe
or
adc
call
hlt
cmp
sar
mov
clc
mov
or
cmp
je
dec
inc
add
add
pop
lock
dec
hlt
mov
mov
cmp
ficomp
(bad)
(bad)
(bad)
jmp
(bad)
push
pop
add
js
or
fwait
pusha
pop
and
xor
imul
add
push
push
mov
arpl
inc
ins
jmp
gs
inc
cmp
xor
iret
call
aaa
lahf
clc
mov
pusha
(bad)
test
jmp
pop
cmp
sub
loopne
mov
lods
jecxz
dec
inc
dec
pop
mov
clc
add
movs
addr16
inc
push
stos
jecxz
jp
repz
js
xchg
xor
xchg
call
dec
dec
push
(bad)
ret
rcl
inc
push
xlat
aad
pop
mov
int
js
aas
push
in
in
push
sbb
add
or
jmp
push
(bad)
xchg
cmp
clc
add
pop
lods
xchg
cmp
mov
(bad)
fs
and
xchg
xchg
js
cli
fisubr
ror
push
xchg
jo
cmp
fsub
cs
std
xchg
clc
neg
push
add
or
mov
hlt
push
xchg
out
xchg
cmp
xor
push
cmc
xlat
mov
(bad)
stos
mov
js
cmp
push
push
and
imul
cmp
cld
pushf
clc
pusha
cmp
outs
lahf
mov
clc
aaa
movs
fbld
aaa
pop
push
lahf
mov
cmp
sbb
pusha
(bad)
and
jne
inc
add
fidivr
xor
clc
cmp
push
push
pusha
inc
int3
cmps
pusha
inc
ror
lahf
mov
cmp
and
push
inc
out
pusha
xchg
mov
arpl
das
push
aad
js
outs
js
inc
adc
pusha
(bad)
mov
arpl
movs
(bad)
pushf
lahf
cmp
pushf
js
sahf
fbld
movs
mov
jmp
(bad)
int3
and
cmp
loop
out
stc
icebp
xor
mov
js
nop
in
(bad)
data16
in
jbe
in
dec
dec
(bad)
inc
jae
out
pop
jmp
hlt
leave
aad
jb
and
pop
cmp
fwait
(bad)
mov
hlt
push
lahf
jb
cmp
mov
cmc
cmc
mov
jmp
lea
aam
jno
xchg
(bad)
sbb
lahf
repnz
dec
out
mov
hlt
mov
cmp
mov
ret
push
pop
jno
(bad)
mov
pushf
mov
xchg
jno
cwde
jae
jno
loop
ror
mov
mov
js
sti
adc
lea
mov
mov
clc
mov
fmul
jno
push
xor
jb
fiadd
mov
(bad)
or
mov
pop
or
push
retf
pop
div
ds
mov
sub
mov
mov
hlt
daa
out
jne
dec
ds
jl
clc
dec
lock
loopne
rol
ds
sub
inc
xlat
test
or
stos
sub
pop
xchg
mov
gs
sub
push
into
mov
jnp
call
ds
clc
in
lock
and
mov
mov
dec
or
push
sub
mov
retf
int3
sub
inc
push
jmp
jae
mov
clc
movzx
shl
cmc
shl
cmc
cmp
or
inc
stc
mov
shr
imul
cmp
jae
mov
mov
cmc
sub
test
cmp
shr
lea
bt
mov
shl
jmp
sbb
xchg
push
add
pop
or
push
into
sub
pop
loopne
cmp
xchg
fild
ins
push
jmp
mov
jne
push
ds
jl
clc
dec
lock
loopne
ror
inc
add
push
sub
push
out
mov
xor
sbb
mov
mov
gs
or
mov
inc
adc
daa
ror
lahf
xor
cs
clc
test
shr
unpcklps
mov
pop
or
push
test
pop
mov
retf
sahf
sub
push
jmp
sub
mov
xor
movs
dec
aas
lahf
adc
pop
jl
clc
fcomi
(bad)
loopne
rcr
stc
adc
sub
mov
inc
inc
lahf
test
or
push
fs
pop
(bad)
xor
and
jmp
call
xchg
or
pop
add
and
js
push
rcr
btc
mov
stc
cmc
lea
cmp
cmp
push
jmp
jne
cmp
je
mov
jmp
clc
cmp
jmp
push
push
cmovle
mov
mov
movsx
lahf
mov
push
jmp
pop
adc
pusha
inc
inc
pusha
(bad)
pusha
(bad)
mov
mov
jge
js
call
pusha
pop
sti
imul
pusha
inc
xchg
jecxz
(bad)
stos
inc
jmp
and
pusha
mov
retf
adc
pop
cmp
add
mov
js
in
shl
(bad)
jns
sub
push
add
clc
and
push
xchg
pop
mov
loopne
xchg
pop
fucom
inc
push
jnp
loopne
mov
adc
out
cdq
clc
cli
frstor
(bad)
sub
addr16
in
clc
les
inc
xchg
mov
out
jecxz
sub
push
ret
pop
clc
add
cld
jecxz
ror
jg
clc
inc
in
xor
jno
inc
or
mov
xchg
lods
jo
mov
push
call
mov
cmp
pusha
pop
mov
into
inc
xchg
lahf
clc
lods
sub
pusha
(bad)
mov
jecxz
inc
mov
inc
enter
pop
pop
jp
js
adc
xchg
pusha
xchg
mov
stc
mov
lahf
cmp
pushf
js
xor
pop
into
jnp
cmp
xlat
dec
lahf
cmp
lods
pushf
js
sbb
pusha
inc
lds
sbb
je
push
sbb
sub
test
(bad)
mov
outs
sub
lahf
mov
clc
inc
lods
pusha
(bad)
xchg
dec
cmps
pusha
xchg
lahf
js
xchg
jecxz
(bad)
push
js
pusha
inc
fldenv
icebp
xor
lahf
clc
fdivr
call
mov
push
rol
adc
xchg
data16
mov
clc
dec
out
inc
inc
mov
arpl
stc
jnp
cmp
or
pusha
(bad)
mov
repnz
pop
pop
xchg
dec
lahf
clc
adc
or
and
pop
lahf
mov
test
int3
or
mov
or
in
js
jg
pusha
(bad)
jle
movs
arpl
mov
mov
clc
das
or
ficomp
pushf
clc
pop
cmc
imul
(bad)
lea
jmp
push
call
pop
movsx
not
cmovg
pop
mov
jmp
call
add
cmp
jmp
jmp
mov
pushf
clc
into
dec
das
pusha
(bad)
out
loop
inc
(bad)
loop
pusha
(bad)
sbb
sub
pop
adc
lahf
js
popa
call
pop
imul
or
lods
in
(bad)
adc
fldenv
lock
pusha
xchg
add
inc
jecxz
arpl
mov
add
cmp
cmp
shr
xchg
popa
adc
cmp
jbe
js
enter
stc
jle
pop
lods
movs
pushf
adc
popf
or
clc
sti
popf
jmp
stos
dec
dec
call
mov
js
mov
jmp
es
sub
dec
jl
jmp
add
add
inc
ja
js
add
cmp
adc
add
iret
jg
jecxz
int3
jg
out
inc
add
cli
jno
inc
cld
cwde
imul
xchg
sbb
leave
ins
jl
sar
add
xchg
pop
sub
in
mov
adc
add
out
jg
jno
jg
mov
pop
or
and
add
stc
dec
add
js
xchg
jg
jne
cmp
pop
inc
cmps
jg
xor
sar
add
pop
sbb
jg
mov
adc
ins
lods
and
retf
add
jnp
sahf
jl
cmps
or
add
nop
add
ins
add
stos
out
jg
adc
push
mov
ds
xor
in
jmp
mov
jmp
mov
jmp
sbb
or
or
lds
loop
ins
fwait
scas
repz
dec
dec
inc
push
jmp
jae
mov
movzx
cmp
cmp
test
shl
clc
cmp
cmc
shl
stc
jmp
mov
clc
test
stc
cmp
jmp
lock
pushf
js
clc
inc
pusha
(bad)
ins
xchg
pop
or
add
lahf
mov
cmp
push
pushf
clc
imul
lods
pop
lahf
mov
clc
pushf
push
call
mov
jns
pop
cmp
clc
pop
retf
mov
xchg
lock
pop
mov
mov
cmp
(bad)
in
arpl
clc
icebp
imul
loope
arpl
inc
sahf
lahf
mov
leave
scas
pusha
inc
xchg
lock
pusha
xchg
shl
clc
push
pop
icebp
pusha
inc
inc
loope
arpl
aas
iret
lahf
mov
js
mov
stc
das
in
mov
cmps
or
pop
dec
mov
arpl
loope
movs
lahf
js
mov
pusha
pop
cmp
pop
pusha
pop
loop
lahf
js
pop
outs
pusha
inc
sti
stos
pop
pusha
inc
ret
pop
retf
dec
pushf
js
or
pusha
pop
inc
mov
(bad)
push
xchg
arpl
fstp
cmp
(bad)
mov
pusha
xchg
lock
jg
adc
xor
and
aad
arpl
add
pop
lahf
mov
mov
out
lahf
cmp
jb
clc
xlat
pop
pushf
pusha
inc
jae
popa
pusha
xchg
lahf
cmp
retf
and
inc
cmp
sub
jmp
and
pop
pusha
inc
loope
cmps
arpl
adc
sti
xor
(bad)
adc
and
js
cmp
and
inc
inc
mov
pushf
clc
sbb
mov
pop
lahf
mov
clc
inc
shr
pusha
pop
push
aas
bound
lahf
cmp
jmp
call
push
inc
pusha
inc
push
jo
pusha
(bad)
mov
(bad)
daa
jmp
and
lahf
cmp
loopne
lahf
mov
jge
pusha
(bad)
outs
xchg
arpl
js
xchg
jno
inc
gs
push
xchg
xchg
pushf
js
adc
pusha
inc
xor
pusha
inc
sub
pusha
(bad)
loop
outs
fbld
lahf
cmp
test
iret
jecxz
xchg
gs
lahf
mov
clc
mov
sub
pop
xchg
outs
pusha
inc
fstp
xchg
pusha
xchg
mov
out
pop
lahf
mov
test
jae
pop
sub
lahf
mov
cmp
sbb
adc
(bad)
cmps
movs
fldenv
mov
ret
pusha
(bad)
pop
(bad)
pop
arpl
inc
sbb
and
pusha
inc
lods
outs
dec
arpl
or
test
mov
pusha
mov
not
dec
lahf
js
jg
xchg
ins
lds
(bad)
push
ficomp
imul
arpl
add
loope
ins
pop
cmp
(bad)
xchg
js
or
cmp
das
mov
mov
imul
mov
add
std
or
xchg
mov
dec
dec
retf
inc
stc
dec
push
xchg
mov
cmp
and
stc
jg
xchg
cmp
xchg
cmp
mov
xchg
js
adc
xchg
cmp
xchg
cmp
rcl
imul
daa
push
fst
or
xchg
enter
inc
int3
out
ja
inc
xor
pop
imul
inc
xchg
clc
push
inc
imul
bound
add
adc
hlt
push
xchg
mov
add
xor
push
xchg
mov
mov
xchg
js
fwait
loope
jne
xchg
clc
sbb
imul
adc
imul
push
xchg
cmp
pop
rcl
(bad)
mov
call
xchg
clc
adc
imul
sub
test
xchg
clc
xchg
xchg
imul
lods
imul
lock
xchg
cmp
sar
xchg
js
sti
sub
repz
imul
cmc
imul
or
js
push
mov
inc
sbb
dec
push
xchg
mov
mov
js
xchg
cmp
pop
(bad)
sub
fnstsw
ds
cmp
outs
repnz
aaa
mov
aas
std
outs
je
int
(bad)
jp
mov
inc
xor
lahf
sub
pusha
inc
xchg
mov
pusha
(bad)
push
fst
arpl
ins
ss
lahf
js
aas
movs
pusha
inc
xchg
stos
lods
pusha
pop
pop
lea
clc
sub
pusha
inc
arpl
(bad)
data16
shl
adc
dec
data16
repz
mov
clc
adc
jmp
jmp
jmp
repz
(bad)
fucomi
cs
dec
and
jge
fnstenv
pop
add
cmp
inc
jge
out
mov
dec
stc
inc
test
xchg
leave
in
inc
sti
push
ror
stc
sbb
jp
xchg
sub
add
shr
fwait
add
xchg
add
fidivr
jge
sub
(bad)
add
sub
sbb
and
xchg
add
imul
sub
(bad)
into
into
add
and
add
lea
push
add
scas
add
mov
cmp
nop
jle
(bad)
cmp
je
pop
pop
fcmovnbe
lahf
cmp
sbb
lahf
cmp
lahf
lds
arpl
lahf
clc
loopne
shl
clc
mov
add
pop
ds
jne
lahf
clc
sti
pop
pusha
xchg
sar
pusha
(bad)
or
ins
pusha
inc
adc
pusha
xchg
jae
push
push
clc
stos
scas
or
pop
gs
pmuludq
push
fidiv
or
pusha
scas
enter
and
hlt
cmp
hlt
js
(bad)
in
pusha
jo
(bad)
ficomp
pop
pusha
pop
js
gs
js
rcr
pusha
inc
cmc
xlat
out
pop
add
fist
call
adc
cwde
pusha
(bad)
xor
push
arpl
cmp
xor
arpl
ret
cdq
ins
lahf
js
movs
lea
cmp
test
mov
lods
les
repnz
(bad)
int
clc
pusha
pop
xchg
adc
cmp
mov
repnz
lahf
cmp
jmp
mov
clc
cvtpi2ps
arpl
mov
clc
(bad)
leave
sub
imul
xchg
imul
cmp
pop
lahf
mov
ins
out
arpl
pop
add
lahf
js
adc
xchg
sub
cmp
pusha
inc
pop
aad
pusha
mov
pop
lahf
cmp
and
lahf
js
popf
mov
mov
and
cmp
into
outs
pop
pop
pop
and
xchg
cmp
xchg
clc
in
cmc
ds
xchg
fcomp
xchg
clc
mov
cmp
xchg
js
arpl
xchg
stos
stos
xchg
mov
js
ins
jne
pop
cmp
fadd
idiv
pop
loopne
xchg
cmp
mov
pop
lea
lock
cmp
not
pop
pop
pop
ins
inc
push
mov
pop
pop
cmp
(bad)
repnz
popa
outs
pop
dec
xchg
cmp
(bad)
and
out
leave
mov
xchg
clc
jnp
fsubr
lea
mov
js
jo
(bad)
cwde
pop
xor
repnz
cmp
and
ins
xchg
stos
lods
xchg
js
out
ins
inc
mov
test
cmp
push
pop
xchg
clc
fadd
aam
inc
mov
mov
shr
inc
outs
xchg
into
mov
dec
xchg
mov
clc
mov
daa
ds
mov
clc
std
push
mov
aas
test
xor
mov
xchg
add
add
clc
cmovns
xor
not
jmp
clc
neg
mov
pop
jmp
out
xchg
pushf
js
jmp
pusha
(bad)
repz
pusha
pop
xchg
adc
mov
lods
jge
cmp
test
(bad)
pusha
xchg
adc
lahf
mov
clc
sub
sti
out
pusha
inc
mov
pushf
clc
(bad)
in
mov
cmp
sahf
lahf
cmp
repnz
cmp
push
test
xor
push
in
dec
jns
js
icebp
add
mov
js
mov
mov
or
clc
mov
aaa
sbb
out
jle
test
mov
in
jge
je
inc
push
add
inc
out
pushf
add
imul
clc
jmp
jle
je
add
js
xchg
add
mov
add
xchg
pop
jle
jl
rol
add
xor
xchg
outs
test
pop
and
addr16
cld
jle
js
jno
(bad)
and
xor
pop
jle
or
mov
mov
clc
push
jno
add
icebp
sar
jge
sbb
adc
inc
into
cmp
and
inc
test
stc
sub
mov
cmc
cmp
stc
add
jmp
push
(bad)
adc
and
(bad)
dec
hlt
cmp
jmp
mov
jmp
inc
inc
dec
xor
cs
ins
add
not
pop
jmp
mov
mov
stc
bt
mov
add
xor
lea
bts
bswap
mov
cmp
cmc
push
rol
sar
adc
mov
add
jmp
ret
and
pusha
inc
cmc
ror
pusha
(bad)
cmp
bound
js
jae
pusha
inc
iret
mul
push
lahf
clc
push
aas
xchg
pusha
inc
adc
cmc
(bad)
push
out
jo
mov
mov
adc
add
and
imul
lea
xchg
mov
pop
inc
imul
call
in
imul
push
xchg
clc
mov
imul
pop
adc
jle
xchg
js
call
xchg
mov
and
data16
fsubr
inc
mov
adc
xchg
cmp
nop
out
xchg
add
loop
imul
mov
mov
clc
in
push
inc
in
sbb
stc
cmp
xchg
cmp
xchg
js
leave
test
and
imul
outs
fwait
adc
and
sub
xchg
in
arpl
mov
mov
cdq
or
loopne
xchg
mov
js
dec
imul
jecxz
xchg
mov
clc
jne
imul
inc
mov
add
pop
and
test
xchg
clc
add
xor
xchg
imul
xchg
js
pop
jle
inc
outs
imul
out
ret
xchg
js
sub
inc
push
sub
imul
push
xchg
iret
mov
inc
push
cmp
fist
(bad)
jmp
add
add
xchg
retf
cmps
mov
dec
dec
outs
(bad)
jl
vmaxps
dec
(bad)
hlt
jmp
mov
cmp
test
cmp
lds
jl
stc
cdq
push
sar
pmulhuw
jg
ss
mov
test
jp
push
add
xor
lds
cmp
(bad)
(bad)
fld
or
sub
pop
lock
mov
sub
or
mov
aas
or
sbb
retf
and
push
xor
mov
lds
jae
jecxz
ja
sahf
mov
loope
arpl
jecxz
sub
out
mov
adc
js
push
je
test
sahf
mov
scas
loope
ret
pop
jnp
cld
and
pushf
xor
je
mov
icebp
jecxz
clc
push
cmp
movs
jo
sbb
aaa
pop
test
movs
clc
pop
jns
test
in
fcom
cmp
pop
xchg
mov
xchg
loop
imul
popf
sbb
add
pop
lods
pop
(bad)
mov
(bad)
pop
shl
mov
scas
call
in
nop
push
add
add
mov
mov
xor
mov
fisubr
pop
movs
push
(bad)
(bad)
xchg
mov
xchg
ss
push
(bad)
sub
std
(bad)
xchg
ins
or
adc
sbb
sbb
stos
imul
popf
aad
inc
jno
adc
nop
pop
jae
adc
cmp
fistp
cmp
fs
or
and
add
adc
sub
cli
xchg
adc
test
out
xchg
imul
dec
cmp
aam
fiadd
and
clc
jp
add
mov
sub
pop
mov
ror
aas
stc
rcr
sti
retf
out
lea
jno
sahf
icebp
icebp
jecxz
xor
call
mov
popf
in
cmp
mov
push
popa
dec
or
into
outs
fsub
aas
mov
out
sbb
jecxz
pop
(bad)
outs
adc
movs
stc
cld
dec
sub
push
jmp
fidiv
dec
jg
cld
add
(bad)
push
mov
mov
iret
jp
add
leave
xchg
pop
cmp
ret
xor
scas
or
adc
test
outs
out
pushf
ds
push
adc
xchg
mov
dec
test
mov
ds
xor
pop
daa
rcr
mov
test
jno
cmps
retf
bound
lock
cli
xor
push
xor
inc
sbb
rol
shr
int3
lods
stos
lods
aad
clc
aad
adc
icebp
fadd
es
ins
das
mov
icebp
cmp
movd
jmp
adc
imul
daa
leave
xchg
jbe
add
pop
jle
and
fs
push
push
call
dec
fistp
push
mov
lods
outs
inc
ret
cmps
repnz
fdivr
dec
loop
and
fwait
cmc
fisubr
cmp
mov
stc
xor
mov
mov
out
xor
imul
push
call
sbb
sbb
ficom
in
sbb
sbb
push
push
sbb
push
and
arpl
nop
lea
cs
mov
xchg
mov
lea
ins
adc
and
inc
aas
gs
xor
outs
jb
dec
sbb
out
dec
adc
mov
ja
pop
jno
inc
push
adc
out
or
mov
mov
fistp
cmp
mov
shl
nop
ds
std
mov
push
into
outs
hlt
adc
inc
xchg
cmps
mov
or
dec
das
in
iret
push
repz
pop
(bad)
les
int3
mov
jmp
jl
ja
add
cs
ins
outs
xchg
(bad)
fistp
test
jnp
clc
lea
imul
fisubr
sub
and
xchg
jb
(bad)
push
inc
xor
push
xor
mov
add
fldcw
pop
pop
stos
in
outs
movs
jecxz
adc
lea
shl
clc
xor
ins
outs
sbb
jo
ror
cmp
mov
mov
movs
ror
push
dec
pop
adc
cld
sbb
jp
add
mov
push
loopne
mov
inc
adc
mov
push
xor
test
shr
mov
xchg
dec
and
jp
inc
loopne
dec
es
or
xchg
out
loop
sbb
mov
push
repnz
test
mov
xor
jae
pop
adc
sti
xchg
mov
(bad)
out
ins
inc
or
enter
pop
int3
mov
enter
retf
(bad)
js
pusha
sbb
jo
and
in
xchg
mov
or
mov
push
int
lahf
inc
or
mov
adc
add
dec
xchg
je
pop
sub
arpl
movs
(bad)
rcr
mov
mov
aas
mov
mov
jnp
aam
popa
mov
mov
out
(bad)
xor
pop
test
or
in
fsubr
hlt
out
adc
jle
aaa
fistp
repnz
xor
jo
das
in
mov
dec
mov
adc
out
pop
pop
add
pusha
sbb
dec
add
mov
neg
fdiv
test
pop
cmp
call
ins
stos
iret
adc
cmps
inc
xor
jmp
xor
xchg
adc
mov
test
aaa
sbb
mov
mov
enter
adc
call
adc
xchg
mov
and
jg
adc
daa
div
(bad)
xor
jle
fild
fs
pop
in
(bad)
hlt
jle
mov
(bad)
lods
shl
xchg
loopne
retf
(bad)
aas
jmp
scas
push
mov
sub
xchg
test
stc
xor
push
sbb
mov
dec
inc
clc
clc
out
and
inc
int3
xor
fimul
(bad)
repz
gs
sub
push
xor
xchg
imul
out
sbb
jp
stos
fiadd
xchg
ins
mov
mov
xor
fsubr
ror
mov
aam
xchg
arpl
gs
fwait
iret
mov
jl
mov
xchg
fldcw
adc
in
xor
stos
mov
adc
pop
ret
shl
(bad)
outs
pusha
out
sbb
xor
out
cmp
add
xchg
xchg
repnz
push
daa
sar
mov
adc
cwde
int3
sbb
sbb
aas
ss
cmp
sar
in
les
ins
inc
adc
clc
rcl
jl
and
push
jmp
es
sbb
pop
int
mov
pushf
xchg
icebp
stc
sub
push
(bad)
push
frstor
jae
inc
aad
adc
ja
pop
or
xchg
cmps
jne
and
ficom
popa
and
dec
sub
fcmovnb
pop
push
xchg
dec
mov
data16
sbb
aad
xchg
push
pop
jmp
loope
ins
hlt
call
mov
xor
scas
js
les
cmp
addr16
pusha
jmp
xchg
(bad)
data16
fwait
loop
and
pop
xor
shr
add
in
push
out
int
movs
inc
gs
fwait
pop
loop
cmps
push
inc
dec
mov
aaa
aad
jp
and
jae
pop
sbb
mov
jmp
xor
test
(bad)
pusha
xor
or
xchg
fimul
jg
nop
(bad)
imul
out
nop
loop
mov
aam
movs
addr16
jnp
push
pop
rcl
jecxz
out
lods
mov
pop
pop
or
jae
dec
xchg
bnd
in
adc
mov
leave
xchg
push
icebp
fs
mov
xchg
arpl
pop
ja
cmp
sub
mov
jo
xchg
(bad)
test
jg
les
ja
mov
push
xor
pop
lock
add
pop
(bad)
mov
stos
sar
jge
and
in
xchg
leave
jmp
ret
jnp
inc
sbb
(bad)
push
scas
std
fld
lahf
mov
pop
cmp
dec
xchg
xchg
add
dec
mov
icebp
fisttp
dec
pop
mov
scas
jmp
cmp
pusha
ss
cld
fmul
ret
aam
xor
push
shr
xchg
pushf
ins
fcmovb
addr16
pop
sti
retf
imul
ret
and
jge
jle
xchg
fidivr
(bad)
std
(bad)
fist
push
and
xchg
adc
ret
push
inc
movs
repz
ja
ficomp
mov
and
jge
rcr
sar
test
push
add
daa
in
call
adc
dec
test
shl
mov
(bad)
inc
jns
fdiv
add
pop
push
push
js
or
test
or
mov
pop
mov
adc
and
mov
push
or
jo
jno
pop
out
sbb
xor
adc
jns
cmps
cmps
add
fisubr
int
sub
lods
retf
ror
inc
inc
or
popa
cli
cmp
out
cld
out
mov
ja
sub
jno
mov
loope
fidivr
aaa
inc
mov
jb
les
xor
popf
pushf
cli
add
mov
push
movs
mov
mov
inc
mov
call
pop
xor
adc
dec
imul
imul
int
test
add
mov
cmc
add
cmps
or
(bad)
or
rol
xchg
ss
out
push
clc
jle
and
adc
pop
leave
adc
xlat
xchg
pop
aaa
mov
mov
xchg
aas
mov
retf
fimul
xchg
sar
jmp
addr16
out
sub
cmps
cdq
loope
push
repz
(bad)
iret
xor
sub
adc
dec
xchg
aas
in
rol
scas
cmc
mov
cli
inc
into
ins
xchg
push
mov
nop
sbb
mov
mov
and
pop
scas
xor
adc
mov
add
mov
fld
lahf
adc
mov
sub
sahf
and
or
out
popa
push
dec
adc
jne
addr16
cmps
or
inc
shr
add
dec
sbb
or
jb
dec
cwde
adc
pop
shl
fbstp
clc
dec
shr
or
mul
adc
xchg
in
sub
pop
xor
iret
mov
jae
mov
mov
mov
test
fistp
call
addr16
sub
out
ds
add
lea
test
mov
mov
sub
and
lds
shl
jmp
leave
(bad)
jmp
jno
fldenv
imul
and
mov
popf
mul
sbb
aam
lods
js
jns
loopne
sahf
mov
jne
repz
and
pop
repz
jmp
test
test
imul
jnp
add
xlat
sub
pushf
(bad)
push
adc
cmp
fild
jp
ja
push
pop
xchg
and
dec
or
add
js
mov
jmp
and
inc
xchg
xor
lods
push
sbb
daa
sub
(bad)
or
pushf
xchg
pushf
mov
or
pop
mov
lods
cmp
loop
repnz
jmp
cmp
lods
div
xchg
test
inc
mov
lds
dec
fwait
lock
mov
movs
aas
sub
in
fidiv
or
add
rcl
xchg
jno
jmp
dec
hlt
cwde
xor
mov
ins
ds
loope
ror
mov
inc
pop
push
psubsw
test
adc
add
sbb
mov
and
jbe
pop
ja
in
sbb
jmp
in
dec
mov
jecxz
mov
dec
xor
daa
xor
aad
adc
mov
inc
(bad)
jns
and
pop
dec
icebp
fld
lock
jae
push
or
and
push
xor
mov
adc
jmp
inc
retf
fiadd
and
push
call
jns
push
lea
inc
cmp
sub
sub
ret
mov
xor
fs
push
or
dec
das
pop
iret
lea
push
mov
xchg
call
jo
hlt
cli
lock
(bad)
leave
cli
jnp
adc
push
(bad)
loopne
and
mov
into
aam
fsub
cmp
xor
iret
push
xchg
fldcw
mov
push
out
sti
and
cmps
out
into
adc
into
push
out
pusha
stos
lock
lock
pop
retf
call
jle
call
cmps
nop
push
clc
pop
sbb
fwait
(bad)
lock
inc
call
inc
popa
add
js
adc
mov
mov
mov
repz
pop
mov
mov
pushf
add
neg
jge
fs
mov
in
add
fcomp
xor
push
cmp
sub
fsub
or
pushf
test
imul
adc
pop
jbe
lds
pop
xchg
mov
pop
push
jmp
adc
mov
pop
(bad)
lock
out
clc
add
cli
push
dec
jecxz
sbb
sbb
xchg
(bad)
(bad)
pop
loopne
loop
out
outs
loop
test
mov
sub
pop
mov
fild
or
push
hlt
test
imul
outs
mov
cmp
sub
lods
jno
and
sbb
push
xor
dec
xor
ret
xchg
cmp
add
xchg
loop
test
sub
jbe
jl
inc
std
jo
cld
iret
push
mov
push
icebp
imul
jb
jp
std
aad
pop
sub
jo
adc
sub
mov
or
xlat
imul
mov
jge
fst
stos
(bad)
shr
jmp
jge
sbb
mov
retf
jecxz
popa
imul
lods
inc
icebp
ins
repz
add
in
std
adc
mov
call
push
mov
in
cs
mov
push
ss
shl
sub
sub
shr
scas
and
fisub
retf
imul
cmp
mov
inc
(bad)
sub
cmps
mov
cwde
mov
repz
imul
ins
mov
jnp
sub
mov
popf
lds
push
pop
sahf
jmp
and
arpl
mov
int
jo
sbb
retf
jecxz
call
(bad)
cmp
dec
add
and
in
arpl
pop
add
jl
pop
xchg
cdq
mov
repnz
cmp
in
outs
daa
jo
push
inc
mov
cmps
das
std
outs
pop
dec
xchg
aaa
dec
aaa
ins
mov
in
jge
inc
lds
sub
call
or
mov
(bad)
ret
mov
outs
test
mov
leave
loopne
and
iret
es
xchg
xor
mov
cwde
xor
outs
pusha
lods
test
aas
repz
sti
call
cmc
push
sbb
adc
popf
(bad)
in
popf
push
popa
int
out
cmp
xchg
inc
stc
outs
nop
movs
ins
repnz
stos
dec
pop
add
mov
push
test
scas
adc
and
in
jecxz
xchg
lods
mov
xchg
push
pop
lods
pusha
pusha
inc
push
xor
cmps
jle
push
jle
idiv
shl
rcr
mov
mov
mov
lds
fstp
data16
leave
pop
xchg
mov
mov
repnz
or
mov
mov
aaa
ins
sub
dec
out
mov
dec
inc
xchg
pop
fist
shr
adc
pop
movs
adc
jae
fidiv
sahf
dec
inc
push
dec
dec
jnp
cmp
pop
in
lea
pusha
stc
les
pop
jmp
iret
push
xor
bound
mov
push
ficomp
inc
mov
mov
mov
pcmpeqw
cwde
sbb
adc
arpl
enter
xor
sbb
cs
jbe
out
in
ffreep
cmp
cmp
push
pop
call
dec
scas
in
es
call
cmp
pushf
movs
mul
or
ror
mov
and
xor
ins
xchg
inc
in
adc
pop
and
mov
xor
and
into
fmul
inc
lea
sbb
fld
jg
cmp
adc
int
stos
sub
std
shl
push
jae
cli
pop
rcl
in
int
clc
push
sti
sub
test
(bad)
mov
cmp
out
adc
je
mov
dec
rcr
pop
pop
popa
mov
(bad)
sti
mov
inc
dec
popf
ins
adc
cld
daa
loopne
xlat
jecxz
jg
fs
cmp
outs
or
inc
lock
push
push
jmp
arpl
dec
xchg
cmps
pushf
pop
icebp
push
fcomp
movs
adc
dec
sub
cmc
pop
mov
fmul
out
inc
pextrw
cmps
cmps
mov
in
xchg
jecxz
stos
inc
mov
sbb
mov
sar
or
adc
sub
cmp
sub
shl
pop
mov
inc
arpl
push
retf
xchg
jo
push
adc
pusha
shl
cmp
imul
xlat
in
pop
mov
retf
sbb
add
sbb
inc
callw
mov
pushf
ins
mov
dec
add
imul
xchg
jb
cwde
outs
mov
cmp
pop
(bad)
and
fsub
sbb
mov
mov
(bad)
or
dec
inc
(bad)
hlt
cmps
mov
adc
or
sbb
sar
inc
sub
jp
pop
mov
and
cmp
and
dec
les
push
sbb
push
(bad)
push
int
push
nop
fst
div
je
xchg
jle
idiv
sub
sbb
in
shl
push
add
nop
add
cmp
imul
dec
call
es
ror
in
cmp
daa
ins
dec
aas
jbe
sbb
les
icebp
cmp
mov
fidivr
sub
jge
lods
xchg
push
push
aaa
add
repnz
stos
cmp
icebp
cmp
add
mov
jp
sbb
jl
xchg
mov
ror
sbb
es
cmp
cmp
aas
push
pop
or
in
jo
data16
jns
sub
out
mov
cmp
les
jp
jg
(bad)
and
sbb
or
add
jg
out
mov
pop
inc
arpl
aas
mov
xchg
lahf
sbb
sbb
into
nop
or
call
rol
pop
(bad)
jmp
dec
or
pusha
into
stc
ror
popa
or
popa
jg
int
aas
pop
mov
xor
sub
jb
(bad)
aad
lock
sar
pop
(bad)
mov
ror
add
outs
stos
scas
jbe
call
and
call
aaa
sbb
xor
out
test
mov
neg
(bad)
adc
ins
xor
jne
iret
out
int3
dec
adc
xchg
fwait
ret
add
xor
jp
mov
(bad)
xchg
repnz
or
scas
add
mov
or
cmc
ja
into
lods
cmc
ds
mov
sbb
shr
cmp
jecxz
das
inc
dec
pushf
push
mov
outs
mov
jbe
into
test
dec
pop
mov
xchg
fstp
test
or
push
rol
test
inc
jnp
lds
int
(bad)
mov
(bad)
or
mov
retf
xchg
cs
jno
and
sub
inc
push
ins
cmp
ror
hlt
(bad)
mov
pop
dec
arpl
stos
call
sub
sub
xchg
dec
adc
cmp
mov
sbb
xor
cs
ins
mov
mul
add
jbe
xchg
retf
iret
mov
aaa
xor
loope
test
mov
push
or
cmp
add
out
das
dec
out
xor
sti
test
je
add
or
test
sub
cmp
retf
inc
sbb
fdiv
out
xchg
loopne
fisttp
pushf
(bad)
and
mov
fwait
jmp
dec
adc
int3
and
lods
ins
cwde
dec
jge
pop
jnp
sub
ins
push
add
stos
hlt
nop
sub
cs
or
pop
jmp
inc
jae
leave
in
hlt
pop
mov
enter
pusha
ja
sub
sub
and
unpckhps
cmp
loopne
jo
lods
mov
ret
call
mov
jo
(bad)
adc
add
push
xchg
mov
mov
cs
sar
add
adc
out
pop
aam
dec
xchg
add
cmps
out
cmp
inc
rcl
mov
xchg
push
xlat
cmp
mov
scas
mov
shl
mov
(bad)
cmp
ins
dec
js
xchg
inc
mul
mov
and
dec
dec
and
in
mov
popf
in
xchg
stos
pop
inc
lods
sub
loop
mov
xor
sti
pop
mov
fdiv
push
jbe
movs
adc
sub
pop
mov
dec
xchg
dec
shl
imul
jo
cmps
pop
ret
inc
sbb
repz
cmp
sub
stos
pop
outs
mov
out
aam
or
test
aam
fs
push
outs
cmp
lea
mov
xor
and
jp
push
pop
mov
mov
jns
mov
dec
les
cmp
retf
mov
outs
test
dec
add
aaa
sub
sub
rol
scas
adc
cmps
and
sahf
mov
sub
std
shl
or
lods
fst
mov
xchg
mov
dec
add
in
jae
outs
jo
add
inc
xchg
(bad)
(bad)
dec
sahf
rep
jns
je
in
int3
mov
lea
movs
push
add
xchg
call
mov
push
inc
mov
xchg
ins
fst
sar
in
xchg
es
or
sub
pusha
adc
retf
sbb
push
dec
pop
ja
movs
iret
gs
or
sbb
in
imul
icebp
fs
xchg
pusha
(bad)
aam
ss
or
inc
or
dec
sar
xor
and
mov
fdivr
cmp
fmul
fstp
xor
mul
imul
ds
daa
or
push
mov
xchg
xchg
xchg
pushf
mov
adc
or
(bad)
imul
xor
pop
dec
fs
adc
xor
mov
daa
lock
inc
xchg
adc
mov
sub
loopne
setle
nop
hlt
mov
xchg
call
lods
xlat
aaa
xchg
lods
cwde
fcmovbe
daa
and
jns
jge
pop
cmp
add
nop
in
nop
add
ja
je
sti
clc
cli
lock
aaa
jp
pmullw
dec
mov
and
cmp
arpl
xlat
cmp
aad
ds
cmps
test
test
je
out
inc
cmp
mov
imul
adc
das
mov
lock
cwde
cmp
and
adc
xchg
movs
xchg
xor
mov
jne
or
sub
jg
jae
ds
pop
inc
jg
jg
or
div
fcomp
cmc
and
cmp
sbb
xchg
adc
mov
leave
(bad)
repnz
int
mov
mov
loope
fucom
sti
push
add
jb
sti
xchg
add
xchg
sbb
gs
(bad)
aam
cli
movs
fidivr
push
or
sbb
or
aad
fwait
lods
xor
and
(bad)
jmp
pop
inc
push
adc
xchg
int3
mov
repz
rcl
inc
pop
xchg
xor
pushf
mov
retf
inc
inc
mov
pop
and
repnz
iret
jne
sbb
ret
add
popa
xor
es
mov
(bad)
arpl
inc
sbb
pop
call
icebp
jge
inc
sbb
lds
mov
mov
inc
movs
int
inc
aam
mov
xchg
push
lods
daa
into
mov
(bad)
jl
sbb
pop
(bad)
(bad)
dec
xlat
adc
stc
clc
lahf
or
add
dec
inc
outs
xlat
loope
inc
cmp
adc
mov
pop
xor
cmp
imul
(bad)
xor
in
add
rep
lahf
inc
jno
fnstcw
ror
mov
loopne
call
jne
ins
ins
mov
sar
jg
push
sbb
test
xor
popf
xor
lahf
jmp
mov
sub
sub
sbb
je
ret
je
repnz
cmp
ss
inc
retf
pusha
test
dec
fwait
sbb
es
jb
rol
cld
repz
mov
ins
das
std
fstp
fisttp
sbb
aas
call
jp
idiv
in
push
loope
dec
cmp
popf
lods
xlat
ins
sti
test
mov
retf
stos
mov
lahf
fnstsw
add
sbb
add
xchg
movs
fbstp
xchg
ja
out
iret
push
and
push
sar
call
adc
inc
dec
xchg
cmp
pop
adc
mov
mov
stc
sbb
leave
clc
retf
pusha
mov
lock
mov
vpsubq
popf
push
(bad)
inc
(bad)
je
mov
xchg
out
xlat
test
jo
out
ja
jecxz
sbb
push
sti
(bad)
lahf
sti
lods
lock
push
sub
and
sub
js
cmp
mov
adc
or
xchg
test
pop
xor
test
or
das
sub
icebp
add
or
jmp
push
xor
pop
push
adc
rol
mov
push
ss
sbb
into
dec
jmp
jb
jb
inc
sti
xchg
shl
pop
and
pop
les
mov
mov
adc
dec
xor
pop
inc
mov
xchg
aas
jnp
adc
repnz
mov
inc
adc
mov
adc
test
(bad)
jmp
xchg
mov
repz
mov
jnp
and
adc
(bad)
leave
pop
jg
mov
jbe
call
fiadd
mov
mov
inc
push
pusha
jmp
fld
ins
sti
popf
enter
cmps
adc
ins
mulps
lods
mov
xor
mov
loop
dec
inc
movs
dec
les
mov
sub
in
ds
aad
jecxz
sub
outs
and
or
mov
push
mov
outs
cmp
mov
enter
pop
rcr
movs
and
shl
hlt
ret
test
mov
ret
jnp
xchg
cmps
(bad)
imul
daa
arpl
aaa
call
xchg
aaa
retf
inc
inc
cmp
mov
add
add
and
push
sbb
call
or
and
dec
xchg
jne
sub
jmp
rcr
mov
jl
dec
icebp
data16
cmp
dec
fnstenv
or
nop
jmp
mov
adc
(bad)
popf
call
out
out
cmp
ins
or
daa
xchg
pushf
aad
fcmovnb
and
pop
cmp
pop
aam
dec
jg
cdq
xchg
fnsave
xchg
push
or
pop
or
push
js
jnp
int3
out
pop
jns
pop
push
push
jmp
xchg
loop
rol
mov
fs
add
in
stc
xchg
xchg
dec
stc
pop
mov
les
call
ja
jnp
ror
adc
xor
std
xor
jmp
stc
lds
push
ret
sbb
loopne
sbb
sbb
inc
pop
cmp
aad
mov
jmp
push
lock
mov
ror
cld
cdq
mov
sbb
ret
xor
std
or
in
jl
les
cmp
cli
ror
ret
mov
push
xchg
push
mov
fbstp
push
inc
xor
mov
mov
mov
ins
pusha
out
jmp
inc
dec
sub
fs
scas
rcl
dec
mov
daa
add
ror
ins
imul
push
shr
js
jne
pusha
ds
mov
mov
mov
adc
mov
in
sti
dec
ror
mov
or
stos
or
mov
push
outs
sub
mov
in
cld
ja
jg
popf
popa
mov
(bad)
push
shr
dec
test
pop
cmc
push
push
cmp
push
cmp
repnz
mov
mov
lock
daa
mov
fcmovu
mov
daa
test
imul
mov
daa
(bad)
dec
shl
jge
push
mov
lods
mov
retf
push
adc
cmp
mov
outs
lods
push
mov
rcr
dec
sbb
ds
jp
inc
jmp
ret
cdq
mov
jecxz
pop
dec
out
jle
xor
lock
icebp
rcl
mov
pop
jp
aaa
jb
and
sar
fdivr
add
dec
add
jmp
push
ds
dec
inc
push
aas
push
mov
cmp
push
inc
les
dec
pop
scas
nop
sub
cld
inc
inc
cmp
and
(bad)
mov
cmp
and
test
in
out
cli
push
sbb
jmp
fsubr
add
dec
es
inc
enter
dec
mov
mov
mul
cmp
outs
jmp
js
cmp
cdq
adc
mov
lods
push
add
loop
pop
sti
xchg
je
inc
jmp
sbb
fistp
aaa
stos
push
dec
popf
ret
pop
jge
aad
mov
retf
jae
repnz
in
push
dec
pop
hlt
stc
inc
leave
movs
cmp
cmc
cmp
cli
pop
or
push
sub
test
cmp
inc
push
jne
inc
pop
fst
mov
iret
add
pop
pop
(bad)
adc
adc
mov
pop
mov
fisttp
call
sar
jge
mov
sahf
add
cmps
push
mov
jb
aas
sub
add
fmul
hlt
dec
mov
mov
dec
(bad)
jecxz
fs
cmp
cmp
movs
in
shl
or
std
mov
cmp
retf
xchg
scas
or
pop
sub
dec
or
xchg
rcl
xor
jge
pop
xchg
test
dec
or
sub
and
les
std
push
jne
sub
inc
mov
jb
(bad)
fstp
clc
pop
or
nop
pop
sbb
loopne
jbe
or
mov
fst
mov
pop
jae
bound
push
push
sbb
xchg
inc
gs
sbb
aad
adc
pop
pop
int
call
inc
fldenv
iret
movs
(bad)
push
sbb
inc
sbb
adc
dec
ss
int3
aaa
(bad)
enter
or
mov
add
lahf
xor
pop
mov
dec
and
hlt
les
outs
inc
cmp
push
test
cli
xor
inc
pop
xchg
lahf
mov
sub
mov
cwde
mov
add
inc
push
into
push
mov
imul
cwde
push
ins
jp
aam
xchg
(bad)
xor
call
call
cdq
(bad)
xor
lods
(bad)
test
and
pop
cmps
mov
sbb
out
pop
push
xchg
adc
cmp
jge
outs
clc
mov
in
jle
addr16
dec
dec
sar
push
retf
inc
pop
rcr
cmp
adc
(bad)
jge
jb
mov
push
imul
test
je
mov
addr16
js
pop
arpl
setp
sbb
sbb
test
cmps
cmp
ins
scas
add
jne
sbb
jle
test
xchg
mov
jmp
jl
add
aad
or
je
mov
sti
add
jp
into
push
cld
cmc
mov
rcr
lods
add
cdq
mov
or
jle
data16
movs
popa
sub
xchg
in
add
jle
sbb
lods
jle
popa
sti
dec
push
pop
fs
xchg
pop
xor
sub
dec
dec
mov
repz
int
pop
sbb
jno
ds
and
or
push
jns
push
push
iret
jl
gs
ret
outs
pavgw
neg
leave
sbb
mov
mov
dec
cmp
jp
or
(bad)
(bad)
retf
in
push
or
aaa
leave
mov
xor
xchg
mov
cdq
mov
add
cmp
xchg
jns
sar
leave
sub
sbb
loopne
inc
retf
es
push
cmp
out
xchg
lods
jmp
repnz
lahf
or
(bad)
mov
add
and
or
push
pop
add
cmp
push
xlat
dec
mov
and
jmp
retf
mov
(bad)
int3
xor
popa
ins
imul
ror
mov
or
or
pop
(bad)
jns
push
test
stos
lds
pop
xchg
les
jo
packsswb
out
in
add
call
in
mov
out
fnstcw
je
or
cmp
add
add
in
jmp
mov
int
and
xor
add
out
pop
pop
ds
sbb
jg
cmps
dec
inc
ret
add
movs
popa
push
das
adc
mov
into
mov
jmp
xor
mov
std
jmp
popa
lahf
sub
pushf
sbb
inc
test
test
js
loope
dec
dec
cmc
cmp
into
push
add
repz
aaa
adc
scas
into
movs
ret
pop
xchg
ins
test
mov
not
loope
hlt
push
imul
dec
xchg
jo
in
xchg
xor
stc
ss
fisub
xor
hlt
cmps
pop
xor
test
lods
mov
jno
and
pop
arpl
pop
or
movs
push
mov
in
sahf
jmp
adc
xchg
inc
pusha
ja
sub
fwait
jae
or
or
test
pushf
inc
pusha
(bad)
pop
in
add
pusha
jno
sub
or
jne
mov
rol
mov
ds
outs
mov
mov
fstp
bound
popf
and
adc
mov
and
js
repnz
int
xchg
fidivr
cmps
jl
pop
loopne
fcomp
pop
mov
iret
inc
dec
dec
int3
xor
inc
adc
in
lods
pop
adc
pop
imul
and
mov
jne
mov
sbb
mov
fisttp
inc
scas
sahf
dec
dec
lahf
scas
dec
hlt
int3
jg
mov
cmp
mov
xchg
adc
push
call
fcomp
xor
jmp
fcomp
fistp
xchg
cmp
sbb
cmp
lods
into
jb
and
neg
ror
ret
sub
xchg
mov
in
pop
rcl
pop
stos
aam
bnd
icebp
push
loop
and
cmc
dec
add
inc
jmp
xchg
or
scas
popa
addr16
std
pop
xchg
cmp
stc
out
xchg
out
pop
inc
pop
inc
daa
push
aas
mov
inc
fild
inc
int3
jg
out
in
fdiv
mov
dec
xchg
fbstp
fcom
dec
daa
lock
sbb
cli
sbb
jno
and
cdq
je
cmp
cdq
xchg
inc
lods
cs
in
cmp
mov
xchg
fwait
out
sbb
xor
fwait
mov
das
out
out
mov
arpl
sar
test
cmp
mov
cs
test
inc
jnp
out
ror
mov
xchg
sti
push
jmp
std
and
aas
sub
jnp
hlt
pop
retf
daa
movs
not
imul
xor
ds
lods
std
inc
mov
pop
mov
push
fcomp
sbb
sub
jmp
test
push
(bad)
rcr
inc
pusha
hlt
imul
adc
aas
adc
sbb
lahf
push
sti
cli
repnz
outs
push
pusha
dec
xlat
jge
push
jecxz
inc
lods
xchg
add
enter
inc
stc
mov
and
(bad)
retf
addr16
popf
lods
jge
mov
pop
outs
mov
add
xchg
pop
out
xchg
ret
sub
mov
leave
out
aaa
(bad)
stos
scas
add
dec
mov
mov
dec
pop
inc
dec
mov
pop
arpl
inc
(bad)
stos
dec
sub
sub
and
fmul
inc
test
push
mov
ret
jbe
ds
pop
enter
xchg
cmp
push
in
add
sub
sbb
jl
rcl
adc
iret
int
dec
fbstp
add
mov
pop
sahf
mov
addr16
mov
sbb
push
pop
aaa
xchg
adc
popa
push
stc
fisub
jl
pop
sub
inc
cmps
fucom
sub
push
fisttp
sub
syscall
sub
dec
xor
inc
and
test
push
or
test
pop
rol
push
or
pop
push
xor
aam
retf
scas
nop
sub
fnsave
sbb
and
cmps
pop
xlat
jo
push
mov
fwait
in
mov
jl
scas
sbb
mov
mov
rep
xchg
inc
lds
in
cmc
shr
dec
test
mov
mov
jmp
pop
or
in
inc
sar
xor
mov
pushf
fisubr
dec
gs
cmp
fsub
fsubrp
jp
imul
pop
sub
aas
sub
test
sub
add
repnz
xchg
dec
inc
or
imul
ror
xor
sub
inc
inc
test
les
mov
xchg
ror
aaa
or
loopne
cmp
mov
jnp
cmps
dec
pop
mul
test
aas
cmp
pushf
adc
mov
or
(bad)
addr16
lods
mov
cmp
sub
mov
(bad)
mov
movs
mov
add
sar
xor
in
xchg
xchg
sub
add
cmp
and
mov
sub
in
and
retf
cmc
push
out
mov
xor
mov
jb
rcl
cmp
jmp
push
adc
mov
sbb
push
xchg
or
mov
adc
imul
mov
sar
sbb
inc
and
(bad)
and
neg
and
push
rcl
sbb
shr
mov
sahf
or
push
rol
(bad)
vpunpckhwd
fcmovu
and
and
push
pmulhw
push
test
repnz
stc
mov
lods
scas
adc
ins
rol
int
sbb
sar
inc
jo
repz
or
rcl
aaa
loop
sub
cmp
sbb
cdq
loope
pop
repnz
mov
mov
(bad)
adc
cmp
ja
jmp
sbb
or
xor
pushf
in
xchg
lods
sbb
(bad)
mov
pop
sbb
inc
adc
outs
leave
neg
mov
ss
dec
enter
add
sub
lods
lods
or
cs
pusha
mov
mov
out
mov
(bad)
je
jno
fs
push
fstp
bound
aaa
mov
sahf
pop
pop
cmp
icebp
sbb
dec
sub
and
ror
add
loop
mov
mov
call
xor
cmovg
aas
xor
push
mov
rcl
xor
cmps
jo
or
jnp
fdivr
pop
movs
adc
push
data16
jo
or
rol
mov
pop
jns
inc
cmp
add
pop
mov
add
rcl
xchg
add
dec
jnp
cmp
or
cmpxchg
popf
jne
cmp
mov
pop
pop
add
jo
sbb
adc
pop
(bad)
adc
(bad)
(bad)
(bad)
adc
jge
push
push
in
ss
jae
hlt
out
call
inc
jne
jle
dec
mov
inc
jmp
fstp
push
and
in
add
daa
xchg
fcmovnb
mov
out
xor
inc
es
les
div
fwait
jmp
in
test
add
xchg
push
xor
cdq
(bad)
int
jae
int
in
adc
imul
sub
xchg
in
jge
push
fld
pusha
xchg
mov
repz
sbb
and
or
or
popa
xor
retf
cmp
in
or
pusha
cmps
or
jg
mov
(bad)
cmc
push
imul
mov
test
xchg
pop
and
popa
ja
shl
in
mov
inc
test
test
les
jle
pop
inc
jnp
sub
mov
or
leave
pusha
xchg
xlat
and
xchg
clc
(bad)
or
inc
nop
mov
lods
add
cdq
lock
loop
add
mov
scas
push
call
test
sbb
xchg
gs
xor
sahf
nop
adc
popa
push
jne
div
enter
xchg
das
xor
xor
aaa
xchg
sub
fld
stos
xchg
pop
int
jb
cmps
fnsave
call
sbb
dec
bound
jne
(bad)
pop
cmp
mov
pop
jno
push
out
aas
jle
cmc
fisttp
cmp
mov
dec
mov
fimul
sub
jge
aad
loope
aaa
and
test
cld
cmps
imul
and
push
sbb
sub
inc
cmc
nop
aad
sbb
mov
popf
cmc
pmullw
movs
mov
push
stos
scas
mov
jmp
retf
cs
xor
sbb
shl
out
imul
aam
clc
adc
cmp
lea
mov
mov
fmul
sbb
in
pop
(bad)
and
jb
sbb
inc
cli
adc
(bad)
lock
sbb
data16
cld
int3
outs
ficomp
clc
xchg
xchg
mov
sub
pop
inc
jb
out
jnp
or
push
adc
pop
inc
loop
sub
jns
cmc
lock
cmp
pop
push
push
pop
adc
jg
and
addr16
sub
stos
jecxz
pop
popf
mov
lds
xchg
cmp
push
mov
add
xor
gs
push
sbb
movs
movs
pop
dec
lods
sbb
xchg
icebp
ret
out
es
pop
stc
cmp
loope
mov
jle
jg
lea
pop
add
inc
in
mov
fnsave
mov
into
imul
sti
mov
jp
adc
(bad)
in
add
cmp
lock
mov
ficom
(bad)
(bad)
pushf
mov
inc
or
fisttp
jno
std
stos
xor
stos
pop
aam
les
xchg
ret
or
push
imul
xchg
mov
fmul
push
cmp
inc
cmp
call
adc
and
adc
sub
add
lods
cmp
mov
lahf
rol
or
in
outs
mov
pop
pop
inc
mov
push
icebp
pop
inc
adc
in
cli
adc
mov
inc
jb
xlat
jl
and
stos
push
std
mov
fidivr
xchg
pop
jnp
adc
ret
stos
adc
repnz
pop
adc
or
or
or
lea
and
or
sahf
lahf
stos
inc
loope
mov
and
mov
push
out
leave
idiv
and
outs
jle
(bad)
mov
xor
xor
cld
cli
xchg
fdivr
dec
sbb
jecxz
shl
adc
rep
or
pop
sbb
push
mov
(bad)
loop
test
adc
inc
and
and
or
iret
or
std
or
lock
pop
into
jns
addr16
das
int3
out
pop
cmp
stc
mov
repnz
bound
push
inc
cmp
ja
stc
int
jp
sub
push
out
xchg
sbb
pop
jnp
nop
aam
pop
add
jmp
jmp
cmp
add
in
add
or
int
xchg
std
pop
in
cwde
cmps
or
neg
pop
jnp
push
fwait
sahf
xchg
hlt
jmp
mov
mov
icebp
leave
rcl
(bad)
icebp
xor
xchg
add
mov
dec
std
call
cmc
and
jmp
imul
lods
mov
jns
inc
lods
inc
xor
hlt
std
mov
rcl
repz
mov
adc
iret
stc
add
in
xlat
cmp
scas
aas
mov
dec
sub
fimul
and
dec
je
push
add
sub
adc
sbb
adc
test
xor
sbb
xchg
push
and
stos
dec
sub
stos
out
push
add
ret
rcl
sub
adc
and
xchg
jle
jne
mov
cmp
mov
jle
sbb
dec
ds
mov
xchg
cdq
adc
(bad)
repnz
mov
call
dec
and
and
push
cmp
xor
stc
pop
icebp
(bad)
(bad)
(bad)
sub
and
into
mov
sbb
gs
repnz
jecxz
iret
aas
add
mov
push
mov
test
xlat
(bad)
fwait
and
shr
xor
mov
sub
jp
ins
mov
cmp
sub
(bad)
cmps
dec
dec
dec
mov
mov
aaa
cmp
xchg
and
aam
ret
stc
and
mov
fmul
pop
mov
pop
shl
xchg
ret
cmc
stos
dec
mov
fldenv
mov
retf
bswap
pop
push
jno
push
and
leave
or
fwait
push
inc
cdq
call
xor
cmps
adc
jecxz
dec
push
inc
and
(bad)
in
xchg
and
vpavgb
push
cdq
cmp
pop
out
repz
sbb
movs
xchg
cmc
fimul
mov
jae
mov
fwait
icebp
or
xor
sbb
stc
push
xchg
int3
dec
sub
add
mov
and
cmp
fcmovu
pushf
pop
mov
into
xchg
sub
mov
mov
add
(bad)
mov
pop
lock
ret
movs
push
pop
loope
popa
jmp
sar
mul
scas
hlt
imul
rcr
xor
sbb
sub
pop
adc
mov
push
fwait
shl
leave
pop
(bad)
pushf
pop
inc
xchg
xchg
cmp
popf
sbb
iret
and
adc
adc
(bad)
mov
push
in
and
test
mov
pop
cmp
daa
inc
sbb
mov
push
cmp
mul
jl
jb
pop
jp
out
or
retf
mov
jle
scas
and
mov
sbb
mov
in
pop
mov
push
js
add
mov
bound
mov
pop
mov
aad
int
(bad)
mov
jbe
out
outs
jb
mov
pushf
inc
push
lds
and
test
cs
es
push
adc
or
outs
cmp
(bad)
mov
lock
push
add
repz
mov
rol
popf
mov
outs
jae
cmc
sub
mov
mov
aam
push
push
cmp
leave
add
jb
out
inc
das
in
cli
xchg
adc
out
test
adc
dec
aad
pop
es
imul
xchg
mov
out
repnz
sahf
mov
mov
jl
clts
mov
or
mov
stc
push
inc
xor
shr
dec
mov
retf
call
icebp
lods
pop
lds
pop
das
repnz
imul
into
mov
mov
pushf
cmp
jmp
sbb
cmp
fsqrt
add
fs
mov
rol
call
shl
or
sub
fmul
in
xchg
clc
mov
push
imul
popa
mov
retf
jbe
sub
mov
aaa
jns
cli
inc
mov
inc
or
jmp
add
(bad)
push
xchg
nop
js
ja
(bad)
in
xchg
(bad)
jle
mov
test
push
jmp
fucomip
int3
xchg
xchg
outs
inc
out
pop
adc
lods
mov
inc
push
xchg
add
cmps
push
jae
dec
(bad)
jno
pop
jecxz
xor
and
arpl
ret
sti
pop
pushf
jmp
push
xchg
enter
and
scas
pop
ret
xchg
cmp
cmp
inc
add
lea
aad
jp
in
clc
enter
retf
lahf
cdq
(bad)
ffree
cmp
inc
rol
outs
daa
scas
jmp
push
cmp
xchg
fwait
jg
outs
xchg
sbb
push
mov
aad
add
cmc
mov
das
or
loopne
jb
sti
js
stos
fs
je
stos
xchg
stos
jno
sahf
(bad)
les
add
mov
dec
fild
add
cmp
outs
sub
mov
imul
mov
lods
ins
and
int3
push
xchg
addr16
push
stos
clc
out
fadd
rcl
add
pop
or
pop
cmp
adc
or
aas
das
div
aad
push
imul
xchg
sar
jne
dec
or
addr16
cdq
sar
outs
mov
add
dec
arpl
mov
inc
mov
dec
jmp
xor
mov
pavgw
cmp
cs
pop
mov
mov
inc
sbb
in
adc
mov
or
inc
mov
enter
mov
lahf
or
loope
call
gs
clc
mov
scas
pop
cmc
jne
and
arpl
subps
dec
jbe
xchg
or
retf
push
mov
neg
sub
inc
or
adc
jmp
test
mov
lea
and
addr16
repz
movs
xor
es
call
or
(bad)
clc
fcmovnu
mov
scas
add
mov
das
cwde
xor
test
ins
push
fs
jg
xchg
xor
mov
jp
mov
adc
test
ds
jns
xchg
push
pusha
pop
inc
mov
int3
clc
(bad)
xor
pushfw
stos
out
int
xor
xchg
cwde
jo
sub
mov
xchg
sbb
add
inc
enter
inc
pop
pop
sub
into
jmp
mov
repnz
xchg
neg
sub
rol
aad
scas
loope
pop
push
dec
xchg
and
sub
stos
adc
or
inc
mov
sub
jmp
ret
inc
int
jmp
clc
jecxz
inc
jmp
in
sub
xor
dec
xlat
stos
fidiv
mov
sub
fisttp
stos
addr16
and
lods
pop
xor
test
sti
cmps
mov
inc
mov
loope
dec
adc
or
stc
add
mov
push
(bad)
jmp
loope
jmp
and
push
push
(bad)
inc
push
sar
in
adc
push
jmp
ret
lods
outs
or
call
das
pop
repz
sti
aas
out
mov
aam
ss
jmp
xchg
mov
add
call
gs
mov
jae
inc
jmp
xor
repnz
(bad)
mov
push
das
or
sub
inc
or
clc
dec
jnp
push
adc
jl
fst
push
in
(bad)
mov
fcom
out
cmp
mov
or
loop
out
fwait
pop
loop
cld
sbb
test
and
out
mov
cmp
in
enter
hlt
sti
or
repz
pop
mov
push
(bad)
xchg
and
add
out
jecxz
test
int
and
push
ret
add
jg
and
fidivr
fdiv
sub
iret
pop
pop
in
mov
not
mov
rol
xor
(bad)
arpl
inc
das
mov
repz
xchg
xor
adc
mov
cmps
mov
inc
adc
and
call
in
push
add
cmp
mov
aam
jb
icebp
jmp
stos
fisub
adc
inc
mov
push
xchg
xchg
arpl
xlat
fstp
xchg
movs
adc
jbe
jb
cmps
sbb
mov
jne
mov
retf
and
xor
cli
mov
push
movs
cdq
cmps
or
inc
shl
jp
sub
mov
in
or
sbb
repz
adc
sub
in
push
lea
loope
inc
sbb
mov
cld
push
les
mov
jmp
aam
mov
mov
daa
add
xor
out
je
mov
cmp
sub
push
ins
pop
pop
jle
jae
cmp
xchg
int3
(bad)
cmp
cld
mov
sbb
mov
stc
stos
dec
mov
idiv
iret
xchg
es
jle
pushf
out
sub
pusha
pop
dec
push
inc
jae
hlt
inc
add
adc
and
leave
xchg
leave
in
pop
pop
out
lgdtd
inc
or
jns
cmp
or
rcr
inc
fild
imul
sbb
cdq
sub
retf
xchg
inc
mov
repz
push
mov
push
(bad)
sbb
ret
sub
adc
test
jmp
shr
xlat
into
pop
xlat
dec
loopne
adc
inc
in
faddp
fild
mov
adc
cmp
jcxz
lock
mov
add
(bad)
cdq
fs
add
push
mov
ja
(bad)
mov
xchg
stos
pop
fmul
xor
in
pop
dec
xor
jae
loopne
dec
repz
hlt
sbb
nop
test
pop
jmp
aam
ficomp
mov
mov
sub
imul
sbb
out
fbstp
sahf
sbb
jmp
icebp
fist
repz
xor
lahf
cmp
in
stc
xchg
xchg
jmp
(bad)
jmp
sbb
xor
mov
cld
and
mov
int3
aad
sbb
dec
dec
sahf
cmp
cmp
dec
icebp
and
loopne
mov
mov
addr16
std
addr16
lahf
test
popf
mov
stc
add
xor
sti
ja
inc
cmps
addr16
fwait
sbb
daa
ret
sbb
test
adc
fstp
cld
ret
fdiv
mov
pop
repnz
push
pop
std
fs
cs
bound
dec
pop
ror
(bad)
cmp
and
jecxz
or
jle
inc
lds
sbb
rcl
dec
retf
xchg
je
pop
jmp
adc
sbb
lock
push
mov
icebp
sti
lea
aas
ss
(bad)
js
test
inc
test
pop
sub
sub
adc
jae
add
enter
add
pop
aas
sub
(bad)
push
and
inc
inc
pop
or
in
jae
sub
push
inc
xchg
popa
cli
cmp
mov
xchg
jne
push
xlat
dec
fstp
mov
inc
dec
sbb
jg
repnz
inc
or
addr16
mov
add
adc
out
or
(bad)
cmp
sbb
dec
movs
loopne
add
aaa
cmp
cdq
xchg
ret
in
inc
shl
repz
fwait
mov
add
mov
jae
or
xchg
mov
cmp
sub
ins
pop
mov
or
push
xchg
adc
mov
mov
nop
test
mov
inc
mov
push
sub
push
xchg
cmp
imul
pop
stos
sub
pop
cmp
cmp
leave
sub
jbe
adc
fsubr
fcomp
shl
pop
inc
mov
repz
mov
or
hlt
dec
cwde
ror
fist
ins
xor
xchg
popa
mov
fwait
mov
cmp
imul
call
dec
add
sti
mov
ss
ss
fwait
imul
out
cmovb
ja
inc
enter
das
dec
mov
inc
cwde
mov
fwait
outs
js
aas
pop
mov
fidivr
rol
or
cs
stos
add
popa
(bad)
sub
stos
adc
cwde
pop
cmps
inc
adc
jb
adc
gs
repz
outs
sti
push
add
cwde
pop
mov
ss
(bad)
outs
xor
pushf
push
mov
cmps
jmp
adc
clc
cmp
jmp
mul
jnp
hlt
push
aaa
lea
outs
sbb
sbb
outs
les
push
in
push
pop
push
xor
push
lods
sbb
in
adc
push
dec
fs
imul
std
adc
movs
mov
or
in
jge
jle
call
cmps
mov
sub
sbb
ret
ss
push
sbb
imul
cli
pushf
out
sbb
push
mov
mov
mov
dec
pushf
pusha
ss
or
adc
repz
mov
popa
push
push
cmp
pop
sahf
mov
(bad)
lods
dec
mov
mov
or
sbb
push
push
sub
mov
jg
lahf
popf
aam
popa
(bad)
(bad)
fimul
rcl
into
mov
ins
mov
and
scas
push
fdivr
data16
and
ins
or
les
xor
mov
add
(bad)
mov
notrack
and
lods
mov
or
gs
jp
dec
leave
daa
ss
push
sub
mov
lea
push
ss
adc
mov
push
or
ret
mov
add
shl
lods
adc
cmp
dec
cli
jmp
add
push
test
dec
mov
shl
mov
daa
popa
pop
inc
std
(bad)
mov
imul
jmp
jmp
jg
loopne
gs
sbb
leave
pop
inc
dec
sti
scas
pushf
and
mov
jb
frstor
xchg
mov
int
push
into
mov
and
sbb
jmp
out
(bad)
shl
mov
pop
or
mov
adc
jg
fucomp
out
adc
inc
call
arpl
ins
jle
adc
xchg
mov
jo
or
jns
rcr
mov
sub
xor
mov
ds
enter
inc
xor
cli
es
jmp
je
inc
push
call
fsubr
inc
or
add
sbb
shl
dec
adc
push
js
inc
and
mov
xchg
inc
mov
mov
adc
xchg
cmp
jmp
dec
jae
ss
and
pop
nop
cmp
aad
out
shr
stc
idiv
repz
sbb
out
xchg
mov
lods
fs
imul
xchg
cmc
adc
(bad)
aam
and
shl
outs
xchg
stos
sub
mov
adc
xor
lock
fst
mov
aam
and
push
sbb
cwde
mov
call
sub
js
bound
sti
pusha
mov
(bad)
aas
call
jne
hlt
mov
sub
jns
sti
lahf
pop
and
bound
sub
adc
adc
and
mov
mov
and
cli
mov
dec
mov
call
mov
jecxz
(bad)
sahf
fsub
xor
mov
int
mov
shr
pop
mov
xchg
mov
sbb
jge
ds
and
lea
jge
dec
add
push
jl
xor
shl
push
fiadd
and
stos
mov
xchg
jge
push
call
xchg
inc
mov
jae
div
(bad)
(bad)
mov
out
nop
sar
shl
push
call
nop
jmp
fisttp
out
pop
push
adc
push
add
jne
jle
cdq
jne
repnz
inc
nop
jge
mov
xchg
mov
adc
xchg
dec
shr
ins
pushf
adc
out
or
or
js
mov
mov
xor
mov
pop
and
je
cmp
push
and
jle
lods
stos
stos
(bad)
shl
test
jge
inc
xlat
xor
retf
(bad)
icebp
in
stc
lods
cmp
adc
mov
ss
cli
(bad)
movs
mul
jmp
call
xchg
test
or
xchg
inc
in
nop
push
cdq
mul
push
out
pop
jnp
sbb
inc
aam
outs
mov
bound
mov
add
mov
pushf
adc
aas
mov
jle
cli
mov
push
pop
xor
loop
(bad)
mov
inc
scas
push
sub
mov
cmps
mov
test
bnd
pop
rol
mov
cmp
out
jae
inc
lahf
pop
add
jg
dec
int
push
mov
mov
mov
ror
mov
jne
inc
sub
retf
mov
sub
push
inc
gs
not
sahf
adc
daa
xor
jnp
addr16
or
sbb
js
out
std
into
jae
or
repnz
jb
jmp
xchg
ret
mov
or
fstp
push
out
sbb
mov
and
xchg
cli
mov
and
stos
inc
xor
(bad)
idiv
dec
cmp
pop
xor
mul
and
dec
loop
jb
or
(bad)
(bad)
xlat
ud2
bnd
xchg
adc
cmovae
sbb
pop
jecxz
push
sub
inc
mov
sbb
hlt
jno
clc
icebp
inc
jo
mov
jb
jne
fstp
int3
pop
fistp
xrelease
stc
jo
clc
(bad)
in
pop
push
xchg
push
retf
les
(bad)
mov
mov
xchg
jl
adc
push
pop
mov
leave
pop
addr16
and
mov
mov
stos
test
fsub
fld
inc
mov
dec
pusha
jmp
les
xchg
jp
pop
(bad)
mov
jno
or
arpl
fmul
cmc
out
mov
rcr
retf
or
inc
and
adc
movs
(bad)
jae
lods
mov
pop
mov
inc
(bad)
outs
mov
lahf
pop
pop
inc
jmp
sar
pusha
add
fist
pop
push
cmp
jbe
aam
and
loope
mul
loopne
inc
repnz
and
dec
ins
lods
lds
pushf
push
call
(bad)
mov
push
push
or
ss
dec
jns
mov
mov
and
je
(bad)
cmps
cli
or
sti
sub
add
inc
mov
stos
call
jnp
pop
(bad)
sbb
cmp
test
(bad)
ror
(bad)
mov
jmp
xchg
ja
lahf
pop
mov
iret
jl
imul
mov
or
pusha
mov
sub
inc
cmp
ret
loopne
pop
std
stos
sub
mov
popa
pop
std
repnz
push
xchg
bound
push
rol
jo
les
call
lds
test
or
pop
add
mov
xlat
aaa
or
std
shl
jnp
dec
add
bound
jecxz
inc
ins
jmp
shl
(bad)
dec
lahf
inc
popa
inc
or
and
xor
mov
jne
sbb
shl
loopne
jne
jb
daa
or
dec
mov
mov
cmps
and
call
and
mov
and
scas
dec
dec
fwait
inc
mov
inc
push
in
dec
dec
adc
mul
and
rol
cmp
mov
and
js
aad
mov
jne
sub
popa
test
inc
jno
dec
rol
jge
cdq
sbb
fcomp
add
cdq
arpl
aaa
jl
cwde
xor
iret
and
fist
hlt
dec
and
lea
daa
jmp
xchg
jl
sub
pushf
dec
rcr
pop
mov
fadd
ret
add
pushf
adc
adc
sti
shl
in
xchg
xchg
stos
call
(bad)
js
or
and
inc
pop
pop
push
mov
push
(bad)
mov
cwde
mov
out
pop
pushf
repnz
dec
pop
idiv
test
inc
fcmovnbe
in
test
mov
lds
and
or
jl
sbb
in
(bad)
cmps
mov
or
adc
stos
and
dec
popf
xor
mov
push
retfw
int3
(bad)
les
gs
cmps
sti
fild
enter
dec
mov
in
cwde
retf
inc
inc
dec
mov
not
(bad)
fistp
adc
or
xorps
jmp
mov
fisttp
int3
data16
push
dec
push
jge
inc
cld
push
lahf
fistp
push
(bad)
fld
(bad)
loopne
in
pop
out
movs
mov
xchg
fwait
into
stos
add
retf
sbb
jnp
out
xor
movs
aam
adc
cmp
(bad)
lds
inc
and
jl
lea
dec
push
and
add
pop
mov
lahf
pushf
xchg
mov
cmc
jg
rol
mov
mov
jnp
test
out
pop
mov
mov
daa
ja
stos
ins
sbb
and
pop
aam
test
xor
and
popw
inc
push
ins
jns
fldcw
fnstcw
cmp
pushf
adc
cld
pop
mov
ror
loop
sub
rol
cld
jl
movs
stc
mov
stos
js
mov
mov
and
idiv
jne
xchg
push
mov
add
cmovns
into
xchg
push
ret
inc
mov
inc
ror
add
jle
(bad)
je
jl
test
cmps
lods
xchg
sbb
test
xchg
call
jmp
cdq
aas
imul
fistp
cs
repz
fstp
ret
sti
enter
ds
fmul
or
pushf
loopne
jmp
dec
jmp
retf
call
push
push
adc
out
mov
inc
adc
out
cli
add
pop
mov
std
shl
jno
adc
cs
push
push
(bad)
imul
iret
imul
jns
mov
data16
jns
js
wrmsr
(bad)
fild
dec
inc
add
xchg
arpl
bound
or
frstor
outs
cmps
cmps
push
and
dec
inc
les
stos
in
(bad)
or
ficomp
push
sbb
(bad)
push
mov
sbb
cmp
xor
inc
test
xor
push
ret
outs
inc
push
fdiv
push
(bad)
mov
xor
push
sub
nop
nop
movs
mov
jecxz
in
mov
mov
sub
ret
pop
inc
out
cmps
lods
mov
fnstsw
or
into
xor
stc
sub
and
and
or
stos
hlt
push
mov
add
scas
fisttp
mov
ret
out
cwde
pop
repz
cwde
mov
jmp
in
fsubr
movs
sbb
int3
ds
inc
pop
dec
mov
xlat
adc
test
push
(bad)
rcl
(bad)
xchg
cmps
xor
cmps
cmc
mov
icebp
movs
hlt
jg
inc
fxam
loopne
dec
cmp
outs
arpl
pop
out
adc
adc
mov
add
sbb
jb
aaa
and
mul
mov
aas
arpl
mov
fild
and
fs
or
jl
out
pop
ds
or
pop
jg
repnz
adc
pop
jmp
frstor
les
shl
mov
push
inc
repz
xchg
dec
jnp
fdiv
(bad)
(bad)
jo
and
(bad)
sbb
adc
int
test
sbb
push
cmp
leave
pop
jle
jb
movs
dec
sbb
and
cmp
or
pop
xor
push
test
mov
sub
(bad)
cmp
push
sar
jne
sbb
mov
and
add
jmp
push
lds
les
mov
mov
mov
jb
daa
and
mov
mov
(bad)
jmp
test
jg
es
jo
outs
mov
(bad)
stos
pop
data16
jbe
or
and
rol
ins
push
mov
mov
add
cmps
push
xor
lds
cs
mov
outs
or
inc
pushf
repz
out
xchg
aas
aam
pop
and
nop
cmp
pop
or
les
mov
dec
sub
movs
out
div
mov
sti
aaa
mov
or
or
jnp
and
push
lds
jae
or
cli
movs
sub
ror
sub
adc
(bad)
push
outs
mov
push
popa
outs
jmp
jb
shl
shl
inc
popa
call
sbb
data16
out
jle
xchg
mov
jmp
minps
fst
or
and
push
cmp
in
add
imul
scas
adc
(bad)
mov
pop
(bad)
mov
mov
xor
les
sbb
pop
cs
pop
push
add
jle
pusha
push
mov
stc
jbe
pushf
inc
inc
movs
inc
data16
bound
retf
outs
fnsave
rcr
or
in
fild
cs
leave
jmp
mov
test
dec
enter
cmp
xor
in
or
iret
fs
not
mov
call
pop
fbld
je
xchg
jns
mov
test
and
jmp
retf
inc
iret
sub
xor
xchg
div
mov
mov
int3
mov
add
or
ins
mov
popf
mov
cmp
int
ficom
not
rcr
sbb
push
cdq
sbb
pop
jo
mov
adc
leave
sbb
push
ja
push
pop
retf
ss
fsubp
mov
xor
ss
mov
sub
push
mov
pop
iret
sar
jo
test
imul
scas
out
and
in
cmp
mov
je
xchg
sub
imul
cmp
je
std
jo
in
imul
pop
add
xchg
add
aam
in
push
mov
fs
push
pop
push
mov
ret
arpl
test
idiv
cmps
std
sbb
das
sub
sbb
push
out
jle
fidiv
pop
inc
cmp
in
mov
mov
push
daa
(bad)
mov
dec
scas
lods
fst
dec
push
aas
fdivp
rcr
xchg
cdq
retf
mov
pop
mov
sbb
dec
cli
and
xor
fisub
xchg
jge
and
inc
in
jns
aad
and
jae
mov
sar
xor
rcl
xor
sbb
inc
mov
mov
(bad)
ret
(bad)
mov
mov
jle
movs
test
int
and
js
lahf
(bad)
movs
push
and
dec
sub
jb
jp
test
push
inc
lods
mov
js
gs
or
out
call
push
hlt
fs
push
enter
adc
jmp
dec
add
lahf
rcr
mov
shl
mov
imul
iret
dec
sub
cld
ins
cwde
fsubr
outs
sub
(bad)
fcmovne
fisubr
cmp
xchg
rcl
jl
mov
(bad)
stos
sti
cmp
inc
mov
out
mov
sbb
in
xlat
jmp
psadbw
and
mov
movs
add
pop
jbe
outs
cmp
ins
lds
loop
sti
or
pop
mov
imul
int
movs
iret
(bad)
out
movs
dec
cmps
(bad)
mov
mov
stc
inc
add
outs
pop
jl
fstp
dec
cmps
cmps
dec
nop
addr16
sbb
inc
mov
adc
or
movs
pop
icebp
test
or
sub
int
jle
or
je
lock
ja
mov
dec
pusha
dec
cwde
cs
fadd
stos
out
mov
pop
(bad)
xor
sub
outs
jns
aas
fisttp
jae
pop
or
inc
dec
sbb
add
and
add
sub
aam
shl
(bad)
in
fdivr
dec
fmul
leave
mov
pop
xchg
add
inc
(bad)
pop
adc
mov
pop
inc
push
test
stc
push
pop
les
test
inc
lds
out
int3
add
aad
pop
sar
fwait
xor
mov
xchg
mov
and
cs
jns
aad
fstp
add
fcmovnu
outs
xchg
pop
mov
sahf
ss
ret
outs
adc
cs
mov
(bad)
mov
jmp
shl
lock
out
sub
inc
gs
pop
cmc
jo
push
out
or
mov
popa
loope
retf
cmp
dec
clc
sahf
lods
sbb
dec
fsubrp
xchg
mov
adc
push
movs
adc
test
dec
push
xchg
mov
pop
loope
xor
(bad)
gs
add
jecxz
jle
push
mov
fnsave
add
jmp
inc
bound
inc
mov
daa
jbe
or
(bad)
clc
jp
pop
fnstsw
push
sbb
adc
adc
sahf
push
push
mov
iret
and
and
rcl
inc
mov
out
xchg
js
int3
ja
stc
push
outs
aaa
mov
stos
add
push
mov
or
rol
cmp
ja
jecxz
adc
xchg
pop
push
rcl
mov
int3
pop
and
(bad)
cmp
sub
dec
push
inc
mov
mov
clc
push
test
cmc
jp
fist
into
mov
pop
inc
(bad)
cmp
test
loope
mov
xor
aad
pop
inc
mov
cmp
pop
retf
inc
inc
inc
pop
mov
dec
in
lds
into
(bad)
(bad)
lods
adc
arpl
shl
aas
dec
cli
inc
js
aas
in
in
pop
popf
stos
mov
cmps
push
cmp
sub
mov
test
mov
call
pushf
mov
arpl
pop
inc
mov
dec
fwait
fwait
xchg
sub
inc
sbb
retf
xchg
or
push
jle
out
cmp
in
sbb
sub
in
sub
inc
mov
sub
pop
jo
xor
mov
jnp
mov
(bad)
sbb
lea
xchg
and
sbb
xor
and
dec
in
mov
scas
out
mov
pop
ins
loop
xchg
pop
push
jae
xchg
dec
push
imul
dec
imul
hlt
push
adc
mov
ror
pop
nop
icebp
cld
cmp
add
push
sub
mov
inc
scas
das
test
out
jle
sub
jbe
xor
dec
retf
or
cmps
xchg
mov
or
push
mov
gs
loop
pop
sub
test
sub
cwde
jmp
js
push
dec
pop
mov
test
dec
mov
push
push
enter
fst
and
cmps
or
dec
outs
out
(bad)
in
popf
lock
or
inc
xor
inc
mov
pop
cmps
fstp
jns
mul
jno
xor
daa
fbstp
fwait
mov
iret
pop
outs
das
adc
cmp
dec
fstp
push
mov
pop
dec
push
push
je
xor
mov
cli
mov
mov
aam
mov
add
mov
mov
dec
jo
dec
jg
inc
ds
enter
lock
dec
inc
jecxz
in
enter
lods
sti
scas
adc
scas
cwde
(bad)
ficomp
push
lds
add
movs
sbb
mov
jecxz
scas
rcr
in
(bad)
arpl
shl
or
and
stos
pop
mov
repz
outs
jbe
push
mov
push
xchg
cmps
rol
xor
inc
pop
dec
mov
mov
push
and
push
fnstcw
addr16
call
sub
fdiv
rcl
or
mov
adc
int
je
in
nop
mov
adc
fisubr
adc
pop
scas
and
cmp
je
(bad)
sbb
pop
cmp
ss
lds
outs
push
cmp
mov
jp
dec
mov
xor
mov
or
sar
ret
mov
dec
clc
push
and
rcl
pop
cmp
rcl
stos
add
cld
jecxz
addr16
pushf
(bad)
cmps
aam
xlat
(bad)
mov
test
add
push
stc
add
(bad)
repz
cld
adc
or
push
mov
in
xchg
mov
pop
jo
int3
in
fsubr
cmc
mov
clc
arpl
fxch
das
aad
shl
cs
div
mov
push
dec
mov
enter
daa
adc
es
fwait
addr16
int3
jle
not
push
pop
int
(bad)
(bad)
iret
push
mov
loop
mov
xchg
shl
jg
sub
clc
or
add
mov
sar
jl
push
mov
inc
inc
arpl
in
xchg
or
mov
add
sbb
push
dec
test
dec
and
lahf
fsubp
cmp
jnp
dec
pushf
adc
icebp
ins
mov
and
shl
or
xor
jle
add
cmp
mov
popf
pushf
ror
xlat
xor
pushf
sahf
cmp
repnz
lods
daa
pop
sub
mov
jo
sub
lds
cs
scas
jbe
xchg
popf
ror
jns
and
scas
test
mov
and
das
push
sbb
xor
and
mov
mov
or
mov
shr
inc
dec
or
dec
(bad)
fadd
out
rol
aad
sbb
cmps
xchg
xor
shr
es
mov
dec
and
xor
push
adc
test
lea
nop
xchg
mov
inc
push
or
mov
icebp
(bad)
or
stc
test
add
mov
xchg
js
scas
sub
xchg
nop
push
dec
arpl
and
adc
xchg
outs
aam
test
gs
lods
pop
xor
inc
popf
xor
leave
stos
push
jne
mov
push
pop
je
sub
and
rcl
add
cmp
fmul
mov
or
pop
repz
ror
inc
inc
push
scas
mov
mov
imul
stos
lods
sub
mov
cmp
ret
enter
dec
cmc
sar
idiv
adc
mov
adc
push
xor
sbb
(bad)
mov
cmp
cmps
xchg
sbb
dec
mov
out
clc
(bad)
jl
je
jmp
xor
inc
pop
mov
push
cmp
daa
dec
(bad)
push
xchg
out
lahf
jg
mov
jae
pop
sub
not
mov
dec
repnz
int
cmp
lea
sub
xchg
inc
cmc
pop
pop
ret
jno
dec
jl
cld
cmc
test
stos
(bad)
leave
mov
test
sbb
das
and
jb
mov
jg
cmp
push
mov
pop
mov
dec
or
dec
inc
(bad)
or
repz
pop
unpcklps
je
or
nop
adc
ret
mov
xchg
adc
js
fistp
adc
out
test
retf
out
xor
sub
inc
jle
sbb
dec
jmp
imul
jmp
mov
ret
lahf
retf
xor
xor
and
ror
xadd
mov
mov
jmp
call
test
jle
jns
ds
inc
jp
adc
mov
mov
pop
push
inc
pop
in
mov
cmp
push
lea
and
and
jmp
adc
or
push
in
sar
sbb
pop
inc
test
mov
arpl
xor
inc
add
push
mov
xchg
je
pop
out
inc
icebp
imul
(bad)
icebp
mov
idiv
(bad)
xlat
jge
dec
mov
fild
inc
jl
mov
sbb
je
pop
in
pop
jb
xor
xchg
sar
mov
push
das
jbe
movs
pop
movs
push
xchg
sub
ins
pusha
ror
ror
mov
inc
cli
loop
sbb
int3
es
leave
mov
loope
ror
and
les
mov
fnsave
movs
or
daa
jle
mov
(bad)
mov
and
lea
jp
push
shr
outs
and
sub
je
mov
jo
int3
inc
adc
ret
jecxz
stos
outs
aam
loope
inc
push
ret
shl
rcr
sti
lods
cmp
push
push
enter
xchg
pushf
scas
adc
leave
lahf
stos
jmp
adc
mov
call
dec
in
jecxz
movs
movs
(bad)
loop
cmps
outs
sub
popf
inc
cmps
sub
aaa
jl
xchg
pop
in
loop
jno
and
xor
xchg
rcl
fcmovnu
cmp
pop
mov
or
cmp
jp
mov
cld
mov
cmp
idiv
test
movs
adc
jne
(bad)
ficomp
sub
adc
jnp
in
or
xchg
xchg
mov
ret
mov
ja
das
and
cmp
ret
pop
rcr
imul
call
mov
mov
pop
sub
dec
add
stos
push
jbe
cmp
gs
dec
stos
inc
mov
cmc
ret
add
sti
sub
push
adc
mov
iret
jmp
(bad)
xor
ins
stos
outs
mov
pop
jae
sbb
mov
xchg
rol
sub
outs
call
push
lods
imul
ds
jnp
stc
mov
repnz
cld
push
mov
sbb
and
test
push
ret
hlt
xchg
movs
outs
adc
stos
imul
cdq
outs
imul
add
pop
xor
xchg
and
push
sub
jmp
sub
adc
retf
iret
push
popa
cwde
xlat
add
gs
cld
xchg
push
push
adc
rcr
jb
or
pop
add
test
or
jle
mov
jae
xchg
push
(bad)
popa
xchg
ret
int3
mov
test
out
das
add
pop
rcr
pop
jmp
loop
outs
fistp
pop
inc
mov
cmps
push
and
cmp
(bad)
cmps
add
sahf
pushf
std
push
cmps
push
add
jg
sub
cmp
ret
xor
pop
out
mov
loop
in
push
xchg
popa
aaa
retf
js
push
icebp
mov
sbb
mov
pop
popf
or
hlt
or
jmp
fld
and
inc
daa
int3
sbb
test
inc
shr
ss
cmp
cli
leave
outs
cwde
xchg
rcr
test
mov
pop
sar
fimul
cmp
and
call
jmp
push
retf
jnp
ret
push
sub
out
popf
and
sbb
pusha
mov
dec
cli
mov
jbe
mov
jge
sub
hlt
pop
add
dec
pop
dec
pop
sti
mov
fisubr
inc
dec
mov
push
pop
mov
mov
out
pusha
daa
jle
es
in
mov
mov
dec
add
sbb
push
mov
ins
int
push
inc
push
aad
loope
sahf
mov
adc
ins
and
inc
shr
and
in
repnz
adc
sbb
fldenv
test
sbb
add
ret
cmc
push
cli
add
outs
int
sbb
cmp
adc
inc
and
push
sub
ror
iret
test
daa
pop
jp
cmps
cli
retf
mov
add
jb
retf
popf
or
cmp
xchg
jbe
jmp
xor
aam
mov
in
jl
jb
clc
loopne
sub
(bad)
jecxz
mov
cwde
xchg
jo
cmc
mov
adc
out
mov
cmp
fcom
cwde
cmc
mov
push
icebp
test
pop
pop
mov
adc
das
push
stos
sti
fisub
xor
and
and
sbb
add
push
(bad)
(bad)
pop
push
dec
mov
(bad)
(bad)
std
xchg
add
pop
mov
pop
ror
data16
jmp
mov
or
les
and
push
aaa
(bad)
leave
mov
gs
dec
stc
push
xchg
xlat
inc
add
jns
lods
mov
lods
push
sbb
jo
add
test
mov
loope
sbb
add
and
push
mov
sbb
add
scas
mov
pushf
rol
xchg
xchg
jmp
jge
jo
or
mov
cmp
jecxz
add
pop
adc
fist
adc
fld
cwde
ins
jecxz
(bad)
mov
rcr
cmp
adc
add
call
call
jne
js
test
xor
sbb
jg
mov
pop
(bad)
rcr
int3
dec
push
cld
and
dec
test
or
or
pop
sbb
mov
mov
fisttp
cmp
push
sar
mov
loop
xchg
call
adc
dec
call
mov
sbb
pop
push
inc
sub
xor
mov
cmp
xchg
cmp
jge
add
cmp
xchg
inc
fnsave
dec
imul
lock
and
jae
cmps
sbb
pop
and
or
das
fldpi
lea
ins
arpl
and
(bad)
in
add
adc
popa
outs
dec
test
add
aaa
xchg
(bad)
pop
out
pop
mov
xchg
loop
stos
mov
jmp
xchg
xchg
and
xchg
sbb
jno
test
adc
push
mov
jns
dec
test
scas
and
xchg
push
mov
jnp
push
pop
or
adc
int3
out
jmp
cmp
and
jno
dec
fcom
cli
cmp
stc
sub
add
sbb
bound
pop
sti
jmp
sbb
ret
xor
push
mov
out
inc
les
add
ja
outs
lea
cmps
xchg
pop
cmp
loope
std
add
mov
cli
in
mov
pop
hlt
ret
je
inc
dec
pop
outs
out
pop
clc
xor
cdq
pop
mov
push
out
sti
int3
xor
mov
jle
xchg
(bad)
(bad)
aas
fcomp
and
xchg
pop
in
jle
aas
fsub
dec
sub
xor
test
mov
mov
sub
jae
or
sub
ficom
ret
push
mov
std
lds
aad
mov
out
inc
or
rol
fist
push
xor
dec
add
inc
pushf
fstp
mov
outs
or
int3
cmp
call
adc
and
pop
pop
out
jmp
xor
(bad)
out
scas
jns
or
or
outs
shl
cmp
mov
push
adc
or
sub
xor
mov
fldcw
ins
add
scas
(bad)
ins
ret
js
bound
mov
retf
xchg
or
pop
adc
les
mov
rcr
stos
push
mov
(bad)
fcomip
sub
nop
pushf
inc
mov
mov
or
add
and
pop
mov
mov
jb
fwait
push
lds
cmc
cmps
and
shl
mov
jl
loope
call
(bad)
addr16
loop
mov
xlat
xchg
jmp
xor
and
lds
movs
xchg
cmp
xlat
jmp
and
aas
xchg
movs
jbe
loop
pop
jmp
cs
cwde
mov
inc
adc
mov
push
mov
adc
loop
inc
sbb
test
je
mov
push
retf
ss
std
in
in
rcr
xor
dec
mov
int3
sub
push
pushf
jns
jns
xor
and
push
rol
clc
add
sbb
ret
xchg
jo
loop
push
nop
dec
pop
rol
jb
les
or
xor
mov
sbb
adc
dec
fsubr
loope
xchg
addr16
xchg
call
dec
push
test
dec
lods
std
cmp
mov
fscale
inc
repz
repnz
xor
loopne
leave
jp
jb
inc
cmps
dec
fist
sbb
ins
ficomp
enter
(bad)
jnp
lock
adc
and
xor
push
in
fyl2xp1
addr16
xor
outs
sti
test
xor
sbb
dec
and
sub
sbb
adc
jmp
mov
inc
shr
(bad)
mov
sub
adc
mov
push
mov
gs
loopne
pusha
inc
inc
adc
push
out
cmp
loop
inc
jmp
arpl
mov
popf
sub
dec
es
stos
push
call
rcl
and
jp
mov
sar
mov
cmp
retf
cmc
cmp
cmp
test
idiv
mov
mov
out
jmp
add
repnz
xor
aaa
mov
sub
sub
loopne
out
std
in
cdq
lea
and
and
push
loope
inc
mov
call
popf
popf
rcl
mov
mov
fs
jmp
jecxz
icebp
push
jg
or
shl
dec
into
mov
outs
jmp
sub
retf
xor
pop
repz
pop
repnz
inc
lahf
fs
inc
jnp
arpl
shl
xor
cmp
or
push
and
out
fsub
pop
pop
push
int3
out
clc
mov
push
ins
outs
repnz
jbe
jne
scas
cmps
pop
hlt
inc
call
loope
ret
pop
or
adc
mov
icebp
xchg
mov
das
sar
jl
clc
mov
(bad)
out
sar
repnz
sbb
jmp
inc
loop
test
test
inc
sub
in
and
mov
xchg
ret
bndldx
dec
adc
cmp
sub
jo
and
jge
push
fwait
mov
cmp
(bad)
sbb
push
cmp
mov
inc
outs
mov
aaa
dec
jmp
(bad)
adc
sbb
mov
jmp
out
outs
sahf
push
or
xchg
dec
retf
sar
cli
test
push
mov
pop
imul
int3
mov
or
inc
pop
inc
inc
push
mov
stos
jne
lods
jnp
cmp
add
ror
nop
mov
leave
sub
sbb
mov
cmc
mov
(bad)
scas
in
sub
adc
sbb
enter
adc
xor
in
cmps
ja
xor
dec
fcomp
push
mov
dec
sub
add
push
fdivr
push
test
sub
cmp
pop
pusha
rsm
xchg
les
cmp
in
je
shl
les
outs
aam
bound
dec
cmps
push
sbb
adc
(bad)
in
sbb
ficom
lahf
outs
out
aam
ss
pop
adc
xchg
xor
ds
mov
push
jp
adc
dec
push
mov
mov
outs
cmps
data16
lods
jne
sbb
add
xor
dec
not
idiv
es
mov
xchg
pop
jle
push
ins
call
mov
push
je
add
cmp
push
xchg
xchg
xor
shl
mov
scas
je
jno
ins
scas
outs
test
inc
cmp
jae
mov
add
(bad)
(bad)
mov
jns
fadd
lods
fxch
push
xor
push
jecxz
or
aaa
fistp
sub
xchg
xchg
fnstenv
scas
inc
pusha
dec
push
inc
enter
cmp
jecxz
pop
inc
in
das
scas
jo
pop
icebp
stos
lds
out
fcomp
and
stc
pop
xlat
iret
lea
sti
add
inc
sbb
idiv
dec
ja
jbe
pop
fucomp
les
pop
sub
movs
jmp
inc
test
adc
add
cwde
les
scas
je
pop
xlat
in
es
xor
test
fucomi
dec
call
cmp
out
ss
sub
bound
inc
cmp
mov
int
jb
popa
icebp
call
adc
aaa
xchg
add
and
inc
or
movs
mov
into
cmp
xlat
and
mov
jbe
(bad)
cmp
int3
add
lock
mov
mov
sbb
xor
test
repnz
daa
popa
xchg
sub
inc
out
pop
inc
xlat
sbb
mov
jns
xchg
es
fidiv
mov
adc
cmp
loopne
aad
pop
sbb
scas
call
std
dec
xchg
arpl
call
push
icebp
(bad)
jo
(bad)
or
ins
aaa
or
sbb
inc
lods
hlt
or
inc
dec
lods
enter
pop
or
aaa
xlat
pop
(bad)
mov
and
and
inc
push
retf
cwde
pop
ins
jg
(bad)
scas
fs
mov
inc
dec
jo
mov
dec
cmp
test
imul
and
push
mov
or
ret
pop
and
jle
lahf
bound
loope
aas
cs
adc
xchg
cmp
pop
mov
stos
cld
stc
loope
cmp
fs
fwait
out
add
push
xchg
sbb
add
pop
mov
fdivr
dec
xor
sti
dec
xor
test
add
push
lea
mov
push
scas
dec
mov
sar
push
retf
mov
repz
xchg
addr16
lods
lea
dec
ds
test
test
mov
inc
xor
push
jnp
mov
lods
and
dec
sar
add
cmp
sar
sbb
sub
sahf
or
sbb
mov
retf
and
aas
dec
or
dec
cmp
sub
or
stc
cmp
inc
test
sti
out
pop
sbb
out
pop
hlt
or
shl
or
push
in
mov
cmps
ss
xchg
mov
push
cmp
cwde
sbb
inc
dec
fsub
ds
test
fucomi
sbb
or
ss
in
call
call
xor
ret
out
adc
pop
(bad)
ins
xor
pusha
mov
jle
mov
gs
outs
rcl
fs
xor
mov
mov
push
xor
int3
fcmovnbe
jmp
lea
fsubr
loope
in
pushf
xchg
xor
push
push
mov
lahf
aad
dec
add
and
sub
loope
mov
in
int3
pop
lods
jp
loopne
jno
neg
inc
leave
pusha
xlat
(bad)
std
in
push
mov
jp
js
mov
dec
jmp
inc
je
xlat
repnz
lahf
and
cmps
and
inc
dec
jno
sbb
enter
pop
hlt
outs
xchg
cwde
ins
mov
sub
or
cld
mov
dec
fucom
aaa
pop
sub
sbb
lods
into
loopne
lods
add
push
icebp
xchg
cmp
into
sub
clc
repnz
fimul
imul
jecxz
add
or
push
shr
call
ins
outs
mov
aam
mov
mov
jb
sub
je
leave
sub
mov
jg
and
pop
loope
adc
in
inc
lea
clc
sbb
push
dec
div
sbb
xlat
mov
lods
or
scas
(bad)
icebp
les
mov
mov
cmp
ficom
icebp
ja
es
loop
dec
test
lock
(bad)
cld
xchg
aas
push
jmp
rol
lods
or
or
xor
into
ficomp
lea
xchg
cli
test
and
in
xchg
retf
popa
imul
sub
fwait
shl
cld
pop
adc
pop
std
outs
pop
dec
push
mov
ret
jle
sub
or
icebp
xor
jmp
aaa
bound
xchg
enter
cmps
inc
aam
je
pop
fs
xchg
xor
in
loopne
jmp
sub
push
jmp
(bad)
cmp
nop
pop
pop
mov
mov
xchg
rcl
pushf
cmp
call
add
dec
out
movs
test
inc
aam
sbb
push
rdtsc
loope
jmp
out
cmps
cld
mov
imul
lock
movs
jecxz
ins
movs
les
xor
sub
outs
jg
jo
idiv
test
mov
jmp
pop
cdq
in
sub
imul
inc
fwait
in
cmp
and
out
cli
push
xchg
pop
ror
in
push
mov
outs
nop
adc
movs
xchg
je
xor
mov
or
mov
std
mov
mov
xchg
popf
pop
pusha
pop
ja
adc
es
aaa
mov
mov
dec
scas
icebp
les
push
xchg
imul
fwait
fwait
xor
in
pop
or
mov
or
hlt
xor
aaa
lahf
enter
scas
fbld
jmp
shl
xor
dec
mov
push
in
jo
mov
add
lods
movs
les
push
in
clc
nop
xchg
psubq
fldenv
cmp
mov
mov
fwait
push
add
loopne
xchg
jae
lods
test
mov
cmp
aas
jg
rol
inc
scas
(bad)
xor
outs
sub
jl
adc
pop
jmp
mov
jl
jmp
aas
and
out
jg
jp
add
loopne
popf
xchg
iret
sbb
inc
int3
cmp
test
sub
inc
enter
int
cmp
loopne
push
sbb
mov
hlt
test
cli
mov
cmp
add
jb
in
movs
int3
sub
sub
xor
imul
adc
sub
adc
fdiv
push
mov
stc
shl
pop
push
std
xor
xor
cmp
pop
test
inc
cdq
push
mov
icebp
mov
xchg
mov
push
rcr
mov
mov
push
cmps
sbb
in
jno
hlt
push
jle
mov
repz
test
inc
mov
dec
mov
inc
pop
ins
mov
mov
aad
mov
and
call
sbb
mov
in
ret
lds
test
ret
pop
or
sbb
cmps
stos
mov
cli
popf
ret
sbb
(bad)
pop
mov
(bad)
iret
or
cld
ins
xchg
test
or
call
jg
out
or
icebp
inc
inc
xor
mov
test
cmp
push
and
in
(bad)
push
mov
sbb
inc
hlt
cld
aad
les
call
adc
sbb
gs
sbb
xor
scas
lock
pop
clc
and
mov
aas
rcl
imul
cli
jle
ds
add
clc
pop
stos
mov
jne
ret
jp
jmp
sti
ins
mov
rcl
xor
adc
xchg
inc
test
fisub
jg
call
ja
sbb
in
(bad)
jg
push
fidiv
loope
sub
mov
icebp
sbb
retf
cmps
lds
jmp
xchg
or
icebp
xchg
std
mov
dec
lahf
add
call
add
push
ds
in
movs
mov
mov
and
(bad)
loop
repz
mov
xlat
icebp
fist
sub
sbb
(bad)
cmp
xchg
(bad)
lds
mov
int
inc
lock
mov
imul
out
sub
test
int
test
mov
dec
or
inc
in
pop
pop
xchg
clc
cld
scas
jmp
(bad)
pushf
ins
push
sub
fld
sub
jno
cmp
les
loopne
dec
mov
xor
aaa
aam
add
pop
loop
add
sbb
xor
out
aad
push
xchg
or
lods
aam
outs
movs
mov
jnp
mov
cmp
dec
sbb
mov
movs
xchg
fldenv
into
icebp
aad
mov
xchg
mov
shl
test
push
retf
add
adc
fisub
sbb
pop
inc
mov
(bad)
jnp
mov
inc
aaa
ins
jne
outs
pop
arpl
call
cmp
add
pop
sbb
std
mov
xchg
push
cdq
packssdw
and
push
adc
je
xchg
les
mov
mov
add
mov
cdq
retf
dec
add
popa
inc
retf
or
(bad)
stc
adc
ror
inc
movs
and
pop
das
ror
in
hlt
fidiv
pop
sbb
and
cmp
inc
aas
mov
loope
lods
std
xlat
push
pop
retf
out
mov
or
sub
push
cmp
sahf
xchg
or
(bad)
fxch
jmp
xchg
pop
xchg
sbb
ret
mov
adc
dec
jns
cld
or
daa
stos
stos
popa
(bad)
not
rcl
adc
test
push
mov
fiadd
gs
mov
call
jge
lock
jge
and
xchg
or
popf
es
mov
pop
movs
push
or
pop
mov
pop
sbb
ret
nop/reserved
mov
cdq
push
push
and
aam
push
cmps
inc
push
inc
cmp
lods
shl
mov
jp
mov
jne
jle
cmc
pop
fcomp
inc
call
popa
sti
fmul
add
call
cmp
ja
push
shl
arpl
icebp
mul
push
jno
adc
nop
sub
adc
lock
pop
outs
js
retf
and
aam
outs
mov
or
or
or
pop
sub
jecxz
aad
stos
mov
movs
rcr
mov
sub
and
and
hlt
icebp
loope
jl
aad
sbb
clc
out
test
movs
dec
clc
dec
inc
mov
pop
or
or
jnp
in
popa
pop
mov
in
fisub
and
lahf
adc
dec
jne
lds
inc
inc
ins
(bad)
fwait
push
and
ins
hlt
in
add
sub
lahf
inc
jbe
xchg
nop
arpl
mov
jp
aaa
fadd
std
xor
dec
inc
cmp
cmc
dec
in
scas
and
test
and
lock
adc
xchg
pop
add
dec
mov
xor
cmps
loopne
mov
xor
icebp
lods
fisubr
and
cmp
daa
jge
ret
jge
les
in
mov
aad
inc
or
fnsave
sub
pusha
js
lds
cmp
nop
and
movs
je
dec
or
loope
pop
cmps
inc
(bad)
fs
call
mov
in
in
sbb
aad
or
add
div
dec
mov
and
outs
imul
sub
and
out
imul
test
sub
arpl
movs
adc
pop
dec
mov
daa
loope
or
lods
adc
inc
mov
cmc
lds
fadd
cmps
pusha
add
sub
icebp
stos
dec
jne
pop
push
sti
test
loope
jp
int3
xchg
dec
pop
retf
fisubr
aas
pop
mov
inc
xor
push
and
hlt
push
mov
cmp
out
mov
lds
jp
daa
jns
ins
jno
cli
fprem1
sbb
movs
xor
xchg
sub
sbb
cmp
mov
sub
add
sar
mov
cld
movs
cmp
mov
test
pop
and
sbb
aas
sbb
or
bound
jae
mov
dec
mul
in
enter
out
mov
mov
inc
(bad)
aas
ss
jno
fld
or
dec
push
ds
sbb
dec
fild
xchg
jmp
lahf
xchg
movs
ins
mov
js
pop
and
ja
and
sbb
rcr
imul
hlt
and
fisubr
mov
xor
jmp
add
cmp
(bad)
lods
cmp
sub
pop
mov
jae
jl
(bad)
gs
das
xlat
add
add
sbb
mov
ins
and
pop
push
pop
pop
xor
sub
pop
add
and
out
test
inc
in
cmps
daa
and
aas
pop
inc
mov
xchg
dec
pop
ins
inc
or
pop
shl
cld
pop
in
and
fsubrp
mov
pushf
dec
cdq
je
mov
gs
jg
mov
imul
jns
push
bnd
inc
or
mov
dec
in
outs
xor
mov
dec
mov
sahf
outs
inc
mov
ret
mov
retf
xchg
or
js
add
(bad)
retf
xor
push
xor
cmc
fs
inc
stos
std
test
data16
sub
sahf
mov
test
inc
and
add
mov
cwde
popf
push
cs
pop
sar
push
cmp
mov
cmp
inc
retf
aaa
loop
push
pop
into
pop
jle
and
mov
add
lea
shl
adc
js
cmp
adc
sub
xor
aaa
je
mov
xchg
xor
inc
sbb
fild
sbb
mul
fisttp
imul
imul
lods
enter
in
inc
fbstp
nop
push
popf
jae
in
dec
mov
repz
lds
sar
sub
shl
xor
arpl
add
xchg
mov
add
jecxz
mov
sbb
xor
fs
stos
dec
pop
shr
stos
repnz
jnp
stc
imul
loope
pop
push
outs
inc
scas
sbb
pop
pop
in
iret
outs
xchg
dec
mov
pop
imul
cmc
jp
mov
outs
jno
mov
fwait
add
mov
push
xor
xchg
shr
movs
retf
mov
fsubr
xor
cmp
push
sub
sub
sahf
xchg
(bad)
in
mov
sti
iret
das
cmc
fadd
test
pop
jmp
movs
cmps
imul
inc
in
pop
icebp
mov
mov
push
ds
outs
add
and
mov
ins
cmp
pop
push
pusha
push
inc
and
(bad)
scas
in
cdq
mov
push
bound
out
mov
sti
inc
or
mov
dec
int3
mov
lea
sar
cmp
mov
jl
adc
into
out
cmp
dec
fdiv
es
or
fidivr
sub
inc
adc
mov
cwde
call
loopne
mov
mov
adc
or
xor
cs
pop
xor
int3
aad
pop
daa
adc
repz
inc
adc
push
inc
mov
js
popa
push
jne
out
fmul
or
mov
jecxz
mov
adc
add
mov
push
add
(bad)
mov
cwde
dec
sahf
cmc
ss
(bad)
aaa
outs
push
imul
mov
jecxz
fadd
ret
popa
test
mov
and
or
mov
jge
out
jo
or
daa
xchg
stos
inc
in
(bad)
sub
adc
movs
loope
(bad)
cs
bound
cld
call
lea
mov
aas
xchg
push
cmp
mov
xor
adc
(bad)
mul
push
mov
and
stos
ins
pop
add
mov
loop
retf
cmp
enter
lods
add
aas
mov
jb
xchg
jecxz
inc
sub
pop
test
out
in
sub
outs
fsub
sub
int3
xchg
or
push
ja
hlt
in
xchg
jo
(bad)
xlat
test
inc
sbb
inc
xor
(bad)
push
xchg
sahf
sbb
jg
outs
sti
xchg
retf
sub
movs
arpl
hlt
add
xchg
ret
bsf
sbb
icebp
ret
pop
fdiv
shr
fistp
cmp
retf
and
int
repz
idiv
pop
mov
xor
inc
enter
movsx
jbe
outs
cld
mov
or
lods
pushf
outs
add
push
retf
xor
movs
and
mov
pop
cmps
dec
and
push
or
pop
cmps
add
or
cs
push
sub
jno
sub
test
jno
mov
mov
aam
nop
test
lahf
xchg
jae
push
stos
fsqrt
out
out
jb
arpl
dec
or
pop
repz
sti
inc
mov
out
not
mov
jmp
ret
jb
out
xchg
dec
popf
mov
gs
stos
stos
push
aas
xchg
(bad)
sub
aaa
gs
mov
sbb
ror
and
and
mov
pop
push
mov
(bad)
adc
cmps
cmp
push
stc
push
movs
sar
jns
xor
add
and
sub
add
aas
jns
pop
jmp
cdq
adc
and
stos
das
leave
call
cmp
and
js
es
pushf
xchg
adc
call
adc
stos
cmp
push
jge
add
es
xor
cmp
aaa
xchg
mov
pop
jecxz
mov
mov
add
fs
(bad)
mov
aas
arpl
jmp
in
pop
gs
js
mov
xor
movs
(bad)
dec
out
dec
and
mul
pop
sub
outs
lds
push
test
test
or
stos
dec
inc
inc
xchg
mov
sub
pop
clc
pop
leave
push
pop
popa
sbb
popf
lods
es
in
mov
data16
dec
inc
int3
daa
std
push
adc
mov
sub
jnp
pop
or
xchg
iret
mov
call
popa
adc
and
mov
and
adc
mov
mov
loopne
aaa
jge
add
mov
mov
pop
or
inc
les
xchg
fild
xchg
int3
outs
mov
inc
xchg
cld
mov
xor
add
mov
mov
jnp
jmp
lahf
mov
fisttp
not
lods
jl
dec
or
push
mov
loop
dec
mov
jns
dec
(bad)
aad
cmp
pop
push
fwait
xchg
mov
dec
add
ins
scas
mov
push
and
out
mov
xchg
adc
sti
sbb
push
call
xchg
popf
dec
sahf
cmp
xchg
shl
and
stc
stc
(bad)
mov
cmp
fiadd
fwait
mov
rol
xchg
icebp
push
xlat
sbb
inc
sbb
fwait
and
out
adc
mov
cmc
cmps
cmc
dec
fbstp
das
test
adc
sbb
(bad)
fidiv
aam
push
xor
and
aad
rol
or
gs
loop
add
(bad)
retf
mov
scas
out
sbb
push
(bad)
icebp
fimul
adc
scas
retf
sbb
dec
mov
mov
popfw
je
adc
push
aam
outs
mov
pop
cwde
pop
aad
hlt
pusha
(bad)
out
je
in
lods
and
and
(bad)
and
mov
scas
test
fbstp
mov
mov
imul
and
es
je
cmp
data16
icebp
aad
pop
les
cmps
lahf
es
jmp
cmp
cwde
jecxz
pop
dec
sbb
sbb
push
dec
enter
iret
mov
push
mov
popa
jle
jns
arpl
psubusw
(bad)
js
adc
jp
pushf
out
xlat
call
mov
mov
lock
dec
jl
push
fwait
test
mov
mov
fcmove
dec
movs
shl
cmps
scas
mov
mov
sub
fild
fnstcw
and
xchg
dec
jno
mov
sar
mov
jmp
retf
pop
mov
fucomip
xchg
cmp
mov
icebp
or
jmp
fmul
(bad)
shl
mov
(bad)
jbe
mov
adc
add
mov
sbb
movs
shr
sti
or
lea
push
push
mov
mov
jecxz
mov
xchg
(bad)
adc
pop
mov
pop
cmp
adc
das
xchg
ins
out
movs
jne
and
ror
cmp
das
shr
daa
fwait
lea
inc
sbb
sbb
and
movs
sbb
inc
les
cmp
jb
js
adc
jo
cmp
scas
fwait
cdq
xchg
(bad)
inc
test
fadd
dec
fimul
push
pop
adc
dec
xor
or
movs
xor
dec
test
pop
push
idiv
dec
out
dec
xchg
mov
(bad)
popf
lahf
sbb
mov
shl
(bad)
sub
xchg
push
neg
mov
ins
test
lds
ja
inc
cmp
dec
in
daa
or
rcr
jb
inc
sub
push
hlt
mov
cli
gs
test
(bad)
(bad)
mov
mov
inc
fiadd
xor
sbb
popf
push
aad
ja
cmp
iret
bound
lock
adc
xchg
mov
and
mov
ja
or
adc
iret
mov
fcomp
or
in
sbb
std
cli
imul
sub
xchg
scas
mov
in
hlt
mov
pop
aam
mov
jp
ins
scas
push
pop
cmp
fs
inc
ss
(bad)
adc
add
outs
mov
es
imul
ss
jmp
pop
inc
jo
sahf
mov
jns
xor
out
jno
jne
xchg
movs
shl
pop
cmps
push
idiv
mov
sub
mov
push
cmp
(bad)
bound
jo
call
cmp
inc
sbb
scas
adc
add
cmp
dec
(bad)
mov
mov
std
dec
add
xchg
outs
xchg
out
jno
jecxz
push
sbb
adc
nop
adc
push
shr
dec
jecxz
imul
xor
push
scas
pop
fwait
aad
sub
out
push
push
cmp
adc
lods
xchg
into
test
mov
popa
add
dec
call
inc
cmp
cmps
cli
(bad)
mov
dec
imul
and
jge
fs
outs
pop
jbe
adc
(bad)
aad
jmp
pop
push
dec
fsubr
xor
sti
mov
aas
in
imul
loop
gs
push
movs
jbe
mov
das
ret
ja
jbe
push
adc
push
test
dec
lds
mov
(bad)
in
mov
ror
shr
pop
out
pushf
nop
das
cmc
xchg
fldz
lods
fs
fdivr
pop
lahf
cmc
mov
push
jmp
outs
pop
adc
pop
or
or
sub
in
fs
pop
inc
ror
ja
imul
sti
push
stc
xor
xlat
js
retw
pop
test
lea
stc
arpl
(bad)
jne
sbb
sub
sub
and
fwait
loopne
rol
scas
sbb
mov
inc
and
jbe
mov
test
es
mov
pop
xlat
loope
xchg
lea
adc
ja
out
xchg
push
retf
je
mov
jo
xor
es
jl
push
loop
push
test
push
and
call
jno
push
adc
in
pushf
in
or
push
push
jne
sbb
in
pop
mov
imul
jmp
ds
adc
repz
jmp
xor
cmps
push
cmp
and
sbb
pop
xor
sub
sbb
cmp
mov
pop
aas
ret
mov
sbb
movs
xor
mov
sti
js
mov
mov
push
call
add
loop
imul
pause
mov
or
mov
test
retf
push
pop
xor
ss
retf
and
mov
pop
add
fcomp
sub
sahf
loope
sbb
cmp
mov
mov
shr
cmps
movs
repz
test
rcl
xor
adc
cld
out
pop
loop
mov
xlat
push
or
mov
add
xor
imul
idiv
daa
loope
es
icebp
or
outs
pop
push
xchg
arpl
push
sub
retf
inc
add
retf
in
jae
dec
jecxz
bound
iret
jle
jmp
sbb
cmps
mov
iret
cmp
mov
jne
xor
sub
push
sub
jl
push
cwde
cld
enter
test
lods
xor
(bad)
inc
hlt
pop
hlt
push
stos
popa
fld
sbb
fwait
ret
adc
pop
ror
sahf
xlat
in
aam
aaa
inc
int
cli
xchg
sub
nop
shl
cld
pop
out
ja
iret
cwde
out
(bad)
sbb
call
xor
mov
push
xor
pop
(bad)
xor
out
paddq
and
into
and
in
(bad)
cld
cmp
div
out
add
in
jne
mov
mov
(bad)
pusha
sub
mov
movs
pop
call
outs
iret
or
cdq
movs
inc
sti
mov
mov
pushf
or
jp
inc
sub
pop
add
mov
inc
xlat
cwde
mov
push
(bad)
loope
adc
add
pop
aam
ins
inc
inc
cmp
xor
clc
outs
scas
mov
(bad)
int3
jnp
mov
mov
or
push
ror
call
test
je
fist
cli
sahf
stos
sbb
ds
push
ins
pusha
pop
mov
retf
lods
bound
imul
adc
mov
call
enter
xor
add
sub
adc
(bad)
rcr
repnz
push
call
fistp
mov
xor
add
mov
pop
or
fisubr
popf
outs
scas
mov
fiadd
ja
pop
cs
lods
sbb
xchg
fisubr
xchg
xor
mov
test
push
cmp
ret
and
ins
idiv
aam
inc
lods
fist
ja
(bad)
inc
daa
loop
jo
movlps
add
cdq
cmp
jle
jnp
mov
pop
mov
push
sti
js
inc
call
stos
ss
call
push
loop
pop
xor
mov
scas
fidiv
outs
icebp
push
pusha
push
add
dec
fild
mov
in
out
cmp
push
aaa
js
into
xor
jnp
and
push
test
pusha
jl
lock
pop
mov
or
ret
adc
mov
jno
and
movs
cld
scas
cmps
jb
or
inc
shr
xchg
pushf
jge
stc
lock
lock
pop
mov
das
daa
mov
jae
pop
sbb
cmc
cs
popa
sbb
push
xchg
stos
push
inc
je
mov
pop
shl
sar
push
inc
nop
call
xchg
pop
add
pop
out
push
retf
sbb
mov
jl
call
mov
sti
jbe
sub
mov
push
out
aaa
ss
sub
adc
dec
sahf
xchg
mov
or
xchg
pop
fcom
jb
sbb
jge
sbb
and
adc
adc
sub
push
pusha
mov
aad
stos
lods
add
cmc
stc
sub
or
in
and
mov
fisubr
jae
repz
pop
call
(bad)
in
or
imul
sub
jg
push
jge
add
stos
pop
adc
ins
mov
xchg
cmps
and
(bad)
(bad)
or
xchg
mov
sub
adc
jno
ret
jmp
gs
adc
mov
xchg
add
and
pusha
arpl
dec
inc
test
mov
mov
jmp
pop
ins
mov
dec
push
repnz
xor
add
iret
add
rcl
inc
xor
xor
hlt
mov
fdivr
inc
jl
add
jo
cli
dec
jp
(bad)
lock
scas
dec
xlat
xor
sub
mov
mov
loopne
pop
ja
es
sbb
inc
pusha
add
arpl
rcr
cmps
xchg
sbb
adc
xchg
adc
pop
cmp
inc
inc
out
and
cmp
xchg
jno
ins
mov
lds
pop
xchg
sub
cmp
dec
(bad)
push
std
push
stos
xor
fsubr
mov
fstp
push
mov
mov
cdq
nop
shl
push
mov
sbb
out
or
mov
dec
mov
shl
out
pop
lock
cmc
icebp
ins
jo
int
test
leave
jg
out
mov
cmps
test
sti
cmp
(bad)
jecxz
inc
push
sub
xor
and
adc
push
sub
or
xchg
cmp
inc
ret
sbb
xor
stc
inc
ror
jno
sbb
mov
in
inc
dec
adc
mov
jbe
inc
hlt
mov
movs
bound
cmps
iret
ss
mov
cmp
enter
gs
mov
inc
and
push
movs
scas
xor
mov
pop
out
fcom
test
jge
push
loopne
add
aaa
dec
inc
mov
mov
and
test
adc
mov
ja
js
fwait
pop
adc
push
int
pop
mov
dec
or
or
ins
std
add
cmp
cmps
inc
(bad)
(bad)
cmp
xor
add
clc
cmps
mov
repnz
(bad)
lods
fwait
dec
ja
inc
hlt
mov
xor
or
xor
sbb
(bad)
iret
xor
dec
adc
aam
or
mov
mov
aas
idiv
jg
je
into
movs
inc
je
xor
outs
imul
arpl
pop
fldcw
bnd
xchg
cmp
sub
leave
pop
fmulp
je
inc
jb
dec
mov
xchg
in
sbb
dec
int3
add
mov
jecxz
ins
xor
call
stos
sub
xor
jb
js
xor
xor
jns
inc
sbb
pusha
retf
es
retf
bound
in
mov
(bad)
jle
mov
hlt
pop
and
outs
pop
inc
pop
push
wbinvd
(bad)
cld
idiv
(bad)
clc
dec
jp
clc
adc
or
in
ret
les
sub
cmp
stos
scas
push
add
rol
xchg
call
mov
test
mov
dec
inc
daa
sbb
jno
adc
or
xchg
test
ror
cmps
or
mov
and
lahf
push
in
arpl
int3
xlat
dec
popa
adc
dec
jo
call
sbb
icebp
add
mov
popf
addr16
dec
fucomp
test
adc
rol
bound
das
aaa
add
test
dec
adc
inc
and
push
stc
outs
outs
push
pop
mov
iret
mov
jbe
int
xor
lock
xchg
dec
cmp
sbb
bound
sbb
mov
mov
mov
scas
mov
xor
inc
sub
and
mov
test
mov
cld
pop
add
mov
inc
push
aam
cmp
xchg
cmp
add
push
test
push
adc
adc
cmps
xor
in
cmc
das
dec
arpl
popf
inc
arpl
bsf
adc
test
in
shl
push
xchg
mov
lods
mov
xchg
jmp
mov
fmul
fldcw
inc
push
outs
stos
hlt
and
jle
jno
mov
fisub
in
fsub
fstp
jns
shr
fild
or
inc
movs
pushf
and
movs
lds
sbb
xchg
xchg
xchg
test
out
xor
mov
inc
mov
adc
in
push
pop
(bad)
ins
and
cdq
xor
push
and
cmp
mov
(bad)
sub
pop
xchg
push
mov
sbb
js
cld
inc
cmp
dec
xchg
cmps
int
aaa
lods
in
inc
test
mov
ss
add
push
into
add
add
inc
add
mov
mov
inc
push
fcom
add
(bad)
mov
xor
mov
xor
inc
pushf
add
mov
popf
and
xlat
jae
add
arpl
mov
stc
jmp
sub
sahf
sar
(bad)
and
ficom
sbb
rol
xlat
inc
retf
cmc
dec
out
mov
das
mov
out
retf
ss
fdiv
adc
sar
mov
pop
dec
xor
fldl2t
and
daa
idiv
ss
lahf
mov
mov
sbb
ins
pop
dec
or
adc
xor
push
pop
gs
sub
pop
mov
xchg
jle
cmp
movs
in
mov
in
dec
and
aam
or
xor
push
repnz
dec
stos
retf
mov
jne
push
clc
push
xor
ja
mov
jo
das
adc
nop
cmp
jp
mov
out
movs
inc
pop
ins
data16
jb
xchg
inc
mov
enter
adc
push
cli
loope
sub
and
lds
xor
in
(bad)
int3
push
enter
xchg
cs
xchg
push
fcmove
xor
pop
retf
mov
and
push
arpl
loopne
and
mov
mov
adc
cs
sbb
push
pop
mov
fwait
xor
sub
mov
nop
pop
pop
mov
jae
dec
or
pop
int
xchg
popa
call
ja
and
sub
imul
add
pusha
in
in
or
iret
jbe
jmp
sbb
in
fild
scas
and
(bad)
hlt
imul
add
(bad)
cwde
(bad)
push
(bad)
or
sahf
ret
and
cli
(bad)
sti
add
retf
mov
mov
shr
push
sbb
shl
ds
(bad)
js
cmps
mov
dec
test
shl
fdivr
retf
lahf
pop
sbb
xor
xor
push
in
inc
push
jnp
daa
mov
fisubr
in
sbb
mov
clc
pop
mov
sbb
mov
outs
in
push
pop
pop
aad
add
retf
stos
mov
jecxz
mov
cmp
sbb
in
and
or
lods
sbb
cmps
jno
adc
addr16
pop
cmc
cmps
push
jmp
pop
ret
and
pop
push
aas
sub
(bad)
push
push
mov
ss
mov
ja
sbb
pop
xor
ins
inc
mov
lods
lods
and
fild
mov
test
loopne
cmp
aaa
or
jb
or
and
outs
sub
cli
dec
sti
cmps
or
(bad)
(bad)
sub
mov
enter
cwde
out
cmp
popf
inc
ret
ins
lock
neg
xchg
cld
sbb
scas
xor
pusha
nop
push
mov
sti
cmps
adc
mov
in
test
mov
mov
imul
inc
cmp
mov
cmc
and
lahf
xchg
retf
xchg
cmp
sahf
outs
or
out
xchg
out
shl
adc
in
ret
push
cmc
add
jle
mov
movs
push
js
sar
repz
test
add
hlt
inc
xor
bound
call
jo
jns
(bad)
or
xchg
je
sbb
loop
sbb
dec
jl
dec
cwde
sbb
mov
xlat
enter
sbb
mov
ins
mov
xor
adc
daa
mov
out
hlt
sub
sbb
xchg
enter
push
aad
and
adc
mov
push
mov
out
fst
aas
into
lds
xadd
cmp
mov
mov
inc
(bad)
cmc
std
push
aad
sti
cli
movs
orps
test
and
fild
cmc
jbe
ror
jecxz
jnp
mov
mov
jge
inc
je
nop
cmp
sbb
movs
xor
test
aad
jmp
xchg
adc
loop
arpl
sub
sbb
cdq
cdq
jg
push
js
neg
in
push
retf
mov
jne
inc
call
clc
inc
rol
inc
mov
sahf
mov
aaa
adc
and
and
cdq
int
push
mov
xchg
int3
aaa
xor
(bad)
ja
push
and
sub
shr
xor
les
adc
xchg
mov
jo
push
jne
and
pusha
fild
aaa
in
mov
movs
aam
sbb
sub
push
fwait
outs
xor
cmp
retf
test
std
mov
push
or
pop
out
lods
(bad)
(bad)
clc
push
add
ja
xchg
add
sub
jge
xor
sbb
fadd
push
mov
rcr
jno
sub
mov
cld
out
or
mov
mov
adc
mov
lods
cmp
lods
and
mov
cmps
gs
inc
dec
daa
or
ror
push
mov
dec
lds
cmp
in
movs
cmp
(bad)
ficomp
pop
movs
add
rol
or
icebp
cmc
mov
stos
test
js
cmps
jge
lahf
fwait
je
leave
sub
push
(bad)
mov
adc
mov
arpl
out
mov
imul
ror
push
push
mov
mov
imul
jle
les
outs
scas
int
leave
inc
or
outs
sub
std
mov
rcr
pop
loopne
pop
push
mov
fild
mov
mov
(bad)
pushf
pop
in
ret
aad
mov
xchg
dec
inc
fwait
jbe
lods
dec
movs
mov
pop
out
pusha
sbb
mov
loope
xor
adc
mov
ret
xor
jg
mov
iret
fsub
in
mov
xor
mov
mov
jns
(bad)
cmp
mov
icebp
xor
fiadd
add
push
adc
lock
sbb
pop
idiv
retf
lods
int
les
inc
pop
ja
scas
fild
(bad)
stc
cmp
pop
push
je
test
xchg
add
pop
add
mov
push
cmp
pop
xchg
fistp
xchg
xchg
in
stc
xchg
sub
inc
clc
adc
push
lea
fadd
inc
cmps
mov
mov
mov
ror
(bad)
inc
mov
mov
je
cdq
sub
inc
js
xchg
mov
push
icebp
aam
out
cmc
(bad)
rol
sub
stos
std
sbb
pop
ins
add
push
pop
sub
(bad)
push
xchg
(bad)
mov
inc
mov
ror
mov
ins
xchg
adc
ret
data16
adc
js
and
adc
stos
sub
loopne
fisttp
sbb
cmps
cwde
pop
stos
pop
ja
test
push
push
scas
fs
cmp
or
and
sbb
pop
fwait
in
push
pushf
pop
sbb
aam
jnp
std
xor
xchg
adc
fstp
lods
movs
call
xchg
lahf
dec
sahf
inc
jbe
mov
setne
sub
ja
retf
jo
aaa
mov
aam
das
dec
xchg
test
sbb
sbb
aam
or
xor
test
scas
out
push
dec
pop
(bad)
out
shl
xchg
stc
jmp
rcl
scas
xchg
dec
ret
mov
retf
push
jmp
mov
mov
data16
sbb
pop
mov
int
into
out
mov
icebp
or
nop
bound
dec
pxor
mov
mov
sub
xchg
in
test
outs
movs
pop
addr16
test
adc
stos
loope
iret
xor
loopne
xchg
xlat
jmp
xchg
loopne
mov
inc
dec
popf
jns
shl
mov
jbe
sub
or
fstp
or
std
and
pop
(bad)
fistp
dec
xchg
es
fsubr
inc
inc
jge
mov
inc
xor
cmps
nop
sub
leave
test
dec
pop
dec
sub
das
mov
mov
xchg
sets
adc
stos
add
xchg
push
(bad)
in
scas
shr
xchg
adc
es
mov
call
ins
pop
jne
in
icebp
xlat
mov
loopne
add
aaa
jecxz
mov
dec
xchg
inc
jo
imul
test
fstp
scas
test
mov
cmc
pop
jbe
dec
leave
mov
out
stc
jp
shr
in
inc
sahf
jp
add
loope
lods
jl
sub
or
sbb
ins
imul
imul
pop
sub
psadbw
pop
inc
sbb
shrd
(bad)
sti
push
push
mov
and
xchg
xchg
jne
mov
or
in
jmp
test
je
shl
je
inc
frstor
jbe
mov
retf
mov
push
out
xor
lds
dec
fwait
adc
mov
int3
scas
pop
ja
xor
addr16
adc
jns
push
mov
pop
cmps
xor
push
clc
sub
inc
push
adc
ins
mov
and
pushf
jmp
and
pop
pop
and
lds
cmps
bound
adc
jnp
aam
push
sub
jecxz
adc
pop
cmc
test
mov
aas
pusha
fcomp
adc
sbb
es
dec
or
retf
add
inc
add
lds
loop
ss
lods
jb
jbe
gs
leave
xor
add
retf
leave
jmp
jo
imul
push
mov
ins
cdq
outs
and
mov
retf
push
or
sub
shl
ffree
lds
jmp
hlt
aaa
test
jno
adc
sub
dec
dec
jne
and
outs
dec
and
(bad)
sub
popa
push
das
in
test
test
push
add
cmp
sbb
fisub
xchg
div
push
hlt
outs
ja
mov
push
je
add
jo
imul
inc
jmp
push
inc
adc
dec
inc
in
cwde
(bad)
or
xchg
hlt
pop
mov
mov
not
popa
cmps
imul
mov
lods
sbb
push
pop
jno
ret
mov
pop
dec
lahf
nop
or
pop
cld
retf
lods
cld
int3
sub
mov
mov
pop
dec
scas
ss
es
sub
and
call
imul
dec
out
pusha
addr16
xor
xor
das
fdivr
mov
xor
jo
ror
shr
mov
fcomp
fbld
sub
inc
aad
jno
jmp
mov
clc
ret
iret
pushf
xor
xchg
adc
fs
leave
(bad)
mov
in
and
cmp
jne
push
dec
repz
add
or
jb
clc
inc
dec
in
or
(bad)
and
dec
mov
call
inc
jae
in
lahf
push
loop
cmp
xor
jb
or
arpl
jp
daa
cmp
and
das
fs
ffree
mov
inc
pop
int3
xor
xchg
push
ret
jge
aaa
or
mov
lods
xor
sahf
mov
mov
xchg
out
repnz
mov
mov
inc
test
pslld
stos
cli
and
adc
cmps
xchg
or
test
int3
push
sbb
int3
test
retf
loope
and
ror
sbb
movs
mov
lods
pop
push
cli
inc
mov
pop
mov
dec
fist
mov
fdiv
mov
pop
test
or
test
sub
int3
or
ins
push
pop
jp
imul
sub
mov
(bad)
das
inc
xchg
adc
arpl
and
mov
or
in
pusha
adc
adc
shl
sbb
ds
or
adc
inc
cld
(bad)
sub
sub
push
sbb
femms
loope
jmp
adc
cli
mov
scas
test
add
push
in
jmp
outs
dec
js
dec
or
xor
cwde
xor
or
fwait
js
inc
sub
fnstenv
pop
fldenv
das
jle
mov
shr
pop
imul
pop
or
cs
jmp
jnp
xor
pop
sub
inc
(bad)
and
cmp
dec
and
mov
xchg
rol
fs
and
inc
mov
xchg
add
dec
out
push
rcr
jmp
pop
mov
cmp
push
cmp
sub
xchg
jo
aaa
jae
push
push
mov
mov
xchg
(bad)
mov
pop
pop
test
and
jge
mov
jecxz
add
into
in
lds
pop
fcomp
out
rcr
jnp
hlt
inc
xchg
pop
cmp
pop
sbb
xchg
add
push
xor
mov
sub
(bad)
xchg
cmps
xchg
jbe
xchg
(bad)
idiv
ret
push
lahf
sbb
out
sbb
push
jnp
mov
pop
jle
aas
sahf
in
adc
pushf
sahf
mov
cli
lock
jl
adc
mov
pushf
mov
hlt
dec
inc
or
cmps
dec
xor
cmps
retf
cmps
stos
les
std
xchg
jp
std
movs
cmp
and
inc
imul
xor
mov
stos
xlat
or
xor
xchg
(bad)
js
dec
mov
das
(bad)
push
clc
fnstsw
loope
add
pop
loope
or
movs
xchg
push
ret
mov
adc
add
pop
xor
cmp
adc
inc
push
push
(bad)
jecxz
imul
sar
mov
pop
(bad)
fst
cld
fdiv
cmp
aad
mov
cwde
addr16
(bad)
mov
mov
push
les
mov
cwde
cmc
cmps
out
mov
xor
movs
ins
ss
out
stos
and
mov
retf
stos
cs
cmp
into
nop
lods
rcr
mov
cmc
cmps
pop
mov
ficomp
sub
push
pop
in
mov
pop
mov
add
jo
aad
call
adc
mov
popa
mov
mov
adc
xchg
rcl
cli
mov
pop
scas
call
rcr
push
mov
xchg
je
sar
arpl
das
jae
pop
inc
bound
js
mov
loope
push
inc
mov
(bad)
in
add
popa
and
and
ins
popf
inc
jg
xchg
retf
iret
xor
(bad)
pop
cdq
or
or
xchg
(bad)
jae
(bad)
sbb
pop
out
xchg
cmp
push
out
mov
pop
or
xchg
xchg
add
push
cmp
mov
pop
inc
mov
and
das
sbb
js
xchg
mov
cli
and
lahf
mov
fist
movs
pop
cld
(bad)
rcl
out
add
inc
cmp
or
cwde
aad
outs
push
jbe
pusha
inc
sbb
jb
retf
inc
push
das
pop
daa
mov
jp
out
xor
jne
pop
sahf
inc
push
cdq
aad
sbb
sbb
pusha
clc
pushf
inc
ss
inc
aas
(bad)
outs
sbb
push
mov
xchg
pop
xchg
jmp
fadd
dec
jp
and
call
cmp
xchg
mov
mov
mov
cmps
es
adc
mov
mov
out
pushf
sub
pop
fist
jecxz
aaa
out
push
es
cli
sbb
mov
loopne
outs
and
fild
mov
sub
jecxz
neg
sub
int
ss
jno
add
jmp
ror
out
and
fwait
sbb
push
int
test
(bad)
mov
jmp
push
jmp
pop
jae
push
movs
(bad)
leave
bound
mov
push
xor
jns
mov
fist
fs
out
mov
enter
icebp
scas
test
pop
in
xor
mov
or
mov
inc
(bad)
cmp
cmp
or
mov
xchg
add
jo
mov
into
aas
dec
and
arpl
clts
call
mov
jb
ins
divps
adc
adc
pop
mov
jb
daa
mov
(bad)
stc
pop
retf
sbb
push
gs
cs
popa
jp
arpl
in
fwait
cmp
hlt
aam
neg
and
aam
sub
or
cmp
in
outs
and
adc
repz
ins
mov
xor
in
pop
inc
sbb
in
inc
movs
std
imul
adc
fidiv
push
lock
dec
mov
retf
stc
xor
jno
outs
mov
(bad)
jo
sar
cmp
hlt
(bad)
cld
or
test
fbld
daa
rcr
std
retf
jo
fs
cmp
sahf
aam
and
ret
inc
mov
in
repz
cdq
fs
imul
jmp
(bad)
enter
dec
push
loope
sbb
sub
mov
xchg
push
cld
adc
mov
jecxz
push
leave
pop
je
sbb
push
test
mov
cmc
dec
imul
fwait
push
into
push
sbb
lea
pop
sub
mov
inc
mov
lea
mov
mov
imul
xor
pop
rol
lock
mov
(bad)
retf
rcr
sbb
pop
sub
mov
sub
int
aam
pop
loopne
adc
push
or
lods
mov
mul
xor
fiadd
dec
loopne
xchg
das
push
dec
xchg
(bad)
and
std
dec
inc
pop
ret
push
and
out
cmp
in
cmp
cmp
inc
cmp
(bad)
xlat
inc
js
cmp
cdq
sbb
icebp
gs
data16
retf
into
push
adc
jne
sbb
les
jp
movs
inc
jmp
dec
cmp
in
shl
bound
test
xchg
xchg
iret
inc
add
cmp
jecxz
jmp
ds
ret
mov
cli
push
in
and
mov
sbb
test
and
(bad)
push
mov
add
sbb
add
in
and
loop
pop
out
rol
add
jmp
mov
bound
test
pop
inc
push
mov
arpl
push
xor
pop
pop
out
sbb
xchg
mov
shl
add
fst
pop
aad
dec
out
enter
mov
gs
cli
repz
pop
lock
ins
lahf
mov
scas
xchg
sub
call
gs
push
ins
jnp
inc
rcr
adc
outs
stc
sti
mov
ins
or
call
das
mov
dec
repnz
hlt
xor
jge
in
test
ins
fisttp
pusha
iret
nop
mov
js
cmp
sub
push
std
mov
jnp
pop
cdq
mov
mov
ror
fnstsw
sar
icebp
xchg
ja
imul
dec
inc
stos
dec
xchg
sub
fld
push
stos
call
adc
scas
neg
jnp
add
sub
dec
inc
pop
dec
outs
out
pop
cdq
hlt
jo
(bad)
outs
and
dec
xlat
repnz
loop
push
lea
es
outs
sahf
push
push
mov
jnp
push
js
in
mov
lea
test
xchg
pop
cmp
or
and
push
xchg
sbb
xor
cmp
sbb
xchg
pop
xchg
adc
mov
in
mov
mov
mov
push
retf
xchg
mov
xor
xchg
jmp
cmp
mov
jp
stc
mov
loope
jecxz
mov
sahf
aas
rcl
daa
push
imul
ja
xor
push
lds
scas
faddp
xor
inc
adc
or
popa
test
(bad)
mov
sbb
mov
mov
mov
lea
addr16
les
repz
test
dec
xchg
enter
push
fld
push
cmp
mov
gs
call
shr
pop
ret
jae
sar
or
dec
outs
jo
enter
jae
lods
imul
sahf
push
mov
pop
sar
sbb
fdivr
enter
sar
pop
je
sbb
mov
icebp
jno
xchg
mov
movs
shl
push
push
es
clc
push
or
pop
(bad)
push
jns
(bad)
ja
aam
mov
(bad)
lods
push
mov
mov
add
xchg
add
pop
add
inc
into
and
(bad)
adc
xchg
in
mov
pop
push
or
rol
test
jg
call
test
stos
shl
inc
ins
push
xchg
jg
pop
mov
and
nop
sar
ds
push
or
sahf
push
rcr
fcom
jp
call
cmp
and
pop
sub
xchg
dec
fmulp
cmp
std
outs
jns
sub
xor
or
lock
mov
icebp
(bad)
out
lea
inc
pop
fidiv
(bad)
pusha
and
push
aas
nop
hlt
xchg
mov
movs
pop
jp
test
sbb
cld
das
popa
dec
dec
mov
fisttp
xchg
pop
sbb
xchg
(bad)
out
cmp
adc
and
cdq
sub
cdq
mov
inc
jns
or
je
xchg
mov
pop
repz
or
je
out
jo
push
rcr
or
fwait
mov
aas
mov
repnz
jge
icebp
outs
test
sbb
dec
sti
mov
jp
xor
mov
sub
loop
loopne
rcl
jmp
mov
test
aam
out
in
fsubr
and
sub
jb
jo
push
lods
push
ret
mov
jp
movs
js
xchg
aam
lock
sbb
mov
mov
or
adc
add
std
push
sub
js
rol
cmp
pop
lahf
test
leave
mov
imul
sub
xchg
mov
or
mov
add
arpl
jnp
in
and
sub
jnp
pop
sub
mov
ret
adc
ficom
shl
loopne
(bad)
not
in
cdq
mov
mov
mov
ret
xor
fst
call
(bad)
push
push
sub
jp
xchg
sub
std
ror
in
push
loope
(bad)
ins
xchg
sub
inc
out
inc
movs
fwait
mov
mov
push
pop
call
and
xor
call
pop
pop
sub
mov
imul
sbb
sub
mov
jmp
in
cmps
sbb
test
hlt
pushf
sub
add
jg
int
inc
loopne
call
cli
inc
in
xchg
and
lds
unpckhps
pushf
(bad)
mov
sbb
push
adc
ror
push
adc
mov
test
cmc
sub
call
adc
aad
movs
sub
add
ins
xchg
sub
or
retf
sbb
jmp
adc
inc
lock
sbb
aaa
pop
fnstcw
inc
ja
and
outs
je
mov
adc
jns
aaa
jmp
jl
in
push
jo
nop
mov
lds
push
mov
jl
adc
xor
and
cmp
dec
mov
sar
push
ret
std
jbe
inc
stos
repz
pop
daa
pushf
pop
popa
mov
call
push
shr
lea
lods
leave
sub
test
ins
enter
push
pop
mov
out
push
test
jo
sbb
lea
mov
scas
inc
in
push
add
lock
in
into
xor
mov
ret
pop
fcom
and
mov
in
pop
mov
push
or
dec
shl
in
imul
or
fwait
and
cmp
xor
mov
push
in
push
dec
pop
std
mov
mov
jns
in
jmp
mov
sbb
out
sub
and
mov
addr16
(bad)
adc
pop
push
xor
or
nop
cmp
movs
mov
push
cmp
lea
cmps
repz
or
lods
and
xchg
mov
cmps
daa
add
and
inc
idiv
out
jmp
add
adc
(bad)
ds
fild
data16
std
inc
or
xchg
out
cmps
inc
dec
and
dec
(bad)
jecxz
push
in
popf
jo
add
pop
addr16
dec
mov
or
cmp
mov
ds
sti
inc
clc
sbb
in
pop
jno
je
dec
pushf
movs
xchg
popa
pop
lods
dec
lahf
mov
cs
es
xchg
into
mov
and
add
cli
and
xchg
ror
int
inc
xor
push
ror
and
inc
arpl
lock
pushf
dec
aas
pop
jno
in
sub
push
nop
push
je
nop
aad
and
mov
mov
xlat
mov
daa
iret
inc
retf
test
dec
add
adc
xor
adc
aas
aad
xor
mov
test
popf
cmp
or
mov
stos
xchg
adc
pop
xor
xor
imul
rcr
outs
scas
add
push
add
sub
xor
inc
pop
cmp
sti
out
fstp
test
pop
enter
retf
and
in
retf
and
add
mov
pushf
lods
cmps
scas
jmp
(bad)
add
sbb
pop
or
stos
pop
cmp
cld
shr
add
shl
push
addr16
arpl
push
cmc
ds
dec
xchg
mov
stos
in
rol
not
pop
or
arpl
sbb
pop
fsub
mov
frstor
xchg
(bad)
test
xor
ins
jbe
or
and
(bad)
stc
mov
mov
clc
pushf
mov
xchg
sbb
mov
(bad)
cmp
mov
aam
bound
pop
aam
xchg
ins
dec
idiv
and
or
jnp
pop
cmp
loope
inc
push
or
push
xchg
test
mov
sbb
adc
cmp
xor
sub
add
arpl
rcl
mov
call
push
and
mov
push
lods
and
mov
inc
push
inc
mov
ret
jl
sub
test
pop
sbb
mov
loope
sub
mov
repnz
sub
shl
fld
jle
mov
jnp
inc
push
ds
pop
(bad)
repnz
add
xchg
lods
mov
pop
xor
pop
test
push
ja
scas
push
cld
or
nop
sahf
fstp
lock
inc
popf
cmp
jle
cdq
cmp
mov
pop
cmps
sub
xchg
arpl
xchg
mov
ins
sbb
push
mov
std
dec
dec
add
pop
xchg
xchg
xchg
test
pop
repz
dec
mov
outs
adc
xchg
add
retf
and
mov
scas
pop
ins
repz
aad
sbb
mov
or
jnp
xor
sbb
sub
sbb
jmp
dec
push
shr
push
add
push
das
xlat
xlat
test
lods
mov
xor
mov
neg
(bad)
outs
aam
out
push
jge
div
das
jmp
int3
stos
lods
sbb
imul
push
out
sub
mov
out
push
outs
or
or
mov
push
and
outs
mov
and
push
dec
inc
iret
jno
jae
mov
ret
movs
loopne
mov
jmp
pop
pop
inc
lahf
push
dec
test
bound
shl
out
arpl
(bad)
ins
je
add
mov
cwde
cmp
loope
std
inc
int3
xchg
jb
mov
aad
aas
mov
fimul
push
xchg
xchg
mov
adc
out
jb
jle
mov
mov
div
push
movs
dec
sub
mov
push
pop
xchg
cmps
cmps
into
mov
push
ret
in
mov
sub
loopne
jo
idiv
and
xchg
cld
mov
bound
or
imul
jno
cmps
cli
mov
or
arpl
inc
pop
push
and
or
ja
adc
dec
std
loope
arpl
out
push
cli
test
les
popa
dec
repz
in
or
fldenv
rol
mov
out
ret
inc
fdivr
dec
sbb
call
xor
mov
enter
jmp
in
mov
sub
jmp
stos
adc
or
cmps
jl
add
inc
jb
addr16
or
fs
stc
xchg
ret
ins
push
push
mov
ss
pop
retf
lahf
pop
in
inc
and
scas
cmps
sahf
inc
popf
fiadd
cmps
nop
sbb
push
jne
xchg
jmp
mov
push
jnp
add
sbb
jo
sbb
pop
sti
jmp
add
mov
iret
retf
jecxz
rol
cmp
test
stos
sbb
pop
mov
retf
add
retf
add
sbb
jg
loope
sbb
stos
loope
lds
jle
xchg
or
push
call
cli
sahf
jae
push
cmp
xor
imul
cmp
and
mov
loopne
mov
pop
call
enter
sbb
cmp
inc
pop
hlt
pusha
scas
xchg
push
shl
scas
pop
mov
mov
xchg
stos
mov
data16
jge
nop
fild
in
call
popa
mov
mov
daa
mov
push
loop
sbb
mov
sub
or
das
call
enter
sbb
lock
inc
jns
mov
fcomp
push
adc
inc
js
push
shl
pop
addr16
mov
(bad)
(bad)
ret
test
cld
pop
add
mov
push
das
cmps
jno
int
lock
xor
adc
into
mov
hlt
pop
mov
outs
jo
push
in
mov
xor
scas
inc
cmps
cwde
(bad)
rcr
sbb
je
int
adc
push
mov
loop
push
aam
dec
pushf
mov
test
add
jmp
lahf
push
dec
mov
pop
jno
and
mul
mov
std
pusha
imul
(bad)
fild
fwait
stos
sub
mov
xchg
cmc
outs
xchg
and
and
cmp
push
pop
out
mov
psraw
in
sbb
dec
out
and
add
jge
and
out
mov
sub
lds
jmp
lods
(bad)
inc
jle
push
jle
hlt
mov
clc
cwde
(bad)
aam
cmc
jmp
lds
int
in
call
pop
retf
arpl
xchg
pop
mov
adc
sar
test
into
or
xchg
imul
into
jb
mov
dec
jmp
push
adc
mov
inc
into
mov
bound
and
add
(bad)
in
cwde
adc
test
icebp
jnp
inc
jns
es
mov
fwait
int
rcl
and
outs
jbe
cdq
sub
dec
imul
add
test
adc
fwait
(bad)
pop
push
or
in
cdq
pop
call
push
sbb
push
repnz
cmp
sub
and
in
push
jb
mov
mov
sbb
and
xchg
pop
add
(bad)
jmp
sti
xor
xor
mov
mov
xchg
mov
push
nop
push
mov
adc
movs
sbb
sbb
bound
cmps
mov
js
or
push
fwait
ja
retf
or
inc
sbb
mov
and
jns
in
mov
or
movs
arpl
inc
fmul
dec
shl
aam
jg
mov
(bad)
pop
int
(bad)
sub
out
out
mov
out
xor
inc
mov
push
in
xor
rcl
inc
mov
and
cwde
dec
ja
push
into
sub
fndisi(8087
xor
inc
mov
sub
xchg
pusha
retf
stos
xor
mov
cmps
cmp
pop
sub
cdq
mov
not
iret
cld
xchg
adc
inc
mov
xchg
sbb
push
pop
inc
xchg
(bad)
imul
cdq
xor
mov
mov
scas
(bad)
daa
xchg
cmp
jp
push
push
sub
push
mov
push
add
add
jg
(bad)
in
lods
cli
mov
xor
outs
jl
mov
rol
ds
aas
xor
ins
xchg
scas
adc
cwde
jo
add
stos
and
(bad)
int
mov
retw
sar
lock
sbb
push
or
push
fs
inc
push
and
imul
aam
cdq
cli
stos
aaa
jne
pop
ds
jbe
mov
adc
loope
jae
xor
or
sbb
scas
or
jp
imul
cmp
scas
cli
jle
pop
push
cmp
mov
jno
mov
shl
or
inc
jp
jno
in
or
in
push
add
xor
xchg
mov
jge
add
xchg
scas
call
jg
adc
mov
fiadd
cwde
loope
popf
sti
cld
add
test
fisttp
pop
pop
addr16
push
push
jns
js
mov
ins
fnstcw
add
xor
sub
jae
adc
push
daa
out
fidiv
lods
sahf
push
test
adc
jmp
mov
xor
cmp
stos
movs
sub
mov
mov
xor
stos
retf
sbb
xchg
push
dec
lods
push
hlt
int
lahf
mov
js
mov
test
adc
mov
push
sub
rcr
push
test
inc
(bad)
jo
mov
aad
out
dec
dec
mov
and
inc
out
dec
int3
(bad)
int3
jle
mov
call
(bad)
cli
add
jmp
xor
mov
loopne
push
xor
call
ins
push
lds
xlat
out
jne
aaa
imul
adc
pop
cwde
loope
jp
aam
and
mov
and
push
sahf
and
fcomp
loop
mov
lods
fwait
int3
in
jp
sbb
push
lahf
ss
add
pop
int
retf
sbb
in
mov
(bad)
cmp
outs
sahf
or
ret
push
add
xchg
shr
inc
or
hlt
jmp
push
int3
int
cmps
out
out
retf
imul
pop
imul
retf
dec
cmps
dec
jmp
scas
icebp
xchg
aam
adc
imul
push
mov
stos
in
inc
das
fst
in
xchg
and
mov
xchg
and
or
mov
xchg
mov
je
mov
loope
jg
inc
movs
sahf
mov
add
xor
dec
out
dec
nop
out
or
push
aad
iret
xlat
jb
lds
sti
sbb
mov
outs
add
dec
cwde
cmps
dec
or
xlat
inc
cld
mov
inc
fidivr
xchg
test
js
push
(bad)
jo
repz
mov
rcl
xor
jae
mov
test
xchg
lock
mov
cmp
dec
or
mov
cmp
mov
cmp
or
cmc
pop
into
pop
adc
push
nop
inc
mov
fldenv
pop
adc
mov
mov
cmp
jno
pushf
mov
dec
call
aaa
push
jmp
shl
or
lahf
add
int3
lock
sub
call
fild
mov
sub
xchg
add
pop
sbb
shl
ret
lods
cmps
loope
stos
mov
js
dec
sti
mov
mov
sbb
inc
ja
mov
push
push
fisttp
sti
sub
cmp
push
add
mov
mov
xchg
mov
mov
ss
adc
es
aas
jns
imul
mov
test
pop
jne
cmp
arpl
(bad)
and
pop
idiv
and
mov
pop
cmps
mov
mov
(bad)
mov
adc
retf
iret
fiadd
sbb
iret
(bad)
jge
and
imul
add
jae
jge
sbb
(bad)
ret
sub
repz
push
push
mov
jmp
sub
frstor
ds
iret
jl
mov
out
lock
icebp
lock
push
inc
push
mov
fidivr
jle
xor
sub
ds
fldcw
test
lds
dec
sti
bound
pop
push
xchg
or
cmps
arpl
and
int3
push
mov
sbb
mov
push
call
or
je
mov
push
mov
mov
mov
jnp
in
sbb
mov
mov
jle
mov
mov
jmp
add
adc
(bad)
clc
and
jmp
inc
mov
test
das
mov
xlat
stos
cmp
mov
inc
or
adc
aas
and
cwde
adc
inc
(bad)
sbb
test
xor
stc
xlat
enter
jecxz
fistp
(bad)
(bad)
mov
dec
sar
ret
fsubp
enter
daa
add
or
mov
int
(bad)
out
fisubr
mov
cs
repnz
imul
fdiv
and
bound
ss
pop
fmul
sub
sbb
jle
sahf
adc
shr
mov
xor
les
cmp
nop
movs
fimul
sar
ss
in
mov
adc
icebp
fcom
pop
sub
aam
imul
inc
cmp
sub
or
bnd
xchg
inc
ja
pop
sbb
call
push
mov
or
cdq
retf
dec
lods
push
jl
ins
mov
and
pop
mov
stos
dec
lods
jno
das
adc
jecxz
xchg
xchg
lock
enter
pushf
rcr
mov
inc
stos
mov
dec
add
test
jmp
push
mov
cdq
fbstp
push
cmps
xor
xchg
addr16
enter
fs
sar
mov
aaa
sbb
inc
cmp
inc
out
fistp
leave
mov
in
out
(bad)
clc
call
loop
sub
xor
ret
sar
iret
push
cmp
mov
mov
lock
aam
mov
push
xor
xor
iret
arpl
push
or
dec
call
nop
nop
fimul
cmp
mov
jnp
dec
mov
movs
mov
int3
add
fistp
mov
sahf
pop
xchg
sahf
rcl
int3
jae
cvtdq2ps
pop
lahf
jno
xor
sub
sub
mov
sahf
and
jno
call
cmps
ret
push
ja
push
sub
xchg
mov
int3
xchg
test
mov
jmp
add
xchg
bound
jmp
jmp
and
fistp
mov
or
lods
xchg
loop
mov
mov
xor
add
xlat
ror
pop
mov
jle
sbb
sub
(bad)
jo
cwde
setg
das
xor
enter
jge
sbb
(bad)
jge
and
stos
outs
adc
and
xor
ja
inc
sbb
imul
xor
ficomp
test
mov
mov
sub
jl
adc
loopne
mov
adc
and
mov
cs
dec
mov
cmp
cli
pop
inc
aad
retf
aad
jo
inc
pop
(bad)
and
mov
ss
shl
int3
sar
inc
dec
out
xchg
sub
cmp
aas
imul
jg
xchg
push
ins
push
sti
mov
pop
je
xchg
or
adc
inc
adc
xor
add
loopne
dec
jge
sub
push
ret
sbb
inc
add
pop
addr16
rcl
pop
sub
dec
pop
pop
dec
dec
test
in
ins
pop
fistp
cmps
shl
xor
sahf
inc
cs
aas
popa
add
int
xchg
rcl
inc
mov
ja
pop
jmp
shl
fcmovu
addr16
retf
out
jo
ins
sbb
pop
or
movs
adc
test
xor
add
aam
xchg
mov
fucomip
ins
push
mov
mov
loop
pop
pop
and
(bad)
nop
sub
mov
pusha
mov
xor
xchg
jne
jge
inc
mov
or
mov
xor
xor
add
gs
dec
ret
pop
xor
xor
mov
(bad)
scas
daa
xchg
fstp
mov
(bad)
cmp
dec
inc
mov
dec
or
xor
(bad)
loopne
dec
shr
loop
fs
lds
out
and
fadd
int
iret
add
sahf
dec
xchg
ins
mov
movs
push
std
xchg
pushf
cmp
sbb
xchg
(bad)
int
test
dec
mov
push
xchg
sbb
adc
cmp
ss
or
jne
mov
sbb
dec
sub
pop
and
int
cmp
cdq
daa
or
int3
jnp
js
inc
adc
(bad)
je
mov
dec
jae
dec
ss
inc
movs
mov
inc
in
lds
mov
push
jmp
dec
fs
inc
jg
cld
outs
stos
lock
cwde
and
mov
movs
pop
fucomi
cmp
repnz
adc
dec
fwait
pushf
pop
xor
push
rol
sbb
ds
popa
lods
fnstcw
jmp
push
mov
xor
add
(bad)
jo
push
or
retf
or
pushf
loope
jo
lahf
cmp
cli
xor
add
sub
add
push
pop
ficom
lahf
and
retf
or
shr
or
xchg
daa
fcos
sti
fimul
pusha
iret
dec
cmp
or
jae
or
ss
jl
fwait
jge
jl
imul
sub
sub
es
data16
fld
fcomp
inc
call
loopne
and
fcom
lahf
push
push
mov
jno
push
fmul
xor
mov
fsubr
loop
cmps
mov
aad
std
and
or
clc
fwait
push
push
sbb
adc
jns
mov
ror
mov
sub
push
in
mov
mov
ficom
aad
ret
int3
in
jb
es
mov
adc
adc
fiadd
cmp
push
cwde
mov
fsub
(bad)
cmp
inc
data16
in
cmps
cwde
out
aad
sbb
pusha
js
push
cmc
cmp
pop
in
adc
add
cdq
call
addr16
aad
sub
cmp
add
add
lods
loop
cmps
mov
imul
movs
add
and
ror
das
pop
cmp
(bad)
sub
test
data16
adc
fstp
xor
push
lea
enter
mov
movs
nop
jb
mov
dec
rcr
sbb
push
scas
les
neg
retf
dec
jnp
fwait
scas
cmp
sar
aam
mov
bound
fiadd
(bad)
shr
mov
add
lods
lods
(bad)
pushf
sub
jnp
addr16
cmp
sbb
sbb
jmp
mov
add
ficom
mov
ins
sahf
ss
(bad)
loop
in
inc
push
push
data16
clc
test
scas
push
iret
mov
fiadd
rcr
in
sbb
ins
cld
sub
adc
inc
sar
fmul
cmps
inc
pushf
cmp
jb
cld
jge
ss
mov
inc
mov
mov
or
adc
push
pop
dec
jl
ss
mov
aaa
mov
jp
scas
mov
call
xchg
jo
push
int3
xchg
ja
mov
cs
je
sbb
imul
enter
sbb
pop
pusha
(bad)
cdq
out
rcl
dec
loope
rcl
dec
gs
outs
mov
rcl
xchg
pop
cmp
loopne
fadd
mov
mov
fwait
out
sub
lahf
jp
ds
pop
xchg
dec
rcl
cld
dec
mov
popa
call
retf
xchg
or
pop
aas
mov
pop
call
mov
push
dec
movs
aaa
ins
dec
fs
push
shl
cli
cmp
cmp
out
inc
jp
lahf
icebp
mov
xchg
lods
scas
push
outs
adc
or
retf
inc
xchg
inc
add
inc
mov
les
shl
and
imul
cwde
sub
sub
loopne
or
test
jbe
cmp
dec
sar
cmp
cmp
sbb
jl
sub
fs
loope
sub
jo
cmps
mov
and
outs
mov
jb
call
ja
inc
add
jmp
repnz
ins
mov
out
pop
stos
(bad)
mov
cmp
or
dec
xchg
pop
xchg
fs
pop
popa
sbb
and
cmps
dec
and
ror
aad
mov
push
xchg
add
xor
aam
sar
push
jo
repnz
sub
das
mov
pop
test
sub
dec
cmc
(bad)
stc
add
mov
jnp
stos
and
aas
or
je
fcomp
sbb
jnp
jbe
mov
mov
sahf
mov
cmps
push
xchg
fmul
mov
cmp
ja
scas
movs
dec
add
imul
add
adc
and
imul
mov
dec
std
sub
pop
push
cmp
xor
fdivr
xchg
loopne
sbb
dec
test
sbb
movs
jmp
dec
push
mov
xor
mov
into
mov
add
sti
scas
push
sub
dec
fist
jp
adc
inc
sub
cld
leave
xchg
adc
sub
shr
outs
out
cmps
jecxz
call
pushf
or
cmps
inc
ins
or
sahf
pop
and
inc
and
fistp
inc
jmp
fbld
xor
mov
lods
adc
xor
ja
xor
and
add
lahf
sub
push
leave
push
das
js
pop
(bad)
mov
test
and
dec
ss
call
in
dec
mov
in
push
cmp
inc
push
aad
mov
shl
popf
call
push
scas
xor
xchg
jo
pusha
mov
adc
stc
sahf
mov
push
lock
push
xor
dec
popa
lock
mov
test
dec
aas
pop
inc
xchg
popa
xchg
test
ins
rol
daa
test
mov
dec
imul
cmp
int3
mov
cmp
and
test
pushf
cmp
cld
or
out
cmps
scas
xchg
mov
xchg
jbe
shr
test
add
xchg
cs
dec
in
inc
into
pop
sbb
and
sub
mov
sub
dec
xchg
outs
adc
cli
(bad)
aas
mov
les
sub
pop
mov
fisub
mov
pusha
and
lahf
fwait
stos
fcom
sub
or
xchg
lds
pop
pop
rcl
cdq
cmp
xor
inc
push
stos
xchg
mov
xchg
(bad)
jb
daa
int
loop
fnclex
shl
or
shl
adc
retf
pop
bound
cmp
iret
lods
mov
pop
icebp
cmp
mov
adc
loopne
addr16
scas
scas
dec
cmps
and
mov
(bad)
push
or
mov
pop
cmp
jl
outs
icebp
sti
mov
cmps
xlat
xchg
inc
aas
mov
and
js
or
imul
sub
rcl
clc
gs
aad
fmul
pop
sub
adc
sahf
pop
push
cmc
cmps
push
outs
dec
ins
loop
dec
pop
(bad)
int
mov
call
xchg
pop
retf
stc
xchg
imul
movs
mov
and
std
push
lahf
pop
mov
fst
sub
inc
cmc
xchg
je
dec
repz
or
mov
mov
cmp
push
push
cmps
int
out
mov
pop
pop
dec
int
mov
pop
std
fcom
cmp
and
pop
cli
jne
and
popa
(bad)
cmp
push
in
ja
mov
int3
add
movs
mov
pop
inc
dec
cli
cmps
(bad)
inc
xchg
je
in
jno
aam
repz
mov
inc
mov
pop
xchg
cmp
(bad)
cmc
stos
clc
fdivrp
imul
adc
jl
jnp
scas
imul
sahf
push
dec
mov
and
scas
pop
jmp
or
clc
popa
adc
jp
add
jnp
jge
cmp
inc
pop
dec
(bad)
jae
into
nop
ret
or
push
xor
test
or
int3
sub
pop
cmp
add
int
adc
jbe
inc
popf
cmps
sub
adc
imul
call
xchg
cmps
in
inc
call
jmp
xor
stos
aaa
rol
push
jmp
fisubr
push
cdq
outs
push
sbb
stos
mul
test
(bad)
fist
jo
xor
mov
loopne
sub
mov
lods
jae
sub
jb
add
icebp
pop
inc
dec
xchg
dec
data16
(bad)
imul
bound
aad
lods
pop
xchg
mov
test
mov
pusha
cmps
aaa
sub
and
mov
xchg
push
xor
mov
pop
xor
mov
es
movs
and
mov
call
cli
in
sub
push
add
repnz
inc
and
lea
push
adc
dec
xchg
add
adc
ret
inc
xor
inc
std
sbb
fldenv
sahf
mov
ss
outs
xchg
inc
(bad)
xchg
inc
scas
(bad)
mov
cdq
push
std
pop
sub
mov
and
mov
shl
cmps
outs
stos
mov
and
add
pop
pop
inc
icebp
jl
das
xchg
ds
xor
xor
fidivr
mov
jmp
push
rcr
jne
adc
sbb
push
ins
imul
pop
cdq
ficomp
movs
ss
jmp
xor
mov
les
push
pushf
repnz
daa
inc
jno
dec
inc
pop
movs
mov
aam
mov
push
and
retf
xchg
sub
or
push
xchg
add
jl
push
cmps
ret
es
jge
xor
jg
jge
fidivr
rcl
das
inc
loop
sar
(bad)
and
fidivr
xchg
xchg
fidivr
adc
(bad)
sub
push
test
cmp
je
mov
cld
adc
out
adc
push
and
adc
pop
jp
xchg
mov
in
shl
xchg
jne
xor
jbe
sbb
test
adc
mov
stos
mov
mov
fistp
lahf
pop
or
ds
dec
dec
cld
or
mov
sub
ins
mov
xor
mov
fwait
adc
or
mov
sub
mov
jmp
imul
cmp
add
sahf
cmps
fld
mov
push
clc
les
dec
loop
bnd
push
popf
sub
pcmpeqd
push
mov
mov
sar
jmp
int
cld
mov
pop
and
adc
xor
lods
sbb
int
pop
nop
lea
sub
pop
in
addr16
iret
lds
int
pop
jp
or
push
mov
imul
sub
iret
sti
loopne
mov
adc
call
xor
jge
jecxz
(bad)
sar
hlt
shl
and
inc
mov
xchg
mov
pop
fst
pop
and
jnp
xchg
sub
sbb
sub
ret
and
cmp
jb
push
hlt
hlt
int3
sahf
add
jns
int
mov
dec
sar
mov
out
dec
dec
int
add
inc
loopne
adc
cmp
xor
sbb
in
push
push
das
and
lock
leave
add
jp
xor
pusha
mov
out
pminsw
push
addr16
mov
add
mov
mov
in
mov
and
adc
jge
loop
push
jae
leave
loopne
cld
and
nop
xor
lods
pop
xor
jne
mov
stos
xor
jbe
ins
and
call
pop
jns
popw
mov
add
sar
pop
ins
dec
sub
aas
hlt
imul
loopne
arpl
mov
inc
inc
aam
xchg
retf
pop
pop
sbb
cmp
dec
imul
aad
outs
sbb
sahf
cmp
sbb
test
adc
sbb
push
test
sbb
(bad)
sbb
cmp
stc
(bad)
mov
loop
sbb
dec
jmp
hlt
or
cmp
mov
stc
sahf
es
outs
xchg
fimul
inc
call
add
add
sbb
xchg
je
sbb
push
fcomp
add
stos
mov
jp
ret
ins
xor
jo
jp
dec
jecxz
xor
scas
mov
and
fiadd
jle
imul
sub
iret
dec
loope
(bad)
mov
jge
into
jmp
rcl
aaa
fwait
(bad)
cld
sub
fimul
(bad)
jmp
dec
jbe
xchg
loope
aad
sar
aad
mov
sbb
dec
mov
inc
retw
sub
(bad)
fsub
and
xor
push
std
or
mov
mov
(bad)
leave
mov
movs
ins
cld
and
bound
ins
jecxz
dec
mov
cmp
out
inc
mov
pop
cli
pop
movs
mov
call
mov
add
in
jge
pop
jp
js
cmp
sar
pop
lods
repnz
icebp
(bad)
jno
inc
cmp
out
ss
in
dec
dec
inc
push
dec
leave
push
adc
add
xchg
jmp
push
xor
std
xor
xlat
scas
out
or
outs
clc
inc
jmp
inc
sbb
stc
fldenv
inc
cmp
stos
mov
pop
jmp
sti
pop
pop
mov
icebp
inc
enter
cs
pop
in
mov
jp
jnp
scas
inc
ss
or
lock
mov
or
push
std
cmp
out
jmp
push
in
push
and
leave
ficom
adc
fcom
jne
rcr
xchg
xchg
xor
cmp
jecxz
xor
xchg
pop
int3
stos
pop
xchg
inc
sub
pop
sbb
jb
and
(bad)
ds
out
dec
push
sub
test
pop
and
and
lods
push
inc
mov
loop
cmps
mov
dec
cmp
xor
sub
mov
sti
mov
mov
ins
xor
cmp
cmc
clc
jecxz
cmps
push
inc
fisubr
enter
cmp
sbb
push
in
dec
or
lods
jb
or
inc
and
retf
jecxz
movs
xchg
dec
gs
mov
xchg
stos
sub
push
pushf
pop
sbb
shl
jbe
sub
jecxz
les
pop
dec
je
xor
enter
imul
push
pushf
mov
hlt
cmp
int3
stc
outs
xchg
loop
aam
lock
in
enter
push
inc
xchg
dec
ins
mov
leave
in
movs
repnz
jns
daa
jge
sti
push
loope
jp
fisubr
daa
cmp
mov
repz
or
adc
jbe
dec
mov
jmp
mov
add
adc
adc
movd
push
inc
ret
std
and
nop
popf
ret
cmp
xchg
cmp
pusha
outs
in
movs
das
jae
fdivr
shr
xchg
sub
mov
dec
test
xor
int3
cmp
and
mov
sub
ret
(bad)
sub
(bad)
mov
jg
add
and
movs
mov
jne
imul
bound
sbb
ret
pop
push
jle
jno
push
out
lahf
mov
call
cmps
mov
ret
dec
or
stos
retf
cmc
cmps
and
sti
mov
mov
fs
or
ins
das
cdq
inc
jnp
sub
sub
das
mov
and
test
pop
jle
sub
ror
fimul
sub
cdq
ins
inc
(bad)
cmps
push
dec
lea
sub
test
push
add
fisub
cs
pop
pop
xchg
call
bound
add
data16
mov
daa
popa
mov
pop
addr16
mov
dec
fs
pop
xor
dec
fsubp
jecxz
add
cmp
sbb
lock
xchg
sub
xor
stos
call
fmul
xchg
imul
inc
leave
(bad)
clc
imul
hlt
arpl
shr
inc
outs
fstp
jmp
sub
adc
gs
(bad)
pop
unpckhps
push
inc
mov
retf
cmp
xchg
mov
mov
or
leave
push
push
pushf
popa
sub
cmp
sbb
mul
data16
or
sub
mov
xchg
aam
(bad)
push
cwde
jmp
stc
arpl
jnp
mov
jne
jmp
cmp
dec
and
lds
and
push
hlt
out
bnd
or
sub
jmp
clc
(bad)
sti
xchg
dec
sub
mov
ror
xchg
fcmovb
xchg
rcl
sti
ds
test
rcl
out
or
cmp
in
sbb
mov
rcr
ins
mov
adc
pop
cmp
push
ds
sti
xor
idiv
dec
sti
mov
or
aam
add
cmc
pop
xchg
retf
xor
sub
test
mov
inc
pop
xchg
retf
nop
add
outs
loope
jnp
lods
cmp
cmp
mov
dec
out
sub
(bad)
popa
pop
inc
add
or
scas
dec
inc
scas
xor
dec
(bad)
push
jp
cmp
ja
fsub
fmul
push
pop
fmul
mov
xor
daa
xchg
add
pop
adc
mov
loope
stos
rcl
jmp
mov
xor
arpl
ins
push
aam
and
push
mov
(bad)
push
movs
or
cmps
int3
stc
jno
popf
int3
push
inc
xor
xchg
(bad)
vpsubd
adc
mov
cmps
jnp
add
inc
data16
sub
icebp
dec
dec
sub
addr16
sub
dec
stos
or
daa
fs
cmp
out
push
adc
add
shr
fist
outs
xchg
mov
lods
outs
std
sub
int
add
cmp
jb
loop
sub
mov
cwde
xor
sar
aam
aas
mov
push
out
cmc
test
dec
lods
pop
add
sub
adc
inc
test
xor
push
jecxz
cld
sub
dec
ja
sub
in
fldcw
pop
retf
xchg
div
std
enter
mov
out
add
inc
pop
sbb
mov
pop
jo
pop
ret
popa
lds
rcr
fisttp
mov
push
adc
in
xchg
xchg
xor
(bad)
call
adc
lock
clc
(bad)
rol
mov
lods
mul
and
test
sub
push
(bad)
cli
xor
xor
or
dec
mov
mov
or
pop
xor
add
cmp
ins
jmp
pop
in
or
jp
adc
push
sub
(bad)
repnz
mov
cwde
(bad)
fwait
sahf
shr
pop
jmp
push
lods
cwde
icebp
into
fmul
push
stos
push
inc
pop
mov
sbb
xor
dec
(bad)
les
mov
xchg
(bad)
call
aam
icebp
and
and
and
mov
cmp
push
mov
popa
push
jp
adc
ins
cdq
das
rcl
dec
icebp
xchg
adc
mov
lods
xchg
mov
push
mov
leave
sbb
in
sbb
pusha
ret
call
aas
lods
jns
xlat
(bad)
popa
cmps
ror
jmp
repz
fcom
adc
cmp
push
in
add
in
stc
inc
js
mov
loopne
inc
(bad)
adc
addr16
inc
cs
aad
add
mov
movs
rol
xor
and
scas
xor
mov
pop
sub
push
neg
xchg
xor
stos
sti
or
push
mov
int
fwait
data16
pop
pop
and
leave
or
inc
sbb
lahf
leave
ins
std
cmp
pushf
mov
xchg
pop
jge
push
and
outs
pop
ins
fsubr
xor
cmps
(bad)
fcomp
or
rol
cmps
mov
add
xor
add
or
lahf
dec
inc
dec
dec
push
test
adc
push
xor
jg
mov
jmp
fiadd
test
inc
out
and
mov
in
lahf
bound
stc
or
fld
inc
sbb
pop
jo
cmp
xchg
fist
mov
enter
ret
lock
push
jl
dec
push
mov
xchg
in
dec
lods
call
dec
ja
fidiv
out
jecxz
fnstcw
sbb
inc
mov
sbb
pop
rol
arpl
add
in
shl
stos
adc
sub
fimul
aas
jmp
aas
outs
xchg
xor
daa
xchg
jo
jnp
sub
lock
clc
movs
mov
test
fwait
or
outs
xchg
inc
lds
test
and
xor
inc
lods
lods
pop
in
dec
aad
mov
in
adc
retf
pop
xchg
mov
and
mov
push
cld
stc
shr
rcr
xor
push
or
call
jae
xchg
sar
test
pop
enter
pushf
pop
addr16
ins
inc
test
xor
and
mov
xchg
shl
test
xor
dec
dec
bnd
mov
pushf
and
hlt
retf
cmp
add
aas
nop
xor
adc
into
call
and
or
xchg
adc
or
cwde
sar
jg
lods
adc
jecxz
shl
test
sbb
int3
cmp
cmps
nop
out
shl
ss
movs
push
inc
mov
imul
call
addr16
imul
or
ds
sar
mov
cmps
test
popf
sahf
ret
gs
test
push
stc
sbb
mov
cs
cli
(bad)
sar
loopne
pop
sub
xchg
pushf
stos
cwde
cli
scas
inc
or
mov
jo
in
scas
and
jmp
mov
lods
jmp
fisttp
stos
or
(bad)
cdq
cmp
xchg
fistp
or
mov
les
fdiv
push
dec
cmps
out
int
(bad)
sub
loopne
es
pop
fisttp
test
sub
dec
xchg
sbb
pop
add
std
push
arpl
out
jge
mov
movs
adc
je
mov
xor
repz
adc
sub
jge
and
jbe
sahf
lea
pop
(bad)
ret
mov
cmp
div
retf
xchg
jecxz
data16
sbb
dec
cmp
pop
mov
push
mov
mov
ins
bound
mov
mov
xchg
std
push
lods
xchg
xor
inc
or
inc
popa
sti
add
mov
adc
pop
imul
mov
inc
mov
mov
mov
retf
stos
sbb
jp
jl
pop
sub
arpl
mov
add
add
les
jmpw
mov
popa
xor
lods
add
ror
sub
lock
cs
lods
dec
cmp
inc
retf
add
dec
push
je
rol
ins
adc
cmp
aad
push
fs
(bad)
pop
add
loop
lock
jne
cmp
(bad)
pmaddwd
jae
jmp
mov
shl
stos
and
jmp
push
out
push
mov
aaa
mov
in
in
dec
mov
mov
test
and
add
es
sub
push
jle
scas
cld
jmp
inc
nop
jnp
loopne
cwde
and
(bad)
sbb
sti
cli
pusha
gs
cmp
mov
push
jno
mov
xchg
movs
and
cmp
aas
pop
and
pop
cmc
in
push
cmps
(bad)
cwde
stc
pusha
aaa
nop
sub
iret
in
ja
dec
sub
dec
and
in
(bad)
pop
xchg
imul
ja
push
mov
jb
outs
pop
movzx
push
pop
mov
mov
jl
les
sbb
sbb
cmp
inc
add
cmp
mov
cmp
test
mov
scas
repnz
jno
test
xor
inc
iret
xchg
sbb
push
jns
dec
mov
ret
cmp
retf
(bad)
sub
cdq
push
fxch
xchg
inc
pop
pushf
pushf
dec
data16
sub
pushf
int
pop
fxch
outs
mov
scas
retf
or
cs
mov
dec
in
mov
mov
jbe
leave
test
ffree
mov
push
(bad)
pop
es
pop
rol
dec
sbb
mov
popf
in
mov
push
ret
shl
rcr
mov
jmp
fmul
mov
(bad)
imul
test
cmp
and
les
add
pop
jno
add
ficomp
jne
or
jp
xor
push
or
pop
pop
mov
stos
stc
aaa
xchg
(bad)
ror
hlt
sub
pop
ins
pushf
jmp
retf
mov
sbb
scas
xchg
into
cmp
and
inc
movs
imul
mov
mov
rol
sti
stos
lods
sub
add
sbb
imul
jle
fidiv
cli
xlat
xor
xchg
pop
retf
cmps
cmps
or
cmp
dec
je
sahf
dec
out
or
push
pushf
xchg
jmp
data16
xchg
push
xor
fimul
popf
add
in
aad
adc
out
mov
and
jg
xor
pop
fisub
in
mov
aam
add
xor
cld
add
jge
mov
movs
push
out
test
push
test
xchg
xchg
(bad)
and
out
adc
bound
dec
adc
call
or
lahf
xchg
pop
xlat
pop
inc
and
aad
push
stos
daa
jae
jae
inc
push
test
jge
jo
xchg
lods
pop
fs
(bad)
mov
aaa
mov
clc
fs
push
in
fstp
and
ins
call
out
xor
ret
mov
lahf
push
xor
jne
sub
cdq
pushf
sub
jle
bound
mov
lods
cmps
lods
xchg
out
mov
push
jno
mov
movs
out
nop
ja
sahf
shr
mov
shr
pop
(bad)
mov
xor
(bad)
jns
add
fisub
data16
mov
pop
jno
retf
sub
lods
sbb
sahf
pop
pop
cld
cmp
lds
sti
pop
pop
cmp
pop
add
push
int3
dec
push
sub
jp
xchg
ins
sub
mov
mov
cmp
push
mov
or
sbb
(bad)
adc
pop
adc
pop
aam
mov
cmp
aad
xchg
dec
icebp
adc
add
sub
xchg
xchg
ficomp
jae
lods
(bad)
sub
pushf
mov
enter
add
repz
pop
rol
sbb
loope
pop
mov
(bad)
imul
mov
jmp
data16
or
mov
add
dec
in
or
xor
sahf
test
mov
les
jne
or
mov
mov
ja
jecxz
or
inc
xchg
idiv
dec
push
sub
jp
shl
xchg
inc
out
fld
arpl
inc
mov
cmp
popf
pop
(bad)
aad
dec
mov
fst
jae
in
cmp
adc
xchg
push
les
push
jmp
push
sbb
xlat
mov
(bad)
outs
mov
mov
imul
sub
movs
movs
xor
rcr
popf
and
daa
xchg
jmp
jp
xchg
add
and
push
add
push
mov
shr
dec
fldcw
cmp
add
add
sti
aad
jmp
pop
push
add
and
pop
pop
adc
ja
push
sbb
sbb
aad
ss
xchg
and
mov
imul
int3
imul
loop
pop
out
out
adc
cmp
nop
push
stos
shl
xchg
mov
push
inc
xor
hlt
fwait
inc
mov
pop
xchg
pop
fisttp
push
xchg
ret
mul
mov
inc
ins
sahf
inc
int3
dec
(bad)
fwait
(bad)
(bad)
std
lods
and
loop
push
adc
lods
lea
scas
mov
fs
js
mov
mov
movs
cmp
xchg
(bad)
ins
out
push
jg
pop
jno
jb
mov
imul
push
mov
xor
sbb
shl
test
mov
sahf
(bad)
xchg
mov
and
pop
loopne
push
inc
movs
xlat
sbb
pop
outs
outs
out
pop
loope
cmp
jl
adc
push
inc
inc
pop
sbb
sub
adc
jecxz
cmp
retf
adc
dec
mov
cmp
add
ret
sbb
int
scas
lods
inc
jo
jbe
gs
out
ins
jno
loope
add
pop
mov
and
scas
imul
adc
or
jg
push
cmp
nop
sbb
jb
mov
pop
mov
sti
cmp
jg
jle
dec
hlt
jecxz
(bad)
out
jbe
imul
iret
push
cwde
shl
shr
pop
pop
popa
jmp
out
dec
and
or
cli
fstp
outs
nop
in
or
dec
xchg
int
xor
inc
mov
test
fnstenv
push
pop
cwde
out
pop
mov
xor
int
dec
rcr
sub
push
adc
cmps
add
jmp
push
xchg
adc
in
ins
push
std
bswap
daa
push
rcr
jns
pop
xchg
mov
xchg
xlat
shl
fwait
mov
mov
fisttp
clc
adc
rol
push
ins
sub
fdiv
pusha
(bad)
and
das
pop
sbb
repz
repnz
repz
scas
jmp
ins
xchg
xchg
shr
bound
lea
aad
mov
or
retf
loope
dec
mov
loopne
cmp
and
push
in
mov
jb
les
push
cld
pop
das
pusha
arpl
inc
sub
and
push
mov
xchg
stos
fldenv
test
in
mov
dec
cmc
mul
dec
test
in
mov
pop
cdq
iret
icebp
enter
test
rcr
dec
adc
mov
jmp
sbb
in
adc
pop
out
ds
and
test
int3
jno
ret
sahf
outs
sti
xor
nop
dec
inc
add
jb
and
adc
cmp
movs
loope
mov
dec
pop
cmp
xor
out
out
cmps
adc
sar
gs
int
(bad)
jbe
pusha
movhps
sub
jecxz
sahf
push
dec
test
or
fs
inc
js
loopne
dec
sub
sbb
jge
jp
js
xchg
push
xor
or
in
and
xor
and
outs
sbb
mov
(bad)
sub
and
inc
xlat
scas
mov
aad
ja
dec
dec
jne
outs
adc
movs
mov
dec
adc
add
mov
mov
movs
rcr
loopne
repz
cmps
sub
mov
sbb
push
cmp
adc
adc
shr
add
loopne
jae
scas
xchg
jnp
stos
mov
nop
mov
mov
mov
in
pop
inc
sbb
jmp
mov
mov
sahf
ja
leave
repnz
popa
jns
mov
xor
movs
dec
inc
int
sbb
jmp
into
loop
jne
mov
shl
pop
push
lock
xchg
jle
stc
call
into
popf
div
dec
pop
and
mov
in
xchg
lods
fisttp
or
or
fs
std
inc
adc
ins
jnp
mov
push
mov
rol
es
mov
xchg
dec
push
nop
sub
shl
ds
adc
pop
imul
imul
jmp
cs
js
neg
add
sbb
sbb
jb
sub
pop
in
xchg
and
and
adc
jmp
sub
outs
jae
pop
in
sbb
mov
jmp
pop
ins
add
pop
das
imul
jns
and
adc
lahf
std
sahf
sub
mov
adc
out
leave
inc
arpl
test
mov
mov
jae
fcom
mov
push
aas
retf
pop
xchg
jb
mov
das
idiv
clc
jbe
dec
mov
adc
les
dec
mov
cwde
or
retf
bswap
rcl
movs
push
int
(bad)
jmp
test
bound
es
cmp
inc
inc
(bad)
or
shl
aaa
pop
ss
sub
jo
movs
cmp
jbe
fstp
pop
aaa
out
cli
retf
sbb
es
out
jnp
lods
stc
jbe
shl
mov
(bad)
dec
jmp
sahf
add
fstp
xchg
mov
(bad)
push
or
bound
cdq
test
or
cmp
imul
xchg
es
clc
stc
fstp
outs
fst
jecxz
mov
pop
xlat
xor
inc
repz
daa
scas
add
fidivr
in
pop
jns
out
sbb
xchg
mov
xor
xchg
push
(bad)
sbb
xchg
sub
add
or
mov
jmp
shl
xchg
dec
push
call
ret
popf
dec
sub
xor
retf
add
xor
rcr
scas
hlt
adc
sar
or
aaa
cmp
mov
adc
movs
and
dec
dec
test
jp
rcl
hlt
aaa
adc
mov
mov
inc
jae
jnp
dec
adc
clc
push
mov
sbb
cmp
aad
mov
enter
int
ficomp
mov
jle
xlat
into
int3
imul
cwde
cmps
int
arpl
mov
jb
jmp
jae
gs
cmp
xchg
addr16
push
mov
push
jmp
mov
jmp
xchg
mov
mov
xchg
mov
leave
sahf
mov
out
ds
loope
fwait
sar
in
popa
daa
retf
mov
lods
js
xor
repnz
data16
push
stc
inc
xor
pop
in
popa
jne
out
in
xchg
mov
int
fs
xchg
jae
jne
out
mov
test
scas
pusha
call
add
pop
les
mov
sub
and
rcr
nop
stos
or
(bad)
fst
cdq
mov
out
mov
call
pop
test
add
xor
xor
mov
xor
mov
data16
pop
push
enter
imul
stos
shl
mov
icebp
cmp
inc
xchg
lahf
fisubr
clc
call
sar
xlat
dec
lods
xchg
dec
fcmovb
mov
imul
push
mov
mov
je
fdiv
leave
sti
test
mov
stos
mov
ret
icebp
lds
dec
daa
sbb
ins
mov
test
sub
pop
push
ja
sbb
dec
add
shl
test
mov
test
push
pop
dec
mov
dec
leave
xchg
aaa
mov
add
int3
add
jmp
(bad)
call
add
mov
out
fmul
mov
mov
mov
outs
xchg
pop
pop
mov
jge
and
outs
test
fmul
mov
mov
stos
jno
add
into
mov
mov
js
mov
ins
iret
pop
js
lahf
dec
adc
ds
mov
fisub
in
test
sub
in
std
xor
dec
fild
pop
js
lds
lods
aad
stos
stos
and
xchg
jbe
dec
xor
xchg
push
sbb
loopne
mov
push
dec
(bad)
mov
jecxz
out
inc
shl
or
jp
push
mov
xor
or
jbe
sub
iret
inc
mov
xor
ret
mov
and
into
test
sub
push
std
hlt
xor
jg
jnp
and
aas
add
outs
bound
and
test
sbb
xchg
dec
mov
dec
add
rcl
sbb
jge
or
mov
dec
aad
inc
aad
xchg
push
adc
add
scas
arpl
int3
int3
int
shl
data16
adc
and
sbb
push
or
shl
inc
push
lock
cmp
push
inc
cmp
xor
mov
jge
lods
add
jnp
(bad)
fisub
sbb
fbstp
pop
retf
leave
or
push
stc
dec
mov
or
stos
pop
jbe
sub
xor
push
shr
imul
add
mov
dec
or
xchg
pop
inc
dec
push
ins
call
or
adc
hlt
cld
dec
cmp
lods
retf
push
xchg
(bad)
adc
jle
mov
scas
out
xor
dec
test
jnp
push
addr16
sbb
repz
leave
aas
xchg
lahf
sub
cli
movs
scas
add
xchg
outs
clc
(bad)
jmp
xchg
pop
(bad)
test
test
push
and
inc
(bad)
pushf
call
push
aad
cmps
push
fst
push
hlt
in
mov
lock
inc
sar
add
leave
jge
jmp
jb
lods
pop
add
out
call
shr
neg
gs
pop
push
sub
repz
test
stos
fldenv
test
cli
aam
and
stos
pop
adc
mov
cmps
fstp
(bad)
test
xchg
(bad)
cmps
sub
sahf
push
adc
cmp
fisttp
mov
loop
loope
mov
aaa
and
and
mov
dec
dec
test
into
jmp
dec
pop
cli
pop
xchg
sbb
dec
in
pop
inc
push
retf
dec
out
imul
xchg
pop
and
push
inc
in
(bad)
in
push
push
sbb
jb
scas
ret
out
push
ret
stos
fldcw
mov
pop
fild
(bad)
cmp
dec
mov
outs
mov
mov
sbb
adc
test
mov
dec
lods
popa
js
lds
mov
mov
mov
pop
dec
stc
and
out
dec
clc
and
test
pop
xor
inc
sbb
sbb
icebp
aaa
(bad)
xchg
mov
xchg
adc
test
movs
mov
inc
add
jnp
daa
xor
lahf
stos
push
xchg
stos
adc
push
dec
jmp
sub
or
inc
sar
lahf
cli
xchg
xor
sbb
jmp
(bad)
sti
outs
adc
in
std
call
cmp
jle
pop
inc
jns
mov
arpl
push
call
iret
fadd
or
pop
das
add
enter
add
test
(bad)
and
shl
sbb
mov
retf
cmp
fsub
dec
jo
mov
dec
fs
sub
adc
ins
test
lds
fnstcw
sti
mov
mov
jecxz
push
mov
aaa
cwde
in
pop
repz
imul
dec
in
jp
inc
dec
cpuid
imul
popa
ficom
pop
or
mov
or
push
adc
lods
(bad)
std
jb
xchg
(bad)
in
loop
lds
and
cmp
inc
mov
aaa
xchg
and
mov
mov
ins
push
pop
aas
out
movs
mov
out
jl
xor
adc
inc
aam
das
jge
cmp
mov
lods
popf
and
or
movs
xor
xor
mov
jl
movs
pop
jle
ss
sub
fidiv
dec
fstp
rol
ror
dec
out
dec
push
jmp
jge
hlt
retf
mov
xchg
idiv
mov
pop
cmp
int
scas
pop
leave
xor
and
bound
je
inc
outs
push
add
adc
aaa
mov
pop
sar
aas
xchg
retf
test
sub
mov
ss
imul
adc
xchg
dec
scas
jmp
dec
adc
cmp
xor
cmc
sub
addr16
inc
gs
repnz
dec
mov
lahf
hlt
xchg
imul
mov
mov
dec
lea
stos
adc
push
cmp
ficomp
shr
jae
jp
xchg
leave
ficomp
or
cmp
(bad)
cmp
outs
mov
fsub
xor
stos
inc
lahf
das
ret
sar
mov
rol
add
adc
adc
call
dec
mov
or
leave
pop
or
sub
jmp
push
les
mov
sub
rcl
retf
je
fst
or
cmp
mov
in
mov
aam
and
and
xchg
pop
mov
mov
rcr
jmp
lods
pop
jge
adc
stc
dec
rcr
push
xchg
cmp
xchg
adc
cmp
out
jno
int3
jmp
pusha
and
push
je
pop
dec
xor
(bad)
jne
dec
(bad)
fisttp
outs
xor
out
jmp
inc
xor
std
adc
sbb
cmp
push
inc
push
addr16
push
or
xor
inc
adc
sti
and
shr
jge
mov
lds
add
mov
gs
(bad)
jg
adc
mov
pop
imul
(bad)
das
sbb
aam
xchg
inc
or
jbe
xor
movs
mov
pop
xchg
jl
adc
push
mov
movs
aad
popf
cmc
cli
mov
lds
ins
add
push
push
pop
and
jge
(bad)
mov
(bad)
(bad)
cmp
sub
mov
and
out
xor
movs
add
hlt
cmc
fwait
sub
mov
cmp
or
pop
jmp
push
cmps
sub
xchg
mov
loopne
test
mov
mov
dec
ds
jl
mov
ja
jnp
lock
xchg
sahf
cwde
pusha
in
mov
xchg
(bad)
jmp
shr
mov
adc
pop
loope
js
into
ins
and
jl
das
jp
and
aad
addr16
(bad)
mov
push
mov
jns
ds
stc
push
jns
dec
dec
jno
adc
fwait
cmp
jns
inc
inc
inc
jae
push
retf
mov
sahf
test
test
dec
jge
push
das
jns
or
add
jl
mov
push
repz
sbb
ins
daa
jno
enter
movs
iret
jmp
jl
rcr
fcom
aam
(bad)
xor
inc
mov
aam
mov
loop
sub
or
fsubp
scas
pop
push
jmp
ror
idiv
push
push
imul
es
test
xchg
adc
pushf
xor
mov
xchg
loopne
arpl
sbb
mov
push
mov
pop
call
inc
in
dec
pop
inc
jns
pop
std
dec
jno
pop
fist
mov
dec
retf
fld
call
inc
fimul
out
stos
fwait
pop
adc
addr16
retf
sbb
jo
aas
daa
or
sbb
or
cli
jbe
jbe
mov
aam
add
imul
cmp
add
test
int
test
ds
mov
repz
cdq
sbb
pusha
cmp
ret
out
mov
mov
push
or
adc
fs
cmp
and
adc
xchg
test
mov
cmps
mov
ja
push
dec
dec
xor
test
dec
mov
add
jg
xor
xor
xchg
xchg
pop
pop
jb
cmps
add
rcr
cmp
jg
idiv
in
push
dec
out
xor
rol
loopne
lods
mov
jge
cmp
iret
jg
movs
cwde
jle
and
shl
or
in
xchg
fld
mov
inc
shl
push
gs
dec
push
xor
jle
(bad)
repnz
pop
dec
pop
push
daa
call
mov
xor
jne
inc
jne
loope
fld
jmp
push
pop
iret
push
out
outs
mov
repnz
mov
mov
mov
push
mov
std
je
leave
dec
add
and
ror
and
je
popf
fwait
sbb
nop
jns
push
mov
xor
hlt
outs
cs
loope
(bad)
and
mov
inc
sub
rcl
mov
neg
ror
aam
(bad)
int3
shr
jmp
enter
mov
movs
inc
fistp
ins
(bad)
mov
sbb
cmp
rcr
jae
and
icebp
jmp
and
out
(bad)
jnp
rcr
mov
ins
adc
fsubr
lods
aad
mov
les
add
cmps
push
fisttp
inc
cmp
adc
adc
cmp
cmps
movs
(bad)
xlat
sti
gs
xor
mov
and
jl
xchg
enter
repz
cwde
lods
or
cwde
inc
or
call
adc
xchg
fist
mov
ss
jno
add
xchg
rol
sbb
addr16
mov
test
lahf
ins
cmps
or
das
(bad)
stc
ins
setns
mov
pop
mov
(bad)
cmp
out
push
vunpcklps
cdq
pop
jne
add
xor
test
adc
cmp
cdq
std
fs
and
add
mov
cwde
inc
aaa
stos
fstp
add
sub
test
jbe
inc
mov
cmp
jne
adc
jl
jle
repnz
and
push
neg
xor
out
fsub
inc
aad
dec
fs
cmps
sbb
inc
jmp
dec
dec
(bad)
scas
sti
stos
or
and
mul
cmp
or
jno
pusha
push
add
shr
xor
xchg
jae
adc
adc
ja
rol
das
and
add
data16
pop
xchg
lods
sbb
in
pushf
rcl
lods
sub
push
mov
jbe
adc
enter
push
fisubr
inc
xchg
lods
cmp
outs
mov
lea
dec
mov
faddp
add
bound
cmp
dec
or
int3
loop
jo
push
scas
lock
fcomi
lods
mov
cs
lea
mov
jns
push
cld
aad
inc
repnz
stos
mov
push
(bad)
mov
popf
inc
jne
jae
mov
pop
mov
aam
lock
sub
cmc
push
pop
lds
mov
jmp
add
push
sbb
push
mov
xchg
sar
mul
fstp
arpl
dec
(bad)
lea
retf
cmp
in
cld
fdivr
or
jae
pop
dec
arpl
mov
pop
or
retf
fcmovnu
scas
sar
pop
ret
mov
inc
mov
adc
test
xchg
jp
in
dec
aam
bound
in
xchg
js
pop
rol
loope
pop
pop
mov
and
and
repnz
fwait
imul
pop
sub
arpl
jnp
mov
outs
inc
inc
jne
dec
push
mov
mov
sub
mov
or
mov
bound
dec
aam
arpl
jb
sub
ds
cli
dec
and
cmp
jmp
cmp
xor
inc
cli
(bad)
neg
jg
ror
jp
push
push
or
mov
popa
popf
dec
mov
push
fcmovb
xor
cmp
leave
push
push
imul
popf
mov
pop
mul
or
pop
jne
mov
or
mov
jo
pop
fisubr
imul
xor
jge
and
push
mov
test
jno
jle
(bad)
fcomp
stos
jp
lea
fldenv
or
mov
aas
stos
sahf
mov
jb
and
sbb
dec
sbb
clc
push
pop
xor
ds
adc
jne
test
push
pop
mov
adc
jae
xor
sar
or
les
jmp
ss
sub
add
push
xchg
mov
(bad)
jbe
loope
cs
jl
cmp
pop
fisttp
xchg
or
pop
push
pop
std
(bad)
or
nop
mov
push
vminss
mov
popf
jecxz
xor
xor
fild
jg
sbb
mov
push
lods
pushf
pop
movs
jg
es
aas
pop
fstp
add
cmp
xor
cmc
push
xchg
inc
addr16
sub
dec
jle
xor
dec
add
mov
mov
dec
sbb
lea
ffree
mov
daa
cmp
inc
xchg
xchg
aad
push
daa
adc
pop
movs
sbb
sbb
test
push
jae
jno
mov
sbb
shl
dec
push
and
inc
aaa
mov
fnstcw
cld
or
leave
xchg
cdq
call
sub
mov
repz
and
xchg
out
cmp
cmps
pop
das
jne
or
inc
dec
jecxz
mov
pop
pop
jo
jl
xor
aaa
loope
dec
imul
fisubr
cmc
fwait
xor
adc
nop
pop
arpl
push
and
jle
and
leave
cld
scas
out
ins
fwait
lods
jmp
inc
jp
xchg
push
mov
out
mov
in
mov
xor
les
jge
xor
fidiv
(bad)
mov
fwait
cwde
jne
cmps
pop
sbb
jbe
jmp
mov
aaa
pop
inc
shl
or
jnp
jle
and
out
mov
cmp
dec
in
imul
enter
dec
or
fs
jle
stos
inc
ret
push
or
popa
xor
jnp
arpl
fild
and
pop
cmp
ins
xchg
adc
fwait
enter
and
stc
pop
xchg
ins
or
hlt
clc
push
mov
loop
pushf
mov
adc
jl
cmp
leave
(bad)
aas
sub
add
jmp
dec
and
enter
ret
test
cwde
sub
add
imul
test
pop
(bad)
aad
out
mov
sub
clc
inc
call
enter
jb
xor
adc
mov
arpl
addr16
jbe
adc
mov
mov
inc
push
mov
or
dec
mov
sbb
push
popf
es
and
pop
push
sub
pop
shr
in
push
xlat
cli
movs
xor
jmp
mov
push
mov
or
pop
mov
sbb
xor
iret
addr16
push
retf
fbstp
add
jl
jno
int
inc
inc
pusha
sbb
sub
sti
lea
es
sub
sbb
push
or
mov
sti
push
neg
inc
in
xchg
push
repz
fsub
xchg
mov
and
cmp
mov
mov
repnz
mov
mov
or
or
push
addr16
sub
jns
adc
push
inc
xchg
xchg
addr16
inc
(bad)
jae
out
sub
in
mov
bound
dec
mov
div
inc
and
mov
repz
adc
outs
ficomp
mov
fwait
jne
shl
retf
mov
cmc
and
aam
jns
(bad)
adc
mov
pop
imul
or
and
dec
xor
(bad)
outs
pusha
bound
ins
push
dec
jnp
outs
add
mov
push
mov
rcl
jmp
sbb
in
test
dec
pusha
push
xchg
clc
aad
pop
xor
rol
mov
sbb
mov
inc
mov
cmp
pushf
dec
mov
scas
pop
mov
jnp
aam
imul
fistp
and
and
stos
fsubr
cwde
xchg
jg
jb
and
les
adc
jge
xchg
ja
jb
fstp
dec
mov
cdq
jae
ja
push
mov
test
sbb
ror
popa
in
and
jg
test
pop
repnz
retf
sub
lods
adc
(bad)
xor
jp
and
in
aaa
dec
mov
arpl
mov
sbb
xchg
gs
(bad)
jecxz
pushf
jo
pop
cmc
leave
fwait
scas
in
sbb
stos
xor
movs
daa
retf
add
or
loope
mov
cld
std
imul
cmc
test
stc
lds
push
dec
dec
or
fs
fcomi
(bad)
mov
fistp
mov
int
mov
mov
fcom
cmp
dec
inc
jns
adc
cwde
sub
add
mov
test
rcl
cmps
and
xor
(bad)
ror
jecxz
outs
call
push
test
and
jno
sbb
push
jbe
jmp
aad
mov
fld
int3
enter
mov
sbb
sub
shr
push
mov
jle
inc
push
pop
mov
mov
sar
adc
cmp
jp
imul
ja
mov
js
ret
inc
inc
push
adc
fcom
out
fisttp
cmp
jmp
stos
sub
cmp
xchg
movs
es
test
outs
adc
out
cmp
aad
outs
lods
push
int
or
int
pop
mov
fldenv
jp
cmp
in
fcom
inc
ret
fldenv
mov
jmp
dec
pop
add
add
and
loope
retf
test
hlt
push
sub
xor
sti
inc
push
mov
ins
retf
push
mov
jp
rcl
popa
(bad)
and
push
loop
dec
and
push
ret
ficomp
push
mov
mov
data16
xor
mov
jp
jno
sub
outs
mov
call
adc
imul
rol
mov
je
fiadd
dec
xor
outs
gs
xchg
dec
cmp
popf
add
push
data16
fild
shl
xor
or
std
sti
cmc
xor
mov
mov
sbb
or
loop
push
mov
xchg
jge
fmul
inc
mov
nop
retf
and
pop
sbb
gs
or
adc
sbb
(bad)
enter
data16
inc
out
mov
mov
aaa
rol
nop
inc
clc
or
out
fild
jne
push
xor
inc
call
leave
test
lock
int
inc
pushf
jo
repnz
inc
arpl
cli
jle
mov
and
jecxz
adc
xchg
jecxz
inc
push
pop
adc
and
or
mov
pop
test
fld
outs
sub
lods
daa
inc
adc
dec
lahf
bswap
imul
pop
cmps
lea
into
sti
inc
inc
(bad)
mov
adc
in
mov
inc
xchg
inc
scas
mov
xchg
mov
pushf
fcomp
inc
adc
jmp
test
mov
out
out
adc
dec
inc
rol
jecxz
hlt
push
push
not
add
mov
loop
mov
jp
sub
xor
test
push
sbb
clc
dec
cmp
jne
mov
xchg
xchg
stos
mov
xchg
stos
cdq
retf
sahf
fs
sbb
push
nop
in
popa
mov
pslld
adc
mov
outs
out
xchg
shl
add
and
pop
test
mov
dec
mov
ja
out
pop
cmp
or
sub
mov
int
stos
cmps
int
mov
and
fwait
pop
push
dec
jnp
jbe
test
sub
xchg
adc
jmp
and
jb
xchg
mov
sbb
cmc
repnz
adc
dec
mov
dec
and
dec
mov
jge
cmps
push
fbstp
push
push
push
pop
aam
xchg
and
inc
mov
cmc
sub
xchg
fnsave
sub
fbstp
outs
int
inc
xor
movs
test
sti
mov
test
into
and
cdq
clc
or
dec
les
push
aas
mov
call
push
dec
popf
imul
out
xchg
shr
stc
loopne
es
call
lds
dec
aas
ret
outs
jnp
dec
xchg
jp
mov
xor
mov
mov
dec
call
ds
rol
and
cwde
mov
imul
ds
aam
pusha
jae
loopne
cmp
pop
xlat
mov
push
cdq
adc
clc
(bad)
push
out
pushf
imul
loope
in
mov
ins
clc
and
mov
sbb
sub
and
or
shl
jne
mov
sar
in
shl
cmp
lods
pop
sub
mov
cmps
and
and
mov
mov
pushf
dec
dec
mov
mov
retf
in
mov
add
pop
jmp
cmp
psubd
lock
lods
movs
push
mov
inc
int
in
sub
push
mov
popf
xor
aad
cdq
sub
enter
and
fcom
xchg
(bad)
pusha
(bad)
(bad)
jnp
push
fisub
retf
xor
cdq
jb
mov
push
pop
scas
sub
movs
retf
push
mov
fcomp
cli
rcl
movs
inc
pusha
xchg
dec
xchg
es
lods
xor
aaa
(bad)
mov
sti
cmp
fnstcw
xchg
aad
bound
mov
mov
and
mov
shl
adc
sub
stc
xchg
xchg
loopne
mov
push
xor
aas
stos
jb
jne
and
mov
push
and
lahf
inc
pushf
ror
test
out
adc
addr16
jns
xor
scas
inc
dec
sbb
xor
pop
popa
jp
adc
je
add
inc
enter
push
aas
or
rcr
enter
hlt
mov
outs
fisubr
and
out
xchg
add
mov
sbb
cmps
mov
mov
fwait
loop
push
jl
jmp
repz
icebp
fcmovbe
clc
sbb
mov
fsubr
mov
push
mov
mov
cmp
jbe
jg
gs
xchg
mov
je
push
jae
ds
test
mov
loopne
jmp
ins
jle
xchg
lock
outs
inc
sub
aaa
loopne
xchg
cld
fdivr
mov
test
sub
mov
inc
(bad)
sbb
dec
sub
iret
push
mov
sbb
mov
and
test
(bad)
ins
pop
sbb
sbb
gs
or
cmp
ds
sub
pop
scas
xor
cmp
mov
or
xchg
lods
push
ret
mov
xchg
outs
ret
arpl
mov
sahf
push
push
xchg
add
dec
imul
pop
adc
adc
les
dec
add
out
cmp
and
movs
sti
dec
stos
arpl
inc
mov
fidiv
jmp
daa
pop
mov
adc
imul
inc
dec
enter
movs
pop
enter
or
pop
or
(bad)
dec
ins
nop
fdiv
push
ffree
mov
scas
call
xchg
pop
pushf
jbe
xor
pop
xchg
mov
dec
and
pop
pop
mov
add
bound
mov
mov
dec
cmp
js
sub
retf
lock
pop
adc
sub
fistp
jne
cmp
fst
adc
lock
cmp
cmp
sbb
sbb
repnz
jge
pop
or
jg
lods
enter
cwde
pop
inc
jb
dec
dec
aam
das
ficomp
test
adc
mov
ficomp
dec
cwde
clc
xchg
mov
fsubr
call
fs
and
addr16
or
bound
iret
add
stos
xchg
jg
in
add
pop
ja
pop
loopne
push
push
pop
mov
mov
push
inc
repnz
pop
push
jmp
adc
sbb
mov
aaa
cmc
aad
sahf
cmps
aam
cs
imul
shl
xor
lds
mov
and
jp
cmp
push
fidiv
out
push
and
xor
add
mov
cmc
es
dec
jnp
outs
out
xchg
xchg
out
dec
or
cdq
mov
popa
mov
sbb
aaa
jne
push
push
cmc
retf
(bad)
cmp
dec
jae
or
retf
in
jecxz
sbb
movs
push
mov
test
push
push
sbb
or
adc
mov
test
inc
dec
mov
std
std
pop
inc
xchg
popf
push
mov
jbe
(bad)
cmp
add
add
push
push
push
mov
imul
mov
xor
and
cli
adc
jge
sahf
js
sbb
aaa
dec
xchg
out
lods
mov
and
call
or
loopne
jecxz
or
cld
int
ret
movs
adc
xor
(bad)
pop
out
dec
push
lds
xor
loopne
mov
sbb
jnp
repz
jae
call
subps
add
jmp
pop
mov
mov
in
aaa
or
test
stc
xchg
outs
and
lea
mov
das
pop
pop
inc
stc
sbb
icebp
cmp
cmp
or
xlat
imul
mov
xchg
out
xchg
lods
dec
inc
cmc
cmc
scas
jns
add
pop
enter
mov
sub
sub
xor
sahf
or
shl
dec
ins
ins
sbb
cdq
mov
mov
daa
popf
stos
out
and
push
mov
rcl
inc
pusha
mov
adc
xor
jne
repz
mov
ja
mov
daa
and
mov
cwde
add
or
repnz
imul
and
sbb
and
aad
stc
or
in
fwait
or
add
ins
cmp
pop
xchg
ret
popa
and
xor
adc
xchg
mov
(bad)
push
sbb
retf
sub
add
push
repz
mov
push
imul
test
sahf
xchg
pushf
dec
dec
in
popa
cmp
mov
add
fwait
arpl
lods
inc
int
int3
push
and
mov
mov
retf
fist
mov
xor
and
push
lea
add
mov
out
push
push
dec
scas
test
sbb
mov
xor
mov
ror
and
sub
and
jmp
fwait
push
fst
push
je
sbb
adc
mov
mov
push
ins
mov
frstor
mov
inc
add
jno
xchg
test
mov
or
xchg
clc
xchg
inc
jmp
cli
aam
adc
adc
(bad)
mov
inc
test
sbb
clc
cmc
icebp
jecxz
icebp
or
movs
stos
jmp
or
jno
shl
rcl
pop
sub
test
ja
(bad)
fmul
mov
dec
in
add
scas
xchg
dec
add
test
push
(bad)
and
add
sahf
adc
xchg
jbe
xchg
sub
inc
jmp
fld
inc
fld
adc
aaa
add
inc
js
xor
or
xor
cld
jne
fnstcw
cli
rol
out
mov
hlt
loope
jno
(bad)
mov
xor
data16
xor
xor
out
mov
icebp
inc
mov
ss
shl
lods
push
xchg
loopne
(bad)
sub
push
adc
(bad)
sbb
sbb
adc
cmp
push
xchg
aad
in
pop
xor
cmps
fdiv
repz
ret
push
push
sub
fcomp
call
frstor
cwde
mov
xor
and
cli
clc
and
sbb
pop
sbb
add
retf
(bad)
fdiv
iret
pop
sar
shl
out
mul
adc
inc
pop
lock
ins
mov
add
mov
inc
out
sbb
and
jl
xor
lds
popf
je
adc
lahf
test
shl
mov
lods
xchg
xor
and
push
jo
sbb
mov
jmp
ss
jne
and
retf
fwait
(bad)
pop
xor
stos
loopne
mov
imul
push
jb
lock
jb
sub
sahf
frstor
lahf
inc
call
retf
mov
cmp
sub
and
xchg
mov
xchg
push
mov
xchg
aad
repz
fcom
inc
mov
mov
mov
ds
mov
(bad)
loopne
and
and
hlt
cmps
daa
dec
out
push
jl
adc
lods
and
stc
(bad)
aad
cmc
and
xor
jmp
leave
ret
xor
mov
movs
sbb
ins
(bad)
js
jge
mov
aaa
fsubr
jecxz
push
lock
jmp
push
hlt
add
ret
sub
lock
mov
(bad)
mov
mov
xor
push
fld
and
jmp
cmps
xor
mov
popa
idiv
in
xor
jbe
mov
or
mov
movs
push
pop
push
retf
xchg
(bad)
cmc
xor
icebp
icebp
and
xchg
pusha
or
cmp
dec
out
and
mov
push
ins
xchg
mov
sbb
mov
mov
push
mov
jno
cs
addr16
pop
mov
repz
cmp
jg
shl
sahf
(bad)
cld
dec
push
add
push
jle
sbb
cld
fisttp
dec
in
mov
mov
mov
int3
push
fwait
jg
daa
cmp
addr16
cmp
mov
enter
adc
mov
les
sub
ja
adc
ret
ret
adc
test
mov
int
pop
ret
retf
sti
and
(bad)
lahf
lods
fidivr
and
cs
sbb
ja
push
in
or
cmp
or
hlt
ins
fisub
jae
push
repz
jo
in
inc
inc
clc
add
jp
int3
icebp
in
pop
add
shl
jmp
sahf
movs
mov
sbb
inc
sahf
loop
sub
pop
movs
sub
jo
out
mov
and
mov
jp
test
xor
js
jno
inc
sub
mov
fstp
jbe
clc
push
nop
outs
leave
cmp
jge
faddp
lods
lahf
lds
mov
(bad)
test
fdiv
push
ror
inc
sbb
mov
sub
inc
xchg
fsub
movs
push
mov
cmp
pop
fist
adc
and
sbb
(bad)
mov
icebp
aas
mov
leave
jmp
mov
inc
pop
lea
sahf
cmp
out
and
nop
add
addr16
pop
add
sub
or
ins
jge
movs
in
push
(bad)
dec
in
add
dec
sub
xchg
ds
in
loopne
mov
test
mov
mov
sub
mov
movs
loopne
push
outs
add
mov
mov
cmp
ins
iret
xchg
sbb
inc
mov
or
add
imul
aaa
fs
(bad)
pusha
add
jecxz
daa
(bad)
ja
jb
jne
mov
std
cwde
pop
jg
mov
add
cwde
cmp
cmp
lock
outs
push
movs
add
hlt
lds
out
inc
and
iret
or
xchg
ret
dec
adc
inc
push
scas
mov
repnz
pusha
mov
xchg
(bad)
int3
mov
inc
jo
mov
xchg
icebp
je
cmp
mov
std
fld
push
call
mov
and
sbb
jae
sahf
mov
pushf
adc
outs
pushf
daa
call
add
cmc
stc
popf
shl
int3
out
xor
sti
pop
test
shl
pop
test
(bad)
jl
in
mov
js
aad
icebp
sti
das
mov
push
xchg
out
aam
sbb
retf
cwde
xchg
out
pop
in
in
mov
adc
fnstcw
mov
retf
mov
test
(bad)
sub
xor
imul
add
sub
inc
out
mov
and
inc
push
sbb
push
leave
sbb
inc
sub
fcom
movs
dec
mov
mov
stos
cmp
paddw
mov
int
cmp
loope
ds
dec
add
test
sbb
xor
int3
mov
and
cli
sti
cmp
ficomp
mov
xor
push
inc
(bad)
sti
jb
mov
dec
rol
and
mov
(bad)
xchg
ret
gs
ins
mov
div
js
out
pop
and
mov
imul
test
jmp
ror
xchg
pop
and
pusha
fbstp
fisubr
mov
sub
stos
cmps
dec
imul
sub
mov
popa
(bad)
xchg
jmp
fxch
sub
repnz
push
xor
pop
push
mov
int
mov
cmp
bound
std
and
test
add
pop
mov
or
(bad)
or
xor
inc
hlt
xor
push
dec
and
jnp
mov
repnz
adc
sbb
adc
or
push
inc
scas
test
and
push
cmp
jge
jg
and
jb
sub
adc
push
xchg
popa
aad
jns
pop
popa
aas
js
xchg
es
loope
cdq
sub
clc
add
out
xor
sbb
cs
cdq
sbb
leave
ins
movs
leave
test
out
mov
inc
das
(bad)
fdiv
scas
idiv
fistp
movs
xor
popf
stc
mov
retf
sbb
push
fimul
nop
mov
cs
mov
mov
dec
js
pop
jg
xchg
movs
push
adc
push
jge
xor
leave
in
adc
cli
popf
adc
loop
jae
cs
mov
cli
mov
add
ss
mov
sub
jns
mov
scas
dec
retf
retf
jno
sbb
mov
loope
jns
adc
mov
mov
adc
mov
sub
inc
test
cmp
sbb
addr16
test
inc
into
push
imul
(bad)
cmps
lods
jge
push
jp
pop
xor
push
(bad)
and
pop
dec
ret
mov
aas
adc
sbb
sbb
gs
loope
lea
jmp
mov
lahf
mul
fcomp
ja
lods
xchg
mov
ret
mov
rcl
leave
(bad)
aad
outs
retf
xchg
jmp
xchg
stc
xor
pop
cmp
ja
jne
inc
icebp
add
mov
sub
adc
pop
mov
or
add
cwde
inc
sbb
sbb
repz
add
fsubp
fs
std
or
pop
adc
inc
mov
push
pop
fbstp
mov
inc
imul
aaa
pop
hlt
shl
mov
bound
mov
jmp
mov
in
ins
into
mov
and
repz
mov
into
sbb
xor
mov
mov
inc
push
xor
dec
ret
(bad)
inc
inc
and
scas
add
popa
jne
movups
cdq
fldenv
popf
dec
and
or
push
nop
test
pop
icebp
mov
pop
fild
push
sbb
int
(bad)
dec
cmp
pop
ret
pop
data16
mov
push
or
jmp
push
push
xor
dec
in
daa
loope
pop
je
adc
sbb
jmp
loope
imul
or
icebp
test
into
(bad)
mov
test
adc
or
mov
loop
sbb
(bad)
xchg
xchg
or
pop
hlt
xchg
ret
iret
mov
gs
push
or
xchg
push
retf
mov
loop
shr
dec
js
xchg
jecxz
popa
fdivr
jne
in
or
daa
jnp
cmp
(bad)
pop
sbb
in
and
js
cmp
ds
imul
out
adc
(bad)
bound
xor
sub
mov
pop
mov
and
hlt
in
test
pop
imul
cdq
daa
xchg
mov
xchg
stos
ins
jp
mov
in
add
dec
cmp
or
cld
and
retf
xchg
or
adc
push
imul
pop
xor
mov
jecxz
mov
dec
sub
hlt
daa
and
ja
test
movs
mov
mov
int
sbb
loop
push
in
ret
ret
jno
fisub
mov
loop
icebp
icebp
fimul
fdiv
fst
ja
fidiv
std
js
lds
mov
and
mov
imul
mov
mov
cld
fcmove
int3
mov
mov
add
inc
out
int
sti
jg
rol
pop
out
jne
mov
fadd
inc
add
stos
cmp
inc
test
ins
jns
or
xchg
push
push
adc
ins
inc
ss
aas
jb
test
mov
iret
jge
repnz
push
pusha
mov
shl
inc
mov
gs
push
or
retf
add
sbb
outs
jmp
or
xlat
xor
adc
inc
inc
in
call
fs
dec
push
push
push
inc
xor
lock
sbb
(bad)
mov
es
fcom
xor
inc
imul
ror
jo
jmp
test
xor
iret
or
sub
stos
mov
adc
jge
push
lock
icebp
push
mov
and
jle
mov
ror
push
mul
ficom
fcomp
std
mov
daa
stc
shl
inc
ja
sub
add
(bad)
sbb
data16
or
or
ret
fwait
jne
mov
test
jb
mov
lahf
cmp
fst
sub
mov
push
inc
lods
add
dec
jecxz
frstor
cs
arpl
fst
pop
xchg
into
popf
mov
xor
scas
jb
(bad)
xchg
mov
push
test
aad
xchg
mov
cdq
sub
ret
or
push
pop
inc
iret
mov
jb
cwde
imul
pusha
ss
jno
mov
add
jnp
pop
in
add
mov
add
jns
add
iret
mov
aas
pop
sub
pop
mov
bound
inc
dec
ins
dec
jae
push
pop
outs
dec
fsub
and
repz
xchg
cli
popf
mov
into
jo
out
fcmovnbe
ror
adc
ffree
outs
push
retf
jg
mov
ins
std
jae
inc
ret
scas
daa
cmp
out
pop
xchg
out
mov
popa
popa
frndint
or
pop
jnp
inc
sub
mov
pop
test
movups
std
pop
stos
push
jl
xlat
jl
mov
mov
add
sbb
fdiv
push
xor
daa
fisubr
sub
dec
loope
daa
pop
ja
mov
push
fwait
cmp
stos
or
in
outs
jmp
xor
(bad)
jp
enter
cld
mov
mov
sbb
fsub
add
mov
iret
mov
push
je
div
fisttp
adc
mov
imul
std
pop
imul
mov
and
fucomi
sbb
in
pop
lea
jae
pop
add
push
sub
and
pop
jno
out
repnz
mov
cld
ficom
jle
pop
scas
add
pushf
adc
push
sub
xor
scas
add
sbb
jp
and
loopne
jne
push
enter
pushf
test
popf
xor
test
sbb
or
dec
scas
pop
push
shl
dec
pushw
mov
cmovge
loop
fisub
push
loop
push
mov
sub
sub
retf
clc
xor
je
cmc
push
ficomp
push
pop
in
cmp
in
cmp
mov
loope
outs
fistp
mov
sti
dec
outs
aaa
dec
icebp
stos
ins
cmps
dec
sub
aad
shl
clc
cmp
nop
pushf
mov
aad
bound
mov
(bad)
xor
push
enter
push
xor
fdiv
ins
sahf
or
add
lods
sti
push
dec
fmul
repnz
adc
mov
test
mov
(bad)
pop
xor
out
jmp
cmp
rol
sub
sub
mov
bound
mov
lock
mov
loopne
push
xor
push
ret
xor
xchg
push
inc
(bad)
or
call
mov
inc
mov
mov
aas
popf
repnz
call
pushf
cli
xchg
ins
or
cmp
popa
inc
sub
inc
aam
jl
sub
cmp
push
(bad)
cmps
push
pop
xor
or
xchg
std
mov
lock
addr16
xlat
loop
mov
fist
fbld
out
mov
pop
out
and
cs
jp
shr
cwde
add
mov
idiv
ins
xor
mov
add
dec
xor
bound
push
imul
mov
arpl
sub
fdivrp
jge
add
sar
movs
(bad)
ins
lods
stos
out
out
mov
loope
sahf
inc
loope
mov
sbb
mov
adc
jo
cdq
ficomp
adc
sbb
test
and
pop
nop
add
imul
sahf
xchg
cmp
push
bound
sbb
mov
sub
dec
iret
in
mov
inc
jmp
adc
clc
ror
movs
push
inc
fwait
sub
push
add
mov
in
aam
mov
jg
inc
ja
loop
add
(bad)
clc
xchg
ins
stos
mov
leave
stc
lds
mov
cmc
xor
daa
pop
outs
test
dec
sahf
xor
push
movs
mov
inc
pop
outs
mov
movs
and
sub
mov
add
call
xchg
pushf
or
aaa
cmp
(bad)
sub
movs
call
cmp
cmc
push
imul
pop
pop
ins
xor
push
jg
cmc
dec
shr
int3
shl
or
out
jno
dec
je
stos
bnd
push
cs
fst
ds
pandn
inc
mov
add
pop
xor
sbb
call
jns
push
xchg
lock
push
sub
push
jecxz
into
cmps
fs
adc
push
push
push
shr
loop
dec
lods
retf
push
cmp
dec
pop
psrad
inc
out
dec
stos
and
pop
out
xor
mov
nop
mov
push
or
mov
in
int3
retf
sub
push
pusha
popa
sbb
into
cli
pop
or
retf
push
sub
rcr
and
stos
or
mov
inc
push
repnz
in
inc
inc
fisubr
pop
clc
daa
mov
inc
and
xchg
sbb
inc
adc
inc
lods
mov
push
push
scas
pop
sub
push
(bad)
(bad)
push
push
jae
xchg
xlat
outs
out
mov
out
inc
test
mov
icebp
shr
lods
outs
shl
scas
ins
xchg
pop
ins
(bad)
sahf
mov
fs
add
fwait
or
cdq
add
xchg
sbb
pop
jg
dec
inc
sub
aam
cwde
jmp
cs
frstor
js
or
inc
xchg
mov
loopne
xchg
push
pop
loope
sub
fisub
dec
(bad)
xlat
call
sub
sub
repz
xlat
mov
add
pop
cmp
imul
std
mov
dec
shl
pop
sbb
sar
fld
dec
iret
cmps
xor
cmp
scas
pop
push
popf
repz
ja
daa
scas
fldcw
xor
xor
jae
adc
mov
push
mov
pop
(bad)
rcl
lahf
ins
adc
pop
jecxz
xor
repnz
sbb
in
mov
out
(bad)
push
jl
arpl
in
(bad)
out
iret
cmp
mov
push
ret
add
cmp
ret
or
dec
inc
inc
outs
scas
bound
xchg
dec
cld
adc
push
xchg
mov
jbe
ds
into
mov
test
scas
xchg
and
add
sbb
adc
mov
sub
(bad)
adc
lea
int3
in
push
lods
inc
sub
enter
jmp
and
lds
xor
mov
add
mov
cmp
in
fisubr
push
les
ficom
int
test
into
(bad)
cwde
jae
cdq
(bad)
push
jge
cld
ret
dec
out
cmp
call
mov
push
mov
push
jle
or
stos
or
adc
int3
ss
cmps
inc
in
push
jmp
jne
ret
jns
mov
imul
das
jmp
mov
out
outs
dec
data16
mov
rol
mov
mov
or
sub
adc
pop
inc
fs
pop
mov
inc
leave
cmps
stc
mov
movs
shl
out
in
js
ret
pop
out
fstp
pushf
add
mov
jae
shl
pop
enter
idiv
test
sub
leave
inc
mov
imul
cs
mov
(bad)
xor
jecxz
xor
es
repnz
rcl
jmp
xchg
jo
icebp
sahf
mov
stos
(bad)
fwait
push
mov
xchg
mov
sbb
or
adc
push
mov
cmps
les
popa
sub
inc
loopne
test
mov
mov
not
jo
ret
jg
scas
loope
fbstp
mov
retf
loopne
inc
push
cld
xchg
dec
imul
inc
adc
dec
mov
xchg
push
jnp
rcr
das
jne
cmp
scas
cmp
mov
mov
mov
outs
mov
pop
fbld
push
pop
push
pop
xor
dec
adc
xchg
sub
shl
adc
mov
loop
push
push
mov
mov
mov
pop
js
cli
js
cmp
xlat
(bad)
cld
fwait
and
xchg
cmps
xchg
pop
cmp
mov
loopne
push
bound
retf
cmp
xor
aad
xchg
popf
push
push
jp
fcomp
jbe
(bad)
ins
inc
icebp
mov
mov
dec
mov
test
aad
jno
ins
jo
push
sbb
sub
and
imul
cmp
cmps
fdivr
cmp
sbb
cmps
pop
pop
dec
adc
icebp
xor
cmp
and
les
or
pop
cmp
push
out
dec
inc
mov
mov
jbe
les
test
adc
cmc
out
addr16
ins
xchg
or
inc
adc
cmp
mov
mov
jae
(bad)
lods
lea
sub
es
add
or
popf
mov
push
cmp
mov
xchg
jne
rol
and
push
pop
mov
mov
xchg
xor
sub
mov
mov
adc
sbb
xchg
adc
cmp
jno
sub
mov
aas
jmp
sti
lock
xor
dec
inc
push
xchg
imul
jecxz
aam
jne
jns
imul
mov
sub
sbb
das
xlat
movs
sbb
xor
xor
mov
xor
enter
(bad)
in
cmp
(bad)
lahf
lods
dec
and
xchg
cwde
movs
shl
jge
mov
push
leave
in
neg
retf
xor
inc
and
dec
or
div
jecxz
push
xchg
and
sbb
inc
into
add
and
(bad)
lods
adc
fild
push
push
(bad)
push
push
lea
or
jo
fild
idiv
(bad)
call
(bad)
mov
aad
push
jge
xor
jno
xor
push
or
in
rol
test
and
std
jne
push
dec
dec
mov
xchg
jg
and
pop
int3
and
sbb
jmp
xor
mov
dec
je
ret
mov
test
sub
xor
pop
xchg
pop
test
inc
dec
jae
jle
cmc
shr
test
inc
adc
mov
pop
shl
mov
neg
pop
sbb
dec
jmp
(bad)
rcl
repz
xor
dec
ins
(bad)
retf
movs
push
xchg
sub
dec
js
hlt
push
ds
and
jg
fnsave
mov
add
iret
xchg
sbb
push
dec
dec
mov
jo
lods
out
push
(bad)
dec
dec
add
rcl
cs
stc
and
sbb
fsincos
add
mov
push
xchg
mov
sbb
enter
out
outs
stc
add
lahf
iret
sahf
not
push
nop
inc
enter
cdq
inc
cmps
xchg
stos
sub
stos
icebp
jbe
jmp
mov
cld
sub
jle
(bad)
sbb
adc
ins
pop
ret
xchg
rcl
adc
jle
mov
pushf
jne
xchg
addr16
xchg
xor
mov
ja
push
jmp
push
dec
sbb
retf
sbb
cmp
dec
jnp
xchg
mov
scas
mov
or
dec
mov
mov
loop
in
loop
mov
call
mul
dec
push
sahf
icebp
cli
dec
sbb
pop
and
or
and
cld
lock
jb
(bad)
cmp
mov
mov
nop
test
cli
arpl
mov
mov
dec
imul
inc
in
aad
lds
ret
into
dec
mov
nop
xchg
nop
idiv
ss
inc
cmp
push
ror
xor
dec
xor
(bad)
xor
retf
out
arpl
out
push
add
adc
push
cmp
dec
arpl
ins
mov
fisttp
adc
jmp
and
mov
add
mov
push
cmp
jb
(bad)
js
dec
test
xlat
pop
push
jns
sbb
mov
idiv
outs
sub
cmp
sbb
jne
mov
leave
adc
xor
retf
push
fldenv
(bad)
jne
fmul
xchg
add
mov
inc
shl
call
mov
les
sbb
sub
adc
cwde
sti
in
jl
(bad)
call
xor
iret
sbb
test
inc
jne
dec
scas
je
mov
retf
mov
push
and
jmp
push
loope
cmp
dec
sbb
cmps
scas
push
arpl
mov
retf
ins
ins
xchg
lock
lock
outs
cld
inc
mov
fistp
jb
or
jmp
fs
cmps
sbb
test
push
div
pop
mov
sbb
cmp
into
sbb
xor
mov
xor
cmps
add
fbld
jmp
mov
out
ss
xchg
mov
xor
push
retf
mov
aas
test
push
xor
and
mov
push
das
sub
adc
mov
retf
ss
xchg
pop
or
adc
jb
jge
jmp
inc
push
aaa
repnz
jle
push
or
mov
dec
fisubr
xchg
dec
xchg
jle
or
std
add
aaa
mov
mov
xchg
push
call
lods
rol
cmp
in
sub
add
xchg
xor
push
loop
icebp
sub
push
movs
call
fstp
or
icebp
mov
gs
jp
jnp
or
and
dec
stos
cmps
out
popa
cld
mov
call
sub
in
out
and
add
rol
(bad)
cmp
push
idiv
mov
hlt
popa
mov
push
adc
jo
mov
clc
(bad)
xchg
faddp
mov
retf
push
pop
repnz
pop
outs
rcr
push
out
in
mov
mov
(bad)
jnp
jno
xchg
js
aas
imul
sbb
mov
pop
adc
add
pop
mov
pop
mov
jl
in
mov
int3
shr
in
leave
retf
loopne
or
jmp
in
ret
xchg
push
lods
push
(bad)
addr16
stos
dec
jmp
aaa
in
mov
repz
xor
dec
hlt
mov
mov
fstp
adc
mov
fisttp
push
mov
nop
sub
ins
jnp
adc
popf
mov
stc
shl
pop
xor
adc
int
cwde
lods
retf
push
into
xchg
mov
cmp
pop
das
aad
add
mov
iret
mov
sbb
xchg
bound
in
push
repnz
leave
(bad)
xchg
mov
rcr
cmp
scas
mov
popa
cli
mov
sbb
(bad)
sbb
push
aaa
mov
inc
stc
push
jl
retf
lahf
push
cwde
addr16
and
es
and
mov
mov
sar
sbb
in
inc
in
sub
in
adc
repz
push
out
adc
jmp
int
xchg
xlat
mov
and
jbe
cmc
mov
lods
in
out
ins
lods
in
jmp
cld
cli
jnp
mov
retf
ds
cmps
jl
or
or
cmps
movs
adc
push
mov
out
aad
xor
push
inc
ja
call
xchg
or
push
sub
div
push
jle
(bad)
push
shl
pusha
xor
mov
retf
ret
cmp
je
test
lds
iret
sub
(bad)
sub
dec
push
jns
sti
pop
push
mov
or
stc
out
lods
sbb
imul
pop
inc
dec
out
das
mov
retf
lods
xchg
push
or
xchg
xchg
xchg
mov
fcomp
cdq
fcmove
pop
add
xchg
stc
repnz
dec
je
pushf
cmp
jae
add
push
xchg
(bad)
jne
in
jp
(bad)
out
or
(bad)
clc
mov
je
outs
sbb
mov
aad
mov
or
jp
add
mov
rcr
daa
and
jo
out
bound
push
call
add
les
cli
sub
mov
mov
inc
aaa
(bad)
stos
popa
adc
add
mov
sahf
out
pop
adc
mov
jmp
aam
lods
daa
imul
ins
dec
add
xchg
mov
aad
jbe
std
ficomp
stos
inc
aam
jl
scas
cmp
adc
in
fnstcw
mov
lahf
push
jle
test
repnz
inc
xchg
cmps
pop
shl
dec
add
dec
sbb
sahf
adc
pop
mov
cmp
mov
ficomp
adc
icebp
xchg
rcr
xlat
sahf
sub
mov
mov
int
mov
xchg
dec
adc
int
pop
sbb
sub
imul
test
hlt
pop
and
js
mov
std
dec
and
xor
inc
inc
push
cwde
js
mov
icebp
sub
sahf
movs
sbb
xchg
jp
movs
sbb
out
pop
cmp
dec
int
and
jae
sti
js
dec
cli
ins
sti
dec
(bad)
dec
dec
push
add
push
push
or
ins
scas
js
dec
cmp
fstp
mov
iret
neg
add
dec
pop
in
dec
fs
mov
pop
enter
es
push
sub
xchg
push
stos
int
leave
(bad)
mov
or
sub
cmp
ss
shl
imul
lods
jb
jl
jl
mov
cmp
adc
in
jecxz
or
and
(bad)
inc
fsub
test
test
leave
cmp
rcl
push
test
(bad)
pop
out
sub
mov
adc
dec
inc
dec
and
inc
xchg
push
sub
adc
sti
test
addr16
aad
call
(bad)
aas
shl
jne
test
inc
rcl
add
nop
imul
add
mov
mov
lods
push
dec
leave
test
jg
lods
inc
sub
stc
cmp
arpl
inc
outs
test
nop
test
push
ins
int3
das
dec
or
cmovb
outs
adc
imul
sub
mov
(bad)
cwde
cmc
shr
repnz
icebp
sub
pop
pop
pop
mov
lods
je
(bad)
cs
mov
add
outs
repz
push
ret
(bad)
mov
push
push
push
sbb
adc
sti
not
pusha
add
mov
push
shl
and
xlat
aad
or
pop
fwait
pop
cli
repnz
xchg
lea
pop
jp
iret
mov
and
jb
jge
add
scas
cmp
popa
xor
aas
push
and
mov
dec
or
sahf
pop
cli
stos
mov
push
dec
imul
test
push
aad
ss
xlat
das
in
outs
push
inc
lahf
cmps
push
dec
push
cmp
dec
mov
ret
nop
jecxz
mov
xchg
xor
js
cwde
enter
dec
jp
in
scas
push
clc
dec
push
retf
mov
out
in
outs
xor
dec
jmp
inc
shrd
or
retf
push
sub
jbe
mov
je
add
jns
adc
aam
push
movs
sbb
push
movs
or
leave
and
push
jo
jl
fidivr
cmp
js
fist
jbe
loop
cli
(bad)
mov
add
js
inc
pop
xor
push
add
fiadd
inc
in
scas
pop
sub
ja
out
popf
push
or
adc
mov
dec
arpl
mov
sub
aas
push
and
and
test
xchg
mov
sahf
cmc
cmp
and
mov
test
dec
push
fist
loop
rol
mov
cdq
fidiv
movs
aad
pop
lods
cmp
mov
test
jnp
and
or
adc
daa
loop
or
std
pop
push
ds
fnstcw
or
dec
aam
mov
cmp
inc
inc
pusha
mov
rcl
outs
out
xchg
xor
push
push
jg
xor
(bad)
sub
and
xchg
loope
inc
stos
leave
inc
mov
lods
cwde
(bad)
sbb
add
addr16
inc
inc
push
arpl
adc
and
and
push
cmc
daa
jb
xchg
inc
cmps
ins
and
aas
test
aaa
cli
add
outs
mov
and
int3
jns
xor
test
pop
mov
cmp
push
or
fiadd
inc
jecxz
test
cmp
fnstsw
mov
pop
inc
adc
pop
or
sbb
xor
mov
inc
fwait
and
sbb
(bad)
or
movs
sbb
call
adc
xchg
mov
dec
xor
call
js
mov
xchg
jle
(bad)
and
stos
mov
popf
out
pop
mov
xor
xor
sbb
xchg
outs
std
cli
add
mov
sbb
or
add
fsubr
mov
cmp
sar
or
data16
sar
adc
jb
push
loopne
repnz
adc
(bad)
push
mov
pop
ficom
aad
mov
inc
out
mov
stc
aaa
cwde
pop
sbb
repnz
and
out
xchg
mov
inc
fldenv
xor
loop
xor
sub
push
push
loope
jmp
out
ss
sub
rol
retf
ret
mov
jge
bound
add
adc
mov
push
pop
sahf
jbe
aad
test
adc
mov
mov
mov
mov
popa
(bad)
icebp
shr
outs
xchg
pop
mov
test
add
inc
sub
add
call
xor
gs
inc
mov
push
add
mov
cmp
xchg
fstp
push
loopne
adc
mov
and
pop
call
pop
lahf
sbb
mov
stos
push
jne
mov
jmp
out
jmp
pop
ror
mov
cli
jmp
jno
dec
stos
cmp
jge
rol
jmp
mov
lahf
cmp
cld
popf
bound
movs
in
xchg
call
sub
cmp
dec
loop
xchg
cmp
test
dec
sbb
data16
fnstenv
in
pusha
sub
imul
fdiv
jno
stc
stos
fadd
jmp
inc
mov
adc
fbstp
jmp
jns
sbb
stos
lea
mov
(bad)
jmp
mov
and
push
add
sub
aaa
pop
or
fstp
mov
test
ins
mov
push
stos
or
xor
retf
mov
fwait
pop
ss
pop
cmp
aam
rol
and
inc
mov
jo
xor
imul
aam
into
inc
adc
mov
es
or
pop
jecxz
repz
cmp
mov
int3
sbb
mov
lds
mov
mov
repz
jae
sbb
nop
and
dec
std
pusha
mov
push
or
mov
and
xor
dec
mov
adc
push
dec
sub
and
daa
mov
cmp
push
inc
push
nop
add
inc
pop
sbb
scas
ins
popa
aam
imul
(bad)
xchg
sahf
and
(bad)
in
and
fbstp
add
pushf
sbb
sti
aas
sub
cdq
and
lds
int
or
dec
in
pop
addr16
or
adc
pop
inc
jge
pop
call
inc
addr16
xchg
sbb
mov
ret
scas
(bad)
jns
shl
mov
mov
cmp
xchg
fild
push
xchg
push
xor
sbb
push
pop
dec
cmp
sbb
push
and
or
sub
adc
push
sar
jbe
mov
push
and
nop
dec
mov
mov
into
cmc
cld
adc
jge
loop
xchg
jo
sub
arpl
fstp
fidiv
inc
push
xor
ins
test
mov
inc
popf
lods
fidivr
js
push
in
jae
push
and
jmp
aam
sub
inc
mov
xlat
or
xor
or
push
dec
(bad)
shl
jmp
loope
test
xchg
sahf
sub
add
js
push
jp
push
push
or
imul
daa
push
shr
mov
sub
ret
sahf
jecxz
sub
test
repnz
rol
mov
imul
inc
add
aas
push
pusha
cmc
mov
ins
and
mov
jmp
jl
sub
inc
pop
and
push
pop
add
nop
data16
fsub
repz
mov
pop
ss
push
lahf
popa
int
outs
mov
in
aaa
popa
test
aas
inc
jl
inc
or
mov
loope
(bad)
hlt
cmp
push
jge
stc
das
icebp
cmp
mov
shr
pushf
xor
xchg
push
repz
enter
test
dec
xchg
shl
or
xchg
sahf
xchg
in
pusha
(bad)
push
pop
mov
sahf
ins
or
mov
scas
lods
adc
nop
dec
adc
test
adc
mov
sbb
pop
sbb
jns
inc
sti
ins
sti
(bad)
iret
or
sbb
cmp
scas
mov
xor
in
shr
(bad)
movs
mov
scas
cmp
or
es
adc
or
pop
leave
and
test
jbe
int3
aam
test
mov
mov
pop
xor
inc
fcmove
xchg
mov
push
popa
mov
jb
jnp
js
and
out
js
sub
jbe
jle
xor
jecxz
adc
adc
inc
and
mov
add
mov
loopne
movs
dec
push
xor
jnp
sub
and
div
lods
pop
outs
xor
mov
fdiv
pop
and
jae
adc
jb
into
retf
outs
enter
jb
jae
popf
push
cli
lahf
jmp
shl
xor
aas
jo
fxch
push
pop
and
out
fcomp
rol
test
shl
ret
xor
fnsave
jae
dec
jg
lds
(bad)
out
cmps
jmp
dec
lahf
int3
imul
in
sahf
push
xor
jmp
nop
repnz
pusha
inc
push
sub
xchg
cmp
loope
jle
or
jp
mov
and
clc
xchg
dec
sbb
inc
stos
or
or
ds
push
lock
jo
cmc
in
dec
test
in
lea
xchg
push
sub
adc
inc
mov
imul
mov
cmp
test
movs
pusha
fmul
(bad)
xchg
into
icebp
rcl
out
ss
add
or
add
push
popa
rcl
fidiv
pop
(bad)
dec
dec
retf
push
xchg
shl
push
shl
lea
add
push
sbb
sbb
inc
sbb
dec
stc
repnz
(bad)
sbb
jmp
jbe
imul
push
(bad)
cmp
(bad)
(bad)
xchg
aad
(bad)
cmps
push
test
inc
loop
cdq
(bad)
shl
adc
aaa
(bad)
xchg
pop
push
and
loop
loope
add
fmul
mov
test
jle
mov
xchg
and
mov
jge
xor
test
push
add
cmp
bnd
cmc
mov
add
mov
loop
es
dec
or
jmp
mov
xchg
test
mov
scas
pop
int3
mov
dec
dec
ins
xchg
aaa
push
js
jmp
movs
lods
sbb
mov
and
ja
sahf
mov
bound
inc
jno
lods
aad
das
iret
inc
in
aas
shl
shr
es
mov
(bad)
fidivr
in
lods
cld
fs
stos
(bad)
mov
cmps
mov
lds
or
outs
add
mov
xchg
xor
sbb
mov
daa
xor
rcl
cmp
push
ins
mov
sub
data16
and
push
sti
aas
out
loope
fisub
adc
shl
out
jge
rol
dec
movs
ins
xor
push
aas
fadd
call
xchg
rcr
mov
mov
adc
sar
or
sbb
sbb
adc
test
jl
js
add
xchg
sub
shr
(bad)
push
inc
out
out
mov
cmp
fsub
jnp
or
(bad)
mov
das
and
pusha
push
adc
pop
clc
mov
xchg
fcomp
in
jbe
inc
and
ficomp
mov
sub
and
pop
(bad)
addr16
test
jbe
repnz
call
test
dec
or
mov
data16
dec
mov
pop
mov
es
jge
shr
(bad)
jnp
jne
out
xchg
xor
adc
pop
jle
loopne
dec
inc
loope
hlt
pop
add
shl
cli
jg
jge
mov
pushf
out
stos
jp
(bad)
lds
sbb
and
or
jnp
push
pop
push
jle
add
enter
dec
add
cld
leave
push
addr16
add
retf
arpl
(bad)
push
sti
rol
popf
loope
aam
enter
call
adc
xchg
dec
ss
mov
adc
ror
repnz
shl
(bad)
pushf
mov
jg
out
ret
jbe
call
mov
push
mov
and
faddp
xor
sbb
ins
or
aas
out
daa
mov
sbb
dec
jns
repnz
mov
sbb
(bad)
mov
sub
into
and
dec
out
add
je
popa
sbb
ja
lea
test
push
cmp
mov
out
fadd
pop
cmp
ds
cdq
push
mov
popa
in
outs
push
adc
mov
movs
and
mov
les
loopne
cdq
bnd
ret
fcomp
and
or
ja
fnstsw
push
and
and
push
adc
icebp
xor
cmps
fwait
push
cmp
cmp
in
jmp
fisubr
repnz
jle
and
xor
cld
movs
int3
sahf
movs
movs
mov
data16
push
sub
rcr
mov
je
xchg
sti
cmc
in
cdq
loop
es
or
jnp
test
sbb
scas
push
xor
adc
mov
cdq
aas
mov
mov
in
retf
pop
movs
push
ret
push
lahf
mov
test
pop
sub
pop
add
cmp
ror
outs
pop
cmp
jae
inc
push
dec
mov
retf
xor
adc
xchg
leave
add
xchg
call
add
out
sahf
xor
stos
enter
outs
pop
cwde
mov
push
aaa
adc
add
xor
dec
sbb
adc
sbb
imul
or
push
cmp
mov
xchg
fild
add
or
je
or
cmc
dec
mov
pop
sbb
or
(bad)
int
pop
icebp
pushf
faddp
xor
or
pop
jecxz
aas
nop
clc
imul
imul
(bad)
mov
(bad)
jge
mov
out
inc
shr
jecxz
cld
imul
test
mov
mov
dec
aam
add
(bad)
push
cmp
sbb
es
(bad)
ja
mov
lods
ret
inc
pop
dec
repnz
in
sub
int3
mov
addr16
xchg
jmp
(bad)
xor
jmp
push
fst
movs
imul
hlt
mov
sbb
push
push
xor
sbb
stos
pusha
jno
arpl
loop
es
sbb
outs
lds
test
call
add
stos
add
icebp
mov
add
and
xor
inc
int3
in
push
aas
shl
cmp
xchg
retf
std
inc
pusha
jbe
or
js
xor
jle
xchg
sbb
inc
daa
push
test
pop
je
jecxz
hlt
mov
aaa
mov
mov
das
mov
shl
addr16
pusha
and
inc
aaa
mov
pop
cmps
mov
or
pop
pop
dec
inc
mov
aas
adc
jl
xchg
jmp
xchg
(bad)
cmc
dec
imul
or
loope
mov
mov
popf
or
cwde
movs
push
mov
inc
push
cmc
imul
js
rol
mov
dec
xchg
scas
imul
test
movs
es
into
adc
mov
mov
inc
out
outs
pop
out
arpl
jo
sub
adc
into
mov
sahf
jmp
in
mov
and
push
loope
loopne
and
cmps
sub
mov
mov
mov
loopne
(bad)
in
mov
lods
push
daa
and
std
lods
jmp
mov
(bad)
xchg
lock
movs
(bad)
and
cmps
shl
popa
push
pop
outs
cmps
mov
mov
inc
inc
pop
jg
mov
pop
add
and
xchg
sahf
and
hlt
call
cmp
ficomp
sub
daa
pop
inc
mov
sbb
into
mov
or
loop
imul
(bad)
in
mov
mov
iret
lock
(bad)
imul
out
dec
movs
cmp
xchg
and
mov
cmp
mov
cdq
(bad)
mov
push
cdq
sub
pop
dec
cmps
nop
xchg
scas
push
jmp
icebp
pop
cdq
rcr
adc
fucomi
jge
fdivr
cmp
int
dec
aad
ins
xor
xor
mov
mov
cmp
mov
fidivr
dec
lods
addr16
sub
mov
mov
xchg
jp
xchg
test
or
call
mov
aas
adc
dec
lods
cwde
mov
mov
fdivr
out
fwait
cwde
jl
mov
pop
mov
and
mov
and
leave
dec
xor
mov
shl
adc
out
leave
xchg
aas
mov
outs
ret
in
pop
cmp
popf
cmp
dec
cmp
push
fidivr
adc
xor
cwde
sub
and
or
arpl
and
xchg
(bad)
retf
adc
sbb
inc
mov
mov
jb
test
dec
sub
retf
pusha
sbb
add
add
xchg
cmps
jae
loop
xchg
paddb
es
mov
adc
mov
loope
mov
lds
cmc
ins
ins
jmp
cs
imul
inc
and
or
call
stos
jae
rcr
loop
bound
or
mov
nop
inc
in
push
cmp
mov
or
jp
rcl
adc
ins
jno
mov
inc
sub
pop
push
in
sub
push
aaa
cmps
mov
push
mov
in
sub
outs
cmp
outs
mov
lock
mov
pop
sub
push
and
add
loopne
cmp
inc
cmps
xchg
add
outs
mov
push
mov
xchg
xchg
push
stos
test
(bad)
pop
jne
jmp
into
mov
jge
gs
xor
loop
mov
xchg
adc
std
mov
(bad)
xchg
jp
inc
xor
push
bound
xchg
in
sbb
out
mov
mov
loope
jmp
adc
(bad)
hlt
arpl
movs
test
dec
add
mov
push
in
mov
mov
imul
jne
add
mov
add
std
sub
ror
mov
sub
hlt
xchg
or
cmp
push
fsub
cli
sti
and
(bad)
rol
loop
sub
cmp
aaa
xor
mov
cmps
cmps
data16
mov
icebp
xor
pop
ds
sub
nop
(bad)
in
mov
cmps
cs
add
mov
bound
sbb
adc
arpl
in
and
dec
pop
cmp
dec
jmp
mov
out
ins
fnstsw
push
inc
out
mov
pop
test
cmp
icebp
stos
dec
pop
les
mov
xor
popf
xchg
sub
xchg
loope
xor
lods
clc
mov
(bad)
pop
cmp
sbb
test
popa
add
stos
adc
sub
jbe
xchg
clc
fimul
shl
add
inc
pop
mov
fwait
and
ret
lods
loope
dec
shr
add
test
pop
scas
pop
sub
cli
movs
ret
ret
push
out
cmp
jp
jb
adc
popa
in
out
mov
out
out
les
ins
dec
push
pop
push
cmp
inc
xchg
sbb
inc
fs
xchg
mov
scas
adc
pop
push
or
stos
xchg
les
ins
std
pop
aas
sbb
sbb
retf
rol
icebp
dec
sub
dec
add
xchg
das
mov
mov
cli
xchg
mov
cmps
bnd
jmp
xor
ins
inc
dec
dec
dec
fucomip
push
sub
in
scas
mov
jecxz
jb
mov
jp
add
mov
sbb
jbe
xor
mov
fwait
hlt
sub
pop
movs
aaa
push
jns
jno
pusha
and
or
inc
fiadd
jb
mov
inc
push
xor
pop
xor
(bad)
call
leave
and
stos
les
or
dec
cmp
cmp
shr
stos
cmp
and
jnp
aam
gs
mov
in
fld
test
(bad)
dec
or
xlat
push
xlat
push
pop
add
sub
leave
ffreep
sbb
mov
dec
loopne
aaa
sbb
retf
aad
jmp
sti
movs
arpl
outs
scas
mov
pop
je
mov
jmp
jl
cmp
cmp
push
sti
shl
fild
sbb
cwde
ja
cwde
imul
daa
mov
mov
xchg
fistp
xor
pop
sub
dec
in
jne
xchg
xor
data16
mov
xchg
xor
add
mov
aad
in
loopne
cmp
sub
movs
std
dec
xchg
test
in
cmp
cmp
or
ds
iret
sbb
idiv
test
cwde
sbb
dec
sub
inc
in
addr16
in
and
adc
(bad)
jmp
leave
mov
pop
mov
out
arpl
or
test
aas
jnp
push
fsubr
inc
in
mov
ss
test
dec
pop
mov
sub
xchg
clc
not
and
fild
cmp
pushf
mov
sbb
jns
retf
cmp
fs
push
pop
repnz
add
imul
test
lahf
sub
xchg
in
pop
ficom
in
in
cmps
lods
pop
out
inc
stc
adc
xchg
xchg
jmp
fidivr
push
mov
(bad)
in
push
sbb
sub
and
rcl
rcl
mov
test
mov
cmps
retf
daa
ins
jnp
arpl
ds
jns
mov
jmp
daa
mov
test
dec
mov
retf
and
inc
mov
in
imul
pop
jge
(bad)
xor
test
je
pop
stc
dec
xor
adc
(bad)
gs
push
sbb
repz
dec
inc
fisub
sbb
repz
(bad)
pop
mov
retf
cmp
or
xchg
fadd
and
sub
cwde
pop
xchg
loop
imul
movs
nop
test
(bad)
adc
nop
jb
push
call
bswap
scas
shr
jmp
mov
or
test
xchg
repnz
stos
lods
fisttp
mov
dec
cwde
xchg
mov
jmp
lock
int3
out
dec
sbb
pop
in
dec
cli
mov
cmp
(bad)
cmp
xchg
adc
rcr
aam
xor
lds
lea
push
fwait
mov
mov
pop
fbstp
sbb
and
cmp
pop
out
shl
xor
sbb
and
inc
mov
nop
and
inc
add
out
jp
int3
test
sub
dec
and
cmps
sahf
enter
adc
inc
push
add
jo
xor
icebp
pop
hlt
jns
stos
sub
sbb
mov
lock
hlt
(bad)
mov
jp
cs
push
into
jnp
lahf
jle
test
mov
sub
mov
fnstenv
jecxz
retf
out
cwde
xchg
andnps
cs
ss
xor
adc
mov
shl
out
mov
mov
ret
imul
sbb
sbb
cmp
sbb
les
adc
lock
std
popf
add
ja
cmps
cld
scas
cmps
push
(bad)
push
cmp
retf
push
inc
xchg
jns
neg
cli
xchg
adc
push
div
pop
push
mov
repnz
adc
jl
ss
sbb
push
fisttp
jns
clc
add
sbb
dec
xor
jmp
addr16
(bad)
cmp
(bad)
je
or
shr
xchg
fwait
adc
aaa
out
in
data16
ds
mov
lahf
mov
ja
scas
jne
movs
adc
cmps
xchg
jmp
stos
int
mov
xor
sbb
or
out
movs
(bad)
(bad)
adc
int
pop
(bad)
mov
shr
cmps
test
into
iret
push
retf
mov
mov
ret
mov
xchg
cmp
xor
and
sub
mov
in
xor
adc
jno
gs
imul
ror
sbb
jp
pop
xor
mov
pop
sub
test
or
sbb
stos
outs
sar
dec
or
icebp
add
je
fisttp
push
sbb
stc
imul
adc
stc
sbb
clc
cdq
pushf
inc
ret
jae
xchg
push
add
mov
fist
add
mov
in
mov
cmps
and
pop
mov
mov
sbb
(bad)
hlt
fdivr
jmp
aas
clc
scas
imul
mov
pop
bnd
fucom
push
xor
repnz
loopne
xor
jnp
add
and
sbb
mov
movs
stos
(bad)
popa
add
mov
outs
fwait
test
shr
dec
mov
or
ja
mov
push
cmc
mov
sub
sub
push
fbstp
mov
xchg
aas
(bad)
mov
neg
inc
(bad)
jmp
sbb
mov
mov
and
jbe
das
mov
mov
scas
mov
popf
ret
and
sub
call
out
retf
push
sbb
daa
push
repnz
shr
call
mov
xor
cmp
mov
xchg
mov
aad
aam
xor
sub
cli
pushf
sub
cld
icebp
xchg
dec
jp
pop
int
das
out
mov
xchg
stos
lods
ins
cwde
and
pusha
sbb
sub
cld
dec
repz
add
sbb
ret
mov
aad
mov
mov
or
call
pop
pop
(bad)
inc
ja
dec
mov
mov
iret
jns
sbb
mov
fwait
mov
pushf
jne
div
sub
pushf
inc
cmps
daa
adc
cmp
pop
stc
cmc
nop
mov
test
ror
sahf
jae
mov
mov
sub
sbb
jb
pushf
imul
nop
enter
rol
aas
and
in
xor
xchg
and
out
in
loope
call
inc
jns
jno
lods
ins
fnstsw
mov
std
cmp
aad
out
sti
test
ret
loopne
(bad)
push
mov
xchg
mov
jg
jg
and
dec
push
ret
mov
fisubr
out
data16
ds
pop
in
lods
mov
into
out
or
jecxz
mov
mov
int3
jp
mov
xchg
cmp
mov
and
ror
ins
mov
test
mov
xchg
xchg
add
inc
hlt
mov
cdq
aam
mov
aas
xchg
mov
jmp
xchg
add
bound
mov
xchg
shl
stc
cwde
mov
xchg
retf
in
jp
call
dec
push
mov
nop
fdivr
xchg
(bad)
push
in
inc
adc
hlt
or
ror
adc
sbb
and
cli
xchg
or
sbb
sub
stc
xlat
mov
push
add
imul
sub
push
sub
neg
mov
arpl
xchg
rcl
mov
fiadd
inc
mov
adc
fwait
cmp
pop
mov
pop
push
imul
mov
aas
mov
dec
jae
jno
or
sbb
sub
xor
mov
push
mov
pop
(bad)
popa
stos
and
(bad)
clc
sbb
push
cmp
call
xor
movs
cmp
xor
popf
(bad)
idiv
cs
fisubr
inc
lock
rol
pop
dec
inc
stc
movs
xor
lods
int
cmp
add
sub
movs
inc
mov
aam
popa
test
ret
xor
and
add
cmp
popf
(bad)
outs
movntps
xlat
std
scas
out
test
ror
xor
js
std
int
or
call
data16
adc
push
cdq
nop
cmps
mov
jns
xchg
mov
test
sub
mov
scas
inc
in
into
fldcw
sbb
sub
popa
lea
pop
repnz
loop
mov
xchg
into
mov
movs
ret
loope
lods
sar
or
cdq
sub
jecxz
mov
lea
ret
test
cmp
sbb
sti
cmc
mov
das
xor
leave
lahf
add
dec
add
pop
shl
mov
imul
test
out
jae
dec
test
mov
push
mov
imul
xchg
aaa
adc
jno
xor
sbb
fsub
jns
mov
add
sub
adc
loopne
shl
cmp
pop
inc
jle
push
inc
in
push
or
rol
idiv
mov
and
addr16
jo
pusha
xchg
iret
shr
dec
das
jno
cmc
mov
ret
fisubr
push
sbb
mov
popa
fsub
jecxz
and
and
mov
mov
in
stos
in
stos
mov
xchg
jne
cmps
scas
mov
arpl
sub
push
retf
push
sti
out
inc
push
loopne
xor
dec
aas
add
push
push
xchg
imul
jo
out
push
inc
dec
dec
mov
xor
movs
cwde
sub
(bad)
es
repnz
xchg
enter
inc
stos
enter
sbb
pusha
mov
rcl
scas
jmp
test
sub
mov
test
inc
dec
cmps
xchg
loopne
lds
enter
int
in
jb
or
inc
adc
push
adc
shr
jmp
(bad)
rol
push
xor
adc
mov
mov
push
mov
push
aas
enter
inc
loop
push
rcr
mov
jmp
jne
das
push
mov
loop
xor
mov
les
int
xlat
(bad)
(bad)
stc
int
mov
fistp
and
push
mov
sub
addr16
jnp
sub
sub
loopne
scas
cmp
fdivr
je
and
ins
or
je
(bad)
out
fnsave
fimul
aas
lods
fst
xor
out
jnp
mov
scas
and
shl
pop
adc
aaa
adc
in
jp
(bad)
mov
xor
das
add
fnsave
push
xor
pop
jb
scas
push
popf
pop
jae
jge
loop
pop
mov
or
or
jno
inc
sbb
and
loope
ret
std
mov
mov
out
fdiv
aaa
out
aam
not
jo
pop
gs
inc
add
inc
xor
fmul
pop
mov
pop
xchg
jp
sbb
dec
mov
fcmovb
loop
push
inc
(bad)
mov
fbld
(bad)
pop
sub
jecxz
pop
lahf
clc
pop
cmps
icebp
(bad)
dec
std
inc
adc
mov
xor
or
push
daa
jae
push
aad
retf
or
jmp
repnz
out
and
fmul
adc
mov
xor
sub
xchg
daa
pop
xor
pop
mov
or
stc
into
jge
push
aam
and
push
popf
mov
xchg
sub
stos
or
outs
outs
scas
test
mov
push
inc
cmps
shr
push
xchg
xor
fldcw
dec
or
clc
(bad)
mov
in
stos
call
jmp
dec
adc
scas
out
and
lods
sub
cli
mov
lds
nop
cmp
jo
jecxz
sub
out
and
push
das
fsub
es
pop
std
shl
mov
xchg
mov
(bad)
fistp
retf
inc
lods
aaa
(bad)
pop
sbb
or
xor
xor
icebp
aas
cdq
ret
pusha
pop
popa
movs
pop
loope
xchg
mov
hlt
in
add
and
mov
push
sbb
das
mov
es
and
xchg
inc
and
test
sti
pop
xchg
jle
sub
(bad)
sub
mov
adc
push
movs
jmp
add
sti
push
cmp
pusha
mov
inc
int
pop
mov
mov
(bad)
in
stos
xchg
inc
dec
mov
sub
mov
jle
xor
mov
inc
pop
fwait
adc
(bad)
mov
jge
ss
mov
lods
push
and
cmp
push
jmpw
neg
cmc
lahf
jmp
mov
test
(bad)
loope
stos
rcl
inc
xchg
lea
xchg
inc
jecxz
fisttp
popa
scas
lods
fucomp
xchg
jecxz
clc
test
push
aam
test
xchg
fidiv
push
lea
cld
in
dec
sub
sbb
and
rcl
loop
sub
xchg
add
mov
out
pop
jb
and
xchg
jmp
punpckhwd
xchg
inc
pop
xor
mov
stos
ins
push
(bad)
inc
xchg
or
mov
outs
js
cdq
sbb
fxch
pop
mov
mov
mov
cmp
aad
dec
jnp
ds
push
sahf
adc
cwde
dec
add
and
es
inc
or
mov
setae
dec
jno
popa
enter
test
in
jmp
loope
test
pop
clc
mov
mov
(bad)
cdq
adc
popf
pop
in
mov
add
mov
inc
push
adc
dec
inc
test
jae
pop
jl
cmp
mov
(bad)
jns
jp
cmp
sub
jns
xor
nop
cs
mov
pop
in
pop
xor
sbb
retf
cmp
in
push
sub
mov
call
push
fadd
sbb
lods
in
in
clc
xchg
mov
push
add
shl
dec
ret
imul
inc
push
movs
cld
movs
call
push
lods
in
repz
adc
pop
(bad)
in
outs
jmp
sub
inc
mov
jmp
xchg
scas
inc
das
or
ja
mov
shl
push
jmp
cdq
and
or
jae
or
and
mov
mov
xchg
outs
aam
in
xchg
jns
inc
sbb
cwde
push
cmp
xchg
fs
mov
mov
push
jg
push
inc
lds
sar
leave
sub
or
cmp
pop
add
das
ins
pop
mov
lahf
ins
and
sub
inc
add
in
std
mov
mov
dec
xchg
scas
mov
std
xchg
jmp
fisubr
xor
mov
xor
es
push
or
cdq
fucomp
and
icebp
fcmovnu
in
sbb
xchg
loope
div
in
xchg
inc
arpl
addr16
loopne
sub
imul
jnp
stc
repnz
fiadd
adc
test
into
xchg
jmp
ja
push
dec
mov
inc
push
add
stos
sub
enter
add
mov
in
inc
imul
imul
and
xchg
dec
stos
(bad)
outs
jmp
dec
push
inc
(bad)
aad
push
adc
and
xchg
xor
push
sub
das
or
or
(bad)
jmp
inc
sub
enter
or
and
inc
cmc
ins
jno
outs
ror
retf
js
(bad)
arpl
push
ret
lea
inc
in
scas
or
xchg
fdivr
mov
xor
mov
scas
cmp
fld
mov
lea
dec
pusha
mov
pop
inc
sahf
or
ds
gs
xor
sub
inc
mov
add
pusha
mov
outs
pushf
mov
mov
inc
data16
movs
push
sbb
sub
loopne
out
mov
arpl
jns
mov
pop
inc
mov
ins
loop
repnz
test
sub
or
popa
stos
mov
mov
stos
outs
and
jecxz
dec
icebp
stc
sbb
in
mov
pop
dec
adc
ffree
pop
inc
push
pop
ins
(bad)
jns
or
mov
jge
test
add
and
mov
sub
sbb
push
jl
jo
sub
mov
cli
cs
pop
movs
push
sbb
test
ins
xchg
push
enter
mov
clc
sbb
outs
pop
jg
out
(bad)
div
adc
lods
and
jbe
inc
sub
add
popf
arpl
inc
out
pop
sbb
cli
cmp
loop
mov
or
call
cmps
sti
adc
xchg
in
mov
pop
push
jae
dec
(bad)
mov
inc
sub
jmp
sahf
add
hlt
dec
and
pop
adc
mov
jns
retf
add
xor
aam
popa
jns
mov
push
popa
jbe
dec
xchg
xlat
add
in
repnz
lahf
stos
pop
dec
sub
lods
jbe
pop
adc
add
pop
loop
pushf
pop
shr
adc
mov
inc
cwde
xchg
sbb
add
rcl
popa
mov
movs
adc
sbb
pop
or
mov
xor
add
call
lahf
and
jbe
out
jmp
ins
mov
push
cli
jb
mov
and
inc
xchg
aam
push
pop
sbb
movs
dec
(bad)
(bad)
pop
enter
adc
outs
cmp
add
lods
pop
lods
mov
aam
shl
sar
test
pop
out
ja
repz
sbb
mov
sbb
mov
jne
cwde
aam
fcmovb
jae
std
jno
fdivr
cli
pop
sub
div
sub
cmc
fisubr
mov
inc
stc
push
ins
cmp
cdq
inc
xor
test
push
mov
xor
mov
in
in
cmp
ins
mov
test
push
aaa
mov
fsub
sub
ror
cmc
movs
clc
stos
arpl
mov
cmp
push
nop
je
and
popf
jbe
add
xchg
xor
je
enter
inc
cld
add
in
loopne
push
scas
mov
xor
inc
pop
pop
dec
sub
ins
cmps
push
sub
inc
pop
dec
inc
inc
sbb
push
cmp
mov
add
lock
stos
jmp
movs
dec
xor
adc
ficom
ret
jp
inc
adc
dec
sbb
xchg
inc
aaa
loopne
mov
jp
mov
xor
std
ret
repnz
sub
xchg
push
pop
push
sub
in
in
leave
sar
rol
fsincos
mov
mov
aad
push
pop
mov
add
inc
sbb
mov
scas
fs
and
cli
jmp
sbb
pop
cli
repnz
in
sbb
mov
xchg
pop
mov
sub
xlat
xchg
(bad)
cli
add
fwait
sub
pushf
inc
pop
sbb
fcom
and
mov
sub
mov
pop
xchg
pop
out
test
push
jp
xchg
loop
arpl
push
loop
jnp
das
pop
fisubr
cmps
mov
jecxz
adc
popf
sahf
sub
movs
mov
jmp
in
stos
add
test
jp
out
cwde
adc
mov
leave
dec
push
cmp
data16
jne
or
scas
movs
out
mov
inc
in
cmc
sub
sub
xor
xor
cmp
lods
test
inc
mov
sub
loopne
dec
fcmovnbe
enter
scas
jl
cli
xor
sub
cmp
(bad)
push
cmps
fstp
xor
stos
fadd
out
adc
ja
lods
xchg
dec
push
mov
mov
cmp
(bad)
push
dec
lock
mov
and
test
cmovnp
push
mov
ja
jbe
lea
cmp
push
pop
mov
push
mov
stc
push
and
inc
mov
sbb
ins
sub
ret
inc
sub
inc
mov
lea
mov
fwait
push
mov
(bad)
jge
movs
or
loopne
xchg
sbb
mov
hlt
dec
imul
dec
sub
enter
sub
or
ret
adc
in
stos
int
cmps
sbb
mov
cmp
aad
std
inc
dec
adc
ss
(bad)
call
out
pop
xlat
shl
sbb
fnstenv
not
jmp
adc
cmc
neg
idiv
es
and
test
inc
xor
fsubr
push
repz
in
mov
in
(bad)
and
sbb
and
push
inc
mov
lods
jmp
mov
lods
adc
mov
rol
or
inc
outs
pusha
nop
push
mov
dec
je
add
dec
retf
fcompp
pop
lods
int
ret
mov
pop
ret
mov
pop
sbb
mov
sbb
pop
mov
mov
cmp
loopne
xor
outs
or
lock
pushf
inc
lods
mov
je
mov
xor
mov
shr
pop
pop
jmp
dec
mov
xchg
mov
or
jbe
jecxz
jecxz
cmp
pop
inc
sbb
mov
push
xchg
mov
(bad)
mov
out
imul
mov
ins
in
jge
or
test
pop
jge
push
cmp
mov
dec
sahf
push
inc
gs
adc
jp
ss
mov
and
shl
cmps
rcr
cmp
cmc
jp
leave
mov
jge
fistp
push
add
loop
adc
jmp
jnp
cmp
adc
popa
(bad)
rcr
jno
rcr
jle
mov
test
push
retf
hlt
jns
in
pop
cld
out
mov
(bad)
mov
adc
clc
in
inc
adc
fldcw
mov
jle
ds
and
xor
mov
dec
xor
xlat
push
nop
aam
rol
fadd
daa
fisttp
add
xchg
jle
or
xor
inc
loop
pop
loopne
cmps
ja
ds
pop
std
retf
xor
add
or
outs
adc
and
or
stos
pop
mov
pusha
dec
cmp
adc
dec
or
fwait
sub
int
inc
nop
test
push
outs
pop
scas
dec
arpl
leave
xchg
sub
test
add
dec
sub
aas
dec
jmp
xor
pop
fcom
sbb
adc
dec
sbb
mov
fidiv
sub
xor
pop
in
push
sbb
scas
push
repz
out
add
push
and
in
push
neg
retf
pop
aad
and
jp
mov
and
pop
inc
lds
add
add
add
dec
stos
mov
imul
push
pop
inc
cdq
ror
retf
rcl
loopne
push
mov
jbe
add
pusha
or
dec
outs
out
jne
outs
jp
cmp
and
movs
outs
(bad)
ret
out
lock
sbb
fild
loopne
mov
cmp
call
shr
sub
imul
call
jl
push
add
sub
scas
pusha
jp
add
out
enter
push
std
xlat
lahf
fst
mov
dec
push
fnstsw
ja
cmp
sbb
inc
inc
jmp
enter
or
adc
and
ret
xchg
icebp
fidiv
mov
or
push
pminub
cs
test
loope
stc
pop
dec
cmp
push
inc
push
in
out
inc
mov
mov
sbb
dec
or
push
int
fnstsw
xchg
push
pop
mov
add
dec
push
lea
sbb
sbb
adc
push
fmul
(bad)
mov
popf
dec
add
inc
loopne
xchg
xchg
mov
fcmovne
push
ins
outs
adc
mov
jns
mov
fistp
sbb
fmul
sbb
sbb
push
cmp
pop
hlt
xor
fwait
popa
je
je
leave
or
push
adc
cmp
inc
and
mov
push
and
fist
retf
out
lds
(bad)
leave
pop
or
mov
inc
cwde
in
jno
xchg
movs
adc
add
loop
enter
ficomp
pop
(bad)
loop
jnp
or
cli
mov
and
rcl
cli
scas
ds
or
(bad)
call
lods
jp
ret
or
sub
and
sub
push
je
std
inc
call
xor
jnp
or
fs
mov
jb
dec
bound
imul
fidivr
inc
mov
dec
or
adc
adc
pop
stos
fild
imul
sub
jne
std
mov
xchg
sub
dec
pop
sar
sbb
scas
inc
mov
sub
popa
and
xor
sub
dec
mov
test
jg
dec
or
sar
movs
sbb
sbb
mov
popf
sub
mov
stos
xchg
cdq
mov
loope
icebp
xchg
ss
cmps
into
push
pop
mov
xchg
ja
cdq
sub
push
jmp
pop
into
adc
mov
add
xchg
mov
add
leave
or
fiadd
and
fcmovnu
fldenv
out
sbb
mov
les
dec
fld
xor
xor
cdq
out
out
mov
sub
xor
adc
test
test
mov
icebp
rcr
add
lea
retf
xchg
inc
stos
fs
jge
mov
jl
and
push
addr16
bound
jg
and
sub
fisub
mov
in
cmp
dec
xchg
rol
add
lds
cmp
xchg
inc
lods
mov
sub
xchg
(bad)
pop
sbb
xor
imul
xlat
add
cmp
(bad)
(bad)
js
mov
pop
xchg
xchg
dec
sub
push
in
xor
dec
inc
arpl
cmp
stos
jbe
cmp
addr16
jne
das
mov
adc
xchg
outs
mov
gs
sbb
jmp
mul
mov
das
stos
and
cmp
lods
rcr
sar
fcomip
lds
xor
sbb
mov
or
inc
stc
retf
xor
popf
jg
retf
adc
fld
test
ins
adc
mov
mov
lods
mov
bound
xchg
adc
add
cmp
adc
and
loope
pop
xchg
fdiv
pop
std
mov
imul
cli
fwait
and
add
repz
mov
jge
inc
adc
cdq
mov
and
in
push
daa
out
push
(bad)
or
lahf
shl
pushf
nop
push
add
and
clc
xchg
lea
cmps
sub
lods
xor
inc
sbb
or
es
dec
imul
add
xchg
fsubr
add
retf
push
and
fcomp
inc
sbb
leave
mov
adc
loope
and
rep
inc
std
lods
ja
pop
imul
jae
xor
mov
out
jg
push
add
gs
add
movs
(bad)
adc
in
aam
loope
loop
leave
sbb
inc
sub
cmps
mov
push
mov
loopne
setbe
daa
movs
mov
pop
and
add
sub
mov
mov
xor
icebp
xor
mov
nop
mov
push
test
mov
push
call
mov
mov
sar
push
les
aaa
dec
push
mov
fistp
mov
out
jmp
sti
jecxz
(bad)
cs
pop
mov
jo
jge
mov
call
push
pop
sub
je
out
ror
test
cli
hlt
xlat
jp
dec
ss
cmps
xor
aas
adc
jl
out
jns
mov
pop
mov
mov
out
bound
xor
pushf
push
xchg
and
loope
add
add
lea
sub
cwde
in
fild
inc
xchg
imul
shl
and
aaa
push
push
in
jg
ror
sbb
aad
cwde
jecxz
or
xor
fst
mov
dec
test
bound
mov
push
lea
daa
daa
mov
addr16
sbb
cmp
mov
jb
jl
repz
das
stos
adc
or
pop
xor
jp
pop
(bad)
lods
inc
inc
pushf
stos
(bad)
push
sti
add
repz
je
xor
retf
cmp
ins
dec
out
mov
mov
pop
cmc
popa
sbb
add
sub
lds
(bad)
sbb
mov
pusha
sub
pop
jnp
adc
sub
dec
out
dec
adc
jmp
ret
xchg
mov
jnp
jb
xor
jo
push
jnp
xchg
cli
(bad)
sbb
(bad)
mov
sub
cmc
pop
and
sub
jmp
int
outs
dec
push
add
mov
movs
add
xchg
loop
adc
xor
or
xchg
add
or
pop
or
mov
out
fadd
loop
(bad)
cmp
aas
retf
je
mov
in
or
cmps
or
mov
aam
push
test
sbb
lahf
pop
pop
add
or
lea
and
sub
fmul
mov
sub
clc
add
mov
call
fwait
nop
ds
loopne
(bad)
aam
pusha
mov
cmp
push
movs
pop
test
js
push
mov
aad
popa
ret
add
mov
push
xchg
lea
pop
je
dec
nop
xor
mov
and
rcr
jecxz
add
xor
out
pop
xchg
push
mov
mov
sbb
ficom
xor
fs
(bad)
scas
cmps
outs
xchg
addr16
pop
lods
aaa
push
sti
cmp
sub
inc
jecxz
xor
in
cmps
xchg
ret
mov
(bad)
fdivr
jl
mov
inc
xchg
adc
adc
mov
add
je
jae
pop
push
dec
loopne
shl
(bad)
aad
loop
pushf
in
mov
test
(bad)
push
fisttp
lock
cwde
imul
cmps
pop
out
inc
fadd
imul
mov
adc
inc
adc
(bad)
(bad)
sub
sub
cmp
add
lea
jg
lods
mov
push
mov
jo
cmp
add
cmp
xchg
je
or
js
mov
cmp
mov
dec
pop
call
aad
aad
add
inc
das
addr16
mov
sahf
mov
stos
pop
pusha
clc
sbb
add
lods
or
jnp
mov
xchg
adc
loope
cmp
test
push
adc
sub
mov
mov
ins
popf
std
outs
dec
and
inc
out
shl
rol
adc
in
(bad)
and
retf
add
dec
std
inc
call
jo
movs
and
jbe
call
or
or
pushf
popa
xchg
or
inc
and
and
shl
push
cwde
imul
pop
inc
add
push
mov
sti
in
dec
jecxz
and
mov
mov
aad
mov
imul
into
inc
cmp
mov
scas
mov
and
cmp
ja
das
inc
clc
adc
sub
jg
cmp
div
shl
xchg
cs
leave
and
(bad)
neg
add
push
xor
and
fs
push
jb
jecxz
push
outs
fcomp
push
mov
xor
js
cwde
cli
rcl
cmp
cmp
pushf
pop
mov
fstp
nop
loopne
pusha
jp
daa
lods
pop
test
cmp
pop
push
sub
dec
ficomp
in
dec
sub
mov
fstp
push
dec
dec
(bad)
neg
test
cmp
mov
mov
out
(bad)
sub
pop
(bad)
adc
sar
shl
imul
sar
imul
int
daa
cmp
jno
inc
push
outs
xchg
xchg
push
fcmovnbe
push
daa
mov
mov
mov
xchg
inc
xor
leave
jmp
add
adc
test
out
lahf
jle
lock
push
xchg
shl
fidiv
jb
int3
pop
hlt
scas
inc
in
out
add
jl
arpl
pop
push
movs
(bad)
call
pusha
std
fwait
sub
rcr
jmp
and
les
rol
ja
int3
into
jb
adc
mov
and
add
cmps
push
(bad)
ficomp
push
mov
sar
sub
test
cwde
mov
sub
xlat
int
dec
ja
cmps
and
in
inc
jae
jo
and
mov
mov
jnp
ins
test
dec
xor
or
and
add
push
lahf
pop
cli
mov
and
xchg
int3
add
or
adc
into
dec
int3
jl
fadd
(bad)
fs
sub
ja
pop
out
add
pop
inc
outs
rol
xchg
dec
mov
mov
popa
pop
cmc
fnstenv
push
(bad)
mov
and
pop
ret
sti
imul
loop
push
jecxz
aam
fs
sub
mov
call
xor
xchg
ds
sbb
jnp
leave
data16
inc
adc
je
jecxz
mov
inc
push
or
lods
sub
fst
inc
(bad)
xor
je
mov
shl
jne
xchg
int
int
mov
dec
jl
repz
add
inc
(bad)
int
mov
pop
jmp
(bad)
les
inc
lock
mov
add
inc
fcomp
mov
mov
gs
add
shr
lds
mov
data16
mov
sub
push
jnp
mov
ds
ret
dec
dec
sti
call
push
fsub
jmp
jmp
dec
pop
loope
jl
mov
inc
jg
int3
repnz
nop
jns
sub
rcr
dec
add
data16
sub
lea
test
aas
das
cmp
icebp
sbb
cmps
test
into
out
sub
push
in
icebp
aad
sahf
add
in
aad
xchg
push
adc
js
push
ins
push
mov
mov
test
pushf
sub
(bad)
fnstenv
xchg
dec
mov
and
fisub
in
push
je
fs
fs
icebp
jae
pop
jne
lea
and
js
add
fld
jmp
lds
or
aam
in
ret
adc
inc
dec
int3
mov
inc
add
sub
mov
scas
call
xor
test
clc
retf
pop
push
dec
dec
dec
xchg
xor
mov
and
ret
loopne
sub
jecxz
pop
adc
jmp
fisub
adc
test
cmp
adc
popf
dec
ds
mov
sbb
or
mov
sub
xor
imul
adc
ss
fs
rcl
(bad)
dec
cmp
jp
push
cmp
retf
(bad)
daa
sbb
mov
sub
mov
fstp
pop
xchg
and
arpl
mov
loop
ret
dec
ret
and
mov
inc
out
gs
repnz
pop
sti
adc
movs
jle
cmps
iret
dec
or
test
icebp
adc
or
les
jmp
xchg
jmp
out
add
out
jp
stos
mov
out
sub
mov
popf
shl
mov
adc
jmp
lods
xchg
pop
sub
dec
movs
outs
add
and
dec
add
jmp
cwde
clc
scas
mov
pop
push
(bad)
mov
sbb
hlt
mov
mov
adc
add
in
cmp
fild
popf
xlat
pop
cwde
psubusw
shl
jecxz
outs
add
jp
dec
jmp
iret
shl
jns
pusha
in
popf
adc
jecxz
cmps
push
sti
xchg
mov
std
test
fs
cmp
sbb
out
test
clc
xlat
pop
and
int3
ins
or
loope
pop
lahf
lea
cwde
repz
push
shl
retf
test
data16
add
push
dec
mov
lock
or
dec
ins
shl
call
jmp
or
mov
inc
cmps
and
xchg
cs
fidivr
ja
lds
or
push
(bad)
fisub
push
or
pop
pop
sbb
mov
dec
adc
fbld
add
movs
and
jns
inc
inc
loop
add
shr
mul
stos
(bad)
ja
add
iret
test
dec
or
mov
(bad)
(bad)
push
dec
inc
and
popf
sbb
and
int
jmp
push
push
xchg
push
jb
jo
mov
xchg
pop
sub
jae
inc
pop
adc
int3
out
outs
hlt
test
hlt
fsub
ins
retf
or
push
cmp
idiv
mov
sub
inc
call
fldcw
xor
pop
mov
push
sbb
fcmovnb
iret
xor
(bad)
cmps
movs
mov
cmp
in
pop
rol
jo
mov
push
retf
adc
nop
cmp
add
pop
lock
lea
xchg
mov
jne
lahf
inc
aas
dec
pushf
xchg
cmc
ins
imul
xchg
pop
sar
fwait
add
scas
push
popf
setne
xchg
add
cs
aad
faddp
and
sub
cmps
cmp
lods
leave
es
icebp
push
or
arpl
(bad)
adc
cs
cmp
push
xchg
cmps
xor
shr
pop
xor
icebp
outs
jl
lock
mov
jne
push
imul
fwait
push
adc
std
adc
(bad)
out
movs
daa
outs
or
add
pushf
dec
popa
push
sub
xor
sbb
rol
retf
jne
push
push
or
jle
fs
pop
mov
pop
jmp
(bad)
in
or
xchg
(bad)
out
jg
jl
push
xchg
mov
pop
push
sbb
mov
xchg
pop
sahf
xor
les
pop
xor
jno
cwde
mov
pop
mov
mov
mov
test
dec
jp
add
and
mov
xchg
ret
rcl
push
adc
dec
xchg
int3
add
mov
jl
cmc
mov
stos
(bad)
addr16
aam
xchg
repnz
adc
sbb
cli
jnp
sbb
cmc
shl
sti
cwde
sbb
cmp
ins
sbb
fnstcw
sub
mov
jne
sbb
ret
test
xor
jb
ins
dec
mov
cmc
mov
or
cvtps2pi
mov
xlat
inc
pop
cmp
loope
fimul
mov
dec
movs
fsin
cmp
cmp
cld
or
stc
les
aam
xchg
(bad)
adc
add
retf
pop
or
cmps
es
push
test
jbe
mov
cmps
cmps
aaa
jnp
xchg
push
movs
xlat
into
push
cmp
jg
retf
xchg
fild
mov
and
je
push
mov
jmp
mov
sti
mov
mov
mov
pop
mov
mov
xchg
inc
mov
jecxz
mov
fsubrp
push
call
outs
pop
jle
shr
stos
mov
sbb
pop
push
jle
and
fsub
outs
lods
mov
push
and
sub
test
rep
lods
dec
cdq
cmps
mov
jl
in
mov
stc
aaa
cs
bnd
sub
sub
jmp
jnp
jmp
shrd
retf
xor
or
adc
test
jb
adc
inc
pop
hlt
test
pop
pop
add
cmp
(bad)
in
hlt
ret
and
jmp
xlat
fwait
icebp
xor
inc
and
stos
jae
idiv
out
cwde
rcl
adc
mov
pop
scas
dec
mov
pop
frstor
jmp
js
mov
dec
mov
push
or
leave
mov
pop
jg
or
out
popa
fndisi(8087
(bad)
das
imul
jmp
jmp
mov
and
repnz
push
xlat
adc
in
enter
push
fcomi
imul
and
xor
cmps
das
inc
ret
sub
or
jo
jae
fwait
add
in
push
loope
lahf
dec
inc
push
and
cmp
outs
xor
mov
jno
mov
or
cli
mov
xor
stc
loopne
and
cmp
mov
mov
(bad)
aaa
mov
clc
sub
fild
pop
sbb
mov
cmp
cmp
and
sbb
pop
jle
push
mov
sbb
xchg
(bad)
movs
mov
mov
mov
push
adc
sub
or
lock
push
out
mov
ds
fwait
int3
xor
push
inc
out
jecxz
add
pop
out
and
xchg
sub
cmp
inc
leave
test
std
int3
pop
aam
popf
outs
cmps
retf
not
jae
mov
sbb
mov
sub
add
mov
dec
popf
pop
or
mov
push
imul
pop
outs
jl
(bad)
out
push
mov
fwait
retf
adc
jg
jae
jb
in
add
or
movs
xchg
push
and
inc
xlat
wrmsr
call
add
cmp
sub
in
mov
mov
pop
jno
jmp
jbe
push
aas
lock
mov
nop
sti
adc
and
inc
sbb
jb
cmp
xchg
dec
(bad)
jae
xor
shl
pusha
retf
and
test
pop
ret
test
mov
and
lds
sub
dec
jecxz
mov
adc
jmp
mov
sbb
xchg
mov
or
adc
push
inc
(bad)
in
fisttp
popf
jo
aas
mov
mov
rcl
popa
sub
loopne
xchg
popa
scas
inc
or
idiv
sbb
pop
leave
arpl
mov
dec
int
stc
xchg
or
fadd
fstp
push
jg
imul
mov
inc
dec
(bad)
jns
aaa
jmp
gs
lock
push
ja
mov
mov
sti
jge
(bad)
mov
out
fdiv
adc
cld
cdq
pop
retf
icebp
dec
add
lds
ret
add
or
jle
push
sbb
ficom
dec
out
dec
cmp
or
sub
mov
cmp
add
clc
jmp
xor
pop
jbe
sbb
cmp
fsub
gs
cli
popf
inc
(bad)
fisttp
dec
cmps
shl
mov
sahf
pop
add
pop
xchg
cmps
rcr
scas
jl
test
push
xchg
loope
stc
adc
pop
das
xor
movs
cmc
cwde
cmp
push
xor
fadd
mov
arpl
add
rol
mov
into
jmp
pop
(bad)
jno
jns
and
std
or
scas
clc
pop
cli
push
aas
cmps
or
add
enter
lods
into
mov
and
mov
call
test
aam
clc
shl
popa
adc
xchg
imul
xor
or
jno
out
mov
mov
leave
cmps
loope
pop
int
in
mov
xchg
fcomp
(bad)
data16
xor
mov
mov
test
cld
add
cli
dec
push
cs
pop
add
xor
xor
or
push
xchg
faddp
mov
inc
mov
or
sub
push
or
push
call
test
ins
fwait
call
rcl
cmp
popa
sub
lahf
add
pop
(bad)
pop
sub
fninit
pop
xlat
mov
adc
leave
cmp
sub
add
in
push
and
pushf
xor
ds
mov
pop
xor
fwait
test
mov
fild
mov
xor
inc
jle
fdiv
(bad)
sbb
stos
mov
adc
ror
sti
sub
jbe
in
jmp
bound
dec
pop
ror
neg
rol
loope
add
mov
aam
dec
into
xor
enter
outs
and
test
aaa
pop
or
inc
mov
push
or
test
sub
jo
and
int3
shr
xchg
push
fnstenv
and
inc
sbb
(bad)
inc
xor
int
imul
std
out
jne
jne
or
mov
sub
in
test
js
push
out
pop
in
cmp
xor
mov
and
lahf
rol
inc
popf
xchg
jo
js
arpl
loop
daa
sub
movs
in
enter
int
push
mov
jb
loopne
push
int3
inc
leave
dec
fcomp
bound
inc
cwde
or
sub
ret
cmc
std
jno
xchg
xchg
inc
cmp
cmp
pop
mov
pusha
jge
imul
jo
(bad)
shl
int
jle
(bad)
inc
out
mov
popf
fbld
mov
mov
fiadd
addr16
inc
in
xchg
(bad)
xor
add
add
cmp
jno
and
aas
movs
aad
scas
neg
shl
sbb
xchg
add
out
jae
add
xchg
inc
daa
sbb
inc
push
ror
jge
sbb
lock
dec
out
add
mov
jne
mov
mov
jae
push
mov
adc
and
mov
xor
inc
xchg
mov
xor
jbe
in
pop
outs
aad
jp
(bad)
push
sbb
inc
sub
pushf
mov
pop
movs
loopne
fisub
jle
sbb
and
sub
in
or
and
jmp
xlat
(bad)
pop
dec
xor
call
js
jle
cmps
mov
push
rcr
adc
retf
jmp
scas
out
js
add
and
cwde
out
aad
sti
imul
xor
push
ffreep
pop
fsubr
sbb
stc
add
and
clc
or
imul
jne
or
mov
hlt
pushf
cmps
mov
jle
bound
jnp
cmp
push
xchg
jbe
add
adc
push
mov
ret
jo
jmp
cwde
mov
lock
sbb
jle
aam
loop
repz
push
lahf
dec
inc
inc
repnz
add
in
(bad)
pop
mov
adc
adc
mov
clc
adc
out
mov
or
rol
sub
xchg
jg
ror
cmp
ss
cmps
jg
daa
jecxz
popf
loope
jns
lds
mov
mov
or
add
pop
arpl
lahf
iret
jl
dec
sbb
sbb
das
das
adc
(bad)
into
mov
sbb
mov
cwde
vmovaps
es
pop
xchg
inc
sti
xor
adc
ins
mov
sub
sub
outs
(bad)
(bad)
xchg
mov
jnp
es
inc
sti
stc
and
sbb
stc
dec
ret
mov
add
(bad)
lock
psubusb
xor
push
pop
loope
inc
mul
and
push
in
pop
lods
lods
pop
mov
xchg
leave
scas
fild
dec
aad
mov
cmp
stc
daa
cmp
mov
hlt
pop
scas
mov
les
bnd
retf
cmp
repnz
mov
jo
xor
dec
push
das
xor
mov
jo
test
jg
out
cmc
add
xor
and
jo
xchg
cmp
mov
add
(bad)
dec
(bad)
xchg
imul
mov
movs
retf
jge
shl
ret
and
popf
sbb
xor
cmp
push
pushf
inc
rol
fidivr
je
cmp
and
inc
mov
ret
loop
mov
cmp
mov
xor
add
sbb
push
sub
mov
push
(bad)
arpl
fdiv
ins
cmp
push
sbb
or
pop
cmp
jbe
inc
cmp
xor
add
dec
adc
mov
shl
outs
out
ror
or
xchg
stos
sub
outs
fwait
xor
xchg
cwde
add
push
jnp
sub
xchg
shr
pop
in
xor
and
cli
or
pop
push
push
push
or
aas
inc
sbb
fistp
aam
out
xchg
push
jbe
neg
xchg
call
dec
outs
xor
jno
fsub
mov
cwde
aad
dec
loope
mov
data16
icebp
loope
cmp
jp
lock
stos
mov
pop
scas
aad
lds
in
rcr
pop
int
stc
and
lods
jg
dec
test
add
push
mul
jmp
out
mov
or
imul
aaa
fidivr
data16
jae
dec
inc
inc
mov
cwde
mov
mov
imul
mov
jecxz
sbb
adc
jo
nop
lahf
add
inc
add
pop
mov
pop
jo
xchg
arpl
sub
or
les
xchg
mov
push
cmp
jns
xor
out
adc
mov
loopne
cmps
fyl2x
int3
cmp
or
lahf
hlt
dec
in
in
gs
dec
rcl
clc
sbb
scas
push
and
retf
sbb
cmps
cmp
loop
jbe
cmp
xchg
xchg
cmp
in
and
xlat
out
pushf
adc
call
std
repz
cs
pop
nop
push
adc
mov
dec
jmp
ret
repnz
mov
mov
lahf
inc
cmp
mov
jnp
ret
push
not
ret
pmuludq
mov
je
popa
(bad)
xor
mov
inc
xor
and
loope
inc
in
mov
xchg
and
jle
inc
pop
mov
popf
adc
out
gs
jle
add
ja
lock
xchg
xor
jbe
add
mov
or
jge
sahf
movs
cmps
push
pop
push
inc
cmps
in
adc
sub
adc
movs
or
mov
ss
jb
in
push
vpmultishiftqb
sub
(bad)
repnz
out
jns
cld
mov
xlat
jp
xchg
lea
mov
xchg
xor
mov
lods
call
sub
fnsave
dec
cli
out
xchg
stos
call
iret
xor
dec
inc
jge
pop
xchg
cli
rcl
dec
or
mov
(bad)
mov
cmps
stc
push
dec
sbb
fimul
jl
adc
ret
(bad)
or
inc
push
lea
repnz
xor
pop
cmp
call
jecxz
jge
push
cdq
lods
or
add
mov
add
jmp
inc
xor
push
adc
cmp
mov
lock
loope
arpl
sbb
shl
and
dec
sbb
les
pop
jbe
mov
xchg
and
mov
jnp
dec
(bad)
(bad)
jb
test
in
push
scas
in
dec
jbe
ror
ja
ss
mov
fnstcw
test
fsubr
mov
out
mov
mov
aam
xor
dec
repz
mov
dec
(bad)
and
cs
fidivr
xchg
test
mov
inc
add
mov
loope
xchg
or
(bad)
xor
jb
jg
pop
dec
cmp
jb
jae
pop
aaa
jae
mov
ss
xchg
mov
(bad)
sub
adc
adc
and
cwde
and
jmp
jmp
sub
in
add
cmps
mov
jg
mov
(bad)
in
inc
mov
add
pop
call
xchg
test
cmp
xchg
or
aaa
jnp
frstor
cld
xchg
pop
sbb
fmul
mov
add
aam
add
mov
ret
jnp
jecxz
sub
push
inc
arpl
das
jne
in
lods
clc
xchg
or
xor
xor
push
sbb
xor
mov
mov
out
nop
cmp
add
aad
jp
adc
pop
push
or
shl
enter
mov
fwait
sub
inc
or
fidivr
mov
mov
adc
stos
aam
repnz
xor
pop
test
enter
in
add
cmp
nop
cmp
loop
xor
addr16
shr
sbb
imul
pop
jo
fidiv
gs
pop
rol
xor
push
jle
in
push
mov
mov
inc
dec
jg
and
mov
adc
popa
and
xor
hlt
pusha
mov
or
daa
xor
test
dec
int3
rcl
dec
popa
ret
mov
or
repnz
fsub
ret
test
int
mov
test
and
bswap
les
xchg
in
dec
jnp
ds
out
jmp
pop
add
outs
cmc
out
and
mov
shl
mov
push
xlat
lds
test
add
and
add
sub
push
mov
les
test
sub
adc
movs
adc
mov
inc
pushf
sbb
push
lock
cmp
mov
cmp
sub
scas
jl
jp
push
ins
in
outs
(bad)
xlat
xchg
repnz
mov
ds
mov
enter
or
mov
sub
mov
mov
(bad)
cmp
or
sti
icebp
and
push
add
jl
jbe
push
js
iret
retf
inc
mov
sub
sbb
loope
adc
leave
test
cmp
cmp
div
into
stc
dec
sbb
xchg
ins
int3
sbb
imul
retf
mov
sbb
lods
(bad)
sbb
xor
call
mov
lea
mov
clc
mov
push
pop
shr
icebp
mov
outs
test
xchg
inc
jno
push
inc
add
push
sbb
int
sub
test
dec
aam
jns
ficom
es
and
sbb
shl
adc
into
mov
daa
int3
mov
mov
addr16
js
and
std
inc
pop
icebp
mov
fldcw
(bad)
mov
jae
not
sti
mov
lock
inc
std
xchg
xor
mov
(bad)
cmp
(bad)
sbb
shr
outs
xlat
xor
outs
cs
bnd
(bad)
call
pop
(bad)
jae
jmp
inc
call
getsec
mov
add
loope
and
enter
nop
mov
leave
popf
cmp
cmp
ss
movs
in
inc
rol
jle
call
jmp
(bad)
iret
repz
add
jl
repnz
jmp
fwait
xchg
lods
cli
gs
dec
adc
jecxz
repnz
inc
loopne
lods
enter
push
push
les
sub
jae
je
push
mov
js
movs
inc
or
mov
ficom
sbb
cwde
or
mov
lahf
rcr
push
scas
lods
ror
(bad)
xchg
stc
push
inc
rol
push
push
inc
iret
cmp
(bad)
xor
data16
add
add
out
mov
jns
imul
lock
mov
clc
mov
mov
dec
js
xlat
inc
pop
stos
imul
and
(bad)
test
push
push
fld
cdq
push
inc
add
adc
mov
sub
sahf
loopne
sti
fdiv
mov
mov
adc
stos
and
out
out
mov
push
sar
dec
scas
sub
sti
cdq
mov
xlat
sbb
or
jl
inc
add
mov
icebp
js
push
adc
fstp
stc
sub
arpl
adc
mov
inc
fnsave
adc
mov
test
cmp
pop
bound
adc
mov
cmp
aas
ja
movs
gs
push
mov
pop
fcom
int3
jns
outs
imul
adc
and
out
mov
push
stc
push
aaa
fsubr
sub
pop
push
(bad)
adc
(bad)
(bad)
cld
push
pop
jo
iret
scas
or
sbb
jne
jnp
jb
stc
inc
in
sbb
xchg
sti
cmp
int3
jg
fst
daa
push
inc
ins
pop
imul
stc
inc
xor
sub
mov
mov
je
fdiv
adc
lods
ins
nop
mov
lock
push
sbb
outs
out
xor
fcom
inc
pop
xchg
add
pop
lea
push
dec
sti
xchg
adc
leave
sti
xor
call
push
or
mov
inc
sbb
aam
add
mov
ret
std
(bad)
aad
jbe
cmp
lds
push
sbb
sbb
lea
push
jbe
mov
mov
ja
test
xor
inc
xchg
push
loop
dec
je
repz
mov
pop
add
in
ror
pop
daa
push
cmp
mov
hlt
and
mov
fadd
and
xchg
mov
in
dec
jno
or
ret
ins
add
fwait
pop
mov
jge
mov
lods
or
inc
inc
xor
add
rcl
mov
adc
movs
pop
lahf
lods
arpl
dec
mov
or
cli
test
retf
hlt
aad
das
retf
dec
addr16
repnz
pop
inc
clc
jb
neg
sar
push
je
(bad)
dec
dec
and
pushf
cld
or
fwait
dec
ficom
jp
fnsave
aam
mov
fist
mov
inc
xchg
arpl
sbb
or
dec
(bad)
push
pop
mov
inc
jns
mov
cli
mov
pushf
into
add
sti
pop
inc
jns
cmp
xchg
in
(bad)
in
pop
jns
(bad)
aam
lods
repnz
fwait
pop
pop
mov
pop
sub
repz
push
jecxz
or
or
hlt
shl
jp
iret
sub
cmps
imul
xlat
bound
in
or
in
loop
pop
cld
or
test
inc
shl
jns
adc
xchg
js
pop
sbb
pop
push
lods
in
in
adc
push
jp
xor
lea
cs
lock
cmp
and
dec
into
mov
shl
pop
add
retf
lahf
xchg
sub
sbb
push
scas
outs
fsub
cmp
bound
lahf
mov
add
sub
or
sub
rcl
lea
stos
mov
adc
inc
mul
mov
ja
pop
jle
dec
icebp
es
aad
sti
xor
fild
sti
xchg
and
ret
sbb
in
int3
into
cli
sbb
mov
xchg
cs
outs
cmps
(bad)
cmp
push
pop
mov
cmps
cwde
loop
es
cwde
test
or
int
mov
mov
fs
xchg
xchg
jno
pop
dec
or
ja
test
pusha
add
fisttp
push
sbb
pop
aaa
push
xchg
nop
test
or
pop
in
mov
rol
xchg
outs
cmc
sbb
out
xor
mov
and
or
stos
adc
gs
xchg
and
mov
ins
cmp
repnz
mov
pop
pop
adc
or
cld
stos
outs
data16
repnz
pop
mov
mov
sbb
or
in
std
imul
inc
fimul
ffree
sti
mov
mov
sub
aam
adc
es
inc
cdq
pop
push
sub
or
test
pop
cwde
call
jns
das
test
stos
sbb
nop
rol
int
ret
dec
xor
inc
mov
add
sbb
cdq
popf
hlt
je
daa
mov
mov
scas
or
or
add
mov
mov
inc
jae
jo
push
pop
xchg
imul
rol
jno
pop
test
inc
push
cmps
idiv
cmp
mov
aam
(bad)
fstp
gs
ins
mov
xlat
movs
jns
std
push
fdivr
xor
push
xchg
int
push
sub
adc
sub
push
cmp
das
dec
xor
int
xchg
idiv
and
add
shl
cwde
lock
xchg
push
sahf
popf
(bad)
fdiv
in
stos
cmp
rcl
cld
daa
jb
mov
push
aaa
nop
push
sbb
lahf
sahf
retf
cli
add
xchg
mov
lea
in
bound
dec
mov
mov
pop
enter
add
movs
inc
inc
or
repnz
add
fmul
xor
push
xchg
sbb
push
mov
outs
mov
add
(bad)
in
loop
push
cmps
or
retf
lods
inc
sahf
push
mov
stos
lods
fisttp
pusha
repz
imul
movs
fldenv
jmp
fdivr
cld
loope
inc
inc
ja
stc
clc
in
lea
loop
sar
adc
or
cmc
bnd
dec
enter
and
in
jns
mov
imul
sub
add
or
add
out
retf
jb
adc
aaa
xchg
call
jecxz
daa
jmp
repz
bound
imul
mov
jbe
lock
ds
xchg
jns
cmp
inc
add
inc
dec
push
cmp
addr16
sbb
pusha
xor
cmp
les
adc
popf
int3
mov
mov
pushf
fwait
cmp
pop
or
sub
es
inc
adc
arpl
add
ins
jno
adc
test
in
mov
push
push
pop
dec
sbb
aas
dec
mov
pop
add
lods
cmps
inc
sub
stc
or
pop
into
in
xchg
add
adc
jae
lahf
sbb
ja
(bad)
stos
push
fild
ffree
sub
or
(bad)
mov
arpl
enter
(bad)
sti
pop
fimul
in
lods
pop
push
push
adc
addr16
out
jmp
cld
inc
xor
fidivr
(bad)
ret
arpl
stos
mov
or
mov
mov
sub
push
sbb
dec
clc
inc
sub
fwait
(bad)
in
xor
mov
sub
cmp
test
retf
jno
icebp
or
mov
push
xchg
(bad)
sbb
sbb
jle
dec
ds
js
iret
push
xor
lea
aas
rol
cmp
adc
je
out
daa
popf
inc
xchg
sbb
or
outs
jo
les
inc
sar
and
(bad)
mov
(bad)
pop
fs
or
ret
outs
int
sub
jl
aaa
test
mov
ret
pop
pop
sub
or
xor
jp
gs
push
xchg
nop
mov
es
xor
pop
and
into
test
xlat
adc
je
mov
out
add
pop
sub
sar
movs
dec
call
cmp
ins
outs
mov
pop
repnz
mov
loopne
ss
jae
cdq
ss
mov
adc
add
ret
mov
xchg
imul
mov
jecxz
cli
pop
lods
sti
dec
sbb
cmp
mov
stc
cmp
or
iret
inc
repz
xchg
xchg
mov
xor
aad
in
fistp
cmp
addr16
push
rcl
outs
stos
and
inc
xchg
inc
mov
xchg
(bad)
mov
test
pop
adc
js
and
mov
add
cmp
mov
in
fucom
pop
clc
cli
cmps
cdq
mov
imul
bound
cmps
xchg
jecxz
cwde
lea
adc
pop
pop
shl
sbb
in
cli
pop
ret
(bad)
and
mov
imul
sbb
push
ret
arpl
jge
inc
jae
pop
lds
ror
mov
cwde
stos
lock
mov
enter
dec
aas
int3
clc
fs
jmp
push
retf
loope
adc
sbb
popa
mov
inc
fwait
(bad)
sti
xchg
jo
fsubrp
imul
xor
cmps
mov
imul
leave
mov
mov
adc
inc
fsubr
icebp
ja
push
inc
xor
stc
xor
shl
pop
dec
adc
shl
mov
and
xchg
or
xor
mov
cmc
xchg
xor
call
mov
pusha
mov
ins
lahf
xchg
jo
pop
dec
xchg
in
ficom
add
fidivr
adc
test
add
aam
add
rol
je
pop
dec
arpl
aas
or
sbb
scas
nop
pop
rcl
pop
mov
jb
adc
dec
call
stos
repnz
imul
mov
mov
sti
pop
or
cmp
fisttp
sbb
fcmovb
mov
loopne
clc
jae
cmp
sbb
dec
or
mov
mov
imul
js
mov
sahf
adc
je
add
inc
jns
inc
movs
push
mov
call
inc
sbb
sbb
mov
(bad)
or
adc
hlt
or
xor
sbb
test
push
jle
mul
pushw
arpl
inc
repz
nop
mov
lock
out
cmc
push
jb
cmp
icebp
mov
popa
mov
das
add
mov
cmp
xchg
adc
push
cwde
dec
and
loope
sbb
sbb
mov
mov
inc
mov
scas
xor
dec
push
dec
shl
mov
mov
sub
mov
cmps
xor
fadd
seto
js
xchg
jnp
lock
stc
dec
(bad)
pop
jbe
(bad)
out
cld
cmp
push
adc
sub
mov
xchg
mov
div
pop
enter
jne
sbb
jne
dec
aam
jnp
retf
(bad)
adc
retf
jns
adc
cld
pop
mov
or
pusha
inc
add
sbb
mov
mov
loop
bound
scas
test
and
and
pushf
push
cmp
sbb
scas
test
in
retf
stc
rol
adc
sbb
xchg
sbb
jle
adc
mov
pop
pop
pop
sahf
loope
inc
repnz
inc
mov
mov
jo
cwde
mov
add
mov
push
cwde
outs
ret
mov
imul
clc
adc
inc
jmp
adc
movs
lea
cmc
pop
sahf
mov
div
adc
push
jmp
ins
lahf
xchg
xchg
push
fs
pop
es
das
outs
pop
rcl
dec
sbb
mov
push
add
pusha
inc
jbe
mov
fisub
jae
push
inc
push
sti
jge
dec
or
cmp
add
ins
leave
repz
addr16
ds
shl
sbb
and
call
xchg
xor
div
xchg
pop
jmp
pusha
push
int3
xor
mov
jmp
dec
lds
add
dec
mov
cwde
mov
arpl
cmp
mov
push
sub
out
lods
xor
les
test
ror
pushf
ja
mov
ret
jbe
js
jo
not
(bad)
mov
shr
mov
fdivp
push
imul
sbb
adc
cld
push
add
retf
addr16
addr16
sbb
ret
and
xor
and
in
jg
add
jl
adc
cli
jge
rcl
xor
repz
mov
int
jnp
mov
mov
call
mov
cmp
add
int3
les
sub
sbb
nop
scas
inc
retf
clc
or
sub
sub
add
(bad)
adc
sbb
in
imul
arpl
ror
pop
jno
mov
jnp
in
and
out
and
ins
adc
pop
push
inc
sub
dec
cmp
add
fld
dec
mov
jns
sbb
repnz
fisub
and
int
mov
mov
sub
les
sbb
jle
in
scas
push
iret
loopne
(bad)
pop
repnz
mov
jns
out
stos
xchg
fisubr
out
repnz
cld
aas
pop
mov
retf
mov
fwait
outs
lods
or
arpl
inc
and
out
jg
mov
jne
jbe
xchg
push
loop
les
jle
adc
lods
push
sbb
sub
ror
in
dec
xchg
pop
add
dec
mov
pop
(bad)
in
mov
(bad)
ins
cmp
mov
cmp
dec
sbb
lahf
jmp
daa
jb
loopne
and
arpl
ins
icebp
aas
mov
rcr
jns
cdq
ds
test
mov
(bad)
mov
loop
call
jmp
loope
or
ret
xchg
pushf
pop
dec
mov
push
mov
add
scas
pop
test
mov
in
int3
mov
cld
loope
rcr
inc
cmp
sbb
cmp
enter
inc
mov
pop
icebp
jbe
or
xchg
enter
out
cmps
fnstsw
int3
(bad)
nop
fcmovu
or
jg
xchg
or
inc
sbb
(bad)
push
push
jmp
cdq
daa
jno
mov
sbb
xchg
pop
add
dec
int
adc
enter
leave
sub
mov
repz
sub
jae
xor
mov
jge
dec
fmul
mov
lock
jo
rol
dec
xor
ins
in
jmp
int3
div
pop
icebp
sahf
repnz
int3
or
xchg
pop
jnp
loope
test
call
mov
adc
jne
test
jno
sbb
nop
jae
jmp
pop
sub
mov
ret
push
or
sbb
add
cmp
adc
pop
adc
pop
jl
scas
jmp
stos
mov
retf
sbb
mov
jmp
xchg
pop
or
jmp
std
push
xchg
xchg
and
xchg
adc
das
inc
into
scas
pop
ins
adc
icebp
(bad)
pop
stc
push
mov
mov
jns
cmp
scas
sub
fs
lock
test
mov
enter
push
adc
stos
fst
or
xchg
sar
dec
pop
dec
sbb
adc
jo
shl
push
fs
dec
ss
and
mov
jmp
(bad)
cld
das
neg
test
add
(bad)
lods
fmul
repnz
and
jno
pop
ss
inc
ins
inc
loope
jg
std
and
mov
push
sahf
cmovae
mov
sti
mov
mov
ret
aaa
and
cld
pop
ret
popa
sahf
fdivr
outs
adc
shl
test
fwait
pop
jns
stos
mov
pop
rol
and
adc
pop
lds
jo
push
push
cmp
rcl
je
or
lock
loope
dec
jmp
out
jmp
ret
xchg
ficom
jbe
xor
lock
jbe
adc
ds
sbb
(bad)
mov
push
retf
sbb
test
mov
icebp
test
xor
aaa
sub
push
loopne
xlat
dec
adc
rcr
mov
in
sahf
outs
xchg
shl
lods
adc
jb
or
cld
mov
(bad)
fcomip
into
and
test
jnp
sub
or
retf
sub
inc
in
xchg
and
arpl
aam
cld
cmp
out
pop
rcl
test
cmp
xlat
jns
mov
psllq
cmps
enter
jge
jmp
dec
inc
jl
and
les
mov
call
dec
push
cwde
stc
in
repz
add
ins
out
pop
pop
cmp
pop
push
sar
cmp
lds
fsub
rdseed
outs
rcr
scas
xchg
pop
sub
ud0
ret
jnp
movs
push
sti
or
sbb
call
jle
aas
xlat
ins
xchg
fwait
xor
pop
pop
(bad)
(bad)
pop
aad
call
(bad)
mov
mov
mov
mov
pop
fwait
loop
mov
enter
xchg
cmp
scas
icebp
xlat
adc
and
sub
jns
push
ret
push
mov
pop
scas
dec
cwde
ret
push
push
fbstp
inc
mov
mov
js
jmp
jecxz
scas
adc
clc
and
and
pop
dec
ror
push
jmp
adc
stos
xor
push
xor
add
popa
pop
fstp
sbb
and
imul
add
xchg
inc
sbb
xchg
scas
mov
movs
int
cmps
pop
es
aad
sti
movs
dec
pop
cmp
push
dec
cli
(bad)
xor
cmps
inc
lock
xor
dec
stos
adc
mov
jge
test
imul
test
xchg
addr16
adc
cmp
ret
sub
sbb
add
cdq
xchg
push
ds
jo
sahf
aad
movs
in
pop
xchg
pop
lds
fucom
lods
jno
bts
mov
push
jbe
add
adc
movs
inc
xor
or
mov
sub
push
popa
ja
sbb
jnp
inc
rol
adc
gs
fld
daa
pop
out
dec
cmp
stos
pop
ret
sar
leave
mov
xchg
enter
mov
xor
jle
inc
call
cmp
xchg
jmp
dec
dec
loop
(bad)
mov
mov
mov
add
cmc
xor
mov
mov
push
sti
not
nop
inc
stos
push
pop
xchg
rcr
adc
mov
cmps
hlt
outs
push
movs
push
jbe
xchg
lods
imul
icebp
ret
cmp
jns
jbe
adc
sbb
cmp
xor
mov
out
xor
sub
cmc
or
fdiv
add
pop
in
int
pop
jo
sub
imul
sub
sbb
dec
sub
cdq
sahf
repz
and
inc
add
adc
cmp
hlt
push
sub
fstp
adc
pop
cld
sbb
and
icebp
repz
mov
lds
mov
leave
jb
push
cmp
xchg
cmp
dec
out
mov
sub
cld
xor
shl
(bad)
xlat
pop
pusha
movs
(bad)
mov
jl
mov
adc
int
ss
sbb
rol
retf
mul
pop
and
cmps
call
and
sbb
ror
hlt
jmp
retf
daa
jp
cmp
inc
pop
in
or
aas
sub
push
(bad)
loopne
pop
ja
stos
jg
push
shl
out
push
adc
mov
bnd
cdq
into
call
loop
jecxz
mov
dec
cmp
ror
enter
push
cmp
jecxz
and
xchg
cmp
stos
xchg
dec
xchg
jns
mov
adc
ficom
mov
sti
(bad)
fldcw
mov
push
out
pop
enter
fnstenv
cmp
add
or
test
lds
(bad)
add
xchg
dec
jmp
pop
aad
das
or
and
dec
ss
add
xor
jnp
out
jle
ror
dec
loopne
cmp
frstor
lahf
inc
rol
or
addr16
jmp
xchg
stos
mov
out
or
inc
(bad)
sbb
lock
xor
rol
pop
mov
loope
cmps
cmp
in
or
rol
cmp
and
cmp
aas
dec
sbb
fstp
push
fadd
jnp
stos
xor
enter
jnp
sbb
push
push
push
jmp
(bad)
jecxz
mov
lahf
mov
sti
repz
mov
jbe
aas
fist
sub
aas
sti
ret
mov
and
iret
pop
push
xor
inc
nop
push
neg
adc
and
hlt
int
movs
lock
gs
cmp
xchg
stos
dec
sub
rcl
pop
sbb
and
and
enter
fcom
mov
cmps
les
in
es
fisubr
je
sbb
jp
stc
cmp
pop
cwde
and
(bad)
adc
mov
pushf
loopne
inc
inc
mov
dec
imul
mov
jp
nop
jbe
ds
add
mov
push
push
mov
movs
dec
cmp
push
cmps
jle
test
ins
jecxz
es
ds
ins
cmp
(bad)
mov
outs
movs
popa
inc
cs
cld
inc
sub
inc
mov
rcr
mov
aam
(bad)
pusha
push
cmp
nop
mov
adc
add
or
xchg
shl
lds
or
or
or
lds
mov
inc
sti
sub
pop
or
fwait
fs
xchg
mov
popa
pop
lds
dec
xchg
dec
test
mov
and
cmps
pop
cmp
mov
pop
pop
pop
retf
lods
sub
sub
cmp
sbb
adc
fmul
add
fstp
(bad)
int3
bound
out
sub
loopne
jge
cmp
sub
mov
daa
adc
push
imul
sbb
inc
sbb
leave
jg
in
or
fs
call
dec
or
fucom
and
ret
xchg
push
jge
scas
(bad)
cmp
push
mov
cmps
dec
mov
or
cwde
stos
gs
aaa
adc
jle
dec
ja
stos
lds
mov
cwde
jge
repz
pop
jae
retf
clc
xor
js
mov
adc
pop
scas
add
(bad)
ss
gs
jl
inc
adc
xor
pushf
mov
mov
dec
push
imul
ffree
push
jg
add
cmp
mov
or
hlt
pop
sahf
adc
mov
fdivr
cld
scas
add
loop
je
sbb
sub
jnp
popf
movs
add
cmc
pop
mov
push
and
ds
xor
stos
popf
out
cdq
sbb
aas
cmps
xchg
sub
scas
xchg
loopne
mov
sub
push
jge
push
mov
repz
cmp
cmp
retf
(bad)
lods
jl
xchg
call
leave
mov
ss
fwait
mov
hlt
fstp
mov
or
lds
ds
lea
rol
xchg
or
push
jg
pop
push
mov
add
stos
fs
loop
std
xchg
push
xchg
fwait
sub
sti
jmp
jg
(bad)
lods
xchg
cmp
movs
mov
adc
loope
jmp
(bad)
imul
sbb
shl
inc
inc
pop
cwde
add
shr
int3
leave
push
lock
inc
add
push
imul
dec
loope
es
out
outs
bound
inc
ss
sbb
dec
(bad)
mov
rcl
(bad)
cld
in
and
cmc
nop
aam
mov
sub
jb
std
mov
jne
cmp
fwait
(bad)
cmp
shl
push
lea
movs
into
push
jno
pop
push
cld
scas
jne
inc
and
mov
shl
ret
les
fild
pushf
std
jo
pop
pop
loopne
jge
or
push
inc
(bad)
jbe
pop
hlt
push
sar
mov
jmp
stos
frstor
mov
loope
pand
xchg
jl
pop
jne
into
xchg
sub
sub
dec
jno
popf
inc
and
cmp
test
inc
push
cwde
xchg
sub
add
add
shr
cs
aaa
jnp
aas
scas
ss
les
xchg
in
mov
push
add
jmp
pop
cmc
daa
shl
sahf
fdivrp
imul
or
jno
sar
adc
ret
mov
arpl
fnstsw
(bad)
xor
popa
pusha
sbb
into
test
cmp
imul
mov
pop
arpl
cld
fadd
push
jecxz
test
cli
xlat
lods
das
stos
cmp
and
xchg
or
clc
fdivrp
out
outs
(bad)
add
popa
xor
pop
xchg
adc
inc
pop
aas
out
aam
xchg
jp
nop
mov
fld
mov
mov
fistp
mov
or
retf
mov
aas
mov
retf
push
pop
sub
test
fwait
mov
gs
fiadd
inc
pusha
ret
sbb
push
sar
les
push
and
adc
es
mov
dec
(bad)
pushf
xchg
mov
loopne
mov
mov
inc
imul
out
icebp
add
push
add
ret
push
add
ins
js
xchg
mov
stos
rcl
inc
call
xor
cmps
gs
stos
shl
sub
fisttp
and
cmp
dec
adc
cmps
jp
mov
mov
int3
mov
stos
sbb
inc
mov
into
(bad)
and
test
cli
pop
data16
jl
add
movs
repnz
es
cmps
call
imul
pusha
adc
push
or
adc
dec
in
push
rcl
adc
in
lds
pop
rol
mov
sbb
mov
jle
pop
or
push
and
push
dec
pusha
cld
cmp
and
stos
cmp
(bad)
shr
push
or
lea
lods
and
clc
std
aaa
callw
inc
mov
cwde
lods
in
pop
and
ds
fstp
mov
push
xchg
lock
(bad)
jns
push
lea
sbb
lock
adc
mul
hlt
mov
sar
mov
or
push
out
in
dec
fcom
pop
mov
dec
ret
adc
and
arpl
jp
arpl
retf
mov
adc
ins
arpl
loopne
and
jns
out
jne
shr
test
or
sbb
loop
ds
test
jo
jae
out
test
cmps
cmp
mov
es
in
add
adc
xchg
das
ss
bound
push
or
push
xchg
std
jns
and
retf
stos
pop
ja
jl
aaa
xlat
mov
and
int3
adc
add
mov
mov
mov
sbb
and
xchg
lods
mov
ins
les
sub
xchg
jne
ss
and
dec
das
lds
test
pushf
imul
cld
out
mov
lds
push
out
push
jl
int
call
push
test
push
movs
rdpmc
dec
call
jo
pop
shr
mov
push
sbb
sbb
mov
aaa
addr16
stc
and
push
xor
call
and
dec
data16
jecxz
xchg
inc
clc
mul
cdq
xor
call
cmps
xor
sti
sbb
mov
call
inc
jl
es
xlat
lahf
dec
pop
add
mov
test
mov
pop
imul
ins
pop
leave
movs
icebp
popf
inc
or
ins
push
jg
jp
shl
mov
inc
cdq
iret
dec
push
test
aad
sub
mov
pusha
data16
jp
jae
inc
stos
mov
xchg
int
pop
jp
sbb
imul
xchg
stc
movs
sub
es
cmc
pop
icebp
add
outs
(bad)
mov
pop
dec
sub
mov
pushf
ret
fstp
add
(bad)
cmp
icebp
jp
mov
inc
xchg
imul
push
loop
add
loop
jns
test
mov
arpl
mov
xor
mov
mov
es
(bad)
das
dec
sbb
jp
and
dec
sub
or
les
cmp
repnz
into
outs
mov
and
xor
jg
push
repz
imul
jle
sar
fist
enter
(bad)
or
pop
mov
add
push
inc
pushf
shr
sub
(bad)
xor
aas
jae
pop
push
popf
dec
ret
and
(bad)
fxch
ret
sbb
arpl
(bad)
shl
add
in
out
add
leave
jae
pop
push
dec
cwde
inc
push
dec
stos
test
hlt
das
scas
inc
loope
pop
ret
pop
int
(bad)
jmp
mov
pop
mov
cs
xor
and
js
into
or
ret
mov
movs
data16
movs
dec
int3
arpl
je
out
sub
mov
dec
jp
test
ret
jge
ss
mov
rcr
loop
das
pop
in
ror
push
(bad)
(bad)
and
pusha
jno
lods
mov
and
xchg
je
mul
mov
xchg
not
jbe
mov
lea
stos
mov
lds
sbb
mov
mov
add
lahf
adc
arpl
push
xchg
and
dec
push
add
xchg
pop
sbb
ret
mov
xor
rol
mov
sbb
(bad)
test
scas
inc
test
ret
jecxz
sbb
mov
sti
jnp
xchg
xor
fdivp
es
hlt
pop
pop
xchg
mov
aas
xchg
xor
xchg
sub
dec
out
and
sbb
inc
ficomp
xor
jno
jp
retf
mov
or
in
add
push
push
fcmovbe
outs
sub
push
(bad)
jle
cmp
test
or
jo
mov
jmp
xchg
inc
push
pop
sbb
or
mov
daa
ja
test
out
mov
jg
mov
jb
jl
or
cdq
or
dec
adc
out
cmp
cmp
push
pop
daa
mov
addr16
jmp
mov
jbe
pop
add
jmp
loop
sub
inc
in
jecxz
add
addr16
jmp
addr16
in
bound
push
sub
(bad)
iret
test
adc
or
mov
dec
lds
jne
mov
arpl
jb
or
in
in
push
clc
(bad)
(bad)
sete
imul
mov
data16
mov
lods
sbb
add
stc
xchg
rcl
fisubr
and
push
mov
fnstenv
inc
shl
push
arpl
mov
mov
out
xchg
add
xor
(bad)
cmp
dec
cmc
or
cmovg
jle
cwde
aaa
(bad)
call
cmp
xchg
jmp
mov
add
mov
ret
sub
lea
push
shl
dec
mov
inc
in
(bad)
sbb
xchg
push
pop
(bad)
add
jns
push
das
inc
sbb
cli
mov
jle
ficom
adc
ds
(bad)
pop
test
pop
cmp
std
call
dec
pop
mov
nop
sbb
lock
mov
or
xor
and
retf
addr16
stos
mov
hlt
sar
ja
stc
inc
push
push
and
mov
add
xor
imul
test
lahf
xchg
in
fisub
shrd
ja
mov
cmp
mov
int
fistp
xchg
mov
outs
pop
in
dec
inc
push
lock
cs
sbb
inc
cwde
xor
jmp
repnz
jb
test
pop
pop
xchg
push
pop
nop
ja
xchg
jmp
aad
out
mov
popa
js
inc
enter
mov
and
dec
mov
stc
ins
dec
arpl
dec
mov
adc
mov
jo
out
cwde
pop
mov
xchg
or
push
sti
rcl
push
movs
lea
or
int
out
cmp
mov
cli
add
inc
xchg
mov
(bad)
clc
call
inc
mov
les
and
pop
mov
mov
mov
xchg
xchg
ds
cli
leave
imul
pop
fistp
loop
lods
mov
xchg
cmovp
loope
not
in
xchg
aad
sbb
sbb
fcomp
js
jae
test
adc
cmps
lods
outs
fs
rcl
cmp
cdq
mov
sbb
retf
or
ret
data16
test
dec
mov
cli
sbb
cmp
mov
sbb
iret
cmp
inc
rol
push
mov
cmp
icebp
xlat
inc
adc
in
jmp
es
jmp
into
lds
mov
push
add
xchg
std
call
mov
dec
mov
xchg
xlat
pushf
popa
and
mov
sub
enter
dec
loope
adc
stos
mov
test
js
and
retf
in
pop
cmp
fs
and
hlt
jns
cwde
xchg
sub
fs
push
add
sub
pop
push
shl
stc
push
rcr
sbb
(bad)
dec
fld
rcr
fldcw
lock
xor
cmc
cmps
mov
mov
mov
in
jecxz
cmp
add
mov
jns
cld
or
mov
mov
aam
ret
adc
daa
(bad)
shl
sub
xor
add
cmovo
je
pop
das
scas
sub
fidiv
cli
pop
mov
stos
ror
adc
push
sbb
popa
inc
jne
cmp
fmulp
jmp
adc
into
scas
scas
mov
int3
mov
add
stc
or
xchg
sub
jmp
sbb
aad
popf
jae
test
or
mov
nop
pop
stc
push
bnd
mov
je
gs
ja
or
pop
fwait
pop
(bad)
sar
mov
ja
rep
ins
xor
test
scas
(bad)
mov
int
add
cmp
or
addr16
dec
scas
jbe
mov
jl
fmul
pop
xchg
mov
dec
dec
dec
out
and
jmp
inc
xchg
sbb
xchg
aad
(bad)
push
div
fisubr
neg
sub
adc
movs
or
iret
popa
or
pop
add
sub
gs
mov
push
arpl
in
popf
xor
es
rol
jnp
mov
sub
rol
iret
aas
fild
ret
fsubr
cmp
in
adc
push
xchg
xchg
sbb
cld
into
xchg
rcl
popa
(bad)
aam
lds
and
push
xor
jbe
push
cli
jbe
ins
repz
sti
mov
and
jne
pushf
dec
jno
xchg
mov
iret
shl
(bad)
leave
int3
test
pop
cmp
mov
fidiv
lock
(bad)
jg
ins
(bad)
cs
lods
sti
xlat
xlat
popa
pop
stc
adc
dec
inc
mov
xchg
xchg
jne
jmp
inc
shr
mov
mov
push
test
cmp
sahf
jl
add
jmp
mov
or
sub
and
jl
rol
mov
sti
mov
cmp
loope
call
mov
rcr
sub
mov
pop
sbb
cmp
inc
hlt
sbb
nop
outs
jmp
dec
mov
push
pop
dec
add
and
add
test
cwde
sub
inc
cmp
mov
fidivr
jns
(bad)
fld
fadd
xchg
scas
ror
sbb
ins
sbb
sbb
into
or
mov
push
mov
jmp
xor
push
inc
mov
xchg
jecxz
aam
not
push
stos
loopne
push
cmp
test
cmp
fs
adc
(bad)
(bad)
adc
outs
jo
(bad)
stos
jo
pop
data16
adc
pop
(bad)
mov
adc
fwait
ror
adc
and
(bad)
fstp
ret
test
xor
call
dec
leave
lea
fdivr
out
into
outs
xor
(bad)
inc
adc
bnd
or
scas
mov
and
not
add
shl
addr16
dec
fwait
aaa
aaa
lods
addr16
cmp
jmp
sbb
adc
(bad)
icebp
pop
sar
mov
enter
mov
(bad)
retf
sbb
jae
mul
std
mov
mov
dec
dec
sbb
or
xor
out
push
sub
aaa
add
mov
add
icebp
and
aaa
mov
lea
xor
xor
and
stos
icebp
in
xchg
pop
xor
sbb
mov
sub
aaa
adc
cmp
dec
lahf
jmp
and
jp
cwde
aam
mov
ret
je
fild
mov
jb
into
mov
xor
aas
aas
xchg
inc
adc
and
lahf
xor
cmp
scas
in
xlat
cmp
jno
loope
fcmovnbe
movs
cmp
xchg
repz
pmullw
mov
in
ret
mov
shr
cmp
add
shr
mov
stos
enter
xchg
cmp
xchg
xchg
dec
jnp
fldcw
dec
mov
jmp
xchg
inc
in
mov
test
mov
(bad)
cmc
data16
push
lock
mov
xchg
xor
cmp
loop
arpl
sub
inc
dec
popa
inc
hlt
mov
sar
xchg
and
(bad)
or
pop
(bad)
je
(bad)
leave
jl
jns
cmp
clc
in
mov
leave
fisttp
or
test
push
out
fidivr
lock
lds
sbb
repnz
je
push
dec
mov
test
or
sub
in
lock
jmp
dec
stos
movs
mov
out
cld
add
arpl
in
inc
cmps
and
loope
ror
jbe
sysret
in
ins
nop
sub
loop
outs
xor
xor
test
movs
dec
mov
jmp
mov
push
pop
cmp
or
cmps
lahf
sub
and
mov
dec
jns
or
add
lods
push
xchg
mov
or
add
out
stos
lds
cdq
int3
or
push
jno
sub
lock
bound
or
out
xchg
out
xchg
int3
vpshuflw
xlat
sahf
pushf
mov
or
vxorps
push
mov
ins
xor
inc
test
mov
cmp
and
cdq
test
xor
sub
test
dec
sub
clc
out
and
ret
jmp
gs
cmps
inc
sub
sar
jmp
xchg
push
nop
xor
dec
and
xor
lods
inc
push
pop
jmp
dec
es
jo
out
push
xchg
push
xor
and
int
xor
rol
mov
loope
sti
test
xor
scas
clc
stos
and
push
popf
mov
cld
movs
mov
jno
gs
and
and
cmc
pop
or
and
sub
sbb
(bad)
nop
xor
sbb
dec
adc
push
adc
in
sbb
cmps
pop
sbb
mov
shr
adc
outs
sbb
repnz
mov
xor
inc
in
jne
ss
mov
dec
outs
imul
mov
push
arpl
lods
add
push
mov
fadd
es
daa
sub
lock
push
das
xchg
jle
aam
aaa
sbb
ins
ret
das
ss
cmp
arpl
into
mov
jge
mov
pop
ror
sub
(bad)
jns
dec
adc
add
int3
adc
xchg
pop
es
leave
jp
leave
mov
pop
and
fdivr
adc
repnz
xchg
mov
rcr
jae
sbb
not
fldcw
stc
push
adc
pop
mov
aaa
cs
xor
pop
push
mov
movs
(bad)
test
lock
movs
inc
movs
shl
and
pop
repz
or
js
ss
outs
fisub
and
int3
mov
xor
dec
scas
loopne
xor
loope
cmp
ror
aad
mov
(bad)
iret
xor
(bad)
or
jle
aam
popa
add
xchg
out
jmp
pop
push
pop
sub
icebp
nop
out
cmps
mov
xchg
xchg
xchg
imul
ins
clc
sbb
imul
xor
les
and
test
sub
jbe
mov
shl
dec
icebp
xchg
fabs
push
cmp
mov
jns
jb
movs
xchg
out
out
dec
jmp
xchg
test
xor
ds
popa
jmp
dec
xor
sbb
pop
jae
jecxz
inc
dec
fstp
or
(bad)
out
cmp
test
das
dec
lock
inc
stos
sub
mov
push
sti
es
inc
and
jl
out
ins
adc
out
leave
fs
push
shl
add
not
mov
repz
lahf
mov
shl
xor
pop
fidiv
stc
outs
push
inc
aaa
in
retf
inc
cwde
mov
pop
shl
ud1
cmp
icebp
mov
repnz
jae
fisubr
ja
fisub
aam
adc
adc
(bad)
xor
cmps
pop
clc
pop
jnp
or
push
mov
cmp
sbb
inc
mov
sbb
fbld
popa
xchg
aas
(bad)
jmp
dec
add
add
js
sub
dec
ins
(bad)
fstp
out
cli
jns
es
into
js
mov
data16
sbb
pop
push
pop
retf
loop
loop
push
lgs
imul
mov
test
neg
loope
jno
xor
popf
fwait
je
jecxz
xchg
(bad)
inc
xchg
mov
cmp
sub
test
pop
mov
lods
sbb
mov
xor
push
xor
pop
jp
pop
mov
imul
stos
lea
mov
xchg
sbb
inc
loope
sbb
push
dec
mov
mov
out
std
jecxz
ins
lods
cld
inc
mov
xor
xchg
pop
mov
mov
scas
call
rol
cmp
ins
push
repz
in
or
xchg
xor
fisubr
mov
ficomp
pusha
mov
(bad)
lea
jno
add
mov
out
and
adc
cmc
call
mov
test
arpl
pop
mov
dec
jnp
stc
xchg
scas
jp
adc
jns
sub
mov
loope
or
add
das
test
outs
sti
xchg
sbb
retf
or
ja
and
arpl
xchg
mov
mov
xor
inc
push
xor
lock
add
imul
or
iret
scas
or
stos
ret
xchg
inc
sar
jnp
mov
jae
gs
cmp
stc
sub
mov
cdq
or
sbb
dec
shl
sbb
jp
dec
xchg
out
iret
aam
push
dec
inc
sub
mov
pop
xchg
popa
test
es
sbb
sub
out
push
sar
xor
dec
out
mov
sub
sub
push
adc
movs
mov
clc
test
scas
cld
or
push
and
xchg
test
jp
int
fcom
mov
pop
clc
inc
jg
lock
push
push
jl
(bad)
inc
cmp
lock
cs
pop
cmc
pop
repnz
outs
jo
mov
adc
sbb
movs
cmp
dec
push
shl
sub
sub
in
pop
cmp
jne
push
sbb
push
xchg
push
lock
loope
into
sub
pop
popa
fld1
pop
xchg
fisub
mov
test
sub
mov
or
das
dec
mov
push
jbe
sbb
xchg
pop
mov
sbb
ins
shr
jns
imul
mov
xor
mov
les
pop
mov
push
bound
out
fs
stos
(bad)
cmp
fwait
dec
jge
and
in
(bad)
fdiv
imul
ins
pop
fst
pop
sahf
adc
fsqrt
add
loope
repz
sahf
sar
imul
xchg
aas
pop
cmp
mov
mov
fmul
aam
call
ds
mov
push
mov
mov
sub
inc
ins
movs
(bad)
inc
inc
ja
dec
ret
mov
mov
aas
pushf
fimul
jo
sbb
bound
and
adc
pop
(bad)
clc
jmp
and
inc
fs
call
pop
shl
aam
or
aam
mov
pop
and
add
mov
(bad)
scas
mov
xchg
jge
aam
mov
lock
sub
pop
sbb
mov
clc
mov
cwde
in
jne
push
ss
add
jae
cmp
cdq
add
repnz
shr
hlt
push
jo
push
cmp
mov
and
and
int
call
sub
les
lds
stos
pop
push
jg
in
mov
(bad)
pusha
cmp
dec
lods
cmp
mov
mov
sbb
imul
adc
aaa
adc
bound
and
mov
xchg
(bad)
sti
cmps
sub
fsub
xchg
add
pop
mov
(bad)
xchg
inc
pop
jp
jns
pop
imul
adc
fnsave
sub
mov
adc
in
sbb
jp
das
mov
stc
ror
imul
add
dec
outs
cwde
lock
mov
iret
std
pop
xor
add
mov
xchg
stos
call
stos
data16
les
fnstsw
(bad)
bound
push
clc
jne
iret
icebp
cmp
and
aad
jno
es
xchg
push
(bad)
adc
jnp
in
jno
pushf
(bad)
repz
outs
pop
imul
out
adc
pop
xchg
sbb
sbb
mov
xchg
imul
ror
je
sti
inc
sub
(bad)
test
scas
mov
jbe
push
mov
jb
out
adc
je
pushf
scas
fucomi
mov
pusha
arpl
sbb
xchg
and
or
(bad)
je
jb
into
(bad)
xlat
push
jmp
das
push
fisubr
or
sar
(bad)
adc
pop
push
scas
xor
sub
cmp
mov
add
jg
movs
and
rcr
lods
inc
sbb
cmc
mov
cmps
std
shl
jae
leave
inc
dec
or
and
sar
mov
jge
mov
stos
rol
sub
(bad)
push
jmp
mov
call
inc
loope
pusha
cld
aad
sbb
mov
mov
jae
cli
and
dec
stc
push
outs
pushf
sub
push
je
inc
bound
dec
(bad)
cmp
push
loopne
push
sahf
(bad)
mov
daa
xor
mov
(bad)
jmp
add
lahf
jmp
adc
mov
or
dec
ss
fcmove
dec
push
lds
jp
sar
pop
retf
aam
fistp
or
xchg
sbb
jp
push
aam
dec
adc
neg
and
adc
fsubr
mov
sub
nop
xor
xchg
cmp
(bad)
in
lods
xchg
mov
(bad)
or
and
sub
mov
mov
rol
jmp
push
movs
lds
repnz
fcomp
loopne
nop
push
or
mov
fs
fist
imul
mov
sbb
in
jmp
test
push
inc
add
jecxz
pop
mov
cmp
mov
pop
push
jnp
sub
das
add
mov
jmp
sbb
mov
add
(bad)
adc
int3
js
call
mov
jns
pop
loop
cmp
xor
enter
stos
into
adc
jo
mov
movs
pop
add
in
pop
popa
mov
sbb
in
out
adc
and
sti
cdq
jno
retf
call
mov
dec
out
mov
fs
adc
push
lods
or
or
mov
ins
and
add
adc
jnp
fs
lea
fmul
(bad)
sbb
ds
mov
mov
jl
mov
or
or
ds
push
ror
cmp
out
push
and
or
(bad)
pop
std
das
jp
pop
cs
and
out
inc
movs
mov
and
ins
xchg
out
or
ins
push
sete
inc
js
xchg
ror
ret
popf
sub
das
xor
daa
out
mov
pop
xchg
sbb
cwde
movs
cli
jg
mov
pop
push
adc
popf
fadd
pop
cmp
xchg
mov
inc
(bad)
pop
cmps
fadd
call
mov
pushf
in
mov
fadd
pop
ret
pmaxsw
add
stc
cmp
sahf
test
hlt
inc
dec
push
xchg
sub
bound
mov
scas
mov
test
jo
inc
lahf
aad
inc
mov
add
test
inc
fld
icebp
jmp
das
sbb
push
inc
shl
loope
enter
xchg
jno
inc
cmp
cmps
mov
(bad)
daa
fisttp
sub
cmp
test
lds
hlt
fild
mov
or
rcr
je
sahf
pop
movs
jecxz
jne
inc
lods
mov
movs
outs
cdq
pop
ret
outs
popa
repnz
mov
ja
mov
fst
cmp
xchg
adc
dec
mov
inc
mov
int3
mov
sbb
xchg
es
pop
xor
sbb
hlt
jnp
(bad)
pop
push
mov
gs
test
enter
popa
ins
inc
mov
sub
and
sub
(bad)
sar
inc
add
push
sbb
jg
rol
stos
inc
or
ss
loope
jl
add
jmp
fnstsw
das
(bad)
or
xchg
dec
adc
mov
loopne
cli
mov
adc
pop
gs
and
pop
mov
movntq
out
in
or
outs
xchg
icebp
sub
scas
add
in
mov
pop
cmp
xchg
xchg
shr
or
cmp
sbb
fmul
push
je
cmps
xor
rcl
push
adc
lds
add
and
outs
mov
lods
sbb
mov
test
ret
dec
test
jno
cwde
mov
(bad)
jb
jmp
cmp
test
dec
pop
cs
jmp
mov
mov
test
das
iret
inc
(bad)
and
dec
mov
addr16
shl
mov
mov
cmp
clc
shl
ror
test
nop
aad
sti
call
mov
fisttp
rol
fdivrp
retf
push
jns
mov
jle
arpl
fwait
ja
out
add
outs
bound
(bad)
mov
jle
mov
std
cmps
mov
cmp
(bad)
add
js
es
sbb
pusha
push
pop
adc
iret
adc
adc
mov
sbb
adc
mov
xchg
push
fmul
add
movq
sub
stos
add
sub
mov
sub
inc
or
cmp
pushf
es
movs
cld
adc
sar
shl
jne
mov
cmp
pavgw
and
fwait
ss
push
mov
popf
cmp
inc
cs
jl
push
jmp
out
add
aaa
sub
pop
cmp
aad
leave
push
mov
jo
pop
sub
pop
push
push
ss
lock
xlat
int
and
cmp
cwde
mov
aas
pop
ins
fldenv
inc
push
ror
xchg
pop
inc
jbe
mov
(bad)
ins
out
or
mov
into
iret
outs
mov
out
dec
inc
ror
popf
push
inc
ins
push
jmp
je
inc
mov
jmp
lods
out
daa
fisub
test
(bad)
mov
iret
xlat
in
test
mov
mov
unpcklps
outs
push
push
and
cmp
mov
pop
mov
jp
fiadd
mov
mov
fsubrp
mov
aaa
mov
sahf
inc
clc
scas
add
mov
mov
call
push
movs
fnsave
pushf
add
ins
cwde
jbe
ja
mov
mov
bound
jno
xchg
cs
aas
fs
pop
adc
mov
js
xor
ds
push
mov
stos
jmp
stc
test
(bad)
loope
mov
jne
(bad)
test
jecxz
call
in
mov
jecxz
mov
in
push
cmp
or
arpl
pop
and
nop
mov
jmp
scas
cmp
into
adc
or
and
lahf
push
push
adc
fiadd
aas
or
mov
dec
ja
lds
pop
sbb
sub
or
not
mov
push
push
add
and
repz
fcmovne
dec
and
add
and
push
xchg
shr
or
lock
xor
out
xchg
int3
movs
or
xchg
stos
push
dec
(bad)
enter
and
and
sub
jbe
ins
rol
inc
ds
mov
jge
sbb
in
xor
das
imul
lods
mov
fnstsw
jl
or
lods
xor
xchg
mov
ss
adc
push
mov
push
adc
mov
stos
test
in
fbstp
cmp
or
xor
js
retf
(bad)
lods
dec
imul
repz
addr16
sub
gs
mov
and
dec
pop
push
adc
mov
stc
push
xchg
test
mov
int
in
jns
data16
lahf
vpmuludq
adc
mov
push
inc
jmp
sbb
jle
jecxz
pusha
sub
clc
jecxz
in
inc
stos
arpl
iret
jl
fdivr
out
adc
adc
and
mov
stc
inc
retf
adc
jl
rcr
lods
fwait
int3
dec
push
test
mov
jb
push
hlt
add
fcomp
jnp
aam
test
(bad)
mov
pop
femms
into
pop
enter
popa
mov
rcr
jle
mov
push
push
dec
adc
in
lock
add
xchg
mov
or
enter
push
(bad)
dec
(bad)
fadd
outs
(bad)
jns
jo
out
fnstsw
pop
(bad)
cmp
cmp
cmp
movs
push
xchg
sub
test
dec
jno
sub
stos
mov
xchg
mov
(bad)
mov
inc
mov
call
pop
inc
and
pop
and
inc
cli
fwait
movs
sub
retf
shr
jae
and
sti
sub
(bad)
bound
or
adc
ja
and
ret
inc
mov
sbb
xor
repnz
jecxz
in
in
adc
addr16
in
ret
popa
js
dec
fcomi
cmp
and
and
sub
jl
arpl
push
push
or
mov
stos
jnp
mov
leave
mov
popf
xor
bnd
xchg
xor
stos
ficomp
fimul
pop
bnd
jmp
lods
push
retf
neg
pushf
push
movs
or
push
adc
cs
fwait
pushf
mov
jne
ins
xor
jmp
(bad)
jae
ja
(bad)
(bad)
test
int
inc
or
and
sti
xchg
push
push
add
inc
out
test
add
ret
sahf
jns
int
loopne
aam
mov
inc
outs
xchg
mov
xor
inc
aaa
cs
mov
dec
ins
inc
mov
aad
ss
or
fwait
mov
pop
inc
and
sbb
mov
addr16
movs
(bad)
in
sub
fdiv
mov
ret
ds
and
mov
call
or
gs
add
inc
push
push
or
cmp
xor
mov
jmp
inc
sub
push
movs
sub
cli
fsubr
pop
or
mov
sub
inc
mov
retf
mov
push
and
cmps
cmp
mov
or
ins
dec
pop
xor
mov
stc
jne
jle
mov
addr16
sbb
cdq
outs
or
mov
sub
rol
xor
xchg
inc
adc
and
push
retf
cmp
and
scas
pusha
inc
sub
cmp
xchg
mov
stos
mov
mov
rol
push
xor
jne
xor
in
test
jmp
fcomp
or
mov
add
nop
pop
loop
movs
sub
out
jno
jecxz
loopne
jl
adc
sbb
adc
pop
cs
pop
add
mov
sbb
push
addr16
rcl
idiv
(bad)
retf
or
pop
daa
adc
push
ins
stos
push
cmc
and
and
dec
push
xchg
das
xor
jne
pop
not
(bad)
mov
xor
jae
aam
in
mov
push
mov
and
ins
rol
rcr
adc
jne
xchg
fst
push
neg
icebp
inc
pop
repz
xchg
cmps
xor
mov
enter
jmp
jl
repnz
ror
mov
xchg
(bad)
inc
push
cmp
jno
jl
jmp
imul
int3
jo
mov
lods
pop
xlat
mov
je
lods
cmps
pop
hlt
jb
mov
push
sub
adc
stos
jns
sar
mov
loope
mov
nop
test
mov
stos
and
jns
pop
jmp
lods
mov
xchg
add
xchg
frndint
in
jno
inc
dec
xor
sub
cdq
dec
dec
test
xchg
ret
or
adc
cdq
dec
inc
mov
inc
(bad)
fidiv
and
dec
jbe
rsqrtps
test
fst
sbb
xor
push
pop
sub
daa
sbb
mov
inc
sub
sub
add
adc
and
xchg
(bad)
dec
les
std
sbb
outs
rcr
(bad)
(bad)
lods
mov
cmp
imul
mov
lahf
jne
or
dec
sub
mov
stos
into
push
add
dec
fild
stos
add
pop
repnz
inc
into
mov
xchg
add
or
in
cmp
and
cli
sbb
ficomp
mov
and
ins
adc
(bad)
fcomp
jp
fistp
add
push
ss
xchg
rol
xor
mov
rcpps
icebp
and
sub
(bad)
aaa
in
(bad)
cmp
shr
xchg
add
fs
jp
jmp
out
and
test
adc
shl
inc
addr16
test
das
pop
jbe
rol
adc
push
jns
mov
sbb
aaa
mov
into
sbb
cmp
(bad)
dec
(bad)
sub
jmp
push
js
jmp
repnz
das
add
fld
mov
and
mov
js
mov
cmp
mov
inc
jnp
jmp
jnp
nop
inc
aaa
push
push
loope
outs
xor
mov
inc
or
jmp
repnz
pop
repnz
pop
aam
push
mov
xchg
mov
iret
xchg
not
jne
adc
sub
mov
lods
push
stos
neg
adc
inc
sub
int
inc
mov
imul
stos
fs
pop
rcr
(bad)
xchg
xor
mov
sbb
or
test
les
test
mov
jmp
dec
ins
push
fdivp
repnz
imul
sub
stc
sub
adc
std
(bad)
loope
jge
mov
idiv
adc
jnp
and
cs
pop
mov
in
jmp
cli
mov
test
call
jbe
adc
inc
das
call
cmp
out
cmps
fld
test
xor
outs
retf
aam
add
xor
clc
mov
hlt
inc
xchg
adc
pop
(bad)
adc
cld
mov
adc
and
gs
and
scas
push
and
ffreep
movs
pop
daa
sbb
or
mov
xor
mov
cld
jmp
sar
test
dec
fist
jo
jge
shl
push
nop
cmp
ins
mov
and
mov
aam
mov
rcr
mov
(bad)
mov
cmps
ds
or
fmul
and
dec
or
mov
jo
jne
pop
push
jmp
sbb
icebp
lods
fs
push
in
imul
xor
sbb
mov
mov
outs
stos
test
cmps
(bad)
push
cwde
mov
mov
nop
cs
repnz
mov
jp
mov
out
in
call
add
mov
popf
mov
jg
xchg
pop
or
add
sti
jns
mov
outs
xchg
into
mov
jle
test
xchg
int3
outs
mov
mov
pop
xor
leave
clc
sbb
pop
jnp
pop
dec
and
cwde
rcl
mov
xor
pop
loop
xchg
jl
pop
addr16
(bad)
pop
inc
pop
sar
call
cmps
mov
ins
mov
or
xchg
mov
xchg
repnz
ffreep
pop
fldcw
pop
mov
loopne
cmc
fnstenv
int
xor
inc
jb
xchg
mov
push
xor
cs
popf
cmp
shr
nop
sbb
dec
and
pcmpgtw
inc
push
in
nop
iret
xchg
xchg
std
cmp
push
pop
lds
fldcw
call
clc
mov
sbb
cmp
mov
sbb
or
jg
mov
sub
(bad)
call
xchg
xor
ins
dec
pop
xchg
xchg
lahf
xor
rol
and
push
jo
add
cmp
add
lods
push
std
mov
loope
(bad)
xchg
dec
out
ror
push
and
adc
xchg
stos
icebp
cwde
push
dec
jl
fldenv
dec
cld
rcr
scas
(bad)
fisub
iret
loope
sbb
add
sub
xchg
sub
ins
mov
mov
sub
adc
popa
out
push
cmps
cmps
shl
and
lea
fwait
jo
push
(bad)
fist
sub
aas
jg
imul
lods
adc
adc
aaa
cdq
sbb
nop
mov
div
popf
clc
add
cmovns
xor
push
mov
cld
lods
ins
fnstcw
jo
pop
pop
push
xchg
xor
sbb
aaa
and
call
enter
sbb
push
div
sub
mov
test
rcl
mov
outs
cwde
pop
xlat
push
mov
das
jge
dec
add
push
out
jmp
(bad)
sbb
push
sub
push
addr16
dec
cld
call
inc
mov
add
and
call
inc
sbb
daa
mov
push
xchg
call
sub
dec
mov
shl
(bad)
push
mov
jb
sub
stos
mov
cmp
shl
adc
test
xchg
stos
cmp
pop
sti
stc
pushf
and
inc
xlat
push
and
in
push
mov
rcl
stos
ins
iret
cmps
leave
mov
xchg
dec
aam
xchg
test
call
dec
dec
mov
mov
outs
aas
rcl
dec
fucom
out
div
(bad)
js
lahf
push
popa
int3
in
sub
pop
test
inc
sub
cmps
rcl
sbb
xor
adc
vmaxpd
and
dec
jae
int3
pop
mov
cmps
cmc
jae
mov
dec
push
nop
mov
les
push
rol
aaa
sub
out
jnp
inc
arpl
scas
aaa
cmp
inc
test
fistp
retf
fimul
mov
fst
add
cwde
mov
and
fwait
add
ins
adc
test
mov
fldenv
pminsw
xor
xchg
push
cmp
pop
imul
or
out
jo
ins
mov
push
dec
aad
adc
pop
xchg
shl
into
cmp
loope
adc
sub
and
imul
aaa
xlat
dec
adc
lahf
cmp
out
pop
stos
push
dec
jmp
pop
jle
xchg
cmp
leavew
das
mov
lds
pusha
push
dec
dec
dec
adc
jmp
cmp
dec
add
lds
test
bound
adc
xor
leave
mov
shl
add
mov
daa
cmp
cmp
mov
inc
loop
mov
mov
cmc
sbb
out
xchg
or
cmp
xchg
and
inc
pop
addr16
sub
or
shl
in
mov
(bad)
rep
daa
jmp
adc
test
rcr
test
pop
sahf
(bad)
sbb
and
scas
cmps
sub
js
sub
pop
arpl
rcr
data16
test
jae
bound
mov
mov
add
xchg
mov
inc
mov
pop
jmp
xor
dec
jo
fist
imul
outs
fbld
push
cmp
and
push
call
dec
xchg
iret
fbld
dec
or
repnz
sahf
shr
pop
and
mov
xchg
add
sbb
test
aaa
pop
mov
test
bound
scas
pushf
sub
jge
cmp
ins
cmp
add
enter
(bad)
bound
jbe
pop
loopne
jo
lods
int
and
sbb
xor
or
mov
(bad)
mov
adc
aad
mov
lods
mov
mov
cli
xchg
aad
xor
or
cld
xchg
mov
aas
into
push
dec
cmp
sub
fld
xchg
cmp
mov
fwait
rcr
stos
dec
lahf
cld
lock
stos
jo
mov
jae
xor
mov
push
icebp
(bad)
push
sub
(bad)
push
add
loop
or
and
in
shl
xchg
xchg
and
adc
ins
dec
xchg
sub
jne
and
push
pop
(bad)
xchg
xchg
loop
call
lea
stc
rcr
jnp
mov
aam
or
mov
jae
and
stos
sbb
pop
mov
cmc
mov
fadd
dec
push
aas
or
pop
pop
mov
aas
adc
sub
mov
cmp
sub
and
pop
and
xor
jle
pop
sub
jo
mov
mov
pop
movs
add
ror
push
pop
outs
sub
int
stc
(bad)
repnz
es
aam
adc
je
arpl
and
xor
es
mov
das
and
dec
in
jmp
inc
retf
in
fisub
mov
rcr
adc
into
jo
jge
push
(bad)
icebp
retf
(bad)
and
stos
das
scas
pop
div
cmps
arpl
mov
jmp
mov
mov
ror
pop
jg
in
or
(bad)
hlt
js
pop
sub
pop
imul
fild
stc
lahf
pop
xchg
jge
cli
test
jbe
daa
test
or
adc
pop
cmc
nop
dec
(bad)
int
(bad)
jnp
sti
pop
add
ins
xchg
nop
popa
pop
hlt
mov
repnz
pop
fistp
fwait
cmp
add
test
lods
push
rcl
jns
aam
sub
stc
jne
xor
add
mov
jno
sbb
sub
adc
jne
scas
loope
sti
jge
ja
mov
imul
inc
add
ret
mov
mov
jl
cmp
stc
ficom
mov
sbb
ud2
cmovge
mov
mov
mov
fdivr
movs
arpl
scas
(bad)
stos
outs
mov
dec
(bad)
test
or
inc
push
movs
xchg
push
lock
cmps
in
ror
retf
push
sbb
xor
jno
in
adc
out
lock
std
and
push
sub
sub
mov
scas
mov
ror
and
cmp
cli
lock
dec
or
pop
jbe
push
js
sub
cmp
mov
dec
mov
sti
aam
xor
lds
shl
cmp
loopne
jo
pop
mov
mov
sbb
mov
je
test
xor
psllq
lock
xchg
scas
jo
sub
out
mov
sub
sbb
out
add
daa
aad
lods
out
cmp
push
adc
mov
push
jp
push
or
bound
cmp
mov
sbb
cwde
test
popf
inc
stc
je
add
push
mov
inc
pusha
dec
jae
das
sbb
mov
pop
push
sbb
nop
adc
sub
jle
aaa
nop
lock
dec
and
xchg
xlat
mov
mov
sti
add
aas
pop
(bad)
mov
movs
dec
rcl
sbb
pop
mov
or
sub
adc
push
lahf
cmp
bound
ins
push
shl
stc
add
sbb
shr
jnp
dec
xor
aas
and
push
bound
sbb
pushf
mov
in
mov
push
fs
inc
iret
(bad)
jo
push
and
xlat
ficom
cmp
cld
xor
pop
pop
mov
ins
lods
les
ret
push
jl
scas
push
icebp
in
push
sbb
xor
and
jl
fild
push
pop
jno
mov
out
movs
mov
xchg
jno
mov
xchg
dec
mov
ret
mov
xor
aaa
cwde
xchg
mov
dec
xor
test
cs
add
push
je
pop
cmps
lock
sbb
ins
add
xchg
stc
sbb
test
inc
test
xor
pop
push
stos
mov
lods
loop
imul
sbb
loope
inc
pop
out
mov
jmp
push
fcom
sub
lds
jle
iret
ds
dec
add
add
xchg
pop
or
arpl
mov
fsubr
cmps
cmp
push
mov
mov
xchg
ret
hlt
cmp
rcl
sti
pop
add
adc
mov
and
push
cmp
mov
sbb
or
mov
xchg
mov
inc
jle
mov
jbe
mov
ins
aaa
push
pop
push
mov
lea
pop
sbb
movs
dec
outs
mov
shl
push
out
fstp
push
jne
ficom
fwait
hlt
push
adc
cmps
fld
dec
push
mov
xchg
adc
scas
bound
arpl
pop
scas
in
lods
adc
mov
xor
jno
movs
enter
jmp
cmp
retf
lods
bound
sbb
xchg
pop
jno
sub
add
loop
sbb
dec
dec
or
dec
dec
popf
xor
jge
cld
imul
push
xlat
mov
rol
adc
popa
stc
xor
loope
test
in
and
cmp
push
shl
jmp
test
jmp
dec
xor
aam
cmp
and
mov
aas
call
mov
jp
cmp
xor
add
nop
mul
jmp
inc
jb
popa
ins
(bad)
aas
sbb
jmp
add
dec
addr16
test
fistp
das
ficom
jno
pop
xchg
pop
mov
add
ins
cmc
jmp
(bad)
ds
and
(bad)
xor
rcl
clc
popa
cmp
xchg
adc
popf
xchg
(bad)
stc
and
sub
fst
xor
rol
cdq
cld
scas
mov
sub
mov
inc
xor
mov
call
call
aam
dec
retf
or
retf
xchg
cmp
sbb
into
jecxz
int3
lock
inc
cmp
sub
repz
sar
jl
fistp
das
jno
cdq
je
xor
sahf
or
test
jne
jmp
call
dec
or
hlt
cmp
and
fldenv
sub
adc
xchg
xchg
push
leave
aam
(bad)
lea
imul
retf
cwde
xchg
pop
repz
cwde
mov
mov
jmp
fldenv
add
mov
xchg
lods
jle
push
and
mov
pop
in
je
and
push
leave
mov
lods
push
inc
fcom
movs
(bad)
add
sbb
aam
ds
scas
mov
fs
clc
jno
sti
mov
scas
add
mov
cmps
dec
pushf
sub
dec
int
(bad)
push
mov
inc
iret
dec
jmp
fild
xor
lock
sbb
sahf
cwde
cld
mov
mov
(bad)
sahf
sub
cli
dec
rcl
movs
mov
addr16
xor
mov
aaa
mov
jp
ds
add
jbe
rol
dec
adc
and
(bad)
dec
test
std
js
mov
lods
push
pop
push
test
fldcw
out
in
test
int3
in
sub
pop
xchg
out
pop
mov
mov
mov
mov
aam
not
icebp
mov
jmp
lock
adc
dec
imul
mov
push
or
sub
sbb
in
std
ins
dec
pop
pop
or
jg
push
mov
push
(bad)
or
test
push
out
aaa
push
adc
mov
push
nop
pop
popa
test
int3
xchg
(bad)
stos
xchg
pop
movs
cld
inc
adc
push
pusha
mov
mov
lock
fcom
out
cmp
rol
cmp
ins
sti
rcl
mov
jl
into
fdivp
and
jge
les
cdq
cmps
push
xor
push
(bad)
push
inc
cmp
inc
adc
lahf
add
pop
dec
loope
shl
sbb
xchg
mov
cld
jecxz
mov
push
dec
mov
add
neg
aam
(bad)
dec
and
sbb
adc
outs
sub
mov
imul
inc
mov
dec
rcr
(bad)
jmp
(bad)
stc
(bad)
cmps
jbe
and
jb
and
adc
adc
xchg
sti
pop
adc
ds
lea
jnp
movs
js
mov
adc
or
mov
xchg
inc
sub
pushf
mov
lahf
icebp
lock
fistp
push
and
sti
cmc
jne
ss
cs
mov
sub
cmp
xchg
jae
not
and
add
jmp
data16
pop
adc
aad
fs
sub
push
fmul
ss
rcr
int3
cmp
cmps
call
leave
icebp
adc
retf
rol
xor
xor
imul
out
(bad)
popf
retf
mov
push
dec
aaa
mov
out
iret
(bad)
and
pop
test
push
cli
fcmovbe
test
jp
pop
(bad)
adc
in
stc
fs
xchg
pop
fist
stos
ret
cmp
popf
dec
xor
mov
sub
jbe
push
cmps
stos
movs
pop
fisttp
sub
fiadd
pop
ins
cs
dec
std
push
dec
lods
inc
cmps
aam
cdq
adc
xor
addr16
and
add
mov
(bad)
jecxz
cmp
mov
push
cmp
inc
dec
and
dec
add
and
sub
or
mov
mov
shl
scas
std
xor
outs
(bad)
jmp
and
cmp
mov
inc
std
adc
sub
jae
jle
inc
icebp
jb
and
in
sahf
pop
pop
dec
inc
mov
aad
retf
xor
add
retf
mov
dec
xor
lods
xor
push
inc
fadd
lds
pop
mov
ds
mov
mov
or
ins
inc
mov
add
mov
das
(bad)
out
dec
jno
mov
push
icebp
cwde
fcomp
in
fsubr
xor
in
pop
and
(bad)
addr16
jo
add
sub
lahf
gs
pushf
mov
sub
lea
and
lds
shr
daa
jb
push
lods
mov
out
shl
test
popf
ins
add
cmp
ins
je
imul
bound
std
inc
int
and
jl
psubd
and
dec
test
lahf
fstp
test
add
xlat
addr16
push
repz
jae
(bad)
retf
sub
pop
and
mov
clc
retf
cvttps2pi
push
add
fdiv
lods
fdivr
je
push
jns
or
ins
add
and
leave
or
std
or
into
pop
in
jle
inc
loopne
dec
xor
dec
jnp
mov
cwde
popf
int3
sbb
xchg
xchg
inc
fisub
jbe
mov
popa
pop
pop
loope
mov
mov
push
mov
in
sbb
or
ss
sub
retf
fidivr
and
popa
xchg
jnp
sbb
mov
mov
jl
int3
outs
int
push
cld
mov
inc
cdq
cmc
pop
in
mov
xchg
dec
pop
(bad)
cs
test
mov
mov
cmp
push
dec
mov
cmp
scas
daa
mov
sbb
sub
mov
push
mov
push
mov
pop
ret
sbb
pushf
jl
push
sbb
jmp
xchg
repz
xchg
cmp
hlt
fsubrp
test
mov
retf
dec
adc
sbb
xlat
cmc
and
xor
ins
jo
cdq
xchg
jle
mov
dec
pop
stos
mov
lahf
fwait
lods
sub
sbb
mov
stos
rcl
cmp
adc
loope
cmp
outs
mov
mov
push
add
mov
mov
jae
aas
hlt
dec
xchg
lods
jp
jne
inc
ja
fisub
js
xchg
popf
outs
imul
sub
mov
outs
mov
jbe
adc
out
add
jg
loopne
les
outs
mov
aaa
arpl
lock
push
mov
inc
cld
pop
add
inc
mov
mov
dec
adc
sti
mov
addr16
test
mov
xchg
dec
mov
int3
ds
jl
xchg
or
loop
xchg
aaa
adc
push
aam
xchg
add
xlat
sti
xlat
arpl
dec
xchg
mov
lahf
mov
inc
mov
xor
xchg
cmps
sar
dec
ins
fwait
jae
inc
ror
pop
inc
hlt
jnp
xchg
jns
fcomp
mov
addr16
jecxz
das
push
xchg
push
std
dec
xor
dec
rcl
mov
add
mov
sub
out
imul
inc
aas
fist
sbb
dec
xchg
or
neg
mov
sar
daa
in
xor
mov
mov
xlat
(bad)
(bad)
stos
enter
xchg
adc
loope
leave
mov
mov
adc
xchg
js
repz
sub
leave
jnp
xlat
add
or
sub
and
pop
xchg
fwait
sbb
or
int
mov
cmp
std
mov
pusha
ins
fmul
inc
fld
rcl
pushf
out
xchg
jp
cmp
push
fnstsw
sub
mov
popa
lds
es
add
cmc
mov
repnz
mov
mov
outs
push
jo
sbb
(bad)
pop
enter
arpl
jo
mov
or
mov
(bad)
push
fild
pop
mov
mov
jbe
adc
cld
sbb
mov
add
push
mov
daa
es
pop
xchg
out
sbb
daa
add
loope
sbb
jno
xchg
ror
out
mov
dec
or
xor
popf
and
jae
pushf
pusha
pop
and
or
(bad)
push
out
or
jno
inc
repz
add
xor
xor
arpl
out
mov
fs
stos
push
loopne
cdq
xor
adc
stc
movs
sbb
push
test
xor
push
leave
xchg
xor
mov
ins
jne
push
pop
or
xchg
ffree
cmps
idiv
xor
movs
and
popf
mov
in
aaa
rcl
imul
push
sub
xor
sbb
je
fldenv
ja
push
dec
ret
lds
out
shl
lea
push
jp
pop
lods
shl
mov
movs
fisub
cs
mov
xchg
cmp
sar
ins
xchg
rol
and
icebp
mov
push
sbb
(bad)
mov
stc
rol
test
push
or
jmp
test
or
int3
pop
in
jns
jp
call
push
add
in
inc
mov
loop
mov
pop
mov
(bad)
scas
push
into
shr
push
xor
jecxz
mov
aas
stos
push
cs
or
xchg
call
inc
cmp
enter
inc
adc
stc
test
fs
stos
push
and
sbb
test
(bad)
push
mov
das
fiadd
lea
xor
jo
dec
(bad)
xor
mov
cld
fsub
sbb
lahf
mov
mov
out
loopne
xor
mov
mov
sbb
push
xchg
(bad)
(bad)
cmp
and
ficomp
jecxz
push
mov
lods
push
jge
fwait
mov
add
pop
pop
mov
aam
test
sbb
daa
xlat
out
xchg
clc
int3
sbb
outs
repnz
xchg
call
(bad)
or
mov
and
out
or
jmp
add
mov
sub
js
push
out
div
lock
adc
push
mov
xor
dec
(bad)
shl
retf
push
cmp
call
xchg
pop
pop
xor
jbe
repnz
xchg
lds
cmp
sub
xchg
aad
cmps
and
fild
xchg
dec
add
cmps
mov
mov
fst
icebp
sbb
es
or
sahf
(bad)
dec
mov
push
mov
mov
adc
daa
jl
or
pop
ins
(bad)
and
mov
repnz
(bad)
sub
jnp
js
icebp
xchg
add
dec
add
out
dec
cmp
add
cwde
push
inc
jb
jo
and
(bad)
iret
xchg
jbe
ret
inc
sti
cmp
mov
movs
outs
(bad)
cmp
out
aad
add
rcr
push
inc
fwait
jge
adc
cld
ret
movs
xchg
aam
(bad)
add
push
jmp
cs
stc
in
inc
sub
xchg
je
pop
adc
movs
out
out
and
xchg
aam
repnz
adc
push
mov
push
inc
dec
ret
dec
enter
nop
sti
jecxz
push
nop
(bad)
icebp
pop
rcl
outs
repnz
cmp
push
dec
push
push
imul
mov
sbb
bound
pop
(bad)
mov
push
inc
mov
and
es
arpl
mov
or
jb
sbb
test
repnz
sub
xchg
sbb
jae
gs
adc
inc
xor
mov
daa
rcr
outs
movs
in
sbb
clc
repnz
scas
and
ret
pop
pop
mov
add
mov
lahf
popa
cmp
js
(bad)
iret
adc
adc
leave
fwait
pop
ret
ficomp
and
call
dec
jl
sub
mov
(bad)
mul
add
pop
sub
add
add
sar
xor
adc
lahf
aam
out
rcr
nop
mov
ds
adc
or
das
fistp
dec
pop
stos
or
or
dec
mov
jnp
sbb
jge
bnd
fst
push
imul
inc
sbb
mov
dec
ds
jno
loop
xchg
or
xchg
test
aad
sub
lea
sub
sti
popa
and
mov
mov
cmp
cmc
mov
cdq
cli
lahf
push
pop
xor
stos
test
clc
inc
or
xlat
inc
push
dec
stos
in
xchg
xlat
js
repnz
mov
(bad)
mov
stos
cmp
mov
loop
jmp
push
loop
sbb
push
adc
xor
or
sbb
loope
aam
adc
push
cmp
ror
repnz
loope
dec
xchg
inc
and
xor
cmp
retf
aas
xchg
xor
xor
add
cmps
mov
mov
retf
les
push
jmp
mov
aad
pop
sub
and
imul
sub
mov
icebp
jp
or
sar
leave
pop
sbb
sub
pop
adc
sbb
rol
test
mov
sbb
dec
mov
mov
cmp
ins
pop
or
arpl
leave
add
xchg
imul
push
loope
and
fnstsw
xchg
bound
jecxz
call
frstor
cmp
inc
and
mov
stos
pop
and
(bad)
shr
mov
fwait
jle
mov
push
loop
or
dec
sahf
push
sub
and
inc
clc
js
daa
push
dec
into
mov
cs
lahf
loopne
adc
dec
ss
pop
call
sub
pop
xchg
jecxz
dec
ficom
inc
jecxz
sbb
jo
faddp
mov
cli
test
and
cmp
cmp
jle
sbb
jno
in
or
cs
sbb
sbb
mov
and
int
jl
jne
stc
mov
out
les
jo
add
cmp
call
aad
faddp
jo
inc
mov
clc
ss
push
sub
push
cs
mov
sub
and
or
shr
sub
jp
stc
lock
mov
popa
or
mov
addr16
int3
leave
iret
mov
xchg
popa
mov
mov
xchg
lahf
retf
aad
(bad)
in
dec
cmp
and
sub
sub
xor
stos
jg
sbb
pop
and
pushf
in
mov
jg
rol
xor
cwde
and
mov
pop
pop
cli
xor
cmp
repz
xchg
mov
test
lock
les
js
(bad)
stc
stos
fst
std
retf
xor
fst
and
xchg
xchg
sub
ins
call
movs
in
cli
add
jle
aam
(bad)
mov
mov
add
mov
jge
cmp
hlt
sbb
loope
test
sbb
fisttp
pop
(bad)
push
and
ja
icebp
loop
ds
push
(bad)
outs
xor
or
pop
jne
xor
(bad)
scas
retf
adc
pop
fs
sahf
xor
in
and
jns
add
sbb
pop
and
imul
addr16
retf
out
std
in
jmp
stos
mov
fmul
dec
lea
fldcw
(bad)
and
xlat
mov
mov
rcl
push
fcom
inc
and
(bad)
sub
daa
inc
or
inc
adc
ret
push
test
inc
sub
int
retf
jecxz
shufps
dec
push
jbe
test
mov
rcl
fdiv
and
aaa
ins
je
xor
push
lock
out
push
mov
mov
in
scas
jo
test
test
sub
je
fstp
and
sbb
dec
add
into
arpl
adc
mov
push
dec
cmps
mov
and
cli
jmp
pop
ss
mov
cmp
loope
push
ja
fadd
daa
push
pop
cmp
pop
pop
xchg
push
fs
xchg
std
cmp
retf
out
pop
xor
call
les
jmp
lock
in
out
add
push
stc
pop
mov
mov
pop
jo
ins
or
sbb
inc
data16
in
mov
jne
into
icebp
sbb
loopne
leave
(bad)
xor
jg
fidiv
push
dec
into
stc
add
mov
cdq
pop
div
repnz
js
push
movs
int3
scas
les
or
adc
or
(bad)
xor
dec
pop
cmp
xchg
sbb
sub
fcmove
into
push
pop
pop
daa
xor
test
inc
icebp
jb
pop
pop
test
xchg
add
repz
mov
xor
mov
sbb
call
fs
push
xor
cmp
addr16
loopne
(bad)
test
stos
and
mov
aas
mov
or
sbb
aam
call
add
mov
bound
jnp
pop
mov
cmp
sar
(bad)
cmps
add
sahf
add
lods
shl
jae
mov
xchg
jge
in
mov
sar
mov
mov
repnz
mov
or
arpl
dec
dec
jecxz
xor
out
jo
hlt
adc
dec
dec
cmp
inc
mov
mov
rol
inc
push
shl
dec
sbb
loopne
aam
fldenv
pop
pop
mov
sbb
inc
add
movs
aas
pushf
and
sub
stos
jb
fild
mov
out
mov
dec
jnp
sbb
(bad)
rol
es
popf
repz
xor
je
dec
sbb
gs
jmp
mov
mov
mov
outs
and
outs
inc
mov
mov
lods
rep
(bad)
dec
push
mov
dec
mov
gs
mov
xor
lods
push
pop
jne
add
fldcw
cmp
gs
cmp
pop
popa
int3
pop
call
cld
je
sub
jo
repnz
add
std
cmps
jb
sub
mov
xor
push
cmps
xor
xor
aaa
ds
mov
(bad)
xlat
test
or
loop
inc
push
sbb
ficom
cmps
fdivr
mov
sub
sub
fs
xor
pop
iret
scas
xor
add
dec
int
addr16
jmp
lahf
rcl
int3
xor
jnp
xor
mov
sbb
pusha
ror
cmp
stos
cmps
or
jno
xchg
add
in
and
xor
adc
mov
in
out
inc
les
cmp
sbb
mov
and
fs
ror
add
cmp
jae
xchg
pop
sub
mov
cmps
sub
cmp
lock
sub
jns
test
sti
pop
inc
fcom
hlt
jnp
(bad)
jge
repnz
retf
or
jnp
btr
cmp
jecxz
fsubr
aaa
pop
adc
ins
fstp
xchg
popa
cmp
sub
mov
in
add
shl
mov
cmp
push
xchg
cli
loop
xchg
mov
cdq
adc
and
enter
xchg
xchg
fs
jns
push
ds
push
pop
cmp
rcl
mov
pop
pop
adc
xchg
adc
jecxz
inc
xlat
inc
int
retf
dec
daa
and
aam
scas
pop
xor
ins
mov
adc
sbb
popf
lds
imul
pop
pusha
out
out
ret
les
or
popa
scas
cwde
and
into
retf
adc
pushf
or
xchg
mov
push
test
cmp
rcr
or
inc
icebp
ins
mov
or
jmp
mov
lds
sub
mov
sbb
mul
test
cdq
cmp
outs
jno
lds
mov
sub
js
addr16
into
shl
sbb
inc
jnp
mov
lea
outs
mov
stos
test
adc
mov
pusha
pushf
xchg
ins
mov
aas
adc
mov
inc
xor
cmp
ret
out
xchg
and
push
scas
mov
mov
scas
xor
mov
stos
fcmovbe
test
xchg
fld
js
mov
inc
jo
call
and
addr16
fisttp
jmp
repnz
sahf
mov
sar
pop
and
sbb
mov
cmps
add
shl
jno
or
add
xor
mov
push
mov
push
cmp
push
imul
mov
add
mov
mov
jg
ins
int3
xor
out
cmp
xchg
mov
dec
pop
mov
add
imul
mov
jp
aad
add
setno
pop
xor
rol
mov
mov
mov
lahf
jb
ret
add
inc
sbb
rol
dec
dec
(bad)
imul
fidivr
stc
sub
add
push
(bad)
or
sbb
fcom
loop
mov
add
pop
mov
pop
dec
cmp
jae
pop
pusha
xlat
test
popa
cwde
cld
inc
jg
test
inc
retf
jnp
sub
or
mov
inc
scas
and
mov
mov
test
call
add
mov
aam
cmps
sbb
cmp
in
cmp
push
mov
imul
pop
mov
cmp
vaddss
inc
mov
fsubr
sub
sbb
mov
outs
outs
inc
sub
xchg
cmc
movs
xchg
out
hlt
pop
ja
loope
push
iret
sub
sbb
out
mov
repnz
pusha
sbb
outs
cmp
and
cs
adc
or
pushf
and
pop
jge
mov
daa
pop
mov
inc
scas
sti
mov
stc
mov
dec
sbb
mov
xor
cmp
iret
mov
xchg
in
dec
jl
iret
xchg
fsubr
pop
mov
stos
pusha
lahf
in
retf
rcl
cmps
bound
sbb
fsubr
push
pop
rcr
add
or
push
or
das
sbb
push
repnz
out
fimul
sahf
sbb
rcr
xchg
(bad)
add
or
sub
test
int
cli
or
add
outs
call
imul
xor
stos
push
adc
(bad)
jo
xor
pop
sbb
ins
adc
pushf
jae
jae
call
outs
pop
mov
dec
dec
mov
int3
push
adc
mov
pushf
les
stc
or
mov
jmp
dec
xlat
cmps
pop
xor
pop
sti
jne
cmp
add
dec
cmp
jo
or
ret
rol
stos
dec
cmps
outs
mov
jecxz
sbb
enter
push
sbb
push
mov
stc
pop
dec
scas
adc
cmp
mov
inc
xor
push
ret
aam
imul
xor
sbb
mov
add
icebp
aas
add
jns
sub
repnz
add
mov
arpl
and
adc
jl
fidivr
jns
jns
outs
clc
mov
pop
mov
jne
ret
fcomip
adc
push
jne
out
out
and
btc
push
mov
ret
into
xchg
or
mov
pop
add
aas
stos
add
push
mov
inc
aaa
cmp
scas
inc
or
loope
pop
outs
hlt
jbe
mov
loop
hlt
xchg
cmp
nop
int3
call
jbe
loopne
loop
cmps
aad
retf
mov
jns
fnstenv
inc
pop
in
jbe
sub
cwde
jno
clc
jbe
enter
in
(bad)
sbb
mov
mov
cdq
xor
mov
sbb
add
outs
mov
sub
mov
cdq
add
addr16
fnstenv
push
std
xor
hlt
add
shl
mov
sar
xor
dec
es
in
push
rcl
mov
push
dec
mov
test
mov
in
inc
jp
cld
packuswb
jl
and
test
shl
ror
mov
sti
retf
out
or
xchg
add
cmps
inc
icebp
fisub
sub
mov
into
sbb
dec
push
jne
ins
clc
sbb
fwait
out
in
leave
ins
jg
sbb
mov
push
mov
lahf
ins
adc
or
mov
int3
xchg
neg
mov
mov
in
jns
inc
in
mov
daa
mov
jmp
pop
pushf
imul
dec
es
leave
daa
sub
cli
adc
push
add
shl
fisubr
stos
test
push
retf
ins
fcmovu
jmp
imul
adc
sbb
inc
and
dec
mov
leave
sub
jb
push
add
or
cmp
call
push
fdiv
repnz
fidiv
pop
hlt
and
aad
mov
adc
loopne
hlt
out
xor
popf
jmp
mov
pop
cs
add
add
xchg
ss
push
(bad)
pop
call
sub
xchg
cmp
scas
cmps
movs
ds
jge
dec
pop
sbb
xor
cmp
add
aad
outs
pop
js
int
adc
scas
in
push
or
add
iret
push
sub
clc
xchg
nop
and
pop
sbb
push
fs
jmp
ret
xchg
test
mov
fmul
sbb
dec
pop
ss
(bad)
call
pusha
sub
xor
sub
imul
fmul
mov
adc
and
mov
cmps
dec
aas
rcl
js
jmp
adc
pop
retf
add
aad
xor
xchg
push
lock
rcr
sub
out
cmp
(bad)
movs
jg
push
test
push
jnp
lods
sbb
outs
(bad)
push
ror
js
add
ja
inc
lea
out
sbb
cld
mov
stos
and
stc
sti
es
idiv
xchg
xor
xor
jp
(bad)
mov
movs
ins
ja
shl
mov
jns
mov
xor
fisub
sub
sbb
inc
cmps
or
fnstcw
pop
xor
data16
repz
dec
call
or
aas
push
dec
outs
xor
cdq
mov
out
xchg
jmp
dec
in
repz
xchg
ins
jge
inc
int3
adc
xchg
ret
mov
inc
nop
adc
mov
sbb
add
int3
fstp
mov
mov
cmc
ins
out
pushf
call
not
(bad)
fsub
pusha
imul
ds
or
xor
add
sbb
pop
ins
cmps
aaa
gs
adc
adc
fimul
inc
aam
jbe
lds
dec
push
and
es
gs
mov
pop
ret
inc
lods
fisub
mov
mov
xor
mov
inc
lahf
xchg
push
jno
add
retf
mov
push
and
std
js
jno
and
inc
and
(bad)
(bad)
mov
xor
mov
gs
lock
pop
xchg
cmc
rcl
lock
push
push
ror
pop
add
pop
mov
les
xchg
cwde
adc
cwde
in
add
test
in
mov
in
shl
lea
mov
or
xor
cdq
mov
(bad)
push
clc
leave
aaa
dec
pushf
out
inc
jg
jbe
mov
mov
cmp
or
icebp
xchg
stos
sub
in
rol
cmc
xchg
pop
mov
inc
repz
dec
inc
(bad)
add
mov
xchg
jecxz
sbb
cmp
push
mov
iret
pop
int
adc
add
cmp
pop
ret
dec
xchg
inc
mov
out
sti
and
lahf
pusha
cs
sbb
movs
xchg
jb
add
mov
mov
jg
sub
dec
cmp
outs
push
gs
inc
jecxz
mov
mov
loopne
cmc
fs
push
int
xchg
xor
aaa
xchg
or
mov
clc
scas
cmp
pop
ficom
jno
xchg
outs
and
or
pop
and
push
sahf
push
shr
shr
mov
(bad)
(bad)
xchg
xlat
scas
mov
dec
xchg
mov
sub
cdq
pop
outs
and
xor
sbb
outs
mov
jnp
fwait
pop
pop
aas
xchg
stos
dec
mov
imul
mov
mov
imul
mov
rol
ja
or
push
les
inc
xor
xchg
dec
jo
pop
push
cs
sbb
jge
push
jae
mov
hlt
neg
jbe
mov
leave
test
jne
dec
add
dec
xor
popa
mov
test
out
cmps
repz
in
fimul
ds
not
add
dec
loope
iret
mov
js
xchg
fcomp
dec
xor
movs
or
shr
mov
and
add
call
push
jmp
dec
loop
and
out
mov
stc
sar
bound
jp
pop
jl
cmp
mov
test
sub
inc
ficom
lods
pop
xchg
pop
pop
xchg
fimul
shr
inc
sub
or
sbb
push
es
jno
cmp
push
mov
movs
mov
test
jmp
aad
loope
rcr
push
test
shl
das
gs
sbb
ins
pop
fidiv
sbb
hlt
dec
test
sbb
adc
pop
mov
sub
repnz
lods
or
mov
cmovle
fist
sbb
adc
fs
jle
test
mov
movd
aad
mov
lods
mov
mov
cli
bound
push
mov
fcomip
jnp
xor
ret
push
sub
les
mov
jg
cli
mov
bound
shr
xor
adc
and
sub
jno
mov
push
inc
and
cmpxchg
aad
je
retf
cmp
(bad)
or
stc
jae
cmp
adc
cmp
xor
test
inc
adc
dec
pushf
add
xlat
dec
mov
sbb
(bad)
ins
xor
pop
jmp
pop
daa
imul
retf
push
xchg
lds
xor
outs
mov
lods
fsubr
sbb
cld
push
push
shr
dec
mov
mov
repnz
test
ret
mov
mov
daa
stos
popa
and
in
inc
sub
dec
mov
in
mov
loope
dec
inc
sbb
dec
or
fnstenv
mov
je
test
xor
adc
cmp
or
daa
and
mov
xchg
jp
jno
ds
enter
sahf
pop
push
loopne
pushf
or
movs
bound
test
fnstcw
js
aad
mov
push
push
inc
sbb
sub
scas
cmp
imul
test
clc
(bad)
call
xor
sub
cdq
or
cmc
mov
push
cwde
sub
data16
test
fdivr
mov
pop
fwait
and
or
stc
pop
push
add
push
xchg
sub
xor
and
sbb
cmp
sti
fs
inc
mov
je
in
(bad)
jecxz
sbb
mov
and
ins
mov
in
mov
in
popa
sti
lods
inc
mov
add
push
sbb
xor
cmps
nop
mov
xchg
and
add
mov
xlat
add
fdiv
nop
out
mov
jo
pop
(bad)
mov
add
test
dec
xchg
cmp
cmps
or
bound
cmp
dec
push
cmc
dec
dec
sub
mov
test
retf
cmp
shl
pop
jp
sbb
jbe
iret
push
cmps
add
movs
dec
and
scas
sbb
mov
jns
mov
out
sti
cli
cmp
mov
mov
and
xor
xchg
or
jg
dec
test
pop
lahf
mov
icebp
mov
mov
aas
pop
mov
mov
pop
movs
mov
pusha
mov
mov
adc
mov
outs
jmp
jo
or
fimul
aaa
xchg
retf
and
mov
xor
pop
cwde
das
xchg
jg
(bad)
in
gs
loop
test
mov
and
jbe
mov
jno
or
shl
arpl
fiadd
repnz
sti
cmp
rcl
mov
fld
cmp
popf
loopne
leave
mov
vpaddb
mov
jno
mov
pusha
jg
sub
iret
xchg
fidiv
fsubr
shl
push
stos
cli
jno
push
pop
push
jb
push
rol
jnp
adc
sti
(bad)
fldlg2
push
inc
mov
test
mov
std
cmps
pop
push
push
pusha
out
cmps
mov
add
xchg
(bad)
push
pop
aad
jg
jns
pop
pop
mov
je
sub
fmul
cli
retf
movs
push
ret
adc
sbb
pushf
jmp
inc
xchg
sub
push
and
retf
cmps
(bad)
iret
stc
mov
pushf
dec
shr
lds
sub
int3
push
dec
call
cli
xchg
or
push
mov
not
loope
jae
dec
rol
mov
lods
jmp
fisttp
sbb
cmp
inc
sub
jp
fcomp
loope
xchg
or
pop
pop
fmul
add
sbb
xchg
jle
test
xor
xchg
push
xchg
sbb
inc
ja
movs
xchg
jo
sbb
dec
sub
adc
jge
push
iret
adc
jg
jbe
test
mov
mov
pop
jno
push
or
ret
mov
movs
(bad)
sub
cmps
adc
adc
cwde
int
gs
xchg
das
gs
pop
mov
movs
test
fild
imul
popa
mov
add
xchg
out
icebp
mov
(bad)
imul
add
retf
bound
pop
jb
lds
pushf
pushf
push
push
pop
(bad)
popa
mov
out
loope
mov
sub
push
jmp
xchg
aam
jl
(bad)
cmp
cs
inc
sti
and
cmp
jnp
and
nop
loop
repnz
inc
(bad)
sbb
test
dec
adc
test
and
es
popf
mov
outs
dec
mov
push
cmps
xchg
jmp
ss
xlat
leave
popa
xchg
inc
inc
and
sub
int3
adc
cld
cmp
mov
mov
sub
jle
pop
lea
movups
xor
adc
sbb
sbb
cmp
lahf
call
mov
test
movs
push
cmp
sbb
retf
push
jecxz
and
pop
mov
jne
sub
and
jmp
call
dec
add
popa
les
mov
aam
fdiv
pop
sbb
fst
out
ins
out
sbb
sbb
in
xchg
sub
aas
outs
aad
cmp
hlt
add
adc
pop
aam
push
sub
jle
aad
pop
push
jge
ins
inc
out
mov
(bad)
push
sub
xor
or
cmp
ret
pop
xor
mov
lods
fidiv
(bad)
scas
sub
add
mov
stos
cmp
icebp
adc
scas
jg
xchg
js
push
pop
inc
mov
std
stos
sbb
cmps
jecxz
repnz
enter
push
xchg
and
shr
inc
gs
in
or
push
adc
xor
mov
cmp
sbb
iret
pop
retf
jge
sti
push
mov
xor
out
test
adc
pop
xchg
and
and
or
xor
lods
add
mov
call
mov
push
lock
scas
pop
xchg
arpl
pop
sbb
adc
cli
inc
in
jnp
test
pusha
retf
mov
push
inc
push
dec
js
idiv
mov
and
mov
pop
shl
pop
or
sub
adc
imul
dec
in
rcl
int
cmp
and
es
dec
cmp
(bad)
les
lods
cwde
adc
adc
push
addr16
inc
int3
popa
sbb
jmp
fcom
pop
into
fistp
xchg
push
xchg
lds
dec
sub
xlat
lods
neg
mov
and
inc
mov
pop
es
(bad)
xor
adc
pusha
repnz
xchg
add
adc
pop
ss
inc
xchg
dec
and
add
and
(bad)
xor
dec
(bad)
jmp
sbb
in
inc
repz
push
test
adc
xor
push
pop
push
loope
arpl
mov
cli
adc
jbe
sub
mov
or
(bad)
push
adc
pusha
and
or
scas
sbb
xchg
cmp
dec
addr16
mov
fwait
daa
push
sahf
(bad)
jns
adc
push
jne
shr
test
dec
inc
mov
mov
(bad)
jl
dec
and
cmp
dec
and
jp
jge
jae
aaa
or
push
fdivr
(bad)
jbe
test
pop
jmp
out
pop
mov
leave
jp
out
aam
aad
ss
adc
jl
data16
aam
cwde
aaa
sahf
pop
gs
inc
leave
or
mov
adc
gs
or
mov
adc
in
sahf
mov
sbb
leave
pop
or
xlat
or
dec
test
push
call
sti
shr
aas
fild
je
sti
push
pop
movs
push
test
sub
aas
add
enter
aas
lea
sub
cmp
xchg
mov
push
enter
or
aam
pop
lods
(bad)
in
(bad)
fild
dec
cmps
add
xchg
add
gs
gs
mov
mov
or
inc
test
data16
cmp
stos
test
cwde
popa
inc
nop
jmp
dec
enter
pop
push
fild
sub
cdq
dec
pusha
or
ss
test
aas
test
and
ja
mov
daa
mov
call
sub
fadd
cmp
mov
mov
rcr
pop
shl
pop
rcr
mov
push
cmp
push
sub
xor
adc
imul
and
mov
movs
sbb
jmp
sar
or
dec
mov
loope
int
dec
daa
fidivr
retf
cli
adc
xor
arpl
stc
js
popf
mov
daa
jle
mov
sbb
jp
mov
or
jns
inc
push
mov
sub
lods
ret
inc
pushf
mov
retf
imul
push
or
(bad)
xor
out
fild
movs
cmp
repnz
xor
fwait
inc
out
shufps
mov
test
sub
nop
xlat
inc
into
test
pop
mov
pop
repz
pusha
fisttp
addr16
add
xor
idiv
and
cmp
cmp
adc
jge
adc
cmc
push
mov
lds
or
arpl
jae
jmp
fld
add
retf
push
add
mov
aad
mov
inc
test
inc
cmp
aad
je
inc
fidivr
cmps
mov
mov
cmp
fst
fcom
cmp
xchg
nop
jmp
or
jo
dec
sbb
push
mov
addr16
mov
mov
sahf
push
aad
js
scas
arpl
pop
jg
test
and
pop
pop
in
imul
mov
(bad)
repnz
push
add
adc
int3
and
cmc
sub
mov
adc
pop
mov
daa
neg
loope
inc
lds
cmc
sub
or
fidiv
in
pop
adc
dec
jp
push
imul
and
push
push
call
push
add
(bad)
out
sbb
inc
xchg
imul
retf
mov
aad
sahf
mov
aam
enter
sbb
das
mov
pop
xchg
push
movs
retf
fwait
push
cmp
(bad)
sub
inc
into
stos
jmp
lods
mov
jmp
je
rol
lea
lea
addr16
and
mov
jbe
lods
mov
(bad)
div
adc
xor
pop
aas
adc
int3
nop
push
dec
out
fistp
ret
and
mov
fisub
pop
je
sbb
xchg
loop
add
mov
cdq
or
pushf
jbe
push
mov
cmp
push
or
frstor
jmp
add
xchg
aam
pop
enter
jae
pop
xchg
or
cdq
add
xor
pusha
jmp
cs
sub
fmul
xchg
jae
mov
xchg
or
fild
or
aas
fidiv
sbb
ja
bound
and
daa
sub
cmps
jno
fs
test
fimul
dec
pop
test
ret
jp
push
sub
test
pop
sbb
fcomip
(bad)
mov
pop
mov
push
mov
imul
or
adc
xchg
or
fmul
push
sub
aas
dec
cmc
cwde
aaa
hlt
or
ss
mov
loop
push
lahf
pop
rol
js
jbe
cld
push
cld
popa
ja
pusha
add
jmp
xchg
in
push
xor
inc
mov
shl
movs
cs
cmp
out
rol
cmp
(bad)
mov
sub
sub
(bad)
shl
pop
mov
cli
sub
nop
(bad)
shr
pop
cmps
ss
dec
cmps
dec
cmps
int3
add
fiadd
or
dec
jae
test
mov
xchg
imul
push
sub
mov
(bad)
sahf
bound
inc
xor
mov
(bad)
dec
lea
or
lea
lahf
adc
rcl
or
in
rcl
push
and
sub
dec
inc
push
stos
adc
retf
jne
xor
clc
fadd
inc
mov
dec
mov
cmps
pushf
push
sub
jne
xchg
add
xor
adc
mov
adc
dec
and
pop
fsubr
inc
stc
sbb
dec
cmc
test
push
inc
and
leave
into
scas
out
ret
pop
add
adc
jno
fstp
fld
mov
inc
(bad)
aam
jno
sysenter
rcl
lock
mov
push
cmp
xor
(bad)
cmp
popf
out
jg
mov
or
outs
sub
adc
repnz
pusha
ds
xchg
arpl
test
mov
aaa
cmps
xchg
scas
cs
push
push
mov
shl
inc
repnz
fist
faddp
cwde
mov
sbb
outs
mul
test
retf
mov
inc
push
and
daa
fsub
mov
and
sbb
jo
mov
sbb
clc
xchg
movs
sub
jnp
mov
or
dec
out
sbb
xor
popf
sbb
(bad)
fimul
sub
mov
push
push
cs
out
cmp
call
test
jo
cmp
retf
and
sub
push
jne
mov
rol
retf
sub
dec
lds
repz
push
movs
mov
fstp
xor
push
icebp
push
mov
mov
xchg
pop
(bad)
mov
cmps
pop
add
stc
in
xchg
bound
ficom
jl
and
inc
mov
rcl
addr16
inc
movs
pusha
pusha
bswap
mov
add
sbb
push
xor
push
retf
leave
movs
add
sti
repnz
and
push
inc
nop
cmp
sbb
ret
mov
nop
gs
(bad)
in
jno
retf
test
test
jb
rcr
es
cmps
in
jb
js
mov
aaa
xchg
or
lods
cmp
aaa
retf
loop
dec
and
or
nop
xor
in
push
mov
or
in
pusha
icebp
cdq
adc
lds
pop
mov
bt
out
aaa
xor
sub
jecxz
jg
xor
mov
ret
jg
daa
mov
mov
pop
jno
sub
pop
je
imul
xor
pop
icebp
jae
in
and
push
out
mov
call
(bad)
out
xor
arpl
loopne
stc
add
pop
pop
cmc
data16
(bad)
cmc
fcom
cmps
repz
call
mov
add
dec
jns
jo
arpl
cmp
jo
div
xor
mov
or
push
dec
sar
ds
not
jnp
mov
(bad)
(bad)
loope
inc
push
sbb
lock
cmp
aad
cmp
pop
(bad)
shr
movs
test
rcl
fimul
in
call
xor
les
fcomp
int
cmp
lods
add
inc
pop
shl
hlt
cmps
call
sbb
xchg
sub
sub
int3
cmp
loopne
dec
out
outs
push
cli
sar
dec
mov
mov
jge
add
pop
mov
inc
and
jae
ins
jecxz
pop
imul
or
inc
cmp
adc
cdq
sub
sbb
mov
ja
add
paddw
aad
jno
xlat
adc
pop
mov
out
in
xchg
arpl
mov
adc
popf
cmp
fs
mov
dec
push
popa
jle
sub
and
test
add
cs
movs
dec
pusha
push
jl
adc
pop
nop
pop
jecxz
lds
cmp
sar
popa
pop
jnp
add
push
es
pushf
int
cs
pop
push
clc
stos
fmul
mov
ret
mul
jecxz
test
xor
pop
mov
mov
ins
gs
int3
sbb
imul
jmp
and
arpl
fild
jecxz
xor
repz
pop
push
fisubr
pop
mov
pop
ror
mov
wrmsr
dec
or
lds
fdivp
loop
xlat
aas
dec
adc
dec
ins
push
repnz
mov
jle
xor
mov
sub
jns
dec
pop
fld
mov
rol
inc
adc
add
push
jge
call
into
pop
jns
cmps
in
mov
stc
cmp
test
push
(bad)
or
retf
mov
(bad)
(bad)
sub
push
jmp
cmp
cmp
xchg
push
in
out
and
les
test
push
scas
mov
sbb
sahf
and
retf
int
or
push
imul
pop
xchg
and
sub
popf
and
or
fs
xchg
jb
outs
ss
sub
jne
push
fsub
pop
js
mov
xchg
rcl
inc
xor
jge
add
cdq
(bad)
xchg
call
jmp
js
cmps
xchg
outs
retf
push
adc
int
push
or
push
es
xchg
mov
pop
push
iret
pavgw
jge
cmps
mov
push
lods
rol
fmul
sub
pop
push
xor
pop
sub
fdiv
fbstp
jnp
jmp
test
pop
mov
out
or
daa
rol
ins
dec
lds
dec
mov
push
fsub
push
cmps
mov
lock
jo
mov
imul
jno
int
inc
cmps
cmp
sub
lahf
pop
in
xchg
rcr
sahf
scas
pop
jmp
mov
push
add
and
xchg
iret
jne
arpl
daa
sub
sbb
dec
cvttps2pi
ins
push
cmp
adc
(bad)
fs
in
jmp
out
mov
fldcw
mov
imul
sbb
repnz
call
add
mov
into
xchg
aaa
pop
inc
mov
mov
enter
ss
pop
jmp
mov
add
lahf
stos
mov
sbb
daa
test
inc
repz
sahf
xchg
fisub
jo
dec
push
push
imul
(bad)
jl
pop
cmp
fdiv
into
mov
ror
pop
or
push
add
inc
mov
outs
push
push
ds
loope
loopne
pushf
adc
pop
das
mov
inc
dec
stos
xchg
in
mov
fldcw
adc
add
dec
shl
jmp
dec
push
jno
icebp
leave
xchg
xchg
sti
mov
xchg
push
imul
or
ja
adc
pop
push
les
cmp
imul
arpl
push
sbb
call
or
xchg
cmp
sahf
iret
add
adc
fcomi
and
gs
aam
pop
lods
enter
out
daa
pop
in
xor
inc
xchg
xchg
ds
adc
adc
dec
cmps
or
stc
inc
mov
das
jno
test
xor
and
ja
cmp
dec
das
adc
fdivp
inc
push
push
push
jge
mov
neg
ja
rcl
jnp
rol
ss
jbe
dec
push
js
dec
jnp
adc
pop
mov
jp
je
mov
mov
xchg
cmp
aam
mov
movs
(bad)
scas
sbb
mov
popa
xchg
xchg
(bad)
movlps
dec
jg
call
jecxz
or
sbb
xchg
gs
mov
and
pop
add
nop
mov
dec
int
jne
dec
jne
dec
sub
in
cmc
es
sbb
pop
adc
pop
out
pusha
or
lds
mov
outs
mov
dec
aas
mov
stc
sub
lea
jg
fidivr
fnsave
sbb
fcmovnbe
std
jl
out
xchg
pop
pop
sahf
mov
mov
and
jns
leave
shr
stos
mov
ss
popa
add
sub
sar
mov
adc
test
mov
and
(bad)
lds
lea
jp
aaa
xor
add
xchg
scas
stc
add
pop
icebp
dec
jg
jo
loop
inc
outs
outs
xchg
push
inc
adc
mov
mov
into
push
mov
cs
fbstp
xor
adc
mov
je
test
out
jge
ror
pop
mov
pop
movs
sub
or
out
mov
xor
pop
jns
mov
xchg
dec
fild
stos
lods
aad
mov
fnstenv
pop
mov
or
mov
jecxz
xchg
cli
xchg
sbb
sbb
rcr
lods
mov
in
mov
xchg
pushf
xchg
sbb
mov
add
pop
inc
inc
jo
add
ins
stos
xor
or
sbb
add
xchg
xor
sub
dec
out
das
std
jmp
(bad)
loop
clc
add
adc
clc
push
pop
xor
aad
ror
rol
sub
and
add
jmp
pop
dec
bound
dec
push
and
(bad)
push
lahf
lock
add
mov
adc
jmp
pop
fcom
jno
shr
cmps
jae
retf
int
xchg
arpl
int3
xor
add
sbb
adc
push
popf
mov
pop
sbb
jmp
leave
out
mov
and
and
and
sbb
sub
sbb
sbb
xor
dec
fdivr
es
jle
mov
ret
cmps
scas
add
imul
mov
in
jb
es
test
jle
sbb
sbb
mov
icebp
rcl
popa
lahf
mov
dec
(bad)
fmul
cmp
adc
out
icebp
add
mov
cmp
fstp
clc
push
add
add
add
inc
dec
pusha
pop
cs
mov
or
dec
push
push
jbe
lock
sub
add
sbb
push
cmps
cmp
xor
(bad)
fsubr
mov
fisttp
adc
cli
inc
or
or
movs
xor
push
loop
mov
loop
xchg
loopne
sub
sbb
xor
dec
mov
pusha
xchg
xchg
or
mov
cmp
gs
pusha
inc
add
rol
xchg
push
daa
push
or
inc
mov
ja
mov
inc
mov
outs
and
jp
(bad)
rcl
in
cmp
retf
popf
dec
inc
in
in
jbe
push
jl
push
xchg
hlt
inc
sub
cmp
or
sub
sahf
mov
in
outs
dec
jbe
push
lahf
jmp
popa
loope
push
add
dec
cmp
pop
jg
mov
xchg
sub
cmp
jge
hlt
jns
and
pop
loop
and
dec
inc
jp
scas
inc
pushf
aad
inc
adc
test
(bad)
and
clc
imul
stos
aaa
pop
int3
repz
pop
and
ins
test
jb
xchg
test
test
jmp
add
add
shr
sbb
jno
(bad)
shl
cld
in
and
add
int3
jns
ret
cmp
cmp
jecxz
js
cmp
jl
movs
jmp
pop
push
xchg
cwde
sub
fs
ss
dec
out
push
sub
xor
enter
retf
(bad)
retf
jnp
mov
mov
das
or
dec
pop
in
xor
mov
xchg
std
dec
aas
xchg
lea
cmp
retf
fst
sbb
out
dec
mov
mov
dec
sahf
pop
addr16
bound
push
es
cmp
xchg
mov
shl
popa
push
mov
xlat
test
inc
push
sub
mov
(bad)
mov
scas
mov
push
popa
sbb
sbb
jge
push
push
data16
(bad)
sub
cmps
loope
stc
adc
in
mov
sbb
out
sub
or
mov
mov
push
rol
(bad)
leave
mov
mov
rcr
mov
jb
adc
int
in
dec
mov
mov
jne
test
call
cmp
sub
mov
int3
(bad)
inc
(bad)
mov
xchg
sub
daa
and
js
call
iret
test
in
push
aaa
aam
add
mov
fs
add
ret
pop
bound
fmul
mov
js
lahf
das
push
push
push
mov
xchg
fcom
fcomp
dec
inc
inc
xchg
clc
sub
mov
pop
adc
jg
rcr
mov
in
push
mov
pop
mov
and
fild
std
pop
mov
push
dec
mov
call
scas
adc
stos
rcl
xor
add
push
pop
or
icebp
sub
sub
push
mov
push
frstor
ss
sbb
call
add
push
aam
retf
xor
cmp
add
popa
dec
rcl
push
daa
push
popa
push
fs
test
fnstenv
mov
fadd
mov
movs
sub
js
sti
lds
into
in
shl
cmp
jp
xchg
xchg
cmp
mov
out
adc
fsubr
pop
les
jmp
jecxz
(bad)
mov
int3
bound
jge
lahf
and
mov
in
and
mov
and
or
push
outs
fiadd
pminub
arpl
push
sbb
push
adc
adc
push
(bad)
stc
inc
stc
cmp
pop
cmp
out
or
inc
push
les
sub
fs
addr16
xchg
scas
out
daa
mov
cmp
fisubr
mov
out
jecxz
dec
mov
xor
not
sbb
xor
rol
jp
(bad)
lea
lods
xchg
je
loop
xchg
pop
mov
(bad)
adc
sub
mov
ds
mov
adc
in
xchg
pop
xchg
pop
std
xor
iret
scas
and
sub
leave
mov
lods
sbb
push
out
jnp
or
ret
retf
cli
push
and
mov
imul
sbb
sar
ror
cmps
inc
xchg
pop
mov
sbb
mov
sbb
jb
inc
hlt
out
imul
mov
retf
jecxz
jg
xlat
inc
stos
stos
int
cli
jo
inc
dec
pop
mov
fucom
outs
cs
dec
hlt
loopne
clc
cs
mov
pop
retf
dec
(bad)
in
jmp
gs
les
test
movs
jg
adc
push
shr
ror
adc
cmp
in
in
out
pusha
in
and
call
dec
dec
sti
aaa
cmp
out
xor
cmp
jl
pop
fwait
(bad)
push
cmc
or
xor
pop
cmps
in
aad
adc
xchg
push
xor
add
rcl
push
add
(bad)
mov
imul
inc
test
lahf
sub
repnz
je
mov
mul
adc
loop
neg
into
ror
cli
test
sub
sbb
cmp
jns
mov
jp
(bad)
cmp
pop
cmp
mov
repnz
inc
in
mov
inc
retf
cmp
in
int3
dec
mov
lahf
cmp
add
iret
mov
stc
jb
mov
and
cdq
jb
mov
sub
cmp
gs
xchg
cmps
rol
or
daa
adc
les
xor
loopne
push
mov
mov
xchg
adc
jle
outs
dec
adc
loopne
sti
cdq
stos
xchg
adc
nop
jmp
cmp
aam
inc
mov
jne
fsub
arpl
shl
stc
cwde
stos
jne
mov
test
push
sub
xor
lods
mov
loop
movaps
ins
or
cmps
aas
dec
push
lods
fld
in
je
or
dec
(bad)
dec
sub
sub
bound
push
push
cmp
xor
movs
pop
or
adc
aaa
push
iret
cmp
cs
test
aaa
sub
fwait
in
pop
mov
into
fstp
cmp
add
imul
rol
ja
xchg
mov
push
fdivrp
fild
adc
inc
mov
in
and
mov
push
mov
ret
and
pop
and
jg
ret
adc
add
(bad)
push
push
aad
stc
fucomi
and
in
and
pusha
push
and
(bad)
mov
push
cmp
mov
inc
and
sbb
pop
das
dec
pop
ficom
call
cdq
xchg
mov
fist
repz
inc
dec
into
jo
xchg
dec
sbb
cmp
sbb
pop
(bad)
into
scas
shl
cmp
and
(bad)
addr16
push
jae
test
pop
mov
jo
dec
call
xchg
loope
or
xchg
mov
and
sbb
sahf
daa
cli
and
cdq
loope
sbb
jmp
in
lock
jp
and
mov
adc
jmp
dec
shl
mov
mov
sbb
sbb
leave
(bad)
int
or
int
jmp
aas
xor
icebp
push
in
nop
in
(bad)
repnz
sbb
fs
shr
sub
xor
call
mov
pop
int3
pop
repz
rol
fiadd
outs
sub
dec
inc
mov
cmp
cli
dec
cmp
push
inc
xor
ss
xor
cmc
jmp
mov
(bad)
mov
mov
cmp
outs
jno
or
retf
setge
sbb
enter
mov
push
pop
dec
cmp
jle
pop
shl
xchg
push
push
inc
sub
sbb
cmp
shr
jmp
push
xor
or
das
clc
mov
dec
xchg
into
mov
mov
sub
mov
popf
shl
push
mov
push
scas
push
jne
je
add
mov
call
fisub
mov
cmp
sub
clc
test
pushf
lods
mov
jmp
(bad)
sub
cmp
push
loope
stos
cmpxchg
les
sahf
pop
add
dec
mov
dec
imul
jge
add
loope
shl
adc
ds
add
jb
fwait
jle
inc
inc
fisubr
adc
(bad)
clc
(bad)
enter
sbb
push
popf
mov
out
xor
inc
imul
adc
mov
imul
lea
push
test
or
aaa
add
fwait
gs
fsubr
loopne
imul
dec
xor
int3
pop
mov
sbb
mov
ds
es
das
(bad)
add
lds
mov
aad
hlt
cdq
dec
pusha
fs
jne
pushf
fdivr
lods
xchg
xchg
shr
clc
out
add
scas
push
mov
ret
sub
repz
xchg
imul
scas
push
sbb
cs
jmp
pop
ins
adc
jp
mov
jl
(bad)
data16
sbb
(bad)
cmps
and
aad
popf
js
sub
sbb
pop
mov
inc
xchg
fscale
add
gs
inc
jge
xchg
xchg
sbb
xor
nop
in
retf
aad
add
mov
ret
add
sub
push
sbb
inc
cmps
div
sar
test
fild
mov
fs
sbb
ds
int3
and
movs
xor
push
ja
mov
and
ret
inc
pop
jmp
cmc
shr
and
xor
jle
cmp
sub
sub
or
push
shl
(bad)
out
enter
push
loop
addr16
ret
mov
dec
aaa
fcmovu
jbe
push
cmc
xchg
dec
dec
lock
icebp
dec
ins
mov
fincstp
jl
adc
xchg
shl
mov
push
pop
or
inc
(bad)
fcmovnb
or
push
mov
cmp
dec
push
push
sbb
test
and
dec
cmp
test
add
fdivr
movs
sahf
(bad)
jbe
mov
pop
mov
retf
inc
retf
mov
cmp
jg
add
movs
mov
stos
inc
mov
fdiv
dec
mov
adc
lahf
jp
shl
jne
mov
enter
adc
gs
loope
stc
or
mov
xchg
(bad)
jp
leave
ss
repz
fild
mov
lods
jp
out
sbb
sbb
dec
xor
push
mov
iret
cwde
sbb
xchg
jp
and
xchg
push
ins
push
leave
bswap
xor
sbb
out
or
mov
jp
ins
push
bound
adc
adc
aas
aas
test
push
mov
sub
out
jmp
push
or
add
out
hlt
adc
xchg
cmp
and
cmp
call
push
adc
xor
and
add
daa
jb
push
js
add
shl
ror
ja
pop
leave
adc
pop
fadd
sbb
adc
(bad)
xchg
movs
lods
jp
inc
daa
cmp
cmp
and
imul
leave
xchg
mov
retf
and
sbb
fisttp
arpl
xor
xor
lock
jb
dec
inc
mov
arpl
arpl
and
int3
inc
(bad)
jmp
les
fs
repz
(bad)
(bad)
out
scas
xchg
lods
add
inc
ret
fst
inc
fmul
sbb
xor
cmp
ret
jl
xor
cmp
mov
lods
dec
jle
sub
test
(bad)
push
or
jo
imul
mov
enter
arpl
scas
adc
jne
xchg
sub
adc
rcr
mov
push
jl
mov
into
adc
sbb
out
fistp
inc
pop
hlt
icebp
bswap
ds
(bad)
popf
push
lds
cmc
outs
mov
je
sbb
jmp
and
dec
fs
sar
add
mov
call
xchg
push
out
test
or
mov
inc
pop
bound
sub
pop
xchg
adc
or
inc
test
xchg
pushf
fwait
fcom
jae
jmp
(bad)
mov
push
and
outs
inc
jmp
iret
mov
fiadd
add
out
mov
inc
pop
icebp
cli
bound
into
jg
lea
popa
fisub
push
add
mov
out
aas
mov
cmp
pop
inc
push
cdq
into
mov
gs
retf
mov
loope
lock
pop
adc
ret
xor
out
and
xchg
ja
or
push
jns
cmps
sar
fwait
pop
(bad)
ja
xor
push
sbb
scas
repz
loopne
xor
mov
pop
in
or
jns
adc
(bad)
jne
into
addr16
xchg
das
outs
cmps
inc
outs
movs
mov
nop
mov
repnz
inc
(bad)
xchg
xchg
jae
adc
adc
test
stos
jo
pop
mov
mov
xchg
push
jecxz
or
test
push
xor
add
cmp
mov
rcl
push
dec
push
dec
mov
sub
adc
cmps
sbb
outs
cmp
jge
shr
data16
cmp
inc
sbb
or
pop
cwde
data16
mov
pusha
cmps
cdq
sti
icebp
out
out
fstp
fdivr
lea
add
xchg
movs
pop
lahf
mov
loope
push
or
pop
dec
jl
xchg
mov
sub
bnd
(bad)
daa
inc
in
lahf
lds
pusha
or
ss
imul
pop
mov
cld
mov
sbb
aam
add
inc
jp
jle
sub
xchg
xchg
in
jns
pushf
in
push
test
sub
sub
ins
sub
jge
xchg
inc
sub
outs
xor
inc
das
cmp
lds
and
cmp
shr
xor
imul
jae
js
mov
(bad)
mov
ret
xor
sar
cli
lods
das
loop
jl
adc
fdecstp
jmp
sub
jb
xchg
jo
gs
imul
out
sbb
das
dec
inc
sub
imul
int
test
jae
lods
ins
test
in
aad
shl
cmc
pushf
xor
call
int3
push
mov
push
jge
scas
hlt
or
sbb
adc
ja
xchg
add
lahf
hlt
movs
in
add
mov
(bad)
call
dec
(bad)
push
iret
cmc
xor
shl
mov
movs
loope
nop
ss
cmp
dec
ins
adc
sbb
mov
and
adc
add
jno
fwait
scas
xor
nop
(bad)
cmc
pop
clc
(bad)
(bad)
push
loope
push
(bad)
xchg
inc
inc
dec
mov
xor
dec
mov
jbe
and
fnstsw
xor
sbb
loopne
or
out
cld
jl
mov
ret
sub
add
aam
arpl
int3
pusha
aam
mov
jecxz
xchg
stc
ret
outs
xlat
(bad)
xor
ds
jle
arpl
sbb
leave
call
retf
fdiv
cmp
in
push
call
push
(bad)
in
ret
mov
xchg
pop
(bad)
sub
xchg
lods
stos
int
cwde
loopne
nop
mov
pop
out
dec
mov
mov
loope
imul
add
cli
dec
retf
int
retf
int
out
add
out
and
mov
push
int3
ret
xor
pushf
push
retf
sub
movs
mov
push
sub
adc
sub
xchg
fistp
sbb
loopne
int3
jnp
iret
or
pop
xchg
push
push
lahf
cmp
aaa
arpl
stos
push
aad
popf
push
scas
adc
mov
add
(bad)
loopne
test
ds
push
add
adc
je
dec
ret
and
daa
mov
(bad)
push
sti
sahf
pushf
jmp
retf
loopne
cwde
cmp
fcomp
push
jbe
mov
xor
mov
pop
sub
push
daa
int
data16
cmps
daa
bnd
popa
mov
test
lods
and
daa
ins
mov
pop
sysenter
cdq
aam
clc
add
xchg
jbe
es
repnz
mulps
repz
dec
inc
movs
cmp
mov
jmp
and
xchg
std
(bad)
fcomip
and
ja
rcr
xchg
aas
mov
jge
sub
cdq
nop
call
mov
lock
inc
dec
xchg
or
push
sub
retf
xor
xchg
xchg
ins
scas
jg
mov
lods
test
inc
jnp
aaa
pop
lock
emms
imul
rcl
mov
mov
adc
jl
setne
fstp
inc
gs
ins
or
pop
fwait
mov
ja
add
or
retf
loop
pop
retf
fwait
xor
dec
out
sub
out
sbb
(bad)
add
xor
retf
mov
xchg
and
add
and
cmp
fsub
cwde
lods
pop
push
jmp
pop
dec
sbb
xor
nop
mov
xchg
shr
repnz
movs
aam
ret
(bad)
out
hlt
xchg
or
paddusb
out
jl
mov
xchg
sbb
pop
lods
and
outs
cmp
inc
jl
push
adc
xlat
mov
sahf
data16
push
adc
call
jle
mov
pop
or
jle
aaa
inc
inc
push
adc
sti
sbb
jmp
movs
test
xchg
mov
inc
jmp
sbb
fnstenv
sub
mov
jnp
and
imul
cmp
adc
loop
inc
cwde
setp
icebp
aaa
inc
cmp
ja
pop
arpl
inc
mov
dec
adc
xchg
retf
loopne
adc
cmc
fdiv
sub
xchg
imul
mov
or
(bad)
aad
inc
or
cmp
(bad)
cmp
mov
add
scas
or
push
add
add
jge
sbb
adc
(bad)
cmc
sbb
inc
retf
dec
iret
dec
outs
int
shl
shl
push
xor
mov
stos
add
bound
mov
xor
push
sub
lods
xor
arpl
gs
cmps
add
push
pop
les
sar
dec
arpl
mov
dec
add
fistp
call
push
adc
icebp
cmps
pop
jae
sbb
add
dec
lea
and
in
sbb
bound
rol
sbb
popf
movs
mov
push
enter
mov
xchg
dec
popa
(bad)
and
pop
pop
ins
rol
scas
arpl
ja
add
jno
iret
sub
ins
dec
cmp
sbb
mov
dec
shl
in
adc
push
sbb
jle
cmp
ins
es
outs
xor
xor
xor
add
add
loope
xchg
xchg
mov
mov
cmp
push
out
imul
rcl
sar
sbb
xor
add
dec
adc
sbb
add
lods
and
pusha
inc
shl
rcl
scas
push
push
cmps
xchg
inc
repnz
xor
push
cwde
xchg
das
stos
cdq
js
test
jae
in
mov
xor
inc
jecxz
je
gs
out
es
inc
mov
test
fnstenv
sub
jbe
jmp
mov
fisub
rcr
in
cmp
or
cli
into
pop
(bad)
xor
cmp
test
mov
movs
xor
push
jnp
lods
ins
lock
pop
shld
enter
jl
retf
mov
cwde
inc
push
mov
cli
in
sub
cmps
sub
adc
mov
mov
retf
mov
mov
daa
cmp
fistp
jmp
sti
bound
or
repnz
(bad)
push
repz
in
in
sbb
sti
pop
outs
out
mov
or
pop
aad
pushf
mov
mov
addr16
mov
mov
js
mov
xchg
clc
fsubr
stos
and
jbe
gs
shr
xlat
mov
sahf
data16
rcl
xchg
pop
mov
jge
inc
sbb
and
xor
fwait
sub
jbe
mov
rcl
cmp
jmp
imul
sbb
cmp
es
adc
ins
loope
inc
hlt
ins
ins
add
fnsave
cmp
lods
ret
xor
add
addr16
nop
into
test
out
call
aas
adc
cmp
in
pop
xchg
add
movs
retf
add
out
or
cld
cmp
mov
inc
inc
movs
jns
sbb
imul
xchg
lock
std
sub
push
pop
sub
inc
daa
mov
mov
pop
lock
call
mov
or
cmp
add
mov
pop
push
lahf
call
in
cmp
ins
add
(bad)
cwde
pop
mov
xor
cli
inc
pop
in
icebp
cmps
lods
push
sbb
mov
add
aad
mov
mov
lods
jl
in
jmp
push
(bad)
cmp
daa
ds
push
idiv
mov
fild
xor
mov
xchg
push
lock
or
mov
imul
xchg
adc
fnstcw
sub
rcr
push
pop
jp
cmps
mov
mov
aam
sub
pop
retf
jo
xchg
out
call
adc
pusha
stc
push
lods
daa
and
test
popa
cld
inc
sub
jmp
pop
movs
mov
push
stos
xchg
test
mov
jne
scas
jns
popa
lods
add
push
test
adc
push
mov
push
inc
jl
call
mov
cmp
ja
mov
scas
mov
inc
xchg
xchg
(bad)
cmp
in
fadd
xor
mov
adc
xor
mov
cmps
xchg
jns
dec
dec
push
pushf
cli
xor
pop
popf
jae
or
pop
sub
nop
loop
and
inc
mov
jne
pop
push
in
addr16
sbb
les
jno
or
dec
lds
sbb
ins
add
pop
push
sbb
not
repnz
push
xchg
sbb
or
pop
xchg
jno
or
push
push
xchg
lock
add
push
ss
pop
and
or
dec
les
lods
out
out
fcmovnb
sub
jbe
and
lahf
fld
rol
fcom
cmp
aaa
xchg
xchg
pop
dec
outs
xchg
mov
out
lods
pop
stos
jo
adc
push
mov
test
xchg
test
mov
add
jmp
xchg
mov
push
sub
iret
cmc
in
nop
mov
jmp
xchg
fcomi
fisttp
jbe
loope
shl
add
or
pop
adc
fiadd
add
stos
inc
and
mov
jno
ins
pop
xchg
ficomp
stos
icebp
js
test
mov
nop
bnd
jb
mov
(bad)
fisttp
lock
xchg
mov
cdq
jae
push
adc
and
add
(bad)
mov
cmp
call
out
cmp
shr
scas
arpl
push
mov
add
lds
rcl
mov
test
imul
movs
cmps
sbb
jns
js
lods
mov
jne
xchg
mov
xchg
push
mov
out
ds
sub
int3
push
fiadd
test
(bad)
sbb
bound
xchg
xchg
jno
iret
outs
pop
and
inc
(bad)
sbb
push
sub
mov
ins
xor
shl
(bad)
jnp
jmp
(bad)
call
retf
and
sbb
sar
dec
xchg
xor
ret
in
cwde
mov
mov
xchg
pop
aam
sbb
scas
mov
xor
adc
outs
add
jmp
inc
mov
jb
hlt
dec
xor
out
mov
add
inc
push
sub
xor
mov
fiadd
lods
adc
xchg
sahf
retf
test
je
ficomp
adc
xchg
adc
lods
xor
pop
sbb
push
sub
pop
xor
ja
movd
or
imul
sbb
jecxz
xchg
das
test
out
les
gs
jmp
iret
add
(bad)
dec
call
scas
push
imul
mov
dec
mov
sub
add
sub
inc
dec
mov
sbb
dec
adc
mov
push
sti
and
test
push
sbb
lahf
outs
lock
stos
sub
out
mov
add
int
cmp
sub
jbe
stc
dec
in
or
xchg
push
xor
cmps
mov
cmp
(bad)
in
stc
lahf
sbb
inc
call
xchg
pop
gs
cmc
inc
rol
outs
or
fstp
(bad)
jmp
mov
jno
sub
(bad)
adc
xchg
push
xchg
test
add
cdq
ficomp
inc
ror
xchg
les
jns
movs
shl
sti
sub
popa
fcomp
mov
shl
fmul
jmp
jae
aaa
loope
outs
and
idiv
int3
cmp
dec
(bad)
pushf
adc
dec
enter
add
push
loopne
mov
cmp
inc
xchg
data16
data16
jg
adc
ja
xor
add
xor
retf
cmp
out
movs
fdivp
(bad)
mov
push
daa
pop
push
bound
iret
retf
fwait
imul
jge
mov
xchg
adc
push
(bad)
popf
inc
imul
leave
xlat
outs
mov
das
inc
(bad)
mov
mov
mov
mov
jbe
lea
mov
mov
mov
xchg
cmp
loop
dec
std
inc
lock
les
adc
mov
call
scas
or
xor
fwait
and
es
inc
aas
stos
pop
lods
scas
mov
xchg
xor
push
cli
into
mov
aam
cmp
fwait
or
sar
(bad)
movs
pop
ja
in
ret
add
cmc
cs
(bad)
cmp
cmp
adc
sbb
xor
xchg
xor
test
int3
les
pop
stc
jae
gs
leave
(bad)
pop
mov
outs
popa
fs
jmp
(bad)
(bad)
ins
inc
mov
xchg
jmp
sbb
arpl
nop
shl
mov
and
call
test
sub
mov
lods
fs
mov
(bad)
sub
dec
add
scas
add
std
popa
jl
(bad)
sbb
pop
dec
hlt
sahf
sahf
inc
add
std
pop
popf
pop
lods
or
jle
xlat
call
dec
int
jmp
retf
sbb
pop
bound
sbb
mov
icebp
std
call
mov
sbb
(bad)
mov
mov
inc
out
imul
ss
push
sti
stos
xchg
xchg
fucomip
mov
adc
sbb
or
pop
das
inc
call
(bad)
fld
or
ret
xor
adc
jbe
jmp
jb
rcl
leave
js
pop
mov
in
test
iret
sbb
sub
test
mov
pop
xor
sbb
push
test
fiadd
jne
sar
sar
jae
enter
ret
jns
in
retf
call
jecxz
in
call
in
es
scas
sub
jge
pop
repz
loop
mov
call
push
push
pop
xchg
mov
inc
imul
dec
je
adc
mov
dec
lea
(bad)
add
fcom
cmp
repz
mov
out
and
icebp
inc
mov
cmp
inc
test
popf
sbb
call
and
cwde
push
pop
pop
dec
jg
aad
sbb
mov
pop
adc
cdq
jnp
sbb
xchg
pop
xor
add
adc
mov
jbe
xchg
jae
inc
(bad)
fistp
cmp
sub
movs
adc
(bad)
test
iret
sar
mov
ds
loopne
push
push
mov
pop
shl
xchg
(bad)
fisub
pop
(bad)
scas
sub
int3
sub
add
repz
mov
add
dec
inc
or
or
std
and
mov
cli
icebp
push
mov
mov
fs
popf
xor
dec
movs
mov
stc
adc
mov
ror
sti
adc
push
cmp
sub
and
jmp
sub
icebp
mov
int3
iret
or
fstp
stc
push
and
pop
jbe
into
jp
mov
das
dec
push
mov
sbb
cld
mov
not
scas
loop
fldcw
or
mov
jne
sti
mov
loopne
xchg
xor
test
ins
lahf
mov
adc
ins
in
lahf
mov
outs
xchg
mov
inc
inc
adc
loope
ss
jno
push
je
aam
adc
sbb
cmp
shl
mov
inc
in
mov
push
mov
pop
and
cld
dec
xchg
xchg
fdivp
imul
loope
es
cmp
cmp
popf
js
movs
pop
sub
adc
int
mov
sbb
sbb
dec
push
push
push
dec
imul
rcr
adc
or
push
jmp
mov
pusha
and
or
xchg
lods
imul
ins
ins
clc
jle
xchg
cwde
leave
mov
push
dec
ja
adc
jns
int
dec
mov
in
pop
scas
xor
sbb
xor
xor
add
or
jp
nop
das
and
sub
add
cwde
pop
push
push
xchg
js
ret
adc
adc
jl
ss
xor
inc
push
fs
dec
cli
je
sbb
mov
xchg
dec
lods
iret
xor
push
add
stos
sub
and
mov
dec
mov
pop
jecxz
outs
push
inc
retf
std
test
mov
into
mov
cld
xor
xor
push
call
mov
mov
shr
stos
sub
pop
imul
ja
push
int
fdivr
mov
popa
stos
mov
or
mov
mov
fcom
inc
stc
mov
or
mov
call
ins
add
pop
(bad)
mov
adc
inc
ja
pop
or
addr16
dec
mov
push
pop
mov
call
sti
push
loope
dec
sbb
jo
xlat
push
lods
stos
iret
lea
mov
dec
(bad)
and
pushf
and
mov
or
repz
imul
rol
repz
jnp
xor
mov
push
sbb
hlt
push
push
inc
test
mov
hlt
imul
nop
inc
xor
call
arpl
outs
or
es
fadd
imul
rcl
mov
in
mov
cmp
pushf
dec
sbb
imul
(bad)
test
(bad)
popa
lds
ror
add
cmps
cmp
in
mov
not
loope
fstp
ds
nop
mov
out
jle
push
fwait
mov
fsubr
fdivr
hlt
adc
les
dec
stos
pop
push
shl
arpl
and
pop
jbe
mov
bound
aad
sbb
xchg
sub
mov
lods
imul
push
fs
xor
jne
stos
int3
data16
iret
and
in
sub
js
jle
pop
ja
jnp
and
xchg
inc
dec
jne
outs
jmp
in
dec
aad
sub
and
cmp
xchg
push
sbb
jle
sub
lea
pusha
mov
inc
xchg
xor
add
add
mov
ins
rcl
std
lods
sbb
add
dec
rcr
push
cmps
sbb
mov
pop
mov
call
cdq
mov
ins
jmp
ins
stos
fs
cmp
in
adc
xor
or
inc
ror
cmp
dec
inc
out
(bad)
push
cld
or
outs
(bad)
loop
ins
add
hlt
jno
pop
aaa
iret
jle
stc
leave
sti
test
jecxz
mov
push
xor
mov
push
(bad)
push
cmp
mov
xchg
enter
or
cmp
rol
sbb
inc
adc
repnz
jge
sub
dec
popa
jo
movs
mov
jae
cld
push
jne
out
pcmpeqw
inc
lahf
aas
(bad)
and
pop
xor
mov
push
ins
call
dec
pop
dec
sub
rol
push
inc
shl
out
add
xor
(bad)
inc
movs
jne
inc
les
or
in
arpl
and
into
push
movs
loop
push
les
pushf
inc
bound
ins
(bad)
mov
pushf
mov
sub
adc
jl
fdivr
add
jle
adc
mov
mov
retf
mov
or
lods
div
mov
dec
cmp
cmp
pusha
fwait
jb
jb
ret
test
in
mov
sbb
out
push
xchg
pop
mov
pusha
out
sbb
out
push
je
loop
in
mov
lods
out
cdq
adc
ins
sub
add
cwde
adc
loopne
pop
adc
mov
jae
(bad)
shl
clc
or
pop
shl
mov
cmp
cmp
js
jb
lock
hlt
adc
sbb
cmps
pop
iret
jae
adc
mov
inc
xlat
arpl
repnz
mov
push
and
(bad)
fidiv
test
fidivr
push
inc
push
mov
jbe
or
cmp
arpl
fstp
repz
out
sbb
sbb
xchg
adc
jne
data16
in
pushf
cmps
push
inc
imul
push
sub
in
imul
js
imul
push
inc
push
inc
enter
push
loop
mov
sahf
movs
fstp
std
cmp
xor
jecxz
cmp
and
stc
packssdw
pop
adc
jl
dec
inc
retf
mov
mov
dec
adc
cld
dec
xchg
cmp
sahf
in
pop
jmp
in
jbe
inc
mov
jmp
daa
sti
pop
or
jl
imul
xlat
mov
pop
dec
xchg
dec
mov
xchg
jae
mov
cdq
mov
repnz
out
or
lock
jle
out
pushf
push
je
mov
lock
cli
xor
int
sbb
xchg
cmps
inc
adc
retf
xchg
jnp
xchg
das
ret
popa
das
fcom
in
and
arpl
in
push
lock
jns
int3
mov
cli
cmc
shl
inc
jmp
cs
push
mov
cmc
(bad)
xchg
scas
arpl
and
xor
cmp
std
add
mov
dec
xor
leave
shl
mov
mov
int
(bad)
lock
add
hlt
popf
retf
stos
ror
cs
add
repz
sub
xor
push
(bad)
cdq
int
mov
in
ficom
pop
sub
sbb
fbstp
cwde
push
clc
lds
push
daa
mov
push
xor
jmp
(bad)
add
jle
ds
xchg
sbb
inc
mov
push
(bad)
test
push
and
pusha
cmp
mov
or
cmp
sub
xlat
sbb
imul
ss
test
jl
movs
push
and
nop
and
(bad)
(bad)
ins
xchg
(bad)
mov
jno
in
adc
and
retf
ins
mov
lock
or
ror
out
push
adc
or
sbb
cmp
pop
pushf
sbb
not
push
test
fdivr
hlt
sub
(bad)
pop
pop
and
pop
in
std
push
add
and
mov
push
jmp
std
test
ss
les
test
cs
pop
mov
pop
jae
popf
sbb
sti
push
in
dec
loopne
popa
inc
push
sar
adc
imul
mov
jge
mov
sar
and
je
push
(bad)
inc
add
cmp
cld
inc
cmp
gs
in
add
cmc
jb
push
xchg
jl
sti
cmps
stos
jg
aas
xchg
sbb
push
mov
ret
leave
call
mov
and
inc
ins
mov
pop
dec
jl
leave
(bad)
xor
adc
mov
in
jmp
mov
in
loopne
mov
hlt
mov
ficomp
sbb
dec
jae
add
inc
mov
iret
shl
test
adc
or
jmp
out
dec
std
rcl
lods
sbb
retf
int
sub
push
mov
in
ss
and
out
adc
aaa
jge
mov
xchg
(bad)
cli
push
dec
stos
mov
fidiv
adc
aas
mov
pop
fst
frstor
aas
xor
pop
push
jecxz
mov
inc
dec
dec
fwait
sbb
and
jne
lods
stos
xchg
stos
or
hlt
and
add
lahf
movs
rol
add
sub
pop
fld
push
rcl
stos
xor
jnp
dec
ret
dec
inc
bound
inc
xchg
call
or
sub
mov
mov
add
lds
pop
mov
cli
inc
push
and
and
xchg
jne
ss
xor
xlat
sbb
push
sub
or
stc
loopne
call
scas
(bad)
rol
lods
je
jge
pop
(bad)
jecxz
(bad)
sbb
jae
cmp
jbe
inc
rol
stos
pop
jnp
pusha
xlat
cs
cmp
dec
lock
fwait
pop
cmp
or
ja
mov
out
or
pushf
mov
je
pop
jno
mov
sub
jmp
lods
mov
inc
cmp
and
pop
repz
shr
in
daa
rep
sti
or
daa
xchg
sub
push
push
pop
cwde
fimul
pusha
xor
cmc
mov
cdq
scas
mov
(bad)
daa
jge
(bad)
movs
test
adc
scas
enter
js
movs
jne
in
inc
pop
pop
push
xchg
std
outs
xchg
mov
dec
stc
mov
into
sbb
ss
cmp
jns
mov
pop
jmp
cmp
clc
mov
sub
sub
(bad)
fwait
call
sbb
hlt
cli
(bad)
aaa
inc
std
inc
xchg
push
pop
aaa
ds
sbb
gs
jecxz
mov
jle
adc
cmp
xor
div
test
cmp
mov
push
mov
mov
ret
push
iret
dec
mov
mov
xchg
sti
and
pop
out
ficom
sti
out
sti
pop
fisub
std
out
mov
fdiv
mov
shl
mov
mov
enter
in
add
xchg
cmp
push
mov
(bad)
inc
aas
ds
mov
xlat
test
dec
pop
mov
mov
pop
mov
lods
in
fwait
in
enter
or
jbe
inc
push
(bad)
sbb
xchg
ret
add
push
mov
xchg
popf
inc
arpl
and
retf
xor
inc
jg
call
in
or
and
jae
test
ds
not
call
push
dec
mov
mov
aas
jmp
jae
push
shr
dec
cmp
xchg
(bad)
sbb
das
sub
arpl
fcomi
add
and
dec
(bad)
in
inc
cmp
pop
out
out
(bad)
movs
xor
sub
outs
jo
mov
push
dec
jg
fild
ins
xchg
pop
sbb
rcl
push
ins
mov
daa
out
xchg
ret
mov
push
popa
cld
jb
(bad)
movs
test
loope
jns
cmps
dec
shl
push
dec
sbb
xchg
call
pop
cmp
arpl
(bad)
jle
jae
jecxz
cld
mov
mov
xlat
sar
movs
inc
mov
sbb
pop
shl
jecxz
and
aaa
scas
push
daa
mov
(bad)
fiadd
xchg
retf
xor
mov
cs
xor
fdiv
xor
mov
stos
mov
daa
push
pop
call
fdivr
mov
aas
mov
adc
pop
cmp
imul
push
shr
mov
aas
into
daa
xchg
mov
rol
mov
xor
xchg
iret
fistp
ffree
mov
rcr
xor
cdq
pop
mov
sub
dec
pusha
mov
sub
daa
sbb
dec
pop
test
movs
sub
sub
mov
into
jmp
mov
dec
dec
ss
stos
and
adc
inc
stc
je
dec
out
jns
stos
cmp
xor
cli
cmp
ins
repnz
and
sbb
iret
mov
jmp
movs
xchg
test
neg
jo
sub
dec
xor
jl
add
lods
jecxz
scas
xor
sar
loope
mov
out
dec
and
test
aam
outs
int
jmp
fcmovb
pushw
js
out
push
pop
push
mov
iret
xchg
push
xor
inc
pop
push
push
hlt
out
je
pop
in
in
add
push
sbb
xchg
clc
arpl
fs
jmp
and
sar
sub
mov
rol
js
mov
in
xchg
add
sub
scas
jnp
mov
xchg
ror
jp
popa
push
inc
xor
mov
cmp
mov
push
in
jo
jbe
loopne
imul
scas
test
cdq
push
cmc
mov
(bad)
push
test
mov
xor
leave
test
jp
add
jp
jmp
popf
dec
mov
fdiv
mov
in
ret
dec
mov
pop
outs
cmp
xor
push
loopne
out
jge
jl
mov
pop
sub
or
dec
push
sub
and
xchg
in
and
cld
xor
inc
std
jge
add
js
and
or
mov
fldenv
imul
or
jl
gs
iret
mov
mov
cs
arpl
push
or
inc
sub
imul
cdq
jge
shl
mov
jno
adc
pop
inc
push
mov
rcl
or
sar
mov
dec
mov
jecxz
not
add
xchg
jecxz
hlt
gs
inc
dec
movs
push
xor
addr16
cs
cmp
mov
clc
xor
in
jecxz
jae
aas
and
stos
shl
pop
xor
test
rcr
mov
push
in
pop
sbb
cmps
mov
rdpmc
mov
bound
jmp
sub
leave
mov
repnz
repz
dec
jae
mov
loop
fild
adc
xor
pop
stos
cmps
test
fbstp
aas
cmp
sub
mov
in
gs
ret
jecxz
inc
dec
xlat
cmp
mov
mov
(bad)
add
mov
add
cmp
pop
mov
ins
xor
not
test
nop
test
loopne
xor
dec
jmp
je
fld
dec
pop
pop
mov
enter
xchg
cld
mov
or
scas
movs
sub
movd
adc
sti
inc
(bad)
xchg
inc
inc
stos
data16
cwde
xor
sar
push
fld
icebp
inc
cmc
mov
sar
ja
(bad)
je
mov
cmp
sub
mov
in
aad
ret
or
or
cmp
sub
in
jmp
pop
loopne
cmps
jns
push
adc
and
je
fucomi
sbb
or
and
in
(bad)
in
sub
xlat
mov
add
ds
pop
aas
adc
fs
sub
inc
xor
push
mov
and
sub
push
xchg
shr
mov
sbb
das
lods
mov
popa
or
enter
sub
mov
fidivr
push
fsub
gs
dec
push
xor
sub
mov
push
mov
enter
fs
add
pop
inc
pop
xor
jnp
hlt
jmp
stos
push
mov
mov
pop
lahf
sbb
push
and
pop
ss
mov
test
sti
cmp
or
pusha
test
or
xor
add
bound
sti
push
rcr
jmp
mov
xlat
xchg
cs
cli
jmp
fwait
aad
mov
dec
inc
imul
add
fcomp
int3
cld
push
std
in
lahf
fbstp
loopne
imul
ins
aad
scas
sub
xchg
and
sub
stos
(bad)
fs
pop
mov
dec
mov
jmp
dec
idiv
repz
lock
xor
and
in
adc
jl
inc
fsub
mov
push
cld
test
out
dec
or
iret
mov
jge
(bad)
jl
jns
ss
adc
cmp
dec
mov
push
pop
cli
jb
das
lods
fild
or
mov
stc
mov
or
dec
sub
out
stos
je
cmps
fcomi
cld
cwde
outs
icebp
sbb
data16
aad
repz
mov
sahf
leave
mov
ja
and
les
clc
jp
je
ss
stc
xor
mov
outs
pop
addr16
das
mov
mov
cwde
scas
fs
jecxz
sbb
or
add
push
fsubp
dec
xchg
or
outs
sub
test
dec
cmps
jnp
sbb
dec
test
gs
nop
mov
or
fist
pop
call
lea
jnp
dec
iret
mov
ret
sub
aam
push
sub
mov
call
inc
js
mov
ins
setl
xchg
pop
push
(bad)
lods
jbe
pop
mov
mov
mov
mov
loopne
shl
mov
test
xchg
lea
call
fisttp
retf
xor
xchg
inc
icebp
jns
ins
popa
cld
test
dec
mov
sbb
loopne
inc
xor
and
ror
or
sub
stos
addr16
mov
sbb
imul
xchg
into
in
add
clc
xor
push
leave
popa
push
dec
cmp
cwde
(bad)
into
or
jns
and
pushf
sbb
adc
xchg
cmps
test
outs
dec
dec
enter
pop
mov
je
adc
mov
mov
xchg
jp
mov
cmp
loope
int3
jo
out
fwait
sbb
out
jge
out
adc
arpl
inc
sub
xchg
cmp
push
dec
mov
mov
fadd
push
xchg
(bad)
sbb
mov
mov
xchg
sbb
jnp
or
aas
cli
test
inc
mov
sbb
cli
add
push
cmp
lea
xor
loope
test
jo
sbb
jb
push
xchg
je
fs
repnz
push
iret
or
imul
mov
adc
hlt
add
push
std
cmp
out
sub
fstp
fsubr
sub
leave
sub
jo
adc
es
js
and
push
mov
lea
fistp
pop
dec
cmps
sbb
inc
fwait
dec
into
aas
out
pushf
imul
(bad)
in
scas
inc
mov
cdq
mov
ss
loope
sbb
jnp
xchg
in
out
push
cmps
jnp
jmp
mov
sbb
pandn
mov
stos
mov
add
arpl
sbb
jg
sar
fnstsw
scas
sahf
fisttp
sbb
xor
retf
jno
call
aaa
push
push
retf
jle
push
xlat
aaa
cmp
jmp
jae
retf
imul
lds
imul
mov
retf
imul
and
mov
sbb
cmp
test
imul
mov
or
sti
jle
dec
jl
sbb
xchg
push
sub
jb
dec
movs
shl
cmp
(bad)
push
test
mov
mov
clc
mov
mov
movs
xchg
js
pop
inc
shl
jge
retf
sbb
test
mov
xchg
das
cld
push
hlt
loopne
cmp
lods
test
mov
mov
test
xlat
iret
(bad)
repz
retf
push
dec
push
inc
lods
loopne
mov
ror
jo
add
jle
sub
test
dec
aas
ret
add
scas
mov
(bad)
daa
mov
loope
push
hlt
xchg
push
mov
cmc
aad
in
push
inc
push
(bad)
mov
clc
out
mov
clc
xlat
sbb
and
mul
xor
push
shl
sahf
mov
or
push
into
ret
xor
rol
or
retf
add
clc
or
or
mov
das
mov
push
mov
je
and
sbb
pop
sbb
push
addr16
lahf
and
xor
dec
int3
movs
loopne
jle
mov
scas
xor
cmp
out
sbb
xlat
call
in
jae
cmp
xchg
xor
out
(bad)
retf
mov
cs
pop
mov
iret
add
xchg
retf
dec
je
sub
cmp
cmp
lock
jo
inc
fld
data16
or
movs
popa
int
imul
(bad)
jle
(bad)
mov
sti
aam
jns
add
push
xchg
jne
xor
mov
xor
movs
sbb
lods
pop
ret
addr16
mov
sbb
or
inc
push
je
lea
cdq
sub
xchg
xor
outs
in
lds
stos
js
push
ror
xlat
xor
mov
sbb
leave
pop
into
xchg
push
pop
imul
sub
mov
call
inc
cmp
ins
pop
pop
sahf
popa
or
lahf
mov
inc
loopne
mov
jmp
cvtpi2ps
pushf
cmp
jno
frstor
xchg
mov
push
pushf
xchg
movs
xor
sub
mov
sahf
stos
data16
xor
sbb
mov
mov
ret
imul
call
add
icebp
xchg
add
xchg
jge
call
dec
jg
nop
xor
test
mov
mov
pop
sub
jge
sti
jmp
sbb
pusha
add
repz
or
mov
cmc
xchg
mov
add
neg
jns
stos
fdivrp
sub
cwde
cdq
push
pop
mov
jbe
push
and
xchg
sbb
jne
stos
inc
stos
sub
cmp
sub
loopne
lds
bound
xchg
sbb
adc
pop
jmp
std
adc
dec
fsub
fidivr
mov
mov
push
jl
or
cs
sub
xlat
pusha
cdq
clc
jno
fild
sti
and
pop
test
push
add
xchg
xchg
enter
and
in
shl
loop
test
aaa
int
in
movs
pop
push
inc
cld
jmp
aas
aas
sbb
ja
mov
dec
inc
pusha
movs
call
and
nop
xchg
je
cli
icebp
cmps
adc
pusha
leave
cli
(bad)
mov
cmps
je
mov
inc
lds
jo
pop
(bad)
or
test
out
lahf
dec
cs
clc
test
cwde
into
or
ins
sub
pop
push
and
xchg
xchg
push
sub
nop
push
loope
es
cld
sti
pop
jp
inc
dec
add
add
into
inc
sub
test
push
jns
sub
pop
jnp
pop
nop
nop
mov
push
pop
cmp
test
std
dec
ror
in
test
cmps
scas
jno
(bad)
outs
and
push
mov
jmp
jecxz
push
mov
or
and
xor
int3
adc
cli
xchg
jle
aad
jne
jmp
sbb
test
(bad)
sti
inc
or
stos
jg
jb
inc
mov
neg
into
push
imul
cdq
or
dec
push
push
les
ins
xchg
xchg
(bad)
lods
repnz
je
popf
popa
fwait
imul
ds
lods
es
jge
scas
jbe
jp
or
cmps
xchg
inc
arpl
add
sar
inc
fwait
push
sbb
jecxz
xor
xchg
push
push
cmp
mov
and
cmp
loop
mov
sbb
iret
mov
xor
cmps
addr16
cmp
jl
sub
sub
lods
jnp
push
aas
test
mov
or
stos
adc
dec
jle
jg
mov
sub
int3
adc
jae
sub
and
icebp
test
aas
push
cld
adc
leave
push
pop
lods
inc
push
std
xor
pop
fst
sbb
dec
cmp
test
dec
mov
pop
mov
jge
cmp
ret
idiv
fst
sub
outs
(bad)
pop
cmc
jbe
and
push
mov
xor
ret
push
ins
lock
adc
in
sbb
cmp
daa
jne
sub
cs
ror
cmp
(bad)
arpl
add
sti
pop
js
cmps
inc
push
cwde
test
popa
cwde
jae
repz
cs
stos
adc
pop
push
fwait
retf
stos
scas
jecxz
call
pushf
sbb
mov
sub
retf
sub
cmp
add
(bad)
inc
dec
push
fisttp
xor
inc
in
dec
fbld
ret
cmp
shl
jne
and
add
sub
jle
inc
jp
repz
mov
jmp
lahf
xor
xor
fsub
mov
dec
popf
xchg
ja
add
mov
cmps
int3
je
sahf
clc
dec
frstor
adc
test
sub
les
std
inc
jmp
daa
out
into
cmp
mov
xchg
into
cmc
xchg
jae
mov
imul
or
fisubr
sub
cmp
int3
cmp
dec
pop
idiv
in
jo
jmp
jmp
adc
cmp
cmp
push
pop
iret
daa
mov
or
adc
mov
push
test
or
div
pusha
xchg
or
mov
sub
add
sub
por
cmp
dec
(bad)
sub
jl
and
or
push
pop
ja
dec
and
sahf
shr
repnz
jmp
pop
mov
adc
dec
cmp
enter
(bad)
out
lock
mov
xchg
sbb
shr
jmp
shl
inc
xchg
shl
jbe
or
or
mov
or
mov
jmp
push
cdq
push
or
bound
xor
ret
out
into
push
pop
adc
mov
xor
add
repnz
pop
xor
in
ja
dec
fnstcw
popf
mov
jp
dec
pop
js
add
mov
xchg
add
pop
mov
stos
mov
xor
arpl
xor
lock
inc
cmc
adc
xor
or
call
aad
pop
rcl
push
xchg
arpl
adc
cmp
aas
pop
jle
adc
js
jae
inc
add
lds
push
pop
bound
jns
fwait
xor
jae
fwait
test
in
out
ret
and
pop
mov
xchg
adc
lea
mov
imul
bnd
les
in
jnp
fidiv
enter
or
pusha
lods
jmp
mov
pusha
retf
test
loope
je
cmp
ds
test
in
popa
popf
sub
out
inc
std
test
inc
shl
and
leave
mov
xchg
push
int3
nop
cmp
pushf
rcr
outs
and
push
jle
in
movs
add
jne
dec
sub
test
jg
and
cmps
dec
mov
add
xchg
fdivr
jb
push
mov
pop
ficomp
ds
xchg
loope
sub
in
dec
push
or
icebp
ficomp
xchg
mov
add
inc
adc
stos
mov
jecxz
into
addr16
pusha
test
bound
and
not
daa
(bad)
out
mov
stos
sbb
and
loop
call
jge
call
out
out
je
dec
push
mov
push
xor
mov
adc
mov
or
push
scas
push
cmp
xchg
daa
loopne
(bad)
xor
stc
jo
int3
stc
imul
(bad)
retf
fdivp
je
call
shl
ret
pop
std
ror
and
inc
jne
jo
sub
push
loopne
add
adc
sub
and
outs
dec
or
enter
jbe
pop
loopne
adc
jns
push
in
sub
and
test
pop
push
push
ficomp
movs
jp
lahf
rol
sahf
pcmpeqd
cs
(bad)
repnz
xor
out
xor
jle
data16
es
leave
into
inc
pop
xor
scas
add
ret
ins
or
mov
mov
sub
ins
add
pop
push
and
and
stc
lahf
sbb
call
ins
inc
ret
push
mov
mov
cmp
sbb
inc
pusha
pushf
(bad)
mov
dec
shl
gs
pushf
test
push
mov
shr
out
mov
push
cmp
dec
or
xchg
dec
lea
push
mov
xor
push
aad
fcmovnb
add
mov
call
lahf
sbb
out
pop
mov
stos
lahf
mov
or
xor
cmp
fs
ret
pop
(bad)
push
div
shl
rep
daa
sbb
and
push
ror
pop
in
add
jecxz
movs
inc
pop
pop
ja
icebp
imul
ja
ret
pop
ins
add
seto
inc
cs
into
inc
jnp
xor
xor
jp
and
jmp
xchg
mov
js
in
mov
add
in
xor
xchg
xor
test
jae
xor
test
cmps
stos
adc
and
(bad)
ret
inc
jp
and
mov
mov
mov
cmps
sahf
lds
mov
aas
in
movntq
out
dec
ja
mov
mov
out
or
pop
push
xchg
loop
std
in
sbb
mov
cwde
(bad)
cmp
mov
adc
(bad)
mov
mov
xchg
jmp
int3
pop
jae
inc
mov
into
inc
test
shl
shr
mov
daa
xchg
sbb
xchg
sub
pop
mov
inc
jne
cld
sti
cmp
sbb
mov
mov
out
mov
adc
(bad)
in
fdivr
cmp
sub
inc
inc
pop
(bad)
cmp
ror
xor
xchg
test
sar
sahf
jge
(bad)
popf
adc
cmp
cmp
jns
xchg
mov
leave
xchg
call
into
inc
jecxz
call
jmp
or
add
bound
iret
aam
mov
mov
sbb
mov
repz
into
pop
fcomp
ins
hlt
test
movs
push
jg
mov
mov
pop
mov
lahf
retf
lahf
jecxz
imul
or
add
div
and
call
cs
push
cmp
rcr
pop
add
mov
out
or
retf
jne
pop
add
call
dec
ds
jecxz
xor
test
lock
pop
add
mov
dec
xchg
inc
iret
scas
test
stc
jl
inc
fild
enter
int
hlt
inc
fs
sub
daa
cdq
stc
cmp
add
cld
xor
add
cmp
xchg
adc
je
(bad)
push
adc
pop
shr
(bad)
lock
cs
retf
mov
cmc
repnz
mov
and
js
rcr
pop
dec
adc
xor
test
push
sahf
adc
mov
sbb
add
daa
mov
mov
pushf
xchg
int3
(bad)
pop
pop
cs
subps
mov
lea
pop
xchg
mov
enter
out
rcl
push
mov
inc
in
out
mov
ins
test
pusha
mov
inc
lock
test
dec
pop
sub
jo
add
bound
sbb
arpl
xchg
dec
fisttp
xchg
imul
push
xchg
(bad)
(bad)
daa
dec
lock
sti
outs
lds
jg
mov
in
sbb
ds
add
adc
icebp
xor
rcl
(bad)
jbe
imul
dec
xor
scas
pop
jecxz
jmp
(bad)
lock
ret
mov
mov
enter
repnz
repz
mov
int
cmp
repnz
adc
adc
ja
dec
(bad)
outs
cmp
push
mov
jmp
xor
pop
jne
add
inc
call
cmp
mov
push
or
aad
or
sbb
inc
dec
xor
xor
sbb
mov
mov
jg
out
fcomip
pop
sub
arpl
and
or
call
adc
ret
aad
test
xchg
shl
sbb
mov
pop
jp
(bad)
iret
outs
dec
mov
inc
retf
xor
fidiv
in
cmp
mov
leave
xor
push
mov
mov
xor
push
sbb
retf
cs
fadd
xchg
outs
push
cmp
(bad)
pop
lods
inc
jmp
fwait
dec
sbb
sub
out
add
retf
cmp
or
out
pop
cs
idiv
xor
pop
stc
cmp
pop
pop
div
call
push
imul
fist
dec
es
sbb
xor
mov
mov
in
imul
xor
and
neg
sbb
mov
add
dec
sub
add
loopne
mov
pop
adc
pushf
ret
cmc
jmp
int3
sub
sbb
lock
mov
adc
pop
jmp
out
aaa
mov
lahf
cmp
xchg
das
inc
pop
movs
inc
mov
lock
in
test
push
dec
enter
aad
sbb
call
add
jge
in
(bad)
mov
dec
xchg
pushf
adc
call
dec
fidivr
push
inc
mov
rcl
adc
addr16
sar
add
or
or
push
jp
add
or
sbb
jne
mov
daa
or
out
outs
push
aad
sar
(bad)
adc
or
retf
add
pop
xchg
outs
dec
add
lds
scas
sbb
popa
dec
cmp
adc
fs
xchg
das
or
mov
(bad)
sbb
stc
mov
add
pop
popa
les
pop
fistp
test
mov
mov
push
cld
aaa
fwait
adc
inc
cmp
pushf
add
fdivr
push
icebp
push
sbb
int
retf
sar
sub
dec
in
or
mov
test
xchg
push
mov
xchg
addr16
lea
ret
frstor
jb
pop
cmp
fiadd
jae
sub
cmp
push
repnz
or
dec
push
xchg
sub
test
imul
shl
(bad)
inc
fist
rcr
mov
jl
add
or
sbb
test
or
repz
gs
fstp
cmp
mov
dec
sbb
shr
and
or
out
inc
xchg
mov
js
aas
push
arpl
mov
xchg
xchg
inc
adc
push
sub
fs
lods
push
int
cli
iret
add
jo
cmp
in
ja
leavew
adc
retf
test
pop
arpl
add
jecxz
aas
add
pop
xor
mov
rol
xor
movs
inc
dec
sub
or
or
lods
jb
xor
mov
sbb
cmps
call
xchg
clc
sub
clc
popa
dec
sub
shr
fiadd
xor
add
mov
adc
leave
(bad)
jg
sub
inc
xchg
xchg
and
aaa
add
imul
and
pop
mov
pushf
sar
retf
cmp
dec
inc
ds
push
stc
scas
mov
and
adc
pop
stc
mov
adc
sbb
shl
pop
jge
sub
push
leave
mov
adc
mov
fwait
sbb
push
aad
js
addr16
jnp
jmp
add
loopne
jno
inc
pop
fimul
jp
scas
(bad)
push
aad
pusha
pop
(bad)
lds
inc
scas
fild
repz
stc
aaa
pop
popa
jp
dec
xchg
xor
and
mov
xor
or
jp
push
(bad)
pop
imul
jnp
adc
call
test
imul
mov
shr
cmps
test
or
scas
scas
cmp
push
xchg
pop
out
xchg
jl
sub
call
outs
dec
cmp
pusha
or
pop
cmp
add
sbb
test
in
in
(bad)
adc
loope
in
pop
jo
(bad)
(bad)
mov
arpl
and
adc
outs
cmp
fs
pop
jne
pop
sbb
popf
add
mov
mov
push
fdivr
ins
imul
and
cld
push
lds
add
jge
push
mov
sbb
inc
iret
or
xchg
cdq
cmps
push
mov
inc
data16
in
cmp
aad
ins
mov
add
les
and
sti
xor
or
lods
mov
ja
cmc
cmp
(bad)
jnp
xchg
into
pop
test
xor
pop
outs
mov
not
cld
pushf
add
lock
fsub
or
pushf
xchg
retf
jmp
mov
mov
lods
adc
scas
ret
cld
and
cli
mov
jmp
movs
popf
dec
ins
in
cdq
repz
mov
pusha
push
aam
lods
adc
mov
(bad)
xor
jbe
cmp
in
cmc
mov
mov
out
es
xor
fidiv
lock
mov
pop
mov
xchg
mov
pop
or
push
dec
inc
clc
jnp
jne
fisttp
inc
or
pop
imul
jmp
jmp
fsub
dec
(bad)
rol
pop
cmps
neg
cmc
pusha
add
cmps
pop
cmp
jno
outs
add
jmp
(bad)
in
add
inc
push
in
sub
into
outs
jp
xor
outs
sbb
pop
mov
xchg
(bad)
in
xchg
xchg
test
call
sub
dec
adc
repnz
cmp
dec
xor
test
sbb
mov
ins
cmp
jge
and
ret
pop
mov
xchg
(bad)
lds
(bad)
loopne
jp
ds
inc
ret
fldenv
iret
dec
push
or
scas
cmps
fwait
pop
xchg
test
inc
jmp
push
add
dec
mov
jmp
les
mov
js
xchg
mov
sbb
test
repz
mov
cmp
jns
cdq
lods
xchg
ins
nop
jne
loopne
out
mov
or
xor
cwde
iret
dec
pop
sahf
and
fsub
retf
sbb
or
sub
xor
int3
ret
jbe
dec
xchg
jns
(bad)
jmp
jmp
adc
aad
or
mov
(bad)
sbb
pop
and
add
xlat
(bad)
push
ins
rcr
jbe
jae
imul
sti
pop
into
xor
nop
sti
retf
cld
push
mov
xchg
push
sub
es
add
adc
rcr
cmp
dec
(bad)
mov
or
sbb
stos
aam
jmp
in
and
mov
aas
jmp
je
das
mov
jno
add
lahf
(bad)
push
jl
addr16
dec
mov
jp
jmp
cmp
inc
mov
sbb
repnz
leave
(bad)
loopne
xor
into
icebp
(bad)
in
test
cmp
jb
or
mul
push
jnp
lds
scas
ins
add
mov
call
xor
dec
adc
and
test
int
mov
test
out
test
cmp
es
cmp
(bad)
mov
pop
fst
push
xchg
cmp
adc
neg
mov
test
inc
xchg
lock
loop
leave
fstp
xor
and
das
cs
(bad)
pop
mov
iret
mov
cld
jle
fimul
sahf
repnz
sbb
outs
inc
(bad)
sbb
bound
nop
in
dec
jmp
(bad)
pop
inc
add
test
ror
cwde
retf
adc
test
aaa
sub
iret
repz
mov
out
mov
mov
cmp
dec
out
imul
test
dec
gs
dec
dec
lods
clc
dec
push
stc
inc
xor
lods
lea
stc
movs
repz
xor
mov
js
push
clc
or
das
shl
jb
ss
xchg
stos
dec
lods
inc
iret
jge
push
inc
mov
cwde
div
mov
outs
mov
sub
cmp
xchg
xchg
jle
mov
cmp
fld
sti
sbb
cmp
leave
aas
dec
lods
rcl
sbb
mov
lock
xor
iret
jmp
pop
(bad)
jle
in
sub
cmp
mov
mov
mov
pop
in
fcom
imul
imul
shr
cdq
stos
sub
rcl
das
fwait
aad
icebp
addr16
jecxz
mov
mov
gs
fs
and
xchg
test
lahf
stos
int
(bad)
push
mov
call
pushf
lahf
test
je
repnz
mov
push
aam
push
pop
add
stc
dec
xlat
or
xchg
jne
mov
jecxz
dec
inc
addr16
ins
or
mov
cmp
sahf
movs
sub
pop
mov
push
sahf
add
bound
pop
popa
out
shl
idiv
out
cmp
jae
bound
or
cmc
jmp
mov
push
cmp
ja
pop
mov
add
test
popa
mov
jne
sub
push
jle
fidiv
ret
mov
sbb
test
jne
jp
add
and
and
addr16
add
loope
icebp
fld
push
inc
add
fidivr
js
enter
inc
into
xor
add
bnd
fnstsw
sub
mov
jnp
dec
dec
jno
mov
daa
sbb
cmp
pop
and
and
das
jb
movs
imul
fdiv
push
mov
adc
in
inc
push
dec
jecxz
xlat
xchg
xchg
xor
mov
push
(bad)
fwait
and
popa
sub
xchg
mov
ret
(bad)
jno
lahf
xchg
dec
adc
pop
fisub
bound
mov
xchg
add
adc
xor
imul
aas
enter
jg
cmp
outs
out
les
xor
lods
cmp
lea
fdivr
inc
ror
pop
mov
fsub
sbb
mov
cmp
lock
loopne
popf
adc
out
xchg
int3
int
inc
add
lds
push
or
xor
dec
dec
mov
cs
fst
(bad)
mov
push
inc
imul
stos
inc
mov
xchg
fsub
lds
call
call
sar
fwait
ss
xor
mov
movs
or
mov
push
dec
sub
add
retf
add
xchg
aam
dec
mov
push
inc
inc
xchg
mov
push
popa
push
mov
ss
mov
jle
mov
or
loopne
in
bound
pop
xchg
fldcw
sahf
ja
test
inc
sbb
jbe
(bad)
clc
imul
movs
xchg
enter
leave
mov
aaa
and
add
push
call
ds
xor
in
rcr
retf
dec
movs
push
jp
mov
(bad)
loop
aam
enter
je
sti
add
add
daa
adc
xchg
stos
div
sub
jo
stos
add
cli
pop
and
cld
push
stc
lock
mov
push
cdq
inc
js
xor
out
ficom
cmp
xchg
add
add
fwait
jbe
xchg
add
imul
cmps
xor
push
(bad)
pop
pop
push
shl
or
cmc
in
mov
or
test
fstp
cmp
pop
(bad)
stos
mov
adc
or
push
mov
nop
dec
adc
add
(bad)
cli
in
xchg
inc
je
pop
jge
(bad)
retf
mov
or
xchg
jg
aas
and
test
inc
out
push
jmp
sub
ret
dec
inc
sub
mov
cmp
cmc
lea
mov
push
hlt
mov
mov
sub
dec
jo
(bad)
das
cmp
adc
(bad)
ret
jp
es
inc
out
mov
out
mov
(bad)
xlat
icebp
dec
push
(bad)
aam
pop
cmps
leave
sbb
into
pop
popa
sbb
jl
call
mov
and
les
xchg
pop
or
mov
jbe
push
(bad)
jle
and
call
fcom
sbb
jp
xor
(bad)
ins
not
mov
outs
stc
sbb
clc
and
cmps
cdq
scas
push
xchg
nop
push
int
lock
call
push
enter
pop
xor
and
dec
mov
dec
gs
(bad)
clc
stos
outs
dec
adc
push
fsubrp
xor
sub
jo
loope
mov
mov
and
mov
adc
sbb
push
cmp
call
scas
jns
sbb
fucom
lea
retf
or
or
jns
dec
inc
lods
push
les
mov
data16
xchg
fld
dec
adc
gs
xchg
cli
dec
mov
xor
fcmovbe
imul
sub
rcr
hlt
adc
jp
mov
sub
(bad)
es
(bad)
(bad)
mov
or
jns
pop
das
sbb
add
test
dec
xchg
mov
xchg
or
fidivr
mov
call
jno
adc
stc
aad
cmp
xchg
rol
es
add
jl
inc
push
xchg
retf
div
je
xchg
and
dec
retf
jmp
cmp
mov
xchg
cli
aam
add
xor
ret
pop
loop
inc
dec
or
mov
sub
icebp
inc
fst
inc
and
mov
jno
repz
pop
std
jg
ds
mov
sbb
push
addps
cmps
push
dec
cs
pop
scas
pop
jmp
pop
(bad)
mov
mov
jle
scas
dec
dec
xchg
sub
adc
jne
add
jmp
mov
sbb
(bad)
jmp
xchg
rcr
jg
push
popf
gs
in
enter
call
stos
pusha
mov
nop
outs
add
jl
lea
imul
ins
repnz
dec
rcr
leave
dec
add
adc
aam
aad
test
leave
cmps
shl
or
ins
push
ret
push
out
aam
and
add
out
ss
out
mov
gs
or
pop
adc
icebp
ins
fnstcw
cwde
mov
ja
push
inc
add
mov
popf
pop
xchg
mov
inc
pusha
adc
xchg
ret
xor
jmp
cmp
xchg
lods
and
lods
test
push
call
(bad)
fst
call
int3
repnz
or
in
sbb
loop
aad
sbb
arpl
xchg
je
push
out
fst
loop
push
xlat
lock
cmp
mov
mov
fidivr
push
pop
inc
cmp
cmps
inc
add
(bad)
aad
shl
sub
and
cdq
sub
jno
(bad)
xchg
arpl
cli
xchg
outs
mov
push
mov
lock
or
mov
cmp
sti
adc
rcr
aam
adc
jecxz
arpl
dec
mov
push
jecxz
leave
jmp
aam
and
push
jne
jb
movs
xlat
push
and
(bad)
loopne
lahf
mov
mov
sub
xor
sub
(bad)
into
push
pop
mov
xlat
cmp
sbb
jmp
enter
repnz
mov
lods
mov
push
cs
scas
xlat
xor
xchg
jg
outs
daa
stos
stc
sbb
outs
mov
pop
lods
push
and
jecxz
(bad)
stc
mov
or
mov
mov
push
loop
inc
idiv
out
xlat
and
mov
lds
dec
and
cdq
xchg
movs
das
loopne
push
mov
pusha
push
adc
sub
clc
dec
xor
dec
dec
popa
add
outs
jns
fimul
cbw
or
pop
push
movs
lds
mov
mov
lods
cmp
xchg
push
bound
mov
shr
jmp
sbb
(bad)
mov
push
mov
loop
jp
cmp
jmp
push
inc
inc
or
mov
das
rcl
out
call
fwait
adc
aam
aas
xchg
dec
adc
nop
push
pop
mov
pop
mov
repz
cs
jno
mov
movs
xchg
lea
or
pop
adc
pop
lods
das
(bad)
fmul
cdq
and
dec
dec
xor
stos
fcomp
pop
dec
(bad)
fwait
push
stos
iret
mov
and
ret
call
dec
call
or
mov
daa
lock
out
sbb
push
cmp
jns
jmp
out
(bad)
ss
(bad)
dec
mov
lahf
pop
dec
test
add
add
jmp
pop
inc
cli
stc
adc
push
add
inc
xchg
es
aad
js
(bad)
xor
(bad)
cmp
push
jge
cli
adc
add
push
jo
sub
punpckhdq
enter
je
push
adc
leave
xchg
into
add
mov
mov
loopne
mov
jbe
repz
(bad)
stos
lods
add
push
shl
adc
pop
fiadd
dec
xchg
mul
sub
shl
xor
dec
mov
and
aas
nop
in
push
push
xor
push
test
jge
dec
ins
inc
mov
test
pushf
inc
xlat
lock
clc
ds
retf
leave
dec
ficom
mov
les
(bad)
jnp
sub
out
mov
inc
mov
fstp
or
xchg
out
pop
fs
sub
ins
ins
lds
je
pop
scas
sbb
call
cmp
sub
ss
pop
ss
ds
adc
xchg
jbe
mov
sub
je
push
mov
push
pop
addr16
fs
clc
sbb
pop
cdq
hlt
add
jmp
ins
cwde
mov
movs
adc
out
dec
push
outs
push
sahf
adc
in
loope
pusha
into
in
mov
fcmovu
sbb
hlt
cmp
jae
data16
pop
loope
nop
rol
test
dec
sbb
pop
mov
sahf
(bad)
mov
xor
xchg
imul
dec
movs
mov
xchg
lods
dec
mov
and
call
ins
adc
(bad)
sbb
mov
push
xor
mov
leave
popa
mov
inc
xor
loop
and
cmps
mov
rcr
dec
and
push
push
rol
arpl
test
mov
xchg
shl
std
leave
cs
aad
(bad)
popa
(bad)
xor
aam
into
mov
push
pop
addr16
or
mov
sbb
pop
stos
xlat
shl
ins
add
jae
or
leave
jae
(bad)
ja
xchg
push
jp
mov
ror
mov
jmp
sahf
and
scas
sti
adc
fidiv
repz
fdivr
cmp
adc
jo
dec
ja
sbb
sbb
outs
jle
mov
inc
cs
enter
shr
aaa
sub
mov
adc
pop
and
fld
cmp
movs
add
xlat
shl
mov
xchg
jns
mov
(bad)
jne
inc
mov
(bad)
ins
cld
cmp
loop
mov
in
mov
lods
pop
hlt
into
and
lock
cmp
jmp
push
fmul
imul
addr16
mov
adc
dec
mov
popf
push
ret
lock
or
inc
xchg
cwde
pushf
mov
adc
push
inc
leave
and
cmp
add
push
lock
and
and
sar
ins
inc
ds
icebp
jbe
push
js
push
mov
(bad)
sub
daa
adc
and
add
stos
call
in
push
adc
push
lods
pop
dec
push
mov
(bad)
mov
test
mov
mov
adc
cmps
push
sbb
mov
jns
shr
cmps
scas
pop
iret
push
jae
pop
shld
cli
sbb
pushf
fisttp
std
mov
jmp
dec
in
outs
mov
adc
ins
pop
sub
call
ss
ins
(bad)
test
dec
fsub
gs
test
xchg
in
jmp
inc
jmp
jbe
jmp
leave
ror
or
add
inc
out
push
cmp
jge
addr16
adc
ds
jl
inc
or
data16
dec
xchg
cmp
ret
add
mov
popa
ja
dec
jo
add
sub
cwde
mov
add
cmp
cmp
cmps
mov
mov
out
xor
or
jo
(bad)
int
pop
pushf
jne
ss
outs
out
sbb
or
fistp
loopne
lahf
out
outs
pop
imul
mov
mov
retf
jb
xor
aad
mov
fnstenv
adc
push
das
test
adc
pop
lea
mov
into
into
or
out
loopne
sub
inc
and
adc
rol
mov
jb
sbb
ret
aaa
or
push
cdq
cmp
inc
mov
nop
fimul
pop
or
pusha
test
iret
aam
sub
icebp
iret
xor
sub
or
sbb
pusha
stos
fwait
hlt
mov
int
cmp
mov
ja
loope
sub
cmc
aad
mov
js
(bad)
cmp
les
push
enter
push
mov
lods
add
xchg
fimul
push
mov
inc
popa
xchg
or
movs
addr16
int3
jmp
sar
mov
scas
fmul
lds
push
dec
dec
call
arpl
clc
(bad)
movhlps
mov
mov
ds
ss
cmp
sahf
inc
push
test
jmp
xor
and
mov
cdq
nop
mov
out
sbb
adc
clc
ja
jmp
dec
xor
call
dec
(bad)
jmp
(bad)
pusha
jae
jbe
push
test
jge
nop
add
mov
push
mov
xchg
pop
xor
xchg
out
loope
(bad)
fs
xor
mov
ret
nop/reserved
test
cmp
or
pop
dec
adc
dec
jnp
or
lods
and
in
jmp
mov
dec
adc
lods
and
ret
dec
js
mov
pushf
pop
jne
inc
mov
neg
test
(bad)
and
mov
stos
dec
jmp
lea
test
jae
mov
inc
and
fisubr
stos
jle
mov
sub
std
inc
adc
in
sbb
jmp
jo
adc
in
jle
jns
fldenv
dec
jle
push
call
(bad)
push
pop
mov
gs
fadd
sub
(bad)
pop
mov
mov
enter
xor
ja
mov
cmp
jmp
jmp
inc
jnp
and
sti
lahf
inc
mov
cmp
movs
jne
jle
jecxz
arpl
adc
cmp
std
ins
ss
cmps
jo
scas
add
jmp
stos
mov
(bad)
je
push
ret
jp
mov
movs
adc
xor
mov
jg
rcl
mov
jecxz
add
mov
ja
test
es
sahf
pop
jbe
xchg
in
xor
cli
sub
addr16
mov
dec
sub
mov
nop
or
repz
push
inc
enter
push
mov
sub
xchg
mov
mov
cmp
xchg
fdivr
in
ins
push
shr
jmp
pop
int3
ja
push
je
es
js
lea
(bad)
addr16
mov
inc
add
hlt
sbb
addr16
fdiv
xor
push
div
sbb
xor
pop
inc
pop
or
fimul
adc
dec
cmp
xor
dec
daa
icebp
repnz
pop
in
fstp
mov
fadd
inc
add
sbb
lods
fwait
cmps
and
out
dec
mov
sub
xor
jmp
sbb
xor
mov
xchg
pop
push
and
clc
jge
pop
sub
push
adc
ins
add
mov
in
test
sub
jmp
sub
push
or
popf
repnz
cmc
inc
les
adc
fisttp
fnstsw
push
jno
inc
add
pop
es
add
mov
sbb
cmps
int
out
jmp
retf
out
(bad)
ss
xchg
inc
dec
shl
adc
cmp
loope
jb
ret
jno
pop
inc
xchg
mov
mov
adc
inc
inc
int
jp
or
fs
dec
cmp
jecxz
hlt
mov
and
int
shl
mov
stos
jb
mov
push
lds
lock
mov
and
mov
call
ss
xor
in
xchg
aad
adc
data16
mov
mov
(bad)
icebp
mov
jnp
or
hlt
push
mov
in
push
pop
mov
repnz
movs
out
lods
mov
pop
stos
fmul
fld
in
xchg
in
xchg
std
jp
stos
int3
das
fwait
(bad)
lea
push
xchg
icebp
in
mov
lock
aad
daa
test
je
push
xor
call
aad
cmp
ins
pop
cmp
jl
xchg
das
pushf
mov
mov
xor
pusha
pop
mov
mov
add
pusha
adc
clc
(bad)
mov
pop
jae
jmp
(bad)
xchg
std
scas
mov
cmp
jl
ja
movs
nop
ja
ja
addr16
fisttp
cmp
loop
call
adc
mov
or
xor
cdq
adc
mov
out
push
mov
mov
dec
jg
inc
sbb
ret
out
lds
bound
lds
push
push
sub
dec
out
retf
mov
or
xchg
cmc
fs
fild
lds
inc
xchg
fcmove
(bad)
cmp
xchg
sub
mov
and
fcmovne
push
(bad)
mov
push
cmp
xchg
sub
cmp
add
leave
(bad)
imul
lds
mov
mov
mov
or
cmp
xor
ucomiss
inc
jb
or
sub
lock
mov
out
jmp
loope
ins
pushf
sub
xchg
ins
sub
and
pop
mov
xlat
push
std
in
xchg
mov
pop
(bad)
pushf
pop
jmp
out
lods
out
fisubr
cwde
jb
lds
and
dec
lahf
fisttp
lods
jge
or
test
mov
inc
add
fwait
dec
shl
xor
or
dec
pop
mov
int3
lods
int3
add
mov
inc
(bad)
ds
mov
rcl
dec
mov
mov
out
cs
ret
(bad)
cmp
outs
push
(bad)
out
pop
pusha
mov
ins
push
inc
mov
aaa
fdiv
xor
int
inc
test
bound
or
mov
int3
jno
mov
pop
enter
pop
adc
xchg
pusha
mov
xor
mov
ss
rcr
xchg
jg
icebp
cmp
lock
mov
imul
stos
jbe
mov
cmp
xor
rcr
mov
imul
inc
jle
mov
movs
mov
mov
icebp
mov
sbb
out
push
hlt
sbb
adc
test
sub
arpl
aaa
xor
pop
xchg
(bad)
pop
mov
repnz
sbb
mov
mov
in
pop
lods
push
inc
loope
in
xchg
adc
jle
pop
mov
xor
or
adc
pop
jbe
pop
push
cmp
ror
jl
mov
arpl
lahf
pop
iret
add
mov
arpl
sahf
arpl
mov
mov
xchg
xchg
sbb
and
dec
out
dec
mov
outs
and
popf
std
pop
in
jle
push
adc
pop
xor
shl
pusha
push
xchg
ficomp
jb
pusha
cmp
mov
pop
je
ins
jle
call
lea
inc
xchg
push
and
cmp
jne
add
rcl
(bad)
xchg
(bad)
sbb
ret
mov
dec
mov
mov
bound
mov
fld
(bad)
or
rcr
lds
(bad)
int
pop
ins
mov
mov
jl
pop
mov
popf
mov
inc
xor
sbb
fdiv
test
mov
and
mov
jg
push
adc
inc
bound
stos
sbb
call
jbe
mov
jl
pop
xchg
call
daa
(bad)
push
add
rol
or
push
cmp
xlat
call
xor
or
ss
(bad)
ret
xor
dec
sub
test
xchg
(bad)
sahf
pop
mov
inc
(bad)
std
dec
adc
or
(bad)
jle
xchg
loope
das
or
ret
cmps
add
xor
xchg
fst
push
pushf
cmp
es
cmp
in
arpl
rcl
mov
mov
pop
mov
call
into
dec
fild
and
aaa
sub
jg
out
xor
jle
sub
dec
dec
rcl
popf
loopne
test
push
inc
pop
xchg
pop
popa
push
xchg
mov
call
xor
(bad)
sahf
mov
jmp
ret
iret
xlat
test
mov
pop
adc
es
nop
aad
mov
xchg
or
(bad)
mov
cmp
hlt
cmps
fwait
mov
in
shl
and
mov
xchg
dec
aas
std
adc
pop
mov
push
ins
and
frstor
jnp
rcl
or
arpl
xor
int3
scas
data16
stc
ss
std
(bad)
mov
pop
jae
sbb
or
or
push
mov
shr
adc
or
cmc
sub
js
xor
jle
scas
push
les
jbe
push
sar
out
in
xor
ds
pop
enter
sub
fwait
in
mov
xchg
cwde
mov
mov
jmp
jnp
jnp
mov
(bad)
ja
or
into
add
xchg
mov
pop
cmp
push
sbb
addr16
inc
pop
aam
dec
cmp
in
outs
dec
aaa
stc
jp
or
mov
mov
repnz
movs
add
mov
cdq
stos
cmps
push
or
out
xchg
pop
adc
test
push
dec
dec
outs
add
mov
call
adc
xor
add
xchg
jnp
ror
mov
adc
or
les
int3
sbb
fnsave
shr
push
test
inc
(bad)
push
and
repnz
lds
push
or
sar
(bad)
in
std
movs
mov
xchg
dec
shl
cmps
mov
push
jne
out
sub
pop
mov
in
cmc
in
(bad)
repz
jg
aaa
in
mov
push
cmp
dec
inc
in
xchg
(bad)
xchg
clc
inc
fwait
outs
inc
sbb
inc
sbb
jg
(bad)
stos
fidiv
xor
mov
mov
sub
into
push
fnstenv
nop
(bad)
lds
mov
(bad)
jno
jae
lods
out
jno
pop
mov
inc
xlat
jecxz
and
dec
sbb
jne
xor
sub
shr
pop
push
sti
dec
xchg
mov
in
xor
cs
xchg
sub
(bad)
mov
pop
test
mov
and
popa
jl
dec
cmp
popa
mov
leave
popf
cmp
mov
cld
(bad)
cmp
jnp
cmp
test
ins
cmp
pop
lods
test
mov
sub
ficomp
push
test
js
adc
inc
mov
push
add
fwait
push
xor
jne
sbb
data16
iret
adc
cld
pop
(bad)
movs
sub
cmp
pop
cmp
jae
in
cmc
daa
out
sub
adc
rcr
jne
aas
push
or
add
cmp
sti
dec
out
mov
sub
outs
into
mov
popf
test
cmps
imul
(bad)
push
aad
pop
std
jl
jmp
mov
lods
and
enter
rol
test
sub
adc
mov
out
pop
adc
pop
cmp
popf
mov
jg
cld
test
test
adc
pop
sub
mov
pop
pop
xchg
nop
jecxz
pop
pop
and
xchg
inc
sub
pop
mov
sbb
mov
scas
push
adc
fstp
std
sbb
sub
cs
retf
sbb
jmp
int
xchg
call
xchg
bound
loope
not
retf
enter
xchg
pop
aas
and
xchg
pop
call
call
cmps
cmp
aam
jno
outs
repz
loopne
pop
scas
neg
xchg
fcomp
sub
stos
xchg
(bad)
fld
add
cs
retf
jmp
popf
int3
mov
call
sub
fsubp
jae
cmp
ret
hlt
icebp
xchg
add
jl
aam
push
loopne
test
sbb
jl
mov
(bad)
jnp
or
mov
or
js
mov
push
mov
out
aaa
fidiv
popf
jbe
int
mov
cmp
mov
xchg
xchg
fstp
shl
sbb
ret
das
test
mov
and
pop
fst
and
rcr
inc
mov
test
sbb
xor
popa
inc
pusha
addr16
jo
test
push
pushf
mov
clc
push
lods
bound
rcr
mov
mov
mov
push
add
mov
sub
in
lods
mov
dec
cmp
mov
mov
pop
mov
movs
in
out
lods
add
push
loopne
cwde
lock
pop
lods
lods
lods
inc
pusha
lods
pop
mov
fcom
jae
jno
sahf
shld
inc
add
lods
outs
outs
pushf
add
jecxz
es
test
ss
js
out
popf
pop
sub
test
dec
push
into
repz
mov
imul
cdq
ret
mov
popf
xchg
clc
jno
nop
ror
adc
or
test
jp
ret
dec
sahf
in
mov
dec
fs
xor
jg
cmp
xor
add
(bad)
cmc
movs
sbb
xchg
or
mov
ss
sbb
adc
stos
fs
(bad)
cdq
sbb
daa
fwait
xchg
jecxz
pop
call
adc
ss
dec
dec
aaa
xor
or
mov
fld
repz
fldcw
into
jge
pop
add
out
lahf
dec
aaa
mov
ins
pop
in
aam
pop
or
int
test
mov
das
dec
mov
aad
push
int3
je
or
mov
mov
gs
jno
loope
xchg
aam
pop
jno
xchg
mov
cld
mov
cwde
dec
ror
sbb
or
push
daa
cmp
push
cmp
ror
pop
lods
sbb
push
int
imul
inc
bound
ja
jecxz
adc
jl
push
mov
inc
stos
shl
mov
shl
clc
std
jne
data16
les
in
dec
and
sbb
loope
imul
adc
mov
xor
out
push
cmp
dec
pop
movs
adc
cmp
mov
icebp
mov
xor
loop
int3
sub
mov
sub
adc
pop
cmp
les
pushf
jo
jg
fld
aaa
jns
outs
es
test
mov
pop
mov
not
cmp
mov
xchg
cmp
cmp
std
icebp
mov
mov
cli
xor
retf
mov
(bad)
jo
scas
int
jb
mov
sar
fwait
iret
aam
add
das
and
test
popf
xchg
and
sbb
test
sub
hlt
sub
pop
mov
int
(bad)
test
jge
add
jle
cld
lock
cmp
dec
popa
cmp
xor
or
repz
mov
es
je
jno
cwde
clc
xor
lods
test
js
je
ds
fisub
punpcklbw
jne
ficom
sub
sub
sbb
and
push
inc
test
cmp
xchg
dec
inc
std
gs
scas
cmps
and
dec
add
stc
xchg
dec
xchg
int
arpl
ror
shr
mov
or
mov
cmp
add
sub
(bad)
shl
add
dec
sahf
lds
xlat
fmul
push
xor
xchg
push
xchg
fadd
ret
adc
mov
adc
test
mov
cmp
retf
pop
pop
imul
add
cmp
bound
add
adc
jmp
and
add
xchg
outs
add
mov
in
push
icebp
add
pusha
push
cmp
xlat
shr
jno
loope
es
mov
jbe
mov
adc
add
aad
pop
(bad)
jl
dec
kmovb
arpl
stos
int
ss
bound
cdq
cmp
(bad)
das
jne
mov
or
aam
movs
sbb
ds
push
fs
pop
adc
in
cdq
into
add
dec
push
mov
lock
mov
ds
test
mov
or
sbb
sbb
push
adc
in
cmp
add
mov
fdiv
pop
dec
mov
ror
fsub
aas
shl
lock
xor
out
dec
(bad)
aad
in
dec
lea
aad
in
imul
sub
movs
mov
lock
cs
inc
xor
dec
add
mov
aam
xor
pop
pusha
sub
xor
icebp
xor
dec
cmp
fmulp
mov
imul
dec
mov
aas
mov
arpl
adc
mov
mov
and
movs
cli
pop
jne
push
mov
lea
inc
adc
pop
cmc
ss
test
inc
jl
pop
(bad)
push
and
jo
pushf
ins
pop
or
iret
cmp
sbb
inc
mov
stos
sub
cmp
and
icebp
add
push
sbb
sub
cmp
loopne
xchg
push
push
loopne
add
mov
cmp
mov
add
popa
jns
das
dec
push
js
pop
js
ss
dec
shl
repz
hlt
mov
scas
call
std
adc
dec
iret
cmp
test
mov
adc
lock
fucomp
gs
cmc
ror
shl
jno
call
cmp
fidiv
xor
xor
outs
sub
xor
and
ds
inc
popa
or
push
cld
dec
dec
add
retf
mov
dec
push
adc
adc
ins
fisttp
sub
stos
push
out
and
pop
jns
xor
test
adc
sub
fdiv
enter
icebp
pop
mov
ret
outs
and
inc
fwait
mov
mov
and
iret
mov
xor
inc
push
clc
fistp
movs
mov
cld
cmp
or
push
imul
add
lods
mov
lahf
xlat
sbb
retf
mov
test
lahf
das
call
cmc
in
pop
test
xor
ds
jl
or
dec
adc
add
cmp
mov
inc
cs
sub
mov
(bad)
push
xchg
(bad)
push
pop
test
push
pop
jns
inc
stc
test
mov
and
test
mov
aam
mov
push
leave
sub
jae
or
inc
jb
in
cmp
adc
(bad)
out
call
(bad)
jns
mov
mov
xor
mov
test
fldcw
(bad)
mov
push
pop
rcr
shl
cwde
mov
add
xchg
add
mov
pop
fs
jl
je
stos
sub
inc
fxch
out
int3
cmp
xchg
inc
fisubr
out
dec
and
sub
cmps
ins
inc
adc
jo
or
sbb
inc
mov
xor
adc
shl
push
cmp
ret
or
push
sbb
out
sub
mov
push
lods
xchg
test
or
inc
add
push
je
xor
imul
in
xchg
cmps
int
inc
(bad)
in
out
stc
in
cli
and
dec
or
sub
jne
fucomp
int3
hlt
fsubr
bound
pop
sbb
fs
xor
gs
call
mov
outs
cmp
push
scas
nop
arpl
cmp
dec
push
imul
je
ret
repnz
(bad)
dec
jae
shl
sbb
arpl
pop
or
loopne
pop
(bad)
pop
xor
arpl
cmp
add
leave
(bad)
and
out
idiv
dec
loope
inc
mov
jo
xchg
nop
imul
push
dec
jge
cmp
inc
push
sahf
and
inc
or
or
imul
or
je
test
out
cld
fist
jae
loop
js
sub
popa
jnp
inc
and
inc
cmpps
cmp
idiv
mov
in
popf
inc
pop
ins
sub
sbb
cwde
mov
jle
jae
push
das
inc
mov
mov
out
jle
mov
cmp
jmp
mov
mov
das
sub
or
imul
adc
sub
push
mov
loop
lods
mov
or
stos
adc
in
push
int
push
pop
xchg
retf
jge
dec
repnz
push
dec
mov
or
jl
stc
pop
cdq
aaa
pop
stos
je
adc
sbb
dec
stos
or
mov
pop
push
mov
jecxz
sti
push
pop
stc
mov
dec
ret
sbb
pop
in
cmc
add
bound
rcl
(bad)
push
(bad)
push
or
sub
int
(bad)
jne
fsubr
push
push
movs
mov
fisubr
add
addr16
dec
cdq
dec
gs
mov
cmp
sub
xchg
mov
sbb
test
or
mov
and
fneni(8087
outs
hlt
xor
cmps
leave
es
bound
push
fdiv
aaa
scas
gs
xor
or
jb
cmps
iret
sub
xlat
push
sar
popa
adc
mov
out
sti
jg
imul
push
sbb
pop
xor
and
jle
pop
push
push
and
scas
mov
jnp
mov
mov
pop
retf
movs
jp
ins
sbb
bound
popa
int3
retf
pop
push
sub
(bad)
outs
pop
cmps
outs
aad
adc
or
mov
push
and
sbb
xchg
mov
or
and
mov
jae
ror
inc
pop
bound
dec
(bad)
mov
shr
cmp
lea
aaa
hlt
ret
(bad)
call
adc
scas
mov
jne
xchg
pop
std
mov
das
pop
imul
mov
add
sub
out
dec
xchg
cld
adc
push
push
mov
mov
aam
enter
and
xor
lock
imul
std
stos
call
and
adc
test
mov
pusha
out
lds
inc
out
loop
jle
fnstenv
imul
das
pop
int3
pop
pop
add
jns
xchg
test
mov
or
xchg
mov
data16
jecxz
daa
movs
add
ss
cmc
loopne
in
push
and
add
sbb
fmul
(bad)
pop
ds
sub
jge
jecxz
dec
and
xchg
ret
fisubr
nop
pop
xchg
loopne
push
sub
and
and
mov
in
xchg
out
(bad)
in
or
cmc
inc
jg
fistp
push
std
fwait
mov
fs
jg
ss
pop
retf
sub
xor
bound
sub
adc
add
rcr
mov
adc
xchg
repnz
mul
scas
lahf
stos
push
ret
fisttp
xor
mov
add
(bad)
(bad)
daa
cmp
mov
test
sbb
inc
or
adc
outs
shl
call
in
pop
xchg
ficomp
pop
lods
jb
cmp
sti
dec
bound
push
out
call
xor
push
xchg
cmp
out
rol
call
rol
movs
mov
mov
xchg
movs
call
push
xor
pop
lds
mov
clc
(bad)
sbb
aam
test
movs
rcl
cmp
fild
stc
sete
ja
daa
mov
cmp
retf
scas
or
in
mov
(bad)
cmp
ss
jg
mov
adc
aad
mov
mov
jnp
adc
test
bound
retf
sbb
jl
dec
xchg
xchg
sbb
cmp
mov
and
mov
data16
sub
int3
mov
mov
js
je
pusha
test
push
inc
loop
test
xchg
mov
fs
std
das
and
mov
inc
jp
mov
or
stc
pop
fcmovne
je
cmps
and
fdivr
mov
push
ret
sub
fwait
mov
into
cmp
xchg
cmp
(bad)
rcl
xchg
ins
and
cmp
xchg
mov
fbld
out
(bad)
repnz
aas
jo
dec
jb
(bad)
rcl
and
enter
rcl
in
push
inc
mov
sub
test
cwde
das
cld
mov
push
xchg
inc
loop
clc
xchg
mov
adc
cwde
stos
add
rcl
sub
aad
lods
imul
out
jg
push
add
sub
mov
sub
idiv
dec
out
sbb
and
sahf
dec
retf
arpl
es
jg
rcr
int3
dec
sar
in
xchg
cdq
pop
pop
in
jl
jno
ss
push
xchg
xchg
mov
jbe
mov
mov
cmp
test
(bad)
cli
add
test
rcr
xlat
arpl
add
out
(bad)
pop
add
cmc
(bad)
repz
push
(bad)
test
fstp
sub
jecxz
push
leave
and
pusha
fsubr
clc
lods
xchg
mov
push
xchg
pusha
ret
jge
push
or
push
pop
jge
retf
adc
das
ret
or
fld
rcl
cwde
push
lahf
outs
into
scas
in
aaa
add
inc
rol
cs
ins
and
inc
dec
pushf
xchg
adc
fldln2
dec
jp
fwait
in
bnd
cmp
cld
dec
clc
rcr
arpl
pop
loop
sub
lock
mov
jb
dec
outs
push
mov
xchg
inc
lds
adc
sbb
daa
inc
dec
fmul
push
pusha
sub
jl
dec
outs
lods
dec
mov
in
mov
outs
call
stos
aas
push
cmp
inc
sub
rcr
call
ins
out
inc
pop
cmp
push
push
dec
test
add
cmc
mov
std
pushf
push
mov
sbb
leave
ret
sbb
mov
push
xchg
sbb
add
lock
dec
fnstcw
test
(bad)
adc
in
mov
test
pop
sbb
inc
mov
push
loope
(bad)
(bad)
dec
push
xchg
or
push
aad
sti
popa
cmp
js
retf
fldcw
shr
fwait
pop
and
or
ret
rol
(bad)
mov
mov
neg
mov
movs
xchg
mov
dec
in
ins
popf
sub
jp
repz
add
aam
mov
aam
aaa
fucomp
and
cmp
cld
mov
jmp
cmp
cmp
mov
sub
rcr
scas
mov
or
call
xor
rcr
out
jbe
in
call
cmp
xchg
(bad)
repz
jnp
in
or
pop
shr
into
clc
(bad)
mov
cdq
xchg
fnstenv
inc
push
popa
(bad)
out
retf
(bad)
int
adc
push
aam
xchg
div
sahf
retf
sbb
mov
jmp
les
leave
popa
icebp
mov
scas
add
clc
inc
xor
inc
enter
or
jne
xor
adc
lods
sub
jbe
ficomp
repz
cmps
sub
pop
and
je
pop
push
xchg
cmps
dec
mov
and
lea
jbe
adc
call
test
sub
aam
ins
cmp
or
xor
(bad)
not
(bad)
xor
lds
out
call
int3
xor
inc
loopne
xchg
pop
xchg
xlat
lds
mov
neg
mov
ds
mov
gs
les
dec
adc
std
bound
and
mov
popa
cmc
pusha
repnz
dec
push
loopne
xchg
call
jo
mov
loopne
out
push
pusha
adc
dec
lds
stos
out
loop
bound
(bad)
sbb
lock
ret
aaa
adc
aad
aad
jmp
les
jmp
or
pop
dec
and
aam
lea
rdmsr
popa
dec
jns
xor
xchg
cmps
test
xor
movs
add
cmp
test
or
aad
push
adc
clc
jnp
and
out
and
arpl
popf
fisttp
sbb
dec
scas
dec
jne
ins
ss
push
out
mov
xor
push
and
jmp
sbb
in
push
pop
fs
jns
mov
loopne
sbb
add
je
shr
das
test
rcl
leave
dec
popf
xor
cmp
xchg
or
jb
ds
arpl
pushf
adc
push
xor
and
ret
sub
jp
jmp
xchg
pop
cli
pop
popa
xchg
out
(bad)
xchg
repnz
idiv
hlt
and
jae
in
xchg
popf
outs
dec
mov
xchg
inc
imul
and
stos
and
(bad)
pop
scas
or
outs
fisttp
out
and
sbb
sub
xchg
xlat
pop
add
xchg
add
adc
test
mov
sbb
pop
adc
cmp
add
retf
pop
shr
fnstenv
fdivr
xor
fldcw
sbb
or
leave
(bad)
mov
dec
jmp
dec
push
cmp
clc
sub
shl
test
sub
pop
mov
dec
rcl
mov
in
xlat
jmp
fnstcw
(bad)
fldcw
jg
sub
fst
test
dec
mov
cmp
(bad)
shl
cli
test
in
jo
push
ins
add
ins
out
clc
pop
cli
pop
pop
xor
movs
lock
sti
inc
aas
jecxz
inc
and
int3
jne
mov
fucomip
daa
jb
inc
xchg
push
jb
push
xor
lahf
pop
fnstsw
pushf
jbe
pop
and
lahf
dec
shl
call
pop
jb
push
jle
pop
test
adc
sbb
test
sub
inc
repz
xor
pop
pushf
mov
sub
push
xor
ins
push
jo
loopne
je
call
xchg
mov
iret
sbb
outs
pop
jp
or
pop
inc
mov
sbb
lods
fldcw
cmp
or
sbb
inc
pusha
inc
test
cld
dec
dec
cmps
(bad)
mov
sbb
xor
sub
loop
lock
jge
(bad)
cmp
mov
and
cmp
shr
mov
lock
pop
mov
mov
aam
and
lods
jmp
retf
mov
call
retf
test
in
sar
jbe
fwait
js
data16
retf
dec
push
inc
ret
in
enter
test
ins
xor
cmp
adc
xchg
aas
in
fwait
jne
pusha
mov
add
jecxz
add
lahf
gs
adc
mov
adc
retf
jnp
mov
retf
outs
pop
mov
aaa
jb
lea
fxch
popa
out
sbb
xchg
pop
sub
adc
xchg
loopne
mov
stos
or
(bad)
xchg
leave
aaa
gs
cli
mov
in
push
dec
ret
movs
dec
rcr
mov
pop
add
xchg
sub
call
shl
xchg
sbb
nop
adc
dec
inc
bound
repnz
nop
int
jnp
mov
push
jnp
lock
sub
push
adc
div
dec
scas
repz
pop
pop
inc
adc
(bad)
xchg
cmps
push
jp
adc
ror
retf
or
mov
inc
mov
and
and
int3
pusha
sub
fcom
adc
xchg
(bad)
push
mov
adc
popa
xchg
out
in
js
lods
lahf
xchg
push
xchg
ret
fdiv
sbb
add
ds
or
(bad)
fcomp
push
add
or
add
mov
je
popa
lea
and
(bad)
lahf
mov
mov
mov
sbb
icebp
mov
aaa
cmp
cmps
dec
in
push
dec
lods
pop
das
cmps
xor
dec
shl
mov
mov
mov
fimul
sub
jne
call
mov
adc
and
lods
lahf
adc
xchg
inc
int3
fst
sbb
sbb
and
out
sahf
es
int3
xchg
stos
sub
adc
jae
fdivrp
jo
loope
xchg
jnp
jns
xor
(bad)
lods
sbb
std
push
fcomp
cld
jmp
jp
sar
cmc
dec
xchg
lahf
pop
imul
mov
push
and
jmp
imul
fcmovnu
dec
fild
ret
repnz
fs
adc
add
sub
(bad)
(bad)
test
and
rcr
mov
sub
fdivr
arpl
in
push
repnz
mov
inc
sahf
fild
je
sub
or
xchg
mov
clc
cmp
mov
cmp
adc
cmps
dec
xchg
pop
cli
aad
(bad)
sbb
sub
js
in
gs
(bad)
and
lods
mov
int3
fdiv
xchg
jg
mov
pop
inc
jae
mov
dec
dec
sub
adc
bound
inc
shr
out
and
(bad)
dec
in
jge
aam
pop
stc
cmp
xor
test
push
js
and
(bad)
out
xor
clc
popa
(bad)
and
adc
cmp
out
sub
lea
ret
adc
out
gs
jnp
dec
loopne
cmp
test
jno
ja
pop
sub
mov
dec
and
daa
fisttp
dec
cmp
sub
imul
or
adc
hlt
pop
ins
rol
mov
push
imul
fbstp
pop
jmp
mov
imul
adc
daa
call
(bad)
push
or
mov
lock
push
cmc
cmp
cli
call
popa
stos
and
loopne
pop
push
ds
push
cmp
add
xchg
out
loope
sbb
add
sbb
bound
mov
pop
test
cwde
xor
repnz
icebp
push
mov
aam
mov
pop
push
fcomp
cmp
inc
push
sub
sub
ss
sub
mov
repnz
popf
ss
pop
adc
jmp
sbb
lds
shr
call
ins
cmps
iret
jl
push
dec
cmp
cld
sub
cmc
mov
xlat
pop
push
pop
inc
xor
sti
xchg
sbb
leave
js
aaa
and
jmp
addr16
imul
sbb
pop
nop
(bad)
lds
cmp
xchg
jmp
push
xor
jmp
ret
lahf
sub
and
push
xor
cmp
xor
leave
mov
add
pop
add
je
data16
jbe
xchg
aad
out
(bad)
sbb
or
popf
push
ds
mov
pushf
cwde
lds
in
jge
inc
stos
jns
and
push
call
jno
jnp
mov
hlt
in
or
fisubr
loopne
ins
pop
xor
test
adc
cmp
mov
xor
push
sbb
inc
ins
add
inc
aam
les
outs
mov
sbb
nop
or
aam
mov
lock
lock
icebp
fild
imul
push
add
repnz
jecxz
pusha
mov
xchg
or
outs
rcl
stc
sbb
sub
out
(bad)
xor
xchg
xor
inc
ins
cli
out
bound
ds
ret
adc
dec
mov
ds
xor
sahf
push
or
imul
mov
outs
pushf
pushf
bt
out
or
clc
repnz
sub
inc
movs
mov
cdq
ja
push
in
mov
adc
sbb
aaa
out
in
mov
dec
out
inc
sbb
int
and
xchg
aad
inc
mov
in
lods
arpl
in
test
icebp
mov
test
repz
ret
inc
aas
mov
rcr
outs
scas
scas
jecxz
mov
fsub
xor
ins
arpl
test
push
cmp
js
(bad)
cdq
lahf
rcr
ins
add
loope
or
fbstp
jb
jns
inc
mov
inc
dec
inc
sub
jge
loopne
dec
rol
xchg
adc
mov
aaa
outs
iret
xchg
(bad)
test
dec
mov
jp
repnz
push
inc
xchg
inc
sub
test
jmp
aas
mov
jge
push
dec
mov
shl
inc
sub
jecxz
and
pusha
xor
(bad)
(bad)
ins
hlt
mov
mov
and
call
mov
pop
adc
dec
mov
loop
and
test
int3
xlat
fst
cli
in
stos
fistp
xchg
(bad)
dec
or
dec
xor
test
std
and
lock
pop
xor
ret
and
or
iret
jbe
or
rol
mov
inc
mov
jp
inc
retf
int3
outs
adc
fisttp
push
inc
mov
das
sbb
dec
jl
dec
ins
inc
and
stos
shl
fadd
and
hlt
int3
call
inc
xor
dec
rcr
enter
das
adc
pop
pop
sub
ja
in
test
inc
xor
xchg
sbb
mul
movs
retf
arpl
imul
test
scas
cld
pop
mov
in
js
mov
sub
jne
pop
adc
sar
sbb
pop
jl
xchg
mov
sub
loopne
xchg
inc
cdq
js
lahf
sbb
pop
js
loopne
xchg
dec
ficomp
fwait
mov
je
xlat
or
mov
(bad)
and
in
mov
loopne
outs
std
inc
int3
mov
sub
push
aaa
imul
jno
enter
iret
push
daa
xor
das
jle
retf
imul
or
jo
xchg
es
mov
xchg
add
fistp
xchg
cs
bound
ret
cdq
movs
add
lds
cwde
sub
push
jmp
in
rcr
sbb
je
fadd
jmp
mov
loope
stc
inc
push
xor
mov
mov
cmps
(bad)
ror
pop
adc
jmp
stos
xor
jle
mov
ds
fwait
imul
std
mov
jo
fst
mov
imul
lahf
loope
popa
mov
sahf
dec
or
push
xchg
shld
fisub
add
and
lds
and
adc
loope
adc
(bad)
mov
inc
xor
mov
shl
sbb
sti
(bad)
dec
inc
movs
pop
xchg
dec
popa
xchg
push
xor
popa
inc
adc
dec
cld
idiv
clc
dec
adc
retf
out
(bad)
int
popf
pushf
jmp
jmp
xchg
hlt
lds
adc
cmp
and
rol
rcr
cld
push
dec
and
cld
adc
mov
or
cli
adc
jmpw
dec
sbb
xchg
jge
push
fs
mov
jne
test
push
inc
add
loope
mov
mov
into
cmp
mov
aas
lahf
mov
dec
(bad)
fldcw
pop
add
or
xlat
ins
shl
push
push
inc
mov
repz
push
outs
int3
pop
sub
inc
push
adc
pop
out
jne
mov
icebp
add
test
lahf
je
mov
fwait
xor
add
daa
adc
lea
out
cwde
sub
mov
sub
clc
mov
arpl
hlt
dec
push
data16
mov
cmp
xor
(bad)
mov
(bad)
xchg
mov
and
adc
cwde
dec
pop
leave
add
add
mov
or
std
push
sub
mov
mov
sbb
clc
jae
mov
jmp
dec
cmps
jmp
fsub
cli
fld
jmp
call
pop
add
mov
loopne
push
cmps
iret
adc
inc
push
scas
xchg
outs
mov
mov
pop
pop
add
xchg
push
ja
cdq
mov
push
xchg
add
out
arpl
cmp
jecxz
test
(bad)
mov
xor
lea
mov
push
jle
pop
or
sub
mov
sub
ins
xor
cli
mov
or
add
push
rcr
aas
and
shl
mov
or
push
cmp
rol
lea
leave
pop
xchg
adc
outs
mov
retf
lahf
inc
pop
inc
in
pop
jmp
sti
int
pop
(bad)
shl
ror
inc
shr
jp
xor
test
scas
repnz
jns
sbb
ret
mov
inc
in
daa
add
les
cwde
ja
pop
push
xor
data16
xchg
sub
js
xchg
sahf
dec
xchg
and
repz
sbb
arpl
adc
jae
pop
adc
push
pop
pop
xchg
cmps
push
jns
loope
ins
jo
stos
pop
lods
aas
sbb
daa
mov
inc
cmp
or
mov
addr16
test
mov
aad
sub
cld
call
pop
adc
addr16
or
mov
push
cmp
jbe
sbb
or
ret
fidiv
out
fsub
ret
adc
je
sub
xor
mov
in
mul
add
sub
addr16
dec
sub
rol
retf
mov
lods
pusha
push
ja
push
adc
fsub
dec
pop
jbe
rcr
shl
push
dec
aaa
add
mov
pop
(bad)
jle
(bad)
cmp
inc
and
mov
mov
jnp
push
hlt
dec
xchg
in
sub
inc
repnz
add
stos
cmp
xor
popf
jge
mov
fnsave
daa
call
scas
data16
repz
mov
(bad)
xor
pop
dec
xlat
xchg
not
stos
adc
test
push
mov
xchg
push
pop
into
mov
jp
loopne
ds
xacquire
call
fcomp
mov
inc
aad
pop
movs
icebp
add
js
iret
pop
jle
mov
add
mov
fimul
icebp
in
retf
sub
arpl
lds
cmp
push
dec
pop
arpl
xor
bound
aam
repnz
mov
push
(bad)
shr
clc
cli
xor
fld
fwait
xor
jp
cmp
mov
and
popf
movs
arpl
and
mov
(bad)
mov
das
sbb
dec
mov
add
loopne
in
push
sti
call
jg
test
jnp
sahf
shl
lds
jno
ss
cmp
sub
sub
sbb
adc
xchg
dec
out
(bad)
sub
scas
scas
cwde
jmp
scas
fild
dec
sub
dec
xchg
and
(bad)
rcl
cmp
fcomp
aam
and
int
xchg
mov
sbb
stos
mov
add
or
test
and
adc
jp
pop
sub
xchg
jl
(bad)
mov
cli
mov
lds
pop
fdivr
mov
hlt
jg
div
mov
add
cmc
stos
xchg
dec
(bad)
dec
not
pop
add
inc
les
fcmovbe
or
ret
ja
xor
xrelease
stos
stc
inc
push
xchg
xchg
aam
xchg
jns
jmp
js
add
retf
(bad)
mov
repz
push
mov
sbb
shr
xchg
int3
and
jb
add
loope
popf
dec
(bad)
in
push
sub
cmp
rol
in
lock
dec
mov
xor
cdq
(bad)
sbb
mov
gs
sbb
inc
jb
xchg
ffree
leave
jecxz
les
ret
inc
into
inc
fwait
and
ror
and
pop
pop
jnp
rcr
xchg
test
sub
jbe
inc
shl
rcl
test
test
ja
enter
test
add
js
inc
popf
outs
sbb
xchg
inc
sbb
sbb
fisub
mov
pop
(bad)
stc
in
clc
repnz
loope
push
sub
ins
sub
retf
out
ja
sbb
mov
pop
cld
push
inc
es
push
test
fidivr
into
mov
sti
jecxz
out
dec
mov
dec
or
shl
test
inc
sub
mov
stos
std
fnstenv
fbld
mov
xchg
sub
arpl
pop
ret
aas
fnstenv
cmps
test
mov
sbb
enter
addr16
jg
inc
sbb
add
jmp
and
mov
repnz
xchg
jecxz
out
jmp
ins
hlt
xor
stos
sub
mov
mov
xchg
mov
and
sbb
inc
mov
inc
mov
aaa
std
jno
ja
(bad)
movs
add
mov
mov
mov
aad
in
movs
jmp
jmp
xchg
aas
aam
repz
adc
sbb
adc
pushf
inc
lods
ror
scas
jae
push
cmp
or
ins
div
in
das
not
and
mov
enter
adc
test
movs
dec
stos
jbe
fsubr
iret
add
es
inc
fldcw
mov
pop
pop
scas
loope
cmp
lods
xchg
add
pushf
sahf
mov
xchg
bound
aam
iret
xchg
xor
out
test
sar
cmp
cmp
dec
jno
mov
mov
lea
push
and
fs
and
and
pop
in
stc
dec
sar
fidiv
jo
test
ds
fdiv
mov
das
xchg
leave
(bad)
dec
loopne
pop
pop
aam
lock
jo
(bad)
xchg
dec
bound
pop
lea
(bad)
fist
stos
and
jo
jmp
push
xchg
out
retf
ja
inc
xor
mov
push
mov
scas
in
int
fsubr
fnsave
mov
mov
hlt
xchg
ficom
push
sysenter
mov
mov
mov
call
shr
push
ud2
pop
fs
aad
dec
adc
mov
sti
ss
int3
mov
pop
fiadd
int
ret
xlat
push
fucomip
iret
outs
dec
xchg
cmc
cmp
pop
aaa
shr
push
inc
mov
sahf
pop
dec
cmp
push
nop
data16
lea
lds
jnp
imul
loop
mov
jbe
outs
ins
ds
div
mov
das
dec
mov
pop
xor
sub
pop
jmp
cmp
mov
mul
sbb
test
dec
xchg
or
push
neg
aaa
je
pop
pop
loope
sub
and
leave
inc
aam
push
mov
sbb
mov
add
stos
outs
mov
in
jne
mov
dec
and
mov
test
fsubr
test
mov
mov
shl
imul
inc
(bad)
rol
mov
(bad)
in
mov
xchg
xor
mov
push
mov
out
jg
mov
jg
sbb
push
aas
movs
sub
xor
pusha
xchg
mov
les
fidiv
lods
retf
jbe
mov
mov
inc
mov
and
hlt
cmp
cmps
ret
fnstenv
dec
or
sbb
call
popf
gs
cmps
pop
inc
jo
enter
mov
jbe
and
ins
add
fstp
inc
mov
rcr
leave
adc
repz
cmp
pusha
bound
das
cmp
ins
(bad)
stc
sub
pushf
aad
push
sbb
cwde
lahf
fild
sar
bound
push
add
xchg
push
ret
adc
ins
xchg
inc
bound
cmp
inc
dec
out
pop
bound
imul
in
mov
shr
sti
xchg
adc
jne
cmp
dec
inc
fmul
sub
xlat
xchg
dec
sbb
cmp
add
pop
retf
dec
mov
stc
mov
(bad)
lock
ret
es
outs
pop
sbb
inc
repnz
pusha
adc
js
ds
mul
retf
test
push
adc
push
adc
mov
aad
in
pop
enter
cmp
sub
fild
cdq
arpl
outs
pop
shl
mov
mov
and
out
mov
test
or
push
xchg
jnp
shl
sbb
fdiv
or
push
pop
adc
lds
test
repnz
icebp
xor
inc
mov
mov
mov
jmp
dec
sub
int3
mov
mov
gs
inc
xor
pop
fiadd
test
ret
ret
mov
pushf
fcom
fs
movs
sbb
lock
jle
int3
or
scas
pop
and
pop
mov
ds
das
popa
sti
jmp
test
mov
out
fsub
xor
scas
sbb
leave
push
pop
add
mov
dec
push
fsubr
mov
mov
dec
jo
dec
xchg
cli
adc
ja
loope
scas
movs
mov
jb
push
icebp
vpmacssdql
inc
cmp
inc
dec
dec
xor
dec
cmps
lock
js
iret
push
inc
push
jno
xchg
xchg
cmp
scas
(bad)
cmps
pusha
push
out
and
sub
mov
push
cmp
and
mov
adc
push
retf
call
pop
dec
shr
mov
cmp
data16
popf
mov
mov
xor
jb
cmc
scas
aam
fistp
test
add
and
pop
xchg
shl
inc
pop
inc
iret
aaa
out
mov
xlat
jbe
call
imul
call
sub
cld
push
sbb
sub
fstp
je
imul
cmc
out
jno
hlt
add
xchg
fisubr
(bad)
adc
xor
pop
sbb
xchg
and
jl
ss
out
push
inc
cwde
and
pop
xchg
shr
dec
mov
add
inc
ins
adc
mov
psubusb
jl
retf
jg
jmp
repnz
adc
outs
mov
cld
movs
push
leave
push
or
ds
es
test
std
fld
ss
dec
add
sbb
pop
aaa
lods
sub
in
out
fidiv
shl
(bad)
jnp
mov
call
icebp
or
gs
sbb
cmp
nop
cs
(bad)
fwait
jmp
in
(bad)
(bad)
(bad)
cli
push
stc
xchg
cmp
aam
mov
sub
(bad)
cli
fwait
cmp
jae
xchg
or
sbb
hlt
or
push
fs
or
mov
xor
cmp
and
stos
push
ja
outs
out
mov
sti
jno
fstp
xor
xor
(bad)
lds
add
and
sub
mov
pop
aas
call
sub
dec
sbb
mov
adc
pushf
mov
push
aaa
sub
iret
push
and
imul
xor
pop
lods
aas
lods
cmc
(bad)
cld
outs
vmovapd
enter
xchg
dec
imul
(bad)
jmp
cs
js
or
mov
retf
leave
repz
sub
addr16
cmp
cmps
sub
mov
mov
je
call
xchg
xchg
pop
jmp
retf
(bad)
adc
out
push
pop
mov
jge
pop
stc
and
push
cmp
das
push
stos
daa
and
test
and
retf
mov
popa
or
jl
dec
mov
and
stos
bound
fadd
imul
dec
loop
pop
cmp
dec
out
sub
push
push
jg
push
daa
fistp
scas
out
jg
xchg
out
stos
jl
test
cmps
aaa
push
cdq
aaa
cmp
sbb
gs
jae
add
sbb
push
pop
lods
nop
inc
stos
mov
(bad)
lock
gs
shr
shl
shl
xchg
xchg
ins
js
cld
mov
pusha
cmps
iret
les
and
mov
lock
add
sub
inc
and
push
mov
jns
aas
(bad)
jg
jb
inc
movs
sub
xchg
and
leave
mov
int
stos
mov
addr16
scas
leave
and
jp
repz
mov
out
or
xchg
sbb
cld
fwait
leave
xchg
adc
push
loop
fucom
ja
ins
or
cwde
ss
lea
sbb
sub
mov
aas
out
xchg
dec
mov
js
cmp
scas
lock
test
and
jecxz
sub
inc
icebp
fs
inc
add
push
sahf
and
or
jp
popf
push
jno
inc
jns
adc
cmc
(bad)
call
adc
ret
mov
inc
cmps
adc
and
not
retf
lahf
add
pop
cmps
lods
fcmovnu
clc
mov
(bad)
and
out
add
out
mov
icebp
jmp
imul
jnp
(bad)
aad
dec
jecxz
adc
adc
pop
fsubr
add
in
or
adc
push
fld
cmps
pop
ins
clc
xor
in
outs
cli
jo
repnz
ss
push
out
sub
xor
cdq
xchg
sbb
sub
les
test
mov
fst
stos
push
cmc
mov
pushf
in
adc
popf
push
cli
xchg
dec
cmp
jge
adc
push
movs
lock
jl
mov
in
int
mov
cld
cmc
out
add
shl
ja
std
inc
shr
scas
test
out
jmp
cdq
call
(bad)
lahf
in
cmps
add
adc
cmp
inc
fldl2t
loope
sub
jmp
sub
cmp
mov
and
xor
leave
jno
fbstp
add
xchg
or
dec
test
btr
out
je
adc
gs
outs
xor
pop
sub
clts
and
mov
add
xor
in
xchg
repz
mov
lock
mov
mov
cdq
jp
inc
dec
imul
and
sbb
mov
gs
jnp
arpl
cmp
mov
test
sbb
mov
cmp
cli
jp
popf
xchg
pop
or
adc
pop
gs
in
(bad)
sar
(bad)
mov
mov
(bad)
dec
pusha
push
sbb
mov
pop
(bad)
mov
and
push
mov
ret
test
sub
push
sub
mov
loope
shl
in
fwait
(bad)
ins
mov
pop
jmp
arpl
mov
jecxz
inc
hlt
or
mov
mov
(bad)
fcmovnu
or
jbe
test
jno
fdivr
jmp
jne
in
pop
pmuludq
outs
adc
in
cdq
adc
fisubr
test
mov
fmul
xor
jo
sub
outs
and
xor
into
adc
retf
sbb
sbb
add
movs
in
mov
rcl
xchg
mov
(bad)
sub
loope
dec
hlt
test
jl
stos
rol
xchg
into
xor
jg
or
mov
imul
or
ds
leave
xchg
in
aas
(bad)
fst
ret
iret
lock
out
mov
cdq
xchg
mov
jnp
inc
dec
cs
retf
std
in
cmp
jb
cs
(bad)
sbb
daa
loope
iret
pop
out
add
fadd
mov
stos
mov
bound
bound
mov
jmp
leave
call
or
cmps
jl
sub
sub
ffree
xor
fst
rol
or
mul
retf
push
mov
push
mov
and
in
arpl
inc
or
mov
xchg
gs
mov
jo
cmp
adc
inc
inc
jmp
and
sbb
xchg
cmp
sbb
inc
mov
mov
sub
(bad)
adc
mov
in
pop
cmc
adc
loope
js
std
out
xchg
mov
push
jmp
movs
inc
std
sbb
imul
pop
mov
sar
cmp
dec
sub
push
adc
aas
pop
fs
data16
fcomp
push
sbb
test
pop
leave
add
sti
dec
je
dec
jle
or
sub
jne
test
stc
loopne
adc
sbb
stos
sbb
mov
xchg
clc
or
mov
add
shl
out
ja
enter
mov
sub
adc
imul
mov
call
xchg
test
hlt
pop
inc
stos
test
aaa
rol
jns
je
xchg
ret
lds
adc
jno
mov
(bad)
jmp
(bad)
mov
jns
sub
cli
sbb
ja
loop
les
inc
dec
mov
pop
fldcw
xchg
std
fild
jmp
push
add
push
push
cmps
add
nop
inc
push
aas
sbb
mov
out
cmp
inc
and
push
aas
call
xchg
les
out
data16
pop
and
jmp
push
(bad)
xor
sbb
cmp
in
xchg
push
cdq
dec
sets
xchg
xchg
mov
call
cmp
mov
(bad)
(bad)
fisub
inc
pusha
sub
mov
in
add
or
fmul
push
pop
adc
adc
fwait
mov
mov
mov
inc
hlt
xchg
aaa
fwait
test
clc
jmp
inc
pop
cs
scas
imul
cmp
inc
dec
xchg
push
adc
in
mov
inc
and
mov
fiadd
lds
pop
inc
clc
pop
aam
jg
xchg
inc
loopne
jecxz
nop
jb
clc
test
into
rcl
jne
adc
mov
mov
xlat
xchg
sub
sar
(bad)
outs
add
dec
(bad)
mov
(bad)
(bad)
xor
cmp
fs
mov
int3
in
in
sub
sbb
out
jno
cmp
xchg
jne
inc
jle
push
and
cmp
es
adc
clc
adc
fdivrp
sub
xchg
sbb
daa
pop
jp
popa
mul
inc
mov
cmp
mov
push
jecxz
jno
add
jge
jns
push
test
xchg
dec
das
mov
push
mov
adc
mov
xor
outs
push
pop
mov
loope
mov
mov
inc
cmc
mov
cmp
sub
mov
xor
mov
cmp
jne
ins
(bad)
fstp
gs
aad
adc
adc
(bad)
mov
or
inc
cmp
cmp
inc
add
mov
(bad)
sub
rcr
(bad)
outs
jp
push
movs
add
dec
stc
adc
push
pop
adc
or
inc
sub
mov
stos
fisttp
add
aam
sbb
test
jge
setae
sbb
and
mov
test
sbb
jecxz
xor
push
or
xchg
aas
jecxz
lods
pop
aas
mov
daa
mov
push
sbb
jle
into
ss
pop
out
mov
int3
xor
inc
retf
and
or
sbb
and
cwde
pop
in
pop
scas
sbb
mov
mov
test
adc
sub
pusha
push
or
lods
movs
jecxz
les
ret
dec
test
mov
into
sar
inc
scas
shl
jge
sbb
mov
fimul
mov
fld
and
sub
aad
es
mov
arpl
cmp
lods
(bad)
jnp
sub
lahf
push
pop
retf
sub
jb
mov
std
out
lock
cld
xchg
lock
mov
das
add
sub
stc
out
push
ret
adc
mov
adc
add
pop
inc
push
imul
jle
dec
mov
repz
sbb
movs
ret
and
stos
sub
je
(bad)
iret
pop
scas
cwde
jbe
retf
div
mov
aaa
aaa
clc
into
dec
pop
lods
mov
or
adc
mov
nop
or
mov
ror
movs
cmp
nop
dec
pop
xchg
pop
xchg
mov
xchg
or
stos
and
outs
add
sbb
jmp
push
je
das
mov
std
sub
xchg
pop
mov
mov
movs
and
(bad)
xchg
xchg
mov
lea
pop
dec
pop
outs
and
pop
icebp
das
retf
lods
test
push
dec
sbb
cdq
rol
dec
sbb
dec
xchg
in
mov
aaa
mov
or
(bad)
in
cmp
mov
lods
cs
mov
and
pop
pop
dec
push
jnp
push
push
xor
outs
mov
ins
jecxz
in
jp
imul
inc
jle
sti
test
(bad)
push
pop
push
jns
out
ins
inc
jle
jge
fstp
mov
mov
pop
push
mov
mov
mov
or
xchg
mov
popa
cld
mov
movs
push
(bad)
xchg
bound
or
inc
out
push
outs
xchg
pop
mov
outs
aas
push
js
push
cmc
dec
dec
in
outs
mov
popa
sahf
mov
or
jne
loop
add
clc
fisttp
inc
inc
jns
scas
pushf
aaa
gs
cmp
sbb
imul
(bad)
mov
pop
inc
das
mov
and
(bad)
in
sahf
dec
loope
shl
push
mov
fld
aam
pop
ins
push
dec
pop
sbb
add
lock
adc
fwait
jp
xlat
dec
cmp
sbb
sbb
push
loop
out
retf
cmp
loope
out
push
fs
cmp
std
(bad)
or
push
pusha
mov
(bad)
inc
cdq
iret
cmp
pushf
in
adc
fst
sub
loop
int
leave
pop
push
aad
adc
add
pop
add
test
mov
mov
inc
sub
pop
jnp
data16
mov
mov
xchg
jns
cmp
icebp
cmp
repz
xor
xor
(bad)
std
lahf
mov
shl
aad
mov
lods
std
sti
aas
ret
jg
mov
imul
js
test
call
xor
loopne
inc
jae
mov
sbb
shl
xor
jmp
mov
scas
int
icebp
popa
ror
and
and
int3
jge
ins
into
rcr
enter
loope
mov
cmp
sub
pop
jecxz
int3
stc
aad
jo
jge
(bad)
cmps
and
or
jge
cs
mov
fimul
mov
mov
mov
xchg
or
inc
stc
push
adc
imul
mov
aaa
dec
out
xchg
xor
nop
scas
adc
sbb
pop
(bad)
fadd
popa
daa
(bad)
pop
stos
jecxz
loope
and
fimul
mov
or
mov
push
call
inc
fisubr
and
in
add
cmp
push
int
(bad)
(bad)
repnz
dec
mov
xor
pop
ret
(bad)
dec
fistp
pop
cmps
jle
sar
mov
pop
inc
lods
mov
lods
inc
sub
inc
jmp
test
inc
stos
mov
adc
mov
jae
out
iret
aam
pop
mov
inc
dec
jb
in
push
int3
push
or
les
out
dec
mov
inc
fiadd
dec
mov
add
mov
ss
test
sub
lock
retf
into
dec
mov
sub
aam
fnstenv
push
dec
loopne
daa
(bad)
sbb
mov
ds
xor
mov
mov
in
cs
mov
cmp
dec
(bad)
lahf
jbe
xchg
mov
inc
fs
push
jnp
(bad)
add
dec
jg
test
xor
xlat
xor
mov
adc
ret
push
out
dec
add
mov
pop
push
inc
dec
dec
shr
cli
or
pusha
sar
and
xor
xchg
cmc
call
nop
xchg
ins
call
aaa
mov
dec
mov
outs
xchg
test
cs
fistp
mov
into
stc
dec
dec
ja
retf
lods
xchg
jbe
pop
dec
iret
and
add
or
cmp
jge
add
shl
and
jb
mov
in
mov
dec
shl
cld
mov
imul
ret
leave
aaa
xchg
push
idiv
shl
je
lds
das
pop
mov
jno
jge
jns
(bad)
mov
int
div
xchg
call
push
inc
stc
or
movs
pop
pop
dec
jne
xchg
scas
push
dec
div
cmp
xchg
xor
adc
mov
jmp
rol
dec
aaa
or
sbb
or
das
inc
pop
aam
mov
out
vmovntps
mov
cmc
dec
mov
add
ss
fstp
movs
punpckldq
gs
pop
mov
pcmpeqb
rcl
stos
aad
mov
pop
(bad)
mov
in
adc
out
test
mov
icebp
gs
xchg
mov
cmp
sub
ins
popa
jb
(bad)
imul
popa
push
xchg
sub
inc
dec
pop
mul
mov
pop
push
int3
xchg
enter
pop
repz
or
adc
push
xchg
dec
pop
jp
out
push
int
adc
push
adc
cld
sbb
sbb
div
loop
or
int3
inc
inc
ds
gs
out
sar
xchg
jl
xor
sbb
lods
xchg
xor
ins
or
pop
scas
nop
adc
mov
add
fisubr
out
dec
and
mov
out
aas
jp
xchg
inc
jmp
fiadd
or
cmp
mov
sub
aam
mov
xor
inc
jg
cwde
mov
pusha
(bad)
fnstcw
dec
push
stos
jb
add
or
test
je
in
int
sar
pop
mov
mov
leave
hlt
iret
in
inc
shl
clc
cs
mov
jmp
fstp
push
cvtdq2ps
fisttp
xchg
addr16
call
mov
pop
cmp
fbstp
cdq
dec
cwde
and
mov
dec
stos
in
push
mov
ds
rcl
xchg
sbb
ror
jp
mov
push
ss
gs
iret
inc
cmc
je
xchg
sub
add
in
retf
dec
shr
mov
iret
test
gs
and
sub
cmp
add
(bad)
cdq
jnp
jmp
fst
adc
hlt
inc
cld
jnp
bnd
xchg
cmps
push
push
pop
in
mov
xchg
gs
cwde
adc
push
xor
mov
or
xchg
(bad)
jmp
dec
lea
popa
xlat
ins
add
xchg
retf
inc
sbb
fsubr
adc
movs
or
imul
push
sub
sar
jmp
cmp
xchg
sar
aaa
lds
dec
(bad)
les
enter
mov
and
jns
add
sub
push
imul
ja
and
and
scas
pop
repnz
or
jbe
rcl
sub
(bad)
mov
cld
cmp
shl
clc
fs
jmp
out
xchg
jmp
jp
cmp
pop
mov
rcr
lods
pop
popf
adc
rcr
mov
adc
shl
push
dec
jge
js
lea
mov
and
xor
test
pop
out
push
fist
(bad)
out
pusha
mov
rcr
daa
into
dec
adc
dec
mov
daa
jecxz
test
inc
xlat
popa
sar
cmp
ins
(bad)
imul
inc
jo
sub
xchg
stos
enter
dec
or
sbb
call
lods
and
outs
or
pop
xchg
xor
lods
aad
pop
out
es
sub
nop
test
jp
adc
adc
add
jnp
ret
lods
popf
in
push
lahf
ins
inc
adc
jns
(bad)
imul
mov
popa
sbb
jg
mov
pop
mov
xchg
jmp
push
stc
div
sub
sbb
enter
cmp
dec
add
scas
inc
js
xchg
lods
lods
ins
sbb
mov
fist
pop
rcr
inc
cmp
mov
enter
cmp
ret
mov
sar
adc
pop
mov
js
adc
imul
aad
pop
js
imul
jg
clc
mov
push
mov
xor
jbe
add
cmp
test
ja
pop
scas
in
int3
fdiv
aas
add
imul
cmp
ffreep
in
jno
mov
push
cmp
pop
fdivr
js
jle
arpl
(bad)
xchg
sar
inc
imul
sbb
jo
and
pop
clc
ins
cmp
mov
mov
push
mov
jb
add
jmp
cmps
cmp
lock
(bad)
repnz
cwde
and
fnstenv
dec
in
xchg
jge
rcr
xchg
div
xchg
mov
cmp
rol
inc
jne
mov
mov
arpl
jmp
xchg
dec
dec
pop
jl
cld
sub
and
ja
adc
ins
or
lods
mov
call
mov
and
scas
sbb
shl
fist
cmp
fs
das
adc
sub
mov
(bad)
xchg
dec
xor
xlat
xor
sbb
inc
out
sub
std
pop
lods
pop
inc
and
loopne
fwait
push
push
or
out
adc
mov
ret
in
or
ret
js
dec
inc
add
rol
sahf
push
into
sbb
mov
pop
pushf
jb
pop
xor
and
mov
not
les
xchg
sbb
enter
lea
xchg
pusha
mov
sbb
xchg
cs
outs
test
add
daa
xlat
daa
inc
push
sbb
sti
fild
dec
(bad)
cmps
and
fmulp
retf
ss
and
pop
icebp
pop
pop
sti
add
fld
inc
dec
out
fdivr
sub
aam
ret
sahf
dec
adc
push
sbb
mov
jns
out
mov
pop
lahf
in
(bad)
movs
stos
fs
dec
xchg
(bad)
(bad)
mov
add
fmul
push
test
cmp
std
addr16
stos
rcr
cmp
xlat
lock
aad
sub
inc
rol
pop
mov
pushf
pop
push
mov
sar
icebp
clc
aaa
pop
bound
(bad)
sbb
out
fsubr
inc
mov
sbb
into
leave
cmp
ret
lods
call
cs
inc
dec
or
dec
imul
cmp
jge
jo
movq
mov
adc
outs
(bad)
inc
js
fisub
or
pop
lods
cmp
sub
mov
sub
into
and
adc
xor
fsub
gs
rol
push
xchg
nop
aas
sub
cdq
fist
add
pop
jmp
jne
imul
cmp
xor
dec
dec
pop
mov
push
loop
mov
sbb
jg
and
push
int
scas
xor
and
fistp
jmp
out
jne
bound
adc
fdiv
fadd
jmp
xchg
jbe
add
popf
cmp
adc
cmp
inc
out
imul
fst
mov
pop
pushf
push
mov
rcr
fcom
cmp
jb
movs
inc
inc
sbb
arpl
mov
clc
or
add
(bad)
sbb
popf
sbb
mov
adc
cmp
fcmovnbe
and
aad
cmp
clc
and
pop
add
cwde
nop
cmp
xor
xor
ret
and
jne
push
pushf
sub
sbb
in
jae
(bad)
and
out
shl
popf
dec
sub
sub
mov
cmc
shr
pop
ja
loope
fs
sub
adc
call
adc
(bad)
sbb
mov
out
lea
neg
add
xor
retf
sub
adc
xor
imul
pop
dec
jb
outs
outs
(bad)
xor
popf
jge
xchg
test
rcr
aad
mov
pop
or
imul
adc
sub
les
cmp
je
fstp
daa
out
cwde
nop
add
xchg
sub
mov
icebp
ret
sbb
(bad)
fwait
in
in
shr
sub
lds
loop
cmp
xchg
xor
clc
pop
jge
gs
ins
dec
dec
mov
test
mov
retf
jne
ss
lods
jecxz
out
sub
jno
movs
push
xchg
push
push
xor
add
aam
and
jne
xor
and
cmp
mov
xor
js
rcl
mov
fadd
jnp
xor
xor
out
shr
scas
push
dec
xchg
jp
adc
ret
and
mov
stc
ss
cmp
cmp
repnz
fsubr
test
push
rcr
int
xchg
mov
jl
nop
loope
bound
push
inc
sbb
jmp
push
cmp
gs
cmp
aad
enter
lahf
outs
fs
clc
jl
jmp
arpl
and
push
loope
push
jg
jmp
xchg
add
movs
call
push
add
add
out
mov
ja
dec
ret
les
and
mov
lods
aad
jbe
fdiv
cmp
mov
stos
shr
in
mov
and
dec
int
mov
add
sbb
in
inc
int
or
sbb
sbb
mov
pop
out
jp
in
in
jnp
imul
xlat
retf
xor
clc
(bad)
mov
(bad)
lods
sbb
adc
inc
cli
add
or
adc
pushf
ret
xchg
adc
rcr
cmp
in
fadd
(bad)
mov
mov
ror
xchg
ret
mov
jb
xchg
leave
sub
loope
mov
pop
icebp
jbe
push
adc
popf
pop
sbb
out
movs
pop
pop
jno
dec
jmp
call
lods
or
inc
es
rcl
jb
dec
mov
iret
sub
and
jno
ficomp
mov
dec
adc
out
lods
inc
xchg
jp
add
sbb
mov
push
bound
test
outs
in
mov
jecxz
mov
repnz
jae
pop
div
add
push
(bad)
inc
dec
leave
adc
or
call
pop
mov
lea
test
add
hlt
inc
das
push
adc
out
pop
loope
daa
ja
hlt
sbb
and
mov
and
xor
or
sbb
xor
aaa
add
mov
into
mov
clc
(bad)
and
das
jne
add
in
ror
mov
jne
repnz
push
sbb
loope
xchg
mov
loopne
mov
sub
cmp
in
cli
mov
sbb
les
mov
js
test
cmps
enter
mov
add
aaa
cmp
mov
mov
sub
jae
movs
mov
in
mov
pop
add
sahf
cmp
and
call
mov
pop
mov
lds
and
daa
cmp
sbb
in
jns
inc
cmc
aaa
daa
movs
imul
jno
and
add
and
repz
outs
sub
lea
jg
stos
int
xor
test
sbb
lock
enter
jg
and
les
or
out
out
and
ins
and
dec
arpl
rol
cmp
sub
or
mov
fdivr
dec
pop
sub
jno
enter
icebp
mov
ror
sar
data16
pop
cmp
iret
xchg
xchg
out
sar
cmp
pop
pushf
cmp
das
pop
scas
mov
mov
push
add
dec
fs
mov
dec
iret
ins
sbb
sbb
sbb
jns
push
call
mov
jecxz
sbb
inc
sub
dec
in
sahf
pop
dec
mov
nop
and
xor
push
ins
sar
iret
and
leave
stos
inc
aad
dec
mov
sahf
or
sub
es
sub
fist
pusha
jmp
jle
push
sub
ins
mov
inc
movs
fnsave
ins
sbb
sbb
xor
push
pop
aad
xchg
xchg
pop
jno
fs
mov
jecxz
ret
xchg
mov
xor
sub
in
retf
jns
sti
dec
mov
dec
pop
aas
ja
mov
sub
pop
stos
xor
stos
data16
inc
shr
cli
xchg
sub
enter
fwait
cwde
ret
jb
sbb
push
inc
shl
cmp
xor
(bad)
retf
fwait
sar
sar
adc
ja
xchg
adc
mul
ins
(bad)
cli
sbb
or
inc
loop
lock
aaa
rcl
fs
pop
cmp
cmp
(bad)
or
mov
sbb
test
js
(bad)
in
mov
je
add
mov
mov
and
dec
pop
xor
jmp
mov
ret
jecxz
inc
and
aaa
xchg
xor
xor
mov
and
xor
sti
adc
pop
mov
jge
repz
adc
or
ret
dec
mov
lods
jle
mov
sbb
scas
pop
fidivr
xor
mov
mov
pop
mov
fistp
popa
and
imul
push
div
std
dec
les
test
push
inc
ret
adc
outs
dec
in
mul
jbe
fild
movs
mov
data16
scas
sahf
jb
lods
cmp
sub
mov
pop
imul
push
dec
xchg
xor
imul
jle
inc
daa
sub
xlat
stc
cmp
jmp
dec
(bad)
cwde
sub
pusha
xchg
shl
stos
ja
mov
das
push
out
jno
enter
nop
sbb
in
adc
sti
pop
stos
mov
mov
test
scas
imul
and
inc
sub
push
repnz
aas
data16
pop
pop
mov
es
jne
cmp
sub
pop
add
sub
sbb
pop
or
shl
add
xor
shr
arpl
pusha
out
enter
bound
mov
div
mov
jbe
jb
sub
psubsb
ja
pop
cmps
lods
xchg
jle
jecxz
xchg
pop
loopne
pop
arpl
call
scas
repnz
ins
xchg
mov
mov
cld
lahf
out
jne
fnstcw
stos
or
lea
pusha
pusha
(bad)
push
add
sbb
xor
gs
mov
jg
push
or
icebp
ret
aam
mov
adc
fnstcw
gs
sahf
xchg
xor
add
mov
mov
xor
fucom
call
in
fcomp
mov
adc
(bad)
xor
jg
scas
mov
and
dec
jg
dec
gs
sbb
cmps
dec
cdq
test
inc
ja
jbe
in
jnp
lahf
inc
dec
mov
ret
mov
push
push
inc
mov
push
stc
stos
and
fnstcw
mov
add
sbb
ret
sub
iret
mov
fld
ror
dec
xor
mov
and
pop
fld
out
push
jne
or
inc
out
xlat
ror
les
push
push
mov
out
retf
mov
dec
jnp
movs
je
push
xchg
mov
ins
xchg
mov
xor
jne
lods
xor
loopne
push
pop
or
jmp
pop
pop
add
out
adc
and
pop
push
js
jecxz
sub
(bad)
pop
inc
das
pop
dec
push
pop
sub
pop
pushf
or
ss
and
dec
ins
and
xchg
lock
shl
dec
cdq
xchg
jb
xor
jne
ret
adc
arpl
shl
mov
(bad)
xchg
mov
sbb
dec
lods
cs
(bad)
(bad)
cmp
shr
add
enter
and
mov
fadd
je
daa
dec
and
aad
mov
dec
test
je
sahf
pop
call
inc
add
test
test
push
out
nop
jmp
stos
icebp
test
inc
mov
push
and
adc
add
fsubr
jl
mov
loope
push
mov
jno
push
mov
pop
ret
mov
fimul
mov
mov
sub
cmp
cmps
bound
dec
(bad)
jecxz
cli
dec
retf
adc
rol
mov
enter
idiv
jmp
call
and
data16
dec
xor
sub
jmp
out
mov
mov
fdiv
pop
mov
and
adc
aaa
push
xchg
sbb
xor
out
mov
repnz
jg
out
mov
lods
fmul
sbb
stos
popa
sahf
movs
adc
(bad)
sbb
cmps
into
sahf
pop
out
outs
mov
movs
fld
add
and
popf
gs
lods
xchg
inc
test
and
mov
les
xor
push
lock
or
(bad)
fbld
sub
sbb
pop
js
ror
inc
push
(bad)
(bad)
xor
mov
cmp
sub
lds
mov
jg
sub
adc
(bad)
fstp
sbb
inc
mov
inc
iret
retf
out
pop
pop
dec
mov
dec
add
jmp
xor
sbb
popf
cld
sub
add
std
out
dec
pop
adc
out
aad
ret
or
cmp
cmp
inc
and
xor
xor
pop
add
frstor
mov
push
movs
movs
dec
lock
xchg
push
out
xchg
inc
ds
(bad)
adc
adc
inc
out
rol
sbb
in
inc
adc
bound
mov
into
stos
test
enter
xchg
mov
sbb
movs
sub
out
dec
es
cmp
pop
mov
pushaw
pop
sar
bound
movs
ret
xor
xchg
cmp
into
mov
xchg
inc
or
jl
mov
jo
ins
xchg
fsubr
nop
in
cmps
sahf
stc
test
push
push
or
adc
cs
xor
inc
cmps
push
jmp
push
lea
popf
scas
ret
pop
imul
xor
into
int
inc
pusha
enter
imul
jl
jo
xlat
sub
hlt
jmp
sub
push
mov
push
scas
fcom
out
cmp
mov
jb
std
or
int
icebp
xchg
shr
jecxz
into
and
ret
mov
mov
and
scas
jb
inc
mov
sub
inc
les
aaa
cmp
imul
dec
cmps
mov
jnp
add
ret
jb
js
mov
xor
mov
ficom
inc
lahf
jg
out
mov
cmp
jbe
aaa
and
mov
pop
ret
ins
sbb
or
shl
cmp
xor
retf
jge
daa
jb
or
enter
(bad)
cmp
sti
out
jmp
or
or
jb
fstp
fdivrp
pop
xor
aam
cmps
outs
lss
xlat
shl
mov
test
sub
xchg
in
jnp
cmc
adc
adc
rcl
(bad)
xor
adc
sahf
sar
jo
inc
dec
add
mov
pavgw
fild
movs
sbb
pop
out
(bad)
cs
adc
int
ret
dec
sub
mov
out
cmp
push
jae
cmps
and
sbb
mov
or
mov
sar
lock
or
inc
mov
add
jno
or
mov
xchg
mov
push
ss
gs
daa
pop
popf
scas
adc
inc
xchg
(bad)
loop
push
(bad)
mov
clc
dec
retf
cli
sahf
mov
enter
xor
adc
sub
and
jae
jle
pusha
xchg
lahf
pop
aam
jnp
add
rcr
int3
sub
xlat
mov
jmp
xor
imul
cli
dec
adc
test
jge
cmp
xor
lock
push
jno
test
(bad)
mov
adc
hlt
jl
push
dec
scas
xor
nop
xor
lods
gs
sbb
ins
or
ins
inc
out
jmp
jmp
popa
push
or
jge
call
and
or
sub
and
vpsubsb
jg
dec
mov
je
xchg
push
push
add
sub
adc
or
pop
repz
sub
inc
sub
cmc
addr16
xor
fldcw
call
jp
and
stc
movs
push
jno
imul
inc
cmp
fdiv
sbb
mov
sbb
mov
in
push
mov
out
and
stos
add
fistp
xor
aad
shl
loop
cmp
(bad)
pop
mov
loop
jno
add
mov
fsub
ror
int3
int3
mov
bound
push
and
mul
test
mov
stos
fsub
(bad)
iret
push
pop
adc
outs
test
test
jo
xor
sar
ins
mov
into
ror
(bad)
and
hlt
leave
lods
rcr
lea
inc
(bad)
mov
push
mov
ja
lods
push
push
(bad)
sub
test
gs
lock
mov
neg
dec
sbb
lds
or
cmp
es
sbb
xchg
sbb
mov
cmp
pop
or
(bad)
rcl
push
mov
push
sub
lahf
or
data16
pop
call
add
cmc
jmp
dec
hlt
push
sbb
mov
inc
push
int3
mov
and
or
xchg
push
aad
xchg
or
mov
retf
and
jp
rol
loopne
pop
stc
push
loopne
mov
imul
aaa
adc
sub
adc
sahf
mov
ret
imul
movs
sbb
nop
ror
fstp
xchg
mov
and
call
loope
rol
out
push
(bad)
test
cld
inc
aam
mov
pop
xor
add
xchg
sbb
add
inc
mov
fwait
sbb
daa
je
int3
dec
imul
lahf
mov
ja
cdq
push
je
icebp
add
jbe
jp
fs
out
mov
sahf
pop
sub
das
(bad)
dec
bound
sub
popa
imul
dec
xor
test
ja
push
lock
add
jnp
and
neg
mov
sub
mov
ret
mov
mov
pop
not
inc
mov
in
scas
inc
and
cld
fisub
into
mov
enter
std
xchg
jle
std
fnstsw
leave
mov
xor
and
pop
call
stos
cmp
push
rcl
and
fisub
cs
sub
arpl
test
mov
(bad)
out
iret
mov
(bad)
jecxz
shr
sbb
imul
dec
jmp
int3
push
push
dec
push
xor
and
jecxz
pop
xchg
inc
arpl
inc
imul
xlat
push
test
aam
jmp
pop
mov
cs
shl
pop
lods
je
loope
ins
fcomp
jmp
push
aas
adc
pushf
sub
push
or
pop
xor
ds
in
clc
xchg
mov
mov
jns
or
jg
les
shld
out
jl
sub
int3
daa
popf
div
dec
jns
or
mov
sub
fmul
fadd
mov
sub
pusha
push
stos
adc
push
dec
inc
cwde
pop
mov
call
inc
fldcw
mov
fwait
mov
(bad)
dec
sub
aaa
aaa
xchg
push
cld
sub
lods
add
int
fs
inc
pop
jmp
aas
out
loope
cmp
push
fwait
fwait
jae
jae
mov
push
or
push
out
sub
aad
jno
scas
cdq
and
lods
mov
jmp
ret
adc
idiv
imul
cdq
cmp
int
int
arpl
and
imul
mov
adc
xor
mov
mov
add
xchg
mov
ss
push
es
data16
dec
sub
pop
mov
clc
xor
pop
mov
cwde
sub
dec
sahf
or
dec
ss
dec
xrelease
pop
jbe
jb
or
and
add
mov
jb
dec
mov
add
jp
or
std
dec
out
cmp
xchg
outs
cwde
inc
sbb
(bad)
cdq
dec
sub
cmps
adc
mov
(bad)
cs
dec
mov
fsubrp
jns
mov
pop
mov
call
loop
gs
test
hlt
sbb
scas
scas
rcl
daa
xor
mov
push
push
sbb
sbb
pop
cmp
xchg
adc
int
ins
jg
ja
call
cmp
imul
mov
dec
std
add
imul
xor
mov
lea
add
pop
cmp
push
sub
cmp
sbb
jmp
mov
xchg
jbe
xchg
ss
mov
xchg
mov
ins
and
stos
fwait
mov
adc
scas
loop
sub
inc
pop
mov
xchg
jns
xchg
mov
cmp
sub
icebp
jp
jmp
add
int
enter
push
sbb
and
cmps
(bad)
dec
jno
jns
ret
fidiv
mov
es
rol
mov
neg
push
jl
out
sbb
test
aam
(bad)
mov
push
aad
cmps
jmp
mov
jg
add
and
addr16
jmp
push
sbb
das
lods
dec
add
pusha
in
imul
ficomp
adc
fs
mov
repnz
pop
fdivr
jp
xchg
sbb
or
mov
dec
sti
call
test
lock
inc
jl
cmps
sub
or
or
jmp
loopne
adc
push
ja
sub
jmp
mov
pop
pop
(bad)
test
gs
ins
test
jmp
xchg
jle
loop
sub
mov
ret
mov
add
mov
and
call
mov
addr16
mov
ret
hlt
test
push
leave
movs
imul
ins
sub
mov
mov
dec
sbb
sti
mov
clc
cs
adc
icebp
cmc
icebp
(bad)
jmp
push
data16
repnz
adc
pop
cmp
or
sub
imul
stos
sub
fwait
outs
xchg
rcr
push
add
dec
(bad)
les
xchg
mov
pop
inc
mov
xlat
jp
dec
outs
cmp
enter
push
pop
cmp
jmp
push
sub
lea
jb
and
test
jmp
clc
clc
(bad)
pusha
mov
(bad)
xchg
aaa
sub
mov
xchg
mov
loopne
jmp
dec
mov
inc
lock
and
inc
frstor
pop
call
inc
jbe
mov
ins
fild
lods
retf
dec
inc
xchg
or
or
pushf
and
dec
enter
es
lods
lock
pop
xchg
sti
fnstcw
sbb
stos
push
xor
inc
rcl
jbe
sbb
std
xor
fcmovnb
daa
dec
addr16
shl
xor
in
xor
jo
fimul
jp
lods
adc
fwait
push
sub
xchg
inc
and
push
retf
jecxz
jns
icebp
xchg
imul
xor
xchg
sub
daa
ret
sbb
pop
outs
pop
mov
sbb
mov
mov
adc
lds
das
xchg
sbb
add
pop
jecxz
mov
dec
dec
test
xchg
neg
(bad)
int3
cmp
adc
xor
and
imul
les
adc
les
sub
popf
js
mov
mov
stos
cmps
out
or
sahf
pop
pop
jg
ins
sbb
test
jmp
lahf
jns
arpl
or
les
mov
push
jg
push
mov
sar
xchg
sbb
rcl
pushf
fdiv
jns
jecxz
cmc
xchg
add
or
mul
in
popa
test
jle
mov
ret
inc
pop
sub
inc
ins
out
(bad)
cdq
dec
and
sub
(bad)
pop
push
pop
adc
jmp
mov
call
shl
xchg
xor
ficomp
mov
inc
inc
mov
aaa
sbb
mov
fiadd
in
loopne
pop
(bad)
jbe
dec
out
es
xlat
jno
popf
daa
scas
xchg
mov
ins
adc
and
inc
mov
mov
inc
pop
neg
popf
fucomp
xchg
mov
outs
adc
xchg
(bad)
jno
mov
mov
inc
sti
(bad)
stc
loop
mov
loope
test
ja
pop
add
inc
ins
lods
cmp
and
lea
adc
mov
fcomp
push
movs
inc
lods
mov
idiv
mov
cmp
sub
dec
mov
lods
inc
int3
mov
mov
int
fcmovnb
push
fs
jl
push
cmps
popa
push
jb
(bad)
mov
and
mov
mov
repz
fild
test
gs
sbb
enter
push
dec
sub
and
push
cli
pushf
es
dec
fcom
dec
inc
clc
and
icebp
popf
xor
enter
shl
push
sub
adc
aaa
add
xor
push
mov
push
ss
(bad)
xor
ficomp
inc
jmp
cdq
dec
pushf
into
mov
and
mov
daa
lods
mov
loope
mov
shl
inc
jle
xor
adc
stos
inc
or
dec
mov
push
inc
aad
aas
and
(bad)
leave
scas
xor
lds
xor
(bad)
fild
jmp
jo
ror
fnstenv
inc
xor
in
adc
inc
push
jno
sub
jbe
ret
jo
mov
inc
ror
jmp
cld
dec
imul
packsswb
movs
fcomp
(bad)
sub
iret
inc
pop
repz
jle
inc
xor
dec
xor
lock
leave
ja
sbb
mov
xchg
push
lds
mov
or
mov
ror
loope
cmp
(bad)
jle
inc
mov
lods
push
lea
jnp
mov
(bad)
mov
inc
jbe
mov
adc
in
inc
xchg
jnp
mov
cwde
push
mov
ins
ror
jae
hlt
addr16
lea
call
jb
add
push
mov
or
repz
lods
and
add
cmps
jl
cmc
pop
dec
leave
xchg
call
add
movs
mov
fstp
repz
cmp
pop
mov
or
je
cmp
mov
sbb
mov
dec
sub
loop
outs
pop
out
dec
cmp
jae
pop
jmp
pop
fsubr
outs
js
xor
and
xor
fs
push
aad
in
gs
gs
adc
jmp
out
mov
mov
sbb
cmc
retf
push
std
cld
dec
sbb
mov
cld
push
call
dec
mov
arpl
and
add
dec
js
jl
cmp
xor
pop
arpl
add
pop
and
stos
dec
inc
stos
fisub
jnp
loopne
adc
add
fs
sbb
cmc
or
in
loope
cmp
mov
(bad)
fbld
inc
xor
fadd
jbe
call
and
sbb
dec
adc
cmp
and
sbb
inc
inc
movs
je
and
cdq
jno
movs
in
dec
sti
test
adc
add
sub
jae
sahf
mov
add
or
call
and
push
fldenv
add
jne
repz
xor
inc
popa
loopne
xor
lock
out
jnp
inc
push
inc
cmp
fnstenv
pop
jl
sub
(bad)
cmp
(bad)
mov
push
das
aaa
sti
cmc
mov
push
das
mov
push
dec
shl
(bad)
fiadd
scas
ds
pop
sbb
mov
mov
in
jns
cwde
div
(bad)
and
mov
mov
lods
sbb
aad
mov
cmp
add
cmp
mov
xchg
iret
sar
out
mov
cmp
mov
daa
pop
sub
test
inc
in
dec
or
out
inc
(bad)
jg
fld
ds
gs
in
ret
movs
push
enter
cmps
std
imul
es
cmp
repz
clc
add
cmp
test
retf
shl
add
nop
xchg
jne
add
and
push
inc
or
sbb
les
cdq
scas
repnz
adc
enter
xor
dec
fbstp
dec
clc
retf
sub
(bad)
sar
mov
nop
aas
lods
js
jge
sub
outs
sar
call
mov
ror
xchg
aaa
je
cdq
mov
mov
xchg
stc
stos
arpl
jge
pop
inc
add
nop
ficomp
inc
clc
adc
inc
inc
dec
daa
ror
out
iret
loopne
jb
mov
aam
inc
jns
inc
inc
(bad)
stos
sub
xchg
test
lock
mov
gs
pop
add
adc
je
pop
push
mov
imul
lods
xchg
int3
(bad)
hlt
imul
xchg
outs
inc
call
loope
add
push
mov
test
and
scas
mov
and
lods
xchg
ja
adc
push
and
or
cli
jmp
(bad)
mov
hlt
js
pusha
leave
xchg
xchg
pop
addr16
loopne
pop
add
jmp
mov
xchg
jne
xor
addr16
dec
(bad)
mov
stos
(bad)
jl
and
ins
xor
push
sub
rol
mov
rol
xchg
repz
out
das
inc
jo
lds
mov
fadd
rcr
fst
lds
cmp
mov
mov
lds
xchg
out
cld
sbb
jp
jle
cmps
cmp
dec
sbb
popa
mov
iret
lods
call
xchg
add
aas
xor
push
dec
sub
fs
sub
pop
pop
adc
into
inc
cmp
xchg
pusha
mov
sub
fwait
je
sub
inc
fst
movs
inc
inc
push
or
pop
cld
ins
pop
push
dec
neg
pushf
jle
xchg
mov
dec
iret
cmp
sub
mov
ins
mov
out
enter
lahf
rcr
lods
int
cdq
xchg
jecxz
leave
and
sbb
cmp
sub
in
hlt
popa
mov
sub
add
pop
jmp
in
popf
push
popf
imul
or
mov
dec
std
(bad)
pop
in
mov
jp
icebp
inc
into
or
sbb
xor
lods
pop
sbb
sub
fwait
mov
push
inc
jb
bound
ins
adc
sbb
or
or
jle
imul
push
jmp
gs
pop
inc
xchg
pop
leave
ret
jmp
inc
dec
cmps
xchg
out
adc
out
loope
daa
xor
adc
and
sti
add
jge
test
push
call
or
and
xchg
mov
ret
fcomp
dec
aaa
mov
push
ins
(bad)
mov
mov
jmp
stc
sbb
out
jge
icebp
and
mov
push
xchg
rcr
loope
sti
arpl
mov
cdq
push
imul
add
imul
push
pop
dec
lods
pop
data16
mov
stos
xor
jmp
dec
jl
pop
mov
pop
cmps
pushf
enter
mov
sti
aaa
jg
(bad)
cdq
call
adc
(bad)
sahf
fistp
cmp
das
sub
cmp
mov
xchg
and
mov
sub
and
jg
sbb
xor
das
jbe
pushf
cwde
mov
mov
xchg
mov
xchg
div
mov
mov
lahf
add
pop
test
imul
(bad)
(bad)
lods
xchg
(bad)
mov
in
jb
int3
sbb
or
pop
hlt
imul
fwait
jge
xchg
pop
int3
scas
(bad)
jne
jmp
push
mov
push
jmp
popa
mov
add
nop
aam
test
add
ins
popa
imul
push
pop
data16
fdiv
sbb
stos
sbb
xchg
out
inc
add
mov
push
int
pop
dec
jne
mov
push
imul
ret
xlat
jnp
aaa
aad
scas
mov
and
inc
enter
in
icebp
jecxz
fadd
adc
or
pop
shl
push
jbe
loope
fcom
adc
sub
inc
sbb
and
adc
sbb
dec
call
push
pop
mov
sub
mov
xor
mov
xchg
sahf
mov
shl
inc
sub
sub
(bad)
aad
cmp
(bad)
fiadd
out
loope
cmp
push
jmp
les
adc
lds
pop
xchg
sahf
jmp
jl
fwait
xor
sub
data16
imul
shl
xor
mov
ret
xor
imul
out
jbe
inc
add
out
mov
movs
and
sub
call
(bad)
inc
loopne
mov
inc
loope
adc
push
rcl
or
xchg
(bad)
ja
mov
ins
das
hlt
inc
push
retf
push
pushf
rcr
rol
test
mov
lock
xchg
ja
je
jge
jmp
add
mov
mov
sub
sahf
test
jl
retf
pop
and
retf
jg
retf
push
pop
stos
int3
or
or
sar
jle
mov
aas
cdq
fdiv
pushf
enter
stos
jecxz
pop
pop
push
imul
push
jle
ficomp
jecxz
push
bound
xor
dec
dec
loope
fldcw
mov
jl
xchg
mov
cmp
fidivr
out
push
cmps
and
cmp
and
fidiv
scas
xor
(bad)
dec
sbb
not
mov
popa
leave
push
mov
stos
sub
test
jge
ja
imul
rcl
fmul
fidiv
mov
adc
jae
pop
and
xor
mov
and
xchg
jae
js
pop
(bad)
jbe
inc
jmp
sahf
push
dec
or
mov
adc
and
jmp
lods
adc
add
ins
lock
jmp
imul
inc
sub
sub
ucomiss
and
loopne
das
xchg
inc
loope
add
lods
push
mov
ret
and
shr
inc
jne
jg
cmc
and
sub
es
std
or
das
test
xchg
push
(bad)
pop
ss
test
outs
pop
push
repz
xor
jae
rcr
imul
sbb
fld
dec
clc
gs
fwait
dec
call
imul
int
jmp
(bad)
out
out
jmp
pop
dec
out
int3
call
sub
scas
call
add
push
or
and
shr
mov
and
(bad)
jp
out
(bad)
ror
fdiv
cs
repnz
ror
xor
sbb
movs
or
mov
inc
mov
pop
push
pop
inc
and
adc
ja
push
ror
out
inc
push
int
pop
test
(bad)
or
iret
xchg
mov
fwait
xchg
inc
repz
and
out
sub
mov
sar
lea
imul
pop
jp
sbb
push
xor
jne
jg
add
and
pop
out
cwde
cmp
jecxz
fiadd
rol
jae
mov
daa
iret
repz
es
add
stc
mov
test
jbe
pushf
pop
bound
cmp
cmp
xchg
add
in
and
addr16
sar
in
lods
cdq
pushf
add
loopne
pusha
ftst
scas
(bad)
call
sti
in
(bad)
loopne
cmp
movs
and
sub
repnz
pop
jle
pop
leave
lods
sar
call
pop
adc
cld
mov
pop
outs
ins
outs
(bad)
jae
sbb
aas
inc
jbe
sub
in
out
test
xchg
mov
pop
shl
cmp
in
out
out
out
cmp
mov
icebp
lds
add
ja
enter
fbstp
push
stos
clc
cmp
xchg
inc
hlt
mov
jge
popa
dec
loopne
mov
inc
or
mov
mov
out
or
rcl
adc
push
(bad)
loop
daa
mov
mov
jno
shl
add
xchg
mov
sub
out
les
fld
outs
(bad)
stos
mov
and
clc
ins
mov
es
cli
cmp
push
fcomip
mov
stc
scas
cmps
fucomp
cmp
mov
aam
stos
adc
pop
(bad)
sahf
loope
mov
pop
adc
mov
fstp
mov
in
es
lock
stos
xor
aaa
mov
xchg
jo
retf
inc
mov
add
les
repnz
cmp
ins
adc
(bad)
and
(bad)
neg
iret
jns
adc
fistp
adc
(bad)
xchg
fst
ja
repz
hlt
mov
(bad)
jle
cmp
mov
add
pop
nop
retf
fcmovnu
rol
or
inc
jnp
inc
mov
ficom
call
(bad)
lods
inc
jmp
adc
xor
ds
clc
sub
cmps
ret
pop
mov
adc
xchg
rcl
test
cdq
std
sbb
mov
retf
jmp
xor
push
jmp
cld
xchg
into
movs
fbld
adc
gs
xor
cwde
lock
stc
cmc
in
inc
imul
imul
push
dec
add
call
sbb
dec
lock
mov
adc
sub
call
test
pop
jo
jecxz
bound
nop
or
inc
mov
jmp
or
les
fxch
push
in
adc
aad
les
repz
in
sub
aas
out
test
mov
fwait
call
jl
pop
push
and
or
in
and
xor
adc
add
jmp
inc
fist
inc
inc
xor
mov
stos
call
scas
cmp
sahf
mov
push
nop
push
adc
iret
out
shr
push
mov
add
jns
push
jbe
and
and
cld
and
es
cld
adc
push
inc
pop
call
nop
push
ret
cmp
sahf
add
aas
rol
rcr
fcom
(bad)
fcom
mov
cmps
or
adc
mov
pop
pop
jmp
xor
cmp
cdq
jmp
pop
jge
push
je
xchg
mov
test
xchg
jns
nop
loope
js
push
das
div
test
jb
mov
fst
dec
cs
jmp
dec
jg
mov
mov
psraw
retf
out
into
cli
cmps
jbe
cmps
fstp
sbb
lds
cmp
push
popf
sar
test
sar
mov
inc
ret
lods
jecxz
dec
xchg
cli
and
scas
mov
sbb
add
xor
or
mov
ret
rcl
add
pushf
int
and
cmp
leave
push
mov
add
and
int
dec
xor
pop
daa
popf
cld
(bad)
es
inc
(bad)
(bad)
scas
and
or
or
jmp
in
dec
mov
icebp
lahf
add
xchg
pop
ins
cmp
adc
aaa
in
test
mov
or
mov
mov
pop
mov
and
sub
or
cmp
and
fwait
stos
and
xchg
mov
xchg
aas
mov
adc
jns
pop
cdq
mov
test
push
imul
and
lods
(bad)
cmp
push
push
call
inc
push
pop
jecxz
or
mov
jmp
xchg
jmp
lds
call
and
dec
mov
add
call
cwde
scas
lds
cmp
adc
mov
jmp
movs
loopne
gs
mov
(bad)
push
pop
imul
add
or
sbb
adc
shl
(bad)
sbb
pop
cli
xor
addr16
pushf
and
sbb
int3
mov
sbb
(bad)
push
fsub
outs
loope
pop
enter
dec
or
test
pop
popf
std
mov
jecxz
pop
pusha
push
cmp
add
test
stos
inc
and
in
arpl
test
sahf
rcl
jle
sbb
(bad)
cli
adc
pop
mov
cmps
push
out
fidiv
pushf
pop
fbstp
jmp
hlt
dec
and
mov
ret
and
cmp
or
pop
enter
add
adc
push
inc
pop
add
movs
stc
retf
add
fild
clc
daa
out
test
dec
cmp
fwait
jno
test
gs
lahf
push
cmp
and
jno
add
mov
dec
jbe
sub
outs
pop
mov
and
lods
in
(bad)
cmp
or
ds
jge
popa
cwde
stos
mov
push
jnp
test
ins
enter
cwde
out
test
pop
cmp
into
scas
xor
sub
and
test
push
test
xchg
jno
stc
shl
loop
mov
outs
pop
jp
xor
add
mov
jo
or
sti
add
sbb
mov
(bad)
out
xchg
pusha
pop
out
jl
ror
scas
or
test
test
jmp
cmp
(bad)
mov
sbb
mov
stc
and
sbb
mov
sub
jo
mov
das
fdiv
adc
mov
fcomi
push
dec
inc
mov
(bad)
rcr
(bad)
scas
mov
jg
jne
into
sbb
rcr
or
push
pop
pop
and
pusha
mov
test
dec
push
xor
mov
(bad)
sar
popa
out
int3
retf
pop
movs
or
scas
push
icebp
mov
pop
enter
and
aas
mov
aad
inc
cmp
shr
aam
mov
xchg
das
mov
cmp
or
mul
mov
and
or
adc
push
out
cwde
aam
dec
pop
sub
outs
push
test
lock
fsubr
pop
pushf
jne
push
mov
cmp
(bad)
test
in
jmp
mov
jae
mov
inc
bound
push
out
push
dec
mov
leave
inc
mov
xchg
pop
cmp
sar
int3
sbb
sub
std
xor
in
dec
vxorps
fwait
icebp
sar
push
scas
fstp
outs
cmp
cmps
push
xchg
test
or
rcr
jl
inc
sub
fld
(bad)
cmp
mov
mov
daa
xchg
arpl
jbe
pushf
enter
mov
bound
call
push
hlt
cld
stc
mov
add
mov
push
inc
ss
out
cli
or
and
enter
mov
or
inc
clc
cwde
add
push
fdivr
fwait
mov
aam
bound
lods
cmp
ds
dec
jb
fs
xlat
mov
jae
ret
inc
xor
jb
out
adc
repnz
add
adc
fistp
and
loopne
mov
aaa
dec
cmp
ins
call
pop
inc
adc
aam
xor
xor
loop
and
xchg
inc
pop
ins
adc
lock
push
sub
into
jb
or
sbb
or
pop
jns
bound
inc
fwait
inc
xor
mov
loopne
adc
push
stos
sbb
arpl
jmp
inc
jo
jne
cli
mov
mov
push
push
movs
adc
std
mov
sbb
rcr
jne
adc
fmul
or
mov
dec
push
xor
int3
ret
add
hlt
(bad)
pop
pop
cmp
gs
outs
ja
push
pop
or
lods
cmc
jno
out
cmp
test
loope
mov
outs
xchg
jno
xchg
int3
inc
lods
and
pop
add
in
movs
div
push
sti
adc
mov
inc
out
lea
cmp
jecxz
js
dec
lds
xchg
hlt
enter
je
aaa
cmp
faddp
mov
cmc
xor
xchg
cdq
int
inc
mov
loope
jne
mov
jg
xchg
enter
sahf
jecxz
mov
test
daa
or
stos
xor
(bad)
(bad)
jmp
inc
and
nop
mov
scas
mov
hlt
imul
cdq
add
xor
and
fninit
pop
hlt
fisub
(bad)
push
ret
add
push
movs
stos
xor
fidivr
push
jp
inc
(bad)
xor
and
movs
daa
cmp
test
neg
dec
add
inc
push
lahf
mov
or
fsubrp
mov
dec
ds
mov
data16
xchg
inc
mov
hlt
pop
add
mov
or
jno
mov
ror
jbe
ins
(bad)
rcr
mov
psraw
and
jae
cmp
fsub
dec
imul
in
xor
mov
xor
dec
out
mov
jmp
pop
cmps
mov
mov
jns
imul
push
jecxz
mov
inc
fld
jnp
test
imul
cmps
adc
xchg
xchg
loopne
aam
xchg
in
ss
xchg
mov
jmp
fnstenv
or
sub
push
int3
hlt
xchg
call
(bad)
loop
push
push
jo
shr
fild
cmp
cmp
mov
rcr
popf
mov
dec
add
sahf
cs
scas
dec
cmp
aam
repz
loop
sub
cmc
jmp
mov
mov
jns
stos
stos
(bad)
sbb
mov
ror
leave
xor
jno
sub
dec
call
movs
jae
jl
cli
in
adc
jbe
loopne
or
ds
es
fcom
inc
rcl
dec
cmp
xor
cwde
in
(bad)
fwait
xor
sub
sub
pop
inc
cdq
call
xchg
clc
into
repz
or
ins
mov
fiadd
mov
test
outs
jb
call
mov
and
lods
xor
imul
cmp
jmp
addr16
adc
xchg
sti
call
push
adc
mov
sbb
cmc
mov
push
in
aad
rcl
cwde
jno
int
push
inc
lock
jp
sbb
les
in
or
stc
daa
outs
xor
mov
jb
pop
pop
xchg
add
js
sti
adc
lahf
cli
mov
inc
out
cmc
or
sub
cmps
lods
sub
into
psubb
sbb
fbstp
sub
jno
cmp
out
rcr
cmps
sbb
pop
ret
fst
dec
pop
adc
jns
rcr
arpl
imul
fsubr
mov
cmp
pop
jmp
mov
jg
or
scas
and
pop
cmps
and
jmp
xchg
(bad)
push
leave
xchg
mov
shr
pop
inc
or
js
ret
cmp
jl
mov
fsub
fistp
mov
call
std
mov
push
movs
push
mov
mov
in
inc
jb
rcr
test
inc
mov
mov
jmp
ds
shl
pushf
jo
loop
mov
mov
add
call
sar
mov
je
sbb
or
jle
push
dec
lea
cwde
jnp
xor
ret
jecxz
pop
mov
scas
cdq
or
and
ret
aam
or
mov
cmp
adc
or
add
pop
stos
cwde
and
mov
out
arpl
mov
xor
pop
rcr
(bad)
sbb
repz
sub
ficom
adc
jno
jmp
xchg
or
outs
into
mov
push
hlt
inc
cmc
lds
test
or
sbb
int3
ins
mov
push
addr16
add
dec
xchg
xchg
in
jecxz
vpsubusb
pop
and
sbb
es
dec
push
mov
loope
xchg
xchg
pop
add
or
jb
or
jmp
daa
das
ss
fisub
movs
cld
rcl
dec
and
sbb
push
sbb
fdivr
mov
xchg
sbb
aas
lods
push
out
das
cmp
fldcw
add
shr
mov
push
sti
hlt
cmp
fsubp
mov
movs
inc
test
ficom
xor
inc
iret
xchg
jecxz
inc
lods
into
adc
hlt
loop
xchg
jg
int
inc
stos
add
retf
lea
cmc
ins
mov
ja
push
mov
dec
push
lahf
mov
jecxz
xor
aam
mov
mov
movs
lds
rcl
mov
pop
stos
loop
dec
por
call
or
retf
ja
mov
or
retf
sbb
mov
adc
ds
es
or
add
jmp
stos
mov
dec
mov
jno
push
dec
fiadd
jl
mov
fld
mov
mov
dec
das
mov
mov
cmp
inc
mov
cmp
cmovae
pop
pop
xlat
cdq
dec
mov
push
xchg
and
jmp
enter
es
cmc
pop
lahf
and
dec
and
stos
in
mov
dec
mov
scas
push
stos
std
or
jg
push
or
neg
pop
pop
cmp
aam
addr16
sub
cli
mov
fdivr
mov
fcom
mov
sbb
jl
fwait
lock
and
js
dec
push
and
adc
lds
or
or
enter
icebp
mov
xchg
pop
mov
xor
pand
repz
es
push
cmp
mov
(bad)
jge
stos
pop
adc
mov
mov
cmps
clc
jmp
xchg
pop
mov
shl
dec
xor
stc
fcom
cmp
pop
jbe
in
xchg
repz
and
or
or
bound
test
adc
push
aad
js
push
shl
mov
dec
arpl
pop
retf
ins
sub
pushf
xchg
add
test
or
or
adc
stos
data16
ss
push
ins
push
imul
aad
ja
ficom
jne
pop
in
inc
or
std
bound
mov
call
in
xor
push
and
jbe
adc
pop
and
sbb
lds
mov
jge
in
inc
jnp
mov
jge
ret
popf
into
adc
jne
xor
add
ret
mov
out
idiv
xlat
call
xchg
xor
cmp
jg
ret
ret
or
outs
loope
cld
movs
(bad)
pop
mov
fisttp
or
sub
xor
ffreep
bound
sbb
pushf
pop
jnp
popa
xchg
cmp
cs
and
popf
and
dec
call
ror
add
mov
xchg
mov
out
mov
jg
out
in
test
or
mov
jecxz
ffreep
xchg
in
jg
dec
cmp
fadd
(bad)
xchg
cwde
cmc
push
in
xchg
xor
adc
push
pop
out
cmp
std
lods
jmp
mov
push
cmp
jmp
sar
es
bound
outs
repz
push
xchg
or
jmp
push
push
mov
push
jnp
sub
push
and
mov
and
add
push
mov
es
or
xor
mov
aaa
lds
test
or
xor
aaa
test
loop
xchg
adc
or
ins
inc
mov
inc
and
daa
dec
pop
(bad)
lods
mov
mov
test
jbe
das
xchg
mov
adc
hlt
(bad)
jmp
int
lea
adc
inc
mov
or
mov
into
xchg
mov
adc
cdq
fild
mov
jmp
xchg
(bad)
adc
pop
jmp
pop
mov
ficomp
xchg
shl
sub
mov
xchg
push
out
in
nop
inc
cmps
je
popa
or
out
xchg
pusha
xchg
xor
xchg
inc
jmp
dec
mov
adc
mov
push
sti
movs
sbb
movs
push
inc
lds
ret
jo
mov
leave
bound
clc
sbb
stos
xchg
inc
call
dec
mov
loopne
xor
or
and
loope
pop
inc
aaa
hlt
xchg
rol
push
sub
loop
xor
mov
mov
adc
dec
cmp
in
mov
mov
fwait
or
test
push
adc
mov
mov
fsubr
adc
mov
and
std
sbb
cmps
inc
rcr
xor
ja
mov
mov
aam
add
inc
lahf
lods
fcomip
push
jmp
and
xor
pop
or
dec
mov
xchg
xchg
inc
ss
out
pop
clc
sahf
jmp
(bad)
jbe
stc
xchg
or
jmp
xchg
mov
out
or
sbb
cmp
ins
repz
mov
add
mov
push
jl
cmp
int
mov
dec
jb
sahf
jmp
call
popf
movs
jg
jge
popa
push
in
bound
cmp
cmp
inc
sub
mov
and
inc
loope
fwait
test
mov
fmul
mov
aaa
inc
jbe
xchg
xchg
xchg
inc
xor
in
pop
jo
fsub
xor
ret
mov
dec
and
push
jmp
js
iret
pop
adc
loopne
es
inc
jecxz
clc
mov
mov
push
sub
cmp
push
jnp
dec
loope
xor
cmp
jo
sahf
fist
adc
jns
sbb
mov
test
mov
pop
mov
fild
push
xor
inc
mov
(bad)
sar
addr16
cld
mov
inc
xor
call
sbb
xchg
cmc
js
jmp
test
or
sub
mov
xor
jb
es
rcl
dec
movs
jne
jnp
not
and
and
dec
xchg
(bad)
scas
dec
fcomp
jmp
push
(bad)
mov
out
jecxz
std
sar
push
jecxz
adc
jmp
iret
and
mov
mov
pop
test
(bad)
and
jge
dec
mov
xchg
add
adc
cdq
mov
shl
in
mov
mov
or
mov
sub
inc
sub
inc
mov
and
mov
dec
pushf
push
jno
rol
adc
xor
cwde
int3
cmp
out
add
mov
mov
mov
loope
adc
sbb
jg
push
xor
mov
sub
mul
lds
mov
dec
xchg
jb
push
test
loop
pop
xor
dec
jnp
ret
sub
test
dec
pusha
dec
popf
fs
ret
pusha
and
stos
in
and
cmp
clc
inc
cmp
cdq
inc
adc
test
in
push
pop
ret
xchg
cli
pop
jl
pop
popa
mov
neg
and
ffreep
jle
jmp
lods
cdq
push
pop
mov
imul
fisub
add
xor
pop
mov
mov
loop
jns
or
lds
or
ret
inc
sub
xor
jmp
xor
ds
pop
xchg
pop
loope
or
in
inc
jecxz
pop
into
fwait
add
call
fnstenv
dec
pop
test
adc
pop
out
pop
shr
inc
aam
mov
jb
jnp
add
cmc
(bad)
mov
mov
(bad)
(bad)
xor
mov
jbe
and
push
jb
sbb
and
dec
jnp
jle
dec
sbb
aaa
fdivr
loope
fcomp
jmp
and
xchg
mov
in
cld
cmp
fs
mov
sub
pusha
call
jmp
mov
test
jp
push
xchg
sbb
cmp
adc
(bad)
loop
lods
dec
mov
mov
out
inc
clc
cwde
jbe
scas
inc
into
inc
pop
inc
jae
push
and
pop
sahf
je
cmps
adc
ds
ja
cmp
(bad)
je
cwde
push
xchg
ins
arpl
arpl
stc
mov
daa
jmp
pusha
and
mov
or
bound
pop
cs
mov
adc
outs
cmp
xchg
arpl
xchg
xchg
cld
loopne
mov
and
dec
outs
dec
aad
sub
idiv
dec
cmp
cmps
fistp
mov
mov
push
jle
jge
mov
add
xchg
pusha
jecxz
outs
sahf
mov
inc
(bad)
mov
enter
adc
pop
xchg
loope
hlt
enter
and
stos
add
mov
shl
mov
div
nop
mov
mov
mov
das
sahf
mov
(bad)
std
dec
pop
add
jg
cmp
xor
retf
xor
xor
lea
pop
mov
call
add
xchg
add
lods
xor
cmp
jecxz
inc
loopne
xchg
mov
or
add
fisub
fs
cs
(bad)
gs
push
sbb
mov
mov
dec
ins
xchg
and
xchg
nop
test
outs
repnz
xchg
fs
inc
test
call
xchg
push
das
lods
scas
std
or
adc
test
daa
fwait
adc
enter
and
(bad)
popf
cli
rol
aas
xchg
bound
mov
je
push
aas
pop
pop
mov
xlat
mov
adc
test
mov
pushf
mov
ror
and
sahf
cs
xor
mov
jne
lds
xchg
div
arpl
sahf
sub
dec
retf
lds
loopne
mov
or
inc
inc
add
mov
cmc
movs
into
inc
movlps
inc
das
mov
int
lods
pop
xchg
aam
sub
aaa
pushf
and
in
fsub
mov
xor
xchg
adc
mov
hlt
add
inc
cdq
jle
or
cmps
int
popf
nop
cmps
and
xor
fadd
ret
mov
xchg
(bad)
or
(bad)
mov
jle
das
adc
(bad)
ror
jmp
push
pop
sub
std
inc
jo
mov
je
fnsave
scas
dec
sub
cmp
pop
mov
mov
loop
mov
mov
mov
imul
sub
(bad)
inc
push
cli
test
fwait
add
stc
outs
ins
mov
push
jmp
cmp
inc
push
xor
sbb
in
push
lock
nop
mov
sbb
adc
imul
(bad)
dec
sti
test
add
repnz
das
jecxz
sahf
scas
dec
ret
stos
jg
pop
or
neg
mov
inc
cmps
icebp
xlat
(bad)
inc
les
inc
loope
sbb
pop
retf
lock
xchg
mov
xchg
imul
in
sar
outs
clc
dec
pop
pushw
adc
xor
movs
xor
fnstcw
test
inc
pop
ret
push
cmp
mov
or
cmc
mov
fsub
xlat
sub
xor
lds
xor
jne
push
in
add
inc
sub
repz
dec
in
xor
add
outs
pop
jns
or
mov
adc
ins
add
adc
mov
clc
mov
pop
(bad)
ins
(bad)
repnz
inc
xchg
js
sub
loope
out
lea
shl
daa
iret
or
xlat
cmp
pop
ds
inc
loope
out
push
adc
xchg
mov
shr
dec
cmp
sub
ret
mov
push
dec
out
sbb
test
ss
out
retf
call
dec
sar
aaa
cs
rcl
mov
mov
mov
pop
jno
xlat
jnp
arpl
adc
dec
imul
dec
mov
imul
iret
push
pop
pop
sub
popf
or
mov
inc
xchg
jns
xor
call
retf
repz
shr
cdq
jl
test
stc
fisubr
iret
fnstenv
aas
popf
mov
std
jp
outs
je
mov
jmp
pop
jo
inc
add
sbb
popf
rcl
push
adc
xchg
jl
outs
cdq
fcomp
jb
xchg
into
cs
repz
aaa
ins
(bad)
clc
shr
out
fsubrp
movs
dec
or
movs
xchg
mov
gs
push
gs
cmps
stc
mov
shr
cmp
or
jecxz
(bad)
ds
arpl
nop
dec
and
mov
jmp
pop
fsubr
sub
sahf
inc
test
maskmovq
mul
add
es
push
in
adc
cmps
neg
clc
xchg
sbb
mov
shr
add
dec
dec
data16
or
in
or
mov
test
sti
popf
hlt
ret
mov
mov
add
xchg
jnp
jl
je
fcom
ds
or
out
das
rcr
cmps
mov
leave
and
xchg
test
popa
and
inc
push
lock
jmp
sbb
daa
jge
pop
hlt
sar
mov
jmp
and
jo
push
pop
fsub
lock
cwde
add
test
sar
and
adc
js
mov
outs
mov
or
into
adc
push
dec
fistp
addr16
aad
xor
sub
imul
adc
hlt
and
pushf
into
in
gs
ins
sahf
fcomp
fs
les
fst
sub
(bad)
je
adc
movs
lods
xchg
push
xchg
std
fdivr
mov
call
mov
sbb
or
mov
popf
out
dec
lds
jmp
adc
jns
mov
jnp
das
jnp
sahf
add
dec
dec
retf
movs
inc
sub
and
mul
adc
fnstenv
adc
cmp
nop
jmp
jp
inc
and
aam
cdq
push
xlat
adc
movs
and
(bad)
or
call
mov
inc
data16
iret
in
sub
dec
imul
test
ds
loop
xor
cmp
sbb
sub
and
test
and
sbb
mov
pop
xchg
jne
mov
jmp
or
movs
mov
test
ret
int3
movs
xor
popa
adc
stos
jge
or
call
lock
mov
int3
and
cdq
mov
data16
mov
xor
mov
xor
aaa
add
dec
fisttp
cmp
or
and
into
sub
sbb
and
mov
xor
or
pusha
ja
imul
sub
dec
retf
jg
sub
out
pop
pop
je
and
ins
jmp
and
fucomip
or
inc
outs
push
je
fwait
retf
icebp
add
push
test
xchg
std
in
ret
sub
sti
rcr
jl
es
inc
jecxz
and
sub
hlt
mov
lea
fcom
sub
fs
cmc
ret
pop
jmp
mov
mov
sbb
sub
xchg
pop
ins
ret
sbb
lea
sbb
pop
jae
inc
sahf
mov
loopne
jns
div
test
into
pop
daa
push
loop
push
cmp
iret
xlat
loopne
cmp
sbb
aas
inc
xlat
out
fst
cli
sub
stos
mov
call
nop
out
sti
mov
fist
adc
test
dec
and
fdivr
xchg
and
cmc
xlat
lods
cmp
retf
jge
push
sub
(bad)
js
outs
sbb
in
repz
inc
imul
xor
pmaxsw
dec
out
cmp
sbb
into
adc
into
shr
mov
cld
ss
(bad)
(bad)
mul
mov
add
imul
mov
cmp
cmp
mov
stc
loope
in
jmp
movs
dec
mov
shr
mov
pusha
jle
xchg
or
std
jmp
stos
mov
xchg
sbb
bound
ror
rcl
inc
sbb
pop
pop
scas
push
mov
mov
cmps
push
rcl
data16
hlt
addr16
(bad)
fnstenv
push
jl
repz
in
jle
sar
mov
ins
pop
jo
inc
cmp
jecxz
psubb
sub
push
out
loope
jmp
cmp
aad
repz
dec
inc
dec
outs
call
aam
fistp
imul
stos
adc
sub
push
push
and
sub
and
jle
add
popf
popa
sbb
cmp
cld
test
or
mov
mov
sub
outs
(bad)
ins
jmp
xchg
(bad)
scas
jge
sub
lock
sub
sbb
into
pop
neg
jne
clc
iret
pop
cdq
xor
movs
or
xchg
nop
cs
test
aas
cli
iret
bnd
xor
inc
adc
sub
cwde
mov
mov
adc
mov
fs
xchg
xlat
push
fwait
jns
mov
mov
sbb
cmp
loopne
out
mov
or
popa
stos
test
xlat
lea
fadd
mov
fist
cmps
mov
adc
stos
push
lds
movs
and
cli
addr16
popf
test
fistp
mov
pop
push
aad
nop
xchg
inc
fs
cld
cmp
sub
fldcw
cli
or
test
xchg
fidivr
xor
int3
mov
in
push
mov
pop
xchg
mov
daa
adc
sub
jle
and
mov
push
pop
sub
dec
inc
push
repnz
pop
xchg
dec
add
loope
mov
shl
out
cmp
cdq
adc
(bad)
cmc
push
pop
mov
push
dec
out
pusha
cmp
push
mov
xchg
icebp
xor
iret
add
jl
pusha
shl
lods
pop
xchg
and
ds
mov
fidiv
xchg
imul
sti
push
xchg
call
xchg
add
mov
sbb
enter
in
and
out
push
sbb
or
repnz
mov
loop
pop
cwde
mov
daa
ret
mov
cmp
sbb
sbb
sbb
shl
sti
lds
mov
mov
add
ficom
sub
ins
adc
xchg
std
aad
loope
xchg
cwde
jg
lods
pop
mov
repnz
inc
repnz
xchg
push
sub
hlt
push
add
rcl
jecxz
ins
loope
jle
ja
xchg
pop
in
pop
pop
pop
clc
xchg
push
jbe
cld
cmp
jnp
mov
out
ss
mov
dec
popf
or
data16
std
xor
jbe
adc
imul
imul
xor
fcmovbe
jo
sub
adc
xchg
hlt
inc
lods
mov
cwde
sbb
ds
push
cmp
mov
xor
out
push
mov
mov
cwde
pop
es
push
push
or
(bad)
sbb
lock
(bad)
daa
outs
test
dec
xor
(bad)
fcom
fucomi
pop
fmul
aas
and
dec
pusha
push
mov
bnd
retf
push
movs
sbb
arpl
fidivr
test
int3
add
cmp
push
and
dec
(bad)
scas
imul
sti
mov
add
mov
(bad)
movzx
out
and
adc
add
ror
add
inc
xor
sbb
jae
pushf
fimul
push
xor
sahf
inc
addr16
push
repnz
test
mov
stos
stos
and
adc
cld
std
retf
jo
add
das
aad
mov
mov
retf
pushf
loope
jmp
dec
lock
cmp
or
inc
adc
ja
mov
mov
scas
cmps
outs
loop
jge
mov
test
add
jl
or
mov
shr
push
jns
js
mov
mov
into
cmp
jmp
icebp
xor
jbe
ss
adc
ret
xchg
inc
daa
into
sti
dec
out
sbb
pop
sbb
daa
cmp
cmp
xor
sub
je
mov
into
jnp
inc
stos
xor
sub
xor
rol
jecxz
mov
hlt
and
pushf
pop
sub
xor
xchg
ds
cs
or
pushf
stc
mov
fisubr
lds
sbb
dec
int3
jne
pop
inc
or
jge
pushf
and
push
sub
sub
jmp
pusha
adc
lahf
sbb
xchg
jnp
add
cmps
mov
retf
test
scas
inc
and
sbb
icebp
sub
addr16
jns
xchg
xlat
xor
dec
out
(bad)
in
pop
sub
pop
test
lahf
fnstenv
sub
ins
dec
jp
lock
fst
mov
lods
mov
in
lds
pop
(bad)
fld
mov
xor
scas
mul
mov
int
pop
mov
adc
sub
push
lock
stc
xor
xlat
es
and
pusha
xor
push
sbb
dec
sti
push
mov
cmp
retf
add
xor
xchg
and
jne
sbb
stos
cmp
dec
xchg
fucomp
cwde
inc
int
repz
sub
pop
sbb
into
bnd
mov
test
gs
in
push
and
jne
je
inc
xchg
sbb
push
fisttp
push
ds
fdivrp
xchg
mov
aad
jmp
push
stos
jmp
or
jmp
jae
xchg
pop
ret
xlat
jne
pop
in
movs
xchg
adc
jno
xor
fmul
sub
xor
popf
(bad)
out
cmp
sti
push
jg
pop
inc
jb
or
ja
or
ins
jns
adc
shl
into
cdq
fld
mov
mov
or
scas
jle
mov
mov
sahf
sub
mov
cmc
jae
push
adc
adc
retf
mov
ret
jl
ret
mov
sub
push
ret
pop
sub
mov
movs
pop
es
mov
mov
push
arpl
shl
in
jbe
out
pop
jmp
lods
sub
adc
ret
lods
stos
pushf
pop
stc
xchg
fstp
push
sbb
mov
addr16
xrelease
adc
aad
jg
hlt
and
lods
jns
movs
(bad)
in
test
mov
adc
(bad)
rol
out
dec
sub
mov
xchg
cmp
sahf
add
pop
cdq
and
fcom
fist
adc
das
pop
push
and
loopne
repnz
int3
shl
movs
(bad)
dec
loop
and
test
sbb
cli
pop
out
lea
or
mov
cs
sbb
cmp
data16
pushf
mov
pop
dec
or
sub
imul
lahf
jo
cmp
xor
hlt
jae
pop
push
addr16
pop
dec
ffree
adc
adc
jb
ins
mov
xchg
ss
ret
mov
loop
sbb
imul
jno
cmp
pop
mov
out
lea
mov
addr16
rcr
xchg
push
jp
jmp
cdq
mov
aaa
add
dec
daa
xchg
int3
int
arpl
out
and
cmps
jle
push
fadd
cwde
jp
scas
and
cmp
xchg
sbb
js
movs
cmc
sub
sub
retf
jns
sbb
push
jns
xor
xor
dec
gs
push
inc
push
fild
fdiv
enter
pop
out
or
sub
jmp
push
jnp
mul
mov
jnp
(bad)
xchg
mov
jmp
daa
shr
jp
mov
imul
ret
jno
and
or
fwait
pop
popa
imul
bound
xchg
das
xchg
(bad)
sub
or
mov
in
es
push
adc
mov
xchg
and
cli
xor
pop
(bad)
xlat
mov
mov
xor
adc
add
push
pop
or
or
idiv
scas
sub
pop
pushf
xchg
test
ins
(bad)
or
sahf
les
inc
mov
cmc
out
xor
loopne
add
sub
outs
mov
call
sub
add
sub
cs
mov
retf
int3
xchg
cli
sub
dec
jecxz
mov
int
lea
loope
fdivr
mov
int3
xchg
pop
mov
pop
out
mov
gs
adc
comiss
dec
ret
and
pop
mov
dec
mov
dec
loope
dec
xchg
cs
jp
pop
inc
and
inc
lods
mov
ret
dec
das
or
test
xchg
pop
jp
mov
add
loop
xor
scas
xor
in
push
addr16
sub
pusha
je
mov
call
cmp
aam
mov
mov
adc
mov
push
cmps
cmc
and
enter
jb
es
jmp
je
(bad)
(bad)
and
sub
jb
ret
in
cmps
movs
out
inc
rcr
lahf
repnz
xor
cmp
or
fld
cld
enter
xor
lock
mov
cmc
or
inc
call
add
jp
ds
test
aam
and
test
jp
sbb
mov
scas
adc
ja
or
in
pushf
jo
mov
in
inc
ja
(bad)
mov
sbb
xchg
rcl
sbb
add
out
mov
adc
mov
sbb
sbb
shr
cmps
push
in
stc
movs
fs
sub
jg
adc
sub
in
sub
out
fcmovb
and
add
pop
mov
inc
rol
mov
or
call
xchg
(bad)
rcl
fidiv
dec
rcr
jb
pushf
loope
jb
xchg
pop
mov
fistp
das
push
lea
out
jns
inc
shl
adc
or
test
pop
or
or
hlt
pop
adc
iret
fstp
(bad)
mov
rcl
ja
add
adc
dec
je
mov
cdq
jle
fmul
shl
(bad)
push
sar
push
push
cmc
jp
xlat
mov
(bad)
jns
xlat
ds
cdq
leave
movs
jle
xchg
push
xchg
int3
pop
outs
nop
sar
iret
cmp
jo
jle
ja
sub
xchg
(bad)
sbb
sub
ins
stos
dec
xlat
mov
or
inc
pop
pusha
into
and
out
test
call
in
mov
mov
sub
fisubr
sbb
xchg
and
mov
xchg
movs
and
fisubr
mov
(bad)
sar
popf
jl
sbb
loopne
cmp
inc
fistp
mov
rcl
fwait
push
mov
xchg
adc
repz
and
pop
je
add
loope
pusha
leave
sub
jmp
xchg
mov
pusha
jmp
daa
and
sbb
or
mov
xor
push
add
bound
sub
jnp
pop
stc
test
or
dec
or
std
iret
mov
loop
mov
scas
push
leave
test
pop
popf
js
mov
loop
jns
mov
xor
jp
mov
not
mov
test
cmp
pop
movs
in
mov
pop
jecxz
ror
or
or
movs
pop
in
mov
sub
lock
loop
add
mov
cli
leave
and
(bad)
test
shl
xor
adc
or
repnz
sar
add
retf
xor
ins
in
xchg
lods
jge
shr
iret
xor
cmp
fwait
(bad)
sar
xor
xor
mov
sub
jge
mul
test
cmp
lods
fldcw
retf
sar
aam
int3
sub
push
test
xchg
and
add
or
adc
(bad)
mov
into
mov
mov
mov
std
mov
and
shl
push
add
add
fwait
clc
or
int3
into
pop
sub
idiv
mov
(bad)
les
add
pusha
ret
or
xor
xlat
dec
in
xor
popa
jle
jae
adc
mov
dec
xor
and
(bad)
fdivr
in
arpl
ss
arpl
loopne
push
bound
test
mov
daa
mov
add
cmp
pop
push
(bad)
in
xor
ins
retf
xchg
pop
mov
mov
xor
mov
lods
clc
pop
push
rcl
stos
popa
pop
lods
fisttp
or
jmp
test
in
push
jbe
push
xchg
arpl
mov
lods
and
sti
push
imul
inc
sub
adc
call
adc
jp
pushf
lock
xchg
dec
pop
adc
dec
inc
psubusw
inc
push
cmp
inc
mov
dec
out
sub
push
pop
fstp
sbb
push
in
dec
outs
loope
add
mov
shr
aad
sub
inc
sahf
mov
push
sub
add
xor
fidiv
pop
repz
inc
sbb
pop
or
int3
mov
sbb
add
pop
pusha
push
dec
cld
cli
adc
sbb
test
mov
repnz
or
dec
xor
mov
inc
jmp
cld
and
loop
clc
int3
dec
daa
imul
sbb
ret
sub
dec
pop
jne
xchg
pop
rol
mov
cld
dec
in
pop
dec
push
lods
out
or
into
inc
sti
add
jecxz
(bad)
fcomp
in
pushf
adc
hlt
jge
adc
icebp
into
js
daa
mov
mov
bound
enter
popa
sbb
and
or
addr16
lods
outs
dec
dec
jmp
inc
and
sbb
fdivr
in
add
inc
imul
sub
sar
div
jp
adc
sbb
cmps
pop
sahf
dec
retf
push
pop
lea
cmp
in
xor
(bad)
sbb
jb
mov
pushf
addr16
fstp
pop
in
iret
or
mov
jns
das
mov
adc
inc
(bad)
in
jb
imul
xchg
sahf
(bad)
daa
outs
jae
cmp
sub
inc
cmp
inc
pop
test
adc
sbb
sbb
loope
pop
in
push
lea
xor
loope
jl
mov
jmp
data16
jp
sbb
cld
fisubr
rol
mov
mov
dec
bound
xor
and
mov
ret
scas
call
sbb
data16
jmp
sub
xor
fiadd
push
jmp
or
imul
lock
and
add
adc
test
leave
pop
out
div
xor
and
adc
ficomp
inc
sub
icebp
adc
xor
into
loop
xchg
cs
xor
inc
aas
mov
mov
cld
push
dec
outs
test
cmp
pop
addr16
dec
push
or
or
daa
sub
ror
and
mov
add
clc
inc
mov
push
push
mov
mov
mov
mov
pusha
lock
and
sub
mov
inc
dec
retf
mov
icebp
dec
fisubr
cmp
out
push
in
leave
add
and
sub
xchg
xchg
test
pop
mov
adc
mov
out
dec
push
mov
xchg
xor
or
pop
cmp
cmp
xchg
sbb
in
sub
pop
mov
pop
std
scas
lods
lea
movs
ss
add
dec
into
mov
inc
mov
xor
icebp
cli
add
mov
out
in
mov
(bad)
in
or
dec
cmp
stc
iret
mov
repz
rol
cwde
push
loopne
xchg
mov
xor
sub
sbb
(bad)
rcr
jl
ins
cmp
aas
and
and
aas
loope
cmp
lds
mov
pop
(bad)
fwait
sti
and
fdiv
cmps
mov
retf
out
rol
aad
push
mov
lds
shl
mov
jb
ret
inc
jle
inc
gs
jge
xchg
push
jne
cmp
in
retf
lods
pop
add
repnz
and
sub
jno
in
and
mov
clc
xchg
pop
mov
out
stc
lods
je
mov
cmp
loope
sub
test
inc
jmp
test
out
enter
mov
in
je
cmp
shl
inc
adc
cli
bound
mov
test
mov
lods
inc
cmp
jp
loope
push
int
pop
mov
mov
(bad)
and
daa
std
jg
lods
mov
and
push
xor
jecxz
cmp
sub
push
or
sub
aad
xor
jp
fcom
rcr
sahf
addr16
push
cdq
and
mov
out
shr
loopne
or
data16
cli
push
push
cdq
mov
leave
mov
sbb
mov
or
stos
les
imul
jne
xlat
dec
mov
mov
jae
in
xor
push
xor
push
mov
cld
inc
add
pop
xor
dec
outs
test
mov
push
mov
loop
popa
(bad)
cmc
pushf
pop
shr
pop
jno
pop
out
jo
in
sub
cld
and
daa
jg
cs
sbb
cmps
xor
mov
mov
cmp
mov
stos
sub
in
sbb
add
ret
cmp
cmp
or
sbb
jmp
push
int
jp
imul
fild
fcmovnu
mov
bound
or
sbb
jno
lds
int3
mov
test
xchg
and
mov
or
adc
mov
in
mov
shr
or
popa
out
xchg
inc
sub
sbb
mov
push
dec
fwait
push
out
les
sar
or
push
mov
sub
cdq
js
scas
lods
push
jmp
mov
adc
(bad)
cmp
loope
repz
shl
test
clc
pop
cld
xor
je
or
test
pop
sahf
cld
jnp
imul
lahf
les
je
in
and
mov
in
loopne
add
das
jmp
cmp
pop
ins
mov
or
inc
or
enter
out
test
sbb
jecxz
xchg
mov
and
js
fadd
xlat
add
add
(bad)
jbe
in
aam
jmp
jno
jmp
stos
daa
mov
gs
xchg
pop
cmp
outs
push
stc
jnp
cdq
jg
push
(bad)
das
jns
jp
adc
mov
jp
adc
pop
mov
inc
int3
scas
sbb
popa
repnz
xchg
cmc
aad
jns
stc
mov
out
jl
daa
jp
xchg
jl
push
and
push
xor
popa
sub
arpl
mov
call
cmc
jl
iret
mov
push
in
xchg
rol
or
jo
adc
mov
enter
cmc
add
in
mov
adc
ja
dec
fimul
xchg
gs
and
add
adc
mov
cmp
sbb
outs
cmp
aam
xlat
inc
sbb
mov
push
test
les
pop
dec
ss
push
push
inc
jl
lea
inc
jl
cdq
jl
push
sub
push
fild
xchg
xchg
mov
fild
adc
inc
sbb
dec
sbb
dec
gs
adc
mov
add
popf
push
mov
shl
sbb
adc
hlt
inc
adc
and
in
bndldx
gs
xchg
sbb
push
mov
mov
sahf
ja
(bad)
sbb
cmp
lock
es
sub
lock
shr
adc
sub
dec
jnp
cmp
or
sub
inc
cwde
stos
push
stos
(bad)
in
sbb
cmps
stos
stos
cmp
clc
outs
std
jp
pop
cli
bound
xor
cmp
jge
adc
test
cs
or
lea
mov
movs
xchg
out
aaa
push
fcmovnb
bound
push
push
sbb
out
(bad)
push
bound
jecxz
lods
cld
xor
lods
in
shl
stos
loopne
pushf
cmp
fild
je
sahf
jo
pop
pusha
cld
jmp
or
gs
mov
aaa
outs
movs
xchg
cmc
ret
ret
hlt
jl
push
pop
jne
cs
lock
pop
mov
or
cmp
mov
adc
pushf
loop
adc
mov
xlat
add
sbb
ret
(bad)
clc
adc
(bad)
nop
pop
(bad)
lods
inc
ror
mov
daa
lea
sub
cmovno
in
lods
es
and
mov
xchg
cmps
xchg
mov
cmp
das
lahf
mov
xor
in
adc
sub
nop
push
jl
adc
leave
jge
mov
pop
aaa
and
sub
test
fistp
(bad)
call
mov
aad
loopne
lods
add
mov
push
int
push
je
fisttp
mov
pop
adc
mov
or
mov
scas
loopne
mov
scas
push
sub
hlt
adc
pop
ficomp
xor
push
xor
xor
jecxz
ja
call
aaa
mov
outs
inc
dec
es
dec
aas
jo
jecxz
enter
das
test
neg
gs
sub
outs
sub
sbb
push
js
xchg
repnz
cmp
das
adc
jg
neg
pop
add
mov
jb
dec
or
ret
sub
xchg
or
sti
movs
pop
test
mov
(bad)
sti
xchg
cmp
mov
cli
lods
test
jo
data16
stos
mov
fst
sbb
fidiv
or
stc
and
jns
and
adc
std
push
int3
or
jns
jae
gs
push
mov
jno
mov
lock
js
push
push
js
pop
cmps
pushf
jae
mov
enter
out
ins
stos
jp
rol
(bad)
mov
imul
mov
cwde
addr16
sub
pop
bound
mov
jmp
cmp
stos
pop
idiv
mov
adc
outs
xchg
sbb
loop
and
or
xchg
jg
jp
push
dec
mov
arpl
test
cmps
or
fisub
jae
pop
cmps
lahf
gs
repnz
icebp
popf
xor
icebp
inc
fiadd
imul
cmp
jg
sbb
sbb
inc
sub
ins
push
xor
adc
push
test
dec
mov
xor
inc
jle
lds
mov
cwde
push
cmps
inc
lock
xchg
jne
adc
push
jno
xchg
cmp
imul
jmp
sbb
jo
call
cmp
sub
xor
xlat
inc
xchg
jnp
push
adc
cmp
jp
cmp
mov
jmp
enter
pop
or
ret
add
mov
jnp
into
cmp
out
es
arpl
lahf
xchg
mov
bound
xor
cwde
adc
inc
inc
pop
popf
(bad)
add
std
push
jmp
addr16
stos
jmp
pop
data16
sub
enter
pop
fisub
xor
out
mov
xacquire
pop
cmp
sub
scas
daa
mov
outs
pop
imul
(bad)
mov
mov
outs
sub
mov
ins
or
fsub
int3
enter
adc
xchg
cmp
jb
jmp
xor
or
mov
cmp
fucom
mov
and
adc
sbb
and
fnstsw
rcl
adc
imul
je
jns
inc
ins
xor
jp
imul
mov
sub
inc
jecxz
lods
in
ss
retf
add
je
mov
ret
mov
lods
shl
xor
movs
xchg
xchg
pop
pop
mov
cli
add
repnz
out
mov
adc
out
(bad)
push
fild
cwde
into
pop
sbb
add
mov
dec
les
xchg
pop
and
mov
addr16
jae
lods
repnz
fldl2e
sub
adc
ret
(bad)
stos
nop
push
repz
dec
in
xlat
sub
jecxz
and
lahf
push
shr
mov
in
cmp
arpl
mov
mov
daa
xor
push
dec
retf
jge
sbb
or
aam
mov
stos
repz
xchg
push
or
nop
test
repz
xchg
aad
pop
int3
fld
push
sbb
cs
and
ret
lods
jl
mov
lods
xor
jg
cld
nop
jb
or
xchg
dec
sbb
pop
sti
mov
inc
push
and
lods
cwde
daa
ja
dec
aad
adc
addr16
(bad)
icebp
xchg
or
pop
sbb
pop
sbb
pushf
sub
fsubp
or
and
mov
sbb
stc
sbb
mov
jbe
mul
or
test
cmc
mov
in
jo
add
aas
jge
loop
sbb
fwait
loope
loopne
dec
dec
stos
out
xor
add
inc
lock
sbb
jp
repnz
mov
dec
add
jl
cdq
inc
aaa
pop
repnz
lock
mov
sbb
(bad)
and
jecxz
xchg
daa
xchg
gs
js
adc
add
jns
add
scas
jle
addr16
jge
cmp
lea
fbld
cmp
sbb
inc
fdivr
stos
punpckldq
sti
into
jo
jmp
xor
cmp
pushf
sbb
neg
cwde
xor
sbb
fwait
loope
add
mov
pop
pop
lods
push
jb
push
dec
scas
aam
mov
shr
jb
push
push
inc
xor
xchg
pushf
ins
adc
dec
and
aad
sbb
mov
js
cmp
jmp
sub
fucomip
mov
xor
or
jbe
stc
dec
adc
mov
dec
adc
arpl
and
mov
int
pop
cmp
push
or
push
and
fstp
je
and
js
cdq
out
push
add
movs
jg
xor
xchg
fsub
aad
xor
movs
inc
ror
sbb
iret
popf
out
outs
add
mov
das
push
inc
fs
stos
loop
and
push
pusha
sbb
imul
mov
sbb
nop
sbb
test
push
fdiv
call
lahf
jns
ins
pop
xchg
inc
mov
sahf
test
repz
inc
push
sub
pop
enter
ja
(bad)
mov
cs
fs
(bad)
paddd
bnd
add
add
sahf
mov
cli
scas
mov
shr
or
pop
fucomip
dec
dec
out
retf
and
push
movs
or
or
and
mov
pop
mov
jmp
or
daa
xlat
scas
cmp
cmps
or
mov
rol
inc
sub
int
enter
jae
mov
ins
jle
iret
pusha
sub
retf
popa
sbb
inc
mov
cli
mov
xor
push
in
ja
stos
stos
inc
and
mov
sub
nop
lea
jne
imul
push
daa
mov
dec
xchg
aad
mov
shl
mov
mov
loop
shr
mov
dec
stc
dec
pop
rol
mov
adc
imul
test
xor
call
push
je
pushf
and
and
into
jbe
dec
xor
and
and
add
js
mov
cmp
push
cmp
ins
fistp
adc
ror
out
cwde
ins
push
push
ds
add
cld
push
std
push
aad
(bad)
aam
inc
(bad)
enter
(bad)
(bad)
mov
fcom
or
inc
adc
xor
jo
(bad)
mov
and
stos
mov
icebp
repnz
sbb
sbb
mov
loope
cmp
pop
xor
dec
cmp
ins
mov
cmovnp
push
pop
enter
dec
dec
sbb
and
in
xor
lds
cmp
je
xchg
arpl
(bad)
dec
sub
ins
fmul
das
push
scas
in
xor
in
aad
mov
pop
push
xor
pop
aas
int
push
inc
aam
and
(bad)
mov
mov
ror
retf
mov
popf
jmp
vpcmpd
ds
push
push
sub
das
and
inc
push
je
cmp
push
fistp
pop
inc
lahf
cwde
jno
imul
in
das
xor
jecxz
mov
add
es
popf
lds
ss
test
xlat
pop
or
inc
icebp
das
out
(bad)
repz
movs
cmps
adc
imul
jmp
fcom
push
mov
jno
adc
sub
and
add
lahf
mov
or
ins
es
loop
xchg
fstp
enter
pop
les
cmc
mov
sub
push
arpl
(bad)
xor
or
je
shl
cmp
repnz
ja
sbb
shl
or
ja
rcr
ret
mov
call
call
das
scas
movs
lahf
arpl
add
jmp
popa
push
push
jecxz
cmp
jnp
pop
outs
cs
mov
hlt
and
sub
mov
pop
loope
jnp
mov
push
push
lea
mov
std
jns
cld
scas
shr
adc
pop
and
ins
bound
rcl
xor
mov
sbb
aaa
push
aam
(bad)
ds
imul
jecxz
ret
add
mov
retf
push
imul
ficomp
sub
cwde
jae
fs
mov
jge
fs
scas
add
pop
add
push
jp
add
mov
shl
rol
cmps
(bad)
cmp
cld
xor
push
lahf
idiv
rcr
ret
outs
retf
add
(bad)
cmp
popa
dec
cmp
and
mov
or
xor
dec
pop
mov
push
icebp
cmp
test
mov
mov
dec
sbb
je
pop
lds
or
rcl
sbb
mov
push
jmp
ins
mov
cmp
xor
scas
push
pop
clc
mov
(bad)
cmp
mov
popf
mov
dec
xor
xor
add
push
pop
xor
xchg
das
pop
adc
push
ret
enter
or
lock
mov
pop
(bad)
cmp
mov
enter
aad
mov
push
xchg
push
cmps
popa
sbb
mov
add
cmp
repnz
cmp
in
loop
xor
cs
in
arpl
mov
inc
pop
pop
and
clc
xor
enter
lods
test
out
sar
mov
sub
xor
(bad)
iret
std
sahf
sbb
cmc
mov
(bad)
push
aad
int3
stos
sub
imul
pop
es
jmp
(bad)
(bad)
and
add
ror
lods
cli
push
mov
or
mov
mov
push
jno
loopne
mov
rcr
mov
(bad)
adc
retf
dec
cmps
sbb
int
fwait
sub
ds
loop
js
cmp
sbb
or
sbb
(bad)
cli
and
push
jne
stos
pop
sbb
jecxz
mov
pop
nop
ja
mov
pop
fucomip
cmp
mov
xchg
retf
adc
sub
xor
setbe
push
scas
pop
hlt
xor
stos
loopne
hlt
(bad)
call
mov
push
(bad)
adc
fdiv
mov
fnstcw
mov
add
inc
ret
(bad)
push
jns
sub
add
(bad)
sar
inc
dec
icebp
pop
mov
ficomp
xchg
jp
and
or
pop
aad
cwde
or
neg
or
out
cmp
retf
sbb
inc
or
mov
sub
sbb
(bad)
xor
les
addr16
mov
(bad)
in
test
jns
add
outs
mov
jge
cwde
cmp
lods
add
scas
add
das
test
pop
add
mov
add
mov
pop
pop
cdq
push
mov
jge
add
jnp
add
cs
mov
dec
rcr
inc
imul
mov
stc
enter
xchg
das
dec
ror
cdq
lods
mov
or
push
sub
cmp
cmp
lea
ret
push
mov
dec
push
lods
punpckhbw
bound
stc
popa
sub
xor
call
jl
dec
lea
cwde
xchg
mov
ror
outs
out
sti
scas
ins
jne
xchg
aam
jle
and
mov
cmp
xchg
push
and
inc
(bad)
out
lods
ds
sub
jecxz
mov
dec
ds
and
add
popf
sub
cld
mov
in
mov
mov
and
push
hlt
xchg
sub
jge
cdq
mov
in
and
sbb
mov
shl
cmovnp
push
mov
pop
scas
test
jl
xchg
fmul
cmp
sbb
retf
mov
shl
shr
imul
cmp
mov
test
clc
add
xchg
sub
push
int3
xchg
push
fldz
add
cmps
add
cmc
or
jg
out
inc
push
lods
jge
je
cwde
in
scas
mov
cs
and
scas
fisub
xor
in
push
sbb
add
mov
loop
div
fdivr
test
cmp
mov
shl
push
jge
push
sti
bound
jp
dec
cdq
push
sbb
ja
ja
dec
mov
jmp
jo
ins
bound
and
dec
mov
xchg
(bad)
lea
fwait
sbb
scas
ret
bound
pop
jmp
xor
cmp
fadd
(bad)
outs
and
ss
mov
fdiv
pushf
or
dec
fs
cmp
pop
inc
fcom
lods
gs
sub
je
and
bound
adc
mov
mov
lods
inc
xor
ja
dec
cmc
cwde
test
mov
mov
sub
push
test
int
std
(bad)
push
adc
adc
xchg
pusha
lods
mov
ret
aaa
dec
mov
pop
inc
ins
jecxz
leave
mov
or
imul
adc
push
mov
setge
cmp
pop
add
jmp
sbb
out
inc
or
and
dec
mov
retf
push
rol
pop
ret
jb
lds
xchg
and
iret
stc
daa
int
push
je
inc
pop
mov
ret
pushf
das
sub
or
sub
arpl
inc
dec
mov
std
shl
inc
mov
ret
fs
shr
lahf
add
push
sub
outs
inc
aad
dec
ss
push
adc
ss
scas
adc
pop
or
adc
(bad)
xchg
rcr
ss
sub
ins
xor
jmp
aaa
push
(bad)
loope
ins
scas
cmp
cli
push
jns
xchg
cmp
push
movs
fadd
stos
idiv
popf
shl
xchg
push
cld
cmp
ds
jecxz
cmc
and
mov
dec
dec
shl
ja
xor
fisttp
ins
(bad)
pop
add
sbb
movs
repnz
lea
loopne
xchg
maskmovq
fs
push
add
repz
das
mov
cwde
mov
jle
mov
push
xchg
lea
int
xchg
xchg
(bad)
js
dec
jecxz
cmps
inc
out
mov
addr16
xlat
pop
jnp
frstor
popf
or
inc
adc
(bad)
add
adc
mov
arpl
scas
cmp
and
cmp
xor
fs
push
bound
sar
pop
pop
pop
gs
movs
lahf
add
or
mov
mov
retf
add
push
pop
out
jecxz
xchg
xchg
pop
mov
aad
cmp
dec
push
mov
gs
adc
sbb
pushf
ds
adc
sub
jmp
(bad)
add
pop
test
sub
pusha
mov
mov
outs
lock
iret
sbb
pop
mov
in
retf
shl
jae
fnstsw
inc
inc
cmp
jg
scas
add
movs
daa
xchg
push
xor
pop
clc
pop
imul
outs
cli
and
sbb
and
scas
fstp
pop
test
mov
jle
xor
mov
lds
inc
lahf
clc
(bad)
shr
adc
fwait
sub
mov
pop
sub
ss
cwd
dec
mov
sub
adc
sahf
repnz
sar
mov
mov
jne
pop
mov
lahf
inc
sub
push
in
je
outs
jmp
scas
das
jle
push
stos
pop
neg
and
mov
adc
sar
cs
and
(bad)
repnz
fisub
mov
sbb
inc
lock
retf
mov
jmp
cmp
and
push
popf
mov
dec
or
pop
cli
fdivr
ret
mov
arpl
lea
jp
cwde
add
cmp
loopne
or
mov
fsubr
(bad)
sub
movs
push
cli
and
cld
sbb
imul
adc
fiadd
push
xchg
mov
xor
daa
inc
jge
int
sbb
push
ret
stos
push
retf
sub
add
into
cmc
jp
in
mov
inc
mov
xor
test
gs
lods
and
fild
add
mov
(bad)
xchg
or
rcr
(bad)
aam
movs
das
dec
loope
stos
push
cmc
je
je
iret
mov
dec
popa
test
xchg
fsub
xchg
adc
cs
retf
repnz
sub
jae
aam
mov
mov
or
mov
and
mov
arpl
xor
sahf
aam
leave
or
(bad)
cmps
(bad)
dec
mov
bound
(bad)
lahf
mov
push
iret
mov
add
jmp
jb
leave
jno
jp
jo
lahf
test
xor
and
outs
data16
(bad)
cli
scas
mov
xlat
lods
mov
push
loop
add
cmp
mov
mov
cld
retf
stos
mov
push
or
pusha
xchg
jae
sbb
jp
dec
(bad)
sub
repnz
rcr
ret
xor
cmps
out
das
mov
fcom
jb
dec
shl
push
imul
or
xor
mov
(bad)
or
cmps
mov
outs
cmp
dec
pop
sti
push
mov
data16
lock
push
nop
fdivr
pop
jge
xchg
dec
jae
jle
adc
test
cmp
inc
in
(bad)
scas
mov
gs
dec
cmp
pop
fist
fimul
int
ror
jnp
or
data16
std
xor
lods
pop
push
loopne
jo
cwde
add
sbb
xchg
sub
sbb
std
add
inc
shl
mov
and
into
outs
mov
dec
jmp
popf
add
xchg
outs
xor
loope
mov
mov
adc
push
repnz
int3
dec
adc
xchg
imul
sar
adc
retf
xchg
pop
out
test
pop
lods
xor
test
inc
xchg
or
sar
jl
pushf
ret
fstp
mov
inc
outs
cmp
pop
ret
add
sub
pop
cli
(bad)
push
(bad)
fld
sahf
fdivr
or
sub
retf
vmread
adc
and
and
fidivr
icebp
xchg
retf
xchg
cli
and
mov
mov
sahf
cmp
rcr
into
clc
adc
mov
xchg
dec
pusha
fimul
mov
xchg
loope
outs
repz
call
jge
push
repz
xor
push
mov
pop
gs
adc
cmc
lds
push
inc
xchg
fxch
pop
cwde
out
stc
mov
lea
lods
pop
aaa
xor
fcom
ins
test
movs
js
rcl
(bad)
jg
mov
xchg
pop
jmp
fsubp
xchg
(bad)
in
or
xchg
imul
xchg
jge
adc
pop
loopne
leave
sub
mov
mov
mov
out
mov
mov
lods
imul
jne
inc
retf
add
inc
cmp
lods
sbb
ja
cwde
mov
jb
mov
inc
loop
sub
push
ja
jp
leave
gs
addr16
dec
arpl
aas
xor
push
push
lods
lds
mov
lods
mov
and
mov
cmp
or
xor
hlt
xchg
loopne
icebp
out
(bad)
(bad)
ja
sub
jae
dec
push
call
xchg
add
retf
(bad)
push
cmc
adc
out
add
lock
call
ror
push
push
mov
push
aas
xchg
cmc
mov
cmp
xchg
lods
mov
repnz
sahf
push
fst
sub
mov
jl
inc
sub
imul
mov
push
adc
xor
fnsetpm(287
js
mov
cmp
sbb
jmp
in
int
adc
push
cld
out
dec
clc
outs
inc
xor
cmc
and
std
pop
and
jg
and
addr16
mov
pop
nop
ins
or
mov
test
pop
out
mov
out
sahf
adc
jge
pop
(bad)
adc
inc
stc
xchg
sbb
push
enter
test
push
adc
jle
add
cld
or
push
stos
cdq
inc
nop
js
test
mov
cmp
xor
dec
cmp
loope
call
push
adc
pop
jge
xchg
rcr
push
les
push
xor
sub
dec
test
mov
outs
push
dec
pusha
mov
jl
push
inc
loop
push
or
mov
xor
adc
je
daa
lahf
mov
rcl
xor
es
fdivr
adc
sub
fwait
leave
dec
add
dec
jnp
or
cmps
xor
xor
sbb
mov
jno
mov
and
add
sbb
pop
ret
ror
mov
test
cmps
push
int3
adc
xchg
sub
aad
pop
mov
cmp
jp
js
add
or
pop
mov
add
neg
fsubr
sub
pop
fs
std
dec
loopne
retf
push
xor
dec
js
jg
adc
xlat
jo
cmp
outs
sbb
js
mov
loopne
dec
cld
cmps
jnp
stos
xor
pop
int
mov
rol
lods
dec
dec
xor
add
or
push
sub
adc
inc
pop
aas
es
mov
shl
mov
pop
cwde
and
mov
mov
xchg
(bad)
push
test
inc
lds
mov
mov
cwde
lods
test
fdivr
xchg
lahf
loopne
pop
sub
outs
stos
shl
and
loop
and
into
les
mov
jl
inc
aam
lods
pusha
jg
imul
add
dec
sbb
aad
xchg
adc
mov
ins
stc
adc
sti
jmp
sub
xor
xor
sahf
xor
ror
cli
mov
push
mov
outs
das
mov
(bad)
cwde
mov
test
mov
push
mov
fcomp
pop
inc
js
cdq
jnp
sub
or
(bad)
mov
mov
inc
inc
mov
sub
push
mov
sbb
sbb
dec
xchg
cwde
shl
(bad)
retf
jb
jns
enter
sub
mov
xchg
inc
push
xchg
mov
dec
or
jge
sub
scas
lea
fcomp
mov
mov
lea
in
call
rcl
inc
out
nop
fwait
sub
pop
mov
std
pop
push
out
inc
push
mov
inc
dec
pop
mov
in
cwde
sbb
xor
out
pop
shl
cmp
ret
jbe
mov
jl
imul
jne
sbb
pop
bound
lahf
inc
lods
lds
push
sub
or
call
inc
data16
mov
pop
push
push
or
mov
ret
pusha
arpl
jp
in
fld
fsubr
mov
(bad)
jno
push
cmp
jo
jecxz
and
cmp
cwde
lods
cmps
mov
sar
jp
add
inc
scas
dec
je
xchg
popf
mov
imul
pushf
add
repnz
xchg
hlt
push
mov
sub
cmp
and
fs
cmp
clc
sahf
and
sub
xchg
fwait
repz
xchg
push
adc
pop
data16
ja
or
mov
cs
in
mov
push
ja
xor
call
dec
sub
js
dec
mov
dec
sahf
movs
lods
add
jo
sbb
in
mov
pushf
jns
xor
push
icebp
in
rep
bound
jge
pusha
into
in
bound
leave
inc
mov
arpl
retf
loopne
xor
fwait
push
fdiv
cmp
mov
jae
mov
iret
adc
mov
mov
out
jmp
test
inc
cwde
std
loope
fst
add
xor
pusha
push
pop
scas
or
jbe
cmc
pop
imul
into
xchg
sub
test
dec
enter
inc
mov
dec
lea
addr16
add
inc
mov
dec
mov
pop
xchg
cld
jge
push
push
inc
scas
pop
(bad)
cmp
jb
shl
(bad)
cmps
jno
mul
stc
pop
push
inc
lds
cli
or
out
nop
lods
jmp
(bad)
pushf
xchg
psubusw
iret
daa
inc
cli
xchg
fiadd
cmp
cmp
push
or
jb
test
xchg
stos
push
xchg
push
lock
scas
or
xchg
(bad)
add
or
mov
and
stos
ffreep
xchg
imul
scas
mov
xchg
or
inc
ins
ficomp
adc
mov
jno
or
idiv
or
mov
lds
jmp
sub
rcl
push
adc
add
fisubr
popf
sub
push
or
push
push
les
mov
imul
jle
pop
mov
jnp
mov
std
imul
arpl
xchg
cdq
dec
cmp
scas
je
rcl
inc
add
js
retf
(bad)
leave
ins
retf
and
and
into
les
mov
sbb
xchg
sar
push
test
mov
gs
mov
pop
scas
or
cs
add
fstp
sti
pusha
pop
jbe
pop
ja
js
cli
cdq
in
dec
sbb
nop
inc
sub
fs
jp
ins
adc
mov
pop
push
push
cli
mov
ins
pop
popf
scas
add
add
cmp
es
out
xchg
rcl
and
mov
popa
addr16
nop
loopne
push
or
jecxz
jbe
jmp
imul
das
push
jmp
inc
xchg
stos
dec
or
jmp
das
cmp
movs
sub
nop
jp
sbb
(bad)
daa
fcom
stc
mov
adc
mov
push
xlat
pop
and
and
xor
push
adc
hlt
lea
mov
cmp
cmps
dec
call
adc
scas
cmc
and
xchg
push
pop
dec
xor
lds
test
adc
mov
es
jo
(bad)
mov
aaa
mov
loopne
ret
push
jae
and
imul
inc
dec
icebp
jb
mov
inc
pop
xor
pop
cld
mov
test
js
pop
push
and
pop
jbe
std
lods
test
lods
jge
das
ret
ror
sar
mov
push
daa
sub
test
(bad)
cs
or
cli
cs
jb
loopne
mov
icebp
rdpmc
jp
pop
stos
mov
mov
dec
add
add
push
add
cmps
cmc
jmp
or
mov
outs
loopne
and
test
mov
cli
sbb
clc
repz
cmp
fistp
cmc
lahf
mov
popa
in
movs
daa
gs
iret
xor
push
xchg
scas
call
push
mov
(bad)
int
mov
cmp
jg
add
mov
iret
cs
out
stc
(bad)
xlat
push
jns
push
or
aaa
aam
add
mov
loop
rep
retf
and
out
dec
aaa
push
ins
loopne
xor
loope
adc
mov
sbb
std
fistp
(bad)
xor
enter
imul
or
into
sbb
loope
fst
inc
mov
movs
scas
je
sbb
cmp
movs
mov
jle
(bad)
push
sub
adc
xor
enter
adc
jno
pop
mov
cmp
pop
push
cmps
push
stos
jne
popa
shl
add
mov
vpshuflw
stos
mov
mov
push
ja
and
mul
mov
pop
fs
push
mov
fst
fxch
std
rcl
dec
xor
je
ror
cmp
gs
push
stos
mov
jp
clc
adc
test
cmp
jle
pop
sbb
xchg
in
mov
jl
dec
mov
xor
aaa
popa
loop
pop
jl
arpl
pop
dec
int
ins
out
iret
imul
nop
das
nop
outs
je
lea
cli
sbb
les
sub
(bad)
pop
pop
jmp
test
xchg
lods
and
(bad)
sbb
jae
out
in
mov
add
mov
fidiv
ret
push
arpl
movs
adc
xor
inc
xchg
or
inc
dec
dec
(bad)
fdivp
xor
sahf
aaa
xor
pop
scas
test
push
and
daa
sahf
or
xor
stos
inc
ret
mov
pop
gs
fadd
push
cmp
sbb
inc
stos
repz
mov
push
mov
xchg
retf
mov
jecxz
dec
pop
pop
sbb
fdiv
cmps
mov
popa
(bad)
fs
jmp
dec
mov
outs
cmc
popa
add
dec
and
out
or
push
mov
dec
cdq
adc
or
scas
outs
out
dec
adc
clc
imul
sub
pop
dec
in
fcompp
ffree
xor
inc
mov
pushf
xlat
add
rol
push
mov
rol
int
cmp
xchg
test
push
lock
ficomp
jp
je
iret
popa
fwait
in
xor
fist
sub
push
es
cs
scas
mov
cdq
ss
add
enter
push
jb
mov
dec
add
data16
mov
(bad)
les
lds
lods
add
jbe
xchg
adc
xor
lods
out
ins
push
cld
push
sti
xor
mov
addr16
fdiv
jp
js
push
in
dec
xor
jmp
mov
xor
loope
push
mov
pop
in
pop
cli
(bad)
stos
mov
je
cmp
movs
pusha
fisttp
or
movs
pusha
mov
mov
jmp
cs
xchg
inc
js
push
nop
fs
mov
dec
add
mov
sub
jmp
arpl
pusha
and
pop
or
or
call
shl
fldcw
push
enter
outs
lahf
stos
cmp
cmp
pop
icebp
jno
mov
and
sbb
aam
or
and
jmp
jmp
sbb
push
loopne
adc
lods
pop
aam
xchg
test
push
je
scas
js
sbb
inc
ins
aad
nop
mov
pop
add
dec
or
xor
in
dec
add
fldcw
inc
jne
repz
ret
inc
dec
add
pushf
mov
jb
stc
mov
icebp
sub
pop
aaa
movs
retf
xchg
add
hlt
aad
jp
jecxz
icebp
ficomp
movs
ret
push
int
test
mov
jg
push
cs
pop
mov
push
scas
xor
xlat
lock
mov
ss
ja
add
cmp
shl
lods
cld
pcmpeqb
adc
mov
fisub
(bad)
xchg
dec
push
shr
lods
mov
jg
rol
call
mov
or
in
xchg
lea
jb
mov
and
test
fs
jno
xchg
push
or
xchg
xchg
adc
xlat
loopne
in
add
add
sbb
sub
sbb
(bad)
into
and
mov
xchg
or
xchg
push
pusha
cmps
and
test
sbb
jp
jbe
mov
xor
loop
sbb
stos
push
jmp
lahf
jnp
dec
fld
adc
cmp
jo
retf
scas
sub
(bad)
jmp
test
adc
jnp
push
sar
mov
aaa
(bad)
aas
fldenv
mov
in
lods
call
iret
ja
xchg
mov
cld
or
add
arpl
ss
pop
fdivr
jge
xchg
loopne
rcl
and
mov
fcos
xor
aad
and
pop
and
push
loop
xchg
jmp
repz
mov
jle
imul
outs
or
jg
pop
shl
and
jmp
out
dec
pop
repz
in
adc
mov
and
pop
hlt
xlat
jge
or
mov
test
enter
push
inc
retf
pop
adc
clc
sub
xlat
push
add
(bad)
and
xchg
or
cmps
push
into
test
stos
pop
push
dec
jg
or
repz
mov
mov
cwde
push
jge
jno
xchg
dec
fs
xchg
push
(bad)
lods
xchg
imul
(bad)
call
pushf
cwde
movs
test
daa
mov
xchg
rol
jae
in
jns
sbb
push
in
xor
iret
lea
xchg
pop
clc
mov
cmp
scas
out
scas
xchg
fisttp
cs
mov
mov
fwait
add
xor
sub
jne
mov
jle
sbb
jge
in
fcmovbe
in
cld
les
xchg
movs
pushf
test
mov
inc
loope
or
cmps
repz
bound
fcomp
mov
dec
fistp
push
iret
xor
mov
inc
je
mov
add
jns
dec
into
cmp
(bad)
ficomp
push
or
xchg
dec
aaa
cmp
push
iret
in
sub
lea
cmp
xchg
movs
movs
data16
jns
pop
pop
mov
push
pop
add
popf
pushf
lods
enter
push
ins
dec
dec
test
inc
xchg
fwait
dec
mov
and
in
push
pop
jecxz
(bad)
mov
cli
or
cmp
inc
xchg
cmp
in
xor
mov
jno
xchg
outs
retf
mov
and
push
or
push
(bad)
(bad)
int
mov
test
int
or
repnz
and
inc
aas
xchg
adc
mov
inc
test
test
or
fs
inc
je
xor
fist
(bad)
dec
jno
adc
mov
cmp
shl
loope
mov
repz
cmps
cmp
(bad)
loope
push
pop
sbb
cmp
loop
xchg
pop
je
aas
inc
or
cld
xchg
jne
sbb
cli
push
adc
test
mov
psubd
lea
xor
mov
movs
dec
add
sbb
dec
popf
pop
shr
gs
push
and
jg
in
call
mov
loope
shl
int
ins
jg
inc
lahf
retf
mov
into
mov
pop
data16
out
aas
cmc
mov
mov
dec
cmp
pop
xchg
sar
nop
push
ror
add
mov
jbe
into
lahf
jne
aaa
ret
cmp
fisttp
xchg
daa
(bad)
pop
loopne
pop
xchg
outs
xchg
movs
daa
pop
mov
nop
xchg
sub
cmps
jle
mov
inc
push
sub
mov
mov
add
cmp
call
stc
pop
sbb
mov
jae
inc
ins
(bad)
xor
xchg
sub
pop
in
pop
adc
test
cmp
jb
es
sbb
pop
fmul
mov
xchg
jecxz
popf
sbb
fs
lods
aaa
jno
popa
mov
fist
dec
out
stos
pop
retf
add
inc
jae
(bad)
fist
xchg
mov
imul
mov
ret
jecxz
sbb
es
mov
aas
jmp
cs
mov
outs
ja
(bad)
mov
jl
push
xchg
arpl
adc
pavgw
xchg
ror
pop
imul
cmp
(bad)
std
fcom
test
les
imul
mov
stc
sahf
sub
jno
or
or
xchg
stos
jno
enter
pop
sub
and
rcr
ss
out
stc
mov
and
div
inc
mov
cli
loop
and
add
cmps
jbe
and
mov
dec
pop
and
outs
lods
cmps
mov
je
push
jns
push
sar
push
or
fs
add
je
fs
add
mov
pop
or
cmps
push
loopne
pop
dec
mov
mov
pop
lods
xchg
add
fimul
and
mov
push
(bad)
add
adc
aaa
inc
push
mov
pop
adc
or
imul
(bad)
stc
add
stos
or
adc
mov
mov
jb
xor
jmp
lahf
and
mov
xchg
pop
leave
adc
iret
leave
and
cmp
mov
mov
pop
jmp
jae
rcr
jnp
sbb
out
repnz
out
ret
arpl
mov
arpl
inc
adc
push
fldcw
xchg
xchg
adc
sub
mov
sbb
add
imul
scas
shl
sub
jecxz
and
push
int3
stos
ins
and
movs
mov
xor
sub
(bad)
push
bound
xor
int3
ret
jne
(bad)
mov
and
aad
ret
pop
mov
dec
cmp
inc
mov
adc
bound
pop
outs
shr
mov
pop
mov
fidivr
bt
xchg
inc
fwait
in
sbb
mov
sbb
sub
pop
or
fldcw
xchg
jnp
out
ins
fbstp
mov
mov
sbb
and
cmp
adc
jg
shl
les
sbb
ss
dec
repnz
clc
jne
sub
icebp
lock
enter
pop
outs
fisttp
cmps
sbb
xor
jbe
xor
(bad)
or
mov
push
(bad)
adc
mov
fild
call
or
outs
scas
fcmovnu
sub
add
push
call
jo
xchg
fs
xchg
or
xor
test
out
adc
popa
adc
cmp
or
sub
fucomip
jecxz
jae
(bad)
jp
mov
aad
push
sub
inc
movs
mov
sbb
cmp
jge
push
pop
lds
out
jae
fld
mov
adc
sbb
movs
mov
test
aam
dec
stos
stos
ficomp
mov
push
stc
mov
dec
cs
leave
es
dec
mov
pop
jmp
jo
sub
xchg
cwde
or
std
push
cmc
jmp
mov
lods
sub
jnp
xor
js
sub
sub
test
sti
lods
inc
dec
pushf
mov
cmp
sbb
out
push
jne
or
int3
mov
mov
fbld
retf
pop
ja
lds
std
outs
enter
(bad)
pop
cs
mov
test
in
lods
mov
shr
shl
lods
inc
push
loopne
mov
mov
jne
aas
ds
mov
lahf
fstp
(bad)
rol
adc
dec
lds
pop
fs
inc
loopne
push
(bad)
repnz
push
fist
repz
and
mov
into
mov
xchg
or
fld
popa
ret
es
cmp
arpl
shl
fisttp
jno
push
and
std
inc
mov
mov
ror
sbb
(bad)
adc
aad
xor
xchg
popf
lahf
dec
push
adc
inc
loopne
add
xor
jo
fstp
lahf
ret
xchg
push
add
cli
sbb
sbb
pop
leave
sub
inc
add
cli
and
and
aam
cli
hlt
dec
int3
jns
aad
mov
push
inc
aad
gs
push
push
cmp
nop
icebp
bnd
jge
dec
mov
xor
pushf
cmp
xcrypt-cbc
cmps
adc
je
ja
mov
add
sbb
data16
aas
pop
pop
cli
movs
sub
xor
repnz
(bad)
int
nop
sub
dec
xchg
ret
and
retf
push
sbb
or
and
mov
jnp
inc
push
mov
ss
sbb
retf
sbb
aam
and
icebp
inc
pushw
lods
lock
(bad)
adc
out
dec
cmps
pushf
fsubr
jl
mov
ror
pop
js
mov
or
aaa
adc
sti
xchg
jne
sub
pop
or
test
mov
repz
xor
fwait
mov
daa
fisttp
repz
outs
dec
add
add
stos
rol
repz
test
inc
mov
imul
(bad)
sub
jns
inc
les
aaa
or
jp
xchg
xor
test
inc
addr16
lods
stos
jg
pushf
jb
or
ror
adc
dec
shr
cmp
pop
xor
inc
enter
fcom
xor
iret
mov
push
lock
not
cmc
mov
inc
push
pop
mov
xor
sbb
cs
xchg
dec
ret
jb
dec
mov
rcl
lea
fild
add
mov
inc
addr16
xlat
aad
xchg
mov
test
mov
nop
fwait
mov
cli
xchg
xor
sbb
fcmovbe
in
sub
cs
sub
std
jnp
imul
mov
cmp
xchg
add
std
jmp
mov
pop
push
sbb
inc
pusha
es
jne
jns
icebp
hlt
push
ins
stc
ja
lods
inc
jns
mov
iret
loope
push
iret
sub
pop
ret
xor
adc
xor
icebp
xchg
stos
jb
push
pop
gs
sub
jne
sbb
mov
and
ret
je
mov
mov
mov
jp
fisttp
xchg
push
push
dec
loop
ins
sar
add
adc
or
jns
pop
jb
fnsave
mov
outs
or
shl
arpl
mov
and
das
inc
in
sti
ror
or
cld
(bad)
inc
xchg
outs
jne
mov
pop
push
sub
adc
jle
imul
or
sub
xor
mov
push
popf
or
and
cld
adc
and
jno
and
in
inc
adc
sbb
in
jae
mov
push
ja
dec
or
dec
sub
mov
scas
and
int3
add
stos
(bad)
xchg
pop
movs
or
pop
xor
xchg
dec
push
or
push
mov
inc
rcl
jbe
sub
js
and
daa
out
jp
mov
mov
call
xor
clc
cwde
xchg
aam
pop
adc
adc
add
aas
add
popf
cmp
cdq
xchg
call
jne
jle
lock
das
jl
dec
mov
cdq
dec
pushf
imul
pop
jns
push
adc
cmp
lods
add
mov
adc
pop
sub
cmps
pop
rcl
mov
repnz
lods
bound
adc
lock
adc
pop
int
loope
xchg
mov
inc
sbb
push
outs
addr16
clc
xchg
js
out
enter
xchg
or
sub
and
inc
and
add
aas
inc
or
retf
add
add
out
outs
xchg
pop
call
outs
add
loopne
mov
jne
pop
(bad)
out
mov
inc
(bad)
xor
nop
and
cmp
or
cdq
pop
fild
test
xchg
dec
push
ja
sub
ror
jp
adc
pop
xor
jns
stos
fistp
dec
mov
punpckhbw
ds
sub
xor
mov
mov
div
cmp
cdq
imul
lods
and
inc
inc
jmp
retf
mov
pop
cmp
mov
and
into
cmp
out
(bad)
jg
iret
pminub
xor
sbb
mov
add
xchg
sub
lahf
inc
sbb
cmps
xchg
pop
std
ss
das
jae
jmp
cmp
(bad)
scas
xchg
sub
call
int
and
shr
not
sbb
cmp
push
retf
addr16
stc
sub
call
sub
ret
and
and
sbb
pop
gs
or
stos
data16
adc
int3
(bad)
jb
in
jmp
xchg
adc
jns
rcr
xor
loopne
xor
push
sbb
mov
xor
dec
add
(bad)
xchg
pop
add
ficom
in
lods
idiv
jb
xchg
inc
cmp
mov
xchg
repnz
jne
(bad)
test
(bad)
and
clc
adc
les
sub
mov
scas
fs
pop
jnp
jo
push
cli
mov
jb
xor
cmp
out
stos
cmc
sub
pop
les
sub
sub
dec
scas
mov
mov
adc
pop
test
cmp
cmc
dec
pop
out
xor
push
sub
jge
sbb
jb
mov
push
cmps
cmp
cmps
push
push
pop
push
add
push
jge
mov
sbb
jmp
push
xlat
dec
or
cdq
(bad)
sbb
fadd
les
jl
ins
sbb
lock
std
stc
push
mov
sub
repz
int
jle
ins
iret
mov
(bad)
int
xor
inc
fwait
ins
and
mov
adc
dec
(bad)
and
mov
frstor
sbb
xchg
add
mov
mov
and
ds
cwd
sub
mov
adc
mov
push
add
out
inc
push
shl
outs
stc
pop
and
sbb
call
ss
mov
pop
mov
in
xor
cld
add
pop
xchg
adc
dec
pop
mov
test
cmc
out
sti
je
adc
mov
and
mov
and
mov
stos
and
clc
pop
pop
adc
aaa
out
dec
ins
lea
xchg
push
movs
ds
or
(bad)
icebp
test
and
sbb
das
bound
jp
or
cmp
ins
lahf
xchg
pop
adc
jb
in
dec
push
retf
movs
lock
sub
lea
mov
dec
jns
jle
and
popa
lock
and
xor
fimul
sbb
das
(bad)
inc
inc
or
push
xchg
(bad)
push
dec
(bad)
push
mov
adc
inc
inc
sti
stos
jo
addr16
popa
xchg
es
cwde
jmp
sets
cmc
dec
rcr
stc
in
and
sub
sar
xchg
jle
fidivr
dec
loope
add
jl
push
shl
sub
movs
(bad)
mov
aaa
mov
or
test
hlt
ja
jb
sbb
lods
das
int
jmp
ror
movs
sbb
adc
ror
ret
movs
mov
popf
jg
int3
and
pop
mov
mov
add
imul
in
iret
fild
mov
cmps
jmp
or
sub
int
out
mov
test
imul
pop
add
scas
pop
mov
arpl
fistp
in
inc
push
ss
push
adc
fisubr
test
push
and
and
mov
cli
or
adc
stos
hlt
push
inc
aaa
cmp
popf
mov
cmp
(bad)
cdq
mov
dec
push
std
add
leave
(bad)
bound
fmul
icebp
shl
pop
push
or
sti
ja
arpl
cmp
in
or
fnsave
cmps
sbb
outs
or
ja
or
xor
adc
cmps
movs
int3
shl
adc
cmovbe
jmp
jns
inc
(bad)
mov
imul
rcl
je
(bad)
test
dec
iret
retf
dec
stos
(bad)
sub
mov
jmp
nop
dec
or
sahf
mov
adc
sar
popa
pusha
sahf
jo
(bad)
mov
daa
mov
mov
sahf
gs
push
mov
push
cmc
enter
icebp
shr
add
mov
jle
les
imul
dec
ret
cmovb
ror
(bad)
mov
inc
rep
leave
adc
inc
loopne
or
push
adc
xchg
js
mov
(bad)
jl
out
icebp
dec
or
loopne
ja
mov
mov
movs
add
bnd
jle
(bad)
or
mov
mov
xor
sub
mov
mov
call
and
into
push
xor
pop
ss
push
stos
sahf
mov
lahf
mov
call
add
mov
mov
cwde
sbb
bound
imul
xor
mov
test
mov
or
movs
mov
dec
movs
imul
cs
jg
and
cmp
fiadd
test
or
sbb
or
jecxz
add
int
mov
or
mov
aas
aas
cmp
int
movs
jbe
xchg
(bad)
ins
std
sti
icebp
xor
in
mov
sbb
inc
xor
inc
loope
sub
hlt
dec
lods
xchg
add
imul
or
add
sbb
int3
pop
sbb
adc
push
pop
push
xor
adc
enter
pop
mov
sub
push
xchg
cmps
push
int
inc
or
or
icebp
nop
nop
pop
cmps
inc
inc
sbb
loop
sahf
jbe
test
call
jns
sub
mov
lods
xchg
nop
mov
js
mov
cmps
cmp
cli
xor
xchg
dec
ret
sbb
and
sbb
mov
rcr
mov
mov
mul
aas
cwde
adc
shl
aas
repnz
mov
imul
lahf
pop
inc
adc
ret
pop
dec
cmp
xchg
retf
into
jne
out
mov
aaa
push
cmps
mov
mov
cmp
mov
sub
mov
popf
hlt
xchg
jecxz
aad
pusha
sbb
mov
inc
pushf
mov
dec
push
int3
cld
dec
daa
inc
xor
call
lea
pop
mov
ret
or
daa
sbb
mov
pop
and
imul
inc
mov
pop
lahf
cmp
mov
test
cmc
inc
dec
pop
add
push
das
dec
dec
or
xor
push
(bad)
and
xchg
enter
iret
leave
push
fst
jl
or
ror
jecxz
push
sub
mov
cdq
adc
sub
rol
xchg
daa
push
gs
fnstsw
enter
jae
iret
ins
xchg
push
je
pop
pop
inc
pusha
popf
jmp
cmp
pop
add
rcl
or
sti
ins
xor
xchg
or
ins
leave
fs
mov
scas
mov
data16
cmps
mov
cmp
cmc
sub
arpl
cmp
cli
inc
adc
int
mov
test
push
push
ss
scas
adc
mov
jg
loop
sar
ss
rcr
inc
fidivr
fnsave
sub
loop
es
int3
pop
xchg
and
cwde
stc
call
iret
pop
ja
jo
pop
hlt
cld
imul
sbb
dec
jmp
stc
aaa
stos
xor
jmp
jbe
popf
loope
je
xor
fidivr
cdq
into
xchg
rcr
in
(bad)
jnp
cld
popa
push
dec
outs
cld
ins
js
cmp
int
clc
ss
adc
test
retf
sbb
call
lds
cli
mov
xchg
pop
test
scas
dec
ror
iret
dec
xor
adc
rol
inc
fmul
push
jge
loop
mov
cs
das
pop
push
sub
jnp
push
cmp
mov
push
and
das
fld
enter
neg
mov
push
pop
jl
pop
repz
fs
mov
xchg
push
into
push
mov
ins
ror
fisttp
stos
mov
sbb
jmp
ret
or
pushf
cmc
movs
sub
(bad)
mov
leave
iret
pop
inc
test
or
sti
pop
mov
jo
add
lods
fld
icebp
mov
mov
add
std
(bad)
in
or
leave
out
or
or
aaa
popa
in
cmp
push
test
mov
add
xor
add
mov
mov
retf
popa
cmp
dec
mov
and
xchg
div
sub
cmp
xlat
std
pop
bound
outs
movs
push
fs
or
xor
xor
out
cmp
ins
dec
or
clc
call
(bad)
cdq
mov
mov
jnp
cli
lock
inc
movs
jge
push
loopne
mov
pop
mov
(bad)
sbb
ja
(bad)
xor
popa
pop
and
or
dec
push
(bad)
cmps
in
rcl
jns
(bad)
movs
push
mov
push
adc
test
fst
adc
int3
xchg
std
add
repz
cmc
iret
cld
or
mov
repnz
jmp
cmp
shl
sbb
ret
je
rol
adc
sbb
cmp
in
enter
add
or
push
je
leave
adc
mov
xchg
js
xor
xor
fisub
cmp
jge
push
aad
imul
dec
inc
cli
sbb
retf
or
repnz
test
in
mov
movs
ss
stos
push
ror
xchg
retf
pop
inc
gs
ror
mov
mov
scas
jp
xor
jmp
addr16
mov
and
push
arpl
adc
push
ror
dec
fist
mov
or
or
dec
and
adc
enter
je
sahf
clc
push
and
aas
lea
push
test
sbb
scas
adc
mov
mov
sub
retf
out
dec
mov
dec
scas
sub
in
xor
jnp
mov
mov
imul
fwait
cmp
ret
pop
rcl
jp
pop
test
cmps
cmp
mov
or
xor
dec
test
fcomp
mov
mov
push
push
jns
inc
push
prefetchwt1
sub
dec
jg
push
into
fbstp
or
dec
unpckhps
(bad)
lahf
imul
out
sbb
sar
lods
or
mov
and
mov
mov
in
in
sti
lahf
stos
adc
leave
shl
and
xor
add
out
add
fs
cli
pop
mov
(bad)
push
dec
push
inc
enter
ret
data16
dec
sahf
retf
popa
mov
loop
inc
cwde
sti
pop
daa
icebp
inc
std
movs
enter
out
lods
push
mov
movs
add
je
jmp
and
pop
sbb
xor
xchg
xor
stos
cmp
mov
in
bound
push
xor
cmp
hlt
retf
mov
push
imul
scas
pop
aam
dec
jle
sbb
lea
arpl
(bad)
(bad)
jle
pop
xchg
xchg
das
ins
jecxz
es
pop
out
lds
xchg
dec
push
aam
fcmovnu
push
cdq
sub
add
jnp
ret
int3
imul
xor
xor
fimul
movs
scas
cmp
mov
fld
fisttp
and
xor
fidivr
cmps
dec
pop
cmp
cmc
ror
mov
fmul
mov
xchg
mov
(bad)
cli
dec
loop
cmps
neg
test
xor
adc
sbb
out
add
and
and
cmc
pop
icebp
stos
mov
xchg
push
(bad)
outs
push
mul
push
arpl
push
ja
sub
not
xchg
push
cmp
rcl
sub
pushf
aad
mov
inc
(bad)
test
fst
mov
rcr
out
test
push
jbe
pop
jnp
and
and
nop
ja
pusha
sub
cwde
mov
xchg
cmp
mov
mov
mov
std
pop
out
sar
clc
lock
aam
add
xchg
push
push
hlt
dec
jmp
add
mov
pop
leave
push
cmps
test
mov
out
retf
movs
shl
or
(bad)
sub
pop
xor
inc
arpl
fild
dec
outs
cmp
or
mov
inc
sub
(bad)
cmp
shl
ds
push
and
xor
(bad)
jae
dec
xor
push
adc
jne
ins
inc
and
cdq
mov
fisubr
fs
push
out
rcl
jo
dec
shl
mov
fwait
xchg
inc
sbb
cmp
sti
aas
mov
jecxz
scas
out
icebp
mov
sbb
and
sti
(bad)
fild
loopne
mov
int
es
jg
(bad)
sub
(bad)
xor
sub
jb
out
js
retf
scas
sbb
in
mov
xchg
test
cld
sar
or
jnp
mov
loop
pop
dec
jmp
data16
jg
out
sbb
iret
shl
cmps
xor
pushf
pusha
repnz
popf
push
(bad)
into
cld
inc
retf
pop
ja
loope
scas
mov
data16
lock
pop
push
pop
hlt
adc
xchg
push
push
jnp
xlat
das
js
pop
inc
mov
and
sti
mov
mov
cmps
dec
jo
push
fist
scas
jp
sbb
xchg
mov
xlat
lds
lods
cmp
add
jp
imul
jmp
sahf
out
adc
adc
rep
cmc
out
les
jae
or
daa
add
and
es
xchg
scas
mov
loope
shl
adc
mul
out
test
sar
push
rol
mov
aad
ja
mov
sbb
adc
rol
adc
repnz
(bad)
mov
sbb
loopne
cmp
inc
sbb
rcl
mov
pop
imul
out
(bad)
ss
mov
mov
mov
imul
push
in
jle
fwait
mov
inc
and
aad
shl
clc
in
es
pop
xlat
pop
dec
push
sub
(bad)
ss
sbb
dec
sahf
(bad)
cwde
(bad)
cmp
or
nop
outs
pop
xchg
jnp
es
addr16
jnp
xchg
loop
out
nop
xor
jmp
test
add
dec
sub
jl
push
add
push
lea
pop
adc
mov
jle
(bad)
push
jb
adc
or
jae
add
lds
leave
(bad)
push
and
push
fwait
jp
mov
xchg
test
jg
xor
mov
dec
sub
push
test
out
sub
mov
dec
mov
aad
mov
mov
in
jmp
lods
imul
call
pop
ins
push
int3
cwde
ror
shr
xchg
inc
repnz
mov
jl
jb
xor
push
xchg
and
fimul
inc
dec
out
pop
test
xor
retf
cmps
xor
mul
cli
pushf
(bad)
inc
movs
in
aad
(bad)
dec
or
mov
leave
mov
add
sub
in
xchg
dec
jns
sub
cli
cwde
hlt
pop
xchg
cmp
push
or
fwait
sub
pop
(bad)
mov
ret
inc
add
lods
ja
push
addr16
(bad)
outs
xchg
inc
jge
dec
ja
mov
maskmovq
mov
push
cmp
push
pop
xchg
in
mov
out
and
pop
cmp
dec
xchg
sbb
pop
or
pop
sbb
scas
and
in
imul
mov
add
sbb
jmp
aad
inc
test
stos
jb
mov
in
fidivr
ret
add
mov
jl
dec
pop
movs
mov
pushf
xor
add
outs
push
loop
neg
adc
jmp
cld
sbb
inc
scas
cmp
(bad)
into
faddp
xor
shr
or
sub
lock
pop
rsm
pop
in
sqrtps
jmp
mov
mov
dec
cld
lods
add
les
es
pushf
ffree
pop
daa
or
call
xor
adc
inc
cmp
inc
(bad)
push
add
pop
xor
hlt
(bad)
popf
outs
stos
bound
stos
add
mov
ror
clc
ret
add
sub
xor
ss
or
data16
sub
inc
arpl
push
repnz
sbb
adc
xchg
outs
pop
cmps
clc
inc
fmul
or
mov
je
jae
and
and
add
cwde
mov
and
movs
inc
pop
imul
test
mov
fld
pop
mov
add
push
cmps
dec
mov
lock
dec
inc
or
cdq
mov
iret
xchg
pusha
jno
jns
cmp
fcmovbe
fstp
ins
xchg
dec
sub
sub
pop
cmp
add
enter
pop
inc
mov
inc
sbb
cmps
test
test
cmc
je
add
enter
add
add
sbb
pop
push
scas
xchg
add
(bad)
stos
outs
test
and
inc
dec
and
or
dec
inc
into
addr16
stos
std
xchg
sbb
pop
(bad)
cmp
sbb
sub
rcl
mov
cmovae
mov
hlt
ret
pop
sbb
cld
aas
and
stos
out
retf
cld
pop
imul
xchg
aas
pop
and
cld
(bad)
(bad)
shl
es
ins
push
pop
or
movs
out
pop
clc
mov
xor
mov
mov
xchg
inc
sbb
mov
or
push
adc
out
push
test
xchg
sbb
lods
cli
gs
sbb
mov
es
arpl
outs
nop
sub
mov
mov
lods
repnz
adc
loop
hlt
add
or
fld
(bad)
in
inc
and
rcr
and
and
or
int
cmp
mov
fiadd
loop
lds
dec
iret
(bad)
mov
or
aad
movs
imul
hlt
xchg
xchg
adc
pop
out
data16
ja
(bad)
les
push
stos
jns
push
fdivrp
cmp
jbe
sbb
std
test
and
push
leave
in
jnp
pop
mov
popa
je
repz
adc
test
aas
jp
dec
jmp
rcl
push
fcomip
and
clc
jge
xchg
nop
cmp
mov
fild
pop
mov
pop
jmp
in
inc
xchg
push
fcom
push
lea
mov
data16
mov
inc
lds
sub
mov
adc
ret
inc
js
ins
mov
cmps
inc
out
and
lea
or
inc
cdq
sub
lds
sbb
fisttp
and
push
dec
mov
mov
or
sbb
push
mov
pop
or
xor
dec
xchg
sti
int3
sbb
jle
xor
cmps
and
loop
mov
jo
(bad)
fwait
outs
mov
mov
lds
or
std
out
sbb
ds
cwde
cmps
pop
lock
and
out
pusha
xor
jmp
mov
scas
xor
inc
lahf
lds
jne
xchg
mov
sbb
jns
repz
rol
ss
std
xor
js
add
in
or
mov
dec
shl
aas
ins
adc
cmp
xor
out
push
out
xchg
jns
retf
mov
leave
in
adc
lds
pusha
cdq
adc
cmpxchg
push
jp
out
out
sub
or
aaa
scas
hlt
xor
movs
push
aad
imul
into
paddq
das
enter
push
xor
inc
mov
call
add
not
int
push
and
cdq
pop
ror
pop
lds
test
push
dec
jp
nop
enter
std
clc
(bad)
sub
(bad)
ficomp
pop
xor
movs
mov
out
jmp
inc
pop
and
mov
fild
icebp
add
cmp
popf
jnp
(bad)
jmp
pop
add
mov
pop
mov
and
cmps
adc
fs
out
jmp
popa
xor
push
adc
jmp
adc
popa
jne
out
loopne
cwde
fdivr
mov
leave
pop
inc
mov
dec
sub
daa
dec
fsubr
pop
or
std
dec
cmp
sub
mov
sbb
ret
and
shl
and
add
retf
mov
mul
in
pop
xor
pop
inc
cmps
lods
jnp
out
jmp
push
mov
loop
imul
test
mov
popa
jp
xor
int
lock
xor
(bad)
dec
daa
add
rcl
movs
sbb
mov
enter
and
mov
and
xchg
(bad)
mov
repz
add
scas
bound
leave
push
xor
out
loope
dec
mov
pop
aaa
sar
outs
mov
scas
fwait
in
dec
push
out
std
out
shl
fadd
test
mov
add
mov
leave
push
pop
mov
fwait
add
or
xchg
(bad)
out
pop
imul
sbb
fistp
sub
lds
dec
ins
pop
cmps
in
mov
into
mov
mov
and
xor
popa
inc
fwait
push
sub
dec
jbe
mov
sub
ds
push
jmp
mov
fwait
out
les
nop
mov
mov
fidiv
aam
icebp
xchg
inc
test
xchg
in
outs
(bad)
das
mov
mov
xor
fistp
push
daa
cli
in
xor
push
jp
nop
mov
adc
cmp
cmp
sbb
or
retf
(bad)
mov
jno
push
cmp
adc
rcl
(bad)
hlt
or
das
bound
mov
sub
push
xor
clc
xchg
aam
ror
add
dec
sub
jp
call
out
mov
mov
scas
cdq
xchg
xchg
sahf
fwait
ret
test
pop
jle
aaa
es
and
inc
ret
retf
pop
loop
and
cmp
inc
das
rcr
rcr
push
out
add
lods
adc
and
jno
fadd
je
add
mov
jl
push
wbinvd
inc
(bad)
loop
or
cmp
sub
pop
cdq
push
xor
(bad)
aaa
mov
cli
add
mov
in
xchg
and
ins
push
add
dec
aaa
test
retf
push
mov
cmp
fadd
imul
repz
push
into
jmp
lock
push
call
sti
pop
sub
mov
repz
(bad)
mov
mov
and
or
(bad)
hlt
xlat
lods
sub
and
mov
xlat
push
xlat
mov
scas
popf
cmc
(bad)
es
daa
adc
stos
addr16
mov
ror
push
in
cdq
cmp
add
sub
or
mov
xor
in
cmp
add
arpl
in
sbb
aad
add
sub
mov
scas
mov
sbb
jg
stc
sbb
xchg
mov
or
pop
pop
mov
ins
lea
sub
push
xor
sbb
test
inc
icebp
add
imul
sub
push
lahf
int
mov
push
sbb
push
stc
in
xchg
mov
jp
dec
lock
aaa
sbb
or
(bad)
mov
jecxz
shl
fstp
sbb
jl
rcr
dec
and
popf
les
inc
aas
int3
cmp
mov
mov
or
jns
movs
add
jecxz
mov
das
push
ins
ins
stos
or
jg
cmp
setbe
cmc
mov
mov
je
pop
aam
outs
cmp
sub
sub
mov
cmc
add
loop
ds
mov
mov
(bad)
sbb
imul
mov
out
xlat
inc
dec
pop
enter
pop
mov
cmp
lds
sbb
ins
pop
retf
cmc
pop
sahf
jg
cmp
inc
jle
movs
inc
cs
xlat
clc
dec
pusha
mov
aad
shr
test
hlt
xchg
xor
outs
fxch
sub
loope
xor
sahf
in
fwait
dec
mov
xchg
push
push
and
xchg
pop
dec
test
cmp
call
mov
xor
rep
sub
mov
sub
enter
sahf
hlt
imul
jge
jne
int
mov
inc
lock
mov
aad
xor
dec
add
mov
inc
aad
cli
add
movs
push
push
sub
ret
data16
add
jbe
xchg
xchg
add
and
dec
adc
shl
adc
imul
push
ret
mov
adc
popa
xchg
cmps
mov
lods
mov
out
repnz
adc
scas
sub
dec
push
or
stc
js
in
in
and
and
(bad)
cmps
stc
cs
movs
cmc
aas
xor
popa
retf
cmp
test
pop
adc
leave
adc
mov
jb
push
mov
adc
shl
imul
mov
div
cmps
not
in
es
call
ds
call
es
pop
xor
iret
inc
push
cs
and
mov
js
push
or
movs
aas
fist
add
pop
mov
xlat
dec
inc
repnz
dec
out
test
mov
test
jmp
push
rol
test
push
mov
dec
out
push
out
aam
test
sahf
sub
pop
clc
mov
scas
jbe
lock
(bad)
adc
xlat
add
push
mov
test
and
xor
mov
or
pop
test
pop
pop
jge
and
outs
pop
ja
ja
push
push
(bad)
lods
stos
pushf
xor
xchg
push
je
mov
pop
push
pop
pop
xchg
cmp
mov
push
jmp
xchg
idiv
stos
pop
inc
push
push
dec
repnz
mov
out
jb
jo
adc
push
adc
mov
stos
hlt
jne
test
pop
popa
sub
xor
icebp
cwde
cld
cmp
mov
jb
and
scas
repnz
ror
xor
lods
pop
leave
popa
clc
push
inc
cmc
dec
pop
pushf
mov
xchg
xchg
ror
daa
mov
fisub
push
jo
lea
stos
test
call
mov
jmp
xchg
mov
dec
mov
retf
cmp
leave
lock
fwait
push
rcr
push
(bad)
xchg
mov
lock
(bad)
dec
test
push
sahf
jmp
mov
push
and
and
push
shl
sahf
mov
(bad)
sbb
dec
and
pop
mov
sub
or
dec
(bad)
mov
ror
shl
mov
jecxz
dec
or
or
dec
mov
lds
mov
(bad)
ror
jnp
and
mov
mov
ja
mov
sbb
mov
cdq
or
cli
mov
sbb
ds
cmp
call
in
jns
sub
jle
push
cmp
data16
or
mov
xchg
xor
das
jbe
popa
in
xchg
and
push
icebp
sbb
jno
push
loope
gs
daa
test
les
nop
adc
lods
mov
imul
adc
pusha
jo
out
test
inc
or
jmp
sbb
sbb
cmps
cmc
retf
outs
mov
cmc
sahf
sti
xchg
jo
and
js
imul
out
xor
jbe
sbb
xchg
out
jl
adc
pusha
pop
adc
sub
hlt
add
add
sub
gs
xchg
push
enter
adc
cwde
jge
sbb
(bad)
push
push
ins
and
mov
mov
aas
pop
fwait
push
xchg
adc
xor
ret
mov
mov
sbb
sbb
dec
ret
cmp
(bad)
ret
pop
pop
jl
enter
repnz
fdivr
jne
sub
mov
rcr
test
mov
xchg
leave
add
xor
out
jb
cmp
xchg
xor
sahf
(bad)
dec
fwait
in
in
sar
movs
cmc
nop
push
test
jmp
mov
aad
mov
scas
cs
mov
jmp
out
and
jno
pop
and
hlt
cmps
les
mov
cmp
les
cwde
add
cwde
retf
mov
bndstx
jnp
cmps
enter
ret
call
pop
rcl
les
cdq
jae
push
(bad)
dec
adc
pop
mov
int
(bad)
es
test
or
(bad)
or
out
push
icebp
and
pop
xchg
inc
fisub
push
out
bound
sbb
shl
sub
pop
adc
mov
rol
movs
inc
nop
pop
dec
test
add
mov
dec
les
jle
pop
add
ins
nop
loop
fcmovnb
adc
pop
or
jmp
mov
ja
xlat
push
rcr
out
pushf
lock
sub
mov
jmp
add
xor
jb
(bad)
xchg
(bad)
jge
shl
aaa
fild
scas
cmc
mov
mov
sbb
sub
out
cld
mov
gs
outs
(bad)
cmc
fmul
loope
into
cmp
icebp
and
popf
aad
add
rep
pop
pop
dec
add
sub
out
das
mov
sub
sub
mov
jmp
aam
das
loopne
gs
inc
dec
rol
cld
xchg
adc
in
jecxz
stc
inc
push
jl
inc
mov
xchg
dec
data16
mov
fisubr
add
push
imul
call
or
xchg
pop
and
and
jl
js
adc
xchg
lahf
add
push
ret
out
leave
mov
jb
aad
int
sbb
pmulhw
ror
rol
add
jo
repnz
sbb
lods
enter
cmc
mov
pop
xchg
cs
mov
shr
push
and
sbb
lods
inc
adc
stos
sahf
call
fsubp
je
dec
dec
movzx
sahf
sbb
lahf
inc
fcmovb
xchg
test
pop
xchg
btr
or
out
dec
mov
sub
sbb
or
ja
sbb
mov
cs
jno
cdq
ds
fcom
retf
pop
(bad)
cmp
les
inc
pop
cwde
data16
cmp
mov
push
push
adc
dec
xor
movs
loop
cmps
mov
ins
adc
stc
mov
pop
imul
cmps
leave
inc
xchg
loop
or
movs
mov
out
lahf
je
test
sti
stos
push
ss
jmp
jno
mov
add
push
add
aad
xchg
pop
push
inc
xchg
dec
out
nop
cmp
icebp
cmp
pop
aaa
(bad)
ja
pop
mov
enter
mov
add
dec
add
mov
dec
jno
mov
pop
rol
and
movs
sub
pop
pop
mov
outs
cmp
out
push
mov
daa
cdq
push
sub
ret
or
repz
xchg
inc
inc
jo
push
rcr
add
push
clc
outs
out
push
xlat
jl
ins
not
push
cwde
xor
ss
test
int3
inc
popf
mov
or
call
mov
jo
xchg
add
rcr
sub
xchg
jle
mov
in
test
adc
dec
add
test
shl
mov
test
dec
out
(bad)
iretw
cmps
sbb
jbe
mov
xchg
xchg
(bad)
fadd
outs
fild
repz
sub
inc
sbb
mov
sbb
aad
scas
cld
push
lds
add
xor
aas
inc
mov
out
pop
sub
jmp
adc
aam
mov
adc
jmp
nop
or
sbb
or
mov
xchg
push
sbb
call
das
outs
sar
imul
(bad)
iret
and
movaps
loope
pop
xor
shl
loopne
shl
stos
cdq
xchg
xchg
inc
xchg
out
das
lea
or
imul
sti
ret
mov
das
dec
cmps
pop
sub
sub
int
cmp
xlat
push
mov
push
add
xchg
push
rcr
aas
aas
jmp
and
mov
add
in
or
imul
mov
in
gs
xchg
out
stos
retf
mov
jg
jne
iret
adc
sub
(bad)
cmp
shr
pop
jg
mov
test
mov
add
test
mov
std
adc
gs
ss
push
sbb
aam
add
dec
mov
adc
and
pop
loop
mov
dec
xor
sub
inc
jo
jne
push
mov
adc
push
dec
repz
icebp
jae
test
std
ret
sbb
inc
mov
popa
or
xchg
sub
into
out
cmps
pop
pop
cs
sub
aaa
xor
push
add
loope
imul
xor
call
fs
jge
add
mov
std
test
adc
(bad)
fisub
xor
mov
out
(bad)
es
js
jge
or
test
xlat
fs
js
push
xchg
stc
fsubrp
push
mov
je
clc
push
xchg
or
and
fcom
push
xor
das
fldenv
js
push
aas
je
addr16
and
outs
ret
or
cmp
fld
dec
lds
dec
inc
not
fbstp
push
cmps
call
faddp
and
fdiv
cmp
sub
sbb
mov
cmc
add
sar
out
popa
gs
and
sub
mov
fsubr
inc
or
sub
jp
cwde
pop
test
xchg
mov
jnp
mov
(bad)
mov
div
sbb
inc
add
int
popa
in
loopne
mov
leave
ja
dec
adc
imul
shl
mov
sub
test
cli
outs
outs
mov
sub
test
mov
fistp
jae
dec
jmp
mov
jo
scas
ins
repz
pop
pop
pop
int3
sub
pop
gs
aas
ret
cmp
fstp
inc
or
clc
test
add
push
pop
je
fistp
in
stos
je
sti
mov
push
add
lea
mov
(bad)
test
fisubr
xchg
iret
inc
push
repnz
(bad)
and
inc
mov
inc
test
inc
mov
or
push
or
pop
mov
aas
scas
ja
popf
dec
pop
push
pop
sub
loop
test
pop
add
mov
stos
and
je
cdq
mov
lock
dec
add
mov
repnz
and
jge
repz
retw
iret
mov
jl
sti
adc
(bad)
std
mov
mov
in
jl
add
mov
sti
scas
cmps
mov
repnz
cmp
mov
mov
mov
xor
mov
xor
(bad)
js
jge
xor
jb
mov
gs
or
repz
push
ret
or
sbb
jb
dec
ins
outs
and
popa
neg
retf
gs
movs
sub
movs
push
fsubr
xchg
sbb
das
test
das
inc
mov
mul
movs
sbb
xor
outs
pop
add
xor
inc
push
xor
cmp
test
stos
push
mov
outs
xchg
pop
fisubr
cmp
mov
jmp
pop
aam
mov
mov
push
popa
adc
adc
cmps
lods
sbb
jns
(bad)
jmp
aas
pop
and
les
data16
mov
mov
std
pop
jge
push
mov
cwde
fsubr
stos
jns
jo
fld
dec
sub
frstor
mov
lahf
lods
add
lods
push
ins
pop
or
push
pop
xor
popa
cwde
jae
cs
jnp
cmc
scas
push
imul
mov
push
jnp
jge
cmp
xchg
dec
in
inc
retf
(bad)
std
ret
(bad)
ret
nop
jae
aad
sbb
push
(bad)
jb
cmp
pop
inc
hlt
push
popa
ja
je
test
cmp
or
out
sub
add
mov
mov
inc
imul
pusha
dec
cmps
in
mov
lds
xchg
bound
fisttp
ins
jns
cmp
and
jns
fdiv
inc
idiv
xor
adc
push
jmp
mov
push
test
call
xchg
dec
pop
cmp
jl
sbb
aam
adc
xor
xor
mov
sti
out
rcl
push
bound
movs
jo
push
adc
sahf
cld
fdivr
add
mov
fwait
xchg
(bad)
std
mov
xchg
ror
mov
pop
xchg
es
rol
inc
aam
call
jns
push
out
arpl
in
mov
hlt
fistp
inc
push
adc
popf
ins
inc
and
push
xlat
icebp
xor
mov
add
jg
sub
lock
dec
mov
lock
ss
test
out
scas
into
sub
xlat
xor
adc
xchg
scas
xchg
and
xchg
stos
push
js
bound
push
pop
inc
mov
outs
into
push
inc
dec
cmp
test
dec
movs
cmp
mov
in
and
cmp
lods
push
stc
in
cld
data16
inc
stos
pop
mov
(bad)
xor
adc
xor
xchg
xchg
mov
inc
loop
out
(bad)
fldcw
mov
sub
add
retf
test
dec
jnp
out
xchg
cmp
or
jmp
mov
inc
adc
sar
aas
(bad)
jmp
ja
push
lods
push
mov
popa
cmps
leave
inc
das
pop
sbb
inc
push
outs
inc
jne
mov
mov
adc
mov
sub
(bad)
xor
push
aad
and
xchg
mov
push
pop
cmc
sbb
pop
xchg
add
xchg
xchg
fld
das
stos
in
pop
jle
mov
call
push
push
cmps
mov
ret
dec
outs
lods
repz
lock
es
sbb
mov
pop
and
jmp
xor
pop
pop
sbb
xor
push
sbb
mov
xchg
push
add
push
test
mov
scas
jo
mul
cmc
iret
call
push
adc
mov
addr16
sub
xchg
pop
ins
movs
cs
inc
xchg
push
fwait
xor
lock
sbb
aas
sbb
(bad)
das
jo
sbb
sbb
sbb
es
in
and
(bad)
and
xchg
sub
dec
(bad)
movs
pop
inc
adc
push
and
or
inc
xchg
cs
ja
mov
test
pop
cmp
xor
rcr
mov
push
add
cld
loop
cmc
pop
scas
inc
pushf
cmp
mov
call
adc
sbb
mov
jb
push
xchg
or
mov
adc
xor
cs
adc
lea
(bad)
out
push
push
movs
fisubr
hlt
mov
cmp
hlt
movs
mov
jnp
dec
inc
pop
add
das
repz
cmc
movs
lods
push
dec
add
jnp
test
(bad)
jp
push
in
leave
and
(bad)
cwde
test
rcr
cmp
mov
fst
test
cli
outs
scas
test
sub
stc
sbb
ficomp
fist
nop
retf
das
test
push
cmp
hlt
repz
dec
popa
add
cmp
repnz
sub
mov
mov
(bad)
out
mov
(bad)
fnstsw
push
sahf
pop
mul
ja
test
aas
pop
mov
ret
xor
add
icebp
xor
test
(bad)
(bad)
icebp
test
clc
add
and
stos
dec
push
add
cmc
repnz
inc
outs
shr
(bad)
aam
jno
xor
ins
cmp
out
mov
xor
mov
mov
or
jle
mov
(bad)
out
test
outs
cmp
cld
aaa
mov
xchg
and
push
cld
dec
lods
sar
sub
fwait
xchg
xor
adc
push
jmp
(bad)
call
loop
mov
iret
psadbw
pop
icebp
jns
test
dec
adc
xchg
mov
push
jle
cmps
mov
inc
pop
arpl
and
xlat
pop
int
fisttp
in
adc
les
retf
mov
inc
test
sar
out
leave
sbb
ror
call
and
call
fidiv
inc
ret
cmp
adc
inc
das
lahf
in
lds
mov
arpl
pop
fild
sub
dec
cdq
bound
mov
mov
(bad)
in
sti
out
or
fsub
loopne
mov
dec
mov
shl
xor
imul
cmps
sar
mov
add
(bad)
or
test
addr16
mov
cwde
ss
mov
jns
cli
cmc
and
std
mov
adc
clc
cld
nop
retf
bound
and
pusha
jne
aas
pop
jae
mov
add
jl
out
mov
push
jp
push
fsub
or
imul
dec
lods
imul
sbb
pop
lahf
pop
daa
jecxz
test
xchg
dec
inc
rcr
xor
sub
sbb
inc
ja
cld
push
push
cmp
and
xchg
inc
in
mov
cmp
test
lods
sub
int3
sti
loopne
push
pusha
mov
loopne
push
push
lock
dec
call
sbb
loop
dec
mov
cmp
pop
(bad)
xlat
inc
fdivrp
out
dec
jo
or
aaa
push
mov
xchg
push
ds
movs
push
pop
out
or
shl
out
and
shr
lods
dec
data16
jp
mov
mov
xlat
ins
inc
ds
pop
pop
dec
or
xor
sahf
scas
sub
mov
mov
xor
pop
xchg
test
add
adc
cmps
cdq
xchg
push
xor
sbb
leave
and
repz
iret
xchg
mov
mov
inc
cmp
lea
adc
mov
out
bswap
xchg
retf
in
mov
jns
ins
imul
inc
and
cmc
xor
push
je
xchg
rdmsr
jb
outs
xor
ret
and
sub
aaa
add
inc
imul
popa
xchg
loope
cmc
in
mov
and
mov
js
push
add
push
nop
(bad)
fdivr
fisttp
aas
mov
cli
add
inc
xor
mov
test
pop
or
loopne
xchg
lods
retf
mov
mov
das
sub
sbb
mov
lods
fst
mov
ret
mov
pop
lods
pop
dec
mov
test
sar
sub
cmps
sbb
sbb
popf
retf
mov
pop
and
cmp
shl
aaa
aas
ins
lods
sahf
je
xlat
push
ret
push
div
pusha
out
ins
add
pop
push
adc
or
ja
push
std
xor
in
test
in
das
mov
int
daa
adc
das
ins
or
sahf
nop
ins
movs
sub
std
daa
mov
lods
nop
and
sbb
les
data16
pop
or
dec
int3
dec
rcl
lea
jmp
cmp
and
gs
hlt
or
out
movs
push
pop
stc
in
in
xchg
add
ror
add
in
xor
lods
out
arpl
xor
mov
push
cmp
pusha
mov
sbb
inc
sub
scas
and
loop
push
adc
aad
push
jmp
cmp
adc
xor
loope
cmp
push
mov
and
sbb
sbb
sub
push
mov
cmps
pop
(bad)
push
int
aam
call
pop
pandn
xchg
cmp
xchg
test
jg
fs
fdivr
bound
mov
push
(bad)
adc
repz
cmps
stc
inc
pop
mov
fcmovu
pop
aam
pop
retf
das
stc
sub
and
dec
pushf
dec
mov
cmc
and
gs
(bad)
les
or
add
jno
or
jno
(bad)
jl
pop
xor
mov
(bad)
jbe
call
icebp
add
add
xchg
(bad)
loop
jmp
and
push
aad
aam
retf
enter
fst
sti
out
cmp
out
inc
mov
dec
cmps
pop
stc
xor
(bad)
je
ror
lods
inc
adc
or
leave
mov
mov
jb
and
or
out
(bad)
cli
fmul
dec
mov
adc
out
sub
in
in
mov
cmp
inc
mov
inc
fisttp
sbb
sbb
dec
and
pushf
or
and
adc
icebp
retf
test
into
push
xchg
std
int3
stos
sbb
rcl
ins
fdiv
sbb
clc
js
stos
in
jno
ret
pop
rcl
test
cmp
test
cdq
pop
add
inc
aaa
mov
push
fmulp
xor
sbb
cdq
xor
add
sahf
jg
pop
mov
(bad)
inc
test
jmp
xor
out
mov
rcl
out
add
mov
aaa
mov
mov
add
ins
les
bound
mov
std
xchg
aaa
and
mov
xor
test
inc
pop
jnp
sub
aam
out
test
xlat
ja
sub
in
loop
jns
jo
test
mov
ret
pop
xchg
sahf
in
mov
mov
outs
push
or
dec
sub
xchg
loope
sub
hlt
adc
imul
cmp
dec
xchg
cmp
mov
inc
xor
push
adc
fisub
fist
xchg
(bad)
mov
lods
jge
add
xchg
cmp
sbb
jg
cmp
mov
push
ins
mov
push
fmul
adc
xlat
movs
mov
aaa
movs
push
das
xchg
xchg
jne
es
fnstsw
mov
xchg
retf
sub
adc
ret
icebp
outs
imul
cdq
dec
fcom
dec
lahf
push
inc
fwait
test
out
add
inc
shl
movs
push
clc
(bad)
(bad)
movs
shr
pop
mov
xlat
sub
jge
xlat
stos
dec
xor
xlat
dec
lock
shl
adc
sar
dec
cmp
ficom
inc
aad
cmp
mov
test
push
adc
lahf
push
push
sub
call
xor
dec
aad
sbb
pop
add
(bad)
fisttp
dec
scas
mov
sub
adc
inc
mov
dec
mov
add
dec
gs
repnz
retf
xchg
and
push
in
fistp
mov
pop
ins
xor
cwde
push
xlat
pop
adc
and
xchg
mov
movs
jbe
out
xchg
sahf
pop
and
inc
mov
lahf
outs
xchg
loop
(bad)
bound
lock
movs
lock
pop
lahf
mov
inc
push
mov
into
imul
sbb
aad
gs
jbe
mov
inc
aam
test
dec
cmp
ins
mov
add
adc
mov
xchg
adc
adc
cmp
add
ins
dec
sub
in
adc
test
xor
nop
cmp
add
ret
lds
mov
shr
jecxz
jae
jle
xor
inc
int3
xor
inc
ja
pop
sbb
push
imul
shl
jno
fidiv
inc
in
jmp
enter
or
(bad)
mov
cmc
jbe
cmp
(bad)
jnp
fcmovne
adc
lods
mov
xor
or
inc
ret
in
dec
xchg
push
(bad)
mov
in
cmp
stos
jmp
inc
mov
mov
xchg
or
dec
stos
xor
add
mov
retf
lods
dec
pop
sbb
fwait
cmp
add
shl
push
cdq
xor
and
data16
mov
inc
mov
and
push
push
or
movs
pop
leave
add
dec
and
push
pusha
push
je
push
nop
scas
dec
pop
cmp
gs
loope
dec
sub
or
movs
sbb
aas
and
daa
mov
inc
ins
nop
jo
mov
inc
dec
pop
sar
into
jbe
mov
cmc
aaa
mov
dec
jmp
or
mov
iret
or
mov
add
mov
outs
stc
jmp
sub
lea
stos
mov
ja
in
pusha
and
cmp
gs
cwde
ss
or
push
cmp
sti
out
push
cmp
jecxz
aaa
add
aaa
hlt
outs
xor
std
(bad)
hlt
iret
out
jmp
int3
inc
jne
mov
jl
in
repnz
inc
in
pop
adc
rcl
fcomp
cld
stos
clc
leave
retf
xchg
cmps
mov
sub
xchg
xchg
aam
int
aad
cmp
ror
mov
sbb
mov
pop
inc
pop
jle
les
jmp
call
je
and
mov
cmp
inc
cmp
xor
lea
inc
idiv
xor
sbb
fstp
popf
xor
out
call
loope
jp
mov
movs
enter
xchg
ss
into
mov
(bad)
sbb
(bad)
cmp
push
enter
out
xor
sbb
ins
adc
push
fdiv
aad
pop
stc
hlt
ds
inc
not
xchg
rcr
ss
sahf
fdivr
or
ds
and
aaa
fstp
cmps
mov
sahf
(bad)
cli
dec
jae
mov
cmp
pop
ret
jae
scas
xchg
inc
dec
mul
mov
jae
dec
ins
and
ret
int3
test
aad
pushf
jnp
sbb
loope
xchg
fucomi
xchg
icebp
(bad)
leave
jb
inc
(bad)
mov
jp
xchg
jge
and
dec
mov
stos
xor
push
xchg
dec
dec
jle
idiv
in
lea
push
not
xchg
out
mov
ss
arpl
outs
pop
stos
and
outs
jp
nop
repz
clc
sub
push
mov
out
int3
jl
call
pop
mov
mov
jmp
sbb
inc
imul
jp
xor
mov
dec
and
mov
push
mov
int
dec
(bad)
(bad)
mov
and
std
xor
fwait
add
jmp
shr
inc
out
shl
mov
(bad)
(bad)
int3
fmul
cmp
es
adc
and
loope
jo
ds
scas
fdiv
outs
mul
dec
rcl
push
pop
push
scas
sbb
imul
pop
icebp
pop
push
movs
std
inc
sbb
ret
arpl
mov
sbb
sahf
jno
cmp
leave
sar
(bad)
test
mov
fcmovnu
inc
xchg
or
or
push
(bad)
cmp
xor
lahf
imul
(bad)
retf
outs
retf
dec
div
cmp
cmp
stc
mov
push
sbb
xor
cmp
push
pop
rcr
addr16
call
test
mov
les
xor
(bad)
mov
cdq
push
ret
mov
push
dec
cld
mov
aad
sbb
sub
dec
daa
jle
cs
or
push
bound
sbb
pusha
jnp
sub
outs
jp
and
jp
inc
setbe
push
sbb
dec
sub
test
sbb
cmp
pop
jns
or
test
int
aaa
or
js
or
xchg
loop
xchg
cli
cmp
cli
jg
mov
sub
inc
int3
or
adc
mov
aaa
mov
fs
outs
sub
in
pop
jge
int3
inc
sbb
cli
mov
nop
dec
mov
pop
inc
add
xor
cmp
jmp
xchg
mov
adc
mov
enter
or
inc
jo
gs
xor
cmps
push
test
inc
and
mov
or
jmp
push
packssdw
aaa
scas
psrlq
mov
dec
ret
clc
mov
push
inc
scas
fbstp
or
sbb
jae
cmp
andnps
mov
jb
fld
aas
test
dec
cmp
pop
lahf
scas
gs
sbb
inc
pusha
xchg
int3
pop
pop
or
call
loope
pop
mov
sbb
jmp
stos
sbb
mov
xor
jmp
inc
mov
mov
pop
and
adc
adc
adc
ret
push
xlat
cli
jns
adc
aam
add
sar
ja
mov
loope
dec
cmp
aad
and
add
sbb
in
inc
repz
mov
and
xchg
or
popf
das
jno
retf
and
pop
xor
sbb
mov
daa
das
or
mov
cmp
ja
mov
test
nop
or
pop
add
jns
loopne
out
mov
inc
fwait
int
xchg
jecxz
scas
mov
int
mov
xchg
inc
in
arpl
ja
push
lahf
sbb
push
ins
aaa
sbb
sti
pop
jno
or
(bad)
cmp
mov
fisttp
sub
mov
fst
sbb
cs
push
mov
and
sub
inc
lock
cmp
jb
pop
sbb
fninit
ds
xchg
push
(bad)
jo
out
(bad)
pop
mov
mov
mov
ficom
loopne
fisub
xor
adc
repz
xchg
jle
cmps
gs
rcl
pop
repz
imul
fcom
push
sub
outs
mov
cmp
mov
inc
xchg
sub
jmp
push
stos
rcl
jne
sub
or
fnstenv
add
gs
mov
fbstp
jp
xor
test
mov
jmp
add
and
sbb
scas
inc
out
(bad)
movs
or
dec
ror
push
mov
imul
rcl
or
mov
ror
mov
jmp
or
aas
fnsave
fst
sub
idiv
mov
sti
or
daa
cs
mov
xchg
push
inc
cmp
sub
js
mov
retf
add
repz
xlat
lahf
lock
add
pop
fadd
push
or
cmp
sahf
fild
call
lods
xor
xchg
(bad)
push
xor
inc
icebp
sub
mov
dec
aas
sub
call
(bad)
in
dec
or
retf
fwait
xchg
pop
mov
mov
sahf
std
pop
std
dec
or
push
call
inc
cmp
fstp
test
add
shl
rol
and
aam
fcom
and
loop
sbb
and
mov
into
jne
adc
xchg
ret
inc
jecxz
test
leave
call
add
clc
sbb
fnsave
sahf
xchg
fisttp
push
sbb
and
dec
ror
fidiv
push
mov
arpl
neg
test
ret
cmp
cmp
test
pop
imul
ins
jmp
cli
sub
ins
sbb
loop
mov
scas
jne
adc
and
(bad)
jp
inc
mov
or
xchg
mov
call
lods
das
cmps
dec
lock
sub
or
xchg
nop
nop
mov
arpl
pop
xchg
push
shl
enter
cmp
pushf
aad
pop
stos
and
and
cmc
std
out
stc
cld
test
push
push
dec
into
vmovntps
xchg
adc
mov
jmp
aas
xchg
int3
stc
ss
adc
and
push
ins
or
arpl
stc
jmp
sub
pop
jl
push
xchg
popa
mov
std
cmp
add
div
inc
aaa
push
push
mov
fstp
dec
push
fisub
push
shr
sub
cmps
add
xchg
push
retf
dec
xchg
loopne
pop
aaa
jo
inc
daa
neg
jb
mov
adc
jo
cmp
inc
jl
push
adc
jmp
movs
or
and
and
enter
aam
dec
push
sti
outs
shl
sub
out
int
jmp
sahf
pop
or
xchg
push
daa
(bad)
mov
xor
sbb
fwait
sbb
add
aad
xor
cld
imul
out
dec
cli
rcl
jmp
aad
sbb
inc
xor
mov
mov
and
pop
sub
jns
sub
pop
inc
std
ja
cmp
loopne
bound
jge
stc
sbb
push
fwait
arpl
test
fadd
ficomp
jle
ret
xor
call
in
(bad)
aad
adc
xor
test
mov
dec
imul
inc
or
and
frstor
push
stos
das
imul
fild
enter
dec
(bad)
push
cmp
in
lahf
mov
pop
ss
hlt
pop
dec
jle
sbb
sbb
sub
ss
add
test
mov
cmp
imul
mov
aas
stos
mov
and
mov
pop
pop
push
xchg
mov
enter
mov
push
cdq
and
inc
inc
das
imul
int
mov
aam
xchg
lea
cmp
iret
xor
(bad)
(bad)
in
push
es
cmp
and
test
popf
jmp
xor
in
outs
das
jbe
cld
xlat
outs
xchg
sar
push
pop
ret
pop
xor
das
and
daa
push
and
int
pushf
sub
sub
out
or
and
push
call
outs
ret
jbe
mov
xor
xlat
sbb
dec
mov
inc
imul
setle
and
mov
fld
jg
mov
test
stc
mov
push
pusha
leave
fdiv
mov
or
push
jo
(bad)
adc
mov
and
nop
nop
(bad)
data16
add
imul
mov
mov
jne
imul
sbb
push
push
xor
push
movs
imul
loop
jp
ins
add
mov
add
ret
outs
fild
inc
push
ins
loop
mov
adc
xchg
outs
jp
inc
adc
adc
in
(bad)
and
add
leave
mov
cmp
fisub
fadd
and
pop
add
xlat
popa
or
enter
call
pop
mov
xor
cmp
mov
mov
xchg
sti
mov
test
ins
adc
lods
pushf
fadd
jns
enter
pusha
and
icebp
scas
pop
loope
and
jo
xchg
arpl
push
jle
xor
or
sbb
sbb
(bad)
cmc
and
call
lds
mov
inc
cli
popf
je
or
jae
call
sub
stc
enter
jp
push
inc
xchg
movs
sub
cld
(bad)
out
or
jle
dec
shl
lock
or
int3
cs
add
popa
in
aad
inc
retf
fsubr
iret
adc
bound
std
fs
sub
dec
call
je
shl
pop
mov
inc
aad
add
vaddsubpd
xor
xor
pusha
js
sub
lods
ins
test
sbb
push
stos
push
and
fnstenv
mov
and
ror
cmp
jl
jbe
pop
repnz
scas
jecxz
push
and
dec
ffree
push
shl
inc
popf
cmp
das
sbb
xor
cmp
popf
out
not
and
pop
push
sbb
mov
ret
xchg
or
in
in
popf
sahf
fcomp
movs
inc
in
(bad)
fmul
sti
in
(bad)
addr16
sbb
aaa
push
pop
push
int3
cs
std
aaa
jmp
or
xchg
out
shr
mov
lds
enter
jb
pop
lahf
pusha
cld
inc
sbb
iret
push
inc
ds
xlat
xor
in
pop
mov
rol
aam
je
push
out
loope
jns
or
jnp
enter
stos
jne
rol
or
cld
pop
jecxz
push
and
retf
dec
call
pusha
jmp
gs
lods
addr16
enter
pop
shr
lods
lock
test
sub
stos
rol
repnz
call
mov
and
sbb
add
(bad)
(bad)
mov
test
dec
cmp
push
(bad)
ja
cmc
jp
xchg
xchg
mov
movs
cdq
mov
clc
jmp
out
xchg
cmp
or
pop
inc
aas
xchg
and
cld
jl
out
retf
xchg
ss
dec
adc
cmps
adc
std
fwait
pop
test
shl
out
aad
stc
sub
pop
add
jge
adc
dec
popa
cli
loopne
(bad)
sub
std
cmp
movs
out
push
push
ins
(bad)
adc
adc
stos
psllw
jne
sti
mov
sub
adc
xor
mov
movs
push
or
dec
cdq
push
iret
js
mov
repz
push
dec
pop
cmp
sbb
int3
sub
fcom
mov
xchg
test
test
push
dec
js
inc
push
xlat
cmps
aas
push
leave
sbb
mov
loop
push
aas
cli
mov
fsubrp
mov
xchg
sbb
js
out
push
sbb
or
push
push
inc
fnstsw
call
sbb
cmps
les
xor
adc
adc
outs
rcr
scas
je
cmp
sub
lods
pop
out
fs
jge
fiadd
adc
mov
xchg
mov
outs
cmps
dec
push
mov
ja
adc
test
push
pop
shl
in
sub
imul
loope
pop
std
mov
test
sub
jno
dec
inc
mov
xor
pop
stos
or
adc
shl
mov
out
mov
dec
test
pushf
loopne
cmps
test
mov
in
cmc
add
xor
loope
mov
dec
div
test
xor
mov
in
scas
ja
popf
in
xchg
rol
jge
stc
adc
sub
arpl
xchg
call
in
mov
adc
xchg
push
push
pop
sbb
enter
push
ss
cmp
dec
sbb
xchg
mov
inc
mov
jnp
mov
imul
adc
inc
rcl
dec
xor
ss
pop
mov
inc
mov
mov
and
xor
jo
lds
cmp
cmp
pop
repz
int3
jno
sti
clc
cwde
out
jp
cmp
or
push
xor
fldcw
adc
mov
mov
cdq
add
mov
movs
jo
pop
mov
into
stos
dec
sub
mov
ret
ins
mov
cld
mov
pop
push
loope
into
push
fnsave
sub
fdiv
pop
sbb
iret
xchg
stos
or
pop
and
mov
xor
jo
dec
add
pop
mov
xchg
sub
not
lea
jge
push
add
jns
inc
loop
fnsave
xlat
aad
xor
ja
mov
rcr
loopne
mov
xlat
fnstsw
fnstenv
mov
pop
jg
jno
mov
adc
shl
aam
shl
stos
adc
lea
and
or
jo
jae
inc
xlat
(bad)
jecxz
mov
jae
imul
xor
(bad)
lds
push
and
lock
dec
dec
leave
ins
retf
jl
pop
sub
xchg
inc
aas
push
push
jg
inc
ret
(bad)
lea
(bad)
icebp
shl
pop
repz
jb
rcl
hlt
call
call
mov
shl
push
add
push
xor
xchg
test
fidiv
mov
xchg
cmova
das
test
sahf
sub
test
addr16
xchg
xchg
shl
stos
and
mov
pop
cmp
iret
pop
rol
dec
out
mov
mov
fsub
mov
neg
sub
in
cmps
push
outs
mov
push
add
adc
aad
bound
(bad)
mov
div
push
push
pusha
push
data16
lock
mov
retf
(bad)
pop
push
and
hlt
mov
mov
std
fistp
iret
mov
dec
dec
loope
int
lds
icebp
stos
pop
movs
push
xlat
fldcw
adc
lahf
xchg
sub
aam
mov
movhps
mov
dec
cmp
(bad)
out
fmul
dec
es
das
adc
xor
cld
ds
inc
mov
je
mov
mov
loop
push
dec
add
mov
mov
and
sub
inc
lahf
ds
mov
adc
cmp
sub
push
(bad)
rol
push
loopne
cmps
pop
pop
cmp
call
dec
jns
pop
repz
daa
shl
cmp
out
adc
icebp
movs
cwde
mov
adc
dec
dec
cmp
mov
pop
sub
add
cmp
pop
mov
pusha
mov
or
add
jno
xlat
adc
rol
xchg
sar
jae
adc
cmc
pop
jl
inc
xchg
(bad)
int3
adc
data16
xchg
popa
addr16
and
push
daa
mov
add
inc
cmp
cmp
scas
ficom
dec
or
xor
aam
ret
mov
mov
outs
call
cmp
add
xor
xor
jge
cmp
loope
stc
jne
mov
or
(bad)
mov
dec
mov
icebp
mov
inc
and
or
mov
lock
out
mov
jp
ja
jmp
ds
cmp
mov
scas
fistp
push
ja
arpl
mov
popa
cmps
dec
out
fadd
or
test
mov
fldenv
xor
repz
pop
add
push
jg
das
dec
cli
jp
push
ss
scas
cld
xor
pop
gs
rcr
(bad)
xchg
pop
sbb
call
dec
adc
loope
mov
scas
daa
mov
ret
(bad)
cs
ss
gs
mov
xchg
leave
popa
gs
mov
out
add
in
inc
or
and
xchg
loopne
jo
mov
int
(bad)
and
xor
xor
es
sub
sbb
sti
test
clts
scas
push
add
loop
jl
push
pop
gs
add
jle
sbb
aam
pop
sbb
mov
test
sub
jecxz
popf
icebp
sbb
mul
in
mov
pop
lahf
jae
mov
jmp
sub
jmp
sbb
aaa
add
int3
sbb
xchg
ins
or
lods
outs
mov
iret
fild
add
inc
xor
adc
lock
pop
dec
and
(bad)
(bad)
push
gs
test
or
xchg
out
aam
add
rol
jnp
sbb
out
les
sub
dec
shl
retf
push
cdq
inc
scas
test
aas
loop
fisub
out
add
je
or
jne
adc
wrmsr
enter
bound
mov
push
(bad)
pop
iret
fwait
cwde
adc
or
cli
fdivp
dec
lea
imul
sub
and
mov
aam
test
cmps
jns
sub
mov
mov
xchg
sub
dec
pop
mov
mov
inc
mov
int
movs
mov
sub
fstp
aad
and
out
sub
setg
out
out
ret
js
mov
jge
icebp
pop
scas
or
or
int
into
xchg
xchg
add
push
sub
in
push
sub
(bad)
test
xchg
mov
mov
sbb
shl
pop
outs
sub
push
jl
cmc
dec
mov
dec
into
call
ret
adc
or
sbb
pusha
ja
fiadd
(bad)
cmp
push
and
test
icebp
mov
push
out
jle
push
push
es
rcl
lods
mov
xchg
jo
push
je
(bad)
dec
dec
mov
sub
ficom
lahf
iret
rcr
or
ror
cdq
(bad)
cmp
movs
push
jecxz
sub
sbb
ins
clc
cmp
dec
daa
and
sbb
mov
push
or
push
leave
rcl
push
or
mov
sbb
rcl
enter
mul
das
out
mov
mov
daa
add
mov
mov
fdiv
pop
jbe
test
mov
or
mov
xchg
shl
ds
icebp
add
cwde
pop
push
cmp
das
xor
and
outs
pop
hlt
dec
pusha
icebp
jae
xor
fstp
outs
cwde
adc
dec
inc
inc
sbb
in
sbb
and
or
and
mov
jge
in
lea
mov
sbb
out
push
xor
mov
add
inc
lods
cdq
cmp
sbb
or
xchg
xor
das
cmovo
push
add
dec
and
jg
xchg
pop
adc
test
sbb
jmp
and
out
stos
ffreep
sub
inc
xlat
mov
in
mov
adc
loope
xchg
mov
adc
pop
jp
mov
stc
mul
sbb
shl
pop
movs
xchg
pushf
push
mov
fwait
push
jno
fld
pop
loope
call
rcr
add
add
add
retf
cmp
jb
xchg
fnsave
dec
pop
adc
dec
in
dec
out
jg
wbinvd
ss
fdiv
fwait
mov
fs
jle
or
into
sub
int
cmps
or
ins
mov
test
or
dec
test
adc
fidiv
cwde
xchg
ret
adc
sub
aam
dec
xchg
les
cmps
cmp
mov
fnstcw
pop
ss
jne
ins
push
pop
inc
mov
(bad)
pop
lods
mov
inc
sar
pop
sbb
xor
cli
jecxz
xor
jmp
push
xchg
mov
repz
sahf
aad
jp
or
cmp
add
lods
jmp
sub
std
xor
dec
fwait
mov
sar
setp
loopne
push
push
or
mov
push
adc
inc
fld
pop
or
adc
or
or
add
shl
je
push
jbe
jmp
sahf
stc
lods
inc
and
or
mov
or
cmp
cmc
into
icebp
cmps
and
sbb
data16
and
inc
pop
int3
push
inc
pop
mov
inc
cmc
test
ss
enter
les
leave
cmp
gs
sub
js
xlat
mov
and
in
stc
arpl
test
push
das
mov
aaa
mov
int
test
sub
sbb
xor
and
cdq
mov
xchg
adc
sub
adc
or
movs
xlat
adc
push
or
cmp
lds
sbb
xchg
push
pop
xlat
sub
jae
cmps
cld
repz
jle
aas
lock
in
or
xchg
dec
lods
call
clc
ret
(bad)
cmps
mov
xlat
ins
xor
clc
inc
jae
dec
shl
push
loop
ret
into
(bad)
or
mov
loop
push
add
(bad)
enter
aaa
and
scas
in
out
test
sub
mov
(bad)
gs
popa
fstp
movs
movs
pop
sbb
or
daa
cmp
jbe
jp
xchg
sar
ins
push
mov
jmp
int
push
xchg
adc
int3
jbe
lods
cwde
lods
fdiv
pop
imul
adc
xlat
outs
aaa
mov
fwait
mov
cmps
inc
shl
xchg
in
mov
or
in
adc
inc
sar
jae
cmp
and
js
loopne
out
cmp
jno
mov
rol
mov
xor
mov
out
push
loop
loopne
xchg
ss
or
push
ja
xchg
jp
sar
add
xor
and
mov
xchg
adc
add
lds
jnp
rcl
mov
ja
clc
outs
jne
dec
sub
push
stc
popa
mov
imul
vpunpckhqdq
push
xor
pop
fs
and
fld
je
pop
(bad)
es
push
fs
jae
pop
cdq
mov
sbb
mov
rcr
pushf
adc
shl
int3
jae
imul
je
shl
push
or
dec
mov
dec
add
jmp
out
fs
mov
idiv
retf
aaa
xchg
retf
cmp
out
push
ret
or
cmp
push
and
pop
xor
mov
aad
sub
sar
jle
sub
xchg
loope
jo
fwait
mov
sar
loope
lea
iret
das
outs
sar
loop
dec
add
adc
sbb
iret
pop
mov
push
pop
adc
push
pop
inc
fs
stc
dec
and
hlt
mov
push
and
in
xlat
push
(bad)
jb
sti
mov
push
push
ror
sbb
arpl
mov
fadd
mov
fdivr
mov
and
es
jmp
fisubr
push
arpl
xchg
jnp
mov
fsubr
pusha
leave
stos
movs
jl
sbb
mov
test
popf
pop
fisttp
cmc
mov
movs
js
inc
sti
sub
sbb
mov
mov
mov
lea
sahf
xor
outs
jb
mov
jle
loopne
xor
neg
inc
ss
shr
sub
test
jnp
ficom
mov
loope
mov
lock
mov
es
sub
mov
cmp
xchg
sub
in
mov
mov
or
(bad)
jg
add
xor
outs
movs
ss
xor
mov
or
repz
and
mov
fist
jno
cwde
sbb
or
int3
inc
repnz
into
fs
int
mov
fcomp
mov
repnz
jne
(bad)
and
and
xchg
das
bound
pop
imul
xchg
cmps
icebp
das
into
es
test
pop
cdq
ret
mov
std
mov
mov
stc
stos
sbb
jge
leave
imul
xchg
pushf
pushf
xchg
rcl
out
xor
inc
pop
xchg
(bad)
mov
pop
mov
jns
sbb
out
and
push
or
ins
and
mov
cmp
xor
jne
cmps
sbb
test
xor
popa
js
nop
hlt
mov
add
cld
sbb
out
inc
xlat
jns
jmp
cld
lea
push
xor
cwde
loope
shl
dec
fdivr
adc
jns
popa
test
cmps
out
xchg
push
cmp
retf
outs
mov
xchg
nop
jno
in
nop
xchg
daa
loope
and
sbb
lahf
fs
inc
int
cmp
lods
repnz
nop
addr16
pop
lods
jbe
js
adc
xor
jns
push
out
mov
xchg
sar
or
loop
jo
cmps
scas
fwait
sbb
pusha
and
push
adc
push
outs
(bad)
ins
enter
and
jmp
loop
ja
dec
ins
ret
ds
lahf
jecxz
cmp
push
and
mov
jns
jbe
adc
ffreep
jbe
cdq
jbe
repnz
cld
cmp
das
mov
stc
jbe
(bad)
mov
jno
int
stos
and
xchg
std
lock
cmp
or
ficomp
mov
sub
lea
push
pushw
into
add
mov
mov
es
les
scas
std
leave
push
ja
std
inc
xchg
fcom
xor
push
es
xchg
(bad)
in
pushf
jns
mov
xchg
fistp
ins
or
mov
cwde
retf
xor
jp
pop
stos
push
mov
cli
xchg
push
enter
dec
dec
sbb
cld
dec
jne
std
mov
xor
movs
xlat
jl
sbb
in
das
xchg
push
and
push
scas
imul
mov
cmp
add
xchg
xchg
fadd
cld
and
sub
scas
push
inc
inc
sub
add
sbb
sbb
xchg
add
push
and
enter
adc
mov
or
icebp
cli
fisttp
iret
push
cmc
mov
or
in
dec
call
mov
pop
imul
cmp
dec
nop
sbb
stos
inc
and
scas
cmp
sub
sti
pop
bound
outs
dec
dec
out
dec
jbe
loopne
rcl
pop
dec
int
dec
jbe
mov
outs
ins
(bad)
stc
(bad)
adc
fild
frstpm(287
imul
xchg
retf
out
scas
jle
mov
cmp
sub
mov
rcr
cmp
jmp
inc
sub
lahf
xchg
or
pop
hlt
test
data16
and
mov
pop
aam
push
mov
fwait
inc
pop
cmp
or
test
cmp
mul
sbb
test
shl
retf
mov
add
push
jae
mov
dec
or
mov
xchg
aad
jae
push
lods
jecxz
sbb
xor
xor
xchg
adc
pop
imul
sub
aaa
call
lahf
cdq
jg
ret
and
push
test
ins
cmc
inc
push
adc
pushf
pop
js
adc
retf
ror
ins
push
mov
gs
push
nop
mov
add
push
push
xor
loop
daa
push
pop
sub
xor
cdq
add
pop
pushf
test
inc
add
fld
or
mov
adc
cmp
loope
push
test
fnsave
and
and
aad
or
ss
cmp
es
inc
inc
jmp
or
dec
sar
mov
call
sbb
in
fs
dec
call
call
in
(bad)
mov
(bad)
and
mov
pop
sub
add
cmps
or
sub
imul
ds
mov
mov
movs
out
cli
push
retf
adc
and
dec
cmp
cmps
dec
mov
sub
addr16
cld
pop
dec
mov
cli
fdivr
jnp
xlat
push
push
clc
jns
push
loopne
out
mov
mov
loope
sub
mov
lea
xchg
push
xor
gs
stc
or
fwait
sbb
or
icebp
mov
jnp
mov
inc
repnz
add
add
movs
sub
jmp
mov
jo
out
jns
pop
in
icebp
jmp
xchg
sbb
sbb
add
aaa
es
popf
icebp
xchg
scas
inc
lods
clc
ja
idiv
inc
inc
loopne
cmp
or
pusha
add
inc
and
pop
jns
in
out
push
xchg
xchg
pop
pop
cmp
sub
in
jo
and
xabort
(bad)
ins
and
sub
das
daa
jns
xor
inc
jo
cld
stc
jno
ins
nop
pop
cmp
dec
pop
jns
dec
sub
pop
xchg
cmp
dec
rcl
lods
adc
(bad)
fdiv
in
xchg
hlt
test
aaa
push
inc
or
mov
arpl
sub
popa
aad
imul
hlt
mov
rcr
xchg
in
popa
push
fcom
mov
neg
sbb
and
mov
jne
out
popf
adc
xor
jbe
dec
(bad)
jo
imul
mov
mov
ja
mov
dec
call
fs
retf
mov
jl
mov
(bad)
cmps
iret
call
mov
sbb
adc
das
test
pop
cmps
fwait
sbb
mov
rol
jg
repz
pop
scas
call
sub
jb
mov
shl
sub
add
push
inc
idiv
cmp
(bad)
mov
mov
leave
add
xchg
sti
fist
sbb
adc
outs
push
sub
adc
jne
gs
js
cmp
mov
jne
enter
fs
dec
(bad)
in
retf
jmp
fmul
push
cmp
(bad)
pop
cdq
popf
jecxz
xchg
retf
sahf
push
cmp
dec
dec
(bad)
cwde
test
scas
retf
popf
cmp
and
clc
arpl
xor
ret
imul
add
imul
daa
shl
out
sub
test
rol
mov
and
jnp
mov
dec
xchg
push
adc
cmp
popf
mul
mov
jo
test
dec
and
lock
(bad)
cmc
push
imul
and
sbb
mov
test
je
outs
jmp
ins
jmp
pop
jo
xchg
(bad)
outs
fist
xor
push
ja
mov
jmp
jne
sbb
push
fmul
lods
push
int
(bad)
in
test
jae
test
popf
cmc
cdq
xor
out
test
pop
es
mov
scas
push
jo
mov
mov
cmp
loopne
mov
stc
push
mov
mov
jo
xor
add
mov
(bad)
inc
enter
and
movs
jge
shr
fbld
inc
inc
enter
dec
add
test
jmp
dec
add
sub
push
pop
dec
xor
jae
lahf
xor
or
stos
test
lods
or
ss
fcomp
popf
cmp
and
cmps
mov
add
mov
das
inc
retf
sub
push
and
repnz
xor
jecxz
das
and
outs
pop
dec
(bad)
push
ins
rcr
dec
das
push
sbb
cmp
jp
pop
mov
add
and
aam
js
ret
push
pop
fcom
xor
push
mov
fnstsw
mov
ins
mov
popf
jp
or
sbb
inc
mov
div
ins
(bad)
lahf
fldl2e
jle
shl
dec
adc
faddp
(bad)
cmp
scas
mov
jb
fsubp
pusha
addr16
cmp
lahf
or
cmp
inc
call
push
lock
xor
dec
inc
pop
fwait
push
adc
sub
jne
stos
ss
mov
rcr
loope
es
pmaxub
mul
movs
ret
mov
rol
scas
pusha
jp
xchg
or
loopne
sbb
fyl2xp1
mov
scas
add
mov
adc
pop
push
mov
add
mov
addr16
fcmovnbe
popf
arpl
hlt
sar
push
xor
ret
repnz
or
pop
popa
rcr
fistp
and
mov
add
loop
jbe
and
lock
sbb
adc
sub
lock
dec
jae
cmp
mov
jns
xchg
(bad)
jp
sbb
pop
cwde
and
iret
and
rcl
cmp
dec
in
cmp
aaa
out
dec
enter
and
mov
dec
out
fs
mov
xor
cwde
div
loopne
loopne
and
or
and
jb
adc
fisttp
mov
or
adc
outs
aas
shl
das
adc
popf
and
idiv
and
mov
iret
data16
in
sbb
push
push
xchg
jae
mov
ror
push
sti
cmp
pop
lahf
or
pushf
sub
retf
ret
and
scas
shl
sti
push
xor
push
inc
aad
cli
xchg
jmp
test
outs
shl
xchg
cmc
mov
aam
and
inc
dec
push
out
outs
jnp
xlat
mov
sub
cmp
scas
sar
inc
ret
mov
sti
xchg
in
adc
xchg
out
mov
inc
stos
xor
xor
sahf
inc
push
fimul
stc
xor
dec
repz
dec
sub
jp
cmps
(bad)
push
int3
push
push
popf
sar
js
mov
xor
je
arpl
dec
mov
mov
sbb
mov
outs
and
cmp
lahf
fwait
xor
jp
and
dec
dec
cmc
push
retf
shl
pop
dec
rcr
mov
inc
mov
add
in
sbb
xor
adc
aam
inc
lahf
xchg
sbb
ins
inc
stos
fstp
push
mov
jle
fild
out
(bad)
sub
cmc
icebp
lods
or
jle
ins
mov
retf
push
add
ret
es
mov
call
mov
mov
arpl
sbb
add
cmp
add
mov
arpl
and
fdivp
retf
mov
xor
push
mov
jp
out
jne
pop
scas
daa
push
sub
cmc
sbb
push
dec
adc
std
in
shr
dec
and
xor
push
jne
cmc
shl
push
pusha
loope
fild
pop
pusha
mov
adc
mov
or
retf
ror
jmp
and
retf
popf
pop
ss
repz
test
repz
xor
mov
dec
cmp
add
push
aaa
and
out
ins
test
mov
aam
cmp
cld
or
pop
push
das
std
xor
loopne
xor
pop
mov
fwait
or
or
hlt
adc
out
or
aaa
mov
ins
xchg
mov
imul
jle
sahf
sbb
pop
adc
fcomp
test
(bad)
jge
xor
enter
in
and
inc
mov
xor
push
mov
and
inc
dec
test
xchg
inc
add
adc
or
sbb
pop
fcomp
mov
scas
arpl
ja
adc
xchg
lock
rol
sbb
xor
in
sub
cli
outs
rol
jl
or
popf
movs
fisubr
mov
lock
lea
mov
mov
shrd
cdq
outs
sbb
neg
add
push
(bad)
mov
push
mov
rcr
xchg
pop
aad
fs
ja
fs
mov
outs
add
cs
ins
aam
sbb
out
scas
loopne
ret
jbe
inc
xchg
je
out
mov
mov
pop
das
adc
scas
sahf
call
sub
outs
push
add
repz
mov
lds
push
mov
cdq
push
test
cld
pop
or
pop
or
mov
shr
in
lgs
out
and
lock
jl
push
pop
xor
mov
sub
(bad)
out
push
imul
xchg
push
adc
mov
push
push
js
mov
ret
scas
push
jns
fst
aam
rcl
loop
pop
dec
in
cld
dec
cmp
out
fwait
scas
xchg
xlat
(bad)
or
ins
inc
lahf
mov
pop
leave
jmp
outs
dec
(bad)
jmp
lea
jg
outs
sti
pop
mov
mov
pop
test
push
push
rol
or
push
push
pop
js
out
hlt
retf
clc
adc
pop
inc
cmp
sti
sub
pop
xlat
jge
fist
mov
sbb
lahf
sbb
popf
mov
mov
dec
and
adc
fist
mov
fnstsw
dec
adc
fwait
mov
outs
mov
pop
hlt
jbe
push
into
(bad)
sbb
lods
clc
sbb
lds
fdiv
xchg
in
outs
jmp
ror
gs
and
(bad)
cmp
adc
xor
stos
inc
inc
mov
aam
inc
jnp
and
add
arpl
add
outs
jns
mov
push
fmul
(bad)
into
outs
je
add
pop
or
sub
adc
jnp
mov
sahf
mov
cmps
inc
stos
dec
inc
(bad)
push
in
cs
push
fsubp
retf
cmp
and
pop
fcomp
lock
adc
aad
das
fwait
and
adc
aas
out
and
(bad)
push
scas
inc
xchg
lahf
cmc
xchg
imul
and
addr16
sar
jp
outs
loopne
out
push
daa
retf
jo
addr16
hlt
rcl
lea
jmp
pop
rol
add
lock
sub
mov
or
xchg
sub
xor
xor
sbb
push
test
and
sbb
retfw
mov
xchg
mov
jns
cmp
inc
(bad)
ins
jmp
mov
add
mov
icebp
add
clc
jp
(bad)
std
inc
dec
mov
jp
mov
inc
sbb
in
push
iret
fcomp
and
leave
jae
movs
push
ret
fwait
xchg
mov
cmp
mov
push
call
add
mov
inc
inc
ror
aaa
mov
jnp
push
adc
ror
jmp
xor
repnz
cld
movs
das
dec
clc
push
cli
sbb
push
daa
aam
cmp
and
imul
xchg
cdq
or
into
test
ret
xchg
dec
out
mov
and
xlat
push
adc
addr16
push
in
sbb
add
jae
push
xor
adc
push
nop
rol
add
int
sub
and
sbb
test
add
xchg
fs
lahf
xchg
movs
adc
pop
fxam
xchg
mov
inc
jne
mov
mov
hlt
mov
scas
xchg
out
pop
jg
jmp
lock
jle
stc
scas
(bad)
mov
jno
stos
add
jnp
call
xchg
test
push
jbe
inc
or
pop
mov
test
movs
dec
inc
nop
mov
in
pminub
cmp
sahf
and
mov
cmps
and
test
movs
dec
(bad)
mov
data16
js
out
fstp
repz
out
push
stc
pop
mov
jmp
cwde
bnd
jge
xchg
mov
repnz
fidiv
jae
clc
jmp
mov
addr16
sti
in
hlt
xor
xchg
out
and
sub
add
add
jno
jne
(bad)
ja
mov
pop
push
jbe
lock
or
fdiv
ss
xchg
cmc
or
push
dec
daa
jle
(bad)
cmp
pop
jns
dec
into
mov
stos
mov
jmp
adc
push
sahf
and
int3
pop
mov
out
adc
repnz
sbb
jl
ins
mov
adc
jle
mov
sub
pop
(bad)
shl
into
xchg
pop
out
jmp
aas
push
mov
and
repz
pushf
sbb
pop
ds
xor
loop
sar
mov
mov
pop
lds
(bad)
(bad)
cld
pop
test
cmps
add
add
jne
jge
jg
dec
fst
mov
cmp
int3
ins
call
xor
sub
retf
repz
pop
add
push
push
aam
int3
or
lock
xchg
or
mov
stos
pop
out
nop
je
xchg
xchg
out
scas
sbb
sti
xchg
xor
inc
xchg
movs
fsub
call
fwait
add
and
sub
adc
inc
xchg
(bad)
aad
pop
jmp
fdivr
adc
jge
clc
adc
fs
cmp
lods
jbe
xor
fst
out
xchg
addr16
and
clc
mov
mov
fstp
inc
gs
inc
add
jns
sbb
(bad)
ins
test
cwde
pop
cmp
hlt
cmp
leave
and
scas
cmp
sar
add
pop
sbb
aas
adc
cmps
push
or
sahf
inc
cmp
leave
test
fidivr
popa
jne
lock
mov
mov
int3
pop
or
mov
test
dec
pop
(bad)
fcmovnu
push
pop
or
(bad)
fnstcw
les
test
dec
fld
push
(bad)
cmps
inc
sti
mov
cdq
sub
cli
repnz
fimul
(bad)
out
push
lahf
mov
mov
rol
adc
mov
int
pop
dec
xor
cwde
std
test
or
(bad)
aad
js
aas
cmc
pop
add
xchg
nop
adc
lods
dec
jno
inc
hlt
std
pop
call
pop
stos
shr
adc
sub
push
cli
inc
cmp
cmp
adc
lods
sub
mov
outs
and
retf
stos
push
mov
or
(bad)
mov
push
jge
adc
xor
mov
aad
iret
cmp
in
(bad)
mov
inc
pusha
ffree
mov
jne
xchg
lods
adc
mov
xchg
inc
sbb
nop
and
leave
arpl
stos
add
lea
addr16
daa
cwde
cwde
mov
mov
xor
dec
push
fsub
and
adc
cmp
add
sbb
imul
inc
push
mov
fwait
push
jle
jae
leave
and
xor
in
pop
adc
jmp
aad
pop
mov
loop
xor
aaa
lods
stos
add
mov
push
fwait
jmp
push
imul
cmp
sbb
and
and
mov
mov
fs
xchg
inc
pop
icebp
adc
cmc
sub
jmp
in
xchg
jmp
jmp
loop
push
xchg
mov
sub
(bad)
or
jne
sbb
icebp
call
pop
mov
dec
inc
(bad)
int3
xchg
(bad)
call
mov
or
mov
test
loope
daa
mov
inc
cmp
mov
pop
cmp
outs
xor
inc
cmp
add
sbb
cmps
(bad)
pop
loopne
outs
sub
dec
rol
xchg
out
sbb
or
adc
mov
test
xor
fsubp
int3
cmp
cdq
int
jb
test
push
jo
xor
mov
jge
mov
cmps
mov
mov
sub
clc
dec
adc
push
sbb
popf
jno
fld
and
mov
cmp
adc
push
mov
push
in
cmp
test
pop
mov
mov
jmp
mov
xchg
nop
dec
lods
pop
sub
shl
fwait
inc
test
pop
add
adc
inc
mov
(bad)
jg
xchg
cmc
mov
jmp
xchg
adc
push
lock
imul
iret
not
mov
cmps
pop
mov
shl
ds
fcmovnbe
mov
es
clc
fcom
adc
push
loopne
loope
pop
xchg
push
push
nop
sbb
xor
sbb
fdiv
ror
mov
add
push
push
jnp
add
loopne
out
sub
aaa
cmps
imul
xchg
jo
fsubr
cmc
adc
pop
and
or
jmp
push
imul
cmp
jle
xchg
int3
mov
lods
into
(bad)
cs
into
push
cmp
outs
push
pop
int
sub
xor
add
jmp
leave
lds
pushf
pop
jbe
pop
arpl
test
push
cmc
jns
call
mov
mov
rol
mov
shl
mov
call
jbe
pop
cmp
call
fs
inc
pop
push
sbb
(bad)
xor
loop
cmp
adc
mov
mov
inc
mov
(bad)
xchg
jnp
ja
push
or
in
cmps
fcom
aas
cmps
outs
add
dec
and
fadd
in
jge
jns
adc
retf
mov
pop
add
or
ret
push
dec
je
shl
lods
sbb
push
js
xor
in
and
jae
and
cmp
pusha
xor
push
scas
mov
pop
test
jne
pop
aad
or
into
mov
dec
add
sub
out
and
ds
cwde
sub
mov
in
mov
mov
sbb
fadd
sub
dec
repnz
outs
pop
cld
cmps
or
lods
add
mov
jmp
lods
lahf
iret
loop
dec
push
dec
mov
(bad)
nop
dec
mov
mov
sub
mov
in
hlt
rcr
adc
push
mov
outs
mov
adc
xor
fadd
cmp
push
cmp
xlat
arpl
jl
and
fwait
daa
retf
shl
cmc
inc
add
and
jns
mov
popf
adc
movs
rcl
leave
add
cdq
inc
pusha
icebp
mov
test
push
inc
pop
je
lods
retf
and
jmp
mov
aam
sub
add
aaa
imul
dec
or
push
imul
mov
dec
and
call
idiv
or
cmp
push
test
xor
mov
in
loop
push
push
dec
xor
loop
out
xchg
test
cmp
std
pop
mov
cmps
(bad)
data16
pop
in
aaa
and
sub
cs
(bad)
jae
hlt
mov
xchg
pop
or
cmp
xor
sub
push
jno
out
mov
sub
push
(bad)
pop
enter
jns
xor
test
int3
shl
aas
or
cmp
(bad)
retf
xor
shl
sbb
movs
inc
mov
xchg
xor
mov
rcr
push
(bad)
mov
sti
lods
and
nop
retf
scas
or
mov
mov
cmp
fistp
ret
cmps
and
dec
push
retf
fisubr
out
neg
inc
imul
xor
and
hlt
inc
mov
(bad)
dec
push
call
fmulp
jmp
xchg
div
dec
cli
enter
(bad)
jno
jmp
jo
jmp
sub
retf
neg
mov
scas
gs
ret
sbb
add
pop
add
sti
jp
pushaw
lods
fs
lock
mov
xchg
push
xor
loop
sub
jmp
pop
xchg
sbb
mov
pop
dec
enter
ret
in
jmp
aad
sbb
mov
loopne
pop
mov
dec
add
jmp
sbb
cmps
add
jb
adc
inc
dec
cli
loopne
pop
adc
xor
sbb
jbe
fcmove
sbb
mov
mov
dec
mov
inc
dec
sub
jb
mov
test
jg
add
mov
push
lahf
sbb
dec
nop
mov
movs
and
inc
js
and
inc
addr16
aam
xchg
jnp
inc
pop
mov
leave
dec
out
into
adc
fild
push
icebp
fsub
clc
ja
addr16
mov
push
sbb
xchg
fcmovne
inc
in
dec
push
icebp
dec
stos
dec
adc
addr16
retf
or
sbb
jns
jmp
push
imul
sahf
mov
in
jle
cmp
hlt
sub
out
adc
movs
and
jns
push
out
xchg
mov
dec
xchg
dec
inc
push
test
cmp
sbb
icebp
mov
xchg
iret
sbb
dec
sub
in
les
dec
cdq
sbb
aam
xchg
dec
cmc
or
add
dec
pop
push
sbb
adc
movs
sbb
and
test
icebp
jmp
mov
mov
movs
xor
inc
cmp
into
repz
sub
add
fs
cmp
mov
mov
clc
pop
and
movs
sar
mov
cs
aam
sti
adc
sbb
add
in
add
dec
inc
push
pushf
fcmovnb
xor
sbb
fild
ds
jbe
xchg
xor
xor
mov
sti
cmps
adc
cmps
in
mov
fcomp
dec
lea
mov
mov
std
test
xchg
adc
push
cdq
or
scas
add
shl
dec
loope
jno
(bad)
nop
sub
(bad)
adc
jmp
call
dec
aad
leave
int
push
imul
or
and
fld
cmc
out
loope
dec
xchg
mov
pop
pop
jmp
mov
sub
mov
adc
or
mov
sbb
jge
adc
and
out
xchg
and
push
das
cmps
pop
jno
pop
inc
test
push
outs
ja
test
stos
in
push
jl
inc
ret
ss
cli
dec
aad
gs
xchg
sar
daa
mov
dec
mov
out
xlat
add
xlat
or
mov
movs
aad
cmp
mov
push
mov
push
or
xchg
int3
iret
out
stos
and
jp
or
(bad)
adc
push
push
movs
imul
push
sub
xor
cli
enter
mov
push
pop
cmp
test
cmp
push
fwait
mul
push
jg
jno
adc
fcom
aas
and
push
and
(bad)
call
nop
movs
clc
stos
push
dec
jmp
ss
(bad)
loopne
int3
test
fistp
jmp
pop
mov
mov
arpl
xchg
pop
xchg
retf
adc
bound
xor
test
(bad)
mov
in
int
ins
into
mov
inc
mov
and
pop
repnz
mov
sbb
xlat
call
mov
mul
in
inc
sbb
imul
lock
addr16
repnz
push
(bad)
sar
push
and
sub
mov
cdq
lea
pop
jp
std
dec
shl
(bad)
cli
push
das
mov
or
js
es
mov
js
cmp
inc
dec
addr16
cdq
call
ror
popf
pop
inc
fisub
shr
rcr
or
retf
in
in
aam
aad
fst
call
xor
mov
push
ret
add
leave
sub
popa
out
ret
test
mov
cmp
cmc
xchg
and
js
pop
add
out
push
jmp
(bad)
xchg
clc
push
sub
add
add
lea
rcr
dec
xor
lock
ja
cmp
jo
sub
pop
push
pop
jmp
sub
stc
outs
jbe
or
xchg
repnz
jo
mov
or
outs
fist
aad
lock
push
sub
sbb
sub
ficomp
mov
cmp
mov
hlt
popa
ret
imul
stos
arpl
pop
cmp
fcomp
dec
out
mov
mov
test
add
push
mov
push
pop
inc
xchg
push
pop
inc
int3
test
pushf
das
icebp
lods
sbb
repz
inc
movs
push
xchg
loop
bound
ss
xor
shr
mov
add
adc
jmp
mov
cli
and
xchg
test
ss
xchg
ret
mov
or
xchg
int
xor
and
aam
xchg
loop
jnp
inc
(bad)
(bad)
jle
push
fnstenv
inc
sbb
mov
push
or
lea
add
movs
jne
test
add
cmp
xchg
enter
jns
sti
(bad)
dec
in
stc
aad
fcmove
jge
call
dec
lea
push
loopne
adc
daa
pop
movs
inc
mov
test
xchg
dec
inc
test
(bad)
jecxz
sub
pop
addr16
add
dec
and
jns
sub
cmp
and
test
int3
push
cmovne
cmp
sbb
mov
mov
outs
cdq
imul
outs
scas
inc
xchg
pop
push
(bad)
dec
cld
pop
das
fsubr
xchg
in
push
jmp
jp
lahf
jecxz
fistp
add
adc
mov
adc
pop
sub
movs
in
cmc
pop
in
inc
enter
and
int3
mov
inc
xchg
ss
stos
stos
inc
stos
mov
leave
call
repnz
and
cdq
or
dec
fs
frstpm(287
xor
int3
adc
bound
cmp
repz
popf
jp
dec
cwde
movs
fnstsw
sbb
or
jp
xor
jno
jae
pop
test
inc
or
mov
mov
mov
sar
imul
or
ret
outs
fwait
sbb
xor
jp
pop
sub
mov
das
inc
sar
ss
mov
or
xor
stc
sbb
cs
xor
xlat
test
jno
repnz
shr
in
jl
jl
aad
or
in
dec
ret
iret
jo
mov
xchg
sbb
push
ror
call
adc
or
lds
sub
jae
mov
mov
mov
add
jne
sbb
mov
clc
jle
retf
(bad)
loop
or
mov
cmp
out
test
dec
test
pop
push
jl
call
test
cwde
movs
lea
popf
add
jl
push
inc
and
mov
mov
add
repz
lods
pop
xchg
shr
mov
imul
outs
(bad)
movs
push
in
and
adc
jnp
and
push
daa
sub
xor
stos
neg
ds
inc
push
xchg
fwait
dec
push
xor
enter
add
inc
iret
add
jno
jg
not
fld
push
sti
cmp
dec
push
pop
movs
pop
fcomp
inc
retf
leave
ja
std
rol
jae
pop
fst
push
xor
movs
out
je
int3
imul
in
pushf
test
sub
cdq
out
mov
sbb
and
or
pop
das
fimul
dec
fld
fistp
inc
icebp
stos
lahf
das
or
outs
and
test
lsl
lock
les
or
cld
mov
jmp
inc
imul
add
imul
test
dec
lods
push
and
inc
sbb
daa
pop
xchg
mov
pop
movs
push
mov
ret
ret
mov
add
push
push
gs
mov
bound
xchg
arpl
xor
push
fistp
aas
push
xchg
and
pop
jns
mov
fisub
scas
inc
ror
inc
push
xor
cli
jmp
retf
add
push
enter
jo
rcl
jle
test
adc
sub
out
fdiv
sbb
scas
add
cli
sti
pop
xchg
out
sar
ss
loopne
mov
fbld
test
retf
fisttp
cmc
sti
test
add
xchg
inc
xchg
lds
mov
adc
pop
inc
rol
mov
out
jb
dec
mov
pop
jmp
in
jge
or
and
mov
push
jae
sahf
pushf
push
movs
sub
lods
daa
in
add
(bad)
cmc
mov
inc
loope
fistp
(bad)
test
push
test
inc
jns
retf
iret
push
call
data16
fdiv
pop
push
jg
jg
sub
ja
cli
test
sbb
leave
push
xchg
mov
in
int
dec
xchg
(bad)
lock
push
in
lea
jmp
arpl
movs
xchg
inc
fadd
(bad)
repz
out
add
mov
mov
cmp
loopne
cmp
add
inc
mov
sbb
cmp
pop
lahf
jle
push
test
push
fmul
outs
and
xchg
jbe
cwde
add
jno
mov
mov
and
jecxz
cli
ss
lds
pop
dec
test
popf
sub
mov
add
out
pop
cmp
int
xchg
fnstsw
sub
add
aam
fwait
mov
xor
shr
out
ss
dec
out
or
sub
inc
outs
mov
inc
lea
rcr
scas
sub
icebp
cwde
das
adc
or
pop
jle
retf
test
cmps
inc
dec
and
aad
loope
mov
dec
push
and
cld
test
cwde
add
push
add
fst
jmp
mov
xchg
aas
shl
(bad)
pop
sti
inc
jno
dec
outs
jge
xor
retf
enter
xor
mov
outs
xchg
test
enter
mov
and
inc
(bad)
test
xor
jmp
push
add
jno
test
lea
lds
mov
mov
cmp
ja
cmp
pop
mov
mov
cs
arpl
jp
pop
rcr
call
cdq
and
xor
enter
fidivr
and
dec
fs
adc
iret
xor
cld
ror
mov
aaa
stos
and
fcom
xchg
test
stos
(bad)
js
push
mov
sahf
int3
call
add
cmp
aam
sub
gs
les
test
into
sub
jns
pushf
rcl
imul
or
fwait
(bad)
xor
out
lock
or
movs
popa
mov
jle
mov
fisubr
ja
add
xor
and
sub
(bad)
cmps
out
lods
(bad)
cmovbe
les
lods
ja
int
mov
repz
jmp
rcl
jae
add
outs
pusha
or
push
xchg
dec
gs
cmps
jb
mov
ror
mov
mov
scas
jge
(bad)
repnz
xchg
mov
cmc
mov
pop
or
in
int
xchg
cmp
aam
push
rol
aaa
das
dec
or
fidiv
test
jno
cmps
jno
shl
outs
aam
mov
sbb
add
jge
push
sbb
xchg
cmp
add
pop
push
ret
push
fld
ss
inc
jp
call
inc
aad
stc
fmul
movs
aaa
mov
popa
test
pop
jmp
jns
jno
xlat
xchg
cmc
push
and
sbb
mov
ja
lahf
cmp
fild
push
inc
das
cmp
mov
xchg
call
and
loopne
movs
jbe
xchg
mov
xchg
mov
lea
add
pop
xor
gs
aad
mov
xchg
cmp
cmp
retf
lahf
mov
mov
push
mov
ss
jo
aas
daa
ficom
sbb
test
push
fs
out
jbe
jne
jp
fcomp
pop
push
jmp
retf
inc
rol
sub
in
and
xlat
shl
or
xor
cmps
mov
xor
dec
dec
retf
mov
mov
pop
lods
mov
jle
mov
mov
inc
int3
mov
adc
(bad)
dec
stos
das
adc
mov
push
neg
mov
sbb
lea
sub
pop
add
push
and
in
cmp
and
mov
xor
pop
push
xlat
pop
cmp
jmp
int
cmps
sub
jnp
cmc
jmp
jle
out
call
sub
ror
jl
mov
cld
cmc
cmc
xor
sub
and
sub
mov
gs
dec
test
inc
xlat
sub
sbb
push
pop
inc
push
mov
repz
call
push
jo
addr16
in
dec
mov
sti
cdq
jp
int3
jae
or
or
jno
or
clc
push
dec
jo
arpl
jns
addr16
mov
call
into
pop
test
sahf
inc
les
dec
(bad)
or
mov
lods
sub
push
xchg
outs
test
and
movs
adc
dec
cdq
xchg
add
cmc
fwait
(bad)
ja
xchg
cwde
add
mov
add
pop
add
lea
icebp
bound
cmp
lods
(bad)
fcom
sub
pop
int
ja
fsub
test
dec
cs
mov
les
(bad)
push
test
movs
lds
mov
aaa
push
cmps
clc
adc
js
dec
test
jb
enter
mov
inc
sar
(bad)
cmc
xchg
inc
push
sub
inc
jbe
mov
and
test
xor
inc
pop
pop
mov
mov
test
cdq
dec
ror
ins
xchg
test
push
pusha
call
jg
loopne
mov
pop
cmp
in
and
cmps
jne
lds
(bad)
sbb
dec
popf
(bad)
inc
fwait
shl
inc
push
jno
int3
mov
gs
les
cmps
rcl
jl
inc
adc
lods
mov
and
inc
sbb
jl
cs
mov
retf
jbe
lahf
xor
aam
add
addr16
or
push
(bad)
pop
mov
pop
xchg
and
sub
ss
cld
in
push
(bad)
xlat
fimul
xchg
nop
sahf
out
push
xchg
sar
adc
mov
loop
dec
mov
mov
mul
add
or
pusha
fidivr
sti
repnz
push
jle
push
fnstsw
call
push
adc
pop
gs
push
in
mov
sbb
pop
imul
push
push
or
mov
retf
sbb
add
lods
sub
retf
fnsave
sbb
mov
dec
retf
in
sub
mov
xchg
push
mov
cld
ins
push
pop
retf
sbb
(bad)
(bad)
mov
fs
pop
out
clc
ja
movs
sbb
sar
push
xor
data16
movs
js
mov
mov
add
into
cmp
inc
cmp
outs
shl
jo
push
xchg
(bad)
mov
jnp
aam
js
lods
cld
lea
popa
fwait
sbb
jne
xor
add
adc
data16
(bad)
fld
xor
and
gs
sub
mov
mov
les
xchg
or
push
test
xor
or
jmp
mov
aas
rol
repnz
lods
mov
xlat
scas
push
leave
add
leave
inc
(bad)
jp
ret
add
mov
mov
test
fistp
(bad)
pop
push
xor
add
test
xchg
out
sbb
fwait
jo
jmp
adc
(bad)
jns
push
xor
pop
mov
test
or
lds
cmc
adc
add
pop
shl
and
push
sbb
fnsave
hlt
mov
scas
retf
jmp
loopne
xor
and
or
sbb
fwait
adc
jge
adc
push
outs
lahf
or
jmp
cmp
dec
and
int
out
popf
dec
aaa
or
mov
int3
mov
mov
in
lock
ins
stc
xchg
push
cld
imul
mov
cmp
fs
sbb
(bad)
dec
sub
leave
or
in
imul
add
movs
ret
ss
into
aaa
int
sbb
imul
(bad)
pop
adc
pop
(bad)
mov
inc
dec
out
repz
push
imul
mov
mov
in
push
cwde
sar
dec
jmp
aas
mov
popf
rol
jl
std
push
je
clc
rcr
movs
imul
stos
mov
inc
cmp
pop
jno
xor
les
cs
ds
rcl
sub
je
push
cmp
adc
test
ins
fsub
mov
lods
cwde
popf
aas
test
push
pop
push
add
xchg
cli
inc
inc
xchg
jo
mov
fdivp
cli
(bad)
sub
mov
jl
(bad)
push
mov
and
int
dec
adc
fsub
outs
rol
or
lahf
sar
icebp
or
retf
into
inc
inc
dec
add
stos
dec
xor
sub
das
clc
inc
int3
dec
inc
mov
(bad)
mov
cmp
bound
dec
jl
and
mov
push
call
imul
lea
mov
into
mov
jne
ret
add
jbe
scas
sbb
add
ja
jne
sti
adc
ret
mov
mov
lods
xchg
adc
or
xchg
fmul
mov
inc
xchg
daa
movs
xor
scas
fndisi(8087
pop
cmp
xor
mov
jge
test
(bad)
jmp
fmul
xchg
pushf
sbb
or
adc
push
pop
dec
les
das
fwait
sbb
or
sub
pop
ja
rcl
mov
adc
and
xchg
int3
xlat
push
ret
sbb
mov
mov
ror
push
push
adc
xchg
sahf
lds
jl
jmp
cmp
outs
int3
mov
sub
and
enter
and
out
pushf
cwde
mov
jnp
daa
xchg
ret
inc
cdq
call
sub
fcmovbe
and
cmps
cld
xor
jge
loope
test
ror
push
inc
ja
inc
jmp
xchg
push
pop
mov
inc
ds
or
and
adc
aam
mov
jmp
xor
dec
gs
popf
pop
stc
inc
rcl
hlt
dec
xor
popf
mov
pop
jp
xchg
(bad)
scas
jne
mov
loop
movs
dec
sti
outs
mov
jmp
push
(bad)
cmp
sbb
inc
out
out
repnz
outs
cmp
mov
pextrw
ja
cmp
movs
push
into
int
jecxz
mov
dec
inc
sub
clc
cmp
fild
mov
punpckhdq
xchg
loope
data16
push
xor
push
jno
dec
xchg
popa
jnp
pushf
or
js
xchg
movs
fcom
fs
dec
xchg
(bad)
jmp
jl
sbb
leave
mov
call
sub
icebp
mov
mov
pop
sbb
jbe
push
push
retf
orps
daa
sbb
adc
int
fldenv
aam
lods
xchg
adc
xchg
jne
mov
shl
cmc
call
push
and
adc
inc
fdiv
push
xchg
push
movs
addr16
enter
in
and
bound
fadd
test
lahf
pop
shr
mov
inc
cli
pop
pushf
fcom
mov
cmps
mov
fild
jmp
ds
fxch
add
(bad)
add
and
imul
xchg
div
iret
add
mov
mov
add
enter
scas
sahf
mov
inc
leave
imul
enter
and
mov
(bad)
sti
stos
stos
jo
mov
mov
dec
sub
fsub
jge
daa
adc
fdivr
add
dec
jmp
mov
ror
sub
dec
add
cmp
in
cwde
sub
ds
xor
adc
push
popf
jmp
clc
pop
cmp
jno
cmc
push
xchg
in
pop
push
jnp
adc
hlt
ins
sub
mov
imul
clc
imul
jle
xchg
mov
mov
push
in
cmps
jmp
mov
xor
or
jae
mov
repnz
push
dec
adc
inc
jecxz
loop
arpl
pop
fnsave
dec
(bad)
aas
xor
cli
inc
jb
cmp
popa
pop
xchg
xchg
out
es
xchg
mov
inc
int
push
fdivp
dec
js
aad
dec
adc
fimul
pop
(bad)
pop
fild
add
pop
xor
push
ins
pop
mov
cmp
sar
gs
cmp
sbb
or
cmp
push
mov
and
and
cmp
mov
lods
add
frstor
aaa
inc
mov
fcmovnu
mov
repz
pop
mov
push
fs
mov
retf
jo
adc
fistp
xchg
repz
sub
sahf
popa
popa
movs
push
pop
nop
retf
cld
pop
cmp
cli
js
test
mov
(bad)
pop
jno
shl
test
jae
cli
jns
sbb
inc
or
xor
mov
adc
jne
popf
adc
and
dec
stos
mov
ja
shl
mov
retf
mov
push
je
sbb
mov
sbb
cmp
es
and
ds
out
out
or
pop
dec
int
xchg
ss
out
(bad)
cli
pushf
nop
or
mov
mov
fcom
ins
mov
sbb
out
lahf
or
mov
cmp
xchg
icebp
aam
aas
ret
imul
popa
daa
jnp
jp
loop
imul
mov
fst
push
iret
mov
cmp
push
and
into
adc
lahf
cmp
fdivr
mov
out
sub
xor
test
bound
push
xor
movs
jns
mov
ret
je
pop
push
cmp
mov
fdivr
rcl
out
popf
inc
and
mov
ins
loop
(bad)
mov
push
lods
xor
xchg
fistp
test
mov
ret
fwait
xchg
mov
jge
cmps
in
dec
add
xlat
mov
pop
sub
xor
loop
xor
jmp
nop
lds
pop
dec
leave
mov
and
adc
popa
repnz
xchg
fstp
std
scas
cmp
jmp
jp
ret
and
ja
xchg
push
push
lods
test
sbb
jae
in
loopne
jb
fist
ret
mov
or
test
sub
imul
push
push
xchg
pop
push
in
idiv
cs
jecxz
fnstenv
xchg
int
inc
test
mov
out
mov
shl
dec
retf
clc
(bad)
and
dec
pop
inc
push
pop
aas
(bad)
and
xchg
rcl
popf
pop
test
rcr
ret
mov
xor
push
lea
add
idiv
dec
mov
push
popa
dec
mov
inc
jmp
pop
(bad)
xchg
push
sbb
push
lods
iret
mov
jnp
and
mov
data16
repz
cmps
hlt
adc
cmc
xchg
xlat
movs
and
(bad)
fdivr
cs
stos
dec
ror
mov
lods
adc
ja
jb
fbstp
mov
out
mov
sbb
push
pop
out
rcl
daa
pusha
dec
(bad)
xlat
mov
call
xchg
cmps
aaa
ror
adc
xchg
inc
dec
sbb
inc
or
mov
cwde
dec
dec
pop
push
dec
(bad)
in
jae
mov
mov
sub
mov
scas
sbb
ficom
sbb
lods
dec
add
jne
add
pop
mov
push
push
jg
sub
clc
stc
adc
ss
dec
xlat
adc
ret
aam
arpl
or
adc
xor
adc
mov
inc
mov
mov
mov
aam
lds
jns
call
sbb
fadd
cmps
push
bnd
outs
ins
and
lock
or
sub
cmp
out
xchg
outs
xlat
sti
lahf
mov
push
xchg
f2xm1
inc
pusha
mov
sti
stos
xchg
or
inc
cwde
dec
fwait
adc
loop
jg
in
pop
stc
call
mov
leave
fcomp
mov
push
aad
loopne
outs
mov
test
or
cmps
cmp
and
shl
addr16
sahf
mov
mov
inc
cmp
popf
nop
cmps
push
dec
jbe
loope
dec
outs
aaa
or
rcl
fcomp
inc
mov
jbe
outs
push
ss
xchg
pusha
add
enter
pop
hlt
shl
xor
jecxz
das
or
or
push
(bad)
rcl
pop
ror
loop
mov
pslld
retf
jmp
lods
or
adc
add
cld
xor
repz
mov
leave
mov
cmp
ret
cs
mov
lods
(bad)
wbinvd
ja
iret
sub
cwde
pop
dec
mov
shl
stos
inc
xor
jp
iret
loope
mov
shl
imul
xor
cli
inc
add
xchg
test
pushf
repnz
stos
jo
push
out
es
bound
adc
mov
clc
pop
js
pop
cmp
xlat
jmp
in
jne
mov
jp
mov
or
mov
sti
mov
jns
into
mov
jmp
xor
and
repnz
(bad)
jb
cwde
sbb
sbb
fadd
sbb
mov
dec
cmc
cwde
push
mov
cmps
gs
cmps
mov
out
sub
xor
push
push
jmp
cmps
mov
mov
addr16
mov
ror
add
fdivr
pop
add
dec
(bad)
dec
inc
cmp
enter
js
mov
in
jp
clc
push
(bad)
out
lock
jne
out
aam
int3
jno
sbb
inc
scas
xor
mov
mov
rcl
cmp
sbb
inc
xchg
into
loope
lds
lds
pop
clc
shl
or
addr16
pop
jbe
push
not
pusha
into
pop
nop
mov
cdq
mov
imul
sbb
dec
popa
xchg
fsubr
lods
sti
cwde
push
fucomp
mov
sub
movs
jo
push
repnz
cmp
(bad)
sbb
inc
inc
jbe
mov
popa
dec
fcomp
iret
pushf
out
lock
cwde
xchg
neg
adc
cmps
enter
mov
mov
push
lahf
fsub
fidivr
hlt
in
scas
pop
or
sbb
popf
mov
mov
repz
pop
fwait
inc
cmp
fsubr
adc
mov
out
pusha
mov
push
push
dec
xchg
add
mov
sbb
or
inc
pop
scas
aad
inc
mov
mov
add
dec
jmp
cmp
das
cmc
enter
pop
mov
pop
lods
jmp
leave
jae
or
and
repz
lea
cmp
fisttp
cmp
scas
sub
xchg
fld
bound
push
mov
jb
aas
sahf
into
fldcw
mov
int3
imul
mov
or
repz
out
jg
ret
stos
jmp
add
inc
(bad)
xor
out
inc
jns
push
cld
sbb
ret
std
mov
xor
addr16
pop
push
test
test
adc
out
lods
je
push
pop
adc
inc
sub
pusha
add
sti
mov
mov
mov
test
xchg
push
into
mov
pop
es
repnz
pop
cmovo
xor
xor
mov
and
and
push
fs
sbb
vpmacsdql
in
aaa
test
les
repnz
xchg
xchg
xor
inc
push
xor
loopne
(bad)
mov
(bad)
xor
cli
sub
jae
cmp
out
call
adc
mov
rol
push
ror
inc
inc
inc
dec
(bad)
sub
daa
sub
push
jl
(bad)
ret
mov
and
pusha
fadd
ret
(bad)
or
jae
adc
popa
fimul
scas
jb
shl
lahf
aas
push
cmp
sub
rcl
cmp
or
bound
aaa
arpl
mov
pop
xchg
or
or
js
pop
and
xor
es
jno
out
xchg
dec
and
add
mov
in
ja
jl
xchg
xchg
fs
jl
in
mov
call
xor
and
mov
aam
pxor
sub
xchg
clc
cmps
xchg
push
or
xchg
in
cwde
test
and
fs
mov
dec
punpckhwd
mov
sub
rcl
pop
int3
iret
dec
jmp
inc
push
add
inc
xor
retf
daa
rcr
and
dec
aas
arpl
sub
(bad)
cmps
rol
cs
mov
push
ins
call
pushf
sbb
dec
sub
push
lods
loopne
das
jnp
push
or
(bad)
(bad)
mov
pop
add
(bad)
or
push
shl
push
cdq
jbe
(bad)
leave
inc
jb
pop
addr16
inc
int
sbb
push
imul
mov
test
add
dec
loopne
icebp
fcmovu
aaa
sbb
pop
cmp
and
fstp
clc
lds
iret
inc
bound
mov
jmp
into
sbb
xor
jae
pop
jne
data16
test
jns
sub
cmp
push
fild
xchg
jle
jmp
add
std
mov
(bad)
sbb
xor
mov
push
mov
rep
fstp
mov
mov
lea
cwde
dec
and
pusha
adc
xchg
xor
(bad)
std
xchg
arpl
mov
jno
aaa
mov
push
push
daa
je
mov
dec
xchg
push
jp
or
mov
mov
inc
jb
ss
push
xchg
inc
adc
pop
bnd
mov
dec
inc
punpckhdq
out
retf
jb
cmp
sbb
inc
es
sbb
rcl
fs
push
fs
pop
mov
gs
jb
hlt
and
mov
arpl
push
and
push
inc
std
pop
mov
fsubr
prefetch
pusha
sub
fst
test
lods
fwait
and
enter
adc
push
in
adc
(bad)
movs
push
movs
jle
mov
inc
outs
push
(bad)
neg
adc
test
in
sub
in
cmp
(bad)
icebp
jle
cli
xchg
or
mov
add
popa
leave
test
mov
mov
jo
sub
mov
push
repnz
mov
xchg
adc
push
sub
mov
jg
test
fstp
cmp
and
push
jg
rcr
aam
(bad)
fadd
mov
pusha
and
ss
mov
inc
jae
(bad)
shl
cmp
ja
idiv
repnz
mov
adc
xor
xchg
xchg
imul
fwait
mov
cmp
(bad)
xor
cmp
xchg
(bad)
xchg
jns
cmc
jnp
imul
pop
in
push
or
sub
cld
test
mov
psraw
xlat
jae
hlt
mov
xchg
mov
repz
jmp
xor
push
arpl
push
inc
adc
xor
adc
pop
vdivps
mov
retf
std
jmp
pop
add
mov
jmp
pop
mov
(bad)
jge
mov
call
int3
xchg
lea
fld
arpl
fs
cmp
add
scas
rol
dec
pop
push
lods
imul
stos
cli
sbb
jno
(bad)
fidivr
adc
(bad)
push
mov
sub
jae
pop
sub
mov
movs
(bad)
loope
jb
test
ins
test
stos
push
sbb
in
push
sbb
imul
std
pop
add
cdq
bound
mov
and
test
aam
jnp
xchg
arpl
cmp
xchg
cmp
and
test
jb
jle
int3
lock
std
fbld
cmp
and
mov
xchg
aas
inc
jb
enter
pushf
pushf
ds
arpl
mov
or
push
sub
aas
or
sbb
leave
scas
retf
mov
ins
push
adc
dec
jl
cmove
pop
xchg
lahf
(bad)
xchg
nop
mov
stos
pushf
push
adc
aas
or
xchg
repz
ret
jae
xor
addr16
dec
mov
jg
movs
push
lods
pop
enter
test
add
shl
(bad)
mov
pop
inc
add
fdiv
stc
fs
mov
loopne
leave
push
sub
aad
das
ret
mov
push
pop
pop
push
xor
sti
test
add
test
mov
cdq
cmovb
add
test
inc
jns
shl
adc
stos
daa
loope
adc
xor
cmp
xor
push
scas
and
mov
scas
cmp
push
call
imul
lea
ficom
int
ret
pusha
fisttp
add
ins
xor
lds
repz
xor
rol
sbb
xchg
sbb
xchg
(bad)
loopne
xchg
mov
push
lds
jae
dec
jmp
sti
(bad)
xor
imul
jb
push
loop
scas
mov
pushf
lods
imul
add
and
imul
out
mov
pop
mov
mov
sbb
cmp
xchg
mov
push
mov
adc
xlat
sbb
sbb
ja
outs
call
ins
in
pop
pop
sbb
ret
dec
cmc
in
test
cmp
adc
inc
in
cmp
xor
loop
aad
sahf
or
push
fstp
pop
cmp
or
ret
into
dec
in
dec
aam
xchg
movs
and
lds
mov
in
call
xor
xchg
(bad)
ins
xchg
cmc
mov
call
fld
(bad)
cdq
fwait
push
adc
ss
aas
xchg
iret
push
popf
dec
push
and
lahf
or
ret
leavew
movs
adc
sbb
sbb
mov
stos
mov
outs
xchg
inc
inc
repz
pop
(bad)
imul
fwait
cs
daa
or
jecxz
adc
out
sub
sti
adc
jl
cmps
retf
pop
cdq
dec
jmp
leave
pop
jb
(bad)
sub
inc
xchg
cli
js
mov
in
enter
push
jns
mov
lods
clc
sbb
shr
inc
or
jns
lods
add
jns
arpl
neg
stos
imul
pop
and
cmc
bound
mov
or
movs
test
aam
mov
lds
call
xchg
adc
xchg
pop
push
push
cmps
push
inc
call
(bad)
xor
or
popf
fcomp
in
adc
cmp
cmp
bound
cmp
hlt
jge
std
arpl
pop
and
fild
arpl
(bad)
ss
push
(bad)
mov
xlat
mov
or
inc
pusha
cwde
xlat
pop
xchg
enter
(bad)
fidivr
lods
mov
push
aam
inc
sti
sub
rol
scas
(bad)
jmp
out
mov
xchg
popa
test
out
mov
push
xor
ja
mov
inc
xor
jbe
movaps
or
retf
pop
xor
addr16
scas
xor
mov
fcmovb
fsub
les
fisub
or
cmp
inc
inc
or
sbb
(bad)
das
addr16
cld
xor
adc
fwait
scas
inc
inc
cmps
lock
inc
sar
lds
push
test
rcr
rcr
fiadd
push
mov
dec
push
jns
pusha
ror
loopne
sbb
ret
aam
jo
and
das
add
cmps
xchg
mov
lods
dec
ret
xchg
sub
adc
inc
mov
jo
shr
(bad)
push
cdq
cld
pop
addr16
pop
jle
je
dec
fisttp
sbb
loope
nop
(bad)
stc
aam
in
(bad)
dec
push
cli
js
push
mov
cmp
pop
popa
stos
sub
outs
push
clc
fistp
das
dec
gs
out
push
xor
jnp
lock
cmc
int
mov
je
and
data16
and
xchg
inc
leave
jge
outs
mov
sbb
pop
jno
and
sar
call
imul
or
popa
mov
enter
pop
(bad)
push
int3
or
add
les
fs
(bad)
pusha
pop
push
jb
and
mov
fadd
and
cmp
sub
scas
xchg
ins
cmp
push
mov
loop
pop
imul
loopne
xchg
dec
loopne
fbld
dec
and
outs
clc
call
leave
adc
rol
js
push
push
fld
pop
mov
dec
push
sbb
clc
or
add
mov
pop
lea
(bad)
sub
mov
mov
cmp
pop
cld
jo
mov
ret
shl
clc
in
mov
mov
test
pusha
add
mov
repnz
cmp
lds
lods
mov
in
push
cs
push
jmp
retf
mov
stos
cld
or
ss
repz
mov
mov
dec
cmc
jne
push
rol
sbb
add
add
lea
int3
bndstx
js
add
add
(bad)
pop
xchg
cli
inc
jno
out
xchg
pusha
pop
jne
jae
xchg
arpl
and
mov
sub
push
push
jl
inc
lds
movs
inc
sbb
xor
jg
test
push
sbb
xchg
add
arpl
loop
pop
xchg
ret
(bad)
rcr
xchg
aad
ficom
daa
mov
test
pop
test
mov
cmc
cmp
mov
fwait
jns
inc
idiv
imul
popa
or
dec
(bad)
mov
arpl
into
retf
fs
and
repnz
jle
sahf
test
dec
dec
sub
ret
hlt
inc
sub
sbb
cmp
ins
xor
fstp
fucomp
sbb
lea
dec
retf
mov
cmp
lock
js
gs
pop
mov
pop
pop
ret
gs
mov
fxch
pop
adc
xchg
push
mov
out
xchg
xor
dec
pop
adc
xchg
xchg
stos
sbb
call
lock
lds
push
pop
push
ret
int
iret
outs
repnz
cmp
adc
push
stos
xor
(bad)
mov
sbb
xchg
fdiv
dec
rol
inc
js
xor
loope
jno
es
dec
inc
mov
sub
dec
out
push
fwait
mov
clc
jl
jmp
push
sbb
pop
fidivr
jnp
enter
adc
leave
pop
lods
movs
int3
jmp
leave
xor
xchg
adc
ins
es
inc
inc
loope
movs
mov
cli
sub
mov
pop
aam
int3
cmps
retf
pushf
mov
and
dec
or
fst
pop
xchg
pop
in
sahf
xor
xor
inc
not
jno
add
aam
pop
xor
shl
push
sbb
out
adc
mov
movs
add
sbb
mov
movs
cmp
scas
ret
sbb
xor
cmps
adc
jo
xchg
bound
xchg
mov
(bad)
hlt
aad
xchg
jb
xor
in
ins
mov
sub
jle
hlt
cmp
push
rep
push
or
ret
pop
jmp
cmps
cmp
pop
pop
xchg
ss
sbb
ins
push
pop
cmp
and
fdiv
jmp
arpl
(bad)
sar
iret
int
dec
dec
hlt
push
cdq
adc
mov
out
test
and
and
(bad)
aad
(bad)
pop
sahf
imul
dec
scas
and
(bad)
pop
jb
and
or
jns
pop
sub
dec
ins
nop
add
mov
dec
aad
xchg
jmp
out
dec
mov
cmc
out
pop
(bad)
jecxz
aad
adc
mov
pusha
mov
mov
imul
add
xor
sbb
stc
jl
bound
cmp
sbb
hlt
mov
pop
mov
stos
dec
mov
xchg
adc
cmc
dec
shr
je
dec
imul
out
adc
mov
cmp
gs
sub
xor
xchg
adc
pop
frstor
(bad)
repnz
das
mov
mov
xchg
jbe
mov
push
jo
or
jb
inc
sub
pop
gs
pop
out
lods
out
dec
call
aad
movs
sub
nop
xor
adc
clc
cmp
ret
jecxz
xor
addr16
jle
push
shl
mov
mov
scas
outs
rcr
aas
cmp
test
sahf
fld
jmp
cmp
int
das
sub
dec
shr
pop
sbb
inc
fiadd
movs
rol
mov
inc
ret
or
dec
mov
movs
mov
outs
mov
shl
cmp
and
in
jp
or
test
xchg
call
je
call
sub
lods
js
retf
dec
(bad)
pop
fnsave
and
adc
push
pushf
call
into
mov
mov
inc
xchg
cmps
test
(bad)
adc
add
js
test
pushf
arpl
lock
cmp
movs
adc
or
je
sar
out
xchg
mov
mov
lods
xor
scas
mov
das
ins
add
or
push
mov
push
lea
xchg
adc
xor
inc
nop
push
and
push
stos
sub
xor
retf
adc
add
mov
jo
sub
or
cdq
sub
sbb
and
mov
xchg
mov
mov
mov
call
and
jae
xor
adc
mov
jae
popa
into
and
dec
pop
mov
rcl
push
les
xchg
and
outs
sbb
ins
daa
xchg
push
jp
jo
jl
cli
xor
pop
mov
xchg
jmp
pop
pop
rol
sub
ins
mov
arpl
xor
ins
pop
jae
xchg
jbe
mov
mov
push
inc
sbb
out
lahf
xor
lea
mov
mov
pop
sbb
daa
mov
mov
jae
jns
int
pusha
retf
int
cmp
repnz
sub
imul
fucomip
jo
or
mov
jbe
xlat
fdivrp
inc
pop
cs
das
cmc
mov
push
popa
maxps
pop
rol
mov
ror
and
pop
cmp
pop
mov
jmp
nop
dec
ret
icebp
mov
xor
or
mov
arpl
aad
jns
mov
push
sub
adc
(bad)
aas
jp
or
sub
arpl
or
adc
test
pop
xchg
in
mov
and
rcl
fbld
fchs
jbe
ret
test
ins
mov
das
push
in
ret
xchg
jb
rcr
pushf
shl
inc
fs
fst
pop
in
pop
sbb
shl
cli
(bad)
or
xchg
repz
jge
dec
sbb
arpl
imul
mov
shl
xchg
gs
xor
retf
add
push
inc
add
sbb
cdq
and
pushf
bound
pop
jmp
jo
mov
aaa
xor
(bad)
ror
jae
out
push
add
xchg
jle
and
xchg
mov
xchg
push
rcl
outs
test
loope
mov
(bad)
popf
daa
test
mov
(bad)
jno
xlat
and
sub
jbe
test
pop
xchg
(bad)
mov
dec
stc
sbb
pusha
outs
push
in
sbb
xor
inc
stos
jl
push
dec
mov
hlt
fldcw
les
jo
cld
xchg
pop
(bad)
lahf
aas
jne
mov
or
js
sbb
(bad)
sti
in
push
and
and
sub
sar
enter
pop
inc
shl
mov
test
sti
pop
sbb
data16
shr
lahf
test
push
je
fisttp
adc
addr16
sahf
repz
cmp
mov
call
jp
leave
cmp
outs
ins
sbb
and
jnp
popa
movs
data16
mov
inc
jl
dec
(bad)
mov
xlat
jns
int3
cmp
adc
(bad)
xchg
sbb
daa
jp
jo
fild
push
adc
jle
and
in
lahf
cld
stc
cmp
sub
addr16
gs
es
out
call
adc
std
lea
movs
and
retf
xchg
lea
inc
pop
sbb
div
jp
scas
stos
(bad)
repnz
or
jmp
fcmovnu
outs
ds
cmp
xor
loope
mov
inc
mov
jle
neg
add
fmul
cmps
je
test
cs
shl
lods
cmp
jge
push
sbb
outs
and
bound
bound
push
sbb
imul
call
adc
call
push
lds
cwde
cmps
(bad)
xor
test
sbb
adc
adc
mov
mov
jmp
ja
imul
or
sahf
aas
jp
cmp
dec
or
mov
xchg
icebp
or
sub
inc
jmp
rol
into
stos
pop
lahf
cmps
pop
scas
jmp
mov
in
mov
jl
call
mov
cmp
mov
popf
mov
sub
ficom
fisttp
sub
xchg
mov
fimul
and
(bad)
test
inc
das
outs
aam
cdq
sbb
fild
xchg
and
inc
in
bound
aam
mov
cld
dec
arpl
adc
sbb
add
stos
in
mov
repz
mov
push
lock
jae
popa
scas
sbb
xchg
inc
xor
sti
mov
sub
push
jbe
in
arpl
bound
or
pop
sub
cmps
or
cmps
jl
fidivr
ss
jmp
rcr
mov
mov
loope
shr
fcomip
popf
fmul
add
int3
jne
sbb
pop
inc
mov
out
add
push
xor
std
xchg
nop
jno
mov
in
push
ins
mov
cmp
shl
inc
mov
into
pop
jmp
adc
pop
mov
cmp
adc
pop
(bad)
cmc
or
lock
mov
mov
ret
inc
lods
sbb
mov
std
test
cs
adc
cdq
jge
pop
aaa
test
arpl
dec
mov
pop
adc
stos
jmp
jb
lds
inc
cli
sti
sbb
inc
ret
mov
fucomp
fs
aam
jle
fidiv
push
imul
jmp
ret
sub
xor
popf
sub
mov
push
mov
icebp
es
dec
ret
test
movs
add
imul
mov
nop
loope
aam
sbb
into
jb
jmp
xchg
cmp
cmc
jp
mov
xor
lods
jno
xchg
std
jp
fadd
outs
xlat
mov
out
pusha
mov
push
push
call
sub
or
nop
adc
fcomp
or
and
lea
xlat
add
mov
jno
xor
pop
fs
cwde
sar
enter
ins
movs
jle
repnz
mov
jmp
mov
xor
pop
pop
xchg
nop
js
add
mov
repnz
inc
xor
inc
jmp
xchg
(bad)
int
pop
ins
push
psubq
jnp
adc
push
hlt
cwde
add
fisub
mov
sbb
scas
mov
dec
sub
into
sbb
rcr
adc
std
and
(bad)
scas
mov
mov
mov
sahf
dec
pop
jle
cld
mov
mov
es
nop
sbb
and
xor
iret
pop
pop
xlat
mov
dec
movs
outs
rdmsr
nop
sbb
sub
lea
mov
cwde
add
jne
mov
pop
xor
xor
(bad)
adc
push
sbb
mov
dec
leave
pusha
pop
or
ins
pop
push
adc
add
ja
movs
add
inc
(bad)
and
add
fcomp
ss
iret
dec
fs
jecxz
push
imul
push
jge
imul
jo
cmps
dec
mov
aas
fidivr
sub
xchg
or
and
(bad)
mov
and
cdq
xchg
jecxz
(bad)
mov
leave
retf
sub
iret
test
or
fs
xlat
fcmovb
cmps
inc
shl
out
cld
lea
pop
ins
dec
jb
fld
and
jnp
scas
clc
and
pop
loopne
sub
pop
stos
dec
push
mov
jl
mov
call
fimul
inc
dec
(bad)
jmp
jb
xor
adc
and
inc
inc
mov
jp
les
stc
int3
dec
mov
pop
mov
pop
movs
jp
lods
mov
add
pop
pusha
xchg
add
inc
inc
cmps
(bad)
movs
movs
(bad)
and
(bad)
xor
jg
loope
pop
leave
adc
push
add
xchg
or
icebp
cmp
scas
cmp
repz
dec
sub
lock
retf
js
rcr
jae
lods
sbb
mov
or
xchg
into
or
int3
jecxz
in
ss
ds
in
adc
cli
pop
popf
fild
jl
popf
js
xlat
xchg
push
dec
(bad)
mov
retf
lods
adc
pop
pop
scas
cmc
push
dec
or
jle
cdq
jb
mov
push
inc
aaa
daa
jmp
inc
add
mov
cwde
mov
cmp
sti
and
and
pusha
out
dec
cmp
xchg
lock
mov
ret
and
jg
cmp
adc
adc
cwde
cmp
sub
add
push
adc
inc
adc
adc
xchg
(bad)
imul
jae
rol
mov
jns
dec
pop
enter
sub
iret
dec
xor
test
clc
sbb
ror
push
cli
or
cmp
repz
hlt
repz
sub
xor
loope
add
dec
xchg
xor
sub
call
enter
lock
jg
lods
gs
or
push
push
clc
xchg
punpckldq
imul
enter
dec
in
cmp
mov
popa
push
add
inc
xor
and
test
fdivr
lods
and
mov
lds
ins
imul
pop
je
test
cmp
iret
sar
stos
pop
std
loope
mov
pop
and
pop
jb
cmp
rcl
pop
int
mov
gs
ds
add
imul
jns
(bad)
jne
xchg
lods
jns
jmp
cmps
loop
test
mov
xor
adc
sbb
scas
fnstcw
pop
push
leave
test
fwait
or
push
out
jnp
cmp
retf
xor
imul
cmps
pushf
push
ds
mov
lods
lods
mov
test
mov
(bad)
jnp
dec
adc
jp
dec
fbld
sub
xchg
call
mov
hlt
jmp
jns
and
push
test
add
shl
arpl
pop
mov
lea
cdq
mov
cdq
pop
adc
push
test
cmp
jns
lahf
mov
adc
enter
and
xor
sub
test
(bad)
dec
pop
or
cmp
jmp
test
push
pop
std
and
mov
mov
scas
pop
std
scas
mov
gs
xor
stos
and
xchg
and
or
dec
fistp
lahf
movs
js
enter
fs
lods
adc
sub
adc
pop
js
push
cmp
pop
push
or
idiv
(bad)
cmc
inc
pop
push
xchg
aas
and
js
jge
(bad)
cmp
fsubp
sar
popf
bnd
loope
movs
fcmovnb
xchg
push
adc
clc
imul
xchg
cmp
sub
jne
jae
ins
pop
cli
dec
xor
(bad)
or
scas
and
and
jg
inc
jl
or
scas
cmp
cwde
push
outs
fimul
stc
imul
cdq
xchg
mov
imul
cmp
das
stos
scas
into
xchg
repz
xchg
sbb
pop
in
fmul
adc
sub
mov
xlat
scas
aad
(bad)
faddp
daa
dec
xor
and
mov
xchg
pop
jge
inc
inc
into
push
ret
fild
aaa
in
lods
shl
inc
call
les
fwait
jmp
scas
cmp
les
adc
pop
fmul
cld
xor
xchg
pop
mov
retf
je
sub
mul
mov
std
inc
ficom
xchg
sub
popa
ja
mov
or
in
mov
and
xor
jo
stc
push
xor
cmp
scas
pop
xchg
or
jecxz
or
int3
add
ret
jae
dec
add
fisub
adc
aaa
pusha
xchg
inc
jae
div
sub
or
mov
(bad)
jae
dec
pop
mov
pusha
sub
aas
sbb
push
jge
sbb
mov
or
sub
add
test
mov
and
dec
xchg
(bad)
adc
clc
mov
cdq
adc
test
dec
loope
repnz
fisubr
out
jae
xchg
repnz
or
fwait
push
stc
mov
pop
(bad)
ror
and
mov
xlat
xor
test
repz
pop
(bad)
mov
add
adc
jl
cmp
xchg
retf
in
shl
mov
fwait
cwde
jge
mov
push
addr16
mov
xor
xchg
inc
scas
imul
inc
xchg
sub
hlt
push
movs
mov
sbb
inc
bound
mov
scas
jecxz
enter
mov
loop
mov
adc
out
or
jnp
cmp
or
loop
rol
mov
mov
test
fist
sub
jmp
aad
jo
shr
test
mov
inc
sub
aam
outs
test
inc
pop
or
inc
ins
inc
xor
xor
jne
and
dec
dec
retf
jae
add
push
mov
sahf
jbe
cmp
mov
pusha
push
lea
aam
popf
call
mov
test
retf
sbb
and
movs
cli
fisub
dec
arpl
jg
inc
in
cmp
ins
ja
jg
or
jnp
mov
cmp
jl
pop
(bad)
fcmovne
cld
add
mov
push
and
jo
leave
adc
xchg
sbb
adc
cli
int3
fwait
cmc
jmp
sbb
inc
and
adc
gs
ss
idiv
iret
(bad)
in
xor
and
sub
std
stc
dec
lds
or
mov
cld
xchg
mov
and
mov
inc
shr
dec
xchg
mov
cmp
jne
hlt
loopne
jno
mov
sub
pushf
xchg
bound
lahf
cmp
xor
js
jmp
dec
fdiv
jp
fs
scas
pop
lods
inc
call
scas
sub
inc
retf
pop
pop
fbld
test
ret
test
mov
inc
and
(bad)
test
xchg
popf
and
dec
pop
rcr
nop
aaa
xor
sub
mov
aaa
mov
repnz
xchg
leave
or
rcl
and
inc
xor
repz
fld
cld
paddw
cmps
addr16
sub
fstp
or
fldenv
cld
call
and
in
or
mov
mov
mov
int3
loopne
mov
loopne
or
mov
jbe
jb
loopne
les
sub
mov
mov
js
test
xchg
lahf
(bad)
(bad)
lock
fwait
lods
sub
xchg
push
sub
cmp
fimul
ins
or
fadd
pushf
sub
xchg
fidivr
lods
fsub
mov
scas
(bad)
push
cmps
outs
js
popf
mov
pusha
mov
cmp
xor
add
in
adc
stos
xor
fist
jl
adc
call
inc
std
lea
and
jl
icebp
neg
xchg
dec
ds
inc
sub
fdivr
push
imul
call
shl
adc
retf
(bad)
ds
gs
dec
dec
test
stos
jmp
scas
mov
adc
repnz
push
ror
mov
imul
addr16
or
push
in
fdiv
enter
js
ins
sahf
mov
ret
nop
or
xor
mov
mov
icebp
pop
sbb
int
push
and
icebp
in
pop
cmp
jae
lds
ret
scas
mov
inc
stos
xor
adc
jmp
cmp
pusha
pop
mov
mov
mov
xor
pusha
mov
jno
xor
or
das
(bad)
mov
jl
ror
dec
push
and
loope
into
pop
fwait
inc
fadd
idiv
repz
pusha
jp
inc
jne
cmp
fisub
out
or
pop
sub
fsub
cmp
test
dec
or
mov
les
aam
pop
sbb
cld
pusha
loop
mov
inc
cmp
adc
xchg
push
or
xchg
js
(bad)
in
add
sub
mov
ja
sub
cmp
fs
xor
and
jmp
mov
fnstcw
pop
xlat
xchg
add
mov
imul
mov
jg
sub
mov
add
or
sub
stos
gs
pop
test
and
popa
retf
sbb
(bad)
xchg
xchg
sub
mov
pop
pushf
out
fs
mov
scas
adc
stc
outs
fdiv
mov
xchg
and
sbb
inc
arpl
gs
stc
pusha
sbb
fcmovnu
adc
ror
popa
fs
cmp
les
mov
fistp
or
cmp
jg
inc
xor
jne
fidivr
add
stc
movs
cmp
sub
sub
retf
push
jge
das
dec
retf
dec
push
cmps
les
in
hlt
ss
popa
push
stos
arpl
(bad)
cld
push
div
rcl
out
or
test
call
inc
cmp
sar
retf
dec
mov
jnp
data16
out
xlat
dec
adc
pop
stos
pop
outs
dec
dec
xchg
dec
leave
clc
pop
js
xchg
in
xchg
jecxz
aad
or
cs
push
cmps
jo
in
(bad)
ror
mov
and
ror
mov
nop
es
mov
jge
or
add
add
aaa
or
xchg
sbb
ret
xchg
xchg
ret
in
in
push
(bad)
jecxz
imul
mov
xchg
sbb
ror
fucomp
mov
ret
xor
mov
dec
xchg
lds
xor
scas
sub
jle
push
cmps
(bad)
pop
or
scas
stos
jne
in
addr16
xchg
sbb
mov
popf
retf
cmp
in
mov
fmulp
pop
sbb
popa
xor
in
test
jbe
lahf
mov
sbb
add
mov
and
xchg
aad
das
sbb
sub
cwde
adc
pop
loope
push
out
mov
cmps
dec
sbb
mov
ins
aas
and
out
mov
inc
cmps
ret
iret
retf
cmp
fwait
pop
adc
cmp
arpl
pop
aas
(bad)
push
cmp
jae
in
push
adc
jns
mov
mov
jp
test
jp
(bad)
aam
and
int
mov
push
test
ins
scas
xchg
mov
pushf
pop
xchg
ficomp
adc
call
xlat
cdq
sub
fwait
call
mov
lahf
and
mov
stos
addr16
pop
ror
pusha
mov
fisttp
jo
adc
push
mov
les
sub
stos
dec
scas
call
cdq
shr
mov
lods
dec
mov
es
xor
pop
cmp
push
or
adc
neg
iret
jnp
xchg
and
mov
push
or
ins
cmc
(bad)
(bad)
xor
xchg
inc
or
or
and
ror
adc
mov
push
jmp
cld
ins
push
xchg
fwait
adc
mov
push
mov
push
mov
sbb
jp
fdivr
mov
xchg
sub
mov
sbb
ds
lea
call
mov
repnz
in
and
push
addr16
adc
mov
push
js
ss
pushf
(bad)
test
daa
xchg
sub
xchg
xchg
mov
ins
es
call
lahf
out
add
cmp
fld
icebp
jo
iret
jle
push
dec
sbb
call
sar
movs
mov
push
mov
cmps
jno
stos
xchg
dec
in
sub
call
xchg
xor
sti
cmp
enter
jae
aas
scas
mov
add
jmp
push
pop
enter
mov
js
mov
movs
enter
leave
mov
sub
push
add
cmp
dec
loope
mov
xlat
je
push
mov
sbb
push
cmp
(bad)
in
hlt
ret
int
aaa
test
inc
inc
and
mov
lahf
xchg
sbb
stos
mov
aam
xor
scas
call
push
mov
inc
aam
rcl
fsub
retf
pop
test
mov
push
movs
inc
test
cmp
sbb
cli
or
push
fdiv
sub
bound
daa
scas
xor
aaa
adc
push
scas
pop
sub
aaa
push
cld
add
fcom
shl
jno
xchg
add
in
dec
cmp
test
aas
mov
adc
call
xchg
cmps
rcr
mov
ss
sub
test
pop
pop
pop
cmc
push
push
fs
jle
fwait
es
jbe
sbb
sar
push
ss
mov
jbe
enter
adc
inc
clc
stos
pop
and
cmp
push
push
dec
push
xchg
ror
in
or
mov
sbb
cmp
sbb
inc
jp
jae
aad
fneni(8087
aas
pop
or
add
pushf
add
out
movs
jl
ins
add
iret
retf
jg
fnstsw
add
rcr
gs
add
stc
(bad)
imul
mov
or
lea
psrld
add
cmp
xchg
mov
fcom
stos
in
pop
rol
push
jbe
mov
or
add
inc
loop
fidivr
loopne
xor
aad
mov
cmp
dec
push
iret
push
jle
pop
pop
or
data16
sahf
addr16
or
inc
jl
and
jne
mov
and
xor
cmps
test
xor
inc
push
ins
add
cmc
add
push
xchg
xlat
movs
loopne
rcl
push
and
mov
mov
shl
in
cmp
fnsave
cli
dec
jnp
es
and
cmps
rcl
stos
inc
push
cld
pop
xchg
fnsave
inc
js
ins
cmc
call
xchg
cmp
push
dec
leave
pop
icebp
popa
xchg
sti
xchg
pop
out
sub
sbb
mov
add
pop
push
ss
mov
cli
pop
into
(bad)
retf
xor
std
inc
adc
inc
aas
cmps
(bad)
jmp
enter
mov
mov
xchg
xor
mov
dec
push
icebp
(bad)
ja
sbb
(bad)
fstp
mov
(bad)
(bad)
shr
mov
xor
mov
pop
rcr
jae
test
in
inc
mov
mov
xor
mov
nop
iret
jp
jb
pop
dec
jl
and
adc
repnz
add
or
push
sbb
and
and
sub
mov
sbb
das
xchg
cmps
pop
ror
lea
test
push
out
ret
xor
add
inc
shr
adc
dec
inc
fst
lods
fcmovb
aaa
mov
daa
(bad)
or
push
inc
shl
test
(bad)
and
stos
cld
or
xlat
add
pop
sub
sub
frstor
cmc
mov
dec
int
jne
push
or
arpl
push
mov
cmc
adc
lock
inc
cld
xchg
xor
pop
loope
add
push
or
push
enter
ror
sub
adc
cs
pop
lods
pop
push
lods
imul
pop
dec
push
out
cwde
inc
jecxz
fadd
mov
push
sub
imul
gs
ja
dec
test
daa
inc
retf
int3
xor
xchg
pop
fsubr
(bad)
and
adc
in
aaa
push
bound
adc
sbb
xor
nop
and
xor
es
cmps
cli
lahf
inc
xor
add
sub
dec
cli
sbb
adc
xchg
push
test
test
inc
xchg
arpl
adc
lds
scas
mov
jg
dec
(bad)
inc
fcmovne
ds
das
fadd
call
mov
mov
push
bound
fiadd
mov
out
mov
add
jp
push
pop
fisttp
add
shr
loopne
shr
lock
push
fcomp
js
outs
adc
sar
in
jno
and
in
rol
out
jnp
shl
cmp
arpl
dec
lock
sub
repz
cdq
push
jge
cmp
cmp
dec
sbb
test
mov
xlat
out
inc
pop
mov
inc
pop
xchg
shl
push
enter
push
cwde
cmp
imul
pop
add
push
fidiv
dec
mov
cdq
int3
mov
in
push
ror
std
push
jne
in
xchg
repz
sbb
out
sahf
inc
mov
ins
sub
sub
jae
adc
mov
mov
icebp
push
xor
jmp
int
sub
cmc
or
ins
pop
aaa
jnp
adc
jle
(bad)
and
aam
pop
push
fwait
or
out
mov
in
xchg
(bad)
mov
idiv
fwait
les
adc
mov
clc
xchg
xor
iret
mov
push
mov
or
adc
push
and
and
inc
lahf
fs
loop
xlat
pop
cld
jp
ins
jl
pop
std
xchg
fstp
rol
push
ins
ds
lods
xor
mov
retf
xor
frstpm(287
sbb
stos
mov
mov
xchg
sahf
jge
adc
cwde
pushf
mov
sub
test
loop
push
(bad)
inc
stc
mov
retf
add
call
lods
sbb
jno
xor
icebp
pop
test
push
(bad)
push
jp
rcl
pop
movs
pop
ins
push
jbe
(bad)
into
clc
ror
xlat
packuswb
dec
imul
mov
and
mov
jbe
cwde
cmp
xor
xor
xchg
cmc
(bad)
out
mov
pop
sahf
add
pop
out
pop
retfw
pop
push
xor
xor
shr
xchg
retf
out
leave
mov
mov
sub
add
dec
or
stos
mov
movs
or
lods
fcomp
aas
stos
mov
add
xchg
mov
push
cmp
pop
jbe
or
pusha
inc
xor
test
mov
push
retf
jge
jo
pusha
and
add
jno
and
inc
lods
push
ret
nop
mov
cmp
in
mov
std
fsub
das
sbb
lahf
push
xchg
into
iret
mov
inc
fbstp
test
cmp
lock
jno
pop
sti
sub
cmp
pusha
push
xchg
ror
push
push
gs
xchg
mov
js
mov
dec
xchg
xor
ds
movs
les
sub
adc
(bad)
fadd
cmp
mov
rcr
sahf
rcr
pop
cdq
or
push
cdq
inc
or
jb
mov
imul
call
cmp
mov
mov
lods
cmp
jnp
xor
push
cmp
mov
test
inc
sbb
cwde
ja
mov
push
sbb
out
into
sub
les
sbb
inc
or
pushf
adc
adc
jp
xchg
sbb
ja
xchg
xchg
dec
and
push
or
scas
xlat
and
retf
aaa
push
jb
icebp
jg
inc
fldcw
cmc
mov
loope
pop
and
mov
jae
xchg
nop
cmc
add
jns
call
fst
push
mov
mov
xor
adc
pusha
data16
call
fstp
and
imul
or
xchg
rcl
jae
ficom
lahf
mov
and
jo
ins
fbstp
sar
jnp
aad
mov
outs
int
add
inc
xor
mov
(bad)
push
sbb
jb
jl
int
adc
out
hlt
push
scas
out
icebp
jl
or
xlat
jae
in
shr
fnsave
inc
out
call
ret
push
pop
int3
xor
arpl
inc
and
mov
mov
jo
stos
test
pop
inc
arpl
inc
fwait
cmps
sbb
xchg
jnp
movs
mov
outs
iret
push
xabort
iret
mov
pop
repnz
aaa
xchg
push
mov
retf
inc
(bad)
in
and
add
dec
sti
push
and
mov
inc
xchg
dec
cmp
fsubp
sbb
dec
leave
sahf
(bad)
aaa
dec
pop
push
xchg
add
dec
mov
fs
aaa
out
rcr
cmp
ror
div
in
imul
mov
add
lds
sub
pop
and
sub
sub
out
in
inc
sub
sub
ss
mov
xchg
push
add
cdq
jae
ret
iret
mov
mov
xor
and
fistp
call
pop
jp
sub
inc
inc
fwait
shl
mov
int3
sbb
adc
lods
sbb
jnp
scas
jb
xchg
sbb
fldcw
mov
stos
call
add
pushf
test
popf
sbb
inc
pop
inc
xchg
sub
test
jl
xchg
cmp
(bad)
lahf
add
adc
in
fnsave
and
pop
mov
push
jbe
inc
pop
rep
jmp
mov
shl
sub
cmp
dec
stc
inc
inc
xchg
shl
idiv
scas
in
or
pop
and
es
out
adc
pushf
in
add
inc
and
mov
mov
pop
test
aam
es
and
cmp
aad
mov
inc
(bad)
in
or
fwait
jecxz
bound
(bad)
cwde
icebp
mov
mov
sub
inc
shl
aaa
int
or
pop
mov
push
xchg
jp
cdq
(bad)
cmc
cmc
fnstenv
pop
sbb
popf
pushf
or
push
ret
out
or
fwait
xor
cmp
jl
and
jge
adc
loopne
lds
add
sub
into
fisttp
jl
es
aaa
sub
adc
stos
retf
mov
mov
push
imul
adc
xchg
adc
cwde
push
movs
pop
call
(bad)
fbld
(bad)
stos
and
xchg
mov
lds
mov
pushf
and
jmp
pop
mov
aad
ret
mov
xacquire
pushf
sbb
ins
and
add
sub
xchg
jmp
int
xchg
mov
sub
inc
xchg
jae
sub
push
stc
mov
and
jle
xchg
fnstsw
enter
jae
mov
int
int
push
add
mov
iret
sahf
cmps
call
or
push
mov
pop
pushf
jae
cmp
jle
retf
lods
lea
sub
or
test
in
into
sbb
icebp
dec
sub
adc
daa
or
iret
push
loopne
cmp
cmp
retf
(bad)
xor
jb
push
cmp
je
pop
fldenv
pop
add
call
push
mov
sbb
shr
add
inc
js
jecxz
jecxz
(bad)
push
mov
jge
hlt
ret
inc
sub
movs
popf
sub
aas
mov
pop
jge
or
cmp
mov
cmp
scas
xor
imul
cs
sub
pop
addr16
adc
rol
gs
mov
cmp
push
sub
mov
loope
in
pop
push
lock
pop
lahf
lock
push
outs
ss
shr
mov
xor
sbb
pop
rcl
or
aad
mov
shl
test
add
add
loop
cmps
xor
nop
rcl
dec
nop
or
ins
fistp
ins
mov
add
xor
mov
sbb
xor
ins
mov
mov
push
and
ret
mov
mov
xor
xor
shr
fbld
dec
shl
adc
push
sub
mov
jge
jno
inc
cmp
jo
sub
dec
test
bound
das
sub
or
jno
outs
int3
jmp
sahf
inc
fldenv
pop
jbe
inc
and
pop
out
push
sar
jns
(bad)
outs
mov
xchg
(bad)
cmp
ret
pop
out
mov
sub
add
dec
cld
jge
gs
ins
ja
or
mov
sbb
jns
sbb
test
mov
jo
es
mov
push
inc
mov
add
clc
sar
out
xor
stos
cmps
and
push
ret
sub
push
das
sti
leave
and
and
inc
loope
dec
mov
add
cdq
jge
jo
cmp
mov
push
scas
ret
xor
dec
lea
fld
(bad)
cmp
push
(bad)
fstp
push
or
xor
xchg
mov
push
jl
adc
mov
cmp
mov
gs
cmp
jle
push
mov
add
jno
out
in
cmp
loop
cmp
js
pusha
xchg
gs
fs
or
cmp
test
outs
sbb
cmp
jb
shl
push
out
cmp
push
jp
or
repnz
xchg
mov
xor
pusha
not
xchg
sub
cdq
int3
cwde
add
pop
xor
jmp
cs
addr16
call
stos
icebp
sub
jmp
cli
shr
clc
push
fs
mov
pop
jne
xchg
push
jbe
rcr
hlt
inc
in
xor
pop
dec
mov
fistp
imul
in
cmp
and
(bad)
in
mov
xchg
pop
cld
imul
cdq
in
daa
loopne
in
(bad)
outs
call
hlt
jmp
inc
popa
not
sub
lea
push
jnp
and
(bad)
ss
jb
and
lods
aaa
daa
mov
test
adc
mov
ss
or
push
popa
inc
add
xor
sti
int3
pusha
sbb
pop
dec
push
xor
(bad)
fsubr
push
mov
(bad)
pop
jp
pop
pop
push
ins
(bad)
fsubr
pop
fst
ds
enter
mov
arpl
repz
bound
in
jp
(bad)
bound
int3
push
lods
int
xor
(bad)
ror
sbb
daa
(bad)
dec
rol
add
adc
aad
leave
xchg
jo
and
mov
pop
mul
daa
std
mov
lahf
cmp
jne
cmp
std
stos
neg
jbe
ins
mov
cmc
aam
ret
mov
(bad)
jp
dec
les
xchg
inc
lds
aad
inc
pop
sahf
aaa
outs
aam
pusha
mov
pusha
push
adc
(bad)
jmp
xchg
iret
js
xchg
stc
inc
sub
aam
(bad)
mov
sbb
cmp
std
mov
pop
dec
cmps
mov
jae
in
enter
nop
jp
pusha
cmp
or
mov
jmp
ds
cmp
cli
std
rol
pop
scas
int3
xchg
and
mov
push
push
add
cmp
fldcw
lahf
loop
sbb
jmp
mov
aas
in
loopne
out
add
or
adc
xchg
cmp
mov
push
enter
je
arpl
and
mov
xchg
sahf
add
ja
mov
mov
adc
xchg
mov
push
jge
jg
push
(bad)
div
and
inc
sub
jns
pop
(bad)
mov
jecxz
push
or
jmp
hlt
adc
mov
add
and
into
push
fmul
mov
out
mov
pop
cwde
and
cwde
pop
(bad)
pop
jmp
cmp
dec
stos
or
int3
aam
lods
fisub
and
fsubr
jnp
and
scas
sbb
push
and
mov
loope
int
(bad)
sub
ss
sub
leave
arpl
movs
repnz
push
lahf
xor
lds
lods
loop
shl
imul
ret
lock
pushf
dec
push
mov
test
daa
dec
add
jmp
add
fild
dec
call
repz
and
fnstsw
inc
stos
sahf
push
mov
mov
mov
dec
es
fstp
pusha
test
lods
mov
test
loope
out
inc
mov
push
imul
data16
loope
mov
pop
fsubr
sub
cmp
add
aad
and
jp
aam
jp
xchg
xlat
inc
push
sahf
scas
repnz
loopne
xor
add
dec
dec
mov
out
mov
and
addr16
ffree
rdpmc
into
jmp
push
xchg
arpl
push
add
gs
outs
(bad)
sbb
push
sub
mov
cmp
das
push
fwait
pop
fiadd
popf
imul
inc
jne
call
jns
and
xor
cwde
fst
je
ins
out
aad
xchg
inc
dec
ins
xchg
push
out
(bad)
mov
mov
and
retf
mov
cwde
push
cmps
(bad)
adc
inc
and
jmp
sub
out
(bad)
fist
rol
sbb
mov
xor
call
sub
push
scas
cdq
(bad)
rcr
mov
or
call
cmc
xor
push
add
fisub
mov
dec
sub
mov
sbb
or
adc
std
ret
(bad)
jg
mov
int3
daa
(bad)
or
xor
or
xor
or
sub
(bad)
retf
stos
push
outs
out
dec
lods
dec
in
das
mov
stc
std
ds
xchg
adc
int3
es
cdq
popf
loopne
shr
shr
cs
fld
cmp
jp
mov
(bad)
(bad)
mov
push
xchg
sub
lods
lea
fld
and
aad
shl
or
pop
mov
mov
pop
or
xchg
stos
jmp
or
in
cmp
push
xchg
int
mov
cdq
popf
jmp
leave
imul
ins
out
adc
(bad)
inc
push
aas
mov
retf
pop
xor
adc
push
imul
cmp
test
cmp
cmc
jp
out
add
ss
dec
out
fld
dec
pop
sub
outs
cmp
jne
(bad)
retf
(bad)
rcr
into
neg
xchg
and
push
sbb
or
div
mov
es
or
xor
push
mov
or
(bad)
(bad)
cmp
(bad)
loop
(bad)
lods
cmp
je
jg
dec
mov
sbb
cmps
mov
test
dec
cmp
add
(bad)
mov
push
iret
jo
pop
mov
mov
test
and
rcr
lds
leave
pop
or
das
mov
adc
pop
cmp
jno
repz
mov
pop
(bad)
mov
jbe
(bad)
sbb
call
test
mov
iret
mov
cmp
sbb
pop
sbb
popf
or
xchg
and
aas
rcl
ss
aaa
sar
or
ret
pop
repz
movs
cmc
bnd
cld
out
mov
xchg
ss
mov
or
sbb
dec
sbb
push
jbe
xor
fisttp
scas
dec
cmp
push
push
xor
fistp
push
jae
dec
pusha
jecxz
test
pop
pop
pop
mov
jecxz
pop
pop
dec
in
ins
pusha
sbb
outs
test
sub
xlat
mov
(bad)
ins
call
in
add
(bad)
scas
aam
jae
fnstcw
push
pushf
xchg
std
or
inc
gs
jg
fstp
xor
(bad)
mov
lahf
mov
(bad)
add
pop
retf
aad
mov
das
inc
mov
xchg
mov
shl
sahf
pop
mov
cdq
es
aam
add
aaa
mov
push
in
sub
dec
xlat
xchg
xlat
stos
cmp
mov
ss
ret
dec
inc
fwait
repz
cmp
push
loop
mov
xor
xchg
cmp
mov
int
or
fistp
daa
nop
jmp
pop
daa
or
inc
imul
or
into
jp
scas
push
mov
mov
in
sub
mov
jb
fstp
rcl
pop
es
mov
mov
out
sub
mov
scas
iret
jle
jg
dec
daa
push
jns
outs
mov
mov
cli
out
(bad)
movs
sahf
jle
movs
dec
dec
sub
sti
in
into
sti
sti
lds
fs
rcl
xchg
fcomp
loopne
fiadd
sti
jge
mov
arpl
repnz
icebp
sbb
das
jnp
das
imul
sbb
shr
fdivr
ror
iret
mov
imul
pop
nop
and
pop
cs
in
mov
xchg
sub
jne
fistp
lock
xlat
iret
or
das
jne
add
pop
loope
test
pop
lods
mov
and
adc
mov
sub
xor
sub
call
sahf
add
mov
aas
pop
jge
pop
jne
je
ins
mov
or
cmp
cmp
or
ins
mov
stc
std
inc
scas
or
or
hlt
or
push
or
dec
pop
ins
jb
jbe
dec
nop
jmp
loope
mov
sub
mov
loopne
xchg
pop
xor
cmp
sahf
mov
jbe
push
mov
dec
loope
jle
ss
inc
dec
push
push
rol
retf
push
push
repnz
popa
xchg
xor
bound
fdiv
shl
test
push
or
pop
(bad)
in
aaa
sbb
xor
ins
rcl
rol
sbb
mov
fimul
icebp
hlt
dec
push
fnsave
lea
cld
lock
xchg
adc
cmp
lods
fwait
outs
les
(bad)
mov
aaa
pushf
jle
(bad)
in
fidivr
enter
loopne
test
fisttp
mov
nop
push
dec
jmp
adc
sbb
rcr
and
je
pop
pusha
sbb
lahf
aam
mov
inc
call
sub
test
and
in
mov
xchg
test
pop
push
add
pop
out
push
es
or
cmp
movs
sub
fisubr
loope
mov
or
inc
stc
mov
fst
lahf
and
xor
adc
lods
inc
scas
gs
jge
imul
jo
stos
sub
fidiv
cdq
cmp
or
loopne
mov
jae
int
gs
pusha
jmp
lods
popa
jge
retf
add
aam
cs
dec
jno
popf
(bad)
dec
int3
adc
mov
mov
aam
jb
xchg
add
call
out
jl
jae
arpl
fistp
cmps
push
sbb
push
std
mov
push
aas
scas
jno
(bad)
pop
fcmovnb
adc
out
call
mov
imul
xlat
pusha
js
sbb
cwde
sub
cmp
rcr
add
mov
and
mov
mov
les
stos
mov
test
jl
dec
inc
or
adc
fstp
shl
mov
xor
mov
je
adc
mov
rol
cld
inc
popa
fwait
pop
and
mov
sbb
leave
add
push
mov
xor
xchg
mov
out
test
or
inc
imul
pushf
xor
jp
add
mov
sbb
out
pop
jl
in
mov
pop
add
lahf
sbb
jge
popa
mov
sti
loopne
adc
dec
fst
cwde
fcomp
cmp
cdq
xchg
ins
enter
sub
xor
imul
inc
xor
outs
je
dec
test
sub
cmc
in
xchg
leave
cmp
sar
xor
mov
mov
les
ja
mov
mov
nop
in
and
ds
sbb
mov
add
jnp
sub
outs
(bad)
mov
hlt
shr
stos
pusha
stc
mov
ins
lods
mov
call
test
cmps
inc
rcl
popf
inc
lock
inc
in
aaa
fnstcw
pop
adc
stos
cmp
out
imul
adc
sub
mov
xchg
(bad)
adc
test
add
mov
xor
cld
push
test
fadd
add
or
mov
mov
xchg
ret
imul
or
mov
cs
mov
in
and
(bad)
sbb
test
popf
and
mov
jp
jmp
cmc
imul
mov
jmp
sbb
les
dec
pop
add
sbb
mov
jo
add
xor
push
out
jne
sub
push
clc
push
test
dec
xor
jne
push
or
loopne
ds
xchg
push
(bad)
mov
sbb
ds
repz
mov
inc
jle
in
pop
(bad)
sbb
lock
das
adc
ret
ins
mov
jecxz
inc
addr16
inc
and
push
or
add
idiv
mov
sti
cmps
stos
in
pop
pop
(bad)
cmp
daa
bound
lahf
jp
jno
mov
out
dec
bound
dec
inc
aad
in
stos
ret
fcom
cwde
mov
adc
(bad)
loope
mov
pop
mov
punpckldq
clc
scas
cld
fdivr
pop
add
cld
pushf
out
sub
(bad)
(bad)
and
add
lods
cmp
and
xchg
or
(bad)
mov
in
jg
aad
mov
das
daa
cld
ds
(bad)
jns
mov
stc
sbb
jmp
(bad)
stos
retf
fimul
jl
sbb
stos
hlt
jae
retf
cmps
push
pusha
in
cmc
aaa
cmp
push
fcom
jns
pop
pop
loopne
popf
rol
out
sbb
push
fidivr
dec
xchg
sahf
and
sbb
mov
xchg
sahf
loop
sbb
add
inc
pop
mov
outs
jle
clc
sub
pop
mov
test
jne
in
jmp
dec
daa
jl
push
in
icebp
mov
sub
sub
push
mov
add
(bad)
mov
jmp
retf
sahf
(bad)
test
je
dec
sbb
ds
or
xor
mov
mov
pop
jb
inc
into
(bad)
mov
imul
push
inc
xchg
call
add
addr16
mov
lods
dec
push
mov
sub
scas
loope
cmps
stos
xchg
inc
push
mov
inc
and
movs
out
mov
clc
mov
jl
push
mov
fsubp
inc
bound
sub
jne
loopne
loop
fist
xor
sbb
jne
mov
retf
mov
movs
call
ja
mov
repnz
adc
push
push
cmp
jp
jp
xchg
in
enter
in
add
sub
pop
sbb
je
push
movs
dec
jp
pop
xchg
and
scas
fs
fsub
in
sbb
fwait
jbe
mov
loope
pop
inc
repnz
push
(bad)
pop
xchg
mov
ins
fdivr
jg
mov
jbe
test
mov
push
(bad)
and
das
imul
aam
push
add
les
retf
shl
jno
fsub
(bad)
int3
jmp
jmp
(bad)
rcr
leave
cld
lea
mov
in
cli
jp
pop
xchg
stos
scas
inc
or
out
loope
ror
inc
push
pusha
adc
add
enter
dec
div
loope
jmp
sub
stos
(bad)
hlt
push
mov
data16
mov
dec
inc
aad
aam
ds
mov
and
test
mov
in
mov
ret
push
dec
and
pop
movs
test
iret
dec
jl
loopne
pop
mov
bound
and
mov
loopne
call
xchg
cwde
xchg
sti
fidiv
aad
cmp
xchg
add
cmp
adc
push
test
cmp
xor
mov
shl
mov
data16
pop
push
retf
xlat
out
pop
jl
mov
push
in
push
inc
mov
cmps
push
or
adc
xor
dec
adc
imul
das
push
jp
call
sbb
test
fbstp
push
aaa
outs
imul
xchg
sti
push
inc
outs
adc
mov
cli
daa
fistp
ins
push
arpl
cs
mov
jmp
and
repz
aas
mov
loope
retf
addr16
aad
out
bound
push
mov
add
in
jmp
into
push
sbb
jle
scas
stc
call
std
das
clc
jo
adc
mov
xor
pop
mov
retf
mov
js
cmps
int
or
mov
dec
int
mov
jge
data16
jno
jb
js
xor
mov
out
or
mov
repz
xor
int3
xor
ja
idiv
mov
out
fnsave
cli
adc
xchg
shl
std
fadd
xlat
jl
dec
sub
retf
or
adc
inc
xchg
xchg
mov
mov
dec
xor
jb
add
test
ret
enter
outs
aad
jae
int3
imul
xchg
out
pop
aad
les
jmp
push
pusha
inc
cmp
sbb
lds
sub
cmp
pop
push
dec
and
mov
sub
lods
mov
popa
aas
out
pushf
loope
sub
inc
in
enter
dec
inc
gs
and
popf
arpl
or
add
inc
popf
mov
xchg
bound
xchg
js
inc
cs
rcr
cmc
(bad)
hlt
mov
dec
lahf
ins
xchg
push
sbb
xor
cmps
pop
dec
in
ins
cmp
mov
add
bound
mov
bound
xchg
mov
push
inc
xchg
cld
test
jo
mov
imul
es
adc
call
rcr
pop
pop
mov
jb
mov
push
sahf
movs
pop
fstp
out
in
inc
mov
ret
cwde
stos
arpl
sbb
fcom
mov
movs
mov
ret
sub
mov
xchg
jge
(bad)
or
pusha
popa
cmp
xor
add
inc
leave
inc
jp
xchg
xlat
dec
(bad)
(bad)
xchg
pop
jo
gs
push
rcr
gs
out
out
inc
mov
stos
cld
jmp
lds
push
pop
mov
or
stos
nop
mov
adc
xchg
jo
cmp
int
sbb
inc
js
mov
mov
push
ss
(bad)
pop
pop
sar
push
mov
jle
daa
int
je
push
xchg
out
inc
mov
jae
mov
jmp
into
sub
rol
stc
je
aam
cmps
std
sahf
mov
mov
gs
adc
outs
test
mov
shl
call
mov
cmp
pop
push
xlat
add
push
xchg
pop
in
loope
and
hlt
add
inc
repnz
(bad)
fdivrp
jl
cdq
jecxz
rol
fmul
(bad)
je
dec
cmp
icebp
lahf
pushf
stc
add
push
ret
mov
pop
repnz
enter
mov
cmp
stos
jns
outs
pop
sbb
xchg
out
rcl
xor
push
or
sub
test
adc
push
icebp
std
mov
push
aaa
out
cli
cmp
clc
cwde
and
push
jecxz
hlt
pop
dec
fs
and
loopne
icebp
inc
les
aam
mov
and
test
enter
jmp
adc
mov
mov
call
pop
xchg
xor
fidivr
popf
and
jo
(bad)
movs
mov
imul
lock
das
imul
adc
pop
sbb
lahf
je
jp
out
dec
in
inc
ror
mov
retf
pop
fcomp
push
ja
pop
rcr
xchg
inc
jns
cmp
push
mov
shl
mov
iret
sub
inc
sub
ret
jnp
jecxz
jb
mov
fwait
and
xchg
sub
arpl
mov
mov
je
in
mov
dec
dec
xchg
adc
push
sahf
out
lds
in
mov
pop
add
push
adc
xchg
push
adc
xchg
rcl
mov
lock
pop
pop
or
test
popa
popa
sbb
sti
xchg
in
ret
test
stos
xor
or
pop
mov
cmc
in
dec
mov
out
lock
and
cmps
jo
sbb
mov
add
clc
mov
sub
mov
ins
call
inc
and
pop
popf
and
loope
es
mov
adc
xor
scas
jb
cwde
arpl
mov
xchg
into
adc
jge
retf
sub
adc
std
and
dec
mov
adc
inc
and
cmc
icebp
rcl
inc
jae
ret
add
xchg
inc
test
sar
and
jge
xchg
dec
loop
mov
inc
rol
jl
cmp
ret
mov
push
sub
push
jmp
xchg
inc
xchg
aam
rcl
ror
imul
test
daa
jp
mov
clc
ror
xchg
sar
in
sub
out
push
fisttp
jmp
cli
js
push
cli
cmp
push
and
js
cmp
jge
add
add
xchg
mov
pop
fdiv
mov
cmp
xlat
aas
xor
dec
or
sub
or
dec
adc
add
adc
sbb
push
mov
daa
ins
rol
sbb
xchg
test
cmp
and
dec
inc
cwde
shl
ret
test
addr16
sub
xor
add
push
push
push
jns
inc
jp
xor
repnz
std
fdiv
iret
lods
shl
fdivr
pop
mov
xlat
(bad)
pop
sub
fwait
popf
mov
adc
imul
sbb
in
pushf
add
fbstp
add
lds
dec
loop
mov
or
bound
aas
rcr
addr16
sti
fwait
or
fmul
push
lock
jbe
sbb
fsub
xchg
out
enter
mov
adc
and
out
adc
pop
sbb
pop
pop
mov
jl
or
pusha
rol
xchg
cdq
sub
test
test
cmps
jno
push
out
lahf
jecxz
dec
clc
rcr
call
xlat
jg
mov
mov
inc
or
test
xor
jns
in
adc
xchg
mov
outs
sahf
jo
cdq
sub
mov
hlt
jae
xor
loope
and
push
push
cmp
xchg
pop
mov
pop
daa
push
std
aam
lock
push
aad
ja
out
cwde
test
or
mov
nop
xlat
pop
mov
cmp
hlt
xchg
and
cmp
cwde
sub
cmp
fimul
outs
test
sub
mov
mov
inc
xchg
inc
cld
movs
sbb
xchg
jo
mov
add
test
fist
nop
std
dec
leave
xchg
pop
stos
jle
dec
(bad)
jmp
xchg
das
cli
and
push
fidivr
xor
imul
cmp
shr
and
bound
mov
jl
clc
icebp
sar
repz
mov
xchg
jae
div
pop
rol
mov
mov
in
aam
push
xor
out
cli
mov
(bad)
sub
movs
inc
xchg
pop
les
xor
cmp
fnsave
jmp
xor
adc
movs
cmps
inc
mov
dec
pop
dec
xchg
add
addr16
ins
mov
iret
cmp
mov
jmp
dec
pop
mov
ins
sub
push
aad
rcr
dec
push
clc
mov
cmps
cwde
arpl
cmp
nop
xchg
cmp
imul
jb
mov
xchg
and
and
pop
gs
mov
push
jl
out
(bad)
retf
jb
inc
(bad)
mov
cdq
xor
mov
out
test
cmp
aaa
out
(bad)
mov
cmp
test
arpl
aaa
jl
hlt
add
dec
sub
and
mov
pop
inc
mov
aaa
jl
cmc
(bad)
xchg
pop
sbb
rol
jp
xchg
jns
jno
sub
ins
loopne
stos
mov
cdq
mov
fwait
add
pusha
sub
enter
pop
push
hlt
mov
sbb
cwde
cmp
inc
loope
jge
sbb
vpsadbw
fmul
push
jbe
jae
push
pop
mov
(bad)
pop
add
aaa
dec
cmp
inc
cmp
or
dec
movs
sahf
dec
test
(bad)
mov
js
out
sub
aas
or
adc
iret
out
rcr
imul
aas
pop
sti
pop
jnp
adc
loop
stos
pop
or
xchg
xor
call
in
inc
mov
jl
sub
cdq
lods
dec
add
aaa
mov
sbb
icebp
jns
out
shr
mov
call
(bad)
das
push
push
jle
sbb
shl
bound
and
pop
pushf
std
sbb
test
push
mov
pop
xchg
mov
fisttp
stos
mov
dec
cdq
xor
call
idiv
cmp
cmp
sbb
call
push
les
daa
or
push
ins
cld
xchg
xlat
and
inc
jne
mov
pop
popa
lods
sub
sahf
xor
les
int
pop
in
push
in
ja
stc
(bad)
(bad)
outs
(bad)
rcl
ror
push
addr16
mov
jo
and
xchg
lods
aas
cld
pop
and
jmp
sbb
retfw
bound
daa
push
test
inc
lea
scas
ror
in
popf
and
sub
jmp
sub
(bad)
inc
lea
jmp
sahf
out
pop
(bad)
cld
pop
xchg
mov
jmp
inc
stos
pop
inc
jecxz
hlt
aam
shl
popa
mov
cmp
jle
rol
pop
xor
mov
xchg
ins
ins
and
inc
xor
xchg
mov
cmp
(bad)
mov
inc
into
imul
imul
fwait
call
xchg
add
clc
jp
pinsrw
je
xlat
int3
int
hlt
dec
xor
test
cmp
jg
or
call
mov
pop
sti
pop
push
sbb
sub
imul
icebp
jp
sub
fnstsw
dec
cdq
cmp
mov
call
xor
adc
rcr
xor
xchg
das
stos
sub
sar
icebp
pop
mov
mov
sbb
(bad)
xchg
jno
adc
mov
push
jge
xchg
sub
div
out
and
mov
imul
cmp
push
shr
or
xor
add
(bad)
push
jae
mov
retf
cmp
add
(bad)
out
adc
add
les
sub
std
cmps
xchg
(bad)
mov
test
jne
int3
ja
add
inc
ja
repnz
push
cli
cmp
inc
aam
jg
popf
ins
call
jo
div
lock
rcl
fsub
xor
lea
mov
pop
sbb
mov
add
jl
and
jo
dec
mov
dec
cmp
mov
rep
cmp
and
imul
dec
out
ins
lea
(bad)
imul
pop
push
int
xor
(bad)
mov
mov
js
jg
das
mov
sub
mov
mov
in
ins
cs
loop
imul
push
ret
loop
js
mov
aaa
xchg
mov
xchg
mov
(bad)
pushf
mov
dec
inc
cmp
inc
cmps
jne
aas
or
cld
adc
jmp
and
and
js
push
test
mov
cmp
aad
int3
loope
push
ins
cmp
ficom
daa
dec
rol
arpl
sbb
repz
jle
or
mov
int
test
ja
jne
sbb
push
(bad)
aad
call
inc
push
mov
cs
pop
jmp
push
adc
test
pop
dec
inc
cdq
or
mov
mov
xor
mov
repz
and
lea
out
aas
xchg
pop
push
xor
cld
push
test
and
and
ds
pop
mov
int3
xchg
fsubp
add
ret
(bad)
call
les
jo
xor
jge
jno
scas
in
arpl
dec
arpl
jge
ja
scas
and
push
sti
mov
nop
pop
push
mov
mov
push
adc
in
xchg
push
sub
xchg
xor
icebp
out
fcom
mov
pop
jae
out
mov
xchg
ja
repnz
iret
in
push
pop
mov
in
add
test
dec
mov
stos
cmp
in
mov
loopne
imul
push
outs
frstor
xchg
hlt
icebp
(bad)
xchg
aaa
fdiv
popa
cmps
adc
inc
xchg
test
test
pop
es
xchg
imul
imul
jae
push
(bad)
daa
sub
pop
mov
ret
sbb
imul
mov
inc
(bad)
sub
dec
fsubrp
cld
mov
int3
add
or
fst
jmp
das
cmps
jbe
cwde
fldenv
arpl
push
or
mov
rcr
addr16
in
imul
ds
xchg
data16
cmc
imul
lock
pop
sti
dec
or
xlat
cmps
imul
sbb
add
aas
inc
dec
in
mov
mov
jo
push
iret
mov
push
shl
sub
sbb
jmp
aam
dec
mov
das
and
xor
cld
cwde
(bad)
cli
test
mul
addr16
jl
adc
cmp
jbe
mul
gs
jae
push
not
in
rcr
popf
imul
jg
pop
mov
aas
shr
jbe
jmp
xchg
test
lahf
and
xor
popf
loop
or
imul
xor
mov
int
or
imul
call
xchg
ins
aam
mov
cmp
cmp
inc
scas
pop
add
push
and
and
inc
pop
shr
in
ret
xor
clc
test
icebp
aad
das
xor
inc
retf
es
adc
jmp
call
adc
cmp
stc
dec
rol
mov
push
sti
adc
in
and
xor
test
(bad)
ins
push
stos
jp
jbe
sub
sahf
fstp
fst
sub
mov
pop
fmul
xor
cmp
in
sahf
xchg
xlat
cmps
add
sti
push
and
lds
int3
sub
out
(bad)
xchg
ins
stc
dec
cmp
jnp
mov
sbb
push
ja
daa
xchg
mov
lea
mov
inc
cmp
cmp
mov
mov
aas
nop
add
in
push
sub
leave
scas
xor
push
sti
ficomp
in
nop
adc
jmp
inc
push
sub
sbb
jmp
outs
cld
dec
mov
pop
cld
neg
fld
nop
inc
xlat
js
xchg
xor
sub
mov
stos
icebp
mov
dec
or
dec
push
adc
int3
xlat
jb
sub
sahf
fwait
loope
mov
xchg
out
add
and
mov
test
ret
es
js
mov
nop
xor
test
aaa
sbb
xor
adc
repnz
jp
jmp
sbb
retf
cmp
les
add
jnp
ss
stc
inc
cmps
lahf
mov
ret
cli
mov
enter
je
fs
ins
mov
sub
es
pop
xor
out
push
sbb
or
push
xchg
push
xor
jmp
and
cmps
xchg
(bad)
mov
stc
xor
daa
and
mov
add
inc
mov
or
pop
out
add
mov
addr16
dec
and
imul
xor
xchg
jbe
mov
mov
fs
sub
or
push
dec
fmul
add
pop
add
cmps
inc
ret
mov
in
pop
dec
inc
out
xor
dec
nop
call
and
je
nop
pop
jl
js
in
add
scas
std
xchg
aaa
popf
mov
sbb
retf
xchg
cmp
or
mov
leave
adc
mov
retf
push
cdq
sub
inc
push
(bad)
or
jge
push
mov
int3
pop
cmp
sub
ins
jb
enter
jmp
adc
xor
fsub
gs
test
aaa
fiadd
sub
mul
outs
mov
sti
iret
pop
inc
or
retf
sub
inc
pop
div
cmp
add
mov
clc
dec
adc
call
add
(bad)
adc
test
mov
pop
sbb
mov
push
mov
rcl
jb
and
mov
lds
push
inc
lock
mov
xor
xchg
dec
call
jae
(bad)
cli
dec
in
pop
inc
adc
mov
loop
push
lds
inc
pop
and
pop
jecxz
popf
in
xor
add
or
and
jae
jp
jbe
cld
xchg
fist
jbe
jno
mov
dec
jb
or
xor
retf
iret
div
pop
pop
add
jnp
loope
mov
push
cwde
xchg
sbb
jp
sbb
(bad)
jmp
mov
dec
bswap
sub
movs
ror
ins
(bad)
retf
sbb
push
mov
inc
jmp
add
push
cdq
and
ja
fidivr
dec
es
or
mov
(bad)
jmp
in
mov
mov
push
inc
xchg
sub
mov
push
cli
adc
mov
xlat
lahf
xchg
and
shr
call
aam
xchg
aam
mov
shl
fwait
sub
ret
dec
inc
mov
mov
cmp
push
xor
pop
push
inc
mov
lods
cmp
ds
mov
lahf
ins
push
add
sbb
jns
test
mov
jo
pop
imul
retf
mov
xchg
push
inc
cmp
or
add
pcmpeqd
sbb
xor
inc
mov
sub
ins
pop
cmps
push
icebp
pop
mov
xor
out
ret
ror
movs
add
mov
and
xchg
ss
scas
or
jns
push
adc
aad
jnp
inc
xor
ss
sbb
repz
xor
cdq
xchg
mov
test
pushf
nop
pop
inc
xchg
mov
stc
cmp
cmps
imul
int
pop
inc
mov
call
dec
int
xor
add
fsubr
and
in
stc
mov
data16
stos
ja
xor
push
stos
adc
pop
dec
xchg
mov
dec
ret
add
cmp
mov
cmp
pop
jl
pop
mov
lahf
or
shr
mov
cld
and
lds
push
xchg
mov
js
dec
xchg
cdq
push
or
das
inc
sar
xor
adc
pop
cs
add
nop
pop
pop
movs
daa
aaa
push
je
out
adc
or
jge
jmp
sysexit
or
imul
cld
xor
mov
pop
movs
aam
repz
lods
dec
jno
ins
mov
cmp
shl
dec
cwde
jge
popf
stos
stc
cli
and
jecxz
dec
outs
mov
ja
push
cdq
aaa
sub
sahf
pop
or
push
adc
sbb
mov
call
or
dec
fisttp
dec
xor
adc
arpl
pop
dec
lea
loopne
pop
out
fst
jo
jne
inc
adc
je
mov
and
aas
push
jbe
ins
cwde
dec
and
and
cdq
add
mov
mov
addr16
and
cmp
movs
cdq
mov
scas
jbe
push
in
dec
jmp
loopne
(bad)
xchg
jg
shl
cmp
pop
retf
push
mov
repnz
lahf
outs
sbb
sbb
dec
or
xchg
mov
or
(bad)
sub
outs
je
adc
dec
lahf
push
shl
jb
pop
in
test
dec
data16
daa
mov
clc
retf
in
cmp
nop
xchg
inc
jnp
jnp
mov
sub
xlat
stos
xor
push
or
in
pop
or
out
in
fcomp
jno
repnz
ins
data16
jp
push
rol
xor
mov
add
scas
sbb
aam
xchg
outs
sub
dec
cli
mov
add
addr16
mov
sbb
xchg
jl
lea
cwde
add
movs
cmovbe
pop
in
fsub
dec
cmps
inc
(bad)
xchg
imul
neg
mov
(bad)
and
call
xor
jl
lds
xchg
mov
rcl
cld
pop
sub
scas
inc
vcvtsd2si
popa
sub
inc
lods
sbb
ins
add
addr16
ss
xchg
mov
loopne
stos
or
lock
int
xchg
adc
jo
out
sub
loop
or
test
js
pop
ss
jle
and
(bad)
mov
cmp
ror
and
push
xchg
dec
les
adc
xchg
xor
outs
mov
inc
add
push
sbb
mov
mov
cmp
inc
cmps
dec
push
push
fcomp
fidiv
into
cmp
adc
mov
emms
stos
lds
sub
shr
sbb
push
jbe
call
push
jl
addr16
pop
(bad)
movs
sar
(bad)
mov
fistp
js
out
out
sub
cmp
jb
ss
not
ss
push
inc
cmc
and
das
shr
or
inc
jno
xchg
gs
scas
ret
sahf
cdq
adc
int
mov
in
daa
popa
adc
(bad)
cmp
xor
shr
dec
or
test
std
and
cmp
push
mov
aaa
test
cwde
cmp
jmp
sbb
sub
cwde
xor
fdivr
retf
in
pop
push
adc
inc
ficomp
idiv
daa
and
frstor
hlt
pop
movs
mov
jmp
aad
dec
xlat
adc
push
(bad)
cmp
arpl
jp
sbb
pop
sar
ja
jns
out
or
shl
cmp
pop
xor
pop
sbb
or
cmp
aaa
xchg
fcomp
jp
sub
xor
add
jo
ud0
out
pop
push
frstor
mov
mov
cdq
cmp
adc
ds
dec
mov
sbb
pusha
lahf
cs
add
jmp
xor
xor
out
jl
sub
inc
fldenv
enter
inc
inc
ins
dec
call
adc
adc
rol
call
fst
pop
push
pop
iret
icebp
cmc
xchg
mov
mov
jl
ret
pushf
or
aas
sub
ja
dec
xchg
mov
rol
(bad)
ins
mov
pop
jp
inc
(bad)
fldenv
mov
xchg
adc
push
add
xchg
pop
mov
jmp
lea
(bad)
fist
jle
mov
pushf
cmps
sub
inc
addr16
dec
adc
adc
dec
fdivr
stos
les
jl
ins
pop
adc
ret
push
int
mov
jl
or
das
xchg
mov
push
cli
xchg
fsub
ret
popa
jl
js
jg
mov
mov
or
sub
or
stc
ficomp
std
out
ds
xor
xchg
or
call
or
bound
add
lock
pusha
xchg
fisubr
stc
adc
pop
int3
jge
inc
xor
scas
push
dec
mov
aas
and
xor
xchg
pop
(bad)
jge
cmp
je
sbb
(bad)
fistp
mov
int3
or
pop
iret
sbb
mov
mov
push
xor
mov
mov
xchg
pop
sub
pop
out
(bad)
dec
std
dec
out
enter
movs
mov
fcomp
cmp
sbb
mov
inc
or
inc
jae
mov
xor
movs
test
jbe
test
or
mov
xchg
jo
(bad)
pop
or
outs
or
jmp
or
mov
lock
pop
call
push
movs
xchg
scas
add
push
mov
pop
push
push
cli
arpl
and
arpl
shr
popa
cmp
xchg
jmp
inc
xchg
in
sahf
pop
xor
dec
pop
cli
pop
lock
sahf
in
mov
adc
test
push
aaa
pop
fdivr
call
imul
sbb
test
jl
cmps
lods
fistp
push
cld
xor
lock
je
fdivr
mov
(bad)
dec
sbb
sbb
xor
cwde
inc
pop
mov
pop
jne
iret
sub
lods
cmp
aas
fnsave
les
pop
inc
cmp
cld
mov
cmp
mov
xor
push
addr16
retf
(bad)
cmp
dec
fld
ins
xchg
mov
out
retf
aas
mov
stc
cmp
leave
jg
dec
or
xchg
mov
stos
mov
jmp
shr
rcr
fisubr
push
sub
fadd
pusha
ins
mov
and
dec
test
jae
push
test
retf
arpl
xchg
xor
mov
xchg
or
aas
call
cmp
test
push
stos
call
mov
lock
lods
pop
or
adc
xchg
inc
dec
push
inc
mov
sub
lods
push
imul
je
lods
stos
add
xor
inc
or
lea
scas
and
adc
call
lea
mov
sub
shl
cmp
sub
retf
inc
and
pop
xchg
pop
daa
or
pushf
test
sub
cmp
cmp
pop
jle
call
psubw
xchg
popf
inc
xor
pop
idiv
jl
jmp
push
ss
pop
push
cmp
mov
xor
jp
jo
data16
rcl
xchg
scas
lock
out
loopne
lahf
jmp
bound
xor
mov
mov
add
leave
shl
inc
jb
mov
les
nop
cli
ins
(bad)
in
or
mov
xchg
xchg
loop
adc
adc
in
je
xor
fisubr
sahf
xlat
push
in
inc
jmp
shl
push
and
and
mov
mov
cmc
cmc
mov
pop
repz
xor
mov
mov
out
aaa
xchg
mov
add
in
push
fcmovb
ja
aaa
jmp
add
sub
jl
pushf
push
ret
pop
xor
and
sbb
sbb
xor
xchg
cmp
push
cmp
push
sub
push
sub
xor
jne
out
push
sub
jmp
mov
and
adc
push
rol
cmps
xor
jb
inc
jecxz
mov
sar
les
mov
jne
leave
movs
jp
pop
cmps
xchg
out
test
je
or
dec
scas
inc
cs
imul
adc
lahf
xchg
sbb
push
mov
push
sbb
loope
xchg
add
clc
cwde
fnstsw
sbb
dec
pop
xchg
mov
inc
mov
fsubr
dec
xor
adc
xchg
push
out
cs
cmp
fistp
mov
pop
inc
div
arpl
adc
pop
push
sbb
pop
lea
outs
mov
fild
jle
inc
sti
jb
daa
ins
in
pop
shr
and
sub
sar
(bad)
jg
push
rcr
out
add
movs
adc
push
cld
add
test
xchg
adc
adc
outs
repnz
jo
xchg
fnstsw
popa
shl
dec
adc
sub
bswap
ins
cdq
xchg
call
ffree
add
pop
loopne
fistp
adc
and
std
xchg
xchg
movs
dec
outs
xchg
jno
loopne
xor
out
push
jbe
lds
shr
fisubr
adc
pop
daa
cmps
fs
gs
xchg
adc
fwait
gs
pop
mov
mov
adc
mov
push
ja
ret
iret
hlt
add
aam
push
in
dec
and
lea
shl
or
sbb
jmp
stc
or
mov
and
mov
mov
mov
pop
inc
out
and
pop
scas
cmp
fwait
mov
pushf
xor
popa
test
adc
push
xchg
jnp
fiadd
test
cwde
cwde
test
jg
mov
mov
dec
into
repnz
stos
dec
rsm
loopne
xor
mov
cmp
sub
fnsave
xchg
iret
sub
dec
retf
sub
fcom
inc
cwde
xchg
sub
ror
cmps
stc
mov
nop
ins
jmp
and
xchg
xchg
fwait
in
rcr
pinsrw
in
sar
pop
pop
push
cmps
push
ret
adc
jo
popf
or
retf
adc
mov
lods
jp
or
cmc
sub
xchg
jg
call
cmp
daa
mov
lds
dec
test
retf
dec
jg
mov
xchg
sub
and
mov
mov
push
mov
aam
sbb
gs
mov
jne
adc
push
jle
movs
xchg
ds
xchg
repnz
mov
arpl
aaa
pop
adc
movs
lods
mov
leave
push
stc
xchg
mov
shr
xchg
aad
aaa
sub
ret
scas
push
sub
cmp
(bad)
and
(bad)
fist
je
cdq
dec
ins
dec
cmp
push
lds
cmps
dec
xchg
push
mov
(bad)
es
mov
shl
popf
mov
inc
shr
fwait
xchg
sbb
and
ja
dec
pop
test
or
(bad)
cmp
test
mov
cmp
ret
mov
mov
inc
repz
push
retf
jmp
mov
pop
xor
sbb
adc
stc
call
push
repz
and
sti
iret
push
lea
xlat
das
mov
adc
inc
int
and
scas
jmp
js
sbb
mov
cwde
mov
sub
jne
fwait
movs
clc
test
pop
stos
sub
sbb
and
icebp
xor
(bad)
dec
retf
or
cld
(bad)
sub
(bad)
sbb
adc
and
lds
jns
ror
and
cmps
jmp
dec
sbb
add
sti
leave
test
jo
cmp
adc
mov
fisttp
outs
iret
and
(bad)
and
sar
push
pop
jmp
xchg
jae
pop
data16
inc
sbb
mov
and
(bad)
shl
adc
and
ins
inc
sbb
fcmovb
inc
popa
adc
in
mov
loopne
sub
push
fnstcw
ins
pop
dec
mov
(bad)
loope
adc
xchg
jne
inc
push
xor
cmp
and
retf
sub
cld
sbb
mov
or
mov
adc
xchg
mov
adc
sbb
in
sbb
imul
fldcw
fdivrp
adc
sub
push
xor
push
mov
dec
adc
icebp
inc
xor
inc
out
push
push
icebp
call
mov
sub
mov
movs
iret
out
movs
fdivr
pop
mov
or
sub
sti
xor
daa
popa
cmp
lahf
pop
and
mov
or
pushf
retf
cmp
cld
cmp
or
aas
pop
arpl
xor
and
xchg
cmp
fcmovb
xor
mov
mov
push
push
ret
sbb
cmp
jb
ss
inc
fabs
je
je
scas
es
or
sub
add
imul
pop
shl
push
xchg
ret
fwait
push
fidivr
inc
cmp
ins
push
or
fstp
fld
pop
pop
call
add
xchg
fisub
or
push
mov
iret
fcomi
arpl
adc
cmps
imul
sub
push
mov
(bad)
dec
ret
inc
movs
inc
pop
cmp
sbb
icebp
xchg
repz
bound
inc
dec
pusha
div
arpl
sub
xchg
pop
push
and
cli
jmp
ins
mov
and
cli
dec
mov
cmp
es
mov
imul
(bad)
mov
sbb
add
gs
clc
pop
cwde
push
inc
sbb
cwde
sahf
(bad)
fld
adc
(bad)
dec
inc
cmp
sbb
push
or
(bad)
out
sbb
add
and
dec
xchg
and
les
push
int
jle
aad
dec
inc
shl
rcr
data16
xchg
and
push
jne
popa
xchg
sub
cmp
mov
scas
pop
xchg
into
mov
pop
repz
pop
dec
js
mov
stos
cmp
cmp
call
sub
out
inc
cs
mov
xchg
stos
add
mov
lods
ds
popa
(bad)
fidiv
or
in
mov
jmp
(bad)
loop
loop
test
pushf
outs
ret
rol
fiadd
jae
push
je
and
data16
xchg
jmp
mov
outs
hlt
lods
dec
lock
hlt
sub
sbb
out
push
movs
ins
sbb
popa
xchg
push
push
vpshad
(bad)
lds
and
dec
popa
inc
(bad)
lock
push
ret
je
aam
call
imul
xor
shr
or
test
outs
retf
rcr
xor
mov
mov
clc
bound
sbb
mov
shl
imul
imul
or
fld
or
(bad)
mov
ret
out
inc
mov
fwait
in
(bad)
cmp
test
or
ins
retf
dec
addr16
mov
gs
cmp
jge
call
sbb
inc
cld
adc
nop
cmps
xor
and
imul
pop
inc
cmps
jg
loope
sbb
xor
xlat
pop
shl
fwait
dec
fcomp
fst
loope
fcmovnu
pop
test
test
stos
sub
mov
sub
leave
ds
(bad)
loopne
xchg
mov
dec
and
mov
in
jo
or
mov
adc
lock
into
dec
pop
push
stc
add
sbb
mul
or
in
sub
aad
cs
(bad)
jns
add
enter
loopne
xchg
out
pop
(bad)
fstp
mov
pop
push
sbb
out
gs
scas
mov
(bad)
fcomi
sub
mov
and
xor
sar
sbb
mov
jno
(bad)
xor
scas
add
loopne
aas
and
push
loop
xor
int
jmp
das
ja
fistp
jbe
pop
pop
pushf
fcomp
jl
test
outs
icebp
xor
lahf
cs
sub
inc
mov
xchg
add
sub
adc
jb
mov
gs
push
pop
and
out
fwait
jmp
xchg
in
(bad)
mov
gs
test
sub
xchg
mov
pop
into
ds
popa
and
aas
add
dec
sbb
scas
mov
sbb
or
mov
sub
(bad)
clc
mov
enter
add
pop
cwde
and
xor
neg
xor
mov
inc
jb
sub
shl
pop
or
xchg
div
cmp
outs
mov
sub
mov
mov
xor
(bad)
jne
imul
in
mov
push
ja
sbb
mov
cmp
jo
adc
icebp
xor
mov
ds
or
mov
or
popa
jl
sbb
xor
cmp
iret
pusha
xcrypt-ctr
cmps
pop
fs
(bad)
aaa
scas
push
inc
dec
xchg
inc
push
div
imul
lods
fidivr
jns
inc
hlt
mov
xchg
jecxz
cmps
mov
fcom
or
icebp
mov
xor
or
xor
shl
xor
push
mov
sbb
dec
cmps
jae
mov
mov
inc
out
inc
mov
pop
xor
jnp
ret
out
fnstcw
aad
mov
mov
jge
inc
xchg
lahf
mov
add
daa
cmp
sbb
sub
addr16
ss
imul
aad
inc
pusha
unpckhps
nop
xchg
adc
ja
ret
sahf
gs
jae
jl
aaa
pop
icebp
mov
icebp
add
out
sbb
outs
call
push
loopne
dec
cmp
fisub
sbb
adc
outs
jl
shl
jp
cmp
sub
sub
jmp
(bad)
icebp
aas
sbb
aaa
sbb
fcom
mov
mov
je
mov
(bad)
icebp
je
cdq
enter
pop
scas
loop
mov
sub
sbb
and
je
imul
mov
stos
aas
jmp
sbb
arpl
retf
(bad)
lock
rcr
enter
mov
stos
pop
rcr
adc
add
push
xor
adc
fcom
daa
sub
popa
fstp
dec
jae
and
test
cmp
xchg
das
dec
mov
dec
adc
jb
adc
aad
jno
dec
dec
xchg
dec
add
ins
cmps
xor
cmp
outs
aas
lods
xor
loopne
push
std
sar
and
inc
mov
out
or
call
inc
aas
jmp
(bad)
push
daa
push
call
imul
mov
jne
jg
jmp
inc
cmp
scas
jmp
xchg
xchg
jge
ss
push
in
mov
lock
xchg
sti
push
dec
and
jne
ss
pop
pop
dec
or
shr
data16
mov
pusha
adc
mov
push
mov
enter
popa
iret
xor
sub
add
push
(bad)
out
mov
fld
xchg
retf
stos
mov
jne
and
rcr
in
fnstcw
xor
out
and
test
fiadd
in
mov
jnp
xchg
lea
xchg
aaa
iret
imul
test
cmp
retf
loop
in
dec
mov
mov
mov
je
lahf
cmp
xchg
test
push
inc
dec
xor
in
pop
jns
jl
mov
mov
loopne
add
jnp
lock
clc
cmps
clc
cmp
push
mov
mov
and
in
dec
pop
popa
dec
xchg
ss
aad
or
sub
(bad)
mov
push
or
call
lds
out
jae
mov
movs
mov
dec
bound
dec
dec
inc
ja
sbb
iret
jb
add
push
dec
xchg
sub
nop
aam
jbe
and
jnp
xchg
nop
push
pop
nop
push
aad
add
aas
push
popf
sbb
xchg
adc
jbe
add
or
inc
jnp
inc
fistp
push
mov
and
fsubr
mov
xlat
test
(bad)
dec
adc
mov
pop
daa
mov
(bad)
stos
shr
arpl
sub
jmp
imul
cmp
and
neg
sub
pop
int
push
add
push
test
jmp
inc
jnp
imul
(bad)
fdiv
cmp
mov
push
xchg
in
push
(bad)
inc
sub
scas
jl
cdq
or
aad
(bad)
push
fnsave
xchg
mov
dec
pop
ins
and
stos
dec
push
shl
inc
fs
cmp
popf
and
cmp
mov
or
es
sar
dec
cwde
mov
mov
push
shr
in
pop
push
xchg
mov
sbb
xchg
test
xor
nop
adc
out
pop
ss
push
imul
push
mov
fwait
sub
push
stos
xor
cwde
cmp
xchg
mov
div
out
retf
xchg
jl
xchg
jo
xchg
aad
out
mov
movs
sub
lahf
push
push
push
cdq
mov
loop
out
dec
leave
xor
das
or
jo
cmp
dec
add
and
(bad)
ss
fiadd
aad
xor
mov
pop
adc
ds
dec
cdq
mov
mov
mov
mov
add
push
push
sbb
jp
stos
out
mov
dec
int3
(bad)
aam
jmp
ins
push
or
adc
cmp
push
mov
test
dec
call
or
push
int3
scas
cmps
lahf
das
or
xchg
push
xchg
cmps
sbb
std
scas
mov
xchg
test
inc
sti
adc
pop
mov
push
sub
test
mov
mov
fmul
inc
xor
movs
jecxz
add
js
sub
std
add
loope
pushf
lea
adc
add
fist
cdq
adc
repnz
cmps
fimul
or
out
mov
xchg
cli
xor
imul
in
dec
dec
push
or
imul
mov
(bad)
iret
mov
(bad)
xchg
mov
cmp
mov
imul
call
xor
lods
dec
jbe
or
outs
adc
jo
test
aam
fwait
xor
jg
jp
pusha
popf
mov
cmp
jo
stc
repnz
ds
sub
wbinvd
xor
repz
je
bound
sbb
sbb
in
imul
retf
daa
cmp
add
in
mov
int
fdiv
bound
push
sbb
and
mov
inc
add
loope
mov
(bad)
jecxz
dec
sbb
pushf
(bad)
adc
pop
repnz
in
mov
adc
das
xchg
or
(bad)
mov
call
imul
cmps
add
fst
cs
pop
dec
test
cld
jmp
mov
push
aam
fldcw
pop
test
inc
add
push
leave
mov
or
sub
mov
jle
arpl
push
mov
scas
mov
jns
push
std
(bad)
cli
js
mov
into
xchg
push
pop
pop
mov
adc
cmp
ds
and
mov
push
mov
push
jne
sub
fs
std
mov
mov
jno
out
push
clc
outs
ins
fadd
repnz
std
lea
adc
jl
xor
sbb
xchg
js
aaa
or
cs
cmp
mov
loope
xchg
cmp
out
mov
or
mov
and
ror
lock
mov
mov
fs
cmp
js
leave
out
and
imul
sbb
data16
dec
pop
xlat
pusha
mov
add
xor
ror
repnz
push
dec
sub
xlat
mov
dec
arpl
pushf
cmp
xlat
fsub
mov
jge
out
test
mov
push
xor
or
daa
adc
sbb
sahf
lock
dec
repnz
mov
and
popf
and
retf
pusha
les
gs
ss
jp
in
(bad)
lea
and
push
lahf
movs
(bad)
mov
inc
cmp
lds
inc
movs
push
shl
push
inc
push
ror
adc
ins
xchg
and
cmp
(bad)
js
xor
inc
and
sar
ins
test
dec
(bad)
xor
scas
stos
mov
cs
sbb
(bad)
test
test
pop
stos
and
adc
xchg
cmp
iret
add
adc
cmp
(bad)
inc
adc
xchg
enter
nop
(bad)
je
inc
lds
out
out
adc
stc
cmps
idiv
mov
sub
xlat
add
test
dec
(bad)
(bad)
mov
add
jecxz
adc
out
sub
cmp
mov
repz
adc
sbb
outs
mov
neg
push
add
les
mov
jmp
push
add
mov
sbb
ror
out
cld
xchg
pop
jp
xor
fisub
out
push
mov
inc
out
imul
adc
pop
popf
pop
sub
mov
shl
mov
push
and
mov
mov
retf
push
or
adc
pop
mov
mov
paddw
sub
jmp
mov
(bad)
pusha
lea
mov
or
into
lock
loopne
rcr
aas
data16
pop
retf
pop
add
sub
sub
in
and
jmp
scas
imul
sbb
int
pop
sbb
xor
mov
cdq
scas
out
test
movs
pop
jo
aam
js
and
outs
inc
dec
push
and
in
xor
adc
push
pop
fimul
jmp
push
les
ja
adc
js
add
jae
sbb
aaa
sub
xor
in
add
inc
push
cmp
(bad)
fsubr
jno
les
test
(bad)
repz
push
(bad)
clc
data16
jbe
adc
imul
fwait
pop
cmp
gs
popf
fsubr
cmp
pop
int
fs
ja
hlt
or
loope
mov
mov
out
test
jb
cdq
ficom
arpl
sub
mov
cmp
ins
add
outs
pop
in
aam
ins
push
in
(bad)
inc
pop
cld
push
mov
inc
and
inc
aam
cdq
mov
repnz
or
or
test
loop
dec
inc
cmp
dec
mov
repz
mov
mov
sbb
jbe
and
std
loop
sbb
ja
in
mov
ds
mov
stos
mov
test
in
sbb
and
aas
aas
mov
in
popa
xchg
inc
pop
adc
add
cld
cmp
int
shl
pop
addr16
mov
loopne
ret
int3
ja
xchg
dec
inc
mov
inc
jecxz
cmc
test
rcr
sbb
fst
sar
or
pop
cmps
push
jne
add
mov
sbb
retf
sahf
pushf
mov
cmps
inc
adc
div
mov
mov
(bad)
lods
cmps
jge
lea
jb
dec
fistp
and
ss
in
outs
popa
inc
xor
jmp
in
xor
(bad)
mul
movs
mov
xchg
not
mov
fimul
lock
cmps
xchg
dec
xchg
dec
push
pop
mov
mov
jp
sahf
(bad)
aaa
or
leave
cdq
inc
jnp
xchg
scas
jbe
xchg
std
aas
dec
ins
out
cmps
fcmovnu
adc
mov
xchg
cmc
push
pusha
shl
and
adc
stc
cdq
int3
loope
xor
mov
jecxz
xor
mov
cs
mov
mov
cmps
fsub
pop
adc
lods
push
jae
mov
out
out
inc
cwde
jns
and
sbb
mov
fwait
lds
adc
inc
dec
(bad)
jmp
das
aaa
dec
push
ret
loope
add
add
adc
leave
aam
mov
jne
inc
push
jp
mov
scas
adc
(bad)
dec
adc
add
(bad)
pop
je
inc
hlt
or
bound
fcomp
sar
call
and
fcomp
jae
or
adc
adc
xor
mov
pop
push
retf
mov
lock
pop
sbb
daa
dec
(bad)
fisub
cmps
inc
add
shr
ror
scas
cmovge
cld
aad
lea
les
popf
xlat
in
popf
sub
lods
adc
xchg
cmp
cld
lock
dec
lods
shr
mov
inc
pop
fst
inc
xlat
dec
int3
cld
pop
iret
fld
xchg
ja
movs
out
adc
test
outs
aas
jle
push
test
enter
inc
push
jb
mov
inc
add
xchg
aas
pop
int3
sub
mov
jno
jmp
gs
adc
inc
iret
push
out
leave
sub
call
sub
call
adc
fbld
and
fs
mov
jb
inc
or
adc
push
bound
mov
xchg
ficomp
js
mov
cmp
cmps
fnstenv
cwde
sub
inc
loope
aad
test
and
aam
cli
outs
cs
hlt
mov
fwait
xchg
shr
mov
(bad)
in
(bad)
test
dec
test
add
and
jge
fisttp
xor
mov
xchg
rol
jl
outs
push
pop
pop
sub
mov
push
jns
loopne
std
sbb
xchg
and
fwait
dec
(bad)
in
xchg
push
sbb
aas
cmp
add
rcl
xlat
test
xlat
retf
mov
xor
push
jg
or
add
stos
jmp
mov
inc
rcl
jmp
adc
and
jmp
mov
in
mov
and
lahf
cmp
mov
mov
cmp
in
ins
(bad)
mov
rcr
nop
pop
daa
mov
xlat
lods
fs
xchg
div
pop
movs
add
inc
add
pop
inc
(bad)
jnp
or
mov
aas
shl
cmc
(bad)
pop
mov
adc
retf
push
and
hlt
icebp
shr
mov
cmp
scas
mov
dec
ds
dec
xchg
outs
lea
std
cmc
out
bound
rcl
cli
sbb
adc
inc
push
dec
adc
push
icebp
into
mov
cmp
retf
test
and
sub
js
bswap
cmc
dec
and
add
xor
imul
addr16
pushf
sahf
das
push
adc
xchg
dec
jb
repnz
retf
mov
les
outs
jne
aaa
outs
sti
pop
(bad)
cmp
test
sbb
sub
inc
movs
sbb
cmp
bound
sbb
in
xor
mov
cmp
mov
movs
leave
add
add
dec
inc
add
neg
mov
mov
cmp
leave
mov
and
sub
push
sahf
xor
mov
call
sbb
push
ins
inc
sahf
bound
push
jle
mov
imul
mov
lods
cmp
nop
dec
mov
xlat
dec
mov
lds
push
pop
cmp
ret
mov
pop
jp
push
mov
and
(bad)
jmp
pop
rcl
inc
fadd
fsubp
mov
sti
dec
dec
ss
test
push
arpl
cdq
stos
or
daa
dec
std
les
sbb
je
xor
jne
ret
out
mov
retf
xchg
sub
jnp
pop
pop
mov
dec
mov
imul
cmp
retf
or
mov
pop
jp
inc
pop
fistp
pusha
dec
sub
mov
pop
neg
jmp
and
clc
cmc
xchg
aas
cmp
sti
cdq
leave
adc
sub
adc
mov
popf
fadd
std
jecxz
jmp
push
xchg
mov
gs
and
idiv
mov
sub
jmp
push
mov
mov
cmp
lahf
loope
jmp
lds
pop
mov
mov
loopne
mov
mov
fcomp
jne
mov
loop
cmp
fs
inc
push
jp
adc
stc
mov
jno
jecxz
stos
push
jo
push
retf
pop
dec
out
pop
xor
mov
das
jmp
add
mov
stc
(bad)
mov
push
jmp
add
ja
mov
pusha
push
xchg
xor
mov
arpl
ffreep
js
mov
push
addr16
jmp
leave
mov
test
or
push
pop
fisub
xchg
mov
sahf
cmp
push
lock
xchg
jb
repnz
push
sbb
adc
adc
imul
jmp
xor
cli
jle
bound
mov
outs
cmp
adc
(bad)
icebp
movs
js
gs
dec
dec
in
out
pop
or
and
lds
ins
inc
sub
addr16
lea
cmp
ins
jmp
cmc
push
mov
jns
mov
and
cdq
ror
aas
nop
mov
sbb
call
(bad)
mov
inc
lock
pusha
daa
xlat
add
pop
dec
xor
push
aaa
pop
out
adc
(bad)
cld
cmp
add
cmp
lock
leave
and
cld
clc
popf
push
inc
add
add
sub
jge
push
add
xchg
daa
or
repnz
jmp
sbb
popa
rcr
gs
add
dec
nop
sub
xor
jne
mov
retf
repnz
call
dec
jecxz
(bad)
push
arpl
data16
out
add
sub
sub
rcl
cmps
dec
in
dec
mov
inc
ret
or
mov
ret
stos
xchg
(bad)
push
or
lds
gs
lods
cmp
cmp
aam
mov
inc
fild
add
adc
sbb
or
push
je
jl
(bad)
jecxz
retf
aad
mov
jecxz
pop
sub
arpl
pop
movs
in
pop
scas
js
jle
xor
stos
add
pop
test
lea
jle
fild
mov
or
clc
pop
pop
xor
cld
retf
add
sub
push
jbe
xchg
pop
into
ficom
xchg
mov
jl
ret
aaa
xchg
lahf
dec
jb
loopne
and
stos
call
loopne
sbb
cmp
inc
mov
scas
cmps
mov
or
addr16
sub
push
mov
les
and
ret
(bad)
int3
sbb
push
jmp
xchg
call
jne
inc
xchg
iret
cmps
xchg
pop
sbb
call
int3
push
push
cdq
push
rcr
mov
sbb
sub
adc
inc
(bad)
test
inc
leave
out
icebp
push
mov
out
ret
and
push
cli
ds
bnd
lds
inc
sub
jmp
in
xchg
mov
pop
cmps
xor
adc
(bad)
mov
mov
sbb
inc
adc
repnz
mov
add
cdq
bound
ss
pop
push
hlt
adc
movs
mov
mov
loopne
movs
adc
xor
cmc
int3
mov
clc
sub
jecxz
push
fsub
jmp
aaa
mov
into
mov
sub
push
jmp
int3
inc
xchg
stos
in
adc
jl
shl
xor
mov
pop
push
or
pop
dec
fild
nop
add
jo
dec
jnp
fwait
test
jb
nop
or
adc
push
mov
pop
or
(bad)
out
and
loop
mov
jns
mov
and
pop
mov
gs
xor
mov
sub
push
mov
div
jo
jmp
mov
int3
mov
enter
adc
add
xchg
jbe
daa
cmps
dec
add
add
pop
dec
repz
mov
stc
mov
mov
jo
jbe
imul
jl
fs
and
lahf
shr
ret
inc
stos
lods
xor
add
push
inc
xchg
or
xchg
bound
rcl
mov
mov
sti
movs
mov
or
fiadd
test
(bad)
pop
inc
ins
rol
inc
retf
jmp
xor
push
xor
pushf
mov
inc
lds
and
adc
inc
dec
cwde
dec
dec
out
sub
adc
lods
add
inc
sbb
dec
fstp
test
inc
xor
(bad)
mov
jae
dec
test
les
add
call
jns
mov
imul
mov
lahf
dec
ja
lock
dec
jnp
adc
jno
shr
mov
dec
and
sub
push
hlt
mov
inc
fwait
out
add
cmp
mov
mov
pop
lahf
mov
(bad)
push
adc
adc
adc
adc
mov
or
mov
mov
fdiv
mov
jl
in
enter
jmp
jmp
jge
aam
cmp
into
fwait
mov
xor
popa
daa
loopne
rcl
call
popa
fwait
xchg
push
in
stos
xor
daa
mov
scas
jge
sbb
jno
push
dec
xor
sahf
cmove
fwait
mov
cmp
pop
jns
mov
sub
int
sbb
out
sbb
fmul
inc
and
cwde
pop
push
in
scas
ins
imul
pop
stos
jmp
or
out
push
push
dec
jnp
or
out
ret
pop
inc
movs
test
aad
pop
pushf
shl
mov
fistp
cmps
sbb
mov
enter
inc
(bad)
pop
call
outs
jns
or
jmp
imul
shl
pop
pushf
retf
(bad)
fwait
aas
ins
hlt
enter
push
ins
ins
ds
imul
jmp
fs
cmps
xchg
idiv
dec
in
pushf
sbb
test
cmps
lods
mov
jecxz
fs
push
add
pop
test
mov
nop
jge
inc
data16
sbb
dec
xor
cmp
fs
mov
sub
adc
sbb
and
jnp
dec
rcr
out
push
sub
ror
ss
adc
stos
xor
mov
retf
or
cmp
mov
pop
ins
inc
dec
ss
cmc
out
inc
mov
lods
popf
retf
xchg
and
and
jnp
dec
in
mov
std
sbb
shl
cmp
test
or
fwait
dec
mov
pusha
(bad)
(bad)
mov
jo
and
sti
jmp
jmp
mov
imul
ds
cmp
xchg
enter
in
loope
mov
xlat
pop
stos
aad
sbb
retf
ins
(bad)
movs
dec
inc
mov
stc
pop
popa
cmp
jno
add
inc
cmc
fidivr
mov
mov
icebp
jp
ret
sub
pop
ins
js
cmp
movs
add
mov
mov
push
adc
fstp
lock
pop
out
dec
aas
pop
daa
mov
sub
inc
sbb
mov
fdiv
and
dec
jp
add
mov
xchg
js
inc
sub
dec
mov
sbb
add
stc
call
dec
ds
(bad)
jae
cmp
loop
cli
jmp
add
sub
js
push
retf
sbb
or
adc
or
sub
mov
popf
out
or
sbb
cmp
imul
cmps
jp
fild
push
scas
rol
xchg
test
aas
mov
int
bound
je
(bad)
in
add
inc
adc
daa
cmp
cmp
jno
mov
add
fidivr
dec
lods
mov
stc
(bad)
mov
jmp
fimul
or
mov
mov
mov
inc
push
pop
fldenv
cmc
mov
mov
jecxz
xchg
cld
mov
sti
aad
(bad)
fst
jne
mov
mov
xchg
xchg
mov
enter
push
jae
shr
push
cmp
adc
mov
xlat
icebp
sar
mov
adc
adc
pushf
int3
mov
(bad)
push
sub
loope
inc
mov
jns
adc
dec
loope
mov
test
fnstcw
pop
imul
lds
lahf
pop
nop
mov
jmp
add
mov
test
test
and
cmps
cdq
mov
or
mov
sbb
xchg
hlt
clc
outs
je
shr
pop
sub
or
push
out
and
or
dec
popa
or
loop
mov
rcr
cld
sub
fdivr
loope
add
add
loope
push
sub
mov
loopne
inc
pop
push
pop
xchg
mov
cmp
push
cmp
setae
dec
xor
and
rcr
jmp
adc
adc
ret
in
add
dec
mov
jo
stos
ins
(bad)
outs
and
cmp
add
cld
mov
jge
stc
fs
int
in
iret
lods
(bad)
das
ins
push
xchg
bnd
js
mov
jmp
cld
cmp
cmps
inc
and
sub
or
mov
jae
xchg
sbb
pushf
and
test
jg
add
and
outs
movs
xchg
pop
inc
sub
inc
test
jns
add
and
xor
xlat
inc
cwde
mov
retf
or
loope
cmp
cmp
mov
pop
and
inc
(bad)
or
mov
lds
and
in
and
mov
adc
cdq
pop
adc
das
fnstenv
aad
clc
pop
loopne
sub
pop
cmps
in
das
call
push
jl
fstp
icebp
mov
jge
shr
jne
sub
test
loope
pop
xor
jnp
jb
leave
in
xor
mov
sar
push
mov
out
inc
lds
fidivr
in
fs
sti
xor
dec
fadd
int3
pop
jae
push
popf
ins
cmp
imul
sar
mov
in
inc
ss
je
sub
je
rcr
pop
jg
cmp
out
mov
adc
arpl
push
out
popa
mov
retf
jg
leave
xlat
mov
hlt
mov
add
mov
(bad)
jnp
add
mov
jg
dec
shl
inc
sub
sbb
out
mov
sub
outs
push
mov
scas
into
adc
pushf
jne
push
mov
lods
retf
ret
cmp
mov
push
xchg
jb
fdivr
sub
pop
and
stc
or
fdiv
fwait
loop
out
aas
into
xor
leave
push
push
mov
std
pop
xor
lahf
rol
out
test
fs
push
push
icebp
(bad)
call
xchg
gs
mov
add
xchg
add
fimul
outs
dec
xchg
lock
mov
ror
(bad)
cli
retf
jp
inc
jl
push
jge
pop
push
dec
loop
mov
rol
shr
js
mov
int3
mov
fdiv
push
ret
jmp
sahf
fisttp
imul
add
lods
fcomi
into
imul
pop
lods
add
ja
je
pop
dec
jecxz
scas
xor
mov
cdq
jns
out
cs
push
and
push
dec
sti
inc
xor
fwait
icebp
and
xlat
add
xchg
nop
mov
xor
out
fldenv
inc
in
mov
ins
adc
mov
jmp
or
or
sar
xchg
mov
sbb
fwait
loop
repz
xor
ret
mov
pop
cmp
(bad)
jo
inc
mov
push
scas
cmp
mov
(bad)
pop
pop
sbb
das
add
icebp
int3
out
or
int
xchg
or
cmp
cmc
cmp
and
jge
add
out
pop
jle
jmp
or
dec
dec
stos
inc
or
mov
lods
out
imul
arpl
stos
outs
fist
pop
fidiv
test
test
sbb
stc
sub
sub
xchg
data16
(bad)
sbb
mov
cli
shl
call
xor
retf
es
(bad)
(bad)
cmps
fst
jg
mov
ret
jmp
addr16
jo
retf
aas
mov
sbb
out
std
or
and
inc
adc
dec
xchg
add
xchg
sbb
pop
xor
inc
lahf
pushf
nop
imul
mov
mov
(bad)
cli
bound
sub
test
int3
push
jmp
jg
jmp
jo
stos
aas
adc
shl
sbb
leave
jmp
push
ja
inc
add
pop
ret
inc
jge
stc
pop
cmp
fcomp
sub
(bad)
cld
aam
js
cdq
in
leave
dec
push
sbb
dec
push
add
inc
cdq
push
pop
cwde
ret
loop
fisub
cmp
cmp
outs
jmp
lock
adc
sbb
stos
fisub
jge
cmc
adc
xor
fadd
lods
mov
mov
ror
mov
mov
fwait
mov
cld
aaa
push
movs
xchg
pop
icebp
inc
pop
mov
icebp
repnz
(bad)
div
and
sub
mov
pop
mov
test
inc
and
loopne
inc
dec
ins
movs
pop
sub
mov
xlat
aam
mov
fistp
add
mov
mov
xchg
cs
and
popa
in
xchg
jo
pop
or
cmp
xchg
mov
push
sti
(bad)
outs
lods
hlt
jmp
adc
je
mov
mov
cmps
stos
push
sub
fsubr
mov
xor
jnp
xchg
call
adc
push
mov
sub
mov
push
stos
mov
mov
mov
mov
jbe
push
mov
aas
call
mov
fild
inc
aad
enter
xchg
lock
dec
cmp
cld
and
(bad)
cmp
xchg
hlt
or
mov
mov
mov
mov
fild
stos
cli
ins
push
icebp
je
jp
pop
jg
xchg
jge
js
movs
nop
mov
mov
shr
out
adc
int3
lahf
xor
out
in
adc
adc
add
pop
mov
stos
inc
dec
dec
mov
mov
(bad)
call
out
push
add
cmp
ds
mov
pop
push
adc
imul
loope
(bad)
mov
lods
gs
and
stos
pop
mov
int
jb
push
jns
adc
push
xor
sbb
xchg
sbb
dec
inc
shl
push
icebp
mov
fcom
in
iret
push
ret
stos
jmp
xlat
lea
sti
out
add
xor
push
ret
pop
ja
les
cmps
lods
and
pop
mov
pusha
mov
push
mov
je
sar
sbb
pop
xchg
mov
mov
retf
popa
adc
pop
mov
fistp
fild
or
cmp
add
(bad)
(bad)
mov
add
in
cmp
leave
in
lea
(bad)
push
inc
xchg
sbb
sub
add
les
mov
fwait
mov
inc
(bad)
push
pushf
jo
js
add
and
push
mov
dec
mov
movs
inc
and
adc
fmul
movs
sbb
jmp
inc
scas
(bad)
jno
rcr
mov
in
fldln2
push
pop
js
push
in
sbb
cmps
sar
in
inc
inc
fsubr
inc
jo
mov
mov
cmp
mov
loop
cs
hlt
mov
fcomp
fbstp
cli
adc
rol
sar
cdq
cmps
test
adc
adc
imul
outs
xor
dec
jp
push
daa
sub
icebp
mov
sbb
(bad)
mov
ret
cmp
xchg
dec
cmps
push
or
mov
inc
mov
(bad)
scas
xor
std
into
xor
push
xor
aam
push
mov
jo
lock
aas
mov
in
xlat
push
pop
pop
int
mov
pop
daa
mov
mov
icebp
in
mov
mov
ret
es
in
mov
clc
mov
add
adc
aaa
leave
test
retf
(bad)
jns
sub
lds
ja
adc
cmp
and
and
fisub
push
hlt
mov
movs
xchg
sub
loope
leave
lds
gs
mov
movs
mov
push
scas
dec
enter
push
xor
outs
xlat
loopne
fadd
lds
cmp
adc
mov
ror
or
mov
(bad)
push
and
in
call
mov
mov
out
pop
jmp
aas
push
(bad)
nop
out
mov
xchg
pop
mov
mov
pop
ins
push
test
stos
loop
push
sbb
mov
cmc
retf
sbb
cmp
(bad)
push
lea
xchg
or
sub
stc
int
push
mov
add
jnp
(bad)
in
and
jmp
call
mov
stc
cli
test
rol
adc
pop
or
cmp
mov
loope
fstp
mov
lods
mov
scas
lahf
adc
retf
adc
mov
or
adc
cmp
push
pop
in
fwait
stos
sub
arpl
inc
and
push
dec
out
and
leave
push
sub
jg
cmps
(bad)
cdq
out
fbstp
sar
push
push
jno
dec
add
nop
sar
out
xchg
push
ret
push
into
xchg
add
dec
inc
xor
test
sbb
mov
popf
ins
leave
sbb
sub
add
mov
sub
scas
dec
out
sbb
clc
idiv
fimul
hlt
cld
inc
inc
mov
pop
stos
in
ds
lahf
ret
dec
mov
inc
lods
inc
neg
mov
pop
jmp
aaa
or
mov
mov
lock
test
inc
mov
and
add
div
lods
ins
mov
mov
stc
test
sub
inc
xchg
(bad)
ja
mov
clc
pop
or
mov
xchg
xor
hlt
bound
lahf
sbb
loop
ins
jno
lea
pop
nop
popa
cmp
push
and
jmp
(bad)
pop
mov
iret
int
add
stos
push
sbb
jmp
pop
int
leave
pop
mov
jae
xchg
xor
(bad)
aaa
lahf
mov
ret
es
test
popf
or
push
inc
call
scas
fsub
sub
ins
xchg
adc
mov
xlat
or
mov
xor
dec
sub
cmp
inc
out
jae
cmc
inc
arpl
sti
sar
inc
fwait
call
xlat
dec
push
xchg
xchg
mov
jb
hlt
out
jl
adc
nop
jb
cdq
mov
test
sbb
test
mov
mov
mov
mov
retf
sbb
push
ret
std
das
xor
or
nop
jae
dec
push
push
mov
add
push
fistp
scas
lds
(bad)
popa
mov
shl
mov
cmp
out
cmc
js
add
pop
mov
sbb
ds
scas
cmp
test
sub
cmps
cmp
xchg
xchg
(bad)
or
mov
mov
mov
pop
mov
xchg
inc
push
xchg
jmp
dec
es
in
mov
and
aam
retf
adc
popa
add
inc
mov
dec
push
movs
cmps
dec
out
idiv
mov
movs
repnz
pop
push
outs
sbb
jno
pop
lock
push
inc
movs
dec
push
fist
adc
mov
call
sbb
jmp
cld
jge
stos
sub
out
dec
mov
dec
stos
mov
mov
ror
vminpd
mov
ins
out
xchg
lock
and
jae
xchg
pop
add
fs
xor
stc
les
aaa
test
gs
mov
adc
ins
sub
add
(bad)
jmp
adc
jge
out
add
mov
xchg
dec
lods
cmc
ss
rcl
xlat
or
pushf
scas
pop
int3
or
out
lock
ror
jnp
jo
stos
idiv
nop
clc
inc
mov
icebp
cwde
lea
pop
or
inc
xlat
ret
imul
fwait
movs
shl
rcr
cmc
pop
into
(bad)
inc
push
add
pushf
jnp
gs
shl
mov
sti
and
nop
into
inc
arpl
daa
cdq
mov
sahf
lahf
ja
retf
outs
mov
sbb
out
mov
cld
dec
and
fistp
(bad)
adc
pop
sub
cld
ins
in
add
sar
jae
int
sbb
loope
inc
(bad)
xlat
mov
xchg
push
push
mov
pop
inc
pop
xchg
and
cs
arpl
xchg
sar
fnstcw
ins
mov
loopne
sar
pop
sub
adc
scas
adc
sub
jb
cdq
aas
push
push
or
(bad)
in
in
jne
sub
xchg
adc
cmp
dec
call
adc
aas
pop
push
mov
mul
(bad)
popf
sub
mov
mov
std
or
into
pop
jmp
test
pop
jg
jb
fnstcw
jns
mov
add
js
or
les
pop
lods
mov
fwait
jg
test
(bad)
int
jbe
cld
dec
test
test
(bad)
in
cli
call
mov
or
lds
inc
into
adc
jge
(bad)
movs
cmp
das
mov
jmp
jb
sub
es
lock
add
outs
ja
shl
mov
retf
pop
out
nop
xor
mov
pop
jmp
jmp
cmp
fmul
push
mov
pop
(bad)
loope
adc
(bad)
sbb
rcl
jmp
fidiv
js
pop
adc
out
dec
out
sub
mov
ret
jl
inc
in
or
movs
daa
test
adc
add
mov
cli
sub
rcl
inc
mov
or
mov
sub
dec
or
aas
push
sub
loope
pop
fimul
mov
mov
jmp
xchg
ficomp
pop
das
pop
iret
sahf
cmp
imul
add
ret
repz
push
out
daa
xchg
ret
mov
pushf
lds
imul
sbb
or
mov
push
cmp
icebp
(bad)
leave
mov
nop
ins
inc
(bad)
retf
in
aaa
push
lock
cmp
jmp
(bad)
jns
push
fistp
iret
add
daa
xor
sbb
stc
js
add
fisub
jbe
imul
push
mov
sub
mov
sub
(bad)
xor
mov
test
std
sbb
cld
pop
or
mov
stos
xor
dec
cwde
xchg
idiv
ss
ret
xchg
and
hlt
or
or
xchg
icebp
ins
jnp
data16
mov
fild
push
fnsave
jne
or
out
bound
enter
cs
idiv
cmp
in
pop
dec
dec
repz
mov
cmp
in
xchg
mov
cmp
mov
in
xchg
add
mov
clc
pop
iret
mov
pop
dec
and
cdq
or
cmp
mov
or
cdq
xor
pop
ja
cmp
mov
pop
ins
inc
push
jbe
ins
inc
cwde
pop
sub
imul
popf
cmp
ja
mov
mov
mov
mov
(bad)
cmps
movs
jl
inc
mov
loop
outs
pop
outs
xor
adc
ins
inc
mov
or
mov
clc
or
ins
inc
je
jnp
(bad)
jne
xchg
outs
pop
call
mov
js
mov
xchg
sbb
call
or
add
loope
jl
mov
stos
add
adc
clc
adc
rol
add
dec
jl
(bad)
fdiv
jl
loope
jbe
xchg
inc
jg
addr16
cwde
add
ret
or
add
enter
cmp
mov
movs
data16
mov
xchg
jl
push
test
cmp
add
scas
xor
adc
js
sti
fadd
add
call
jl
mov
xchg
rol
add
adc
inc
and
push
add
mov
sbb
add
in
add
dec
cmps
jl
es
loop
mov
js
loope
add
add
xchg
jecxz
jl
(bad)
push
jl
daa
enter
call
xor
(bad)
out
call
js
xchg
sub
inc
and
and
pushf
xchg
clc
scas
(bad)
pop
ins
inc
ret
ins
(bad)
sar
pop
ins
pop
test
sti
xchg
cmp
sub
cld
ins
mov
(bad)
ins
mov
lock
cmp
and
aad
ins
pop
pop
cmp
mov
clc
repz
pop
inc
out
mov
cmp
out
sti
js
add
mov
sti
js
test
ds
cmps
ins
pop
dec
test
xchg
mov
js
fwait
pop
ins
(bad)
mov
xchg
and
jecxz
nop
outs
xchg
jl
xchg
mov
mov
mov
lahf
neg
fist
xchg
cmp
or
cmp
ins
(bad)
xchg
xchg
jge
inc
xchg
mov
ins
mov
push
in
js
add
out
outs
xchg
dec
in
cmp
jle
push
pusha
icebp
ins
xchg
xchg
js
in
ins
pop
out
xchg
clc
inc
ins
mov
mov
shr
xchg
mov
js
iret
pop
ins
(bad)
repnz
jo
mov
mov
clc
mov
dec
adc
xchg
mov
mov
addr16
fsubr
mov
pushf
je
cmp
xor
xchg
add
mov
ins
clc
cmp
test
cmp
push
test
js
dec
pop
xchg
clc
js
das
jno
inc
mov
movs
sar
daa
dec
dec
pop
inc
dec
(bad)
push
pop
(bad)
jb
in
add
data16
(bad)
clc
mov
js
inc
mov
int3
pop
(bad)
cmp
in
clc
ins
pop
out
jae
cmp
mov
pop
ins
inc
and
repz
mov
les
je
outs
pop
mov
jae
mov
mov
pop
pop
js
inc
jnp
bound
pop
mov
pop
mov
loope
js
cmc
add
dec
or
jae
xchg
clc
cmc
popf
cmp
xor
(bad)
xchg
jg
ins
pop
into
imul
xchg
mov
clc
mov
imul
js
push
ins
inc
cmp
fsubr
fxch
xchg
cmp
call
or
add
xchg
clc
aas
nop
cmp
xchg
js
retf
ins
(bad)
pop
ret
or
rcl
inc
adc
ins
(bad)
jne
lods
ins
pop
mov
js
cmp
data16
and
nop
js
out
ins
mov
mov
clc
retf
push
ins
inc
(bad)
dec
xor
jmp
ins
inc
pop
jmp
inc
xchg
mov
ins
in
xchg
cmp
xchg
cmp
adc
fsubp
lds
cmp
mov
pop
fidivr
lock
xchg
loop
adc
aaa
xchg
push
adc
jp
mov
xchg
mov
test
xchg
outs
xor
test
push
sub
js
push
xchg
xor
cs
ret
jns
test
or
xchg
mov
clc
sar
xchg
clc
stos
xchg
xchg
mov
mov
js
imul
fiadd
jns
push
jne
jns
mov
loope
clc
adc
lock
mov
pop
jp
pusha
mov
cmp
shr
cmp
cmc
imul
test
cmp
jmp
mov
pop
jmp
xchg
pop
nop
js
movs
shr
repnz
xlat
jp
cmp
mov
mov
cmp
mov
(bad)
clc
iret
xchg
mov
clc
fmul
ins
pop
in
lods
xchg
xchg
cmp
fst
nop
clc
(bad)
aam
(bad)
sub
cmps
xor
arpl
imul
js
sbb
(bad)
lea
jbe
adc
(bad)
lock
mov
mov
clc
loope
hlt
adc
mov
clc
sub
adc
mov
cld
test
xchg
mov
in
cmp
cmp
jmp
jne
mov
sub
test
cmp
cmp
ja
mov
jmp
lea
clc
int
mov
jbe
inc
hlt
shr
pop
xchg
mov
out
xchg
js
jbe
ins
inc
repnz
pop
jbe
mov
xor
jno
(bad)
aaa
outs
call
mov
pop
jge
js
xchg
rol
(bad)
mov
add
sub
ficom
movs
clc
mov
js
shr
jno
pop
and
adc
pop
outs
xchg
mov
js
dec
enter
imul
xchg
mov
mov
js
mov
jnp
outs
xchg
stos
rcr
clc
and
and
xchg
js
je
ins
inc
fsub
sub
(bad)
xchg
xchg
clc
push
cmp
ins
inc
cmp
out
ins
pop
imul
xchg
cmp
cmp
xchg
clc
call
stc
ins
xchg
or
nop
js
lods
mov
xchg
ins
(bad)
popf
out
clc
push
scas
nop
js
inc
ins
inc
mov
(bad)
push
nop
js
test
das
popa
pop
outs
xchg
std
jo
cmp
xchg
mov
jno
js
cdq
mov
xchg
outs
sti
ins
(bad)
imul
push
adc
mov
mov
nop
inc
les
fidivr
cmp
ds
test
fidivr
adc
(bad)
in
and
dec
popa
xchg
mov
js
ss
ins
inc
or
mov
inc
out
xchg
jge
nop
js
sti
(bad)
ins
inc
cmc
xlat
cmp
or
das
xor
mov
mov
or
add
xor
push
mov
in
xchg
js
mov
inc
push
cs
mov
aaa
ins
inc
idiv
ins
mov
and
xchg
js
in
pop
ins
inc
popf
mov
ins
inc
xchg
mov
in
stos
ja
sbb
or
cmp
outs
sbb
daa
adc
nop
js
fidiv
pop
xchg
mov
mov
clc
in
inc
outs
pop
inc
jns
js
cmc
pop
outs
inc
(bad)
cli
ins
pop
aas
xchg
mov
mov
mov
js
stc
ss
pop
ret
sbb
xor
div
pop
pop
fwait
xchg
clc
jg
xchg
outs
pop
dec
pop
lds
ins
inc
mov
push
pushf
xchg
xchg
clc
push
jbe
ins
inc
pop
(bad)
pop
ins
(bad)
ja
push
ins
pop
sub
cs
mov
js
(bad)
cmp
jl
pop
add
xchg
ins
(bad)
outs
std
ins
(bad)
or
cmp
inc
mov
nop
clc
and
ins
xchg
out
lods
xchg
mov
mov
clc
xchg
mov
outs
xchg
xor
nop
clc
cmc
pop
xchg
jecxz
ins
inc
fwait
popf
ds
xchg
out
nop
clc
xchg
iret
adc
hlt
xchg
mov
clc
out
jl
ins
pop
(bad)
scas
iret
xchg
mov
cmp
std
jns
ins
(bad)
cld
(bad)
out
ins
inc
cld
fxtract
ins
(bad)
aaa
mov
ins
xchg
jmp
xchg
js
push
add
xchg
mov
js
mov
pop
ins
(bad)
shr
loope
(bad)
jns
mov
mov
clc
jno
dec
outs
xchg
(bad)
out
nop
clc
or
xchg
ds
push
aas
ins
xchg
mov
cmp
repz
mov
inc
shr
fld
fisttp
xchg
clc
call
pop
lods
ins
(bad)
sahf
jne
ins
pop
in
add
enter
hlt
rcl
nop
clc
cmp
pop
scas
cmp
dec
call
sti
clc
retf
and
inc
adc
jb
sub
mov
(bad)
shl
dec
stc
das
mov
js
cmp
inc
adc
and
(bad)
mov
mov
xchg
clc
mov
pushf
adc
xchg
jmp
js
outs
pop
(bad)
xchg
push
pop
inc
mov
add
repnz
js
jle
pop
inc
nop
adc
pop
inc
stc
pop
dec
stc
inc
sub
js
push
pop
xchg
pop
jo
js
dec
pop
(bad)
shl
pop
add
add
push
clc
cmp
clc
js
adc
or
cmp
test
js
xor
lahf
cmp
dec
sbb
mov
pop
adc
sub
clc
or
pop
(bad)
addr16
mov
clc
mov
clc
(bad)
push
mov
mov
repnz
sti
js
int3
cs
ins
pop
xor
xchg
cmp
movs
sti
xchg
js
(bad)
aaa
ins
inc
xlat
pop
out
fcmovnb
xchg
clc
sbb
ins
(bad)
xchg
int3
push
ins
(bad)
daa
adc
adc
cmp
sti
xchg
cmp
hlt
out
clc
pop
fld
(bad)
fs
pop
inc
xchg
js
mov
sub
cmp
xchg
clc
sar
outs
xchg
cli
out
mov
mov
clc
lods
mov
jnp
mov
clc
lds
ins
inc
aaa
dec
jne
xchg
(bad)
xlat
xchg
cmp
or
(bad)
lea
cmc
and
lea
jmp
cmp
cmp
or
jmp
movzx
mov
cmp
jmp
jbe
mov
cmc
sub
jmp
ja
add
rol
mov
mov
sub
stc
cmp
jmp
push
call
lea
mov
jmp
or
pop
add
and
js
jae
mov
mov
sub
stc
shr
add
mov
jmp
push
call
loope
nop
clc
mov
std
shl
mov
clc
icebp
arpl
pop
loope
int3
xchg
mov
cmp
out
and
shr
inc
iret
jmp
ins
xchg
data16
js
inc
xor
xchg
lods
(bad)
push
pop
jne
xchg
mov
mov
sti
clc
mov
pop
pop
inc
inc
clc
cmp
cs
pop
jmp
jae
clc
js
xor
inc
pusha
jnp
mov
dec
clc
mov
mov
mov
clc
rcl
pop
repnz
cmc
clc
cmp
repnz
js
pop
inc
sub
push
mov
mov
js
jnp
pop
(bad)
cli
daa
pop
(bad)
sub
jmp
pop
out
clc
js
jmp
(bad)
mov
mov
xchg
loopne
push
aam
jp
mov
mov
mov
inc
pop
pop
xchg
mov
ret
jae
or
xchg
stc
add
ret
jge
jae
lock
jae
stc
ror
inc
lahf
mov
pop
mov
sbb
pop
jae
leave
mov
(bad)
scas
mov
mov
js
jno
(bad)
dec
mov
call
ror
jae
sar
jo
(bad)
out
inc
ret
loope
mov
out
cmp
js
push
jnp
inc
cmp
xchg
jae
push
fimul
jne
js
mov
mov
(bad)
sub
and
rcr
mov
cmp
cmc
shr
sub
adc
or
mov
stc
clc
mov
test
or
cmp
cmp
jmp
ret
add
inc
gs
popa
jae
inc
jb
outs
jb
mov
bt
rcl
ror
add
cmc
sar
btr
mov
shld
pop
adc
pop
mov
test
movzx
cmp
xor
seto
bswap
movzx
pop
jmp
mov
mov
cmp
jmp
stos
call
inc
nop
mov
ins
(bad)
addr16
mov
not
ins
inc
sahf
cmps
pop
ins
pop
xor
xor
ins
inc
lods
cmp
push
popa
stos
ins
xchg
into
retf
cmps
stc
daa
stos
nop
js
retf
aam
mov
(bad)
fisttp
xchg
iret
xchg
mov
lahf
adc
pop
lods
lea
ins
(bad)
mov
pop
xchg
mov
xchg
mov
mov
clc
test
sbb
xchg
xchg
mov
clc
cmps
mov
adc
cwde
ins
pop
inc
push
inc
and
clc
ds
outs
xchg
int
cmp
neg
data16
aas
imul
or
ins
xchg
xchg
js
mov
ins
pop
add
xchg
mov
cmp
fs
clc
cmp
ins
inc
xor
sbb
mov
sti
mov
xchg
cmp
loop
xchg
mov
clc
cwde
minps
mov
in
inc
cmp
pop
and
outs
pop
jl
ins
or
ins
pop
(bad)
jge
add
in
pop
xor
adc
cmp
sbb
add
push
pop
nop
js
sbb
lds
cmps
movs
xchg
clc
loope
ins
xchg
imul
(bad)
call
xchg
mov
clc
mov
dec
ins
inc
(bad)
jbe
ins
(bad)
or
mov
jns
inc
in
push
inc
ins
pop
(bad)
mov
js
shr
sub
sbb
and
ins
inc
mov
out
xchg
mov
mov
js
inc
fild
or
ins
mov
aad
jg
pop
jmp
jmp
sbb
ins
inc
xchg
mov
ins
(bad)
jne
mov
cmc
xchg
js
or
inc
test
sbb
movs
xchg
clc
cmp
das
ins
inc
ins
and
xchg
xchg
mov
inc
pop
outs
xchg
scas
xchg
mov
cmp
nop
js
aad
ins
(bad)
jo
or
and
ds
xchg
cmp
mov
add
ins
pop
xchg
mov
ins
nop
clc
mov
(bad)
cmps
ins
(bad)
cmp
test
dec
xchg
mov
push
add
sbb
sub
outs
pop
mov
push
xchg
clc
into
push
sbb
jg
jmp
pop
add
ins
inc
and
or
sti
push
inc
xchg
mov
mov
js
out
jbe
(bad)
(bad)
mov
pop
xchg
mov
mov
cmp
es
js
div
ins
inc
ficom
ins
(bad)
jecxz
mov
sbb
xchg
mov
cmp
sbb
ins
xchg
xor
xchg
clc
arpl
movs
add
ins
(bad)
jmp
sbb
out
mov
xchg
clc
adc
mov
popf
ins
xchg
adc
cmp
xchg
sbb
aaa
jmp
mov
mov
pop
mov
out
movs
inc
ins
cmps
mov
bound
and
and
popf
xchg
cwde
(bad)
sbb
inc
pop
ins
addr16
ins
out
gs
outs
cmps
dec
adc
daa
lods
es
fsubr
add
push
xchg
cwde
scas
cli
jne
fsub
ins
out
mov
add
out
mov
push
xchg
fdiv
xchg
retf
ins
out
add
bound
stc
data16
dec
ins
cmps
dec
frndint
xchg
sbb
xchg
pop
pop
(bad)
cs
out
dec
lds
jns
fcom
nop
pop
mov
es
jg
fsub
mov
jmp
mov
ins
cmps
xchg
inc
mov
nop
fcomp
ins
out
retf
jg
addr16
push
ins
lods
(bad)
stos
outs
daa
mov
pop
fwait
push
ins
addr16
jo
ins
out
mov
cmps
call
mov
les
pop
mov
or
popf
sbb
add
outs
cmps
dec
add
xchg
cwde
js
mov
ins
cmps
mov
adc
ins
and
mov
cmps
rcl
out
pop
dec
ins
imul
fldenv
nop
fmul
or
daa
cdq
or
xchg
cwde
sbb
not
pop
pop
popa
fdivr
pop
dec
out
ins
cmps
call
sub
dec
xchg
sbb
or
daa
xchg
cwde
sub
sbb
and
push
xchg
cwde
sbb
pop
inc
(bad)
bound
sbb
shr
ins
daa
jp
mov
call
nop
pop
jl
in
ins
scas
loopne
daa
cwde
or
xchg
cwde
test
mov
call
popa
(bad)
xchg
fadd
jge
xchg
cwde
and
out
xchg
sbb
or
rcl
outs
daa
sub
aam
cwde
mov
adc
sub
ins
bound
ins
addr16
shr
test
cmc
js
addr16
pop
outs
daa
inc
sbb
retf
xchg
ins
pop
jmp
cmp
xchg
js
sub
ins
mov
or
popa
xchg
mov
mov
clc
jo
sub
(bad)
xchg
mov
mov
imul
ins
xchg
or
xchg
mov
clc
or
inc
aam
mov
cmp
call
(bad)
ds
ins
inc
or
out
ins
(bad)
int
fldcw
mov
adc
fisttp
cmp
clc
jp
test
mov
mov
std
xor
and
out
sub
xchg
cmp
mov
call
inc
js
cmps
cmp
stc
xchg
xor
rol
cmp
inc
js
fisub
xchg
or
or
mov
mul
test
(bad)
fs
js
lock
xchg
dec
or
xchg
outs
ins
jge
mov
cmp
lea
sub
xchg
cmp
mov
js
adc
jnp
xchg
js
sub
clc
jnp
in
inc
mov
inc
es
test
xchg
les
dec
jnp
jecxz
lods
xchg
rol
inc
xor
jo
pop
lods
outs
cmp
sub
nop
js
dec
(bad)
pop
aam
mov
clc
fdiv
add
ins
(bad)
mov
xlat
push
rcl
xchg
mov
cmp
stos
rcl
ins
xchg
xchg
mov
ret
in
outs
xchg
jmp
ins
nop
clc
or
ins
(bad)
mov
loope
mov
clc
push
mov
ins
mov
out
pop
sub
adc
cmp
bound
adc
(bad)
mov
clc
imul
or
inc
xor
clc
adc
dec
pop
in
inc
pop
js
in
inc
xchg
push
ret
in
pop
sub
add
out
pop
pop
div
jno
mov
cmp
repnz
bswap
btc
mov
shr
cmp
stc
test
imul
cmp
test
cmp
jmp
mov
jmp
iret
xchg
xchg
js
ret
data16
inc
aad
jl
mov
sub
call
ins
inc
ret
sti
pop
ins
pop
addr16
scas
xchg
clc
inc
sub
popa
ins
(bad)
sub
imul
nop
xchg
cmp
cdq
leave
xchg
cmp
mov
add
cmp
cmp
cmp
nop
js
ds
(bad)
adc
(bad)
data16
das
es
js
xor
outs
xchg
scas
cmp
xchg
clc
add
outs
sbb
xchg
mov
lods
ss
cmp
stos
ret
movs
fwait
ins
pop
jo
push
xchg
cmp
cli
inc
ins
pop
push
popf
xchg
mov
clc
or
mov
add
add
test
(bad)
hlt
push
outs
pop
pop
popf
xlat
xchg
mov
stos
aaa
out
add
clc
jg
sbb
jae
ins
pop
dec
xchg
out
ins
jns
mov
pop
sbb
mov
loopne
clc
cmp
in
cmp
sbb
clc
pop
xlat
mov
js
pop
mov
js
aaa
and
bound
jmp
push
call
push
inc
adc
std
test
xchg
jecxz
js
(bad)
cmp
jnp
(bad)
xchg
sti
das
xchg
clc
pop
xchg
mov
xor
xchg
cmp
test
ret
js
add
push
gs
jb
arpl
jae
data16
dec
popa
jae
add
mov
ins
(bad)
ds
outs
pop
or
rcl
ins
inc
shr
cmp
aad
xchg
clc
dec
daa
or
mov
or
inc
ins
pop
push
aam
xchg
cmp
out
js
pop
call
sbb
adc
outs
dec
mov
cmp
mov
in
xchg
mov
adc
movs
pop
sbb
js
mov
test
mov
in
pop
(bad)
adc
pushaw
in
inc
jl
popf
out
pop
xchg
aas
xlat
adc
mov
cmp
jo
clc
mov
add
jmp
xchg
mov
clc
fisttp
ins
pop
sar
and
xchg
clc
les
ins
(bad)
(bad)
stc
ins
inc
icebp
aam
ins
(bad)
push
retf
outs
xchg
jp
cmp
jl
ins
inc
jae
out
mov
push
inc
add
pop
inc
leave
mov
clc
js
xchg
mov
xchg
xor
fdivr
sub
stos
js
mov
xchg
push
inc
bound
pop
dec
fadd
mov
js
dec
push
inc
mov
pop
push
pop
cdq
lds
in
imul
(bad)
out
mov
push
shr
(bad)
jp
push
pop
ss
in
cmp
test
stc
ja
stos
clc
push
ds
inc
dec
sub
push
xchg
xchg
test
pop
retf
inc
jmp
test
xchg
test
test
clc
inc
sub
pop
call
(bad)
call
pop
stc
mov
inc
xlat
cmovg
mov
shr
test
clc
and
cmc
mov
xchg
fwait
xor
cmp
movaps
push
xchg
jne
mov
mov
js
or
inc
in
cmp
jle
pop
stc
sbb
stos
js
pop
push
xchg
mov
test
lock
cmp
jmp
fild
cld
xchg
push
inc
and
das
cmps
xor
mov
cdq
and
xor
pop
dec
lock
ror
mov
add
xchg
adc
inc
stos
add
mov
dec
clc
icebp
aam
mov
sbb
dec
mov
clc
xchg
aas
adc
inc
inc
mov
inc
(bad)
clc
lods
mov
loope
and
test
dec
js
scas
or
inc
inc
test
mov
shl
shl
jmp
push
ret
add
sub
pop
jmp
mov
test
cmc
lea
cmc
cmp
jmp
push
ret
add
and
jb
mov
test
sub
mov
bswap
not
mov
not
mov
jmp
test
sub
jmp
or
inc
cmp
dec
(bad)
adc
rcr
repz
ds
dec
jae
movzx
jmp
push
call
mov
mov
jmp
push
(bad)
adc
dec
movzx
cmp
jmp
or
add
cmp
jle
sbb
and
popa
movs
aam
sub
push
push
mov
dec
or
push
shr
repz
gs
retf
ret
push
out
mov
popf
adc
lahf
inc
sub
lahf
(bad)
push
call
or
mov
pop
or
push
shr
repz
gs
jle
enter
call
mov
dec
je
dec
ds
jl
clc
or
fsubp
jge
int
inc
add
or
mov
and
push
push
mov
mov
gs
mov
mov
xor
daa
fisttp
lahf
sub
imul
lock
cmp
sub
sub
fisttp
mov
test
ins
pusha
xchg
aam
rol
fld
sar
jae
ds
jl
fwait
mov
jae
mov
cmp
jae
movzx
cmc
test
shl
shl
clc
cmp
or
jmp
adc
xor
icebp
jl
lods
sbb
add
test
repz
les
out
jbe
into
cmp
outs
add
mov
mov
(bad)
(bad)
xchg
js
jmp
ins
inc
pop
ds
pop
fisttp
xchg
clc
ret
stos
or
inc
mov
dec
ins
(bad)
stos
inc
inc
ins
pop
in
push
retf
sub
adc
ins
(bad)
xor
nop
clc
leave
fisubr
adc
outs
xchg
stos
xchg
clc
inc
int
ins
inc
enter
sub
ins
xchg
fstp
cli
clc
loop
js
xor
pop
inc
arpl
xchg
mov
clc
cmp
clc
cmp
or
or
(bad)
mov
pop
or
clc
js
outs
jmp
jnp
ins
pop
or
add
(bad)
cmp
fcom
mov
mov
clc
mov
mov
xchg
retf
xchg
mov
mov
xchg
cli
shr
test
or
ins
pop
lods
sub
loopne
mov
cmp
cs
clc
jne
jns
xchg
sbb
xchg
xchg
clc
push
and
ins
xchg
add
mov
xchg
mov
and
js
jmp
in
mov
shl
xchg
(bad)
sbb
mov
cmp
pop
xchg
sbb
imul
sbb
movs
and
(bad)
and
loop
(bad)
mov
inc
gs
or
aas
stos
push
cdq
clc
fst
stos
gs
leave
push
popw
fimul
mov
out
sti
icebp
mov
call
movs
(bad)
call
clc
add
gs
into
ret
fsub
icebp
call
push
pushf
pop
dec
call
push
sub
gs
or
fild
mov
cdq
clc
inc
call
jno
gs
and
add
mov
cdq
js
jo
gs
push
mov
jle
pop
or
js
loop
gs
mov
inc
mov
jmp
push
call
lea
call
test
jmp
sub
test
cmc
sub
add
mov
jmp
imul
test
stc
test
cmp
jmp
test
push
cmp
push
clc
cmp
jmp
jae
mov
mov
cmp
clc
sub
test
stc
shr
test
cmc
add
jmp
jae
mov
cmp
jae
movzx
shl
cmc
shl
jmp
jae
mov
jmp
sbb
add
cld
dec
pop
(bad)
and
lods
mov
nop
clc
out
nop
ins
mov
into
jmp
ins
(bad)
and
dec
les
ins
inc
in
aam
ins
pop
je
xchg
xchg
clc
inc
sub
ins
inc
sub
std
mov
cwde
xchg
mov
cmp
sbb
jnp
outs
pop
cmp
ror
xchg
js
jno
mov
sub
mov
xchg
mov
js
mov
ins
(bad)
mov
mov
xchg
xchg
mov
mov
clc
repnz
jbe
xchg
adc
test
js
pop
pop
ins
inc
jp
inc
ins
(bad)
test
xchg
int
xchg
js
shl
js
sub
xchg
xchg
clc
loopne
pop
ins
inc
cwde
mov
test
mov
add
imul
clc
mov
mov
pop
and
(bad)
cmp
jmp
xchg
jg
xlat
clc
clc
mov
in
jno
add
sbb
jmp
inc
push
push
in
ins
xchg
pusha
xchg
cmp
jmp
xor
inc
adc
cmps
ins
inc
lock
test
xlat
ins
inc
(bad)
in
outs
pop
das
int
xchg
mov
cdq
ret
cmp
out
xchg
mov
clc
fimul
pop
into
cmps
loopne
mov
cmp
in
or
(bad)
aam
shr
fld
popa
in
ins
pop
fidiv
adc
in
pop
mov
and
cmc
xchg
js
arpl
(bad)
bound
pop
push
xchg
mov
mov
clc
sbb
mov
xchg
mov
xchg
mov
mov
xor
cmp
fcom
xchg
clc
jae
ins
ins
pop
dec
jmp
(bad)
dec
xor
clc
test
retf
(bad)
jmp
cmp
clc
clc
clc
adc
daa
clc
cmp
(bad)
cmp
and
clc
jbe
jae
xchg
add
jle
inc
mov
mov
xchg
jbe
mov
js
adc
jae
xchg
cmp
popf
nop
js
gs
inc
jno
xchg
ins
inc
test
pop
and
out
inc
xchg
mov
outs
pop
inc
jmp
jnp
xchg
mov
mov
xchg
(bad)
jge
mov
cmp
or
sub
pop
ins
inc
movs
add
outs
in
outs
pop
js
lds
ins
inc
fwait
shr
fstp
pop
fld
ins
inc
mov
mov
xchg
cmp
sub
dec
ins
inc
(bad)
in
ins
inc
xor
nop
ins
pop
test
scas
nop
js
add
ins
inc
or
sub
pop
shl
xchg
mov
sbb
imul
fs
mov
cmp
xor
ins
(bad)
es
ins
inc
adc
(bad)
jmp
xlat
(bad)
les
ins
inc
xor
les
jno
(bad)
xchg
cmp
icebp
ins
(bad)
out
xor
cdq
push
out
ins
pop
icebp
pusha
xchg
cmp
xchg
clc
mov
add
outs
pop
sub
xchg
mov
aad
mov
inc
and
in
or
sbb
cmps
hlt
ins
pop
sub
cmps
clc
jle
nop
js
ins
out
ins
inc
out
inc
sbb
sub
ins
xchg
pop
lds
inc
add
(bad)
adc
pop
adc
cmp
xchg
nop
clc
hlt
cld
je
inc
les
ins
xchg
fld
ja
outs
pop
push
cwde
imul
ins
xchg
push
inc
mov
pop
mov
clc
xchg
cmc
mov
sbb
nop
js
fbld
xchg
cmp
mov
xchg
clc
xchg
cwde
mov
outs
xchg
xchg
xchg
cmp
cmp
pop
push
imul
jl
clc
pop
mov
push
outs
pop
and
push
sbb
mov
clc
sbb
popf
jb
ins
pop
mov
nop
clc
out
sbb
cdq
push
mov
lea
nop
clc
dec
test
rol
push
outs
pop
adc
push
outs
pop
pop
xlat
xor
xchg
cmp
push
push
xchg
cmp
mov
ins
inc
test
cmp
push
cwde
jp
inc
clc
leave
outs
xchg
stc
sub
inc
(bad)
in
adc
std
xchg
clc
inc
inc
or
add
(bad)
outs
out
ins
(bad)
bound
cmp
adc
inc
or
pushf
ins
xchg
pusha
xchg
cmp
in
xchg
mov
clc
or
mov
cwde
mov
js
push
enter
es
jg
mov
mov
js
in
ins
(bad)
shr
xchg
fcmovnbe
popa
xchg
mov
mov
clc
pop
fist
mov
sub
push
clc
or
sub
cli
loopne
add
out
add
jo
pop
stos
fisttp
push
enter
or
sub
in
shl
add
pop
xor
or
and
mov
mov
add
inc
sub
dec
cmp
jge
add
shr
sbb
jg
jle
addr16
add
add
les
out
iret
sub
mov
sub
dec
dec
add
and
cmp
in
add
pushf
sbb
xchg
sub
sbb
mov
add
push
pop
add
or
fcom
fbstp
mov
add
push
cld
cmp
enter
pop
xor
add
nop
sbb
add
sbb
add
daa
sub
js
sbb
adc
sar
inc
add
adc
add
add
or
inc
add
sbb
jle
lahf
dec
add
popf
dec
push
popa
dec
add
cmp
data16
dec
add
adc
dec
add
dec
sbb
cli
sub
dec
int
add
xor
imul
sub
xor
add
push
and
movs
sbb
add
add
add
fist
add
inc
xor
movs
in
add
jb
add
dec
add
lds
add
pusha
jne
mov
sub
cmc
mov
add
inc
add
and
mov
dec
add
out
add
scas
sub
leave
xchg
daa
add
pop
dec
add
lea
add
daa
sub
movs
pop
sub
mov
pop
fs
sub
jo
push
add
sub
mov
pop
pop
add
je
addr16
inc
add
inc
sbb
mov
mov
add
es
add
pop
aad
dec
add
outs
sbb
jns
aaa
pop
lahf
adc
test
sbb
in
add
jb
add
add
sub
add
add
ret
repnz
pop
aaa
stos
push
add
inc
add
jns
add
cmp
add
and
sbb
dec
inc
sub
add
(bad)
inc
(bad)
push
pushf
inc
add
sbb
ficom
pop
dec
pusha
cmp
xchg
push
add
jnp
je
aas
inc
add
add
in
add
and
jb
mov
imul
mov
jecxz
add
daa
inc
cmp
pop
sbb
sbb
cmp
cmp
pop
dec
arpl
mov
xor
inc
sub
add
inc
dec
inc
dec
add
cmp
icebp
inc
add
lahf
sub
xchg
cmp
dec
add
xor
add
mov
add
or
add
add
(bad)
fisttp
fldcw
pop
add
sub
sub
add
test
ss
xlat
sub
lods
and
jecxz
loopne
sub
mov
sub
mov
movntps
sbb
adc
js
add
leave
pop
add
ins
int3
sbb
lea
in
mov
inc
add
data16
add
and
add
pop
add
pop
retf
jo
fimul
not
add
add
pop
das
jecxz
add
xchg
add
loope
or
sub
imul
xchg
ds
mov
push
add
shr
add
and
jb
or
add
adc
pop
sbb
add
out
dec
add
or
pop
addr16
outs
push
inc
add
out
jnp
xlat
sub
out
sbb
fidiv
add
xor
pop
xchg
push
inc
add
dec
pop
add
or
dec
mov
outs
sbb
sbb
in
add
pop
sub
(bad)
push
sub
xor
sub
enter
dec
pop
push
jnp
lods
sub
es
push
sub
add
sbb
mov
lahf
push
fidiv
add
xchg
and
pusha
mov
pop
sbb
or
or
add
inc
sub
add
sbb
rcl
sub
jecxz
add
in
sub
jns
push
add
push
in
sub
push
inc
add
in
jp
pop
xchg
inc
add
lods
and
pop
jne
push
xchg
add
sub
add
pop
jno
jle
inc
add
sbb
cmps
popaw
push
rol
in
adc
mov
dec
and
scas
inc
add
mov
add
dec
inc
add
adc
mov
xor
loop
add
add
or
inc
adc
jge
sub
loopne
add
cmp
add
pop
pop
mov
into
sbb
fisub
mov
rcl
aaa
xchg
adc
or
pop
inc
add
push
push
add
or
dec
je
dec
add
adc
add
cmp
inc
cmp
fst
add
adc
cmp
ss
add
and
js
xchg
sub
and
and
and
scas
sbb
pop
repnz
sub
(bad)
dec
sbb
imul
mov
add
push
adc
xchg
pop
dec
cmp
test
inc
add
cmps
sub
add
and
adc
dec
ds
add
popf
sbb
xor
or
add
or
add
inc
ds
test
adc
xor
and
add
add
mov
add
sbb
fcomp
lock
fld
sub
call
imul
fidiv
push
add
daa
dec
add
jne
dec
and
pushf
sbb
fdivr
push
jb
dec
add
sbb
add
sbb
add
and
sbb
inc
mov
inc
add
aad
add
cmp
sbb
dec
outs
dec
inc
add
stc
sbb
adc
cmp
sub
sbb
fcom
or
add
add
rol
adc
and
sub
add
daa
add
dec
and
push
adc
fisttp
imul
sti
add
or
push
add
scas
and
dec
and
dec
inc
sbb
fcomi
push
add
bound
add
and
dec
sub
dec
add
pop
add
gs
adc
pop
sub
jecxz
pop
add
push
ins
into
fisttp
mov
inc
push
jg
gs
add
jmp
add
inc
pop
inc
out
jle
add
add
add
inc
add
stos
and
pop
dec
sub
mov
call
push
rcr
inc
add
adc
add
fisttp
dec
mov
add
arpl
or
or
add
push
ret
sti
inc
add
dec
and
int3
sub
dec
out
adc
jp
adc
or
pusha
outs
xchg
add
adc
mov
js
add
cmps
adc
push
int
sub
cmp
add
dec
push
lods
popa
cdq
sub
jecxz
sbb
pop
jo
pop
push
and
ficom
add
jmp
mul
add
call
jl
pushf
fldcw
add
adc
je
sub
add
and
mov
daa
or
add
adc
add
add
pop
repz
add
and
fst
mov
inc
add
rcr
add
or
pop
add
add
stc
inc
dec
add
sbb
gs
inc
add
push
mov
add
lods
sub
gs
sub
and
daa
add
jmp
add
sbb
out
or
(bad)
push
adc
jmp
sbb
(bad)
stc
jnp
mov
add
daa
adc
mov
add
dec
push
add
outs
pop
adc
push
inc
add
test
mov
add
add
add
sub
cmp
add
(bad)
or
sub
iret
or
add
mov
mov
pop
or
add
adc
inc
add
sub
popa
shl
dec
add
adc
pop
mov
cdq
and
xchg
das
dec
popaw
daa
dec
add
xchg
sbb
retf
sub
inc
add
pop
add
inc
sahf
sub
mov
sbb
in
les
xor
mov
add
add
add
test
dec
add
and
jge
mov
das
popa
dec
add
adc
mov
xlat
inc
add
add
iret
les
mov
inc
add
ja
sub
mov
add
jno
or
sub
add
sub
jg
loope
cmp
mov
add
das
cmp
push
sbb
hlt
inc
and
lahf
jns
push
cld
pop
sub
ror
inc
ja
pushf
inc
add
pop
std
or
jl
add
pop
push
pusha
fs
push
add
jge
inc
add
add
fsub
sub
pop
add
sub
sti
jb
add
cmp
add
or
add
retf
inc
ins
pop
or
add
xchg
sbb
add
add
adc
outs
cmp
add
or
push
add
or
outs
or
add
inc
and
fwait
add
and
daa
add
adc
sbb
add
inc
cmp
inc
add
add
shl
popf
das
sub
fwait
imul
pop
add
add
mov
dec
add
sahf
dec
add
fistp
add
sbb
add
pop
and
cwde
push
mov
add
sub
xor
add
add
dec
popf
sub
ficom
add
xchg
adc
retf
inc
ja
sahf
int3
inc
add
dec
mov
mov
ret
or
add
add
adc
sbb
jmp
add
pop
jae
jb
sub
cli
jecxz
add
add
mov
add
sub
fnstcw
arpl
add
add
inc
daa
sub
push
inc
add
or
add
add
add
inc
add
and
dec
pop
cmp
movs
sbb
out
sub
add
sbb
mov
add
arpl
add
sbb
cld
cmps
inc
add
pop
mov
out
inc
add
mov
scas
adc
cmovne
xor
adc
cli
jns
jb
pop
inc
add
sub
fs
cmp
popf
popf
dec
add
enter
inc
jmp
add
daa
add
es
jl
pop
inc
add
scas
add
mov
and
pop
imul
and
add
sub
add
dec
sbb
add
lea
push
push
out
data16
sub
fs
push
add
sub
ins
sub
test
pop
inc
adc
add
mov
leave
add
add
pop
sub
retf
add
sub
lods
mul
add
leave
inc
add
adc
and
dec
sub
into
sub
ins
jo
jg
in
add
sbb
add
sbb
add
jno
push
xlat
imul
mov
jae
add
cmp
add
daa
sub
inc
inc
and
movs
pop
enter
inc
add
push
pushf
add
and
sbb
gs
sub
adc
jmp
add
and
add
(bad)
add
add
lods
sub
fs
pop
jne
sub
movs
add
add
add
add
inc
add
cmp
add
xchg
dec
enter
out
adc
imul
pop
adc
and
xor
loop
push
add
pop
popa
jbe
loopne
add
aam
add
inc
jg
cli
and
cld
or
add
test
arpl
add
sub
or
dec
add
pop
add
cmp
stc
(bad)
sub
shr
ins
aaa
je
sub
push
leave
es
jbe
push
ins
sub
sahf
fcomp
add
sub
sub
inc
lods
sbb
out
pop
jo
pushf
lahf
dec
add
mov
add
push
sub
shl
add
sub
cmps
dec
add
or
and
(bad)
sbb
pushf
inc
add
pop
add
cmovne
push
call
jnp
dec
add
lds
add
sahf
inc
add
dec
shr
add
rcl
sub
out
mov
sub
mov
or
pop
mov
dec
add
sub
test
jne
fwait
inc
add
mov
add
mov
lea
sub
mov
daa
add
add
cmp
fild
xor
dec
dec
mov
sbb
inc
sub
jge
inc
add
sub
add
pop
pop
jo
or
sbb
jp
es
ror
sbb
adc
add
add
or
inc
add
int
add
aaa
ficomp
sub
aam
sub
mov
popf
and
xchg
and
and
jae
inc
add
xor
je
xor
sub
cmp
aaa
dec
daa
add
je
aas
clc
jmp
add
add
add
(bad)
add
add
add
add
stc
sbb
dec
inc
xor
mov
add
add
add
add
inc
add
add
add
add
repz
repnz
add
xchg
sbb
jb
sub
pop
call
add
pop
inc
add
popf
sbb
and
sbb
pop
add
add
add
add
inc
add
mov
add
sub
add
push
jbe
repnz
add
in
add
dec
jmp
inc
add
mov
out
or
mov
and
(bad)
xor
sbb
add
adc
cmp
fwait
popa
push
arpl
or
pop
ins
fnsave
add
sub
inc
add
and
jp
add
lahf
dec
add
mov
add
or
and
cmc
adc
dec
add
pop
sbb
lods
push
push
outs
or
sbb
js
repnz
mov
add
sbb
popf
push
in
inc
or
adc
arpl
dec
add
add
mov
add
pop
sbb
jg
or
fsub
sub
adc
out
add
shl
add
(bad)
gs
sti
adc
test
dec
das
jns
inc
add
sbb
add
pop
dec
add
add
inc
arpl
or
imul
inc
add
pop
add
imul
add
ficomp
add
imul
inc
add
and
adc
scas
inc
xor
dec
add
sbb
add
adc
sub
add
add
sub
add
dec
add
adc
pop
sub
add
adc
fstp
add
adc
add
arpl
add
movs
sub
nop
mov
mov
mov
popf
pop
add
xchg
and
cmps
popa
sbb
ins
enter
ror
adc
(bad)
retf
add
aas
sbb
mov
inc
add
cli
adc
cmp
pop
jle
dec
add
int
add
outs
test
add
add
or
adc
and
jno
pop
cmp
jae
cmp
jmp
inc
cmp
cmp
cmp
jmp
pop
rol
aam
xor
xor
(bad)
adc
and
dec
pop
sub
sub
mov
jmp
or
adc
sub
js
push
aam
out
js
fwait
mov
xor
leave
pop
sub
stc
test
sub
shld
mov
shr
clc
sub
mov
mov
jmp
push
call
scas
xchg
clc
imul
xor
sub
ins
inc
xchg
lods
sbb
mov
xchg
clc
or
sub
les
(bad)
push
mov
lahf
(bad)
xchg
cmp
add
xchg
mov
js
les
sub
push
out
add
sub
(bad)
in
jo
adc
jb
out
fiadd
inc
mov
add
inc
out
int3
aas
out
inc
iret
in
mov
push
dec
sbb
popf
xor
mov
dec
fadd
cmp
cmp
cmp
fbstp
mul
ror
lahf
clc
jg
arpl
add
arpl
popf
xor
dec
pushf
js
stos
in
arpl
push
shl
sub
out
test
inc
push
jo
pusha
pop
mov
popa
pushf
cmp
pushf
clc
pop
pop
(bad)
push
cwde
pop
pusha
xchg
cmp
dec
pushf
js
or
arpl
adc
punpcklbw
mov
mov
clc
push
jo
pusha
xchg
fdivr
mov
arpl
or
xchg
clc
and
jae
xchg
js
push
ins
inc
out
(bad)
sbb
cld
mov
sub
sub
aas
aam
ins
pop
dec
leave
(bad)
xchg
cmp
or
xchg
clc
mov
ins
out
xchg
out
and
popa
mov
out
inc
xchg
xchg
mov
mov
mov
mov
nop
js
pushf
ins
(bad)
mov
mov
cmp
mov
xchg
push
pop
ins
inc
inc
mov
outs
xchg
out
sub
ins
inc
pop
addr16
ins
(bad)
dec
inc
sub
scas
mov
ins
(bad)
adc
data16
jp
xchg
js
sbb
pop
popa
sub
cmc
popf
ins
inc
jmp
dec
mov
fs
pop
ss
stc
fwait
cmps
xchg
clc
ror
inc
fstp
ins
pop
jb
xchg
cmp
push
xchg
mov
clc
cmps
inc
ins
mov
(bad)
enter
pop
jbe
loope
js
dec
ins
inc
orps
sbb
in
ins
pop
rol
pop
mov
std
ins
inc
cmp
cli
ins
xchg
mov
lock
pop
mov
mov
fcmovnbe
retf
call
mov
fs
xchg
cmp
ins
pop
jbe
sbb
xchg
mov
js
imul
(bad)
push
test
outs
xchg
add
jmp
fst
outs
xchg
mov
gs
clc
push
mov
push
cld
cdq
bts
dec
shr
sub
mov
shr
jmp
ret
add
dec
bound
outs
push
jae
jb
outs
je
je
imul
inc
idiv
mov
cmp
sub
jmp
jae
mov
dec
xor
cmovo
shl
bswap
cmove
mov
jmp
push
(bad)
adc
sbb
jo
pop
push
(bad)
adc
and
push
pop
xor
mov
js
or
or
pop
ins
(bad)
leave
inc
mov
repz
mov
inc
cmp
xor
mov
ins
inc
rcr
ins
(bad)
fnstenv
dec
ins
pop
mov
adc
(bad)
mov
es
cs
clc
and
ins
inc
dec
test
pop
push
nop
xchg
mov
js
call
push
in
jmp
xchg
cmp
inc
mov
pop
and
jb
jl
(bad)
or
je
pop
popa
mov
pop
ins
inc
jo
jns
inc
mov
pusha
adc
mov
movs
in
js
fldcw
pop
addr16
mov
mov
clc
sbb
adc
clc
dec
jmp
adc
imul
ss
out
clc
push
std
adc
adc
push
cmp
xchg
push
mov
cmp
js
js
imul
pop
inc
adc
and
jl
js
repz
push
push
outs
outs
ja
not
clc
mov
ins
pop
cli
jle
xchg
cmp
in
xchg
mov
cmp
xchg
lea
ins
xchg
cmp
xchg
clc
jns
mov
adc
xchg
mov
cmp
adc
push
outs
leave
ins
inc
add
outs
xchg
sub
ins
(bad)
dec
pop
out
ins
pop
data16
mov
pop
lahf
xchg
js
push
rol
push
clc
clc
dec
xchg
(bad)
mov
push
pop
pop
mov
xchg
clc
js
inc
ins
pop
(bad)
xchg
push
pop
(bad)
stos
aaa
mov
dec
daa
lods
sub
clc
ins
xchg
retf
xor
ins
inc
clc
fimul
mov
adc
inc
daa
add
ins
dec
xchg
mov
mov
ins
aaa
and
xchg
lds
xchg
clc
lods
jne
pop
xor
xchg
mov
cmp
mov
clc
add
fild
add
movs
jecxz
pop
add
hlt
shl
dec
mov
ins
inc
out
ret
addr16
sbb
inc
stos
mov
xchg
mov
mov
mov
cmp
and
js
(bad)
push
ins
pop
jp
xchg
clc
(bad)
inc
fs
pop
out
aad
xchg
mov
mov
mov
cmp
mov
js
dec
ins
(bad)
mov
pop
mov
push
or
ins
(bad)
je
ins
pop
outs
out
xchg
js
dec
out
cmp
mov
add
adc
clc
xor
ins
(bad)
cmp
sub
inc
xchg
daa
ins
inc
mov
pop
sar
outs
pop
gs
clc
lahf
mov
cmps
mov
mov
cli
(bad)
pop
ins
inc
jle
mov
mov
mov
js
hlt
shr
or
jmp
mov
clc
and
ja
mov
clc
icebp
pop
shr
xchg
ins
(bad)
sbb
adc
cmp
jle
aaa
jmp
call
xchg
jae
mov
test
add
jmp
jne
mov
sar
movzx
shl
test
clc
cmp
jmp
xchg
jb
js
push
in
ins
pop
mov
addr16
mov
cmp
push
sub
ins
mov
(bad)
push
fimul
fist
ins
inc
nop
xchg
ins
(bad)
mov
in
cdq
pop
mov
sti
outs
pop
out
mov
js
xchg
xor
xchg
mov
cmp
and
js
lods
ret
ins
inc
je
jecxz
inc
mov
out
ins
xchg
out
call
fbstp
mov
clc
mov
jge
xchg
add
nop
clc
neg
ins
inc
cmp
lock
inc
mov
or
adc
mov
bound
mov
adc
mov
cmp
jno
nop
clc
rcr
cmp
xchg
clc
mov
sub
xchg
mov
clc
ja
mov
inc
arpl
popa
ins
pop
fmul
sbb
push
ins
pop
paddusb
xchg
cmp
xchg
clc
or
ins
xchg
loopne
std
mov
inc
push
sti
clc
xor
pop
(bad)
cwde
pop
rol
imul
pop
pop
jecxz
jbe
cmp
ss
clc
cmp
inc
clc
mov
mov
nop
js
shl
pop
outs
pop
cmp
or
xchg
mov
js
and
ins
(bad)
push
hlt
out
outs
xchg
cmp
stc
adc
xchg
cmp
xchg
clc
push
test
outs
pop
and
xchg
js
ja
ins
inc
repz
popa
ins
pop
pop
int
xchg
clc
dec
and
inc
aas
mov
ins
(bad)
push
cmc
sbb
mov
jb
mov
clc
daa
leave
cdq
ins
xchg
jmp
stc
cli
sub
cmp
es
adc
nop
clc
jo
ins
pop
xlat
mov
mov
clc
nop
mov
inc
sbb
outs
pop
cmps
or
xchg
mov
cmp
jbe
clc
sahf
inc
bound
fs
pop
repnz
xchg
cmp
icebp
cwde
xchg
js
dec
mov
xchg
cmp
push
push
nop
js
cmp
ins
mov
add
add
js
xor
ins
(bad)
mov
push
ins
inc
lods
mov
(bad)
imul
outs
pop
ins
inc
addr16
js
xchg
jns
inc
call
pop
push
xor
mov
mov
push
or
ins
inc
call
sub
xchg
mov
cmp
fucom
ins
mov
arpl
xchg
clc
mov
mov
xchg
mov
pop
dec
ins
mov
jae
xchg
mov
js
aad
push
nop
cdq
outs
xchg
stos
jge
cmp
nop
js
sbb
mov
xchg
pop
xchg
mov
cmp
enter
sub
xchg
mov
js
ins
jbe
(bad)
fld
inc
pushf
les
xchg
clc
xchg
mov
mov
js
cmp
cmp
in
xchg
adc
mov
cmp
(bad)
adc
mov
and
in
(bad)
pop
imul
pop
(bad)
cli
and
add
mov
js
mov
in
pop
lods
xor
adc
add
sbb
add
in
inc
outs
lods
out
xchg
adc
fwait
mov
iret
out
in
inc
imul
mov
adc
sbb
xor
adc
not
out
pop
mov
adc
cmp
sub
mov
js
hlt
ins
pop
fild
es
out
xor
ins
inc
ins
dec
mov
xchg
xchg
mov
clc
xchg
(bad)
pop
pushf
push
cmp
ins
inc
inc
jg
ins
pop
ret
mov
xchg
cmp
mov
aas
mov
and
jge
push
xchg
cmp
ret
js
cmovl
or
push
nop
ins
pop
inc
pusha
scas
nop
js
out
ins
inc
shl
outs
pop
xor
xchg
mov
mov
js
adc
(bad)
sub
(bad)
xchg
sub
ins
pop
pushf
sbb
xchg
cmp
mov
inc
leave
repnz
clc
dec
push
movs
ins
xchg
pop
inc
xchg
mov
clc
sbb
jg
xchg
mov
js
jmp
cmps
mov
out
jbe
call
mov
cmc
mov
in
or
sbb
mov
cmp
in
in
out
pop
sbb
retf
inc
mul
adc
inc
pop
out
cmp
pop
fdivrp
out
sbb
js
adc
(bad)
mov
out
loopne
adc
lods
xchg
inc
jg
in
jge
fucom
xchg
(bad)
sbb
outs
push
out
ret
dec
sbb
clc
stos
sub
in
mov
in
mov
repnz
sar
stc
in
lea
lahf
bound
clc
add
in
mov
outs
inc
xchg
outs
pop
cmps
mov
das
xchg
clc
cmps
or
xor
outs
inc
in
rep
xchg
xor
js
out
in
loope
xchg
cmp
xchg
cmp
and
jecxz
xchg
arpl
xchg
clc
dec
inc
dec
imul
ins
pop
mov
mov
pushf
xchg
js
sbb
(bad)
lods
push
outs
xchg
sub
xchg
mov
cmp
subps
outs
inc
loop
push
outs
inc
push
iret
outs
pop
cwde
mov
pop
outs
inc
and
fld
stc
push
xchg
xchg
mov
mov
js
in
outs
(bad)
aad
mov
out
nop
js
outs
xchg
ins
pop
icebp
cdq
sbb
pop
xchg
cmp
(bad)
jp
ins
(bad)
div
cmp
inc
(bad)
es
(bad)
xor
repnz
pop
push
es
nop
js
loop
ins
inc
dec
shl
stc
mov
js
(bad)
ins
(bad)
sbb
ins
pop
inc
push
fld
int3
and
xchg
cmp
pop
xchg
js
(bad)
ins
(bad)
addr16
mov
shl
xchg
js
enter
add
xlat
gs
cmp
aad
stc
call
xchg
clc
(bad)
sub
pop
add
js
fdiv
pop
outs
in
xchg
mov
fst
xchg
js
out
enter
mov
loope
xchg
mov
clc
xlat
mov
cmps
ins
(bad)
dec
mov
nop
clc
or
add
nop
clc
xchg
ins
inc
push
mov
shr
push
lods
xchg
cmp
data16
cs
nop
clc
and
dec
loopne
outs
xchg
shl
xchg
clc
jg
js
inc
pop
cmps
dec
ins
(bad)
repnz
push
ins
xchg
mov
xchg
cmp
test
clc
add
ins
ins
inc
and
mov
xchg
adc
xchg
mov
js
sub
dec
ins
inc
jmp
cmp
xchg
xchg
mov
cmp
xchg
xchg
outs
xchg
pop
test
sub
push
and
add
xchg
js
sti
fisubr
(bad)
ins
pop
jae
xchg
clc
fisttp
ins
pop
call
dec
xchg
mov
retf
js
data16
xlat
hlt
ins
(bad)
std
retf
ins
pop
cmc
xchg
mov
xchg
js
popa
ins
ins
inc
jo
out
jle
xchg
cmp
xchg
clc
inc
scas
outs
ins
xchg
not
xchg
mov
adc
pop
ins
(bad)
fisubr
ins
inc
adc
sub
aaa
ins
(bad)
loopne
adc
mov
fist
ins
inc
add
ins
xchg
stc
xchg
js
outs
ins
mov
gs
xchg
mov
mov
clc
pop
and
int3
xchg
mov
clc
dec
loope
ins
inc
nop
pop
aas
ins
inc
xor
ret
or
xchg
cmp
pusha
xchg
cmp
cmp
mov
bswap
not
pop
jmp
adc
adc
daa
idiv
aaa
fnstcw
jecxz
dec
fwait
cmps
loop
add
inc
gs
jb
arpl
jae
data16
dec
popa
jae
add
shr
pusha
sti
inc
add
popa
jb
jo
gs
jne
push
add
shr
icebp
test
lea
test
cmp
cmp
jmp
mov
mov
nop
jmp
bound
(bad)
es
(bad)
arpl
movs
mov
xchg
mov
js
mov
ins
inc
cli
jno
outs
pop
fadd
lahf
lds
shr
xchg
mov
inc
out
inc
xchg
mov
ins
inc
dec
jne
ins
(bad)
nop
cmp
mov
pop
xor
nop
js
push
outs
ins
pop
pop
mov
xor
and
mov
push
xchg
cmp
mov
mov
ins
xchg
sbb
cmps
jbe
mov
cmps
daa
mov
cmp
in
rcl
clc
xor
inc
ins
xchg
mov
xchg
mov
clc
jmp
pop
ins
(bad)
mov
ins
ins
xchg
shr
sub
lea
lods
ins
inc
cli
push
sbb
mov
xchg
clc
pop
(bad)
jmp
inc
ds
ins
inc
cdq
xor
(bad)
jg
ins
xchg
es
cmp
xor
clc
frndint
or
sub
xchg
mov
cmp
inc
xchg
js
xchg
ins
xchg
cmps
mov
aam
push
fwait
xchg
outs
pop
mov
clc
xor
clc
cld
dec
push
ins
xchg
aam
mov
js
mov
ins
(bad)
mov
(bad)
ins
inc
xor
nop
js
and
ins
inc
dec
cmps
loopne
pop
jge
xchg
mov
clc
pop
and
jecxz
ins
xchg
xor
add
test
test
(bad)
cmps
adc
pop
sub
push
jmp
xor
imul
adc
sti
stos
or
(bad)
fs
jmp
lds
adc
aaa
pop
xor
inc
pop
adc
test
mov
clc
adc
cld
mov
inc
mov
loop
push
mov
js
jmp
cmp
das
and
(bad)
push
inc
call
adc
nop
jmp
sub
mov
adc
hlt
imul
inc
xor
stos
ss
cmp
sbb
inc
push
mov
lea
into
xchg
cmp
cmps
sbb
and
cmp
ins
mov
inc
xchg
js
mov
or
clc
xor
ins
inc
dec
ret
mov
mov
or
imul
cli
ins
inc
cmp
mov
push
xchg
mov
js
inc
and
nop
out
outs
xchg
or
xchg
mov
clc
pop
cmp
outs
xchg
test
nop
clc
jbe
and
inc
jno
mov
cmp
pop
aad
pop
cmc
scas
adc
inc
ss
push
pop
xchg
add
xchg
clc
xchg
(bad)
pop
ins
inc
out
sbb
(bad)
(bad)
push
ins
pop
add
in
sbb
pop
mov
inc
fimul
aaa
add
push
pop
clc
cmp
call
jmp
stos
sbb
pop
popf
(bad)
call
(bad)
xor
jge
pop
mov
mov
cmp
(bad)
jmp
outs
xchg
clc
ins
mov
push
pop
cmp
outs
xchg
cmp
cmp
shl
adc
inc
sub
in
inc
test
inc
jb
xor
or
js
ja
in
inc
push
jae
out
pop
xchg
ds
adc
mov
js
sbb
div
idiv
cmp
jmp
cmc
cmp
cmp
jmp
inc
test
stc
test
jmp
push
fiadd
test
inc
fistp
std
push
inc
aaa
fsub
aam
pop
nop
js
aam
ins
pop
jle
adc
xchg
cmp
lock
xchg
clc
gs
ins
(bad)
pop
pop
xor
imul
std
outs
pop
popf
(bad)
stos
xchg
js
out
ins
inc
outs
xor
add
ins
pop
jp
fld
mov
push
ins
(bad)
test
outs
xchg
cmp
mov
mov
scas
test
ins
inc
or
outs
xchg
push
pop
add
pop
rep
xchg
sbb
xchg
js
out
ins
xchg
jno
cmp
mov
ins
xchg
ret
clc
out
ins
inc
dec
sbb
ins
inc
dec
shr
repz
cmp
xchg
cmp
test
cs
clc
ins
lods
int
pop
mul
adc
inc
mov
jnp
pop
lods
fistp
pop
adc
xchg
xchg
clc
int
bound
jmp
xchg
xchg
mov
mov
call
push
nop
js
cmp
pop
jecxz
adc
ins
(bad)
fwait
nop
outs
xchg
js
jne
ins
inc
sbb
sbb
ins
pop
mov
lea
sti
xor
xchg
cmp
loope
cmp
xchg
xchg
js
sub
(bad)
xchg
clc
dec
push
add
xchg
sub
jp
clc
leave
mov
ins
inc
jmp
jmp
ins
xchg
loopne
xchg
mov
cmp
or
out
ins
inc
cmp
add
sbb
ins
pop
fs
or
jae
inc
fsincos
mov
cmp
ret
or
jge
js
xor
ins
(bad)
xor
ins
(bad)
sahf
add
ins
pop
xchg
cld
adc
push
xchg
cmp
and
clc
(bad)
or
ins
(bad)
mov
mov
cs
(bad)
dec
(bad)
cli
outs
pop
push
or
dec
ins
inc
test
mov
jecxz
js
mov
push
sub
pop
mov
out
jmp
nop
js
shr
jns
ins
(bad)
jne
outs
xchg
xchg
clc
and
ja
inc
mov
jb
mov
and
mov
test
inc
ins
mov
mov
xchg
mov
xchg
outs
pop
dec
xchg
xlat
xchg
js
jmp
pop
mov
xchg
jle
ins
inc
push
mov
shr
mov
xchg
cmp
xor
ins
(bad)
mov
mov
ror
mov
outs
xchg
cdq
push
out
nop
js
lds
imul
ins
pop
xor
ret
cmps
das
nop
clc
shr
xchg
(bad)
xchg
js
mov
ins
inc
ins
fidivr
ins
inc
movs
mov
ins
pop
push
loope
clc
pusha
cmps
outs
pop
cmp
lods
xchg
mov
cmp
popa
nop
clc
das
pop
cmp
cdq
add
xchg
fidiv
imul
clc
adc
mov
std
mov
xchg
cmp
jno
mov
jb
jne
scas
mov
mov
jno
daa
push
or
es
fcmovb
jno
and
(bad)
clc
jne
dec
mov
and
jg
inc
rcr
xchg
mov
pop
jb
mov
xor
dec
es
imul
jle
loopne
inc
xchg
push
ror
jb
icebp
scas
xchg
mov
xchg
ins
lea
ins
(bad)
es
pop
jno
sti
add
ins
pop
in
pop
xchg
mov
cmp
into
dec
sti
ins
(bad)
(bad)
ss
inc
sti
fisubr
(bad)
or
clc
outs
pop
add
xchg
js
pop
dec
ins
inc
in
push
ins
inc
pop
inc
fstp
jp
out
xchg
jp
call
adc
clc
jecxz
pop
out
xchg
mov
xchg
cmp
xchg
js
mov
ins
xchg
js
mov
xchg
adc
xchg
mov
jno
nop
js
imul
(bad)
mov
push
sbb
outs
xchg
sub
xchg
cmp
cdq
push
sub
ins
pop
jnp
nop
js
das
clc
ins
inc
jb
add
push
pop
out
xchg
mov
test
les
push
mov
loop
cmp
cmp
js
push
ins
inc
cmp
fadd
xchg
cmp
sub
xchg
mov
clc
or
sti
jbe
xchg
js
and
(bad)
hlt
xchg
mov
or
cs
cmp
shr
xchg
mov
repz
xchg
xor
ins
(bad)
mov
sub
xchg
ins
pop
imul
xchg
mov
(bad)
out
ins
(bad)
push
test
outs
xchg
mov
mov
nop
clc
js
(bad)
ins
inc
xchg
ins
inc
push
adc
xchg
pop
repnz
cmp
aas
nop
js
pop
fsubr
jge
ins
inc
add
pop
sub
nop
js
leave
das
ins
mov
je
push
inc
data16
dec
popa
jae
add
(bad)
adc
dec
mov
inc
test
jne
mov
not
mov
pop
not
pop
mov
xchg
movsx
mov
pop
jmp
inc
stc
sub
clc
cmp
jb
mov
bswap
inc
rcl
mov
mov
jmp
shr
imul
test
cmp
jae
mov
stc
clc
add
jmp
adc
adc
sbb
jecxz
jmp
pushf
adc
call
je
cmp
jmp
sub
mov
test
shr
sub
mov
mov
jmp
adc
push
mov
dec
jae
mov
pop
jmp
iret
(bad)
xchg
js
push
sbb
push
into
outs
pop
fiadd
mov
add
bswap
xchg
clc
xchg
stc
inc
ins
inc
ror
(bad)
cld
pop
or
scas
xchg
cmp
dec
daa
(bad)
ins
(bad)
jbe
data16
aad
nop
js
shr
pop
outs
pop
sub
jae
clc
je
sbb
ret
pop
outs
pop
push
lods
stc
xchg
mov
mov
js
sub
ins
(bad)
and
add
xor
adc
or
xchg
clc
inc
data16
xchg
(bad)
cmp
ins
xchg
jecxz
xchg
mov
clc
fisttp
ins
pop
xlat
mov
sub
xchg
cmp
call
stc
sti
mov
inc
cmc
shr
jnp
pop
test
xchg
cmp
popa
outs
xchg
ss
mov
sub
nop
clc
jecxz
jno
inc
pop
sbb
and
les
xchg
clc
cmp
xor
sbb
add
scas
data16
pop
clc
js
inc
jge
xchg
sub
push
clc
cmp
clc
js
pop
jmp
add
sbb
clc
cmp
das
loope
clc
mov
push
addr16
clc
js
inc
or
(bad)
dec
or
js
or
inc
mov
cmp
pop
pop
jnp
clc
mov
clc
(bad)
pop
(bad)
pop
xor
add
scas
lods
or
mov
cmp
and
sti
clc
mov
mov
daa
pop
xchg
js
inc
outs
xchg
cwde
imul
mov
js
pop
jmp
push
xchg
cmp
cmp
xchg
mov
mov
nop
clc
xor
ss
outs
xchg
es
mov
inc
xor
cmp
stos
nop
js
call
ins
inc
add
pusha
outs
xchg
loop
nop
clc
and
sub
cdq
out
pop
adc
push
nop
clc
test
inc
sbb
mov
xor
nop
js
dec
sbb
push
imul
inc
(bad)
ins
pop
sbb
stc
nop
js
mov
jp
pop
push
xor
xchg
cmp
pop
nop
js
in
ins
inc
inc
jl
ins
pop
aam
cmp
clc
call
xchg
sbb
ins
(bad)
xchg
jp
ins
pop
div
xchg
cmp
hlt
xchg
xchg
mov
cmp
mov
loop
ins
pop
pop
pop
cmps
stc
sbb
xchg
clc
(bad)
ins
(bad)
cwde
sbb
ins
xchg
hlt
mov
ins
(bad)
push
sub
xchg
cmp
mov
mov
push
jo
cmp
adc
mov
xchg
xchg
cmp
mov
ins
(bad)
aad
mov
(bad)
jo
cwde
add
outs
pop
iret
int
cmp
sahf
xchg
cmp
push
int3
popa
ins
inc
scas
pop
add
(bad)
lahf
xchg
out
movs
fst
inc
rcl
adc
cmp
aad
nop
js
xor
sub
outs
pop
xor
xchg
mov
js
adc
jo
ins
inc
not
xchg
outs
xchg
shl
nop
clc
dec
fst
ins
pop
dec
call
mov
neg
ins
inc
mov
sbb
ins
xchg
push
arpl
ins
inc
inc
gs
pop
adc
fadd
retf
(bad)
ins
(bad)
push
(bad)
adc
sub
fs
ds
dec
mov
cdq
test
lods
es
cmp
and
xchg
cmp
pop
and
jb
xchg
xor
call
pop
xchg
mov
cmp
clc
mov
out
mov
test
aad
pop
js
aas
ja
js
scas
jnp
js
sub
xchg
push
push
cmps
xchg
clc
pusha
mov
(bad)
mov
gs
js
sub
ror
xchg
not
fdivr
cmps
pop
cmp
xchg
lods
cs
cmc
push
xchg
js
sbb
clc
es
xchg
mov
test
push
daa
js
cmp
jnp
jecxz
xchg
pop
pop
retf
scas
rol
xchg
popa
repz
clc
push
(bad)
inc
jns
xchg
int
test
jmp
push
xchg
retf
xchg
(bad)
test
mov
clc
sahf
xor
xchg
or
xchg
cmp
mov
push
xchg
scas
mov
pop
js
jne
xor
cmc
sub
jne
mov
and
bts
or
mov
cmp
jmp
jae
mov
sar
shrd
cmp
mov
test
sub
shr
test
cmp
lea
add
mov
cmp
mov
mov
lea
test
cmc
cmp
mov
jmp
or
adc
aas
loope
push
cmp
js
mov
jno
jb
mov
jmp
mov
nop
clc
rcl
ins
mov
jmp
xor
mov
push
mov
js
inc
push
ins
inc
shr
pop
ins
pop
jge
loope
clc
push
cmp
inc
adc
cmp
das
ins
pop
(bad)
icebp
in
xchg
clc
jne
data16
xor
xchg
clc
add
ins
inc
scas
inc
push
ins
pop
mov
nop
js
dec
loop
push
add
nop
clc
push
lods
sahf
ins
inc
enter
inc
dec
dec
daa
ins
xchg
stos
xchg
cmp
fsub
js
adc
ins
ins
inc
fstp
pop
ins
pop
inc
adc
cmp
rcl
(bad)
lock
outs
pop
ror
xchg
jle
inc
xor
ja
pop
adc
cmc
inc
ins
inc
jmp
hlt
pop
or
ds
pusha
xchg
cmp
fld
int
sbb
je
stc
out
cld
mov
outs
stc
add
sbb
sbb
lea
cmp
sbb
sub
sbb
not
pushf
sbb
mov
xchg
push
xor
js
aaa
in
loopne
in
mov
or
sbb
cmp
dec
xor
in
add
in
pop
sbb
sbb
scas
sti
in
xchg
sub
pop
out
xlat
pop
sbb
mov
in
ret
int
out
xchg
arpl
js
xor
in
aam
adc
xchg
in
or
sbb
test
add
xchg
add
sbb
mov
cmp
inc
clc
xchg
(bad)
stos
push
ins
xchg
js
xor
sbb
nop
js
out
ins
(bad)
and
std
outs
pop
popa
ds
mov
clc
test
ins
(bad)
iret
and
ins
pop
mov
adc
ins
xchg
cmp
xchg
mov
cmp
adc
js
sub
ins
inc
sub
test
mov
mov
clc
push
ja
outs
xchg
(bad)
in
nop
clc
and
sbb
inc
dec
dec
mov
xchg
ds
cmp
(bad)
nop
js
xor
inc
adc
imul
or
ins
(bad)
jns
mov
mov
xor
xchg
mov
cmp
push
nop
clc
ret
cdq
jle
xchg
adc
xchg
clc
adc
ins
pop
cwde
mov
push
ficom
stc
mov
xchg
clc
cmp
addr16
cmp
nop
sub
mov
and
outs
xchg
jp
xchg
mov
pop
xor
xor
clc
jae
retf
inc
fcmovbe
outs
xchg
jno
and
out
rol
xchg
clc
or
and
add
mov
mov
sbb
(bad)
ins
(bad)
push
stos
ins
xchg
dec
mov
clc
jmp
or
xor
xor
cmp
xor
ins
(bad)
jnp
clc
ins
xchg
stc
movs
clc
nop
js
aas
cdq
pop
sub
ins
mov
sub
pop
xchg
pop
aaa
xchg
js
jge
ins
xchg
or
xchg
mov
pop
mov
cmps
ins
pop
add
cdq
nop
js
movs
out
inc
xchg
fcom
mov
mov
js
push
fs
(bad)
outs
xchg
test
cmps
xchg
cmp
mov
test
mov
cmp
cmp
xchg
clc
xchg
adc
ins
(bad)
mov
mov
ins
mov
das
mov
pop
ins
inc
xchg
ins
mov
push
(bad)
and
cmp
xchg
mov
aaa
adc
fldcw
es
xchg
mov
mov
js
jecxz
outs
inc
stos
test
jo
mov
add
rcl
ins
push
cmp
xchg
clc
mov
xchg
outs
(bad)
or
and
add
fwait
outs
inc
or
call
lods
aaa
sub
je
xchg
mov
clc
mov
outs
inc
mov
and
test
xchg
mov
js
sti
outs
inc
mov
ficomp
xchg
js
inc
int3
outs
pop
clc
push
push
xchg
mov
cmp
pop
aam
js
ret
inc
retf
outs
inc
push
iret
out
outs
pop
nop
mov
xchg
js
sbb
push
ins
pop
cmc
pop
sbb
xchg
mov
js
mov
(bad)
push
mov
dec
jae
cmp
jmp
push
mov
and
bt
sub
push
rol
push
cmp
btc
dec
mov
sub
and
rcr
mov
rcl
shld
cwd
mov
sbb
mov
mov
xor
mov
test
cmp
push
clc
mov
cmp
mov
cmc
cmp
jmp
push
call
jne
pop
dec
cmovb
pop
xor
pop
jmp
push
(bad)
adc
and
jno
pop
push
mov
clc
cmp
cmp
push
sub
jmp
push
(bad)
adc
and
dec
pop
sub
sub
pop
sbb
inc
cli
add
add
jmp
sbb
inc
cs
and
lods
movs
or
ins
(bad)
adc
mov
fild
xchg
cmp
in
mov
cmp
xchg
int
ins
xchg
hlt
pushf
xchg
mov
clc
fmul
ins
pop
enter
cmp
push
xchg
mov
dec
mov
ins
(bad)
cs
push
ins
(bad)
cmp
mov
stc
sub
nop
js
popf
shr
retf
outs
xchg
xchg
mov
mov
daa
xor
js
mov
xchg
mov
frndint
gs
cmp
aaa
pop
xchg
js
adc
xchg
movs
sbb
and
(bad)
repz
ins
xchg
push
jp
clc
jecxz
ins
xchg
mov
enter
popa
out
ins
inc
out
and
add
cwde
ins
(bad)
jb
(bad)
ins
xchg
cdq
push
loopne
ins
inc
call
xchg
cmp
sub
ins
inc
int3
push
ins
(bad)
enter
inc
pusha
xchg
cdq
push
std
mov
pop
inc
movs
xchg
cmp
mov
js
push
xchg
mov
nop
js
mov
ins
(bad)
(bad)
jmp
jg
xchg
ins
pop
movs
sub
cmp
jl
cmp
inc
push
xchg
clc
stos
cmc
outs
dec
ins
xchg
xor
js
movs
ins
(bad)
test
fwait
ins
(bad)
mov
pop
xchg
cmp
ins
ins
xchg
mov
xchg
cmp
mov
xchg
clc
cmp
inc
ins
inc
sbb
push
ins
(bad)
dec
sub
inc
ins
inc
and
adc
xor
imul
inc
jae
sub
in
xchg
cmp
jmp
clc
xor
call
xchg
add
jo
ins
xchg
add
xchg
js
or
add
fst
ins
xchg
mov
xchg
mov
lea
clc
adc
ins
outs
xchg
inc
xchg
cmp
inc
xchg
clc
imul
mov
outs
pop
cmp
dec
hlt
fst
les
mov
adc
xchg
mov
js
(bad)
ins
inc
and
push
ins
pop
inc
jp
nop
js
and
mov
ins
inc
or
add
sub
nop
js
repnz
call
jmp
ins
pop
mov
jecxz
js
xor
pusha
outs
pop
aad
sub
xchg
mov
adc
adc
ins
inc
sub
je
outs
pop
aad
mov
pop
ins
inc
and
push
ins
pop
scas
cmp
xchg
clc
mov
bound
dec
es
(bad)
out
sub
pop
aaa
dec
cmps
ins
inc
add
ins
xchg
inc
mov
inc
aaa
ins
inc
arpl
ins
inc
fwait
pop
jmp
pop
sbb
enter
inc
mov
dec
stos
scas
xchg
mov
mov
mov
and
mov
loope
outs
pop
dec
lea
add
imul
clc
clc
aaa
xor
(bad)
xchg
or
pop
(bad)
push
pop
pop
(bad)
shr
sbb
pop
jge
mov
sub
inc
add
sbb
addr16
pop
jbe
(bad)
ja
aaa
clc
js
or
pop
xchg
adc
clc
js
clc
rol
ss
push
pop
pop
scas
add
(bad)
sbb
jmp
push
ins
inc
out
loop
inc
xor
shr
mov
nop
js
ds
ins
inc
sub
outs
outs
pop
fdiv
xchg
mov
mov
mov
in
shr
test
xchg
js
mov
and
sbb
xchg
clc
movs
int
ins
inc
in
or
pop
add
or
ins
xchg
mov
js
pop
and
adc
cmp
sub
nop
js
push
add
jb
ins
inc
mov
(bad)
and
nop
js
test
cdq
popa
outs
pop
addr16
sub
xchg
mov
mov
shr
call
ja
inc
bound
ins
pop
fimul
clc
jmp
or
pusha
add
inc
mov
ins
xchg
mov
cmp
mov
hlt
ins
xchg
xchg
cmp
cmp
js
call
pop
nop
dec
sub
xchg
cmp
stos
mov
mov
ins
inc
dec
pop
mov
ret
push
jae
outs
pop
xchg
ds
mov
mov
js
ror
inc
jae
mov
jmp
push
(bad)
adc
sub
jl
aaa
fadd
enter
call
pop
mov
pop
jmp
jae
mov
jmp
jne
mov
cmp
jmp
sbb
dec
(bad)
fidivr
shr
add
push
jne
jb
push
gs
imul
imul
adc
bsf
mov
shr
stc
cmp
sub
adc
mov
jmp
inc
clc
mov
rol
mov
stc
shr
cmp
imul
cmp
jmp
jbe
nop
js
push
ins
inc
jp
les
pushf
into
ins
pop
cmp
and
mov
mov
outs
nop
clc
fld
mov
xchg
mov
clc
stos
adc
ins
(bad)
das
push
sbb
xchg
fld
loope
ins
xchg
xor
ins
inc
ja
outs
pop
push
push
movs
nop
clc
mov
sahf
ins
inc
movs
push
push
xchg
mov
js
mov
outs
pop
lock
xchg
mov
mov
pushf
pop
imul
xchg
jb
js
jmp
xor
outs
xchg
xchg
clc
and
ins
inc
add
movs
or
sbb
pop
xchg
clc
jnp
ret
mov
mov
nop
clc
repz
pop
and
xchg
cmp
sahf
pop
add
add
cmp
ins
inc
xor
ins
pop
cmp
xchg
mov
js
sub
lds
ins
xchg
mov
stos
nop
js
aad
pop
pop
xchg
dec
xchg
mov
pop
dec
(bad)
ins
inc
jbe
scas
ins
(bad)
pop
imul
or
popa
nop
js
mov
inc
mov
cs
cmp
mov
xchg
js
adc
ins
pop
mov
(bad)
imul
push
clc
mov
push
cmp
pop
sbb
das
out
cmp
add
fwait
outs
pop
ret
xchg
xchg
clc
test
out
xor
js
and
fwait
sbb
repz
js
jge
ins
(bad)
gs
ins
(bad)
and
fild
mov
lahf
div
inc
rcr
push
jle
inc
cwde
sbb
pop
fidivr
popf
xchg
clc
adc
mov
sti
xchg
mov
js
lods
mov
push
inc
outs
xchg
cmps
test
mov
clc
leave
in
inc
outs
xchg
inc
cmp
mov
clc
mov
ins
(bad)
sbb
adc
sub
push
pop
cmp
and
jnp
repnz
cmp
test
sub
mov
cmc
shr
sub
mov
cmovl
xchg
inc
lea
xadd
shl
btc
movzx
test
jmp
aas
call
sbb
inc
xor
(bad)
pop
shr
aam
test
ins
inc
sbb
ins
ins
pop
fwait
or
xchg
clc
xchg
pop
ins
inc
jmp
sbb
xor
ins
pop
mov
dec
sub
out
mov
lahf
sbb
out
in
adc
dec
in
xbegin
fcom
xchg
inc
in
inc
push
test
inc
add
pop
and
cmps
adc
fldlg2
inc
mov
gs
outs
adc
mov
js
js
in
(bad)
dec
add
(bad)
adc
and
jae
pop
popa
repz
clc
dec
sar
pop
pop
pop
lods
xchg
js
or
call
cld
xchg
clc
xor
ins
inc
push
xor
mov
mov
add
mov
mov
cmp
sbb
mov
popw
outs
dec
out
stc
add
call
sahf
outs
push
push
adc
test
xchg
xchg
mov
xchg
call
gs
mov
mov
cdq
clc
jle
gs
cli
dec
mov
call
xor
call
movs
xchg
gs
ins
in
gs
outs
retf
mov
or
jecxz
outs
stc
in
sub
mov
(bad)
mov
jmp
xor
int
gs
retf
adc
push
arpl
clc
cmp
gs
(bad)
movs
gs
aad
xchg
xchg
mov
xchg
ja
mov
mov
sti
popa
outs
cdq
js
jl
inc
mov
xchg
call
in
call
pop
loop
js
pop
pop
gs
fimul
call
and
push
call
call
std
bound
mov
jbe
xchg
repz
cdq
js
rcl
inc
int3
out
cmp
or
xor
gs
xor
mov
pop
jmp
sti
call
lods
aaa
je
cmp
test
dec
loope
mov
btc
mov
or
sub
bsf
mov
sub
cmp
cmp
jmp
jmp
ins
(bad)
scas
lods
sbb
mov
ins
(bad)
pop
rcl
outs
pop
push
or
xchg
js
and
xchg
imul
rcl
ins
inc
dec
rcr
ins
xchg
outs
sbb
cmp
ins
(bad)
or
outs
xchg
imul
fist
add
outs
xchg
rcl
nop
clc
ins
or
daa
outs
pop
xlat
xchg
cmp
stos
nop
js
lds
inc
in
xchg
cmpxchg
xchg
mov
mov
xchg
(bad)
mov
mov
js
adc
and
(bad)
int
cdq
ins
pop
dec
outs
cmps
nop
js
fcomp
ins
inc
jmp
outs
xchg
mov
mov
js
and
(bad)
adc
xchg
outs
xchg
neg
nop
js
pop
mov
pop
ret
stos
aas
xchg
mov
cmp
call
icebp
repz
ins
inc
jmp
xor
pop
xchg
ins
inc
sti
int
ins
inc
or
scas
outs
xchg
mov
cmp
xchg
push
push
cli
mov
ins
(bad)
adc
xchg
ins
pop
pop
out
cmps
stc
mov
(bad)
popf
and
cld
outs
xchg
cmp
xchg
cmp
imul
(bad)
push
xchg
mov
jo
jl
or
jl
jo
mov
dec
hlt
jecxz
in
js
cdq
jle
inc
rcr
data16
(bad)
mov
ins
inc
sti
adc
ret
jno
cmp
push
inc
test
icebp
pop
jg
sub
jbe
sub
fnstcw
cmp
jl
or
dec
xor
xor
jl
jg
xlat
mov
fld
jecxz
call
inc
xor
pop
ins
clc
call
nop
clc
jmp
enter
inc
setnp
inc
mov
add
inc
ja
xchg
js
test
popf
js
xchg
outs
dec
jnp
stos
leave
sti
xchg
lahf
cmc
xchg
cwde
mov
sti
mov
jb
mov
out
js
dec
mov
js
sbb
js
sti
sub
js
out
mov
js
mov
sub
test
xchg
mov
test
cli
push
xchg
aas
xchg
jns
test
mov
clc
sbb
repz
dec
xchg
cmp
ror
jnp
sub
call
add
inc
loop
xor
pop
push
ret
add
inc
gs
outs
fs
gs
popa
jae
dec
popa
ins
gs
add
cmp
ins
(bad)
pop
mov
ins
pop
adc
sbb
xchg
mov
cmp
pop
sbb
ins
xchg
pop
aas
cmps
xchg
clc
mov
cmps
push
mov
popa
mov
mov
outs
pop
dec
jp
call
pop
xchg
cmp
xchg
js
and
push
mov
xor
ins
inc
sti
call
sti
pop
dec
xchg
cmp
nop
js
es
pop
(bad)
xchg
mov
mov
hlt
fcom
(bad)
cmp
outs
xchg
inc
xchg
cmp
fstp
js
inc
ins
inc
sahf
adc
ficomp
mov
mov
clc
mov
lods
in
inc
cmc
repz
xchg
xchg
xchg
cmp
lods
movs
mov
push
ins
inc
push
xchg
bound
adc
xchg
cmp
mov
inc
mov
cwde
push
xchg
clc
push
jle
ins
inc
outs
out
ins
(bad)
ja
ret
ins
pop
or
push
lods
xchg
mov
cmp
pusha
bound
ins
pop
xchg
leave
scas
xchg
mov
push
mov
pop
lds
int
(bad)
xchg
mov
cmp
fdivr
xchg
mov
sar
ins
(bad)
movs
inc
ins
pop
sub
xchg
mov
(bad)
scas
inc
ins
inc
mov
and
xlat
es
rcl
clc
das
xlat
aad
mov
gs
fst
adc
xchg
imul
clc
in
jge
mov
ss
loop
js
cmp
xchg
mov
gs
xor
call
xlat
jnp
cdq
clc
adc
xchg
gs
pop
fstp
xlat
push
mov
js
pop
outs
stc
sbb
and
gs
push
xchg
shl
out
mov
call
ror
cmp
jmp
fidivr
call
jbe
cdq
clc
call
gs
(bad)
sbb
call
jg
call
jne
int3
gs
xchg
frstor
lahf
or
movs
gs
stc
iret
out
sti
dec
jmp
js
pop
gs
cmp
fs
sub
xchg
rcr
call
xlat
aam
pop
inc
sbb
call
jp
leave
call
data16
call
push
add
xchg
pop
ficomp
cdq
js
imul
inc
imul
inc
scas
outs
sub
and
fadd
mov
popw
ins
(bad)
ficomp
call
mov
cmp
test
jmp
sub
js
sub
into
ins
(bad)
cmp
les
out
xchg
cmp
stos
xchg
mov
cmp
mov
xor
in
xchg
mov
clc
lock
ins
inc
pop
in
adc
sbb
sti
clc
mov
pop
pop
inc
shr
pop
(bad)
xchg
add
adc
cmp
jmp
ins
inc
jmp
ins
es
ss
inc
mov
jmp
dec
call
out
(bad)
xchg
mov
jle
cld
ins
inc
ins
sti
ins
pop
adc
mov
clc
test
inc
xchg
mov
jg
aad
js
sbb
lods
jmp
xchg
mov
clc
cld
leave
mov
out
mov
mov
js
arpl
ins
(bad)
jle
push
outs
xchg
stc
xchg
mov
mov
clc
adc
sbb
ret
xchg
mov
clc
jle
ja
(bad)
std
cmp
ins
inc
arpl
ins
pop
fisttp
xchg
clc
jmp
mov
bswap
ins
(bad)
mov
lock
xchg
cmp
fild
mov
cmp
lea
clc
xor
outs
pop
cwde
push
rcl
js
stos
es
sbb
xchg
mov
out
imul
jg
xchg
clc
sbb
ins
inc
movntps
inc
rcl
pop
fst
call
ins
inc
rcr
mov
xchg
cmp
push
popf
xchg
mov
mov
cmp
ja
nop
js
dec
ins
(bad)
pushf
imul
push
xchg
ins
inc
mov
outs
pop
dec
dec
test
ins
inc
dec
mov
outs
pop
dec
xor
xchg
clc
test
cdq
push
mov
ins
pop
rcl
mov
clc
xchg
push
imul
cmp
mov
(bad)
clc
mov
pop
popa
jnp
inc
movs
xchg
sar
js
(bad)
xlat
push
inc
xchg
jno
mov
jnp
adc
sub
jnp
inc
fadd
xchg
cs
mov
xor
js
lods
and
js
mov
rcl
xor
mov
and
(bad)
aam
js
shr
jnp
jns
cmp
inc
xchg
pop
js
inc
wbinvd
test
js
popa
fwait
lds
data16
and
xchg
pop
inc
jnp
ror
cmps
inc
test
inc
pushf
lods
js
sbb
or
cmp
je
cmp
dec
add
mov
mov
pop
stc
test
xor
arpl
rol
jnp
fist
es
cmc
xor
add
push
mov
push
pop
and
mov
stc
ins
jb
mul
call
in
fcom
shl
hlt
push
clc
and
fld
scas
lahf
aaa
pop
and
add
ss
adc
lds
mov
mov
mov
int3
mov
enter
mov
mov
adc
fld
or
gs
mov
fsub
ret
lods
cwde
xlat
mov
jmp
cmp
pop
test
push
call
cli
pop
cmp
inc
xchg
daa
add
movs
push
sbb
inc
into
jbe
stos
mov
sub
jnp
and
in
adc
push
dec
lods
mov
mov
cld
in
dec
sub
xchg
or
jl
sub
cli
arpl
ret
out
sub
loopne
jmp
aaa
push
cmc
sbb
inc
std
jno
sub
clc
(bad)
jno
outs
sbb
js
xor
in
dec
imul
sub
in
pop
ds
shl
jnp
loop
xlat
cwde
jl
ret
mov
ror
jae
xchg
add
pusha
cmp
mov
jmp
sub
jno
pop
scas
push
loopne
cmp
repz
mov
aaa
or
adc
ins
gs
popf
or
cld
push
data16
lock
mov
jmp
push
loope
(bad)
push
gs
inc
push
pmaxsw
or
xchg
sbb
stos
sbb
movs
and
mov
loop
neg
jecxz
jae
mov
or
daa
mov
cmp
jmp
jp
or
add
retf
fisttp
imul
fwait
imul
xchg
sub
mov
lea
cmp
push
stos
cwde
(bad)
shl
iret
inc
push
daa
sbb
ins
or
dec
push
cmp
cs
pop
shr
dec
pop
xchg
repz
jb
fucomp
mov
cmp
sub
mov
mov
adc
(bad)
xchg
retf
jno
test
clc
lods
or
cs
mov
cmp
adc
xchg
dec
mov
data16
inc
dec
add
in
push
or
push
and
(bad)
pop
adc
jnp
neg
add
pop
push
sub
or
fbstp
sub
fsubr
sbb
add
lods
mov
xor
aam
mov
int
pop
adc
mov
imul
jmp
sti
and
outs
jg
fs
add
sub
call
outs
or
adc
pop
mov
pop
lock
xchg
je
hlt
cmp
mov
sub
inc
inc
sub
sub
loopne
ins
and
jge
je
push
mov
dec
and
lea
cmp
mov
addr16
retf
lods
retf
(bad)
ins
aaa
mov
mov
loope
sbb
jmp
fwait
in
aas
lahf
leave
and
sub
gs
and
cmp
pop
jne
xor
and
(bad)
dec
aas
retf
das
inc
cmp
adc
cmp
mov
outs
js
add
addr16
(bad)
push
inc
sahf
mov
sub
inc
xor
pop
push
xchg
dec
pop
pop
cmp
jb
sbb
push
or
cld
mov
test
mov
add
gs
out
fld
push
mov
mov
and
adc
mov
cmp
mov
popf
and
in
movs
pop
adc
jne
xchg
lds
push
stos
xor
lods
loope
sbb
jp
jnp
(bad)
pop
xor
sar
xchg
mov
mov
aaa
leave
test
pop
sbb
ret
adc
and
into
pusha
jle
inc
add
pop
dec
inc
cmp
cmp
cmp
adc
scas
pusha
push
mov
cmp
ins
mov
cs
inc
mov
shl
dec
pop
cli
mov
inc
ficomp
xchg
xor
and
stc
nop
push
and
cmps
scas
ds
(bad)
outs
mov
test
pop
sbb
popa
mov
mov
sar
inc
aaa
push
dec
cs
sbb
push
or
(bad)
aam
std
sbb
add
add
ins
movs
pop
jge
mov
inc
cdq
jno
xor
xor
movs
pop
cmp
into
cmps
xchg
adc
push
and
cli
xor
push
cmps
jmp
xlat
jmp
fs
std
loope
out
retf
sub
pop
sbb
mov
dec
push
aad
pop
push
hlt
gs
sahf
pushf
cmp
and
jp
push
jmp
xchg
(bad)
sbb
js
imul
das
push
adc
arpl
fisub
fs
inc
cli
mov
in
mov
test
jl
repz
cld
int3
adc
fs
add
ss
inc
aaa
aas
ret
pusha
into
mov
push
idiv
push
sbb
dec
lea
and
idiv
fcmovnb
xchg
xchg
neg
(bad)
gs
je
mov
inc
es
in
mov
test
jmp
dec
test
dec
pop
sub
jb
xchg
mov
push
mov
sbb
ret
add
push
into
cvtps2pd
add
arpl
clc
adc
in
add
mov
sbb
mov
and
dec
and
pushf
adc
pop
xchg
mov
movups
inc
jb
xchg
and
inc
stos
xor
in
je
inc
xlat
(bad)
pop
test
cwde
push
mov
jnp
dec
in
div
xchg
into
mov
fs
sbb
and
div
ss
rol
mov
int3
or
jecxz
dec
aaa
cdq
imul
daa
cli
mov
test
jmp
mov
inc
mov
xchg
pop
mov
mov
ds
loopne
pop
stos
into
inc
jle
fsubr
jne
add
enter
fmul
fwait
enter
int3
mov
jo
imul
mov
js
dec
out
mov
sub
xchg
mov
stc
mov
shl
enter
or
mov
mov
pop
dec
fs
mov
or
and
add
mov
xchg
es
push
(bad)
push
sub
outs
stc
in
call
hlt
mov
inc
push
fdivr
aaa
xor
pop
xchg
jne
ss
mov
mov
or
scas
and
dec
sub
(bad)
dec
push
popa
jmp
push
cmp
inc
jns
idiv
fs
adc
xchg
xchg
out
shl
adc
push
push
ret
cmps
cs
(bad)
call
sbb
das
pop
mov
daa
dec
in
ja
sub
icebp
dec
sahf
sti
push
lea
pusha
push
add
jnp
xchg
pop
ret
(bad)
pop
xchg
in
hlt
xchg
jecxz
inc
mov
enter
xor
sbb
ins
(bad)
jp
arpl
jg
call
call
iret
xchg
add
call
dec
inc
lahf
outs
out
les
and
push
mov
fldz
mov
addr16
test
add
push
clc
mov
ins
in
xor
xor
pop
sub
mov
adc
xchg
cld
(bad)
in
add
mov
cdq
push
and
pop
dec
sbb
loop
push
shr
and
pop
cli
sub
(bad)
push
int3
cmp
out
mov
clc
sbb
xchg
sub
fiadd
push
and
scas
inc
movs
cld
push
call
xor
in
jb
iret
pop
sub
ins
mov
ins
imul
idiv
test
(bad)
push
cmp
repnz
lea
mov
enter
cmp
cs
not
sub
icebp
add
pop
jmp
sub
and
imul
mov
fcmove
pop
sbb
fnstenv
dec
ss
dec
cmc
cmp
sbb
add
mov
mov
cs
jmp
cmps
mov
outs
sbb
inc
(bad)
loopne
test
add
popa
adc
jo
icebp
xlat
mov
nop
popf
mov
adc
add
dec
xor
jge
movs
xor
add
neg
fbld
pop
or
mov
ss
nop
cdq
jnp
cmp
retf
jg
(bad)
and
ds
push
add
pusha
cs
xor
retf
or
and
mov
arpl
aam
stc
dec
jns
cdq
jo
sub
daa
ins
sbb
adc
sti
mov
dec
mov
pop
(bad)
lods
inc
pop
cs
shr
jne
push
adc
out
jo
(bad)
js
fimul
call
add
push
stos
(bad)
(bad)
xchg
cmp
cli
mov
mov
xchg
mov
inc
xchg
xor
jge
jle
push
push
pop
fnsave
in
jecxz
movs
fst
sbb
mov
or
mov
mov
pop
shl
or
xchg
daa
dec
mov
and
loop
lods
outs
pop
jnp
push
jp
ins
adc
cmp
sti
push
cmp
mov
std
inc
push
adc
inc
call
mov
ins
rcr
std
call
sar
mov
ins
loope
pop
push
push
mov
fwait
xor
(bad)
xchg
adc
push
movs
es
or
xor
push
xchg
or
in
jmp
inc
jg
jp
mov
inc
pushf
pop
xchg
cmps
mov
dec
mov
jb
add
lock
jecxz
(bad)
push
mov
stos
ret
shl
xchg
jbe
cmc
push
dec
in
sub
test
mov
push
inc
mov
pop
lahf
xor
xchg
adc
mov
test
mov
iret
mov
out
outs
jo
add
push
in
mov
stos
adc
xor
pop
push
popf
and
or
jmp
add
sbb
leave
pop
mov
addr16
dec
pop
xchg
jb
push
rol
js
sub
stos
push
gs
push
cdq
(bad)
xor
popf
iret
cwde
mov
(bad)
fstp
mov
retf
cmps
ret
mov
cli
nop
stc
mov
push
dec
pop
test
push
mov
dec
(bad)
mov
out
and
test
jg
or
inc
and
cmp
sub
or
inc
lds
cmp
imul
xchg
inc
pop
push
push
mov
sbb
inc
leave
mov
mul
int3
pushf
pop
fistp
es
cmp
test
mov
es
imul
xchg
fsubr
in
xchg
and
xchg
jo
sub
loop
loope
mov
dec
xchg
cmp
les
or
popa
out
pop
or
pop
or
mov
jbe
inc
aad
mov
xor
test
sub
push
mov
addr16
ror
test
inc
mov
test
inc
mov
jl
jmp
pop
add
add
mov
sbb
mov
enter
mov
fnstsw
inc
mov
mov
push
sub
inc
push
stos
pop
xchg
retf
call
addr16
test
push
cmc
sahf
pop
jb
pop
mov
repnz
pushf
scas
xor
paddsw
jle
test
sub
in
or
int
add
in
xor
xchg
int
mov
int3
xchg
and
fwait
xchg
lock
xchg
adc
mov
sbb
jp
jns
lds
mov
ja
and
mov
inc
retf
push
xor
push
fild
mul
ret
fcomip
adc
mov
repnz
xchg
xor
imul
adc
xchg
dec
imul
(bad)
xchg
inc
and
or
inc
pop
jl
cmp
aas
adc
add
adc
mov
pop
(bad)
add
retf
(bad)
call
retf
jg
cwde
or
push
or
lods
ja
retf
fs
mov
sub
mov
sub
cmp
add
(bad)
xor
xchg
sar
scas
hlt
xchg
pop
es
hlt
jb
pop
rcr
stc
ror
nop
fcomp
xor
repz
dec
aam
aam
sub
ins
sbb
in
cmp
int3
and
das
data16
pop
fdivr
fidiv
pop
lahf
test
cmp
xchg
inc
mov
push
fld
pop
add
push
dec
cmc
cmps
shl
mov
in
add
cmc
xor
aas
outs
sbb
sbb
fldenv
dec
dec
in
inc
sbb
sbb
or
sub
test
out
ret
retf
imul
and
pop
adc
mov
movs
cmp
pop
xchg
test
pop
and
mov
pop
xchg
mov
iret
mov
jnp
movs
pop
ror
aam
lds
push
cmp
ret
xchg
sbb
cwde
ja
shl
fwait
push
je
out
xchg
xor
xor
movs
mov
xchg
lea
shl
ss
shr
add
addr16
repnz
aaa
loopne
aas
aad
mov
sbb
rcl
daa
adc
adc
(bad)
or
mov
sbb
in
and
ror
imul
sbb
nop
cmp
mov
jecxz
movs
push
je
arpl
pop
xchg
inc
je
inc
ret
push
fadd
pop
pusha
inc
push
inc
neg
fst
call
call
pop
add
(bad)
stc
and
and
xor
mov
sbb
out
fist
outs
stos
mov
arpl
xor
pop
cs
in
jbe
and
jno
not
scas
inc
sub
add
xchg
sbb
loopne
push
daa
es
sbb
call
add
mov
xchg
or
adc
in
or
mov
out
xchg
fimul
cmp
mov
push
(bad)
sbb
add
and
mov
mov
push
std
aaa
jns
cwde
dec
jmp
(bad)
or
fdivr
sub
nop
and
push
div
mov
jne
cmps
xchg
in
arpl
or
dec
cmp
cmp
cwde
sbb
data16
inc
jp
cmps
icebp
retf
sahf
popf
pop
out
sahf
jb
add
cli
es
jb
mov
pop
dec
data16
ds
jg
add
pop
add
mov
push
in
retf
enter
out
and
ja
mov
fidiv
jmp
arpl
adc
into
jbe
xor
lods
push
adc
ret
(bad)
adc
push
pushf
push
xchg
shr
fnstsw
out
popf
pop
aad
(bad)
mov
faddp
pop
inc
and
ret
adc
imul
fbstp
loop
int3
ja
stos
or
addr16
xor
inc
push
sbb
mov
daa
xchg
dec
scas
ins
retf
mov
xor
(bad)
mov
adc
js
and
push
mov
popf
add
or
fdivr
sub
ret
mov
leave
aaa
cmp
add
mov
repz
dec
iret
adc
pushf
push
and
rcl
add
rcr
mov
or
or
stos
pop
jp
and
pop
out
sbb
inc
shl
mov
mov
mov
push
jo
(bad)
mov
cmp
add
inc
(bad)
sbb
mov
inc
cmp
(bad)
and
les
loopne
sar
lods
repnz
leave
sbb
test
ins
movs
push
das
int3
(bad)
cld
arpl
mov
imul
in
pop
mov
scas
add
cdq
lods
popf
out
outs
push
xor
rol
les
iret
dec
(bad)
imul
retf
ja
out
sub
adc
pop
xor
adc
add
(bad)
sahf
jmp
adc
mov
push
in
cmp
out
fdivr
ror
adc
sbb
jne
loopne
jmp
lods
jns
or
cld
cmc
sbb
mov
fisttp
mov
movs
int
mov
add
add
pop
les
cmps
out
push
or
lea
fdivr
mov
(bad)
(bad)
sbb
sub
xor
push
popa
(bad)
ret
sti
xor
xchg
stc
rcl
push
mov
inc
inc
mov
or
xchg
add
jo
or
das
dec
or
rcr
mov
fisubr
pushf
push
fstp
cwde
(bad)
sbb
push
neg
imul
mov
(bad)
aaa
and
popf
shr
xchg
push
or
stc
jg
je
fs
push
mov
mov
mov
dec
xchg
inc
xor
aad
mov
mov
shl
mov
icebp
or
retf
call
lock
xchg
inc
inc
push
push
sub
push
cmp
mov
xchg
sbb
mov
mov
xchg
lock
jmp
push
push
xchg
sub
xchg
call
inc
movs
dec
ins
jl
cmp
push
sub
into
pushf
call
mov
jbe
loope
int
dec
hlt
cmps
cld
ror
lock
mov
shl
mov
outs
ss
test
mov
add
inc
call
mov
add
out
dec
and
sub
int
xchg
in
les
movs
rcl
jp
out
mov
adc
addr16
sbb
xlat
mov
test
imul
push
jnp
xor
icebp
bound
dec
add
adc
and
pop
and
arpl
(bad)
dec
repnz
aaa
sub
push
aam
mov
fwait
out
ins
pushf
xor
push
xor
cmps
jmp
cmc
lea
jecxz
dec
pop
call
push
pop
neg
scas
jge
mov
dec
pop
lahf
scas
shl
inc
pop
mov
mov
sub
(bad)
(bad)
movs
mov
ds
stos
xchg
jnp
push
inc
pop
inc
rol
add
into
sahf
sub
jmp
ffree
cmps
sub
jge
jle
(bad)
sbb
and
jmp
and
loopne
loopne
cmc
sub
ror
in
jmp
in
inc
shr
fmul
cmp
xor
addr16
lds
dec
add
clc
cmp
xchg
cmp
and
push
lods
or
mov
addr16
sub
add
xchg
rcr
jnp
push
lods
aas
inc
and
lds
pop
fld
fild
pop
mov
cmps
or
ja
nop
adc
(bad)
or
jne
cmp
mov
pop
and
out
xchg
in
xlat
push
mov
xchg
adc
sub
mov
movs
fcomp
adc
mov
inc
jle
sbb
jge
fwait
xor
or
mov
repz
adc
in
sbb
jno
arpl
shl
cli
add
sbb
xor
sub
out
jmp
test
push
and
xor
sbb
sbb
das
inc
(bad)
pop
rcl
sbb
jmp
adc
iret
cmp
ins
les
das
xchg
push
mov
adc
cmps
mov
cmp
jmp
xchg
out
dec
retf
mov
xchg
in
or
sub
pop
cmp
push
mov
fnsetpm(287
jmp
fwait
xchg
enter
push
mov
shl
(bad)
imul
fcom
pop
loopne
dec
sbb
pop
jno
adc
inc
and
das
sub
mov
jbe
cs
jne
jno
rcr
sbb
mov
push
mov
stos
push
mov
les
inc
daa
imul
aaa
movs
(bad)
lea
sbb
add
std
rcl
push
mov
out
stos
sbb
(bad)
jecxz
mov
jb
into
sbb
loop
jne
aaa
pop
lock
fisubr
jo
mov
jb
inc
test
mov
and
mov
jnp
test
addr16
adc
stos
xor
out
popa
add
rol
add
or
xor
cmps
and
(bad)
xchg
xchg
sub
call
fdiv
pop
hlt
push
adc
and
jp
(bad)
call
retf
sbb
mov
enter
ins
inc
ins
or
xor
jle
popf
sub
jmp
pop
loope
out
xor
xlat
inc
mov
cmc
pop
jmp
inc
cld
out
std
dec
in
xor
xchg
das
leave
push
mov
inc
test
jmp
loope
push
int3
jge
cmps
cmp
cmp
stos
fdivr
sub
xor
xor
pop
jmp
mov
out
imul
xchg
mov
lds
sti
cld
fiadd
or
and
mov
mov
movs
push
xchg
adc
or
cmps
jmp
rcl
pop
inc
inc
adc
inc
add
pop
push
ret
and
stc
repnz
jmp
xchg
out
retf
mov
pop
cld
sub
mov
mov
out
pop
shr
mov
sti
jbe
test
movs
imul
ret
xor
fisub
mov
addr16
jecxz
dec
mov
cs
sbb
cld
les
movs
out
jae
push
leave
sbb
ret
(bad)
inc
xchg
(bad)
sar
xchg
sub
fisttp
loope
sub
es
mov
jecxz
adc
sbb
xchg
dec
jbe
mov
mov
push
outs
cmp
inc
or
popa
cmp
ret
movs
or
imul
sbb
ins
lods
push
cmp
sbb
push
loopne
pusha
xchg
pop
loope
pop
sti
push
rcl
inc
loopne
lea
loope
sbb
nop
xchg
mov
ret
dec
push
aaa
xor
dec
mov
jge
pushf
mov
sahf
inc
je
call
sahf
mov
call
dec
mov
cmc
mov
push
xor
push
adc
repz
push
bnd
sar
out
mov
jmp
out
das
dec
in
fwait
sbb
movs
and
mov
fwait
xor
pop
loopne
in
nop
scas
and
out
xchg
stos
adc
int
aam
dec
xchg
shl
nop
int3
mov
mov
jnp
popa
inc
sub
popa
cmps
mov
in
popa
cwde
das
aas
jecxz
call
cs
(bad)
(bad)
repnz
xchg
or
push
bound
push
pop
fisttp
cmp
jmp
or
mov
iret
cmp
dec
loop
call
cmp
or
inc
sahf
test
lock
fcom
and
jne
and
sbb
fisub
ds
push
in
rcl
add
cwde
mov
mov
xchg
sub
in
addr16
js
mov
mov
cmc
add
dec
in
test
icebp
sub
shr
nop
sti
test
js
sbb
sbb
add
mov
or
jp
cmp
neg
je
add
(bad)
jle
scas
mov
sbb
imul
retf
je
push
cmp
inc
(bad)
sar
vsubsd
les
pop
in
in
push
add
popf
xor
add
adc
and
add
clc
push
cmp
cmp
cmp
jne
xor
and
data16
mov
mov
pop
mov
xor
pop
pop
cli
xor
inc
push
aam
adc
in
xor
pop
in
rcr
sub
(bad)
repnz
sti
sub
mov
fucompp
sbb
xor
dec
ret
ret
jns
mov
and
or
add
mov
das
mov
movs
lahf
(bad)
jmp
inc
div
and
jmp
fistp
ret
js
inc
mov
xor
mov
mov
test
or
mov
xchg
movs
retf
mov
pop
push
push
mov
leave
adc
aam
mov
pop
inc
test
mov
adc
xor
movs
fs
xor
fmul
xchg
imul
sub
add
stc
sbb
(bad)
push
mov
or
aas
out
jns
(bad)
xor
addr16
leave
loope
jl
aad
inc
in
xchg
sar
rol
in
fcomp
xchg
(bad)
jno
imul
dec
in
repnz
pop
jo
xor
push
pushf
cld
stos
jle
inc
sbb
jmp
sar
inc
addr16
sti
jnp
cmp
mov
sbb
inc
fldcw
mov
sbb
mov
inc
enter
jne
jecxz
jmp
and
cmps
aaa
adc
xor
fld
dec
and
and
add
scas
inc
stos
and
fst
fs
add
out
sub
ret
pop
retf
jle
in
pop
pop
push
push
jmp
stos
dec
jl
stc
jo
out
dec
sbb
into
sub
pinsrw
fs
out
push
cmp
mov
or
inc
(bad)
ja
(bad)
mov
adc
ds
sbb
std
retf
bound
xchg
mov
dec
push
test
stos
pop
xor
or
mov
fs
repz
jns
mov
add
or
ror
iret
and
pop
int3
(bad)
sub
push
jae
test
mov
outs
pop
push
pop
xchg
pop
jns
adc
pusha
sbb
mov
(bad)
mov
in
outs
out
aam
mov
cmp
mov
test
jge
push
inc
jle
ins
mov
add
imul
retf
out
fsubr
dec
lahf
out
popf
adc
xor
xor
jg
retf
je
jno
xor
(bad)
dec
js
test
and
icebp
scas
inc
mov
div
ffree
cmp
out
pop
push
or
in
and
jecxz
xor
test
stos
ins
push
pop
je
pop
xchg
imul
loop
jecxz
ja
dec
sub
cmp
mov
push
rep
(bad)
push
mov
inc
in
mov
jg
push
scas
jp
es
in
scas
sbb
mov
enter
push
mov
stos
push
sub
mov
push
popa
retf
icebp
int3
jae
inc
pop
xchg
retf
ret
mov
inc
mov
(bad)
dec
pusha
stos
mov
int
loope
sbb
rcr
adc
icebp
sbb
push
jae
mov
adc
push
test
lods
xchg
mov
sbb
and
jns
lea
sti
out
loopne
(bad)
ins
add
xor
dec
imul
push
das
dec
jbe
push
in
retf
mov
mov
lods
popa
push
mov
adc
ret
inc
adc
xlat
(bad)
ficomp
not
retf
aad
pop
cmp
arpl
adc
jo
in
cmp
loope
and
mov
fst
movs
shl
ret
aas
dec
cld
hlt
out
add
add
fist
(bad)
gs
mov
jne
cmp
or
inc
jae
xchg
out
jns
mov
xchg
into
inc
nop
sub
lea
pusha
paddd
and
cmc
inc
rol
sahf
mov
jecxz
push
cmp
mov
(bad)
repnz
add
pop
stos
das
stos
pop
fdivr
test
and
gs
nop
ret
mov
fnstsw
(bad)
shl
adc
mov
xchg
xchg
idiv
add
jno
ret
xor
fcomp
jb
sub
jg
pop
(bad)
fistp
lahf
retf
and
mov
xor
mov
and
inc
jne
ret
int3
jns
inc
(bad)
hlt
int
pop
imul
jns
cdq
push
pusha
call
dec
cli
popa
nop
imul
hlt
repz
in
cmc
add
aaa
dec
(bad)
rcl
or
iret
push
(bad)
xchg
movs
and
mov
add
push
retf
lods
pop
fs
sti
pop
add
cmp
cmp
repnz
lahf
fld
sbb
pop
mov
jp
neg
std
xchg
movs
cs
out
daa
inc
add
mov
adc
cmp
aam
call
inc
mov
or
(bad)
out
lea
daa
(bad)
shr
ss
aam
dec
pop
(bad)
mov
ins
cmp
jmp
sbb
adc
in
jmp
jmp
imul
adc
stos
adc
scas
(bad)
std
and
(bad)
fwait
je
xlat
repnz
jge
inc
jno
dec
inc
fwait
jg
cmp
pusha
std
daa
push
xor
dec
jne
ss
addr16
dec
add
xor
push
test
xchg
dec
cwde
mov
mov
sbb
push
push
cs
push
icebp
inc
ds
xor
ret
or
mov
ror
inc
or
sub
xchg
pop
ins
jns
retf
mov
adc
pop
push
inc
add
out
scas
or
mov
push
and
add
out
push
out
add
sbb
pop
ins
repz
call
jbe
cmp
or
push
xor
add
jmp
loope
mov
(bad)
idiv
xchg
push
ja
fwait
and
xchg
mov
sbb
jne
add
jmp
add
fldcw
stc
mov
in
mov
maxps
xchg
test
cmps
and
int3
mov
lahf
fisubr
jg
enter
mov
scas
xchg
mov
and
neg
stos
test
les
add
(bad)
jns
dec
mov
mov
mov
je
xchg
xchg
mov
repnz
sti
jmp
mov
cmps
dec
movs
test
nop
or
push
push
add
xor
ror
test
mov
enter
std
jae
jle
loope
loopne
adc
xchg
mov
add
fmul
sub
mov
inc
lods
int
out
movs
ins
call
neg
stos
pop
dec
mov
push
imul
dec
jge
sbb
pop
xor
pop
data16
jmp
adc
daa
or
ja
sub
sbb
xchg
fdivr
daa
xchg
test
test
lea
mov
and
add
(bad)
into
jno
adc
jle
jg
imul
or
or
xchg
xchg
hlt
sbb
cld
mov
fld
sbb
xchg
inc
xlat
rcr
xchg
push
jnp
add
pusha
jns
cmp
fisttp
fs
(bad)
sbb
and
loopne
and
xchg
xchg
in
xchg
es
fdiv
xchg
xchg
bound
dec
sub
inc
xor
push
sub
mov
int
icebp
xor
leave
push
jmp
stos
mov
je
sbb
sub
xlat
movs
cmps
pop
inc
xor
bound
out
push
test
stc
sub
jae
imul
lahf
and
xlat
add
imul
jmp
js
cld
je
add
or
fcompp
jmp
pop
les
cmp
in
lods
mov
cwde
and
stos
and
sub
hlt
xchg
and
sbb
push
push
lahf
in
pop
jnp
jae
pop
add
add
mov
jno
mov
cmp
inc
sqrtps
mov
daa
adc
and
mov
pushf
lods
imul
jmp
push
icebp
mov
jg
cmp
fs
out
and
ja
outs
stc
mov
cdq
or
pop
(bad)
fcomip
(bad)
sbb
or
dec
pushf
pop
out
push
in
scas
(bad)
loopne
call
mov
ret
jmp
in
call
sub
inc
mov
adc
mov
xchg
fwait
jne
scas
ror
arpl
into
popa
xlat
rcr
leave
adc
mov
imul
cmps
retf
cmp
add
ret
lock
xchg
loopne
fsub
xchg
dec
xor
jo
out
fild
add
stos
mov
or
out
int
xchg
xchg
inc
jo
mov
ins
cs
push
mov
ret
sub
movs
push
lea
push
xor
push
and
std
and
inc
jecxz
cmp
movs
push
mov
mov
mov
bnd
(bad)
mov
cld
xor
or
loope
les
pop
popf
sbb
(bad)
add
fnsave
add
out
ins
jl
fidiv
ja
retf
xor
mov
mov
jmp
and
mov
mov
and
inc
fs
xchg
mov
mov
cwde
pop
cs
mov
ror
dec
or
cmp
lods
and
push
out
aad
jmp
in
fisub
sub
lahf
or
xchg
mov
or
and
movs
jle
add
call
adc
jmp
fnsave
shl
mov
mov
nop
addr16
sub
int
inc
jp
jecxz
mov
repz
jne
(bad)
enter
push
push
mov
add
(bad)
hlt
add
add
xor
cld
xor
add
icebp
xchg
jg
cs
nop
sub
inc
les
mov
or
adc
lds
inc
into
lahf
(bad)
jmp
int3
push
add
mov
inc
loop
outs
sub
cdq
dec
daa
test
mov
adc
retf
sub
dec
inc
jl
add
fldenv
je
jb
test
repz
data16
fimul
adc
popa
dec
sbb
jb
scas
mov
xchg
inc
imul
inc
shl
pop
sub
cmp
je
ficom
lods
mov
loope
inc
jne
and
dec
icebp
stc
iret
cs
std
add
sbb
push
and
fdivr
inc
inc
jmp
imul
outs
lds
push
mul
xlat
lds
adc
ret
in
(bad)
dec
movs
mov
cmps
pop
int
imul
dec
ror
ins
mov
xchg
test
cmp
shl
jno
mov
enter
or
lahf
nop
clc
rcr
add
in
sbb
(bad)
(bad)
fmulp
ins
stos
outs
push
dec
jge
dec
cwde
cmp
push
fs
stos
fdivr
loop
cwde
mov
xlat
int
loope
aam
addr16
ins
loopne
jnp
add
push
adc
int3
(bad)
xchg
mov
adc
inc
ret
cs
mov
mov
lds
add
or
bound
jl
sub
jbe
mov
pop
test
push
test
add
das
dec
rcl
xchg
sub
gs
inc
jle
loop
jge
jecxz
adc
xor
test
scas
push
fdivr
addr16
xlat
and
jle
sub
std
xchg
sub
xor
cmp
push
hlt
aas
pop
inc
movs
adc
xchg
div
dec
cmp
bswap
aam
mov
xor
push
fs
aaa
ins
dec
int
leave
sub
rcr
or
sbb
movs
popa
int
stc
rcl
(bad)
cmps
mov
pop
(bad)
cmc
cmp
repnz
pop
js
iret
or
outs
and
out
aas
aaa
ffree
push
sub
sbb
xchg
movs
cdq
jl
inc
xchg
bound
mov
sbb
lods
fcom
and
add
fs
cmp
(bad)
repz
sbb
out
sub
ins
jmp
cmp
leave
sbb
dec
fst
rcr
sub
adc
jnp
cmp
jle
stos
cmp
cmp
scas
sub
hlt
out
js
mov
mov
push
cld
icebp
mov
jo
mov
mov
adc
sub
cdq
adc
add
sahf
jmp
inc
out
sub
adc
ret
mov
(bad)
mov
cmp
push
ins
add
retf
jmp
or
and
nop
and
fstp
add
xor
push
repnz
imul
mov
lods
sub
push
mov
aaa
sub
cs
xlat
mov
cmc
jecxz
add
loopne
scas
dec
int3
adc
shr
jl
mov
call
bound
(bad)
cmp
sub
inc
adc
xor
test
xlat
adc
ss
adc
inc
mov
jns
add
and
(bad)
je
popa
in
dec
loopne
add
jmp
js
cmp
pop
mov
cmp
loope
ins
dec
ja
push
std
lahf
xchg
jecxz
into
std
xchg
adc
add
xchg
fidiv
dec
popa
pop
sti
sub
scas
push
xchg
pop
cwde
cmc
call
and
push
retf
ror
adc
hlt
mov
or
hlt
retf
mov
into
not
daa
repnz
lahf
jbe
fcomp
dec
or
jmp
pop
fdivp
lock
and
pusha
loope
mov
lea
shl
icebp
fdivr
cmp
cmp
retf
fnstenv
jo
lahf
xchg
nop
sbb
lock
mov
adc
stos
ds
lds
fimul
repz
inc
enter
repnz
pop
enter
sub
test
push
mov
mov
jecxz
dec
sub
and
xchg
sub
int
(bad)
jmp
jmp
repz
fisttp
scas
add
outs
mov
mov
cmps
push
add
cdq
sahf
xor
or
push
in
retf
test
loop
sub
mov
pop
jo
push
pop
mov
std
imul
(bad)
cs
data16
addr16
xchg
lock
inc
in
loop
mov
lea
shl
dec
retf
adc
pop
add
adc
repnz
jmp
ins
push
inc
ds
out
sbb
out
mov
int3
dec
sub
movs
and
and
jecxz
loop
mov
dec
scas
add
push
iret
add
inc
xor
and
push
shr
enter
fmul
pop
outs
movs
mov
loopne
nop
jmp
add
dec
out
dec
sub
jl
xor
sbb
(bad)
or
jae
int3
add
(bad)
fcomp
sbb
add
int3
jecxz
cs
sahf
neg
in
push
and
jmp
mov
and
or
rcl
inc
xchg
pop
js
and
aam
imul
sbb
inc
test
adc
mov
aas
push
dec
adc
je
pusha
cwde
cmps
sub
or
scas
xchg
mov
push
les
sub
mov
fwait
inc
(bad)
dec
mov
and
dec
ins
ret
mov
xor
fidiv
sub
mov
dec
adc
jbe
bound
push
jne
(bad)
jmp
mov
push
and
push
xchg
clts
cwde
cmps
mov
jecxz
xchg
cli
jecxz
xchg
and
test
lods
lea
pop
inc
cmps
popf
fwait
loopne
pop
jo
out
sahf
mov
fsubp
icebp
cmp
or
arpl
push
movs
mov
out
scas
jle
shl
ins
cmc
push
jl
push
lds
and
cmp
sbb
push
mov
je
bound
adc
or
and
pop
add
(bad)
fistp
addr16
(bad)
pop
adc
sub
jg
push
cmp
push
add
scas
add
out
clflush
das
dec
pop
adc
cmps
inc
adc
xchg
scas
in
call
push
or
(bad)
popa
mov
lahf
lea
xchg
int
and
mov
or
jae
mov
shl
int3
push
pop
mov
or
inc
gs
add
lods
test
or
data16
movs
outs
jle
retf
mov
pop
or
jmp
arpl
adc
lock
les
mov
push
cmp
cld
bound
ret
scas
xchg
hlt
ins
imul
out
std
sub
outs
inc
push
dec
or
inc
daa
push
sar
xor
mov
xchg
adc
dec
aas
mov
mov
push
mov
mov
xchg
fist
jae
ja
mov
mov
fmul
mov
loop
(bad)
xor
stos
in
mov
scas
mov
jb
xor
lahf
mov
movs
adc
repz
push
daa
jne
out
xor
jg
imul
and
out
arpl
cmps
inc
push
push
(bad)
dec
scas
rep
jecxz
shl
aam
test
or
add
test
xchg
mov
sbb
call
mov
push
(bad)
ret
ja
xchg
fdiv
cmp
jnp
inc
mov
or
mov
mov
imul
xchg
popf
(bad)
mov
out
leave
jmp
stc
mov
mov
mov
jns
mov
jae
cmovle
stc
(bad)
loopne
push
imul
aas
mov
scas
adc
lock
mov
sub
jg
sbb
mov
out
int3
loope
dec
or
push
push
(bad)
push
cmp
pop
jno
cmps
mov
or
add
adc
sub
sbb
and
xchg
in
pop
mov
out
ja
mov
dec
(bad)
lahf
(bad)
in
adc
int
and
mov
sahf
xchg
pop
stos
add
cmp
leave
jo
lds
fsubr
sub
xor
stc
or
cld
retf
sbb
xchg
push
les
jecxz
imul
dec
mov
popa
mov
ja
js
push
mov
movs
sub
in
pop
or
pop
lock
pop
cmp
ds
pop
movs
mov
mov
retf
sub
adc
rcl
push
les
sahf
xor
pop
sub
xor
dec
push
inc
mov
pop
xchg
sti
stos
loope
adc
push
jb
jmp
push
xor
out
lea
xchg
cmps
inc
int
xlat
aaa
pop
aaa
push
pop
fwait
dec
addr16
sub
(bad)
cmp
mov
mov
pop
imul
ja
pop
popf
call
rol
ret
adc
or
sub
push
mov
mov
jp
jno
jae
mov
sbb
push
stos
outs
dec
xor
jae
fdiv
sbb
pop
popa
adc
enter
fld
dec
and
add
mov
adc
sub
cmps
push
mov
sub
test
pusha
popf
or
fwait
xor
jno
mov
mov
mov
dec
or
inc
in
pop
cld
xor
test
jmp
test
sub
enter
push
data16
pop
add
hlt
jae
and
js
inc
call
adc
mov
adc
mov
cmps
cmps
in
movs
adc
push
cs
mov
and
add
push
aaa
xor
push
bound
shl
popf
fmul
push
outs
mov
stc
and
rol
sbb
fdivrp
mov
test
xor
addr16
dec
dec
(bad)
push
pop
(bad)
jge
in
push
xchg
jp
jmp
test
leave
fsub
std
xor
inc
in
adc
ins
loope
sub
sbb
cmps
push
pop
fsub
lea
test
inc
add
mov
inc
jne
sub
jle
sbb
sub
in
nop
jae
mov
mov
icebp
jmp
xchg
pop
jnp
cmc
call
add
(bad)
sbb
add
push
inc
mov
sbb
adc
ja
adc
pop
or
xlat
addr16
dec
jnp
fisubr
retf
mov
add
push
sbb
lods
std
sbb
mov
and
lock
mov
mov
add
xchg
rcl
std
xor
das
int
lods
lahf
mov
jle
daa
mov
dec
cli
push
inc
xor
mov
cmp
clc
movs
into
jg
adc
sbb
mov
and
sbb
push
in
pushf
retf
iret
inc
xchg
test
out
data16
xor
loopne
div
adc
pop
adc
sbb
sub
mov
mov
test
cmp
repnz
cs
xchg
adc
test
loop
(bad)
inc
push
or
ins
inc
out
neg
mov
shr
and
cwde
loop
jle
xchg
sub
ss
imul
mov
arpl
rol
fs
clc
dec
mov
xchg
mov
push
repnz
sub
mov
into
sub
xchg
in
jmp
jb
repnz
jl
cmp
test
fwait
and
xchg
pushf
pop
pop
xor
aam
leave
push
stos
xchg
stos
aas
clc
pop
fstp
retf
add
xor
je
dec
es
jle
aam
jns
fmul
fs
retf
movs
jmp
leave
and
xor
mov
pop
adc
and
cwde
cmc
enter
mov
mov
cmp
pop
lock
sbb
call
outs
aad
pop
data16
adc
dec
sub
jne
mov
sti
inc
mov
js
mov
call
stos
jae
push
xor
(bad)
pop
and
sub
sub
jnp
sbb
loopne
push
arpl
rcr
loopne
ins
dec
(bad)
pop
(bad)
and
mov
mov
sbb
push
sahf
pop
dec
inc
xor
or
mov
out
mov
sar
or
mov
push
mov
pusha
hlt
cmp
aad
cmp
dec
aad
and
sbb
xchg
test
mov
cmp
xlat
in
sti
lock
jae
jp
lock
scas
or
stos
mov
cmps
loopne
nop
test
popf
xchg
add
adc
rcr
push
lods
sbb
int
mov
or
cwde
dec
cmps
mov
mov
mov
ins
mov
lods
retf
shl
push
lods
fld
push
xor
movs
mov
push
mov
push
divps
fldcw
push
sub
les
dec
jne
int3
int3
dec
pop
xchg
addr16
fldcw
stc
cmp
(bad)
pop
das
dec
xchg
test
dec
sbb
ffreep
daa
es
xlat
bound
test
push
jge
shr
stc
fs
dec
sbb
sub
mov
fsub
cmp
outs
mov
mov
ds
jl
jbe
push
addr16
pop
fldln2
aas
imul
les
adc
inc
in
mov
inc
into
dec
rol
(bad)
hlt
xor
(bad)
stos
xchg
inc
rcr
inc
lea
pop
test
aas
mov
ficom
dec
push
stc
mov
lods
ret
and
fcomp
je
jecxz
mov
adc
push
pop
push
comiss
adc
jbe
fs
iret
push
jl
cmc
inc
ficom
scas
mov
(bad)
or
dec
jmp
add
inc
jecxz
scas
cmp
add
retf
hlt
test
std
mov
or
sahf
(bad)
test
outs
call
adc
push
ins
mov
xor
movs
in
xor
xchg
push
stos
dec
sub
mov
adc
retf
push
inc
push
lods
jl
lahf
mov
or
rol
dec
dec
dec
std
push
outs
mov
int
and
push
push
jecxz
movs
adc
aad
call
clc
jb
(bad)
int3
mov
pop
ret
mov
out
mov
fdiv
jns
dec
jno
mov
or
mov
in
dec
fimul
stos
test
mov
daa
call
xor
div
iret
pop
movs
loop
cmc
sbb
repz
call
xor
pusha
aaa
inc
stc
and
add
mov
push
fsubr
scas
dec
das
fisttp
sbb
xor
sub
data16
and
cmp
iret
shl
pop
adc
sbb
add
push
icebp
mov
or
(bad)
shr
lock
xchg
into
enter
pop
test
test
xor
adc
aas
xchg
nop
mov
test
or
mov
jae
xchg
jmp
inc
push
inc
pinsrw
repz
cwde
ret
sar
and
jecxz
fucom
lock
mov
mov
scas
jno
loope
popf
cmps
fdiv
cwde
inc
dec
xor
jl
jecxz
sub
pop
mov
inc
pushf
das
jle
(bad)
pop
or
cli
rcr
push
pop
call
push
push
pop
or
scas
lods
pushf
sbb
nop
psubd
sbb
xchg
mov
mov
xchg
inc
jg
outs
jne
in
enter
fdivr
pop
sbb
lds
xor
in
jbe
inc
xor
push
mov
jnp
mov
push
cmc
into
xlat
lock
inc
stos
mov
inc
movs
or
sbb
aam
lods
fmul
fisub
mov
nop
and
enter
inc
iret
xor
fmul
mov
push
add
int
iret
jl
int3
push
mov
inc
pop
mov
ins
dec
mov
inc
push
fwait
addr16
xlat
in
or
fucom
mov
cmp
call
dec
xchg
mov
fsubr
ins
sub
adc
jae
xor
mov
aas
outs
add
or
sahf
jle
movaps
loopne
push
pop
pusha
les
mov
es
dec
xor
mov
cdq
jge
push
fcomp
(bad)
cmp
push
out
or
cmp
sub
daa
pusha
xlat
lods
adc
jb
loop
mov
pop
(bad)
jmp
bound
push
clc
cmp
std
(bad)
mov
imul
inc
(bad)
dec
(bad)
mov
call
fidivr
mul
es
jp
(bad)
stos
fcmovnbe
dec
fs
outs
xchg
push
xchg
test
jmp
xchg
add
(bad)
(bad)
cli
imul
sub
cmps
push
dec
cmps
(bad)
xchg
adc
outs
cmp
ror
push
mov
jl
fwait
(bad)
add
scas
dec
pop
jo
sbb
push
sbb
or
push
pop
and
sub
fchs
mov
je
pop
mov
mov
xchg
pushf
cmp
cmps
add
icebp
xchg
and
iret
imul
fidiv
push
jecxz
mov
push
movs
popa
or
fisttp
cmc
xchg
push
aaa
dec
out
fdivr
xchg
jne
ret
psubsw
lds
(bad)
enter
idiv
(bad)
leave
mov
add
xor
(bad)
jb
rol
into
jo
call
cmp
js
(bad)
mov
loop
dec
js
scas
mov
das
popf
jmp
(bad)
lods
pushf
or
push
mov
adc
mov
cwde
sti
and
lea
add
mov
imul
mov
rcr
dec
sbb
fist
jne
jnp
cmp
sub
adc
inc
mov
add
mov
pop
or
shl
scas
aas
fsubr
daa
sbb
scas
mov
xchg
sbb
inc
dec
adc
and
add
adc
or
call
cmp
in
lods
fild
rcl
mov
lock
ins
fmul
and
les
outs
jmp
cld
aaa
movq
test
movs
and
retf
call
sbb
adc
xchg
xor
pop
fmul
movs
add
imul
mov
dec
jne
xchg
jno
mov
in
dec
rcr
ret
inc
aad
xor
test
xchg
pop
mov
xlat
jge
jecxz
pop
mov
adc
adc
sub
mov
in
dec
jmp
mov
lds
and
lock
xchg
fwait
pop
xlat
inc
and
xchg
and
jo
es
lahf
inc
into
fistp
mov
cmpps
cld
adc
into
mov
cmp
cmps
pop
push
add
ins
in
jmp
xchg
into
sbb
xor
mov
test
cwde
xchg
jne
dec
sar
pop
popf
das
sbb
stos
cmp
cwde
add
shl
dec
or
sbb
add
or
sahf
sub
cmp
xor
out
xchg
div
push
pop
xchg
gs
mov
lods
popf
imul
cmp
fwait
popf
dec
fldenv
sar
sbb
push
push
mov
push
mov
xchg
add
mov
mov
jmp
add
aas
in
add
loop
jbe
repz
rcl
and
cmp
mov
xchg
sbb
fmul
sahf
jne
xchg
fimul
ret
fisub
adc
test
or
mov
sbb
ficom
jae
and
cmp
push
scas
mov
pop
nop
and
jne
ins
jo
movs
xlat
pop
cmp
mov
add
inc
cmp
jmp
ret
adc
gs
pop
mov
cmp
scas
out
lea
jecxz
shl
addr16
fbld
xchg
and
sar
fwait
call
adc
pop
lock
leave
inc
lahf
test
adc
fdiv
cmp
gs
adc
fbld
cmps
pushf
cvttps2pi
lods
sbb
xor
cmp
arpl
push
popa
adc
out
outs
dec
imul
mov
test
mov
stos
cwde
xchg
cmps
and
add
popa
pop
fdivr
or
rcr
cmp
outs
cmp
xchg
daa
std
and
test
jbe
cmp
mov
out
dec
(bad)
jmp
out
add
mov
dec
mov
push
imul
jmp
ret
xchg
stos
ins
inc
cwde
movs
or
inc
jo
aam
pop
mov
(bad)
mov
push
mov
int
pop
mov
mov
aad
xor
inc
jecxz
sbb
xchg
or
jno
jo
sub
call
jae
ret
dec
xor
push
pop
adc
jnp
hlt
mov
jb
adc
add
cmp
cmp
popf
mov
pop
cmp
mov
dec
enter
inc
mov
inc
xchg
sub
aam
jl
cmp
mov
cmp
jl
inc
(bad)
ds
(bad)
jle
dec
fwait
or
pushf
inc
jle
sti
lods
xchg
pop
ret
jmp
ins
mov
loopne
cmp
add
and
add
out
sahf
idiv
ficomp
mov
shr
int3
sub
stos
test
out
xor
jl
cmp
or
jl
fwait
(bad)
jle
clc
into
sbb
add
dec
jne
mov
das
imul
xor
or
shr
pop
sti
pushf
mov
xor
adc
dec
mov
inc
or
push
in
xchg
enter
cmps
ss
ret
jnp
xor
aaa
adc
lock
dec
outs
loope
mov
mov
sbb
jp
rol
test
adc
(bad)
fdivr
cdq
lock
pop
ins
push
dec
cmp
inc
scas
test
or
and
add
ret
mov
add
inc
cmp
sbb
sahf
dec
pop
outs
cmps
fnstcw
cli
cdq
frstor
jg
(bad)
add
test
imul
(bad)
jns
test
test
xchg
cmps
icebp
mov
mov
repnz
popf
cmp
(bad)
sar
add
stos
cmp
jb
enter
call
jb
sbb
dec
popa
movs
jbe
mov
xlat
jmp
push
mov
sub
jb
(bad)
scas
or
je
jae
out
and
loope
push
and
xchg
dec
fisttp
fistp
rep
and
or
add
jp
push
pusha
push
out
test
mov
jmp
loop
loope
or
xor
mov
jo
jmp
push
out
sub
and
mov
add
in
aaa
sub
add
ret
fcmovnbe
test
das
xor
loop
ret
jge
mov
cmps
jle
test
fiadd
adc
push
loope
mov
fdiv
mov
jno
and
rdmsr
ror
push
or
push
pop
fistp
sbb
add
jecxz
lahf
cld
cmp
xor
mov
pop
int
xor
push
xor
pusha
retf
test
push
enter
retf
xor
and
(bad)
mov
clc
shl
dec
loope
fidiv
iret
(bad)
pop
mov
call
(bad)
cmp
dec
cmp
xchg
mov
xor
or
adc
sahf
ins
jmp
loope
bnd
mov
out
mov
mov
jo
dec
test
adc
mov
dec
xchg
movs
pushf
xchg
cmps
xchg
sbb
adc
cwde
xchg
cs
jle
iret
cmp
mov
mov
loop
fdivr
popa
cwde
lea
int
sbb
mov
lods
(bad)
push
cmps
xchg
fnstsw
repz
xchg
push
pop
out
mov
sahf
add
sbb
jno
xchg
stc
cmps
push
jmp
les
sti
add
je
inc
xor
cmp
pop
jle
dec
xor
imul
clc
xor
xchg
sti
dec
inc
cmp
dec
outs
fmul
xlat
push
xor
pop
adc
stos
fndisi(8087
push
fild
jmp
jmp
test
cwde
add
dec
add
aas
push
popf
std
call
fcom
ficom
push
mov
add
mov
xchg
mov
aam
enter
imul
test
add
popf
popf
les
sub
jb
sbb
stc
pop
sub
(bad)
mov
dec
fmul
movs
cmp
lods
test
imul
outs
jp
jecxz
test
ds
js
inc
cmovs
mov
jecxz
push
and
sub
fst
mov
lea
xor
mov
(bad)
jb
ret
dec
dec
pop
lods
je
xchg
and
repz
xor
sbb
mov
idiv
lea
aaa
mov
adc
inc
das
dec
lahf
pop
add
loope
cmp
outs
lock
hlt
xor
stos
out
xchg
scas
or
sbb
loope
(bad)
pop
push
ins
push
dec
add
adc
cld
mov
push
xor
mov
enter
jge
inc
add
jle
and
add
jg
or
jns
cwde
adc
adc
or
aad
fcmovnb
cmp
std
loop
adc
jmp
inc
jl
imul
in
ds
pusha
lods
dec
mov
pop
xor
dec
retf
in
dec
out
imul
shl
xchg
sub
and
jnp
out
test
pusha
jae
fnstcw
out
add
and
aas
enter
sti
les
push
in
jbe
mov
jecxz
add
pop
inc
dec
dec
add
inc
es
popa
jmp
or
mov
int
fisttp
jns
retf
push
fadd
int
js
cmps
fs
inc
loope
jb
inc
xchg
hlt
sbb
loopne
pusha
icebp
xchg
scas
xor
call
(bad)
ds
fld
pop
out
mov
imul
cli
aas
jmp
mov
fimul
add
retf
movs
sbb
mov
ins
aam
mov
inc
xor
out
mov
mov
add
mov
lods
std
cmp
call
dec
xchg
mov
je
lea
and
ds
test
and
jl
imul
xchg
imul
test
arpl
popa
dec
fist
sub
mov
pop
and
and
icebp
ffree
pop
xor
add
mov
cmps
and
mov
mov
das
dec
loope
in
or
jmp
jb
sbb
pusha
test
fwait
addr16
or
inc
dec
les
push
sub
iret
push
fsubr
or
jle
mov
push
or
xchg
pop
popw
push
scas
xchg
mov
pop
(bad)
aad
sub
xchg
xchg
add
or
stos
into
call
fst
cli
and
inc
shl
xchg
sbb
pusha
xor
jbe
pop
or
pop
xlat
pop
pop
xor
outs
cmp
out
nop
jb
push
cmp
xor
xchg
aad
out
or
mov
push
mul
xchg
pop
invd
mov
jb
xor
push
lock
fs
jmp
ret
pop
lea
test
mov
xchg
jge
sub
add
(bad)
popf
jnp
jbe
push
mov
xor
cmp
push
and
mov
retf
add
inc
nop
xor
add
mov
mov
ret
xchg
gs
push
jmp
push
xor
or
outs
pop
mov
jns
mov
inc
mov
(bad)
out
es
mov
push
mov
push
mov
sub
adc
xchg
cmp
sbb
sbb
push
mov
adc
pop
test
sub
cmp
pop
and
inc
ror
mov
inc
sub
or
inc
pushf
pop
dec
loop
in
add
pop
push
adc
jl
out
std
cli
add
aad
sub
int
fistp
mov
mov
xchg
mov
cmc
pop
push
adc
bound
fbld
cmp
lods
dec
inc
cmp
sbb
or
mov
shr
bound
xor
packuswb
(bad)
xchg
fwait
ins
arpl
push
mov
push
in
cli
or
mov
mov
and
mov
movs
ja
sub
jnp
mov
aaa
addr16
mov
push
jbe
fild
push
lock
cmps
call
ins
int3
adc
je
mov
sub
sbb
push
xor
in
dec
jecxz
(bad)
jns
aas
in
xor
leave
scas
sbb
inc
sbb
mov
adc
lock
fs
sub
push
in
jb
push
pop
loope
movs
adc
ficom
or
sbb
cmps
into
daa
adc
mov
mov
jno
sbb
in
lods
sbb
out
sbb
iret
(bad)
adc
out
cmp
jl
cwde
sub
ret
dec
std
jne
dec
cmp
inc
ret
or
imul
cmps
retf
pop
sub
mov
repz
call
cli
mov
jg
push
jmp
popf
scas
inc
ds
dec
mov
lock
jbe
in
sub
popf
cwde
out
dec
jmp
fdiv
idiv
dec
adc
pusha
stos
push
int3
dec
add
xor
and
test
pop
iret
fnstenv
daa
mov
lock
out
sbb
inc
and
outs
addr16
mov
dec
sbb
mov
in
push
sahf
xchg
adc
pop
pushf
shl
pushw
xor
dec
retf
mov
clc
pop
xor
lods
pop
sbb
mov
mov
loopne
pop
mov
cmps
idiv
stos
cmp
mov
leave
pushf
add
das
inc
(bad)
dec
cli
pop
aad
jmp
dec
test
dec
xor
xor
test
cli
and
push
xor
add
push
fdivr
test
stos
ins
(bad)
cwde
dec
sbb
add
les
in
jle
gs
inc
aas
xchg
or
cdq
cmc
cmp
push
jg
popfw
sub
addr16
sub
cs
call
adc
or
add
dec
inc
sub
shl
dec
mov
fisub
jp
lahf
cmp
jne
mov
sbb
and
or
imul
xor
jns
sub
mov
pop
stos
test
fmul
sub
repz
xchg
dec
xchg
mov
nop
movs
pop
mov
and
int3
pop
jecxz
retf
mov
jge
pop
xor
push
xchg
iret
(bad)
sbb
add
loopne
mov
jne
out
cld
dec
mov
ror
sahf
vpshab
mov
(bad)
sar
dec
leave
add
mov
mov
jp
stos
dec
mov
lods
dec
(bad)
ins
jae
jne
jmp
cli
stc
xor
mov
dec
xchg
daa
jmp
stc
add
frstor
ds
or
push
xor
lods
xor
push
por
jo
ja
ret
hlt
push
retf
hlt
and
pop
leave
ffreep
cdq
pop
jge
pop
out
mov
outs
outs
clc
retf
cmp
shl
sahf
cli
popa
cwde
pop
cmps
ds
rcr
not
xchg
cbw
push
sub
cmp
dec
jns
push
test
jbe
jmp
pop
push
inc
xchg
jecxz
mov
fidiv
out
fs
add
dec
icebp
xor
sub
mov
pusha
nop
push
fiadd
pop
sub
add
stc
mov
ror
mov
sub
mov
aaa
enter
scas
xor
inc
xchg
in
add
push
push
out
jae
push
dec
jns
ret
add
mov
cli
xor
icebp
mov
dec
jge
(bad)
dec
xor
outs
ins
cmp
in
imul
and
pop
dec
jecxz
movs
iret
xlat
out
daa
out
inc
(bad)
scas
jmp
aas
inc
scas
dec
add
popf
(bad)
call
add
enter
mov
push
mov
test
add
adc
sbb
or
lods
push
pop
aas
cwde
lahf
into
movs
cmp
xor
dec
mov
int3
out
fisubr
xlat
inc
cmps
jecxz
mov
mov
mov
movs
or
dec
mov
daa
and
or
jg
fnsave
mov
loopne
lods
mov
aam
shr
mov
push
pop
cmps
fcom
fldcw
xor
call
lods
cwde
int
pop
shl
stos
ret
pop
test
dec
pop
and
inc
(bad)
cs
repz
xchg
push
fwait
push
mov
push
and
fidivr
sbb
out
adc
pop
adc
add
xor
or
lock
rol
in
xchg
movs
sahf
jg
cmp
nop
sti
adc
inc
nop
outs
cmc
push
xchg
xchg
xchg
jecxz
push
jmp
pop
inc
pop
add
dec
scas
retf
or
pop
scas
scas
mov
loop
xchg
push
icebp
(bad)
int
sbb
lods
pop
mov
dec
push
jmp
arpl
iret
test
out
int3
ins
xor
fldenv
cmc
test
sbb
pop
inc
pop
or
(bad)
shl
lock
jae
sub
icebp
cld
in
mov
xchg
mov
shl
add
(bad)
cdq
sub
call
fist
push
call
dec
repz
ror
jmp
push
ja
ins
xor
loopne
or
cmp
push
mov
mov
loope
and
cwde
aaa
dec
mov
inc
fsubr
sub
dec
pop
test
mov
inc
jo
xor
xchg
fdivr
sub
scas
std
jg
and
xchg
xor
pop
push
pop
cli
and
sub
aas
add
lahf
not
jmp
dec
jle
or
pop
lea
test
popf
mov
pop
shl
add
xchg
sub
shl
push
iret
push
mov
push
xchg
xchg
or
lods
fdivp
inc
jmp
sub
mov
test
xor
xor
shl
stc
rcl
push
cwde
xor
aaa
dec
or
jg
or
inc
ror
mov
ins
jg
pop
movs
push
and
inc
add
aam
not
aas
mov
push
outs
add
inc
mov
sahf
and
ss
stos
ja
(bad)
scas
jmp
xor
xchg
pop
out
push
lds
imul
xchg
push
dec
popf
xor
call
and
fcomp
sahf
(bad)
rcr
enter
inc
aam
call
(bad)
push
aas
jns
cmp
repz
dec
aad
or
outs
int3
inc
sub
je
or
fbld
inc
xor
or
push
xchg
les
push
pop
jae
dec
push
push
cli
pop
jle
(bad)
into
xchg
jge
inc
dec
iret
or
repz
in
mov
cs
rol
and
jp
mov
lods
(bad)
repz
inc
pusha
fdivr
add
cmps
jo
xor
xchg
jbe
sahf
leave
pop
scas
out
adc
jae
lea
xchg
mov
mov
fcomp
je
jmp
std
xor
xor
jns
neg
push
mov
icebp
into
and
push
cmp
fst
or
es
push
ins
mov
ja
and
and
or
loope
(bad)
dec
push
adc
add
jne
(bad)
add
xchg
lock
push
cmp
rol
int3
scas
or
movs
mov
fsubr
inc
inc
and
xchg
push
pop
fldl2e
xchg
or
outs
cli
clc
jmp
mov
adc
sar
ret
ds
cmp
add
sbb
inc
outs
xor
inc
mov
test
dec
jns
clc
pop
dec
shr
sub
test
sbb
stos
sbb
mov
mov
sub
add
scas
stos
jnp
std
pop
repnz
jb
jno
xor
rcl
pushf
jnp
adc
mov
sbb
(bad)
(bad)
sbb
call
jno
inc
sub
test
clc
fist
movs
mov
mov
inc
call
bound
sti
pusha
rcl
call
loope
je
arpl
popf
dec
adc
retf
iret
aas
enter
inc
sub
mov
repz
mov
inc
and
dec
movs
add
xchg
or
iret
shl
or
sub
retf
and
mov
xchg
jne
cwde
fdivr
adc
pushf
(bad)
mov
loopne
outs
jge
idiv
outs
inc
cwde
sub
jnp
in
mov
addr16
nop
das
mov
jae
imul
inc
jo
lods
and
bound
cmp
dec
xchg
cmps
lods
jbe
xchg
nop
call
or
dec
dec
pop
sar
dec
and
sub
jl
aad
jae
push
lods
ins
xchg
or
lds
imul
pop
push
(bad)
scas
sbb
xor
add
test
in
jnp
movs
shr
mov
lods
ret
aas
push
inc
stos
inc
pop
sub
popa
leave
ffreep
push
adc
(bad)
xchg
mov
ins
into
mov
inc
dec
(bad)
jmp
loope
xor
push
dec
(bad)
cwde
fwait
imul
pop
push
mov
dec
mov
push
xor
sub
pop
clc
imul
enter
jl
inc
sbb
pop
(bad)
pop
adc
mov
loop
les
aas
lods
mov
pushf
lods
mov
jno
pop
mov
mov
push
pop
mov
mov
sahf
retf
iret
dec
push
and
push
and
mov
jl
fsubp
adc
cmp
bound
test
xchg
mov
cmp
xchg
pushf
inc
xchg
push
mov
lahf
sub
mov
(bad)
in
dec
adc
mov
rcl
repnz
(bad)
jae
not
push
cdq
call
pop
adc
nop
mov
loopne
jmp
movs
xchg
mov
fcmovnu
mov
mov
imul
jae
jle
mov
push
ret
mov
(bad)
sub
sbb
pop
sahf
and
test
shl
adc
add
dec
mov
sahf
xor
dec
jp
fdivp
xlat
data16
cmp
mov
and
inc
dec
mov
xor
add
jne
mov
add
lds
in
dec
mov
test
repnz
jmp
in
cmc
inc
in
and
shl
fisub
mov
adc
movs
inc
rcr
retf
dec
fcomp
xor
xor
sti
icebp
push
scas
mov
xor
mov
pop
jl
jmp
push
repz
ret
sar
pop
ret
jns
sbb
add
dec
cmps
or
ds
pop
out
and
lods
addr16
outs
dec
rcr
fcom
sar
cmp
dec
pusha
pop
retf
jno
pop
pop
or
xchg
jg
rcl
mov
test
rol
scas
arpl
pop
xor
out
pop
loop
stos
ja
push
outs
mov
cwde
and
push
mov
cmp
jmp
in
fbstp
mov
xor
or
cmps
jp
stos
xchg
js
movs
ins
xor
popa
ret
add
mov
inc
clc
mov
jb
(bad)
sub
lea
cli
daa
xor
pop
sar
fidivr
lahf
mov
aad
jae
pop
pop
and
stos
xchg
push
(bad)
xchg
lods
dec
dec
push
jl
loope
shl
push
hlt
sub
xchg
push
and
data16
push
(bad)
mov
xchg
imul
push
in
sub
and
aaa
jbe
ins
or
repnz
lahf
mov
push
or
push
ret
das
mov
test
cmps
inc
jle
sub
jp
sub
cmps
jmp
cwde
adc
(bad)
and
pop
dec
div
repz
mov
rcr
movs
lods
mov
test
mov
cmc
arpl
pop
loop
out
scas
push
or
inc
arpl
retf
aad
sub
sbb
jo
push
test
shl
test
push
lock
jl
dec
fidivr
scas
mov
jmp
std
adc
jbe
inc
nop
cmp
sub
sbb
arpl
sub
bound
mov
jbe
mov
jb
or
lds
pop
icebp
test
add
pop
mov
jl
cdq
aaa
and
out
pushf
and
jae
cmps
xchg
or
sub
retf
dec
cmp
inc
lods
pusha
int
adc
icebp
sti
xchg
mul
cmc
cmp
imul
ss
std
js
cmp
sbb
jecxz
push
mov
and
xor
jecxz
arpl
dec
and
inc
adc
pop
jns
push
gs
jp
push
mov
cld
jo
cdq
cmp
movs
or
das
cmp
jle
(bad)
(bad)
nop
out
lea
xchg
int3
repz
cdq
jb
loopne
inc
sbb
jno
in
inc
add
sub
sub
(bad)
ins
jmp
mov
dec
pop
xchg
test
xor
xor
ds
jmp
sbb
cmp
das
adc
sar
sahf
popf
(bad)
mov
add
out
push
lock
sub
cwde
dec
cmp
fcmovnbe
dec
mov
out
cmps
inc
xor
mov
call
xchg
xchg
dec
ret
push
jmp
fwait
mov
out
in
mov
push
icebp
pop
xchg
fsubr
and
out
call
push
mov
icebp
sbb
mov
jo
mov
les
mov
xor
pop
cmp
sti
out
jo
not
push
cmp
push
mov
push
rcl
pop
mov
jmp
jge
iret
daa
test
jmp
xchg
mov
xlat
(bad)
out
and
outs
cdq
jns
aaa
fcom
in
add
cmp
fsubr
push
add
mov
sbb
out
mov
jg
sbb
mov
mov
in
addr16
sti
(bad)
cmp
dec
mov
mov
sub
popa
in
mov
out
pusha
push
sub
shl
in
sbb
movs
pop
mov
inc
xor
jge
repz
inc
fwait
sahf
arpl
mov
imul
xchg
mov
mov
add
mov
sub
push
jmp
test
push
cdq
inc
movs
dec
mov
inc
sbb
inc
mov
ret
or
fistp
push
mov
inc
repz
sti
sbb
xchg
mov
daa
adc
add
repnz
pusha
retf
cmp
mov
pop
xchg
add
es
rcl
cs
mov
cmp
mov
retf
mov
fs
test
in
mov
pop
push
jl
xchg
shl
cmp
hlt
mov
mov
dec
xor
shr
outs
add
(bad)
mov
jns
jp
fs
dec
xchg
das
mov
push
mov
sbb
daa
stc
and
mov
pop
sbb
mov
enter
sti
xchg
pop
dec
shl
jnp
pop
sbb
jmp
cli
(bad)
xor
aaa
idiv
xchg
mov
jl
xor
adc
mov
or
stos
in
pop
cmps
xor
push
fs
and
cmp
and
scas
ds
cmc
ja
aaa
add
ins
pop
jno
loope
fnsave
fsub
mov
adc
into
(bad)
dec
outs
mov
cld
sub
jge
popa
call
nop
pop
sbb
ins
sub
ins
ins
test
cwde
push
mov
mov
jmp
mov
test
jnp
pop
inc
movs
call
or
xor
nop
mov
inc
cmp
std
pop
sbb
jo
inc
jp
or
loope
dec
ins
jle
dec
fadd
stc
inc
xor
bound
push
dec
sbb
and
cmp
dec
das
repnz
xchg
out
stos
xor
dec
ret
cmps
sub
jl
enter
xchg
aam
inc
int3
iret
or
loopne
sub
push
fs
mov
mov
pusha
sub
mov
lods
jne
popf
cmp
aaa
jmp
xchg
loop
in
in
scas
and
cmp
and
call
inc
lea
and
popa
mov
mov
lods
sbb
(bad)
and
fsub
sar
cdq
mov
shl
inc
loop
and
and
cmp
iret
jmp
fimul
jecxz
scas
stos
bound
inc
clc
test
sub
repnz
js
xor
push
mov
retf
ret
push
and
leave
ret
cmp
mov
pop
loope
dec
(bad)
mov
add
and
xor
loope
inc
lock
push
imul
ret
xor
mov
sub
mov
(bad)
pop
adc
sub
loopne
loope
ja
daa
jbe
test
stos
arpl
data16
adc
mov
mov
call
les
xchg
mov
mov
push
sbb
cmps
mov
mov
sbb
outs
leave
mov
inc
push
and
(bad)
xchg
pop
js
jmp
hlt
call
enter
hlt
cld
gs
into
mov
adc
aam
popf
mov
inc
out
and
(bad)
div
lds
rcr
nop
mov
ficomp
call
cmps
pop
data16
mov
push
and
(bad)
mov
cmp
test
repz
out
aas
inc
add
cmp
shl
pop
je
mov
push
sub
or
or
aam
dec
mov
inc
(bad)
pop
mov
and
bound
dec
jecxz
repz
push
test
and
out
retf
fimul
push
push
pop
mov
pop
push
jnp
and
push
mov
jge
xor
jb
rol
jp
xor
fdivr
fiadd
std
std
mov
push
daa
fld
xchg
xor
aad
mov
xor
ja
bound
add
xchg
addr16
mov
pop
or
stos
cmp
es
jl
inc
sub
add
shl
cwde
ins
repz
outs
jmp
int
into
cmp
inc
and
iret
shl
fild
push
xchg
enter
aaa
sbb
push
inc
icebp
fistp
mov
push
cmp
int
cmp
into
push
push
sbb
mov
mov
dec
data16
cmps
loope
cmp
ins
imul
sub
add
cmp
cs
gs
xor
lods
and
shl
xchg
stc
ins
cmp
jl
loop
jg
push
pop
jmp
ret
push
leave
ret
paddq
ins
cmp
pop
shr
pushfw
adc
xor
mov
pop
inc
sub
cmp
cmps
or
pop
pop
in
fbld
ja
sbb
lods
pop
sbb
sub
cmp
mov
mov
add
adc
mov
gs
outs
push
push
mov
mov
sbb
jb
fisubr
jl
jae
test
fisttp
jbe
leave
jbe
sbb
ret
inc
push
frstor
xchg
sub
sbb
iret
sub
lea
push
cmc
or
arpl
add
enter
aas
mov
and
sti
jge
push
mov
adc
mov
jl
and
test
xchg
xor
(bad)
mov
js
cs
xor
jmp
lds
mov
es
call
dec
fistp
repnz
mov
fstp
and
mov
loop
or
jb
fdivr
and
mov
xchg
test
and
(bad)
push
adc
xor
sub
add
sbb
aam
push
test
jmp
sub
dec
into
sub
mov
bnd
mov
(bad)
mov
leave
jo
sbb
je
cmp
fild
lds
fsubr
push
mov
loopne
out
inc
nop
or
jns
inc
popf
mov
add
xor
mov
xchg
jae
adc
sub
push
enter
xor
es
aam
inc
dec
hlt
xchg
ins
(bad)
in
call
loopne
mov
bnd
std
add
pop
out
pop
add
inc
loope
jp
loope
test
mov
push
aaa
lods
sub
add
dec
cmp
mov
test
movs
mov
aas
add
lods
ja
in
cmp
scas
or
inc
ins
test
mov
retf
dec
mov
scas
and
cwde
jb
shl
(bad)
sahf
sbb
and
test
das
push
xchg
or
pusha
jecxz
fnstsw
cld
(bad)
hlt
aas
icebp
js
xchg
int3
xchg
and
pop
shl
enter
mov
jmp
and
pop
mov
mov
mov
xor
and
fild
addr16
ret
push
inc
cmp
sbb
mov
inc
cwde
add
ins
es
bound
push
push
jb
push
jmp
or
jge
inc
jo
not
enter
sbb
ret
dec
jmp
jecxz
xchg
clc
scas
mov
jg
mov
dec
xchg
cld
outs
scas
and
push
and
aad
jns
pushf
mov
addr16
xchg
jne
mov
or
inc
test
add
(bad)
push
sub
and
push
pop
or
shl
retf
aaa
push
and
rol
xlat
and
pop
add
(bad)
out
retf
inc
mov
push
adc
cdq
or
xchg
imul
hlt
aam
shr
mov
jo
and
xlat
adc
dec
xchg
fimul
bound
sub
mov
mov
nop
outs
sbb
or
cs
sub
dec
jb
mov
xchg
test
ret
inc
jmp
mov
xchg
js
sar
dec
mov
inc
push
das
push
or
(bad)
(bad)
jnp
cli
ret
mov
xchg
or
arpl
enter
xor
loop
sbb
xor
in
add
pop
std
xchg
or
pushf
mov
ret
ficomp
jae
sbb
stos
mov
sbb
mov
mov
inc
mov
mov
stos
mov
xor
xor
outs
inc
inc
stos
mov
repnz
shl
adc
or
mov
cli
call
out
push
inc
stos
ins
adc
push
dec
jp
xchg
cmps
mov
mov
mov
and
jmp
add
jo
fsub
repz
jns
fs
push
js
mov
add
outs
xchg
dec
pop
stos
sub
out
mov
jg
outs
cmp
jmp
mov
dec
sbb
leave
push
shl
int
xchg
stc
jp
or
call
aam
int
imul
jle
add
test
bound
pop
lods
bound
bound
ret
in
add
ins
dec
int
xor
sbb
or
and
pop
fwait
jp
inc
mov
pop
nop
fs
sbb
stc
jb
pop
sahf
lahf
sbb
jg
rcr
sbb
jmp
and
pop
sub
sbb
jle
inc
fwait
cs
adc
xchg
scas
add
shr
shr
(bad)
out
js
(bad)
inc
mov
jg
loop
sbb
mov
jmp
jge
mov
dec
push
dec
lahf
imul
pushf
cmps
jl
dec
(bad)
mov
sar
dec
cmp
jmp
cmps
adc
mov
push
scas
test
adc
sahf
xlat
aad
xchg
mov
call
cmps
gs
bound
bound
sbb
ins
push
cmp
lds
es
arpl
retfw
inc
data16
or
dec
loopne
cmp
mov
imul
mov
lds
mov
test
test
push
jne
cmp
dec
jbe
and
in
pusha
push
pop
inc
shl
enter
call
push
add
lahf
aas
sub
add
push
mov
xor
xor
push
inc
movs
inc
mov
cmp
test
add
push
dec
stos
loop
xchg
dec
popa
pushf
fcomi
scas
adc
in
fimul
dec
cmp
inc
lock
in
sub
sbb
shl
sub
inc
aaa
and
imul
add
sar
xor
sbb
add
xchg
push
xchg
call
pusha
xchg
movs
(bad)
out
pushf
mov
fist
pop
dec
push
out
mov
loop
xlat
adc
mov
jnp
push
mov
fisub
fdiv
lods
popf
cmp
sahf
outs
ja
ret
into
and
dec
retf
mov
daa
jp
mov
dec
xchg
mov
data16
clflush
push
mov
dec
and
push
lods
retf
sbb
xor
inc
das
es
push
adc
inc
push
dec
loop
jbe
dec
daa
dec
mov
in
nop
lock
sbb
push
mov
jp
jle
arpl
popf
(bad)
repnz
xchg
(bad)
jbe
cld
jae
push
(bad)
mov
dec
cmc
or
sub
call
ktestw
stos
in
sub
and
mov
nop
(bad)
daa
mov
out
js
in
adc
or
mov
out
and
and
and
xor
and
cs
xchg
push
in
int3
mov
or
sub
cmp
js
xchg
add
inc
inc
ss
jne
and
sar
mov
loope
rol
int
jmp
and
push
xchg
repnz
gs
mov
jbe
adc
(bad)
push
inc
test
shl
mov
push
pushf
mov
in
(bad)
mov
stos
jbe
adc
nop
jnp
cmc
ss
or
pushf
(bad)
inc
xchg
add
adc
jmp
or
sahf
mov
push
jmp
rol
stc
pop
mov
add
js
adc
clc
(bad)
rol
xchg
mov
scas
jmp
xor
cmp
jne
add
loopne
(bad)
push
std
test
jge
bound
pop
imul
adc
xchg
push
repnz
and
test
jns
mov
inc
mov
fcomp
movs
fstp
mov
adc
outs
rcr
push
mov
cdq
dec
(bad)
bound
sbb
retf
ins
mov
ficom
xor
or
shl
loopne
dec
test
push
dec
cmp
jp
outs
ss
pop
jmp
push
(bad)
mov
mov
lods
es
dec
or
ss
pop
out
xchg
movs
push
leave
jl
cmp
push
sub
cmp
sbb
je
lods
or
shr
loopne
xchg
xchg
lahf
aad
nop
(bad)
mov
imul
sub
mov
nop
mov
dec
ins
outs
pop
xchg
push
jnp
mov
lahf
out
cld
jns
lods
xor
cld
fist
dec
aam
mov
cmps
movs
outs
sub
ret
popf
imul
pop
sub
push
int3
jmp
mov
cmp
add
retf
leave
clc
sub
dec
loop
sbb
repnz
pop
daa
xor
aaa
icebp
and
stc
cs
or
push
pop
sbb
(bad)
xor
pop
or
aaa
xor
sub
and
icebp
adc
jecxz
mov
fisttp
adc
pop
stos
cmps
ins
jle
cs
loopne
xchg
mov
mov
ins
cmp
test
pop
lea
stc
fnstcw
div
sbb
test
sbb
inc
test
push
leave
cld
mov
sub
test
pop
popa
adc
pop
jo
xchg
push
aad
test
push
mov
repz
lea
rcr
cwde
es
dec
scas
xchg
add
adc
mov
imul
sub
add
popf
movs
sbb
retf
out
outs
xor
(bad)
jle
mov
sub
fsubr
icebp
or
sbb
and
pop
pop
lds
(bad)
or
jmp
push
nop
lods
xchg
xchg
arpl
out
iret
jp
fstp
lods
shl
cmp
xor
add
addr16
ins
inc
jle
shr
sub
push
sub
int3
(bad)
jg
sbb
pop
xchg
cli
or
fwait
xchg
add
(bad)
adc
stos
jmp
jecxz
jo
hlt
(bad)
aad
repnz
cmp
enter
xor
push
dec
lods
push
xor
mov
mov
xchg
push
xchg
out
sub
popa
hlt
add
hlt
jmp
fiadd
xchg
dec
imul
fnstcw
add
dec
aaa
cmp
out
inc
xor
push
shl
addr16
icebp
fnsave
in
or
cmp
and
xchg
mov
and
or
popf
xor
inc
mov
pop
cmps
and
push
arpl
enter
int3
dec
scas
fst
ror
int
dec
add
mov
adc
add
cmp
adc
(bad)
iret
mov
mov
or
mov
inc
outs
mov
cmp
lods
les
imul
jno
push
pop
fdiv
mov
push
pop
test
gs
mov
dec
mov
mov
push
in
addr16
lods
jle
lods
mov
les
sbb
mov
sbb
add
call
cmp
repnz
push
je
popa
je
dec
rol
jae
or
pop
sbb
sub
sub
pushf
inc
push
repnz
sub
sbb
xor
xor
or
scas
inc
repz
push
loope
mov
cwde
rcr
and
mov
mov
push
cld
sub
mov
cmps
imul
push
stos
int
mov
adc
cmp
fidivr
xchg
and
imul
and
into
push
mov
jno
xor
or
dec
jo
lock
cmp
adc
jg
mov
xchg
(bad)
mov
fld
mov
cdq
mov
retf
imul
cmp
xchg
xor
add
int3
mov
and
mov
das
fwait
(bad)
rol
xor
imul
or
pop
xchg
xchg
mov
sar
and
and
test
iret
addr16
jp
or
retf
add
push
xchg
movs
in
pop
or
sub
inc
test
je
aaa
add
repnz
mov
mov
and
cmp
inc
push
dec
add
pushf
xlat
out
dec
sbb
ss
in
fidivr
div
arpl
(bad)
xor
jmp
mov
stos
mov
test
and
or
cdq
mov
(bad)
push
jae
adc
sub
pusha
mov
push
jb
cwde
sub
(bad)
sbb
sbb
scas
ins
inc
cwde
jle
clc
idiv
mov
lods
cmp
push
lds
cwde
and
xchg
les
add
ror
add
(bad)
push
xchg
cmp
fwait
mov
adc
hlt
(bad)
sub
jb
adc
arpl
mov
or
mov
mov
inc
mov
movs
jmp
adc
ins
mov
xchg
jns
std
adc
xchg
xchg
ja
pusha
lods
mov
jne
bound
dec
mov
into
loope
cld
sub
or
aas
idiv
pop
fiadd
(bad)
outs
adc
inc
jnp
adc
fld
movs
sahf
mov
cmp
rcl
sbb
mov
jbe
xchg
test
cmps
inc
or
mov
push
mov
popf
jne
add
(bad)
out
xor
cmp
into
jnp
mov
xchg
dec
pop
adc
pop
or
xor
sbb
mov
(bad)
popf
inc
stc
add
sub
add
adc
sbb
mov
div
mov
call
push
push
mov
into
repz
pusha
or
push
inc
mov
movs
push
push
and
push
out
cmp
push
inc
fcom
cmps
aas
mov
xchg
lds
push
lds
and
jnp
test
mov
cmp
xchg
ss
nop
sbb
rcl
jg
jg
ret
lods
xchg
sar
fs
dec
mov
cli
rcl
push
ds
push
in
add
xchg
rcr
push
jle
out
stc
nop
ds
xchg
mov
test
push
xor
dec
pop
scas
ret
leave
shr
add
stc
leave
mov
je
into
shl
and
ins
and
cld
cmps
jmp
push
add
push
and
adc
scas
sar
retf
int3
mov
repnz
out
dec
jbe
jmp
popa
in
test
fld
fwait
shl
shr
int3
iret
pop
mov
cmps
fmul
mov
test
cmp
inc
std
lea
mov
stc
(bad)
pop
retf
cmp
inc
or
and
mov
(bad)
jp
pop
xchg
mov
ret
loop
int3
outs
idiv
leave
test
mov
add
mov
arpl
xchg
in
cmp
ss
mov
in
lea
sub
inc
and
xchg
mov
imul
jb
adc
inc
mov
mov
enter
jmp
push
mov
cmp
cmp
outs
pop
mov
mov
lds
push
das
jns
sbb
iret
and
xor
mov
pop
inc
les
ret
push
or
xor
add
jecxz
lods
fdivr
jo
sbb
fnstenv
les
jge
dec
mov
mov
push
hlt
movs
pop
cmp
jecxz
imul
outs
sbb
push
enter
(bad)
stos
xchg
es
pop
mov
(bad)
xchg
dec
inc
cmps
(bad)
cld
scas
dec
dec
dec
in
cmps
loop
mov
xchg
inc
bound
aaa
outs
(bad)
out
sub
in
lods
xlat
movs
fdivr
jg
mov
and
sahf
stc
cmp
mov
enter
hlt
lea
inc
mov
mov
jl
mov
sub
jno
adc
pop
inc
call
xor
inc
xor
hlt
pop
iret
in
daa
pop
or
cli
xchg
and
repz
cli
adc
std
ror
push
push
push
xchg
xchg
or
in
cld
das
fcmovb
stc
retf
stos
sbb
lock
mov
rol
rcr
xchg
mov
jmp
test
int3
pop
cs
inc
cdq
shl
jae
sub
xlat
jb
ret
dec
jbe
or
mov
xchg
aad
(bad)
sar
jle
pop
jae
or
mov
into
lods
aam
jne
push
fwait
hlt
dec
pop
lds
rcr
outs
fisttp
add
xor
popf
mov
rcl
jnp
mov
sahf
test
ror
mov
ins
jmp
inc
or
fdivp
lock
mov
push
jle
sub
sub
jo
je
rcr
leave
inc
xor
stos
aaa
push
aaa
push
sbb
ds
jmp
cmps
cmp
xor
test
imul
lahf
push
outs
or
add
push
mov
test
and
enter
push
push
not
mov
sub
icebp
jmp
lea
pop
neg
fnstenv
jbe
lds
pop
scas
stos
repz
dec
mov
nop
pop
jmp
xchg
push
push
je
aam
lods
in
jnp
in
stos
mov
mov
cmp
movs
arpl
in
je
(bad)
cs
mov
retf
push
call
xchg
adc
xchg
push
bound
mov
sbb
pop
retf
xchg
outs
cdq
fsubp
jo
cmps
sbb
dec
dec
jecxz
sub
shl
lock
pop
jmp
sub
jecxz
inc
mov
jge
test
cdq
xor
sti
arpl
inc
dec
dec
inc
push
sbb
mov
inc
jno
mov
scas
jae
sub
loopne
scas
daa
(bad)
imul
icebp
ins
inc
in
add
xchg
in
mov
fadd
or
les
jle
lods
movs
jp
inc
and
and
int
test
xor
mov
test
lods
jmp
mov
ror
fcom
add
lea
jae
push
jl
nop
call
mov
repz
mov
dec
add
sbb
inc
mov
ret
xlat
jmp
inc
(bad)
pop
mov
loop
xchg
lods
or
das
sti
into
pop
arpl
pop
dec
pop
int3
mov
(bad)
int3
add
(bad)
jne
jae
mov
xchg
jb
outs
pusha
js
add
jmp
in
jo
(bad)
cwde
sbb
lock
ss
into
inc
jno
mov
popf
gs
(bad)
sub
icebp
pop
movs
adc
ror
ret
or
jae
(bad)
and
add
repz
push
int3
scas
in
popf
fld
lahf
sub
sbb
jp
lea
scas
xor
stc
add
aas
xchg
jmp
(bad)
les
test
sbb
xlat
add
jg
int3
sub
and
cld
arpl
sub
arpl
mov
adc
and
jne
add
xor
or
push
xchg
xchg
sahf
std
lods
push
jmp
cmp
cmp
out
hlt
mov
in
ror
cmp
dec
cwde
sahf
out
dec
mov
loope
add
add
outs
movs
ret
inc
adc
rcr
xlat
test
out
pop
in
cmp
je
das
dec
mov
sub
mov
lahf
rcl
xlat
dec
and
sub
sub
mov
sbb
sub
push
sbb
out
test
sti
nop
cmps
pop
jno
mov
mov
jne
xor
leave
sbb
stc
ror
dec
nop
ins
inc
xchg
lods
sbb
mov
and
icebp
push
jbe
sub
inc
ret
call
sub
mov
imul
push
adc
mov
push
into
ins
idiv
psubw
lds
mov
jg
xchg
shl
ja
scas
xchg
pop
lea
call
int
test
pusha
and
sub
(bad)
and
(bad)
jmp
fidiv
pop
adc
or
sbb
retf
dec
xchg
stos
clc
jno
(bad)
xor
sbb
inc
push
mov
lea
cdq
repnz
(bad)
cwde
es
sub
bnd
mul
mov
and
jmp
in
cmp
test
test
ins
or
out
cmc
mov
inc
push
clc
adc
or
arpl
das
or
enter
test
loopne
test
sub
enter
mov
sar
or
adc
mov
adc
adc
std
retf
ds
pop
jl
or
pop
pop
sbb
push
add
pushf
sub
je
or
jns
xchg
add
ror
sub
xchg
pop
adc
xchg
add
jmp
cmp
ret
sub
sti
dec
ins
mov
adc
and
scas
movs
cmp
mov
int
pop
inc
cwde
mov
mov
mov
cs
sub
bound
or
jns
mov
fsubr
iret
repz
pop
sti
sub
jmp
xchg
ss
retf
mov
xor
pusha
adc
sbb
mov
imul
mov
cmp
push
pop
or
cmp
cs
xchg
jae
fisttp
jbe
popf
push
dec
mov
or
pushf
or
xchg
aam
xchg
(bad)
loope
jg
or
in
leave
jecxz
sub
cmp
rol
ficomp
popa
mov
cli
imul
cmp
aad
std
aad
das
out
or
test
cld
neg
enter
std
test
and
jp
data16
pop
and
add
sar
xlat
cdq
pop
gs
add
push
fisttp
sbb
rol
mov
jl
add
xchg
pusha
ror
jg
(bad)
repz
in
pop
and
iret
je
dec
adc
xchg
mov
mov
es
fwait
adc
push
pop
cli
jl
out
push
jle
xchg
or
mov
sbb
adc
out
maskmovq
neg
xchg
popa
cmp
inc
arpl
mov
bound
mov
loope
jmp
fisubr
popa
ss
push
mov
add
xlat
xor
imul
call
nop
push
mov
sub
push
inc
sbb
aam
cmps
mov
bnd
add
loopne
mov
jb
xlat
xchg
(bad)
(bad)
stos
shl
lds
es
mov
(bad)
or
add
aaa
xchg
js
sub
lock
mov
dec
cmc
jne
sub
jb
push
mov
lahf
and
dec
mov
dec
ss
xchg
mov
enter
lods
test
loopne
mov
(bad)
loope
inc
adc
jae
jle
mov
int3
jge
add
hlt
dec
inc
sub
push
adc
stos
mov
jns
imul
pop
leave
add
jns
test
push
adc
scas
std
ror
enter
mov
inc
dec
shr
mov
cmp
sbb
mov
data16
pop
sub
cmps
inc
retf
outs
sub
xchg
mov
push
inc
clc
mov
fidiv
or
mov
test
loopne
add
jmp
lods
pop
mov
dec
out
lods
test
(bad)
call
jmp
sub
adc
popa
pop
in
not
jp
sbb
mov
cmp
push
call
inc
push
inc
jecxz
outs
pop
xor
mov
xchg
xor
out
fninit
imul
xchg
or
(bad)
stc
out
lods
fcomp
sbb
xlat
fidiv
mov
out
and
loope
out
cmc
cmc
shr
fadd
in
xor
iret
in
rcl
mov
shl
cmp
pop
ret
scas
sbb
jl
mov
stos
sub
xor
aas
mov
sti
and
fst
or
ret
mov
dec
or
scas
scas
xor
inc
test
cmp
js
test
pop
stos
xchg
mov
(bad)
cmp
push
jp
inc
inc
sahf
lea
test
pop
daa
mov
cdq
iret
jge
sub
ret
adc
inc
mov
pop
fisttp
rcl
lods
inc
sub
call
mov
test
lock
pop
(bad)
sub
call
xor
mov
sbb
test
xchg
push
into
in
retf
mov
jns
mov
cld
out
rcl
sbb
sub
push
adc
push
pushf
or
add
sub
std
into
stos
(bad)
mov
mov
pushf
lods
imul
cmps
add
pusha
bound
xor
or
adc
je
push
add
int
addr16
hlt
(bad)
mov
or
and
jns
xchg
test
add
(bad)
pop
enter
leave
mov
repnz
and
pop
jbe
mov
and
add
sbb
xor
push
sub
mov
cmp
outs
iret
adc
cld
adc
cmc
jb
ret
xchg
aam
xor
cwde
mov
pushf
pop
jbe
cwde
xchg
(bad)
dec
adc
sahf
xchg
push
add
mov
mov
outs
mov
leave
cmc
sbb
push
push
rcr
push
cmp
push
clc
adc
inc
daa
fild
into
push
mov
enter
mov
mov
scas
push
adc
add
push
or
repnz
mov
mov
and
fs
push
and
out
mov
mov
stos
int
cld
push
or
and
lea
sub
sbb
ret
(bad)
sahf
sub
pusha
imul
inc
call
test
xchg
and
lock
jp
in
adc
mov
adc
scas
sub
ins
loop
or
mov
aad
icebp
mov
(bad)
cmp
inc
mov
mov
jb
cld
cwde
aam
xchg
sahf
das
cs
std
jl
pop
push
push
inc
out
mov
and
and
ret
push
jmp
pusha
sub
push
dec
pop
fadd
test
pop
repz
cmp
pusha
pop
jb
sub
mov
test
loope
mov
pop
fsubp
outs
out
popa
xchg
adc
cld
mov
repz
dec
xor
fs
cld
in
shr
mov
pop
dec
popf
mov
arpl
adc
daa
add
repnz
xchg
inc
sub
movs
rol
sub
push
push
xchg
loopne
or
mov
xor
repnz
dec
call
xchg
hlt
call
mov
dec
and
dec
hlt
mov
les
inc
ret
xchg
jg
div
std
(bad)
aaa
sbb
(bad)
ins
data16
push
xchg
mov
mov
inc
or
sub
test
imul
push
add
mov
push
add
pop
mov
pushf
pop
ss
bound
jbe
mov
je
in
shl
add
or
test
scas
sub
inc
les
pop
and
clc
adc
pop
nop
call
pop
add
int3
scas
rol
popa
lods
pusha
(bad)
cmp
mov
sbb
inc
rcr
adc
test
sbb
sar
mov
in
loope
aam
dec
mov
push
in
mov
mov
sbb
std
(bad)
call
cmp
imul
pusha
xlat
and
test
repnz
sti
adc
mov
jmp
or
mov
pop
add
mov
fidivr
lods
push
dec
dec
stos
lds
mov
dec
mov
inc
sbb
sar
inc
xchg
inc
sbb
mov
(bad)
iret
pop
(bad)
rcr
dec
into
je
repz
pop
jne
xchg
mov
mov
jle
rol
cld
aad
(bad)
jge
xchg
adc
into
outs
ja
es
adc
sub
add
pop
lods
cmc
add
pop
loope
mov
out
bnd
nop
xor
out
pop
sbb
cmp
inc
shr
icebp
mov
inc
mov
mov
inc
(bad)
mov
sub
push
jae
xchg
in
xor
jmp
xchg
aas
mov
arpl
arpl
push
mov
inc
call
cmp
cld
repnz
or
ficomp
out
push
cmovp
mov
scas
stc
bound
inc
mov
push
dec
mov
arpl
lods
(bad)
mov
mov
add
cmps
push
in
jp
jecxz
mov
mov
pusha
mov
xchg
ja
and
dec
cs
jb
popa
mov
fsubrp
in
dec
cmp
dec
fisttp
out
inc
cmpxchg
ins
mov
xor
dec
cmp
inc
bnd
and
add
pop
xlat
pop
(bad)
xor
mov
sbb
jp
(bad)
dec
lds
or
xor
ret
xor
call
push
push
mov
jmp
call
fsub
and
stos
inc
mov
pop
ror
xchg
inc
and
xor
adc
ds
add
mov
fisubr
jle
outs
xchg
mov
jb
push
lock
mov
mov
push
push
(bad)
(bad)
test
push
push
mov
int3
daa
cs
push
out
das
push
mov
sbb
dec
mov
mov
hlt
ficom
in
cmp
add
push
jnp
jle
cld
ror
scas
xchg
pop
pop
stos
xchg
test
mov
loope
push
jnp
arpl
pop
loopne
jecxz
scas
mov
jb
int3
in
push
fs
xchg
mov
pop
bound
imul
(bad)
cld
inc
cwde
xchg
pop
inc
mov
mov
fidiv
aas
mov
jnp
mov
jmp
xchg
xor
xchg
or
push
push
test
xchg
clc
mov
add
cwde
jp
inc
pop
and
sub
mov
rcr
js
leave
pop
push
jmp
pop
loopne
test
jo
enter
dec
test
stos
dec
lahf
push
xchg
lahf
sbb
das
loope
xchg
dec
cmp
mov
mov
pushf
test
ret
movs
jae
dec
add
xchg
retf
mov
pop
cmc
pop
pop
int
inc
sub
outs
jge
inc
jle
jle
(bad)
and
inc
jecxz
dec
retf
mov
scas
dec
ds
ret
scas
cld
(bad)
mov
and
sub
pop
stos
fs
int
lods
xor
or
call
push
movs
in
or
ja
loope
ror
add
sti
imul
dec
sub
out
and
xchg
jmp
movs
add
sub
and
jmp
scas
repz
cmp
adc
jmp
adc
jno
and
fbld
mov
jle
fisttp
int
dec
xor
push
push
sub
pop
or
add
cld
test
sahf
outs
adc
fstp
adc
mov
icebp
repz
jmp
and
ret
mov
jle
(bad)
mov
sub
pop
jmp
xbegin
fistp
aas
scas
fild
mov
and
call
movs
daa
jle
int3
mov
movs
leave
mov
neg
aas
jle
test
std
lahf
or
cmp
lock
stos
sbb
lds
sub
rol
pushf
jle
enter
cli
push
wrmsr
not
imul
out
add
(bad)
into
add
ficom
popf
adc
xor
add
retf
pop
dec
repnz
sbb
push
cwde
sbb
sbb
les
xor
imul
push
iret
fstp
adc
fld
out
in
test
mov
das
sub
push
in
shr
ins
xchg
jno
movs
ss
and
and
pop
mov
jno
pop
xor
aaa
add
test
shl
pop
pop
cmp
dec
(bad)
js
mov
ret
(bad)
icebp
cmp
fild
int3
jmp
lods
ins
jle
pop
mov
scas
ins
loop
mov
jp
cmp
out
popf
inc
mov
dec
fwait
push
outs
sbb
les
xchg
(bad)
mov
cmp
cwde
inc
mov
dec
pop
cmp
(bad)
xlat
in
gs
xchg
mov
jb
and
inc
adc
pop
rcr
into
retf
in
adc
stc
fwait
fwait
and
inc
mov
dec
pop
test
ja
push
xchg
jge
stos
and
adc
fwait
mov
sub
call
daa
popa
mov
bound
movs
loope
xchg
int
xchg
sub
add
mov
xchg
and
aam
nop
mul
mov
sbb
out
inc
mov
(bad)
inc
and
test
fs
push
xlat
or
pop
cmp
fwait
arpl
inc
push
push
add
inc
retf
sahf
or
int3
arpl
or
or
fstp
mov
pusha
call
imul
ret
aaa
xor
mov
cs
jge
daa
xlat
fsubr
sar
pop
and
add
xchg
and
jl
push
jno
pop
movs
mov
mov
sub
jge
push
jmp
mov
xchg
mov
jle
in
pop
fnsave
mov
mov
arpl
fdiv
ret
fwait
out
cwde
dec
cmc
rcl
xor
mov
mov
push
repnz
adc
mov
jl
push
retf
jg
or
mov
aas
jle
in
scas
cwde
sbb
dec
jg
ins
cmp
xor
xor
push
cld
pop
jl
cmc
sar
in
or
mov
jb
leave
mov
sbb
rol
mov
in
inc
add
cdq
shr
aam
push
push
sti
sbb
nop
sbb
ror
sub
addr16
dec
aaa
push
pusha
cmp
xchg
push
cmp
or
cmp
pushf
jne
mov
lea
push
es
jl
mov
sub
in
jmp
outs
jge
xchg
push
out
xor
xchg
or
jmp
adc
hlt
pop
xlat
xchg
rcr
test
enter
test
scas
mov
stc
sbb
xor
sub
rol
fadd
hlt
in
ror
cmc
pop
add
into
stos
adc
out
cwde
mov
sub
jp
nop
enter
push
xchg
or
es
out
(bad)
clc
pop
mov
xchg
add
test
cmc
sbb
sub
push
pop
test
imul
cmp
xor
xchg
popa
ss
ins
repz
adc
or
mov
(bad)
lods
iret
xchg
mov
dec
aaa
jmp
adc
or
pop
jl
inc
cmp
fcom
or
les
dec
call
sub
xchg
call
in
shl
push
mov
sub
sahf
loopne
xchg
mov
leave
push
fs
jecxz
out
sbb
ror
lock
sub
fidiv
jne
sahf
ins
push
inc
cwde
ins
and
aam
loopne
add
loop
(bad)
inc
cmp
lea
cmps
push
jnp
outs
test
sbb
repnz
jle
daa
adc
lahf
lea
adc
add
pop
(bad)
pop
cdq
cmp
in
inc
mov
or
adc
daa
popw
test
mov
cmps
loope
hlt
jo
dec
push
cmp
push
xchg
sbb
or
pop
fwait
adc
popf
xchg
test
lods
push
lock
shr
les
cmps
ja
rol
or
mov
fld
mov
push
ss
xor
pop
mov
mov
stos
popa
jmp
out
iret
daa
dec
jno
jmp
mov
pop
xor
push
mov
jmp
lods
loope
mov
mov
loope
(bad)
cld
jmp
inc
call
shr
popf
dec
or
jne
rcl
scas
pop
cmp
stos
jns
inc
cmp
inc
clc
push
outs
or
inc
and
add
mov
mov
bound
inc
mov
xlat
sub
in
jmp
push
imul
fisttp
sbb
addr16
fidiv
push
jne
fwait
xlat
test
test
mov
mov
or
ss
or
fld
ret
push
mov
jb
add
bound
mov
cli
xchg
call
add
mov
mov
scas
popa
inc
xor
sbb
dec
mov
and
mov
lock
xchg
loop
dec
pop
dec
(bad)
pushf
mov
xchg
scas
mov
add
adc
mov
push
or
loope
and
int
sub
or
and
jmp
sbb
sub
adc
mov
test
pop
std
imul
sub
mov
sbb
or
add
jg
xchg
icebp
leave
mov
jae
ret
sti
stos
gs
jnp
fwait
std
mov
cmp
pusha
dec
sub
cld
jl
cmp
(bad)
cmp
adc
or
and
ret
add
dec
xchg
mov
clc
in
push
mov
sub
jmp
fwait
lods
repnz
pop
jle
stos
pop
push
clc
jb
cmp
bound
cdq
add
jns
xchg
cmc
dec
adc
fwait
retf
cs
int
xor
adc
or
pop
stc
mov
pop
daa
jae
imul
mov
fdivr
xlat
pop
jae
in
cld
inc
xchg
or
xor
mov
mov
into
arpl
cmps
inc
dec
ret
pop
mov
aaa
xchg
retf
popa
arpl
outs
dec
pop
rol
fs
adc
pop
mov
ror
outs
out
pop
sub
xchg
xor
adc
adc
stc
dec
xor
and
dec
xor
out
add
dec
movzx
mov
cmp
mov
bswap
lea
jmp
sbb
adc
cmp
jle
adc
push
repnz
inc
(bad)
ret
cmp
aas
clc
or
gs
clc
out
ins
ins
pop
hlt
scas
cmp
outs
inc
adc
shr
cmps
xor
jmp
outs
inc
ret
dec
movs
outs
(bad)
out
add
add
rcl
js
mov
xchg
outs
idiv
sbb
sub
xchg
adc
mov
clc
(bad)
icebp
out
xor
out
dec
jb
cmp
inc
sbb
sub
out
or
jo
sbb
pop
and
cmp
mov
js
es
addr16
pushf
sbb
or
adc
fs
sbb
ret
pop
pop
out
mov
add
(bad)
cli
cmp
in
adc
js
aaa
sbb
(bad)
ds
adc
or
out
mov
pushf
dec
out
jo
sbb
clc
int
push
out
push
cmp
outs
xchg
es
js
push
mov
outs
pop
cmp
jnp
cmp
daa
sbb
movs
outs
pop
adc
nop
cmp
aam
mov
mov
and
outs
xchg
in
xchg
js
jmp
xchg
seto
mov
mov
js
and
and
aas
jo
nop
mov
js
sbb
outs
inc
add
add
jae
nop
mov
mov
js
cmc
jle
(bad)
fsub
mov
xchg
rcl
xlat
cmc
mov
mov
outs
inc
adc
imul
xchg
js
mov
icebp
and
jl
adc
push
nop
cmp
movs
(bad)
aad
xchg
jecxz
nop
mov
clc
iret
pop
test
xlat
xor
nop
mov
stc
(bad)
ins
xchg
sahf
nop
js
dec
outs
inc
mov
js
pop
idiv
outs
(bad)
cmp
pop
jmp
or
outs
inc
test
dec
loop
nop
mov
mov
clc
xor
mov
xor
and
(bad)
dec
pop
in
outs
inc
pop
and
out
outs
(bad)
jl
std
outs
mov
idiv
outs
xchg
adc
ins
xchg
nop
cmp
sub
sub
movs
repnz
cmp
nop
mov
mov
mov
mov
sahf
shr
cmps
nop
clc
xor
ins
pop
cmp
cmc
nop
mov
js
and
xor
or
nop
cmp
push
nop
mov
js
rep
inc
pop
and
ins
pop
outs
xchg
and
add
or
outs
inc
(bad)
test
movs
outs
xchg
aaa
push
nop
js
inc
mov
outs
(bad)
mov
dec
bnd
outs
pop
aad
(bad)
xchg
js
sub
xchg
and
clc
xchg
xor
cmp
lock
mov
mov
clc
into
mov
outs
inc
mov
hlt
retf
addr16
in
or
clc
jbe
outs
(bad)
scas
push
sahf
outs
inc
adc
pop
and
test
nop
mov
clc
mov
pusha
call
sub
xchg
clc
daa
cs
inc
lahf
ret
fwait
adc
int3
fadd
adc
(bad)
cmps
pop
adc
clc
leave
jl
sti
mov
adc
dec
dec
call
js
adc
push
or
xchg
ds
cdq
cmp
aas
cdq
clc
fbld
ror
cdq
mov
mov
clc
sahf
mov
add
sbb
push
inc
mov
xchg
pop
jmp
sub
test
sub
mov
jmp
or
fcom
mov
add
ja
(bad)
pop
sti
mov
gs
cmp
mov
xchg
adc
lahf
dec
or
or
aad
xor
into
sbb
cmp
sub
inc
(bad)
test
or
push
mov
mov
gs
adc
mov
xor
daa
xlat
dec
pop
lahf
sub
and
in
lock
loopne
shr
adc
jmp
popf
xchg
clc
jmp
movs
push
nop
mov
clc
xchg
push
mov
xor
sub
std
addr16
clc
inc
cld
inc
jle
add
jecxz
rol
mov
sti
clc
cdq
sbb
call
add
arpl
pop
pop
jge
fdivr
js
mov
lea
sbb
clc
cli
xchg
fs
xchg
shl
inc
and
out
mov
cmovno
outs
inc
not
dec
outs
inc
es
outs
pop
mov
pop
cmp
sub
(bad)
ins
pop
std
push
mov
nop
mov
mov
hlt
and
hlt
pushf
scas
nop
mov
cmp
jecxz
inc
outs
(bad)
(bad)
aam
outs
inc
out
xchg
outs
(bad)
cmp
sbb
nop
js
je
outs
inc
int3
dec
call
push
nop
cmp
sbb
outs
pop
scas
mov
nop
clc
inc
dec
mov
lahf
ins
pop
and
xchg
clc
mov
daa
pop
ins
xchg
cmp
jns
clc
cmp
ins
xchg
xchg
nop
mov
cmp
jmp
or
xchg
mov
sbb
sti
mov
js
sbb
dec
outs
int3
add
mov
imul
loop
inc
pop
xchg
cmps
add
xlat
rcr
xchg
mov
inc
sbb
js
xchg
add
xchg
mov
add
push
and
call
add
pop
xor
adc
cmp
cli
inc
jmp
sub
loope
xchg
adc
nop
mov
clc
xor
mov
pop
or
cmp
nop
cmp
jne
clc
pop
xchg
xlat
outs
(bad)
sbb
sbb
xor
add
(bad)
cdq
ins
pop
cmp
(bad)
xlat
sbb
xlat
(bad)
nop
mov
clc
scas
addr16
(bad)
outs
pop
test
nop
js
ins
lds
hlt
stos
lds
cmp
nop
cmp
push
inc
nop
cmp
addr16
cmp
jo
outs
xchg
nop
js
iret
outs
outs
inc
lds
nop
clc
pushf
in
mov
xchg
(bad)
es
mov
js
shr
cmc
nop
cmp
call
cmps
nop
cmp
enter
aam
imul
pop
jecxz
nop
mov
js
ret
cs
outs
inc
mov
sbb
xchg
js
rol
std
pop
fcom
adc
dec
in
cld
mov
pop
push
(bad)
rcr
outs
pop
cs
out
xchg
js
jb
outs
inc
inc
scas
lods
outs
xchg
adc
nop
js
nop
in
jle
nop
cmp
repnz
pop
sbb
gs
inc
or
dec
outs
inc
int3
fisubr
retf
dec
nop
cmp
je
mov
js
jae
ins
xchg
xor
nop
clc
cmp
addr16
cmp
mov
js
test
(bad)
mov
bound
nop
mov
clc
jecxz
outs
pop
adc
nop
js
fs
inc
call
popf
addr16
ins
xchg
dec
test
jnp
pop
pop
int3
leave
nop
mov
mov
clc
sbb
es
xchg
lea
mov
clc
inc
in
out
outs
inc
lea
outs
inc
sbb
push
outs
xchg
push
fist
xchg
js
pop
icebp
outs
inc
dec
cmp
stos
xchg
js
sub
outs
(bad)
movs
dec
sub
jmp
inc
nop
mov
cmp
mov
fsubr
dec
jno
nop
mov
clc
test
lods
(bad)
nop
mov
clc
mov
stc
sub
(bad)
shr
outs
inc
mov
lahf
out
inc
inc
adc
scas
pop
inc
adc
scas
out
pop
push
mov
loope
out
inc
fwait
lds
dec
in
pop
pop
mov
adc
mov
js
sub
out
(bad)
pmaddwd
in
xchg
sbb
mov
mov
clc
bound
in
xchg
adc
push
mov
cmp
sbb
inc
inc
test
dec
push
xor
pop
test
sbb
cld
outs
inc
dec
ja
outs
pop
out
dec
nop
clc
retf
mov
jae
mov
cld
je
nop
mov
cmp
jb
mov
xor
(bad)
and
(bad)
lock
and
clc
scas
test
sub
pop
ins
pop
stos
add
xchg
xchg
clc
scas
sbb
(bad)
push
adc
cmp
nop
js
sahf
pop
ins
xchg
(bad)
cmp
xchg
clc
lods
into
outs
xchg
xchg
xor
cmp
cmp
outs
(bad)
int
outs
pop
imul
sbb
or
nop
cmp
sbb
xchg
js
xlat
outs
inc
fisttp
xchg
adc
stc
jns
nop
clc
cmp
call
nop
clc
sbb
out
pop
push
dec
pop
outs
mov
mov
mov
dec
push
sub
inc
clc
jp
outs
xchg
das
aas
nop
clc
jbe
cmp
ss
mov
(bad)
xchg
or
popf
xchg
clc
dec
jb
(bad)
stc
call
retf
nop
mov
clc
jno
dec
outs
inc
dec
jo
xor
gs
sub
xchg
nop
clc
fcom
scas
outs
(bad)
cmps
mov
and
add
iret
outs
inc
or
ins
xchg
mov
mov
repnz
ins
pop
imul
lods
nop
js
or
inc
xor
shr
outs
pop
js
inc
xchg
js
and
outs
inc
jp
mov
sub
mov
mov
clc
sub
ss
xchg
movs
dec
nop
mov
clc
outs
(bad)
inc
nop
pop
mov
inc
outs
xchg
push
retf
nop
cmp
push
xchg
js
inc
loope
inc
imul
xchg
js
(bad)
jmp
clc
psubusb
or
fst
xor
cmp
stc
nop
mov
cmp
mov
fistp
dec
add
push
loop
outs
inc
jmp
outs
(bad)
mov
in
pop
or
adc
pusha
bnd
push
inc
xchg
js
mov
outs
inc
mov
ret
data16
nop
mov
mov
js
arpl
ins
xchg
xchg
nop
mov
cmp
iret
xchg
js
xlat
sbb
inc
push
outs
(bad)
jmp
lock
cmp
mov
(bad)
jmp
push
movs
outs
xchg
aaa
inc
nop
mov
clc
xor
test
push
nop
mov
js
je
push
bound
ins
xchg
mov
nop
mov
push
cdq
inc
outs
(bad)
ins
xor
or
mov
cmp
fs
js
cwde
jmp
sbb
xchg
or
cmp
xor
(bad)
pop
js
add
jmp
xor
jmp
pop
jbe
call
adc
pusha
arpl
clc
movs
push
push
inc
xchg
cmp
mov
aad
(bad)
call
cmps
xchg
imul
imul
sub
xchg
xchg
js
inc
imul
(bad)
imul
xchg
adc
pop
imul
mov
pushf
xor
out
pop
and
(bad)
xchg
cmp
stc
or
je
call
sti
xchg
mov
js
mov
imul
pop
inc
push
xchg
mov
mov
clc
(bad)
fiadd
xchg
pop
cmp
mov
clc
xchg
cmp
sahf
fldcw
inc
jmp
xor
add
xor
imul
jae
movzx
test
clc
shl
shl
jmp
jae
mov
lea
test
cmp
mov
cmp
stc
cmc
test
jmp
inc
test
jmp
movzx
movzx
cdq
mov
cmp
cmp
idiv
bsr
bt
mov
cmp
jmp
sub
test
sub
or
mov
cmp
stc
shr
sub
and
mov
mov
rcl
or
btc
lea
stc
cmc
or
cmc
mov
cmp
stc
jmp
mov
pop
jmp
adc
dec
and
cmp
jle
pop
jmp
(bad)
outs
mov
(bad)
dec
(bad)
dec
ins
pop
pop
add
nop
js
add
outs
inc
pushf
movs
icebp
outs
pop
or
dec
nop
clc
xor
outs
inc
push
fadd
int3
outs
inc
mov
js
pop
push
fsub
js
xor
(bad)
cs
js
inc
sub
add
push
and
xchg
pop
pushf
js
mov
xchg
sbb
pushf
clc
pop
and
xchg
xchg
adc
xor
mul
idiv
test
or
scas
popa
idiv
cwde
mov
imul
clc
mov
data16
cmp
xchg
xor
cli
(bad)
cmp
jmp
inc
cmp
jmp
or
adc
and
jno
pop
inc
rcr
aaa
push
adc
add
aaa
xchg
adc
or
sbb
cmp
pop
adc
out
adc
lahf
out
dec
sbb
mov
push
mov
push
adc
repz
popf
dec
adc
js
in
jns
dec
fst
dec
lahf
or
and
push
dec
test
aad
pop
sub
cmp
adc
(bad)
mul
inc
cmp
mov
dec
shl
dec
mov
dec
in
pop
cmp
dec
mov
dec
ins
test
cmp
push
adc
jp
and
pop
dec
mov
dec
fld
push
add
int3
cmp
inc
adc
dec
call
dec
lea
dec
inc
fcomp
dec
mov
fwait
pop
retf
cmp
outs
adc
cmp
dec
mov
dec
mov
fisub
int
dec
cmps
dec
adc
ja
push
push
cmp
mov
dec
jg
(bad)
icebp
mov
push
adc
pop
inc
rcl
cmp
push
adc
clc
pop
add
cmc
pop
adc
add
fstp
pop
adc
into
pop
daa
xchg
cmp
mov
dec
leave
push
or
dec
xchg
dec
inc
push
adc
movups
popf
aas
icebp
out
pop
dec
mov
dec
mov
mov
dec
bound
dec
mov
sub
and
dec
fwait
jae
scas
push
pop
cmp
pop
adc
mov
nop
sbb
pop
dec
mov
dec
mov
out
push
dec
mov
adc
jge
lock
cmp
mov
dec
or
pop
dec
mov
dec
pop
test
adc
ds
dec
mov
dec
fnstenv
test
or
sub
js
push
call
shr
sub
mov
btc
cwd
movzx
cmp
cmp
jmp
sbb
push
mov
sub
outs
xor
imul
cli
nop
mov
clc
(bad)
outs
pop
in
rcl
cmp
jb
outs
(bad)
jecxz
loopne
inc
jecxz
cli
outs
(bad)
sub
outs
pop
push
push
adc
outs
(bad)
and
cwde
xchg
clc
out
ins
outs
inc
fmul
pop
lods
test
mov
pop
pop
adc
cmp
adc
sub
in
pop
pop
push
repnz
mov
js
or
repz
adc
mov
js
xchg
out
inc
and
mov
movs
repz
mov
out
inc
(bad)
jge
out
inc
cmp
popa
out
inc
lods
stos
pushf
out
xchg
jo
adc
imul
(bad)
(bad)
adc
push
leave
adc
mov
mov
adc
inc
aad
out
inc
dec
imul
mov
pop
adc
loope
sub
adc
clc
jb
sbb
(bad)
popf
cwde
in
xchg
(bad)
call
and
(bad)
test
not
js
cmp
repnz
jp
(bad)
mov
nop
in
pop
pop
inc
adc
push
xchg
bound
clc
mov
out
inc
xchg
std
xlat
out
(bad)
lods
movs
movs
repz
adc
(bad)
ficomp
shr
inc
test
in
pop
cmc
(bad)
adc
mov
jmp
add
xchg
adc
clc
cdq
(bad)
out
inc
mov
call
adc
out
std
out
inc
mov
mov
inc
out
xchg
popa
leave
adc
jl
add
js
arpl
out
inc
inc
pxor
inc
aas
out
pop
and
adc
xchg
jle
inc
movs
xchg
ins
adc
je
inc
test
cmp
jmp
cmc
push
xchg
js
(bad)
outs
(bad)
js
aam
pop
ss
nop
cmp
adc
mov
jne
clc
(bad)
pushf
and
xchg
rcr
stc
aam
xchg
js
sub
mov
repz
dec
fst
sbb
daa
scas
pop
outs
(bad)
sbb
jae
inc
loopne
sbb
add
add
pop
dec
sahf
nop
clc
xchg
adc
outs
(bad)
nop
dec
es
pop
les
call
outs
(bad)
retf
mov
(bad)
mov
aam
nop
mov
clc
aaa
add
jge
js
les
dec
adc
outs
xchg
fs
mov
mov
clc
stc
popa
outs
inc
or
and
data16
stc
in
popf
nop
mov
mov
push
and
xchg
dec
push
nop
cmp
enter
xor
outs
(bad)
cmp
call
popf
nop
clc
popf
inc
push
outs
xchg
mov
inc
sub
mov
adc
and
mov
test
mov
lea
cmps
js
mov
sbb
lock
cmp
push
stc
push
cmp
mov
jae
test
push
sar
add
aaa
test
hlt
fiadd
jnp
and
mov
lahf
cmps
cmp
mov
clc
pop
sub
inc
rol
or
(bad)
cwde
bound
jnp
lahf
mov
call
xchg
mov
clc
test
pop
test
sahf
sbb
loopne
xchg
into
bound
inc
jmp
jae
mov
mov
mov
lea
stc
lea
cmp
cmp
jmp
jmp
add
add
sbb
add
add
or
xor
xor
push
xor
outs
xor
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
jg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ins
xor
test
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
jg
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
loopne
in
xor
cdq
fnsave
jns
pop
cmp
pop
cmp
jno
jp
sar
jns
hlt
cmp
cmp
cmp
cmp
add
xchg
add
add
add
js
add
pop
xor
xor
xor
xor
jae
test
int
fnsave
loop
add
xor
xor
mov
ss
ss
mov
cmp
cmp
cmp
cmp
cmp
cmp
fnstsw
icebp
cmp
cmp
pop
cmp
mov
cmps
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
add
add
add
sub
add
jnp
xor
xor
xor
cmp
cmp
cmp
cmp
jns
cmp
cmp
cmp
cmp
and
add
cmp
jmp
mov
loopne
in
es
xor
xor
xor
xor
aaa
cmp
push
add
pop
add
add
xor
xor
xlat
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
and
es
cs
ss
ds
ds
ds
ds
ds
ds
ds
ds
bound
sar
add
pusha
add
pushf
add
add
push
aaa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
stc
xor
sub
ss
ss
jmp
aaa
pop
aaa
gs
xor
shl
in
aaa
push
cmp
imul
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
cmp
and
inc
ds
ds
xchg
ds
add
add
add
add
push
xor
xor
jmp
xor
xor
sbb
cmp
cmp
sub
ds
ds
ds
aas
and
jnp
add
add
cmp
cmp
dec
cmp
sar
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
sbb
popa
xor
xor
xor
mov
add
int3
aas
add
add
add
fwait
xor
xor
xor
xor
and
mov
xor
sub
cmps
ss
aaa
retf
cmp
fistp
push
cmp
lods
mov
add
add
add
shl
dec
xor
push
xor
pop
xor
popa
xor
imul
jne
jns
jge
xor
lea
xchg
xor
xor
xor
xor
xor
xor
xor
loop
arpl
in
gs
cmp
cmp
cmp
cmp
cmp
cmp
sub
add
rol
cmp
add
and
iret
xor
xor
mov
xor
ss
pusha
aaa
(bad)
lahf
cmp
cmp
cmp
cmp
outs
cmp
cmp
cmp
cmp
cmp
rol
add
add
add
xor
xor
sbb
add
loopne
add
add
mov
xchg
xor
aam
pop
xor
xor
fnstenv
xor
ss
lods
ss
aaa
inc
cmp
xchg
jl
lods
cmp
cmp
cmp
cmp
cmp
cmp
jns
popf
cmp
dec
ds
ds
ds
aas
sub
cmp
push
aas
cwde
aas
movs
aas
mov
(bad)
aas
fidivr
add
add
add
and
add
jne
add
sub
adc
xchg
cmp
cmp
cmp
cmp
push
aas
xchg
aas
add
add
add
sbb
add
aas
xor
mov
adc
add
or
jne
mov
ds
add
push
add
add
xor
xor
movs
xor
xor
mov
mov
jmp
push
outs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
mov
add
add
sub
add
inc
xor
xor
xor
xor
xor
pop
aaa
inc
cmp
or
cmp
add
xor
add
add
out
icebp
xor
adc
sbb
(bad)
cmp
cmp
cmp
cmp
cmp
adc
test
inc
add
and
add
adc
and
xor
xchg
cmp
cmp
sbb
push
add
inc
add
add
cmp
cmp
xor
xor
xor
xor
xor
jle
adc
imul
out
cmp
cmp
cmp
cmp
cmp
cmp
jecxz
push
aas
movs
aas
add
add
add
add
std
xor
xor
xor
xor
xor
fdiv
mov
cmp
test
fwait
cmp
cmp
cmp
jecxz
inc
cmp
cmp
int3
cmp
add
add
add
or
cmp
imul
xor
xor
xor
xor
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
pop
sbb
inc
aas
add
add
add
pop
xor
fnstenv
in
adc
sub
xchg
popa
ss
aad
in
sub
push
aaa
js
cdq
aaa
add
sbb
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
movs
ds
lahf
aas
in
add
add
xchg
xor
xor
xor
xor
sub
cmp
mov
pop
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
aaa
aas
loop
add
add
xor
mov
or
pop
xor
xor
sbb
push
cmp
cmp
gs
cmp
cmp
cmp
add
add
add
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
cmp
mov
cmp
cmp
cmp
cmp
fistp
pop
aas
add
add
add
je
add
inc
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
sbb
push
cmp
arpl
ins
cmp
jle
scas
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jg
cld
cmp
cmp
sbb
ins
cmp
data16
ja
(bad)
aas
mov
add
cmp
xor
xor
xor
xor
xor
xor
mov
scas
xor
xor
xor
xor
xor
or
jp
xchg
cmp
cmp
adc
cmp
js
idiv
cmp
dec
cmp
mov
cmp
cmp
push
ds
xchg
ds
xlat
ds
aas
pop
aas
es
sub
aas
inc
aas
dec
aas
push
aas
push
aas
pop
aas
gs
ins
aas
jae
jp
cmp
xchg
aas
xchg
aas
cdq
aas
popf
aas
mov
aas
lods
aas
mov
mov
mov
aas
sar
loope
jmp
add
add
add
pushf
add
add
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
push
xor
imul
xor
xchg
xor
sbb
push
ss
ss
aaa
push
aaa
pop
aaa
pusha
aaa
jns
xchg
aaa
cmps
aaa
mov
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jmp
cmp
ins
add
add
xor
xor
xor
xor
xor
xor
xor
xor
pop
ss
aaa
lods
aaa
mov
(bad)
aaa
aad
out
repnz
stc
aaa
dec
cmp
cmp
cmp
cmp
js
mov
scas
cmp
cmp
cmp
adc
and
cmp
popf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmp
add
push
xor
xor
xor
xor
xor
les
aaa
(bad)
aaa
(bad)
popa
cmp
cmp
cmp
cmp
add
add
add
pop
add
add
xor
xor
xor
xor
xor
xor
xor
xor
sti
xor
js
mov
mov
aaa
sbb
aaa
xchg
aaa
stos
aaa
in
in
aaa
add
inc
cmp
cmp
cmp
cmp
cmp
loopne
add
add
add
jo
add
xchg
xor
ins
xor
mov
xor
xor
jg
xchg
fdiv
std
ss
aaa
ins
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cmp
bound
mov
cmp
add
add
dec
add
add
xor
xor
cmp
inc
ss
ss
or
aaa
test
mov
aaa
out
sub
cmp
dec
cmp
cmp
cmp
cmp
cmp
dec
add
add
add
add
xor
outs
xor
xor
xor
xor
xor
aas
xor
xor
fdiv
in
xor
xor
xor
xchg
mov
(bad)
xor
xor
xor
xor
xor
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outs
xor
ret
xor
pop
ss
and
pop
imul
mov
mov
aaa
push
aaa
cmp
dec
aaa
push
aaa
mov
fwait
aaa
scas
aaa
shl
out
in
aaa
daa
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
sbb
push
cmp
cmp
popf
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
xor
inc
cmp
jge
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
test
cmp
and
dec
aas
je
xchg
aas
cmps
aas
mov
aas
cli
aas
add
add
add
xor
xor
xor
xor
xor
xor
outs
xor
jmp
xor
dec
xor
xor
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aas
xor
xchg
shl
aaa
out
(bad)
cmp
dec
cmp
(bad)
sub
ins
aas
mov
fnstsw
add
add
add
add
push
xor
xchg
lods
xor
xor
xor
xor
mov
xor
xor
push
xor
xor
xor
xor
xor
xor
xchg
xor
push
ss
int
cmc
ss
aaa
int
adc
inc
cmp
cmp
cmp
ds
cmp
aas
add
add
add
add
xor
xor
xor
cmp
cmp
cmp
cmp
add
sub
add
xor
xor
xor
jno
jbe
inc
ss
aaa
div
cld
aaa
(bad)
cmp
cmp
cmp
add
add
test
imul
sbb
cmp
cmp
mov
add
xchg
push
xor
xor
out
xor
xor
out
sub
pop
ss
fdiv
and
xchg
aaa
cmp
cmp
test
out
lock
imul
sar
in
std
cmp
inc
aas
pop
aas
sahf
aas
cmps
aas
sar
mov
add
xor
xor
xor
test
xchg
xor
xor
xor
xor
xor
xor
dec
xor
mov
enter
out
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
stos
xor
and
cs
push
movs
ss
shl
xor
dec
aaa
mov
popf
aaa
mov
clc
aaa
adc
and
mov
add
add
sub
add
(bad)
xor
xor
adc
loopne
xor
cwde
cmp
cmp
cmp
cmp
pop
aas
add
rol
add
add
sbb
xor
clc
xor
ss
mov
cmp
cmp
cmp
cmp
imul
jbe
mov
aas
in
aas
add
add
add
test
add
mov
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jne
shl
pop
xor
xor
xor
xor
xor
xor
repnz
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
jb
mov
add
add
push
add
add
xor
xor
xor
xor
xor
xchg
xor
aam
test
fnstenv
jmp
cmp
cwde
cmp
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
mov
ds
fdivr
cli
aas
add
add
cmp
add
dec
xor
mov
xor
mov
jno
stc
xor
xor
or
and
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
add
enter
sbb
and
sub
dec
xor
xor
xor
xor
xor
fdiv
fnsave
sbb
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
xor
daa
ss
inc
ss
mov
popf
shl
fidiv
adc
aaa
pop
aaa
outs
aaa
jae
scas
aaa
mov
aaa
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
xchg
xchg
cmp
cmp
cmp
bound
jno
cmps
cmp
cmp
mov
mov
idiv
sbb
cmp
cmp
cmp
cmp
mov
outs
ds
add
add
dec
add
add
xor
xor
xor
inc
xor
pop
cmp
cmp
cmp
cmp
cmp
bound
sar
ds
movs
ds
aas
and
aas
stos
aas
jmp
xor
add
add
xor
xor
aaa
cli
aaa
inc
cmp
stos
cmp
cmp
cmp
cmp
das
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
or
dec
xor
mov
mov
outs
xor
xor
xor
xor
xor
xor
loop
xchg
cmp
cmp
cmp
cmp
jns
jmp
cmp
pop
aas
jp
fwait
aas
add
add
add
(bad)
xor
xor
xor
xor
xor
xor
push
jnp
test
xchg
xor
xor
xor
ret
cmp
cmp
cmp
cmp
cmp
pusha
add
sub
add
and
dec
xor
shl
ss
cmps
add
ds
push
aaa
retf
aaa
cli
cmp
ds
aas
add
add
add
jns
movs
xor
xor
(bad)
xor
xor
xor
fdivr
ja
pop
xchg
fdivr
dec
aas
test
sahf
aas
add
add
add
adc
out
lock
xor
xor
xor
add
cmp
dec
ss
ss
jge
xchg
ss
in
ss
aaa
jnp
scas
aaa
shl
aaa
push
add
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
ins
cmp
jp
cmp
cmp
les
int
add
push
cmp
adc
sbb
push
cmp
cmp
cmp
dec
cmp
push
cmp
cmp
ja
jge
xchg
xchg
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
push
cmp
cmp
ds
imul
mov
xor
xor
xor
pusha
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jl
xor
xor
xor
call
xor
test
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
daa
cmp
push
cmp
jge
pushf
cmp
cmp
cmp
cmp
cmp
jbe
jnp
jmp
mov
add
sub
add
add
add
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
add
add
add
cld
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
jg
mov
mov
xor
int3
xor
push
ss
sub
sub
xor
mov
xlat
aaa
xor
cmp
adc
cmp
cmp
cmp
cmp
cmp
dec
cmp
push
cmp
pop
cmp
push
cmp
add
push
cmp
cmp
mov
retf
cmp
cmp
cmp
int3
aas
add
add
add
je
add
and
xor
retf
xor
xor
xor
xor
fidiv
in
pop
xor
xor
ss
in
push
and
stos
cmp
cmp
cmp
dec
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
and
add
add
add
pushf
add
add
xor
sub
aaa
xor
xor
xor
js
xchg
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
outs
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
idiv
aaa
cmp
cmp
cmp
jne
mov
aas
add
add
add
test
add
sub
lods
xor
xor
xor
xor
xor
xor
xor
xor
ins
ss
movs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
sar
ds
ds
sahf
lods
ds
aas
popa
aas
outs
aas
jg
lahf
aas
add
add
add
and
add
xor
xor
cmp
cmp
cmp
add
and
inc
add
add
ja
lea
or
shl
xor
xor
ja
mov
lds
add
ds
and
mov
cmp
cmp
mov
or
cmp
cmp
add
xor
jo
add
mov
(bad)
xor
xor
xor
jg
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
xor
xchg
xor
mov
xor
std
xor
sbb
ds
test
mov
lahf
movs
shl
fnstenv
loope
stc
ss
pop
aaa
sub
sub
aaa
inc
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
popa
aaa
data16
ins
aaa
je
jns
jg
xchg
mov
xchg
aaa
call
aaa
mov
mov
aaa
retf
aaa
shl
fdiv
fidiv
out
jmp
icebp
aaa
stc
aaa
(bad)
aaa
add
or
adc
pop
cmp
cmp
sub
xor
aaa
cmp
inc
cmp
push
cmp
pop
cmp
imul
cmp
jle
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
cmp
cmp
jne
jp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
mov
cmp
cmp
cmp
cmp
test
mov
add
add
add
xor
xor
xor
xor
xor
arpl
imul
xor
xor
xor
xor
imul
xor
sbb
daa
cmp
sar
loopne
xchg
cmp
cmp
cmp
ret
aas
xlat
aas
add
add
add
add
or
addr16
xor
xor
xor
xor
test
mov
enter
loopne
call
xor
xor
xor
xor
xor
aaa
adc
cmp
cmp
cmp
movs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
arpl
mov
out
idiv
iret
aas
in
lock
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
arpl
mov
mov
sub
xor
xor
pop
xor
cwde
xor
xor
xor
xor
xor
xor
xor
xor
cmp
sahf
add
add
add
add
add
xor
add
add
add
add
xor
jb
jg
test
add
arpl
jns
test
mov
cmps
xor
xor
xor
xor
cmp
xor
call
xor
xor
xor
xor
xor
xor
xor
and
inc
ss
ss
cwde
ss
shl
repnz
mov
cmp
cmp
outs
cmp
cmp
add
mov
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shl
aaa
sbb
push
aaa
mov
shl
loope
or
adc
sbb
and
cmp
inc
cmp
js
retf
cmp
cmp
cmp
cmp
cmp
cmp
out
(bad)
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
ds
sar
ds
sar
fidivr
add
add
add
pop
xor
xor
xor
xchg
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
aaa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
sar
dec
aas
mov
sar
aas
add
add
pop
xor
xor
(bad)
xor
xor
xor
aaa
ss
ss
sub
jae
xor
push
cmp
mov
cmp
ds
sar
add
rol
add
add
xor
xor
xor
xor
xor
xor
xor
loope
in
cmp
push
cmp
jae
cmc
cmp
cmp
cmp
xchg
cmp
cmp
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
lods
aas
add
add
pop
add
add
repnz
xor
out
sti
xor
xor
xor
xor
xchg
ss
xor
push
aaa
mov
aaa
hlt
aaa
dec
cmp
cmp
cmp
cmp
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
aas
inc
aas
pop
aas
jle
add
add
add
dec
add
add
ja
mov
xor
xor
sub
mov
sub
xor
xor
mov
fdiv
xor
fidiv
add
or
jnp
nop
aaa
mov
add
cmp
pop
aas
add
add
add
mov
xor
xor
xor
xor
xor
xor
xor
ins
xor
mov
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
stos
xor
mov
xor
pop
shl
or
mov
xchg
aaa
test
lods
aaa
out
sbb
cmp
xchg
cmp
cmp
cmp
cmp
cmp
jno
mov
lock
cmp
cmp
cmp
cmp
nop
cmp
cmp
add
add
add
xor
in
adc
xor
xor
popa
cmp
imul
jne
cld
cmp
cmp
ins
cmp
adc
add
cdq
xor
xor
push
xor
sbb
es
mov
mov
and
add
xor
test
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
add
add
add
xor
ss
nop
ss
aaa
adc
cmp
cmp
cmp
cmp
push
cmp
ins
cmp
cmp
pop
cmp
add
or
cmp
cmp
aas
xor
mov
add
add
add
adc
xor
jbe
xchg
mov
ret
xor
xor
xor
xor
xor
cmp
mov
cmp
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
ds
add
or
cmc
xor
repz
xor
jg
fwait
xor
or
pop
ss
ss
ss
ss
ss
aaa
fnsave
sbb
inc
cmp
jne
mov
cwde
cmp
cmp
cmp
jo
mov
sahf
cmp
cmp
cmp
cmp
cmp
push
cmp
test
popf
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
scas
cmp
outs
aas
ja
cmp
aas
pushf
aas
stc
aas
add
add
add
add
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
inc
cmp
mov
cmp
cmp
or
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
add
add
inc
ss
push
cmp
cmp
in
cmp
pop
aas
sub
xor
inc
aas
push
aas
pop
aas
(bad)
aas
(bad)
aas
fdivr
repz
add
add
add
mov
xor
xor
xor
xor
xor
xor
mov
mov
xor
add
ss
ss
xchg
ss
cmps
ss
shl
fidiv
call
ds
and
mov
add
nop
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
aaa
cmp
dec
cmp
test
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
jg
(bad)
cmp
cmp
aas
fs
je
jl
add
add
add
xor
xor
pop
xor
jno
xor
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
ss
test
data16
jo
jp
xchg
aaa
cmps
cmp
cmp
cmp
cmp
je
mov
xchg
cmp
cmp
inc
cmp
mov
cmp
add
and
mov
jmp
add
add
aaa
xor
push
xor
(bad)
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
in
daa
sar
fstp
jmp
aas
cmp
dec
aas
push
aas
mov
add
add
add
outs
xor
xor
xor
xor
xor
xor
mov
cmp
xchg
pop
aas
pusha
aas
imul
aas
jge
add
add
add
add
xor
xor
xor
xor
xor
aaa
adc
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
mov
lea
cmp
cmp
cmp
cmp
cmp
add
loopne
add
cmp
xor
xor
xor
in
pop
xor
ss
mov
ss
shl
(bad)
out
out
add
or
adc
sbb
and
sub
aaa
dec
aaa
push
aaa
mov
cmp
cmp
call
cmp
cmp
cmp
ins
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
cmp
cmp
cmp
cmp
xor
cmp
js
mov
scas
cmp
sar
ds
ds
or
jo
add
add
add
add
xor
pop
xor
jne
test
xchg
xor
jb
test
xor
xor
xor
xor
xor
xor
xor
cmp
push
cmp
cmp
cmp
push
cmp
dec
cmp
cmp
jge
add
push
add
add
les
jns
aad
sub
sbb
xchg
ds
aas
cmp
adc
add
add
xor
xor
xor
xor
ss
xchg
mov
div
push
inc
cmp
lods
cmp
cmp
cmp
cmp
add
cmp
ret
cmp
loopne
jmp
cmp
and
pop
outs
cmp
sbb
cli
aas
add
add
push
add
add
and
aaa
xor
jne
jg
test
test
les
retf
xor
xor
xor
xor
xor
xor
xor
xor
in
repz
lahf
xor
xor
xor
xor
and
cmp
push
aaa
(bad)
cmp
cmp
mov
cmp
idiv
das
cmp
les
idiv
cmp
cmp
sub
leave
ds
aas
mov
add
add
push
add
add
add
xor
scas
xor
xor
xor
xor
xor
xor
stos
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
das
xor
imul
xor
repz
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popa
cmp
xchg
lea
xchg
cmp
cmp
cmp
cmp
cmp
cmp
ins
cmp
mov
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
jbe
jl
cmps
ds
ds
ds
aas
retf
aas
add
add
add
add
xor
xor
arpl
shl
(bad)
xor
icebp
xor
xor
xor
xor
xchg
xor
out
out
xor
imul
xor
(bad)
xor
(bad)
jne
test
(bad)
ss
sub
ins
aaa
mov
movs
aaa
(bad)
aaa
int
in
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
fstp
loope
out
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
aad
pop
ds
ds
and
add
add
add
add
add
xor
xor
xor
xor
xor
jg
lahf
xor
xor
xor
xor
push
xor
cmps
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
push
ss
ss
xchg
movs
ss
aaa
xor
jae
(bad)
aaa
xchg
aaa
test
in
aaa
pop
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
fdivr
jmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
(bad)
cmp
xchg
in
idiv
sbb
das
aas
jae
cmps
aas
add
add
add
add
add
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
outs
xor
mov
xor
dec
ss
sub
xor
push
aaa
outs
aaa
add
adc
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
xchg
cmp
cmp
cmp
cmp
jl
xchg
cmp
cmp
cmp
jb
mov
retf
cmp
cmp
cmp
lahf
ds
into
aas
sar
(bad)
aas
fidivr
fidivr
loop
out
jmp
jo
add
xor
xor
xor
or
xor
xor
xor
xor
adc
sub
xor
data16
xor
xor
xor
xor
fwait
xor
xor
xor
xor
xor
xor
xor
xor
and
xor
inc
xor
push
xor
sbb
ss
arpl
imul
repnz
add
push
aaa
or
xor
cmp
cmp
cmp
cmp
cmp
pusha
ds
(bad)
ds
xor
inc
aas
fistp
add
add
adc
sbb
and
pop
xor
xor
xor
push
xor
inc
xor
xor
xor
xor
xor
jno
xchg
xor
xor
xor
xor
xor
xor
jae
mov
ss
std
and
push
aaa
xchg
aaa
retf
aaa
popa
cmp
cmp
cmp
sahf
cmp
cmp
cmp
cmp
cmp
cmp
sar
cmp
mov
addr16
test
add
add
das
aaa
bound
mov
mov
push
cmp
jecxz
out
jmp
out
aas
repz
idiv
sti
aas
add
add
mov
pop
xor
mov
xchg
xor
xor
xor
cwde
test
stc
cmp
cmp
cmp
cmp
mov
ds
ds
ds
and
push
aas
data16
mov
popf
aas
mov
mov
aas
fdivr
loop
lock
stc
aas
add
add
add
or
cmp
dec
xor
xor
xor
xor
dec
ss
lds
push
aaa
test
pop
cmp
cmp
pop
cmp
cmp
cmp
aas
cmp
aas
in
add
add
push
add
add
add
xor
xor
xor
jg
stos
xor
xor
mov
fnstsw
pop
cmp
aaa
cmp
cmp
ds
push
add
add
add
xor
xor
cmp
cmp
cmp
cmp
pop
cmp
add
add
push
add
add
xor
je
test
fwait
xor
xor
xor
xor
xchg
mov
xor
push
xor
xor
xor
xor
xor
xor
xor
fdiv
pop
ss
je
push
cmp
cmp
test
aas
jmp
add
add
leave
xor
xor
xor
xor
or
inc
xor
xor
xor
dec
aaa
jg
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
and
inc
ds
ds
aas
add
add
pop
add
xor
ins
xor
xor
xor
test
in
add
and
xor
mov
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
popa
xor
das
ss
fidiv
push
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
js
cmp
add
add
pop
add
add
add
xor
xor
xor
push
xor
scas
xor
aaa
dec
aaa
pop
aaa
bound
test
xchg
aaa
popf
aaa
or
scas
cmp
cmp
add
pop
add
xor
xor
xor
xor
xor
push
xor
jns
xor
xor
xor
xor
xor
test
pushf
xor
xor
and
xor
xor
xor
xor
xor
xor
inc
xor
js
mov
add
ss
pop
cmp
pushf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
cmp
push
ds
dec
ds
ds
test
xchg
ds
sar
(bad)
fstp
loopne
out
ds
ds
sbb
pop
aas
and
aas
push
aas
imul
aas
add
pop
add
add
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
ins
xor
mov
mov
xor
xor
xor
xor
xor
ja
popa
ss
cmp
cmp
adc
xor
test
mov
pop
aas
add
add
add
add
dec
xor
xor
dec
ss
aaa
jp
xchg
aaa
test
scas
aaa
and
cmp
test
xchg
cmp
cmp
cmp
and
add
sbb
xor
adc
inc
ss
cmp
cmp
jmp
pusha
pop
add
add
or
dec
xor
push
xor
xor
xor
sub
mov
jg
scas
add
add
add
add
xor
xor
(bad)
xor
ins
cmp
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movs
cmp
add
add
add
mov
mov
xor
xor
xor
xor
mov
add
add
pop
xor
xor
cli
xor
xor
xor
xor
xor
xor
xor
or
sub
xor
fidivr
ins
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
aas
and
add
add
mov
cmp
cwde
ss
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
cmp
cmp
cmp
xchg
cmp
cmp
add
mov
add
add
add
push
cmp
add
add
pop
add
add
xchg
xor
xor
xor
xor
push
adc
sub
cmp
pop
cmp
nop
cmp
cmp
cmp
cmp
cmp
repnz
movs
ds
aas
mov
aas
add
pop
add
add
xor
xor
xor
xor
push
xor
xor
xor
jo
sbb
adc
xor
jl
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
icebp
cmp
xchg
aas
mov
add
loopne
add
cwde
xor
jnp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
or
ss
aaa
jge
test
cmp
cmp
cmp
cmp
cmp
add
cmp
cmp
cmp
cmp
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
ds
aas
sbb
xchg
mov
aas
fstp
add
pop
add
mov
ret
xor
xor
imul
and
das
ss
shl
fidiv
push
aaa
adc
sbb
sub
aaa
jb
(bad)
aaa
lahf
aaa
retf
aaa
div
or
and
cmp
push
cmp
jge
mov
movs
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
mov
mov
add
or
add
add
xor
pop
xor
xor
xor
push
xor
clc
xor
xor
mov
ss
ss
imul
int3
add
inc
aaa
cmps
aaa
in
aaa
pop
cmp
mov
sahf
cmp
cmp
cmp
cmp
mov
cmp
or
adc
add
mov
mov
aaa
push
and
add
add
add
div
pop
aaa
aas
aaa
push
aaa
fs
outs
aaa
lea
and
push
cmp
cmp
pop
cmp
ins
cmp
lods
sar
aas
add
add
or
pop
add
add
xor
xor
xor
xor
aaa
pop
aaa
imul
cmps
aaa
scas
aaa
out
aaa
cli
aaa
sbb
aas
cmp
mov
test
cmp
cmp
cmp
cmp
cmp
test
sar
inc
cmp
cmp
cmp
cmp
mov
cmp
add
inc
or
mov
xor
xor
xor
xor
xor
xor
cmc
xor
xor
xor
xor
inc
xor
jecxz
sbb
push
aaa
gs
jae
popa
cmp
cmp
cmp
cmp
cmp
cmp
jl
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
ins
cmp
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
add
push
sub
inc
ds
ds
ds
call
aas
pop
aas
arpl
add
add
add
xor
push
xor
aaa
xor
xor
dec
xor
xor
xchg
xor
(bad)
xor
xor
ss
mov
ss
inc
cmp
cmp
arpl
jb
pop
cmp
ins
cmp
cmp
or
cmp
add
adc
xor
xor
jmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
add
jno
movs
xor
xor
xor
xor
mov
shl
add
cmp
jp
mov
pop
xor
xor
xor
xor
mov
out
push
xor
(bad)
(bad)
and
dec
aaa
jno
mov
aaa
add
bound
sar
cmp
cmp
cmp
sahf
cmp
or
xor
push
ds
ds
cli
ds
aas
jbe
mov
aas
add
add
add
add
das
xor
jne
nop
xor
xor
xor
xor
aam
adc
xor
mov
xor
xor
xor
xor
xor
xor
cli
xor
pop
aaa
movs
aaa
shl
dec
cmp
cmp
cmp
test
retf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
aam
and
inc
ds
popf
ds
add
aaa
aas
dec
aas
push
aas
cmp
aas
clc
aas
add
add
pop
xor
xor
xor
xor
xor
xor
sbb
inc
xor
sahf
xor
xor
xor
xor
xor
xor
xor
xor
retf
cmp
jae
ins
aaa
xchg
mov
aaa
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jge
mov
fistp
add
dec
cmp
cmp
cmp
cmp
mov
ds
ds
cmps
sar
ds
aas
cmp
jns
lahf
aas
lds
call
add
add
add
xor
xor
xor
jg
mov
fnstenv
cld
xor
xor
jb
rdpmc
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
pop
ss
mov
ss
aaa
cmp
push
aaa
jb
lea
test
fdiv
(bad)
aaa
and
inc
cmp
test
cmp
cmp
jl
lahf
cmp
cmp
cmp
dec
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
and
inc
ds
lea
mov
fnstcw
(bad)
and
dec
aas
pop
aas
pop
aas
gs
imul
jle
mov
mov
xchg
aas
cdq
aas
mov
aas
scas
aas
mov
mov
aas
int3
aas
sar
xlat
aas
fstp
loop
out
in
aas
idiv
cld
aas
add
add
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
imul
js
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
daa
xor
xor
xor
xor
xor
push
xor
pop
xor
je
js
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
xor
pop
xor
xor
jb
jns
jge
test
mov
(bad)
xor
xor
xor
iret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
imul
jle
mov
add
add
or
mov
xor
test
lods
xor
xor
enter
shl
aam
fdiv
fdiv
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
or
adc
sbb
and
sub
cmp
push
aaa
ins
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
mov
cmp
enter
sar
aam
fdivr
loopne
in
call
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
push
cmp
pop
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
pop
cmp
cmp
ins
cmp
je
js
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
call
ds
sbb
and
xor
cmp
dec
ds
ds
ds
ds
test
nop
sbb
and
xor
cmp
dec
aas
push
aas
pusha
aas
ins
aas
js
test
nop
aas
pushf
aas
test
mov
sar
ror
add
xor
xor
nop
xor
mov
xor
enter
shl
aam
fdiv
fdiv
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
aas
cwde
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
or
add
add
xor
or
or
adc
adc
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xor
ss
adc
adc
sbb
sbb
add
or
fadd
add
mov
mov
mov
aaa
aam
fdiv
fdiv
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
sub
sub
xor
je
jl
test
pushf
cmp
mov
mov
cmp
in
in
cmp
add
or
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
ds
ds
jl
test
mov
xchg
ds
movs
lods
ds
mov
ds
fdivr
in
in
ds
ds
ds
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
ins
aas
je
jl
test
mov
xchg
aas
pushf
aas
movs
aas
lods
aas
mov
mov
aas
fdivr
in
in
aas
hlt
aas
cld
aas
add
add
or
xor
add
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movs
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movs
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
enter
sar
aam
cld
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
cmp
ins
cmp
je
js
jl
cmp
cmp
cmp
hlt
cmp
cmp
cmp
cmp
test
lods
sar
ds
sar
aam
fdivr
fdivr
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
add
or
call
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xor
xor
cwde
xor
movs
xor
mov
mov
mov
xor
int3
xor
fdiv
in
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
js
jl
xor
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
or
hlt
add
add
cmp
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movs
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movs
cmp
les
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
xor
cmp
inc
cmp
pop
cmp
je
jl
test
pushf
cmp
mov
mov
cmp
in
in
cmp
add
or
adc
sbb
and
sub
xor
cmp
inc
ds
ds
ds
ds
ds
jl
test
mov
xchg
ds
movs
lods
ds
mov
ds
fdivr
in
in
ds
ds
ds
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
ins
aas
je
jl
test
mov
xchg
aas
pushf
aas
movs
aas
lods
aas
mov
mov
aas
aam
fdivr
in
in
aas
hlt
aas
cld
aas
add
add
add
add
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movs
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
dec
xor
pusha
xor
js
xor
xor
mov
mov
xor
loopne
call
xor
adc
sbb
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
xor
ss
ss
mov
ss
shl
fdiv
loopne
call
add
or
adc
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
push
aaa
xor
aaa
nop
aaa
cwde
aaa
mov
aaa
mov
aaa
shl
fdiv
loopne
call
aaa
add
or
add
add
add
dec
cmp
cmp
ds
mov
mov
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
or
jo
add
movs
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
jl
cmp
cmp
cwde
cmp
movs
cmp
mov
mov
mov
cmp
int3
cmp
fdivr
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
js
jl
cmp
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
add
add
add
push
xor
mov
mov
xor
xor
xor
xor
adc
sbb
sub
xor
inc
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
sbb
and
xor
cmp
dec
xor
xor
xor
test
mov
shl
xor
xor
xor
xor
xor
xor
and
sub
cmp
inc
xor
pop
xor
sbb
and
xor
cmp
dec
cmp
cmp
cmp
test
mov
sar
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
js
jl
cmp
mov
mov
nop
ds
ds
ds
mov
lods
ds
mov
mov
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmp
aas
mov
mov
nop
aas
xchg
aas
cwde
aas
pushf
aas
mov
nop
or
je
add
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sub
xor
cmp
inc
cmp
dec
cmp
pop
cmp
fs
jo
je
js
mov
cwde
cmp
movs
cmp
mov
mov
mov
cmp
int3
cmp
fdivr
js
jl
cmp
mov
mov
nop
ds
ds
ds
add
add
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
enter
shl
aam
fdiv
fdiv
loopne
in
call
xor
xor
xor
xor
xor
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
dec
xor
push
xor
pop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
ss
js
jl
xor
mov
mov
nop
ss
ss
ss
mov
lods
ss
mov
mov
les
enter
shl
aam
fdiv
fdiv
loopne
in
call
ss
ss
ss
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
je
js
jl
xor
aaa
mov
mov
nop
aaa
xchg
aaa
cwde
aaa
pushf
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shl
aam
fdiv
fdiv
loopne
in
call
aaa
hlt
aaa
clc
aaa
cld
aaa
add
add
or
or
adc
push
outs
cmp
and
and
sub
sub
xor
xor
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
ds
ds
ds
js
jl
cmp
mov
mov
nop
ds
ds
ds
mov
mov
add
add
mov
mov
xor
xor
xor
xor
xor
xor
dec
xor
pop
xor
test
pushf
xor
shl
xor
or
or
adc
sub
xor
dec
ss
ss
ss
je
test
mov
mov
xchg
lods
ss
enter
fdiv
in
cld
ss
adc
and
and
sub
sub
xor
dec
aaa
pop
aaa
pusha
aaa
jo
je
jl
xchg
aaa
movs
aaa
test
mov
aaa
les
enter
call
cmp
cmp
cmp
cmp
dec
cmp
pusha
cmp
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
sub
cmp
cmp
inc
cmp
pusha
cmp
je
test
mov
mov
nop
cmp
mov
cmp
fdivr
loopne
lock
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pusha
cmp
cmp
test
lods
cmp
aam
fdivr
fdivr
in
cld
cmp
adc
and
and
sub
sub
xor
dec
cmp
cmp
je
js
jl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
push
cmp
ins
cmp
jl
xchg
cmp
mov
cmp
in
hlt
cmp
or
adc
sub
cmp
inc
ds
ds
ds
ds
ds
mov
mov
pushf
mov
les
aam
fdivr
call
ds
adc
and
and
xor
cmp
cmp
inc
aas
pop
aas
ins
aas
jo
cmp
aas
mov
nop
aas
test
mov
aas
sar
aam
fdivr
hlt
aas
add
ror
and
add
add
or
sbb
sbb
and
sub
inc
xor
push
xor
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
or
and
xor
cmp
dec
xor
xor
jo
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
xor
cmp
cmp
inc
xor
xor
mov
mov
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
sub
xor
inc
xor
xor
xor
jo
xor
xor
movs
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
pusha
xor
jo
mov
lods
xor
mov
xor
cld
xor
or
or
adc
sub
cmp
inc
ss
ss
ss
ss
ss
ss
test
xchg
ss
ss
lods
ss
mov
mov
ss
add
add
or
and
xor
cmp
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
je
test
mov
cwde
aaa
mov
aaa
lods
aaa
mov
mov
mov
aaa
les
enter
shl
aam
fdiv
fdiv
loopne
in
call
aaa
hlt
aaa
clc
aaa
add
sbb
sbb
xor
cmp
push
cmp
cmp
mov
mov
movs
cmp
cmp
cmp
cmp
cmp
cmp
sbb
xor
xor
dec
cmp
push
cmp
cmp
fdivr
hlt
cmp
cmp
cmp
sub
xor
dec
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
sub
inc
cmp
push
cmp
cmp
cmp
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
je
js
mov
cwde
cmp
les
fdivr
add
adc
adc
and
sub
sub
xor
cmp
push
ds
ds
js
mov
mov
nop
ds
ds
ds
les
enter
fdivr
loopne
in
in
ds
adc
sbb
sub
sub
xor
xor
cmp
push
aas
fs
push
aas
cmp
aas
mov
nop
aas
test
mov
aas
sar
aam
fdivr
fdivr
in
cld
aas
add
add
or
dec
add
add
adc
and
and
sub
sub
xor
dec
xor
xor
je
js
jl
test
pushf
xor
les
enter
aam
in
xor
xor
xor
xor
sbb
sbb
and
cmp
dec
xor
pusha
xor
xor
xor
mov
mov
mov
xor
xor
xor
xor
xor
or
or
adc
sub
cmp
inc
xor
push
xor
pop
xor
push
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
dec
xor
push
xor
pusha
xor
jl
xchg
xor
mov
mov
enter
fdiv
loopne
in
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
cmp
inc
xor
push
xor
jl
mov
cwde
xor
enter
fdiv
call
xor
and
xor
xor
cmp
cmp
inc
ss
ss
ss
xor
mov
mov
xchg
lods
ss
ss
fdiv
fdiv
loopne
in
in
ss
or
and
xor
xor
cmp
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
je
js
jl
test
pushf
aaa
lods
aaa
mov
shl
aaa
enter
shl
fdiv
lock
add
add
adc
sbb
sbb
and
sub
inc
cmp
push
cmp
cmp
jl
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
and
sub
xor
dec
cmp
pop
cmp
cmp
cmp
cmp
les
enter
sar
fdivr
lock
cmp
sbb
and
and
sub
sub
inc
cmp
cmp
pop
cmp
cmp
jo
mov
cwde
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
or
or
adc
sub
cmp
inc
cmp
push
cmp
cmp
mov
cwde
cmp
sar
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
js
mov
cwde
cmp
les
fdivr
or
adc
and
and
sub
sub
xor
dec
ds
ds
ds
je
js
jl
test
pushf
lods
ds
sar
ds
aam
in
ds
add
adc
adc
sbb
xor
inc
aas
dec
aas
pop
aas
pop
aas
pusha
aas
push
aas
xchg
aas
movs
aas
test
lods
aas
mov
int3
aas
fdivr
loopne
lock
hlt
aas
clc
aas
cld
aas
add
add
or
in
add
add
sbb
sub
xor
inc
xor
xor
push
xor
pushf
xor
fdiv
fdiv
loopne
call
xor
and
sub
sub
xor
dec
xor
xor
je
js
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sbb
xor
inc
xor
xor
pop
xor
xor
movs
xor
xor
xor
xor
xor
xor
xor
xor
and
sub
cmp
cmp
inc
xor
pusha
xor
je
test
mov
mov
xchg
xor
shl
aam
fdiv
loopne
clc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
cmp
dec
xor
pop
xor
mov
mov
xor
in
call
xor
and
xor
xor
cmp
inc
ss
ss
xor
mov
movs
ss
shl
ss
call
add
adc
adc
sbb
xor
inc
aaa
dec
aaa
pop
aaa
pop
aaa
fs
jl
mov
nop
aaa
mov
aaa
mov
enter
fdiv
in
aaa
lock
hlt
aaa
cld
aaa
adc
and
sub
sub
xor
dec
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
dec
cmp
cmp
mov
cwde
cmp
int3
cmp
cmp
cmp
cmp
cmp
cmp
adc
and
and
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
fdivr
in
cmp
cmp
cmp
or
adc
sub
cmp
cmp
dec
cmp
pop
cmp
cmp
cmp
movs
cmp
loopne
in
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
push
cmp
jl
cmp
cmp
enter
in
hlt
cmp
adc
and
and
sub
xor
dec
ds
ds
ds
ds
je
jl
xchg
movs
ds
mov
sar
aam
fdivr
loopne
clc
or
or
sbb
and
sub
inc
aas
push
aas
push
aas
fs
push
aas
mov
nop
aas
test
mov
aas
aam
in
call
aas
add
or
rol
add
xor
xor
xor
cmp
dec
xor
xor
js
jl
mov
nop
xor
mov
xor
xor
xor
xor
xor
sbb
and
xor
cmp
dec
xor
xor
xor
xor
xor
call
xor
or
sbb
sbb
and
and
sub
sub
xor
cmp
push
xor
xor
xor
nop
xor
xor
xor
xor
xor
xor
xor
xor
sbb
and
cmp
cmp
push
xor
xor
mov
cwde
xor
shl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
xor
dec
xor
js
jl
mov
movs
xor
enter
fdiv
call
sbb
sbb
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
mov
mov
xchg
lods
ss
enter
fdiv
in
ss
add
adc
sbb
sbb
and
and
sub
xor
dec
aaa
pop
aaa
pop
aaa
ins
aaa
jo
xor
aaa
mov
mov
nop
aaa
xchg
aaa
pushf
aaa
mov
mov
aaa
in
call
cmp
cmp
and
sub
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
sbb
sbb
and
and
sub
inc
cmp
pusha
cmp
je
js
mov
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
xor
inc
cmp
cmp
push
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
and
xor
xor
inc
cmp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
pop
cmp
jl
cmp
cmp
pushf
cmp
sar
lock
and
xor
cmp
dec
ds
add
add
or
fadd
add
add
adc
inc
xor
ins
xor
xor
in
xor
xor
xor
sbb
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
je
jl
test
mov
xor
xor
cmp
inc
ss
ss
ss
ss
ss
cwde
movs
les
shl
clc
ss
adc
xor
cmp
push
aaa
pop
aaa
jl
test
mov
xchg
aaa
pushf
aaa
movs
aaa
lods
aaa
mov
shl
aaa
or
sub
push
cmp
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
push
cmp
cmp
fdivr
clc
cmp
and
xor
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
and
sub
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
loopne
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
fs
mov
ds
dec
ds
mov
xchg
ds
movs
lods
ds
mov
ds
fdivr
in
in
ds
ds
ds
or
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
aas
pop
aas
fs
ins
aas
je
jl
test
mov
xchg
aas
pushf
aas
movs
aas
lods
aas
mov
mov
aas
aam
fdivr
in
in
aas
hlt
aas
cld
aas
add
add
or
sbb
add
add
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movs
xor
les
int3
xor
xor
xor
xor
xor
xor
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
xor
xor
xor
xor
movs
xor
xor
xor
xor
xor
xor
xor
xor
add
adc
sbb
xor
cmp
pop
xor
nop
xor
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
pop
xor
mov
mov
ss
adc
xor
pop
ss
mov
mov
mov
ss
aaa
sbb
cmp
inc
aaa
push
aaa
jo
jl
pushf
aaa
test
enter
fdiv
cld
aaa
add
adc
xor
cmp
pusha
cmp
cmp
cmp
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movs
cmp
sar
fdivr
add
and
dec
cmp
cmp
and
inc
cmp
mov
mov
aam
clc
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pusha
cmp
js
cmp
cmp
mov
mov
cmp
loopne
call
cmp
adc
sbb
and
sub
xor
cmp
inc
ds
cwde
ds
ds
or
sub
xor
dec
aas
push
aas
pop
aas
pusha
aas
push
aas
cmp
aas
nop
aas
cwde
aas
mov
aas
mov
aas
sar
fdivr
loopne
in
aas
add
or
add
add
adc
xor
pop
xor
xor
xor
xor
sub
xor
cmp
inc
xor
xor
xor
nop
xor
call
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
inc
xor
jl
pushf
xor
mov
and
sub
xor
cmp
inc
ss
ss
ss
ss
ss
xor
ss
ss
ss
movs
ss
shl
aam
fdiv
loopne
hlt
ss
adc
sbb
and
sub
sub
xor
cmp
dec
aaa
push
aaa
pop
aaa
fs
push
aaa
mov
nop
aaa
cwde
aaa
mov
aaa
mov
les
int3
aaa
aam
fdiv
loopne
call
cmp
adc
sbb
sbb
and
cmp
inc
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
push
cmp
cmp
cmp
cmp
and
sub
cmp
pop
cmp
cmp
movs
cmp
cmp
cmp
adc
xor
cmp
inc
cmp
push
cmp
cmp
mov
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
clc
cmp
cmp
pop
ds
ds
jl
test
mov
cwde
ds
sar
fdivr
cld
ds
or
adc
and
dec
aas
ins
aas
js
cmp
aas
movs
aas
les
sar
lock
cld
aas
add
add
or
les
add
sbb
and
xor
push
xor
xor
pushf
xor
in
add
sub
xor
cmp
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
test
mov
movs
xor
enter
adc
and
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
mov
xor
sbb
sub
dec
ss
ss
cwde
mov
ss
shl
fdiv
loopne
call
add
or
sub
xor
inc
aaa
fs
test
mov
xchg
aaa
pushf
aaa
movs
aaa
lods
aaa
mov
shl
aaa
or
sbb
and
cmp
inc
cmp
push
cmp
cmp
fdivr
clc
cmp
cmp
pop
cmp
xchg
cmp
cmp
cmp
and
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pusha
cmp
mov
cmp
add
and
sub
dec
ds
ds
ds
ds
ds
ds
mov
ds
sbb
and
inc
aas
push
aas
jo
jl
pushf
aas
movs
aas
mov
sar
fdivr
cld
aas
add
add
add
add
add
adc
xor
cmp
inc
xor
xor
jl
xor
xor
xor
xor
xor
sub
xor
push
xor
xor
mov
xor
xor
xor
je
js
cwde
xor
xor
xor
xor
js
cwde
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
je
xor
xor
add
or
adc
adc
sbb
xor
cmp
inc
ss
ss
ss
ss
ss
movs
lods
ss
mov
ss
fdiv
in
lock
sbb
and
sub
xor
cmp
inc
aaa
dec
aaa
push
aaa
pop
aaa
pusha
aaa
push
aaa
pushf
aaa
movs
aaa
enter
fdiv
hlt
aaa
add
and
sub
dec
cmp
js
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
push
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sub
dec
cmp
mov
test
enter
or
adc
xor
push
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
pushf
cmp
loopne
in
cmp
inc
ds
ds
ds
ds
movs
fdivr
loopne
call
aas
or
and
xor
push
aas
pop
aas
jl
mov
test
mov
aam
loopne
add
add
add
add
add
xor
xor
xor
cmp
inc
xor
push
xor
xor
xor
xor
mov
xor
xor
xor
sbb
xor
cmp
inc
xor
push
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
cmp
dec
xor
je
xchg
xor
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
loopne
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
cmp
push
xor
jo
js
xor
xor
in
xor
cmp
pop
ss
ss
jl
test
mov
cwde
ss
ss
sbb
push
aaa
jo
nop
aaa
mov
shl
lock
adc
sbb
and
inc
cmp
jo
jl
pushf
cmp
lock
cmp
sub
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
les
in
or
adc
sbb
cmp
pusha
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sub
pop
cmp
jo
je
jl
mov
mov
cmp
in
lock
cmp
dec
ds
mov
ds
ds
or
and
sub
xor
dec
aas
pop
aas
add
add
add
add
add
or
add
add
add
ds
call
ds
ds
ds
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
push
aas
je
js
jl
cmp
aas
mov
mov
nop
aas
xchg
aas
cwde
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
sar
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
aas
add
add
add
enter
shl
aam
fdiv
fdiv
loopne
in
call
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
xor
xor
xor
xor
nop
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
push
xor
xor
shl
xor
xor
xor
xor
xor
xor
xor
or
or
adc
adc
sbb
sbb
and
and
jo
je
inc
xor
xor
xor
movs
xor
mov
mov
mov
xor
loopne
call
xor
pushf
cmp
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
sub
dec
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
fs
mov
cmp
pop
ds
pushf
ds
sbb
xor
push
aas
nop
aas
mov
in
aas
add
add
sub
push
xor
xor
fdiv
cld
xor
cmp
pop
xor
xor
sbb
xor
dec
xor
xor
sbb
xor
xor
xor
xor
xor
xor
mov
shl
pushf
ss
ss
aaa
jo
enter
dec
cmp
nop
cmp
cmp
xchg
cmp
push
cmp
adc
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivr
inc
ds
ds
ds
pop
aas
cwde
aas
in
aas
add
add
sub
pop
xor
xor
xor
xor
ins
xor
sbb
push
xor
xor
xor
xor
xor
xor
xor
mov
ss
ss
mov
in
adc
cmp
fs
cwde
aaa
fdiv
sbb
push
cmp
cmp
lock
cmp
cmp
cmp
enter
sub
pusha
cmp
sbb
cmp
cmp
cmp
cmp
mov
mov
sar
ds
pop
aas
nop
aas
mov
add
mov
add
add
sub
push
xor
xor
xor
xor
cwde
xor
xor
dec
xor
xor
xor
xor
add
add
add
add
add
xor
xchg
ss
aaa
(bad)
cmp
cmp
sbb
add
adc
add
add
aaa
xor
xor
xor
data16
cwde
cmp
and
add
add
outs
cmp
adc
adc
add
or
cmp
add
inc
adc
or
add
pop
cmp
or
push
adc
sbb
add
sbb
ins
xor
cmp
cmp
cmp
aas
add
add
add
xor
jo
add
add
add
xor
cmp
push
int
aam
fdivr
fdivr
loopne
in
call
aas
hlt
aas
clc
aas
cld
aas
add
add
add
add
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
aaa
loope
out
cmp
add
nop
adc
or
add
adc
mov
add
cwde
xor
xor
xor
xor
jb
test
shl
xor
iret
aaa
out
cmp
ins
cmp
cmp
cmp
aad
lea
xchg
aas
add
add
add
pop
xor
xor
add
sysenter
xor
xor
popa
xor
ret
cmp
rcl
or
add
icebp
xor
cmp
rcl
add
add
add
xor
xor
ss
aaa
hlt
aaa
mov
xor
fs
adc
sbb
add
adc
js
lods
cmp
cmp
cmp
cmp
cmp
add
add
add
xor
aaa
cmp
cmp
cmp
add
add
add
add
add
xor
add
adc
push
add
add
xor
jmp
ss
ss
mov
pushf
ss
or
adc
das
cmp
xchg
cmp
sub
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
and
add
add
xor
xor
xor
xor
xor
shl
pop
cmp
cmp
cmp
das
cmp
test
fnstcw
inc
ds
ds
fidivr
add
add
adc
mov
add
cmp
shl
mov
mov
xor
xor
xor
xor
xor
xor
xor
in
and
stos
aaa
mov
cmp
cmp
bound
ins
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
jns
cmp
int
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
aas
fs
xchg
aas
cwde
aas
mov
aas
fistp
add
add
add
add
add
xor
xor
xor
test
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sahf
xor
xor
xor
outs
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
daa
xor
pop
xor
gs
mov
shl
repz
push
cmp
cmp
cmp
or
and
jae
test
aad
fstp
sti
cmp
cmp
xchg
cmp
cmp
cmp
cmp
add
add
add
add
and
fs
xor
xor
xor
ss
cmp
push
cmp
pop
cmp
cmp
inc
cmp
cmp
cmp
cmp
pusha
adc
sbb
add
push
xor
cmp
cmp
cmp
jo
add
add
add
xor
push
xor
xor
icebp
xor
xor
xor
xor
or
or
adc
adc
pop
xor
xor
xor
xor
xor
xor
xor
xor
adc
xor
pop
xor
xor
test
lods
xor
xor
or
or
pop
xor
jge
pop
xlat
ss
and
cmp
jno
xchg
ret
aaa
fdiv
xor
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jg
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
cmp
enter
adc
cmp
cmp
cmp
cmp
movs
cmp
idiv
pop
ds
ds
add
add
sub
cmp
inc
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jne
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
pop
ss
cwde
ss
ss
cmp
outs
aaa
mov
(bad)
aaa
xchg
aaa
pushf
aaa
mov
aaa
repz
adc
sbb
sbb
and
and
sub
sub
xor
xor
jle
test
mov
mov
nop
cmp
cmp
cmp
and
sub
sub
xor
push
cmp
lods
cmp
sar
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
mov
xchg
cmp
cmp
cmp
add
add
add
repz
xor
xor
xor
xor
jge
mov
mov
mov
cmp
cmp
inc
cmp
dec
cmp
cmp
imul
jg
xchg
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
js
cmp
cmp
les
lock
or
push
sbb
pop
xor
cmp
dec
ds
ds
arpl
jo
jbe
mov
add
add
add
mov
xor
xor
popf
xor
jnp
xor
xor
in
xor
dec
cmp
jge
(bad)
cmp
cmp
cmp
cmp
bound
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
dec
aas
mov
mov
add
add
fdiv
cdq
aaa
int
cld
aaa
jns
loopne
or
cmp
dec
cmp
cmp
jg
mov
call
cmp
cmp
cmp
cmp
jnp
(bad)
xor
push
cmp
cmp
cmp
cmp
cmp
pop
sar
fnstsw
push
aas
pop
aas
add
adc
js
add
cmp
dec
xor
sahf
xor
xor
xor
or
jo
int3
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
enter
fistp
cmp
nop
cmp
aam
loop
sub
cs
js
jg
test
mov
nop
ds
or
push
aas
cwde
aas
cmps
aas
mov
mov
add
aam
div
loopne
inc
xor
leave
xor
xor
xor
xor
xor
bound
push
xor
test
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
(bad)
mov
call
ss
or
aaa
lahf
aaa
stos
aaa
shl
in
repnz
int
lock
cmp
cmp
mov
mov
cmp
xchg
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
ja
mov
aaa
add
or
and
clc
cmp
cmp
cmp
cmp
cmp
cmp
push
jno
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
push
cmp
mov
cmp
pop
ds
pushf
ds
fdivr
stc
ds
cmp
pop
aas
jno
mov
lods
aas
leave
aas
jmp
lock
inc
add
add
xor
xor
push
xor
cdq
xor
xor
xor
xor
xor
xor
cmp
pop
xor
xor
xor
pop
xor
cdq
xor
add
adc
inc
add
add
xor
xor
or
adc
sbb
sub
sub
xor
xor
cmp
cmp
inc
xor
xor
xor
xor
movs
xor
fs
xor
xor
xor
xor
add
adc
add
add
add
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
xor
xor
xor
xor
shl
in
call
add
or
and
xor
xor
inc
aaa
dec
aaa
dec
aaa
push
aaa
pop
aaa
jo
xor
aaa
xchg
aaa
cwde
aaa
pushf
aaa
mov
aaa
shl
aam
in
call
aaa
add
sbb
sub
xor
inc
cmp
cmp
push
cmp
pushf
cmp
sar
call
cmp
adc
adc
sbb
xor
inc
cmp
pop
cmp
cmp
cmp
cmp
mov
enter
aam
add
or
sub
inc
cmp
push
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
nop
cmp
lock
xor
cmp
cmp
push
ds
ds
mov
fdivr
hlt
ds
ds
sbb
and
sub
xor
xor
cmp
push
aas
ins
aas
jo
mov
nop
aas
mov
sar
lock
add
adc
ins
add
add
xor
xor
push
xor
mov
nop
xor
xor
xor
xor
xor
pop
xor
cwde
xor
xor
xor
xor
xor
xor
or
adc
sbb
sub
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
inc
xor
jo
jl
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
js
nop
xor
enter
lock
add
or
cmp
dec
ss
ss
jl
test
mov
enter
fdiv
hlt
add
and
cmp
inc
aaa
pusha
aaa
jo
test
cwde
aaa
movs
aaa
lods
aaa
les
in
clc
aaa
add
or
and
xor
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
adc
add
add
add
add
or
sub
dec
xor
jo
je
js
mov
sub
cmp
dec
ss
ss
mov
mov
nop
ss
ss
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
cmp
cmp
enter
fdivr
hlt
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
movs
cmp
ds
cmp
cmp
inc
ds
ds
ds
ds
ds
ds
ds
or
or
add
add
add
test
lods
cmp
jo
add
add
mov
add
adc
adc
add
mov
xor
xor
add
adc
or
add
and
lock
adc
add
add
out
test
fdivr
outs
add
add
adc
adc
add
mov
xor
pop
aas
add
adc
adc
add
push
xor
add
and
add
add
cmc
xor
ss
cmp
add
adc
or
add
iret
cmp
or
inc
adc
sbb
add
xor
adc
cmp
jmp
ds
movs
aas
add
add
add
rdpmc
sbb
adc
add
lods
ss
cmp
loop
add
add
add
add
xor
xor
xor
jle
lods
cmp
add
adc
adc
add
dec
xor
int3
cmp
add
add
loopne
(bad)
cmp
add
add
add
iret
add
add
add
adc
ds
ds
adc
or
add
inc
xor
add
adc
adc
add
push
xor
xor
add
adc
adc
add
jne
xlat
cmp
cmp
das
aas
add
adc
adc
add
cmp
cmp
add
or
add
shl
mov
add
adc
adc
add
push
fnstsw
xor
add
add
adc
adc
add
jp
(bad)
xor
xor
cmp
add
adc
sbb
add
loop
pop
xor
in
cmp
scas
ds
pop
aas
ins
aas
idiv
add
add
add
inc
xor
xchg
mov
add
push
adc
adc
add
push
xor
xor
cmp
add
add
add
cwde
xor
add
add
add
add
cmp
cmp
adc
add
add
cmp
cmp
cmp
add
add
shl
aas
add
add
popf
xor
xor
add
add
adc
lods
aaa
ins
cmp
pop
add
adc
adc
add
fnsave
outs
xor
cmp
aas
add
adc
adc
add
xor
cmp
adc
add
jge
shl
dec
cmp
pop
add
adc
adc
add
inc
xor
aaa
pushf
cmp
add
add
pop
cmp
or
adc
add
xor
add
and
add
aas
add
add
adc
add
xor
test
mov
add
add
add
in
xor
cmp
cmp
adc
add
cmp
add
add
add
add
xor
xor
lock
pop
cmp
cmp
adc
add
cmp
aas
add
add
xchg
xor
xor
nop
adc
add
xor
add
add
add
aam
cdq
aas
add
add
add
mov
push
ss
cmp
cmp
rcl
push
xor
xor
pop
aas
add
add
adc
add
or
sbb
push
ds
add
add
adc
add
xchg
xor
cmp
cmp
adc
add
xor
xor
ss
cmp
adc
add
xchg
xor
mov
cmp
adc
add
add
xor
xor
add
push
add
add
mov
cmp
add
xor
add
add
add
xor
xchg
xor
add
inc
push
add
add
add
aaa
push
ds
aas
add
add
add
add
inc
xor
xor
div
add
add
add
add
lds
add
add
div
stc
ss
mov
cmp
push
ds
add
add
aaa
xor
add
or
add
ja
mov
add
add
add
cmp
cmp
rcl
sbb
add
or
aam
fbstp
mov
aas
add
push
add
add
add
add
add
push
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
lock
add
add
mov
xor
xor
add
pop
add
add
pop
xor
add
adc
add
add
add
cmp
sahf
cmp
cmp
cmp
push
add
pop
add
add
out
xor
cmp
cmp
cmp
add
xor
add
add
add
xor
xor
add
inc
pop
add
add
mov
xor
pushf
cmp
cmp
push
aas
imul
adc
add
sbb
xor
cmp
adc
add
mov
outs
cmp
jo
add
add
add
lock
in
add
add
xlat
aaa
(bad)
cmp
cmp
add
add
xchg
cmp
add
add
xlat
ss
aaa
ret
cmp
cmp
mov
add
add
add
cmp
add
add
add
xor
adc
rcl
add
add
stc
xor
mov
add
or
add
lock
add
add
cmp
sbb
adc
add
add
mov
retf
aaa
mov
(bad)
cmp
adc
add
add
add
xor
js
add
sbb
sbb
add
sbb
xor
cmp
cmp
cmp
add
add
sbb
adc
add
cdq
lea
pop
cmp
cmp
cmp
sbb
or
add
sar
add
add
add
add
add
xor
cmp
ds
add
add
add
xor
mov
(bad)
cmp
cmp
sbb
adc
add
outs
xor
aaa
ret
add
sbb
or
add
adc
cmp
nop
sbb
adc
add
push
xor
xor
add
aas
add
add
pop
xor
xor
ss
mov
add
add
add
test
cmp
ds
add
add
sbb
adc
add
or
arpl
mov
xchg
aas
add
sbb
adc
add
jmp
cmp
add
lock
adc
add
cli
ss
cmp
cmp
add
add
add
sub
adc
ja
add
sbb
adc
add
shl
xor
cmp
aas
add
sbb
or
add
retf
xor
xor
xor
add
add
add
add
add
add
add
add
cmp
sbb
aas
add
or
add
sbb
cwde
cmp
pusha
sbb
adc
add
lea
popa
aaa
stos
cmp
cmp
add
add
add
sbb
xchg
cmp
cmp
lds
add
add
add
data16
add
add
add
xor
adc
daa
aas
add
add
xor
xor
xor
xor
jl
jecxz
add
add
das
xor
cmp
add
sbb
adc
add
bound
outs
xor
cli
aaa
push
cmp
cmp
rcr
add
add
add
xor
jnp
test
add
sbb
adc
add
fbstp
push
jne
add
add
sbb
adc
add
ret
cmp
add
sbb
adc
add
xor
push
xor
jl
add
add
sbb
adc
add
add
and
enter
aas
add
add
sbb
sbb
add
sbb
cmp
push
cmp
cmp
cmp
add
add
add
xor
fdivr
sar
add
add
add
add
cmp
add
add
add
pop
xor
cmp
sbb
adc
add
dec
cmp
gs
aas
add
add
add
(bad)
xor
add
sbb
sbb
add
test
dec
xor
xor
push
ss
aaa
loope
mov
movs
add
add
add
and
xor
xchg
enter
add
add
add
adc
mov
xor
sbb
adc
add
xchg
xor
jmp
add
add
ss
xor
rcr
add
add
add
xor
xor
add
sbb
adc
add
int
or
pop
cmp
add
lock
or
add
inc
xor
add
add
add
add
push
xor
jnp
mov
add
add
add
xor
fs
cmp
cmp
add
sbb
adc
add
adc
push
xor
ds
add
sbb
adc
add
jo
mov
aaa
sub
add
add
add
add
aaa
enter
sbb
or
add
dec
cmp
cmp
pusha
sbb
adc
add
ja
cwde
xor
mov
icebp
aas
add
add
add
add
xor
pushf
xor
adc
cmp
cmp
cmp
add
add
jae
xor
cmp
add
nop
sbb
adc
add
push
ss
aaa
cmc
cmp
aas
add
add
inc
xor
aaa
jg
add
add
jbe
stos
ss
sbb
adc
add
lods
xor
xor
rcr
add
add
icebp
xor
mov
cmp
sbb
adc
add
adc
xor
pop
ds
sbb
adc
add
sub
xor
aas
add
sbb
sbb
add
xchg
xor
ss
cmp
cmp
ds
add
sbb
adc
add
push
xor
cmp
add
add
sbb
adc
add
sar
sbb
sar
or
xor
adc
add
xchg
xor
xor
cmp
add
add
add
add
jne
mov
lock
add
add
add
and
cmps
cmp
sbb
adc
add
jmp
xor
xchg
cmp
add
add
add
add
mov
xor
xor
aaa
cmp
push
cmp
sbb
or
add
sub
add
add
add
out
addr16
xor
add
add
jg
add
mov
add
add
cwde
xor
xor
xchg
xor
xor
xor
cmp
cmp
cmp
adc
add
xor
xor
add
loopne
add
add
add
ds
add
sbb
adc
add
xor
add
add
sbb
add
xor
xor
xor
bound
cmp
adc
add
cmp
cmp
and
add
mov
cmp
xor
add
cmp
cmp
add
add
add
popa
cmp
add
add
add
add
loop
lock
ds
dec
aas
bound
add
add
add
add
xor
xchg
cmp
add
jo
add
add
add
pop
xor
scas
cmp
outs
cmp
cmp
movs
cmp
sbb
add
and
add
sbb
add
add
je
fistp
adc
add
into
xor
xor
aaa
add
add
add
or
cmp
rcr
or
pop
cmp
add
sbb
add
cmp
cli
aas
add
add
sbb
add
xor
xor
mov
cmp
add
lock
add
xor
xor
xor
xor
add
push
add
add
add
fbstp
add
push
add
add
icebp
xor
je
cwde
sar
and
add
add
add
xor
xor
cs
adc
add
and
jl
or
cld
add
add
add
xor
xor
mov
push
push
add
add
sub
cmp
cmp
add
add
add
add
cmp
cmp
jo
add
add
add
xor
cmp
sbb
adc
add
sub
test
out
xor
cmp
cmp
push
add
add
add
xor
scas
cmp
add
mov
add
pop
xor
add
add
pusha
xor
xor
cmp
jg
movs
cmp
push
add
add
adc
or
rcr
add
add
(bad)
xor
xor
mov
xchg
cmp
cmp
loopne
add
add
stos
xor
xor
aas
add
add
push
add
add
add
pop
ss
cmp
cmp
add
pop
add
add
test
pop
add
add
cld
xor
xor
xor
aaa
bound
int
add
pop
add
add
add
xor
in
add
add
pop
add
add
add
xor
cmp
inc
pop
add
add
add
lahf
xor
pop
add
add
sbb
les
add
add
add
add
cmp
cmp
jo
add
add
add
cmp
cmp
pop
add
add
leave
xor
mov
fdivr
or
add
sbb
ja
add
add
imul
pop
cmp
add
add
jmp
xor
cmp
inc
xor
xor
xor
xor
pop
add
add
add
xor
xor
(bad)
cmp
cmp
add
rcr
add
add
add
cmp
cmp
cmp
add
add
pop
add
add
add
cmp
adc
add
or
xor
sbb
add
add
add
add
cdq
xor
aas
inc
aas
add
and
and
add
add
and
aaa
xor
xor
xor
cmp
movs
aas
add
add
and
or
add
icebp
cmp
add
add
mov
inc
and
or
add
scas
cmp
and
or
add
xchg
ss
cmp
pusha
and
adc
add
icebp
ss
aaa
outs
cmp
add
add
adc
add
and
adc
add
cmp
les
fstp
call
add
add
add
ss
aaa
test
(bad)
add
add
aas
cmp
add
add
add
aaa
adc
mov
add
add
and
or
add
lea
cmp
add
and
adc
add
xor
xor
aaa
idiv
add
add
and
and
add
add
adc
jmp
and
sbb
cmp
add
add
and
adc
add
push
xor
xor
mov
add
add
add
add
aaa
in
aaa
or
repnz
adc
add
add
add
cmp
ds
add
and
sbb
add
sub
stos
xor
xor
xor
aaa
pusha
aaa
push
aaa
add
add
and
or
add
mov
inc
and
adc
add
fwait
xor
add
push
and
adc
add
add
adc
sbb
mov
add
add
add
add
pushf
cmp
add
add
add
add
ja
jp
add
add
add
scas
xor
cmp
and
add
add
mov
and
cmp
cmp
mov
add
sti
and
inc
aaa
ins
aaa
xchg
and
cmp
sbb
add
cmp
icebp
xor
xor
cmp
mov
add
and
adc
add
fidiv
retf
cmp
add
add
and
adc
add
shl
out
sar
push
add
and
or
add
sahf
cmp
add
and
or
add
in
pop
cmp
add
add
add
pop
xor
cmp
cmp
add
adc
add
add
mov
cmp
cmp
add
and
adc
add
xchg
xor
push
cmp
or
add
mov
shl
add
add
adc
xor
daa
cmp
add
loopne
add
add
dec
xor
xor
xor
ss
adc
add
lock
sbb
add
mov
shl
xor
cmp
adc
cmp
add
and
or
add
or
add
add
dec
xor
cmp
sub
pop
cmp
aas
add
and
adc
add
sbb
cmp
cmp
cmp
cmp
aas
add
and
adc
add
mov
ret
cmp
add
add
add
pop
xor
jne
mov
cmp
push
and
adc
add
xchg
xor
pop
cmp
cmp
adc
add
push
mov
add
add
add
add
cmp
cmp
and
add
add
(bad)
xor
pop
mov
add
add
outs
xor
sahf
xor
cmp
cmp
lock
add
add
add
xor
mov
cmp
cmp
cmp
cmp
add
mov
add
add
add
cmp
or
shl
add
add
aaa
fdivr
fnstsw
mov
jg
cdq
cmp
shl
adc
add
push
xor
xor
xor
cmp
loopne
add
add
add
xor
aas
xchg
aas
add
and
or
add
xor
push
add
and
add
xor
xor
out
cmp
cmp
cmp
adc
add
xor
xor
cmp
add
and
add
or
add
and
add
test
push
inc
and
add
xor
mov
cmp
add
add
add
xor
xor
aaa
xlat
cmp
add
add
add
add
xchg
add
xor
add
add
add
and
add
add
add
add
shl
mov
nop
and
add
xor
cmp
jo
add
add
add
imul
cmp
add
sbb
add
stos
xor
xor
xor
movs
aaa
imul
add
and
add
xor
xor
xor
dec
aaa
jge
mov
add
add
pop
xor
xor
xor
cmp
and
add
and
add
ja
enter
jl
je
xchg
aas
add
add
add
add
out
cmp
adc
add
add
sbb
ja
add
add
add
es
xor
aaa
lock
cmp
add
add
mov
add
add
add
add
push
xor
xor
inc
cmp
add
add
add
cmp
icebp
cmp
cmp
add
pusha
add
add
add
aaa
push
cmp
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
and
or
add
cmp
add
add
add
mov
aam
add
add
add
pop
xor
xor
xor
cmp
cmp
add
add
push
xor
mov
add
or
add
(bad)
cmp
cmp
shl
add
add
mov
cs
movs
cmp
cmp
cmp
add
add
add
add
add
add
add
add
in
cmp
add
add
add
mov
cmp
cmp
adc
add
add
add
jbe
pop
cmp
add
or
add
out
mov
add
daa
add
add
add
xor
dec
xor
push
cmp
cmp
add
inc
daa
add
add
wrmsr
mov
xor
add
add
add
sub
cmp
adc
add
adc
cmp
cmp
sbb
add
cmp
stos
(bad)
out
aaa
sti
cmp
ret
aas
jno
add
add
add
test
(bad)
xor
xor
xor
sbb
add
clc
xor
xor
aaa
test
cmp
mov
add
fbstp
xor
inc
xor
add
mov
add
add
add
xor
cmp
add
daa
add
add
add
pop
xor
out
dec
cmp
cmp
push
cmp
aas
add
add
daa
add
add
add
add
ret
aaa
dec
cmp
aas
into
aas
add
daa
add
add
movs
xor
xor
lock
add
add
add
ss
inc
cmp
cmp
add
sub
adc
add
mov
loop
sub
add
add
sub
or
add
imul
add
and
add
add
add
or
pop
cmp
cmp
adc
add
aaa
xor
push
cmp
cmp
xor
inc
sub
adc
add
arpl
jae
add
add
adc
add
lock
aas
xchg
aas
add
pusha
sub
sbb
add
in
xor
fidiv
push
cmp
cmp
add
add
add
add
aas
add
add
add
push
push
aas
add
add
pushf
xor
cmp
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
add
retf
xor
xor
xor
add
add
sub
xor
movs
xor
xor
add
shr
sbb
add
ins
xor
xor
cmp
cmp
cmp
sub
adc
add
dec
xor
jg
add
add
sub
sbb
add
wrmsr
sbb
sub
pop
xor
sbb
sub
adc
add
xchg
cmp
or
add
add
add
iret
xor
add
adc
add
add
data16
add
add
add
cmp
add
xor
add
add
dec
xor
xor
aaa
gs
(bad)
cmp
add
inc
sub
adc
add
cmp
or
aaa
pop
cmp
sub
adc
add
cmc
xor
xor
cmp
cmp
add
add
add
add
xor
xor
add
jo
add
add
add
xor
xor
sub
adc
add
dec
xor
xor
xor
cmp
aas
add
add
add
mov
xchg
xor
ss
add
add
push
xor
movs
aas
add
add
add
xor
ds
sub
adc
add
ins
xor
xor
xor
idiv
add
sub
adc
add
cwde
xor
daa
xor
add
out
or
bswap
inc
sub
mov
clc
test
shr
imul
test
cmp
jae
mov
sub
dec
ror
shr
add
ror
mov
rcr
bsf
mov
mov
mov
btr
mov
jmp
mov
jmp
loopne
xchg
clc
mov
xchg
lds
xchg
cmp
out
xchg
mov
cmp
mov
xchg
clc
xor
outs
push
xchg
xchg
mov
clc
jbe
and
inc
sub
leave
xchg
js
cmp
inc
mov
outs
dec
cli
mov
clc
mov
repnz
mov
mov
clc
test
add
push
and
add
add
cli
cmp
adc
stc
js
pop
mov
xchg
rep
(bad)
pop
shl
ins
pop
pop
add
js
sbb
cwde
outs
pop
cmp
and
outs
inc
pop
pushf
mov
fadd
jb
xchg
clc
xlat
push
lds
out
xor
pop
mov
stc
pop
rcl
clc
movs
retf
(bad)
icebp
(bad)
and
(bad)
xlat
cmp
jle
fs
sahf
pop
xchg
js
ss
inc
sbb
mov
fdiv
xchg
mov
mov
js
int
outs
mov
push
fist
xchg
mov
cmp
add
ins
pop
(bad)
pushf
pop
xchg
js
mov
outs
inc
xor
mov
(bad)
in
outs
inc
aad
shr
pop
retf
xchg
push
push
movs
xchg
mov
clc
cmc
push
ins
outs
(bad)
iret
sbb
xor
clc
xchg
outs
inc
rol
outs
(bad)
and
in
stos
popa
xchg
js
jne
inc
xchg
(bad)
mov
xchg
mov
js
int3
leave
outs
(bad)
cmp
outs
(bad)
dec
or
outs
inc
jne
pop
adc
out
inc
mov
enter
addr16
call
cwde
clc
fwait
adc
fs
xchg
xor
mov
push
fwait
js
mov
pop
xor
and
fwait
js
mul
nop
hlt
adc
fwait
clc
and
fsub
setnp
cmp
fs
xchg
pop
xchg
fst
data16
ins
sbb
fs
or
out
pop
call
into
(bad)
fwait
cmp
(bad)
xchg
push
lock
sbb
aam
inc
cmp
rcr
cwde
clc
cmp
hlt
fs
push
fwait
cmp
xchg
shl
ret
fs
pop
test
clc
jae
fwait
mov
js
aad
stc
xor
fwait
mov
push
cmp
fs
mov
fwait
clc
cdq
imul
add
fwait
clc
push
in
out
fs
pusha
in
fwait
cmp
mov
mov
xor
fwait
mov
and
inc
cwde
clc
nop
mov
addr16
push
sti
mov
(bad)
fwait
mov
js
push
mov
call
fwait
mov
mov
clc
sub
addr16
mov
fwait
mov
cmp
adc
mov
mov
jmp
mov
mov
movzx
pop
jmp
jae
mov
cmc
movzx
stc
cmp
test
shl
jmp
not
mov
bswap
mov
pop
movsx
pop
jmp
pop
rol
aam
xor
xor
cmp
imul
btc
neg
pop
rcr
pop
test
mov
sub
xchg
setg
pop
jmp
or
adc
aas
loope
push
cmp
js
mov
jno
mov
mov
and
das
pop
push
shr
mov
iret
inc
push
xchg
cmp
cmp
clc
mov
outs
(bad)
mov
xchg
mov
outs
(bad)
jle
push
outs
pop
jle
push
cmp
stos
xchg
js
sub
xchg
clc
fist
outs
(bad)
pusha
and
or
xchg
mov
idiv
pop
aaa
add
xchg
mov
dec
clc
ret
xchg
js
add
out
xchg
mov
cmp
xchg
clc
nop
xor
fs
adc
clc
add
(bad)
jno
cmp
lds
adc
ins
xchg
pop
xchg
mov
repnz
inc
mov
ins
test
xchg
cmp
sbb
xchg
clc
cmp
in
(bad)
dec
cmp
outs
inc
jno
in
mov
mov
inc
cmp
ins
pop
stc
mov
cmp
cmp
cmp
int3
xor
jns
xchg
mov
mov
clc
clc
out
outs
pop
add
xor
xchg
js
xchg
outs
mov
scas
loopne
outs
inc
push
iret
push
outs
pop
lods
mov
xchg
js
aaa
dec
outs
inc
sbb
mov
pop
aad
clc
xchg
mov
mov
js
in
outs
(bad)
in
add
(bad)
out
mov
mov
clc
in
icebp
xchg
clc
mov
outs
pop
call
icebp
repz
mov
cmp
mov
jle
outs
xchg
pushf
xchg
mov
clc
ja
sub
pop
jg
cmps
xchg
mov
mov
mov
dec
mov
xchg
mov
clc
or
pop
hlt
xor
xchg
mov
mov
clc
test
scas
fisubr
mov
sbb
sub
mov
pop
cwde
xor
mov
mov
js
mov
outs
mov
xchg
mov
xchg
mov
clc
aad
leave
ins
xchg
out
xchg
mov
jl
add
pop
add
xchg
js
sbb
cdq
mov
add
clc
cmp
jne
retf
outs
(bad)
jo
shr
stos
cmp
jp
mov
or
clc
mov
outs
(bad)
retf
out
ins
xchg
xchg
cmp
in
xchg
js
iret
jmp
fisub
pop
push
mov
xchg
cmp
pop
ins
pop
(bad)
mov
xchg
js
mov
outs
inc
add
ins
ficom
xchg
js
mov
outs
(bad)
cmp
push
xchg
adc
jae
pushf
mov
push
adc
lds
leave
jmp
cld
loopne
jecxz
mov
cmp
repnz
clc
js
push
cmc
add
sbb
add
ror
sti
cmp
clc
js
push
adc
mov
cmp
ret
outs
shr
leave
outs
jbe
jbe
(bad)
aaa
jmp
push
add
jmp
cmps
in
jmp
ss
test
cmp
pop
rcr
jmp
jl
clc
xchg
and
(bad)
dec
loope
add
aam
sti
clc
add
mov
(bad)
push
jae
add
data16
xchg
and
scas
lea
mov
cmps
aas
mov
daa
loopne
sti
into
mov
clc
les
mov
cmp
mov
dec
mov
inc
mov
in
rcl
inc
outs
iret
lea
mov
mov
xchg
movs
or
dec
imul
jno
retf
(bad)
jno
mov
test
xor
sub
xchg
xchg
aad
js
jmp
lea
mov
mov
clc
mov
or
jno
sbb
adc
fbstp
inc
or
or
cmp
jae
mov
clc
cmc
cmp
cmp
jmp
jae
movzx
clc
cmp
cmc
shl
jmp
or
inc
outs
inc
xor
dec
outs
pop
adc
xchg
clc
lahf
idiv
inc
(bad)
dec
outs
mov
mov
xchg
cmp
popf
mov
lds
fsubr
dec
dec
push
xchg
mov
mov
sub
dec
outs
(bad)
mov
sahf
pusha
xchg
cmp
cs
xchg
fist
mov
xor
adc
arpl
adc
cmp
into
add
pop
mov
in
fwait
push
jl
outs
pop
fimul
add
pop
outs
xor
mov
xchg
js
imul
adc
in
outs
inc
enter
into
out
outs
inc
movs
ss
pop
rol
xchg
cmp
ds
mov
js
sub
pop
push
inc
push
pop
cmp
jp
in
test
jmp
arpl
test
add
xchg
repnz
mov
clc
movs
inc
test
inc
fcom
test
clc
outs
test
xor
pop
adc
jp
or
test
sbb
xchg
xchg
sub
repnz
test
and
out
rol
jns
sub
test
test
test
neg
test
cmp
movs
lods
mov
push
test
mov
cli
pop
jns
push
inc
and
test
mov
cmovs
add
mov
mov
mov
sar
movsx
mov
bt
mov
mov
cmp
or
mov
clc
btr
xor
jmp
pop
add
add
cli
aam
clc
call
loopne
inc
fwait
mov
sti
cs
pop
inc
sbb
js
or
mov
sub
outs
inc
pop
aad
outs
mov
xchg
inc
xchg
mov
mov
js
inc
outs
(bad)
in
adc
outs
pop
cmp
push
xor
xchg
cmp
pop
xchg
js
outs
test
sbb
xchg
popf
jno
cmp
out
outs
(bad)
fidiv
inc
fwait
push
mov
outs
(bad)
push
fisubr
mov
sti
repz
inc
out
or
mov
ins
xchg
dec
mov
fs
sbb
int
(bad)
mov
shr
mov
xchg
cmp
pop
xchg
mov
js
mov
aaa
add
(bad)
cmp
and
and
jge
jns
mov
add
mov
adc
add
add
xlat
add
bound
clc
push
enter
div
add
dec
jns
clc
sbb
(bad)
lods
int3
add
inc
fwait
jle
pop
jge
add
jge
jmp
xchg
add
js
dec
cmp
add
fwait
jmp
jle
loop
ret
rcr
and
leave
add
and
mov
inc
add
or
test
shr
jmp
sbb
add
div
push
aam
mov
sbb
(bad)
cmp
jmp
cmp
inc
outs
inc
sub
out
push
outs
pop
inc
ret
lods
xchg
cmp
popa
xchg
mov
cmp
(bad)
aad
outs
xchg
aam
xchg
mov
clc
clc
shl
xchg
mov
mov
loop
outs
pop
sub
pop
outs
inc
shl
inc
sub
sbb
jmp
or
jmp
xchg
cli
cmp
adc
cli
mov
and
inc
add
add
aam
jo
clc
(bad)
push
mov
mov
loopne
or
out
jle
pop
add
hlt
cmp
scas
outs
gs
clc
xor
or
mov
clc
dec
out
or
inc
xlat
or
and
or
clc
sbb
dec
adc
and
rcr
imul
clc
sbb
xadd
cmovbe
lea
bts
btc
lea
cmp
jmp
push
(bad)
adc
sub
je
ds
out
push
repnz
sub
outs
inc
(bad)
(bad)
outs
(bad)
xor
or
xchg
js
dec
movs
outs
inc
fsub
lods
outs
pop
dec
ficom
sahf
outs
inc
or
fisubr
cmp
shr
pop
cld
dec
xchg
mov
js
xchg
push
outs
inc
sub
xchg
mov
js
sahf
outs
(bad)
shl
int
cmp
sub
pop
adc
cmp
clc
jg
fisubr
cs
stc
cdq
jb
cmp
mov
das
popa
xchg
cmp
pushf
xchg
js
(bad)
cmp
pop
ror
xchg
cmp
xchg
clc
aaa
dec
outs
(bad)
mov
jne
xchg
pushf
xchg
js
cli
sbb
inc
cmp
jmp
outs
inc
add
add
inc
xor
mov
pop
pop
(bad)
mov
fld
xor
fild
dec
ret
mov
clc
mov
mov
dec
or
inc
in
jmp
cmps
xor
loop
add
gs
pop
dec
stc
inc
clc
js
pop
add
stc
mov
pop
test
je
jno
pop
cld
add
mov
call
clc
clc
bound
dec
add
or
add
add
js
movntq
pop
cmp
cmp
pop
js
clc
js
out
jp
inc
enter
pop
or
int
mov
mov
cmp
test
mov
pop
cwde
add
add
dec
mov
call
iret
xchg
js
and
xchg
clc
pushf
hlt
xchg
fcom
outs
(bad)
jmp
cmps
and
cmp
scas
mov
imul
adc
test
fwait
push
lods
outs
out
pop
xchg
(bad)
jmp
fwait
add
mov
dec
inc
adc
and
out
inc
fisub
adc
js
icebp
out
xchg
adc
fcom
adc
add
mov
pusha
sbb
cmp
das
sub
mov
js
mov
and
xchg
leave
mov
sbb
mov
in
pop
(bad)
mov
clc
inc
pusha
mov
inc
call
out
xchg
adc
add
sbb
xchg
sub
pop
call
adc
mov
fisubr
dec
out
(bad)
push
sbb
cmp
push
xchg
sbb
xchg
test
jg
pop
test
in
sub
sti
sti
mov
js
outs
test
movs
jle
jnp
and
test
sar
inc
ds
xchg
or
adc
jnp
sahf
push
sub
(bad)
and
stc
aas
enter
xor
test
push
rol
enter
mov
js
enter
mov
sub
push
jle
jnp
inc
mov
fs
test
jb
test
popa
popf
test
add
fadd
pop
inc
call
gs
outs
fs
gs
imul
add
enter
lea
jmp
push
call
or
inc
cmp
dec
clc
xor
ins
pop
aam
ins
xchg
js
mov
cmp
xchg
clc
xchg
mov
inc
idiv
outs
(bad)
out
add
sub
xchg
cmp
xchg
jae
xchg
js
fiadd
add
xor
repnz
cmp
je
xlat
stc
clc
sbb
add
add
js
cmp
mov
pop
mov
cli
js
ja
xchg
pop
mov
cmp
mov
add
add
pop
pushf
arpl
stc
js
xchg
psubw
cli
clc
jmp
add
add
add
js
outs
or
inc
jp
lock
lea
push
xchg
mov
jnp
mov
pop
loope
cli
mov
sub
jo
inc
gs
cmp
xchg
sbb
pop
ja
jae
ds
in
jo
push
out
mov
mov
mov
jae
pop
in
jae
jno
pop
mov
jl
js
out
mov
push
stos
mov
mov
push
dec
pop
mov
(bad)
mov
js
mov
mov
movs
clc
pop
imul
jae
cdq
push
div
add
push
outs
xchg
xchg
lods
jae
jl
inc
jae
mov
jo
clc
es
mov
rdtsc
nop
push
call
mov
jmp
mov
jmp
lea
cmp
cmp
jmp
sbb
push
mov
and
aad
or
inc
btr
mov
rcr
sub
xchg
movzx
bts
sar
bsr
mov
clc
cmp
shr
clc
imul
cmp
clc
test
cmp
jmp
pop
(bad)
xor
in
fs
and
jo
das
lds
in
imul
pop
cmp
jmp
or
adc
ds
inc
pop
cmp
jmp
push
call
mov
xchg
js
pushf
jge
(bad)
xor
ja
pop
ja
aad
cmp
sbb
xchg
cmp
sbb
outs
xchg
loopne
xchg
mov
clc
in
jle
outs
pop
hlt
cwde
and
int
sub
fist
ins
xchg
sub
imul
ja
push
sti
ss
xchg
mov
icebp
cmps
push
cmp
sub
xchg
clc
xchg
adc
push
std
xchg
js
xchg
imul
aaa
push
xchg
cmp
in
js
push
das
imul
ret
push
mov
xchg
xchg
pop
xchg
mov
js
pop
daa
push
xchg
cmp
je
cmp
mov
sti
ja
mov
mov
sub
adc
clc
ins
mov
cli
imul
add
push
xor
imul
stc
adc
mov
cld
dec
xchg
clc
dec
mov
mov
add
xchg
cmp
mov
xchg
clc
inc
fistp
imul
add
or
xchg
mov
cmp
add
imul
imul
jl
imul
imul
aad
(bad)
sbb
add
xor
mov
mov
stos
push
cmp
sub
push
je
clc
xor
hlt
stos
xor
enter
fild
(bad)
imul
cmp
cmp
je
jnp
js
outs
pushf
imul
jo
inc
sub
shr
stc
sub
btc
xadd
mov
test
stc
jmp
jae
mov
test
movzx
shl
stc
test
test
shl
cmp
or
inc
jmp
mov
jmp
nop
in
js
sbb
pop
mov
lock
mov
cmp
add
sbb
(bad)
movs
cmps
shr
mov
aam
ins
pop
ins
aaa
dec
xchg
js
cmp
dec
ins
xchg
ins
xchg
mov
int3
aad
stc
jne
xchg
js
cmps
outs
xchg
sub
mov
cli
lds
outs
inc
mov
outs
inc
sar
and
test
push
mov
cmp
jg
aad
nop
adc
mov
sti
movs
out
mov
clc
push
cld
push
sub
jno
sub
sbb
sub
cmp
test
sbb
(bad)
adc
adc
daa
idiv
xor
fs
mov
xor
cmc
test
shr
jmp
je
mov
sar
mov
mov
xadd
mov
test
jmp
hlt
loope
clc
test
sbb
mov
test
cmc
sbb
inc
push
dec
xchg
js
adc
movs
outs
pop
pop
xchg
sbb
xchg
outs
inc
arpl
shr
inc
mov
pop
sbb
dec
out
inc
leave
pop
sbb
clc
imul
lods
std
or
pop
adc
xchg
mov
clc
aas
nop
outs
xchg
shr
adc
outs
mov
(bad)
xchg
cmp
jbe
mov
or
fstp
in
daa
add
inc
and
inc
lods
fdivr
mov
fs
add
and
sub
outs
inc
ins
movs
outs
inc
aad
fld
out
sahf
push
xchg
cmp
nop
cwde
jl
inc
cwde
mov
mov
xor
xchg
cmp
xchg
js
sub
sahf
cmps
jge
pop
es
xchg
clc
sbb
outs
inc
inc
into
or
push
mov
popf
mov
outs
xchg
mov
cmp
je
xchg
clc
in
or
outs
pop
mov
popf
je
mov
cli
xor
and
pop
ret
cli
mov
sbb
xchg
add
cli
mov
clc
dec
outs
add
add
clc
add
jno
bound
hlt
xor
std
mov
jle
in
mov
cmps
xlat
scas
mov
ficom
out
mov
jp
pop
push
test
clc
retf
cmps
push
sti
adc
stos
ss
imul
mov
loopne
inc
pop
(bad)
mov
mov
mov
adc
jae
inc
and
jae
add
xor
adc
mov
stos
xchg
jmp
mov
clc
dec
imul
nop
jae
std
fild
clc
sub
sbb
inc
inc
inc
sahf
mov
cmp
ret
fidiv
xor
cmp
inc
sar
sahf
xchg
js
mov
or
stos
inc
add
loope
mov
ins
xchg
mov
cmp
mov
cmc
outs
xchg
adc
mov
clc
jbe
in
outs
inc
rcr
mov
cmp
in
add
xchg
cmp
mov
js
bound
push
pop
jnp
adc
cmp
xchg
xor
cmp
ret
enter
js
push
dec
adc
sbb
out
ror
repnz
or
sbb
pop
je
xchg
idiv
js
pop
sub
loopne
xchg
pop
idiv
mov
clc
or
or
js
or
inc
mov
jmp
xor
cs
ins
add
es
js
loopne
outs
inc
out
retf
enter
stos
sbb
pop
or
xchg
js
push
lock
sbb
outs
inc
adc
retf
pop
dec
(bad)
and
xchg
clc
mov
mov
jno
retf
movs
dec
and
(bad)
or
outs
mov
jg
xchg
mov
sub
outs
pop
pop
adc
js
scas
outs
inc
xor
outs
pop
ja
fs
clc
mov
outs
inc
inc
test
js
xchg
cmp
in
cmp
sbb
dec
or
mov
fsubp
outs
inc
shl
or
(bad)
ins
pop
fwait
xchg
outs
inc
lods
dec
outs
inc
pop
xor
cmp
inc
xchg
mov
mov
mov
mov
mov
repnz
pop
pop
push
xchg
cmp
ror
cmp
push
fwait
push
pusha
jecxz
(bad)
cmps
fsubr
cmp
push
xchg
clc
inc
addr16
das
xchg
cmp
sbb
outs
inc
push
daa
fwait
push
sar
pop
jns
xchg
cmp
rcr
inc
imul
(bad)
mov
mov
jo
mov
cmps
mov
js
ins
ss
leave
lock
jge
add
jns
adc
out
test
outs
jne
js
movs
inc
test
mov
xor
jp
mov
cs
test
push
cmp
aam
xchg
mov
and
xchg
fcom
xchg
jp
in
sbb
cmp
jns
mov
rol
inc
or
clc
jne
test
mov
jg
sub
(bad)
fiadd
xchg
ins
imul
clc
sub
xchg
test
mov
clc
test
test
in
aad
jp
ins
mov
test
and
inc
pop
jl
xchg
cmps
or
mov
repnz
das
test
cmps
pop
loop
xchg
movs
xchg
jp
imul
cs
jp
push
fiadd
test
inc
fistp
std
push
inc
aaa
fsub
aam
cmp
jae
movzx
jmp
mov
xchg
js
cmps
dec
outs
inc
cmps
das
or
sahf
jne
outs
pop
cld
js
xchg
cmp
iret
outs
xchg
mov
cmp
and
jg
xchg
mov
clc
imul
(bad)
sbb
jo
pop
xor
movs
xchg
add
cli
cmp
and
popa
jo
clc
push
retf
addr16
outs
inc
jp
daa
int3
jge
clc
pop
jl
test
mov
pop
add
jp
add
jne
(bad)
jne
mov
pop
jp
push
jo
jp
xchg
push
cmp
add
xchg
ret
test
dec
loop
test
jns
test
jmp
outs
inc
cld
(bad)
outs
(bad)
sbb
ja
xchg
js
bound
mov
pop
xchg
clc
push
cmp
outs
(bad)
pop
cld
ret
inc
adc
xchg
mov
or
dec
lds
clc
sahf
or
(bad)
pop
pop
loop
inc
push
and
mov
or
inc
cs
mov
mov
mov
clc
imul
xchg
dec
retf
(bad)
repnz
aam
(bad)
clc
fidiv
pop
ds
clc
adc
pop
loope
sbb
mov
mov
pop
jecxz
jo
sub
ja
pop
js
jo
mov
jae
(bad)
sbb
cmp
jo
jl
pop
jae
mov
jbe
push
pop
shr
and
call
jg
pop
mov
call
dec
xchg
pop
adc
pop
psadbw
xchg
(bad)
jno
or
adc
(bad)
loopne
pop
cmp
aas
fmul
sbb
push
mov
pop
mul
fisubr
stos
mov
sbb
mov
test
sub
mov
jmp
jb
mov
sub
cmp
bswap
movzx
mov
sbb
clc
cmp
stc
and
cmp
add
sub
jmp
mov
jmp
inc
jecxz
js
ja
outs
(bad)
repnz
pop
mov
rcl
mov
cmp
ret
xchg
clc
dec
adc
xchg
mov
clc
add
or
xchg
js
inc
shr
sub
outs
inc
mov
push
xchg
js
sub
inc
(bad)
es
js
sub
inc
sbb
pop
and
adc
jl
xchg
push
icebp
xchg
cmp
cmp
js
inc
fld
jno
aaa
outs
inc
mov
aaa
adc
xchg
js
test
outs
inc
xchg
mov
ins
pop
pop
mov
fcom
outs
pop
dec
retf
cmp
int
mov
cmp
mov
fucom
mov
mov
clc
rcl
pop
icebp
cdq
mov
xchg
js
sub
inc
je
dec
ins
xchg
jge
cmp
jg
clc
and
test
mov
fmul
cs
pop
sub
xchg
cmp
sub
xchg
clc
sub
push
xchg
in
pop
sbb
pop
adc
mov
clc
in
js
inc
push
jno
in
xchg
mov
lods
adc
pop
mov
adc
mov
out
xchg
jge
adc
js
fcmovnb
out
pop
cmp
lods
dec
adc
and
adc
mov
popa
add
pop
mov
adc
xor
clc
xchg
cmps
out
mov
dec
adc
cdq
and
dec
adc
clc
ss
mov
inc
pop
lock
cmp
jae
xchg
cmp
repnz
imul
pop
add
cmp
inc
xchg
clc
daa
xlat
in
pop
cwde
xchg
js
mov
sub
push
lds
xchg
clc
pop
cmp
or
jge
inc
into
xchg
ins
xchg
retf
xchg
mov
clc
push
mov
inc
pop
ja
outs
(bad)
imul
adc
sbb
loope
outs
inc
shl
adc
sub
xchg
add
inc
and
lahf
ins
pop
fidiv
xchg
mov
mov
js
mul
outs
(bad)
out
sub
xchg
or
xchg
mov
gs
jne
jb
push
popa
ins
jne
push
add
cli
bswap
movsx
mov
mov
mov
jmp
push
call
sub
xchg
clc
dec
mov
mov
xchg
cmp
and
xchg
mov
cmp
inc
add
push
outs
xchg
sub
mov
add
stos
ret
mov
xchg
mov
mov
js
pop
in
test
inc
sub
std
mov
xchg
mov
(bad)
(bad)
outs
inc
xchg
shr
push
xlat
outs
inc
push
test
pop
jno
outs
inc
(bad)
or
xchg
cmp
push
xchg
js
je
outs
(bad)
xchg
fsubr
xchg
xchg
js
(bad)
clc
outs
(bad)
xor
outs
(bad)
aam
mov
fs
adc
xchg
clc
lods
fld
pop
mov
xchg
cmp
sub
xchg
clc
out
add
(bad)
lods
ins
xchg
mov
fs
sbb
xchg
clc
adc
les
outs
xchg
xchg
xchg
js
push
cmp
dec
cdq
or
inc
push
cdq
sub
js
inc
loop
push
sub
pop
cwde
cmp
enter
js
push
fwait
addr16
sbb
xchg
test
addr16
add
adc
retf
xchg
sbb
clc
(bad)
mov
addr16
mov
adc
and
cwde
cmp
xor
retf
aaa
addr16
ret
or
xor
fs
pop
adc
add
push
cwde
clc
pushf
cmps
addr16
into
lds
xchg
jg
mov
shr
aad
mov
pop
inc
das
addr16
mov
fstp
addr16
loopne
mov
jmp
clc
(bad)
ins
pop
addr16
adc
lea
out
cwde
cmp
or
enter
call
and
lahf
addr16
scas
mov
mov
(bad)
pop
and
outs
(bad)
jbe
sub
fs
js
cmp
xchg
outs
pop
add
push
movs
outs
inc
arpl
loopne
(bad)
jbe
jmp
cmp
mov
xchg
js
lock
ins
pop
push
sbb
xchg
mov
stos
sar
clc
add
push
add
inc
pop
push
pusha
add
cmp
mov
push
pop
or
mov
clc
cmps
rcr
rcr
xchg
cmp
test
add
xor
or
outs
inc
jg
mov
scas
add
xchg
mov
mov
stos
xchg
push
popa
outs
pop
cmps
xor
xchg
clc
stos
ret
inc
ficom
outs
(bad)
jecxz
sbb
mov
jb
mov
cmp
mov
scas
outs
(bad)
mov
inc
outs
and
xchg
sub
out
daa
call
cmp
cmp
call
scas
(bad)
call
and
gs
pushf
push
dec
call
pop
mov
mov
int3
hlt
call
shl
pushf
mov
gs
imul
xchg
cmp
in
out
call
adc
add
mov
pop
gs
mov
(bad)
call
mov
test
pop
gs
sbb
cmps
popw
in
in
call
scas
test
call
in
adc
xchg
repz
pop
fisubr
call
ins
inc
add
cmp
mov
(bad)
call
(bad)
and
neg
test
retf
or
rcr
mov
shl
ror
sar
mov
test
cmp
mov
cmc
cmp
add
jmp
or
and
sub
jno
jp
xchg
js
pusha
scas
outs
pop
rcl
clc
in
popf
outs
inc
mov
fldcw
mov
jecxz
jno
cmp
fdivr
xchg
cmp
andnps
movs
xchg
cmp
retf
pop
retf
in
clc
mov
retf
push
push
out
cmp
or
lahf
adc
mov
mov
js
cmc
dec
adc
sar
popf
add
out
mov
ret
loope
out
mov
clc
cdq
mov
cmp
mov
clc
int3
ficom
inc
sub
mov
(bad)
push
(bad)
adc
and
push
inc
das
fdivr
dec
repnz
lea
stc
test
push
btr
btr
mov
test
test
je
mov
test
cmp
test
jmp
or
pop
add
and
js
leave
mov
outs
inc
std
jne
outs
xbegin
mov
mov
cmp
xchg
mov
xchg
cmp
xchg
clc
inc
sbb
outs
xchg
sub
cdq
or
outs
mov
stos
in
inc
retf
xchg
clc
jg
outs
xchg
pop
adc
xchg
cmp
shr
cmc
test
xchg
cmp
mov
mov
outs
inc
jae
cmp
cmc
rol
xchg
js
bound
inc
push
jbe
ins
pop
mov
into
xchg
mov
mov
out
stos
outs
pop
mov
xchg
cmp
xchg
mov
xchg
cmp
or
outs
xchg
and
mov
clc
daa
mov
outs
pop
daa
dec
xchg
xchg
mov
xchg
js
sbb
inc
js
sbb
sub
scas
ins
xchg
(bad)
not
js
pop
xor
mov
rol
rcl
mov
loope
xchg
aad
or
outs
(bad)
jecxz
push
ins
xchg
xchg
mov
clc
add
out
outs
inc
mov
in
jmp
lds
nop
cmp
int3
jns
outs
(bad)
outs
push
dec
outs
(bad)
das
mov
outs
inc
xchg
jmp
cmps
shr
nop
cmp
mov
nop
cmp
seto
(bad)
sub
ja
cmp
pop
nop
cmp
iret
lahf
outs
inc
push
outs
(bad)
out
xor
sub
sbb
pop
add
nop
cmp
add
clc
sub
clc
cmps
push
nop
mov
clc
inc
out
loope
inc
scas
movs
outs
inc
sub
outs
xchg
dec
mov
xchg
js
imul
inc
inc
popa
adc
xchg
jl
outs
pop
push
(bad)
adc
and
push
pop
xor
mov
add
jmp
clc
clc
lea
add
xchg
clc
movzx
cmp
jmp
jb
mov
jmp
push
(bad)
adc
and
push
pop
aas
leave
dec
or
adc
ds
inc
pop
jae
mov
cmp
stc
mov
test
test
mov
test
stc
cmp
cmp
jmp
sub
lock
(bad)
lods
and
pop
and
xchg
js
outs
xchg
outs
inc
xlat
out
fwait
outs
pop
dec
fldenv
xchg
clc
addr16
outs
inc
das
cmps
in
outs
(bad)
cs
pop
je
inc
xchg
cmp
imul
(bad)
jns
xchg
push
xchg
pop
pop
stc
js
mov
push
pop
sahf
fidiv
cli
cmp
stos
or
cmp
call
xor
popa
inc
aas
xchg
clc
mov
pop
xchg
xor
retf
int
outs
xchg
mov
outs
mov
outs
inc
call
mov
pop
rol
xchg
cmp
call
arpl
mov
sbb
rcl
outs
inc
inc
int3
sbb
(bad)
dec
cmps
push
outs
pop
or
and
mov
cmp
jb
xchg
clc
out
ins
fld
inc
push
sbb
jg
outs
(bad)
jmp
sbb
ins
lds
les
xor
mov
in
xchg
cmp
adc
outs
(bad)
mov
ins
pop
test
adc
push
xchg
mov
js
mov
outs
in
ins
xchg
scas
(bad)
out
mov
clc
icebp
aam
ins
xchg
into
xchg
mov
leave
icebp
stos
outs
pop
pop
iret
adc
outs
inc
sub
adc
(bad)
outs
pop
push
je
cmp
mov
mov
ja
clc
mov
loope
mov
fisttp
iret
lahf
ins
pop
push
jne
xchg
clc
xchg
cmp
outs
inc
lods
xor
rol
outs
xchg
mov
xchg
cmp
nop
cwde
push
inc
lods
mov
mov
pop
(bad)
cmp
js
jb
outs
pop
retf
xchg
clc
fidiv
add
outs
(bad)
mov
(bad)
outs
pop
in
imul
mov
cmp
cwde
ja
clc
sbb
jb
mov
add
ins
adc
push
js
cmp
jnp
add
jmp
int
push
clc
sub
je
inc
lods
sbb
(bad)
xchg
shr
jno
adc
cmp
ficom
js
gs
jmp
bound
xchg
adc
clc
mov
jbe
mov
add
and
bound
pop
arpl
sti
jmp
jg
push
xchg
inc
mov
add
jmp
mov
cmp
stos
jg
aaa
iret
dec
jl
sahf
add
mov
or
pop
sbb
add
cmp
mov
jg
(bad)
cmp
jl
(bad)
add
repnz
ret
stos
mov
jl
jle
add
pop
jmp
jo
mov
js
pushf
jo
js
sub
outs
pop
stos
ret
mov
cmp
or
or
mov
lods
mov
outs
(bad)
outs
in
ins
pop
jno
pop
xchg
js
add
sub
pop
nop
outs
sbb
jmp
xchg
mov
cmp
cmp
neg
pop
mov
push
mov
cmps
jecxz
not
xchg
mov
clc
jns
std
ins
xchg
retf
clc
add
cs
inc
pop
pop
lea
gs
inc
inc
xchg
mov
xchg
pop
outs
(bad)
cmps
dec
outs
outs
pop
rcl
cmp
inc
xchg
mov
cmp
mov
xchg
clc
add
cdq
outs
xchg
js
mov
clc
ja
enter
leave
jg
cmp
sub
stc
sahf
jbe
js
jmp
xor
xchg
js
fs
push
lds
xchg
cmp
iret
ins
pop
fild
jg
inc
in
push
xchg
hlt
lea
inc
dec
push
ins
xchg
mov
xor
ins
xchg
cli
xchg
clc
or
outs
pop
or
xchg
cmp
pop
xchg
cmp
push
mov
outs
inc
ja
in
pop
lahf
xor
xchg
mov
clc
sub
inc
and
outs
inc
adc
xor
jmp
clc
lahf
add
xchg
test
outs
(bad)
mov
cwde
add
xchg
js
loopne
outs
inc
loop
outs
pop
push
retf
int3
xchg
mov
scas
mov
inc
out
outs
xchg
pop
or
jg
pop
stc
aas
in
loopne
xchg
mov
clc
movs
pop
outs
inc
or
jmp
test
cmp
or
add
cli
clc
enter
xchg
inc
(bad)
mov
clc
mov
arpl
loope
add
cli
cmp
(bad)
sub
xchg
not
mov
add
bt
shr
shl
sub
mov
inc
bsf
btc
mov
test
bt
lea
btr
mov
sub
movzx
cmp
jmp
push
(bad)
adc
and
je
ds
aas
int
ins
xchg
cmp
inc
sub
push
xchg
clc
cmp
pop
ins
pop
push
pop
or
outs
inc
vpavgb
inc
rcr
clc
push
cmp
mov
rcr
xchg
cmp
repz
mov
clc
xlat
lahf
popf
push
out
icebp
out
mov
ins
pop
xor
in
cmps
mov
mov
mov
mov
mov
aas
xchg
clc
push
retf
outs
pop
lods
cmp
clc
int
mov
pop
test
xchg
js
adc
mov
sbb
outs
(bad)
or
cmc
outs
pop
movs
mov
je
outs
inc
dec
pop
cmp
xchg
clc
mov
stc
ja
stc
popa
scas
xchg
clc
ret
sahf
ins
pop
(bad)
mov
xchg
mov
clc
int3
cli
jl
xchg
rcr
stc
ret
call
in
dec
pop
outs
pop
inc
mov
cmp
dec
xchg
mov
js
pop
push
in
outs
pop
pop
dec
pop
xchg
mov
xor
pop
or
xchg
mov
clc
sub
xchg
mov
and
mov
bound
cs
clc
int3
pop
xchg
outs
pop
in
dec
add
cmp
and
xchg
clc
(bad)
dec
retf
cmp
ins
pop
cmps
test
xchg
clc
mov
jne
inc
pop
add
add
enter
push
outs
inc
inc
ret
outs
inc
mov
outs
pop
adc
scas
mov
inc
popf
mov
repnz
push
xchg
cmp
(bad)
add
sub
dec
xor
(bad)
or
cmp
js
pop
sbb
cmc
and
test
sub
test
add
mov
jmp
inc
shr
cmp
mov
jmp
push
jmp
cmp
or
bswap
inc
mov
shr
test
stc
jmp
jo
xchg
clc
xor
jno
(bad)
xor
cmp
ficom
ins
pop
int3
xchg
and
les
sbb
int
pop
mov
je
clc
mov
fist
outs
(bad)
into
mov
outs
mov
stc
jmp
dec
leave
retf
pop
js
popf
jmp
add
sbb
adc
add
(bad)
or
call
aas
inc
aas
mov
mov
inc
cdq
fs
jns
cdq
mov
push
cmp
cmps
sti
movs
or
mov
inc
call
jns
mov
mov
inc
cdq
jae
mov
stc
add
jmp
clc
and
add
movzx
clc
mov
clc
cmp
jmp
dec
push
xchg
clc
outs
in
ins
pop
pop
add
in
outs
inc
mov
xchg
pop
xchg
clc
adc
outs
inc
jbe
xchg
outs
(bad)
push
mov
cmp
not
xchg
js
data16
leave
jl
inc
xchg
test
(bad)
cli
cmp
stos
gs
push
xchg
lahf
enter
dec
out
cli
mov
mov
sbb
mov
xchg
clc
xchg
mov
ins
xchg
clc
xchg
mov
clc
(bad)
push
dec
outs
inc
cmp
or
nop
xchg
imul
mov
jnp
cmp
xchg
cmp
js
pop
shr
int
push
clc
loope
loope
inc
mov
movs
outs
(bad)
pushf
ja
outs
pop
loop
or
rcl
cmp
push
xchg
clc
add
outs
xchg
fcom
in
inc
sbb
or
add
sysret
lea
mov
clc
pop
jb
inc
xchg
push
outs
out
fmul
ss
or
pop
icebp
ins
sbb
mov
sbb
jae
out
outs
and
inc
jecxz
mov
pop
pop
push
mov
clc
or
out
out
pop
fsub
(bad)
jb
in
stc
or
sbb
ret
xchg
adc
sbb
mov
mov
mov
lahf
out
sbb
push
mov
pop
sbb
push
sbb
out
xor
das
int
sbb
scas
repnz
cmp
xchg
clc
fcom
jno
ins
xchg
and
mov
test
(bad)
dec
xchg
ins
pop
add
jle
inc
or
ins
xchg
cmp
xchg
clc
cwde
lock
outs
inc
fcom
outs
(bad)
std
test
ins
pop
fst
(bad)
xchg
mov
cmp
mov
outs
(bad)
xor
gs
pop
js
jno
cmp
and
pop
outs
inc
or
mov
inc
ret
outs
pop
ins
dec
mov
(bad)
outs
inc
aad
cmp
xor
xlat
pop
xor
enter
pop
dec
outs
inc
adc
push
mov
dec
jae
mov
cmp
test
movzx
cmc
shl
test
cmp
shl
test
or
bswap
mov
inc
mov
cmp
cmc
shr
test
imul
jmp
test
xchg
js
jno
outs
(bad)
xchg
sbb
ins
pop
movs
dec
xchg
js
ret
inc
pop
(bad)
out
pop
(bad)
push
pop
xchg
clc
(bad)
xchg
aam
inc
scas
es
outs
(bad)
mov
call
cmp
jnp
xchg
js
(bad)
ins
xchg
icebp
loopne
cmp
mov
ins
pop
imul
xchg
cmp
xchg
js
out
outs
inc
aam
outs
pop
(bad)
push
xchg
cmp
cmp
rcr
outs
inc
aas
xchg
clc
mov
setno
enter
mov
mov
mov
js
push
ins
xchg
outs
lods
fwait
push
mov
ins
pop
sub
cmp
sub
retf
jne
xchg
xchg
adc
cld
adc
ins
pop
or
mov
clc
mov
outs
inc
push
mov
ins
xchg
jns
int
in
adc
sub
rol
pop
je
in
jg
push
fst
jg
cmp
jg
jb
mov
test
inc
aad
bound
clc
aas
retf
add
pop
pusha
push
jg
sar
jg
inc
push
add
pop
sub
cmp
imul
cwde
add
stos
add
lods
mov
xchg
pop
hlt
jl
(bad)
adc
add
iret
add
lods
lock
jne
mov
add
push
cmp
daa
out
jge
mov
cmp
div
mov
fs
(bad)
div
pop
jne
cmp
jmp
push
call
call
add
cmp
cmp
cmp
je
test
jmp
jae
cmp
movzx
mov
sbb
and
mov
sar
and
movzx
rcl
add
movsx
bsr
mov
test
ror
mov
or
btr
mov
add
test
cmp
jmp
push
fild
sahf
std
pop
adc
and
jl
xor
imul
xchg
clc
push
mov
mov
cmp
cmp
xchg
mov
cmp
pop
jns
clc
ror
nop
iret
xchg
mov
clc
adc
outs
pop
lods
(bad)
hlt
xchg
mov
mov
sbb
xchg
js
sbb
sbb
mov
movs
xchg
cmp
popf
mov
js
sub
fwait
xchg
cmp
inc
fiadd
outs
(bad)
push
pop
imul
pop
push
hlt
jge
mov
popa
or
fimul
pop
and
gs
xchg
js
cmps
pop
outs
inc
dec
cmp
test
lds
xchg
cmp
clc
push
arpl
ins
pop
je
xchg
mov
js
mov
mov
push
mov
js
ins
mov
outs
pop
outs
jno
cmp
sbb
cwde
outs
(bad)
mov
push
imul
daa
xlat
icebp
outs
(bad)
(bad)
iret
outs
xchg
repz
clc
ret
mov
bound
xchg
js
out
fisubr
sbb
call
xchg
cmp
out
shl
xchg
clc
push
cwde
iret
outs
inc
(bad)
xor
jmp
mov
jb
js
mov
outs
inc
mov
pop
pushf
dec
outs
pop
(bad)
fidiv
js
jl
outs
inc
jp
cmc
ins
pop
scas
add
xchg
xchg
cmp
ror
mov
cmp
imul
imul
inc
push
(bad)
adc
cmp
push
pop
cmp
test
mov
inc
pop
bsf
shl
or
movzx
rcl
test
movzx
shl
or
add
movzx
test
shl
cmp
test
jmp
mov
shr
sbb
xchg
mov
clc
sub
jb
xchg
mov
cmp
inc
xchg
clc
sub
xor
sub
sub
xor
call
outs
xchg
enter
and
cmp
xor
sbb
sbb
out
and
fsub
xchg
sbb
cmp
cmp
jno
inc
stc
fistp
lods
out
xchg
cmp
out
cmp
adc
pop
(bad)
push
pop
sbb
mov
js
mov
inc
test
cmp
jmp
add
add
popa
ins
inc
ins
ins
outs
arpl
stc
cmps
xchg
js
repz
dec
fldenv
clc
jnp
out
outs
inc
xor
aad
outs
pop
pusha
in
xchg
cmp
iret
xchg
mov
cmp
test
push
outs
xchg
test
fst
outs
inc
test
adc
pop
dec
inc
ficomp
mov
js
jnp
(bad)
mov
inc
xchg
out
loopne
cmp
js
or
xchg
push
out
xor
jmp
mov
mov
retf
scas
jno
je
int3
lea
inc
(bad)
lea
mov
pop
sti
cmc
mov
jb
mov
jne
jb
mov
retf
jb
loop
jb
add
or
mov
js
pop
mov
inc
fcom
pop
mov
mov
clc
ret
(bad)
or
push
jb
inc
inc
movs
jb
push
add
in
xchg
xor
jb
ss
jb
rcl
fbstp
fs
loopne
xchg
fsincos
arpl
xor
pop
ins
lea
aad
(bad)
(bad)
sbb
push
mov
shr
cmp
xchg
js
sbb
outs
(bad)
mov
aad
mov
jae
mov
cmp
pushf
mov
jmp
mov
clc
jb
mov
and
xchg
cmp
or
sar
and
lods
mov
xchg
js
mov
jno
inc
pop
cdq
inc
outs
pop
into
jmp
xchg
js
push
add
outs
dec
std
ins
pop
mov
mov
mov
mov
mov
or
pop
fistp
cmp
mov
mov
cmp
stos
icebp
sub
int3
lock
xchg
mov
clc
clc
push
outs
pop
lock
lock
mov
mov
or
clc
cmp
add
push
xchg
fdivr
cmp
cwde
das
stc
js
mov
add
push
pop
loop
cli
js
and
add
cli
mov
js
leave
neg
sahf
xchg
test
mov
jp
out
jle
jp
jmp
push
sub
xchg
outs
push
sub
push
or
clc
pop
clc
test
clc
movs
call
loop
(bad)
jne
test
sub
popa
xchg
clc
scas
(bad)
jae
inc
loop
das
test
fld
or
xchg
dec
in
jp
mov
std
jmp
test
in
sti
jp
pop
iret
mov
inc
jp
nop
loopne
test
in
pop
add
jp
jmp
cmp
test
push
xchg
mov
clc
in
imul
ss
inc
xchg
js
jne
outs
inc
inc
stos
outs
(bad)
mov
jg
pop
stos
lock
outs
inc
jne
shr
jg
xchg
clc
in
test
outs
inc
mov
mov
mov
mov
imul
int
pop
xchg
clc
adc
ins
pop
pop
lock
mov
xlat
shr
outs
das
xchg
cmp
(bad)
outs
(bad)
or
xchg
mov
cmp
outs
(bad)
aad
adc
dec
(bad)
xchg
clc
adc
(bad)
push
and
stc
mov
or
cdq
xchg
js
pop
popa
outs
(bad)
int3
push
xchg
mov
fwait
push
push
lahf
ins
pop
in
and
jbe
cmp
adc
adc
outs
inc
pop
sub
pop
sub
cmp
sbb
mov
xchg
js
cmp
sub
in
xchg
xchg
clc
sub
and
pushf
je
clc
add
jo
outs
pop
xchg
js
mov
js
leave
outs
(bad)
dec
scas
adc
inc
loopne
pop
add
mov
xchg
mov
clc
xchg
aam
ins
pop
xchg
hlt
xchg
mov
js
ftst
sti
mov
xchg
cmp
xchg
cmp
inc
(bad)
xchg
clc
shl
pop
xchg
mov
mov
xchg
stos
pop
outs
inc
xadd
lock
mov
mov
push
hlt
mov
mov
cmova
cmp
xchg
clc
(bad)
and
outs
inc
mov
outs
inc
jp
in
outs
(bad)
mov
outs
inc
mov
mov
ins
xchg
inc
mov
jo
mov
js
rol
imul
xchg
clc
mov
sub
xor
mov
mov
mov
clc
jo
push
ins
xchg
int
aam
clc
and
out
daa
fisubr
outs
imul
stos
xchg
cmp
inc
test
cmp
jmp
inc
cmp
mov
jmp
test
outs
inc
getsec
push
outs
pop
lahf
or
div
inc
push
outs
(bad)
fidiv
jp
pop
lods
sub
xchg
cmp
popf
mov
(bad)
xchg
clc
push
xchg
jp
xchg
mov
pusha
mov
adc
xchg
cmp
pop
repz
js
inc
outs
(bad)
scas
cdq
jp
inc
dec
ins
push
outs
inc
stos
add
stos
ins
pop
inc
fild
sbb
xchg
clc
add
(bad)
push
push
xchg
jmp
inc
outs
inc
adc
in
not
js
add
inc
fmul
outs
mov
inc
cmp
push
and
mov
mov
in
rcr
xchg
(bad)
in
(bad)
mov
inc
(bad)
lods
jmp
fstp
rol
lds
daa
lods
jl
lods
add
cmp
jp
stos
les
push
mov
jmp
xchg
idiv
adc
cmp
push
xchg
jecxz
les
out
imul
push
cmp
mov
les
popa
dec
push
inc
cmp
add
psraw
les
mov
(bad)
sub
xchg
out
cmp
push
xor
mov
pop
pushf
dec
push
pop
add
push
in
inc
in
cmps
cmc
mov
in
in
les
mov
mov
mov
sub
adc
inc
mov
mov
xchg
sbb
xchg
jl
sub
push
push
sbb
mov
mov
js
retf
inc
shl
out
ins
pop
adc
push
loopne
mov
js
or
pop
ins
xchg
(bad)
xchg
mov
cmp
xchg
js
gs
outs
inc
icebp
leave
pop
outs
pop
push
dec
ficom
xchg
js
and
stc
mov
xchg
cmp
pop
xchg
clc
xchg
(bad)
push
outs
(bad)
mov
imul
cmp
(bad)
mov
mov
fistp
ins
pop
push
push
mov
popf
je
outs
inc
shl
mov
in
enter
aad
outs
inc
lea
outs
(bad)
out
ins
shr
movs
or
xchg
outs
(bad)
ins
dec
inc
ins
pop
mov
ja
mov
in
gs
(bad)
in
dec
ins
pop
clc
xor
mov
clc
aas
ja
pop
jbe
aam
cmp
loopne
js
and
pop
ins
pop
and
inc
(bad)
clc
fadd
outs
inc
dec
(bad)
pop
je
popf
xchg
clc
cli
add
pop
inc
xchg
mov
mov
dec
cmps
xor
clc
imul
add
and
pop
pop
ss
sti
mov
mov
add
rol
pop
xchg
pop
sti
clc
je
std
add
(bad)
repz
pop
xchg
mov
sti
clc
idiv
adc
xor
stc
sbb
clc
js
inc
add
out
dec
add
mov
jns
xchg
add
sub
pop
pop
lea
sti
cmp
push
stc
adc
clc
js
jbe
(bad)
jg
popw
xchg
push
cmp
adc
cmp
push
sub
push
and
xchg
jnp
inc
mov
push
test
push
gs
test
jb
sti
add
test
jnp
fsubr
bound
js
inc
test
mov
cmp
aaa
test
js
mov
sub
xchg
enter
pop
fnstenv
jnp
jo
adc
mov
add
pop
not
or
js
jno
test
popa
pop
jnp
push
popf
cmp
js
xor
(bad)
(bad)
jne
xchg
mov
outs
jae
push
gs
imul
ins
add
add
add
(bad)
inc
mov
test
shr
imul
test
cmp
cmp
jmp
push
(bad)
adc
sub
fs
ds
dec
push
(bad)
adc
and
jo
xor
push
and
inc
xchg
js
ds
outs
xbegin
ror
xchg
std
outs
inc
adc
mov
dec
xchg
clc
mov
xchg
xchg
add
mov
fisubr
arpl
outs
outs
(bad)
retf
push
outs
inc
push
mov
scas
aad
cmp
sbb
add
xchg
js
in
fsubr
mov
aas
xchg
mov
in
leave
outs
pop
add
xchg
cmp
stos
fsubr
psrlw
xchg
cs
mov
clc
jg
outs
(bad)
test
jb
bound
xchg
mov
sub
setno
and
outs
pop
xchg
js
outs
sahf
outs
pop
call
xchg
inc
xchg
mov
loopne
inc
outs
mov
sub
xchg
outs
(bad)
out
and
fcmovnb
xchg
cmp
je
xchg
clc
scas
test
mov
and
call
pop
cwde
xchg
mov
clc
jae
xchg
ins
xchg
(bad)
hlt
adc
clc
push
movs
pop
outs
inc
rcr
sbb
push
push
out
xchg
push
cmp
pop
sub
clc
sbb
dec
ins
pop
or
xchg
js
push
std
outs
inc
stc
shl
pop
dec
fisttp
clc
imul
mov
fisttp
sub
xchg
mov
js
sub
push
cmp
jno
mov
clc
out
outs
(bad)
jb
mov
xchg
mov
clc
mov
outs
inc
cmps
sub
xor
clc
ret
(bad)
mov
rep
inc
sti
cmp
outs
pop
imul
js
mov
outs
inc
cmps
sbb
xchg
js
test
add
xchg
mov
cmp
xchg
clc
fstp
outs
inc
xchg
or
inc
mov
outs
xchg
mov
outs
pop
icebp
jne
xchg
cmp
daa
test
clc
fs
sbb
push
xchg
sub
aad
jbe
cmp
mov
cmp
mov
test
fwait
test
cmps
mov
xchg
imul
sub
inc
jp
or
push
jp
pop
dec
jae
xchg
inc
jp
sub
mov
add
mov
cmp
retf
xchg
lods
jp
mov
outs
test
jnp
jp
or
idiv
jp
jnp
test
arpl
xchg
jp
inc
jmp
adc
test
xchg
aam
clc
(bad)
xchg
jns
push
and
test
int
test
cmp
mov
xlat
fild
data16
dec
in
sub
hlt
jmp
xchg
clc
pusha
jmp
ins
pop
jbe
push
xchg
js
add
outs
inc
xchg
lods
imul
cmp
popa
les
jne
sub
cmps
mov
or
cmp
xchg
mov
clc
(bad)
mov
outs
xchg
dec
movs
stc
nop
push
clc
jmp
outs
inc
add
inc
cwde
xchg
clc
daa
jge
neg
adc
adc
call
mov
out
mov
js
push
xchg
outs
(bad)
pop
mov
addr16
inc
xchg
cmp
adc
inc
mov
add
add
pop
xor
pop
aad
outs
mov
mov
xchg
cmp
and
xchg
mov
cmp
pop
fcom
ins
pop
sbb
in
loop
xchg
cmp
mov
js
and
inc
ins
cdq
xchg
mov
fs
mov
js
mov
test
stos
cmp
clc
call
sbb
push
ins
out
inc
arpl
fwait
push
or
retf
and
mov
mov
dec
fadd
out
(bad)
cmp
sbb
adc
mov
out
(bad)
idiv
out
xchg
outs
adc
and
loop
out
out
inc
sbb
xchg
out
(bad)
mov
outs
shr
sbb
sbb
inc
(bad)
test
lds
adc
cld
cli
cmc
out
xchg
xor
(bad)
out
inc
out
mov
inc
xchg
ins
sbb
daa
mov
xchg
xchg
adc
mov
popf
out
inc
mov
mov
clc
or
out
inc
in
loopne
or
imul
xchg
cmp
add
js
into
scas
push
inc
movs
imul
cmp
pop
push
sbb
imul
xchg
sub
xchg
mov
jp
cs
js
lock
into
pop
arpl
js
xor
inc
or
dec
push
in
jl
xchg
out
cmps
xchg
mov
clc
push
mov
and
xlat
xchg
js
push
test
push
imul
mov
mov
js
jmp
push
out
xchg
out
xchg
mov
mov
clc
mov
xor
outs
pop
or
sub
outs
inc
dec
lds
mov
pop
xor
add
cs
xchg
cmp
dec
adc
outs
xchg
shr
adc
xchg
js
fld
xor
ins
pop
rcr
xchg
js
dec
outs
xchg
mov
mov
pop
pop
jb
mov
mov
mov
sar
rol
and
adc
mov
clc
loope
add
cmc
push
xchg
add
bound
sti
cmp
and
clc
inc
mov
add
cmc
loop
push
jecxz
ins
xchg
xchg
mov
xchg
mov
js
xor
outs
mov
ret
js
sti
mov
add
aaa
jge
ins
xchg
fwait
xchg
mov
clc
imul
imul
call
xor
mov
clc
sub
dec
adc
xchg
mov
arpl
and
jecxz
and
add
adc
popf
mov
sub
inc
cmp
scas
ins
pop
lock
in
mov
mov
js
aad
outs
xbegin
fcmovnbe
sti
xchg
mov
mov
icebp
inc
xor
and
js
xor
pusha
xchg
shr
icebp
lea
clc
and
test
cmc
cmp
jmp
outs
mov
clc
sub
retf
pop
fisubr
cmp
movs
xchg
mov
cmp
mov
cmp
xchg
std
fst
xchg
clc
icebp
arpl
pop
aad
out
mov
mov
js
or
xchg
xchg
clc
cwde
push
outs
inc
or
fld
push
push
les
xchg
js
push
outs
(bad)
xchg
inc
mov
nop
xchg
cmp
or
stc
lods
xchg
xchg
js
add
das
outs
xchg
adc
xchg
clc
jo
push
outs
inc
lods
data16
(bad)
bnd
ins
xchg
sbb
xchg
clc
pop
xchg
mov
mov
outs
xchg
or
sbb
xchg
clc
ins
pop
mov
xchg
cmp
adc
xchg
js
sbb
outs
xchg
jns
xchg
cmp
mov
js
dec
push
outs
inc
push
jne
outs
inc
stos
push
outs
pop
cmp
or
adc
and
jae
fimul
repz
or
add
cmc
cmp
cmp
jb
jmp
jae
mov
mov
clc
jmp
jne
cmp
jne
cmp
jmp
lds
retf
outs
pop
dec
fnstenv
clc
ja
stc
outs
inc
aas
mov
outs
(bad)
and
mov
pop
ins
call
outs
fcom
xchg
cmp
mov
inc
outs
xchg
xchg
cld
xchg
mov
and
xchg
js
add
inc
call
or
push
outs
(bad)
lahf
dec
add
add
rcl
das
gs
cmps
xchg
adc
ins
cmc
popw
arpl
cdq
clc
xchg
popw
mov
lods
mov
clc
push
jb
gs
cs
(bad)
fwait
in
popw
jnp
mov
jae
pop
jmp
rcr
clc
xor
gs
xor
or
add
push
test
mov
jl
pop
call
loopne
call
pop
loop
push
ret
pop
xor
test
gs
in
mov
mov
mov
cdq
clc
sti
repz
je
xchg
push
cdq
js
(bad)
dec
gs
cs
out
stc
in
jb
js
in
gs
cmp
fnstsw
jmp
pusha
push
push
gs
sub
xchg
test
call
or
jmp
push
outs
(bad)
call
in
cmps
popw
dec
lods
repnz
jle
(bad)
popw
xchg
mov
dec
and
dec
dec
xchg
mov
inc
xor
(bad)
fimul
xchg
cmp
cmp
xchg
js
pop
add
in
aam
outs
pop
jl
mov
clc
pusha
or
outs
inc
add
div
pop
arpl
aad
cmp
sbb
xchg
cmp
mov
stos
shl
stc
mov
xchg
mov
and
sbb
and
mov
xchg
out
in
cmp
sbb
leave
cmp
ins
inc
pop
xchg
ins
(bad)
call
push
rcr
mov
cmp
add
jmp
jmp
jmp
pop
cmp
and
push
clc
popa
inc
sub
xchg
and
push
cmp
(bad)
add
pop
mul
cmp
movzx
test
shl
test
shl
clc
jmp
mov
pop
ret
add
dec
outs
popa
fs
imul
add
cmp
lock
stc
lea
cmc
test
cmp
jmp
add
dec
outs
popa
fs
imul
add
(bad)
adc
and
pop
bound
test
jmp
jmp
push
out
sahf
std
inc
xor
sub
outs
push
cmp
sbb
xor
outs
inc
pop
sar
(bad)
outs
test
pop
adc
pop
xchg
mov
cmp
pop
rcl
outs
xchg
pop
daa
outs
xchg
clc
mov
pop
sub
sbb
je
ins
xchg
xor
xchg
mov
js
or
sbb
xchg
sbb
jmp
mov
stos
add
jmp
cli
js
xchg
add
pop
and
or
push
mov
imul
xor
shr
cmps
jle
mov
mov
clc
aad
popf
ins
xchg
pop
jecxz
mov
clc
pushf
aaa
push
outs
inc
push
adc
jmp
inc
xchg
cmp
dec
xchg
js
rcl
ins
pop
sub
xchg
js
ins
imul
in
jmp
inc
xlat
inc
xchg
clc
pop
xor
popf
mov
add
sub
(bad)
and
xchg
js
inc
loope
xchg
fisubr
xchg
mov
clc
vunpcklps
add
outs
(bad)
ins
and
cmp
(bad)
dec
adc
outs
xchg
lgs
sbb
mov
(bad)
imul
ins
inc
cmp
outs
pop
test
ins
fst
nop
js
ds
or
xchg
cmp
rcl
xchg
cmp
pop
nop
js
add
outs
xchg
js
and
ins
mov
cmc
push
mov
popa
arpl
xchg
mov
mov
xchg
hlt
nop
js
mov
pop
add
push
std
ins
xchg
jo
cmp
fstp
pop
ins
inc
cs
ins
inc
jmp
mov
(bad)
ins
inc
(bad)
outs
pop
or
push
(bad)
adc
and
dec
pop
xor
inc
cmc
add
movzx
cmp
jmp
or
or
sub
jl
xor
ds
or
fmul
mov
and
in
ds
jle
repnz
test
ins
pop
xor
push
outs
leave
outs
inc
jmp
jns
clc
jbe
repnz
inc
cmp
fdivr
xchg
cmp
rcl
xchg
js
xor
movs
sti
inc
xchg
cmp
inc
xchg
clc
mov
adc
xor
sub
inc
out
ficomp
in
inc
rcr
sar
out
jno
or
mov
cmp
cli
jge
js
or
jbe
inc
retf
or
pop
pop
js
sbb
ret
inc
mov
in
pop
sbb
mov
cmp
hlt
pop
sbb
push
sbb
pop
dec
in
sbb
mov
js
jg
out
jbe
lods
in
ins
gs
sbb
mov
icebp
inc
xor
cmp
outs
pop
cmp
dec
cmc
imul
stc
cmc
cmp
cmp
jmp
mov
jne
cmp
jmp
jae
mov
mov
jmp
jae
mov
jmp
jmp
add
inc
dec
dec
xor
cs
ins
add
xchg
js
sbb
outs
inc
add
inc
outs
(bad)
adc
arpl
out
xchg
cmp
and
xchg
cmp
mov
loopne
pop
xchg
mov
clc
lock
aaa
jp
xchg
fwait
pop
pop
xchg
ins
pop
mov
xchg
js
add
pusha
outs
(bad)
sbb
das
outs
(bad)
adc
out
xchg
daa
rcl
js
and
inc
hlt
pop
add
pop
stos
ins
jmp
icebp
adc
es
adc
inc
or
out
inc
jg
sbb
and
in
pop
sbb
adc
test
out
clc
sbb
in
xchg
jns
sbb
mov
js
mov
jge
in
xchg
sub
adc
(bad)
rep
in
xchg
popa
fist
mov
cmp
fild
test
sub
test
pop
ds
out
inc
repnz
adc
call
pop
test
pop
test
(bad)
mov
nop
retf
js
ror
outs
inc
addr16
ret
outs
pop
xlat
inc
jp
clc
retf
mov
das
mov
(bad)
cmps
dec
mov
sbb
cmp
outs
inc
stc
sbb
cli
repz
xchg
cmp
mov
outs
(bad)
lock
fld
data16
xor
enter
sbb
mov
xchg
clc
arpl
out
stc
mov
push
xchg
js
dec
mov
inc
push
jb
outs
inc
mov
xor
push
xchg
js
mov
outs
inc
(bad)
lods
aad
pop
pop
lock
xchg
mov
mov
mov
mov
adc
xor
xchg
add
xchg
clc
mov
add
loop
inc
outs
(bad)
(bad)
dec
outs
pop
xchg
adc
xchg
xchg
mov
cmp
out
xchg
clc
pop
dec
cld
outs
(bad)
mov
pop
pop
xor
sti
cmp
push
repz
mov
fidiv
pop
sti
mov
js
nop
add
jo
xchg
movs
dec
pop
pop
js
adc
clc
jo
xchg
jae
test
or
pop
adc
mov
jo
movs
add
xor
out
pop
cmp
js
fild
clc
pop
lds
pop
xlat
ror
lahf
jle
jo
dec
push
jle
(bad)
into
inc
stos
mov
in
or
jo
call
or
pop
ins
in
jo
dec
ja
pop
sub
mov
mov
mov
js
push
mov
mov
inc
fwait
jo
addr16
ja
mov
clc
cmp
mov
mov
clc
fs
test
aaa
outs
pop
adc
xchg
mov
cmp
repnz
clc
add
and
xchg
int
push
ins
pop
fild
lods
in
inc
adc
ret
or
sbb
in
aam
inc
push
(bad)
outs
(bad)
fisttp
push
maskmovq
imul
inc
mov
fcom
sub
inc
fwait
push
fs
in
xchg
jp
adc
scas
out
xchg
push
icebp
xor
cmp
stos
(bad)
ins
in
xchg
leave
mov
mov
mov
clc
stos
mov
xchg
pop
adc
clc
repnz
mov
in
inc
mov
adc
or
ds
add
push
dec
inc
dec
xor
cs
ins
add
pop
imul
mov
push
xchg
cmp
mov
ins
out
xchg
clc
push
add
add
movs
popf
call
push
outs
pop
or
pop
pop
lds
std
pop
in
js
mov
jo
push
push
sti
add
stc
clc
ret
clc
fisub
cli
mov
jae
std
add
inc
sub
push
xchg
pop
addr16
clc
xchg
pop
add
push
pop
call
add
cmp
rcr
stc
js
call
cmp
mov
rep
ins
xchg
push
ficom
xchg
clc
mov
ins
outs
inc
lods
sub
jmp
(bad)
mov
xchg
cmp
xchg
jno
clc
lea
js
pop
mov
das
xchg
js
aam
outs
inc
jo
(bad)
outs
pop
enter
clc
lock
cmc
outs
inc
xchg
sbb
outs
(bad)
cdq
jb
outs
pop
iret
dec
sbb
xchg
mov
clc
push
adc
(bad)
sbb
ins
pop
movs
bound
push
cli
cmp
cli
mov
clc
or
push
xchg
xchg
ror
iret
clc
pop
jns
cmp
cli
cmp
jae
clc
aas
lods
add
clc
pop
mov
clc
hlt
repz
add
pop
cmp
ins
cli
mov
mov
jns
mov
es
movs
add
and
fld
or
pop
or
xchg
js
cmp
outs
(bad)
xor
mov
xchg
push
push
xchg
mov
mov
clc
inc
popa
mov
xchg
cld
aad
js
in
outs
inc
in
inc
outs
(bad)
loope
dec
outs
pop
xchg
pop
jmp
mov
cmp
jmp
mov
pop
xchg
mov
clc
sbb
(bad)
outs
(bad)
out
jl
outs
inc
movs
cld
and
iret
popf
xchg
clc
sar
xchg
repnz
inc
push
inc
add
popa
retf
mov
mov
mov
ja
cmp
(bad)
in
fs
push
sbb
inc
xlat
sub
outs
inc
icebp
retf
adc
ins
pop
push
inc
icebp
xchg
clc
push
cmp
inc
xchg
mov
outs
(bad)
push
or
ins
pop
mov
and
cmp
jns
iret
jp
fwait
js
push
addr16
int
sbb
and
cwde
cmp
popf
and
addr16
pop
jb
sti
add
pop
inc
inc
mov
cwde
cmp
adc
sub
xchg
and
addr16
mov
xlat
pop
outs
cwde
cmp
mov
fwait
js
popf
popf
addr16
mov
and
cwde
cmp
jge
mov
pushf
xchg
loop
mov
clc
in
push
addr16
cs
addr16
mov
lods
frstor
cmp
or
addr16
repz
and
cld
pop
cmc
dec
sub
inc
test
cmc
(bad)
stc
jg
js
add
outs
(bad)
(bad)
jne
ins
pop
loopne
and
outs
inc
pop
daa
leave
outs
pop
xchg
add
clc
mov
iret
inc
mov
mov
pop
nop
adc
xchg
cmp
lock
or
(bad)
push
push
ror
inc
test
outs
test
clc
aas
shrd
jp
and
cld
jns
and
cmp
pop
cmp
fidivr
push
xchg
test
out
hlt
mov
jp
and
mov
jp
and
push
in
enter
inc
xchg
js
(bad)
add
jp
push
dec
jp
stc
inc
ja
cmp
mov
cmp
sar
repnz
test
lods
xor
jp
jno
leave
jp
add
or
popa
popf
repnz
sub
sti
imul
jns
adc
les
jns
push
in
test
jmp
(bad)
out
cmp
inc
fdivr
call
lahf
and
add
adc
(bad)
stc
test
clc
mov
push
in
xchg
mov
mov
clc
push
jb
xchg
mov
clc
cs
test
sub
test
dec
dec
test
cmp
pop
call
ins
mov
sar
(bad)
jmp
pminub
stc
ds
imul
add
dec
add
dec
add
xor
add
dec
add
xor
add
dec
add
inc
add
xor
add
dec
add
xor
add
dec
add
add
xor
add
add
xor
add
add
xor
add
add
inc
add
xor
add
add
add
inc
xor
add
add
sbb
dec
xor
add
add
xor
add
add
xor
add
add
dec
add
sub
test
mov
sub
mov
mov
add
sub
xchg
ins
dec
add
dec
add
sub
shr
mov
add
add
sub
inc
add
add
add
dec
add
add
add
and
add
outs
sub
add
add
add
add
add
add
inc
add
add
add
add
add
add
xchg
dec
add
add
add
dec
add
add
add
xchg
sub
add
add
idiv
add
mov
inc
add
add
add
add
and
dec
add
add
add
sub
add
add
push
dec
dec
add
dec
sub
and
inc
add
(bad)
dec
add
call
or
inc
add
cmovne
mov
inc
add
pop
dec
add
adc
add
retf
add
add
inc
sub
jmp
add
add
shl
ins
mov
pop
add
add
inc
push
(bad)
push
cmp
adc
cmp
out
sar
add
add
pop
ja
jb
pop
jo
outs
push
arpl
fs
pop
jae
arpl
outs
add
add
or
add
jge
add
jge
add
sahf
mov
add
add
add
xor
ins
dec
add
and
add
add
sahf
mov
add
or
add
adc
add
sub
adc
add
add
add
popf
add
inc
popf
add
mov
mov
sbb
add
or
xchg
jo
add
jo
add
jno
add
or
xchg
jno
add
jno
add
jb
add
or
xchg
jb
add
je
add
or
mov
or
hlt
je
add
jne
add
add
jne
add
or
jno
or
xchg
jbe
add
jbe
add
ja
add
ja
add
or
xor
mov
ja
add
js
add
or
movs
jns
add
jl
add
jl
add
jge
add
or
mov
add
jge
add
jge
add
jle
add
or
ret
add
jle
add
jg
add
jg
add
or
fs
add
jg
add
jg
add
jg
add
or
arpl
or
cdq
or
mov
or
call
or
add
or
mov
or
cmc
or
add
or
call
add
or
jns
or
mov
or
icebp
or
sub
test
add
or
sub
or
push
test
add
or
mov
or
mov
or
sub
or
mov
mov
add
mov
add
mov
add
mov
add
or
mov
or
fimul
or
mov
add
mov
add
mov
add
mov
add
or
xchg
mov
add
mov
add
mov
add
lea
add
or
xchg
lea
add
lea
add
mov
add
mov
add
or
mov
or
out
or
sbb
or
xchg
(bad)
(bad)
nop
or
mov
nop
or
std
nop
or
and
or
jo
or
xchg
xchg
or
fcom
or
gs
or
popf
xchg
or
ret
add
xchg
or
xor
or
adc
add
xchg
or
xor
add
xchg
or
clc
xchg
or
daa
xchg
or
ins
xchg
or
stos
xchg
or
stc
xchg
or
sub
or
dec
xchg
or
jne
or
nop
xchg
or
stos
xchg
or
rcl
or
push
cwde
or
push
cwde
or
mov
or
pop
cdq
or
aaa
cdq
or
fs
or
mov
or
ficomp
or
sub
or
popa
call
ret
call
cs
or
jbe
or
bound
add
pushf
or
aas
popf
or
outs
popf
or
pushf
popf
or
leave
popf
or
hlt
popf
or
sub
or
xchg
sahf
or
scas
sahf
or
fcomp
or
sub
or
lea
or
(bad)
lahf
or
add
or
push
mov
or
lods
mov
or
adc
or
ins
mov
or
(bad)
mov
or
or
mov
or
std
mov
or
mov
mov
or
inc
movs
or
pop
movs
or
and
add
movs
or
pop
movs
or
and
add
movs
or
cmc
movs
or
sbb
or
cmps
or
(bad)
cmps
or
mov
or
jmp
cmps
or
daa
cmps
or
inc
cmps
or
pusha
cmps
or
jnp
or
xchg
cmps
or
(bad)
cmps
or
in
cmps
or
push
or
xor
or
xchg
test
add
test
add
test
or
lea
or
(bad)
test
or
cmp
or
xchg
stos
or
mov
or
push
stos
or
sub
or
push
stos
or
jne
or
cwde
stos
or
int3
stos
or
out
stos
or
adc
add
or
jle
or
cdq
lods
or
mov
or
adc
or
jns
or
pushf
lods
or
mov
or
(bad)
or
xor
or
jnp
or
mov
scas
or
in
scas
or
adc
or
inc
xor
add
adc
loopne
adc
ins
(bad)
adc
hlt
rcl
add
out
add
adc
arpl
adc
xchg
adc
test
in
adc
out
adc
es
adc
cmp
adc
pop
out
adc
jnp
adc
fwait
out
adc
(bad)
out
adc
fucomi
adc
clc
out
adc
sbb
adc
cmp
adc
pop
out
adc
jo
adc
mov
adc
stos
out
adc
enter
call
lock
sub
adc
inc
lock
push
lock
push
lock
mov
lock
sti
lock
sbb
adc
push
icebp
adc
xor
adc
mov
icebp
adc
sti
icebp
adc
sbb
adc
cmp
adc
pop
repnz
int3
repnz
repz
cmp
adc
pop
repz
js
adc
cwde
repz
add
