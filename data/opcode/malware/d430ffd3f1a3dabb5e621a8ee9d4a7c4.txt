mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
push
je
sub
in
push
int
pop
push
sub
cmp
out
push
cmp
xor
xor
in
pop
push
dec
bound
arpl
pop
sbb
sub
rol
loop
jae
ins
mov
adc
int
jl
(bad)
dec
jb
popa
arpl
add
(bad)
aas
cmp
int3
add
jmp
fdivrp
and
adc
mov
ja
ja
xchg
gs
mov
(bad)
loopne
jno
add
in
stc
mov
inc
xor
cmp
adc
xchg
out
push
and
notrack
sets
nop
mov
mov
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
xchg
xchg
pop
test
push
xchg
xchg
xchg
xchg
push
sar
dec
ror
xchg
xchg
xchg
xchg
enter
push
jl
xchg
cmp
les
add
imul
outs
push
sub
je
movzx
mov
ss
pop
ret
(bad)
xor
cmp
cmp
sub
and
cmp
cmp
sbb
push
mov
rep
fadd
push
add
enter
add
xor
pop
enter
mov
mov
ret
lea
outs
(bad)
dec
push
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
std
outs
ja
scas
mov
mov
xchg
ins
test
xchg
mov
mov
mov
jmp
lods
mov
mov
adc
add
jne
mov
mov
adc
ret
out
cld
mov
mov
mov
mov
mov
add
rcr
lock
out
push
or
push
or
ret
and
mov
outs
in
hlt
mov
push
or
inc
add
adc
or
aaa
sub
jne
(bad)
mov
cmp
call
push
(bad)
fisttp
sbb
xor
mov
add
loopne
mov
into
int
bound
jne
mov
ss
ins
shl
or
mov
dec
ret
jmp
pop
mov
pop
shl
add
iret
pop
repnz
sub
stos
fiadd
sub
mov
lock
pop
ret
mov
aam
or
or
xor
sbb
scas
sbb
sti
jne
sbb
nop
int
add
es
mov
cmp
mov
add
imul
adc
push
jg
mov
mov
test
je
mov
mov
cmp
(bad)
mov
push
sub
inc
lock
push
mov
data16
jge
stos
sub
rol
push
lahf
push
xchg
mov
add
mov
add
in
mov
pop
sbb
fucomip
mov
mov
pop
in
mov
call
test
mov
adc
in
es
(bad)
sbb
ja
mov
add
cmp
ja
cmp
jp
popf
sbb
jbe
or
push
in
cmp
or
mov
fild
mov
cdq
in
or
adc
sbb
shr
lds
pusha
sbb
pop
dec
scas
mov
outs
mov
mov
and
outs
add
ret
ds
mov
jb
sub
or
lds
xor
cmp
add
and
mov
cmp
or
or
jbe
scas
adc
sti
push
push
cmp
jmp
ss
mov
and
push
jb
sub
cs
inc
(bad)
xor
jmp
scas
dec
jne
sahf
nop
out
sub
fistp
xor
cmp
jae
mov
cmp
xchg
add
sbb
inc
mov
pop
inc
add
shl
mov
ja
ds
sti
mov
mov
(bad)
aas
or
add
repnz
rcr
jmp
idiv
inc
xlat
mov
push
movs
sbb
jmp
mov
inc
ds
dec
xor
(bad)
pop
add
sub
mov
jne
pop
cmp
movs
es
out
jmp
push
push
inc
in
xchg
ins
rcl
mov
jl
mov
ret
je
cmp
jne
or
jle
stos
pusha
mov
sub
jl
mov
xor
lea
or
mov
mov
add
pusha
pop
fcom
dec
xchg
ins
out
arpl
ins
hlt
add
test
xchg
jmp
ret
sbb
cmc
jne
xchg
cmp
jnp
add
cmp
sub
loope
ds
popf
adc
adc
xchg
lea
push
jge
inc
mov
cmp
lock
jae
mov
ret
add
or
pop
cmp
test
(bad)
ret
jns
cmps
add
jo
add
adc
xor
jecxz
jl
add
sbb
std
cmp
push
push
push
mov
push
ja
dec
cmp
and
jno
mov
push
test
xchg
mov
or
sar
xor
jle
hlt
inc
cmp
jo
and
in
mov
mov
mov
pop
ds
pop
pop
push
adc
(bad)
loop
xor
je
in
sub
push
dec
pop
xchg
test
or
xchg
sbb
iret
add
or
in
out
mov
mov
fs
mov
add
outs
push
push
mov
sub
sbb
xchg
and
(bad)
fistp
mov
cmp
adc
sub
or
or
pop
adc
test
jns
add
sar
test
mov
das
sub
fnstenv
hlt
mov
add
inc
iret
lds
dec
fadd
add
std
sti
jb
add
or
mov
cmp
call
xchg
lea
pop
(bad)
inc
cmp
jl
mov
jb
sahf
div
mov
retf
or
mov
and
(bad)
imul
inc
sub
test
cld
dec
adc
jnp
loopne
adc
jbe
or
push
or
dec
mov
pop
or
xchg
or
fistp
add
and
push
(bad)
xor
iret
or
or
or
fisubr
(bad)
sub
inc
pop
mov
test
je
mov
sub
fistp
test
jo
cmp
test
add
test
aad
add
mov
xor
add
imul
and
fsub
test
jne
mov
(bad)
dec
adc
or
and
mov
pop
out
pop
movups
add
dec
xor
dec
xor
into
push
lea
sub
cld
jg
cli
mov
test
sub
sub
cmp
jge
mov
icebp
or
out
ins
jmp
daa
add
out
adc
lea
and
in
mov
aad
(bad)
lds
stos
clc
add
dec
jae
lea
shl
test
jp
inc
mov
pop
or
xchg
pop
out
rol
jae
add
movs
mov
cwde
jo
(bad)
aaa
adc
out
test
mov
enter
mov
sbb
sbb
mul
mov
adc
add
sub
fcomp
or
fs
mov
stos
sbb
and
ins
sbb
adc
or
mov
xchg
xor
daa
or
cmp
push
or
stos
mov
dec
lea
movs
movs
mov
cwde
lds
fwait
pushw
mov
and
or
ja
out
or
push
mov
cmp
pusha
xchg
lods
sub
or
inc
push
adc
repz
(bad)
sbb
or
sbb
adc
out
cmp
push
fsubr
xor
mov
(bad)
or
mov
arpl
fld
pop
mov
fadd
sbb
fadd
pusha
pop
pop
inc
xlat
test
or
ret
pusha
(bad)
cmc
inc
enter
xor
inc
sar
cmp
stc
mov
adc
or
pop
in
mov
jmp
stos
jo
or
cmp
sbb
mov
inc
mov
jle
adc
lods
cs
pop
mov
pop
je
(bad)
out
mov
sub
pop
xor
mov
sbb
jle
adc
jne
movs
sub
cmp
adc
mov
add
xor
sub
sub
xor
jmp
jmp
xchg
dec
pop
inc
and
and
test
leave
jmp
repnz
jne
(bad)
int3
jne
js
pop
xor
scas
push
mov
xlat
test
jns
rol
movs
pusha
or
xor
mov
je
sti
clc
stos
jle
inc
cld
in
clc
pop
jbe
addr16
push
push
mov
mov
xlat
cmps
add
or
sti
mov
mov
push
test
jg
and
test
outs
push
pop
inc
scas
shl
push
or
mov
or
xor
jge
out
pop
cdq
cmp
mov
mov
call
or
and
jbe
jmp
sub
sub
cmp
cwde
fimul
movzx
in
xor
xor
adc
(bad)
arpl
push
sbb
push
adc
mov
push
sbb
mov
sub
jne
out
or
das
pushf
cmp
adc
or
mov
mov
test
sbb
mov
jne
test
ja
(bad)
or
jbe
or
call
add
add
or
or
test
(bad)
jge
sbb
call
add
lds
mov
ret
mov
cmp
pop
loopne
sub
in
and
jle
sbb
jg
loop
dec
mov
adc
ret
sbb
add
cli
test
aaa
or
jmp
mov
cmp
clc
add
mov
adc
or
adc
dec
jae
and
cmp
sbb
dec
adc
jg
add
out
lock
mov
(bad)
jge
mov
test
loope
add
mov
(bad)
lock
fldenv
add
pop
sbb
push
pushf
(bad)
into
not
sbb
mov
cli
add
inc
sub
sub
test
loopne
push
pop
cmps
mov
xor
sbb
in
sub
mov
cmp
imul
(bad)
sub
addr16
mov
jl
fmul
addr16
call
daa
add
inc
lahf
add
and
dec
or
xor
mov
fbld
fiadd
pop
add
push
sbb
cmp
xor
mov
jo
or
xchg
or
pop
mov
ret
adc
cmp
xchg
ret
inc
in
cmps
jmp
add
ret
push
fdiv
push
hlt
jo
mov
sbb
test
push
inc
cmps
pop
retf
enter
movhps
adc
sbb
mov
jmp
out
adc
xchg
ret
mov
fdiv
(bad)
mov
(bad)
add
fdiv
mov
xchg
dec
sbb
dec
xor
daa
and
test
jle
call
push
stos
adc
add
(bad)
cmp
mov
ds
je
loopne
dec
add
xor
sbb
dec
jnp
mov
dec
inc
pop
or
add
push
jmp
push
xor
add
xlat
mov
arpl
cs
outs
push
mov
inc
dec
mov
push
jle
mov
rol
sbb
mov
sbb
loop
mov
inc
or
xlat
push
dec
jg
mov
das
out
cs
jle
jecxz
cmp
add
or
lahf
cwde
add
jo
mov
mov
ja
adc
pop
mov
xchg
or
sbb
ret
push
push
push
xor
xchg
fidiv
rcl
jmp
jp
mov
mov
inc
or
je
pop
jle
cmp
push
cld
ret
sub
inc
fdivr
sar
(bad)
mov
inc
rep
jmp
mov
ss
leave
jmp
mov
jl
pop
jp
pop
scas
mov
add
pop
adc
stos
nop
sbb
(bad)
mov
in
dec
clc
adc
adc
js
rep
xchg
loope
scas
mov
xor
lea
xor
std
xor
mov
(bad)
ds
inc
mov
aas
jmp
nop
push
fnstcw
pop
sub
fistp
jbe
adc
or
fst
dec
sti
es
fldcw
fldcw
pop
inc
jbe
dec
ret
aam
push
int3
adc
pop
sub
fs
cld
add
(bad)
push
fdiv
mov
fimul
sub
(bad)
(bad)
fwait
scas
adc
sbb
je
mov
in
xor
add
adc
mov
inc
xlat
out
sbb
adc
dec
div
imul
xlat
ja
and
adc
jne
retf
jb
push
sbb
lock
adc
pop
(bad)
loopne
sahf
jmp
cmp
ror
cli
dec
int
(bad)
ja
sbb
retf
sub
jne
or
mov
inc
inc
and
sub
fstp
mov
mov
inc
inc
mov
ja
add
push
shr
je
mov
cmp
jne
dec
sbb
stos
dec
aam
dec
fcomp
sbb
ror
jmp
outs
or
loop
push
adc
add
and
je
mov
cmp
jne
dec
repz
dec
je
mov
cmp
jne
or
add
(bad)
mov
adc
cmp
jne
shr
sbb
cmp
adc
add
out
loope
int
mov
dec
dec
pop
cmp
rol
dec
rol
pop
and
iret
cmps
jns
mov
cmp
jne
dec
dec
dec
and
shl
sbb
sub
dec
mov
loopne
mov
cmp
rol
or
stos
mov
stos
pop
outs
aas
jl
daa
push
shr
int3
add
push
inc
int
test
je
mov
or
je
or
je
and
fwait
fwait
sub
pop
pop
je
xor
dec
sti
jnp
movs
and
cs
jmp
or
push
mov
jg
ja
cmp
ja
lea
push
add
push
outs
out
das
clc
idiv
int
or
jge
jmp
inc
mov
js
pop
sub
jmp
(bad)
fld
jmp
mov
fild
popf
mov
xchg
and
add
or
xor
stos
aad
cmp
outs
cwde
pop
xor
mov
inc
mov
test
cmp
cmp
pop
icebp
jg
push
inc
mov
dec
jne
pop
dec
out
sub
xchg
out
or
sbb
sub
je
fsubr
adc
lea
lea
mov
lods
push
or
add
je
das
mov
push
cmp
add
popa
push
and
sbb
dec
lock
pop
xchg
jge
mov
dec
sub
xor
sbb
int
(bad)
stc
jmp
fstp
fld
fldz
mov
je
adc
jns
leave
aas
mov
cli
or
daa
inc
pushf
or
ret
mov
adc
repnz
pop
mov
out
sbb
stc
retf
inc
stc
add
mov
imul
fistp
lock
mov
sub
test
out
sub
jle
xor
mov
lds
mov
(bad)
out
inc
jbe
imul
cmp
mov
(bad)
mov
bound
out
lods
inc
cmp
xlat
fadd
outs
xor
xchg
dec
mov
push
push
int3
into
sbb
ror
mov
push
pop
test
pop
cmc
call
enter
mov
inc
push
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
(bad)
(bad)
(bad)
cmp
sbb
pop
(bad)
mov
addr16
leave
repnz
bound
and
push
(bad)
(bad)
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
stos
mov
(bad)
(bad)
(bad)
out
cmp
or
mov
pop
out
sub
imul
(bad)
div
jl
pop
icebp
inc
leave
cmp
call
mov
sti
jmp
stos
push
inc
mov
push
sbb
(bad)
(bad)
(bad)
jmp
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
(bad)
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
(bad)
inc
xchg
push
cmps
scas
mov
pop
or
add
cmp
xor
in
jg
(bad)
(bad)
cmp
sahf
xchg
pop
cmps
lock
mov
popa
movs
mov
and
(bad)
(bad)
(bad)
jmp
repz
mov
sub
and
and
outs
bound
xor
add
imul
and
repz
das
inc
pop
or
pop
jne
push
pop
and
sub
and
mov
movs
xchg
push
(bad)
outs
pop
hlt
movzx
hlt
mov
lea
push
push
sbb
jmp
push
pop
icebp
aaa
mov
push
mov
mov
add
hlt
push
data16
add
sbb
and
in
das
fistp
ja
mov
jmp
adc
hlt
mov
pop
aas
or
adc
adc
push
dec
inc
push
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
push
dec
add
push
dec
popa
jae
push
popa
ins
jne
fninit
fwait
mov
(bad)
mov
jg
xlat
mov
xor
mov
inc
rep
push
or
sar
push
push
mov
or
dec
cld
jne
dec
mov
xor
loope
das
cs
jne
call
fadd
add
cmps
jo
push
or
mov
ja
popf
out
aaa
and
ja
rcr
idiv
movs
fiadd
inc
push
movups
xchg
xchg
jo
fs
mov
ret
xor
mov
cmps
lods
jle
xchg
outs
loopne
mov
rol
or
push
cld
es
jl
mov
xor
push
mov
jmp
pop
(bad)
mov
push
add
pop
fdivr
mov
jmp
cmp
je
pop
mov
mov
or
add
jae
mov
jnp
mov
push
sbb
push
loope
cmps
cmp
outs
lods
(bad)
mov
mov
push
pusha
or
pop
cmp
jg
inc
jmp
stc
out
jae
rol
pop
shufps
and
loope
jo
pusha
mov
add
mov
adc
inc
or
mov
les
test
pop
clc
push
push
cld
mov
dec
xor
fstp
inc
mov
and
pop
outs
mov
xor
add
mov
cs
and
call
lea
push
sbb
and
jecxz
jecxz
(bad)
dec
setne
lahf
cmp
in
lods
popf
lock
xor
mov
mov
xor
xor
jb
cmp
fmul
call
or
push
sub
inc
inc
fcom
ja
ja
pop
add
in
mov
or
popa
mov
rcl
ror
mov
leave
jne
mov
sbb
(bad)
xor
nop
push
xchg
jmp
retf
je
mov
sqrtps
scas
je
pop
in
not
call
ret
pop
add
sub
mov
pop
cs
xchg
out
mov
les
jmp
cmp
jb
mov
cmp
mov
mov
hlt
mov
push
pop
pop
jno
xor
push
xchg
xor
cld
pop
sub
sub
adc
pop
sbb
mov
popa
lock
ds
sbb
dec
int3
bound
je
mov
dec
push
cmp
sbb
add
dec
jne
icebp
dec
sar
jnp
jmp
push
jmp
add
sbb
jecxz
dec
inc
cmp
scas
pop
iret
mov
jle
int
lahf
adc
push
add
stos
div
adc
pop
jmp
xor
xor
loopne
fadd
ror
add
iret
ds
sbb
fcomp
sbb
jmp
pop
fwait
out
pop
mov
rcr
jl
dec
xor
(bad)
adc
mov
mov
mov
add
pusha
mov
mov
pop
adc
jns
call
cmps
mov
nop
or
push
outs
mov
sub
sub
out
call
fistp
mov
(bad)
jg
loopne
in
add
and
pop
pop
cmp
or
jbe
sbb
cli
in
push
sub
adc
pop
push
mov
push
push
cmp
mov
in
cmps
cmp
mul
mov
or
jae
data16
xlat
jmp
push
and
sbb
jmp
mov
or
jne
movsx
inc
inc
jmp
add
push
pop
addr16
and
or
(bad)
cmp
push
aas
loop
fdivr
je
sbb
(bad)
jecxz
pop
(bad)
mov
test
cmps
pop
cmc
frstor
push
push
dec
adc
outs
ret
sar
xor
adc
test
(bad)
mov
out
lds
cmp
je
or
fdiv
jbe
test
cmc
sub
pushfw
int
mov
pop
jbe
cdq
cmc
enter
(bad)
jmp
adc
adc
and
sbb
push
jns
retf
fidiv
dec
add
ss
cmp
push
sbb
push
sub
cmp
sbb
dec
pop
dec
cld
fimul
add
push
add
test
je
jecxz
mov
mov
cmovno
xor
clc
mov
xchg
je
dec
adc
jns
add
mov
dec
inc
pop
sbb
or
hlt
pop
or
add
lds
pusha
clc
mov
out
or
jb
add
fild
fdivr
dec
fdiv
in
push
jmp
inc
inc
mov
jg
push
lock
mov
rcr
loop
jno
adc
inc
jmp
sbb
sbb
push
adc
lahf
adc
adc
ins
or
inc
push
(bad)
cmp
sbb
mov
aam
adc
pop
or
paddw
mov
popf
pop
(bad)
cmps
mov
ret
pushf
ret
push
sub
xor
inc
outs
or
mov
shr
aas
pop
push
push
push
push
push
mov
add
jns
and
loopne
add
mov
cmp
push
jbe
lahf
sub
and
test
mov
ss
aaa
and
pop
mov
mov
cmc
lea
jae
mov
push
lods
adc
inc
pop
ins
test
loop
xor
mov
xor
test
ret
out
and
test
je
sbb
mov
adc
push
sub
sti
(bad)
dec
dec
jmp
add
sub
jb
je
jmp
cmp
cmp
lods
push
cs
adc
jmp
sub
cmp
jmp
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
ror
push
(bad)
or
retf
xchg
fisub
or
pop
loope
or
inc
mov
jg
out
jno
jge
push
outs
imul
cmp
hlt
call
push
inc
sbb
add
and
mov
or
neg
sti
and
inc
sbb
cmps
push
sub
test
xor
scas
add
lock
ret
fmul
adc
mov
mov
xor
xor
inc
test
repnz
cmp
aas
push
push
jne
and
mov
add
pop
dec
mov
mov
out
lahf
cmp
call
jle
dec
mov
inc
sbb
inc
call
and
xor
mov
clc
mov
pop
iret
stos
(bad)
adc
cmp
dec
mov
ins
js
pop
sbb
in
cmp
jle
add
sbb
dec
mov
mov
sbb
mov
cmp
call
mov
mov
out
div
pop
sub
test
cmp
sbb
shr
push
dec
push
add
add
jo
nop
fidivr
ss
jne
pop
pop
pop
inc
pop
sbb
jbe
push
jmp
dec
repz
movs
std
add
mov
xchg
or
mov
sbb
mov
push
add
and
mov
add
add
imul
push
es
mov
(bad)
sar
xor
fst
mov
mov
out
xor
add
pushf
loop
rol
sbb
cli
mov
ja
add
mov
mov
leave
mov
push
cmps
dec
jno
cmp
js
cmp
cmc
les
mov
stos
push
ins
lock
push
push
add
or
popa
lahf
pop
adc
inc
sub
add
pop
ret
and
add
mov
cmp
shl
xor
lods
or
xor
mov
inc
cs
jnp
je
cmp
adc
rol
pop
add
pop
mov
call
and
dec
sub
xor
loopne
mov
add
je
mov
sbb
add
jmp
adc
dec
xlat
clc
ret
cmp
or
je
fimul
es
ins
inc
popa
sar
add
push
cmp
and
jne
cmp
or
mov
add
lock
ret
mov
ret
pop
pop
sub
ror
mov
push
pop
dec
jmp
neg
(bad)
pop
mov
adc
dec
push
inc
inc
pop
call
push
pop
push
stc
(bad)
mov
push
sbb
add
or
push
test
dec
jne
pop
dec
or
inc
inc
jg
cmp
das
imul
lods
push
and
dec
sbb
stc
add
xchg
xchg
fild
push
jle
pop
jle
push
add
aaa
ror
dec
pop
mov
pushf
bound
pop
mov
fist
jns
sub
ins
cs
xor
iret
mov
das
stc
mov
loopne
clc
pusha
inc
or
mov
cmp
and
push
push
mov
fadd
test
push
adc
sub
repz
cmp
aaa
mov
xchg
add
cld
jg
ins
scas
xchg
clc
fdivr
ret
pop
lea
test
cli
add
sub
aam
dec
cmp
mov
cmp
das
push
jl
dec
(bad)
mov
and
cmp
shl
movs
cmp
sbb
add
cmp
clc
adc
push
mov
mov
or
mov
je
int
movs
add
jle
add
fild
jmp
inc
add
(bad)
(bad)
cmp
sub
and
fcmovu
repz
pop
or
push
push
addr16
in
add
jae
ja
mov
inc
adc
call
xchg
std
add
repnz
loopne
pop
add
pop
pop
xor
add
and
pop
cld
pusha
xchg
mov
fnstcw
or
test
es
xchg
aas
pop
loope
loopne
add
aas
xchg
test
aaa
mov
mov
push
cld
add
cmp
ins
lds
dec
and
and
das
sub
mov
cmp
je
cmp
mov
cmps
les
cmp
mov
mov
loopne
cld
add
(bad)
fwait
std
mov
mov
lds
push
sbb
retf
jle
clc
mov
mov
sbb
sub
jmp
jle
lods
fsub
adc
or
outs
xchg
cmp
mov
dec
jmp
dec
sub
add
cmp
fs
dec
jne
mov
lock
enter
cmp
push
add
dec
jmp
cmp
push
mov
repnz
(bad)
out
into
pop
dec
jne
mov
pusha
push
fmul
and
out
push
jmp
lea
jmp
xchg
mov
sar
sahf
push
or
push
jmp
iret
pop
call
cmp
lods
or
mov
or
loopne
aad
retf
loope
jo
add
fisub
shr
aam
pop
aas
pop
jno
cmps
push
clc
inc
das
dec
mov
add
add
shr
je
push
(bad)
ss
das
shl
mov
adc
dec
inc
es
popa
out
ror
inc
or
mov
es
jl
cmp
jge
xchg
jbe
jb
adc
inc
jg
sbb
xor
xor
jmp
inc
jmp
push
stos
mov
and
xchg
stc
(bad)
(bad)
xor
mov
sub
mov
mov
add
fild
stc
add
lea
inc
dec
movs
push
cmp
xor
dec
xor
or
icebp
pop
cmp
lahf
cdq
mov
push
mov
cld
in
clc
sti
sub
xlat
adc
imul
add
gs
cmp
sub
mov
lea
lock
sub
pusha
add
mov
jl
add
mov
cmps
pop
dec
dec
js
mov
inc
jb
adc
das
loopne
pop
adc
inc
push
cmp
in
pop
fsub
pop
mov
bound
inc
push
int3
dec
out
dec
loopne
lods
and
sbb
cs
push
pusha
xchg
xlat
clc
pop
sub
and
(bad)
mov
mov
lods
jmp
out
(bad)
arpl
cli
pop
cmp
(bad)
pop
call
ret
push
push
test
mov
shl
xchg
push
push
push
das
loopne
xchg
mov
and
push
loope
and
pop
(bad)
lock
jp
add
sub
push
add
in
jno
in
stc
inc
xor
inc
jecxz
iret
mov
ss
fs
dec
sbb
add
ss
push
lock
dec
das
int3
(bad)
test
or
pop
push
mov
and
or
pop
add
and
add
mov
pop
fwait
pop
xor
add
jns
push
je
mov
adc
in
xor
ins
mov
mov
and
push
cvtps2pd
or
xchg
pop
adc
out
stc
jle
loopne
adc
jge
or
adc
pushf
push
ret
std
call
cmp
push
lods
add
add
dec
or
add
and
daa
cdq
xor
sub
stos
add
lods
sahf
std
mov
leave
xchg
fstp
mov
dec
sbb
adc
sbb
adc
cmp
mov
out
sahf
mov
xchg
push
add
lock
cmp
je
cmp
je
cmp
je
push
je
cmp
mov
cmp
je
mov
arpl
cwde
clc
jmp
adc
mov
ret
adc
jmp
xchg
aad
push
cs
mov
cmps
or
cs
adc
out
mov
jmp
cmp
mov
sub
fdiv
add
lock
xchg
mov
and
or
dec
pop
call
call
add
cmc
ret
jns
out
mov
jbe
dec
jo
pop
test
push
mov
imul
cmp
test
int3
jg
inc
and
xchg
out
ror
pop
emms
push
xor
push
dec
aam
mov
jmp
in
inc
add
jmp
test
int3
lods
mov
test
cmp
add
jmp
stos
ins
adc
push
cmp
xchg
and
or
(bad)
push
mov
add
cld
test
clc
push
push
add
sar
add
loope
mov
push
mov
fwait
fwait
pop
ret
cmp
xor
or
je
or
fwait
push
push
je
pusha
adc
xchg
pop
xor
or
lahf
sbb
ins
jmp
and
in
sub
adc
adc
lock
call
cs
je
clc
or
sbb
cmp
(bad)
mov
outs
jns
xor
xlat
in
cmp
inc
adc
and
test
jne
jo
pop
rcl
add
add
ins
push
sub
and
mov
in
inc
push
popa
test
test
loop
test
jmp
mov
dec
jne
sub
add
cmps
sbb
adc
push
mov
xor
add
es
ja
push
sti
add
pop
add
inc
jmp
das
push
icebp
mov
jo
add
je
es
mov
cmp
sar
inc
jmp
int3
lock
and
sub
jno
mov
mov
xlat
push
fild
ror
neg
and
add
(bad)
adc
pop
pop
ret
sbb
mov
sete
dec
(bad)
jne
popa
mov
cmc
xor
out
call
loopne
mov
mov
les
push
sbb
jg
cs
test
xor
and
jmp
lock
or
mov
or
jmp
add
cld
push
daa
loopne
(bad)
hlt
mov
sbb
cmp
mov
imul
dec
in
in
sbb
cs
mov
and
dec
sub
call
mov
cmp
jge
xchg
and
pop
sbb
adc
ins
imul
sub
add
inc
loopne
push
in
fcomp
mov
or
das
mov
retf
in
jge
pop
jnp
sub
mov
push
in
test
clc
sbb
sbb
push
sbb
lds
add
into
stos
dec
mov
dec
shr
pop
and
fld
xrelease
addr16
cmp
adc
fisttp
test
add
cmps
cmp
jle
mov
or
xchg
dec
jo
and
imul
ror
inc
test
ins
icebp
loop
push
dec
jne
enter
mov
cmp
test
push
xchg
add
outs
cmovl
jg
xor
dec
jne
push
les
cmps
cdq
mov
in
xchg
mov
addr16
pop
dec
mov
dec
and
mov
scas
adc
dec
push
push
push
and
lds
out
pop
pop
mov
jle
pop
jle
(bad)
in
sbb
cdq
enter
clc
pusha
cmp
je
add
fs
xor
xor
jnp
inc
cmp
lock
push
xchg
lock
hlt
test
les
xchg
inc
or
and
pop
adc
adc
jbe
pop
jbe
cmp
loopne
adc
aad
(bad)
or
je
or
ret
pcmpeqw
ret
jmp
sbb
(bad)
ja
mov
test
cmp
jne
ds
sbb
dec
mov
popa
xchg
push
pusha
lfence
fnstsw
push
and
or
pop
or
add
test
rcr
les
mov
inc
mov
cmp
cmp
or
add
jl
pop
add
mov
cmp
test
out
in
ja
mov
in
jne
mov
fisubr
pushf
lea
mov
iret
mov
data16
rol
cli
dec
jg
push
push
push
les
mov
adc
and
xchg
in
shl
xor
(bad)
cwde
lea
in
mov
cmp
test
sub
dec
push
mov
mov
(bad)
fsub
test
lahf
push
jae
imul
jg
jmp
ins
xor
cs
ins
pop
inc
gs
outs
outs
addr16
popa
je
dec
popa
ins
gs
sub
inc
daa
outs
loopne
data16
scas
loope
sbb
fnstsw
mov
call
out
out
add
add
rcl
movs
cmp
rol
and
inc
pop
or
outs
fst
push
adc
ins
or
sub
inc
ins
xchg
into
pusha
stc
int
aas
data16
add
push
popa
cmp
add
push
inc
into
jno
dec
out
and
(bad)
scas
imul
push
lods
repz
js
cmp
xor
cmp
repz
cmp
out
push
sar
dec
mov
push
add
cmp
stos
div
jne
adc
inc
add
aas
inc
dec
shr
rcr
popf
loopne
or
push
adc
jbe
imul
repz
or
xor
cmc
add
sbb
dec
mov
mov
ja
jb
inc
mov
popa
ins
gs
mov
call
lock
jo
or
inc
addr16
push
add
cmp
mov
adc
fucomip
cmps
icebp
and
pop
mov
inc
mov
ja
lds
jbe
ds
daa
mov
add
mov
or
fwait
movs
fdiv
icebp
mov
mov
dec
mov
or
jg
mov
mov
push
rol
scas
cmp
test
add
xor
(bad)
sub
mov
mov
(bad)
shl
pushf
xor
or
(bad)
int3
test
push
sub
add
stos
movs
and
or
cmp
or
iret
in
jmp
mov
cmp
rcr
cmps
xchg
fiadd
outs
jmp
repnz
mov
call
sub
data16
lock
push
test
mov
(bad)
or
dec
push
inc
sahf
mov
push
rcr
mov
push
and
push
mov
xor
cs
mov
dec
pop
sbb
jnp
aas
mov
pop
pop
ret
sbb
sub
sti
lock
xchg
ret
push
lods
and
dec
jmp
nop
push
test
js
push
pop
(bad)
or
mov
and
aam
mov
ror
xchg
pusha
cwde
or
(bad)
cmp
mov
dec
js
inc
(bad)
or
ret
popa
jnp
inc
sub
packsswb
sbb
sbb
push
mov
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
and
lea
cmp
ja
fcmovb
jmp
or
mov
xor
sbb
and
retf
push
jecxz
xor
test
and
and
cmp
dec
pusha
rol
idiv
dec
or
cmp
jb
or
dec
mov
add
and
sbb
add
pop
add
cmp
lea
ret
add
xlat
mov
hlt
cmp
push
cmp
mov
add
push
jnp
(bad)
(bad)
cmp
das
clc
das
fdiv
hlt
cli
mov
inc
test
je
or
jae
adc
je
cmp
adc
mov
add
cmp
jecxz
cmp
jne
add
shl
or
mov
pop
lea
out
bound
dec
dec
cld
mov
jl
fsubr
inc
inc
call
imul
dec
cmp
pop
scas
mov
mov
ret
push
pusha
xlat
and
sbb
adc
fsubp
cli
xor
sbb
or
jb
inc
pop
or
push
sbb
mov
adc
xchg
pop
(bad)
imul
adc
add
in
cdq
lea
mov
test
ficomp
xor
inc
push
and
xor
add
mov
dec
outs
add
adc
cmp
stc
jp
cmp
jge
nop
push
loop
and
cmp
pop
add
fadd
add
inc
ss
xor
lods
inc
inc
cwde
aaa
inc
push
jb
cwde
xor
and
enter
push
addr16
(bad)
pushf
popa
mov
jb
inc
rcr
jno
add
jecxz
cld
pop
cmc
cmp
jge
push
imul
add
fadd
mov
inc
js
icebp
or
out
repz
add
push
in
push
pushf
pop
pop
push
lock
pop
dec
xor
pop
lea
push
push
pop
adc
lock
pop
outs
loopne
push
and
xor
xchg
sub
jge
pop
lock
ret
inc
loop
out
xor
push
daa
mov
mov
push
(bad)
and
and
mov
bnd
adc
and
or
xchg
scas
clc
sub
test
or
add
adc
add
adc
add
adc
inc
adc
lahf
(bad)
push
xor
push
mov
adc
add
push
sahf
call
cmp
adc
pop
ret
adc
and
in
sub
cmp
fidivr
jmp
jge
enter
nop
jbe
and
sbb
mov
in
loopne
xor
jb
fcom
clc
jnp
jle
dec
ins
outs
mov
push
push
(bad)
mov
cmp
jl
sub
loop
dec
test
sti
mov
sub
or
mov
sub
or
leave
jne
push
out
pop
push
cmp
je
cmp
das
retf
mov
ret
mov
movs
inc
sub
ja
mov
arpl
mov
fwait
mov
sub
lods
or
mov
jge
sub
fwait
in
pop
push
or
adc
add
push
mov
inc
inc
or
mov
inc
jmp
ins
fild
enter
dec
push
or
dec
repnz
or
xchg
adc
jo
add
cs
and
dec
mov
and
or
jbe
cmc
fs
gs
xchg
gs
jb
jns
scas
ins
fidivr
inc
imul
inc
push
fistp
inc
outs
arpl
inc
gs
jne
je
dec
outs
je
imul
mov
imul
arpl
or
sti
imul
sbb
jb
xor
(bad)
(bad)
call
push
(bad)
outs
ins
bound
outs
js
imul
ja
nop
aam
inc
sti
pop
cmp
andps
outs
dec
inc
xor
je
cmp
xor
dec
add
hlt
lock
jb
xor
xor
in
fcomp
ror
pushf
pushf
pushf
pushf
enter
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
test
mov
pushf
cwde
xchg
nop
mov
cmp
pushf
js
jo
xchg
xchg
fild
xchg
xchg
xchg
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
adc
xchg
xchg
xchg
xchg
or
add
mov
leave
leave
cld
xor
xor
leave
leave
in
push
pop
loopne
(bad)
leave
leave
leave
leave
aam
int3
enter
leave
(bad)
sar
mov
test
leave
leave
leave
movs
mov
leave
leave
xchg
nop
mov
test
leave
leave
je
ins
push
fs
pop
pop
leave
leave
leave
leave
push
push
dec
dec
leave
leave
leave
leave
inc
inc
cmp
leave
leave
leave
leave
xor
sub
leave
leave
leave
leave
and
sbb
in
leave
leave
adc
or
ss
in
pop
push
dec
inc
in
in
inc
dec
push
cmp
in
in
xor
sub
in
in
and
sbb
in
in
adc
or
in
in
add
cld
xor
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
in
in
enter
mov
mov
in
in
movs
mov
in
xchg
nop
mov
in
in
test
in
je
ins
in
in
push
in
in
push
push
dec
in
in
dec
inc
inc
cmp
in
in
xor
sub
pushf
fsubr
sub
and
sbb
test
leave
leave
leave
or
add
in
fs
xor
hlt
lock
in
in
call
in
(bad)
aam
in
in
int3
enter
in
in
mov
in
lods
test
mov
pushf
cwde
xchg
nop
in
in
mov
in
jl
je
in
in
ins
push
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
in
in
sbb
adc
in
in
or
add
jb
xor
cld
xor
hlt
lock
test
loop
or
ror
shl
into
xchg
les
out
dec
push
sbb
pop
cmp
xor
cli
out
sbb
mov
scas
push
mov
movsx
lods
retf
or
cmps
pop
adc
outs
mov
call
jg
sbb
sub
pop
orps
sub
(bad)
xor
movs
sbb
sti
cld
sub
das
sbb
popa
or
adc
jns
out
sbb
and
sbb
loop
push
cli
xchg
mov
sbb
sahf
fimul
ret
scas
cmps
test
mov
xchg
stos
and
jo
pusha
sub
pop
push
pop
adc
int3
or
push
clc
push
xor
push
jo
cs
or
pop
repnz
add
mov
xchg
imul
pusha
xchg
or
inc
pop
or
cmp
loopne
xchg
(bad)
jecxz
mov
add
gs
xor
and
push
dec
inc
inc
dec
add
outs
rcr
pop
sti
(bad)
and
dec
push
inc
push
dec
pop
and
mov
dec
push
push
pop
sub
push
inc
dec
pop
dec
and
shl
dec
dec
inc
push
das
inc
cmp
or
je
imul
js
mov
xor
xchg
xchg
into
les
icebp
repnz
xchg
xchg
xchg
hlt
cmc
div
xchg
xchg
xchg
xchg
clc
stc
cli
sti
xchg
xchg
xchg
xchg
cld
std
(bad)
call
loope
jecxz
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
call
xchg
xchg
xchg
in
in
out
out
xchg
xchg
xchg
xchg
rcl
rcl
xchg
xchg
xchg
xchg
aam
(bad)
xlat
xchg
xchg
xchg
xchg
fcomp
fcmovu
xchg
xchg
xchg
xchg
(bad)
(bad)
xchg
xchg
xchg
xchg
rol
ret
xchg
xchg
xchg
xchg
(bad)
(bad)
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
int3
int
iret
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
movs
movs
cmps
cmps
aaa
popf
xchg
xchg
test
stos
pop
and
mov
out
xor
add
mov
push
or
repnz
add
test
out
call
imul
js
gs
imul
outs
add
sub
jae
iret
cwde
mov
dec
gs
jo
mov
movs
mov
cld
jnp
jmp
or
dec
jne
dec
dec
gs
outs
jb
lea
mov
inc
imul
mov
pop
scas
or
adc
adc
fadd
out
scas
xchg
mov
jle
mov
and
or
adc
add
outs
mov
loope
or
sbb
scas
scas
xchg
xchg
mov
or
mov
inc
inc
jns
gs
nop
rol
repnz
outs
sbb
mov
mov
jo
mov
cld
int
outs
jbe
jb
ins
outs
ja
mov
add
dec
fiadd
sub
int3
scas
int3
cmp
dec
sub
jbe
adc
out
xor
dec
jo
and
scas
and
sub
ins
jle
nop
mov
jl
inc
sbb
rcl
scas
jge
ret
sub
fs
add
cvttps2pi
xchg
movsx
imul
mov
pop
rcr
inc
popa
jae
fisubr
mov
or
scas
inc
dec
shr
cmp
inc
jae
inc
rol
add
jae
adc
xchg
jl
sbb
jae
jae
jl
or
lock
add
clc
scas
clc
and
add
add
xor
nop
push
je
push
je
ss
fidiv
inc
(bad)
lods
sub
outs
shr
cmp
popa
jb
popa
outs
or
or
pop
movs
inc
mov
inc
add
mov
call
or
fsubr
sbb
adc
data16
and
loopne
in
and
push
in
loope
inc
push
stos
push
js
stos
adc
push
popa
mov
es
data16
nop
jle
add
aaa
xor
xor
dec
invd
(bad)
push
and
mov
cmp
add
adc
pop
clc
mov
cld
lds
adc
jb
popa
mov
mov
push
int3
add
cmp
jb
test
sub
and
aam
out
retf
aam
(bad)
imul
inc
dec
inc
out
push
pop
xchg
adc
sbb
mov
loopne
sbb
mov
push
add
aas
xor
cmp
jbe
xchg
adc
dec
sub
push
mov
ins
adc
ret
arpl
lods
adc
cmp
fadd
jg
xchg
cmps
sbb
shr
div
leave
pop
push
add
pop
jp
mov
push
retf
mov
mov
mov
pusha
in
or
lods
cmps
mov
push
mov
sbb
mov
xor
xor
or
adc
dec
mov
mov
mov
pause
sbb
add
repz
adc
sub
aaa
les
push
sbb
cli
sti
adc
add
fdiv
mov
or
dec
(bad)
out
rol
cmp
ja
sub
mov
inc
inc
dec
adc
int
aad
jg
inc
pop
add
arpl
and
or
pop
mov
mov
cmp
jbe
in
jg
jmp
movzx
push
push
call
mov
inc
jg
sub
or
cmps
jne
pop
mov
aas
and
inc
inc
ds
mov
sar
jmp
or
mov
(bad)
(bad)
out
and
sti
je
mov
ret
out
sub
pop
js
dec
jmp
call
pusha
or
imul
lahf
leave
outs
iret
ja
add
pop
ret
cmp
inc
data16
dec
xlat
and
jle
outs
pop
or
add
add
adc
push
test
shl
adc
push
adc
dec
mov
jmp
dec
mov
repz
jmp
jmp
jbe
adc
mov
adc
dec
sti
xor
clc
push
sub
inc
mov
sbb
jno
nop
inc
lock
std
jg
sub
add
sub
jb
sub
je
pop
(bad)
cmp
jl
inc
mov
ret
ds
jb
dec
jae
cmps
push
stc
pop
or
(bad)
jae
fcomp
jne
xor
dec
leave
jne
jge
not
mov
inc
dec
xchg
hlt
jnp
mov
mov
shl
icebp
dec
push
pop
jp
jne
cli
cmp
ret
push
std
scas
cli
mov
sub
sub
jbe
add
cwde
sub
jmp
mov
dec
jne
or
in
jmp
mov
sub
xor
push
outs
cdq
mov
add
jge
inc
sub
mov
ret
inc
(bad)
push
push
mov
neg
add
call
(bad)
sub
pop
int
aam
inc
data16
mov
cmp
xor
or
rcr
call
dec
add
inc
mov
mov
add
and
fdivrp
(bad)
fild
fistp
ret
add
add
sub
add
pusha
xchg
jno
ror
(bad)
fdivr
mov
xor
fisttp
ins
pop
sub
rcr
loope
push
push
addr16
ffree
ffree
ffree
ffree
pop
and
add
push
push
sbb
frstor
push
adc
loopne
or
clc
and
int3
sub
push
cmp
add
push
mov
or
push
xlat
ret
mov
call
int
lock
mov
(bad)
mov
sub
inc
push
ret
dec
les
bound
ins
imul
in
push
nop
cmps
mov
cwde
in
fdiv
daa
pushf
cdq
lods
or
mov
jbe
push
push
mov
cmp
(bad)
std
dec
mov
les
sub
xor
push
dec
pop
add
loopne
mov
or
add
lock
mov
repnz
ret
loopne
and
(bad)
mov
or
call
add
push
adc
sub
mov
inc
ja
xchg
pop
adc
push
lock
movs
sar
(bad)
mov
fcomp
xchg
add
dec
btr
clc
ss
mov
inc
dec
pop
outs
sbb
dec
imul
mov
and
call
jae
or
cmps
add
xor
add
xor
sub
sub
scas
sub
adc
pop
outs
aaa
jmp
and
pop
ror
popf
add
pop
movs
sub
out
mov
clc
or
mov
in
inc
ja
jo
cmp
and
ja
or
or
add
sub
jo
add
dec
mov
mov
xchg
adc
(bad)
idiv
jae
xchg
inc
xlat
jae
call
dec
cmp
push
ror
push
mov
cli
cld
xor
push
dec
nop
pop
(bad)
scas
mov
mov
fisttp
fs
sub
mov
stos
loop
xchg
push
pusha
dec
ins
out
jnp
jae
das
add
cld
loopne
shl
add
ret
push
pop
rcr
mov
add
and
xor
lahf
xlat
xor
fisttp
pop
jl
mov
push
sbb
icebp
mov
jnp
popf
jne
dec
adc
sub
cli
pushf
rcl
adc
push
xchg
sub
cmps
popa
pop
pop
cmp
imul
aam
push
jl
push
or
cwde
mov
add
xor
pop
fucomp
mov
pop
mov
sbb
clc
cld
push
jnp
loop
sar
cld
imul
test
push
call
jl
mov
(bad)
dec
or
adc
xchg
xor
lock
add
ret
add
mov
push
(bad)
mov
mov
sahf
fcom
ret
das
lea
daa
and
ror
aas
test
mov
add
pop
pop
loopne
mov
add
cmp
xor
rcr
ret
dec
sbb
dec
adc
jnp
inc
sub
pop
cli
mov
fstp
jp
inc
pusha
pop
pusha
push
mov
bound
icebp
adc
lahf
stc
jmp
out
iret
push
ds
xlat
mov
mov
pop
mov
repz
mov
mov
shr
xchg
and
xchg
inc
xchg
pop
cmp
cli
jmp
je
dec
mov
mov
push
dec
jae
ror
mov
xchg
pop
sbb
pop
jmp
mov
or
jne
scas
dec
stos
imul
std
or
inc
dec
je
mov
mov
xchg
icebp
jbe
sbb
pop
inc
(bad)
lods
mov
and
adc
mov
jne
xor
dec
imul
mov
or
mov
ret
cmp
int
out
mov
imul
ror
ins
lock
mov
movs
scas
push
shl
dec
dec
rcr
aaa
fdivr
add
jbe
mov
js
cmp
jne
les
retf
mov
mov
add
cmp
lock
pop
int
and
and
add
sub
mov
neg
or
sbb
fisttp
sbb
push
sub
or
xchg
push
sub
fcmove
mov
hlt
and
jge
adc
adc
mov
into
or
push
mov
adc
dec
jne
ins
sub
test
iret
call
jmp
loop
jle
mov
cmp
sub
fdiv
cs
cmp
jne
cs
and
lods
jmp
adc
pop
cmp
sub
sub
adc
jne
mov
mov
mov
cs
fild
sub
jae
xchg
shr
rol
xchg
pop
mov
rep
sbb
cmp
push
mov
neg
pop
mov
sub
xor
cmp
ja
imul
mov
fucom
loopne
add
and
in
dec
retf
mov
jg
cmp
cmp
mov
je
xchg
ret
and
call
cmp
pop
sbb
not
or
xor
mov
call
test
out
imul
xchg
push
jl
mov
aaa
xchg
pop
lock
jb
xor
inc
in
inc
das
test
xchg
mov
dec
fsubr
rol
aaa
push
je
or
stos
and
push
add
cmc
xchg
mov
call
jbe
cmps
mov
push
pop
cmp
dec
imul
hlt
aas
fadd
and
test
imul
bound
or
add
mov
aad
or
jmp
xor
jle
aad
inc
inc
mov
cmp
fist
cld
or
jne
aas
and
aas
mov
jp
call
pop
js
mov
or
shl
cmp
ja
or
xchg
xor
es
ja
jecxz
dec
mov
cwde
pop
ds
sbb
sbb
aad
sbb
jmp
mov
outs
mov
(bad)
pop
inc
je
mov
or
je
mov
(bad)
mov
stc
inc
je
mov
dec
je
dec
jl
mov
mov
loope
pop
cmp
cli
mov
lock
xchg
adc
stos
pop
mov
(bad)
clc
adc
movaps
pop
pop
bound
xchg
mov
inc
iret
dec
faddp
xlat
jns
mov
xchg
ret
xor
and
retf
lahf
or
push
mov
sbb
pop
daa
and
test
sahf
jl
jns
ret
jbe
je
lock
je
xchg
mov
adc
test
ins
ss
or
ror
js
mov
pop
call
xchg
or
test
jge
sbb
enter
lea
add
(bad)
jmp
dec
fbld
cmp
jl
jmp
add
movs
popf
cdq
adc
clc
fiadd
lea
push
xchg
push
loopne
push
iret
mov
mov
imul
adc
(bad)
pop
pop
jge
mov
neg
jmp
or
enter
xchg
push
mov
push
enter
mov
lods
mov
inc
sar
mov
leave
jg
dec
mov
stos
cmp
jne
pop
pop
or
adc
dec
sub
push
in
call
or
mov
repnz
aam
cmc
icebp
sbb
adc
mov
inc
add
mov
(bad)
jae
jle
mov
cs
pop
scas
mov
jb
ror
mov
inc
jbe
je
jge
movzx
sub
xor
mov
jp
lea
push
cmp
mov
mov
pop
adc
je
add
mov
mov
add
lea
or
sbb
call
dec
cld
cmp
push
pushf
jmp
or
std
sar
dec
dec
inc
dec
inc
dec
lods
or
xor
jge
or
mov
stos
ret
std
mov
aam
test
cld
stos
adc
jg
cmp
jl
pop
sbb
mov
cmp
sbb
stos
jmp
sti
out
(bad)
std
inc
inc
mov
loop
movlps
pop
push
sbb
clc
dec
test
ja
jne
push
mov
xchg
mov
inc
sbb
dec
jbe
sub
(bad)
add
hlt
cmp
leave
mov
mov
mov
pop
ins
shl
sub
cli
adc
mov
sar
add
not
scas
je
mov
dec
mov
repz
inc
test
jne
shl
in
stos
xor
call
dec
push
sti
add
je
inc
shr
jne
pop
mov
ret
xchg
repnz
and
sbb
mov
out
pop
sub
adc
pushf
fwait
or
mov
mov
je
push
push
cmp
das
and
or
mov
or
popf
add
or
loop
push
mov
cmps
add
cmp
ret
and
inc
add
and
and
adc
and
popf
outs
mov
sub
inc
sub
sub
fucomp
int3
push
sbb
and
sub
lahf
addr16
sub
xor
sub
cmp
in
xor
fldenv
push
rol
outs
repz
call
xchg
adc
lods
xchg
mov
and
add
and
inc
push
ficom
jecxz
jge
fimul
cmp
iret
mov
mov
jge
fld
je
test
rcl
call
add
inc
fabs
push
scas
ds
movlps
pop
frndint
rcr
scas
push
stos
jg
fstsw
fwait
mov
test
je
fidiv
jne
cmp
std
call
or
mov
nop
shr
and
add
icebp
fld
sbb
cmp
xor
stos
mov
add
jns
mov
mov
cmp
pushf
or
cmp
add
or
dec
js
dec
and
pop
data16
cmp
jmp
mov
add
not
push
shr
clc
mov
push
add
xchg
out
xor
(bad)
push
jbe
adc
jg
inc
cs
ror
je
dec
loopne
push
into
neg
sbb
xchg
mov
or
fs
push
add
pop
mov
cmps
sbb
jae
dec
add
sbb
inc
loopne
push
in
ins
or
jg
xchg
fidiv
add
sbb
sbb
sub
pushf
xor
ja
and
jne
dec
sub
cmp
out
push
and
inc
jmp
sub
sub
mov
cmp
div
push
jo
mov
mov
cli
shl
iret
inc
pop
das
mov
adc
retf
f2xm1
fwait
hlt
pop
mov
fldz
cmps
jg
mov
cmp
push
jmp
inc
test
mov
int3
cmp
or
cmp
icebp
je
xlat
jnp
outs
and
fistp
sub
add
jg
or
push
clc
jne
mov
sahf
add
frstor
add
loopne
adc
pop
jg
fistp
jmp
fstp
dec
test
lock
mov
neg
pop
ins
and
push
int
cmp
mov
test
or
fimul
and
aaa
mov
jg
movs
xor
push
inc
imul
ror
push
cmp
aaa
add
ins
adc
inc
rol
test
xchg
push
mov
mov
push
shl
adc
fisttp
in
mov
add
cdq
or
addr16
pusha
mov
mov
mov
call
fs
fld
fstp
fwait
ins
leave
push
jnp
push
(bad)
hlt
or
mov
mov
fisttp
fld
inc
jl
jbe
sbb
push
(bad)
adc
mov
xor
mov
fldpi
push
adc
adc
push
or
lea
or
sahf
sbb
inc
inc
sar
stc
inc
pop
dec
bound
pushf
data16
dec
loop
add
push
xchg
lea
adc
call
jmp
rcr
fild
xor
fstp
fwait
loopne
lds
push
(bad)
pop
add
push
retf
movs
dec
outs
movs
xor
push
sbb
hlt
fsubr
push
dec
(bad)
mov
lahf
stc
es
sub
mov
push
cmp
mov
pop
das
in
iret
and
call
mov
or
enter
loopne
imul
pop
into
and
fldcw
xor
idiv
adc
mov
dec
rcl
(bad)
xor
ss
fsub
mov
cdq
push
sbb
(bad)
les
add
jg
clc
inc
lea
inc
jb
mov
daa
ja
and
jb
or
jb
sti
ins
cli
(bad)
cmp
ja
adc
popf
ror
out
mul
pop
dec
inc
jne
cmc
pop
pop
pusha
sub
dec
mov
aas
cdq
idiv
imul
push
call
fcomp
in
sar
ds
add
pusha
ret
or
mov
std
std
and
mov
inc
xchg
sbb
call
inc
test
clc
push
clc
add
add
sbb
pop
pop
xor
pop
inc
fstp
mov
dec
push
cmp
jl
add
adc
ret
inc
and
jo
lds
xchg
lods
mov
call
add
or
dec
lock
imul
pop
neg
add
push
sub
ficom
loopne
cmp
add
sub
sub
lds
loop
cmp
xchg
adc
cli
js
mov
loopne
ins
pusha
loop
cmp
jb
fnstsw
jbe
sub
(bad)
add
mov
ror
hlt
and
hlt
mov
cdq
jbe
push
xlat
ss
mov
(bad)
cmp
mov
cmp
int
cld
mov
icebp
add
push
add
ror
adc
mov
mov
rol
mov
inc
sbb
xchg
and
push
mov
inc
out
cwde
xor
mov
mov
fst
sbb
test
aas
sbb
or
jb
cdq
push
movs
sbb
(bad)
push
xlat
dec
inc
inc
mov
arpl
xchg
shl
xchg
sbb
sbb
add
fs
mov
or
mov
inc
cmps
lods
inc
xor
out
and
loopne
push
cmp
jne
aaa
add
(bad)
fidiv
add
push
lea
or
xchg
repnz
ror
mov
in
add
jecxz
retf
in
push
push
in
jge
call
jmp
adc
call
int3
pop
sbb
fidivr
push
xchg
test
jmp
lock
add
cmp
cmc
pop
or
push
mov
push
add
mov
mov
push
mov
push
dec
or
inc
daa
dec
cs
or
mov
pop
lods
ins
jp
pop
popa
mov
pop
cmp
sub
adc
outs
xor
stos
clc
jmp
or
inc
lock
adc
sbb
push
and
mov
ret
xor
push
mov
jo
or
arpl
xchg
and
push
pop
pop
addr16
iret
in
mov
popa
ret
dec
fadd
adc
jmp
loope
enter
cwde
je
sbb
stos
jecxz
push
inc
cmp
jne
push
or
ret
pusha
and
out
cmc
loopne
out
jns
add
add
shrd
mov
add
or
test
push
add
push
pop
mov
jle
fsubr
pop
inc
mov
adc
jecxz
dec
and
sub
mov
mov
sub
outs
stos
idiv
int3
or
cmp
in
outs
mov
in
repnz
jns
mov
lahf
cmp
pop
mov
or
cmp
jne
mov
xor
bound
cmps
cmp
xchg
inc
loope
loopne
or
inc
or
mov
nop
xchg
prefetchw
mov
or
or
add
add
add
or
neg
div
adc
add
cmp
aas
fwait
cmp
cmp
add
sti
pop
ret
jbe
test
pop
or
cmp
enter
loop
lock
mov
fcomp
add
inc
mov
and
lea
fst
mov
and
mov
sbb
pop
xor
xor
adc
sbb
inc
inc
push
add
movs
pop
xchg
xor
push
aam
mov
sub
dec
add
jmp
out
aad
je
mov
and
fwait
jl
mov
jle
leave
and
and
pop
ret
xchg
nop
and
and
add
loope
fidiv
mov
cmps
fdiv
push
jbe
jl
lock
push
add
dec
jg
je
mov
repz
pop
sbb
pop
sub
je
pop
je
jmp
cmp
push
outs
cwde
jne
mov
aas
push
push
test
mov
movs
repnz
dec
rol
jmp
cmp
xor
mov
test
aad
test
mov
xlat
push
(bad)
push
jmp
inc
ror
imul
or
cmps
ret
mov
push
dec
fist
pop
add
mov
call
xor
push
add
nop
pop
movs
retf
push
mov
dec
in
sub
push
dec
xlat
jne
sbb
retf
xchg
xchg
lock
out
out
pop
cmp
add
ins
push
cmp
daa
jns
adc
add
cmp
jae
retf
cwde
inc
dec
ficom
pushf
nop
add
xor
and
aam
(bad)
xor
pop
add
inc
pop
sbb
ret
pusha
push
sub
rol
adc
and
lods
or
jge
fsubr
popf
nop
ja
jo
cmp
outs
sbb
ja
(bad)
or
inc
xchg
jmp
sbb
push
(bad)
rol
jmp
call
mov
fsubr
aam
mov
sub
movs
xchg
push
jmp
adc
pop
mov
sbb
clc
inc
mov
iret
mov
fcomp
add
or
addr16
dec
das
push
dec
xchg
or
adc
push
add
add
psubb
mov
mov
nop
fnstenv
mov
(bad)
cdq
std
jmp
push
mov
lea
jmp
or
cmps
or
jge
sbb
es
pop
les
cmp
jg
push
dec
fisub
in
mov
cmps
daa
push
inc
push
add
(bad)
mov
(bad)
int
seto
or
fisubr
xor
jmp
mov
sub
lock
pop
(bad)
jmp
cmp
mov
cmps
mov
outs
xor
sub
jae
jnp
int
dec
or
(bad)
sbb
scas
mov
ret
(bad)
add
add
stos
inc
idiv
mov
fimul
xor
cmps
mov
or
xor
ja
call
les
push
icebp
int3
aam
pop
nop
retf
outs
mov
add
mov
xchg
daa
xchg
xchg
test
mov
loope
add
fdivr
add
jl
pop
in
(bad)
cmp
jne
inc
mov
pop
scas
jg
inc
je
mov
jmp
sub
je
mov
enter
cmps
sub
je
jmp
mov
jmp
ret
outs
and
push
push
es
push
inc
mov
js
and
jle
fadd
(bad)
pop
(bad)
add
add
or
lods
xor
add
cs
pop
pop
xchg
or
popf
sub
call
imul
and
push
inc
mov
jecxz
push
jb
pop
loopne
popa
jne
movs
adc
fimul
pusha
or
and
jmp
cmp
cmp
jg
jg
cwde
aam
dec
or
cdq
xor
sub
add
sahf
add
add
cmp
jle
adc
pop
and
out
sbb
gs
xchg
shufps
loopne
push
stos
push
cmps
and
add
dec
add
or
test
or
pop
xchg
popf
xchg
les
push
adc
or
ds
add
movs
adc
mov
dec
sub
fisub
fnstsw
fistp
adc
popf
ret
inc
jne
ins
enter
cmp
jne
mov
xchg
lods
nop
ins
stos
test
cld
or
mov
cmc
sub
fisubr
jns
daa
nop
add
add
lock
add
bound
adc
jmp
jmp
mov
and
in
call
mov
hlt
push
sbb
mov
ss
repnz
sbb
jmp
push
dec
push
mov
or
lods
pop
push
jmp
cmp
ja
(bad)
mov
sub
push
push
mov
data16
div
ja
lock
add
cmp
jle
and
fs
jne
jo
mov
mov
add
or
xor
pop
jle
push
or
cmp
enter
aaa
dec
xor
dec
sbb
cmp
fwait
pop
mov
and
xor
xchg
bnd
fmul
or
sar
push
mov
(bad)
fstp
fsubr
fiadd
movs
imul
xor
mov
das
xor
inc
repnz
out
dec
adc
cmps
add
xor
jno
test
add
push
push
out
ret
push
cli
jmp
mov
add
(bad)
and
xor
lea
test
and
(bad)
jmp
push
pushf
mov
jb
inc
add
sub
loop
pop
lds
add
push
stos
(bad)
sub
cmp
push
or
or
xchg
mov
cmp
sbb
enter
xchg
jl
and
push
popa
loope
xor
and
cmp
jnp
inc
(bad)
ja
jne
(bad)
shl
jnp
sbb
add
push
daa
shr
xor
push
pop
stos
adc
push
pop
sub
call
push
mov
ret
pop
mov
pop
push
pop
xchg
cwde
cmp
add
(bad)
fcomp
sub
xchg
cmp
test
xchg
call
mov
jne
cdq
mov
sahf
dec
(bad)
xchg
or
adc
in
es
jne
dec
cwde
mov
add
jmp
fst
fcomp
mov
sbb
fwait
jmp
sbb
push
mov
add
pop
push
mov
push
push
xor
jmp
mov
mov
sub
jb
or
inc
cmp
retf
xchg
add
mov
adc
xchg
fwait
push
test
or
adc
(bad)
loop
cli
adc
jmp
pop
les
scas
ret
int3
xchg
clc
sbb
push
push
add
outs
push
dec
(bad)
call
jp
lods
xor
movs
cdq
dec
push
clc
sbb
jle
add
data16
fidivr
dec
call
(bad)
adc
jmp
ins
adc
sar
push
push
imul
(bad)
mov
dec
lea
dec
retf
not
push
les
enter
mov
push
xor
mov
inc
mov
scas
ror
and
pop
add
scas
scas
xchg
push
in
add
call
loope
fwait
outs
xor
dec
call
fsubr
in
or
add
xchg
inc
xlat
sbb
mov
add
lock
mov
inc
idiv
jl
je
xchg
cmp
pop
and
syscall
in
adc
or
mov
fwait
js
ja
mov
sbb
bound
cmps
push
mov
ins
push
mov
push
(bad)
int3
stos
jmp
mov
pop
mov
in
outs
lods
pop
add
aas
dec
add
mov
ins
sub
xor
sbb
mov
fs
sub
outs
mov
push
repz
mov
xor
sbb
or
push
push
pusha
mov
xchg
cmp
inc
fdivr
xor
fs
mov
scas
and
lock
es
adc
clc
push
clc
add
test
add
aad
(bad)
sub
cmps
adc
xor
sub
je
sub
push
stos
shl
ret
pop
mov
xor
outs
xchg
std
add
sahf
xor
push
sbb
jno
dec
cs
clc
push
pop
loop
hlt
cmp
ja
sti
ss
pop
lock
add
jg
mov
cmp
cmovp
test
mov
jle
jl
add
pop
jns
adc
mov
leave
adc
add
sbb
ins
jne
xor
jmp
in
and
dec
cs
jle
fcom
scas
in
add
pop
sbb
add
pop
enter
sbb
xlat
add
mov
mov
mov
fisubr
sbb
test
cmp
adc
stc
fcmovb
test
cld
mov
xor
sbb
sbb
pusha
push
add
out
sahf
add
in
mov
aam
mov
and
mov
out
adc
lods
fsubr
or
popf
gs
fistp
pop
xor
inc
mov
inc
push
repz
pop
add
ins
mov
cmp
and
or
push
sub
test
and
pop
push
or
xor
add
inc
bound
cld
sbb
sub
ret
adc
sbb
push
out
and
sbb
js
pop
mov
cld
mov
popf
sahf
retf
mov
push
xor
mov
mov
cmp
mov
push
push
lea
xor
sbb
js
pcmpgtd
add
push
or
cmp
sub
cmp
mov
pop
mov
pop
add
mov
outs
adc
cdq
push
or
dec
mov
inc
ds
or
lock
ret
or
push
jne
fnstenv
push
sbb
inc
lds
add
dec
inc
push
xorps
sub
add
ret
fst
fld
sub
das
xor
push
mov
sbb
or
loopne
dec
les
sub
loopne
mov
sti
lea
adc
sub
fidiv
and
and
ins
inc
xchg
test
push
adc
cmpxchg
sbb
fcmovnb
js
mul
lods
ret
test
push
or
pusha
and
mov
aad
xor
mov
sti
push
repz
cld
jg
cmp
sbb
push
sub
sub
sbb
push
(bad)
and
lock
or
add
rol
dec
push
push
add
aad
push
push
push
sar
retf
adc
mov
pop
std
jmp
jmp
push
test
inc
lea
outs
dec
outs
(bad)
or
pop
fild
shr
lods
pop
pop
cmps
jo
in
or
xchg
push
ret
add
pop
push
pushf
push
js
add
shr
mov
in
or
int
or
jge
clc
push
in
in
inc
ficom
sbb
dec
loopne
mov
outs
inc
int
mov
mov
test
pop
enter
enter
icebp
dec
jo
add
jns
push
mov
bound
push
add
movs
inc
jbe
movs
loope
into
rcr
pushf
fmul
add
pop
push
jle
jg
push
cmp
je
jmp
xor
inc
pop
scas
pop
dec
xor
and
sbb
ret
mov
add
push
pop
dec
shl
or
xor
test
inc
pop
push
mov
out
rcl
nop
outs
adc
fist
xchg
mov
mov
sbb
mov
pop
cld
cmp
pcmpgtb
adc
clc
push
and
sbb
inc
or
cs
inc
arpl
punpcklwd
pushf
test
cmp
in
mov
push
and
lea
sub
cmp
gs
mov
repz
jnp
jae
or
enter
mov
lods
aam
jecxz
fadd
pop
xchg
mov
pop
outs
hlt
jb
pop
in
mov
cwde
mov
xchg
xchg
retf
enter
xchg
add
lods
xor
mov
sub
loop
nop
call
aas
jo
cs
xchg
aad
jns
bound
aas
cmps
mov
jmp
es
std
rol
or
sbb
and
pop
mov
movs
sbb
adc
mov
sbb
hlt
add
xchg
in
xor
lock
outs
loope
jo
loopne
or
cmp
xchg
rcl
scas
mov
clc
or
inc
shl
cmc
imul
cmp
mov
and
adc
loopne
sbb
adc
mov
cmp
xchg
sub
outs
pop
fimul
das
or
mov
stc
std
cmp
mov
mov
xchg
daa
sbb
add
sub
lock
in
pop
inc
cwde
cwde
adc
dec
shr
ffreep
sub
adc
ins
inc
adc
daa
nop
call
call
push
xchg
bnd
add
add
enter
or
add
ins
sub
bnd
jle
sbb
adc
adc
add
add
mov
fidivr
add
jne
cmp
(bad)
(bad)
mov
fucomip
sbb
pop
fnsave
mov
xor
jnp
sub
pop
adc
jno
and
mov
push
or
or
and
lea
xchg
adc
push
push
fisubr
and
je
je
inc
pop
dec
xor
ret
loopne
sub
add
add
sbb
xchg
fdiv
adc
imul
and
daa
pop
call
data16
and
call
or
shr
or
add
adc
aas
or
jb
mov
sub
and
ret
(bad)
jns
dec
or
inc
xchg
add
mov
jle
cmp
adc
dec
mov
add
je
jge
cmps
pop
sbb
inc
(bad)
xor
cmp
sbb
shl
das
(bad)
inc
lock
adc
and
stos
and
stos
or
inc
pop
jg
jbe
in
cmp
inc
sub
push
inc
in
lock
and
rol
xor
inc
inc
inc
jge
or
lods
hlt
retf
(bad)
xor
or
mov
lock
fstp
pop
hlt
jge
jl
jne
sbb
push
addr16
push
push
or
test
and
mov
rcl
pop
xchg
aaa
fild
push
inc
mov
cli
pop
xor
jg
lock
test
jg
xchg
or
or
mov
mov
or
in
xchg
inc
(bad)
pop
popf
mov
xchg
es
jge
inc
rol
pop
mov
pusha
loopne
push
push
sub
daa
push
daa
xchg
adc
and
or
xchg
add
dec
sbb
shr
jae
push
adc
mov
(bad)
fld
push
rcr
adc
lds
adc
(bad)
scas
fild
inc
mov
xlat
mov
retf
test
(bad)
out
(bad)
js
or
rol
scas
test
aad
pop
xchg
and
cmp
mov
or
je
mov
push
push
push
clc
sub
xchg
mov
jb
fiadd
add
bound
cmp
sub
cmp
jbe
(bad)
lock
bndstx
shl
ins
ins
and
inc
mov
cmp
inc
mov
call
sub
xchg
mov
jae
sbb
test
mov
push
cmp
je
add
inc
fiadd
inc
(bad)
jne
xchg
jl
or
hlt
adc
stc
xor
xchg
and
pop
add
hlt
xor
pop
cmp
or
mov
xchg
push
jge
ret
dec
in
push
mov
(bad)
jg
(bad)
fwait
jo
neg
aaa
push
mov
sub
jb
inc
mov
fdiv
inc
dec
sbb
retf
jne
out
sbb
mov
movs
int
inc
jne
pop
aas
sub
clc
pop
ja
pop
or
setb
daa
or
imul
mov
inc
add
xchg
mov
add
inc
add
enter
jnp
loopne
xchg
call
or
rol
or
or
xchg
scas
ror
mov
ja
sub
jecxz
cmp
pop
mov
sbb
sbb
push
mov
mov
mov
outs
popa
mov
push
xchg
mov
inc
inc
cmp
cmps
xor
mov
bound
loope
or
scas
movs
loopne
xchg
jnp
fnstsw
xchg
ror
or
jne
jmp
push
fsubr
xor
push
and
sub
adc
arpl
push
mov
sub
dec
jne
push
scas
ret
shr
fdivr
cmc
imul
ss
fwait
aam
pushf
(bad)
pop
das
es
xor
mov
sbb
sub
mov
push
rcl
mov
and
jb
call
jge
sub
(bad)
cwde
mov
push
xchg
sbb
pop
jb
mov
mov
or
fsub
xchg
fwait
pop
mov
mov
pop
or
inc
sahf
les
aam
xchg
imul
fdivr
push
fst
jle
sub
mov
dec
int3
inc
xor
int3
mov
and
jge
inc
dec
or
enter
xor
cmp
cmp
add
jl
and
ins
xchg
add
aas
ret
nop
pmulhuw
push
xchg
inc
push
clc
mov
fisttp
cld
push
mov
cmp
cmp
movs
lock
stc
cmp
sar
icebp
pop
mov
js
push
ins
das
fs
xlat
scas
jae
rcr
and
das
add
ins
pop
jo
push
jmp
outs
in
and
sbb
stc
ins
cmp
pop
push
cmp
ss
pushf
out
xor
in
in
jo
arpl
cli
sbb
lds
or
mov
mov
in
call
es
push
xor
in
push
sbb
mov
inc
mov
aam
int3
adc
test
inc
jge
inc
mov
mov
add
pop
daa
(bad)
inc
jmp
xor
mov
pop
inc
fsubr
jmp
mov
ficomp
repz
xor
add
or
adc
push
xchg
push
cmps
shr
push
and
test
sbb
mov
pop
or
or
pop
mov
in
imul
fwait
clc
jb
gs
jo
inc
js
scas
test
pop
xchg
xchg
lock
inc
pop
call
ret
lock
ret
xchg
fistp
mov
(bad)
shl
mov
push
or
adc
movs
adc
(bad)
fild
repnz
cmp
jne
mov
and
out
adc
fstp
adc
daa
sub
dec
add
inc
jmp
mov
cmove
mov
lahf
js
add
mov
in
xchg
dec
push
mov
add
loopne
fimul
mov
sbb
mov
mov
and
inc
mov
lea
in
ins
mov
cmp
sbb
les
fs
rcl
xor
repnz
mov
pop
adc
dec
jg
and
inc
or
dec
loop
je
aas
cmp
sbb
xor
sar
enter
imul
fidiv
add
mov
fstp
adc
sbb
add
sub
xchg
jb
push
(bad)
test
mov
test
fst
adc
in
bound
cmp
inc
dec
xlat
jle
dec
cwde
pop
mov
or
ss
push
sbb
call
jle
lahf
clc
mov
jnp
ja
je
jbe
ret
mov
mov
sbb
mov
jo
mov
hlt
jle
xchg
ret
loope
sbb
mov
lea
mov
sbb
fwait
jecxz
(bad)
rcr
cmp
add
aam
fst
fmul
lds
cmpps
sbb
fldenv
pop
int
out
add
lds
or
dec
sbb
jnp
mov
inc
rol
(bad)
mov
add
cdq
icebp
cwde
imul
or
push
inc
scas
inc
ror
add
cmp
cmp
xchg
cmp
or
rol
mov
add
call
in
mov
dec
inc
fmul
add
xchg
or
dec
out
or
int
enter
or
jmp
fcom
lods
or
pop
xor
add
push
icebp
and
inc
cmp
inc
add
hlt
adc
(bad)
mov
xchg
mov
imul
enter
inc
mov
jnp
push
repnz
pop
mov
add
mov
jne
movs
scas
xchg
cmp
lds
mov
gs
xchg
pop
jle
fs
test
sbb
cmp
jge
and
pop
mov
pop
out
in
jbe
fst
inc
fs
jmp
lea
imul
sub
add
jbe
add
jl
cld
add
movs
punpckhwd
int
hlt
xor
in
rcl
sahf
idiv
aam
mov
repz
cmps
stc
push
cld
or
sbb
iret
jnp
mov
pusha
lods
push
push
idiv
rcr
out
jns
cmp
jl
shl
jnp
repz
js
push
pop
pop
lahf
cmp
push
dec
ror
push
inc
sahf
idiv
mov
xchg
cmp
repz
je
sbb
jl
jns
cmp
sbb
inc
push
adc
leave
xor
cs
adc
push
mov
or
enter
paddb
fsubrp
fisttp
hlt
cs
iret
leave
jae
push
in
in
fsubr
ins
jns
ds
in
pavgb
dec
fimul
fsub
jns
ja
inc
cld
rcl
inc
int3
cs
(bad)
leave
cmp
pop
cmp
add
pushf
cmp
add
dec
jbe
xor
or
mov
cwde
mov
ins
adc
and
daa
out
out
movs
inc
pop
mov
leave
cmp
hlt
cwde
inc
pusha
xchg
clc
jmp
nop
dec
mov
sbb
xchg
add
iret
pusha
enter
je
iret
nop
jb
dec
add
pushf
in
mov
test
mov
mov
and
inc
and
fst
adc
mov
nop
xchg
out
add
xchg
adc
inc
retf
adc
fs
adc
fmul
sbb
jnp
jge
sub
pop
enter
es
mov
and
xchg
cwde
nop
nop
xchg
mov
jge
shl
or
mov
iret
push
movd
and
mov
xchg
jge
sbb
sub
adc
popa
fidivr
mov
inc
push
pop
scas
or
or
test
push
je
mov
sti
xor
xor
cmp
imul
jl
aas
cmc
aad
cmp
cmc
pop
add
nop
sub
data16
or
std
or
pop
ret
dec
dec
outs
cdq
movs
not
or
or
in
fcmovbe
inc
pop
inc
pop
enter
les
mov
or
nop
inc
sbb
adc
inc
dec
leave
popa
outs
loope
ret
and
ins
repnz
inc
ror
nop
push
jb
pop
dec
sar
xor
push
rcr
dec
and
jns
or
push
clc
clc
jecxz
rcr
clc
clc
lea
paddd
outs
push
cmp
cmc
sbb
adc
mov
dec
in
add
adc
clc
loopne
push
and
ret
xchg
push
dec
enter
or
sbb
lahf
test
push
jg
cld
jb
repnz
cmp
fninit
adc
sbb
cmps
pusha
nop
fucomip
add
repz
pusha
aam
loop
adc
add
xchg
out
inc
xor
out
addr16
je
push
stos
nop
(bad)
js
adc
pushf
pushf
jo
and
xchg
jp
shl
jns
cmp
inc
xchg
inc
push
inc
mov
inc
mov
ret
xor
hlt
push
push
push
mov
mov
les
cdq
fs
dec
pop
fsub
test
call
dec
lock
jb
dec
es
xlat
mov
or
rcr
xchg
dec
xor
and
sub
cs
push
cs
rol
cmp
in
dec
xchg
cmp
xchg
fcomp
pop
fsubr
xchg
push
les
xor
push
cs
cmp
in
mov
sbb
cwde
in
cs
push
mov
xchg
push
mov
inc
xor
jne
pop
inc
loopne
add
inc
push
adc
or
dec
add
outs
je
fist
push
jne
das
dec
jne
xor
in
imul
fs
outs
and
cmp
jb
pop
outs
jb
ins
jo
xor
std
inc
jb
ins
push
je
pop
push
cmp
or
inc
adc
push
xor
fwait
(bad)
jns
or
in
sar
jae
pop
inc
jns
or
outs
daa
jns
fwait
xlat
in
xlat
clc
daa
hlt
xlat
push
mov
add
cmps
mov
mov
and
pop
out
cmp
mov
in
dec
or
adc
and
mov
mov
cvtpi2ps
mov
push
adc
les
loopne
xchg
imul
sahf
idiv
clc
xor
push
std
push
mov
out
mov
sub
dec
push
sub
push
aam
adc
push
and
inc
jne
dec
inc
cmp
pusha
mov
nop
clc
test
addr16
adc
add
push
or
xor
setb
out
jo
jo
pusha
je
fcomp
and
mov
adc
aam
adc
aam
inc
test
sub
dec
mov
(bad)
cmp
dec
outs
cmp
add
bound
push
enter
inc
jb
retf
add
mov
push
inc
popa
adc
fs
jb
fs
xchg
fs
enter
sbb
dec
sbb
outs
test
psubd
fmul
lock
mov
fadd
gs
iret
cwde
cwde
or
add
pop
and
lock
ins
jo
xchg
cld
cld
xor
or
mov
fs
fisttp
js
push
outs
div
mov
jns
int
(bad)
mov
sbb
dec
lods
mov
arpl
jg
sbb
fiadd
sbb
add
fwait
mov
es
cmp
icebp
pusha
adc
ficom
ret
mul
and
add
jbe
call
xor
cmp
and
mov
call
dec
push
jns
es
add
in
and
nop
inc
retf
in
add
(bad)
pusha
sbb
fbld
nop
add
fmul
and
fild
xchg
inc
and
enter
mov
add
loopne
test
dec
in
adc
adc
and
aad
mov
sbb
mov
jg
mov
aaa
inc
and
dec
es
mov
(bad)
mov
int3
(bad)
std
scas
rcr
sub
dec
je
sbb
sub
cwde
fs
ins
xchg
data16
push
nop
es
jbe
add
cwde
cmp
fcom
shr
add
dec
pop
into
sub
clc
mov
iret
and
pop
dec
hlt
mov
iret
and
int3
adc
jl
nop
mov
mov
nop
pop
leave
dec
fsubr
mov
repnz
mov
aam
mov
jmp
mov
mov
stc
dec
loopne
fst
sti
cmps
jecxz
mov
cli
enter
pop
ror
and
les
jns
cmp
fcomp
enter
nop
vmread
je
loop
xor
retf
dec
loopne
or
push
es
lea
xor
adc
cmp
push
mov
or
mov
xchg
xor
adc
sbb
adc
cld
or
jl
stc
loop
out
push
push
pop
aad
data16
(bad)
add
pop
push
add
ins
enter
add
adc
mov
(bad)
xchg
adc
dec
push
or
jecxz
movs
loope
out
repnz
(bad)
mov
mov
add
xchg
and
(bad)
fimul
imul
sub
push
(bad)
dec
rcl
popa
lods
lods
shl
(bad)
cld
pop
sbb
inc
mov
sti
fisub
cld
test
cs
add
and
sub
imul
enter
add
lds
jl
pop
les
push
adc
je
dec
jmp
sti
jmp
and
mov
cwde
sub
fiadd
inc
xor
lea
or
cli
enter
inc
add
jo
call
hlt
aaa
fidivr
xchg
xchg
inc
sub
inc
cmp
inc
pop
sahf
sbb
shr
sbb
lea
pop
cld
(bad)
sti
int3
dec
in
repz
dec
jnp
or
jae
(bad)
or
sub
in
test
jnp
add
daa
in
xor
adc
in
push
(bad)
fadd
imul
(bad)
adc
or
rcl
rcl
add
jns
dec
add
jbe
inc
sub
adc
enter
adc
shl
div
and
cwde
jmp
or
(bad)
out
jl
lods
jge
inc
rcl
inc
test
push
bound
inc
mov
xchg
pop
ret
aas
aad
pop
jns
and
(bad)
clc
fimul
inc
inc
add
fucomp
sbb
sub
inc
mov
push
or
adc
pop
push
loopne
in
pop
xor
in
loopne
mov
std
stc
push
push
xchg
push
mov
xchg
pop
in
sub
mov
dec
and
or
adc
mov
dec
pop
inc
push
in
cmp
jle
mov
push
ret
outs
cmp
xchg
hlt
retf
pop
aad
fcom
(bad)
and
dec
mov
cs
fdivr
cmps
push
add
repnz
push
push
adc
adc
dec
xor
pop
add
or
push
and
dec
(bad)
fstp
rcr
jl
fsub
inc
(bad)
adc
and
(bad)
inc
(bad)
cmp
sub
add
sbb
and
shr
or
cld
jno
add
lock
je
pop
cs
push
jo
push
and
cmp
cmps
imul
int3
outs
retf
std
dec
neg
or
scas
pusha
repnz
push
fs
jecxz
mov
test
adc
aaa
inc
jo
mov
cmc
jo
push
mov
out
add
jo
test
fcom
es
mov
and
aaa
push
and
and
inc
inc
add
add
adc
cld
jnp
push
add
imul
dec
lock
push
mov
cmps
sbb
jns
sub
xchg
pop
call
jns
jmp
ja
inc
push
mov
inc
mov
and
cmp
cmp
lea
movs
lahf
sbb
pop
jg
add
push
shl
dec
out
pop
inc
jecxz
jb
adc
xchg
cmp
frstor
fst
adc
xchg
lar
jmp
sar
ds
test
or
in
jmp
outs
lods
and
or
pop
(bad)
out
cmp
pusha
mov
adc
loope
push
mov
or
jge
push
inc
inc
sub
fld
retf
and
inc
call
mov
fld
femms
loopne
in
sbb
data16
cmps
cmovno
icebp
sbb
mov
rol
inc
test
cmp
in
jbe
in
ss
sub
in
cmp
int
out
pop
mov
xor
daa
mov
rol
not
or
inc
loopne
cmp
pushf
hlt
or
adc
pop
je
mov
dec
les
lea
imul
(bad)
xor
xor
clc
fldcw
outs
add
and
jg
inc
(bad)
enter
push
add
and
cld
cmp
fnstenv
xchg
xchg
ror
in
mov
loopne
pusha
pop
rcr
xchg
in
push
fsub
or
(bad)
fldcw
fmul
mov
neg
aam
cmps
cwde
nop
arpl
aam
mov
cmp
rcl
call
add
enter
sub
cdq
fidiv
mov
or
push
(bad)
in
test
cmp
push
dec
je
jmp
sbb
shr
pop
fs
xor
test
add
and
mov
in
test
inc
add
out
es
dec
sti
cmp
mov
cmp
test
hlt
adc
sbb
out
dec
push
inc
outs
call
mov
in
aaa
mov
lds
mov
jb
mov
and
shr
cmp
cmp
je
mov
adc
cwde
popa
movs
cwde
nop
cmp
and
movs
mov
aad
mov
xor
pushf
cwde
mov
xchg
stos
push
lock
xchg
jno
jmp
adc
jmp
imul
sbb
sub
dec
ret
pusha
mov
movs
leave
and
nop
lahf
icebp
mov
dec
outs
invd
xor
add
icebp
mov
mov
out
jmp
cmp
scas
and
stos
push
mov
sbb
sub
shl
in
shl
cmp
(bad)
xor
test
cmp
lock
enter
repnz
mov
inc
call
add
or
fs
movs
loope
bnd
and
or
loopne
adc
loope
ret
dec
nop
(bad)
dec
push
push
push
(bad)
clc
jns
xor
push
stos
repz
out
in
pop
hlt
sub
imul
cmc
js
push
dec
iret
jnp
xchg
cmc
daa
rcr
clc
adc
jl
xor
push
xor
out
xchg
pushf
or
ss
dec
movs
es
stos
push
xor
mov
push
inc
cwde
mov
cwde
push
inc
push
lods
es
sysexit
mov
push
in
jo
cmp
in
in
or
and
loopne
loopne
nop
(bad)
jnp
fmul
mov
fdiv
fdiv
inc
pusha
rol
adc
or
xchg
lock
imul
inc
loope
add
enter
cmp
les
add
aaa
shl
jns
mov
pop
and
repnz
jge
movs
ret
loop
inc
repz
mov
pop
adc
sahf
lock
ss
xlat
test
aaa
ins
in
inc
aaa
mov
es
fnstsw
and
mov
mov
mov
(bad)
test
lods
cmp
aaa
pusha
pusha
test
sbb
adc
test
movs
nop
or
es
movs
aad
mov
popf
jno
cmp
ins
add
jno
cmp
es
out
cwde
cwde
jno
aaa
adc
call
js
jecxz
nop
popf
nop
pop
mov
inc
mov
dec
mov
add
dec
cmp
cld
mov
es
repnz
mov
add
nop
ss
int3
add
mov
jle
mov
test
movs
xchg
push
(bad)
mov
loope
bnd
jb
xor
dec
call
pop
jmp
mov
ja
test
cmp
inc
mov
es
outs
and
or
adc
xlat
mov
jbe
fstp
fwait
push
xor
or
test
in
fistp
push
push
in
inc
or
sub
adc
or
dec
add
add
mov
repnz
cmp
jb
fcomp
iret
(bad)
mov
push
push
add
mov
iret
inc
ins
jo
jns
dec
outs
out
test
pop
(bad)
and
popa
sbb
pop
retf
sar
push
outs
repnz
ins
add
inc
outs
jne
xchg
cmps
inc
jb
outs
arpl
ss
dec
pusha
inc
sbb
or
mov
(bad)
xor
add
popa
sub
fwait
aas
xor
and
push
outs
imul
inc
arpl
ss
xor
push
xor
jns
xor
mov
adc
xor
add
aaa
ss
push
clc
adc
inc
pusha
fcom
std
dec
cld
test
and
inc
call
push
test
xlat
stos
popf
and
inc
xchg
pop
inc
sti
pusha
mov
xor
mov
inc
sahf
out
push
jo
jno
or
sbb
(bad)
jl
cld
stc
aam
ret
movs
cmps
std
pop
jne
mov
dec
push
cmp
dec
add
popa
or
cmc
add
js
in
mov
inc
jmp
in
enter
or
mov
sbb
sub
dec
xor
adc
idiv
outs
jns
and
push
push
gs
push
dec
add
iret
add
sub
sahf
(bad)
ret
wrmsr
xor
push
or
hlt
fadd
mov
mov
or
loop
dec
xor
std
ins
dec
adc
push
outs
fmul
pop
mov
sbb
cwde
cmp
not
jne
out
cmp
in
jb
dec
xchg
out
inc
mov
push
add
pop
and
sqrtps
mov
lds
stos
out
push
add
out
cld
sbb
and
jge
cmp
je
outs
(bad)
not
push
xchg
clc
xchg
data16
pop
pop
sahf
jecxz
(bad)
mov
(bad)
pop
add
inc
test
adc
xchg
fdivrp
loopne
ret
mov
add
mov
inc
mov
jae
sub
push
or
adc
ret
xor
jle
outs
mov
cs
cmp
std
mov
dec
xchg
test
mov
loop
shl
adc
ror
(bad)
in
push
fld
repnz
mov
sub
sbb
xchg
jle
and
push
add
(bad)
out
(bad)
mov
ret
add
dec
cdq
add
mov
and
into
shl
push
mov
call
pop
lods
add
xor
std
jp
or
push
dec
jb
mov
jbe
call
jle
repnz
sbb
mov
and
mov
cmp
setg
inc
mov
add
arpl
call
leave
loope
or
in
add
add
shl
dec
adc
add
push
add
inc
jo
and
icebp
add
or
jl
inc
xor
inc
mov
mov
xor
xchg
lock
sbb
xchg
aam
inc
scas
dec
mov
or
loopne
cmps
sbb
or
dec
jne
push
add
or
xor
adc
(bad)
(bad)
int
sar
out
inc
loop
aaa
xchg
pop
mov
and
dec
pop
fmul
sub
lea
cld
inc
add
adc
sar
cld
daa
aad
and
push
mov
and
daa
inc
add
sub
out
mov
clc
in
test
test
mov
ficom
adc
adc
mov
retf
and
test
jo
inc
mov
sbb
mov
jmp
sub
sub
xchg
cmp
arpl
inc
mov
inc
scas
stos
lods
inc
inc
inc
inc
lods
scas
scas
nop
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
cwde
inc
inc
inc
inc
cdq
call
popf
sahf
lahf
add
inc
add
xchg
xchg
sbb
pop
add
sub
inc
bound
mov
inc
cli
outs
add
lea
xor
inc
dec
xchg
add
adc
pop
mov
(bad)
jg
popa
mov
dec
adc
sbb
test
jne
(bad)
sub
xor
push
cs
dec
xor
cmp
jle
push
pusha
sbb
aaa
adc
cmp
fbld
repz
cmp
xor
rcr
sub
aaa
(bad)
lods
sub
lods
add
shl
aam
or
mov
mov
or
aam
sub
fbld
cwde
loope
cld
sbb
mov
dec
jl
or
add
mov
sbb
sbb
sbb
retf
je
mov
and
sbb
lock
les
mov
(bad)
jmp
jle
in
je
jl
in
sbb
loop
mov
ins
sbb
test
out
jne
jmp
mov
mov
mov
cmp
je
(bad)
loopne
pop
push
lar
dec
clc
adc
ja
stos
adc
sbb
dec
loopne
(bad)
in
sti
std
int3
ret
add
add
adc
add
ficom
(bad)
hlt
mov
int
sbb
ds
aaa
mov
in
fisttp
out
push
adc
mov
mov
iret
repz
(bad)
ja
jb
add
add
call
(bad)
out
retf
xchg
das
lock
mov
or
xor
sahf
push
lea
jle
jb
inc
cmp
pop
dec
mov
mov
call
jmp
inc
mov
lods
cmp
call
stos
mov
push
aas
dec
dec
and
fcmovnb
mov
and
or
inc
retf
add
nop
cmc
nop
sub
jge
daa
aaa
clc
inc
jl
sbb
or
lahf
mov
sbb
mov
test
and
outs
mov
push
mov
pop
mov
mov
mov
adc
or
adc
int
in
sub
ins
out
rcl
adc
cwde
or
add
sbb
imul
xor
movs
btr
test
bound
jg
adc
push
cmp
jecxz
mov
dec
cmp
dec
push
out
or
aas
xchg
add
mov
lods
add
mov
cld
xchg
cmp
int3
call
lods
pop
or
jns
dec
rol
enter
push
ja
rcl
gs
mov
sbb
jnp
mov
xlat
inc
mov
ja
mov
(bad)
jns
cmp
fld
fstp
fdivrp
scas
dec
jp
in
fucomp
add
inc
push
imul
push
or
cmp
ret
pop
fmul
pop
fcom
pop
retf
add
mov
mov
jge
cwde
inc
adc
stos
mov
adc
or
mov
int
jmp
js
push
fstp
fwait
push
out
sub
fisttp
inc
push
fistp
outs
pop
daa
dec
sub
and
sbb
iret
jnp
push
push
gs
and
shl
jmp
sbb
add
adc
push
or
int
inc
leave
sub
sbb
inc
fdivr
stc
mov
jp
pusha
fild
fistp
jno
push
jge
add
call
mov
jo
add
adc
inc
add
mov
sbb
out
ins
mov
stc
add
jae
jne
pop
fild
movs
adc
mov
add
cwde
rcr
mov
icebp
jbe
daa
lahf
in
mov
mov
scas
imul
cmp
sbb
nop
aaa
jne
or
inc
fwait
or
push
call
fmul
(bad)
rcr
addr16
cmp
xchg
cmps
inc
or
mov
xchg
aas
push
push
inc
adc
inc
mov
iret
scas
jns
pop
pop
cs
aas
or
cli
pop
in
nop
add
push
inc
imul
jns
mov
xor
jmp
or
data16
outs
push
jo
stc
sar
nop
adc
dec
outs
inc
ins
lods
sub
sub
push
dec
outs
ins
jns
inc
ins
popa
aam
cdq
mov
inc
mov
outs
iret
repz
cld
pop
ss
push
fdivr
or
jb
or
cmps
out
mov
cmps
or
dec
imul
out
ja
test
or
rcr
add
push
dec
jg
xor
jp
gs
repnz
sbb
add
popa
nop
mov
add
add
mov
dec
dec
test
or
dec
gs
xor
movs
int3
or
cmps
outs
fstp
jo
mov
fcom
or
add
inc
jbe
push
dec
or
push
sub
(bad)
(bad)
push
rol
dec
cmp
ds
mov
rcr
mov
test
test
adc
popf
add
aas
dec
dec
or
inc
sub
xchg
dec
ds
jae
cdq
sub
fs
sti
sub
mov
scas
pop
mov
ds
or
pop
and
scas
adc
ds
jo
add
inc
pop
das
push
and
in
ins
scas
ins
sti
pushf
inc
or
mov
scas
jmp
push
inc
je
jmp
nop
and
adc
cmp
and
pop
in
arpl
push
mov
jl
jl
sbb
into
dec
imul
aam
aam
jb
pop
inc
imul
mov
cmp
fwait
imul
jno
jb
mov
ins
adc
jo
push
sub
inc
scas
mov
mov
pop
ins
mov
mov
sets
in
rol
adc
out
sbb
(bad)
mov
mov
call
xor
xor
xchg
int
repz
adc
push
add
or
int
(bad)
and
cmp
rcr
push
mov
pusha
scas
adc
pusha
or
cmp
nop
add
pop
push
mov
pop
pop
and
into
cmps
add
cmp
mov
push
push
fs
add
mov
inc
push
add
lods
mov
test
loope
xor
rol
idiv
not
shl
in
sub
int3
add
adc
adc
sbb
scas
sub
movs
sbb
push
jb
xchg
ja
push
loopne
(bad)
adc
fsub
push
inc
(bad)
cwde
dec
cmps
adc
and
xchg
cs
movs
fucom
pop
xor
and
adc
leave
(bad)
jg
aas
jae
fs
jo
lds
xor
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
sbb
sti
into
nop
outs
pushf
nop
add
(bad)
xor
and
jo
(bad)
adc
outs
dec
xlat
add
inc
lahf
add
ds
int3
(bad)
fs
add
pushf
dec
imul
shr
in
dec
pop
jbe
push
out
fisub
popf
rcl
inc
out
data16
sbb
inc
and
loope
mov
push
movs
cmova
outs
cmp
xor
xchg
scas
pop
sbb
repnz
or
imul
inc
pop
aaa
xor
push
mov
ret
xor
adc
ror
dec
push
mov
lahf
jbe
push
push
pusha
xor
pop
jo
in
lea
or
dec
mov
lock
pop
in
jb
dec
pop
in
dec
sub
add
dec
dec
repz
jle
dec
fcomp
lods
push
add
imul
jne
jmp
psubusb
out
hlt
pop
xchg
dec
rol
push
cs
cwde
push
pop
cmp
push
pop
push
and
dec
sbb
cmp
cmp
ds
mov
js
push
mov
sub
fisttp
push
dec
mov
push
sbb
xchg
xchg
mov
inc
shr
cld
xor
das
dec
pop
inc
in
sub
addr16
xlat
push
sbb
mov
adc
xchg
inc
pop
rcr
mov
fwait
div
rcl
call
xlat
sahf
mov
pop
inc
mov
inc
sti
mov
xlat
repz
sub
test
inc
out
in
ret
cld
pop
test
cmp
or
in
push
in
adc
in
push
sbb
inc
push
in
and
dec
imul
in
in
repnz
imul
push
xlat
in
pop
addr16
repz
xchg
lahf
lods
or
test
mov
jnp
sub
adc
dec
push
and
and
imul
call
test
pushf
nop
sahf
pushf
push
cmc
jns
test
sar
push
inc
(bad)
adc
nop
inc
sbb
rcl
aas
or
call
mov
lea
mov
sub
xchg
dec
scas
pop
pop
mov
pop
pop
push
ins
xchg
add
sbb
xor
jl
push
(bad)
ss
sbb
les
cmps
fldcw
int3
test
pushf
xchg
xor
clc
push
add
jo
sbb
(bad)
sbb
xchg
nop
sbb
pop
inc
setl
jo
pusha
and
and
cmps
xchg
inc
sar
inc
mov
mov
stos
mov
rol
repnz
mov
mov
mov
mov
jmp
adc
out
loopne
nop
aam
int3
in
or
push
add
push
push
in
sbb
cld
(bad)
mov
loop
in
pop
inc
(bad)
int
dec
add
xor
add
pop
sar
inc
push
sub
mov
mov
ja
cmps
and
sbb
add
push
jl
xor
rcl
lods
fistp
xchg
mov
jbe
ror
xchg
jl
out
imul
lock
pop
cwde
sbb
mov
cld
cld
(bad)
sti
inc
cli
(bad)
stc
(bad)
clc
push
push
push
push
push
out
outs
(bad)
push
loop
push
jmp
push
jo
out
sahf
mov
neg
repz
push
or
push
je
pusha
xor
push
or
mov
lods
and
mov
push
xchg
xor
inc
(bad)
jmp
cmp
cmp
or
pop
add
mov
aad
cmp
pop
and
sbb
mov
lock
idiv
je
or
mov
test
pop
repnz
imul
sbb
loop
mov
pop
push
or
push
mov
leave
inc
cwde
or
sahf
neg
fwait
push
push
add
xor
and
jns
add
out
(bad)
cmp
xor
inc
push
aaa
pop
sub
ins
jnp
pop
and
inc
and
es
push
dec
fs
add
je
fmul
jb
aas
xchg
shl
dec
pushf
xor
rcl
add
(bad)
jbe
in
push
push
and
mov
popf
movs
jle
inc
cmp
push
rcr
jb
stc
xchg
and
and
and
jae
fisubr
addr16
jb
jne
(bad)
xchg
scas
xchg
inc
call
ins
push
cmps
mov
and
ret
inc
sbb
pop
pusha
add
popf
ret
xor
push
mov
dec
cmp
ret
ja
and
bound
xchg
and
or
dec
mov
push
retf
mov
xor
inc
xchg
pop
or
sbb
sahf
rol
adc
out
outs
retf
je
sub
sub
(bad)
xchg
aam
and
xchg
jb
fwait
sti
xor
sbb
outs
jmp
dec
rol
neg
and
cmp
jge
xor
fucomip
stc
mov
add
ret
in
jb
push
pop
adc
add
je
and
cmp
cmp
inc
(bad)
stc
pop
jl
mov
ret
std
push
nop
mov
outs
loopne
add
clc
or
dec
fld
popf
sub
mov
aas
dec
inc
add
sahf
gs
sar
js
mov
xchg
outs
movs
cmp
out
push
lods
jmp
or
push
and
pop
sbb
ret
call
mov
js
mov
loop
mov
pop
or
(bad)
and
sub
sar
ret
adc
pop
add
rol
ja
movs
xchg
cwde
pushf
jecxz
and
sub
test
pop
std
add
or
push
adc
and
dec
add
or
adc
cwde
pop
add
push
cs
sbb
and
and
push
gs
setge
cmp
rol
fadd
nop
loope
js
fild
and
sbb
adc
and
popa
sub
popf
fistp
inc
push
movs
pusha
add
add
test
mov
lds
sub
or
dec
imul
je
jo
lods
add
adc
imul
and
sbb
imul
loop
icebp
xchg
mov
inc
stos
push
add
fild
mov
cmp
clc
push
(bad)
call
mov
ds
loop
scas
jl
lock
adc
fcmovbe
push
or
(bad)
cmp
inc
adc
xor
iret
push
lea
dec
sub
or
in
jl
inc
xor
out
imul
(bad)
mov
mov
xor
sub
imul
inc
sbb
ror
rcr
nop
jp
mov
mov
dec
cmp
dec
popf
movs
fist
xchg
dec
in
push
dec
mov
ins
popf
dec
jbe
xchg
clc
nop
jp
je
push
pop
inc
cmp
hlt
es
in
cmp
ror
aam
mov
les
mov
adc
mov
jl
js
mov
push
mov
jne
push
sar
sbb
add
and
xchg
les
pushf
inc
pop
shr
jl
inc
push
call
or
push
in
xor
es
in
cmp
inc
pop
adc
imul
icebp
cmp
push
push
call
jl
jecxz
(bad)
(bad)
dec
call
shl
cmps
cmp
(bad)
clc
or
adc
dec
add
pop
loopne
and
adc
mov
and
jge
dec
dec
enter
mov
pop
shr
jge
and
int
shr
mov
xor
xor
sar
les
add
pop
dec
xchg
mov
test
sub
hlt
xchg
sub
or
cli
enter
fld1
xchg
add
pop
cmp
mov
shl
mov
int3
test
adc
jbe
jbe
xor
out
cs
pop
pusha
enter
rol
xchg
sub
inc
add
(bad)
jbe
jae
mov
sti
pop
rcl
in
cs
inc
lahf
xchg
sub
scas
imul
test
jo
cmp
aaa
sbb
inc
sub
push
rcl
dec
pop
push
mov
and
or
push
dec
mov
inc
enter
(bad)
daa
add
popa
sti
shr
and
test
adc
loopne
js
ja
sub
mov
enter
sbb
adc
ret
xor
mov
inc
sub
inc
push
xor
stc
add
sbb
sbb
nop
cli
out
lock
jmp
imul
(bad)
push
je
mov
ins
cmp
adc
shl
push
lahf
(bad)
push
xor
sbb
stc
sub
rol
les
jns
sbb
inc
cs
cs
add
in
nop
xchg
mov
or
dec
fwait
stos
and
cld
mov
pop
loope
repnz
push
leave
add
inc
das
cmp
les
ffreep
add
pop
sub
jae
addr16
and
dec
add
or
or
adc
bound
ja
test
pop
dec
hlt
pop
in
mov
outs
push
popa
push
(bad)
fs
cmp
leave
push
xor
or
mov
js
jne
pop
pusha
stos
or
mov
cmp
(bad)
outs
adc
sti
js
mov
jbe
or
adc
cmp
fidiv
lea
add
sbb
cmps
pop
dec
stos
mov
or
adc
sub
mov
in
inc
scas
mov
fcmovne
sbb
loopne
add
or
sbb
mov
or
sub
rcl
test
mov
(bad)
pop
pusha
fdiv
mov
lods
and
mov
fisubr
or
mov
and
or
popa
dec
adc
jl
pop
mov
pop
loope
loop
mov
movs
lods
xor
and
out
test
add
and
push
jg
dec
or
popf
es
lods
push
add
push
lods
dec
inc
xchg
mov
xor
loopne
dec
mov
enter
xor
sbb
mov
(bad)
jmp
xchg
cmps
push
ins
sar
sub
nop
push
int3
lea
movs
adc
test
cmp
sahf
mov
push
aas
xlat
dec
subps
mov
push
(bad)
xchg
jmp
(bad)
call
call
mov
xor
movs
adc
int
and
mov
push
or
lods
jo
jmp
pop
(bad)
mov
xchg
cld
jl
mov
rcr
outs
xor
clc
test
xor
cmp
daa
sbb
jo
je
mov
mov
or
(bad)
pop
mov
push
and
pop
fldcw
nop
xor
push
les
sub
addr16
pop
jns
jge
dec
fst
ret
jge
push
sbb
and
(bad)
adc
inc
or
neg
sbb
xchg
push
call
jo
and
inc
cdq
or
push
pop
mov
mov
shr
push
pop
das
js
aas
ins
sbb
cmp
push
(bad)
or
jge
add
adc
inc
push
or
mov
paddq
fisub
xchg
jae
loop
inc
adc
jmp
int3
or
leave
(bad)
fisub
add
xchg
or
mov
adc
das
loope
jmp
fisubr
cld
inc
into
mov
ror
dec
sbb
sbb
and
std
outs
shl
loop
adc
or
fscale
sbb
adc
push
inc
or
ficom
in
clc
push
or
aaa
add
and
jmp
jbe
jae
xchg
xor
xchg
mov
into
xchg
ret
movs
mov
mov
cmp
mov
inc
outs
inc
pop
sub
ret
(bad)
pop
or
push
push
sbb
add
daa
add
push
or
push
ins
inc
sbb
retf
(bad)
scas
jmp
and
push
mov
jmp
scas
add
mov
dec
outs
cmp
scas
sub
add
dec
or
sti
test
call
sbb
leave
leave
mov
call
inc
lds
dec
jae
push
jecxz
loopne
push
or
pusha
mov
pop
jg
adc
xor
stos
cli
or
mov
test
mov
popa
fmulp
shl
call
mov
daa
pop
mov
popf
xchg
sbb
ror
(bad)
shr
aam
and
add
aad
push
mov
mov
test
push
jns
push
push
fild
or
test
inc
loopne
xor
xchg
push
bound
aaa
and
dec
mov
sub
jg
dec
hlt
dec
nop
inc
ins
loop
inc
repnz
sbb
mov
dec
xchg
push
mov
lods
dec
push
inc
cs
call
or
adc
mov
out
xchg
out
jbe
ja
push
inc
sub
in
leave
mov
cs
mov
and
or
dec
jl
js
hlt
or
xchg
inc
jne
sub
adc
adc
push
rol
or
cmp
push
pop
outs
and
xor
inc
movs
pop
das
sub
xor
add
lds
pop
test
nop
sub
sub
inc
stos
or
push
enter
mov
xor
push
fcomp
sub
mov
cmp
dec
and
sar
mov
shl
pcmpgtd
sbb
call
out
je
and
push
jae
xchg
pop
mov
mov
add
dec
rcr
sti
add
push
push
push
imul
aad
add
and
xor
sub
(bad)
cmp
jae
dec
or
jo
leave
je
stos
adc
btr
push
add
rol
(bad)
(bad)
mov
in
push
inc
adc
mov
jbe
ficomp
adc
add
add
int3
ss
out
add
dec
xor
cmp
jbe
cli
pop
ja
and
bt
sbb
aad
pop
ja
mov
call
adc
push
inc
cmp
jne
inc
dec
jne
les
bound
push
sub
add
cmp
xor
ret
imul
imul
xchg
mov
cs
sbb
add
movs
adc
inc
inc
in
mov
jae
test
pop
mov
mov
push
mov
add
ins
xor
push
cmps
outs
imul
mov
not
mov
enter
or
and
(bad)
mov
mov
imul
and
sbb
mov
(bad)
adc
fild
inc
push
add
push
js
ror
gs
jne
adc
xchg
aaa
pop
js
adc
nop
pop
add
xor
push
xlat
fadd
add
ins
shr
lods
mov
aas
and
push
jp
pop
add
add
jne
aas
aas
or
mov
movs
jg
rcl
outs
jbe
cmp
sbb
pop
test
aam
push
inc
fistp
xchg
mov
jle
push
dec
and
repnz
push
cmp
or
xor
sti
push
rcr
jnp
add
pop
jns
cmps
add
ins
out
cmp
add
xor
rcr
sahf
int
dec
mov
test
lahf
cmp
retf
daa
or
dec
and
dec
and
jg
hlt
addr16
or
inc
iret
xor
dec
out
cwde
pop
clc
icebp
lock
pop
mov
cmp
push
jnp
cmp
adc
sbb
enter
add
pop
xor
(bad)
fst
in
mov
mov
pop
push
clc
inc
test
jno
shl
adc
imul
lock
inc
mov
mov
imul
inc
add
pop
pop
push
sub
(bad)
pop
js
dec
push
rol
inc
xchg
push
jmp
mov
mov
shl
xor
or
aaa
rcl
sbb
adc
daa
(bad)
dec
clc
rcr
jp
fiadd
inc
repz
adc
jecxz
xchg
dec
inc
mov
sub
xor
add
jle
loop
lea
cmp
lock
push
mov
faddp
jnp
retf
imul
xor
push
dec
shl
jae
push
cmp
or
and
mov
xchg
jno
xor
cmp
lock
xlat
dec
cmp
push
in
sbb
jge
xor
inc
ror
int
or
jl
inc
in
mov
inc
out
out
xor
mov
or
cmc
mov
scas
push
iret
lds
mov
sbb
xchg
inc
cmps
xor
ror
lock
ss
in
mov
cmp
cmps
fwait
cld
adc
enter
scas
fisub
sub
jmp
and
and
pop
and
inc
std
lock
movs
and
fsubr
inc
dec
bound
test
pop
xor
jae
mov
pop
inc
stos
sub
push
nop
xchg
mov
loopne
movs
jo
popf
outs
inc
ret
adc
pop
or
inc
mov
jne
xor
and
add
lea
mov
popa
push
and
call
push
addr16
retf
push
mov
dec
jb
movs
in
fwait
pop
call
stos
call
sbb
sbb
and
in
mov
enter
jbe
loopne
add
int3
push
call
cld
or
xor
sub
clc
hlt
xchg
ins
aad
call
adc
or
and
fcom
adc
sar
or
pop
add
adc
and
xor
mov
push
mov
and
mov
adc
stos
cmp
or
fcom
stos
push
dec
scas
and
je
out
into
lock
dec
adc
sub
nop
cmp
test
call
inc
xchg
cmp
mov
cmp
scas
mov
cdq
pop
sar
adc
nop
ds
out
cmp
mov
cmp
or
pop
pop
test
mov
dec
push
or
xor
outs
lock
mov
retf
sbb
adc
cwde
inc
add
out
test
inc
pop
jmp
ror
push
clc
clc
add
add
inc
inc
and
nop
cmps
push
jmp
sub
lea
mov
push
xchg
or
out
jp
cmp
sub
sub
inc
jmp
cmp
icebp
add
imul
cmp
dec
push
add
and
pop
(bad)
jmp
mov
loope
adc
dec
sahf
xchg
fbld
mov
movs
cmp
jmp
push
repnz
arpl
xchg
mov
clc
lods
pushf
and
pop
push
jo
loope
mov
mov
faddp
mov
mov
dec
hlt
xchg
xor
das
push
inc
xor
mov
cmp
add
lea
push
mov
and
enter
dec
xchg
test
test
ret
push
shl
lea
addr16
dec
adc
repnz
out
xor
dec
shl
or
adc
sbb
mov
std
fmul
or
mov
jmp
fmul
ins
mov
lods
adc
or
je
push
pusha
mov
mov
sub
mov
imul
cmp
jne
or
sub
adc
jne
int
dec
fdivr
dec
leave
fisttp
dec
adc
mov
jl
inc
fsubr
mov
xchg
lea
push
cwde
in
rol
loopne
inc
(bad)
fist
dec
(bad)
or
test
call
cmp
pop
mov
cmp
jne
test
or
or
mov
(bad)
jmp
and
movaps
add
inc
in
arpl
push
fadd
adc
push
pop
cmp
push
adc
or
inc
adc
push
adc
cmp
cdq
or
pop
into
adc
mov
sbb
sbb
adc
inc
add
les
push
leave
inc
push
std
leave
ror
addr16
mov
mov
pop
pop
data16
sub
call
and
rcl
sbb
sub
sbb
ins
and
pop
and
dec
adc
inc
sub
dec
ret
push
add
rol
adc
out
inc
ds
test
fdivr
les
add
push
movs
sbb
rol
push
push
mov
and
test
or
mov
movs
mov
sub
mov
cld
lock
dec
ror
test
mov
cs
arpl
add
adc
jno
data16
cdq
outs
scas
pusha
mov
cmp
aas
mov
pusha
outs
or
(bad)
jmp
mov
ja
gs
(bad)
aam
jge
lea
add
sbb
add
lock
or
mov
aam
jbe
jge
ror
pusha
fnstenv
mov
out
add
and
(bad)
inc
cmps
ror
dec
ret
mov
fimul
add
repnz
(bad)
push
sar
mov
cmp
or
push
sbb
mov
sbb
xor
cmp
loop
test
or
das
int
je
pushf
rdtsc
xchg
or
imul
adc
ror
jmp
or
or
nop
and
mov
push
faddp
aaa
mov
or
xchg
repz
ins
pop
xor
or
inc
dec
dec
jno
jl
xor
jne
xor
das
add
inc
hlt
shr
out
push
mov
or
and
nop
retf
jg
popf
mov
inc
jl
and
ins
sti
lock
mov
or
or
mov
nop
(bad)
ins
jge
sbb
jle
dec
fimul
inc
pushf
nop
pusha
hlt
jl
das
add
push
pusha
aad
inc
adc
out
sbb
mov
shl
or
(bad)
ins
cdq
nop
add
test
addr16
dec
sub
(bad)
pushf
shl
enter
mov
loopne
outs
inc
push
jge
or
jle
push
push
dec
out
add
arpl
jae
and
push
mov
xor
push
adc
cmp
add
pop
loop
xor
daa
iret
inc
fwait
pusha
loope
xlat
and
ins
bnd
mov
jno
dec
sub
fnstcw
push
pop
sub
popf
js
mov
shl
adc
jg
cld
push
movs
cmp
cmp
add
sbb
adc
jb
sbb
cld
adc
jle
mov
inc
fdivr
shl
cmps
sub
ss
pop
mov
mov
cmps
scas
cwde
movs
add
in
dec
xor
call
dec
pop
lea
cmp
xchg
inc
mov
mov
pop
or
cmp
into
jne
sbb
inc
call
(bad)
xor
mov
xor
and
mov
pop
lahf
test
jecxz
dec
add
pop
retf
mov
and
adc
outs
or
xor
pop
and
mov
fcom
xchg
aas
test
das
inc
adc
adc
femms
push
outs
bound
jbe
shl
or
int
sbb
movs
inc
sbb
adc
mov
xor
mov
or
outs
loop
inc
sti
add
add
jbe
or
mov
or
int3
or
add
call
adc
cmp
add
adc
adc
mov
add
in
in
jmp
and
mov
stc
inc
sub
(bad)
ss
sub
push
mov
adc
loopne
inc
(bad)
and
inc
mov
cmps
movs
sbb
push
and
push
or
pop
dec
adc
loopne
test
inc
dec
push
hlt
out
pop
clc
sbb
leave
xchg
icebp
dec
(bad)
mov
das
test
outs
data16
enter
push
and
shl
cmp
inc
add
dec
out
xor
pop
lods
inc
mov
in
sub
sub
jg
mov
dec
mov
push
and
pop
data16
jae
stos
push
test
movs
pop
mov
in
xor
pop
icebp
mov
rcl
and
add
mov
int
inc
cmps
jnp
shr
div
sbb
push
add
mov
pop
mov
add
aaa
add
mov
test
cmp
dec
enter
es
(bad)
add
mov
add
pop
sbb
pop
inc
fsub
ins
mov
pop
or
add
data16
jl
jp
dec
dec
or
aam
or
inc
or
sbb
pop
sub
ficom
cmp
mov
hlt
mov
enter
or
dec
cmps
add
je
dec
or
adc
add
lods
inc
and
sbb
outs
popa
test
dec
or
add
outs
out
dec
pop
aas
call
or
lock
ret
les
rcl
movs
mov
adc
cmp
sbb
mov
dec
or
pop
in
pop
inc
jmp
test
cmps
std
movs
cmp
jge
data16
add
cld
sbb
mov
cmp
call
ror
add
push
test
mov
pop
or
cmp
sti
je
push
pop
clc
inc
(bad)
jne
push
add
jecxz
mov
mov
in
xor
mov
addr16
ss
or
push
add
pop
and
js
cmp
cwde
or
push
inc
lds
or
xchg
pop
in
into
les
sar
mov
jnp
jle
or
add
inc
mov
xlat
test
call
outs
cmp
fbstp
xchg
sub
inc
inc
pushf
inc
and
sub
cld
mov
push
ins
lods
dec
dec
movs
scas
dec
sbb
nop
pop
or
enter
push
enter
pushf
jp
push
pop
fld
xchg
dec
loop
pop
and
mov
mov
ds
(bad)
clc
adc
lock
inc
bound
test
mov
xchg
pop
jg
dec
sbb
daa
mov
pusha
mov
push
je
in
movzx
fcmovu
mov
(bad)
mov
ja
jmp
dec
das
and
sbb
adc
mov
add
dec
sbb
aam
xor
pop
fcom
daa
bnd
pop
add
push
or
push
(bad)
dec
adc
push
push
jb
jo
imul
dec
je
das
pop
out
mov
dec
cmp
mov
push
ret
nop
push
inc
pusha
pop
test
lock
adc
or
dec
add
adc
imul
push
and
sbb
fidiv
lods
cs
mov
jmp
out
mov
lea
add
jecxz
cdq
inc
cmp
mov
inc
retf
jmp
sahf
inc
or
cmc
xor
and
add
mov
adc
popa
lahf
add
add
aaa
add
dec
push
push
mov
sbb
adc
cmps
mov
push
fimul
mov
jne
test
mov
lods
popa
pop
imul
idiv
pop
inc
in
(bad)
lods
outs
sbb
mov
jmp
mov
mov
and
xor
fs
adc
adc
clc
or
movs
sbb
pop
jbe
(bad)
sub
push
or
mul
sub
int3
lea
push
lahf
int
push
repnz
fs
or
inc
and
xchg
outs
mov
mov
les
mov
add
leave
clc
out
add
mov
jne
jmp
fs
xor
icebp
clc
jae
mov
ja
in
dec
aaa
cmp
in
pop
inc
popa
xor
imul
rcr
dec
inc
adc
ss
sbb
fs
mul
mov
push
xor
inc
push
or
jl
dec
nop
shr
sbb
das
dec
pop
pop
fwait
cli
clc
psubq
aad
or
nop
pop
inc
cmp
jl
push
add
int3
or
pusha
pusha
mov
push
pavgw
dec
aaa
and
adc
and
in
add
popa
call
cmp
inc
lea
call
and
cmp
sbb
inc
stc
jne
or
pop
bound
cmp
ret
shl
or
pop
add
cmp
mov
int3
push
adc
adc
or
mov
and
cmps
and
je
inc
pusha
leave
xchg
or
sub
add
xlat
sbb
in
daa
retf
dec
mov
xchg
jo
mov
mov
dec
ror
(bad)
iret
fisttp
inc
push
mov
sbb
pop
loopne
xchg
in
pop
inc
inc
and
add
aas
sub
or
sbb
push
es
dec
pop
or
dec
test
fnsave
cmp
adc
std
push
jle
adc
jae
ret
mov
xchg
push
jo
jg
leave
ret
adc
push
inc
adc
push
or
fidiv
icebp
in
popf
les
jb
mov
cmp
pusha
mov
adc
sub
cmc
out
ds
mov
cmp
adc
push
dec
inc
add
clc
mov
adc
sub
mov
hlt
mov
sbb
push
pop
sub
and
sti
xor
cmp
loopne
pop
js
pop
push
add
shl
mov
test
and
pop
dec
scas
push
pop
xor
or
int3
push
inc
retf
call
dec
pop
jecxz
add
cmps
dec
aam
adc
(bad)
mov
pop
push
imul
xor
and
call
mov
xor
mov
outs
add
mov
push
test
cs
jne
push
cmp
jne
add
stos
pop
enter
rcr
and
pop
rol
add
dec
les
bound
inc
dec
std
inc
mov
jl
arpl
push
mov
pushf
in
sbb
add
lea
fbld
mov
or
arpl
push
and
clc
mov
dec
mov
add
hlt
inc
pop
fs
lock
xor
leave
xor
or
and
xchg
popf
data16
leave
push
in
data16
adc
push
call
xor
add
dec
add
pop
mov
push
out
test
jne
jne
and
ja
addr16
mov
and
ret
call
mov
sbb
mov
xchg
mov
movsx
lahf
fild
push
push
xchg
pop
fbld
push
ficom
cmp
xor
aas
mov
nop
test
sub
push
sbb
je
popa
ja
cwde
and
sbb
mov
pop
dec
retf
dec
sbb
add
ds
rol
jle
push
movs
jmp
xchg
leave
cli
pop
mov
aam
pop
test
ja
retf
mov
je
lods
push
pop
dec
jbe
ja
mov
pop
cmp
cmp
push
push
sbb
jp
push
sub
mov
cmp
dec
mov
sar
cld
jno
sbb
pop
mov
jge
dec
sbb
ficomp
sbb
adc
sbb
and
shl
pop
add
(bad)
fld
adc
cdq
dec
jle
and
sbb
ret
enter
loope
adc
test
mov
xchg
xor
in
dec
xor
daa
or
lods
int3
mov
or
cmp
mov
and
jmp
gs
shl
mov
hlt
and
fwait
(bad)
mov
mov
pop
cmc
mov
and
mov
pop
pusha
test
outs
adc
and
and
cmp
adc
sbb
das
test
add
shl
fimul
mov
adc
lods
xchg
imul
push
pop
push
pop
sbb
push
cmps
icebp
dec
aam
lea
mov
push
inc
pop
add
cmp
cmp
test
int
(bad)
cwde
mov
or
fs
xor
mov
pop
sub
shl
sub
int3
ret
pop
jo
jg
xchg
add
xor
add
cmp
mov
rol
jecxz
dec
inc
cmp
pushf
pop
rcr
adc
enter
push
popf
xor
fild
sub
pusha
pusha
hlt
data16
repnz
int3
cmp
lods
jno
xor
shr
pop
xor
sub
push
sub
jl
in
xchg
jo
imul
cmps
ins
mov
xchg
in
dec
jno
mov
cdq
pusha
int3
pop
fnstsw
iret
push
pop
mov
dec
sbb
sub
mov
adc
push
loope
addr16
pop
dec
sub
retf
scas
pusha
sbb
cmp
cs
or
fnstsw
push
and
in
jns
pushf
push
lock
mov
adc
sbb
mov
sub
in
xor
inc
jbe
dec
aam
adc
adc
xchg
or
jne
in
adc
and
cmps
nop
ins
enter
mov
xor
daa
mov
pop
ficom
jp
sub
inc
sub
dec
sub
xchg
daa
fsub
ss
leave
outs
daa
lea
test
div
and
mov
les
mov
scas
jne
sbb
sbb
fmul
inc
or
lods
add
push
not
mov
sbb
add
das
pop
push
pop
ss
dec
call
call
shl
xchg
pop
push
mov
cld
mov
fadd
push
pop
pusha
imul
lidtd
rcr
pusha
in
addr16
adc
fwait
sbb
nop
retf
add
mov
jae
(bad)
not
pusha
sbb
push
xor
fisttp
adc
fbstp
or
sub
xor
sbb
mov
and
add
mov
jb
scas
and
or
movs
loop
popa
nop
lods
or
mov
mov
xor
dec
shr
imul
adc
add
rol
add
push
dec
xlat
and
xor
daa
xor
sub
mov
push
mov
jb
jo
xlat
popa
sti
sbb
or
cwde
jne
cmp
nop
pop
arpl
daa
mov
jl
iret
sub
xchg
cmps
pop
add
sti
aaa
dec
ficom
cmp
sti
mov
js
and
jge
popa
sub
xchg
jb
xor
pop
movs
stc
int
test
clc
cld
hlt
inc
sbb
rcl
mov
jbe
icebp
das
sbb
xor
dec
ret
aam
test
or
xchg
adc
ins
push
mov
ret
nop
xchg
mov
add
mov
jns
add
sbb
add
mov
adc
and
sahf
add
or
in
lods
add
jno
fist
jnp
shr
inc
lahf
adc
add
and
fstp
fstp
or
call
ja
idiv
mov
jb
jne
jg
sti
popa
sbb
add
clc
and
out
into
fsubr
inc
mov
push
xchg
adc
sbb
jo
jbe
mov
sub
inc
outs
data16
inc
das
sbb
sbb
sbb
sub
cmp
mov
sub
push
push
das
iret
repnz
and
or
call
ss
inc
adc
sbb
pop
repnz
mov
ins
test
sub
das
xlat
daa
cmp
sbb
inc
retw
nop
fwait
xchg
mov
jmp
lgs
aas
mov
mov
and
cmp
jne
mov
push
es
fld
push
mov
sbb
psrlw
enter
mov
pop
xchg
pop
lea
outs
push
mov
dec
add
pop
hlt
pop
inc
add
sbb
arpl
test
loopne
dec
or
movs
pop
call
and
mov
test
or
arpl
stos
cmp
pop
ja
xchg
aad
retf
mov
push
xchg
add
neg
sub
dec
xchg
push
call
rol
hlt
inc
xor
xor
clc
cmp
lea
into
fdiv
sti
idiv
cmp
jne
xor
or
pop
adc
xor
(bad)
inc
pop
jmp
push
cli
sahf
mov
xchg
std
push
outs
dec
js
int3
scas
pop
pop
cmp
jnp
push
shl
add
popa
enter
adc
ror
sub
sbb
xor
and
iret
push
push
xor
sbb
scas
mov
add
ret
lds
imul
fs
add
mov
ret
sbb
sar
push
push
(bad)
xor
jnp
icebp
push
sbb
in
ja
and
mov
(bad)
out
pop
mov
sbb
mov
pusha
add
leave
stos
cmps
mov
nop
push
(bad)
mov
mov
mov
dec
pop
repnz
jb
fmul
fld
in
push
pop
jns
arpl
inc
in
xor
sub
stc
rcr
js
lea
pop
pusha
sbb
mov
lods
or
mov
out
push
add
(bad)
js
xor
repz
mov
retf
jge
cmp
pop
and
jle
dec
clc
out
add
and
mov
ret
es
or
push
dec
sbb
loopne
fstp
sbb
cmc
call
imul
sub
clc
jnp
lock
lods
xor
mov
test
sub
neg
push
popf
test
jl
fdiv
cmp
adc
cmp
mov
je
idiv
push
test
movs
adc
mov
lea
push
imul
(bad)
jmp
push
imul
enterw
pop
mov
push
in
in
or
ret
cmp
mov
and
test
loopne
repnz
jno
fdivr
xchg
dec
lock
in
fcmovb
adc
sub
es
sbb
push
xchg
push
add
cmc
fs
xchg
in
push
sbb
ret
push
lods
popf
sbb
sbb
test
push
movs
cli
enter
pop
gs
adc
cmp
addr16
inc
pmuludq
loop
aaa
sub
pop
jnp
jnp
push
ffreep
pop
shl
push
aas
dec
cmp
sbb
push
jnp
and
or
mov
cmps
xor
ret
or
pop
and
jne
out
dec
ret
outs
mov
inc
jl
lea
inc
and
jg
ret
and
shl
add
fsubr
test
movs
lock
arpl
sub
lea
dec
or
sbb
sbb
test
out
or
xor
lods
cld
sub
or
js
push
sub
add
fcom
cmp
shl
sbb
gs
daa
jmp
sub
fbld
rcl
out
imul
cmp
sbb
adc
dec
xor
sbb
rol
je
cmps
jle
movs
cdq
cli
imul
and
je
cmp
dec
aaa
push
call
xor
xchg
jecxz
push
jge
lods
adc
or
mov
lds
xor
xor
das
xchg
daa
push
movs
into
(bad)
and
or
dec
cmp
xchg
and
pusha
xor
movs
enter
or
call
xor
fistp
sub
imul
loopne
jecxz
push
fcom
lock
sub
jb
inc
cld
mov
jmp
ins
daa
pop
pop
clc
nop
sub
push
sub
das
dec
jg
nop
cld
sbb
sub
mov
mov
push
or
push
sub
or
push
xor
pop
cmp
adc
sub
xchg
or
mov
ret
jmp
adc
movs
inc
mov
and
or
xchg
out
xchg
aad
cmp
push
dec
or
ret
mov
fwait
ror
mov
add
xor
ins
je
jne
test
fcom
(bad)
icebp
jge
cmp
and
adc
pop
adc
call
push
cld
fld
xchg
shl
les
cmp
xchg
test
test
jg
adc
adc
push
push
and
out
fcomi
iret
inc
jo
jae
add
pop
push
sbb
inc
push
inc
aaa
cwde
ds
shl
dec
cmp
xor
and
jl
arpl
and
movs
inc
mov
mov
sbb
fbld
mov
push
lods
lock
xchg
sub
add
push
jmp
ja
adc
cs
je
iret
pop
shl
shr
and
jbe
jno
scas
shl
xor
dec
fisubr
add
pusha
repz
mov
pop
inc
aad
adc
iret
test
test
out
neg
ja
inc
mov
push
out
push
add
popf
pushf
mov
xor
inc
iret
repz
arpl
nop
out
shl
sahf
lods
jmp
xor
nop
fimul
sbb
xchg
int3
and
add
popa
mov
nop
ret
(bad)
mov
pop
jb
pop
xchg
jmp
das
pop
lods
jmp
loopne
(bad)
mov
or
adc
les
sbb
or
stos
push
repnz
test
js
jns
das
sbb
movs
cld
xor
test
(bad)
inc
ja
hlt
mov
mov
push
push
je
call
mov
push
adc
mov
push
aam
xchg
ret
ret
jmp
ror
add
mov
cmp
movs
lock
adc
into
in
xchg
push
aad
jae
in
sub
jb
inc
(bad)
shr
mov
inc
push
and
add
pop
sub
call
daa
jge
mov
lock
push
sub
xor
scas
sbb
xchg
sbb
dec
pop
inc
pop
add
xlat
dec
push
pop
aam
dec
(bad)
clc
aaa
fist
inc
push
mov
mov
inc
inc
push
xor
push
inc
jmp
pusha
cmp
into
nop
sbb
fld
or
movs
pop
cmps
sbb
repnz
xor
or
push
add
and
dec
add
pop
sar
shr
sbb
imul
jle
fs
adc
pop
cmovno
sbb
or
ins
and
js
mov
pop
pop
(bad)
jns
add
popa
imul
mov
pop
aam
xor
sbb
sbb
add
mov
sub
bound
cld
or
xchg
sub
inc
or
pop
dec
jbe
cmp
hlt
mov
mov
fimul
call
pop
ret
xchg
cmp
lea
inc
outs
ss
xor
sbb
mov
dec
cmp
cmp
add
xor
mov
out
hlt
mov
clc
push
or
clc
stc
dec
test
sbb
call
shr
sar
inc
outs
mov
sub
aas
sbb
xor
dec
(bad)
xlat
add
inc
mov
inc
mov
popf
and
mov
add
mov
xor
repz
dec
cwde
mov
(bad)
push
(bad)
fdivr
sbb
push
jo
test
scas
hlt
loope
in
jne
je
movs
test
sbb
jnp
stc
jbe
(bad)
movsx
or
xchg
and
or
cld
popa
iret
es
in
dec
push
fs
and
pop
inc
push
clc
adc
push
clc
out
inc
xor
jmp
mov
(bad)
outs
xchg
ins
adc
fs
daa
pop
jl
push
pop
fst
jmp
push
mov
daa
aam
jb
pop
lea
test
jle
leave
push
test
rol
mov
push
pusha
inc
jle
xor
cmps
jns
mov
(bad)
dec
or
dec
call
int
jnp
sbb
sub
push
mov
cdq
nop
dec
add
add
mov
pop
jl
int3
sub
adc
inc
pusha
add
in
jne
(bad)
cmp
and
ret
mov
bswap
and
cmp
jg
push
add
adc
frstor
or
or
ds
jl
adc
and
jg
mov
push
add
mov
mov
retf
mov
push
jae
jecxz
mov
xor
je
cmps
add
mov
xchg
mov
call
push
fldcw
lods
add
aaa
or
ss
dec
xor
scas
push
sub
popa
and
cmp
push
mov
jl
xor
and
push
push
push
inc
push
mov
mov
or
xchg
adc
inc
cmp
inc
sub
in
xchg
sbb
sub
pusha
ficom
call
add
call
adc
je
sbb
daa
cld
dec
mov
inc
sbb
fstp
xchg
mov
jl
mov
xor
je
stos
mov
add
pop
push
cmp
xchg
int3
xchg
jg
inc
push
out
mov
mov
pop
mov
je
xchg
and
test
stc
mov
sbb
or
cmp
in
mov
mov
push
xor
mov
inc
pusha
xchg
outs
xor
add
cmps
cmp
or
ss
lahf
push
imul
adc
ins
mov
seto
clc
xor
adc
sub
inc
in
into
add
ror
stos
shl
daa
jno
enter
push
or
js
dec
cmp
je
ror
mov
fisttp
push
and
scas
movs
movs
adc
dec
retf
mov
sub
sub
pushf
ret
pop
push
dec
not
xor
in
aas
jo
call
inc
add
ss
fsubr
and
push
adc
(bad)
test
sbb
and
(bad)
arpl
sub
dec
sbb
mov
sbb
jp
sbb
dec
xchg
daa
sbb
mov
sbb
fcmovnb
scas
push
sbb
mov
adc
add
add
mov
mov
sub
jno
jmp
jl
or
cmc
adc
clc
sub
mov
jmp
mov
test
adc
jnp
(bad)
and
call
scas
xchg
dec
cdq
xchg
add
popf
xchg
in
adc
xor
lock
and
fild
clc
aam
add
mov
add
adc
inc
sbb
cld
xchg
mov
sbb
jmp
mov
(bad)
pop
adc
adc
or
mov
adc
scas
sbb
pop
and
shr
or
sub
ror
adc
xchg
inc
outs
js
adc
xchg
adc
push
add
cmp
retw
scas
mov
call
cmc
inc
aam
and
push
adc
jp
dec
xlat
adc
les
fcomp
ror
fisub
aad
and
lods
add
cld
push
push
int
or
fwait
push
setne
mov
add
cwde
push
fnstcw
sbb
or
in
and
je
outs
jo
xchg
pop
cmps
mov
mov
pop
add
push
ss
inc
inc
pop
inc
idiv
in
mov
dec
add
pop
pop
loopne
retf
pop
popa
ins
and
arpl
outs
loopne
shl
sti
call
call
daa
out
jle
call
dec
hlt
mov
movs
pop
dec
dec
inc
adc
outs
test
dec
mov
push
pop
pop
scas
movlps
mov
or
inc
call
pop
dec
sbb
lds
cmps
js
in
cmp
sub
xor
aad
mov
arpl
inc
dec
jne
ror
and
inc
dec
iret
ins
add
or
outs
cs
cmps
sar
stc
push
sub
mov
pop
add
jnp
jmp
sbb
sahf
sbb
fsub
test
push
pusha
push
sbb
adc
add
jecxz
adc
add
ja
sbb
popa
dec
xlat
leave
jno
sub
aas
les
push
jp
push
fstp
and
(bad)
jg
push
dec
cmp
out
mov
ins
sub
cmp
add
xchg
xlat
clc
cs
mov
mov
jmp
or
sbb
and
fwait
lock
sbb
loopne
jp
lods
sbb
and
sbb
rol
aas
add
pop
adc
add
sub
(bad)
push
adc
and
mov
jmp
pop
lock
pop
(bad)
push
pop
sbb
xor
ror
fiadd
jg
cmp
addr16
inc
and
or
xchg
and
sub
(bad)
jne
es
jne
pop
scas
pop
and
push
add
sub
mov
jle
pshufw
shr
dec
mov
and
sbb
adc
add
adc
out
das
and
out
call
jmp
and
lahf
mov
jmp
inc
mov
push
jle
mov
cmp
lock
int
pop
cmp
pop
jmp
push
or
cmps
mov
mov
fist
mov
or
and
add
adc
push
or
pop
clc
adc
sub
jmp
icebp
loope
dec
sar
sbb
push
pop
out
sub
push
call
inc
sub
cmps
jns
cmp
dec
inc
icebp
or
ja
call
push
sub
arpl
dec
ror
in
dec
rcr
aaa
dec
dec
push
or
cmp
ror
xchg
cdq
or
inc
je
dec
push
out
ret
or
dec
sbb
int3
xor
mov
pop
xor
mov
and
cmps
bound
test
ret
or
loop
or
test
cmp
test
xlat
es
mov
cld
cmp
jne
pop
adc
push
pusha
scas
frstor
wrmsr
push
(bad)
pop
bound
sbb
mov
mov
or
loopne
mov
push
mov
pop
mov
cwde
adc
inc
mov
pushf
(bad)
iret
add
push
cmp
(bad)
data16
fwait
inc
or
push
add
xor
(bad)
sahf
cli
inc
dec
adc
outs
int3
or
push
test
or
test
xor
xor
stc
add
add
inc
test
mov
imul
add
add
inc
retf
ss
xor
inc
test
mov
and
add
rcr
pop
popa
xlat
pop
(bad)
xchg
xchg
in
(bad)
mov
xchg
loope
push
cmp
jne
add
push
jo
jp
retf
(bad)
inc
xor
push
pop
mov
sub
add
add
jge
mov
pop
push
or
in
popa
rol
sahf
retf
xchg
pslld
or
add
adc
add
adc
mov
xor
sti
or
jne
dec
(bad)
jmp
jg
or
mov
adc
mov
outs
hlt
jle
mov
cld
(bad)
stos
pushf
add
jo
or
fwait
and
mov
aam
add
scas
mov
add
dec
rol
fcomp
pop
mov
dec
adc
adc
rol
inc
cld
daa
mov
loopne
inc
and
cld
mov
aad
and
(bad)
sub
(bad)
and
push
(bad)
div
ret
shl
push
loopne
aam
or
sbb
dec
shl
(bad)
inc
sbb
pushf
dec
xor
in
xor
in
in
(bad)
mov
adc
lds
test
adc
sbb
dec
(bad)
mov
push
or
xlat
adc
pop
add
sbb
ret
push
daa
aam
sub
sub
and
add
inc
push
mov
sub
or
sbb
je
dec
and
sub
pop
bound
leave
mov
mov
les
xchg
sbb
inc
sbb
test
xor
xor
fisttp
pop
das
int3
test
ret
dec
aad
loop
shl
add
call
xchg
pop
mov
dec
sub
push
inc
mov
aaa
mov
add
out
mov
jp
pop
dec
lock
in
xchg
add
mov
or
push
mov
(bad)
icebp
movs
inc
push
(bad)
sbb
inc
pop
or
add
fstp
inc
add
fsubrp
sub
pop
add
cmp
fisttp
loope
mov
pop
inc
push
or
jge
xchg
(bad)
stos
adc
shrd
mov
mov
not
mov
dec
pop
mov
dec
inc
imul
dec
inc
ins
stos
clc
and
jbe
pop
std
inc
ins
outs
pop
inc
pop
inc
cwde
push
arpl
cli
jnp
imul
mov
dec
inc
test
call
add
push
push
dec
icebp
push
mov
mov
jnp
pop
inc
sbb
gs
jl
push
dec
rsqrtps
sti
xor
imul
mov
loop
adc
cmp
and
xchg
int3
mov
pop
mov
pop
cld
in
jmp
inc
dec
mov
xlat
call
leave
and
xor
aaa
shl
popa
cdq
dec
retf
inc
add
inc
mov
rol
mov
cwde
sub
ret
les
and
xlat
sbb
sub
test
pop
pop
adc
daa
shl
and
(bad)
jmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
je
cmp
cmp
jbe
js
cmp
cmp
jp
jl
cmp
cmp
jle
pusha
popa
cmp
cmp
bound
cmp
cmp
addr16
cmp
cmp
ins
ins
cmp
cmp
outs
outs
push
push
cmp
cmp
push
push
push
push
cmp
cmp
push
push
pop
pop
cmp
cmp
pop
pop
pop
pop
cmp
cmp
pop
pop
inc
inc
cmp
cmp
inc
inc
inc
inc
cmp
cmp
inc
inc
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
xor
cmp
cmp
xor
xor
xchg
mov
in
push
lods
mov
(bad)
ins
outs
pop
pop
sbb
ins
(bad)
movs
and
stos
sub
mov
inc
(bad)
fcmovb
mov
arpl
mov
cmps
popa
and
sbb
push
inc
ins
in
xchg
or
stos
dec
fcomp
je
imul
scas
or
jo
xor
imul
data16
retf
test
cwde
xchg
or
sub
and
or
and
adc
jae
je
data16
je
ins
imul
data16
enter
je
add
push
pop
arpl
adc
adc
aas
or
outs
gs
outs
imul
arpl
cs
inc
adc
ins
or
jae
lahf
jae
xchg
cs
idiv
outs
int
sub
pop
jo
mov
mov
outs
sbb
push
inc
popa
jae
add
sbb
or
push
inc
jl
mov
dec
outs
jae
push
mov
xchg
iret
or
jo
add
inc
ins
int
push
pushw
push
push
dec
fstp
mov
outs
jo
je
push
inc
jns
sbb
or
dec
shl
nop
and
fistp
push
add
sbb
out
frstor
pop
xor
aas
sbb
retf
mov
loopne
or
adc
test
stc
dec
and
jb
fimul
dec
test
ds
in
push
add
dec
jl
mov
ret
imul
lahf
stc
(bad)
sahf
cli
arpl
cs
inc
imul
mov
jae
es
or
cmp
scas
sub
sub
sbb
add
mov
lock
jmp
mov
push
jg
pop
sub
cmp
xor
and
test
test
outs
aas
(bad)
fcom
pop
imul
and
push
xchg
push
pop
loop
mov
inc
imul
cmp
push
stos
push
stos
leave
mov
shl
test
mov
js
xlat
fs
and
retf
add
shl
adc
mov
adc
and
ret
add
pop
aas
je
fistp
and
inc
push
add
sub
ss
sar
inc
les
push
dec
gs
les
test
jns
fadd
aad
nop
out
push
add
gs
push
push
add
xor
mov
adc
cdq
adc
cmp
(bad)
stos
lahf
jl
jo
pop
xor
ret
idiv
mov
lahf
pop
sbb
cmp
pextrw
add
sbb
les
add
cmc
bound
add
add
fidiv
call
jl
repnz
adc
aas
movs
lods
bound
pop
add
push
inc
je
pop
jb
xor
lods
jmp
sbb
mov
int
push
push
cmp
(bad)
fwait
xchg
dec
add
add
add
sbb
and
(bad)
jmp
and
xchg
jp
and
pop
out
test
rcr
adc
cmp
jl
xchg
inc
popa
sbb
jne
pop
jae
pop
sbb
push
cmps
dec
lds
adc
into
imul
xchg
pop
pop
loopne
xor
push
int3
push
or
lods
adc
or
test
dec
lahf
mov
rcr
stos
cmp
xor
imul
paddusb
sti
arpl
cmp
xchg
ret
sbb
jmp
add
gs
(bad)
pop
scas
cs
loopne
push
pop
in
sar
retf
mov
add
inc
xchg
ret
(bad)
ds
lods
fisub
sbb
push
add
scas
pop
adc
cmp
sbb
sub
pop
adc
out
nop
pop
cld
in
push
sti
clc
mov
pop
nop
out
out
sahf
(bad)
cmp
vmread
push
add
mov
outs
cwde
inc
and
pop
adc
mov
scas
in
or
jbe
pop
and
lock
bound
fild
push
xchg
gs
ins
popa
jnp
pop
mov
clc
je
fwait
cmp
into
dec
mov
and
mov
mov
push
mov
pop
(bad)
in
repnz
dec
pusha
scas
pusha
test
jo
push
lock
mov
sti
cs
cld
cld
dec
hlt
push
loopne
inc
mov
outs
or
or
test
push
fsubr
clc
cmc
dec
mov
cmp
mov
or
push
movs
pop
push
pop
xchg
or
sbb
out
ret
mov
inc
mov
imul
jo
or
ret
mov
pusha
hlt
mov
xchg
mov
fsubr
xlat
or
inc
ins
cmovb
push
fadd
xlat
in
cmovb
into
mov
push
mov
pop
xchg
sahf
div
movs
int3
push
loopne
enter
ja
dec
pop
sbb
xor
cmp
mov
mov
mov
repnz
push
movhps
popa
outs
nop
add
call
mov
shl
add
jne
bound
aas
loopne
mov
movs
adc
loopne
cwde
push
popa
dec
pop
and
fwait
adc
not
(bad)
aaa
dec
test
mov
push
add
mov
or
repnz
add
mov
xlat
and
xlat
ret
je
mov
data16
jmp
or
fstp
jo
imul
and
push
jo
cmps
test
test
inc
movs
in
add
adc
lock
sub
push
dec
or
push
mov
dec
imul
and
mov
in
push
fcmovb
rol
ret
fs
in
shr
mov
loope
es
dec
lock
dec
js
sete
pop
ss
cmp
add
inc
mov
mov
out
dec
leave
and
mov
jecxz
adc
cli
jmp
add
adc
xchg
and
add
ss
mov
adc
aaa
and
or
je
test
xchg
enter
movs
push
sub
pop
leave
(bad)
(bad)
pusha
daa
jmp
xor
sbb
inc
push
jle
cdq
adc
aad
shr
xchg
xlat
sbb
sti
mov
adc
add
loopne
sub
ret
(bad)
mov
add
pop
mov
xchg
add
cld
mov
xor
lock
or
pop
jge
add
dec
or
mov
adc
fmul
movs
cwde
mov
pop
outs
pop
sahf
cmp
push
cmps
or
hlt
adc
or
shl
arpl
push
ins
dec
popa
jb
outs
outs
inc
inc
xchg
mov
pop
dec
ins
imul
jg
dec
popa
jbe
add
jb
ins
sbb
fsubr
push
gs
ins
pop
ss
cld
and
ins
jbe
jb
sar
cmps
xchg
gs
mov
dec
(bad)
pop
gs
ins
outs
ja
jne
or
add
das
inc
jne
push
jno
popa
stc
loopne
inc
mov
call
jmp
rcl
inc
jo
xchg
in
inc
dec
pushw
or
mov
push
push
add
xor
cld
xchg
cmc
xchg
cdq
jo
cmovae
fiadd
mov
pop
jo
push
pop
imul
or
adc
mov
addr16
das
inc
sbb
outs
inc
push
xchg
dec
or
inc
nop
fld
das
or
pop
pusha
sub
jg
gs
lods
sub
das
sub
xchg
push
sti
daa
pop
xchg
push
mov
jp
xlat
add
fcomp
aas
push
outs
enter
pop
or
shl
daa
lldt
loope
mov
and
fild
aaa
adc
in
sbb
ins
adc
pusha
enter
outs
inc
push
cmp
jne
pop
xchg
xchg
daa
cmovae
fwait
or
or
lahf
dec
jb
sbb
aas
push
arpl
sub
add
inc
inc
imul
or
cmp
mov
daa
or
movs
das
or
arpl
ss
std
pop
pusha
scas
push
push
or
push
mov
ins
mov
pop
sub
scas
js
popa
xor
mov
repz
jmp
pop
pop
test
dec
inc
(bad)
(bad)
imul
push
inc
push
add
inc
inc
inc
push
dec
push
xor
not
dec
inc
dec
dec
arpl
xchg
cmp
dec
dec
inc
push
dec
dec
push
pop
mov
cmp
addr16
dec
dec
and
out
inc
inc
xor
(bad)
dec
enter
mov
and
mov
aas
fiadd
xchg
inc
push
inc
inc
dec
int
in
mov
push
push
dec
dec
push
dec
dec
mov
push
ins
imul
sbb
mov
nop
jl
inc
dec
push
mov
dec
inc
dec
mov
out
push
dec
pop
test
inc
inc
push
push
push
dec
push
inc
scas
mov
aas
in
inc
dec
push
mov
daa
xchg
test
or
push
mov
mov
loopne
shl
mov
push
sub
push
fcomp
aam
add
add
mov
outs
add
or
sbb
add
add
add
or
pop
mov
lea
dec
sbb
and
fisttp
and
or
out
sbb
sbb
mov
dec
pushf
inc
inc
ror
or
add
add
mov
dec
pusha
cmp
shl
mov
xor
pop
cmp
mov
call
adc
xchg
cmps
aas
stos
and
jle
xor
sbb
adc
loop
push
and
xor
jl
add
mov
xchg
arpl
push
dec
xchg
fisttp
cmp
movs
sub
sub
dec
aas
test
jne
xor
mov
jb
test
sbb
outs
test
int
cmp
or
xor
xchg
push
sbb
sbb
push
cli
mov
mov
dec
rcr
jnp
xchg
retf
jae
mov
mov
jle
xchg
pop
push
cmp
sbb
sbb
or
or
lods
xchg
xchg
cmp
push
rol
movs
mov
xor
out
sub
or
dec
in
dec
imul
inc
or
sub
test
jnp
fnstsw
mov
nop
stos
xor
retf
in
and
or
aas
xchg
xchg
aad
(bad)
mov
adc
lea
aam
push
in
add
mov
mov
sbb
inc
ss
push
cmp
jb
jmp
jo
xor
sub
in
add
fiadd
push
fcomp
add
fwait
jle
cmps
test
pop
or
pop
inc
fisttp
mov
jmp
inc
add
xchg
push
or
pusha
aam
or
adc
(bad)
in
add
pop
shl
jmp
(bad)
aam
or
lods
sub
cmp
aam
inc
scas
pusha
xor
mov
(bad)
sahf
or
dec
sbb
jp
ret
jno
adc
call
aam
ret
push
inc
lea
push
mov
sub
mov
(bad)
dec
mov
mov
push
dec
fild
xor
fdivr
xor
push
das
cld
ror
fdivp
ficom
jp
mov
mov
arpl
inc
sbb
push
pushf
sub
cmp
lods
mov
or
ins
clc
push
dec
outs
inc
sbb
sti
clc
add
cmp
popa
mov
pop
sbb
loopne
add
push
mov
xchg
xor
fadd
inc
sbb
or
fmul
add
cmp
(bad)
cli
ret
sbb
nop
or
mov
add
add
sub
je
fwait
or
and
(bad)
(bad)
les
leave
test
xchg
les
rcl
pop
das
mov
or
in
push
jne
pop
enter
mov
push
mov
mov
movzx
adc
or
lock
in
push
push
(bad)
and
fadd
call
push
mov
repnz
sbb
mov
pop
push
xor
mov
sbb
lods
lea
push
xor
xchg
cwde
scas
and
loopne
loopne
mov
inc
lods
dec
dec
and
mov
mov
inc
adc
inc
loopne
mov
(bad)
loop
nop
sbb
cs
inc
dec
push
cmp
and
push
sub
cmp
mov
mov
cmp
ds
pop
mov
mov
and
jne
push
hlt
mov
js
add
ja
lock
or
pushf
push
or
or
fistp
rol
out
add
in
ins
das
cmp
xchg
mov
dec
pop
popa
push
push
jmp
addr16
sub
jmp
je
push
adc
pop
sar
xchg
push
call
cmp
in
lock
and
or
and
inc
push
add
mov
(bad)
nop
push
pop
sbb
clc
inc
cmp
adc
cld
fdivr
adc
or
es
repnz
inc
sbb
movs
adc
mov
rol
inc
and
xchg
rcl
js
nop
leave
rcl
popf
sub
push
lahf
(bad)
pushf
rcr
or
mov
fs
test
loopne
inc
cmp
adc
(bad)
jge
mov
adc
push
sbb
sbb
push
and
push
or
push
add
or
pop
or
or
xor
push
push
or
sbb
ror
push
inc
push
fisub
add
add
and
dec
in
dec
shl
sbb
cmps
hlt
and
retf
pop
jg
inc
xchg
mov
iret
fmul
arpl
jo
test
add
add
sbb
pushf
movs
fld
adc
(bad)
and
(bad)
in
push
lahf
pop
pop
mov
push
mov
push
in
lock
sub
add
in
fld
jge
push
sub
and
or
bound
sar
inc
push
sbb
sbb
xor
xchg
mov
int3
push
mov
retf
cmp
xor
shl
es
pusha
int3
mov
mov
rcr
lods
push
repnz
je
push
xor
leave
(bad)
idiv
fs
popa
dec
nop
cdq
leave
arpl
push
aas
sub
sbb
mov
xlat
cs
mov
adc
pop
inc
add
mov
inc
push
rcr
push
aad
push
nop
arpl
dec
xor
mov
mov
out
pop
add
dec
push
arpl
dec
(bad)
fcmovnb
rol
mov
add
cwde
xchg
icebp
sbb
mov
stos
or
fisubr
inc
ds
call
pop
ss
mov
test
mov
iret
xchg
jmp
sbb
inc
loop
rcl
cmp
mov
cmova
pop
adc
push
push
into
mov
or
add
adc
loope
and
mov
dec
xchg
mov
into
rol
dec
dec
mov
cld
xchg
dec
ins
movs
imul
sub
mov
add
and
iret
add
mul
hlt
adc
jae
dec
mov
std
push
shl
inc
or
je
mov
push
bnd
mov
mov
jne
add
mov
out
push
lods
adc
es
icebp
xor
cmp
mov
(bad)
loopne
push
add
arpl
(bad)
and
or
sbb
(bad)
(bad)
push
push
movs
cmp
mov
not
and
mov
lds
ret
je
aam
pop
(bad)
mov
jecxz
leave
retf
fs
push
psubb
sar
pop
ins
push
add
add
push
ror
or
or
push
add
nop
xor
push
les
jp
push
sub
pop
add
fs
les
push
jecxz
sahf
adc
xor
test
cwde
fstp
fdiv
test
and
nop
mov
adc
cdq
popa
movs
js
sub
and
test
pop
(bad)
je
xor
sti
in
retf
movs
pop
ds
mov
or
mul
sbb
call
pop
xor
sbb
mov
pop
pop
jns
dec
repnz
inc
jl
pushf
adc
or
sub
inc
mov
push
or
vminpd
push
arpl
dec
ret
jnp
cli
cmp
aad
adc
push
xchg
lea
pop
ret
sbb
(bad)
adc
fsub
in
inc
out
ds
stos
mov
in
add
inc
pop
xor
jge
or
mov
xchg
dec
aam
cmp
inc
int3
push
push
sub
xchg
push
add
test
push
bound
push
inc
fwait
cmc
fwait
pop
ficom
fs
xor
pop
sbb
movs
push
xor
popf
sub
repnz
(bad)
fcomp
in
push
adc
aam
jle
push
in
lds
pop
push
rol
add
imul
or
ins
sti
popf
and
aam
push
js
adc
div
dec
mov
jmp
outs
add
sbb
retf
mov
test
loopne
cmp
call
not
and
outs
pop
rcr
aam
add
fsubr
pop
scas
mov
loopne
cmp
daa
test
mov
pop
sub
test
sub
xor
imul
in
gs
add
sub
ret
dec
aad
xor
or
push
or
xchg
imul
jmp
pop
xlat
rol
sub
adc
cmp
cmps
fdivr
loopne
inc
adc
xchg
shl
cmp
shr
push
push
push
fld
test
and
ss
sub
dec
jmp
jns
pop
push
xor
sbb
add
ds
ins
sbb
inc
shr
ficomp
into
add
stos
daa
or
je
fs
sbb
push
mov
ja
movs
mov
and
adc
jo
inc
inc
add
pop
call
add
mov
push
adc
fiadd
push
mov
mov
or
mov
adc
mov
mov
or
add
or
xor
mov
add
pop
adc
cmp
xor
and
dec
cs
call
push
mov
lock
push
add
jne
fstp
cmp
add
add
adc
adc
add
loopne
adc
sbb
jne
fisttp
and
sub
add
sub
inc
mov
push
test
js
and
and
(bad)
push
and
ins
mov
enter
mov
dec
jns
jmp
imul
shl
mov
sub
shl
mov
mov
inc
push
cmp
mov
mov
inc
pop
xchg
cld
push
mov
sub
fld
add
push
add
loopne
jl
xchg
clc
cmp
add
ds
ds
fidivr
dec
sub
inc
movzx
lea
jp
xchg
pop
push
cmp
cs
jmp
addr16
and
(bad)
out
or
pop
pop
repnz
frndint
(bad)
icebp
loopne
xor
push
jmp
mov
(bad)
aaa
mov
or
xor
retf
clc
mov
jl
cmps
repnz
icebp
aaa
das
loopne
mov
add
xor
shr
shr
adc
lds
push
dec
pop
add
pop
lock
rcl
dec
clc
shl
cmp
sti
fisttp
jmp
es
lods
or
ret
dec
pop
test
retf
mov
loopne
popa
push
sub
adc
add
lea
xchg
mov
nop
sar
(bad)
shl
gs
sahf
in
in
inc
sub
cmp
ss
push
push
ficom
fisttp
out
inc
xchg
jle
add
aaa
in
add
dec
loopne
mov
xor
inc
jl
cmp
or
push
push
inc
mov
xchg
loope
add
js
test
lahf
dec
ror
das
pop
push
cli
ret
and
ja
nop
iret
mov
fdivr
add
daa
sub
jmp
loope
in
adc
adc
movs
dec
hlt
cdq
mov
aas
fsub
jp
sti
ret
push
push
sub
out
sub
add
or
stos
shl
mov
or
push
and
ins
pop
cld
push
push
enter
pusha
fdiv
sub
jb
fsubr
mov
lock
mov
push
(bad)
shr
push
nop
dec
or
push
mul
mov
add
add
sub
std
inc
add
movzx
sbb
or
jmp
jmp
shr
adc
ror
cmc
(bad)
cmp
jg
test
jle
cmp
jl
mov
dec
(bad)
mov
enter
cmp
jle
xchg
fsubr
xchg
add
bndldx
mov
lock
push
out
adc
inc
push
add
and
or
jle
pusha
gs
sbb
inc
shr
push
and
nop
pusha
and
pop
push
xchg
fldenv
add
scas
add
sbb
fcom
xchg
xor
movs
xchg
gs
xor
imul
cmps
or
in
and
sub
xchg
push
sub
fdivr
jl
les
inc
adc
out
int3
mov
dec
pop
sub
repz
mov
ds
ret
push
jg
or
jl
xor
(bad)
push
cmp
dec
jle
sar
push
mov
in
iret
mov
inc
dec
jne
cmp
popf
adc
ret
loop
xor
lea
cli
(bad)
add
add
pmaxub
push
repnz
add
sub
out
adc
pop
add
xor
pop
aam
add
dec
dec
adc
retf
ins
imul
mov
pop
cwde
ret
call
mov
ins
mov
push
mov
fmul
les
ret
arpl
jno
retf
shl
fistp
out
mov
sub
add
push
push
mov
mov
cwde
adc
inc
mov
mov
or
lds
loope
shr
cmp
repnz
ror
ror
aas
xor
inc
aam
xchg
loopne
sub
and
pop
or
pusha
inc
xor
xchg
loope
outs
sbb
push
js
fiadd
jmp
jmp
jb
push
sub
push
pop
lea
inc
fs
pop
jmp
mov
sub
add
out
add
xchg
(bad)
cmc
mov
mov
or
jle
lock
jmp
retf
lods
push
jmp
invd
imul
push
mov
jmp
adc
outs
imul
or
fiadd
(bad)
or
inc
and
add
dec
push
mov
push
push
push
sub
add
mov
inc
or
data16
push
xchg
jle
mov
or
aam
ins
shl
adc
mov
es
add
or
push
mov
rol
xor
pop
and
xor
popa
jbe
nop
fld
rcl
hlt
sbb
lods
add
dec
loopne
adc
hlt
mov
and
jmp
ret
in
repnz
popf
clc
pop
xor
inc
shl
stos
push
pop
enter
xor
inc
jmp
sub
clc
(bad)
inc
dec
call
(bad)
movs
call
sbb
sbb
inc
mov
lods
fimul
push
in
xchg
out
(bad)
out
sbb
lods
dec
sahf
lods
adc
or
inc
in
std
jo
inc
icebp
mov
pop
push
jne
call
call
or
loopne
sbb
cmp
adc
mov
daa
int
hlt
loopne
fdiv
add
mov
xchg
cmps
imul
sbb
add
push
rcl
add
add
ds
push
and
paddw
cdq
inc
add
or
xor
mov
dec
and
mov
mov
adc
or
fild
push
scas
lods
cmps
mov
mov
and
dec
js
ins
push
push
add
push
mov
test
call
stos
pop
fdiv
fld
adc
stos
dec
lock
int3
add
mov
call
and
inc
xor
jle
inc
and
data16
or
xchg
inc
les
pop
mov
rcr
scas
sbb
shr
lods
mov
pusha
adc
das
frstor
mov
nop
neg
or
sbb
push
adc
ds
inc
in
lds
mov
stos
xchg
adc
pop
js
inc
inc
out
arpl
and
sbb
xor
pusha
cmp
or
fisub
push
je
sub
adc
or
outs
jg
dec
add
mov
dec
hlt
(bad)
hlt
mov
pop
pop
nop
pop
jmp
push
push
jg
retf
push
sub
enter
sbb
sbb
inc
gs
inc
push
imul
lods
jno
mov
and
(bad)
loopne
adc
and
out
xor
and
mov
push
loop
pop
push
xchg
sub
and
in
pushf
fldz
cmps
pop
ret
in
cmp
outs
imul
pop
das
sub
mov
push
hlt
cmp
ror
sbb
jns
pop
in
add
mov
jmp
nop
sub
pop
in
jbe
lods
test
sub
jmp
(bad)
push
es
imul
(bad)
push
sub
dec
lods
xchg
xlat
in
sar
rol
dec
shr
inc
xor
movs
sar
in
inc
jl
dec
arpl
sbb
jecxz
mov
arpl
ror
daa
add
pushf
arpl
inc
push
dec
fstp
mov
test
addr16
adc
cmps
push
dec
push
xchg
pushf
push
jmp
jge
pop
ror
sub
xor
sbb
in
push
jmp
test
mov
movs
mov
pop
mov
addr16
xlat
aad
inc
repnz
sub
push
jno
jl
sub
rcr
add
push
ret
push
adc
sub
push
push
(bad)
cdq
inc
mov
sar
cmp
xor
fstp
pop
pop
sbb
pop
cmp
mov
rcr
fild
adc
inc
test
ds
aaa
out
jl
add
ror
cmp
xchg
cmps
repnz
jmp
iret
mov
or
pop
dec
adc
in
mov
push
scas
and
sub
dec
jmp
add
hlt
(bad)
loopne
adc
add
clc
pop
add
jne
jno
and
sub
mov
fucomp
adc
imul
test
rcr
cmps
sub
cmps
cmp
je
mov
or
fild
fadd
iret
adc
and
dec
xor
in
jg
sti
cs
sahf
xchg
std
pop
adc
jns
or
xchg
test
retf
sbb
movs
jp
mov
add
lock
retf
in
test
pushf
test
mov
in
adc
cmp
add
(bad)
not
mov
je
fiadd
xor
jne
mov
inc
or
loopne
dec
pop
gs
inc
nop
sbb
and
add
adc
into
gs
dec
bound
popa
loopne
or
or
sbb
les
addr16
cmp
mov
push
sbb
repnz
and
inc
jne
sub
xchg
add
sbb
add
add
add
scas
mov
mov
int
push
and
pop
jge
aam
dec
test
xchg
lods
outs
sbb
repz
jae
mov
cs
xor
inc
adc
pop
popf
outs
or
out
or
fsubr
xchg
and
loopne
aas
mov
sbb
sub
pusha
(bad)
enter
add
sti
xor
mov
push
add
adc
and
mov
aam
jns
sbb
mov
es
lea
sub
jo
scas
or
sbb
cmp
or
or
ss
fistp
int3
sub
push
lods
jge
push
or
arpl
call
push
dec
(bad)
jbe
mov
cmps
hlt
cmp
and
add
in
sub
mov
je
scas
mov
cmp
aas
inc
cmp
and
or
fcomi
shr
sbb
inc
mov
rcl
adc
adc
sub
mov
adc
imul
fs
or
push
cmp
inc
clc
loopne
dec
cmps
add
and
jl
dec
dec
outs
cmp
cmp
jne
mov
xor
test
ins
lods
or
xchg
mov
jbe
xor
in
test
imul
adc
mov
repz
arpl
adc
xor
outs
jg
inc
or
lock
push
xor
and
(bad)
out
es
push
ret
adc
(bad)
mov
mov
shr
shr
scas
mov
pop
pusha
pop
adc
adc
jl
(bad)
adc
and
inc
xor
push
call
dec
repnz
push
inc
xlat
xor
shufps
fisttp
jmp
adc
dec
or
std
loopne
sbb
jg
or
dec
and
sbb
or
(bad)
cmp
shl
dec
mov
xor
jno
cmp
sub
push
push
mov
sbb
push
push
sbb
sbb
dec
int
gs
in
add
add
dec
mov
jg
stos
gs
dec
iret
jmp
mov
jle
sbb
jb
adc
adc
jp
add
and
loope
push
and
fld
jae
das
sbb
pop
and
pop
out
pop
push
fist
rcr
test
out
stos
mov
dec
bswap
ret
sbb
cwde
mov
xchg
lods
loopne
ds
xchg
sahf
pushf
lock
cmps
pop
pop
mov
sar
addr16
stos
mov
mov
xchg
call
inc
out
add
test
or
or
fsub
out
push
adc
inc
mov
lods
enter
lock
sub
lods
es
js
push
imul
jge
sub
xchg
inc
hlt
out
mov
cmc
hlt
pop
sbb
sub
popa
mov
mov
loop
lea
aaa
fdiv
sbb
jmp
sbb
aam
add
push
mov
dec
mov
stc
lock
push
test
ss
add
add
ins
pop
push
inc
sub
movs
adc
test
movs
sahf
and
adc
xchg
call
add
lea
dec
cld
xchg
adc
add
and
jae
popf
pusha
pop
and
xor
pop
or
cmp
cs
sub
inc
push
test
sbb
out
(bad)
pop
pop
dec
jae
imul
mov
lods
and
adc
or
jmp
mov
ret
inc
movs
pop
fs
js
push
mov
inc
fistp
ret
cdq
mov
and
stos
sbb
xor
dec
stos
clc
mov
jo
sbb
movs
or
sub
mov
inc
ss
push
cmp
test
js
clc
xor
cld
cld
adc
pop
out
adc
or
mov
push
or
add
push
add
pop
mov
xchg
(bad)
hlt
leave
mov
lods
push
inc
test
mov
(bad)
push
cmp
mov
push
or
inc
xor
shl
mov
int
scas
or
jno
push
test
test
mov
sbb
adc
js
rol
rol
movs
dec
jnp
inc
adc
and
add
fidivr
sbb
popa
fcom
sbb
in
jmp
(bad)
movzx
push
dec
sub
scas
ror
lods
loop
ins
adc
and
(bad)
xlat
jle
mov
cmp
push
dec
pop
cmp
push
or
in
js
mov
add
add
jecxz
pop
sub
ret
adc
mov
sbb
mov
and
inc
shr
cmp
hlt
in
sar
fwait
cmp
or
inc
mov
test
pop
sub
dec
inc
or
inc
leave
xlat
and
rcr
inc
sbb
pop
and
enter
cmps
pop
mov
and
mov
(bad)
(bad)
mov
pushf
jge
and
shr
pop
mov
out
shr
stc
adc
push
lds
jo
out
loopne
sbb
mov
sub
add
jbe
scas
inc
jo
jnp
xor
push
rcl
push
mov
loopne
movs
inc
and
push
ins
stos
sub
cmp
jo
pop
add
test
ins
add
lahf
imul
out
add
clc
sbb
and
addr16
js
icebp
inc
loop
fstp
mov
mov
xor
xor
inc
xor
fstp
(bad)
push
inc
fld
cmp
call
xchg
add
clc
dec
add
sbb
mov
adc
or
daa
mov
aam
cmp
inc
sub
das
mov
lahf
or
sbb
scas
pop
xlat
inc
jo
add
adc
mov
jne
mov
fwait
mov
popf
stos
ret
dec
jecxz
pop
pop
mov
sbb
add
lock
mov
push
mov
pop
shl
aam
add
sub
sbb
pop
popf
dec
xor
mov
inc
movs
cmps
or
or
mov
sbb
fs
adc
push
ja
icebp
cmp
adc
test
xchg
jns
inc
mov
dec
mov
ret
mov
iret
jne
mov
xchg
inc
ins
in
(bad)
lock
pop
inc
cmp
pop
inc
mov
in
ja
ss
dec
fcomp
or
pop
adc
test
or
push
add
add
mov
or
xor
or
xor
fcmovb
and
addr16
and
loop
push
dec
test
in
outs
xchg
inc
adc
call
add
xor
inc
clc
or
sbb
mov
jbe
adc
xchg
adc
mov
xchg
xchg
inc
adc
cmp
dec
adc
fmul
leave
add
rcr
fcomp
adc
sub
sub
push
leave
push
or
shl
push
sub
jmp
push
mov
sbb
add
push
mov
into
mov
test
jno
mov
push
or
add
mov
in
shl
and
fxch
adc
arpl
dec
xchg
test
or
inc
inc
mov
sbb
inc
and
add
jl
(bad)
jne
mov
mov
jle
cld
pop
sub
(bad)
imul
cmp
popf
cmps
lea
outs
add
popf
mov
or
xchg
or
dec
jae
lea
(bad)
aam
(bad)
push
xchg
jo
dec
sub
ja
sub
dec
mov
adc
ins
and
clc
push
sub
dec
dec
out
mov
les
xchg
popa
cmp
inc
jo
or
and
jno
adc
aaa
mov
daa
dec
mov
xor
fst
rcl
or
inc
(bad)
sub
pusha
loopne
jmp
or
jne
pusha
inc
ffreep
fild
sbb
ins
(bad)
pop
pop
loopne
or
add
enter
inc
mov
push
mov
enter
add
loope
cmp
mov
(bad)
inc
push
sbb
movs
xchg
fsubr
or
add
jns
xor
ret
out
or
inc
ret
repnz
add
add
xchg
sub
push
or
mov
inc
rcr
xchg
enter
sbb
dec
and
fs
push
aam
scas
sbb
rol
add
pop
sbb
add
adc
push
add
fcom
rcr
and
(bad)
push
and
mov
inc
cwde
sub
fcmovu
inc
jo
mov
loop
test
mov
inc
in
lock
jo
add
sub
lods
into
stos
xor
bound
cmp
mov
dec
jae
mov
jno
or
jmp
jmp
movzx
pop
dec
inc
or
aam
in
pushf
sbb
je
jbe
add
xchg
xor
lock
and
adc
test
scas
lods
dec
jbe
(bad)
mov
adc
(bad)
imul
(bad)
cmp
mov
jne
shl
add
faddp
and
in
jno
add
leave
inc
push
nop
into
pop
lods
adc
sub
in
repz
aam
jmp
jbe
mov
enter
es
hlt
inc
scas
ret
cmp
xor
adc
and
or
add
sub
adc
(bad)
aaa
dec
call
pop
inc
or
inc
push
and
inc
loopne
movs
aam
mov
pop
add
movs
sar
pusha
inc
leave
push
mov
xchg
xchg
cmp
inc
jp
in
jno
push
mov
jbe
loopne
pusha
in
pop
jbe
adc
push
and
pop
dec
and
push
cmps
mov
and
ja
mov
xchg
adc
cs
cwde
and
mov
jo
retf
sub
or
or
out
in
sbb
(bad)
shr
sbb
and
pushf
mov
fs
inc
mov
mov
inc
lds
pop
dec
mov
xchg
add
or
xchg
jmp
fild
add
cmp
and
sub
push
mov
dec
push
jle
sti
inc
outs
add
adc
outs
jmp
sbb
(bad)
dec
cli
pushf
fmul
cld
arpl
pop
imul
pushf
xchg
or
add
xor
(bad)
push
xchg
sub
fmul
mov
jle
push
sbb
add
call
and
clc
rol
push
es
lods
div
dec
mov
inc
fmul
cmp
fdiv
cmp
iret
mov
xchg
dec
cmp
loop
push
cwde
sbb
outs
adc
adc
push
jo
xchg
int
or
mov
lea
(bad)
(bad)
adc
nop
fmul
ror
or
dec
and
nop
lea
or
xchg
sub
test
jmp
xlat
lock
mov
mov
add
lea
inc
shr
sbb
or
inc
nop
loop
clc
mov
jmp
or
(bad)
mov
push
and
adc
fstp
add
lea
jp
push
add
fmul
shr
shl
mov
jle
or
(bad)
or
push
adc
inc
xlat
mov
fwait
mov
lahf
inc
js
sub
lock
cmp
pop
push
add
arpl
stc
jge
pop
and
or
dec
inc
mov
pop
in
bswap
xchg
inc
or
push
pop
iret
push
jge
nop
sbb
cld
inc
lea
std
xor
or
mov
enter
rcl
dec
add
xor
pop
cmp
dec
ror
mov
test
jb
mov
cmps
and
es
cmp
hlt
lds
xlat
push
loopne
pusha
dec
pop
mov
movs
add
push
cmp
xor
jl
or
jne
stos
dec
sbb
push
push
push
and
and
jo
popa
cmp
adc
dec
loop
dec
movs
ds
jne
pop
mov
mov
out
push
add
call
jg
or
inc
sbb
loope
movs
data16
popf
shr
push
sbb
imul
jae
test
outs
loopne
arpl
cmp
ss
cmp
je
lods
sub
push
push
adc
inc
or
mov
jl
add
cmp
sbb
aas
test
or
dec
push
adc
stos
sub
cld
in
daa
and
test
and
dec
mov
pop
and
push
push
add
cmps
repz
shl
or
mov
inc
push
loope
jle
mov
cld
cmps
test
or
cmp
or
jle
xor
test
je
sahf
sub
(bad)
ss
jns
jo
dec
sub
jb
fsubr
arpl
fwait
push
and
dec
ins
sbb
cmp
push
add
movs
push
fbld
fdivr
xchg
xchg
add
popa
jns
stos
push
xchg
mov
add
pop
jmp
loopne
jne
or
mov
nop
lods
sub
dec
mov
push
sbb
js
mov
cmp
movs
sbb
add
inc
pop
or
cmp
push
or
cmps
push
push
xor
and
mov
pop
inc
dec
push
sbb
mov
shl
push
iret
ror
xor
mov
add
dec
mov
ins
in
dec
aaa
push
sti
mov
popf
push
inc
sbb
pushf
jmp
dec
or
fild
enter
rol
sub
inc
shr
push
jmp
or
imul
cmp
add
(bad)
cld
lea
push
aam
inc
adc
and
adc
add
jle
out
test
dec
aad
in
push
sub
adc
add
call
and
add
or
and
add
adc
sar
imul
mov
gs
test
test
or
inc
cmps
add
cmp
add
imul
dec
jo
mov
mov
pop
loopne
ror
ror
dec
add
daa
adc
cmp
daa
(bad)
pop
bound
shld
(bad)
stos
pop
jo
cmp
dec
stos
or
hlt
dec
adc
imul
jb
pop
mov
lock
adc
jo
or
cmp
sbb
or
in
cmp
and
shl
add
sbb
dec
fdivr
or
ret
adc
pop
movs
or
xor
mov
(bad)
imul
inc
fdivr
push
mov
push
imul
mov
pop
push
mov
out
inc
mov
out
ret
push
fcomp
bound
xchg
enter
mov
daa
mov
pop
jle
adc
and
sahf
add
pop
jnp
and
test
out
dec
mov
sub
adc
mov
inc
bswap
add
loope
xor
rcl
cmp
add
or
pop
lock
sub
sbb
dec
sub
jp
sub
dec
retf
and
je
mov
int3
clc
sbb
dec
dec
iret
add
or
imul
mov
daa
mov
(bad)
push
scas
sbb
add
lahf
pop
adc
or
fistp
pop
or
push
sbb
sub
popa
dec
mov
or
and
pop
xor
movzx
add
pop
rol
xchg
int
ror
or
data16
lock
or
enter
add
hlt
dec
push
mov
or
sbb
jp
fdiv
lods
clc
inc
sbb
jge
xchg
cwde
adc
mov
dec
or
inc
and
cs
cdq
add
sbb
mov
push
cli
iret
add
and
inc
aas
jnp
cs
inc
cmp
imul
inc
cmp
or
adc
xchg
push
or
psubsb
ins
test
(bad)
lods
or
sar
in
push
jl
outs
hlt
mov
sbb
cwde
hlt
jae
mov
push
hlt
inc
cmp
out
fsubr
jne
sub
jne
mov
mov
and
ret
scas
sub
punpcklbw
pop
mov
and
mov
or
in
inc
(bad)
sahf
sub
jmp
int3
push
jno
dec
xor
shl
in
fcom
fmul
mov
xchg
aam
add
mov
add
inc
inc
ficom
xor
nop
xchg
pop
in
pop
inc
(bad)
push
fs
test
outs
jb
add
ror
adc
pop
xchg
retf
lock
pushf
or
mov
call
or
mov
dec
xor
repnz
mov
test
fild
adc
and
add
push
add
pop
cmp
inc
sti
sahf
and
mov
adc
mov
test
sbb
movs
cmps
push
cmp
jg
pusha
jmp
jl
and
and
inc
in
sub
inc
inc
mov
cs
inc
xchg
ficom
adc
or
inc
or
dec
dec
or
dec
or
loopne
mov
iret
hlt
fisubr
sbb
push
je
or
sti
and
fs
jbe
fst
inc
pop
sbb
psubw
jns
sbb
sbb
push
mov
inc
add
mov
mov
outs
add
pop
and
ret
lods
das
and
test
scas
push
arpl
dec
or
xor
clc
mov
lods
adc
lock
adc
daa
int3
je
add
loopne
nop
mov
(bad)
mov
inc
rol
push
add
mov
lock
or
push
xchg
xor
test
or
pop
adc
mov
je
ja
fild
inc
popa
test
outs
fstp
or
add
and
mov
ss
pushf
pushf
fmul
(bad)
aam
xchg
pop
mov
push
xchg
fisttp
or
ret
aaa
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
add
leave
or
int
hlt
aam
imul
sbb
lahf
jbe
add
sbb
adc
cmp
sub
jbe
cmp
lahf
pop
adc
xor
sub
xchg
inc
fdivr
mov
sbb
popa
outs
fsub
add
jae
mov
jmp
or
lock
lods
imul
or
pop
mov
adc
mov
sbb
js
pop
pop
inc
ror
shr
outs
jb
inc
xlat
add
daa
setne
pop
and
mov
adc
mov
jmp
push
inc
ss
mov
jmp
ret
sbb
jae
adc
or
sub
into
add
sbb
rol
push
arpl
pop
ds
inc
in
or
lods
pop
aam
jb
das
xchg
jg
lock
sbb
ja
mov
rol
add
push
sbb
pusha
imul
cmp
push
or
(bad)
jle
or
push
popa
mov
mov
cmp
jle
push
pop
cmp
mov
xchg
icebp
sub
rcr
sub
lock
inc
inc
jl
aam
pop
mov
retf
push
and
and
dec
cmp
cld
jae
pop
stos
cmp
sbb
mov
push
mov
mov
adc
push
lock
push
push
xor
out
nop
push
dec
(bad)
daa
adc
and
adc
adc
and
pop
dec
adc
in
or
fsubr
ss
sbb
sbb
es
dec
xor
sar
lock
clc
jl
int
xchg
out
or
(bad)
or
sub
xor
nop
test
cmps
imul
mov
dec
xor
outs
shl
push
jne
xor
sub
inc
mov
xor
inc
out
cmp
ins
cli
(bad)
or
push
adc
jle
lea
cmp
pop
fcomp
inc
and
ds
jb
push
jp
lea
add
pop
inc
repnz
dec
push
push
dec
inc
pop
cmps
and
mov
leave
or
or
and
and
cmovno
je
adc
jb
xchg
xchg
adc
test
pop
adc
adc
jge
repnz
shl
cs
ins
mov
adc
push
pop
ret
jmp
rcl
mov
inc
adc
jg
inc
in
rcl
inc
and
ret
dec
jnp
mov
clc
mov
mov
cmp
pop
sbb
ret
ret
push
nop
push
mov
push
sub
add
jne
jne
lock
ins
push
jmp
ds
add
adc
add
mov
push
push
and
inc
outs
jne
mov
inc
mov
or
sbb
inc
test
(bad)
mov
cld
loopne
add
push
test
js
or
and
xchg
iret
in
adc
rcl
mov
push
push
inc
push
retf
dec
dec
inc
into
add
dec
and
sub
and
mov
add
jg
sub
cmp
movs
cs
add
prefetchw
push
test
outs
jae
xchg
cld
mov
pop
jo
xor
adc
cmp
inc
adc
shr
out
stc
mov
imul
out
push
adc
in
mov
imul
in
cs
or
dec
pop
xchg
sahf
and
add
in
mov
or
popa
dec
cmps
lea
push
jnp
aam
in
add
enter
inc
sbb
and
es
adc
aad
test
and
jbe
push
(bad)
mov
xchg
or
inc
adc
dec
test
and
dec
jmp
fcomp
adc
and
and
and
cdq
ror
push
lods
stos
iret
repz
dec
int3
jmp
rcr
sahf
cmps
stc
cmp
aaa
daa
inc
dec
pop
jns
out
movhps
daa
das
sbb
(bad)
aam
ja
cs
movs
mov
outs
retf
in
sbb
sub
xchg
daa
inc
es
jae
add
es
(bad)
push
pop
daa
cld
xor
int
cmps
xchg
(bad)
cmp
mov
cs
mov
cmp
pusha
lods
inc
jg
sub
sub
cmp
mov
push
shl
sbb
daa
add
mov
fnsave
les
nop
dec
mov
sub
cmps
add
lock
(bad)
push
clc
mov
dec
add
sahf
mul
inc
push
addr16
nop
or
test
sbb
or
sbb
adc
lea
pop
or
jmp
lahf
fisub
repnz
nop
iret
hlt
icebp
sub
es
mov
sbb
push
call
into
in
ret
retf
inc
jns
jbe
ins
mov
stc
mov
mov
inc
pop
xchg
adc
hlt
hlt
sub
jmp
nop
inc
jno
rcl
sub
clc
sub
sub
sbb
les
call
lock
sub
in
loopne
xchg
prefetcht0
rol
xor
xlat
dec
gs
sub
lahf
cmps
js
jmp
adc
out
add
jmp
sbb
mov
wrmsr
mov
push
xor
sbb
push
xor
add
and
pop
clc
lods
rcl
les
out
jp
hlt
sub
test
pop
adc
adc
mov
sbb
dec
jle
clc
and
popf
adc
or
leave
sbb
inc
or
in
daa
nop
cmp
aam
cld
sub
ret
sub
sub
adc
push
(bad)
jmp
jmp
mov
sub
sbb
pop
add
adc
ins
pop
arpl
xchg
fild
add
mov
aas
mov
test
jle
dec
jne
sbb
mov
xchg
popa
mov
imul
je
inc
shl
into
and
test
iret
inc
push
cmp
jb
lock
or
mov
test
cmps
push
jecxz
push
das
pop
and
jl
and
jo
fxam
sub
adc
ds
lds
rol
fstp
shl
fwait
sub
mov
ja
inc
lods
pop
cmps
or
add
pop
add
or
add
mov
ins
mov
mov
inc
push
or
dec
(bad)
hlt
repnz
jmp
scas
sub
mov
dec
add
xor
in
pop
ins
jle
adc
push
das
cdq
popa
sbb
and
push
and
loope
je
pop
das
fsubr
shr
xchg
retfw
sub
in
or
push
les
mov
out
cs
test
lds
ja
leave
dec
lea
retf
or
mov
jge
lock
loopne
outs
inc
xlat
pushf
pop
push
(bad)
jmp
mov
mov
shl
retf
jo
xor
inc
shl
leave
(bad)
nop
daa
call
call
sbb
mov
sub
adc
and
pop
inc
adc
sub
sbb
mov
jmp
inc
test
mov
lock
lock
inc
xchg
cdq
mov
es
sar
call
(bad)
push
cld
loopne
dec
push
jns
push
ss
dec
xor
push
pop
lock
sahf
rol
jbe
arpl
xor
shl
and
fsub
shl
pop
pop
xor
pop
cmp
pop
sub
imul
inc
xor
ret
pop
out
xor
sbb
jmp
cmp
push
stos
cmp
lock
or
inc
dec
ror
or
fwait
subps
mov
aas
jbe
add
add
ins
test
aas
or
inc
xor
cld
mov
sub
aas
add
or
push
sbb
icebp
pop
xor
push
test
jmp
adc
dec
jmp
jl
adc
scas
and
push
out
xlat
and
leave
mov
adc
pop
and
ret
das
aas
leave
inc
popa
test
xchg
push
les
mov
cmp
jne
mov
ins
ins
sbb
or
sbb
sbb
sbb
movs
or
out
cmp
xchg
pop
xor
push
xor
dec
xchg
xor
xchg
jne
in
pop
cmp
push
jmp
xor
fwait
xchg
mov
(bad)
mov
cmp
xor
mov
add
sbb
dec
push
retf
and
xchg
xor
cmp
push
jbe
in
adc
pop
and
neg
sbb
push
ins
mov
ins
in
test
imul
mov
push
pop
sub
outs
push
clc
jo
push
push
pop
or
fs
adc
cmp
xor
jmp
je
into
mov
sbb
in
fs
ins
dec
adc
dec
movs
xor
dec
in
dec
pushf
push
sub
mov
cmp
adc
dec
les
pop
xor
adc
pushf
sbb
arpl
arpl
inc
add
pop
inc
xor
inc
call
daa
push
sub
inc
pusha
maxps
xchg
push
mov
add
arpl
nop
xor
in
push
and
sub
jnp
add
jae
daa
adc
push
fistp
enter
cmp
cmp
sbb
ins
mov
cmp
add
mov
inc
add
push
push
push
push
dec
enter
jns
inc
sti
std
nop
in
in
sbb
xor
test
js
test
push
lods
jmp
loope
jb
(bad)
push
les
and
xor
pop
xchg
adc
dec
sub
inc
cmp
mov
scas
pop
and
push
lds
inc
add
enter
xchg
cmc
and
mov
push
stc
enter
xor
jle
dec
add
adc
sbb
pop
mov
fs
cmp
or
sub
fs
fs
cwde
pushf
mov
movs
test
mov
fs
mov
fs
enter
fs
fsub
fs
in
lock
fs
clc
cld
add
fs
or
fs
sbb
jno
fs
sub
sub
push
cwde
push
jg
cmp
xor
mov
pop
mov
out
dec
aas
adc
cmp
add
add
loopne
adc
push
je
js
and
nop
retf
pushf
test
add
mov
nop
loopne
sbb
or
adc
mov
cmp
dec
test
gs
sub
xchg
add
test
movs
xor
mov
adc
sub
push
sbb
in
clc
mov
or
rol
add
aam
test
cmp
dec
xor
xchg
add
fs
push
push
movs
je
mov
nop
retf
lock
inc
sub
hlt
(bad)
clc
add
in
xor
iret
add
clc
add
inc
xchg
add
and
movs
xor
adc
nop
retf
push
sbb
push
sbb
and
mov
and
in
jns
fbstp
xlat
xchg
inc
push
aas
rol
lds
loop
cmp
je
gs
gs
add
inc
ins
sub
jae
and
rol
dec
daa
int3
test
jno
inc
cmp
pop
and
loop
xchg
aas
push
popa
jb
lea
mov
int3
add
test
je
xchg
inc
bound
jne
fwait
popf
or
dec
imul
aas
addr16
fs
sbb
out
mov
dec
arpl
jae
xor
out
jge
dec
in
daa
lea
or
jns
popa
add
jae
sbb
mov
ins
xlat
pop
pop
pop
movs
pop
dec
dec
neg
rcr
adc
(bad)
ficom
xchg
xchg
jnp
or
adc
rol
pop
call
(bad)
daa
rcl
pop
iret
ds
pusha
and
dec
in
pop
or
iret
mov
inc
push
outs
popa
and
and
nop
cwde
mov
dec
das
mov
mov
fstp
in
pop
push
(bad)
xchg
test
jl
or
mov
jo
jg
jae
mov
addr16
jne
ins
outs
(bad)
sub
das
pop
fs
ss
sbb
inc
imul
jl
add
outs
arpl
xor
loope
arpl
or
push
xchg
loop
add
shr
pop
repz
ficom
push
adc
cdq
xor
push
ins
add
push
jg
ins
inc
xor
scas
sbb
add
sbb
jne
xlat
jg
daa
aad
inc
data16
cmps
jbe
sbb
add
dec
das
cmp
jno
mov
and
sub
inc
xor
xlat
outs
dec
clc
dec
inc
cmp
sub
and
xor
sbb
sbb
add
sbb
and
ror
xchg
or
pop
fcomp
nop
dec
push
or
adc
or
nop
pop
inc
pusha
and
and
leave
sbb
cmp
mov
add
push
push
out
dec
sbb
cmp
pop
aas
inc
inc
jmp
adc
inc
enter
scas
and
outs
loop
data16
ins
dec
push
add
out
adc
cmp
jmp
daa
push
dec
jmp
push
pop
cmovns
push
or
push
ins
hlt
rol
push
pop
sub
push
xor
xlat
enter
cmps
and
xor
xor
inc
repnz
push
fs
dec
lods
cmp
or
aaa
popf
jne
dec
dec
dec
cmps
jae
ins
cmp
push
lods
fs
push
xor
cmps
mov
inc
xor
cli
add
inc
loopne
inc
adc
(bad)
jbe
inc
jecxz
adc
nop
test
or
inc
jg
mov
jnp
xor
cmp
js
mov
sar
jmp
xchg
push
add
data16
push
xchg
cmp
sbb
ret
mov
imul
xor
clc
xchg
int3
mov
and
mov
push
rcl
js
mov
not
(bad)
fdiv
or
xchg
inc
cdq
mov
fiadd
push
out
or
jle
imul
arpl
cmps
gs
push
or
sub
jbe
ins
call
and
and
rol
dec
push
dec
dec
cmp
sub
add
and
aad
mov
and
das
leave
xor
or
mov
pop
ss
adc
adc
shr
dec
rcr
ja
sbb
dec
jae
mov
push
push
push
daa
ret
daa
pop
mov
pop
js
dec
add
add
push
mov
arpl
lods
imul
add
push
push
cmp
ret
inc
(bad)
pop
dec
outs
outs
cli
mov
ins
ins
pop
push
outs
pop
or
fs
jmp
pop
cmp
test
mov
es
mov
sub
inc
call
sbb
wrmsr
scas
sub
repz
(bad)
and
xchg
cmp
js
push
mov
and
mov
idiv
ins
fs
addr16
push
loop
in
rol
jo
adc
mov
arpl
and
or
retf
or
outs
repnz
dec
add
sbb
repnz
sbb
pushf
mov
pop
pshufw
push
in
xor
js
cs
or
sub
add
dec
push
mov
dec
(bad)
aas
mov
mov
or
push
xchg
mov
sbb
cmp
mov
clc
adc
cwde
pop
(bad)
fstp
inc
pop
inc
ret
dec
jbe
mov
js
add
adc
cdq
aam
(bad)
fist
pop
mov
cmps
icebp
out
ror
push
imul
test
sub
mov
or
imul
add
cwde
push
jae
mov
popa
pusha
leave
test
and
add
fcomp
fs
mov
loopne
imul
inc
add
addr16
movs
push
push
add
mov
movs
dec
jle
add
or
pop
dec
xchg
pop
push
cld
and
adc
sub
dec
adc
cmps
xor
sbb
pop
pushf
stos
push
cmc
nop
scas
ins
add
jo
(bad)
arpl
mov
dec
ret
fst
jae
adc
test
loopne
jnp
cmp
(bad)
mov
fs
inc
push
and
aaa
test
jo
mov
hlt
pusha
adc
or
or
mov
push
mov
rcr
mov
or
cmp
xor
shl
ins
in
pop
push
cmp
bswap
leave
leave
leave
cmp
ds
leave
leave
leave
leave
and
and
leave
leave
leave
leave
and
es
leave
leave
leave
leave
sub
sub
leave
leave
leave
leave
sub
cs
leave
leave
leave
leave
adc
adc
leave
leave
leave
leave
adc
push
pop
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
sbb
push
pop
leave
leave
leave
leave
add
add
leave
leave
leave
leave
add
push
pop
out
add
or
inc
push
cmps
stc
mov
push
dec
clc
or
jns
lock
xor
sub
sahf
out
fsub
sbb
out
sahf
out
ror
iret
repz
mov
dec
test
mov
cmp
in
fmul
aam
int3
js
iret
repz
jo
push
iret
repz
movs
push
pushf
dec
repz
repz
inc
mov
test
repz
xor
and
repz
adc
ds
repz
add
inc
out
sahf
out
cmp
xor
sahf
out
sahf
sub
and
sbb
jns
out
adc
or
add
cmp
out
cld
dec
test
mov
in
cwde
in
adc
hlt
out
push
je
mov
movs
adc
sbb
and
lock
mov
sub
push
in
clc
cld
dec
das
out
dec
test
xchg
jne
sub
push
inc
dec
repnz
js
mov
retf
test
rol
inc
daa
push
mov
jp
push
pop
jle
sub
ret
lea
xchg
and
arpl
shr
push
xchg
xchg
or
mov
pop
push
push
mov
mov
loopne
and
cld
repnz
or
push
xchg
aas
xor
or
jns
sahf
sub
sub
and
sub
(bad)
shl
movs
adc
repnz
jo
adc
in
xchg
ja
mov
push
(bad)
imul
scas
inc
push
pop
jnp
dec
push
pop
push
mov
sbb
jo
mov
in
es
mov
jb
pop
js
mov
aaa
mov
sahf
fadd
sub
daa
xchg
or
push
shl
inc
push
pop
xchg
xchg
dec
les
push
mov
jb
(bad)
iret
dec
inc
push
pop
fwait
sbb
enter
stos
push
bound
or
sbb
dec
or
xor
cmp
push
ja
mov
add
int3
sbb
xor
mov
adc
shr
shr
add
xchg
push
xlat
or
scas
cmp
fcom
adc
fcomp
cmp
push
sub
cmp
mov
or
or
aam
(bad)
imul
push
adc
inc
outs
jb
popa
je
mov
pop
jb
leavew
add
sub
mov
inc
jg
or
sbb
test
or
or
mov
and
mov
add
jne
cs
push
daa
adc
mov
dec
ficom
in
(bad)
mov
fdiv
adc
mov
(bad)
push
dec
pop
sbb
(bad)
fcomp
loope
rcr
ds
inc
push
sbb
push
push
add
mov
xor
daa
sub
ins
or
test
sti
xor
xor
sub
xor
dec
imul
(bad)
push
add
mov
add
pop
jle
pop
arpl
ins
push
arpl
imul
inc
outs
out
popf
(bad)
pop
js
bound
pop
es
je
jge
jb
jb
popa
or
out
pop
call
es
bound
jbe
int
jbe
es
imul
fnstcw
mov
addr16
jb
div
mov
mov
arpl
mov
daa
push
jg
out
(bad)
jge
je
outs
ins
das
je
fsubr
mul
imul
adc
mov
mov
jo
jb
arpl
fidiv
outs
dec
pushw
mov
add
or
dec
(bad)
div
outs
pop
hlt
lock
(bad)
(bad)
popa
push
loope
mov
mov
lock
outs
sub
cmp
cli
dec
push
add
xor
movs
push
jo
aaa
aad
call
dec
sub
inc
div
int3
je
dec
cmp
add
xlat
jl
and
retf
add
dec
sbb
xor
inc
mov
call
add
cdq
sub
sbb
sbb
push
ins
push
add
mov
lods
rol
iret
adc
mov
dec
mov
pop
jne
xor
scas
call
or
sub
push
ins
or
cld
mov
out
add
push
hlt
or
adc
inc
sbb
sub
nop
xchg
xchg
add
xchg
invd
push
shr
add
mov
je
bnd
out
call
and
int3
push
jg
int3
es
sub
pusha
push
push
pusha
mov
sahf
add
out
cmps
sbb
call
nop
mov
movs
repnz
adc
and
push
or
inc
jae
js
rol
ins
jbe
fs
push
fcmovb
loopne
sbb
xor
cld
dec
bound
or
add
xor
rol
add
jg
pop
or
or
or
or
or
or
iret
repz
adc
adc
repz
repz
pop
sbb
sbb
aas
iret
sbb
and
and
hlt
pop
fcomp
fisubr
out
add
iret
repz
and
inc
push
repz
repz
cdq
stos
iret
repz
mov
adc
and
inc
push
gs
out
jbe
xchg
mov
out
retf
xchg
xor
fwait
jb
in
add
pop
push
mov
push
xchg
push
cs
and
or
dec
in
retf
or
mov
or
pop
push
and
sub
sub
xor
xchg
retf
xor
mov
adc
adc
inc
push
inc
pop
dec
sub
xchg
retf
sbb
push
movs
jb
in
pop
sbb
retf
mov
sbb
push
test
pop
bound
cmp
retf
dec
and
retf
and
and
adc
add
and
stos
aaa
mov
jle
jne
jns
repz
test
pop
push
push
add
call
sbb
dec
fcom
ins
test
enter
popa
inc
push
lea
mov
in
push
js
jnp
js
lock
gs
test
and
push
inc
clc
push
adc
sub
push
add
sbb
test
sub
add
mov
xchg
adc
int3
mov
mov
xor
retf
into
push
loopne
fadd
inc
jl
push
inc
int3
mov
jecxz
or
cdq
and
cdq
cmp
into
(bad)
out
popa
inc
cmp
dec
cmp
movs
mov
cmp
sbb
mov
jg
popa
lea
aas
(bad)
paddsb
lock
sar
shl
in
js
ret
sub
or
pop
shr
cld
or
fdiv
or
dec
cld
(bad)
addr16
or
push
jo
gs
push
dec
outs
ja
sbb
(bad)
fs
jmp
jl
(bad)
bound
push
mov
stos
stos
pushf
ret
push
pop
ror
push
sub
int
inc
pop
add
leave
xor
add
cwde
sti
sub
push
or
push
add
aas
outs
pop
push
add
out
inc
movs
push
imul
adc
and
mov
mov
ja
popa
pop
mov
cmc
pop
in
pusha
inc
fcomp
rcl
lods
mov
inc
adc
pop
stc
sub
add
add
and
add
jl
xchg
ret
add
test
in
sbb
cmps
shl
pop
mov
cmp
aaa
lods
push
jl
sar
fiadd
mov
gs
push
mov
in
inc
pop
jae
enter
inc
lock
int3
xchg
inc
mov
das
pusha
pop
inc
push
inc
mov
push
in
dec
in
rol
inc
pop
cld
test
loopne
int
call
adc
mov
push
mov
enter
ret
and
add
(bad)
les
test
mov
sub
gs
jne
mov
int3
fs
jo
fwait
dec
sub
cwde
pop
test
pop
call
xor
js
jbe
imul
fimul
addr16
fwait
mov
push
lods
xchg
mov
push
repz
jnp
in
push
lock
lock
pop
es
mov
ja
rol
mov
inc
shl
xor
adc
adc
xchg
mov
push
jmp
push
mov
push
mov
sahf
test
cs
mov
mov
mov
rcr
push
pop
sub
pop
out
jp
nop
hlt
dec
and
sbb
mov
xlat
pop
dec
add
cmp
arpl
pushf
imul
outs
or
imul
xchg
sbb
jg
(bad)
pop
leave
jne
and
push
lods
ja
data16
iret
xor
loopne
addr16
push
and
xchg
pop
scas
or
cwde
xchg
jb
nop
adc
mov
adc
repnz
dec
xchg
inc
mov
lock
inc
or
and
scas
cld
sahf
inc
dec
sbb
ss
inc
(bad)
aas
adc
or
add
sldt
sub
data16
cmp
out
cmp
adc
jno
lods
xchg
(bad)
gs
test
push
pop
sub
nop
or
les
das
sahf
mov
mov
into
data16
push
or
pop
mov
and
inc
jle
popa
sub
cmp
push
add
add
inc
jl
lods
dec
loope
lods
jbe
or
mov
imul
push
add
nop
(bad)
sub
mov
push
jo
jecxz
and
or
dec
or
inc
add
out
daa
icebp
mov
inc
gs
ins
fs
dec
arpl
iret
inc
ds
cmovns
mov
xchg
gs
lahf
ror
push
dec
dec
sbb
fs
adc
dec
jne
mov
jmp
shl
(bad)
arpl
ja
fild
test
sbb
inc
xor
or
inc
outs
stos
imul
pop
and
imul
je
mov
mov
ret
dec
adc
in
mov
jo
mov
aad
dec
in
inc
fidiv
leave
fist
aad
jb
push
jae
movs
add
mov
and
pop
mov
xchg
xchg
xor
in
inc
int
jp
jp
movs
inc
arpl
test
dec
push
dec
jne
aam
ror
pop
push
into
or
pop
sbb
or
repz
(bad)
sbb
(bad)
xor
or
icebp
mov
add
mov
mov
inc
inc
test
dec
inc
nop
sbb
xchg
push
mov
pop
loop
out
xor
inc
pop
dec
ins
gs
out
mov
pop
aaa
fmul
or
sbb
and
retf
out
adc
int3
rol
ret
sub
out
or
jns
inc
or
nop
xchg
inc
dec
popa
js
outs
addr16
mov
ins
cmp
test
dec
dec
aas
ins
push
pop
enter
out
and
and
sti
xor
add
add
xor
es
pop
pop
jae
cmp
and
add
xchg
dec
and
sub
aam
cmp
dec
dec
shl
or
sbb
and
int3
push
mov
iret
fcmovnb
jne
dec
cwde
cdq
ins
sbb
xchg
cmp
sub
fist
adc
loope
pop
aam
sub
mov
pop
dec
cli
xchg
scas
adc
iret
in
add
sub
push
ss
mov
stc
cmp
movs
sub
sub
jne
xchg
mov
and
leave
jo
add
cs
cmp
push
xchg
push
mov
lahf
ret
das
push
imul
mov
add
or
xor
and
pop
pop
mov
clc
xor
imul
bnd
xor
xor
or
push
hlt
add
or
push
xor
push
mov
pop
xor
inc
int
enter
cdq
sub
xor
or
lock
fs
xlat
xor
les
add
dec
cs
lods
cmovs
lock
add
sub
fmul
push
dec
aaa
repnz
sub
sti
daa
dec
sub
in
fcom
and
or
enter
fisub
imul
scas
xor
rol
mov
pop
mov
pop
enter
enter
js
je
or
rcl
fcomp
cmp
mov
je
inc
sahf
loopne
add
push
cs
fld
jae
xchg
call
xchg
jle
xor
fs
or
inc
shl
and
in
add
cmp
fadd
add
iret
mov
cmps
jge
stos
test
fmul
adc
cmp
inc
mov
cmp
pop
add
aam
jmp
add
lock
push
mov
inc
or
bound
xchg
(bad)
in
int
inc
or
movs
div
ins
adc
fbstp
dec
aaa
test
or
addr16
gs
mov
test
add
push
xor
sub
and
scas
adc
lods
mov
sub
imul
js
or
adc
add
dec
jae
or
pop
addr16
mov
ins
ja
ja
scas
add
je
cmp
pop
or
repnz
jl
push
and
mov
jb
stc
int3
inc
inc
mov
push
ins
mov
mov
mov
add
xchg
pop
inc
add
mov
lods
imul
adc
and
jle
out
nop
stos
(bad)
cld
mov
fwait
lods
scas
push
test
les
les
mov
mov
paddusb
mov
xor
mov
call
mov
push
scas
jmp
push
mov
xor
jo
div
ret
push
ror
sahf
out
fidiv
sbb
shl
push
int3
push
imul
xlat
push
mov
out
pop
cmp
or
clts
mov
ja
add
add
xchg
jae
popa
in
pushf
mov
ja
add
test
cmp
sbb
cmp
xor
adc
outs
mov
xor
add
dec
add
inc
push
inc
or
bts
add
cdq
dec
scas
xchg
adc
adc
test
ins
inc
add
test
mov
mov
or
mov
repnz
data16
push
lods
pop
add
ds
outs
jae
adc
add
sbb
sbb
pop
and
or
sub
pop
lods
push
push
icebp
jne
push
jb
pop
pop
and
shl
enter
jo
adc
jae
and
push
ins
xchg
cwde
dec
fcom
les
sbb
and
mov
mov
and
fistp
mov
sahf
or
jge
sub
pop
sbb
daa
or
or
sub
jb
jb
sub
loopne
fmul
mov
cdq
cmp
mov
sub
cmp
cs
mov
xchg
adc
push
hlt
push
call
push
xor
mov
inc
xor
enter
fnsave
add
pop
pop
cdq
jo
jae
mov
mov
fwait
inc
pop
enter
fmul
add
shl
and
stos
in
mov
mov
cmp
add
cmp
xchg
test
and
ds
inc
scas
xchg
inc
inc
pop
or
in
cmp
outs
shl
add
lds
pop
or
dec
fadd
cmp
dec
loopne
add
add
cs
add
xchg
es
scas
pop
mov
or
sbb
xor
jns
lar
int3
xor
bound
add
repnz
adc
and
mov
pusha
xor
jmp
mov
pop
inc
adc
int
push
push
cmp
cmp
mov
pop
xor
sti
and
mov
push
rcl
enter
cmps
sbb
bound
push
jecxz
and
xchg
pop
sub
sbb
sbb
adc
pop
add
shr
mov
push
sbb
inc
imul
jne
hlt
and
pop
add
jecxz
mov
xor
scas
fld
push
push
and
jmp
mov
xchg
xor
dec
push
adc
push
lock
fiadd
or
mov
mov
xchg
jl
div
inc
ins
adc
xchg
or
pop
dec
test
lods
pusha
lods
sbb
fisub
rol
or
or
pop
mov
retf
fmul
sbb
mov
into
xor
or
into
sub
push
sub
imul
sub
pop
lods
push
leave
push
mov
mov
mov
dec
xlat
enter
outs
out
or
xchg
dec
test
and
(bad)
xchg
ffree
iret
jg
add
and
add
xchg
mov
das
movs
mov
jmp
mov
les
in
daa
cmp
call
or
adc
xor
shl
push
fs
out
mov
add
add
or
cmp
cmp
mov
mov
enter
add
cwde
mov
and
adc
push
cwde
call
adc
jno
lds
movs
add
push
fidivr
pusha
add
lea
les
dec
or
sub
inc
pop
add
inc
mov
arpl
xchg
adc
cmp
add
inc
add
fild
dec
daa
(bad)
push
fdivr
enter
inc
push
add
xor
ficom
push
cmp
addr16
cmp
push
xor
xor
add
pop
jne
push
cwde
jne
xor
lahf
dec
add
jnp
mov
es
cld
movs
rol
or
cmps
xchg
xor
adc
xor
stos
out
mov
mov
or
xchg
mov
push
pop
fwait
ret
jnp
inc
test
pcmpgtb
lahf
xor
xchg
ret
jae
dec
pop
call
test
sahf
vmread
adc
and
mov
mov
mov
icebp
adc
mov
fbld
xchg
loopne
outs
sbb
ss
push
xchg
popa
mov
or
sbb
add
mov
adc
jae
imul
push
xlat
inc
cmp
xor
push
pop
je
std
sbb
xchg
jns
mov
cmp
or
and
add
clc
sbb
push
into
test
sub
lds
push
push
mov
xor
inc
jl
push
sub
je
sub
and
pop
add
push
push
cmp
cmp
imul
cdq
add
jmp
les
cmp
cmps
mov
sbb
call
sbb
jmp
sub
bound
mov
push
pop
mov
xchg
mov
pop
pop
gs
hlt
movs
js
cld
aas
cmp
(bad)
test
jmp
sahf
cmp
mov
cmp
test
scas
jns
jmp
lock
pop
push
mov
and
push
mov
jl
ret
(bad)
xor
(bad)
jl
sub
fdivr
xor
or
mov
fisubr
xor
sub
sti
add
pop
and
mov
dec
mov
inc
cmp
and
popa
pop
leave
pop
adc
popa
adc
xor
mov
imul
outs
push
call
xchg
push
shl
xchg
scas
loope
test
inc
cmp
imul
retf
pop
mov
cmp
push
popf
pop
sub
test
fsubr
xor
retf
add
out
imul
or
out
dec
push
cwde
cdq
mov
dec
fmul
sub
lea
and
sbb
dec
push
clc
or
pop
repz
test
inc
dec
xchg
push
inc
add
mov
ins
mov
jmp
cdq
add
adc
mov
cmp
jmp
or
push
xchg
inc
popa
jmp
pop
iret
push
outs
adc
test
mov
jmp
push
lds
mov
xor
sub
(bad)
push
je
mov
mov
jp
or
cs
mov
jge
lahf
(bad)
cld
push
icebp
add
add
rcl
jb
add
add
es
add
jge
fwait
and
push
aad
xor
mov
cmp
jo
cmp
aam
pop
cmp
jne
add
and
push
mov
or
bound
push
or
xchg
(bad)
shl
ja
int
aam
mov
cwde
clc
add
rcr
cld
xchg
mov
call
iret
repz
or
jmp
test
cmp
mov
cmp
mov
xchg
ror
stc
dec
mov
mov
mov
mov
add
pop
ficom
sar
inc
ds
test
or
jne
ror
aaa
int3
(bad)
ror
cmp
sahf
mov
jmp
or
cmp
mov
push
fild
or
dec
popa
add
js
adc
jo
bound
(bad)
lods
clc
loope
idiv
push
cmp
sbb
adc
sbb
sbb
pop
in
sbb
lods
(bad)
in
jo
pushf
ss
mov
(bad)
ins
or
mov
call
cli
out
mov
in
sub
jae
jmp
call
test
xor
add
(bad)
mov
lahf
in
outs
dec
mul
popa
mov
push
push
xchg
retf
adc
mov
rcl
adc
jbe
sub
sub
ds
jb
pop
pop
xor
mov
pushf
push
sbb
xor
mov
es
cmp
push
jg
lods
(bad)
aas
loope
ins
pop
cmp
add
xchg
add
xor
inc
cs
cmps
inc
and
and
mov
dec
cmp
mov
test
pop
pushf
sbb
pop
mov
inc
push
or
sub
loopne
or
xor
sbb
imul
sbb
mov
add
cmp
cld
adc
jmp
add
xchg
cmp
call
xchg
sbb
mov
add
dec
stos
mov
popf
ret
in
out
push
imul
or
icebp
aaa
mov
arpl
push
sub
sub
movs
push
das
into
push
nop
pop
lea
xor
push
out
and
inc
inc
je
sbb
popf
ret
xchg
jb
frndint
push
test
xor
(bad)
(bad)
pop
dec
ss
pop
and
jbe
pop
jmp
pop
lods
dec
rdtsc
adc
mov
scas
add
add
inc
and
inc
mov
xchg
inc
mov
adc
jb
xchg
mov
add
je
dec
clc
ja
push
jo
and
(bad)
sbb
call
add
dec
adc
adc
or
stc
xchg
adc
inc
add
cmp
cdq
aaa
jne
cmp
xor
jo
or
dec
int
test
mov
sbb
pop
fiadd
(bad)
out
mov
fadd
retf
ret
out
push
loope
adc
cmp
mov
or
dec
add
leave
enter
or
jne
je
jp
iret
in
mov
inc
dec
sbb
add
sti
or
pop
sahf
mov
lock
imul
fimul
lds
sbb
pop
pop
jns
inc
adc
jge
and
mov
pusha
dec
mov
xchg
shr
push
xor
cmp
data16
jle
mov
mov
mov
mov
jmp
push
add
movaps
push
sub
enter
dec
inc
sbb
jo
push
and
mov
leave
nop
cmps
and
mov
in
inc
imul
in
mov
jp
mov
(bad)
cmps
jno
adc
mov
inc
or
push
pushf
inc
xor
push
in
imul
rol
adc
mov
xor
add
cmp
xchg
es
js
push
push
scas
dec
gs
cmp
seta
sbb
mov
xchg
pop
imul
outs
hlt
jno
sbb
sbb
lock
cld
inc
and
xor
js
fisubr
in
and
bound
or
aam
and
push
pop
push
push
addr16
mov
pop
adc
aas
in
call
inc
fadd
loope
mov
cmp
jmp
add
mov
(bad)
sbb
adc
add
call
rcr
js
inc
and
fdiv
mov
cmp
or
scas
je
rcl
mov
add
add
xchg
cmp
setle
pop
push
and
add
xchg
out
or
adc
leave
jns
add
or
mov
fbstp
mov
jle
jno
jmp
clc
rcl
(bad)
sbb
icebp
nop
shl
cwde
ins
xchg
in
xchg
nop
or
pop
daa
jge
ret
mov
into
mov
mov
adc
les
mov
push
(bad)
fstp
inc
push
lahf
jmp
xor
mov
jne
and
fiadd
xchg
add
sbb
daa
jno
test
test
test
jne
retf
mov
aaa
sbb
jo
xor
cmp
mov
mov
adc
xchg
pop
push
jmp
cs
fisubr
fnsave
mov
loope
adc
dec
push
(bad)
ror
cmp
cmp
sub
sub
test
lods
in
fadd
daa
cmp
push
cdq
ja
ds
jmp
push
add
jo
push
push
xchg
and
test
mov
sbb
cmp
cmps
movs
and
mov
add
sbb
lahf
jne
pop
add
cmp
ja
xor
mov
cmc
dec
sti
dec
aas
mov
xchg
dec
mov
push
mov
inc
leave
cmp
ret
xor
cmp
jbe
(bad)
push
inc
adc
test
repz
pop
call
sbb
daa
call
ror
popf
leave
pop
sub
je
test
rcl
cwde
sbb
xor
jge
rol
dec
ret
mov
lea
push
in
enter
jbe
ret
adc
popf
in
xor
ds
mov
push
adc
jge
xor
in
mov
push
mov
mov
pop
rcr
pop
test
imul
(bad)
add
out
or
mov
ficom
adc
imul
sbb
and
xchg
test
hlt
jl
fs
sbb
fs
fist
or
movs
jbe
or
push
scas
mov
or
sbb
adc
pushf
aad
or
cmp
test
push
sbb
js
ins
mov
cmps
adc
sbb
sbb
mov
xor
pop
mov
shl
jbe
inc
cmp
mov
repnz
adc
dec
hlt
sub
jne
push
jb
cli
test
dec
sub
inc
pop
enter
sbb
add
fistp
and
adc
movs
rol
sub
and
or
fs
pusha
movs
sbb
push
add
jae
test
sbb
xchg
cmp
fld
jl
pop
xor
movnti
mov
xor
jbe
test
enter
cdq
cmp
adc
dec
adc
push
out
mov
mov
jle
popf
pop
adc
push
cwde
cmp
fld
xor
sbb
je
add
pop
rcr
cli
cmp
jne
(bad)
imul
add
popa
aam
(bad)
aam
int3
dec
gs
jne
pop
add
add
and
mov
lahf
xor
push
add
cmp
scas
pop
pop
push
or
cmp
pop
jns
fisub
and
dec
sbb
xor
out
mov
arpl
mov
add
push
jo
mov
push
sub
xor
pushf
add
(bad)
cmps
xor
sub
sbb
and
nop
jmp
xor
pop
inc
mov
pop
das
lahf
daa
add
mov
loope
inc
dec
repz
pusha
cmps
push
add
mov
aas
or
ror
icebp
(bad)
lods
enter
mov
xchg
test
call
xor
jo
rcl
sbb
sbb
xchg
jne
mov
dec
mov
dec
xor
add
(bad)
jmp
sbb
xchg
pop
jmp
xchg
sbb
es
add
mov
sub
nop
shl
adc
pop
add
cmp
mov
daa
je
in
rcr
dec
lods
inc
mov
lds
push
jnp
or
mov
sbb
sar
dec
add
inc
ror
dec
daa
ja
movs
push
or
xchg
dec
into
(bad)
jge
inc
push
and
mov
adc
call
cs
clc
clc
or
inc
xor
xor
sub
movs
cmp
adc
mov
aaa
test
add
xor
inc
xchg
scas
push
or
stc
or
adc
mov
sub
sub
jae
movs
inc
jmp
jno
imul
xlat
inc
sbb
leave
mov
and
in
movs
arpl
and
fdiv
addr16
sbb
daa
ret
adc
xchg
(bad)
fdiv
lods
xlat
jmp
test
and
jne
iret
inc
and
mov
aaa
cmc
movs
inc
dec
and
pop
cmps
inc
fild
xlat
es
push
lea
add
call
jne
or
sub
leave
cmps
cmps
mov
shl
jae
rcl
fmul
pop
fldcw
xlat
sub
cmp
jecxz
jmp
jecxz
je
sar
jg
sbb
pushf
test
xchg
pop
sahf
mov
loope
pop
(bad)
in
or
pop
(bad)
mov
aaa
or
xor
test
xor
call
loopne
test
and
sti
ror
sub
sbb
and
or
(bad)
mov
and
test
nop
aam
jns
std
sbb
add
and
pusha
sub
cdq
rcl
mov
repnz
mov
mov
or
xchg
and
or
sbb
jle
push
jno
cmp
and
fs
sbb
es
sahf
jo
movs
mov
or
movs
push
iret
cmp
jg
cmp
jo
xor
movs
dec
mov
js
xchg
sahf
and
dec
icebp
dec
fcmovnbe
push
pop
lock
xor
sbb
imul
or
inc
push
clc
jne
jmp
in
inc
scas
adc
push
call
scas
daa
call
pop
jae
pop
rol
xor
adc
mov
push
aas
fnsave
loop
inc
inc
lods
inc
fmulp
lock
inc
sub
loopne
(bad)
sub
(bad)
pop
mov
mov
mov
xchg
test
in
cmp
cmp
or
dec
in
or
fdivrp
inc
(bad)
imul
mov
movs
xchg
pop
pop
cmp
imul
cmp
lock
adc
sbb
push
adc
fwait
clc
xlat
sbb
and
lahf
das
mov
inc
or
nop
cmp
leave
mov
mov
fs
xchg
sbb
xor
das
xchg
mov
inc
sbb
lock
or
cmp
mov
daa
imul
test
shl
and
pop
cmp
xchg
and
cmp
aam
in
and
mov
test
add
sub
(bad)
(bad)
cmp
ret
xor
jns
jmp
mov
cmp
dec
or
ins
mov
nop
shl
call
int3
xchg
cld
jnp
inc
push
les
outs
and
push
mov
ret
cmp
cmp
mov
jp
jmp
fs
pop
call
dec
in
add
stc
cmp
sahf
cmps
mov
imul
js
add
inc
cmp
outs
ret
adc
cmp
and
adc
inc
push
popf
jnp
inc
lahf
and
xor
mov
add
jae
nop
test
or
inc
push
(bad)
(bad)
jle
jge
inc
add
cmp
dec
push
iret
cdq
dec
add
mov
pusha
jno
or
shr
jno
(bad)
or
pop
adc
xchg
dec
test
nop
mov
and
push
aas
cmp
inc
dec
sbb
and
mov
dec
xor
and
mov
je
push
sub
(bad)
pop
xchg
or
inc
and
push
mov
mov
es
xchg
push
loopne
jle
push
add
dec
xchg
or
aas
fs
clc
cmp
jle
adc
and
imul
jne
movs
neg
rcr
int
mov
(bad)
sub
test
jns
test
int
mov
mov
std
mov
mov
jge
add
xchg
ret
xchg
test
retf
jg
mov
push
add
or
jmp
inc
mov
cmp
adc
outs
mov
adc
cmp
mov
je
fsubr
adc
adc
test
add
stc
jne
and
or
xchg
pop
mov
fbstp
jl
enter
and
pop
dec
dec
push
push
loope
jmp
in
jae
mov
lock
movs
inc
xlat
mov
adc
cmp
sahf
mov
jo
xchg
xchg
jge
inc
and
add
imul
imul
rcl
in
mov
mov
push
sub
addr16
inc
pop
mov
rcr
dec
add
in
dec
xor
(bad)
sbb
mov
call
jmp
mov
inc
sbb
pop
cmp
popf
sbb
dec
push
and
and
nop
aaa
sub
stos
mov
mov
adc
xchg
aaa
invlpg
scas
or
inc
add
int3
movs
jle
dec
cmp
inc
push
add
mov
jle
shr
and
mov
ret
mov
adc
call
push
add
jecxz
xchg
(bad)
cs
outs
nop
dec
je
pop
or
add
rcr
arpl
sbb
daa
inc
push
add
add
jmp
inc
push
cmp
jmp
jmp
aaa
jo
push
out
or
add
sti
clc
xor
jb
pop
mov
sub
mov
mov
mov
push
shr
xor
sbb
nop
xchg
loopne
mov
xchg
cli
pop
cmc
jae
fdiv
lods
mov
ss
and
dec
jnp
add
push
cmp
lea
sbb
std
cmp
jge
and
mov
imul
das
xor
mov
lods
aam
mov
pop
rcl
mov
dec
and
rcr
movs
jo
out
cmp
(bad)
daa
int
callw
mov
xchg
jne
aaa
mov
add
rcl
clc
and
movs
mov
add
aad
pop
imul
mov
pop
loopne
xor
sbb
cmps
cmp
test
sub
or
inc
xchg
mov
cwde
(bad)
xor
or
or
jge
aad
dec
add
addr16
mov
repnz
mov
test
popa
in
push
push
lea
iret
jl
cmp
push
add
sub
add
lock
jb
mov
sub
popa
cmc
dec
dec
jbe
xor
lea
jne
or
clc
ret
adc
xchg
sub
add
cmp
adc
and
mov
mov
xor
pop
push
pop
jp
movs
sbb
call
push
sub
jg
mov
jb
sub
xor
in
fbld
push
lea
push
pop
clc
xchg
sub
dec
imul
add
pusha
push
jne
xor
inc
and
adc
adc
pop
imul
dec
sbb
adc
retf
mov
mov
popf
mov
xchg
jb
lods
mov
xor
push
rcr
add
je
das
cmp
xor
fsubr
xrelease
push
call
add
inc
ret
mov
mov
mov
sub
or
loop
(bad)
mov
xchg
sub
shr
inc
inc
xchg
mov
jnp
fdivr
pop
sub
pusha
adc
mov
adc
and
mov
inc
add
dec
mov
mov
sbb
sub
into
rol
rol
or
shl
sbb
mov
add
mov
xor
cmp
jae
jne
push
aam
sbb
loopne
or
imul
jle
sar
mov
lods
adc
push
xor
test
adc
mov
(bad)
sub
aas
sbb
add
test
pop
stos
xor
pop
xor
pusha
(bad)
loop
xchg
add
aaa
fistp
mov
push
xchg
xchg
and
mov
pop
ror
xchg
push
or
je
test
jmp
lock
push
bnd
clc
adc
daa
jmp
lock
add
nop
pop
and
inc
push
bound
out
push
cdq
fs
push
inc
jb
add
retf
and
xchg
fist
lea
push
aam
xchg
mov
push
mov
iret
nop
pushf
lods
mov
pop
cmp
addr16
jb
or
aas
and
test
inc
add
in
push
jmp
shrd
dec
sub
push
test
jmp
shl
mov
aaa
pop
and
std
sub
and
pop
outs
jae
mov
in
mov
scas
xlat
in
cmps
mov
inc
add
mov
add
sar
test
leave
adc
cmp
aaa
or
mov
xchg
movzx
mov
aas
cmp
jbe
(bad)
rcl
dec
jnp
cmp
lock
jg
mov
vmwrite
jb
in
loopne
xchg
inc
push
loopne
cdq
pop
mov
push
lods
push
pop
popa
imul
jns
mov
xor
inc
dec
sub
loope
inc
push
ja
and
adc
stc
aaa
mov
fcom
cld
rol
es
push
xchg
and
inc
int3
inc
movs
xor
adc
sub
les
mov
xchg
and
cmp
push
mov
adc
data16
sbb
push
lahf
ret
push
cmp
int
mov
and
and
clc
push
mov
adc
push
inc
mov
pop
inc
cmp
add
popa
adc
enter
inc
js
bound
pop
fisubr
pushf
mov
ret
rol
and
or
stos
mov
std
mov
loop
movs
add
ret
inc
rcr
sub
cmc
fcom
(bad)
mov
xchg
xor
test
mov
xchg
and
xor
xchg
lods
ffreep
popf
adc
jae
and
inc
sbb
dec
jae
and
add
pop
inc
push
sbb
xor
and
int3
jne
in
in
dec
mov
adc
inc
or
lahf
ret
or
(bad)
mov
mov
scas
jo
addr16
test
push
mov
cmps
lock
cmp
jne
or
loope
adc
jne
shr
dec
pushf
add
cmp
mov
out
mov
cmp
imul
pop
jbe
add
cmpxchg
ret
mov
in
shr
push
jecxz
in
std
dec
aaa
dec
inc
sub
sub
and
sub
push
pop
sbb
push
fnstenv
cmp
push
sub
and
xor
sub
mov
pop
mov
xchg
xchg
je
cmps
adc
adc
rcl
jb
daa
or
pop
jns
mov
mov
test
(bad)
xlat
push
mov
xor
test
and
enter
jbe
push
add
test
push
aad
xchg
cmp
dec
mov
mov
push
lock
loope
mov
(bad)
sub
mov
adc
sub
test
(bad)
stc
xchg
sub
jge
lock
inc
ins
jo
inc
call
mov
sbb
push
mov
mov
clc
adc
jbe
adc
lods
scas
jl
cmp
pop
mov
mov
(bad)
xchg
aaa
ror
and
sbb
cmp
enter
dec
adc
leave
(bad)
ret
jge
or
push
mov
imul
fidivr
xor
or
and
je
mov
or
or
xor
cmp
imul
imul
push
add
gs
mov
les
inc
lock
inc
adc
mov
adc
repz
sbb
inc
adc
push
push
and
sbb
push
arpl
dec
nop
mov
outs
out
inc
push
xchg
and
jb
mov
mov
pushf
sbb
or
mov
xor
sbb
nop
pop
mov
pop
push
dec
dec
dec
inc
dec
push
add
dec
sbb
mov
jge
imul
and
xor
aaa
xor
dec
or
inc
aas
inc
cwde
cmp
push
lods
inc
scas
loopne
pop
mov
fmulp
test
mov
hlt
mov
cmp
jne
sub
jne
ins
dec
call
ins
imul
aas
or
cmp
pop
stos
jbe
cmps
in
retf
push
in
push
adc
movs
or
out
or
add
icebp
lahf
test
les
sub
rol
xchg
xchg
sub
push
push
xchg
js
in
sbb
call
bound
(bad)
xchg
add
xor
retf
cs
dec
std
sbb
sub
cmp
fidiv
shl
or
or
inc
inc
test
add
retf
(bad)
xlat
push
les
fistp
icebp
push
(bad)
(bad)
scas
loopne
adc
movs
test
daa
push
jns
inc
push
fcmove
add
and
std
pusha
jne
mov
adc
clc
cwde
or
or
and
jo
dec
loope
repnz
nop
int3
out
ss
sub
add
sahf
push
sbb
adc
dec
hlt
jns
shl
add
aaa
xor
add
pusha
mov
fild
sbb
pop
push
test
add
mov
add
push
xchg
shl
sbb
pop
pop
sub
popa
dec
pop
(bad)
fst
add
add
je
sub
ins
popa
pop
and
outs
adc
retf
or
(bad)
add
(bad)
ds
adc
add
inc
sub
cs
test
repz
idiv
cmc
pop
mov
mov
sar
lahf
mov
xor
pop
and
push
and
test
mov
and
or
push
jo
test
add
dec
leave
push
clc
jl
sub
push
pop
pusha
jo
fs
sbb
imul
daa
or
into
push
inc
fstp
clc
hlt
clc
pushf
in
or
stc
and
adc
xor
shr
iret
inc
stc
add
test
push
or
shl
mov
sti
fdivr
cmp
cli
cs
push
clc
pop
dec
jae
push
or
ds
lfs
out
pop
sub
fisubr
mov
jo
rol
sub
or
xor
ss
mov
pop
cld
ds
fild
repnz
add
inc
xor
push
push
out
and
nop
(bad)
xchg
shl
pop
sub
adc
mov
add
test
add
jp
ror
int3
pop
stc
mov
inc
xchg
adc
jbe
scas
inc
adc
adc
jo
push
hlt
imul
lods
push
ins
adc
adc
sahf
cmps
jne
cld
push
pusha
ja
push
mov
out
jns
lock
rcl
adc
sar
dec
dec
in
nop
out
adc
cmp
adc
push
nop
sbb
pop
pop
pop
jbe
or
aas
inc
jne
fnstcw
shr
retf
retf
dec
xor
ins
bound
aam
ja
inc
pop
jg
test
mov
push
or
mov
or
(bad)
fisubr
sbb
in
arpl
pusha
jmp
or
pause
xor
fs
dec
add
jbe
or
jne
ins
loop
loopne
and
add
psubusb
sub
imul
sti
nop
adc
add
add
mov
push
lahf
add
cmp
or
add
adc
retf
aam
imul
mov
test
fld
test
(bad)
jae
jns
cwde
test
test
pop
xchg
ret
stos
jmp
jecxz
cdq
mov
aam
mov
pop
adc
fld
adc
push
inc
pusha
movhps
xor
push
adc
dec
mov
xor
fcom
cmp
add
rcl
jl
aam
mov
xor
sub
inc
or
add
inc
daa
stc
pushf
pop
ror
outs
lahf
xchg
dec
es
add
and
aad
or
inc
repnz
push
sbb
mov
and
fwait
mov
inc
pop
retf
adc
hlt
ret
add
cmp
push
iret
pusha
(bad)
out
psubusb
mov
fadd
add
(bad)
(bad)
cdq
test
mov
and
add
icebp
add
mov
iret
mov
add
add
fld
call
xchg
(bad)
emms
push
xor
push
pop
push
iret
pop
pop
or
or
pop
and
scas
or
lods
mov
push
mov
pop
cmp
add
aam
adc
punpckhbw
or
xor
mov
xor
cmps
jecxz
loop
inc
dec
or
inc
push
icebp
(bad)
mov
(bad)
jl
cmp
in
(bad)
or
or
inc
push
popa
jb
gs
fcom
push
leave
xor
outs
arpl
inc
mov
rol
push
xor
fxch
out
or
push
pushf
not
outs
aad
push
not
fld
aaa
inc
add
mov
xchg
gs
mov
scas
mov
add
jns
jmp
fnstcw
ret
stos
jecxz
paddusb
add
outs
or
mov
aam
into
xchg
mov
dec
or
pusha
fisttp
or
scas
mov
and
adc
mov
pop
sahf
jnp
repnz
inc
add
(bad)
mov
fmul
add
push
and
inc
sbb
in
jb
in
adc
mov
(bad)
fist
leave
rcr
xlat
gs
add
scas
out
and
cmp
js
sbb
sbb
cld
movs
jns
fcom
push
push
cdq
jge
leave
add
sbb
push
test
unpckhps
or
pop
sub
setl
push
push
rol
add
sbb
jmp
fucom
in
adc
mov
push
sub
mov
mov
mov
add
lock
push
out
loopne
pop
push
pop
add
cmp
mov
inc
ss
repnz
add
inc
add
ins
ins
xor
nop
push
xor
mov
push
mov
push
add
xor
mov
and
push
inc
and
div
js
out
push
movs
mov
inc
aas
or
push
clc
es
fisub
loopne
pop
sti
add
push
add
inc
add
add
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
(bad)
(bad)
push
adc
sbb
cmp
inc
mov
inc
fcomip
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
(bad)
(bad)
(bad)
(bad)
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
push
leave
sar
sar
sar
sar
sar
iret
push
dec
in
loopne
cld
dec
dec
dec
icebp
dec
dec
push
jns
jnp
cmp
push
cmp
into
test
ss
cmp
sbb
jns
iret
mov
clc
add
aas
dec
repz
fcomp
pop
inc
push
pop
jns
out
jns
je
movs
inc
mov
dec
push
mov
shr
addr16
dec
push
ins
aaa
fdiv
push
in
sub
jl
in
cmps
sub
mov
inc
inc
sbb
stc
xor
nop
push
push
sub
pushf
sub
sub
cs
inc
jle
dec
jnp
inc
les
sahf
clc
cwde
fidivr
mov
pop
cmp
cs
out
aam
imul
mov
sahf
call
dec
sti
sahf
ror
push
adc
push
mov
mov
sbb
fwait
mov
xlat
push
inc
or
or
bound
add
je
sub
cmp
cmps
push
cmp
or
cmp
add
lahf
add
aas
dec
adc
or
xor
scas
push
js
cmp
add
push
ja
mov
aas
inc
dec
push
xchg
sbb
sub
jo
pop
or
shr
in
loop
mov
lods
sub
add
push
cmp
sub
outs
push
call
loope
mov
loop
add
rol
in
enter
inc
hlt
ret
sbb
adc
call
pop
mov
or
inc
cld
sahf
sbb
or
push
pop
add
sbb
sahf
inc
or
xchg
inc
push
push
mov
and
adc
inc
and
stos
mov
dec
jb
push
dec
popa
je
adc
cmps
or
test
xor
les
adc
in
push
or
ss
push
cld
ds
dec
ja
outs
add
jbe
jge
sahf
int
add
bound
or
nop
in
dec
ins
adc
rcl
adc
lods
hlt
cwde
fs
pusha
jecxz
jb
aam
pop
xchg
pop
pop
ds
gs
bound
bound
mov
inc
movs
push
or
dec
imul
jle
cmp
ins
es
mov
lock
add
outs
sbb
xchg
mov
jns
sbb
fwait
push
cwde
pusha
mov
cmp
pop
xchg
jl
add
pop
sub
sbb
les
(bad)
ds
ds
jbe
push
mov
push
inc
js
in
or
inc
mov
inc
xchg
test
out
inc
cdq
mov
add
xor
add
or
or
jbe
adc
push
test
cli
adc
inc
clc
fild
add
add
add
sub
mov
test
add
add
cld
push
or
dec
cld
add
add
mov
mov
mov
mov
mov
or
loope
or
scas
aaa
mov
mov
mov
mov
and
mov
or
(bad)
push
add
add
push
mov
xor
cmp
fadd
sbb
mov
(bad)
inc
inc
inc
inc
inc
inc
fwait
shl
mov
or
mov
sub
fwait
push
mov
mov
mov
fstp
pop
push
mov
mov
ins
push
or
int
jns
jl
mov
lahf
out
cmp
aam
outs
in
jo
repz
push
mov
dec
js
jns
pusha
jp
iret
shr
fdivr
sub
jbe
in
repz
pop
xchg
push
sbb
jne
cmp
ins
push
inc
repz
jge
push
push
cmps
push
je
repz
jl
mov
sub
push
jnp
iret
repz
rcl
idiv
lods
push
and
nop
and
sahf
cwde
mov
shl
xchg
or
sbb
mov
jbe
js
push
je
fs
push
cmps
cmp
fmul
push
add
push
movs
push
adc
rcl
fisub
les
push
int3
cmp
js
jns
fadd
jl
jo
sar
int
ss
data16
mov
lods
inc
out
lea
pop
es
and
inc
hlt
or
fwait
and
add
push
pop
jmp
aad
mov
jmp
adc
daa
xchg
in
movs
rol
movs
sub
getsec
bound
pop
loope
ret
bound
xchg
ret
sbb
lods
jnp
popf
inc
aas
jmp
or
ret
sbb
mov
cmp
popf
dec
mov
mov
pop
loopne
add
adc
mov
sub
nop
les
pushf
mov
call
and
and
xlat
sbb
mov
sahf
adc
fsubr
lods
add
nop
jne
lahf
or
inc
push
fs
or
fs
push
fs
and
les
cmp
mov
mov
cmp
repz
bound
mov
bswap
repz
mov
jmp
pop
add
cs
dec
add
paddsb
push
add
ss
sub
fldlg2
clc
push
push
push
clc
scas
outs
or
adc
cs
mov
iret
data16
rol
mov
mov
add
add
add
rol
mov
sti
dec
lds
pop
test
shl
or
scas
cmp
sbb
pop
adc
in
inc
lock
inc
adc
aaa
pop
out
xor
shl
aam
dec
in
(bad)
out
pop
int3
or
sub
stc
dec
in
pop
imul
or
dec
sub
pop
out
cmp
xlat
out
mov
xchg
pop
pop
xor
clc
sbb
mov
and
lods
sub
adc
mov
add
push
and
popf
mov
sbb
fld
push
sub
sub
push
jb
shr
inc
mov
push
add
ss
push
inc
sbb
jo
mov
hlt
movs
js
jne
je
jne
lds
mov
jae
movs
mov
in
dec
jnp
imul
mov
rol
xor
jno
adc
(bad)
push
loopne
or
jge
test
sbb
int
(bad)
sbb
push
push
pop
push
or
lods
cmp
icebp
nop
pop
mov
or
sub
pop
adc
lock
test
dec
inc
cmps
or
pop
add
push
xchg
shl
push
push
das
cwde
sbb
inc
push
inc
daa
push
jo
pop
outs
pop
add
or
sub
pop
ret
popa
clts
mov
xchg
dec
sbb
dec
push
jo
imul
pop
mov
(bad)
dec
push
popa
push
mov
mov
inc
add
rol
ins
or
push
xchg
inc
dec
outs
daa
fidivr
pusha
mov
or
pop
or
sub
mov
jno
or
inc
or
aaa
addr16
xchg
sub
jmp
stos
out
jl
push
enter
lea
add
or
shl
jle
loope
sbb
or
adc
jb
add
mov
js
xor
sar
out
sub
adc
rcl
mov
sub
je
scas
nop
hlt
pop
and
adc
jo
sub
xlat
fs
inc
sbb
or
inc
sub
fild
add
test
pop
adc
and
jge
adc
add
cmp
jl
ror
movs
ret
rcl
(bad)
(bad)
jbe
sbb
pop
xchg
inc
ret
retf
ret
ficom
inc
fisubr
inc
loopne
mov
fcomp
add
dec
cmp
add
mov
lea
jmp
aam
cmps
jo
dec
cmps
add
sbb
jmp
and
out
mov
aam
call
dec
jne
inc
xor
xlat
push
retf
push
mov
xor
sbb
add
mov
or
mov
mov
or
sbb
cmps
imul
adc
call
and
and
sub
pop
test
cmc
push
nop
xchg
or
and
cmps
xchg
test
loope
popa
and
adc
add
mov
mov
mov
and
xchg
(bad)
not
inc
jge
cli
test
in
je
pop
inc
cld
mov
mov
int3
out
sub
mov
or
add
pop
mov
jo
sbb
sbb
cmp
enter
adc
mov
dec
mov
lods
daa
icebp
fwait
sbb
jne
mov
xor
lods
(bad)
adc
push
dec
ret
sbb
test
fild
xchg
stos
xchg
and
mov
or
add
fstp
add
xorps
test
jmp
push
add
add
repz
dec
pushf
test
or
test
xlat
jmp
adc
cmp
and
cmp
call
or
ret
xchg
add
push
inc
sub
inc
pop
cmp
add
push
mov
fld
xor
popa
and
adc
mov
fbstp
inc
dec
sbb
iret
aaa
and
sbb
push
jp
and
es
pusha
pop
dec
pop
std
retf
sbb
xchg
ins
add
pop
(bad)
push
gs
jecxz
les
inc
mov
(bad)
(bad)
or
or
test
iret
inc
dec
lds
xchg
pop
adc
dec
pop
test
push
cmp
aaa
(bad)
imul
push
push
retf
pop
push
ins
and
sub
jnp
mov
jns
pop
push
pop
pop
inc
inc
retf
inc
fidiv
mov
jmp
inc
retf
icebp
lock
add
test
sbb
sbb
sub
loopne
or
or
sub
inc
rol
xchg
mov
push
outs
daa
add
(bad)
dec
or
and
and
dec
rcr
rol
inc
inc
pop
daa
or
mov
dec
or
sbb
daa
ficomp
ret
cwde
ja
pusha
dec
pop
and
(bad)
mov
mov
cmp
mov
pop
xor
and
(bad)
or
ja
add
mov
mov
mov
sar
jb
jne
fs
(bad)
aaa
mov
jmp
cmp
jne
scas
jl
inc
add
or
xlat
(bad)
xlat
loope
retf
jmp
out
lock
push
shr
mov
(bad)
in
sti
popa
or
retf
loopne
add
xchg
retf
sub
cmp
xchg
repz
lea
mov
jge
cmp
(bad)
mov
lock
inc
je
or
add
pop
movs
in
sub
jnp
lods
mov
sub
or
dec
icebp
in
clc
lods
push
imul
test
lock
adc
push
adc
xchg
lods
in
daa
cmova
jmp
adc
dec
or
xchg
sar
dec
inc
push
inc
in
sub
sbb
gs
add
and
mov
sbb
push
int
pusha
sub
or
sub
dec
cs
outs
add
in
(bad)
mov
js
(bad)
cwde
outs
sub
jge
or
pop
cmp
pop
jmp
jg
js
test
mov
xor
scas
mov
or
and
pop
mov
jnp
jg
push
rol
pop
push
cmp
jge
xchg
lea
jp
jl
rcl
(bad)
push
(bad)
mov
aas
xor
sbb
xor
and
cmps
shr
jle
inc
jo
jmp
xor
daa
xchg
push
add
(bad)
fisub
dec
lds
fmul
pop
push
mov
loopne
jo
test
and
cmp
adc
and
mov
mov
cmp
push
lahf
div
or
push
(bad)
cmp
das
mov
sbb
inc
jne
and
(bad)
cmp
mov
stc
shl
loope
cmps
sub
xchg
je
cmp
sbb
pop
dec
xor
sub
sbb
xor
xchg
into
movs
lock
test
pop
jbe
fimul
push
add
or
xor
push
fild
lock
mov
dec
push
push
pop
inc
imul
je
add
jmp
or
xchg
cmp
xchg
push
adc
xchg
cs
mov
inc
out
sub
rcr
lea
fucomp
xchg
scas
ja
or
out
cmps
mov
mov
(bad)
retf
or
inc
add
lea
pop
shr
jno
fisubr
fdiv
test
(bad)
clc
push
push
xchg
shl
aad
pop
or
retf
ja
inc
mov
jae
cmp
js
push
(bad)
adc
fs
pop
adc
aam
sbb
test
mov
out
ds
arpl
out
sbb
add
shr
or
adc
cli
test
repz
popa
cmps
mov
adc
sub
pop
fstp
out
dec
test
dec
jge
mov
sub
mov
mov
fwait
sub
xor
cmp
lock
es
sbb
push
cld
push
mov
mov
lea
mov
add
into
mov
icebp
jmp
xchg
add
xor
pop
sbb
pop
sti
cmp
je
jmp
ins
in
js
cmp
out
cmp
push
sub
adc
or
jbe
mov
inc
or
jmp
cmp
lds
out
xor
or
pop
out
mov
sbb
mov
mov
(bad)
xor
and
xor
push
push
test
loop
add
std
adc
cmp
pop
inc
mov
bswap
mov
imul
fcmovnb
ds
adc
pop
pop
test
mov
sbb
mov
add
sub
fcmovb
mov
sbb
add
push
cmp
(bad)
out
pop
xchg
clc
fimul
pop
and
lea
rol
and
adc
fst
xor
push
jno
aam
test
les
xor
retf
repnz
sub
jnp
add
sbb
stos
xor
xor
js
sub
daa
mov
call
or
pop
aam
jbe
imul
mov
jmp
aaa
cmp
push
dec
mov
lea
out
and
js
or
stc
mov
mov
loopne
xor
cmp
mov
or
(bad)
clc
pop
push
stc
fstp
fwait
jmp
inc
and
push
xchg
pop
pusha
out
and
retf
sbb
jns
sub
imul
or
(bad)
call
push
pusha
and
adc
xor
adc
sbb
mov
jmp
pop
sub
add
test
mov
sbb
pop
call
jb
int3
push
arpl
call
and
loopne
or
dec
neg
inc
push
pusha
movs
jmp
inc
cmp
mov
popa
push
mov
mov
lods
aaa
xchg
test
cs
ins
or
popf
mov
dec
or
fbstp
(bad)
cld
shr
inc
adc
retf
shl
mov
sbb
and
pop
call
dec
mov
pushf
push
push
sub
inc
sub
inc
push
dec
jmp
jnp
xchg
nop
scas
in
or
sti
pop
mov
inc
push
call
scas
xor
push
dec
sub
add
inc
add
pop
retf
mov
pop
jno
dec
or
imul
jo
pop
hlt
jne
xor
cmp
adc
lods
lds
or
add
int3
ja
bound
into
push
push
jne
cmc
arpl
or
ja
sbb
es
icebp
jp
sub
lahf
sbb
ret
aas
push
add
inc
pusha
push
in
clc
mov
(bad)
ds
inc
cmp
add
mov
(bad)
ins
add
cmps
fwait
test
in
jmp
adc
inc
xor
adc
sbb
data16
inc
cdq
sbb
es
ret
sub
push
loop
mov
cmc
leave
mov
loopne
xlat
cmp
fucomp
cwde
push
adc
loop
outs
aaa
cli
jmp
and
sbb
test
mov
js
adc
jbe
mov
arpl
in
pop
sbb
(bad)
push
pop
outs
je
test
stc
dec
add
adc
rol
test
or
add
jmp
or
inc
sbb
gs
mov
add
xlat
sub
jae
pop
pop
pop
mov
add
jo
add
sub
xchg
(bad)
xchg
or
ror
mov
jmp
es
add
and
adc
or
xchg
aaa
cmp
mov
cmp
pop
and
stos
mov
and
movs
add
not
outs
adc
mov
xchg
dec
fidivr
mov
and
ins
test
sub
mov
jns
adc
cld
shl
pop
push
sbb
ret
jecxz
fcmovbe
lods
mov
pop
xor
and
inc
faddp
ins
nop
xor
jno
mul
add
jne
add
(bad)
scas
cli
movs
imul
lds
xchg
ss
push
loopne
sbb
loopne
(bad)
imul
cmp
dec
and
loopne
and
push
and
lods
push
(bad)
mov
cmp
xor
das
push
adc
sti
sub
push
or
lock
ja
cmc
out
iret
lock
dec
ds
or
jg
inc
popf
dec
ins
cld
fst
mov
aas
jnp
hlt
test
std
xor
std
aam
jmp
test
mov
xchg
and
cmc
mov
fcomp
es
int
ja
sub
out
inc
and
pusha
into
imul
popf
aad
std
or
lea
push
pop
add
xchg
mov
popa
pop
dec
outs
js
inc
repz
pop
gs
or
jns
pop
xor
les
data16
cwde
pop
lea
and
sbb
add
sbb
or
fstp
or
jb
pop
push
adc
and
pop
jbe
adc
rol
push
push
sub
push
ret
push
pop
ja
jae
cmp
jl
mov
sub
adc
icebp
pop
fist
or
inc
movs
neg
push
mov
mov
lahf
pusha
mov
xor
mov
adc
dec
ror
adc
pop
or
shl
out
ret
inc
jecxz
inc
test
out
pop
jmp
cmp
je
cdq
fcmovnu
jno
or
adc
pushf
(bad)
jge
inc
call
or
adc
inc
fst
and
pop
shl
sar
fs
jbe
or
push
ins
loop
ficomp
jecxz
hlt
inc
lds
dec
add
fmul
jmp
in
lods
in
pop
adc
nop
sbb
pop
inc
adc
fadd
push
xor
and
adc
pop
add
and
mov
push
jl
adc
xchg
les
inc
iret
xchg
test
test
xchg
jns
add
mov
stc
pop
int3
test
add
add
inc
popa
cmp
add
add
pusha
mov
outs
retf
nop
mov
pop
and
push
xlat
out
push
add
out
inc
add
pop
outs
add
pop
inc
rol
cld
push
icebp
test
adc
fldln2
je
adc
pop
mov
rol
(bad)
jecxz
pop
cmp
stos
pop
ret
loopne
mov
jbe
shl
push
pushf
mov
sbb
outs
aam
sbb
sub
push
jcxz
cmp
gs
mov
dec
adc
push
fild
cmp
and
(bad)
push
pop
das
push
cwde
sub
sub
shl
jg
(bad)
and
loopne
add
in
xchg
dec
jns
test
pop
xchg
adc
inc
and
or
pusha
or
xchg
(bad)
jne
mov
mov
cmp
cmp
push
pusha
loope
js
add
scas
cmp
push
and
mov
nop
xor
test
jnp
lea
fimul
adc
pop
cmp
mov
enter
stc
les
push
push
(bad)
mov
fild
loopne
mov
popa
adc
jmp
shl
sbb
movs
xor
inc
jo
imul
push
add
pop
pop
in
not
fwait
pop
sbb
add
jp
cmp
jl
inc
out
xor
push
add
aaa
loope
mov
call
xlat
push
neg
adc
aas
adc
stos
and
cmp
(bad)
cmps
push
or
ret
inc
mov
cmps
std
sub
xor
cmp
ins
imul
jae
add
movs
sbb
pop
jmp
sbb
cs
and
cmp
(bad)
xor
and
dec
push
sbb
jnp
inc
movs
loopne
dec
push
pop
mov
ins
xlat
fist
arpl
loopne
es
neg
mov
(bad)
pop
loop
rol
push
push
push
js
dec
pop
cmps
lds
ror
fwait
jmp
pop
dec
fist
out
js
pop
fdivr
push
mov
sub
pop
imul
pop
fsub
push
or
outs
ss
arpl
bnd
or
mov
data16
(bad)
mov
loope
ins
and
mov
inc
or
inc
pusha
add
pusha
repnz
push
cmp
mov
sub
test
xor
push
pop
push
cwde
in
jo
mov
ds
sbb
ret
push
xor
push
inc
clc
es
cli
add
add
sbb
sbb
or
adc
int3
aaa
xlat
mov
inc
call
test
repnz
mov
or
jb
pop
and
and
cmps
or
or
jp
out
cmp
or
out
xor
cmp
imul
mov
mov
add
pop
xor
js
jp
xchg
clc
leave
mov
xor
jbe
jne
or
jg
adc
lods
pop
(bad)
push
je
add
xor
ror
push
out
dec
push
aaa
adc
shr
out
ret
cs
dec
and
dec
mov
dec
push
push
dec
dec
inc
mov
or
test
or
out
sar
and
sub
adc
or
jb
inc
jbe
jnp
jne
test
dec
jne
push
or
cwde
xchg
and
push
push
push
push
repz
mov
sub
inc
inc
mov
mov
lds
cld
retf
inc
add
push
mov
adc
dec
adc
jle
pusha
add
cli
imul
sub
test
mov
je
dec
mov
cmp
cmp
xchg
rol
push
or
sbb
mov
dec
cs
ja
cmp
push
adc
adc
sar
or
mov
sub
xchg
dec
or
dec
mov
nop
mov
fs
sub
push
out
imul
cmp
and
(bad)
push
adc
cs
jg
pop
and
and
cs
push
pop
data16
(bad)
push
sbb
inc
dec
das
pop
dec
xor
add
shr
cs
(bad)
rol
dec
mov
jbe
rol
mov
adc
push
retf
inc
dec
add
scas
mov
dec
push
xchg
dec
add
or
or
jmp
or
mov
cmp
dec
shl
pushf
xor
(bad)
and
cmp
rcl
push
mov
rol
and
adc
push
sub
das
scas
ins
jne
sbb
addr16
movs
enter
loope
fdivr
fstp
mov
mov
push
bound
sti
lds
mov
inc
(bad)
cli
dec
sbb
push
pop
mov
std
shl
pusha
push
(bad)
sti
pop
les
add
addr16
imul
or
adc
add
lock
test
add
cmp
test
mov
inc
scas
(bad)
xor
or
fbld
sub
mov
or
outs
dec
add
add
fidivr
adc
dec
enter
cmp
xlat
xchg
jmp
adc
and
dec
cmp
xchg
push
dec
sti
fadd
xchg
lea
inc
pop
pop
mov
push
movs
mov
sub
jmp
das
mov
test
inc
jge
jmp
pop
fiadd
jb
xchg
adc
or
dec
outs
hlt
sbb
dec
out
hlt
pop
retf
push
and
aas
mov
enter
inc
fisub
jmp
inc
add
adc
inc
pop
fild
mov
add
pop
mov
xchg
add
push
and
dec
xor
jno
and
fdiv
xchg
adc
or
cmp
lock
int3
test
sub
jno
mov
push
mov
mov
retf
push
and
imul
imul
retf
mov
xor
ror
into
add
mov
clc
fwait
cmp
add
push
mov
lds
pop
sahf
jg
push
mov
mov
nop
mov
push
ja
pop
pusha
mov
call
adc
xchg
mov
pop
call
cmp
push
jmp
pop
fcomp
pop
adc
cmp
sub
mov
and
ret
sbb
inc
call
into
or
or
adc
ret
push
adc
ja
and
clc
or
enter
(bad)
jecxz
dec
push
nop
out
pop
push
cld
xchg
add
cmp
bound
or
cdq
add
mov
adc
mov
jno
sbb
add
push
pop
je
mov
ret
push
jae
mov
aas
test
aas
fnstcw
and
inc
push
and
mov
add
or
ja
pop
pop
adc
and
or
push
ret
test
cmp
adc
sbb
imul
push
popf
inc
dec
icebp
imul
adc
sbb
bound
outs
jnp
dec
xor
inc
iret
dec
aaa
mov
cmp
dec
leave
inc
pop
es
sbb
add
loop
cmp
cwde
pop
loopne
push
and
cmp
je
hlt
or
push
xor
inc
cs
fsub
(bad)
popf
mov
pop
je
mov
push
inc
jle
xor
or
pop
push
add
add
nop
lods
inc
or
pop
mov
imul
or
adc
shl
dec
fs
rsqrtps
ins
mov
idiv
imul
sub
inc
and
bound
sbb
mov
jg
add
nop
push
stos
or
adc
inc
add
and
mov
je
mov
mov
xchg
push
dec
ds
cmps
pusha
add
push
fsubr
pop
ins
sub
xor
or
adc
add
sub
pop
mov
sub
add
push
or
mov
out
xor
aas
mov
xor
cs
je
add
or
cmps
dec
repnz
aas
or
nop
cdq
jge
das
add
shufps
dec
and
and
rcr
jo
movs
mov
or
cs
pop
pop
or
imul
cmp
and
fdivr
data16
sbb
jns
imul
jecxz
push
outs
loopne
cmp
sbb
int
push
sbb
cld
jmp
adc
xor
sub
into
ss
dec
pop
xor
jne
push
xor
inc
pushf
push
mov
shl
xor
mov
pop
sub
pop
adc
inc
js
dec
push
ja
je
sti
shl
leave
(bad)
push
xchg
les
mov
inc
jl
or
adc
pop
mov
fisub
out
cmps
cmc
ror
lods
mov
dec
and
sbb
les
loope
popa
out
add
int
fcomp
dec
and
mov
cmp
xor
test
inc
jns
jnp
cmp
inc
sbb
stos
add
xor
or
ins
(bad)
fdiv
mov
xchg
dec
out
pop
push
adc
xchg
pop
xor
fild
imul
jmp
dec
leave
sbb
adc
(bad)
out
add
imul
fsub
adc
dec
ret
pop
mov
test
jge
mov
pop
aas
push
rcl
mov
cmc
inc
cmp
dec
mov
xchg
adc
and
mov
and
xor
outs
je
jno
je
inc
cmp
jg
dec
adc
sar
add
inc
pop
mov
inc
or
pop
jo
sbb
les
in
pop
(bad)
ins
xchg
add
or
and
cmp
pop
ja
mov
pop
ret
push
pop
cmps
xchg
retf
xchg
(bad)
lods
pop
aam
sub
je
add
push
pop
cld
daa
es
popa
push
sbb
dec
push
push
icebp
mov
shr
sub
mov
or
xchg
sbb
mov
inc
mul
smsw
add
xlat
jp
lds
das
push
add
xchg
mov
imul
xchg
adc
rcr
add
ror
fbstp
inc
mov
sub
aam
mov
and
imul
cmp
jne
sbb
loopne
sar
sub
test
add
cmp
add
ins
pop
cmp
dec
or
shl
jb
retf
add
jl
pop
and
lahf
add
sbb
call
pop
sbb
mov
cmp
dec
retf
sub
ret
mov
jmp
fstp
add
adc
loop
pop
push
adc
adc
adc
or
jbe
mov
sbb
sbb
daa
rol
stos
pop
fisubr
adc
gs
cmp
pop
or
dec
push
adc
call
or
sub
dec
and
inc
or
loope
or
ins
daa
sub
pop
enter
and
lea
fnstsw
sbb
jg
mov
push
fucomp
adc
or
outs
add
icebp
dec
cld
mov
lea
pop
sub
inc
add
cmp
movs
loopne
and
push
push
ins
push
mov
mov
dec
dec
ret
ror
not
shl
jb
add
or
push
mov
inc
add
es
pop
hlt
les
loopne
or
jecxz
adc
sbb
call
rol
cmp
movs
stos
add
call
mov
sbb
mov
add
jle
test
lock
or
ficomp
icebp
sub
jmp
imul
mul
pop
mov
xchg
mov
push
outs
pop
aas
add
adc
test
cmp
jp
mov
enter
or
mov
jge
add
pusha
test
dec
dec
dec
dec
sbb
sbb
loopne
xor
push
sbb
loopne
mov
jmp
sbb
int
mov
add
add
inc
and
sahf
jecxz
cs
or
lods
and
retf
push
jp
pop
in
jne
sub
sub
fcom
in
inc
dec
in
ss
cmp
sub
cmp
(bad)
mov
call
inc
loopne
in
movs
jne
test
add
adc
imul
push
push
push
rol
mov
sub
arpl
fsubr
pop
push
imul
out
xchg
sbb
cli
in
outs
or
sbb
or
in
pop
loopne
adc
sbb
addr16
int3
movs
pop
js
pop
je
(bad)
or
mov
add
je
mov
and
xchg
and
mov
ret
add
or
aad
shl
fdivp
out
test
fwait
mov
sbb
dec
dec
ficom
fisub
xor
jb
sub
in
lods
test
movntq
shl
cmp
les
push
cwde
mov
inc
adc
push
and
sti
sbb
cmp
xchg
xchg
xor
pop
fdivr
loopne
punpckhwd
outs
sbb
inc
bound
jle
loopne
(bad)
xor
push
pop
rcr
cdq
lods
dec
cmps
cs
xchg
mov
jne
push
mov
jle
and
sti
ret
push
fiadd
jmp
adc
std
and
stos
movs
fisttp
adc
inc
sub
or
nop
cmp
(bad)
sti
xor
cmp
xchg
or
loope
mov
mov
and
sbb
adc
mov
push
adc
xor
adc
js
jo
test
jne
pop
push
imul
js
call
imul
(bad)
icebp
add
mul
xchg
loopne
mov
loopne
mov
inc
dec
iret
dec
sbb
lea
pop
push
hlt
inc
dec
pushf
or
nop
popa
xor
or
push
sbb
xor
inc
cmp
or
dec
ins
int3
and
and
push
mov
test
pusha
add
out
add
sbb
ret
imul
sbb
add
dec
mov
or
pop
add
(bad)
addr16
iret
adc
and
mov
movs
jo
mov
and
pop
mov
sbb
mov
or
popa
pop
in
ret
lods
retf
add
cdq
xor
and
or
inc
repz
test
add
or
pop
cs
cdq
int3
enter
dec
push
clc
xchg
push
adc
jle
int3
test
out
push
adc
jbe
cli
stos
sbb
outs
sub
xor
enter
push
add
movs
test
dec
or
dec
mov
lock
and
push
je
inc
shl
ins
jecxz
scas
or
or
adc
daa
(bad)
movsx
push
sub
sub
dec
dec
cs
or
or
ret
and
pop
adc
add
xchg
jp
cmp
adc
and
cmps
cdq
dec
fisttp
sub
pop
add
push
or
call
jmp
sub
push
enter
add
push
or
ss
inc
mov
add
lea
cmps
adc
push
xor
push
test
mov
xchg
sbb
cmp
pop
(bad)
cmps
push
dec
mov
rcl
dec
mov
cs
inc
cmp
movs
mov
cli
pop
dec
cmp
jge
mov
and
je
mov
or
pop
mov
call
and
ret
pop
pop
sub
dec
mov
dec
pop
xchg
imul
sbb
add
imul
jnp
push
adc
and
sbb
adc
adc
mov
test
and
mov
repnz
ja
xor
mov
gs
sub
outs
xchg
addr16
fsub
cs
jb
adc
clc
add
adc
add
ja
add
bound
in
(bad)
and
or
sbb
cmp
(bad)
call
mov
adc
aam
dec
(bad)
in
sub
push
dec
push
add
jle
jmp
jmp
xchg
and
popa
les
inc
sbb
push
xchg
xor
movs
retf
push
nop
retf
int3
jno
int3
jp
mov
pop
outs
lea
idiv
adc
add
push
cmp
push
pusha
mov
sbb
xor
mov
and
adc
or
loopne
test
add
jmp
add
aam
jne
clc
jbe
enter
adc
jb
popa
call
adc
and
jle
(bad)
(bad)
jo
add
sbb
xchg
and
xchg
clc
xchg
cwde
xor
(bad)
and
adc
push
add
jne
sbb
inc
pop
xor
pop
inc
pop
loope
or
ja
or
xor
adc
xchg
or
and
and
pop
mov
dec
sub
ret
scas
push
and
add
call
jb
je
pop
aad
xor
pop
test
xchg
mov
bound
sub
add
movs
rcr
adc
ss
sbb
sbb
push
arpl
add
sub
int3
pop
(bad)
push
xchg
rol
repz
or
retf
pushf
retf
ja
test
lock
cmp
dec
mov
das
and
lods
sub
(bad)
inc
jmp
enter
aam
in
jge
cmp
dec
test
ds
push
iret
rol
gs
add
and
cli
cmps
and
fiadd
mov
xchg
test
mov
sub
sub
(bad)
imul
sti
rcl
jmp
xlat
sub
inc
xchg
fmul
lock
sub
inc
xchg
inc
pop
loopne
xor
call
dec
inc
cs
mov
aad
cmp
sbb
loopne
(bad)
xlat
add
jl
or
or
fwait
jne
push
call
ret
pop
jge
xor
pusha
repnz
cld
lock
jno
add
mov
dec
pop
inc
mov
jbe
test
mov
dec
lahf
outs
je
sub
leave
movs
push
(bad)
cmp
(bad)
push
lahf
dec
mov
shl
jnp
sub
xor
and
bound
mov
lods
(bad)
daa
ret
pop
aam
jbe
popf
pop
push
rcr
dec
or
imul
stc
mov
cmps
in
mov
xor
call
dec
mov
pop
inc
cmp
inc
dec
xor
push
sbb
xor
or
mov
jmp
ret
adc
jmp
sub
out
outs
mov
add
xchg
jge
xor
adc
pop
sbb
rol
data16
inc
mov
add
js
mov
jecxz
and
xor
pop
sbb
inc
mov
push
mov
mov
or
add
pop
ret
mov
outs
jb
test
mov
cmp
jle
je
push
lock
cmp
jae
push
es
adc
adc
xchg
xchg
jbe
jle
adc
or
sbb
es
(bad)
xor
je
mov
push
or
add
sbb
inc
sbb
fs
cmps
cmc
xchg
pop
jae
mov
push
or
push
adc
pop
in
push
shl
push
inc
loop
add
dec
shl
jge
jne
(bad)
shrd
inc
daa
pop
ins
and
arpl
retf
adc
jmp
retf
sahf
(bad)
(bad)
jo
repnz
inc
xor
frstor
mov
push
mov
push
jo
pop
popa
mov
xchg
mov
jl
inc
push
mov
add
mov
and
imul
push
cmps
jl
push
aad
(bad)
mov
mov
arpl
adc
add
mov
xchg
lock
jae
out
pop
pop
or
out
pop
pop
loope
shr
push
in
das
mov
int
push
mov
aas
(bad)
ins
ret
int3
sar
sub
xchg
dec
mov
das
xor
inc
pop
cmp
pusha
sti
cmp
adc
ret
dec
dec
daa
or
(bad)
xor
add
jge
push
outs
or
sbb
pushf
sub
sbb
and
sbb
sub
mov
or
test
loope
jmp
or
aam
push
dec
pop
adc
xor
aas
sub
or
push
es
dec
lock
push
xor
xor
ss
arpl
add
pop
sub
ret
sub
js
inc
clc
push
or
push
inc
mov
xor
add
adc
cld
sub
adc
or
adc
loopne
dec
add
push
xor
jbe
test
and
dec
rol
or
jns
popf
les
pusha
xor
(bad)
ror
test
adc
add
imul
and
js
mov
push
push
daa
jp
fs
push
cmp
inc
cwde
add
fs
xor
adc
jo
mov
cmps
xor
cmp
or
test
xor
add
inc
ret
test
dec
js
loope
inc
inc
jecxz
mov
cmp
mov
(bad)
mov
pop
mov
stos
out
cmc
mov
icebp
xor
and
cmp
leave
xor
mov
adc
mov
pop
imul
xor
dec
xchg
push
nop
(bad)
cwde
push
leave
inc
arpl
mov
test
pop
sbb
inc
test
xchg
aad
sar
pusha
push
sub
jge
inc
inc
add
cmps
inc
call
out
xchg
in
outs
mul
mov
and
add
fld
fcomp
dec
fdiv
jo
fiadd
pop
xchg
or
fisub
out
enter
or
cmp
push
daa
ret
pop
mov
les
add
add
add
jns
dec
cdq
movs
jg
push
add
ins
cmp
push
add
gs
(bad)
sub
fisttp
or
fwait
sahf
push
pusha
add
aaa
iret
mov
xor
and
ret
cmp
and
cs
add
lods
sub
mov
je
add
jmp
bnd
in
aam
xchg
rcl
add
popa
pop
sbb
ror
retf
jno
jecxz
imul
and
push
dec
push
push
dec
push
mov
enter
aas
(bad)
enter
aaa
sbb
inc
clc
add
or
data16
jmp
sbb
mov
add
sub
mov
dec
ja
je
pop
pop
out
imul
add
mov
(bad)
shl
nop
xor
add
cmp
js
loope
push
ret
inc
dec
xor
aam
dec
and
inc
hlt
xor
daa
movs
rol
mov
inc
mov
cmp
les
dec
adc
sub
dec
lods
ss
sbb
mov
and
(bad)
mov
js
mov
out
lahf
or
xchg
jne
hlt
push
mov
retf
dec
cmp
scas
and
fstp
push
jo
jnp
inc
sbb
lea
jl
dec
inc
jle
in
adc
xchg
dec
sbb
sub
test
or
es
and
je
cmp
mov
test
or
mov
sar
adc
add
pop
xor
imul
push
adc
imul
ffree
dec
sbb
add
push
dec
sbb
or
or
and
or
test
and
add
pop
(bad)
mov
or
sub
lock
xor
pushf
mov
cmp
inc
sahf
out
loop
mov
and
mov
fs
dec
(bad)
(bad)
dec
ins
pop
jno
sbb
rcr
aaa
test
rol
push
cmp
add
xchg
xor
out
fmul
sbb
lds
xchg
sbb
clc
pop
test
inc
dec
mov
mul
cmp
add
mov
ror
ffreep
cli
sbb
adc
jbe
imul
and
mov
movs
fcmovnu
push
add
mov
(bad)
mov
cdq
inc
pop
jl
es
and
mov
dec
or
enter
push
cwde
inc
aam
(bad)
mov
mov
xor
xor
dec
xor
nop
jmp
jl
cmp
loop
mov
es
shr
xor
add
push
call
(bad)
sbb
and
jecxz
(bad)
icebp
push
inc
add
inc
mov
(bad)
xor
sub
inc
push
push
cmp
cmp
lahf
pop
cmp
cmp
jo
bound
xchg
movsx
(bad)
test
std
sub
jmp
ja
jmp
out
mov
mov
(bad)
mov
cmp
setg
jmp
inc
add
imul
dec
cmp
setle
cmp
xor
movs
inc
es
dec
inc
pop
cwde
ror
adc
mov
push
es
retf
sbb
jg
rcl
and
pop
fadd
cld
mov
mov
jmp
mov
mov
repz
inc
lock
cmp
add
shl
push
adc
call
cmp
dec
add
aaa
pop
xor
not
add
int
add
inc
adc
or
ins
add
mov
loopne
shl
fidiv
ins
jmp
aaa
add
fxch
xor
push
sbb
xor
ins
ins
mov
cli
adc
push
jns
inc
out
cld
or
sub
in
leave
mov
jbe
lock
add
enter
mov
sub
pop
mov
xchg
gs
dec
and
xor
shr
cmp
cld
aad
hlt
or
fst
shl
or
or
add
in
sub
jno
or
daa
mov
xor
or
ror
or
pop
add
pop
add
dec
lds
scas
add
dec
dec
xor
cmps
dec
fstp
(bad)
cmc
jns
or
sbb
ds
sub
lods
or
fs
xor
jmp
sbb
push
inc
sub
jmp
push
fsubr
fwait
pop
and
push
push
adc
add
dec
adc
mov
pcmpeqw
xchg
push
and
loop
retf
(bad)
pop
sub
lods
movs
cs
push
out
movs
fnstenv
add
sub
push
ret
dec
xlat
jmp
or
inc
jle
stos
push
sub
sub
add
fwait
jmp
xor
add
and
and
cmp
pop
pop
adc
ss
imul
scas
sbb
in
nop
fcomp
sub
mov
ins
std
cmp
jne
jne
ret
pop
stc
jmp
mov
jmp
mov
test
add
fmul
loop
mov
xchg
loop
inc
sbb
or
and
dec
or
dec
push
cmp
pop
or
add
cmp
jge
int3
movs
nop
cmp
mov
fs
rcr
dec
fdivr
iret
mov
mov
pop
adc
mov
push
fimul
xor
test
jg
mov
int
add
cmps
jne
xchg
or
add
adc
call
js
ret
cmp
nop
sbb
(bad)
fcomp
rol
ds
cmp
jne
xchg
js
ret
or
and
icebp
add
lock
pop
sub
cmps
sbb
rcl
das
jns
mov
adc
lods
inc
clc
push
inc
mov
mov
cmp
cmps
pop
xlat
push
push
mov
aas
fs
inc
fidiv
pop
adc
add
dec
push
sbb
sub
repz
mov
push
mov
ficom
cmps
or
les
loope
pop
xor
and
jbe
mov
ins
gs
pusha
or
dec
nop
jb
mov
adc
pop
inc
fistp
(bad)
outs
inc
mov
pusha
push
out
lods
mov
das
inc
cwde
ror
mov
jne
and
sub
mov
xor
outs
push
or
push
mov
fisttp
xor
(bad)
fdiv
jb
js
cmp
and
lods
jp
sub
push
dec
or
mov
dec
or
cld
shl
push
and
add
ds
push
in
mov
mov
and
cmps
or
sub
icebp
(bad)
sbb
mov
sbb
fs
jnp
(bad)
loopne
bswap
cmp
rcr
test
pop
repnz
inc
dec
jne
mov
sbb
push
dec
mov
aaa
sub
loopne
mov
pop
inc
jmp
mov
adc
test
jbe
lods
adc
fcom
fucomi
adc
pop
fsubrp
inc
pop
xor
dec
adc
xor
rol
test
ins
into
jg
push
ins
daa
add
inc
jne
push
dec
xchg
icebp
xchg
sub
clc
xchg
icebp
call
mov
dec
inc
pop
inc
mov
scas
test
test
xchg
data16
dec
rcr
xchg
jmp
sbb
mov
sub
(bad)
jne
les
ss
test
xor
dec
pop
xchg
pop
(bad)
aaa
pop
pop
lods
repz
mov
fisttp
cmps
fdiv
sub
push
cmp
xchg
inc
adc
mov
jmp
adc
rol
sbb
adc
dec
ss
add
mov
aas
(bad)
jmp
adc
jmp
lds
or
mov
lods
add
mov
inc
sahf
test
(bad)
arpl
das
mov
and
adc
pop
sbb
idiv
clc
call
jmp
lock
inc
inc
sbb
(bad)
sub
mov
je
add
sbb
scas
push
xlat
cmc
and
mov
or
xchg
call
inc
or
movs
pop
out
loop
sbb
outs
popa
movzx
movs
loopne
shl
or
rol
xchg
push
mov
cmc
dec
lea
mov
dec
adc
rcl
sbb
inc
loop
push
pop
and
cdq
test
mov
dec
imul
dec
sbb
sbb
pop
pop
mov
(bad)
fild
or
int3
and
xchg
adc
psllq
inc
adc
jo
movs
mov
sub
add
fsub
es
or
ror
mov
add
inc
loope
popa
dec
dec
sbb
sti
data16
add
dec
sub
adc
push
adc
mov
fstp
cmp
stos
sar
neg
dec
bound
or
xor
dec
(bad)
dec
and
xor
and
xchg
rcl
in
sub
sub
push
pop
lock
mov
nop
mov
iret
push
sub
jo
inc
push
fs
test
inc
movs
scas
inc
call
sbb
pop
adc
scas
dec
add
lock
jae
test
inc
inc
pop
add
test
sbb
push
stos
inc
nop
jmp
pop
clc
shl
ins
test
mov
call
jp
fwait
add
out
or
mov
shl
or
dec
or
cld
fidivr
inc
je
and
mov
(bad)
xor
jne
aas
push
scas
cwde
add
ins
add
data16
dec
loopne
inc
mov
and
add
xor
cmp
sub
clc
ins
xor
sub
js
aas
ins
xchg
adc
jge
test
push
jnp
xor
add
pop
iret
sub
mov
ret
adc
pop
inc
inc
push
push
out
sahf
jbe
push
or
adc
sub
sbb
inc
push
and
pusha
or
and
xor
dec
data16
dec
in
or
mov
sar
(bad)
xlat
and
movs
mov
adc
inc
and
mov
jl
mov
mov
inc
std
inc
mov
les
movs
push
sbb
sbb
lock
lea
jge
ds
dec
dec
ret
das
xchg
stos
jo
outs
pop
aaa
loop
xchg
clc
mov
sub
cmp
outs
jl
pop
clc
cmp
mov
les
dec
loopne
lea
or
test
mov
inc
jl
aaa
xchg
cmp
daa
sbb
pop
adc
dec
pop
mov
or
es
enter
test
jno
adc
jecxz
daa
loop
sbb
dec
das
sub
jae
clc
mov
ret
cmp
xlat
imul
outs
and
push
ds
sub
je
or
adc
push
jo
popa
xchg
mov
inc
pop
pop
imul
les
popa
jmp
sub
sbb
add
repnz
xchg
sbb
jnp
fiadd
shl
fdiv
cmp
and
lahf
daa
repz
push
shl
and
pop
or
jmp
push
popa
pop
mov
xchg
push
dec
pusha
xchg
mov
dec
push
cmp
ins
jmp
add
xor
stos
hlt
out
out
pop
and
sbb
jmp
call
je
(bad)
out
and
test
mov
scas
mov
lahf
mov
test
xor
mov
xchg
js
sbb
ror
adc
ins
or
mov
mov
icebp
ja
adc
adc
fst
cmp
xor
shl
daa
lds
mov
and
pusha
dec
in
(bad)
je
in
pop
movs
pusha
dec
mov
sbb
sbb
and
pusha
test
imul
pop
and
sti
and
mov
lods
dec
fnstenv
fsubrp
or
sub
mov
pop
mov
aas
dec
add
pop
data16
mov
js
mov
je
aad
out
(bad)
mov
arpl
inc
mov
push
ret
mov
sub
or
mov
mov
mov
fwait
clc
inc
daa
lahf
fmul
mov
ret
mov
sbb
out
mov
in
bound
sti
popa
pop
cld
(bad)
sar
cwde
(bad)
xlat
push
xor
fild
inc
aam
sub
lock
lahf
js
pop
push
add
push
inc
(bad)
(bad)
adc
shl
xor
in
out
ins
push
push
add
nop
push
loop
sbb
int3
lds
mov
std
ret
push
cmp
adc
xor
sbb
mov
aam
mov
xor
inc
(bad)
sbb
retf
cmps
mov
mov
pusha
inc
lods
xchg
or
lods
lds
cmp
mov
shl
or
stos
dec
push
sub
or
loop
sub
jns
ins
cwde
xor
inc
xchg
pop
pop
test
and
pop
adc
xor
mov
adc
adc
out
inc
clc
xchg
sub
pop
or
push
adc
push
loopne
pop
mov
ins
sbb
push
repz
adc
inc
sbb
push
popa
adc
fidivr
or
ror
loopne
daa
push
cmp
inc
inc
mov
dec
je
push
pop
and
cdq
adc
push
pop
add
outs
and
jb
or
inc
push
add
stos
ins
test
jnp
adc
jmp
and
test
jno
jp
sbb
mov
imul
cmp
add
test
pop
mov
mov
in
jae
inc
sbb
stos
adc
add
sub
dec
in
clc
or
es
push
sbb
lock
shl
sbb
inc
(bad)
sub
(bad)
jnp
and
pop
jle
(bad)
lock
and
test
push
rcl
mov
lea
inc
or
pop
inc
adc
pop
adc
inc
add
and
jnp
mov
imul
inc
xchg
jo
lock
jge
cmp
mov
mov
sbb
xlat
inc
dec
retf
mov
or
jecxz
(bad)
dec
in
clc
or
sbb
or
inc
push
pusha
loop
es
scas
repnz
sbb
sbb
xor
and
pop
sub
(bad)
adc
sbb
in
adc
adc
into
fcomp
add
xor
sbb
dec
mov
addr16
xchg
cld
test
cmp
mov
or
inc
mov
cwde
jae
inc
mov
addr16
push
test
ret
inc
push
adc
xchg
inc
xor
push
mov
push
inc
xchg
cmc
test
inc
or
scas
adc
xor
pop
jns
dec
outs
mov
jmp
cs
sbb
sbb
fucomp
retf
mov
ins
mov
adc
jno
loopne
jmp
pop
test
stc
dec
mov
push
xchg
ja
pop
mov
(bad)
orps
adc
inc
dec
or
dec
mov
sbb
mov
rol
add
jp
sbb
adc
jg
inc
jno
nop
push
xor
mov
inc
mov
push
pusha
outs
adc
mov
data16
addr16
sub
xchg
sahf
cmc
mov
lds
imul
dec
mov
push
cmps
push
clc
mov
inc
push
dec
or
mov
pushf
clc
es
int
test
xchg
xchg
inc
stos
add
cmp
loopne
mov
movs
pop
pop
js
call
rcpps
or
sbb
fnstsw
xchg
adc
add
add
push
fidivr
inc
test
cdq
inc
dec
sbb
les
pop
xor
push
addr16
push
jb
ret
hlt
das
pusha
sub
xchg
xor
sub
dec
mov
outs
cmp
or
xor
xchg
inc
test
adc
dec
xor
ret
cmp
div
sbb
push
movs
add
loopne
adc
push
xchg
das
leave
xchg
in
sbb
mov
rcl
cmp
jecxz
lock
xor
clc
dec
xor
fcomp
fcomp
pop
xor
mov
cs
repz
jl
cmps
xchg
sub
repz
clc
add
add
inc
ss
sahf
jb
loop
inc
pop
(bad)
mov
add
sbb
pop
ffree
push
test
test
pushf
movs
movs
mov
xchg
pushf
push
push
add
sub
adc
jo
inc
inc
aas
lds
aad
cld
pop
popf
pusha
es
cmps
mov
ins
inc
mov
mov
sbb
xchg
rol
inc
rcr
das
pop
test
push
pop
aaa
inc
or
fld
add
loope
push
xchg
mov
push
inc
cwde
push
xchg
fxch
sar
cmp
movs
push
daa
mov
push
sbb
aas
mov
inc
jmp
add
sbb
inc
and
(bad)
inc
test
push
jl
and
sub
adc
xor
call
in
inc
and
dec
hlt
inc
add
aam
add
and
les
ror
sar
aam
ss
add
inc
or
mov
xchg
(bad)
push
pop
les
sbb
pop
pop
push
adc
popa
xor
or
add
(bad)
sbb
xor
rcl
mov
or
mov
ins
cmp
(bad)
js
out
stos
xchg
idiv
int
jge
adc
jno
xor
gs
inc
dec
sbb
lods
in
sbb
loopne
sar
cwde
test
inc
adc
push
adc
push
or
inc
pop
test
xchg
or
shr
ret
adc
sub
or
sub
pop
mov
cmp
sbb
xchg
pop
(bad)
add
mov
inc
cmp
inc
data16
js
sub
dec
arpl
xchg
stos
(bad)
adc
test
loope
inc
xchg
stos
dec
push
ficomp
mov
inc
test
pop
movsx
inc
(bad)
popf
add
cmp
(bad)
xchg
sub
cmps
jae
call
push
pop
mov
push
or
jno
xor
cmp
or
push
das
scas
daa
popa
js
dec
cmp
push
xchg
dec
xor
add
daa
mov
out
xchg
inc
cmp
adc
push
cmp
sbb
ret
imul
pushf
inc
(bad)
imul
dec
pop
call
test
jl
mov
xor
jbe
adc
test
push
jae
jno
xchg
sbb
jecxz
xchg
adc
test
bound
nop
pusha
adc
test
jle
xor
mov
cmovo
and
xor
sub
mov
stc
aaa
xchg
and
shl
addr16
sahf
mov
(bad)
mov
and
mov
shr
push
pop
mov
or
inc
push
ret
push
sti
mov
mov
lea
das
dec
pop
shl
cs
rol
mov
shr
adc
sbb
ins
ds
ret
(bad)
jmp
xchg
xlat
mov
into
xlat
sbb
mov
fadd
adc
sar
mov
jmp
fld
mov
mov
sub
retf
adc
aaa
push
test
lea
cmp
popf
clc
addr16
xchg
pop
push
add
pop
pop
push
adc
rcr
retf
adc
leave
scas
aam
mov
pushf
rcr
stos
push
jo
xchg
lds
sbb
data16
out
movs
into
mov
dec
ffreep
pop
dec
stos
out
dec
hlt
test
out
loop
push
xor
push
xchg
aas
retf
daa
cmp
sub
outs
dec
mov
or
adc
jne
rol
dec
dec
ds
and
nop
popf
push
add
fistp
mov
cmp
movaps
test
mov
sub
inc
and
adc
sbb
daa
in
add
mov
fisttp
shr
leave
sbb
push
repnz
mov
jbe
lods
push
leave
js
scas
adc
adc
lods
or
test
cli
mov
add
pop
add
ja
cmp
cld
ret
jl
in
iret
xor
push
pop
push
mov
popa
sbb
or
cmp
inc
sub
stos
and
ret
pusha
inc
push
ja
add
sub
bound
mov
test
inc
or
sti
pop
cmc
push
loopne
out
add
mov
mov
jo
ret
retf
bound
push
adc
inc
xlat
or
das
sbb
push
lea
add
int3
sbb
daa
push
mov
ret
mov
xlat
inc
jp
jo
add
mov
aas
fcom
mov
out
pop
pop
int3
ret
movs
sar
add
cmp
pop
mov
scas
sbb
sti
jne
or
adc
add
sbb
jns
dec
inc
bound
ins
in
jg
sub
inc
sbb
pop
pop
out
mov
push
mov
mov
cld
not
xchg
or
iret
jmp
imul
mov
push
fistp
(bad)
pusha
test
loopne
loopne
mov
push
cs
mov
aaa
and
or
clc
pop
push
adc
shl
push
outs
and
push
xor
out
and
lea
push
rol
and
xchg
pop
sub
adc
or
dec
add
adc
push
and
pop
loopne
icebp
push
cld
aas
push
and
push
and
adc
cmp
fcmovu
dec
and
fist
js
and
sub
bound
push
inc
cmp
outs
imul
pop
inc
pusha
aad
jbe
and
xor
fisttp
arpl
add
push
in
push
xchg
fadd
add
ret
dec
mov
int3
or
push
sbb
popa
cmp
inc
repnz
lock
xor
xchg
movs
push
mov
or
in
push
lods
xor
out
mov
mov
les
pop
cs
jge
sbb
movs
sub
sbb
jne
inc
add
pop
aad
inc
pusha
dec
mov
fdivp
xor
les
cli
jmp
or
add
mov
les
pop
data16
xchg
inc
test
xchg
pop
xchg
hlt
cs
fidiv
cmp
mov
fcomp
xor
mov
cmp
shl
push
pop
rcr
ins
dec
cmp
cmp
and
in
xor
push
je
add
pop
jae
inc
shl
fyl2x
jg
aad
mov
popf
bswap
dec
and
push
mov
pop
jae
in
icebp
ss
mov
psraw
pop
mov
and
loop
push
jne
and
scas
cmp
pop
add
add
push
xchg
cmp
push
enter
or
push
stos
jbe
movs
bound
das
dec
or
dec
cmp
mov
jb
jae
js
pop
and
mov
dec
xchg
test
les
ret
sbb
popf
movs
ins
jae
and
outs
movs
xor
push
xor
cmp
inc
shl
je
dec
mov
adc
cmp
push
jb
or
test
inc
movs
adc
or
push
cli
adc
movs
jnp
jmp
inc
push
and
mov
aaa
shufps
and
mov
add
in
jmp
inc
jo
cmp
adc
dec
(bad)
pop
push
cmp
sub
mov
push
sbb
xor
stos
jne
lods
rol
out
or
adc
fcom
add
pop
jmp
int3
je
hlt
xor
xchg
xor
push
shl
(bad)
cdq
pop
inc
and
mov
xlat
add
cmp
jl
call
stos
sbb
sub
push
add
push
add
push
inc
out
add
add
sub
jae
cmp
jnp
sbb
lods
xor
dec
add
cs
mov
mov
inc
add
clc
sbb
add
or
je
adc
pop
jmp
adc
repz
or
in
and
aam
out
mov
xor
sbb
push
push
xor
dec
fild
adc
xor
dec
js
add
gs
popa
add
in
pop
inc
retf
add
dec
xchg
sub
and
adc
iret
adc
cmps
movs
cmp
push
inc
test
push
imul
pop
add
addr16
xor
jne
sti
pop
movs
sbb
popa
and
sbb
shr
repz
or
sbb
mov
mov
and
inc
jne
push
or
mov
push
es
xor
cmp
inc
aam
jns
cmp
add
les
jne
xchg
inc
push
xor
es
push
dec
(bad)
fidiv
push
(bad)
dec
fbld
fld
xchg
out
or
pop
cmp
cmp
js
push
into
das
je
iret
pop
mov
jle
arpl
je
add
push
sbb
dec
ss
mov
and
(bad)
sbb
cmp
dec
cmps
test
inc
daa
hlt
out
popa
add
push
sub
sub
outs
xor
aas
sub
sbb
out
add
out
xor
and
lods
add
call
add
mov
mov
dec
shr
push
dec
pop
mov
jmp
retf
jne
cmp
fdivr
cmp
out
add
push
pop
fcmove
push
inc
and
sub
mov
dec
shl
or
pop
loop
sbb
push
cmp
dec
call
nop
cwde
cmp
mov
js
push
inc
lock
add
sub
(bad)
jg
and
retf
adc
push
sub
pop
js
je
or
cmp
test
cwde
in
enter
sbb
fmul
ins
daa
jl
popf
jmp
sub
and
daa
mov
push
loopne
aad
push
(bad)
xor
pop
cmps
sub
sub
add
lds
jo
pop
popf
fs
ins
rol
add
scas
aad
pushf
xchg
mov
imul
ret
mov
sbb
add
push
add
sbb
cs
adc
loope
mov
mov
(bad)
jg
mov
jp
lods
imul
xor
push
scas
pop
xor
jo
jl
and
sbb
adc
lea
pop
xor
shl
cmc
sub
arpl
sbb
jno
fistp
jbe
push
pop
or
mov
adc
or
adc
in
daa
inc
xchg
inc
adc
in
xchg
and
add
add
jne
xor
pop
adc
xor
push
push
cs
out
pop
rol
sar
or
leave
mov
pushw
inc
push
inc
(bad)
dec
jo
or
mov
sub
push
xor
lds
and
aad
jae
jmp
xor
clc
js
cs
sar
or
push
int
inc
push
adc
mov
daa
pop
js
sar
test
pop
push
ret
adc
data16
dec
aas
push
or
adc
mov
es
mov
loop
mov
bound
loope
push
jge
dec
dec
cwde
push
dec
push
xchg
sub
mov
and
inc
mov
sar
xchg
or
cmp
(bad)
dec
and
mov
or
jp
jl
in
adc
fcomp
xchg
add
xor
xchg
mov
push
dec
inc
addr16
nop
div
jo
sbb
stos
arpl
pusha
adc
sub
outs
dec
add
xor
cmp
and
xor
sub
jo
rol
add
mov
repz
dec
test
fsubp
adc
movs
add
retf
(bad)
sub
and
cs
mov
lea
add
movs
xor
sub
add
lock
mov
das
mov
ins
enter
mov
sub
xchg
or
not
rol
adc
xor
inc
dec
and
or
jo
ja
jns
add
xor
mov
xor
cmp
clc
sub
in
imul
mov
cwde
fst
rol
mov
and
or
and
xor
das
adc
push
ud0
into
adc
cmp
add
xor
test
push
out
sbb
mov
add
inc
jmp
jne
pop
mov
in
sti
dec
nop
sub
or
inc
add
in
push
(bad)
mov
loop
mov
xlat
sbb
sbb
jg
stos
push
or
loope
mov
cmp
clc
xor
or
mov
or
les
lods
and
mov
and
cmp
dec
aad
inc
xor
sub
popa
or
sbb
pushf
dec
enter
in
fld
xchg
push
mov
lock
push
mov
sbb
push
pusha
cmps
and
les
dec
add
daa
scas
sbb
sahf
add
push
add
or
xor
add
call
loop
lea
lock
add
retf
stc
cmp
or
adc
js
and
clc
mov
sbb
je
jbe
push
or
push
ror
sub
adc
mov
mov
or
loop
or
adc
or
sbb
sub
imul
call
inc
test
and
scas
add
popa
or
cdq
jns
mov
sbb
jmp
push
daa
imul
mov
mov
push
push
mov
jo
sub
push
aad
cli
fwait
dec
dec
scas
sub
sub
mov
and
add
sbb
or
clc
jae
imul
call
cwde
shl
les
xchg
push
sub
jo
ror
fmul
fmul
nop
push
test
mov
jmp
dec
add
dec
in
jns
adc
xchg
cmp
push
rsm
test
xchg
rol
adc
shr
push
jmp
cmp
jmp
mov
or
or
cmp
add
xchg
push
push
in
jne
cmp
add
push
inc
inc
pushf
or
je
shl
shr
not
adc
clc
or
rcr
add
mov
push
mov
fcmovne
dec
mov
inc
inc
inc
cs
test
mov
mov
dec
or
xchg
cmps
fnstcw
pop
add
xor
add
sub
mov
rcr
pop
inc
and
fwait
sub
gs
jge
adc
pop
fmul
dec
or
loopne
adc
outs
das
cs
out
std
sub
adc
and
jle
adc
adc
push
rol
dec
sub
add
or
mov
cmp
and
into
adc
cmovl
mov
je
mov
and
into
adc
into
inc
dec
add
add
(bad)
mov
sub
cmp
loopne
and
rol
push
dec
imul
cmp
fisub
xchg
mov
dec
int3
jge
push
imul
shr
cmps
cmp
clc
sbb
in
aam
les
sbb
pusha
pusha
sub
rcl
add
ins
and
add
das
outs
add
xor
adc
mov
and
mov
and
jmp
mov
push
repz
ja
jae
inc
mov
fld
(bad)
push
or
js
in
mov
test
xor
cmps
dec
(bad)
and
jo
test
add
add
shl
inc
pop
repz
pop
add
sbb
rcl
sub
mov
mov
fcom
mov
ja
rol
mov
jns
mov
xchg
leave
popa
add
data16
aam
jle
mov
mov
pusha
sub
mov
mov
inc
or
fmul
fstp
add
jp
push
mov
dec
sbb
xlat
and
jmp
shl
xor
add
ret
or
aad
aaa
mov
shr
popa
jle
and
or
mov
enter
add
loope
add
push
clc
xchg
sub
test
fcom
call
push
cmps
movs
add
mov
mov
in
clc
add
cmp
mov
xor
movs
lea
fs
lods
xchg
xor
loope
ret
leave
mov
jle
mov
xchg
cmps
arpl
gs
nop
add
xchg
gs
je
xor
stc
inc
inc
cmp
add
pusha
xchg
adc
(bad)
cmps
and
push
fcomi
je
jb
nop
adc
jmp
push
inc
jp
sbb
leave
xchg
rol
push
and
inc
add
add
rcl
or
test
test
or
gs
ins
sbb
pop
(bad)
push
call
out
sbb
lods
outs
imul
aam
push
sub
movs
aam
or
pop
dec
xor
repz
lods
cmps
sbb
ins
pusha
cmp
xor
sbb
xor
and
push
sub
(bad)
pop
sub
cmps
movs
jb
test
pop
aam
add
fs
adc
repz
fdiv
(bad)
cmps
nop
cmc
and
or
test
dec
or
adc
loopne
or
adc
adc
nop
mov
sbb
in
mov
pop
dec
fs
popa
jge
xchg
inc
xor
xor
lds
and
xchg
adc
pop
jnp
jecxz
mov
adc
call
out
xor
sbb
mov
test
push
add
pop
or
sub
call
nop
nop
inc
test
retf
cmp
in
mov
ins
fwait
js
hlt
xchg
or
push
lea
jmp
inc
out
or
or
add
cmps
mov
jae
dec
add
adc
dec
enter
cmp
mov
jp
add
xchg
popf
jmp
popa
sub
fwait
and
sub
pushf
or
nop
and
jo
fadd
inc
mov
hlt
ficom
add
sbb
inc
add
les
int3
or
sbb
int3
inc
xchg
int3
adc
and
sub
cwde
dec
pop
jp
sub
pop
clc
dec
fistp
add
cmp
pop
test
mul
test
sub
mov
int3
add
add
or
or
and
or
xor
daa
sbb
movs
iret
out
outs
adc
jnp
in
and
cmp
adc
hlt
add
and
dec
push
inc
adc
mov
push
shr
stos
sti
in
(bad)
dec
and
stc
or
add
fistp
dec
loopne
add
pop
jbe
je
nop
ror
xchg
mov
movs
sub
cmp
sahf
retf
xor
sub
pop
cdq
add
add
dec
sti
sbb
push
or
add
sub
xor
cmp
nop
sahf
jno
mov
stc
jne
or
jg
sbb
jl
or
loopne
xor
clc
js
or
nop
inc
and
mov
pop
push
repnz
fadd
cmp
xchg
mov
add
nop
pop
fcomp
add
aam
and
sbb
and
dec
adc
daa
jae
cmp
cmps
inc
pop
dec
xchg
out
dec
call
mov
inc
cmp
jle
pop
sub
hlt
jge
fwait
ss
mov
gs
cmp
sbb
dec
push
cmp
js
jns
cli
pop
jle
ret
sub
mov
jno
push
call
push
mov
jg
movs
pop
das
mov
(bad)
sbb
or
or
in
movs
movs
ret
cmp
and
mov
sbb
xchg
adc
adc
or
push
sub
sub
mov
mov
stos
mov
xor
and
iret
lock
xchg
jb
adc
add
pop
repnz
push
pop
popa
xor
mov
sahf
or
lds
xchg
add
push
or
imul
sub
add
mov
shr
setns
mov
daa
cmp
mov
add
ds
add
es
or
push
or
xor
mov
mov
addr16
inc
or
adc
les
add
not
sbb
or
nop
sbb
hlt
loopne
aam
xor
(bad)
sti
push
test
(bad)
add
push
ror
pop
inc
or
test
daa
movsx
adc
sub
dec
call
ins
enter
stc
adc
xchg
add
arpl
out
sub
fisubr
or
or
or
sub
ficomp
jnp
sub
xchg
jo
js
(bad)
mov
xchg
ret
fsub
push
inc
push
cs
enter
or
js
mov
or
xchg
cld
ret
scas
pop
or
dec
rol
cmp
fild
push
test
push
js
xchg
enter
leave
mov
rcr
xchg
mov
cmp
sbb
inc
pop
lds
ret
jg
ja
sbb
(bad)
cmp
ja
je
gs
jge
xchg
cld
fimul
xor
ret
retf
mov
xchg
mov
push
or
mov
xchg
data16
popa
pop
stos
(bad)
and
and
ja
fisttp
push
fprem1
or
push
add
aam
rcl
add
loopne
lahf
das
dec
hlt
dec
sbb
in
cdq
dec
mov
out
jae
xor
lods
adc
adc
push
push
and
stos
and
add
pop
inc
popa
test
out
(bad)
(bad)
arpl
add
shl
mov
mov
cmps
inc
aaa
sar
mov
mul
dec
popa
(bad)
pop
(bad)
push
xchg
push
pop
push
xor
in
adc
and
add
xor
pop
mov
or
pop
mov
pop
mov
xchg
mov
jle
cmp
and
ja
push
sbb
inc
fs
adc
shl
jg
movs
and
push
in
jl
add
sub
push
xor
pop
mov
fcomp
inc
xor
idiv
push
repnz
mov
jmp
mov
push
or
push
cmp
or
out
dec
push
inc
imul
es
adc
fcmovne
sub
ret
push
add
mov
leave
loopne
dec
inc
xor
call
out
in
in
inc
loope
or
int
xchg
in
push
iret
xchg
cmp
cmc
test
or
mov
ds
loope
sbb
pop
lods
sbb
and
int
sbb
(bad)
popa
test
imul
test
add
xor
and
loope
fld
cwde
pop
fs
push
mov
xor
inc
inc
outs
mov
dec
jne
into
inc
inc
das
push
inc
add
aaa
jmp
aaa
mov
add
inc
xchg
imul
push
and
push
adc
sar
pop
xchg
sub
jmp
aam
push
dec
fsqrt
jmp
sub
sub
popa
or
sbb
inc
out
and
sar
mov
int
sub
(bad)
mov
ret
sbb
sar
and
push
cld
adc
pop
pop
adc
pop
ficomp
add
retf
sub
call
mov
adc
fdiv
cld
rol
(bad)
daa
or
call
adc
outs
dec
js
leave
lods
add
sub
popa
cmp
shr
les
xchg
lods
shr
les
push
dec
inc
xor
(bad)
setge
hlt
out
mov
std
sahf
push
pop
in
add
mov
(bad)
or
test
pop
mov
sub
jle
jns
stos
jns
cmp
xlat
pop
dec
adc
fcmovnbe
adc
cli
pusha
fs
mov
mov
inc
jbe
push
dec
jl
daa
sub
inc
dec
push
cmp
pushf
add
sub
test
sbb
jp
push
test
out
bound
pop
push
adc
ret
imul
lock
loope
pop
rol
loopne
hlt
test
pop
sbb
pop
sti
loopne
(bad)
cld
adc
jne
push
iret
adc
sub
pushw
and
xchg
add
inc
adc
inc
push
neg
push
push
inc
scas
gs
loope
fs
add
xor
and
ror
rcl
add
loopne
sti
dec
xchg
and
add
xchg
jbe
pop
inc
mov
adc
inc
clc
addr16
clc
xor
mov
int3
and
mov
push
sbb
inc
pop
or
and
mov
push
xor
lock
movs
adc
jne
pop
pop
xchg
nop
jne
dec
dec
and
adc
adc
fistp
es
adc
aam
dec
cld
mov
scas
lahf
push
add
movs
add
xchg
sub
pop
sbb
sbb
loopne
mov
cmps
mov
or
hlt
sbb
jo
jo
or
hlt
adc
dec
cmp
cdq
adc
jae
enter
test
cld
add
pop
adc
cdq
test
rol
inc
adc
fistp
daa
or
xor
inc
das
mov
clc
adc
repz
inc
add
cld
adc
add
xchg
lods
sahf
hlt
adc
lahf
pop
sub
mov
mov
or
mov
add
cmp
xor
sbb
ret
inc
mov
xchg
or
sub
sbb
jmp
arpl
or
xchg
shl
add
xor
in
test
inc
add
inc
push
dec
ins
clc
or
cmp
jg
push
in
adc
add
pop
das
sbb
clc
and
xchg
push
mov
into
rol
inc
adc
(bad)
xchg
sahf
test
aaa
or
mov
and
in
inc
sub
jge
sub
sbb
or
fs
(bad)
pop
pusha
inc
jl
or
mov
call
aam
in
ss
xor
stos
push
xchg
dec
add
lods
or
ret
push
nop
mov
pusha
add
xchg
sub
pusha
scas
xlat
cmp
daa
imul
in
jg
cmp
mov
inc
scas
aad
or
hlt
int
lods
shl
mov
mov
punpckhwd
cmp
test
add
jo
cmc
inc
or
enter
fs
xchg
stc
jmp
fs
aam
test
inc
adc
jge
push
pop
or
jecxz
inc
inc
inc
and
call
and
sbb
pop
cmc
mov
adc
stos
stos
and
rcr
lea
and
je
cmp
xor
lock
cs
test
jg
adc
pop
ret
add
adc
or
xor
sub
sub
sbb
test
fdiv
push
sbb
cmp
push
jnp
xor
out
mov
or
sub
mov
les
test
movs
sti
jecxz
mov
jmp
push
add
cmps
xchg
test
and
dec
push
add
push
into
push
clc
shl
cmp
pop
je
xchg
test
fld
push
add
mov
not
pop
pushf
pusha
cmp
and
ret
dec
popa
push
into
mov
dec
jl
movs
sub
or
daa
int3
add
neg
push
inc
mov
xchg
mov
ds
add
mov
push
fdivr
sub
mov
cwde
mov
push
in
sbb
ins
xor
ror
dec
sbb
lea
add
fld
mov
ucomiss
lds
cwde
rol
ja
push
ror
add
inc
loop
or
dec
fisttp
inc
sbb
or
add
and
xchg
cmc
ror
loopne
or
pop
adc
push
mov
pusha
and
(bad)
(bad)
(bad)
in
mov
sbb
pop
mov
daa
cmp
mov
bound
test
daa
(bad)
xor
mov
and
fsubp
jge
adc
jne
sbb
sub
xor
sub
pop
cmp
(bad)
les
shr
and
or
int
rcr
sbb
pop
ja
out
inc
out
or
adc
adc
(bad)
mov
(bad)
enter
jge
jo
xor
xor
(bad)
fld
xor
icebp
imul
add
jnp
test
dec
xchg
cmps
adc
mov
test
xor
add
xchg
jle
aaa
xlat
sbb
pop
xchg
cmp
cs
ds
out
push
jmp
lods
aam
(bad)
clc
sbb
inc
out
add
cmp
xor
push
cmp
(bad)
pop
add
clc
aaa
mov
xor
into
adc
jmp
adc
ins
ins
sbb
and
mov
jg
ret
(bad)
sbb
jg
pop
jg
cmp
add
xor
(bad)
push
add
sbb
inc
add
pusha
push
sti
mov
pop
jmp
cmc
sbb
popf
xchg
jne
movs
repz
fistp
dec
mov
add
adc
scas
loope
mov
add
inc
dec
xor
test
outs
xor
push
icebp
pop
enter
push
inc
jmp
outs
stos
mov
mov
add
cmps
out
test
xor
mov
stos
push
sbb
dec
shr
aaa
cmp
xchg
cmps
icebp
add
push
dec
sbb
cmp
or
in
jns
add
pop
jnp
push
sub
push
daa
jne
push
xchg
movs
lock
sub
fdivr
cmps
and
dec
pop
pop
push
xchg
push
in
jle
ds
adc
dec
pop
jmp
ja
leave
cdq
dec
and
sar
or
push
jbe
push
ret
mov
pop
int3
test
rcr
jge
pop
inc
jl
scas
push
xchg
push
(bad)
into
mov
jl
enter
mov
pop
js
xchg
int3
mov
and
xlat
or
ja
test
jb
clc
lock
jne
shl
sub
inc
or
test
dec
test
push
jecxz
or
add
enter
jae
push
and
ins
pop
pop
add
aam
imul
pop
mov
dec
pop
cmp
call
add
test
cmp
or
inc
sub
or
xor
imul
outs
jmp
pop
add
cmp
pushf
add
cli
add
pop
sub
cld
test
add
sbb
movs
stos
mov
(bad)
cmp
xor
inc
in
cmps
mov
js
(bad)
popf
xor
iret
(bad)
adc
add
and
add
pop
pop
clc
sub
sub
out
or
inc
ins
pushf
or
popf
retf
jp
mov
push
cmp
mov
mov
push
repnz
or
adc
ins
cmp
inc
(bad)
retf
dec
and
test
push
aaa
sub
test
mov
mov
inc
jo
int3
pop
sbb
add
mov
out
pop
sbb
mov
mov
rol
xchg
out
or
jmp
push
ins
out
pop
add
sub
inc
mov
or
cmp
lods
popf
ret
dec
sbb
add
xchg
fmul
push
adc
dec
sub
ja
push
aaa
test
fwait
shl
fmul
push
adc
dec
mov
inc
dec
pop
inc
sbb
sub
test
pusha
out
inc
adc
test
sbb
jne
popa
arpl
pop
xchg
pop
mov
rol
sub
adc
mov
dec
call
shl
ret
dec
lock
ret
lock
outs
loop
cmps
inc
adc
(bad)
pop
rol
and
jnp
adc
push
sbb
popa
imul
int3
or
jmp
mov
les
gs
int3
ins
loope
inc
adc
push
dec
arpl
jb
and
bound
fsubr
adc
pop
nop
pop
add
jle
inc
or
sbb
mov
imul
inc
push
push
or
jo
dec
mov
fwait
pusha
add
add
cmps
fadd
lds
sub
add
xor
ficomp
or
or
inc
add
(bad)
jns
adc
inc
cmp
or
js
fsubr
es
push
jne
add
shr
hlt
add
shl
push
popf
icebp
mov
push
or
pop
pop
push
cmps
pop
and
dec
or
outs
dec
hlt
sub
pusha
and
sbb
fwait
push
and
or
pop
push
outs
sbb
fcmovbe
fimul
leave
xor
sbb
mov
xor
scas
in
fs
scas
pop
mov
or
inc
add
push
mov
jp
ret
mov
or
or
movs
movs
dec
mov
cmps
push
into
xchg
popf
xchg
jmp
push
lahf
add
lock
adc
ins
ror
nop
sbb
add
daa
mov
add
push
mov
cmp
or
clc
repz
aam
fst
jp
sub
rol
and
das
sbb
(bad)
adc
push
mov
push
push
xor
shr
pop
(bad)
adc
pusha
out
inc
div
bnd
(bad)
lock
ja
mov
mov
mov
adc
fidiv
leave
nop
rcr
nop
enter
movs
push
mov
(bad)
fcomp
pop
or
out
cmp
out
sbb
cmovp
xchg
pop
push
ret
or
cs
sbb
jecxz
sub
(bad)
fld
push
(bad)
rcr
and
mov
ss
push
das
sub
push
sbb
sub
dec
loop
adc
xor
jg
add
adc
movs
sbb
das
push
push
fist
sub
cld
adc
pop
ja
call
iret
lock
xchg
pop
mov
dec
dec
push
sbb
push
adc
imul
std
sbb
mov
adc
cmp
fcom
jle
sub
test
and
test
ins
js
xchg
(bad)
push
inc
or
iret
push
fstp
fsubr
cmp
adc
and
pop
cmp
sbb
addr16
inc
sbb
lods
das
ret
push
out
gs
add
push
mov
cli
stos
mov
or
jle
icebp
sub
or
mov
jns
ins
or
movs
jmp
mov
arpl
es
push
cld
mov
lock
adc
push
popa
push
push
mov
repz
mov
or
daa
nop
mov
or
mov
(bad)
sub
in
in
test
lds
add
adc
in
mov
mov
sbb
adc
sub
lods
xor
add
or
pusha
retf
adc
mov
pop
imul
pop
xor
in
popf
dec
ss
mov
or
dec
ret
mov
in
and
aaa
add
sbb
(bad)
lock
xchg
inc
inc
adc
cwde
addr16
sahf
ret
loope
(bad)
movs
mov
pop
jne
cmovb
call
adc
sub
adc
(bad)
jne
mov
cs
lods
push
dec
sbb
test
mov
mov
pop
and
mov
and
cmp
sub
push
sbb
imul
sbb
test
sub
loope
inc
sub
adc
rcl
(bad)
icebp
cmp
dec
push
and
adc
fwait
sbb
adc
push
add
jecxz
push
mov
dec
pop
mov
ret
outs
xchg
test
pop
mov
sahf
pop
sbb
xchg
imul
jb
jp
pop
or
push
push
pop
scas
lods
adc
mov
push
and
and
push
inc
ss
je
minps
push
adc
jne
sub
adc
imul
(bad)
daa
sahf
out
ror
push
and
sbb
test
xor
xor
mov
cmps
add
imul
inc
addr16
adc
in
jo
movs
repz
lods
cmp
test
movs
mov
inc
in
ss
and
leave
retf
inc
mov
push
dec
cmp
and
add
sbb
pop
cld
je
popa
xor
in
mov
and
in
arpl
pop
and
and
cmp
sbb
sbb
push
mov
jp
push
pushf
jne
cmp
dec
test
jo
loopne
lock
movs
add
add
rcr
or
test
daa
pusha
clc
push
std
mov
daa
scas
sbb
sub
push
jmp
and
xchg
(bad)
int3
dec
in
mov
cld
jge
jle
jl
sbb
daa
push
mov
loopne
loop
mul
ss
ss
mov
add
lahf
and
in
xor
xchg
mov
and
and
xor
int3
jne
xor
adc
xchg
pop
push
cwde
adc
jle
or
loop
pop
and
adc
add
or
fisttp
mov
aad
jno
xchg
inc
mov
and
and
mov
jmp
xchg
fcomp
or
mov
(bad)
cmp
sub
pop
adc
icebp
adc
push
and
mov
sahf
arpl
ja
sub
fsub
pusha
pop
cdq
pop
jmp
retf
dec
sti
ins
iret
mov
adc
inc
mov
int
pop
das
fadd
and
enter
iret
pusha
add
push
mov
(bad)
and
xchg
add
mov
aaa
mov
xlat
xchg
push
test
rcr
add
push
loopne
mov
fcom
movs
out
xchg
and
pop
dec
ret
mov
nop
adc
add
or
pop
ss
and
cmp
cld
call
dec
push
pop
xor
pop
mov
jmp
push
push
and
and
jg
mov
and
fidivr
mov
mov
xchg
jg
mov
and
adc
and
pop
je
jecxz
jg
icebp
add
adc
xchg
stc
scas
or
adc
test
xor
ins
add
cmp
lock
add
jnp
dec
jns
out
xor
pop
aas
xor
dec
cmp
jo
mov
(bad)
jae
pop
push
test
jno
pop
adc
cmp
fnstcw
ins
loopne
mov
lock
cli
mov
rol
enter
popf
hlt
xchg
and
outs
mov
jne
retfw
mov
pcmpeqb
pop
test
sub
leave
popf
xchg
jb
inc
les
mov
sub
jno
jne
neg
push
pop
movs
xor
adc
add
sbb
or
jno
aam
movzx
adc
lods
out
push
nop
xor
getsec
push
out
add
and
pop
xor
dec
retf
cwde
dec
jae
dec
push
bswap
mov
mov
adc
lock
add
sbb
aas
adc
and
rcl
scas
lock
div
adc
add
movsx
xchg
test
jne
and
ffreep
inc
xor
push
xor
ret
inc
xor
sub
add
mov
or
cmp
mov
inc
sbb
dec
mov
mov
(bad)
loopne
cs
push
stc
loopne
inc
loopne
inc
inc
inc
mov
call
inc
dec
ret
push
jmp
add
add
sbb
dec
sub
jmp
lock
and
or
push
xchg
lahf
dec
nop
out
sar
xlat
add
add
out
mov
(bad)
sbb
or
repnz
jg
adc
adc
jnp
mov
jge
inc
or
(bad)
inc
cwde
cmp
inc
das
rep
and
inc
test
mov
xchg
ds
fist
mov
inc
cwde
or
mov
sbb
cmp
inc
mov
sub
inc
adc
mov
push
sbb
das
push
test
xchg
dec
and
pop
add
add
and
add
sbb
ror
xor
cmp
push
popa
mov
or
pop
or
and
push
popa
add
pop
push
jp
mov
sbb
cmp
add
test
mov
xchg
inc
jmp
aaa
add
xor
scas
and
bound
retf
std
cld
adc
jns
jmp
ja
fstp
pushf
or
fld
push
mov
fmul
jbe
dec
mov
add
dec
jo
sub
test
shl
push
jnp
sub
test
in
cld
cdq
nop
xchg
or
js
sub
push
sub
pop
dec
in
pop
test
xchg
or
or
push
mov
es
(bad)
dec
adc
scas
movs
jo
dec
push
adc
inc
dec
dec
inc
add
ins
xor
inc
adc
dec
push
inc
xor
xor
gs
int3
daa
mov
add
jge
ds
das
push
mov
movs
mov
cdq
sub
mov
mov
jecxz
inc
in
inc
out
mov
mov
adc
fneni(8087
dec
jae
pop
xchg
imul
jo
outs
jecxz
mov
sbb
push
mov
push
push
jns
outs
fist
mov
pop
add
mov
push
int
cmp
jnp
add
mov
mov
push
inc
jl
or
jo
aam
inc
ret
mov
nop
popa
jg
sub
cmp
adc
fidiv
loopne
hlt
add
fld
jecxz
ret
mov
sbb
push
add
jb
cmp
xor
xchg
pop
leave
outs
adc
pop
sub
adc
movs
call
and
movs
or
mov
dec
call
and
adc
inc
or
pop
push
pushf
test
dec
xlat
inc
cmp
stos
rcr
rcr
ds
repnz
arpl
sub
xor
pop
and
add
push
inc
inc
sub
arpl
mov
sbb
in
cmps
pop
les
mov
sub
sub
xchg
and
outs
cmp
ret
mov
ror
icebp
jno
lods
test
loope
rol
sbb
les
test
fwait
xchg
test
in
adc
jp
mov
int3
mov
inc
or
push
out
pop
(bad)
pusha
push
xchg
mov
or
movs
pop
xor
lock
or
lahf
or
add
outs
stos
sub
cmp
jae
aaa
ja
outs
pop
movs
push
dec
sbb
mov
movhlps
sub
and
push
aas
imul
sbb
add
jg
mov
sub
jg
cwde
mov
dec
(bad)
cmp
mov
dec
push
and
cmps
jb
inc
retf
in
cli
iret
push
sbb
imul
cmp
add
cmps
enter
adc
inc
pop
inc
add
in
dec
dec
sub
sbb
jbe
nop
push
sbb
cwde
push
fcomp
adc
sahf
out
les
repnz
mov
ins
and
fld
sub
repnz
or
xchg
outs
sbb
ins
mov
mov
and
push
dec
ficomp
adc
xchg
sub
jns
cmp
pop
xor
sbb
into
and
mov
cdq
add
jmp
xchg
inc
push
ds
and
je
inc
xchg
dec
es
mov
fcomp
lods
push
mov
jns
ret
add
loopne
mov
loope
adc
sub
add
or
neg
repnz
sbb
adc
jp
sbb
push
cmp
test
retf
lods
aas
pop
sub
je
and
test
add
(bad)
cld
pop
call
push
je
int3
jmp
dec
sbb
or
xchg
sub
cmps
jge
mov
add
pop
loop
sub
fnstenv
inc
outs
mov
vmread
cmp
jnp
add
out
adc
push
or
xor
add
sub
xor
in
pushf
dec
mul
fiadd
out
add
sbb
mov
fs
ja
stc
cwde
rcr
test
shr
repz
aam
cld
adc
and
jns
out
sub
xor
sahf
out
sahf
cmp
inc
dec
dec
push
shr
inc
mov
enter
(bad)
rol
loope
ror
cmc
mov
(bad)
pop
mov
out
and
push
xor
fcomp
outs
mov
aaa
or
mov
mov
mov
xor
mov
mov
lods
or
add
inc
pop
clc
sub
sub
pop
mov
adc
xor
ficomp
cdq
gs
lea
addr16
push
push
and
mov
pop
sbb
mov
add
call
pop
sbb
xchg
(bad)
(bad)
movs
mov
shl
adc
push
jae
stos
xor
ja
mov
add
inc
mov
jl
icebp
adc
mov
inc
pop
or
add
jo
adc
push
aas
mov
inc
add
(bad)
xor
jmp
inc
or
ds
pusha
dec
pusha
pop
aad
rol
jl
sub
sub
dec
(bad)
ja
jnp
rcr
jmp
xor
pop
out
push
dec
lock
sbb
and
inc
sub
rcl
icebp
loopne
or
fisttp
das
pop
fmul
mov
xlat
xor
(bad)
pop
scas
arpl
mov
ins
in
fidiv
jmp
cwde
push
inc
jg
jecxz
jge
push
cmp
jle
pop
ds
inc
sub
jle
adc
mov
pop
add
xchg
mov
pop
add
cmp
adc
add
jge
jmp
inc
rol
retf
add
inc
cdq
pop
ret
dec
lods
adc
inc
scas
mov
cmp
sub
push
mov
icebp
adc
mov
sbb
xchg
sub
arpl
dec
pusha
call
sbb
push
mov
cmp
and
push
push
jbe
stc
push
and
sbb
xchg
icebp
add
sub
cmp
jecxz
cmp
xchg
add
mov
push
pop
push
push
jne
or
cmps
rcl
sub
int3
mov
mov
cmp
push
or
imul
test
daa
add
sbb
mov
mov
add
rcl
inc
sbb
dec
adc
mov
sti
xor
out
mov
dec
pushf
movs
nop
add
or
int
jo
sbb
push
retf
pusha
out
sub
fdivrp
jnp
adc
dec
adc
(bad)
add
push
je
mov
jl
mov
in
or
sbb
mov
call
xor
rcr
inc
or
cmp
cmp
dec
or
pop
mov
retf
jb
test
daa
push
jge
push
and
sub
(bad)
pop
test
outs
push
(bad)
fmul
jp
test
fbstp
(bad)
mov
add
xchg
push
or
cld
out
xchg
ins
cmp
pop
imul
inc
test
mov
pop
gs
adc
jne
test
or
pop
out
mov
ds
pop
jnp
les
movs
inc
pop
cmc
pop
and
sar
and
lds
lds
(bad)
(bad)
imul
rol
shl
enter
add
push
neg
test
cmp
mov
jmp
mov
push
dec
mov
pushf
add
mov
push
adc
sti
xchg
jmp
js
lods
fwait
repnz
out
fiadd
leave
pusha
call
ror
js
int
xlat
mov
out
cmp
je
cwde
cmps
sbb
test
dec
scas
sub
inc
inc
push
push
inc
outs
or
inc
jne
test
imul
mov
push
inc
sub
mov
fbstp
fstp
mov
jo
cmp
sbb
mov
mov
push
mov
shl
out
ror
cmps
xor
sbb
or
adc
inc
aaa
sbb
xlat
adc
fadd
stos
ins
or
out
nop
mov
(bad)
and
mov
mov
cmps
mov
add
mov
sbb
pop
mov
jnp
cmc
inc
cmp
cmp
mov
or
mov
xor
lahf
icebp
pop
or
mov
call
xchg
jnp
xlat
add
inc
xor
and
dec
jp
sbb
cmp
les
ins
cld
or
in
xlat
inc
adc
jae
lods
push
mov
mov
dec
daa
or
inc
ds
sbb
test
neg
xchg
dec
je
adc
adc
jmp
ss
push
nop
sub
lods
(bad)
dec
int3
test
push
xor
in
dec
pop
pop
bound
aaa
in
push
or
push
cmp
inc
add
fsubr
inc
(bad)
push
in
pop
call
add
or
rcr
out
bound
in
mul
pop
movs
push
lods
in
xlat
mov
ins
vmread
dec
enter
push
or
mov
adc
cld
repnz
sbb
nop
pop
das
adc
push
or
inc
push
sbb
adc
and
jle
sbb
int
xor
adc
lds
jle
pop
je
dec
test
in
fadd
call
xor
mov
mov
mov
mov
sbb
jge
sbb
lahf
out
xchg
or
bound
fiadd
cmp
out
mov
das
or
cmp
ins
dec
push
or
je
xor
int3
adc
xchg
out
popa
mov
stos
into
fidivr
jl
cmp
ds
xor
retf
in
inc
pop
in
mov
mov
mov
in
sbb
cmp
inc
jne
dec
add
or
test
mov
cmp
cwde
out
push
or
lods
push
(bad)
add
imul
movs
add
inc
xor
pop
xor
add
push
sbb
fdivr
cmp
or
ret
jno
pusha
jge
xor
sub
xchg
adc
jg
pop
out
inc
mov
or
rcl
sbb
clc
int3
xor
cmps
or
jno
cmp
sbb
xor
push
ret
pop
adc
mov
fbstp
jae
jno
aam
addr16
mov
movs
jle
call
mov
popf
nop
or
sahf
inc
add
icebp
or
dec
and
test
adc
push
cmp
stos
cdq
adc
xor
or
inc
push
or
xor
sub
mov
jae
push
cmp
xchg
jecxz
xchg
retf
(bad)
cmp
jl
jnp
out
popf
jecxz
cmp
imul
mov
shr
or
and
hlt
inc
adc
shr
cmp
adc
cmps
icebp
add
sbb
xchg
cli
mov
rcl
sbb
mov
leave
ror
mov
push
xlat
retf
inc
stos
dec
(bad)
out
dec
or
add
cmp
push
pop
dec
or
pop
cmp
loope
cmp
jl
setae
nop
retf
push
mov
std
test
dec
ret
ret
xor
jae
adc
adc
movs
sub
shl
(bad)
sbb
fisttp
dec
imul
retf
imul
lods
push
jnp
add
push
test
dec
add
cmp
jmp
push
cmp
push
dec
std
dec
js
push
aaa
add
sub
test
ret
add
xchg
inc
pushf
adc
sbb
add
mov
mov
push
pop
aaa
push
xchg
in
cmc
add
adc
pusha
inc
inc
add
jnp
fisttp
js
add
mov
enter
cmp
inc
add
in
in
sub
jle
mov
push
jo
inc
pop
loop
push
mov
push
int
dec
mov
xchg
sub
cmp
mov
pop
inc
push
add
loop
movs
cdq
(bad)
in
pop
or
cs
xchg
iret
sar
inc
enter
sahf
data16
cwde
pop
sub
lods
ret
lock
sbb
in
adc
push
enter
in
rol
je
hlt
cmp
mov
pop
pop
daa
inc
repz
stos
add
test
xor
adc
out
mov
cmp
jne
mov
div
mov
call
or
lock
call
dec
inc
call
dec
rcl
xchg
pop
and
cmp
lea
retf
add
leave
aam
push
mov
dec
scas
stos
and
scas
mov
or
push
in
aas
jle
xor
jne
mov
aas
xlat
inc
dec
add
mov
inc
or
mov
cmc
push
and
ret
cmp
adc
daa
jmp
lea
pushf
jno
xchg
mov
popa
ins
sub
test
out
inc
sub
fsubr
lea
and
js
xor
lods
add
sub
outs
arpl
and
dec
jecxz
jb
out
clc
inc
cmp
and
(bad)
jl
pop
sub
cmp
adc
or
cmp
je
jmp
ret
push
mov
(bad)
ja
retf
xchg
adc
push
test
addr16
dec
xchg
pop
iret
mov
xchg
adc
inc
add
imul
xor
dec
test
jmp
or
inc
(bad)
(bad)
cs
or
inc
dec
add
imul
mov
inc
dec
dec
adc
inc
push
inc
rol
push
or
mov
jo
cwde
push
push
aam
adc
imul
mov
inc
enter
mov
pop
fsubrp
scas
mov
mov
cmp
cwde
jmp
jge
(bad)
adc
adc
inc
xchg
xchg
lods
adc
call
mov
dec
clc
pop
mov
cmp
mov
dec
and
and
cli
inc
mov
adc
ficomp
adc
inc
call
adc
add
lahf
ror
stos
inc
les
add
inc
mov
in
add
lock
inc
mov
add
lea
jb
mov
rcr
inc
sub
les
(bad)
adc
inc
or
inc
and
loop
les
dec
sbb
lock
test
cmp
mov
test
in
pop
repnz
mov
in
imul
sub
shl
pop
pop
hlt
repnz
jmp
movs
mov
jmp
sahf
xchg
lock
call
retf
in
add
out
push
sub
xor
pushf
xor
push
mov
and
add
movs
add
rol
xlat
scas
adc
and
repz
mov
push
rcr
in
mov
xor
inc
lock
dec
or
rol
inc
movs
(bad)
ds
adc
not
hlt
sbb
std
cmp
mov
xor
fist
dec
dec
cmps
nop
(bad)
xor
xchg
popf
int3
and
in
push
lods
dec
inc
(bad)
sbb
sub
pushf
ja
enter
sbb
sub
add
adc
test
mov
sbb
test
cmp
inc
sar
shr
daa
push
xchg
fild
dec
and
adc
sub
out
jo
push
aas
lock
dec
dec
ficom
inc
dec
cmp
mov
out
or
xchg
inc
ret
dec
je
push
push
mov
inc
xor
lock
xchg
mov
mov
or
fnstcw
lock
adc
xchg
rcl
add
aam
add
mov
inc
xor
mov
adc
cmp
sbb
and
repz
inc
test
mov
sar
cmp
icebp
or
dec
jne
dec
dec
movs
xor
inc
cmp
jmp
les
sbb
or
adc
push
(bad)
cwde
xchg
mov
dec
adc
sub
mov
and
xor
mov
test
push
push
push
and
mov
dec
mov
push
mov
inc
inc
or
add
sbb
push
cld
push
mov
mov
ins
movups
add
xor
test
push
repnz
xchg
add
rol
ins
pop
in
add
shl
mov
sar
pop
clc
inc
ret
push
add
dec
cmp
sbb
or
daa
inc
or
add
adc
lahf
add
fs
enter
imul
and
add
enter
rol
ds
outs
jne
outs
cmps
test
and
and
push
cdq
sub
imul
inc
neg
xchg
test
pop
or
or
pop
cwde
jb
popa
jb
add
test
or
popa
mov
add
push
test
add
push
bound
ins
jnp
pop
pop
or
jo
bound
movs
adc
mov
inc
std
lea
lock
and
adc
mov
or
(bad)
adc
xlat
sbb
sbb
mov
js
arpl
adc
loopne
icebp
rcr
push
add
adc
inc
add
xor
and
(bad)
(bad)
fiadd
adc
sub
call
or
call
cmp
rcl
in
or
push
mov
add
adc
jl
out
les
pop
clc
add
add
pop
js
inc
mov
sahf
out
ds
push
sbb
mov
cmps
stc
ficom
push
jl
in
push
and
push
and
jns
mov
lock
push
xor
inc
dec
push
jo
nop
pop
jno
sahf
mov
cmps
pmullw
imul
push
push
scas
pushf
push
lock
stos
adc
mov
lods
out
stos
mov
inc
inc
and
cmp
pop
xchg
shr
out
fldcw
push
dec
ss
fsub
cld
aaa
push
mov
cmp
xchg
call
icebp
dec
js
sbb
and
xor
mov
inc
pop
mov
test
push
or
inc
push
cmp
cmps
pop
icebp
or
fsubr
pusha
pop
mov
sub
sbb
add
dec
mov
cmp
and
(bad)
and
imul
cmp
xor
push
xchg
push
adc
add
sar
jns
dec
cmp
dec
dec
sub
adc
or
call
add
pushf
shl
test
cmp
scas
dec
cwde
add
inc
dec
add
mov
ds
inc
inc
xor
xor
iret
repz
cmp
cmp
shr
cmps
icebp
inc
lock
rol
add
mov
cmp
fwait
nop
pop
push
enter
repnz
adc
inc
mov
into
or
or
mov
cmp
cmp
sub
xchg
into
push
dec
pop
fs
pusha
and
iret
arpl
xor
inc
jae
jp
jmp
clc
dec
or
test
mov
add
ret
test
cmp
popa
fs
jae
rcr
fsub
adc
js
ds
lock
out
adc
pusha
and
or
xchg
in
leave
adc
outs
jne
add
aad
adc
pusha
mov
adc
test
mov
rcl
lea
jne
or
mov
in
(bad)
push
pop
(bad)
repz
mov
mov
fcom
je
jecxz
out
dec
adc
rol
push
lock
cmp
pop
sub
cmp
dec
clc
push
bound
inc
pop
adc
jns
add
xor
mov
jmp
sbb
ins
or
mov
pop
test
out
or
lock
fadd
mov
rol
pop
lock
scas
mov
add
or
add
add
cmps
mov
add
cmps
mov
addr16
push
add
icebp
push
mov
lods
sti
gs
nop
mov
and
cmps
xlat
mov
push
xchg
enter
pop
jnp
into
cld
push
xor
or
pop
mov
and
cmps
or
mov
aad
or
push
stos
lock
cdq
nop
add
out
andps
pop
ins
and
daa
popa
add
xchg
sub
inc
inc
adc
ret
fld
push
jb
jnp
cs
arpl
inc
xor
je
imul
sbb
ret
add
jae
add
sbb
pop
xchg
push
rep
popa
sbb
jo
pop
jbe
movs
imul
xor
sub
sbb
int
in
into
push
push
nop
inc
outs
inc
add
cmp
xchg
js
enter
or
xchg
bound
jle
push
or
inc
nop
pop
pop
and
stos
lock
adc
bound
inc
dec
mov
sbb
popa
jmp
dec
pop
pop
and
sub
test
fild
sub
ins
or
iret
ret
and
push
imul
jecxz
and
leave
adc
or
inc
sahf
aaa
inc
call
rcl
call
mov
push
inc
mov
add
jo
adc
nop
mov
adc
(bad)
jmp
or
out
nop
nop
jo
fisub
xlat
ins
mov
sbb
loope
adc
cmc
das
and
(bad)
jge
and
xor
xor
xor
inc
imul
dec
dec
dec
dec
dec
dec
dec
dec
add
push
push
push
pop
pop
pop
test
adc
jno
xor
xchg
inc
xor
xor
push
test
add
test
adc
retf
push
jl
inc
xchg
les
jmp
push
sub
rol
in
inc
std
jbe
xchg
out
mov
and
add
add
out
mov
jns
inc
bound
xchg
not
lods
mov
and
pop
ret
xchg
(bad)
pop
push
xchg
jo
jb
inc
xchg
xor
mov
xchg
cs
pop
inc
sub
clc
inc
jae
xchg
inc
push
push
and
in
xchg
and
in
(bad)
push
mov
inc
jge
shl
dec
or
sar
stos
pop
mov
xor
cli
push
sbb
nop
add
jl
mov
and
add
rcr
and
add
ret
add
jl
xor
or
enter
in
add
xor
push
in
dec
jae
inc
inc
dec
pusha
movs
nop
jle
sub
loopne
sub
nop
nop
jo
das
and
mov
leave
stos
cmp
adc
call
adc
pop
or
mov
cmp
add
sbb
adc
pop
xchg
lahf
push
and
xor
call
outs
adc
cvtps2pd
cmp
xchg
jmp
push
push
sbb
addr16
(bad)
(bad)
jecxz
leave
and
mov
clc
sbb
ror
retf
adc
and
add
cmp
aaa
sub
out
mov
in
das
inc
jmp
popa
cmp
dec
cs
jmp
pop
scas
jnp
xlat
sub
mov
push
(bad)
adc
mov
and
xchg
(bad)
or
jmp
add
(bad)
sti
push
add
mov
(bad)
add
adc
mov
or
cmps
mov
sub
sbb
and
push
pop
xchg
mov
cli
nop
iret
lock
inc
rol
mov
mov
pop
test
inc
push
or
ins
fwait
loopne
xor
pusha
je
mov
add
mul
adc
add
mov
ret
adc
inc
or
call
add
imul
icebp
push
ins
clc
sub
inc
xchg
fimul
ficomp
or
popa
adc
push
add
dec
adc
test
jb
mov
ss
arpl
aad
ins
mov
jmp
cmp
adc
lock
mov
add
mov
jmp
jmp
xor
movs
mov
dec
push
xor
pop
dec
xlat
ins
push
cmp
aaa
in
xlat
adc
call
ja
sbb
clc
jb
(bad)
pushf
dec
adc
xor
loopne
mov
in
test
sbb
adc
xchg
mov
imul
fs
add
ror
sbb
sbb
(bad)
aad
imul
fcom
sbb
into
push
xor
pusha
mov
dec
push
arpl
icebp
mov
cmp
xchg
addr16
xchg
sbb
push
sbb
movzx
cmp
(bad)
gs
push
xchg
sub
test
push
jb
cdq
and
mov
xor
push
aas
js
sub
test
daa
aaa
sbb
and
pop
mov
shr
es
jg
push
mov
mov
lahf
or
add
aas
mov
sbb
xchg
adc
repnz
add
in
mov
mov
sti
inc
xor
mov
push
xor
dec
cmp
add
retf
data16
inc
inc
mov
adc
or
inc
mov
mov
push
movs
imul
pop
add
test
xchg
mov
dec
jg
cmp
adc
movs
pop
movs
push
sub
adc
push
js
push
data16
lea
les
push
add
xchg
rol
(bad)
jg
inc
sbb
das
rol
clc
dec
add
es
cli
xchg
pop
ss
xchg
inc
jnp
or
cs
cmp
push
mov
fcom
jmp
rcr
xchg
enter
mov
fmul
or
and
hlt
cmp
lea
imul
pusha
dec
sar
test
inc
(bad)
sub
or
or
adc
ret
and
adc
sbb
cmp
cdq
out
je
xor
loopne
adc
in
inc
cld
dec
popa
xchg
or
push
cmp
data16
leave
mov
or
mov
pushf
dec
push
div
adc
movs
jmp
mov
test
cmp
rcr
rol
xlat
or
dec
xchg
(bad)
or
movs
or
push
xor
and
mov
jge
out
jns
test
dec
push
sti
cmp
sub
jno
test
push
adc
pop
mov
cmc
in
push
or
push
in
xchg
popa
and
push
adc
dec
arpl
push
mov
inc
add
imul
das
test
lahf
adc
ins
jae
add
dec
sti
int
mov
dec
adc
or
or
ds
or
add
add
fs
pop
(bad)
push
cmp
pop
or
or
pop
jo
xor
inc
rcl
mov
loop
pop
inc
pop
(bad)
cmp
push
rol
pop
repnz
add
add
add
sub
test
stos
ins
mov
lahf
std
adc
mov
sbb
mov
xor
pop
ins
fbstp
inc
pop
pop
push
inc
(bad)
jecxz
push
push
adc
and
xchg
mov
test
fimul
ror
test
adc
cmp
je
jmp
out
pop
cmps
or
sahf
test
sub
es
popa
dec
inc
shr
xor
inc
loope
sbb
push
adc
ret
jo
and
xor
iret
pop
and
dec
or
daa
sub
lea
inc
push
pop
inc
dec
dec
scas
push
cmp
jl
sbb
(bad)
or
pop
inc
cmp
clc
dec
mov
cld
aad
cmp
jae
mov
in
push
or
jbe
sbb
ss
inc
xor
cmp
leave
out
inc
add
push
or
sti
cmp
inc
or
sub
mov
js
in
xchg
(bad)
sub
push
push
ds
mov
cmp
jmp
sbb
push
adc
inc
in
pop
add
mov
xchg
xor
icebp
adc
call
jae
and
jecxz
jmp
and
and
add
push
and
ins
pop
jecxz
mov
and
rcr
mov
es
vmread
mul
enter
sub
xor
fcom
stos
and
enter
add
sbb
pop
inc
xchg
xchg
mov
adc
and
mov
ja
ins
add
adc
or
xchg
or
or
mov
fmul
pop
adc
xor
dec
xor
hlt
or
dec
mov
sub
mov
sbb
mov
cwde
out
push
adc
test
xor
add
mov
inc
ret
pop
or
andps
inc
mov
scas
xchg
mov
shl
iret
jmp
nop
and
mov
xchg
aas
sub
push
jge
sub
push
fbstp
stos
add
jnp
je
inc
xchg
jno
dec
mov
out
nop
xchg
push
push
sbb
dec
cmps
xor
push
push
xor
imul
repz
stos
inc
jne
cmp
mov
cmp
push
push
ss
pop
adc
mov
add
iret
dec
pop
pop
rcl
lock
sbb
hlt
enter
mov
popa
das
std
sub
leave
sub
pop
(bad)
hlt
sbb
sbb
cmp
ficomp
inc
push
jle
data16
adc
and
mov
dec
pop
inc
les
push
sbb
mov
sahf
ss
std
adc
pop
test
popa
cwde
cld
mov
or
ins
push
addr16
bnd
adc
add
sub
sar
lock
inc
xor
gs
out
mov
hlt
xor
inc
mov
add
dec
sbb
xchg
sub
fnstenv
pandn
icebp
in
ss
and
pusha
ret
imul
mov
ret
dec
push
cmps
jecxz
das
adc
jmp
or
dec
adc
loope
jo
inc
lock
inc
and
test
pop
add
ins
cmp
jge
pop
push
push
inc
adc
fsubr
repnz
dec
icebp
push
fsubr
int3
push
lods
cdq
call
mov
ficom
pop
mov
sbb
sbb
jge
clc
xchg
call
pop
mov
cdq
enter
add
popf
mov
sub
push
or
xor
or
sub
sub
jb
in
push
add
inc
push
sub
ret
in
cmp
or
es
je
out
pop
xchg
and
repz
test
ja
mov
add
pop
test
fadd
adc
push
lock
inc
xor
push
sub
retf
pop
add
jnp
pop
iret
hlt
xchg
mov
or
hlt
pop
into
hlt
sub
inc
add
sbb
hlt
ss
pop
jns
push
mov
ins
sbb
loopne
fist
xor
leave
lock
ror
cld
add
xor
and
fldenv
sub
pop
fild
push
out
data16
mov
sub
stos
xor
outs
lea
push
sbb
mov
ror
adc
pop
loopne
ja
ins
or
fistp
xchg
cmp
movs
mov
add
cmp
jne
pop
jl
cmp
mov
and
jne
loopne
mov
ret
stc
ret
call
inc
lods
cmp
or
or
xchg
add
or
psubusb
or
xchg
or
bound
adc
mov
mov
cmp
jno
add
or
(bad)
or
aaa
test
retf
mov
inc
test
in
pusha
bound
outs
dec
pop
push
xor
stos
repz
inc
add
mov
mov
pop
pop
pusha
data16
ss
xchg
dec
call
bound
ret
out
daa
and
add
pop
sbb
push
(bad)
mov
adc
sub
aad
cvttps2pi
lods
jmp
cmp
inc
daa
call
jno
inc
ss
and
loopne
shld
adc
stos
inc
clc
xor
idiv
lods
clc
sub
test
clc
sub
adc
nop
pop
nop
sbb
clc
and
outs
xor
dec
xor
mov
xor
adc
push
push
pop
fwait
sub
pop
sbb
mov
sbb
(bad)
lock
call
test
add
movs
inc
sub
pop
leave
test
in
and
mov
push
adc
inc
out
loopne
or
lock
cmp
repz
mov
rol
or
add
jmp
ficomp
loopne
inc
mov
sbb
shl
jl
test
ins
shl
inc
inc
mov
ins
mov
cmp
adc
jle
jge
nop
mov
dec
fwait
jae
jl
jge
mov
je
cmps
push
add
sbb
inc
cmps
pop
sbb
call
aaa
aas
mov
adc
sub
sar
pop
push
je
mov
ret
dec
dec
add
inc
push
into
fiadd
or
pop
and
adc
es
adc
add
and
or
addr16
sub
mov
aam
sub
test
ins
mov
in
dec
(bad)
das
adc
cmps
lods
mov
pop
jle
dec
push
jmp
movs
movs
stc
adc
sbb
dec
clc
add
cmps
pop
pop
fmul
sub
cld
or
sbb
clc
push
fidivr
push
add
pop
mov
xor
sbb
add
add
mov
mov
pop
inc
xor
cwde
out
ret
adc
loopne
pop
sbb
inc
xchg
mov
(bad)
mov
push
(bad)
sbb
movs
stos
push
in
test
es
out
test
gs
mov
sbb
or
stc
es
cmp
push
out
adc
(bad)
dec
popa
rol
xchg
rol
fdivr
ror
outs
add
fisubr
(bad)
cld
ja
sbb
sbb
push
(bad)
int
jo
add
mov
xor
add
pop
fistp
push
and
push
add
gs
ins
test
addr16
inc
ss
inc
add
xchg
sbb
cld
inc
(bad)
int
pop
clc
xchg
inc
out
lods
in
push
cmps
fs
lock
mov
into
dec
enter
push
dec
fld
xor
mov
lea
les
dec
lock
fadd
and
mov
and
mov
pop
xchg
jb
pop
jp
push
aas
cmp
iret
sub
ins
sbb
pop
(bad)
popa
ficom
mov
sbb
daa
mov
xor
jb
and
rol
in
sti
and
popf
pop
push
adc
cmp
loopne
test
xor
adc
je
cmp
ret
or
xor
adc
add
(bad)
jb
(bad)
mov
nop
dec
mov
ins
xchg
cmps
out
aas
je
(bad)
or
pop
push
and
fwait
xchg
add
fmul
dec
movs
add
inc
pushf
sar
mov
and
mov
push
or
pop
dec
add
inc
ds
mov
mov
mov
sub
inc
inc
push
inc
inc
lods
loopne
inc
mov
add
push
(bad)
sbb
call
es
mov
add
adc
push
cmps
or
call
or
add
movs
sbb
(bad)
in
imul
aad
push
bound
les
and
pop
cmp
add
sbb
xor
add
popf
and
imul
mov
ins
xchg
fcmovu
mov
xchg
es
sub
cwde
ins
jo
cmps
(bad)
fcom
syscall
es
pop
pop
mov
adc
inc
adc
jmp
outs
pop
gs
sti
pop
push
aas
jbe
and
jno
mov
sub
dec
aas
popa
adc
pop
movs
add
add
jmp
pop
push
das
adc
mov
or
and
test
and
out
pop
jo
test
gs
and
aad
mov
xchg
or
out
ins
imul
cmp
sahf
gs
dec
adc
jo
lock
call
lods
(bad)
xchg
jne
xor
sar
push
dec
mov
sub
cmp
mov
outs
mov
xor
les
inc
inc
popf
push
arpl
mov
dec
and
lods
xchg
sbb
sbb
push
mov
out
inc
out
push
adc
or
xor
xchg
push
add
mov
dec
sbb
sbb
sub
inc
(bad)
fsubr
gs
push
lock
test
xchg
xor
hlt
adc
pop
xor
mov
push
adc
add
add
sub
or
push
dec
jp
push
mov
test
inc
dec
les
minps
jnp
dec
mov
and
mov
inc
rol
or
addr16
pop
ja
or
scas
inc
inc
(bad)
mov
movs
pop
mov
clc
inc
movs
cli
lods
out
scas
out
cmp
or
psrad
iret
int
sti
cwde
popa
pop
xchg
aaa
enter
and
or
cmp
shr
pop
mov
outs
stc
mov
(bad)
retf
push
cmp
jp
or
jnp
cwde
push
cwde
mov
mov
or
pop
mov
lods
sub
xchg
adc
fs
xor
mov
jl
ins
movs
jb
add
ja
mov
push
test
pop
inc
dec
push
adc
jo
xor
aas
ins
test
or
inc
inc
xchg
jg
(bad)
int3
jne
cld
jmp
movs
ins
push
push
data16
ret
ds
in
mov
sbb
add
cli
imul
or
sbb
cmps
(bad)
pop
xchg
mov
scas
inc
pop
pop
leave
and
aas
and
inc
jb
sub
xchg
pop
and
xor
leave
inc
jb
inc
or
and
and
dec
ror
je
or
xchg
push
pop
adc
rcl
sbb
mov
mov
sbb
jge
daa
and
loop
popf
or
ret
push
and
xor
jmp
and
stos
push
nop
retf
int
xlat
jl
add
enter
jl
xchg
xchg
xor
xor
push
add
inc
loope
xchg
into
push
in
movs
cmp
push
mov
ret
(bad)
mov
int
push
dec
pop
iret
jae
fild
es
(bad)
dec
or
xchg
and
aas
rol
(bad)
pusha
gs
mov
add
data16
dec
xor
sbb
xchg
add
pop
push
(bad)
dec
xor
rol
inc
ror
call
sbb
xlat
stc
sub
xchg
sub
dec
or
test
(bad)
mov
cmp
mov
pop
mov
adc
add
and
cmps
mov
out
imul
or
hlt
add
mov
aaa
lods
inc
inc
inc
enter
inc
push
lock
push
mov
aas
push
push
sbb
push
jo
(bad)
push
sbb
jns
std
jmp
push
dec
inc
add
xor
(bad)
movs
mov
pop
stc
xor
xor
and
popa
nop
frstor
and
sub
ss
add
rol
in
call
call
mov
dec
mov
add
lock
loop
popa
sbb
cmp
or
sbb
call
outs
mov
mov
clc
xchg
enter
or
hlt
test
sbb
in
(bad)
clc
leave
rol
lods
xchg
push
enter
push
adc
xchg
and
jle
dec
ss
lds
mov
mov
pop
int
mov
cmp
pop
mov
aam
popa
and
arpl
jne
dec
push
pop
dec
xor
loopne
fs
sbb
aam
stos
test
mov
adc
adc
shl
out
mov
xchg
cmp
inc
and
xlat
xchg
push
xor
sub
into
lea
jo
cdq
movs
cmp
data16
ss
int3
push
mov
lds
in
fld
and
and
(bad)
push
popf
cli
or
add
cmp
mov
push
or
inc
(bad)
aam
(bad)
jmp
pop
sbb
outs
mov
jns
sbb
dec
icebp
cmovg
xchg
ins
xor
add
add
sbb
mov
sub
and
cmps
xor
inc
sub
mov
sub
fstp
pop
xor
jne
imul
loopne
jmp
xlat
enter
or
or
mov
fsub
adc
or
sub
loopne
pop
iret
add
or
push
fld
inc
popa
movs
add
clc
ss
popa
and
add
jne
fst
loopne
or
dec
call
test
xor
adc
mov
es
mov
not
push
mov
jecxz
bound
iret
popw
repnz
and
fsubr
dec
ds
call
aad
loopne
inc
call
loope
mov
stc
aam
shl
pop
cmp
push
daa
add
mov
and
or
inc
stos
imul
cli
xchg
inc
and
and
add
int
fmul
add
pop
mov
dec
ret
ja
sti
jl
inc
xor
fdivp
test
cdq
(bad)
push
mov
bound
inc
mov
fnop
shr
mov
dec
ret
inc
cmp
pop
lock
sub
mov
inc
fadd
daa
add
pop
jne
in
xchg
pop
add
xor
fadd
(bad)
adc
mov
jle
aaa
dec
and
inc
jb
adc
mov
dec
ret
bound
idiv
mov
xchg
cmp
inc
cmp
cmp
inc
add
push
cs
hlt
add
xor
adc
pop
push
cmp
(bad)
or
das
add
and
lock
clc
fstp
aaa
aam
pop
out
mov
jb
sbb
inc
sub
inc
xor
jnp
push
mov
vunpcklps
mov
fdivr
inc
cmp
xchg
mov
cmp
push
push
add
sysenter
xchg
sub
pop
inc
inc
jae
dec
movs
xchg
ja
xor
cmp
pop
or
mov
and
fild
daa
popf
dec
into
or
and
push
mov
inc
mov
xchg
push
push
pop
adc
xchg
pop
aaa
or
aaa
sub
add
jg
ret
add
nop
aas
mov
fcom
xchg
and
pusha
xchg
hlt
xchg
mov
sbb
mov
add
push
mov
mov
fild
push
jmp
add
fs
and
add
push
push
scas
popa
sub
gs
sub
push
or
call
out
jl
jmp
dec
jp
xlat
aam
sbb
inc
loopne
add
js
int3
inc
ins
ret
lea
pop
cmp
or
mov
mov
popf
pusha
movs
pop
push
push
add
mov
(bad)
adc
cdq
sar
push
arpl
pop
fbstp
int3
lea
iret
or
mov
out
adc
int3
mov
jo
(bad)
and
aas
rcr
xlat
outs
xchg
adc
scas
add
add
loop
sub
test
or
sbb
or
or
sbb
das
ret
(bad)
and
sbb
and
add
add
push
xor
arpl
jle
hlt
adc
jo
xchg
jae
inc
jmp
mov
fisttp
call
shl
push
or
push
add
adc
xor
adc
outs
popa
fcom
jl
(bad)
loopne
adc
push
cli
in
mov
add
lods
add
add
inc
out
add
push
(bad)
jecxz
jl
xor
add
xchg
adc
jp
cmp
lds
dec
pop
add
xor
push
add
xor
mov
loop
mov
xchg
add
add
add
xor
mov
or
push
cli
data16
imul
cmc
add
(bad)
dec
test
push
jge
inc
sub
in
pop
in
and
and
inc
or
je
adc
(bad)
outs
pop
in
and
or
cwde
not
pushf
rcr
mov
rcl
push
add
dec
inc
sbb
add
mov
in
jg
xor
add
sub
arpl
test
(bad)
push
push
loope
pop
ror
add
add
xchg
adc
and
mov
push
push
add
fist
push
sub
call
and
push
in
xlat
test
adc
(bad)
fiadd
sub
inc
cmp
je
xor
push
shl
xlat
or
int3
or
lahf
clc
ret
mov
mov
ret
mov
adc
mov
cmp
sbb
jg
sub
jne
lea
hlt
adc
xor
jmp
test
jo
ds
and
and
mov
imul
push
lahf
shr
inc
push
add
jmp
or
std
adc
pop
clc
jb
jl
ret
ja
rol
mov
cdq
(bad)
sbb
jge
nop
sbb
adc
cmp
add
pushf
cmp
jge
xchg
loopne
adc
jl
je
int
cmp
dec
push
sar
add
push
dec
cs
inc
cmp
and
adc
dec
cmp
xor
test
xchg
mov
inc
mov
and
mov
movs
sbb
or
and
test
pop
movs
pop
aam
test
mov
in
and
xchg
aas
cmp
inc
je
sbb
or
add
jnp
int3
inc
or
addr16
adc
sbb
sub
fstp
or
addr16
add
cs
retf
mov
push
inc
or
inc
adc
inc
add
adc
fimul
cmp
gs
cdq
cmp
dec
sbb
xor
inc
dec
inc
dec
xchg
aas
dec
iret
test
mov
cmp
push
nop
or
dec
inc
inc
and
and
lds
sahf
leave
sbb
das
je
ret
sbb
pop
mov
mov
xchg
jno
add
out
lock
xor
mov
mov
xor
test
xchg
in
mov
fs
dec
jecxz
loop
test
xchg
add
jns
sub
(bad)
jmp
ds
fiadd
out
push
fsubr
sub
daa
jo
mov
(bad)
or
jmp
inc
xchg
mov
hlt
mov
and
cmps
adc
pop
xor
fsubr
pop
lock
dec
outs
loopne
jo
jmp
in
jge
pop
lods
or
retf
dec
inc
dec
sbb
call
inc
(bad)
aam
or
mov
fimul
and
into
ja
add
aas
mov
push
mov
imul
inc
or
ret
clc
add
jge
(bad)
(bad)
jmp
sbb
inc
dec
pop
(bad)
out
int3
lods
adc
or
cmp
ja
fiadd
(bad)
jl
adc
xor
jne
adc
cdq
dec
adc
in
outs
dec
imul
adc
or
mov
or
or
adc
or
pop
sbb
xchg
in
clc
ds
push
aaa
in
fwait
xor
xchg
pop
aad
cmps
movs
icebp
mov
rcr
inc
jp
mov
dec
hlt
test
addr16
shl
or
sbb
enter
fdivr
test
jl
jno
or
sbb
cwde
or
push
inc
movs
enter
and
cmp
xor
add
mov
addr16
inc
adc
and
aaa
sbb
dec
sbb
fisttp
mov
push
sbb
das
push
adc
cwde
popa
and
mov
mov
cmps
rol
cdq
xor
in
push
xor
ret
aas
cmp
sub
add
movs
mov
adc
mov
adc
fcom
fild
sub
add
daa
sub
in
sbb
add
and
call
mov
dec
add
cld
imul
jg
or
outs
sete
inc
adc
cld
ss
cmp
jne
xor
scas
shl
test
add
cmp
mov
shl
push
pop
add
sbb
enter
call
pop
sbb
xchg
pop
test
test
push
cmp
fcmovnbe
ja
call
dec
dec
or
add
sti
jle
dec
daa
sub
sub
sub
sub
push
(bad)
je
inc
pop
add
sub
mov
sbb
add
push
cmps
inc
xlat
dec
rol
cmp
mov
dec
loope
pop
bound
test
loop
jnp
jg
test
add
add
jo
jl
(bad)
adc
fst
add
adc
pop
xchg
push
sar
adc
clc
dec
mov
xlat
mov
and
pop
inc
sti
leave
hlt
pop
aam
mov
and
cwde
push
lods
jecxz
sar
adc
adc
sub
or
mov
and
mov
enter
(bad)
pop
int3
and
pop
or
push
das
adc
inc
or
loope
inc
jnp
jge
xor
jecxz
ficom
out
xor
pop
or
scas
daa
jg
pop
test
add
cmp
dec
imul
and
shl
xchg
add
jg
rcl
sub
fmul
mov
sub
popa
dec
mov
in
div
fdiv
add
call
dec
push
push
sbb
mov
mov
test
xor
lea
int
mov
jecxz
addr16
pushf
pop
mov
ficom
push
out
xor
pop
dec
mov
and
inc
adc
jb
je
fadd
aad
scas
cli
dec
adc
mov
mov
xchg
or
dec
mov
push
in
rol
and
and
and
jp
in
sbb
nop
loope
popa
jne
cmp
add
(bad)
push
dec
mov
sub
or
push
in
pinsrw
lea
mov
mov
dec
lock
push
lds
or
dec
cwde
and
xchg
and
dec
xor
add
das
inc
add
sub
push
push
pop
fcmovb
adc
stos
aaa
js
ret
add
add
pop
loopne
add
cmp
dec
mov
mov
ret
or
cmp
test
sbb
inc
popa
add
mov
add
nop
cmp
lods
div
lock
sbb
inc
dec
add
push
cmp
or
xchg
aaa
add
xor
inc
test
ds
std
les
jge
xor
stc
push
push
ss
xchg
jns
cmp
push
stc
sub
push
and
sbb
mov
stc
je
retf
test
jb
popa
and
ret
cmp
sbb
int3
pop
mov
loop
lea
sbb
or
shr
xor
cmp
xor
add
ror
jb
movs
add
les
(bad)
icebp
psubusb
or
sub
mov
pop
imul
or
cmps
fucomip
or
fdecstp
push
stos
mov
js
inc
cmps
cwde
es
and
pushf
push
add
ficomp
mov
cmp
fsub
pop
adc
xchg
(bad)
mov
retf
or
lods
add
dec
stc
push
add
xchg
(bad)
test
lea
jmp
or
and
sub
push
mov
push
add
outs
jecxz
and
mov
xchg
push
je
add
jecxz
mov
push
inc
xchg
jmp
sub
lahf
outs
push
fsub
mov
xor
test
or
mov
push
cmp
jne
and
ss
push
jecxz
ret
sub
scas
shl
enterw
dec
adc
xlat
mov
jne
jmp
test
push
sbb
ret
jmp
inc
jg
rcl
test
adc
enter
cmp
jl
mov
sbb
xor
jmp
pop
and
jl
inc
sbb
push
and
mov
push
adc
push
clc
(bad)
rcr
inc
movs
mov
adc
adc
mov
out
jns
ins
cmp
and
push
out
call
sub
mov
inc
push
xor
sbb
out
jns
jl
call
iret
repz
dec
enter
ja
idiv
add
push
push
jns
or
push
xlat
jp
(bad)
fst
lods
mov
mov
ret
cmc
xchg
scas
test
jno
aas
mov
and
mov
adc
xor
popa
xchg
daa
sub
xor
adc
adc
lods
and
adc
adc
or
mov
jo
mov
add
sar
mov
repnz
add
scas
cmp
dec
fwait
add
cmp
(bad)
pop
and
gs
ss
adc
add
mov
or
or
cmps
and
mov
jae
imul
icebp
pop
jo
lahf
dec
add
inc
push
mov
jmp
and
test
outs
mov
xor
jne
push
add
and
cmp
and
inc
add
xchg
xchg
add
fnstenv
aaa
movs
jle
push
dec
js
sbb
mov
push
fstp
pop
dec
and
or
or
add
mov
pop
push
xor
cmps
sbb
xchg
neg
xchg
stc
add
enter
or
(bad)
xor
lods
add
add
inc
adc
push
mov
xchg
inc
push
dec
jns
mov
adc
pop
mov
push
ins
outs
fs
add
add
mov
sbb
xor
mov
repnz
dec
adc
ds
cmp
outs
pop
or
push
pop
sbb
sbb
push
and
scas
push
mov
xchg
mov
inc
shl
and
pop
mov
ins
xor
ja
sbb
adc
imul
inc
mov
mov
pop
aam
cli
push
sbb
lock
xchg
push
rcl
push
dec
xchg
inc
pop
mov
inc
add
cld
xchg
inc
or
inc
jecxz
or
fwait
push
push
popf
inc
rcr
mov
jns
adc
xor
in
jp
sub
mov
inc
jp
cmp
or
nop
xchg
pop
xchg
add
xor
xor
inc
and
mov
sub
inc
aad
inc
sub
jp
popa
cs
dec
or
or
mov
test
push
and
xor
sub
ins
inc
jae
ins
inc
test
push
or
jo
add
mov
movs
int
adc
je
sub
and
ins
xchg
dec
xchg
mov
jns
and
or
ss
xchg
sbb
inc
push
jmp
inc
std
das
mov
out
and
mov
in
or
cmps
sub
cdq
and
int
pop
add
test
push
xor
jg
ins
xor
outs
and
inc
neg
mov
adc
pop
or
mov
outs
fsub
ja
addr16
or
push
mov
shl
arpl
or
fmul
dec
int
retf
push
adc
xor
outs
sahf
push
pop
outs
not
nop
cmp
add
ins
add
or
inc
loopne
sbb
adc
mov
adc
mov
mov
and
lahf
add
push
gs
or
mov
mov
xor
nop
and
imul
dec
or
sahf
inc
enter
outs
fs
or
adc
imul
or
jge
adc
cmps
inc
inc
out
loope
jo
push
outs
pusha
popa
sub
add
jo
outs
add
pop
xor
sbb
sub
inc
add
adc
mov
xchg
arpl
dec
imul
or
iret
adc
fistp
in
adc
fcomi
jl
dec
test
xchg
jno
inc
test
push
jne
jns
imul
call
pop
add
inc
xchg
loopne
push
push
pop
addr16
push
push
dec
mov
mov
mov
xor
mov
add
pop
sbb
rcr
xchg
and
popa
into
gs
or
add
push
scas
and
daa
sbb
pop
je
cmp
pop
inc
mov
inc
add
inc
add
jl
enter
mov
movs
xchg
mov
into
movs
push
sub
stc
add
xchg
inc
inc
jmp
inc
cld
xchg
add
push
in
jb
inc
loopne
inc
test
dec
ret
lds
les
enter
mov
call
cmp
rol
add
or
es
(bad)
fnsave
enter
stos
xchg
sbb
cwde
aam
mov
cmp
out
adc
aaa
add
mov
adc
add
add
add
jmp
(bad)
fidiv
and
sub
add
ins
mov
cmp
loopne
pop
test
or
clc
sub
push
mov
push
mov
mov
mov
push
inc
adc
or
mov
add
xchg
and
std
jmp
push
popa
or
in
add
xchg
stos
mov
iret
imul
pop
rol
mov
cmp
repz
jl
enter
cmp
cmps
test
aam
mov
aad
(bad)
imul
dec
out
ins
out
cmp
sbb
push
jmp
lock
cld
push
hlt
mov
into
push
jns
fisub
adc
push
cmp
mov
nop
cld
int
cmp
out
fwait
retf
aam
push
push
neg
sti
cmp
or
into
mov
mov
scas
je
jmp
inc
jl
leave
push
pusha
(bad)
test
rcr
adc
nop
sub
fadd
pop
sbb
daa
or
add
or
sub
movs
mov
or
bound
and
add
(bad)
movs
adc
dec
cmp
mov
or
adc
loop
mov
pop
bswap
loopne
popa
pusha
push
jecxz
jmp
cmp
sahf
push
push
call
add
inc
xchg
clts
nop
and
fist
sbb
jl
loope
xchg
enter
les
(bad)
lock
mov
mov
dec
enterw
daa
adc
and
inc
adc
call
dec
cmp
dec
cmp
xchg
shl
pop
clc
loop
or
sbb
cmp
lds
gs
pop
xchg
and
xor
js
sub
mov
add
mov
inc
sbb
add
pop
enter
or
test
pop
sbb
cmp
adc
add
fsubr
pop
mov
imul
in
push
les
dec
mov
rol
pop
mov
and
aas
cmps
cmp
mov
add
push
jae
popf
mov
test
xchg
xor
repz
pop
mov
push
and
test
jne
add
popf
in
mov
and
mov
jb
push
inc
arpl
or
cmps
jns
(bad)
in
pop
das
int3
cmp
stc
or
mov
stos
inc
test
pop
push
jo
add
sub
pop
or
cmp
mov
and
movs
stc
dec
cld
mov
jb
jmp
fwait
sub
shl
fiadd
ja
or
dec
cmp
xchg
xor
adc
cs
ins
fs
pushf
sbb
jae
into
pusha
push
(bad)
das
push
test
or
xor
push
xchg
push
mov
shr
xor
js
jae
data16
pop
xchg
xor
or
popf
call
pushf
mov
xchg
dec
(bad)
xor
pop
xchg
add
and
(bad)
fimul
vphaddbq
(bad)
cmps
mov
pop
rol
cdq
or
pop
adc
jo
aaa
mov
mov
in
shl
data16
adc
or
out
cmc
mov
pop
or
stos
inc
ds
sub
sub
mov
cmp
aad
inc
sahf
push
pop
pop
pop
cmp
push
cdq
push
rcl
or
mov
fnsetpm(287
pusha
fcomp
add
xchg
test
and
loopne
imul
cs
ret
xchg
mov
xrelease
push
mov
inc
cwde
fcmovbe
pop
enter
ret
push
ins
and
push
add
xor
adc
inc
sub
mov
inc
sar
shl
je
test
lea
pop
mov
push
xchg
mov
fmul
mov
clc
jns
mov
shl
pop
enter
fdiv
mov
fidivr
dec
loopne
fistp
dec
mov
mov
inc
pop
in
and
ins
loope
in
xor
pop
push
dec
sbb
test
inc
rcl
dec
movs
add
or
or
push
add
dec
and
in
sar
or
xchg
xchg
mov
movs
and
inc
pop
push
dec
ret
dec
inc
sub
add
sub
push
push
dec
mov
push
push
push
dec
dec
sbb
push
push
pop
repnz
adc
mov
cmp
inc
add
inc
push
cwde
nop
das
in
dec
inc
inc
push
add
enter
aaa
push
dec
adc
sub
push
hlt
das
mov
mov
ret
pop
clc
add
add
and
retf
sahf
rol
in
cs
push
adc
mov
push
jno
and
les
int3
(bad)
jo
dec
lock
sbb
js
outs
sbb
test
mov
cmp
inc
aas
test
mov
and
in
or
push
mov
pop
repnz
inc
cmps
or
add
(bad)
cld
mul
ja
call
out
push
mov
adc
popf
in
rol
cmp
mov
or
out
pop
jb
mov
sub
ror
mov
out
or
add
xchg
push
xlat
mov
scas
sub
es
mov
push
mov
pop
pop
repnz
push
add
inc
add
inc
dec
imul
rcr
push
fstp
enter
fadd
nop
ror
pop
scas
dec
xchg
and
add
add
pop
arpl
push
pop
outs
and
out
dec
push
andps
mov
rol
nop
sbb
xor
mov
es
mov
xchg
fcomip
fs
mov
inc
sbb
in
push
cmc
dec
push
jne
cmps
mov
cli
mov
je
and
push
loope
adc
inc
dec
popa
outs
lahf
mov
nop
rcl
xor
retf
in
cmp
movs
sub
movs
inc
mov
sbb
mov
jmp
jae
push
ins
xchg
lock
ror
adc
dec
push
enter
add
(bad)
push
fnsave
in
clc
jae
hlt
mov
and
xrelease
sbb
sub
xor
rcr
mov
mov
mov
xchg
pop
mov
loop
cli
test
fcmovnbe
and
pop
sub
pop
call
pop
sar
cmps
pop
push
shl
push
ror
loope
or
or
mov
xor
je
mov
xchg
icebp
push
jno
les
or
cmp
pop
mov
and
or
loop
adc
pop
call
lahf
or
aam
push
mov
mov
sbb
pop
ror
push
add
daa
pop
add
sub
xchg
(bad)
push
inc
gs
icebp
stos
mov
std
nop
shr
or
add
jge
or
repz
ja
inc
test
stos
jno
lods
mov
(bad)
sub
sub
cwde
pop
dec
lahf
and
sbb
pusha
test
imul
cmp
jae
sbb
int3
cmp
and
or
and
icebp
loopne
push
and
sub
push
sbb
and
push
les
or
adc
add
xchg
out
add
add
adc
adc
mov
adc
rol
test
dec
adc
mov
mov
jae
ja
test
sbb
adc
add
add
dec
jae
or
adc
mov
mov
xchg
add
or
je
nop
mov
mov
jle
(bad)
stos
xchg
pop
addr16
test
adc
fild
push
sub
aas
dec
inc
imul
or
inc
ret
pop
xlat
xor
and
leave
lock
sub
add
add
and
hlt
xor
add
lea
pop
cdq
push
add
mov
mov
or
sar
outs
push
inc
or
sbb
retf
out
bound
or
mov
test
jbe
sub
push
inc
add
push
sbb
inc
pop
enter
outs
lahf
sbb
js
or
sub
test
adc
test
or
sbb
sub
xor
inc
xchg
add
dec
jle
push
or
add
pusha
(bad)
es
rol
lods
pusha
cld
sbb
cmp
add
fucomi
inc
sub
add
jl
lds
xchg
lea
mov
add
add
add
rcl
cld
lock
jae
or
add
into
mov
clc
xchg
add
fcomp
test
int
or
inc
dec
cmp
mov
rol
call
cmp
and
push
std
inc
outs
inc
inc
mov
pop
rcr
cmp
mov
lods
push
push
cmp
xchg
fcomp
adc
jge
out
mov
and
pop
add
mov
add
adc
xchg
sub
pop
jo
test
out
jns
inc
xor
jp
adc
or
outs
out
sub
jno
add
lock
mov
cmp
push
fmul
add
jb
add
push
mov
add
pusha
adc
push
js
push
xlat
mov
jle
sbb
sbb
sbb
aaa
mov
hlt
neg
jmp
arpl
and
cmp
shl
sar
jecxz
and
mov
cmp
dec
pop
push
bnd
mov
mov
pop
pop
adc
out
ins
or
(bad)
fidiv
xlat
inc
adc
fs
push
(bad)
or
cmp
pushf
sub
or
sbb
xchg
jmp
and
add
fimul
mov
adc
shr
push
push
inc
push
mov
inc
jne
mov
lahf
icebp
mov
fisub
xchg
dec
clc
sti
imul
jae
or
jmp
fs
pop
jo
jne
lods
adc
fcmovnb
out
sub
icebp
jmp
inc
inc
or
mov
cmp
adc
dec
or
inc
sbb
xchg
retf
stc
add
fwait
lods
adc
xchg
push
int3
int3
sub
mov
sahf
ret
rcl
sub
imul
(bad)
sbb
mov
cmp
dec
(bad)
xor
push
jmp
mov
and
dec
xor
push
jbe
retf
inc
xchg
or
stos
or
je
ss
jmp
jb
enter
dec
mov
rcl
mov
loope
xchg
or
push
xor
cmps
mov
xor
xlat
adc
ins
mov
xchg
shl
add
cmp
dec
jl
cmp
bound
xor
add
sbb
push
dec
inc
dec
out
(bad)
mov
push
push
and
sbb
sub
loopne
push
push
jl
push
add
pop
(bad)
fdivr
xchg
cmp
push
div
je
cmp
xchg
sbb
imul
mov
mov
push
mov
sub
or
inc
sub
add
lea
js
sub
sub
xor
pop
(bad)
dec
add
je
pushf
xor
xchg
clc
xor
imul
or
or
mov
adc
push
add
stos
ja
out
cmp
je
pop
das
adc
lea
lock
push
std
jne
enter
cmps
hlt
in
fstp
ins
pop
mov
pop
call
add
add
push
or
test
rcl
or
cmp
inc
xor
add
dec
xor
and
sbb
xor
js
int
mov
mov
dec
mov
leave
jge
inc
jecxz
adc
xor
cmp
cmp
test
ret
cmp
sbb
or
icebp
or
cld
xchg
sub
mov
or
jp
or
sbb
pop
fldl2t
inc
in
add
add
inc
shl
sub
xor
push
sbb
or
cmp
xor
inc
push
in
adc
retf
gs
add
add
and
push
fisttp
das
stos
inc
push
mov
cmp
lock
rcl
imul
jp
and
sbb
loope
jae
inc
ficomp
loop
dec
adc
or
sub
jmp
out
aas
or
test
dec
pop
not
hlt
push
popa
fimul
and
adc
inc
xor
mov
ret
xchg
add
adc
jb
jnp
xchg
add
or
inc
xchg
cmp
adc
or
inc
push
and
xchg
in
movs
pop
and
adc
into
push
or
bound
add
xor
ins
dec
(bad)
or
xchg
push
mov
(bad)
sbb
adc
daa
push
movs
and
lods
and
arpl
or
lods
gs
test
je
and
fst
sbb
adc
xchg
daa
add
fld
xor
pop
adc
push
fwait
int
push
lock
mov
cdq
inc
sar
out
aaa
adc
mov
inc
sbb
jae
cvttps2pi
fdivr
jmp
jmp
or
ins
cmc
lock
inc
add
int3
ss
sub
add
pop
mov
and
push
in
mov
pop
or
leave
add
mov
iret
fwait
cdq
inc
lock
leave
les
pop
adc
div
push
test
jns
lods
adc
icebp
inc
nop
or
cmp
inc
pop
jno
nop
rsm
add
loopne
or
pop
or
xchg
in
add
pop
or
adc
sbb
fld
(bad)
scas
push
retf
push
inc
setnp
or
sbb
loope
and
xor
or
push
xchg
mov
pop
dec
inc
mov
or
adc
in
and
dec
and
push
fwait
inc
sbb
or
xchg
out
inc
stos
add
or
inc
mov
loopne
mov
outs
xor
mov
pop
neg
mov
mov
push
aad
sbb
sbb
pop
movs
xor
and
inc
sbb
dec
js
adc
inc
pop
or
push
push
lea
push
and
push
sbb
xchg
icebp
fcmovbe
xor
xchg
cmp
jge
sbb
xchg
imul
out
sbb
pop
mov
mov
jle
mov
int
test
mov
inc
je
dec
(bad)
or
cmp
or
jbe
sbb
daa
jns
jge
inc
pop
sbb
ficomp
std
adc
and
sbb
jo
leave
xor
push
rcl
adc
(bad)
or
sbb
sub
add
dec
add
xor
mov
mov
push
jle
push
xlat
in
popf
mov
sbb
xchg
pop
xor
or
sbb
outs
add
mov
mov
leave
or
pop
and
pop
mov
popf
add
ret
enter
inc
push
mov
or
popa
sub
imul
adc
js
out
jns
or
cmp
pop
js
pmulhuw
cwde
ret
jl
bound
xor
dec
ret
push
jg
push
adc
sar
hlt
cmps
and
inc
test
and
mov
sbb
fcom
mov
lea
sub
add
cmp
mov
mov
pop
repnz
pop
dec
lahf
imul
push
ret
inc
or
popf
or
fnsave
inc
aaa
push
jb
xchg
push
icebp
imul
xlat
(bad)
pop
adc
cmps
loopne
add
and
jg
mov
xor
mov
mov
das
rol
pop
mov
js
cmp
enter
or
in
push
stos
mov
test
test
adc
jp
mov
mov
adc
pop
sub
enter
pop
in
dec
pinsrw
pop
ins
xchg
cmp
jp
mov
inc
mov
(bad)
add
int3
mov
inc
jecxz
or
mov
xor
repz
cld
icebp
test
and
and
fisttp
xchg
sub
test
jnp
and
sar
test
lock
jle
sbb
dec
mov
inc
inc
das
dec
gs
sbb
push
daa
or
adc
call
and
dec
add
mov
dec
sbb
sub
sub
or
or
int
sbb
add
mov
pop
pop
sbb
cmp
imul
and
inc
ret
popf
mov
mov
pop
push
in
test
sbb
and
call
fnstcw
pop
stos
iret
sub
sbb
sbb
xlat
mov
test
imul
mov
or
add
rol
add
call
jne
mov
out
cmp
call
xchg
jmp
xchg
fcomp
ret
pop
lods
popa
inc
lods
lea
outs
xor
cmp
xchg
inc
add
mov
add
pop
icebp
mov
mov
outs
add
add
inc
jmp
push
add
repnz
ret
neg
push
lods
imul
loope
dec
xor
cmp
cmp
not
inc
rcl
nop
retf
(bad)
pop
mov
test
jb
test
daa
lds
push
adc
inc
sar
test
and
jae
mov
mov
out
daa
inc
dec
xor
cld
ds
mov
push
pop
ja
xchg
add
repz
out
fsubr
sub
iret
xchg
jnp
test
shr
cmp
jne
pop
sub
cs
add
jl
mov
xchg
test
in
in
mov
test
mov
xchg
nop
out
fidiv
pop
push
pusha
pop
das
and
(bad)
gs
mov
movs
add
xor
inc
and
sti
inc
adc
adc
lds
(bad)
mov
xor
xchg
shr
mov
shl
jo
dec
dec
jg
adc
adc
push
cld
pop
adc
das
daa
push
pop
mov
mov
jge
push
ret
ret
sbb
xchg
push
out
push
scas
add
sahf
xchg
repz
jge
pop
and
mov
adc
mov
je
aaa
add
and
push
mov
adc
sub
out
pop
or
add
test
inc
mov
inc
jecxz
int
sahf
adc
rcl
repnz
mov
xchg
sub
(bad)
and
push
ja
mov
sub
pop
sar
sub
push
cmp
push
dec
and
xchg
dec
xor
push
ins
jbe
dec
pop
xor
mov
xchg
inc
pusha
sbb
js
adc
enter
test
push
ss
jecxz
mov
xor
xor
loop
cmp
daa
mov
lahf
add
adc
inc
mov
loope
xchg
cmp
adc
xlat
pop
cmp
mov
jo
call
xor
mov
pushf
mov
aaa
lods
push
xor
lock
inc
sbb
lods
lahf
pop
imul
mov
add
sbb
pop
dec
inc
mov
(bad)
pop
and
cmc
sbb
fld
das
popf
jmp
push
lahf
loope
rcl
or
movs
loopne
pop
fnstsw
cmp
or
mov
mov
sbb
btc
xchg
xchg
adc
add
sbb
add
nop
mov
mov
nop
outs
and
out
icebp
adc
aaa
xchg
jae
xchg
addr16
ds
sbb
or
ja
mov
mov
gs
dec
ds
aas
int3
inc
ror
xchg
xor
and
bound
cmp
sub
call
or
nop
mul
or
push
push
mov
idiv
adc
repnz
inc
jg
cmp
and
repnz
xchg
xor
xor
dec
pop
or
jl
(bad)
aam
jo
movs
aad
add
dec
push
jne
xchg
(bad)
and
add
inc
inc
fist
outs
jo
add
push
pushf
jmp
sub
mov
adc
aam
sub
shl
xor
imul
dec
je
je
xchg
inc
(bad)
dec
nop
sub
xor
int3
out
push
rcr
xor
adc
add
mov
fmul
ror
mov
fsubr
or
push
test
xchg
ins
mov
lahf
mov
xchg
inc
or
loopne
(bad)
rcl
std
pop
cmps
cmp
ds
popa
jmp
sbb
push
jbe
imul
(bad)
mov
jmp
fs
test
xor
aaa
cmp
out
ja
xchg
or
cwde
mov
sbb
add
lds
cmps
jmp
adc
in
and
arpl
das
adc
or
and
das
xchg
inc
jg
add
xchg
hlt
cs
cli
inc
jg
mov
inc
add
in
ret
jb
or
add
dec
test
mov
call
mov
fmul
retf
add
dec
xchg
(bad)
cmp
jne
sbb
sahf
rcl
inc
xor
pop
cmps
adc
or
in
pop
fwait
ret
or
inc
xor
cmps
pop
xchg
ret
shl
mov
and
add
jl
mov
adc
enter
jle
sbb
mov
test
das
push
js
xor
adc
push
pop
dec
dec
sbb
inc
or
call
imul
ins
or
sub
cdq
add
rcl
dec
and
dec
pop
add
mov
or
jmp
or
pop
add
hlt
pop
mov
imul
and
cmp
hlt
out
xchg
xchg
or
hlt
in
in
inc
push
cmp
adc
loop
inc
push
ret
push
ins
jns
sbb
hlt
and
es
add
cs
mov
jae
mov
xchg
sub
ror
push
lock
jp
push
push
lea
adc
ret
sbb
sbb
lahf
addr16
add
lds
stc
jp
cwde
jp
add
and
and
or
cmp
or
lods
mov
fwait
hlt
xor
sbb
mov
(bad)
arpl
je
adc
aad
aaa
mov
pop
das
inc
add
bound
dec
jno
sub
popf
pusha
cdq
push
or
add
or
jbe
cmp
add
cmovs
je
sbb
scas
push
cmp
movs
jl
enter
adc
cmp
jmp
(bad)
jp
cmp
movs
jl
push
xchg
push
inc
xchg
or
inc
mov
popf
ds
fidiv
test
movs
add
or
sbb
dec
fsub
push
loopne
add
add
ss
and
fsincos
mov
jbe
(bad)
ret
adc
ins
sbb
pusha
loop
push
call
pop
add
pop
inc
cs
cmp
xchg
or
rcl
or
inc
or
dec
test
fst
pop
shl
xchg
cmp
inc
or
adc
or
lods
dec
(bad)
sbb
add
pop
sar
mov
dec
retf
loope
add
stos
popa
test
(bad)
and
sub
push
adc
add
mov
push
pop
fmul
push
popa
or
and
(bad)
int3
pop
adc
or
or
cmp
data16
mov
in
add
xchg
adc
pop
popa
sub
push
push
sub
and
jns
sub
sbb
das
ss
or
jge
(bad)
(bad)
mov
test
jne
push
pop
add
dec
jle
add
mov
jne
clc
ficom
popf
lods
xchg
or
pop
or
adc
xchg
inc
jmp
mov
nop
add
pop
adc
mov
cmp
or
jl
cmp
xchg
mov
fstp
fs
fcomip
inc
jno
pop
mov
pxor
jnp
push
aas
sub
mov
adc
out
add
or
mov
mov
add
mov
cmp
mov
and
fiadd
cli
xchg
cmp
iret
jmp
sbb
loope
movs
pop
daa
mov
ret
jno
fimul
cmp
movs
and
xor
cmp
add
aaa
or
xchg
adc
sbb
or
mov
add
xchg
mov
nop
and
cmp
and
add
add
gs
push
test
add
cmp
or
and
jae
popa
cmps
cmp
(bad)
adc
push
les
mov
cmp
fcomp
jl
daa
rcr
sub
push
push
push
loopne
inc
test
addr16
sbb
cli
or
(bad)
jmp
adc
ret
and
ja
or
in
push
add
psubsb
or
fistp
inc
sbb
scas
adc
or
call
jb
mov
lahf
jae
jmp
jne
(bad)
pop
inc
repz
pop
das
add
mov
jo
cmp
cwde
dec
in
jne
dec
mov
add
sbb
add
cmp
dec
aam
adc
sub
(bad)
popf
arpl
mov
rol
sub
cmp
adc
xchg
pop
xor
and
pop
or
xchg
jne
rol
ret
mov
and
lds
and
mov
aam
xor
rol
div
cmp
test
ret
mov
xor
leave
or
xchg
sahf
xchg
cmps
jo
cld
popa
lock
push
into
lods
cmp
fld
fdiv
dec
cli
frstor
or
push
(bad)
inc
jno
mov
imul
inc
test
adc
adc
enter
add
ins
sub
sub
iret
and
mov
std
or
pop
push
dec
or
jbe
je
add
loop
jno
ret
clc
je
jmp
mov
cmp
loopne
cmps
mov
cmp
jmp
int
pop
mov
imul
sbb
(bad)
cs
lds
mov
sahf
ret
or
or
inc
ror
jbe
paddsb
inc
push
imul
mov
and
adc
dec
or
imul
cmp
cdq
sar
sqrtps
fistp
inc
dec
add
aam
dec
sbb
and
adc
outs
sub
cmp
mov
arpl
push
jo
add
push
scas
dec
mov
push
add
ret
dec
js
or
mov
cld
aad
cmp
jne
cmc
scas
fmul
inc
test
mov
dec
xor
inc
arpl
push
push
inc
loop
push
cs
pusha
(bad)
imul
in
cmc
push
mov
pop
and
sbb
fs
inc
sbb
push
mov
xor
das
cmp
adc
push
and
jecxz
mov
mov
test
cli
movs
inc
ja
xchg
idiv
jne
outs
mov
out
push
mov
retf
and
cmp
cwde
sub
enter
das
mov
jae
cmp
adc
adc
jae
sbb
fs
cmp
pop
inc
es
outs
sbb
jmp
les
mov
sub
sub
mov
add
jp
pop
fcomp
sub
imul
loopne
push
and
or
push
sub
sti
pop
add
push
pop
dec
lods
mov
test
jo
jmp
mov
add
scas
pop
fiadd
es
loopne
add
sti
add
dec
cs
repz
cmp
push
xlat
es
add
add
add
sub
dec
jmp
inc
pop
mov
daa
movs
mov
lods
shr
dec
retf
jbe
sub
fdivr
adc
xor
cmp
adc
pop
inc
mov
mov
push
inc
call
adc
mov
add
int
push
xchg
mov
ins
jmp
call
mov
mov
add
jg
sbb
data16
cld
mov
clc
imul
or
dec
jbe
fisub
dec
mov
movs
sbb
adc
pop
sub
dec
lea
mov
pusha
add
push
add
aad
mov
cmp
ja
pusha
in
jns
ret
push
sub
sbb
pop
psrld
xchg
jl
jns
rcl
(bad)
imul
int3
lods
and
jne
adc
push
pop
sbb
jmp
loop
in
cmp
sbb
or
lods
push
pop
ret
mov
or
push
cmp
dec
pop
inc
adc
mov
pop
fisub
hlt
fdiv
sub
mov
jmp
cld
add
xchg
push
mov
mov
pop
adc
xchg
add
mov
(bad)
pop
sub
sbb
data16
(bad)
ss
ret
and
adc
xor
mul
add
push
or
popa
pop
pop
mov
jmp
add
cmp
or
sub
outs
add
ret
or
cmp
pop
push
test
pop
sbb
pop
push
push
loopne
test
add
repz
(bad)
xor
or
mov
mov
lods
xchg
cmc
inc
xchg
mov
imul
sti
cmp
es
inc
pushaw
xor
adc
sub
dec
imul
pop
inc
and
or
add
adc
lods
dec
movs
mov
js
ret
popa
dec
sbb
jmp
sub
lock
mov
pop
pop
and
dec
inc
dec
push
dec
mov
call
in
(bad)
out
push
loope
xchg
or
or
lea
and
mov
push
add
fs
pop
call
or
adc
cmps
imul
xchg
cmps
add
mov
fdivr
mov
lea
test
pop
or
jo
mov
clc
cli
mov
pop
inc
les
dec
mov
dec
xor
(bad)
pmaddwd
push
fcmovb
add
mov
jle
add
(bad)
adc
xor
add
inc
pop
sub
push
pop
inc
cmp
jne
adc
pushf
add
or
or
cmp
cmp
sbb
sbb
push
ins
push
dec
into
dec
lahf
xor
cmp
ret
pushf
inc
cmp
je
lock
ins
ss
adc
xor
sub
mov
ja
iret
or
xchg
ret
outs
aaa
enter
pop
pop
add
mov
(bad)
sbb
mov
cmp
adc
rcr
mov
out
pop
clc
out
ror
dec
sahf
cs
rol
sbb
pop
pop
dec
lahf
mov
add
pop
ins
jne
jge
imul
out
(bad)
loope
test
cmp
and
movs
(bad)
fbld
js
dec
xor
sub
dec
pop
sbb
sub
in
and
and
pop
sub
dec
enter
dec
jmp
mov
or
dec
pop
test
div
push
call
add
je
inc
mov
arpl
jb
dec
mov
xchg
push
(bad)
mov
or
arpl
js
cmp
mov
mov
dec
add
add
fild
mov
mov
cdq
fucomip
xor
push
enter
hlt
sbb
and
mov
lods
inc
adc
mov
xlat
mov
jae
or
test
push
lea
add
in
sub
pusha
std
xchg
jne
and
das
mov
lea
and
jo
jno
das
xchg
sahf
push
int3
int3
add
sub
(bad)
sbb
inc
sar
and
pop
mov
and
shl
or
and
and
sbb
push
mov
xchg
mov
js
jmp
shl
imul
popa
sub
cwde
jmp
xchg
add
sub
mov
cmp
rcl
xchg
enter
and
shr
add
sub
mov
xlat
cmc
sbb
adc
mov
and
ja
cmp
aas
(bad)
ficomp
or
push
(bad)
rcr
push
sbb
fistp
test
mov
cmp
mov
imul
out
cmp
jecxz
xchg
push
or
mov
aam
movs
jns
mov
shl
xchg
dec
cmc
cmp
dec
sahf
adc
add
xchg
or
add
loop
int3
inc
fidiv
dec
test
pop
mov
sti
sub
push
in
inc
movs
pop
or
push
xchg
push
mov
je
call
jp
dec
mov
leave
gs
dec
mov
cmp
mov
xor
adc
add
stc
xchg
jecxz
mov
or
or
inc
cmp
test
sub
shl
aam
adc
dec
data16
push
mov
lods
rol
xor
(bad)
xchg
lea
xor
fist
call
adc
sbb
ss
cmp
push
or
xchg
fdivp
test
add
push
xchg
inc
mov
dec
pop
lahf
loop
in
mov
mov
push
cmp
dec
movs
je
ins
mov
or
shl
adc
jne
mov
add
dec
fild
push
xor
xor
jecxz
xor
scas
cmp
inc
push
shl
inc
hlt
lea
popf
xor
adc
and
jno
and
stc
nop
adc
push
or
adc
pop
dec
sahf
push
jp
jne
pop
daa
lods
and
pop
mov
setne
add
xchg
dec
stc
pop
and
and
and
test
mov
push
dec
jl
pop
push
sbb
les
icebp
es
jnp
inc
push
imul
sbb
nop
outs
sbb
add
sbb
cmp
or
push
outs
mov
sbb
pop
stos
fild
add
xchg
sbb
mov
pop
int
sub
pop
je
jne
cs
adc
data16
sbb
ja
sbb
dec
add
push
adc
dec
or
scas
stos
retf
or
sbb
cld
maxps
and
adc
add
jo
and
mov
adc
inc
jo
sub
lds
popa
fmul
and
in
add
inc
cwde
in
dec
jmp
leave
pop
in
dec
add
jmp
mov
mov
aaa
mov
clc
mov
imul
xor
aas
test
ds
sar
xor
jp
(bad)
jmp
data16
sub
inc
add
inc
mov
push
sbb
inc
xlat
shl
pop
add
xchg
sbb
enter
cs
aaa
movs
adc
mov
sbb
add
or
push
push
pop
push
scas
push
push
mov
or
jns
add
adc
fild
in
xchg
jl
inc
jo
cmp
pop
scas
push
aam
mov
sub
mov
or
push
xchg
retf
adc
jp
retf
or
sbb
push
push
fstp
push
pop
enter
jg
pop
adc
inc
fwait
push
jecxz
retf
fsubr
stos
inc
jne
data16
ins
jp
sbb
push
movaps
mov
adc
sub
imul
or
or
in
pop
adc
dec
mul
pop
or
push
and
jmp
sub
xor
test
add
and
gs
loop
push
add
cmp
ret
add
popa
dec
mov
or
out
adc
cmp
gs
cli
iret
inc
in
inc
daa
ds
push
and
lds
sbb
or
mov
cmp
test
pop
ret
add
add
jp
mov
sbb
neg
lds
imul
inc
and
push
add
or
shl
mov
and
adc
sahf
sub
outs
xlat
movs
lods
sub
lods
push
add
(bad)
fwait
xchg
icebp
adc
add
jmp
(bad)
adc
fs
mov
mov
add
data16
outs
adc
xchg
xchg
push
ins
add
cmc
sub
(bad)
inc
adc
(bad)
dec
jo
in
add
pop
fsub
(bad)
movs
int3
stc
fidiv
xor
sbb
sbb
cmp
xor
idiv
les
test
rcr
fdiv
sbb
add
or
or
std
imul
dec
out
sub
nop
sub
mov
dec
fld
or
cmp
sbb
nop
push
inc
inc
sub
add
fadd
les
clc
mov
sub
dec
sbb
add
lock
sbb
or
or
add
mov
lock
push
test
out
dec
pop
adc
les
dec
pop
adc
and
adc
xor
inc
mov
sub
or
push
imul
and
sbb
ins
sar
xchg
adc
clc
push
jmp
shr
mov
imul
sub
pop
int3
jge
sub
mov
scas
and
inc
pop
imul
xchg
mov
sar
cmps
jge
into
add
rcl
fcomp
inc
dec
cmp
fcmove
pop
aas
loopne
lock
xor
inc
mov
hlt
and
dec
dec
clc
push
sub
xlat
ror
mov
sti
add
lods
mov
and
mov
(bad)
(bad)
jmp
jl
push
daa
dec
rcl
push
add
movs
or
test
pop
jbe
xor
addr16
jl
cmp
setge
mov
ret
inc
xchg
call
push
add
mov
cmp
dec
and
and
cmp
mov
pop
outs
jo
jno
ret
(bad)
in
adc
xchg
add
xor
repnz
mov
mov
std
add
dec
dec
pop
or
fist
pop
inc
pop
and
xchg
pushf
add
push
fild
push
movs
mov
sbb
xchg
xor
pop
push
int3
mov
jae
pop
jne
aam
mov
pop
(bad)
xor
xlat
cld
sub
sar
cwde
rol
aaa
push
push
fs
mov
int3
xor
imul
arpl
cmc
adc
and
bound
rcl
nop
stos
push
or
mov
(bad)
push
adc
js
dec
mov
sub
movs
jbe
rol
cmps
daa
sub
cli
or
and
sbb
jo
jmp
jne
aam
movs
addr16
push
loopne
fidiv
pusha
or
pop
inc
fiadd
xor
loop
sbb
mov
cmp
and
or
cmp
sbb
adc
mov
lds
add
ss
sbb
popf
push
jge
push
repz
push
jo
sub
mov
and
add
add
jnp
movs
jmp
fldl2e
test
iret
leave
in
aaa
in
fiadd
or
pop
xor
ins
in
or
addr16
mov
or
sbb
adc
loope
pop
push
push
leave
sbb
outs
cdq
push
ror
icebp
or
pop
push
mov
xchg
dec
adc
js
and
cmp
scas
das
in
dec
pop
push
xor
call
sbb
mov
jmp
dec
iret
call
mov
lods
mov
lods
cmp
xchg
or
sbb
imul
ja
cmp
push
add
pop
adc
inc
xchg
retf
dec
rcr
loopne
inc
cdq
mov
inc
out
out
push
push
cld
dec
enter
cmc
add
(bad)
rcr
leave
mov
push
stos
pop
test
push
setns
or
rol
shl
ins
jb
adc
mov
mov
or
loope
sub
mov
movs
sub
mov
adc
and
sbb
jne
or
xchg
iret
push
scas
mov
pusha
pop
test
inc
punpckhwd
mov
pushf
jne
cs
push
jo
in
adc
add
push
add
mov
or
xor
mov
ret
pushf
push
adc
loop
pusha
add
lahf
mov
mov
repz
inc
jle
por
cmp
sbb
ror
imul
mov
aaa
jg
hlt
jb
aas
sbb
popf
scas
push
jecxz
and
jbe
add
ror
push
mov
dec
cdq
and
pop
jecxz
and
jne
and
add
dec
out
pop
test
gs
xor
dec
and
je
add
bound
pop
imul
mov
mov
adc
js
sar
clc
sbb
sub
test
fild
add
mov
js
ins
int3
inc
popw
out
xor
movs
aad
call
add
call
nop
cmp
hlt
out
in
sbb
sub
cmps
test
sbb
mov
dec
sbb
push
sub
ds
xchg
add
mov
dec
or
pop
xchg
dec
sbb
daa
dec
adc
add
push
aaa
outs
sub
outs
pop
cmps
(bad)
ss
ret
jge
or
adc
ds
and
jl
inc
daa
call
sbb
js
xchg
mov
inc
pop
or
sbb
int3
or
pop
nop
loope
sbb
push
add
inc
div
cmpxchg
push
sbb
mov
ins
push
sbb
pop
xor
push
fwait
inc
or
and
hlt
inc
pop
cmp
adc
or
icebp
mov
jl
inc
push
pop
ins
ror
dec
adc
mov
dec
dec
dec
lea
mov
xor
mov
pop
and
push
sub
test
add
push
fist
mov
adc
rcr
lods
push
inc
sar
out
pushf
mov
inc
pop
scas
pop
inc
nop
das
jne
push
mov
pop
loopne
or
inc
ds
test
jo
movs
push
scas
(bad)
pop
xchg
sbb
push
sub
add
ret
adc
ins
pop
mov
xchg
adc
pushf
ret
aaa
cmp
sbb
loop
xor
adc
rol
push
shl
(bad)
rcl
or
out
sbb
ins
dec
mov
nop
sub
xchg
add
fcomp
rol
add
add
sbb
sub
sub
cmp
xchg
enter
push
retf
(bad)
mov
mov
aad
ins
inc
push
sahf
pop
xchg
ret
mov
in
sbb
push
mov
pop
cwde
mov
pop
stos
enter
out
push
out
(bad)
inc
or
fnstenv
mov
ss
fld
adc
adc
int
(bad)
xor
fmul
and
xchg
mov
or
adc
or
test
fld
mov
mov
rol
mov
cli
or
pop
inc
cmp
sbb
jecxz
pop
inc
mov
stos
retf
ret
popf
into
mov
push
test
xchg
push
or
test
rol
icebp
jb
loopne
or
xchg
call
xor
mov
in
call
fwait
sbb
test
pop
jecxz
movs
push
retf
sub
xchg
(bad)
cmp
ret
es
stc
sti
nop
loope
nop
in
dec
mov
inc
dec
call
cwde
fidivr
je
call
mov
mov
and
mov
and
cmps
cmps
dec
xchg
retf
dec
mov
adc
aam
jecxz
mov
jge
cmps
xor
popa
jb
and
push
in
dec
pop
stos
or
add
enter
hlt
xor
add
push
mov
cmps
fs
or
and
pop
or
cmp
mov
dec
(bad)
fiadd
aaa
dec
movs
pop
dec
sbb
add
cld
ret
inc
call
pop
in
mov
inc
pop
and
lods
ins
and
scas
jne
out
ins
push
xchg
push
shl
in
cmp
pusha
dec
adc
or
fisttp
mov
inc
pop
scas
inc
mov
and
jo
mov
ret
inc
lods
add
and
jge
cmp
and
jle
jge
push
and
mov
enter
movs
ds
add
mov
test
ins
call
jno
cdq
bound
adc
jmp
add
bound
add
push
nop
lahf
mov
or
mov
je
and
mov
(bad)
add
add
in
pop
ret
dec
ficom
sub
mov
jl
push
je
and
cld
inc
push
xor
cld
cld
inc
add
sub
xchg
cld
cld
cld
loope
xor
cld
cmps
push
add
loope
xlat
sbb
inc
shl
mov
jbe
inc
outs
mov
cwde
cld
ror
dec
inc
adc
es
dec
jmp
and
imul
add
fcom
in
nop
daa
das
bound
addr16
imul
or
lahf
iret
fadd
and
push
push
sub
sbb
sti
jmp
jle
pop
adc
add
inc
vmread
inc
clc
mov
add
int
les
mov
in
push
shl
sbb
cmp
sbb
push
push
pop
xchg
es
push
mov
sbb
inc
mov
inc
xor
and
cmp
and
lahf
pusha
fmul
dec
inc
mov
or
and
mov
or
push
mov
cmp
adc
xchg
fild
test
(bad)
xchg
xchg
xchg
xchg
dec
xor
das
test
push
inc
pop
adc
xlat
and
lds
retf
in
cmp
(bad)
pop
call
ret
push
push
fcmovnb
leave
and
dec
dec
add
(bad)
xchg
pop
or
neg
imul
or
push
push
mov
push
xchg
jecxz
dec
dec
ss
xor
mov
inc
push
call
fs
in
xor
jo
cmp
and
xchg
cs
pop
xchg
xor
add
mov
fild
outs
sbb
dec
test
sbb
test
and
adc
test
mov
dec
call
cwde
inc
loopne
test
xchg
jl
ins
or
add
push
dec
cmp
xor
pushf
xor
ja
je
mul
retf
cmps
xchg
test
cmp
pop
dec
inc
xor
clc
xchg
clc
fmul
xchg
pop
or
jmp
adc
add
xchg
inc
pop
or
sub
mov
fs
sub
adc
dec
idiv
sub
jo
leave
push
ds
shl
das
mov
retf
adc
imul
js
sub
and
popf
dec
xor
cmc
mov
scas
mov
pop
mov
adc
sub
aas
das
mov
pusha
sar
leave
shl
dec
pop
sbb
sbb
adc
nop
aam
cmc
arpl
js
mov
pop
jo
pop
inc
call
es
sub
call
inc
mov
cdq
ret
call
les
adc
push
mov
xor
sub
(bad)
jne
adc
push
out
jno
mov
inc
shr
sub
ins
popa
iret
add
pop
imul
retf
js
sbb
pop
out
out
inc
dec
and
adc
es
add
ret
adc
pop
push
pop
dec
add
test
je
adc
adc
pop
popa
shl
dec
popa
jns
jne
jae
inc
or
jbe
outs
ins
sbb
adc
jmp
jo
push
popa
jg
rol
or
cmp
push
sbb
mov
jne
cmp
(bad)
std
mov
lea
pop
xchg
dec
jp
lahf
cmps
push
push
xor
aas
add
dec
pop
rol
xor
add
or
cmc
push
es
adc
sar
fnsave
xor
jae
mov
mov
div
or
add
add
cmps
movs
jp
jmp
inc
ret
call
cmp
push
or
push
std
and
lds
jp
and
and
mov
adc
mov
dec
imul
mov
xchg
xchg
sbb
push
mov
sub
dec
or
sbb
sbb
push
ret
and
pop
add
sbb
jg
dec
clc
jne
ja
ins
jmp
pop
retf
sub
dec
sub
inc
cmps
push
mov
popf
in
xor
dec
call
imul
dec
out
pop
or
ss
inc
pop
inc
inc
fcmovu
and
add
or
jp
mov
stos
dec
pusha
xchg
inc
add
add
int3
or
lods
inc
add
cdq
shl
xor
add
iret
adc
inc
and
das
pushf
shr
retf
xchg
adc
sub
es
push
mov
jbe
mov
xor
not
es
sub
mov
xlat
mov
cld
xchg
jl
dec
ror
push
es
js
push
pop
pop
pop
test
push
loope
clc
hlt
push
pop
test
(bad)
aas
mov
and
sub
iret
cs
push
sbb
cmp
jge
or
xchg
je
jmp
add
add
jmp
sub
enter
push
into
push
mov
(bad)
mov
xchg
mov
sub
inc
rcr
jae
ins
(bad)
push
dec
cmp
or
xchg
add
cmp
bound
cld
loop
push
sbb
cmp
ret
cmp
inc
push
mov
(bad)
and
mov
or
es
or
xor
lock
sub
pop
add
jmp
sbb
shl
nop
push
add
hlt
inc
pop
loopne
dec
es
rol
retf
dec
cmp
xchg
lods
cmpps
dec
imul
and
mov
call
test
cwde
popf
in
jecxz
push
dec
dec
add
je
in
cmp
cmp
inc
mov
rcl
not
pop
cmps
dec
mov
jg
xchg
je
clc
sbb
adc
sbb
xlat
cmp
jg
shl
(bad)
sub
dec
xlat
sub
push
outs
xchg
rcr
mov
out
lahf
mov
rol
int3
inc
test
mov
xchg
cdq
sbb
dec
pop
lea
gs
pop
add
scas
ins
lods
add
add
mov
add
clc
xchg
(bad)
sbb
jo
adc
add
inc
push
add
push
dec
push
cs
cdq
inc
or
(bad)
cli
push
fcom
inc
sbb
ins
shl
sbb
xor
sbb
xor
inc
xor
sub
adc
fsubr
fistp
out
xchg
cmp
adc
add
in
jo
mov
add
bound
and
xchg
mov
repz
ror
push
inc
or
dec
std
nop
xchg
adc
add
cmp
cdq
mov
sbb
imul
sub
add
push
pop
cmp
mov
sbb
sub
add
jge
mov
cmp
pop
es
adc
sub
and
cmp
add
nop
sbb
push
xchg
or
adc
inc
add
pop
fimul
call
jecxz
movs
ret
iret
add
fs
sti
mov
enter
popf
sbb
pushf
not
test
test
(bad)
fist
mov
adc
movs
(bad)
bound
adc
pop
mov
imul
dec
mov
mov
les
int3
sbb
js
push
ins
inc
push
add
mov
inc
pop
into
leave
je
pop
push
or
fadd
xor
sbb
bound
xchg
xchg
sbb
cmp
mov
sub
or
or
leave
or
dec
or
mov
jne
xor
es
cmp
sahf
rcr
dec
ins
loopne
dec
mov
jb
dec
mov
xchg
ret
cmc
and
dec
dec
adc
sbb
mov
and
clc
cmps
data16
push
pop
int
sbb
leave
imul
mov
sbb
inc
xor
and
inc
and
scas
or
mov
jp
inc
js
test
iret
adc
movs
xor
dec
or
push
adc
add
mov
cmp
and
call
sar
repz
and
cdq
(bad)
sbb
scas
cdq
ja
(bad)
(bad)
arpl
daa
ins
dec
retf
mov
and
sub
sti
or
call
cmp
ret
ds
xchg
cld
cs
add
mov
ficomp
inc
sti
loopne
mov
xchg
dec
jp
jno
mov
or
loope
hlt
in
xchg
test
inc
pop
enter
mov
add
hlt
sti
inc
aad
dec
inc
dec
dec
dec
inc
dec
dec
or
mov
(bad)
and
rcr
fisub
pop
or
or
mov
inc
jb
leave
inc
loopne
mov
push
xchg
inc
ret
cmp
push
mov
out
pop
jmp
xor
mov
inc
push
test
inc
add
cmp
and
add
jo
inc
pop
push
mov
bound
mov
dec
les
sbb
fdiv
ja
add
sar
inc
ror
inc
dec
(bad)
(bad)
xchg
inc
nop
jg
xchg
push
inc
daa
push
add
dec
push
ret
sbb
jo
inc
imul
imul
daa
and
in
int
pusha
and
sbb
loopne
push
aaa
or
mov
leave
aam
push
push
mov
adc
and
jo
lods
repnz
rol
retf
mov
pop
adc
bound
call
mov
push
fnsetpm(287
dec
sbb
inc
(bad)
das
repnz
rol
pop
aaa
mov
add
mov
or
inc
dec
mov
sbb
loope
xchg
mov
add
cwde
inc
adc
or
and
push
fs
xchg
mov
jae
sbb
push
imul
je
xchg
(bad)
mov
mov
daa
lahf
sub
(bad)
fist
lock
mov
and
imul
popa
dec
jecxz
inc
scas
fimul
outs
xchg
stos
or
xor
outs
nop
cli
out
mov
in
dec
mov
dec
push
and
push
inc
xor
adc
fcom
test
arpl
repz
and
add
push
loopne
mov
jl
repnz
loopne
pusha
je
or
inc
pop
adc
push
nop
and
sbb
int3
sbb
(bad)
pop
cmp
pop
icebp
dec
sbb
push
sahf
enter
push
inc
mov
xor
aad
jmp
dec
retf
or
mov
inc
(bad)
(bad)
pusha
add
xchg
pop
es
hlt
shrd
aaa
imul
or
sub
sbb
and
mov
jne
or
enter
push
mov
fsubr
test
pop
xchg
and
xor
adc
cmp
jo
inc
push
inc
loop
sbb
dec
psubusw
dec
pop
aad
dec
shl
xor
pop
repz
addr16
out
push
adc
sub
aaa
fldenv
inc
rol
stc
adc
test
inc
les
repnz
rcl
inc
in
xor
mov
out
mov
dec
dec
fcom
push
hlt
push
push
shl
push
pop
int3
addr16
aad
scas
sub
cmp
or
mov
ss
sub
daa
mov
xor
call
add
adc
mov
sar
xchg
stc
push
mov
fistp
xchg
mov
outs
jmp
add
adc
sub
add
adc
or
adc
push
sbb
jbe
loop
pop
push
aas
xchg
jp
dec
mov
(bad)
sbb
sbb
adc
jle
imul
lods
adc
adc
cmp
imul
sbb
cmc
sub
add
mov
mov
and
js
add
cmp
add
cmp
pop
push
add
dec
icebp
iret
outs
nop
in
add
xor
rol
xor
and
pop
stos
sub
dec
dec
push
pushf
jne
xchg
dec
and
mov
and
pop
xor
test
sub
ret
add
xor
or
cli
and
inc
cli
push
clc
mov
jno
pop
cld
js
jbe
xor
inc
addr16
mov
pop
mov
add
scas
inc
pushf
mov
bound
clc
test
jb
inc
je
cdq
xor
and
and
mov
pop
add
loop
adc
mov
add
test
xchg
fild
jbe
int
daa
adc
clc
add
mov
xchg
popf
inc
xor
cwde
retf
js
lsl
fmul
loopne
fidiv
arpl
ficomp
and
push
pusha
pop
inc
or
ficomp
xchg
jns
pop
mov
push
out
mov
mov
inc
loope
out
push
mov
xor
lea
sar
cmp
ja
cmp
cmp
xor
pushf
sbb
sbb
rcr
pop
rcl
and
lods
dec
jae
lahf
xor
inc
sub
cs
shl
and
jmp
enter
pop
stos
pop
rol
mov
xchg
lods
and
sbb
int
add
movs
aas
(bad)
dec
add
jae
xor
or
rcr
js
aaa
inc
sbb
or
stos
jmp
call
add
sti
push
xchg
and
aad
ret
outs
dec
xchg
push
add
or
jne
int
sub
push
dec
das
(bad)
mov
jle
inc
fldcw
dec
mov
jmp
arpl
xor
xor
mov
dec
(bad)
adc
fcomp
jmp
out
and
sub
sbb
cmp
or
mov
jmp
push
jnp
inc
mov
dec
or
sub
jbe
ins
je
ins
bound
aam
sbb
or
add
sub
test
or
imul
push
pop
cwde
pop
mov
lea
out
mov
pop
lods
mov
sbb
inc
inc
xchg
dec
fdivr
inc
je
sub
inc
push
inc
arpl
das
dec
xor
dec
cwde
push
mov
push
inc
jmp
adc
movs
jae
push
mov
(bad)
in
add
sub
movs
xbegin
and
push
cmp
push
shl
dec
pop
pop
icebp
or
add
fmul
push
pop
and
loopne
dec
iret
adc
xchg
psubq
push
ud1
adc
jo
or
or
cmp
movs
inc
sub
out
pop
stc
dec
fimul
or
das
outs
fcom
popf
pop
or
sbb
and
lods
jne
xor
sub
mov
jne
mov
or
icebp
sbb
and
mov
inc
add
(bad)
sbb
jae
jne
xchg
sub
pop
sti
gs
cld
cmp
inc
push
xchg
fwait
prefetch
adc
add
or
add
or
mov
movs
mov
mov
stos
fsubr
popf
mov
rcr
ss
push
dec
fdivr
outs
inc
sbb
push
(bad)
in
add
adc
fiadd
xor
push
push
icebp
cmp
adc
pop
pusha
(bad)
gs
cli
fiadd
mov
pop
pop
dec
loope
mov
outs
inc
fist
arpl
jmp
mov
mov
and
in
and
and
shr
outs
adc
aad
movs
add
sbb
xor
sbb
add
cmp
push
add
or
mov
ja
xchg
fmul
add
cmp
mov
mov
daa
cmp
add
das
aas
cmp
xor
adc
inc
push
inc
imul
mov
outs
pop
(bad)
(bad)
rcl
je
xor
push
clc
inc
add
movs
sub
add
dec
inc
sub
and
sbb
push
jle
xchg
pushf
xchg
rcl
ror
fidivr
xor
nop
inc
mov
mov
add
push
ror
pop
mov
cmp
movs
sub
or
pop
neg
push
mov
cmp
lods
shl
test
(bad)
xor
in
push
jmp
movs
jle
mov
mov
jnp
xor
add
push
adc
call
jle
xchg
ret
cmp
pop
mov
or
sti
mov
fs
sub
aas
stc
mov
test
sbb
enter
mov
out
mov
pop
retf
cmp
cmp
or
fcom
jl
in
mov
fs
push
and
push
jecxz
xchg
mov
shl
aam
sbb
scas
fwait
sub
sbb
pop
ins
sub
push
rol
gs
pop
add
dec
les
pop
adc
adc
mov
adc
lds
retf
test
inc
movs
rol
and
pop
int
mov
rcr
or
and
sub
xchg
sbb
or
pop
popa
dec
rcr
aam
adc
std
sub
pop
add
xor
mov
sub
sbb
push
mov
push
mov
push
mov
and
sub
sar
add
test
dec
mov
retf
add
daa
ins
stos
rol
outs
xor
lock
movs
or
xor
pusha
dec
add
call
mov
nop
aam
stos
and
call
and
inc
mov
sbb
and
push
loop
xchg
hlt
in
(bad)
mov
adc
fstp
hlt
outs
clc
clc
jae
inc
add
mov
mov
mov
sbb
jo
cmp
dec
sbb
adc
mov
and
sub
mov
das
arpl
add
test
loope
and
xchg
xor
pop
cmp
dec
movs
jns
ins
stc
jp
inc
clc
push
adc
cmps
push
fs
fbstp
or
mov
jo
ss
push
inc
sub
les
shl
adc
mov
xchg
xchg
test
es
mov
repnz
add
dec
dec
aas
xchg
dec
mov
inc
test
jbe
sti
mov
adc
inc
mov
inc
and
cmp
push
test
jno
rol
pop
cmp
js
add
(bad)
sbb
adc
jl
fwait
loopne
sub
(bad)
dec
es
dec
push
jo
dec
mov
pop
mov
and
in
das
dec
pusha
cmp
cmp
dec
push
jns
cmps
jbe
mov
les
or
popa
movs
rcl
add
rol
(bad)
test
sbb
push
mov
add
push
outs
xlat
push
je
sub
cmp
pop
jb
icebp
out
cmp
adc
mov
ror
shl
jbe
add
jno
fist
mov
cmp
adc
sub
mov
enter
enter
add
retf
or
pop
xchg
or
sbb
ret
loope
fsubr
test
mov
adc
sbb
or
clc
fsub
mov
jnp
je
sar
or
push
cmp
jne
jl
fucomi
adc
dec
sub
inc
dec
adc
in
sub
clc
push
inc
js
mov
and
imul
popa
or
and
ret
push
sbb
fcomip
mov
dec
inc
adc
add
add
sti
lods
fist
scas
aas
sbb
popa
adc
sbb
push
xchg
dec
stc
rcl
js
in
push
pop
hlt
xchg
add
dec
mov
adc
inc
bound
jo
ins
sti
(bad)
push
sbb
inc
das
cwde
push
inc
xchg
dec
rol
sub
test
ret
call
movs
xchg
xor
mov
(bad)
cmp
sbb
mov
and
sub
pop
push
jbe
inc
push
cmps
and
rcl
adc
sbb
push
or
pop
fldenv
mov
and
dec
inc
and
dec
cmp
xor
and
je
adc
push
imul
add
andps
rcr
cmp
test
sub
xlat
daa
xlat
jb
sub
or
inc
jno
movs
inc
jne
scas
and
gs
pop
and
inc
mov
(bad)
xchg
or
jecxz
push
xchg
sbb
mov
xor
in
nop
sbb
and
(bad)
iret
(bad)
rcr
movs
and
mov
jl
mov
mov
lahf
mov
shr
pop
pop
cmps
(bad)
adc
xor
rcl
push
push
loopne
xchg
adc
dec
ret
repnz
loopne
dec
adc
or
mov
inc
inc
adc
in
test
push
cdq
pop
lods
inc
inc
or
adc
retf
cmp
push
dec
lods
fdiv
xchg
mov
loope
add
shr
inc
pop
mov
adc
xchg
ret
js
adc
inc
imul
add
pop
daa
add
out
test
mov
mov
scas
test
push
imul
mov
or
pop
nop
cs
mov
clc
lock
cmp
adc
jmp
fild
mov
pop
jg
mov
xor
sub
xchg
pop
dec
and
sub
test
das
scas
xlat
ret
pop
xchg
movs
cmc
adc
add
loopne
lock
inc
cmc
mov
sub
pop
repz
dec
push
lea
popf
adc
and
push
jle
jo
into
and
ss
xchg
add
js
push
cmp
in
lahf
push
mov
pop
xor
jne
into
xor
push
or
js
pop
test
shl
push
add
and
mov
(bad)
fcomp
sar
push
movs
mov
and
cs
mov
sub
cmp
sar
pop
jbe
jg
adc
rol
mov
stos
ins
sub
add
inc
jns
paddb
jl
loopne
in
ficom
add
cmps
and
mov
inc
jbe
push
mov
call
add
xchg
pop
faddp
loope
dec
mov
out
pop
(bad)
mov
sbb
inc
fld
je
xchg
inc
mov
popa
or
pop
fcom
mov
popf
test
fisub
and
cli
mov
and
lods
out
add
sub
dec
(bad)
retf
sub
xor
and
sub
cmp
ds
push
outs
inc
cmp
dec
shl
es
mov
xchg
cdq
cmp
pop
mov
cmp
and
cmp
fnstenv
inc
add
add
add
mov
fstp
adc
sbb
add
rol
movs
xlat
adc
jne
(bad)
in
shl
lods
aas
mov
je
les
pop
push
adc
ret
addr16
or
sub
sub
lock
fldenv
mov
push
aas
jmp
cs
test
dec
add
std
hlt
and
scas
xchg
mov
sbb
xchg
push
retf
in
add
lea
into
int
(bad)
fsub
test
(bad)
inc
xchg
mov
xor
pop
sub
mov
mov
cwde
xor
push
aam
push
mov
adc
test
mov
xchg
(bad)
sbb
adc
aaa
repnz
jge
mov
in
push
prefetcht2
jecxz
sub
ss
xchg
xor
xchg
int
cmp
leave
(bad)
loop
sbb
inc
pop
xchg
cmp
dec
je
adc
push
clc
sbb
fcomp
cmps
add
cmps
jno
and
(bad)
fdiv
stc
inc
test
and
loope
pop
dec
aam
out
sbb
(bad)
fdiv
xchg
pop
loopne
add
scas
std
lock
sbb
push
add
adc
shl
ins
nop
ins
jo
in
jl
push
(bad)
(bad)
imul
or
les
cmp
bound
push
or
lods
mov
xchg
jmp
dec
push
aam
sbb
aad
dec
add
(bad)
lds
sub
scas
sub
das
fimul
test
pop
inc
xor
movs
push
dec
fist
xor
in
push
out
retf
or
sbb
push
pop
and
ret
loopne
rcr
push
call
rol
pop
cld
outs
inc
cmp
je
test
aaa
lds
sub
sbb
sub
retf
mov
dec
imul
pusha
sub
add
add
ja
or
ror
nop
ja
test
fs
stos
pop
dec
retf
jmp
shr
in
fstp
sub
xchg
ret
push
mov
ss
adc
movs
add
add
xor
sub
mov
out
jne
adc
fwait
dec
and
fiadd
lea
adc
mov
data16
pushf
sbb
lds
retf
mov
add
jnp
les
enter
sub
loop
mov
cmp
mov
les
sub
pop
and
jb
and
sub
mov
mov
sbb
add
cwde
push
cmp
mov
(bad)
loop
or
bound
cmp
jnp
or
add
cs
sub
out
or
sbb
sbb
add
fdiv
adc
pusha
pop
or
ret
push
inc
mov
mov
sbb
and
xor
clc
pop
add
dec
jne
enter
mov
out
inc
gs
inc
ret
or
mov
xor
sbb
sbb
sti
sub
push
pop
mov
pop
addr16
mov
mov
sub
int3
push
cmp
mov
pushf
jl
add
test
add
rol
repz
ins
repz
mov
push
fild
xor
xchg
mov
test
loope
idiv
xchg
mov
mov
and
(bad)
jmp
and
and
or
mov
xor
std
div
jg
inc
mov
enter
int3
les
icebp
cmp
outs
mov
cmp
loopne
sbb
or
push
ins
xchg
popa
dec
cwde
daa
mov
pop
sti
jg
mov
and
or
inc
xor
mov
dec
mov
sbb
into
sub
int
or
xor
mov
add
inc
and
dec
sbb
jno
xor
mov
test
cld
div
mov
rol
mov
add
xchg
aas
clc
(bad)
dec
xchg
mov
mov
call
vpsrlw
in
sub
xor
sub
add
call
icebp
fistp
inc
js
or
mov
outs
push
xchg
mov
add
dec
test
clc
out
ins
push
mov
es
fst
or
cld
mov
rol
xor
ret
mov
movs
int
loopne
out
hlt
jecxz
xor
add
xor
fistp
push
mov
pop
add
add
dec
outs
in
enter
fist
loopne
jmp
xchg
scas
mov
pop
js
cmp
std
mov
mov
xor
add
mov
mov
rol
pop
shl
out
mov
clc
or
aaa
mov
mov
nop
xor
push
imul
das
jl
in
jnp
je
jl
cmp
repnz
push
push
imul
sar
sub
jp
dec
mov
pop
(bad)
jnp
imul
adc
adc
out
lahf
push
or
pop
jmp
call
daa
xor
xor
xor
mov
add
add
mov
clc
xor
mov
(bad)
mov
scas
les
fnstenv
push
mov
or
xor
jnp
pop
sub
sub
cli
sbb
retf
push
pop
sub
mov
mov
mov
fld
dec
les
adc
cld
sub
push
xor
push
mov
add
das
clc
sub
inc
popa
lods
push
push
mov
push
xlat
mov
or
and
inc
cmp
push
es
push
pop
sbb
pop
outs
xor
xor
pop
mov
xor
xchg
adc
inc
cmc
movsx
mov
mov
(bad)
cdq
mov
xchg
mov
sbb
das
js
pop
pop
outs
jle
(bad)
fwait
sub
xor
or
push
dec
sub
sbb
call
(bad)
inc
or
loope
ret
sub
add
push
mov
clc
ret
xchg
pop
(bad)
push
dec
jmp
(bad)
(bad)
push
dec
pop
mov
repz
and
or
mov
fistp
rol
js
ficomp
cmp
dec
inc
lds
les
mov
mov
popf
mov
add
dec
mov
mov
mov
pop
sbb
jo
jmp
into
sub
mov
adc
add
fidivr
out
add
sbb
add
xor
xor
mov
pop
fwait
fwait
or
stc
mov
fsub
mov
sub
mov
mov
fstp
cwde
jbe
adc
and
gs
mov
jbe
inc
sbb
inc
sub
fimul
mov
in
xor
out
(bad)
dec
mov
push
cli
cmp
adc
add
add
jg
fcomp
mov
sub
xor
mov
movs
mov
cdq
push
scas
fnstenv
jecxz
ficomp
cdq
add
mov
mov
out
cmp
pusha
pushf
loopne
xchg
stc
pop
in
lods
mov
add
sti
push
lods
add
push
ret
and
inc
xchg
cdq
aaa
pop
mov
xor
out
jp
je
push
inc
or
or
rcl
popa
mov
xor
mov
cmps
movs
jae
and
xor
fadd
or
pop
jb
mov
aad
or
mov
or
add
mov
add
sbb
or
in
mov
xor
push
aas
cld
(bad)
cmp
enter
mov
movs
loop
fnop
xchg
mov
rol
fstp
pushf
jno
add
bound
jge
pushf
add
cmovp
mov
lock
mov
or
jl
daa
out
shl
lock
clc
push
call
and
jbe
mov
xor
and
mov
(bad)
in
push
mov
sub
push
bound
scas
cli
inc
add
jmp
add
mov
mov
xlat
xor
mov
call
mov
adc
popf
(bad)
inc
fnstcw
sti
pop
pop
or
mov
and
and
or
mov
inc
addr16
mov
cmp
stc
sbb
aaa
push
out
ror
ins
or
gs
scas
mov
mov
mov
loope
ss
push
mov
loopne
pusha
jne
(bad)
lahf
xor
add
sub
test
or
pop
outs
clc
adc
mov
je
xchg
fdiv
push
imul
(bad)
in
call
test
and
mov
ror
xor
xor
cs
jecxz
or
dec
mov
call
mov
fcmovnu
add
pop
imul
imul
clc
mov
push
sahf
jns
and
push
test
scas
jp
in
xor
mov
fisubr
dec
fidivr
fisubr
ret
in
cmp
cmp
ret
lds
test
inc
push
mov
inc
je
adc
push
mov
mov
enter
shr
out
data16
outs
fst
jns
es
xor
add
enter
pop
add
cmp
jbe
fild
jecxz
add
es
adc
outs
(bad)
fistp
int3
(bad)
aam
sub
mov
jecxz
stc
sti
idiv
or
add
mov
xrelease
ficomp
loop
cmps
or
fsub
clc
jb
inc
ror
enter
mov
inc
mov
pop
loope
loopne
mov
and
in
jne
sbb
and
push
sub
adc
sub
dec
mov
sbb
cli
hlt
stos
sbb
data16
aad
test
xor
add
js
jle
add
sbb
rol
pop
inc
sbb
or
pop
push
xor
or
hlt
int3
jle
data16
add
sar
sub
mov
push
adc
(bad)
out
(bad)
cmps
in
mov
outs
or
fwait
xchg
mov
aam
loopne
dec
xor
mov
xor
mov
dec
mov
fwait
mov
xor
xchg
stos
mov
adc
addr16
out
iret
mov
sub
test
dec
mov
loopne
addr16
push
mov
ins
sub
cli
mov
ficom
mov
fild
dec
xchg
and
das
test
xchg
xchg
sar
ins
or
retf
lock
adc
or
add
inc
inc
and
sub
xchg
loope
sub
out
and
dec
lods
push
fbstp
or
sub
clc
mov
mov
repz
inc
mov
or
add
inc
add
xor
jle
es
push
push
rcr
(bad)
fisttp
pop
xor
push
xchg
sub
(bad)
sub
stc
ror
or
cmp
push
pop
mov
out
fxch
push
pusha
jbe
lahf
mov
sub
xchg
pop
rol
aas
or
sub
or
loope
and
cwde
(bad)
data16
inc
push
and
dec
mov
pop
gs
inc
(bad)
ins
inc
and
xchg
cmp
jbe
xchg
in
in
mov
mov
mov
scas
leave
cmps
and
pop
add
adc
mov
jne
mov
loopne
xlat
push
mov
les
test
dec
xchg
add
int3
mov
push
jg
les
mov
jnp
pop
push
mov
add
push
inc
ficomp
jle
mov
sub
mov
ret
or
out
cli
inc
and
inc
gs
jle
int
xor
mov
inc
xor
xor
mov
cmp
pop
mov
or
loopne
and
in
pop
jge
cs
cli
add
jbe
push
ret
push
out
loopne
in
rol
js
repz
adc
jo
sar
mov
dec
xchg
sub
icebp
loope
mul
fldcw
xor
arpl
pop
cmovl
sbb
lods
xor
dec
(bad)
jnp
mov
adc
pop
in
cld
das
xor
cli
mov
mov
adc
push
lock
call
test
mov
push
mov
(bad)
jecxz
(bad)
fist
fst
push
and
mov
popa
jmp
jno
test
and
and
inc
int3
dec
pop
inc
sbb
xchg
dec
or
or
mov
mov
nop
xchg
mov
aaa
outs
clc
and
cmps
nop
mov
sti
mov
xor
xchg
xor
sub
mov
jae
enter
lods
shr
xchg
or
dec
inc
mov
std
inc
mov
stc
mov
pusha
std
xchg
clc
dec
cmp
xor
push
mov
cdq
aaa
lahf
ss
imul
clc
xchg
pop
mov
jge
imul
dec
xor
push
jnp
popf
data16
fidiv
icebp
add
out
jmp
cld
adc
push
lahf
retf
sbb
xor
inc
pop
js
imul
movs
nop
or
xor
clc
pop
cld
(bad)
mov
xchg
mov
mov
inc
and
outs
clc
int
inc
leave
(bad)
mov
out
cmp
cmp
icebp
aaa
mov
inc
pop
sti
mov
or
ins
add
jo
(bad)
xchg
ret
sbb
jp
movs
ins
push
aam
or
in
int
loopne
dec
push
pushf
push
in
scas
push
pop
sub
xor
hlt
xlat
xlat
into
or
shr
adc
or
push
fstp
mov
add
jo
pop
outs
xchg
int
pop
ja
xor
shl
retf
mov
and
cmps
xchg
outs
mov
out
sbb
ret
int3
ins
sub
jg
mov
adc
jmp
mov
icebp
(bad)
fwait
daa
cmps
adc
ins
cmp
inc
lock
jg
pop
sub
inc
and
into
push
int3
sti
imul
xor
(bad)
or
(bad)
add
and
or
pusha
fistp
cmp
out
into
mov
fs
sbb
pop
sbb
test
mov
sbb
mov
fsub
mov
fsubr
push
and
dec
xchg
dec
inc
mov
mov
and
xchg
and
xchg
repz
xor
jo
mov
repz
out
sbb
int3
ja
jae
push
mov
pusha
dec
xchg
add
sub
sbb
mov
push
icebp
out
dec
mov
and
out
xor
push
adc
rcl
pop
sub
shr
dec
call
xchg
inc
fwait
sbb
mov
push
cmp
pop
out
sub
xor
sub
push
mov
ins
mov
out
mov
inc
cli
stc
fisub
mov
and
adc
lds
lahf
push
sbb
ror
or
fld
(bad)
jg
lahf
popf
cmc
or
sub
pop
push
mov
enter
sbb
outs
mov
jnp
jno
sbb
inc
mov
out
cmps
mov
je
inc
ror
xor
and
xor
js
mov
push
mov
or
lods
dec
add
xor
push
hlt
push
jmp
rcr
loope
cmps
retf
or
or
int
call
xchg
out
add
xlat
ret
das
mov
push
adc
xchg
(bad)
mov
dec
xlat
sub
call
ja
call
sub
cmp
fild
cld
outs
jecxz
add
or
aam
test
mov
add
jg
mov
mov
sbb
and
push
jp
sub
sbb
stc
sub
mov
sub
xor
pop
xchg
cld
push
push
add
mov
ss
adc
pop
cld
mov
cmp
push
cld
(bad)
fild
and
add
pushf
sub
mov
fistp
push
mov
mov
adc
sub
inc
push
nop
push
jle
and
add
mov
aaa
cmp
pop
in
es
ds
jbe
sbb
outs
fisub
mov
bswap
(bad)
(bad)
pop
and
pop
(bad)
jo
cmp
inc
push
test
or
outs
or
fstp
sub
stos
sbb
xor
dec
aas
add
xchg
fisttp
clc
mov
mov
adc
loope
movs
xchg
xor
xor
cmp
push
cmp
cmp
popa
cmps
mov
loope
inc
std
out
mov
outs
in
(bad)
imul
or
shl
mov
push
es
dec
pop
shl
cld
cld
mov
mov
jle
fwait
add
sub
pop
repz
or
stc
mov
xchg
mov
fidivr
mov
fsubrp
xor
dec
inc
or
call
cld
aas
adc
popf
push
dec
mov
(bad)
xchg
popa
jnp
mov
ss
mov
bound
call
mov
scas
fimul
fidivr
aaa
inc
add
xor
mov
and
(bad)
mov
stos
cmp
inc
aaa
(bad)
mov
push
loopne
mov
stos
es
mov
jmp
fiadd
fsubr
mov
rcr
(bad)
fcmovnu
dec
mov
dec
push
xchg
cmp
imul
adc
pop
mov
aaa
das
push
push
mov
aad
in
push
call
aaa
sub
dec
mov
ret
fstp
push
(bad)
out
sbb
aaa
push
aaa
or
sub
stos
nop
popa
popa
mov
fmul
cmp
push
iret
inc
loop
lods
mov
sub
xchg
sbb
or
ins
mov
push
(bad)
clc
ins
xor
mov
xor
xchg
xchg
sub
ja
jbe
in
cld
xor
jo
lea
add
or
adc
mov
mov
xchg
jg
ret
fwait
cli
icebp
mov
xchg
rcl
cmp
ds
aaa
cmps
stos
inc
pushf
jecxz
or
pop
pop
push
(bad)
aad
(bad)
pop
and
in
test
mov
out
mov
dec
outs
test
fisub
retf
pop
sti
adc
cmp
adc
inc
push
sub
sub
loopne
cli
scas
js
repz
sub
dec
shl
jg
aaa
sbb
adc
test
or
outs
data16
scas
and
hlt
pop
inc
mov
iret
xor
jo
cld
into
cmp
sub
fsub
ins
inc
test
mov
mov
adc
mov
add
mov
dec
loopne
or
in
sub
push
mov
push
or
lea
stos
hlt
mov
mov
repnz
adc
jo
add
pop
mov
hlt
(bad)
push
xchg
or
and
sbb
out
int3
inc
scas
(bad)
(bad)
loopne
inc
movs
call
adc
or
imul
mov
mov
hlt
pop
mov
pop
or
push
mov
(bad)
or
(bad)
call
adc
inc
adc
jge
es
mov
add
dec
add
les
or
mov
ret
loope
and
int
fdiv
jne
mov
or
push
in
cs
mov
adc
cmp
pop
cs
jg
arpl
jp
push
push
mov
pop
and
jmp
dec
mov
xor
xor
add
sbb
lahf
div
mov
cmp
push
dec
push
xor
sti
sbb
dec
lahf
fwait
movsx
xor
push
imul
mov
add
out
ror
mov
in
adc
or
push
ret
call
movs
inc
xor
rcr
push
outs
cmps
add
hlt
jmp
jo
mov
sar
out
dec
add
(bad)
aam
cmp
mov
xchg
pop
cmc
test
out
int3
push
or
sbb
add
xor
add
mov
inc
retf
adc
pop
adc
adc
or
fdivr
lea
cmp
add
clc
pusha
mov
xchg
pop
or
xor
sbb
cmp
das
sar
push
mov
(bad)
jo
push
fdivr
sub
mov
stc
add
push
fidivr
inc
push
inc
add
int
dec
stc
push
mov
in
push
in
in
pop
icebp
test
sub
mov
and
jl
cmp
pop
icebp
jo
sub
enter
out
dec
push
mov
mov
stos
ds
fist
fidivr
jmp
(bad)
jmp
dec
xor
enter
add
mov
mov
sti
pop
cld
das
pop
dec
iret
aam
sub
mov
sub
ja
xor
xor
jo
aam
jnp
popf
gs
popf
inc
fimul
sti
jne
popa
ins
mov
adc
add
xchg
imul
inc
adc
mov
mov
pop
dec
int3
ds
(bad)
xor
jmp
push
sbb
je
push
mov
cld
out
repz
in
sub
mov
loop
mov
sar
adc
test
fiadd
ret
or
and
jmp
push
(bad)
xor
mov
stos
mov
mov
cwde
es
mov
xor
scas
scas
(bad)
sub
push
pop
or
repnz
sub
push
call
jg
(bad)
int3
xlat
sub
ja
cmp
pop
outs
test
inc
aas
test
dec
push
sub
push
and
(bad)
in
div
push
pop
outs
pusha
inc
inc
sbb
fs
add
(bad)
lock
add
mov
adc
and
dec
hlt
cmp
sbb
neg
cmp
int3
add
pop
mov
push
pop
push
dec
mov
and
sub
rol
dec
icebp
fld
xor
push
(bad)
and
lock
ins
(bad)
pop
fmul
fimul
dec
pop
sub
sub
or
jo
ficom
jmp
dec
adc
adc
mov
(bad)
push
add
inc
xor
mov
mov
popa
add
or
xor
push
shl
push
cmp
jne
add
ja
in
loopne
add
push
or
wrmsr
xor
mov
push
inc
es
sub
fistp
fistp
ret
ins
add
push
fwait
shl
stc
cli
push
jo
es
push
pop
push
lds
pop
loopne
cmp
jno
mov
pop
pusha
push
jbe
fiadd
jb
cli
dec
sub
and
sub
test
or
les
push
mov
jl
cmps
(bad)
jg
pushw
enter
pop
sar
ret
sub
add
shl
pop
mov
ror
pusha
push
call
aaa
mov
add
dec
dec
sbb
enter
ret
fist
ret
add
call
js
pop
mov
add
mov
aas
rol
mov
aam
clc
mov
cs
out
push
jecxz
fmul
sti
or
loopne
jb
lods
xchg
push
mov
hlt
inc
dec
xchg
cmp
retf
ss
and
jmp
into
sti
and
add
sub
xchg
inc
cwde
fdivrp
ret
into
mov
inc
or
xchg
mov
dec
cmps
loopne
stc
or
call
es
out
enter
in
adc
or
ret
mov
jmp
sbb
add
or
rcr
(bad)
icebp
pushf
aaa
nop
or
push
arpl
add
repz
adc
and
adc
xchg
cmp
mov
stc
dec
cld
add
ret
in
mov
inc
imul
xor
enter
xor
sbb
dec
or
pop
dec
mov
jae
in
jge
xor
aaa
mov
(bad)
in
adc
in
jnp
test
dec
sub
inc
loopne
cmps
add
scas
pusha
sub
mov
mov
shl
cmp
rol
std
add
dec
outs
dec
test
mov
pop
pop
imul
ret
(bad)
pop
add
mov
xchg
pop
pop
sub
sti
mov
add
xor
mov
cli
dec
add
cmc
mov
rcr
dec
mov
add
mov
push
push
jmp
xor
pop
or
and
sub
push
mov
pop
test
inc
cli
loopne
pop
mov
mov
xor
ret
pop
pop
xor
add
sbb
mov
mul
jl
xchg
mov
out
lods
mov
jmp
sub
aam
call
dec
out
or
xor
ss
push
and
jno
xor
fimul
mov
sub
adc
jns
and
jle
jl
or
lock
mov
mov
sbb
push
mov
inc
repz
inc
xor
outs
sub
or
pop
mov
xchg
inc
or
push
xchg
out
xchg
ja
movs
lock
test
pushf
es
or
retf
push
(bad)
out
xchg
push
sbb
mov
retf
or
sar
in
sub
call
push
push
push
mov
add
clc
inc
sar
pushf
pop
ins
in
call
push
(bad)
cmp
scas
neg
hlt
in
jge
lahf
test
cmp
out
xor
mov
retf
pop
test
pop
mov
xchg
outs
mov
or
ins
and
test
loope
push
fistp
mov
retf
add
mov
test
cld
mov
sti
jp
add
mov
mov
into
icebp
call
add
or
add
les
out
adc
mov
call
test
dec
aam
adc
adc
ins
rol
jmp
or
sub
mov
xchg
pop
shl
retf
pusha
push
inc
push
mov
das
push
repnz
(bad)
mov
or
jg
lea
push
mov
xor
mov
adc
sub
push
xchg
dec
jnp
add
xor
mov
and
xor
ja
in
out
pusha
push
xor
push
hlt
aaa
jl
xor
sub
sub
jg
scas
ret
bound
ret
data16
bnd
push
push
(bad)
jmp
pop
mov
mov
aas
push
cmps
jl
xchg
jge
lds
(bad)
mov
or
pop
sub
sbb
sub
adc
dec
mov
dec
mov
mov
arpl
xor
iret
cmp
jmp
mov
movs
inc
out
add
out
adc
or
push
cmp
mov
mov
pop
or
push
xchg
sar
popf
clc
call
push
retf
jb
add
jle
pop
push
fdivp
mov
cdq
daa
cwde
call
and
fmul
js
xlat
sar
ins
test
mov
xchg
outs
data16
xor
in
aad
pop
jb
adc
(bad)
popf
sub
push
leave
test
lahf
out
dec
mov
xchg
aaa
out
clc
(bad)
sub
sub
and
out
daa
scas
inc
or
repnz
sti
jg
adc
and
out
xor
call
in
test
jmp
sar
rol
shr
loop
out
add
dec
jb
sub
sub
or
dec
jmp
ja
xor
mov
add
mov
stos
fistp
hlt
pop
mov
xchg
sub
push
mov
outs
dec
add
shl
dec
adc
pop
mov
pop
pusha
mov
mov
push
add
jle
inc
mov
xor
cmp
dec
sub
mov
dec
add
sti
es
and
push
ror
retf
mov
pop
ror
ret
mov
out
sbb
dec
ror
pop
add
and
ret
mov
mov
aas
push
jg
xchg
loopne
mov
jp
ja
add
and
mov
fidivr
mov
fld
mov
push
in
jb
pop
xor
xor
sub
fiadd
dec
add
mov
or
outs
push
addr16
jg
ds
rcr
retf
enter
lock
out
es
or
mov
call
movs
mov
mov
or
aam
mov
clc
inc
dec
mov
addr16
js
add
mov
push
ds
xchg
out
push
cdq
inc
clc
push
add
sbb
pop
mov
inc
daa
or
or
ret
xlat
adc
mov
(bad)
pop
call
loop
sbb
clc
push
mov
aad
ror
nop
ret
and
push
sbb
(bad)
popa
add
sbb
pop
sub
shl
call
push
ja
jbe
mov
test
aam
adc
xor
cdq
hlt
xor
adc
dec
push
outs
(bad)
(bad)
mov
push
test
xchg
adc
mov
fidivr
rcl
(bad)
mov
into
pusha
(bad)
dec
outs
mov
mov
cmp
or
mov
sub
push
(bad)
jo
pop
xor
sbb
fwait
mov
mov
mov
pop
pop
add
and
and
add
pop
movs
stc
add
ss
cli
or
sub
sbb
mov
add
inc
push
jle
lock
sub
scas
adc
dec
sbb
fcomi
jge
adc
sbb
in
push
aas
push
inc
push
fld
hlt
neg
rol
xchg
loopne
into
mov
mov
cmc
and
adc
adc
popf
bound
fistp
stc
or
adc
jmp
imul
add
lods
cli
jmp
data16
movd
icebp
in
push
add
arpl
and
xchg
mov
leave
and
jge
xor
call
mov
sub
xor
mov
lahf
push
mov
pusha
push
mov
jg
(bad)
jno
call
repnz
add
push
outs
jge
push
sub
rcl
lock
push
call
jne
out
imul
fcomp
in
add
(bad)
in
xor
add
sub
mov
shl
(bad)
sti
push
fld
and
cmp
cmp
imul
repnz
pusha
adc
fsubr
shr
and
pop
cld
push
jmp
jp
bound
push
dec
mov
clc
stos
(bad)
test
cmp
mov
or
jg
das
(bad)
repz
xor
add
jle
mov
pop
jo
fiadd
cmp
int
mov
pushf
add
cs
ins
add
add
sub
cli
(bad)
dec
or
push
sub
mov
mov
xor
test
adc
add
sbb
xor
xchg
adc
hlt
or
or
push
adc
outs
jle
mov
add
ret
inc
inc
int
loopne
into
dec
and
into
and
sti
sub
xchg
push
rcl
div
(bad)
cmp
xchg
(bad)
adc
and
ins
cmp
(bad)
or
mov
inc
scas
mov
outs
hlt
movs
aaa
outs
fisub
cwde
or
addr16
mov
das
dec
and
inc
das
jecxz
in
scas
push
mov
call
sbb
idiv
cmp
add
fmul
dec
mov
add
ds
jl
pop
ss
adc
sbb
mov
xor
mov
repnz
mov
in
outs
jb
pop
scas
push
call
cmp
cmp
rol
push
sub
jbe
daa
(bad)
ss
add
mov
push
adc
cmp
pop
mov
aad
push
sub
push
mov
mov
xchg
sti
xor
xor
adc
cmpps
adc
icebp
std
push
pop
mov
mov
xchg
adc
fld
add
xchg
xor
sbb
cld
inc
mov
inc
movs
out
dec
inc
aam
js
loope
sbb
jb
out
mov
mov
push
rol
and
adc
mov
movs
mov
cli
and
cmps
aaa
add
sub
push
inc
loop
sbb
add
and
dec
out
lea
(bad)
mov
jb
out
fadd
jl
test
jge
sti
mov
pop
jecxz
xchg
xor
mov
add
mov
pop
push
add
xor
test
out
(bad)
int
aaa
add
pop
push
iret
mov
mov
xor
in
fwait
mov
dec
sub
bound
push
or
bound
out
sbb
jp
dec
sub
mov
inc
or
sub
xor
adc
mov
arpl
sub
add
test
jg
dec
ret
pop
jecxz
mov
ror
push
mov
outs
mov
pop
fldenv
int3
fwait
dec
push
sbb
lock
es
jne
fldpi
icebp
push
and
pop
push
movs
loop
jle
mov
movs
test
add
xor
mov
mov
jmp
dec
xor
mov
add
mov
xor
push
mov
pop
stos
pop
gs
mov
loope
inc
jmp
sub
jl
add
ss
rcr
inc
mov
stc
aaa
xchg
mov
mov
fisubr
mov
xchg
sub
in
sub
idiv
out
jg
inc
xor
jmp
pop
mov
xor
mov
add
loopne
clc
aaa
cwde
sub
enter
pop
mov
pusha
xor
pminsw
fldcw
cs
or
sbb
add
adc
pop
xchg
aas
adc
dec
call
hlt
bound
or
ret
push
in
pop
xor
cmc
mov
outs
imul
add
mov
push
push
mov
inc
jle
push
jle
cdq
mov
lock
push
in
cmp
push
lods
fsub
(bad)
out
(bad)
aas
inc
add
inc
lods
jmp
xor
lahf
cmps
aad
and
push
and
outs
lock
hlt
cmp
je
pop
cmp
je
push
push
clc
into
(bad)
dec
push
jg
mov
jne
adc
and
inc
jmp
push
dec
imul
or
push
scas
cmp
jne
cmp
shl
xchg
outs
mov
or
inc
inc
add
shr
add
add
mov
(bad)
(bad)
cmp
or
add
imul
push
popa
arpl
imul
dec
outs
ins
outs
bound
outs
mov
adc
je
dec
popa
push
add
ins
gs
xchg
sbb
mov
adc
or
push
vcvtpd2dq
xor
nop
jp
inc
pop
adc
nop
ja
push
inc
out
pushf
imul
ret
adc
aaa
cld
jge
or
pusha
adc
and
sbb
fcomp
cmp
je
push
inc
(bad)
loop
in
pop
push
sub
inc
cmp
mov
loope
jae
popa
pop
xor
cmps
jo
add
(bad)
push
push
leave
push
stos
je
push
adc
retf
fwait
std
cwde
divps
mov
arpl
(bad)
and
dec
popa
addr16
push
(bad)
fcom
jb
test
scas
popa
sbb
das
xor
arpl
jbe
xor
jo
add
call
and
jle
mov
mov
jmp
inc
movs
push
cdq
call
je
push
push
push
lock
pop
cdq
or
dec
and
or
repnz
fwait
add
je
cmp
sub
jle
in
xor
inc
mov
loopne
push
or
push
jmp
push
sbb
retf
pop
jle
inc
jo
shr
sub
dec
sti
ret
icebp
jmp
pop
loope
sub
dec
dec
add
or
mov
add
and
or
pushf
push
add
xchg
call
push
inc
jl
xchg
push
push
mov
les
add
inc
or
stos
cmp
ret
adc
push
jnp
mov
mov
pusha
mov
nop
inc
test
jecxz
xlat
call
sub
inc
jne
shr
sbb
outs
sbb
ss
and
jbe
arpl
rcr
jb
mov
aaa
push
fisttp
jg
mov
test
xor
sub
or
mov
pop
or
sar
mov
std
outs
aad
jno
jg
pop
sub
neg
inc
mov
xor
dec
cmp
aaa
retf
mov
xchg
pop
mov
and
push
in
pop
(bad)
mov
dec
push
push
and
adc
or
hlt
mov
add
shr
mov
fbld
loop
dec
sbb
inc
stc
jb
std
dec
ror
loopne
(bad)
call
mov
xor
inc
xor
aas
dec
inc
xchg
push
mov
in
sti
push
ret
(bad)
call
inc
or
dec
fcmovb
ret
je
sub
mov
fld
(bad)
mov
in
inc
mov
out
or
xor
ja
(bad)
addr16
fs
add
ins
ret
mov
jnp
jb
pop
arpl
jmp
pop
inc
inc
cs
dec
push
(bad)
imul
mov
push
dec
jbe
inc
or
xor
daa
mov
inc
inc
mov
(bad)
mov
ror
pop
(bad)
jmp
mov
je
cmps
inc
inc
lahf
jg
xor
mov
mov
ins
mov
test
inc
mov
mov
out
push
inc
or
out
mov
mov
mov
ret
(bad)
jl
pop
xor
test
mov
out
arpl
cmp
(bad)
sti
add
mov
pxor
test
xor
xchg
scas
das
and
(bad)
outs
(bad)
pop
pushf
and
push
add
ret
dec
add
fld
pop
out
loope
sti
mov
clc
jg
dec
jno
add
mov
adc
add
(bad)
(bad)
mov
jmp
sti
add
sti
addr16
push
jb
scas
inc
fisubr
and
mov
out
mov
or
sbb
retf
add
jle
adc
in
(bad)
inc
mov
jmp
add
push
add
(bad)
sti
jae
xchg
and
mov
lock
or
add
ja
and
push
(bad)
pop
inc
fs
xor
out
outs
push
out
sub
addr16
call
add
jmp
dec
push
pop
ins
and
fld
pop
aaa
ret
adc
shl
clc
sar
or
inc
aaa
mov
arpl
inc
or
call
pop
add
mov
in
and
inc
lods
ins
pusha
repz
dec
add
add
hlt
ins
add
ret
pop
mov
adc
inc
test
outs
imul
fiadd
or
ret
mov
pop
adc
(bad)
and
out
mov
xchg
inc
test
out
aas
dec
(bad)
mov
add
mov
cld
(bad)
cld
mov
jmp
nop
add
mov
cdq
rcr
mov
push
test
xor
inc
aas
mov
ins
std
mov
cmp
inc
add
mov
cmp
arpl
sbb
mov
mov
add
aas
jae
call
jmp
sahf
ja
je
pmovmskb
mov
ins
pop
add
ja
xchg
and
adc
mov
pop
add
(bad)
fiadd
lods
and
inc
sti
inc
(bad)
into
ins
out
mov
pop
mov
bound
xchg
in
(bad)
dec
add
stos
int3
dec
sub
mov
mov
add
aas
push
add
push
mov
(bad)
mov
lahf
int3
or
cmp
mov
mov
mov
pop
repz
dec
cld
cmp
ins
sti
push
add
mov
pop
outs
cli
pop
mov
fs
outs
pop
not
jle
pusha
sti
idiv
(bad)
sbb
and
shl
dec
not
push
cli
loop
push
cli
fisttp
out
mov
jmp
push
pop
inc
adc
push
add
out
jp
out
mov
mov
fs
movntq
out
or
inc
xlat
push
pop
fdiv
jg
mov
js
mov
mov
adc
sub
sub
mov
or
jge
pop
or
int
gs
mov
dec
enter
(bad)
out
sub
and
pushf
push
adc
jmp
icebp
push
cld
cmps
mov
xor
mov
cwde
add
xchg
adc
pop
(bad)
nop
std
or
fs
inc
mov
cli
outs
pop
mov
pop
pop
dec
add
inc
or
ja
fild
sbb
sub
out
dec
push
out
out
jno
pop
out
cmc
pop
push
inc
sti
jg
sub
sbb
jae
cmp
pop
pop
test
jno
jns
push
xrstor
push
cld
mov
inc
mov
jle
cmp
mov
cmps
call
mov
das
push
shr
inc
fisttp
add
dec
(bad)
pop
not
inc
cdq
out
jmp
inc
cmp
jnp
push
mov
(bad)
xor
xchg
inc
in
push
mov
cmp
or
addr16
(bad)
arpl
loop
aaa
xchg
add
cli
mov
or
ret
out
sub
jle
inc
mov
dec
xor
std
sub
cmp
push
sbb
inc
mov
push
test
dec
mov
push
ret
inc
pop
or
scas
xor
jg
jg
inc
inc
cmove
ss
jg
jmp
ds
pop
arpl
test
retf
imul
and
mov
aam
add
ins
or
add
out
inc
cmp
jl
hlt
add
(bad)
fbstp
out
dec
add
jmp
aad
(bad)
cli
inc
add
mov
mov
pop
push
xor
xor
jmp
and
inc
dec
shl
mov
or
ret
xchg
add
xchg
enter
aas
mov
lods
xor
rcl
out
mov
jmp
stos
mov
cli
aas
pop
add
mov
inc
fs
std
jno
retf
and
add
loope
sub
and
les
inc
cdq
out
jo
mov
out
cmp
add
dec
xchg
mov
mov
or
add
push
add
jp
in
mov
mov
adc
inc
pusha
xor
sti
and
sbb
shr
jle
push
pop
jae
sar
test
xlat
cdq
inc
mov
add
push
or
mov
dec
add
push
jae
shl
aaa
hlt
out
js
jle
ret
sbb
ret
mov
mov
call
(bad)
scas
jp
add
push
push
inc
mov
jb
mov
das
push
jae
adc
repz
add
adc
sbb
and
pop
je
jnp
(bad)
(bad)
aas
aas
(bad)
out
sbb
ret
(bad)
sbb
dec
xchg
or
jp
jns
mov
sub
bound
sti
xor
mov
push
mov
arpl
jbe
dec
and
push
neg
add
push
std
fild
pushf
add
pop
or
ja
out
ins
fsubr
jbe
mov
add
loop
dec
(bad)
fidiv
aad
add
movs
pop
dec
(bad)
not
xchg
ret
or
mov
ja
arpl
mov
clc
test
mov
dec
arpl
inc
adc
push
cmp
loop
std
inc
in
mov
inc
pop
adc
out
jg
inc
imul
ja
push
pusha
sbb
(bad)
mov
and
sbb
mov
add
inc
jmp
add
neg
shl
push
sub
fs
inc
and
(bad)
(bad)
test
cld
fmul
xor
loopne
inc
out
inc
xor
jge
shl
test
add
jg
mov
sar
sahf
push
xchg
pop
mov
pop
sub
cmp
push
frstor
adc
scas
or
inc
icebp
lahf
sub
(bad)
jmp
add
cmp
arpl
jne
push
cli
mov
clc
cmp
pop
hlt
sub
call
jbe
call
dec
pop
mov
cmp
pop
inc
pop
inc
movs
or
xchg
arpl
xor
cmp
inc
adc
call
je
mov
fiadd
test
ins
jae
fs
ja
mov
fisttp
shl
mov
add
mov
pop
jl
inc
xchg
push
dec
xor
loopne
xor
push
lahf
pop
mov
out
adc
ret
push
enter
(bad)
call
(bad)
(bad)
je
push
aaa
out
out
xlat
cmp
clc
mov
das
inc
repnz
mov
mov
and
lds
(bad)
int3
bound
jl
add
rol
cwde
test
cmps
mov
mov
or
(bad)
cmp
xchg
std
idiv
xor
hlt
sub
xor
loopne
retf
mov
dec
cmc
ins
daa
mov
out
xor
jmp
and
dec
mov
aaa
std
push
pop
in
je
push
jg
test
aaa
test
sbb
popa
out
adc
repz
inc
mov
jg
stc
ins
dec
mov
dec
dec
inc
(bad)
inc
add
fsubr
call
mov
ins
sar
test
inc
xor
sbb
mov
or
sub
pinsrw
add
lods
aad
(bad)
out
inc
lds
in
es
cmp
pop
outs
in
push
bound
inc
pop
aas
jl
mov
ja
push
stos
aad
mul
imul
hlt
sub
mov
push
mov
inc
pop
test
mov
(bad)
dec
pop
rol
jae
fiadd
or
xor
inc
sar
stos
lock
pop
sti
or
cli
(bad)
out
add
mov
shl
cmp
add
bound
sub
je
or
cmp
fild
(bad)
(bad)
daa
out
rcl
inc
sbb
test
ins
xlat
sar
fisubr
(bad)
arpl
push
adc
mov
add
adc
mov
call
std
mov
push
out
sbb
div
loop
mov
xchg
pop
es
rcl
dec
idiv
lock
call
sub
push
add
jp
int
icebp
(bad)
out
add
push
and
loope
push
mov
and
push
lea
(bad)
aas
leave
sub
outs
nop
mov
ror
rol
push
test
stos
push
rol
mov
lock
(bad)
fbstp
xor
(bad)
(bad)
adc
cld
popa
mov
lock
or
add
jnp
and
jg
dec
mov
gs
mov
pop
adc
xchg
mov
out
pop
push
add
push
pop
cmp
inc
out
xor
sub
jg
cld
mov
leave
add
iretw
add
icebp
mov
pavgb
pop
cmp
push
jmp
mov
mov
pop
pop
popf
clc
hlt
pop
add
add
imul
cmc
imul
sti
xchg
rol
lds
div
cwde
imul
xchg
mov
imul
lock
inc
pop
mov
xor
or
pop
pop
mov
pop
ror
mov
enter
mov
inc
xor
jmp
cmp
call
jle
pop
sar
add
inc
pop
and
clc
retf
mov
(bad)
jns
add
int3
loop
inc
sti
adc
fs
xchg
call
add
imul
je
out
loopne
sub
mov
aaa
xchg
test
lds
push
cmp
(bad)
std
fs
fild
hlt
push
push
icebp
rol
push
lock
sub
dec
(bad)
idiv
push
aam
or
adc
push
cld
adc
push
imul
rcr
out
fdivrp
or
and
mov
inc
je
aaa
call
jnp
mov
jno
add
(bad)
lods
mov
xlat
mov
test
mov
cmc
aaa
loop
add
addr16
outs
stos
push
and
mov
pop
out
cmp
outs
test
mov
cdq
popa
pop
lods
mov
test
add
xchg
out
pop
out
pop
xchg
ret
pop
test
jae
adc
arpl
push
mov
(bad)
stos
jo
cmp
or
mov
std
inc
add
mov
dec
call
or
push
or
fbstp
outs
fiadd
mov
mov
or
pop
pop
je
arpl
push
mov
fisttp
inc
jmp
mov
mov
(bad)
in
adc
mov
sbb
lahf
(bad)
cli
stc
cmps
mov
out
bound
clc
dec
or
imul
lds
fiadd
sti
outs
shr
push
inc
(bad)
fsub
pop
inc
xor
ret
or
cmp
(bad)
pop
dec
addr16
or
ins
js
(bad)
je
cli
cmp
xor
ret
mov
std
outs
(bad)
pop
in
xor
xlat
daa
out
nop
(bad)
das
(bad)
sti
mov
ror
add
push
xor
not
push
add
or
out
mov
mov
vmovss
inc
ds
adc
aas
jae
mov
shl
fidiv
(bad)
mov
add
push
or
pop
test
dec
mov
pop
cld
sub
add
ins
push
fs
fcomp
xor
pop
pop
add
shl
mov
ss
jb
and
or
inc
adc
enter
or
and
cs
mov
inc
inc
rcr
inc
sub
mov
fisttp
por
adc
rol
add
add
pop
sbb
cmp
mov
nop
out
mov
int3
fisub
jle
cmps
icebp
mov
mov
mov
sti
and
jno
clc
dec
mov
sub
push
inc
out
dec
lock
push
add
cld
add
fcomp
mov
repz
push
add
es
add
(bad)
add
out
mov
ret
push
or
cmp
cli
mov
enter
inc
add
(bad)
xor
push
cli
jb
and
xchg
int
dec
mov
inc
in
std
add
jmp
in
pusha
mov
adc
cli
(bad)
jmp
lock
lds
(bad)
jo
jne
sub
mov
mov
cli
ror
jb
add
inc
cmp
getsec
xchg
inc
xor
pop
or
mov
int3
inc
js
psllq
push
add
inc
or
(bad)
jg
les
(bad)
push
pop
xor
dec
ja
sub
pop
fcmovnb
out
dec
mov
mov
mov
call
mov
test
inc
fidiv
mul
into
push
dec
test
sbb
push
ret
and
or
mov
loope
inc
shl
dec
call
cmc
stos
cmp
push
cmp
mov
je
add
cs
in
jae
cmc
and
lods
mov
std
pop
push
add
cld
div
push
mov
out
aas
inc
jle
mov
ret
xor
ret
sbb
pop
ins
xor
inc
mov
jecxz
and
push
mov
xor
imul
arpl
push
push
mov
(bad)
mov
and
addr16
cld
sub
in
inc
jae
call
add
lods
pop
icebp
sbb
jmp
mov
gs
mov
fild
add
in
dec
sti
(bad)
pop
out
scas
add
clc
sbb
lods
stc
inc
cmps
mov
and
clc
out
dec
sar
or
aas
pop
jle
add
aaa
mov
out
sbb
add
cli
or
je
aad
mov
jmp
ins
cmp
fnstsw
and
fwait
jo
out
jl
pushf
std
pop
mov
pop
mov
test
add
outs
(bad)
cli
mov
pusha
pop
inc
fcmovnb
ins
arpl
(bad)
add
mov
and
mov
add
mov
mov
add
xlat
inc
inc
adc
sti
push
and
mov
lahf
or
les
add
add
out
mov
and
dec
pusha
scas
mov
dec
pop
mov
imul
mov
cwde
aam
or
add
call
scas
repnz
call
aaa
or
rcr
call
pop
xrelease
out
je
pop
(bad)
dec
(bad)
(bad)
and
ret
stc
mov
xlat
stos
xchg
push
imul
xchg
int
add
mov
xchg
lds
sti
inc
cli
outs
call
fist
pop
mov
xlat
inc
mov
lock
std
mov
xchg
dec
push
xchg
iret
cli
push
mov
shl
inc
pop
and
dec
cld
adc
cld
ja
push
out
pop
jle
add
jae
inc
dec
inc
outs
out
pop
fldcw
cmp
jne
aas
dec
push
mov
add
mov
xchg
or
adc
rcl
sub
mov
(bad)
inc
ret
sti
test
mov
inc
out
add
pop
int3
test
out
out
adc
dec
(bad)
fdivr
jae
cmc
mov
add
add
push
hlt
fisttp
push
fnstsw
cmps
jg
addr16
movs
cdq
cmp
sti
std
inc
movs
(bad)
ins
call
mov
xor
ja
pop
out
xchg
jmp
ret
add
ss
pop
dec
mov
add
or
loop
push
(bad)
or
cmp
inc
inc
ins
jg
mov
sti
pop
aaa
or
jno
cmove
or
mov
sbb
shr
jg
test
jg
aaa
sti
(bad)
inc
push
shr
daa
stc
inc
test
add
xor
pusha
stos
(bad)
jmp
or
repz
dec
mov
push
inc
outs
xor
(bad)
jae
sti
and
push
mov
loopne
test
out
push
xor
test
neg
ins
sub
retf
mov
movs
test
push
add
pop
arpl
cmp
aam
add
push
loop
ficomp
pop
push
pop
dec
mov
ds
out
inc
pop
lock
mov
std
cmp
jecxz
imul
add
push
push
pop
mov
and
xor
xlat
jbe
dec
aad
sbb
sbb
push
sbb
mov
push
jae
retf
or
fld
nop
shl
push
test
xlat
jno
daa
push
jmp
adc
aam
adc
mov
add
lods
dec
fimul
adc
push
movs
inc
call
add
push
add
jg
scas
test
inc
rcr
enter
push
pop
cmps
or
push
pusha
call
xor
cmp
outs
int
aaa
ds
mov
outs
or
(bad)
je
or
inc
in
push
outs
ja
ret
mov
adc
inc
dec
pop
mov
pop
sar
gs
fs
dec
mov
jmp
and
sub
push
push
test
inc
xor
iret
mov
ret
fcomip
out
dec
out
cmp
cld
ret
mov
into
jae
push
pop
pop
cld
push
mov
cld
add
and
inc
jae
pop
push
pop
inc
jae
sti
jg
mov
and
ret
dec
stc
ret
sbb
jg
sti
inc
mov
daa
jmp
adc
fsubp
cli
inc
mov
xor
js
fdiv
les
nop
dec
xchg
popf
enter
and
push
loopne
push
cmp
hlt
jg
arpl
ret
jnp
push
mov
jbe
stos
add
mov
aas
test
adc
inc
repnz
or
(bad)
lods
inc
stos
in
add
or
xchg
inc
sub
cmp
push
mov
arpl
repnz
dec
mov
or
adc
add
jle
mov
je
jmp
mov
push
pop
push
mov
sub
fmul
jle
mov
(bad)
stos
test
aam
cld
loop
xchg
(bad)
jg
dec
in
cmc
mov
mov
inc
xor
mov
sti
mov
mov
mov
addr16
test
repz
(bad)
inc
ret
pop
add
or
inc
add
add
clc
out
adc
sub
dec
cli
inc
jns
pop
popa
push
pop
sub
stos
inc
mov
inc
adc
sti
mov
call
xchg
mov
inc
das
mov
mov
push
lods
and
xchg
addr16
mov
aaa
jmp
or
inc
add
cs
or
mov
cld
add
inc
inc
jmp
test
inc
xchg
cmc
mov
cmps
cld
add
inc
add
outs
pop
(bad)
jg
fisub
sub
sub
xor
out
mov
sub
jp
sti
xor
jno
jmp
inc
pop
shl
sar
dec
push
inc
cmp
or
sti
rcl
test
lds
adc
scas
push
pop
pop
push
push
jns
arpl
(bad)
fdiv
and
add
je
sti
sbb
sti
adc
shl
jae
call
test
in
idiv
and
stos
outs
in
push
mov
js
sbb
div
imul
(bad)
sti
ja
cmp
lahf
jbe
cmp
mov
enter
mov
cs
adc
ret
push
mov
test
cs
pop
jp
call
mov
sbb
scas
not
push
or
push
dec
fbld
and
(bad)
repnz
test
mov
mov
add
arpl
jg
int
enter
dec
push
lds
xchg
add
pmaddwd
cld
pop
fsubrp
ins
dec
mov
inc
pop
imul
cdq
stos
ins
out
and
push
loop
add
out
adc
cld
add
pop
inc
ror
push
inc
add
ficom
pop
pop
aad
xor
xchg
lds
sub
dec
mov
jl
add
(bad)
pop
xor
pop
sub
retf
jg
aas
fwait
add
pop
inc
dec
call
and
fld
pop
dec
rol
push
sbb
xor
es
push
in
clc
std
out
in
pop
xchg
jae
inc
mov
pop
xor
ret
sub
and
push
and
test
mov
aam
jmp
pop
or
out
lahf
out
cmp
and
jg
cli
stos
(bad)
mov
call
jb
mov
push
aad
cmp
mov
fmul
xchg
add
inc
push
aam
sub
adc
je
mov
sbb
sbb
xlat
mov
sub
add
outs
jb
cmp
test
pop
cmp
stos
test
mov
inc
mov
(bad)
gs
ror
push
mov
dec
ficom
dec
in
mov
push
outs
add
(bad)
sub
ret
aas
jae
or
or
fcomp
or
je
lahf
or
mov
mov
inc
in
mov
mov
jmp
push
arpl
in
add
jg
jb
(bad)
call
cld
push
adc
inc
fwait
aas
add
push
dec
inc
inc
mov
test
jmp
dec
call
outs
test
fiadd
ins
pop
(bad)
add
div
mov
inc
dec
cmp
pop
out
stc
addr16
jo
inc
loope
add
push
retf
add
(bad)
pop
adc
sti
push
adc
dec
out
in
mov
aas
push
mov
xchg
pop
jmp
xor
jmp
test
and
dec
cli
pop
sub
add
sbb
test
inc
mov
fadd
jg
das
(bad)
adc
jmp
push
fdivr
and
adc
or
sbb
(bad)
push
imul
je
es
mov
push
cld
and
sbb
cld
inc
xchg
and
add
xor
aas
add
mov
bound
fidivr
cmps
aaa
adc
add
adc
add
jmp
cli
aaa
gs
push
mov
fcom
push
ins
stos
outs
sti
add
neg
xor
imul
pop
ret
fmul
outs
adc
dec
test
outs
mov
xchg
sub
jg
inc
push
hlt
div
mov
sub
pusha
mov
je
ins
pop
inc
rol
xlat
fist
sub
call
and
pop
or
jl
xor
mov
imul
les
imul
stos
add
add
sbb
adc
sbb
fimul
cvtps2pd
sbb
ret
jo
jb
mov
fldcw
out
ret
mov
repnz
(bad)
adc
adc
ins
inc
push
cs
push
shl
cmp
inc
sub
sti
inc
dec
stos
test
stos
mov
sti
imul
pop
xchg
mov
pusha
aas
mov
inc
int3
push
sti
inc
icebp
add
inc
pop
(bad)
out
std
mov
cmp
add
mov
xor
xchg
add
dec
arpl
ins
sti
add
or
inc
push
and
push
push
ret
pop
call
mov
dec
mov
push
ret
mov
fiadd
inc
gs
sbb
pop
lock
add
or
mov
cmc
inc
mov
repz
add
inc
pop
push
sub
mov
inc
cli
mov
xchg
mov
push
clc
xchg
lods
or
out
inc
(bad)
push
add
pop
sbb
imul
pop
repz
inc
mov
inc
sub
mov
dec
add
scas
xor
push
mov
stc
push
sar
and
jle
(bad)
cmp
(bad)
jg
add
std
ds
xor
(bad)
inc
lds
in
add
out
clc
push
add
pop
push
mov
(bad)
outs
sti
mov
push
jmp
nop
jmp
adc
scas
xlat
dec
add
push
push
cli
add
ds
jns
adc
dec
push
mov
int
in
push
xchg
add
cmps
jp
lods
clc
data16
push
push
pushf
xor
push
xor
mov
pop
pop
add
mov
push
ins
(bad)
outs
dec
pop
dec
jle
fs
push
jae
inc
sub
jg
dec
or
inc
outs
push
adc
inc
(bad)
(bad)
pusha
ret
push
inc
xlat
repnz
mov
cmps
adc
shr
and
out
mov
adc
mov
and
sub
push
out
xchg
arpl
out
test
pop
call
adc
in
sti
dec
pop
(bad)
aas
aaa
repz
pop
jmp
dec
stc
das
inc
inc
(bad)
fst
shl
push
push
les
fisttp
jae
mov
push
(bad)
and
jnp
arpl
xor
sgdtd
je
fs
out
mov
push
rcr
lds
xlat
inc
inc
sbb
xchg
(bad)
or
mov
sub
or
std
push
mov
mov
scas
mov
(bad)
ficomp
cmovp
jl
jmp
outs
out
outs
adc
cli
cli
and
fist
in
dec
scas
clc
call
outs
push
mov
push
mov
mov
inc
pop
jno
inc
(bad)
jmp
test
add
pop
inc
(bad)
mov
out
dec
push
enter
add
icebp
fwait
push
mov
bound
pop
mov
in
fist
sub
inc
mov
lahf
aam
xlat
das
gs
jg
sbb
pop
jmp
rcl
add
stos
add
or
mov
clc
aad
xor
or
out
pop
or
xchg
pop
xor
imul
in
cmps
pand
adc
and
inc
xchg
push
je
das
shr
es
add
sti
pop
jne
ret
inc
jnp
inc
popa
inc
imul
sub
enter
or
out
pop
mov
std
or
fs
mov
dec
into
add
ret
add
cmc
add
mov
call
mov
push
mov
add
jno
into
jae
inc
mov
into
push
sbb
ror
mov
inc
cmc
dec
jmp
lods
adc
pop
push
(bad)
cmps
cmp
scas
push
add
int3
dec
std
jae
aam
aad
pop
inc
xor
sti
mov
sar
outs
push
aad
les
movs
or
inc
dec
sbb
inc
add
xor
xlat
xchg
aas
ret
jmp
aas
lds
adc
(bad)
jno
mov
pop
dec
je
test
in
inc
ror
inc
inc
std
adc
int
ret
jecxz
push
jmp
ror
add
xchg
inc
cmps
sub
je
inc
dec
movs
dec
jmp
std
(bad)
repz
pop
ret
dec
add
(bad)
pop
push
out
push
rol
or
arpl
dec
enter
mov
push
test
sub
or
pop
jmp
jo
mov
inc
arpl
inc
or
sub
sti
lahf
add
add
pop
scas
(bad)
push
add
mov
push
pop
clc
inc
nop
pop
aas
and
(bad)
shl
ss
add
test
call
and
jo
add
les
xchg
icebp
push
jbe
xchg
stos
xor
add
fdivr
sbb
cwde
dec
cmp
outs
xlat
jg
sub
fadd
pushf
lds
lock
pop
pop
fiadd
movs
push
out
xlat
inc
jmp
xchg
add
jae
rcl
enter
fiadd
push
adc
mov
lahf
out
retf
pop
dec
mov
push
cmps
jae
fadd
and
out
dec
arpl
(bad)
push
dec
in
nop
shl
das
add
call
call
xor
retf
xlat
lea
repnz
outs
out
add
adc
or
ret
mov
lds
test
pop
cmc
lock
ret
adc
std
pop
inc
jl
cld
push
mov
or
out
push
pusha
inc
scas
aas
add
cmps
enter
std
push
ins
ja
(bad)
sti
fdivr
pop
enter
xor
bnd
sbb
pop
and
outs
jmp
outs
jg
enter
xchg
ret
push
pop
inc
jp
mov
inc
inc
inc
adc
aas
xchg
adc
out
clc
pop
daa
icebp
pop
movs
out
pusha
push
(bad)
push
fiadd
(bad)
aaa
retf
pop
test
mov
stc
or
jnp
push
imul
pop
dec
(bad)
sub
mov
xor
mov
sar
mov
xor
arpl
scas
fmul
push
(bad)
jg
ucomiss
out
call
cmps
(bad)
(bad)
jmp
fwait
add
pop
mov
in
mov
cld
xor
pop
(bad)
fld
add
jmp
add
mov
inc
(bad)
call
push
scas
dec
call
jae
pop
(bad)
pop
push
sub
inc
dec
rcr
jg
mov
add
jb
pop
iret
dec
aas
aas
mov
add
mov
mov
ins
sbb
ret
out
movs
imul
pop
pop
and
scas
inc
dec
mov
div
outs
out
aas
jmp
add
(bad)
jae
std
adc
out
xlat
add
icebp
call
pop
test
mov
or
pop
(bad)
xor
out
movs
jo
lahf
lock
mov
mov
mov
pop
out
cmp
fbstp
add
or
retf
inc
sti
sub
inc
test
fcom
fimul
lock
(bad)
push
and
inc
icebp
sbb
pop
push
mov
add
sbb
cmc
mov
xchg
loopne
inc
mov
gs
add
sbb
pop
fcomp
cmc
pop
or
adc
(bad)
aas
ins
ins
cmps
jmp
call
lds
add
aas
push
outs
dec
shl
vucomisd
mov
ss
mov
sub
jle
inc
cli
ret
idiv
dec
icebp
es
cli
push
test
(bad)
shr
inc
and
aaa
loop
je
xor
rol
xchg
push
(bad)
or
mov
dec
jge
inc
and
(bad)
ds
int3
adc
std
and
inc
lock
cli
and
outs
dec
and
or
sti
es
mov
bound
mov
(bad)
fwait
enter
sti
ret
aas
sbb
mov
jnp
mov
push
call
out
add
pop
jmp
sub
xchg
aaa
inc
dec
bound
push
push
les
(bad)
cwde
pop
jg
jg
sti
outs
cs
sub
gs
dec
mov
and
ret
pop
pop
std
fwait
or
jmp
jae
push
lock
or
inc
aas
xchg
clc
adc
cmp
mov
jmp
(bad)
adc
pop
aam
dec
pop
ret
sub
rol
add
inc
or
mov
fist
adc
out
stos
mov
sbb
int
sti
rol
ret
jae
cli
mov
cmp
(bad)
(bad)
(bad)
(bad)
sti
push
addr16
inc
loopne
push
cli
xor
mov
mov
adc
(bad)
(bad)
out
mov
mov
pop
ror
(bad)
push
ret
add
mov
inc
sar
popf
inc
mov
mov
mov
push
jg
push
cld
mov
push
cs
add
add
shl
movs
xor
test
and
fistp
pop
out
scas
ret
sub
(bad)
sbb
ds
neg
bound
or
gs
jg
dec
call
jmp
shl
mov
dec
jmp
xlat
sar
xor
ret
les
add
sti
aas
cld
inc
push
out
pop
mov
test
push
pop
inc
aas
xchg
jae
or
mov
inc
pusha
mov
adc
mov
mov
pop
mov
inc
adc
jge
mov
or
pop
fadd
push
mov
fidiv
or
cmp
test
cvtps2pd
fs
pop
cli
neg
(bad)
pop
push
jg
jo
mov
mov
test
sar
ret
scas
push
aad
inc
xchg
mov
cmps
dec
or
sub
test
fnstcw
(bad)
jl
mov
idiv
push
push
outs
cli
mov
push
std
mov
repnz
xchg
rol
jo
mov
jp
dec
mov
fstp
or
mov
dec
psubd
fsub
xor
mov
mov
push
jl
and
jg
(bad)
push
mov
(bad)
pop
inc
pop
xchg
pop
mov
xor
ret
sbb
sub
call
pusha
mov
mov
test
mov
add
or
int3
cs
push
lock
and
cmp
sub
jmp
pop
mov
pushf
(bad)
mov
or
out
inc
or
pop
inc
dec
scas
pop
(bad)
push
ins
(bad)
cmp
jecxz
dec
adc
pop
mov
mov
maskmovq
mul
or
bound
lock
pop
call
sti
push
retf
je
and
std
ss
mov
jbe
mov
inc
jle
mov
sub
inc
out
dec
bound
pop
lock
adc
inc
add
jmp
mov
push
cmp
push
pop
push
jmp
mov
mov
fwait
sub
cli
pop
stos
or
or
outs
stos
icebp
mov
add
inc
sub
ret
pop
int3
clc
mov
clc
add
or
mov
inc
popa
pop
in
jp
sar
sti
mov
pop
or
cld
stos
test
jbe
movs
inc
or
mov
add
aad
jl
test
pop
push
xor
dec
sub
add
(bad)
cmp
adc
and
mov
mov
mov
stos
add
inc
(bad)
(bad)
ins
sti
xor
cli
mov
fiadd
outs
mov
sar
dec
pop
cli
aas
push
mov
inc
jp
(bad)
cli
xor
mov
mov
adc
fwait
add
add
sti
jp
ins
jp
push
dec
out
pop
dec
add
inc
sub
add
aaa
add
and
adc
scas
scas
test
dec
adc
aad
add
das
les
xchg
les
inc
inc
out
syscall
jnp
test
cmps
int
jg
push
mov
(bad)
dec
xor
cmp
inc
xor
xchg
pop
inc
mov
aam
ret
dec
pop
cs
std
xor
mov
outs
pop
aas
pop
push
inc
push
cs
xchg
aas
xor
ja
push
test
dec
xchg
test
xor
icebp
int3
ss
imul
dec
outs
add
div
jmp
fwait
gs
cmps
xor
adc
mov
sbb
fisubr
or
es
inc
imul
push
lods
push
stc
lods
movs
adc
pop
inc
dec
dec
mov
fs
sub
dec
aas
call
pop
push
hlt
(bad)
pop
push
and
popf
in
xor
dec
ficomp
es
pop
into
hlt
mov
in
call
(bad)
jg
bound
sbb
mov
pop
or
arpl
cmp
and
out
aaa
mov
jmp
mov
inc
scas
push
call
mov
mov
div
ret
rcr
cs
sti
call
ins
imul
pop
test
push
es
cmp
mov
inc
sub
sub
inc
aas
cmps
sar
fs
aaa
(bad)
push
lds
arpl
mov
cld
popf
dec
and
in
ins
and
push
mov
sub
clc
outs
push
mov
inc
lock
std
adc
mov
outs
xchg
mov
sahf
adc
pop
dec
int
(bad)
call
jmp
fsubrp
and
mov
(bad)
das
fmul
fs
cmp
(bad)
sub
iret
sti
add
dec
dec
add
enter
sub
imul
push
push
(bad)
mov
pop
push
or
stos
mov
call
sbb
add
cmp
(bad)
inc
(bad)
fisttp
repz
mov
cmp
inc
add
mov
add
std
ret
pop
adc
pop
cmp
and
inc
movs
add
loop
in
gs
pop
adc
std
sbb
sub
pop
pop
dec
sti
cmc
(bad)
dec
out
sbb
jge
mov
adc
pop
outs
int3
jl
lock
inc
jmp
sub
fld
push
(bad)
add
mov
xchg
loopne
jbe
inc
mov
aaa
inc
mov
push
jge
mov
mov
jmp
and
inc
jl
jle
push
stos
jne
test
sbb
jg
jbe
mov
push
sub
mov
lea
ins
and
inc
rcr
loopne
fadd
push
mov
jb
or
pop
mov
add
add
inc
sti
push
jp
add
and
inc
pusha
mov
mov
clc
mov
out
ss
add
xor
mov
pushf
sti
mov
call
(bad)
mov
sar
xchg
ret
inc
stc
inc
sub
pop
gs
jne
jbe
aas
add
adc
inc
into
data16
inc
(bad)
clc
inc
push
test
pop
je
das
ins
into
or
xchg
xor
jl
inc
inc
push
inc
scas
jmp
ror
pusha
cmp
mov
enter
outs
cli
mov
cmc
mov
retf
add
lock
icebp
push
and
push
aas
push
xor
and
lods
mov
adc
xchg
cld
ret
cmp
add
sub
stos
cmp
push
mov
jae
dec
jmp
out
fiadd
add
mov
inc
sti
xor
repnz
xor
mov
mov
iret
xchg
inc
jge
add
mov
js
jl
inc
aaa
pop
(bad)
ret
push
mov
mov
aaa
cld
ja
lock
inc
test
pop
sub
cmps
pminsw
mov
fadd
dec
pop
xchg
std
add
and
cli
xor
test
clc
mov
pop
sub
mov
add
call
aas
xchg
lock
pop
and
mov
inc
mov
(bad)
and
sbb
arpl
pop
shl
scas
jo
shl
in
imul
outs
aas
dec
pop
ret
cmp
scas
and
add
push
add
loop
xchg
dec
test
adc
in
add
dec
push
push
xlat
xchg
mov
aas
mov
cmp
std
cld
adc
inc
test
push
pop
add
mov
lds
jl
ins
div
iret
enter
(bad)
jae
cmc
enter
cmp
fcomip
out
pop
in
std
inc
mov
stos
push
xor
inc
dec
(bad)
imul
clc
or
mov
mov
sbb
jp
out
daa
daa
aas
xor
dec
or
fwait
sub
lds
adc
jmp
cmc
pop
pop
jne
out
xchg
inc
cmc
add
test
idiv
inc
leave
ret
sti
cld
jmp
hlt
add
(bad)
loop
inc
add
xor
addr16
cld
and
pop
xor
(bad)
cmp
ret
sub
pop
repz
jo
lods
xor
les
mov
xchg
xor
pusha
xor
push
ret
jae
mov
(bad)
pusha
pop
cmp
dec
(bad)
mov
adc
clc
(bad)
mov
pop
mov
pop
movaps
sbb
mov
lock
inc
jl
xchg
inc
pop
ins
inc
adc
mov
add
js
mov
int3
pop
xchg
in
add
fs
jle
cmp
aas
pop
adc
mov
mov
adc
dec
daa
jl
jmp
in
ret
or
mov
sar
mov
mov
push
inc
cli
push
fsubr
cmp
pop
rcl
dec
neg
xlat
gs
out
pop
cmp
(bad)
aas
inc
jmp
(bad)
out
mov
shl
inc
rcr
out
jg
jg
into
cld
dec
in
(bad)
jg
ret
inc
jg
aad
cmp
xor
xor
pop
mov
jle
out
dec
test
sbb
add
inc
pop
jnp
fs
add
push
sti
inc
pop
mov
into
jae
xchg
add
fdivr
aaa
jge
add
ret
xor
jmp
dec
mov
lds
dec
add
in
not
fistp
push
nop
mov
imul
mov
mov
xchg
fdivr
push
add
pop
mov
inc
mov
mov
dec
jno
jno
add
arpl
adc
stos
push
lds
inc
push
mov
mov
arpl
mov
inc
pop
xor
dec
jg
jg
mov
jb
add
pop
jno
in
and
mov
inc
fcomi
ffree
mov
or
inc
and
sub
shl
and
arpl
mov
clc
add
scas
push
jbe
inc
adc
(bad)
push
jno
jg
mov
cmp
aad
mov
aad
sub
push
out
jmp
cwde
js
aas
std
cmp
jp
rcr
fisttp
mov
(bad)
jmp
and
movups
inc
fnstenv
inc
push
or
sbb
sahf
lds
pop
je
cmc
fwait
sbb
rcl
icebp
xchg
clc
xor
ins
dec
and
xor
pop
out
xchg
or
adc
mov
call
xlat
push
jge
int3
paddd
aas
aas
jmp
dec
call
lock
cmp
pushf
cmp
(bad)
dec
jmp
push
push
push
jne
(bad)
(bad)
popa
(bad)
cld
inc
mov
pop
jle
dec
dec
add
inc
jbe
sbb
lods
add
or
inc
mov
sub
and
xchg
outs
rol
add
push
pop
add
call
push
lods
pop
and
push
sub
mov
lds
pop
out
adc
jns
push
xchg
jae
jle
jmp
clc
mov
mov
sar
xchg
mov
addr16
or
sub
js
xlat
mov
out
(bad)
jbe
jae
lock
clc
mov
or
out
aad
popa
add
push
imul
inc
jno
push
out
or
inc
dec
pop
mov
jg
std
and
mov
pop
inc
imul
cwde
or
mov
(bad)
call
adc
int
rol
sbb
ins
inc
sti
add
mov
outs
mov
(bad)
add
and
dec
jae
inc
cmp
(bad)
stos
shr
jae
mov
sar
retf
inc
mov
(bad)
jae
rcr
ficom
fstp
xor
(bad)
xchg
mov
mov
aad
inc
adc
mov
sub
or
call
xor
mov
call
ret
iret
mov
jnp
sub
xchg
fimul
test
push
cmps
test
add
mov
ins
scas
test
inc
js
mov
inc
jae
inc
pop
sbb
ja
mov
pop
(bad)
aas
xor
dec
pop
mov
and
xchg
and
mov
inc
jae
in
popa
lds
test
jle
pop
fwait
or
mov
cli
cmps
rol
test
adc
cli
push
xor
lahf
aas
sti
mov
fs
sar
and
push
out
sar
jl
jmp
mov
out
test
icebp
mov
shl
cwde
shl
push
dec
inc
jg
fiadd
inc
push
xchg
loope
xchg
add
mov
push
inc
jg
rol
test
(bad)
ss
test
push
adc
sub
cmp
les
in
sub
xor
pop
mov
jo
or
sbb
pop
cmps
add
push
or
fidiv
test
dec
xchg
(bad)
jg
inc
xor
sbb
and
jne
or
push
cli
out
inc
jbe
shl
inc
sub
int
pusha
aaa
ss
pop
dec
aam
ja
dec
aas
dec
neg
inc
cmp
mov
lss
mov
rol
mov
out
xor
add
(bad)
fcmovnbe
inc
jge
xchg
std
stos
mov
push
push
mov
in
out
pop
loopne
jg
cmp
pop
inc
sbb
dec
ja
pop
mov
ret
dec
sbb
out
dec
adc
lahf
dec
(bad)
fisub
add
jbe
sahf
call
arpl
comiss
std
xlat
adc
mov
fild
mov
imul
mov
inc
cmp
in
dec
mov
fidiv
pop
mov
mov
add
jb
cmp
clc
mov
add
dec
jne
pop
ins
call
xor
out
add
hlt
sub
push
(bad)
inc
push
cli
push
(bad)
add
lahf
cld
push
add
cld
mov
out
jmp
out
clc
mov
cmp
dec
(bad)
push
addr16
test
sbb
sub
clc
jl
xor
cld
pop
or
inc
mov
adc
call
sub
add
xor
inc
sbb
dec
dec
call
inc
aas
aas
cmp
je
test
(bad)
data16
mov
or
xchg
xor
xor
mov
xchg
adc
sbb
icebp
mov
std
(bad)
jg
(bad)
outs
iret
add
inc
inc
inc
pop
sub
out
adc
mov
call
mov
add
or
adc
add
(bad)
outs
inc
mov
push
aas
or
and
(bad)
arpl
mov
push
std
jg
(bad)
fs
je
jle
into
mov
add
mov
inc
pop
push
inc
(bad)
inc
sbb
and
push
add
push
add
(bad)
out
dec
mov
pop
cmps
pop
cld
inc
sar
add
add
ja
jmp
clc
mov
jmp
add
pop
movs
invd
pop
icebp
arpl
out
xor
mov
inc
out
(bad)
fist
or
xor
add
rol
sbb
add
clc
inc
cwde
hlt
mov
xor
push
xor
push
pop
jo
test
push
add
jmp
push
(bad)
dec
push
aas
es
(bad)
adc
test
xchg
add
inc
mov
rol
mov
add
or
fisttp
sar
dec
test
les
add
add
xchg
mov
fidiv
dec
outs
pop
add
inc
out
jno
push
add
inc
jg
jg
imul
add
clc
sbb
xchg
mov
push
jg
hlt
scas
stc
stos
je
addr16
mov
call
std
outs
mov
sbb
inc
inc
stc
sar
test
xor
push
fs
inc
jmp
fsubr
xlat
jno
mov
inc
add
pusha
mov
fild
dec
and
sahf
mov
and
call
ret
mov
addr16
fucom
cmp
push
sbb
(bad)
idiv
jp
leave
pusha
pop
ss
retf
ret
mov
pop
jle
pop
push
add
pop
mov
push
call
adc
push
xor
mov
ins
movs
mov
inc
iret
inc
std
jmp
mov
fbstp
ror
push
das
cmp
xchg
jb
mov
add
je
pop
into
pop
lods
cmp
add
mov
mov
mov
ret
jg
sbb
push
add
or
aaa
ins
aad
div
or
jbe
dec
add
ss
das
sub
xchg
arpl
clc
test
daa
mov
shr
call
pop
push
pop
xor
ja
ds
push
std
ins
lds
push
or
or
(bad)
shl
adc
push
inc
mov
jno
or
cld
push
add
push
mov
dec
mov
inc
pop
idiv
aam
hlt
mov
inc
movs
dec
mov
add
out
mov
inc
(bad)
dec
call
ja
add
gs
aad
dec
mov
and
and
out
inc
ret
or
cmp
std
outs
push
push
pop
(bad)
fisttp
shl
push
mov
inc
and
pop
jge
or
in
mov
jmp
lods
jo
mov
clc
cmps
jmp
ret
fist
mov
(bad)
ins
out
aaa
inc
sub
cmp
arpl
idiv
push
jmp
jl
inc
inc
mov
das
sub
push
jmp
adc
and
scas
dec
out
inc
rcl
add
lahf
popf
clc
scas
xor
and
inc
inc
(bad)
jmp
call
push
mov
push
xor
sahf
sahf
(bad)
lods
and
mov
fistp
add
aas
mov
dec
dec
pop
add
std
rcl
sub
pop
mov
or
fsubrp
mov
jbe
pop
mov
mov
mov
xor
out
push
add
lds
lea
jmp
inc
xor
mov
out
cmp
add
sti
sub
jmp
cld
out
cld
repz
mov
inc
xor
push
or
lahf
sar
call
add
mov
je
pop
mov
push
jle
mov
push
add
das
repnz
cmp
xor
dec
int3
enter
or
mov
out
dec
sbb
mov
jmp
xchg
ja
data16
adc
dec
lahf
addr16
add
sti
lock
mov
loopne
add
pop
push
pushf
dec
imul
out
(bad)
and
and
push
inc
inc
add
push
inc
dec
inc
out
pop
pop
aad
call
inc
push
rcr
neg
and
push
jno
inc
mov
mov
rcr
clc
cmp
(bad)
push
jle
pop
fs
mov
jb
inc
sub
push
mov
mov
mov
inc
mov
sub
repz
dec
idiv
(bad)
data16
bound
push
or
sub
jae
je
jp
adc
scas
and
outs
pop
push
sbb
jmp
fs
cmps
add
or
jne
push
arpl
lods
jbe
sub
out
sub
test
adc
jecxz
jne
movntq
movs
loopne
xchg
(bad)
jmp
dec
or
sar
adc
dec
shl
fdivr
out
xor
repz
ret
push
repz
push
out
ret
push
outs
outs
mov
sub
pop
sti
mov
inc
enter
and
mov
jb
fld
add
adc
cmp
sbb
push
sbb
cmp
add
inc
sub
xlat
mov
div
outs
mov
push
mov
add
add
mov
add
je
pop
fistp
dec
pop
add
xchg
xor
fimul
arpl
mov
sar
jae
(bad)
push
sti
das
cmps
es
add
mov
mov
jecxz
xor
xchg
test
push
jae
pop
cmp
mov
aas
cmc
pop
mov
cwde
loop
loope
test
add
dec
mov
cmp
xor
scas
(bad)
mov
xchg
sahf
std
outs
sub
out
fidiv
ud0
repnz
gs
mov
xor
mov
cld
pop
stos
repnz
add
out
scas
std
std
sti
xor
sub
aas
or
push
mov
sbb
dec
pop
add
jmp
sahf
xor
inc
push
add
stc
sti
je
inc
aas
xor
jmp
xchg
inc
mov
jne
mov
cmc
mov
out
(bad)
jmp
xchg
sbb
pop
add
push
pop
xor
data16
imul
cs
add
mov
dec
cld
call
loopne
push
loopne
ins
jg
not
aas
or
pop
mov
hlt
outs
ss
inc
pop
add
mov
rol
imul
add
test
out
out
xor
mov
(bad)
jmp
dec
out
rcr
mov
push
add
push
cmp
pop
sti
pop
not
xor
movs
lahf
lock
xlat
sub
add
xchg
lods
fiadd
push
ins
push
push
icebp
loop
adc
cmp
and
add
inc
jns
mov
xor
(bad)
clc
inc
jae
aaa
adc
inc
mov
mov
and
mov
push
dec
push
mov
mov
xor
in
jmp
clc
mov
sbb
data16
lods
mov
xchg
(bad)
(bad)
jmp
adc
inc
inc
push
inc
push
je
aas
dec
inc
pop
aas
mov
add
dec
call
jmp
lods
ss
dec
add
pop
and
sub
mov
jg
icebp
pop
icebp
pop
mov
xor
push
ins
out
mov
add
adc
retf
mov
xor
or
mov
mov
add
push
mov
ins
pusha
dec
ret
mov
or
je
std
sbb
jge
add
or
outs
mov
(bad)
call
and
push
rol
mov
fs
mov
aaa
jg
dec
mov
arpl
ret
add
pushf
dec
idiv
sbb
mov
pop
push
mov
push
mov
ret
mov
push
and
or
(bad)
cmc
fbld
or
xchg
pop
push
mov
std
neg
jle
(bad)
ret
or
jg
sti
call
out
pop
mov
jmp
cwde
inc
jmp
xchg
push
or
sub
add
retf
js
jp
xor
ins
inc
sub
stos
pop
mov
push
jl
cs
xchg
pop
push
lds
push
stos
dec
les
push
sbb
hlt
jg
cmc
out
loopne
mov
cld
pop
test
xor
dec
pop
jo
stos
(bad)
in
pop
ss
(bad)
pop
shr
ret
add
mov
push
push
push
rcr
and
sti
jns
daa
fmul
jne
xor
add
mov
and
ror
or
or
or
inc
add
adc
and
pop
mov
jno
shl
push
add
push
stos
out
xchg
js
mov
jg
mov
adc
push
mov
gs
cli
dec
jae
test
mov
xchg
dec
test
or
or
mov
fsubrp
mov
mov
mov
std
pop
into
inc
lahf
loope
add
fimul
xchg
sub
adc
add
jmp
aaa
inc
mov
jae
mov
test
add
push
xchg
icebp
scas
push
hlt
sub
mov
pop
mov
dec
stos
aad
call
push
(bad)
int3
sub
push
sbb
jnp
adc
(bad)
(bad)
in
scas
sub
adc
add
mov
stc
pop
mov
aaa
jecxz
ret
xor
mov
ret
add
popa
aaa
out
mov
mov
enter
paddd
add
jno
mov
push
add
mov
fisttp
ss
mov
jmp
out
xor
cli
jg
je
movs
ins
jae
das
pop
shl
inc
xor
fidiv
add
pop
add
jbe
stc
loope
inc
sbb
xchg
sub
or
in
add
jbe
push
xchg
outs
adc
pop
cld
fsub
add
(bad)
repz
and
rcl
push
sub
pop
or
mov
cmps
jne
sub
(bad)
out
call
pop
dec
jmp
add
mov
or
pusha
xor
daa
ss
fst
adc
or
mov
mov
(bad)
icebp
xchg
cs
xchg
push
loope
xchg
push
mov
mov
push
mov
mov
outs
sub
test
fadd
and
es
mov
ins
lds
xor
xor
dec
ja
mov
sbb
mov
pop
push
xchg
pop
loopne
adc
push
sub
jnp
out
jmp
add
lock
dec
push
sti
sahf
mov
inc
lods
ret
clc
stos
(bad)
xchg
sub
push
and
or
inc
jl
out
jbe
jecxz
mov
(bad)
mov
scas
inc
inc
xor
mov
mov
sub
mov
out
add
fld
add
mov
(bad)
push
retf
xor
mov
push
mov
cld
out
clc
mov
clc
mov
addr16
push
jae
jno
mov
pop
(bad)
cmp
add
sub
shl
adc
cmp
test
(bad)
cmp
(bad)
push
sbb
pop
cmp
pop
jno
cmp
rcl
pop
pop
pop
jno
jg
xor
sub
hlt
pop
pop
mov
adc
dec
sti
inc
dec
je
push
add
shl
inc
add
dec
out
fucomip
mov
jecxz
inc
inc
pusha
cld
pop
mov
mov
sub
jle
inc
cmp
mov
fwait
push
loop
test
pop
cmp
adc
mov
mov
out
jbe
push
jl
fs
inc
xor
mov
dec
(bad)
mov
retf
retf
jmp
loopne
dec
add
mov
call
mov
inc
pusha
jmp
out
cmp
out
jmp
adc
cmp
mov
xchg
inc
xlat
aas
jmp
add
sbb
ror
jmp
mov
ins
repz
add
mov
cld
dec
lock
inc
push
jae
jge
dec
ret
mov
ret
xor
(bad)
pop
jae
mov
std
add
cld
mov
je
aas
pusha
dec
(bad)
aas
repnz
(bad)
mov
stos
not
pusha
call
jnp
je
adc
jp
and
jb
xlat
(bad)
dec
shr
mov
(bad)
in
fild
std
jge
addr16
or
and
ss
mov
shl
xchg
sti
add
scas
ret
fsub
push
call
add
ss
rcl
fild
add
push
out
outs
loop
jnp
jle
fiadd
outs
mov
cmps
push
mov
popa
nop
(bad)
call
scas
call
int3
cmp
call
dec
add
add
lahf
daa
add
sbb
inc
cmp
clc
pop
test
aas
mov
aad
jmp
or
jbe
mov
mov
jg
jae
mov
push
sar
enter
mov
add
call
sbb
iret
mov
push
mov
ret
jae
fist
loopne
dec
and
sbb
mov
push
push
idiv
or
sbb
mov
push
xchg
daa
pop
pop
mov
xor
aas
xlat
test
scas
inc
mov
fsubr
(bad)
call
sub
and
fild
mov
addr16
inc
dec
inc
cmps
loopne
mov
push
or
(bad)
out
xor
xor
dec
add
jae
mov
(bad)
add
(bad)
cmps
jmp
mov
add
test
add
(bad)
test
aad
imul
pop
xlat
pop
into
mov
or
jmp
inc
js
dec
push
jo
lds
lods
xor
arpl
xor
push
jg
adc
mov
inc
inc
pop
icebp
mov
dec
xchg
adc
mov
xchg
inc
add
adc
je
ja
mov
cld
cmp
xchg
into
push
adc
imul
pop
out
js
cmp
cmc
aaa
mov
lds
xchg
push
inc
add
scas
sub
(bad)
mov
aaa
sub
mov
jecxz
dec
push
inc
inc
mov
aas
(bad)
(bad)
xor
push
movntps
inc
or
(bad)
jg
inc
dec
jl
aaa
pushf
mov
inc
inc
call
je
push
ret
outs
cli
(bad)
mov
sub
jecxz
cs
dec
jg
pop
shl
out
sbb
jb
(bad)
push
retf
pop
(bad)
fwait
or
jmp
sbb
retf
jns
cld
mov
(bad)
(bad)
jge
adc
pop
aas
pop
cmp
mov
or
pushf
xor
push
fld
jae
gs
inc
popf
shl
or
cmp
hlt
addr16
push
nop
mov
xrelease
xchg
and
sub
dec
cmc
mov
call
not
(bad)
pop
ret
sbb
add
sbb
shl
les
frstor
sub
out
pop
sbb
xchg
std
inc
sub
xchg
rcl
lahf
inc
test
xchg
dec
mov
or
cwde
idiv
loope
adc
dec
bound
repz
iret
push
aam
cmc
xor
push
add
std
mov
mov
jmp
repz
jne
push
(bad)
dec
mov
(bad)
pusha
jp
int3
lds
mov
push
pop
pop
sub
mov
mov
jb
or
punpcklwd
inc
mov
or
jbe
jmp
pop
mov
bound
add
sbb
in
(bad)
add
enter
aaa
pop
fadd
ss
fld
xlat
xchg
cmp
dec
push
adc
mov
adc
fadd
pop
ror
add
fisttp
jmp
mov
xor
inc
adc
out
add
xor
push
mov
jbe
pop
scas
cmps
vcomisd
mov
dec
push
jb
out
scas
repnz
rol
ret
js
dec
push
hlt
leave
fsubr
test
add
scas
(bad)
mov
pop
mov
inc
mov
add
mov
add
push
xchg
sub
arpl
sub
mov
push
sub
inc
adc
fsubr
into
sbb
adc
mov
int
jmp
mov
outs
mov
out
xchg
dec
dec
test
xchg
jno
inc
inc
jmp
jbe
inc
outs
pop
(bad)
(bad)
das
(bad)
call
cwde
jg
mov
dec
pop
pop
cmc
push
mov
inc
sub
gs
loope
aas
in
js
in
pop
or
push
mov
mov
add
cld
push
enter
cld
xor
sub
jmp
jmp
rol
(bad)
fiadd
inc
je
(bad)
xchg
or
cmps
rcl
rol
call
fisttp
mov
rol
mov
pop
(bad)
pop
mov
cmp
std
es
sub
jp
xor
add
(bad)
jecxz
ins
fcom
inc
jp
popa
jno
sub
push
or
push
aad
mov
inc
int3
mov
mov
fild
sub
dec
mov
sbb
and
mov
lods
push
dec
sub
(bad)
out
call
sbb
inc
and
mov
mov
add
ja
inc
mov
jle
sub
inc
fistp
cmp
aas
pop
mov
das
jl
jmp
repz
int
jl
pop
jge
(bad)
std
xor
(bad)
sbb
and
arpl
inc
cmp
(bad)
push
mov
mov
(bad)
mov
adc
mov
xchg
lock
je
(bad)
cli
push
outs
push
dec
je
xchg
or
scas
pop
repnz
out
add
mov
scas
inc
daa
cli
push
out
ret
add
push
(bad)
pop
pop
and
jmp
xor
sbb
cmps
push
dec
cmps
cmp
and
mov
ss
add
loopne
push
jns
dec
arpl
fisttp
cwde
loopne
sub
inc
clc
add
(bad)
into
push
gs
mov
dec
push
pop
inc
int3
test
fimul
dec
retf
jmp
stos
rol
cwde
std
pop
mov
aad
jecxz
sub
test
je
add
sbb
dec
inc
mov
cwde
imul
mov
call
mov
std
pop
mov
mov
dec
repz
out
or
push
in
inc
pop
add
xor
movs
mov
sbb
cmp
add
xchg
sar
mov
inc
(bad)
das
add
push
lods
cli
push
pop
add
jmp
inc
fadd
pop
pusha
inc
or
outs
popf
adc
push
inc
sbb
dec
mov
push
mov
cmp
dec
push
ret
cs
(bad)
pop
or
ss
sub
in
and
or
(bad)
(bad)
sbb
imul
jg
mov
out
add
cdq
or
cld
jg
not
pop
mov
and
sbb
mov
pop
dec
int3
inc
fiadd
enter
mov
pop
or
dec
push
mov
xchg
inc
out
cdq
and
jae
adc
jg
sub
(bad)
mov
pusha
jmp
jnp
dec
out
xchg
ret
sub
jae
(bad)
cs
cmp
cmp
mov
xlat
call
add
mov
jmp
xor
ins
jmp
pusha
inc
cmp
add
pusha
xor
fisub
pop
daa
mov
lahf
add
mov
out
aas
je
pop
fild
jl
push
or
and
mov
jecxz
cmp
or
cmp
(bad)
ret
add
inc
add
sub
scas
add
or
ret
in
cmovno
pop
adc
hlt
cwde
ret
(bad)
push
lahf
mov
test
and
fidivr
scas
xchg
cmp
fcomp
aad
(bad)
imul
mov
jb
mov
push
or
ss
or
pushf
xor
fs
hlt
jmp
pop
xor
jb
add
(bad)
xchg
in
es
mov
(bad)
loopne
cmp
addr16
call
sub
push
outs
(bad)
pop
ror
pop
out
jge
add
add
mov
inc
dec
add
fwait
cwde
push
div
push
lds
out
push
lahf
mov
fidiv
inc
mov
cvtpi2ps
inc
jmp
mov
das
js
pop
(bad)
scas
mov
mov
cmp
out
mov
and
push
jecxz
(bad)
inc
inc
push
(bad)
dec
mov
add
(bad)
mov
pop
push
push
in
adc
popf
add
out
xor
xor
push
add
push
(bad)
mov
inc
call
mov
psubusw
imul
imul
sub
ror
push
add
(bad)
and
jmp
pop
test
pop
pop
inc
(bad)
mov
in
inc
pop
(bad)
ins
xchg
stos
es
pop
add
into
pop
mov
mov
fs
test
mov
and
mov
fdiv
les
aaa
or
adc
out
push
fstp
sti
loope
fcom
add
repz
mov
or
jmp
or
aas
xor
adc
mov
out
gs
push
cmps
add
mov
sub
push
pusha
repz
push
pusha
pop
je
mov
inc
add
pop
mov
or
mov
loope
pop
lods
(bad)
inc
aam
mov
(bad)
and
out
inc
rol
sar
scas
out
cld
fld
movsx
dec
(bad)
sahf
jg
push
adc
jl
push
mov
jl
test
jg
stos
(bad)
mov
mov
or
and
mov
std
rol
adc
movs
jo
add
loopne
mov
aaa
aas
das
cmp
pop
dec
add
adc
fistp
test
shr
push
bound
sbb
retf
out
mov
mov
and
pop
adc
(bad)
outs
jp
ds
inc
inc
out
icebp
pusha
and
pop
sub
xchg
test
test
xor
sub
mov
add
inc
mov
sub
add
xor
std
inc
sbb
inc
aas
loopne
add
pop
dec
(bad)
xor
pop
arpl
add
xlat
aad
mov
dec
fcom
add
dec
sar
mov
out
(bad)
fwait
hlt
outs
xor
mov
push
mov
mov
je
mov
aaa
fs
push
add
enter
cmps
xor
mov
pop
xor
call
out
shl
inc
cmp
sbb
mov
xchg
mov
pop
(bad)
sbb
into
enter
xchg
ret
test
inc
jecxz
cld
data16
mov
xor
pop
mov
dec
pop
dec
sbb
add
stos
add
icebp
outs
fimul
inc
adc
and
mov
pop
aam
(bad)
pop
pop
pop
inc
mov
sub
and
je
inc
sahf
cld
jno
dec
aas
out
inc
les
pop
out
fnstcw
sub
addr16
data16
aas
ret
cmp
cmove
mov
sub
mov
inc
out
fild
mov
mov
js
sbb
inc
jg
ret
mov
mov
out
aas
mov
imul
inc
stos
mov
enter
mov
sbb
retf
pop
inc
pop
jmp
outs
call
push
es
push
add
dec
unpcklps
shl
and
loop
fcomp
mov
adc
cmps
imul
inc
dec
inc
or
fwait
aad
push
mov
cmp
mov
pop
(bad)
out
mov
repnz
(bad)
cli
ss
cmp
push
fld
out
adc
sbb
or
jl
test
mov
mov
or
(bad)
jg
cld
mov
add
test
mov
jmp
clc
(bad)
arpl
out
jae
xor
ret
xor
test
sbb
gs
(bad)
xor
adc
push
sub
mov
cmp
out
xchg
add
mov
test
test
or
push
ret
aas
adc
adc
int
scas
inc
jbe
lock
aam
add
std
(bad)
pop
add
mov
(bad)
lahf
push
cld
(bad)
sahf
nop
dec
cmps
in
(bad)
xchg
test
jae
jnp
mov
(bad)
aad
cmp
ror
ret
pop
jle
mov
xchg
cmp
dec
xor
(bad)
mov
out
xlat
add
(bad)
je
les
add
stc
mov
mov
aaa
mov
cmps
add
addr16
mov
xchg
pop
push
xor
mov
aas
pop
call
jl
pop
ret
ja
aas
mov
sub
pop
mov
scas
add
ja
ja
and
and
cmp
mov
inc
scas
pop
loopne
outs
or
mov
xchg
mov
je
fdivr
adc
pop
mov
add
outs
or
add
cmp
sar
mov
stos
dec
pop
push
clc
emms
(bad)
(bad)
xlat
xchg
pop
rol
dec
push
aam
(bad)
mov
push
nop
add
mov
std
inc
mov
xlat
inc
pop
pushf
das
jae
inc
inc
movs
pusha
fisttp
call
push
outs
add
jge
push
add
fist
imul
add
out
cwde
ret
or
lds
mov
push
ins
mov
out
or
or
mov
(bad)
mov
push
mov
jl
dec
loop
stos
into
movs
lods
inc
add
add
outs
adc
ins
enter
push
cmp
cld
sti
clc
inc
outs
xchg
add
div
loopne
add
fimul
je
mov
aaa
add
dec
mov
imul
jae
lods
rol
(bad)
test
test
js
retf
stos
arpl
push
outs
pop
fisubr
rol
push
pop
(bad)
es
inc
mov
stos
mov
pop
ret
loope
jge
and
aam
inc
pop
xlat
and
mov
or
out
(bad)
dec
sahf
js
(bad)
push
xor
sub
mov
call
or
gs
or
jp
mov
push
dec
push
pop
push
in
je
test
mov
out
add
push
cld
test
lds
call
adc
rol
add
icebp
es
xor
inc
test
and
add
add
stos
movs
idiv
inc
ficom
adc
jle
iret
and
out
xchg
xor
sbb
inc
push
push
or
dec
jl
jo
nop
ins
(bad)
imul
mov
ja
push
pusha
sti
out
mov
mov
pop
mov
dec
adc
sbb
(bad)
outs
jmp
arpl
test
push
inc
push
fcmovnb
inc
pop
push
add
dec
push
dec
adc
out
ja
inc
xchg
adc
jne
movs
xchg
sahf
mov
add
fst
sahf
cmp
fld
xor
pop
pop
xor
or
out
push
xor
jno
xor
add
fwait
sbb
jmp
dec
push
add
jo
call
cmp
xchg
out
mov
inc
dec
push
mov
mov
inc
fiadd
cli
dec
cld
scas
scas
mov
cmp
mov
call
pop
idiv
outs
xchg
add
pop
and
repz
cmc
mov
mov
jo
jb
(bad)
xchg
pop
pop
outs
arpl
loopne
ja
dec
pop
sbb
jp
jae
inc
inc
mov
mov
cmc
sti
stos
or
hlt
push
xor
or
repz
clc
adc
mov
xchg
add
(bad)
adc
mov
push
mov
xchg
clc
bound
inc
outs
inc
inc
push
(bad)
sub
jmp
ror
inc
scas
inc
add
into
mov
out
cs
test
je
out
add
fidivr
push
jae
pop
jae
movs
mov
pop
mov
mov
dec
aas
mov
dec
push
loope
gs
sbb
or
ins
xor
push
xlat
imul
stos
mov
mov
fdivr
rcr
jle
loop
(bad)
xor
sub
inc
mov
add
out
shl
mov
cli
and
pop
inc
push
arpl
call
(bad)
mov
addr16
je
(bad)
bound
gs
mov
add
xchg
cwde
or
jl
arpl
add
sub
sti
lds
adc
mov
add
push
out
mov
mov
or
jb
mov
loope
add
ret
cld
outs
dec
add
xchg
dec
dec
sbb
(bad)
arpl
inc
shl
add
mov
(bad)
adc
inc
push
pop
xor
jno
cmp
fbstp
call
enter
sar
ins
dec
dec
xchg
aas
xchg
(bad)
jg
out
in
or
xchg
xor
pop
inc
test
lea
movntps
sub
dec
cwde
sbb
stos
sub
pop
test
(bad)
dec
add
push
pop
(bad)
jno
adc
mov
loop
fs
mov
add
push
aad
add
jg
jo
sub
aas
out
jmp
(bad)
adc
push
sbb
sub
out
cli
sub
and
es
cmp
call
test
add
pop
push
ret
jg
inc
mov
inc
mov
out
sub
jl
or
inc
test
mov
jl
mov
add
mov
add
ja
ja
adc
jmp
push
mov
pop
adc
jg
xchg
dec
mov
ret
pop
sti
imul
xchg
mov
ss
lea
add
je
out
data16
iret
or
xor
(bad)
mov
inc
mov
sub
or
das
dec
(bad)
lods
and
push
xor
(bad)
sti
push
popf
pop
lds
cmc
hlt
rcr
lods
push
mov
sti
add
out
push
cmp
inc
sbb
pusha
jnp
mov
mov
adc
sub
rol
and
mov
adc
mov
repz
retf
jnp
inc
push
push
je
cdq
inc
push
jecxz
inc
inc
out
push
fisttp
mov
sbb
aas
es
xchg
dec
dec
ret
std
(bad)
jmp
jb
push
je
push
fmul
ret
pusha
(bad)
outs
arpl
inc
mov
or
sub
add
or
inc
je
push
adc
cld
and
adc
pop
outs
pop
push
ret
mov
por
xlat
out
arpl
push
aas
outs
lock
xor
jae
fistp
add
sti
out
push
add
lock
and
jecxz
push
pop
daa
lods
xlat
xchg
in
xor
xor
outs
leave
fs
adc
push
inc
pop
ins
(bad)
rcl
push
sub
push
jmp
in
aas
inc
or
or
aam
mov
mov
xor
push
les
xchg
call
and
es
xchg
add
jae
mov
push
jmp
mov
shr
cmp
pop
cld
sub
dec
push
adc
inc
(bad)
daa
ins
pop
test
ret
fdiv
inc
add
xchg
cld
mov
inc
pop
add
push
push
pop
ret
(bad)
fist
dec
sahf
mov
push
pushf
mov
lock
mov
ror
int
repz
add
out
mov
(bad)
jg
pusha
ss
je
pop
pop
add
rcl
std
push
or
inc
mov
fnstenv
dec
es
mov
cmp
xor
mov
(bad)
sub
cmp
or
loopne
(bad)
pop
mov
pop
cld
cmc
ficomp
or
je
outs
add
adc
xchg
(bad)
retf
pop
adc
mov
sub
push
aas
cmp
pop
pop
add
lock
jno
mov
test
sti
arpl
rol
(bad)
add
push
cmp
ror
jecxz
jno
fbstp
test
lds
test
sahf
hlt
inc
push
pop
frstor
jbe
add
stc
jae
jg
sbb
sbb
sti
inc
add
call
dec
mov
pop
pop
inc
xor
xor
cld
std
mov
leave
add
mul
scas
and
mov
jg
inc
cli
inc
push
push
mov
jl
cmp
cmp
add
and
fwait
add
pop
jmp
sbb
inc
cld
jecxz
and
fwait
cmp
add
rol
inc
fild
jmp
xor
outs
pop
int
pminsw
das
mov
std
add
inc
dec
push
fs
mov
inc
mov
(bad)
fiadd
inc
aad
(bad)
(bad)
(bad)
loopne
adc
mov
test
loopne
or
pop
push
mov
jmp
pop
and
ret
adc
fwait
push
jg
jmp
bound
or
cmp
outs
push
xor
in
sar
in
push
nop
cmovl
fs
movs
xor
inc
and
or
sub
mov
mov
in
clc
jg
aas
mov
movs
adc
push
pop
adc
adc
movs
push
sti
shr
ss
add
clc
adc
or
call
adc
outs
push
inc
lock
gs
mov
jmp
inc
jecxz
pop
ret
adc
in
ror
inc
loopne
aad
out
pusha
call
jnp
pop
test
iret
or
jg
push
inc
loopne
lock
inc
ds
sub
scas
mov
sbb
adc
cli
jl
adc
sbb
ret
mov
jae
add
jecxz
enter
bound
jp
popf
jb
and
mov
mov
je
add
shl
out
fbld
adc
pop
mov
lahf
mov
inc
cmp
xchg
fiadd
inc
sbb
hlt
jmp
push
cmp
push
(bad)
rol
fdiv
mov
mov
jnp
pop
add
repz
std
add
add
cmps
aas
jg
inc
adc
push
div
inc
dec
xchg
push
dec
inc
dec
pusha
jp
cmp
stos
inc
inc
or
ins
inc
repnz
jp
ror
jg
mov
out
sbb
mov
fisub
into
inc
and
pop
pop
sbb
pop
nop
sar
mov
es
aad
stos
je
add
(bad)
cli
cld
cmp
out
in
pop
pop
add
pop
out
or
leave
inc
cld
push
repz
mov
xchg
bound
out
xor
js
idiv
jae
mov
std
add
or
mov
xor
cmc
fwait
fs
stos
out
or
add
xor
adc
ret
push
pop
(bad)
sub
dec
test
mov
mov
add
inc
mov
repz
and
jmp
xor
add
mov
mov
or
mov
ret
retf
mov
pop
add
mov
inc
data16
test
adc
pop
cld
jp
int
cmp
jno
mov
movs
pop
fistp
or
mov
or
and
int
inc
rol
call
inc
xlat
cld
xor
aaa
rol
mov
sub
mov
out
jbe
mov
xchg
dec
inc
mov
xchg
sub
sbb
xchg
inc
xor
pop
adc
pop
ds
mov
aas
or
pop
push
mov
jge
push
sbb
or
jae
psubsb
jmp
jmp
mov
(bad)
call
ret
mov
lock
adc
outs
fs
jae
cmp
outs
aaa
push
ret
inc
dec
push
adc
ror
imul
dec
cmp
push
jg
mov
mov
cmp
inc
inc
call
leave
rcl
pop
adc
xor
mov
add
(bad)
push
jp
inc
repz
bnd
adc
sub
xchg
sub
retf
lods
das
jp
dec
jne
retf
pop
and
arpl
inc
or
out
(bad)
mov
push
jbe
push
jae
pop
dec
xchg
push
out
mov
inc
jmp
adc
mov
rcl
mov
mov
inc
add
out
lock
fwait
and
jbe
outs
inc
mov
std
out
sbb
mov
push
sbb
sub
mov
pop
lock
popa
scas
mov
cmp
outs
out
jl
xchg
dec
inc
mov
cmp
sub
cld
(bad)
je
ret
add
lahf
jae
mov
(bad)
mov
dec
adc
loop
mov
mov
mov
or
aas
cmp
jmp
mov
iret
push
je
pop
mov
mov
mov
push
xor
ret
or
jle
pop
push
ret
push
jmp
push
std
clc
cmp
and
retf
out
call
push
imul
xor
aad
mov
mov
jg
js
pop
cmp
mov
rcl
push
loop
pop
sub
mov
or
fiadd
out
push
cs
jl
jg
bound
mov
mov
push
test
inc
pop
xor
dec
cs
fcomp
xlat
push
add
sti
jmp
jo
int3
test
std
xor
mov
ret
out
loope
pop
pop
mov
sti
add
cmp
cdq
test
cmp
dec
mov
mov
mov
mov
test
mov
xor
inc
shl
pop
mov
fistp
popf
adc
jae
sub
mov
cmp
je
jbe
je
push
ss
xchg
pop
mov
rdmsr
fwait
je
mov
mov
(bad)
ins
inc
mov
mov
fwait
mov
fisttp
add
inc
mov
std
xlat
inc
push
arpl
cmc
sbb
sub
clc
pop
add
(bad)
(bad)
jg
or
(bad)
or
push
push
inc
pop
add
pop
push
aas
mov
jecxz
push
pop
pop
jo
imul
aam
jo
or
fistp
test
add
pusha
cmp
pop
inc
push
in
repnz
arpl
push
cld
mov
cld
enter
div
mov
shr
push
fiadd
js
inc
call
mov
pop
add
or
inc
pop
and
(bad)
rol
out
pop
bound
mov
and
ret
aas
scas
clc
add
mov
sbb
sti
std
dec
or
jmp
sub
pop
scas
out
xchg
jmp
push
int3
lock
mov
dec
jecxz
inc
inc
sti
hlt
(bad)
pushf
mov
aad
repz
add
out
cmp
add
pop
jnp
xor
cmp
push
not
cmp
les
cmp
dec
std
add
repnz
outs
push
lock
push
pop
aaa
mov
ficom
xchg
add
outs
inc
dec
in
xor
and
or
add
lods
mov
add
push
push
xor
dec
bound
pop
cdq
jecxz
(bad)
or
dec
sbb
pop
jo
(bad)
ins
inc
shl
pop
mov
pop
inc
lds
out
mov
je
pop
jmp
je
inc
mov
or
or
loopne
ds
add
mov
push
mov
repz
mov
dec
mov
aaa
adc
push
sti
and
and
and
adc
nop
and
ins
arpl
(bad)
inc
test
pushf
mov
pop
imul
mov
call
shl
sub
pop
xor
pop
ins
push
jge
and
inc
repnz
push
mov
test
mov
sub
cld
ja
(bad)
std
sbb
rcl
in
mov
jmp
not
loopne
sbb
sti
pusha
cmp
xor
xor
adc
mov
iret
jb
sub
jp
dec
push
add
cmp
int3
sub
lock
fbstp
ret
dec
clc
push
aas
add
(bad)
pop
clc
mov
call
dec
je
ins
mov
add
mov
push
call
and
sbb
push
std
mov
outs
pop
(bad)
sti
dec
sbb
mov
(bad)
call
or
mov
adc
pop
ja
and
cld
ins
adc
mov
mov
inc
sbb
cmps
push
sbb
enter
es
xchg
fcomip
out
push
dec
mov
dec
std
adc
mov
cmc
ret
or
ja
fwait
push
into
aam
outs
jmp
push
dec
movlps
test
in
loop
lahf
bound
adc
sbb
and
inc
loopne
dec
or
sub
inc
push
cmp
pop
xor
xchg
cmc
pop
pop
(bad)
shl
and
mov
ret
imul
mov
ds
call
(bad)
mov
sbb
mov
jno
in
push
mov
icebp
mov
lds
stc
push
push
ret
lds
test
xabort
cli
mov
pop
mov
mov
dec
std
std
out
test
mov
mov
add
das
(bad)
pop
cld
fld
or
mov
cmp
test
outs
add
es
and
in
leave
(bad)
mov
push
in
xchg
fisttp
(bad)
sbb
clc
lahf
jae
push
jmp
sti
jmp
mov
ret
cmp
addr16
xchg
adc
push
inc
inc
sti
sti
dec
clc
add
xchg
dec
ret
mov
cli
iret
jle
rol
or
cld
call
add
cmp
shl
or
inc
pop
and
test
adc
ror
aas
cmp
xor
fmul
mov
sbb
fisub
adc
sti
cmps
rcr
or
pop
(bad)
fisttp
mov
dec
scas
stc
mov
mov
push
ja
stos
inc
mov
mov
and
mov
adc
mov
xlat
out
test
(bad)
ja
(bad)
mov
pop
scas
mov
and
pop
mov
pop
push
enter
cld
aaa
add
push
pop
pop
dec
mov
push
sub
or
jg
test
sub
aas
mov
in
ins
xor
adc
pop
call
add
jno
pusha
test
sbb
jge
stos
shr
jl
inc
aas
out
loope
ret
add
mov
push
dec
inc
cmp
sub
fiadd
adc
sub
xor
imul
mov
add
inc
(bad)
and
inc
mov
lods
inc
adc
xchg
js
add
lock
clc
inc
enter
arpl
fild
stos
jmp
or
dec
jg
adc
call
pusha
rol
not
push
jge
fdiv
add
inc
xchg
pop
xlat
mov
jo
and
not
xor
jmp
shl
mov
sbb
add
(bad)
das
mov
dec
icebp
mov
das
pop
cmps
add
push
aaa
xchg
add
retf
mov
push
sbb
(bad)
call
jg
data16
inc
ror
jo
jl
into
cmp
icebp
bound
xchg
mov
stos
and
out
ficomp
xor
jmp
fs
out
aas
(bad)
push
imul
jl
pop
icebp
popf
sub
push
fxch
jl
adc
mov
ins
xor
adc
push
dec
dec
out
jae
jg
ret
sti
inc
fmul
scas
mov
loope
mov
jp
loope
outs
pop
dec
inc
add
adc
mov
aaa
cld
in
fisttp
add
mov
push
pop
adc
jmp
jmp
pop
das
mov
push
inc
ins
jns
icebp
gs
(bad)
mov
or
push
call
(bad)
xchg
jg
jne
jle
scas
sbb
mov
jecxz
or
sbb
(bad)
mov
outs
jl
aaa
sub
xor
inc
sub
xor
pop
push
test
push
jecxz
sbb
xor
sub
std
leave
(bad)
pusha
mov
mov
aas
pop
mov
jmp
sar
out
je
mov
pop
xor
jmp
sub
pop
loop
shr
pop
pop
mov
add
pusha
jne
jg
xchg
mov
inc
and
pusha
sub
pop
jp
push
jl
inc
pop
mov
adc
sub
mov
cmps
(bad)
jmp
inc
sub
add
loope
inc
retf
mov
repnz
pop
retf
int3
out
lods
inc
js
mov
mov
(bad)
cmp
sub
push
pop
jae
sub
push
(bad)
jnp
adc
mov
add
jmp
(bad)
mov
call
and
in
nop
ret
add
ret
enter
push
rol
xchg
rcr
mov
mov
jno
add
(bad)
jmp
inc
mov
aaa
adc
hlt
(bad)
std
ret
xlat
pop
pop
cmps
ret
clc
(bad)
jmp
xlat
xor
pop
adc
add
aas
push
lea
adc
dec
fisubr
add
ss
(bad)
sub
js
repz
dec
test
mov
(bad)
outs
push
dec
out
or
call
pop
xor
push
jbe
cmp
repz
(bad)
cmp
mov
add
int3
push
call
xor
popa
add
push
ret
sbb
icebp
leave
test
inc
repnz
mov
cmp
add
outs
inc
mov
jo
xchg
cmove
push
push
or
lock
dec
jmp
or
call
out
pusha
pop
ret
fidivr
call
out
das
jb
ja
sar
jl
xor
pop
jmp
pop
das
cmps
fiadd
leave
add
mov
shr
sbb
adc
pop
adc
sbb
jnp
mov
inc
outs
cld
dec
pop
ret
mov
push
mov
call
sub
or
scas
pop
shl
and
dec
mov
inc
push
mov
sub
jae
sar
test
(bad)
push
mov
mov
add
scas
xlat
pop
(bad)
or
and
dec
pop
cmp
stos
xor
jg
ret
add
inc
mov
sbb
rol
jno
pop
xor
or
shr
das
adc
pop
inc
dec
xchg
add
mov
jmp
mov
int
inc
ins
xor
pop
xchg
add
stos
popf
and
inc
push
push
add
add
mov
jmp
clc
inc
addr16
xor
cwde
test
jg
or
mov
out
pop
xlat
jg
adc
push
or
or
sti
mov
addr16
scas
lods
jp
adc
xor
psadbw
jg
inc
sub
call
pop
mov
sti
jg
loopne
mov
lds
sbb
push
add
push
stc
add
out
sbb
push
pop
jnp
aas
aam
push
pop
movs
xchg
jmp
add
cld
push
fsub
push
mov
add
jmp
(bad)
imul
arpl
inc
add
jmp
adc
xchg
sub
inc
mov
jl
out
cli
aas
loop
mov
push
add
std
nop
jmp
cs
out
inc
test
dec
sti
push
jg
pop
xchg
dec
in
mov
mov
cmp
rcl
(bad)
fild
xchg
sub
push
shl
sbb
(bad)
pop
fidiv
mov
(bad)
cmp
cmps
add
(bad)
(bad)
adc
ins
out
imul
or
je
stos
dec
cmp
adc
dec
mov
inc
push
lds
rol
out
rol
nop
mov
aaa
add
inc
sub
add
mov
fist
sub
and
push
mov
or
xor
xchg
mov
jae
fmul
call
jae
inc
sub
or
push
push
mov
ss
push
inc
inc
pop
fcomp
pop
jg
sahf
push
jmp
fidiv
call
pop
inc
mov
std
das
xor
add
jge
scas
mov
pop
aaa
ret
mov
cmp
pop
cs
lods
inc
xor
je
jg
mov
add
call
popa
mov
retf
pop
mov
push
mov
or
(bad)
not
jne
dec
xor
inc
mov
loopne
ret
xor
out
lds
mov
push
cmp
fwait
out
pop
cld
push
mov
xor
test
dec
inc
pcmpgtb
cmp
fdiv
sbb
mov
sbb
xlat
aas
imul
xor
push
add
mov
or
push
(bad)
cli
and
xor
xor
pop
jmp
inc
sub
pop
shl
and
out
jae
xor
or
pop
push
mov
call
pop
jmp
or
add
outs
dec
add
mov
fwait
test
imul
out
sbb
cs
push
pop
aas
and
mov
push
es
ret
gs
(bad)
jnp
or
or
addr16
inc
mov
jle
or
push
mov
lahf
ja
mov
push
jmp
inc
jno
xlat
adc
or
mov
(bad)
call
lock
je
ss
scas
repz
dec
push
shl
rol
dec
push
cli
jp
adc
jg
sar
loop
paddq
mov
lods
adc
out
dec
outs
mov
push
cwde
dec
and
sub
into
test
out
mov
(bad)
and
push
jno
mov
inc
cs
push
mov
cmp
add
pop
cmp
jl
call
pop
xlat
inc
syscall
sti
push
movs
sub
(bad)
jno
das
fwait
push
pop
and
call
ja
mov
or
ins
outs
(bad)
add
cmps
jg
clc
ins
retf
lods
mov
fdivp
neg
add
xlat
out
sub
push
ins
mov
cs
cmps
mov
mov
cmpps
cli
xor
bound
das
mov
out
clc
push
movntq
jmp
scas
pop
psubq
sti
gs
sti
xor
mov
das
repz
(bad)
mov
ret
push
mov
or
and
sub
jg
test
xor
stos
cmps
add
data16
aas
mov
adc
mov
inc
out
mov
scas
es
mov
cli
inc
in
(bad)
test
mov
(bad)
jle
(bad)
aam
push
enter
hlt
leave
cmp
dec
std
mov
cmp
neg
inc
push
clc
adc
add
repnz
adc
jae
outs
xor
push
inc
das
jae
sub
std
and
cmc
fild
or
out
inc
jg
sub
iret
pop
inc
lfs
xchg
in
mov
push
inc
mov
test
pop
and
mov
inc
mov
and
test
inc
inc
dec
cli
es
pop
jne
mov
adc
mov
out
out
pop
mov
mov
into
pop
dec
jecxz
sar
dec
std
in
jecxz
mov
fs
sti
jg
mov
or
xlat
(bad)
fild
aas
mul
pop
cld
inc
xchg
inc
out
test
push
jae
push
push
dec
inc
jno
mov
iret
fidiv
sub
jecxz
or
pop
mov
pop
pop
dec
mov
push
push
test
aas
out
mov
push
lahf
stos
test
push
sbb
scas
mov
pop
cmp
std
mov
pop
addr16
sub
inc
gs
(bad)
fst
sar
out
test
mul
push
test
inc
push
or
shl
push
movs
out
fcmovb
inc
or
mov
sti
xor
and
mov
retf
jmp
lods
jle
pop
dec
mov
les
or
std
push
sar
and
not
mov
fild
fs
pop
aas
rcr
shl
xchg
push
sub
ds
mov
retf
push
mov
rol
add
cmps
push
push
sbb
loope
push
inc
dec
test
lock
ret
fisubr
mov
imul
and
inc
aas
shr
(bad)
paddd
push
or
shl
arpl
movs
push
cld
aas
pop
push
add
jmp
(bad)
push
mov
lahf
std
aas
cmc
or
js
dec
or
push
or
sub
push
inc
push
sbb
or
sbb
or
inc
je
mov
(bad)
fiadd
test
arpl
xor
pop
inc
push
add
add
mov
or
mov
dec
cmp
loope
clc
mov
jb
pushf
push
inc
xor
mov
xor
xlat
imul
cmp
jo
mov
mov
dec
xor
push
out
push
leave
cmps
inc
push
test
enter
lock
in
bnd
push
(bad)
fiadd
xchg
mov
or
add
idiv
push
dec
jg
daa
(bad)
adc
inc
mov
mov
cmp
push
dec
mov
mov
cwde
inc
mov
sar
xor
not
pop
pop
ins
push
(bad)
jle
sti
(bad)
cmp
sar
lods
ret
mov
jae
dec
inc
(bad)
sbb
jg
inc
jmp
or
pop
fiadd
jmp
fstp
hlt
std
in
jae
punpckldq
push
and
sbb
sub
pop
imul
cli
dec
out
aaa
mov
add
std
pop
cs
(bad)
inc
pop
out
pop
out
add
sbb
cdq
push
pusha
and
cmp
inc
call
loop
je
es
enter
push
rol
mov
push
mov
and
fucomp
vaddsd
pop
pusha
dec
xchg
adc
and
aam
push
es
loop
mov
std
or
out
cld
cmps
or
in
mov
dec
std
push
push
adc
pop
scas
pop
(bad)
jmp
cmp
inc
dec
sbb
scas
mov
pop
mov
jg
sti
int
mov
push
pop
add
cmp
sar
sub
cmp
or
mov
xchg
sub
push
pop
add
iret
pop
in
pop
inc
dec
fiadd
mov
sub
aas
cmp
adc
pusha
mov
xor
aam
scas
shr
lea
loopne
jmp
pop
adc
or
addr16
inc
mov
inc
mov
addr16
inc
sub
xchg
mov
cmp
push
jmp
jo
ins
cmp
add
inc
cld
inc
out
sti
xor
dec
jg
fimul
fwait
mov
xchg
psllw
pop
(bad)
(bad)
jns
jge
push
aaa
std
dec
inc
idiv
add
out
inc
mov
clc
in
ins
jmp
fadd
push
mov
fdivr
mov
pushf
push
fs
jmp
and
int3
ror
jmp
mov
rcl
test
jl
imul
adc
pop
rcl
sub
dec
loop
popa
aas
sbb
arpl
out
sub
cmp
retf
cmp
push
movs
sub
lods
mov
mov
nop
push
or
sar
in
sub
push
cld
(bad)
and
and
das
fimul
cmp
cmp
pop
or
loopne
cmp
fcmove
and
push
sub
dec
(bad)
aas
add
hlt
imul
push
out
push
push
mov
fcmovnbe
addr16
jae
rcl
push
inc
je
push
and
and
adc
mov
cld
jbe
in
or
mov
jl
xchg
mov
lds
outs
pop
push
push
adc
push
or
pop
fdivr
inc
out
inc
or
inc
out
fs
xchg
fmul
xor
(bad)
cmp
push
cdq
mov
jmp
or
mov
data16
imul
sub
gs
out
xor
fadd
pop
add
mov
mov
cmp
or
inc
std
push
lods
clc
jmp
or
shl
mov
aad
cmovnp
(bad)
pop
fadd
xlat
lds
xchg
loop
lock
jp
lahf
xor
pop
mov
sub
outs
cld
fcom
push
sti
sub
lock
jmp
popa
je
fnsave
je
inc
push
mov
sub
sub
pop
inc
inc
std
pop
ret
loop
sti
scas
adc
add
sub
rol
mov
(bad)
mov
push
mov
stos
or
xor
les
xor
je
mov
dec
jno
ret
add
data16
pop
jecxz
ins
fisttp
xchg
outs
mov
jl
pop
mov
aam
mov
jmp
jo
and
jno
inc
in
mov
pusha
inc
mov
sbb
sub
sub
jl
adc
stos
nop
outs
(bad)
jb
mov
xor
(bad)
sbb
add
and
or
lods
in
dec
or
push
push
dec
xor
and
cmp
push
mov
call
inc
jb
inc
adc
add
in
jg
push
fadd
sbb
out
mov
(bad)
jno
add
popf
xor
push
lock
jl
test
outs
sub
addr16
into
adc
cli
and
sti
pop
dec
xor
dec
je
inc
test
and
sar
call
add
mov
jb
mov
or
dec
dec
push
pop
xor
in
inc
loop
dec
sub
test
jnp
pop
data16
mov
sub
outs
arpl
add
sbb
mov
repz
inc
jl
jecxz
test
mov
dec
pop
jnp
in
xchg
push
inc
adc
push
jl
fcom
fidiv
jns
aad
pop
pop
push
iret
stos
lds
push
push
mov
mov
push
or
hlt
inc
stos
in
ins
add
imul
or
inc
ja
outs
rcl
add
dec
fwait
add
sub
iret
movs
sub
push
loopne
icebp
lds
add
mov
inc
out
les
ret
ret
xor
add
adc
(bad)
sub
xlat
xchg
xor
ret
add
and
mov
fwait
add
gs
outs
in
mov
js
retf
js
push
scas
mov
mov
cmc
rcr
adc
jmp
arpl
mov
sub
adc
mov
dec
pop
cmc
sti
add
adc
cmps
inc
xor
adc
fisub
mov
push
sti
jno
(bad)
jnp
adc
and
or
push
fsub
(bad)
cmp
xchg
or
push
js
xor
jb
mov
inc
ins
push
call
sti
mov
sub
int3
or
addr16
mov
test
lds
pop
ret
add
ror
mov
or
stos
push
cmc
push
inc
cmps
in
mov
dec
and
adc
test
jae
cs
rcr
push
mov
sub
pop
test
add
jb
jg
(bad)
(bad)
aaa
cmp
daa
inc
cld
call
test
inc
sbb
call
cmp
dec
fs
add
loopne
or
out
or
jmp
fild
mov
xchg
(bad)
jmp
cmps
adc
push
cmc
dec
(bad)
mov
xor
in
push
shl
inc
cli
bound
outs
fiadd
ins
out
out
pop
pop
scas
add
push
ret
addr16
inc
ins
adc
test
clc
(bad)
push
ficom
pop
cs
call
sbb
push
dec
push
ror
mov
add
and
mov
aas
mov
sar
add
pop
push
sahf
mov
push
aas
daa
push
xchg
push
fisubr
or
cld
test
mov
mov
cwde
ja
call
stos
add
inc
loop
xlat
mov
gs
paddd
jmp
dec
add
ret
test
or
repz
das
sbb
push
or
dec
sub
inc
mov
outs
div
mov
call
out
cmps
push
adc
repz
pusha
push
sti
sti
aas
and
add
xor
fbld
push
inc
jbe
call
pop
enter
loope
shl
sbb
dec
dec
mov
mov
addr16
pop
and
jne
add
or
out
ret
cmc
pop
mov
mov
pop
dec
cld
lea
imul
add
out
xor
shl
inc
push
mov
adc
ror
mov
clc
pop
cmp
inc
xlat
jmp
jmp
cmp
pop
jge
div
mov
inc
ret
fdivr
push
std
mov
push
mov
(bad)
out
mov
cmp
std
pop
xchg
xor
fidiv
cli
call
dec
fsub
fsub
pop
pop
(bad)
(bad)
movs
aaa
sbb
pop
dec
xchg
(bad)
mov
cli
dec
add
mov
add
(bad)
push
jmp
jmp
pop
mov
ror
mov
hlt
mov
jg
push
xchg
imul
mov
push
add
push
add
jl
iret
bound
mov
inc
push
dec
(bad)
push
je
pop
jb
ret
cmc
cmp
push
add
jge
mov
jmp
mov
push
out
add
cmps
scas
aaa
xor
add
add
inc
sbb
sti
add
dec
lods
lock
stc
push
and
sub
and
sub
inc
aas
and
sbb
loope
sub
xlat
out
imul
rcr
add
sub
test
scas
and
loop
sar
ret
inc
xchg
add
mov
dec
inc
iret
outs
gs
adc
push
(bad)
dec
mov
jae
sbb
dec
enter
dec
call
pmulhuw
push
test
push
cmp
mov
xchg
(bad)
mov
push
pop
push
mov
retf
add
(bad)
mov
mov
pop
add
jp
lock
mov
lds
mov
fcom
int3
out
std
out
sti
dec
adc
jg
jg
sti
or
rol
mov
fdivrp
push
(bad)
repz
push
(bad)
neg
ror
out
aas
int3
mov
das
in
add
cmp
jb
ins
fild
clc
jbe
inc
mov
std
mov
or
pop
or
add
dec
xchg
hlt
das
xor
(bad)
imul
push
cmp
bound
xchg
push
out
cmp
jnp
das
ror
mov
mov
stos
and
(bad)
push
hlt
fs
pusha
mov
push
sbb
add
sbb
cmps
and
jb
cli
dec
pop
push
cmps
(bad)
sbb
add
mov
push
inc
or
test
jae
xor
add
popf
(bad)
fcomip
ret
(bad)
adc
jmp
out
ds
sbb
leave
inc
test
addr16
sahf
sbb
das
std
repz
stos
rol
(bad)
mov
push
inc
and
ja
mov
jno
nop
xlat
js
loopne
and
add
or
xchg
pop
(bad)
dec
push
loopne
mov
cs
jecxz
aam
inc
inc
and
push
lock
push
mov
push
cld
or
or
mov
cld
fild
mov
pop
call
and
mov
cmp
fild
sar
inc
idiv
adc
(bad)
loope
rcr
out
pop
jo
ror
dec
jb
mov
mov
push
adc
mov
js
add
sub
int
push
mov
inc
dec
call
jecxz
aaa
push
jg
cli
mov
shr
add
into
pop
add
cld
fist
pop
pop
cmp
pop
and
jmp
or
jle
cmp
out
les
cld
push
and
mov
add
dec
dec
ror
fist
pop
jmp
ret
dec
jmp
outs
inc
jo
jmp
add
add
pop
push
mov
or
dec
arpl
out
adc
rcr
popf
add
aam
mov
es
mov
inc
or
aam
stos
mov
mov
sub
outs
pop
mov
xor
xchg
pop
inc
cmp
scas
push
add
mov
int
imul
inc
mov
jmp
and
mov
push
inc
add
pop
std
xchg
mov
add
mov
js
push
mov
fbld
(bad)
sar
cmps
mov
movs
aaa
xchg
sbb
push
dec
inc
mov
inc
mov
mov
push
aam
push
psllq
cmp
aaa
mov
cmp
jp
aaa
fnstcw
test
push
sub
lods
movs
jns
ret
inc
and
bound
jae
mov
pop
mov
add
pop
and
or
add
aaa
ins
call
(bad)
xlat
jecxz
pop
sub
xor
aas
out
add
ins
arpl
mov
std
mov
sbb
inc
fadd
shufps
cld
add
sbb
push
jg
mov
xor
fmul
jecxz
cmp
cs
test
movs
xor
add
test
(bad)
clc
mov
or
inc
or
adc
cs
adc
test
push
(bad)
mov
outs
cld
inc
pop
cs
ja
push
ja
or
inc
jno
sbb
aad
ret
jae
sbb
or
push
xlat
push
pop
aam
inc
movs
sub
outs
pop
hlt
dec
xor
mov
mov
fbstp
sub
jmp
inc
push
arpl
fild
mov
dec
out
push
inc
mov
mov
loopne
jmp
cwde
inc
inc
lds
in
xor
or
jmp
lock
add
push
mov
fcomip
add
push
xchg
mov
push
arpl
call
jecxz
(bad)
pop
xor
nop
pop
dec
popa
cmps
out
out
js
cld
pop
jmp
xlat
(bad)
jl
mov
rcr
(bad)
jle
add
sub
inc
je
fistp
inc
jmp
jg
pop
and
mov
out
inc
mov
call
jmp
cmps
add
inc
out
call
push
popa
lods
jl
inc
es
sub
inc
pop
xchg
aad
nop
dec
or
cmp
jmp
add
mov
clc
sbb
hlt
mov
(bad)
add
push
ret
push
aas
retf
push
or
mov
call
sbb
xor
mov
mov
inc
ss
add
out
pop
and
je
retf
aad
in
call
cs
mov
jl
ins
jg
inc
repz
push
inc
add
lock
out
adc
cmp
aam
push
inc
lock
add
jno
stc
gs
dec
inc
aaa
cld
inc
aam
jmp
add
sbb
or
(bad)
mov
xor
push
pop
jmp
mov
jg
push
fs
or
adc
out
pop
retf
inc
or
sub
mov
sub
push
add
out
or
cmp
movs
push
inc
mov
test
cmp
scas
call
or
push
and
dec
jg
add
mov
jp
ret
inc
pop
lock
inc
inc
cmp
mov
inc
inc
aaa
push
mov
call
push
mov
je
lahf
(bad)
pop
mov
push
mov
fidivr
and
xchg
xchg
int
cld
push
call
add
sub
aas
fstp
(bad)
add
aad
add
mov
adc
mov
aas
(bad)
lods
arpl
ror
fnstenv
mov
(bad)
loop
and
call
mov
xor
dec
(bad)
aas
pop
cs
cs
fs
(bad)
mov
aaa
mov
imul
add
je
ret
rol
inc
lds
pop
push
lahf
ficom
fild
xchg
add
pop
cs
jmp
sti
push
pop
jp
dec
push
jo
inc
aas
adc
cs
fimul
mov
mov
pop
lahf
or
pop
fsubr
addr16
xlat
pop
pop
push
jp
out
push
inc
clc
vmread
arpl
pop
arpl
pop
fist
mov
fidiv
pop
add
pop
scas
dec
in
loopne
lds
ret
int
sti
ins
(bad)
push
rcr
fild
inc
mov
add
sar
jnp
lds
scas
mov
pop
cmp
ins
dec
pop
aam
and
xchg
push
(bad)
pop
add
mov
test
sub
inc
je
ficom
(bad)
ja
js
je
movs
(bad)
cmc
inc
jg
sbb
jmp
rol
lods
or
add
and
movs
rol
add
cs
adc
jle
push
cs
imul
or
cli
addr16
movs
loopne
pop
sub
and
ds
sbb
test
sahf
sbb
adc
outs
adc
and
add
mov
icebp
outs
add
ss
and
xor
inc
and
out
(bad)
push
out
fisubr
dec
mov
call
mov
jg
push
pop
(bad)
jae
or
std
out
and
push
push
inc
aaa
loopne
or
(bad)
fild
inc
xor
push
enter
(bad)
xor
popf
push
loope
and
and
sub
lods
sahf
mov
shl
fcom
pop
adc
push
imul
jecxz
inc
add
stos
aas
dec
sahf
mov
add
add
pop
add
sub
call
add
xor
dec
(bad)
mov
ret
ret
pop
ret
sub
repnz
test
inc
mov
sub
add
xor
std
mov
(bad)
std
ins
xchg
dec
out
jp
mov
outs
inc
mov
push
pop
fsub
sub
add
xchg
cmp
dec
test
inc
or
inc
ret
adc
add
mov
jmp
pop
lods
out
fiadd
sbb
stos
int3
(bad)
mov
add
push
add
lahf
xchg
lds
sbb
loopne
jg
ret
jg
mov
jno
and
idiv
call
(bad)
call
push
mov
add
pop
push
or
out
sar
cmp
mov
jae
push
push
fild
cdq
imul
pop
add
dec
cmp
jae
sub
call
das
mov
lds
inc
rcl
adc
aas
dec
push
test
js
add
mov
sti
xor
pop
sub
inc
test
scas
pop
add
inc
test
aad
clc
pop
jecxz
fs
sub
jno
jae
je
inc
push
or
mov
iret
and
out
je
loopne
inc
push
sub
div
pop
aas
add
icebp
lods
loop
je
nop
adc
mov
mov
jmp
shl
(bad)
xlat
inc
aad
cld
cmps
add
push
mov
clc
mov
or
clc
mov
cvtps2pd
jmp
jl
mov
push
pop
mov
ret
adc
mov
jne
sub
jb
sub
pushf
and
and
pop
sti
(bad)
cmp
ret
and
mov
and
jno
inc
leave
xchg
movs
sar
in
jmp
add
pop
xlat
dec
(bad)
jge
mov
mov
(bad)
test
cmovp
ret
sub
push
es
add
clc
add
shl
arpl
int
ins
ret
adc
xchg
mov
mov
mov
jp
aas
cmp
adc
adc
in
push
(bad)
dec
ret
hlt
out
sar
xchg
out
test
jmp
out
push
(bad)
push
mov
adc
push
inc
push
aas
je
pop
and
jo
xchg
call
add
scas
fsub
(bad)
es
in
push
jns
mov
aas
sbb
dec
fadd
(bad)
cmp
aam
fld
test
inc
call
inc
sbb
ror
xchg
jp
test
push
pop
push
or
std
or
push
mov
mov
mov
sbb
data16
or
jge
add
aad
mov
aas
push
push
mov
ja
clc
cmp
ret
push
add
inc
mov
(bad)
pop
jmp
xchg
mov
inc
pop
add
or
(bad)
out
clc
std
ret
pop
inc
test
or
push
add
pushf
out
add
add
shl
mov
inc
push
mov
dec
out
rcr
mov
cmp
pop
push
aas
push
mov
mov
or
std
cmp
cmp
inc
cld
mov
repnz
(bad)
mov
push
pop
push
push
cmc
xchg
rcl
mov
ret
add
loopne
jae
enter
and
outs
out
or
jb
mwaitx
mov
jae
jge
mov
sbb
sti
out
xchg
push
mov
push
jp
sahf
cmps
dec
adc
call
add
or
std
inc
cmp
jmp
push
aaa
out
push
(bad)
(bad)
mov
inc
inc
dec
sbb
mov
(bad)
loopne
or
mov
idiv
cli
sbb
fsub
jg
and
pop
jae
push
or
std
out
fild
pop
ins
mov
outs
and
jg
inc
inc
ret
cmc
je
ja
mov
inc
data16
es
mov
out
mov
mov
sti
iret
(bad)
fmul
out
mov
add
cmp
ret
fidivr
inc
ret
outs
add
push
xchg
call
pop
aas
dec
loop
jae
or
lock
push
sti
push
push
mov
lds
fld
sub
push
cmp
mov
jae
pop
adc
add
in
scas
in
or
jmp
jmp
sar
mov
mov
push
add
je
and
(bad)
(bad)
out
xchg
mov
dec
out
xor
(bad)
push
add
pop
loopne
adc
mov
fimul
push
push
dec
or
aaa
icebp
add
pop
push
mov
mov
add
arpl
adc
mov
inc
sti
jmp
dec
in
arpl
lea
push
(bad)
cmp
or
pop
sbb
aaa
mov
fcomp
push
inc
(bad)
mov
fdivr
loop
(bad)
sti
mov
std
fwait
adc
mov
sub
aaa
test
call
push
pusha
(bad)
mov
cli
add
mov
cmps
icebp
inc
cwde
(bad)
pop
and
inc
mov
inc
stos
push
ror
outs
mov
hlt
xchg
(bad)
push
je
push
adc
push
jecxz
out
(bad)
adc
pop
retf
test
adc
fstp
add
fistp
pop
mov
cvtpi2ps
pushf
dec
test
push
dec
test
ja
or
pop
out
jmp
inc
jmp
loope
ret
cmc
(bad)
(bad)
cli
jae
(bad)
hlt
jno
cli
mov
ficom
xor
test
dec
shr
add
rcr
pop
adc
xor
pop
jle
mov
inc
cli
out
mov
aas
call
or
mov
push
js
int3
shr
add
scas
or
add
mov
mov
xor
push
jne
jmp
repz
mov
cmp
xor
jo
enter
jbe
dec
inc
(bad)
cld
sub
xor
fs
mov
jl
or
push
sbb
pusha
retf
cmp
jg
pop
pop
adc
call
mov
rcr
leave
xor
pop
jl
mov
sub
call
fsubr
add
enter
aas
popf
dec
jmp
or
adc
adc
scas
aad
dec
inc
mov
hlt
push
inc
(bad)
fwait
sbb
push
push
inc
dec
sub
rcl
(bad)
or
adc
pop
pop
pop
dec
and
mov
dec
icebp
add
sbb
ss
sti
call
je
or
(bad)
test
(bad)
cmps
ret
dec
mov
adc
dec
or
fdiv
push
mov
or
aaa
and
add
lds
add
add
add
jnp
xor
je
push
mov
adc
aas
fiadd
call
or
or
inc
ret
inc
fisttp
ret
retf
xchg
dec
data16
add
jg
sbb
inc
jmp
jns
jno
add
xchg
je
mov
jecxz
jmp
jmp
push
adc
inc
adc
clc
fwait
push
inc
stc
(bad)
and
call
mov
xchg
scas
push
jne
data16
imul
mov
out
cmps
lock
mov
nop
inc
jmp
out
and
push
fmul
inc
out
arpl
sti
pop
mov
mov
call
inc
jo
cmp
inc
inc
std
mov
pop
pop
and
(bad)
stc
sti
pop
or
movntq
mov
mul
ror
sub
rcr
sub
jae
push
add
addr16
jnp
jae
push
addr16
mov
std
sti
dec
add
mov
add
sbb
sub
test
jmp
push
and
and
fs
dec
and
icebp
ret
lahf
ret
add
inc
push
wrmsr
push
xor
(bad)
cli
je
cmp
fsubr
loop
ret
mov
jbe
xor
mov
(bad)
add
dec
ret
xor
or
std
inc
xor
ret
ret
pop
and
push
mov
test
mov
dec
in
push
xchg
outs
push
jmp
je
jg
mov
out
ret
je
inc
cli
mov
add
mov
loop
inc
fnstsw
(bad)
and
inc
push
mov
cs
into
pusha
mov
movs
dec
sub
mov
aas
jmp
fs
rcr
mov
xlat
or
mov
jmp
xor
call
sub
add
dec
sar
push
arpl
pusha
lods
mov
add
inc
dec
pop
arpl
daa
and
push
jae
mov
(bad)
mov
xor
xlat
inc
dec
call
pop
jg
jmp
stos
mov
jne
aam
push
mov
inc
push
and
push
aaa
ins
mov
mov
fwait
lea
shl
fwait
stos
daa
jmp
jae
xchg
xchg
pushf
pushf
aas
xchg
mov
outs
mov
sub
push
ret
bound
inc
add
add
push
or
xchg
dec
push
pop
push
fs
adc
adc
stos
push
inc
pusha
ins
int3
fisttp
rol
ret
adc
or
cmp
mov
mov
sbb
inc
push
mov
push
cmp
(bad)
(bad)
sbb
dec
rcl
mov
push
outs
bound
or
pop
sar
dec
push
shr
(bad)
cld
mov
aaa
push
push
inc
sub
add
xor
inc
stos
jle
push
stos
hlt
dec
test
pushf
xchg
sbb
dec
sahf
imul
sti
or
sub
or
or
xchg
pop
jmp
jg
mov
sub
add
mov
or
xor
xor
cld
and
test
mov
dec
js
cs
push
enter
xchg
imul
mov
and
vmovshdup
mov
scas
jno
pop
das
jmp
push
sub
addr16
inc
fnsave
dec
mov
dec
or
test
out
and
mov
pushf
push
mov
clc
loopne
jnp
inc
sar
out
or
sti
push
mov
cmp
mov
test
cmp
push
add
fwait
cld
cmp
jge
mov
fs
iret
inc
xor
dec
push
(bad)
cmp
scas
in
out
daa
sahf
cmp
inc
inc
loopne
mov
sub
push
mov
push
mov
mov
mov
mov
das
mov
in
push
mov
fcmovbe
scas
and
ja
jnp
push
test
and
test
xlat
inc
push
mov
dec
fs
mov
(bad)
jmp
xor
mov
imul
pshufw
mov
xchg
add
push
push
jne
sbb
mov
stos
sbb
fadd
push
bound
loope
in
cld
(bad)
test
mov
arpl
clc
ins
adc
(bad)
cwde
arpl
pop
inc
xor
retf
out
ds
sar
jb
jmp
mov
xchg
pusha
mov
adc
xor
outs
mov
in
cld
jge
daa
dec
fnstenv
mov
ret
mov
(bad)
fsubr
mov
dec
ins
je
adc
jae
jae
es
sbb
jae
mov
mov
inc
mov
lds
or
sti
mov
add
sub
(bad)
fstp
bound
out
inc
pop
or
push
add
push
mov
cmp
adc
jmp
or
pop
rcl
cld
push
test
and
leave
mov
sbb
pop
or
push
ror
(bad)
iret
inc
or
push
push
add
mov
test
push
push
js
call
jmp
aam
dec
and
pop
sbb
inc
xchg
aas
shl
mov
cli
fist
or
or
push
push
jbe
aam
add
std
pop
or
vcmpsd
dec
mov
fdivr
pushw
xor
clc
pop
push
cmc
push
ret
pop
ja
add
cmp
aaa
jmp
cmc
inc
and
cs
outs
(bad)
mov
dec
pop
dec
fisubr
ja
(bad)
repz
xor
and
call
push
cwde
fdivrp
jnp
ins
inc
push
aaa
pop
push
cmp
push
xchg
ret
sub
pop
scas
jnp
add
pop
cmc
add
add
pop
pop
retf
jg
push
cld
mov
shl
add
jmp
adc
mov
add
mov
mov
imul
or
dec
dec
push
js
clc
dec
mov
sti
xor
aas
dec
pusha
aas
and
les
lods
ins
jmp
cld
in
inc
rcr
push
ret
outs
add
mov
outs
data16
and
inc
fild
int
cli
mov
inc
add
pop
dec
aas
or
ret
test
mov
add
call
dec
enter
mov
js
push
inc
add
or
mov
jmp
mov
ins
xor
(bad)
icebp
mov
bound
inc
ins
mov
mov
push
popa
and
data16
mov
push
push
fidivr
mov
(bad)
mov
das
mov
or
jno
push
mov
sti
xchg
arpl
mov
inc
cmp
cmp
push
out
jg
out
adc
xor
imul
add
or
(bad)
jp
pop
out
and
inc
(bad)
retf
push
mov
loopne
pop
aaa
add
pop
andnps
push
pop
leave
add
ret
dec
ins
sar
mov
jno
push
dec
pusha
or
dec
cmp
stc
mov
sbb
ins
jae
inc
ret
cld
or
or
ins
(bad)
cs
aas
jge
clc
mov
push
or
pop
lock
fdiv
(bad)
sbb
add
xlat
sahf
sbb
je
cwde
into
pop
pop
pop
xchg
std
adc
mov
loopne
or
arpl
jae
enter
imul
jb
mov
dec
jecxz
xlat
cld
and
sub
mov
nop
dec
loop
push
dec
mov
add
add
in
call
(bad)
bound
pop
push
add
jmp
inc
test
pop
inc
and
add
mov
or
jo
clc
rol
lods
mov
xor
mov
xor
xchg
cmp
sub
add
dec
rcr
dec
sub
mov
or
pusha
outs
fistp
add
or
jns
lock
add
out
push
sub
repz
jmp
sti
or
retf
cld
pop
out
(bad)
(bad)
aas
mov
inc
loopne
aad
pop
out
mov
test
mov
sbb
add
daa
or
dec
jbe
scas
clc
call
int3
adc
lds
sub
cmps
mov
inc
inc
cli
mov
add
jmp
jge
rol
xor
xchg
aam
pop
pushf
pop
(bad)
ja
es
dec
pop
push
push
push
in
xor
out
jmp
mov
dec
jecxz
adc
sbb
add
or
pop
loope
std
mov
adc
pop
movlps
or
jbe
jo
push
and
pop
jecxz
(bad)
push
jmp
push
xchg
(bad)
out
clc
inc
inc
add
scas
add
push
pop
out
inc
mov
add
inc
inc
sti
out
jb
or
clc
inc
mov
mov
test
sbb
dec
push
adc
pop
push
dec
hlt
jae
(bad)
dec
(bad)
lods
call
or
fld
jbe
hlt
jmp
add
lock
mov
jae
test
push
add
xchg
fld
dec
pop
push
rcr
mov
push
pusha
int3
cmp
xlat
or
sbb
xor
pop
(bad)
test
fs
add
sar
stos
pop
add
ins
mov
adc
lods
jecxz
mov
mov
or
push
sbb
rcl
mov
push
jb
fdivr
pop
cwde
push
mov
push
add
pop
push
adc
aas
push
add
sbb
xor
adc
and
mov
jbe
imul
dec
lea
pusha
imul
mov
xor
pop
pop
dec
inc
xchg
xchg
add
add
push
retf
out
out
test
repnz
xchg
mov
mov
fs
cld
inc
arpl
inc
cld
and
ja
sub
push
pop
sub
and
jmp
inc
mov
and
iret
mov
inc
fdivr
out
fisttp
call
mov
pop
inc
inc
les
add
cld
add
loop
adc
movs
pop
push
aaa
(bad)
or
dec
inc
dec
inc
adc
xchg
add
(bad)
out
xor
mov
(bad)
push
loopne
fld
test
xor
push
test
push
mov
js
imul
jmp
into
ss
pop
or
jmp
mov
das
dec
inc
je
aaa
cwde
or
push
cmps
dec
mov
call
cwde
and
and
cmp
and
fist
push
je
(bad)
inc
dec
lds
mov
jmp
add
shr
jg
clc
add
lds
inc
mov
call
repz
dec
jne
repnz
sar
push
inc
or
aas
xchg
out
rcl
mov
inc
pop
js
jg
xor
mov
aad
ret
ins
and
mov
push
shl
pop
and
sub
dec
and
mov
mov
ror
or
mov
inc
and
mov
inc
jg
add
xor
arpl
sbb
cmp
je
mov
mov
lock
mov
repz
ss
int
mov
test
add
pop
pop
aas
cmc
ds
or
in
mov
lock
(bad)
mov
add
or
jmp
sub
das
cmp
mov
xor
gs
jo
pop
inc
xor
ret
inc
addr16
lds
jb
jmp
cmp
in
test
das
out
add
jp
jg
pop
push
mov
mov
es
mov
pop
sti
jo
fld
inc
xor
rol
jae
adc
pop
je
jl
aam
add
and
sbb
jmp
(bad)
ds
xchg
push
pusha
or
pop
dec
mov
js
pop
pop
(bad)
call
add
aas
call
popa
inc
outs
mov
inc
dec
push
scas
shl
dec
sbb
(bad)
stc
out
ret
js
sbb
lods
imul
sti
stc
xchg
adc
pop
dec
jge
jmp
push
popa
jb
or
je
loop
test
xor
out
dec
pop
cld
out
cld
lds
ret
inc
std
jmp
shl
push
(bad)
mov
dec
in
cmps
dec
or
out
jl
add
ins
add
inc
adc
push
fld
idiv
push
rol
test
pop
aad
(bad)
mov
sub
fcomp
(bad)
and
adc
add
dec
out
out
lds
pop
ret
jp
stos
ret
lahf
or
lds
mov
inc
ret
mov
adc
inc
aad
and
mov
out
idiv
jo
(bad)
(bad)
test
inc
ret
and
in
mov
rol
dec
dec
(bad)
inc
hlt
cmp
sub
push
cmp
adc
mov
push
or
fimul
mov
mov
or
std
data16
sub
add
(bad)
lock
loopne
mov
and
(bad)
test
xor
sub
loope
test
adc
and
inc
pop
into
out
push
adc
je
pop
int3
or
add
outs
sbb
(bad)
mov
inc
inc
cmp
add
ret
ret
push
mov
sbb
pop
mov
mov
mov
test
dec
add
arpl
pop
add
push
out
addr16
not
xchg
fprem
shl
add
sar
outs
push
mov
rcr
mov
fmul
std
cmp
mov
push
xor
adc
outs
(bad)
cld
pop
push
add
stos
sbb
push
push
mov
sar
punpckhdq
mov
cmp
mov
out
jae
ret
fwait
clc
sbb
inc
push
mul
inc
add
movs
push
pop
inc
cld
push
in
add
add
sbb
cld
nop
mov
ss
mov
test
(bad)
push
aam
jmp
cmp
js
fdivr
inc
add
cmp
or
in
or
mov
jmp
(bad)
scas
and
jae
sbb
add
mov
push
aam
mov
xor
dec
imul
pop
and
loopne
shr
(bad)
jp
add
shr
mov
add
xor
out
add
fwait
lods
add
mov
jno
push
mov
out
sbb
inc
inc
sub
push
je
mov
adc
mov
jbe
out
jp
(bad)
je
(bad)
jl
jb
mov
mov
add
icebp
iret
sar
push
je
xchg
inc
jmp
outs
cmp
lds
stc
out
inc
jbe
pop
or
sub
inc
push
je
xlat
adc
dec
scas
or
mov
mov
and
jno
pusha
adc
(bad)
in
jmp
add
cli
call
les
xchg
dec
xchg
sti
and
xor
jecxz
mov
jl
xchg
mov
pop
cli
sbb
(bad)
jmp
popf
cmps
inc
jg
aam
shr
cli
out
inc
adc
fidiv
jnp
addr16
(bad)
inc
loopne
mov
jle
mov
out
mov
jmp
add
test
out
test
or
ret
pop
aas
jecxz
imul
movhps
cmp
sub
xor
adc
mov
scas
sahf
ja
add
inc
fcom
and
add
pop
loope
push
bound
mov
retf
cmp
idiv
std
inc
mov
cmp
dec
push
call
jp
cmps
aaa
bound
jbe
inc
repz
dec
int3
icebp
(bad)
mov
fisub
pop
mov
or
jne
(bad)
jg
pop
or
xchg
jae
cmps
aas
ja
icebp
pop
push
aad
mov
neg
je
jae
sti
rcl
mov
mov
sar
and
sbb
add
pop
xor
loop
add
fnsave
xchg
pop
push
inc
or
loope
dec
push
pop
add
add
jns
call
adc
dec
inc
call
sub
or
retf
jbe
and
fdivp
mov
add
loopne
mov
mov
add
cmp
jecxz
daa
fst
mov
pushf
add
mov
mov
mov
mov
inc
xchg
in
dec
mov
mov
pop
or
inc
sub
movs
or
fdiv
push
pop
adc
fs
or
jge
or
push
(bad)
inc
push
jns
push
data16
and
loopne
neg
jo
hlt
cwde
mov
stc
pop
xor
dec
scas
ror
push
sbb
adc
mov
or
or
dec
or
aam
(bad)
jmp
or
stc
add
movs
sbb
aaa
adc
pusha
popa
inc
out
aad
pop
or
inc
and
sub
ja
and
fistp
push
push
inc
inc
les
or
inc
outs
or
jl
shl
pop
hlt
sbb
inc
arpl
jo
icebp
fisttp
ret
in
sbb
out
(bad)
xor
and
mov
mov
call
sub
leave
mov
ins
pop
pusha
clc
jmp
aaa
cld
pop
loope
inc
lea
mov
pop
ds
call
pop
inc
mov
outs
inc
push
pop
push
xchg
std
sbb
lods
cmp
aas
push
and
rcl
jle
push
pop
mov
call
xor
aad
dec
jmp
add
jnp
and
push
mov
push
lds
pusha
add
dec
(bad)
ja
inc
(bad)
mov
or
mov
inc
xor
jmp
adc
sti
pop
dec
xchg
das
xlat
es
dec
cli
inc
das
ss
cmp
(bad)
jo
or
inc
mov
inc
add
test
and
jb
idiv
pop
cmps
add
add
mov
cmps
add
sub
scas
sbb
fimul
push
mov
in
movs
call
pop
ins
into
push
pop
clc
jae
stc
mov
clc
inc
dec
enter
call
out
aad
push
pop
push
cld
test
xchg
mov
ins
out
out
inc
out
jg
pop
jg
test
cmps
cmps
ins
ret
or
fisttp
mov
loopne
aas
xor
mov
cli
addr16
mov
call
dec
cli
(bad)
xchg
(bad)
and
sar
arpl
push
mov
adc
jmp
ins
lahf
idiv
cs
lock
mul
push
and
clc
outs
call
mov
fld
add
loope
out
cli
inc
pop
inc
jno
xor
xor
(bad)
movs
sbb
or
mov
sti
jge
sub
call
mov
xor
das
arpl
jl
pop
jns
inc
je
icebp
mov
push
je
iret
out
(bad)
dec
xor
mov
jecxz
cld
lds
retf
cwde
mov
imul
cs
clc
aas
cmc
std
div
jp
push
add
ins
adc
add
lods
pop
push
xor
and
scas
sub
(bad)
push
inc
mov
into
adc
sysret
inc
outs
inc
xchg
lock
je
nop
inc
push
movs
inc
sbb
icebp
cli
sbb
loop
cmp
mov
inc
imul
jno
daa
inc
add
or
cmp
clc
fst
and
out
or
or
scas
add
push
dec
add
stc
pop
lds
cli
(bad)
inc
clc
jg
mov
test
dec
fld
mov
ss
adc
fstp
push
push
push
inc
push
call
sub
pop
ja
in
inc
dec
dec
loopne
jno
mov
in
outs
push
cmp
push
pop
add
arpl
sti
nop
inc
pop
fld
pop
shl
call
mov
adc
ror
ins
push
rcl
fmul
mov
xor
push
adc
mov
cli
xchg
cmpps
mov
rcr
adc
mov
cmp
(bad)
pop
shl
ins
ss
mov
push
mov
fisub
adc
mov
retf
in
dec
call
or
cmp
add
fcomp
sub
dec
enter
arpl
das
mov
pop
mov
scas
or
(bad)
push
inc
aaa
push
dec
cld
mov
jl
clc
mov
pop
adc
popa
cld
add
and
or
mov
push
test
cmp
mov
(bad)
push
add
mov
cli
cli
add
idiv
cmp
jg
sbb
jg
clc
sahf
jmp
(bad)
cld
aaa
loope
cmp
inc
jmp
pop
dec
add
jmp
jmp
fadd
add
ss
sub
dec
popa
sub
mov
jb
nop
pop
lods
pop
(bad)
mov
pop
mov
daa
mov
(bad)
jmp
jno
jle
xchg
sub
pop
lds
std
adc
sub
ret
loope
push
push
fidiv
pop
sbb
mov
(bad)
pop
loop
xchg
cmp
mov
std
ret
or
bound
add
mov
mov
mov
xchg
or
xor
mov
pop
push
hlt
inc
ret
push
cwde
push
out
sub
fild
sbb
pop
je
dec
pop
pop
mov
lds
sub
movs
jae
dec
sub
in
jo
(bad)
and
dec
icebp
ja
pop
je
add
xlat
inc
inc
mov
inc
ret
stos
in
xor
gs
dec
sub
jmp
dec
in
mov
cmp
loope
mov
inc
xchg
inc
inc
call
enter
lock
dec
lods
push
inc
shl
mov
adc
inc
cmp
push
cmp
pop
ror
les
mov
in
and
push
xor
inc
sub
ret
push
pop
rcl
dec
ror
sbb
test
xchg
add
adc
sbb
(bad)
std
sti
jle
cmp
adc
fcomp
jae
pop
paddsb
das
rol
xbegin
sti
cmp
sahf
das
jae
div
jbe
outs
mov
xor
arpl
push
or
fcmovb
jg
and
pop
inc
in
add
fidiv
or
bnd
lods
xchg
mov
or
sti
popf
inc
test
pop
ret
and
scas
pusha
repz
mov
cdq
clc
push
sbb
adc
out
icebp
call
inc
cwde
fbld
(bad)
dec
je
fs
dec
mov
out
call
(bad)
jmp
(bad)
jg
mov
out
pop
jp
adc
adc
or
inc
xlat
or
push
(bad)
aad
inc
fimul
pop
pushf
loopne
sub
ja
(bad)
and
xor
(bad)
fnstenv
xor
jle
lds
dec
dec
(bad)
out
fs
div
inc
repz
imul
add
fmul
lods
mov
sahf
stc
retf
les
dec
sub
jecxz
jbe
adc
mov
inc
or
cli
ret
test
xchg
push
out
mov
mov
pop
and
mov
pushf
add
(bad)
imul
add
and
inc
mul
inc
and
rol
mov
dec
pop
mov
dec
mov
out
(bad)
mov
cld
inc
dec
vpcomuq
imul
inc
mov
ret
sub
or
jmp
add
push
fisubr
test
(bad)
(bad)
(bad)
in
jb
pop
or
push
mov
call
pop
fscale
mov
ret
cs
pop
adc
xchg
jg
pop
daa
scas
call
and
dec
pusha
inc
fmul
iret
mov
jp
push
add
(bad)
add
aad
es
xor
xor
mov
fs
push
sbb
mov
cli
push
dec
add
(bad)
addr16
xlat
pop
mov
(bad)
outs
scas
adc
sbb
arpl
movs
aam
cld
outs
mov
jae
add
in
(bad)
pop
ret
push
sub
stos
and
imul
data16
jo
dec
add
inc
fld
xor
je
xchg
xchg
call
bound
pop
push
mov
jnp
sbb
(bad)
and
and
aas
mov
in
pop
cmc
mov
push
dec
sbb
pop
das
mov
push
inc
jae
ja
xchg
movs
push
dec
mov
cld
jg
inc
(bad)
out
or
je
retf
sub
aad
dec
add
inc
mov
ret
stos
stos
test
icebp
add
dec
mov
(bad)
mov
aaa
push
add
dec
ret
sub
fisttp
adc
pop
mov
gs
in
pop
test
test
ficom
(bad)
inc
push
pop
xor
mov
cli
pop
in
inc
inc
or
add
nop
call
jmp
sbb
pop
inc
fidiv
aas
js
loop
cli
fistp
gs
cmc
jae
push
in
out
add
push
(bad)
push
cmps
add
imul
test
mov
out
hlt
add
fadd
adc
lock
out
(bad)
pop
inc
(bad)
add
add
jmp
(bad)
adc
mov
loopne
mov
cld
(bad)
pop
xchg
std
inc
cs
lds
xor
ja
aas
add
cwde
adc
(bad)
push
rcr
dec
aas
push
push
add
cmp
push
ins
test
jmp
mov
or
push
push
sub
pop
imul
xchg
push
xchg
or
(bad)
push
sti
mov
pop
pop
xor
inc
mov
push
push
add
add
mov
outs
push
lfence
push
ret
mov
dec
std
push
xor
pusha
pop
(bad)
jns
inc
mov
inc
mov
pop
loop
push
or
jg
pop
outs
push
jmp
pushf
fisub
cmp
sbb
test
pop
ins
sbb
cs
mov
scas
sar
pop
add
cdq
adc
(bad)
iret
mov
test
shl
pop
enter
movmskps
jg
aam
mov
jg
pop
sti
or
gs
test
lahf
xor
in
jmp
jle
mov
jl
push
pop
push
push
sub
cmp
inc
ret
inc
add
ja
pusha
scas
and
add
mov
or
jb
push
sbb
mov
or
mov
(bad)
mov
aas
xchg
xor
fimul
sub
js
mov
jg
ret
push
ja
ret
jmp
adc
or
add
les
jmp
push
add
push
mov
xchg
aas
(bad)
jl
push
push
fild
ret
adc
retw
lock
jmp
dec
dec
push
mov
cld
mov
imul
add
add
out
push
fiadd
sbb
mov
dec
int3
into
add
or
outs
sub
js
clc
push
call
sub
aad
inc
(bad)
cmp
(bad)
sub
and
dec
out
arpl
xchg
add
push
inc
cli
data16
xor
push
(bad)
inc
jmp
push
adc
fild
sbb
pop
imul
test
lds
inc
sub
cmp
jb
sub
push
fwait
push
mov
std
pop
or
pop
push
jo
sub
mov
add
xor
add
pslld
pop
mov
push
xchg
test
xchg
jmp
or
(bad)
(bad)
lds
cmp
jbe
lahf
int
aad
jp
inc
pusha
jp
inc
pop
mov
push
dec
fidivr
add
iret
xor
pop
mov
inc
loopne
push
jl
mov
push
cmps
mov
cmc
sub
lock
mov
bound
dec
pop
aad
das
xchg
mov
lds
add
or
add
je
aas
push
mov
jle
idiv
leave
add
xor
arpl
rol
mov
gs
imul
add
mov
je
sti
mov
jb
je
push
mov
or
mov
cmp
aas
int3
das
std
scas
add
mov
adc
mov
inc
pop
jmp
ins
jp
lds
inc
sub
push
in
inc
mov
mov
dec
je
push
push
inc
cld
sahf
mov
pop
bound
push
stos
mov
add
xor
adc
cld
and
shl
out
arpl
nop
test
dec
mov
test
cmp
sbb
mov
ins
repz
retf
dec
inc
ret
or
das
pushf
add
fild
loope
icebp
out
gs
xor
or
add
inc
and
outs
mov
movs
loop
ja
xor
add
mov
xlat
push
aas
and
je
fdivr
popa
mov
xchg
movs
ret
push
jno
lods
xor
inc
(bad)
mov
mov
pop
test
cmp
mov
test
push
push
out
outs
mov
icebp
std
mov
cmc
adc
inc
cs
fnstcw
pop
add
cmp
std
stos
aam
pop
xbegin
(bad)
push
test
cmp
in
jmp
jae
jno
push
add
call
sbb
fistp
xchg
pop
dec
cmp
pop
mov
pusha
inc
cmps
icebp
out
jb
fadd
(bad)
dec
ret
push
sub
repnz
pop
into
push
adc
in
jl
mov
pop
xchg
or
clc
inc
mov
push
pop
arpl
mov
sbb
jae
push
retf
icebp
outs
shr
adc
jae
and
lds
cmp
and
stos
(bad)
lock
and
xor
mov
rol
ja
inc
ss
xor
inc
lock
mov
jmp
inc
push
mov
dec
adc
adc
pop
rol
inc
jmp
outs
adc
movs
cmp
bound
retf
push
ss
fs
(bad)
or
sbb
out
retf
mov
clc
and
cmp
adc
ja
fwait
int3
fs
xor
pop
pop
neg
jmp
pop
adc
clc
rol
jmp
mov
in
ja
jae
inc
out
gs
cwde
rcl
mov
nop
push
jl
or
push
mov
icebp
sub
mov
jge
inc
mov
mov
pop
ficomp
inc
movs
or
(bad)
mov
or
mov
jae
std
fs
and
cmp
inc
jg
lock
add
sbb
out
(bad)
out
add
mov
dec
aas
inc
push
adc
sbb
add
push
out
adc
pop
inc
sti
mov
ja
(bad)
and
lods
fmul
js
neg
add
inc
mov
jb
mov
add
addr16
add
pop
dec
sbb
pop
dec
sbb
and
fcomp
inc
and
adc
outs
scas
ret
gs
sti
pop
gs
arpl
in
clc
movs
lds
in
push
mov
sti
inc
xchg
inc
ins
add
shr
popa
pusha
inc
aaa
sbb
dec
jle
dec
cmp
and
push
cli
jns
lahf
(bad)
sub
xchg
(bad)
jmp
outs
and
(bad)
inc
inc
xchg
xlat
inc
xor
inc
iret
push
cld
cmps
aas
xor
outs
out
add
test
lds
dec
(bad)
jmp
imul
xchg
xor
out
push
loop
outs
(bad)
out
es
xor
inc
pop
shl
pop
(bad)
out
pop
inc
cli
dec
inc
sbb
push
(bad)
fild
out
adc
pop
xor
ret
adc
das
inc
lods
add
aas
xchg
cmp
pop
jecxz
test
and
inc
movs
clc
add
retf
mov
add
xchg
dec
xlat
mov
cmp
xchg
jmp
pop
rcr
push
ror
jg
dec
xor
int3
mov
push
imul
inc
adc
pop
mov
inc
in
add
ss
sub
xchg
jge
sub
xor
cmp
add
push
add
push
(bad)
out
mov
adc
add
mov
test
das
call
ret
out
or
dec
xor
pop
or
dec
dec
scas
mov
(bad)
sub
test
pmovmskb
mov
outs
mov
je
in
add
inc
ret
call
mov
cmp
cli
call
xchg
dec
cmp
mov
adc
xor
jecxz
dec
cli
inc
inc
enter
xchg
pop
pusha
mov
pop
add
mov
adc
mov
jmp
mov
adc
test
neg
loop
fwait
mov
bound
add
push
mov
jbe
jg
retf
out
shr
cmp
inc
or
bound
or
sbb
call
adc
inc
sbb
xor
xor
clc
push
fwait
push
paddd
dec
and
test
xor
shl
rcl
add
shl
or
mov
fbstp
into
out
arpl
std
pushf
push
add
cmp
sti
test
inc
mov
ins
aas
push
or
pushf
jmp
arpl
sti
(bad)
test
scas
aas
xlat
xor
cmp
add
or
out
test
mov
cmp
lahf
stos
add
stos
inc
inc
loop
pop
inc
jg
adc
outs
mov
or
xor
sbb
mov
push
cmp
ret
inc
adc
or
xor
cmp
mov
mov
fldcw
jecxz
dec
jg
inc
add
mov
(bad)
cmp
jl
sbb
jg
dec
fbld
jae
ss
jmp
dec
out
fs
(bad)
ds
ss
daa
pop
jae
out
in
jg
pop
jo
sub
std
adc
arpl
jg
fwait
sub
dec
pop
scas
jle
je
jmp
jae
sub
jmp
add
bound
pop
mov
in
xchg
addr16
dec
imul
push
out
or
mov
retf
aam
push
(bad)
data16
ins
jl
cmp
and
clc
jg
cwde
mov
mov
test
inc
xchg
mov
adc
pop
pop
push
hlt
add
or
dec
mov
dec
call
inc
fs
pmulhuw
and
es
push
bound
add
sbb
jp
push
cmp
inc
mov
jb
cwde
push
bound
add
and
push
inc
xor
mov
in
mov
sti
mov
mov
sub
jg
loopne
add
add
out
hlt
xlat
and
mov
pusha
push
mov
xor
in
push
mov
or
push
add
lods
(bad)
mov
xor
inc
sub
shl
sbb
mov
(bad)
inc
call
fdivr
pop
imul
arpl
inc
push
imul
jb
arpl
pop
mov
add
std
push
cmp
neg
icebp
add
sti
imul
add
sti
fld
dec
inc
mov
adc
xor
mov
xchg
ret
into
retf
lods
je
lahf
out
adc
jnp
test
add
packsswb
adc
lods
scas
xchg
fdiv
shr
push
clc
int
ds
enter
push
add
jmp
jnp
xchg
in
mov
and
dec
(bad)
dec
pop
jae
aas
jmp
dec
add
pop
mov
push
push
outs
push
inc
(bad)
out
jno
jbe
pop
dec
loopne
fwait
jge
outs
div
jg
push
pop
mov
das
xor
mov
inc
fcomp
ret
inc
inc
jl
jle
dec
mov
aam
or
jne
add
aaa
loop
jle
mov
inc
sub
fiadd
and
mov
shl
ja
sub
add
frstor
or
push
out
cmp
idiv
lods
fadd
call
lds
outs
pop
(bad)
outs
inc
add
sub
sbb
je
das
sbb
ret
fmul
jbe
and
mov
sbb
cs
cwde
pop
add
pop
aas
clc
xchg
mov
xchg
inc
call
cmp
out
push
sbb
xor
mov
rol
push
pop
mov
xchg
jg
push
and
xchg
inc
jae
mov
sti
xchg
push
mov
ja
out
dec
cmp
dec
aaa
(bad)
sub
rcl
mov
pop
fisub
jae
mov
adc
push
sbb
test
mov
(bad)
enter
inc
push
shl
and
add
fst
enter
add
push
ja
ja
mov
mov
xchg
add
cmp
jle
into
xor
push
gs
xchg
xchg
push
jne
arpl
or
mov
mov
mov
sbb
pop
push
xor
dec
add
jno
ret
mov
scas
ret
cmps
sbb
js
mov
(bad)
push
lds
add
push
cli
(bad)
sub
aas
std
adc
push
sti
push
ror
lds
sbb
mov
jmp
push
inc
pusha
xchg
push
loop
rcl
ins
push
cld
repnz
pop
out
inc
test
push
cli
pop
jl
(bad)
jg
add
push
mov
popf
inc
imul
jle
mov
les
inc
mov
adc
push
leave
outs
add
xor
pop
(bad)
cmp
push
mov
enter
cli
aas
mov
or
add
lahf
mov
jmp
cmp
jbe
cli
or
ss
fild
(bad)
repz
fs
adc
hlt
jnp
add
aad
jmp
sub
loopne
outs
cmps
stos
mov
push
cmp
adc
inc
inc
sbb
push
inc
sar
mov
and
test
mov
cmc
mov
dec
jg
push
aas
xor
inc
add
mov
jb
arpl
inc
cmp
and
pop
lds
or
cli
(bad)
sti
push
(bad)
pop
(bad)
(bad)
xchg
xor
pop
xlat
or
sub
xchg
test
push
mov
icebp
pop
sub
push
mov
test
mov
outs
test
cmp
mov
xchg
out
add
sub
inc
loop
in
mov
push
(bad)
jnp
pop
dec
mov
push
out
and
aad
push
inc
inc
lock
add
scas
xchg
ja
das
add
repz
mov
inc
or
lock
dec
add
clc
or
pop
je
mov
and
rcr
aaa
dec
std
bound
adc
inc
outs
push
in
cmps
or
pop
ds
adc
cmp
add
test
mov
fsub
pop
fist
add
mov
hlt
xor
mov
jmp
pop
js
inc
pop
sbb
add
xor
sbb
fisub
cld
mov
pop
pop
inc
aaa
pop
mov
int3
aad
mov
inc
clc
test
jae
js
inc
pusha
mov
jmp
je
inc
inc
jle
inc
idiv
mov
icebp
ins
jle
(bad)
inc
syscall
(bad)
mov
push
(bad)
adc
or
out
inc
or
je
int3
dec
movs
lock
adc
add
cld
out
sahf
xor
pop
and
add
mov
and
or
aam
fisub
xor
scas
scas
pop
fbld
mov
sub
or
mov
rol
lock
outs
pop
ret
mov
inc
push
jae
mov
(bad)
or
and
dec
andps
rsqrtps
jae
adc
es
jae
pop
adc
les
jae
fisttp
js
mov
imul
add
neg
mov
mov
adc
cli
inc
fs
jmp
lods
movs
mov
or
inc
pusha
cld
fld
out
(bad)
call
test
inc
(bad)
out
pop
xor
and
add
mov
adc
mov
or
inc
adc
enter
das
adc
jae
pop
aas
jp
push
jg
std
mov
ret
jl
outs
dec
or
scas
sar
push
loop
mov
adc
sbb
jg
inc
jmp
push
call
out
mov
xor
sub
mov
or
sub
mov
gs
and
mov
mov
icebp
jg
ret
mov
jno
std
aad
(bad)
loopne
or
add
push
add
mov
inc
inc
(bad)
out
imul
push
cmps
lds
cmp
cli
das
and
std
mov
mov
cdq
push
jl
out
add
mov
test
stos
enter
iret
push
mov
js
inc
stc
fmul
dec
mov
mov
jmp
mov
imul
ins
adc
test
mov
sbb
sti
inc
pop
push
sti
mov
je
jae
(bad)
repz
in
fild
test
(bad)
(bad)
xor
imul
leave
aas
jmp
mov
push
jg
dec
pop
add
adc
dec
jo
icebp
ret
(bad)
or
xor
and
outs
jmp
mov
jmp
add
test
test
retf
adc
pop
mov
pop
inc
call
(bad)
stos
scas
test
js
or
sar
inc
loopne
imul
inc
fwait
adc
push
lds
cli
dec
(bad)
out
mov
sti
pop
rdmsr
sbb
out
outs
dec
inc
les
sub
(bad)
cmp
rcl
sbb
push
std
ror
mov
add
hlt
cmps
(bad)
in
mov
add
js
dec
outs
mov
push
out
(bad)
push
inc
out
or
xor
(bad)
icebp
clc
cwde
aas
repz
push
dec
add
(bad)
or
dec
or
push
mov
cmc
inc
(bad)
pop
(bad)
jecxz
call
std
repz
lds
idiv
std
cli
out
mov
pop
inc
call
push
push
retf
in
std
add
pop
xor
imul
and
fstp
inc
dec
jmp
xor
xor
inc
fdiv
mov
jbe
add
lods
adc
pop
dec
inc
lock
or
pop
fisub
(bad)
adc
inc
pop
inc
adc
pop
sub
mov
lock
in
adc
mov
lods
or
pop
jl
imul
sbb
mov
jmp
push
jmp
mov
dec
and
mul
out
mov
cmc
fcom
clc
fisttp
pop
mov
mov
std
sbb
cmp
mov
dec
cld
mov
aas
sub
inc
std
hlt
or
je
dec
rcr
(bad)
out
or
push
cwde
lock
pop
cld
outs
mov
inc
aam
or
add
jns
out
mov
jnp
test
clc
inc
aas
adc
xor
enter
inc
sub
test
mov
test
je
mov
xor
xor
add
or
pop
or
jbe
ret
adc
ss
cmp
pop
inc
das
mov
xor
idiv
add
inc
inc
xor
gs
pop
cld
or
sti
test
push
in
dec
arpl
fistp
ret
add
jb
jnp
mov
cdq
xor
pop
inc
jmp
(bad)
mov
(bad)
pop
and
out
xor
jmp
or
adc
daa
inc
xor
mov
icebp
mov
mov
xor
shl
ins
cmc
or
aam
mov
pop
push
je
pusha
je
ins
sti
cmp
add
add
(bad)
adc
jmp
sbb
sub
retf
test
pop
dec
test
add
add
jno
sar
dec
lods
cld
out
scas
mov
movs
or
xor
or
push
aas
cmp
jmp
xchg
repz
add
adc
inc
mov
(bad)
jl
adc
je
lock
out
fcomi
inc
(bad)
push
push
jns
jae
sub
push
mov
fistp
fs
jae
push
cld
je
push
cmp
inc
(bad)
imul
stos
fcom
push
cmp
fdivrp
ret
jg
push
ins
packsswb
daa
mov
inc
mov
xchg
mov
xor
mov
cli
rcl
aaa
push
jmp
xchg
icebp
outs
adc
je
ins
mov
or
pop
std
mov
aas
push
and
int
adc
cmp
out
pop
enter
dec
ret
out
sbb
push
mov
out
sub
lock
add
pusha
sub
std
sub
xchg
pop
pop
inc
data16
cmp
cli
jg
dec
and
(bad)
dec
stc
pop
jb
mov
jp
or
adc
test
idiv
ror
dec
loop
outs
and
mov
push
pop
inc
(bad)
sti
xor
jb
adc
loope
add
jb
inc
arpl
or
int
adc
gs
jae
dec
mov
adc
(bad)
inc
in
imul
cmc
push
mov
dec
mov
add
(bad)
mov
jo
test
cmp
push
mov
ret
out
add
je
jo
jae
adc
fmul
mov
dec
add
std
inc
dec
imul
hlt
call
lock
pop
pusha
sti
inc
rol
(bad)
pop
addr16
inc
adc
pop
fs
ret
jmp
cli
or
xor
or
(bad)
pop
sti
and
pop
sub
dec
inc
in
nop
jge
jmp
mov
test
jl
pop
jae
(bad)
cli
fcom
aad
test
clc
pop
sbb
out
or
test
xor
add
pop
push
pop
push
jg
push
push
je
pop
push
(bad)
clc
inc
ins
xor
dec
add
add
inc
and
lock
xchg
ror
add
dec
loopne
mov
add
or
lahf
add
and
inc
jbe
and
jg
push
mov
sti
xor
mov
xchg
push
inc
cmp
mov
iret
pop
pop
add
sbb
(bad)
lock
xchg
nop
sar
sub
xlat
inc
(bad)
pop
mov
rcl
mov
ins
cmps
cli
das
mov
fcomip
or
cs
inc
sub
mov
push
or
mov
mov
jae
cmp
test
enter
je
pop
sub
cmps
mov
inc
rcl
inc
add
jecxz
bound
data16
fs
hlt
xor
cmp
mov
jbe
popa
xor
mov
out
push
ret
mov
cmp
cmp
es
fstp
jle
test
inc
jg
inc
std
xchg
aad
pop
pop
das
push
dec
aaa
cmp
ds
js
and
add
rcr
sahf
sub
cld
outs
popf
fidivr
enter
dec
inc
inc
dec
inc
adc
pop
aas
cmc
mov
mov
push
mov
mov
and
iret
je
mov
pop
cli
maskmovq
idiv
inc
mov
push
push
ret
mov
mov
ja
sbb
pop
inc
retf
add
push
aas
in
and
push
in
pop
xor
cmp
inc
test
fistp
mov
test
inc
push
inc
out
sti
adc
jge
gs
ins
jle
inc
(bad)
fbstp
mov
stos
mov
jmp
inc
in
jb
pop
inc
cmp
(bad)
jno
pop
pop
fist
inc
aad
(bad)
pop
mov
fs
cmc
ret
sbb
xchg
xlat
inc
addr16
in
adc
inc
dec
in
dec
test
mov
ins
outs
test
inc
mov
and
(bad)
add
xor
mov
(bad)
aaa
arpl
out
xor
dec
dec
idiv
adc
add
std
mov
adc
push
inc
not
or
inc
loopne
(bad)
out
push
not
push
clc
(bad)
sbb
inc
inc
lds
(bad)
(bad)
jmp
jl
or
addr16
fiadd
out
sbb
inc
ficomp
cld
inc
sbb
aaa
fmul
dec
cmp
fcom
add
dec
cmp
test
inc
stos
arpl
(bad)
mov
ja
sti
pop
inc
pop
clc
jmp
mov
jmp
data16
mov
mov
jbe
clc
popw
pop
add
inc
xor
(bad)
cmp
test
inc
dec
in
xchg
add
pop
in
push
inc
adc
xor
sub
sub
add
xchg
dec
inc
mov
xor
push
outs
mov
cwde
pop
inc
pop
jge
(bad)
fimul
mov
or
pop
fwait
shl
into
retf
movs
push
(bad)
add
mov
(bad)
(bad)
enter
mov
add
dec
dec
mov
(bad)
fninit
out
gs
dec
mov
cld
retf
dec
aaa
adc
xor
dec
aas
sbb
je
(bad)
rol
out
mov
dec
sar
adc
jg
or
inc
mov
pushf
lahf
cdq
inc
sti
inc
mov
pop
cs
push
test
push
test
sub
add
add
aas
mov
push
inc
fdiv
hlt
sbb
mov
stos
sti
sti
dec
cmp
push
sub
and
adc
or
inc
sub
push
adc
pusha
lahf
pop
ins
mov
sbb
ins
add
nop
mov
dec
adc
mov
xor
cmp
pop
mov
sar
xor
push
push
int
rol
(bad)
and
add
dec
add
add
(bad)
mov
and
out
push
jae
jmp
(bad)
fcomip
inc
or
dec
outs
lds
mov
inc
bound
(bad)
ins
ret
stos
pop
loop
call
mov
push
or
sar
mov
and
stc
sbb
xchg
rep
xor
add
add
imul
mov
push
cld
push
outs
call
inc
cld
pop
std
retf
fimul
fcmovnb
mov
xchg
shl
add
inc
iret
mov
sti
cmp
aaa
loope
dec
call
(bad)
adc
ds
inc
mov
pop
pop
inc
into
js
xor
add
sub
sbb
loop
dec
inc
jmp
icebp
push
push
ja
test
mov
scas
cmp
neg
mov
outs
pop
jb
push
test
(bad)
dec
add
dec
inc
adc
and
adc
add
pop
std
inc
in
pop
stos
ficomp
jle
(bad)
icebp
ror
pusha
jg
add
cmc
popf
ss
(bad)
pop
out
inc
stos
push
(bad)
cmc
retf
mov
add
outs
aas
ret
jmp
pusha
fdivr
inc
pop
mov
ja
xor
cwde
or
pop
in
fs
or
pop
mov
test
ret
gs
imul
loopne
inc
js
fild
enter
pop
dec
ret
ret
js
pop
imul
fcmovb
shr
pop
ins
rol
ins
arpl
pop
repz
adc
cli
cmp
js
mov
and
xchg
dec
cld
mov
fiadd
mov
xor
mov
sub
sub
push
push
and
push
xor
cmps
or
xchg
aam
inc
pop
ret
call
ss
inc
js
lock
dec
enter
mov
xchg
(bad)
in
push
mov
stos
add
das
push
add
fimul
sub
jmp
fdiv
dec
shl
test
push
cmc
push
mov
push
fiadd
in
loop
sbb
mov
or
not
mov
and
mov
adc
inc
jg
loope
pop
(bad)
fsub
in
pop
ins
add
shr
les
xchg
mov
in
data16
loopne
fld
jb
and
mov
mov
xor
or
test
(bad)
fs
mov
inc
call
call
pop
add
aam
xor
dec
es
pop
or
std
cwde
mov
(bad)
sti
fs
sbb
mov
xor
shl
ret
mov
call
imul
add
jne
imul
retfw
dec
add
ins
(bad)
mov
repnz
pop
jmp
loope
movs
mov
inc
daa
xchg
ins
cld
test
mov
stos
jo
pushf
push
dec
inc
repz
adc
dec
push
test
jae
push
adc
inc
fiadd
or
pop
mov
mov
(bad)
mov
mov
popa
and
adc
pop
xor
sub
push
mov
xor
inc
out
fs
add
hlt
xchg
cli
and
call
pop
mov
das
(bad)
mov
adc
shl
and
pop
inc
and
mov
(bad)
pop
and
xchg
je
loop
call
rol
sub
mov
aas
pusha
movs
fdivp
ds
mov
out
je
call
das
pop
out
mov
out
sub
outs
sar
push
ret
xlat
jmp
or
clc
ins
jb
inc
sti
mov
call
or
aam
cdq
shl
xor
ficom
pushf
(bad)
(bad)
inc
add
add
pop
jae
pop
xor
fadd
imul
pop
mov
outs
jge
mov
aaa
shr
or
xor
pop
adc
aad
lock
clc
(bad)
sbb
pushf
repz
push
mov
lahf
add
psrld
push
xor
inc
cld
or
out
sub
add
test
(bad)
out
inc
push
xor
neg
push
loopne
jmp
push
dec
jg
shr
push
or
jge
sti
ret
aam
outs
mov
pop
push
add
push
(bad)
clc
add
pop
push
mov
and
fisttp
xor
push
pop
std
push
(bad)
jmp
inc
jno
inc
lds
add
xor
cs
cmp
or
jae
dec
jmp
std
movs
(bad)
std
call
mul
aas
jg
fcmovb
pop
inc
not
mov
test
push
inc
mov
pop
imul
lds
xchg
or
clc
outs
fistp
retf
pop
push
clc
xor
pop
and
not
rol
or
push
in
jne
pusha
aad
adc
ret
cld
bound
mov
ds
xchg
cmp
xor
les
add
ror
call
ret
in
mov
jmp
inc
push
test
or
add
pop
dec
pop
test
cli
sbb
add
test
(bad)
mov
out
mov
xor
sti
push
inc
jmp
idiv
inc
aaa
(bad)
jl
mov
test
xlat
stos
inc
or
mov
ds
pop
push
or
lock
(bad)
jl
aas
jae
jb
iret
jmp
ins
push
mov
mov
add
mov
popa
inc
inc
fisubr
test
add
xor
outs
int
sbb
push
xchg
gs
aaa
inc
jb
push
cmps
xchg
sbb
push
dec
or
mov
movs
pop
sub
mov
cmp
inc
icebp
push
or
(bad)
out
mov
push
jno
push
imul
rol
cmp
repz
repz
aas
push
outs
pop
or
pop
inc
jmp
xor
pop
sbb
cwde
mov
clc
aaa
pusha
test
scas
jno
push
add
add
js
js
dec
loope
mov
pop
adc
mov
push
sbb
(bad)
sbb
sbb
mov
and
sub
outs
mov
div
loop
jmp
sub
mov
cmp
adc
fild
repnz
dec
mov
loope
mov
(bad)
scas
inc
cmp
ret
fs
test
lds
jp
ret
out
or
or
aaa
mov
xor
ja
mov
sub
je
xchg
xchg
push
add
mul
out
sub
fdivr
out
pop
arpl
mov
xor
or
dec
adc
and
inc
jns
idiv
add
and
enter
push
sar
push
ret
mov
(bad)
imul
imul
xor
dec
xchg
cld
imul
fsub
(bad)
add
push
mov
aas
inc
fst
aam
(bad)
in
lea
push
ins
pop
inc
stc
jae
jb
add
mov
cli
dec
xchg
mov
movs
aas
loopne
inc
imul
add
dec
push
or
retf
inc
loopne
std
jmp
retf
repz
mov
push
cmp
mov
or
popa
pusha
inc
xchg
push
xor
lahf
ret
ins
ins
mov
push
dec
push
xor
push
jmp
mov
hlt
and
outs
(bad)
and
cld
push
xor
ret
mov
inc
loop
adc
(bad)
and
mov
call
mov
add
in
lods
add
add
mov
cli
xor
test
aas
push
icebp
ret
pop
xchg
mov
outs
and
push
repz
cli
std
dec
fdivr
add
fcom
(bad)
mov
enter
sahf
xchg
add
sub
cmps
je
dec
arpl
cmp
stc
sbb
xor
jg
add
jg
mov
fs
call
shl
movs
jnp
aaa
loop
sbb
out
push
or
pop
fisub
inc
data16
aas
push
and
sti
(bad)
or
fwait
push
add
add
lahf
xchg
mov
or
out
jp
add
pop
add
cli
add
dec
mov
jmp
push
inc
and
test
lock
mov
add
mov
imul
(bad)
mov
inc
mov
jnp
push
add
mov
adc
fild
retf
xor
cli
cmp
into
out
push
mov
push
movs
adc
leave
cdq
pop
aas
out
outs
jl
inc
adc
mov
xchg
jge
call
lahf
add
retf
sub
add
(bad)
les
jno
inc
xor
and
adc
mov
add
(bad)
mov
inc
mov
sub
(bad)
int
mov
mov
je
aas
mov
into
or
pop
(bad)
inc
sbb
aad
(bad)
jg
or
or
lods
inc
cmp
push
dec
or
ja
lea
pop
xchg
movs
arpl
out
mov
jae
test
push
sub
lock
mov
movs
fwait
xor
mov
test
test
add
pop
sti
mov
xchg
shl
pusha
mov
or
into
inc
imul
sbb
add
fild
pop
push
pop
(bad)
fcmovnb
push
fcomp
jmp
add
not
inc
jp
ret
fidiv
in
inc
call
mov
(bad)
call
out
and
das
mov
loopne
adc
jl
mov
(bad)
leave
hlt
and
int
sub
dec
pop
mov
inc
sub
push
ror
pop
sub
popa
mov
xor
fmul
mov
fisubr
ss
push
push
inc
sub
push
mov
or
push
dec
aas
push
scas
jmp
stos
retf
pop
and
push
lds
adc
pop
jb
adc
movs
mov
pop
jo
lock
icebp
gs
add
add
dec
std
cmp
jecxz
cmp
push
dec
mov
jecxz
cld
std
add
adc
add
jbe
and
jl
sbb
sub
mov
ret
xchg
dec
pop
mov
push
out
aaa
push
outs
out
dec
inc
jae
cmp
(bad)
arpl
lahf
add
fdiv
fsubr
adc
cmps
outs
ja
ss
sub
jmp
push
or
mov
out
(bad)
mov
mov
and
dec
int3
sub
leave
sar
mov
ss
rol
pop
daa
cs
inc
pop
stos
ret
add
sub
jg
movs
mov
cld
or
test
push
sti
out
push
div
pop
(bad)
inc
(bad)
test
cdq
sub
retf
jmp
adc
addr16
mov
mov
mov
ret
fdiv
xchg
mov
add
call
loopne
je
inc
enter
sbb
fucom
add
xchg
inc
mov
out
jecxz
jl
call
or
lods
xchg
cmp
xchg
test
or
sar
xchg
sbb
call
mov
dec
cmp
push
ins
push
push
out
mov
imul
sub
push
cli
push
ret
mov
xchg
add
jle
or
inc
(bad)
cmp
popa
inc
loope
mov
test
pop
out
push
adc
jb
xor
mov
call
push
dec
dec
add
mov
pop
dec
pop
or
bound
xor
ret
push
inc
js
and
ret
outs
std
push
nop
xchg
inc
xor
mov
(bad)
shr
dec
mov
add
mov
pop
or
jg
mul
mov
sbb
in
push
mov
sti
jae
mov
pop
pop
mov
sub
popf
dec
add
mov
ret
sar
jmp
and
nop
pusha
pop
push
cld
and
out
int
hlt
or
push
pushf
add
in
inc
xlat
std
cmps
(bad)
xor
fisub
pop
movs
in
push
jmp
xor
ret
xchg
jl
int3
mov
mov
push
adc
jmp
std
mov
or
sub
mov
adc
out
jmp
cs
(bad)
(bad)
mov
cli
xchg
aas
pop
ret
and
xlat
shl
inc
fs
jecxz
push
pop
dec
jge
inc
jg
out
xor
inc
inc
jae
mov
dec
or
inc
jae
adc
jb
enter
cmp
add
test
mov
pop
loope
push
or
clc
inc
add
dec
jg
scas
hlt
add
mov
push
stos
neg
adc
call
or
mov
je
ret
fistp
inc
xchg
cdq
(bad)
arpl
mov
std
test
jle
out
aas
jae
or
(bad)
xchg
je
sub
cmp
dec
stos
push
in
shr
and
inc
sbb
mov
das
xchg
mov
dec
adc
bound
imul
sbb
call
enter
jno
xor
rcr
fstp
out
out
sbb
add
inc
xor
and
div
xor
lds
ins
xchg
lock
sbb
addr16
jg
dec
and
outs
mov
int
push
dec
pop
inc
and
or
inc
call
adc
sbb
inc
inc
jno
pushf
jbe
mov
cmp
mov
inc
sar
sub
cld
(bad)
ja
inc
sub
xlat
mov
mov
inc
sbb
out
ret
(bad)
call
stos
(bad)
ins
add
ins
inc
cmp
xor
add
and
inc
ins
cld
add
add
je
jmp
call
mov
add
mov
movs
fdiv
stc
pop
je
(bad)
push
or
jno
(bad)
(bad)
fidiv
sbb
sbb
sti
neg
pop
push
add
test
or
add
inc
sti
jg
pop
push
cmc
xor
out
cmp
add
adc
jae
js
(bad)
clc
mov
add
jle
rol
imul
add
outs
inc
or
aam
xchg
std
add
pusha
xor
push
fimul
xor
inc
push
je
xor
and
sbb
adc
add
jmp
sub
sub
inc
aas
sahf
xor
push
mov
mul
adc
sub
pop
cmp
test
aas
std
mov
and
cmp
add
cmp
pop
add
mov
loop
das
pop
outs
sbb
mov
outs
push
inc
(bad)
jmp
hlt
push
std
add
xchg
mov
fimul
aam
mov
imul
push
das
imul
dec
inc
out
out
inc
mov
ret
ja
outs
cli
aad
jne
mov
mul
(bad)
pop
and
push
sub
cmp
sbb
xchg
shr
mov
imul
pop
sub
mov
adc
mov
mov
sti
dec
add
cmp
add
mov
xchg
adc
cmc
(bad)
mov
sub
lahf
pop
inc
(bad)
out
rcl
jg
std
retf
push
jle
and
mov
add
sub
dec
dec
out
faddp
sub
aas
inc
stc
sbb
mov
mov
fiadd
or
mov
inc
add
(bad)
mov
inc
ret
cmp
xchg
nop
sti
push
inc
pop
mov
or
xchg
mov
dec
add
pop
mov
cli
add
ficom
fdiv
bound
mov
jle
ss
dec
test
dec
loope
scas
loop
dec
and
lea
(bad)
push
sub
inc
push
cmp
adc
xchg
push
mov
je
fdiv
stc
dec
sbb
lock
pop
fisubr
pop
push
addr16
jae
jbe
outs
aaa
mov
inc
retf
addr16
dec
outs
push
nop
jg
and
(bad)
pop
jmp
sahf
xchg
clc
adc
or
fisub
xchg
stos
or
cmp
mov
jbe
or
cmp
lock
das
add
ja
outs
(bad)
ja
jae
jp
lods
dec
jmp
inc
fisub
add
and
adc
pop
or
inc
push
aam
dec
(bad)
es
gs
gs
icebp
dec
std
xchg
pop
inc
inc
adc
arpl
ret
inc
push
aas
outs
mov
sbb
into
or
sbb
mov
lds
inc
jmp
jb
call
pop
ret
xchg
mov
pop
add
sahf
pop
sub
out
jl
pop
jno
adc
js
bound
cmp
loope
xchg
sbb
dec
imul
cld
or
dec
gs
dec
iret
mov
loopne
movs
adc
inc
mov
pop
lock
add
dec
outs
mov
bound
std
adc
ss
dec
into
adc
call
aas
adc
gs
sar
push
sbb
pop
inc
pop
icebp
dec
loope
dec
ds
mov
retf
rcr
push
(bad)
jg
fcomip
mov
inc
push
inc
push
add
jle
xor
dec
(bad)
lods
pop
pusha
loopne
push
mov
mov
add
cmps
mov
mov
pop
gs
ja
mov
stc
cdq
dec
mov
pop
sti
mov
inc
sti
enter
push
jbe
sbb
pop
cli
or
mov
rcl
inc
pop
push
call
(bad)
mov
mov
mul
(bad)
and
ss
mov
pop
sbb
adc
out
inc
imul
adc
pop
ret
ss
push
or
(bad)
fist
fidiv
lock
inc
or
push
neg
mov
std
out
inc
add
ret
mov
sbb
(bad)
call
sbb
retf
pop
(bad)
mov
out
inc
mov
out
out
cmp
add
ret
jmp
push
pop
mov
adc
and
fwait
std
and
dec
pop
out
das
sbb
mov
call
icebp
cli
adc
add
inc
add
inc
inc
add
add
fmul
or
aad
sbb
cmp
(bad)
mov
jmp
or
push
(bad)
ja
cmps
lea
shr
lahf
jle
cmps
or
sahf
repz
rol
mov
in
xor
and
or
pop
mov
inc
and
fild
sub
outs
push
imul
jno
jbe
jb
dec
mov
jmp
(bad)
jmp
pop
inc
dec
cmps
add
jmp
mov
std
(bad)
xor
jb
adc
sbb
pusha
push
lahf
clc
adc
ins
into
sbb
push
add
fadd
push
mov
mov
mov
jle
inc
mov
dec
sti
mov
sbb
inc
inc
sbb
pusha
xchg
pop
sbb
ret
sbb
pop
push
or
pop
push
icebp
add
clc
jmp
ret
xor
sub
clc
(bad)
add
add
pop
push
or
lea
in
je
sti
cmp
adc
cmp
sub
mov
cmp
fs
inc
xchg
inc
fisttp
push
sub
jmp
pop
sbb
gs
add
call
jg
ret
mov
stos
(bad)
add
int3
inc
ret
div
mov
cmp
jle
mov
pop
pop
mov
mov
ret
inc
add
call
dec
test
add
hlt
or
outs
mov
xor
and
sub
or
aam
xor
jmp
pop
cmc
mov
enter
outs
push
ja
pop
xchg
adc
scas
xor
mov
pop
fidiv
pop
xor
repnz
scas
(bad)
icebp
(bad)
inc
cmp
pop
and
xchg
arpl
push
outs
imul
cli
inc
push
jae
cmp
add
addr16
aas
jne
sub
mov
xor
int
retf
pop
adc
dec
idiv
test
dec
stc
shl
shr
jae
mov
adc
dec
jae
add
jmp
outs
outs
mov
and
push
mov
inc
sub
jge
fldenv
loope
sub
push
or
jecxz
icebp
fisub
call
(bad)
sub
mov
mov
push
ins
mov
arpl
dec
inc
sar
sub
pop
out
push
add
mov
adc
pop
push
ud0
mov
push
add
inc
add
pop
push
hlt
push
imul
mov
or
loope
cmc
(bad)
xor
into
ret
(bad)
iret
rol
add
mov
sar
dec
cli
xchg
inc
fidiv
push
mov
outs
push
push
jge
mov
pop
sbb
fmul
das
add
es
inc
pop
xchg
movs
add
push
call
imul
jecxz
(bad)
out
loop
adc
int3
push
pop
cmp
inc
aas
lahf
mov
inc
adc
push
(bad)
repz
push
and
jo
(bad)
mov
aam
bound
pop
jp
pop
mov
inc
add
jne
pop
clc
(bad)
test
push
fiadd
add
test
mov
ret
mov
idiv
mov
inc
mov
and
and
jae
mov
pop
jmp
out
pop
jmp
fisttp
mov
add
mov
dec
outs
push
aas
jmp
call
lahf
mov
sub
stc
imul
loope
lock
pop
imul
mov
clc
pop
add
sti
mov
ins
inc
and
inc
dec
(bad)
call
data16
scas
pop
dec
dec
add
mov
addr16
or
adc
mov
dec
fs
fild
mov
dec
add
fisttp
jae
(bad)
and
imul
pop
add
pop
(bad)
mov
ds
sbb
push
or
mov
xor
lock
xor
in
or
mov
rcl
pusha
movs
jle
stc
mov
cs
hlt
jg
inc
std
xor
push
jmp
aaa
div
pusha
mov
(bad)
sbb
mov
ret
mov
mov
xchg
ins
pushf
add
(bad)
dec
and
mov
mov
sti
outs
xchg
dec
push
inc
mov
repnz
lds
mov
ret
movs
pop
mov
sbb
and
jmp
or
arpl
(bad)
call
add
adc
jge
ja
pop
pop
aas
daa
jae
xchg
mov
cwde
push
mov
pop
inc
cmp
(bad)
aas
inc
mov
cmc
push
std
out
ret
xor
stc
pop
adc
mov
std
leave
and
inc
push
scas
call
adc
pop
out
and
sbb
in
cli
cmp
cwde
out
mov
adc
sub
mov
aam
push
xor
cmps
dec
mov
test
mov
(bad)
mov
and
pusha
jmp
mov
das
push
xchg
push
lock
push
adc
push
mov
push
dec
mov
ins
adc
(bad)
bound
loop
dec
add
xor
cmps
dec
adc
(bad)
out
jbe
repz
push
push
aam
ret
inc
(bad)
add
lods
or
push
push
mov
push
pusha
adc
push
xchg
fisttp
adc
mov
mov
ja
loopne
in
lahf
xor
test
jl
push
add
dec
xchg
sbb
mov
fidiv
(bad)
dec
inc
pop
rcr
and
inc
inc
mov
test
aas
imul
inc
jg
fist
add
(bad)
ror
adc
pop
mov
enter
test
(bad)
out
cli
pop
jmp
jl
movs
or
stos
or
inc
pop
add
cli
scas
call
(bad)
fiadd
test
shl
jmp
fcmove
mov
mov
dec
addr16
mov
dec
call
call
ret
adc
mov
mov
ins
cld
ja
cli
or
jle
sti
sbb
dec
test
cmc
mov
pop
call
lock
fcmovb
out
clc
dec
dec
or
cmps
pop
inc
sbb
outs
jmp
sti
or
jl
sub
sbb
adc
jbe
cmp
retf
mov
mov
cmp
adc
xchg
jle
stos
imul
push
xchg
fs
nop
rol
inc
in
ret
xchg
scas
pop
mov
adc
cmp
dec
sub
ds
(bad)
mov
scas
in
inc
inc
jecxz
out
inc
push
adc
aas
dec
stos
sbb
repnz
cs
in
lahf
fnstcw
jecxz
inc
mov
jmp
push
lds
std
or
int3
jp
mov
int
and
inc
nop
rcl
xchg
mov
cmc
xor
and
verw
push
out
notrack
or
daa
jl
movs
and
ret
dec
adc
int3
inc
stos
pop
add
pop
int3
push
pop
or
jmp
pop
cld
scas
sbb
dec
pop
xchg
jl
mov
push
aam
mov
add
sbb
je
not
jo
inc
idiv
pop
mov
aas
inc
dec
mov
mov
pop
add
push
add
adc
out
pop
movs
inc
add
pusha
or
jae
retf
push
repnz
pop
out
adc
jmp
push
push
inc
mov
inc
adc
imul
outs
into
scas
and
add
fist
mov
inc
add
(bad)
mov
mov
int3
add
js
inc
inc
mov
clc
mov
push
js
dec
cmp
js
mov
js
xchg
cmp
rol
dec
sti
cmp
(bad)
xlat
in
addr16
(bad)
jae
call
pop
pop
inc
xor
push
mov
mov
iret
pushf
inc
inc
sub
and
lahf
adc
imul
loope
jb
add
mov
fucomip
add
xchg
cmc
imul
mov
inc
sbb
add
arpl
dec
inc
dec
xchg
(bad)
mov
cwde
xor
ins
ins
ffreep
push
inc
push
adc
mov
int3
not
retf
and
ja
loope
test
(bad)
sti
pop
xchg
sbb
add
or
mov
dec
cwde
and
mov
retf
(bad)
sub
ja
add
nop
js
xchg
xor
test
pop
sti
into
movzx
jg
mov
jecxz
xchg
loope
shr
add
or
ja
loop
(bad)
pop
xor
push
or
push
dec
(bad)
mov
push
cmp
pop
addr16
inc
inc
outs
scas
clc
inc
jne
add
mov
ja
and
pusha
adc
jg
push
mov
call
inc
inc
adc
jne
xchg
pushf
shl
inc
or
or
rcr
fdivp
int
mov
les
std
jae
push
mov
pop
sar
gs
aam
xchg
(bad)
fsubrp
dec
push
les
call
mov
dec
xchg
and
(bad)
push
xor
adc
mov
scas
xchg
add
shl
mov
sbb
push
nop
push
cmps
movs
outs
ss
ins
xor
jecxz
aas
into
and
inc
call
mov
pop
fcomp
ja
cli
push
push
test
and
adc
add
mov
mov
fild
fimul
mov
jmp
and
add
or
push
shr
pop
pop
dec
xchg
aam
xor
and
bound
or
pop
enter
movlps
jmp
push
lds
jle
int3
repz
imul
pop
(bad)
sub
call
inc
push
lock
inc
pusha
outs
xor
dec
movs
mov
loopne
shl
loopne
aas
push
cmps
adc
iret
add
sbb
dec
push
push
inc
jae
pop
mov
(bad)
xchg
lock
push
dec
inc
sbb
and
retf
int
test
loop
add
cld
sti
jge
xlat
dec
scas
add
mov
jmp
aas
push
pop
(bad)
stos
ins
push
enter
ins
xlat
mov
in
(bad)
in
fild
and
das
pop
pop
std
push
fs
fist
ins
push
xchg
cli
loopne
sub
ja
mov
or
mov
pop
lods
mov
(bad)
shr
pop
(bad)
jmp
mov
sub
inc
mov
outs
(bad)
jl
cmp
add
jbe
mov
xchg
rcr
sub
mov
es
iret
ret
inc
inc
push
inc
jmp
sbb
(bad)
out
clc
(bad)
sahf
(bad)
cli
jl
stos
fmul
push
movhps
je
out
(bad)
mov
out
retf
rcr
loop
xchg
dec
dec
(bad)
or
sti
arpl
adc
add
jecxz
xor
ret
mov
or
add
pop
out
and
or
mov
mov
sti
test
cli
sbb
pop
add
push
pushf
aam
inc
mov
(bad)
cld
fiadd
(bad)
push
mov
mul
xor
and
gs
jg
xor
addr16
cmp
mov
enter
out
cmp
add
push
mov
or
fimul
lds
jg
inc
stos
push
push
nop
cmps
cli
add
push
push
pop
iret
pop
mov
inc
fwait
popa
jg
movs
pushf
inc
je
cmps
call
aam
pop
inc
ret
repnz
and
out
mov
aaa
mov
test
jae
add
sbb
in
mov
pop
add
aaa
ds
div
push
std
pop
inc
add
xor
mov
test
mov
test
movs
pop
clc
or
xor
loop
inc
xor
(bad)
call
jns
sub
and
repz
xchg
or
adc
xlat
add
jae
xchg
arpl
mov
pop
push
mov
out
push
pop
push
sbb
jl
dec
sub
jecxz
js
leave
popa
mov
aaa
mov
xchg
and
in
lahf
add
push
xchg
sbb
das
cli
add
dec
adc
pop
ror
jg
or
call
mov
mov
xchg
movs
mov
mov
cmp
(bad)
data16
xchg
sbb
mov
aam
add
jmp
pushf
xlat
(bad)
mov
pop
inc
rol
call
(bad)
pop
sbb
push
add
mov
push
and
pop
xchg
lock
jl
cmp
adc
push
xor
sti
syscall
cs
or
push
cmp
push
pop
jl
adc
arpl
aaa
adc
out
es
lds
jmp
dec
mov
add
cwde
call
jmp
sub
pop
inc
repz
cmp
push
dec
inc
dec
push
or
fadd
lods
add
lahf
sbb
sbb
sti
das
(bad)
sub
dec
sti
pop
shl
xchg
push
jmp
and
cmp
push
dec
xor
jmp
outs
ja
push
outs
es
pusha
and
add
rcr
jl
mov
arpl
pop
sub
(bad)
out
cli
push
mov
test
or
push
out
inc
mov
and
rcl
xchg
or
xchg
je
sub
jnp
int3
mov
mov
es
mov
pop
add
mul
pop
fcom
jmp
fadd
lods
jmp
jg
push
mov
push
aad
mov
mov
cmp
clc
jg
xor
xchg
test
pop
inc
push
pop
ja
in
push
ret
xor
mov
or
jecxz
ja
jmp
mov
(bad)
aam
into
inc
int
pusha
mov
pop
(bad)
call
inc
dec
jge
inc
jbe
xor
scas
inc
push
push
maxps
int
ret
sub
aad
push
addr16
out
dec
test
fidivr
jge
pop
pop
dec
adc
test
out
fs
mov
push
mov
push
or
cmp
aas
push
sti
xchg
ficom
retf
jae
sub
sub
iret
jae
int
add
ja
mov
and
std
(bad)
pop
add
mov
lds
push
pop
std
cs
push
scas
push
out
cmp
add
in
inc
inc
inc
cmps
add
inc
cmp
out
xor
je
dec
pop
call
or
lahf
dec
push
jecxz
add
dec
sbb
call
aas
addr16
dec
(bad)
gs
sti
ror
push
inc
dec
fst
jl
add
arpl
sbb
pop
jb
call
or
add
mov
add
push
add
pop
pop
lods
and
aam
inc
repz
jno
xor
mov
cmp
clc
cmp
outs
aas
inc
fs
jg
pop
or
jmp
mov
push
iret
addr16
aas
pop
js
jno
ins
(bad)
cld
add
and
cli
(bad)
nop
inc
add
retf
lods
mov
movs
lods
xlat
loopne
shr
mov
pop
vsqrtsd
cmp
xlat
push
xchg
(bad)
mov
adc
jo
cmp
aad
(bad)
call
test
push
jmp
adc
jns
add
nop
test
out
mov
sbb
mov
cmc
mov
icebp
pop
call
adc
out
mov
enter
xor
sub
(bad)
js
mov
sbb
hlt
(bad)
iret
inc
rol
inc
jo
arpl
lds
and
outs
ret
and
fnstenv
dec
sub
aaa
push
aam
mov
mov
hlt
add
(bad)
loopne
rcr
repnz
jmp
(bad)
mov
xor
sti
aad
dec
inc
pop
and
das
cmps
dec
or
or
mul
push
pop
cmps
retf
mov
fs
(bad)
fdiv
dec
push
pop
mov
xchg
rol
adc
sub
mov
push
icebp
(bad)
xor
sub
fisub
scas
add
jg
adc
push
icebp
cmp
jg
jnp
and
sub
mov
jb
ret
fs
pop
mov
dec
movs
sti
out
pop
idiv
call
add
repz
dec
in
sti
mov
ret
or
bound
sub
(bad)
pop
xor
pop
loopne
jo
mov
inc
jae
push
inc
adc
test
mov
xchg
ins
pusha
mov
lods
or
inc
xor
ret
cld
push
mov
mov
(bad)
cmp
sub
push
inc
add
inc
ret
adc
jae
jl
inc
dec
jbe
mov
inc
shl
xor
ja
jmp
and
and
jo
sti
out
lds
xor
(bad)
sub
xchg
push
sub
(bad)
jb
sar
ins
add
ret
adc
sub
test
mov
rcr
jmp
ret
pop
mov
cwde
push
cli
imul
rcl
sub
push
call
jle
adc
sub
mov
or
psubd
das
mov
push
xor
inc
arpl
std
fwait
das
ss
jae
push
js
test
mov
mov
pop
gs
pop
adc
cmc
adc
cmp
aas
push
cmp
sbb
mov
je
loop
and
push
imul
inc
jecxz
pusha
and
mov
inc
cld
inc
add
cwde
lock
mov
call
fst
out
add
and
je
scas
ins
sbb
sbb
mov
outs
and
add
mov
dec
push
clc
inc
adc
out
adc
pop
lahf
dec
sbb
jb
and
pop
int
stos
xor
push
inc
jmp
shr
(bad)
mov
sub
lahf
adc
shl
mov
inc
dec
call
inc
pop
mov
push
xchg
cmp
inc
ds
pop
push
mov
cld
sbb
jle
aam
repz
mov
aad
adc
je
(bad)
push
xlat
(bad)
inc
xchg
jg
inc
mov
out
push
(bad)
into
pop
jge
pusha
pop
rol
push
push
push
mov
imul
push
inc
add
mov
and
sub
sar
ss
add
stos
fsubp
ret
pop
ret
adc
or
sar
fbld
xchg
adc
cs
and
psubusb
and
fmul
test
inc
into
stos
mov
dec
outs
adc
push
pop
mov
add
lahf
add
les
xchg
push
cmp
std
ins
jmp
in
out
jg
pop
pop
popa
jmp
fcmovnb
cs
mov
mov
push
call
iret
or
pop
push
mov
cld
je
jecxz
retf
ficomp
ins
xor
sbb
inc
inc
je
xor
ss
cmc
das
or
add
inc
push
push
test
xchg
mov
push
cmps
mov
inc
ret
jg
cs
icebp
fcomi
inc
call
test
adc
aam
jae
ror
imul
push
dec
jmp
or
(bad)
popf
ret
mov
loopne
bsf
push
mov
push
outs
cmp
and
dec
xor
or
ss
pop
mov
lahf
or
inc
cs
sbb
jl
dec
(bad)
outs
add
(bad)
and
mov
fimul
rcl
jo
inc
outs
xchg
cmps
in
push
jae
std
inc
fcomp
ret
jo
pop
adc
in
aas
add
aaa
inc
fld
jmp
sub
out
sub
fild
test
add
sti
dec
hlt
xchg
push
push
add
pop
shr
sar
ror
push
xchg
das
jg
push
adc
mov
cmp
popf
cmps
mov
inc
out
cmp
xor
and
push
stos
sub
and
mov
mov
fisttp
mov
mov
dec
inc
cmp
jp
sbb
add
pop
cld
inc
loop
lods
test
mov
jmp
out
lock
dec
mov
ret
mov
mov
mov
xor
(bad)
jg
jl
pop
inc
push
inc
test
aaa
call
cmp
lds
test
dec
dec
and
add
push
cld
(bad)
fwait
mov
sub
(bad)
jmp
add
xor
mul
lahf
push
sbb
or
push
mov
aas
dec
neg
and
clc
dec
or
xor
mov
sbb
dec
add
add
sub
inc
sub
addr16
outs
outs
(bad)
pop
and
jno
out
scas
mov
aaa
adc
(bad)
aas
xchg
cs
outs
out
clc
aad
pop
inc
iret
mov
add
pop
mov
call
or
lods
pop
sti
(bad)
call
jg
jle
inc
arpl
jmp
iret
inc
adc
mov
ret
mov
lds
lahf
xlat
mov
add
mov
inc
outs
cmps
(bad)
cli
stos
sub
shl
add
add
out
jg
sub
(bad)
xor
imul
pop
add
pop
xchg
push
or
sar
pop
push
or
jg
rol
pop
rol
sar
addr16
and
dec
jecxz
mov
aad
je
or
cmps
(bad)
outs
add
xor
pop
jno
push
out
pop
mov
ja
(bad)
cmp
lds
int3
jb
jae
mov
pop
fmul
or
shl
(bad)
jg
lds
pop
jae
inc
push
mov
(bad)
je
test
(bad)
gs
out
nop
addr16
sti
mov
aas
data16
test
imul
sbb
mul
and
add
mov
ins
nop
hlt
shl
rcr
js
repnz
add
jg
add
loopne
repnz
call
sti
mov
sub
inc
inc
and
test
test
repz
stos
arpl
add
or
add
mov
jmp
popf
push
or
es
add
iret
aam
jns
mov
scas
add
fwait
mov
add
mov
ret
pop
inc
mov
ffree
cmp
xchg
inc
outs
jecxz
rcr
int3
pusha
aam
mov
add
mov
lea
call
mov
push
or
stos
mov
push
fstp
test
mov
cmp
pop
cmp
bound
mov
pop
inc
inc
push
push
not
cwde
xchg
or
cmp
xchg
jg
inc
sbb
push
ret
hlt
push
xchg
jp
fidivr
call
aas
mov
dec
das
xor
add
mov
and
cmp
repz
mov
mov
and
cmps
loopne
dec
xchg
add
(bad)
sbb
push
out
mov
add
xor
sbb
pop
dec
dec
jne
inc
xlat
push
dec
cmp
xor
std
mov
cmc
and
(bad)
jae
call
lock
or
(bad)
aaa
jbe
fs
add
adc
adc
inc
dec
cmp
sbb
add
rcl
xrelease
dec
(bad)
pop
ins
imul
pusha
cmovno
push
add
in
sub
push
jmp
push
cld
les
out
test
(bad)
lahf
out
cmp
retf
fstp
ds
jmp
dec
sub
sbb
xlat
pop
int3
sub
pop
xchg
outs
adc
add
out
mov
xchg
and
cmp
mov
call
in
mov
add
test
scas
(bad)
push
cmp
or
and
in
std
sub
hlt
add
pop
push
sub
push
push
out
mov
push
loop
out
psubsb
out
es
outs
ss
dec
stc
pop
call
and
push
es
bound
inc
push
stos
fs
pop
aam
fldcw
sub
push
mov
inc
inc
pop
mov
sbb
dec
fidivr
jmp
out
pop
out
(bad)
jmp
call
add
mov
stos
ss
imul
aas
jmp
push
inc
js
mov
test
push
cmps
add
add
mov
dec
jg
bound
mov
mov
add
icebp
and
inc
push
inc
xor
add
call
inc
loope
pop
cmp
or
out
jp
sub
mov
dec
out
mov
ret
xor
out
add
add
fdivr
je
mov
lds
(bad)
sahf
dec
mov
mov
push
pop
mov
call
out
test
mov
xor
pop
test
inc
je
xor
js
pop
xlat
rcl
hlt
scas
sbb
xor
mov
jle
pop
mov
mov
mov
pop
test
push
inc
inc
mov
arpl
xlat
dec
pop
pop
xchg
icebp
dec
jmp
inc
aaa
(bad)
add
mov
das
mov
inc
jmp
out
clc
(bad)
retf
inc
or
fs
das
lds
or
pusha
mov
ss
dec
add
pop
mov
push
mov
jae
jo
xor
hlt
and
pop
or
fiadd
enter
test
or
(bad)
cmps
(bad)
pusha
or
outs
xor
pop
jle
xor
jg
or
inc
add
lahf
cld
ret
sbb
movs
scas
jae
(bad)
fisub
mov
clc
(bad)
test
ja
cmovo
lock
imul
loopne
int3
adc
fistp
dec
in
pop
and
push
adc
mov
or
jmp
fcmovb
(bad)
push
cmps
dec
stos
fldenv
inc
arpl
sbb
(bad)
pop
div
das
mov
push
inc
(bad)
(bad)
inc
inc
push
and
add
js
jg
xchg
cmp
cmp
retf
add
push
loopne
adc
add
inc
jg
aad
mov
enter
add
sub
imul
mov
push
inc
add
popa
xor
pop
test
add
popa
cld
pop
add
cmp
mov
(bad)
cmp
int3
neg
jmp
div
jg
sbb
mov
stos
lds
jmp
mov
jp
sub
add
jecxz
mov
adc
inc
mov
and
dec
arpl
sub
push
test
test
pop
out
and
in
adc
call
push
mov
lahf
aaa
push
jo
inc
push
and
pop
mov
or
cmp
mov
call
add
xlat
jmp
ins
imul
sub
adc
jo
inc
xchg
or
inc
or
jmp
sbb
jmp
mov
sub
addr16
inc
out
jg
data16
out
mov
dec
ret
(bad)
mov
dec
add
mov
jle
mov
bound
cli
inc
inc
les
enter
retf
dec
out
popa
cli
jg
cmp
out
fisub
aas
dec
or
pop
mov
xchg
mov
(bad)
aad
mov
add
sbb
inc
int
xlat
imul
scas
(bad)
fisub
jg
jbe
push
out
ss
int
add
ror
and
out
out
mov
add
pop
in
arpl
clc
outs
inc
or
lds
jne
mov
movs
jmp
in
in
sub
test
or
mov
hlt
clc
out
lock
adc
jae
inc
jno
packuswb
inc
ins
dec
sub
je
ss
(bad)
jg
dec
fcmovnu
jmp
lds
out
mov
adc
push
add
and
push
fwait
inc
mov
out
call
pop
jo
pop
imul
jle
push
pop
and
add
fsubr
xchg
aad
or
pop
rcr
(bad)
aas
adc
mov
inc
pop
sar
enter
(bad)
cld
push
adc
inc
idiv
add
jmp
mov
dec
(bad)
fs
add
push
test
and
push
outs
aas
cwde
mov
or
jmp
add
add
dec
mov
sbb
aad
inc
mov
ins
cld
fisttp
jmp
jno
mov
inc
mov
pop
cld
ss
push
sub
std
add
pop
ins
mov
(bad)
add
mov
out
in
aaa
jp
mov
(bad)
xchg
outs
xchg
cli
mov
sbb
test
inc
mov
and
fsubr
adc
push
ss
aam
inc
mov
jl
add
es
dec
(bad)
pop
inc
test
arpl
push
push
js
pop
or
or
dec
dec
xchg
jb
adc
adc
pop
xchg
hlt
inc
xchg
dec
jmp
fcom
mov
rcr
call
aam
jle
inc
push
push
sub
fist
aaa
mov
test
dec
into
inc
(bad)
xlat
ret
xchg
das
jg
neg
iret
dec
test
mov
jl
mov
adc
dec
mov
lds
inc
sar
outs
xchg
test
inc
ja
or
std
pop
dec
clc
dec
pop
add
out
inc
aas
and
ret
sbb
jbe
aaa
xchg
loopne
push
adc
jg
pop
sti
inc
xor
xchg
mov
ret
pop
int
mov
sbb
pop
inc
(bad)
jae
mov
bound
call
out
adc
fwait
fs
aam
pop
inc
rol
mov
aas
push
addr16
inc
das
add
ror
retf
(bad)
jg
and
call
jge
(bad)
adc
jle
es
mov
push
xchg
and
xlat
les
jg
inc
lds
push
xor
leave
mov
dec
sub
adc
push
nop
je
push
or
push
das
pusha
dec
inc
fidivr
addr16
jnp
fist
add
xor
cs
ret
lds
dec
out
inc
jle
sti
sub
fisub
mov
es
inc
mov
push
sahf
test
xlat
addr16
mov
rcr
shr
jb
push
add
stc
jp
ret
xchg
mov
push
aaa
(bad)
pop
mov
fstp
or
fs
or
clc
call
aaa
nop
add
add
call
mov
(bad)
aas
shr
mov
aam
test
fadd
test
add
jmp
repnz
cmp
pop
call
jmp
dec
gs
repz
pop
add
repz
push
vpunpcklwd
push
cwde
and
jae
lea
jl
enter
mov
rol
ficomp
daa
mov
sbb
fistp
addr16
aaa
push
cli
sub
or
fisub
push
mov
inc
push
add
mov
or
loop
test
int
es
pop
push
jmp
dec
cmps
imul
out
scas
push
js
xor
pop
sub
sub
data16
mov
jg
lea
ins
outs
cmp
pop
mov
in
ret
lods
ss
ret
cmp
mov
pop
and
imul
test
push
inc
call
fist
adc
lea
adc
jno
push
lods
dec
mov
add
inc
(bad)
arpl
test
out
mov
push
call
add
push
and
push
aam
es
cmp
mov
clc
scas
xor
dec
(bad)
cld
cmp
mov
or
scas
sub
std
loope
add
inc
sbb
push
jnp
jg
lahf
xlat
out
sub
in
dec
lea
and
push
cmp
stos
out
aaa
(bad)
(bad)
mov
loop
lock
dec
movs
jae
outs
add
jae
mov
mov
aas
or
add
dec
gs
adc
jl
mov
les
add
adc
ret
(bad)
adc
outs
test
ror
mov
ret
xor
push
sbb
pop
jmp
and
mov
test
fiadd
je
mov
ss
out
mov
pop
ja
ror
mov
dec
cmp
cmp
mov
test
or
xchg
push
inc
mov
and
in
cli
stos
add
xchg
loope
imul
push
mov
xor
pop
(bad)
popf
rol
das
hlt
mov
xchg
iret
xor
xor
jno
sub
neg
fcomp
sti
jg
add
leave
jecxz
cli
je
aaa
pop
pushf
inc
jg
or
adc
ret
or
xchg
xchg
jo
pop
dec
pop
or
mov
push
ret
jmp
push
push
loope
add
pop
jg
push
iret
inc
cmp
out
popa
test
shl
and
inc
js
xor
push
inc
loopne
dec
pop
xor
inc
pop
pop
jmp
fiadd
inc
inc
and
push
sbb
inc
rol
loop
outs
inc
mov
add
inc
push
sar
sub
inc
mov
rcr
ficomp
ins
adc
pushf
bound
jg
bnd
mov
out
ret
(bad)
out
ret
xchg
or
lds
add
(bad)
out
aas
out
es
imul
add
add
mov
or
sbb
dec
add
sbb
popf
mov
inc
mov
jg
test
mov
jl
test
pop
mov
ret
dec
pop
ret
je
xchg
movs
das
je
add
push
je
retf
or
push
(bad)
mov
push
and
out
xchg
mov
(bad)
pop
inc
or
mov
lock
add
inc
add
mov
jle
sbb
xchg
push
fdivr
les
stos
dec
test
ins
das
aas
out
dec
add
pop
push
mov
and
sti
inc
mov
xlat
inc
fcos
aas
adc
mov
jne
adc
or
data16
or
mov
add
inc
div
test
cld
(bad)
jle
std
jmp
dec
mov
push
mov
pop
cld
or
adc
push
push
call
(bad)
mov
add
sbb
imul
ja
mov
jmp
icebp
dec
mov
sbb
clc
add
add
cs
dec
mov
lods
mov
inc
pop
je
push
mov
movs
lods
cmp
or
xor
sbb
(bad)
fild
cmp
adc
push
call
std
fmul
or
jo
nop
mov
shl
je
(bad)
sub
cli
push
sbb
jp
je
jp
popa
xchg
jle
xchg
mov
out
in
movs
cmc
inc
adc
xor
cmp
and
inc
mov
dec
jmp
jg
fs
mov
push
call
(bad)
xlat
xor
sub
mov
jmp
mov
and
call
test
ror
mov
aaa
test
and
pop
sub
sbb
xchg
arpl
scas
sub
mov
outs
dec
sbb
es
not
clc
xor
int3
sahf
mov
ds
xor
mov
cs
ds
out
out
aas
fiadd
and
jae
rcr
adc
and
adc
bswap
lock
rcr
out
jle
mov
adc
pop
xor
fldl2e
mov
sti
pop
push
mov
jmp
inc
pop
ret
inc
sbb
and
or
xor
aas
mov
cmc
inc
jbe
jge
std
iret
sbb
inc
test
or
hlt
cmp
fidiv
mov
aam
pop
jmp
or
call
and
into
push
add
pop
push
inc
xchg
in
lods
jmp
dec
jae
pushf
add
sub
dec
jnp
add
enter
(bad)
jg
sub
rcl
xor
leave
inc
setl
inc
sub
dec
cmp
mov
pop
scas
fimul
cwde
cmp
mov
mov
stos
add
add
adc
jae
sbb
jo
push
in
mov
mov
xchg
adc
inc
cmp
xor
inc
pop
sbb
cmps
pop
inc
push
or
inc
and
ja
jmp
sbb
mov
push
dec
add
xchg
push
jo
cmp
sub
je
dec
in
cmp
scas
test
jp
mov
or
add
or
add
inc
mov
add
call
or
mov
mov
and
sub
std
xchg
inc
pop
test
jmp
std
arpl
push
or
jmp
dec
mov
clc
mov
or
mov
je
jmp
push
xchg
inc
arpl
pop
fidivr
xor
cld
jbe
or
inc
out
fild
sub
jg
enter
nop
gs
or
push
shr
cs
add
iret
test
fbld
out
push
pop
inc
out
sti
out
stos
movs
and
add
sbb
sbb
mov
outs
not
push
xchg
add
pop
les
jg
jl
mov
jb
les
push
cs
fst
ret
xlat
sbb
mov
jle
add
and
call
je
add
outs
xor
inc
sub
rcl
mov
and
out
nop
cmps
mov
jno
iret
mov
movs
mov
add
jmp
jno
pop
addr16
pop
mov
clc
pop
inc
inc
loop
cmp
push
adc
ss
xor
sti
add
cmp
mov
test
cmp
push
daa
inc
pop
pop
movs
push
ss
jge
pop
sbb
lds
lods
jmp
stos
sbb
sub
sub
test
out
(bad)
and
aas
nop
push
loopne
inc
sub
js
pop
sbb
mov
dec
test
ds
aas
lock
add
or
mov
jmp
sbb
dec
mov
bound
mov
lods
dec
push
shl
push
cmp
test
mov
add
dec
ror
(bad)
loop
inc
and
sub
mov
fstp
ja
ins
arpl
pop
add
loop
out
scas
mov
and
sub
mov
(bad)
call
dec
mov
enter
(bad)
mov
mov
pop
call
cmp
mov
fsubr
push
fs
fldz
mov
fst
aam
or
inc
shl
(bad)
jb
add
ret
hlt
ins
push
sar
xchg
mov
and
pop
inc
mov
cmp
inc
outs
pusha
daa
mov
push
pop
add
mov
pop
or
xchg
(bad)
jno
(bad)
dec
sti
dec
popa
xor
(bad)
mov
(bad)
ins
mov
pop
or
call
xor
gs
das
mov
aaa
add
nop
inc
imul
push
ins
fcom
and
scas
jmp
aas
inc
cmp
clc
mov
mov
clc
inc
jg
xor
lods
out
mov
les
add
idiv
adc
mov
inc
ins
loopne
data16
call
cmps
movs
pop
fcomp
dec
cmp
ret
mov
and
test
jmp
inc
inc
adc
inc
popf
sub
push
dec
xor
fsubr
or
xor
adc
js
pop
mov
pop
jnp
add
ja
adc
pop
inc
sbb
call
out
xor
xor
sbb
xor
aaa
push
clc
add
add
(bad)
mov
dec
out
dec
clc
adc
(bad)
inc
xchg
imul
das
sbb
(bad)
lods
jmp
sub
mov
inc
(bad)
sub
test
mov
(bad)
inc
add
jae
shr
mov
(bad)
fld
or
loop
adc
nop
push
dec
outs
or
sbb
mov
call
mov
shr
pop
push
(bad)
jmp
push
cli
mul
and
inc
das
pop
push
mov
xchg
lock
ror
mov
xor
je
or
outs
rcl
clc
adc
add
cli
mul
fwait
ss
mov
pop
mov
ret
aas
adc
imul
jge
add
dec
mov
shr
pusha
bound
dec
mov
test
or
add
or
out
xor
cld
inc
(bad)
push
je
outs
or
dec
aas
pop
push
or
cmp
jg
cmp
int3
lock
xchg
mov
inc
(bad)
mov
scas
sbb
jl
aam
ret
rol
retf
pop
pop
dec
dec
addr16
mov
pop
and
add
mov
push
dec
pop
cwde
add
mov
stc
push
sbb
inc
hlt
push
inc
push
adc
jp
cmp
sub
and
add
ins
sub
shl
fisubr
cmp
data16
sub
cld
pop
dec
pop
(bad)
mov
mov
and
je
mov
movs
sub
add
inc
je
jle
loopne
and
imul
dec
stos
(bad)
int3
pushf
cmc
inc
add
adc
lahf
rcl
push
inc
cld
mov
mov
pop
(bad)
retf
sahf
mov
cdq
aam
add
inc
push
inc
je
scas
mov
ror
jmp
(bad)
and
rol
jb
jmp
dec
pop
and
scas
or
(bad)
stos
push
jl
xchg
mov
push
aas
inc
out
or
(bad)
pop
aas
test
in
std
shl
cmp
adc
std
bound
mov
add
or
not
cwde
push
rcr
mov
sub
dec
enter
int3
test
stos
adc
and
inc
daa
mov
scas
dec
cli
mov
aas
rcr
mov
fsubr
je
or
sub
dec
dec
pop
jmp
ror
push
stos
hlt
dec
add
mov
mov
adc
inc
scas
in
dec
lea
push
pop
jo
fimul
cmp
mov
xor
adc
aaa
mov
sbb
call
mov
(bad)
outs
mov
mov
clc
mov
jl
mov
or
push
inc
sbb
xchg
std
mov
ret
inc
pop
std
lods
pop
dec
mov
std
outs
loop
adc
retf
push
add
inc
repnz
enter
fs
gs
pop
ja
mov
icebp
(bad)
and
inc
jg
call
pop
in
or
inc
sbb
outs
ret
test
out
ss
test
jae
push
xchg
xor
or
rol
cmp
fmul
jne
sahf
mov
adc
dec
mov
pop
aam
mov
aaa
pop
and
(bad)
fld
aam
inc
push
sub
and
shr
cmp
(bad)
repz
xor
xchg
push
cmp
inc
xor
out
fisttp
mov
aas
sbb
ror
add
ret
(bad)
jg
clc
dec
xor
push
mov
push
std
pop
repz
cdq
mov
mov
(bad)
(bad)
and
mov
add
movlps
push
push
(bad)
adc
scas
loope
sbb
out
cmc
and
mov
ror
lock
add
cmpxchg
jmp
dec
cld
inc
or
dec
data16
(bad)
jmp
frstor
outs
(bad)
mov
ror
xor
xlat
mov
pop
imul
arpl
lock
inc
test
mov
mov
mov
mov
cmp
js
inc
push
inc
(bad)
jmp
add
jle
add
jmp
add
add
loope
popf
js
jp
cwde
inc
adc
mov
push
mov
sub
jg
jmp
bound
mov
push
gs
push
jmp
and
push
das
add
push
(bad)
outs
dec
pop
lds
(bad)
jbe
repz
scas
cmp
sub
mov
mov
jbe
xor
gs
dec
mov
pop
ja
repz
cmps
ret
ret
adc
int3
jl
adc
and
cld
push
adc
ins
lock
sbb
jle
jmp
(bad)
xlat
sub
push
inc
fnstenv
out
pop
sub
aam
lock
push
mov
or
dec
call
push
test
pop
aas
inc
cmc
push
and
out
inc
enter
push
and
or
lds
push
ret
mov
ret
ss
and
out
sub
data16
outs
es
sub
add
cmovae
pop
fild
aas
adc
mov
dec
mov
or
imul
cmp
(bad)
dec
xchg
sti
scas
inc
and
push
add
sbb
gs
arpl
dec
cs
pop
jg
xlat
mov
fsubr
nop
je
inc
std
cli
xchg
je
or
out
fs
inc
jl
dec
push
call
inc
pop
mov
push
push
daa
mov
mov
pop
push
adc
mov
mov
xchg
adc
rcr
mov
and
inc
pop
fidiv
cwde
inc
bnd
mov
(bad)
cld
xor
and
jmp
or
test
jmp
test
(bad)
jecxz
push
fisttp
dec
push
fdiv
cmp
jle
jae
ins
mov
in
(bad)
mov
push
sbb
jae
arpl
inc
or
pop
mov
adc
neg
push
xchg
cld
dec
add
inc
ret
pusha
iret
adc
jg
out
mov
pop
inc
(bad)
(bad)
idiv
pop
mov
mov
scas
and
push
fcmovu
adc
fsubp
test
ins
imul
rol
sbb
xor
and
inc
and
push
pop
jp
rol
push
sbb
inc
retf
js
or
inc
add
not
addr16
imul
push
mov
jbe
adc
lea
pop
pop
rol
inc
push
dec
pop
dec
shr
arpl
push
push
loop
add
enter
dec
loopne
adc
clc
aas
or
out
shl
loop
mov
inc
por
lahf
aad
jmp
mov
mov
shr
add
dec
push
aaa
xlat
sti
aad
cli
dec
loop
push
inc
xchg
xor
jg
scas
pop
inc
pop
pop
mov
jae
sub
in
inc
mov
ror
test
jecxz
data16
loopne
adc
clc
outs
ret
xlat
push
or
inc
stc
(bad)
pushf
and
and
std
(bad)
fs
lds
jo
int3
cmp
or
fild
mov
daa
lds
mov
sbb
add
pop
mov
clc
inc
cld
dec
in
data16
out
adc
mov
sbb
in
adc
cwde
sub
ret
ret
jge
aaa
imul
or
xor
mov
push
(bad)
adc
adc
jecxz
mov
loope
and
je
push
jae
mul
inc
mov
iret
mov
dec
push
sub
arpl
pop
ds
sub
xor
pop
(bad)
jae
fadd
lock
call
xor
test
xchg
dec
jbe
inc
add
je
inc
mov
add
and
jp
dec
pop
cmp
jo
push
nop
adc
jbe
push
div
inc
repz
mov
adc
add
sub
push
xor
pop
xor
xor
fistp
or
mov
mov
mov
daa
in
pop
pusha
sar
inc
push
mov
addr16
and
and
or
pop
adc
pop
inc
aas
mov
clc
nop
add
jns
sbb
mov
ja
jg
inc
je
mov
mov
(bad)
bound
and
mov
add
popa
sub
dec
stos
mov
sbb
stos
sub
pop
adc
aas
inc
jge
inc
cmp
jg
(bad)
push
xor
pop
cmp
arpl
add
out
jne
adc
jecxz
sbb
int3
aas
inc
movs
mov
pop
cmps
jle
test
push
stos
arpl
sti
adc
cli
pop
adc
shl
push
add
repz
(bad)
adc
(bad)
push
push
(bad)
or
ins
and
pop
leave
mov
loop
pusha
xchg
aaa
addr16
stos
mov
lock
and
xchg
adc
test
inc
xchg
mov
pusha
jnp
mov
out
push
xor
cmp
dec
lea
sub
loopne
int
add
arpl
(bad)
inc
adc
arpl
(bad)
outs
push
shl
pusha
inc
mov
pop
mov
aas
dec
js
jmp
imul
imul
jmp
dec
mov
xor
(bad)
and
mov
sti
ins
dec
mov
mov
in
cmp
jp
inc
loope
pop
aaa
jo
(bad)
dec
xchg
ret
retf
lods
push
or
pusha
mov
mov
xchg
(bad)
push
jmp
stos
pop
sbb
mov
pop
das
and
jb
int
out
cwde
gs
or
inc
fcom
aam
inc
(bad)
icebp
(bad)
mov
sub
fcmovb
mov
in
ins
jnp
mov
jp
icebp
inc
(bad)
cmp
ror
pop
inc
fbstp
addr16
call
mov
fist
mov
shr
clc
lahf
ja
jae
cld
fwait
push
in
xchg
imul
dec
ds
sbb
loopne
lea
add
mul
and
mov
push
ins
add
sti
adc
(bad)
pop
(bad)
sub
add
push
mov
mov
fimul
out
ret
jg
mov
pop
pop
lods
arpl
icebp
inc
out
add
or
ret
fcmovnbe
(bad)
je
inc
(bad)
xchg
adc
pop
cld
cmp
mov
or
inc
jle
clc
(bad)
mov
cli
je
mov
popa
pop
outs
(bad)
and
jae
add
cdq
icebp
cmps
sbb
or
cmp
aaa
call
pop
cwde
push
inc
fsin
stc
outs
cmp
dec
aaa
xchg
push
sbb
call
mov
mov
mov
jne
test
call
jecxz
paddd
dec
sar
sti
icebp
jg
add
add
xchg
mov
or
pop
add
dec
adc
clc
(bad)
cld
call
add
push
add
imul
out
imul
outs
pop
and
stos
mov
sti
dec
jo
in
es
out
fsubr
(bad)
ins
sub
inc
jae
xor
js
enter
neg
out
bound
push
pop
mov
lods
pop
or
dec
scas
push
stos
(bad)
(bad)
fild
(bad)
push
fisttp
and
dec
xchg
movs
ret
pushf
call
shl
hlt
inc
pop
lds
fmul
add
or
mov
xor
daa
mov
(bad)
pop
mov
dec
mov
pop
push
inc
and
movs
je
out
movs
xchg
icebp
push
std
pop
sti
add
mov
jg
inc
dec
aas
clc
call
and
fs
dec
mov
std
int
pusha
push
push
ret
(bad)
push
ins
jb
xor
mov
lods
sbb
push
pop
dec
xchg
sub
pop
aaa
adc
mov
das
xor
or
pop
ret
jno
inc
std
scas
mov
mov
sti
sub
lahf
and
xor
fild
or
mov
push
xchg
test
sub
xlat
std
adc
push
adc
int
shl
rcr
xchg
xchg
push
xlat
outs
xor
ret
in
mov
addr16
into
adc
fwait
sub
jl
rol
ret
xor
xchg
jle
(bad)
out
add
inc
adc
lea
mov
xor
dec
pop
icebp
push
call
push
sbb
or
ja
xor
push
dec
ss
arpl
inc
ja
outs
loop
sub
sub
cli
(bad)
jmp
sbb
dec
or
test
mov
into
fs
ret
jbe
push
addr16
fistp
dec
out
jno
and
pop
lock
push
mov
push
sahf
(bad)
aad
mov
push
and
mov
sti
sbb
gs
outs
inc
movs
inc
je
std
aaa
aam
ja
fsub
or
ss
inc
cmps
push
loope
cmp
stc
in
pop
inc
xchg
fdivr
pop
das
mov
(bad)
test
icebp
push
cmp
call
pop
movs
jp
push
aad
(bad)
je
(bad)
or
dec
rol
inc
or
idiv
adc
inc
mov
es
mov
mov
push
mov
pop
inc
loop
pop
pop
movs
sbb
lea
fsubrp
out
and
jo
and
cmc
jno
mov
lsl
fs
xchg
mov
add
add
mov
inc
inc
mov
(bad)
cmps
pop
out
push
jb
sub
jo
pop
push
add
repz
xor
add
imul
add
pop
je
adc
add
outs
cmp
cmp
call
and
cld
and
pop
adc
pop
or
xor
sub
std
xlat
and
pop
dec
sub
mov
adc
test
mov
pop
fimul
mov
cmp
or
dec
inc
(bad)
and
or
inc
out
ret
inc
xor
jb
sti
mov
dec
mov
inc
pop
push
in
iret
rol
pop
pop
push
mov
inc
push
retf
std
mov
test
cld
pusha
push
push
adc
sub
jl
xor
or
push
add
push
xor
or
loopne
stos
test
push
and
scas
movs
add
shr
sbb
fwait
xchg
and
inc
call
xchg
jp
mov
and
jg
push
adc
mov
cmc
jae
mov
add
push
enter
xor
pop
aas
push
pop
shl
push
xor
xlat
ret
loopne
nop
pop
pop
ds
mov
and
pop
sub
adc
inc
ficom
add
les
mov
and
pop
pop
xor
rol
shl
imul
js
or
pop
call
xor
dec
fbld
les
push
fisub
pusha
add
jmp
push
sahf
(bad)
aad
pop
test
(bad)
(bad)
push
or
adc
push
pop
push
push
and
jecxz
scas
dec
adc
aas
inc
in
mov
xchg
daa
jno
push
mul
int
(bad)
fs
or
inc
fwait
enter
mov
out
adc
pop
(bad)
(bad)
(bad)
cmp
add
adc
inc
cmp
jno
push
ror
or
(bad)
aas
inc
add
add
call
mov
dec
cmp
jnp
cmps
sbb
sbb
mov
mov
push
cmp
icebp
sub
pop
dec
dec
adc
dec
leave
scas
ss
test
aaa
mov
add
add
out
mov
je
push
ins
jl
push
(bad)
pop
mov
jmp
dec
add
outs
mov
dec
sbb
aad
mov
xchg
arpl
xchg
ficom
jno
and
mov
outs
test
bound
add
xchg
pop
and
mov
mov
sub
mov
dec
push
or
cld
inc
mov
push
sub
sti
add
dec
mov
outs
dec
mov
jl
popf
jne
shl
inc
and
mov
add
cs
movs
fild
jecxz
repnz
pop
ret
scas
xchg
push
mov
push
dec
mov
sbb
test
js
xchg
and
sub
(bad)
pop
dec
fcmovnb
push
(bad)
mov
js
jae
add
push
sar
pusha
bound
bound
(bad)
ja
push
add
les
or
outs
mov
adc
ins
xlat
iret
mov
adc
std
out
aaa
sbb
sar
mov
inc
add
or
mov
push
add
(bad)
xor
loop
ja
fidiv
je
jle
fstp
adc
lahf
movs
lods
outs
out
inc
out
jle
mov
aas
push
inc
ret
cld
cld
push
test
scas
add
ret
shr
test
outs
loop
mov
xchg
iret
mov
stc
add
mov
add
and
js
and
sbb
inc
mov
les
cld
push
mov
push
mov
push
and
push
aad
adc
or
test
(bad)
mov
xchg
xchg
add
mov
fcmovnbe
push
dec
sbb
mov
lods
inc
mov
cwde
aad
clc
push
std
adc
push
ret
inc
push
push
mov
call
aam
xchg
add
mov
aam
jg
push
shl
test
cmc
add
cmp
dec
test
ins
mov
xchg
and
outs
repz
sub
mov
int
jl
xchg
add
nop
es
and
cmp
jbe
movs
adc
out
xchg
adc
adc
leave
jmp
in
jo
or
cmp
add
mov
fcom
lock
cmp
mov
mov
out
xlat
dec
xor
adc
je
push
or
and
adc
xchg
ss
jl
cmp
inc
aas
or
inc
lods
sub
call
lahf
inc
cdq
out
mov
cmc
inc
sbb
rol
jp
xchg
pop
push
sub
arpl
(bad)
fisubr
xlat
bound
mov
arpl
jecxz
add
xor
jg
cwde
sbb
bound
xor
imul
xor
icebp
add
rcl
push
add
(bad)
repz
call
pop
push
pop
and
mov
inc
repz
fisttp
or
mov
mov
jle
cs
inc
test
add
ret
xor
adc
add
and
sti
cld
mov
call
cmps
pop
jo
test
test
cmp
push
pop
inc
pop
or
imul
mov
lock
cmp
mov
sti
inc
ins
sti
outs
adc
outs
les
xor
cld
add
add
add
das
mov
bound
mov
aam
mov
jae
std
jg
mov
adc
dec
sbb
sub
sbb
add
adc
and
add
and
ins
sti
es
dec
lahf
add
mov
pop
cld
cmp
aaa
in
xchg
ret
adc
xchg
jg
or
pop
fmul
icebp
mov
and
mov
out
inc
fidiv
jg
push
add
xor
mov
jp
ret
cmp
xor
sub
and
mov
rcr
push
or
inc
data16
or
jae
je
mov
cmp
gs
jae
movs
sbb
cld
test
push
pop
add
jmp
sbb
or
out
out
outs
inc
and
fmul
(bad)
dec
adc
in
popa
mov
add
add
and
cli
dec
out
dec
lahf
test
or
xor
loopne
mov
cmp
scas
xchg
mov
sar
cwde
xor
aas
sti
push
add
popa
mov
sub
dec
arpl
mov
(bad)
mov
fild
outs
xor
inc
push
neg
xchg
xor
and
pop
pop
fimul
aaa
jne
clc
or
jecxz
mov
mov
ss
out
fcmove
jae
xlat
inc
inc
stos
(bad)
inc
inc
add
mov
ja
pop
jo
xor
sbb
or
push
adc
shufps
(bad)
jg
and
ja
call
pop
and
ins
mov
mov
test
add
shl
mov
or
pop
xor
jmp
xchg
mov
xchg
jge
add
stos
add
xlat
or
aas
jmp
add
sti
fdivr
inc
mov
lock
push
jae
sti
add
jmp
mov
push
adc
cld
jp
push
mov
inc
or
push
jo
popf
(bad)
cmp
add
(bad)
cld
add
pop
in
adc
dec
adc
ja
jbe
sti
sbb
push
lock
out
iret
and
jmp
std
into
sbb
clc
push
push
fisttp
add
cmp
fld
inc
cmps
mov
ret
pop
ret
jb
cmovbe
adc
jp
push
out
ds
mov
fbld
pusha
push
ret
cli
push
jp
pusha
push
mov
add
je
or
adc
xor
add
dec
(bad)
jmp
(bad)
jg
lods
xchg
add
call
hlt
or
ins
push
cmc
or
dec
push
out
inc
jmp
(bad)
(bad)
inc
and
jmp
arpl
mov
or
push
ret
mov
mov
ret
pushf
add
and
push
rol
or
or
xlat
pop
inc
popa
or
jo
add
gs
mov
jae
push
push
in
inc
les
std
xlat
add
lahf
cmp
in
and
pop
jle
xor
stos
and
push
out
push
outs
inc
cmp
inc
xor
std
add
pop
rcr
ja
pushf
out
in
jg
push
or
ss
xlat
ss
repz
aas
inc
mul
and
cmc
mov
jno
(bad)
fidiv
push
mov
xor
mov
jg
jmp
in
ins
js
add
xchg
pushf
adc
out
mov
jmp
les
ins
iret
push
push
retf
sbb
les
dec
fsub
push
push
xor
jb
fadd
mov
mov
es
mov
mov
inc
movs
outs
mov
fwait
sub
ds
(bad)
jae
loopne
out
std
cmp
bound
mov
and
stos
mov
mov
and
call
cld
fs
arpl
push
push
mov
out
push
mov
pop
jg
adc
inc
out
ficom
arpl
imul
sub
fstp
push
(bad)
(bad)
jo
xchg
inc
pop
push
test
mov
or
sub
push
bound
lahf
enter
jbe
aad
mov
test
mov
inc
arpl
fadd
cld
push
loopne
(bad)
(bad)
push
xchg
ret
adc
or
add
add
arpl
pop
sub
mov
inc
sti
repz
cmp
nop
cmp
pop
les
xor
int3
cmps
add
xchg
call
mov
std
push
je
sub
mov
aad
mov
mov
je
dec
xlat
je
cli
ins
call
dec
mov
js
push
fild
jp
movs
leave
pushf
jbe
pop
(bad)
mov
(bad)
arpl
movs
xchg
test
pop
ss
and
inc
test
adc
pop
add
call
es
add
add
jb
mov
(bad)
pop
loop
iret
test
dec
inc
test
nop
pop
mov
add
pop
fisubr
mov
mov
fs
fs
mov
(bad)
in
pop
adc
adc
mov
mov
test
cmp
aam
jle
cmp
rol
jl
pusha
arpl
or
in
repz
pop
cmp
out
jp
pop
fistp
dec
sbb
inc
out
imul
fisttp
adc
call
inc
add
xadd
push
(bad)
fild
push
xor
cmpxchg
push
xchg
ss
xchg
ret
rol
cmp
loop
lock
or
dec
addr16
call
mov
pop
loopne
lahf
clc
mov
add
fs
pop
mov
std
inc
adc
cld
retf
(bad)
movs
movs
mov
dec
jne
call
push
mov
push
pop
fwait
pop
inc
stos
movs
dec
jle
call
add
push
mov
jnp
mov
adc
jg
jmp
cmp
adc
add
(bad)
out
das
dec
inc
push
aam
movs
mov
inc
add
rol
fs
addr16
inc
loope
cld
or
(bad)
xor
or
mov
mov
divps
and
rol
push
mov
retf
add
dec
loope
imul
test
(bad)
not
call
dec
push
(bad)
pop
adc
dec
mov
gs
aad
ret
and
or
inc
or
xchg
scas
jg
shr
jae
xlat
jmp
adc
lock
inc
aas
sti
mov
push
nop
and
dec
pushf
pop
add
sbb
ret
ret
cmp
(bad)
adc
jnp
retf
pop
test
(bad)
mov
test
fwait
pop
mov
mov
(bad)
jb
mov
cs
add
and
rcr
mov
mov
pop
mov
ret
adc
jb
push
cwde
inc
call
(bad)
jg
mov
add
push
add
aas
cmp
inc
cmc
addr16
ja
rol
and
or
push
pop
inc
inc
fs
pop
in
lock
out
das
and
inc
test
ror
and
or
and
xchg
cmp
inc
pop
dec
std
call
cmp
push
mov
dec
dec
cmp
mov
add
sub
cli
(bad)
jb
enter
mov
retf
push
sbb
in
add
pop
jp
add
ret
push
lahf
adc
inc
pop
or
xchg
xchg
dec
dec
xor
xor
pushf
push
pop
cmc
or
fnstcw
pop
mov
dec
retf
pop
std
mov
out
ds
pmovmskb
add
test
scas
lds
mov
push
sbb
sub
inc
hlt
je
jmp
rcr
(bad)
jmp
sti
test
out
inc
out
push
add
cmp
stos
jno
(bad)
std
and
jae
add
mov
ss
add
sub
inc
mov
shr
inc
fs
test
mov
inc
mov
inc
push
cmps
xor
or
pop
shr
xchg
mov
into
or
cmp
lock
dec
sti
retf
mov
mov
sub
ss
inc
(bad)
in
mov
xor
sbb
inc
fst
sub
movs
jmp
jl
or
lahf
dec
push
jmp
mov
or
mov
and
pop
ins
loopne
or
mov
xor
(bad)
pop
dec
(bad)
das
fild
rcr
mov
pop
ins
js
jae
adc
pop
mov
retf
xchg
xlat
(bad)
jg
loop
hlt
inc
iret
inc
aam
das
xchg
add
adc
arpl
adc
in
(bad)
jmp
test
(bad)
cmc
idiv
popa
inc
pop
je
sbb
dec
mov
pop
push
rol
into
out
sti
ja
clc
or
add
or
pop
ret
add
rol
push
cli
mov
aas
repz
dec
std
adc
repz
dec
out
ficomp
xchg
mov
mov
outs
aas
sbb
cli
or
sub
or
fisttp
test
inc
jle
clc
pop
test
in
sbb
je
test
mov
mov
dec
push
std
rcr
mov
pusha
cwde
mov
ret
cmp
jg
xchg
lock
aad
mov
jns
inc
iret
pop
mov
sub
or
js
adc
jg
icebp
popf
mov
shl
mov
add
aad
outs
cld
call
cmp
pop
(bad)
in
aas
xchg
inc
(bad)
jg
jmp
cmp
or
loopne
es
gs
jp
adc
(bad)
mov
or
dec
out
mov
jb
sti
cld
test
(bad)
cli
push
mov
ret
out
out
dec
ins
loop
repnz
or
cmp
inc
xchg
mov
sbb
sub
mov
jg
mov
jmp
xchg
add
je
pop
cmp
inc
(bad)
imul
inc
and
std
push
jmp
inc
xor
push
xchg
mov
es
bound
lock
(bad)
mov
sti
aas
gs
pminsw
retf
or
jmp
retf
movs
push
fisubr
add
jl
inc
fmul
(bad)
jmp
or
pusha
or
aam
xchg
cld
sbb
xchg
or
(bad)
sub
outs
or
call
pop
inc
mov
or
mov
bound
push
inc
push
push
nop
cmc
in
cmps
sub
pusha
mov
test
cmp
loopne
add
jge
fild
repnz
dec
inc
out
outs
ltr
aaa
jae
push
push
(bad)
pop
mov
arpl
add
std
pusha
add
add
and
imul
movs
mov
inc
pop
and
push
mov
jmp
xor
lahf
loop
(bad)
mov
mov
inc
mov
adc
cmps
inc
dec
dec
sbb
push
pop
mov
rcl
mov
nop
(bad)
mov
or
pop
sbb
pop
pop
mov
in
add
inc
inc
and
rcr
loopne
(bad)
aad
pop
xchg
clc
fwait
push
add
cs
push
xor
out
or
pusha
xor
push
jae
pop
dec
jne
xchg
inc
mov
xlat
adc
add
mov
jecxz
shr
mov
pop
data16
retf
pop
ret
call
hlt
or
shl
fiadd
sbb
arpl
aam
ror
inc
repz
xchg
xor
sub
scas
jmp
hlt
scas
out
aam
add
inc
jp
push
inc
out
dec
outs
mov
cmp
rep
jecxz
cwde
or
scas
(bad)
(bad)
fwait
pop
inc
add
add
ss
adc
inc
ret
cmp
in
pop
out
add
adc
call
jg
dec
jg
out
push
sub
xor
scas
sbb
mov
repz
inc
dec
test
pop
xchg
jne
arpl
pop
dec
and
outs
xor
push
clc
lahf
rol
push
lock
mul
ret
scas
jl
inc
cmp
pusha
mov
inc
rcl
cld
imul
int
pusha
fisttp
and
js
lock
xor
inc
dec
das
and
je
jae
cli
(bad)
push
icebp
inc
rcr
scas
sub
mov
cmc
arpl
adc
inc
push
retf
inc
pop
cld
(bad)
in
and
jae
addr16
das
jae
repz
xor
push
pop
inc
mov
jg
imul
mov
xchg
mov
pop
pop
cmp
push
pop
push
dec
adc
add
sub
dec
jecxz
bswap
jb
in
(bad)
fisttp
call
inc
dec
dec
sti
fld
xchg
push
add
jno
addr16
inc
pop
dec
ins
(bad)
mov
adc
cmps
int3
rol
outs
cmps
aaa
jge
pop
xchg
daa
dec
jl
mov
mov
sub
mov
inc
repz
popa
aam
out
cs
(bad)
sti
mov
and
inc
mov
xchg
or
(bad)
sti
push
push
loop
xor
adc
les
pop
int3
outs
call
add
std
push
jle
pop
ret
ficomp
pop
jl
pop
add
mov
dec
call
test
push
adc
and
dec
mov
dec
lock
pop
xor
adc
sahf
mov
je
adc
push
push
lods
push
mov
push
test
stos
sub
jbe
pop
push
jno
adc
pop
inc
stos
inc
push
inc
cld
cmp
jmp
sar
mov
(bad)
jbe
pop
pop
into
push
xchg
and
rol
inc
xor
push
push
sub
sbb
inc
add
pop
pop
mov
mov
dec
das
inc
pushf
and
in
jmp
fcom
dec
pop
cmc
(bad)
rol
icebp
mov
xchg
jge
js
fbstp
das
aas
xor
jo
daa
xor
push
fwait
sub
ds
push
clc
add
xor
push
add
sub
sbb
push
add
or
inc
pop
aam
dec
pop
addr16
dec
mov
call
je
out
adc
mov
sahf
inc
dec
dec
dec
loop
or
call
add
ret
inc
push
pop
jmp
repz
sub
cmc
push
scas
dec
mov
(bad)
sbb
ret
jmp
mov
and
pop
xor
mov
sub
mov
arpl
push
(bad)
mov
sbb
pop
inc
add
imul
or
ret
shl
out
outs
cs
mov
push
pop
dec
fadd
ins
test
push
imul
mov
jg
hlt
mov
(bad)
out
(bad)
mov
sbb
push
xor
push
test
jle
stos
inc
mov
je
enter
(bad)
mov
or
pop
jnp
in
add
(bad)
rol
jbe
add
mov
sahf
and
mov
add
push
xor
add
mov
mov
inc
xor
aas
out
pop
paddd
inc
or
cmp
gs
fisub
cmp
cwde
xchg
xor
dec
ins
sbb
std
push
add
lahf
mov
mov
test
sub
xchg
outs
das
and
cmp
lods
add
dec
add
dec
ret
push
or
mov
cmp
out
cmps
lahf
sahf
rol
lods
push
xchg
inc
js
inc
sbb
mov
and
inc
aam
bnd
mov
mov
push
push
pop
or
out
int3
jmp
adc
sbb
jecxz
inc
dec
jb
aas
add
out
cmp
adc
cmc
(bad)
test
xchg
dec
shl
ins
repz
pop
shr
adc
inc
lock
sub
retf
push
cld
mov
loopne
sub
mov
in
pop
fld
fs
pop
sbb
push
mov
mov
lock
mov
repnz
repz
sub
icebp
add
retf
in
pop
mov
inc
call
enter
retf
mov
retf
and
pop
pop
pop
add
cwde
push
xor
repnz
jp
cmp
mov
mov
adc
add
sub
add
mov
stc
jmp
les
push
jae
(bad)
shr
inc
(bad)
xor
shl
mov
adc
mov
push
xlat
dec
pop
loop
mov
pusha
(bad)
cmc
aaa
shr
cli
mov
and
jae
ins
mov
pop
dec
js
mov
test
push
or
hlt
call
pop
adc
xor
test
retf
loope
inc
hlt
enter
push
xchg
xor
mov
retf
inc
sti
cwde
push
and
dec
adc
and
cld
add
xchg
ret
and
in
cmp
adc
inc
js
cs
idiv
mov
lock
cmp
(bad)
(bad)
ins
xor
push
shr
lsl
add
dec
cmp
in
ror
and
mov
dec
inc
inc
push
aad
mov
jbe
aaa
lods
ins
popa
add
stos
(bad)
sub
xor
push
ret
ss
inc
ret
push
jno
je
scas
aas
lock
adc
inc
sbb
in
jae
mov
cli
or
adc
sbb
movs
sbb
(bad)
push
cwde
out
out
jp
xor
pop
sti
stc
imul
inc
dec
test
(bad)
pop
jb
dec
outs
mov
test
cmp
mov
clc
or
or
mov
add
mov
mov
lahf
add
add
retf
rol
mov
xor
or
gs
inc
add
xor
outs
int3
inc
sar
cwde
mov
gs
gs
daa
push
jno
inc
xchg
fmul
cmp
or
dec
push
jl
popa
test
mov
inc
(bad)
retf
jg
sti
aad
xchg
push
inc
outs
stos
ss
jno
loopne
or
(bad)
aas
xchg
icebp
mov
sbb
test
add
cmps
sub
add
adc
push
inc
pop
sub
movs
adc
push
mov
je
inc
out
std
(bad)
and
and
cmp
sbb
pop
into
push
add
leave
ins
push
ss
inc
add
repz
ds
mov
es
cld
or
ret
push
cmp
jle
lock
inc
push
jno
(bad)
imul
mov
add
xchg
fcom
mov
or
sbb
xchg
mov
or
jge
mov
push
or
or
cld
jg
add
or
ja
pop
xor
pop
cli
int
rcr
std
sub
pop
rcr
out
dec
std
rol
adc
dec
and
or
adc
jle
dec
data16
(bad)
jae
jmp
jmp
push
imul
gs
shr
(bad)
hlt
or
ja
dec
fucomip
call
je
outs
xor
push
ret
add
ins
loope
(bad)
cmp
pop
or
xor
gs
pop
fimul
je
neg
shl
pop
adc
gs
cld
stos
shl
dec
push
cld
cwde
dec
stos
and
dec
xchg
pusha
add
ss
sahf
(bad)
push
sub
cmp
(bad)
mov
retf
jo
int
or
(bad)
mov
add
call
stos
adc
mov
dec
jmp
inc
inc
jbe
xor
cli
sub
rol
jbe
jmp
jg
dec
pop
repnz
jmp
(bad)
es
test
mov
in
(bad)
jg
dec
leave
(bad)
pop
call
das
out
pop
(bad)
or
loope
sbb
mov
std
test
mov
dec
loope
xchg
and
and
xor
sub
shl
(bad)
loop
retf
xor
inc
pop
cmc
dec
sub
es
jl
xor
add
leave
fdiv
ss
inc
mov
sub
sub
les
adc
inc
div
push
inc
cld
aad
inc
jp
enter
add
xchg
cdq
clc
fcmovnb
inc
ficomp
fdivr
aaa
arpl
jl
aam
rcl
pop
jmp
out
aas
cld
or
sbb
push
jno
mov
mov
sbb
ss
inc
stc
out
and
out
call
or
inc
jbe
stos
sbb
sti
je
lds
jg
sbb
push
mov
or
cli
xchg
mov
xchg
mov
sub
and
add
cs
push
rcl
push
or
cdq
xor
out
lahf
cmps
shr
push
test
les
hlt
dec
lods
idiv
iret
data16
push
inc
out
bound
mov
dec
(bad)
clc
jno
or
pop
imul
push
mov
cmp
jg
pop
add
aad
out
adc
push
sbb
jl
sub
and
mov
inc
inc
dec
mov
or
in
jae
aas
cmp
xchg
sbb
mov
jmp
call
lods
or
mov
sahf
push
inc
aas
and
mov
add
pop
les
add
cmps
(bad)
(bad)
jmp
mov
xor
pop
add
fadd
dec
push
mov
mov
or
jbe
mov
fist
mov
inc
jle
fs
mov
ret
sbb
mov
retf
int3
push
and
and
jg
std
mov
push
and
mov
loope
add
fdivr
das
push
lock
in
ins
and
adc
xchg
jns
test
aam
dec
inc
and
add
push
mov
mov
push
push
add
das
or
lock
adc
stos
pop
add
sub
mov
outs
push
push
mov
adc
es
je
fild
sar
out
not
add
add
pop
loopne
jb
mov
(bad)
pop
popa
imul
in
outs
mov
pop
push
xchg
aas
aas
add
call
cwde
out
jno
adc
ja
mov
pop
push
cli
out
sub
xchg
xor
dec
inc
mov
jne
cli
mov
fbstp
fwait
inc
or
(bad)
fwait
out
cmps
in
addr16
ins
pop
or
pop
or
mov
jb
popa
je
js
or
(bad)
mov
xor
call
push
mov
jb
retf
ret
repz
cli
push
ror
sub
sbb
(bad)
dec
stos
cmp
push
xlat
fstp
scas
mov
or
adc
sahf
sbb
cld
and
ja
mov
aaa
jae
in
and
jmp
adc
retf
mov
xchg
lds
push
add
push
xor
push
dec
aas
and
pop
and
xchg
and
mov
inc
mov
and
or
xchg
adc
lods
clc
push
jae
retf
movs
push
adc
jae
jno
jbe
cmp
js
jg
ds
xor
pop
sub
jo
(bad)
ja
pop
pop
add
xor
inc
jb
ret
add
mov
pop
dec
mov
out
sbb
push
sub
ins
mov
retf
or
pop
dec
das
test
ss
aaa
jmp
adc
inc
ss
or
pop
es
jp
aas
mov
cdq
icebp
inc
aad
and
xchg
pop
sti
xor
sbb
js
push
dec
cmp
cmp
cmc
xor
mov
jae
push
scas
pop
retf
pop
call
dec
sub
sbb
jmp
xchg
(bad)
pop
int
and
pop
adc
out
in
mov
push
inc
dec
fild
aam
dec
jno
sbb
into
ret
ins
shl
sub
data16
mov
sbb
bound
push
jl
dec
sub
cld
inc
mov
mov
shl
and
push
mov
jg
(bad)
or
mov
mov
or
ja
rcl
push
mov
adc
and
lods
lds
xor
punpckhbw
pop
loopne
mov
int3
lds
fcom
lods
cmp
inc
inc
jae
jl
adc
or
fild
add
dec
mov
mov
in
bound
test
and
cmps
(bad)
pop
dec
pop
nop
pop
(bad)
cdq
pushf
les
or
fs
fwait
add
push
repz
popa
idiv
(bad)
cld
and
pop
mov
pop
out
mov
lahf
push
jp
bound
gs
iret
addr16
inc
out
cmp
mov
arpl
mov
adc
pavgw
xor
add
pop
fild
mov
push
and
mov
or
fld
push
ja
push
call
dec
push
push
mov
push
and
ins
add
jmp
xchg
inc
idiv
mov
pop
scas
mov
ret
imul
out
or
es
in
movs
and
dec
xor
or
movs
mov
outs
or
add
imul
lock
push
add
inc
je
push
sbb
add
push
dec
imul
mov
ret
call
push
pop
inc
add
jbe
(bad)
loopne
ret
inc
add
ret
mov
mov
cli
mov
sub
cld
les
nop
jo
out
inc
sub
jae
or
pop
inc
outs
sub
cmp
icebp
aaa
push
dec
xchg
xlat
jb
sti
fiadd
xchg
add
pop
xor
add
mov
ret
pop
gs
(bad)
xor
stos
jmp
fnstsw
xchg
mov
jle
ja
or
mov
sbb
mov
mov
jbe
add
nop
retf
sbb
sbb
inc
add
xor
cmc
jno
aad
(bad)
pop
push
push
push
push
xchg
jmp
jmp
cmps
pop
pop
and
and
pop
xchg
cmp
cmp
sbb
call
out
and
push
inc
mov
es
push
inc
xor
sbb
lods
and
ret
clc
pop
clc
ret
mov
jne
inc
fld
pop
sub
add
push
ficomp
sub
repnz
or
mov
push
cmps
test
mov
in
mov
aam
pop
out
ja
inc
mov
add
inc
mov
xor
jae
add
add
repnz
repnz
or
xor
lahf
mov
mov
sbb
loop
jmp
mov
ret
loope
shl
sub
xchg
cdq
push
push
cmp
inc
and
push
mov
mov
or
jbe
add
std
push
push
(bad)
mov
cmp
ret
sub
mov
cld
push
jecxz
push
outs
call
out
movs
and
int3
and
xchg
test
sub
push
inc
call
add
(bad)
mov
push
mov
xchg
xor
push
mov
lea
mov
mov
retf
fsub
sub
add
fcomp
mov
ret
xchg
fimul
dec
rol
(bad)
adc
inc
mov
cmc
movs
mov
or
imul
adc
sbb
and
test
mov
retf
jg
push
sub
inc
call
add
jb
xor
jmp
je
pusha
mov
imul
jno
sbb
adc
sbb
fbstp
mov
pop
cmp
(bad)
outs
jg
or
push
fwait
jmp
test
(bad)
push
add
push
adc
dec
cmc
aas
daa
adc
jg
ficom
fs
push
sbb
mov
icebp
fwait
mov
mov
imul
pop
xchg
mov
outs
sub
xor
and
pop
inc
push
dec
cdq
cwde
push
pop
adc
push
ja
call
mov
add
push
je
pop
call
das
push
sbb
jnp
cmp
cmp
ret
mov
sbb
(bad)
cmp
add
fisttp
cld
dec
dec
in
inc
retf
call
pop
add
dec
pop
hlt
cmp
inc
stc
xor
and
push
mov
dec
cld
aas
add
pop
jb
iret
shr
mov
push
dec
dec
cmp
pop
dec
aas
ret
push
add
xor
jmp
mov
mov
test
mov
mov
mov
scas
xchg
cmp
add
cmps
jae
xor
adc
jmp
xlat
clc
push
dec
out
mov
push
imul
push
pusha
mov
(bad)
xchg
cmc
pop
mov
inc
movnti
jmp
fild
adc
fsubr
and
lds
lss
(bad)
mov
add
int3
ret
inc
mov
in
mov
iret
and
fwait
or
fisubr
js
pop
push
sahf
sub
push
movs
sti
lods
outs
xchg
aas
addr16
adc
dec
inc
add
ja
(bad)
inc
inc
addr16
out
sub
mov
(bad)
push
pop
lds
call
xor
leave
cli
dec
inc
in
mov
(bad)
mov
fisub
mov
push
scas
test
nop
mov
rol
jge
pop
xchg
push
sbb
ret
bound
inc
imul
and
adc
je
jl
int3
pop
adc
in
cmp
sub
or
mov
mov
add
cmp
add
imul
(bad)
sub
arpl
pop
(bad)
and
call
test
mov
add
dec
jg
not
or
scas
clc
je
pop
add
cmps
jl
fmul
mov
jg
pop
ins
icebp
out
call
ins
sub
mov
mov
popf
inc
add
pusha
push
(bad)
jg
add
bound
cmp
jae
fisub
jecxz
dec
lock
test
fdiv
or
ret
(bad)
and
push
fadd
fisub
sbb
outs
out
addr16
les
or
mov
and
mov
add
push
clc
repz
xchg
cmps
out
adc
mov
sub
cmp
sub
imul
pop
movzx
arpl
mov
fwait
sbb
mov
and
clc
fwait
in
add
cmps
pop
cmp
push
mov
jae
call
xchg
out
or
aad
std
out
inc
inc
out
pop
add
adc
xchg
pop
jmp
xlat
mov
out
add
jmp
or
or
push
loopne
pop
pop
dec
adc
paddw
cld
xchg
dec
cli
add
or
inc
(bad)
sbb
inc
pop
dec
sbb
lods
(bad)
cmp
mov
inc
adc
add
sti
push
test
xor
push
pop
push
pop
or
ins
out
loopne
xchg
loopne
add
jmp
and
sar
loopne
sbb
push
out
mov
ret
jmp
or
das
jl
inc
xor
icebp
loop
add
pop
test
sbb
sbb
mov
push
imul
push
lods
aam
ret
xchg
push
enter
inc
mov
pop
or
jl
jnp
push
sbb
jmp
sti
inc
cli
mov
clc
push
mul
ins
pop
xor
nop
hlt
inc
xor
enter
loop
dec
lods
dec
mov
xor
inc
sub
jne
outs
or
fld
push
dec
pop
inc
and
std
or
leave
rcr
xlat
sbb
push
sub
es
adc
dec
mov
sub
gs
icebp
push
dec
xor
mov
out
pop
push
pop
(bad)
or
out
test
test
push
xlat
push
retf
stos
xchg
add
xchg
lods
in
xchg
out
mov
or
ret
rep
mov
or
add
dec
rcr
inc
push
ins
(bad)
jmp
nop
into
aaa
mov
je
shr
xor
push
fistp
push
test
push
jae
jae
mov
xor
in
aas
add
lods
jmp
rcl
mov
push
fistp
jmp
jg
pop
pusha
jmp
fs
mov
mov
dec
xchg
pop
mov
sbb
arpl
cmc
stc
push
dec
cli
ins
jne
imul
inc
scas
cmp
push
or
xor
xchg
clc
test
pop
(bad)
push
push
xchg
sub
cli
inc
bound
retf
ret
pusha
sbb
sub
and
jl
xchg
test
push
in
dec
mov
sbb
imul
out
cmp
cmc
aas
jmp
ret
xor
jmp
jmp
arpl
cmp
shr
sub
cli
adc
xchg
push
push
pop
mov
inc
das
ss
inc
stos
inc
stc
mov
push
je
add
(bad)
out
jl
push
xchg
sub
xchg
out
ror
daa
(bad)
ja
mov
pop
ja
sub
mov
and
xlat
add
inc
aad
sbb
sbb
push
not
outs
ja
or
add
inc
jl
add
(bad)
ficom
mov
or
or
dec
fisub
push
pusha
add
inc
push
jmp
dec
es
inc
out
pushf
dec
xor
adc
jae
and
je
adc
pop
icebp
or
in
inc
pop
mov
inc
test
xor
jg
mov
adc
cmp
cmc
aas
dec
sub
dec
les
out
mov
je
out
xor
add
(bad)
pop
dec
idiv
lods
cmp
cli
inc
(bad)
xlat
std
inc
xchg
or
and
idiv
push
or
fucomip
les
adc
xchg
stos
push
adc
call
pushf
push
(bad)
das
inc
sar
pop
adc
dec
aaa
cwde
push
dec
sub
xor
lahf
or
icebp
inc
mov
or
sub
loopne
inc
push
dec
test
adc
xchg
test
or
loopne
das
xor
jg
lods
das
sti
mov
(bad)
mov
or
mov
out
retf
outs
adc
pop
hlt
test
pop
mov
mov
adc
inc
add
std
call
std
fist
arpl
scas
sub
ret
pop
dec
sub
xchg
jp
jecxz
neg
les
loop
into
ret
add
das
xor
arpl
mov
adc
ret
add
mov
gs
shl
push
loop
pusha
das
pusha
cmp
dec
sbb
jl
mov
fcomp
(bad)
push
or
pop
cmp
into
test
addps
out
out
sub
or
dec
rcr
das
aas
sub
push
adc
jnp
inc
xchg
ficom
xchg
das
or
and
mov
dec
mov
pusha
xchg
inc
mov
loopne
rcr
hlt
push
test
inc
cli
sbb
inc
iret
inc
push
push
jmp
fnstenv
push
mov
add
stc
scas
cmp
add
lods
xor
add
and
test
mov
pusha
and
and
ja
or
pop
imul
(bad)
push
or
and
xchg
add
lods
dec
inc
mov
(bad)
es
jmp
xlat
mov
mov
push
pop
sbb
ja
push
and
pop
push
adc
dec
add
ins
(bad)
jbe
jge
adc
sub
out
inc
rcl
pop
aas
add
stos
movs
(bad)
clc
inc
fs
test
sub
shr
aam
inc
mov
std
push
sub
lods
inc
aam
mov
push
jae
or
inc
and
pop
xchg
dec
inc
loopne
mov
call
push
not
out
sbb
push
inc
icebp
pop
xor
or
push
std
arpl
pop
mov
or
cmp
add
xchg
jmp
sbb
inc
mov
mov
sub
dec
and
add
sub
xchg
aam
sub
pop
push
loope
jbe
test
pop
cmc
jo
lock
mov
movaps
and
mov
inc
inc
inc
loopne
inc
lahf
mov
ins
call
push
fdiv
(bad)
jg
icebp
stos
add
out
outs
in
mov
dec
add
je
adc
add
inc
or
call
cmp
xor
xchg
cmp
fdiv
ins
dec
push
push
fsub
push
pop
dec
jno
jmp
mov
dec
lock
dec
scas
jmp
or
out
sub
pusha
push
inc
(bad)
fcom
out
mov
push
dec
xchg
scas
inc
cmp
push
lods
or
inc
je
fs
adc
jmp
arpl
or
jecxz
mov
push
adc
dec
mov
push
data16
mov
(bad)
and
inc
outs
inc
sub
adc
lahf
xchg
ins
cld
inc
and
inc
jnp
lds
sar
fucomip
inc
std
std
mov
aad
fist
dec
pop
jae
mov
scas
xchg
aad
call
cmps
cwde
or
mov
imul
cmp
jae
ins
push
and
mov
or
fs
sub
push
inc
mov
movs
(bad)
xor
pushf
ret
test
cmp
pop
sub
hlt
jg
call
shr
sar
movs
cmp
add
shr
add
pop
inc
sbb
outs
push
add
ja
mov
xor
pop
pop
loopne
xchg
inc
add
adc
xor
fdiv
(bad)
popf
mov
sar
xchg
cmp
pop
je
stos
gs
cmp
sub
int3
mov
or
sub
sbb
mov
jmp
pop
test
out
cli
pop
and
pop
mov
inc
aad
jge
mov
cmp
dec
sub
mov
dec
inc
(bad)
pop
call
add
(bad)
fld
mov
mov
inc
lahf
js
aam
inc
or
pusha
xor
dec
dec
mov
xchg
fiadd
enter
xchg
(bad)
pop
sub
psrad
pop
adc
fld
ret
das
add
jmp
inc
and
inc
inc
(bad)
cs
add
fimul
adc
xchg
sub
xlat
enter
(bad)
movs
push
cmp
js
adc
call
mov
push
ret
jbe
imul
ret
fbld
ror
xor
jno
add
push
sub
inc
push
inc
shl
add
xchg
dec
and
adc
or
pop
cmp
add
push
(bad)
movs
jmp
push
mov
mov
aad
fsubr
mov
ficom
inc
clc
call
add
jb
xor
int3
xor
(bad)
pop
adc
inc
pop
leave
mul
stos
mov
xchg
mov
add
je
jmp
adc
dec
sub
push
call
inc
add
(bad)
hlt
cmps
pop
fcomp
xchg
addr16
(bad)
cmp
push
mov
xor
push
in
mov
mov
pop
add
or
adc
xchg
rcl
mov
and
xchg
inc
mov
test
lods
repz
sub
(bad)
jg
add
jae
outs
inc
add
jmp
push
(bad)
pop
mov
sub
push
mov
push
or
fdivr
pop
cs
add
pop
inc
mov
test
push
mov
xchg
adc
add
sub
jmp
aaa
dec
jmp
aas
(bad)
xchg
ret
fs
or
bswap
inc
inc
xchg
aas
pop
inc
sub
mov
fbld
inc
mov
dec
dec
inc
add
adc
push
cmps
xor
push
add
and
addr16
(bad)
adc
or
sub
pop
mov
std
add
adc
cli
mov
xchg
scas
jle
mov
mov
jae
xor
fist
pop
inc
repnz
mov
mov
pop
dec
inc
addr16
dec
xor
stc
sti
inc
add
lods
xchg
sahf
inc
pushaw
mov
sbb
jmp
mov
pusha
(bad)
out
xchg
aam
das
inc
shl
mov
cmp
cmps
add
clc
or
je
sbb
fistp
rcl
sbb
add
ss
test
shl
rol
xor
mov
pop
icebp
pop
and
inc
add
add
pop
push
push
or
inc
dec
aam
inc
shl
adc
inc
mov
ret
pop
mov
inc
mov
les
out
(bad)
stos
jmp
and
dec
add
inc
adc
aam
sbb
push
in
add
mov
dec
je
movs
adc
push
xchg
dec
test
sbb
adc
mul
push
jmp
jns
std
rcl
das
imul
test
mov
stos
mov
lds
inc
outs
jb
cli
jmp
das
xor
add
loope
scas
xor
cld
out
inc
xor
adc
out
pop
inc
out
mov
fcmovu
ins
and
and
or
pop
call
add
sub
sar
and
inc
jno
adc
retf
cwde
push
inc
mov
test
call
jecxz
xor
aas
pop
dec
or
or
test
pusha
sub
mov
shl
ret
out
xor
lods
xchg
xor
lods
lahf
jle
std
adc
add
mov
cld
adc
sub
and
ret
push
push
xor
sub
into
push
aam
adc
inc
jnp
pop
add
pop
(bad)
inc
(bad)
out
mov
aas
mov
sti
sbb
frstor
nop
jg
add
sbb
mov
movs
jbe
inc
call
xchg
cli
mov
sub
aas
xor
jl
loopne
sbb
mov
add
jmp
addr16
mov
(bad)
pop
fwait
add
mov
aas
add
xchg
add
xchg
inc
cld
icebp
ja
sub
or
pmovmskb
jg
stos
adc
mov
or
ins
push
jmp
js
pusha
test
movs
dec
shl
jge
pop
ss
cmp
push
int3
pop
mov
fwait
add
jbe
sbb
inc
adc
outs
inc
xchg
outs
or
inc
ins
push
jmp
mov
add
daa
and
cmp
inc
adc
push
push
std
cld
imul
cdq
aas
retf
or
les
(bad)
jle
cmps
iret
gs
repnz
jno
ud0
push
lods
xor
inc
pusha
add
retf
mov
ror
(bad)
sti
gs
xlat
and
push
push
mov
pop
and
loope
sub
adc
jbe
jmp
inc
(bad)
aad
das
add
dec
imul
push
aam
(bad)
out
cmp
jge
lahf
das
inc
outs
mov
scas
cli
aaa
sti
fs
pop
es
add
retf
dec
push
jecxz
mov
addr16
cmovno
icebp
addr16
mov
mov
inc
cmc
loop
dec
inc
jo
cmp
and
jl
dec
pop
or
test
adc
cli
test
sub
pusha
xchg
pusha
stos
cmps
sbb
and
add
mov
call
pop
(bad)
mov
cwde
cmps
cmp
(bad)
and
cmp
sub
cmps
jmp
sub
(bad)
(bad)
ds
mov
cld
pop
repz
and
pop
or
add
fidiv
add
ins
std
push
push
imul
pop
clc
push
(bad)
scas
xor
cli
add
add
push
pusha
out
retf
(bad)
mov
add
adc
je
je
inc
call
inc
pop
sub
inc
retf
dec
push
pop
jmp
je
outs
call
adc
les
stos
pop
jp
(bad)
(bad)
xchg
jmp
pushf
mov
inc
push
jae
push
or
out
loopne
psubq
xchg
aas
dec
inc
mov
push
or
shl
mov
mov
lock
cmp
push
xor
in
inc
ins
add
in
pop
dec
js
bound
inc
popa
clc
dec
loope
lods
inc
mov
dec
int
sbb
inc
jno
dec
cmps
(bad)
out
out
push
push
fmul
jb
pop
mov
mov
pop
jmp
aas
jae
push
lea
scas
inc
mov
inc
sbb
push
aas
icebp
loop
les
mov
xor
jmp
mov
mov
jae
loopne
addr16
mov
xchg
(bad)
ins
jbe
pop
mov
mov
cmp
xlat
in
push
mov
dec
mov
cmovo
add
xchg
mov
sbb
mov
inc
pop
mov
and
shl
add
and
cmc
mov
call
into
inc
inc
inc
dec
rcl
pop
sti
mov
sahf
add
adc
cli
fcomp
imul
dec
sbb
daa
add
std
aaa
dec
add
add
ret
xchg
or
inc
out
adc
out
sbb
sbb
adc
or
fistp
xor
in
and
enter
sar
jmp
pop
js
mov
arpl
fs
add
mov
in
xor
(bad)
gs
inc
(bad)
scas
and
fimul
fidivr
mov
dec
mov
cmp
add
pop
test
xchg
repz
out
add
mov
jmp
push
aaa
mov
lahf
cli
dec
aaa
xchg
mov
jl
(bad)
xchg
sub
cmp
inc
shl
or
mov
dec
sub
loopne
scas
push
mov
xor
cld
mov
(bad)
sbb
inc
fimul
pop
repnz
sbb
adc
add
pop
stos
jno
or
sbb
jp
inc
out
mov
out
inc
ss
push
xor
(bad)
out
jg
ret
mov
mov
in
add
or
shl
lods
add
fwait
les
ja
es
or
sub
push
(bad)
sbb
add
xchg
lahf
adc
sbb
mov
iret
adc
push
cmp
cli
(bad)
or
cmps
addr16
add
scas
mov
inc
add
aas
xor
or
enter
sbb
xor
xor
mov
mov
inc
pop
pop
pushf
(bad)
popa
sbb
xor
(bad)
cmps
pop
jnp
push
or
aas
ds
add
add
jno
or
jmp
cmp
and
std
inc
mov
inc
and
stos
inc
jecxz
out
mov
xlat
mov
adc
out
mov
or
add
sbb
mov
call
xor
inc
push
bound
dec
je
and
hlt
pop
sbb
pop
aas
jmp
mov
retf
test
pop
dec
imul
inc
fcom
ins
dec
add
push
mov
lods
test
in
and
sub
cmps
imul
sub
adc
inc
pop
out
shl
xor
(bad)
pop
add
mov
cwde
(bad)
std
aad
push
add
imul
js
dec
add
and
sub
xor
in
pop
aad
enter
arpl
and
jecxz
dec
(bad)
jb
ret
arpl
xlat
or
hlt
dec
lds
inc
popf
push
loopne
mov
mov
xor
xlat
dec
sar
mov
or
test
pop
inc
imul
mov
fadd
rcr
jl
(bad)
adc
xlat
inc
and
jmp
or
std
add
fucomi
xchg
dec
sub
out
jg
movs
and
inc
push
es
mov
add
and
aam
ret
retf
and
shr
cmps
pop
je
adc
pop
jge
sbb
shl
pusha
aam
mov
dec
cwde
lds
or
adc
pop
xlat
xor
scas
cli
sbb
ja
mov
jae
push
repz
cmovns
add
mov
xchg
mov
ret
add
xor
cmp
loop
and
lods
push
mov
add
xlat
jle
or
inc
push
bound
fstp
dec
xor
mov
and
outs
(bad)
stos
jle
inc
mov
lods
iret
xor
mov
push
inc
add
inc
xor
stc
fild
add
push
cmp
mov
adc
cld
add
pop
aas
jmp
mov
fisubr
sub
(bad)
(bad)
dec
test
stos
dec
add
outs
leave
sub
add
push
and
push
jge
cmp
pop
mov
jl
add
cmp
dec
mov
add
inc
push
jmp
jbe
or
push
out
pop
jbe
fst
push
es
mov
aaa
aas
inc
dec
cmp
add
pop
sub
dec
sahf
mov
jbe
sar
in
inc
and
mov
les
xor
idiv
das
sbb
sbb
inc
jl
push
ret
(bad)
and
aad
mov
sbb
lds
cs
data16
sar
cmp
(bad)
xor
mov
je
dec
push
lds
stos
je
sbb
xor
add
mov
push
pop
and
nop
nop
add
clc
push
adc
jns
sub
mov
push
pop
adc
pop
or
xchg
add
sbb
mov
cmps
xchg
(bad)
mov
xchg
add
push
jle
loopne
ret
mov
aad
sbb
or
cmp
loopne
xchg
xchg
in
add
data16
loop
jmp
cmp
shr
dec
clc
mov
mov
test
outs
sbb
pop
ja
add
sbb
or
jmp
sub
aad
dec
inc
pusha
push
mov
push
data16
mov
push
and
jmp
pushf
aam
xor
enter
shl
test
fbld
inc
pop
and
fs
ss
sbb
std
jge
call
imul
je
cwde
sbb
jl
sub
pop
cmc
pop
jecxz
jmp
shr
adc
jmp
pmaddwd
dec
pop
rol
(bad)
mov
(bad)
adc
dec
retf
ret
mov
arpl
stos
push
mov
mov
inc
inc
adc
movs
xor
dec
test
inc
push
lahf
inc
sub
aaa
dec
mov
mov
xor
add
dec
jg
sbb
cli
out
ss
pop
jae
(bad)
and
jp
mov
fbld
inc
inc
push
out
outs
mov
inc
jl
out
ins
ret
lds
mov
xor
movups
mov
inc
rol
push
fiadd
cmp
and
call
adc
and
sbb
pop
movs
mov
push
and
mov
push
push
scas
jp
inc
mov
pop
fnop
lds
cmp
mov
xlat
out
mov
int
fild
adc
mov
aaa
inc
ror
div
fdiv
jl
cwde
(bad)
jp
mov
(bad)
pop
test
shl
mov
or
add
add
int3
add
pop
inc
cli
ds
pop
stos
sub
ret
jle
mov
mov
pop
mov
adc
imul
dec
aas
repz
jbe
mov
cmp
mov
jae
adc
icebp
and
jmp
lahf
aas
mov
dec
sbb
inc
push
push
fst
rol
inc
or
mov
imul
sbb
mov
jmp
add
loope
lea
arpl
pusha
add
cld
inc
xor
ja
(bad)
xchg
ror
adc
icebp
aas
push
push
mov
es
jle
sub
shr
inc
test
je
adc
in
shr
push
jb
sti
cmp
adc
push
add
push
test
cvtps2pd
(bad)
jmp
idiv
inc
add
add
sub
jle
jecxz
repz
ja
aaa
cmp
xor
mov
test
inc
(bad)
movs
mov
je
mov
loope
mov
pop
div
enter
pop
ja
(bad)
jle
add
dec
out
or
mov
mov
cld
call
mov
cmp
push
(bad)
mov
add
mov
arpl
stc
je
push
(bad)
(bad)
inc
adc
gs
repz
inc
mov
sbb
xor
js
repz
sbb
add
and
jmp
sbb
and
arpl
cli
dec
push
cld
bound
push
and
inc
sub
sbb
dec
mov
add
mov
push
ss
jg
adc
js
stc
enter
ret
pop
add
xor
sti
out
and
(bad)
fiadd
jmp
sti
movs
pop
es
je
xlat
out
add
add
inc
inc
jbe
add
iret
fild
push
repz
pop
ret
and
push
popa
mov
mov
mov
stos
test
sbb
rcr
es
in
pop
loop
mov
inc
xchg
mov
std
sbb
pop
add
xor
inc
dec
pop
xchg
add
xchg
xchg
jmp
sbb
cwde
in
xchg
pop
mov
add
shl
adc
dec
xor
nop
cli
add
and
scas
clc
xchg
dec
mov
std
or
add
jge
fisubr
push
dec
jp
xor
add
push
and
loopne
sbb
test
push
or
pop
jg
(bad)
mov
mov
mov
ret
or
rcl
dec
adc
add
add
ret
xor
mov
bound
(bad)
pusha
jecxz
and
pop
mov
mov
out
inc
(bad)
pop
movups
dec
clc
ret
out
inc
cli
push
xor
int3
fild
inc
dec
int3
mov
add
and
cwde
pop
xchg
shr
outs
mov
mov
loopne
pop
loope
mov
fnstenv
xor
retf
mov
jb
je
cmp
inc
push
add
daa
test
sti
mov
adc
add
cmps
push
rcl
out
adc
fwait
shl
jg
jno
adc
pop
or
or
fcom
pusha
ins
jae
ficomp
mov
xor
mov
pop
(bad)
jmp
and
xchg
mov
xor
add
fldenv
je
ins
inc
jbe
add
stos
or
gs
xchg
movs
jae
add
xchg
hlt
mov
pop
mov
push
rcl
jmp
es
mov
sbb
les
push
fiadd
mov
push
out
cs
je
pop
mov
cmps
fdiv
or
fnstcw
pop
std
adc
mov
outs
ret
jb
out
ret
push
daa
sbb
jg
retf
addr16
and
jmp
pop
loopne
cmp
dec
push
sahf
inc
or
push
mov
data16
add
xchg
add
call
sub
adc
sti
jle
push
in
inc
sub
xlat
xor
test
mov
xchg
mov
push
div
or
and
fsubr
lea
fidivr
or
or
or
push
pop
(bad)
into
add
sub
fwait
in
push
int3
pop
add
andps
out
les
push
add
inc
dec
cli
call
and
aaa
push
mov
imul
adc
dec
push
push
cmp
hlt
loop
(bad)
lock
pop
pop
mov
test
ficomp
jg
mov
lock
add
adc
inc
cmps
add
aas
test
mov
cmp
lock
sbb
inc
outs
cld
mov
(bad)
lea
or
mov
std
sti
fadd
push
aas
jmp
or
cmp
mov
cs
ds
callw
inc
push
ins
sbb
push
push
push
(bad)
call
inc
jl
mov
fidivr
dec
add
adc
xlat
inc
test
cmovb
sbb
mov
pusha
add
xchg
mov
test
mov
jae
stos
mov
aas
call
push
push
add
lds
jb
add
jge
sbb
rcr
push
adc
inc
jecxz
test
xchg
inc
sub
fwait
xchg
ins
add
push
dec
inc
test
ror
inc
add
das
sub
and
add
mov
mov
sub
jb
out
test
(bad)
cs
sti
push
sbb
push
push
aas
push
xchg
sti
out
fs
cld
sub
dec
ins
fild
mov
mov
push
pop
cwde
in
jae
dec
cld
ret
xchg
push
arpl
pop
ss
test
dec
pop
pusha
icebp
ror
std
mov
cld
pop
mov
test
pop
test
les
hlt
movs
inc
mov
out
cdq
inc
and
mov
aam
out
movs
push
mov
add
dec
add
in
inc
inc
pop
sbb
pushf
je
rol
ss
(bad)
push
push
sub
pusha
scas
pop
pop
ret
dec
mul
iret
std
and
movs
lock
mov
xor
pop
add
add
or
inc
or
lds
add
fmul
mov
mov
add
ss
sub
(bad)
push
sar
sub
out
push
push
je
jecxz
xor
pop
jae
outs
xchg
or
ret
mov
and
add
(bad)
sub
push
ss
xor
sub
sub
fs
add
cmps
fimul
inc
pop
je
arpl
sub
sub
mov
ror
add
test
pop
inc
push
mov
(bad)
push
scas
dec
adc
out
pop
jg
push
push
cli
inc
sar
div
mov
adc
retf
rcr
aas
xchg
sub
push
xchg
push
sar
pop
add
call
dec
sbb
push
add
repz
loopne
add
rol
fisub
xor
push
mov
mov
cmp
dec
cmp
add
xor
(bad)
fcmovu
xchg
idiv
test
lds
mov
mov
out
dec
xor
mov
pusha
push
(bad)
(bad)
jg
mov
fiadd
sbb
add
or
fdivr
ins
aas
sub
pusha
je
pop
adc
add
cld
dec
push
pop
lahf
das
add
or
sti
pop
out
div
add
or
sub
mov
aas
popf
and
pop
outs
nop
push
ret
fimul
(bad)
pop
ins
repnz
ins
gs
aas
mov
adc
imul
inc
xchg
inc
clc
sbb
fisttp
enter
sti
out
ret
aas
push
push
push
inc
sub
inc
call
push
push
pop
or
sahf
ja
ret
mov
add
rcl
push
add
aaa
shr
or
push
fcomi
sahf
push
xchg
or
mov
pop
sub
inc
pop
xchg
push
nop
inc
inc
jmp
sti
idiv
cmp
div
je
mov
mov
test
adc
scas
in
push
push
repz
inc
push
adc
(bad)
jg
clc
std
sti
dec
inc
stc
or
(bad)
jbe
adc
mov
sbb
cwde
ficomp
lods
nop
add
push
inc
mov
out
stc
in
cli
aas
push
jle
(bad)
mov
pop
inc
push
sbb
fmul
sub
push
mov
adc
push
repnz
add
inc
jmp
popa
adc
fild
imul
mov
sbb
xor
sbb
pop
jecxz
add
push
push
dec
pop
inc
pop
adc
push
mov
cmps
icebp
inc
aaa
push
pop
ins
or
dec
lods
push
fidiv
inc
adc
push
jg
sub
or
mov
sbb
and
adc
cli
sub
inc
test
ret
push
int3
adc
fisttp
addr16
(bad)
pop
xor
aaa
and
inc
mov
lods
sub
inc
sub
ret
adc
pop
call
es
inc
cmp
das
cmps
mov
adc
movs
inc
repz
enter
std
test
push
jg
(bad)
ins
dec
or
imul
add
dec
or
stc
push
mov
ja
rcl
sahf
xor
rol
pop
stc
pop
pop
inc
mov
push
mov
je
dec
fisttp
mov
adc
mov
imul
xchg
cmp
adc
adc
push
xchg
mov
xchg
outs
push
and
arpl
xchg
and
imul
sti
sbb
out
dec
fld
(bad)
mov
add
mov
mov
mov
and
cli
(bad)
mov
out
xchg
(bad)
mov
ret
xor
stos
push
xor
or
mov
inc
or
xor
xchg
mov
aas
dec
arpl
add
(bad)
pop
add
sub
ds
mov
xor
out
inc
shr
call
add
xchg
jae
ret
retf
js
push
inc
inc
call
lock
or
je
pop
push
sub
cld
mov
mov
pand
dec
xor
je
movs
cdq
pop
clc
ja
adc
pminsw
outs
mov
stos
jg
sti
dec
aaa
jo
pusha
repnz
push
push
mov
(bad)
or
push
jg
jp
or
iret
test
fldenv
scas
mov
xor
mov
adc
clc
cs
adc
dec
pop
adc
push
push
mov
adc
and
pop
xor
xchg
push
jne
adc
pop
call
pop
sbb
jb
push
es
mov
and
pop
ret
mov
popa
jno
push
pop
je
nop
xor
nop
mov
cld
sub
(bad)
out
ret
mov
dec
mov
test
pop
and
std
mov
mov
je
inc
pop
mov
inc
frstor
clc
(bad)
xor
push
xor
scas
(bad)
sbb
out
and
(bad)
fidiv
add
pop
lahf
mov
cld
push
iret
test
(bad)
rol
aaa
rcl
pop
(bad)
les
leave
add
fsubr
mov
or
pop
pusha
push
adc
add
sub
loop
adc
pop
dec
aaa
fld
add
out
imul
add
mov
jo
je
dec
icebp
pop
idiv
nop
mov
js
add
adc
jl
je
gs
mov
or
xor
js
jecxz
fwait
out
pusha
ret
sar
addr16
adc
inc
pushf
dec
pop
mov
ins
jl
push
pop
add
mov
cdq
jb
cwde
shl
sar
or
push
jle
adc
mov
mov
mov
or
test
mov
std
jno
fnsave
aas
js
pop
or
fwait
sub
retf
dec
inc
dec
dec
std
cli
mov
mov
inc
xchg
call
call
adc
adc
sar
pop
shl
pop
test
jp
and
or
mov
pop
cdq
sahf
std
cmp
push
xor
call
loopne
(bad)
repnz
inc
push
jle
in
pop
mov
repz
or
inc
xchg
add
mov
mov
push
sub
add
or
add
data16
jg
clc
ja
ins
retf
ret
cmc
inc
pop
push
push
das
mov
adc
sbb
out
inc
mov
cmps
mov
push
sar
and
mov
cld
inc
js
mov
cli
mov
add
add
push
(bad)
push
xor
mov
mov
inc
fs
std
ja
mov
adc
cli
mov
mov
xor
pop
or
je
fs
call
add
inc
adc
dec
inc
push
retf
sub
inc
jmp
aaa
mov
inc
je
dec
sub
ja
pop
jp
cmp
jmp
xlat
add
add
sar
mov
std
jg
inc
arpl
jmp
push
lahf
mov
push
add
(bad)
call
pusha
mov
push
push
mov
xchg
mov
xor
pusha
xchg
jno
mov
ins
xor
sbb
adc
mov
mov
xchg
fwait
sbb
in
pop
lock
sub
push
lods
inc
mov
ins
sub
add
inc
add
mov
xor
push
mov
loopne
xchg
fs
jmp
add
add
lds
and
sub
add
adc
call
fcomp
and
adc
mov
mov
inc
inc
call
(bad)
aaa
ins
xchg
dec
or
test
call
pop
push
bound
mov
lahf
int3
jae
je
add
pop
or
lds
das
add
dec
test
enter
outs
xchg
adc
in
push
fstp
lods
sbb
jmp
add
in
loopne
sbb
out
nop
adc
pop
pop
sub
lods
add
add
mul
pop
mov
cli
or
sub
daa
mov
(bad)
in
push
inc
dec
iret
add
movs
mov
jo
push
hlt
pop
aad
sub
xchg
dec
dec
jae
mov
call
inc
fiadd
pop
aaa
arpl
mov
retf
repz
mov
movs
sbb
loopne
out
dec
je
mov
mov
cmp
push
inc
mov
jle
cmp
mov
ret
aas
mov
jb
imul
fs
xor
mov
(bad)
and
add
(bad)
cli
repz
xchg
cli
out
and
xor
jae
jg
mov
pop
or
pushf
inc
mov
sar
push
mov
add
pop
inc
call
shl
sub
je
jecxz
push
xor
imul
xor
push
je
push
ins
dec
movs
mov
(bad)
cmps
xor
xchg
push
pop
lods
dec
mov
je
add
inc
or
pop
sub
and
out
jmp
pop
outs
adc
push
mov
push
std
je
scas
test
pop
in
shr
xor
cmps
inc
add
cld
or
jl
add
dec
sbb
retf
mov
out
std
inc
mov
(bad)
inc
sub
ficomp
or
pop
shl
out
adc
or
add
pop
adc
pop
dec
xlat
arpl
pop
add
mov
and
push
adc
out
lahf
adc
sub
cli
pop
loopne
or
and
pop
enter
lock
js
push
test
mov
les
fimul
cmp
inc
adc
add
popa
movs
call
add
jle
ror
add
sahf
xchg
sti
out
sar
pop
mov
aam
sti
and
push
cld
lods
jmp
ret
push
sbb
bound
cli
cli
pop
xchg
or
inc
mov
dec
mov
pop
push
and
push
shr
jle
hlt
mov
in
mov
sbb
repz
add
push
mov
mov
out
inc
or
and
cmp
jecxz
add
jle
fisttp
adc
mov
retf
lods
pop
add
(bad)
aad
mov
cmp
pop
sbb
call
push
jg
pop
mov
cld
sti
xor
pop
pop
mov
(bad)
push
shr
dec
outs
mov
push
jbe
test
pushf
mov
clc
inc
out
rol
push
arpl
xor
aas
push
inc
enter
jo
mov
call
cmps
push
(bad)
mov
cli
inc
dec
xlat
inc
arpl
dec
push
rcl
pop
loope
stos
test
inc
push
inc
adc
cld
jg
or
jb
jmp
jno
aaa
sbb
and
cmp
mov
fucomi
inc
enter
and
add
push
pop
out
push
movs
add
inc
nop
cwde
add
sbb
jae
sub
pop
dec
(bad)
push
rol
pop
sar
fwait
mov
(bad)
je
mov
jmp
jecxz
and
movs
mov
enter
cmc
in
fisttp
arpl
ret
push
aas
mov
sbb
ret
fsubr
add
rcl
inc
ret
pop
stos
push
(bad)
stos
cs
iret
(bad)
dec
cmps
out
inc
arpl
mov
mov
add
or
xlat
mov
sbb
dec
pushf
ins
fst
inc
cmp
adc
adc
push
loopne
hlt
(bad)
mov
rcl
outs
jg
inc
test
aas
pop
pop
add
push
pop
inc
(bad)
stos
mov
push
aam
inc
pop
out
inc
in
jb
das
sysenter
call
or
inc
pusha
push
xlat
out
and
adc
add
mov
(bad)
mov
sbb
inc
mov
iret
pop
iret
psubq
add
or
neg
out
cmc
jg
movs
jle
sbb
or
mov
inc
pop
inc
ins
pop
imul
push
pop
inc
pop
cmp
enter
sub
outs
pusha
aam
or
das
in
adc
xor
jecxz
in
or
mov
ja
mov
adc
pop
mov
mov
mov
addr16
and
and
cmp
inc
std
inc
lds
mov
dec
(bad)
push
rol
addr16
pop
mov
xor
xor
fnstenv
adc
and
inc
pop
inc
loopne
lahf
mov
das
inc
not
push
push
or
push
pop
jmp
inc
sbb
add
out
dec
bndldx
pop
push
push
std
inc
movs
fs
sti
pop
and
jae
outs
push
das
xor
push
add
inc
dec
frstor
or
or
mov
arpl
mov
mov
push
loop
bound
shl
pop
movs
dec
inc
sti
mov
fiadd
lock
and
dec
sub
lds
inc
or
rcl
out
and
dec
mov
inc
jae
sub
pop
add
adc
cwde
ret
out
cdq
(bad)
aam
call
outs
push
shl
jae
dec
mov
test
xchg
jmp
inc
stos
dec
mov
vmovq
xchg
int3
mov
mov
(bad)
push
je
ins
jl
sahf
lds
aas
ret
or
push
and
(bad)
adc
or
xchg
nop
(bad)
aam
fcomp
sub
dec
push
pushf
imul
or
mov
add
inc
sub
ret
rcr
push
mov
pop
jmp
bound
fdiv
test
aas
mov
nop
cmp
pop
pop
ret
or
push
cli
(bad)
push
dec
fstp
jmp
add
punpckldq
fsub
or
out
call
push
clc
mov
mov
inc
mov
mov
push
sbb
xlat
mov
xchg
push
add
ret
adc
loop
sbb
pop
xor
push
pop
cmp
adc
push
and
inc
xlat
pop
js
add
ds
add
push
add
or
pop
and
mov
pop
add
jmp
jae
fidivr
stos
mov
sar
add
pop
(bad)
dec
push
add
mov
mov
inc
into
(bad)
(bad)
pop
js
xchg
jbe
xchg
dec
xor
add
push
adc
jle
sbb
and
js
mov
jbe
pop
mov
or
jmp
jmp
out
add
cmps
je
pop
out
js
arpl
sbb
push
ret
in
(bad)
aas
adc
dec
in
mov
add
pop
pop
and
shr
lahf
inc
int
inc
or
xchg
sbb
inc
(bad)
adc
int
inc
cwde
rcl
cwde
pop
push
jmp
sar
js
push
shr
and
cmp
aas
mov
out
in
jmp
mov
(bad)
and
aad
cld
and
mov
mov
jmp
(bad)
fxch
out
or
out
dec
sbb
mov
push
ins
adc
cld
mov
pop
sub
and
data16
xor
fcom
adc
mov
ja
push
push
inc
push
pop
lock
add
mov
mov
inc
dec
pop
pop
pop
(bad)
out
add
aas
add
movs
ret
cld
das
add
xchg
sub
jns
cli
xor
pop
push
push
and
inc
inc
pop
jmp
sub
test
jl
icebp
mov
fwait
rol
push
jmp
xor
jmp
lods
inc
call
leave
pop
mov
push
pusha
sti
inc
inc
test
add
jno
push
and
mov
repz
cmovl
jmp
or
and
jbe
scas
(bad)
cld
mov
and
addr16
jl
jmp
dec
mov
xlat
je
sti
(bad)
cli
fimul
rol
and
inc
ret
lock
movs
rcr
add
or
cmp
enter
push
mov
fwait
stos
pop
cmp
push
cmps
movs
mov
pushf
pusha
je
mov
pop
in
aas
push
sar
outs
and
mov
or
add
cli
push
adc
push
push
cmp
test
mov
jecxz
and
out
sti
pop
jnp
pop
pop
pop
std
(bad)
cld
test
ss
jo
inc
inc
pusha
call
pop
adc
fnstenv
mov
mov
ret
pop
adc
lahf
outs
cwde
push
inc
retf
and
jl
add
nop
pop
xor
neg
imul
div
stos
or
pop
lds
shl
jb
or
or
idiv
jmp
sub
aaa
adc
mov
push
shl
mov
cld
pop
cmps
mov
mov
add
mov
in
mov
fimul
mov
(bad)
mov
std
shr
pop
pop
pop
fs
aad
cli
push
xchg
ins
sub
fs
xor
retf
shl
aas
push
push
sahf
sahf
and
mov
fwait
mov
pop
inc
push
stos
test
arpl
xor
jl
inc
lock
add
inc
and
sbb
mov
mov
(bad)
xor
dec
(bad)
mov
mov
push
out
pop
rcl
inc
add
cmp
ficomp
push
aas
fidiv
or
mov
stos
cmc
out
xchg
jl
mov
jnp
(bad)
push
jne
and
push
jmp
pop
ins
lds
mov
push
adc
test
imul
dec
sub
and
(bad)
fsubp
in
rcl
push
dec
aas
cmp
dec
sbb
mov
test
dec
(bad)
mov
mov
inc
adc
div
retf
jmp
push
in
mov
or
fild
test
add
gs
cmp
ret
jle
ja
mov
add
jb
pusha
rol
xor
cwde
neg
add
push
mov
rol
ret
mov
xlat
push
inc
mov
dec
jno
ret
(bad)
or
push
lods
fsin
retf
adc
clc
das
xchg
std
jns
popf
add
or
mov
mov
ja
add
(bad)
push
test
sar
(bad)
mov
push
mov
rol
shl
push
xchg
(bad)
xchg
or
bound
mov
jp
repz
rol
jmp
sbb
adc
xchg
(bad)
sub
push
push
(bad)
xchg
icebp
outs
jl
pop
mov
push
scas
jne
push
dec
dec
clc
adc
mov
inc
nop
pop
and
push
mov
ja
mov
loopne
add
mov
sti
inc
mov
mov
(bad)
push
gs
inc
pop
adc
or
xor
cs
aas
sti
mov
push
out
fdiv
xor
int3
and
push
mov
(bad)
sahf
xchg
out
add
xchg
sub
icebp
or
loop
imul
dec
outs
cmps
lock
inc
jb
imul
bound
or
aas
(bad)
cwde
ins
mov
pop
sbb
fild
dec
xchg
cld
out
cmp
fisub
mov
xor
clc
shl
sti
sbb
push
push
out
or
call
mov
ret
inc
test
sub
sub
fiadd
add
push
imul
jbe
js
and
les
pusha
xchg
arpl
pop
ins
jmp
xor
or
imul
lock
or
mov
or
sbb
inc
sbb
movs
cmp
cli
sub
sub
sahf
dec
xlat
cwde
cmp
push
(bad)
cmp
sti
jmp
sub
or
test
mov
jle
movs
mov
cs
push
adc
adc
mov
stc
out
(bad)
add
sub
or
cld
push
or
ret
xor
mov
ret
wbinvd
enter
ins
mov
pop
lock
jmp
pop
je
pop
pop
or
pop
lds
inc
xchg
lods
lock
out
test
mov
rcl
sbb
inc
outs
adc
les
xor
and
(bad)
sti
fs
mov
sbb
sbb
mov
add
xlat
std
sti
jbe
add
pop
mov
pop
sar
aas
out
outs
push
xor
mov
es
out
loopne
xor
outs
out
and
fcom
push
or
repnz
clc
pop
sbb
or
mov
sbb
add
ins
adc
push
mov
xor
jmp
std
xchg
xor
call
out
sti
jmp
jae
pop
scas
test
ror
scas
ret
add
cmc
mov
cmp
inc
xchg
sbb
jbe
mov
xlat
lock
ret
(bad)
mov
dec
pushf
add
jmp
inc
shl
adc
sbb
mov
cmp
xor
add
add
jmp
ins
loopne
jae
sub
jae
inc
inc
and
ins
cmp
inc
xchg
xor
jne
sbb
fneni(8087
setl
std
pop
mov
fisttp
loope
cmp
sar
iret
cmp
xor
shl
ja
jmp
inc
inc
(bad)
adc
jp
push
push
sub
jg
push
mov
das
outs
out
hlt
sbb
or
fbld
sub
mov
jb
mov
pop
mov
sub
pop
(bad)
out
mov
lahf
mov
jmp
lds
jmp
mov
sbb
je
scas
pop
pop
add
mov
outs
adc
inc
mov
es
pop
cli
dec
popa
fisttp
ins
leave
push
nop
push
loope
add
add
xchg
jo
or
jl
pop
mul
inc
adc
push
test
add
mov
stos
stos
int3
(bad)
sbb
(bad)
je
jne
mov
std
mov
mov
inc
dec
test
mov
fwait
push
(bad)
cli
dec
xchg
jb
(bad)
mov
out
xlat
xor
bound
int
mov
cmp
and
inc
ins
mov
dec
push
push
mov
and
adc
mov
cmc
add
mov
in
xor
lds
push
jmp
es
mov
mov
test
ins
dec
jmp
or
pop
lods
(bad)
(bad)
inc
mov
cmp
(bad)
xor
std
push
adc
inc
push
sbb
outs
test
push
(bad)
adc
inc
xlat
retf
std
sbb
add
pop
or
retf
pop
das
icebp
mov
mov
add
pop
enter
nop
push
sub
sbb
(bad)
je
call
outs
mov
pop
rol
pop
sub
(bad)
cmp
adc
mov
or
cmp
fld
ds
xchg
pushf
aam
loop
inc
jnp
jo
and
arpl
sub
sub
inc
int
mul
xor
mov
mov
stos
cli
cmp
fnstenv
mov
les
mov
add
sti
mov
and
dec
pop
pop
into
jmp
pop
inc
enter
adc
jb
clc
mov
das
cld
lahf
push
push
fdiv
retf
or
pop
jecxz
push
pop
inc
jp
jp
repz
fbld
mov
mov
ret
es
adc
stos
mov
inc
hlt
dec
mov
and
jb
push
inc
sbb
xor
in
and
(bad)
sub
leave
add
test
movs
test
dec
pop
mov
xchg
ficom
loopne
out
xlat
imul
inc
pop
xor
xor
mov
or
pop
fcmovb
inc
scas
or
arpl
mov
ret
mov
div
jg
jo
(bad)
cld
stos
xchg
(bad)
mov
push
rol
jmp
or
add
xor
test
xor
or
outs
mov
add
sar
adc
push
xor
ret
jle
jo
pusha
cmp
lds
jne
push
es
je
dec
sub
pop
mov
in
popf
add
dec
ret
pop
sti
movs
mov
ret
bound
aas
pop
add
rcl
rcr
mov
cmps
je
mov
pusha
enter
mov
int3
mov
mov
mov
pop
jbe
outs
add
sub
inc
not
pop
inc
inc
jmp
dec
(bad)
push
cmp
or
pop
add
sub
rol
aas
jne
or
or
jae
mov
push
imul
pop
push
popa
call
adc
lahf
push
outs
mov
mov
scas
cmp
cmc
inc
mov
or
and
jmp
imul
add
push
push
call
lahf
pushf
xchg
adc
pop
push
inc
mov
clc
nop
pop
and
pop
jb
test
push
inc
mov
adc
xor
outs
push
dec
es
xchg
push
fisub
loopne
jg
xor
pusha
test
movs
add
(bad)
sub
xor
jp
dec
ret
inc
pop
repz
ret
(bad)
(bad)
jo
lods
mov
dec
je
ja
inc
inc
scas
add
push
xor
out
cld
inc
mov
mov
dec
adc
adc
inc
mov
inc
in
sub
icebp
pop
test
out
out
jae
xlat
arpl
(bad)
pusha
mov
push
or
xchg
sahf
cmp
cdq
adc
das
(bad)
push
pushf
add
mov
mov
inc
test
or
call
gs
and
xor
xchg
inc
adc
js
push
and
push
jmp
lods
adc
inc
sahf
dec
mov
mov
js
imul
and
(bad)
fdiv
cld
and
retf
fidivr
push
mov
sbb
and
das
(bad)
mov
pop
jp
cmp
rcr
pop
aad
inc
fstp
xchg
push
mov
retw
mov
(bad)
sub
and
cld
mov
or
add
rcr
mov
add
(bad)
(bad)
(bad)
call
inc
add
jecxz
mov
cmc
dec
push
(bad)
movs
cmp
shr
inc
outs
ret
fwait
pop
dec
push
inc
inc
inc
and
xor
add
call
mov
clc
and
jl
push
push
adc
push
mov
jno
pusha
mov
outs
aam
inc
inc
mov
div
es
out
cwde
inc
or
pop
xchg
push
or
or
test
adc
ret
push
mov
ja
xchg
adc
outs
clc
or
mov
neg
push
jmp
call
nop
(bad)
push
(bad)
pop
add
jae
mov
inc
loopne
jmp
fidiv
hlt
ret
sti
jnp
mov
xor
scas
out
sub
or
pop
push
fisub
enter
lock
inc
dec
(bad)
pop
add
rol
push
idiv
mov
pop
adc
and
sti
out
mov
lods
pop
xor
xchg
rcr
cmps
pop
add
(bad)
xor
cmp
mov
(bad)
loop
jl
call
xchg
das
push
dec
pop
loope
cmp
mov
mov
fldcw
adc
xor
std
mov
or
xchg
pop
xchg
sbb
js
push
std
xchg
jo
pop
jp
mov
pop
mov
jg
psubw
test
add
(bad)
rcr
xor
dec
mov
rol
imul
sbb
cmp
or
adc
cld
pusha
xchg
xchg
push
jecxz
test
jae
outs
adc
test
mov
jbe
inc
inc
sbb
outs
mov
ja
pop
fist
inc
movs
pusha
jmp
(bad)
icebp
inc
and
dec
push
mov
jo
mov
hlt
add
ds
fs
test
mov
xor
sbb
adc
or
mov
fs
imul
pop
repz
or
inc
cld
mov
ret
add
shl
(bad)
and
mov
out
push
pop
add
enter
xlat
not
stos
out
repnz
das
and
push
add
out
daa
or
cwde
jg
mov
fild
xor
mov
xchg
out
rcr
(bad)
aas
xchg
mov
sti
inc
adc
sub
aaa
psllq
dec
xchg
push
push
(bad)
jg
inc
xchg
(bad)
js
push
push
sub
dec
mov
push
adc
pop
dec
add
sbb
push
add
je
das
and
in
inc
ja
jl
out
push
arpl
jg
mov
xor
(bad)
call
imul
pop
loop
mov
and
add
jbe
mov
jg
movs
push
ret
lds
jno
nop
adc
mov
(bad)
jmp
inc
out
cmp
inc
push
dec
pop
xchg
sub
shl
jo
cwde
sbb
jae
inc
sahf
pop
and
clc
pop
pusha
std
ja
pop
stc
and
pop
inc
call
adc
cmp
jbe
and
jl
ret
mov
jl
data16
pusha
test
push
fiadd
(bad)
imul
push
out
pandn
mov
mov
sbb
vorps
mov
rdtsc
cld
arpl
dec
mov
push
rol
aaa
movs
es
fwait
mov
mov
sub
mov
ins
sbb
xor
loopne
(bad)
je
adc
sub
and
sbb
sub
adc
retf
add
mov
mov
cmp
and
sti
rol
sub
and
jno
jb
xchg
inc
les
pop
jl
push
mov
iret
pop
push
call
call
test
inc
imul
dec
not
in
pusha
mov
add
pop
xchg
test
(bad)
das
push
mov
or
jg
movs
mov
enter
ja
push
add
add
pop
icebp
mov
push
cmp
jae
call
arpl
gs
mov
pop
aad
fsqrt
pop
add
mov
dec
sub
shr
out
adc
cdq
xchg
into
mov
mov
mov
shl
pop
in
mov
mov
cmc
call
adc
jae
adc
cmp
push
call
nop
push
sub
add
out
cs
add
add
sub
inc
dec
ins
push
fsub
cmp
xchg
test
test
jge
mov
jbe
clc
lds
add
mov
pop
lea
push
and
loopne
push
mov
inc
and
mov
(bad)
push
jge
jae
cmp
mov
mov
mov
pop
into
test
adc
hlt
sahf
mov
xor
pusha
push
jp
sti
or
pop
out
inc
das
jno
or
jge
xchg
pop
mov
lock
add
cmps
mov
scas
js
sti
test
mov
femms
jmp
sub
dec
stos
pusha
jne
cmps
jmp
adc
mov
cmps
cli
push
push
or
mov
dec
mov
add
ror
ret
call
pop
dec
aas
push
push
push
push
repz
movs
and
sar
add
jae
pop
push
push
or
or
or
or
jl
rcl
and
mov
pop
(bad)
mov
push
loope
or
aas
jbe
inc
jg
add
cld
mov
loopne
mov
ficomp
cmc
call
repz
test
je
dec
(bad)
pop
push
push
lock
ja
mov
ja
mov
ret
inc
add
mov
(bad)
hlt
int
jnp
outs
jae
fs
sahf
scas
pop
outs
xchg
jb
int
js
or
fadd
mov
and
add
fadd
mov
push
or
add
push
call
bound
call
fldcw
std
out
test
cmp
xor
xchg
je
pop
push
call
mov
jle
fwait
mov
push
cmp
inc
xlat
jmp
add
mov
test
std
cli
out
inc
add
xor
sub
cmp
xor
push
and
ins
movs
pop
push
test
sbb
xor
sbb
jae
inc
(bad)
fbstp
mov
lds
bound
sbb
call
imul
cmp
pushf
sti
icebp
inc
pop
add
std
cmc
mov
pop
mov
outs
das
loopne
(bad)
mov
shl
(bad)
repnz
or
jne
aad
dec
mov
push
jg
cmps
pop
das
fdivr
push
xor
fcom
inc
retf
mov
add
add
inc
jmp
cmp
cmp
fimul
adc
out
je
xchg
adc
mov
add
or
idiv
xchg
sub
jb
out
out
add
out
mov
add
jmp
mov
inc
pop
(bad)
xchg
xor
fdivr
cld
out
add
add
add
ret
pop
pop
loopne
nop
add
je
das
ss
dec
jge
inc
clc
or
adc
in
out
add
cs
sub
dec
les
inc
mov
inc
push
stos
packuswb
inc
fdivp
and
dec
mov
sahf
inc
mov
sti
stos
imul
div
sbb
cmp
or
mov
aad
add
add
push
or
dec
jb
adc
dec
jne
mov
out
dec
pusha
pop
test
mov
inc
out
call
jmp
inc
pop
sar
cmp
fs
sbb
cmp
sub
ins
adc
icebp
mov
mov
mov
sbb
mov
add
xchg
add
xor
push
sub
xor
cli
inc
icebp
pop
je
sub
cli
pop
mul
not
jnp
repz
div
shl
push
add
mov
imul
push
inc
std
ret
jne
(bad)
les
sub
dec
hlt
dec
cmp
daa
out
(bad)
jmp
rcr
or
stos
jge
sti
dec
mov
dec
jmp
sbb
sub
pop
mov
jg
add
mov
mov
aas
aas
enter
sbb
inc
pop
xlat
mov
das
add
inc
test
xchg
test
stos
xchg
stos
loope
lds
ficom
pop
(bad)
int
ss
push
ret
push
dec
pop
mov
or
into
sti
sbb
aad
aas
and
cld
sbb
push
je
outs
mov
adc
jl
aad
sub
push
es
(bad)
jbe
and
push
add
iret
xor
pop
hlt
mov
movs
(bad)
imul
fcmovnb
pop
(bad)
pop
pop
push
fld
int
mov
pop
inc
ins
(bad)
cli
push
add
jae
dec
mov
push
push
out
push
jb
cld
lds
dec
sub
sub
push
pop
aad
sub
dec
outs
aas
dec
adc
adc
push
idiv
int3
test
xor
call
inc
lahf
mov
je
aas
mov
setle
and
iret
aas
sbb
inc
pop
inc
in
es
pop
enter
pop
push
add
stos
add
mov
push
out
dec
sbb
xor
push
mov
je
inc
mov
es
out
xchg
push
sbb
mov
mov
fs
and
xor
sbb
arpl
cmp
in
push
dec
add
and
mov
pop
mov
imul
jbe
jns
pop
pop
jb
lods
test
fstp
mov
je
aas
in
mov
add
and
pop
std
dec
mov
std
dec
add
inc
inc
sbb
push
call
jg
mov
jg
aas
scas
ret
(bad)
jmp
in
out
rcr
shl
jle
add
cwde
std
xor
pop
dec
fisttp
pop
and
or
jg
or
shl
cld
dec
call
jbe
push
and
call
add
(bad)
fiadd
sub
call
rcr
mov
add
ret
and
test
out
(bad)
(bad)
or
mov
sub
or
xchg
pop
pusha
pop
mov
sub
shl
pop
or
xor
adc
outs
fidiv
cmps
xchg
std
inc
dec
or
or
sbb
cli
fsubr
(bad)
aas
fiadd
sbb
jmp
xchg
jmp
pop
mov
push
(bad)
jb
(bad)
(bad)
fwait
(bad)
outs
pop
xor
mov
pop
in
add
popa
std
outs
data16
pop
add
cmp
lds
add
int3
ret
shr
and
(bad)
push
inc
imul
mov
test
scas
jg
pop
mov
sub
stos
mov
fadd
out
imul
push
adc
mov
pop
mov
ins
push
jp
(bad)
sub
inc
popa
out
jl
push
push
fisttp
out
imul
mov
mov
(bad)
pop
inc
inc
xor
xchg
rcr
jle
test
ja
or
sbb
xchg
es
gs
cmp
dec
or
mov
add
add
pop
add
sub
dec
sbb
mov
cmp
fiadd
popa
pop
inc
ja
call
aas
test
out
test
or
mov
pop
add
test
mov
or
aas
or
jp
add
outs
pop
ins
loope
push
addr16
je
stos
adc
dec
es
or
sbb
cld
adc
pop
add
inc
shl
push
shl
sbb
rol
sbb
cli
xor
xchg
inc
mov
push
push
loope
xor
mov
pop
sbb
adc
push
lods
stos
movs
push
mov
sub
rol
clc
ffree
mov
inc
(bad)
test
test
xor
retf
call
inc
ficom
mov
out
or
in
mov
mov
arpl
sbb
mov
(bad)
(bad)
into
(bad)
pop
fincstp
(bad)
movs
out
sbb
iret
inc
mov
xchg
stos
scas
(bad)
sbb
add
stc
imul
add
fldenv
push
jae
or
fs
mov
fmul
jno
push
cmc
fisubr
or
dec
push
pop
cmp
xor
inc
jle
daa
mov
outs
(bad)
pusha
mov
push
cmp
dec
retf
and
pusha
cmp
mov
cwde
inc
add
inc
pop
push
push
adc
jno
pop
rol
cdq
add
bound
inc
inc
jg
std
add
mov
sub
mov
pop
stos
cmp
mov
test
push
cli
fcomp
je
xor
push
lods
inc
sbb
fdiv
jno
hlt
inc
push
loopne
adc
inc
mov
xchg
mov
popa
mov
xchg
adc
fdivr
fdivr
pop
je
pusha
les
fstp
arpl
mov
push
jo
cmps
sub
fsubp
jmp
arpl
pop
push
inc
pusha
das
arpl
mov
mov
lds
cmc
or
inc
mov
clc
fist
mov
(bad)
imul
in
dec
cmp
mov
ins
in
scas
pop
mov
cmp
nop
jle
sub
aas
cmc
(bad)
icebp
jg
push
aad
jmp
(bad)
cli
addr16
jnp
js
add
push
add
adc
sar
add
cli
inc
addr16
call
in
xchg
inc
push
xchg
fdivr
mov
call
es
adc
push
imul
xchg
push
das
retf
cmp
div
or
add
dec
push
call
loopne
sbb
(bad)
outs
arpl
fs
lock
add
loope
jmp
and
jg
std
jns
mov
loope
test
push
cmps
clc
and
(bad)
out
mov
sub
jmp
imul
inc
mov
add
pop
mov
lods
xor
xor
cmp
mov
imul
fadd
mov
test
pop
jae
mov
add
adc
jmp
inc
rcl
xor
xchg
cmp
clc
test
stos
cmp
fcmovbe
das
push
dec
imul
or
pop
push
sbb
mov
push
or
mov
ins
xlat
loop
inc
ret
mov
(bad)
neg
adc
inc
ret
add
push
push
pop
dec
add
push
(bad)
sbb
neg
(bad)
mov
or
jg
test
and
add
adc
xor
test
inc
rcl
popa
sti
scas
pop
adc
mov
mov
inc
inc
pop
inc
adc
fld
xchg
call
nop
ficomp
addr16
xor
sbb
jmp
fs
lahf
adc
inc
mov
inc
clc
sub
mov
add
push
retf
clc
mov
pop
or
shl
and
jecxz
mov
or
mov
or
pop
jmp
data16
fwait
dec
loop
arpl
aas
test
inc
and
adc
aaa
ins
clc
test
or
call
aas
(bad)
adc
push
(bad)
cmc
aad
push
and
inc
test
dec
mov
popa
mov
pop
out
or
and
xchg
inc
addr16
add
into
sti
mov
jg
jmp
mov
repz
inc
xor
enter
rcr
aas
ins
ficomp
jnp
out
(bad)
and
push
mov
and
push
stos
xchg
adc
jb
ja
dec
pop
call
jmp
push
push
pop
mov
sti
adc
pop
cwde
cmp
std
pop
adc
movntq
mov
je
ja
enter
std
(bad)
adc
das
add
add
jle
xchg
lods
pop
(bad)
jae
xor
cmp
lock
cmovb
cld
repnz
xor
int
xor
lds
jge
out
cld
cmps
inc
mov
and
jp
adc
out
adc
call
adc
imul
pop
jbe
add
and
js
mov
rcl
mov
jge
je
dec
xor
adc
add
sbb
cli
pop
outs
add
sbb
movs
mov
mov
stc
cmp
pop
cld
jae
shl
shr
mov
xor
outs
aas
test
cmps
push
stos
addr16
stos
hlt
sub
mov
in
cmc
(bad)
push
add
pop
and
loop
dec
(bad)
dec
xor
and
sti
jo
pusha
test
jle
add
dec
dec
sbb
(bad)
jb
jp
and
pop
mov
ficomp
ret
pop
add
dec
cwde
inc
pop
inc
mov
xchg
mov
push
test
sbb
hlt
pop
or
(bad)
mov
mov
outs
(bad)
mov
mov
xchg
sbb
inc
cmp
jl
push
push
jmp
je
les
inc
les
xor
push
push
mov
xchg
lahf
add
aad
inc
add
cmpps
rcl
test
out
and
pop
sbb
adc
jnp
mov
pop
and
inc
pop
add
dec
loopne
outs
imul
mov
push
cli
push
push
das
(bad)
cmp
retf
mov
add
adc
inc
cmps
pop
add
(bad)
call
loope
and
out
sbb
or
cld
je
sbb
aas
imul
jge
dec
aam
jl
add
xor
lock
dec
aas
loop
lods
push
iret
xchg
mov
enter
inc
xchg
stc
adc
pop
pop
dec
xchg
ret
inc
enter
ss
test
cmc
cmp
or
in
cwde
lods
cmps
push
aaa
nop
and
pop
stc
inc
mov
mov
pop
sub
adc
imul
push
sbb
call
and
mov
mov
inc
ret
rcr
sub
inc
stos
loopne
add
fnsave
mov
neg
pop
adc
or
push
mov
sti
pop
add
popa
dec
int
es
sub
movs
xchg
inc
sbb
cmp
mov
test
or
(bad)
fld
add
sbb
out
dec
sbb
je
xor
bnd
ret
mov
mov
test
add
push
test
jmp
outs
add
out
test
pop
loopne
std
push
jg
mov
mov
call
jbe
(bad)
imul
push
push
cli
por
dec
mov
arpl
push
or
add
add
mov
ins
lock
pusha
mov
or
(bad)
sbb
jmp
cld
adc
aam
mov
jae
pop
or
(bad)
clc
out
dec
mov
test
xchg
sub
mov
std
int
shl
pop
je
(bad)
jecxz
cs
(bad)
ss
or
loopne
xor
ins
push
xor
cmp
dec
cli
(bad)
cli
push
call
ins
xlat
adc
inc
lds
xor
outs
div
xor
ret
ja
movs
pop
cmp
dec
(bad)
adc
jbe
ret
mov
jb
jg
jg
push
jg
dec
and
clc
ficomp
mov
adc
ins
cmps
mov
test
ror
inc
mov
dec
mov
and
ror
rcl
pop
test
ja
lods
push
in
sub
xchg
call
iret
push
cs
add
fs
and
xchg
inc
or
fst
ss
xor
jbe
xchg
call
aaa
mov
mov
cld
(bad)
test
pop
push
or
(bad)
pop
push
mov
stos
hlt
mov
or
jne
add
pop
fldcw
out
or
(bad)
inc
mov
test
cmp
sub
mov
pushf
enter
mov
xlat
pop
aas
mov
push
inc
or
sub
push
push
call
enter
mov
(bad)
mov
push
retf
mov
mov
pop
mov
inc
test
sti
(bad)
lock
push
push
lods
bound
int3
mov
inc
pop
push
adc
(bad)
das
ss
xor
xor
je
pop
inc
movs
mov
pop
sub
push
or
jmp
inc
pusha
inc
sbb
sti
cmp
mov
lahf
mov
mov
jmp
pop
cld
adc
(bad)
push
push
dec
in
outs
inc
and
sbb
cwde
inc
jb
mov
lahf
or
out
adc
cwde
or
loop
mov
pusha
adc
push
cmovg
int
sti
or
fisttp
cmp
jmp
push
add
mov
xlat
idiv
add
std
adc
push
dec
int3
inc
aas
inc
mov
aaa
popa
add
pop
mov
push
lods
es
bound
xor
sbb
pop
(bad)
fld
mov
aas
pop
leave
jp
pop
sub
lock
adc
adc
or
mov
aas
call
test
jae
add
ret
xor
inc
add
fistp
sar
push
push
repnz
adc
ja
jmp
jmp
mov
push
mov
fsub
sar
int3
ins
mov
add
push
repz
cli
mov
mov
dec
sub
cmp
sbb
add
and
mov
xchg
aam
loopne
imul
aas
and
call
inc
arpl
mov
or
cwde
pusha
jl
sti
out
sub
push
(bad)
xchg
jbe
push
loop
xchg
and
mov
call
mov
fucomi
xor
int3
mov
inc
push
or
add
add
aas
sub
jo
ret
add
jecxz
pusha
mov
ret
cmp
pushf
mov
or
inc
add
adc
mov
and
pop
pop
add
inc
repnz
jno
(bad)
pop
stos
stos
jmp
mov
cmp
aam
pop
or
mov
or
sub
jae
es
push
pop
das
xor
xchg
retf
outs
dec
add
add
test
movs
and
dec
inc
sbb
outs
clc
call
dec
(bad)
pop
ret
stos
test
add
pop
dec
adc
cli
and
mov
mov
fistp
stos
lock
enter
xchg
and
repnz
in
mov
pusha
mov
inc
mov
or
mov
push
add
jmp
mov
icebp
or
pop
(bad)
sti
mul
sbb
or
or
(bad)
adc
out
sbb
pop
jge
iret
scas
fwait
inc
xchg
ss
cmp
mov
lods
ficomp
inc
adc
push
dec
xchg
sub
retf
xor
cmp
fnstenv
add
nop
pop
mov
push
and
fstp
repnz
mov
mov
movs
jmp
out
js
mov
pushf
pusha
cld
cld
(bad)
xchg
mov
inc
ret
stc
mov
repz
aas
inc
dec
out
xor
pushf
sub
nop
call
and
jl
mov
test
adc
out
(bad)
out
push
mov
push
mov
not
mov
mov
mov
push
lock
xchg
inc
sar
(bad)
xchg
push
test
pusha
std
test
push
or
ret
aad
push
and
pop
inc
xor
xor
or
pop
pop
aas
ret
mov
adc
jb
add
neg
blci
fld
inc
je
movs
add
jmp
mov
ret
nop
std
pop
(bad)
mov
lea
or
test
scas
and
div
fcmovb
cld
fidivr
mov
jp
jle
pop
or
lods
std
mov
mov
or
(bad)
cli
jmp
addr16
mov
push
out
pop
inc
add
mov
sar
and
les
loop
iret
rcl
push
aas
sti
jb
test
or
xor
rcr
xchg
stos
test
add
test
push
not
jmp
and
mov
lock
(bad)
mov
ror
pusha
inc
mov
in
pop
mov
mov
aam
jl
ins
inc
xchg
(bad)
scas
movs
dec
fldenv
pop
mov
cs
pop
test
mov
xchg
add
mov
inc
cld
jg
jmp
(bad)
jle
push
push
std
fld
mov
bound
adc
(bad)
sub
inc
sbb
cli
lahf
aad
into
sti
clc
mov
cmovnp
or
push
rol
dec
xchg
cmp
mov
gs
inc
pop
out
inc
jbe
das
mov
inc
xchg
push
jnp
ds
inc
aad
cld
sahf
(bad)
inc
mov
add
add
ret
scas
or
add
push
outs
push
in
mov
(bad)
pop
add
ret
mov
(bad)
pop
add
dec
cmp
jg
sub
loope
add
rol
jmp
ss
or
push
sbb
jbe
xor
dec
pop
jnp
and
mov
les
mov
fmul
add
sub
jge
mov
(bad)
test
test
aad
ret
inc
inc
and
add
mov
sti
inc
push
fmul
push
shl
repnz
inc
(bad)
cld
data16
cwde
mov
(bad)
jmp
xlat
ret
(bad)
and
scas
ss
dec
jecxz
and
push
icebp
(bad)
dec
(bad)
adc
fsub
push
pop
test
sub
mov
push
rcr
inc
ret
pop
push
adc
push
cmp
fwait
and
out
enter
and
push
loopne
cmp
mov
outs
inc
pop
push
inc
ror
pusha
ds
push
add
inc
je
ins
jae
or
jmp
hlt
ret
jmp
or
xlat
loop
adc
lahf
aad
adc
sub
ins
loopne
call
pop
cwde
fs
push
add
adc
(bad)
xor
test
les
jp
push
mov
div
inc
push
(bad)
ss
mov
jge
loopne
cli
movs
test
test
push
adc
or
test
add
sti
mov
mov
sbb
(bad)
or
xor
gs
lock
ss
outs
fisttp
js
jg
xor
inc
mov
xchg
inc
xchg
push
push
stc
push
pop
push
std
add
jbe
push
or
cmp
jbe
add
mov
mov
sub
sub
xor
xchg
scas
test
xchg
inc
jo
fadd
inc
in
(bad)
jg
pop
mov
jmp
out
inc
inc
test
fist
inc
add
(bad)
fbld
add
movs
add
sub
call
dec
js
jmp
out
in
mov
pop
adc
jb
jmp
(bad)
fnstsw
inc
jb
add
push
lods
stos
sbb
inc
push
push
inc
jnp
jo
jle
std
cmc
bound
add
and
cli
out
ret
or
sub
stc
cli
pop
add
ins
sti
and
enter
outs
push
je
jmp
and
std
ja
push
fcmovbe
mul
sti
push
sbb
and
or
add
lahf
aas
add
mov
(bad)
pop
jg
ins
std
inc
test
pop
int
cmp
(bad)
jg
cmc
add
xlat
sub
inc
ret
aad
xor
mov
xor
inc
(bad)
push
mov
xor
pop
adc
sbb
mov
mov
(bad)
jmp
call
adc
xchg
or
add
je
adc
cli
sbb
jl
test
add
ins
aam
mov
or
jne
jg
movs
jmp
test
add
int
loopne
or
cmps
rol
retf
sub
call
test
repnz
adc
hlt
pop
mov
std
push
mov
mov
xchg
sub
je
and
cmp
xchg
mov
(bad)
es
call
mov
loop
cmps
sub
inc
and
add
xor
test
arpl
jb
mov
add
and
dec
lock
and
cld
lds
dec
jae
inc
and
push
inc
pop
mov
scas
in
jg
idiv
or
mov
inc
pop
cmp
dec
sub
jg
out
push
mov
das
cmp
add
movs
xor
cmp
test
sbb
cmps
push
les
dec
add
pop
pop
pop
dec
das
in
and
adc
xor
(bad)
mov
sbb
fcmovnbe
jmp
outs
push
mov
das
mov
test
xchg
aad
(bad)
jmp
sbb
pop
add
les
sar
arpl
scas
fidivr
mov
inc
scas
sbb
fldcw
push
jge
add
or
push
push
jp
push
daa
push
inc
push
fwait
sbb
inc
ret
out
fwait
bound
mov
cli
ja
add
xchg
sbb
or
loopne
out
or
mov
mov
ins
mov
mov
neg
sahf
add
inc
je
add
ret
add
jmp
jae
cli
je
popf
xchg
pop
add
stos
add
pop
inc
inc
and
xchg
jmp
ja
sub
aas
hlt
out
jb
push
hlt
push
push
and
lock
and
pop
inc
inc
arpl
psllw
inc
dec
movs
cmp
dec
je
ror
mov
push
jmp
xchg
shl
test
xchg
ja
jae
add
sub
(bad)
test
push
mov
mov
aas
add
sbb
retf
jle
inc
sbb
ret
and
loop
or
(bad)
or
inc
das
add
push
and
out
cs
je
mov
and
js
ret
mov
push
inc
ins
data16
add
mov
inc
pop
push
loopne
adc
(bad)
data16
icebp
xchg
push
dec
ret
cld
cld
stos
xor
in
inc
and
shl
call
(bad)
rcr
dec
add
xchg
dec
test
mov
addr16
stos
pusha
cmp
push
imul
mov
test
lahf
mov
shr
sub
mov
or
inc
(bad)
cmp
scas
cmp
mov
inc
lock
fiadd
push
loope
aas
inc
mov
aaa
add
inc
xchg
retf
inc
out
mov
fcom
(bad)
jbe
inc
std
iret
add
sub
sub
pop
idiv
sub
dec
jb
pop
pop
rol
xchg
or
push
(bad)
mov
pop
out
push
mov
add
aas
loope
out
loopne
daa
mov
push
mov
ret
gs
xchg
add
or
mov
and
js
dec
inc
add
les
sti
imul
je
xchg
or
jge
dec
aad
push
or
jecxz
jo
call
xchg
gs
or
mov
and
rcl
es
out
add
add
dec
xchg
(bad)
data16
mov
add
aas
add
jae
push
inc
fcom
xchg
shl
jl
pop
outs
push
cmp
sbb
sbb
loopne
pop
test
dec
push
inc
pusha
inc
(bad)
mov
fisttp
(bad)
jmp
(bad)
clc
mov
inc
add
cld
lock
mov
test
pop
repnz
sti
je
jnp
popf
add
push
or
push
(bad)
xchg
sub
push
cld
jae
mov
jmp
ins
std
(bad)
sti
pop
push
xor
push
aam
push
mov
mov
inc
(bad)
jb
pop
ficomp
inc
inc
ret
cmp
mov
push
mov
add
inc
cmps
add
add
mov
jg
and
add
cmp
cmp
jbe
sbb
mov
jg
(bad)
jg
pop
andps
dec
add
fs
xchg
push
(bad)
xor
mov
xor
and
jg
aam
mov
(bad)
je
push
out
loope
push
add
mov
repz
cwde
jg
xchg
mov
xlat
out
add
push
push
(bad)
mov
and
call
mov
mov
add
xor
dec
inc
or
shr
mov
cmp
sti
loopne
mov
mov
stos
add
iret
call
and
push
sti
mov
aam
push
fwait
push
push
jmp
mov
cmp
xor
sbb
sbb
jae
cmp
or
mov
and
shr
add
pop
std
inc
repz
movs
pop
push
data16
stos
xor
in
cmp
jo
ret
je
in
add
into
(bad)
es
jb
test
inc
jle
add
push
mov
jno
pop
mov
push
popa
mov
mov
xchg
add
inc
ds
mov
push
sbb
mov
mov
(bad)
xor
std
outs
call
pop
xor
push
std
mov
outs
push
in
mov
add
call
push
std
psubusb
fnstenv
fist
jecxz
sub
outs
mov
or
inc
js
and
adc
pop
jns
xchg
adc
dec
retf
pop
ret
mov
or
pusha
mov
in
jl
loope
jno
pushf
xchg
xor
jae
daa
ins
dec
jbe
or
mov
add
inc
jnp
shl
mov
mov
and
xor
outs
pop
ins
push
push
cli
sub
or
xchg
sub
adc
xchg
mov
push
clc
es
(bad)
stos
imul
lock
or
or
push
inc
enter
movs
mov
push
pop
pop
xor
mov
in
push
dec
mov
xchg
dec
pusha
das
daa
test
loop
mov
lds
mov
fild
rol
lea
inc
daa
push
jmp
repnz
mov
call
aas
sti
dec
mov
(bad)
push
fsubr
out
(bad)
aas
test
aam
jg
sahf
call
popf
adc
imul
jl
(bad)
in
out
jp
cli
aas
jmp
mov
out
sti
jae
or
sub
fdivrp
arpl
scas
out
sub
push
mov
rcr
outs
pop
and
dec
xor
jle
shr
inc
ins
and
push
adc
ficomp
ins
inc
xor
add
inc
stos
inc
mov
adc
aam
hlt
shl
dec
out
ins
and
dec
xor
xor
test
dec
(bad)
push
add
push
add
rol
in
test
shr
inc
mov
mov
enter
(bad)
mov
(bad)
pushf
pop
adc
xchg
rol
out
movs
mov
xchg
xchg
xor
stos
adc
add
pusha
fnstsw
jmp
mov
and
mov
pop
aas
cmps
cld
sub
cmp
ret
pop
imul
push
adc
jo
pop
arpl
clc
call
imul
and
pop
rcl
imul
dec
leave
in
dec
xchg
ss
mov
push
enter
lds
call
adc
sti
jge
push
mov
scas
mov
add
and
shl
shr
arpl
xchg
mov
bound
pop
mul
sar
imul
or
push
dec
adc
jp
or
mov
cmps
pop
out
popa
xchg
jae
adc
pop
bound
push
mov
adc
rol
mov
sbb
xchg
arpl
inc
leave
sub
pusha
fs
push
inc
xlat
mov
dec
fwait
jge
aad
dec
push
dec
mov
xor
sbb
fisubr
sbb
add
dec
sub
cmp
xchg
popa
mov
adc
jbe
mov
inc
ins
pop
(bad)
xchg
(bad)
push
sub
dec
push
scas
fwait
cmps
psubq
lods
mov
aas
scas
add
cmp
pop
pop
mov
in
out
or
sub
mov
out
arpl
aas
fcomp
pop
pop
mov
xchg
dec
and
cmp
jae
or
add
call
or
call
outs
fs
jno
or
and
jle
sar
sti
hlt
mov
imul
ins
and
push
cs
inc
bound
adc
lock
addr16
fisub
pop
out
not
imul
cmp
add
out
pop
outs
jbe
mov
out
(bad)
call
mov
push
inc
jmp
push
lahf
inc
mov
test
(bad)
sub
mov
pop
iret
inc
jg
aad
mov
jmp
aaa
jae
dec
jmp
pop
inc
ficomp
jae
inc
add
push
adc
gs
cmp
inc
(bad)
(bad)
push
cli
jmp
mov
pop
dec
cli
xor
sub
loopne
out
(bad)
lods
cwde
push
mov
jl
neg
xchg
sbb
mov
adc
aas
mov
jbe
adc
inc
and
mov
aas
ret
inc
add
mov
pop
add
xchg
and
je
cmp
(bad)
xor
test
fild
test
clc
mov
inc
call
sub
mov
lock
ret
bts
add
inc
loope
mov
test
xchg
jmp
add
lods
adc
push
cld
fild
ins
test
mov
fiadd
and
fst
nop
cmp
(bad)
aas
add
call
inc
mov
ins
sbb
les
mov
sub
pop
imul
mov
je
test
mov
and
(bad)
(bad)
(bad)
mov
mov
mov
sahf
call
mov
loop
icebp
and
mov
ror
loop
pop
sub
pop
push
jg
mov
adc
pop
mov
fbld
mov
or
iret
lods
(bad)
inc
push
xlat
inc
adc
pop
cmp
push
cmc
pop
xchg
mov
xchg
push
xor
or
bound
pusha
add
(bad)
xor
ret
jmp
cmc
pop
clc
addr16
and
ja
mov
cli
pop
out
idiv
add
fistp
popa
add
add
or
sbb
sub
or
push
ja
mov
dec
imul
mov
ins
loop
or
xchg
imul
add
mov
das
dec
inc
int3
test
stos
pop
push
pop
jmp
inc
es
mov
pop
inc
add
(bad)
pop
(bad)
scas
mov
mov
movs
cmp
fdivr
dec
jmp
cmps
jo
push
aas
adc
and
aaa
aam
adc
das
mov
mov
inc
jmp
pop
movhps
syscall
sbb
gs
push
mov
addr16
add
out
(bad)
pop
cmp
fwait
test
out
push
cmps
inc
push
(bad)
bound
xchg
fs
adc
hlt
nop
and
mov
je
(bad)
ja
xchg
inc
jnp
(bad)
mov
pop
pop
(bad)
js
in
xchg
lahf
or
add
rcl
and
xor
or
xor
mov
loopne
xchg
adc
fdivr
add
push
sbb
and
xchg
pop
pop
aas
xchg
dec
jnp
push
cwde
push
add
jp
and
add
jge
xor
push
add
movs
pushf
and
(bad)
fwait
and
xchg
push
xor
inc
mov
push
inc
xchg
jo
fiadd
push
sub
mov
arpl
fadd
push
mov
xor
div
movntq
shl
add
mov
or
sub
adc
stc
sti
push
pop
pusha
mov
mov
fld
outs
fsub
out
call
out
(bad)
sub
jg
inc
push
aas
adc
dec
mov
stos
xor
push
sub
push
cld
in
aas
sbb
cmp
inc
or
mov
aam
adc
data16
jmp
and
je
(bad)
push
mov
push
jae
mov
(bad)
jae
inc
out
adc
pop
push
xor
les
sbb
stc
mov
dec
ret
push
call
aaa
shr
push
add
or
jmp
push
(bad)
mov
add
fwait
sbb
bswap
ds
je
and
(bad)
outs
mov
pop
rcl
pusha
test
inc
ret
mov
arpl
mov
int
adc
inc
in
and
mov
pop
test
out
(bad)
cld
shr
std
and
nop
test
push
aas
lds
sub
adc
adc
sbb
out
mov
mov
xor
jl
xlat
es
push
loop
and
lahf
inc
rcr
mov
add
inc
jae
mov
cmps
ret
(bad)
cmp
mov
loopne
call
cli
inc
out
mov
inc
mov
pop
mov
jle
jno
pusha
ins
mov
(bad)
jne
mov
or
fild
adc
pop
inc
cmp
call
adc
inc
loope
inc
shl
adc
mov
and
inc
pop
add
sbb
inc
rol
add
jg
pop
ins
call
dec
push
push
jecxz
or
bound
cmp
clc
and
aaa
cwde
fdivr
xlat
dec
add
stos
xor
gs
bound
add
movups
inc
or
call
cmp
adc
mov
xor
push
mov
icebp
test
stos
mov
dec
stc
mov
shl
pop
les
mov
ret
fisubr
int3
pop
add
add
mov
xor
outs
(bad)
push
std
rcl
xchg
pop
lock
out
mov
call
push
arpl
jp
push
pusha
mov
mov
int3
jecxz
adc
xchg
rol
(bad)
leave
sub
repnz
daa
inc
fnstsw
fcom
jb
pop
or
ja
stos
rol
clc
dec
adc
sbb
sti
and
inc
imul
pop
cmp
add
in
sub
jmp
ret
ror
fadd
add
shl
mov
mov
inc
inc
shl
out
xchg
dec
mov
cmp
pop
or
add
bswap
aas
or
sub
inc
adc
cmp
fs
dec
retf
je
das
mov
add
and
push
cmps
or
or
push
cmp
pop
or
ja
data16
or
test
cwde
stos
xchg
mov
inc
sbb
fild
popf
shr
xor
inc
jnp
in
sar
(bad)
push
xchg
out
imul
mov
jns
inc
xor
jp
push
fwait
and
cmp
(bad)
in
je
cmp
aad
pop
std
push
push
mov
xor
inc
ja
push
aad
adc
(bad)
in
out
cli
mov
mov
aas
dec
xor
push
pop
dec
xor
ret
jnp
aad
adc
pusha
mov
sub
sbb
pop
outs
inc
je
dec
push
fsub
fs
dec
hlt
aas
cmps
das
push
pop
call
ret
dec
mov
(bad)
stos
xchg
pop
das
pusha
pop
ret
mov
add
(bad)
aad
push
jmp
lahf
sub
call
sbb
mov
mov
pop
push
test
jo
inc
arpl
fidivr
and
movs
cmc
gs
adc
mov
add
addr16
mov
push
inc
push
jae
sti
pop
mov
sti
(bad)
sbb
clc
and
jbe
add
jo
mov
mov
pop
sbb
test
mov
sub
add
mov
gs
(bad)
imul
mov
sti
push
add
push
mov
inc
inc
inc
xor
arpl
cmps
popf
clc
not
(bad)
sbb
inc
loop
leave
std
add
or
or
shl
cmp
psadbw
push
pushf
jle
out
cmp
ret
jmp
lods
ins
push
push
push
and
push
shl
pop
call
sti
and
add
dec
dec
pop
push
pop
push
cwde
fisub
pop
xor
push
fild
mov
mov
aam
push
rcl
sbb
push
push
push
test
into
rol
jae
dec
lods
fdiv
jge
sub
lock
pop
std
xchg
or
arpl
xlat
xchg
inc
and
scas
cmps
mov
outs
nop
or
inc
fcmovb
jg
push
jmp
inc
sbb
fmul
add
mov
cld
xchg
loopne
imul
add
mov
dec
push
call
fiadd
jmp
inc
pusha
cmp
inc
cmp
mov
adc
mov
inc
addr16
dec
push
mov
out
fbstp
cmps
ss
jmp
mov
dec
mov
jmp
mov
in
inc
xor
push
mov
sti
sub
jno
fist
xor
push
or
cmc
sar
arpl
add
inc
dec
sbb
pop
popa
aad
shl
(bad)
daa
dec
std
call
ror
push
push
loop
cmp
sar
dec
push
repnz
cmp
pop
inc
arpl
mov
jmp
shr
loop
mov
mov
scas
mov
test
add
lea
dec
adc
jb
mov
(bad)
in
xor
xchg
scas
or
mov
mov
inc
or
adc
cs
pop
dec
les
push
(bad)
jle
inc
or
out
inc
jmp
dec
xor
and
(bad)
sbb
push
out
add
inc
les
test
es
out
adc
(bad)
jg
out
cmp
and
inc
ins
int3
shl
and
out
aas
sub
mov
add
jno
inc
aas
push
fwait
inc
je
or
out
dec
jmp
xlat
mov
pop
ins
movs
xchg
adc
adc
in
or
mov
inc
or
pop
(bad)
(bad)
in
data16
ret
aas
jmp
cmp
add
sub
adc
push
aam
mov
int3
mov
mov
clc
call
push
mov
pusha
dec
cmp
sub
sub
je
mov
ins
xor
push
jno
and
test
or
push
(bad)
jl
xor
jb
stos
dec
mov
std
test
ins
nop
or
call
inc
jae
sbb
in
lods
loope
mov
jmp
add
fs
sub
fs
lds
jne
fs
pusha
mov
inc
sub
cs
push
xchg
push
enter
pop
add
and
push
(bad)
daa
adc
movs
fisttp
mov
ret
xor
enter
es
scas
mov
rcl
out
mov
ds
jg
xchg
mov
jg
(bad)
sti
xchg
ret
and
(bad)
jo
scas
xchg
repz
mov
add
pop
add
(bad)
data16
lods
jg
or
adc
ret
dec
mov
sub
push
push
es
sti
xor
pop
pop
add
push
xor
inc
xchg
loopne
call
push
out
xor
pop
iret
pushf
pop
not
aad
loope
(bad)
scas
adc
push
mov
cld
sub
les
cmps
pop
or
push
pushf
mov
push
mov
push
shl
clc
cs
movs
ins
mov
jg
icebp
xor
in
jp
mov
ins
repz
std
ins
xchg
outs
jle
sti
popf
dec
je
and
and
mov
stos
push
jmp
sub
add
xor
lahf
std
dec
scas
ss
inc
mul
sbb
adc
pop
fild
shl
jb
inc
nop
sub
jmp
inc
cld
jle
or
pop
add
rcr
or
or
(bad)
(bad)
clc
push
fsubr
test
or
inc
or
adc
retf
push
push
add
mov
cs
dec
mov
xor
call
adc
sbb
leave
inc
mov
mov
inc
(bad)
outs
aas
addr16
jae
shl
mov
add
js
inc
imul
and
sbb
outs
push
inc
sub
inc
add
loop
lds
ret
jmp
sti
arpl
mov
dec
add
add
pop
lock
std
loope
and
mov
add
push
sti
hlt
add
or
out
pop
pop
push
pop
add
ret
das
adc
add
pop
sub
push
aas
sub
shl
pushf
sub
lods
das
ficomp
xchg
add
icebp
lds
loopne
pop
ss
aas
inc
inc
test
or
mov
pop
push
fdiv
mov
cmp
outs
pop
loopne
adc
lds
ret
add
mov
pop
or
sbb
scas
arpl
jb
xor
or
dec
je
mov
push
inc
or
cdq
aad
cld
adc
add
mov
pusha
dec
test
fisub
dec
in
pusha
pop
or
hlt
and
fadd
sub
fbstp
jno
and
pop
and
jbe
xor
clc
cld
xor
ja
aaa
enter
push
cli
jp
add
jbe
test
or
jp
lahf
push
xlat
ja
test
outs
or
pushf
shl
ret
pushf
pop
cmp
sub
or
pop
cmp
pop
or
or
inc
sub
std
jbe
mov
jl
fs
sbb
aas
add
push
sti
push
xor
mov
or
iret
test
pop
std
adc
ret
ss
jecxz
add
idiv
push
int
aas
sub
xchg
shr
or
add
add
jb
aad
in
clc
fild
jae
pop
inc
xchg
and
adc
aam
iret
xchg
shr
outs
fs
call
xchg
(bad)
call
enter
mov
sti
test
pop
dec
pop
push
call
(bad)
pop
mov
cli
mul
push
sti
(bad)
jl
mov
jmp
inc
jecxz
pop
xchg
pop
push
ss
mov
xor
jl
or
jae
clc
xchg
mov
push
js
sbb
jb
xor
sti
or
nop
or
inc
jae
jg
scas
adc
push
aas
xor
ror
nop
mov
movs
mov
sub
loope
mov
imul
mov
mov
xchg
and
xchg
cmp
xchg
adc
sub
add
add
pop
and
add
push
sub
xchg
outs
push
add
pop
adc
cld
(bad)
inc
inc
aas
test
fs
pop
and
adc
or
movs
mov
jo
push
mov
xchg
xlat
xor
and
sub
adc
jg
or
pop
jmp
mov
inc
data16
pop
mov
jae
cli
out
inc
out
push
sbb
mov
xor
add
dec
call
mov
push
xchg
xchg
aam
xor
push
push
push
push
jae
push
jnp
adc
fisttp
rcl
sub
sub
push
movs
mov
add
push
xor
lahf
ins
or
les
test
mov
out
inc
fs
scas
addr16
(bad)
mov
adc
and
jae
pop
cli
stos
adc
mov
enter
cmp
hlt
mov
cs
cli
xchg
ins
sub
and
dec
pop
push
xor
(bad)
les
mov
leave
xchg
shr
pop
inc
je
sar
or
js
cmp
loopne
jo
jo
dec
pop
ror
add
outs
call
inc
push
jg
inc
fs
mov
enter
call
retf
ror
adc
fidivr
sbb
dec
sub
das
clc
pop
ds
mov
popa
repz
cmp
adc
or
pop
pop
jg
aas
add
bound
jae
inc
clc
jno
xor
rcl
jbe
and
push
mov
push
lahf
cmp
call
inc
mov
inc
add
xchg
aas
push
fistp
loope
push
mov
call
or
jge
shl
cmc
out
mov
adc
push
xrelease
xor
inc
inc
fwait
(bad)
push
inc
sti
pop
push
test
inc
shl
or
dec
aam
outs
mov
out
inc
(bad)
sti
sub
inc
add
(bad)
mov
movs
mov
arpl
bound
call
(bad)
jg
jo
inc
adc
loop
and
(bad)
inc
shr
push
or
fistp
lock
lahf
xor
in
jmp
push
jmp
mov
test
outs
inc
inc
sbb
mov
mov
xchg
pop
jl
test
pop
stos
pop
nop
inc
out
dec
pusha
push
js
jmp
inc
jae
mov
and
push
cmp
adc
inc
sti
(bad)
push
loop
or
dec
out
out
cmp
mov
mov
adc
ror
mov
pop
(bad)
movs
push
sbb
add
adc
jl
je
outs
mov
add
or
mov
int3
inc
add
push
and
cwde
cmove
adc
mov
inc
loopne
xchg
icebp
mov
sub
ins
mov
movs
xlat
test
ret
mov
mov
arpl
mov
inc
adc
push
cmp
rcr
mov
enter
dec
jmp
imul
cmps
arpl
int
test
mov
or
mov
or
xor
and
jnp
icebp
scas
repz
pop
pusha
ror
add
cmp
inc
mul
mov
sbb
xor
js
lods
mov
pop
and
sub
into
inc
cli
out
xor
jbe
add
add
adc
imul
lds
sub
and
sub
into
cs
cli
mov
inc
in
push
out
out
mov
dec
sbb
outs
pop
xchg
cld
mov
xchg
movs
or
arpl
sahf
call
add
push
imul
hlt
xor
add
add
mov
sub
inc
inc
(bad)
out
xchg
mov
add
sub
sbb
push
mov
out
dec
cdq
inc
test
scas
(bad)
add
sub
mov
jl
in
fcmovb
clc
dec
aaa
fs
pop
mov
ror
jbe
jmp
mov
jne
dec
aas
sbb
call
loope
fistp
arpl
dec
(bad)
sti
scas
std
jo
mov
jb
or
cmp
jg
aas
xor
addr16
sar
test
mov
inc
add
and
(bad)
test
lahf
jecxz
ror
fs
add
and
out
sub
dec
mov
ja
fisub
(bad)
mov
inc
test
jp
cmp
push
ret
pop
int
or
mov
pop
add
js
rol
pop
push
jne
xchg
mov
ret
sub
or
mov
jp
mov
test
push
mov
aam
(bad)
pop
add
cwde
push
icebp
ja
add
ret
cmp
das
adc
mov
jb
sbb
mov
xor
push
push
mov
add
or
dec
(bad)
sahf
leave
mov
mov
sub
push
and
test
mov
cmp
fdivrp
aaa
cmp
adc
aad
mov
push
xlat
je
inc
ficom
and
lods
aad
bound
jne
push
hlt
ins
sub
xchg
fs
das
cmps
pusha
xor
xor
std
call
mov
push
fistp
mov
ret
xlat
sti
inc
inc
shr
dec
cmp
ror
es
and
hlt
loopne
or
dec
loope
arpl
add
je
adc
cs
cmc
inc
jl
add
ds
inc
mov
mov
mov
inc
cmp
ret
arpl
jae
shl
rol
sbb
dec
xchg
fs
and
xor
or
mov
and
inc
push
push
hlt
push
inc
xor
or
aam
push
jle
dec
inc
or
fld
stos
(bad)
cmp
stc
call
sbb
pop
mov
push
pop
adc
inc
cmp
sbb
int
or
loop
or
push
js
neg
mov
jmp
sub
sub
jl
ret
ins
add
dec
sbb
pushf
push
xchg
pop
mov
pusha
lods
add
pop
sbb
pop
pop
adc
retf
aad
mov
inc
jo
push
xchg
not
inc
mov
xchg
and
pop
or
push
mov
fwait
jbe
cli
xlat
cld
mov
adc
cmp
outs
add
cmp
mov
outs
outs
inc
(bad)
or
jmp
mov
add
mov
iret
sbb
shr
pop
push
cmp
pusha
lock
and
aaa
pop
push
dec
jae
xlat
jnp
sbb
pop
lods
mov
and
pop
ret
cli
jg
out
(bad)
pop
jecxz
ret
jmp
or
push
shl
jle
sti
mov
push
fld
push
adc
clc
aaa
jg
adc
mov
add
sub
or
pop
(bad)
mov
aas
xchg
aam
and
inc
or
call
jmp
out
mov
and
inc
sub
inc
das
add
sbb
add
adc
mov
xchg
js
mov
add
ja
std
das
adc
sub
jae
inc
out
inc
int
inc
push
mov
lods
adc
scas
dec
jns
call
(bad)
jmp
aas
or
stc
push
repz
or
es
and
cs
or
mov
ins
xlat
test
(bad)
fimul
mov
fcmovnbe
outs
add
sbb
jb
ret
dec
pop
test
xor
bound
xor
hlt
xor
jmp
mov
loope
repz
adc
pop
popa
add
mov
iret
ret
adc
push
shr
mov
loopne
dec
jb
push
xor
loop
push
mov
mov
jbe
mov
xchg
jmp
jg
push
add
cmp
push
mov
adc
mov
clc
lea
out
pop
push
jo
add
clc
sar
loope
test
sub
div
inc
int
pop
jno
ret
ret
mov
lods
mov
dec
ret
mov
rol
std
in
inc
test
imul
mov
mov
mov
push
add
mov
inc
xor
or
out
sbb
aam
add
push
and
pop
call
or
xchg
sub
lock
shr
pop
cmp
mov
jecxz
(bad)
ficom
or
add
retf
ja
and
add
push
pop
xchg
dec
pop
sbb
imul
and
pop
je
ror
dec
mov
inc
jmp
inc
add
mov
push
pop
(bad)
dec
or
loop
mov
or
add
sbb
push
loope
mov
xor
xor
nop
js
add
pop
jb
or
cmp
test
sub
mov
fcomp
mov
push
xchg
test
jmp
dec
test
sbb
cmp
dec
mov
or
and
cmp
ret
inc
rcr
add
xchg
int3
or
paddq
sbb
push
loopne
pop
arpl
ja
inc
push
fisubr
rcr
sbb
cmp
or
ins
mov
and
cld
inc
push
(bad)
data16
cdq
add
jl
lds
sahf
add
push
xchg
jp
push
je
push
pop
sbb
inc
ror
retf
hlt
mov
les
es
mul
mov
rcr
adc
mov
repnz
ss
cs
cld
push
cmc
or
lsl
mov
ret
movs
inc
sahf
arpl
arpl
imul
and
pop
movs
jmp
inc
cmp
mov
inc
sahf
push
call
add
push
push
sub
push
adc
and
push
pop
sbb
ret
or
jp
adc
add
jp
dec
sub
cli
jae
mov
stos
inc
push
pop
sub
hlt
ja
and
push
repz
push
adc
xchg
adc
push
pop
xchg
ret
mov
pop
xchg
nop
ret
push
mov
xor
xor
rcr
stos
addr16
or
xchg
sub
mov
(bad)
xchg
cmp
(bad)
pop
inc
outs
xor
mov
test
loope
adc
add
sbb
nop
arpl
jmp
int
adc
inc
out
pop
sub
adc
dec
dec
adc
push
mov
std
xor
and
lahf
js
hlt
fisttp
ret
and
loopne
inc
pop
(bad)
addr16
outs
xchg
ds
or
mov
inc
xchg
pop
mov
mov
or
loop
and
outs
int3
push
xlat
bound
call
jl
sbb
or
mov
add
out
add
mov
sti
and
xor
pop
push
jg
cmps
lock
add
sbb
mov
sub
lods
ins
aam
add
into
out
and
pop
call
mov
cld
les
and
ins
arpl
pop
or
xchg
dec
mov
sbb
out
xchg
xchg
inc
and
call
int3
pop
std
fidivr
mov
mov
dec
jge
aas
add
xchg
jmp
ficomp
xchg
add
cmp
sub
pop
ds
inc
out
jmp
adc
sbb
inc
push
aaa
(bad)
sbb
mov
pop
jmp
imul
jg
fiadd
jle
push
inc
ja
inc
ret
jp
and
dec
shr
sbb
into
inc
mov
in
lahf
(bad)
(bad)
inc
inc
fwait
mov
and
cwde
gs
inc
data16
pusha
inc
push
inc
xchg
add
das
add
fild
sti
jmp
pop
leave
(bad)
or
out
dec
arpl
dec
mov
pop
sub
push
aaa
frstor
dec
das
xor
pop
call
call
xor
jmp
xor
fcom
mov
or
(bad)
jmp
cmp
loope
mov
push
sub
ins
loopne
sub
arpl
inc
push
inc
push
add
xor
and
shr
inc
mov
sub
xchg
pop
and
push
and
mov
pop
outs
xor
scas
sub
cmp
jl
out
push
xor
lock
sub
mov
pop
add
add
dec
push
push
rcl
scas
push
enter
add
push
push
hlt
aad
jmp
ss
popa
inc
push
or
test
aas
and
sbb
or
xchg
cmp
rcl
dec
loop
and
ror
(bad)
jae
les
stc
xchg
div
or
add
mov
aas
inc
sbb
icebp
inc
inc
or
mov
std
push
or
push
jnp
out
adc
inc
adc
mov
(bad)
dec
mov
mov
and
mov
push
test
add
xor
push
pop
adc
jmp
sub
in
ss
sub
(bad)
mov
add
or
mov
std
into
imul
outs
xor
ret
jp
cmp
inc
jo
(bad)
(bad)
jb
inc
inc
jo
jo
or
jmp
or
aad
sub
pop
gs
push
add
sub
mov
dec
add
mov
inc
push
add
pop
sub
(bad)
jg
lods
adc
imul
push
add
ret
das
mov
rol
xchg
sub
nop
mov
(bad)
pop
push
inc
push
mov
mov
pop
ret
pop
ins
fcomp
stos
add
add
mov
pop
ret
mov
test
xchg
jno
sub
inc
adc
int3
adc
stos
mov
loopne
adc
xchg
(bad)
and
inc
push
jbe
pop
sbb
sbb
(bad)
mov
and
or
test
pop
fsub
xor
dec
and
push
std
mov
add
mov
(bad)
in
push
daa
push
je
or
adc
fsubr
push
shr
stos
push
push
faddp
or
loopne
fcom
dec
sbb
dec
sqrtps
pop
cmp
xor
repz
mov
shl
mulps
outs
xchg
call
add
dec
in
jp
xor
(bad)
mov
mov
loopne
mov
inc
push
or
outs
call
inc
pop
rol
sti
out
inc
inc
js
ins
rol
(bad)
pop
add
adc
cmc
clc
pop
fs
inc
mov
sbb
cmc
jno
pusha
adc
sub
pop
or
rcr
loopne
aas
add
or
sbb
mov
and
je
lods
push
nop
inc
dec
cld
jge
loope
pop
mov
push
cmp
pop
or
jle
aaa
rcr
(bad)
jmp
inc
mov
imul
xchg
mov
push
inc
push
call
loopne
dec
add
xor
push
jecxz
fiadd
cs
xchg
pop
loopne
imul
(bad)
mov
aas
test
jbe
push
retf
idiv
inc
mov
mov
loopne
jp
std
push
xchg
jnp
sub
mov
push
movs
pushf
jmp
in
aas
dec
adc
lods
cmp
(bad)
inc
dec
sub
jne
das
push
or
add
ins
xor
outs
aad
push
cmp
call
mov
add
mov
mov
mov
push
shl
add
pop
mov
sbb
add
sar
xchg
pop
sahf
nop
idiv
pop
or
mov
and
add
ins
mov
ret
ror
mov
(bad)
adc
sbb
(bad)
pop
push
pusha
in
jae
ret
scas
popa
sbb
inc
(bad)
sbb
daa
xor
ds
gs
or
das
cld
inc
mov
xchg
sbb
mov
add
jmp
push
push
clc
dec
clc
in
out
mov
dec
aaa
out
xchg
add
cmps
aaa
pop
fmul
jb
sub
fild
adc
mov
sbb
inc
and
div
add
mov
xchg
outs
in
push
push
and
dec
inc
dec
mov
mov
jno
xchg
jmp
push
xchg
scas
fdivr
inc
jl
sti
push
sub
add
push
push
mov
inc
sbb
push
aas
adc
push
add
iret
push
cld
sti
or
out
out
mov
pop
xchg
aad
add
test
jp
test
iret
jno
pop
lock
jmp
fs
pop
mov
cmps
mov
scas
aas
pop
fmul
add
sbb
xchg
adc
push
dec
retf
jae
push
adc
or
jg
push
add
std
sub
fcmovne
not
sub
inc
or
das
and
and
das
(bad)
in
cwde
imul
out
les
mov
mov
push
fisttp
dec
out
inc
inc
stos
packsswb
rol
pop
addr16
inc
add
ss
ins
arpl
ins
push
push
add
test
clc
addr16
xor
dec
jmp
sbb
add
cmps
imul
jl
mov
xchg
push
jge
xor
ins
sbb
or
test
xchg
add
out
outs
sub
jge
bound
std
cs
mov
add
inc
jne
dec
pop
inc
push
inc
mov
stos
dec
addr16
push
aad
adc
xor
retf
dec
pop
sub
push
cld
mov
sub
add
push
sbb
xchg
push
inc
or
pop
pop
and
clc
fild
comiss
inc
rcr
push
jmp
sbb
add
packsswb
test
cli
mov
add
mov
adc
enter
mov
(bad)
in
pop
rcl
mov
mov
lds
push
js
xor
aas
pop
dec
das
mov
fld
inc
inc
or
std
dec
mov
inc
pop
jl
pop
ret
or
inc
dec
mov
lods
and
adc
and
adc
and
movs
jmp
inc
lock
jmp
vmovntps
adc
add
jae
out
inc
dec
mov
fsub
jge
dec
push
ror
mov
xchg
retf
sub
push
in
add
inc
pusha
sub
pop
shr
adc
mov
add
scas
pop
sar
sahf
add
rcl
cmc
jle
jae
jo
add
ja
jno
loope
mov
div
dec
test
sub
xchg
cmp
sub
add
push
inc
pop
dec
gs
xchg
daa
dec
outs
arpl
mov
mov
loop
and
test
sbb
imul
(bad)
mov
xor
fmul
cmp
rol
cli
inc
adc
inc
mov
add
outs
(bad)
bound
mov
mov
call
mov
adc
inc
je
and
push
adc
adc
cmp
(bad)
call
sti
xor
mov
push
mov
and
mov
push
jl
push
mov
arpl
dec
test
loopne
(bad)
div
(bad)
test
mov
std
dec
xor
add
sub
add
mov
imul
fisubr
add
addr16
dec
xchg
aad
or
sub
add
push
xor
dec
adc
pop
lock
ficomp
retf
sbb
xchg
sub
cld
push
and
push
mov
xchg
das
or
shr
setnp
in
pop
xlat
sbb
dec
and
int3
sbb
mov
pop
push
or
pop
mov
mov
(bad)
loopne
loopne
xor
add
mov
push
mov
mov
mov
mov
sub
add
adc
sbb
sbb
mov
xchg
jo
mov
sub
mov
call
fidivr
xor
(bad)
neg
add
aam
stc
das
xor
mov
loop
jg
add
leave
jae
mov
mov
fwait
sti
aas
(bad)
out
arpl
mov
push
fild
xor
into
leave
retf
iret
add
xor
sub
pop
sbb
inc
neg
mov
mov
cmp
fld
je
out
or
sub
retf
inc
arpl
(bad)
xor
mov
in
sbb
or
rol
sti
(bad)
jbe
push
inc
xor
add
fbstp
js
and
(bad)
mov
add
xor
xor
or
jne
mov
dec
mov
sbb
dec
push
xchg
jno
js
mov
mov
inc
dec
sub
dec
in
sub
add
mov
mov
jge
inc
mov
movs
retf
sbb
cld
mov
dec
(bad)
mov
cwde
cmp
jle
ins
ja
addr16
(bad)
or
fistp
cli
and
fwait
pop
cld
bndstx
mov
wrmsr
add
mov
jle
mov
fcmovnu
addr16
out
sti
push
jno
jno
nop
mov
mov
fiadd
mov
rol
test
loop
ret
(bad)
movups
test
xchg
fmul
aam
int
icebp
test
dec
sub
mov
xor
push
cmp
je
daa
sub
fcom
mov
sti
mov
cmp
cmp
icebp
je
cmp
mov
or
div
push
jecxz
sub
xor
loop
mov
inc
sbb
or
xchg
and
daa
test
xor
dec
mov
pop
ja
or
clc
data16
loopne
mov
fsubr
and
sbb
pop
(bad)
ins
repz
into
aaa
mov
adc
jg
jle
mov
int
jecxz
xchg
test
pop
xor
fsub
std
mov
std
js
push
xor
jnp
mov
imul
in
pop
(bad)
fild
xchg
adc
pop
pop
dec
inc
mov
mov
add
dec
out
aaa
aam
cld
das
inc
xor
mov
pop
adc
jno
into
sub
jb
jmp
scas
xchg
pop
and
icebp
in
outs
loope
fisttp
pop
jne
in
ins
push
pop
je
sub
mov
inc
ins
and
fdivr
sub
(bad)
idiv
test
add
fisttp
or
outs
xor
shl
inc
xor
out
ffreep
retf
into
test
mov
mov
icebp
cld
cmp
inc
test
ficom
push
inc
add
xchg
jp
jo
mov
xor
jns
out
cmp
lock
cld
pop
cld
mov
sub
dec
nop
sub
mov
call
in
fcmovne
cmc
or
mov
or
fld
mov
es
xor
shr
mov
add
fld
pop
std
push
add
(bad)
jle
out
repz
mov
sar
xor
loopne
and
call
mov
mov
and
push
mov
sahf
pushf
add
sahf
add
push
pop
addr16
fcmovnu
popa
xchg
adc
add
push
fadd
and
add
les
sbb
cdq
cmp
jnp
ss
inc
test
cmp
push
or
add
adc
into
stos
(bad)
inc
movs
xor
dec
lock
fs
push
repnz
fs
aas
js
mov
mov
mov
mov
add
or
stc
(bad)
cmps
push
adc
mov
pop
dec
retf
pop
cmp
mov
inc
add
xor
adc
mov
aaa
ret
and
cmp
mov
push
pop
int3
sub
enter
push
popa
stos
mov
(bad)
jg
rcr
mov
add
mov
xor
loopne
add
xchg
test
mov
pop
inc
les
fadd
push
leave
out
adc
and
sub
add
or
dec
icebp
fistp
add
lods
dec
clc
or
shr
(bad)
mov
inc
cmp
mov
mov
pop
and
sub
mov
int3
jnp
fs
test
fwait
jmp
fsubr
sub
pusha
dec
mov
imul
mov
mov
rcl
je
push
repnz
xor
fisttp
pop
mov
inc
mov
mov
(bad)
(bad)
add
les
and
leave
sub
push
xchg
(bad)
iret
add
pop
pop
gs
mov
mov
push
fstp
add
and
mov
push
ret
not
mov
push
js
push
mov
cmps
(bad)
mov
test
xchg
cmp
idiv
sub
sub
push
pop
mov
mov
sahf
ret
aas
pop
jmp
scas
jno
inc
fdiv
js
pop
cld
mov
pop
ret
jo
fbld
mov
sbb
das
fadd
sahf
int3
addr16
loop
sub
rcr
push
xchg
mov
dec
mov
cmp
mov
mov
fcmovnu
mov
xlat
mov
mov
add
sbb
test
or
add
stc
inc
push
fstp
icebp
mov
xchg
inc
gs
clc
fwait
and
or
mov
pop
mov
scas
xor
add
mov
push
outs
test
loopne
js
inc
retf
push
mov
sub
in
jb
xlat
aad
hlt
sub
call
pop
mov
ret
mov
dec
push
mov
ret
fadd
stos
sbb
push
lock
pop
sub
call
xor
add
push
inc
ds
fidivr
cmp
xchg
push
adc
ins
inc
(bad)
push
mov
mov
scas
fimul
mov
mov
mov
add
add
pop
jae
cmps
sbb
pop
xor
mov
loop
cld
adc
(bad)
jecxz
adc
pop
jbe
fld
sbb
loopne
rcr
push
pop
jo
mov
sub
mov
mov
repz
mov
xchg
inc
sub
mov
sub
or
xchg
xor
xor
push
xor
test
sti
push
mov
call
push
sbb
fcom
outs
add
push
jb
push
push
mov
and
imul
jmp
mov
popw
inc
in
mov
cdq
clc
sub
mov
xchg
std
les
stos
outs
push
outs
pop
inc
les
add
push
inc
and
icebp
mov
pop
int3
xor
adc
push
loopne
repnz
push
std
out
(bad)
scas
sbb
loop
xor
das
push
pop
mov
mov
xor
or
fs
loopne
or
cmp
and
(bad)
outs
cli
es
adc
repnz
icebp
arpl
fisttp
mov
adc
mov
ret
push
adc
outs
sti
clc
jle
js
cli
cmps
add
inc
add
aaa
adc
pop
xchg
sbb
cmps
imul
jmp
add
mov
xor
push
sub
sub
(bad)
cmp
push
sub
add
xchg
mov
addr16
add
aam
add
xchg
and
out
js
pop
dec
lea
popf
push
cmc
mov
xor
and
push
repz
push
dec
bound
push
pop
adc
aaa
or
nop
fs
cmp
jbe
into
enter
jb
xor
mov
mov
xor
sbb
stos
in
rcr
xor
sbb
sbb
nop
inc
sbb
xchg
shl
les
lods
lock
xchg
mov
jge
call
out
nop
fmul
jmp
inc
jo
ret
(bad)
mov
pop
mov
push
mov
(bad)
das
(bad)
neg
inc
mov
xor
(bad)
fsub
sbb
jl
pop
xor
xor
and
or
add
xor
xor
jl
sbb
inc
aas
jp
cmp
es
mov
cmp
push
mov
adc
mov
bound
data16
call
push
pushf
aam
push
mov
dec
mov
sub
call
mov
outs
cmp
mov
dec
inc
add
fsubrp
cmp
lahf
call
shl
add
mov
repnz
jnp
fadd
and
cwde
mov
pop
cld
sar
pop
add
adc
add
je
mov
pop
xchg
xor
mov
xchg
outs
jbe
(bad)
pop
fwait
inc
enter
sub
pop
mov
loop
fidivr
pop
lock
test
popf
add
test
push
push
sub
aas
loope
or
push
and
js
dec
(bad)
sub
clc
jmp
inc
xor
fcomp
mov
inc
xchg
push
(bad)
mov
xor
push
aaa
jl
sti
sbb
jmp
std
push
mov
cmps
mov
gs
loopne
pop
ins
js
jmp
sub
clc
pushf
cld
add
mov
mov
xchg
out
mov
pop
ds
sub
and
and
sbb
and
and
daa
pop
pop
nop
cmc
(bad)
jmp
adc
add
sbb
adc
push
add
sub
or
inc
mov
cmp
cmp
cmp
retf
inc
dec
dec
push
pop
inc
inc
pop
pop
push
push
dec
dec
push
push
push
dec
push
inc
dec
dec
dec
pop
pop
pop
pusha
pop
pop
pop
add
push
bound
je
imul
fs
outs
jae
cmp
mov
mov
sub
(bad)
inc
mov
loopne
xchg
xchg
cmp
in
rcl
(bad)
(bad)
call
jg
mov
jle
stc
enter
add
mov
mov
fnstenv
jge
jmp
(bad)
stos
loope
movs
leave
fcmovnu
aam
shl
clc
cmps
mov
mov
retf
ror
into
ret
ret
mov
in
cli
sar
xlat
int3
dec
mov
push
outs
imul
mov
pop
test
cmp
cmc
jnp
push
and
jnp
mov
(bad)
(bad)
fidivr
enter
ret
jmp
ss
cmps
in
or
call
test
dec
in
mov
xor
mov
in
pop
or
mov
mov
fadd
out
test
in
test
sti
push
dec
in
cs
inc
cmp
add
ins
imul
mov
add
in
cmp
mov
test
loop
add
test
in
inc
and
push
xor
es
mov
out
fld
mov
inc
sub
add
mov
jmp
or
aaa
mov
push
mov
retf
sbb
call
outs
movs
rcl
clc
in
mov
mov
pop
js
push
ds
jo
in
inc
pop
cld
cs
lock
in
sbb
pop
pusha
pop
in
cmps
pop
repnz
xchg
pop
cmps
jnp
es
gs
or
daa
jo
(bad)
jae
loop
inc
jmp
and
dec
mov
add
in
repnz
in
push
movs
sub
fcmovnbe
outs
ret
in
pop
clc
repnz
pop
or
dec
or
mov
push
test
sbb
out
and
cs
mov
fld
fwait
imul
sub
jb
ror
es
call
sub
cs
push
jecxz
xchg
mov
fs
sub
adc
mov
in
imul
dec
aaa
mov
and
sbb
sub
ds
outs
(bad)
mov
and
mov
test
xchg
ror
cmova
add
push
hlt
icebp
inc
inc
outs
mov
inc
dec
test
scas
es
inc
pop
outs
jecxz
cmp
dec
push
xor
popa
or
ret
(bad)
jbe
cs
and
dec
cs
in
cmc
(bad)
mov
push
and
or
retf
lods
jo
inc
je
xor
test
jnp
je
mov
and
mov
in
movsx
icebp
in
outs
sub
ss
adc
fucomi
push
sub
cmc
and
or
in
add
and
dec
cmp
add
fild
dec
es
and
pop
or
adc
fstp
adc
jb
push
inc
dec
mov
or
dec
cmp
mov
(bad)
xor
push
aam
outs
cmc
adc
push
adc
push
push
aaa
mov
mov
fst
sub
jmp
frstor
or
jnp
mov
or
ds
fcom
and
push
xchg
rcl
es
sub
and
shl
and
shr
pop
mov
and
das
mov
cli
int3
sub
and
push
sbb
or
add
push
push
jl
sbb
(bad)
ror
jle
and
adc
mov
pusha
cmp
fldcw
es
sub
pop
outs
popa
mov
(bad)
jns
add
add
or
sbb
sub
in
jbe
or
adc
mov
shr
jb
and
push
mov
add
xor
ret
stos
pop
sbb
cld
dec
push
ret
adc
mov
and
push
adc
lahf
outs
js
imul
xor
scas
push
push
jns
jns
jne
push
imul
jo
js
pop
dec
jo
data16
ds
xor
arpl
jo
aas
push
in
shl
movs
je
(bad)
adc
call
add
mov
(bad)
in
js
mov
push
fsubr
test
inc
sbb
cmp
test
ds
gs
test
add
pop
mov
xchg
pusha
outs
es
sub
adc
dec
fisttp
shl
fisub
jbe
and
pusha
and
sub
out
int
icebp
daa
into
mov
push
jbe
jmp
push
aaa
(bad)
iret
mov
dec
and
iret
cwde
sub
in
std
cs
int
jmp
in
or
mov
push
repnz
mov
jg
sub
mov
in
mov
dec
mul
mov
cld
cli
jmp
add
fistp
mov
out
push
mov
cmp
mov
inc
in
pop
mov
mov
shl
mov
mov
or
outs
pop
mov
sbb
jnp
or
sbb
mov
push
daa
fadd
aam
xlat
dec
adc
cs
call
dec
sub
adc
jbe
stos
shl
adc
or
adc
adc
sub
cld
cld
xor
pop
sbb
pop
(bad)
dec
or
dec
(bad)
(bad)
push
mov
int3
scas
adc
lock
inc
pop
sbb
scas
inc
and
iret
mov
popa
sbb
int3
mov
cmps
popf
rcr
stos
mov
or
push
(bad)
data16
pop
sbb
sbb
mov
test
jmp
jle
push
mov
int3
pop
dec
and
icebp
mov
cmp
(bad)
fild
cmp
rcl
push
mov
fucomp
loop
adc
adc
push
scas
add
and
aaa
ja
push
jge
lds
mov
dec
mov
imul
scas
mov
out
or
lds
fstp
dec
or
sub
xchg
cmc
or
or
jecxz
loop
xor
mov
add
add
cdq
cmp
adc
stos
stos
(bad)
in
stc
and
or
jbe
jb
ja
jp
cmc
stos
idiv
jp
jbe
adc
js
jo
imul
in
adc
push
pop
out
add
push
add
es
and
add
pusha
inc
push
loopne
adc
xchg
pusha
or
das
add
call
cmp
jo
nop/reserved
ins
mov
shr
or
inc
ss
pop
xor
and
inc
cs
or
rcr
movs
ins
mov
mov
sub
inc
add
fistp
loop
inc
fimul
dec
loop
mov
sub
lahf
fild
and
cld
and
jg
mov
dec
leave
fwait
rcr
xor
ret
sbb
adc
data16
inc
dec
add
jb
dec
mov
sub
jbe
dec
pop
lahf
and
sub
and
jmp
and
push
data16
imul
jns
dec
pop
aas
sub
push
imul
out
jno
push
pop
xchg
clc
sub
sbb
push
arpl
call
mov
inc
and
in
ror
mov
xor
add
aam
shld
leave
leave
leave
fsubr
fcmovne
sub
ud2
out
aas
adc
daa
daa
daa
pop
mov
jl
out
jl
and
mov
add
and
or
icebp
retf
xor
xchg
jl
pushf
fmul
psubsb
jg
popf
pushf
pushf
shr
(bad)
push
scas
popa
or
mov
cld
arpl
sub
mov
jp
mov
outs
or
dec
in
cmc
fistp
add
repnz
(bad)
jmp
lds
inc
mov
in
sub
sub
and
inc
sub
scas
ret
mov
jge
daa
pushf
xchg
in
and
add
fwait
loopne
lods
pusha
dec
adc
mul
scas
or
mov
lds
pop
and
call
or
into
lds
add
mov
pop
pusha
sub
shl
(bad)
mov
mov
push
and
repnz
and
pop
imul
mov
or
and
sub
pop
cs
mov
add
mov
ror
mov
mov
push
cmp
dec
adc
test
fistp
in
jmp
shr
xor
in
icebp
cs
push
outs
into
call
and
in
outs
and
or
mov
idiv
jbe
ret
cmp
cs
sub
pusha
repnz
cmp
push
in
and
cld
outs
sub
push
add
lds
jbe
fcomp
dec
mov
jo
or
and
shl
daa
shr
sbb
mov
in
mov
int3
xchg
iret
sbb
or
fisttp
mov
and
cli
mov
in
in
cli
test
fdivrp
test
add
icebp
mov
sti
cs
mov
dec
lock
dec
in
leave
mov
mov
push
sub
pop
imul
in
mov
movs
outs
adc
push
leave
dec
xchg
shl
arpl
fisttp
mov
or
or
cmp
mov
ror
jbe
stos
icebp
adc
in
(bad)
sar
xor
ds
sbb
jp
sub
jae
or
test
cld
or
mov
jg
mov
jmp
outs
repz
pop
mov
mov
sub
sub
mov
in
push
mov
and
pusha
sbb
pop
das
mov
dec
loop
in
test
in
retf
mov
sbb
sbb
mov
adc
or
mov
pop
hlt
test
cmp
jae
in
mov
ins
test
ss
jae
retf
or
rol
mov
or
adc
sbb
jl
and
inc
daa
cmps
out
jb
inc
and
aaa
cmp
cs
nop
out
add
nop
and
cmp
add
in
or
pushf
jbe
adc
adc
xlat
add
add
rcr
adc
mov
dec
out
ja
(bad)
loopne
in
xchg
xor
mov
cmp
repnz
shl
shl
adc
mov
cdq
and
leave
lea
dec
cli
jmp
shl
adc
addr16
cld
pop
or
(bad)
jne
inc
sbb
fisttp
outs
fsub
push
sub
shr
ins
pop
mov
add
and
sub
ds
ret
or
and
loopne
or
imul
jno
sbb
(bad)
cmp
js
push
pop
xor
stos
nop
or
sub
mov
sub
fnsave
mov
push
jnp
fwait
ds
lea
and
je
repnz
xchg
(bad)
ror
outs
push
or
ja
ret
outs
cmp
cmp
idiv
xlat
mov
inc
repz
sub
cli
xchg
(bad)
inc
loope
in
mov
imul
lock
mov
adc
shl
in
jge
add
mov
adc
mov
(bad)
mov
in
pop
push
mov
adc
pop
lock
sub
sub
xor
jecxz
mov
pmuludq
sbb
sti
stos
lock
dec
imul
test
jnp
cmp
adc
and
xlat
rol
adc
and
xchg
aam
sub
mov
aas
or
pop
sbb
add
xor
jle
loop
aas
and
outs
mov
mov
jle
ret
lds
(bad)
adc
loopne
or
dec
dec
dec
push
sub
lock
mov
jg
xchg
mov
stos
cmps
mov
inc
pop
xchg
pop
inc
pop
nop
or
das
add
iret
dec
and
jo
ja
mov
and
arpl
shl
cmp
in
cmp
push
in
test
in
in
adc
mov
bound
push
mov
leave
and
jnp
mov
cmp
push
(bad)
fsubp
fwait
and
pop
jo
call
or
pop
adc
jb
or
cmp
mov
ins
cs
adc
and
loop
add
loop
xlat
mov
test
adc
cmp
shr
fsubr
neg
inc
and
das
outs
mov
jmp
inc
cwde
sbb
sub
aaa
(bad)
mov
mov
sub
in
jmp
enter
in
data16
sub
sub
or
or
or
out
outs
test
hlt
push
lods
adc
pop
in
and
cmps
xor
and
fs
mov
push
mov
push
cld
and
xchg
and
repnz
push
in
(bad)
xor
adc
data16
addr16
push
sub
cmps
mov
mov
int3
cwde
aas
or
adc
fcomp
mov
add
ds
cmp
xchg
ret
pop
fbstp
aaa
out
imul
xor
cs
or
mov
std
adc
rcl
add
cmps
(bad)
dec
mov
(bad)
jle
or
mov
pop
(bad)
jmp
inc
adc
pop
out
mov
mov
outs
mov
and
jmp
lods
jmp
fist
test
add
pop
mov
mov
les
fsub
mov
sti
sbb
jl
std
cld
stos
dec
inc
(bad)
and
jns
out
mov
mov
stos
add
les
fnstsw
stos
clc
or
and
ret
adc
mov
(bad)
sub
add
push
xchg
iret
mov
in
mov
(bad)
mov
arpl
movs
retf
adc
mov
lods
loop
sub
lds
mov
cmp
sar
push
adc
add
sub
adc
add
mov
mov
pop
or
(bad)
add
xchg
adc
and
hlt
rol
daa
mov
jmp
dec
jmp
out
fmul
cld
scas
push
add
in
cld
mov
call
or
and
cld
xor
push
in
sbb
movs
pusha
xchg
push
sbb
dec
shl
addr16
push
adc
cmps
add
fld
mov
sub
neg
inc
sub
jne
xor
in
cmp
mul
sub
loopne
test
mov
popa
(bad)
pop
jmp
and
rcl
pusha
dec
dec
inc
stos
adc
shl
adc
mov
sbb
outs
cs
mov
lods
sbb
ror
push
push
lahf
sti
outs
or
retf
fsub
lods
xor
xchg
add
pop
icebp
loop
and
mov
xor
adc
js
lods
sbb
pop
adc
mov
mov
outs
push
sbb
fstp
jnp
mov
outs
inc
in
push
or
xor
bound
push
jge
loop
add
xor
loope
shl
inc
mov
pop
sub
push
mov
jne
mov
cs
mov
push
shr
inc
push
push
clc
ret
enter
mov
fwait
lds
rol
shl
movs
mov
in
push
sbb
and
push
and
nop
aas
fisttp
adc
jno
or
push
in
cli
add
mov
fadd
push
nop
xchg
test
and
sahf
inc
xchg
or
pop
or
xor
loop
ins
test
cs
pop
inc
scas
test
loopne
push
add
mov
rcr
in
jmp
inc
(bad)
pushf
and
pop
lea
adc
add
or
in
push
or
jbe
stos
rol
int
pop
mov
ja
sub
lods
inc
push
movzx
sbb
xor
push
icebp
adc
or
inc
xor
push
mov
arpl
add
add
fistp
dec
inc
popa
jne
sbb
mov
cmc
jecxz
je
mov
pop
enter
jnp
xor
jo
in
lock
sub
test
(bad)
rcr
pmaddwd
retf
js
or
or
in
loope
dec
or
jecxz
fild
add
(bad)
jge
jle
mov
cmp
ds
das
xchg
xor
cmp
jl
push
pop
in
ret
in
in
aas
sub
outs
adc
repnz
stos
in
mov
aas
inc
jg
mov
mov
mov
ror
mov
adc
inc
cli
clc
push
xchg
test
rcr
in
mov
rol
or
sub
and
or
pop
add
mov
and
loop
cmp
and
push
dec
add
push
jo
or
pop
jg
sub
hlt
mov
test
mov
mov
(bad)
iret
scas
loope
stos
jno
inc
cmp
mov
pop
push
xor
rol
or
stc
and
push
loopne
ja
in
jecxz
xor
movs
mov
adc
movs
and
mov
mov
cmp
in
mov
cmp
lds
cmp
dec
pop
pop
clc
out
fidivr
ja
pop
jo
adc
mov
pop
ja
sbb
imul
mov
ja
ja
hlt
sbb
dec
daa
cs
inc
mov
xor
lahf
and
cmp
fisub
push
aaa
or
rol
bound
cld
sub
xchg
repnz
add
and
or
mov
rcl
mov
xchg
or
and
sbb
jecxz
ins
test
cmp
jle
push
out
ret
rol
jmp
mov
mov
sub
mov
jno
in
jnp
call
pop
test
scas
out
ds
(bad)
fld
mov
cmps
and
add
add
femms
dec
add
or
icebp
pop
cld
shl
(bad)
xchg
cli
xor
scas
in
add
fild
ss
lds
aam
sub
mov
and
inc
iret
call
iret
and
enter
out
mov
mov
adc
or
in
inc
or
fidiv
out
data16
mov
cmps
mov
mov
xor
es
lds
fcmovnu
dec
push
fs
lds
xor
outs
shl
retf
sub
jo
xlat
test
lds
mov
mov
and
lods
not
push
sbb
adc
jl
sub
addr16
aaa
sbb
mov
adc
nop
xchg
xchg
mov
in
jle
jnp
push
scas
mov
sub
popa
test
cwde
lock
(bad)
mov
sbb
push
cmps
fadd
test
(bad)
cmps
in
ins
mov
data16
stos
mov
xlat
xor
pop
push
test
ds
dec
ror
push
mov
retf
add
jmp
cmp
les
jmp
cmc
adc
mov
movs
in
ror
imul
ss
pop
ror
adc
xor
sti
test
ja
outs
mov
es
fadd
jb
xor
addr16
loope
pusha
stos
mov
add
in
cmp
mov
dec
outs
cmp
data16
adc
in
add
jae
test
mov
add
adc
ret
rcl
pop
call
jnp
iret
rcr
inc
or
daa
out
call
sub
jecxz
ret
lock
dec
cld
mov
sub
push
(bad)
adc
pop
popf
cs
shr
cmp
mov
cmp
push
mul
cli
sub
aas
and
mov
in
pop
xchg
leave
mov
mov
add
leave
jns
cld
xchg
leave
adc
int
sub
jnp
inc
and
inc
inc
dec
dec
dec
xchg
xor
lods
je
popf
std
jo
or
push
mov
pop
icebp
mov
jnp
mov
mov
add
neg
ror
cmp
call
js
sub
mov
call
sub
or
jmp
push
cmps
(bad)
(bad)
or
push
pop
daa
push
ds
jge
xchg
and
mov
enter
ss
jecxz
mov
jg
mov
aam
(bad)
iret
or
push
scas
adc
add
push
add
mov
push
leave
mov
add
not
test
jmp
mov
lods
mov
movs
mov
push
mov
cmps
retf
jns
mov
mov
sub
adc
in
add
mov
or
pop
add
dec
dec
dec
xchg
test
push
dec
and
(bad)
in
out
dec
sahf
data16
sub
sub
push
addr16
cmp
or
sti
cmps
sti
xchg
and
push
fimul
ror
push
ror
push
(bad)
scas
call
push
pop
push
rcl
inc
int3
mov
xchg
mov
sti
sbb
mov
xchg
adc
loope
cmps
cmp
test
f2xm1
cmp
je
stos
stos
dec
ss
xor
sub
adc
mov
in
outs
pop
popa
and
push
push
lea
add
sub
and
test
push
or
or
ss
mov
test
mov
inc
push
imul
outs
(bad)
push
mov
cmps
test
data16
mov
hlt
mov
fs
lock
mov
jo
pushf
je
loope
mov
sti
out
cld
je
hlt
cmp
(bad)
mov
(bad)
(bad)
(bad)
inc
push
push
dec
push
inc
inc
push
inc
pop
inc
jne
jns
imul
js
jb
push
add
dec
mov
push
outs
push
push
outs
js
(bad)
outs
sub
pop
cmps
ins
push
sub
push
lock
aas
test
in
loopne
add
mov
ja
mov
mov
fs
mov
adc
push
pop
sbb
mov
bound
les
sbb
outs
push
mov
(bad)
cmc
(bad)
in
inc
movs
nop
dec
test
adc
dec
jl
ficomp
mov
sub
int3
and
in
pop
aam
icebp
dec
push
sub
daa
shl
in
or
mov
shl
aaa
sbb
pop
pop
outs
cmp
xchg
add
in
push
mov
loop
cmps
pop
xor
inc
inc
loopne
jg
adc
test
test
dec
mov
das
cli
mov
pop
mov
cmc
dec
add
mov
dec
les
movs
ins
adc
pop
cwde
mov
ret
push
cld
xor
sbb
or
cs
push
dec
call
add
js
push
fidivr
cli
mov
adc
sub
in
adc
das
lds
sub
push
test
mov
lds
pop
dec
dec
cmp
and
dec
scas
pop
jmp
or
mov
dec
mov
sub
movs
iret
sub
push
in
mov
clc
sbb
lods
and
dec
push
and
dec
out
xchg
and
les
cli
movs
or
pop
sub
aaa
movs
sbb
mov
cmp
movs
in
cmps
mov
xchg
sub
jns
mov
sbb
push
jnp
sbb
(bad)
das
in
inc
and
cmp
and
shr
and
out
ss
jo
and
ss
fmul
jge
dec
or
mov
push
cdq
sbb
dec
mov
mov
xchg
sub
idiv
dec
(bad)
maxps
dec
sbb
inc
sub
and
cmp
cmp
inc
in
dec
es
push
and
cld
mov
xchg
pop
and
jp
mov
and
and
adc
clc
pop
into
mov
icebp
cli
pushf
or
mov
mov
pop
rcr
jae
pop
addr16
dec
or
add
add
lea
out
out
aam
cmc
enter
jne
test
jns
jae
pop
(bad)
pop
outs
xchg
inc
call
popaw
xchg
push
push
sub
push
ficom
js
sar
adc
push
loopne
shr
and
jns
jbe
pop
add
fld
in
pop
sub
(bad)
lahf
aad
(bad)
mov
idiv
push
sbb
pop
loopne
in
scas
dec
sub
lods
cmove
jnp
mov
sbb
stc
sub
cmp
adc
cwde
inc
sub
mov
pop
lods
popa
mov
call
mov
xchg
dec
retf
rcl
sahf
fild
mov
push
sbb
out
add
(bad)
jo
cmps
fst
enter
lds
movs
stos
fild
nop
xchg
pop
jb
ror
jno
adc
mov
push
and
push
sub
mov
push
leave
adc
xor
inc
ret
icebp
add
mov
out
jle
call
aas
out
pop
inc
sub
mov
sub
push
rcr
fs
cmp
xor
pop
stos
jl
rcl
loopne
sub
sub
add
sar
push
sbb
sbb
adc
mov
rcr
neg
mov
sub
adc
std
shl
not
fcmovnbe
and
leave
pop
add
div
jl
xchg
push
and
sbb
xor
mov
xor
call
pop
dec
push
ds
push
sbb
mov
or
ds
push
ror
mov
les
(bad)
je
(bad)
cmps
add
mov
sbb
leave
xor
sti
add
add
or
mov
movs
fmul
fdiv
lds
fst
aas
fist
xor
dec
cmp
jg
push
repnz
mov
cmp
ret
and
xchg
cmp
jle
in
xor
inc
lds
inc
shr
inc
(bad)
pop
test
(bad)
repz
jnp
jae
repz
mov
adc
push
rcr
pop
inc
in
xor
and
mov
mov
(bad)
mov
cmp
mov
dec
mov
xchg
call
shr
add
out
enter
(bad)
or
cmp
or
lds
loope
ja
add
out
lds
iret
and
scas
dec
jo
sub
idiv
imul
adc
hlt
fimul
and
inc
inc
push
inc
call
inc
data16
cs
jmp
mov
sub
dec
sub
dec
jnp
sub
adc
mov
ret
or
lods
lock
aas
jle
push
stos
or
loope
call
dec
(bad)
xor
sub
xchg
inc
or
adc
mov
or
mov
sub
mov
push
call
popf
pop
fbstp
and
outs
pop
movs
fiadd
mov
pop
xchg
mov
ja
sahf
mov
jecxz
das
mov
add
and
addr16
add
in
xor
push
rcl
fnstenv
dec
(bad)
aaa
inc
xor
ja
inc
je
aas
or
adc
and
sub
mov
mov
lahf
inc
ficomp
popa
sub
popa
ret
mov
mov
je
or
inc
movs
in
jae
outs
mov
mov
cmp
adc
jb
jge
or
pop
add
or
fcmovb
mov
inc
test
jmp
cmp
sub
lahf
and
sbb
and
dec
and
mov
pop
sub
outs
xor
daa
cwde
hlt
sub
push
outs
and
or
and
adc
cmp
(bad)
pmulhw
repnz
push
adc
inc
sub
inc
sub
sub
aaa
into
mov
popa
outs
cs
adc
fiadd
sar
sbb
test
push
add
lock
mov
rol
pusha
jnp
and
push
fsub
and
or
sub
pop
in
aas
sbb
cmp
in
mov
and
jo
stos
inc
in
sahf
mov
dec
pop
mov
in
add
mov
or
push
into
mov
push
outs
(bad)
jbe
test
loopne
cld
dec
setnp
test
push
push
add
in
xor
ins
xor
xchg
sub
mov
xchg
mov
loop
ins
js
mov
mov
or
(bad)
xor
je
inc
adc
push
lds
in
add
setns
mov
push
jle
sub
vcvtss2sd
mov
mov
push
cmp
mov
ds
jl
dec
dec
adc
mov
xlat
das
rcr
enter
out
sub
popa
out
cld
shl
enter
mov
xor
adc
mov
ror
fmulp
adc
cdq
into
add
dec
mov
iret
ret
lea
push
adc
ficomp
(bad)
add
in
mov
sbb
iret
and
dec
aaa
idiv
imul
out
push
(bad)
(bad)
inc
add
sbb
xor
rol
outs
or
data16
xchg
inc
cmp
shl
push
jmp
fmul
mov
shr
pop
test
inc
jnp
sbb
out
mov
jecxz
dec
and
dec
pop
jnp
xor
test
cmp
ins
jnp
daa
push
outs
cmps
jno
jbe
cmc
xor
push
and
ins
sub
xor
and
cmp
or
and
mov
pop
add
mov
pushf
popf
inc
jno
ds
xchg
loop
je
in
ds
pop
or
into
fwait
xlat
mov
jnp
jmp
push
cld
cs
in
or
jne
shl
lods
movs
movs
in
inc
sbb
(bad)
cli
lds
push
sbb
dec
push
cmp
aam
and
or
loope
mov
add
jnp
adc
fistp
outs
ror
pop
scas
and
sub
or
es
jmp
cld
cmp
js
data16
inc
outs
mov
in
imul
mov
shl
inc
cs
ror
das
cmps
xchg
inc
dec
aam
out
es
and
adc
icebp
mov
add
outs
jnp
mov
call
movs
pop
dec
stos
mov
adc
push
xchg
xchg
dec
cmp
or
test
sahf
loop
imul
inc
cld
push
loopne
adc
and
push
test
jle
in
or
adc
inc
popw
add
sub
sbb
(bad)
or
je
outs
fcmovbe
sub
sub
hlt
int3
xorps
inc
mov
cmp
outs
cmp
sub
fistp
mov
mov
mov
out
jg
mov
dec
pusha
sub
and
sub
adc
test
sbb
es
jg
cmc
add
jp
jl
mov
imul
out
cmc
loop
call
scas
add
sub
sbb
push
jo
pop
dec
inc
pop
sub
pop
lds
pop
jnp
cmps
mov
in
dec
ins
cld
pop
or
inc
mov
adc
pop
push
jl
bound
stos
lock
jg
shr
ss
shl
and
pop
mov
das
stc
in
mov
mov
in
push
cld
push
iret
test
std
mov
jl
fdivp
std
in
outs
cld
dec
and
mov
add
movs
data16
sub
in
sub
les
xlat
and
mov
in
imul
inc
push
dec
sbb
out
pushf
test
push
cld
inc
mov
sub
sub
shl
jmp
and
jecxz
push
(bad)
mov
and
mov
jg
xor
sbb
push
inc
lods
arpl
or
or
gs
pop
mov
or
xchg
mov
shl
lds
(bad)
cld
(bad)
pop
rcl
dec
mov
cli
fist
inc
jnp
sar
pop
cmp
mov
(bad)
push
rcr
jnp
aam
sub
push
dec
push
ds
and
outs
dec
pcmpgtb
shr
push
mov
loope
aas
or
pop
call
iret
daa
push
cld
pop
mov
mov
loope
xlat
imul
fiadd
push
dec
push
fs
push
lods
jnp
mov
out
call
data16
cmp
or
sbb
arpl
adc
xchg
adc
dec
cli
or
cmps
mov
dec
push
mov
stos
aaa
dec
(bad)
retf
cmp
mov
das
dec
push
xchg
xor
lahf
div
ss
push
pop
sub
sbb
ds
xor
mov
retf
dec
add
loopne
jle
add
mov
adc
jae
and
in
std
aas
jmp
push
pusha
addr16
sbb
std
mov
jp
mov
dec
lahf
data16
and
stc
xchg
dec
push
inc
jmp
add
aaa
outs
je
sbb
ss
je
or
and
and
push
arpl
jo
mov
clc
or
inc
add
iret
lods
fcmovbe
lahf
out
inc
icebp
sbb
ds
sub
call
add
neg
push
inc
cs
cs
or
sub
je
jg
inc
and
inc
xchg
cmp
repz
push
add
and
adc
push
adc
and
das
sub
je
add
pusha
pusha
or
cld
cmp
aas
adc
sbb
or
call
mov
in
out
loope
mov
mov
xor
cmc
mov
push
sbb
jecxz
es
in
jp
dec
out
loope
leave
jg
js
push
test
and
shr
mov
jno
mov
int3
sbb
mov
push
lods
xchg
mov
test
adc
test
stos
test
(bad)
(bad)
fisttp
cmp
sub
and
cmp
pop
cmp
push
in
lods
sti
std
cmp
and
adc
out
xchg
out
cwde
in
(bad)
mov
rol
lds
add
and
pushf
shl
pop
push
dec
lds
inc
cs
add
idiv
into
cmp
vrcpss
sub
push
mov
and
mov
xchg
dec
xchg
iret
repz
mov
cmp
jae
or
pop
mov
jnp
movs
mov
out
and
lods
and
arpl
mov
out
cmp
mov
pop
adc
or
mov
es
mov
loopne
enter
rcr
enter
rol
ret
fld
sbb
and
into
ror
adc
daa
mov
lods
sbb
mov
pop
loopne
(bad)
sub
or
sbb
dec
mov
or
js
jns
outs
(bad)
cdq
push
out
mov
aaa
sbb
cmps
stc
data16
xor
jmp
dec
mov
sub
mov
jnp
cmps
je
je
(bad)
pshufw
outs
or
(bad)
pop
push
ss
jmp
dec
push
ins
and
fninit
push
fist
jge
arpl
lock
xor
leave
jecxz
mov
enter
sub
jb
mov
xchg
jmp
jmp
jmp
pushf
mov
scas
sub
addr16
jo
push
shr
pushf
inc
hlt
xchg
pop
jecxz
jb
dec
fwait
inc
(bad)
mov
or
jecxz
xor
scas
call
fwait
sbb
dec
sbb
xor
lds
cli
ret
stos
cdq
xchg
aam
test
adc
data16
mov
cs
mov
inc
aad
and
and
ds
iret
sbb
sti
mov
mov
inc
pop
mov
xlat
dec
test
lds
mov
jmp
dec
push
mov
jg
in
fidivr
test
inc
adc
jecxz
add
pop
inc
or
jp
inc
cmps
in
test
test
ror
out
lods
adc
aam
ins
lock
xchg
int3
cmp
inc
lds
add
jg
xor
outs
sbb
adc
scas
cmp
sub
stc
cld
js
cmc
ret
xchg
mov
inc
iret
lods
adc
fild
lock
or
inc
in
pop
xor
inc
std
inc
call
shl
mov
cmp
inc
ror
jnp
push
jns
pop
adc
sub
or
das
int3
nop
in
inc
loopne
loop
stos
and
inc
sub
jo
push
nop
in
mov
adc
ja
push
cld
fsub
add
cs
cmc
jnp
shl
(bad)
out
push
push
dec
paddsb
push
dec
jg
lss
sbb
or
aas
jbe
stc
cmp
(bad)
jo
xchg
mul
sahf
test
push
shl
inc
das
jp
pop
in
jl
push
cmps
mov
iret
(bad)
or
aam
adc
and
sahf
retf
jbe
xor
jl
mov
neg
lahf
test
mov
push
sahf
jl
cmp
std
adc
sbb
add
(bad)
movs
push
adc
push
jmp
adc
sub
dec
ins
dec
out
cmp
getsec
jg
cmp
xor
inc
mov
pop
into
ret
stc
jp
pop
out
test
aas
in
mov
cmp
sub
icebp
cmc
mov
jge
sub
sti
or
dec
fist
shl
xchg
inc
loopne
pop
dec
adc
xor
fdiv
sub
sbb
in
ins
sub
popw
dec
push
int
mov
mov
sub
pop
out
(bad)
cwde
or
aaa
test
in
cli
and
push
adc
sub
push
mov
cmc
fild
pmullw
and
inc
xlat
loope
retf
pop
mov
outs
push
jl
pop
dec
dec
js
mov
lds
and
or
out
sti
repz
test
push
sub
enter
out
xor
add
gs
fmul
inc
xchg
jno
mov
outs
add
mov
outs
fwait
jb
nop
dec
sub
mov
push
mov
sub
pop
dec
pmulhuw
in
push
dec
pop
push
xchg
mov
in
jno
add
and
dec
adc
shr
ins
dec
sbb
ja
mov
ja
dec
sar
(bad)
fbld
jb
mov
add
pop
jmp
xor
mov
fist
and
dec
ins
cmp
mov
add
das
mov
jb
ins
dec
mov
xor
pop
add
bound
pop
inc
data16
sar
jmp
(bad)
(bad)
stos
pop
gs
lahf
sbb
or
and
cmc
mov
repz
mov
mov
mov
mov
(bad)
push
xor
jl
and
pop
add
push
lock
push
pop
push
push
stos
sub
(bad)
push
cmp
sbb
push
movs
xlat
rol
cmc
mov
jns
pushf
xchg
icebp
mov
stc
idiv
jmp
jl
movs
pop
pop
jne
jl
das
push
pop
clc
jmp
or
jbe
outs
ins
stos
mov
movs
idiv
xchg
xchg
daa
rcl
mov
mov
fwait
movs
jl
push
inc
sbb
push
in
push
sbb
bound
das
mov
jg
fbld
aas
fistp
int
in
scas
faddp
jmp
mov
mov
add
in
in
mov
mov
ins
cmp
pop
cmc
and
shl
fstp
and
js
cmp
push
sti
aaa
je
fwait
data16
sti
sbb
add
fcom
mov
push
ja
ja
(bad)
fsub
fadd
lea
(bad)
jg
jns
sbb
dec
cmp
and
addr16
ins
mov
sar
rcr
and
mov
and
push
addr16
xor
leave
cmps
fwait
and
inc
shl
xor
adc
or
adc
mov
push
pop
push
lock
dec
sub
out
jl
cmp
xchg
leave
cld
(bad)
dec
xchg
mov
outs
xchg
push
mov
mul
rcr
xor
sub
dec
fcom
lahf
ror
ja
test
arpl
adc
shl
ss
or
das
sbb
out
ins
push
add
push
sar
imul
jg
xchg
mov
pop
jno
lds
push
cmp
jb
add
pop
dec
mov
inc
icebp
cmps
fcomp
cdq
inc
fsubrp
or
mov
cli
out
lock
leave
mov
rcl
mov
cdq
leave
in
xor
retf
(bad)
mov
ins
inc
pop
cmp
cmp
xchg
dec
jge
pop
(bad)
fist
popf
(bad)
jae
aas
test
cdq
dec
dec
xchg
(bad)
jmp
(bad)
daa
cs
mov
mov
add
mov
fs
add
nop
sbb
jl
push
push
mov
push
arpl
sti
jbe
dec
ficomp
sbb
fadd
fild
aaa
jl
or
mov
push
in
fucomip
shl
out
in
cmps
sbb
enter
pop
mov
lods
pop
cmp
xchg
pop
mov
push
pop
(bad)
pop
das
jb
dec
jns
jmp
dec
mov
pop
fadd
das
sub
push
mov
in
pop
xchg
(bad)
jl
jg
outs
lahf
daa
xchg
xor
inc
push
push
movs
leave
mov
inc
jmp
enter
cmc
daa
xchg
jb
arpl
gs
jmp
outs
gs
outs
jl
mov
leave
cld
stos
cmps
push
ficom
ss
cmp
push
mov
push
sahf
lahf
mov
fs
jb
pop
shr
(bad)
call
scas
mov
(bad)
ds
jecxz
cmps
push
into
or
sbb
dec
pop
in
sub
pop
inc
push
movs
push
dec
das
ins
lock
add
(bad)
push
fs
dec
dec
lahf
js
inc
ins
scas
popa
pusha
stc
pop
das
cwde
jo
dec
ja
ror
xor
fbstp
imul
mov
push
lods
(bad)
(bad)
jmp
cmps
xor
gs
jle
push
jns
push
retf
push
mov
add
shr
pop
inc
fwait
bound
sub
mov
(bad)
mov
push
das
jnp
mov
out
inc
cmp
push
out
idiv
mov
iret
push
sbb
cmp
fisttp
pop
rcr
pusha
std
test
dec
inc
aad
push
in
mov
outs
push
enter
mov
pushf
ins
ss
outs
mov
jae
aaa
pop
mov
fucomp
popa
mov
inc
sahf
jb
(bad)
jle
scas
aam
pusha
mov
cwde
lahf
(bad)
out
xchg
sub
cmp
daa
mov
(bad)
retf
inc
std
dec
or
inc
jns
jnp
(bad)
xor
adc
fnstenv
pop
adc
das
jb
daa
push
dec
mov
push
mov
pop
jl
fdivr
mov
dec
pop
push
jb
ins
sahf
push
stc
add
jl
mov
pop
inc
das
aas
jb
div
push
scas
add
add
data16
add
xchg
push
fist
lods
clc
pop
add
lods
mov
in
pop
stos
js
add
bound
das
pop
sbb
add
sub
jo
outs
pop
ss
cld
(bad)
mov
mov
stc
add
pop
add
cli
mov
lock
fist
ins
iret
inc
xor
iret
and
push
cmps
das
test
mov
mov
das
pop
scas
cli
mov
stos
jle
jns
addr16
(bad)
sti
rol
fadd
(bad)
sbb
xor
sbb
jmp
in
mov
mov
movs
inc
push
add
mov
xchg
dec
in
xchg
(bad)
icebp
push
dec
mov
mov
fnstsw
pusha
jns
(bad)
out
scas
sub
or
pop
gs
push
in
pop
push
add
ins
shr
ss
das
mov
mov
ins
sbb
push
inc
addr16
arpl
cmp
test
dec
xor
dec
test
ins
outs
xor
call
(bad)
repz
into
(bad)
and
inc
fistp
mov
in
pop
movs
sbb
sbb
jno
adc
(bad)
or
idiv
jb
ins
aad
gs
repnz
sub
dec
and
dec
ja
outs
ret
pop
pop
shl
mov
leave
push
cmp
lods
pop
mov
mov
ret
test
jbe
mov
das
sub
push
jle
retf
mov
clc
push
jne
add
lea
fisub
mov
adc
mov
(bad)
cmps
push
test
jmp
cmp
pop
mov
popf
adc
or
jbe
push
sar
repnz
inc
xchg
xchg
js
cs
or
int3
fwait
aam
in
pop
mov
test
push
pop
inc
ja
mov
(bad)
or
outs
cmp
out
push
or
adc
fcomp
add
xchg
cmp
add
sti
outs
push
jmp
fnsave
adc
xor
jns
mov
sbb
mov
sub
and
fistp
mov
outs
ds
pusha
mov
sub
jb
int
mov
adc
ins
cs
aaa
sub
lahf
add
jb
mov
clc
mov
adc
and
jg
adc
jno
or
(bad)
out
cmp
mov
mov
mov
xchg
jmp
int3
or
clc
ret
inc
dec
stos
add
xor
out
xor
in
dec
sahf
loop
push
push
arpl
repnz
cdq
dec
dec
fst
loope
popa
and
cmp
push
idiv
jecxz
mov
or
mov
bnd
push
dec
dec
pop
pop
push
stos
pop
add
dec
mov
push
adc
call
out
pop
mov
ins
pop
shl
(bad)
aaa
jmp
loope
add
shl
js
outs
stos
call
sub
mov
(bad)
jmp
popa
push
sub
cwde
pop
mov
cmp
fimul
clc
jae
mov
arpl
out
loop
outs
imul
mov
xchg
ret
push
adc
test
pusha
shl
mov
mov
dec
call
pop
push
jne
push
fwait
adc
mov
out
mov
add
xor
xchg
dec
mov
loop
imul
cmp
dec
push
icebp
mov
dec
sahf
cmp
jb
mov
lds
lds
pop
push
dec
sub
add
fsubrp
dec
pop
pop
mov
call
lahf
jo
cld
stc
jmp
rol
mov
call
push
mov
push
push
sub
and
cmp
mov
add
pop
cmps
in
daa
pop
inc
sub
and
sti
mov
sahf
movs
cld
enter
repnz
push
clc
add
pop
retf
cdq
dec
mov
sub
cdq
gs
ds
cld
push
out
jl
cwde
mov
xlat
sbb
xchg
mov
sar
rcr
outs
(bad)
sti
cmps
dec
iret
push
ja
aam
cmp
pop
leave
loope
lahf
sub
daa
dec
stos
jae
push
data16
mov
repnz
mov
cdq
cs
mov
ror
outs
jnp
dec
pop
push
enter
outs
fisubr
mov
enter
aaa
cld
jge
inc
sub
and
leave
movs
jmp
xchg
and
test
jb
imul
inc
fsub
mov
not
icebp
(bad)
mov
and
retf
(bad)
mov
inc
dec
mov
jecxz
mov
out
dec
mov
mov
test
stc
(bad)
jl
pop
jl
mov
jb
lea
imul
mov
inc
(bad)
out
aam
cmp
xchg
scas
mov
dec
sar
jg
mov
dec
mov
test
mov
inc
in
mov
mov
xchg
int
movs
adc
xchg
mov
pop
ss
fwait
out
loop
mov
pop
or
mov
scas
in
in
fwait
retf
scas
mov
mov
imul
dec
cmp
in
call
mov
mov
jl
cmps
lahf
hlt
fwait
mov
xor
stos
dec
jnp
pop
test
xchg
test
movs
inc
xchg
mov
inc
mov
pushf
or
fmul
je
sub
push
mov
out
stos
ficom
cdq
cmp
jl
or
inc
cmp
cs
inc
mov
nop
push
popa
(bad)
in
cmc
jmp
pop
dec
dec
mov
stc
cmp
shld
pop
dec
sbb
pop
aas
(bad)
call
push
das
sbb
ror
cmp
push
sub
call
mov
pop
daa
dec
cmps
or
push
inc
daa
idiv
scas
add
mov
jmp
jmp
lahf
xchg
sub
(bad)
(bad)
push
cmp
cmps
xchg
lock
data16
pop
jbe
sar
pop
shl
mov
ins
cmp
sbb
jmp
sbb
cmp
push
or
jb
xor
in
pop
lods
lock
cmps
dec
sub
lahf
fild
cmp
gs
icebp
lds
loop
or
out
mov
sub
add
pop
dec
xor
leave
mov
clc
and
pop
push
mov
xchg
cmc
sahf
ja
call
test
cmp
push
lock
jecxz
push
iret
cvtps2pd
jle
push
retf
mov
call
pop
push
rol
lods
xchg
cmps
xor
aaa
dec
inc
xor
ret
(bad)
(bad)
fild
mov
mov
mov
jl
inc
inc
gs
sahf
jmp
(bad)
aas
jmp
push
push
xchg
pop
push
addr16
fwait
fwait
mov
fisttp
push
cmp
pop
aaa
jl
movs
jle
(bad)
neg
sub
neg
or
out
popa
mov
mov
xor
sub
pusha
ins
leave
std
retf
bound
dec
push
outs
push
retf
add
pop
mov
(bad)
movs
out
and
inc
mov
das
xor
iret
shr
ret
sub
(bad)
in
lahf
jg
sub
mov
jne
mov
push
add
ja
mov
push
ss
gs
movs
lock
pop
jle
aaa
clc
jg
sar
jle
dec
mul
xor
cdq
xchg
push
popa
mov
inc
out
out
jl
push
mov
add
mov
fmul
out
jmp
out
bound
rol
fbld
and
cld
mov
outs
push
cmp
sar
outs
leave
add
ja
xor
cld
jg
xor
mov
iret
mov
movs
in
lahf
dec
stos
int
lods
icebp
or
cmp
rcr
xor
fbstp
sar
iret
test
outs
mov
push
cmp
leave
cmp
out
sbb
stos
ins
fild
stos
xor
js
pop
fild
xchg
out
lds
pop
jl
inc
sbb
ret
loop
aas
sub
jne
add
(bad)
inc
sar
mov
cdq
in
movs
movs
inc
mov
fnsave
(bad)
js
or
mov
inc
repnz
mov
iret
rcl
pop
mov
cmps
adc
add
cmps
(bad)
sahf
jb
xchg
lods
rcr
inc
lods
mov
and
call
mov
cmc
xor
jle
xor
dec
jnp
ss
inc
idiv
out
cmp
addr16
xchg
aaa
mov
jnp
inc
in
sub
inc
lahf
js
cmps
cmp
add
mov
pop
inc
and
cmps
(bad)
out
aam
ror
push
xchg
leave
leave
cmp
fdivr
dec
cmc
daa
pop
inc
std
jg
fdiv
xor
lods
repz
dec
jle
mov
jg
lahf
lock
jno
cdq
ins
xchg
xchg
into
sbb
pusha
retf
fidivr
std
jge
lock
sti
rol
shr
sbb
clc
inc
lahf
stos
fistp
push
or
push
pop
mov
std
inc
div
push
cmps
mov
pop
das
sub
push
in
rcr
jne
(bad)
xor
push
rcl
adc
mov
xor
mov
jmp
adc
inc
dec
add
pop
dec
mov
int
cs
cmp
jns
std
mov
sub
outs
cmc
leave
jbe
jl
popa
dec
out
fidivr
pop
cmp
aas
adc
fs
into
and
and
aaa
(bad)
fist
push
or
jb
bound
js
test
inc
mov
and
or
out
test
dec
test
add
xor
adc
lea
sbb
and
in
cmp
pop
cmp
mov
pop
xchg
sub
mov
jg
stos
dec
in
aas
cmp
mov
mov
add
mov
in
push
pop
or
fcom
sbb
push
stc
inc
pop
and
stc
inc
call
clc
mov
mov
cmp
int
mov
sub
xchg
mov
pop
jp
or
bnd
dec
rol
(bad)
stos
(bad)
and
gs
das
aaa
movs
mov
movs
mov
shr
(bad)
mov
ror
(bad)
test
and
test
(bad)
jle
stc
inc
neg
mov
xlat
fimul
lods
lahf
dec
scas
mov
(bad)
cmp
xor
stc
call
xchg
jl
stc
mov
stc
mov
jl
jb
sbb
sbb
mov
fstp
div
stc
jb
jns
movs
in
shl
jno
out
ror
add
out
in
cdq
and
sub
dec
fild
xor
or
xchg
les
rol
idiv
or
sub
mov
cdq
dec
pop
adc
lock
sbb
mov
aas
fisubr
(bad)
(bad)
(bad)
mov
fild
(bad)
std
outs
jo
loop
mov
push
push
outs
and
mov
lods
cdq
mov
test
xchg
out
stc
mov
inc
aaa
mov
sar
push
mov
and
(bad)
fmul
mov
dec
sub
jnp
in
idiv
pop
adc
sbb
neg
and
push
and
inc
and
cmc
adc
stos
jbe
jnp
(bad)
stc
adc
pop
push
and
jno
cs
mov
in
div
mov
sub
pop
stos
xor
imul
pop
cmp
sbb
adc
enter
leave
push
pop
inc
mov
leave
inc
push
repnz
leave
fistp
add
lods
pop
(bad)
les
xchg
iret
leave
xor
inc
dec
jns
and
dec
idiv
aas
test
ds
add
loope
imul
xchg
xchg
jo
out
inc
pop
jns
jb
(bad)
test
in
mov
fcomip
push
pop
xchg
std
add
push
sahf
iret
or
int
movs
mov
shl
push
es
mov
pop
dec
push
cmps
loop
inc
pop
inc
inc
inc
dec
movs
and
and
xchg
stc
loopne
sbb
push
sbb
add
dec
mov
(bad)
jecxz
inc
jle
pop
mov
(bad)
clc
shr
xor
adc
js
outs
mov
mov
pop
push
pop
add
dec
stos
push
push
outs
cmps
lock
jns
sub
inc
in
mov
mov
std
std
loope
sahf
retf
pop
inc
mov
sub
push
stc
sbb
bound
std
sub
mov
jmp
mov
int
jmp
and
imul
xchg
cmp
test
ret
mov
inc
xor
test
sbb
xor
add
cmp
test
pop
mov
cs
dec
test
clc
mov
push
stos
or
jmp
jne
aas
(bad)
sub
std
pusha
movs
aas
push
movs
mov
adc
mov
outs
sbb
mov
xchg
xchg
fmulp
pop
cli
pop
push
dec
bound
jecxz
repz
aam
(bad)
jmp
adc
out
mov
dec
enter
sbb
push
add
(bad)
pop
loop
and
jg
cmp
psrad
dec
xchg
xor
rcr
pop
jne
outs
sub
dec
clc
aam
pop
mov
push
push
shl
lods
mov
inc
jo
fisub
aam
cmp
ins
idiv
mov
dec
gs
add
in
outs
pop
add
in
cld
adc
call
push
xchg
dec
imul
add
mov
cmp
aaa
imul
je
dec
cs
mov
dec
outs
mov
xchg
add
cwde
xchg
sbb
enter
out
mov
cli
arpl
sti
stos
mov
xchg
test
jg
cwde
movs
cmp
jmp
or
jecxz
fs
mov
xor
enter
cs
mov
retf
mov
shr
sbb
mov
jg
stc
test
ins
add
or
add
jo
sbb
pushf
aas
inc
push
mov
mul
pop
push
push
ins
es
xor
xlat
mov
mov
shl
(bad)
jg
jnp
sbb
sbb
(bad)
and
and
fiadd
outs
sbb
nop
ror
sbb
stos
mov
leave
inc
popa
jge
sbb
pusha
sbb
mov
and
nop
scas
loopne
dec
xchg
scas
retf
ret
ins
xchg
mov
xchg
xchg
sub
push
adc
cmp
aam
stc
outs
loopne
fwait
les
retf
dec
lods
adc
dec
lods
jmp
das
xchg
xchg
scas
jmp
scas
stc
enter
out
jo
lds
xlat
jmp
test
scas
mov
cmp
add
mov
pop
jp
push
mov
std
mov
add
sti
cvtpi2ps
mov
pop
sbb
mov
or
repz
lods
xchg
retf
in
mov
xchg
dec
sub
shr
mov
jl
mov
es
inc
imul
ror
push
adc
ret
mov
aad
inc
cmp
xchg
sub
mov
dec
rcr
cld
mov
add
cmp
iret
in
popa
jnp
adc
adc
mov
sbb
stc
aad
call
xor
and
sar
sub
xor
fmul
ins
dec
(bad)
mov
cld
ds
sub
test
test
stos
add
dec
or
sub
inc
cmp
out
jp
sub
jle
outs
ins
in
data16
sub
lock
scas
and
pop
adc
sub
dec
pushf
out
mov
out
sbb
mov
and
xor
jnp
outs
in
pop
retf
sub
xchg
fmul
inc
jp
dec
lea
dec
in
ss
movs
dec
mov
xchg
(bad)
mov
movs
jecxz
and
push
pop
movs
adc
imul
pop
clc
mov
cs
(bad)
hlt
outs
clc
cli
jns
iret
xor
add
scas
jb
loopne
mov
jg
ss
mov
imul
push
sub
dec
dec
jbe
shr
or
imul
and
js
sbb
mov
push
imul
inc
es
fcomip
cwde
and
mov
inc
and
mov
lahf
mov
cmc
and
ja
popf
adc
loope
ror
or
cs
pop
jb
mov
rcl
and
mov
(bad)
fcom
sbb
(bad)
mov
cmp
jmp
cdq
add
pushf
not
and
or
std
push
in
scas
pop
mov
sbb
repz
and
xor
dec
fild
sub
daa
(bad)
jge
aaa
addr16
or
(bad)
push
pop
and
mov
dec
xchg
jmp
mov
fbstp
mov
test
fbstp
es
sub
(bad)
sub
out
add
(bad)
xchg
push
into
sub
sub
jns
add
dec
(bad)
sti
mov
mov
mov
push
push
xor
sub
and
and
cmps
or
and
nop
pop
pop
fst
adc
scas
(bad)
sbb
inc
imul
push
and
adc
imul
pop
(bad)
mov
mov
sub
dec
mov
test
mov
cmp
mov
icebp
lods
shl
shr
dec
jmp
xor
sub
xchg
xchg
icebp
ja
cs
push
rcr
test
push
test
sbb
adc
lahf
sub
sbb
or
mov
add
lds
outs
or
mov
sbb
jbe
rcl
iret
sub
mov
jnp
mov
sub
dec
mov
sbb
sub
dec
sbb
pop
push
sbb
and
jmp
adc
inc
xchg
dec
mov
ja
cmp
and
mov
data16
and
sub
xchg
inc
ficom
or
xchg
mov
and
mov
repnz
mov
cmp
sbb
xchg
cld
dec
sub
nop
xchg
cli
push
xor
pop
jp
cmp
pop
fisubr
and
imul
push
mov
cmps
pop
(bad)
imul
(bad)
sub
jns
jne
sub
add
xchg
jne
lods
out
mov
arpl
repz
fnstenv
repnz
or
and
mov
test
mov
adc
push
inc
adc
jb
push
mov
out
push
loope
outs
mov
mov
popf
(bad)
aam
and
add
jo
xor
add
(bad)
sahf
pop
pop
jae
cmps
xor
ds
shl
movs
popa
out
sbb
mov
out
pop
test
(bad)
jne
add
sbb
repnz
dec
mov
loope
inc
mov
mov
or
jnp
jl
xor
xchg
das
popf
neg
push
loop
es
and
push
in
jb
cmc
and
cmc
fld
cmp
in
add
ja
(bad)
std
mov
int3
ret
outs
inc
and
dec
mov
sub
data16
mov
inc
loope
cmps
rcr
enter
fnstenv
push
ficom
cs
(bad)
mov
xchg
lods
pushf
repnz
ja
xchg
cmp
fs
jp
outs
sbb
leave
test
stc
gs
mov
and
lahf
test
sbb
dec
mov
aaa
xlat
sub
fisubr
movs
push
or
lds
jecxz
lds
sub
dec
mov
(bad)
and
inc
mov
mov
ret
daa
cld
loope
sti
je
and
push
dec
sbb
pop
leave
and
jl
in
sub
(bad)
ficomp
pop
repnz
mov
jmp
leave
xchg
inc
leave
dec
fidiv
fiadd
fisub
movlhps
mov
in
sbb
dec
and
adc
imul
sti
data16
add
call
and
fidiv
icebp
xchg
push
cld
cs
sar
or
xchg
jnp
ss
mov
sub
cdq
mov
mov
inc
inc
int
leave
imul
cmc
add
sbb
es
push
cmp
outs
or
adc
push
fcmovnbe
test
mov
dec
fbld
fucomip
lds
test
push
fs
and
mov
mov
data16
sub
fist
add
jno
mov
jnp
pop
mov
repnz
stos
jg
loop
mov
xchg
sub
mov
or
sub
mov
add
xchg
pop
push
cmp
test
aaa
out
sbb
xchg
retf
and
movs
mul
repnz
aam
sub
imul
ins
sahf
fsubr
sub
xchg
dec
mov
enter
mov
jb
in
scas
(bad)
jne
jg
shl
outs
hlt
mov
push
bound
scas
clc
mov
shl
in
xor
mov
inc
pop
je
push
fst
push
fisttp
or
push
xchg
aaa
in
or
in
mov
repnz
stc
sbb
xor
mov
add
inc
cli
imul
sub
test
scas
pop
aam
je
cs
xchg
iret
cwde
mov
adc
mov
jecxz
xor
pop
iret
dec
ja
push
stos
push
adc
jnp
push
xchg
cs
(bad)
pusha
sub
adc
sbb
inc
fdiv
shl
ds
or
jb
add
inc
cmp
pop
cmps
sbb
lods
mov
cmc
adc
adc
mov
jge
(bad)
fcomp
mov
ins
test
pop
mov
push
sub
sub
clc
pop
sbb
sub
addr16
adc
inc
add
or
addr16
es
or
cmp
jg
push
push
inc
test
dec
ret
loope
mov
cmps
sub
or
adc
inc
and
sub
imul
mov
loop
mov
ins
or
or
cmp
jle
mov
(bad)
arpl
addr16
xchg
pusha
enter
push
mov
sbb
xor
push
cdq
sub
dec
out
sub
lods
mov
jns
dec
adc
mov
xchg
pop
lods
lods
xor
mov
jmp
cmp
pusha
xor
inc
je
cs
and
test
lock
dec
inc
ret
mov
call
data16
fcomip
add
outs
sub
cdq
cmp
add
sub
js
sub
inc
int
(bad)
fs
retf
stos
jb
xchg
push
add
mov
retf
adc
loopne
div
xor
std
push
and
add
pop
mov
mov
outs
xor
or
xor
imul
ins
mov
inc
retf
cdq
xchg
call
mov
cmps
add
aas
ja
ds
and
adc
jle
jg
cmp
test
or
(bad)
sub
and
outs
jmp
in
add
push
or
xchg
push
xchg
iret
inc
mov
retf
mov
fs
xor
(bad)
rcl
leave
les
xchg
xchg
adc
jl
cmp
or
cli
or
and
and
loop
(bad)
jl
and
jl
das
adc
pop
(bad)
repnz
pop
mov
retf
or
fcomp
xchg
pop
stc
retf
mov
push
xchg
mov
adc
lock
stc
rcr
sub
mov
jl
popf
xor
stc
lahf
inc
cmp
or
cmp
lds
or
test
arpl
shl
out
cld
fwait
inc
xchg
retf
movs
inc
lods
jg
xor
adc
sbb
call
imul
icebp
daa
repnz
mov
dec
(bad)
(bad)
(bad)
dec
inc
mov
fdiv
dec
inc
cmp
adc
sbb
jmp
in
cmp
call
cmps
or
xor
sbb
fistp
push
ja
call
jl
cld
js
push
jb
rcl
in
call
gs
frstor
xchg
mov
inc
(bad)
(bad)
(bad)
call
dec
cdq
sahf
rol
lods
add
and
dec
sbb
stos
jecxz
xchg
mov
loop
adc
loopne
test
rcl
mov
dec
sub
call
sbb
das
cld
sbb
mov
lock
(bad)
call
mov
and
sub
sub
mov
cli
inc
dec
out
idiv
(bad)
dec
mov
test
jno
fsub
ins
fwait
jge
arpl
fwait
sbb
movs
cmp
cmp
cli
(bad)
(bad)
(bad)
mov
das
neg
dec
sbb
outs
jae
push
pop
clc
repz
cmp
xor
(bad)
movs
push
(bad)
(bad)
jmp
data16
mov
in
xchg
mov
in
fist
push
fadd
in
movs
push
pop
lds
(bad)
jmp
cmps
sbb
xchg
out
test
push
pop
out
push
outs
mov
stos
imul
mov
xor
push
hlt
fist
push
mov
mov
ror
pop
cs
jl
mov
and
aam
cld
scas
lods
jg
sub
add
sub
cmp
rcl
xor
outs
sbb
fld
push
clc
in
ror
pop
or
in
fisttp
xor
sub
jmp
test
mov
xchg
and
push
outs
retf
int3
(bad)
mov
pop
jb
in
aas
outs
xchg
dec
fst
dec
dec
clc
or
mov
fstp
xchg
ror
dec
dec
cld
es
push
push
push
mov
retf
in
mov
xchg
nop
pop
add
aad
shr
and
fidivr
inc
mov
jle
lods
inc
sbb
mov
and
or
adc
jo
fdiv
movs
or
cmp
movs
nop
dec
fist
add
jl
inc
inc
mov
stc
shr
sbb
cmp
hlt
aad
sbb
(bad)
jg
adc
and
and
es
sub
sbb
or
adc
push
jle
jno
inc
fld
daa
xchg
lock
push
outs
and
es
xlat
add
cmp
jo
sub
jp
cmc
push
out
test
lods
cmp
jmp
mov
jo
call
out
lock
outs
lods
ficom
mov
mov
sbb
mov
jl
das
lock
add
pop
test
add
jp
pop
rcr
inc
cs
mov
inc
mov
adc
and
inc
push
jmp
inc
sbb
mov
in
pop
cdq
mov
or
idiv
sbb
movs
add
and
adc
xchg
mov
xor
cmp
mov
mov
mov
and
sbb
pop
sub
inc
pop
inc
push
cmp
sub
pop
or
in
out
sub
pop
adc
push
push
pop
sub
rol
icebp
nop
pop
(bad)
in
mov
rol
dec
aad
aas
jmp
push
retf
pop
mul
in
xor
mov
and
test
sbb
lock
fwait
iret
dec
call
stc
and
push
jp
and
mov
xchg
retf
dec
mov
mov
cs
push
mov
push
dec
dec
pop
mov
push
jae
inc
enterw
mov
stos
rcl
mov
inc
pop
outs
or
mov
jno
adc
mov
imul
fsub
sub
cmp
movs
pusha
jp
adc
or
icebp
mov
mov
jl
test
jne
(bad)
sbb
mov
repz
(bad)
cmp
jb
cmp
jecxz
push
and
jno
nop
xchg
jo
retf
jecxz
mov
add
jae
cmp
sub
mov
push
push
mov
push
cmp
xchg
xchg
mov
jmp
retf
xchg
pusha
addr16
lock
jg
cmp
retf
(bad)
icebp
fild
cmp
scas
dec
popa
cmp
pop
mov
enter
or
fist
popa
mov
xor
stc
push
test
ret
mov
mov
cmp
inc
and
movs
xor
mov
test
mov
jg
cmp
imul
jne
mov
icebp
mov
xchg
xor
push
mov
mov
mov
fild
sub
inc
icebp
sbb
mov
lds
lods
sbb
xor
rcr
sbb
fdiv
xor
fs
ja
sar
mov
invd
jb
mov
mov
out
out
(bad)
jno
xor
mov
in
rcl
or
and
sub
or
add
pop
xor
fwait
or
in
das
stc
cld
loop
or
jnp
ror
jnp
shl
repnz
aad
ins
mov
nop
mov
retf
retf
cmps
add
mov
xlat
add
sbb
movs
ins
imul
in
jecxz
mov
inc
sbb
int3
in
popf
push
inc
or
or
(bad)
sub
lods
cld
scas
dec
mov
add
sub
dec
or
sbb
jecxz
jl
daa
lods
(bad)
and
add
and
push
mov
cmp
adc
sbb
in
or
jge
retf
add
or
dec
idiv
and
(bad)
aas
enter
in
pop
sub
test
mov
mov
inc
clc
cmp
retf
adc
sbb
mov
jbe
push
xchg
in
and
mov
push
aam
sub
adc
xchg
or
frstpm(287
xor
pop
loope
push
imul
mov
stc
or
adc
popa
or
push
mul
cld
mov
aas
outs
es
test
add
mov
jns
jle
stos
das
(bad)
push
std
add
into
ins
data16
pop
mov
repz
or
cmc
sbb
mov
dec
ret
ffree
(bad)
mov
iret
in
imul
mov
adc
jle
mov
clc
push
pop
in
push
add
sbb
sbb
aam
jmp
push
loopne
xchg
xor
mov
daa
xchg
push
push
fbld
jl
sub
jle
adc
mov
gs
and
and
pop
in
xchg
and
inc
mul
shl
fsubr
aam
and
dec
push
adc
jns
jns
movs
jl
movs
aam
cmp
aam
push
test
push
nop
sub
(bad)
xchg
pop
pop
add
popa
nop
shl
ja
xchg
and
mov
xchg
aaa
enter
mov
push
jno
ins
repnz
mov
clc
mul
xor
jecxz
pop
xchg
mov
rcl
retf
xchg
jo
lods
lods
ins
(bad)
das
outs
aas
cmp
sahf
pop
jnp
shl
dec
xlat
hlt
lds
adc
cs
in
and
ror
jne
and
fcom
cmp
xchg
mov
pop
mov
ds
inc
daa
sbb
mov
in
pop
cmp
lahf
push
push
pushw
mov
adc
adc
jnp
pop
in
cwde
lea
adc
int
call
in
nop
lds
test
gs
or
or
cdq
cmp
rol
js
and
out
jl
adc
jmp
test
jb
xchg
xor
cli
push
bound
shr
push
inc
pusha
dec
sbb
mov
adc
out
loop
jbe
imul
sub
stc
ins
inc
scas
cmp
or
and
and
mov
cmovae
jno
add
adc
push
or
pop
enter
mov
pop
mov
out
xchg
arpl
xchg
cmps
pop
aaa
into
dec
sub
jl
pop
cld
movs
gs
rol
ss
push
outs
test
in
inc
test
cdq
mov
lods
not
cld
sbb
sbb
mov
xchg
outs
sbb
fstp
and
icebp
push
add
jo
addr16
clc
jle
inc
daa
jb
mov
mov
xchg
xor
(bad)
xchg
mov
mov
xchg
add
ds
sub
push
or
mov
or
iret
pusha
sbb
mov
pop
ja
ss
jb
cmp
ds
loop
nop
repnz
pop
sahf
(bad)
ja
add
pop
sub
in
dec
mov
fisttp
pusha
jb
out
cmp
inc
pop
paddsb
jmp
outs
mov
or
mov
in
pop
push
jg
cld
push
in
cs
push
mov
aad
xchg
out
push
and
adc
push
mov
xlat
or
ret
sbb
jg
retf
popf
sbb
movs
ror
cdq
shl
movs
cs
and
imul
pop
in
out
daa
adc
(bad)
pop
cmps
pop
mov
mov
jle
add
aam
nop
jg
mov
mov
jg
pop
mov
adc
pop
(bad)
xor
mov
cmp
jbe
add
jmp
mov
pop
pop
imul
mov
sub
imul
mov
test
cmp
sub
jle
mov
(bad)
loope
retf
enter
xchg
call
mov
sbb
xor
aad
scas
and
push
dec
add
sub
in
dec
in
ret
clc
xor
dec
pop
xchg
call
pop
mov
jno
repnz
aam
cmp
jg
daa
xchg
mov
stc
das
mov
sub
clc
pop
pusha
jle
and
lods
push
mov
mov
jb
icebp
jmp
imul
(bad)
in
rcl
(bad)
xchg
push
adc
neg
and
lods
enter
push
neg
cdq
inc
or
jb
call
std
lods
xor
adc
mov
push
adc
outs
xor
out
cmp
sbb
lea
dec
outs
out
push
mov
adc
mov
dec
nop
iret
dec
dec
xor
(bad)
mov
(bad)
or
fs
sub
int3
mov
xor
mov
mov
jne
adc
or
out
in
imul
jnp
pop
xchg
aad
and
fisub
in
movs
push
mov
loop
out
icebp
sbb
inc
mov
aad
out
rcr
jbe
fidivr
dec
mov
dec
pop
jb
mov
mov
les
push
inc
in
icebp
jmp
pop
hlt
sbb
pop
or
rcr
mov
out
bound
and
jle
inc
mov
lds
jno
out
add
push
nop
jae
int
lea
mov
xor
xor
ret
loopne
stos
xchg
jno
mov
stos
xchg
or
sbb
(bad)
sbb
xor
adc
les
outs
or
fnsave
xor
push
gs
push
pushf
mov
inc
loopne
jns
lods
and
lds
push
pop
mov
add
pop
das
(bad)
rcl
sub
jmp
frstor
ficom
or
dec
mov
jbe
int
add
(bad)
xchg
imul
pop
cmp
and
jne
repz
adc
cmp
xchg
push
out
mov
rcr
sub
jb
push
aad
aad
scas
xchg
pop
cmp
repz
dec
push
mov
js
push
or
int3
loope
mov
shr
add
push
out
push
jl
sub
cs
rcr
ret
loope
push
jle
mov
std
ja
jnp
fwait
adc
loop
cli
ins
cs
cmp
repz
test
retf
xor
ror
pop
rcr
popf
cs
sbb
jl
mov
push
scas
mov
fisttp
in
or
sub
ins
test
mov
fsubr
pop
inc
repz
or
sbb
mov
add
jo
cwde
sti
push
add
and
jmp
repnz
cmp
cmp
pusha
sub
dec
aas
mov
and
xchg
sbb
xor
jle
or
fist
movs
(bad)
mov
push
mov
aam
je
mov
sub
pop
xor
cmp
push
jecxz
mov
push
adc
(bad)
fsubr
lahf
mov
mov
pop
push
stc
out
xchg
pushf
adc
cmp
rol
cmp
jl
push
or
inc
sbb
dec
jmp
(bad)
loope
mov
add
sub
and
xchg
cmp
jle
sbb
retf
mov
sbb
lock
scas
aam
inc
movs
pop
jbe
in
mov
push
add
jmp
jmp
dec
cld
cmp
int3
sbb
add
adc
imul
adc
cmp
or
out
call
test
mul
mov
lea
mov
cs
hlt
test
in
push
mov
jae
jo
(bad)
(bad)
jmp
and
jne
repnz
cmps
outs
out
cmps
push
(bad)
movs
fwait
bound
lahf
rol
(bad)
fst
jl
dec
inc
pop
ins
shl
push
cmp
xor
test
pop
jb
daa
sahf
cmp
mov
xor
xchg
(bad)
(bad)
inc
repz
dec
int
ins
push
pushf
xor
retf
popa
mov
sbb
(bad)
inc
add
push
scas
stc
jmp
mov
or
(bad)
aam
icebp
(bad)
mov
dec
shr
push
xchg
call
xchg
mov
inc
cwde
out
nop
popf
loope
inc
inc
aad
or
jecxz
cli
loopne
imul
shr
ret
mov
or
adc
int3
mov
and
lock
daa
adc
mov
or
pop
sbb
mov
ins
jge
stc
cmp
cmc
cwde
add
adc
loop
sub
sbb
rcl
(bad)
mov
rcl
ret
adc
jbe
cmp
jle
neg
outs
or
movs
xchg
fisubr
xlat
mov
test
rcl
dec
dec
shl
scas
dec
shr
test
cmps
call
cmp
mov
in
in
(bad)
mov
in
std
inc
cmp
or
jb
out
push
loopne
mov
in
leave
(bad)
mov
sbb
sbb
jmp
sbb
adc
(bad)
aas
add
test
sub
jmp
repnz
repnz
jg
cmp
adc
movs
xchg
mov
mov
sbb
push
push
sbb
icebp
lock
dec
xchg
jmp
xor
sbb
movs
scas
repz
and
movs
inc
loopne
loopne
sbb
outs
cmps
pop
or
in
and
push
mov
outs
mov
cmp
mov
enter
aas
idiv
daa
jo
loop
mov
aas
jno
xlat
adc
sub
inc
or
mov
out
jne
dec
test
xchg
scas
nop
pop
pop
ret
xchg
inc
int
iret
pop
sub
lods
lods
(bad)
out
sub
(bad)
sub
jmp
mov
in
push
sbb
add
dec
loop
mov
aad
xor
cmp
data16
(bad)
outs
test
adc
mov
mov
mov
cdq
xchg
mov
loopne
(bad)
cmp
xor
loop
dec
mov
fild
cmc
mov
std
icebp
sbb
sbb
dec
int
mov
xchg
sahf
aaa
mov
push
inc
dec
jg
mov
xchg
fdiv
or
(bad)
es
push
mov
int3
in
je
adc
xchg
mov
fdiv
push
cmp
sar
mov
aas
ror
mov
daa
clc
inc
inc
fiadd
or
mov
cmp
inc
retf
dec
cmc
cwde
sub
dec
pop
mov
add
xchg
repz
xchg
dec
out
mov
jb
scas
outs
and
cld
out
ret
test
add
popf
movs
js
xor
or
mov
rcr
inc
adc
and
or
xor
dec
xchg
jl
or
adc
push
bound
cs
mov
or
mov
push
mov
pop
jecxz
jne
push
push
in
out
push
in
push
mov
inc
inc
cmp
int3
add
cmp
or
fdivr
push
les
mov
out
adc
or
out
pop
shr
cmp
out
stos
pop
mov
cli
and
jb
push
sub
scas
or
inc
in
push
inc
movs
xor
and
mov
outs
cmovle
push
mov
nop
push
mov
cmp
inc
mov
lods
ja
mov
das
clc
cmp
cli
jmp
xchg
inc
cmps
or
out
push
loope
(bad)
test
and
xchg
mov
sub
cmp
jecxz
cs
lods
and
or
or
push
xchg
bound
call
jle
loop
inc
enter
in
sub
mov
add
push
fbstp
push
and
inc
inc
mov
xor
sub
mov
xor
push
or
(bad)
call
jb
test
and
xchg
jl
mov
loopne
and
dec
lods
sti
clc
jno
btr
cs
mov
and
ffree
dec
cmps
push
sbb
inc
mov
lea
(bad)
nop
(bad)
cdq
loop
xchg
adc
and
popf
push
mov
inc
sbb
repz
jmp
and
push
push
fld
frstor
or
jmp
ds
inc
dec
fwait
or
and
imul
in
sub
add
shl
jmp
adc
stc
movs
rcl
adc
or
lds
cs
xor
or
xchg
mov
pop
inc
(bad)
or
and
dec
sbb
or
out
jl
mov
inc
push
out
movs
or
jge
adc
movs
jp
pop
mov
test
mov
es
inc
outs
mov
mov
pop
jl
(bad)
pop
cmps
sub
enter
xlat
outs
jp
(bad)
rcl
cmps
mov
adc
pop
mov
loop
iret
and
call
sub
push
add
inc
sbb
or
xchg
repnz
mov
pop
pop
icebp
test
xor
mov
push
repnz
xchg
pop
jp
xchg
dec
out
fstp
aad
loopne
mov
cmp
sbb
call
sbb
mov
cmp
xchg
sub
mov
test
mov
pop
push
push
mov
fdivr
sahf
and
mov
fwait
ss
repnz
ror
loop
out
rol
mov
cs
xor
outs
cli
push
icebp
xor
fwait
cmp
or
test
iret
ret
adc
arpl
adc
fisttp
sbb
popf
dec
push
pop
leave
in
mov
jnp
data16
aaa
pop
xor
nop
xchg
retf
pushw
test
xor
cmp
ins
mov
sub
inc
jbe
stos
loopne
dec
and
ins
xchg
jl
lahf
pop
jbe
fnsave
fwait
loopne
es
push
adc
pop
outs
movs
xor
inc
mov
mov
fistp
pop
loopne
mov
jp
jns
stos
dec
jnp
das
and
mov
div
repnz
adc
push
dec
(bad)
int3
add
test
or
shl
in
and
jle
out
(bad)
out
sbb
fs
movs
fnsave
rcr
inc
dec
push
and
int3
inc
xor
inc
mov
dec
adc
addr16
loope
push
jnp
icebp
pop
cmp
daa
mov
jo
and
fwait
and
and
fsubr
shl
ss
outs
das
cmc
pop
fwait
aad
out
loope
cmp
inc
dec
clc
jge
dec
adc
jbe
inc
adc
xchg
add
xchg
pop
je
dec
push
cmp
cmp
mov
pop
cmp
(bad)
mov
sub
mov
cmp
arpl
fst
lods
cmp
ins
sub
repnz
scas
stc
in
in
push
or
fsubr
mov
lock
call
les
xor
and
iret
call
sbb
lds
push
into
je
add
pushf
push
cmp
xchg
in
mov
push
pop
push
jne
fidivr
sbb
xor
inc
sbb
in
xchg
fsub
fsubr
cmp
and
or
sbb
pusha
cmp
clc
sbb
cmp
pop
mov
test
in
dec
and
out
cmp
mov
dec
mov
pop
xchg
cs
xlat
std
add
and
fwait
pop
ret
dec
aas
mov
fwait
lods
adc
cli
sbb
cmp
unpckhps
cmp
call
fadd
in
out
push
push
or
outs
(bad)
scas
loope
dec
inc
jmp
add
outs
bound
call
and
stc
test
mul
cmp
cli
cs
push
sub
mov
add
enter
je
(bad)
mov
push
push
call
pop
imul
add
in
rcl
cmps
mov
fst
call
pop
pop
sub
mov
loop
dec
inc
arpl
and
xchg
repz
test
(bad)
loopne
out
pop
loope
inc
scas
bound
fwait
inc
sti
mov
add
mov
mov
ja
stos
cmp
test
scas
or
push
outs
ret
in
jb
mov
lods
cwde
bound
inc
dec
lock
shl
pop
in
mov
fwait
lahf
sti
lods
aaa
test
xor
sahf
ds
test
sbb
loop
or
push
inc
outs
cmps
pop
and
repnz
cwde
loope
and
inc
mov
enter
inc
lods
push
sahf
leave
call
sti
dec
push
add
sbb
adc
mov
mov
pop
in
xor
mov
fidiv
inc
adc
mov
int3
mov
ror
and
xor
lods
pop
mov
lods
pop
popa
loope
dec
gs
es
imul
rcl
mov
and
jb
cmovp
mov
scas
shl
call
iret
loop
jno
mov
cmps
pop
or
cli
sbb
jno
mov
sahf
dec
outs
and
test
mov
mov
mov
pop
cmp
out
pop
inc
sbb
pop
cld
popf
mov
loop
mov
fild
push
and
es
jne
mov
push
in
(bad)
pop
mov
lea
pop
xor
scas
add
and
inc
push
lods
es
loope
test
push
bound
sar
or
sub
lods
inc
jae
jmp
pop
jbe
lahf
jle
cmp
jmp
jno
in
xor
jmp
mov
inc
jo
cmp
adc
adc
sub
mov
push
adc
add
dec
push
js
mov
inc
popa
data16
enter
cld
push
cmp
pop
push
mov
sbb
cmc
mov
and
lds
or
outs
in
fstp
outs
daa
sbb
(bad)
ret
sub
xor
mov
les
dec
and
dec
pop
data16
retf
cmp
xchg
push
lods
loop
pop
stos
inc
stos
mov
stos
lea
adc
(bad)
pop
cs
cmps
push
lds
add
and
sahf
mov
push
(bad)
(bad)
lods
retf
xchg
iret
dec
pop
scas
(bad)
imul
mov
push
pop
in
push
into
mov
mov
fwait
add
jg
pop
jb
inc
push
pusha
add
scas
push
sub
nop
sub
jmp
pop
aas
aaa
jg
in
cwde
mov
das
fisubr
fisub
test
in
inc
stos
push
fdiv
movs
adc
jae
neg
repnz
mov
ins
sub
pusha
shl
adc
lds
xor
jmp
iret
jns
cmps
add
jbe
iret
nop
popf
mov
and
inc
retf
or
in
sub
daa
popf
add
shr
and
mov
ror
mov
mov
and
mov
jno
add
add
adc
adc
or
xchg
jne
mov
sbb
mov
xchg
lock
push
imul
dec
int3
imul
pop
in
mov
sub
mov
mov
and
cmps
pop
xor
dec
scas
and
push
stc
in
mov
pop
xchg
sbb
jo
xchg
xchg
(bad)
(bad)
(bad)
jnp
shr
adc
(bad)
fstp
pop
or
jo
add
sbb
cmp
sbb
aaa
mov
neg
cmp
and
add
in
sbb
rol
jp
mov
sub
and
push
je
pop
push
icebp
pop
dec
out
or
mov
stc
or
adc
xor
in
jno
pop
movs
mov
test
sub
ins
mov
cwde
fisttp
sbb
cs
ds
stos
shl
mov
push
inc
dec
push
cld
scas
arpl
jp
add
gs
add
(bad)
push
cwde
(bad)
cmps
out
dec
rcr
cmova
mov
push
push
fldcw
jae
sbb
daa
outs
mov
push
nop
outs
fiadd
fcomp
ret
pop
or
das
leave
or
lahf
and
mov
icebp
out
icebp
push
or
cmc
mov
aam
pop
or
pop
jle
xchg
fadd
pop
dec
scas
dec
fcomp
jmp
scas
test
fdivr
int
sub
mov
dec
jmp
mov
(bad)
iret
pop
and
pop
mov
cld
popf
stc
add
in
in
mov
int
mov
outs
int
add
ss
(bad)
fidiv
aas
enter
jbe
add
inc
cld
push
scas
mov
retf
adc
xchg
fist
push
clc
popa
mov
adc
xchg
sbb
xchg
fsub
fcom
or
aad
imul
dec
ret
or
or
dec
xlat
cs
sub
pop
lahf
pop
lahf
inc
add
or
shl
inc
movs
and
aas
pop
(bad)
dec
mov
loope
cwde
sub
pop
jle
fnsave
push
xchg
inc
push
inc
scas
add
or
mov
jecxz
mov
xor
push
js
es
mov
xchg
test
cli
jmp
lea
mov
push
leave
cs
push
fiadd
(bad)
cwde
push
mov
cmc
sub
push
jne
pop
mov
add
in
xchg
push
mov
jmp
das
sbb
je
push
ja
adc
mov
nop
xchg
dec
pushf
xchg
js
into
push
xchg
mov
call
imul
mov
mov
add
mov
pop
mov
shl
sub
xchg
test
sbb
mov
xchg
add
xchg
ins
xchg
add
pop
xor
jmp
cwde
scas
mov
out
lods
pop
icebp
pushf
xor
fdivr
jmp
mov
int3
xchg
loope
dec
adc
cld
mov
test
cmp
gs
dec
shl
(bad)
mov
mov
add
push
jmp
xchg
xlat
push
ss
imul
cmp
inc
mov
pop
stc
sbb
sub
mov
add
retf
sbb
lahf
pop
push
inc
popa
dec
inc
mov
inc
mov
pop
not
dec
sbb
shl
fdiv
mov
or
push
jmp
inc
or
mov
es
xchg
mov
gs
mov
inc
pop
sbb
clc
sbb
ret
and
cli
(bad)
cmp
fistp
xchg
outs
add
mov
popa
lahf
arpl
sbb
fist
fld
pop
push
dec
pushf
ret
adc
daa
jns
jle
iret
shl
jp
stos
(bad)
mov
(bad)
adc
test
inc
(bad)
xchg
(bad)
lods
pop
clc
sub
in
mov
scas
lock
adc
mov
push
jns
sub
lods
jg
nop
cmp
inc
loop
xchg
cld
sub
mov
mov
imul
cmp
stc
pop
or
xchg
xor
data16
fdiv
inc
movs
pop
lahf
gs
xchg
mov
out
xchg
gs
mov
jb
scas
push
jb
cmps
lods
pop
jmp
push
sar
in
add
arpl
popa
call
mov
jbe
fist
push
pop
hlt
xor
sub
jno
out
jb
push
cli
retf
test
lahf
mov
jae
shl
fiadd
fist
das
pop
sbb
stc
jo
stos
and
dec
sti
and
cmps
xlat
mov
test
test
jecxz
in
outs
push
(bad)
push
mov
add
or
mov
jb
or
adc
pop
loope
mov
iret
in
ficomp
push
shl
ja
pop
aaa
and
test
mov
xor
sub
sub
mov
nop
inc
sub
pop
inc
push
dec
and
xor
adc
stc
loop
ret
sbb
jecxz
in
repnz
test
addr16
data16
or
adc
loopne
(bad)
push
aam
test
popa
fcomp
mov
wrmsr
mov
adc
fidivr
hlt
test
inc
pop
and
xlat
je
jmp
jns
mov
lods
lds
cdq
xchg
arpl
jns
sbb
jbe
rol
mov
pushf
nop
scas
mov
inc
pavgb
adc
(bad)
jbe
lahf
and
mov
xlat
dec
add
xlat
std
das
mov
sub
add
mov
mov
dec
cwde
retf
mul
push
inc
adc
and
sbb
hlt
and
sar
movs
cmps
cwde
jp
dec
jae
cmp
jns
loopne
add
jbe
nop
inc
or
in
pop
add
loop
or
jmp
add
in
adc
jl
stc
in
jne
add
jns
outs
dec
mov
ret
jbe
add
mov
leave
ins
or
aad
xchg
(bad)
jl
push
lock
ds
and
cmps
cmp
aad
sub
ja
xor
shl
scas
out
and
adc
push
out
lock
jmp
fnstcw
xor
xchg
enter
push
rcl
sbb
das
fnsave
or
es
in
mov
daa
loop
icebp
and
pop
dec
push
adc
imul
(bad)
arpl
addr16
sbb
sahf
aad
sahf
ins
fistp
movs
dec
or
test
push
test
in
mov
out
and
in
mov
xchg
sahf
sub
lahf
cmp
cmp
mov
addr16
sub
movs
and
push
(bad)
pop
and
add
enter
xchg
adc
mov
jp
push
loope
es
xchg
mov
xor
cmp
and
ss
push
imul
xchg
daa
xchg
out
adc
ins
frstpm(287
jbe
addr16
sub
clc
push
mov
jmp
adc
lock
inc
retf
ss
and
mov
inc
xchg
push
pop
adc
out
xor
test
call
sti
mov
aaa
(bad)
outs
mov
pop
outs
call
shl
jae
test
rol
leave
out
outs
mov
sbb
adc
xor
enter
sbb
nop
ins
and
nop
add
ins
mov
inc
push
outs
ins
dec
ins
sub
cmp
push
sahf
and
in
and
add
js
inc
ror
dec
shr
rcl
shl
addr16
mov
xchg
mov
inc
test
cwde
cld
lea
test
or
inc
retf
imul
xchg
xlat
fdivr
addr16
lods
mov
popf
loop
iret
inc
ins
pop
add
mov
movs
cmp
add
inc
test
dec
call
jge
pop
sbb
outs
dec
xchg
fs
test
sbb
sahf
retf
fist
dec
test
inc
clc
sbb
fs
jb
xor
bswap
cmp
nop
cmp
popa
les
(bad)
adc
outs
addr16
xchg
inc
and
dec
and
cmp
in
das
xor
loope
adc
clc
dec
popf
jecxz
add
and
jns
and
sub
dec
mov
pop
jle
dec
add
mov
xchg
das
mov
adc
rcr
jl
in
jo
icebp
nop
jbe
fiadd
pushf
cmps
sbb
xor
fld
daa
jbe
xlat
inc
mov
inc
add
out
cmp
jne
bnd
dec
pop
outs
xchg
cmp
and
cmc
xchg
or
cmp
nop
sti
sub
or
sbb
das
cmp
mov
xchg
jb
popa
(bad)
(bad)
jmp
lods
in
add
(bad)
into
mov
or
mov
(bad)
fucomip
push
sbb
mov
adc
popa
cmps
jno
xor
cmp
pusha
out
es
dec
(bad)
push
ins
ret
ja
loop
hlt
push
add
jnp
cmp
mov
ins
xor
ret
addr16
pop
call
sbb
(bad)
(bad)
(bad)
dec
pusha
fs
fsub
addr16
inc
mov
add
cmp
sar
dec
push
sbb
fcomp
mov
in
push
aas
nop
inc
lods
cs
imul
add
push
ret
mov
neg
sbb
shl
(bad)
cs
addr16
cwde
mov
psubq
fiadd
gs
rcr
pusha
jno
ds
mov
pop
adc
jmp
mov
or
pop
enter
push
imul
cmp
add
push
stc
xchg
xor
mov
cmp
cmp
int
mov
jmp
lods
jbe
adc
aaa
out
or
fsub
enter
(bad)
fbstp
xor
sub
push
fwait
outs
sub
inc
pop
ffreep
mov
xor
ss
cwde
cli
ret
loopne
or
jle
mov
xchg
(bad)
cmp
mov
jno
fisubr
mov
cli
test
repnz
jg
jo
ins
popf
mov
xlat
into
sbb
inc
mov
xlat
int
in
fisttp
jp
sbb
arpl
push
outs
mov
mov
mov
(bad)
cmps
ds
push
enter
push
ret
pop
stc
aaa
into
adc
add
je
jae
fwait
adc
lahf
(bad)
outs
test
gs
movs
or
scas
mov
(bad)
mov
icebp
mul
call
adc
enterw
cld
mov
and
adc
in
enter
into
dec
lds
cmp
ss
push
cwde
outs
bndstx
jae
loope
add
push
ret
jne
loop
push
jmp
push
loopne
(bad)
ss
push
ins
jl
(bad)
jg
mov
aas
mov
ret
sbb
add
movs
xchg
lock
call
cld
cmp
cld
add
ds
or
inc
sbb
add
inc
dec
sbb
mov
dec
std
push
xchg
aas
lods
push
sbb
ret
fs
in
pop
dec
std
ret
push
mov
leave
das
add
add
mov
loop
ret
cmp
mov
jp
jo
cwde
ret
or
or
adc
popa
enter
cmc
gs
ja
add
into
or
adc
jne
into
xchg
outs
ins
(bad)
icebp
mov
jmp
(bad)
std
xor
ins
dec
sub
push
xchg
push
(bad)
aas
jp
mov
pop
dec
daa
cmp
test
rcl
sbb
inc
push
int3
dec
or
dec
leave
sbb
cpuid
pusha
push
mov
fwait
xchg
cmp
push
cmp
ins
inc
xchg
xlat
in
ret
iret
inc
(bad)
adc
fs
loope
retf
xchg
imul
outs
add
inc
sub
ret
in
cmp
imul
jl
es
fisub
xor
fsub
cs
pop
mov
loope
scas
jmp
adc
xor
idiv
mov
imul
and
outs
add
pusha
leave
sbb
push
cld
push
or
cld
scas
inc
xor
ds
xor
jle
icebp
jmp
pop
jbe
in
std
mov
mov
outs
jo
or
pusha
stc
cmps
push
in
fidivr
ins
push
pushw
jmp
iret
mov
sbb
lods
pop
mov
fs
jb
out
jo
jbe
push
out
out
mov
jb
fs
jle
sbb
mov
push
ins
ss
int
or
add
fstp
ins
mov
jge
push
call
(bad)
ins
cmps
pushw
sub
mov
ins
jmp
ficom
test
(bad)
pusha
xchg
inc
cs
dec
cmps
jp
xchg
adc
push
mov
loop
jbe
cmp
or
cmp
movs
lods
adc
jp
mov
ins
mov
push
jmp
or
lods
sbb
mov
fs
ss
(bad)
xor
jo
push
outs
pop
data16
gs
cmp
mov
ds
call
mov
jge
icebp
adc
adc
daa
fwait
in
repz
mov
add
mov
(bad)
and
popa
sub
mov
outs
data16
cmps
(bad)
mov
ss
iret
repz
fdivrp
push
jmp
std
loope
enter
fsub
fst
mov
dec
jns
imul
push
mov
in
mov
xchg
mov
cmp
mov
div
xchg
dec
(bad)
push
push
shl
pop
out
cmp
mov
movs
inc
leave
jg
push
data16
test
adc
stc
outs
fldcw
push
pop
push
push
add
add
sub
and
(bad)
ss
xor
ins
lahf
adc
es
sbb
push
ins
push
pop
sar
xchg
jne
jmp
cdq
mov
or
aas
out
push
add
push
ds
test
fadd
pop
push
fstp
jo
jo
aad
cmp
fstp
xchg
pop
in
jg
hlt
cs
or
cmp
mov
ja
loop
outs
in
and
ins
push
cmc
scas
cwde
call
cwde
sbb
outs
xchg
dec
out
mov
cld
out
mov
push
mov
imul
xor
add
repnz
fs
sahf
inc
imul
arpl
int
push
pop
cld
scas
cmps
into
xor
enter
imul
clc
and
push
ins
imul
repnz
cwde
add
inc
iret
and
add
(bad)
stos
adc
mov
jp
add
js
into
push
(bad)
aas
sar
imul
ja
jg
mov
cwde
sbb
movs
push
ror
retf
ins
out
mov
push
es
adc
pop
push
xchg
mov
ss
push
adc
enter
mov
add
cmp
movs
cmp
xor
add
data16
dec
jp
pop
push
jno
pusha
inc
inc
jecxz
cmc
lods
pop
iret
or
and
mov
and
and
inc
cmp
ds
pop
fld
jns
movs
jp
mov
push
dec
sbb
and
loop
movzx
and
jle
lds
xor
mov
mov
jne
or
add
cmc
cmps
cld
scas
hlt
sub
mov
or
jge
in
xor
fmul
xlat
cmp
dec
mov
(bad)
loope
enter
lods
test
outs
sub
icebp
out
and
xchg
imul
lods
mov
jo
or
inc
cs
xor
jle
or
retf
clc
popa
inc
mov
or
(bad)
jecxz
inc
in
xor
add
iret
test
adc
call
jmp
ja
call
sub
mov
scas
mov
jo
(bad)
ins
ret
js
mov
pop
jmp
dec
xchg
fbld
jb
es
inc
test
(bad)
call
mov
scas
push
out
lea
(bad)
fstp
scas
xchg
shl
icebp
cs
scas
and
outs
fcmovnb
mov
loope
jge
lock
ins
mov
push
cld
adc
std
(bad)
jmp
std
cli
sbb
add
fild
dec
mov
in
jg
add
jg
push
std
dec
dec
inc
pop
cdq
loope
cmp
inc
inc
xlat
movs
and
lock
(bad)
push
test
inc
sbb
sti
sti
cmp
push
push
mov
sub
out
out
fisttp
(bad)
jmp
es
inc
loop
push
in
lock
jmp
or
sbb
dec
dec
and
je
(bad)
fistp
ss
push
call
sub
dec
mov
icebp
push
and
cmps
sti
cmp
in
dec
lock
push
push
mov
push
das
lods
ss
mov
fstp
inc
les
test
fist
sub
jle
or
pop
sbb
and
bound
int3
sub
dec
dec
retf
enter
xchg
test
lock
mov
je
xor
add
js
cmps
or
test
test
imul
jl
add
call
jmp
call
(bad)
aam
(bad)
imul
fild
jno
clc
mov
jno
(bad)
mov
jmp
mov
inc
aam
ja
inc
push
enter
js
fst
inc
in
jns
fdivr
imul
dec
adc
cmovg
lods
inc
in
xor
test
movs
leave
mov
xchg
push
bound
and
in
(bad)
shl
pop
mov
jl
pop
inc
pusha
cmp
push
xor
fs
fucomip
mov
ins
lods
mov
sub
add
inc
loop
or
jmp
mov
mov
in
fnsave
ja
loop
js
dec
jb
inc
shr
arpl
cwde
pop
sub
(bad)
rcl
daa
js
je
or
jmp
das
cmp
packsswb
fidiv
data16
and
mov
je
xor
out
sbb
mov
rcl
gs
mov
mov
aad
into
mov
mov
xchg
inc
fcom
jle
aas
mov
ds
call
sar
test
xchg
fmul
movs
dec
xor
out
shl
lods
(bad)
imul
push
mov
aam
(bad)
push
movs
pusha
nop
je
call
into
lods
jb
and
xor
repnz
pop
push
sub
scas
adc
xor
test
in
pop
(bad)
cld
mov
xor
dec
adc
add
adc
xor
jo
push
test
into
xor
jno
cmc
jno
stos
aam
and
mov
arpl
fimul
clc
lods
(bad)
push
dec
cwde
js
movs
cmp
jl
adc
loope
dec
mov
mov
xchg
and
and
pop
inc
jno
or
test
lock
mov
add
push
loope
sub
jg
lods
fldcw
adc
dec
xchg
and
sar
retf
add
jp
int3
jecxz
or
mov
in
scas
pop
aad
sub
fldenv
das
dec
push
stos
mov
cmp
aas
push
mov
ret
push
mov
mov
nop
sub
dec
add
in
or
mov
cmc
sbb
mov
cmp
aaa
enter
gs
out
nop
retf
int
call
(bad)
mov
aas
ror
daa
push
adc
mov
sti
leave
push
sahf
mov
ror
mov
loope
inc
push
jmp
xor
xor
ret
fs
out
mov
stos
pusha
int
jmp
and
dec
shr
sub
or
mov
pop
and
stc
stc
ds
pop
cmp
ds
cs
rol
es
mov
push
loop
xor
and
jg
and
dec
rcr
pop
adc
pop
outs
cwde
inc
sti
push
or
aaa
cmp
cmp
cmp
sub
add
mul
inc
jmp
int3
(bad)
in
adc
les
inc
xchg
cmp
mov
stc
push
jmp
mov
(bad)
push
cmp
cmp
jb
inc
adc
ror
add
sub
scas
out
inc
sub
imul
outs
movs
aas
jmp
in
mov
aas
inc
nop
outs
or
test
mov
enter
sub
stos
push
and
js
loope
hlt
adc
dec
pop
test
inc
cmc
jo
add
stos
sub
pushw
and
mov
test
jmp
cmp
mov
or
nop
imul
and
xor
cs
cs
dec
push
imul
pop
jle
jnp
or
push
test
xchg
inc
call
and
enter
cmp
cmp
movs
pop
shl
add
inc
outs
arpl
leave
adc
inc
mov
pop
xchg
sbb
jg
mov
dec
out
mov
enter
cwde
xor
leave
sub
pop
and
dec
inc
sbb
test
pop
aaa
clc
ins
dec
and
shl
fisttp
int
dec
scas
fcmovnbe
sub
int
inc
adc
mov
xor
int
jbe
ret
sbb
cli
daa
pop
pop
add
lods
push
pop
push
adc
sub
dec
in
push
fmul
mov
inc
leave
in
outs
scas
mov
mov
scas
movs
cmp
adc
fstp
and
shl
push
outs
retf
fwait
bound
mov
pop
inc
mov
loope
xlat
dec
add
rcl
add
imul
dec
aam
push
(bad)
mov
add
inc
inc
retf
(bad)
mov
stc
adc
out
arpl
je
test
stc
mov
xchg
daa
bound
jmp
cmps
dec
sti
sub
sbb
and
test
push
jge
and
xchg
es
pop
dec
dec
inc
jmp
mov
inc
inc
push
push
push
push
pop
sub
push
adc
xor
push
js
jne
push
sbb
mov
sub
cmp
cmp
cmp
cmp
adc
add
inc
test
xchg
dec
pop
cdq
js
inc
inc
push
push
pop
dec
inc
push
inc
in
dec
inc
pusha
pop
(bad)
call
dec
pop
pop
push
push
push
outs
jns
jp
imul
ja
arpl
(bad)
(bad)
xor
gs
fs
aas
cmp
aas
cld
cmp
xor
inc
push
(bad)
sub
sbb
xchg
icebp
in
into
imul
enter
fmul
jecxz
addr16
daa
jl
mov
add
pop
clc
push
jns
dec
pop
push
mov
(bad)
aaa
enter
popf
dec
add
xchg
mov
out
dec
cmp
dec
les
call
dec
loopne
aam
inc
sahf
stos
dec
inc
sbb
pusha
mov
jns
xor
adc
mov
mov
clc
outs
pop
jb
outs
in
rol
mov
sbb
fadd
adc
push
cmp
stc
xor
pop
xor
mov
pop
(bad)
shl
push
sub
pop
cmp
sbb
(bad)
or
ret
dec
xchg
push
sub
je
pop
sahf
dec
sub
mov
mov
jb
movs
call
push
mov
dec
xchg
retf
enter
ins
mov
push
outs
cmp
pop
loope
fs
dec
adc
pop
in
movs
mov
les
push
inc
inc
or
pop
dec
mov
dec
out
mov
mov
mov
repnz
rol
test
and
dec
(bad)
fcomp
inc
cld
jl
fistp
mov
loop
pop
mov
int
mov
shl
mov
xchg
mov
test
xchg
cs
xchg
retf
data16
inc
data16
stc
push
gs
and
movs
popf
iret
cmp
mov
xchg
retf
enter
jns
jle
(bad)
push
adc
aad
jp
mov
and
mov
xchg
out
adc
add
dec
test
pop
cmp
call
cmps
jb
add
lock
add
jle
mov
adc
jmp
pop
pop
and
(bad)
cmp
jecxz
call
xlat
jp
dec
popf
mov
repz
lods
pop
cs
xchg
pop
sub
pop
dec
fucom
jbe
xchg
dec
arpl
xor
hlt
adc
in
fs
push
inc
pop
or
xchg
dec
inc
inc
inc
lock
xor
mov
mov
pop
aad
mov
je
cmp
and
adc
test
sub
js
aaa
aam
(bad)
(bad)
les
adc
xlat
je
cmp
aas
xchg
xchg
and
ret
in
mov
adc
dec
gs
adc
add
xchg
or
ja
daa
mov
mov
mov
aas
pop
es
push
push
pop
inc
lock
pop
adc
push
jno
pop
mov
call
ret
xchg
mov
mov
stc
push
call
jnp
enter
outs
jg
jae
retf
in
mov
(bad)
push
push
fst
test
xchg
outs
mov
repnz
cmp
movs
push
and
add
cmp
jno
push
call
mov
mov
xor
aad
sub
enter
xor
xor
mov
fst
or
push
sbb
dec
movs
mov
xor
lock
retf
in
sub
in
rol
in
fld
adc
fdiv
mov
pop
(bad)
dec
(bad)
dec
mov
push
repnz
jbe
in
mov
popa
(bad)
adc
stc
push
adc
clc
xor
movs
jb
xor
gs
stc
push
aam
and
sub
loop
jo
aaa
loop
xor
jp
dec
in
repnz
inc
fsubr
xor
retf
sbb
into
std
movs
fdiv
mov
push
mov
mov
jl
fimul
stos
dec
sub
xchg
ds
std
popa
and
xor
in
mov
mov
lods
pop
mov
jmp
xor
mov
(bad)
push
into
add
pop
mov
jb
mov
xor
xor
daa
mov
cmps
pop
push
xchg
mov
push
adc
cdq
enter
pop
inc
ret
mov
cmps
or
mov
inc
and
sbb
repnz
add
scas
lods
sub
jecxz
pop
push
scas
xor
ja
icebp
mov
imul
mov
out
iret
pop
mov
push
enter
outs
adc
sub
lock
cmp
xchg
retf
sbb
dec
je
out
sbb
dec
cs
push
or
jl
loop
sub
add
in
inc
outs
iret
lahf
pop
mov
nop
sbb
push
cmp
ret
sub
pop
icebp
dec
xchg
inc
pushf
mov
(bad)
xchg
pop
(bad)
dec
push
push
mov
cmp
and
out
push
nop
pop
nop
lds
xadd
xor
mov
inc
push
mov
les
bnd
jne
cmc
enterw
or
or
ins
xchg
mov
xchg
dec
xor
or
sbb
test
sbb
mov
test
pop
fisttp
xlat
mov
mov
add
jge
jnp
sbb
aad
arpl
sbb
shl
fadd
inc
push
ss
or
dec
and
out
mov
cmc
out
mov
repz
sbb
test
dec
rol
inc
rcl
in
div
add
mov
outs
jmp
fsub
mov
jnp
add
das
sub
icebp
mov
imul
xor
stc
arpl
pop
outs
retf
push
and
pop
add
xor
movs
repnz
aas
cld
ins
in
mov
xchg
clc
jge
inc
inc
lods
repz
data16
inc
pop
nop
int
rcr
pop
adc
repnz
pop
adc
cmp
fwait
sbb
mov
push
int3
add
jno
lea
icebp
cmp
inc
mov
jl
mov
call
cmp
fisttp
mov
loop
jo
retf
sbb
scas
mov
out
scas
adc
inc
xchg
adc
das
dec
jmp
push
fisttp
loop
mov
cld
sbb
adc
stc
sti
sbb
popa
xchg
test
mov
scas
dec
fist
js
inc
dec
add
rol
cmps
daa
nop
or
pop
add
mov
inc
retf
lahf
pop
test
pop
and
repnz
sbb
nop
aaa
adc
pop
sub
lds
js
movs
mov
pop
in
jle
mov
mov
jmp
shl
jmp
lods
rol
pop
sbb
adc
pshufw
or
and
std
dec
adc
inc
adc
add
scas
push
test
stos
imul
in
sub
inc
test
bound
mov
mov
xor
aam
addr16
add
add
sbb
jl
mov
mov
fs
mov
fs
test
inc
and
fild
cmp
lahf
pop
loope
in
imul
(bad)
and
clc
inc
pop
mov
jp
pop
mov
arpl
cwde
nop
ss
adc
rol
pcmpeqw
mov
mov
or
jg
popf
std
mov
mov
pop
shr
xchg
ret
sbb
rcr
push
cmp
and
(bad)
push
dec
dec
or
in
sti
push
push
popa
ror
jl
stos
cld
inc
xor
adc
xor
jae
jo
xor
push
inc
icebp
dec
(bad)
jg
mov
mov
push
mov
inc
pop
and
or
enter
ja
pop
inc
pop
push
out
inc
ud2
mov
fmul
mov
shl
adc
xchg
sub
dec
push
repz
sub
dec
gs
out
scas
xchg
inc
cmp
and
pop
arpl
repz
outs
and
std
adc
retf
imul
lock
cmps
fsub
jnp
xor
idiv
popa
inc
out
ins
pop
aad
adc
sbb
sbb
test
jmp
jno
xchg
out
pop
dec
int
jg
sub
imul
xor
add
push
into
pop
jg
lock
lock
shr
ins
mov
stc
outs
jae
lahf
(bad)
push
mov
push
shl
sub
in
scas
sub
jne
xchg
test
je
jno
jne
sub
clc
pop
jb
sub
mov
fld
out
jns
arpl
jbe
and
xor
loope
and
sub
sub
adc
adc
(bad)
sbb
and
(bad)
stc
mov
push
loop
or
test
stc
in
adc
adc
aad
push
test
loopne
sahf
xchg
dec
sub
dec
cmps
push
test
into
out
sub
push
jns
popa
push
retf
mov
cld
xchg
outs
inc
into
arpl
lods
cmp
mov
push
bound
mov
fldcw
xchg
or
jge
push
sbb
imul
push
idiv
push
loopne
sub
je
inc
push
stc
cmp
call
retf
inc
pop
mov
dec
in
mov
aaa
add
sub
inc
ret
fld
dec
rcr
mul
(bad)
fnstsw
cmp
repnz
inc
fst
mov
jb
retf
or
xor
or
aaa
mov
clc
mov
mov
call
aam
dec
shl
gs
push
loope
push
rol
fdiv
mov
cmp
jnp
add
jns
push
ret
push
retf
movs
rcr
jl
stc
jg
push
fwait
mov
mov
mov
xchg
and
push
fwait
push
adc
bnd
inc
jns
cs
mov
push
jg
cmp
xchg
inc
out
cmp
sub
mov
retf
sbb
stc
aaa
enter
push
out
mov
inc
mov
add
imul
fist
mov
clc
sbb
or
push
inc
pop
push
stc
xor
sub
stos
push
mov
push
adc
jg
jae
pop
(bad)
inc
dec
fist
ret
outs
add
or
mov
movs
push
scas
add
add
cmp
pop
fs
sub
adc
fild
cmp
jno
mov
iret
fild
or
xchg
jb
and
pop
gs
and
fs
jae
sub
inc
inc
mov
push
add
retf
in
dec
or
pop
dec
push
cs
stos
inc
adc
jb
mov
inc
ja
dec
gs
pandn
dec
cmp
outs
cmp
sbb
aam
retf
pop
pusha
idiv
jnp
sbb
sub
pusha
loope
or
stc
es
adc
inc
mov
mov
adc
xchg
add
pushf
or
fild
data16
pop
mov
jns
and
sub
and
mov
es
loop
mov
mov
in
mov
in
push
cmp
or
movs
sub
sub
ud2
pushf
inc
stc
add
repz
fisttp
pop
jbe
retf
mov
add
jl
xchg
inc
xor
test
lods
outs
xor
or
mov
sub
ins
mov
cmp
xchg
inc
aaa
loope
sub
test
and
xchg
inc
and
fcomp
aam
and
std
cmp
sub
xchg
retf
pop
fsub
xchg
adc
(bad)
xor
cs
test
in
ja
out
xchg
dec
in
or
cs
mov
jl
retf
leave
retf
mov
and
stc
or
test
xchg
cmp
jb
mov
jg
sti
xchg
retf
adc
and
dec
in
outs
in
rcr
and
adc
xchg
ds
mov
or
sbb
retf
xchg
scas
xchg
xchg
cmp
sub
cmp
xchg
retf
pop
stos
cmp
xor
nop
das
xor
(bad)
adc
jb
jae
and
call
dec
aas
cmp
in
iret
int
aas
jno
cmp
and
pop
dec
int
aas
pop
or
cmp
retf
jg
push
int
cmp
jns
xchg
xchg
xchg
xchg
xchg
mov
push
xor
jb
cmp
mov
push
bnd
adc
mov
dec
inc
pop
cmp
cmp
fs
ins
mov
sub
push
mov
cmp
pop
cmp
and
dec
aaa
sbb
cmp
mov
into
ds
xchg
ret
xchg
xchg
pop
mov
and
cld
neg
ss
mov
xlat
clc
sub
cmp
movs
cmps
rcr
aad
fisttp
stc
jg
ins
sbb
ja
sbb
in
das
out
cmp
ds
lock
push
retf
add
cmp
or
or
xchg
out
push
sub
jbe
popf
dec
jb
pop
jge
outs
xor
pop
inc
sbb
xor
cmp
xlat
xlat
out
or
int3
push
xor
out
or
int3
arpl
lea
repnz
and
data16
mov
push
cmp
push
push
mov
mov
sti
push
es
push
mov
pop
push
pop
aam
xor
int
xchg
clc
push
jns
and
xor
sti
inc
fs
jb
out
mov
or
movs
push
out
stc
cmp
les
jle
mov
dec
out
inc
imul
push
out
mov
nop
adc
ds
aaa
cmps
ret
push
pusha
fst
(bad)
(bad)
fdivr
jns
sub
daa
sbb
jp
ins
jne
jp
push
adc
sbb
test
icebp
jecxz
adc
add
ins
outs
arpl
ss
add
sub
data16
(bad)
(bad)
fnstenv
std
jge
call
and
fiadd
dec
test
adc
push
jo
adc
ins
dec
fiadd
push
adc
push
inc
das
movs
push
dec
cmp
paddsw
rol
adc
push
dec
adc
push
aaa
inc
repz
repz
pop
jns
mov
out
idiv
out
sahf
and
inc
push
jno
jns
out
xchg
jl
out
mov
or
iret
repz
adc
jns
call
out
movs
mov
pop
adc
sahf
out
xor
out
sahf
out
in
stc
mov
sahf
clc
cld
es
push
inc
dec
out
sahf
out
jb
mov
sahf
(bad)
xchg
in
inc
pop
push
push
out
sahf
out
jb
scas
jg
out
sahf
out
movs
clc
in
pop
pop
cmp
repz
inc
dec
pop
data16
repz
out
call
dec
ja
(bad)
push
aaa
push
sahf
out
sahf
inc
dec
pop
imul
in
out
test
add
cmp
out
inc
dec
jno
scas
out
sahf
out
in
mul
sahf
movs
clc
mov
out
sahf
ja
and
adc
sahf
out
sahf
push
push
jno
mov
jns
call
ja
out
in
sub
pop
aaa
jns
out
inc
push
dec
dec
jno
jns
out
lods
in
idiv
jns
stc
mov
dec
push
push
jno
jns
out
jg
mov
jbe
dec
test
pop
add
inc
mov
fdivr
jle
inc
fisubr
mov
and
inc
add
push
jg
call
add
cs
sahf
out
mov
push
jns
out
dec
mov
sbb
sub
mov
test
lods
or
jns
jnp
push
mov
ss
mov
iret
xor
xchg
pop
inc
pop
femms
cld
inc
les
ss
mov
jnp
mov
xor
jl
sub
rcl
cmp
test
mov
dec
push
inc
cs
aam
or
jnp
add
and
scas
fist
pushw
out
out
adc
cmp
(bad)
movs
adc
out
sahf
call
adc
cmp
stc
push
scas
adc
mov
jnp
imul
adc
cmp
sar
and
xchg
mov
out
lock
inc
in
jb
idiv
cs
push
sahf
out
out
mov
push
sahf
out
push
stc
aaa
sub
push
cs
pop
mov
data16
lds
xchg
lods
sub
xchg
xchg
adc
dec
dec
repz
mov
sar
(bad)
mul
repz
xchg
mov
lock
rcl
aam
sub
test
jnp
sti
into
gs
loop
jle
push
out
repnz
push
out
(bad)
out
jle
inc
ss
out
adc
push
push
push
adc
ds
add
mov
ss
mov
in
pop
femms
or
mov
sahf
jnp
pop
pop
push
mov
repnz
sahf
mov
sub
dec
movs
mov
push
inc
dec
iret
movd
adc
out
ds
sub
push
cmp
pusha
aaa
add
jns
mov
pop
dec
repz
xor
xor
or
jae
iret
test
test
imul
jae
pusha
sahf
in
jno
ins
sahf
out
fidiv
mov
cmp
sar
and
cmp
repz
ins
or
iret
call
out
jge
and
push
push
xor
inc
dec
cmp
xchg
imul
push
mov
ss
and
cmp
repz
push
xor
dec
dec
jns
mov
aas
test
es
idiv
jno
jns
sbb
js
jo
data16
mov
inc
cmp
bound
jne
push
js
aad
sub
inc
imul
push
fucomi
pop
imul
ins
imul
data16
ror
pop
xor
outs
fwait
stc
js
push
outs
jo
push
imul
sub
jno
out
imul
imul
jns
inc
ins
data16
sar
sub
adc
fidiv
mov
jl
je
inc
and
jbe
add
dec
sar
ficomp
xor
mov
dec
mov
not
dec
push
bound
jbe
mov
dec
push
imul
imul
aad
mov
fnstenv
cmp
addr16
xchg
fdiv
inc
add
jno
jnp
sub
pop
ss
js
loopne
mov
jno
ins
jb
hlt
push
xor
clc
ja
inc
jne
cmp
cmp
jb
jae
js
test
ins
inc
fiadd
pop
jbe
push
mov
and
push
mov
loopne
add
push
data16
ins
jbe
mov
sbb
gs
sub
pop
adc
jns
hlt
or
dec
(bad)
adc
or
add
ret
adc
in
lds
jp
ficomp
push
inc
jno
jo
je
pop
pop
and
jno
js
inc
mov
push
push
sub
test
or
xor
jge
cmp
mov
push
xor
je
xchg
sub
add
dec
add
outs
jne
das
or
outs
(bad)
xchg
mov
adc
cmp
push
(bad)
(bad)
(bad)
push
push
xor
jo
ins
xor
mov
int
shl
xor
push
(bad)
ret
xor
xor
cmp
dec
ss
ss
ss
ss
(bad)
cmp
ss
lods
xchg
movs
sbb
push
xor
aaa
imul
aaa
adc
push
push
xor
in
hlt
xor
xor
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
(bad)
(bad)
(bad)
jmp
lahf
cmp
cmp
cmp
repnz
cmp
cmp
cmp
(bad)
(bad)
(bad)
inc
cmp
cmp
cmp
push
cmp
cmp
mov
scas
cmp
cmp
cmp
cmp
cmp
mov
arpl
cmp
sbb
add
outs
cmp
cmp
cmp
cmp
(bad)
(bad)
jmp
cmp
aas
leave
aas
jecxz
cld
aas
adc
imul
cmp
cmp
cmp
(bad)
(bad)
dec
cmp
cmp
sar
cmp
cld
cmp
jmp
or
push
dec
loope
push
shr
xor
div
fimul
push
adc
xor
jno
popa
ss
std
outs
jg
into
shl
les
loop
cld
xor
popa
xor
xchg
lds
pop
or
(bad)
(bad)
fcomip
pop
sbb
xor
push
xor
inc
xor
xor
xor
aaa
adc
call
aaa
mov
xor
aaa
xchg
aaa
fidiv
shl
and
sub
clc
inc
xchg
xor
fnstenv
cmp
jmp
(bad)
dec
cmp
cmp
cmp
sbb
sbb
add
inc
cmp
popa
cmp
cmp
cmp
cmp
cmp
(bad)
inc
(bad)
aas
xchg
call
cmp
xchg
cmp
and
cli
cmp
jg
or
fimul
bound
pushf
sahf
and
inc
(bad)
push
arpl
imul
ins
ss
ss
out
fbstp
in
call
add
ret
and
pop
xor
push
mov
aam
xchg
xchg
xor
xor
cmp
or
sub
xor
xor
fdivr
jg
lock
or
jne
mov
cmp
mov
(bad)
jg
xchg
clc
(bad)
sahf
xor
cmp
inc
xor
jo
mov
push
(bad)
mov
hlt
xor
xor
xor
xor
xchg
cmp
cmp
inc
xor
or
(bad)
call
ja
jb
ins
xor
xor
mov
jle
test
icebp
pop
adc
ds
inc
aaa
(bad)
(bad)
(bad)
dec
bound
outs
aaa
lods
aaa
xchg
in
lea
out
aaa
fdiv
cmps
aaa
into
aaa
push
push
xor
xor
xor
inc
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shl
or
adc
bound
jne
jae
xchg
test
scas
aas
in
jle
std
dec
idiv
xlat
aas
or
cmp
cmp
(bad)
(bad)
js
lock
jno
cmp
cmp
cmp
inc
cmp
cmp
jbe
out
jl
xchg
retf
loope
imul
ss
xor
inc
pop
(bad)
jg
mov
jmp
or
xor
push
xor
xor
jbe
xor
inc
mov
xor
aaa
xor
aaa
shl
(bad)
(bad)
(bad)
jmp
aaa
int3
aaa
sub
wrmsr
daa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
(bad)
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
aas
ds
sar
(bad)
ds
ds
ds
into
ds
cmp
jmp
call
cmp
cmp
cmp
cmp
aas
ins
aas
lds
fdivr
mov
cmp
cmp
sar
stos
jae
xchg
cmp
push
xchg
mov
dec
pop
mov
xor
enter
ret
xor
dec
xor
pop
xor
clc
xor
xor
xor
push
cmp
je
jns
test
(bad)
aaa
aam
loop
adc
xchg
xor
jmp
xor
jno
test
(bad)
jmp
cmps
adc
xor
xor
xor
xor
cmp
cmp
(bad)
call
cmc
cmp
ins
cmp
cmp
cmp
cmp
cmp
and
inc
ds
ds
mov
scas
mov
inc
mov
cmp
aas
push
imul
xchg
fdivr
add
call
cmp
cmp
cmp
cmp
cmp
mov
dec
push
adc
xor
pop
mov
fwait
mov
retf
rcl
xor
and
adc
xchg
(bad)
repz
push
ss
lds
fwait
ss
pop
dec
dec
xor
xor
xor
xor
xor
xor
loopne
loop
es
push
retf
aaa
(bad)
aaa
xchg
aaa
sub
push
push
xor
xor
xchg
bound
add
test
xor
xor
lock
call
xor
xchg
add
cmp
cmp
cmp
xchg
stos
stos
dec
xchg
cmp
cmp
or
cmp
jp
outs
aas
std
mov
mov
aas
inc
cmp
out
push
cmp
leave
cmp
sub
xor
shl
ss
lock
cli
cmps
xor
cdq
sahf
(bad)
aaa
popf
pop
push
inc
xor
xor
or
rep
sub
push
(bad)
jb
jmp
(bad)
(bad)
(bad)
(bad)
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
sar
pop
cmp
cmp
cmp
dec
mov
lea
cmp
outs
ds
ds
push
cmp
mov
jl
hlt
cmp
fs
movs
aas
jnp
sub
sub
cmp
cmp
out
cmp
jmp
shl
xor
pop
sbb
push
xor
outs
(bad)
inc
push
out
mov
xor
sub
inc
aaa
dec
aaa
mov
jmp
call
xor
xor
cmp
cmp
dec
cmp
xchg
sar
cmp
cmp
jecxz
inc
cmp
mov
cmp
ds
ds
ds
cmp
aas
popf
aas
pop
hlt
pop
clc
jmp
ret
aas
dec
ficomp
stos
cmp
js
jecxz
mov
pop
xor
dec
push
xor
xor
aaa
adc
dec
aaa
fnsave
adc
or
push
xor
mov
call
xor
ds
xor
xor
cmp
out
(bad)
inc
cmp
cmp
cmp
daa
ds
cmp
push
aas
nop
push
add
or
inc
cs
jg
idiv
cmp
cmp
cmp
gs
cmp
scas
xor
mov
(bad)
push
ss
fdiv
hlt
ss
scas
cmp
shl
push
dec
xor
xor
out
xor
out
xchg
aaa
stc
aaa
test
hlt
aaa
cld
jbe
xor
enter
cli
cmps
cli
push
xor
fdiv
xor
xor
xor
xor
dec
cmp
outs
jp
ds
cmp
stos
jp
cmp
(bad)
jg
ds
ds
ds
cmp
aas
lods
cmp
(bad)
aas
(bad)
aas
dec
mov
xor
jg
mov
cmp
xor
repnz
cmp
dec
xor
xor
jl
push
jns
and
and
cmp
cmp
add
(bad)
push
aas
jp
mov
aas
enter
cmp
inc
cli
cs
cdq
mov
push
lahf
mov
add
pop
ss
ss
cmps
ss
(bad)
test
xor
mov
sahf
mov
shl
ret
ins
adc
daa
aaa
add
pop
aaa
fs
fdiv
mov
add
xor
xor
imul
xor
push
pop
(bad)
(bad)
(bad)
jg
push
xor
(bad)
xor
xor
xor
xor
xor
cmp
popa
cmp
cmp
cmp
dec
fs
dec
push
xchg
cmp
mov
or
cmp
bound
popa
aas
sahf
aas
cmp
aas
sbb
cmp
scas
cmp
and
cmp
leave
ja
pop
(bad)
stos
lock
xor
inc
add
ss
(bad)
lds
fnstenv
data16
clc
add
xchg
retf
or
dec
cmp
jg
(bad)
or
push
xor
fbstp
fidiv
or
cmps
lea
(bad)
inc
popf
and
xor
xor
xor
xor
xor
xor
fisubr
inc
loop
xchg
rol
les
sub
imul
(bad)
jmp
mov
push
cmp
cmp
cmp
cmp
cmp
ds
mov
aad
loope
pop
mov
cmp
cmp
cmps
ret
jno
aas
push
cld
aas
jb
in
aas
add
sar
cmp
push
sub
test
xor
shl
ins
xor
out
fist
(bad)
jg
(bad)
jmp
push
ss
ss
mov
shl
fdiv
mov
outs
push
xor
aam
dec
pop
rcl
loope
xor
xor
jmp
xor
xor
test
movs
push
iret
inc
pop
loopne
aaa
push
inc
aaa
mov
mov
xor
xchg
in
xor
xor
pop
xor
(bad)
jmp
mov
xor
xor
xor
xor
xor
xor
xor
scas
jle
repnz
stos
mov
les
xor
cmp
cmp
loopne
icebp
cmp
cmp
cmp
call
inc
rcr
cmp
call
out
xchg
cmp
cmp
cmp
cmp
cmp
ds
(bad)
(bad)
(bad)
(bad)
ds
ds
ds
ds
ds
and
add
sub
cmp
loope
icebp
cmp
cmp
jmp
push
aas
outs
cmp
pop
aas
gs
(bad)
call
mov
in
mov
aas
sar
in
and
sbb
xchg
cld
add
cmp
dec
mov
fild
cmp
gs
mov
out
jmp
out
cmp
cmp
ret
cs
outs
xchg
add
mov
loop
xor
mov
xor
aam
xchg
xor
mov
in
add
(bad)
cld
xor
or
sub
and
es
ror
out
add
adc
adc
xchg
mov
cmp
inc
ss
out
pop
ss
push
dec
(bad)
mov
mov
jb
ss
xor
sub
sub
push
in
sahf
jg
call
dec
pop
mov
ss
inc
test
ss
ss
ss
mov
mov
mov
jb
sub
jo
cs
and
es
adc
cmp
and
push
pop
xor
jno
imul
fisub
xor
cmp
xor
jbe
cld
cmc
push
and
jg
call
out
mov
add
fdiv
sub
(bad)
movs
adc
cmp
cli
loop
in
cld
sbb
xor
cmp
and
add
add
adc
adc
xor
retf
mov
push
xor
dec
aam
xor
not
hlt
out
ret
jb
xchg
clc
clc
fiadd
cmp
cmp
inc
aaa
inc
neg
jg
(bad)
cmp
dec
aaa
pop
aaa
pop
aaa
jno
imul
gs
mov
es
aaa
scas
sbb
aaa
xlat
rcr
mov
aaa
div
call
push
test
inc
movs
lea
push
and
dec
mov
mov
fsubp
mov
xor
jbe
and
sub
and
pop
xor
add
adc
pop
test
mov
xor
pop
rcl
(bad)
ds
out
jb
data16
mov
mov
fisubr
xor
push
shl
xor
xor
xor
xor
sbb
call
xor
xor
mov
mov
loop
in
cld
xor
xor
xor
xor
jne
shl
out
xor
(bad)
xor
xor
dec
push
pop
ins
aaa
xor
add
test
dec
push
xor
pop
xor
imul
jg
dec
data16
mov
xor
xor
test
xor
xor
call
and
xor
xor
xor
xor
scas
fild
loop
in
cld
xor
jg
sub
xor
xor
xor
xor
xor
xor
xor
xor
rol
xor
xor
xor
xor
cmps
pop
xor
movaps
xchg
inc
call
add
xchg
es
cmp
loopne
aas
jne
stc
outs
outs
lahf
imul
repz
neg
out
push
mov
sub
cld
push
jns
jp
xor
fs
sbb
stos
or
dec
pop
sbb
(bad)
inc
cmp
lahf
xor
cmps
add
sbb
loopne
dec
retf
outs
outs
push
js
aam
inc
push
or
sbb
add
mov
mov
outs
imul
js
fild
ins
je
inc
pop
jne
and
jns
jbe
inc
mov
gs
imul
dec
dec
mov
xchg
arpl
je
add
lods
fistp
push
ja
jns
(bad)
(bad)
dec
cs
and
push
adc
adc
and
or
sub
ins
dec
or
or
or
ds
fisubr
push
xor
sub
dec
xchg
int
mov
xor
sub
add
cs
adc
mov
mov
sbb
push
inc
xchg
sub
int3
ficomp
sub
dec
xor
int
or
adc
and
push
or
data16
fs
sub
add
inc
or
mov
cmp
fs
sbb
neg
jbe
sub
sbb
or
cs
add
inc
jo
sbb
xchg
popf
fstp
dec
push
out
jmp
aam
scas
and
jbe
in
pop
jmp
outs
cmp
and
dec
ds
iret
call
or
or
sbb
fmul
ret
push
add
mov
mov
and
(bad)
sub
push
xor
cmp
add
mov
imul
(bad)
or
push
ss
push
add
sbb
fimul
out
mov
loope
xor
js
(bad)
jg
xor
pop
es
and
cmp
push
and
cdq
(bad)
inc
fdiv
sub
inc
mov
or
lea
adc
inc
pusha
mov
push
mov
mov
dec
pusha
pop
call
xchg
mov
mov
out
push
popw
xor
jbe
sahf
sbb
adc
sbb
mov
(bad)
int3
jmp
sbb
in
mul
add
test
xchg
jmp
rcl
xchg
or
and
out
sbb
or
pop
addr16
push
push
ror
or
enter
cmp
cmp
jbe
fstp
pushw
push
pusha
ja
mov
mov
int3
fcmovu
loopne
xchg
push
hlt
mov
fs
sahf
adc
sbb
inc
sbb
push
inc
mov
sbb
add
outs
pop
cdq
or
jne
popa
aaa
cmp
sbb
dec
push
lock
popa
sbb
js
rol
pop
push
aam
adc
xchg
mov
jbe
mov
push
push
bound
rcl
push
add
leave
adc
pop
cmp
push
test
xchg
lock
add
iret
in
je
retf
jbe
sub
retf
fld
in
cmp
xor
(bad)
(bad)
scas
xchg
or
js
cmp
jge
inc
ja
mov
scas
xchg
fmul
sbb
fsub
xchg
arpl
(bad)
sub
cmps
cs
mov
pop
mov
rcr
int3
xor
mov
or
inc
xchg
div
sub
or
push
xor
es
out
xchg
or
xchg
inc
pop
push
pop
cmovge
adc
xchg
mov
pop
les
and
cmps
ret
leave
and
mov
in
mov
je
xor
bound
out
adc
push
ret
les
cwde
push
adc
dec
adc
popa
jbe
cs
fdivr
push
and
sub
sbb
loop
pop
push
ret
rol
mov
iret
into
dec
shl
aam
ins
pop
popf
sbb
sbb
sbb
or
jno
scas
in
ret
call
outs
mov
and
loopne
mov
pop
jno
popf
cdq
int
mov
movs
push
or
add
shl
push
call
push
add
xor
push
(bad)
xchg
fnstenv
jbe
iret
stos
xchg
fisttp
adc
cmp
enter
(bad)
nop
int3
dec
fisub
xchg
or
mov
int3
out
adc
xor
es
je
mov
fstp
adc
add
loopne
sub
and
add
or
sbb
outs
or
inc
pop
repz
mov
cs
xor
ret
mov
mov
adc
jl
leave
into
xlat
fnstenv
(bad)
clc
and
(bad)
xor
out
jle
mov
or
mov
test
adc
pusha
and
rol
(bad)
loop
bts
adc
mov
add
(bad)
(bad)
adc
dec
mov
add
xor
je
call
jnp
fs
cmps
or
and
or
mov
lds
mov
retf
cmp
xor
sub
xchg
cmp
lds
clc
call
out
in
or
(bad)
sti
dec
dec
dec
cmc
cmc
lods
data16
sbb
dec
dec
push
push
dec
push
push
push
dec
dec
push
dec
push
sbb
lods
imul
dec
inc
push
push
dec
push
push
cs
push
sbb
mov
mov
or
dec
cmp
dec
push
dec
dec
push
ds
push
in
jge
lods
or
sub
ins
push
push
(bad)
mov
jbe
sub
scas
push
adc
dec
push
jnp
data16
dec
stos
inc
ret
push
pop
cmp
xor
fs
lock
push
mov
in
call
push
add
test
imul
bound
push
dec
scas
push
jp
and
jnp
add
mov
mov
jae
daa
jl
dec
sbb
in
dec
mov
dec
or
dec
dec
cdq
mov
ffree
pushf
es
push
ret
fstp
push
int3
test
sbb
xor
xor
pop
dec
pusha
xlat
or
xor
mov
ss
cwde
dec
cmp
push
push
add
push
sbb
jo
inc
sbb
loope
jo
push
xchg
inc
mov
fisttp
stos
dec
addr16
cmp
jmp
jnp
pusha
cmp
push
dec
and
in
jno
xor
dec
mov
loopne
ins
and
dec
and
push
imul
dec
data16
pusha
pop
jae
xor
push
out
dec
mov
add
mov
loopne
add
or
push
outs
jno
xor
into
add
push
adc
ins
scas
pop
sub
ins
test
mov
int3
sbb
cmp
push
cmp
push
sbb
jmp
cmp
inc
jbe
fabs
into
and
repz
push
push
or
sbb
dec
rcl
ffree
pop
pop
lea
shl
cli
rcl
scas
push
ja
jp
scas
ficomp
push
hlt
mov
mov
sub
inc
cwde
cs
and
dec
mov
popa
cmps
popa
push
icebp
lods
xor
ror
cmp
push
jbe
sbb
pop
xor
cli
mov
xor
cli
xchg
test
fstp
ret
cdq
push
mov
bndstx
scas
xchg
jle
mov
test
push
push
js
mov
push
mov
push
push
addr16
xor
nop
sub
into
and
or
es
dec
cmp
leave
mov
int3
dec
pop
push
jbe
sbb
into
push
push
in
mov
or
cmp
out
sbb
add
jae
fisttp
(bad)
push
mov
push
sahf
imul
ret
js
jp
pop
sbb
and
js
sub
jle
dec
daa
dec
sbb
sbb
cmc
pop
sahf
mov
cdq
loope
add
xchg
ins
push
push
xor
mov
add
enter
clc
fsubrp
push
ja
sbb
add
sbb
or
dec
or
cmps
sbb
push
mov
fdiv
add
cmp
enter
out
adc
jmp
xchg
loopne
gs
inc
loope
retf
push
(bad)
dec
dec
inc
(bad)
mov
out
add
inc
mov
shl
cmp
lock
pusha
sbb
shl
loope
fs
adc
dec
dec
mov
loopne
lods
dec
bound
ins
and
push
xor
sub
call
mov
mov
aad
aad
int3
mov
mov
ss
push
jbe
push
fsubp
test
cmps
in
stos
(bad)
loope
daa
cld
stos
sub
cs
mov
lock
pop
mov
add
xor
push
jl
popf
sub
shl
xchg
mov
scas
xchg
sbb
dec
sub
loopne
cmp
jns
dec
aas
adc
cmp
xor
pop
test
dec
shl
pop
cmp
(bad)
push
dec
fdivr
push
mov
xor
mov
jl
push
enter
aaa
rol
ffree
shl
retf
sub
push
scas
loopne
sbb
loopne
push
add
stos
call
sbb
mov
dec
pop
leave
rol
sbb
inc
lock
into
jns
jne
or
or
or
cdq
mov
push
inc
ret
aas
aam
sbb
mov
mov
cmp
and
(bad)
jo
xchg
adc
ds
sar
inc
imul
or
push
mov
pop
mov
or
jl
imul
add
sub
ins
(bad)
xor
push
cld
or
cmp
lods
mov
push
in
mov
xor
lahf
out
push
pop
and
fcomp
repz
aas
jmp
add
pop
inc
add
add
out
(bad)
ficomp
push
sar
inc
add
js
and
inc
lods
movs
lahf
out
sahf
je
cmp
add
inc
sar
test
push
push
sbb
lahf
out
xor
or
push
ror
ds
jns
test
pusha
and
mov
push
cld
int3
push
les
push
pushf
dec
push
into
push
and
in
push
int
pushf
shl
jl
push
sbb
les
mov
rcl
mov
popf
cmps
sbb
pop
add
cld
sar
push
push
aam
nop
je
inc
add
(bad)
in
into
ins
int3
cmp
hlt
aaa
test
nop
scas
mov
push
mov
(bad)
sti
dec
mov
sub
(bad)
push
add
and
or
adc
pop
jmp
cmp
mov
or
out
add
mov
xor
mov
xlat
sbb
push
add
pop
dec
call
fldenv
js
clc
and
xlat
iret
enter
fcomp
fxch
fmul
leave
mov
loopne
jecxz
in
pop
sub
std
aas
xchg
outs
je
ins
and
and
popa
je
xor
lods
aaa
xor
mov
fs
maxps
mov
add
sbb
movs
push
push
adc
mov
fdiv
in
adc
popf
outs
lock
adc
aaa
xchg
mov
adc
and
push
mov
adc
or
aas
inc
cmp
sub
sub
xor
cmp
cmp
repz
push
pop
fs
repz
repz
test
pushf
movs
lods
mov
les
repz
aam
in
jns
iret
repz
cld
add
or
out
sahf
out
and
xor
mov
dec
push
add
jb
add
fs
gs
sbb
xadd
jo
and
inc
sahf
pushf
mov
jb
jae
mov
and
lods
xchg
mov
mov
invd
jne
mov
or
xchg
les
rcr
and
mov
xchg
clts
stc
cmp
push
adc
adc
adc
out
lock
(bad)
int3
stc
mov
add
jns
out
adc
xor
jns
out
js
cwde
test
out
sahf
mov
or
jnp
in
xor
call
jbe
xchg
fcmove
je
test
xchg
add
cmp
pop
pop
jmp
fsubr
bound
mov
mov
or
mov
cli
xchg
pop
jo
popaw
push
mov
fnstsw
int3
push
adc
pop
push
lock
mov
push
adc
and
dec
addr16
push
xor
add
shl
adc
aas
adc
(bad)
js
pop
(bad)
sahf
and
add
push
sar
cmps
retf
call
ror
cld
mov
mov
add
out
cmp
add
jns
out
adc
sahf
out
sahf
lods
adc
or
add
lock
and
sbb
mov
out
push
adc
push
out
sahf
out
sbb
sahf
add
dec
repz
add
add
push
clc
cmp
repz
jns
repz
push
adc
out
movs
add
jnp
int3
or
pop
add
push
add
add
sahf
out
mov
repz
out
or
cmp
cmp
push
mov
mov
iret
repz
mov
cmp
repz
out
in
or
es
mov
add
add
out
push
lods
cmp
or
or
push
xlat
sub
fimul
bound
ret
add
lods
xor
adc
pop
(bad)
in
sbb
out
or
mov
out
ins
xchg
in
mov
add
jg
repz
cmp
ss
mov
mov
aam
lock
test
data16
sbb
jns
out
xor
inc
dec
push
lds
mov
pop
sub
pop
adc
fadd
(bad)
pusha
pop
sbb
and
out
fmul
div
jb
cmp
or
jb
jb
unpcklps
adc
xor
cmp
cmp
adc
cmp
cmp
pop
add
fild
xor
rcl
xchg
push
add
iret
mov
push
mov
lods
repz
repz
call
push
hlt
add
xchg
ins
sbb
loopne
in
pusha
imul
movs
dec
cs
fs
jns
out
xchg
mov
jns
fsubr
hlt
or
sub
repz
dec
pop
fs
cmp
xrelease
push
cmp
call
sbb
adc
mov
xchg
ja
jbe
in
adc
and
fisttp
adc
mov
or
jmp
pop
or
nop
push
add
bound
push
std
sar
cli
out
cmp
loopne
hlt
clc
or
sahf
out
sahf
neg
xor
inc
jns
out
hlt
pop
repz
out
icebp
nop
lock
sahf
out
sahf
out
mov
xor
out
in
lock
repz
in
add
pop
mov
jge
jge
add
sub
(bad)
out
mov
outs
mov
pop
sbb
add
mov
inc
mov
data16
add
dec
dec
add
inc
cmps
and
or
fcmovnbe
mov
outs
and
add
adc
xchg
mov
imul
jmp
pop
ins
add
fwait
pop
jno
or
leave
leave
leave
and
push
xchg
outs
frstor
pop
add
pop
xchg
stc
mov
repz
sti
cld
std
dec
repz
inc
add
add
xchg
add
adc
loop
fadd
inc
inc
rol
dec
cs
(bad)
fs
(bad)
dec
add
add
lods
imul
and
loopne
lea
fcom
cld
movs
jmp
lea
push
pop
dec
mov
inc
or
xchg
ds
sub
or
les
stc
outs
sbb
inc
push
fdiv
push
ja
pop
lock
mov
les
dec
mov
and
sub
xor
sar
in
jbe
imul
jmp
dec
daa
int3
push
mov
fidiv
fdivp
addr16
cs
fdivrp
fsub
xchg
je
push
or
xor
sbb
sahf
jnp
loopne
aas
cmps
inc
or
xor
aam
enter
inc
iret
test
fcom
xor
or
inc
mov
mov
test
adc
(bad)
out
sub
cmp
and
sbb
ficomp
in
out
pop
setl
jnp
mov
pop
push
mov
hlt
add
aam
push
dec
mov
pop
push
lods
push
and
push
es
fldenv
add
push
or
push
vpsllq
inc
movs
ffreep
stc
lock
(bad)
movs
out
add
jno
imul
xchg
push
inc
or
xchg
outs
data16
fimul
int3
jle
dec
cld
imul
mov
or
(bad)
out
xchg
mov
sub
leave
inc
imul
sbb
neg
pop
(bad)
and
cld
dec
mov
ins
scas
mov
lock
not
je
push
in
add
xor
out
ds
add
cmp
pop
out
pop
mov
dec
cmovbe
jmp
pop
es
addr16
jb
jbe
hlt
fbld
pushf
pop
out
mov
pop
mov
pop
daa
dec
into
fisttp
pop
test
dec
cmp
outs
je
xchg
cmps
stc
mov
movs
imul
in
fcom
pop
push
aam
inc
pop
sbb
mov
shl
lods
aas
ds
mul
or
aam
adc
inc
or
test
mov
movlhps
jbe
sahf
dec
sub
adc
loopne
mov
test
fidivr
dec
cs
les
jmp
push
or
sub
mov
or
add
adc
inc
add
pop
pop
mov
jle
dec
add
adc
push
add
and
pop
add
xor
pop
add
dec
sar
mov
push
add
pop
inc
sbb
fmulp
jnp
inc
and
dec
pop
push
and
pop
fcomp
push
pop
dec
add
inc
add
in
cmp
dec
xchg
push
mov
pop
push
inc
mov
inc
fnstsw
mov
push
xchg
dec
xor
dec
mov
push
push
cs
and
inc
neg
sbb
push
cs
and
xor
pop
mov
inc
dec
test
push
push
pop
cmp
cmp
add
lds
add
and
xor
pop
dec
push
sbb
fwait
iret
repz
add
rol
sbb
test
ins
inc
leave
mov
inc
push
inc
repnz
test
jg
clc
aas
push
xchg
out
stc
pop
jmp
rol
add
div
aas
(bad)
jg
leave
add
add
dec
sahf
add
test
or
ins
ror
mov
data16
xor
add
popa
bound
add
fldcw
push
out
ficomp
cmp
ja
add
loopne
fldcw
or
clc
pop
push
(bad)
aas
mov
into
and
xchg
or
mov
sub
cmp
xor
push
pop
std
bswap
sub
add
ds
shr
add
jle
rcr
jns
pop
inc
add
jo
pop
(bad)
repnz
iret
rol
inc
iret
pop
and
lock
push
repz
jl
or
push
add
nop
repz
fidivr
es
push
add
je
aas
into
push
add
iret
jmp
jno
call
mov
daa
add
add
comiss
ja
fidivr
dec
pop
outs
daa
add
repz
mov
pop
std
clc
stos
xchg
int
lock
aas
rcr
dec
div
push
inc
pop
outs
or
pop
adc
cmps
add
add
loopne
aaa
fwait
in
mov
sbb
mov
call
pop
push
xor
fidivr
jmp
bound
les
neg
test
cmp
nop
out
movs
jbe
add
push
cmp
or
pop
cld
pop
cmp
pop
inc
ss
fsubr
aaa
add
bound
pop
lock
stos
xor
lds
mov
ins
js
cmp
or
push
sub
(bad)
in
inc
add
pusha
xor
mov
sbb
push
push
sbb
jmp
or
jbe
lock
ss
sbb
cmp
sbb
or
mov
int
test
loopne
loope
jp
cmp
and
add
fiadd
adc
mov
or
adc
inc
(bad)
into
add
and
add
jnp
add
mov
in
inc
push
aas
cmp
sub
mov
ja
imul
repz
xor
daa
fidivr
cs
xor
iret
pop
retf
daa
and
ja
fidiv
fidivr
or
dec
push
dec
push
mov
int
xor
push
daa
cmp
outs
fst
daa
xchg
push
(bad)
mov
lahf
dec
daa
dec
add
daa
mov
mov
ja
push
daa
clc
push
mov
cmc
sbb
mov
mov
and
xchg
mov
inc
sahf
cmp
inc
cmp
xor
repz
and
daa
inc
(bad)
fiadd
push
movs
daa
dec
sub
in
jns
repz
xor
mov
retf
mov
jns
clc
xor
jbe
ja
cmp
inc
and
mov
xchg
push
and
and
pushf
jbe
mov
and
mov
cmps
cmp
(bad)
cmp
out
and
fs
xlat
push
retf
pop
(bad)
mov
push
and
xor
push
or
mov
daa
xor
(bad)
repz
and
test
lahf
add
ja
test
into
or
push
inc
sub
or
xchg
in
inc
pop
dec
jmp
xor
ins
mov
inc
aad
mov
aaa
jns
lods
dec
dec
pop
daa
mov
jns
enter
xchg
(bad)
in
sbb
inc
add
(bad)
(bad)
clc
mov
xor
sti
(bad)
test
mov
ja
dec
pushf
es
dec
mov
sbb
xor
inc
mov
xor
ds
shl
cmp
daa
xor
arpl
add
ins
ins
mov
daa
lahf
and
call
dec
fisttp
out
fs
fwait
cmp
es
retf
in
mov
retf
jmp
aas
fwait
inc
inc
es
mov
dec
add
jle
sub
out
in
repz
sub
shl
xchg
push
test
xor
push
(bad)
adc
xor
and
nop
in
inc
xchg
rcl
iret
push
cmp
or
stos
movs
out
sub
repnz
jnp
aas
daa
xor
jnp
aas
mov
arpl
das
es
stc
fchs
pop
bound
in
push
inc
sub
pop
loopne
ret
xor
dec
cmp
repz
sub
rol
add
outs
data16
inc
push
leave
fldenv
shl
mov
aas
loope
pop
mov
aas
call
add
sub
inc
cmp
pop
cmp
fsub
and
xchg
movs
pop
xor
dec
es
in
xchg
daa
mov
arpl
adc
pop
scas
sub
loope
pop
scas
jne
adc
cmps
fsubr
or
sub
add
cmp
sbb
loopne
(bad)
xchg
sbb
(bad)
rcr
sub
(bad)
jl
iret
fmulp
or
clc
or
sbb
xchg
jnp
(bad)
fcom
daa
dec
xor
in
mov
fimul
dec
daa
dec
daa
pushf
or
mov
or
into
mov
cmp
adc
inc
add
jne
(bad)
dec
out
aas
sbb
push
aaa
mov
mov
xor
cdq
mul
dec
push
xchg
xor
fsubr
daa
repz
mov
shl
or
ins
(bad)
jb
sahf
les
(bad)
sbb
jb
push
daa
(bad)
fsubr
cmp
shl
fdivr
aas
push
mov
lahf
adc
pop
push
inc
sub
inc
jo
arpl
inc
icebp
shr
(bad)
(bad)
inc
sbb
stos
push
pushf
and
jo
aaa
fstp
repz
(bad)
lock
aaa
jl
daa
cmps
test
and
retf
jbe
stos
sub
aaa
fs
ins
push
addr16
mov
outs
adc
jge
push
imul
fisub
fnsave
mov
xor
daa
and
mov
jmp
xchg
add
mov
and
pushf
aas
sub
push
push
aas
adc
mov
add
push
in
nop
adc
lahf
cmc
push
retf
add
(bad)
cld
cmp
paddb
lock
add
pop
mov
lock
xchg
push
or
out
xchg
jnp
fimul
or
invd
add
add
push
push
and
cmp
dec
jo
shl
push
and
or
rol
dec
jle
add
add
int3
add
scas
xor
mov
jne
and
fwait
rcl
jbe
and
pop
sti
es
or
push
adc
jnp
add
sbb
sar
xor
cmps
sbb
pop
faddp
push
ss
sbb
push
push
dec
or
inc
clc
mov
push
or
mov
or
mov
ss
ins
push
or
rcl
push
push
ss
imul
jbe
pop
pop
sbb
push
jae
dec
arpl
gs
push
(bad)
loope
not
jo
imul
jge
pop
call
leave
jnp
add
or
jne
je
jo
fild
adc
dec
aas
ins
(bad)
mov
xor
inc
stos
faddp
xchg
stos
or
inc
jo
push
pop
repnz
or
data16
inc
lds
ins
rol
jns
or
aas
out
arpl
mov
push
(bad)
mov
pcmpeqd
mov
dec
add
cmp
adc
inc
(bad)
cmps
test
ins
and
add
xchg
add
xchg
ins
adc
pop
mov
add
jbe
sbb
add
xor
mov
loop
pop
imul
adc
(bad)
out
and
out
push
fidivr
adc
jmp
and
gs
or
imul
push
cmp
cmp
push
imul
loope
push
or
arpl
pop
xlat
imul
loope
outs
retf
bnd
outs
je
inc
pop
pop
ins
push
ins
push
jae
pop
dec
mov
push
outs
and
jb
jb
ins
push
jbe
jl
jnp
addr16
adc
out
repnz
ds
push
sub
ss
mov
jle
sbb
push
jae
pusha
sub
imul
arpl
pop
and
fidivr
mov
cmp
add
jnp
jnp
js
sub
ja
jns
gs
cmp
dec
bound
jbe
jb
lds
lock
mov
mov
jecxz
add
loope
mov
bound
ficomp
sti
push
aas
outs
ss
or
inc
add
stos
adc
jae
in
sbb
(bad)
push
dec
xor
shl
sbb
(bad)
mov
fdivr
mov
je
imul
sbb
cmp
mov
jnp
jns
push
xchg
add
cmp
push
es
pop
pushf
mov
push
cmp
mov
cmp
push
retf
xchg
add
fsubrp
cld
pop
add
inc
mov
inc
loopne
cdq
pop
cs
mov
cmp
dec
add
push
push
cmp
add
dec
xchg
add
scas
shl
(bad)
and
out
xlat
sbb
push
sub
sub
lods
mov
(bad)
dec
je
scas
ficom
pop
jo
cmp
lahf
xchg
ss
cmp
inc
jo
dec
(bad)
mov
add
jecxz
pop
sbb
mov
mov
xchg
(bad)
mov
popa
xlat
push
shl
out
mov
push
imul
jecxz
clc
push
pop
inc
stos
arpl
ss
loopne
fdivr
out
fwait
sbb
call
(bad)
pop
mov
xchg
or
inc
daa
and
or
sub
(bad)
ficom
add
ss
push
jmp
inc
ss
sub
imul
(bad)
dec
push
pop
ret
ins
lahf
outs
daa
and
jb
push
jp
xchg
mov
xchg
lock
dec
ret
sbb
xchg
adc
mov
adc
aaa
mov
mov
dec
outs
addr16
ror
aaa
push
jmp
pop
jae
imul
(bad)
jbe
imul
lahf
fisub
daa
mov
movs
add
mov
sub
out
jnp
adc
or
aas
popa
pop
xor
scas
ret
cmps
ja
in
inc
in
or
stos
pop
mov
and
arpl
sbb
dec
fs
pusha
icebp
cmp
sbb
mov
add
ret
push
cmp
rol
sub
mov
bound
outs
ret
fwait
jbe
imul
and
mov
jno
adc
push
push
adc
cmp
push
xor
ins
cmp
sub
push
out
bound
jmp
jg
add
frstor
jae
or
(bad)
ret
jb
mov
dec
out
and
ins
xor
loopne
mov
jnp
xchg
rcl
pop
fistp
sub
adc
push
ja
mov
cmp
scas
push
inc
cli
sub
jmp
aaa
retf
cmp
pushf
fstp
bound
pop
cli
scas
call
adc
jbe
or
mov
pop
inc
push
pop
jo
adc
dec
fistp
sbb
stos
(bad)
mov
jb
xchg
mov
in
int
adc
xlat
sub
mov
mov
xchg
out
cs
dec
dec
loope
rcr
scas
addr16
test
js
jmp
xchg
mov
adc
push
mov
push
lahf
ret
push
pop
jno
xlat
mov
jae
fidivr
sub
dec
push
pop
pop
outs
das
shr
mov
push
adc
inc
inc
xor
ins
ror
adc
push
dec
pop
shl
popa
repnz
jbe
jmp
cmp
outs
cmp
add
xchg
and
mov
arpl
stos
sbb
fisubr
les
sub
pop
jb
dec
ret
out
sbb
mov
ja
and
pop
arpl
add
push
cli
mov
das
jp
icebp
les
mov
sub
or
mov
jb
jo
add
jae
jg
movs
and
(bad)
or
mov
xchg
add
ret
adc
or
push
inc
cmp
imul
and
scas
xor
pop
xor
jnp
out
jmp
xor
les
jecxz
cmps
mov
cmp
daa
scas
scas
sub
sbb
ret
dec
imul
das
or
inc
sbb
push
ficom
addr16
xor
addr16
cs
ja
pop
add
shl
stos
mov
mov
jo
ins
aad
mov
cmp
mov
sub
bound
jae
fs
add
or
loop
inc
ja
movs
cs
sub
ins
xor
addps
dec
push
icebp
push
scas
sbb
adc
xor
(bad)
pop
cmp
fmul
adc
outs
push
repz
test
fstp
sbb
mov
lods
lds
jae
or
adc
or
hlt
fdiv
inc
movs
dec
nop
or
pop
cmp
bound
push
imul
pop
add
test
aas
jae
pop
adc
ins
sub
daa
cmp
scas
jne
jne
mov
and
movs
adc
push
jmp
dec
inc
pushf
(bad)
mov
mov
cwde
and
sub
pop
push
mov
out
pop
pop
xchg
push
(bad)
arpl
dec
mul
pop
(bad)
into
jb
inc
or
bound
and
push
mov
(bad)
pop
mov
add
jnp
adc
xlat
jb
inc
xcrypt-ecb
cmps
or
dec
call
out
jb
mov
ficomp
or
jbe
push
dec
pop
jo
inc
and
pop
shr
rep
emms
add
popf
cli
lods
sbb
and
push
push
push
inc
push
cmc
pusha
das
and
call
fild
out
lods
adc
or
shr
mov
movs
xor
adc
adc
lahf
xchg
not
pop
xor
inc
movs
sbb
(bad)
sub
stos
mov
mov
dec
push
pop
mov
arpl
pop
cmp
cmp
sub
adc
pop
sysret
add
jno
adc
repz
aad
pop
fild
retf
add
pop
mov
imul
hlt
fist
or
mov
cmps
cmps
or
mov
ins
mov
adc
jbe
cs
cmp
outs
sbb
sbb
shr
movs
and
inc
jl
and
loopne
dec
shl
cmp
push
je
pop
adc
jg
push
sti
jo
mov
test
cmps
mov
jbe
shr
push
adc
stos
sbb
iret
pop
adc
or
or
pop
sbb
sbb
sbb
imul
mov
lock
and
jg
rol
dec
mov
push
pop
push
fst
jae
cmps
adc
jnp
add
nop
ficomp
jns
je
jae
jle
push
or
inc
push
fcomp
mov
aad
mov
outs
and
mov
dec
sbb
xlat
mov
ret
jbe
add
mov
adc
and
push
cmps
and
or
adc
mov
mov
dec
inc
stos
xlat
in
stos
loop
mov
jae
cmp
xor
jo
loope
and
pop
adc
mov
and
mov
sbb
add
jp
pop
(bad)
(bad)
stos
jnp
das
sbb
popw
and
lods
push
sahf
cmp
jae
add
pusha
cmp
mul
and
aaa
push
and
sub
ret
mov
mov
out
adc
ds
pop
pop
pop
repz
mov
aam
push
lea
movs
adc
adc
xchg
cmps
mov
cmps
imul
outs
mov
xchg
movhps
jns
outs
vmovhps
mov
mov
pop
imul
push
out
cwde
call
or
dec
jo
adc
stos
add
pop
outs
outs
dec
mov
ds
stos
arpl
push
(bad)
adc
push
xlat
add
pop
push
or
daa
pop
mov
fs
push
or
in
pop
jg
add
jmp
ret
mov
pop
fwait
cmp
xchg
push
cmp
js
push
inc
pushf
cld
bound
add
pop
add
cs
adc
push
loope
movs
cwde
mov
xchg
ret
pop
dec
push
xchg
xor
mov
movs
inc
dec
push
push
rcl
pop
xchg
jb
addr16
adc
scas
sbb
push
mov
jnp
adc
pop
aaa
push
push
ficom
inc
sbb
mov
fidiv
dec
or
inc
rcl
push
aaa
adc
inc
adc
mov
push
add
pusha
add
adc
pop
(bad)
or
inc
repz
outs
and
and
or
fbld
and
js
push
push
and
aas
out
addr16
sbb
mov
jb
fild
and
imul
not
push
gs
ins
inc
push
dec
sub
dec
imul
jo
out
js
push
jno
js
sar
push
imul
jo
mov
mul
outs
jo
es
fbstp
push
lock
mov
int
and
out
adc
mov
je
dec
inc
ins
addr16
xor
add
jo
adc
fsub
mov
or
mov
pop
mov
dec
cmp
je
ja
out
add
bound
jno
dec
dec
jbe
ins
gs
ror
cld
sbb
arpl
out
pop
adc
outs
jno
pop
fs
push
int
xchg
adc
dec
data16
sub
fcmovne
fistp
jbe
js
mov
ja
ja
cmp
shl
cmp
jle
push
imul
xchg
cmc
dec
xchg
add
add
rcl
cmp
add
inc
adc
add
add
push
popa
push
inc
adc
rol
or
mov
loope
or
loopne
arpl
ins
push
cmp
mov
sub
cmp
lock
mov
retf
add
or
dec
jmp
mov
dec
jg
fwait
add
or
xchg
add
or
mov
fwait
sti
and
mov
pusha
or
iret
movs
stos
or
inc
leave
xchg
mov
inc
xor
add
pop
leave
xchg
pop
add
push
pop
xchg
lahf
iret
stc
call
fs
add
gs
and
adc
je
arpl
xor
mulps
hlt
adc
pusha
add
cmps
or
and
inc
adc
test
stos
loope
sub
outs
stc
imul
gs
mov
ins
add
pop
xchg
push
lock
cmc
adc
lock
mov
sbb
xchg
fnsave
mov
mov
mov
in
aas
and
popa
fs
imul
push
push
add
or
cmp
cmp
ins
xor
sub
ins
les
mov
out
jmp
sbb
lods
mov
movs
pop
lods
inc
jbe
pop
and
and
movlhps
or
and
popa
adc
pop
dec
push
sar
ins
inc
js
pop
push
imul
out
xlat
add
add
and
add
iret
jmp
push
mov
sbb
sbb
add
mov
sub
dec
jne
(bad)
fcomp
iret
test
push
and
jne
mov
and
(bad)
pop
sub
in
pop
or
cdq
or
and
inc
jp
nop
inc
sbb
stos
add
and
lods
sub
aad
pop
imul
dec
fs
xchg
jbe
ret
sub
inc
push
push
scas
mov
call
adc
cmps
inc
sbb
mov
fadd
sbb
and
jmp
xchg
add
jg
rol
out
push
aam
pop
shl
call
xchg
loopne
and
sub
inc
sbb
sbb
add
and
gs
adc
cwde
mov
fdiv
xor
sbb
ret
and
fild
jmp
sar
adc
adc
aas
xor
push
lods
sub
in
or
adc
dec
cmps
sub
add
add
fisttp
js
push
outs
pop
inc
jns
hlt
adc
sub
inc
ret
ret
push
adc
fwait
xchg
stc
je
loop
mov
cdq
mov
cli
outs
or
push
pop
clc
pop
in
(bad)
pop
push
inc
xor
xor
xor
pop
sub
add
ja
adc
jno
(bad)
lock
jno
add
cmps
jp
in
mov
mov
fadd
test
push
ins
mov
push
add
arpl
out
rcr
aam
sub
adc
and
in
mov
out
out
das
sub
cmp
shl
dec
outs
mov
(bad)
ret
xchg
sub
daa
add
in
stos
sub
adc
and
rcl
sub
int
ja
and
push
and
fwait
adc
test
sub
sub
xchg
dec
test
test
and
ret
mov
pop
shr
popf
and
loopne
xor
sahf
arpl
aas
aaa
dec
jb
js
add
rol
test
add
adc
std
jns
adc
gs
popa
bound
daa
dec
inc
jmp
sbb
push
push
das
push
test
ins
scas
inc
inc
or
je
adc
aaa
int
retf
jnp
mov
jo
(bad)
and
retf
jae
or
cmp
shl
adc
sbb
out
mov
xor
inc
sub
arpl
pusha
push
stos
xchg
xor
ins
inc
dec
adc
pop
dec
inc
rcl
xor
iret
je
fcom
xor
mov
inc
arpl
call
or
outs
pop
sbb
add
add
dec
jne
xor
or
ins
pop
jo
xchg
cdq
sbb
mov
popa
adc
sahf
mov
push
push
retf
jae
mov
jb
and
adc
inc
outs
sub
mov
jno
and
lods
or
add
je
sub
push
jo
pop
jnp
cmp
hlt
mov
mov
ins
lds
gs
out
pop
dec
data16
dec
sub
mov
inc
cmp
daa
dec
cmp
jmp
outs
jo
sbb
(bad)
dec
nop
data16
or
(bad)
jae
and
and
gs
cmp
push
jge
mov
mov
cwde
and
and
xor
in
loope
cmps
test
add
add
add
push
ja
jo
jo
xlat
mov
imul
mov
inc
std
outs
outs
imul
fwait
push
dec
dec
adc
sbb
outs
lea
adc
dec
mov
cwde
fmulp
jle
pop
sbb
lods
jb
adc
addr16
or
js
add
sbb
mov
mov
lea
or
sbb
les
push
jmp
mov
ins
imul
pop
pop
xchg
add
pusha
mov
mov
ss
jo
aam
mov
push
adc
out
loope
sbb
mov
jne
(bad)
mov
nop
adc
xchg
imul
and
arpl
sbb
push
aaa
sbb
ss
adc
add
and
imul
cmp
adc
add
movs
shr
retf
xor
add
mov
mov
fs
call
and
je
jne
ins
int3
lods
inc
and
sbb
imul
sub
jae
dec
jb
jbe
or
and
inc
ds
sbb
adc
adc
sbb
and
jns
xchg
sbb
ficom
sub
ret
lock
sbb
(bad)
jne
jae
adc
movs
mov
adc
pop
and
and
and
fiadd
xchg
mov
sbb
imul
jno
and
dec
rcr
es
sbb
jae
inc
and
pop
jge
data16
shl
shl
inc
shl
pop
xchg
imul
and
adc
or
rcr
pop
and
adc
and
stos
in
ins
sbb
push
lea
es
inc
inc
jnp
add
pop
stos
ins
xchg
sbb
and
dec
fld
and
and
pop
(bad)
(bad)
adc
ret
cmp
mov
aad
and
cmp
jmp
add
add
and
adc
fbld
and
adc
std
ja
inc
sbb
push
sbb
fst
retf
sub
add
mov
sub
xor
test
push
shl
leave
adc
cmp
mov
inc
or
iret
xor
lahf
es
dec
les
adc
inc
or
and
aam
sub
aaa
push
mov
(bad)
pop
mov
mov
xor
pop
dec
ins
enter
dec
and
ins
data16
pop
xor
ret
sbb
and
jo
pop
mov
shl
in
cs
imul
dec
jo
or
rol
adc
popf
pop
ror
fs
ret
lods
retf
in
test
mov
icebp
daa
movs
loopne
imul
sub
or
adc
jl
jl
cld
and
jmp
and
movs
cmps
inc
fnsave
xor
add
loop
xchg
mov
sbb
sub
add
sbb
out
out
ins
sub
cmc
or
inc
pop
add
ins
and
add
jbe
icebp
inc
movups
xor
push
lea
dec
pop
cs
popa
adc
pusha
or
push
xchg
or
inc
scas
in
in
pop
stc
xor
inc
push
inc
clc
adc
lods
repz
push
jmp
inc
push
push
jno
push
dec
add
es
add
adc
push
or
out
dec
and
cs
lahf
cs
jae
dec
lahf
sbb
sahf
outs
fs
jb
dec
pusha
add
dec
sbb
in
xor
mov
pop
fdiv
dec
push
daa
or
test
jbe
in
ss
push
inc
or
xchg
and
xchg
add
add
jo
add
inc
xchg
push
leave
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
shr
jl
dec
add
