sub
dec
daa
rcr
ss
push
cmp
ds
es
push
and
dec
cmp
mov
jbe
dec
ss
and
pop
and
sbb
inc
mov
sbb
adc
loope
ds
sbb
mov
xchg
push
push
daa
push
pop
adc
scas
add
das
test
and
mov
fldenv
imul
es
and
inc
test
jne
dec
add
pop
sbb
mov
pop
push
inc
adc
dec
dec
sbb
jle
inc
xor
arpl
cmp
dec
loope
cmp
fisub
xchg
ja
xchg
aam
sbb
sbb
cmps
mov
and
or
retfw
xchg
je
out
into
xchg
sub
mov
adc
(bad)
adc
mov
sbb
scas
cmp
pop
mov
dec
aas
scas
pop
or
data16
pop
xchg
je
loope
ficom
sub
mov
lods
sub
pusha
dec
cmp
mov
sbb
push
add
push
or
xchg
je
xor
lods
xor
test
adc
inc
xor
pop
mov
ss
fmul
lahf
scas
daa
mov
hlt
test
out
xchg
push
mov
adc
pop
ds
push
mov
jecxz
fadd
fadd
xor
retf
mov
fsub
fld
xchg
sub
sbb
dec
cmp
sbb
out
adc
push
xor
popa
ss
and
jbe
retf
pop
pusha
push
mov
bound
imul
fwait
aaa
sbb
and
cmp
fcmovne
push
jp
je
sub
push
repnz
push
lods
sub
fidivr
push
and
lahf
scas
daa
mov
xor
jle
lahf
push
jbe
sbb
and
sbb
enter
xchg
je
add
leave
cld
xor
(bad)
push
xor
push
arpl
jbe
je
add
push
xchg
dec
and
sbb
mov
popa
xchg
bswap
lds
push
popf
popw
ss
mov
adc
add
pop
xor
popa
ss
xchg
je
add
xchg
retf
jae
push
leave
sub
je
xchg
push
adc
xchg
je
jecxz
and
and
lahf
scas
cmp
aad
outs
retf
imul
leave
and
sbb
loopne
dec
jecxz
mov
and
hlt
lds
sbb
jne
mov
jecxz
sar
cmps
(bad)
scas
xchg
fdivr
sbb
and
and
push
mov
dec
mov
sbb
xor
push
cmc
movs
push
add
sbb
les
jecxz
in
out
push
xor
push
mov
(bad)
leave
dec
add
jp
push
mov
(bad)
leave
dec
cmp
fild
and
sbb
retf
xor
and
jmp
ss
out
push
into
scas
xchg
fsub
dec
and
sbb
out
and
es
fsubr
enter
xor
jmp
stos
mov
(bad)
leave
xchg
lods
sbb
outs
test
js
fistp
stos
ror
jne
mov
jmp
push
jp
and
pop
xchg
jae
sbb
sbb
adc
ss
dec
ss
das
leave
imul
mov
cmp
aas
jmp
leave
imul
sub
fadd
xchg
push
retf
pop
ss
in
imul
daa
pop
fadd
and
shl
ss
enter
push
neg
(bad)
fistp
stos
rcr
aad
adc
adc
sar
data16
xchg
lods
scas
jae
cmp
sbb
and
push
cmp
pop
sub
dec
adc
ss
lods
sub
push
pop
fadd
xchg
push
and
pop
aas
pop
sbb
push
es
(bad)
pop
adc
ss
lods
fadd
cmp
push
fs
pop
sub
mov
inc
xor
cmc
dec
jecxz
mov
jp
pusha
dec
loope
cmp
das
fcmovnb
or
aaa
mov
sub
xchg
es
test
and
jns
and
jno
clc
mov
sbb
xchg
es
test
and
jecxz
addr16
xchg
aas
sub
mov
jle
bswap
pop
and
fwait
mov
or
test
xlat
mov
call
xchg
enter
jg
sbb
inc
into
xchg
das
sar
in
jmp
pop
aaa
sbb
fimul
fistp
vpshld
mov
xchg
arpl
in
retfw
pop
leave
jecxz
fwait
leave
jecxz
and
xor
cmc
dec
jecxz
mov
and
hlt
push
push
ss
jne
xchg
pop
das
mov
loopne
(bad)
sub
dec
xchg
out
(bad)
loop
stos
hlt
xor
xchg
(bad)
jecxz
push
sbb
jae
jecxz
mov
xchg
arpl
in
in
adc
xchg
fdiv
mul
stos
shl
stos
into
xor
loopne
or
(bad)
es
sbb
fdiv
mov
fcom
xchg
stos
mov
xchg
(bad)
xchg
out
xlat
leave
loop
aam
in
(bad)
xchg
out
ror
loop
stos
mov
xchg
(bad)
xchg
mov
(bad)
(bad)
es
sbb
fdiv
xchg
out
and
jecxz
jl
inc
mov
mov
popa
xchg
aaa
das
icebp
pop
xchg
xchg
pusha
gs
out
push
sar
jae
jecxz
retf
enter
pop
ss
pop
cmps
mov
stos
imul
and
sbb
stos
out
jecxz
mov
or
call
adc
daa
cs
retfw
xlat
mov
call
das
fild
xor
cmc
dec
jecxz
addr16
cmp
xchg
aaa
das
icebp
pop
xchg
adc
loopne
loope
fsubp
jbe
sub
movs
push
ss
pop
cmps
mov
stos
imul
and
sbb
stos
out
jecxz
mov
or
call
sub
sar
jae
jecxz
retf
push
sbb
jae
lods
daa
cs
jge
aad
jbe
stc
cmp
dec
loope
es
aaa
aaa
icebp
pop
xchg
cmps
or
sub
pop
fsubp
jbe
jecxz
push
sbb
shl
test
adc
popf
xor
fstp
out
loope
cmp
aam
daa
and
stos
arpl
adc
mov
ss
jecxz
inc
xor
cmc
dec
jecxz
addr16
cmp
xchg
pop
sub
xchg
xchg
adc
xchg
lods
fdiv
push
pop
das
pop
inc
mov
dec
and
xchg
stos
jae
loope
cmp
dec
push
hlt
pop
fmulp
jecxz
test
loopne
jo
hlt
mov
leave
jecxz
out
mul
into
jmp
stos
jae
jecxz
imul
(bad)
addr16
cmp
xchg
aaa
das
mov
dec
ss
les
jecxz
sub
xor
and
xchg
lods
dec
ss
dec
leave
add
gs
xchg
push
ds
dec
ss
mov
sbb
data16
sbb
aam
xchg
das
fstp
sbb
shr
xor
cmc
dec
jecxz
addr16
cmp
mov
sub
jnp
jmp
jns
sbb
push
stos
mov
popa
sub
jb
gs
gs
sbb
mov
xchg
ins
fadd
xchg
jb
gs
fcmovnb
sti
jecxz
retf
retf
out
ins
push
imul
(bad)
mov
jbe
pusha
dec
loope
mov
jecxz
pop
in
in
cmp
push
sbb
ss
leave
push
ss
data16
dec
add
xlat
pop
push
mov
(bad)
(bad)
in
in
fsub
cmp
arpl
inc
dec
cmp
xchg
sub
pop
sbb
and
dec
sbb
ss
test
sub
fsub
data16
call
std
sub
mov
or
aaa
and
and
xchg
test
and
sub
mul
mov
imul
mov
fstp
xor
xchg
fsubr
stos
jl
inc
mov
fwait
sbb
and
test
and
dec
cmp
lea
mov
out
xchg
test
popa
ss
and
push
fisub
sbb
pop
sbb
jae
cmps
(bad)
sbb
data16
and
sbb
push
stos
mov
jb
stos
mov
pop
fsub
jmp
mov
cmp
xor
leave
jecxz
and
jecxz
fadd
cmp
je
ret
je
out
xlat
jecxz
fsub
inc
fmul
jecxz
out
and
das
mov
test
sbb
lahf
sub
sbb
shl
dec
push
mov
pop
bound
push
jecxz
aas
mov
call
imul
lahf
pop
fbstp
adc
or
sbb
mov
or
popa
ss
and
push
mov
leave
xchg
test
popa
ss
das
xlat
nop
xchg
je
sbb
mov
push
xchg
je
push
dec
test
and
sbb
ss
retf
retf
outs
push
outs
xchg
mov
out
xchg
test
and
xchg
das
fstp
test
and
imul
and
out
iret
test
adc
pop
xor
sbb
dec
dec
stos
jae
jecxz
sar
cmps
out
jecxz
fdivr
sbb
jbe
or
ss
ret
loope
(bad)
dec
loope
leave
or
ss
stos
jae
arpl
inc
sub
sti
pop
(bad)
cdq
mov
enter
stos
mov
push
fsub
xchg
das
fistp
fcomp
ss
sbb
xchg
je
xchg
fdiv
sbb
data16
xchg
push
or
push
or
push
sub
dec
loope
leave
dec
(bad)
fdiv
loope
ret
fstp
sahf
inc
fmul
jecxz
push
stos
mov
sub
ss
sar
jecxz
imul
(bad)
mov
jp
pusha
dec
aad
jg
pop
mov
ss
popf
add
push
push
loopne
test
adc
pop
push
sbb
cmps
sbb
and
(bad)
pop
aaa
icebp
pop
xchg
and
sbb
stos
lds
das
fstp
in
inc
sti
jle
xchg
xor
loope
ds
and
and
and
xor
das
sub
je
xor
mov
sar
data16
xchg
lods
in
mov
or
xchg
sub
push
push
dec
loopne
push
popa
mov
leave
inc
sbb
jge
xchg
and
xchg
lods
mov
in
xchg
xchg
aam
xchg
das
fstp
(bad)
push
daa
pxor
and
push
loope
ds
outs
adc
and
pop
daa
mov
xchg
and
fld
jae
jmp
jecxz
fdiv
popa
xchg
and
xchg
push
ds
mov
pop
sbb
enter
mov
sbb
dec
ss
dec
xor
dec
ss
and
pop
add
test
push
pop
jae
and
jbe
dec
ss
adc
adc
loop
aam
arpl
in
loope
sbb
outs
ret
fadd
xchg
push
into
hlt
adc
and
push
add
(bad)
pop
push
inc
in
dec
pop
sbb
stos
into
jmp
stos
jae
loope
(bad)
xchg
lods
fadd
sbb
sbb
jl
inc
mov
fwait
sahf
sbb
and
cmp
and
dec
cmp
lea
cmp
ss
sar
jecxz
mov
ins
sub
sbb
cmps
retf
jecxz
fdiv
je
ret
je
add
push
mov
xchg
(bad)
xchg
out
out
loop
jae
ins
xchg
fmul
inc
arpl
cmp
jecxz
pop
(bad)
sbb
or
pop
jae
and
jecxz
sti
aaa
(bad)
test
out
repnz
fsub
sbb
jecxz
out
lahf
push
mov
inc
(bad)
sar
sbb
aam
xchg
out
xchg
leave
loop
stos
cmc
xchg
out
ret
leave
loop
jae
or
ss
loope
leave
dec
and
inc
mov
jecxz
call
cmps
jmp
ret
loope
(bad)
jecxz
fsub
push
fsub
and
ss
retfw
sub
sub
ss
test
scas
mov
xchg
(bad)
dec
retf
mov
mov
xchg
das
fistp
fsub
xor
push
pop
dec
retf
jecxz
jecxz
loop
retf
iret
in
fdiv
pop
jecxz
into
jecxz
fdivr
jecxz
ja
pop
push
out
xor
out
popf
leave
loop
jae
or
ss
loope
leave
dec
push
stos
jae
arpl
cmp
or
mov
cmps
mov
mov
push
mov
ins
and
jbe
dec
push
cdq
xchg
fmul
jecxz
retf
xchg
jmp
icebp
jp
sahf
nop
jecxz
fdiv
sbb
xchg
mov
xchg
(bad)
and
cmps
nop
cmp
xchg
arpl
out
fmulp
loop
jae
dec
retf
hlt
xchg
dec
ss
out
adc
cmps
nop
jecxz
fdiv
sbb
xchg
pop
push
mov
ret
jecxz
mov
ss
cmps
cmc
sbb
mov
and
mov
je
xor
or
jecxz
mov
leave
sbb
push
adc
dec
clc
cld
sub
mov
jecxz
retf
cmp
xchg
fdiv
jecxz
and
lods
cmps
sahf
jecxz
fdiv
sbb
and
loop
pop
push
mov
fdivp
lahf
fmul
lahf
scas
das
or
xchg
and
push
rol
je
out
retf
jecxz
fsub
mov
out
and
sub
cdq
ret
jecxz
and
sbb
and
mov
je
xor
test
jecxz
mov
leave
sbb
push
adc
dec
(bad)
cld
sub
mov
jecxz
retf
mov
fsub
leave
jecxz
and
lods
cmps
sahf
jecxz
fdiv
sbb
and
adc
push
mov
fidivr
fmul
lahf
scas
das
or
xchg
and
push
rol
je
out
retf
jecxz
fsub
sub
out
and
sub
cdq
ret
jecxz
and
sbb
sti
sar
cmps
xchg
jecxz
fdivr
mov
xor
xor
repnz
leave
sbb
push
cmp
out
mov
loop
and
sbb
dec
aaa
je
ret
je
add
pop
push
(bad)
call
pushw
leave
jecxz
and
lods
cmps
sahf
jecxz
fdiv
sbb
and
pop
(bad)
pop
push
mov
(bad)
sahf
fmul
lahf
scas
das
or
xchg
and
push
rol
je
out
retf
jecxz
fsub
(bad)
jecxz
out
and
ds
sbb
push
mov
xchg
(bad)
dec
xor
adc
leave
sbb
push
cmp
out
mov
loop
and
sbb
mov
ss
xlat
mov
loop
and
lods
es
test
and
xchg
out
fmulp
loop
jae
mov
fmul
inc
xor
je
imul
js
popa
ss
mov
out
xchg
test
(bad)
sbb
cmp
sbb
mov
ss
out
sti
leave
loop
jae
cdq
mov
enter
push
jecxz
jg
pop
xchg
sub
adc
aam
sbb
scas
mov
xchg
(bad)
dec
loope
out
jecxz
fsub
push
fsub
jecxz
retf
and
xchg
test
sub
fldcw
ss
iret
test
out
shr
jmp
fdiv
lahf
xlat
fwait
leave
loop
and
xchg
fbld
ss
loopne
bound
push
fucomi
mov
ss
or
xchg
and
sbb
scas
mov
xchg
(bad)
dec
out
scas
jecxz
fsub
out
sti
leave
loop
jae
sub
jne
xchg
mov
aad
out
cmps
leave
loop
stos
cmc
xchg
out
test
mov
mov
loop
jae
and
aaa
or
and
xchg
das
fistp
fsub
or
push
mov
jecxz
test
enter
dec
loope
leave
mov
retfw
and
xchg
test
sub
sbb
and
xchg
out
retf
leave
loop
jae
cdq
mov
test
jecxz
sbb
adc
out
xor
lock
and
test
leave
dec
loope
jmp
fsub
jecxz
retf
inc
ss
sar
jecxz
mov
xchg
and
cdq
stos
and
sbb
cmps
shl
xchg
fsub
out
retf
leave
loop
jae
and
je
xchg
das
fistp
fucomip
pop
retf
cmps
push
pop
push
mov
sbb
sbb
xchg
jecxz
fdiv
jecxz
fcmovne
loop
dec
mov
mov
jecxz
retf
pop
jo
and
lock
(bad)
sbb
and
hlt
or
pop
push
leave
test
out
retf
jecxz
fsub
movnti
cmps
retf
jecxz
fsub
push
dec
ss
out
xchg
mov
out
xchg
test
fmul
jecxz
and
jecxz
cmps
cmps
jecxz
fdivr
jecxz
scas
adc
mov
sbb
rcl
loop
mov
(bad)
sbb
ss
iret
test
hlt
xchg
(bad)
dec
loope
leave
dec
inc
stos
jae
arpl
cmp
jmp
fdiv
popf
test
scas
mov
xchg
(bad)
dec
add
mov
xchg
(bad)
dec
loope
leave
or
ss
stos
jae
arpl
cmp
jmp
js
push
mov
jecxz
test
mov
loope
leave
dec
push
stos
jae
arpl
cmp
jmp
fdiv
cmc
mov
ss
and
loopne
and
inc
jecxz
pop
(bad)
fucomi
push
leave
loop
and
xchg
out
mov
loop
stos
mov
xchg
(bad)
xchg
out
mov
mov
jecxz
iret
es
lea
lds
xchg
fdiv
movs
outs
and
sbb
xchg
jecxz
test
jecxz
push
mov
dec
push
sar
cmps
push
xchg
fdivr
sbb
cmps
push
sbb
out
fmul
jecxz
scas
mov
xchg
(bad)
dec
add
pop
push
mov
xchg
(bad)
dec
loope
leave
or
ss
stos
jae
arpl
cmp
jmp
fdiv
adc
sub
sbb
scas
mov
xchg
(bad)
dec
add
leave
test
loope
mov
xchg
fsub
push
fsub
jecxz
retf
or
xchg
test
sub
(bad)
push
ss
sahf
push
jecxz
fdivr
adc
out
ss
mov
leave
sbb
cmps
neg
and
jecxz
fadd
hlt
adc
out
xchg
lods
fs
jecxz
loopne
push
push
mov
aaa
fmul
jecxz
sub
xchg
push
ss
ror
loop
and
sbb
dec
xor
fisttp
mov
xchg
(bad)
dec
add
pop
push
mov
xchg
(bad)
dec
add
or
scas
retf
jecxz
fdiv
and
inc
in
cmps
into
jecxz
fdiv
sbb
xchg
outs
jecxz
fdivr
jecxz
test
in
(bad)
xchg
out
es
jecxz
fsub
cmc
dec
ss
out
jbe
scas
mov
xchg
(bad)
dec
add
pop
push
mov
xchg
(bad)
dec
sub
sbb
mov
dec
pop
push
mov
out
fmul
jecxz
push
ss
out
mov
mov
xchg
mov
aad
out
jnp
loop
stos
cmc
jecxz
mov
loop
test
mov
out
mov
loop
sub
adc
leave
loop
jae
sub
jne
xchg
out
mov
mov
jecxz
iret
leave
loop
test
clc
xchg
(bad)
and
xchg
sub
repnz
fmul
lahf
xlat
ror
loop
and
lods
cmps
retf
jecxz
fdiv
movs
dec
and
sbb
sar
jecxz
mov
jecxz
test
jecxz
sub
jecxz
push
cmp
xchg
jae
sub
jne
lahf
xlat
test
adc
cmps
loop
xchg
fsub
pop
fsub
loope
out
jecxz
fsub
pop
fsub
loope
jmp
fsub
jecxz
pop
(bad)
cdq
mov
enter
push
jecxz
sub
cmp
js
fistp
stos
shl
dec
mov
sub
pop
xchg
ss
and
sbb
jae
xchg
dec
and
sbb
mov
popa
xchg
bswap
icebp
pop
mov
add
lds
sbb
retfw
and
popf
das
(bad)
(bad)
cmp
pop
inc
push
dec
ss
out
hlt
sbb
leave
jecxz
push
mov
sub
imul
fnsave
and
xchg
das
ret
cmc
xchg
bswap
icebp
pop
mov
push
in
test
shl
pop
loop
push
jmp
fmul
jecxz
jge
(bad)
loope
(bad)
js
and
sbb
mov
fisubr
arpl
cmp
fcmovnb
sti
jecxz
retf
dec
mov
sub
pop
sbb
and
dec
arpl
jbe
dec
ss
add
in
hlt
lea
sbb
jmp
jle
pusha
xchg
aaa
sub
xchg
call
push
mov
adc
cli
arpl
sbb
shl
in
jecxz
mov
jb
ja
push
adc
push
mov
and
fld
stos
pop
push
ss
in
pop
repz
sbb
ss
mov
arpl
sbb
mov
cmp
push
fdiv
sbb
sub
outs
push
cmps
cmps
test
and
sbb
retf
push
leave
sbb
xchg
je
pop
jecxz
and
and
jae
imul
sub
fbld
push
cmp
sbb
push
arpl
adc
iret
stos
pop
push
xor
fdiv
and
bound
xchg
call
fiadd
fdiv
and
bound
cmc
nop
and
sbb
es
test
and
sbb
ja
jp
xor
push
mov
xchg
and
sbb
cs
es
enter
push
pop
jecxz
fadd
sbb
ja
outs
push
xor
push
mov
sub
ss
cs
xor
gs
jecxz
es
ds
mov
ss
in
jg
and
sbb
xor
and
mov
leave
jecxz
es
aaa
push
fbld
ss
rcr
in
jecxz
mov
jb
ja
imul
lock
push
push
ss
fstp
leave
jecxz
es
xor
ins
adc
cmc
jecxz
ss
int
adc
mov
jb
ja
push
bound
push
push
ss
loope
leave
jecxz
es
test
and
sbb
ja
jecxz
aaa
in
jecxz
mov
jb
ja
sub
xor
mul
sbb
push
sub
and
cli
jecxz
(bad)
xchg
lods
mov
ss
add
sbb
sbb
sub
mov
push
bound
cmc
movs
and
sbb
scas
pop
push
xor
arpl
cmc
aam
ss
iret
stos
pop
push
xor
and
sbb
es
test
and
sbb
retf
push
mov
fucompp
es
sub
xor
sbb
jecxz
shr
ss
cmp
add
sbb
jmp
xchg
push
mov
cmp
push
mul
mov
leave
cmp
mov
pop
push
mov
push
dec
pop
push
in
ss
pop
or
dec
cmps
imul
jb
ja
sub
add
outs
push
sbb
sbb
imul
sub
fnstsw
xchg
es
sub
mov
(bad)
cs
jbe
addr16
cmc
cmp
ss
aad
push
push
leave
sbb
xchg
je
pushf
es
jbe
out
out
sbb
stos
(bad)
pop
loopne
xchg
ins
retf
popa
ss
call
sbb
xor
ss
stos
jae
gs
xor
ss
mov
pop
nop
sub
pop
xchg
push
neg
and
cwde
jecxz
ss
pop
int
pop
and
jbe
jmp
sub
and
stos
das
fmul
pushf
push
imul
aaa
sbb
jbe
jmp
and
jg
dec
out
push
fs
pop
fnstenv
imul
arpl
push
and
cmp
cs
mov
call
pop
loopne
xchg
clc
mul
adc
rol
ins
stos
jae
jmp
popa
xchg
and
jmp
and
xchg
call
adc
arpl
sbb
cmp
adc
arpl
xchg
push
xor
push
mov
cmp
arpl
and
push
in
popf
test
sbb
mov
ss
cmp
adc
arpl
xchg
push
xor
ret
sbb
cmp
bound
and
push
in
jecxz
push
sbb
(bad)
xor
sub
pop
fsubr
jge
aad
jbe
stc
cmp
dec
aam
inc
jecxz
fwait
cli
pop
push
sar
retfw
fdiv
push
arpl
imul
cdq
je
cmp
and
je
cdq
je
cmp
and
movs
sub
ss
lds
je
cdq
je
cmp
and
je
cdq
je
cmp
and
je
cdq
je
cmp
and
inc
xor
cmc
dec
jecxz
mov
sbb
dec
sar
add
adc
out
sbb
outs
push
sbb
mov
sub
mov
or
xor
fiadd
and
xchg
mov
out
xchg
test
scas
jae
jecxz
(bad)
fld
xlat
jbe
push
mov
in
pop
ss
inc
into
sbb
inc
retf
es
test
and
les
mov
sbb
data16
sbb
das
push
sbb
and
jmp
stos
jae
jecxz
mov
sbb
data16
jecxz
push
sbb
jae
push
dec
outs
sbb
aam
xchg
das
mov
fild
and
lahf
setnp
xchg
pop
lahf
mov
sbb
and
mov
add
sbb
jae
cmp
and
mul
xchg
mov
out
xchg
test
dec
ss
das
xchg
push
ss
dec
xor
pop
(bad)
fiadd
das
and
xchg
sbb
push
xor
popa
ss
fadd
add
pop
sbb
daa
pop
sbb
inc
ss
call
aad
das
mov
fist
jle
sbb
es
test
and
imul
fsub
call
das
(bad)
fstp
jmp
xchg
cmp
imul
(bad)
mov
dec
in
loopne
and
push
loope
retf
(bad)
mov
clc
jecxz
jmp
stos
jae
loope
es
daa
(bad)
into
jecxz
ficom
add
pop
sbb
out
fimul
into
jbe
scas
jae
cmp
jecxz
sub
or
ja
loope
ret
mov
ss
loopne
xchg
(bad)
jb
mov
jecxz
pop
in
in
sbb
xchg
je
xchg
push
ds
fsub
or
bound
movs
lea
sbb
les
inc
mov
mov
popa
xchg
pop
sub
push
xchg
sub
sbb
sbb
and
gs
jb
imul
sbb
and
gs
jb
push
and
gs
jb
imul
inc
or
xchg
jb
outs
push
leave
sbb
and
cwde
pusha
and
sbb
es
and
xchg
jle
mov
jecxz
sub
pop
xchg
sub
sbb
mov
sub
or
adc
mov
sbb
stos
int3
push
gs
and
push
loope
cdq
loop
ss
fnstenv
or
imul
and
stos
jle
pmaxub
dec
mov
adc
daa
xor
and
sbb
jge
stos
das
fcomp
gs
xor
add
outs
inc
push
cmp
jle
and
mov
jae
inc
and
xchg
das
(bad)
or
ja
sbb
mov
outs
or
pop
das
(bad)
call
and
sbb
loope
ret
es
sbb
and
cmp
xchg
jae
add
and
and
push
imul
jecxz
fmul
sbb
xchg
je
jmp
in
mov
jge
xchg
mov
xor
pop
arpl
pushf
push
and
into
lahf
and
stos
outs
and
or
popa
stos
into
lahf
and
and
or
sti
xor
and
mov
xor
push
mov
push
and
jecxz
jle
push
and
into
lahf
and
and
dec
jecxz
mov
imul
ficomp
gs
xor
push
retf
ss
push
xor
and
sbb
or
aam
test
or
ja
sbb
mov
outs
or
sbb
jecxz
into
xchg
das
xor
in
retf
xor
outs
and
sbb
mov
fs
xchg
imul
jecxz
mov
push
push
or
jmp
in
retf
xor
fsub
xor
push
push
cmp
xchg
and
sbb
and
jecxz
and
imul
mov
movq
int3
lahf
and
sbb
ss
fs
push
ss
mov
imul
(bad)
mov
data16
dec
xchg
es
test
and
sub
push
sbb
mov
and
sbb
shl
sbb
xor
das
das
sbb
imul
out
cmc
and
sbb
in
jecxz
push
sbb
or
aam
loope
and
arpl
sub
mov
ficomp
xchg
es
test
and
stos
outs
cmp
hlt
push
ss
push
inc
cmp
inc
retf
sub
retf
and
or
loopne
daa
cmps
pop
push
jae
sbb
fnstsw
loopne
sub
and
xchg
cwde
and
xor
mov
out
das
xlat
mov
dec
sahf
stos
es
ja
cmps
pop
push
int
sbb
les
nop
and
sbb
jecxz
into
fisubr
fist
aas
fstp
test
and
xchg
ds
ficomp
jecxz
into
fisubr
mov
sbb
jo
adc
jbe
fisttp
jnp
pop
push
inc
loopne
fdiv
inc
mov
fwait
push
push
(bad)
xor
ss
cmp
faddp
xchg
fmul
(bad)
shr
xchg
and
movs
xor
and
ss
sbb
cdq
mov
leave
jecxz
in
out
test
leave
sbb
es
test
and
pushf
xlat
shr
xchg
and
gs
mov
test
leave
pushf
push
es
mov
jo
mov
mov
leave
sbb
xor
stos
out
rcr
jecxz
mov
je
push
sub
mov
mov
ret
pop
(bad)
gs
cmp
push
lahf
je
cmp
lahf
inc
push
mov
jecxz
daa
mov
adc
mov
repz
fcomp
je
cmp
mov
je
cmp
aam
jecxz
xchg
ret
leave
sub
scas
pop
push
rol
mov
jecxz
daa
and
arpl
pushf
out
rcr
jecxz
and
stos
out
rcr
jecxz
dec
test
pop
xor
shl
sbb
cmps
jnp
xchg
fdiv
cdq
cdq
int3
leave
jecxz
sub
mov
shl
ss
lea
and
adc
mov
or
shl
test
and
jecxz
es
test
and
jecxz
sub
mov
ss
push
fcmove
jecxz
cmps
out
ret
xchg
fmul
sbb
xchg
je
loope
loop
xchg
fdivr
fisttp
and
pop
push
mov
test
leave
sub
push
ss
retf
fwait
inc
push
mov
fisttp
(bad)
xchg
fs
push
ss
mov
inc
retf
out
mov
xchg
fsub
xor
es
test
and
jecxz
retf
push
pop
jecxz
and
jecxz
iret
(bad)
xchg
fadd
hlt
gs
jecxz
out
xchg
das
fistp
fcomp
inc
mov
jmp
pushf
mov
leave
imul
adc
xchg
mov
fcomp
stos
shl
fistp
sbb
mov
test
leave
imul
ss
(bad)
mov
xchg
and
sbb
sub
les
es
stos
mov
mov
leave
mul
cmc
sbb
and
popf
xchg
and
sbb
push
and
(bad)
pop
nop
fmul
inc
jmp
(bad)
xchg
fdiv
sbb
and
jecxz
fmul
sbb
sbb
adc
jle
jecxz
fdiv
push
(bad)
jmp
dec
push
fistp
ss
mov
repz
fdiv
(bad)
push
mov
sbb
mov
repz
fdiv
jecxz
test
call
mov
mov
fisttp
test
or
mov
leave
xchg
call
(bad)
xchg
loop
push
jecxz
div
push
outs
retf
mov
ret
fdiv
jecxz
daa
ss
xchg
leave
sbb
xchg
je
jmp
imul
and
mov
and
xchg
out
sub
xchg
stos
hlt
pop
jle
or
and
jecxz
loope
pop
push
fmul
xchg
out
sub
xchg
test
test
xor
ret
mov
jecxz
mov
ret
xor
ret
mov
jecxz
cmps
loop
xchg
fdivr
jecxz
aas
mov
jecxz
fadd
hlt
or
loope
loop
xchg
fmul
cdq
(bad)
cld
leave
jecxz
pusha
mov
jecxz
cmps
add
fdiv
cdq
mov
leave
jecxz
sahf
aad
xchg
fdiv
imul
mov
ret
xchg
fdiv
mul
mov
jecxz
leave
cmp
cs
mov
leave
div
fdiv
push
fdiv
idiv
push
fmul
aaa
out
jmp
or
jbe
gs
mov
fisttp
add
call
push
ss
retf
or
and
jecxz
jecxz
cdq
or
ss
pop
ds
cmps
or
push
mov
jecxz
xchg
and
sub
popa
bound
cmp
cmp
sbb
test
call
jle
aaa
sbb
and
push
outs
stos
mov
mov
leave
(bad)
sub
xchg
and
jecxz
test
clc
mov
leave
xchg
call
xchg
call
imul
and
push
and
jmp
lahf
and
and
push
aas
push
sub
je
gs
mov
fisttp
xchg
jecxz
mov
leave
sbb
and
sbb
xor
ss
mov
push
sbb
cmps
rol
xchg
(bad)
sahf
jecxz
fst
loope
ret
fdiv
in
sar
xlat
(bad)
jmp
pushf
mov
call
push
loope
and
ins
and
sbb
and
jmp
sbb
cmp
ss
and
jmp
sbb
sub
sbb
and
sub
cmps
xchg
ret
aas
fcom
and
gs
mov
test
leave
dec
xchg
xchg
jmp
cld
leave
jecxz
push
iret
jecxz
mov
aad
xchg
fdiv
push
test
leave
sbb
mov
repz
fdiv
(bad)
push
and
std
push
cmps
and
mov
leave
xchg
outs
xor
cdq
sahf
int3
leave
jecxz
sahf
ret
fdiv
sbb
inc
int3
xchg
es
test
and
xor
rcr
jecxz
and
stos
out
rcr
jecxz
dec
test
pop
xor
shl
sbb
cmps
sbb
xchg
fsubr
xor
cmc
dec
jecxz
mov
push
jo
dec
loope
fld
fcmovne
mov
mov
xchg
xor
push
jae
imul
mov
push
ss
into
test
in
data16
xchg
das
jmp
jns
stos
jae
jecxz
into
xchg
pop
sti
mov
sbb
sub
sbb
rcl
sub
sahf
je
shl
sbb
rcl
es
mov
or
leavew
sbb
test
hlt
xchg
aas
fcomi
pop
xchg
and
or
and
stos
aas
fisttp
jg
inc
sbb
leavew
sbb
and
clc
lods
retfw
sbb
xor
push
xor
es
adc
scas
ss
mov
ss
leavew
sbb
push
jecxz
sbb
pop
push
adc
pusha
aaa
cmp
(bad)
outs
mov
sbb
hlt
lahf
mov
lahf
nop
es
adc
outs
mov
sbb
jne
stos
push
cmp
outs
push
xor
fstp
dec
xchg
sub
pop
imul
sbb
and
pushf
push
imul
sbb
aam
sbb
push
cmp
sub
push
imul
jae
imul
dec
xchg
fmul
fisubr
fbstp
idiv
adc
jbe
es
ins
mov
cmp
das
fbstp
pushf
pop
fbstp
outs
mov
ss
xchg
xor
sbb
daa
mov
xchg
and
stos
das
fsubr
xor
cmc
dec
jecxz
gs
cmp
xchg
daa
shl
pop
jns
ss
and
sbb
dec
ss
ins
jno
sbb
shl
and
inc
in
in
adc
pop
or
and
pop
pop
and
imul
jecxz
pop
fist
test
loopne
xchg
(bad)
fwait
xor
and
cmp
and
dec
cmp
or
cdq
xchg
cld
leave
jecxz
in
in
in
imul
mov
mov
leave
dec
xor
sbb
fmul
dec
sub
push
repnz
fild
in
in
jmp
ror
mov
mov
mov
ss
dec
ss
sub
mov
imul
stos
rcr
cmp
xor
jmp
and
sbb
and
push
ss
dec
ss
dec
ss
mov
sub
and
imul
xor
push
into
jmp
stos
jae
jecxz
pop
fadd
retf
xor
and
dec
add
fdivr
and
xchg
das
fbstp
sbb
and
adc
data16
out
into
xchg
das
xlat
leave
imul
and
dec
or
sbb
test
loopne
and
mov
aad
jbe
stc
cmp
dec
aad
sbb
inc
stos
into
sbb
push
mov
push
pop
sbb
and
and
sbb
fadd
sbb
push
lock
lods
push
sbb
mov
pop
fadd
and
retf
mov
push
mov
lahf
mov
and
imul
jo
imul
ss
scas
jae
cmp
je
ret
je
cmp
(bad)
dec
push
mov
mov
ss
retf
addr16
push
mov
xor
(bad)
fistp
stos
rcr
aad
cmp
push
sar
data16
xchg
lods
dec
ss
and
sbb
daa
pop
sbb
and
push
mul
pop
sub
cld
cmp
ss
lods
stos
into
jmp
stos
jae
jecxz
mov
xchg
push
xor
push
jne
clc
cmp
ss
scas
jae
cmp
inc
or
push
cmp
sbb
into
xor
xor
sbb
adc
pop
xor
stos
ror
jne
xchg
pop
sub
pop
xchg
retf
sub
ss
clc
mov
stos
outs
sbb
dec
adc
xlat
gs
das
pop
pop
mov
hlt
adc
sbb
push
retf
and
je
ret
je
or
push
repnz
clc
fisttp
gs
xor
cmp
cld
sub
fimul
and
lahf
scas
sub
aaa
das
dec
hlt
pop
(bad)
pop
jmp
sbb
daa
pop
das
dec
in
cmp
push
cld
sub
fidiv
cmp
ss
scas
sub
sbb
xor
jbe
stc
cmp
dec
loope
ds
pop
das
icebp
pop
xchg
icebp
and
adc
add
sbb
sbb
pop
push
ret
dec
push
outs
sub
fsub
or
pop
push
xlat
dec
push
mov
bound
sbb
pop
cmp
jno
sbb
test
loopne
loope
fsubp
jbe
inc
xor
(bad)
fistp
stos
rcr
cmp
adc
les
mov
(bad)
imul
jns
and
jns
and
xchg
popa
movs
imul
mov
mov
mov
jp
inc
sbb
jae
jb
mov
pop
push
or
repnz
ss
stos
jae
jecxz
cmp
cs
lahf
stos
cmp
dec
jecxz
push
xor
add
dec
jecxz
push
std
xchg
das
das
cmp
xchg
enter
lds
sbb
sub
pop
xchg
sub
pop
outs
shl
hlt
jmp
jno
and
popa
xchg
and
jecxz
sar
data16
xchg
test
xchg
ss
aas
sub
stos
js
out
stos
dec
aaa
sbb
sub
dec
mov
fisubr
rcl
test
jmp
pop
xchg
push
mov
xlat
xchg
das
div
pop
mov
jbe
loope
ds
jno
xor
mov
fisubr
rcl
sub
mov
dec
bound
out
das
(bad)
mov
xchg
mov
out
xchg
test
loopne
mov
mov
mov
and
pop
push
lea
rcr
or
mov
fdivr
mov
mov
or
pop
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmps
mov
mov
(bad)
cli
mov
mov
and
int3
mov
mov
fs
sub
cmps
mov
aas
cmps
mov
mov
adc
mov
mov
jecxz
mov
mov
(bad)
cli
mov
mov
iret
cmps
mov
mov
mov
mov
mov
fdiv
jl
mov
mov
inc
ficomp
and
inc
cli
mov
mov
es
and
and
sbb
test
mov
mov
xchg
and
cmps
mov
test
adc
mov
sub
cli
mov
cmps
and
cli
pop
fimul
das
cmps
mov
mov
cmps
imul
mov
jnp
nop
daa
loope
and
pop
push
mov
or
and
pop
push
cmp
sub
push
mov
mov
mov
and
pop
push
pop
sbb
mov
mov
mov
in
mov
mov
jno
mov
mov
cwde
in
ss
cli
cmps
mov
mov
(bad)
mov
mov
cmps
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
pop
sub
aaa
mov
sub
mov
mov
cmps
mov
mov
out
cli
mov
mov
and
in
mov
mov
jno
mov
mov
int3
mov
mov
cli
cmps
mov
mov
(bad)
mov
mov
cmps
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
fs
sub
cmps
mov
cmps
mov
mov
out
cli
mov
mov
mov
mov
mov
cmc
push
xor
jecxz
loopne
xchg
(bad)
mov
popa
xchg
aaa
sub
pop
data16
loopne
or
retfw
and
xchg
aas
fild
jmp
ffreep
push
ss
mov
(bad)
dec
cmp
fsubp
jbe
pushf
pop
fdiv
imul
hlt
cmp
jecxz
fisub
and
sbb
sub
dec
xchg
stos
iret
xor
jecxz
mov
in
loope
dec
nop
fwait
out
pop
push
sar
jae
jecxz
retf
cmp
or
xor
adc
xor
stos
daa
fstp
(bad)
loop
cmp
push
imul
cmp
nop
or
xchg
jp
jae
fistp
sbb
sub
push
ss
das
shl
lds
sbb
xchg
jae
cmp
mov
dec
nop
and
dec
sub
xchg
das
shl
mov
(bad)
dec
sbb
push
repnz
in
popf
pop
fild
and
and
das
sar
stos
das
das
jle
lods
sub
add
fmul
inc
xor
(bad)
fistp
stos
rcr
cmp
cmp
sbb
dec
js
push
cmp
jecxz
xchg
stos
aam
sbb
stos
fisubr
xor
jecxz
mov
fcom
popa
ss
and
fadd
scas
jae
cmp
inc
adc
cwde
into
jecxz
mov
aas
fsub
sbb
stos
pop
int3
idiv
push
sahf
je
inc
aaa
or
ins
mov
stos
pop
int3
idiv
push
sahf
je
jecxz
xor
sbb
retf
not
and
and
mov
xor
daa
and
lahf
scas
cmp
xchg
das
(bad)
or
loopne
outs
push
mov
xchg
jg
mov
adc
lahf
das
fbstp
mov
imul
mulps
sahf
je
jecxz
into
div
leave
dec
push
sar
jmp
pop
das
fstp
sbb
xor
enter
pop
outs
sti
mov
sbb
sbb
fidiv
and
xchg
das
(bad)
fidivr
and
xchg
pop
(bad)
cmp
(bad)
idiv
jp
loope
push
repz
mov
ss
sub
sbb
data16
hlt
push
outs
ss
pop
out
adc
fdivr
fisttp
push
jmp
fwait
mov
stos
(bad)
pop
outs
jecxz
pop
push
fdivrp
and
lahf
scas
das
xchg
aam
popa
ss
das
xlat
fisttp
jmp
shr
push
mov
xchg
jg
mov
adc
lahf
das
xlat
xor
imul
mulps
sahf
je
jecxz
(bad)
idiv
(bad)
pop
das
sar
sbb
xor
enter
pop
outs
sti
mov
sbb
sbb
mov
mov
aas
int3
out
loope
mov
xchg
repz
stos
cmp
jecxz
xor
sbb
xchg
arpl
mov
(bad)
mov
test
rcl
ss
sbb
sbb
pop
fstp
cmp
stos
das
retf
xchg
call
dec
or
adc
and
and
and
push
jbe
pop
sub
adc
and
xchg
das
(bad)
mov
adc
sbb
and
imul
and
imul
imul
pop
jecxz
mul
and
sar
data16
test
loopne
xchg
(bad)
mov
ss
cmp
mov
pop
mov
aam
ss
lds
jecxz
in
sbb
xchg
je
shl
sbb
ds
ret
sub
mov
fiadd
cdq
in
or
addr16
stos
aam
fst
or
xchg
mov
in
xchg
nop
stos
mov
fisubr
fdiv
test
stos
pop
fmul
jecxz
shl
fnstenv
fst
rep
xchg
test
hlt
jge
mov
jecxz
fmul
pushf
das
fdiv
xchg
das
fmul
adc
call
leave
jecxz
retf
arpl
and
imul
das
lods
cmps
xor
xchg
fadd
push
mov
xchg
fmul
dec
add
ret
ret
sub
mov
jecxz
retf
add
and
and
and
and
sbb
scas
mov
xchg
fmul
dec
xor
sbb
stos
mov
xchg
fmul
jecxz
sub
dec
and
xchg
out
ror
jecxz
jae
sbb
xchg
sahf
je
xchg
xchg
ret
(bad)
sub
and
xchg
call
call
test
es
test
and
mov
je
out
leave
loop
fsub
aad
ss
cmps
int
xchg
fsub
mov
je
out
leave
loop
fsub
push
ss
xor
push
mov
push
sar
cmps
fsubp
xchg
fdivr
test
and
mov
ss
cld
je
out
leave
loop
fsub
push
ss
add
sbb
jo
jo
popa
ss
cld
je
add
ss
retf
cmp
and
inc
push
and
inc
xor
(bad)
fistp
stos
rcr
cmp
adc
inc
stos
into
xor
outs
push
sbb
into
jmp
stos
jae
jecxz
mov
xchg
and
pop
xchg
jae
sbb
sbb
adc
ss
dec
ss
das
leave
imul
mov
pop
jmp
pop
xchg
fadd
cmp
aaa
jbe
fadd
xchg
push
retf
push
sbb
int3
or
xchg
retf
retf
push
push
imul
(bad)
popa
mov
jmp
daa
pop
push
leave
imul
pop
sbb
xchg
push
es
das
leave
imul
mov
jb
imul
stos
ror
pushf
shl
pop
or
in
les
jbe
dec
xor
pop
xor
imul
ss
mov
cmc
dec
jecxz
addr16
cmp
imul
dec
out
retf
and
push
ss
dec
ss
fadd
xchg
push
ds
xor
sbb
jecxz
sbb
(bad)
xchg
push
cs
aaa
leave
imul
leave
imul
das
leave
imul
xor
fist
imul
pop
jecxz
inc
mov
mov
mov
add
stos
jae
aad
jge
dec
mov
fisubr
in
fstp
dec
add
ss
push
ss
das
leave
imul
aas
fcomp
daa
pop
fadd
jae
jbe
dec
ss
xor
imul
das
leave
imul
cmp
imul
cmp
adc
iret
and
aam
xchg
das
sar
fistp
stos
ror
jne
mov
jmp
jo
push
mov
xchg
div
push
adc
sbb
retf
xchg
pop
push
mov
sub
xchg
div
data16
imul
pop
sbb
in
sbb
dec
ss
dec
ss
cld
je
cmp
push
retf
and
sbb
jecxz
sbb
fisttp
xchg
push
retf
and
push
sub
ss
das
(bad)
sbb
aam
push
push
imul
mov
(bad)
xchg
stos
test
cmp
and
popa
ss
cmp
cmc
dec
jecxz
addr16
cmp
mov
adc
stos
add
inc
loope
dec
xchg
stos
jmp
and
sbb
jecxz
aaa
les
fadd
cmp
push
repnz
fistp
(bad)
fisubr
ss
xchg
mov
mov
xchg
mul
sbb
fs
push
and
arpl
inc
cmp
pop
cmp
sbb
and
das
xor
sbb
mov
ss
sti
jbe
pop
stos
(bad)
sbb
and
xchg
lods
mov
ss
fadd
jecxz
aaa
les
fadd
sbb
push
jae
jecxz
pop
fsubp
jbe
xchg
mov
into
imul
test
(bad)
fistp
stos
rcr
cmp
data16
test
popf
pop
rcl
das
push
gs
cmp
sbb
data16
xchg
lods
repnz
sub
mov
push
mov
idiv
sbb
(bad)
ins
arpl
inc
push
gs
xor
jmp
adc
pop
fild
dec
(bad)
cmp
and
jp
enterw
jle
fstp
adc
pop
or
sbb
and
lahf
lods
inc
pusha
xchg
xchg
call
xchg
js
mov
fcomp
jecxz
ficom
cmp
dec
ins
ret
sub
popa
hlt
adc
sbb
out
jp
enterw
enter
inc
mov
retw
js
fistp
stos
shl
pop
ja
push
pusha
dec
aam
jne
push
loop
sbb
xchg
jecxz
fdiv
lahf
iret
iret
leave
loope
and
jecxz
fadd
cmp
adc
loopne
in
imul
fisub
inc
sbb
fbstp
and
lahf
xlat
fcmovne
loop
and
cmp
lahf
pop
push
pop
fadd
fadd
sub
push
mov
xchg
fmulp
movs
jae
ss
xchg
jecxz
fdivr
jecxz
sahf
out
jecxz
fcomp
mov
retf
jecxz
test
enter
xchg
(bad)
sbb
sbb
popa
jbe
retf
arpl
and
jecxz
in
imul
xor
sub
ss
call
adc
cmps
out
xchg
fdivr
pop
jmp
fild
sub
jecxz
fldenv
out
leave
jecxz
out
je
cld
je
xchg
push
ds
in
ss
out
je
cld
je
xchg
xchg
retf
(bad)
inc
das
and
lahf
scas
sub
and
and
movs
pusha
and
sbb
aam
lahf
nop
es
lar
(bad)
pop
push
and
(bad)
hlt
cmp
out
xchg
call
pop
push
(bad)
push
push
test
pop
adc
sbb
inc
ss
mov
mov
xchg
(bad)
dec
add
fsubp
and
lahf
scas
xor
les
and
movs
pusha
and
sbb
aam
lahf
nop
es
lar
(bad)
pop
push
and
(bad)
hlt
popf
addr16
out
je
cld
je
xchg
xchg
retf
(bad)
clc
and
lahf
scas
sub
mov
pusha
and
sbb
aam
lahf
nop
es
lar
(bad)
pop
push
and
(bad)
hlt
aad
ss
out
hlt
adc
sbb
sub
sbb
mov
xor
retf
pop
pop
push
(bad)
jg
and
test
(bad)
loop
je
and
inc
jb
push
repnz
push
adc
je
loope
retf
fsub
dec
cld
je
cmp
jg
push
mov
jle
fcomp
xor
ss
dec
addr16
sub
sbb
mov
xor
dec
(bad)
cld
sub
leave
test
and
push
repnz
sub
pop
push
and
(bad)
hlt
inc
addr16
out
hlt
and
sbb
mov
xor
dec
(bad)
cld
sub
leave
test
sub
sbb
mov
jmp
loopne
(bad)
hlt
popf
pusha
ss
out
hlt
fldenv
sbb
sub
sbb
mov
xor
retf
xchg
pop
push
(bad)
jg
and
test
(bad)
loop
je
and
mov
repnz
push
pop
sbb
aam
xchg
out
out
leave
loope
stos
lock
add
retf
xor
in
dec
retf
ret
mov
jecxz
retf
pop
pop
push
mov
jecxz
fadd
loope
retf
fsub
mov
retf
addr16
push
mov
dec
retf
pop
pop
push
(bad)
push
push
test
pop
adc
sbb
inc
ss
mov
mov
xchg
(bad)
dec
add
fiadd
sub
ss
scas
xor
cdq
mov
in
in
sub
movs
pusha
and
sbb
aam
lahf
nop
es
lar
(bad)
pop
push
and
(bad)
hlt
gs
ss
out
hlt
mov
sub
sbb
mov
xor
dec
std
ret
leave
test
or
sbb
mov
je
push
cmp
push
scas
jmp
mov
pop
in
mov
jecxz
(bad)
loop
retf
repz
push
mov
bound
lock
std
je
xchg
push
and
xchg
jae
xchg
je
push
repnz
call
xchg
mov
pop
xlat
mov
ss
(bad)
loop
retf
dec
pop
push
mov
(bad)
retf
divps
(bad)
push
push
test
pop
and
sbb
xchg
retf
(bad)
inc
sub
ss
scas
sub
or
and
movs
pusha
and
sbb
aam
lahf
nop
es
aas
and
sbb
call
xchg
jno
mov
cmp
and
xchg
bound
sbb
out
lahf
pop
add
adc
cmps
aaa
sbb
mov
leave
sbb
ins
aaa
sbb
in
sbb
fmul
sbb
int
outs
push
mov
stos
fmul
jecxz
enter
out
loope
and
daa
out
fcmovne
loop
push
dec
xchg
xlat
out
loope
and
adc
pop
or
sbb
and
jge
stos
into
movs
jo
ss
ins
fcmovu
and
aam
and
mov
fmul
jecxz
hlt
mov
or
push
leave
jecxz
dec
ins
ret
sub
mov
jecxz
retf
pop
pop
push
mov
jle
push
dec
push
sar
cmps
mov
xchg
fdivr
jecxz
fdiv
jecxz
and
sbb
mov
leave
test
xchg
push
cs
out
and
jecxz
jae
cdq
xchg
fmul
jecxz
dec
push
ret
data16
jne
ss
out
hlt
xchg
arpl
sbb
sub
sbb
mov
xor
dec
imul
and
test
cmp
adc
stc
jbe
push
cmp
push
scas
jmp
mov
pop
xlat
mov
ss
(bad)
loop
retf
iret
pop
push
mov
bound
lock
lds
sbb
sub
sbb
mov
xor
dec
(bad)
cld
sub
leave
test
sub
sbb
mov
repnz
fdiv
cdq
sahf
fmul
jecxz
cmps
into
jecxz
fmul
cdq
scas
fmul
jecxz
mov
mov
jecxz
rol
cli
jecxz
mul
xchg
fdivr
sbb
test
add
cmps
into
jecxz
(bad)
push
imul
pushf
xlat
and
jecxz
and
cwde
push
and
sbb
rol
in
jecxz
mov
aam
and
cdq
xchg
fmul
jecxz
mov
mov
jecxz
cmps
(bad)
xchg
fmul
imul
mov
jecxz
retf
das
pop
push
mov
data16
mov
lahf
mov
and
imul
fdivr
(bad)
cmps
ss
fsub
frstor
mov
loope
jae
cmp
ss
out
xlat
leave
loope
jae
lods
xchg
fmul
lahf
scas
daa
mov
jecxz
xchg
ret
fmul
imul
leave
xchg
out
(bad)
loop
jae
js
popa
ss
add
add
movs
or
call
xchg
mov
pop
inc
mov
ss
(bad)
loop
retf
xchg
and
mov
bound
lock
xor
sbb
sub
sbb
mov
xor
dec
std
ret
leave
test
sbb
push
repnz
adc
cmp
push
scas
jmp
mov
pop
in
mov
jecxz
(bad)
loop
retf
arpl
push
mov
(bad)
fadd
hlt
test
in
or
leave
cdq
sahf
fmul
jecxz
cmps
ss
fsub
(bad)
leave
loop
jo
xor
fmul
lahf
scas
das
mov
jecxz
jecxz
cdq
stc
(bad)
jecxz
sbb
pop
push
and
(bad)
hlt
ins
sbb
sbb
out
hlt
test
sub
sbb
mov
xor
dec
imul
and
test
add
sbb
mov
or
call
xchg
mov
pop
xlat
mov
ss
(bad)
loop
retf
mov
push
mov
bound
mov
xchg
fmulp
xchg
lods
retf
pop
and
(bad)
push
push
test
pop
and
sbb
xchg
retf
(bad)
nop
push
and
lahf
scas
sub
mov
ss
(bad)
loop
retf
dec
and
mov
(bad)
retf
add
push
(bad)
push
push
test
pop
adc
sbb
inc
ss
mov
mov
xchg
(bad)
dec
add
fidivr
and
lahf
scas
xor
sbb
and
movs
pusha
and
sbb
aam
lahf
nop
es
lar
pop
push
and
(bad)
hlt
jne
ss
out
popf
pushf
cmp
push
jecxz
push
(bad)
push
push
test
pop
and
sbb
xchg
retf
(bad)
call
scas
sub
lods
push
and
movs
pusha
and
sbb
aam
lahf
nop
es
lar
(bad)
pop
push
and
(bad)
hlt
movs
push
ss
out
hlt
loope
ss
sub
sbb
mov
xor
retf
dec
and
(bad)
jg
and
test
(bad)
loop
je
and
push
or
mov
call
loopne
(bad)
hlt
in
push
ss
out
xchg
call
and
(bad)
push
push
test
pop
and
sbb
xchg
retf
(bad)
inc
push
and
lahf
scas
sub
mov
ss
(bad)
loop
retf
jg
push
mov
(bad)
retf
xor
push
(bad)
push
push
test
pop
and
sbb
xchg
retf
(bad)
cmp
ss
scas
sub
mov
ss
(bad)
loop
retf
daa
and
mov
bound
ss
lods
pop
ss
sub
sbb
mov
xor
dec
(bad)
cld
sub
leave
test
add
sbb
mov
call
xchg
out
(bad)
loop
jae
push
mov
ss
add
or
movs
or
call
xchg
mov
pop
in
mov
jecxz
(bad)
loop
retf
xchg
and
mov
bound
ret
leave
test
xor
adc
ins
or
call
xchg
mov
pop
in
mov
jecxz
(bad)
loop
retf
pop
and
mov
bound
sar
cmps
mul
xchg
fdivr
sbb
call
xchg
stos
loope
lods
xor
sbb
je
mov
cmp
and
gs
ss
out
hlt
test
ss
sub
sbb
mov
xor
dec
(bad)
cld
sub
leave
test
sub
adc
std
jmp
push
and
(bad)
hlt
xchg
sbb
sbb
out
hlt
fstp
ss
sub
sbb
mov
xor
dec
(bad)
cld
sub
leave
test
xor
sbb
mov
inc
pop
push
ficom
pusha
and
sbb
aam
lahf
nop
es
aas
sbb
push
push
sbb
and
mov
cmp
and
sbb
out
je
(bad)
je
xchg
xchg
retf
(bad)
xchg
push
and
lahf
scas
sub
and
and
and
sbb
fadd
and
sbb
stos
mov
xchg
fmulp
popf
lods
mov
and
(bad)
hlt
in
sbb
sbb
and
jecxz
jae
test
xchg
xchg
fsubp
xchg
(bad)
jl
and
jecxz
retf
leave
loope
retf
iret
sub
leave
test
add
sbb
xor
lock
fmulp
inc
xor
(bad)
fistp
stos
rcr
push
mov
cs
xchg
out
fcmovne
jecxz
stos
icebp
fisubr
fdiv
not
sbb
pop
xchg
mov
ss
out
fmul
jecxz
jae
test
and
xchg
xchg
adc
xchg
lods
dec
ss
(bad)
je
out
leave
loop
fsub
imul
pushf
adc
jecxz
mov
leave
sbb
outs
push
mov
dec
push
shr
pop
push
mov
ss
and
pushf
xor
jecxz
dec
loopne
sub
pop
(bad)
mov
ss
push
and
sbb
retf
mov
fmul
fld
and
inc
mov
mov
ss
cmp
mov
xchg
adc
xchg
lods
mov
leave
sbb
ds
push
and
mov
cmps
cmps
loope
fdivr
sbb
ss
cmps
mov
in
fstp
pop
bound
pusha
hlt
and
sbb
jbe
xchg
and
pop
jecxz
xchg
loope
fsub
pop
adc
sbb
cmps
dec
loope
fmul
test
add
adc
scas
dec
loope
fdivr
dec
push
mov
into
sbb
and
sbb
stos
mov
xchg
fmul
jecxz
or
xchg
retf
(bad)
sub
mov
jecxz
xchg
scas
loope
(bad)
cld
pop
and
xchg
aas
sub
jecxz
ja
sbb
scas
inc
loope
fdivr
dec
push
stos
retf
jecxz
mov
ss
cmc
je
sbb
mov
iret
cmp
dec
es
scas
mov
xchg
fmul
dec
and
sbb
retf
arpl
push
data16
push
sbb
sbb
daa
aaa
sbb
scas
mov
xchg
fmul
dec
add
shr
pop
push
push
mov
jl
leave
jecxz
out
adc
add
cmc
xor
ss
sub
jecxz
dec
xor
xchg
(bad)
jecxz
scas
mov
xchg
fmul
dec
add
push
or
mov
jecxz
fadd
jecxz
stos
retf
jecxz
fadd
jecxz
or
xchg
jne
cdq
(bad)
leave
jecxz
retf
js
xchg
fdiv
adc
cmp
sbb
div
pushf
and
sbb
sub
push
mov
xchg
fmul
dec
or
xor
out
xchg
retf
jecxz
jae
cdq
xchg
(bad)
jecxz
retf
cmps
and
and
in
test
leave
xchg
out
cmps
retf
jecxz
dec
jb
push
mov
xchg
fmul
dec
xor
add
fistp
in
in
cdq
rcr
leave
jecxz
and
sbb
cmps
shl
xchg
fdiv
sbb
and
out
retf
enter
ss
xlat
cmps
retf
jecxz
and
or
mov
xchg
fmul
sbb
sub
ss
out
fwait
enter
fimul
call
loope
fsub
out
fwait
enter
pop
sbb
and
and
and
jecxz
dec
ss
popf
pop
ss
jecxz
cwde
mov
ss
xchg
sahf
loope
(bad)
movs
pop
and
xchg
xchg
or
xchg
lods
fadd
je
cld
je
add
pop
push
mov
xchg
fmul
dec
or
or
cmps
inc
loope
fdiv
test
xchg
out
(bad)
jecxz
jae
imul
loopne
fcomp
cmp
imul
ss
cmps
inc
loope
fdiv
xchg
out
push
retf
jecxz
pop
xor
sub
push
push
ficom
and
lahf
xlat
mov
jecxz
and
add
(bad)
sbb
retf
movaps
pop
sbb
ss
out
(bad)
jecxz
jae
hlt
fst
ss
and
mov
ss
out
(bad)
jecxz
jae
pop
xlat
fmul
lahf
scas
das
or
xchg
and
imul
leave
sbb
aas
mov
neg
leave
jecxz
mov
mul
xchg
adc
scas
sub
and
jecxz
retf
imul
and
jmp
stos
mov
xchg
fmul
xchg
lods
jne
ins
pop
and
jbe
fadd
hlt
test
xchg
xchg
loope
(bad)
mov
out
mov
cmp
les
jecxz
in
inc
xor
hlt
sbb
mov
dec
cmp
mov
adc
mov
fist
adc
sbb
loope
xchg
aas
fnstsw
fist
adc
sbb
loope
xchg
aas
(bad)
imul
mov
jmp
mov
call
gs
arpl
imul
stos
aas
aad
int3
gs
arpl
out
es
dec
ss
rcl
ss
in
repz
ss
jecxz
popa
jbe
cmp
loop
pop
sbb
cs
jecxz
jbe
sbb
adc
mov
cvtps2pi
leave
imul
jb
outs
arpl
dec
adc
sbb
fistp
in
in
imul
jb
outs
sub
dec
xchg
scas
jb
push
and
dec
gs
jae
out
xor
gs
arpl
imul
stos
aas
aad
pop
jp
data16
adc
into
dec
add
pusha
je
jo
sbb
and
fld
push
lock
test
adc
dec
leave
dec
add
in
jne
sub
and
dec
cmp
push
jae
xor
jbe
stc
shr
sbb
retf
mov
push
gs
cmp
(bad)
jno
or
stos
icebp
movs
loopne
ss
les
jecxz
in
cdq
(bad)
ret
leave
jecxz
cmp
sbb
cmps
mov
xchg
fsub
out
jecxz
jecxz
jae
jp
popa
ss
test
in
fsub
cmps
sbb
and
sbb
fadd
hlt
in
ss
out
adc
fucomip
(bad)
jecxz
fadd
or
jmp
stos
mov
mov
leave
xchg
lods
adc
pop
cmp
jecxz
cmp
sbb
cmps
mov
xchg
fsub
out
jecxz
jecxz
jae
hlt
add
jecxz
sub
fistp
in
in
jecxz
out
jecxz
retf
add
push
mov
bound
imul
fadd
jecxz
das
fmulp
inc
and
sub
jmp
or
and
mov
jecxz
inc
xor
cmc
dec
jecxz
mov
dec
and
hlt
stc
or
sbb
jne
xchg
aaa
sub
popf
lods
add
sbb
stos
(bad)
sbb
add
aaa
sbb
retf
outs
sub
and
pop
jmp
fild
sub
hlt
dec
lahf
leave
jecxz
out
je
cld
je
cmp
jae
push
mov
bound
ss
call
ret
sub
mov
jecxz
retf
aaa
sub
mov
(bad)
retf
xlat
das
push
(bad)
push
push
test
pop
and
je
out
ss
xchg
fsub
xchg
adc
sbb
out
hlt
rcl
ss
sub
sbb
mov
xor
retf
lahf
das
push
(bad)
jg
and
test
and
jecxz
je
inc
mov
ss
xlat
and
jecxz
je
mov
scas
xor
pushf
pop
and
movs
pusha
and
sbb
aam
lahf
nop
es
or
rcl
pop
push
mov
mov
leave
dec
cmp
adc
rcr
in
jecxz
pop
sub
and
jecxz
jae
cwde
pop
and
lahf
scas
sub
pop
pop
and
movs
pusha
and
sbb
aam
lahf
nop
es
or
rcl
pop
push
mov
mov
leave
dec
cmp
push
repnz
cmp
sbb
and
sbb
or
adc
and
movs
or
ss
aam
dec
out
ss
xchg
fsub
xor
je
out
ss
xchg
fsub
xchg
adc
sbb
out
jecxz
xor
mov
ss
out
and
jecxz
jae
cmp
out
and
jecxz
jae
rcr
lahf
scas
aaa
mov
cdq
sahf
cld
leave
jecxz
in
lods
pop
and
movs
pusha
and
sbb
aam
lahf
nop
es
or
rcl
pop
push
mov
mov
leave
dec
sub
sbb
mov
jmp
sbb
fmul
dec
sbb
adc
push
add
push
cmp
push
scas
jmp
mov
pop
in
mov
xchg
out
and
jecxz
jae
mov
ss
scas
sub
mov
ss
out
and
jecxz
jae
pushf
pop
and
lahf
scas
sub
cdq
call
sub
and
movs
pusha
and
sbb
aam
lahf
nop
es
xor
push
push
sbb
and
mov
cmp
and
jecxz
retf
and
push
mov
jp
pop
ret
mov
jecxz
retf
adc
push
mov
(bad)
retf
xlat
sub
push
test
pop
and
je
out
ss
xchg
fsub
xchg
adc
sbb
out
je
push
cmps
ss
xchg
fsub
adc
ds
call
sub
push
test
pop
and
je
out
ss
xchg
fsub
aad
ss
out
je
std
je
out
ss
xchg
fsub
rcl
sbb
out
hlt
or
sub
sbb
mov
xor
dec
(bad)
cld
sub
mov
jecxz
retf
mov
push
mov
bound
ss
das
mov
jecxz
dec
sbb
sub
mov
jecxz
retf
or
jp
sub
push
test
pop
and
je
out
ss
xchg
fsub
push
adc
sbb
out
je
std
je
out
ss
xchg
fsub
dec
adc
sbb
out
hlt
mov
ss
sub
sbb
mov
xor
dec
(bad)
cld
sub
mov
jecxz
retf
aaa
sub
bound
sar
cmps
fcmovb
xchg
fdivr
sbb
call
xchg
stos
loope
lods
xor
sbb
je
mov
cmp
and
jecxz
retf
stos
sub
and
sub
and
test
pop
and
je
out
ss
xchg
fsub
icebp
adc
sbb
out
je
(bad)
je
out
ss
xchg
fsub
in
adc
sbb
out
popf
test
or
and
test
pop
and
je
out
ss
xchg
fsub
xor
ss
out
hlt
jge
ss
sub
sbb
mov
xor
retf
xor
and
test
and
jecxz
je
inc
mov
ss
xlat
and
jecxz
je
loopne
and
lahf
scas
xor
mov
ss
out
and
jecxz
jae
adc
ss
scas
sub
and
and
and
sbb
jo
xchg
inc
and
xchg
out
fucomip
jecxz
mov
ss
out
and
jecxz
jae
adc
ss
scas
mov
mov
leave
dec
cmp
leave
dec
xchg
xchg
retf
(bad)
clc
inc
and
jecxz
fucomip
jecxz
retf
dec
aaa
push
pop
fsubr
enter
or
xchg
lods
jl
inc
mov
mov
ss
cmp
mov
psubusb
xchg
aam
xchg
out
cmps
int
xchg
stos
icebp
lahf
iret
mov
pop
jmp
mov
mov
aas
sub
mov
fmulp
jecxz
fcmovnb
sti
jecxz
mov
xchg
fdivr
sbb
jae
sub
ss
push
xlat
leave
jecxz
in
sub
pop
sbb
popa
ss
sbb
cmps
xchg
loope
fcomp
and
jecxz
retf
div
push
pop
sbb
ss
out
xchg
retf
jecxz
jae
mov
popa
ss
push
and
sbb
retf
(bad)
stc
xchg
fdiv
adc
mov
push
xor
xchg
(bad)
jecxz
scas
mov
xchg
fmul
dec
sbb
sbb
stos
into
sbb
fild
mov
jecxz
retf
pop
out
fdiv
adc
push
xor
push
xchg
shr
mov
jecxz
retf
lahf
xor
mov
jecxz
scas
mov
xchg
fmul
dec
xor
stc
xchg
fdivr
jecxz
(bad)
in
in
pop
add
mov
jecxz
retf
and
push
mov
jbe
icebp
or
ss
fwait
enter
ss
in
clc
xchg
fmul
sbb
xlat
mov
inc
add
mov
xchg
fmul
sbb
add
ss
out
fwait
enter
fiadd
mov
leave
inc
out
xchg
loope
fsub
out
fwait
enter
pop
sbb
and
and
and
jecxz
dec
ss
xchg
or
sbb
jecxz
cwde
call
xchg
sahf
loope
(bad)
fadd
ss
xchg
and
xchg
lods
fadd
je
cld
je
add
pop
push
mov
xchg
fmul
dec
adc
or
cmps
dec
out
fdiv
test
xchg
out
(bad)
jecxz
jae
imul
in
fcomp
cmp
imul
ss
cmps
dec
out
fdiv
xchg
out
pop
int
xchg
pop
xor
sub
adc
sub
sbb
dec
ss
push
fimul
ss
xchg
or
xchg
lods
dec
xor
cli
(bad)
jecxz
jne
aam
and
jbe
dec
pop
shr
mov
jecxz
retf
arpl
pushw
leave
jecxz
and
cwde
lods
and
sbb
cmps
mov
dec
adc
adc
jecxz
cwde
les
ss
and
test
out
mov
hlt
and
aam
ja
and
jecxz
fadd
hlt
es
leave
jecxz
in
test
sub
push
cmp
add
ss
add
jmp
and
lahf
scas
aaa
aas
fcomp
or
mov
ss
xchg
or
sbb
mov
mov
push
jo
fild
gs
mov
jecxz
retf
add
xchg
fdiv
xchg
out
mov
fisubr
cmp
test
cmp
jecxz
mov
shl
and
ins
or
sbb
cmps
stos
loope
fdiv
sbb
and
jecxz
retf
push
imul
fild
and
test
sbb
mov
jne
ss
cmps
stos
loope
(bad)
sbb
aam
jle
and
xor
hlt
sbb
mov
dec
cmp
mov
jns
inc
mov
xchg
jne
sbb
retf
arpl
xchg
fadd
sub
push
arpl
out
xor
cmp
hlt
adc
ss
in
dec
add
push
push
sar
retw
jo
cmp
and
jecxz
das
mov
hlt
ins
add
sbb
retf
outs
cmp
mov
sbb
dec
cdq
inc
sub
pop
sbb
and
or
and
xchg
lods
dec
leave
dec
sbb
jmp
stos
jae
jecxz
mov
hlt
sub
sbb
retf
pop
cmp
mov
inc
mov
fwait
ss
and
mov
dec
cmp
add
ss
es
imul
mov
in
in
jmp
pop
jecxz
and
xchg
out
and
jecxz
jae
hlt
lea
ss
and
imul
leave
dec
and
xchg
mov
leave
sbb
push
xor
popf
cmp
xor
or
test
jbe
stc
jmp
pusha
jno
je
shl
enterw
push
adc
enterw
jmp
retf
out
push
mov
inc
jp
sbb
retw
and
imul
jecxz
mov
pop
xor
das
fnsave
jecxz
popa
ss
das
xlat
data16
cmc
or
sbb
out
xchg
das
xlat
data16
dec
jne
push
leave
sub
ja
sbb
sbb
inc
leave
pop
xchg
sub
pop
xchg
mov
imul
jmp
popf
inc
daa
jb
mov
bound
ss
stos
jae
jecxz
pop
sbb
and
and
and
and
mov
sbb
dec
ss
dec
xor
retf
or
ror
sbb
aam
xchg
das
fstp
jbe
fadd
cwde
retf
popa
ss
in
ss
and
pop
fadd
hlt
mul
hlt
adc
and
pop
fadd
pushf
retf
popa
ss
add
and
pop
fadd
xor
bound
hlt
xor
and
pop
fadd
add
arpl
hlt
and
int
dec
push
pop
sbb
pop
or
xor
and
dec
push
jecxz
add
xor
and
dec
push
jecxz
mov
pop
push
das
xor
and
dec
push
jecxz
push
xchg
pop
push
aas
xor
and
fiadd
and
pop
fadd
sub
bound
hlt
cdq
add
sbb
and
pop
fadd
in
mul
hlt
mov
sbb
and
pop
fadd
mov
popa
ss
mov
and
pop
fadd
test
popa
ss
test
xchg
push
sbb
aam
xchg
das
xlat
mov
fistp
pop
mov
cmp
ss
(bad)
sub
adc
adc
sub
pop
or
arpl
jbe
fadd
hlt
mul
hlt
push
add
sbb
(bad)
sub
xor
adc
or
sub
pop
or
arpl
jbe
fadd
pushf
retf
popa
ss
jge
ss
aam
adc
and
push
sbb
dec
and
mov
add
mov
push
retf
pop
pop
push
fstp
push
pop
loopne
push
sub
dec
and
mov
add
mov
push
retf
aas
mov
cmp
pop
loopne
push
push
sub
fisubr
xor
mov
push
retf
or
cmp
pop
loopne
push
push
sub
ficom
inc
mov
mov
push
retf
add
cmp
mov
fild
(bad)
sub
xor
adc
sub
sub
pop
or
arpl
jbe
fadd
cwde
retf
popa
ss
cmp
loopne
xchg
(bad)
mov
mov
adc
sbb
dec
ret
(bad)
sub
leave
imul
mov
pop
push
ficomp
scas
xor
jbe
jae
fs
and
popf
popf
sub
push
jae
cmp
jo
and
jbe
fadd
sub
bound
jbe
jne
pop
xchg
or
cmp
(bad)
dec
add
pop
sbb
and
pushf
cmp
ret
sub
pop
std
mov
ss
and
sbb
sbb
jb
sub
pop
sbb
push
add
cmp
xchg
das
fistp
js
dec
and
dec
ss
jae
fdiv
clc
je
add
ficom
and
mov
jecxz
pop
in
in
sbb
push
add
xchg
push
jb
sub
pop
mov
ss
das
fistp
js
dec
addr16
dec
aas
sbb
jae
shl
je
add
(bad)
dec
and
mov
add
pop
push
add
pop
sbb
es
sbb
add
pop
mov
push
ss
dec
and
ins
add
pop
sbb
pop
daa
test
cmp
pop
sbb
push
add
xchg
push
jb
sub
pop
or
adc
push
jbe
dec
ss
jae
jo
popa
ss
clc
je
add
fiadd
ss
jmp
push
imul
add
xchg
push
jb
sub
pop
or
add
push
dec
jbe
dec
ss
jae
add
popa
ss
clc
je
add
fiadd
dec
and
mov
add
leave
sub
ja
add
leave
sub
xor
xor
imul
je
and
sbb
or
push
data16
stc
je
add
in
pop
push
ss
mov
ss
das
test
jecxz
pop
test
jecxz
addr16
pop
push
es
and
sbb
popf
ss
dec
push
je
and
dec
add
in
(bad)
sub
pop
sbb
mov
sbb
and
sub
pop
sbb
push
add
xchg
push
push
mov
add
mov
and
jbe
dec
xor
shl
je
add
fisubr
and
mov
jmp
mov
data16
ss
dec
jne
push
data16
pop
pop
ss
push
in
pop
push
ss
and
sbb
push
fiadd
dec
and
jbe
fadd
sub
bound
jbe
fadd
jl
popa
ss
and
sbb
adc
push
ss
dec
xor
shl
je
add
ficom
dec
and
mov
jmp
push
push
pop
sbb
push
add
xchg
push
push
mov
imul
jbe
dec
pushf
sbb
and
push
ss
and
pop
push
mov
sub
pop
sbb
jmp
sbb
nop
fmul
jbe
fadd
sub
bound
jbe
fadd
pop
retf
jbe
dec
or
sbb
dec
aaa
sbb
dec
ss
jae
ja
popa
ss
clc
je
add
ficom
cli
xor
sar
data16
pop
pop
test
jecxz
addr16
pop
push
es
and
sbb
fdiv
sbb
dec
and
push
data16
stc
je
add
in
pop
push
ss
sub
push
xchg
pop
push
ss
pop
test
jecxz
addr16
pop
push
es
dec
cs
push
ss
and
dec
add
pop
push
in
(bad)
sub
pop
sbb
sub
push
test
and
push
add
xchg
push
jb
sub
pop
or
fidiv
sbb
dec
pop
sbb
add
ss
dec
and
(bad)
mov
ss
retf
jecxz
push
xchg
in
mul
jbe
fadd
sub
bound
jbe
fadd
pop
retf
jbe
dec
pusha
je
and
sbb
xor
push
ss
jae
sbb
clc
je
add
fiadd
inc
leave
sub
ja
add
leave
sub
xor
pop
xor
ss
and
sbb
aaa
pop
sbb
mov
je
add
in
pop
push
ss
push
fidivr
ss
add
leave
sub
ja
add
leave
sub
xor
pop
sahf
push
ss
and
sbb
aaa
pop
sbb
mov
je
add
in
pop
push
ss
push
fidivr
dec
and
mov
jecxz
pop
in
in
sbb
push
add
xchg
push
push
mov
add
pop
shr
jbe
dec
ss
jae
shl
je
add
xor
push
sar
cmc
bound
jbe
fadd
sub
bound
jbe
fadd
jl
popa
ss
dec
push
je
and
sbb
aaa
pop
sbb
mov
je
add
in
pop
push
ss
push
fidiv
dec
mov
leave
sub
ja
add
leave
sub
xor
xor
xchg
ss
and
sbb
cmp
data16
cli
je
add
out
pop
push
ss
sbb
ss
mov
ins
in
fdivr
fild
jl
aad
jbe
stc
jmp
pushf
add
aas
mov
fild
(bad)
in
pop
push
inc
adc
or
jecxz
stos
lock
clc
je
cmp
sub
xchg
fdiv
sub
mov
fild
and
sub
ja
and
in
cmp
sbb
and
jbe
fadd
sub
bound
jbe
jne
pop
xchg
or
cmp
(bad)
dec
add
pop
sbb
and
pushf
cmp
ret
sub
pop
std
mov
ss
and
sbb
icebp
push
sbb
xor
and
push
add
cmp
xchg
das
fistp
js
dec
and
dec
ss
jae
aad
popa
ss
clc
je
add
fiadd
outs
mov
pop
pop
push
pop
sbb
push
add
xchg
push
jb
sub
pop
xor
ss
das
fistp
js
dec
addr16
dec
aas
sbb
jae
shl
je
add
fiadd
ss
add
pop
push
add
pop
sbb
es
sbb
add
pop
mov
push
ss
dec
and
icebp
add
sbb
in
sbb
pop
daa
test
add
pop
sbb
push
add
xchg
push
push
mov
add
or
aaa
pop
pop
push
data16
cld
je
add
ss
test
sbb
retf
stos
pop
push
fld
adc
je
add
pop
pop
imul
dec
or
(bad)
sub
pop
sbb
pusha
aaa
sbb
fadd
hlt
mul
hlt
std
cmp
sbb
push
cmps
mov
jl
ss
dec
js
push
leave
sub
pop
sub
enter
dec
ss
and
sbb
push
fiadd
jne
ss
fadd
sub
bound
jbe
fadd
jl
popa
ss
and
sbb
adc
pop
pop
pop
push
data16
cld
je
add
ss
cmp
mov
into
sbb
push
add
cmc
bound
jbe
fadd
jl
popa
ss
and
sbb
pop
pop
or
lea
sbb
dec
xor
shl
je
add
fiadd
mov
ret
jecxz
dec
ss
pop
test
jecxz
addr16
pop
push
es
and
sbb
dec
pop
or
ss
and
dec
add
pop
push
in
(bad)
sub
pop
sbb
stc
sub
add
and
push
add
xchg
push
jb
sub
pop
or
inc
pop
fwait
push
ss
and
sbb
and
sbb
dec
je
sub
pop
(bad)
mov
ss
retf
xchg
add
xchg
sub
bound
movs
adc
sbb
les
jbe
fadd
sub
bound
jbe
fadd
pop
retf
jbe
dec
retf
sbb
and
push
ss
dec
ss
jae
cmpxchg
je
clc
je
add
fiadd
and
mov
add
leave
sub
ja
add
leave
sub
xor
xor
call
push
pop
sbb
and
ins
stc
je
add
in
pop
push
ss
dec
cmp
xchg
pop
push
ss
pop
test
jecxz
addr16
pop
push
es
and
sbb
lds
sbb
dec
sub
ss
add
pop
push
in
(bad)
sub
pop
sbb
leave
sub
or
and
push
add
xchg
push
jb
sub
pop
or
fidiv
sbb
dec
leave
sbb
and
and
sbb
dec
popa
lds
and
mov
ss
retf
xchg
push
xchg
mov
push
add
cmc
bound
jbe
fadd
jl
popa
ss
dec
mov
push
pop
xor
aaa
pop
sbb
mov
je
add
in
pop
push
ss
push
fisub
ss
jmp
mov
push
pop
sbb
push
add
xchg
push
push
mov
add
pop
pop
add
pop
sbb
mov
je
add
in
pop
push
ss
push
fisub
ja
ss
add
leave
sub
ja
add
leave
sub
xor
pop
js
jl
or
and
pushf
cmp
ret
sub
pop
sbb
push
ss
and
push
sub
pop
sbb
push
add
xchg
push
jb
sub
pop
or
mov
jbe
push
pop
add
and
pushf
cmp
lds
and
mov
ss
retf
sti
add
xchg
test
popa
ss
(bad)
leave
jecxz
cli
fs
aam
xchg
das
retf
mov
jecxz
jl
aad
jbe
stc
jmp
je
ds
call
das
iret
mov
pushf
push
ss
dec
ss
dec
ss
mov
stos
push
push
mov
adc
mov
sbb
dec
ss
cmp
dec
adc
loopne
in
call
jecxz
sar
data16
cmp
jae
cmp
inc
or
push
sbb
aaa
sbb
mov
leave
lahf
scas
cmp
inc
xchg
push
jno
push
inc
loopne
jno
pop
push
(bad)
lds
and
imul
shl
xchg
mov
into
adc
outs
dec
xor
pop
xor
fisub
je
and
pushf
sbb
mov
pop
in
in
inc
xor
cmc
dec
jecxz
mov
bound
ss
jne
stos
inc
cmp
(bad)
xchg
lods
mov
ss
xchg
je
out
ss
fsub
xor
fldcw
sbb
call
xchg
stos
in
aaa
fdiv
or
push
mov
xchg
fmul
dec
adc
xor
pop
fdiv
jnp
out
lods
sub
mov
jecxz
retf
das
add
and
or
push
mov
xchg
fmul
dec
and
sbb
mov
daa
je
xchg
je
out
ss
fsub
xor
in
jecxz
mov
xchg
es
or
push
mov
xchg
fmul
dec
sub
sbb
mov
daa
je
xchg
je
out
ss
fsub
fnsave
sbb
pop
leave
sbb
xor
(bad)
xchg
out
and
jecxz
jae
mov
pop
fdivr
imul
mov
jecxz
retf
mov
in
inc
sar
adc
(bad)
xchg
out
and
jecxz
jae
jo
and
pushf
pop
fdivr
jnp
jmp
cdq
push
leave
jecxz
retf
arpl
push
mov
xchg
sub
add
test
scas
mov
xchg
fmul
dec
sbb
jecxz
push
daa
je
xchg
je
out
ss
fsub
dec
xor
sbb
pop
leave
adc
xor
fsub
xchg
out
and
jecxz
jae
or
and
xchg
call
jecxz
stos
lock
pop
fdivr
imul
mov
jecxz
retf
fisttp
push
pop
sbb
and
mov
ss
cli
je
out
ss
fsub
push
ja
or
jecxz
dec
or
mov
sub
jecxz
dec
idiv
arpl
fsubrp
jo
ss
scas
or
cdq
xchg
(bad)
jecxz
in
cmp
hlt
sbb
mov
xchg
pop
sub
xchg
xchg
or
xchg
lods
stos
ror
cs
scas
push
imul
int3
leave
jecxz
out
adc
push
fimul
and
inc
xor
imul
and
(bad)
mov
ss
cmp
mov
push
bound
popf
pushf
push
pop
sbb
mov
ss
xchg
je
out
fucomi
xchg
fsub
inc
xor
sub
push
cmp
and
out
xchg
fmul
pushf
xlat
ror
jecxz
and
add
mov
popf
fmul
dec
sbb
sbb
mov
leave
push
pop
xor
fsub
xchg
out
into
shl
jae
clc
jg
ss
xlat
ror
jecxz
and
add
test
scas
mov
popf
fmul
dec
sub
sbb
fwait
xchg
or
jecxz
shr
xchg
fdivr
in
fdiv
imul
mov
jecxz
retf
xchg
or
mov
cdq
fcmovne
jecxz
push
daa
je
nop
je
out
fucomi
xchg
fsub
in
ss
sahf
(bad)
fdiv
imul
mov
jecxz
retf
pop
or
mov
cdq
fcmovne
jecxz
push
daa
je
nop
je
out
fucomi
xchg
fsub
cmp
ss
shl
in
jecxz
mov
cdq
fcmovne
jecxz
push
daa
je
nop
je
out
fucomi
xchg
fsub
pop
ss
sahf
(bad)
fdivr
imul
mov
jecxz
retf
das
or
mov
cdq
fcmovne
jecxz
push
daa
je
nop
je
out
fucomi
xchg
fsub
xchg
aaa
ss
sahf
(bad)
fdivr
scas
sub
mov
jecxz
retf
ror
push
mov
cdq
mov
leave
jecxz
in
mov
push
daa
je
nop
je
out
fucomi
xchg
fsub
aad
ss
sahf
(bad)
fdivr
imul
mov
jecxz
retf
xchg
or
mov
cdq
fcmovne
jecxz
push
daa
je
xchg
je
out
fucomi
xchg
fsub
loope
ss
push
xchg
pop
push
mov
popf
fmul
dec
xor
jecxz
stos
(bad)
jmp
stos
mov
popf
fmul
xchg
lods
dec
inc
mov
fsub
hlt
xchg
iret
leave
jecxz
out
xchg
out
retf
shl
mov
leave
cs
cs
adc
jecxz
sub
daa
imul
cmp
jmp
stos
mov
popf
fmul
xchg
lods
or
xchg
lods
adc
jbe
dec
inc
mov
test
sub
jecxz
jecxz
cdq
mov
ss
and
loopne
fmul
sbb
cmps
call
push
mov
xchg
(bad)
jecxz
sub
daa
imul
pushf
xlat
fmul
jecxz
sbb
cdq
inc
and
sbb
cmps
leave
loopne
fdiv
movs
and
ss
lds
jecxz
in
cdq
xchg
fcmovne
jecxz
dec
add
sub
mov
jecxz
retf
mov
push
mov
data16
leave
sbb
or
pop
jb
cmps
test
stos
imul
and
sbb
stos
out
jecxz
jno
xlat
fcmovne
jecxz
sub
push
push
inc
stos
pop
push
inc
sub
mov
pop
push
sbb
sub
mov
jecxz
retf
and
and
fiadd
mov
pop
push
sub
sub
mov
jecxz
retf
iret
or
mov
jb
jp
push
ss
cmps
retf
fsub
dec
aaa
ss
nop
push
push
rcl
xchg
stos
lock
out
(bad)
jecxz
jae
or
popa
ss
out
(bad)
jecxz
jae
mov
imul
retf
fsub
movs
xor
sbb
out
xchg
out
(bad)
jecxz
jae
or
ss
out
(bad)
jecxz
mov
mov
xchg
fmul
dec
add
out
pop
push
mov
xchg
fmul
dec
sbb
push
repnz
and
jecxz
retf
xchg
or
pop
sbb
push
mov
xchg
fmul
dec
sbb
xchg
mov
cmp
out
retf
fdiv
sar
jecxz
into
in
fdivr
cdq
mov
in
mov
pusha
sub
sub
ss
fcmovne
jecxz
dec
cmps
mov
mov
ss
out
(bad)
jecxz
jae
sbb
and
lahf
scas
xor
fsub
xchg
out
(bad)
jecxz
jae
sub
ss
out
(bad)
jecxz
jae
sub
ss
out
test
xchg
out
test
sbb
push
es
out
test
sbb
enter
test
enter
pop
sbb
lds
jecxz
in
test
out
retf
fsub
mov
cmps
retf
fsub
adc
out
xchg
out
(bad)
jecxz
jae
fdivr
ss
out
jmp
jecxz
scas
mov
xchg
fmul
dec
adc
aam
fmul
xchg
push
and
dec
add
cld
js
ss
out
xlat
into
jecxz
mov
ss
out
(bad)
jecxz
jae
test
adc
push
mov
xchg
fmul
dec
adc
push
mov
xchg
fmul
dec
loope
ret
fdivr
hlt
cmp
ss
cmps
into
in
fsub
push
sub
fmul
je
push
jbe
add
pop
sbb
jns
sbb
jae
enter
xchg
out
(bad)
jecxz
jae
jecxz
iret
into
jecxz
retf
iret
rcl
stos
cmc
adc
xchg
fmul
jecxz
iret
into
jecxz
retf
imul
and
sbb
arpl
push
add
push
outs
cmc
(bad)
fxch
jecxz
jge
aad
daa
ss
jecxz
mov
and
hlt
shl
ss
jne
cmps
enter
jecxz
pop
(bad)
mov
popa
ss
dec
aaa
sbb
and
cmp
and
xchg
out
xchg
jecxz
sub
push
jnp
ss
retf
aas
or
outs
popf
cmp
test
dec
mul
mov
ss
mov
aad
out
xchg
fninit
xchg
stos
cmc
je
mov
daa
sbb
dec
leave
sbb
and
retf
popa
ss
dec
xor
sbb
adc
fidivr
and
popf
and
xor
fcmovne
leave
jecxz
fadd
sub
sbb
dec
aaa
je
xor
xchg
xchg
fsub
popa
mov
and
cmps
sub
push
xchg
je
(bad)
adc
popa
ss
push
sbb
cmc
js
and
hlt
leave
aaa
ss
lock
jp
mov
out
loop
add
mov
lahf
lods
bound
icebp
xchg
fdiv
cdq
fxch
leave
jecxz
enter
aaa
ss
xchg
mov
mov
stos
imul
and
sbb
stos
out
jecxz
mov
or
xchg
icebp
xchg
fdiv
jecxz
test
leave
and
neg
push
mov
xchg
leave
sbb
add
hlt
jmp
lahf
icebp
xchg
fadd
jecxz
adc
jecxz
dec
cmps
mov
mov
ss
out
mov
ficom
jle
ss
cdq
gs
push
ss
out
mov
mov
jecxz
retf
jg
push
mov
jecxz
retf
jo
xchg
fdivr
jecxz
retf
(bad)
fist
dec
ss
out
mov
ficomp
jnp
ss
retf
add
push
mov
popf
add
out
pop
push
cmps
mov
mov
ss
mov
and
jle
fmul
xchg
pop
daa
loopne
push
pop
sbb
and
jp
dec
add
and
retf
popa
ss
sti
je
add
pop
push
inc
punpckhdq
mov
(bad)
sahf
push
repnz
fdivr
sbb
ds
rcl
add
cmps
mov
mov
ss
mov
sbb
popa
and
inc
mov
adc
jp
dec
xchg
les
and
retf
popa
ss
sti
je
add
test
push
and
push
mov
sub
leave
xchg
pop
in
pop
push
aas
sbb
and
mov
jecxz
pop
sbb
and
and
and
sbb
dec
sub
fiadd
xchg
pop
push
add
pop
sbb
retf
fwait
adc
icebp
pop
rcr
cmp
scas
jae
cmp
leave
dec
xor
push
mov
lahf
mov
and
imul
sahf
xor
fsub
pop
xchg
faddp
and
jbe
scas
jae
cmp
je
ret
je
xchg
push
xor
sub
sbb
enter
and
pop
rcr
cmp
scas
jae
cmp
leave
dec
adc
push
mov
lahf
mov
and
imul
sahf
xor
fsub
pop
xchg
ficomp
push
jae
cmp
je
ret
je
xchg
push
xor
sub
sbb
push
xor
sub
inc
sbb
aam
xchg
out
xchg
fninit
xchg
test
lods
xchg
leave
xchg
test
popa
ss
das
ret
xchg
sub
bound
xchg
das
out
mov
sbb
data16
ss
and
mov
das
neg
adc
retf
(bad)
adc
mov
enter
fld
push
sbb
and
mov
sbb
stos
jae
lods
data16
push
ss
mov
out
xchg
test
and
sbb
data16
sbb
and
xchg
das
lahf
data16
stc
sub
sbb
and
sub
ja
add
pop
sbb
and
and
and
(bad)
push
xlat
(bad)
sub
pop
std
mov
ss
retf
xor
and
je
xchg
je
add
pop
sbb
popa
cmp
dec
ss
enter
jmp
cs
and
sbb
push
sbb
je
cmp
sbb
dec
dec
les
and
dec
cs
cmps
call
xor
sbb
loope
sbb
dec
aaa
dec
xchg
mov
icebp
xchg
fdiv
cdq
(bad)
int
jecxz
and
sbb
sti
pop
(bad)
cdq
ror
leave
jecxz
scas
mov
test
leave
dec
add
pop
push
dec
les
and
fisub
je
and
pushf
sub
arpl
inc
sbb
push
pop
test
and
fld
sbb
ss
retf
mov
les
mov
repnz
fsub
push
ss
push
jbe
add
pop
sbb
sub
ficom
mov
jecxz
jae
sbb
and
sbb
jbe
dec
ss
test
ss
retf
pop
adc
pop
sbb
xlat
aaa
sbb
dec
aaa
jecxz
and
adc
fld
data16
cmp
mov
ss
das
(bad)
data16
(bad)
pop
sbb
and
dec
and
adc
xor
(bad)
fidivr
arpl
push
je
add
jno
popf
lods
inc
xor
adc
(bad)
adc
mov
sbb
pop
cmp
mov
sbb
jmp
daa
sbb
sbb
ss
xor
sbb
push
sub
sbb
scas
fwait
adc
and
and
and
adc
pop
aaa
sbb
retf
push
mov
add
mov
push
ss
clc
je
xchg
push
pop
test
and
and
iret
retf
jecxz
stos
into
sbb
xchg
je
xchg
xchg
(bad)
xchg
(bad)
aas
mov
leave
lahf
scas
xor
jecxz
cmps
out
loope
fsub
(bad)
retf
jecxz
retf
daa
adc
aas
fsub
mov
push
mov
jecxz
fadd
pop
retf
hlt
popf
das
ss
jecxz
jae
cmps
(bad)
loope
fcomp
jecxz
retf
xor
xchg
or
and
out
(bad)
retf
jecxz
or
lahf
and
mov
mov
loope
fmul
int3
push
adc
cmps
shl
xchg
fcomp
jecxz
test
cld
xchg
fmul
aaa
out
sti
retf
jecxz
jae
sbb
and
sub
xor
mov
sbb
mov
ss
push
inc
sbb
cmp
retf
inc
sbb
pop
test
and
sbb
push
push
test
and
pushf
push
push
sbb
inc
sbb
retf
leave
not
push
sbb
cmp
xchg
push
pop
test
and
arpl
xor
stos
into
sbb
push
ja
push
ds
inc
xor
dec
ss
ins
cs
js
sbb
xor
sub
mulps
ds
sub
or
movs
jo
ss
les
jecxz
in
sub
ss
das
aaa
mov
jecxz
aam
ss
or
sbb
addr16
sbb
pop
or
sbb
pop
or
sbb
prefetch
inc
or
sbb
aas
or
sbb
aaa
or
sbb
das
or
sbb
cmps
in
sbb
pop
sbb
push
es
mov
ss
cmps
into
loop
fmul
sbb
xor
sbb
sub
sbb
cs
lods
jp
ss
xor
movs
and
je
fmul
sbb
push
es
cmc
das
ss
push
sbb
aam
xchg
out
sti
retf
jecxz
stos
icebp
lahf
iret
dec
jecxz
and
jecxz
scas
mov
xchg
fmul
dec
sub
hlt
xchg
fmul
popf
lods
cmps
sub
push
push
in
fstp
sbb
scas
mov
xchg
fmul
dec
xchg
push
fiadd
pusha
and
pushf
xlat
and
jecxz
and
add
pop
sbb
jo
pop
push
ss
cmp
push
fiadd
popa
and
cmc
pushf
es
fild
in
in
cdq
imul
jecxz
cmps
ret
loope
fdiv
cdq
pushf
fmulp
jecxz
mov
ss
push
pop
jecxz
and
xchg
out
and
jecxz
jae
sub
xor
cmp
push
mov
lahf
mov
and
imul
jge
pop
push
stos
sbb
sbb
jecxz
mov
leave
sbb
push
push
jbe
dec
ss
sti
je
add
(bad)
pusha
and
jecxz
cmps
xchg
pop
push
inc
push
push
fistp
and
movs
in
push
ss
les
jecxz
in
cdq
imul
jecxz
scas
mov
xchg
fmul
dec
add
out
pop
push
mov
xchg
fmul
dec
and
or
fdiv
sbb
scas
mov
xchg
fmul
dec
xchg
push
sub
arpl
ss
xlat
and
jecxz
and
add
pop
sbb
sub
ss
cmp
push
sub
pusha
and
cmc
pushf
daa
ss
scas
aaa
jecxz
fdiv
and
inc
in
(bad)
push
push
ror
sub
pop
sbb
add
push
add
jmp
hlt
movs
sub
sbb
loop
sbb
in
sbb
fmul
sbb
push
cmp
xchg
test
leave
jecxz
adc
push
sbb
add
pop
sbb
(bad)
dec
ss
mov
ss
push
sub
arpl
ss
call
cmps
ss
fdiv
xchg
out
and
jecxz
pop
outs
shr
icebp
xchg
out
and
jecxz
jae
cdq
lahf
fmulp
jecxz
dec
sbb
sub
mov
jecxz
retf
mov
fdivr
leave
sbb
and
jecxz
fadd
pushf
retf
popa
ss
xchg
sub
sbb
sahf
aaa
jecxz
fdiv
imul
icebp
retf
sub
pop
sbb
dec
aas
sbb
fadd
pushf
retf
popa
ss
jge
ss
sub
sbb
mov
ss
out
and
jecxz
jae
cdq
lahf
fmulp
jecxz
dec
sbb
sub
mov
jecxz
retf
sbb
push
mov
jp
leave
sbb
and
jecxz
fadd
xor
bound
hlt
std
sub
sbb
sahf
aaa
jecxz
fdiv
imul
sahf
retf
sub
pop
sbb
and
sbb
fadd
xor
bound
hlt
lds
ss
xor
xchg
stos
icebp
xchg
out
and
jecxz
jae
cdq
lahf
fmulp
jecxz
dec
xchg
retf
sub
mov
jecxz
retf
repz
push
mov
jp
leave
sbb
and
jecxz
fadd
xor
bound
hlt
inc
sub
sbb
sahf
aaa
jecxz
fdiv
imul
pop
retf
sub
pop
sbb
mov
add
sub
sbb
sbb
sbb
mov
and
imul
and
mov
retf
push
adc
and
sub
ja
xor
sbb
retf
push
lock
xchg
(bad)
jecxz
enter
cmps
leave
loop
fdivr
xchg
pop
push
pusha
outs
pop
punpckldq
ss
dec
sbb
sub
pop
sbb
add
add
and
sbb
out
sbb
mov
leave
sbb
xchg
fmul
pop
sbb
mov
jecxz
fsub
out
(bad)
retf
jecxz
jae
xor
(bad)
retf
jecxz
jae
les
ss
scas
xor
push
ss
out
and
jecxz
jae
sub
ja
and
push
mov
pop
add
and
mov
retf
fwait
sbb
leave
sub
ja
cmp
push
jp
push
lock
xchg
(bad)
jecxz
enter
cmps
enter
mov
jecxz
pop
push
pusha
outs
pop
punpckldq
ss
dec
fmul
sub
pop
sbb
dec
xor
fadd
cmp
bound
hlt
jno
ss
cs
push
mov
xchg
fmul
sbb
xchg
fdiv
and
inc
in
xchg
mov
and
xchg
adc
xchg
lods
scas
mov
xchg
fmul
dec
out
ret
loope
fsub
inc
sti
je
out
ret
loope
fsub
sub
sbb
out
movs
aam
ss
les
jecxz
cmps
fsubp
xchg
fdivr
sbb
daa
pop
sbb
and
push
jbe
sub
sbb
stos
mov
xchg
fmul
jbe
dec
ss
fadd
hlt
leave
es
push
inc
test
and
imul
fdiv
push
and
imul
fmul
dec
cmp
test
and
test
cmp
sbb
dec
ss
out
ror
jecxz
jae
push
add
(bad)
pop
push
sub
fmul
hlt
aad
ss
scas
ret
loope
fdiv
and
inc
in
and
jecxz
jae
sbb
fmul
hlt
stc
es
and
jecxz
dec
xor
call
loop
(bad)
outs
and
jecxz
xlat
enter
daa
sbb
leave
sub
xor
popf
xor
dec
ss
dec
xor
dec
ss
and
pop
add
cmps
pop
push
(bad)
sbb
mov
jecxz
fcmovnb
sti
jecxz
shl
xchg
fdivr
jecxz
in
push
add
pop
sbb
xchg
ret
(bad)
test
and
xchg
addr16
pop
push
(bad)
jecxz
mov
iret
xchg
test
ror
jecxz
jno
je
xor
(bad)
call
push
mov
xchg
fmul
dec
add
pop
lock
xlat
enter
out
sbb
leave
test
adc
push
xor
popa
ss
xchg
or
xchg
lods
dec
xor
dec
pop
test
and
mov
ss
xchg
je
add
ss
retf
mov
xchg
fdiv
jecxz
sub
sbb
mov
stos
mov
xchg
fmul
xchg
lods
enter
aaa
leave
imul
ds
mov
ss
jge
aad
xor
dec
jecxz
mov
jp
pusha
dec
loope
mov
jecxz
aaa
in
in
pop
pushw
ss
mov
pop
es
push
or
sbb
sub
sub
mov
into
jmp
stos
jae
jecxz
or
sbb
sub
sub
xor
xor
sbb
pushf
retf
popa
imul
ss
add
push
sbb
xchg
push
sub
outs
and
xchg
xchg
aam
xchg
das
xlat
mov
mov
and
xchg
push
push
sub
ficomp
ss
pop
or
jecxz
add
sbb
or
sbb
aaa
mov
sbb
cmp
pop
push
daa
sbb
or
sbb
cmp
and
xchg
je
imul
pop
cmps
xchg
pop
push
ret
pop
push
fst
jecxz
(bad)
xchg
lods
adc
daa
pop
retf
stos
pop
push
xor
push
add
test
and
bound
daa
pop
pop
pop
push
xor
push
(bad)
jne
ss
pop
aas
mov
xchg
ja
cmps
pop
push
add
test
fs
popa
ss
pop
add
xchg
ja
scas
pop
push
add
ins
test
add
bound
adc
pop
aaa
leave
imul
fisubr
and
imul
sbb
ss
xor
(bad)
fidivr
ss
sub
pop
push
cmps
sbb
and
jecxz
das
lds
mov
sbb
and
jecxz
xor
pop
push
cmps
sbb
and
jecxz
aaa
lds
mov
sbb
and
jecxz
add
pop
push
cmps
sbb
and
jecxz
pextrw
pop
push
cmps
sbb
and
jecxz
adc
pop
push
cmps
sbb
and
jecxz
pop
lds
mov
sbb
and
dec
jecxz
addr16
sbb
pushf
push
add
add
mov
dec
outs
and
lahf
scas
sub
push
and
inc
out
aas
jno
aam
aas
fcomp
es
dec
push
(bad)
cmp
outs
mov
pop
sbb
in
sbb
dec
aaa
dec
add
data16
push
int3
leave
jecxz
jmp
push
sbb
and
cdq
outs
pop
or
and
outs
or
leave
std
push
ss
ds
ds
xchg
fdiv
(bad)
leave
xchg
cs
ds
pop
adc
cdq
xchg
cmp
ds
and
jecxz
arpl
pop
push
cmps
sbb
and
jecxz
lds
mov
sbb
and
jecxz
imul
push
cmps
sbb
and
jecxz
outs
lds
mov
sbb
and
jecxz
jae
pop
push
cmps
sbb
and
jecxz
ja
pop
push
cmps
sbb
and
jecxz
jnp
pop
push
cmps
sbb
and
jecxz
jg
pop
push
cmps
sbb
and
jecxz
inc
lds
mov
sbb
and
jecxz
inc
lds
mov
sbb
and
jecxz
dec
lds
mov
sbb
and
jecxz
dec
lds
mov
sbb
and
jecxz
push
lds
mov
sbb
and
jecxz
push
lds
mov
sbb
and
jecxz
pop
lds
mov
sbb
and
jecxz
pop
lds
mov
sbb
and
jecxz
mov
cmps
sbb
and
jecxz
cmps
lds
mov
sbb
and
jecxz
stos
lds
mov
sbb
and
jecxz
scas
lds
mov
sbb
and
jecxz
mov
pop
push
cmps
sbb
and
jecxz
mov
pop
push
cmps
sbb
and
jecxz
mov
cmps
sbb
and
jecxz
mov
cmps
sbb
and
jecxz
add
push
cmps
sbb
and
jecxz
xchg
pop
push
cmps
sbb
and
jecxz
mov
pop
push
cmps
sbb
and
jecxz
pop
pop
push
cmps
sbb
and
jecxz
xchg
lds
mov
sbb
and
jecxz
xchg
lds
mov
sbb
and
jecxz
fwait
lds
mov
sbb
and
jecxz
lahf
lds
mov
sbb
and
jecxz
jecxz
pop
push
cmps
sbb
and
jecxz
out
pop
push
cmps
sbb
and
jecxz
jmp
pop
push
cmps
sbb
and
jecxz
out
lds
mov
sbb
and
jecxz
repz
mov
sbb
and
jecxz
test
sbb
and
jecxz
sti
lds
mov
sbb
and
jecxz
inc
pop
push
cmps
sbb
and
jecxz
ret
lds
mov
sbb
and
jecxz
mov
sbb
and
jecxz
retf
lds
mov
sbb
and
jecxz
iret
lds
mov
sbb
and
jecxz
fcmovnb
pop
push
cmps
sbb
and
jecxz
ffreep
pop
push
cmps
sbb
and
jecxz
and
pop
push
cmps
sbb
and
jecxz
daa
ret
mov
sbb
and
jecxz
sub
pop
push
cmps
sbb
and
jecxz
das
ret
mov
sbb
and
jecxz
xor
pop
push
cmps
sbb
and
jecxz
aaa
ret
mov
sbb
and
jecxz
cmp
pop
push
cmps
sbb
and
jecxz
aas
ret
mov
sbb
and
jecxz
add
pop
push
cmps
sbb
and
jecxz
pop
ret
mov
sbb
and
jecxz
or
pop
push
cmps
sbb
and
jecxz
cmpps
cmps
sbb
and
jecxz
adc
pop
push
cmps
sbb
and
jecxz
pop
ret
mov
sbb
and
jecxz
sbb
pop
push
cmps
sbb
and
jecxz
pop
ret
mov
sbb
and
jecxz
arpl
pop
push
cmps
sbb
and
jecxz
addr16
mov
sbb
and
jecxz
imul
push
cmps
sbb
and
jecxz
outs
ret
mov
sbb
and
jecxz
jae
pop
push
cmps
sbb
and
jecxz
ja
pop
push
cmps
sbb
and
jecxz
jnp
pop
push
cmps
sbb
and
jecxz
jg
pop
push
cmps
sbb
and
jecxz
inc
ret
mov
sbb
and
jecxz
inc
ret
mov
sbb
and
jecxz
push
ret
mov
sbb
and
jecxz
push
ret
mov
sbb
and
jecxz
pop
ret
mov
sbb
and
jecxz
pop
ret
mov
sbb
and
jecxz
mov
cmps
sbb
and
jecxz
scas
ret
mov
sbb
and
jecxz
mov
pop
push
cmps
sbb
and
jecxz
mov
pop
push
cmps
sbb
and
jecxz
mov
cmps
sbb
and
jecxz
mov
cmps
sbb
and
jecxz
add
push
cmps
sbb
and
jecxz
xchg
pop
push
cmps
sbb
and
jecxz
mov
pop
push
cmps
sbb
and
jecxz
pop
pop
push
cmps
sbb
and
jecxz
fwait
ret
mov
sbb
and
jecxz
lahf
ret
mov
sbb
and
jecxz
jecxz
pop
push
cmps
sbb
and
jecxz
out
pop
push
cmps
sbb
and
jecxz
jmp
pop
push
cmps
sbb
and
jecxz
out
ret
mov
sbb
and
jecxz
repz
mov
sbb
and
jecxz
test
sbb
and
jecxz
sti
ret
mov
sbb
and
jecxz
inc
pop
push
cmps
sbb
and
jecxz
ret
ret
mov
sbb
and
jecxz
mov
sbb
and
jecxz
retf
ret
mov
sbb
and
jecxz
iret
ret
mov
sbb
and
jecxz
rol
pop
push
cmps
sbb
and
jecxz
xlat
ret
mov
sbb
and
jecxz
fcmovnb
pop
push
cmps
sbb
and
jecxz
ffreep
pop
push
cmps
sbb
and
