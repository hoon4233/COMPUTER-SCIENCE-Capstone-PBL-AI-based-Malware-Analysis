adc
add
add
add
jo
stc
loop
jne
xor
popf
mov
repnz
mov
pushf
cmp
test
and
aam
adc
pop
(bad)
das
mov
lock
sbb
int3
push
push
test
aas
inc
cwde
adc
stos
or
not
lea
(bad)
in
pop
gs
test
int
adc
dec
xchg
retf
call
or
dec
(bad)
rcr
ins
mov
imul
rcl
je
out
mov
cmp
sbb
movs
loopne
retf
js
in
hlt
adc
or
sbb
call
jg
test
mov
call
mov
xor
dec
fcomp
cmp
push
push
stc
jbe
pop
imul
nop
lock
jmp
fimul
mov
aas
mov
push
mov
or
cdq
scas
sub
in
inc
and
mov
jno
out
je
idiv
aaa
mov
pop
out
adc
sbb
push
fisttp
push
cmp
daa
outs
je
shl
jle
sbb
jne
enter
es
jmp
push
xchg
xor
das
cld
push
cs
mov
ins
push
adc
pusha
mov
shl
jb
daa
sar
cmp
pop
mov
pop
fwait
mov
mov
rcl
in
test
fisttp
xor
pop
arpl
popa
mov
out
add
sub
mov
lods
mov
inc
mov
jg
mov
ss
pusha
xor
jg
add
cmp
inc
mov
aam
mov
in
dec
call
jb
sbb
mov
push
cmps
mov
fs
stos
dec
repnz
lds
pop
mov
ficomp
xchg
cmp
in
xchg
rcl
dec
xchg
ja
xor
pusha
js
cld
push
mov
retf
retf
and
push
inc
sbb
std
test
adc
movs
hlt
xchg
ja
xchg
iret
jbe
sbb
jbe
adc
mov
mov
cli
icebp
push
gs
scas
jecxz
xor
add
(bad)
into
int3
(bad)
mov
pop
nop
and
cmc
ins
push
ret
pusha
(bad)
shl
xchg
xor
popa
jecxz
xchg
inc
adc
js
mov
popf
or
test
adc
push
jne
int
push
jmp
dec
je
or
inc
cmp
jno
sub
call
inc
mov
xor
mov
lods
div
lea
lods
cmp
jns
scas
dec
xor
cli
dec
xor
push
mov
jae
and
es
mov
xor
sti
pop
iret
out
in
shl
cmp
loope
add
in
pop
adc
push
sar
pop
jmp
imul
cmp
or
shl
daa
jp
cmp
and
aam
adc
jmp
cli
dec
adc
fsub
mov
xor
movs
and
cmp
repnz
push
call
dec
cmp
fcmovnu
or
pop
add
and
push
or
mov
add
fwait
ins
xor
jg
test
dec
inc
fimul
pushf
and
mov
jle
sub
mov
mov
out
pop
iret
jp
test
sub
retf
data16
push
int
jae
inc
or
pop
sbb
iret
leave
dec
sbb
test
popf
mov
push
div
out
ror
mov
jg
sub
push
dec
stc
mov
aam
pop
inc
inc
or
ficom
faddp
(bad)
push
in
push
jb
and
xchg
daa
adc
scas
push
(bad)
repz
fs
je
fiadd
test
inc
test
dec
call
sub
pop
add
jmp
test
dec
(bad)
push
mov
and
sbb
mov
mov
fs
lea
lock
rcl
mov
or
test
popa
inc
movs
popa
xchg
inc
sub
cmps
cmps
xor
xor
hlt
adc
push
into
in
or
xchg
cmp
mov
jecxz
sbb
push
pop
mov
cmp
adc
inc
mov
fistp
xor
xor
dec
xchg
leave
test
push
xchg
dec
cwde
iret
or
mov
jecxz
enter
loopne
leave
shl
inc
cli
and
mov
pop
ins
stos
cmp
sar
mov
cld
test
and
lods
sub
adc
out
test
and
into
test
adc
mov
mov
cmp
inc
inc
add
and
mov
or
jnp
data16
js
mov
cmp
cmp
rol
pusha
cdq
add
jmp
or
dec
add
lock
dec
ror
fucomi
sahf
adc
(bad)
sbb
out
or
int3
cmp
or
jno
data16
test
test
cdq
(bad)
jp
loopne
data16
jmp
mov
out
jbe
sub
mov
pop
dec
add
mov
pop
movs
les
sub
out
std
les
cmps
xor
and
cdq
test
fsubr
das
lea
sbb
(bad)
adc
jnp
ret
(bad)
stc
or
(bad)
sahf
out
sub
(bad)
pop
push
inc
call
lea
ror
fwait
inc
jge
cmps
mov
imul
and
out
mov
ret
aas
xchg
clc
adc
fidivr
repz
sub
jge
rol
das
(bad)
pop
sub
aam
sbb
ficom
inc
mov
call
ret
outs
adc
leave
xchg
aas
dec
jo
movs
push
lods
dec
pop
sahf
and
xor
sub
and
sub
or
add
hlt
mov
test
out
popf
pop
daa
inc
fnstsw
mov
mov
push
cmps
lea
or
jns
pop
enter
dec
sahf
inc
add
es
fcom
mov
adc
and
pop
and
push
cmps
data16
(bad)
xchg
and
hlt
or
ret
push
adc
add
or
inc
jns
cmp
popf
fdiv
mov
ja
pop
or
(bad)
stos
and
inc
test
loopne
loopne
cmovp
pop
inc
push
call
loopne
shr
sub
inc
add
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
bound
(bad)
xor
xchg
jge
loop
movs
pop
xor
std
mov
or
cmp
inc
xchg
mov
jg
clc
adc
ror
fisttp
xchg
jp
cwde
xchg
rcl
dec
mov
push
xchg
les
(bad)
in
pop
call
pop
jo
sub
adc
jle
push
rcl
stc
mov
clc
daa
or
sar
pop
jae
pop
sbb
fild
(bad)
push
pushf
pop
xor
dec
rcl
add
das
mov
popa
icebp
(bad)
jae
add
retf
push
fmul
fldenv
jmp
movs
mov
mov
shr
shl
jl
mov
add
or
pop
xchg
ja
add
sbb
scas
rep
fstp
mov
mov
jne
into
sar
(bad)
stos
ret
or
imul
(bad)
pop
movs
jp
push
pop
dec
aad
fs
enter
loope
pop
push
dec
xchg
pop
(bad)
jns
daa
outs
add
pop
adc
pusha
xchg
mov
jle
mov
jl
pop
clc
xchg
into
outs
mov
(bad)
inc
(bad)
push
js
pop
dec
into
ss
je
jnp
sahf
fmul
out
mov
mov
in
sti
repnz
adc
inc
in
push
das
mov
xchg
enter
and
popf
inc
mov
adc
dec
jl
sub
pushf
sub
retf
sti
xchg
pop
fwait
pop
cld
pop
pop
frstor
iret
in
arpl
mov
jae
rcl
ja
out
inc
sub
imul
mov
cmc
jl
jl
cmp
inc
xor
sbb
cs
add
movs
add
inc
je
iret
pop
les
(bad)
and
nop
push
fcomp
das
cld
mov
jmp
jae
call
pop
inc
or
popf
in
xchg
dec
cdq
test
sbb
int
into
mov
fisub
jl
cli
xor
pop
adc
pop
scas
pop
out
jp
fwait
lahf
mov
pop
inc
adc
pop
stos
addr16
arpl
outs
imul
adc
xchg
mov
sub
fwait
out
xor
pop
mov
repnz
dec
mov
push
mov
jle
ins
push
push
and
sub
daa
outs
xor
in
out
sub
or
jmp
dec
pop
outs
mov
xor
cmps
xchg
xchg
dec
mov
sbb
cmp
sub
add
mov
xchg
mov
jbe
jl
popa
fistp
mov
shl
idiv
stos
cmp
mov
jne
xor
cli
push
push
fs
stos
push
mov
ins
jae
inc
sbb
xor
imul
sbb
cmp
mov
and
out
xor
push
dec
fisttp
jb
dec
xor
ror
xchg
xchg
jnp
adc
mov
shr
jnp
inc
sti
fnstcw
test
dec
fistp
dec
push
aas
mov
cdq
sbb
lods
cli
push
outs
pop
adc
sub
jmp
sbb
sahf
lahf
test
jp
and
push
xor
pop
mov
lock
inc
int
and
mov
and
sbb
add
jle
(bad)
lea
inc
into
push
pop
cmp
addr16
mov
dec
mov
test
cmp
fimul
adc
mov
es
xchg
adc
ins
(bad)
call
ss
mov
lock
or
xlat
or
xlat
pop
mov
adc
mov
mov
cld
pusha
mov
ror
loop
jle
loope
xor
mov
shr
aaa
sbb
imul
out
loope
imul
std
mov
mov
retf
pop
test
jmp
fldenv
adc
(bad)
rol
fisttp
mov
adc
jmp
adc
pop
cdq
in
mov
cwde
add
int
xadd
not
and
(bad)
test
xchg
jmp
mov
xor
cmp
or
sbb
punpckhdq
movs
mov
mov
push
movs
(bad)
cmps
xlat
sahf
aad
in
mov
pop
cmp
push
mov
cdq
mov
cmps
in
mov
pop
xor
pop
mov
xchg
xor
inc
shr
xor
dec
retf
(bad)
scas
dec
fsubr
je
leave
jns
hlt
jbe
inc
cmp
mov
mul
sbb
cmp
mov
mov
fmul
shr
pusha
or
test
dec
add
adc
inc
shr
daa
gs
inc
jmp
imul
mov
ins
das
jns
push
je
popf
(bad)
cmp
mov
push
xchg
cdq
lock
fs
pop
std
mov
sar
stos
push
or
jmp
push
cmp
pop
out
xchg
bound
popa
xchg
stos
out
ins
sti
sub
popf
dec
imul
push
mov
les
dec
adc
cs
xchg
sar
adc
call
push
sahf
int
mov
daa
ins
push
sbb
cwde
and
dec
sub
xchg
ficom
pop
cwde
dec
dec
fstp
sbb
push
pop
jl
(bad)
fldenv
pop
lock
or
jne
or
mov
lods
jbe
ins
xor
(bad)
clc
scas
stos
pop
inc
xchg
(bad)
mov
and
sbb
les
pusha
je
test
sahf
or
ds
inc
dec
out
or
cmc
in
dec
or
(bad)
cmp
xchg
mov
and
inc
add
xchg
cmp
xchg
xchg
jae
or
dec
js
out
pushf
ja
push
dec
push
ss
ja
add
pop
sahf
push
sbb
mov
and
out
adc
mov
inc
rcl
retf
cmc
cmp
daa
cwde
sub
pop
out
mov
repz
in
out
jns
inc
cld
shr
xchg
clc
les
mov
call
daa
push
mov
sbb
mov
call
lods
out
gs
pop
xor
jp
pop
mov
(bad)
lds
addr16
idiv
xor
mov
dec
(bad)
jnp
loop
add
cmp
jg
mov
push
jnp
push
xor
cmps
cmp
int
xor
in
lahf
in
or
fxch
ss
mov
scas
fld
mov
cdq
pop
jmp
push
js
inc
mov
cmp
sar
out
loope
and
aas
pop
das
loope
adc
ret
pop
retf
xchg
xchg
es
sub
xlat
addr16
cmp
into
ins
mov
out
push
repnz
push
in
ja
cmp
sbb
cli
test
in
rcl
out
leave
sub
and
pop
ror
lahf
clc
xchg
ins
rdpmc
xchg
cmp
pop
gs
pop
cmp
bound
cmp
jl
test
fnsave
ret
imul
out
pushf
loopne
sahf
cmp
mov
std
stc
jmp
out
call
or
inc
xchg
fwait
aad
lea
das
sbb
popa
inc
(bad)
clc
fwait
or
jp
pop
mov
dec
pop
aam
shl
into
fwait
pop
arpl
inc
jg
(bad)
das
xor
shl
sahf
cmp
push
or
lock
repz
add
sub
popf
idiv
aam
push
and
add
sbb
fstp
rol
imul
mov
lods
mov
lods
jbe
mov
mov
and
loop
pop
(bad)
mov
mov
out
pop
nop
loop
pop
cmp
int
pop
dec
(bad)
dec
xor
js
lods
clc
mov
or
fcom
stos
add
or
movs
push
(bad)
fmul
(bad)
cmp
sub
fsubr
js
fistp
xchg
mov
xor
loop
shl
push
cmp
xchg
sub
es
ret
sar
into
das
mov
add
(bad)
cmc
pop
repnz
out
lds
push
sbb
out
inc
call
mov
popa
sub
and
scas
add
cmps
mov
sub
push
retf
mov
jbe
and
sub
mov
and
jnp
jl
stc
xchg
mov
icebp
push
dec
and
xor
sbb
push
jb
sbb
cmp
cmp
push
(bad)
add
and
jle
mov
add
call
je
mov
inc
sub
repnz
jg
adc
sub
cmp
loopne
es
popa
or
xor
aad
sub
fiadd
aam
pusha
dec
mov
sub
mov
push
push
pop
mov
sub
mov
std
test
jnp
jg
imul
(bad)
leave
sbb
not
pop
xchg
sbb
cmps
inc
enter
(bad)
not
(bad)
push
and
(bad)
fidivr
pop
jl
(bad)
ror
mov
dec
xor
arpl
cmps
movs
sbb
or
adc
push
fld
add
mov
xor
sub
xchg
push
jp
adc
fcomp
mov
xchg
push
pushf
int
fwait
sub
movs
fsub
sub
pop
dec
cmp
fadd
out
jecxz
xor
sbb
xchg
jmp
push
mov
lea
movs
dec
(bad)
pop
ds
xchg
xchg
or
inc
add
pop
lahf
adc
jle
push
mul
out
popf
inc
pushf
stc
mov
mov
mov
push
lea
je
sub
jbe
cmps
out
sub
mov
and
dec
add
sbb
jmp
sbb
es
pop
and
ret
push
scas
jg
addps
mov
xchg
icebp
jmp
test
in
js
sbb
pop
out
fnstenv
push
into
adc
mov
adc
retf
mov
adc
cwde
mov
rol
out
inc
mov
mov
sbb
mov
pop
mov
inc
push
jge
movs
inc
jno
pop
xor
and
fsub
adc
adc
cmp
(bad)
ins
push
aaa
aas
xor
loope
fs
sbb
sbb
xchg
push
sti
(bad)
leave
add
cwde
xchg
(bad)
arpl
adc
das
fwait
or
inc
in
stc
xchg
test
out
retf
sub
xor
(bad)
nop
xor
outs
add
pop
push
pop
sar
inc
mov
or
gs
sar
and
sub
jae
fwait
dec
(bad)
ja
shl
sbb
push
int
or
sub
inc
add
daa
je
dec
retf
movs
test
push
cmp
ret
mov
test
jle
add
test
pop
aas
test
fist
rcl
out
fwait
jmp
movs
test
pop
adc
mov
lea
arpl
scas
cld
mov
test
faddp
neg
jmp
mov
xchg
(bad)
fbld
mov
inc
test
hlt
cmp
lahf
mov
ins
dec
push
fstp
jmp
jp
hlt
pop
and
cmp
lds
gs
leave
fcomp
scas
out
sub
sbb
sahf
pop
jmp
popf
xor
in
sbb
out
adc
hlt
jne
ds
cdq
loop
jb
push
retf
mov
mov
std
gs
inc
scas
adc
push
out
mov
test
dec
in
icebp
enter
call
dec
xor
fisttp
xor
clc
aad
cmps
test
sbb
sar
jmp
test
into
stos
pop
shl
mov
jae
js
push
inc
fs
lahf
and
cmp
sub
mov
mov
push
xor
pop
ja
jnp
add
adc
fidiv
dec
ret
lea
mov
adc
ja
(bad)
dec
pop
cmovo
xchg
add
xor
(bad)
cld
or
imul
cmc
das
mov
pop
mov
enter
arpl
push
inc
sbb
lds
jle
dec
sbb
ret
push
xor
aam
push
(bad)
jmp
enter
sub
in
fstp
push
(bad)
(bad)
and
sub
imul
(bad)
pushf
data16
or
(bad)
enter
sbb
inc
pop
js
ret
sbb
test
lods
pop
je
test
mov
inc
add
mov
push
fcom
js
mov
push
not
dec
fild
jns
fist
out
neg
ins
jl
(bad)
ja
mov
in
movs
scas
push
cmps
retf
mov
ret
adc
xor
cld
mov
movs
stos
imul
dec
xor
sbb
test
mov
pop
mov
cmp
or
pusha
pushf
in
cmc
inc
add
sub
mov
repz
retf
mov
test
sbb
mov
sub
or
test
mov
mov
rcr
(bad)
sub
cwde
push
push
add
jle
xchg
ret
adc
or
gs
jmp
dec
jo
pop
out
pop
ins
cmp
inc
pop
xchg
mov
outs
xor
and
mov
jbe
sbb
sahf
xor
pop
mov
cmp
sbb
dec
fnstenv
push
and
add
dec
lods
mov
cmps
shl
cwde
inc
mov
jb
sub
movs
bound
in
pop
fidivr
ins
push
xor
pushf
mov
les
jne
adc
jae
es
daa
daa
mov
jbe
aam
or
inc
push
idiv
or
add
sbb
je
call
movups
iretw
jmp
sti
cli
cli
daa
mov
or
inc
xor
neg
shl
xchg
es
movs
retf
add
sub
test
xlat
push
push
nop
mov
hlt
pop
stc
call
retf
js
scas
mov
or
inc
(bad)
mov
test
xor
retf
popa
or
cmc
outs
nop
fcmovnbe
inc
clc
fsubr
pop
bound
inc
les
leave
cmp
(bad)
rol
jmp
lahf
scas
dec
std
mov
or
sub
push
xchg
pop
add
add
outs
jbe
mov
xor
enter
cmc
push
pop
fisubr
pop
push
mov
icebp
sbb
push
cmp
icebp
pop
je
adc
div
pop
cld
fimul
inc
(bad)
shl
mov
and
jmp
dec
pop
cmps
sbb
adc
fwait
je
mov
pop
xor
int3
hlt
jnp
mov
mov
mov
cld
int3
gs
xor
out
in
mov
fidiv
mov
fldenv
sub
popa
push
scas
fiadd
into
shl
xlat
shl
mov
xor
xor
inc
ds
dec
adc
mov
sub
scas
imul
sbb
outs
lds
pop
pop
mov
test
push
pop
jnp
nop
pusha
adc
pusha
scas
fisubr
xchg
addr16
call
and
push
adc
out
cld
push
outs
dec
mov
push
pop
gs
data16
pop
xchg
cli
pop
lahf
data16
out
sub
out
push
aad
pop
add
cmp
fcomp
sahf
xor
xlat
call
push
cmps
xchg
scas
sbb
jno
xchg
in
and
movs
shl
push
jne
xchg
scas
stos
and
xor
pop
stos
sbb
or
pop
mov
sub
lahf
dec
clc
in
aaa
jecxz
shl
pushf
out
in
data16
pop
mov
cwde
xor
arpl
cwde
add
cli
mov
push
fsub
jmp
push
or
add
sar
icebp
sbb
push
cdq
push
stos
or
jae
push
hlt
pop
sbb
stc
(bad)
xchg
push
hlt
ins
xchg
test
push
cld
fsub
clc
cmc
pop
cmp
aas
jne
fcom
lds
cdq
retf
ret
pop
iret
push
xchg
imul
ja
ins
mov
mov
mov
or
aam
loopne
fsub
xor
push
mov
int3
and
lock
lahf
and
jne
popa
loop
ja
push
lea
sbb
cmp
mov
in
push
xchg
fcmovb
imul
cld
xlat
mov
mov
or
or
jns
mov
popf
or
pop
scas
dec
test
std
pop
stos
xchg
mov
in
ds
sbb
inc
cmp
fisub
push
or
pop
cmc
iret
pop
arpl
leave
popf
sub
mov
loop
icebp
xor
sar
and
stos
xor
fwait
std
and
push
and
dec
mov
cmps
push
cmp
sti
add
jecxz
inc
loopne
cmp
iret
shl
dec
xchg
test
jnp
adc
rol
inc
fiadd
inc
leave
lea
cdq
test
mov
and
fsubr
repnz
dec
and
fild
fcmovne
cmp
jae
nop
jl
(bad)
push
sub
imul
inc
mov
sbb
mov
and
sbb
sub
xor
mov
fwait
retf
dec
sti
push
std
cmp
or
jle
inc
lahf
stos
in
lea
cld
push
dec
add
xchg
xor
sub
cld
call
jl
sbb
xchg
xchg
sbb
dec
push
in
xchg
fnstsw
sub
mov
rol
xor
sub
adc
xor
cdq
lods
shl
jmp
pop
mov
movs
and
call
xor
jae
out
jo
nop
dec
sbb
ds
out
inc
out
ret
or
mov
mov
bnd
sub
fucomip
lea
mov
jp
clc
mov
push
popf
xchg
arpl
sti
inc
dec
ins
inc
xlat
push
(bad)
dec
call
xlat
mov
push
ret
aas
imul
adc
scas
jmp
mov
jns
ficomp
gs
retf
jne
push
icebp
mov
or
dec
cmps
inc
or
jl
inc
add
cmp
or
aad
outs
inc
loopne
mov
shr
add
test
mov
sbb
adc
es
inc
mov
in
xor
or
add
pop
out
out
and
sub
(bad)
in
outs
imul
aad
adc
xor
dec
int
ror
mov
jge
cmp
cmp
out
stos
pop
xchg
addr16
mov
sub
test
and
and
pop
pusha
fmul
ds
movs
cmp
push
loop
(bad)
lds
push
push
adc
(bad)
lods
push
or
ds
retf
loope
div
hlt
sub
test
shl
dec
lds
lds
push
cmc
loope
pop
in
call
pop
pop
pop
test
xor
or
dec
bound
ror
pop
(bad)
call
hlt
loop
push
iret
mov
ret
fsubr
out
jecxz
dec
jmp
repnz
inc
(bad)
mov
stos
outs
sbb
inc
scas
inc
or
sub
sbb
cmpps
mov
xchg
cmp
loope
cwde
dec
xchg
idiv
cld
dec
mov
adc
mov
sub
jg
sub
(bad)
dec
aas
loopne
push
push
call
mov
mov
mov
cs
into
push
xor
loop
and
add
int3
jge
cli
add
mov
inc
add
push
retf
fnstsw
xor
add
xchg
in
jmp
(bad)
mov
stos
xlat
push
stos
dec
jmp
dec
cmps
ss
push
mov
mov
sti
fwait
xchg
inc
dec
push
enter
adc
(bad)
cli
mov
pop
stos
clc
jg
jl
xlat
sub
fstp
cdq
dec
(bad)
jp
fwait
jo
in
fcom
xor
nop
pushf
mov
dec
gs
daa
in
int
pop
add
outs
or
jne
mov
(bad)
in
cmp
cmp
ror
nop
and
xlat
mov
pop
sub
add
jnp
push
jno
daa
clc
jbe
into
pusha
mov
les
imul
sbb
cli
clc
jne
loopne
test
(bad)
jno
(bad)
cmp
jp
int3
neg
push
mov
sbb
pusha
sbb
test
rol
push
(bad)
fs
aad
mov
push
xchg
ror
aam
loop
clc
test
sub
sbb
mov
mov
mov
xchg
mov
sub
shr
adc
jae
test
retf
rcr
cmp
iret
mov
call
mov
cmps
mov
sahf
cmp
cmps
repnz
jecxz
mov
pop
cmp
retf
gs
xor
cmp
push
xor
and
loop
daa
jge
add
mov
jnp
mov
imul
setge
mov
cdq
cwde
movs
shl
or
mov
test
in
(bad)
jmp
pop
lahf
inc
push
lods
inc
fsub
outs
fistp
pop
dec
dec
xor
jb
loopne
arpl
fisub
es
jp
and
jp
test
movs
pop
jae
loope
rol
les
stos
rcl
xor
mov
push
jbe
sti
cmp
push
or
jg
fldenv
(bad)
push
test
shr
not
imul
add
shr
out
dec
into
inc
mov
rsqrtps
xchg
lods
xchg
jns
add
clc
xor
mov
mov
mov
mov
fcmovnu
adc
xchg
push
dec
mov
leave
xchg
ja
inc
mov
and
pop
and
cs
fmul
(bad)
out
das
ja
jge
call
mov
or
ss
jg
mov
mov
jg
sub
jae
loop
adc
std
mov
add
mov
movs
outs
dec
jb
sti
ror
imul
mov
mov
xor
sbb
dec
jne
stos
adc
push
fwait
out
mov
add
ret
and
scas
cld
or
ret
mov
and
in
icebp
cmp
movs
loope
fs
jg
cli
sub
xor
sub
movs
jb
jo
jg
(bad)
out
jg
and
xchg
stos
inc
fdiv
mov
push
shr
inc
stos
or
lahf
lds
pop
arpl
cmp
push
sbb
adc
xchg
stos
xchg
and
dec
data16
addr16
ret
push
out
adc
add
and
enter
arpl
hlt
fwait
jmp
adc
jg
and
popf
sbb
mov
push
int3
add
ss
ins
fimul
popf
std
jae
and
stos
rol
inc
sti
mov
cmps
stos
sub
cmp
sbb
xchg
jl
das
xchg
push
adc
rcr
inc
adc
jge
adc
jb
outs
clc
and
daa
int3
fdiv
sub
cmps
dec
imul
cdq
push
sbb
sahf
lods
xor
stos
add
add
mov
dec
sbb
jo
pushf
(bad)
jb
xchg
xabort
rol
add
fwait
popf
aaa
cwde
pop
movs
popf
mov
ret
imul
push
jbe
lods
push
and
add
cld
xor
fld
pop
ins
cmp
icebp
and
add
int
pop
fnstcw
xchg
mov
xchg
mov
push
mov
ret
push
inc
jae
jnp
mov
push
push
int3
int3
xchg
cmp
dec
not
repnz
repnz
ffreep
in
cmps
xlat
outs
sti
mov
cmp
test
lds
or
sbb
adc
adc
aad
pop
jmp
(bad)
outs
idiv
sub
xor
stos
xchg
repnz
test
push
test
outs
sub
mov
retf
in
push
sbb
inc
pop
push
inc
push
inc
sar
inc
rol
mov
xchg
sub
jp
or
mov
push
mul
xchg
and
add
push
mov
ror
out
jp
jp
rcr
dec
sub
call
sar
icebp
repnz
inc
add
fbld
dec
adc
add
jno
inc
loop
jge
shl
(bad)
stos
pushf
or
test
sub
mov
cdq
mov
mov
ja
repz
and
and
or
ja
jg
mov
lods
or
mov
out
fild
mov
jnp
dec
jno
sahf
sar
stos
xchg
mov
je
xchg
fidivr
aas
je
data16
add
add
xor
ret
int3
xchg
xchg
jae
std
dec
fimul
out
fsubr
js
pop
fcmovbe
xchg
shl
mov
or
shl
sar
popf
pop
ret
mov
xchg
push
xchg
or
retf
mov
mov
imul
push
add
nop
cmp
xor
out
jg
(bad)
pop
aas
pop
in
in
test
sahf
mov
cmps
dec
fs
sbb
in
xchg
fst
fadd
pop
mov
je
scas
sub
pop
xchg
push
push
inc
push
mov
xor
ret
outs
inc
lods
retf
loop
xchg
inc
jp
rcl
and
jnp
scas
xor
push
pushf
jmp
xchg
into
daa
test
scas
add
add
popa
jecxz
fdiv
into
jo
(bad)
sahf
stos
adc
sahf
add
cmps
pop
xor
lods
mov
push
cmp
jb
push
test
or
in
jle
push
dec
mov
mov
std
and
jnp
shl
cmp
mov
mov
cmps
nop
movs
daa
jp
mov
push
adc
popf
jmp
sub
jb
loopne
aad
mov
pushf
ins
jae
or
add
mov
loopne
add
and
lods
pop
loope
jp
bound
mov
jne
add
pushf
loope
or
xlat
push
fadd
or
fwait
pop
push
push
js
inc
jmp
repnz
mov
(bad)
std
mov
(bad)
(bad)
test
lods
mov
std
jecxz
mov
pop
lahf
jp
add
jbe
mov
add
pop
xor
xor
fild
mov
xor
arpl
mov
push
mov
mov
repz
jecxz
inc
rcr
test
call
pop
mov
adc
ficom
rcr
cmp
cld
adc
xor
pop
cmp
add
pop
stos
cmp
xchg
sub
inc
jp
sub
repnz
mov
int
jp
xor
cmp
mov
xlat
sub
scas
xor
retf
push
push
mov
adc
and
xor
hlt
xor
dec
lea
mov
push
ins
shl
test
xchg
js
arpl
add
jbe
cmp
add
or
pop
pop
loope
xor
out
push
into
xchg
jge
outs
jae
mov
js
popa
cmp
int
mov
loopne
xchg
push
cld
xor
sub
mov
mov
sti
and
movs
xchg
sub
outs
(bad)
push
(bad)
jmp
mov
jecxz
stos
xchg
sbb
pusha
and
stos
inc
inc
ds
daa
xchg
clc
mov
cmc
hlt
pop
dec
sub
inc
lea
stos
push
add
inc
daa
push
aad
mov
pop
cmp
stc
xchg
arpl
add
(bad)
jae
push
gs
in
out
cmove
push
fiadd
lods
lods
xchg
and
fild
repnz
stc
or
aam
sub
xchg
pop
dec
fsubr
pop
adc
gs
jge
sti
xchg
add
in
ret
daa
add
mov
(bad)
fild
jne
pop
cmp
shl
push
add
sub
push
sbb
mov
imul
mov
test
iret
pop
outs
push
add
ds
(bad)
cmp
sub
rol
pop
ins
adc
pop
inc
jnp
(bad)
aad
mov
lods
imul
hlt
xor
dec
mov
mov
xor
js
hlt
inc
jbe
dec
xor
daa
pop
xor
mov
jns
les
ror
adc
lahf
xchg
out
(bad)
push
lahf
xchg
stos
cmc
sub
dec
lock
cmp
and
cmp
mov
mov
ret
pop
out
sti
pop
nop
ins
test
or
sbb
aas
lods
or
in
fadd
inc
sbb
adc
xchg
ins
jl
movs
sbb
cwde
jno
jmp
leave
jno
movs
aam
ret
test
js
pop
lahf
lahf
mov
cmp
pop
sahf
loope
(bad)
cmp
jecxz
dec
xor
jnp
outs
add
push
stos
div
sbb
or
fwait
cmp
fwait
mov
gs
or
or
cmc
or
xchg
outs
mov
loopne
popa
cmps
mov
ss
int3
loope
call
mov
aam
scas
in
imul
xchg
ds
xchg
cmp
fwait
rcl
lods
popf
sbb
cmps
jb
cmp
cs
out
bound
ds
cdq
pop
movs
xor
arpl
mov
hlt
pop
aam
pop
jbe
popf
add
fs
int
(bad)
adc
sbb
jge
punpcklwd
push
mov
inc
daa
clc
inc
imul
xchg
pushf
and
loopne
xchg
sub
push
daa
push
fld
pop
movs
mov
xchg
aad
jp
adc
lahf
aam
dec
inc
mov
lods
mov
xor
xor
aad
test
inc
test
xchg
mov
cwde
mov
mov
adc
and
jns
fisub
repnz
idiv
push
cmps
sub
and
sub
call
dec
sub
js
push
cli
lahf
test
call
rcr
jmp
sub
xchg
rcl
push
stos
lods
inc
cmp
xchg
cmp
push
(bad)
xor
pop
lods
mov
loopne
push
(bad)
dec
nop
mov
xor
mov
imul
into
jl
add
je
ficomp
dec
xor
pop
sub
retf
retf
mov
in
mov
add
out
sub
mov
test
sub
ss
inc
push
xchg
xchg
mov
mov
jns
cs
out
out
sub
push
cmps
sbb
enter
sar
mov
outs
pop
das
push
out
es
cmp
fst
push
ror
loop
cmp
push
jmp
out
out
mov
int3
pop
mov
xor
stos
push
mov
pushf
xchg
or
push
push
mov
sub
push
xchg
xor
pop
cmp
hlt
es
jp
jo
repnz
sub
push
mov
or
cwde
inc
es
xchg
cmp
je
ds
call
fcmovb
daa
add
and
jl
dec
rcr
mov
adc
pushf
cmps
mov
vlddqu
add
inc
fucom
movs
(bad)
cdq
and
in
sbb
scas
inc
dec
xchg
jbe
sub
inc
(bad)
pop
sbb
jne
pop
fwait
sbb
ins
fcomp
scas
jl
clc
jnp
mov
jne
jecxz
and
(bad)
xchg
and
add
daa
into
or
fsin
xor
xor
shl
and
push
movs
jne
nop
xor
xchg
movs
mov
adc
and
mov
and
jmp
scas
sub
push
cmps
dec
mov
inc
retf
mov
sbb
rol
addr16
stos
xchg
xlat
push
add
or
cdq
and
push
(bad)
rol
pusha
ss
test
cmps
push
cmp
fisub
bnd
mov
push
idiv
mov
leave
rcl
adc
outs
iret
mov
dec
jns
pshufw
mov
out
faddp
not
mov
test
adc
fcomp
cmp
and
adc
or
xchg
cmp
in
sbb
push
fwait
movs
pop
sti
sbb
xchg
pop
(bad)
mov
cdq
and
pop
les
retf
pop
dec
icebp
and
jle
jge
or
dec
rol
sub
test
mov
imul
mov
xchg
cmp
mov
jecxz
vhsubps
lods
fdivrp
(bad)
das
pusha
or
push
and
inc
mov
cmp
cmp
mov
jbe
loope
push
stos
adc
xor
adc
xchg
xchg
rol
mov
cmp
int3
lea
cmp
jbe
std
mov
(bad)
in
jo
cld
enter
out
aas
in
pusha
aaa
sahf
clc
int3
std
stos
dec
mov
push
xchg
les
add
jecxz
cmps
push
inc
pop
or
popf
icebp
and
xchg
jl
adc
jbe
rol
add
pop
mov
jnp
hlt
push
xchg
out
add
jp
ja
or
adc
ins
or
push
fstp
jge
jmp
mov
mov
cdq
clc
and
mov
pop
gs
mov
lahf
lock
mov
sub
inc
shl
aaa
icebp
cdq
int3
pop
in
les
imul
mov
xor
test
mov
clc
popa
(bad)
mov
ret
retf
fnsave
jle
(bad)
iret
push
adc
adc
lea
and
inc
fmul
stos
enter
int3
sbb
cmp
sahf
(bad)
aad
gs
aas
pop
sub
mov
xchg
adc
loop
jbe
lods
cmp
stc
js
push
rol
jne
sbb
sub
push
xchg
and
dec
push
cdq
hlt
ficomp
mov
jne
sti
dec
(bad)
adc
xchg
enter
dec
repz
ins
iret
add
xchg
loop
pop
out
mov
test
js
dec
ss
es
(bad)
and
mov
mov
shl
sbb
and
jmp
mov
mov
aad
mov
mov
out
data16
fstp
mov
(bad)
xchg
cmp
retf
loop
jge
and
pop
xor
aad
mov
mov
cmp
das
push
sbb
sbb
pop
cdq
add
icebp
out
pop
cld
jle
clc
adc
push
rol
ins
sub
cmp
push
mov
inc
test
nop
jae
and
push
and
cmc
push
xor
int
add
jp
out
fiadd
jmp
sbb
std
push
leave
inc
lahf
sbb
cmp
clc
dec
fst
hlt
sbb
inc
lods
icebp
xchg
inc
pop
jbe
aad
repnz
sub
mov
xlat
fs
stos
xchg
outs
xor
fucomp
push
sahf
or
hlt
cmp
out
ss
cdq
inc
mov
cmc
outs
sbb
shl
jno
or
jmp
in
(bad)
jle
ret
clc
and
jecxz
test
pop
dec
jmp
jmp
test
pop
mov
and
mov
or
sti
test
sbb
mov
pop
and
icebp
and
pop
out
sbb
adc
and
js
lahf
pushf
aaa
jle
sub
out
in
loope
inc
xor
cmc
and
popf
enter
add
jb
xor
inc
add
mov
ja
test
add
rol
push
ss
xchg
dec
mov
lods
and
mov
xchg
sub
(bad)
push
add
iret
dec
mov
mov
jge
mov
mov
sbb
adc
jle
dec
lds
push
imul
pop
sbb
xor
cmp
cmp
out
mov
lods
(bad)
xchg
and
and
adc
sbb
das
pop
nop
out
xchg
inc
push
push
imul
call
adc
xchg
outs
xchg
retf
cdq
push
mov
shl
ret
inc
sbb
inc
pushf
xor
popa
and
sub
mov
jns
das
shr
std
cmp
adc
cmp
jb
mov
dec
push
mov
imul
outs
cmps
pop
into
ja
and
dec
pop
jg
inc
in
aaa
xchg
icebp
add
test
std
jmp
push
cdq
jae
scas
scas
push
fisubr
dec
(bad)
push
sbb
and
imul
or
dec
iret
add
imul
dec
inc
aam
push
bound
lahf
ret
mov
cmc
aam
scas
cs
dec
mov
shl
inc
push
jge
push
or
push
stos
retf
fdiv
xchg
jmp
mov
adc
mov
retf
fsub
mov
stc
and
kandnb
adc
inc
and
imul
mov
enter
inc
pop
mov
sbb
ds
lahf
mov
push
pop
jecxz
les
xor
push
clc
cmp
test
icebp
mov
inc
pop
add
leave
push
jnp
push
btr
and
cmp
stos
xchg
fdiv
cmp
(bad)
pop
stc
in
int
out
mov
gs
dec
fcmovne
fist
mov
scas
mov
adc
enter
xchg
sub
and
outs
iret
xchg
mov
sbb
inc
push
(bad)
int
dec
in
mov
gs
into
cmp
bound
jmp
cmp
test
test
jmp
or
shl
fld
jmp
jg
ss
in
in
into
lods
rcr
jno
call
xchg
xor
fsubr
or
lock
cwde
inc
pop
stc
adc
lods
push
jmp
sub
test
xchg
mov
xchg
ss
mov
call
bound
lea
inc
mov
dec
xchg
and
pushf
pop
inc
jo
bound
jge
jp
xchg
sbb
loopne
mov
pop
and
ds
jg
enter
mov
or
push
mov
xchg
mov
in
daa
stos
out
xor
dec
inc
mov
rcl
mov
inc
sbb
mov
repnz
test
add
mov
mov
ficomp
add
cmp
dec
rcr
mov
mov
gs
inc
je
arpl
push
ins
aaa
add
xchg
das
das
pop
inc
mov
pop
test
xchg
mov
xor
cmc
xchg
mov
xchg
pop
cmps
cvtps2pi
pop
mov
(bad)
jns
push
jo
and
dec
es
mov
pusha
sub
cld
dec
sub
dec
sbb
ins
dec
mov
push
daa
js
mov
or
push
bound
xor
cmp
pop
ins
in
xlat
rcl
cdq
sub
dec
aas
retf
iret
inc
pop
push
push
pop
or
out
dec
icebp
into
popa
push
nop
jmp
jmp
adc
clc
dec
push
loop
and
repnz
add
add
das
cmp
js
iret
les
dec
xor
sbb
out
or
test
loopne
js
pop
xchg
adc
push
cmp
cmp
cmp
inc
and
push
in
mov
dec
cmc
cmp
mov
popf
mov
and
pop
cld
js
push
repz
mov
sti
shr
xchg
fimul
xchg
sbb
adc
xchg
idiv
aas
sub
or
adc
outs
gs
les
lahf
scas
fld
and
ror
lea
mov
cmc
aas
idiv
stos
add
test
mov
sub
aaa
imul
int
add
lahf
jb
call
mov
add
mov
push
(bad)
out
cmp
fwait
cmp
mov
movs
jle
mov
sbb
fwait
(bad)
jmp
dec
pusha
rcr
and
mov
hlt
mov
push
mov
ins
retf
loopne
gs
sub
sti
aas
sbb
mov
scas
or
dec
inc
rcl
or
outs
out
jl
add
and
cmps
mov
jle
jl
call
xor
stos
es
mov
xchg
imul
jge
pop
outs
test
loope
ret
out
inc
scas
popf
lea
mov
sub
mov
cld
sar
mov
mov
int
push
test
cld
and
inc
sbb
add
fidivr
xchg
sbb
mov
(bad)
in
xchg
jg
jmp
in
pop
or
lahf
adc
jle
adc
jmp
cmp
icebp
fsub
in
inc
clc
mov
nop
push
inc
fnsave
in
(bad)
cld
(bad)
adc
xchg
add
add
pop
xor
call
dec
ret
and
jmp
call
dec
mov
xor
mov
and
jno
cs
inc
out
push
jb
cmp
jl
(bad)
push
lahf
cmps
icebp
sbb
fild
std
repz
sbb
mov
loopne
test
imul
push
out
ins
(bad)
in
jnp
fs
lock
push
mov
mov
(bad)
mov
aam
out
and
xor
inc
hlt
xor
cmp
sbb
jge
pop
jbe
cld
in
ss
mov
push
jge
push
or
ror
ror
fdivr
xchg
pop
retf
mov
in
test
xchg
or
dec
int3
and
xchg
or
bound
test
pusha
mov
cmp
repnz
daa
fadd
and
enter
adc
cmps
mov
and
pop
cli
hlt
mov
jg
mov
movs
fwait
pop
jb
mov
call
sbb
dec
add
imul
imul
push
add
xor
and
out
test
pusha
je
aad
or
std
and
sar
inc
inc
mov
dec
es
cli
jbe
pop
popa
retf
mov
add
mov
mov
dec
xchg
bnd
xor
rcl
mov
xchg
push
sbb
outs
adc
pop
fsubrp
xchg
dec
mov
xor
cmps
adc
jmp
(bad)
push
adc
add
add
jnp
popa
inc
cmps
loop
mov
inc
jo
sbb
sar
sbb
fsubr
push
in
jp
inc
nop
loope
push
or
mov
ret
push
or
adc
sbb
jne
cmp
push
inc
mov
jle
ins
lahf
in
sub
loop
sbb
sub
sub
movs
in
mov
xchg
(bad)
inc
and
mov
mov
fs
int
jmp
adc
jo
inc
push
imul
mov
scas
lahf
test
mov
jne
jo
test
scas
push
and
inc
fadd
pop
sbb
adc
sbb
test
dec
scas
fs
test
mov
repnz
(bad)
push
arpl
mov
test
mov
(bad)
pop
dec
retf
mov
dec
js
push
adc
loope
das
js
aaa
pop
stc
es
(bad)
(bad)
fld
shr
sahf
hlt
(bad)
std
je
pop
xlat
movs
and
xchg
xor
mov
sbb
push
inc
jge
push
(bad)
pop
fwait
call
lods
sub
cmps
jmp
jns
xchg
imul
outs
loope
call
(bad)
stos
mov
pop
cs
repnz
inc
cmp
push
in
push
jmp
jae
movhps
sbb
and
ins
aam
sbb
cmp
push
nop
cli
push
sub
enter
xchg
sbb
jb
and
in
mov
pushf
dec
fmulp
mov
in
xchg
shl
xor
test
cmp
push
out
sbb
sub
mov
push
sub
mov
pop
xchg
xchg
sbb
mov
dec
cmp
jl
mov
aas
sub
out
adc
or
out
sbb
jmp
push
ret
pop
call
pop
xor
icebp
clc
cmp
in
jo
push
mov
imul
lock
dec
dec
jae
ins
and
pop
push
xchg
cli
rol
mov
add
inc
imul
add
cmp
inc
stc
inc
(bad)
nop
xor
(bad)
ds
jo
cmp
jg
in
inc
jne
sbb
cwde
add
or
popf
leave
jae
or
pop
in
imul
push
lds
rcr
xchg
movs
loop
cdq
lock
mov
dec
call
mov
sub
mov
int
xor
fistp
cmp
and
lahf
retf
std
sub
iret
test
(bad)
into
daa
jg
dec
js
xor
push
ret
mov
jns
and
mov
cdq
pop
ja
push
inc
(bad)
hlt
cs
xor
adc
push
fmul
jne
and
stos
clc
dec
or
fimul
scas
call
dec
shl
cmp
push
add
(bad)
in
xlat
cmp
jecxz
neg
nop
cwde
xchg
cs
enter
nop
ror
out
lahf
or
mov
in
scas
jp
int
lds
retf
out
repnz
lods
call
xchg
xchg
gs
es
sbb
std
scas
mov
dec
sbb
xor
or
sbb
mov
int
push
mov
xor
inc
pop
in
or
cmp
cmp
push
imul
std
int
loopne
xor
sub
sub
mov
jecxz
xchg
xchg
xchg
cli
call
mov
(bad)
cmc
pop
addr16
dec
lahf
jmp
sahf
or
mov
call
fst
mov
(bad)
sub
bound
xchg
cmp
repnz
hlt
cmp
mov
iret
(bad)
push
and
sbb
lds
add
mov
mov
iret
add
jmp
mov
pop
iret
jnp
loop
pop
das
jbe
sbb
loopne
in
in
mov
add
ins
mov
and
cmp
xchg
mov
xchg
test
fdiv
add
lahf
xchg
test
ror
push
cmps
adc
and
jge
fsubr
jl
cmp
pop
xor
mov
lods
pop
test
mov
fcom
adc
and
vmwrite
sbb
push
sbb
mov
popf
push
push
inc
rol
(bad)
jmp
or
sbb
add
mov
dec
cmp
sub
inc
and
clc
push
or
and
movs
loop
jmp
cmp
icebp
add
mov
into
jge
in
mov
lods
dec
imul
xor
not
sub
xchg
dec
push
sub
enter
fwait
mov
data16
pop
rcr
in
loop
out
rcl
ins
adc
hlt
dec
movs
cmps
loopne
or
nop
fstp
ss
cs
fcomp
cmc
mov
mov
outs
pop
dec
adc
ds
adc
stc
fnstcw
aas
fcmovu
out
fwait
(bad)
jns
ins
xor
sub
scas
push
or
sti
inc
fwait
gs
and
sti
into
add
push
jne
add
mov
mov
(bad)
ror
gs
adc
and
popa
mov
lods
mov
sbb
addr16
mov
adc
shr
xchg
movaps
xchg
mov
mov
mov
fdiv
popf
leave
(bad)
aam
push
mov
rcl
push
cli
jge
retf
shl
xchg
fst
ret
ret
jns
jle
mov
aas
iret
ror
push
and
or
(bad)
or
cdq
cmps
inc
jns
int3
mov
push
sbb
jge
in
sub
jle
jnp
pusha
mov
movs
shr
loopne
lods
test
mov
cmp
fiadd
push
adc
pop
xchg
(bad)
shr
mov
ret
es
xor
mov
xor
cmp
inc
xor
jmp
test
repz
mov
dec
or
dec
jne
repz
test
xor
jnp
dec
inc
mov
push
cmp
loopne
adc
fstp
call
sbb
or
xor
aam
cmp
pop
push
nop
inc
push
add
jmp
jb
arpl
out
sbb
stc
and
cmps
and
stc
fbld
in
dec
(bad)
dec
mov
cmp
retf
xchg
ret
fidiv
cs
cmp
push
aas
and
and
push
or
push
movs
sub
adc
xchg
add
fs
jnp
pop
pusha
cld
ret
jns
jp
std
jo
mov
shr
out
and
push
inc
cmp
sbb
sub
ja
push
add
and
dec
push
pop
test
das
pop
rsm
cwde
aas
mov
cmp
inc
ss
inc
arpl
push
lods
test
push
mov
lahf
xchg
sub
jmp
mov
jns
xor
cmp
jb
xor
mov
xor
mov
add
and
push
mov
xchg
fdivr
push
mov
mov
pop
sbb
inc
mov
ror
sbb
cmp
xchg
mov
test
inc
idiv
int
sbb
shr
ins
inc
xchg
or
mov
pop
ins
enter
or
sub
adc
(bad)
pusha
pop
mov
retf
sbb
addr16
(bad)
cmp
mul
pushf
and
cld
mul
je
jmp
xchg
or
jg
out
mov
daa
js
ins
adc
xor
push
in
dec
test
cwde
aad
sahf
cmp
add
arpl
sbb
xor
add
ret
(bad)
std
mov
ja
into
jb
mov
xor
(bad)
mov
out
aad
mov
dec
in
fimul
jne
or
outs
outs
push
or
inc
inc
rcr
sti
fld
jecxz
(bad)
test
mov
mov
push
je
pop
pop
xor
push
cmp
add
pop
outs
hlt
and
sub
xchg
les
jmp
sub
in
call
inc
sub
pop
mov
add
push
fidiv
mov
cdq
add
jmp
iret
test
into
xor
xor
ds
bound
jne
cli
or
scas
int3
xchg
jecxz
call
aas
retf
dec
cmp
lock
rcr
push
fdiv
pop
ror
test
setl
xchg
fstp
repnz
fld
jbe
hlt
jmp
arpl
es
out
xor
sbb
aam
sub
pop
or
xor
out
ret
push
outs
rol
retf
inc
test
inc
loope
pop
dec
mov
ds
and
fadd
ret
and
cmp
test
xchg
mov
adc
cwde
or
aad
scas
xor
scas
jmp
pop
mov
and
popa
push
retf
aad
dec
xchg
jno
mov
in
cmc
out
or
xchg
and
test
loope
add
mov
adc
das
js
xchg
mov
pop
mov
jmp
adc
ror
aas
stc
je
in
aas
sbb
dec
xchg
les
shl
or
sbb
jmp
xor
cmp
dec
push
xchg
ret
inc
ret
xor
dec
repnz
adc
jg
push
dec
adc
pop
repz
je
fnstenv
aas
jmp
xor
sub
or
int3
xchg
aas
les
xchg
aas
clc
(bad)
in
rcl
push
jmp
push
imul
mov
test
adc
jne
(bad)
add
jmp
call
adc
xchg
cmp
movs
xchg
daa
repnz
mov
stos
pop
icebp
sbb
xchg
sar
and
test
xor
mov
inc
sbb
or
cmp
jno
sbb
fwait
into
(bad)
mov
ss
jg
jge
push
jno
jecxz
adc
mov
gs
retf
ins
push
xor
mov
cli
dec
arpl
iret
cmps
mov
push
jl
mov
mov
cmps
sbb
sbb
push
xor
sub
jmp
ss
or
std
das
sar
sbb
mov
add
lea
outs
mov
mov
scas
inc
fsub
mov
cmps
(bad)
scas
clc
ds
loope
mov
repnz
imul
push
mov
mov
mov
push
int
adc
cmps
add
pop
add
test
or
fucomi
in
push
out
xor
dec
cwde
out
inc
dec
es
in
cmp
cmc
nop
lahf
iret
loopne
mov
(bad)
out
inc
stc
popf
cmp
sub
push
push
mov
dec
jmp
pop
jge
push
xchg
icebp
mov
and
sub
arpl
pop
cwde
out
mov
add
sbb
mov
in
mov
fld
cld
out
fsub
dec
pop
outs
mov
lods
jnp
cmps
pushf
test
ja
xor
cs
mov
mov
lahf
and
mov
and
pushw
loopne
(bad)
shl
bound
pushf
cli
(bad)
push
int
cld
sbb
push
pusha
jae
addr16
push
int
in
pop
ins
lds
sub
in
jg
jg
call
xchg
and
fwait
or
bnd
(bad)
jecxz
iret
inc
repnz
je
lods
or
mov
push
xchg
aas
enter
test
dec
fwait
and
pop
je
dec
xchg
adc
ret
das
jmp
push
mov
cmp
jnp
cmp
(bad)
jae
xchg
data16
jbe
(bad)
(bad)
lods
or
(bad)
cmc
ins
and
test
xor
sbb
mov
pop
jp
and
inc
mov
and
inc
bound
jmp
in
inc
pop
sub
ret
adc
or
lods
mov
std
push
cmp
dec
xchg
jp
and
mov
movs
push
in
inc
and
pop
dec
fbld
dec
mov
shl
rol
xchg
pop
sub
clc
inc
ret
mov
cmp
mov
in
xchg
ds
mov
js
(bad)
(bad)
movs
mov
or
cmp
and
test
pop
sub
pop
sbb
dec
mov
ret
stc
dec
add
dec
and
sar
movlps
mov
and
je
jne
js
xchg
cmp
sbb
add
pusha
and
enter
mov
aad
pusha
sbb
cmp
push
push
hlt
mov
loopne
pop
add
xor
xchg
fiadd
mov
sti
sbb
jbe
cmps
scas
push
jge
adc
push
hlt
mov
push
cmp
je
loop
sahf
pop
lahf
sub
pop
dec
push
repnz
adc
test
movhps
das
inc
xchg
into
out
adc
cld
mov
push
jo
inc
xor
mov
push
jmp
(bad)
(bad)
lods
test
adc
and
out
xchg
fs
mov
call
cmp
das
adc
mov
mov
mov
sub
lea
add
jmp
inc
in
clc
ret
fimul
push
push
mov
in
mov
shr
push
out
cmps
(bad)
xor
aas
dec
add
sbb
cwde
cwde
das
sbb
push
test
add
xchg
mov
pop
push
pop
jl
test
fld
int
fild
sar
sahf
les
imul
pop
in
xchg
cmp
outs
test
add
mov
push
xchg
mov
aaa
jnp
push
cmc
frstor
pop
sub
mov
push
pop
int
lock
add
ror
data16
dec
cmp
imul
out
aaa
enter
mov
bound
sti
es
imul
call
jae
lock
cmp
(bad)
(bad)
xor
fcomp
lods
mov
aad
mov
mov
lds
test
hlt
push
loop
bound
sbb
retf
loope
in
push
setg
sbb
(bad)
shl
push
and
mov
jge
jp
sbb
hlt
dec
scas
mov
addr16
ds
mov
int3
mov
jg
loope
pop
jbe
and
sub
mov
add
xchg
lods
xor
push
clc
ds
push
cmp
mov
bound
pop
lods
(bad)
mov
iret
shl
xchg
test
fbstp
outs
rcr
sbb
push
in
mov
stos
frstor
test
scas
mov
cli
call
mov
(bad)
jge
divps
xor
out
ins
push
adc
dec
mov
mov
mov
pop
jg
sahf
cmp
cs
xchg
jb
jmp
adc
inc
dec
push
pop
jmp
xor
add
inc
xor
push
sub
pop
mov
pop
dec
adc
dec
jnp
add
jno
xchg
lds
enter
sti
ja
push
mov
and
sbb
dec
pop
xchg
jne
mov
add
mov
mov
xor
inc
sbb
mov
or
outs
stos
cs
ret
dec
outs
imul
ret
pop
jmp
or
or
xchg
jae
jmp
(bad)
jnp
ja
and
sub
fsubr
add
push
rol
fcmovnu
sub
int
sub
leave
mov
int
and
sbb
lods
(bad)
outs
nop
pop
and
sbb
aas
dec
mov
sub
clc
stos
dec
fcos
cli
fdivp
(bad)
out
mov
xchg
fs
mov
out
call
mov
leave
inc
add
(bad)
adc
push
add
mov
les
fcom
lahf
mov
xlat
add
pushf
dec
xchg
loope
xor
sub
mov
pop
mov
out
lods
inc
enter
sahf
bound
(bad)
pushf
mov
addr16
xchg
mov
ret
mov
mov
je
xchg
jnp
push
or
gs
in
add
icebp
jno
les
adc
add
jmp
sub
ds
fldcw
pop
jp
add
pusha
daa
out
stc
push
xchg
ds
(bad)
mov
es
dec
or
mov
and
add
mov
bnd
sub
out
out
xchg
push
or
jo
or
pop
dec
shl
cmp
loop
jmp
fbstp
adc
jns
lods
push
pop
gs
xlat
inc
pop
xchg
push
out
sub
mov
xchg
(bad)
int3
adc
loopne
fld
dec
cmp
gs
adc
and
loope
or
pop
mov
fld
or
repz
sti
fidivr
dec
mov
cmp
mov
or
adc
cmp
mov
dec
push
ins
pop
inc
cmp
scas
jns
mov
and
pop
movs
adc
les
ins
ja
leave
inc
and
mov
addr16
cmp
(bad)
mov
icebp
push
mov
dec
cmps
push
jecxz
push
adc
and
cmp
clc
out
lea
pop
adc
sar
adc
xchg
lmsw
adc
xchg
pop
pop
mov
in
lahf
sub
jmp
push
jle
imul
hlt
mov
pushf
sti
fmulp
xchg
mov
sub
or
in
cli
ins
repnz
adc
push
mov
dec
and
pop
jbe
data16
inc
add
add
xor
inc
add
enter
and
push
out
mov
nop
sub
cmp
stc
ds
mov
inc
pop
shl
pop
ins
out
mov
xchg
popf
das
mov
sbb
mov
jmp
pop
scas
xlat
mov
xor
loopne
sbb
cmps
out
inc
(bad)
sbb
sub
bound
test
sbb
in
cmp
out
dec
add
test
adc
popf
adc
test
mov
adc
cwde
or
xchg
or
push
push
lods
mov
jle
mov
push
push
or
outs
push
push
jns
aad
push
jg
loope
cmps
test
push
fidiv
aad
pusha
mov
mov
outs
or
pop
retf
lahf
mov
stc
loop
ret
nop
mov
dec
push
xchg
aaa
sar
es
mov
movs
cmp
pop
jge
hlt
inc
jg
fnstcw
push
xor
in
das
sbb
mov
dec
xchg
aad
mov
adc
fwait
cmp
and
repz
jle
fbld
daa
mov
aas
pop
or
cs
std
sub
pop
sub
xchg
dec
push
push
pop
movs
fstp
sbb
arpl
loop
loopne
iret
dec
xor
sbb
imul
push
inc
pop
dec
daa
pop
scas
push
xchg
xor
xchg
rep
xor
pop
sub
sub
add
pop
pop
sti
cmpps
or
mov
inc
fpatan
jnp
pusha
mov
inc
and
mov
or
addr16
rol
push
jne
push
(bad)
repnz
ficomp
inc
and
(bad)
lea
inc
mov
push
inc
jmp
xor
adc
jbe
outs
xor
ret
push
and
cmp
jecxz
dec
outs
jb
adc
mov
test
push
add
adc
sbb
xlat
and
mov
mov
aaa
or
sub
repnz
out
out
loope
ret
cmp
int3
mov
cdq
ins
mov
cwde
inc
mov
jns
retf
cs
push
add
sbb
rcr
retf
ja
movs
and
lods
jle
test
imul
ins
hlt
pushf
xor
fcom
add
jne
sub
push
jmp
mov
sbb
gs
gs
cmp
shl
cmps
or
adc
pushf
clc
pop
mov
movs
and
jnp
sub
cmc
mov
in
cs
imul
push
aaa
(bad)
movs
mov
jge
lods
rcr
or
or
movs
bound
ja
sti
xor
cs
ins
aaa
xchg
push
fist
push
pop
out
or
mov
sbb
adc
mov
cli
sub
push
jmp
xor
hlt
ss
das
inc
dec
mov
jns
iret
iret
xchg
retf
pop
rcl
pop
jbe
mov
fxch
sbb
mov
and
jnp
(bad)
pop
jno
sub
jb
jle
movs
jmp
jmp
inc
(bad)
loop
addr16
fnsave
xor
retf
lds
xchg
xor
fmul
rcr
(bad)
(bad)
bound
push
sub
lods
add
dec
out
or
jmp
jp
ret
sbb
jnp
sbb
xor
sbb
jmp
(bad)
dec
xchg
sbb
nop
fist
xor
dec
cmp
pop
leave
pop
(bad)
adc
mov
loopne
imul
test
(bad)
mov
adc
and
icebp
mov
and
retf
ror
sbb
stos
test
ins
in
sub
stos
sbb
add
call
int
dec
ds
pop
pop
or
cmp
loope
or
in
ficom
adc
(bad)
pop
jge
ins
jae
jno
and
cli
mov
jb
and
leave
xchg
push
mov
call
xchg
push
dec
xor
sub
inc
mov
xchg
xor
mov
out
out
aaa
shl
call
inc
call
pushf
xor
(bad)
add
ds
stos
gs
rol
xchg
xor
dec
div
mov
jg
das
pop
in
test
scas
call
cld
sbb
out
loopne
mov
popa
push
das
fnstenv
sbb
bnd
jg
xchg
mov
addr16
dec
scas
xlat
aas
push
div
pop
mov
rcl
in
mov
mov
movs
or
mov
jmp
rol
mov
jp
mov
sbb
inc
jmp
xchg
and
clc
out
pop
jns
adc
push
lods
retf
xor
xor
(bad)
outs
or
mov
outs
loop
mov
(bad)
xor
pop
gs
inc
cmps
jle
fistp
fwait
stos
pop
ret
int
sbb
movs
fdiv
dec
fild
mov
fldenv
or
fstp
push
xchg
and
pop
jae
ins
pop
and
stc
mov
lods
mov
test
xchg
add
mov
xchg
ins
in
pop
and
clc
and
jmp
adc
xchg
cmps
loope
outs
into
adc
adc
rol
sub
inc
mov
cmps
popa
fisttp
inc
imul
mov
inc
imul
not
and
aaa
daa
sub
xor
sub
aam
(bad)
shl
loopne
xlat
or
pushf
stc
call
lock
cmp
shl
shl
ss
sbb
lods
dec
js
ret
sub
xchg
adc
jl
dec
addr16
add
ds
push
mov
in
push
cmp
pop
dec
out
cmc
cmp
adc
jp
mov
cs
es
shl
pusha
lods
in
lea
mov
mov
imul
test
imul
mov
or
fisubr
retf
(bad)
push
xchg
mov
cs
arpl
ins
fs
retf
popa
pop
lods
gs
mov
js
push
xchg
push
mov
bound
mov
jno
mov
pop
(bad)
mov
popf
outs
js
jle
dec
cmps
test
lahf
mov
icebp
xchg
bnd
inc
or
and
push
in
adc
mov
adc
push
dec
(bad)
and
pop
dec
or
idiv
test
jns
add
movs
outs
sub
push
rol
mov
test
or
xchg
sub
mov
pop
xchg
repnz
and
pop
scas
pop
mov
loop
shl
call
(bad)
sbb
fnstenv
jp
int3
dec
jbe
fwait
das
adc
add
mov
aam
pop
sar
mov
test
mov
fisub
pop
fcmovb
mov
ret
ficomp
inc
xchg
dec
jp
mov
cmp
cmp
jmp
jne
cli
les
aas
nop
test
inc
nop
jg
pop
scas
stc
retfw
std
xchg
shr
jbe
rcl
sub
leave
pop
(bad)
mul
add
jge
jb
pop
call
lea
ja
adc
test
mov
lods
test
pushf
xchg
sub
add
jo
ja
repz
and
sbb
retw
fstp
ror
inc
xchg
mov
sbb
lock
cmp
popa
fimul
call
jns
aaa
ja
dec
cmp
int
jns
dec
add
inc
es
cdq
xchg
pop
pop
xchg
sub
lods
fs
scas
das
and
sahf
fld
cmc
outs
aad
pop
(bad)
jmp
jg
imul
mov
or
outs
xor
xlat
or
add
cmp
aad
aad
adc
xchg
mov
stos
mov
leave
and
ins
push
ss
cmovbe
mov
lea
fimul
lods
cmp
jle
bound
in
cld
dec
out
adc
and
(bad)
in
test
shl
cdq
aas
add
cld
lds
test
shl
ins
retf
sbb
xor
sbb
ins
sub
pop
fwait
mov
mov
cdq
call
inc
adc
je
(bad)
ficomp
jae
movs
push
push
or
xchg
inc
pop
cmp
out
cmp
inc
jmp
fwait
jp
clc
inc
or
test
dec
dec
out
inc
or
sbb
(bad)
sbb
jecxz
test
dec
jnp
ds
xchg
mov
sti
sbb
inc
test
test
push
xchg
mov
cs
test
retf
sbb
push
enter
int
xchg
js
add
push
and
popf
or
and
add
mov
push
mov
jecxz
xor
shl
iret
mov
rcr
jo
int3
int
outs
stos
mov
test
inc
and
int
xchg
mov
mov
lock
mov
fcmovb
data16
inc
cs
push
js
jo
(bad)
mov
icebp
sti
leave
push
or
mov
push
cmps
inc
jl
sbb
inc
call
retf
ss
xchg
lea
dec
popf
sahf
mov
sbb
sar
scas
or
sbb
les
les
shr
sbb
dec
mov
jmp
add
jg
loop
inc
push
dec
jle
bound
mov
mov
loop
lahf
mov
sar
loop
loopne
push
and
push
call
lods
push
mov
xor
or
mov
pop
js
adc
cwde
cmp
dec
gs
inc
in
fwait
test
pop
pop
out
ret
outs
mov
scas
sub
inc
shl
jns
repnz
jmp
hlt
shr
ror
mov
jecxz
push
jne
inc
mov
xor
ror
pusha
retf
pop
ss
mov
pop
and
cmc
ror
enter
mov
fadd
cdq
cdq
xor
sbb
repnz
in
sub
stos
push
jns
fcom
lods
inc
popa
lods
(bad)
adc
test
dec
test
cli
mov
les
add
(bad)
leave
add
ins
pop
cmps
sub
add
sub
pop
and
mov
bound
popf
inc
cld
in
enter
adc
arpl
sbb
sahf
movs
xor
xchg
mov
xchg
xor
inc
adc
mov
push
stos
cdq
sbb
popa
cmp
ficom
shld
jmp
scas
mov
mov
pop
(bad)
repnz
inc
(bad)
mov
mov
loopne
sti
movs
add
dec
enter
mov
push
add
inc
adc
push
sub
cli
add
xchg
xlat
adc
ins
cwde
not
and
mov
sbb
popf
mov
imul
in
mov
out
add
leave
pusha
inc
mov
cmps
xchg
jb
push
leave
push
fbld
jmp
std
in
fidiv
leave
pop
jg
inc
xchg
mov
nop
push
in
icebp
inc
jmp
add
sbb
adc
and
mov
xchg
inc
test
ret
mov
loope
test
fwait
retw
or
gs
in
fisub
or
push
pop
in
jl
add
xor
test
test
cmc
jge
fsub
movs
cld
hlt
sti
retf
jmp
inc
out
sub
(bad)
jb
inc
daa
and
xchg
inc
fldenv
cwde
data16
jae
in
in
test
jge
add
shl
imul
xor
xchg
test
inc
out
sbb
enter
xchg
js
repnz
jl
or
xchg
repnz
sbb
cmp
jae
xchg
scas
jo
outs
adc
ror
arpl
adc
iret
dec
mov
pop
xchg
js
dec
jnp
mov
rol
movs
or
(bad)
dec
arpl
psubw
lock
and
mov
inc
xchg
nop
iret
test
retf
sub
cli
lods
jo
(bad)
popf
push
out
dec
cld
mov
imul
mov
aad
cmp
mov
jg
add
shl
fadd
xchg
xor
mov
cwde
mov
imul
rol
push
sub
sub
jbe
ds
mov
and
call
retf
ficomp
sub
sub
push
retf
mov
pop
out
es
ins
adc
jge
dec
mov
pop
test
leave
dec
aam
aam
xchg
inc
ins
push
sar
in
cmp
mov
sub
stc
(bad)
in
aas
lods
movs
push
outs
push
fwait
mov
sub
push
mov
sbb
test
inc
cmps
test
mov
enter
ret
sbb
jbe
push
and
push
sub
jge
cmp
std
jnp
pop
xchg
jle
and
or
sbb
mov
stc
cmps
sbb
push
ror
sub
ss
or
inc
(bad)
xor
(bad)
jmp
push
cmp
push
imul
or
push
cld
fcom
fmulp
inc
mov
sub
cld
int3
sub
jmp
lea
push
or
in
jne
or
adc
mov
mov
aam
shl
ss
jne
jo
fsubr
dec
xchg
cs
cwde
push
es
cmp
loope
fs
add
lea
cmp
fld
bound
(bad)
cmc
cs
adc
jae
cdq
test
imul
xchg
push
int
(bad)
add
imul
mov
xor
sti
out
ror
arpl
test
cmp
ffreep
div
in
and
loopne
xor
dec
movs
shl
lods
adc
or
adc
xor
(bad)
lods
mov
outs
push
pop
or
loop
or
loopne
test
jecxz
push
stos
imul
sti
fiadd
mov
je
outs
sbb
outs
icebp
sbb
mov
add
xor
mov
push
or
cli
xor
leave
fld
les
or
jns
enter
mov
hlt
test
call
cmp
in
push
dec
mov
mov
jbe
mov
imul
cmp
scas
aam
gs
adc
std
out
stc
or
imul
xchg
push
fsub
mov
and
retf
arpl
xchg
sar
add
jb
xchg
aad
add
pop
rcl
pusha
dec
dec
and
inc
xor
scas
fsub
cdq
sahf
xchg
in
fidiv
mov
loope
cmps
inc
mov
push
mov
inc
test
sbb
or
test
retfw
fst
arpl
sbb
std
aaa
test
xor
movs
fidivr
(bad)
mov
das
retf
sti
dec
outs
and
pop
jmp
pop
push
loope
ins
mov
loop
int3
pop
outs
idiv
test
fsub
jmp
add
outs
inc
dec
mov
cmp
pop
dec
or
sbb
sub
iret
das
sub
push
sbb
add
xchg
push
mov
push
xchg
into
aas
rcr
lock
aas
call
dec
add
mov
inc
and
jbe
nop
test
pusha
cmc
jle
stos
mov
or
or
xchg
add
push
(bad)
lea
ficomp
push
lea
dec
addr16
imul
(bad)
pop
out
add
(bad)
fsub
test
xor
imul
fistp
or
adc
ficomp
jg
mov
mov
xor
sti
jo
pop
cmps
jl
pop
adc
(bad)
sbb
loope
in
push
push
hlt
xchg
std
adc
or
arpl
leave
(bad)
sub
nop
and
jg
xor
mov
nop
test
inc
and
sar
jbe
cmp
and
loope
addr16
add
xchg
xor
repnz
repnz
push
and
cwde
mov
fs
xchg
and
or
jnp
iret
pop
dec
rcr
and
loope
cmps
xor
std
push
loopne
inc
adc
lods
push
sub
mov
and
and
sub
dec
push
gs
push
mov
mov
dec
icebp
push
shr
jno
sbb
push
loopne
fistp
jle
mov
xor
dec
cmp
ins
nop
sahf
xlat
adc
loope
jb
sbb
std
push
(bad)
in
sbb
es
sub
shl
repz
add
pop
xchg
je
mov
out
ret
(bad)
fild
test
icebp
dec
ds
push
cmc
pop
popa
repz
fs
(bad)
xor
xchg
add
push
dec
je
in
fldenv
xor
imul
add
cmp
sbb
push
lock
mov
xchg
cs
imul
mov
push
sti
cmc
inc
scas
mov
test
fucom
adc
sub
pop
adc
fsubrp
sub
fistp
in
mov
adc
retf
fidivr
or
adc
fucomi
push
mov
dec
scas
xor
adc
xchg
clc
and
sub
pop
xor
adc
xlat
adc
data16
sbb
sbb
nop
cmp
mov
(bad)
test
in
adc
pop
iret
(bad)
stos
stc
les
in
lea
sub
sbb
sub
inc
mov
jmp
pop
mov
xor
out
inc
mov
push
imul
mov
xchg
push
lahf
xor
inc
or
cmps
inc
bnd
dec
jne
sub
popa
push
pop
lahf
sbb
push
sbb
nop
cwde
cwde
push
dec
add
push
(bad)
and
mov
mov
shl
sbb
adc
jge
jecxz
in
mov
ret
ret
ja
dec
push
xchg
mov
mov
in
cdq
out
rcr
shl
and
xor
push
stc
(bad)
mov
adc
mov
adc
xlat
add
and
test
jo
xchg
sub
repnz
mov
inc
adc
inc
push
loope
add
sti
aas
mov
repnz
lock
sub
repnz
mov
mov
xchg
push
inc
repnz
fcmovu
mul
pop
retf
(bad)
xor
lahf
sti
jns
adc
mov
outs
outs
dec
test
fmul
cmp
xor
test
push
xor
pop
inc
ret
shl
cs
cmp
inc
movs
cmp
xchg
xor
arpl
dec
mov
aaa
scas
outs
idiv
pop
xor
movs
xchg
dec
push
dec
jle
cmp
push
ins
or
lods
rep
sub
pop
(bad)
popf
cmp
ins
cmp
out
into
hlt
push
fwait
mov
mov
adc
push
pusha
push
inc
mov
out
adc
in
inc
sub
hlt
sub
mov
call
(bad)
loopne
sbb
cmp
mov
and
jmp
pop
adc
in
dec
inc
pop
cmps
xor
jecxz
or
popa
lea
pusha
ror
(bad)
nop
or
mov
popf
test
xchg
mov
rcl
mov
add
sbb
enter
pop
sub
mov
push
cmps
cdq
call
cmp
mov
out
fistp
leave
loopne
cmp
jb
sub
or
or
jle
aam
xchg
lds
pop
mov
aaa
add
add
cmp
jmp
mov
xlat
mov
daa
in
xchg
mov
inc
sti
fisub
ja
cmp
inc
xor
or
mov
mov
in
xlat
xlat
out
je
shr
jle
bndstx
sub
mov
xchg
add
adc
xchg
push
or
test
ins
dec
or
pop
test
jbe
lock
inc
jae
out
cmps
mov
in
jae
cli
jno
jo
shl
xlat
add
xor
jmp
mov
test
out
(bad)
fisub
in
xor
dec
imul
ins
push
dec
jno
pop
jne
(bad)
xor
imul
popa
and
shr
adc
and
shl
sub
mov
cmc
add
sbb
fsubp
enter
dec
repz
cmc
repnz
sbb
lock
jo
mov
lods
jmp
push
jb
sub
gs
cmp
adc
xor
push
cld
data16
jbe
jbe
in
xor
jns
imul
pusha
mov
xor
inc
mov
sbb
in
les
push
loop
mov
lods
pop
daa
lock
imul
adc
jbe
jg
pop
mov
pop
cmp
loope
jmp
or
cmps
arpl
push
cdq
add
movs
adc
leave
sbb
arpl
popf
(bad)
xchg
and
ret
pop
or
movs
jno
sub
shr
repnz
std
cmp
mov
mov
call
bound
mov
dec
cmps
xor
fistp
cwde
mov
(bad)
pop
push
push
push
jmp
adc
aaa
jmp
stos
movs
mov
or
nop
mov
and
ret
adc
sbb
mov
mov
retfw
cdq
loope
mov
clc
(bad)
and
repz
fwait
test
xchg
std
(bad)
call
fsubr
mov
movs
push
je
call
jge
enter
cmp
rcr
cmp
leave
pop
mov
es
(bad)
outs
mov
ret
lods
dec
mov
sbb
inc
in
lods
(bad)
fdivr
test
jnp
fistp
sbb
and
mov
push
jge
lods
sub
mov
jg
pop
sub
je
mov
cmp
jl
loop
push
cmp
neg
dec
push
and
and
fadd
call
sub
out
gs
mov
xor
out
and
int3
movs
jp
pushf
jle
cs
mov
xor
test
sub
jno
popa
pop
cmps
hlt
mov
push
or
ds
(bad)
push
rcl
mov
imul
in
jb
and
jmp
add
inc
repz
pop
les
pushf
das
add
push
mov
adc
lods
sbb
ja
xchg
xchg
mov
nop
xchg
rcr
push
call
add
inc
and
and
cli
loop
test
call
out
push
sub
and
jb
fwait
sub
push
sub
inc
jecxz
repz
push
mov
xchg
mov
mov
jecxz
ret
arpl
retf
mov
movs
idiv
nop
nop
stos
ret
inc
mov
mov
jne
or
dec
xchg
lock
or
ins
or
and
cmp
mov
rcl
icebp
xchg
xor
push
test
neg
jnp
fcom
popf
mov
fmul
icebp
jmp
cmp
add
jo
or
or
push
mov
sbb
push
dec
addr16
jle
pusha
test
pop
sub
(bad)
mov
imul
shl
addr16
(bad)
jp
sbb
jo
jle
sub
cwde
add
dec
or
ds
dec
rcr
ret
inc
es
daa
mov
nop
jmp
shl
repnz
movs
ins
ficomp
jg
aaa
add
lods
lods
stos
pushf
mov
adc
jmp
jae
adc
adc
pop
xchg
adc
inc
mov
out
fistp
pop
pusha
movs
sti
fistp
ds
nop
(bad)
in
cmps
imul
ror
scas
imul
scas
sub
jae
xor
fcmovu
test
(bad)
gs
test
pop
pop
js
xchg
add
es
clc
sub
adc
jae
and
mov
call
inc
push
retf
dec
imul
leave
or
fst
sub
test
jge
cmc
mov
inc
add
inc
loop
adc
loopne
push
retf
mov
mul
xor
or
mov
inc
pcmpeqb
jne
ss
cdq
je
or
clc
ins
or
cmps
outs
dec
leave
into
adc
sbb
xlat
not
fimul
leave
pop
adc
movs
pop
sbb
fisttp
loope
aam
mov
imul
inc
jmp
test
(bad)
aas
scas
inc
cld
jge
cmps
inc
fs
jecxz
call
mov
ja
or
or
push
ror
dec
push
add
xchg
popf
mov
add
sti
sahf
mov
frstor
xchg
leave
cmp
outs
div
inc
dec
ins
in
xor
jg
or
ss
sbb
push
mov
sbb
jo
or
(bad)
adc
adc
mov
stc
pop
imul
push
les
leave
mov
das
fsubr
call
fsub
cs
stos
leave
inc
mov
jb
int3
sar
lahf
in
pop
gs
call
adc
mov
jp
lea
jmp
or
push
push
pushf
mov
inc
movs
mov
aad
and
push
push
shr
xchg
sbb
dec
pop
shl
adc
ja
inc
pop
(bad)
lock
out
fld
neg
pop
jg
xor
sbb
cmp
in
xchg
pop
pushf
(bad)
cmps
push
(bad)
data16
std
or
mov
mov
sub
jnp
sbb
in
push
mov
dec
int
iret
fsubr
sbb
mov
xchg
iret
iret
mov
leave
xchg
stos
inc
sub
(bad)
pop
push
ins
icebp
mov
adc
cdq
sub
loop
loop
movs
xor
ins
mov
cmp
sbb
mov
data16
fwait
enter
pop
jne
inc
jns
jno
mov
jno
adc
or
es
ja
enter
pop
(bad)
fyl2x
xor
(bad)
jnp
lods
mov
aaa
icebp
mov
mov
inc
jo
pop
out
cmp
das
(bad)
push
cmp
repz
mov
movs
std
push
adc
add
cwde
dec
psrlw
inc
push
xor
adc
sti
gs
ret
arpl
bnd
(bad)
mov
rol
inc
retf
mov
ins
daa
mov
jmp
lea
aas
adc
xchg
inc
lods
xlat
pop
stos
mov
lahf
int
int
test
xchg
into
std
pushf
(bad)
daa
jmp
push
cmps
inc
fiadd
sub
add
inc
cmp
es
lea
call
adc
dec
push
sub
push
ror
movs
pop
loope
and
and
sbb
in
sar
mov
dec
mov
and
pushf
pop
scas
je
int3
call
sbb
jns
stc
outs
je
push
rcr
cmps
das
push
mov
push
xor
xor
dec
or
int3
jle
inc
adc
and
dec
mov
mov
ja
jg
shl
jp
icebp
pop
(bad)
sar
repnz
jg
repnz
dec
sub
cmps
sbb
dec
cmovge
pusha
xchg
jmp
xor
add
and
inc
clc
ja
mov
push
sbb
mov
bound
arpl
div
or
enter
mov
scas
dec
out
popa
inc
ins
ret
jno
test
cwde
sbb
out
inc
pop
in
mov
and
in
movsx
push
fiadd
movq
out
fmul
ds
push
fbld
test
retf
or
cmp
adc
sahf
je
outs
ds
cmp
inc
mov
iret
dec
sub
shr
loope
test
dec
inc
mov
(bad)
jbe
test
or
stc
ror
pop
add
cmps
(bad)
jns
les
add
stc
stos
retf
nop
xchg
sub
sahf
mov
adc
icebp
jl
out
ret
pop
jmp
sub
scas
and
popf
stos
test
and
sar
shl
bound
lea
fsubr
mov
xlat
and
iret
pusha
jp
loopne
push
outs
xor
mov
shr
push
inc
es
cmp
je
rol
mov
cmp
jecxz
dec
lods
pop
(bad)
cmps
jo
push
jmp
push
pop
fsubp
adc
adc
or
scas
sub
xor
stc
add
add
xlat
or
enter
mov
out
loop
call
rcl
gs
stc
xor
ins
in
jns
mov
sub
push
push
xchg
stc
xchg
nop
stos
ficomp
arpl
(bad)
dec
out
out
sahf
lock
imul
lds
pop
dec
in
(bad)
push
stos
lods
dec
and
xor
std
adc
push
push
sbb
stos
scas
call
jne
jmp
jle
lods
and
repnz
cmp
or
ret
cs
add
ror
out
cs
sbb
cmp
cs
(bad)
and
je
pop
sub
ror
mov
mov
stc
or
or
dec
es
xor
pop
mov
mov
mov
sub
aas
pop
xor
data16
ss
arpl
scas
push
mov
cmc
sub
frstor
ret
inc
adc
pop
scas
mov
enter
pop
pop
mov
xor
loope
inc
in
jne
xlat
out
inc
mov
inc
mov
xchg
pop
cdq
or
and
jmp
mov
adc
ins
or
mov
add
jb
and
and
dec
sub
dec
sar
fsubr
push
cmps
mov
test
xchg
lahf
ss
push
jne
push
push
xchg
in
les
outs
jb
xchg
outs
push
cld
mov
loope
iret
aaa
je
dec
push
or
cs
adc
push
adc
dec
sti
or
xor
xor
add
aas
imul
dec
sub
or
js
mov
sub
pop
mov
adc
cmp
scas
mov
add
mov
iret
pop
in
pop
mov
lahf
pop
and
xchg
out
dec
lock
push
(bad)
fcomp
push
lods
sbb
xor
dec
scas
xor
mov
shl
rol
adc
mov
pop
mov
hlt
jmp
cdq
mov
mov
cmp
lods
mov
(bad)
mov
sar
adc
push
lock
mov
jp
push
movs
inc
lea
xchg
mov
inc
loop
(bad)
outs
sbb
cmps
or
jp
leave
je
lock
test
add
mov
dec
daa
mov
mov
nop
pop
pop
clc
and
ret
pop
loopne
in
int
imul
jno
jae
(bad)
adc
and
cwde
call
or
cdq
mov
sub
ds
es
outs
sub
mov
retf
jbe
adc
jecxz
push
mov
inc
lea
je
dec
mov
lock
inc
and
xchg
cmp
bound
mov
in
push
mov
sub
ret
test
xor
sub
add
in
arpl
cmp
inc
mov
rol
jne
mov
mov
stos
cwde
push
and
aas
mov
popf
or
es
push
push
je
daa
imul
movs
ja
pop
push
pop
dec
mov
push
fisttp
adc
ret
(bad)
aam
daa
(bad)
imul
mov
ja
pop
into
rcl
aaa
dec
mov
data16
mov
or
inc
jle
sub
pop
add
cmp
ja
inc
fwait
sub
into
xchg
fdivr
scas
push
cmp
(bad)
and
scas
gs
push
dec
and
pop
enter
cmps
cmp
adc
jb
sbb
scas
pop
imul
sub
mov
test
cmp
add
movs
jmp
push
or
mov
in
mov
stc
mov
dec
xchg
sub
or
push
nop
mov
cmp
cwde
xor
add
add
mov
repz
pop
mov
mov
hlt
aas
pop
(bad)
std
dec
sbb
sti
mov
dec
inc
cmps
(bad)
nop
cmc
cdq
(bad)
repz
cmps
(bad)
jns
shr
add
push
push
mov
pop
std
ds
dec
ins
rcr
lods
jne
scas
out
inc
mov
jl
ins
(bad)
sub
in
adc
test
push
nop
pop
push
outs
call
pop
add
sbb
popa
in
loopne
mov
and
jnp
add
add
push
push
adc
sbb
es
in
pop
outs
push
ret
sbb
xchg
or
dec
fnstsw
sbb
xchg
mov
pop
or
push
push
imul
sub
mov
fild
les
mov
mov
pop
mov
mov
fsub
out
lahf
and
mov
and
adc
fistp
test
jmp
or
fld
mov
std
mov
ss
adc
cmp
or
mov
repz
popf
std
inc
pop
inc
jge
push
retf
cmovne
not
adc
enter
je
adc
mov
sbb
in
out
mov
cdq
clc
movs
loope
fidivr
cmp
cmp
dec
add
adc
cmps
loop
and
retf
lds
push
outs
lahf
pop
pop
adc
mov
mov
rol
clc
cdq
or
xchg
cli
inc
inc
mov
sbb
push
movs
hlt
adc
sar
pushf
sbb
xchg
sbb
and
pop
mov
xor
cmps
into
dec
xchg
sbb
iret
push
and
mov
sub
das
cs
loopne
jb
call
lods
daa
stos
sub
and
in
leave
sahf
or
fcom
push
mov
mov
xchg
rol
push
add
int
push
xchg
ror
xor
std
(bad)
mov
push
adc
xchg
or
adc
dec
call
jl
push
and
retf
sub
push
adc
fidiv
rol
and
sub
add
idiv
es
sub
mov
outs
ret
pop
leave
dec
add
dec
mov
imul
(bad)
mov
xchg
jnp
pop
int3
sbb
inc
dec
jmp
or
arpl
xlat
out
inc
mov
in
mov
popa
mov
and
sahf
jp
test
ins
inc
cmp
aam
mov
inc
arpl
jge
aam
popf
xchg
jg
addr16
jns
adc
sub
outs
popa
in
inc
jp
inc
xlat
popa
movs
cwde
popa
enter
mov
fwait
clc
add
addr16
xor
int
movs
adc
fist
jns
add
xchg
test
aaa
adc
sub
mov
std
daa
enter
mov
cmp
pusha
jge
dec
pop
sar
add
mov
cmp
les
push
push
enter
int3
mov
xchg
mov
cmps
adc
lods
sbb
shl
clc
sti
sahf
stc
jmp
dec
pop
shl
fisub
adc
mul
into
out
test
call
dec
and
nop
mov
or
jno
or
sub
push
sbb
iret
lods
fld
mov
cli
les
dec
bound
sub
push
inc
sub
and
mov
iret
mov
jbe
jle
inc
sub
lods
fidiv
push
popa
pushf
into
pushf
fldln2
dec
or
and
shl
mov
into
push
pop
xchg
jae
add
es
(bad)
push
xchg
repnz
sub
in
push
add
in
stc
push
jle
enter
jno
movs
call
inc
fadd
dec
sub
sbb
into
xor
lahf
push
push
rol
stos
cs
not
cmp
in
test
movs
push
mov
xor
mov
xlat
pop
nop
jbe
leave
jl
jecxz
xor
xor
dec
sbb
popa
rcl
sbb
pop
dec
inc
je
xor
shl
mov
add
adc
inc
cmp
jmp
or
mov
cmp
std
(bad)
sub
stos
mov
jl
xor
and
lds
stos
ret
mov
mov
pop
mov
bnd
mov
push
jb
xchg
pop
call
push
out
jmp
inc
push
dec
dec
push
ss
imul
cmp
push
ret
in
push
rcl
mov
test
fidivr
jo
jo
cwde
out
dec
mov
sub
xchg
add
push
push
mov
and
retf
dec
popf
inc
test
sub
scas
stos
cmp
mov
daa
jmp
xchg
xor
cmc
add
call
dec
mov
pusha
imul
and
es
and
pop
int3
inc
jl
lods
mov
and
dec
mov
dec
out
sub
inc
aad
mov
jno
ins
pop
fs
mov
push
clc
hlt
cmp
sub
sar
lods
and
inc
mov
mov
mov
mov
leave
add
push
xchg
ss
xor
jge
dec
mov
les
cmc
cmp
lock
inc
ret
mov
out
pop
push
cmps
fld
mov
cli
nop
mov
sbb
mov
sar
push
(bad)
push
mov
sub
popa
jp
sub
repz
add
sbb
push
cwde
mov
sub
xor
cwde
loope
sub
push
xchg
out
arpl
dec
pop
inc
jne
sbb
stos
sbb
pop
clc
sbb
out
add
xchg
xchg
cmp
inc
xchg
mov
(bad)
fisttp
jmp
and
mul
push
xchg
rcr
xchg
add
(bad)
or
xor
jno
sbb
fcom
les
sti
fcomi
ret
in
rcl
push
cmp
mov
sub
pop
mov
fcom
jnp
mov
adc
jae
ret
pop
cmp
sub
pop
das
push
mov
ret
jno
sub
jno
xlat
jb
inc
out
xor
xchg
lock
push
xchg
ret
and
jo
jecxz
in
repnz
ror
fs
sahf
mov
push
mov
xor
dec
pop
mov
mov
js
idiv
xor
test
push
std
daa
ror
inc
push
pop
mov
dec
xor
leave
into
xchg
or
jno
not
add
scas
mov
mov
fimul
pop
pop
add
xor
xchg
pop
ins
push
cmp
jne
cli
fidiv
or
jns
arpl
xchg
dec
sbb
js
xor
and
cmps
add
mov
frstor
cmp
sahf
scas
int3
cmc
dec
stos
in
fsub
ja
(bad)
push
call
pusha
pop
sbb
(bad)
(bad)
fadd
mov
(bad)
xchg
mov
xchg
mov
add
jns
adc
and
jae
fimul
dec
retf
and
outs
dec
out
stc
and
dec
dec
pop
push
xor
jmp
mov
(bad)
int3
icebp
cmp
mov
cs
lods
adc
dec
push
(bad)
xchg
pop
cmp
push
loopne
inc
fiadd
pop
or
in
test
mov
jle
dec
sbb
cmp
retf
adc
mov
fistp
jg
(bad)
mov
inc
movs
mov
inc
lahf
into
pop
jno
pop
ins
jle
fidivr
in
pushf
stos
mov
jp
mov
adc
fadd
in
jecxz
sub
out
cdq
inc
mov
sbb
in
stc
push
fidivr
fisubr
out
pop
sahf
(bad)
dec
test
icebp
sahf
mov
jecxz
inc
cld
lods
xlat
into
and
stc
push
fsubr
push
add
iret
jno
xor
lds
int3
jmp
mov
cmps
imul
fsub
mov
sbb
mov
bound
aad
dec
push
xchg
mov
outs
dec
sbb
loopne
mov
aad
xor
into
repnz
push
pop
xor
jmp
repz
icebp
push
fbld
sahf
dec
dec
std
push
(bad)
adc
xchg
xchg
adc
mov
enter
jmp
les
inc
scas
push
jnp
fmul
adc
or
(bad)
xchg
gs
pop
sub
hlt
stos
sahf
int
loope
popf
inc
xchg
mov
mov
jb
jmp
sar
in
inc
ins
inc
xor
mov
dec
fdivr
movs
jmp
sbb
inc
aas
jnp
sti
or
mov
adc
push
add
xchg
add
pop
or
cld
(bad)
std
sub
push
loope
jae
std
jnp
inc
ins
jno
add
pop
push
push
jno
cmp
call
(bad)
or
dec
jmp
mov
leave
jne
loop
sub
pushf
sbb
or
mov
push
xor
xor
and
add
in
inc
inc
repnz
xchg
mov
hlt
out
jge
jbe
jns
nop
mov
mov
cmp
imul
lahf
out
sar
push
or
or
out
mov
dec
mov
and
shl
mov
ss
inc
xor
cli
mov
inc
stc
pop
push
(bad)
mov
xchg
mov
cwde
mov
adc
inc
(bad)
pop
out
push
sbb
mov
add
sbb
int3
cli
sub
out
call
add
adc
stos
pop
stos
out
les
mov
lock
push
(bad)
xchg
push
push
imul
inc
jbe
scas
ret
xchg
ret
xor
push
dec
test
inc
mov
inc
xchg
dec
stos
inc
xor
faddp
retf
cmc
call
fmul
push
pop
pushf
retf
dec
rol
nop
add
fnstcw
je
(bad)
mov
inc
mov
jnp
push
test
daa
inc
mov
sti
push
cmps
rcr
movs
movs
imul
popa
xor
lahf
out
iret
cmp
push
fwait
sar
pop
ffreep
in
cmc
shl
(bad)
retf
xor
iret
fwait
(bad)
rol
adc
xchg
jp
outs
outs
xchg
call
mov
iret
and
in
mov
or
and
sbb
fadd
(bad)
out
push
push
adc
je
cmp
xlat
sub
push
xchg
arpl
sbb
shl
xor
lods
outs
test
adc
and
adc
in
pop
sub
ror
mov
in
arpl
loop
xor
rcl
outs
mov
mov
jno
adc
jecxz
daa
out
clc
mov
inc
out
xor
ja
fild
xchg
repz
xor
or
cmp
aaa
mov
dec
inc
sbb
cwde
jmp
movs
jecxz
adc
mov
aam
mov
sub
sub
push
shl
pop
sbb
cmp
inc
xor
in
pop
mov
dec
int3
mov
int
fwait
push
or
mov
add
mov
dec
pop
adc
mov
movs
ins
xchg
adc
adc
dec
sahf
sbb
xchg
add
xchg
xchg
enter
loope
retf
leave
sbb
sub
jl
fild
adc
dec
aas
jp
inc
mov
sti
dec
mov
sub
loopne
or
jp
jp
or
sar
leave
imul
inc
pop
inc
xor
js
idiv
mov
push
add
sbb
scas
push
inc
mov
clc
sub
in
sub
jl
cmp
je
stos
adc
ins
test
and
push
(bad)
jns
test
ror
cmp
jle
or
ds
das
push
loop
jecxz
sub
push
mov
jecxz
aas
dec
xchg
add
push
rcl
loopne
dec
xor
inc
rol
lea
push
dec
push
cmps
retf
cmps
fild
adc
bsr
jg
std
ret
jmp
dec
adc
mov
outs
push
xchg
dec
pop
cmp
sub
and
int3
or
mov
out
push
(bad)
sbb
iret
and
push
int3
sub
loopne
mov
fidiv
mov
call
test
clc
les
inc
inc
adc
pop
jmp
cld
pop
sub
and
push
stos
cwde
scas
cwde
mov
mov
in
lahf
rcr
cmps
repnz
out
push
jae
(bad)
jbe
lods
push
call
movs
aam
sbb
and
pushf
sub
test
cmps
jbe
pop
inc
ds
xor
adc
jmp
jecxz
aas
sub
(bad)
fnstcw
call
(bad)
cmp
xor
pusha
movs
(bad)
test
fs
stos
adc
pop
push
add
xchg
lahf
jmp
add
nop
dec
std
adc
mov
mov
mov
mov
cmp
xor
cmp
cmc
xchg
mov
push
cmc
xor
pop
clc
mov
sbb
pop
and
stos
add
cwde
sub
mov
or
sub
aaa
iret
std
xchg
(bad)
dec
test
mov
inc
jl
cmps
nop
push
inc
jp
cmc
mov
out
scas
call
call
syscall
adc
sub
mov
cs
mov
inc
enter
test
mov
call
vsubsd
push
mov
sbb
std
mov
inc
inc
lds
xchg
call
bound
mov
inc
hlt
push
(bad)
das
arpl
outs
xchg
ins
push
inc
dec
or
aad
xchg
imul
mov
out
je
jge
lods
test
cmp
nop
int
jb
ds
cmps
frstor
sahf
fcmovne
outs
jp
jg
jmp
movs
sbb
pop
lock
sub
imul
sub
mov
add
sub
nop
push
sar
js
sbb
jmp
rol
sbb
push
outs
inc
mov
mov
push
mov
mov
xor
(bad)
hlt
sub
mov
aad
ret
lea
add
xor
mov
ret
mov
or
add
push
xor
xlat
and
pop
xor
movs
cmps
inc
xor
ins
ja
and
push
shr
mov
pusha
out
adc
cli
mov
sbb
mov
mov
retf
xor
or
push
lock
cmp
(bad)
stc
pop
out
daa
(bad)
xor
cmps
fsub
inc
push
(bad)
adc
inc
mov
rcr
aas
dec
xor
sub
imul
icebp
pop
pusha
lock
push
retf
cmp
aas
bound
or
lea
sub
dec
(bad)
push
je
sub
out
sub
adc
mov
jbe
push
push
or
stos
mov
pmulhw
xchg
adc
mov
hlt
sbb
dec
aam
shr
xchg
idiv
xor
cmp
add
es
cdq
inc
inc
gs
xchg
pop
or
dec
pop
scas
pop
mov
imul
mov
sub
pop
pop
pop
in
jae
ins
or
aam
idiv
cdq
cld
sbb
xor
mov
cmps
push
mov
aad
inc
push
sahf
push
xor
pop
imul
test
cmc
jle
jne
ficom
retw
jns
pop
push
dec
inc
push
and
int
jnp
and
mov
fwait
and
movs
test
or
loop
(bad)
adc
pop
xchg
test
in
icebp
ret
xor
retf
cmp
dec
ss
pushf
cli
dec
sbb
add
inc
test
xchg
push
inc
sbb
loop
stos
icebp
or
cmc
sub
jnp
xor
ins
ss
dec
sbb
add
stos
ficomp
and
xor
push
fs
sahf
bound
lahf
mov
cwde
dec
jb
aas
aas
int
dec
jle
dec
jbe
dec
mov
mov
pusha
sub
das
rol
test
mov
xchg
xlat
js
jae
inc
push
xor
push
mov
neg
outs
(bad)
imul
push
dec
adc
icebp
sub
cmp
jmp
and
rol
add
inc
shr
dec
pushw
dec
jne
pusha
sub
mov
dec
and
es
jl
and
and
inc
fidivr
nop
ja
stos
shl
xor
and
xor
fisub
mov
aaa
jnp
xor
pop
(bad)
out
push
jns
mov
sub
dec
cmp
pop
add
adc
cmps
push
inc
cmc
xchg
mov
and
dec
or
rol
dec
fdiv
retf
popa
mov
je
adc
push
popa
inc
inc
ror
int
imul
(bad)
xor
in
mov
cli
mov
xor
cmps
jp
jecxz
outs
aam
push
aam
mov
aaa
push
mov
cs
mov
push
jle
lea
sub
mov
inc
mov
jle
sbb
aaa
bound
fsubp
mov
(bad)
jmp
xchg
test
out
and
pushf
dec
shr
rcr
or
lock
pop
jno
pop
inc
adc
xchg
hlt
pop
in
bt
pusha
sub
aaa
push
shl
jae
fild
scas
(bad)
pop
mov
repnz
cmp
fs
and
addr16
mov
lahf
xor
or
outs
pop
sar
mov
mov
out
jno
push
nop
sub
outs
cli
or
in
mov
sti
adc
mov
sbb
push
push
jnp
(bad)
jb
sar
jmp
cmp
push
cdq
fnstsw
rcr
cmp
inc
jp
xchg
out
cwde
pop
ficomp
cli
jbe
iret
mov
mov
xor
aaa
outs
jecxz
sub
(bad)
mov
leave
mov
sbb
xchg
bound
sub
mov
mov
mov
gs
mov
aad
sbb
pop
repnz
push
(bad)
and
cmp
out
fadd
pop
xchg
xchg
aaa
shr
je
shl
or
popf
fiadd
xchg
push
mov
push
cmp
fwait
mov
fistp
js
int3
jmp
jg
mov
aad
or
sbb
jp
and
jmp
(bad)
jl
cmc
leave
cwde
loop
inc
cmp
scas
xchg
jnp
iret
push
(bad)
outs
(bad)
lods
retf
dec
paddusb
push
lods
xor
sbb
mov
cmp
in
xchg
adc
push
dec
push
into
jo
fidiv
xchg
repz
(bad)
fs
rol
movs
pop
mov
outs
or
sub
addr16
inc
or
in
adc
fwait
jae
sbb
icebp
mov
test
iret
cmc
fcomip
add
mov
outs
sbb
lds
push
lods
ficom
push
xchg
or
mov
cmp
xlat
cwde
bound
ds
mov
mov
jge
mov
loop
rcr
cld
iret
rcr
movs
mov
and
sub
scas
leave
pop
add
icebp
push
out
sbb
sbb
shl
dec
adc
test
add
mov
xor
push
jo
xor
and
jecxz
loope
add
clc
dec
push
xor
repz
rol
sar
and
sub
adc
push
jp
js
iret
not
mov
mov
and
les
xor
mov
aam
call
mov
jbe
icebp
cmc
fcmovnu
xchg
clc
pop
jne
mov
movs
int
cld
cmp
cdq
stos
imul
pop
cvtps2pi
add
pop
stc
adc
mov
jp
gs
lahf
hlt
mov
cmp
mov
pop
pop
mov
das
inc
pop
iret
movs
cmp
loopne
sar
jnp
repz
xchg
test
pop
fdiv
cwde
xchg
jge
jge
pop
inc
adc
push
aas
aad
jae
xor
into
mov
iret
sub
push
xchg
cmp
pop
inc
xor
test
jl
dec
shl
cwde
mov
pop
retf
leave
inc
ror
cmp
jmp
inc
not
mul
int3
sbb
sti
adc
call
jae
jb
push
adc
bound
mov
sub
ins
xor
cli
lods
ja
stc
fnsave
dec
test
out
pushf
int
movs
jns
mov
jnp
cmp
inc
mov
mov
test
mov
pop
into
sub
push
mov
(bad)
xor
inc
jmp
mov
hlt
jecxz
mov
fldenv
sahf
pop
dec
mov
aad
imul
adc
add
xor
repz
stc
dec
retf
add
std
and
(bad)
int3
xabort
and
dec
fdiv
sbb
inc
mov
cs
add
xchg
outs
scas
pop
push
mov
sbb
xchg
ds
(bad)
or
push
outs
or
add
ds
jae
repz
push
ret
test
mov
jge
jecxz
jbe
and
test
jl
and
mov
ret
imul
dec
or
sbb
fisttp
pop
in
mov
add
test
xchg
fwait
(bad)
imul
sub
xor
mov
in
aaa
rcr
inc
sbb
ins
enter
stos
mov
xchg
leave
mov
gs
push
imul
rcl
loope
repz
ror
xor
movs
aad
repnz
jl
dec
mov
or
sti
push
inc
scas
push
js
clc
mov
cmp
mov
sub
dec
ja
sti
adc
icebp
sub
(bad)
inc
fld
or
mov
add
in
push
xor
mov
sbb
mov
cmps
ds
or
sub
mov
mov
dec
add
out
mov
in
cdq
push
xchg
sub
add
sbb
mov
mov
stos
xor
sub
pop
imul
jne
jge
xlat
xchg
arpl
mov
push
cmp
and
or
jmp
sub
or
imul
push
xchg
mov
retf
in
push
jge
loope
popf
mov
push
daa
mov
or
daa
sbb
das
xchg
(bad)
ficomp
mov
dec
(bad)
cmp
cwde
lock
or
add
imul
or
rcl
or
pop
or
jp
and
inc
jmp
mov
mov
jno
xchg
adc
cld
sub
loopne
mov
div
cmp
sbb
push
push
mov
dec
or
jge
inc
dec
iret
sbb
ror
ret
mov
shr
jae
cwde
pop
push
mov
inc
gs
push
lea
fwait
repz
clc
mov
or
ja
je
test
dec
call
push
push
xchg
int
mov
push
imul
cmp
xor
push
mov
dec
loop
dec
push
or
cmp
daa
add
xlat
push
inc
pop
and
daa
adc
jl
test
cmp
retf
mov
hlt
xchg
xchg
out
push
jae
and
(bad)
and
ret
sub
shr
and
mov
pop
push
stc
dec
into
mov
dec
inc
sub
xchg
dec
pop
int
call
sbb
icebp
mov
(bad)
push
xchg
mov
or
je
imul
mov
mov
add
jmp
xchg
mov
fstp
sbb
jp
sub
ret
jge
mov
les
enter
xchg
adc
retf
imul
sub
clc
push
mov
ja
popf
push
retf
imul
jnp
inc
aaa
jl
iret
call
and
out
shr
dec
mov
add
cdq
clc
mov
daa
cmovbe
leave
jmp
or
cld
arpl
xor
xor
sbb
add
jo
xor
mov
pusha
test
xchg
xor
cmp
jl
cmp
dec
fidiv
cmp
jecxz
xchg
hlt
nop
mov
xchg
xor
iret
and
dec
inc
pop
mov
shl
addr16
xchg
std
cld
mov
ret
loop
push
out
mov
push
sbb
inc
sbb
in
loope
iret
test
outs
dec
push
mov
daa
aas
inc
test
mov
leave
jp
dec
adc
and
push
mov
(bad)
in
pop
inc
loop
out
das
add
lods
(bad)
mov
test
fwait
inc
cmp
cdq
pop
out
mov
jnp
or
inc
hlt
ficomp
push
xchg
pushf
fld
xchg
xchg
mov
adc
stos
movs
pop
and
jne
mov
mov
or
push
fild
mov
lods
pop
pop
mov
mov
or
inc
in
out
dec
xchg
inc
dec
lods
cmps
(bad)
ror
mov
shl
fadd
sub
out
rcl
pusha
push
mov
adc
add
lds
(bad)
fcmovb
mov
add
fimul
mov
sub
shl
data16
and
cs
call
or
lods
(bad)
sti
xchg
pusha
push
jne
test
jnp
add
mov
fstp
mov
jmp
sub
cmp
mov
sub
cmp
fdivr
daa
stc
mov
xor
sti
cmps
das
xchg
faddp
(bad)
ds
popa
ins
mov
cdq
pop
stos
in
pop
lock
shl
inc
adc
or
mov
or
push
sbb
add
scas
mov
out
push
ins
cmp
aaa
dec
std
cmp
cld
jmp
imul
mov
xor
fist
sahf
and
adc
ins
mov
or
ret
add
out
sub
xor
cmp
mov
out
and
ds
inc
adc
sub
stos
test
lods
in
jne
push
test
iretw
add
and
inc
jmp
xor
scas
lods
scas
adc
cld
js
(bad)
fcom
popf
mov
or
int3
(bad)
adc
dec
mov
fs
mov
push
pop
fdivr
stc
div
push
cmp
cli
and
xor
mov
jno
lods
xchg
arpl
enter
fcmovbe
stos
or
xor
jnp
inc
lds
rcl
or
mov
cmp
inc
inc
cmp
loopne
outs
(bad)
dec
sub
data16
inc
ror
test
xchg
fst
sahf
or
and
ins
or
xor
sbb
mov
inc
mov
mov
mov
mov
ins
xchg
pusha
das
xchg
inc
add
add
dec
aaa
cs
lds
pop
cmps
sbb
in
dec
add
retf
je
mov
mov
fcom
jp
call
sbb
add
sbb
stos
ds
cs
test
pcmpeqd
mov
cmp
dec
and
jmp
lods
inc
iret
sub
xchg
std
xor
xchg
xchg
div
sbb
(bad)
clc
sbb
sub
pop
mov
cld
cmc
repz
rol
mov
outs
dec
inc
mov
into
mov
xor
or
loop
or
adc
fmul
and
jns
jmp
add
call
ins
inc
ror
ins
jmp
leave
sub
repz
aaa
mov
nop
pusha
push
sbb
(bad)
sub
or
jle
xor
int3
inc
mov
cmps
mov
push
add
push
or
ins
sbb
das
inc
sbb
lahf
add
dec
shl
test
cs
out
retf
sub
add
cmc
fld
enter
call
ds
jl
xchg
jecxz
jmp
xor
inc
std
xor
add
or
add
fcom
mov
shl
ds
aaa
adc
mov
stc
addr16
(bad)
or
lea
push
inc
(bad)
(bad)
jbe
outs
aaa
sbb
pop
pop
pop
retf
lahf
aam
ret
bound
mov
xchg
and
xchg
loopne
mov
popf
addr16
xor
movs
fwait
cmps
fdivrp
sbb
leave
retf
and
lds
int3
xchg
retf
shl
mov
mov
cmp
mov
shl
not
cdq
bound
xchg
jns
lea
cs
sbb
aam
test
or
or
push
ins
jmp
fwait
pop
mov
idiv
dec
pop
in
pop
sub
into
sar
add
int
retf
sbb
sbb
sbb
dec
mov
xchg
xor
fstp
cld
pushf
dec
mov
mov
inc
imul
not
fistp
test
imul
inc
or
xor
fistp
cwde
(bad)
ror
fbld
jo
out
daa
inc
xrstor
cmp
(bad)
fwait
shl
dec
xchg
add
jle
loopne
daa
pushf
xor
aad
rol
push
sahf
inc
mov
pop
shr
div
xchg
stos
lock
pop
and
add
mov
lea
or
aas
dec
movs
imul
fwait
mov
cmp
or
ss
xchg
inc
jecxz
mov
pusha
daa
fcmovb
stos
cmp
mov
out
fwait
out
xlat
add
sbb
mov
xchg
sub
push
popa
inc
push
leave
mov
fisub
pushf
test
push
mov
lds
daa
sub
jae
xor
in
mov
inc
push
addr16
jno
sbb
mov
test
sbb
and
mov
pop
jb
sub
jmp
loopne
add
bound
scas
outs
sub
jae
cmp
adc
loope
mov
jae
xchg
xor
jmp
pop
cli
leave
pop
xchg
sbb
hlt
aas
sub
push
pop
xchg
mov
xor
aas
stc
fwait
rol
sbb
mov
add
dec
add
inc
jo
adc
arpl
xchg
int3
inc
pop
push
and
stc
mov
mov
add
and
and
adc
inc
jl
ror
pop
xchg
out
xchg
icebp
add
xchg
pusha
sbb
jae
pop
cwde
lds
lahf
and
adc
push
in
jmp
adc
mov
sub
ins
cwde
xchg
das
es
add
div
cdq
(bad)
(bad)
dec
sbb
nop
out
add
fist
sbb
or
push
pop
mov
(bad)
cld
pop
and
(bad)
hlt
push
jmp
mov
and
adc
and
cwde
jmp
xchg
mov
arpl
jg
pop
div
pop
std
in
xor
push
sub
jno
shr
(bad)
push
fiadd
dec
and
xchg
ror
sub
mov
retfw
cmps
les
into
sahf
mov
leave
neg
cmp
movs
retf
push
(bad)
or
shl
ds
push
mov
jbe
jns
lods
pop
test
add
aad
shl
leave
adc
xchg
pop
movs
clc
mov
jno
push
pop
push
not
in
ins
fsub
mov
outs
and
mov
pop
or
lock
test
or
cmp
dec
mov
(bad)
out
sub
loope
push
dec
loope
ret
jnp
into
push
xor
mov
push
stc
arpl
lods
adc
ret
and
nop
pop
inc
std
inc
mov
pushf
mov
mov
xor
arpl
ret
test
jmp
push
fild
mov
inc
clc
das
jg
dec
adc
mov
lahf
xchg
cmp
aad
shl
stc
cmps
mov
std
sbb
lods
mov
movs
sahf
push
and
repnz
cwde
add
mov
and
out
ins
in
daa
sbb
lds
adc
push
rol
inc
dec
ja
adc
mov
jbe
sbb
sub
nop
mov
pop
rol
aam
les
xchg
pusha
sbb
mov
fdiv
or
push
push
mov
dec
fld
and
pop
sar
repz
stos
or
dec
inc
xchg
jmp
push
int
ja
or
pop
pop
mov
cs
iret
mov
out
inc
jmp
mov
adc
or
dec
stos
sti
sar
xchg
mov
add
adc
and
dec
shr
sub
and
movs
int
push
xchg
cmc
mov
(bad)
inc
cld
dec
pop
add
std
out
sbb
fldenv
idiv
cmp
mov
es
mov
rcr
sub
xor
lods
sub
sub
fsubr
xor
push
mov
mov
adc
int
push
and
inc
popf
push
mov
mov
cli
test
push
mov
aas
int
cs
fbstp
pop
daa
inc
push
push
sbb
adc
mov
call
adc
mov
push
gs
ret
js
dec
leave
shr
pusha
test
cli
out
jne
lea
jno
xor
ror
jg
dec
adc
sbb
fidiv
gs
pop
sbb
jb
cmc
into
cmps
mov
push
and
stos
imul
jle
in
mov
add
fisubr
cs
adc
mov
dec
and
lock
or
lea
or
ret
arpl
inc
rol
pop
add
cwde
cwde
addr16
cmp
jo
mov
push
and
cwde
pop
and
cmp
in
and
xchg
or
iret
cmp
dec
in
xchg
popf
addr16
or
jmp
push
pop
xor
in
and
pop
dec
sub
push
mov
cmps
fucompp
out
mov
daa
mov
or
push
lods
sti
nop
mov
fdivr
aad
and
or
push
(bad)
jmp
push
xchg
ficom
mov
out
mov
outs
call
push
ret
mov
or
or
or
and
inc
scas
sti
test
mov
outs
retf
sar
repz
mov
sub
jo
es
icebp
test
push
stos
popa
fild
popa
ins
lods
movs
sbb
push
mov
fisub
add
xlat
lods
mov
and
fs
cmp
clc
nop
scas
cs
retf
popa
and
div
(bad)
fs
add
data16
ficomp
fcom
or
mov
push
dec
or
xchg
push
(bad)
dec
aam
inc
inc
aam
sbb
push
adc
add
js
pop
nop
(bad)
arpl
push
jne
pop
dec
push
sub
cmp
mov
(bad)
cs
cdq
or
popf
sub
and
pop
sub
lock
mov
or
xor
push
or
jo
push
ret
mov
sar
test
jne
add
inc
mul
scas
xchg
inc
mov
sbb
sbb
xor
add
div
fs
xchg
push
mov
gs
fild
adc
mov
inc
mov
ss
movs
call
mov
in
and
xor
mov
int3
lods
lahf
pushf
inc
cmps
mov
cmp
cmp
or
push
pop
mov
ja
out
jmp
cmps
add
or
push
mov
jle
mov
inc
ret
in
cmp
jnp
inc
dec
cli
mov
mov
mov
mov
add
xor
cmp
out
jmp
and
sbb
pop
sti
or
dec
shl
inc
int3
out
sub
out
cmp
pop
cmp
lea
data16
cmps
inc
scas
inc
imul
jle
push
addr16
aaa
js
daa
leave
(bad)
loopne
push
addr16
sbb
daa
mov
test
jbe
les
ror
ror
and
cmp
xor
jbe
popa
not
je
fmul
xchg
push
xchg
mov
movs
loop
sti
jecxz
mov
and
outs
pop
ficom
(bad)
mov
sbb
push
fcmovbe
mov
movs
cmp
loop
icebp
retf
xchg
adc
div
push
stos
mov
je
cmps
push
sbb
ret
pop
or
movsx
or
cmp
xor
push
xchg
out
gs
mov
xor
pop
adc
movs
and
rcl
inc
ret
fs
leave
mov
aaa
in
adc
(bad)
iret
inc
mov
ja
push
jmp
fisttp
push
or
xchg
or
test
mov
pop
dec
cmp
leave
cwde
xor
movlps
sub
mov
popf
ins
lahf
fst
pop
outs
and
loope
enter
mov
(bad)
adc
jnp
les
jle
lods
stc
in
outs
pop
push
movs
mov
nop
push
sbb
in
sbb
popf
(bad)
cdq
mov
xor
lods
aad
push
fxch
or
mov
pop
jns
xlat
prefetch
or
or
mov
leave
pop
push
in
push
jns
adc
ins
or
and
inc
int3
mov
xor
push
mov
jno
jecxz
lods
xor
lea
hlt
dec
xor
scas
push
cmps
shr
inc
mov
fsub
push
adc
mov
imul
mov
in
push
jecxz
cmp
call
sbb
popf
pop
cld
(bad)
(bad)
(bad)
jne
jbe
mov
call
mov
sub
stc
xor
inc
sbb
push
xchg
or
repz
fnstenv
pop
mov
xor
div
ret
scas
mov
cdq
add
mov
dec
add
cli
add
movs
loopne
cmp
nop
xchg
fld
rcr
shl
mov
outs
and
xchg
jecxz
(bad)
leave
mov
cli
pop
jbe
(bad)
es
mov
xor
call
dec
inc
mov
lea
repnz
jl
(bad)
cmp
xor
test
add
and
jne
push
mov
cs
ds
push
lock
scas
add
mov
jae
sar
inc
and
cmps
call
jecxz
or
daa
pop
lea
mov
lods
fisttp
jecxz
mov
xchg
xor
sti
add
mov
lods
sub
mov
jo
pop
and
retf
retf
sti
push
out
and
test
xor
retf
mov
jno
adc
into
cmc
and
mov
mov
mov
cwde
push
xlat
push
lods
nop
xchg
pop
pop
lahf
int
jae
adc
xchg
or
inc
push
in
xchg
mov
(bad)
mov
inc
rol
adc
add
pop
jb
arpl
call
xor
movs
jp
sub
adc
call
popa
retf
push
and
cs
xchg
in
lods
and
cmp
sti
in
(bad)
int
dec
jmp
mov
arpl
cmps
in
mov
xchg
xlat
cmp
addr16
pop
add
add
jp
xor
add
stos
cli
repnz
add
les
ror
hlt
xchg
mov
int3
rcr
cmp
jl
mov
dec
aas
xchg
in
mov
push
inc
cdq
sub
ins
xchg
dec
jge
and
lds
and
push
or
mov
mov
out
rol
arpl
cmp
inc
shl
cmp
dec
imul
push
js
xor
lock
sbb
aad
pushf
rol
rcl
and
sahf
cdq
out
(bad)
jno
pop
xor
ficom
outs
stos
dec
ret
dec
hlt
in
rcl
addr16
in
fisub
loope
push
fs
stos
out
cli
test
cmps
jg
icebp
pop
stc
popa
adc
sub
jl
or
ds
sub
jmp
adc
inc
dec
inc
xor
daa
push
das
pop
les
sub
retf
movs
imul
cmp
and
shl
lods
test
dec
loop
loopne
or
cld
or
add
jae
(bad)
sub
mov
mov
cmp
repz
mov
push
retf
sub
sbb
aaa
or
test
push
cld
lahf
mov
jl
pop
arpl
push
adc
cmp
xchg
cmps
cwde
in
mov
mov
jae
jmp
mov
stos
xchg
push
loope
jmp
rcr
js
repz
gs
mov
xor
mov
jae
sub
mov
and
loope
addr16
cmp
mov
or
jmp
cli
dec
push
sbb
jns
push
movs
pop
ja
and
jmp
adc
mov
jmp
xchg
in
pop
sub
sbb
ret
jnp
fsub
ins
aaa
js
jmp
sub
add
xchg
push
(bad)
div
cmp
and
adc
jge
pop
loop
js
pop
ret
push
imul
shl
add
imul
jns
xchg
cld
ins
dec
fild
dec
aas
dec
test
xchg
add
fiadd
stc
cmp
adc
fistp
push
mov
mov
push
or
push
jl
jmp
(bad)
cmp
cmp
int3
dec
(bad)
adc
lock
jne
(bad)
push
lahf
inc
pushf
and
xchg
jno
fld
fdiv
cmp
and
and
test
and
bnd
and
ja
jne
xchg
mov
jp
dec
xor
fild
mov
lds
repz
pop
mov
mov
icebp
loop
aam
jmp
in
inc
(bad)
sub
data16
mov
mov
dec
test
dec
pop
aad
jl
cmc
pop
sub
add
mov
sbb
or
arpl
mov
inc
fsubr
sub
mov
mov
jns
neg
data16
xor
dec
repz
cdq
or
xor
mov
mov
push
and
iret
cs
adc
adc
pop
psubusw
loopne
cdq
vmovmskps
dec
mov
jae
jp
adc
sbb
sub
stos
ds
ss
fwait
sub
les
pop
xor
push
or
add
aam
mul
clc
pop
ja
sbb
cld
inc
cmps
shl
sti
adc
xor
dec
data16
enter
shr
cmp
lea
mov
fdiv
dec
fwait
mov
xchg
mov
pop
lods
test
rol
xor
xchg
sbb
pop
sbb
mov
push
test
(bad)
xchg
mov
and
add
jbe
idiv
xor
xchg
dec
aad
(bad)
mov
mov
add
push
loopne
retf
shl
add
ins
pop
cmp
imul
push
jge
gs
xchg
pusha
jecxz
cmp
(bad)
pop
mov
fbstp
and
ror
cmp
jmp
adc
push
scas
mov
mov
jo
mov
push
pop
xchg
into
cmc
mov
xor
enter
dec
and
pop
mov
mov
sti
sbb
aad
fisub
lds
dec
movs
in
(bad)
scas
ins
jge
adc
mov
dec
mov
scas
inc
sar
push
add
push
jmp
sub
mov
cli
pop
(bad)
loop
outs
and
cdq
or
sbb
or
jne
mov
cmp
addr16
aaa
cli
mov
(bad)
or
je
jmp
xchg
xor
movs
clc
jecxz
mov
and
fisub
repz
test
popf
add
repnz
int3
pop
shl
cmp
pop
repz
in
leave
mov
sub
pop
jg
iret
test
sahf
lods
dec
retf
rol
clc
shr
xchg
dec
push
aas
repnz
pop
lea
pop
test
fwait
cmp
xchg
cmps
mov
(bad)
test
xchg
ror
pop
ret
mov
ss
xchg
fs
adc
scas
mov
cmp
scas
aas
jecxz
rcl
into
fdiv
mov
mov
and
mov
call
imul
loope
fdiv
ret
fdiv
jmp
mov
mov
test
add
je
cmp
es
xchg
xor
aaa
add
cmp
inc
sar
icebp
inc
and
gs
das
dec
mov
and
jge
stos
pop
pop
div
pushf
das
dec
cmc
jae
jnp
mov
pop
jmp
pop
std
pop
sub
pop
or
daa
call
mov
jnp
imul
pop
pusha
addr16
inc
mov
in
mov
lods
mov
push
mov
cli
and
movs
mov
and
loopne
(bad)
jmp
push
sbb
sti
inc
(bad)
in
sub
xor
in
sub
or
mov
(bad)
in
push
repnz
xor
(bad)
stc
jae
mov
mov
outs
sbb
ds
and
sub
xchg
leave
adc
cmp
jle
inc
and
pop
out
xor
dec
cmps
data16
mov
fistp
push
pop
cmp
xor
cmp
or
dec
jb
ret
or
rcr
(bad)
pop
cdq
sub
sub
out
adc
fldenv
add
xor
xor
leave
push
in
aas
cmp
xchg
add
xchg
ret
xor
xor
(bad)
xor
imul
clc
ins
xlat
pop
pop
stc
add
or
out
xchg
mov
inc
add
jnp
retf
push
loop
pop
mov
(bad)
rcr
ss
sbb
stos
das
or
jmp
adc
(bad)
jo
outs
cmp
push
jmp
lsl
and
stc
addr16
jne
out
das
adc
(bad)
or
fs
push
jnp
fwait
stos
cmp
out
push
gs
cld
hlt
mov
gs
jmp
pop
add
mov
ins
call
pop
lock
pusha
movs
div
in
inc
inc
je
ficom
stos
xchg
pop
dec
xlat
int
xchg
sub
cmc
and
pop
outs
int
pushf
mov
mov
push
xchg
fwait
adc
(bad)
mov
scas
test
mov
(bad)
mov
in
into
jbe
in
js
sbb
aas
test
in
push
in
iret
cmp
mov
js
jne
xchg
cwde
imul
les
sti
lods
bswap
xchg
jl
sti
jae
out
cmc
push
add
pop
dec
popa
mov
pop
jnp
gs
in
xor
mov
mov
or
xor
or
mov
push
clc
retf
adc
or
addr16
mov
sar
fwait
xlat
mov
jle
add
sub
(bad)
and
pop
test
xor
push
mov
xor
lahf
inc
mov
push
dec
ret
mov
jge
jbe
pop
das
lods
push
jl
or
mov
outs
pop
je
sub
cdq
sbb
mov
push
(bad)
outs
sub
repz
cmp
cmp
lods
call
push
imul
sbb
lods
push
repnz
mov
je
mov
(bad)
mov
adc
fcom
jge
ret
stos
inc
adc
mov
ja
push
mov
jbe
lds
xor
add
addr16
in
pop
jae
inc
loopne
pop
mov
in
jns
xchg
jp
neg
pop
shl
in
mov
mov
icebp
mov
sub
and
imul
jb
lods
test
cs
mov
outs
mov
jbe
adc
sbb
ins
xchg
xchg
push
jns
lea
mov
es
dec
daa
rcl
call
fidiv
add
ror
xchg
mov
dec
xlat
cs
jmp
leave
clc
xchg
xchg
fiadd
mov
fwait
fwait
mov
mov
cmps
pop
fsub
mov
or
pop
jo
pop
jmp
fisub
imul
mov
cmc
cli
test
imul
mov
int3
dec
xchg
or
push
hlt
repz
pinsrw
ret
cwde
popa
mov
sub
ds
es
setne
xor
adc
jg
repnz
jg
hlt
sbb
ret
push
sbb
mov
scas
bound
sbb
mul
xor
ss
mov
scas
push
push
stos
and
xor
mov
movs
adc
sub
ds
xchg
pop
mov
ja
mov
cwde
std
xlat
mov
mul
and
mov
push
rol
adc
xor
add
sub
xor
scas
inc
xor
xchg
dec
imul
jp
mov
sub
adc
daa
call
shl
mov
sub
inc
mov
cmp
and
popa
adc
or
push
jno
sub
push
xor
lock
mov
fdiv
xor
mov
dec
int
xor
popa
sbb
mov
aam
dec
jmp
mov
fwait
jl
loop
sbb
xor
jge
cmp
aaa
pop
mov
outs
xchg
xor
out
xor
mov
pop
dec
sub
std
aad
jl
retf
pop
adc
push
sbb
sbb
movs
xor
xchg
mov
sti
enter
pop
(bad)
out
adc
jle
lds
dec
jmp
jnp
push
addr16
(bad)
jp
push
dec
loope
jnp
mov
mul
cwde
arpl
aad
enter
imul
mov
aad
jae
shr
idiv
clc
cmps
mov
call
pop
outs
into
je
(bad)
out
aas
pushf
stc
cdq
jmp
ins
mov
push
adc
xor
xor
jbe
ja
or
loop
sub
pop
adc
cmp
inc
in
mov
mov
call
not
xor
neg
jg
cmp
xchg
pop
mov
inc
push
mov
je
jmp
mov
add
hlt
out
xlat
and
pop
ret
jnp
jo
popf
mov
push
adc
push
js
fidiv
scas
jle
cmp
sub
or
jno
adc
(bad)
lock
movs
test
mov
fucom
addr16
jge
pushf
arpl
mov
mov
jb
xor
fdiv
and
imul
xchg
into
ja
ins
fstp
adc
(bad)
xchg
sbb
mov
mov
sub
test
hlt
lods
scas
dec
in
rol
dec
les
or
xchg
das
lods
sti
std
cmps
mov
mov
std
mov
dec
popf
xor
adc
fsub
xchg
sbb
cmp
adc
stc
sub
jmp
cmp
arpl
in
or
adc
xchg
mov
je
rcl
aaa
inc
mov
xor
jae
fs
xchg
popf
dec
xchg
inc
jbe
repnz
das
icebp
inc
repnz
xor
add
sub
and
mov
jecxz
stc
and
arpl
pop
call
rcr
movs
int3
pop
pushf
xor
mov
mov
test
xchg
jmp
imul
adc
xchg
sbb
push
int3
add
inc
add
xor
inc
inc
dec
xor
test
pop
clc
inc
sbb
add
inc
neg
sbb
clc
xchg
inc
inc
adc
ins
or
pop
rcr
aam
cmp
jp
xchg
(bad)
and
mov
adc
mov
inc
fsubr
mov
movs
cmps
in
or
sbb
dec
fidiv
jmp
cmc
fs
add
mov
sub
jmp
pop
into
out
pop
or
push
(bad)
arpl
or
fwait
mov
mov
jge
pusha
test
test
test
push
push
sbb
push
bound
sti
sub
fwait
push
dec
xor
push
adc
sub
and
sti
sbb
or
frstor
inc
mov
in
cmps
sub
sar
xchg
dec
jbe
xchg
push
(bad)
cmc
ja
(bad)
sub
pop
adc
jns
stos
dec
lock
inc
mov
mov
mov
icebp
sbb
push
push
sub
ficom
test
inc
js
scas
movs
push
(bad)
and
aaa
outs
inc
mov
mov
sub
xchg
adc
in
loop
sbb
cli
xchg
pop
jne
fnsave
xchg
les
(bad)
jg
rcr
mov
mov
lahf
xchg
xchg
add
nop
out
jg
push
mov
ja
fs
scas
mov
mov
movs
sbb
inc
push
movs
loope
shr
stos
out
nop
push
sbb
fsubr
scas
ss
pop
ss
pop
mov
fbstp
inc
(bad)
scas
pusha
or
arpl
xor
add
inc
pop
dec
push
xrelease
cmp
outs
neg
sar
sub
outs
jp
(bad)
push
stos
xlat
mov
jge
add
fucom
pop
mov
mov
adc
mov
mov
inc
sti
jbe
push
loope
movs
mov
cmp
jno
test
out
ss
inc
xlat
mov
dec
cli
push
mov
pop
sub
and
ins
mov
cmp
dec
bswap
cmp
sbb
cmp
push
or
pop
fmul
mov
mov
scas
test
inc
mov
add
jnp
or
cmp
clc
mov
pop
inc
out
mov
push
je
xchg
jo
ret
cwde
mov
xchg
xchg
cld
lods
test
xchg
xchg
les
movs
clc
fwait
arpl
lods
push
inc
mov
xor
mov
xchg
scas
sub
hlt
jmp
lahf
movs
neg
aad
fsubp
leave
xchg
iret
adc
mov
xchg
jmp
push
retf
enter
leave
push
call
mov
dec
mov
mov
mov
xchg
mov
mov
and
out
fiadd
push
data16
mov
sbb
popa
cli
inc
daa
xchg
sbb
mov
xor
xchg
push
dec
movs
nop
add
xor
icebp
push
ror
ret
lods
or
popf
jo
pop
pop
xor
out
leave
push
ja
outs
xor
push
cs
cmp
out
pop
vpunpcklbw
int
test
loopne
popa
push
and
push
cmp
adc
sub
lods
push
ret
inc
inc
dec
jmp
mov
fdiv
pop
push
js
mov
push
in
movs
jge
aas
aam
call
movs
test
mov
(bad)
ret
(bad)
xlat
push
sub
xchg
addr16
in
int
pop
mov
dec
js
add
aas
xor
and
stc
mov
dec
push
sub
xor
sbb
adc
pop
sub
lods
ficom
jg
sahf
es
mov
or
out
jmp
sbb
add
push
test
ret
xor
retf
test
movs
dec
mov
int3
jg
repz
add
push
mov
pop
xor
sub
inc
aad
and
and
jp
repnz
sti
dec
mov
fcmovnb
js
xor
(bad)
outs
fdivr
or
pop
sub
arpl
add
inc
fsub
xchg
adc
sbb
rcl
mov
loope
mov
lock
iret
xchg
repz
or
addr16
push
push
or
div
out
adc
inc
test
retf
movd
mov
jecxz
push
popa
mov
push
into
jae
loope
mov
cwde
inc
pop
mov
inc
mov
cwde
xchg
add
outs
lahf
mov
cmp
(bad)
out
adc
add
inc
gs
mov
xchg
idiv
mov
call
push
sub
xor
xchg
push
jecxz
ja
sbb
jbe
in
jle
adc
jge
movs
mov
push
(bad)
xchg
lods
sub
cmps
adc
inc
jg
xchg
push
mov
adc
fwait
mov
xor
ret
push
test
sar
jmp
cld
xor
xchg
jge
test
mov
jmp
test
and
xchg
xchg
mov
sahf
lods
cmp
inc
inc
sbb
push
mov
jo
(bad)
adc
push
jmp
mov
ins
add
aam
pop
jae
jl
clc
dec
into
popf
arpl
jmp
and
stc
loopne
fwait
repnz
xor
(bad)
in
imul
or
jne
sbb
test
das
(bad)
out
push
xor
stos
mov
xchg
cli
dec
push
push
adc
dec
shl
pop
pusha
in
repnz
data16
das
sti
push
ins
adc
aad
mov
into
test
inc
mov
pop
push
or
mov
mov
adc
jnp
jle
jl
pop
cdq
jmp
aam
repz
jmp
popf
push
and
add
mov
jno
hlt
add
or
scas
mov
xchg
mov
inc
sbb
les
fcom
jmp
bnd
push
(bad)
or
inc
jmp
cld
xor
inc
adc
clc
dec
cmp
mov
mov
lea
adc
popf
fmulp
leave
cmp
xor
or
retf
xor
add
test
mov
fldcw
and
push
cmp
scas
aam
aas
imul
aam
adc
loopne
stos
xchg
add
sbb
push
dec
loopne
lahf
outs
mov
sbb
(bad)
sbb
xor
sub
sbb
push
dec
jle
shr
adc
pushf
test
mov
xor
gs
fdivr
mov
imul
cwde
cmp
jmp
ret
outs
mov
and
add
cmp
dec
stos
push
add
mov
outs
inc
mov
mov
pusha
add
ins
movs
cmp
gs
mov
pop
in
addr16
call
xor
outs
pop
nop
(bad)
rcr
xchg
sbb
repz
jmp
jge
fdiv
shl
je
out
cmovs
aad
dec
clc
lods
outs
pop
scas
lea
adc
jle
mov
inc
pop
out
sub
xchg
add
outs
and
imul
mov
inc
jo
rcr
jg
and
ret
loopne
dec
push
or
fwait
add
push
mov
icebp
cld
cs
aam
sub
sbb
int
mov
sbb
mov
arpl
push
add
movs
scas
push
test
js
sti
pop
ss
lods
addr16
mov
fwait
sbb
mov
ds
xchg
mov
mov
cmp
pop
stc
pushf
sub
mov
lock
fadd
(bad)
movs
sbb
(bad)
pop
or
xor
pushf
mov
test
aas
pop
mov
sub
retf
aas
in
popa
lods
adc
mul
loop
ss
cmp
jo
dec
out
inc
lock
lea
(bad)
mov
mov
mov
test
push
jmp
stos
seta
mov
mov
cmp
ins
test
loope
jle
cdq
pop
xchg
stos
jge
nop
imul
repz
inc
mov
push
xchg
pop
out
xor
out
mov
xchg
movs
int3
loop
sub
adc
sbb
ins
cmps
fcmovnbe
lods
and
stos
mov
xlat
mov
inc
push
xchg
ret
aaa
jecxz
(bad)
cmp
call
and
cmp
jmp
fistp
mov
inc
out
mov
(bad)
aam
jl
aad
jmp
shr
test
fs
cmp
repz
sahf
dec
out
addr16
pop
lahf
in
(bad)
pusha
push
test
cmp
sbb
inc
cli
lea
cli
push
aad
jae
rcl
jle
xchg
aad
xlat
loope
mov
sub
mov
xchg
leave
ja
mov
mov
dec
dec
lea
pop
mov
adc
dec
rol
in
nop
mov
inc
cmc
pop
cmp
movs
int3
test
imul
fdivr
dec
jae
shl
lods
xchg
imul
cli
outs
push
mov
xor
jb
cdq
xor
data16
mov
ret
add
or
cmp
shl
sub
push
xchg
adc
jg
dec
mov
std
outs
pop
xor
je
dec
in
mov
sub
pop
add
adc
jmp
dec
adc
repz
push
test
mov
int
(bad)
xlat
dec
popf
ss
mov
or
xchg
inc
dec
cmp
cmc
pop
ins
popa
sub
jmp
lahf
mov
xchg
inc
int
jle
xor
sbb
out
and
mov
mov
and
jnp
push
data16
mov
dec
cmp
rcr
es
push
sbb
mov
(bad)
cmp
sub
jmp
add
or
adc
sbb
call
fstp
iret
jo
test
call
inc
cdq
hlt
movs
and
fcom
pop
xor
sub
test
or
pusha
(bad)
or
xchg
mov
sar
add
xchg
mov
cs
outs
jbe
pop
mov
inc
test
push
mov
jmp
das
hlt
std
push
mov
loop
add
ds
push
repz
mov
push
push
in
popa
pause
and
push
sbb
or
icebp
test
lea
daa
pop
inc
cmp
adc
push
lock
mul
mov
push
inc
in
sbb
jl
shr
pop
push
add
out
jmp
ror
in
into
adc
jne
shr
ret
repnz
cmp
ss
jbe
mov
pusha
pushf
or
cmc
push
pop
out
xchg
lea
xor
xchg
icebp
mov
movs
clc
les
sub
adc
sub
hlt
ins
scas
push
inc
pop
dec
or
cs
les
sbb
int3
xchg
push
add
cmc
xchg
popf
mov
cmp
shr
cld
cmp
shl
aam
inc
pop
ror
mov
in
mov
mov
pusha
mov
repz
daa
call
sbb
and
out
test
out
jns
and
imul
add
xlat
add
test
inc
mov
mov
sub
test
and
jnp
loopne
clc
cmp
sub
jle
in
pop
ins
pusha
mov
outs
ficom
inc
je
mov
aas
push
add
test
shl
mov
lods
cmp
mov
jmp
inc
mov
sbb
xchg
dec
and
sbb
hlt
adc
jmp
cmp
sbb
sub
mov
or
and
xor
adc
cmc
std
imul
add
push
mov
ret
inc
push
jge
aaa
mov
into
jg
shr
mov
dec
jb
mov
test
dec
add
cmc
and
idiv
cmps
loopne
dec
push
das
push
push
addr16
repz
jb
mov
inc
(bad)
stc
ins
jmp
pop
mov
inc
enter
inc
adc
not
ins
mov
mov
aas
pop
fadd
jb
mov
xor
arpl
mov
or
ret
pop
pop
push
je
cmp
mov
sub
sti
jg
daa
mov
or
mov
cmp
sub
call
xor
and
call
jns
js
in
pop
pop
mov
stc
ret
push
call
stc
loope
enter
pusha
ja
sub
pop
jg
std
jnp
xchg
inc
out
sbb
xor
jbe
in
pop
fisttp
cld
lods
mov
repz
adc
push
or
(bad)
fcos
jns
add
sbb
out
sbb
clc
xlat
ror
xor
pop
repz
test
mov
addr16
inc
int3
pop
(bad)
dec
sub
shl
push
jnp
push
dec
xor
mov
cmps
dec
aad
mov
push
lods
jmp
hlt
add
and
ins
lea
into
jge
lods
loop
in
and
mov
or
adc
adc
adc
cwde
mov
dec
push
xchg
and
out
cmc
in
lahf
jb
lahf
clc
cmc
and
inc
and
push
dec
and
lods
stos
mov
pop
mov
inc
(bad)
push
dec
(bad)
scas
fiadd
mov
in
xchg
adc
in
adc
lods
cli
add
mov
mov
jmp
jns
push
out
loope
pop
push
sub
repnz
mov
dec
mov
dec
dec
sub
sti
jns
or
adc
hlt
enter
lods
push
add
rep
jbe
enter
xor
inc
add
mov
cmps
fmul
mov
pusha
cwde
sti
add
add
test
mov
sbb
dec
push
jae
mov
jl
push
mov
pop
xor
ror
scas
test
cli
push
adc
popfw
idiv
adc
retf
pusha
out
xor
imul
jmp
pop
int3
aaa
push
fistp
fiadd
dec
sbb
add
jmp
adc
mov
pop
(bad)
loopne
add
test
shr
cmp
bound
adc
hlt
xlat
cmps
mov
jne
lock
inc
mov
loopne
cs
pop
jbe
mov
sbb
movs
and
and
and
test
pop
not
in
ror
pop
retf
mov
icebp
(bad)
fcomip
mov
pop
dec
inc
pop
gs
scas
popf
sub
pop
setne
sbb
int3
out
xchg
pop
(bad)
pop
cmp
popa
int
lahf
imul
repz
push
mov
sti
inc
cmp
bound
mov
adc
mov
jl
je
stos
jmp
xchg
xorps
sub
jmp
in
call
lods
push
sahf
mov
mov
sbb
or
retf
xchg
sbb
out
aas
dec
add
and
push
mov
mov
fdiv
mov
dec
loopne
ds
jge
movs
call
(bad)
lea
push
xchg
(bad)
out
cmp
jle
push
fbld
scas
scas
push
in
bound
lods
fs
mov
gs
inc
xchg
pop
mov
and
sbb
inc
xor
arpl
push
add
inc
test
addr16
and
rcl
arpl
mov
cli
xor
jmp
mov
in
xor
jbe
test
xchg
and
and
shl
lods
mov
dec
cmp
mov
lds
mov
xchg
pop
(bad)
push
gs
outs
sub
lods
inc
in
mov
fwait
(bad)
lods
and
cmp
jp
mov
add
jmp
(bad)
pop
mov
aam
(bad)
dec
scas
ds
cmc
cwde
les
idiv
sub
in
jno
inc
cld
jo
dec
cmp
or
mov
mov
aas
fistp
adc
nop
lea
jecxz
sbb
xchg
gs
bound
and
iret
push
lds
push
gs
xlat
ss
jle
xchg
add
xor
xchg
inc
scas
jo
out
sbb
test
mov
jmp
sub
bound
cmp
push
mov
pop
lods
dec
idiv
adc
(bad)
sar
xor
mov
call
std
mov
ds
call
retf
push
repnz
test
cdq
xlat
sub
pushf
push
pop
dec
or
sbb
cld
xchg
add
mov
cdq
mov
cwde
ins
mov
outs
and
adc
jge
lods
jne
mov
sbb
pop
iret
outs
inc
push
pop
fimul
psrlq
push
jb
jnp
mov
cs
aas
stos
daa
sahf
push
cmp
sbb
leave
jbe
mov
arpl
and
repnz
(bad)
sbb
leave
or
mov
pop
fsubp
cmps
jbe
(bad)
in
mov
jl
iret
out
lock
and
adc
enter
fwait
pop
sar
int3
mov
lods
add
adc
rcl
inc
ins
push
sbb
inc
nop
ficom
fsubp
cmp
rol
push
(bad)
push
repz
inc
mov
inc
sar
add
dec
ret
aas
out
dec
xchg
shl
push
jg
jbe
and
xchg
addr16
add
cld
mov
leave
ss
mov
mov
mov
stos
sar
out
cld
cmp
(bad)
retf
mov
test
fcmovnb
ret
mov
xor
adc
jmp
or
xchg
xchg
mov
dec
add
sub
repz
sub
add
test
inc
stc
mov
pop
xchg
mov
sub
push
dec
inc
ss
pop
xor
xor
add
or
mov
sub
in
xchg
push
dec
sbb
out
test
aas
out
cmp
lds
push
cli
sbb
stos
or
pop
mov
ds
mov
pop
aaa
pushf
inc
xor
mov
jbe
pop
lahf
ret
popa
sbb
daa
mul
stc
xor
or
dec
in
rcl
nop
push
inc
int
pop
cs
jns
test
xor
cmps
cmp
dec
rcr
sbb
push
mov
pop
dec
adc
sub
mov
mov
jno
cmp
out
out
inc
add
cld
std
daa
retf
pop
xchg
out
(bad)
or
fwait
jne
pop
nop
repz
les
int3
dec
inc
inc
or
jmp
cli
pop
inc
sbb
fyl2xp1
icebp
jl
dec
push
std
rcr
cdq
hlt
mov
xchg
mov
cwde
jmp
inc
sub
sub
nop
sub
push
not
stos
sbb
std
movs
mov
add
(bad)
out
cli
(bad)
aaa
in
dec
jo
mov
push
(bad)
sbb
retf
cmp
ret
cwde
ds
push
xchg
pop
mov
scas
addr16
lods
mov
xsha1
cmps
dec
cmc
stos
cmp
outs
ds
inc
sbb
jnp
cwde
lea
push
adc
pushf
jne
(bad)
cmp
lods
dec
fsub
adc
jmp
inc
inc
popa
in
dec
inc
dec
jne
push
leavew
xchg
push
retf
xor
cmp
dec
loope
xchg
pop
jne
ret
xlat
sbb
cmp
out
dec
fucomip
leave
mov
dec
pusha
retf
cmp
push
jne
jmp
movs
hlt
mov
ja
rol
jb
mov
out
jno
les
adc
adc
popf
xchg
add
cmp
fbld
sbb
sbb
lds
stos
add
jl
cmp
or
inc
cmps
out
ror
jae
das
pop
adc
sbb
es
ror
jnp
into
idiv
ins
adc
jne
lods
sub
pop
push
in
cmp
dec
pop
ss
push
jmp
ror
jo
test
mov
inc
add
dec
push
lock
sbb
popf
or
retf
outs
fcomip
fidiv
push
aas
inc
inc
push
xor
inc
mov
xor
jmp
xor
xchg
es
sub
push
cmps
xor
cmp
lahf
test
jbe
out
inc
sbb
retf
jle
(bad)
mov
mov
or
std
add
mov
fwait
(bad)
mov
outs
jmp
jmp
repnz
xor
adc
adc
popa
shl
sbb
inc
test
push
jbe
in
sar
test
jmp
add
add
mov
shr
test
cmp
cmp
(bad)
pop
std
adc
jl
test
js
mov
aad
test
mov
ror
in
shl
dec
aaa
adc
int
cmp
jno
inc
and
scas
xor
icebp
dec
cs
cli
movs
mov
xchg
mov
sub
jae
movs
out
jmp
dec
fadd
in
dec
scas
inc
popa
dec
lock
jmp
push
fnstenv
imul
in
cmps
mov
or
push
loop
pop
retf
enter
mov
cld
sbb
and
pop
outs
imul
aas
xchg
pop
cld
shl
loope
mov
or
bound
mov
xchg
nop
cmp
sahf
fld
jne
ffreep
and
mov
aam
push
mov
mov
and
inc
jl
jl
dec
lds
es
sub
mov
inc
push
cmc
fst
jg
cmp
mov
sub
pop
pop
sub
cmp
(bad)
aam
fstp
pop
in
xor
dec
imul
stos
out
retf
lods
imul
ins
mov
adc
jle
aas
adc
data16
cs
ss
cwde
mov
push
inc
xchg
jl
rcl
fld
pop
loop
out
mov
adc
sbb
sbb
xor
fld
std
mov
mov
scas
mov
xor
jge
mov
xor
cmp
push
xchg
stos
inc
pushf
mov
pop
xchg
pushf
aas
pushf
xor
gs
shl
sbb
lea
inc
clc
or
idiv
pop
(bad)
pop
in
dec
enter
jno
xchg
xchg
sub
loope
or
(bad)
sbb
pop
inc
sbb
into
lds
mov
adc
dec
xchg
and
push
test
cmp
imul
into
cmp
fst
fs
sbb
ds
lahf
jmp
or
add
std
xchg
jnp
lods
pusha
rcr
sbb
sahf
cmps
enter
inc
paddw
pop
push
sbb
pop
sahf
and
mov
xlat
xchg
cmps
stc
mov
or
cmps
pop
or
dec
mov
pop
fstp
int3
mov
stos
in
cli
jae
push
inc
pop
sahf
mov
push
cld
mov
repz
jg
add
pop
std
adc
stos
test
add
add
push
mov
pop
ss
sbb
add
pop
inc
jge
mov
pop
and
mov
xlat
mov
jns
mov
js
ds
xor
cmp
aas
fbstp
stos
das
cmps
jge
cmc
stc
stos
daa
inc
add
ja
jmp
jbe
rcl
out
das
adc
test
call
sbb
sub
and
out
sub
cmp
int3
shr
cmp
sub
or
push
push
mov
fs
in
inc
mov
pusha
fmul
mov
sbb
xchg
mov
push
cmp
loope
ret
bound
es
mov
inc
fmul
fwait
lods
arpl
push
test
adc
push
and
jne
cmp
ss
mov
push
sub
mov
ret
mov
dec
cmps
int3
aam
rcl
jne
mov
fld
inc
sbb
jmp
adc
sub
repnz
and
or
mov
push
enter
cld
or
movs
push
push
shl
xor
scas
pop
not
jno
push
fcom
add
cmps
xchg
pop
and
outs
inc
add
popa
push
or
sbb
cld
cmp
dec
iret
sub
jmp
shl
arpl
dec
pop
adc
in
hlt
cdq
and
pusha
enter
xor
and
xchg
stos
imul
pop
lds
cld
std
jl
dec
test
dec
mov
add
mov
jmp
cmp
in
out
int
test
je
ficomp
sbb
cs
scas
mov
(bad)
jecxz
pusha
shl
mov
inc
int
cmp
sub
hlt
pop
push
sub
call
sbb
outs
jno
mov
idiv
fs
mov
in
pop
xchg
fild
adc
adc
mov
cmp
repnz
mov
mov
je
mov
push
sbb
inc
sbb
mov
and
xchg
pop
xchg
movntq
int3
dec
ins
inc
data16
xchg
dec
ret
mov
adc
cmp
es
cmp
xchg
or
add
pop
xor
test
test
mov
xchg
inc
mov
fdiv
aam
cmps
dec
lods
loopne
jne
das
and
push
cwde
add
mov
adc
or
add
fcomp
jg
jae
xchg
mov
dec
jne
xchg
retf
rcl
jg
mov
push
enter
xchg
adc
aad
mov
dec
inc
and
dec
xor
push
adc
mov
inc
push
xchg
rol
mov
ror
hlt
ins
daa
pop
pop
push
push
repnz
ds
mov
push
sbb
stc
push
pop
iret
adc
mov
idiv
dec
in
(bad)
fdivr
(bad)
dec
xchg
in
lods
les
cmps
rcl
inc
movs
(bad)
ins
ret
leave
les
ins
cdq
pusha
inc
add
inc
add
retf
sahf
inc
rcl
aaa
fwait
and
les
xchg
arpl
out
jae
stos
push
xchg
cmp
cmp
mov
fisttp
repz
pop
dec
inc
dec
pop
mov
mov
fstp
sbb
jne
gs
arpl
fnsave
xor
jae
pop
arpl
mov
pop
repnz
nop
sbb
inc
repnz
pop
sbb
into
or
inc
adc
jge
inc
int
ret
adc
mov
mov
retf
pop
pop
mov
pop
test
popa
call
loop
xor
fidivr
gs
ror
rcr
dec
adc
ss
neg
inc
xor
loopne
adc
aas
cmp
push
cmp
jo
cmps
sbb
jns
shl
aas
push
and
pop
mov
dec
popa
sti
xor
popa
out
mov
push
or
xchg
dec
popf
xor
arpl
adc
(bad)
std
(bad)
dec
test
ret
fsubr
call
cmp
push
inc
pop
mov
adc
cmp
arpl
in
add
imul
jg
mov
push
sar
movs
pop
ds
mov
into
push
jb
leave
(bad)
in
xor
stos
pop
out
fst
push
mov
aam
sub
or
in
xchg
pop
fdivr
leave
jg
or
add
sbb
ins
sti
fisub
jp
push
and
in
outs
icebp
sub
push
arpl
daa
push
xchg
dec
fldenv
mov
mov
jae
push
mov
inc
inc
add
dec
enter
push
push
adc
adc
sbb
iret
ins
add
sti
jp
js
movs
lock
push
sub
mov
cmp
(bad)
repnz
or
pop
or
loop
sti
shl
mov
pop
cmp
jns
xor
adc
adc
les
retf
in
les
adc
mov
push
xchg
imul
mov
jle
std
sub
sbb
sti
push
jge
(bad)
imul
mov
adc
jg
xchg
sbb
or
hlt
repnz
sbb
inc
mov
or
cld
adc
cmp
mov
in
mov
ds
stc
int
mov
push
cmp
test
and
adc
loopne
sub
mov
xchg
add
std
sub
pop
adc
outs
call
xchg
ja
bound
mov
int
outs
stos
cmps
pop
add
adc
data16
repz
and
stos
push
mov
add
inc
cwde
jp
nop
cmp
shl
sub
jae
fcmovu
inc
outs
in
popa
jnp
inc
sbb
pop
ret
inc
dec
cmp
(bad)
cmc
in
inc
xor
pop
loopne
add
ins
fdiv
xchg
xchg
jmp
cs
sbb
adc
lock
popf
xchg
sbb
cmps
xchg
lods
lods
xchg
mul
push
repnz
sbb
or
test
daa
and
mov
ret
sbb
xor
mov
mov
retf
mov
add
ja
mov
in
scas
cmp
pop
mul
or
ficomp
or
mov
mov
jge
sub
fcmovu
out
mov
push
hlt
dec
js
das
or
daa
xchg
mov
ss
sbb
out
int3
mov
(bad)
xchg
xor
aaa
pop
jp
pop
push
in
call
mov
jg
pop
pop
dec
bound
dec
jno
pop
push
sub
xchg
inc
jns
mov
pushf
in
inc
adc
xor
xlat
loope
sub
data16
outs
shl
cmps
push
sub
aam
sti
sbb
sub
pop
pop
push
mov
dec
xor
in
clc
xlat
or
and
jecxz
pop
cld
xchg
lock
popa
jns
or
imul
dec
pusha
mov
mov
fwait
(bad)
(bad)
leave
mov
call
popf
push
stos
inc
gs
mov
mov
lock
mov
jno
in
cld
xchg
inc
dec
adc
xchg
pop
dec
adc
and
adc
bound
(bad)
shr
pop
popf
test
cmp
fist
jne
aad
mov
pusha
adc
jecxz
dec
cmps
out
rol
dec
ret
sti
inc
sar
mov
aad
mov
ficom
pop
retf
sbb
xchg
call
mov
sub
cmc
in
sbb
xchg
cmp
jb
(bad)
inc
pop
lea
inc
jns
xchg
rcr
jge
jl
sti
lea
int
mov
fldcw
hlt
pop
das
arpl
mov
rcr
lea
das
add
mov
into
dec
inc
pusha
push
and
push
mov
out
xchg
push
mov
bound
xor
cmp
cdq
ffreep
push
mov
mov
jno
ins
jns
mov
mov
xchg
sub
sub
sub
ds
mov
stos
data16
stc
and
xchg
sbb
cmc
stos
lea
test
xchg
sub
and
aaa
outs
sbb
stc
pop
xor
cld
mov
jne
int3
xchg
cmps
jmp
ds
push
mov
xor
inc
inc
xchg
dec
dec
jmp
inc
(bad)
mov
test
mov
jnp
xor
jge
rcr
or
inc
adc
lock
cmp
lock
mov
or
pop
sub
fwait
clc
jns
popf
pop
test
nop
lods
dec
mov
movs
(bad)
rol
cmp
xchg
ss
mov
jne
jle
mov
popf
jmp
sbb
push
stos
js
sub
dec
(bad)
rsqrtps
ret
sar
add
jecxz
push
pop
aaa
lock
mov
stos
(bad)
je
and
adc
cmp
add
push
pop
ret
outs
xchg
mov
jnp
mov
pop
jb
dec
test
les
into
into
retf
fisttp
cld
inc
jge
mov
rcr
iret
mov
xchg
popa
push
dec
push
ins
or
sbb
jle
push
shr
push
adc
std
cmp
out
loopne
data16
dec
lods
and
mov
adc
add
inc
lods
jbe
clc
mov
enter
mov
(bad)
(bad)
aad
ret
arpl
xchg
imul
pop
std
aaa
imul
mov
mov
mov
add
mov
pop
cmp
inc
fsubr
xchg
js
mov
call
stc
mov
daa
adc
mov
stos
inc
repz
shl
jnp
cmps
les
jno
js
adc
mov
out
(bad)
cmp
cmp
jle
lock
out
xchg
jmp
les
out
jmp
aaa
inc
lods
sbb
fwait
jg
cld
pushf
push
dec
hlt
aas
cmp
ret
int3
call
xchg
push
jne
jb
cs
pop
sbb
mov
xchg
jle
fnsave
jno
xchg
adc
popa
add
enter
sub
push
popa
int
(bad)
xchg
dec
mov
pop
pop
mov
mov
movs
pop
cmp
inc
xchg
std
aaa
cmc
aad
je
inc
pop
adc
and
(bad)
and
xchg
sbb
aam
add
pop
cld
popa
jnp
data16
xor
mov
popa
pop
or
inc
mov
hlt
cmp
outs
jo
mov
fsubr
shr
push
fistp
js
mov
pop
xchg
ins
adc
daa
dec
and
fisttp
or
jbe
or
hlt
sbb
lahf
pop
cwde
push
or
pop
pushf
sti
xchg
gs
or
add
dec
mov
push
dec
add
loopne
sbb
in
mov
stc
retf
add
mov
retf
bound
mov
and
jae
sub
popa
pop
push
cs
cmp
cmps
fmul
ror
inc
das
sbb
pop
es
es
pushf
pop
sub
push
ja
aas
ja
dec
sub
imul
cmc
xor
cmps
stos
enter
mov
xchg
or
call
seta
sbb
out
jg
xchg
inc
jg
pop
jge
cmp
sub
movlps
sub
xchg
(bad)
stos
call
xor
je
mov
add
push
gs
or
sub
pop
jne
pop
scas
repz
mov
xchg
add
mov
mov
int
pop
sub
in
test
imul
jb
adc
std
das
pushf
push
(bad)
into
ins
loope
mov
retf
movs
retf
int
xchg
call
push
les
add
and
adc
sub
mov
loope
add
dec
lds
(bad)
sbb
stos
or
out
dec
mov
pop
mov
xor
shr
jle
xchg
mov
jae
ins
iret
cmp
mov
jecxz
mov
dec
sub
(bad)
lock
mov
and
bound
in
inc
in
pop
cmp
dec
jmp
int3
push
mov
or
add
lea
adc
sbb
xor
xchg
shl
mov
test
mov
add
pop
cmps
stos
add
mov
frstor
lds
mov
sub
fisubr
shl
mov
lods
mov
enter
or
das
or
icebp
call
adc
push
popf
pusha
dec
and
aaa
out
xchg
xor
mov
ret
pusha
je
sbb
or
scas
mov
je
or
add
and
pop
push
or
loop
push
ret
scas
sbb
popf
outs
xor
mov
push
jno
addr16
(bad)
cmc
pop
(bad)
and
xor
jecxz
test
repnz
sbb
push
add
cwde
es
mov
push
ins
xchg
cmp
jmp
(bad)
push
and
cld
imul
mov
cmp
xchg
add
rol
test
in
jmp
nop
out
test
adc
imul
cmp
ret
fidiv
mov
arpl
cmps
jnp
test
inc
iret
test
inc
push
or
pop
add
or
and
xor
out
clc
lock
jmp
dec
loopne
mov
jae
ret
inc
xor
(bad)
fucom
ret
pop
mov
ret
mov
lahf
repz
dec
pop
cs
mov
xor
(bad)
cli
sub
sub
clc
sbb
pushw
lds
adc
sub
lock
imul
adc
stos
shr
test
cmp
xadd
and
jg
ret
mov
sbb
fdiv
and
cwde
mov
lock
xlat
fdiv
add
call
std
imul
retf
add
push
popa
jl
add
mov
add
call
sbb
lds
mov
fistp
add
jmp
cmc
push
loopne
(bad)
(bad)
cld
(bad)
xor
cli
pop
lds
add
jmp
mov
pcmpgtd
shl
xchg
jno
inc
push
xor
add
push
xchg
ss
xchg
int3
xchg
sub
mov
cmp
test
(bad)
int3
or
mov
mov
fxch
in
push
sbb
push
mov
shr
mov
enter
adc
cmp
daa
repz
and
rep
mov
out
jb
pusha
frstor
std
icebp
data16
add
add
gs
sub
xor
jbe
xchg
mov
shr
and
fadd
push
addr16
cwde
push
xchg
jns
xchg
or
loope
inc
outs
clc
repnz
adc
mov
dec
xlat
das
xchg
push
jae
in
jg
jo
popa
out
aaa
push
ds
(bad)
xchg
add
or
jb
jl
shl
cmp
mov
mov
add
adc
jl
jb
cmps
lods
adc
shl
fcomip
lock
imul
rcpps
xchg
bt
jb
nop
inc
jb
jmp
mov
add
mov
shld
xchg
jmp
aaa
outs
inc
mov
sbb
xor
ss
ins
fist
and
sbb
jne
clc
inc
stos
mov
mov
push
jae
loope
cmc
mov
test
in
inc
sbb
xchg
and
xchg
inc
retf
jo
push
push
cmp
dec
inc
retf
cmp
test
jne
test
sub
cs
les
iret
cmp
mov
mov
inc
mov
push
mov
or
dec
jecxz
add
dec
fcomp
aaa
jnp
push
inc
std
sub
pop
and
(bad)
icebp
sub
mov
in
mov
sbb
pop
xchg
pop
jbe
mov
loope
push
xor
xor
inc
push
xchg
push
(bad)
fidiv
fsub
(bad)
push
lds
push
lds
xor
pop
inc
ss
mov
and
fs
pusha
hlt
adc
call
add
mov
fwait
outs
xor
je
push
pop
dec
sbb
sub
push
aaa
lock
mov
loopne
add
je
(bad)
xchg
fisub
sbb
cli
pop
xchg
sub
sub
pop
mov
jbe
cmp
jg
(bad)
ins
aaa
les
(bad)
aas
std
psubq
test
add
movs
dec
sti
mov
rol
inc
sbb
push
scas
sahf
ins
jmp
dec
js
lods
jae
lods
adc
ret
ins
in
mov
aad
and
call
or
(bad)
aaa
jb
sub
add
dec
loope
or
xchg
and
or
sar
mov
xlat
mov
ret
movs
sub
gs
(bad)
stos
inc
xor
repnz
sbb
mov
mov
xchg
sbb
and
retf
fmul
iret
arpl
popf
scas
push
std
xchg
add
fxtract
loopne
pusha
gs
scas
inc
ret
repnz
sahf
clc
fsubr
jmp
stc
fisubr
adc
in
sbb
stos
in
xor
in
adc
jg
cmp
test
rcr
adc
or
and
or
bound
jg
xchg
icebp
cmp
and
mov
pop
add
pop
xchg
mov
loope
popf
sti
dec
cs
loope
add
dec
xor
push
into
mov
jl
xchg
imul
cmp
lahf
mov
lods
jbe
arpl
xor
mov
jge
dec
mov
jbe
test
cmps
loopne
xor
imul
dec
in
sbb
push
adc
sbb
xchg
inc
cmp
test
cmp
or
test
sub
in
inc
fnsave
jecxz
xor
js
fs
fstp
mov
lods
addr16
xor
jo
xor
and
jge
aaa
mov
add
retf
ficomp
sbb
retf
jmp
mov
in
retf
movs
ret
test
out
jmp
jnp
pop
in
(bad)
(bad)
nop
sub
mov
retf
lea
sub
les
dec
jl
xor
les
fist
xchg
push
mov
daa
xchg
pop
pop
mov
mov
sbb
jnp
cli
push
pop
adc
aas
and
test
adc
push
pop
or
jno
iret
idiv
stos
push
fistp
mov
sub
xchg
dec
out
pop
xchg
sub
and
iret
xor
(bad)
fnstsw
dec
inc
ret
jl
push
mov
dec
dec
cmp
xchg
lods
push
push
out
pop
fcmovu
or
inc
retf
ret
jecxz
pop
lahf
cwde
and
test
ret
lds
test
adc
mov
lock
sar
cs
dec
pusha
inc
adc
sbb
into
ret
popa
enter
xchg
pop
adc
push
fwait
nop
out
dec
jmp
cmp
aas
in
xor
in
xchg
push
mov
jl
into
mov
and
lahf
pop
and
and
inc
loop
mov
test
xor
push
xchg
sub
daa
or
or
dec
sub
mov
nop
es
stos
fst
int3
push
ror
or
ror
and
sbb
out
shl
jnp
fcomp
or
rcl
push
mov
and
jno
pop
xchg
ret
shl
pop
outs
div
ret
add
adc
mov
pop
xor
push
pop
adc
in
jo
mov
mov
dec
xchg
cmp
lock
pop
pop
push
inc
call
jp
mov
mov
xlat
ret
add
cli
leave
or
stos
fcmovne
ret
xchg
(bad)
aas
inc
jl
mov
jge
dec
aam
js
pop
adc
dec
arpl
arpl
add
mov
pop
arpl
div
xchg
cmc
sbb
xor
sbb
imul
cli
mov
xchg
loope
jge
pusha
inc
aaa
and
das
cmp
movs
mov
nop
adc
jecxz
mov
dec
adc
xchg
pop
sahf
(bad)
aam
loopne
and
es
adc
loop
inc
jb
cli
sar
fimul
and
stos
xchg
push
aas
and
fstp
sar
sub
loope
lea
sub
xchg
jp
stos
out
test
(bad)
xchg
scas
adc
les
out
pusha
push
sar
sub
out
cmp
pushf
inc
out
not
inc
jmp
mov
pop
fisttp
cld
sub
test
mov
out
mov
sub
push
mov
cmp
sbb
push
arpl
xor
add
xchg
mov
adc
into
sbb
ds
or
xor
sub
pop
loop
and
cmps
mov
and
xchg
xchg
int
int
mov
iret
aam
lea
fistp
push
sub
popa
outs
bound
and
inc
dec
xchg
arpl
jecxz
and
popf
popf
bswap
mov
sub
hlt
sub
jns
data16
js
repnz
inc
stc
inc
inc
cmc
pop
ja
cmps
adc
mov
pop
aam
test
test
dec
add
jns
jae
push
jecxz
repz
sar
mov
pop
jmp
adc
(bad)
mov
mov
adc
jl
dec
scas
push
fisub
in
fld
fnstcw
xchg
push
inc
stos
sub
xor
repnz
xchg
lods
out
call
push
add
pop
jge
pop
hlt
and
and
and
xor
and
push
jb
push
mov
inc
mov
cli
mov
xor
fst
sbb
dec
test
or
(bad)
les
ins
jno
sub
aas
aaa
into
adc
cwde
push
fmul
fcmovbe
xor
sbb
pop
sub
dec
nop
mov
mov
inc
mov
jno
rcr
leave
push
imul
xlat
jle
or
jmp
jp
sub
xchg
outs
outs
sbb
ins
jge
jmp
mov
jo
mov
cmp
fstp
seta
fcom
cwde
(bad)
imul
repnz
scas
ds
inc
or
mov
inc
ret
add
imul
scas
lods
push
push
dec
pop
ret
retf
int
xor
outs
hlt
jle
push
dec
sti
into
lods
mov
loop
or
mov
rep
pop
ja
pop
or
xor
sbb
mov
adc
imul
retf
arpl
in
scas
dec
sar
test
shr
not
and
sbb
test
pop
retf
cmps
jmp
aas
add
in
cmps
(bad)
out
xor
cmp
pusha
shl
int3
lods
popf
cmp
sbb
jmp
push
push
cli
push
mov
cs
je
mov
aas
test
mov
daa
repnz
mov
ficom
and
lahf
xchg
out
jmp
stos
sbb
mov
jo
cmp
bound
pop
cmp
fmul
ficom
jl
in
pop
test
aas
dec
pusha
lods
jnp
mov
popf
add
cmp
dec
ja
cmp
pop
jb
jecxz
sbb
cmc
call
add
adc
out
add
or
ffree
sbb
dec
aam
(bad)
loop
xchg
or
dec
sub
sti
mov
je
enter
dec
cmp
shl
into
add
lahf
inc
dec
pop
ss
cs
sbb
cmp
dec
mov
pop
xchg
outs
ret
outs
gs
(bad)
push
sub
sahf
sahf
mov
inc
adc
cs
loop
mov
cmp
pop
das
dec
pop
cmp
fistp
xor
push
xchg
std
test
ret
sahf
(bad)
adc
xchg
mov
jl
loop
dec
aas
adc
xchg
stc
jle
into
jmp
inc
pop
jmp
bound
pop
pop
mov
mov
cmp
es
stos
rcl
sbb
lods
shr
ins
sub
mov
push
shl
pop
mov
cli
in
ins
shl
xchg
mov
mov
mov
loope
cdq
push
xchg
lds
push
push
ror
in
cmc
xchg
in
lods
jmp
dec
lea
sub
mov
imul
pop
imul
js
push
call
mov
sub
jg
div
jno
scas
inc
mov
out
dec
fstp
dec
(bad)
and
sub
sar
cmc
mov
mov
xlat
add
pop
stos
inc
pop
jb
push
(bad)
(bad)
loopne
jmp
mov
sar
add
mov
cmp
mov
push
loope
pusha
call
and
dec
mov
pushf
inc
out
inc
shl
out
lds
mul
mov
loop
mov
mov
retf
test
jne
cmp
xchg
mov
fisttp
adc
ss
shr
xchg
fmul
and
nop
pop
ds
(bad)
mov
aam
es
mov
sbb
jbe
push
xchg
jo
bound
movs
in
push
pop
inc
sub
cld
mov
popa
adc
mov
mov
jae
and
pushf
shr
pusha
mov
(bad)
in
sub
int
xchg
jnp
add
lods
mov
push
mov
sub
and
stos
dec
and
jp
dec
ret
mov
shl
cmp
add
mov
push
cdq
pusha
pop
pusha
test
imul
mov
add
and
mov
dec
aad
dec
add
cmp
lea
(bad)
fucomi
push
mov
mov
inc
or
call
xor
mov
and
mov
xchg
aam
dec
sbb
add
out
ror
mov
or
inc
js
shl
imul
ins
aam
jno
and
movs
ret
push
cmp
pop
test
and
cli
sbb
mov
sub
inc
mov
xchg
jb
push
in
lahf
and
fstp
lods
and
jecxz
jno
mov
jnp
dec
sub
mov
xor
and
push
mov
mov
mov
bound
cwde
adc
jbe
xor
mov
sub
xor
das
mov
inc
stc
adc
mov
and
mov
je
daa
fwait
test
jnp
cmps
loopne
mov
cli
xor
das
repnz
add
dec
call
jb
mov
out
sahf
pop
arpl
jae
add
xchg
jg
mov
shl
jns
dec
out
sub
fisub
ins
jb
push
arpl
inc
and
and
adc
fcmovb
cld
and
in
mov
cmp
xor
dec
jle
fstp
sar
imul
rcr
repnz
test
lahf
and
mov
dec
clc
cmp
or
mov
scas
or
add
loope
cmps
call
(bad)
not
xor
aad
call
cmp
bound
(bad)
ret
add
rol
(bad)
fnstsw
enter
(bad)
fimul
sbb
cmp
shl
hlt
movs
ins
jbe
rcr
test
adc
add
pop
or
pop
rcl
dec
ins
pop
imul
pop
callw
xor
out
jecxz
pop
jge
xchg
cmp
mov
adc
fbld
cmps
xchg
push
and
and
bound
mov
and
ss
xchg
cld
aas
inc
xchg
push
pop
inc
mov
addr16
ffreep
lahf
xchg
push
stos
test
in
arpl
xor
adc
sbb
sbb
push
cmp
and
sbb
mov
rcr
sub
sbb
push
lock
loopne
jg
ins
ins
push
es
cmp
inc
cmc
and
jge
xor
jne
mov
xchg
mov
add
je
arpl
fnstcw
xor
mov
and
call
sbb
mov
inc
jae
jns
lods
stos
xchg
lahf
push
mov
gs
movs
mov
cmp
mov
sbb
and
je
dec
cld
jmp
cmp
mov
mov
xchg
adc
add
jl
sub
loopne
sub
sahf
inc
cmps
dec
aas
cs
int3
xchg
sbb
cmps
adc
dec
jle
sti
adc
aas
rcl
sbb
sub
test
repz
cs
or
jmp
xchg
arpl
mov
pop
jp
dec
dec
jns
push
std
int3
mov
inc
adc
cmp
pusha
mov
rol
outs
sbb
pop
popf
into
loopne
xchg
call
into
xor
in
mov
inc
xchg
mov
or
mov
jb
mov
push
dec
fisubr
fnsave
mov
outs
outs
jg
inc
aam
in
mov
out
in
iret
or
icebp
xor
leave
mov
fwait
cmp
ret
lea
sbb
shr
sbb
mov
movs
outs
movs
jmp
daa
mov
mov
inc
push
popf
aas
mov
imul
xor
inc
xchg
sub
sub
cmp
sub
leave
test
and
mov
push
nop
stos
test
add
pop
movs
lds
add
movs
pop
xor
ret
mov
mov
lods
jmp
mov
xor
sbb
stos
add
imul
inc
ret
mov
xor
push
pop
xchg
test
sbb
mov
daa
and
xchg
into
addr16
mov
jae
popa
pop
cli
add
pushf
jno
mov
call
inc
cmp
addr16
les
pop
jbe
push
jg
dec
ins
or
pop
stc
shl
push
shr
cmp
cwde
push
jle
mov
pop
jmp
add
add
fisttp
jns
enter
sub
pop
push
fisttp
dec
pushw
push
mov
addr16
sbb
adc
les
ss
stos
ds
repnz
adc
cmp
jo
rol
inc
push
shl
pop
call
movs
cmps
adc
and
xchg
int3
lods
fdivr
lea
imul
dec
inc
mov
das
mov
pop
cmp
shl
xchg
push
and
ins
jmp
pusha
adc
es
mov
daa
arpl
sub
inc
inc
or
into
sbb
ja
shr
push
repnz
push
(bad)
cmp
xchg
xchg
or
jl
mov
pop
dec
pop
loopne
iret
mov
cmp
ins
enter
sbb
push
push
cld
xchg
js
popa
shr
lock
mov
das
aam
jl
pushf
and
xchg
xor
out
std
add
ins
rcr
out
mov
jnp
sub
loopne
(bad)
aam
retf
mov
aad
mov
lds
cmp
mov
inc
mov
in
inc
jno
jo
jo
cli
push
xchg
jg
mov
mov
inc
fcomp
movs
imul
js
push
fwait
lds
lods
cwde
fwait
pop
dec
or
cmps
jmp
cmp
mov
sub
push
mov
xchg
repz
xor
std
out
xchg
xor
test
scas
scas
pop
mov
out
sbb
out
jge
inc
out
sbb
inc
cld
or
loope
pop
pop
pop
ss
fsubp
aaa
cmps
(bad)
sbb
push
stos
daa
pop
push
push
xor
aas
and
pop
inc
cmp
adc
adc
fnstcw
fld
pop
xchg
add
pop
sub
cld
stos
in
jnp
icebp
ja
or
(bad)
es
or
out
jg
mov
(bad)
xor
xchg
ret
mov
cld
movs
enter
sub
inc
push
imul
outs
jecxz
xchg
adc
pop
cmc
ins
jb
mov
neg
mov
jmp
push
in
add
or
daa
adc
xchg
movs
int
mov
lea
and
cmps
scas
dec
bound
lods
mov
add
sahf
fld1
call
shr
out
dec
pop
mov
(bad)
arpl
nop
mov
lea
shl
sbb
fcmove
movs
lds
xor
and
call
aas
lahf
adc
cmp
jge
fstp
sub
cs
lods
and
(bad)
ja
inc
shr
sub
outs
ret
push
push
mov
jmp
lock
sar
cmp
int3
push
imul
dec
mov
mov
mov
dec
outs
in
in
sahf
jmp
inc
imul
or
pusha
shl
jae
and
mov
imul
push
es
add
or
or
ror
mov
dec
stc
sbb
repnz
mov
into
pop
call
dec
xor
cdq
imul
dec
in
jmp
jo
aaa
jbe
lds
push
push
push
mov
mov
int
pop
xchg
fldenv
xor
fdivr
in
dec
jp
and
call
xchg
jo
xchg
jno
push
int3
mov
das
pop
mov
sbb
cmps
mov
les
mov
add
sar
cld
mov
xchg
mov
fs
sbb
jns
sub
push
cmc
pusha
inc
dec
inc
out
sub
mov
add
call
jg
imul
mov
cld
sub
pop
ja
les
test
pop
lea
cld
mov
add
push
aad
xor
in
enter
movlps
enter
inc
inc
add
repz
mov
xor
loop
cmp
inc
fbstp
add
fwait
out
sbb
ffreep
xchg
add
dec
jmp
jno
jb
popa
call
repnz
cmp
inc
add
mov
cmps
cmp
jmp
jmp
mov
add
ret
movs
xor
add
imul
ins
or
fwait
leave
ja
inc
out
mov
mov
cmps
mov
pop
sbb
push
mov
dec
fdivr
mov
aam
sub
sub
aaa
xor
mov
and
retf
movs
cmp
xchg
rcr
dec
mov
mov
fnstcw
retf
sbb
and
mov
sti
jne
rol
mov
mov
push
mov
shr
fwait
stc
rcl
mov
or
mov
or
jg
cmp
pop
ficom
outs
fwait
jge
daa
mov
cwde
inc
jo
aaa
cmp
xchg
mov
add
adc
je
out
dec
jmp
push
retf
and
inc
add
stos
mov
xchg
int
xchg
retf
add
sub
adc
sbb
mov
aaa
cmc
and
int3
push
iret
xor
inc
mov
popa
sar
ror
leave
and
popa
mov
xchg
lods
sub
jmp
clc
js
outs
jae
and
in
and
and
jb
movs
andps
xor
bound
adc
jno
mov
lds
fwait
sahf
outs
push
es
add
sub
addr16
lods
sbb
add
add
movs
enter
pushf
stos
sub
repnz
push
xor
fs
adc
inc
shl
aam
and
in
sub
cmp
inc
iret
push
or
fist
fisubr
or
and
cmp
test
dec
dec
jle
cmp
jmp
xchg
mov
mov
arpl
and
xchg
cmps
outs
ds
movs
enter
jp
mov
lds
in
adc
scas
xchg
sub
inc
dec
xchg
mov
pop
mov
mov
sub
add
cmp
clc
sbb
cld
fcomp
pop
aad
out
in
jle
or
and
mov
sub
call
hlt
and
outs
test
push
mov
or
loop
scas
or
and
(bad)
call
hlt
div
mov
mov
jnp
add
xchg
and
mov
mov
jge
dec
pop
inc
sbb
mov
and
out
hlt
push
pop
jbe
jle
fs
(bad)
push
outs
rcl
inc
or
test
mov
ret
les
in
cmc
sub
or
fcmovne
mov
mov
ins
xchg
imul
cmps
movs
and
sub
mov
aaa
jmp
cdq
je
or
xor
adc
imul
aaa
push
movs
(bad)
imul
inc
ins
iret
jge
sub
jb
add
jbe
arpl
sbb
mov
pop
and
or
popa
jnp
daa
mov
mov
inc
xchg
mov
jb
pop
push
lds
sub
in
mov
or
iret
call
cmps
pop
bound
jecxz
sti
dec
out
popf
stos
(bad)
lahf
xchg
jp
xor
rcl
cmps
xchg
and
call
aas
jp
fs
add
cmp
or
rol
mov
jg
sahf
sbb
mov
inc
push
mov
dec
cmp
jge
arpl
adc
jmp
adc
vandnps
sbb
sub
data16
or
repz
js
lods
lahf
out
stc
adc
and
mov
ja
push
fcomi
push
call
shr
retf
xchg
mov
aam
and
inc
cwde
jg
ss
les
iret
push
(bad)
pop
inc
das
push
mov
shl
rcr
xor
jle
cmp
jge
push
(bad)
(bad)
sti
neg
movs
mov
fadd
cmp
xchg
cmps
jbe
mov
movs
sub
repnz
mov
inc
or
aad
test
mov
iret
shr
pop
lods
scas
dec
fdivr
cmps
arpl
add
add
jmp
mov
sar
call
xchg
cmps
lock
dec
fmul
bound
sub
mov
pop
add
ja
outs
and
test
popf
cmp
sar
mov
push
add
ret
add
add
xor
and
gs
dec
in
dec
add
fcomi
jmp
sbb
popa
jl
loopne
xchg
shr
movs
cdq
retf
cs
imul
cmp
je
out
add
aam
cmp
lds
imul
into
rol
pop
sbb
(bad)
icebp
pop
dec
loopne
mov
test
mov
pusha
mov
mov
cmp
cmp
mov
push
mov
sbb
iret
neg
ffree
(bad)
faddp
mov
es
int
mov
mov
cmc
pop
scas
dec
pushf
pop
popf
fld
retf
jo
ret
sbb
jb
inc
loop
mov
cmp
lods
jae
ss
ror
dec
iret
cdq
mov
jecxz
jb
aaa
cdq
test
movntps
add
xor
adc
nop
in
retf
mov
mov
push
iret
in
ret
data16
pop
sub
jnp
and
ret
adc
adc
aas
xchg
lahf
out
ins
scas
clc
ja
clc
mov
add
loopne
int
xlat
test
loope
jae
mov
jl
adc
and
jle
jb
cmp
mov
fcomp
cmps
mov
or
jbe
data16
mov
and
ins
ret
ret
inc
cli
xor
sahf
(bad)
sub
jo
pusha
jbe
sahf
ror
xor
mov
lods
and
push
mov
shl
mov
pop
fldenv
mov
xchg
mov
sub
pop
xor
dec
daa
cld
push
shr
xor
dec
rcr
pushf
retf
sub
mov
mov
enter
cs
adc
or
jae
adc
ret
out
int3
fmulp
jecxz
jo
push
daa
sub
test
or
lds
dec
cmp
es
xchg
pop
sub
ret
push
loop
jno
add
jbe
mov
adc
(bad)
js
inc
dec
mov
pop
push
sbb
arpl
push
(bad)
aam
aad
lea
mov
inc
sbb
sub
adc
lds
jno
cdq
ret
mov
stos
xor
add
retf
jle
add
addr16
adc
jns
hlt
push
push
call
lock
pop
xor
adc
cdq
(bad)
ret
dec
mov
pop
fbstp
imul
push
or
mov
sub
push
push
ffreep
push
cld
pop
mov
mov
fcom
push
fisubr
call
dec
jp
jl
push
mov
inc
and
mov
stos
mov
(bad)
jge
dec
test
retf
xlat
push
lods
mov
mov
outs
push
adc
add
out
outs
mov
dec
aas
arpl
outs
adc
stc
lock
ins
fldenv
int
int
mov
fld
stc
mov
and
and
mov
addr16
add
cmp
outs
adc
js
mov
imul
sbb
aas
push
xchg
jns
call
inc
(bad)
fidiv
inc
cvtpi2ps
inc
sub
mov
mov
mov
loopne
iret
jae
cmp
retf
xor
dec
or
out
adc
adc
jmp
imul
loop
jge
or
xchg
add
in
fcomp
push
jg
or
xor
lds
jns
adc
inc
or
jmp
cmp
mov
and
sub
xchg
icebp
iret
out
sub
push
sbb
mov
out
aad
retf
jno
jle
fisttp
push
add
jae
xchg
test
and
sub
sbb
jae
xlat
mov
ret
cli
int3
into
mov
addr16
mov
data16
clc
loopne
les
mov
fldpi
cmp
jae
loop
pop
push
or
push
call
add
adc
retf
or
fcmovne
mov
retf
call
sub
adc
shl
(bad)
iret
lds
(bad)
add
fld
mov
add
mov
(bad)
sub
stos
xlat
mov
es
cmps
xchg
inc
cmp
(bad)
and
in
dec
ret
dec
out
or
cmp
jmp
ss
mov
adc
sahf
or
aad
push
inc
sbb
cmc
cs
mov
mov
jo
cmp
fprem
xchg
cmp
xor
jne
cmp
stos
std
stos
fwait
outs
(bad)
sti
push
adc
inc
dec
xor
(bad)
out
push
movs
xchg
xchg
movs
ins
and
cmps
xlat
pushf
pop
push
lods
sub
add
(bad)
movs
xlat
xor
cmps
popa
in
std
dec
inc
pop
inc
xchg
stos
and
(bad)
lock
jmp
iret
mov
pop
jp
xchg
sbb
sbb
cs
(bad)
icebp
sbb
cmp
xor
adc
cmp
push
dec
retf
inc
push
mov
aam
mov
and
mov
bnd
test
rcr
cmp
stos
mov
dec
jg
sub
outs
loope
xchg
ss
xchg
xor
icebp
movs
inc
jns
test
enter
mov
test
clc
adc
mov
push
es
mov
mov
cs
das
aad
sbb
sub
xor
mov
stos
sbb
jo
out
jns
mov
sbb
adc
mov
scas
and
gs
cwde
xchg
mov
adc
(bad)
mov
icebp
fs
mov
retf
test
jmp
and
in
push
jns
ins
sub
xchg
sti
xchg
fiadd
mov
loopne
adc
inc
pop
add
ins
scas
outs
jno
ss
div
fldenv
pop
nop
shl
mov
lea
cmps
push
loopne
cwde
push
dec
cwde
add
scas
idiv
stc
cmps
inc
sub
push
fsub
fistp
sbb
xlat
dec
sar
cdq
dec
mov
mov
push
pop
ficomp
stos
ja
sbb
mov
inc
test
mov
xor
jp
fst
xor
pop
test
or
fild
mov
jb
inc
jae
dec
hlt
xchg
lds
fidivr
shr
xor
(bad)
mov
dec
dec
jl
lahf
inc
mov
xchg
mov
sbb
cmp
test
enter
(bad)
test
dec
cmp
dec
test
fnstenv
xlat
test
rcl
mov
iret
mov
mov
add
aad
jge
mov
cdq
mov
pop
inc
in
sbb
cld
pop
ret
mov
fwait
aaa
fs
xchg
push
cmp
sbb
(bad)
les
or
xor
pushf
push
(bad)
mov
(bad)
sub
push
add
push
and
call
pop
mov
sub
jle
adc
imul
or
dec
mov
or
adc
xor
xor
js
aas
in
xchg
js
mov
sbb
imul
fucom
test
xor
(bad)
mov
enter
xor
out
push
push
sbb
and
push
xor
dec
push
and
mov
jmp
mov
push
rcr
cmp
inc
call
call
mov
pusha
jg
popf
push
mov
mov
(bad)
in
ins
adc
sub
test
les
mov
mov
jo
add
(bad)
call
xor
movs
mov
mov
and
pop
push
(bad)
jmp
jge
outs
(bad)
adc
jmp
shl
and
pushf
push
cmc
push
cwde
pop
jns
rcl
mov
pop
inc
xchg
psubsb
mov
sbb
(bad)
jle
sti
cdq
and
add
xchg
dec
push
cdq
leave
jno
fistp
sti
adc
cli
mov
sbb
je
xadd
call
fcmovb
popa
call
xchg
cmps
aam
push
mov
loop
popa
rol
test
push
std
cmps
cmc
adc
xlat
push
(bad)
fistp
and
fidivr
pop
outs
push
push
pop
(bad)
mov
jecxz
add
mov
mov
(bad)
pop
(bad)
pushf
pop
push
das
sbb
dec
repz
mov
and
ds
test
push
cmp
and
mov
lea
int3
iret
mov
dec
call
sbb
and
mov
je
cmp
daa
jmp
dec
cmps
and
push
loop
push
in
in
jl
je
cmp
das
sti
test
test
jno
sub
ins
mov
pusha
or
cld
inc
dec
fbstp
and
pop
sahf
xor
popa
or
adc
push
jno
shl
push
scas
push
mov
jp
out
jo
cmp
(bad)
mov
push
xchg
js
sub
pusha
dec
push
int
sub
data16
cmp
out
imul
mov
inc
loopne
cwde
loope
cmp
js
out
frndint
(bad)
imul
and
cld
shl
in
add
sub
adc
cwde
and
out
ret
pop
pop
popa
mov
call
imul
aad
aad
jnp
and
or
daa
lods
jmp
arpl
pop
out
xor
pop
pop
aas
(bad)
imul
mov
jno
test
and
or
mov
rol
push
out
mov
frstor
or
or
repnz
push
mov
mov
mov
pop
sbb
in
mov
mov
xchg
xchg
sti
sbb
pop
add
adc
retf
sbb
adc
(bad)
add
and
jle
jle
fdecstp
outs
cmps
jbe
repz
inc
inc
sti
nop
mov
std
jl
sub
pop
and
or
scas
add
icebp
test
jae
cld
and
(bad)
and
adc
push
and
sbb
and
cmp
push
dec
pop
add
dec
xchg
push
sbb
iret
addr16
pop
gs
fdivr
loopne
inc
xchg
cmp
shrd
push
scas
jns
daa
sub
lods
std
mul
popa
test
dec
sti
(bad)
mov
inc
loop
lea
aas
outs
cmp
ss
clc
cli
outs
sub
mov
push
pop
or
push
and
cld
fldenv
in
and
dec
or
call
sbb
retf
xlat
pop
lahf
mov
out
fwait
jmp
inc
in
dec
test
aam
fiadd
js
repnz
and
jl
in
push
mov
inc
fcom
xor
aaa
cmc
sbb
inc
cmp
mov
mov
rol
xor
inc
cmps
push
jge
popf
test
jbe
xchg
ret
fld
xchg
ins
shr
jp
popa
loopne
call
mov
and
lds
cmp
call
mov
in
lods
dec
les
xchg
xchg
xlat
inc
push
iret
sub
leave
add
add
js
jb
(bad)
es
cmp
cmp
aam
or
jmp
xor
mov
cmp
and
imul
sub
int
cmps
jmp
sub
pop
mov
in
mov
es
shl
xor
popf
sbb
test
stos
idiv
stos
cmp
add
iret
outs
adc
jmp
push
imul
sbb
rep
lds
adc
jmp
and
mov
mov
pusha
ds
dec
mov
scas
pusha
xchg
jb
inc
int
adc
adc
mov
(bad)
pop
(bad)
cmp
push
movs
jno
jo
and
push
adc
add
out
icebp
pop
push
mov
enter
out
mov
aas
nop
jecxz
test
mov
dec
xchg
jge
jg
or
(bad)
hlt
sbb
std
dec
lahf
adc
adc
mov
ins
repnz
sbb
rcr
scas
enter
xchg
loop
and
test
sbb
mov
jge
xchg
inc
xchg
je
jne
mov
mov
icebp
popf
aad
jmp
sub
fsubrp
iret
je
mov
repnz
lock
fstp
jecxz
xchg
jmp
jb
mul
jg
ss
mov
(bad)
sbb
out
test
inc
xor
aas
shl
fdivr
scas
add
fld
or
aas
cdq
icebp
shr
jo
mov
les
mov
fs
inc
ret
push
push
mov
enter
mov
cmps
popa
repz
cwde
mov
xchg
adc
aad
imul
inc
aas
popf
mov
dec
push
mov
out
or
rcl
(bad)
xchg
std
inc
dec
iret
or
add
xlat
cdq
inc
push
jne
or
fs
xchg
not
cmp
dec
cmps
mov
mov
ficom
mov
ins
mov
aad
and
sti
adc
arpl
stos
mov
pop
xor
aaa
out
pop
(bad)
aad
dec
(bad)
repz
push
retf
mov
outs
mov
stos
daa
int
shr
retf
lea
jecxz
pop
in
sbb
push
xchg
(bad)
jb
loop
aas
jo
add
jl
dec
fwait
pop
ret
sti
inc
cmc
xor
xchg
push
pop
push
jmp
mov
push
pop
or
mov
sbb
inc
or
and
imul
enter
and
gs
push
and
or
popa
jno
mov
cmp
mov
push
call
adc
and
mov
sbb
rol
loope
ds
mov
aaa
push
or
jl
in
xor
shr
jne
clc
inc
sbb
xchg
and
mov
and
fdivr
data16
cmp
sbb
or
imul
pop
mov
ror
sub
test
loop
dec
fisttp
inc
or
pop
sbb
dec
add
xchg
add
xor
ins
mov
dec
inc
test
(bad)
nop
adc
mov
(bad)
pop
inc
jmp
fs
sbb
cmp
popa
dec
ficom
push
dec
cmp
sbb
popf
cwde
fdiv
addr16
lods
bswap
jle
jnp
sar
push
xchg
pop
inc
leave
xchg
jo
ins
fmul
out
cmp
cdq
stos
xchg
xchg
cld
dec
adc
and
aad
jg
pop
sub
stos
movs
pusha
pop
push
and
xor
fwait
cmp
push
mov
jae
hlt
dec
mov
js
mov
fcom
icebp
les
cmp
pop
enter
cmps
xor
imul
in
jge
popf
call
or
jo
pop
call
and
sti
int3
scas
xlat
xchg
loopne
jne
jl
pushf
adc
fst
xchg
mov
jb
shr
mov
push
pop
leave
cwde
jmp
mul
mov
movs
xor
xor
daa
push
inc
sub
mov
lods
or
cs
ror
repnz
lds
add
outs
or
mov
dec
int
inc
pop
ret
out
std
mov
imul
rol
cwde
pop
mov
lock
mov
mov
add
pusha
fsub
fnsave
mov
xchg
sub
pop
pushf
mov
or
xor
adc
hlt
or
pop
jmp
cmp
jmp
jecxz
(bad)
cs
jmp
ja
pop
clc
shr
in
mov
xor
jnp
pop
sahf
push
mov
xchg
mov
fst
mov
mov
jecxz
stos
fidiv
sbb
cmps
bound
ins
push
not
repnz
lods
adc
pop
enter
mov
retf
jge
mov
sub
xchg
nop
inc
iret
ins
mov
cdq
cdq
scas
pusha
dec
ins
cmp
and
outs
inc
pop
adc
pushf
test
not
cld
mov
dec
mov
scas
ficomp
or
pushf
inc
push
call
movs
mov
mov
xor
jae
and
cmps
ds
xor
arpl
mov
fist
or
xchg
jge
sbb
sub
std
add
adc
not
jmp
and
xor
push
mov
bound
jae
pushf
mov
(bad)
dec
repnz
mov
pop
add
pop
(bad)
mov
cmp
cld
(bad)
xor
pop
push
stos
jecxz
and
and
fcomip
fisttp
iret
mov
dec
call
pop
inc
lea
pop
inc
pop
fs
jmp
xchg
xor
hlt
mov
mov
inc
or
int
push
or
hlt
into
and
nop
or
(bad)
jge
fdiv
jbe
into
mov
into
pushf
std
imul
sub
adc
(bad)
cmp
mov
and
sahf
adc
xchg
mov
fiadd
je
push
and
pusha
(bad)
mov
cmc
xlat
add
sub
mov
sbb
inc
dec
dec
dec
or
(bad)
dec
rcl
pushf
fs
aaa
lods
(bad)
sbb
jnp
or
in
xchg
fist
jmp
inc
std
mov
xchg
add
mov
shr
mov
shl
pop
jmp
loope
push
(bad)
adc
mov
test
arpl
movs
shl
retf
sub
aam
loop
and
dec
pushf
imul
rcl
lock
xor
and
enter
idiv
(bad)
enter
in
or
inc
xor
out
jne
cmp
dec
mov
es
mov
in
mov
mov
dec
sti
sbb
aam
adc
inc
xor
xor
outs
fcom
dec
mov
xor
jne
xor
loope
(bad)
test
test
int3
sbb
xor
or
daa
add
dec
fdivr
adc
ins
mov
fist
fild
outs
pop
xchg
sub
jle
nop
nop
jne
mov
inc
dec
push
push
into
inc
cdq
(bad)
xor
dec
std
xor
or
clc
out
imul
dec
push
leave
outs
addr16
jecxz
sub
icebp
pusha
test
add
cmps
mov
xchg
mov
(bad)
or
sbb
add
jle
xchg
and
in
shr
neg
xchg
lock
mov
loope
dec
xor
imul
mov
push
ror
pop
xlat
fdivr
ins
sbb
inc
pop
mov
shr
hlt
popa
ret
nop
retf
dec
lea
jo
iret
out
pop
xchg
add
frstor
xchg
adc
inc
sbb
cld
fiadd
xor
xchg
out
adc
jbe
gs
jmp
loop
and
sbb
dec
(bad)
fwait
loop
mov
dec
loop
ret
jnp
lahf
jecxz
and
in
pushf
inc
stos
fimul
test
mov
pop
dec
mov
inc
lahf
push
push
and
cmc
sar
fadd
and
test
jae
ins
icebp
aad
and
(bad)
fnstsw
sti
inc
inc
pop
sti
sbb
mov
cmp
lahf
fs
(bad)
out
aaa
jb
dec
and
dec
push
ins
jp
test
cmp
pop
das
push
rol
rol
push
xor
cmp
jecxz
out
sub
popf
xor
aam
sub
xchg
xlat
cmp
cmp
mov
jl
cmps
lods
jle
mov
lods
sub
dec
push
push
test
aad
dec
idiv
(bad)
sbb
jl
jg
fs
inc
jge
(bad)
(bad)
stos
pushf
fwait
stos
nop
pop
in
outs
pop
inc
in
out
das
mov
cmps
data16
rcr
int3
imul
(bad)
jmp
aam
mov
pop
jne
inc
ja
ins
push
out
retf
rcr
inc
fild
lock
inc
inc
std
into
adc
add
or
fsub
out
fsubrp
adc
push
aam
or
fs
int3
add
mov
(bad)
mov
sub
jg
xor
stos
xchg
ss
fs
sbb
aaa
inc
xlat
add
dec
and
test
das
repnz
ds
je
jb
cdq
out
stos
mov
or
mov
lock
(bad)
mov
lds
dec
push
jns
rol
pop
and
test
xchg
aaa
shl
pushf
dec
mov
pushf
and
adc
test
sub
fadd
aad
fs
adc
popa
pushw
not
pop
mov
mov
in
dec
xor
pop
or
repnz
bound
sti
pop
inc
fs
(bad)
ret
(bad)
mov
pusha
inc
out
call
sar
jl
add
and
shl
push
xor
sub
adc
cmp
and
test
xchg
iret
inc
cs
cmp
cdq
xchg
cmp
cld
not
jle
cmp
aaa
add
push
(bad)
pushf
sub
sti
push
jl
inc
aad
ret
lods
rcr
outs
sub
rcr
sub
outs
in
outs
jne
iret
dec
xchg
mov
popa
cmp
push
lods
shr
movs
xchg
add
shl
jmp
in
cmp
mov
add
jge
mov
ja
fldcw
xor
gs
pop
ja
xchg
add
cmp
imul
push
mov
and
mov
rcr
mov
cmp
xchg
xchg
xchg
cmp
imul
out
ficom
clc
movs
adc
add
adc
hlt
or
gs
or
or
xlat
adc
std
add
test
add
mov
jbe
add
mov
mov
cmps
lods
add
mov
sub
jo
cmp
jecxz
or
or
out
scas
pop
and
and
push
inc
fsubr
xor
xor
push
inc
stos
icebp
ret
pop
addr16
add
ja
cmp
and
adc
rol
jl
and
xchg
frstor
sub
adc
jmp
jecxz
pop
outs
mov
pop
in
js
or
cmps
push
cmp
outs
nop
pop
sbb
ins
dec
stos
sub
aam
daa
ss
dec
imul
enter
xchg
push
lds
ins
sub
push
and
mov
int
dec
test
daa
call
mov
mov
adc
cmp
xor
lea
adc
loopne
nop
rcr
fidivr
inc
push
or
ret
sbb
mov
add
rol
fadd
sbb
xlat
push
cmps
jno
stos
ja
xlat
in
cs
imul
push
pop
and
jg
scas
add
(bad)
out
pop
xchg
xlat
jae
je
shr
out
jo
(bad)
push
sbb
mov
or
call
or
outs
lea
cmp
push
cmp
push
leave
mov
mov
inc
mov
jns
aaa
xchg
add
lods
mov
or
cld
sbb
clc
jb
adc
scas
jb
mov
pop
adc
clc
mov
pusha
xlat
push
inc
sub
cmp
ins
push
jmp
loope
cmp
shl
gs
lock
test
jl
mov
ins
inc
daa
mov
ror
adc
fsub
cmp
bound
jge
mov
ds
or
add
loop
outs
jnp
fisttp
sub
and
xor
cmp
sbb
xchg
mov
dec
fmul
(bad)
in
sbb
pop
mov
mov
and
(bad)
pop
arpl
sbb
mov
pop
inc
ret
xchg
rcl
dec
mov
aam
mov
cmp
loop
bound
out
repz
loope
(bad)
dec
pop
mov
call
mov
adc
dec
cmps
fld
fnstsw
xchg
out
jne
pop
jb
pop
push
fs
adc
jge
popa
pop
xor
mov
dec
adc
ret
xor
dec
jecxz
add
push
xchg
dec
push
aaa
cmp
or
fimul
jns
fsubr
(bad)
inc
add
imul
sbb
dec
jbe
stc
aam
retf
xor
push
or
and
add
xchg
push
scas
pop
inc
popf
xchg
adc
jecxz
(bad)
cmp
cmp
std
jno
jno
pop
btc
push
loop
pop
sbb
push
in
les
mov
iret
aam
cmp
cmp
sbb
fwait
sub
mov
or
das
and
jne
dec
out
sbb
cwde
sbb
into
scas
mov
pop
xchg
adc
ret
xchg
in
dec
gs
nop
lock
jmp
add
push
or
mov
call
dec
and
pop
retf
retf
leave
arpl
fwait
mov
mov
push
arpl
int
jae
sbb
scas
idiv
jae
inc
rol
xchg
ins
mov
xchg
ss
jle
jnp
ja
int
push
add
es
and
out
arpl
mov
fwait
jp
(bad)
arpl
xor
or
add
out
xor
cmp
jbe
(bad)
cmp
pop
ins
inc
inc
ss
ficomp
jmp
cwde
sbb
mov
(bad)
in
push
pop
jle
adc
jmp
and
test
enter
out
xor
dec
inc
pop
push
adc
and
cli
fwait
aam
aam
add
movs
repnz
push
mov
inc
xor
jmp
or
cmps
test
adc
lahf
arpl
nop
mov
sub
mov
faddp
pop
(bad)
xchg
jne
stos
mov
clc
inc
push
and
retf
popf
add
xchg
scas
mov
cmp
sub
popa
pop
pop
retf
jno
repnz
inc
dec
mov
loopne
adc
je
dec
dec
pop
lahf
jae
xchg
cdq
sbb
pop
lds
cmp
push
js
jne
push
ror
rcr
xor
fmul
sbb
aad
mov
pop
mov
popa
call
or
cmps
mov
ror
popa
or
and
mov
or
arpl
rol
inc
jg
push
fsubr
push
sbb
es
jecxz
ret
repnz
ret
sub
adc
les
mov
cli
out
sbb
xor
mov
jno
ror
bound
push
sub
in
enter
std
fisubr
or
jno
ins
iret
push
xor
add
test
xchg
mov
sub
sub
(bad)
int3
adc
jmp
xchg
jp
mov
cdq
mov
fwait
ret
pop
push
retf
mov
shl
rol
mov
add
sysexit
shl
scas
in
jmp
or
int
inc
pop
in
aaa
pop
repz
fdiv
jns
jle
sbb
and
dec
movs
jnp
adc
ret
push
push
adc
cwde
cmp
leave
push
adc
loop
cmp
mov
dec
dec
jl
adc
ss
movs
sub
dec
call
cmp
add
push
pusha
jmp
mov
and
ins
sbb
ret
or
xor
les
fsub
sub
pushf
or
sub
jne
movs
aaa
pop
pop
mov
sub
jo
inc
push
je
movs
adc
dec
jge
jge
shld
lds
sbb
and
ss
movs
sbb
sub
jl
lods
fwait
sbb
jl
pusha
jne
add
xchg
push
arpl
jb
in
fiadd
mov
jg
mov
into
fild
sbb
ds
scas
inc
idiv
xchg
dec
into
bound
mov
and
inc
cmp
std
out
fld
adc
sub
mov
xor
(bad)
bound
pushf
xchg
inc
sub
mov
xchg
add
cmps
outs
dec
pusha
jecxz
cmp
jno
shr
cdq
and
xchg
inc
ffreep
loop
mov
fistp
ins
and
inc
mov
loop
(bad)
mov
xchg
mov
leave
push
adc
daa
fld
ds
pop
pop
xor
pop
push
je
add
cmp
mov
push
cmp
jb
sbb
fs
cmp
jne
fst
into
iret
mov
clc
dec
push
lds
aad
mov
es
adc
sub
push
aad
cmp
das
pop
push
mov
jae
mov
sub
les
and
cmp
out
(bad)
popf
ins
pop
and
pushf
dec
and
mov
es
pop
or
in
dec
jmp
ficomp
ficomp
pmullw
shl
in
add
xchg
cmp
lock
inc
cmp
fs
push
ds
push
cli
mov
cmc
xor
fild
cmp
icebp
jge
ror
push
and
aam
push
dec
mov
lods
in
lahf
jmp
xor
pop
jo
mov
retf
dec
outs
push
mov
ror
cld
adc
movs
call
push
mov
inc
pop
sub
sub
sbb
int
les
cld
fucom
nop
stos
jmp
fidivr
cmp
pop
push
daa
int3
sti
or
pop
cmp
repnz
gs
rep
or
es
add
sti
rcr
inc
test
pop
push
ins
mov
push
pop
mul
es
es
arpl
fucomip
sbb
add
ret
lds
pop
(bad)
mov
cli
(bad)
cmps
cld
lods
xor
mov
add
sub
cmp
adc
das
fnsave
pop
aam
test
cmp
daa
inc
push
inc
cwde
jb
cmp
pushf
and
push
push
jns
std
retf
or
test
adc
push
mov
push
inc
sbb
push
ret
pushf
push
mov
icebp
ins
cmp
mov
xchg
imul
push
mov
iret
scas
mov
xchg
stos
mov
test
stos
or
sahf
dec
(bad)
sbb
cdq
int
call
dec
jne
bound
add
mov
sbb
jo
sbb
push
adc
xchg
in
bound
or
lock
arpl
cmc
addr16
push
test
hlt
jae
addr16
xor
dec
movs
mov
std
jmp
mov
jb
sub
pop
aaa
push
int
lods
cs
adc
call
lahf
std
mov
sbb
mov
mov
or
or
mov
jge
jo
and
loope
inc
push
pop
mov
cmp
adc
ja
jge
sub
ficomp
xchg
push
sbb
movs
mov
out
pushf
lods
enter
adc
xor
imul
mov
adc
add
cmp
mov
ret
push
push
fdivr
out
adc
shr
or
mov
add
mov
mov
mov
test
cs
add
test
aad
das
cmp
mov
mov
test
cmps
cmp
push
aaa
mov
imul
cmp
pop
adc
sbb
(bad)
cmps
outs
push
ror
mov
push
inc
xor
push
aad
push
xchg
cli
and
inc
cmp
inc
test
pop
sub
pop
lds
or
adc
shl
mov
fidivr
test
pop
pop
jle
jmp
loope
stos
jp
nop
rcr
movs
push
ror
leave
shl
and
jns
and
add
push
and
shl
(bad)
dec
stc
scas
or
xchg
movs
xor
aam
scas
adc
mov
mov
cdq
outs
jecxz
inc
ror
sar
fsubr
dec
fisttp
loopne
retf
xor
fld
inc
adc
jo
pop
enter
test
int
dec
shl
repz
sub
inc
and
push
int
adc
jge
loop
inc
ja
cmps
add
pushf
push
test
ja
imul
fstp
iret
cmps
xor
pop
push
jp
pop
inc
sbb
mov
mov
movs
fidivr
push
push
sbb
mov
jno
and
ror
jb
imul
call
pusha
adc
dec
stos
xor
adc
add
sub
test
das
mov
xchg
retf
in
dec
push
int3
mov
imul
repz
inc
and
cmc
cmps
add
outs
outs
mov
movs
dec
mov
sub
dec
jmp
movd
and
int
cdq
fs
mov
(bad)
lods
fild
adc
sti
mov
test
sbb
scas
or
xor
push
fistp
cmp
sbb
sbb
jle
leave
and
pop
xchg
jecxz
cmp
xor
sub
mov
movs
sbb
xchg
xor
inc
leave
sub
push
mov
jl
inc
call
push
inc
shl
cld
adc
adc
mov
add
mov
loop
mov
mov
sub
jp
xlat
sbb
cmp
loope
ds
mov
adc
outs
jle
int3
aam
jmp
jb
cs
je
xlat
jmp
jae
movs
(bad)
punpcklwd
test
sbb
jl
jmp
fstp
sub
mov
and
daa
jge
inc
jnp
aas
out
jbe
clc
test
arpl
es
scas
mov
retf
scas
pop
aas
jmp
xchg
test
push
into
aam
jg
(bad)
test
fisub
(bad)
jnp
sbb
stos
lock
es
inc
inc
shl
sub
dec
and
cmp
addr16
in
test
mov
outs
push
sub
call
xchg
mov
mov
lock
out
retf
jp
push
pushf
xor
adc
dec
inc
dec
(bad)
jnp
adc
leave
adc
aaa
(bad)
retf
scas
cdq
mov
fs
repz
adc
dec
aad
pop
rol
in
xchg
mov
push
add
add
or
add
das
inc
xlat
push
ret
xchg
mov
enter
mov
xchg
mov
out
neg
xor
xchg
int
dec
mov
shl
iret
xchg
push
inc
or
loopne
xchg
xor
fisub
neg
int
mov
retf
inc
xchg
or
add
and
lods
(bad)
das
or
sbb
fwait
scas
int
push
mov
es
outs
push
rol
xchg
dec
sbb
lds
mov
or
fadd
xor
xchg
sub
cwde
push
sub
aam
addr16
sub
shl
adc
sbb
pop
xor
gs
pop
cmps
pop
inc
lds
xchg
push
dec
adc
je
das
add
sbb
loop
sti
ss
loop
push
loope
hlt
xor
or
inc
leave
or
icebp
pop
sub
mov
dec
and
xchg
int
movs
out
adc
loop
ret
aaa
imul
call
sub
fldcw
enter
dec
rcr
mov
cs
xor
cmp
xor
js
arpl
jp
sub
jae
mov
jne
or
call
adc
in
xchg
dec
push
dec
call
cld
lods
ret
jae
ins
xchg
pusha
out
repnz
and
mov
jmp
mov
stos
xor
jmp
push
test
inc
das
inc
fidiv
repz
idiv
stc
dec
test
in
iret
push
rol
cli
cmps
cmp
(bad)
into
xor
mov
int
sbb
retf
jge
jae
fwait
cli
adc
add
fldenv
push
mov
xor
stos
jg
and
jnp
punpckhbw
(bad)
adc
mov
sahf
repz
inc
mov
stc
push
sub
or
popf
pop
dec
mov
jge
inc
sbb
push
adc
iret
daa
mov
xor
push
mov
xchg
sbb
daa
(bad)
sub
xchg
or
dec
out
cwde
pushf
inc
sbb
and
jl
sbb
dec
clc
lock
xchg
inc
std
imul
es
mov
sbb
mov
iret
mov
test
xchg
or
sbb
adc
xor
test
dec
(bad)
(bad)
repz
(bad)
xchg
mov
inc
test
rol
cmp
into
dec
cmps
test
leave
ror
(bad)
cs
mov
push
adc
sbb
jp
mov
mov
add
sbb
idiv
jl
pop
add
rcl
ror
fsubr
jl
and
jp
add
cld
xor
sbb
icebp
(bad)
dec
or
popf
out
adc
mov
cmc
or
(bad)
div
xor
hlt
xchg
mov
push
rcl
inc
daa
mov
cwde
cs
mov
inc
dec
mov
jbe
repz
lea
fld
or
push
or
popf
scas
jo
dec
mov
scas
(bad)
cmp
sub
xchg
jno
int3
sar
fnstcw
jbe
and
mov
or
jl
jmp
(bad)
ja
sub
sti
(bad)
pop
loopne
add
push
add
sbb
add
(bad)
cmc
inc
cld
out
mov
aam
mov
sub
add
xchg
jl
pop
sar
sub
and
jae
neg
imul
scas
jns
les
push
pop
(bad)
jne
lods
cmovae
cwde
mov
pop
xor
cmp
jmp
push
mov
sti
popa
ror
mov
loopne
mov
xor
rcl
call
iret
popf
iret
push
or
repnz
rol
dec
aas
fwait
dec
push
mov
adc
pop
adc
sbb
add
les
cmc
xor
sbb
jp
in
addr16
inc
cmpxchg
addr16
cmps
cs
hlt
scas
lods
std
pop
cli
xor
adc
test
shr
mov
dec
dec
vcmpss
jmp
pop
daa
sbb
inc
sub
fcom
outs
push
hlt
and
fimul
outs
(bad)
push
jg
pop
in
in
push
mov
test
ret
out
and
outs
xchg
in
mov
or
sub
test
test
jp
out
lahf
add
out
aas
movs
pusha
jecxz
mov
adc
mov
jne
into
ins
pop
pop
lds
fiadd
xchg
lods
pop
and
es
fwait
sub
addr16
mov
nop
cmps
lahf
mov
sbb
inc
ss
push
push
sbb
mov
sub
lds
fld
ds
mov
inc
sbb
cs
jl
sahf
cli
mov
mov
(bad)
cmp
inc
mov
cdq
jmp
ss
mov
or
sbb
cmp
cdq
loopne
sub
push
inc
daa
jp
pop
dec
push
ja
scas
jl
push
loop
retf
adc
mov
stc
fldln2
imul
fwait
mov
arpl
jno
xor
out
ret
scas
into
pop
shl
and
mov
imul
push
dec
mov
loop
ss
hlt
dec
call
in
jnp
outs
lds
sahf
adc
cld
or
xlat
out
xor
push
bound
sbb
fs
icebp
fcmovbe
sub
inc
ss
or
les
inc
add
fbstp
and
fisttp
push
imul
fsubr
lea
scas
repnz
xchg
pop
sbb
mov
mov
and
leave
jne
popa
xchg
ins
into
jno
bound
and
xchg
pop
xor
stc
xchg
sub
daa
sbb
adc
shr
mov
inc
jl
pop
push
sub
jl
xchg
and
ss
pushf
push
into
push
loopne
(bad)
cmp
push
adc
xchg
jo
mov
pop
sahf
pop
cmp
sbb
inc
lds
movs
cmps
xchg
cmc
mov
lock
leave
bound
mov
sbb
pop
or
mov
xchg
pop
jmp
mov
or
jmp
push
rcr
cmc
adc
add
xor
stos
xchg
enter
push
sar
es
ins
ss
fld
dec
push
out
jmp
mov
int3
in
shr
daa
test
lahf
or
or
mov
outs
mov
jno
xor
ds
cmp
dec
jmp
push
xor
mov
xor
vaddss
outs
into
dec
cld
das
mov
push
push
loop
or
jmp
sbb
mov
(bad)
or
pop
mov
cmp
or
(bad)
enter
jle
pop
cs
mov
jl
js
dec
pop
push
loopne
mov
movs
sub
pop
rcl
mov
into
jae
mov
(bad)
in
pop
jge
es
int
cdq
mov
cmc
mov
outs
(bad)
rol
sub
sbb
jle
adc
push
xlat
jecxz
daa
cwde
adc
xchg
pop
xor
es
scas
out
and
or
(bad)
mov
out
mov
sub
mov
jecxz
std
test
imul
scas
push
(bad)
jmp
mov
sub
out
jg
xor
std
mov
jg
sub
sbb
and
sbb
xchg
pop
jo
ja
cwde
jo
dec
xlat
sub
inc
fild
inc
sub
jns
pop
sbb
fwait
mov
or
enter
mov
hlt
jae
aad
xchg
popf
ds
ror
push
les
xchg
sub
inc
xor
mov
mov
mov
add
sahf
js
repnz
xor
adc
ss
movq
popf
adc
dec
(bad)
pop
sub
dec
retf
cmps
jmp
out
int
adc
mov
cmp
in
sub
mov
lods
pop
repz
cmp
test
sub
xor
ins
cld
pop
test
sub
sbb
repz
mov
xor
cmps
pop
and
cmps
sbb
and
pop
icebp
fbstp
mov
cli
add
in
arpl
retf
inc
test
inc
aam
mov
in
mov
pop
out
scas
or
call
sub
mov
sub
rcl
sub
daa
sbb
gs
mov
pop
retf
and
cmc
stc
inc
push
xchg
lods
add
or
movs
push
sbb
push
inc
clc
adc
aam
add
xlat
cmp
test
mov
(bad)
push
sahf
sbb
leave
nop
outs
fwait
pusha
imul
mov
adc
aaa
(bad)
fcmovnu
shl
std
inc
cli
or
sub
mov
pop
(bad)
std
mov
pop
push
stos
jno
cld
in
push
lahf
dec
rcr
sbb
pop
das
fnstenv
mov
inc
jcxz
pusha
in
pushf
std
lods
pop
or
ins
hlt
repnz
add
shl
jp
push
aaa
call
inc
fdivr
je
test
(bad)
jmp
adc
fisttp
and
outs
outs
mov
out
imul
sub
fidiv
std
aad
xchg
adc
movs
fdivp
out
mov
icebp
xor
xchg
xchg
sbb
mov
fisubr
retf
jle
idiv
outs
xor
je
mov
mov
call
xchg
inc
sub
jp
fisub
leave
jns
mov
pop
lods
aaa
inc
adc
inc
shr
imul
out
(bad)
or
lds
pop
sub
cs
jns
enter
lods
test
in
cli
int
fidiv
jp
popf
or
add
shl
das
int3
ror
adc
fidiv
or
stos
mov
(bad)
adc
and
ds
pop
jmp
hlt
push
and
gs
movs
ret
rol
mov
mov
fdiv
sub
cmp
adc
mov
pop
aas
and
ins
fstp
pushf
inc
and
cmp
mov
(bad)
rcl
pushf
test
aas
retf
daa
mov
push
jecxz
inc
jge
fcomp
arpl
cmps
cmps
push
mov
jmp
sub
imul
inc
inc
sub
pop
cwde
in
push
mov
clc
xchg
(bad)
movs
push
add
call
jle
and
xor
add
hlt
add
fisub
push
adc
adc
jmp
psubb
push
pop
movs
push
(bad)
cmp
repz
jmp
shl
xchg
sub
mul
jg
sti
mov
ins
mov
jne
(bad)
loopne
stos
inc
outs
in
test
and
cmp
sbb
popf
dec
inc
xchg
fs
xchg
in
cs
add
adc
mov
push
std
fs
sahf
or
fs
push
pop
ror
adc
inc
div
fs
test
and
push
mov
and
movs
push
mov
cld
and
or
sub
dec
out
xchg
lock
cmp
out
ins
add
hlt
ins
mov
add
mov
push
aam
dec
mov
jae
and
jl
sub
popf
pop
data16
xor
jnp
daa
imul
enter
int3
dec
ins
scas
ins
sub
imul
push
sub
pop
mov
mov
pop
aaa
adc
push
cmp
cwde
ror
push
adc
call
jnp
popa
xlat
mov
lahf
ins
dec
movs
pop
gs
jmp
jnp
jmp
or
mov
xchg
xor
or
inc
inc
pop
cli
ds
pop
mov
and
sbb
loope
mov
dec
jmp
mul
push
pushf
pop
out
mov
and
push
test
scas
inc
mov
pop
(bad)
pop
icebp
cmps
pop
pop
ret
leave
mov
mov
add
cmp
push
test
out
push
mov
dec
ds
jae
aad
cvtps2pd
pop
sbb
imul
icebp
loope
inc
push
mov
xchg
in
call
xchg
fsub
mov
loopne
push
in
mov
in
adc
mov
add
(bad)
mov
inc
retf
cmp
xchg
imul
sti
jl
mov
inc
std
add
jae
lods
jp
shl
xlat
or
fld
mov
dec
add
test
dec
inc
mov
(bad)
fnop
jns
push
pop
push
mov
fsub
xor
fsubr
mov
mov
adc
mov
xchg
fild
outs
pop
jmp
jmp
cmps
xor
jo
push
fidiv
adc
xchg
xchg
lods
mov
mov
jne
sbb
mov
fcomp
and
pop
or
sbb
imul
cli
imul
je
xor
movs
hlt
fiadd
outs
sbb
call
dec
sbb
test
ss
push
lock
out
popa
movs
(bad)
rcr
mov
pop
pop
pop
in
lea
(bad)
mov
jb
or
fwait
inc
jo
ds
xchg
add
daa
das
outs
jge
cmp
out
sbb
(bad)
mov
(bad)
sub
mov
mov
mov
cmp
or
or
(bad)
cmp
sub
push
mov
xor
stos
mov
lock
das
dec
int3
jmp
scas
xor
jl
and
dec
sub
xor
lahf
sbb
or
jmp
push
xlat
gs
sub
adc
lock
pop
sbb
imul
xlat
jge
loopne
je
icebp
scas
fidiv
jecxz
les
mov
cdq
xchg
mov
stos
mov
pusha
mov
push
dec
lods
push
cmp
mov
lods
pop
popa
sti
sub
mov
mov
test
mov
ds
les
or
test
movs
dec
inc
or
xchg
or
mov
dec
add
xchg
scas
loopne
inc
or
jbe
push
cs
rcl
sahf
cmp
fwait
sar
inc
mov
hlt
mov
or
push
mov
xchg
(bad)
sbb
mov
xchg
les
cs
stos
in
push
push
mov
and
scas
test
xchg
jne
fild
scas
retf
sub
call
scas
fstp
xchg
fdivr
and
pop
push
jno
sti
test
stos
scas
or
add
push
and
aam
xchg
push
cmp
pop
test
xchg
fidiv
dec
push
adc
jmp
ret
xchg
cmp
jne
rol
push
jecxz
jg
mov
leave
xor
cmp
xor
std
sbb
ret
cmc
push
in
clc
into
fld
inc
sub
stos
push
jns
bound
iret
xchg
in
cli
dec
sub
aas
or
push
(bad)
sub
mov
stos
popf
into
(bad)
fcmove
cmps
jl
cmp
jg
mov
pop
add
push
xchg
xor
push
ret
inc
stc
in
jae
movs
jne
out
test
cmp
popf
or
(bad)
shr
fiadd
movs
cli
pop
sbb
push
scas
pop
in
push
mov
cwde
fcomp
adc
cmp
mov
(bad)
cli
loop
fcomp
call
mov
popf
push
or
imul
xor
dec
(bad)
and
xlat
sub
mov
dec
inc
mov
(bad)
js
fwait
in
ror
repz
dec
or
enter
add
test
outs
pop
call
out
stos
scas
sahf
out
inc
push
rcr
je
push
cmp
jge
and
xbegin
pop
shl
add
dec
test
fiadd
sub
pop
inc
xchg
ins
stos
and
jmp
cli
push
sbb
cdq
das
push
inc
arpl
aam
sub
add
or
pop
iret
cmps
outs
push
iret
cmps
pop
and
sbb
xor
repnz
xchg
(bad)
push
sub
outs
data16
idiv
fcomp
jnp
fisub
dec
jle
das
sar
xchg
ja
adc
cwde
sub
mov
dec
xchg
cs
sbb
jb
shr
retf
sbb
push
sar
js
fiadd
cli
test
test
cmp
addr16
mov
in
mov
std
push
xor
mov
outs
jmp
ins
mov
add
fst
ins
out
and
and
push
jmp
ja
jo
mov
or
dec
in
dec
push
mov
jmp
push
bnd
pushf
jecxz
enter
push
xor
into
int3
imul
test
push
inc
push
xor
dec
and
sub
mov
sbb
loope
ret
push
pop
cmp
and
pop
sbb
cmp
mov
(bad)
push
pop
pop
cmp
mov
sub
xchg
das
and
add
bound
out
xor
outs
mov
and
push
test
call
imul
repz
dec
das
inc
shr
push
cld
cmps
add
inc
inc
dec
cmp
adc
dec
mov
loop
jle
cld
mov
add
cmc
xor
inc
xchg
jmp
sub
popf
test
retf
push
test
pop
add
scas
sub
jmp
retf
iret
push
bound
xlat
(bad)
sbb
std
out
xchg
cmps
lea
pop
mov
jne
xor
addr16
jg
add
add
sbb
call
call
push
push
adc
movs
out
call
or
adc
jnp
sbb
rol
shl
mov
imul
xor
test
xchg
cmp
scas
fdivrp
pop
jmp
sbb
rol
pusha
add
out
and
idiv
lods
jl
adc
js
lea
mov
mov
enter
xor
aad
loop
mov
dec
and
mov
out
mov
cld
dec
cli
xchg
inc
ins
xor
or
repz
mov
mov
repz
adc
jno
adc
dec
add
jg
inc
clc
(bad)
enter
xchg
jle
sub
sub
outs
mov
das
leave
mov
mov
pop
xchg
bound
xchg
out
jbe
pop
je
push
fdiv
lods
sbb
jmp
fcom
sbb
add
lahf
mov
inc
mov
push
xchg
push
scas
out
sub
adc
mov
inc
repz
or
push
(bad)
fcomp
movs
xchg
jns
mov
pop
jecxz
push
jno
aas
gs
pop
dec
push
adc
bound
fist
sub
mov
dec
jmp
jmp
in
ja
and
dec
sbb
ret
sub
test
xor
mov
inc
push
and
jge
pop
pop
cmp
mov
fistp
jns
test
(bad)
xchg
sbb
mov
fadd
(bad)
test
cdq
rol
pushf
push
mov
push
adc
in
push
dec
sub
jae
xchg
cmp
call
movs
add
jnp
dec
fist
inc
mov
pop
movs
mov
and
in
mov
cdq
loop
js
xchg
mov
movs
pop
ror
lods
jecxz
push
gs
inc
cmovge
pop
retf
xor
aad
cwde
add
push
popa
pmullw
adc
jl
rol
adc
add
jl
loop
mov
aas
test
stos
pop
cmp
out
jmp
pusha
add
mov
shl
mov
pop
out
int
xor
fs
int
pop
and
lahf
add
dec
movups
gs
cwde
add
ret
pop
mov
xchg
pushf
mov
mov
jecxz
rol
scas
inc
jp
and
sbb
and
add
call
cmc
dec
aaa
aad
sub
pop
in
and
leave
adc
enter
and
cmp
(bad)
mov
cmp
lock
sbb
adc
arpl
sub
test
repz
cdq
mov
out
ret
push
call
jg
pop
call
mov
rol
retf
bndstx
xlat
xor
cwde
sub
dec
adc
call
mov
in
cmps
cmp
aad
nop
repz
mov
int
push
loope
cs
mov
adc
test
shr
ret
in
pop
shl
sub
inc
pusha
dec
mov
in
add
mov
(bad)
iret
mov
mov
mov
add
fist
out
(bad)
push
mov
xor
iret
cmps
xchg
fisttp
bnd
daa
jl
mov
mov
cmps
cmp
movs
fwait
jno
mov
test
gs
sub
xlat
inc
jecxz
push
pushf
ja
xor
and
sbb
stos
xlat
aaa
call
loope
fld
repz
mov
jl
sub
(bad)
pop
mov
mov
push
and
dec
xor
and
add
ror
test
mov
cmc
dec
lea
push
mov
mov
jp
sbb
call
pop
mov
aas
xchg
mov
(bad)
imul
pop
(bad)
jns
pop
int3
mov
(bad)
loope
cmp
dec
push
outs
popa
mov
addr16
mov
jne
and
lods
xchg
aaa
mov
sub
push
shl
bnd
push
jmp
inc
mov
push
nop
inc
test
and
sub
mov
movs
dec
jne
(bad)
das
ins
add
imul
mov
outs
fadd
jge
push
or
or
pop
outs
or
and
loope
sbb
fisub
int3
mov
ret
hlt
dec
clc
std
and
pop
fild
push
or
inc
(bad)
out
push
adc
xchg
std
add
repnz
movs
mov
jp
leave
adc
xchg
push
mov
mov
rcl
je
in
pop
cmp
mov
dec
hlt
add
in
sbb
cli
imul
dec
movs
sahf
not
(bad)
inc
sti
push
mov
mov
adc
xchg
scas
aam
sbb
mov
or
call
inc
mov
or
shl
std
or
or
and
mov
push
jge
dec
cld
cmp
aad
and
mov
test
inc
fistp
stc
ror
or
mov
jle
cmp
popa
ret
out
mov
mov
(bad)
icebp
sbb
retf
inc
mov
push
call
(bad)
icebp
test
xchg
inc
push
push
and
inc
aaa
popa
xor
popf
or
std
sbb
in
cmc
neg
mov
addr16
pop
cmp
add
pop
test
dec
pop
nop
inc
aaa
and
pop
xchg
movs
fdivr
(bad)
add
jecxz
cld
mov
dec
ss
fisub
xchg
cwde
repz
sub
mov
call
leave
xor
cmp
pop
pop
cmp
adc
lds
jg
jp
mov
jmp
jo
adc
xlat
pop
xchg
mov
cmp
xor
inc
jg
dec
(bad)
fidivr
(bad)
int
add
push
push
inc
ficomp
shl
mov
pop
cli
add
ds
and
dec
lods
or
or
mov
sub
gs
je
push
inc
jmp
jno
pushf
xchg
jo
inc
fnstenv
fwait
movs
outs
push
in
jns
fstp
shr
(bad)
mov
rol
mov
test
lea
add
sbb
jo
or
xchg
ds
leave
stos
push
inc
(bad)
into
xor
jmp
js
dec
(bad)
add
dec
fsubrp
cmc
sbb
gs
into
add
mov
aam
pop
mov
and
in
std
cmp
pop
stos
add
mov
lock
movs
daa
(bad)
mov
fist
push
repnz
jo
add
inc
push
aad
out
xchg
push
jl
ret
jle
test
imul
adc
adc
pop
es
retf
movs
inc
hlt
sub
sar
loopne
ss
in
call
pusha
imul
bound
pop
lds
mov
dec
fild
pop
push
xchg
adc
repnz
add
pop
and
arpl
mov
mov
or
lds
loope
dec
aas
mov
pop
fild
cmp
xchg
inc
sti
push
mov
sti
mov
ds
dec
cmp
mov
sub
loope
cli
jmp
xor
xor
xlat
hlt
fisubr
stos
adc
scas
cli
pop
ret
(bad)
int3
test
or
cmp
loope
push
cmp
cli
adc
enter
sbb
scas
les
shr
adc
lds
fwait
cmp
gs
cli
pop
(bad)
in
mov
popf
jno
and
jb
pusha
cli
or
out
push
push
sahf
or
and
xor
mov
push
leave
mov
cmp
jnp
fidivr
mov
sbb
mov
fiadd
ins
mov
xchg
push
xor
call
hlt
cld
idiv
or
mov
dec
sti
or
out
mov
mov
into
and
push
rcr
into
jmp
or
adc
mov
out
loopne
and
adc
jmp
icebp
sti
ins
icebp
inc
retf
rcl
(bad)
jns
xor
fdiv
(bad)
test
fnstenv
mov
outs
xor
jle
pop
adc
jmp
into
mov
dec
out
(bad)
in
clc
jb
inc
pop
imul
push
shr
sub
mov
mov
pop
pusha
cmc
mov
pop
addr16
adc
ds
enter
rcr
(bad)
push
dec
inc
xchg
popf
pop
fsub
jae
mov
cdq
push
test
pop
push
test
sbb
jmp
je
fucomip
test
in
scas
or
adc
cmp
movs
inc
int
adc
cmps
(bad)
fisub
(bad)
outs
push
lock
(bad)
sub
dec
add
or
sar
ret
xchg
ds
jp
inc
inc
loope
inc
and
cmp
cwde
movs
add
cli
aaa
(bad)
cdq
inc
cmp
fst
jae
ret
dec
leave
xchg
xchg
ja
nop
fldln2
mov
adc
ss
push
test
add
pop
fadd
mov
mov
pop
xchg
fs
js
and
push
lods
(bad)
mov
sbb
cwde
sbb
push
imul
cmp
and
jmp
out
jecxz
(bad)
(bad)
outs
jp
mov
ret
aam
inc
adc
or
and
xchg
retf
or
sbb
nop
stc
or
imul
cmp
push
lahf
xchg
or
not
adc
inc
mov
hlt
jo
out
mov
inc
fbstp
stos
adc
mov
arpl
ret
push
sbb
ds
dec
or
xlat
push
sti
out
or
mov
das
leave
mov
mov
retf
dec
sub
xchg
sub
jno
pusha
das
xchg
in
adc
jle
or
mov
inc
push
xor
aas
push
fs
jae
(bad)
ins
or
cmp
aas
(bad)
outs
sar
jmp
shr
pop
not
iret
addr16
prefetchw
loopne
repnz
cmp
mov
push
int
js
punpcklwd
jl
mov
js
jo
sbb
add
add
xchg
outs
jmp
pop
shl
sahf
jecxz
xor
add
dec
out
jge
push
nop
idiv
in
push
and
sub
out
pop
sbb
add
adc
jno
and
and
cmps
inc
push
add
sub
sub
mov
cmps
inc
lea
pop
sub
add
ins
cmc
cld
fsubr
stc
adc
cmp
jp
inc
in
cmps
fbld
jmp
pusha
cdq
sub
mov
ds
aas
inc
std
jp
and
xor
inc
sub
repnz
in
in
jne
push
scas
(bad)
cld
and
mov
sbb
retf
sub
div
pop
mov
or
adc
shl
ins
adc
push
pop
ror
mov
pop
(bad)
mov
xchg
or
sub
pop
add
arpl
fucomi
inc
and
fs
mov
mov
retf
nop
add
(bad)
fild
mov
cmp
pop
popa
push
enter
pop
xchg
add
push
stos
pop
mov
cwde
add
movs
fidiv
in
push
test
mov
(bad)
stos
jp
sbb
push
fistp
call
std
dec
inc
dec
in
cli
pop
inc
rcr
cmc
dec
ret
pop
add
out
daa
mov
adc
sub
push
stos
and
pop
lods
jmp
pop
inc
in
mov
lods
inc
sahf
mov
jnp
push
push
mov
movs
mov
cmc
(bad)
iret
mov
clc
imul
fsubrp
popa
push
sahf
xchg
call
clc
popa
xor
ret
pop
pop
sbb
mov
test
sar
dec
loop
(bad)
jle
push
and
dec
cmps
call
and
scas
cmc
(bad)
mov
and
int3
push
xchg
and
enter
movs
sub
out
jns
dec
mov
test
sub
pop
jle
xor
jp
out
mov
fiadd
jb
add
into
aad
mov
push
pop
add
adc
shl
(bad)
fiadd
lds
mov
push
imul
jg
xchg
loop
jp
stc
in
sbb
adc
mov
les
mov
or
and
push
lock
int3
push
mov
push
push
dec
fisttp
inc
out
imul
cmp
jmp
movs
jecxz
mov
add
adc
push
stos
lock
lahf
jge
and
out
ret
mov
adc
add
add
sub
push
(bad)
jp
cmc
or
out
fwait
test
push
pop
test
(bad)
loopne
jecxz
add
fcmovbe
(bad)
stos
outs
pop
ror
inc
push
mov
aam
adc
pushf
sti
cmp
sar
xor
aad
mov
ds
scas
push
clc
or
imul
sub
cwde
std
out
outs
jecxz
imul
mov
imul
pop
push
jl
ja
sbb
xchg
scas
adc
cmp
inc
outs
fistp
xor
int
aam
call
dec
fwait
sub
mov
aad
rol
pop
xchg
mov
popa
into
jecxz
cmps
mov
jb
in
mov
inc
xchg
sti
(bad)
or
(bad)
(bad)
in
inc
stos
scas
mov
repz
ins
jmp
dec
enter
iret
sbb
cld
sbb
cwde
or
cdq
ja
in
jae
test
pop
fcomi
push
jns
sbb
bound
xchg
movs
cmp
gs
pushf
mov
fsubrp
mov
aas
xor
inc
nop
sar
pop
nop
rcr
adc
inc
stos
hlt
movs
fadd
cmp
pop
add
ret
sub
outs
jg
pop
nop
and
sbb
clc
iret
push
push
in
add
clc
and
inc
mov
adc
mov
movs
sar
pop
in
lahf
mov
dec
gs
push
std
inc
sub
jecxz
and
jno
outs
cli
fwait
(bad)
mov
jns
mov
jl
fistp
shl
das
mov
sub
int3
shr
stos
sti
pop
sub
xor
cs
cmps
js
(bad)
repnz
mov
std
out
sbb
psubsw
jns
jae
mov
sbb
dec
call
inc
mov
int
mov
push
mov
add
xchg
adc
(bad)
cs
ret
adc
ins
fnclex
adc
sbb
mov
(bad)
jmp
xchg
mov
sub
mov
fdiv
fwait
push
cmps
ret
sub
jns
push
inc
and
mov
pop
adc
adc
adc
add
call
sbb
push
dec
push
into
cmp
jb
inc
stc
cmp
add
sbb
das
lods
push
lock
mov
inc
loop
into
or
sbb
push
xor
xchg
jmp
push
sti
cmp
jp
mov
fsubr
fs
fbld
mov
mov
mov
mov
mov
dec
bound
repnz
push
push
out
into
pop
jne
lock
sar
inc
stos
jnp
jb
fmulp
leave
mov
sub
out
mov
fmul
and
jl
out
call
icebp
sub
in
and
nop
mov
xchg
lea
pop
movs
cmp
mov
inc
sar
jmp
mov
and
add
and
call
mov
mov
mov
test
push
movs
mov
adc
sub
ror
pop
xor
jg
sar
xor
mov
je
shl
hlt
or
rcr
test
pop
cli
mov
je
and
adc
pop
aam
push
outs
jne
mov
inc
inc
xchg
ja
movs
push
pushf
and
and
push
rol
and
test
push
inc
call
out
test
pop
cmp
jae
fld
xchg
es
push
outs
cmps
add
pop
rcr
or
mov
pop
or
mov
push
push
mov
mov
or
sbb
pop
in
lods
test
jle
imul
and
push
sbb
mov
mov
pop
dec
dec
pop
add
lock
clc
mov
scas
mov
adc
std
clc
mov
ja
sbb
cmp
fisttp
setae
les
push
push
and
cmp
jb
push
out
mov
and
pusha
xor
mov
mov
ror
mov
cs
xchg
aad
aam
sbb
(bad)
mov
aam
adc
push
fdivrp
mov
imul
sti
dec
lods
loop
sahf
hlt
inc
lea
inc
out
xchg
repnz
jnp
dec
mov
jp
dec
fwait
repz
cmp
and
stos
dec
mov
test
xchg
mov
mov
rcl
pop
aam
adc
mov
test
pop
pop
jae
sbb
sahf
mov
adc
or
movs
sbb
lock
xor
daa
xor
stos
xor
push
dec
push
jecxz
stc
push
adc
sbb
pop
les
in
arpl
lea
inc
test
jmp
aaa
cmp
mov
iret
add
xor
adc
lods
cmp
adc
(bad)
leave
sahf
inc
dec
fs
add
les
push
lock
xchg
aam
dec
sbb
xor
jbe
and
aam
mov
adc
hlt
push
dec
pop
ja
and
ins
test
mov
and
ror
or
mov
xlat
dec
mov
jnp
outs
or
imul
pop
adc
fwait
leave
push
xchg
mov
push
pop
clc
pusha
or
retf
jg
mov
cmp
xchg
call
pop
(bad)
sahf
fidiv
mov
mov
dec
cmc
fst
daa
add
mov
outs
mov
into
jmp
scas
sti
cwde
imul
stos
dec
mov
lds
xor
xchg
imul
push
push
pusha
mov
dec
ficom
rcl
dec
jb
jge
inc
mov
add
int3
xchg
cmp
loop
xor
sub
dec
int3
ss
ror
or
aam
(bad)
mov
pop
mov
js
push
jl
jbe
sar
movs
xchg
xchg
dec
mov
out
daa
loope
sub
sbb
xor
clc
(bad)
mov
add
mov
and
adc
fwait
lock
mov
push
mov
fwait
xor
sbb
mov
pop
or
cmp
aaa
sbb
fidivr
imul
cs
out
push
jae
dec
xchg
scas
mov
mov
sti
push
mov
cmp
cmp
cdq
repnz
gs
ficomp
mov
(bad)
ins
rcl
test
cmp
mov
push
shr
cmp
jnp
dec
jmp
ins
push
dec
cmc
mov
test
jo
cmps
jae
nop
fld
jo
jl
mov
int
arpl
stos
shl
repz
fadd
jle
out
call
lds
mov
mov
sbb
xor
xchg
addr16
push
mov
cmp
push
adc
scas
mov
mov
cmp
into
xor
sub
sbb
out
adc
mov
fidivr
cmp
push
fbld
das
or
ins
mov
rcr
xor
dec
and
daa
mov
or
adc
shl
lock
es
les
leave
xchg
js
inc
movs
push
call
fs
ss
fist
lock
jae
repz
dec
sti
push
in
div
int
xchg
or
jle
jmp
sub
mov
jp
fwait
cmc
jne
cdq
popf
dec
test
out
mov
xchg
push
ja
sbb
inc
fwait
(bad)
fidivr
outs
and
fsubr
inc
ret
pop
retf
dec
xchg
cdq
pop
xchg
xchg
pop
fs
sub
adc
mov
test
std
dec
pop
and
push
movs
stc
or
lea
adc
adc
mov
es
jo
pop
dec
jns
out
(bad)
dec
nop
out
cwde
and
aas
loopne
mov
rcr
pop
adc
aaa
shr
or
push
(bad)
xchg
pop
add
mov
or
iret
ins
push
or
xor
xchg
xchg
add
fild
mov
ds
cmps
dec
pop
mov
cmps
push
outs
inc
aas
das
xchg
dec
lea
mov
pop
pop
retf
add
push
inc
jp
(bad)
test
or
cmps
dec
cmps
pop
fcom
mov
call
movs
jnp
or
add
xor
add
rcl
add
lock
jo
mov
cmp
push
pop
or
rep
fwait
hlt
shr
mov
mov
(bad)
jns
pop
movlps
xor
das
jo
lahf
jo
std
xor
iret
test
jge
cmp
stos
and
or
clc
add
jns
sub
call
rcr
out
pushf
add
sti
jg
out
sub
fwait
or
push
in
imul
inc
in
xlat
cmp
push
mov
pop
popf
cwde
call
repz
test
mov
(bad)
or
cmp
mov
movs
scas
jp
dec
stos
sbb
stos
jmp
adc
pop
nop
icebp
xor
clc
fwait
popa
shr
sub
jp
push
shl
fs
cmp
mov
or
ficom
into
ins
je
add
or
dec
jl
mov
mov
not
sti
lods
clc
js
pusha
movlps
clc
mov
cmp
jp
adc
sbb
(bad)
pop
lods
lods
and
jb
xor
lahf
push
retf
sahf
xchg
mov
repnz
mov
ret
and
dec
ret
loop
cld
out
xor
pushf
stos
xor
jae
xor
inc
sub
into
stos
jl
fneni(8087
mov
lods
jl
mov
lods
test
retf
mov
scas
and
or
mov
ins
push
xchg
jle
jnp
js
aaa
push
sar
xchg
push
push
mov
dec
xchg
cmp
push
gs
and
out
jo
or
out
int3
dec
sub
iret
movs
mov
lahf
inc
cli
in
test
mov
xchg
and
test
jmp
sub
data16
fwait
sub
lahf
sar
mov
jl
clc
xchg
pop
(bad)
cwde
pop
sti
fldenv
or
lods
pop
hlt
cld
ret
jns
xchg
mov
into
dec
xor
push
pop
inc
push
outs
sar
cmp
mov
or
in
sbb
xchg
push
cmp
(bad)
into
sbb
mov
fbstp
loop
sub
mov
stos
in
push
cmp
or
mov
sub
stos
adc
cmp
icebp
jg
in
sub
ins
push
sub
cli
or
les
and
pop
adc
es
jle
pop
ja
inc
stos
outs
ss
inc
cs
sub
mov
adc
jle
scas
fist
push
mov
call
push
inc
mov
mov
out
lea
inc
out
jmp
push
cmc
push
aam
fs
sbb
push
jbe
scas
cmp
movs
(bad)
mov
fstp
aad
repnz
dec
mov
frstor
test
int3
mov
jae
fnsave
mov
sbb
jb
push
repnz
test
cld
es
aas
movs
mov
sbb
dec
ds
hlt
mov
sub
out
pop
cmps
loopne
adc
mov
xchg
lahf
stc
push
mov
fbld
ins
std
(bad)
out
sbb
movs
jge
push
lea
or
inc
cs
aas
arpl
(bad)
adc
and
jge
test
and
int
popf
cld
pop
fdivrp
aas
sub
popf
xchg
inc
jb
fist
nop
push
pop
or
and
xor
hlt
or
stos
or
jb
push
cmp
sbb
push
fld
mov
mov
aam
push
in
je
xor
add
inc
cmp
cmp
cmps
inc
sub
jbe
add
mov
xchg
or
sti
fsubr
sar
sub
xchg
cmp
cmp
(bad)
fdiv
in
rcr
pop
mov
push
shl
loop
faddp
mov
push
(bad)
cmp
(bad)
(bad)
retf
sub
or
adc
cmp
js
jl
cli
jae
gs
neg
cmps
sti
inc
add
xchg
out
sub
into
daa
fs
sti
and
sub
push
mov
jmp
sbb
adc
and
popa
dec
pop
cdq
jge
repz
in
stc
outs
adc
bound
mov
enter
push
jno
dec
les
inc
push
cmps
push
pop
push
dec
test
unpcklps
int
imul
sub
cmp
sub
pop
pop
ret
mov
dec
cli
hlt
mov
mov
icebp
sub
in
(bad)
arpl
sbb
pop
add
div
fld
sub
div
popf
fist
xor
dec
(bad)
jns
outs
adc
inc
pop
ret
js
and
lods
mov
lods
aaa
inc
cmp
inc
cmp
pop
(bad)
fimul
jecxz
aas
icebp
jne
jae
mov
loopne
mov
cld
test
enter
xchg
movs
xchg
out
mov
cmc
jae
or
mov
xor
cld
jne
sbb
cmp
data16
push
push
mov
enter
das
xchg
enter
ficomp
xor
movups
xchg
cvtpi2ps
sub
call
jg
call
jae
outs
sub
imul
pop
popf
push
popa
fisttp
aaa
retf
fsubr
clc
outs
adc
(bad)
aad
and
and
jge
or
ja
fisttp
outs
inc
cdq
sbb
add
jge
stos
outs
pop
cmp
inc
lds
xor
addr16
dec
mov
adc
dec
mov
or
xor
aas
jbe
push
sub
in
lahf
ss
out
cld
inc
and
inc
xor
rcr
jo
cmp
imul
inc
in
test
and
push
aad
push
test
mov
xor
cmp
cmc
and
mov
aam
pop
jge
push
push
jmp
(bad)
cmp
pop
(bad)
cs
movs
mov
adc
cmp
loope
ja
(bad)
arpl
sahf
mov
xchg
push
xchg
dec
cs
sbb
scas
push
sbb
pop
add
stc
in
mov
sahf
pop
int3
call
shl
or
ds
dec
mov
dec
adc
push
or
sub
iret
add
dec
cmp
scas
jno
movs
es
daa
and
cmps
in
lahf
popf
aas
fdivr
fnstenv
mov
xor
jmp
nop
fisttp
aas
lahf
push
outs
push
enter
stos
les
ret
sbb
test
adc
lods
push
aas
sub
mov
mov
sbb
dec
mov
mov
mov
jnp
xor
adc
outs
xchg
mov
xor
daa
pushf
sub
adc
xor
mov
fwait
jmp
mov
lock
jl
popa
mov
(bad)
bound
mov
dec
(bad)
test
popf
and
clc
xlat
mov
mov
and
(bad)
mov
xor
call
xchg
mov
and
dec
mov
popa
inc
xchg
repz
mov
lods
imul
cld
leave
test
jns
cmp
cmp
dec
pop
popa
js
mov
(bad)
loop
xchg
je
sbb
dec
bound
push
mov
or
(bad)
imul
rcl
mov
pop
sbb
cmp
fisttp
sub
push
pop
mov
add
jmp
out
fadd
push
jmp
sbb
push
fadd
jo
fsub
fbld
dec
je
push
cmp
sub
mov
(bad)
test
jae
push
cmp
inc
sub
mov
xchg
dec
pop
ret
push
iret
cdq
push
xchg
aas
mov
or
sbb
jno
xor
stos
out
jmp
scas
fiadd
mov
retf
push
adc
adc
and
sub
cli
and
test
(bad)
clc
jmp
push
add
enter
sbb
mov
mov
sub
cmps
jae
xchg
outs
call
fidivr
inc
imul
cmp
ins
push
mov
movs
add
mov
movs
out
xlat
cdq
inc
fidiv
cli
mov
jbe
xchg
sahf
das
pop
inc
mov
and
mov
not
inc
dec
lahf
in
inc
sbb
inc
mov
xchg
and
and
sub
mov
pop
xchg
mov
push
outs
enter
xor
call
dec
dec
ror
(bad)
not
push
stos
xor
je
jnp
push
dec
or
xchg
push
pop
lods
ins
or
mov
jecxz
mov
out
mov
(bad)
pop
lea
jp
xchg
les
fst
pop
sbb
(bad)
push
mov
inc
pop
sbb
std
clc
shr
lock
int3
daa
or
stc
lea
dec
xor
or
push
in
cmp
xor
scas
inc
pushf
xchg
nop
repnz
push
in
mov
add
adc
ins
rol
mov
jno
push
xchg
imul
repz
ret
lods
mov
mov
jne
cmp
pop
xchg
pop
std
mov
repnz
push
mov
pop
cmps
loop
jmp
call
dec
ins
std
call
ja
adc
popf
shl
popa
or
xchg
pushf
test
jle
add
or
(bad)
fsub
stos
int3
jle
xor
push
sti
in
popf
push
xor
ret
mov
jle
mov
movs
xchg
mov
mov
ins
mov
xor
in
jp
xor
popf
xor
loop
out
rol
int3
fstp
push
or
ror
imul
daa
xchg
ret
mov
adc
lods
cmps
push
fwait
lds
call
push
fucomp
jae
mov
pop
imul
lods
cmp
xchg
mov
cmp
inc
jecxz
xchg
idiv
sub
js
out
in
outs
mov
popa
fisub
std
cmp
xlat
lahf
add
push
jge
cmp
xor
adc
stos
icebp
cwde
or
mov
cdq
cmps
outs
rcl
jns
xor
cmp
lock
mov
fild
and
and
jns
mov
mov
cmp
ins
repz
cli
mov
xchg
repz
xchg
rol
lahf
mov
arpl
stos
inc
add
hlt
dec
retf
dec
mov
out
sbb
jge
cmps
test
sbb
push
xor
add
cmps
aad
rol
adc
and
ret
in
fwait
jecxz
cmps
rol
pusha
add
repz
mov
call
(bad)
mov
lods
int3
and
xlat
jnp
int3
jle
inc
(bad)
into
adc
das
xchg
stos
mov
sub
lods
popa
in
or
arpl
(bad)
dec
clc
mov
test
je
ret
aam
cmc
push
fnstenv
jno
std
adc
pop
or
ss
shl
movs
out
pop
ret
mov
and
packsswb
pop
out
and
call
adc
cs
addr16
sbb
mov
pop
pop
and
jns
sbb
dec
movs
jno
sub
push
daa
pop
frstor
add
nop
ret
cmp
into
in
xor
ins
rcr
adc
(bad)
fnstcw
pop
xor
mov
sar
retf
pop
lods
pusha
cld
fdiv
sub
xor
sub
cli
pop
mov
mov
push
loop
cmp
test
mov
loope
stos
sub
pop
push
jns
inc
outs
in
dec
xchg
mov
ins
js
or
call
inc
int3
pushf
sbb
adc
ja
outs
loopne
out
shr
xchg
sbb
icebp
or
add
cdq
sbb
jbe
ja
and
pop
sbb
out
cli
ss
aam
or
lea
dec
ficomp
mov
pop
in
or
mov
pop
cmp
mov
scas
int
xchg
xchg
or
enter
lods
int
and
ror
cmps
test
mov
xlat
ss
es
pop
lods
pop
dec
je
test
and
imul
mov
add
jmp
sahf
je
adc
cli
inc
adc
daa
enter
cli
dec
cli
cs
outs
add
adc
pop
mov
fadd
out
sbb
push
jo
dec
pop
inc
jmp
ja
cmp
(bad)
in
mov
mov
cmp
std
add
in
loope
daa
push
ret
inc
rol
push
gs
jo
jne
adc
pop
jmp
rcr
aas
mov
mov
mov
cmp
jge
arpl
stos
stc
cli
retf
cmp
imul
inc
call
jae
jb
xchg
repnz
les
test
sub
inc
rcl
das
dec
sti
lods
stos
xlat
(bad)
movs
mov
in
inc
stos
cli
pop
arpl
mov
adc
sub
rol
div
pop
xchg
sub
sar
and
or
std
sti
enter
ins
clc
out
mov
xor
pop
push
and
jbe
in
icebp
jmp
out
jle
in
xchg
sbb
out
adc
cmp
sub
jns
push
push
outs
mov
lea
mov
aad
out
cld
sub
jmp
dec
dec
sbb
loopne
adc
pop
mov
addr16
jae
lahf
dec
xchg
movs
mov
adc
sbb
sub
cmps
xchg
jbe
popf
adc
xchg
fs
add
xchg
adc
cmp
test
mov
imul
jne
inc
mov
pop
jmp
xchg
and
rcl
xchg
dec
dec
mov
pop
fidivr
outs
push
xor
mov
xchg
mov
dec
sbb
sti
or
push
mov
jnp
push
scas
mov
ins
xchg
iret
or
add
dec
push
fcmove
inc
push
movs
jle
mov
fs
(bad)
sbb
sbb
sti
xlat
sbb
sbb
mov
jbe
movs
push
sub
sbb
jle
mov
pop
shl
dec
inc
out
mov
jmp
xchg
mov
pop
pop
inc
add
es
push
pop
or
pop
sub
pop
lods
mov
xchg
xlat
pop
into
das
add
add
xlat
test
sub
cmc
cmp
mov
or
pop
fwait
cmc
cmps
retf
xor
(bad)
jmp
int
call
sbb
(bad)
pop
sti
pop
add
mov
test
inc
mov
gs
ins
scas
push
jg
dec
call
popa
and
mov
lea
jl
les
fnstsw
stos
lods
mov
inc
mov
inc
in
nop
adc
jmp
xor
aaa
das
jp
scas
xor
lock
dec
in
dec
pop
ror
push
jl
dec
retf
and
rol
arpl
sub
test
add
mov
in
adc
jne
outs
sub
outs
call
xor
jae
mov
loope
mov
add
pop
and
div
loope
dec
sti
(bad)
(bad)
(bad)
mov
aaa
sbb
mov
jb
xor
imul
icebp
mov
mov
mov
jbe
adc
gs
mov
fist
inc
jns
pop
inc
dec
iret
clc
pop
add
sti
pusha
vphaddbw
adc
data16
clc
or
ret
cdq
mov
mov
rol
(bad)
jp
in
pop
test
mov
mov
fld
or
push
icebp
loop
icebp
adc
jge
in
cmp
add
pop
sbb
or
lock
sub
in
loopne
in
add
iret
jl
test
addr16
or
inc
and
dec
dec
mov
mov
fild
pop
inc
gs
mov
dec
mov
cdq
out
bndldx
or
inc
dec
sub
or
jae
push
xor
ror
out
add
and
push
mov
or
or
cmc
inc
mov
test
adc
inc
cmp
sar
cmp
mov
cmp
xchg
adc
daa
cld
xchg
lock
iret
arpl
fidivr
imul
mov
xor
cmps
mov
iret
int3
pop
int
adc
jecxz
dec
call
cmp
jmp
in
je
fistp
dec
sub
js
gs
jae
retf
add
add
fstp
leave
cmp
add
mov
adc
and
bound
aad
adc
inc
xlat
fmul
shr
popf
and
add
push
retf
push
iret
out
sub
not
lods
fwait
sbb
call
aam
dec
and
pushf
cmp
cmp
mov
enter
xor
retf
ds
mov
lahf
and
mov
push
add
fwait
xlat
(bad)
(bad)
out
sub
in
sti
scas
mov
ins
cmp
es
push
inc
leave
or
jl
push
iret
xchg
dec
lds
fnstcw
jb
mov
mov
jb
dec
inc
push
sub
xchg
or
push
xchg
xlat
mov
jmp
das
jl
cmps
pop
imul
shr
pop
jecxz
movs
loopne
and
icebp
or
sub
gs
pop
inc
pop
pop
pop
or
jg
mov
shl
mov
not
loopne
(bad)
neg
xor
jnp
mov
shr
loopne
sub
adc
and
popa
fst
xor
mov
cmp
es
push
xor
call
movs
and
pop
jae
and
lods
hlt
cdq
pop
mov
xchg
adc
out
pop
lods
test
mov
ja
dec
push
inc
or
add
addr16
inc
xor
loopne
pop
mov
cwde
xchg
push
fucomi
pop
and
dec
es
mov
pushf
and
mov
cs
or
scas
jns
mov
pusha
adc
es
pop
(bad)
clc
into
mov
inc
into
inc
jmp
push
shr
aas
jl
loope
sub
add
mov
mov
pop
and
xlat
xlat
sbb
movs
jg
ja
fld
push
push
cli
or
adc
loope
mov
cmp
movs
jne
mov
xor
sub
or
sbb
mov
jo
test
mov
imul
and
jnp
dec
mov
cmc
push
jno
mov
retf
mov
pop
dec
pop
aaa
mov
(bad)
sub
mov
adc
aas
jge
sub
dec
xchg
cli
cmp
or
and
sbb
adc
lods
mov
xor
or
aad
inc
sub
ss
adc
call
sub
mov
loopne
push
cmps
cmp
push
lahf
dec
idiv
lock
sar
les
aad
fisttp
out
movs
or
cwde
repz
loope
jb
popa
sbb
stc
push
xor
imul
repnz
ficom
test
mov
push
(bad)
vmulss
ins
cdq
mov
push
imul
and
jg
sub
and
dec
xor
call
push
call
retf
pop
adc
jo
inc
jb
stc
ss
lahf
cld
mov
dec
and
xor
movs
(bad)
data16
sbb
aaa
mov
call
mov
add
call
loop
(bad)
push
sub
outs
je
jnp
pusha
mov
jnp
(bad)
idiv
jnp
leave
stos
sub
int3
jmp
or
mov
cmp
inc
push
inc
xchg
mov
iret
jecxz
push
gs
aad
mov
in
arpl
shl
jle
mov
cmp
or
sbb
dec
adc
ficom
pushf
sub
in
push
jo
hlt
push
cli
mov
adc
cmps
push
call
fsubr
ret
mov
inc
jns
test
rcr
stc
mov
inc
mov
(bad)
jp
cwde
jg
icebp
in
xor
aas
loope
adc
mov
add
out
pop
sbb
xor
inc
add
jnp
popa
retf
popf
sub
lea
and
test
and
ins
std
jmp
mov
mov
ret
sbb
xor
jg
xor
mov
and
inc
pop
push
call
add
out
rcl
ja
cmp
mov
mov
jno
jg
pop
xor
sbb
dec
sub
ret
jbe
daa
lods
call
ins
sbb
ficomp
pop
fucomi
not
mov
mov
or
push
sbb
sti
push
in
or
push
ja
(bad)
mov
loope
jge
mov
(bad)
sbb
sub
mov
adc
fwait
scas
inc
fsubr
in
(bad)
push
data16
xor
ds
in
jbe
fs
popa
mov
pop
test
pop
cli
jbe
mov
jne
sbb
xchg
scas
jp
cmp
sub
push
(bad)
xor
push
jns
adc
int
rol
enter
int
enter
retf
xchg
fnstcw
xor
(bad)
jle
mov
jle
sbb
xchg
scas
out
dec
adc
gs
lds
mov
arpl
dec
je
jg
sbb
mov
adc
xchg
or
xor
pop
cmps
in
fs
adc
in
or
(bad)
mov
(bad)
or
jge
jle
sub
outs
cmp
add
inc
xchg
xor
cdq
xchg
push
imul
mov
(bad)
into
fsub
inc
push
jne
sub
call
test
push
xchg
adc
fcmovb
gs
ss
xchg
or
xchg
sbb
mov
jp
popf
add
sbb
call
arpl
mov
dec
es
das
cli
js
test
ins
test
push
mov
pop
inc
mov
add
(bad)
adc
add
push
(bad)
arpl
in
int
ret
leave
shl
stos
in
int
movs
push
dec
repnz
in
in
jae
dec
pusha
scas
mov
addr16
add
test
add
sahf
mov
cmps
and
call
or
jnp
fidivr
adc
adc
xor
inc
dec
mov
add
or
cwde
ret
and
rcr
pop
mov
xchg
and
mov
loop
or
sbb
push
jmp
add
jmp
(bad)
ffree
dec
enter
pop
hlt
mov
retf
sahf
pusha
fsubr
popa
pop
and
addr16
in
(bad)
xlat
sbb
jnp
push
xlat
mov
adc
xlat
neg
repnz
or
(bad)
dec
out
mov
daa
mov
fwait
sbb
fistp
mov
inc
dec
xor
adc
mov
in
adc
stos
sub
sbb
cmc
cdq
jo
jecxz
mov
pusha
test
ins
inc
inc
adc
movs
xchg
in
retf
push
pop
lods
pop
hlt
pop
repz
cmp
adc
inc
push
jae
mov
idiv
jmp
jge
test
aaa
(bad)
out
in
inc
adc
shl
xchg
sub
sub
xchg
std
dec
imul
add
test
cmp
sar
mov
dec
jns
fidivr
cmp
std
hlt
cmp
jb
das
ficomp
pusha
cmp
sub
push
jmp
lods
ret
mov
push
dec
or
adc
call
clc
fstp
fimul
sbb
(bad)
fsub
and
call
cmp
jns
test
std
pop
in
cmp
mov
or
or
aaa
add
push
dec
xchg
mov
push
hlt
(bad)
mov
pop
or
xchg
dec
retf
push
shl
xchg
inc
in
dec
fst
push
shr
idiv
xor
xchg
in
inc
sar
push
push
std
stos
mov
das
jnp
mov
mov
idiv
loope
sub
or
sub
cmp
pop
or
rcl
iret
adc
xchg
dec
ret
jecxz
test
mov
mov
adc
mov
adc
inc
mov
add
jecxz
lea
xor
sti
jmp
xchg
jmp
sub
xchg
jnp
movs
lahf
cmps
cmp
stos
xchg
sub
xchg
stc
das
lock
retf
xlat
push
ja
mov
movs
mov
pop
ret
movs
xchg
lahf
fwait
pop
mov
cmp
jecxz
mov
cmp
lods
test
xchg
mov
iret
push
jg
hlt
hlt
or
stos
sub
movs
rcl
push
gs
(bad)
xor
fwait
mov
sbb
mov
sub
in
mov
outs
movs
adc
mov
lods
jbe
ss
add
jg
add
cmp
aas
xor
dec
movs
stc
pusha
push
cs
cmp
push
cld
or
inc
fldenv
cmc
or
loopne
xchg
dec
cmps
pop
loop
mov
dec
push
cs
dec
loop
cmp
and
sub
push
ret
test
ins
push
repz
jp
dec
(bad)
cmp
inc
dec
xor
cli
cmp
add
mov
clc
add
mov
mov
pop
pop
sub
int
ret
sub
sub
or
sbb
out
shl
xchg
sub
daa
sbb
xor
popf
nop
lds
mov
or
cmp
sub
add
and
xchg
cmc
mov
add
call
das
and
jne
and
aad
daa
fnstcw
rol
cmps
xchg
ret
jl
and
add
loop
dec
xor
mov
add
rol
das
ret
cld
jbe
push
add
mov
push
sub
ins
(bad)
ja
push
ja
loope
les
mov
arpl
cmc
test
fldcw
inc
sti
movs
in
stos
outs
arpl
push
fidiv
jmp
xor
std
sub
or
xor
inc
xchg
xchg
dec
push
jp
call
outs
and
inc
mov
adc
stos
mov
and
repnz
add
pop
retf
mov
je
imul
xchg
mov
push
sbb
pxor
ret
stc
iret
aaa
into
jbe
jbe
adc
out
in
psubd
xchg
std
mov
adc
pushf
push
push
pop
mov
xchg
pop
dec
ret
mov
adc
sbb
jmp
stc
dec
push
jg
rcl
sahf
jge
xchg
push
in
daa
test
icebp
inc
fimul
sar
(bad)
fadd
repnz
mov
sub
sub
dec
test
mov
pop
jg
leave
and
adc
data16
push
test
jne
sub
in
dec
aad
fcomp
sbb
mov
xchg
inc
jmp
enter
push
sbb
dec
mov
neg
movs
or
pop
fisubr
mov
stos
stos
mov
pop
repz
sbb
pop
jecxz
add
jle
retf
jno
(bad)
xor
push
dec
jmp
mov
mov
mov
aaa
add
retf
mov
shl
les
jne
pop
jae
push
sub
mov
stos
mov
cdq
push
or
test
add
mov
call
js
add
aas
mov
adc
add
jp
(bad)
repnz
xchg
scas
jecxz
pcmpgtb
xchg
leave
pushf
mov
jge
scas
std
mov
imul
test
std
cli
pop
jge
es
cmp
mov
sti
cmp
xchg
mov
or
pop
test
mov
xlat
jne
stos
adc
iret
mov
in
arpl
push
sbb
inc
or
pop
fmul
pop
xlat
loop
jno
jne
lahf
cli
popa
popf
and
pop
movs
cmps
pop
xor
xor
(bad)
aam
movs
dec
lahf
mov
(bad)
or
mov
sbb
mov
sub
xor
sbb
push
fmul
std
pop
movaps
inc
xor
xor
je
push
and
(bad)
mov
cs
js
jns
push
lahf
sub
imul
jl
into
sub
retf
dec
sub
bound
pop
je
cmp
push
push
jne
cs
or
sbb
push
pop
fadd
sbb
sub
push
mov
call
add
mov
ins
test
(bad)
mov
adc
push
xchg
mov
movs
mov
xor
mov
xor
adc
outs
aam
xlat
rcl
in
xor
mov
cmp
nop
inc
outs
in
bound
pop
inc
adc
in
jmp
dec
ret
inc
cmp
ret
loop
adc
xor
push
out
mov
(bad)
and
xor
and
pop
inc
push
inc
ds
or
loopne
js
stc
add
sub
in
repz
jmp
dec
fldenv
out
daa
pop
ret
cmp
movs
scas
cmc
inc
mov
push
int3
imul
fisttp
jge
leave
pushf
cmp
or
mov
fnstenv
inc
lods
scas
(bad)
inc
xchg
xchg
adc
bnd
div
in
or
push
adc
jmp
sti
and
stos
das
xor
(bad)
xchg
dec
popf
adc
outs
iret
adc
xchg
inc
inc
jge
popf
dec
je
popa
fs
sbb
cmp
ja
mov
xor
lock
mov
jb
retf
dec
pop
outs
and
xlat
stc
add
jg
dec
jo
xchg
test
test
mov
mov
jno
pop
ds
xchg
arpl
(bad)
or
push
(bad)
xchg
mov
pop
ins
das
mov
sub
mov
mov
imul
les
dec
or
inc
dec
shr
pushf
test
pop
pop
push
enter
mov
fcom
sub
inc
iret
fsub
cwde
sub
cmp
dec
fsub
mov
js
pop
outs
call
test
and
fild
pop
push
mov
xlat
jle
cld
mov
out
xchg
lods
or
retf
pop
(bad)
in
sub
xchg
inc
ja
sbb
arpl
in
js
clc
sub
or
sbb
jns
ins
or
gs
xor
pop
adc
cs
adc
inc
leave
xchg
sub
jp
out
xchg
mov
(bad)
mov
in
nop
loop
push
fwait
xlat
mov
fdiv
adc
mov
pop
jp
mov
(bad)
push
push
popa
stc
(bad)
fwait
xor
push
cmp
mov
push
in
jns
rcl
jp
cmps
add
push
cmp
ins
mov
sub
inc
test
iret
shr
mov
sbb
inc
imul
sahf
retf
icebp
dec
stc
addr16
sub
sahf
add
sbb
mov
scas
push
jne
inc
mov
cmp
pop
xlat
push
sbb
sbb
(bad)
sub
ins
xor
xchg
in
pop
xchg
add
xlat
adc
sub
leave
inc
div
and
sahf
cmps
test
inc
or
sub
sub
xor
mov
jns
lods
cmps
xor
(bad)
aaa
jo
push
test
test
inc
push
das
call
adc
jmp
call
test
jno
test
inc
out
sbb
and
xchg
mov
dec
sti
pop
pop
and
xchg
add
sahf
mov
adc
xor
inc
mov
xchg
loop
mov
(bad)
test
retf
(bad)
retf
or
mov
push
fucom
hlt
sbb
jmp
push
or
inc
popf
adc
fmul
lods
jnp
ds
adc
nop
inc
adc
adc
cwde
xchg
enter
lds
mov
xlat
aaa
sub
or
or
sbb
gs
pop
jmp
icebp
nop
and
ret
add
and
std
inc
jno
inc
lahf
test
fs
fimul
(bad)
jns
mov
retf
jmp
xchg
lea
bound
mov
jae
dec
jne
jp
xchg
jle
mov
repz
mov
xchg
pusha
inc
ss
jmp
lods
sub
shr
mov
xchg
cmp
cmp
hlt
pop
mov
jo
inc
iret
and
pop
xor
add
add
mov
or
ja
push
fstp
add
vpsubsb
xor
in
xchg
sbb
shl
sub
(bad)
push
dec
mov
(bad)
push
jecxz
(bad)
xchg
pop
jae
out
retf
sub
call
cmp
or
and
adc
xchg
push
add
out
sahf
cdq
push
cmp
popf
test
adc
(bad)
loopne
mov
xchg
sti
sbb
push
add
push
or
fld
mov
rol
add
mov
jg
cdq
and
jmp
mov
pop
gs
add
fnstsw
cmp
sti
sbb
mov
add
retf
pop
ds
mov
data16
xor
sbb
leave
mov
retf
sbb
int3
or
adc
fs
xor
mov
(bad)
jmp
imul
sub
mov
pop
xor
push
mov
pop
dec
lods
push
out
mov
enter
out
retf
movs
pop
sub
mov
and
out
int3
cwde
pop
in
or
bound
inc
xchg
and
dec
mov
dec
pop
or
bound
sbb
xchg
aad
cmps
xlat
inc
push
iret
mov
xor
and
in
in
add
sahf
outs
jecxz
leave
ror
inc
cs
test
jbe
dec
dec
push
nop
jl
call
mov
and
sbb
sub
jg
gs
lea
pop
cmc
enter
inc
xchg
(bad)
lock
push
pop
stc
xchg
xor
sub
sbb
mov
mov
xchg
add
call
pop
int
add
pop
mov
(bad)
movs
push
mov
ror
das
(bad)
jg
sti
pop
sar
stc
das
inc
imul
push
scas
sub
fld
dec
push
int3
mov
test
xor
mov
lds
mov
and
or
loope
(bad)
push
sub
xchg
hlt
fisub
add
mov
jbe
pop
jg
adc
xchg
jbe
fcomp
adc
and
pop
mov
fsubr
inc
data16
stc
mov
js
arpl
(bad)
popa
sbb
or
dec
sbb
jg
mov
call
cmp
int3
or
call
jp
cwde
int
and
pop
jecxz
and
dec
cld
mul
jg
or
jns
stos
pop
mov
enter
mov
mov
pop
call
mov
int3
es
jno
out
cmc
rcr
les
mov
add
or
fsubr
adc
mov
xchg
push
sub
rcr
mov
bound
push
ret
out
stos
ficomp
jge
mov
sub
hlt
and
cmc
inc
(bad)
mov
cmp
idiv
sbb
cmps
push
arpl
add
aas
add
adc
push
icebp
cwde
in
add
sub
popa
sub
jbe
jmp
xor
add
mov
or
test
xlat
mov
mov
(bad)
inc
imul
inc
or
or
(bad)
add
call
stc
call
xlat
(bad)
adc
fcmovnu
in
icebp
sbb
mov
test
mov
rcr
sbb
and
push
mov
fsub
mov
sbb
(bad)
test
out
jmp
mov
mov
inc
clc
test
push
mov
ja
push
fcomp
inc
cmc
popa
jecxz
sbb
loope
rcr
fld
xchg
call
mov
jle
pop
repz
mov
jg
mov
dec
std
sub
aad
pop
sbb
add
mov
cld
and
or
pop
js
aad
pushf
ins
fcom
imul
push
mov
scas
ror
mov
jecxz
mov
movs
scas
lods
xor
dec
fs
adc
jmp
dec
inc
stos
and
sub
loope
push
in
call
xor
jmp
idiv
imul
cwde
fnsave
pop
neg
stc
rol
jnp
ds
hlt
push
test
ficom
shl
test
cmp
popf
pop
inc
mov
aad
adc
mov
mov
sar
loope
das
mov
ins
jmp
enter
out
lds
(bad)
pusha
je
inc
xor
ja
ss
cld
lea
retf
retf
or
add
push
xor
xor
dec
std
xor
xchg
fs
scas
push
mov
add
mov
das
mov
push
fistp
fs
lds
push
lea
cmp
and
(bad)
pop
xlat
xchg
popa
test
cmps
and
dec
pop
pop
add
xor
repnz
stc
fadd
je
test
xchg
leave
xchg
xchg
adc
neg
inc
imul
imul
sar
call
mov
jmp
or
xchg
xchg
or
push
mov
add
jge
or
xlat
ret
fiadd
fimul
inc
xor
mov
ja
adc
push
(bad)
xchg
out
bswap
fiadd
sub
jnp
shl
pop
jnp
pop
inc
jle
outs
mov
add
sbb
(bad)
in
in
xchg
or
lds
add
repz
jns
inc
xlat
add
out
jne
sbb
outs
ror
push
mov
test
push
jle
stos
stos
mov
push
push
push
imul
sbb
mov
sbb
shr
and
jne
xchg
or
xchg
mov
repz
push
(bad)
fiadd
inc
jl
jle
xchg
aaa
dec
test
jecxz
fld
std
call
dec
xor
rol
push
out
movs
cdq
inc
pop
leave
sub
mov
jle
mov
gs
std
test
cs
push
aas
psrld
pop
sub
push
push
stos
clc
or
out
outs
aaa
retf
cmp
and
call
iret
retf
mov
in
movs
icebp
jg
aaa
clc
and
jbe
ins
mov
dec
ss
pop
inc
xchg
jg
cmp
not
fs
xor
iret
adc
adc
mov
test
and
xchg
xchg
adc
mov
adc
xchg
push
sub
mov
mov
add
retf
ss
retf
jo
clc
xchg
dec
stos
lahf
aaa
shr
je
test
imul
mov
pop
leave
dec
inc
int
imul
jns
mov
sbb
xchg
ins
push
popa
dec
cmps
lds
inc
xor
ret
fstp
xchg
or
mov
dec
add
je
mov
out
mov
ins
fidiv
mov
add
sbb
jl
dec
mov
pop
or
not
sub
lahf
mov
sbb
mov
jo
cmc
retf
fs
out
adc
and
int
cmc
adc
inc
je
sbb
mov
jmp
and
mov
fwait
sbb
pop
sbb
xchg
shr
xor
inc
ins
repnz
inc
jo
je
pop
sti
sbb
fist
fld
mov
iret
ficom
xchg
fnsave
bound
cli
aas
and
daa
fsubr
shl
jecxz
jns
pushf
push
sbb
int
imul
add
sub
out
imul
inc
or
popa
mov
mov
xor
xor
in
mov
xlat
test
icebp
xchg
cmp
sbb
shl
iret
ror
jecxz
inc
adc
test
cmp
outs
repnz
pop
inc
pop
adc
push
mov
and
sbb
out
cmp
mov
shl
mov
loopne
add
popf
adc
in
rcr
adc
lock
daa
inc
jb
dec
popa
lock
fwait
pop
mov
ret
add
xchg
repnz
sbb
push
xchg
jae
scas
out
(bad)
xchg
push
sub
outs
icebp
jl
movs
mov
push
repnz
sub
dec
mov
pop
add
push
cld
push
xchg
mov
dec
fwait
jne
vpmovzxbq
rol
sbb
retf
push
cs
xlat
or
fwait
test
xor
scas
call
or
xchg
dec
popa
cmps
scas
push
mov
push
mov
jmp
cmp
xchg
test
enter
mov
lea
jo
xchg
mov
popa
jecxz
mov
movs
fcomp
lock
xchg
inc
add
or
dec
adc
test
out
sti
and
lds
adc
push
jae
test
xchg
sbb
ins
sub
xchg
lods
aam
pushf
ret
cs
in
popf
mov
sub
xor
adc
fs
(bad)
dec
jmp
jmp
jmp
out
cmp
fcomp
push
js
adc
sbb
push
dec
pop
retf
cmp
scas
bound
mov
ss
lds
sar
mov
sbb
sahf
mov
dec
jle
test
pop
cdq
mov
aas
mov
jne
arpl
xchg
inc
dec
out
sub
les
repnz
mov
sahf
jg
in
fldcw
test
je
xchg
mov
test
pusha
and
sbb
inc
int3
add
mov
jb
xor
cmp
adc
(bad)
popf
mov
adc
shl
jle
mov
push
je
arpl
mov
test
fisub
mov
xor
cdq
les
popa
stos
aad
inc
imul
mov
dec
aad
loopne
cmps
pop
aad
xor
pusha
jle
xor
das
inc
adc
repz
sub
or
out
imul
(bad)
int3
jmp
and
sbb
retf
scas
int3
jno
shl
mov
mov
xchg
sub
pop
ret
ins
add
mov
and
and
add
dec
aaa
(bad)
scas
cmp
pop
ins
lds
xor
(bad)
sbb
sbb
inc
movs
ins
xlat
jmp
push
repnz
cdq
pop
push
push
and
daa
xor
in
xor
outs
xchg
lock
jnp
ret
sbb
ds
xchg
call
and
lahf
(bad)
and
or
and
out
movs
pusha
push
xor
sub
pop
pop
div
cmp
sbb
dec
clc
mov
bound
mov
test
int
sbb
clc
fdivr
xor
mov
dec
mov
add
fwait
ds
xor
cmp
cld
aad
lds
adc
jo
xor
lds
iret
or
add
mov
clc
pop
jl
jno
pop
and
push
jne
push
push
adc
popa
repnz
push
fdiv
jo
sti
sti
lahf
dec
push
std
lods
mov
out
scas
(bad)
aas
push
lea
mul
fs
adc
add
les
xchg
clc
shl
mov
push
cmp
push
lods
ret
out
and
and
into
xchg
sbb
daa
imul
dec
or
js
fimul
jg
cmp
test
mov
neg
jmp
fistp
sub
xlat
out
mov
or
mov
movs
dec
frstor
in
(bad)
rcl
cmps
leave
cmc
test
cmps
mov
push
pushf
sbb
mov
pushf
sbb
in
int
cmps
(bad)
push
retf
cmc
les
adc
and
out
cmp
push
sbb
test
jb
cmc
ror
repz
dec
loopne
mov
(bad)
daa
mul
lock
xor
sbb
pop
adc
imul
imul
stos
mov
dec
xor
fdiv
add
cwde
fist
jmp
setle
hlt
call
push
or
lds
xchg
mul
or
or
std
imul
push
das
in
mov
adc
cmp
shr
test
push
repnz
dec
xlat
cs
push
mov
repz
cmp
sub
adc
fsub
aas
and
int3
jle
cmp
es
dec
mov
shr
inc
sbb
and
and
and
xchg
inc
jl
outs
mov
stos
addr16
mov
or
mov
adc
ja
jno
cdq
movs
popf
push
data16
mov
aas
cli
pop
mov
popf
jb
dec
mov
jg
push
pop
outs
jge
dec
addr16
adc
lea
ja
cmps
pushf
cli
sub
test
mov
mov
cmp
cmp
cli
arpl
push
(bad)
mov
add
dec
and
pop
test
jae
cmp
dec
or
mov
into
mov
pop
push
test
or
push
adc
lahf
mov
repz
xchg
neg
out
test
jo
mov
and
xchg
cmps
cmp
test
nop
push
sbb
js
inc
aaa
stc
pop
fiadd
stos
js
inc
inc
fcmovne
dec
stc
stos
icebp
or
fcom
(bad)
sbb
cmc
sbb
dec
in
call
push
cmp
pop
mov
jge
mov
lods
push
sar
adc
inc
fidivr
adc
mov
pop
pop
or
in
adc
push
out
aaa
jns
arpl
ins
jecxz
call
push
push
add
pop
or
push
sub
mov
mov
(bad)
xor
or
call
inc
mov
inc
daa
cmps
ret
mov
std
int3
cdq
mov
fwait
pop
add
ja
inc
cld
add
sbb
fbstp
rcr
(bad)
xor
jae
idiv
xor
leave
les
mov
jne
cld
(bad)
in
mov
fwait
and
pop
mov
mov
cs
jg
popa
push
aam
js
mov
enter
xor
adc
scas
ror
scas
aad
stc
std
fbstp
mov
test
cwde
mov
xor
in
dec
(bad)
(bad)
jbe
add
push
adc
or
inc
cmp
xchg
test
es
(bad)
dec
xor
mov
and
dec
dec
in
cmp
mov
addr16
cmp
retf
test
jl
or
xor
pop
mov
xlat
adc
mov
jl
int3
sti
cwde
pop
data16
and
push
push
in
mov
neg
push
and
ins
ret
xor
cmp
inc
clc
or
push
mov
push
fidivr
shl
push
lahf
jecxz
mov
mov
xlat
mov
mov
(bad)
cmp
push
fcmove
push
(bad)
push
das
sbb
mov
les
aas
push
push
jo
fidiv
xor
arpl
sub
les
sub
cld
xchg
movs
inc
xor
hlt
sub
sbb
jbe
nop
inc
das
lock
or
leave
into
dec
lds
mul
pop
scas
in
cli
jmp
jo
xchg
(bad)
ins
cmps
jnp
leave
mov
imul
mov
adc
lods
jl
aaa
xchg
pushf
lahf
imul
xchg
pop
movs
add
xor
cwde
fld
je
xor
mov
xchg
pop
inc
int
push
sahf
jmp
leave
mov
ret
sub
not
sti
xor
adc
stos
test
cdq
nop
inc
cmp
cmp
dec
rol
cdq
and
pushf
push
cmp
outs
mov
test
pop
js
push
(bad)
or
test
leave
mov
int
mov
cmp
push
call
sbb
jbe
dec
inc
hlt
test
pop
mov
jl
add
stc
ror
jbe
(bad)
sti
jge
aaa
cli
movs
inc
scas
mov
loopne
inc
sub
arpl
movs
jae
lods
mov
xchg
and
movs
fs
cmp
jnp
sbb
add
sub
sahf
ret
imul
add
ficomp
push
jge
xchg
js
dec
pusha
dec
adc
dec
cmps
adc
or
gs
imul
hlt
xchg
shr
sub
jp
cmp
cld
sub
clc
or
mov
lods
sbb
pop
cld
sub
daa
cmp
xchg
cmc
daa
mov
jecxz
adc
jle
xor
pop
sub
lock
mov
retf
jmp
sbb
cmps
jl
adc
repz
dec
repnz
jge
inc
fnstcw
lods
cmp
adc
pop
pop
out
xor
mov
repnz
pop
shl
jae
fisttp
(bad)
cli
aad
or
and
add
adc
mov
es
add
outs
push
std
jb
pusha
test
push
pop
cmp
je
loopne
jl
les
rcl
in
movs
fwait
adc
addr16
in
sub
xor
ror
(bad)
cmp
out
cmps
pop
das
and
add
scas
adc
std
fmul
inc
test
in
pop
jecxz
and
std
fild
test
lods
outs
movs
sbb
(bad)
mov
leave
push
shl
adc
int
retf
data16
xchg
gs
jge
cmp
out
sbb
mov
or
mov
pop
loop
and
xor
fdiv
call
dec
mov
inc
int3
sbb
add
fidiv
pop
cmc
das
mov
test
and
cdq
fadd
je
test
inc
cmp
pop
aam
add
xor
lea
mov
clc
lods
sub
into
adc
test
pop
xor
and
xchg
cmp
or
js
and
lahf
push
push
dec
enter
or
dec
mov
scas
cmp
push
cmp
cmp
inc
add
jecxz
scas
inc
pop
jp
cmp
jge
mov
pop
mov
pop
push
mov
mov
(bad)
pop
iret
stos
pop
in
jbe
call
sti
adc
or
ja
call
add
cmp
lods
cmp
imul
push
pop
xor
sub
push
ins
(bad)
mov
data16
mov
cdq
add
jmp
fdivr
sti
or
push
xor
shl
ficom
mov
sbb
popa
or
dec
outs
jl
mov
push
jne
sbb
pop
sub
push
inc
jecxz
mov
and
jge
cmp
or
push
test
(bad)
add
pop
mov
lea
dec
(bad)
xchg
sub
pop
gs
ror
fsubr
mov
add
xchg
je
ret
mov
add
mov
ins
or
cmp
outs
jnp
sub
xlat
jae
mov
sbb
stc
sbb
out
call
call
cmc
push
mov
jns
inc
mov
and
loop
test
and
iret
jmp
mov
or
popa
test
xchg
wrmsr
rcr
inc
xor
mov
test
cs
mov
gs
dec
ss
cmp
mov
rcr
arpl
cmp
ret
or
jnp
aaa
ins
push
xchg
mov
or
repz
iret
call
test
cdq
sar
mov
or
into
pop
inc
cmp
mov
xor
adc
and
push
xchg
stc
xor
ror
adc
jg
fwait
sar
lock
or
jne
mov
adc
mov
mov
push
cmps
mov
mov
dec
cmp
cld
out
nop
push
inc
imul
push
pop
pop
push
jno
popa
enter
fnstenv
sub
push
cmp
call
cmp
sbb
mov
test
xor
mov
shl
sbb
nop
push
mov
call
pusha
push
into
data16
xchg
and
int3
out
sub
call
sbb
fld
pop
or
dec
inc
mov
jge
and
test
fld
mov
mov
pop
sub
mov
xor
popa
sub
loope
xchg
movs
add
mov
test
mov
add
inc
dec
fbstp
and
mov
dec
inc
enter
scas
aad
add
mov
dec
mov
adc
outs
cmps
fdiv
in
clc
data16
adc
adc
rol
add
pop
pop
mov
sub
out
cwde
push
xor
popf
push
in
dec
adc
cmp
ror
iret
fild
in
call
adc
syscall
xor
int
fsubp
ss
arpl
mov
jmp
gs
dec
mov
leave
sub
mov
cmp
(bad)
leave
cmc
retf
or
movs
dec
test
mov
out
and
inc
test
ffreep
(bad)
and
pop
(bad)
jno
jp
add
push
dec
cmp
cmp
ds
fisttp
push
jnp
(bad)
cmp
add
sbb
lahf
ja
pop
inc
mov
push
sbb
pusha
cld
shl
(bad)
out
inc
test
mov
shl
and
dec
mov
ja
rol
or
loope
ss
pop
nop
pop
or
nop
retf
xchg
add
sub
fxch
cmps
imul
xor
jne
dec
rol
stc
outs
sub
inc
adc
sbb
push
int
(bad)
mov
inc
cmp
mov
add
add
lods
fst
mov
mov
(bad)
mov
inc
in
fnstsw
pop
cmp
cmp
inc
(bad)
adc
in
in
dec
cmp
lods
aad
sbb
add
adc
mov
mov
add
ds
(bad)
iret
cmps
xor
leave
test
dec
mov
mov
and
mov
outs
in
pop
aad
(bad)
aad
stc
and
mov
jg
or
ins
into
hlt
in
and
add
js
mov
mov
push
out
cld
inc
mov
repnz
xor
mov
jmp
test
mov
(bad)
fdivp
(bad)
fistp
mov
pop
out
out
std
pop
into
pop
fsubrp
popa
sbb
xor
fimul
add
out
rcr
xor
in
scas
ins
data16
mov
add
mov
in
inc
mov
mov
jmp
ss
dec
and
xchg
or
or
loopne
in
popf
mov
pop
fcomp
pop
sahf
mov
call
inc
add
(bad)
push
push
or
sti
mov
pop
and
in
sahf
and
or
jmp
sbb
jnp
icebp
sahf
stos
mov
mov
rep
mov
sbb
fistp
and
jbe
mov
mov
sar
push
xor
add
lods
adc
mov
fimul
stos
dec
jae
test
and
mov
into
adc
fcomp
lds
xor
mov
rcr
xchg
xchg
scas
outs
out
in
mov
inc
sbb
sbb
dec
ret
out
adc
sbb
outs
pusha
mov
out
dec
std
cwde
daa
jge
xor
sti
add
xchg
scas
mov
add
and
int3
mov
retf
gs
test
lea
jno
repz
push
rol
inc
cs
ins
popa
lods
das
cmp
jp
(bad)
in
mov
rcl
imul
pop
jo
hlt
sbb
fistp
sub
adc
ss
inc
test
jb
icebp
xor
mov
add
ret
in
xor
add
and
addr16
add
bound
icebp
lock
xchg
or
dec
pop
jl
lods
sbb
outs
into
test
add
jg
push
dec
inc
inc
cld
sar
stos
imul
ror
fnsave
mov
js
ins
ja
and
sbb
dec
cs
in
arpl
dec
call
mov
outs
outs
hlt
jbe
push
cli
iret
outs
xchg
add
sbb
movs
mov
ret
add
test
xor
jecxz
push
(bad)
sub
shl
cmp
cmp
dec
sahf
cmp
cmp
xchg
adc
shl
mov
popa
stos
add
xor
jno
xor
jecxz
lahf
iret
mov
jle
bound
mov
shl
and
cmc
xchg
out
inc
aam
add
jmp
fadd
or
mov
jmp
rol
call
add
mov
movs
jb
jmp
dec
fmul
inc
jnp
sar
ret
adc
lods
push
cmc
imul
in
shl
jo
ins
cmp
loop
xor
sub
push
daa
xchg
vpunpckhqdq
mov
adc
xchg
test
clc
sub
jo
xchg
or
xchg
jns
or
call
adc
scas
push
mov
add
pop
cld
push
push
test
sbb
pop
fsubr
stc
(bad)
dec
inc
adc
into
aad
retf
push
xor
das
out
jp
add
sbb
lds
inc
push
xchg
fidivr
mov
lea
inc
jmp
nop
cwde
bound
rol
cmps
shl
push
add
fwait
pop
aad
and
jo
scas
pop
xchg
ds
fs
adc
in
sub
(bad)
arpl
popf
inc
mov
imul
div
push
mov
addr16
rcr
push
pop
xchg
arpl
mov
fs
mov
mov
inc
push
adc
mov
mov
sub
jmp
mov
add
xchg
cmp
push
rcr
outs
inc
repnz
inc
jns
and
aam
mov
into
popf
push
sub
fs
pop
xchg
push
mov
int3
mov
std
add
mov
mov
add
dec
(bad)
sti
push
mov
