mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
inc
outs
jae
inc
push
sar
inc
nop
inc
or
add
mov
add
dec
outs
je
addr16
sub
shl
data16
add
jns
test
push
outs
jb
adc
cwde
daa
or
imul
lahf
scas
(bad)
call
xor
mov
push
mov
int3
mov
or
xchg
enter
jl
mov
je
mov
add
push
or
push
imul
xor
or
(bad)
pop
xchg
es
mov
or
push
popa
push
popa
out
push
xor
or
mov
cwde
push
add
or
xor
mov
sub
and
call
pusha
cmp
jns
pop
push
dec
bound
arpl
pop
sbb
ret
scas
fld
push
jns
mov
and
or
pop
icebp
sbb
arpl
add
pop
(bad)
out
loope
inc
add
imul
fldz
arpl
sbb
add
add
mov
or
add
jmp
adc
xlat
jle
int3
and
sub
xor
in
inc
cs
push
dec
push
add
je
aas
adc
adc
dec
mov
adc
and
jle
xor
adc
push
outs
fmul
pop
xor
mov
fwait
ins
push
or
add
push
inc
popa
push
imul
jmp
push
jo
push
fs
loopne
pop
pop
daa
daa
daa
daa
pop
pop
push
push
outs
daa
daa
daa
fmul
inc
dec
dec
dec
dec
inc
cmp
xor
pushf
fmul
iret
sub
and
popf
pushf
pushf
and
sbb
sbb
cmp
adc
enter
cmp
jns
cli
or
stc
mov
mov
add
lock
inc
ret
mov
pop
dec
ret
outs
or
add
jg
push
add
mov
and
fwait
cmp
mov
add
mov
and
mov
dec
mov
inc
inc
pop
ret
out
jbe
lock
cmc
in
in
add
pop
fldenv
stos
pop
push
mov
jb
xor
(bad)
mov
imul
and
xor
xor
sub
imul
and
imul
outs
data16
mov
push
and
je
popa
inc
inc
gs
ins
outs
jo
lods
cmp
xchg
gs
fistp
test
jns
popa
imul
jmp
arpl
cmps
fs
aas
jnp
mov
stos
lods
bound
cmp
jnp
call
popa
dec
leave
fidiv
rol
bound
test
iret
and
add
outs
imul
outs
add
mov
outs
mov
jbe
mov
mov
fstp
adc
mov
mov
mov
mov
dec
add
inc
or
cmps
imul
or
or
imul
imul
cmps
jge
sub
push
xor
cs
jp
rcl
imul
inc
and
xor
sub
inc
jbe
imul
lahf
imul
pop
stos
popf
bound
or
inc
inc
imul
jmp
inc
dec
add
neg
jns
fistp
add
jl
push
cmp
add
data16
out
adc
and
mov
inc
pop
add
in
out
inc
xor
mov
add
fidivr
jl
nop
call
cmp
mov
mov
jmp
dec
jmp
mov
and
fucomip
jne
pop
mov
and
sub
fist
adc
add
leave
and
add
out
lea
cmp
mov
add
imul
loopne
frstor
(bad)
(bad)
sbb
loopne
cmp
popf
hlt
outs
mov
cld
add
or
adc
xor
add
clc
cmp
aad
out
sbb
mov
cld
sub
fisub
pop
mov
mov
in
add
outs
pusha
push
mov
inc
or
push
push
or
push
and
movs
test
fcmovu
xor
out
mov
mov
mov
loop
add
in
push
mov
sar
mov
(bad)
imul
retf
mov
mov
sub
sbb
int
pop
int3
xor
mov
cmp
jl
je
jmp
fisttp
mov
sub
push
add
sbb
xor
rol
lds
push
push
mov
adc
fisttp
and
mov
pushf
push
xchg
mov
outs
div
mov
or
pushf
or
aam
pop
ror
adc
sbb
mov
lds
mov
pop
pop
pop
pop
faddp
add
mov
sub
fist
out
clc
jae
(bad)
jle
adc
mov
push
and
or
mul
or
in
outs
loop
jns
(bad)
in
(bad)
add
(bad)
jmp
or
cmp
in
push
push
lea
push
push
mov
sbb
jne
push
push
mov
cmp
cli
(bad)
out
jbe
sub
add
jmp
test
jne
lods
(bad)
fimul
and
fisubr
idiv
retf
les
inc
loopne
repnz
sub
pusha
fcmovnbe
or
fadd
fidivr
loope
pop
scas
fdivr
shl
add
cmp
jbe
jmp
pusha
lock
adc
xchg
xor
push
mov
cmp
jne
mov
fs
mov
stos
inc
push
cmp
jae
mov
imul
into
popa
add
dec
and
jae
add
pusha
lods
iret
inc
ror
adc
jecxz
or
test
add
repnz
xchg
push
pusha
or
lds
mov
fcmovnu
jmp
std
sub
add
jbe
ret
push
mov
lods
rol
adc
xchg
mov
xor
outs
fld
shr
cmp
jb
add
das
dec
std
mov
ror
jle
mov
pop
sbb
je
cwde
and
mov
push
add
dec
ja
dec
les
lea
xchg
xchg
inc
or
stos
stos
add
add
sub
idiv
je
(bad)
and
add
movzx
add
cmp
ja
dec
mov
cmp
loopne
imul
pop
adc
add
mov
jg
and
and
xchg
fs
scas
cmp
jns
fidiv
fdivr
je
lods
jne
xor
cmp
cmp
cmp
test
je
xchg
inc
or
(bad)
movsx
xor
mov
or
mov
mov
leave
xor
ror
mov
cmp
add
push
fiadd
mov
cmp
xlat
jne
mov
test
lock
btr
mov
fwait
aaa
jmp
add
dec
jnp
sub
lea
movzx
mov
sbb
xlat
out
or
mov
sti
(bad)
data16
iret
sub
sub
cmp
and
inc
sbb
mov
mov
mov
fs
cld
test
sub
push
mov
mov
inc
and
push
ins
imul
mov
addr16
xchg
dec
or
fisttp
xor
fidiv
mul
fadd
mov
jne
lea
cli
sbb
loopne
push
je
fdiv
ins
dec
loope
rol
or
jmp
mov
iret
ss
fidivr
add
push
bsf
loopne
lock
mov
shl
xor
sbb
jnp
sub
xor
push
dec
mov
jmp
mov
dec
mov
loope
sbb
pop
xchg
inc
xor
fdiv
cmp
(bad)
cmp
in
xchg
adc
push
xor
pop
xor
jb
jae
rcl
(bad)
test
fisttp
jns
pusha
ror
and
mov
test
rcl
movs
add
mov
jne
sub
clc
fs
jmp
inc
inc
shl
fadd
data16
xchg
dec
dec
imul
mov
push
push
xchg
inc
adc
cmp
jne
xor
mov
iret
call
adc
push
push
mov
pop
pop
leave
outs
xor
and
aam
inc
add
(bad)
mov
and
fmul
scas
test
sub
xor
test
loope
clc
or
cmp
inc
fiadd
lock
pop
xor
xchg
mov
xlat
mov
arpl
rcr
je
add
cmp
das
ret
pop
dec
clc
sub
out
jmp
js
test
xchg
mov
pop
sub
mov
lahf
mov
stos
fld
or
sbb
lea
cld
loopne
ret
mov
loopne
add
cmp
shr
dec
rol
mov
shl
in
or
in
or
xlat
pop
enter
sub
sub
xor
(bad)
clc
das
mov
ret
jg
or
jmp
pop
movs
test
lea
push
mov
loop
rol
idiv
and
add
hlt
sub
jbe
clc
iret
mov
call
xchg
push
popa
xor
xor
cmc
(bad)
loope
retf
mov
add
jecxz
cmp
push
in
or
adc
int
or
add
scas
jge
jmp
jb
or
mov
lea
add
lds
add
sub
cmp
mov
pop
inc
(bad)
in
mov
or
cmp
pop
cld
or
mov
push
mov
add
or
stos
jg
ins
adc
pop
data16
mov
rol
xlat
sub
add
add
jl
or
lea
or
xor
cmp
imul
or
mov
mov
sbb
cmp
add
jo
cmp
dec
fistp
iret
pop
push
xor
xor
out
xor
int
push
sar
std
xlat
je
iret
ja
cmp
jg
xor
pop
mov
shr
add
xor
sub
adc
pop
sub
add
test
add
sub
out
lea
ja
and
push
add
push
jle
popa
add
push
lea
jl
lock
(bad)
mov
push
pop
add
outs
mov
inc
or
pop
shl
loope
and
dec
iret
push
gs
sbb
sahf
cld
loop
cmp
lock
and
sbb
push
lea
jecxz
(bad)
mov
leave
lea
or
jae
neg
fldz
cld
sbb
(bad)
fst
add
js
or
rcr
outs
mov
mov
(bad)
clc
lds
mov
in
ror
call
jne
xor
dec
xlat
pop
lea
adc
adc
hlt
and
rcl
sbb
fidivr
jmp
push
into
ret
and
jle
cmp
jne
mov
cmp
jbe
mov
mov
sub
sbb
xor
sub
mov
mov
xchg
xor
scas
es
mov
clc
pop
jo
mul
ins
push
mov
loop
pop
shr
jle
sbb
or
mov
loopne
stc
call
(bad)
inc
sbb
wbinvd
shr
cs
scas
inc
xchg
dec
aaa
sbb
retf
add
sbb
sbb
sbb
xchg
or
sub
pop
icebp
or
and
pop
scas
icebp
mov
add
arpl
mov
add
pop
inc
push
icebp
mov
mov
ds
inc
ds
xor
mov
mov
in
rcr
xor
sbb
add
push
lds
mov
push
in
cmp
ja
pop
or
sti
fbstp
rcl
push
jae
ss
mov
push
adc
fcmovnu
clc
add
push
and
add
push
adc
js
sahf
jne
push
test
je
adc
or
call
add
fcmovu
fdivp
out
or
push
push
mov
dec
cmp
mov
(bad)
shr
sbb
push
and
xor
imul
cmp
jne
test
daa
dec
mov
xor
sar
push
add
sti
push
loopne
js
cmp
(bad)
in
xor
lods
cld
sbb
mov
push
xor
mov
and
in
pop
in
sub
loopne
ja
dec
jmp
mov
aaa
inc
setne
jnp
mul
(bad)
aas
inc
sbb
and
jns
jp
push
dec
pushf
sub
out
inc
mov
sbb
(bad)
mov
push
in
stos
stos
pop
sbb
enter
pop
mov
cmp
jne
mov
push
lods
add
push
mov
and
imul
dec
mov
add
dec
jne
mov
out
push
addr16
(bad)
cld
mov
pop
or
inc
add
and
ret
(bad)
dec
fadd
adc
jb
mov
sbb
div
call
repz
jo
and
pop
push
dec
jg
mov
or
cmp
je
aaa
pop
jl
clc
test
das
shl
scas
add
jge
push
jnp
inc
hlt
adc
pop
pusha
adc
add
sub
imul
ror
hlt
add
mov
mov
aaa
pop
push
jl
jg
mov
jg
dec
sahf
arpl
jl
xor
aam
jge
jle
and
lods
jmp
jae
add
dec
aam
lods
mov
mov
add
dec
push
jmp
xchg
in
imul
sbb
in
adc
cld
xchg
scas
fild
xchg
das
mov
mov
or
cmp
je
or
inc
cmp
cmp
jg
mov
fcmovnb
push
inc
lock
mov
push
push
(bad)
fmul
xchg
clc
test
jle
mov
cs
loop
fldz
dec
jne
bound
loopne
stos
lea
jnp
mov
clc
adc
mov
fadd
inc
add
clc
dec
xor
test
cmp
pop
les
dec
pop
adc
stos
movs
ret
out
jb
call
lock
aas
int
push
add
or
sbb
daa
push
mov
and
add
hlt
enter
in
and
int3
(bad)
push
in
jle
mov
mov
jmp
ret
jecxz
jne
mov
xchg
xor
ret
ds
xor
mov
out
(bad)
enter
scas
mov
js
ss
xchg
sti
cli
je
dec
dec
pop
mov
jl
cmp
test
lea
fadd
mov
adc
outs
xor
cld
mov
out
in
loope
outs
add
mov
ret
mov
call
scas
cmp
rsm
cmp
xchg
fiadd
push
jne
mov
not
push
not
add
loopne
or
ja
adc
sbb
lahf
and
or
rcr
mov
jmp
jb
xchg
add
je
ficom
sbb
dec
je
jmp
std
jo
inc
mov
shl
sub
leave
pusha
or
inc
cld
addr16
dec
sub
xchg
dec
mov
or
(bad)
stos
xchg
push
xchg
popa
sbb
pop
cmp
add
xchg
jle
test
push
add
mov
hlt
or
dec
sbb
inc
xor
jae
imul
cmp
add
ja
inc
xor
enter
dec
jne
mov
adc
(bad)
mov
sbb
ror
xchg
or
sar
ins
(bad)
jecxz
es
mov
outs
dec
pcmpeqw
add
cmp
jbe
mov
mov
adc
cmc
bound
ret
(bad)
sbb
int3
nop
scas
mov
(bad)
mov
add
mov
inc
in
inc
clc
or
std
shr
repnz
lock
icebp
in
out
rol
add
add
jbe
fnsave
mov
shr
cmp
jbe
(bad)
(bad)
mov
mov
shl
mov
shl
add
mov
cld
into
out
(bad)
xor
loope
lea
add
mov
loope
shl
jae
mov
cmp
push
mov
out
fcos
dec
sub
mov
xor
div
imul
mov
fsubp
push
data16
(bad)
adc
(bad)
cmp
pop
push
push
mov
mov
ret
fdiv
mov
mov
ret
repz
adc
pop
adc
fsub
push
mov
add
adc
scas
int3
add
std
cmp
jne
mov
js
shl
mov
lea
dec
jne
sbb
repnz
or
sbb
push
fistp
fdivrp
in
lea
mov
cmp
je
mov
pop
push
push
xor
mov
mov
fmul
idiv
cmp
lea
pop
popf
mov
jae
push
pop
(bad)
add
pop
pop
push
adc
repz
mov
fisub
sbb
cs
cmp
rcl
inc
xchg
push
jne
mov
test
je
test
je
ins
and
in
push
mov
inc
push
pop
or
inc
or
cmp
jmp
bound
out
int
rcr
arpl
ss
je
cmp
sub
aas
(bad)
sub
push
and
fnstenv
pop
or
or
cmp
lods
rol
out
jmp
out
sbb
dec
ret
mov
out
rcr
add
fadd
or
bound
outs
cwde
frstor
dec
jmp
cmp
ja
movzx
add
movs
adc
inc
and
scas
xor
sar
ret
push
push
push
lea
pusha
adc
retf
mov
jbe
call
out
loopne
rcl
add
(bad)
(bad)
cmp
je
cmp
ja
sub
jg
jmp
sbb
or
or
adc
or
add
xchg
sbb
lods
dec
xor
xor
iret
repz
dec
dec
pop
gs
scas
fcomi
jo
mov
or
adc
pushaw
div
fld
aad
cmc
jl
rcr
cs
shr
retf
adc
jbe
pusha
sti
pop
sbb
push
add
clc
sub
pop
mov
push
test
jmp
or
or
mov
inc
add
and
add
add
pop
into
rcr
adc
ret
mov
stos
addr16
jmp
in
pushf
adc
mov
jnp
push
inc
cli
and
or
and
js
or
es
mov
cmp
loopne
call
cmp
xlat
and
pop
jmp
inc
imul
xlat
xchg
and
sub
mov
stos
call
xor
jmp
mov
jmp
push
test
adc
outs
xchg
adc
add
ret
pop
fild
iret
cmp
dec
inc
test
jne
push
cmps
rcr
and
je
test
aam
dec
jl
push
and
fist
mov
adc
je
fisubr
or
into
cmp
add
jmp
jg
mov
or
sbb
popf
ror
mov
or
(bad)
lock
xor
imul
or
adc
or
out
mov
fldcw
cmp
push
fld
fldl2e
fmulp
fld
frndint
fsubr
(bad)
lock
call
fstp
pop
ret
aas
in
cs
fwait
and
in
cld
js
pop
pop
scas
push
or
int
call
fwait
or
ins
fistp
add
fldcw
pop
call
push
in
adc
in
push
aas
xchg
cmps
aaa
je
ss
adc
jmp
ret
(bad)
rcr
sub
add
sbb
cmp
and
pop
jmp
add
lea
inc
in
test
mov
sbb
ins
(bad)
xor
mov
push
das
or
and
pop
sub
mov
inc
adc
and
(bad)
lahf
jmp
cmp
xlat
dec
push
mov
or
cmp
jbe
mov
mov
dec
sub
pop
push
mov
shr
je
mov
sbb
fnstenv
dec
je
jo
add
cmp
in
inc
call
jmp
adc
add
add
je
mov
cmp
jne
push
adc
add
xor
or
add
loope
mov
js
cmp
add
jmp
sbb
mov
hlt
xchg
fidiv
mov
jl
es
in
cmp
sub
push
add
jmp
fst
stos
cmps
add
shr
dec
fnsave
neg
sub
loop
das
sbb
jmp
jmp
jne
push
pop
inc
push
inc
aaa
mov
sahf
addr16
cs
sbb
sbb
push
adc
sahf
out
adc
push
or
fs
inc
push
or
scas
mov
(bad)
adc
push
pop
jb
and
int3
outs
mov
outs
add
push
add
cmp
je
mov
or
je
or
je
outs
outs
outs
outs
and
addr16
bound
pop
xor
fadd
dec
fist
dec
dec
test
mov
or
sub
and
mov
clc
ja
lea
scas
sar
add
add
push
mov
dec
xor
jg
mov
or
(bad)
neg
jle
js
pop
sub
jmp
inc
popa
outs
arpl
dec
jmp
mov
xchg
cmps
popf
xor
test
pusha
cmps
std
std
add
or
mov
int
movs
pop
xor
shr
mov
out
cld
fwait
lock
mov
mov
mov
sub
inc
mov
rol
test
ret
fdiv
or
pop
sti
lea
pop
or
pop
repz
jo
or
cmp
sub
sub
leave
jne
dec
push
sub
pop
mov
outs
js
dec
push
jmp
cmp
mov
xchg
jge
sub
pop
adc
lods
push
daa
cmp
mov
jns
pcmpeqb
pop
cmp
mov
push
add
popa
and
jmp
push
sbb
dec
pop
xchg
jge
mov
xor
dec
sub
sbb
jmp
fstp
fld
jno
add
fldz
movs
stc
in
jo
jg
aas
mov
cmp
cli
or
or
inc
ds
push
ret
mov
adc
and
stc
and
sbb
add
cld
inc
mov
mov
out
imul
xchg
sub
hlt
and
mov
adc
xor
repz
mov
xor
cs
jbe
imul
cmp
aas
(bad)
call
mov
bound
cmp
xlat
fsub
(bad)
fwait
inc
nop
lods
outs
xor
xchg
push
or
push
push
(bad)
jmp
ret
inc
mov
push
pop
test
enter
mov
inc
cmp
and
(bad)
(bad)
push
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
sbb
pop
(bad)
mov
addr16
(bad)
(bad)
(bad)
dec
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
iret
dec
js
(bad)
jmp
inc
mov
stos
mov
cmp
or
mov
pop
out
sub
clc
mov
inc
imul
div
jl
xor
cmp
call
mov
(bad)
jmp
jle
push
inc
mov
push
sbb
sar
repnz
test
(bad)
(bad)
dec
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
idiv
(bad)
(bad)
(bad)
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
call
loopne
aaa
popa
mov
mov
(bad)
repz
mov
sub
loop
call
pusha
les
outs
bound
xor
in
test
fist
imul
jne
push
pop
and
or
lock
mov
nop
mov
movzx
ins
mov
lea
push
push
inc
or
(bad)
xor
hlt
or
push
jmp
push
mov
mov
data16
jns
clc
add
and
pop
cmp
pop
push
adc
sub
clc
ret
sub
fsubr
fwait
out
shl
rol
clc
pop
aas
call
jp
or
mov
add
adc
dec
add
add
add
jb
ins
add
outs
add
mov
add
jo
imul
(bad)
fidivr
inc
add
dec
dec
jae
imul
push
inc
pop
push
mov
fninit
fwait
cmp
cld
mov
lock
xchg
mov
push
lahf
mov
add
mov
call
jb
pop
dec
clc
push
popa
imul
ins
dec
clc
mov
inc
iret
dec
sub
or
fldcw
inc
cmp
inc
ja
pushf
lea
inc
mov
lock
pop
int3
pop
xchg
cmp
sub
xchg
mov
add
xchg
ret
jg
addr16
mov
rcl
xchg
add
and
call
test
add
rcr
ret
and
sub
clc
cmp
test
xor
xor
out
adc
movups
sbb
fwait
cs
xor
mov
or
push
cld
ret
push
(bad)
jmp
adc
rcl
add
stos
pop
and
rep
mov
mov
loop
lods
cld
add
pop
shr
jmp
cmp
je
pop
mov
(bad)
ja
mov
ss
mov
mov
push
sbb
jne
sti
mov
iret
lods
(bad)
mov
mov
mov
mov
pop
pop
movs
fdiv
ror
int3
push
xchg
cmp
data16
paddd
(bad)
add
and
loope
retf
sub
adc
test
cmp
mov
mov
pop
jbe
mov
inc
movs
and
adc
in
(bad)
ficomp
and
xor
mov
and
push
(bad)
test
xchg
add
jmp
lea
push
sbb
cmc
jecxz
es
out
pop
dec
lds
aas
xor
nop
popf
lock
out
shr
pushf
mov
cmp
jne
jb
cmp
jne
push
or
jne
or
push
inc
push
inc
dec
ret
fdivr
push
mov
or
in
mov
mov
inc
ror
mov
leave
jne
mov
sub
loope
sbb
add
jle
mov
inc
sqrtps
scas
je
pop
adc
aaa
std
ret
pop
add
sub
inc
cld
pop
xchg
push
mov
cmp
movs
pop
pop
adc
out
mov
scas
inc
mov
xor
das
mov
or
es
mov
mov
or
outs
fbstp
data16
jl
cmp
or
rol
add
aaa
fsubrp
push
pop
cmp
lock
add
les
scas
push
pop
push
loope
pop
clc
movzx
push
inc
push
jmp
sahf
int3
lods
cld
lock
popf
pop
xchg
mov
inc
fcom
push
retf
inc
xor
outs
and
rcl
dec
xor
or
mov
(bad)
fs
jl
jmp
sbb
add
dec
jne
mov
out
sbb
fucomi
ss
jmp
push
lea
popa
jo
jg
test
pop
cwde
jmp
xor
test
jne
xor
clc
fstp
psubusw
lock
inc
add
ds
pop
(bad)
jmp
jmp
mov
sub
nop
xchg
cmps
rcl
push
and
and
and
jl
jl
fcomp
cmp
jmp
sub
jmp
xchg
retf
daa
jecxz
iret
push
jns
mov
pop
add
xchg
xor
scas
daa
push
push
push
mov
xor
lea
call
mov
mov
mov
inc
or
or
pop
pop
xor
outs
sub
pop
lea
inc
or
jo
mov
push
push
cli
push
jo
pop
xor
cmp
pop
dec
loopne
lock
push
clc
ja
jae
cmps
mov
xor
test
inc
xor
jo
mov
push
retf
or
fld
dec
movs
mov
in
adc
cmp
pop
dec
jg
test
cmp
pop
mov
push
sbb
sbb
or
pushf
ret
xor
cs
int3
mov
adc
add
and
push
sub
mov
and
and
add
mov
add
fst
xor
jbe
test
(bad)
loopne
or
in
push
call
pop
push
loopne
enter
push
cmp
sbb
cmp
imul
add
add
adc
xchg
xor
mov
push
push
and
sbb
mov
push
movsx
inc
inc
jbe
add
add
push
addr16
dec
test
pop
pop
mov
sbb
cmp
push
aas
loop
test
mov
(bad)
jecxz
pop
xabort
cld
xchg
enter
push
int3
test
mov
cmp
mov
outs
add
fdiv
adc
test
loop
cwde
jecxz
rcr
adc
outs
or
add
je
outs
pop
imul
sub
add
lea
xor
pop
xchg
mov
cmc
movs
push
repnz
ins
jmp
adc
adc
and
cli
push
jns
outs
mov
or
rol
xchg
sar
push
cmp
sub
scas
inc
dec
mov
in
mov
push
idiv
pop
das
outs
jo
add
inc
add
push
add
out
mov
fcomp
jmp
and
sub
out
adc
xor
les
push
xor
outs
je
dec
das
xor
fs
add
shl
mov
cmp
dec
xchg
or
add
inc
mov
ins
aas
dec
clc
outs
adc
pusha
add
cmp
inc
enter
fmul
enter
inc
inc
xchg
add
ss
mov
call
mov
xchg
jp
dec
jne
outs
shl
adc
loop
outs
inc
jmp
sbb
jb
sbb
lahf
mov
adc
sub
add
push
sbb
mov
adc
lods
mov
inc
js
cmps
pusha
adc
outs
(bad)
call
inc
xor
or
xor
adc
dec
jo
dec
add
push
xchg
rol
sar
lods
adc
mov
pop
lahf
jecxz
and
pop
pusha
adc
push
dec
ficomp
daa
js
mov
out
and
cmp
stos
add
je
cdq
pusha
sbb
jl
jmp
or
rcr
fnstcw
out
and
dec
pop
mov
cli
imul
jg
or
mov
call
bound
call
shr
mov
or
lea
inc
inc
lock
or
mov
rol
pop
push
push
push
push
adc
loopne
movs
test
push
imul
adc
or
pop
xor
push
pusha
push
mov
mov
push
add
nop
adc
es
pusha
repz
xchg
data16
cmp
cmp
test
or
sub
add
pop
or
loopne
xchg
and
pop
adc
test
mov
or
push
jbe
pop
out
sub
repz
pop
(bad)
call
hlt
ret
xor
sbb
aas
sbb
scas
xor
stos
into
or
pop
js
out
add
mov
pop
cmp
push
sub
mov
cmp
pusha
add
add
je
push
mov
cmp
cmp
adc
(bad)
call
jmp
sub
cmp
mov
jmp
mov
jmp
mov
jmp
mov
ja
out
iret
jmp
push
sbb
into
or
fsubr
push
mov
jmp
mov
mov
retf
movzx
add
pop
pop
ret
fild
jecxz
mov
gs
loop
or
bnd
pop
adc
mov
out
js
push
ins
inc
sbb
cli
fisttp
sub
clc
mov
jno
push
mov
sbb
mov
sbb
loopne
nop
mov
and
cmp
xor
scas
cli
inc
or
out
ret
fmul
sub
mov
mov
daa
nop
aas
mov
jo
push
jecxz
enter
repnz
xor
add
and
mov
sbb
lods
js
or
dec
test
jle
dec
mov
je
add
cmp
sub
and
(bad)
jmp
jmp
jnp
les
pop
cmovo
je
leave
idiv
mov
nop
ja
fs
sti
jle
in
in
inc
ss
inc
xlat
iret
cmp
jg
ins
hlt
dec
mov
and
add
cmp
adc
sub
jmp
rcr
mov
out
cmp
enter
jl
je
imul
pop
jle
xor
mov
dec
cld
jae
adc
cmp
jmp
test
outs
dec
cld
dec
xor
pop
or
mov
mov
or
(bad)
push
sub
sbb
lea
mov
push
outs
sti
xor
dec
hlt
pop
dec
je
add
int3
pop
cmp
sub
out
sbb
or
jo
add
jne
pop
pop
(bad)
sbb
mov
inc
or
dec
stc
dec
in
call
pop
push
(bad)
push
xor
xor
inc
inc
inc
inc
inc
inc
and
in
int
pop
mov
mov
in
fisttp
cdq
idiv
add
loopne
adc
and
das
in
or
and
(bad)
dec
xchg
fdiv
loopne
(bad)
inc
ror
inc
cmp
or
outs
pop
ror
ret
sub
xchg
jg
fcomp
rol
scas
pop
in
outs
adc
ja
add
jbe
jl
mov
mov
leave
fistp
mov
push
push
cmp
pop
adc
cmp
or
or
mov
push
adc
sbb
(bad)
aad
sbb
cmp
dec
xlat
or
xor
sti
adc
jge
cmp
or
aaa
rol
fdivr
mov
jle
outs
jnp
imul
push
mov
call
sbb
icebp
inc
cmp
adc
call
add
ds
add
(bad)
cmc
adc
les
ss
jmp
cld
imul
adc
lods
push
jb
adc
cmp
je
cli
push
push
jg
jb
call
jne
call
adc
mov
mov
inc
repnz
pop
xlat
in
add
push
push
fsub
nop
ds
mov
dec
mov
in
cmps
jmp
mov
xor
in
movs
call
mov
sub
fst
leave
push
out
adc
and
push
push
pusha
jp
or
shl
rcl
cs
pop
mov
leave
test
mov
jo
data16
inc
mov
mov
aaa
jns
sbb
add
sub
lods
push
push
push
or
push
mov
push
xchg
clc
cli
das
pop
out
mov
fisub
push
dec
pusha
lea
sbb
sbb
dec
clc
dec
jl
lock
hlt
pop
scas
rcl
fist
adc
sub
jb
mov
fild
push
jne
outs
dec
cmp
jp
add
lock
push
ror
sbb
push
inc
inc
lods
push
pusha
or
fbld
pusha
mov
pop
push
dec
cld
popf
imul
cs
inc
clc
xchg
adc
cmp
mov
jnp
jle
push
add
add
cmps
jo
loopne
bound
test
(bad)
mov
stos
cmp
rol
inc
clc
pushf
ins
jnp
test
retf
hlt
data16
push
xor
sub
iret
or
loope
aaa
das
mov
mov
mov
mov
or
stos
sbb
jecxz
push
push
fld
sub
dec
retf
mov
pushf
sar
outs
or
push
dec
adc
or
adc
push
xor
xlat
aaa
outs
out
sbb
retf
adc
popa
ins
or
pusha
ret
and
pop
cld
or
sbb
sbb
ret
shl
pop
test
xor
call
sub
cmp
or
sbb
mov
into
stc
xchg
jg
jmp
jmp
push
sub
dec
icebp
fistp
in
(bad)
xor
(bad)
movs
push
and
or
inc
push
sub
test
mov
jg
push
mov
push
mov
sub
pusha
xchg
push
les
cld
add
je
add
je
add
push
out
mov
enter
add
jmp
mul
sub
and
pusha
pop
or
pop
(bad)
out
sahf
push
push
outs
or
in
add
iret
jl
inc
test
or
xlat
sbb
pop
shr
shl
cmp
ret
arpl
add
outs
outs
rol
mov
or
cmp
jl
(bad)
push
or
xchg
push
and
add
push
test
or
dec
dec
dec
ja
dec
cmps
rol
enter
test
je
mov
les
add
jo
cmp
je
dec
hlt
mov
cld
movs
mov
mov
jecxz
mov
ins
push
int3
pop
jae
xlat
lds
popf
ret
sbb
sbb
fucomip
lods
imul
rcr
push
inc
fsub
push
cmp
cmp
ror
push
cli
inc
cld
add
add
sbb
ficom
inc
sub
sbb
mov
xchg
mov
pop
fsub
dec
jae
mov
xor
stos
add
push
sbb
add
jecxz
add
pop
cmp
add
dec
clc
pop
add
ror
xchg
or
cmps
out
xor
xchg
add
hlt
mov
adc
movs
les
inc
cld
dec
jmp
fsubr
lsl
js
lds
cs
cli
pop
dec
jne
mov
pusha
xchg
xchg
push
dec
cmp
dec
mov
aaa
dec
jmp
mov
mov
xor
loope
or
sbb
shl
test
movs
xchg
sbb
repnz
pop
sbb
test
jmp
push
sbb
sbb
pop
je
or
ror
mov
and
jmp
mov
cmp
or
cmp
inc
mov
xchg
inc
sub
jno
push
add
jp
add
xchg
inc
scas
clc
sub
jne
adc
inc
ja
pop
cld
sub
and
sub
cs
sub
sub
dec
add
sbb
jne
inc
and
repz
pop
mov
repz
mov
pushf
or
cdq
cwde
popfw
pop
pop
jo
(bad)
jg
fcmovnb
jmp
add
jns
mov
cmp
pop
pop
jmp
push
hlt
popa
ficomp
cld
ret
cmp
jle
pop
push
daa
xchg
pop
or
cmp
sbb
push
mov
jns
mov
daa
js
cmps
dec
test
push
popf
add
pop
mov
es
push
cs
xchg
adc
imul
dec
inc
fdivr
and
dec
ud0
pop
xchg
inc
dec
jl
cmp
jge
sub
popa
aad
sar
jl
mov
xor
pop
js
int3
(bad)
mov
jnp
lock
imul
es
es
push
out
xor
adc
shr
les
retf
das
sbb
scas
pop
mov
leave
sub
(bad)
push
mov
jl
movs
jge
arpl
es
push
jle
ficomp
repnz
std
sbb
dec
hlt
adc
adc
cli
adc
jle
(bad)
rcl
jb
cmps
scas
ror
cmp
jl
sub
add
add
pop
cmp
mov
clc
add
push
neg
enter
stos
xor
adc
mov
push
add
cmp
or
xchg
jb
or
jb
sub
xor
cs
jns
and
add
movs
xchg
pop
ret
inc
xchg
sub
push
xor
loopne
adc
aad
inc
sub
xor
iret
test
dec
xor
sbb
sub
jmp
cmp
sbb
cmp
(bad)
sub
retf
jmp
movs
adc
jne
push
icebp
arpl
stos
pop
cdq
jg
int
ins
jp
adc
jns
cwde
push
xchg
jg
sub
movs
fimul
mov
adc
cmp
clc
jmp
js
jo
push
and
lock
sbb
xchg
mov
mov
das
sar
push
pop
jmp
sub
mov
adc
cmp
dec
or
(bad)
mov
lods
xchg
push
scas
sbb
sbb
out
enter
jle
and
js
pop
sbb
adc
outs
mov
add
xor
jmp
fcomip
test
jbe
push
push
das
xor
dec
push
or
aas
in
inc
cmp
aaa
push
cmp
call
pop
cmp
sbb
ret
sete
jae
push
sub
ins
and
inc
inc
jecxz
mov
call
cld
shl
clc
test
(bad)
mov
jmp
lea
cmp
push
jo
es
jl
mov
xchg
fcomp
jle
lea
test
jmp
lea
sbb
dec
mov
les
ret
jo
inc
fcom
dec
mov
and
js
inc
xlat
movs
push
fwait
or
out
(bad)
(bad)
sbb
xchg
mov
push
inc
mov
jnp
push
dec
movs
imul
mov
add
sbb
std
jne
jne
cmc
sbb
adc
cmp
in
retf
pop
idiv
data16
or
xlat
sub
xchg
or
dec
rol
and
add
sub
mov
pop
sbb
out
push
xchg
push
sbb
mov
ja
rcl
jmp
mov
inc
dec
dec
add
pop
xor
(bad)
or
into
or
add
pop
and
stos
cli
ss
inc
and
jle
xchg
adc
jge
jmp
cmps
or
pop
das
or
jecxz
fst
call
daa
ret
pop
movs
add
jmp
cli
add
xor
jmp
dec
cmp
movs
mov
loop
add
not
mov
sub
cmp
and
mov
or
rol
ror
jb
movs
pxor
or
add
js
xor
adc
(bad)
pusha
sbb
mov
std
jnp
cmp
call
into
inc
cmp
ja
dec
mov
test
dec
push
sbb
cmc
(bad)
sbb
sbb
dec
or
mov
cmps
lahf
scas
mov
xchg
xlat
sbb
test
pop
scas
inc
push
push
push
push
and
jno
sub
xor
inc
or
loop
cmp
push
push
inc
or
push
cmps
jle
sbb
xchg
add
mov
push
aad
lahf
dec
xor
addr16
and
dec
jl
cs
cld
xchg
push
xor
(bad)
dec
sub
rol
fidiv
xchg
or
rol
je
es
push
pop
(bad)
dec
ins
ss
icebp
lods
(bad)
push
jbe
das
scas
xor
(bad)
xlat
xlat
adc
adc
aam
sub
jge
inc
mov
icebp
ds
jg
inc
inc
pop
adc
xlat
scas
pop
mov
lds
ret
mul
xchg
popa
ret
or
jmp
cld
push
cmp
adc
fwait
dec
movs
pop
aaa
add
jo
ds
sbb
lods
pushfw
jo
test
es
or
adc
nop
jp
xchg
push
scas
js
test
ret
mov
push
mov
dec
inc
rcr
push
mov
retfw
mov
xor
xchg
mov
stos
dec
inc
and
push
xchg
test
or
push
fistp
add
cmp
enter
mov
sar
push
or
xchg
dec
push
xor
retf
dec
jo
movs
mov
adc
leave
loope
retf
sbb
rcl
lds
dec
add
test
sbb
adc
aaa
leave
stos
inc
pop
or
inc
xchg
test
dec
fwait
test
cmp
sar
movs
or
shl
xchg
cmps
dec
jg
mov
jo
jbe
jl
or
es
jmp
push
fdivr
push
aaa
sbb
push
shr
lea
aas
enter
imul
pop
gs
jmp
ins
test
cmp
lea
jg
inc
in
leave
cmp
fucomi
pop
dec
cmp
fadd
sti
cmp
inc
jge
sub
adc
adc
push
sub
dec
jnp
pop
shl
push
and
add
and
gs
aam
popf
pop
sbb
bnd
pop
or
or
jno
add
or
jl
fisubr
dec
push
sub
sub
mov
shl
xor
sti
pop
mov
add
or
leave
ja
aaa
mov
dec
adc
inc
inc
(bad)
cli
pop
cld
gs
jle
mov
jne
cmps
clc
mov
and
jmp
(bad)
(bad)
cmp
jge
mov
js
mov
jo
pop
leave
and
add
int
mov
jle
xor
add
int
mov
push
sbb
dec
sub
cmp
adc
pop
push
repz
hlt
into
sub
adc
adc
sub
addr16
leave
or
xor
push
sbb
cmp
xchg
lods
push
jmp
cwde
stc
mov
push
add
add
lods
inc
pop
cmp
jo
or
add
push
sub
add
mov
push
adc
neg
out
adc
cmp
or
daa
mov
mov
mov
cdq
out
sar
and
js
(bad)
and
sub
or
mov
adc
cmps
mov
mov
adc
idiv
sub
call
mov
dec
mov
adc
add
push
jl
push
iret
mov
out
ret
mov
iret
pop
sub
dec
mov
out
sub
xor
mov
mov
xchg
cmp
data16
jmp
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
dec
ror
or
jnp
shl
imul
and
out
add
std
(bad)
jmp
push
mov
mov
mov
add
dec
cs
adc
push
pop
cmp
pop
mov
in
add
add
push
push
pop
jmp
sub
pop
and
out
out
add
call
call
cmp
add
mov
out
loopne
jns
inc
jb
pop
xchg
ret
push
call
pop
pop
mov
xchg
cwde
fdivr
mov
mov
cwde
cmp
neg
xchg
pushf
dec
mov
ins
ja
xchg
pop
sti
dec
cmp
outs
es
or
retf
or
repz
pop
and
shr
sub
popfw
test
cmp
gs
test
push
jp
das
or
cmps
rcl
bnd
adc
inc
inc
push
adc
mov
adc
dec
mov
stos
xor
push
mov
inc
pop
outs
or
jp
xor
inc
and
add
adc
xor
ins
push
pop
jbe
and
sbb
jo
stos
sbb
add
sbb
sbb
stos
loope
pop
ja
mov
lea
outs
rcl
je
test
loop
add
mov
sar
lock
clc
mov
and
inc
add
mov
cmp
jae
imul
or
je
adc
je
cmps
popf
(bad)
or
adc
mov
adc
(bad)
sub
push
aaa
jb
iret
adc
pop
jle
inc
dec
mov
jmp
and
ins
lea
adc
adc
retf
add
popa
pop
iret
push
or
mov
imul
fild
add
jns
xor
mov
int3
inc
push
ins
test
ds
inc
jo
shl
xchg
push
jl
or
sbb
or
jno
ja
mov
mov
dec
movs
jb
and
enter
xchg
stos
mov
inc
daa
adc
push
and
repnz
mov
pop
lods
dec
fcomp
jmp
inc
xchg
push
cmp
adc
push
mov
cmp
cmp
aaa
inc
sti
xchg
inc
call
mov
inc
add
cmp
add
mov
push
cmp
jmp
iret
ins
test
daa
xor
data16
push
sub
mov
aaa
jo
inc
push
xchg
mov
push
lahf
les
adc
pop
inc
sub
jmp
xchg
fwait
test
push
aaa
jne
jle
or
adc
cmp
add
jmp
fsub
jo
leave
call
and
outs
mov
adc
add
cdq
or
pop
pop
test
clc
enter
dec
movs
xchg
or
es
pop
int3
call
sub
push
(bad)
popa
sbb
sbb
sti
mov
add
xchg
sti
pop
adc
push
push
les
ins
adc
and
mov
in
sti
or
fs
add
adc
push
xor
pop
jg
add
dec
pusha
adc
sar
xor
xor
mov
mov
repnz
(bad)
xor
xor
sub
sbb
jne
cmp
jb
mov
add
div
xchg
add
retf
into
pop
add
test
(bad)
test
ror
fisttp
mov
add
shl
hlt
test
ror
clc
in
add
cli
sub
enter
sbb
ret
fimul
imul
mov
(bad)
out
adc
or
jne
or
int3
or
je
push
jns
(bad)
fistp
cld
fiadd
or
xor
neg
neg
sbb
mov
mov
stos
ins
and
rcl
aam
inc
call
(bad)
rcl
cmp
jb
mov
sub
sbb
inc
loop
out
loopne
dec
cli
pop
test
loopne
ret
dec
xchg
inc
ret
int3
repnz
shl
xchg
mov
sbb
mov
data16
mov
inc
jg
push
arpl
(bad)
and
iret
fbld
sub
add
push
in
inc
jmp
push
sub
mov
inc
sub
inc
push
or
mov
or
lahf
in
xchg
(bad)
pop
call
and
cli
pop
jne
dec
push
in
inc
jnp
jecxz
jne
fist
push
or
rcr
js
or
aad
sub
cs
test
stos
fst
inc
dec
jg
push
pop
sub
rcl
dec
jb
adc
mov
jb
out
jmp
inc
icebp
sub
jmp
mov
jmp
push
enter
pop
popa
or
cmp
call
cmp
sub
sub
add
add
movs
add
cli
adc
adc
inc
xor
hlt
fcom
clc
bound
cmp
rcr
cmp
rcl
(bad)
fimul
ja
adc
push
inc
(bad)
push
jae
and
push
pusha
adc
inc
aas
dec
jae
mov
int3
and
pop
sbb
jg
call
or
adc
cmp
jmp
rol
sbb
popa
in
stc
iret
add
sbb
or
xchg
test
add
pushf
sar
je
dec
cmc
jnp
icebp
pop
and
pop
sti
jmp
pop
lea
jae
call
cli
inc
jg
mov
inc
arpl
dec
or
mov
xchg
mov
js
xchg
dec
in
sbb
pop
add
movs
inc
loope
loopne
call
pop
add
mov
mov
pusha
mov
mov
adc
or
add
push
imul
movzx
add
inc
push
add
call
push
push
jp
push
outs
dec
sub
ins
call
dec
xor
je
push
dec
out
adc
fsub
add
test
sub
mov
adc
xchg
jge
rcr
adc
cld
scas
add
mov
sub
lods
add
in
out
jne
xor
je
mov
dec
lock
xchg
ror
ja
in
mov
push
in
test
ins
(bad)
push
dec
in
push
add
(bad)
aad
into
jae
mov
cmps
or
ror
push
xor
xchg
add
mov
mov
push
lock
sahf
or
ds
and
mov
add
mov
mov
mov
jnp
lea
outs
daa
adc
test
call
dec
jne
enter
inc
xchg
ja
add
cmp
mov
xchg
das
or
cmc
cmps
mov
jne
xchg
add
push
adc
push
inc
and
adc
add
sub
lods
(bad)
xchg
cmps
cmp
adc
dec
icebp
(bad)
sbb
clc
pop
pop
pop
xor
dec
jae
add
in
sbb
je
xchg
std
adc
push
out
pop
and
mov
and
sub
iret
inc
jmp
cli
(bad)
sub
jne
push
aas
and
les
sbb
mov
in
xchg
loop
push
xor
inc
adc
adc
data16
push
imul
cmp
fcom
push
and
jae
or
je
(bad)
retf
push
mov
jmp
cmp
push
inc
sbb
test
addr16
(bad)
xchg
lods
mov
adc
xor
(bad)
inc
jne
push
dec
xchg
or
sub
sti
aad
mov
cmp
test
jmp
jae
mov
push
das
ss
arpl
test
in
scas
push
pusha
sbb
push
sub
call
cld
cmp
adc
pop
psubsb
sub
(bad)
aam
ja
shr
ds
daa
mov
lock
jmp
jne
mov
inc
jg
fisubr
and
sti
jns
adc
and
add
mov
fstp
push
fisubr
(bad)
sar
pop
shl
ret
inc
cmp
ror
xor
push
push
sbb
mov
ffree
(bad)
cmps
mov
cwde
loope
and
push
cmp
sti
leave
jbe
inc
int3
std
call
retf
jg
mov
mov
push
push
(bad)
loope
sbb
mov
div
test
pop
and
(bad)
push
and
outs
mov
xor
xor
cs
add
inc
gs
ret
je
outs
outs
addr16
popa
je
dec
popa
ins
gs
daa
not
std
push
ja
inc
out
xchg
(bad)
push
mov
je
es
push
or
add
js
add
rcr
je
cmp
inc
ja
ins
dec
push
lods
and
loopne
cmp
ds
mov
add
push
shl
aam
clc
xchg
adc
or
into
and
pusha
pusha
cmp
leave
and
or
and
xor
push
pop
imul
std
push
retf
mov
and
mov
inc
jnp
jge
mov
push
sub
and
cdq
fisttp
dec
add
mov
pop
lock
push
pop
test
cmp
jne
test
mov
adc
pop
add
sar
jl
jmp
cmc
loopne
aam
adc
in
cmp
je
jg
xor
xor
xchg
je
push
mov
imul
jnp
mov
and
push
fmul
fisub
and
add
dec
dec
int
pop
and
addr16
and
ins
xor
inc
rcl
mov
push
outs
and
cs
dec
out
rsqrtps
mov
mov
push
stos
mov
xchg
cmp
xlat
outs
test
mov
dec
mov
xor
jmp
mov
sahf
daa
mov
pusha
push
mov
adc
push
mov
dec
rcl
fldenv
rcr
sbb
jp
push
add
add
out
jmp
pop
pop
cmp
inc
mov
cmp
cmp
outs
jo
and
movs
cmp
or
pop
popa
mov
movs
inc
das
inc
add
ins
(bad)
cmp
das
in
mov
jne
inc
mov
pop
pop
jle
mov
cmp
jne
mov
fs
jmp
jmp
mov
mov
or
js
sub
dec
mov
push
mov
mov
(bad)
pushaw
(bad)
pop
add
push
inc
test
push
movs
sbb
xor
push
add
adc
mov
sub
jnp
inc
mov
pop
pop
ret
sbb
xor
add
out
jae
lahf
add
push
call
cdq
lea
icebp
or
push
test
inc
(bad)
xchg
fwait
mov
test
(bad)
xchg
lods
add
test
sbb
xchg
sub
popa
fdiv
call
inc
fistp
or
ret
(bad)
push
aas
mov
jns
sub
add
and
shl
sbb
or
clc
xor
push
xchg
nop
push
scas
push
pop
add
push
and
clc
jb
xor
xchg
jne
jmp
dec
jl
mov
jbe
test
adc
mov
push
loop
cmp
imul
inc
(bad)
sub
sbb
mov
push
push
add
jbe
outs
pop
outs
in
je
iret
or
dec
test
jbe
push
push
lea
pop
xchg
xchg
ss
cmp
jb
aaa
xor
lock
cmp
add
or
add
and
or
sub
adc
push
or
lahf
leave
xchg
scas
dec
stos
fwait
out
lock
adc
std
sar
add
lock
sub
jae
pop
adc
out
sbb
(bad)
data16
notrack
push
repz
aas
push
punpckhdq
or
push
fdiv
pop
pop
pop
jnp
mov
mov
dec
mov
mov
lahf
sub
xchg
jne
ds
push
xchg
xor
test
lock
add
jmp
add
pop
dec
mov
dec
or
data16
mov
das
(bad)
cmp
xchg
xchg
inc
inc
and
pop
or
jbe
popa
mov
sbb
add
pop
fsubrp
mov
icebp
outs
pop
int3
out
pop
mov
adc
xchg
sub
popf
pop
cmp
dec
aam
lods
call
add
retf
xchg
dec
sbb
inc
and
add
inc
shl
add
xor
enter
icebp
sbb
add
push
jb
aaa
push
fs
pop
and
sub
and
jnp
cmp
bnd
jle
mov
sbb
in
pop
pushf
push
loope
cmp
jo
or
push
add
loop
(bad)
pop
dec
cmp
jle
mov
mov
jo
sbb
mov
rol
jo
inc
adc
pusha
or
and
adc
mov
or
lds
test
add
std
cmp
mov
jo
in
mov
cld
test
mov
mov
inc
inc
jg
test
adc
xor
jb
xchg
add
test
jl
push
sub
dec
jmp
ficomp
push
std
inc
pusha
(bad)
cmp
ret
loop
je
sbb
sub
mov
mov
jb
or
and
mov
add
cmp
inc
lock
push
adc
ret
mov
dec
mov
adc
sub
arpl
je
mov
mov
fdiv
imul
jmp
lock
lea
sti
push
fcomip
movs
add
jne
sub
jb
je
movs
(bad)
sti
adc
retf
push
sbb
and
pop
lock
outs
pop
pop
mov
rol
adc
hlt
or
or
hlt
imul
ss
pop
mov
mov
cmc
sub
jns
pop
jmp
shl
ja
mov
fmul
mov
or
inc
sti
push
or
pop
cmp
ror
imul
jb
xor
push
cmp
jb
add
ror
loopne
push
pslld
ss
lock
or
push
fidiv
ret
rcl
add
dec
sar
test
add
or
push
adc
std
sbb
or
mov
jmp
(bad)
dec
fist
(bad)
aad
je
xor
pop
sub
lea
je
rcl
ror
mov
mov
pop
test
or
dec
or
loop
sub
and
inc
add
push
(bad)
and
push
add
in
sub
scas
test
jge
push
or
ins
ret
rol
bound
ds
add
(bad)
nop
ret
into
xchg
adc
push
and
clc
sub
push
mov
jo
shr
adc
inc
mov
cmp
jl
fwait
pop
rcl
push
add
or
push
mov
lock
add
cs
adc
add
cmp
add
retf
mov
repz
push
push
pop
adc
clc
shl
outs
mov
adc
inc
and
ss
add
sahf
ja
add
add
add
add
or
xor
or
add
push
add
push
clc
adc
mov
push
dec
inc
(bad)
push
inc
aas
push
add
cmp
and
(bad)
cmp
fs
gs
test
adc
jb
jns
imul
ins
adc
inc
push
neg
inc
outs
arpl
inc
gs
jne
je
dec
outs
in
imul
jbe
imul
mov
gs
outs
inc
arpl
xor
adc
ret
or
jb
(bad)
mov
pop
xor
(bad)
outs
ins
bound
outs
js
(bad)
es
push
imul
mov
mov
push
dec
ja
dec
inc
xor
je
inc
sbb
push
push
push
cmovs
cs
cmp
sub
dec
dec
dec
sub
sbb
dec
dec
dec
sbb
or
inc
dec
dec
or
loope
jb
cld
call
loope
mov
jns
xchg
fisttp
mov
hlt
lock
in
fcom
aam
int3
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwde
addr16
(bad)
imul
lods
pop
not
jne
cmp
jp
in
and
das
xchg
mov
inc
and
mov
xchg
mov
inc
les
push
xchg
nop
jl
pushf
test
pushf
pushf
je
ins
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
inc
sahf
pushf
pushf
add
cld
(bad)
clc
pushf
pushf
fmul
pop
lock
call
in
(bad)
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
(bad)
sar
mov
movs
dec
inc
sahf
pushf
mov
pushf
pushf
pushf
fmul
nop
mov
pushf
cmp
pushf
pushf
pushf
jo
push
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
pushf
pushf
pushf
and
adc
pushf
pushf
pushf
adc
add
inc
sahf
pushf
add
std
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
dec
dec
dec
dec
ror
enter
dec
dec
sar
mov
test
dec
dec
dec
dec
mov
dec
dec
dec
nop
mov
dec
cmp
dec
dec
dec
jo
push
dec
pusha
pop
pop
push
dec
dec
dec
dec
push
dec
cmp
dec
dec
dec
dec
xor
sub
in
inc
dec
and
sbb
in
in
adc
or
in
in
add
cld
cld
in
jbe
clc
hlt
pop
lock
in
in
call
fsubr
in
aam
ror
sbb
iret
adc
jl
lea
mov
leave
pop
cld
daa
daa
daa
mov
mov
lods
test
daa
daa
daa
movs
mov
daa
daa
xchg
nop
mov
test
daa
daa
je
ins
push
fs
pop
pop
daa
daa
daa
daa
push
push
dec
dec
daa
daa
daa
daa
inc
inc
cmp
daa
daa
daa
daa
xor
sub
daa
daa
daa
daa
and
sbb
daa
daa
daa
daa
adc
or
xchg
daa
daa
daa
add
cld
sti
xchg
xchg
xchg
xchg
clc
hlt
lock
jbe
fcom
loopne
fmul
in
inc
cs
ror
cs
enter
dec
dec
dec
mov
leave
in
mov
test
movs
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
leave
cmp
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
pushf
pushf
pushf
pop
push
dec
dec
inc
pushf
pushf
pushf
pushf
inc
cmp
xor
pushf
pushf
pushf
xor
and
test
xchg
xchg
xchg
xchg
adc
or
leave
enter
add
cli
clc
leave
leave
leave
leave
hlt
lock
call
in
(bad)
pushf
pushf
pushf
pushf
aam
int3
enter
pushf
(bad)
sar
mov
jb
jb
test
mov
jb
xchg
imul
cld
xchg
add
ss
fld
sahf
out
sahf
adc
sbb
and
jecxz
jp
xor
test
jae
dec
pop
jp
sub
outs
cmp
xchg
adc
ins
repz
ror
xor
xchg
mov
fimul
mov
push
shl
xor
add
call
lahf
arpl
bound
aas
inc
retf
fs
or
xor
mov
sahf
add
std
add
loopne
push
mov
pop
and
push
je
pop
or
dec
add
inc
inc
outs
mov
cmp
sahf
jae
pop
pop
inc
fcomi
mov
dec
das
inc
aas
mov
pop
inc
push
push
add
dec
push
push
sbb
push
push
or
pop
cdq
xor
add
push
push
out
dec
cmp
adc
neg
or
adc
inc
mov
and
xlat
test
jno
mov
cmp
adc
xchg
or
xchg
xchg
push
das
pop
sbb
push
cwde
push
push
or
dec
push
dec
or
sub
push
dec
pop
push
dec
or
aas
popf
pop
punpckldq
inc
inc
invd
dec
in
adc
push
gs
imul
mov
inc
arpl
and
(bad)
in
nop
jo
push
je
jb
or
push
dec
push
pop
or
pop
inc
inc
push
fcomip
cmp
dec
dec
inc
dec
and
add
adc
or
cmp
aam
push
dec
push
push
push
inc
inc
ins
imul
imul
adc
idiv
outs
or
jb
jl
adc
sbb
xor
je
dec
outs
push
ins
jns
push
push
xor
jns
cdq
adc
add
pop
lock
je
pop
cmp
sub
lock
dec
inc
jb
jo
push
sub
nop
sub
or
outs
or
xorps
ins
inc
mov
sbb
ror
push
xor
pop
(bad)
xchg
adc
ret
cmps
push
push
inc
jmp
cwde
and
jg
dec
sbb
scas
sub
(bad)
adc
je
mov
ja
push
fdiv
je
fsin
mov
inc
push
ja
outs
addr16
stos
shr
inc
cmp
in
mov
mov
fwait
xchg
imul
and
jnp
mov
stos
push
or
ret
pop
push
(bad)
jb
jb
dec
mov
lods
jb
jb
test
mov
jb
xchg
nop
mov
jb
mov
jb
je
ins
jb
jb
fs
pop
pop
add
jb
call
jae
psllw
repz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
(bad)
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
(bad)
xlat
in
in
fcomp
fcmovu
in
in
(bad)
(bad)
in
in
rol
ret
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movs
cmps
cmps
in
in
test
stos
stos
in
in
lods
lods
scas
scas
in
in
nop
xchg
xchg
xchg
in
in
xchg
xchg
xchg
xchg
in
in
cwde
cdq
call
popf
sahf
lahf
in
in
add
in
test
in
mov
in
lea
in
jno
jae
in
in
jne
ja
in
in
jns
jnp
in
in
jge
jg
in
in
popa
bound
in
in
gs
out
push
add
jge
xchg
pop
jb
sub
jne
mov
(bad)
cmovb
outs
(bad)
push
or
nop
lock
cmp
sahf
jae
xchg
cmp
ret
mov
inc
xchg
jno
mov
push
mov
stos
loope
add
repz
movs
cmp
shl
out
out
add
xchg
aam
ret
cmps
xchg
adc
sub
ss
add
lods
retf
and
and
pop
push
or
add
or
outs
pop
je
loopne
dec
add
fadd
or
shl
xor
and
jmp
lahf
stc
sub
wrmsr
movs
sahf
ret
cmp
loop
idiv
mov
hlt
sub
or
ret
push
repz
mov
mov
adc
mov
jne
or
push
cmp
mov
jns
ror
adc
cmps
scas
add
dec
mov
cmp
ret
sub
sub
or
sti
inc
jle
xor
dec
adc
jecxz
sub
and
mov
inc
cs
out
add
jne
test
ret
cmp
popf
jmp
(bad)
pushf
ja
add
sub
dec
add
mov
add
shl
add
and
aad
movs
sub
adc
repz
xor
out
pop
fsubr
push
mov
add
loopne
call
outs
push
js
mov
add
mov
movs
jge
leave
adc
adc
or
call
and
jo
add
mov
xor
dec
push
or
or
add
ss
iret
retf
or
add
push
xchg
sbb
pop
int
jmp
xchg
mov
mov
sub
ins
mov
shr
inc
daa
jmp
mov
outs
scas
test
jl
xor
adc
(bad)
dec
and
in
leave
xchg
cmc
fcomp
repnz
sub
rcr
icebp
dec
sub
sub
and
xor
push
inc
inc
mov
add
shl
add
shl
addr16
test
enter
pop
aam
or
and
out
sbb
or
pop
ins
movs
mov
pop
pop
cli
or
int3
or
jne
cmp
add
pop
cli
or
xor
(bad)
cld
jge
or
xor
push
jne
scas
jl
push
push
fimul
retf
call
adc
ror
and
jecxz
pop
arpl
jmp
nop
in
pop
and
push
mov
ins
cmp
je
ins
jae
shl
add
add
mov
aaa
push
es
shr
add
aaa
inc
(bad)
sub
js
mov
push
mov
scas
lock
js
gs
and
pop
mov
adc
pop
dec
inc
or
pushf
inc
repnz
movs
movs
cmps
xor
jb
jne
nop
sar
nop
adc
cmps
mov
dec
nop
sbb
jne
push
popa
pop
in
(bad)
in
outs
addr16
es
call
test
push
bound
je
clc
adc
add
icebp
sub
inc
div
inc
dec
gs
jo
jns
ror
test
sub
inc
lahf
jb
push
sahf
test
or
outs
loop
jb
inc
leave
mov
dec
stos
dec
and
dec
mov
xor
or
mov
es
sahf
pop
mov
cmp
out
popa
mov
xchg
xchg
daa
pop
lods
and
stc
dec
xchg
stos
or
imul
outs
nop
cld
and
and
add
rcl
xlat
mov
dec
outs
jbe
jb
ins
outs
ja
mov
lods
mov
in
pop
push
mov
inc
lods
xlat
dec
call
leave
xchg
lods
sub
fs
leave
inc
repnz
jo
mov
fstp
push
mov
inc
fisub
scas
sub
mov
sub
test
popa
out
mov
into
push
stos
loope
scas
xchg
fst
rcl
cld
scas
pop
outs
adc
lds
pop
push
outs
imul
scas
cmps
ins
scas
les
xchg
push
jb
mov
aam
fadd
inc
out
jb
mov
xlat
dec
mov
sub
inc
adc
jae
push
imul
pop
dec
mov
mov
push
push
jb
ins
mov
and
push
push
inc
inc
arpl
mov
xchg
fistp
outs
inc
sub
shl
or
mov
mov
(bad)
xchg
jecxz
push
xor
inc
popa
jl
cs
fs
in
in
movs
or
cs
cmps
repnz
psignw
or
cs
fld
(bad)
int3
js
and
or
push
ror
add
xchg
xor
inc
popa
data16
ins
movs
out
push
and
outs
xchg
adc
in
imul
enter
mov
dec
adc
adc
vmaxss
inc
dec
dec
test
mov
repz
jne
jo
out
cli
(bad)
mov
adc
push
inc
sub
je
gs
addr16
cmp
xor
or
dec
or
test
mov
enter
sbb
sub
push
cmovge
leave
leave
in
in
or
unpcklps
iret
leave
leave
leave
sbb
and
lods
sahf
out
call
(bad)
mov
test
enter
cmp
pop
jp
add
dec
jns
outs
in
inc
xor
loopne
and
add
aas
dec
cmps
push
adc
pop
xlat
mov
iret
call
push
push
push
dec
outs
inc
outs
jne
int3
add
(bad)
fmul
dec
dec
in
(bad)
in
dec
fsubr
mov
aam
pop
push
sbb
aam
push
mov
jns
out
mov
mov
push
mov
jnp
sbb
push
loopne
sbb
and
div
aas
xor
ins
adc
push
cmp
push
dec
adc
sbb
ins
jne
mov
and
and
outs
arpl
scas
repnz
jp
mov
xchg
icebp
mov
out
loopne
test
or
adc
add
fs
js
pop
jno
pop
xchg
adc
mov
push
push
xor
pop
add
and
and
aam
clc
ds
sar
sub
cmp
out
cs
inc
ss
pop
enter
mov
fiadd
(bad)
cwde
mov
enter
rcr
push
push
push
inc
in
jb
aaa
sbb
push
jb
mov
and
xor
fcomp
cmp
enter
repz
push
movs
mov
fadd
repz
push
adc
and
adc
cmp
cmp
adc
sub
and
push
inc
imul
sub
jge
sbb
adc
imul
pop
test
adc
sbb
dec
repz
retf
adc
jl
or
ret
jno
xor
sbb
adc
add
add
push
mov
push
in
les
sbb
neg
sbb
dec
popf
adc
(bad)
mov
or
and
mov
sbb
inc
sar
mov
or
xor
jle
call
pop
pop
loop
push
xor
or
fidiv
and
mov
add
je
cmp
add
fbstp
xchg
in
int
jle
add
in
bt
jb
and
xchg
ret
das
push
pop
push
rol
pop
ss
adc
mov
add
xchg
or
inc
imul
mov
ss
or
icebp
and
mov
pop
pop
dec
test
lahf
mov
add
or
loope
clc
ffreep
add
xchg
sbb
lods
pushf
or
or
jge
(bad)
mov
add
xor
mov
jns
shr
and
xor
(bad)
in
out
add
lock
or
add
loopne
dec
mov
mov
enter
scas
add
cmp
enter
pushf
add
inc
and
ror
add
enter
and
nop
xchg
xor
fwait
pop
cmps
nop
rcl
lahf
and
loope
sub
sti
mov
or
(bad)
(bad)
cld
nop
rcr
inc
cwde
pop
pop
pop
fwait
add
(bad)
cwde
or
add
or
sub
cmps
int3
gs
movs
lods
pop
pop
and
xor
call
sub
clc
add
ror
sti
lahf
jge
jg
fdivr
jb
push
fiadd
jg
sub
add
pop
mov
adc
pop
idiv
xchg
sub
cmp
jg
aaa
dec
sub
out
sub
and
sar
je
sbb
mov
pop
cmp
jne
or
or
lods
add
cmp
add
(bad)
add
push
push
push
jl
xor
mov
inc
adc
or
sub
in
test
xchg
and
xor
fdivr
or
inc
add
cmp
cmp
je
sbb
lock
and
pop
popa
outs
movs
test
jl
or
add
sbb
jmp
sub
jne
outs
and
pushf
pop
or
scas
cmp
xchg
jno
jb
jl
mov
or
nop
call
or
aas
test
mov
retf
ret
aaa
sbb
xor
mov
pop
or
and
sbb
push
jne
cmp
inc
jmp
outs
call
fmul
or
mov
ds
xor
sub
inc
enter
ret
add
int3
fsubr
rol
shl
test
xchg
lds
mov
pop
or
push
mov
or
add
call
xor
fwait
ret
lock
out
aas
stc
push
push
cld
xchg
les
and
push
add
jne
pop
aaa
das
add
cld
mov
rol
xchg
dec
mov
and
inc
(bad)
loopne
hlt
sbb
pop
test
xchg
mov
or
or
movs
cmp
shr
nop
fild
mov
mov
jmp
ja
inc
cmp
jl
rcr
and
sub
or
dec
and
sahf
imul
cmp
sub
inc
mov
or
add
push
adc
and
cdq
lds
dec
scas
add
cmp
aam
cs
mov
cs
or
pusha
imul
sub
enter
hlt
add
mov
data16
mov
inc
cli
jns
(bad)
outs
mov
xor
sbb
add
adc
inc
and
mov
xor
push
xchg
mov
scas
or
and
push
pushf
push
and
cmp
add
push
push
add
imul
pop
(bad)
lods
and
rol
jle
add
lock
dec
inc
inc
add
arpl
adc
call
pop
sbb
scas
mov
gs
sub
cdq
sub
push
aad
movs
mov
cdq
adc
(bad)
mov
cmp
je
test
out
xchg
loope
mov
mov
das
(bad)
(bad)
pop
ror
jne
add
inc
pusha
sub
pop
mov
jmp
sub
mov
adc
inc
xor
or
and
fwait
ds
out
cs
jle
aad
inc
push
es
jae
push
js
test
mov
sbb
adc
out
call
or
cmp
aaa
and
call
inc
xor
dec
cmps
pop
rol
and
mov
in
jge
cli
add
sub
test
sbb
jb
ds
or
or
push
jmp
xor
jnp
jge
mov
inc
jmp
adc
sub
add
jne
mov
pop
jnp
jmp
sub
sbb
ja
add
mov
test
lock
hlt
lds
outs
aaa
xor
mov
mov
fsubrp
jmp
rcl
les
in
hlt
push
or
sub
ins
jbe
push
inc
or
daa
sbb
adc
test
mov
dec
add
cmc
leave
and
xor
xor
mov
cwde
data16
mov
dec
call
xor
push
nop
cld
push
ds
jne
clc
adc
es
(bad)
adc
cmps
je
ins
sub
jl
mov
imul
inc
pop
dec
call
add
sbb
push
cs
inc
dec
sub
or
jne
jmp
repz
jmp
loope
or
fcmovb
mov
inc
cmp
movzx
(bad)
jg
addr16
or
jne
or
jns
neg
inc
mov
dec
mov
ret
mov
adc
push
xor
jbe
and
add
pop
mov
push
jne
pop
pop
sub
sub
sahf
ja
push
add
mov
sub
jmp
mov
dec
jne
push
sbb
inc
pushf
mov
inc
cdq
add
pop
add
and
fldenv
or
lods
dec
scas
ins
data16
shr
mov
scas
jp
add
inc
mov
mov
mov
out
in
adc
xor
push
mov
xor
repnz
jno
ret
mov
pop
imul
sbb
adc
cmp
xor
je
mov
add
aam
pop
aas
retf
and
cmp
jbe
inc
add
cdq
xor
je
inc
dec
mov
neg
and
pop
inc
and
(bad)
je
dec
cmps
mov
inc
mov
and
add
or
pop
and
add
pusha
das
(bad)
mov
pop
push
or
fild
fadd
faddp
jne
adc
pop
push
lock
ins
shr
loop
mov
pop
sar
dec
add
fcom
xchg
iret
(bad)
fstsw
sahf
jae
fnstcw
add
ret
ffree
ffree
ffree
pop
jne
popa
jo
or
js
jge
mov
cmp
sbb
(bad)
xor
mov
sub
scas
inc
push
jmp
mov
fdivr
add
add
push
sub
xchg
xchg
int
(bad)
add
(bad)
sbb
and
mov
je
and
dec
cwde
fnstenv
push
ret
cmp
ja
jmp
hlt
xchg
ret
mov
mov
loop
pop
or
mov
loop
adc
mov
pop
inc
mov
or
mov
ds
jo
imul
wrmsr
repnz
mov
push
xor
stos
adc
push
jle
daa
push
dec
js
outs
sahf
sbb
mov
push
jle
popf
pop
push
push
mov
into
cli
ficom
lods
mov
loopne
das
je
outs
sub
mov
les
adc
ror
shl
enter
mov
call
fs
ret
xchg
fild
push
rcl
mov
das
xchg
lods
xlat
add
jae
(bad)
pop
and
ds
push
push
or
sub
(bad)
push
adc
mov
mov
adc
out
xor
adc
sbb
mov
or
icebp
xchg
push
sub
mov
mov
dec
dec
loopne
push
bound
jmp
push
test
dec
in
or
jo
lods
shl
xor
mov
adc
fucomp
add
pop
pop
adc
ins
lock
mov
clc
jge
xchg
add
dec
cmp
add
leave
call
jg
shl
and
inc
cs
mov
push
frstor
aas
sub
cmc
es
fdivr
add
call
cmp
dec
mul
and
fs
or
or
aam
adc
ins
jb
ror
daa
shl
enter
jg
mov
pushf
cmp
ja
mov
and
jg
cli
inc
ja
int3
es
jbe
add
int3
and
mov
or
pop
shr
pop
pop
xchg
ror
add
fwait
mov
jl
cmps
pop
push
cmps
and
(bad)
xchg
mov
jb
mov
rcr
mov
adc
add
jne
mov
out
ins
je
cld
xor
sub
loope
addr16
adc
popa
daa
sub
not
xchg
idiv
add
pop
(bad)
popa
call
push
or
test
push
or
je
adc
pop
ret
test
mov
jbe
and
pop
ret
inc
dec
xchg
js
inc
push
add
pop
aad
imul
mov
lods
and
mov
push
cs
sub
mov
rcl
stos
lea
add
lods
jmp
std
jo
sahf
xabort
dec
or
les
xor
pushw
rcr
jle
mov
push
mov
sbb
and
xchg
cmp
lock
push
sar
daa
enter
test
sub
xchg
sbb
sti
sbb
or
dec
and
cmp
add
sbb
fbstp
jnp
push
jo
add
(bad)
loope
jo
pop
add
cmp
inc
test
xor
aam
call
scas
rcr
aaa
loop
fistp
ret
or
pop
push
enter
jge
inc
mov
jo
or
mov
fild
movs
mov
dec
and
add
pop
xor
pop
test
xlat
add
stos
xor
into
loope
and
jg
xor
pop
add
ja
lea
sbb
jns
jb
push
test
add
cs
mov
or
iret
popa
cmp
push
adc
push
cmp
pushf
jmp
aas
or
enter
xlat
addr16
rol
sbb
in
add
adc
fsubp
fs
xor
mov
mov
mov
outs
call
mov
cmp
nop
push
push
hlt
clc
cld
push
jnp
adc
imul
inc
call
stos
add
mov
mov
out
inc
out
dec
or
xor
sbb
lock
sbb
adc
push
pop
add
rol
sub
mov
neg
xchg
(bad)
jg
fwait
cli
mov
leave
je
test
jne
add
sub
add
ret
or
lods
pop
ror
pusha
push
push
dec
shr
call
jl
adc
mov
jbe
adc
jbe
and
inc
popa
rcl
add
pop
je
mov
cld
xchg
jno
icebp
sbb
mov
ins
cli
mov
inc
cmp
push
outs
rep
mov
movs
test
pop
pop
out
or
add
xor
out
(bad)
mov
cmp
mov
sub
retf
(bad)
(bad)
mov
cwde
pop
jmp
(bad)
xor
inc
mov
fiadd
(bad)
call
dec
movs
push
out
js
sbb
pop
sbb
fisub
add
ficomp
add
mov
mov
mov
pop
xchg
ret
pop
aas
lds
int3
pop
outs
aas
lods
cmp
and
rcr
rcl
data16
sbb
sbb
mov
add
out
xor
int
iret
xlat
mov
xor
or
icebp
jg
enter
shl
cmps
mov
mov
sub
add
push
cli
punpckhwd
(bad)
jmp
pop
push
packuswb
int
rcl
ret
retf
scas
pop
mov
(bad)
hlt
daa
xor
pop
in
push
cdq
dec
push
or
and
xlat
mov
aad
adc
test
jmp
or
popf
inc
pusha
and
shl
js
fcomp
fcomi
inc
bound
rcl
fsubr
mov
dec
lock
icebp
pop
pop
mov
dec
inc
push
pop
mov
cmps
std
pop
inc
sahf
not
dec
je
mov
mov
and
icebp
loope
cmps
(bad)
push
lea
pop
lods
and
mov
push
test
add
jne
lea
inc
test
std
rol
lock
adc
aaa
shr
push
mov
dec
mov
cmp
and
or
inc
mov
retf
mov
sub
sbb
clc
pop
aad
(bad)
stos
mov
xor
xor
or
xchg
aam
into
jmp
and
sbb
ins
xchg
retf
push
addr16
jmp
mov
jle
aam
inc
mov
leave
dec
fwait
inc
aaa
mov
add
call
pop
jbe
mov
popa
sub
test
xor
inc
inc
inc
or
cmp
or
scas
sub
pusha
jb
pop
cmp
hlt
sub
mov
push
test
pop
mov
inc
je
adc
jnp
push
push
adc
and
loop
push
adc
(bad)
int3
or
push
jmp
pop
(bad)
and
add
lock
jle
dec
adc
adc
mov
mov
sbb
push
or
and
adc
cdq
cmp
rcl
xor
bnd
out
xor
out
sub
fcmove
jno
cmp
data16
lods
jmp
and
imul
mov
inc
mov
sub
mov
push
push
sbb
jae
fwait
outs
out
movs
fild
sub
pop
add
test
fst
mov
rep
sbb
jle
mov
jne
push
jnp
inc
push
pop
add
pushf
jmp
sub
xor
pop
sub
ss
sub
jmp
call
leave
cmp
jg
dec
loopne
mov
cmp
ret
je
adc
rol
ret
and
mov
(bad)
cmp
shl
pop
pusha
jne
lea
push
jnp
mov
and
loope
cmp
push
sub
out
loope
fs
loope
pop
popf
xor
jae
sub
and
add
xor
sbb
cmp
xchg
dec
je
out
pmuludq
stos
or
lea
sti
or
jmp
in
sub
and
sub
sbb
imul
lods
jmp
jo
xchg
xchg
bound
movs
jmp
push
in
xchg
jmp
sbb
jbe
xor
and
imul
lods
ret
pop
cmp
jbe
or
mov
jecxz
sbb
clc
cdq
mov
mov
lods
mov
enter
pusha
push
retf
mov
retf
or
mov
cld
dec
adc
retf
outs
inc
cld
call
pop
xchg
mov
xchg
test
ret
fwait
cdq
pop
js
dec
fdiv
or
out
rcr
shl
fwait
dec
mov
adc
ds
mov
popf
mov
push
mov
je
fwait
outs
fbld
mov
or
je
mov
inc
je
rcr
out
mov
dec
je
dec
cmp
mov
hlt
xchg
jbe
inc
ss
and
mov
ss
or
in
adc
pop
mov
push
push
cmp
inc
imul
dec
iret
ja
push
mov
lock
(bad)
or
ret
inc
fisubr
loopne
jne
mov
mov
mov
push
inc
stos
adc
jmp
stos
xor
into
ds
dec
sar
inc
call
add
mov
adc
mov
xchg
push
dec
pop
add
xchg
xchg
outs
inc
ja
pop
out
es
aam
pop
nop
add
rcl
pop
add
push
pop
adc
or
in
push
pop
cmp
fdivr
pop
into
hlt
mov
pop
jno
cld
pop
lock
sub
pop
push
sub
outs
pop
or
adc
dec
cmp
jmp
adc
dec
ret
pop
mov
add
shr
rol
aam
into
dec
das
clc
sbb
ins
aad
xchg
pop
lock
push
pop
jg
dec
lock
inc
add
push
comiss
adc
sbb
dec
and
lds
shl
push
sub
stc
ja
pusha
xor
xor
and
add
mov
and
add
pushf
jmp
retf
int3
mov
mov
push
test
push
pop
xor
pop
adc
clc
push
dec
pushf
inc
push
and
call
leave
call
out
rcl
dec
test
aaa
pop
dec
jle
or
and
pop
clc
stos
dec
jne
xchg
pop
add
cmp
lods
adc
pop
cld
push
data16
jmp
in
ss
xlat
mov
and
or
adc
dec
repz
in
xor
push
stos
(bad)
ja
ror
or
movs
in
jmp
jae
movs
lea
and
mov
and
adc
fcmovnbe
clc
je
sub
or
add
ret
jbe
xor
cmp
pop
push
jl
add
loopne
xor
mov
xor
jno
dec
movs
or
repz
call
pop
jmp
dec
pop
jl
sbb
iret
repz
fs
sub
push
xchg
xchg
movs
ficom
mov
shl
std
and
call
jns
in
in
in
shld
lea
jno
jo
jb
jecxz
sbb
js
or
push
test
cmps
jmp
and
nop
pop
(bad)
pop
dec
retf
xor
iret
(bad)
test
sub
mov
mov
lock
cmp
jnp
pop
js
mov
cmp
adc
fstp
inc
cmp
out
mov
xchg
es
add
pop
int3
or
push
out
xchg
inc
and
adc
push
repz
enter
mov
pop
stos
push
add
pop
or
loopne
pop
into
push
scas
jns
mov
movs
jae
adc
shl
jns
mov
pushf
push
jge
jns
nop
dec
nop
mov
in
inc
and
fistp
push
repnz
fcmovu
push
sub
icebp
imul
call
in
pop
scas
push
pusha
sahf
cmps
stc
cmp
loop
sub
jae
pusha
aaa
std
pushf
dec
ficom
ja
or
push
jns
in
mov
js
loopne
jns
sbb
loopne
loopne
fistp
enter
sahf
(bad)
pop
mov
xchg
xchg
or
mov
inc
iret
mov
adc
(bad)
sbb
nop
push
xor
stos
or
jne
(bad)
call
jp
mov
mov
neg
jmp
or
je
mov
stos
xchg
adc
rol
jecxz
mov
push
aam
adc
sbb
or
jg
bswap
(bad)
dec
add
pop
pop
ja
dec
sti
add
les
sbb
dec
es
call
test
adc
leave
shr
jge
adc
fimul
jp
sbb
ins
or
sbb
enter
test
hlt
sbb
xor
xor
mov
dec
mov
push
test
sti
mov
push
cs
mov
pop
repz
in
movs
arpl
mov
arpl
pop
or
add
xor
jle
mov
scas
ins
daa
dec
pop
or
(bad)
jge
rol
aam
data16
jmp
sub
shl
jle
loopne
lea
movs
lock
mov
sub
xchg
sbb
sti
add
ja
movsx
out
sbb
retf
popf
ins
pop
pop
fisub
or
rcl
cld
or
pop
cdq
xor
push
sub
xchg
and
stos
add
or
xor
jge
sbb
sub
std
mov
aam
and
clc
add
std
jl
mov
(bad)
ret
pop
cmp
sbb
stos
jmp
jge
call
inc
mov
loop
movlps
sbb
pop
inc
clc
dec
push
xchg
sar
ja
jmp
mov
or
loope
neg
jbe
sub
inc
das
clc
das
mov
mov
mov
mov
xchg
mov
ins
fdivp
adc
mov
add
es
jge
xor
je
mov
dec
mov
repz
inc
test
aam
jne
sbb
cmp
dec
pop
in
stos
xor
adc
(bad)
sti
out
dec
sti
add
je
inc
jne
pop
pop
push
call
repz
or
call
mov
loop
push
sbb
fwait
stc
icebp
sub
shl
add
push
push
cmp
(bad)
sbb
stos
test
popf
add
loop
ret
loop
adc
cld
hlt
mov
xchg
mov
and
lods
sub
and
fucomp
idiv
and
sub
inc
sub
sub
sub
sbb
and
sub
pop
sub
or
jge
push
xor
sub
xor
test
pop
push
adc
nop
push
push
pavgw
sub
add
repz
push
shr
xchg
sahf
add
add
lahf
aad
inc
repnz
add
adc
adc
in
xchg
add
adc
jnp
and
repz
sbb
mov
cmc
pop
in
into
inc
or
imul
sbb
or
and
sub
(bad)
adc
and
nop
in
in
jb
cmp
sbb
repnz
adc
and
mov
fs
sub
div
mov
jmp
out
inc
add
call
add
jmp
inc
or
and
jbe
or
ja
(bad)
je
stos
adc
dec
mov
or
ret
push
ret
inc
rcr
adc
rol
add
ss
push
enter
jne
adc
jle
jno
dec
js
sti
inc
clts
fsub
in
mov
int
rcl
xor
clc
xlat
cmp
mov
or
cs
lods
cmp
je
cmp
je
in
cmp
idiv
mov
push
add
inc
sbb
ret
inc
pop
aam
xor
cmp
je
out
jmp
sub
jb
xor
shr
mov
into
xor
add
sahf
and
mov
je
cmp
je
cmp
je
mov
mov
mov
cli
cmp
je
xchg
je
mov
jmp
inc
jmp
outs
add
adc
mov
loop
mov
shl
mov
jmp
loope
pminub
adc
sub
repz
adc
mov
lock
fsubr
enter
push
xchg
ffree
pop
fdivr
push
and
push
add
sub
jmp
adc
add
inc
shr
jb
mov
jle
ror
call
pusha
mov
test
mov
sahf
out
repz
push
sbb
jp
sahf
and
push
inc
dec
js
xchg
jns
cld
call
(bad)
sub
adc
aaa
jnp
cmp
cld
or
sbb
adc
add
sub
in
sbb
jmp
sub
mov
ret
mov
or
adc
out
mov
dec
jne
jmp
inc
bound
sar
inc
test
or
les
retf
xor
fs
xlat
cmps
imul
and
jge
mov
jne
jo
sar
ret
push
and
adc
mov
mov
jns
loopne
repz
jo
cmp
(bad)
jmp
jno
add
mov
lock
pushf
inc
nop
stc
lock
in
loop
pop
loopne
cmp
out
xchg
pop
push
jle
add
mov
fwait
out
mov
pop
test
push
jmp
aas
add
and
inc
push
fcom
ret
jle
sbb
inc
je
inc
add
pcmpgtw
mov
fld
sub
dec
scas
or
dec
pop
clc
adc
jae
scas
jno
inc
fabs
push
cmp
push
jg
ficomp
fcomp
fstp
mov
jbe
fucomip
add
or
mov
call
call
or
mov
fwait
mov
push
call
inc
fcomp
jmp
shr
sbb
jns
jno
lock
outs
(bad)
mov
call
jae
cmp
jb
mov
js
mov
push
and
pop
data16
pusha
xor
xchg
cmp
inc
clc
outs
ja
inc
icebp
not
mov
mov
mov
sti
rcl
add
cmp
add
add
lahf
or
daa
inc
ror
je
ret
pop
in
js
rol
enter
jl
mov
push
inc
sub
mov
loopne
jae
dec
add
dec
xchg
(bad)
loopne
fild
cli
mov
lds
sub
fidiv
jo
dec
popa
fwait
mov
mov
imul
loopne
pcmpeqw
dec
jne
jmp
mov
add
stos
push
cmp
aas
and
inc
jmp
dec
adc
or
pop
into
cmp
not
push
or
mov
mov
pop
sub
or
adc
daa
mov
aaa
jg
retf
f2xm1
fwait
add
pop
dec
sbb
push
std
in
jnp
ds
add
mov
daa
xchg
fs
push
call
sbb
cmp
icebp
sbb
fild
or
(bad)
out
fld
sub
sub
loopne
push
mov
push
clc
aas
jo
mov
add
aas
jmp
fstp
mov
test
add
mov
test
ins
and
or
jmp
lods
aaa
and
(bad)
jmp
pminub
inc
dec
add
fldpi
jmp
loope
inc
push
push
inc
imul
push
cmp
jbe
jb
aaa
add
dec
les
out
fldenv
repnz
mov
jmp
pop
sub
jp
call
popa
and
jl
add
and
test
adc
fsubr
fcom
sti
sbb
ja
add
add
xlat
cld
std
and
int
sub
(bad)
imul
mov
add
hlt
or
mov
ror
leave
jno
fadd
push
(bad)
js
pop
sub
inc
(bad)
mov
and
or
mov
mov
xchg
in
fmul
in
repz
or
int3
jae
sub
jb
mov
ja
jbe
xchg
mov
pusha
movs
and
fld
js
fcompp
(bad)
ja
and
xor
jns
jae
xor
dec
push
fstp
fwait
mov
scas
std
jg
test
or
inc
add
punpcklbw
push
enter
push
leave
(bad)
jle
das
add
(bad)
pop
lock
and
lea
(bad)
fld
inc
mov
adc
daa
pop
or
div
jge
adc
push
adc
adc
mov
clc
out
mov
inc
push
sbb
or
cmp
inc
mov
inc
push
call
(bad)
outs
xchg
imul
shr
pusha
jmp
adc
call
mov
or
add
xor
int3
lods
out
fstp
fwait
movs
add
inc
pop
pop
call
or
dec
fcomip
shl
add
mov
clc
popf
sbb
out
fdiv
adc
fst
mov
test
push
push
xor
or
std
popa
out
cwde
dec
dec
(bad)
mov
cmp
aam
ins
outs
(bad)
push
cmp
ins
fidiv
call
mov
inc
pop
enter
add
cs
push
mov
mov
inc
xchg
test
mov
push
adc
gs
scas
pop
pusha
dec
enter
idiv
add
jb
push
movs
jg
add
or
adc
mov
(bad)
sub
xchg
ja
imul
and
js
or
jb
sti
ins
je
mov
inc
(bad)
ja
adc
sbb
push
jg
add
inc
dec
jne
icebp
pop
pop
pusha
sub
dec
mov
aas
cdq
idiv
imul
and
ret
in
sar
cli
add
repnz
ds
ds
add
fsubr
scas
ret
or
add
retf
std
std
(bad)
push
int3
lock
aaa
rcl
in
icebp
and
jns
and
mov
js
nop
idiv
sbb
or
call
dec
in
test
jg
mov
dec
fiadd
or
loopne
inc
add
pop
or
out
dec
pop
sbb
mov
add
inc
add
in
lods
loop
and
dec
xchg
out
jo
lods
mov
jne
dec
neg
fisub
sub
imul
fcom
ss
int3
movzx
add
xchg
fisub
cmp
pusha
push
sub
mov
fsubr
cmps
inc
icebp
popa
es
dec
cmp
mov
popf
ins
(bad)
dec
cmp
jb
adc
sbb
jmp
add
sbb
clc
pop
cmps
jne
jo
inc
adc
or
pop
push
add
cmp
add
(bad)
push
sbb
push
popa
repnz
loope
ret
ds
cmp
jo
push
fwait
addr16
xchg
inc
xlat
xor
pushf
je
mov
push
or
sub
xchg
dec
mov
cli
sbb
push
adc
pop
fwait
aas
lock
fadd
xchg
retf
inc
add
aad
xchg
and
call
clc
sbb
cdq
and
ror
xor
pop
fidivr
rcr
and
add
adc
test
or
adc
mov
add
add
enter
loope
cmp
sbb
and
inc
das
push
sbb
add
rcr
scas
ins
push
aam
pop
fmul
push
push
sub
mov
into
sub
dec
into
push
sbb
and
arpl
push
dec
loope
mov
sub
cld
or
cld
and
inc
or
dec
jmp
or
in
bound
sub
ja
mov
dec
cli
or
add
push
cld
cmps
(bad)
xrelease
outs
enter
loop
push
stc
pop
cs
jl
hlt
idiv
lock
push
in
and
pop
test
lock
xor
in
ret
fldenv
inc
mov
js
sahf
cld
out
cli
repnz
mov
outs
fistp
test
lods
jg
push
shl
pop
cmp
outs
daa
jecxz
mov
mov
pop
xor
mov
mov
es
push
and
add
clc
cmp
enter
and
jno
add
jne
sub
adc
enter
or
scas
jmp
cmp
inc
xchg
add
sbb
and
in
out
add
cmp
and
addr16
std
sbb
mov
fnstsw
repnz
clc
enter
in
das
sub
inc
out
add
sub
adc
or
add
adc
inc
mov
mov
or
or
pop
adc
jne
pop
xor
xor
shr
dec
and
add
push
repnz
or
daa
jbe
rcr
daa
test
fsubr
lahf
xchg
gs
aam
fcom
push
push
adc
add
(bad)
in
lods
popw
icebp
mov
or
retf
pop
inc
shl
and
test
inc
sar
jge
or
gs
mov
push
cmovb
sub
cmp
imul
sbb
sub
pop
jmp
call
lea
loope
or
iret
ss
fisttp
ss
fs
faddp
and
inc
add
ja
fld
or
and
sahf
or
xchg
xchg
popf
push
or
or
inc
pop
or
or
push
pop
or
or
adc
sub
iret
repz
cdq
or
cmps
stc
add
cmp
out
mov
imul
pop
or
push
pop
pop
nop
and
push
jno
jo
cmc
icebp
mov
cmp
lock
mov
rcr
inc
mov
les
popf
dec
push
lea
je
xlat
push
in
enter
sub
cmp
not
xlat
push
(bad)
in
mov
sbb
xor
sbb
inc
in
mov
xchg
xor
dec
in
sbb
leave
mov
je
je
add
jmp
out
aad
loopne
jb
push
pop
and
mov
fsubr
xchg
pop
mov
clc
mov
mov
and
pop
sahf
fidiv
mov
ds
adc
or
xor
mul
and
add
push
jmp
or
fidivr
sub
push
cmp
dec
mov
pushf
mov
stc
inc
mov
dec
sub
adc
add
jne
rol
push
retf
sub
mov
xor
fiadd
repz
pop
in
pop
outs
inc
clc
(bad)
fnstsw
push
cdq
push
pop
and
ficomp
add
jb
cdq
adc
or
push
aaa
inc
xchg
push
push
rol
lea
add
js
xchg
retf
or
add
test
xchg
ret
stos
inc
adc
jne
xor
sub
and
sbb
mov
loope
inc
jns
and
test
mov
xor
jae
iret
jo
leave
sbb
cmp
nop
push
cmps
dec
push
xor
lea
movs
xor
xchg
lea
push
in
fadd
retf
loope
pop
xor
jo
xor
inc
mov
div
jmp
mov
sbb
popf
pop
imul
fnstsw
push
imul
dec
ins
mov
push
daa
jmp
mov
and
pop
pushf
and
mov
mov
add
pop
mov
mov
jmp
sbb
add
pop
push
or
dec
mov
repz
jmp
cwde
mov
adc
outs
fwait
inc
mov
cmp
add
add
neg
mov
adc
dec
and
mov
pop
adc
aas
clc
fnsave
add
push
adc
sub
dec
into
push
ja
fisubr
mov
xchg
and
call
mov
inc
jb
nop
pop
outs
add
inc
add
rol
add
inc
repnz
outs
in
adc
dec
push
jns
adc
dec
push
add
adc
sbb
xor
dec
or
test
xchg
jl
add
xchg
add
and
pop
add
and
add
mov
and
cmp
pop
cmp
je
cmp
jnp
aas
ds
add
push
xor
int
repz
mov
or
cmp
out
dec
jg
sbb
scas
in
push
cli
fstp
add
aam
add
xor
pop
adc
pop
das
popf
stos
or
add
add
jae
aam
or
or
inc
mov
dec
hlt
inc
sub
cmovnp
aas
pop
loope
adc
add
dec
into
loop
movs
in
inc
add
cli
cli
scas
lea
mov
pop
movs
add
jnp
cmp
inc
adc
add
xchg
sbb
cmp
xchg
sbb
mov
je
adc
inc
adc
mov
jb
je
adc
push
and
inc
enter
push
mov
sub
xchg
sbb
pusha
shl
xchg
bound
jns
mov
adc
pop
sub
jns
mov
in
and
mov
add
jns
lahf
rol
and
and
add
por
and
mov
stos
pop
pop
mov
inc
push
xor
add
dec
or
jno
stos
arpl
ret
push
xor
ins
int
xchg
xchg
les
sbb
add
aaa
push
sbb
dec
cmps
inc
out
add
cmp
add
sbb
scas
push
lock
xor
(bad)
je
pusha
lea
sahf
ficomp
pop
(bad)
lds
or
leave
mov
iret
nop
adc
leave
push
inc
push
jb
loopne
push
pop
cmp
jg
(bad)
inc
pop
je
mov
das
xor
inc
pop
ins
movs
hlt
cli
jecxz
pop
ds
jp
jbe
mov
test
ins
mov
pop
sbb
hlt
gs
mov
jno
or
pop
(bad)
clc
jmp
shl
aas
sbb
push
stc
out
pop
scas
jb
cmp
push
push
jecxz
jle
inc
pop
sub
adc
add
jmp
and
in
xchg
pop
inc
adc
dec
imul
add
add
mov
sahf
lock
mov
leave
in
and
add
xor
cmps
(bad)
lock
fs
adc
iret
or
jecxz
test
mov
hlt
hlt
hlt
mov
hlt
jmp
xchg
mov
jne
jne
push
shl
sbb
and
lods
mov
shl
jns
sbb
call
mov
shl
mov
sub
sbb
jl
(bad)
jne
inc
mov
jbe
sub
mov
mov
and
dec
mov
jg
shl
and
je
dec
je
adc
cmc
or
fbstp
or
push
jmp
mov
and
sbb
adc
loopne
into
adc
jns
test
mov
add
add
jmp
idiv
jmp
les
data16
jne
mov
jl
adc
adc
sti
dec
xchg
pop
add
mov
mov
or
add
cmp
add
add
inc
mov
sub
rcr
xchg
scas
pushf
add
mov
pop
mov
or
pop
mov
lds
ret
xlat
sbb
push
bound
or
test
shr
fmul
mov
call
jne
cmp
jg
out
sub
dec
cld
cdq
xor
jge
movs
lock
add
mov
shl
out
and
cld
add
neg
repnz
gs
mov
aam
aam
pop
mov
lock
jno
pop
fwait
fwait
inc
cmp
div
cmp
out
in
sahf
add
ficomp
add
add
test
faddp
sbb
out
pusha
test
js
sub
fisttp
mov
bound
cmp
addr16
rcl
add
out
adc
mov
fdivr
or
sti
cmc
add
mov
rcr
add
out
mov
lods
lods
test
jle
mov
jbe
mov
push
in
mov
(bad)
out
mov
push
addr16
in
add
adc
dec
enter
(bad)
jmp
add
call
add
sub
jb
and
mov
cmp
jne
es
call
out
jmp
cmp
jmp
in
jecxz
mov
push
sub
mov
(bad)
and
or
mov
bound
loopne
ja
cmp
jl
imul
jmp
into
mov
xor
lock
add
jl
and
enter
(bad)
fs
jno
mov
adc
or
sbb
xor
ins
cmp
int
push
dec
push
test
pusha
inc
push
push
and
dec
push
test
clc
adc
dec
sti
add
jne
jmp
adc
aaa
inc
fcom
pop
js
vcvtss2si
adc
mov
xor
aam
in
movs
je
mov
xchg
jne
mov
and
out
icebp
and
out
dec
pop
cwde
pop
push
inc
daa
add
and
scas
dec
xor
pop
and
mov
xor
(bad)
cmps
adc
xor
mov
push
sub
mov
mov
enter
push
sub
jo
xor
add
or
mov
xor
loop
fisttp
divps
cdq
xor
or
jle
cmp
je
test
enter
add
xchg
pop
xor
add
push
cmp
push
test
mov
cmp
enter
outs
je
(bad)
ja
xor
shl
jne
adc
lahf
and
mov
std
(bad)
repz
xchg
adc
or
ret
lahf
mov
xor
mov
inc
pop
daa
add
daa
pop
push
push
or
xor
xchg
sbb
or
or
ret
adc
inc
sub
dec
arpl
mov
add
push
out
imul
xor
ret
xor
push
repnz
and
pop
ins
xchg
pop
and
stc
sbb
or
pushf
enter
or
sahf
pushf
or
add
sahf
call
xchg
push
aaa
aas
cmps
inc
test
or
push
data16
push
scas
sub
sub
pop
add
and
inc
or
sub
sbb
jb
sbb
cld
(bad)
mov
or
and
call
fisubr
jle
scas
mov
push
sbb
add
or
ds
and
(bad)
push
jne
adc
mov
test
aad
test
or
add
mov
jl
dec
mov
jno
(bad)
ins
pushf
adc
dec
inc
aaa
mov
xchg
add
add
add
pop
fs
inc
mov
xor
inc
adc
dec
outs
add
adc
popf
fs
scas
sub
push
add
cs
push
mov
lock
mov
inc
xchg
mov
push
push
push
mov
push
push
push
inc
inc
dec
retf
loopne
jl
sub
inc
lock
xchg
clc
cmp
mov
dec
and
or
test
pop
add
pop
push
xchg
push
in
popa
pop
popa
fldcw
or
add
loope
sar
dec
call
dec
xchg
call
push
mov
and
pop
sbb
add
mov
mov
sub
pop
je
xchg
cmp
xchg
or
jne
add
(bad)
gs
add
scas
mov
sbb
dec
in
sub
dec
fcom
out
inc
(bad)
mov
mov
js
add
mov
or
cs
in
(bad)
das
push
loope
loop
cmps
mov
sar
pop
cmp
mov
dec
mov
push
push
mov
inc
fcomp
mov
inc
mov
fdiv
xor
hlt
push
push
add
jb
jg
das
xor
pop
push
xor
xor
push
and
mov
loop
jnp
xchg
cmp
or
and
movs
jb
push
repz
or
paddusb
sub
or
inc
je
or
je
xchg
xor
push
xchg
in
les
cmp
mov
push
sbb
inc
jmp
inc
adc
or
test
add
xor
xor
or
and
out
xchg
in
add
iret
mov
outs
mov
sbb
adc
adc
in
shl
push
mov
pop
jns
adc
ret
add
gs
iret
add
mov
push
je
jne
inc
push
jmp
int3
aad
jp
fcom
leave
mov
xor
xchg
xor
dec
and
sub
inc
fsubr
rol
in
mov
add
aas
add
test
es
mov
sub
cmp
test
sbb
in
xor
test
cmp
test
mov
jge
mov
test
adc
repz
test
aaa
mov
in
mov
xor
and
jmp
sub
shl
dec
mov
cmp
sbb
out
push
add
pusha
sub
icebp
mov
dec
or
pop
mov
sub
fs
bound
js
jnp
inc
mov
es
into
or
or
loop
rcr
stc
jno
add
xchg
sub
lock
and
aas
or
xor
sub
pushf
and
jle
mov
mov
or
scas
loope
mov
rcr
pusha
xchg
lock
js
xor
or
add
xor
sub
daa
sub
adc
push
cs
or
jmp
loopne
pusha
into
or
jl
je
js
test
jle
push
fdiv
cdq
aad
sahf
aam
ins
test
add
or
lock
inc
mov
fcomp
nop
lahf
sbb
hlt
call
aas
cwde
loopne
and
push
sub
mov
inc
shl
pushf
xor
adc
inc
mov
les
adc
push
push
cmp
add
ds
mov
jle
mov
dec
jge
inc
in
jo
enter
cmps
mov
imul
xor
xor
loop
or
ror
jb
or
mov
push
or
loope
jno
or
add
cs
jnp
mov
test
add
xchg
mov
sbb
push
inc
sub
mov
xor
sbb
mov
pop
test
cmp
jg
xchg
inc
adc
adc
or
loop
sub
adc
cmp
adc
ret
inc
es
aam
ret
mov
rep
out
xchg
daa
mov
add
cmp
mov
jnp
cmp
nop
and
dec
push
sbb
add
push
adc
add
cs
or
cmp
ss
cmp
xor
pop
xchg
gs
sti
popa
add
cvtdq2ps
jne
xchg
hlt
les
prefetch
or
xchg
sub
out
and
inc
mov
shl
dec
enter
mov
mov
dec
or
loope
enter
pop
mov
cmp
jg
cmp
sbb
or
mov
push
jmp
add
and
inc
cmp
sbb
das
rol
push
inc
add
sbb
retf
sar
call
jmp
mov
sub
mov
movzx
dec
push
push
pop
shr
fisttp
pop
outs
jmp
adc
pop
mov
add
or
sbb
push
cld
add
dec
loop
adc
loope
mov
pop
pop
sar
cld
mov
mov
or
sbb
test
jge
clc
mov
call
mov
sub
mov
pop
add
loopne
adc
mov
das
pop
lahf
and
int3
mov
add
push
mov
sub
sbb
mov
xchg
xchg
add
mov
jb
mov
push
stc
inc
(bad)
in
cmp
je
jmp
xor
inc
jae
jb
xor
and
sbb
add
push
cmps
imul
push
mov
inc
retf
lds
sbb
(bad)
mov
rcr
inc
cmp
or
in
lods
xor
outs
cmp
pop
cld
adc
movaps
jnp
mov
xor
inc
loopne
mov
push
mov
adc
popa
popf
xor
mov
mov
or
jecxz
adc
cli
mov
and
or
add
mov
gs
sbb
jnp
idiv
mov
push
(bad)
enter
sub
(bad)
jno
call
mov
lea
outs
in
scas
jmp
mov
nop
jge
mov
pushf
out
jb
mov
in
xchg
mov
js
inc
sahf
ret
inc
in
cmp
movs
xor
push
or
ror
xchg
adc
cmp
iret
std
inc
lods
add
std
sub
ss
add
jae
imul
mov
adc
mov
fwait
ret
hlt
add
mov
in
lock
push
mov
xchg
and
and
lahf
and
repnz
cmp
(bad)
pop
mov
ins
fcom
and
sahf
fdiv
cmp
addr16
dec
sar
xor
test
sbb
sub
scas
sub
add
xchg
(bad)
fdivr
ss
adc
jne
cmp
or
pushf
cmp
mov
cmp
push
mov
mov
test
jb
inc
stc
adc
test
nop
ficomp
add
test
outs
jb
push
aaa
inc
mov
inc
mov
sub
lock
adc
fsub
aaa
and
adc
and
test
loopne
push
jb
test
adc
xor
dec
ret
sub
sbb
cmp
iret
in
jns
cmp
jne
sub
push
dec
fistp
push
sub
mov
retf
cmp
dec
pop
loopne
call
sbb
mov
add
sbb
sbb
xchg
sub
test
dec
retf
pop
stos
push
je
jne
ds
mov
mov
xor
mov
dec
inc
jg
add
or
jns
dec
sub
(bad)
sbb
loopne
xor
mov
fdivr
adc
jb
xchg
adc
rcr
push
ret
xchg
movs
(bad)
nop
xor
nop
ss
jne
mov
ret
or
(bad)
or
js
push
call
hlt
fchs
aam
rol
cmp
mov
or
ret
inc
sbb
ds
and
pop
or
cdq
sbb
inc
jne
ins
or
cwde
jl
cmp
(bad)
mov
add
dec
(bad)
test
mov
movs
sbb
pop
aam
push
je
dec
retf
adc
jnp
mov
adc
sbb
mov
or
push
je
xchg
das
add
and
lods
fisttp
mov
mov
ret
lock
mov
xchg
add
add
fnstcw
jne
cmp
pop
pusha
mov
dec
adc
ss
ror
ror
pop
pop
dec
push
pop
lock
xor
std
mov
rcl
fdiv
mov
into
hlt
xchg
sbb
clc
imul
ds
cmp
pop
dec
xor
sbb
jge
in
test
mov
mov
sub
in
bound
xlat
dec
inc
inc
adc
adc
jmp
(bad)
setge
push
mov
jo
jmp
dec
pop
in
jmp
jo
dec
fmul
(bad)
fisttp
xchg
fld
sub
sub
mov
das
push
sub
xchg
inc
push
shr
cmps
icebp
lock
lea
sbb
sbb
sbb
sbb
(bad)
pop
add
inc
xchg
adc
sbb
add
jl
clc
push
inc
push
inc
cmp
jg
movs
push
dec
je
adc
add
adc
adc
clc
(bad)
cmp
xchg
inc
push
call
inc
push
xchg
fiadd
sub
add
inc
inc
stos
inc
adc
adc
pop
aas
inc
test
or
cmp
cmp
lock
dec
dec
cmp
jge
jmp
or
sbb
sub
pop
adc
loopne
cmp
add
mov
xor
(bad)
cmp
les
movs
dec
dec
sbb
mov
cmp
fnstenv
sub
pop
ret
add
cmp
repnz
dec
mov
jle
push
pop
jno
sahf
sbb
dec
jge
mov
xor
add
adc
inc
nop
in
outs
(bad)
fidiv
or
das
in
int
inc
jle
adc
push
ret
jge
mov
add
arpl
jge
daa
pusha
jno
rcr
lock
sbb
inc
je
mov
sub
stc
sti
icebp
mov
mov
ja
sbb
xor
js
mov
pusha
jge
push
jecxz
inc
mov
stos
jg
sbb
inc
dec
dec
or
cmp
in
mov
rcr
mov
hlt
dec
mov
xor
pop
sbb
addr16
movs
das
lahf
push
inc
add
pushf
shl
sti
dec
cmp
dec
xor
inc
jae
and
mov
adc
and
cmp
add
xchg
xchg
(bad)
push
dec
fstp
or
mov
jne
lds
cmp
dec
sbb
dec
push
dec
push
aam
stos
out
retf
add
lds
cmp
or
mov
push
cs
mov
and
add
dec
int
call
and
push
scas
out
data16
enter
dec
add
xor
add
retf
pop
cwde
int3
loopne
sub
pusha
cmp
repz
sub
jo
sbb
dec
(bad)
mov
iret
mov
mov
addps
inc
push
in
push
dec
or
or
sub
fisttp
clc
aaa
push
or
sub
sbb
inc
call
cmp
inc
fdivr
sbb
xor
dec
jne
inc
dec
dec
bound
inc
in
nop
mov
add
in
(bad)
pop
mov
add
lock
and
ja
dec
adc
jmp
sar
loope
cld
xchg
shr
mov
cmp
push
jmp
arpl
add
push
cmp
clts
mov
push
dec
popf
test
lods
xor
and
or
fisub
aam
and
outs
rol
clc
and
jne
push
and
dec
adc
inc
je
outs
sbb
dec
lods
sbb
hlt
xchg
(bad)
lock
adc
test
mov
add
push
lock
mov
ins
sbb
sbb
mov
sub
push
in
inc
call
mov
pop
mov
lfs
pop
sub
push
pop
lahf
in
push
sbb
das
rcr
sbb
and
loopne
dec
fwait
in
pop
test
mov
stc
movs
sbb
mov
add
(bad)
xchg
jbe
test
sar
and
inc
sub
fmul
int3
mov
sbb
adc
enter
adc
enter
add
addr16
push
movs
sbb
add
les
ret
enter
adc
hlt
mov
and
mov
bound
call
(bad)
daa
mov
push
adc
cmp
jl
lock
adc
pop
jns
out
lods
pop
add
adc
sbb
lahf
push
push
ins
outs
push
or
fs
(bad)
cmp
inc
sub
outs
enter
add
daa
jo
pop
lods
pop
imul
push
push
aaa
and
and
fcomp
sub
cmps
xchg
or
cmp
daa
mov
jae
add
clc
stos
mov
shl
bswap
sub
or
fist
mov
jl
and
sbb
fwait
loope
test
lock
and
inc
adc
mov
pop
mov
adc
pusha
push
add
jne
push
inc
mov
in
movs
mov
push
mov
int3
xchg
adc
add
pushf
add
push
xchg
call
add
arpl
add
inc
or
(bad)
ds
sbb
mov
test
arpl
xchg
(bad)
sub
in
in
sbb
xor
in
in
sbb
mov
les
adc
and
das
enter
movs
daa
mov
je
popa
jae
xchg
cld
outs
inc
sahf
add
add
pop
push
or
fs
add
popa
movs
outs
jno
xchg
jb
retf
pop
shld
inc
repnz
xor
clc
sub
xchg
mov
ret
cmp
loope
or
lock
add
push
cmc
mov
fisttp
fidivr
lock
add
scas
adc
or
mov
pop
push
xor
inc
dec
neg
js
cmp
cmp
je
and
pop
ss
add
dec
jmp
add
rol
dec
mov
inc
jl
(bad)
call
or
xor
inc
jmp
pop
push
sbb
lods
mov
adc
push
ret
stos
adc
rcl
enter
pusha
mov
je
adc
arpl
test
xchg
sbb
and
js
fmul
outs
mov
mov
inc
xchg
cld
jmp
adc
dec
or
mov
call
mov
lea
cmp
xor
sbb
push
lods
ss
and
adc
jmp
test
cdq
cmp
lea
push
inc
ret
jmp
mov
in
sahf
xor
mov
add
inc
cmp
fisttp
in
ret
popf
sub
dec
mov
xchg
cmp
outs
(bad)
mov
xchg
adc
inc
in
adc
sub
add
add
out
cmps
adc
int3
sahf
mov
mov
push
push
or
inc
pop
in
xlat
and
add
sub
pushf
or
cld
adc
test
popa
ins
mov
add
clc
jp
or
pop
or
pop
sbb
xchg
mov
dec
mov
loop
add
xchg
mov
xor
ins
jmp
ss
bound
or
icebp
ror
cmp
mov
or
jl
pop
add
ret
(bad)
push
jp
dec
pushf
ret
push
fwait
jae
out
(bad)
movs
mov
or
push
inc
and
or
jo
xlat
or
test
jo
arpl
jp
das
cmp
push
dec
ja
adc
and
sbb
xchg
mov
inc
enter
mov
inc
add
test
sbb
push
cmp
inc
cmp
jne
mov
mov
push
lds
mov
or
shl
jecxz
sub
inc
jmp
pop
loope
call
test
inc
hlt
push
mov
push
loope
inc
ins
xchg
add
or
add
hlt
adc
push
inc
cwde
mov
loope
sbb
mov
mov
push
mov
mov
leave
mov
aad
mov
ret
mov
out
mov
and
mov
or
xor
movs
cli
mov
lock
and
lea
sub
xchg
(bad)
sbb
adc
pop
inc
xor
and
dec
mov
div
cmp
cmp
add
xchg
inc
cmp
rol
dec
sbb
jbe
pop
cmp
sbb
jb
and
pop
(bad)
out
mov
mov
push
adc
fnstcw
push
imul
mov
mov
jl
pop
push
mov
dec
jb
push
sbb
rcr
adc
adc
nop
call
pop
xchg
and
pop
inc
outs
and
add
or
add
mov
adc
rol
or
xchg
ret
les
je
or
cmp
mov
popa
sbb
idiv
xor
ins
jne
mov
jge
sub
test
dec
cmp
test
inc
sbb
jae
push
push
pop
add
push
or
xchg
std
xchg
inc
dec
cmp
adc
shr
mov
movs
pop
xchg
cwde
push
ja
pop
ds
lods
out
mov
inc
or
aas
pushf
or
and
inc
cmp
imul
rol
sbb
jecxz
xchg
pop
xor
mov
push
dec
add
mov
int
jg
dec
or
inc
xor
dec
in
inc
xor
lock
ror
cmp
mov
jmp
dec
popa
sub
lods
add
inc
adc
dec
lahf
mov
push
sbb
push
push
sub
add
in
or
pop
cmp
ins
nop
adc
jo
add
iret
push
xchg
adc
cmp
fcmove
sbb
imul
or
fdiv
add
repnz
fld
aam
mov
mov
jnp
mov
rol
repz
jnp
out
cmp
mov
out
mov
loope
pop
xor
pop
inc
adc
or
lock
xchg
add
jb
xchg
mov
data16
mov
cdq
pop
dec
int3
or
and
dec
add
mov
xchg
mov
fwait
inc
mov
jl
stos
mov
es
fmul
cmp
out
adc
add
cld
push
leave
or
xlat
adc
push
and
adc
mov
scas
xchg
cmp
and
in
nop
push
dec
push
cmp
dec
inc
nop
xchg
ins
ins
jle
cmps
fwait
out
mov
xor
mov
push
in
je
mov
cmp
pop
test
aad
pop
cmp
pop
xchg
repnz
daa
je
mov
dec
sub
adc
push
popa
faddp
stos
cs
mov
adc
fdivr
mov
jle
xchg
jle
xchg
mov
pop
(bad)
cmp
std
dec
xchg
inc
push
dec
mov
add
pop
popa
inc
(bad)
push
xchg
ret
push
in
hlt
cmp
pop
pop
add
xchg
mov
stos
jae
push
in
dec
adc
xor
add
inc
dec
aam
hlt
call
pop
mov
inc
pop
adc
xchg
enter
add
xor
cld
adc
or
lods
jae
xchg
pop
xchg
mov
jl
pop
and
mov
sbb
jecxz
sub
xchg
or
or
adc
jg
pusha
inc
inc
jp
jo
xchg
pusha
(bad)
sub
fcomip
mov
mov
ret
std
inc
jge
mov
xchg
pop
fs
or
in
cmp
sub
js
mov
arpl
mov
data16
lea
femms
jb
(bad)
sub
sub
not
loopne
xchg
jae
mov
and
mov
cmps
push
sbb
adc
add
xchg
adc
dec
jge
cs
ins
pop
adc
and
jo
je
or
cmp
pop
jb
(bad)
clc
jge
(bad)
inc
leave
shl
in
dec
xchg
mov
push
clc
xchg
sub
mov
arpl
imul
repnz
hlt
jb
dec
push
enter
push
retf
xor
shl
clc
test
(bad)
mov
(bad)
cmp
jle
iret
add
je
pop
dec
push
sub
call
pop
movs
jp
aas
je
(bad)
sbb
imul
aaa
in
jge
arpl
lods
mov
push
mov
pop
outs
fstp
ds
push
mov
in
dec
adc
mov
cld
clc
jecxz
in
xlat
and
xchg
mov
mov
add
add
push
xor
js
dec
clc
sub
push
sub
shr
xchg
xor
jo
or
(bad)
xor
xor
mov
cmp
jbe
push
or
or
jo
aaa
or
adc
int3
and
pop
inc
jl
pop
and
rcr
lock
mov
repnz
lock
lods
fisubr
sub
neg
aam
pop
push
popf
sbb
test
inc
lods
pop
add
xchg
dec
sub
xchg
jo
loopne
sbb
add
jo
xor
popa
pop
hlt
ret
nop
out
xchg
sbb
or
mov
mov
ficom
sbb
and
jmp
jmp
lods
jp
movs
jno
in
pop
je
fs
inc
push
je
xchg
ja
sar
fdivr
add
bound
ins
and
dec
movs
test
or
es
imul
mov
and
mov
call
inc
cmp
mov
push
xchg
add
adc
mov
xor
adc
pop
lea
loop
push
pop
in
retf
mov
xor
aam
pushf
push
mov
inc
rcl
aas
inc
ins
movs
enter
add
jns
and
pop
in
pop
or
mov
test
xor
push
mov
out
dec
or
jg
es
arpl
mov
pop
mov
jb
js
adc
addr16
(bad)
lods
add
scas
push
in
bswap
ret
das
sub
push
adc
aas
mov
sbb
adc
xchg
add
dec
pop
mov
sub
hlt
lock
or
adc
push
jo
psubsw
nop
mov
add
add
add
or
mov
pop
pusha
pop
mov
sub
sub
les
dec
rol
cmp
add
and
jb
je
cmp
mov
xor
out
vmovups
pop
pop
in
push
call
mov
loop
repnz
ins
push
xchg
xor
pop
push
inc
mov
dec
push
sbb
sbb
jmp
mov
(bad)
sbb
(bad)
rcl
cmp
out
push
push
push
sbb
mov
rcr
adc
std
outs
ins
sbb
pop
xor
shl
or
mov
push
sbb
in
xchg
mov
call
push
xor
in
ja
ins
inc
movs
sub
or
pop
icebp
mov
push
sub
nop
daa
xchg
dec
ins
inc
je
dec
rcl
enter
add
dec
inc
jne
mov
and
jbe
movs
jb
lea
and
and
pop
pushf
cmp
fistp
ins
je
adc
xchg
ja
xor
cs
or
nop
ja
inc
ds
mov
addr16
in
cwde
jp
rcr
cmp
js
les
out
in
mov
cld
daa
out
in
lods
call
addr16
jns
mov
mov
enter
int3
jl
sbb
xor
ins
xchg
out
daa
iret
fs
ss
ins
enter
add
mov
push
cs
js
jl
iret
push
push
dec
push
clc
jae
stc
dec
fmulp
xchg
pop
inc
inc
in
mov
jne
je
sbb
pop
cmp
not
mov
xor
jl
xchg
ja
mov
sub
sahf
ja
mov
(bad)
std
out
sbb
xchg
ja
dec
sbb
adc
inc
mov
adc
je
fdiv
mov
add
add
(bad)
xchg
out
movs
mov
dec
clc
push
and
pushf
cmp
lahf
hlt
enter
in
xor
sbb
mov
call
in
cmp
loopne
add
inc
fdiv
dec
sahf
xchg
jnp
clc
aam
xor
xchg
ja
mov
iret
lods
jb
jbe
cwde
jne
xchg
push
repnz
inc
xchg
mov
sub
in
jl
dec
mov
and
dec
and
sahf
add
sbb
daa
jg
mov
inc
xor
retf
scas
jno
sar
mov
push
aam
cmp
nop
inc
push
sbb
inc
push
cmp
je
jl
inc
pop
lahf
cmp
fcomp
loopne
xchg
add
test
sub
jno
adc
or
call
and
ins
or
cmps
cmp
inc
or
fsubr
cwde
sbb
push
jb
mov
lock
psubsb
sub
in
jge
outs
dec
adc
je
out
sub
and
sbb
adc
fnstenv
ins
pop
ret
dec
(bad)
and
or
mov
arpl
add
pop
mov
aas
xor
pop
adc
mov
pop
rcr
xchg
and
pop
lea
xlat
xchg
inc
and
out
or
(bad)
mov
pushf
add
sub
sbb
add
in
push
or
out
jl
ret
mov
into
test
clc
and
out
clc
lea
shl
cmc
sbb
adc
mov
std
pop
jne
or
clc
xlat
mov
sbb
rol
sbb
adc
or
cld
in
ins
retf
sbb
ror
fninit
iret
jne
(bad)
adc
pusha
nop
fild
jbe
push
in
cs
inc
jbe
push
nop
inc
(bad)
adc
mov
rcr
push
das
inc
je
or
fs
pop
in
jmp
jmp
into
loopne
cmp
cmp
fcom
mov
shr
mov
clc
adc
retf
(bad)
jnp
jle
add
ret
or
jns
shl
jg
jo
mov
and
mov
jae
sub
es
cmp
mov
fs
dec
mov
dec
es
push
xchg
pop
dec
es
fs
fs
es
fs
ins
mov
xchg
dec
jl
test
test
mov
int3
xchg
mov
jae
pop
es
mov
pop
es
pop
es
call
in
push
pop
es
fadd
sar
xchg
cmp
dec
jbe
aam
add
pusha
outs
(bad)
bound
rol
push
rol
inc
xor
or
dec
mul
retf
out
add
outs
je
fs
jne
das
pop
jle
repnz
jne
inc
imul
fs
das
(bad)
int3
pop
outs
dec
jb
pop
outs
jb
leave
ja
enter
inc
jb
ins
push
je
pop
push
and
mov
ss
(bad)
jns
fld
inc
jae
cmp
cmp
lea
out
jp
push
jb
jo
not
imul
adc
outs
inc
jmp
sbb
loope
adc
pushf
idiv
int3
int3
push
bound
ins
aaa
enter
js
inc
cld
push
pop
push
retf
push
pop
cmp
shl
data16
push
jl
repz
mov
int3
js
out
cs
push
(bad)
popf
lock
daa
loopne
shl
fadd
aas
es
push
adc
inc
cmp
arpl
push
push
pop
xor
imul
jae
aam
add
jecxz
fdivr
xchg
test
mov
cmp
in
arpl
and
ror
inc
stc
mov
rcr
cs
sbb
int3
xchg
cmp
iret
enter
inc
jge
in
xor
pop
jb
mov
not
and
mov
daa
sbb
fucomi
sub
iret
xor
cs
fs
pop
mov
iret
movs
out
lods
mov
sbb
xor
shl
gs
nop
adc
and
sub
ret
or
inc
jb
push
neg
adc
and
fimul
jo
out
adc
nop
adc
dec
xchg
add
leave
inc
and
popa
mov
add
xor
pushf
pop
mov
sbb
ins
ins
repnz
pop
pop
scas
add
adc
mov
(bad)
aam
xchg
cld
jle
jnp
int
jo
movs
cmc
cmp
in
push
add
in
pusha
movs
mov
retf
fcom
(bad)
mov
mov
pop
adc
mov
repz
inc
jb
in
inc
in
mov
cwde
in
add
and
loopne
and
nop
add
xor
or
cwde
and
nop
adc
cmp
inc
retf
adc
ins
jl
add
fist
jbe
enter
jle
test
inc
pusha
adc
jno
sar
(bad)
nop
xor
cmp
popa
jne
mov
sbb
or
es
sub
push
jle
pop
add
jne
sub
xor
je
dec
je
sbb
int3
shl
push
pusha
mov
call
add
mov
div
mov
mov
pop
nop
jge
pop
jb
clc
mov
inc
jae
clc
pop
xchg
cmp
mov
jns
aam
(bad)
call
dec
jle
xchg
dec
in
mov
jg
xchg
dec
call
mov
inc
ins
je
lods
test
jae
loopne
inc
mov
in
loopne
adc
add
cs
cli
enter
pop
adc
shr
inc
xor
fmul
aaa
pop
pushf
jmp
jns
(bad)
cld
sbb
js
retf
add
stc
cwde
add
loopne
or
mov
sub
cs
jbe
(bad)
loopne
jmp
enter
jmp
adc
jae
jmp
ja
inc
outs
mov
stos
adc
lahf
shl
ds
inc
es
test
les
jbe
xor
scas
add
push
jge
ja
repnz
cs
mov
nop
jb
adc
idiv
push
dec
clc
mov
pop
pop
adc
add
add
add
adc
add
sub
cmp
dec
mov
add
jecxz
loope
data16
inc
pop
xchg
mov
scas
or
(bad)
pushf
(bad)
xchg
jne
pushf
xchg
sbb
xor
sbb
xor
mov
rcl
imul
fcomp
pop
mov
mov
cld
test
adc
and
push
add
pop
jl
xor
sti
adc
inc
push
or
test
jb
pop
or
aaa
icebp
les
add
xchg
clc
jmp
and
ror
sbb
cs
nop
jl
inc
in
mul
push
call
xchg
in
push
push
push
out
push
call
test
fdiv
pop
adc
dec
inc
fisubr
gs
sahf
jmp
inc
mov
aas
dec
mov
dec
repz
imul
ja
pop
sub
in
outs
xor
ja
pop
in
aam
sar
mov
fst
fdiv
push
cld
ret
inc
push
push
sar
arpl
cmp
jae
push
aas
jmp
mov
lods
je
cmp
movs
jns
pusha
cmp
add
rep
mov
add
adc
lock
push
(bad)
mov
and
je
js
sbb
mov
loop
es
push
add
shl
dec
jecxz
outs
push
and
or
or
inc
popw
jb
mov
fcmove
fnstsw
mov
push
movs
pop
mov
pop
sub
or
jne
mov
inc
or
or
(bad)
inc
adc
movs
test
(bad)
cmps
add
retf
adc
mov
sbb
add
push
add
or
call
hlt
(bad)
outs
push
jmp
sub
cmps
popa
in
cmp
fild
out
push
fmul
push
lahf
adc
sub
jmp
pop
iret
jo
jl
pop
inc
push
retf
add
push
dec
add
leave
cmp
mov
adc
test
or
outs
add
cmc
retf
call
push
inc
ja
xchg
aad
daa
pop
loopne
mov
stos
adc
inc
outs
add
push
out
arpl
ja
in
or
adc
xchg
add
loopne
test
adc
or
loopne
std
lock
mov
or
mov
fiadd
adc
data16
adc
push
leave
jnp
dec
call
in
cmp
outs
icebp
push
jne
sti
outs
cmp
cmp
or
adc
mov
mov
icebp
inc
jl
pop
je
add
mov
dec
notrack
push
push
ja
cmps
jmp
jmp
pop
add
or
mov
enter
fsubrp
jns
add
ins
(bad)
pop
cmp
adc
inc
or
jg
dec
scas
jg
inc
(bad)
adc
je
js
mov
mov
mov
mov
(bad)
or
mov
xchg
aaa
(bad)
jl
imul
cmp
je
fwait
jne
inc
push
(bad)
sahf
cmp
sbb
sahf
sub
or
rol
sub
loopne
les
(bad)
lock
and
and
lea
(bad)
(bad)
xor
mov
hlt
fs
movs
xchg
inc
imul
pop
pusha
movs
push
push
or
enter
nop
aam
pop
cld
mov
test
mov
fwait
mov
pop
fild
lock
xchg
into
push
cmp
test
push
enter
sbb
ret
pop
and
xchg
and
int
ins
mov
nop
mov
fs
nop
or
mov
ret
call
jb
sbb
pop
or
icebp
sbb
clc
push
push
mov
shl
xchg
cmp
into
movs
xor
jae
add
pop
push
push
pop
cmp
and
push
push
(bad)
xor
add
xor
or
call
aam
inc
clc
lds
push
test
sbb
es
dec
js
ror
les
jmp
sahf
jbe
(bad)
aas
das
iret
mov
cmp
jne
loope
nop
dec
jecxz
test
mov
int3
cmp
shl
ret
mov
icebp
xchg
mov
push
je
iret
repz
xchg
stos
les
ficom
adc
iret
repz
mov
xor
lods
repz
cwde
push
jne
cmp
sar
push
adc
ja
and
mov
fcmove
add
test
test
xchg
fldcw
int
xor
xor
sti
pushf
in
stos
int3
fistp
mov
movs
ror
shl
enter
jg
cwde
ins
clc
sub
inc
retf
and
pushf
fs
mov
in
je
jmp
retf
nop
les
and
lock
fucomip
and
push
das
sub
xor
rol
add
je
dec
je
dec
pop
and
mov
pop
adc
jb
jo
xor
dec
cmp
pop
mov
popa
aaa
rol
push
call
dec
sub
mov
outs
push
sti
(bad)
std
jg
sub
xor
mov
mov
nop
mov
js
inc
js
xchg
test
or
enter
into
fbstp
push
lahf
push
push
push
pop
inc
pop
(bad)
les
or
push
dec
sub
pop
and
js
in
inc
xchg
jmp
ret
jae
in
and
push
pop
sbb
pop
dec
xchg
in
xlat
repnz
and
jp
mov
ret
mov
and
lods
and
(bad)
xlat
xchg
xor
fst
sbb
mov
jne
push
xchg
sbb
sbb
jne
hlt
retf
xchg
and
dec
sub
lods
sahf
out
cmp
hlt
test
mov
jge
xchg
pop
pop
adc
xor
out
inc
push
jbe
cmps
push
aad
jo
or
nop
sub
pusha
rcl
sbb
lea
push
movs
mov
clc
pop
cmp
pop
xchg
imul
sub
inc
fnsave
add
add
(bad)
jo
cld
ins
enter
sbb
mov
sub
mov
push
or
dec
inc
(bad)
pop
and
or
test
inc
xor
fdiv
je
dec
je
or
jmp
mov
mov
mov
test
int
push
into
and
pushf
cmp
test
cwde
fcomp
cmp
rcl
cs
cdq
inc
inc
push
fadd
push
jns
out
fs
pushf
mov
sar
add
outs
push
jno
mov
(bad)
inc
fst
ds
and
push
inc
push
and
shl
mov
mov
(bad)
jmp
sub
inc
lock
nop
aaa
test
daa
es
sub
jo
lock
mov
sub
and
xlat
inc
sub
jbe
es
sbb
lea
add
sbb
scas
inc
clts
mov
clc
adc
mov
es
scas
cs
jg
adc
mov
pop
rcr
jmp
adc
call
dec
sub
clc
gs
jbe
and
mov
and
sbb
(bad)
or
loopne
jae
dec
dec
xchg
addr16
jbe
push
cmp
mov
xchg
dec
sbb
cmps
sub
cmp
add
pop
retf
fisttp
add
imul
and
add
stc
xor
push
sbb
sub
mov
repnz
add
mov
and
push
and
add
mov
add
in
pop
adc
out
pushf
rcr
stc
add
and
repz
out
push
or
fs
adc
and
and
idiv
loopne
push
cmps
adc
popf
mov
adc
clc
sahf
out
lock
add
or
pop
jb
iret
adc
mov
push
dec
adc
fiadd
sahf
aaa
lock
sbb
dec
mov
jb
xlat
adc
call
enter
mov
and
jmp
sub
push
push
or
sar
dec
pop
aaa
cmp
jne
shl
rcr
movs
daa
xchg
sbb
adc
sub
aad
pop
xchg
cmp
mov
pop
lock
push
(bad)
(bad)
dec
les
lahf
(bad)
jl
js
fmul
mov
js
mov
xor
cdq
enter
dec
jmp
dec
loopne
ja
mov
jnp
fnsave
mov
xor
enter
mov
jae
push
add
add
(bad)
fwait
pop
jns
mov
call
loope
sbb
push
add
cs
cwde
jno
jbe
loope
call
nop
mov
xchg
or
arpl
adc
mov
and
stos
aam
xchg
out
fbstp
mov
jecxz
sahf
mul
sti
cmp
push
data16
mov
mov
loopne
adc
(bad)
xlat
and
repz
cmp
jae
call
xchg
adc
stos
and
or
and
mov
xchg
sub
sbb
arpl
shl
and
(bad)
or
mov
xchg
mov
mov
xchg
imul
push
push
mov
sbb
sub
je
mov
mov
jae
arpl
sbb
(bad)
xchg
int3
mov
lahf
cmps
dec
jae
stc
test
out
pop
cmps
mov
out
cmp
movs
inc
dec
sahf
cmps
pop
repnz
aam
pop
jae
imul
shl
mov
mov
mov
adc
xor
rcl
add
addr16
sub
sbb
pop
jo
pop
push
stos
js
and
jle
dec
data16
add
push
sbb
mov
inc
dec
jmp
inc
cld
or
dec
jmp
pop
add
(bad)
push
cmp
add
mov
adc
fbld
popw
pop
xor
xchg
movs
repz
sti
add
pop
dec
cmps
xor
jne
sahf
out
cmps
sbb
cmps
(bad)
aad
push
js
stos
out
inc
aad
stos
fwait
and
mov
mov
jmp
nop
pop
js
inc
jmp
jbe
cmps
dec
bound
cmp
fmul
pop
shl
ja
nop
inc
leave
outs
cmps
cmp
or
clc
pop
mov
outs
fimul
sti
daa
jl
sbb
push
pop
aad
xchg
cs
or
and
and
in
(bad)
sbb
ins
sub
push
sub
pop
pop
out
adc
pop
dec
inc
cs
out
out
and
in
and
sbb
xor
es
inc
add
and
pop
test
sbb
push
jmp
iret
sar
sbb
iret
repz
stos
sbb
sti
pop
pushf
test
iret
repz
shl
(bad)
ficom
fwait
cli
or
or
xchg
sbb
inc
inc
or
sbb
arpl
stos
sub
fild
dec
movs
pusha
push
xchg
xchg
mov
add
arpl
sub
ficomp
push
sbb
imul
sub
jb
sbb
mov
jl
jg
pop
and
loopne
mov
jmp
mov
pusha
sbb
fs
out
fld
hlt
or
fidiv
stos
inc
arpl
into
iret
repz
pop
jne
lea
cmps
mov
or
push
sbb
fld
sbb
retw
sub
sub
push
sbb
movs
sub
pop
jno
sbb
jne
popf
fs
pop
repnz
es
test
movs
jmp
lahf
xchg
clc
or
ins
and
xor
push
pop
add
iret
jne
and
mov
int
lock
cmp
inc
arpl
and
pop
cld
das
sub
fld
fstp
fwait
jmp
call
add
sbb
popf
aam
mov
add
shl
or
sub
adc
pop
or
lods
xchg
mov
clc
fwait
sub
pop
clc
cmp
mov
xchg
jge
imul
scas
out
sahf
cmps
push
pop
jle
xchg
mov
mov
fcomp
jae
jl
mov
sub
bound
pushf
jns
push
mov
cdq
add
in
add
pop
fcmovnu
fdivr
sub
add
imul
rol
mov
out
mov
(bad)
pushf
adc
movsx
enter
push
sub
add
ds
cli
fild
inc
or
and
xor
push
pushf
add
inc
lock
imul
pop
pusha
mov
pop
movs
add
and
xchg
mov
mov
iret
repz
push
cmps
mov
into
inc
ficom
and
cmc
or
push
aaa
push
pop
cmp
push
cmp
pusha
and
fld
inc
fisttp
adc
(bad)
dec
std
inc
and
or
jno
mov
mov
movs
or
inc
stc
push
or
inc
pop
mov
adc
xor
adc
adc
jmp
imul
mov
inc
jmp
into
or
outs
int3
dec
inc
fucomip
push
sahf
cmps
jge
mov
fadd
push
dec
ins
jnp
add
jns
aaa
mov
aaa
out
jns
mov
(bad)
pop
adc
mov
jne
add
movs
ins
and
fist
xor
add
pop
xor
hlt
fild
xor
pop
leave
add
aaa
xchg
push
fild
xor
jb
loope
add
pop
cmp
mov
pop
outs
push
push
push
mov
inc
addr16
or
inc
sbb
add
xchg
(bad)
popa
xchg
and
loopne
shl
jb
in
push
lock
or
in
ja
adc
in
in
in
imul
mov
push
hlt
sub
test
pop
pop
outs
mov
ret
mul
xor
jecxz
data16
adc
ds
mov
or
pop
ret
enter
inc
push
arpl
popa
aam
mov
shl
push
loope
cmp
enter
pop
push
enter
mov
inc
xor
mov
lock
push
push
jp
popf
retf
xchg
mov
outs
xchg
out
push
les
xor
add
test
movs
pop
test
movs
pop
fcmovnbe
xchg
test
mul
push
sbb
mov
and
enter
jns
test
sbb
imul
pop
push
popa
shl
inc
mov
inc
add
pop
movs
and
in
pop
out
mov
sahf
out
cmp
jl
jns
sahf
mov
daa
sar
(bad)
fiadd
cmc
or
sub
push
loope
mov
mov
mov
push
adc
leave
add
xor
and
test
sub
in
out
inc
dec
repnz
shl
dec
push
movs
aam
xchg
or
dec
push
fs
loopne
das
push
mov
(bad)
jmp
cmp
push
push
and
or
in
fild
jb
add
push
leave
push
fild
leave
add
fild
das
xchg
add
and
add
jge
in
pushf
jl
fild
and
inc
sahf
out
push
push
jbe
call
int3
enter
cmp
mov
daa
not
sub
push
dec
push
add
leave
mov
push
mov
in
adc
fmul
and
add
(bad)
stc
stos
rcr
and
lods
cmovae
test
sub
in
cmp
pusha
test
(bad)
dec
sbb
imul
pop
imul
push
or
inc
mov
mov
adc
imul
pusha
enter
imul
loopne
inc
mov
jns
mov
pop
xchg
mov
fidiv
add
in
pop
jns
out
pop
cmp
jbe
dec
or
imul
add
movs
cmp
sbb
jne
mov
inc
cmp
add
pop
inc
fbstp
push
lods
stc
fbld
mov
sbb
fild
xor
(bad)
mov
and
cmp
adc
lock
outs
push
inc
and
nop
ja
fisub
outs
xchg
push
rol
mov
push
mov
add
sbb
xor
push
and
aam
or
mov
mov
pusha
scas
mov
lock
in
jmp
inc
lock
lods
in
pop
pop
xor
hlt
adc
aam
push
and
je
test
cwde
mov
ret
sbb
or
adc
push
imul
add
lods
push
push
popa
clc
pop
xor
fs
in
test
add
sbb
adc
leave
in
cmps
sbb
shr
ret
cmp
and
pop
add
(bad)
push
stos
add
in
and
and
jae
xchg
and
add
xchg
test
xchg
cmc
mov
pop
bswap
rcr
(bad)
lods
push
adc
push
push
in
xchg
shl
in
inc
cmp
in
dec
or
inc
leave
stos
cmps
add
repz
pop
inc
ret
add
shl
sahf
out
ds
cmp
mov
(bad)
(bad)
push
mov
jns
repz
in
or
push
dec
outs
inc
push
out
and
xchg
ins
cmps
mov
add
or
cs
call
repnz
loopne
xor
clc
push
xchg
add
idiv
je
hlt
inc
jb
leave
(bad)
lock
jle
fidiv
add
push
mov
inc
in
dec
in
dec
inc
int3
call
bound
mov
dec
inc
push
in
loopne
and
cwde
ds
push
aaa
lods
out
xor
push
jb
and
leave
xor
xor
xor
push
and
fmul
ror
inc
int3
and
ja
enter
enter
push
mov
lds
or
mov
pop
les
push
cs
(bad)
or
mov
fild
sti
cmp
stos
mov
mov
(bad)
pop
cld
imul
and
jae
enter
into
out
pop
(bad)
outs
(bad)
imul
popf
push
mov
jnp
sub
add
inc
sar
dec
imul
loope
scas
mov
add
int3
cmp
mov
and
aad
mov
dec
and
xchg
or
mov
adc
inc
or
xchg
pushf
lods
inc
test
arpl
jbe
inc
add
rol
movs
push
jmp
mov
dec
pushf
inc
mov
shl
scas
cwde
retf
inc
cwde
jecxz
pushf
dec
je
mov
xchg
adc
nop
inc
nop
jmp
inc
inc
pop
mov
inc
push
mov
inc
mov
jmp
stos
mov
jo
xor
ror
test
loopne
sbb
cmp
movs
jge
mov
mov
xor
ret
push
fwait
bound
les
pop
jecxz
cmps
sub
push
leave
add
adc
leave
or
and
xchg
add
push
jmp
mov
or
leave
(bad)
push
mov
test
retf
ret
or
nop
sbb
push
mov
shl
push
pop
loopne
pop
mov
dec
retf
xor
add
fimul
pop
sub
inc
sbb
popa
fsubr
and
out
xor
xchg
arpl
fadd
sti
mov
ret
scas
lods
fidivr
dec
cdq
scas
icebp
push
std
cmp
sar
inc
pop
jnp
jnp
iret
repz
out
push
jns
fnsetpm(287
mov
pop
or
pushf
or
int
dec
pushf
and
fld
or
imul
xor
cdq
xor
inc
pop
or
xchg
inc
jnp
jne
imul
mov
in
add
js
test
mov
sub
(bad)
xor
fcomp
aam
pop
add
ins
push
dec
ins
cmp
dec
int3
scas
or
pop
dec
mov
or
mov
retf
inc
test
and
(bad)
sbb
imul
sbb
xchg
jmp
pop
pop
dec
into
call
mov
and
retf
fwait
imul
pop
iret
inc
outs
push
cmp
repz
imul
jecxz
sbb
shr
rol
push
popa
(bad)
std
mov
cmp
inc
bound
inc
leave
mov
inc
imul
pusha
mov
lods
pusha
dec
or
mov
and
(bad)
aad
fadd
mov
lods
push
or
ins
cmp
cwde
cwde
lds
movs
push
mov
or
aaa
dec
adc
sub
jmp
or
test
push
mov
pusha
jb
mov
out
ror
push
jo
arpl
xchg
les
in
cmps
test
ins
nop
leave
and
lods
(bad)
xlat
(bad)
inc
jb
push
ret
ror
stos
or
loopne
sub
add
and
or
jmp
shl
loopne
adc
xor
sar
das
rol
gs
xchg
inc
pop
loopne
jns
xor
retf
repz
repz
sbb
ds
xchg
mov
aam
(bad)
push
call
icebp
or
push
inc
xor
out
xchg
inc
or
mov
mov
mov
pop
sub
or
inc
mov
fist
or
stos
or
imul
adc
or
imul
sub
cmc
xor
pusha
shl
lods
movs
dec
test
or
outs
and
cmp
movs
iret
mov
xchg
mov
pop
sbb
mov
pop
xchg
je
iret
xor
cmp
pop
out
cmp
mov
cmps
ret
(bad)
mov
imul
repz
cdq
je
push
scas
retf
jmp
pusha
adc
sub
movs
lea
scas
aaa
movs
or
inc
fwait
ret
sub
fiadd
lds
inc
pop
xchg
iret
fsub
jae
inc
dec
dec
pop
imul
cmp
mov
rcr
or
push
movs
adc
cmp
and
and
stos
iret
dec
xor
ins
test
and
dec
sbb
xlat
addr16
mov
mov
add
iret
pop
pushf
enter
and
xchg
pop
dec
mov
fdiv
add
lds
push
or
xchg
or
test
popa
fsub
jns
xchg
inc
cli
or
(bad)
push
pop
jg
std
or
aas
jmp
sub
or
add
lock
je
ss
ins
nop
jmp
stos
dec
cmps
cdq
or
mov
push
adc
sbb
jmp
jmp
mov
test
fiadd
fld
lahf
inc
(bad)
jae
or
retf
ret
mov
dec
inc
add
xchg
daa
sbb
arpl
mov
adc
je
sub
inc
ins
xchg
dec
leave
and
mov
pop
shl
nop
add
adc
dec
push
xchg
std
add
pop
xchg
xor
stos
scas
test
dec
or
mov
rcr
enter
mov
or
pshufw
cmps
mov
push
push
leave
nop
aas
mov
jns
push
adc
mov
test
xor
adc
inc
push
pop
ret
adc
(bad)
mov
xchg
mov
adc
add
add
pusha
push
dec
bound
jmp
push
add
push
push
or
mov
sub
or
add
(bad)
xchg
add
fwait
adc
fwait
(bad)
call
jns
add
in
rep
(bad)
mov
pop
push
or
or
or
push
jmp
xor
popa
stos
push
repnz
inc
jmp
test
pusha
popf
or
cmp
push
lods
dec
fimul
xchg
leave
ror
push
fild
mov
add
fisubr
pusha
fwait
lods
adc
sub
into
adc
mov
cmp
das
or
add
iret
repz
adc
add
cmp
mov
int
shl
sti
mov
and
je
movs
xchg
lea
dec
cmovge
(bad)
mov
(bad)
mov
je
xor
mov
or
pop
outs
ja
jmp
jg
and
sub
and
adc
cmp
imul
jge
mov
int
jmp
and
push
push
or
imul
in
dec
mov
mov
sub
and
das
mov
cmp
sbb
jmp
mov
scas
scas
(bad)
(bad)
and
mov
fisubr
movs
(bad)
xchg
and
sub
adc
mov
ret
popf
(bad)
or
push
mov
inc
add
ret
ror
shl
or
(bad)
and
ins
mov
add
sub
cmp
xor
in
fnstsw
aaa
enter
xor
and
fprem1
push
jbe
jp
inc
jle
es
test
adc
in
xor
les
cli
add
pop
test
pop
add
ret
push
mov
lods
call
je
dec
adc
adc
mov
jecxz
adc
js
add
scas
add
in
sbb
sbb
in
inc
or
addr16
inc
adc
sub
movs
sub
out
jle
or
jmp
xchg
jmp
mov
mov
pop
test
jne
inc
int
pop
bnd
adc
sub
sbb
mov
fisttp
sbb
cmp
add
xchg
cmp
mov
or
add
pop
sub
push
iret
lods
fidivr
push
dec
dec
inc
sbb
bound
jge
sbb
jbe
or
mov
outs
pop
ja
bound
daa
jbe
out
add
sbb
fcomp
ficomp
adc
fild
add
(bad)
push
div
and
jle
mov
(bad)
jecxz
cwde
lods
inc
shl
dec
mov
je
test
cmp
and
adc
je
mov
leave
mov
movs
mov
mov
imul
add
lea
ja
jmp
rcr
adc
cmp
setne
sar
push
cs
sahf
xor
out
out
in
(bad)
in
adc
xor
or
cmp
rcr
int
xchg
adc
xor
push
pop
fnsave
(bad)
and
jbe
mov
imul
in
push
adc
je
imul
test
fist
dec
aam
(bad)
scas
sar
sbb
push
inc
ror
cmp
rcl
cmp
xor
xor
lds
adc
add
loope
icebp
inc
jmp
cmp
xor
or
or
bound
jae
and
adc
js
pop
int3
sbb
mov
fldenv
add
cwde
(bad)
je
add
cmp
add
dec
or
and
call
sar
icebp
xor
mov
add
cmp
jl
fsub
mov
cli
cmp
xor
cmp
sbb
dec
cmp
add
cld
xchg
pushf
push
sub
and
mov
add
add
jmp
add
out
push
ror
dec
add
mov
cmp
sbb
mov
shl
retf
and
xor
jno
push
imul
push
jo
push
test
scas
pop
fldcw
jns
push
push
bnd
fsub
repnz
pop
or
ror
fsubr
inc
mov
in
pop
inc
jo
and
jae
imul
call
jne
push
sbb
iret
fsubr
inc
mov
mov
mov
enter
mov
fs
or
movs
push
push
push
xor
imul
(bad)
dec
jmp
sub
push
push
xor
or
lods
cmp
out
jmp
and
out
fbstp
int3
jns
out
add
aad
pop
pop
mov
jb
push
add
sub
push
adc
mov
mov
outs
inc
pusha
adc
push
lea
sahf
test
dec
add
std
cmp
push
popa
xor
outs
lods
out
sbb
outs
aas
pop
dec
sub
jb
mov
jb
push
data16
and
xor
inc
out
jne
mov
bound
out
xor
gs
arpl
jbe
(bad)
cmps
jbe
cmps
dec
fwait
push
ss
in
cmp
jae
push
das
jecxz
xchg
neg
inc
outs
sti
ficomp
outs
aaa
push
es
imul
jnp
push
imul
ja
sbb
ret
mov
mov
xor
and
ret
xchg
inc
push
scas
sbb
inc
inc
add
push
imul
mov
cs
(bad)
clc
sub
add
mov
push
xor
fisttp
and
cli
mov
call
xlat
lea
ins
pusha
or
frstor
mov
mov
test
mov
addr16
push
cmp
and
mov
sub
ins
mov
pop
sub
push
shr
inc
cmp
add
or
pop
push
int
adc
(bad)
and
fsub
retf
outs
in
hlt
inc
mov
test
xor
mov
pop
or
and
je
ja
aas
inc
es
inc
cmp
popa
and
aaa
push
scas
sub
ret
jmp
lock
je
fmul
jb
pop
pop
inc
rol
sub
pop
fstp
rcr
adc
push
call
add
(bad)
lods
test
jno
cmps
fs
mov
push
js
ror
adc
cmps
xchg
pushf
sbb
(bad)
cld
sbb
ret
sub
out
mov
pop
dec
fdivr
sub
add
jb
jnp
mov
push
out
inc
iret
xor
sahf
add
add
dec
pusha
imul
into
jecxz
or
add
mov
inc
jle
aad
push
in
mov
adc
mov
cmp
push
xor
les
push
shl
sti
jb
jnp
mov
mov
push
fld
inc
add
dec
(bad)
lods
add
test
xchg
and
fucom
xchg
xor
or
add
pop
mov
jbe
mov
pop
xchg
or
cmc
pop
rcl
daa
cmp
push
test
jg
add
or
push
mov
sbb
or
sub
push
or
inc
ss
mov
add
ret
push
pop
and
xchg
cli
add
movs
or
icebp
gs
add
add
or
ins
icebp
mov
xor
repz
in
icebp
push
dec
clc
arpl
loop
sub
idiv
or
mov
push
ficomp
ror
push
mov
mov
ror
pop
jge
ja
xchg
test
jbe
xchg
out
enter
pop
rcl
pop
push
dec
mov
movs
jge
into
push
jl
ret
add
inc
inc
or
jb
mov
mov
cmp
push
cmp
lahf
jno
sbb
push
jg
mov
mov
push
cdq
fnstenv
loope
and
pop
xor
(bad)
fcmovb
mov
and
in
repz
jns
ror
inc
call
daa
xor
mov
mov
loop
cmp
inc
cli
rol
div
nop
xchg
dec
sbb
add
dec
jne
jno
repz
or
or
and
out
repz
outs
adc
test
add
add
cld
int
dec
add
and
jo
je
fsubr
jno
adc
mov
mov
inc
inc
call
cmps
push
push
out
inc
mov
and
dec
inc
mov
add
mov
lahf
or
mov
repz
stc
xor
xchg
jnp
pusha
fdivr
add
add
hlt
fldenv
mov
add
add
addr16
jns
push
sbb
pop
xor
push
cmp
ret
push
lock
xor
pusha
add
mov
(bad)
and
nop
fistp
add
dec
jl
addr16
push
dec
add
adc
je
mov
xor
das
sub
div
jne
pop
mov
and
adc
sbb
movups
neg
or
jne
dec
jne
jmp
mov
into
in
push
mov
jb
cmp
jle
sahf
pop
lahf
pushf
mov
test
or
fsubr
sbb
xchg
les
mov
mov
cmp
imul
rol
and
push
xor
outs
fdiv
in
inc
sahf
push
jmp
test
popa
mov
aas
or
or
or
mov
ret
dec
dec
pusha
mov
sbb
mov
adc
sbb
push
or
loopne
or
pop
sbb
(bad)
call
test
dec
sbb
in
mov
cmp
je
mov
dec
push
sbb
jne
ss
inc
sub
jmp
mov
and
cmps
sbb
loop
mov
imul
ins
sbb
pushf
cld
out
adc
(bad)
jne
jmp
mov
jl
cmp
mov
int
and
pop
je
mov
mov
xchg
punpcklwd
adc
add
in
push
add
mov
xor
push
sbb
fs
push
or
stos
mov
ins
enter
add
push
or
mov
fcomi
lea
sbb
mov
cmp
fild
bndstx
jmp
add
fsubr
add
outs
mov
das
push
mov
mov
mov
cmp
je
(bad)
popa
dec
movzx
add
dec
adc
or
add
rcl
jmp
or
dec
sbb
mov
cmp
div
sbb
ret
jb
or
and
add
mov
data16
pop
(bad)
jle
add
push
jo
xchg
pop
fisttp
cmp
cld
inc
mov
mov
cmp
ja
jb
add
add
call
(bad)
sub
lock
mov
and
or
push
popa
mov
add
inc
movs
mov
add
add
push
adc
sbb
jmp
popa
inc
adc
ins
sub
(bad)
add
push
dec
scas
add
xchg
mov
push
mov
sbb
int
lock
pop
pop
(bad)
mov
jle
lods
shl
aas
adc
inc
cmp
pop
ins
call
xchg
call
cmp
jmp
mov
lods
cmp
adc
stos
mov
rep
dec
pop
aas
sub
les
jmp
inc
mov
jmp
sbb
inc
ss
clc
inc
sbb
jne
in
and
pop
xor
add
sbb
cmp
stos
lods
ret
scas
nop
xchg
cmp
call
icebp
xchg
cmp
out
dec
xor
sbb
ss
fisubr
enter
sbb
mov
jmp
and
lahf
popa
jmp
add
pushf
sub
push
adc
shl
sar
add
sbb
and
add
lock
add
adc
or
cmp
push
jo
add
test
dec
pop
jo
ins
jo
jp
lock
and
bound
loop
adc
call
jno
and
inc
shr
(bad)
sbb
pop
cs
fiadd
cmp
or
cmp
cmp
call
adc
lods
pop
test
cld
lock
inc
pop
adc
es
and
add
cmp
and
mov
pushf
add
sub
mov
pushf
and
in
pop
call
dec
inc
mov
push
adc
and
or
push
enter
xlat
fimul
pop
ror
xchg
pushf
or
mov
pop
cli
sbb
out
sbb
test
add
adc
or
cmp
mul
fmul
sbb
retf
add
mov
mov
shr
aad
enter
or
or
jns
enter
ins
add
add
std
imul
mov
jbe
ins
add
adc
push
sub
cmp
outs
xor
sub
ror
repz
test
jo
dec
pop
jmp
sbb
add
sub
jmp
or
ja
cmps
add
push
ja
loopne
or
sub
mov
jp
push
push
and
loope
push
push
fild
sbb
mov
or
mov
int
mov
mov
ja
jae
adc
shl
adc
sub
fimul
dec
add
or
xlat
mov
test
and
les
or
(bad)
(bad)
sbb
test
or
xor
or
push
call
adc
push
sbb
repnz
scas
add
into
pop
mov
or
mov
jb
call
add
push
inc
ins
imul
dec
xchg
mov
dec
gs
adc
or
in
data16
sbb
push
fimul
pop
inc
ins
popa
push
jae
or
xchg
test
out
push
xchg
add
aad
ins
cmps
dec
or
stos
sub
inc
imul
add
push
outs
sbb
nop
dec
outs
imul
sub
test
ins
jns
mov
imul
aaa
adc
inc
or
mov
adc
xor
add
sbb
clc
setbe
jo
iret
push
ins
ret
jbe
hlt
add
push
cmp
push
or
jb
or
xor
cmp
imul
jne
cmps
adc
test
or
mov
xchg
or
dec
gs
and
mov
js
add
test
cmp
add
fstp
xchg
jbe
jl
or
dec
gs
sbb
jns
sahf
adc
fnstenv
fnstcw
xor
je
aaa
pushf
xchg
(bad)
or
int
jbe
dec
or
push
xor
ret
test
adc
adc
inc
leave
add
mov
pop
add
and
inc
ja
push
(bad)
push
xchg
inc
mov
in
mov
xor
cmp
push
or
(bad)
fild
dec
dec
outs
xchg
pushf
push
lahf
sbb
or
jl
add
xchg
test
mov
xchg
add
xchg
xlat
pop
add
scas
mov
add
add
inc
leave
pop
push
push
inc
popa
pop
ins
xchg
jmp
inc
pop
or
inc
test
push
out
(bad)
pop
fistp
fcmove
sub
outs
dec
imul
dec
cs
imul
or
or
inc
push
adc
mov
xchg
and
xor
ja
orps
jo
outs
mov
mov
push
dec
pop
push
adc
icebp
pusha
pop
jb
or
mov
push
imul
stos
popa
or
inc
sti
xchg
aam
in
(bad)
and
ss
sar
data16
imul
push
xchg
ficom
jmp
leave
inc
or
sub
pop
ins
stos
jns
cmp
lahf
retf
or
push
xchg
push
pop
dec
(bad)
fild
xor
mov
add
or
dec
mov
sbb
mov
js
ja
aaa
ds
inc
pop
iret
sbb
clc
inc
adc
jmp
dec
sahf
jmp
cvtps2pi
outs
das
dec
wrmsr
cmp
sub
outs
daa
addr16
sub
adc
enter
pushf
pushf
popf
lods
comiss
fsubr
div
movaps
or
lock
sahf
out
or
add
out
sbb
out
sahf
out
dec
push
pop
gs
jns
ins
jne
test
or
xchg
(bad)
dec
(bad)
jo
mov
mov
ss
test
cmp
aaa
xchg
or
outs
test
inc
cmp
mov
ins
cmp
push
addr16
(bad)
adc
or
loopne
sub
inc
das
cmps
ja
inc
ss
or
pop
mov
or
js
pushf
cmps
push
fadd
cli
(bad)
call
adc
(bad)
adc
inc
arpl
(bad)
fild
and
and
lahf
push
ss
pop
std
js
scas
pusha
or
outs
xor
(bad)
adc
int3
lods
je
push
lds
scas
scas
ror
fdivr
push
nop
push
scas
xchg
add
out
js
mov
or
fwait
push
pop
pop
add
adc
shl
xor
push
test
nop
adc
sub
inc
pop
pop
pop
xor
inc
movq
push
lods
outs
ins
inc
loop
mov
fcomp
pushf
dec
push
int3
les
add
cwde
sbb
andps
ins
push
push
adc
ins
pusha
adc
pop
sahf
pop
cvtps2pi
add
mov
adc
cmp
pop
adc
xchg
dec
repnz
mov
add
out
sar
or
dec
cld
pop
dec
ds
sub
pusha
adc
lock
ds
(bad)
cld
(bad)
sti
ret
call
xor
xor
push
dec
pop
jne
pusha
pusha
and
mov
fiadd
adc
loopne
call
add
adc
sub
adc
adc
fs
ss
and
pusha
mov
xor
adc
cmps
sub
(bad)
cmovns
jae
fs
(bad)
fisttp
mov
das
pushf
jae
push
rcl
sahf
cmps
add
scas
or
fimul
mov
repz
adc
add
and
pop
push
mov
push
pushf
cmp
inc
aas
push
(bad)
push
imul
sbb
dec
cmp
mov
bound
jbe
push
in
dec
pop
mov
mov
push
data16
pop
test
pop
out
imul
js
jl
ja
pop
add
jo
cwde
pusha
lods
ror
pop
or
sub
mov
aaa
mov
test
xchg
popa
pop
xchg
inc
adc
outs
adc
cmps
or
(bad)
enter
pop
mov
cmps
pusha
adc
in
mov
lock
cmp
out
clc
push
jo
push
int3
movs
or
cmps
add
push
mov
cmps
xor
ins
mov
cmp
imul
mov
imul
data16
inc
pusha
aam
cli
push
outs
(bad)
push
jge
(bad)
test
psllw
adc
or
test
sahf
mov
pop
lds
leave
enter
outs
jb
push
xor
pop
sbb
mov
aas
pop
sahf
cld
or
adc
je
pushf
out
push
in
xchg
aas
movs
sub
push
dec
mov
imul
adc
loopne
mov
xchg
adc
mov
nop
cmp
les
xchg
push
sub
outs
add
and
adc
mov
ja
adc
adc
jecxz
adc
mov
sbb
adc
sub
lar
inc
sub
inc
or
es
mov
or
sub
inc
sar
aaa
push
seta
test
jns
jl
or
jo
add
nop
mov
pop
das
shl
cmp
lods
call
dec
jae
dec
inc
sbb
repnz
pusha
jge
pop
nop
jge
inc
or
lea
nop
sbb
or
nop
add
adc
add
nop
add
bound
cmp
ret
mov
sar
ss
push
add
push
rcr
push
push
arpl
lea
out
fwait
test
ja
adc
or
adc
mov
mov
sbb
retf
push
xor
repz
into
in
call
test
sbb
jae
push
sbb
sbb
adc
or
adc
add
mov
push
stos
test
dec
aas
cs
sahf
enter
sbb
pusha
mov
fild
push
push
imul
pop
daa
inc
mov
sahf
xchg
out
pusha
fistp
ins
mov
fadd
imul
mov
sub
cmps
adc
push
sbb
ds
mov
pop
inc
inc
dec
jge
pop
fmul
or
dec
sbb
adc
inc
in
add
arpl
sbb
adc
test
pop
push
add
sbb
push
cld
pop
nop
sbb
cwde
sbb
stos
mov
inc
loopne
inc
iret
xlat
jo
and
xchg
data16
js
and
and
popa
mov
int3
sbb
inc
or
int3
or
pop
aas
pop
call
xor
mov
scas
dec
fdiv
sbb
ja
pop
adc
aam
sub
cs
int3
add
sbb
repz
and
sub
inc
add
(bad)
mov
mov
xchg
pop
inc
(bad)
int
dec
add
push
sbb
add
ss
rcr
push
(bad)
push
pop
xor
add
movs
push
xor
sbb
(bad)
icebp
cld
mov
inc
les
adc
xchg
push
clc
mov
push
or
cmps
stc
xor
lds
adc
sbb
les
mov
pop
adc
(bad)
fbld
add
(bad)
stc
(bad)
clc
push
push
push
push
push
push
out
out
cmp
lods
scas
mov
mov
mov
fsub
in
cwde
sahf
div
fdivr
push
icebp
push
or
nop
out
pop
and
mov
nop
xor
data16
popf
fst
fld
add
push
sub
add
(bad)
pop
add
addr16
mov
ins
pop
mov
sbb
jl
pop
call
enter
cmp
es
fimul
push
pop
inc
sub
or
fwait
test
clc
pop
and
inc
push
push
and
fimul
pop
out
test
fdiv
test
pop
jns
jnp
or
inc
lods
inc
push
jo
inc
nop
dec
sub
add
out
push
fsub
repz
and
xchg
mov
xchg
fld
push
fild
loopne
xchg
dec
adc
stos
or
jb
pop
inc
arpl
imul
and
fmul
push
inc
add
cmp
(bad)
das
dec
js
cmp
rol
loope
jne
cmps
call
push
js
aas
dec
js
inc
sbb
and
rcr
out
cmp
jne
out
fadd
out
enter
adc
mov
jae
xchg
(bad)
popa
arpl
mov
in
pop
clc
push
add
inc
mov
xor
mov
dec
sub
xlat
bound
adc
mov
pop
addr16
lock
xchg
jns
add
add
(bad)
lds
fbstp
pop
test
sub
(bad)
call
bnd
jmp
sub
fistp
jecxz
cs
xor
sbb
punpckldq
outs
jmp
adc
pop
cmp
daa
fbld
pushf
xor
stc
pushf
sbb
sub
popf
sub
inc
pop
call
or
adc
lds
mov
fld
arpl
imul
push
inc
push
inc
fadd
push
fstp
xor
sbb
and
add
pop
adc
jmp
mov
pop
popf
loope
mov
push
push
inc
test
(bad)
aam
lds
mov
in
and
or
mov
mov
shl
sub
add
pop
cmp
popa
dec
test
xor
or
stc
nop
ficom
fadd
mov
retf
sbb
adc
pop
hlt
(bad)
ret
int3
and
and
call
cmp
mov
and
ret
lods
xchg
mov
sbb
neg
mov
shl
add
inc
call
nop
push
or
std
mov
pop
jp
mov
adc
cwde
adc
push
push
mov
dec
mov
cmp
jecxz
pop
cmp
leave
push
and
dec
imul
add
ret
les
xchg
test
daa
sbb
mov
and
das
sub
adc
rol
ret
fucomp
adc
(bad)
stos
xor
cmps
jge
scas
or
dec
mov
sbb
nop
pop
push
or
sbb
jle
xor
mov
inc
pop
leave
mov
xor
cmps
ja
and
scas
je
jnp
stos
fld
adc
add
and
sbb
(bad)
or
aad
pop
(bad)
lods
mov
inc
inc
add
or
pop
pop
sbb
mov
xchg
mov
jno
rcl
add
and
adc
lock
fld
and
call
or
inc
mov
jecxz
xor
call
sbb
push
inc
push
and
hlt
scas
add
add
and
sub
lds
call
icebp
adc
and
test
push
inc
mov
or
xchg
inc
iret
cmc
push
mov
aaa
mov
jnp
clc
sub
div
inc
xchg
pop
xor
ins
pop
hlt
ror
std
or
inc
push
dec
dec
js
stc
iret
xor
pop
sbb
mov
gs
xor
mov
adc
clc
(bad)
xlat
xchg
xor
lock
fwait
mov
mov
xlat
push
call
xchg
mov
mov
outs
xor
pop
int3
sbb
sbb
and
arpl
fsub
inc
cmp
add
jecxz
add
std
sbb
push
retf
xchg
(bad)
push
inc
mov
inc
inc
jno
ficomp
push
call
cmp
push
dec
xor
mov
ja
lock
cmp
(bad)
call
mov
add
test
sub
sbb
(bad)
jmp
shr
(bad)
or
mov
sbb
push
xor
ret
out
cdq
out
mov
test
loope
cmps
or
sbb
cmp
int
shl
fimul
adc
jnp
mov
jbe
or
and
add
cmc
div
adc
xor
cmp
retf
xlat
sbb
(bad)
test
push
xor
out
sbb
mov
mov
xor
mov
test
or
xor
pop
jne
xchg
add
(bad)
int
adc
rcr
(bad)
call
jge
jp
rol
dec
pop
nop
sub
loopne
lea
dec
jae
in
or
and
pop
ret
push
add
push
add
jnp
sbb
pop
pop
loope
adc
jp
idiv
in
push
sub
mov
sbb
push
sub
es
mov
pop
mov
jecxz
jmp
push
sbb
dec
dec
adc
or
or
or
push
das
cli
test
aam
pop
xlat
xchg
sub
pop
xchg
hlt
mov
xor
cld
add
xor
jo
pop
dec
sbb
aaa
enter
jns
adc
mov
lahf
pop
push
mov
sub
add
sbb
sub
add
cmps
cmp
jmp
jmp
xor
cmp
add
cmp
ror
sar
cld
jo
mov
test
js
sbb
dec
push
jns
mov
loopne
cmp
rcl
inc
sahf
add
push
ret
ins
das
repz
shl
sub
add
sbb
add
repnz
push
fcom
and
fwait
in
popf
xlat
into
mov
nop
inc
ficom
mov
dec
push
dec
cld
mov
dec
pop
add
or
das
mov
xchg
hlt
lea
in
cmp
aas
adc
dec
inc
or
push
jecxz
xchg
jae
daa
xor
jno
fisttp
inc
or
test
or
sbb
inc
sbb
les
cmp
xchg
das
popa
pop
hlt
dec
daa
sub
sub
or
dec
pop
cmp
icebp
(bad)
xor
test
adc
jmp
ins
adc
jne
and
cmp
popa
fistp
js
dec
xlat
mov
aam
cld
add
add
jmp
mov
(bad)
out
jl
lea
and
or
pop
mov
rcr
jmp
sbb
lods
dec
mov
sbb
js
add
aaa
inc
cli
push
mov
jno
or
mov
push
loope
add
das
or
add
mov
mov
adc
or
jbe
rol
out
je
sbb
jmp
push
jbe
cmp
pop
mov
jbe
clc
(bad)
call
loopne
pop
mov
push
and
xlat
sub
adc
sub
and
bound
ror
push
mov
xchg
add
(bad)
sti
mov
xchg
dec
push
xor
jmp
pop
imul
xor
xchg
mov
mov
pop
imul
xchg
cmp
les
mov
xchg
add
add
dec
call
nop
fadd
push
aas
test
sub
aaa
arpl
imul
xchg
sbb
or
mov
add
adc
mov
and
mov
push
or
test
jne
ret
ins
popa
xchg
add
jbe
inc
dec
iret
jl
cld
xor
scas
cmc
inc
xor
cmp
adc
sar
jo
or
jnp
mov
mov
cld
dec
mov
test
or
shr
cld
pop
push
enter
and
mov
xor
inc
imul
and
stc
xor
xor
sbb
and
int3
ja
add
or
push
test
in
imul
add
int3
push
sub
lock
mov
sbb
addr16
aas
shr
popa
test
jo
fisub
or
and
pop
jae
add
and
dec
sub
(bad)
jp
inc
movs
push
jmp
mov
pop
sub
mov
xchg
add
sbb
sub
das
push
mov
aas
addr16
jl
repz
mov
mov
shr
jmp
addr16
add
lea
or
cmp
mov
or
and
pop
add
out
ficomp
movs
jle
sub
rcr
push
sbb
xor
pop
jmp
adc
nop
pop
mov
inc
xchg
out
cwde
pusha
mov
and
adc
out
(bad)
jns
lods
xchg
jnp
lock
pop
dec
fimul
or
mov
mov
sub
inc
pop
out
retf
xchg
xchg
mov
mov
les
push
push
hlt
jle
(bad)
das
cmps
xor
faddp
add
stc
add
mov
sbb
xchg
lods
jmp
add
mov
ins
sbb
(bad)
mov
jo
rol
mov
adc
loopne
adc
je
rcl
jmp
das
fbld
dec
add
loopne
push
vandpd
inc
dec
(bad)
gs
in
push
sub
jle
pop
inc
nop
cld
ret
shl
aaa
shr
mov
cmc
adc
cmp
sub
mov
sub
pusha
xor
and
mov
sbb
cli
or
scas
aam
mov
jmp
push
push
add
jle
pop
push
adc
sbb
movs
dec
mov
add
fisub
cmp
xor
sbb
or
inc
in
scas
push
or
ds
cs
out
xchg
xor
cmp
pop
dec
cmp
jge
sbb
sbb
je
outs
fdivp
jo
ret
inc
rol
cwde
sub
aam
or
pop
add
pop
or
pop
icebp
pop
mov
pop
cdq
mov
out
xor
(bad)
add
add
js
(bad)
sbb
inc
pop
daa
in
or
jns
jbe
or
in
xor
adc
lods
sub
inc
xchg
xor
pusha
add
xchg
stc
pop
mov
mov
mov
sub
jg
dec
mov
add
aas
dec
inc
jne
ficomp
rcl
int
popf
lock
push
mov
cmps
jo
int
mov
add
adc
jno
push
mov
popfw
mov
fnstcw
pusha
jg
mov
stos
xchg
sbb
sbb
or
ret
mov
xor
xchg
sub
add
mov
outs
aaa
pop
jns
push
and
outs
nop
leave
in
outs
mov
rol
jmp
cmc
and
push
jmp
inc
jne
add
jmp
dec
add
or
mov
or
dec
adc
nop
pop
and
and
xchg
jno
jno
bound
jb
adc
(bad)
out
mov
pop
shr
sub
rcl
pop
and
or
adc
xor
mov
ror
sub
sub
push
sar
add
inc
or
mov
xchg
fild
inc
jbe
lea
clc
push
or
pop
test
std
ins
nop
adc
adc
adc
inc
jbe
cdq
jg
outs
pop
mov
mul
inc
fdiv
pop
add
ins
mov
jmp
sub
leave
jp
in
mov
daa
lahf
sub
sbb
repz
xchg
push
pop
push
test
rol
aad
loopne
sub
iret
scas
dec
pop
and
pusha
scas
push
shr
int
fmul
test
xchg
jno
mov
mov
mov
push
vmovups
mov
add
dec
mov
loop
jb
nop
xchg
fsub
rol
hlt
add
jmp
jns
xchg
push
fldcw
and
pop
xlat
stos
nop
in
loope
ins
inc
icebp
xchg
rcr
and
fnstcw
sub
stos
sub
and
fs
adc
shl
test
in
inc
jnp
push
shl
mov
sbb
mov
push
lock
adc
xor
and
inc
imul
xchg
or
jo
outs
inc
add
in
or
in
inc
lahf
mov
dec
push
(bad)
in
int3
je
stos
movs
adc
into
cmp
push
int
inc
xchg
jo
push
fild
xchg
mov
inc
add
mov
repnz
(bad)
dec
jp
pop
inc
push
xchg
add
movs
add
inc
mov
pop
jl
mov
add
test
aam
nop
or
xor
clc
add
add
sub
cmp
je
rol
cmp
ds
sbb
jle
mov
les
xchg
add
outs
fs
adc
dec
cmp
adc
cdq
aad
inc
rol
ret
jl
mov
ins
xchg
pandn
leave
je
stos
adc
btr
cmp
jl
sbb
add
arpl
push
fmul
dec
inc
sbb
jmp
adc
je
sbb
movs
(bad)
outs
add
cmp
ja
and
bt
push
push
jmp
adc
test
ret
ret
adc
push
inc
cmp
jne
inc
mov
lods
sti
dec
jne
les
das
es
iret
je
xor
xchg
adc
xchg
mov
repz
push
dec
mov
das
jge
cmps
inc
lods
inc
mov
in
nop
xchg
push
inc
enter
xchg
mov
xchg
push
call
mov
mov
mov
call
call
xchg
lods
mov
add
inc
xchg
mov
adc
add
inc
xlat
das
ret
mov
and
or
sar
pop
push
out
jo
push
pushf
aam
and
fld
cmp
ret
fs
xchg
or
xor
push
jp
or
cmc
mov
ret
shr
test
adc
pop
or
push
pop
adc
add
aas
or
pop
xchg
add
je
adc
sar
test
or
mov
inc
test
je
addr16
cmp
dec
pop
inc
cs
mov
pop
push
adc
ss
dec
imul
xor
push
out
inc
inc
xchg
rol
scas
or
adc
pop
jns
fwait
sub
ins
nop
loope
sub
ror
adc
addr16
add
lahf
test
rcl
or
and
jmp
dec
or
sub
test
ffree
mov
and
mov
in
in
sub
add
push
lea
cmp
jle
add
aaa
mov
fcmovne
mov
pop
mov
jns
mov
movs
je
in
push
bound
sub
and
jle
or
mov
inc
inc
push
sbb
xchg
shl
sbb
mov
pusha
mov
cmp
jae
cwde
pop
dec
enter
xchg
pop
jle
into
add
mov
loop
cwde
cmps
loop
rol
mov
xor
or
cmp
shl
int3
mov
push
push
inc
(bad)
bound
stos
mov
push
cmp
adc
push
repz
mov
sbb
inc
sbb
aam
push
pop
mov
mov
and
jns
xor
and
inc
sbb
inc
dec
or
mov
rol
es
sub
push
sbb
push
or
out
lahf
sbb
inc
or
cmp
mov
cmps
push
fsubr
shl
mov
add
test
fadd
stc
pop
inc
or
fsub
adc
adc
aas
or
dec
addr16
inc
xor
mov
lods
in
dec
not
rol
cwde
xchg
sti
dec
cmp
pusha
add
xchg
cmps
inc
icebp
and
addr16
cmovg
(bad)
rcr
jo
ss
add
and
mov
mov
dec
add
or
or
or
in
jne
sbb
push
clc
aad
movs
mov
cmps
loope
mov
test
dec
jae
loope
popa
mov
popa
mov
mov
sbb
stos
adc
jp
jo
and
arpl
cmps
sub
sub
xor
stos
int3
push
imul
and
push
and
inc
popa
inc
mov
inc
push
add
scas
adc
cld
pop
mov
into
sahf
pop
push
jb
fnsave
sub
cmp
add
cld
jne
dec
js
add
test
fwait
jns
sub
dec
jne
int
dec
inc
and
add
hlt
stc
pop
and
adc
dec
fiadd
jmp
push
jne
cwde
adc
adc
pop
sbb
and
stos
push
or
cmps
sbb
mov
cmp
fs
and
mov
xchg
sbb
ins
push
mov
test
mov
xchg
jmp
dec
sub
scas
addr16
mov
pop
inc
sahf
sub
jb
dec
pop
cmps
push
mov
adc
pop
pop
fadd
ss
fdiv
push
sbb
jo
xor
cmp
dec
test
xchg
ret
ja
pusha
and
lods
cwde
psrlw
and
test
iret
in
push
inc
inc
push
add
jecxz
xor
adc
xchg
popfw
in
hlt
hlt
xchg
dec
retf
mov
inc
pop
sub
repz
sub
xor
sbb
sbb
mov
mov
cmp
jb
cmc
jmp
push
(bad)
or
call
pop
mov
and
pop
adc
push
xchg
xchg
jecxz
les
movzx
mov
mov
inc
push
adc
xor
cmp
or
push
test
rol
addr16
cmp
pushf
mov
and
je
add
iret
fcom
in
push
mov
and
iret
out
outs
cld
inc
mov
add
(bad)
mov
pushf
test
fs
jmp
and
add
push
ret
xchg
inc
enter
cli
cdq
movs
daa
(bad)
push
or
dec
arpl
push
je
sahf
sbb
cmp
pop
jge
imul
pop
test
movs
jae
dec
cmp
xchg
xor
in
cmps
out
sbb
lods
sar
mov
cmovne
popf
push
daa
xchg
dec
xor
cld
lock
xchg
cmps
test
mov
mov
pusha
add
into
push
in
lds
inc
enter
loopne
pop
sbb
dec
add
push
scas
popf
(bad)
iret
rol
enter
push
rol
dec
xchg
ins
clc
repz
pop
mov
push
mov
sub
rcl
jbe
sbb
xor
dec
mov
inc
sub
mov
outs
sbb
in
sbb
xor
dec
clc
pop
push
dec
lock
add
add
ret
rol
add
not
mov
xchg
retf
xchg
add
cmc
push
adc
dec
jno
enter
xchg
adc
ficom
xchg
ds
fcmovnu
test
loopne
cmp
je
scas
test
or
pop
stos
(bad)
mul
sub
push
push
and
pop
pop
or
push
inc
ja
movs
stos
xlat
inc
imul
call
push
push
adc
sti
mov
jmp
push
retf
vmread
clc
jl
xor
dec
jnp
add
les
pushf
loope
mov
jbe
lods
xchg
jne
lea
(bad)
push
xchg
int3
jnp
stc
mov
aam
enter
add
int3
push
or
adc
push
hlt
sti
test
push
mov
movs
addr16
out
pop
jns
mov
inc
sub
and
jle
sub
cmp
jl
out
fild
push
sub
jge
mov
mov
adc
sahf
inc
dec
push
adc
std
add
enter
icebp
and
(bad)
fstp
add
jmp
add
xor
data16
shl
arpl
sbb
mov
(bad)
mov
push
dec
and
add
(bad)
in
data16
test
sbb
mov
or
jecxz
loopne
clc
dec
cli
push
fs
sbb
push
test
mov
push
les
push
add
add
or
xor
jmp
clc
mov
je
jp
mov
add
push
icebp
inc
adc
(bad)
mov
sub
das
adc
or
dec
and
or
dec
daa
fcomp
cmp
hlt
jnp
in
pusha
xor
xor
fbld
jecxz
ss
lahf
shl
ficomp
fadd
inc
movs
mov
adc
push
shl
pop
movs
add
and
and
push
xchg
(bad)
retf
add
dec
jne
cmp
call
mov
mov
dec
cmps
popf
movs
repz
(bad)
rol
popa
xor
mov
ret
dec
adc
sar
push
and
push
pop
cmp
mov
fs
cmp
fdivr
dec
je
xlat
jecxz
lahf
hlt
xchg
xchg
xor
rol
adc
jl
rcl
lea
or
sub
xor
mov
pop
push
push
call
and
xchg
mov
mov
adc
inc
cmp
xor
mov
je
hlt
mov
(bad)
je
cmp
sbb
xor
clc
fsub
sbb
lods
mov
ret
aas
pop
sub
fucomip
out
jecxz
pop
enter
addr16
mov
dec
sahf
sbb
xchg
popa
ret
in
push
ror
xchg
shl
mov
add
loopne
xlat
push
pop
arpl
cmps
clc
test
lgs
les
dec
sbb
add
sbb
push
add
mov
inc
(bad)
push
adc
and
(bad)
adc
cmp
inc
or
mov
das
xor
pop
sbb
retf
inc
(bad)
stos
pusha
ret
xchg
pop
dec
inc
scas
push
push
rcr
xor
mov
gs
es
sbb
or
push
inc
pop
icebp
lods
sbb
into
mov
je
(bad)
dec
mov
lock
pop
aaa
arpl
sahf
ret
adc
pop
pop
xor
cmp
sti
adc
cmp
sub
push
pusha
push
sbb
movs
scas
cmps
mov
cmp
shr
inc
loop
sub
cwde
rol
push
loope
push
out
(bad)
addr16
sbb
push
sub
inc
push
daa
pop
cmp
pop
inc
xchg
movs
or
mul
scas
sbb
scas
sbb
call
sbb
dec
and
pop
dec
push
xchg
and
test
pop
jae
ins
rol
(bad)
jmp
mov
fcmovne
or
mov
shl
sub
repnz
pop
movs
mov
aam
push
xchg
loopne
jae
jne
ja
and
(bad)
mov
sbb
pop
int
call
sti
pop
dec
fisub
add
fiadd
jmp
add
arpl
sub
or
(bad)
pop
dec
xchg
mov
aas
sub
jne
es
and
jecxz
or
and
ret
xor
les
ret
lods
inc
and
hlt
adc
sbb
and
in
in
daa
cld
fild
hlt
test
push
dec
enter
aaa
jp
pop
(bad)
pop
ret
pop
add
aam
adc
sbb
rol
or
pop
ins
icebp
mov
sbb
adc
adc
in
out
sub
push
push
call
daa
in
inc
dec
in
push
push
sbb
and
rcr
mov
sbb
mov
ds
clc
and
mov
and
or
inc
xchg
popa
mov
data16
add
xor
push
add
test
or
sub
xchg
adc
test
mov
inc
mov
or
movs
sub
lods
xor
jmp
xor
dec
mov
inc
or
jmp
repnz
in
lods
xchg
xor
mov
cmp
clc
jmp
je
ror
je
repz
jmp
add
or
(bad)
fwait
inc
bound
mov
mov
sub
or
popf
xlat
aas
test
pop
pop
or
mov
mov
arpl
hlt
in
sub
jge
sbb
call
add
xor
ss
add
add
add
mov
arpl
sbb
mov
(bad)
adc
cmps
dec
mov
sbb
mov
hlt
(bad)
imul
xchg
leave
arpl
mov
ss
in
or
stos
jb
push
(bad)
clc
lods
shr
(bad)
ja
add
cmps
repz
adc
add
ss
push
test
in
jge
jb
jmp
add
cmp
push
sbb
dec
lods
jne
add
xor
mov
mov
fisttp
je
push
inc
fisttp
test
jne
mov
gs
add
adc
rol
aaa
sbb
dec
fnstenv
mov
pusha
jnp
pop
mov
pop
mov
xlat
xor
gs
inc
test
pop
sbb
inc
push
add
cmp
mov
mov
xchg
push
popa
add
xchg
xchg
pop
scas
add
push
or
outs
lock
adc
call
aaa
lods
rol
cmp
jne
sub
pusha
fdiv
or
push
(bad)
out
add
add
(bad)
pop
dec
pop
and
or
push
cmp
retf
dec
xchg
or
add
ja
xchg
cmp
cmp
add
pop
or
sbb
inc
push
or
data16
push
clc
loope
or
rsm
jge
addr16
jae
lds
fild
cmp
and
push
dec
push
add
sub
aaa
pop
mov
(bad)
cmp
movs
xchg
xor
jne
sub
cwde
adc
sub
sbb
ds
or
mov
nop
adc
fwait
or
sub
sub
push
xchg
leave
cmp
mov
cmp
inc
stos
sub
mov
mov
sbb
icebp
push
dec
sbb
nop
jne
adc
jmp
call
and
inc
sbb
sbb
and
and
jl
fisttp
data16
cmp
inc
es
sbb
xor
xor
cmp
in
add
cmp
push
aam
push
lgs
xor
xchg
fsub
or
jae
dec
or
cs
and
and
inc
sbb
ins
test
and
adc
dec
sub
mov
(bad)
lea
pop
xor
repnz
sbb
dec
adc
sbb
mov
daa
pop
add
xchg
sub
and
adc
and
pop
adc
pop
pop
not
mov
push
nop
sub
inc
dec
push
les
ret
lahf
sub
stc
pop
or
pusha
ficomp
fldenv
xor
je
adc
pop
or
(bad)
jmp
in
adc
or
pop
inc
push
inc
adc
cmp
cli
out
imul
cld
imul
pop
aam
mov
dec
sahf
xor
adc
dec
push
xchg
jbe
js
repnz
and
and
jg
push
add
outs
mov
push
and
test
mov
(bad)
mov
mov
or
aaa
push
(bad)
shr
jmp
fiadd
jo
shl
cmp
not
push
fs
dec
mov
(bad)
mov
cmps
inc
jb
test
test
pop
add
movs
arpl
sbb
es
or
jg
sbb
and
or
repnz
nop
cmp
pop
je
xchg
push
push
in
nop
loopne
in
or
mov
sub
xor
lahf
ffreep
and
add
push
cmp
jl
add
loope
adc
add
adc
push
pop
jge
clc
add
cmp
or
and
jg
adc
or
movs
daa
ja
dec
mov
add
pop
adc
add
(bad)
inc
dec
inc
jge
xchg
mov
adc
loop
pop
mov
pusha
hlt
jl
jmp
nop
xchg
or
mov
pop
rol
je
je
jg
sbb
or
and
sub
call
jge
test
and
in
loope
test
bswap
dec
xchg
nop
scas
cli
adc
ss
or
adc
inc
xor
or
dec
cmps
mov
or
clc
xchg
enter
or
adc
jle
push
ret
loopne
or
call
dec
out
test
out
cmp
mov
shl
add
pop
enter
jb
hlt
lock
dec
lock
test
lock
jmp
cmps
and
add
pop
add
jne
inc
sbb
jmp
ins
fs
sbb
ins
ret
jno
in
or
fwait
pop
jbe
cmp
mov
jecxz
(bad)
mov
(bad)
mov
mov
xor
jge
jge
shl
and
bound
fwait
sub
mov
ins
popa
and
jecxz
cmp
pop
add
push
hlt
stos
sub
jno
add
pusha
lods
inc
add
bound
mov
pop
imul
push
out
pop
loopne
sub
push
in
jbe
rsqrtps
in
cwde
mov
and
add
adc
add
push
or
es
xchg
mov
sbb
inc
push
xor
pop
dec
or
xchg
scas
inc
xor
sub
rcl
inc
and
dec
sub
rol
cdq
adc
lods
shl
out
add
es
in
jecxz
call
and
xor
cs
outs
adc
push
jb
fs
setle
fild
das
inc
jmp
add
pusha
dec
jno
bound
add
test
or
sti
cmp
jp
lock
cli
or
dec
cwde
mov
sub
call
mov
cdq
lods
outs
ret
push
add
adc
or
add
sub
retf
jmp
ret
cdq
sub
push
cmp
push
retf
mov
mov
(bad)
and
lahf
in
movs
push
or
loope
outs
outs
mov
jbe
stos
rcr
ins
movs
adc
cmp
xor
xchg
cmp
ds
add
dec
push
cmp
add
ja
in
daa
xchg
loop
arpl
and
rcr
sub
push
jecxz
xor
cmp
cs
lock
lea
mov
dec
jg
jge
cli
(bad)
jl
and
mov
and
dec
iret
imul
fadd
push
push
bound
push
inc
jbe
pushf
jmp
jbe
add
outs
gs
pop
mov
adc
repnz
or
dec
jnp
inc
pop
repz
xchg
add
adc
sbb
enter
in
rol
inc
inc
fadd
scas
and
inc
fimul
shl
enter
cdq
nop
loopne
fcom
sahf
(bad)
cmp
aaa
dec
iret
and
mov
fsub
push
and
dec
aas
daa
ds
std
pop
push
push
mov
xor
mov
fs
nop
or
jnp
bound
pop
sub
pop
ja
call
add
pop
dec
dec
add
add
sub
dec
cld
inc
or
in
cmp
rcr
in
or
adc
mov
add
add
sbb
aam
mov
test
push
cmps
xor
addr16
sub
sahf
(bad)
or
sahf
aam
inc
xor
sar
add
ficom
gs
inc
mov
jae
mov
inc
sbb
or
pop
xchg
mov
add
std
ins
mov
xchg
adc
or
add
sub
and
fcom
cmp
inc
xchg
add
nop
adc
push
jb
fsub
loopne
adc
jmp
adc
retf
or
cmc
add
pop
add
or
mov
hlt
clc
add
out
jmp
clc
cmp
xor
xchg
push
je
(bad)
js
sub
jle
fadd
jle
xchg
and
xchg
push
dec
xor
mov
lods
ins
and
push
add
test
inc
lds
retf
fwait
test
mov
push
adc
jmp
lods
add
outs
std
ds
inc
xchg
rol
push
or
imul
push
adc
inc
mov
out
lea
lea
or
loop
add
lahf
shl
cmp
mov
add
xor
jmp
sub
aam
mov
daa
jmp
jae
xor
leave
stos
jl
and
push
dec
clc
scas
je
mov
push
enter
pop
(bad)
push
sub
add
dec
hlt
mov
push
int
jle
cmp
push
adc
add
mov
xor
in
push
das
pop
cmp
pop
mov
add
pop
pusha
(bad)
(bad)
add
rcr
bound
push
cmp
mov
jle
jo
xor
inc
sbb
mov
(bad)
pop
xor
mov
outs
ret
dec
js
retf
pop
xor
inc
rol
pop
test
push
(bad)
sub
sub
ja
add
jl
cmp
pusha
push
pop
adc
jne
sbb
mov
and
test
push
stc
in
mov
mov
and
in
jbe
push
in
jl
xor
add
and
movs
jecxz
jo
dec
adc
xchg
push
jle
pop
xor
adc
sbb
jl
adc
call
loopne
xor
aaa
dec
jp
jno
cmp
rol
push
(bad)
push
push
fidiv
push
pusha
loop
sbb
sub
test
call
pop
loopne
push
pop
nop
push
or
and
push
sbb
je
pop
mov
dec
push
js
es
add
pop
pop
pop
or
add
pop
adc
imul
popf
cs
jle
sbb
retf
jle
(bad)
sahf
js
sbb
dec
add
inc
and
pop
int3
inc
adc
and
inc
adc
or
mov
add
dec
scas
call
adc
or
xlat
and
cs
sbb
loope
inc
sub
pushf
sbb
mov
lea
push
and
out
fs
add
test
mov
add
mov
call
mov
push
adc
cs
xchg
xchg
test
sub
lahf
cmp
add
pop
sub
fadd
ror
sub
icebp
push
rcl
xor
jo
pop
adc
adc
sbb
jo
sub
jmp
jl
mov
pushf
inc
lock
or
rcr
jae
xchg
outs
pusha
xchg
jbe
hlt
adc
cmp
mov
pop
(bad)
dec
enter
mov
neg
es
cmp
cs
add
or
xchg
cmp
jns
cmp
aas
dec
and
push
and
(bad)
out
sar
ja
lds
and
jl
inc
movs
ss
and
(bad)
outs
xchg
cli
and
aaa
xchg
xchg
mov
mov
push
pop
imul
xchg
int3
and
cmp
mov
mov
jg
mov
inc
into
pop
(bad)
(bad)
cmps
rcl
inc
mov
xor
loope
and
adc
or
jmp
xor
sub
ret
je
xchg
test
jne
push
pop
into
mov
mov
popa
push
or
add
pop
inc
jmp
sbb
push
fist
cmp
clc
xlat
push
cmp
jl
mov
dec
xchg
adc
dec
push
xchg
das
add
and
enter
fldenv
fcomp
pop
jl
cmp
mov
fld
push
or
cmp
cmp
xchg
stos
adc
test
icebp
imul
call
daa
bound
call
pop
or
mov
repnz
test
inc
shr
dec
je
inc
(bad)
sub
and
cmp
add
into
cmc
inc
ror
ja
inc
add
cmp
js
pop
and
je
mov
sub
jae
sbb
lock
pop
scas
cmp
pop
data16
(bad)
cdq
aam
clc
popa
mov
push
adc
data16
mov
in
xchg
or
in
and
cwde
or
fsub
dec
adc
cdq
sbb
inc
dec
movs
(bad)
pop
test
push
push
inc
xor
fisub
mov
test
xchg
dec
adc
push
adc
movs
icebp
sub
dec
mov
mov
push
cmp
inc
fcomp
loopne
mov
inc
pop
sbb
jmp
mov
fwait
jp
xchg
mov
rcr
and
dec
hlt
aaa
scas
repnz
xchg
lea
test
add
or
stos
je
sub
dec
push
push
shl
pushf
aam
bound
ret
push
inc
retf
jo
dec
jo
pop
pop
mov
popa
and
xchg
sub
mov
cs
cli
push
xor
sbb
test
add
in
das
movs
xchg
inc
not
push
pop
inc
aaa
in
iret
sahf
inc
inc
jmp
sbb
jnp
sbb
sub
pop
fstp
test
and
rol
pusha
(bad)
sbb
push
cli
cmp
add
fbstp
add
dec
cmps
or
sbb
adc
mov
stos
sub
sub
jne
push
or
xor
jo
jne
mov
jl
shr
mov
call
iret
(bad)
and
mov
pop
sbb
(bad)
xchg
and
sub
sub
pop
shl
neg
or
adc
or
enter
stos
sbb
mov
jp
mov
jp
dec
jge
jge
xor
clc
js
or
lods
and
icebp
imul
inc
jp
add
xor
ins
hlt
shr
mov
inc
daa
scas
pop
push
mov
test
cwde
jno
xor
jp
push
push
xchg
mov
adc
adc
cmp
hlt
sub
inc
xor
jae
lock
hlt
test
(bad)
call
cmp
imul
or
fmul
push
xchg
jl
mov
sub
push
dec
jne
jp
nop
cmp
push
test
iret
lods
mov
addr16
out
mov
sbb
mov
out
sub
stos
cmp
ret
div
adc
mov
sub
add
out
je
inc
pushf
mov
add
xchg
mov
mov
ja
ret
or
cmp
mov
and
mov
les
or
cmp
add
cld
dec
mov
or
jne
pop
es
sub
xchg
dec
add
jo
inc
pop
adc
mov
lds
push
into
jmp
ror
stos
(bad)
mov
test
loope
iret
mov
retf
rol
pop
iret
mov
leave
mov
sub
inc
pop
test
xor
dec
psubusb
aad
mov
je
push
jne
inc
or
inc
jmp
add
add
xchg
xor
dec
int
mov
jmp
(bad)
fisubr
push
mov
and
xchg
imul
or
fisttp
xor
inc
dec
pop
pop
dec
loope
mov
mov
inc
or
mov
add
imul
mov
lock
fucom
and
mov
push
daa
jno
(bad)
hlt
in
cmp
test
pop
fld
inc
mov
inc
ret
and
mov
aaa
(bad)
xchg
pop
or
mov
cmp
cmps
stos
pop
imul
aas
push
mov
cwde
pop
retf
add
inc
cmp
scas
js
pop
test
enter
or
in
sub
jmp
sub
shl
sub
(bad)
(bad)
int3
ret
mov
out
jo
test
add
rol
sbb
out
pop
cmp
adc
jle
pop
popa
or
sbb
push
pop
push
test
fwait
adc
cmp
inc
loopne
test
sahf
xchg
pop
movs
and
mov
test
cmp
loope
add
inc
jb
int
push
jge
sti
xchg
jo
imul
rcr
sbb
add
fcomp
int
xchg
mov
mov
dec
xchg
push
fistp
adc
push
js
rcr
inc
or
cld
sub
sbb
adc
mov
inc
mov
push
and
clc
test
sbb
js
jmp
cmc
mul
adc
clc
mov
mov
or
adc
repz
mov
dec
or
push
add
pusha
jne
in
xor
nop
enter
jns
hlt
adc
xor
mov
pop
xor
lea
sub
inc
sub
mov
inc
push
aas
fsub
repnz
lods
test
clc
(bad)
sbb
cmp
or
adc
mov
push
adc
cmp
je
adc
sbb
mov
fst
test
pop
fwait
mov
sbb
cmps
(bad)
pop
and
jae
addr16
and
xchg
mov
les
pop
push
mov
add
outs
ds
rcr
lea
mov
ret
sbb
sbb
idiv
sbb
sbb
sbb
add
sbb
xor
cld
pusha
sbb
push
xor
jecxz
adc
push
les
cmp
sub
xor
in
adc
xor
jbe
pusha
inc
sbb
mov
jb
mov
push
xchg
or
bound
push
mov
push
sbb
jmp
aad
sub
inc
jecxz
out
imul
test
cmps
aam
and
or
cmps
sub
mov
dec
ds
inc
and
jo
xchg
adc
inc
sub
into
lods
sub
inc
or
adc
xor
jmp
dec
or
adc
nop
mov
shl
xor
das
cmp
imul
jge
popa
sub
xor
cmp
and
and
mov
hlt
sub
mov
or
call
out
aam
or
xchg
icebp
jae
jmp
and
test
addr16
jb
movs
outs
lock
test
or
inc
mov
adc
xchg
dec
xchg
(bad)
shl
sbb
or
fld
sbb
add
fmul
or
push
sbb
adc
add
ja
mov
ja
out
stc
adc
cmp
std
or
push
movs
mov
add
repz
test
push
dec
not
lock
inc
lods
popf
in
or
imul
shl
bound
mov
nop
fst
mov
int
(bad)
mov
xor
xchg
and
add
xchg
push
pop
xchg
inc
mov
scas
cwde
pop
mov
pop
ud1
jg
clc
sub
mov
adc
push
ss
push
pop
xchg
loope
repnz
cmps
xor
mov
test
push
adc
movs
inc
das
xlat
fidivr
pop
sbb
inc
mov
popf
cvtps2pi
bound
cdq
xchg
sbb
inc
add
jmp
inc
xor
jno
push
and
cmp
jne
addr16
outs
ret
and
test
mov
pop
fld
popa
jb
sub
xor
(bad)
adc
loope
cmp
lock
push
xchg
dec
mov
into
pop
mov
sub
sbb
cmp
mov
add
sbb
mov
call
mov
push
adc
and
mov
sbb
inc
sahf
cdq
cld
addr16
mov
jp
aam
sbb
pop
call
fwait
push
dec
xchg
(bad)
xor
push
pop
inc
cmp
mov
dec
or
and
mov
nop
mov
and
fld
jmp
popf
je
mov
call
pop
jl
ret
daa
mov
push
push
sbb
or
in
out
outs
add
in
(bad)
cmp
xchg
push
sbb
ret
jecxz
mov
sub
imul
es
or
push
fisttp
fdiv
sub
add
jnp
cld
adc
mov
pop
test
mov
jge
iret
inc
jmp
lea
xor
sbb
xor
xor
pop
daa
dec
cmp
iret
add
cmp
repz
and
pop
sbb
(bad)
fwait
add
push
mov
mov
dec
jmp
mov
outs
ror
inc
pop
or
jnp
mov
repnz
sbb
and
cmp
dec
sub
mov
cmp
mov
push
add
lahf
xor
mov
clc
dec
push
fs
out
cmp
pushf
inc
pop
rcl
push
dec
(bad)
mov
pop
popf
lods
fisttp
mov
sbb
xchg
jae
push
fstp
inc
mov
adc
clc
jge
cld
mov
dec
clc
out
mov
retf
ins
popf
imul
or
jns
sbb
jne
test
mov
dec
test
ror
inc
stc
sub
push
movs
mov
or
stos
inc
loopne
sahf
inc
jns
inc
bound
punpckhwd
sub
add
fidivr
sahf
add
push
push
xchg
push
retf
cmp
jl
push
ds
daa
xchg
ja
fidiv
adc
inc
ror
push
ss
push
push
pushf
loope
mov
dec
call
scas
mov
xor
sbb
rdpmc
jnp
movzx
aam
in
mov
mov
test
in
xor
inc
dec
loopne
mov
dec
mov
sub
iret
pop
dec
fmul
ss
adc
and
dec
call
push
aam
adc
js
ja
jo
add
or
mov
call
popw
add
sub
sti
nop
dec
sub
int3
mov
or
fwait
mov
and
jl
pop
stos
nop
enter
xchg
adc
xchg
lea
fidiv
lea
iret
push
pop
fistp
push
add
outs
push
push
aas
jns
das
dec
mov
pop
mov
adc
push
enter
in
cmps
test
pop
loopne
lea
mov
add
inc
aam
adc
xchg
ins
loopne
xor
mov
cli
and
adc
jmp
push
pop
fs
iret
rcl
xchg
push
aam
rcr
inc
loopne
dec
dec
push
mov
mov
lods
cmp
imul
mov
lock
mov
jle
in
in
sbb
pop
call
lods
mov
adc
aas
sub
push
sar
hlt
test
sub
psllq
rcl
sbb
mov
aam
push
sub
mov
add
sbb
sbb
or
or
xchg
and
mov
dec
sub
call
adc
mov
or
xchg
lds
sub
fwait
jbe
lods
xchg
leave
adc
test
out
xor
jae
fld
and
xchg
inc
and
cmp
add
xor
cmp
and
adc
add
cs
sbb
fistp
cmp
push
sub
mov
popa
ret
test
stos
sub
sar
cld
xchg
dec
or
dec
jmp
out
mov
clc
jae
mov
or
movs
push
jle
test
mov
dec
movs
fild
fadd
clc
daa
sbb
je
movs
std
icebp
arpl
mov
cmovns
xor
mov
cmp
jl
jne
or
jmp
cmp
ja
bts
jmp
adc
movs
sbb
and
sar
push
fsub
pop
gs
pop
cmp
push
dec
je
mov
sbb
lods
inc
xchg
movs
sti
aad
movs
mov
or
call
cmp
jo
fst
push
daa
adc
jg
mov
xchg
into
adc
fs
adc
and
mov
jae
cmp
test
adc
mov
push
sub
push
inc
lods
add
les
or
mov
in
test
test
dec
(bad)
sar
cmps
push
adc
push
jne
into
push
push
cmp
sub
and
pop
add
xchg
inc
pop
daa
retf
mov
adc
shl
dec
adc
add
lods
aam
xor
sar
dec
mov
call
xchg
pop
add
add
adc
push
inc
and
push
ja
in
ret
test
popf
arpl
in
lock
pop
xchg
mov
cmp
test
icebp
add
cs
mov
ja
adc
pop
test
inc
or
push
fldenv
scas
shl
sbb
jbe
and
cmp
and
mov
leave
popa
pusha
dec
inc
dec
fdivp
call
xchg
(bad)
pop
mov
dec
pop
(bad)
shr
inc
pop
add
inc
stos
dec
mov
cmp
jnp
mov
add
daa
iret
cmp
stos
adc
and
out
jns
inc
push
leave
push
jae
fstp
sahf
nop
sahf
adc
pop
pop
mov
inc
(bad)
mov
jb
add
fwait
sub
(bad)
mov
popf
ror
(bad)
je
jmp
push
adc
or
fdivr
xchg
sbb
cmp
ror
add
stos
cmp
sbb
push
or
or
dec
and
stos
ja
xor
lods
add
add
scas
pop
(bad)
xor
sub
(bad)
ret
ret
rcr
gs
jmp
xor
rol
push
movs
xor
aam
xlat
inc
popf
bound
popa
lods
pop
(bad)
dec
ror
sub
push
sahf
mov
pop
mov
out
xchg
and
inc
pop
call
cmp
lods
sub
out
pop
xor
leave
adc
popa
test
es
and
xchg
jle
(bad)
pop
sub
push
push
fwait
or
add
push
mov
mov
inc
dec
call
mov
ins
push
xor
xchg
mov
push
cmc
adc
mov
test
sbb
inc
sbb
xor
mov
sub
ins
push
imul
xchg
imul
ins
xchg
sbb
jle
push
mov
jle
fs
adc
sub
sub
add
fwait
ss
jg
js
xchg
pop
jne
lods
movs
in
sbb
mov
test
xchg
jae
hlt
scas
cmp
rol
(bad)
leave
pop
pusha
mov
xchg
and
loopne
inc
fbstp
fldl2t
in
mov
scas
lods
(bad)
jmp
pushf
sbb
inc
ret
lock
mov
sbb
inc
rol
xor
loopne
mov
int3
ret
test
fld
ret
pop
mov
data16
(bad)
scas
in
cmps
cmp
lock
inc
or
inc
and
pushf
xlat
es
(bad)
jmp
sub
aas
sbb
xor
add
aas
dec
mov
movs
das
sbb
out
mov
jp
rol
or
cmps
jge
or
mov
into
sbb
into
in
addr16
out
jns
push
js
mov
mov
fs
adc
fcom
call
movs
out
and
movsx
and
add
mov
xor
fdivr
(bad)
cs
push
xor
int3
and
clc
mov
sbb
and
adc
lods
mov
pop
dec
stos
shr
popf
sub
pop
bound
mov
std
outs
sub
aaa
ret
clc
jmp
push
lea
popf
ins
pop
sbb
dec
mov
sbb
add
inc
add
xchg
in
adc
bound
es
pop
fstp
call
clc
mov
(bad)
retf
push
jle
es
in
inc
adc
cmp
pop
adc
adc
adc
push
(bad)
lea
and
out
add
and
jg
icebp
mov
jg
mov
add
sbb
or
out
xchg
adc
and
or
jg
mov
push
add
adc
enter
add
or
push
inc
or
(bad)
pop
nop
pop
mov
xor
cmps
lock
arpl
sub
loopne
rcr
push
pushf
add
lods
and
xor
push
push
outs
mov
lods
cmp
jmp
mov
jmp
cld
in
inc
sahf
sbb
mov
je
jbe
pop
xlat
pop
mov
test
inc
or
and
sbb
and
mov
pop
dec
add
or
dec
push
fcmovbe
mov
lock
mov
xor
mov
bts
js
adc
or
(bad)
dec
movs
jb
clc
inc
(bad)
pop
scas
mov
call
ins
arpl
add
pop
dec
mov
adc
xchg
inc
imul
call
shl
pop
adc
fnsave
mov
and
or
js
test
movs
inc
dec
jne
sbb
xchg
mov
(bad)
or
movs
outs
dec
mov
and
cs
add
(bad)
pop
jb
add
adc
sbb
xchg
mov
shr
aas
lods
imul
xor
sbb
or
or
mov
cli
and
shl
dec
add
dec
xor
ror
push
mov
fsubr
cmp
cmps
mov
shr
inc
cmp
add
mov
or
cmp
sbb
addr16
je
sbb
cmp
pop
pop
xor
or
mov
inc
inc
mov
push
mov
jb
aaa
dec
mov
cmp
xor
and
ins
ss
or
push
inc
test
sbb
fimul
push
push
pop
bnd
ret
mov
push
ret
push
pop
xchg
cld
inc
pop
in
add
inc
xchg
push
sub
cmp
sub
lods
ins
xchg
(bad)
leave
(bad)
push
aaa
jo
nop
std
dec
push
jl
cmps
ins
jmp
or
add
(bad)
daa
jns
xchg
mov
outs
or
cmp
sbb
dec
jg
or
push
sahf
mov
mov
cmp
and
in
xor
add
mov
push
mov
jmp
sub
jae
clc
cs
lea
add
call
clc
push
sub
mov
jmp
mov
sub
or
or
jmp
add
jge
xor
jecxz
icebp
or
adc
(bad)
or
enter
mov
sub
stc
mov
frstor
push
jb
bound
dec
mov
cdq
xor
repz
xchg
inc
adc
je
cmp
fcomp
jo
adc
pop
into
add
mov
retf
pop
sahf
rol
in
pop
xchg
fs
(bad)
cmp
idiv
xchg
cmp
fwait
inc
push
and
or
jne
push
push
cmps
mov
sbb
idiv
shr
add
(bad)
enter
lock
les
jmp
imul
and
xchg
mov
inc
inc
inc
mov
push
ja
push
ror
call
and
sbb
add
scas
nop
sbb
je
push
xor
add
inc
dec
aad
mov
cmp
push
cmps
mov
and
or
mov
ja
fcmovu
bound
cmp
mov
pop
mov
pusha
xor
mov
ret
ins
imul
test
out
pusha
nop
bound
sbb
imul
sub
inc
add
or
adc
pop
arpl
add
jb
jge
cmp
fs
pop
inc
inc
or
pop
sbb
xchg
es
mov
cmp
outs
mov
jne
adc
jne
push
cmc
or
jno
add
aad
ret
jmp
nop
inc
mov
or
cmp
or
mov
pop
pop
push
add
pop
sbb
movs
rcl
repnz
sbb
mov
add
add
mov
pop
sti
sub
loopne
pusha
dec
mov
inc
or
loopne
add
fild
pop
sub
adc
inc
xchg
mov
lock
scas
daa
cmp
jmp
scas
adc
jne
in
and
data16
or
sar
jbe
inc
pop
inc
call
in
loopne
inc
sbb
in
push
loopne
pushf
push
add
imul
in
mov
push
leave
jnp
sbb
and
cmp
add
push
adc
pop
mov
mov
push
pop
add
fisub
mov
lea
xchg
push
ss
adc
jbe
cdq
lods
jo
adc
push
xchg
in
cmp
popf
dec
ret
sub
mov
xlat
pop
mov
mov
inc
or
jmp
cmp
push
dec
ja
mov
pop
ins
outs
ret
jge
mov
iret
jp
sti
dec
shr
stos
push
adc
lock
sbb
push
xor
push
jge
adc
sub
ficom
and
(bad)
sbb
add
lods
fcom
mov
dec
movs
inc
push
adc
jp
rol
aam
xor
and
int3
pop
scas
sar
and
xlat
mov
mov
arpl
les
sub
mov
nop
or
mov
or
aam
jmp
add
jg
frstor
add
or
pushf
shr
mov
sub
adc
sbb
mov
cmc
loop
mov
dec
unpcklps
xor
jo
in
(bad)
outs
shr
inc
pop
adc
push
xchg
or
test
mov
or
cmps
addr16
(bad)
adc
sub
push
addr16
xchg
push
in
mov
sbb
sbb
inc
push
adc
imul
adc
sub
push
adc
sub
mov
xor
xchg
adc
xlat
pop
mov
push
outs
inc
outs
or
mov
add
and
mov
dec
ret
mov
sbb
xor
cmp
push
(bad)
mov
add
jl
and
xchg
test
mov
mov
inc
push
mov
cmp
rcr
mov
imul
and
adc
sbb
mov
pushf
jmp
das
aad
jo
or
pop
adc
adc
mov
adc
pushf
sub
je
add
mov
and
jg
into
pop
jb
dec
and
jo
scas
(bad)
mov
ins
adc
xchg
and
push
cmps
sbb
mov
in
xor
mov
inc
(bad)
mov
xlat
adc
cmp
jl
push
push
jge
enter
inc
ins
lods
mov
mov
and
cld
push
push
test
cmp
js
cmps
mov
push
xchg
sar
inc
mov
fadd
inc
sbb
dec
inc
sub
dec
pop
je
xor
adc
test
jo
out
lods
leave
cmp
loope
sbb
popa
arpl
inc
adc
stc
xor
pop
arpl
inc
cmp
test
cmp
movs
arpl
rol
pop
pop
sub
add
xor
push
scas
dec
mov
dec
leave
(bad)
leave
adc
sub
sbb
arpl
adc
adc
(bad)
cmp
and
xor
fs
(bad)
hlt
pop
xor
dec
mov
jne
cmp
mov
push
and
jl
inc
mov
and
mov
push
inc
dec
jne
inc
sbb
ret
loopne
and
das
scas
je
aas
inc
push
cmp
daa
mov
stos
loopne
dec
push
lock
push
jge
or
aad
jb
jmp
sbb
pop
addr16
gs
cmovs
or
push
addr16
sbb
mov
and
pop
adc
call
adc
das
nop
daa
xor
shr
xor
pop
int
fidivr
push
movs
jge
or
jg
push
dec
cmp
mov
outs
shr
adc
xchg
fisubr
cmp
dec
mov
lods
outs
or
sbb
es
aaa
inc
add
dec
test
jl
inc
and
mov
jne
mov
leave
sbb
aas
and
xor
loopne
das
or
add
jmp
sbb
dec
push
pop
pop
sbb
not
retf
inc
or
inc
iret
dec
cmp
xor
inc
and
adc
sub
cld
and
or
dec
inc
or
jge
fild
jnp
jne
mov
aas
popf
nop
scas
pop
adc
or
and
add
mov
mov
ret
out
int3
add
sar
xchg
adc
push
test
or
adc
and
inc
cmps
adc
add
lods
das
and
cmps
mov
sbb
adc
fidiv
(bad)
jl
pop
mov
popf
mov
dec
adc
mov
xchg
mov
jl
rol
loopne
add
sbb
adc
lahf
inc
xchg
test
je
sub
pop
push
xlat
aaa
rcl
clc
(bad)
jns
inc
push
shl
sub
pop
mov
or
push
ss
loop
imul
ror
ja
jl
enter
lea
inc
(bad)
sbb
cld
pushf
jb
in
mov
or
xor
cs
push
ret
dec
push
cmp
mov
addr16
dec
push
inc
dec
call
das
mov
cmp
dec
or
xor
cmp
neg
jno
add
mov
out
mov
sbb
xor
ins
xchg
mov
mov
xor
rcr
adc
retf
cmp
jne
pusha
adc
test
and
xor
fwait
push
push
(bad)
bound
pop
add
in
aam
or
or
cmc
test
or
adc
adc
pusha
pop
adc
adc
adc
retf
inc
test
mov
or
add
xor
push
xor
add
call
outs
adc
jecxz
sbb
jmp
ss
mov
xchg
cmp
iret
iret
leave
setb
adc
add
sub
retf
dec
das
pop
adc
push
push
int3
jo
movs
xor
dec
mov
retf
ss
out
pop
ret
or
add
mov
aam
add
or
pop
xchg
pop
xlat
pop
sti
mov
jmp
push
xchg
mov
or
je
shl
or
add
retf
(bad)
inc
stos
mov
jle
pop
pop
imul
ret
into
add
sar
sub
pushf
pop
add
retf
fcom
add
and
add
pop
adc
lahf
adc
mov
mov
push
xor
pop
mov
and
adc
xor
shr
(bad)
jmp
clc
cmps
test
test
lock
inc
pop
push
imul
test
int3
add
sbb
dec
fcomp
ds
cmp
ret
add
lods
enter
cld
dec
fcomp
imul
addr16
and
fadd
sbb
and
shl
push
repz
sub
jmp
shl
push
jp
xchg
stc
sub
ja
adc
sbb
add
xchg
or
int
(bad)
pop
sbb
sbb
in
ffree
jno
call
mov
or
jo
mov
push
adc
push
test
mov
add
pop
add
pop
add
sbb
jge
mul
imul
mov
push
cmp
pop
inc
cmp
movs
sbb
sbb
ins
xchg
dec
sbb
and
sub
repnz
mov
(bad)
aaa
or
and
push
or
and
inc
icebp
iret
dec
and
test
iret
push
mov
dec
fidivr
movs
ja
sbb
and
pop
adc
xor
call
test
and
retf
mov
pushf
adc
aaa
mov
movs
es
data16
lds
lock
sbb
push
lea
mov
pop
fmul
(bad)
adc
add
mov
inc
pop
or
add
dec
pop
shl
fsub
or
xor
or
je
cmp
idiv
xor
push
cmp
inc
shr
and
or
or
and
scas
adc
nop
push
or
test
cmp
inc
test
cmps
inc
pop
rol
cs
jmp
or
adc
xchg
pop
jle
sahf
sbb
cmp
sbb
lea
fadd
push
test
fidivr
sub
jmp
push
mov
addr16
aad
inc
test
mov
jnp
xor
or
xchg
fs
sub
mov
add
ss
gs
jl
xor
sbb
inc
pushf
or
inc
out
shr
loop
push
push
mov
jecxz
or
cwde
add
pop
mov
mov
enter
add
mov
mov
pop
or
sub
dec
in
out
add
cmp
mov
push
mov
shl
les
fs
sar
sbb
bound
xchg
retf
(bad)
and
daa
jae
jge
ins
pusha
shl
jo
enter
sbb
ror
xlat
sub
ins
ret
jbe
nop
fsubr
in
adc
xchg
push
xor
or
jb
rcr
lock
pop
aam
pop
aam
cmovb
adc
fld
into
mov
nop
fs
adc
add
gs
movs
add
sahf
cmp
lea
outs
jb
es
adc
pop
jmp
pusha
aam
mov
or
pop
ds
nop
aam
push
xchg
ret
(bad)
cmps
loopne
aad
inc
pop
daa
push
xchg
pop
xor
mov
fcom
mov
rcr
sbb
pop
mov
adc
dec
rol
aad
and
fadd
jns
fld
out
add
xor
out
xor
mov
push
pop
xlat
in
in
add
nop
pop
daa
es
mov
addr16
aaa
scas
push
add
push
in
or
or
icebp
lea
cmp
xchg
sub
scas
dec
or
and
and
mov
mov
push
cmp
test
leave
adc
sbb
push
mov
pop
pop
add
adc
push
and
shl
call
push
xor
mov
arpl
adc
push
add
int3
push
push
sub
pusha
aaa
das
inc
sub
in
pusha
(bad)
je
es
and
movs
fld
push
je
and
mov
or
mov
mov
inc
xor
nop
popf
test
inc
sub
jmp
adc
movs
push
add
js
xchg
not
or
push
outs
rcl
(bad)
nop
das
adc
mov
xchg
pop
fst
adc
mov
inc
and
adc
arpl
mov
jo
xor
pop
dec
shr
ret
xchg
jmp
xor
addr16
ss
mov
add
inc
and
call
cwde
je
push
pusha
mov
add
pop
pop
mov
xor
and
push
jns
mov
xor
fldcw
sti
or
sar
in
pop
xchg
add
sbb
xchg
xor
rol
cmp
jne
cmp
fadd
pop
or
add
add
clc
add
popf
or
test
or
(bad)
jns
add
jne
push
lea
inc
jg
jb
aam
adc
test
std
mov
fimul
pop
mov
add
enter
dec
mov
sbb
arpl
and
aam
movs
add
jl
jp
inc
popf
lods
scas
sub
test
push
sub
mov
out
push
inc
mov
sbb
cdq
cmp
jmp
jne
adc
call
in
and
fild
jbe
pop
ja
sbb
dec
ja
mov
and
or
add
clc
frstor
retf
mov
add
imul
lea
sub
mov
enter
pushf
mov
inc
pop
add
retf
sbb
push
sbb
fdiv
xchg
add
imul
and
push
retf
and
lea
xchg
adc
pop
icebp
fisttp
xor
fst
mov
add
add
push
nop
sbb
(bad)
cmps
out
dec
js
cmp
(bad)
push
outs
xchg
jnp
sub
push
cmp
je
pop
xchg
sub
lock
test
or
add
cs
(bad)
in
aas
cli
call
or
sbb
xchg
cmp
in
mov
scas
fst
sub
call
das
sbb
and
or
xchg
fisubr
mov
push
ds
int3
in
sub
bound
sbb
xchg
outs
jb
add
out
pop
xchg
cld
mov
pop
rcl
mov
or
mov
pusha
outs
test
cmp
xchg
adc
fnstenv
jge
push
imul
lods
pop
mov
rcl
dec
pop
mov
mov
cli
fs
and
add
fist
fistp
ret
adc
(bad)
(bad)
fadd
mov
test
mov
fcom
fs
into
ds
imul
psraw
xchg
xchg
and
jecxz
in
fidiv
enter
dec
fld
mov
(bad)
jbe
ud0
movs
xor
in
fmul
adc
test
add
or
mov
push
lods
or
sub
fucomip
imul
int
inc
loopne
(bad)
mov
jns
out
(bad)
iret
xlat
cmp
dec
inc
push
xor
imul
mov
inc
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
cs
out
gs
jns
pop
push
pop
call
xlat
popf
rol
je
sub
lds
add
jmp
jno
inc
mov
movs
leave
aam
(bad)
inc
push
aaa
mov
stc
dec
and
pop
and
jbe
cmp
out
pop
cmp
xchg
ret
loope
int
push
test
jo
and
or
(bad)
jmp
mov
sub
(bad)
loop
or
cmp
xor
cmp
(bad)
nop
fimul
push
rcl
push
ror
leave
dec
addr16
push
imul
leave
ins
outs
outs
push
cmp
xor
loope
int3
xchg
sub
xchg
sub
fst
imul
arpl
in
das
scas
mov
cmps
add
mov
rol
mov
adc
and
test
and
popf
sbb
inc
pop
out
test
es
add
jge
mov
pusha
test
das
push
push
stos
and
sbb
icebp
sub
and
push
sub
xor
clc
test
sub
dec
and
retf
shl
je
xor
sbb
and
add
mov
retf
repnz
lds
pushf
les
mov
in
loop
dec
pop
inc
arpl
mov
lea
inc
shl
mov
gs
sar
mov
in
test
(bad)
jp
lahf
ret
(bad)
mov
push
test
test
dec
adc
test
cmps
(bad)
mov
jmp
cmp
sub
sub
dec
adc
sub
pop
adc
and
and
xor
adc
adc
adc
push
sub
jmp
nop
fist
in
or
test
icebp
repz
or
and
add
test
pop
ret
push
out
cmp
inc
sub
and
add
jns
pop
xor
mov
xor
sub
repz
cwde
in
and
jnp
scas
push
adc
(bad)
cmp
clc
div
(bad)
mov
in
rcr
xchg
dec
rol
mov
(bad)
push
lea
in
add
mov
pop
mov
dec
lea
cmp
or
or
lods
lds
in
mov
loopne
pop
dec
jne
push
or
mov
xor
cwde
aam
fmul
sub
xchg
jl
or
jmp
fsub
push
ficomp
push
or
loope
call
xchg
std
fwait
sbb
sar
ja
inc
ror
or
aaa
retf
cwde
sub
test
xchg
retf
sbb
gs
push
cmp
fild
sahf
inc
sbb
mov
adc
jne
jb
dec
inc
jg
(bad)
fs
call
jmp
lea
cmp
cs
jmp
jns
pop
mov
out
sbb
call
push
sar
out
shr
mov
mov
fs
xor
(bad)
dec
(bad)
gs
push
loopne
jmp
inc
jecxz
sub
dec
sub
adc
xor
je
ja
int3
jge
and
pop
mov
mov
xchg
std
jmp
adc
xchg
in
push
push
fwait
push
cmps
sahf
cld
xor
inc
mov
or
(bad)
mov
pop
aaa
daa
push
jo
fcomi
fdiv
mov
nop
in
fadd
inc
mov
xchg
cli
xor
adc
ds
xlat
iret
or
push
jo
fsubr
pop
rcl
sahf
fstp
ds
fs
sbb
outs
lock
add
and
jo
adc
cs
hlt
fadd
aam
es
aam
rcr
scas
int
sub
(bad)
mov
lahf
lock
aaa
ret
mov
mov
aad
iret
int3
fsub
and
pop
jmp
dec
push
shl
mov
ss
push
jno
into
in
xchg
cmps
(bad)
fild
mov
inc
lock
(bad)
lds
jmp
idiv
retf
stos
sar
ret
sbb
ss
sub
dec
mov
shl
in
inc
sub
cld
sub
inc
jae
pop
jp
mov
sub
adc
scas
out
mov
loope
(bad)
or
aam
aad
or
cmp
in
mov
adc
push
ins
cmp
retf
xor
in
nop
push
sub
mov
nop
adc
imul
or
dec
test
inc
iret
hlt
cmps
ret
je
cdq
dec
jb
mov
or
sbb
inc
pusha
mov
push
sbb
or
and
bound
inc
push
sbb
scas
inc
or
mov
xor
(bad)
(bad)
int3
adc
stos
je
sub
add
lods
cs
jle
jmp
sbb
adc
dec
jmp
fst
arpl
or
jl
lock
ja
push
pop
pop
clc
adc
loope
or
out
leave
das
ins
(bad)
popa
out
add
out
fcomi
mov
or
push
pop
fild
cmp
cmc
sub
aaa
loop
push
and
stos
mov
or
jo
lahf
inc
mov
dec
mov
pop
or
add
jo
icebp
cmps
xor
mov
or
out
push
leave
loopne
mov
dec
ret
stos
aam
xchg
sub
mov
scas
or
inc
imul
lahf
jecxz
dec
jne
dec
cwde
add
call
inc
adc
cmp
enter
in
jne
mov
in
das
inc
shl
imul
pushf
push
lock
mov
imul
sbb
pop
in
icebp
push
fld
cmc
test
push
jle
call
or
mov
call
lods
cmps
xor
test
push
and
xor
das
xchg
repnz
pop
leave
fs
bnd
mov
lock
inc
add
sbb
inc
jne
outs
fdivr
ins
inc
mov
shl
scas
sub
lods
repz
jo
adc
fisubr
dec
mov
test
shl
dec
jne
fwait
mov
adc
pop
mov
hlt
adc
js
hlt
gs
or
fdiv
sti
pop
and
hlt
rcr
sbb
xchg
cmp
pusha
fsubr
jg
ret
(bad)
sbb
retf
dec
xchg
test
xchg
xchg
enter
ret
or
js
push
push
xor
jno
mov
pop
ret
lahf
aam
xor
call
mov
inc
dec
gs
jno
jmp
gs
mov
xor
loop
push
imul
arpl
es
adc
pop
cmps
imul
dec
inc
div
or
jno
imul
xor
inc
mov
or
cmp
out
pop
or
adc
push
xor
fstp
sub
adc
out
mov
push
adc
dec
sbb
cmp
add
fmul
ja
scas
es
jecxz
stc
je
lea
jmp
je
add
jo
sbb
sbb
push
xor
adc
mov
addr16
inc
sub
dec
mov
je
push
data16
xchg
das
add
and
inc
ds
pop
push
jmp
or
jmp
adc
sbb
pop
pop
dec
adc
adc
jmp
pushf
cmps
dec
je
or
es
sbb
shl
hlt
das
adc
loop
push
dec
inc
loop
inc
ins
gs
fsub
add
or
call
mov
loop
or
setl
mov
mul
add
cmps
or
dec
mov
add
push
(bad)
mov
jle
call
adc
adc
mov
inc
push
push
ins
dec
arpl
fistp
dec
cdq
and
push
sub
dec
call
lods
cmc
daa
test
fidivr
stc
jmp
push
inc
or
adc
push
lock
adc
adc
in
dec
adc
dec
arpl
ja
test
sub
or
jecxz
jl
sbb
sub
jmp
xor
es
sbb
and
lock
mov
cmps
loope
jl
inc
or
inc
scas
pusha
add
adc
xchg
movs
cmp
outs
jns
mov
cld
jne
pushf
add
xor
pop
aaa
jbe
xchg
sub
std
jne
push
cli
popa
or
cmp
jb
pop
dec
push
xchg
hlt
sbb
xor
adc
loop
mov
adc
jle
adc
or
lahf
ds
ret
dec
sub
loopne
add
pop
adc
out
push
neg
add
aad
push
out
or
xchg
dec
in
popf
mov
test
test
push
inc
sahf
sbb
cld
mov
mov
daa
and
mov
cld
xor
rcl
aam
push
lahf
mov
fild
mov
pop
pop
pop
sbb
loopne
lock
add
fdiv
pop
xchg
inc
les
fisttp
call
jo
sbb
gs
jge
sub
pop
in
sbb
inc
fnstsw
adc
neg
xabort
out
scas
dec
test
aam
sbb
cmp
and
push
add
test
adc
sahf
sub
ds
add
adc
lds
pop
int3
mov
adc
jo
jne
xor
mov
sub
(bad)
mov
mov
add
mov
lods
clc
js
jl
retf
pop
stc
add
hlt
lds
pop
mov
sti
mov
lock
inc
shl
push
push
push
and
sbb
add
pop
mov
(bad)
nop
out
arpl
mov
xchg
out
movs
sar
push
das
je
push
mov
test
call
ins
mov
daa
pop
mov
ins
inc
pop
jbe
adc
xchg
ins
xchg
sub
out
jge
enter
test
or
push
mov
pop
push
jg
pop
and
call
add
pop
push
xchg
xchg
xchg
xchg
push
dec
dec
inc
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
push
mov
daa
mov
inc
push
push
rcpps
daa
daa
push
push
push
pop
daa
daa
daa
daa
pop
pop
pop
pop
daa
daa
daa
daa
pop
pop
pop
inc
daa
daa
daa
daa
inc
inc
inc
inc
daa
daa
daa
daa
inc
inc
inc
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
xor
daa
daa
daa
xor
xor
daa
daa
daa
xor
daa
daa
daa
cmp
cmp
daa
daa
daa
cmp
daa
daa
daa
and
and
daa
daa
daa
and
daa
daa
daa
sub
sub
daa
daa
daa
sub
daa
daa
daa
adc
adc
daa
daa
daa
adc
daa
daa
daa
sbb
sbb
daa
daa
daa
sbb
daa
daa
daa
add
add
daa
daa
daa
add
daa
daa
daa
or
or
daa
daa
daa
or
xchg
xchg
xchg
(bad)
icebp
repnz
daa
movs
inc
iret
rol
inc
jo
xor
imul
pop
js
lods
pop
daa
scas
or
ja
bound
push
push
sub
xchg
pop
dec
or
dec
mov
xor
mov
je
fdivr
sbb
jg
adc
pop
test
mov
inc
es
scas
(bad)
lea
rol
mov
add
push
sbb
cld
push
sub
push
mov
adc
pushf
imul
pusha
adc
mov
push
push
xor
and
xchg
push
mov
aam
dec
pop
repnz
test
adc
add
das
pusha
imul
outs
sbb
dec
cmp
inc
and
inc
cmp
js
pop
icebp
out
test
test
es
test
mov
push
dec
push
dec
hlt
mov
mov
mov
ins
or
mov
add
inc
hlt
mov
xor
mov
(bad)
test
into
add
(bad)
and
and
add
enter
inc
ja
adc
xchg
lea
adc
in
lods
cmp
inc
add
dec
jg
(bad)
xor
je
xor
retf
adc
and
sbb
xchg
push
or
push
dec
xchg
pop
inc
or
fucomp
and
mov
pushf
nop
inc
mov
sbb
leave
adc
(bad)
sar
mov
or
outs
or
adc
inc
mov
and
jb
or
repnz
or
or
enter
outs
inc
or
cwde
inc
leave
or
iret
pushf
push
sbb
pop
push
cmc
cs
je
or
(bad)
in
or
sub
lods
jge
xor
pusha
enter
(bad)
pop
mov
xchg
fiadd
cld
dec
test
or
sbb
(bad)
push
ret
shl
pop
div
ficomp
mov
mov
hlt
sahf
mov
mov
or
inc
pop
adc
jmp
inc
push
or
dec
add
repnz
mov
lea
jb
(bad)
xchg
add
lahf
push
fld
aaa
daa
jmp
adc
test
rcl
inc
lock
mov
sub
jno
or
pop
out
jae
xor
ret
push
mov
sar
and
mov
push
mov
sub
bound
cmps
movs
or
jae
(bad)
pusha
dec
mov
je
jecxz
add
sbb
adc
xchg
or
xchg
sub
lahf
loopne
sub
test
xor
jns
mov
popf
ret
mov
push
cmp
loope
or
test
push
loopne
ret
or
add
lahf
xchg
and
pop
pop
ret
clc
cmp
xor
dec
jle
in
sub
in
pop
mov
cmp
fimul
in
pop
je
bswap
and
lea
ficom
dec
pop
xor
mov
jno
jb
fsub
sub
sub
fstp
sub
or
test
mov
adc
xor
mov
mov
(bad)
mov
test
stos
test
push
jcxz
inc
pop
loopne
add
in
xchg
mov
aaa
cmc
push
in
cmc
or
loop
dec
jne
mov
xor
in
ja
add
xor
pop
xor
and
aad
or
and
push
das
add
jge
in
test
cmp
push
pop
fcomp
xchg
jo
mov
xchg
test
loope
mov
xchg
dec
jl
mov
fisub
(bad)
fcom
jl
mov
pop
and
int3
jns
es
sbb
jns
or
arpl
stc
mov
inc
mov
inc
test
(bad)
xor
adc
sbb
cmc
mov
sub
xchg
in
add
aad
mov
adc
adc
xor
jno
adc
sti
xchg
(bad)
cmp
cmp
adc
dec
and
jae
pusha
and
nop
stos
adc
or
fwait
int
xor
les
ss
mov
jmp
pop
fnsetpm(287
fsubr
adc
cmp
jno
add
add
fs
mov
push
pop
in
inc
mov
sub
mov
jo
pop
pop
in
jp
out
sub
rol
inc
adc
cdq
ret
in
test
sbb
mov
pop
loop
int3
cmp
mov
xchg
and
add
hlt
pop
(bad)
jns
minps
imul
and
ret
mov
add
retf
cmps
adc
loopne
call
sub
and
xchg
adc
xor
jo
mov
icebp
push
addr16
inc
push
adc
hlt
inc
lock
push
push
sbb
sbb
sbb
jbe
lods
dec
xor
loopne
(bad)
es
dec
in
mov
in
in
cmp
test
cmps
mov
popa
pop
adc
sub
jmp
in
or
cmp
jge
xor
push
bound
cmp
pop
push
pop
xchg
mov
sub
mov
dec
pop
jmp
fnsave
sti
add
nop
scas
add
iret
mov
inc
xchg
inc
repnz
adc
push
in
pop
xchg
push
inc
lock
clc
push
inc
in
and
mov
imul
out
jae
sub
mov
bound
sbb
sub
push
sti
nop
das
dec
lds
aam
push
cwde
push
cmp
nop
mov
mov
inc
and
push
addr16
in
cmps
loopne
xchg
sbb
inc
cmp
outs
jmp
adc
out
call
add
jmp
add
pushf
xchg
jnp
cdq
mov
cmp
in
cmp
mov
inc
movs
cmp
pop
mov
inc
mov
xchg
sub
xchg
jp
sbb
adc
add
inc
adc
sub
jecxz
jne
test
or
fwait
or
fcom
push
adc
mov
cmp
loope
pop
sub
sbb
add
xchg
push
dec
clc
add
adc
and
push
jno
xlat
std
sbb
and
jns
add
test
sbb
xor
jmp
mov
mov
jmp
jmp
dec
add
cld
fidiv
ror
xor
xchg
and
inc
imul
ds
pop
mov
popf
xor
add
sbb
cdq
pusha
cwde
sbb
loopne
cmp
xchg
adc
or
fisttp
cmp
jmp
fld
dec
rcl
adc
xor
shl
sbb
sti
pop
int
jno
fisttp
dec
ret
mov
scas
add
test
inc
add
push
lsl
pusha
xchg
fsub
sub
xlat
jg
adc
sbb
pop
or
nop
pop
aaa
fwait
dec
sub
(bad)
jmp
test
jle
mov
add
mov
enter
ficom
or
movs
sbb
or
mov
adc
pusha
and
add
dec
inc
aaa
sub
imul
cmp
cmp
cwde
jmp
pop
add
and
adc
mov
ins
or
clc
test
(bad)
mov
ficomp
sbb
fisttp
pop
es
test
rcr
sbb
lods
inc
push
jle
sbb
sub
inc
add
mov
lds
push
mov
xor
pop
out
pop
jb
daa
movs
(bad)
lock
in
neg
pop
fisub
add
xchg
dec
sbb
and
and
and
mov
arpl
(bad)
mov
add
(bad)
add
inc
test
shl
push
imul
mov
xor
data16
xchg
sub
jno
retf
data16
cmp
std
xchg
mov
xchg
or
(bad)
repnz
add
jae
je
inc
fs
je
mov
je
ins
mov
push
data16
shl
sbb
arpl
adc
adc
gs
inc
mov
outs
dec
jmp
(bad)
cmc
inc
les
lahf
jae
imul
fmul
es
outs
int
mov
pop
jo
outs
sbb
push
inc
in
xlat
pusha
add
or
je
sbb
xchg
jl
adc
push
mov
clc
pop
inc
sti
or
push
lods
jb
push
inc
ins
imul
daa
xor
dec
push
mov
cld
pop
and
ins
ss
out
int
push
push
push
push
jo
(bad)
(bad)
je
rcl
inc
jns
sbb
or
out
frstor
nop
and
xor
sbb
adc
xor
pop
idiv
aas
mov
loopne
loope
rcr
or
adc
cmps
push
jbe
jb
stc
dec
xor
and
(bad)
ds
push
xor
dec
jl
jp
aaa
mov
jmp
outs
cs
inc
imul
lock
es
inc
mov
adc
aaa
mov
sar
pop
pop
sub
add
pushf
std
dec
mov
push
in
pmovmskb
ror
loopne
and
outs
cmp
rol
fisub
fld
call
pop
cmps
inc
xchg
ins
or
sbb
imul
push
clc
pop
out
sub
or
pop
inc
inc
sbb
fistp
and
out
loopne
jecxz
add
add
or
or
cmps
mov
sub
jg
rcl
lahf
cld
xchg
sbb
push
inc
inc
push
add
dec
les
ss
aas
jnp
jne
mov
dec
gs
inc
les
inc
fisubr
and
inc
inc
pusha
add
dec
cmp
or
test
inc
loopne
dec
call
fwait
add
ss
test
leave
push
push
jae
sahf
push
mov
jl
mov
and
push
and
push
cmp
cmp
jo
pop
in
inc
and
jnp
add
inc
push
mov
sbb
sbb
add
loope
scas
leave
add
dec
inc
add
add
scas
jp
leave
pop
and
dec
add
add
mov
and
sub
fiadd
fistp
lods
push
dec
add
push
shl
fwait
or
fiadd
mov
pop
loopne
jne
sub
dec
mov
nop
mov
gs
movzx
out
sbb
add
dec
push
dec
(bad)
(bad)
dec
pop
mov
dec
mov
nop
dec
and
add
es
iret
lds
je
push
repnz
test
inc
and
push
adc
inc
push
sahf
push
inc
popa
or
pop
push
mov
mov
shl
test
adc
push
sti
out
(bad)
and
ds
aas
push
bsf
push
int3
push
or
fld
test
add
shl
imul
call
add
shl
pop
cmp
gs
popa
or
add
sub
jns
add
ins
push
jne
outs
adc
sbb
test
adc
pusha
mov
mov
add
imul
inc
arpl
fs
or
add
gs
dec
outs
ja
scas
add
adc
push
mov
add
dec
jae
mov
inc
mov
push
or
pop
rcl
xchg
icebp
nop
(bad)
push
sub
pop
xchg
ret
sbb
inc
cmp
(bad)
out
ins
sbb
add
sub
or
add
adc
mov
stc
es
sbb
mov
sub
call
push
inc
push
add
sub
ror
jmp
cmp
int3
ins
inc
and
inc
mov
jge
test
js
mov
pop
ds
int
ins
add
mov
lock
jnp
int
and
add
jl
or
cwde
inc
fiadd
outs
pusha
pop
hlt
and
lods
shr
xchg
fsub
mov
push
ret
fldenv
jne
fsubr
add
xchg
inc
push
movs
fcomp
fmul
out
jno
jg
mov
sub
and
sub
sub
mov
push
pusha
push
add
xor
push
xor
cld
add
jmp
sub
push
push
cwde
jns
cwde
lock
jbe
inc
inc
mov
(bad)
int3
ds
push
jl
adc
xchg
mov
inc
aas
fsubr
dec
enter
add
lock
stc
imul
mov
test
sahf
dec
add
sar
adc
or
es
push
aaa
and
bound
xchg
push
nop
inc
or
push
mov
add
clc
(bad)
xlat
sbb
sub
aaa
adc
sbb
pop
push
push
fstp
jecxz
not
pop
int3
sub
inc
xor
inc
inc
jle
and
repnz
or
mov
add
xor
cmp
xchg
stos
inc
aam
inc
rol
mov
cmps
inc
cld
jge
test
sub
ds
je
push
clc
dec
mov
adc
xchg
and
xor
mov
sub
dec
pop
sub
adc
dec
push
mov
sbb
lahf
rcl
cs
jns
ret
xor
(bad)
cld
fwait
jl
and
cmp
mov
(bad)
mov
cmps
shl
loopne
mov
jo
jle
clc
mov
mov
cmps
fs
jns
push
add
xchg
stos
scas
mov
lock
loopne
lock
push
movs
mov
pop
popa
adc
pusha
xchg
pop
sbb
mov
shr
stos
pop
and
les
sbb
mov
jg
or
outs
outs
xchg
sub
adc
jae
movs
pop
cwde
cmp
in
daa
jns
mov
stc
push
fcomp
fisttp
mov
pop
and
inc
pop
push
pop
push
(bad)
rcr
repnz
pushf
push
mov
loope
jns
add
or
mov
ret
or
cmp
push
jmp
pop
mov
xor
das
fs
jno
xor
ins
xor
push
mov
fcom
jmp
mov
ds
aam
inc
fadd
(bad)
iret
js
sbb
xor
mov
popw
sbb
xor
inc
dec
jne
das
adc
add
dec
and
ins
add
or
rep
add
stos
xchg
dec
rcr
push
or
lds
xor
xor
dec
ds
xor
jmp
js
add
sbb
sbb
dec
ret
pushf
jne
(bad)
mov
and
mov
add
dec
jne
cmp
xor
or
popa
xchg
mov
and
clc
(bad)
popf
test
nop
xchg
sub
nop
mov
push
dec
or
adc
je
add
dec
pusha
xor
dec
(bad)
cmp
mov
sub
add
dec
in
push
js
pop
movs
dec
push
xor
mov
xor
icebp
es
mov
adc
sub
cmp
or
mov
enter
loopne
test
arpl
das
mov
xchg
daa
mov
adc
jg
mov
sbb
jmp
nop
adc
pop
xor
mov
aaa
dec
and
(bad)
je
fdivr
xlat
sub
cmp
sub
fs
rol
inc
lahf
ins
xchg
imul
push
icebp
je
inc
jle
(bad)
and
mov
iret
cmp
inc
sbb
test
dec
test
call
pop
push
outs
outs
sbb
inc
jmp
ins
push
enter
mov
cmp
cvtdq2ps
sub
or
sahf
pushf
push
mov
mov
adc
jne
test
adc
(bad)
ficomp
or
mov
lock
cmp
sbb
xor
mov
ss
cmps
dec
inc
lods
sbb
sbb
cmp
or
pop
shr
loopne
out
stos
sub
lea
aaa
cmp
jb
outs
ds
xor
ja
sti
xchg
cld
mov
scas
imul
aam
cmp
dec
xor
stos
cdq
(bad)
repz
add
ja
aad
jge
push
cs
aaa
pop
xlat
mov
ins
popa
scas
es
imul
add
or
inc
loop
xor
push
jnp
scas
ja
ja
in
sbb
inc
xor
push
inc
add
iret
push
ret
xor
loop
inc
jno
addr16
xor
bts
inc
pop
jnp
pop
inc
mov
ins
js
dec
push
(bad)
das
push
mov
xlat
out
jge
ja
xorps
jo
jecxz
lock
push
mov
(bad)
out
or
jp
shr
jnp
shl
je
inc
xchg
imul
es
push
mov
je
or
push
xor
mov
je
or
pop
dec
(bad)
dec
sahf
fidivr
jne
je
(bad)
cmp
je
inc
or
sbb
jmp
bndldx
or
jnp
mov
inc
nop
arpl
push
outs
cs
aas
sub
cwde
sbb
(bad)
aaa
or
out
adc
pop
ja
mov
adc
push
sbb
push
push
dec
shr
xor
jb
aas
pusha
mov
mov
or
push
pusha
mov
shr
push
or
daa
inc
or
mov
add
scas
dec
jecxz
push
push
scas
arpl
xchg
dec
sbb
or
xor
ins
cmps
dec
stos
sbb
and
lods
or
das
loope
jg
xor
mov
popa
daa
out
and
pop
and
ret
shl
or
ss
fcmovnu
jb
mov
xor
fild
xor
inc
add
push
sbb
rol
add
ficomp
inc
sub
push
cmp
icebp
push
add
pop
cmps
xlat
and
scas
adc
scas
jg
ss
lahf
adc
dec
cli
lea
xchg
push
scas
fsub
fdiv
dec
add
mov
or
inc
cmps
inc
sbb
icebp
inc
xor
xor
call
mov
fild
repz
dec
jp
cmova
inc
mov
dec
nop
dec
imul
or
cmovs
sti
scas
ret
mov
push
xor
(bad)
sbb
dec
push
inc
ss
imul
push
retf
adc
mov
repz
je
dec
mov
loop
push
add
push
adc
jmp
sub
push
mov
jmp
push
pop
nop
popf
xlat
mov
daa
outs
fucomp
inc
push
mov
mov
cwde
shl
add
in
test
pop
xor
jge
jle
mov
xchg
mov
or
mov
dec
or
sbb
mov
add
or
jbe
int3
mov
test
lea
sbb
loope
sub
and
or
adc
jle
les
mov
or
call
jmp
or
jmp
add
lea
js
mov
sub
push
test
test
add
test
add
dec
lods
mov
inc
stos
sbb
test
aaa
mov
and
rcl
mov
xor
xor
sbb
sbb
inc
dec
mov
jno
lahf
js
mov
add
arpl
ret
das
inc
add
cli
sub
push
xor
out
push
adc
sbb
jne
out
push
les
push
popf
adc
jns
xor
dec
inc
add
ins
rol
jne
cld
xchg
push
push
cmp
add
lea
cli
xlat
inc
inc
dec
rol
inc
fild
cwde
in
jne
retf
jae
pop
leave
mov
jmp
add
xchg
or
push
sbb
or
(bad)
(bad)
mov
js
add
mov
and
and
or
add
test
cdq
not
xchg
outs
adc
pop
test
cmp
cwde
stc
test
fadd
dec
dec
fist
je
ss
sbb
outs
sub
xor
retf
lea
test
add
adc
add
inc
lods
sbb
and
xor
inc
push
cmp
adc
fucomp
loopne
mov
add
push
fst
stos
sbb
pop
(bad)
loopne
ret
add
xchg
shl
mov
xchg
sbb
pop
mov
pop
int
clc
mov
sub
jmp
dec
pop
(bad)
pop
inc
clc
clc
or
or
mov
sbb
test
cmp
movlps
(bad)
push
retf
mov
imul
jge
jle
mov
outs
adc
add
pop
cmc
pop
loopne
push
or
in
mov
or
push
mov
cwde
frstor
jno
push
xchg
or
test
stc
sbb
mov
outs
jecxz
pop
dec
sbb
xchg
inc
sbb
lea
mov
mov
scas
int3
add
sub
je
das
call
jns
nop
mov
rcl
push
pop
dec
shl
and
arpl
xchg
fcmovu
xor
enter
cdq
out
inc
pop
push
pop
test
adc
pusha
and
inc
pop
out
or
bound
xchg
and
fcom
sbb
push
loopne
xor
test
aas
sbb
push
leave
adc
fimul
push
das
mov
aaa
fstp
js
push
push
sbb
mov
push
pop
jo
mov
nop
cmp
adc
inc
pop
rcl
push
lods
xchg
fcmovbe
nop
xlat
xchg
in
xor
sbb
out
mov
mov
fsubr
(bad)
mov
sbb
jg
nop
and
and
xchg
push
sub
sbb
pop
mov
inc
xchg
dec
dec
push
test
add
inc
sbb
lods
call
push
leave
add
sbb
daa
fs
and
ror
inc
push
mov
pop
fiadd
icebp
cmp
stos
dec
jo
pushf
inc
ror
pop
(bad)
cmp
rcl
mov
xchg
add
dec
add
dec
pop
movs
push
scas
inc
cs
mov
aam
loopne
xor
pushf
adc
in
jp
xor
nop
adc
cdq
out
xchg
movs
shl
inc
adc
retf
fwait
arpl
fild
lock
add
push
aas
pop
pop
sbb
sub
sbb
add
or
adc
push
cmp
repnz
push
imul
cmp
(bad)
aaa
inc
add
and
push
pop
or
mov
and
and
je
fbld
xchg
and
nop
inc
(bad)
mov
dec
mov
enter
ja
sbb
sbb
and
lds
mov
mov
mov
dec
out
pusha
cmp
mov
scas
dec
ror
cmp
dec
push
adc
cmp
xchg
and
mov
mov
cmp
add
mov
daa
lock
or
mov
xor
inc
inc
or
add
xor
shl
cmp
add
ror
jmp
(bad)
mov
out
sub
add
adc
scas
jmp
add
hlt
sahf
pop
jb
lock
or
shl
xor
xchg
cmp
push
inc
cmp
ret
mov
mov
xchg
pop
inc
xor
xor
test
mov
inc
cmp
add
mov
ja
mov
mov
or
and
movs
repnz
pushf
adc
sub
cmp
loop
inc
and
add
or
movs
dec
inc
dec
movs
or
retf
adc
sub
test
add
loope
dec
pop
lods
push
adc
stos
or
adc
div
lds
adc
ret
xchg
sbb
dec
cmp
push
mov
out
out
test
sub
or
or
jae
jae
xor
push
or
push
xor
imul
je
cmp
inc
or
sub
adc
push
xchg
xor
cmp
shl
mov
(bad)
int3
mov
sub
and
punpcklqdq
push
dec
sbb
aad
iret
test
xchg
movs
xchg
jbe
movs
push
rol
adc
or
outs
adc
cdq
jo
push
push
in
sub
pop
xchg
test
jge
popa
xchg
dec
test
ins
jle
repz
mov
push
das
(bad)
inc
push
sbb
lea
sbb
retf
test
imul
cmps
add
dec
shl
cmp
sbb
mov
or
and
add
lods
aas
mov
or
and
hlt
(bad)
mov
(bad)
cli
sbb
mov
(bad)
iret
sub
nop
add
fldcw
cld
pop
sbb
call
cmp
loopne
jae
hlt
fbld
lods
or
lock
jne
mov
dec
movs
inc
mov
mov
add
and
pushf
ret
add
mov
pop
lds
dec
add
xor
push
push
xor
(bad)
add
jns
adc
(bad)
call
loopne
mov
lods
xor
or
jle
sbb
push
ret
sbb
dec
add
stos
sahf
add
aaa
or
sahf
add
cmp
clc
nop
push
sub
mov
or
push
or
pop
into
adc
retf
xor
jb
imul
cmp
loope
(bad)
xchg
dec
pop
stos
lock
or
leave
imul
push
je
xchg
lock
fs
xlat
add
cmp
xor
or
movs
movs
gs
outs
sar
xor
sub
out
push
bound
jno
outs
je
cmp
addr16
jg
pop
add
pop
jge
xor
js
jg
int
dec
dec
add
and
push
or
shl
shr
ins
dec
add
pusha
pop
loope
or
or
pop
inc
jae
movs
push
aas
es
mov
push
or
sbb
inc
jg
push
hlt
arpl
(bad)
sub
or
ret
jp
or
(bad)
pop
inc
xchg
ret
ss
or
or
int
shl
sbb
dec
cmp
je
div
inc
dec
add
adc
test
ins
leave
test
or
rol
or
ds
xor
add
or
jo
push
nop
or
sbb
push
jae
sub
jmp
sub
or
xor
add
in
or
cmp
xchg
xchg
sbb
rcl
idiv
xchg
loope
mov
test
add
scas
sub
sub
mov
mov
repnz
imul
in
stc
sti
mov
(bad)
in
ss
aaa
test
inc
clc
inc
xchg
jne
ins
aad
imul
adc
mov
or
push
pop
inc
xchg
pop
in
dec
jae
or
xchg
inc
mov
test
or
fdivr
push
xor
and
test
or
sti
adc
inc
adc
lea
lods
xchg
aaa
jae
or
rol
inc
add
int3
xchg
pusha
cmp
add
fs
push
es
ins
loop
hlt
bound
push
imul
adc
in
xchg
xchg
push
pop
mov
and
pusha
inc
push
sub
inc
add
and
jnp
sbb
fild
cmc
mov
lea
jo
movs
sbb
pop
add
ja
mov
bound
test
cs
cs
je
cmp
(bad)
cmp
leave
rcr
in
push
adc
push
out
test
push
nop
adc
sbb
(bad)
fstp
and
and
cmp
add
test
xor
mov
mov
add
in
(bad)
ffree
mov
pop
ja
and
dec
add
fiadd
adc
retf
not
and
aad
ret
dec
ret
cmp
and
add
dec
mov
cmps
cmp
imul
jne
xchg
sbb
and
xchg
mov
jo
pushf
adc
pop
mov
cmp
pop
push
or
mov
(bad)
xchg
mov
jg
test
push
test
in
pop
mov
(bad)
mov
test
in
or
cwde
and
pop
add
push
addr16
pop
adc
and
and
fsub
pop
add
je
jmp
mov
fnsave
jns
pop
push
ror
and
cmp
cmp
push
loop
das
inc
dec
push
xor
ins
(bad)
pushw
fild
sbb
loopne
mov
mov
movs
mov
stos
dec
jmp
rcl
loopne
push
and
push
add
cmp
mov
(bad)
adc
xor
push
out
imul
push
add
dec
pop
add
pop
dec
or
add
and
setno
mov
sub
outs
mov
test
mov
jle
cld
ins
add
mov
push
loope
dec
rcr
pop
pop
cmp
mov
jne
and
xlat
pop
pop
adc
adc
adc
mov
adc
sbb
add
sbb
and
and
jae
sub
pop
dec
xor
aam
mov
cmps
shl
dec
js
hlt
add
mov
fadd
mov
jns
jmp
pop
mov
lahf
xchg
and
(bad)
mov
jle
or
ret
mov
jmp
mov
test
add
adc
adc
xchg
cld
push
mov
ret
add
ds
inc
push
ret
lahf
pop
adc
mov
sti
popa
cmps
or
cld
rol
jne
sub
add
fidivr
movzx
lea
or
push
pop
push
cmp
cmp
daa
jmp
fdiv
and
out
or
cmp
cld
(bad)
icebp
nop
mov
addr16
add
aas
jne
xchg
mov
add
call
sbb
clc
adc
jne
xchg
mov
xchg
retf
movzx
lea
or
or
clc
fmul
fisttp
lahf
lds
test
test
adc
inc
pop
dec
cmp
add
clc
xchg
mov
mov
inc
data16
pop
cmc
jle
sub
ins
call
dec
mov
arpl
or
sbb
jmp
sbb
adc
les
test
in
sbb
add
and
xor
inc
sub
mov
pop
or
push
push
push
imul
adc
mov
push
cmp
inc
sbb
cmps
push
outs
push
dec
dec
cwde
or
enter
xor
ja
mov
in
shr
mov
mov
cmps
test
xor
adc
adc
push
das
sub
sbb
ret
jecxz
pop
inc
aaa
push
bound
add
cmp
pusha
scas
ret
push
loopne
and
gs
stc
push
hlt
and
gs
sub
loope
or
mov
retf
xchg
out
add
or
xchg
add
sub
push
shr
sbb
jle
and
dec
or
nop
bsf
and
jns
add
push
cmp
lock
add
je
mov
bound
lock
inc
outs
jmp
cmc
add
scas
jmp
add
loopne
xor
sbb
fisttp
sub
add
pusha
jne
ss
clc
push
sar
pop
daa
lea
jg
test
jle
cmp
popf
lea
loope
and
cmp
jg
add
pop
clc
jle
sar
dec
jle
aaa
nop
xchg
sbb
push
lods
movs
xor
and
imul
and
sbb
and
(bad)
add
adc
arpl
pop
shl
jmp
psubusb
cmc
arpl
jae
test
inc
cli
cwde
xchg
sbb
scas
(bad)
cmp
or
and
scas
test
inc
mov
lds
rol
cld
arpl
ds
cli
cmp
push
sub
push
ins
or
adc
jge
mov
(bad)
(bad)
mov
mov
lahf
popa
pop
in
sub
loopne
es
cmp
adc
mov
pop
mov
xor
mov
inc
dec
jne
cmp
in
xchg
add
xor
cdq
xor
cld
mov
aam
in
ss
jg
mov
add
sub
cmps
out
xchg
in
or
sbb
call
inc
and
ret
mov
xchg
mov
mov
cmp
aam
jbe
nop
pop
lock
mov
mov
push
mov
lea
stc
les
ret
out
pop
popf
movs
jb
ret
inc
rol
repz
ficom
mov
mov
sbb
mov
mov
das
sbb
mov
cmp
push
fiadd
cmp
jp
jmp
jmp
rcr
in
inc
add
ds
or
movs
pop
push
dec
imul
retf
or
xor
push
rol
sahf
out
push
push
push
or
or
ret
push
adc
cmp
sub
lods
js
jo
jns
sbb
mov
lock
mov
cmp
sbb
fimul
icebp
and
mov
mov
mov
mov
jbe
rcl
dec
or
jle
lock
jb
jmp
inc
push
fst
and
add
and
sbb
sub
adc
ins
and
movs
scas
or
push
xor
loope
mov
add
and
and
mov
fcom
sub
ins
inc
or
xchg
(bad)
adc
ret
dec
adc
(bad)
add
or
cmp
push
dec
and
adc
push
dec
sub
pushf
fstp
aad
sar
mov
ror
or
mov
sbb
push
push
push
imul
test
add
jo
or
imul
inc
push
mov
loope
ja
pop
xor
test
(bad)
push
ret
mov
mov
cmp
sahf
push
pop
movs
mov
ror
xchg
xchg
imul
add
dec
mov
xor
test
xchg
cmps
add
stc
sub
xor
add
enter
jle
push
push
in
hlt
int3
aam
lods
or
or
repz
popf
push
ret
adc
in
inc
adc
push
loop
loope
mov
call
pusha
add
push
add
and
sbb
jp
dec
adc
pusha
ins
adc
adc
or
xor
mov
and
in
dec
mov
mov
lods
or
lods
ret
and
mov
mov
stos
mov
outs
sbb
lods
mov
xchg
ss
add
and
mov
xchg
dec
hlt
lods
sbb
in
adc
not
shl
cmp
hlt
loopne
pop
daa
int
fcom
in
cmp
and
xor
repz
or
sbb
cmp
mov
lods
inc
mov
pop
mov
cmp
mov
sbb
or
or
mov
adc
xor
nop
sti
sub
dec
cmps
ins
xor
adc
popf
mov
add
ins
sub
retf
inc
or
and
movs
or
xor
iret
pop
(bad)
pop
mov
push
mov
cmp
add
xchg
jo
jae
adc
daa
or
in
je
sub
xchg
inc
jns
pop
mov
and
dec
mov
ins
stc
test
dec
dec
hlt
pushf
add
xchg
das
hlt
mov
or
aaa
mov
cmp
je
pop
jne
cmp
fisub
ret
xor
adc
fcmovnb
pop
xchg
mov
outs
mov
cmp
pop
or
loopne
cmps
ret
mov
(bad)
ja
push
mov
dec
mov
shl
outs
and
xor
ins
idiv
pop
dec
push
or
pop
ins
inc
xor
add
pushf
xchg
inc
mov
xor
xor
pop
cmp
mov
cmp
pop
push
test
jecxz
adc
in
pusha
jmp
xor
mov
arpl
cmp
rcl
test
or
adc
pusha
xor
and
adc
push
cmp
(bad)
adc
add
or
mov
sar
inc
add
xchg
jo
inc
pop
rcl
sbb
pushf
mov
shr
outs
fucomp
xchg
stos
xor
add
push
ja
outs
inc
and
mov
and
inc
add
clc
mov
dec
mov
cs
mov
repnz
mov
lock
cmp
mov
cmp
xor
sub
daa
gs
add
dec
bound
add
divps
or
or
movs
xchg
retf
das
add
pop
int3
inc
dec
jne
(bad)
rcl
jbe
add
adc
fist
popf
mov
cli
cmps
mov
push
jmp
add
sbb
jo
add
add
and
sbb
jo
add
inc
inc
stos
add
(bad)
and
bnd
inc
sub
mov
jmp
jmp
pop
fnsave
jnp
(bad)
fadd
cmc
jns
clc
xor
sbb
cmp
lds
gs
push
sub
fwait
loope
retf
call
jb
mov
ret
(bad)
jge
mov
les
ins
imul
add
fldcw
dec
dec
adc
xchg
or
call
clc
and
test
xchg
xchg
push
loopne
fild
aaa
sub
cmp
test
jae
lods
jecxz
or
pop
call
pop
cmps
mov
xor
pop
sub
or
outs
sbb
test
or
mov
cmp
cmps
cmp
pop
fld
pop
shl
xchg
xchg
bound
mov
dec
inc
pop
push
arpl
mov
nop
xchg
sub
mov
and
sub
jmp
shr
scas
lods
or
push
loop
jbe
addr16
gs
mov
fwait
clc
imul
push
dec
pop
xchg
mov
dec
cmp
sbb
pop
in
xchg
int
and
sbb
pop
xlat
test
inc
fs
adc
out
mov
shr
add
xor
xchg
sub
sub
dec
fild
test
sub
push
pop
mov
pop
in
sub
sbb
sbb
sar
arpl
fsubr
pop
adc
jno
push
push
pushf
movs
sbb
mov
jno
mov
dec
das
(bad)
inc
gs
fld
popf
mov
mov
mov
cwde
enter
or
sub
mov
into
shl
popf
xor
mov
cmp
add
(bad)
xor
push
inc
adc
push
cmp
enter
popa
or
xor
pusha
out
icebp
xor
dec
adc
daa
push
push
test
push
and
mov
inc
(bad)
add
push
js
mov
loope
sub
sti
xchg
repz
sbb
jmp
repz
push
adc
push
clc
cld
mov
add
pushf
sbb
push
mov
ja
bound
adc
xor
mov
mov
call
xor
sbb
hlt
(bad)
push
dec
pop
je
js
leave
les
loop
push
sub
daa
or
inc
ss
add
pop
mov
sahf
mov
push
ror
pop
ret
mov
std
adc
fsubr
repz
js
cmp
mov
jns
pop
sub
imul
inc
push
add
xchg
dec
jnp
fldcw
sbb
sbb
add
fst
in
shl
jae
and
or
movs
adc
pop
sbb
clc
adc
mov
imul
add
push
dec
lods
xchg
les
out
push
pusha
sbb
(bad)
das
and
cdq
cmp
sub
fnsave
add
out
push
cs
xor
pop
add
movs
xchg
cmps
std
stc
add
sbb
clc
cld
mov
add
push
adc
jae
pop
popa
aad
sbb
xchg
jp
ret
sti
or
fist
or
jge
ror
pop
pop
adc
dec
orps
push
or
hlt
int3
and
or
push
jbe
popa
sbb
add
(bad)
mov
call
imul
push
ja
jmp
push
xor
pusha
dec
shl
ret
lea
les
mov
retf
test
cld
and
inc
cs
inc
or
ret
cmp
adc
inc
add
adc
sub
enter
or
push
or
mov
pop
sub
or
add
and
setg
push
push
pusha
and
or
jge
push
in
loopne
(bad)
xchg
dec
int3
mov
(bad)
sub
sbb
inc
inc
cmp
pop
mov
pusha
and
dec
addr16
or
movs
lods
xchg
mov
out
xor
and
bound
sub
or
jp
and
pop
inc
jbe
inc
add
mov
movs
jne
adc
mov
pop
js
inc
sub
int3
mov
add
dec
push
adc
sbb
les
adc
sbb
cli
fcmovnu
push
sub
push
sub
clc
xchg
push
sub
inc
sub
adc
push
test
repz
es
sub
adc
jmp
and
out
adc
push
cmp
lahf
cmp
cmp
loopne
popa
sub
or
data16
cmp
pop
call
sbb
fnstenv
inc
jecxz
test
dec
adc
add
loope
adc
cmp
outs
pusha
inc
(bad)
arpl
test
push
popa
add
push
cmp
mov
dec
movs
je
stos
call
mov
es
push
push
cld
dec
push
jecxz
adc
ins
inc
push
sbb
fsubr
nop
mov
sahf
xchg
dec
gs
addr16
dec
mov
mov
inc
add
inc
pop
aaa
pop
pop
jo
and
popa
push
add
shl
mov
sbb
jne
jb
mov
data16
add
outs
add
push
push
jmp
imul
dec
and
dec
jmp
push
in
jmp
mov
pop
rcr
loopne
xchg
das
or
sbb
out
fcom
adc
xchg
arpl
push
test
shl
dec
mov
mov
and
jle
and
mov
add
fisubr
movs
pop
ss
push
mov
xor
or
nop
or
dec
bound
pop
enter
(bad)
ror
add
movs
sbb
dec
std
jae
jmp
adc
or
sub
aaa
aam
mov
out
retf
rcl
mov
sub
sbb
push
sti
in
test
jne
minps
pop
mov
and
setb
and
cwde
push
mov
sub
das
scas
add
or
cmp
je
mov
(bad)
mov
leave
or
or
sub
dec
ss
fs
jmp
cmp
cdq
stc
mov
jp
adc
sbb
xor
mov
adc
leave
lahf
inc
and
inc
cld
xor
cdq
dec
scas
push
aad
fidivr
or
scas
(bad)
int
call
fisubr
mov
push
shr
loopne
dec
clc
hlt
inc
test
mov
fwait
test
data16
sub
cdq
cmp
in
pusha
icebp
mov
movsx
in
ret
repnz
mov
mov
or
shl
pop
jmp
sub
test
jo
test
ins
dec
je
inc
fs
xchg
pop
mov
mov
xchg
or
lock
cld
add
popa
add
icebp
shl
adc
rcl
or
push
xchg
fnsave
loopne
cld
(bad)
pop
push
fidivr
sar
inc
or
call
out
mov
xor
sub
or
mov
call
mov
in
jae
inc
icebp
dec
push
je
jns
jo
mov
dec
jp
call
adc
push
cli
jecxz
scas
ss
cmp
mov
adc
adc
popf
cld
nop
fdivp
push
and
xlat
pop
ret
mov
adc
sbb
or
xor
aaa
neg
xor
inc
js
fistp
outs
add
fisub
jmp
pop
push
bound
fs
push
mov
int3
aaa
in
and
inc
aaa
in
loope
ror
xchg
cmp
xchg
or
adc
sub
or
or
and
fistp
push
adc
ja
adc
aaa
test
std
gs
cmp
xchg
sar
fs
pop
jp
push
pop
mov
loope
cdq
inc
pop
add
mov
pop
les
test
mov
and
or
sub
jle
mov
push
and
sbb
sbb
pop
ficom
or
ficom
lea
sbb
or
movs
adc
and
and
xor
cmp
jo
push
rcl
js
jmp
shl
lds
fistp
inc
ret
mov
pushf
popw
(bad)
sub
lahf
adc
xchg
mov
cmp
clc
inc
loopne
lock
jo
sbb
or
add
add
jns
mov
mov
mov
xchg
add
sub
dec
or
push
mov
mov
js
nop
dec
leave
test
fcom
sbb
xor
(bad)
mov
inc
jle
or
ret
fidiv
cmps
push
test
in
sub
sub
xchg
jmp
repnz
addr16
lock
mov
sub
jmp
imul
iret
xor
lock
cmp
cmp
push
inc
sahf
pop
pop
dec
les
mov
ret
push
rcr
mov
mov
je
sub
cmps
test
sbb
popa
inc
test
rol
mov
mov
ror
xchg
fmul
inc
jo
push
or
sbb
sub
dec
pop
fmul
push
fisttp
xor
js
push
fs
mov
out
pop
push
loopne
sub
or
sub
or
pop
stc
or
dec
or
adc
xor
fcomp
add
imul
mov
dec
lea
lock
in
js
fs
sbb
add
loopne
or
jl
mov
pop
sub
popf
add
and
sbb
cld
inc
dec
mov
stos
adc
movs
and
out
ss
dec
sbb
inc
push
push
movs
imul
adc
jg
sub
inc
sbb
jmp
jmp
dec
inc
sbb
mov
out
xchg
push
jo
stos
push
aaa
add
mov
dec
jb
sub
rol
or
cmp
fiadd
scas
mov
adc
(bad)
xchg
je
ja
mov
retf
out
addr16
imul
jmp
sbb
mov
mov
xchg
push
pop
sub
jle
test
ins
sub
jmp
rol
or
sub
mov
inc
inc
das
mov
in
pop
(bad)
(bad)
cld
inc
stos
ss
inc
dec
pop
repnz
rcr
nop
inc
cwde
push
test
add
call
push
lahf
dec
mov
or
push
mov
or
pop
data16
pop
dec
adc
int3
push
or
cwde
mov
pop
pusha
xchg
mov
xchg
nop
in
imul
add
dec
or
rol
or
dec
push
scas
setle
imul
aad
cmp
inc
xor
add
push
adc
add
in
fbstp
imul
or
push
into
xor
adc
inc
mov
mov
mov
sti
scas
std
(bad)
xchg
ds
sahf
lahf
jns
or
xchg
adc
inc
test
cmps
(bad)
or
adc
pop
cmp
sbb
sub
xchg
push
nop
retf
mov
fild
test
arpl
call
xlat
div
je
dec
inc
bound
pushf
cmps
or
dec
sbb
adc
(bad)
xchg
ret
stos
fmul
dec
gs
mov
sbb
and
add
add
lods
dec
(bad)
mov
inc
cmp
jl
jle
mov
sbb
and
iret
sbb
sbb
fbld
outs
add
add
sbb
add
mov
ret
push
js
push
push
sbb
iret
pushf
xor
sbb
mov
in
jne
lock
cdq
mov
xchg
jmp
jae
xor
or
lods
out
test
add
dec
pop
mov
dec
or
and
stos
mov
dec
or
ins
xor
sub
cdq
int3
dec
ss
add
mov
div
adc
adc
es
lahf
mov
push
mov
dec
mov
sub
fmul
addr16
adc
popf
push
mov
ins
xchg
and
lods
ss
fistp
stos
mov
add
or
movs
and
sub
sbb
ret
popa
push
je
test
xchg
mov
lea
cmps
hlt
inc
retf
mov
cmp
pusha
stos
add
adc
nop
add
je
lock
retf
dec
jle
nop
rcl
jl
cmp
fiadd
into
ret
out
mov
mov
mov
and
je
mov
pop
daa
sub
jbe
push
fcomp
adc
imul
adc
es
add
ds
xchg
inc
fs
inc
jbe
xor
arpl
(bad)
or
inc
xor
jbe
xchg
xchg
outs
inc
jo
xchg
cmp
jo
pop
je
or
adc
sub
das
jo
repz
mov
mov
imul
fnsave
mov
cmp
imul
or
jle
fdiv
sbb
add
mov
adc
jno
pop
or
stos
and
pop
pusha
pop
lods
and
pop
int3
jnp
rol
or
in
and
jmp
push
cwde
test
push
mov
addr16
pop
movs
xor
loopne
xchg
xchg
sub
push
sbb
add
adc
std
sub
sbb
loopne
mov
and
add
mov
xchg
or
inc
push
jns
gs
loopne
(bad)
mov
sub
fsub
dec
(bad)
mov
mov
ret
fistp
lock
sbb
adc
adc
mov
lock
shl
(bad)
lock
iret
and
sub
es
or
xor
jno
xor
je
jmp
(bad)
ror
pop
les
mov
jae
seto
test
and
and
sbb
mov
mov
sub
and
fwait
xlat
stos
mov
bswap
mov
mov
cld
cmp
loopne
ds
or
mov
in
push
pop
mov
jbe
addr16
dec
and
hlt
and
pusha
mov
dec
cmp
into
push
adc
aaa
cmp
cmp
call
ss
and
ror
fld
lock
mov
lock
ins
inc
lods
imul
jbe
mov
push
push
or
loopne
ds
mov
(bad)
shl
js
in
popa
xchg
std
cmp
or
sbb
aaa
sub
sbb
test
mov
and
inc
cmp
ins
cld
sub
or
in
cmp
and
cmp
sub
cwde
inc
mov
sub
xlat
test
adc
dec
sahf
xor
jge
push
add
jle
pop
mov
jmp
jns
pusha
jmp
adc
lods
push
add
and
xor
cdq
pop
jp
cmp
es
push
inc
pop
fisub
jmp
int3
in
jecxz
lds
push
sbb
xchg
mov
sbb
mov
lea
test
sub
pop
fld
movs
mov
push
xchg
je
mov
mov
jmp
push
rcl
cmp
xor
mov
nop
mov
mov
inc
jbe
adc
sbb
jno
jmp
test
mov
cld
xor
daa
fstp
sub
or
and
add
mov
xor
mov
out
mov
jecxz
popa
sbb
mov
push
mov
mov
push
push
xor
rol
or
(bad)
fcmovu
adc
push
iret
push
jne
jne
mov
mov
test
and
push
push
pop
fdivr
sbb
pop
(bad)
sbb
push
push
add
inc
add
pop
sbb
or
cs
fdivr
add
popf
mov
push
dec
in
scas
rcr
mov
xlat
ds
fs
add
pop
jmp
mov
mov
jg
ss
add
stos
pusha
sub
imul
sub
(bad)
pop
ja
jge
add
mov
std
dec
inc
sub
sub
xchg
xchg
mov
xchg
mov
push
call
push
sub
dec
inc
or
inc
retf
jp
jnp
dec
inc
sbb
pop
and
lahf
adc
and
movs
retf
lods
add
and
mov
mov
add
sbb
xor
jno
rol
loop
daa
mov
adc
pop
mov
in
sbb
inc
cld
sbb
sub
jge
jmp
adc
fcomp
sbb
inc
xor
and
adc
inc
lea
pop
push
and
pop
inc
dec
adc
movs
and
and
dec
and
jb
mov
inc
and
dec
jbe
xchg
enter
dec
mov
add
inc
or
sbb
(bad)
lock
adc
das
fadd
push
cmp
sub
push
and
dec
jle
icebp
inc
stos
or
xor
jl
and
shl
out
sub
mov
jns
inc
pop
enter
gs
in
add
ins
add
push
addr16
sub
test
sub
mov
add
sub
pop
sub
add
lea
lods
sub
mov
adc
adc
cmp
mov
cmps
adc
add
push
push
rcl
adc
push
adc
pop
sbb
add
loopne
sub
push
pop
sahf
in
sub
ds
push
pop
iret
mov
sbb
and
mov
(bad)
outs
add
jbe
repz
mov
adc
add
addr16
lea
lea
cwde
or
fistp
sbb
adc
call
sbb
sub
inc
or
je
add
or
je
jmp
dec
xor
call
and
inc
shr
ins
push
jmp
mov
in
stos
pushf
shr
add
or
(bad)
aad
or
ret
or
mov
xor
cmp
and
pusha
movs
scas
push
inc
js
pop
xor
xor
push
pusha
mov
stc
pop
pop
movzx
mov
add
pop
loopne
inc
rcl
cmc
mov
loope
push
dec
in
mov
inc
mov
movs
cmp
mov
repz
xor
or
stos
xor
sub
push
mov
cmp
ja
das
test
or
push
imul
add
mov
sbb
mov
mov
push
aas
clc
mov
ret
adc
cmp
lea
cmp
add
cmp
sub
mov
add
rcl
inc
xor
lea
ja
push
sbb
or
pop
es
or
and
lahf
sbb
cmp
mov
sub
xor
lahf
xor
in
aam
test
xchg
clc
pop
cmps
inc
mov
pop
dec
or
or
test
pop
push
and
mov
adc
cmp
outs
jns
jmp
and
(bad)
cmp
in
mov
or
scas
and
and
sub
or
adc
ja
jae
jb
aas
add
out
sub
adc
xor
pop
or
mov
imul
ins
mov
adc
hlt
push
fld
or
ss
dec
ins
out
push
callw
loop
sub
or
push
mov
nop
retf
jmp
or
xor
cmp
xor
mov
and
test
push
push
adc
sbb
mov
add
xor
or
inc
mov
sub
xor
mov
xchg
adc
mov
adc
lock
or
add
mov
push
call
jne
bound
pop
mov
adc
ss
push
sub
inc
cwde
push
shl
push
sub
push
aam
mov
jo
push
std
push
nop
jg
push
lock
inc
xor
call
xor
add
xchg
xor
dec
sub
mov
mov
ins
les
jo
retf
sub
mov
nop
and
inc
cmp
mov
mov
mov
es
fbld
mov
lea
mov
inc
and
adc
and
stos
cmps
xor
(bad)
jnp
dec
lock
std
push
mov
out
inc
cmp
push
loopne
or
jno
out
mov
hlt
push
mov
ins
jmp
clc
loope
mov
aaa
mov
fld
cwde
div
and
inc
adc
add
and
adc
or
in
adc
(bad)
cmps
dec
jg
popa
or
sub
or
adc
enter
xchg
adc
or
fcomip
and
push
loopne
rcr
or
or
add
rol
add
sbb
mov
dec
scas
ins
adc
mov
mov
sub
sar
int
test
add
mov
or
jbe
iret
ret
out
or
popf
jp
out
and
call
dec
or
(bad)
int3
clc
add
cmp
cmps
push
lahf
je
xor
das
inc
fidiv
dec
adc
lahf
add
and
pusha
sbb
enter
pop
das
arpl
xor
pusha
fcom
shl
(bad)
mov
add
jbe
cmc
xchg
adc
fisub
out
adc
dec
push
loop
adc
call
jmp
pop
or
neg
das
loopne
push
mov
rcr
jo
mov
imul
or
inc
or
inc
or
int
push
mov
mov
push
popa
xchg
mov
sbb
mov
or
push
adc
lods
call
mov
mov
mov
hlt
cmp
cmc
hlt
sbb
sbb
xchg
inc
bound
je
push
dec
packsswb
cmp
aad
mov
aam
fucomp
jno
scas
add
and
ins
add
lods
popf
add
push
inc
cwde
sub
jo
jne
jno
test
sub
mul
cmps
add
fsqrt
sbb
ins
int3
sldt
push
(bad)
pop
or
add
enter
arpl
jo
imul
push
xchg
scas
int3
int3
or
or
nop
sbb
or
mov
dec
loope
add
push
mov
sahf
inc
in
xor
adc
and
leave
leave
fsubr
outs
or
xor
in
in
inc
push
or
or
jl
jmp
pop
sbb
pop
dec
and
loope
sbb
adc
retf
pop
int
lea
xchg
adc
and
mov
adc
or
fsubr
out
inc
sbb
pushf
sbb
fsubr
repnz
loope
mov
sahf
es
test
push
xchg
ret
push
dec
and
xchg
mov
mov
sbb
mov
inc
mov
sub
mov
xchg
add
icebp
stos
adc
or
push
fdiv
mov
xor
sub
loop
mov
dec
push
mov
cwde
push
inc
daa
inc
das
jle
adc
sti
ins
push
jmp
sbb
sbb
or
add
mov
pop
xchg
out
test
xor
cmp
mov
inc
or
pop
aas
sub
fsubr
and
xchg
test
adc
loope
sbb
mov
int
xadd
call
push
scas
nop
cmp
mov
(bad)
or
inc
dec
fadd
call
xor
adc
adc
jno
sbb
pop
cwde
int
xchg
mov
ja
mov
dec
adc
bswap
jmp
ror
add
cmp
push
and
lea
or
test
jmp
push
or
bound
in
ficomp
jbe
inc
adc
add
into
sbb
fild
inc
sub
xchg
push
pop
add
cmp
pop
clc
add
retf
pop
jecxz
sbb
xchg
ss
lea
xor
or
add
or
cwde
push
pop
add
add
ret
xchg
cmp
and
adc
mov
mov
fadd
mov
adc
fmul
adc
mov
pop
out
and
adc
pusha
(bad)
sbb
jl
sbb
jge
sbb
nop
pop
cmp
inc
or
adc
xchg
test
stos
add
mov
in
mov
xlat
xor
dec
xchg
xchg
nop
inc
stc
pop
ja
sub
and
mov
pop
js
cdq
icebp
pop
ins
cmps
call
pop
add
jo
js
stc
fsub
ins
mov
add
push
cmps
sbb
cmps
xor
es
pop
mov
add
fwait
push
popa
xchg
push
sahf
ds
or
cmp
jmp
jne
fdiv
retf
add
xor
dec
add
fdivr
jo
jmp
fcom
in
adc
lods
in
add
jmp
(bad)
retf
imul
inc
out
leave
push
addr16
jmp
mov
ror
xor
ds
sub
xchg
mov
inc
test
enter
pop
cmp
je
les
jmp
push
mov
movnti
sub
aaa
mov
sbb
popf
or
pop
dec
lahf
pop
mov
sub
inc
fbld
cmps
or
imul
fs
mov
and
fld
pushf
mov
je
add
push
(bad)
and
sub
push
xor
dec
pop
ins
(bad)
push
inc
jp
xor
mov
xchg
pop
fsubr
or
mov
mov
je
push
in
inc
(bad)
adc
pop
jns
dec
xor
dec
or
dec
xchg
gs
ds
scas
adc
popf
pop
add
dec
aad
adc
ror
imul
fdivr
out
xchg
inc
add
mov
or
xor
pop
inc
jle
mov
fcom
cmc
or
mov
push
out
fcmovnb
or
ss
inc
gs
mov
(bad)
neg
push
sub
dec
cdq
test
pop
pop
or
inc
jmp
hlt
adc
xor
cmps
stos
adc
inc
movs
xchg
lds
inc
daa
loope
push
sbb
mov
je
and
loopne
cmp
or
(bad)
mov
dec
bound
repnz
mov
adc
or
(bad)
adc
(bad)
sub
aaa
push
js
adc
or
mul
push
xor
test
test
je
ss
jns
lods
mov
cli
jno
mov
xor
mov
sub
mov
test
cli
inc
inc
jb
add
sub
hlt
outs
push
add
aam
rcr
pop
inc
mov
push
mov
sub
shl
adc
sub
mov
mov
ret
leave
ret
sbb
addr16
pusha
sbb
push
call
je
ror
test
adc
and
jo
push
inc
xchg
or
mov
add
pop
and
inc
cmp
inc
add
add
pop
mov
push
clc
inc
bnd
jne
cmp
je
and
and
pushf
mov
xor
in
jns
sbb
pop
dec
mov
ror
mov
or
inc
pop
in
push
ret
out
mov
loopne
sub
xchg
cs
push
test
test
add
loope
jmp
xor
sbb
ins
in
push
pop
popf
push
stc
add
int3
jmp
dec
into
scas
adc
push
inc
add
xchg
pop
mov
mov
sbb
rol
(bad)
lods
les
adc
mov
pusha
xchg
cmp
loop
jp
scas
lods
xor
out
sbb
jne
cmp
or
pop
cmova
xor
xchg
or
add
adc
lock
js
pop
sbb
gs
aad
adc
test
add
mov
int3
stos
sub
sbb
jmp
sub
cwde
ins
cwde
or
xadd
mov
fcom
push
cmp
(bad)
loop
cmps
outs
test
xchg
or
sbb
cld
xchg
cmp
(bad)
mov
add
frstor
and
(bad)
adc
rcr
mov
dec
cdq
pop
js
nop
or
cmp
add
mov
xchg
mov
sub
imul
sub
pop
retf
or
sbb
push
mov
and
imul
lahf
pop
repnz
pop
mov
pusha
jecxz
adc
and
add
adc
ror
enter
add
imul
test
mov
push
pushf
sbb
or
shl
clc
inc
adc
aam
sub
inc
xchg
inc
and
in
stc
out
dec
sbb
sbb
test
ret
mov
cwde
ins
inc
sti
push
imul
or
xor
push
xlat
push
push
and
ror
mov
push
rcl
mov
daa
repnz
jo
daa
or
js
or
cs
jo
pop
adc
icebp
arpl
mov
out
dec
add
ins
mov
out
mov
int
push
gs
or
jns
adc
ss
les
pop
and
add
cmp
xchg
sbb
dec
push
dec
cdq
and
push
push
xor
in
mov
push
retf
sbb
ret
ins
mov
or
xchg
or
mov
dec
daa
enter
jno
ja
in
mov
sbb
mov
xchg
mov
add
xor
mov
and
fs
mov
add
add
push
jno
inc
and
call
mov
inc
pop
add
mov
sbb
jb
jae
mov
inc
mov
add
lock
sub
fsub
pop
pop
test
dec
push
push
jb
fcmovnbe
out
jge
pop
stos
outs
das
push
dec
bound
adc
shr
jae
cmp
and
push
jnp
inc
push
xor
xchg
add
and
add
ss
fadd
pop
test
inc
add
adc
ret
sub
mov
cmp
sub
mov
in
int
int3
add
pop
mov
jmp
loop
jne
lds
cmp
pop
and
jnp
rcr
pop
mov
and
gs
mov
pmaxsw
or
sbb
inc
add
repnz
rcr
sub
add
loope
jbe
sbb
push
retf
out
add
aam
das
lods
mov
jmp
aam
add
cmp
in
lea
inc
xor
mov
shl
xor
dec
or
repnz
inc
es
ret
rol
mov
inc
sub
mov
inc
cmp
ret
inc
push
add
aam
and
pop
mov
dec
pusha
inc
loope
jmp
loop
(bad)
jns
enter
mov
jno
add
ins
lock
or
ss
mov
xchg
jno
fiadd
add
pop
out
ret
paddsb
pop
and
arpl
mov
push
push
stc
or
mov
iret
imul
pop
nop
inc
cwde
jge
mov
inc
push
cmp
adc
sbb
add
sbb
mov
jnp
push
push
ficom
and
sbb
sub
xchg
(bad)
sbb
pop
dec
mov
inc
pushf
retf
push
xchg
shr
push
push
ins
adc
pop
and
inc
add
into
jnp
adc
ins
daa
fwait
rol
into
fistp
int3
inc
outs
and
jb
shl
mov
sub
mov
push
xchg
mov
cmp
jg
rep
int
push
call
imul
mov
dec
inc
stc
jge
adc
mov
xchg
jne
mov
cmp
adc
jmp
sbb
lock
cmp
ss
sub
cmp
popf
adc
or
adc
in
js
ficomp
aaa
pop
add
bound
test
xor
push
push
scas
nop
mov
add
jne
shl
cmp
xchg
inc
push
push
xchg
mov
pop
push
inc
or
test
sahf
sub
loope
or
pop
and
int
test
inc
pop
add
mov
out
cwde
(bad)
adc
push
popf
and
loopne
add
push
adc
pop
mov
lock
jmp
sbb
add
data16
jb
add
or
sbb
sbb
or
outs
adc
and
in
adc
retf
inc
sbb
sbb
enter
adc
cmp
sub
inc
sub
loope
push
mov
mov
push
pop
and
dec
cmp
adc
pop
xchg
out
test
ins
aad
dec
mov
xchg
movs
addr16
aaa
xchg
add
and
push
cmp
pop
lock
pop
add
xchg
mov
aad
push
mov
mov
dec
loope
dec
ror
loope
(bad)
jg
or
out
and
mov
push
hlt
dec
mov
mov
repnz
in
jmp
fild
push
mov
push
mov
pop
dec
je
sub
or
test
pushf
xchg
mov
jp
push
or
inc
test
pushf
pop
mov
sbb
inc
adc
sub
push
xchg
fs
add
sub
das
int
fist
(bad)
(bad)
icebp
mov
add
jl
pop
xor
xchg
fistp
mov
lea
mov
add
pop
scas
cmps
mov
xchg
push
icebp
das
outs
cmp
push
pop
sub
arpl
popa
xchg
lods
ds
sub
sbb
cmp
push
cmp
jns
into
inc
aaa
aaa
call
add
sti
ss
dec
out
add
jge
(bad)
cmp
mov
mov
add
push
mov
aam
adc
pop
setg
dec
bound
mov
or
sahf
(bad)
pop
xor
dec
movs
push
(bad)
push
sub
adc
pop
push
aas
nop
les
shl
push
pause
dec
jmp
pop
push
mov
outs
out
inc
push
cs
mov
or
xchg
rcr
mov
xadd
loopne
and
mov
mov
clc
nop
popa
imul
(bad)
push
inc
push
sahf
cwde
jl
adc
loope
push
pop
ret
imul
hlt
shl
loope
ds
in
or
cs
cmp
inc
sbb
sub
pop
shl
in
shl
bound
(bad)
and
pushf
js
shr
mov
xchg
cmp
push
xchg
(bad)
push
inc
inc
out
mov
push
xor
icebp
hlt
test
pop
clc
pop
pop
sub
ja
cli
mov
mov
xor
adc
inc
or
push
push
int
mov
mov
xor
enter
xor
call
inc
xchg
loope
and
cmp
ud2
xchg
rol
loope
push
nop
clc
jmp
dec
jge
jne
or
nop
ror
and
rol
inc
shr
fucompp
mov
add
sahf
retf
jae
adc
and
xor
dec
pop
je
push
test
mov
cdq
sub
push
adc
inc
js
cli
popa
or
ret
ins
inc
fs
push
and
daa
lods
mov
out
push
jnp
arpl
js
push
jnp
jo
loopne
jno
in
out
xor
pop
jb
cmps
cmp
add
or
sbb
iret
sbb
xor
and
cmp
iret
dec
call
push
adc
sahf
popa
jbe
lock
cwde
pop
aas
dec
cmps
es
mov
push
fist
sub
or
ja
sub
xlat
add
cmp
add
arpl
and
iret
sbb
adc
and
xor
push
xor
je
inc
add
out
adc
mov
or
mov
outs
data16
mov
push
cmp
xor
ror
add
adc
add
aam
and
or
pop
das
cmc
inc
pop
neg
retf
aaa
nop
(bad)
std
add
push
inc
bswap
sub
jmp
mov
js
xor
lds
in
sbb
sti
push
push
je
sub
cmp
jo
dec
mov
hlt
mov
repnz
xlat
add
addr16
(bad)
lock
jle
dec
sahf
mov
psubusw
aaa
stc
xor
repnz
xor
xor
xor
cmp
inc
xor
xor
dec
dec
push
push
xor
xor
pop
pop
pusha
xor
xor
push
xor
xor
add
nop
xchg
xor
xor
cwde
pushf
mov
xor
xor
xor
xor
xor
int3
rcl
xor
fsub
in
mov
shl
xor
enter
mov
loope
test
(bad)
jnp
pop
arpl
push
lahf
retf
sub
mov
je
pop
xor
xor
xor
cmp
cmp
push
cs
sbb
fadd
and
fmul
gs
and
push
inc
sub
and
or
gs
inc
pusha
push
fs
adc
ins
lock
jb
retf
fidiv
adc
jl
sbb
mov
mov
lods
or
gs
nop
add
gs
sub
test
js
xor
xchg
mov
adc
lods
push
movs
jb
or
mov
mov
retf
dec
mov
sbb
gs
(bad)
ror
xchg
add
test
pop
aam
xor
xchg
add
lods
fmul
push
movs
call
popa
loopne
in
xchg
out
sbb
(bad)
adc
shl
or
pop
mov
xor
(bad)
dec
pop
push
sbb
popa
push
mov
(bad)
shl
or
adc
and
pop
or
nop
test
pop
ins
fcom
add
jb
mov
inc
mov
fiadd
inc
sub
cmp
adc
add
pop
loop
(bad)
mov
mov
dec
gs
out
xor
xchg
adc
adc
sahf
ins
push
jo
gs
mov
jns
out
outs
jb
lds
js
jae
mov
shl
xchg
cs
pop
leave
add
mov
xor
aaa
or
or
pop
lods
push
test
fld
xor
les
push
mov
popa
adc
mov
jle
pop
ret
jae
dec
pop
stos
shl
aaa
aaa
sub
cs
push
scas
push
push
dec
inc
jne
retf
neg
or
ins
mov
mov
stos
lods
loop
xchg
inc
inc
push
jne
mov
jnp
push
les
imul
sbb
jnp
mov
push
push
fild
xchg
js
and
aaa
shl
scas
sbb
xlat
add
and
xchg
sbb
pop
stos
jne
mov
cmp
xorps
fs
loop
imul
pop
scas
pop
jae
aam
dec
dec
imul
xchg
arpl
addr16
fwait
sub
cmps
xor
mov
add
call
loop
sbb
or
fild
aad
lahf
test
inc
or
adc
or
add
scas
pop
outs
scas
loop
xchg
das
adc
pop
imul
jecxz
out
fwait
mov
cmp
and
adc
inc
loop
leave
adc
inc
call
dec
inc
cmps
or
add
stos
fs
dec
and
(bad)
outs
inc
cmp
push
(bad)
aam
inc
xchg
pop
mov
push
ds
jle
dec
mov
cmps
nop
in
push
leave
xor
push
loopne
jg
cmps
adc
mov
push
pop
ret
cdq
push
jl
push
mov
je
aaa
mov
pop
ret
push
fisttp
xchg
or
adc
or
sub
xchg
in
jmp
loopne
xor
arpl
pop
xchg
or
sti
and
ret
mov
data16
cs
push
inc
jae
aaa
pusha
mov
or
daa
das
adc
sub
dec
push
(bad)
movs
out
jno
ret
ins
dec
jns
fidiv
rcl
arpl
aas
bound
jbe
or
fist
ret
adc
add
add
adc
add
add
add
adc
(bad)
push
jecxz
sub
push
shr
mov
adc
bnd
xlat
or
data16
add
sub
jnp
sti
cmp
shl
or
push
inc
add
push
sbb
or
sbb
ror
retf
retf
(bad)
ss
out
mov
pop
pop
(bad)
xlat
fwait
cmp
outs
sbb
retf
pop
mov
sub
ins
mov
adc
push
add
add
and
and
or
or
push
pcmpgtb
inc
xchg
dec
jne
push
xchg
ret
shr
xchg
xor
mov
test
cmp
and
add
push
xor
add
or
lods
movs
movs
fdiv
and
loop
or
pop
bound
mov
sar
add
rcr
pusha
iret
mov
loopne
inc
push
dec
(bad)
(bad)
cmp
or
retf
mov
imul
mov
xor
fwait
xchg
adc
push
shr
fdiv
popa
or
sub
daa
(bad)
and
dec
add
or
out
push
cmc
xchg
jbe
stos
cld
bound
(bad)
loop
add
push
sbb
adc
js
out
popa
(bad)
push
sbb
add
pop
add
loop
add
sbb
mov
mov
int
fiadd
add
mov
jp
add
add
(bad)
rcl
cmp
xor
sbb
push
(bad)
ds
rol
inc
and
add
and
dec
iret
mov
mov
sbb
jge
(bad)
neg
jmp
inc
aam
std
push
movd
repnz
ins
sbb
lock
xchg
add
or
test
jne
inc
dec
xchg
mov
push
jg
cld
(bad)
mov
jl
or
jle
outs
add
or
or
and
dec
out
pop
cld
pusha
add
lock
retfw
sbb
sub
pop
enter
sub
jmp
xor
push
xor
inc
push
pop
xor
or
push
dec
push
bound
bound
cmps
add
xor
dec
dec
cmp
mov
fisub
cmp
and
inc
pop
push
fcom
mov
push
push
add
sbb
inc
and
pop
add
call
lods
cmp
push
inc
push
add
sbb
sub
fcomp
and
mov
inc
rcl
jmp
out
mov
add
mov
daa
test
adc
sub
and
fdiv
dec
mov
jge
js
or
xor
jmp
je
cmp
sbb
add
sbb
fcomp
sbb
sub
inc
sub
je
fmul
xor
daa
test
pop
aad
aad
cdq
mov
pusha
cmp
mov
mov
sub
push
ss
push
push
pop
sub
div
out
mov
push
pop
mov
jae
add
mov
pop
in
sbb
cmp
push
pop
mov
push
add
ret
push
adc
sub
or
mov
std
in
pop
xor
add
xor
and
and
inc
pop
aad
push
inc
push
or
and
mov
mov
(bad)
ficom
pop
pop
inc
sub
aaa
sbb
dec
inc
xor
ret
aad
lea
sbb
mov
sbb
lock
or
inc
inc
imul
test
or
sub
hlt
inc
adc
shl
shr
inc
add
scas
and
add
and
mov
sub
sub
jne
lods
std
inc
mov
add
xor
sbb
call
or
mov
ja
sbb
or
mov
js
push
out
in
push
or
push
push
pop
rcl
dec
(bad)
icebp
push
ja
pop
sahf
ds
adc
dec
imul
xor
(bad)
push
cs
pop
rcl
int3
test
fnstsw
sbb
mov
add
push
sbb
imul
jl
es
adc
icebp
dec
pop
jmp
mov
cmp
mov
adc
out
ss
hlt
inc
cmp
fild
cmc
pmaxub
sbb
xchg
fcmovne
lods
enter
int3
nop
into
push
js
sub
mov
xor
and
mul
(bad)
nop
mov
rcr
sbb
aas
jl
cli
daa
push
mov
lea
inc
adc
push
add
pop
aas
shr
outs
jecxz
aad
retf
cmps
or
and
outs
pcmpeqw
pcmpeqb
out
(bad)
cmp
out
push
adc
or
dec
cwde
retf
outs
outs
xchg
or
or
inc
or
mov
je
call
push
adc
repnz
repnz
and
cld
aaa
push
out
sub
dec
add
push
sbb
pop
inc
inc
std
inc
adc
jae
sub
sub
aam
cmps
jno
gs
mov
adc
sar
xchg
wbinvd
cmp
jg
and
fsubr
sbb
xchg
fwait
pop
in
jle
push
cmp
jb
inc
mov
jae
mov
xor
aam
ins
shl
sub
iret
nop
sub
mov
ror
inc
and
push
inc
push
(bad)
mov
or
outs
sbb
mov
int
add
jl
add
sbb
loop
cmp
mov
mov
jmp
nop
fnstsw
jge
xor
sub
leave
mov
scas
or
xchg
push
sbb
loop
in
dec
and
out
push
rcr
ret
sti
fadd
shl
inc
dec
sar
add
jns
in
nop
sbb
and
(bad)
loopne
inc
imul
push
dec
(bad)
mov
dec
fadd
mov
sub
xor
dec
mov
sbb
mov
sub
adc
je
cmp
cmp
jecxz
adc
pop
cmp
add
clc
call
adc
and
xchg
cmp
gs
jl
cmp
pmulhuw
push
push
mov
dec
cmp
shl
xor
or
cmp
and
jge
xor
fimul
adc
jne
icebp
iret
push
cdq
add
or
jl
ins
sbb
enter
xor
xor
xor
das
ret
test
and
sbb
mov
push
loopne
loop
mov
out
retf
sti
out
push
and
imul
out
sbb
push
adc
mov
repnz
sub
std
sub
jle
ins
test
bound
stos
lds
push
mov
int
loopne
xchg
adc
xor
and
pop
mov
cwde
xchg
mov
or
dec
cmp
inc
jbe
adc
mov
mov
rol
rol
mov
adc
inc
shl
dec
loopne
loopne
loopne
scas
lods
mov
pop
mov
shl
or
pop
pop
cmp
mov
and
or
inc
and
add
or
adc
imul
out
add
jbe
xor
ret
ja
test
jno
mov
and
add
mov
loopne
adc
in
adc
adc
mov
add
mov
fiadd
fidiv
sbb
xor
sbb
sti
or
sbb
dec
add
je
dec
add
repz
ret
mov
pop
ret
dec
sub
xor
xlat
call
ja
push
mov
mov
add
push
push
retf
xor
add
add
pop
xor
adc
xchg
sub
outs
mov
push
jmp
xor
fsub
cmc
inc
and
dec
adc
into
inc
mov
jae
dec
cld
dec
sub
cmps
adc
pushf
cmp
(bad)
sub
pop
pop
in
jg
push
clc
add
pushf
mov
inc
push
pop
and
scas
sbb
leave
or
or
and
xor
jecxz
add
xor
push
sbb
rcl
xchg
mov
out
mov
fidivr
jb
cmp
je
or
int
int
and
je
pop
je
addr16
jno
pop
imul
adc
inc
stc
ds
jnp
mov
push
and
inc
and
xchg
and
sbb
cmps
js
fmul
mov
inc
push
xor
dec
dec
test
ins
fcomip
or
dec
and
jmp
stos
mov
sbb
cmp
push
repz
jmp
pop
push
mov
jns
dec
jne
fwait
jne
push
fild
iret
dec
imul
xchg
cmp
dec
mov
mov
rcr
ficom
jns
test
sub
dec
out
repnz
inc
inc
or
or
push
push
xchg
or
sub
add
cmp
push
(bad)
shr
add
call
lea
sub
dec
xchg
jl
sbb
jno
pop
aad
or
mov
or
inc
sub
push
push
mov
cli
cmp
jae
mov
xchg
mov
and
clc
fdiv
or
retf
and
ins
push
sbb
jmp
gs
(bad)
lods
rdpmc
fbstp
push
adc
mov
and
iret
sbb
push
pop
dec
fmul
or
sbb
lea
xchg
(bad)
or
enter
add
int3
adc
aaa
adc
int3
xchg
nop
add
(bad)
into
inc
jl
ins
lahf
mov
shr
dec
pop
add
push
js
cmp
add
push
push
inc
call
stos
call
js
cwde
mov
inc
push
sub
jmp
xchg
mov
mov
jmp
(bad)
fisubr
enter
inc
cmp
adc
push
mov
add
cmp
outs
cmp
sbb
cmp
ins
fiadd
idiv
lds
je
enter
jo
add
pop
jns
add
cmp
mov
call
sbb
cmp
cmp
test
pop
outs
mov
jo
inc
sbb
cmp
jne
daa
daa
mov
sysenter
sub
sbb
es
daa
adc
lock
mov
sub
push
mov
dec
pop
adc
sti
jge
bound
or
clc
jo
mov
inc
jge
test
pop
xchg
sbb
and
cs
fld
mov
dec
or
or
es
dec
add
je
iret
mov
or
aam
aaa
repnz
(bad)
push
retf
ret
mov
std
shl
shr
add
loopne
xor
retf
outs
mov
stc
mov
stc
add
jns
push
jo
dec
jae
hlt
pop
sub
fcomp
push
jnp
sub
add
jmp
pusha
dec
or
mov
daa
fild
sub
dec
loopne
mov
cmp
ja
push
sub
out
les
retf
mov
jo
ins
sub
ss
ret
mov
or
sbb
or
sub
fisttp
add
inc
dec
jne
inc
xor
mov
cmp
sub
ds
pusha
add
scas
adc
lock
sbb
and
mov
(bad)
hlt
out
inc
push
or
adc
add
xlat
inc
pusha
mov
pop
fld
or
mov
ret
and
adc
mov
or
test
dec
rcr
je
add
je
shl
pop
pop
dec
fwait
stos
jg
cmp
ja
sub
cs
push
dec
cmps
jmp
pop
add
out
test
push
pop
aam
das
mov
adc
jg
ds
cmps
xor
inc
inc
and
ins
je
stos
movs
jb
sbb
cwde
or
push
xor
mov
xchg
mov
mov
loop
push
aaa
adc
xchg
movs
adc
add
cmps
pop
inc
xlat
pop
aaa
mov
lds
sbb
fidiv
cmp
mov
mov
push
jle
push
cs
add
and
stos
aad
(bad)
inc
sbb
push
data16
jo
push
inc
mov
loopne
mov
sub
sub
or
mov
daa
rcl
pusha
jmp
inc
fnstcw
mov
jne
mov
fimul
in
inc
xor
xor
data16
cld
ss
(bad)
mov
pusha
call
jmp
or
cmp
setae
mov
ret
ret
xchg
cmp
fisttp
adc
and
mov
mov
add
push
or
(bad)
and
loopne
mov
sub
jmp
jae
add
in
push
jmp
(bad)
cmp
xchg
adc
push
out
out
xor
fadd
lock
in
ins
pop
or
and
cs
mov
ror
pusha
add
ja
pop
adc
xchg
pop
pop
aad
dec
fidiv
cmp
add
and
(bad)
dec
push
xchg
cmp
add
inc
xlat
dec
outs
ror
dec
adc
cmp
sbb
sbb
mov
adc
jbe
xchg
or
push
out
pop
push
push
clc
or
pop
add
inc
fcom
or
enter
add
pusha
sub
xor
sbb
fs
push
xchg
pusha
gs
test
mov
jns
addr16
in
mov
or
cmps
xor
adc
je
rol
pop
pop
lock
ja
or
and
dec
test
dec
add
jmp
dec
int
cmps
inc
xchg
xor
js
dec
(bad)
lds
cld
hlt
sub
mov
cmp
ja
cmp
jae
repz
inc
dec
call
push
loope
push
fdivr
mov
into
xchg
test
test
jbe
push
lahf
shl
inc
mov
and
cwde
shr
inc
mov
push
addr16
inc
push
in
cld
cld
push
fs
jne
push
ins
stos
addr16
or
sbb
aad
mov
or
sbb
inc
and
repz
adc
dec
or
add
jmp
inc
push
jns
or
or
inc
fiadd
push
mov
icebp
sub
add
xlat
lock
cmp
cmp
mov
sub
sbb
in
ds
(bad)
push
xor
mov
inc
xor
and
sahf
xchg
cmp
cmp
dec
fild
jnp
jns
xor
push
shl
dec
push
cmp
xchg
pop
cmp
sub
jae
push
dec
xchg
push
xchg
adc
add
push
lods
mov
or
sub
loopne
pop
pusha
mov
into
shr
je
mov
fnsave
jmp
aaa
inc
inc
mov
push
cli
xchg
test
imul
lss
cmp
jbe
fist
fstp
ja
xor
xor
bound
ss
mov
mov
cmp
mov
add
addr16
add
in
pop
cmp
adc
cdq
and
push
push
sbb
test
add
sbb
sbb
inc
jl
jmp
add
aam
clc
(bad)
(bad)
stos
mov
pop
add
(bad)
push
sub
add
cmp
jbe
sub
inc
inc
mov
mov
dec
sar
sub
jmp
mov
jbe
inc
add
pop
repnz
fisub
push
inc
fwait
cmp
or
mov
ret
push
sub
movsx
inc
xchg
rcr
or
add
jae
push
xor
push
cld
push
inc
sbb
ins
jbe
test
cmp
icebp
arpl
lods
mov
adc
daa
pop
push
push
pusha
mov
adc
hlt
inc
pop
clc
ss
pop
jns
xor
jno
pop
and
xor
lea
adc
div
sub
and
jae
sub
inc
pop
inc
sbb
jmp
xchg
mov
sahf
add
adc
xor
sub
shl
aam
ds
mov
hlt
ja
fst
add
cli
pushf
ja
mov
mov
dec
je
enter
push
or
dec
loope
lahf
sahf
jmp
mov
lods
sub
enter
loopne
jae
dec
loop
ret
add
in
int3
mov
and
adc
test
inc
cmp
je
mov
inc
and
sar
mov
add
sbb
pop
and
(bad)
imul
push
adc
and
sub
mov
xor
fcom
ret
pop
ins
add
dec
xchg
push
and
call
adc
cmp
retf
jg
jno
inc
xor
mov
fidivr
shl
add
xchg
lods
cmc
cmp
push
cmp
dec
inc
leave
push
or
call
adc
loopne
aas
cld
xlat
test
sbb
cli
aaa
inc
fnstsw
cmp
xor
lods
hlt
and
add
movs
gs
xor
add
adc
neg
xchg
add
add
cmp
ins
fisub
xlat
jge
xchg
adc
cmp
jle
push
sahf
sub
or
stos
and
div
movs
sub
sti
push
cmc
outs
arpl
nop
push
push
xchg
sub
in
mov
movs
or
hlt
dec
int3
(bad)
or
mov
cmp
pusha
sbb
sbb
inc
push
fstp
adc
ja
pusha
xor
mov
dec
and
sub
pop
sbb
rcr
inc
pop
dec
shl
sub
pop
imul
js
inc
arpl
xchg
inc
sub
imul
jno
adc
jb
push
sbb
jo
push
xor
push
mov
push
xchg
retf
push
sahf
pop
mov
adc
clc
fcomp
(bad)
push
arpl
or
into
add
(bad)
ficom
test
jns
mov
dec
pushf
push
push
sbb
jnp
xor
ins
int
fdivr
cmp
add
mov
dec
inc
jle
inc
int3
and
sub
push
adc
jp
pop
or
cmp
xor
dec
(bad)
xor
add
xlat
or
cmp
push
add
sub
add
shl
inc
mul
cmp
out
dec
je
sub
dec
inc
and
mov
ficom
cmp
jne
ins
mov
xchg
adc
in
jg
mov
inc
add
clts
cmps
adc
call
popf
adc
adc
sahf
out
jl
adc
(bad)
out
jl
pop
lds
repz
loop
push
push
pop
out
ds
and
sub
test
cdq
mov
hlt
loop
shl
fisubr
mov
push
adc
mov
pop
repnz
add
pop
cmp
loope
push
or
inc
bound
mov
add
xlat
fld
mov
fmul
sub
sub
pop
pop
cmp
add
sub
and
inc
test
retf
fs
dec
xchg
mov
ret
adc
xchg
mov
add
sub
mov
mov
cmc
mov
ins
pop
add
mov
cmp
pop
ins
fwait
mul
mov
loope
or
xchg
mov
mov
stos
test
sar
adc
stos
ret
in
mov
js
or
subps
popa
sub
or
adc
or
(bad)
adc
and
cmp
and
ins
dec
ds
xor
inc
sbb
xchg
jge
sub
mov
daa
inc
test
mov
pop
dec
inc
xor
shr
rcl
and
or
jge
jle
mov
mov
addr16
in
inc
jmp
sbb
push
xor
xor
sbb
adc
jae
unpcklps
adc
sbb
in
cmp
(bad)
(bad)
dec
les
push
or
loopne
xchg
push
add
add
jb
xchg
inc
mov
cmp
add
jns
ds
sbb
and
pusha
jb
shr
add
add
pop
inc
cmp
push
pop
mov
add
ja
dec
outs
rcl
mov
dec
adc
jbe
ja
pop
iret
and
inc
outs
mov
or
jecxz
push
cmp
pop
mov
push
pop
adc
inc
push
add
mov
jnp
mov
dec
cmp
out
mov
sub
inc
out
cmp
pop
sbb
push
inc
xlat
mov
jle
pop
xor
outs
mov
rcl
sbb
sbb
push
mov
xor
jnp
jl
jo
jmp
xor
inc
outs
push
mov
push
fnsave
and
add
dec
and
pop
cmp
inc
sbb
pop
adc
pop
scas
xchg
or
adc
and
or
pause
inc
cmp
or
je
int
mov
push
loop
push
mov
sbb
nop
pop
xlat
cdq
cmovno
call
sbb
clc
or
add
mov
pop
test
repnz
and
push
stos
fnsave
and
pop
xchg
stos
xor
loope
test
xchg
shl
add
es
xor
int3
push
xor
or
xor
cli
cmp
daa
js
xor
movs
jg
scas
sub
jns
cmp
lods
pusha
movs
jno
adc
mov
mov
rcl
(bad)
push
jnp
mov
call
dec
push
jo
sub
in
add
dec
ret
add
popa
xchg
xor
ret
mov
dec
add
call
dec
je
add
loop
in
and
das
cmps
or
push
push
pop
test
movups
nop
jno
and
lock
fcom
enter
dec
cmp
mov
push
sti
mov
repnz
pusha
and
ret
push
add
dec
xlat
pop
and
xchg
pop
mov
je
add
push
inc
loop
popf
adc
jae
fstp
scas
push
(bad)
cmp
mov
rol
push
cmp
shl
mov
call
mov
add
ins
push
add
add
dec
fs
or
call
lock
jnp
push
jb
mov
loope
inc
ficomp
sbb
or
dec
add
add
data16
push
mov
mov
or
inc
dec
les
dec
jo
add
loop
mov
pop
jb
jmp
push
dec
adc
inc
loopne
mov
push
xor
outs
cmp
mov
push
pop
mov
push
push
add
pop
jne
jo
push
jl
sub
rol
jb
xchg
aas
adc
or
test
xchg
add
aam
dec
mov
mov
mov
cmp
jae
xlat
pop
or
add
jmp
data16
and
dec
jmp
daa
cmp
mov
mov
jne
fmul
ds
repnz
pop
and
jo
and
mov
icebp
test
add
fldcw
enter
sbb
mov
out
push
outs
push
sbb
and
in
stos
adc
sbb
or
arpl
jp
fldcw
shl
xor
mov
ret
jmp
mov
cmp
leave
or
lods
mov
or
sbb
mov
add
add
pop
setns
enter
pop
jmp
stos
dec
xchg
sub
inc
out
push
fs
cmp
and
and
(bad)
fs
cmp
out
mov
aas
lock
dec
pop
repz
dec
in
sbb
mov
dec
lea
std
push
or
push
xor
xchg
psubusw
jp
jb
mov
xchg
lods
pop
mov
test
adc
mov
push
push
jo
mov
inc
push
jb
adc
push
jb
or
invd
xor
gs
pop
ds
fs
sub
xor
sbb
inc
pop
dec
mov
push
xchg
add
or
push
call
test
hlt
out
test
sub
mul
jne
xchg
pop
xor
loop
cmp
mov
push
sub
adc
shr
ins
jbe
mov
add
cmps
adc
and
ret
cmps
add
iret
icebp
cmp
xchg
pop
stos
and
and
shl
lock
nop
and
xor
bound
push
dec
and
inc
push
mov
daa
and
jb
and
pop
fwait
scas
in
add
jae
dec
dec
jmp
push
inc
and
nop
adc
pop
and
pop
enter
pop
and
xor
push
aaa
add
cmp
dec
xchg
ror
sbb
inc
es
xchg
adc
xor
aam
sbb
les
xor
pop
ins
push
mov
push
add
ins
jl
add
cmp
es
sub
or
mov
jae
sub
sub
fild
adc
jae
js
rol
jo
sub
shl
push
mov
dec
dec
mov
and
push
inc
and
inc
loopne
jl
mov
shr
adc
jae
mov
add
mov
mov
gs
adc
in
mov
pop
xor
ins
add
adc
or
stos
lea
clc
loop
jno
xlat
nop
test
dec
or
mov
fisubr
sbb
mov
add
and
rcr
addr16
cmp
sbb
lock
or
sbb
cmps
shl
add
and
sub
sbb
mov
shl
imul
dec
in
sti
sbb
jae
in
in
fimul
mov
sbb
push
sbb
dec
cmp
adc
imul
xchg
cmps
inc
or
mov
std
push
pop
adc
jecxz
push
mov
add
nop
jbe
(bad)
sbb
fisttp
jae
sub
mov
out
lea
add
mov
ror
inc
sbb
inc
push
pop
sub
mov
sub
mov
mov
jae
or
jmp
cmps
or
(bad)
je
jp
mov
into
and
add
jo
rol
adc
or
push
loope
pusha
je
or
adc
cmp
xor
leave
add
je
or
jnp
dec
fmul
mov
icebp
xor
sar
dec
fisub
dec
sub
cmp
jl
sub
sahf
or
jg
or
fs
add
(bad)
mov
add
jge
push
cld
das
sbb
and
push
fndisi(8087
retf
test
pop
ror
mov
adc
xchg
(bad)
push
cmp
push
add
sub
scas
xor
jae
loope
daa
push
add
jmp
push
push
xor
jg
inc
pop
not
inc
sbb
inc
or
push
mov
and
mov
add
or
retf
jmp
arpl
or
jne
push
push
jnp
or
push
inc
inc
cmp
jbe
pop
add
retf
mov
inc
and
jns
scas
pop
jle
or
popa
add
hlt
adc
nop
idiv
jae
sti
cmp
sub
push
and
test
arpl
leave
cmp
mov
sub
retf
setp
sub
inc
shr
imul
jmp
dec
push
sbb
xor
adc
inc
fist
lods
push
ret
lock
or
push
add
push
rol
mov
or
mov
mov
inc
or
mov
add
std
shl
dec
or
push
jge
adc
inc
aaa
add
das
add
cmps
popa
add
jne
jnp
sbb
pop
lods
inc
pop
and
cld
call
in
nop
sub
mov
xlat
sbb
push
push
dec
je
jno
dec
push
xor
aaa
in
mov
ret
mov
push
aaa
sub
push
(bad)
shl
aam
xlat
add
adc
dec
cmp
dec
or
iret
adc
retf
cmp
adc
jae
aas
ret
loopne
xor
sbb
or
rcr
xchg
add
mov
(bad)
jp
dec
mov
mov
pcmpeqd
movs
push
jne
cmp
jbe
sbb
inc
inc
push
ja
mov
inc
mov
popf
sub
int
dec
int
inc
mov
inc
mov
out
mov
cmp
jbe
ins
fucomip
cmp
rol
rol
jecxz
and
or
fwait
jbe
mov
sbb
push
or
cli
and
cmp
loop
xlat
fidiv
lea
loop
inc
mov
sbb
lock
xchg
adc
cmp
sub
push
lock
mov
jmp
pop
push
jne
movs
bound
arpl
jle
jnp
movs
retf
popf
dec
or
pushw
pop
or
adc
rcr
add
cmp
mov
xor
push
fwait
pop
cmp
les
fidiv
push
stc
data16
rcr
and
add
mov
mov
aaa
add
add
inc
fcomp
mov
cmp
enter
retf
gs
ins
enter
les
test
add
add
dec
scas
lds
mov
adc
mov
popa
loop
fmul
shl
dec
push
loopne
nop
cmp
(bad)
ret
cmp
and
ds
mov
sub
mov
pop
push
jo
and
or
or
pop
pop
aam
dec
je
sbb
push
in
inc
mov
cmp
mov
mov
adc
push
xor
or
pop
dec
hlt
sub
sbb
or
fadd
std
ja
fmul
in
(bad)
jmp
and
fs
cmp
mov
in
dec
jno
add
jmp
mov
lods
add
retf
icebp
add
(bad)
mov
mov
dec
push
pushf
clc
or
inc
push
sub
sbb
inc
pop
shl
mov
clc
jo
imul
cmps
cmp
jbe
out
and
and
push
fcom
sbb
xor
dec
cmc
retf
lock
sbb
hlt
sub
cld
clc
arpl
cli
dec
dec
pushf
sub
mov
inc
pop
mov
add
sahf
in
jb
inc
add
test
push
or
loope
inc
rol
sti
ror
or
test
mov
clc
sub
adc
movs
sar
xchg
call
int3
mov
enter
sbb
and
stos
and
push
cmp
xor
sbb
push
fucomp
jo
(bad)
inc
mov
ss
mov
dec
and
ret
xlat
sub
shl
push
pusha
or
jle
add
sub
sbb
adc
push
lea
xchg
cld
je
pop
adc
and
jecxz
fsubr
and
and
mov
push
cmp
and
pause
data16
adc
mov
push
mov
frstor
pusha
jle
lea
rcl
rol
xchg
jl
jbe
dec
jbe
mov
cmp
or
ins
out
adc
adc
bound
push
mov
mov
dec
mov
add
inc
sbb
pop
bound
xor
pop
stc
fiadd
adc
or
fistp
sbb
cmp
push
mov
mov
jae
sbb
or
jbe
jb
das
jne
mov
mov
ja
inc
cmp
sbb
inc
mov
sar
push
push
pop
fwait
sar
(bad)
sbb
and
inc
loope
push
out
mov
mov
jg
and
mov
pop
mov
adc
pusha
out
xor
sbb
xor
add
dec
add
or
jg
ror
sar
ja
or
repnz
repz
push
adc
xchg
xchg
rcl
xchg
sub
inc
sub
rcl
xor
push
jge
sahf
daa
push
sahf
add
outs
movs
jge
test
xchg
and
sub
add
ins
pop
dec
mov
xor
mov
dec
pop
jl
sub
cmp
jl
add
push
sahf
data16
sbb
fcom
mov
inc
add
imul
aas
mov
sbb
lock
jae
mov
lods
hlt
adc
imul
das
popa
jl
fsubr
inc
dec
mov
(bad)
data16
imul
mov
sub
ds
sub
cld
fcmove
inc
sub
jg
(bad)
into
mov
push
mov
mov
out
je
loope
nop
push
and
push
jecxz
xlat
out
adc
test
inc
push
lods
data16
xchg
jo
xchg
jg
mov
shl
cli
xchg
adc
mov
movs
mov
scas
jbe
dec
xor
mov
fadd
dec
push
and
mov
in
pop
xlat
fmul
or
into
les
mov
add
add
sbb
(bad)
test
stc
shl
out
lea
pop
cmps
or
mov
es
loopne
aam
je
mov
xor
jp
pushf
dec
out
mov
add
jle
(bad)
pop
mov
jbe
mov
mov
or
pop
inc
ror
fwait
(bad)
outs
mov
and
inc
adc
ret
lds
push
(bad)
(bad)
(bad)
pop
je
fmul
out
sbb
je
dec
mov
mov
rcl
inc
bound
sub
ins
jl
jmp
lods
jge
call
pop
push
inc
jnp
cs
jge
mov
mov
sbb
push
mov
sti
jecxz
inc
fld
mov
mov
mov
xchg
mov
dec
sub
and
arpl
nop
inc
inc
mov
int3
dec
and
or
repz
xor
mov
jl
push
addr16
loop
mov
pop
and
adc
mov
pop
das
mov
mov
in
jmp
pop
mov
iret
cld
mov
mov
hlt
push
mov
ror
test
and
add
(bad)
inc
cmp
push
or
mov
jnp
ret
mov
mov
loopne
and
push
sar
in
inc
sub
xchg
aad
stos
push
pop
call
pop
mov
and
mov
mov
mul
cld
push
mov
and
push
loopne
mov
sbb
push
es
pop
(bad)
cs
xchg
sbb
into
jle
fidiv
jmp
sar
jg
dec
cmp
jle
fisub
mov
dec
jmp
push
aas
and
or
call
sub
inc
sbb
jg
inc
addr16
std
aaa
add
test
popf
in
jb
or
sbb
push
push
cmp
lea
inc
loope
pop
add
add
mov
movs
jmp
sub
sbb
daa
jge
add
sahf
mov
or
pop
in
lock
mov
xchg
xor
es
fsub
fcomp
ins
ss
jle
cmp
jb
sub
test
add
mov
iret
inc
sbb
add
clc
fbld
retf
shl
or
jp
push
add
mov
sub
dec
xor
mov
pop
ss
mov
sar
push
mov
ret
mov
mov
jmp
jmp
or
test
xor
in
sub
sub
sub
test
sub
xchg
test
mov
cdq
rcr
sbb
pusha
jae
dec
sbb
loop
jno
add
adc
div
ret
std
pop
mov
dec
(bad)
pop
dec
rcl
dec
cwde
and
xchg
xor
shr
dec
cwde
xchg
call
arpl
(bad)
push
inc
mov
sbb
adc
test
sbb
inc
push
(bad)
mov
nop
dec
adc
and
adc
les
je
pop
inc
shl
jmp
mov
inc
push
fcomi
xchg
mov
loopne
leave
and
(bad)
stc
sub
adc
out
sbb
rol
ins
pop
and
and
xchg
pop
xor
mov
add
in
xchg
mov
xor
dec
mov
lea
loop
fwait
cli
adc
xchg
and
jg
das
sar
mov
sti
cmp
jge
mov
add
repnz
out
pop
dec
cmp
push
push
pop
mov
aad
xor
mov
sbb
sar
retf
movs
mov
add
sbb
repz
loop
xor
adc
inc
clc
pop
leave
xchg
dec
inc
mov
cld
inc
aas
xchg
inc
push
or
xor
mov
pop
push
cmp
mov
sub
mov
movzx
mov
xor
and
jnp
push
pop
push
xor
and
xor
enter
sar
cmp
mov
mov
fisttp
mov
sbb
inc
inc
inc
jge
inc
sar
dec
ds
cmps
dec
arpl
and
mov
data16
inc
mov
clc
jne
mov
popa
and
mov
lock
std
jp
imul
sbb
or
out
or
adc
(bad)
push
nop
int
cwde
push
xor
push
mov
xchg
mov
das
push
sub
loope
xchg
outs
add
xchg
scas
in
add
or
sbb
mov
lea
in
sbb
dec
std
xchg
push
out
add
cmp
xor
push
rcr
adc
inc
and
mov
inc
in
sti
xor
ja
or
lea
sbb
jo
add
xor
mov
xchg
dec
cs
mov
inc
pusha
mov
leave
pop
mov
jle
adc
sub
dec
and
icebp
adc
mov
adc
or
add
push
test
jbe
jb
mov
mov
xchg
mov
fstp
and
sub
xor
xchg
sti
or
or
nop
pop
mov
shr
jl
jb
jmp
lea
or
dec
add
or
or
outs
push
and
push
shl
pop
imul
or
test
sbb
dec
add
outs
loop
push
add
shl
pop
push
pusha
push
mov
mov
sub
leave
pop
cwde
mov
mov
pop
lea
nop
xchg
dec
adc
add
sbb
inc
les
loopne
fidivr
inc
inc
sub
ret
jmp
push
push
mov
and
fcomp
cmp
das
mov
lods
mov
movs
fst
cmp
xor
sbb
push
inc
ins
and
dec
data16
dec
inc
cld
dec
movzx
push
cmp
arpl
jmp
jp
adc
imul
rcl
in
mov
jnp
mov
mov
adc
pop
adc
sbb
mov
sbb
sub
js
add
push
hlt
out
jp
(bad)
clc
cli
sar
xor
adc
sar
push
aas
loope
jle
mov
test
adc
mov
pop
mov
mov
sbb
xchg
or
and
sbb
or
sub
sub
sub
mov
xor
or
mov
add
std
xchg
mov
pop
add
cmp
jl
fwait
sub
mov
add
jmp
mov
push
out
mov
in
(bad)
pop
sahf
or
jmp
pusha
cdq
mov
ss
add
test
or
mov
mov
cld
popf
not
cs
adc
cdq
xor
lock
in
es
mov
sbb
xor
or
and
sahf
mov
adc
das
inc
xchg
xchg
js
test
cs
adc
add
adc
mov
imul
adc
fistp
or
jne
or
push
daa
cmp
dec
push
ret
and
mov
or
sub
xor
adc
pusha
dec
push
add
call
enter
xchg
xchg
sub
sbb
sub
jne
mov
mov
cmc
jecxz
adc
dec
sub
sti
or
push
in
xchg
lea
jl
xchg
mov
xor
shr
test
push
out
jle
sub
fldcw
jmp
imul
adc
mov
nop
or
pop
mov
sbb
push
lea
add
daa
xor
jmp
add
add
push
rcl
je
(bad)
lods
adc
rdtsc
mov
push
inc
mov
(bad)
inc
inc
or
ss
dec
push
les
dec
jo
aam
ffree
lods
call
ret
cmp
fdivrp
adc
in
or
enter
cmp
sub
les
int3
or
enter
mov
pop
aad
je
es
or
mov
inc
mov
adc
xor
in
add
dec
sbb
addr16
in
adc
call
leave
and
cmp
dec
fist
adc
jne
push
cmp
or
or
inc
gs
in
aam
lock
jl
inc
mov
xor
inc
mov
rcr
sub
data16
jbe
ja
mov
call
dec
inc
inc
xchg
aam
outs
enter
fld
sti
not
jmp
mov
popa
sbb
dec
jo
sub
js
ror
call
lock
pop
and
je
mov
or
mov
call
fnstenv
mov
fwait
dec
and
hlt
std
sub
pop
cmp
add
jae
inc
and
jnp
daa
xchg
or
out
sbb
std
mul
adc
out
dec
in
shl
xor
pop
mov
mov
rol
xor
mov
xor
(bad)
lods
fld
xor
adc
aaa
adc
sub
(bad)
xchg
push
daa
shl
aam
es
adc
sub
sub
in
shl
xor
xchg
aaa
mov
or
ror
leave
inc
or
pusha
adc
clc
xor
shr
fsubr
enter
in
push
mov
xor
repnz
pop
cmps
mov
cli
push
inc
test
jmp
inc
faddp
fist
sub
inc
jl
inc
adc
test
mov
das
cmp
cmp
jecxz
pop
mov
add
inc
fiadd
out
punpcklbw
xchg
push
(bad)
inc
mov
sub
pop
inc
movs
adc
aas
ret
and
and
ins
mov
mov
adc
jns
clc
sbb
xor
retf
add
adc
pop
add
add
fadd
sub
xchg
inc
sub
popa
sbb
js
xor
dec
push
jbe
arpl
push
xchg
gs
out
sbb
dec
adc
pop
jb
arpl
cmps
lods
xor
or
inc
inc
outs
or
mov
or
fist
and
mov
fsubr
adc
gs
cmps
fcom
je
jmp
arpl
fcom
and
lahf
inc
sbb
fdivr
outs
add
or
or
sbb
mov
out
test
ficomp
stos
jo
jns
mov
pop
jo
shl
dec
sub
push
cmps
cmp
cmps
dec
arpl
outs
xchg
xor
push
outs
mov
out
cmp
outs
add
imul
push
push
jp
out
push
lock
ret
arpl
in
xor
inc
dec
mov
mov
ja
adc
dec
outs
out
popa
adc
mov
gs
inc
push
xor
data16
adc
ds
shr
xlat
popw
(bad)
jg
or
add
jae
dec
jmp
push
das
mov
push
push
pop
(bad)
mov
dec
aam
loop
inc
inc
ins
in
fimul
fwait
cmp
push
pop
xchg
pusha
fist
lods
push
repz
push
mov
adc
xchg
sti
pop
jb
ins
rol
or
ins
push
ds
mov
xlat
ins
xlat
outs
pop
inc
retf
sbb
jp
jae
pop
xor
pop
cld
js
dec
adc
outs
xlat
je
push
add
push
arpl
push
pop
imul
fdiv
or
pop
xor
mov
mov
div
or
inc
jb
pop
adc
xchg
outs
mov
popa
daa
add
aam
push
and
xchg
jne
jo
mov
pop
cmps
push
mov
inc
cmps
sbb
daa
dec
imul
sbb
pop
pop
test
lods
adc
push
and
das
mov
pop
shr
out
out
inc
ret
pop
shr
push
ja
test
or
pop
and
jnp
push
test
dec
scas
imul
or
xchg
lahf
test
les
lahf
sub
pusha
mov
aas
push
adc
ffreep
imul
aad
lds
adc
sbb
mov
fwait
mov
xor
sbb
sbb
jp
xor
xchg
push
pop
pusha
cmp
jo
lahf
mov
fbstp
adc
adc
dec
push
movs
xchg
stos
ja
daa
icebp
jecxz
mov
outs
or
lods
fisub
scas
ja
pop
push
push
scas
outs
dec
adc
je
dec
xlat
adc
popf
stos
push
inc
pop
bound
xchg
loop
xor
adc
les
inc
jg
ins
sbb
inc
or
add
add
fs
xor
outs
lds
and
pop
call
jae
adc
outs
and
xor
out
mov
jne
jmp
pop
sbb
or
pop
xchg
inc
adc
push
push
cmps
jae
icebp
add
jbe
inc
sub
aas
ror
jb
loopne
push
jb
xor
pop
pop
ret
sbb
fisub
cwde
mov
retf
pop
dec
xor
cmps
adc
cmps
pop
ret
inc
pop
movzx
or
aaa
adc
test
pop
push
loop
xchg
inc
fild
add
imul
push
out
mov
inc
dec
aad
add
jno
xchg
ins
pop
push
jg
sub
ins
call
push
sar
mov
sub
ret
je
fwait
not
inc
push
push
aas
lahf
fs
mov
imul
int3
fcmovbe
(bad)
into
js
add
je
jns
xor
push
inc
ss
or
or
cs
sub
rcpps
mov
and
sar
aaa
mov
out
(bad)
jl
test
jns
jg
or
jo
xor
addr16
inc
sbb
data16
jae
mov
sbb
sub
sbb
or
mov
cmp
sub
repnz
sbb
sbb
mov
inc
cmp
test
inc
sub
add
leave
leave
leave
leave
js
jo
mov
mov
sar
inc
jl
popa
jns
jne
hlt
les
cmp
add
je
loop
adc
mov
or
fs
test
rcr
cmp
adc
and
ret
ds
outs
or
(bad)
sahf
out
cmp
gs
and
push
or
jbe
and
push
or
sub
sbb
arpl
and
fidiv
mov
movs
stos
sub
ficomp
inc
xchg
xcrypt-ofb
cmps
lods
pop
enter
movs
mov
fild
inc
cwde
adc
add
add
mov
fst
inc
xchg
rol
cld
cwde
push
push
in
scas
jge
int
in
out
add
push
xchg
pop
push
cmp
jge
jo
pop
xor
add
push
sub
in
mov
in
in
cld
(bad)
dec
call
fisttp
shl
inc
add
(bad)
call
cld
jle
loop
adc
(bad)
inc
jmp
rol
and
sub
add
pop
bound
(bad)
in
xor
xchg
pop
sub
movs
xchg
(bad)
loopne
add
cmp
ins
(bad)
fcomp
int3
ins
pop
inc
repnz
xchg
push
push
xchg
nop
iret
pop
sbb
xor
pop
cmp
sub
adc
inc
aad
and
jl
cmp
cmp
cmp
push
adc
in
xchg
mov
jl
and
inc
inc
add
hlt
inc
add
jae
jmp
aad
lods
mov
test
adc
out
add
ins
gs
in
fwait
and
arpl
in
mov
jmp
mov
das
pop
dec
mov
into
inc
popa
jo
sbb
ds
mov
mov
sbb
sbb
inc
push
add
repz
push
sbb
imul
dec
hlt
popa
ins
adc
fimul
inc
inc
fsub
mov
daa
call
sbb
cmp
(bad)
jo
mov
jmp
sbb
jp
movs
aas
sar
bound
sar
push
sar
sbb
fild
hlt
mov
pop
test
movs
sbb
xchg
xor
mul
inc
ret
nop
rcr
cmp
mov
dec
mov
repnz
ins
outs
ja
pusha
add
add
add
les
arpl
pop
nop
push
push
fld
and
or
dec
pop
mov
inc
and
or
dec
mov
and
push
repnz
pop
in
shl
jl
or
push
pusha
jmp
mov
bound
jo
jo
jne
pop
jb
cdq
mov
fadd
or
retf
mov
ins
cmps
dec
sahf
fsub
mov
call
rol
les
jo
aad
jl
call
push
dec
test
shl
mov
mov
or
fnstsw
push
mov
push
fdiv
add
inc
pop
xchg
shl
outs
or
out
inc
push
mov
mov
or
mov
scas
jnp
mov
xchg
sbb
int
sar
or
pop
xchg
fdiv
dec
sub
les
xchg
aam
dec
loopne
add
or
inc
out
jns
add
dec
clc
clc
das
add
ins
jbe
or
outs
fiadd
add
add
leave
test
xchg
xchg
pop
adc
add
and
and
jns
dec
ds
fidivr
push
out
outs
xor
ss
xor
jbe
rol
leave
pop
repnz
shl
or
xchg
das
in
cmp
cmp
out
test
dec
xor
add
xor
in
fsub
les
cmp
push
and
imul
cwde
add
dec
outs
mov
je
icebp
cmp
pop
bound
cmp
inc
aaa
pop
cwde
inc
test
add
add
xor
push
inc
aaa
or
lock
rol
push
adc
xor
aaa
cmp
inc
add
nop
pop
stc
nop
nop
int3
mov
inc
inc
out
imul
je
imul
jnp
div
mov
mov
ffreep
push
pop
cmp
cmp
xchg
inc
add
jge
mov
cwde
cmp
(bad)
and
ins
mov
jl
xor
lock
push
pushf
xchg
add
jns
fs
enter
inc
and
mov
les
mov
mov
cmp
sti
lock
(bad)
cld
push
cdq
push
mov
out
repz
xor
or
imul
fs
aas
pop
mov
lods
pop
and
ror
gs
stc
test
pcmpeqd
dec
cmp
mov
dec
jne
je
jno
fs
pushf
out
clc
jb
nop
jl
pop
cwde
lahf
inc
test
inc
inc
dec
or
lahf
dec
adc
cmp
lahf
add
adc
push
ins
add
xchg
and
cs
xchg
inc
mov
push
xor
mov
(bad)
cs
lock
xor
ret
inc
enter
fwait
inc
cmp
mov
fadd
aad
pop
iret
ss
jl
push
(bad)
outs
fcom
inc
pushf
out
xlat
jl
sub
inc
push
adc
push
out
xchg
push
xchg
push
js
push
xchg
aam
out
mov
mov
jle
push
aam
shr
aam
xlat
mov
nop
push
add
ret
xor
xor
ja
push
adc
jns
aam
out
js
jl
xor
loopne
inc
in
mov
clc
mov
icebp
add
add
mov
sub
sahf
xor
hlt
aaa
inc
sub
out
sub
mov
and
(bad)
inc
mov
ds
imul
add
sub
scas
mov
push
xor
out
pop
popf
mov
xchg
fbld
sub
or
push
mul
push
aaa
mov
xor
arpl
xchg
jae
adc
sar
hlt
jp
jp
nop
lahf
data16
cwde
ja
dec
dec
inc
repnz
jl
cmps
inc
neg
sbb
push
sbb
jmp
sahf
mov
sahf
add
stos
push
and
in
(bad)
xlat
xor
pop
mov
pop
sub
jo
xchg
xchg
jnp
loop
push
mov
jl
js
test
push
das
mov
and
mov
xchg
inc
xor
inc
cmp
or
ins
cli
push
jb
movs
pop
jne
adc
call
add
inc
movs
and
in
imul
sub
sti
mov
mov
in
mov
shl
inc
add
mov
leave
sbb
or
cmps
rcl
loope
test
mov
movs
fldlg2
(bad)
je
xor
add
pop
mov
sbb
mov
inc
jne
data16
xchg
add
mov
sbb
push
xor
or
add
cmp
leave
and
xchg
dec
outs
sbb
dec
int3
les
stc
(bad)
jmp
push
jb
movs
dec
and
es
adc
aam
push
jmp
cmps
sub
daa
je
in
or
add
jae
sub
pop
mov
aaa
sub
add
(bad)
clc
movs
sub
xor
add
xor
cs
dec
mov
cmp
or
scas
add
rcr
movs
inc
push
inc
js
je
pop
adc
inc
ficom
inc
adc
and
sbb
mov
or
repnz
dec
and
mov
pop
push
jo
cmp
sbb
cmp
add
xor
or
xchg
add
mov
mov
dec
clc
sbb
mov
pusha
adc
xchg
(bad)
inc
rcr
(bad)
hlt
popf
inc
add
inc
add
outs
cwde
es
jg
add
pop
add
inc
or
push
cmp
mov
pusha
or
jp
mov
push
jecxz
(bad)
pop
or
xchg
add
add
mov
mov
rcl
mov
adc
inc
mov
mov
imul
or
mov
xlat
inc
mov
or
loop
not
and
mov
inc
jmp
icebp
pop
add
fs
int
out
add
mov
jge
fild
xor
pop
arpl
mov
inc
call
daa
inc
aaa
addr16
or
add
lea
jp
loopne
inc
pop
or
sub
fs
ret
shl
sti
pop
add
cmp
lea
mov
adc
fucomip
fadd
enter
or
mov
and
add
cmp
push
push
dec
xor
lock
ret
cmp
xchg
xchg
xor
imul
pop
xchg
dec
nop
sub
push
lea
push
and
push
or
push
xchg
jmp
cld
xor
xchg
xor
mov
xchg
cld
ror
icebp
je
inc
cmp
jae
cmp
xchg
mov
add
sbb
mov
test
(bad)
fist
push
or
pandn
sub
rcl
dec
shr
pop
in
add
out
dec
pop
xor
adc
test
dec
push
rcr
outs
idiv
add
out
cmovns
enter
mov
int
mov
movs
pop
mov
fwait
xchg
jecxz
sub
imul
dec
sbb
inc
mov
rol
jge
sub
push
sub
inc
call
aam
clc
jle
rol
stos
jo
inc
mov
push
adc
inc
jecxz
xchg
xor
dec
mov
sar
jno
dec
test
popa
or
xchg
popa
push
push
mov
nop
sub
retf
add
adc
mov
push
rol
jo
cmps
sbb
aam
mov
(bad)
sti
lea
cld
and
xor
adc
jmp
inc
inc
shl
retf
cmp
adc
hlt
cs
and
or
dec
push
lock
sub
test
enter
int3
add
push
add
ret
clc
jbe
sbb
repz
fcmovbe
or
out
lock
dec
adc
fidivr
inc
test
or
les
push
jg
ret
sub
sbb
and
ret
add
xor
inc
jecxz
jmp
mov
inc
push
std
and
in
fld
lock
sub
popf
ret
push
dec
sbb
add
xor
dec
repz
test
and
or
cmc
shl
pop
push
push
dec
push
sbb
xor
mov
lds
mov
lock
push
movs
in
pop
sub
sub
add
imul
(bad)
sbb
pop
add
cmp
ss
in
adc
xchg
hlt
test
aad
sbb
in
jp
adc
ja
adc
mov
xor
out
and
or
push
push
mov
fwait
push
test
sub
jae
inc
push
mov
aad
mov
pop
pop
mov
out
popf
(bad)
or
das
mov
mov
mov
sub
stos
pop
movs
fadd
push
clc
and
sbb
imul
jmp
rcl
jnp
rcl
outs
sub
cmp
shl
out
je
mov
inc
xchg
(bad)
jmp
lahf
push
dec
xchg
shl
dec
sub
data16
inc
sbb
rcl
out
aas
cmp
mov
mov
int
fild
sub
out
jnp
mov
sbb
mov
imul
xchg
xchg
push
mov
xchg
mov
aaa
sbb
sbb
and
push
dec
or
adc
cmp
mov
outs
xchg
mov
cmp
adc
or
(bad)
push
inc
lahf
cmp
(bad)
push
cmp
inc
and
mov
out
adc
aaa
in
push
mov
inc
cmp
xchg
mov
sbb
test
xor
sub
cmps
add
push
mov
add
or
test
or
adc
inc
or
sbb
leave
jns
jmp
or
add
rcr
or
outs
push
add
dec
mov
ins
mov
cwde
shl
je
je
sti
sub
lods
sbb
cmp
pop
nop
int
aas
sahf
sbb
mov
cmp
sbb
pop
jno
push
retf
push
(bad)
retf
mov
add
or
mov
push
outs
sar
sub
ret
es
xsaves
inc
xchg
fimul
cwde
mov
add
fsub
mov
pop
pop
mov
dec
sbb
out
push
xchg
lahf
xchg
fcomp
rcr
imul
jge
icebp
scas
inc
mov
lds
ins
pushf
test
mov
push
push
mov
lahf
sahf
ins
aas
sub
jnp
xor
out
jae
mov
add
iret
sub
push
ins
mov
or
xchg
ret
inc
add
sbb
gs
pusha
cdq
push
xchg
cmp
test
and
push
out
mov
leave
mov
test
add
sub
push
(bad)
xchg
push
push
sub
mov
fs
stos
xchg
fistp
inc
mov
inc
jo
cmps
hlt
xor
push
sub
xchg
in
adc
mov
add
fs
and
xchg
sbb
ja
das
pop
inc
imul
cmp
mov
cmp
push
in
adc
pop
pop
fsub
xchg
cld
sub
lahf
xor
out
(bad)
in
popa
jmp
repnz
cld
aad
inc
xor
dec
rol
ret
and
mov
les
mov
and
or
push
pop
icebp
addr16
test
sbb
and
or
pop
sbb
or
cmps
enter
xchg
jg
push
fs
outs
mov
sbb
fs
outs
ins
sbb
jo
ds
rol
loope
pop
push
nop
jo
adc
fwait
dec
mov
or
das
inc
dec
pop
add
dec
add
outs
aas
xor
mov
dec
jecxz
mov
je
neg
add
cld
mov
inc
inc
add
pop
aam
inc
xchg
jmp
and
mov
mov
call
jmp
inc
ror
aaa
or
add
cmp
pcmpgtb
xchg
push
and
lahf
push
xchg
sub
mov
ja
nop
int
mov
js
sbb
adc
push
inc
adc
popa
fimul
ja
sbb
int3
xchg
cmc
add
rcl
or
xchg
outs
pop
into
movs
mov
lock
bnd
loopne
push
jl
shr
xchg
outs
cmp
test
add
ror
mov
lock
mov
push
pop
repnz
add
sahf
std
sbb
inc
push
mov
jnp
and
adc
sbb
pop
aas
add
xchg
addr16
jne
or
ficomp
lea
fadd
xor
dec
adc
cmp
jae
inc
jmp
pop
mov
mov
adc
shl
mov
scas
pop
and
xor
and
dec
cmp
push
mov
inc
add
sti
add
ret
mov
add
jge
bound
div
inc
cmp
adc
xchg
pop
xchg
loop
jl
xchg
js
push
dec
xchg
cmp
push
js
add
adc
aam
int3
out
cli
cmp
sbb
jno
lds
push
mov
je
enter
jne
mov
mov
jmp
dec
je
jne
inc
movd
dec
cmps
cwde
jge
xchg
jp
cmc
aaa
fdiv
in
push
ret
xor
lock
push
mov
xor
test
mov
test
dec
cmps
hlt
or
inc
rcr
pop
fadd
push
in
cmp
add
push
or
add
cmp
push
fs
cmp
or
jb
mov
outs
and
retf
adc
and
cs
neg
jns
jae
dec
pop
in
sub
je
push
mov
jecxz
jnp
cmc
sbb
cmp
or
test
or
sbb
mov
pusha
js
out
xchg
add
push
cmp
dec
loopne
or
xor
push
cld
ds
dec
pop
enter
or
ja
adc
add
or
test
lock
(bad)
cmps
ins
adc
inc
dec
sbb
and
xor
xchg
fisubr
cmp
rcl
sbb
add
xchg
dec
jno
imul
xchg
adc
(bad)
test
push
push
and
ret
adc
scas
sub
daa
adc
arpl
aaa
rol
shl
push
sbb
stos
add
ins
push
xchg
jmp
pop
push
test
push
mov
add
inc
sbb
dec
sbb
popf
enter
sub
daa
jmp
pop
dec
pop
inc
pushw
cmp
inc
fadd
aam
je
add
xchg
mov
ds
pop
sti
xchg
push
push
mov
pop
inc
jae
xchg
or
pop
pop
leave
cld
addr16
ret
inc
lods
pop
loop
(bad)
xor
dec
push
in
ret
sbb
inc
push
and
sub
sbb
sbb
je
clc
dec
dec
popa
loop
jne
push
cmp
and
scas
into
push
push
sub
in
mov
sbb
or
mov
psraw
(bad)
mov
xchg
psubusw
adc
and
add
lock
call
ffree
aam
mov
and
loop
jnp
xchg
or
sbb
add
or
out
sbb
stos
fcom
push
jns
pop
xlat
add
lahf
hlt
daa
and
mov
nop
pop
jmp
jg
mov
cmp
ret
pop
pop
inc
cdq
popf
hlt
sub
movs
adc
mov
sub
and
ficomp
enter
sbb
ja
pop
xchg
adc
enter
adc
scas
xchg
pop
test
xchg
sbb
outs
fimul
shl
ret
sub
test
inc
nop
push
add
jmp
test
test
jecxz
xor
pop
mov
adc
test
add
es
and
xor
ret
ret
enter
ret
push
loopne
(bad)
stos
mov
and
inc
push
pop
ja
xor
push
mov
sub
nop
xor
xor
ds
push
leave
repnz
jb
push
inc
sub
out
pop
xchg
popa
dec
call
nop
(bad)
out
xor
out
xchg
sbb
xor
add
adc
mov
sar
sub
data16
and
movs
or
sti
fbstp
aam
movs
adc
es
or
inc
sbb
or
dec
inc
loop
adc
mov
mov
int3
data16
add
out
mov
or
inc
pop
cmp
fist
add
test
cmp
movs
(bad)
jle
mov
add
mov
inc
test
jbe
arpl
push
rol
out
add
mov
sbb
push
pop
mov
add
xor
shl
addr16
popa
mov
adc
mov
imul
pushf
and
mov
xchg
inc
sbb
pop
pushf
pop
push
pop
xchg
push
cmp
pop
adc
add
jle
pushw
mov
jne
cld
sub
xor
ss
mov
add
je
inc
repnz
pusha
inc
inc
jmp
mov
mov
fstp
pop
add
adc
ds
adc
cmps
dec
shl
cmp
aas
lods
scas
dec
add
fistp
mov
pop
mov
or
gs
sar
inc
mov
jo
aaa
and
jbe
add
mov
(bad)
xchg
xchg
popa
popa
daa
and
xchg
hlt
mov
pusha
add
je
xor
rcl
and
enter
mov
inc
mov
test
push
outs
pop
retf
xchg
and
sub
pop
or
sub
pop
adc
mov
cmc
adc
push
mov
sahf
jle
adc
push
cmp
imul
pop
add
fbstp
mov
sbb
inc
dec
or
daa
mov
jnp
jb
or
jbe
sub
setl
add
sar
cld
aam
pushf
cmp
retf
ret
mov
and
aam
xor
or
dec
mov
add
cld
sbb
cmp
add
rol
mov
adc
in
loope
fbstp
inc
cmps
dec
inc
or
xor
cmps
mov
das
mov
mov
add
xor
xor
xchg
dec
jne
mov
xchg
or
adc
sbb
ss
dec
sbb
fld
xchg
xchg
cs
and
jb
dec
adc
cli
jb
mov
in
xchg
test
push
jb
adc
sbb
lea
(bad)
test
aas
and
test
ins
inc
dec
jmp
xor
adc
ret
cwde
nop
sbb
inc
mov
sbb
scas
and
stc
sub
out
xor
sub
cmp
push
ret
dec
pop
(bad)
xor
lock
ror
call
and
pop
jmp
ss
loopne
sbb
mov
cmp
xor
stos
out
mov
test
jg
repnz
aad
dec
loopne
nop
or
imul
call
xchg
sub
lods
ds
or
xchg
test
dec
jle
or
inc
nop
mov
sbb
xchg
sbb
out
add
clc
or
test
jnp
and
inc
in
pop
mov
mov
push
test
mov
push
dec
dec
pop
lods
mov
push
loop
fdiv
mov
pop
loope
adc
sbb
add
or
mov
ret
adc
fs
(bad)
(bad)
call
inc
sub
pop
aaa
(bad)
sbb
das
lahf
inc
sbb
or
inc
popf
js
and
ins
jg
js
mov
sti
popf
mov
inc
inc
inc
sahf
test
inc
or
pop
xor
ja
pop
ins
inc
sar
movs
and
or
inc
sbb
bound
adc
cmp
(bad)
and
xor
push
mov
xchg
xchg
mov
mov
(bad)
in
push
jp
scas
movs
add
mov
xor
cmps
xor
pushf
mov
mov
sbb
add
adc
xchg
sub
daa
es
pop
dec
fwait
scas
push
or
dec
or
jo
clc
adc
add
cmp
push
inc
mov
inc
loope
cli
add
sub
push
push
jge
and
das
cmp
jle
mov
mul
jmp
pop
mov
inc
inc
jno
push
mov
enter
pop
xchg
fcmove
add
inc
inc
lahf
push
rcl
xor
enter
xlat
repnz
lods
push
inc
adc
or
push
pop
sbb
and
test
or
scas
sbb
and
or
adc
in
mov
xor
pop
(bad)
cld
mov
push
repnz
xor
popa
mov
in
retf
ret
mov
rol
jb
inc
or
frstor
cmp
adc
add
adc
and
mov
dec
dec
push
es
popa
jg
push
adc
sbb
sub
jge
cmp
rol
add
ss
jae
nop
addr16
inc
adc
add
fsub
add
inc
push
dec
fst
inc
push
add
shl
cmp
xor
dec
add
test
mov
pop
and
dec
and
xchg
test
es
ds
sub
dec
stos
push
outs
jl
mov
mov
outs
and
inc
imul
sub
dec
cmc
ds
xor
sub
mov
jns
call
xor
mov
add
mov
jmp
test
cs
lds
es
xchg
movs
lahf
mov
xchg
nop
inc
add
push
lods
xchg
sbb
add
mov
cdq
xor
popa
mov
scas
inc
or
adc
in
inc
fdivr
jmp
pop
mov
cmc
inc
and
adc
rol
aad
jmp
fnstsw
push
fs
sti
inc
push
cwde
pcmpgtd
jnp
xchg
push
push
push
pop
adc
cli
or
sub
shl
push
push
nop
xchg
push
jge
mov
cs
movs
(bad)
cmp
push
jmp
adc
add
inc
imul
imul
lahf
daa
xchg
dec
ins
pop
and
aaa
or
es
(bad)
adc
loope
hlt
add
cdq
test
fdiv
out
add
fchs
mov
repnz
lods
pusha
iret
adc
shl
or
adc
or
mov
clc
adc
push
repz
ds
sub
test
jp
jnp
sbb
sbb
inc
lds
ins
pop
call
call
imul
xor
lds
fsubr
push
jle
add
aad
gs
add
cmp
pusha
xor
aad
inc
(bad)
xchg
mov
out
pop
enter
les
data16
aam
push
xor
enter
scas
or
int3
int3
rol
adc
ins
fcomp
mov
call
pop
shr
aas
(bad)
xor
clc
sub
scas
xor
aam
iret
xor
or
cmp
stc
sbb
sub
inc
int3
xchg
out
adc
test
jae
lods
xchg
clc
and
push
sub
add
in
lock
fdivr
xor
ss
fld
je
adc
sbb
je
inc
jo
xchg
lods
or
loopne
mov
jnp
dec
mov
inc
mov
and
cmp
pop
jmp
loope
xor
push
mov
sar
adc
neg
inc
pop
sbb
jl
in
xchg
fmul
adc
vcvtdq2pd
fsub
loope
shr
xchg
inc
in
inc
sbb
adc
push
icebp
push
cmp
add
dec
test
xor
dec
or
pop
fild
sbb
inc
push
fcom
add
mov
or
adc
xchg
neg
lea
sub
sbb
mov
jge
js
loop
pop
je
xor
ja
push
and
out
inc
adc
imul
ret
and
rcl
inc
adc
jne
adc
je
add
fiadd
fbstp
mov
(bad)
shl
xchg
ret
pop
jge
mov
or
fadd
xchg
cmc
test
xchg
and
imul
jo
lock
psadbw
btr
mov
pushf
movs
fisttp
sub
and
inc
pop
pop
add
fsubr
sbb
push
and
pop
jae
nop
jb
ja
inc
shl
les
xchg
iret
enter
sub
mov
cmp
mov
push
es
xlat
mov
cmp
inc
stos
fmul
cmps
mov
jmp
push
push
out
fmul
sbb
push
lock
in
dec
mov
push
test
lahf
xchg
iret
enter
push
rcr
and
ins
ja
cmp
lods
aaa
(bad)
sub
or
lods
and
ins
push
mov
pushf
arpl
hlt
push
dec
xor
or
dec
daa
jg
rcl
jo
cmp
and
mov
pop
pop
mov
fidiv
push
(bad)
ffreep
fs
dec
pop
push
and
pusha
adc
add
inc
adc
jo
inc
push
enter
jmp
icebp
int3
rol
inc
(bad)
fcomp
push
loopne
aas
out
mov
mov
sbb
popf
lods
aad
js
addr16
or
pop
adc
and
pop
add
adc
nop
fld
mov
inc
adc
and
add
pop
adc
xchg
pop
adc
and
push
pop
cmps
mov
push
adc
ret
(bad)
das
imul
push
dec
jg
ins
popa
jns
sbb
sub
in
aam
push
pusha
pop
sbb
fild
sub
imul
sbb
es
jb
xchg
pop
jo
and
cmp
mov
xlat
mov
adc
addr16
and
inc
popa
fbld
push
leave
add
jb
pop
and
leave
push
daa
sub
and
xchg
sub
pop
and
and
sub
and
and
jne
(bad)
mov
mov
(bad)
add
add
inc
pop
push
push
adc
and
mov
cmp
xlat
inc
iret
add
inc
out
enter
dec
push
and
nop
jno
sbb
push
add
aas
sar
mov
or
jns
xchg
inc
xor
call
ins
je
repnz
add
mov
cmps
test
push
cs
movs
push
test
cld
xchg
test
enter
pushf
fild
inc
add
enter
inc
mov
and
adc
dec
xchg
es
pop
das
mov
jbe
cmp
xor
mov
fsub
sub
jl
add
fist
outs
ins
mov
lods
test
sub
pushf
cmps
dec
fisub
inc
add
inc
icebp
push
and
aaa
adc
xchg
in
lds
xor
inc
push
pop
dec
sub
mov
sbb
pop
loopne
xor
push
repnz
inc
fld
mov
pop
lea
or
jo
add
sub
and
push
sbb
inc
push
fs
fs
sbb
cmp
test
and
test
xchg
or
dec
jbe
pop
fisttp
imul
stc
dec
jne
push
inc
adc
sbb
sub
aam
sahf
and
cli
cmp
outs
je
and
cwde
pop
enter
dec
enter
and
xor
add
add
jge
movs
mov
in
clc
add
mov
mov
in
pop
fstp
cdq
xchg
imul
dec
cwde
add
adc
jecxz
or
or
push
jb
and
sbb
inc
or
mov
gs
cmp
adc
movs
call
daa
ins
sbb
mov
push
in
sub
mov
popa
sub
out
cmc
dec
cs
mov
ja
sbb
adc
loop
cmp
rol
and
aad
add
cs
pop
sbb
pop
enter
int3
fsub
jae
or
popa
xor
and
push
loopne
nop
xor
add
inc
call
nop
or
mov
movs
out
sbb
mov
jmp
(bad)
cmp
mov
sahf
data16
and
pusha
repnz
add
inc
mov
pop
mov
es
or
inc
cli
dec
push
xor
scas
cmp
cs
mov
ds
xchg
lahf
or
pusha
xchg
push
call
sahf
sbb
outs
arpl
dec
lock
rcl
jb
lahf
inc
inc
pop
and
inc
leave
push
xor
daa
inc
inc
adc
xor
add
add
inc
and
adc
dec
dec
pop
and
and
push
pop
and
es
inc
call
dec
dec
dec
fbstp
add
jno
push
pusha
ja
add
sub
push
fisttp
push
in
push
aas
push
sahf
mov
sub
push
push
icebp
test
into
add
inc
sub
adc
mov
push
fsub
imul
test
test
js
and
and
xchg
or
and
or
jns
xchg
fcomp
pop
call
hlt
lahf
sbb
pop
js
and
pusha
push
pop
dec
pop
jg
or
cmp
pop
ins
pop
jmp
jg
movs
pop
mov
or
addr16
push
mov
adc
fdivr
jmp
mov
pusha
adc
push
or
inc
jecxz
(bad)
and
mov
sbb
dec
push
mov
or
pop
test
jp
push
jb
mov
rcl
jno
push
xchg
les
sub
lock
(bad)
call
xor
sub
adc
cmc
inc
mov
movs
ss
mov
xor
cdq
call
mov
sbb
je
dec
push
mov
jle
outs
jb
jne
mov
adc
fidiv
push
adc
stc
(bad)
fwait
cmp
xchg
mov
xor
je
ret
ja
xor
lods
clc
lea
mov
push
jge
cmp
xor
jmp
sub
jle
add
frstor
pop
or
pop
adc
jge
cmp
pop
or
mov
fisubr
jne
mov
aad
xchg
sbb
xor
adc
jo
mov
inc
push
push
pop
lds
into
and
dec
retf
sub
sub
aaa
mov
mov
(bad)
rcl
push
mov
(bad)
dec
ror
pop
cmc
adc
cwde
inc
adc
pop
daa
cmp
mov
ja
push
retf
xor
inc
cmp
enter
sti
mov
add
cs
push
cmp
jne
addr16
sbb
shl
add
inc
pusha
ds
add
and
test
sbb
xchg
mov
rol
and
std
push
std
mov
test
mov
or
push
jnp
inc
dec
stos
std
test
cmp
imul
mov
jmp
ja
outs
popa
sbb
pop
cmp
mov
scas
xchg
test
inc
jmp
adc
punpcklbw
shl
ins
jl
jmp
push
and
stos
jnp
sub
add
push
jecxz
das
adc
cmp
enter
bound
add
popa
nop
dec
mov
push
nop
xor
xlat
mov
sbb
xlat
sbb
sar
imul
mov
mov
in
dec
or
ja
pop
inc
or
dec
fiadd
mov
in
mov
xlat
pushf
pop
jne
pop
xchg
je
push
aaa
xlat
scas
mov
cmp
push
fwait
push
arpl
mov
aad
xchg
int3
aaa
sub
sbb
jg
ja
add
pop
and
movs
sbb
jl
or
cmp
icebp
cmps
fld
sub
jg
xor
pop
mov
inc
dec
jl
adc
jl
mov
xchg
pop
ret
jmp
mov
mov
test
sbb
aam
bound
or
pop
imul
sbb
inc
test
mov
inc
push
and
inc
mov
xor
pop
out
push
add
sub
jae
test
mov
xor
pop
push
arpl
in
push
sbb
xchg
inc
add
add
sub
push
push
add
sub
or
sub
xor
xchg
les
jle
pop
push
mov
push
aam
cmp
scas
rcl
aam
xor
cmp
cwde
sub
leave
xchg
xlat
jg
xor
inc
mov
ret
sbb
sub
sbb
sbb
outs
push
js
dec
push
cdq
push
test
fiadd
sbb
in
mov
aas
lahf
dec
fsub
inc
xor
adc
jl
jae
push
inc
ret
push
sbb
(bad)
fsubr
stos
in
add
test
dec
or
aas
lods
loop
push
inc
add
or
int3
xchg
fcom
fist
push
mov
dec
xor
in
(bad)
and
adc
adc
pop
int
and
xchg
mov
je
ja
or
dec
test
jmp
ror
punpckhwd
add
adc
int
aam
aam
test
mov
fnstsw
jne
dec
enter
loopne
mov
ss
jmp
movs
add
add
push
xor
inc
push
nop
add
lea
pop
dec
and
dec
sbb
mov
xchg
xchg
xchg
test
xchg
jns
mov
mov
and
jg
ds
cmps
inc
fild
mov
sahf
jne
sbb
js
xor
lahf
push
retf
xor
ss
jmp
bound
mov
fimul
retf
add
and
and
dec
push
test
mov
dec
inc
xor
adc
xchg
or
fidivr
adc
cmp
push
sub
stc
scas
push
gs
adc
arpl
hlt
sbb
jno
sbb
sub
inc
cmps
dec
imul
cld
sahf
jle
repnz
clc
adc
rcl
mov
lods
and
xchg
aad
fucomp
mov
ss
call
mov
iret
xchg
movs
cmc
ficom
jmp
rcl
jns
lds
repnz
ins
pop
xchg
jo
pop
xchg
mov
enter
xor
outs
sbb
mov
inc
neg
(bad)
imul
inc
jmp
dec
cmps
push
js
js
pop
xchg
adc
call
hlt
imul
outs
fs
inc
aam
dec
mov
test
dec
sbb
pusha
and
add
push
xor
lods
loopne
push
pop
add
loopne
mov
mov
add
sbb
imul
in
test
cmps
mov
lods
(bad)
push
adc
add
imul
adc
jo
sub
push
rcl
push
pop
das
xlat
sahf
lods
inc
js
int
dec
pushw
jecxz
test
gs
int3
cmp
xchg
ret
pop
add
test
ret
ins
inc
mov
popf
icebp
push
or
pop
repnz
inc
add
jo
sbb
inc
pop
out
popf
and
pusha
push
jne
mov
pop
iret
push
ins
dec
and
sub
mov
jb
xor
pop
jg
(bad)
push
dec
push
or
sub
rcr
dec
arpl
hlt
xor
inc
push
in
icebp
jmp
xor
call
dec
push
push
xchg
sub
xchg
push
mov
dec
xor
mov
in
add
sbb
mov
fwait
mov
mov
mov
movs
xchg
inc
push
xchg
add
add
dec
cld
push
cmp
ja
jg
cld
daa
adc
aas
adc
nop
xor
inc
loopne
clc
push
in
das
dec
loopne
push
add
push
push
inc
sbb
pusha
movs
inc
pop
mov
dec
dec
or
bound
sbb
xchg
out
pop
test
pushf
xchg
adc
mov
jo
je
outs
jb
or
gs
push
cmp
xchg
xor
jo
or
mov
add
and
mov
lock
jnp
xchg
js
pop
pop
push
fs
add
xor
pop
cmp
jmp
inc
shr
jmp
in
dec
outs
mov
or
adc
icebp
add
scas
ja
sub
loop
add
sub
nop
stos
and
add
and
mov
add
fs
adc
mov
mov
adc
inc
mov
or
mov
and
mov
call
mov
or
repz
bnd
loopne
sbb
jmp
out
mov
xor
inc
sbb
pop
and
sbb
test
in
inc
add
out
push
scas
add
jns
les
ins
jmp
mov
iret
add
je
shl
jl
mov
and
mov
adc
or
sbb
sti
aam
push
xchg
lock
and
or
mov
jno
jbe
and
mov
inc
es
in
add
inc
ds
je
out
cmp
or
mov
sub
xchg
and
es
or
(bad)
daa
adc
dec
mov
sub
or
adc
mov
sub
cmps
xchg
test
and
sbb
sbb
mov
cmp
sbb
xor
sbb
cmp
ss
add
sub
daa
mov
add
cmp
adc
and
adc
je
ds
inc
xchg
fadd
div
lods
push
or
shr
cmps
(bad)
mov
aad
push
jmp
scas
adc
or
dec
mov
add
popa
imul
ins
jle
enter
shr
loope
or
inc
test
loop
inc
aas
mov
push
(bad)
loope
sar
or
dec
mov
cmps
add
dec
sbb
ja
push
jno
inc
xchg
cwde
mov
ja
mov
adc
sbb
push
scas
pop
pop
mov
rcr
mov
in
xor
lods
push
adc
inc
cmp
in
fcomp
xchg
movs
sbb
or
xchg
or
popa
cmp
jmp
fs
(bad)
add
mov
dec
add
jne
stos
mov
sbb
xor
and
mov
jp
pop
bound
add
fs
pop
jmp
and
test
sub
jae
sub
pop
imul
mov
(bad)
(bad)
push
push
fs
add
in
or
je
or
add
or
mov
add
mov
ret
mov
fbld
test
nop
mov
ret
popa
mov
loope
dec
inc
sbb
xor
adc
jp
pushf
mov
sub
jl
or
fst
sub
daa
adc
mov
pop
add
and
ret
mov
dec
es
add
enter
or
push
lahf
add
sub
inc
test
mov
dec
out
cmp
jle
cmp
jmp
add
pop
jne
sbb
adc
mov
sbb
icebp
fidiv
mov
inc
inc
stos
fld
movs
les
add
sub
shl
int
mov
push
leave
and
pop
retf
push
mov
adc
push
add
mov
xor
mov
sub
mov
jmp
(bad)
jne
sbb
or
xor
adc
pop
dec
sbb
imul
ins
iret
cmp
pop
dec
jnp
jns
push
add
js
leave
dec
or
js
jns
pop
xor
sub
xor
add
xchg
sbb
mov
add
dec
lock
dec
or
fisubr
sbb
adc
add
pop
test
ins
or
enter
or
xchg
xchg
nop
cmp
cmps
inc
mov
push
push
or
cmps
inc
xchg
(bad)
xor
mov
fiadd
jns
ret
pusha
dec
sub
inc
inc
jb
nop
mov
pop
ret
in
sub
out
lahf
imul
cld
in
xor
retf
dec
or
mov
pop
adc
sub
cmp
inc
(bad)
icebp
inc
push
test
mov
and
adc
stc
sub
test
mov
mov
sub
imul
pop
or
add
add
push
jns
pop
dec
jmp
sub
mov
into
jno
cmps
inc
xor
pop
test
dec
xchg
nop
mov
and
nop
nop
sti
mov
aas
out
loop
mov
mov
adc
cmp
bound
dec
cwde
repz
jmp
push
ins
pop
inc
enter
cmc
inc
cmp
repz
push
fcomip
out
not
les
mov
icebp
mov
ficomp
xchg
out
inc
out
push
mov
neg
and
outs
outs
or
imul
outs
pop
ja
sub
sti
xor
mov
jae
in
inc
mov
pop
js
or
rcr
pusha
dec
sub
ds
dec
ret
clc
stc
or
loope
dec
pop
aad
pop
enter
jae
inc
push
push
add
sub
inc
adc
ins
test
dec
std
mov
add
je
test
aaa
test
loope
xor
push
push
or
xchg
pop
pop
out
dec
loopne
pop
test
pusha
hlt
mov
push
cmp
push
jmp
dec
lock
sbb
or
inc
movs
int3
pop
mov
fimul
pop
in
jmp
or
adc
shr
(bad)
adc
lahf
mov
js
ja
dec
xchg
add
fisub
xor
mov
mov
xchg
fistp
cmp
fimul
inc
or
xor
inc
pop
ret
or
inc
sub
sbb
cmp
imul
test
dec
pop
xor
loope
or
inc
arpl
in
pop
pusha
sbb
jo
xchg
mov
out
and
pop
rol
inc
loop
pop
jg
sbb
and
(bad)
xor
aaa
lock
xor
jne
or
xchg
test
jp
movs
clc
mov
rol
scas
nop
mov
inc
jmp
push
cwde
mov
xor
inc
xlat
dec
inc
push
test
fist
pop
shr
push
xchg
mov
xchg
out
or
repnz
add
push
scas
inc
fwait
imul
aaa
cmp
mov
dec
add
and
sub
pop
jnp
ins
aaa
add
cdq
dec
je
push
mov
jns
dec
add
dec
movs
inc
and
pop
inc
pop
push
push
pop
sbb
shl
or
lock
add
arpl
pop
lea
xlat
inc
mov
fmul
sar
jne
sbb
daa
push
shl
push
call
inc
movs
(bad)
addr16
dec
fimul
pusha
push
out
movs
loope
inc
or
mov
cmps
or
fs
sbb
or
inc
adc
loope
aas
jg
sub
and
sub
aad
fsub
mov
cs
jl
cmps
adc
hlt
adc
jo
test
daa
iret
enter
or
push
mov
jp
cmp
iret
enter
ja
push
dec
sahf
xchg
jne
mov
mov
enter
ins
jnp
jae
cmp
in
cmp
cmp
mov
xchg
mov
adc
sub
cmp
or
cmp
fnstenv
nop
inc
jmp
or
cli
jbe
loope
sbb
pop
sbb
sar
jo
add
inc
and
adc
inc
in
push
inc
add
and
leave
aas
aam
inc
add
push
mov
push
lods
sbb
inc
adc
sbb
in
xor
sbb
push
dec
add
cmp
outs
loope
rol
rol
inc
sub
mov
or
mov
pusha
addr16
xor
push
xor
dec
fstp
xor
add
pop
cmps
int3
jg
pop
ror
pop
cdq
movs
xor
clc
enter
fisttp
add
add
mov
aas
add
push
nop
retf
movs
xor
pop
cmp
dec
gs
add
nop
fdiv
sub
sbb
in
sub
sub
pushf
xor
sbb
xchg
pop
jne
mov
ja
inc
sub
xchg
out
mov
pop
push
mov
mov
sub
or
push
push
mov
lods
adc
pop
inc
aam
push
mov
xor
push
mov
push
addr16
add
and
pop
lea
movs
dec
jae
ret
mov
push
cmps
das
cmp
dec
(bad)
movs
inc
lods
jmp
jecxz
and
dec
adc
inc
push
adc
repnz
outs
jne
xchg
test
add
imul
outs
cwde
jno
xor
ins
bound
pop
or
or
popa
jb
add
or
ja
jle
adc
add
imul
push
test
xchg
ret
pop
push
bound
popa
and
or
push
mov
add
mov
adc
xchg
int3
fsubr
add
inc
fsub
add
inc
push
cs
fldenv
and
add
ins
and
int
mov
aam
and
(bad)
sbb
js
arpl
out
pusha
mov
mov
pop
lock
mov
pushf
add
test
xor
add
xchg
inc
adc
mov
cmp
shr
cs
or
(bad)
adc
std
mov
(bad)
inc
ins
popa
addr16
or
pop
inc
out
das
or
or
popa
ins
aaa
lds
push
(bad)
ftst
pusha
dec
or
call
inc
outs
dec
add
push
inc
movs
push
cmp
sbb
call
out
and
ss
in
add
iret
jnp
(bad)
mov
and
push
mov
add
out
out
and
js
fs
cmp
mov
push
(bad)
in
scas
mov
mov
lahf
cld
push
add
adc
inc
push
mov
and
mov
fcom
ins
and
les
inc
aaa
xor
ins
fstp
push
push
push
call
mov
xor
hlt
fmul
push
pop
addr16
loopne
aad
and
inc
jnp
imul
push
jmp
call
in
imul
loop
jbe
jmp
pop
adc
xchg
test
push
inc
adc
fwait
out
sub
sar
mov
out
xchg
div
inc
pop
imul
in
stc
je
cmp
fild
fs
inc
out
or
mov
push
sub
push
or
fild
cmp
dec
add
jecxz
sar
adc
or
inc
dec
fadd
or
lods
push
or
mov
punpckhwd
xlat
ss
or
es
dec
or
push
xlat
xor
test
ins
xchg
push
or
adc
sub
pop
xor
cmps
push
lods
test
jge
in
lea
arpl
sbb
cmp
in
jns
loop
hlt
adc
les
loopne
mov
popf
shl
push
popa
cmp
or
das
or
fs
sbb
nop
mov
in
xchg
mov
lea
inc
repnz
dec
sahf
mov
je
xchg
cmp
add
ret
inc
lds
pop
xor
mov
cwde
cwde
push
add
iret
mov
xor
cwde
mov
mov
dec
add
cmp
pop
inc
and
scas
or
xor
xlat
jbe
nop
das
test
inc
pushf
ins
pop
cmp
mov
inc
cld
pusha
out
test
mov
pusha
adc
push
ficom
jmp
cs
ds
cwde
jl
shl
loopne
fs
stc
xor
sbb
cmp
mov
lods
lock
or
xchg
cmps
or
sub
cld
lock
mov
inc
jae
les
bound
cmp
and
jle
sub
jmp
adc
call
inc
inc
dec
cld
or
fst
sub
add
daa
or
mov
xor
mov
or
pop
imul
ins
sar
es
mov
or
int3
test
popa
inc
inc
sub
cmps
cmp
jo
nop
or
lahf
pop
inc
push
or
and
test
pop
andps
lea
rcl
in
shl
pop
jo
int
popa
(bad)
adc
fidivr
push
cmp
ret
ffree
xor
je
fnstenv
jnp
xor
jg
mov
fiadd
push
imul
in
push
xchg
mov
popa
mov
adc
inc
or
xchg
fstp
adc
sub
sbb
int
ins
into
push
push
add
(bad)
or
or
and
jp
inc
dec
inc
out
test
push
jle
push
or
or
inc
xor
sub
pusha
jle
mov
adc
cmp
or
add
or
popa
push
cmp
les
pop
test
in
jo
div
les
jns
push
push
cwde
push
test
nop
sti
aad
mov
fld
call
and
pop
enter
jo
jo
or
(bad)
inc
xchg
dec
ja
lea
ja
ds
pop
push
or
pop
sbb
add
call
dec
adc
add
idiv
cwde
and
xchg
push
mov
les
sbb
add
and
lds
inc
imul
add
mov
xor
inc
or
inc
das
mov
dec
fild
pop
fld
fwait
push
push
ins
ror
rcl
or
pop
push
xchg
ret
cmp
sbb
jb
fld
push
mov
mov
inc
xor
ja
in
popa
and
and
xor
or
adc
jg
test
or
push
adc
inc
test
sahf
jb
enter
and
dec
and
shl
pushf
je
cmp
iret
and
inc
add
inc
lea
xchg
das
(bad)
lods
push
xor
mov
test
shl
mov
sub
je
sub
stos
mov
sbb
and
and
jo
cmp
inc
fistp
clc
sub
mov
dec
cdq
pop
push
test
sub
or
or
fild
mov
inc
jge
shr
not
or
scas
fistp
mov
xchg
dec
or
test
enter
xchg
sub
dec
mov
and
jnp
ret
add
cmp
jp
or
or
dec
inc
dec
dec
push
and
ins
movs
sbb
lods
jmp
inc
inc
cmp
call
pop
cmp
pop
and
clc
inc
mov
retf
retf
push
push
ror
aas
dec
and
push
pusha
push
jo
push
xchg
daa
inc
es
push
fs
add
popf
mov
in
sbb
pop
inc
cli
out
popa
sub
inc
idiv
jbe
inc
loop
add
loopne
mov
or
jmp
inc
xchg
push
pop
push
dec
outs
xchg
mov
adc
sub
ins
pop
inc
aaa
mov
pop
mov
mov
jecxz
in
dec
jno
scas
adc
push
cmps
clc
sub
and
test
mov
add
syscall
add
call
and
out
adc
int
imul
mov
dec
ins
shl
sub
leave
lods
fwait
ret
mov
rcl
and
push
pop
and
xor
xor
mov
lods
mov
mov
test
jne
jne
(bad)
jmp
cwde
push
add
xchg
pop
ret
cmp
adc
mov
xor
stos
or
lock
mov
push
mov
xor
and
xor
xor
hlt
lods
add
dec
loope
inc
adc
jl
inc
rcl
sbb
xor
cmp
fistp
call
and
adc
xor
and
add
inc
cld
jne
movs
icebp
mov
arpl
add
dec
sbb
mov
sar
fs
ins
popa
xor
jmp
adc
add
or
aad
adc
sbb
add
push
jmp
les
and
mov
lock
add
jne
jle
aaa
mov
xchg
(bad)
cmp
push
out
pusha
dec
or
xlat
cmp
xor
jmp
in
inc
cmp
ins
outs
aaa
add
pop
rcr
test
cmp
cmp
fist
imul
cmp
adc
adc
push
pushf
jbe
dec
or
adc
mov
les
add
sub
cdq
test
mov
sbb
or
dec
dec
in
or
mov
xchg
into
rol
push
inc
xor
outs
sub
sbb
push
ins
sbb
inc
imul
outs
pop
pop
les
leave
in
xor
leave
out
test
pop
cmp
nop
gs
sahf
inc
pop
adc
jl
mov
rcl
add
add
cmp
jl
fcomp
sbb
xchg
jle
cmp
fild
lock
xor
aam
inc
cmp
ss
sub
imul
and
push
lock
inc
cmp
add
rcl
or
je
mov
jmp
cmp
jb
sbb
(bad)
pusha
add
addr16
cmp
jg
aas
sbb
sub
shl
jle
mov
push
aaa
cmp
test
fcom
push
enter
xchg
pop
in
cmp
push
add
dec
jg
xchg
out
xchg
rcl
movs
call
add
jmp
movs
mov
add
add
adc
cmp
add
imul
repz
je
pop
daa
and
(bad)
and
rol
push
xor
pusha
test
(bad)
sbb
push
jmp
js
push
rcr
mul
dec
jg
cmp
fild
push
xchg
sub
pusha
lea
gs
inc
mov
jb
je
inc
dec
dec
pop
lods
mov
shr
mov
xor
ss
pop
(bad)
aas
mov
mov
not
ins
push
push
bound
push
clc
cmp
jns
add
mov
shl
or
adc
jmp
push
add
inc
mov
jne
movs
pusha
(bad)
aam
sbb
adc
mov
xchg
dec
fadd
ins
and
ins
fcom
mov
add
pop
cdq
and
dec
inc
mov
dec
and
les
push
es
jae
sub
xor
ins
jns
shl
sub
les
add
dec
mov
dec
adc
pop
xor
push
or
das
add
sub
out
push
cmp
stc
add
sub
es
dec
pushf
or
aas
add
inc
mov
or
or
xor
cmps
iret
mov
mov
shl
imul
sbb
mov
push
jecxz
cmp
adc
lea
push
or
pop
mov
repz
fs
sbb
jns
aaa
bnd
xor
inc
cmp
push
lock
sahf
dec
shl
fst
or
fcomp
dec
inc
cmp
in
inc
rcl
jmp
scas
add
test
sahf
fnstenv
adc
xor
inc
fsub
sub
fadd
mov
movs
add
or
push
in
xor
add
loope
push
inc
mov
mov
push
pop
outs
inc
sub
mov
xor
rol
push
xchg
sbb
dec
mov
mov
pop
and
push
xchg
push
dec
mov
dec
inc
pop
or
pusha
add
jo
test
sbb
xchg
cmp
mov
adc
pop
inc
fwait
dec
mov
popf
(bad)
pusha
add
sub
enter
sub
pop
jo
daa
xor
push
aad
and
fs
leave
stos
add
xor
add
sbb
and
or
add
lgs
fdiv
sti
or
call
mov
jecxz
xchg
xor
shl
test
pop
jnp
jge
scas
mov
outs
inc
test
add
test
adc
mov
lods
adc
iretw
out
pop
and
and
mov
sub
aam
push
inc
paddsb
xor
mov
int3
and
sub
xchg
in
cmp
ins
gs
iret
or
or
pushf
jne
sti
clc
mov
sahf
dec
push
pushf
or
cmp
dec
inc
sar
sbb
jmp
sub
sub
jge
aad
adc
out
add
jae
mov
mov
bound
sbb
hlt
or
mov
cmp
popa
test
jae
xchg
out
ror
or
sbb
sub
fisttp
jp
aas
scas
ins
loopne
adc
pop
enter
mov
aas
add
iret
test
jb
inc
mov
retf
add
sub
in
das
xor
adc
and
movs
sbb
and
ds
aam
ret
sbb
(bad)
inc
jmp
call
add
aad
dec
rol
and
add
pop
push
xchg
rcl
test
je
xor
mov
push
in
push
jne
inc
pusha
and
and
cmp
sbb
pusha
pop
sub
sub
add
imul
add
add
adc
push
hlt
ret
cmp
clc
mov
(bad)
fnstenv
jle
je
js
jbe
cld
cmp
or
bound
add
cmp
loope
shl
mov
in
push
mov
adc
out
mov
out
pop
or
lock
push
sbb
mov
or
mov
xchg
adc
outs
sub
and
inc
dec
mov
mov
cmp
inc
xchg
lock
inc
dec
je
pop
xchg
add
adc
push
xchg
push
nop
daa
test
mov
or
xchg
mov
jnp
inc
cmp
lods
dec
les
adc
adc
shl
inc
mov
push
test
pop
cwde
es
lds
stos
test
ss
pop
mov
add
xchg
mov
js
dec
ret
pop
sub
(bad)
cmp
rcl
sub
mov
mov
dec
(bad)
aad
es
(bad)
adc
add
nop
pop
das
movs
add
dec
(bad)
or
lock
xor
mov
xchg
inc
cmp
aaa
xor
jp
mul
adc
je
iret
fmul
mov
sbb
push
mov
mov
sub
imul
mov
imul
popa
or
adc
push
(bad)
sub
cwde
in
add
ret
inc
mov
in
jbe
test
add
push
into
outs
iret
push
mov
cmp
lea
(bad)
xchg
xor
call
enter
mov
adc
scas
add
xor
jbe
cmp
das
add
xlat
aas
aam
aam
lsl
adc
add
js
pop
in
push
div
jmp
dec
or
inc
or
cmp
fs
push
repnz
add
jbe
lea
jne
repnz
mov
add
xchg
push
stos
aam
cmp
xor
dec
test
inc
in
xor
jle
xchg
scas
dec
sub
repnz
call
mov
popa
call
in
sub
loopne
fild
push
into
sub
ds
add
adc
nop
mov
adc
enter
xchg
add
fiadd
or
add
cmp
adc
imul
ficom
fmul
jmp
and
sub
lods
add
mov
bts
add
mov
ror
pop
fld
or
sub
jo
pop
(bad)
cmps
les
push
pop
jb
mov
and
push
test
(bad)
cmp
push
cmp
jle
aam
sub
enter
xor
out
push
pop
xor
push
dec
add
mov
mov
into
lods
into
movs
gs
or
pop
jne
push
outs
sbb
fistp
out
jnp
imul
cwde
push
push
in
mov
cmp
xor
sub
push
lds
int
inc
cmp
sbb
dec
call
cmp
enter
xor
push
add
sub
arpl
imul
sbb
mov
add
inc
add
adc
aad
or
movs
mov
inc
or
test
loopne
call
popa
push
cmp
shr
sahf
faddp
xchg
sar
xchg
not
sub
adc
jge
sbb
cmps
mov
add
aaa
rcr
mov
jp
mov
dec
rcr
pushf
pushf
aaa
loopne
call
lea
inc
mov
int
push
pop
loopne
add
or
push
sbb
add
add
aad
lds
or
push
push
push
and
mov
cmp
sbb
or
adc
mov
repnz
lds
out
jmp
push
retf
or
outs
jmp
dec
stos
add
sub
pop
add
adc
push
push
stos
add
rcl
pop
iret
dec
push
cmc
js
fdivr
adc
imul
mov
add
dec
or
add
js
add
ss
jg
push
std
enter
int3
iret
or
push
mov
adc
xchg
adc
in
ret
xlat
jbe
xadd
dec
mov
sar
div
mov
leave
sbb
sub
inc
xchg
(bad)
outs
scas
add
push
fcmovbe
loope
pop
fwait
ret
sbb
push
mov
pop
sub
paddb
test
test
add
mov
and
mov
sti
das
test
clc
paddusw
mov
cmps
jecxz
lods
rol
pop
dec
pop
add
sbb
psubq
push
repnz
cs
inc
mov
or
ret
lods
test
movs
inc
mov
push
in
fidivr
mov
fadd
mov
adc
ins
ins
mov
dec
sbb
test
dec
aas
adc
movs
mov
sub
dec
sbb
mov
sbb
jg
cmp
shr
push
adc
xor
inc
pop
dec
xchg
xchg
out
loopne
hlt
in
fwait
and
rcr
out
(bad)
outs
and
inc
and
xor
daa
cld
pop
cmp
sti
adc
add
mov
push
jo
fcom
and
xchg
and
push
ss
and
es
mov
add
and
sub
inc
inc
xor
sbb
jnp
call
loope
and
push
and
lock
sbb
push
xchg
shl
sub
or
lds
xor
xchg
jns
xchg
add
inc
cmp
test
pop
mov
pop
dec
mov
loopne
and
push
mov
loope
jo
mov
push
inc
loopne
in
sub
jo
pop
imul
ret
and
pop
push
push
cmp
jle
ins
adc
adc
xor
mov
stos
pop
fldcw
fld
lods
dec
inc
push
add
jl
xor
pushf
mov
sbb
rcl
push
jg
scas
nop
or
in
(bad)
xchg
cld
test
cmp
(bad)
inc
push
xor
pop
loopne
rcl
inc
fiadd
aas
mov
push
pushw
add
xor
or
or
mov
push
xchg
mov
push
loopne
dec
cmp
sub
inc
sub
inc
pop
sbb
mov
imul
outs
iret
cmp
bound
iret
in
pop
and
push
sbb
in
mov
add
int
loopne
imul
scas
cmps
mov
call
xor
dec
outs
sbb
add
mov
xor
leave
loopne
in
loopne
in
dec
add
arpl
rol
mov
pand
popf
data16
or
loopne
push
lods
adc
mov
shl
aad
lock
adc
mov
mov
adc
adc
gs
push
bound
inc
lock
mov
sbb
add
and
pop
xor
jge
leave
leave
adc
or
and
add
clc
sbb
sbb
das
jo
in
lock
push
in
test
or
adc
sub
pop
test
fisttp
jp
xchg
xor
aaa
dec
push
hlt
imul
and
fadd
popa
push
mov
mov
popa
mov
xchg
xor
jne
test
add
or
clc
out
in
jae
xchg
in
sahf
sbb
loope
sbb
jne
dec
mov
(bad)
stc
add
test
inc
sbb
daa
pop
adc
sbb
sbb
das
setae
dec
in
dec
call
xchg
xchg
xor
rcl
sub
xchg
sub
sub
das
mov
nop
lods
call
inc
loopne
sub
nop
aaa
and
nop
sbb
dec
call
nop
inc
xor
sub
sub
aas
dec
or
xor
ret
arpl
dec
pop
push
cmp
ins
add
in
dec
mov
test
clc
push
bound
stos
in
cmp
push
sub
mov
xor
sbb
leave
inc
push
and
inc
pop
pop
int
pop
or
div
jg
add
add
adc
adc
mov
push
mov
add
inc
movs
jns
adc
repnz
loope
dec
mov
int
jg
adc
test
adc
xor
sub
inc
idiv
stos
js
and
cmp
inc
(bad)
push
test
call
inc
jnp
xor
(bad)
ins
shl
pop
inc
cmp
sbb
pop
pop
or
cmc
fsub
ret
push
dec
inc
jle
add
xlat
inc
xchg
fsubr
adc
data16
pop
jp
fwait
push
aas
add
lds
or
outs
ror
sbb
jmp
xor
jg
test
test
gs
and
or
call
add
pop
jmp
aas
adc
xchg
add
popa
fiadd
imul
add
pusha
add
jp
mov
xchg
test
loope
js
or
inc
je
test
and
add
mov
mov
loope
pop
pop
out
sub
or
(bad)
xor
call
adc
test
in
and
sar
adc
pop
sub
add
add
dec
adc
sar
scas
push
(bad)
and
add
hlt
jle
xor
xor
sbb
lahf
mov
pop
retf
mov
mov
add
cmp
or
push
lock
call
pop
or
cdq
popa
sbb
cmp
hlt
add
test
loope
adc
call
mov
add
and
xchg
cmps
sbb
in
inc
sub
and
push
or
sub
push
and
or
imul
pcmpgtb
dec
fs
adc
setnp
fiadd
sbb
mov
jmp
(bad)
fwait
daa
daa
pop
dec
dec
fcom
fcom
jb
fcom
xor
fwait
cli
bound
mov
lea
cli
push
mov
retf
neg
add
cs
daa
loope
lods
inc
ret
xchg
dec
adc
add
loopne
outs
stc
int3
outs
sub
jb
loopne
(bad)
rcl
enter
push
cmp
out
clc
lock
aas
sub
fmul
cmp
dec
jl
(bad)
les
xchg
pop
lock
retf
and
call
sbb
or
pop
addr16
into
mov
out
push
addr16
(bad)
outs
loop
xchg
ja
mov
dec
add
(bad)
cmps
fisttp
jae
cdq
pop
pop
rcl
and
cmp
imul
adc
(bad)
xlat
mov
mov
jno
loopne
pop
pop
add
iret
jg
stos
jne
mov
sbb
cmp
(bad)
pop
mov
dec
arpl
adc
cmp
dec
stos
sahf
(bad)
mov
pop
gs
retf
cmp
sbb
popa
mov
push
sub
test
and
jno
jl
mov
fsub
mov
int
sub
xlat
ret
and
sbb
les
les
fmul
adc
mov
mov
jnp
cmp
test
sahf
ror
ret
add
loope
push
imul
scas
dec
xor
mov
sar
and
mov
mov
sbb
std
test
mov
or
sar
inc
adc
inc
arpl
lea
loop
mov
xor
dec
xchg
sbb
sub
sub
adc
das
jp
add
and
addr16
push
cmp
mov
xadd
pop
shr
inc
xor
or
xchg
fsub
and
lea
add
popa
adc
call
icebp
inc
xor
in
(bad)
hlt
cmps
xor
imul
fstp
inc
clc
ins
sub
adc
(bad)
or
add
adc
out
dec
(bad)
in
fucomi
cmp
adc
push
or
inc
ret
adc
inc
and
fadd
xchg
pop
push
(bad)
adc
sbb
sub
scas
xor
xlat
pop
pop
sub
fwait
push
inc
stos
sahf
pop
cmp
mov
push
fmul
ret
outs
out
cmp
shr
cmp
adc
je
outs
bound
rol
ret
mov
lock
dec
xor
or
icebp
sub
(bad)
jg
sub
sbb
mov
lea
sbb
(bad)
xchg
jno
push
xor
rcl
aam
xchg
iret
xor
add
mov
call
sbb
(bad)
lea
retf
sub
dec
pop
pop
call
add
ret
clc
cmp
je
js
push
sti
inc
(bad)
ror
pusha
jne
inc
retf
mov
les
pusha
fisttp
pop
fmul
adc
mov
mov
addr16
xchg
add
xchg
cli
(bad)
jle
mov
ss
lods
jnp
and
inc
jp
add
lds
xchg
xchg
pusha
aad
pop
jnp
sub
and
push
dec
nop
dec
cmp
mov
push
add
xor
inc
daa
adc
pop
pusha
inc
leave
and
sub
(bad)
push
inc
jg
xchg
dec
lods
pop
or
dec
adc
pop
push
jo
or
mov
pop
daa
arpl
retf
fisttp
cmps
mov
icebp
xchg
aaa
cmps
xor
cmp
xor
pop
mov
cmps
lods
pop
cmp
lds
mov
cmp
dec
les
or
repnz
adc
xchg
(bad)
jo
fimul
ret
leave
and
or
adc
xor
test
ss
inc
cmps
sbb
push
arpl
pushf
jo
jecxz
push
or
sub
push
and
dec
into
adc
mov
dec
repnz
push
fs
aas
mov
and
xor
or
inc
inc
mov
mov
in
mov
retf
push
fcomi
js
test
xchg
or
push
inc
pop
mov
unpcklps
sbb
jp
pop
or
stos
pop
js
(bad)
loopne
lea
add
add
adc
nop
xor
pop
add
rcr
jbe
or
push
(bad)
pusha
dec
(bad)
xchg
cli
call
mov
inc
jmp
mov
(bad)
or
mov
push
adc
(bad)
adc
aam
dec
js
test
rcl
mov
cmp
mov
adc
or
or
push
adc
xlat
aad
ja
jmp
pusha
sbb
add
ins
add
ins
ret
out
and
pop
mov
inc
popa
ds
ins
or
xor
jne
(bad)
cmp
fnstsw
pop
fsub
jne
ja
out
sub
xor
cmp
je
mov
push
sub
ret
test
or
cmp
lock
mov
fld
call
and
sahf
xor
and
or
imul
inc
xor
rol
push
retf
pop
push
push
jb
inc
push
mov
(bad)
or
rcr
or
mov
cdq
sub
sbb
int3
xchg
test
pushf
jp
stc
popf
mov
add
mov
xchg
test
add
adc
(bad)
pop
sub
jmp
and
cmp
leave
scas
(bad)
dec
enter
das
inc
and
sbb
and
leave
inc
jb
cmp
xchg
pop
and
cmp
or
inc
jb
or
bound
push
fild
add
jnp
or
inc
or
push
int
sti
jge
push
push
daa
or
adc
xor
cld
jnp
or
push
inc
mov
(bad)
icebp
xor
mov
mov
inc
push
jno
xor
or
inc
ror
(bad)
std
cld
jmp
cmp
pop
inc
test
push
fs
pop
movs
sub
xor
js
add
jge
xchg
scas
std
sub
lock
mov
adc
sub
(bad)
js
inc
sbb
adc
icebp
fidivr
push
rol
popf
call
or
std
push
push
(bad)
and
push
and
inc
enter
or
ss
loop
cmps
je
and
inc
pusha
aaa
xor
sub
push
inc
stos
mov
fiadd
ret
adc
push
inc
in
jo
pushf
bound
inc
inc
sub
inc
fisub
aad
sbb
xor
shr
jno
jge
stos
cmp
jno
into
xchg
(bad)
adc
xor
in
arpl
adc
adc
leave
js
pop
xor
xchg
(bad)
jle
sub
fst
cmp
stos
push
test
nop
(bad)
mov
add
repz
jne
mov
push
into
stos
add
movs
pop
xor
fild
pop
mov
movs
pop
sub
xchg
add
mov
jp
and
add
jne
push
sti
push
sbb
and
aaa
inc
and
mov
dec
inc
add
sbb
push
mov
mov
fstp
int
inc
in
jbe
push
or
inc
es
mov
xchg
mov
xchg
push
je
inc
push
fcmovb
ficomp
mov
sbb
popf
mov
hlt
or
aam
pushf
sub
cli
call
test
call
pop
mov
or
pop
inc
xor
in
cmp
adc
clc
stc
push
retf
cwde
adc
add
jbe
pop
jecxz
int
jmp
or
clc
pop
int3
or
repz
xor
sbb
outs
dec
les
inc
push
xchg
and
pop
and
push
popa
dec
xor
aam
jmp
das
push
xchg
jno
cmp
xchg
es
rcr
inc
sub
mov
mov
sti
shl
out
shr
or
sbb
pop
iret
(bad)
cmp
dec
sub
ss
bound
jecxz
xor
repnz
pop
xchg
ds
fsubr
in
(bad)
push
rol
xlat
shl
mov
in
out
mov
iret
aam
pushf
dec
icebp
xor
or
add
push
jb
ret
jmp
mov
or
je
call
mov
gs
ins
mov
mov
je
mov
(bad)
mov
mov
loopne
sbb
mov
sub
mov
and
ss
das
movs
cdq
xchg
sahf
dec
jmp
cs
jmp
ror
push
or
test
pop
pop
and
or
sub
popa
jmp
or
std
test
push
jns
aam
(bad)
std
jae
add
rcl
jns
xor
imul
neg
xchg
pop
fcomi
add
clc
cs
arpl
mov
xor
jne
fdivr
call
mov
in
sbb
mov
push
mov
stos
scas
sub
pop
aad
add
mov
repz
sbb
loop
adc
aas
stos
jle
daa
ins
and
aam
mov
sahf
pop
mov
push
(bad)
sbb
push
mov
push
lods
(bad)
add
cmp
xchg
aaa
leave
scas
pop
sbb
inc
pop
push
mov
test
cpuid
mov
add
pushf
pushf
push
cld
ss
mov
sub
not
sbb
xor
das
xchg
or
sub
rol
jp
xchg
fsubr
(bad)
pushf
sbb
arpl
sbb
mov
fs
lea
inc
cmp
push
cmp
data16
adc
shr
sbb
add
xor
sub
mov
fsub
cmp
jle
aaa
dec
and
and
adc
nop
fild
push
adc
(bad)
cmp
cmp
ret
dec
cmp
nop
adc
inc
pusha
pop
popf
cdq
add
rol
xchg
jl
xchg
pop
cmp
mov
push
outs
std
inc
mov
mov
add
lods
ins
mov
xchg
push
cmp
mov
(bad)
in
mov
push
rcr
mov
iret
sub
mov
aaa
ss
js
popa
add
mov
cwde
mov
jne
adc
pop
inc
scas
xchg
push
pop
pop
jo
inc
add
mov
sbb
inc
jecxz
push
inc
stc
fistp
or
stos
mov
xchg
(bad)
push
iret
xchg
mov
iret
das
or
jp
popa
inc
mov
and
cs
inc
cmp
aas
pop
add
pop
inc
push
sar
pushf
lods
xor
sbb
scas
aaa
lock
aas
xor
push
xchg
mov
mov
int3
fbld
outs
dec
mov
sbb
out
inc
adc
mov
loop
xchg
shr
(bad)
mov
mov
and
add
jmp
or
mov
fisttp
fadd
fsubp
cmp
and
stos
fisub
cld
mov
rol
test
popa
psraw
mov
xor
mov
cmps
and
lods
pusha
daa
dec
add
mov
add
clc
rcr
nop
and
sub
mov
dec
and
inc
or
sbb
push
and
jp
js
xor
and
adc
and
xchg
ret
int3
jne
cmp
not
aam
xor
ins
add
sbb
adc
test
jmp
mov
adc
add
sub
das
ret
(bad)
test
xor
jo
sahf
js
push
or
xor
pusha
and
loopne
bound
jno
mov
jnp
cdq
pop
add
mov
aam
fdivr
fsub
dec
fcomp
jno
rcr
pop
add
fcom
jno
jnp
mov
xchg
mov
xchg
and
push
adc
push
sar
sar
lock
loopne
push
psubusb
enter
gs
or
mov
inc
ret
lods
test
cmp
arpl
push
push
mov
adc
adc
inc
add
and
lds
adc
dec
xchg
cmp
bound
popa
movs
jnp
jnp
dec
adc
jne
inc
rol
xchg
and
cs
xchg
cmp
arpl
mov
add
cdq
cmp
add
push
and
adc
sbb
jl
je
cwde
push
push
ja
jo
ret
cmp
lock
dec
add
cmp
fcom
sbb
cs
popf
es
or
inc
dec
fistp
jbe
and
retf
and
jp
mov
aam
lods
jle
ins
hlt
push
inc
in
mov
inc
shr
and
(bad)
enter
dec
push
or
adc
mov
add
mov
add
jo
cmp
cli
arpl
movs
push
jg
push
cli
cmpxchg
xlat
int
jmp
inc
pop
add
mov
jge
push
cld
mov
imul
xor
xor
xor
push
imul
call
shl
inc
xchg
add
push
jo
dec
sbb
je
pusha
inc
pop
mov
jbe
adc
sub
test
inc
xor
mov
lods
into
in
(bad)
fisttp
push
xchg
shr
push
lods
data16
xor
sbb
in
repnz
dec
popa
stos
add
test
aaa
imul
add
cmp
dec
sbb
and
dec
push
or
pusha
lds
jbe
imul
push
push
push
adc
add
add
ds
cs
push
or
push
test
mov
or
cmp
fdiv
xchg
xor
or
and
adc
test
lods
daa
jg
mov
pop
mov
sub
mov
mov
pop
push
add
push
xchg
or
int3
push
popa
or
imul
enter
cmp
jne
push
or
inc
ins
inc
inc
aad
add
adc
push
call
rol
xor
pushf
movs
add
cmp
addr16
push
or
loop
fiadd
jmp
cmp
jmp
sbb
jp
mov
idiv
imul
pop
pop
push
aam
jne
stos
ret
test
sub
and
dec
sub
inc
jmp
neg
adc
rol
repnz
sbb
push
ds
xchg
xchg
add
inc
add
inc
xlat
inc
pop
sbb
inc
cmp
jge
add
pop
jb
jl
scas
cld
sti
mov
sbb
test
sti
xor
cld
push
sbb
or
pop
fs
cmp
cmp
inc
ret
push
rcl
pop
scas
retf
xor
xchg
push
rcl
xor
ret
ret
xchg
lods
adc
pop
cmp
or
and
sbb
iret
lods
inc
add
je
or
push
in
adc
mov
inc
pop
inc
sbb
icebp
dec
ret
sub
mov
pop
jecxz
pop
mov
pop
jmp
mov
cmp
dec
pop
pop
mov
xchg
pop
xor
lock
cmp
je
mov
std
jle
dec
es
ror
add
xchg
jecxz
mov
pop
ja
sahf
in
dec
js
and
xchg
cwde
push
ja
pushf
push
xchg
lahf
out
ins
inc
inc
in
ins
inc
or
xchg
cmp
add
jmp
test
push
inc
pop
lock
pop
lahf
in
enter
inc
inc
xchg
and
sbb
shl
add
cmp
push
mov
and
pop
in
ret
xlat
aaa
mov
mov
inc
mov
and
int3
(bad)
mov
adc
ins
ins
fdivr
pop
scas
add
add
xor
and
test
xor
xchg
test
add
jl
push
xor
mov
imul
inc
jnp
sub
and
lock
push
enter
and
add
mov
outs
xor
addr16
stos
add
gs
mov
test
sub
xor
push
jecxz
add
xchg
mov
xchg
cmc
cmp
(bad)
and
jo
xor
lock
mov
iret
or
sub
out
lock
sub
in
test
lahf
(bad)
js
xchg
mul
add
repnz
or
push
call
(bad)
pop
js
(bad)
add
inc
xchg
jl
aaa
(bad)
(bad)
jmp
sbb
xchg
and
lock
adc
cmps
fs
ja
sbb
arpl
mov
adc
inc
sar
mov
mov
dec
pop
lock
sar
mov
jb
test
or
jmp
and
xor
ret
mov
adc
movs
repz
in
ss
inc
test
mov
mov
push
and
mov
push
cmp
push
clc
xchg
jg
cwde
cdq
mov
mov
stos
add
mov
mov
cld
fimul
adc
cs
cmp
bswap
pop
pop
adc
adc
test
sub
cmp
xor
inc
cmp
xchg
pop
pop
jg
lock
aaa
add
xchg
mov
setno
call
iret
push
sbb
gs
pop
add
xchg
mov
stos
rcr
xor
aaa
fdiv
cmps
xor
cmp
(bad)
xchg
and
and
xchg
ins
jle
pop
je
pop
mov
mov
jp
push
adc
push
push
inc
daa
push
daa
dec
and
cmp
add
(bad)
std
inc
push
pop
cli
fdiv
arpl
sub
cmp
imul
(bad)
or
xchg
bound
loopne
add
pusha
daa
jne
and
mov
stc
int
nop
ss
cmp
jne
xor
dec
test
ret
xchg
xchg
mov
scas
js
push
ret
mov
push
imul
jbe
cmps
dec
lods
xchg
aad
enter
out
mov
cmp
xor
mov
and
sbb
or
sbb
retf
aad
push
dec
dec
mov
push
fild
mov
add
hlt
jl
dec
das
add
popf
jmp
xor
loop
xor
jae
dec
inc
jo
xchg
daa
mov
test
(bad)
pop
loop
sbb
inc
pop
add
add
push
jns
cmp
cli
inc
cmp
sub
test
mov
imul
cmp
inc
fild
sbb
ret
push
das
mov
adc
and
mov
scas
ror
add
push
lods
cmp
jmp
jbe
imul
gs
js
fsubr
inc
push
hlt
add
add
jl
jl
frstor
xor
push
dec
loopne
sti
sub
or
or
inc
inc
add
xlat
add
dec
and
hlt
je
mov
and
hlt
sbb
lock
push
cmps
mov
adc
push
cmp
mov
add
out
cwde
adc
jecxz
nop
mov
or
xor
mov
(bad)
sub
cmps
fsub
inc
push
mov
stos
mov
xor
nop
inc
mov
pop
or
or
ficom
jge
xor
adc
pop
push
fs
mov
sub
mov
jns
add
or
add
sbb
fmul
lock
xor
sbb
jns
xor
sbb
aam
add
aam
jmp
ret
dec
rcr
in
mov
sub
imul
inc
sub
call
les
in
push
mov
or
scas
add
test
lods
xchg
sub
inc
and
mov
dec
sbb
mov
mov
(bad)
imul
push
jmp
jmp
adc
xchg
add
sub
xor
or
cmp
int3
js
and
aad
cmps
js
shl
ror
push
in
mov
pop
loopne
add
(bad)
sbb
mov
(bad)
xor
adc
sbb
js
in
and
js
shl
mov
pop
test
cmps
jmp
dec
sti
ds
mov
sbb
jno
lea
js
add
and
jo
outs
inc
les
pop
xor
push
mov
inc
ins
imul
or
pop
jns
call
js
mov
push
push
sbb
or
push
mov
adc
mov
dec
push
scas
call
pop
jno
add
pop
loope
pop
mov
mov
ds
adc
inc
std
push
xor
js
inc
popa
add
dec
inc
inc
loope
pusha
(bad)
arpl
xchg
mov
or
out
shl
jo
cmp
push
das
and
sbb
cmp
cmp
loop
bndstx
je
adc
sub
push
xchg
xor
and
or
aas
aas
cmp
ror
mov
dec
fldenv
and
jmp
xor
shr
es
int3
mov
aam
ja
aam
imul
je
shr
dec
jns
test
xor
paddusb
gs
cmp
push
pop
sub
loope
out
pop
pusha
push
fsub
mov
sbb
shl
or
mov
sbb
xor
outs
push
movs
or
push
pop
xchg
jo
inc
inc
das
adc
inc
sub
add
test
retf
and
es
js
imul
scas
xchg
loopne
(bad)
icebp
je
mov
inc
and
dec
adc
or
and
xor
je
aam
jl
sbb
or
pop
sbb
and
aaa
aas
push
cdq
mov
push
sbb
jmp
xor
dec
add
rcl
pop
or
hlt
adc
rcl
out
xor
out
pop
push
data16
dec
inc
mov
add
mov
push
retf
les
add
dec
es
or
push
leave
jnp
add
cdq
test
into
popf
add
daa
sbb
lds
popf
imul
add
btr
xchg
es
sub
or
push
xchg
retf
sub
or
or
add
aad
mov
out
inc
dec
cli
push
fs
pop
aad
popa
(bad)
push
mov
xchg
sub
mov
movs
aad
arpl
sbb
out
lock
jg
test
xchg
es
xor
test
scas
push
sbb
test
and
pop
jne
mov
dec
jl
inc
sub
xchg
fstp
imul
(bad)
xor
xor
pop
rol
sbb
mov
push
jg
pushf
adc
scas
adc
sub
fdiv
imul
scas
mov
mov
dec
or
gs
or
sbb
sub
xchg
inc
jae
and
mov
imul
repnz
dec
mov
jae
js
and
leave
xor
fdiv
inc
hlt
jns
sbb
pushf
cmp
call
lods
xor
push
jne
jp
fsubr
cmps
mov
(bad)
mov
ds
out
rcl
add
mov
fmulp
cmp
les
rcl
dec
arpl
dec
mov
and
xchg
add
enter
adc
mov
movs
xor
test
pop
and
movs
and
pop
push
mov
mov
je
mov
pop
test
ja
push
or
scas
inc
dec
cmp
cli
add
aas
or
sub
popa
ins
aad
push
and
ret
mov
fxch
popa
ins
push
movs
pop
xor
jge
in
or
and
aaa
mov
cmpxchg
xlat
pop
push
adc
lock
scas
inc
adc
mov
push
cmp
mov
push
adc
out
nop
or
imul
or
pop
and
pop
inc
or
adc
xor
inc
outs
dec
dec
enter
mov
add
push
adc
push
fdivr
rol
arpl
or
sbb
mov
mov
push
test
cmp
adc
add
mov
push
xchg
movs
das
in
repnz
mov
and
xcrypt-cfb
cmps
fs
adc
js
inc
test
xchg
test
(bad)
pop
nop
out
pop
add
sar
mov
fadd
mov
data16
maxps
loopne
and
sub
sub
in
rcl
push
xchg
test
in
sbb
and
pushf
mov
shr
fdivr
and
inc
rol
ret
aaa
xor
push
push
pop
lods
sti
inc
and
jp
xor
das
mov
ins
xchg
pop
ror
test
xor
fidivr
fadd
cmp
addr16
cmp
enter
pusha
mov
jns
inc
pop
hlt
mov
xchg
ds
inc
fbstp
inc
lock
mov
inc
adc
push
icebp
nop
mov
(bad)
mov
adc
(bad)
and
and
pop
jbe
adc
ins
bound
dec
jg
jle
das
push
pop
add
ins
popa
popa
mov
and
aam
adc
imul
adc
adc
and
mov
fistp
sbb
adc
or
or
test
push
push
popa
jae
pop
cmp
in
xor
hlt
xor
fs
adc
pop
pop
in
pop
or
fcom
inc
mov
mov
mov
cs
imul
imul
add
and
test
gs
mov
scas
dec
mov
mov
add
bound
and
pop
aaa
adc
inc
call
bound
nop
cld
pop
andps
lods
cmc
imul
jae
mov
pushf
pop
test
push
push
adc
int3
rol
fsub
mov
stc
adc
data16
xor
xor
adc
xchg
jno
mov
pushf
add
mov
repz
loope
mov
or
push
or
dec
out
pop
lea
add
cdq
in
add
adc
jnp
jl
add
jbe
mov
pop
sub
mov
sub
test
mov
push
jns
lods
rol
push
ins
aam
sbb
ror
push
popa
xor
fild
and
lahf
es
enter
rol
add
cs
add
and
adc
adc
pop
rcr
aas
adc
add
mov
cmp
daa
xchg
mov
(bad)
mov
(bad)
jmp
add
and
xor
inc
sbb
adc
add
add
pop
jb
add
or
mov
pop
sbb
push
sub
pop
rol
mov
add
jo
lods
inc
cmc
dec
add
inc
fisubr
xor
out
movhps
or
and
outs
adc
or
je
adc
inc
and
dec
imul
int3
mov
lahf
inc
mov
adc
xor
push
popf
mov
add
add
or
fld
mov
adc
pushf
xchg
(bad)
and
add
sbb
pop
dec
and
mov
jle
jmp
pop
gs
rcl
rol
jo
pop
pop
js
test
pushf
imul
sub
pusha
xchg
mov
loopne
jmp
test
pop
and
and
dec
imul
hlt
or
inc
pop
and
pop
jp
mov
push
cld
and
popa
jb
gs
sbb
fs
pop
outs
arpl
lods
inc
stos
icebp
pop
xchg
and
test
iret
stos
bound
out
test
neg
mov
jmp
inc
inc
(bad)
leave
pop
mov
getsec
js
gs
push
add
fwait
adc
pop
int3
repz
mov
mov
icebp
sbb
adc
xchg
adc
sub
add
or
adc
mov
and
adc
cmp
mov
test
popa
rol
arpl
mov
add
mov
ret
add
push
sbb
push
fisttp
in
xchg
xor
in
add
imul
rol
out
push
out
mov
jb
js
pop
mov
pop
adc
push
and
ins
fld
or
add
retf
les
mov
add
xchg
adc
xchg
push
push
push
jo
mov
xor
pusha
repz
out
push
es
mov
add
mov
fwait
fs
(bad)
ror
push
aam
pop
push
iret
xor
(bad)
movs
fimul
jns
in
sbb
mov
fld
pop
or
xor
push
mov
imul
xchg
mov
add
add
add
inc
and
add
pop
mov
scas
push
jne
mov
pop
or
mov
mov
mov
mov
mov
or
sbb
cmp
cmp
(bad)
push
(bad)
in
(bad)
jmp
jmp
jmp
jmp
push
jecxz
loop
loope
loopne
(bad)
fdivrp
(bad)
fdivr
fld
pop
and
call
call
call
call
push
(bad)
jmp
call
dec
dec
dec
dec
dec
dec
fisubr
fmulp
leave
dec
rol
inc
cmps
stc
sbb
add
or
ins
push
mov
push
inc
or
lods
ds
jns
in
inc
or
lahf
out
pop
push
loopne
imul
push
movs
(bad)
push
xor
sar
push
pushf
add
mov
ds
mov
jle
adc
fs
sbb
repz
adc
shl
adc
push
sub
inc
add
neg
mov
ss
push
test
push
hlt
cmc
xor
data16
imul
js
hlt
sub
repz
lock
data16
cwde
adc
adc
or
out
cmp
adc
push
mov
push
sub
int
fnsave
std
mov
in
cmp
int3
repnz
push
inc
icebp
(bad)
xchg
test
add
xchg
pop
sbb
inc
cld
emms
or
xchg
cmp
push
sbb
add
adc
cwde
inc
add
push
lea
lods
loope
jecxz
sahf
addr16
inc
loopne
dec
enter
cmp
loop
sahf
add
dec
dec
fwait
and
inc
push
dec
add
in
js
cs
push
pop
jp
xor
pop
jl
pop
jo
leave
repnz
pop
and
or
or
shl
or
rol
es
pusha
nop
pusha
dec
add
adc
ins
je
fcomp
aaa
sbb
out
popf
sub
adc
in
out
out
sub
add
sub
sub
imul
push
push
pushf
outs
lods
ds
push
push
or
adc
inc
xchg
push
adc
daa
push
out
xchg
dec
ins
gs
lods
inc
or
les
xchg
rol
adc
fs
or
mov
ja
xchg
inc
mov
jo
popa
mov
cmove
popa
je
pop
cmps
or
test
push
in
rcl
jne
sub
pop
or
mov
les
mov
jo
push
in
(bad)
ret
test
nop
test
add
addr16
or
bound
inc
sbb
ja
or
push
popa
pop
shl
push
jo
jp
xor
int3
popf
cmps
cmp
sub
xchg
enter
jne
push
bound
bound
fidivr
and
sahf
push
or
sub
or
sahf
mov
in
xor
and
dec
imul
ins
mov
outs
data16
je
popa
repnz
daa
ins
mov
add
pushf
daa
mov
(bad)
dec
fistp
and
setno
sbb
mov
jo
fwait
ss
sbb
push
nop
pop
or
sub
sbb
imul
add
xor
xchg
push
jo
cmp
cmc
stos
push
push
push
push
jp
and
pop
lahf
in
add
add
adc
jecxz
mov
pop
push
cli
sbb
mov
and
pop
or
jge
jg
enter
and
adc
cmc
mov
cdq
add
dec
(bad)
ds
mov
(bad)
fs
xchg
cmc
inc
and
sub
inc
enter
add
and
cmp
popf
enter
mov
dec
jb
popf
push
adc
sub
mov
push
inc
push
xchg
sub
add
fadd
call
adc
add
test
adc
inc
pop
add
mov
add
aaa
mov
mov
mov
mov
push
cmp
ja
adc
and
xchg
or
and
mov
mov
icebp
mov
mov
xor
call
pop
mov
mov
mov
mov
mov
addps
in
(bad)
mov
ret
jmp
mov
(bad)
mov
jne
(bad)
mov
ins
(bad)
jmp
dec
push
push
push
mov
retf
sbb
inc
nop
mov
call
cmp
jns
dec
repz
cmp
mov
repz
loopne
bound
push
jl
cmp
fs
sbb
push
ins
pop
cmps
stc
xor
jle
push
fdiv
gs
idiv
fnsave
push
push
pop
into
jo
sbb
jbe
stos
je
push
adc
cmp
xchg
push
in
cmp
sar
or
jo
jnp
out
loopne
imul
cmp
mov
sub
push
mov
dec
push
push
pop
pusha
fnsave
iret
push
ins
push
sub
push
jecxz
mov
push
in
mov
xchg
add
mov
popf
addr16
ins
mov
push
addr16
data16
dec
or
(bad)
jbe
outs
fidivr
pop
pop
ds
out
pusha
push
xor
cmps
jge
sub
pop
fs
data16
neg
int3
xchg
hlt
sbb
sar
cmps
cmp
in
jae
mov
pusha
ds
sahf
jp
pop
jns
and
pop
or
or
out
test
shl
cmp
mov
mov
cmps
push
or
push
test
cmp
sub
mov
inc
cwde
mov
cmovbe
pop
or
sub
aad
adc
pop
movs
movs
jmp
push
mov
bound
je
addr16
and
mov
and
dec
xchg
pop
xchg
pop
xchg
lock
push
pop
nop
aam
mov
jg
sub
daa
sub
ret
and
test
inc
call
xchg
pushf
mov
imul
push
clc
mov
sti
inc
js
int3
xchg
inc
push
add
adc
add
ja
jo
ins
(bad)
call
imul
pushf
cmps
aaa
bound
push
jno
pop
daa
test
addr16
cmps
enter
aad
and
push
add
aam
arpl
inc
dec
adc
or
ins
lock
cmps
and
pop
inc
or
adc
push
inc
sahf
and
mov
aaa
pop
sub
lds
hlt
add
cwde
test
scas
in
fsubr
inc
dec
shl
shr
and
push
or
dec
or
aas
inc
inc
mov
test
inc
ins
(bad)
ss
inc
dec
je
sbb
dec
add
ficom
push
les
sti
cmp
or
inc
imul
inc
nop
arpl
pusha
retf
push
xchg
clc
jle
adc
add
mov
dec
inc
jo
inc
add
and
sbb
sbb
xor
xor
in
adc
ret
xchg
fadd
mul
push
add
inc
push
push
push
loop
aas
sub
fs
add
adc
xchg
pusha
xchg
dec
dec
push
adc
mov
jae
xor
test
jns
or
aam
xchg
push
cmps
in
stos
aas
sub
add
adc
xchg
add
pop
out
jb
xchg
or
mov
les
xchg
test
or
add
pop
sbb
dec
xor
add
and
cmp
les
ins
mov
jl
je
mov
stc
stos
add
cmp
jnp
push
adc
sub
xchg
cmp
inc
push
pop
ins
popf
pop
faddp
and
cs
xchg
sbb
into
push
add
test
int
jae
dec
mov
and
xor
in
sar
dec
stos
push
mov
xchg
sbb
mov
js
or
adc
ret
out
mov
inc
inc
push
jb
cmp
(bad)
xor
jle
mov
leave
mov
nop
add
out
popa
sub
add
add
cld
mov
jecxz
outs
xchg
inc
and
imul
add
scas
pop
adc
sahf
addr16
mov
out
retf
or
(bad)
rcl
cmp
add
in
(bad)
pop
xlat
push
inc
pushf
fld
pcmpeqb
fwait
es
fcomp
fcom
aam
sub
add
mov
mov
int
enter
dec
je
stos
adc
cmps
push
nop
stos
sub
cmp
xor
out
nop
fild
loope
hlt
daa
lea
sbb
aad
outs
(bad)
div
xchg
add
push
pusha
sbb
dec
mov
nop
xchg
push
in
fiadd
mov
ins
clc
ss
sahf
call
add
or
ins
pop
(bad)
sub
and
cwde
xor
outs
adc
and
cmp
movs
mov
mov
xchg
add
adc
(bad)
bound
lock
or
dec
dec
aas
and
jmp
je
mov
das
lea
mov
pushf
xchg
mov
push
das
test
clc
dec
xor
in
aaa
xchg
hlt
xor
adc
inc
arpl
fnstenv
hlt
and
pusha
mov
jmp
xchg
in
dec
inc
es
mov
sub
push
(bad)
cli
rol
sbb
sub
or
cmp
out
aaa
rol
add
(bad)
or
inc
andps
popa
sbb
sbb
inc
mov
jne
iret
mov
rol
adc
xor
cs
push
or
xchg
mov
pop
adc
jne
adc
imul
mov
xchg
shr
idiv
mov
jne
cmp
sar
add
call
mov
mov
dec
push
xchg
pop
or
pop
sbb
adc
mov
jb
loopne
test
aas
inc
lea
mov
or
mov
outs
aaa
dec
cld
ins
pop
add
and
or
aas
xchg
push
daa
out
mov
xchg
lds
xchg
inc
push
aas
or
inc
lock
add
or
and
out
nop
popa
dec
jg
jb
addr16
cmp
dec
jle
mov
jno
mov
aas
sub
enter
sub
daa
and
or
ret
mov
inc
add
add
jo
jmp
push
(bad)
test
aaa
cwde
pop
dec
or
mov
outs
mov
test
and
add
sub
js
pop
and
iret
inc
push
mov
mov
cwde
rol
or
xchg
push
xor
pop
cmp
pop
sub
vprotw
lea
jb
sbb
mov
arpl
inc
inc
push
push
mov
add
retf
add
inc
xor
retf
pushf
xchg
inc
stos
and
ss
addr16
or
mov
xor
xchg
je
add
dec
and
push
stos
xchg
inc
pop
repnz
enter
sub
inc
lock
pop
push
dec
mov
sbb
or
add
and
call
scas
push
mov
dec
mov
pop
cmps
sub
xor
push
mov
mov
or
je
les
dec
mov
mov
sahf
mov
inc
cmp
inc
test
push
push
inc
loop
lahf
sub
pop
fistp
inc
push
sbb
imul
test
inc
mov
mov
in
movs
mov
jmp
mov
repz
call
repnz
and
push
(bad)
mov
add
test
je
mov
sub
(bad)
and
fnstcw
mov
pop
mov
(bad)
sub
rcr
mov
sub
daa
adc
and
mov
dec
and
add
and
sbb
xor
in
sub
add
lods
test
sbb
jne
add
cmp
cmp
xchg
shl
push
ficom
xor
dec
rcl
cli
xor
push
outs
cmp
push
push
xchg
xor
fwait
cmp
inc
xchg
or
sbb
adc
cmps
imul
imul
cmp
scas
push
xchg
mov
add
push
xchg
mov
sub
lods
push
mov
add
fnsave
cs
sub
aaa
mov
aas
icebp
push
adc
sbb
mov
and
iret
bound
sub
mov
mov
push
bound
mov
pop
or
xchg
gs
in
and
mov
int
fwait
cmp
sbb
add
jmp
mov
mov
add
cmp
mov
hlt
or
add
bound
jne
mov
sub
lea
leave
hlt
push
adc
or
cmp
rcl
test
adc
pop
cmp
mov
rdmsr
ss
sbb
repz
sahf
dec
sbb
inc
es
mov
mov
lods
enter
push
pop
cmps
popa
sub
inc
shl
mov
jne
xor
mov
add
xchg
jge
inc
pop
fiadd
jle
cwde
xor
or
jl
ficomp
daa
and
movs
cs
loopne
jmp
sbb
iret
stos
adc
mov
add
jb
sub
pop
sbb
dec
and
sbb
sbb
js
lods
cmp
mov
adc
stos
inc
out
cmp
and
adc
mov
jae
dec
adc
clc
ja
(bad)
or
push
xchg
jmp
inc
aad
jo
dec
xchg
sbb
or
pop
sbb
adc
in
sbb
xchg
mov
mov
ins
imul
dec
add
pusha
push
aas
or
jg
inc
sbb
les
adc
pop
scas
enter
add
lock
add
popf
xor
ret
or
in
adc
ret
or
loop
jne
mov
shr
imul
mov
jle
or
add
clc
or
popa
call
dec
jae
ret
bswap
ja
out
push
fcomp
dec
dec
cmps
pop
lds
fild
cmps
mov
dec
imul
or
aad
adc
sbb
sti
cwde
push
sbb
in
inc
sbb
lock
cli
cs
jmp
cmp
aaa
or
enter
clc
test
es
(bad)
jmp
add
jns
xchg
inc
push
aam
movs
pusha
or
and
sbb
sub
leave
sti
inc
cdq
pusha
ret
jo
and
inc
in
jne
push
inc
test
fiadd
jnp
push
inc
call
jne
dec
jecxz
inc
cmpxchg
dec
fsub
mov
ins
push
push
push
sub
arpl
in
ret
pop
add
mov
or
and
and
jae
xor
sbb
xchg
stos
push
clc
jo
aam
pusha
fadd
cmps
pop
jecxz
push
inc
ret
les
dec
mov
adc
sub
rol
repz
mov
aas
dec
push
mov
pop
fisub
bound
add
loope
inc
xor
and
jb
inc
shl
in
inc
retf
jle
xchg
or
fdiv
inc
ret
adc
adc
jmp
sbb
add
ret
push
xor
or
pop
lds
cdq
pop
scas
add
or
lock
sti
add
(bad)
push
aam
and
cmp
cmp
ins
cmp
push
xchg
mov
push
ret
push
adc
lock
dec
inc
cmp
mov
push
pop
call
fadd
aam
je
mov
push
dec
ret
or
push
xchg
nop
sub
pop
inc
or
jmp
cmp
test
dec
jne
push
test
jle
jl
popf
jp
or
pop
retf
fbstp
cmp
jecxz
sti
outs
inc
arpl
xor
adc
not
inc
jne
and
lahf
mov
shl
xchg
ror
outs
xor
cmps
cli
mov
sbb
cld
xor
add
mov
cmps
or
lock
pop
cli
ror
test
mov
lods
and
test
mov
xor
addr16
cmps
je
pop
cmp
mov
imul
es
jmp
sub
movs
mov
mov
cmp
mov
mov
les
or
sub
dec
mov
xchg
fiadd
mov
mov
add
cmp
add
cmc
cmc
and
add
shl
stos
xchg
xor
loopne
lds
(bad)
and
in
cmps
push
icebp
or
je
inc
out
in
mov
xor
hlt
cmp
pop
jbe
mov
ins
or
push
jbe
dec
loopne
bound
add
scas
out
xchg
in
push
pop
fadd
xchg
rcl
xor
and
jge
outs
mov
jmp
and
pop
push
mov
add
repz
pop
pop
test
out
and
sub
add
add
push
(bad)
sbb
sub
add
scas
test
retf
pop
in
imul
dec
rcr
ja
jbe
xlat
mov
fisttp
cmps
jp
mov
mov
and
xchg
ins
ds
into
push
sbb
add
movs
imul
cmp
or
add
mov
arpl
fs
bound
(bad)
es
pop
ins
rol
inc
mov
lock
popa
es
xor
cmps
rcr
adc
(bad)
fdivr
dec
loopne
icebp
sbb
js
cdq
test
or
cmp
or
std
mov
pop
and
jne
test
jne
dec
xchg
xchg
cmp
int
xlat
adc
sub
sahf
pop
or
mov
movs
adc
xchg
pop
xchg
mov
sub
test
xchg
sub
test
xadd
das
mov
jmp
jo
add
call
pop
test
and
and
lea
sbb
daa
pop
fld
rcl
push
mov
sub
jmp
jmp
clc
mov
push
add
push
adc
and
or
adc
inc
sbb
xor
js
mov
(bad)
xor
pop
fiadd
mov
sub
enter
test
add
add
adc
jl
and
adc
test
aaa
cmp
inc
and
(bad)
lea
mov
cs
pop
fmul
sub
xor
mov
adc
cmp
mov
bound
sub
inc
imul
pop
sub
and
add
push
push
add
test
dec
fcom
sub
imul
push
ins
mov
adc
pop
xor
xor
add
cmps
push
push
adc
cmps
xlat
xchg
popf
inc
jmp
pop
js
cmp
popf
cmp
ret
imul
pop
sub
mov
mov
inc
mov
sub
mov
setns
js
nop
lahf
cmps
loopne
xchg
es
xor
pop
int
adc
mov
dec
jle
fisttp
ds
mov
inc
adc
fs
pop
loop
cwde
iret
and
test
popf
add
xchg
in
in
sub
lea
aaa
xchg
xor
inc
mov
xor
xlat
dec
push
fnsave
in
pop
shl
and
imul
dec
fnstcw
push
jmp
adc
xor
adc
fadd
aad
push
test
popf
retf
call
repz
push
push
sub
add
dec
add
pop
jno
jmp
pop
sbb
shl
mov
cmp
xchg
xchg
popa
lods
push
dec
or
mov
adc
cmps
add
dec
ds
js
dec
mov
push
sbb
pop
sub
daa
js
and
xchg
xor
mov
idiv
adc
xor
inc
push
cmps
call
test
sub
iret
cmp
sar
jl
dec
mov
adc
dec
xchg
push
fwait
stos
and
push
adc
push
(bad)
pop
inc
je
add
cmp
add
adc
pop
inc
int
sbb
fdiv
adc
adc
xor
pop
cwde
stc
push
and
ins
inc
adc
adc
mov
test
lods
mul
push
fidiv
mov
outs
je
sahf
add
mov
xchg
test
pop
xchg
rcl
bound
mov
dec
dec
test
xor
or
add
or
sahf
fisttp
jae
loop
or
and
lahf
add
pusha
ret
cmp
sbb
ret
mov
(bad)
mov
jo
test
(bad)
jns
mov
nop
sub
into
sub
inc
push
adc
inc
cmp
and
fsubr
or
dec
int3
clc
add
push
jno
sbb
adc
je
mov
arpl
inc
enter
pop
ja
push
and
outs
or
mov
in
inc
les
mov
dec
daa
rol
repnz
mov
adc
mov
movs
rol
push
jecxz
push
lods
cmps
adc
xor
(bad)
dec
and
rol
sbb
and
out
inc
add
fbld
dec
call
ins
mov
inc
jge
mov
loope
mov
das
mov
add
sahf
jmp
add
movs
and
xchg
push
cli
and
add
add
test
add
das
push
or
outs
add
scas
adc
sub
push
or
popa
jge
mov
cmp
jg
rol
inc
xor
add
ins
stc
shr
lock
loope
movs
cmp
jnp
xor
cwde
popa
cmps
jmp
stc
ins
imul
or
mov
mov
lahf
dec
xchg
cmp
push
mov
mov
xchg
hlt
rol
pop
mov
hlt
imul
test
dec
cmp
inc
xchg
cwde
xchg
stc
fimul
dec
cmc
cmp
outs
push
sub
movs
mov
cmc
mov
add
dec
ror
adc
lea
in
ret
and
or
jge
jb
shl
xchg
adc
push
or
mov
rol
aas
shl
push
hlt
or
ins
mov
ins
cmp
jge
xchg
jp
pop
lods
jns
push
dec
xchg
test
mov
sbb
loop
sahf
sar
clc
or
cmp
add
shl
pop
sbb
xor
leave
imul
mov
and
es
push
adc
or
adc
mov
or
push
add
or
or
fwait
call
pop
jmp
cmp
je
mov
fdivr
push
js
or
adc
pushf
(bad)
xor
fsub
ret
cmp
push
or
add
xchg
movs
adc
je
sub
jbe
cmp
cmp
cdq
movs
popf
sbb
or
inc
sar
cmps
das
push
repnz
xchg
je
push
mov
in
in
xchg
das
xchg
lods
sbb
xchg
ror
rcr
gs
adc
inc
xlat
and
js
and
cmp
mov
mov
aad
pop
inc
sahf
in
adc
sbb
pop
inc
mov
cmp
fist
pop
add
(bad)
cmp
add
movs
xlat
and
or
clc
sub
adc
inc
out
xor
xlat
xlat
sub
sub
inc
pop
xor
inc
in
leave
jo
jo
xchg
test
std
jl
push
inc
xchg
or
push
cdq
mov
mov
ja
fmul
call
mov
jmp
push
(bad)
lods
movs
xchg
mov
and
mov
xchg
not
inc
dec
fild
sbb
cmp
xchg
mov
movs
jl
and
rcl
nop
or
dec
dec
push
adc
ds
pop
popa
xchg
test
push
fstp
inc
cmc
add
iret
cmps
mov
adc
aas
loopne
nop
mov
das
ja
or
out
add
jmp
test
enter
add
sbb
mov
mov
sti
dec
jne
cmp
lods
mov
inc
mov
inc
jo
xchg
jecxz
repnz
mov
adc
sar
xor
cmp
pop
add
or
(bad)
xor
sbb
mov
cld
cdq
and
mov
push
pop
mov
fs
dec
retf
scas
and
inc
push
test
ret
mov
cmps
jmp
mov
cmp
nop
inc
sub
ret
aam
jge
out
movs
mov
push
add
pop
cmp
sahf
pop
pop
adc
pusha
push
pop
add
jp
jmp
sub
ds
ja
ins
adc
jmp
sub
aam
stos
aad
loope
jl
iret
clc
out
test
jmp
xchg
sbb
inc
mov
push
mov
scas
cmp
int3
aam
stos
hlt
ficomp
xlat
cmp
das
imul
push
inc
push
mov
xchg
and
je
xchg
xchg
cmp
add
shl
(bad)
movs
repz
dec
xor
neg
pop
xor
imul
jle
xchg
ret
ret
xor
or
inc
movs
inc
adc
pop
cdq
fsubr
or
push
pop
dec
imul
fcomp
fwait
imul
ret
js
test
sub
adc
xor
xor
mov
and
sahf
push
mov
adc
push
fsubr
imul
sbb
and
outs
add
mov
lahf
stos
outs
jnp
adc
mov
inc
mov
jne
adc
inc
jne
sub
jl
cwde
dec
je
push
and
and
loopne
pop
mov
push
fmul
ret
leave
jns
mov
scas
inc
popf
adc
cdq
clc
inc
cli
jmp
or
cwde
imul
fidivr
push
out
xor
pop
pop
test
or
sub
push
or
jne
xchg
dec
out
std
sub
and
push
stos
mov
push
sbb
jmp
push
arpl
scas
sub
loopne
aaa
push
mov
loop
push
inc
push
xor
ret
test
pop
test
adc
in
or
cmps
and
scas
fdivr
dec
dec
push
lock
sub
lds
aad
mov
icebp
push
mov
push
push
div
in
xor
push
or
cs
and
inc
push
add
ja
mov
dec
sbb
dec
inc
inc
or
push
jmp
stos
ins
cmc
cmps
mov
cmp
push
mov
and
xchg
mov
cmc
dec
sar
cmp
enter
push
ret
clc
loop
movs
pop
nop
dec
retf
(bad)
leave
test
or
das
add
xchg
fnstenv
add
adc
adc
(bad)
in
out
pop
pop
bound
xchg
rol
std
sub
ret
mov
push
sub
test
cmp
adc
mov
rol
dec
inc
mov
cmp
movs
fimul
or
mov
pop
and
and
out
inc
pop
dec
xchg
push
add
inc
adc
xor
hlt
add
jns
pop
cmp
rcl
jmp
jp
jo
rcr
mov
(bad)
icebp
mov
(bad)
dec
mov
mov
dec
rcr
fcmovb
(bad)
sbb
and
jne
inc
add
inc
jmp
pop
add
popa
test
push
push
gs
test
adc
add
lock
pop
cmps
adc
rcl
je
dec
inc
iret
inc
push
sbb
cmp
add
xor
shl
sbb
jo
adc
jns
fs
pushf
jbe
inc
adc
retf
ins
lahf
test
inc
jl
mov
cmp
sub
adc
mov
(bad)
out
push
shr
push
push
in
outs
mov
je
add
js
inc
sbb
sub
daa
les
dec
fcomp
mov
sahf
sbb
(bad)
test
adc
aam
je
inc
push
xchg
push
inc
out
jno
jp
dec
inc
pop
or
add
gs
xor
enter
addr16
inc
imul
mov
addr16
leave
arpl
popa
push
add
dec
xchg
int
adc
or
pop
and
adc
aad
cwde
jno
loope
push
je
mov
test
mov
test
inc
and
dec
adc
in
mov
or
popa
push
mov
and
mov
push
mov
cdq
jecxz
adc
mov
adc
push
push
mov
in
cmp
sbb
jb
cmp
dec
xor
shr
arpl
push
rcr
(bad)
(bad)
fistp
cdq
jp
push
or
gs
pop
(bad)
mov
popf
mov
aas
aaa
pusha
push
(bad)
sti
jne
fdiv
or
dec
call
adc
out
lods
jmp
adc
loopne
xor
or
pusha
inc
loopne
xchg
fadd
or
mov
mov
lods
shl
pop
fadd
sahf
mov
call
iret
adc
dec
dec
adc
sbb
dec
lock
mov
and
stos
add
push
aam
xor
pop
aam
iret
lods
mov
xchg
push
or
imul
sub
sub
and
mov
int3
xchg
push
icebp
mov
fiadd
xor
(bad)
sub
call
hlt
pop
or
rcl
inc
sbb
add
cmp
xor
inc
add
call
les
out
mov
xchg
add
ds
mov
add
add
rcl
push
add
pop
jo
push
inc
mov
sahf
push
sbb
loopne
adc
add
sbb
cmp
iret
sbb
or
add
stos
xor
sub
pop
je
push
ret
and
loopne
add
cmp
or
cmp
shl
loopne
dec
hlt
and
cmps
sahf
mov
xor
bound
jne
add
push
push
mov
or
es
add
push
jno
enter
out
out
add
adc
mov
jnp
bound
mov
xor
mov
sbb
daa
xor
leave
aam
test
cmp
out
pop
adc
sahf
daa
or
ins
rcl
inc
xor
push
add
inc
add
mov
mov
adc
inc
cmp
adc
jb
adc
push
js
cmp
xor
and
inc
dec
pop
sub
retf
(bad)
lea
xchg
sar
data16
cmp
sbb
imul
shl
sub
and
jno
or
push
ins
je
xchg
js
push
cmp
pop
adc
mov
and
ret
cli
or
jmp
lds
push
js
mov
add
mov
cmp
fst
ror
(bad)
sbb
mov
mov
imul
fwait
xor
push
push
pushf
pop
adc
mov
jae
inc
mov
pop
ret
pop
lock
sub
inc
test
je
es
xchg
inc
pop
lock
mov
mov
fistp
ret
dec
dec
inc
sub
mov
inc
fsub
sbb
xor
mov
outs
xor
inc
je
sbb
lock
add
ret
or
(bad)
adc
add
push
mov
add
out
repnz
cmp
je
cmp
nop
cmp
(bad)
and
push
cwde
rcl
xor
mov
scas
ret
or
xchg
clc
cmp
dec
dec
dec
jbe
ror
push
cmp
adc
ins
inc
icebp
test
cmp
int3
push
dec
adc
fwait
icebp
and
push
mov
pop
ins
push
pushf
(bad)
jle
inc
call
mov
imul
adc
pop
(bad)
add
dec
pop
push
add
xchg
mov
and
inc
sub
sub
sub
rcl
adc
pop
fdivr
ins
rol
dec
or
in
in
(bad)
js
or
cwde
or
inc
pusha
add
xchg
jl
cmp
inc
and
push
mov
or
add
sbb
mov
jmp
sub
shr
nop
xchg
enter
push
push
push
xlat
or
xor
adc
test
mov
sahf
add
shl
push
aas
or
nop
mov
idiv
mov
add
inc
jnp
ins
inc
mov
mov
fwait
and
push
outs
push
mov
(bad)
cmp
je
mov
push
mov
xchg
and
js
adc
je
repz
adc
popa
prefetch
inc
pop
pop
or
dec
sub
in
call
loopne
mov
and
push
adc
cmp
xor
out
aaa
add
mul
cld
sbb
adc
xor
iret
mov
xor
adc
test
call
mov
jno
xor
ds
out
pop
stos
xor
sbb
push
rcl
add
or
mov
sub
pop
xor
fisttp
mov
cmp
out
cmp
adc
xchg
jecxz
push
inc
outs
ins
xor
retf
loop
inc
mov
out
adc
(bad)
repnz
pop
adc
out
nop
lock
cmovs
xor
ret
std
xchg
push
in
dec
retf
nop
inc
shr
xchg
mov
sub
mov
cmp
lock
test
std
or
jle
dec
cmp
add
jnp
cmp
xchg
test
bound
into
cmp
mov
imul
cwde
ret
dec
sbb
cli
cwde
cmp
nop
push
sbb
mov
stos
push
jle
and
popf
pop
(bad)
adc
jne
push
add
pusha
xchg
push
mov
shl
adc
sub
xchg
movs
push
jo
xchg
(bad)
pop
aas
sbb
mov
xor
dec
(bad)
dec
mov
push
push
arpl
pop
cs
dec
cld
push
push
push
add
test
push
dec
jle
add
stos
loop
aam
scas
push
adc
push
or
xchg
xor
mov
xchg
popa
mov
xchg
mov
(bad)
cld
adc
je
xchg
adc
ret
jne
sbb
je
jg
jne
and
je
fwait
(bad)
cmp
push
movs
leave
jp
enter
add
lds
add
inc
aas
jle
inc
es
mov
and
pop
(bad)
mov
cmps
aad
or
test
cmp
or
cmc
xchg
mov
movs
xor
push
push
outs
push
adc
pop
mov
xchg
test
test
cld
add
push
popa
test
dec
sbb
jbe
ins
mov
mov
mov
mov
xor
xchg
rcl
fs
fsub
pop
add
add
mov
rcr
outs
and
xchg
in
mov
cmp
add
jecxz
(bad)
pop
sub
cmp
lods
mov
push
mov
and
jo
and
inc
shl
cmp
mov
cmp
push
or
add
lahf
test
xor
jmp
mov
and
pop
xchg
fiadd
add
add
jmp
inc
cmp
mov
adc
(bad)
into
adc
sub
add
xlat
call
push
loop
imul
sahf
push
fs
push
inc
imul
add
fcom
cmps
push
(bad)
push
mov
add
adc
shr
inc
fsub
add
push
mov
dec
ficom
or
adc
(bad)
rol
adc
mov
mov
dec
aaa
and
adc
adc
push
clc
pop
push
jl
fmul
add
push
dec
loope
mov
call
cmp
retf
fisub
push
fucomp
adc
or
sahf
add
mov
xor
or
pop
loopne
cmp
inc
lea
jmp
cwde
shl
mov
in
push
outs
push
mov
or
add
cmps
ror
pop
repnz
leave
or
cli
sub
enter
jle
repnz
pop
popf
sub
hlt
push
xadd
lock
add
pop
inc
ret
mov
sbb
cmps
sub
xor
push
lods
lds
gs
push
(bad)
dec
or
aas
test
icebp
adc
(bad)
es
inc
repz
icebp
sbb
repz
sub
pop
cdq
xchg
test
in
dec
fist
jge
lahf
xchg
cwde
bound
out
cmp
pushf
ret
inc
adc
sub
mov
test
pop
cs
mov
and
inc
mov
loop
or
adc
test
mov
add
push
or
jo
fs
fdivr
nop
dec
das
lods
sahf
shl
or
push
loopne
shr
xchg
punpckldq
test
push
aaa
xchg
push
inc
test
jb
push
pop
les
or
inc
test
inc
push
fs
mov
jmp
sbb
or
ret
and
pusha
fcomp
clc
inc
inc
dec
or
dec
mov
add
aaa
bound
(bad)
sub
cmp
or
mov
dec
jle
inc
dec
sub
pop
push
(bad)
aaa
call
mov
loopne
in
or
inc
in
push
add
aaa
out
hlt
clc
bound
cmps
jge
test
mov
jmp
test
gs
xlat
std
ja
outs
add
xchg
jno
push
mov
das
push
fdivr
dec
jne
aaa
mov
sub
dec
mov
je
dec
mov
add
je
test
hlt
bound
retf
and
inc
popf
enter
jbe
inc
or
fwait
or
inc
(bad)
mov
mov
jge
daa
mov
or
xor
or
sbb
pusha
xor
retf
push
pop
or
sub
or
cmp
mov
ss
jae
mov
add
(bad)
push
dec
mov
or
mov
int3
fwait
scas
inc
cmp
outs
xor
xor
mov
les
dec
std
fsub
lea
jle
sbb
jmp
stos
jmp
push
fstp
dec
lock
adc
sbb
or
cwde
lods
xor
das
retf
into
call
sbb
sti
jl
scas
inc
or
push
(bad)
dec
push
std
jnp
jmp
js
or
scas
enter
sbb
cmp
pop
hlt
or
add
test
add
or
(bad)
mov
mov
mov
loopne
stos
cwde
nop
das
mov
pop
dec
xchg
pop
addr16
es
pop
mov
add
lahf
jo
bound
pop
push
sbb
dec
cdq
sub
push
and
add
xor
mov
pop
cwde
sbb
push
adc
sub
add
and
dec
mov
dec
xchg
pop
rol
or
xchg
es
push
jg
inc
push
lods
mov
mov
mov
and
adc
pushf
pop
add
lods
neg
or
xor
jp
std
ja
xchg
cmps
sbb
add
sub
jae
dec
mov
mov
sub
lock
out
mov
sbb
outs
xlat
add
mov
xor
pop
in
test
dec
mov
aaa
adc
retf
mov
jle
jae
xchg
push
xor
cmps
gs
das
jno
push
clc
dec
mov
xor
cmps
rcl
push
add
popa
mov
pop
fisub
jg
jo
test
jbe
jl
and
daa
adc
jnp
sub
pop
dec
dec
mov
or
cwde
pushf
or
jg
sub
movs
lods
mov
push
inc
rol
stc
sub
add
int
adc
sbb
rcl
or
jns
sub
push
jmp
sub
push
or
add
push
or
xchg
popa
pusha
mov
nop
sbb
js
or
fadd
or
ds
outs
shl
adc
add
mov
and
mov
call
dec
xlat
leave
dec
adc
xor
mov
inc
add
jne
cwde
jne
inc
ficom
dec
xor
rcr
or
push
dec
push
stc
inc
jmp
add
sub
lahf
mov
pop
cwde
add
inc
fwait
xlat
outs
sub
dec
or
and
loop
cld
adc
ret
es
gs
out
call
sub
cmp
es
movs
pop
dec
add
or
adc
lods
xchg
int
sbb
imul
sub
xchg
not
div
cmp
and
icebp
out
push
sbb
jb
pop
adc
dec
repnz
or
mov
push
push
sbb
or
mov
sub
push
or
or
imul
les
add
push
imul
stc
pop
ja
fld
outs
ficom
push
add
add
repnz
or
stc
sar
sub
fxch
pop
inc
mov
cmp
fwait
sub
add
push
les
inc
pop
inc
mov
test
in
cdq
cdq
shr
mov
jge
mov
test
rol
or
mov
push
imul
mov
push
lea
push
xor
xchg
out
inc
xor
push
cmp
into
pop
pop
out
sub
imul
jecxz
pop
push
sub
(bad)
sti
or
dec
sbb
retf
mov
xor
add
xchg
in
sub
cmps
jge
idiv
xchg
sub
in
or
adc
inc
sbb
lea
ss
in
and
push
hlt
aaa
push
es
mov
ret
(bad)
push
test
pop
or
ja
inc
sbb
and
les
jb
mov
inc
xlat
xor
in
mov
adc
fldz
mov
adc
xchg
push
das
cmp
retf
(bad)
or
dec
mov
add
or
imul
test
pushf
dec
dec
and
cmp
inc
ja
pusha
pop
clc
mov
fisttp
dec
pusha
rol
xlat
add
mov
addr16
inc
pop
add
xor
pop
jne
(bad)
mov
mov
stos
dec
and
adc
clc
cmp
and
fadd
sbb
(bad)
adc
cmps
sbb
ds
push
add
jo
inc
nop
clc
add
mov
xor
lods
scas
sbb
stos
cmp
or
mov
dec
jne
(bad)
sub
push
sbb
popa
and
rol
cld
sbb
jae
xor
pop
mov
nop
call
sbb
pop
jb
nop
les
add
dec
xchg
or
sbb
enter
cmp
dec
xor
cwde
mov
pop
cwde
int3
int3
or
test
inc
and
add
ins
dec
mov
outs
jg
dec
cmp
push
inc
out
push
jo
cmp
ja
add
inc
jp
pop
lock
jbe
fcomp
je
lods
mov
push
aam
lods
pop
and
jmp
mov
pop
pop
sub
pop
outs
lods
sbb
add
push
mov
inc
sbb
leave
test
xchg
push
leave
add
adc
xor
prefetcht0
and
cmc
add
jb
xchg
or
fstp
stos
inc
or
leave
mov
addr16
or
out
or
out
dec
mov
les
and
mov
mov
sti
retf
jbe
adc
xor
add
rcr
xchg
adc
adc
push
fwait
mov
arpl
pop
mov
in
add
xchg
mov
add
mov
pop
(bad)
shr
or
das
clc
data16
cmp
jle
push
jg
adc
mov
jp
retf
in
xchg
div
cmp
cmp
or
mov
stos
aad
mov
sbb
and
push
or
add
ror
inc
and
add
sbb
call
adc
sub
sbb
jl
dec
push
add
sbb
test
dec
dec
fadd
clc
jl
xchg
sbb
retf
test
jmp
xlat
int3
inc
test
inc
jl
addr16
xchg
mov
mov
jbe
mov
jecxz
cmp
adc
or
mov
mov
test
(bad)
cmp
daa
(bad)
in
enter
cmp
inc
or
fadd
xor
lods
dec
fwait
jne
ins
retf
or
pop
mov
in
inc
adc
mov
mov
add
mov
mov
in
loopne
add
mov
push
scas
(bad)
push
adc
push
dec
xchg
ror
(bad)
out
or
loop
xchg
enter
ds
(bad)
jae
pop
cmp
sub
mov
cmps
adc
dec
sub
adc
jns
push
pop
mov
inc
icebp
out
retf
adc
push
dec
adc
and
adc
mov
jae
rol
cs
push
arpl
push
ins
in
or
jmp
ret
and
lea
test
add
push
popa
ins
in
adc
in
push
mov
push
(bad)
das
inc
aas
cmp
test
aas
xchg
push
push
xor
or
fmul
cld
adc
push
adc
xlat
or
and
add
lds
xor
add
mov
adc
pop
ret
sbb
pop
outs
outs
sub
mov
leave
push
inc
xor
inc
jle
sub
dec
or
cmp
jge
cmps
jge
nop
or
adc
adc
shr
lahf
or
adc
or
xchg
cmps
dec
or
dec
rcl
sub
adc
outs
inc
ret
xchg
jne
xor
cmc
or
mov
add
sbb
push
mov
or
les
push
inc
out
mov
pop
inc
mov
iret
(bad)
sub
push
pop
xchg
dec
arpl
inc
ins
je
adc
push
imul
dec
or
add
sub
popf
sbb
iret
and
jl
jmp
push
retf
inc
ins
inc
nop
js
and
add
test
in
(bad)
xor
retf
inc
nop
(bad)
jo
or
mov
adc
adc
fwait
(bad)
lea
dec
sub
push
jecxz
or
add
add
jns
in
push
push
mov
mov
ror
mov
sbb
push
xchg
jne
dec
sbb
test
and
mov
je
push
xor
inc
adc
sbb
leave
pop
(bad)
xchg
xchg
jnp
inc
and
jl
or
cmps
out
pushf
xchg
pop
push
mov
pop
clc
adc
mov
jl
pop
jecxz
xchg
and
sbb
cmp
inc
mov
inc
xchg
cmp
icebp
push
xchg
cmp
stos
mov
retf
sub
adc
(bad)
int
jbe
gs
and
adc
xor
loop
enter
sar
es
les
push
outs
push
adc
hlt
retf
xchg
fisttp
addr16
inc
int3
pushf
aam
mov
fsubr
mov
or
sub
sub
in
or
xor
mov
pusha
mov
inc
or
jmp
xor
popa
shl
inc
stos
aaa
and
add
mov
mov
sub
(bad)
or
fdiv
or
mov
push
dec
or
add
push
cld
or
test
mov
lahf
push
loopne
fiadd
nop
out
dec
loope
test
lds
push
ins
jmp
pop
adc
or
jnp
ds
push
push
xchg
xor
cmp
(bad)
adc
pop
cmp
sub
(bad)
and
arpl
pop
push
clc
fst
dec
xor
repz
fstp
sbb
or
jmp
lea
sbb
enter
ins
push
fcmove
adc
and
add
and
push
imul
or
mov
arpl
ret
mov
and
fsub
(bad)
push
aas
sub
and
leave
inc
xor
xchg
pop
or
and
push
dec
add
xchg
pop
outs
nop
fcomp
push
xor
sbb
(bad)
cwde
push
sbb
or
dec
cmps
xchg
add
and
add
pop
cmp
add
add
push
call
adc
xor
mov
sub
xor
sbb
pop
out
pop
mov
es
mov
ja
enter
lods
jp
jo
js
fst
mov
rol
push
and
lock
test
jns
aas
push
push
sbb
sub
test
add
test
mov
or
fwait
aam
sbb
fisub
sbb
sbb
(bad)
out
jl
xor
and
cld
dec
jmp
add
and
mov
push
(bad)
jno
push
out
jmp
in
fild
scas
daa
ss
sbb
cmp
and
xor
lock
scas
call
dec
dec
inc
test
xor
das
sbb
sbb
add
sub
xchg
add
jb
push
cmp
sub
or
cmc
scas
pop
mov
icebp
fst
push
out
jmp
sbb
push
cmp
lahf
sti
test
inc
ins
lds
and
fistp
fs
sub
and
hlt
cmp
test
rol
daa
or
add
js
hlt
adc
lods
and
out
test
adc
dec
dec
test
adc
push
adc
aaa
add
push
ss
mov
or
test
push
add
cwde
shl
sub
xor
dec
dec
shl
cmp
xlat
loope
push
aaa
cmc
cmps
pusha
jnp
cmp
sahf
xor
mov
int3
dec
jno
adc
repnz
ret
xchg
xchg
mov
movs
and
mov
aad
and
or
movs
add
rol
inc
sub
and
and
push
jo
ins
sub
aas
mov
cs
inc
add
sub
adc
cs
mov
xor
imul
sbb
dec
cs
dec
sbb
sar
mov
jns
add
inc
add
xor
out
jmp
push
inc
add
shl
sbb
repz
sub
sbb
push
pop
push
mov
or
add
ror
ds
mov
push
pop
(bad)
je
adc
add
outs
ret
clc
imul
in
or
pop
adc
push
dec
gs
lods
sub
pop
inc
jne
leave
and
loope
xor
adc
adc
mov
dec
cwde
inc
push
sar
push
cs
or
pop
cwde
mov
dec
mov
pop
mov
nop
mov
cmp
inc
mov
lods
adc
and
dec
jl
inc
adc
inc
enter
jbe
shr
in
call
jbe
rcr
ds
nop
rcr
add
inc
rol
mov
pop
add
and
movs
hlt
mov
in
fidivr
pop
mov
jns
mov
push
xchg
jge
mov
xor
sbb
fst
inc
inc
cmp
dec
jecxz
adc
cmps
add
dec
repz
cmps
add
jecxz
addr16
push
es
mov
add
lock
inc
dec
out
dec
sub
pusha
sbb
rol
sub
scas
adc
jb
xlat
lds
adc
fisttp
out
mov
(bad)
enter
jecxz
push
test
cld
sub
stos
cld
out
cmp
pushf
cmp
or
repz
sbb
dec
pop
and
xlat
bound
cli
adc
push
push
movs
popf
jne
enter
jo
sub
test
test
and
mov
shl
lods
adc
mov
mov
cwde
(bad)
adc
push
inc
add
mov
push
or
jge
inc
sub
push
dec
arpl
pop
xor
dec
daa
or
mov
addr16
jge
enter
imul
mov
pop
shr
(bad)
xor
fild
inc
sbb
addr16
out
xchg
xchg
das
push
inc
push
add
inc
das
push
add
dec
js
pop
mov
lahf
jg
sbb
sub
inc
lahf
pop
or
xor
pop
adc
daa
ss
adc
inc
sub
pop
mov
jmp
or
pop
adc
imul
data16
sub
mov
retf
pusha
lods
fdiv
outs
sahf
ins
ret
pusha
push
mov
aaa
fwait
loop
sub
mov
dec
mov
in
xchg
jg
push
dec
mov
enter
jecxz
lock
push
in
idiv
cmp
xchg
leave
sub
jmp
fidivr
jmp
pop
jne
add
and
push
rcr
pop
xor
xchg
mov
imul
cwde
mov
out
stos
jge
jmp
sub
jmp
arpl
jb
mov
js
pop
lea
pop
jne
mov
bound
jo
and
sbb
inc
jl
mov
cmc
add
and
or
adc
sbb
xor
dec
sub
inc
sti
iret
jl
adc
sub
mov
sub
mov
(bad)
push
imul
push
xor
jae
or
dec
push
mov
fcomp
and
into
in
jns
pop
addr16
daa
mov
ror
pop
add
imul
scas
or
cmp
(bad)
retf
sub
sub
inc
inc
sub
(bad)
lea
out
pop
adc
push
cmp
inc
or
lds
test
inc
mov
push
xchg
cmp
loopne
fild
scas
jns
test
cmp
cmp
repz
addr16
lahf
pop
shr
sub
sub
outs
sub
fimul
adc
lock
jmp
sub
push
in
xchg
pop
or
sub
arpl
xchg
inc
adc
cmp
mov
nop
cli
sub
xchg
inc
(bad)
lods
add
rcl
jge
add
into
aas
and
pusha
pop
inc
cs
pop
scas
push
jo
inc
mov
or
push
add
mov
sbb
push
sti
cmp
jnp
out
or
xchg
jbe
jp
xchg
push
mov
iret
add
push
jp
idiv
jno
lahf
je
and
shr
jbe
ficom
pusha
std
mov
inc
lock
lods
sub
movs
(bad)
pop
fsub
xlat
ds
retf
pop
jnp
pop
lds
inc
and
mov
in
test
les
jecxz
inc
inc
jmp
sub
jg
adc
add
pusha
push
fsub
mov
daa
(bad)
fdivr
and
(bad)
mov
daa
call
sbb
xchg
das
lock
sbb
pop
rcl
or
retf
sub
addr16
cmp
jne
fistp
outs
icebp
xor
jg
inc
movs
aaa
jmp
sbb
cmp
mov
cli
dec
retf
jne
mov
test
xchg
sub
jno
iret
jp
gs
pop
pop
ret
ja
cmp
xchg
je
stc
or
add
cmp
jge
add
in
push
sbb
adc
sar
iret
loope
and
push
sbb
push
add
xor
and
sbb
lods
mov
shl
(bad)
int
into
pop
mov
in
pop
adc
cmps
jne
or
xchg
add
xchg
adc
push
retf
adc
lods
mov
or
pusha
push
movs
es
dec
add
or
sbb
cmps
fst
hlt
sbb
dec
adc
sub
cmp
mov
and
fsub
and
mov
mov
es
or
sub
in
pusha
sar
xchg
fiadd
or
mov
push
stc
sub
nop
jle
es
fdiv
xor
cmp
or
lea
(bad)
(bad)
daa
jecxz
je
xchg
push
or
outs
xchg
popa
mov
jno
(bad)
jl
or
or
add
adc
mov
lock
cmp
loop
dec
and
push
dec
mov
push
sub
sub
lods
in
jnp
xor
test
and
daa
leave
ins
in
xlat
sbb
cmps
sahf
aam
jmp
cmps
or
loopne
das
inc
add
or
mov
adc
jg
aam
idiv
mov
jo
(bad)
sbb
lods
push
add
add
sub
test
out
dec
push
scas
je
out
repz
call
rcl
(bad)
inc
imul
push
iret
inc
cmp
cwde
(bad)
jae
cmp
xor
inc
adc
jb
fcom
dec
add
xor
outs
js
inc
mov
push
pop
push
imul
aad
vpunpckhbw
dec
jp
push
xchg
sbb
mov
jne
mov
int
pop
jecxz
pop
sbb
int
int
repz
(bad)
sub
mov
clc
mov
push
dec
bnd
sub
mov
and
cli
push
idiv
sub
inc
jne
sbb
cmps
xchg
mov
dec
test
sub
add
inc
lock
pop
adc
or
enter
add
push
xor
int3
xor
fsub
mov
pop
ds
cmp
pop
loop
inc
(bad)
cmp
sbb
cli
popa
fxtract
into
mov
jle
push
movs
pop
mov
and
adc
add
mov
adc
mov
(bad)
jg
jne
mov
jmp
jbe
dec
mov
mov
movs
in
call
push
adc
push
inc
xor
pop
iret
sar
inc
jmp
xchg
mov
cmp
pusha
push
out
jne
inc
inc
cmps
call
xchg
lods
ret
push
mov
jne
and
push
or
stos
pop
cmps
setno
or
nop
push
adc
test
js
jmp
(bad)
es
sub
mov
push
mov
adc
sub
sub
pop
add
mov
les
sub
pop
enter
jecxz
push
in
cmp
adc
imul
xchg
pop
inc
xor
push
mov
add
and
sub
imul
sbb
arpl
sub
aam
mov
cmp
ror
add
add
xor
into
js
adc
sbb
jo
mov
pop
mov
adc
sbb
adc
xor
js
inc
mov
sar
test
xchg
push
xor
dec
add
outs
sbb
(bad)
loope
and
pop
xchg
lahf
fsub
dec
loope
lea
adc
add
jmp
sbb
shr
dec
xor
jne
adc
fmul
jecxz
loopne
xchg
cmps
test
popa
inc
xor
movs
mov
push
lea
add
ins
test
ss
mov
mov
cmp
enter
dec
cwde
or
enter
pop
and
push
loope
inc
ficom
add
adc
mov
test
inc
mov
je
or
add
or
(bad)
cmps
add
inc
pushf
int
mov
push
mov
(bad)
mov
push
jmp
pop
dec
add
push
push
mov
fsubr
push
test
mov
sub
mov
lods
rcl
sub
iret
jne
sub
adc
movs
ret
cmps
aam
mov
add
sub
jb
btc
pop
iret
mov
mov
mov
je
add
sbb
inc
fs
xchg
ret
add
test
call
std
cmp
push
cmp
jne
mov
push
cmp
jne
cmp
inc
add
movzx
(bad)
mov
cmp
sbb
fmul
adc
and
mov
mov
ins
or
pop
xchg
(bad)
xor
sub
(bad)
xor
mov
pop
push
fidiv
xchg
mov
and
test
out
rol
inc
aas
push
or
xchg
xchg
cld
inc
sti
icebp
add
mov
inc
adc
fdivr
cmp
les
adc
bound
pop
iret
xor
ror
jg
add
lea
(bad)
movs
inc
dec
inc
lea
and
pop
add
out
cmp
add
dec
sub
jo
in
adc
dec
test
outs
and
sub
pop
adc
or
call
adc
push
shr
sbb
adc
pop
mov
fcom
and
push
add
mov
mov
cmp
pop
cmp
neg
push
xor
cmp
inc
xchg
and
sub
leave
retf
dec
arpl
out
inc
jmp
adc
mov
jo
mov
sub
cmp
add
mov
cmp
xchg
out
ins
pop
pop
inc
je
stos
movs
cmc
enter
and
and
add
adc
call
out
data16
sbb
dec
push
leave
add
ss
jbe
add
adc
push
adc
test
xor
cmp
into
sub
(bad)
dec
and
jl
shl
test
xchg
mov
sbb
mov
or
add
mov
sub
nop
(bad)
in
dec
xor
mov
inc
icebp
inc
add
lea
xchg
inc
jne
ret
and
fwait
inc
add
jnp
add
call
xor
mov
test
js
sbb
fidivr
xchg
sbb
and
or
cmp
pop
iret
outs
bound
pop
jae
mov
cld
jnp
mov
mov
adc
xchg
inc
dec
mov
pop
cdq
add
add
inc
add
mov
push
mov
jle
cmp
pop
add
adc
es
xchg
add
push
pop
mov
ficom
das
xor
cs
cmp
outs
aam
clc
cmp
push
lahf
or
inc
popa
jne
pop
leave
mov
adc
xchg
fcomp
and
sbb
or
and
test
ss
nop
lahf
lahf
das
inc
ss
push
movs
fdiv
inc
sbb
pop
inc
inc
(bad)
jp
sub
add
scas
sbb
cmps
sub
in
fstp
mov
dec
fs
pop
jmp
loopne
xor
and
pop
test
and
sar
ror
add
xlat
cwde
add
add
test
inc
pop
jns
push
sbb
cmp
retf
mov
xchg
call
xchg
mov
fisubr
es
fcomp
mov
in
dec
dec
(bad)
aad
mov
jo
mov
out
ret
movs
repz
dec
ja
xchg
and
sub
imul
push
mov
pop
fwait
sti
push
sub
and
lock
and
add
sbb
adc
sub
rol
add
or
mov
cmps
aad
sub
lock
mov
call
mov
xchg
cmp
es
test
push
adc
jmp
movs
adc
push
mov
push
hlt
and
es
pusha
or
repnz
scas
jbe
fmul
cmps
pop
jmp
je
(bad)
jno
mov
sbb
sub
xchg
iret
add
(bad)
(bad)
stc
das
xor
test
setne
mov
adc
inc
les
fistp
iret
push
xlat
and
sbb
mov
or
std
sti
xor
or
add
xor
sbb
ret
dec
add
xor
cmps
xor
sbb
cmovbe
cli
inc
mov
push
test
je
pop
jnp
fwait
cmp
and
sbb
and
adc
or
or
shl
popf
sbb
sub
dec
movs
(bad)
mov
sub
cmp
and
cmp
cwde
sbb
pop
ret
xchg
add
rcr
mov
aam
(bad)
imul
movs
xor
call
xlat
cmc
mov
fmul
mov
cmps
ror
cwde
pop
out
sub
push
cmp
push
outs
jae
cmp
adc
sahf
sub
mov
inc
loop
mov
int3
mov
or
mov
add
out
push
sub
mov
aam
mov
adc
pop
pop
mov
dec
mov
mov
and
ins
lods
jge
inc
imul
loope
push
add
mov
dec
dec
(bad)
jmp
cmps
popf
ds
pop
dec
fcmovnu
mov
and
or
into
mov
dec
call
inc
test
aas
sub
sub
test
push
mov
scas
or
mov
mov
dec
mov
imul
ret
js
cmp
xchg
hlt
clc
scas
pop
jp
push
sbb
cmp
cmc
mov
ss
push
adc
out
jge
pop
cmps
dec
push
dec
retf
add
nop
rcr
add
clc
dec
lahf
and
fs
inc
jle
test
push
cli
cmp
push
pop
or
push
mov
popf
pop
push
and
pop
movs
pop
cmc
dec
push
in
repz
mov
ds
push
add
test
fsubr
push
mov
add
jl
add
push
xchg
add
sbb
ret
jmp
and
push
inc
aaa
sbb
fist
jne
xor
sub
mov
aam
leave
add
add
push
dec
lock
in
jmp
adc
xchg
pop
(bad)
fnstsw
(bad)
pop
xor
xchg
jmp
sbb
and
test
adc
popf
and
adc
test
xor
dec
arpl
(bad)
sti
jle
sub
inc
xchg
dec
dec
xchg
mov
out
(bad)
push
loope
dec
scas
mov
inc
or
adc
inc
jl
jg
(bad)
fdivr
xchg
or
popa
jb
or
adc
and
or
sbb
retf
cld
xchg
xor
daa
or
push
pop
or
(bad)
sbb
je
or
push
mov
inc
sbb
cmp
mov
lods
ins
sub
sbb
sbb
sub
cmp
mov
sbb
push
xor
push
rcl
push
(bad)
std
das
push
fsubr
pop
sbb
jmp
mov
(bad)
sbb
add
adc
push
adc
in
dec
jb
sub
sbb
adc
cmp
(bad)
mov
or
pop
rol
inc
cmp
jg
imul
jmp
dec
push
inc
add
lods
mov
or
jmp
aas
ret
or
xor
cli
ss
inc
xchg
jg
pop
cmp
xor
sub
or
clc
pop
ficomp
movs
lods
ret
dec
rcr
dec
mov
rol
pop
movs
sbb
in
and
dec
or
fadd
or
(bad)
pusha
add
mov
cwde
or
gs
popa
lods
mov
stc
jecxz
les
hlt
add
or
es
jmp
sbb
or
inc
lahf
pshufw
jne
(bad)
sbb
inc
ins
test
cmp
cld
sahf
xor
push
enter
and
inc
iret
xchg
aaa
lock
ror
sbb
sbb
out
pushf
xchg
dec
int3
push
sbb
add
rcl
enter
push
das
in
dec
jnp
mov
shl
inc
add
add
mov
ss
jmp
adc
retf
lea
pop
pop
push
div
mov
jo
mov
inc
or
inc
inc
pop
mov
xor
mov
jne
test
sahf
lahf
lock
inc
add
and
cmp
adc
cmp
sub
pushf
add
ins
mov
sub
xor
invd
loope
jo
pop
outs
mov
mov
or
sbb
jecxz
das
pop
xor
cmp
lds
aam
add
loopne
mov
aam
jecxz
clc
outs
add
sbb
push
xor
sub
pop
add
and
mov
pop
xlat
ror
cmp
lods
jnp
pop
mov
add
es
std
add
push
stc
call
sbb
sbb
test
add
fdiv
nop
mov
addr16
or
pop
add
fisubr
pop
popa
jns
push
mov
dec
sbb
push
(bad)
cmp
arpl
sbb
in
and
push
jecxz
adc
mov
and
pop
pop
mov
inc
xor
cmp
jne
sbb
pop
or
sub
xor
cs
rcl
pop
cld
mov
add
jb
add
jmp
std
test
fiadd
dec
dec
jp
add
pop
imul
xchg
push
xor
popf
dec
loop
movs
jge
cmp
inc
mov
push
and
xchg
mov
cmp
movs
fiadd
loop
repnz
xchg
jp
xor
xor
xchg
jg
sub
pop
adc
aam
xor
ret
jg
add
mov
and
cmp
ret
mov
mov
jg
xor
push
xchg
lahf
jl
dec
add
sbb
add
call
or
mov
cmp
adc
nop
out
mov
out
or
aam
cmp
sbb
jge
jae
pop
aaa
xor
js
cmc
popa
sub
je
outs
jnp
pop
cmp
retf
push
push
push
lock
lock
enter
in
cs
popf
dec
je
push
retf
adc
inc
dec
sbb
jmp
adc
xchg
and
mov
pop
adc
leave
xchg
(bad)
or
sub
xor
or
retf
add
sub
xor
adc
cdq
sub
adc
xchg
and
add
sub
xchg
lock
popf
test
xor
sbb
adc
mov
into
lea
sbb
xchg
scas
sub
call
xor
dec
daa
and
loopne
sbb
movs
cmp
xlat
mov
lock
mov
scas
retf
push
sub
movs
mov
fnstenv
mov
sub
ins
sbb
xor
sbb
arpl
gs
call
and
inc
stc
shr
mov
nop
xchg
pusha
setae
mov
cmp
sbb
in
clc
or
jne
push
cwde
pop
aas
cmp
les
fcomi
add
loop
mov
add
dec
dec
rsqrtps
shr
cmp
and
pushf
mov
push
ds
push
sub
xchg
adc
mov
test
xchg
sbb
pushf
dec
inc
shr
adc
js
inc
outs
mov
dec
adc
retf
add
adc
inc
mov
and
inc
mov
test
add
and
dec
mov
pop
xchg
dec
repnz
xchg
push
adc
add
rcl
stos
fld
adc
int
push
and
call
cli
nop
jno
(bad)
(bad)
dec
das
mov
xor
push
add
or
pop
out
into
(bad)
call
push
aam
jge
inc
push
int
mov
cld
outs
lods
stos
add
jno
js
adc
test
in
sar
(bad)
jmp
push
inc
cmp
je
mov
add
xor
dec
inc
call
mov
sub
xor
inc
in
and
mov
addr16
loopne
loopne
mov
xor
and
cmp
cwde
enter
shl
cmp
sbb
or
in
add
daa
push
and
or
push
out
adc
and
adc
test
and
(bad)
cdq
or
ins
xor
sub
or
mov
mov
scas
ds
cs
mov
xchg
test
aam
mov
shl
push
add
popa
or
jno
add
jne
loope
rol
(bad)
xor
test
add
sub
inc
lods
or
dec
rcl
mov
mov
clc
sbb
dec
jne
test
xor
add
add
outs
add
mov
mov
in
mov
inc
in
es
add
push
inc
sub
mov
push
outs
push
dec
into
test
xor
in
push
ror
push
arpl
adc
dec
mov
xchg
dec
xchg
mov
js
inc
and
jo
dec
or
nop
jno
cwde
jp
jne
adc
push
mov
xor
or
enter
or
and
cmp
and
mov
pop
aam
lahf
pop
cmovb
inc
or
in
nop
daa
push
sbb
xchg
pop
pop
in
mov
mov
inc
pop
adc
pop
ds
cmps
and
dec
rol
push
add
movs
call
and
cmp
pop
inc
daa
addr16
inc
sub
fadd
inc
or
and
sbb
sub
arpl
add
adc
(bad)
rcr
cmc
jns
es
shld
cs
jne
push
aas
xor
cmp
inc
xor
inc
jmp
cmp
mov
dec
or
icebp
push
ret
sbb
push
cs
inc
movs
aad
hlt
(bad)
sub
pop
xor
loope
das
add
sbb
outs
retf
push
sbb
mov
data16
push
add
push
sub
and
dec
or
scas
adc
or
mov
push
arpl
push
or
adc
test
ret
popa
xchg
sub
lods
movzx
cmp
or
xchg
push
and
lock
loope
sbb
lea
lahf
xchg
popf
or
pop
sub
sbb
xchg
fist
fst
xchg
adc
(bad)
loop
ud0
mov
or
ret
pop
xchg
xchg
inc
and
xor
or
push
and
add
add
test
mov
loopne
pop
xchg
or
sub
loop
pop
js
add
pop
adc
add
les
fst
out
imul
data16
dec
(bad)
addr16
stos
sbb
push
rol
daa
adc
pop
sbb
adc
xor
cdq
lds
sub
ret
jnp
pusha
lds
or
jmp
cmp
xchg
xchg
sub
add
in
fistp
add
lods
cmp
loop
mov
in
lea
loopne
mov
inc
dec
shl
sub
dec
sub
in
inc
fcmovne
inc
fisub
add
es
(bad)
inc
adc
outs
xchg
lar
xor
pop
and
xor
leave
into
rcr
aad
pop
outs
nop
dec
sub
mov
mov
mov
cwde
sbb
dec
das
lods
mov
push
pop
mov
xor
frstor
lea
not
lds
ja
shr
ror
dec
adc
pusha
aas
(bad)
js
cmp
ds
mov
cmps
movs
sar
clc
fsub
jp
aaa
mov
xchg
push
mov
inc
jb
pop
iret
fsub
iret
sub
pop
retf
cmps
adc
daa
xchg
or
adc
adc
ret
ud2
push
loop
cmp
jne
jne
aaa
mov
inc
pop
and
push
test
(bad)
clc
aas
add
add
call
xor
push
or
data16
sbb
aam
jecxz
pop
sbb
jbe
add
sub
call
pmulhuw
push
and
lea
hlt
imul
adc
out
data16
ror
dec
add
cmps
rol
add
jle
fcomp
rol
clc
test
scas
lahf
mov
ror
adc
xor
sub
sub
push
neg
adc
cmp
test
push
xchg
dec
cmps
scas
add
fiadd
std
lods
xor
sti
add
xchg
add
or
mov
ins
push
scas
or
add
mov
sub
adc
jge
lods
icebp
addr16
imul
inc
mov
or
in
dec
add
mov
repnz
jecxz
push
push
and
out
pop
pop
retf
sub
dec
ss
and
pop
adc
ins
inc
add
push
pop
add
out
call
shr
rcr
dec
jl
daa
adc
push
rol
lods
call
or
inc
xchg
mov
mov
lock
jne
adc
loop
xor
or
repz
imul
call
ins
daa
lods
test
cmp
push
je
mov
(bad)
fs
sub
xchg
add
sbb
movs
fistp
lea
adc
and
shl
jge
lds
sbb
cmp
inc
loopne
imul
cld
xor
push
add
aad
adc
imul
sbb
retf
inc
js
dec
ja
add
lods
je
jno
pop
neg
mov
in
sbb
dec
popf
or
fwait
xor
add
dec
pop
or
xchg
push
xor
popa
std
(bad)
pop
push
jle
lea
stos
add
pop
mov
or
add
std
push
cmps
pop
mov
sub
push
imul
push
jmp
or
add
test
xor
sbb
inc
in
int3
enter
pusha
or
ins
lods
add
adc
xchg
outs
and
sub
or
stos
popa
push
rcl
pop
add
lods
pop
daa
popa
adc
adc
add
or
push
cmp
xor
test
dec
pop
adc
jl
push
hlt
cmp
mov
addr16
lahf
and
ins
or
and
out
int3
or
jae
sbb
inc
sbb
sbb
mul
rol
shl
sub
pop
data16
or
sbb
pop
(bad)
mov
xlat
cmps
jo
mov
sbb
sbb
mov
jmp
js
ret
and
push
jg
loope
cs
and
push
and
sbb
cmp
push
xor
add
xchg
inc
sbb
movs
sbb
mov
pop
mov
sbb
loopne
or
lock
mov
and
cs
imul
inc
and
bound
push
adc
inc
pushf
mov
test
mov
fadd
stc
movs
pop
xchg
mov
adc
adc
je
jecxz
clc
and
pop
adc
rcl
mov
cmp
retf
dec
jp
mov
cs
sti
(bad)
pop
and
(bad)
daa
movs
add
xor
lock
test
int
mov
not
mov
and
sub
fadd
mov
xor
and
jo
xchg
add
add
mov
fild
push
popa
jne
push
(bad)
xor
sub
(bad)
push
push
or
popa
stos
lods
or
xcrypt-ecb
cmps
or
faddp
(bad)
push
iret
xchg
sbb
ret
lock
gs
in
xchg
add
stos
lds
inc
movs
(bad)
jne
xor
jns
pusha
aaa
test
cwde
dec
jne
xchg
add
hlt
jne
add
sidtd
movs
imul
push
mov
in
jp
push
push
mov
cmp
jge
fild
ja
test
jne
cmp
cmps
push
sbb
pop
test
jno
aaa
or
sbb
in
gs
mov
mov
push
cwde
add
inc
sub
mul
push
ja
into
mov
enter
inc
or
mov
lods
dec
xchg
cmps
push
or
repnz
push
pop
cmps
lods
ss
mov
and
xchg
hlt
dec
popa
jo
push
sbb
or
retf
pushf
jmp
pop
cmp
and
ror
(bad)
add
rcr
mov
cmp
mov
cld
xchg
es
stos
ret
daa
scas
out
lods
lahf
rcpps
adc
call
sub
pop
push
add
es
xchg
push
pop
adc
movs
adc
dec
movs
or
pop
push
and
sbb
jno
adc
push
mov
dec
sub
xchg
push
mov
and
sbb
fisub
sbb
call
ror
push
push
iret
and
aam
sub
sub
int3
mov
fsub
leave
fild
mov
pop
pop
imul
(bad)
push
sub
xor
mov
jle
or
out
mov
xchg
pop
dec
and
sub
cli
(bad)
addr16
daa
add
adc
mov
add
std
adc
mov
and
lahf
add
dec
data16
jne
push
imul
and
das
jmp
push
push
xchg
xchg
sbb
cmp
pop
mov
or
xor
mov
sub
jb
adc
cmp
cwde
cmp
retf
mov
popa
add
ret
movs
xchg
cwde
dec
(bad)
or
inc
jne
inc
cmps
inc
inc
dec
nop
fild
adc
or
inc
xchg
mov
jo
(bad)
mov
push
arpl
adc
pop
inc
jmp
cmp
sbb
mov
icebp
lods
inc
push
pop
cwde
or
shl
xchg
dec
xchg
sbb
mov
add
push
mov
or
in
add
jmp
ror
imul
mov
jp
push
add
adc
push
call
cs
sub
push
adc
pop
jmp
add
jb
pop
mov
adc
jmp
mov
out
jle
pop
in
cmp
dec
cmp
dec
fild
xchg
daa
or
sub
imul
adc
xchg
or
cmp
dec
push
sbb
daa
push
sub
jmp
add
sbb
adc
imul
sbb
inc
test
push
popa
dec
xor
xchg
pop
or
(bad)
xor
jne
scas
shr
adc
or
das
jo
es
ja
nop
loope
xchg
mov
sbb
jnp
es
xchg
jp
xor
cmc
or
push
mov
sar
in
sbb
adc
ror
add
jmp
test
mov
mov
inc
stos
fsubr
or
ss
pop
lock
push
dec
in
inc
test
push
sub
pop
imul
or
shr
and
add
ret
add
inc
call
cmps
jae
cwde
sub
popa
dec
add
es
je
cmc
push
push
jo
mov
xchg
mov
test
cmp
in
jno
out
xor
cmp
out
inc
pop
(bad)
jp
xor
pop
inc
sbb
leave
test
jo
fsubr
mov
pop
hlt
cmp
ret
mov
ins
call
pop
adc
js
sbb
mov
or
sub
pop
ins
push
outs
and
outs
pop
in
dec
and
jle
and
inc
inc
xor
jmp
retf
jne
add
xchg
repnz
rcr
inc
retf
ret
outs
shr
fs
inc
pop
adc
or
shl
fnop
sti
fild
push
nop
aam
or
outs
jne
sub
iret
outs
pop
(bad)
leave
add
inc
sub
sbb
inc
adc
ret
pop
das
pop
jb
mov
mov
inc
cmp
xchg
xchg
test
cmp
mov
dec
dec
(bad)
mov
loopne
mov
adc
pop
jmp
sub
and
mov
xchg
daa
xchg
jo
int
imul
pop
pop
ret
call
lds
dec
push
or
or
(bad)
test
popa
cmp
sub
mov
inc
ret
ss
inc
adc
and
push
sti
jecxz
pop
lahf
fwait
(bad)
sbb
ret
push
js
or
out
rep
int3
push
das
xor
jbe
mov
int3
out
inc
js
xor
nop
daa
adc
cs
dec
mov
push
push
loop
mov
jge
adc
push
adc
mov
cmp
out
out
sbb
mov
nop
pop
test
daa
mov
loope
test
add
sbb
mov
inc
fcomp
pop
or
popa
or
jl
arpl
mov
mov
pusha
mov
or
lock
fwait
xor
aad
add
inc
pop
and
jne
imul
xchg
sbb
jne
mov
pop
jae
in
sbb
cs
xchg
inc
outs
fsubr
or
ja
or
add
jae
fst
or
jmp
cmp
dec
mov
sub
ret
and
add
inc
mov
sub
adc
cli
call
movs
fscale
or
jmp
mov
out
inc
ja
test
mov
aas
inc
add
adc
mov
call
mov
and
add
cmp
jle
aas
ins
int
jb
mov
in
arpl
and
xchg
and
(bad)
(bad)
fidiv
and
add
push
mov
movs
cmps
add
sub
test
ins
addr16
lods
comiss
push
sub
ret
cmp
nop
cmc
sahf
and
rcl
or
inc
cmp
loope
and
repz
adc
fs
test
in
push
out
ror
dec
dec
in
mov
and
push
pusha
in
xchg
xchg
mov
jne
popa
adc
popa
sbb
push
shl
mov
stos
arpl
pop
rcr
xor
cmp
mov
adc
cmp
stos
aad
or
xlat
fst
xchg
ret
pop
xor
mov
mov
ret
ss
mov
or
cmp
dec
jmp
sub
les
imul
repnz
cmp
lods
pop
pop
test
out
xor
aaa
clc
jp
cmp
mov
and
push
cmp
icebp
test
je
mov
xchg
or
ret
or
add
pusha
mov
mov
out
daa
push
sbb
pushf
clc
add
sbb
adc
call
jmp
cmp
sub
or
nop
adc
pop
pop
push
sub
in
or
jnp
cmp
test
and
adc
cld
dec
mov
adc
inc
inc
inc
inc
inc
js
xlat
sub
dec
ins
sub
mov
and
out
pop
js
(bad)
bound
test
xor
mov
xchg
add
or
xor
xlat
cli
pop
inc
cs
jno
push
mov
jne
dec
adc
jo
add
int
xchg
in
test
scas
jp
mov
push
jle
int3
pop
in
jecxz
xchg
lock
pushf
mov
sub
pop
lock
jno
sahf
(bad)
or
jnp
inc
push
ds
rcr
adc
dec
and
or
or
mov
xchg
cmp
pop
sbb
cwde
jge
add
pop
pushf
stc
xchg
adc
sbb
jp
sbb
mov
retf
aam
outs
stos
retf
imul
popf
mov
add
sbb
cmp
xor
or
xchg
arpl
loop
cs
lahf
cdq
in
les
and
ja
add
cwde
(bad)
lock
loopne
adc
mov
sbb
jmp
xor
adc
ins
imul
or
xchg
loop
dec
cmps
jne
ret
mov
xor
mov
pusha
jno
fs
iret
fst
dec
(bad)
call
repz
jb
add
cmp
jle
add
xchg
out
jmp
hlt
add
or
test
mov
mov
stos
int
fs
push
xor
pop
shl
pop
aaa
pop
lahf
mov
lahf
aad
sbb
mov
shl
lods
xchg
mov
push
stc
push
and
jge
mov
mov
pop
movs
cdq
in
add
inc
cs
call
xchg
cmp
xchg
out
in
movs
sub
push
clc
clc
lock
test
or
and
dec
cmps
call
outs
mov
fmul
inc
sahf
addr16
jp
enter
xchg
pop
and
push
sbb
in
(bad)
test
and
inc
(bad)
push
mov
mov
xchg
imul
ret
push
push
adc
js
push
movs
jmp
inc
fdivr
dec
arpl
pop
cmp
pop
fild
ss
ror
xchg
xor
add
add
mov
cld
add
sub
mov
out
jmp
add
add
inc
adc
or
xchg
int3
int3
mov
pop
jae
sub
mov
add
mov
pop
sar
call
retf
(bad)
mov
ja
sar
scas
adc
loopne
cmp
jo
inc
cs
lahf
jnp
mov
push
and
jle
adc
jmp
sbb
dec
push
cs
add
mov
sub
xor
dec
fdivr
fdiv
mov
mov
aam
sbb
enter
lds
(bad)
jmp
call
inc
jle
sbb
add
fsub
shl
dec
fmul
or
dec
pop
movs
imul
clc
sbb
mov
aam
les
push
rcr
and
or
hlt
repz
test
push
adc
int3
add
sub
inc
xlat
push
ins
inc
and
adc
pop
repnz
jne
mov
mov
dec
test
mov
pop
pop
xor
scas
and
xor
int3
inc
add
mov
loopne
popa
mov
jnp
add
push
shl
mov
jne
add
sbb
mov
fld
mov
sbb
add
in
in
sub
in
fidiv
mov
dec
lods
pop
test
sub
and
mov
jne
sub
mov
sub
mov
loopne
jge
call
adc
jne
iret
push
(bad)
pop
xchg
shr
loopne
jne
std
mov
and
rol
ret
add
dec
and
sub
(bad)
mov
dec
or
sub
stc
or
cmps
add
ret
xor
lea
imul
nop
dec
movs
imul
dec
inc
cdq
hlt
inc
add
dec
sub
push
mov
cmp
mov
cmp
dec
xchg
mov
enter
inc
in
lods
dec
sbb
sbb
push
pusha
mov
test
push
mov
nop
lods
or
cdq
imul
imul
inc
push
add
imul
retf
cmp
adc
loope
mov
and
addr16
dec
xchg
add
adc
aaa
xor
inc
or
or
sub
push
or
adc
adc
std
mov
xchg
icebp
lods
xor
daa
ss
aas
xchg
xchg
nop
pop
xchg
pop
(bad)
imul
bound
push
lock
mov
push
aam
xchg
js
add
in
rol
scas
enter
lea
pop
jnp
int
or
cmp
sub
aam
xor
fmul
dec
hlt
push
cli
adc
js
add
sub
ret
adc
xor
nop
mov
clc
or
out
lock
sub
dec
mov
adc
sbb
push
add
xor
test
or
test
pop
cmc
push
mov
or
mov
or
div
stos
test
movs
lods
and
adc
int
(bad)
test
mov
fadd
fdiv
mov
push
leave
scas
loop
movs
xor
aam
popa
sbb
(bad)
cli
jl
sub
in
dec
in
pop
or
mov
(bad)
jmp
adc
sub
mov
sub
loope
pop
dec
and
add
dec
pop
mov
dec
aaa
dec
sbb
xlat
jl
push
sar
add
ret
push
and
inc
pop
ret
daa
and
cmp
movs
or
adc
mov
ins
xchg
arpl
adc
inc
call
jnp
(bad)
mov
scas
fwait
pop
sbb
pop
sub
(bad)
cmp
idiv
sub
push
mov
inc
ret
in
adc
and
sub
add
and
add
and
outs
popa
inc
mov
addr16
or
pusha
push
inc
sbb
outs
dec
mov
mov
push
pop
inc
fwait
das
repnz
shl
je
inc
sub
rol
push
or
daa
movs
push
add
hlt
sbb
into
das
or
xor
sub
lahf
cmp
into
add
xchg
xchg
xor
dec
xor
add
js
xor
les
adc
push
rol
or
test
sub
inc
addr16
out
jns
xchg
out
cmp
clc
je
or
outs
sahf
fnstenv
or
daa
dec
je
jg
add
fs
shl
cmp
mov
(bad)
jns
push
add
gs
(bad)
fisttp
bound
dec
jns
leave
(bad)
shr
mov
inc
outs
jne
push
call
fwait
lods
pop
lock
inc
sbb
jbe
imul
pop
xchg
dec
loope
mov
sbb
enter
dec
ja
or
pop
mov
dec
sub
inc
shl
pusha
sbb
lahf
lods
sar
push
push
and
cmp
mov
jl
dec
aad
jb
mov
call
mov
mov
dec
pop
add
add
cmp
dec
inc
cmp
xor
pop
sub
add
ss
inc
jo
sub
or
dec
push
outs
push
mov
in
jne
inc
xchg
imul
and
jmp
pusha
dec
sti
jmp
add
adc
or
dec
dec
ins
or
ins
mov
fsub
cdq
aam
push
inc
dec
add
add
mov
sar
and
xor
or
adc
ret
lock
sub
out
mov
or
push
add
inc
fdivr
add
retf
add
jae
and
in
(bad)
clc
movs
enter
or
jmp
adc
int3
mov
shr
jmp
dec
aad
or
push
pusha
js
jbe
push
push
add
addr16
lahf
dec
pop
push
dec
clc
loopne
push
loopne
mov
int
(bad)
xchg
mov
mov
or
or
hlt
add
mov
or
js
addr16
mov
in
or
cmp
inc
ins
arpl
jbe
pop
call
inc
int3
push
xchg
add
lock
rol
inc
bound
mov
enter
dec
push
xor
cwde
cmp
push
fiadd
add
cmp
ret
test
jb
mov
jbe
push
or
pusha
lea
int
jmp
dec
inc
iret
pop
adc
or
pop
or
and
les
stos
mov
lods
popa
sbb
sub
cdq
imul
jb
mov
outs
dec
adc
add
add
call
cmps
in
mov
add
in
jle
xchg
outs
inc
loope
outs
fstp
sbb
lods
pop
push
test
xor
fdivr
addr16
and
mov
dec
mov
sbb
retf
ins
fidivr
sbb
sbb
cdq
adc
add
in
dec
push
(bad)
clc
jge
cmp
sub
mov
jae
push
out
push
jnp
dec
add
jo
cmp
mov
xor
mov
xor
push
jle
adc
adc
pop
jbe
sub
sub
push
fld
push
fstp
pushf
inc
mov
dec
call
add
cmp
jmp
test
setl
jns
cmp
mov
jecxz
pop
or
adc
test
and
sbb
pusha
icebp
or
mov
sti
pop
inc
sub
rcl
clc
mov
xor
jnp
call
ss
stos
xor
cmp
xchg
ror
ror
pop
lds
(bad)
pusha
sub
pop
pusha
inc
cmps
mov
cmova
add
nop
add
add
cld
bnd
out
lock
push
inc
cld
mov
push
add
push
or
loope
sub
inc
push
in
or
dec
dec
ret
arpl
seta
(bad)
push
mov
cmp
in
add
movs
push
cmps
and
int3
ds
sub
jae
mov
sbb
js
dec
and
mov
pusha
add
pushf
in
cmps
lock
add
call
je
mov
stc
or
xor
fmul
les
adc
outs
xlat
sub
jmp
js
mov
inc
pop
jl
scas
mov
jmp
inc
sbb
adc
adc
(bad)
mov
jo
aaa
popa
je
retf
adc
imul
bound
scas
lock
push
cmp
mov
jne
js
hlt
pop
(bad)
xchg
inc
sbb
pop
push
cmp
sbb
cld
cli
pop
retf
adc
cmp
mov
test
nop
pop
fwait
and
inc
inc
cmp
cwde
mov
xchg
push
jo
pop
xor
mov
xchg
std
fistp
in
(bad)
cmp
ja
je
pop
test
je
das
sar
out
or
ret
or
aam
les
fcmovnb
mov
xor
in
add
(bad)
je
inc
popa
mov
cmp
loopne
aaa
and
lock
fadd
fistp
in
or
inc
mov
(bad)
lods
adc
dec
in
das
xchg
xchg
iret
or
je
xchg
mov
int3
mov
mov
mov
mov
push
(bad)
xchg
xchg
mov
adc
jbe
popa
adc
add
pusha
inc
das
push
out
or
push
add
sbb
(bad)
pop
outs
int
xor
and
cwde
popa
outs
aaa
rcr
ror
mov
fmul
xchg
pusha
add
int
cmp
dec
mov
jg
add
inc
sbb
dec
push
pop
sbb
ror
bound
iret
or
ret
sbb
fs
xchg
push
adc
add
inc
jns
(bad)
dec
sbb
inc
sub
xchg
daa
xor
push
mov
dec
sbb
xor
push
xor
fnstenv
inc
push
jmp
mov
popa
lock
inc
xchg
add
out
pop
inc
in
jecxz
adc
or
ins
mov
add
mov
dec
loopne
xor
gs
cmps
push
jmp
(bad)
clc
nop
dec
and
clc
test
adc
aaa
add
int3
(bad)
cwde
les
mov
inc
adc
and
stos
cmp
or
or
movs
ror
cmps
jmp
lods
and
scas
scas
(bad)
movs
or
sbb
adc
adc
adc
dec
adc
cmp
push
rol
sbb
cmp
jne
leave
inc
cmps
arpl
fsqrt
mov
ss
or
imul
cmps
inc
dec
dec
mov
sub
call
dec
pop
int
pop
mov
stos
int
aas
lds
call
jmp
cmp
push
add
shl
vmovups
dec
movs
xchg
lock
xor
add
test
mov
jnp
mov
and
and
sbb
inc
pop
add
mov
push
mov
data16
push
outs
lods
aaa
pop
mov
cmp
and
ins
cmp
add
daa
or
or
xchg
add
adc
push
aam
mov
push
push
or
adc
sar
popa
popa
outs
sbb
js
outs
sub
xchg
xchg
and
into
ss
adc
lea
cmp
and
push
pop
aas
inc
and
cld
popa
sbb
imul
xchg
adc
push
add
push
and
stos
sbb
lods
mov
ss
cmps
pop
out
jmp
aaa
cmp
add
dec
sbb
add
test
movs
push
adc
jecxz
js
mov
adc
fadd
xchg
push
push
mov
rcl
mov
sbb
pop
or
adc
mov
jo
cmc
test
fistp
je
and
inc
adc
add
enter
push
adc
push
push
nop
adc
in
sbb
jo
pop
test
jo
inc
js
dec
push
(bad)
lods
and
sbb
xchg
push
(bad)
mov
js
inc
sbb
dec
xor
jae
dec
add
lock
repz
adc
jmp
inc
and
inc
sbb
sub
inc
fbld
or
jae
cmp
xor
add
sub
aaa
pop
or
dec
push
sub
sbb
jg
cmps
mov
daa
cmc
sub
jle
adc
inc
sbb
jle
push
push
test
mov
jo
(bad)
popa
xchg
iret
pop
sbb
dec
dec
or
shr
and
sub
stc
jnp
cli
mov
imul
and
loopne
test
push
out
repz
mov
fs
or
or
push
cdq
sub
mov
das
or
nop
mov
or
sahf
push
inc
cmpxchg
mov
cmp
ja
(bad)
and
clc
xchg
inc
imul
and
in
mov
popa
out
mov
mov
bound
or
sub
cmp
cmp
inc
cmp
lahf
imul
push
xor
call
out
movs
mov
adc
cli
mov
add
add
push
and
push
scas
mov
into
ins
inc
sbb
sahf
jg
inc
jmp
lods
inc
xchg
pop
and
call
xchg
out
sub
push
pop
aad
or
or
jnp
in
imul
rcr
or
inc
movs
xchg
push
(bad)
lea
imul
clc
or
xchg
mov
sub
mov
ins
aam
cmps
pusha
mov
ret
call
aam
lea
push
pop
or
and
retw
dec
adc
add
xchg
mov
xor
mov
rep
jmp
push
add
stos
or
add
mov
mov
cli
ror
mov
(bad)
or
xor
or
inc
addr16
jae
ins
and
or
cmp
and
mov
not
or
fisubr
and
xchg
xor
aam
mov
lods
loopne
test
cmp
(bad)
sub
dec
je
test
adc
jl
push
add
lods
and
or
sub
rcr
and
mov
lds
push
pop
fwait
push
stos
inc
ror
inc
or
or
aam
pop
addr16
or
lahf
xor
and
je
jo
sub
and
shl
int3
lock
push
loopne
dec
or
sub
jnp
jp
cmp
test
adc
(bad)
dec
or
(bad)
jo
xchg
shr
sub
mov
adc
lods
jmp
xor
call
test
add
adc
add
cmp
clc
mov
push
ret
xchg
cmp
dec
xor
push
cmp
xchg
dec
inc
xchg
aaa
es
fistp
into
aam
cmp
aad
push
daa
pop
push
dec
retf
ja
mov
jmp
nop
shr
inc
inc
dec
xchg
daa
mov
retf
dec
loopne
push
add
or
or
fild
ror
and
mov
call
mov
xor
sbb
inc
xor
inc
mov
sbb
mov
add
cwde
retf
or
test
xor
ss
bound
push
mov
push
call
or
xlat
ins
sbb
push
adc
jne
or
lods
(bad)
mov
pop
adc
mov
shl
into
jo
bound
int3
jmp
mov
daa
sbb
mov
fwait
ja
fild
mov
dec
inc
sbb
retf
movs
fdecstp
mov
xchg
test
fidivr
in
sbb
and
add
add
ss
inc
cmps
imul
and
or
fwait
enter
or
pop
pop
out
loopne
and
sbb
movlps
inc
lods
push
aas
rol
push
and
inc
mov
add
jmp
adc
loopne
cld
loop
(bad)
mov
sub
sbb
(bad)
and
ss
fisttp
cmp
sub
add
inc
pusha
add
add
pop
inc
push
dec
sub
cmp
jge
xchg
out
add
adc
popa
adc
sar
dec
or
sbb
push
xchg
jg
idiv
cmp
sub
sbb
inc
push
movs
xor
or
add
and
mov
pop
push
fisub
xor
push
add
mov
ins
dec
sysret
sub
int3
and
mov
jecxz
inc
aas
test
mov
pop
or
daa
fidivr
inc
aaa
pop
fsubr
ror
das
and
sub
dec
cld
xchg
jo
adc
(bad)
cmp
adc
mov
add
mov
test
push
pop
nop
cmc
and
jle
call
xlat
inc
pop
inc
mov
in
cs
adc
adc
sbb
dec
cmp
nop
aam
cmc
sbb
and
enter
xchg
mov
je
(bad)
mov
push
aam
mov
mov
xchg
iret
xor
jge
jbe
pop
jmp
call
in
adc
rcl
lods
daa
push
lock
pusha
je
pop
ds
jp
cmp
push
call
xor
xchg
movs
pop
out
inc
xchg
dec
outs
xor
xchg
sub
mov
xor
sub
mov
pop
in
(bad)
lods
popf
jno
adc
mov
(bad)
jnp
in
popf
xchg
je
inc
(bad)
stc
push
lea
push
add
and
sub
rol
scas
jmp
jo
in
and
adc
push
je
addr16
pop
mov
ds
xor
jl
sub
(bad)
rol
or
shl
mov
add
xchg
add
mov
clc
xchg
xchg
(bad)
push
lea
cdq
xchg
pop
or
shr
clc
pop
cmp
cld
lock
mov
lock
push
xchg
jne
test
push
rcl
lock
ficomp
inc
addr16
push
dec
enter
mov
sbb
jae
ins
push
mov
nop
in
in
cmp
push
je
push
(bad)
lock
push
lea
ins
mov
push
and
add
popa
mov
push
adc
pop
or
xchg
adc
(bad)
pop
or
jle
mov
imul
fwait
out
scas
mov
and
sbb
outs
dec
jle
adc
cdq
and
push
mov
popa
imul
jbe
push
lahf
shl
fstp
lods
jmp
inc
call
or
inc
jge
inc
rcl
in
sbb
mov
and
leave
fstp
and
inc
sbb
lods
push
data16
and
push
push
mov
fisttp
fcom
or
sti
rol
enter
movs
sbb
mov
inc
inc
lahf
mov
sbb
mov
retf
sub
rcr
fs
add
add
popf
lds
adc
adc
ss
addr16
inc
es
fadd
pop
pop
rcl
xchg
cmp
adc
xor
inc
or
adc
nop
mov
cmp
sbb
movs
jb
inc
rcl
jo
or
in
in
adc
(bad)
adc
fnstenv
dec
and
loope
aaa
stc
cmp
dec
or
pusha
ret
mov
cwde
pusha
add
inc
stos
adc
mov
ins
cmp
les
pop
pop
int3
pop
sub
or
and
push
jbe
pushf
pop
out
add
or
or
aaa
inc
push
loop
dec
addr16
sbb
inc
in
(bad)
sbb
sahf
mov
push
inc
dec
mov
push
sbb
add
pop
inc
or
movs
ins
imul
jg
sub
inc
xor
sub
loop
not
jo
fmul
es
enter
add
js
fisttp
add
dec
imul
and
add
add
xchg
sbb
or
ror
loopne
test
inc
inc
cld
loopne
inc
jle
nop
mov
repnz
lea
imul
into
in
cmps
(bad)
clc
xor
cmp
sub
sub
retf
dec
inc
jecxz
mov
dec
sbb
adc
les
int
inc
jmp
xchg
test
fcom
out
cmp
sbb
leave
xchg
mov
jae
pop
packuswb
mov
dec
dec
cli
adc
xchg
mov
ins
adc
adc
lea
ins
sbb
in
dec
shr
jne
mov
movs
(bad)
pop
mov
or
js
push
xor
push
or
cmps
mov
shl
sti
or
pusha
pop
adc
add
and
push
jb
dec
ret
pop
or
push
jle
push
jp
das
cld
mov
mov
retf
js
or
or
sar
jns
adc
push
pop
and
add
dec
xchg
mov
sub
push
jne
add
cmp
push
hlt
add
or
mov
sti
pop
push
popa
cmp
dec
fild
push
xlat
or
mov
mov
cmp
lea
popf
or
pop
push
outs
sbb
test
or
mov
sbb
(bad)
test
xor
push
and
aaa
call
sub
cmp
inc
sub
mov
inc
pop
daa
leave
arpl
cmps
push
mov
cmp
sbb
(bad)
xchg
push
mov
or
loopne
mov
pop
in
mov
xor
addr16
hlt
lock
pusha
and
hlt
pop
xor
ret
aam
retf
add
stos
pusha
adc
push
out
nop
dec
push
cmps
push
mov
js
mov
jnp
outs
jne
mov
movs
pop
sahf
fs
mov
jp
sub
ins
xchg
add
mov
jns
sub
xor
xor
mov
pop
ficom
cmp
outs
pop
jge
or
adc
sbb
jecxz
test
mov
(bad)
cmp
sar
xor
or
or
xchg
pop
xchg
cmp
sub
push
adc
fdivr
arpl
and
cdq
inc
cs
leave
sbb
adc
push
or
cmovno
xchg
mov
or
adc
mov
sbb
pop
or
out
inc
or
xchg
shr
or
push
ja
mov
sub
inc
xchg
mov
sub
inc
xchg
(bad)
aaa
lock
cs
dec
ffree
push
enter
push
mov
adc
or
mov
shl
movs
daa
adc
test
dec
or
rcr
data16
out
mov
push
sbb
dec
push
rcl
push
(bad)
xor
inc
or
pop
push
test
ss
or
push
aam
xor
sub
aam
inc
rcr
cwde
aaa
stos
in
dec
ins
inc
mov
out
(bad)
scas
mov
push
xchg
push
cmp
add
outs
cs
sub
pushf
cmp
test
in
gs
stos
adc
or
push
mov
cmp
dec
add
je
movs
and
enter
inc
xchg
lea
add
cmps
cld
in
xchg
stos
sbb
push
adc
jmp
adc
push
ffree
popa
pop
lods
xor
sub
and
inc
adc
imul
(bad)
adc
shr
or
add
xor
or
xchg
xlat
xor
push
retf
add
mov
pop
xor
and
or
sar
xor
fcom
push
push
inc
and
xchg
sub
inc
push
jno
pop
sbb
into
enter
fmul
push
inc
gs
out
sub
mov
in
in
mov
push
ja
mov
sbb
xor
push
jo
adc
xchg
mov
fnstsw
jmp
add
repnz
retf
cmp
sub
loopne
jo
mov
dec
and
xor
sub
cmp
or
or
or
in
pop
jmp
sbb
nop
out
adc
es
cmp
bound
stos
arpl
dec
cli
and
mov
call
pusha
daa
jecxz
div
mov
clc
inc
dec
push
popa
dec
test
xchg
shl
dec
inc
mov
popa
mov
push
mov
cmp
les
dec
repz
enter
ds
sub
ins
inc
sub
cmp
jne
pop
jp
xchg
test
mov
stos
fs
and
mov
cmp
(bad)
loope
daa
lock
or
imul
imul
inc
pop
pop
mov
inc
leave
and
je
push
cmp
(bad)
adc
sub
jb
sbb
pop
icebp
addr16
adc
sbb
sti
push
mov
inc
add
pop
cld
pop
push
call
std
sub
nop
sbb
and
ss
(bad)
cs
cmp
clc
(bad)
pop
push
adc
test
jne
mov
js
test
push
push
mov
mov
test
and
fadd
or
fs
bswap
(bad)
es
jno
loope
xlat
dec
pop
loopne
xor
jecxz
pop
xlat
fadd
and
lahf
add
add
rol
mov
inc
inc
leave
pop
adc
sbb
test
add
dec
add
inc
inc
ret
cmp
add
jmp
leave
inc
addr16
adc
and
add
inc
cs
movs
mov
pop
cdq
loope
jp
imul
shl
pop
push
push
dec
loopne
retf
and
jle
push
arpl
smsw
pop
cld
je
xchg
push
push
nop
rcr
dec
xor
jmp
dec
or
mov
xlat
jg
inc
jo
popa
js
(bad)
aaa
add
ss
adc
mov
pop
push
inc
imul
xor
inc
sub
pop
fild
mov
push
jne
ins
xlat
sar
daa
mov
pop
loopne
clc
mov
adc
push
pusha
(bad)
mov
and
daa
xor
mov
mov
test
or
js
scas
xor
dec
shl
lock
ss
or
in
push
lahf
xchg
mov
push
jb
pop
dec
xor
aas
mov
daa
inc
xchg
scas
and
jl
dec
adc
adc
adc
scas
ins
pop
pop
mov
xor
sbb
sub
pop
cli
aad
xchg
pop
mov
popf
shl
adc
add
or
mov
pop
adc
ins
jle
push
mov
mov
jmp
ret
sub
add
add
das
retf
(bad)
cmp
lds
pop
adc
dec
imul
adc
mov
popf
jbe
cmp
data16
sub
clc
and
shl
imul
inc
push
jnp
bound
loopne
sub
sub
jb
ins
push
sub
xor
shl
and
inc
jle
ins
push
mov
and
cmp
in
jb
jnp
pop
or
xchg
add
push
into
push
pusha
push
pop
inc
je
ror
aaa
aas
call
jae
push
cmp
cmp
pushf
pop
shl
add
sbb
imul
sub
mov
mov
sub
lds
or
(bad)
sub
into
mov
test
or
add
dec
pusha
mov
mov
(bad)
(bad)
cwde
xor
or
jmp
xor
dec
mov
adc
jecxz
adc
add
rcr
mov
mov
lahf
ins
or
push
adc
xor
popa
(bad)
sahf
imul
xor
jne
sbb
add
pop
or
pop
and
jne
add
nop
push
adc
inc
add
lea
and
mov
add
shl
push
xor
pop
call
adc
sub
push
fimul
ret
push
or
dec
nop
imul
jmp
das
xchg
mov
fdiv
mov
inc
and
outs
mov
cmps
pop
mov
jl
mov
mov
fmul
mov
jp
cmc
outs
push
jo
pop
out
adc
lea
ret
and
xor
jg
add
inc
enter
cmps
lods
or
adc
or
push
pop
dec
jge
dec
sub
sub
dec
jnp
add
and
add
mov
xchg
inc
or
loope
movs
mov
inc
rol
test
or
es
push
les
scas
jmp
lock
out
inc
loop
adc
hlt
test
fdivr
into
cmp
lods
aas
push
mov
dec
mov
ss
mov
xchg
(bad)
retf
sbb
popa
neg
outs
shl
lods
les
out
movs
or
dec
aaa
fs
jne
mul
or
sbb
sub
mov
daa
jne
add
add
imul
mov
ds
les
or
or
inc
xor
mov
pop
cmp
jl
enter
or
dec
push
pop
xor
out
in
cmp
xor
add
rol
push
xor
cmp
fldenv
or
sbb
loopne
std
xor
inc
shr
loop
scas
shr
push
jl
mov
push
neg
mov
jne
mov
call
pop
add
add
xor
and
inc
pop
xor
sbb
or
cld
push
push
adc
jmp
mov
mov
or
fwait
mov
dec
out
fimul
enter
nop
xchg
push
(bad)
and
dec
inc
dec
lock
clc
mov
jge
cmp
add
ds
call
loopne
push
lea
stos
shl
arpl
adc
inc
in
xor
test
call
inc
call
fdiv
add
dec
sar
loopne
inc
repnz
xchg
repnz
dec
stos
comiss
push
sbb
add
jbe
mov
sbb
or
jge
daa
push
or
cmp
push
sbb
mov
pop
or
popa
mov
daa
push
cmp
xor
repnz
ficom
push
sub
test
add
dec
adc
adc
inc
push
enter
lods
imul
lods
mov
int
pop
sub
inc
xchg
inc
ss
outs
psubsb
mov
(bad)
mov
add
add
adc
add
mov
add
nop
dec
cmp
add
mov
sti
(bad)
inc
adc
popa
loope
pushw
inc
cmps
mov
and
mov
scas
std
lea
lea
adc
cld
popa
mov
and
ret
or
sub
add
mov
mov
jmp
jnp
adc
mov
sub
adc
scas
test
or
frstor
ror
ficom
dec
push
ret
cmp
or
cmp
test
adc
sub
lock
pop
jb
inc
jmp
pop
cdq
and
rol
or
add
push
scas
or
in
add
stc
retf
mov
push
scas
test
call
(bad)
add
push
inc
push
or
inc
push
push
aaa
cdq
jne
in
rcr
and
dec
dec
in
call
test
mov
pop
loopne
dec
gs
push
adc
pusha
inc
xchg
or
mov
jno
add
inc
sbb
cmps
or
(bad)
popa
mov
push
mov
jnp
mov
dec
cs
imul
sub
add
ins
cmp
popa
mov
cdq
sbb
dec
mov
ja
call
ret
mov
sahf
inc
rol
jne
add
mov
leave
push
and
push
cmp
cmps
jo
shr
push
ins
pop
inc
retf
inc
mov
inc
fcomi
(bad)
(bad)
inc
or
daa
rcr
fisttp
bound
add
and
test
and
sbb
push
js
xchg
and
xlat
lock
add
sbb
add
inc
mov
sub
mov
dec
aam
iret
mov
dec
xchg
mov
nop
test
push
sub
dec
cwde
call
jns
loop
pop
xor
adc
das
ja
and
hlt
cmp
or
or
push
push
or
popf
xor
je
fsubr
inc
inc
cmp
mov
and
mov
dec
jp
in
aas
sub
dec
leave
pop
mov
mov
(bad)
out
xchg
cmp
mov
clc
cld
push
or
or
jns
xchg
xlat
shl
push
adc
and
sar
ds
fimul
jmp
mov
sub
pmaxub
call
sahf
and
movs
retf
adc
mov
jbe
mov
(bad)
inc
pop
aaa
add
xor
fwait
mov
aad
mov
mov
lods
mov
retf
out
add
add
push
mov
sub
inc
push
sub
dec
jge
js
(bad)
hlt
add
das
add
mov
rol
ins
ud1
mov
(bad)
fsubr
shl
inc
pop
dec
rol
imul
rol
mov
add
mov
daa
ins
pop
xor
lea
adc
dec
push
or
push
sbb
pop
(bad)
add
push
and
scas
pop
jmp
sbb
and
and
xchg
in
movs
push
mov
and
mov
sub
xor
xlat
sub
jmp
aad
cmps
mov
mov
adc
out
pusha
xchg
daa
sbb
daa
dec
je
jmp
xor
xchg
movs
cmp
push
xor
and
adc
add
es
cmp
test
and
or
jo
repnz
or
in
inc
jp
aam
setbe
add
add
sbb
lock
mov
arpl
loopne
data16
int
dec
(bad)
and
dec
jmp
iret
cdq
jnp
adc
cdq
sbb
sub
das
ja
clts
(bad)
cmc
bound
dec
adc
pop
imul
jo
or
push
mov
cli
pop
repz
movs
rcl
push
(bad)
jns
out
aad
imul
pop
push
add
div
inc
or
pop
xchg
dec
call
or
sbb
adc
xchg
imul
cdq
movs
adc
nop
lods
rcr
and
xchg
cdq
bound
pusha
ret
xchg
ins
adc
ror
mov
and
ret
cmp
stos
ins
pop
add
cmp
push
inc
or
aas
jns
cmc
ror
pop
adc
in
sub
rcl
adc
lds
imul
dec
sbb
xor
mov
sub
push
gs
fcom
test
xchg
popa
sbb
addr16
mov
fiadd
or
dec
out
retf
(bad)
pusha
xor
mov
popa
pusha
xor
shl
xchg
enter
mov
sbb
mov
xor
mov
add
dec
test
test
push
inc
mov
push
inc
mov
lods
dec
mov
imul
and
inc
push
fsubr
adc
push
sub
mov
push
pop
pop
rcl
adc
dec
jmp
test
test
call
fadd
stos
push
sub
loopne
cmp
mov
pop
sub
test
test
mov
retf
into
ror
adc
sub
push
mov
sbb
ss
cmp
lea
pusha
in
and
jnp
jnp
ins
dec
movzx
shl
rol
push
fucomi
add
sbb
lock
pop
enter
xor
lds
cdq
mov
lds
mov
mov
pop
push
sub
mov
adc
add
aas
sub
or
push
cmp
call
cmp
test
ins
loope
shl
mov
dec
int3
mov
cmp
hlt
xchg
push
dec
add
add
in
and
retf
pop
jp
jecxz
xchg
pop
push
aad
push
jg
or
loopne
out
sar
push
jne
xchg
nop
mov
or
dec
scas
retf
call
imul
inc
jge
mov
add
icebp
(bad)
jne
xor
mov
xchg
imul
push
inc
adc
ror
retf
inc
jge
or
adc
sub
dec
xor
mov
mov
stc
ins
rcr
or
dec
pop
sbb
js
pop
cwde
jmp
imul
test
std
pusha
jo
add
and
mov
sub
cmp
mov
fstp
in
or
xchg
inc
and
pop
ret
inc
cli
dec
stc
dec
sub
adc
or
dec
xchg
xchg
nop
sub
push
loop
ret
sti
jnp
jmp
into
push
in
test
mov
add
push
dec
shr
dec
sbb
in
or
mov
mov
xor
fstp
pop
inc
inc
xchg
mov
mov
popa
xor
cmp
cmps
add
pop
outs
xchg
push
cdq
adc
push
xor
outs
xor
and
push
adc
or
in
call
jl
add
aaa
jmp
sub
addr16
out
mov
out
movs
icebp
or
or
int3
push
push
add
imul
inc
add
inc
push
addr16
xchg
pop
adc
push
inc
scas
dec
(bad)
dec
aas
pop
sub
pop
sahf
push
imul
or
je
ss
pusha
jmp
subps
bound
aam
jo
cmp
push
pop
cs
cmp
mov
scas
iret
sub
movs
inc
sbb
mov
mov
aaa
sbb
or
out
into
xor
sbb
inc
imul
push
mov
mov
mov
popa
or
inc
push
xchg
push
pop
jo
popa
inc
mov
push
dec
and
xor
daa
adc
push
xchg
aad
dec
inc
push
pop
arpl
fldl2t
mov
xlat
mov
stos
pop
push
or
sub
adc
inc
inc
movs
mov
sbb
lahf
(bad)
adc
add
rcl
fiadd
or
adc
pushf
fs
fs
popa
cmp
add
jmp
xchg
lea
xchg
lea
and
add
xchg
jmp
das
mov
fstp
push
sahf
scas
xor
adc
pop
sub
inc
add
xor
sub
xchg
mov
(bad)
dec
lods
add
and
ror
fsub
dec
mov
out
cmp
lock
sbb
mov
stc
and
push
adc
xchg
mov
jecxz
dec
ins
and
mov
loopne
popf
push
or
sar
and
or
aaa
sub
lock
add
out
sahf
mov
adc
test
fmul
push
push
in
xor
mov
call
aas
mov
xchg
bound
jle
movs
retf
add
fxch
adc
adc
xor
jno
jne
add
adc
pop
dec
dec
cdq
dec
cmp
inc
or
mov
xchg
lods
or
fcmovnbe
int3
mov
fdiv
or
xchg
jecxz
add
sahf
pop
fcom
je
gs
sub
xchg
mov
push
dec
nop
add
std
in
push
or
push
in
push
adc
push
sbb
std
stc
jb
sti
jmp
and
add
mov
inc
or
test
and
fsub
and
dec
push
push
cmp
pop
in
mov
push
fisubr
add
loopne
mov
pop
xor
add
mov
repnz
sti
mov
push
cmp
cmp
jnp
push
addr16
das
and
sub
inc
hlt
cmp
xchg
hlt
cmp
mov
add
xor
add
adc
shr
daa
xor
inc
mov
add
and
call
and
push
and
push
fmul
dec
shr
gs
loope
sub
jae
mul
cmp
retf
and
(bad)
xchg
addr16
mov
sbb
outs
mov
sub
xchg
icebp
mov
imul
repz
add
in
jbe
jg
ins
push
arpl
imul
sbb
addr16
es
and
pop
jb
bound
inc
popa
outs
mov
jmp
jbe
es
sub
jo
cs
ret
add
inc
cmp
mov
(bad)
fld
imul
sub
das
(bad)
bound
ss
(bad)
imul
xchg
(bad)
(bad)
daa
mov
sbb
jb
add
fcom
ins
mov
add
cmp
sub
invd
xor
add
xor
fsubr
mov
and
fs
add
sub
jmp
push
and
cmp
arpl
sub
and
mov
cmps
pop
sbb
mov
push
or
(bad)
(bad)
out
(bad)
pusha
mov
mov
pop
cmp
cmp
xchg
jbe
jns
or
push
push
xlat
lds
pushf
sub
fidiv
inc
sti
add
cmp
es
dec
jg
jle
xchg
jmp
add
mov
(bad)
mov
movs
je
mov
or
jl
mov
jmp
pop
ins
or
jl
es
inc
nop
add
push
rol
xchg
jo
mov
nop
les
cmp
push
mov
inc
cmp
jne
xor
fwait
cmc
mov
and
pusha
jecxz
aad
jp
push
xor
in
or
xchg
ins
mov
jns
call
jle
fxch
int3
js
sub
xchg
or
jb
jbe
sub
in
sti
or
lahf
fsub
inc
xor
daa
and
addr16
xchg
sub
enter
es
inc
push
ffreep
and
clc
inc
dec
js
ss
addr16
aam
ss
xor
popf
dec
test
sbb
or
in
dec
ds
or
pushf
add
sub
inc
mov
or
sbb
push
mov
fcom
ja
or
inc
jo
or
jns
jns
add
xchg
push
jbe
out
mov
fistp
push
jns
inc
add
xor
add
dec
in
and
add
add
push
scas
adc
data16
cmp
ja
xchg
in
pop
xor
dec
dec
inc
dec
pop
push
mov
jns
xchg
movs
xor
pop
add
push
retf
and
sub
push
push
lea
adc
mov
push
imul
out
mov
sbb
add
add
iret
push
add
pop
or
cmp
dec
or
or
or
or
or
repz
adc
adc
cmp
sbb
sbb
mov
sbb
and
and
and
fadd
loopne
repz
out
call
sub
repz
cmp
xchg
cmp
repz
mov
(bad)
out
sahf
out
clc
or
sbb
cmp
jns
out
pop
outs
adc
mov
int3
(bad)
or
jns
add
es
imul
inc
loope
sub
and
or
push
adc
adc
push
sub
or
retf
dec
or
jb
in
push
or
mov
adc
adc
adc
adc
dec
in
retf
adc
jb
inc
pop
dec
push
cs
push
xchg
dec
sub
jmp
pop
sbb
aaa
pusha
ja
push
popa
imul
and
inc
sub
gs
retf
data16
movs
xor
and
push
iret
mov
daa
dec
lahf
mov
je
jbe
adc
in
cli
fcomp
adc
mov
mov
mov
pusha
fsubr
sbb
imul
mov
or
pop
push
sub
clc
push
adc
push
sub
pop
jg
mov
dec
sub
ds
cs
push
lock
int3
mov
data16
popf
mov
sti
sub
or
sbb
test
inc
bound
js
popa
int
addr16
xchg
mov
mov
cmp
shl
ja
shl
pop
or
xchg
in
and
sbb
(bad)
rcl
jo
xor
nop
push
sbb
push
(bad)
out
inc
repz
push
adc
mov
jb
dec
ret
pushf
je
or
push
push
mov
fadd
dec
jo
scas
or
pop
test
inc
aaa
mov
mov
aam
inc
dec
fcomp
invd
or
fnstenv
cmp
repnz
sbb
jle
add
jae
add
add
fistp
adc
pop
dec
ins
addr16
arpl
adc
cmps
mov
sub
mov
outs
adc
pop
imul
sub
xor
xor
shl
aaa
aad
fs
ss
push
stos
mov
nop
mov
adc
mov
xchg
push
and
imul
rdmsr
xor
xor
xchg
sub
and
out
test
jnp
pop
fs
ins
push
je
inc
dec
jmp
bswap
outs
dec
jmp
test
in
cmc
push
adc
adc
xchg
dec
pop
xor
xchg
fwait
ins
int3
mov
add
xchg
cdq
mov
lods
adc
pop
setae
push
or
in
fsubr
outs
(bad)
ds
or
mov
aas
and
cmp
xor
and
mov
lahf
mov
xchg
push
push
(bad)
test
in
ja
mov
das
int
add
jmp
adc
push
mov
xor
pop
mov
jns
xor
inc
dec
add
jl
cmp
sub
inc
fiadd
mov
xchg
cld
mov
add
or
sbb
and
inc
inc
jne
dec
and
mov
out
fwait
das
or
in
test
call
add
jmp
shl
js
clc
push
pop
push
pusha
xchg
adc
or
xor
or
push
ins
sbb
pop
test
add
mov
inc
sbb
jno
pop
pop
and
inc
clc
inc
inc
inc
or
fst
add
test
dec
mov
mov
lock
push
mov
cwde
rcl
push
sbb
inc
je
mov
(bad)
pushf
add
xchg
in
cmp
add
in
xor
push
jb
mov
sub
out
lock
xchg
xor
inc
cmp
call
shl
push
dec
or
mov
mov
das
addr16
hlt
sub
mov
ss
pusha
push
movs
dec
test
fnstsw
jge
inc
mov
adc
add
daa
cdq
adc
loopne
sub
test
and
mov
pop
(bad)
mov
mov
cdq
jae
push
adc
xchg
cwde
push
jl
inc
mov
not
das
fs
xor
jl
pop
and
fucomp
jne
les
sbb
adc
cwde
pop
cmp
sbb
sub
shr
jmp
lock
es
test
sub
inc
outs
dec
shl
pusha
xchg
sbb
pop
inc
imul
(bad)
enter
imul
inc
dec
sti
stc
push
push
cmps
xor
push
cmps
arpl
inc
mov
xlat
push
inc
imul
lock
int3
arpl
add
mov
add
sar
adc
dec
jmp
int3
sbb
movs
jmp
cli
inc
cmp
push
int3
ds
mov
adc
daa
adc
mov
in
inc
ins
lahf
mov
add
adc
add
pop
add
xchg
std
pop
xor
jo
push
push
or
test
pop
jnp
jmp
mov
out
arpl
jne
xchg
lock
pop
or
in
sub
arpl
xor
out
mov
jo
cmp
call
dec
add
xor
push
pop
push
retf
cmps
adc
aaa
inc
es
shl
add
mov
cmp
mov
push
push
add
adc
or
cmp
mov
push
xchg
gs
add
loop
push
sbb
inc
pop
inc
pop
mov
adc
xchg
jge
imul
enter
cs
xchg
dec
inc
add
xchg
or
pushf
cmp
das
iret
add
adc
fcom
xchg
and
shl
adc
inc
cmps
ror
jmp
sbb
inc
pop
add
push
sub
xchg
(bad)
test
aad
popa
fld
lods
cmp
xchg
push
or
leave
sub
nop
add
ret
popf
inc
es
repnz
repnz
inc
push
mov
mov
ficom
xor
push
shr
mov
xor
adc
mov
and
retf
addr16
xor
push
js
xor
fmul
mov
and
inc
jp
xor
loope
push
mov
movs
mov
xchg
adc
cdq
or
mov
xchg
cs
(bad)
mov
add
xchg
xchg
xor
push
movs
(bad)
dec
jl
sub
shr
jmp
adc
add
and
add
sub
jmp
(bad)
lea
outs
adc
ss
and
shl
mov
aam
call
repnz
xchg
out
mov
xor
pop
cdq
mov
clc
xchg
retf
dec
hlt
inc
jle
outs
stc
hlt
mov
adc
cmp
scas
add
add
inc
mov
test
dec
inc
jle
stc
enter
sub
icebp
adc
cdq
(bad)
xor
sub
stos
(bad)
fmul
fld
adc
aaa
push
nop
out
push
bnd
add
inc
sub
push
mov
ficomp
mov
add
inc
add
and
push
lods
add
cmp
jmp
pop
push
lahf
add
mov
mov
mov
repnz
cmp
pop
cmps
sbb
pusha
and
push
in
(bad)
or
sbb
in
imul
loopne
retf
xlat
adc
and
dec
mov
ins
and
xor
pushf
push
das
and
rcl
sbb
mov
mov
test
call
int3
push
movs
add
daa
inc
imul
not
ret
and
sbb
inc
pop
adc
mov
xchg
hlt
lea
pop
aas
mov
sbb
in
or
add
cmc
jmp
fst
push
ds
arpl
(bad)
(bad)
mov
test
push
imul
scas
mov
dec
cmps
scas
in
jns
add
les
or
call
xchg
pop
in
jecxz
enter
push
repnz
and
das
push
and
icebp
dec
pop
test
jl
mov
pop
pop
inc
in
or
fdivrp
push
ss
pushf
sub
pop
sub
push
stos
test
sbb
movs
jo
jne
in
fs
out
dec
cmp
daa
dec
test
mov
out
xchg
or
jno
dec
mov
sbb
inc
pop
sub
mov
inc
or
lock
mov
repnz
push
jns
sbb
pusha
pop
sbb
sbb
inc
add
mov
les
and
cmp
and
arpl
xor
mov
inc
(bad)
jne
or
test
xor
or
rcr
sbb
pop
push
sbb
lods
mov
xchg
in
daa
popa
loopne
jl
cmp
scas
sti
and
mov
and
std
call
xor
cmp
pop
mov
push
mov
loop
mov
cmp
cmp
pop
nop
xchg
cld
cmp
enter
int
adc
and
dec
pop
jo
call
shl
mov
add
mov
mov
iret
lock
jne
and
cld
ins
push
and
cmps
jo
adc
adc
pop
xchg
(bad)
aaa
pop
add
push
sub
jg
push
inc
jle
dec
add
inc
or
in
test
lock
xchg
add
in
cmps
jge
add
push
add
pop
shr
push
inc
jbe
(bad)
fs
mov
(bad)
fs
cmova
sub
and
fs
bound
pop
in
inc
xchg
shl
imul
ds
add
jnp
les
movs
push
adc
sub
shl
inc
jnp
pop
dec
lahf
pop
xor
mov
or
pop
add
(bad)
add
sar
xchg
mov
sub
loopne
mov
add
jmp
push
(bad)
aas
add
pop
in
inc
sar
push
ins
mov
test
sbb
inc
psraw
mov
fcom
push
cld
adc
jns
lods
and
mov
mov
inc
push
fsubr
rol
jmp
pop
pop
sub
lods
push
lods
and
or
cmp
xlat
push
or
dec
enter
pop
add
or
add
xor
rcl
dec
daa
cmp
outs
int3
or
mov
inc
push
movs
aaa
or
test
sub
outs
fs
push
das
loopne
(bad)
out
ret
loopne
scas
fs
clc
push
or
bound
push
sub
sahf
mov
add
add
loopne
pop
stc
mov
out
cmova
inc
jns
add
enter
out
lock
sbb
repz
inc
push
push
iret
repz
jl
test
mov
or
jns
dec
pop
add
add
push
fadd
jns
xor
rcr
mov
ret
sbb
mov
movs
out
cmps
jne
jecxz
jle
fst
or
pop
mov
xchg
add
aas
aad
dec
pop
cmp
xchg
cmp
xor
xchg
cld
and
xor
cdq
xchg
push
add
stos
cmp
jmp
outs
pop
popa
sub
sub
pop
add
rcr
mov
gs
movs
jnp
mov
jae
bound
dec
fbstp
sti
mov
or
and
inc
mov
add
cld
mov
sub
lock
dec
mov
je
or
iret
add
jecxz
or
lods
mov
fisub
(bad)
test
inc
pop
adc
or
clc
inc
test
or
mov
inc
xor
add
aad
cmps
sbb
or
(bad)
xor
jno
inc
fs
dec
dec
and
sbb
xchg
xor
adc
pop
jl
jne
leave
xlat
fld
out
fdivr
xlat
pop
xchg
daa
ror
mov
cmp
sbb
cmp
test
inc
out
(bad)
jne
pop
shl
push
cs
cmp
xor
and
push
xchg
sbb
in
or
jg
mov
or
pop
inc
mov
push
or
sub
inc
mov
mov
xlat
(bad)
outs
shufps
sub
cmp
push
cmp
or
pop
xchg
xchg
and
cmps
cmp
sar
fnsave
leave
nop
push
rcl
xchg
dec
dec
and
and
pusha
mov
inc
or
sbb
xor
inc
sbb
cmp
or
mov
out
sbb
wrmsr
mov
cmp
push
sub
jne
xchg
push
pop
aad
in
inc
pop
bound
add
xchg
call
sub
push
int3
mov
sbb
xchg
push
push
push
ins
mov
dec
(bad)
fucomp
adc
sbb
jne
mov
(bad)
ja
cmp
in
cmp
inc
sub
mov
and
aas
sub
fs
fisubr
movs
or
adc
imul
sbb
retf
push
inc
push
xchg
dec
or
jno
xchg
jne
lds
and
xor
dec
lahf
pop
sbb
inc
test
mov
add
mov
inc
mov
fldenv
xchg
mov
xor
adc
fsub
rcl
pusha
xchg
iret
cwde
loope
mov
mov
xchg
movs
ss
or
mov
adc
int
jo
push
ins
adc
sub
js
dec
push
jo
mov
movs
callw
or
stos
fbstp
pop
pusha
adc
push
add
loopne
xchg
test
mov
lahf
pop
cmc
mov
mov
push
push
call
or
mov
call
dec
dec
add
xor
cmp
movs
adc
mov
push
push
pop
data16
xor
sub
adc
push
adc
shl
add
sub
mov
add
in
pop
mov
js
xchg
(bad)
push
data16
push
cwde
mov
mov
in
mov
(bad)
enter
inc
loope
or
pop
lea
aam
fld
add
enter
sbb
pop
imul
jmp
and
mov
leave
add
xor
test
outs
xor
out
push
jnp
nop
scas
add
dec
add
movs
inc
sbb
jns
pop
jnp
jno
loopne
sbb
je
lods
adc
and
inc
and
stos
dec
rol
ret
loope
movs
adc
and
enter
inc
push
pop
fadd
fisttp
inc
push
arpl
push
push
pop
inc
ins
mov
mov
dec
sub
and
xor
or
sub
push
mov
mov
loopne
cwde
je
push
mov
or
lods
inc
rol
aaa
mov
and
fnstenv
sub
sub
dec
mov
and
or
fs
dec
in
pusha
ss
into
add
inc
xor
xchg
sbb
xchg
imul
cmps
jl
nop
xchg
add
adc
jp
outs
add
and
ins
jns
cmps
sbb
mov
add
pop
inc
mov
sub
mov
mov
xchg
inc
fldenv
jge
xor
dec
inc
aas
test
jne
in
inc
inc
imul
aam
test
test
gs
add
inc
inc
or
mov
xor
push
or
sub
or
daa
mov
add
xchg
jg
inc
add
or
rcl
mov
jp
outs
pop
or
jbe
scas
ja
js
repz
cmp
inc
js
mov
shl
call
push
inc
xor
sbb
fcomip
aaa
and
test
enter
or
mov
movs
out
jns
push
xlat
aas
push
sbb
sbb
add
ret
dec
popa
adc
or
pop
inc
pop
aaa
jno
das
pusha
xor
push
push
add
arpl
ins
or
es
in
add
dec
(bad)
jg
add
inc
xchg
jnp
xor
addr16
(bad)
fidiv
ss
adc
je
pop
pop
sbb
lods
add
ret
and
sahf
mov
outs
popf
mov
push
sbb
pop
add
daa
scas
iret
pop
xor
xchg
loopne
add
fidiv
dec
jnp
mov
sbb
arpl
sti
add
dec
arpl
push
fnstsw
or
pop
shl
inc
jl
aas
or
(bad)
mov
rcr
(bad)
sbb
sub
push
add
jnp
sub
adc
(bad)
sahf
aaa
push
add
dec
or
repnz
test
cmp
push
inc
push
dec
push
pop
jo
push
sbb
pop
dec
aaa
mov
xor
pop
xchg
je
or
dec
dec
adc
xor
push
or
dec
aaa
sub
cmp
inc
jns
fild
or
push
pop
sbb
sbb
mov
mov
data16
add
fisubr
and
push
stos
ja
add
ficomp
or
or
dec
inc
imul
fs
popa
js
pop
fidiv
in
and
lods
push
rol
lock
jl
inc
pushf
adc
cmp
div
unpckhps
rcl
inc
add
push
inc
or
push
inc
test
in
add
outs
xchg
pop
xchg
mov
xchg
cmp
mov
jle
and
out
cmp
loopne
loop
inc
add
inc
mov
sub
xlat
pop
xor
add
xor
bndldx
cmp
add
sti
xor
jl
inc
add
push
jns
jno
dec
nop
jp
dec
mov
call
and
inc
sbb
adc
dec
and
dec
cmp
int
inc
jae
or
call
call
mov
es
mov
outs
mov
popa
retf
inc
and
sub
mov
push
test
dec
xchg
pop
xor
enter
movs
mov
jmp
inc
std
das
mov
xlat
mov
test
mov
inc
sub
shl
int
adc
out
int3
pop
add
mov
push
ins
dec
lock
push
pusha
loope
add
and
or
fsub
push
or
xlat
inc
or
fimul
adc
pop
(bad)
adc
es
or
mov
sub
mov
xchg
cmp
sbb
adc
xchg
dec
pop
aas
sbb
das
jae
xchg
nop
cwde
iret
mov
movs
jo
sti
jno
or
jo
mov
in
cmps
jns
adc
(bad)
in
add
push
outs
gs
sbb
jns
lea
mov
ret
xor
int
adc
or
sub
mov
push
psllq
out
xor
or
adc
imul
or
xor
cdq
sti
(bad)
sbb
outs
ds
mov
test
jo
xchg
add
push
and
sbb
lea
cmp
shl
dec
int
fst
mov
jnp
cld
or
imul
mov
adc
sbb
mov
or
add
sar
shl
rcl
mov
pop
adc
jo
xchg
loopne
or
jbe
dec
add
sub
xchg
inc
dec
mov
push
dec
rol
adc
cmp
add
ja
add
outs
add
pop
mov
add
add
popa
xor
or
push
and
fmul
sub
cmp
fs
xor
retf
mov
and
cmc
or
sub
mov
enter
in
inc
add
stos
pop
aas
inc
and
push
pushf
pop
dec
add
push
xchg
push
jno
jl
cmpxchg
dec
pop
call
pop
ret
inc
push
push
add
test
dec
in
inc
in
push
addr16
mov
and
shl
inc
add
fidiv
adc
push
and
ds
push
pop
jecxz
test
push
loop
and
sbb
dec
sub
(bad)
or
mov
mov
inc
xchg
mov
xor
cdq
jbe
sub
cs
pop
cli
sub
(bad)
mov
repnz
mov
pusha
inc
xchg
inc
and
add
pop
and
arpl
pop
jns
lock
(bad)
mov
inc
mov
jns
seto
push
cld
imul
sbb
clc
ins
mov
inc
mov
hlt
outs
inc
or
mov
js
push
in
xchg
nop
(bad)
push
cmp
bswap
xchg
inc
lock
inc
xor
add
push
push
(bad)
rcl
rcl
jo
mov
mov
xor
pop
add
nop
dec
ds
repz
mov
add
fist
pusha
lock
daa
ret
cmc
aas
inc
aaa
add
adc
pop
add
add
jp
ins
push
cld
push
adc
adc
out
add
adc
push
mov
outs
loopne
pop
dec
add
adc
add
lds
add
sbb
mov
cmps
sub
and
mov
or
ins
add
mov
mov
mov
jmp
(bad)
fild
(bad)
jmp
test
jmp
mov
in
jmp
nop
lahf
cmp
jge
cmp
fsub
sar
push
movs
mov
lahf
out
cld
add
js
cmps
lods
ins
mov
xor
push
push
stos
ins
mov
lock
push
sub
and
ja
mov
jo
inc
xchg
cmp
out
scas
jl
pushf
movs
hlt
mov
js
mov
in
cmp
inc
mov
ficomp
push
pushf
call
mov
test
jns
addr16
sahf
or
imul
inc
mov
mov
sti
in
sahf
scas
and
mov
jge
cmp
sar
mov
xlat
add
call
xchg
call
daa
sub
inc
pop
jo
rol
sbb
push
mov
add
ror
popf
fsubr
aam
pop
enter
adc
sub
icebp
cmp
das
sbb
or
ins
adc
sub
mov
pop
scas
cmps
inc
xchg
mov
scas
push
or
test
aas
rol
mov
shl
repz
sbb
cdq
in
sar
add
push
popa
or
or
cs
sbb
dec
repz
jl
inc
loope
mov
jo
gs
mov
(bad)
nop
mov
repnz
and
xor
sbb
xchg
adc
dec
sbb
add
add
inc
sbb
inc
push
popa
pop
xor
xchg
stos
and
pusha
shl
fnsetpm(287
cmp
ins
and
inc
and
add
and
nop
dec
not
dec
xchg
fsubr
or
movs
jl
inc
and
and
test
xor
push
xchg
pop
push
and
add
sar
and
cdq
and
add
pop
mov
repz
pop
mov
push
sub
das
push
jb
mov
or
inc
sub
xchg
mov
dec
adc
add
pusha
mov
mov
cmp
sbb
(bad)
inc
jo
stos
sub
sub
in
shl
out
add
or
xor
jecxz
xchg
scas
adc
xor
inc
dec
dec
xchg
mov
rcl
and
pop
pop
enter
inc
xchg
out
cmp
add
loopne
cmps
xor
adc
call
outs
(bad)
ja
sbb
xor
inc
mov
sbb
ss
mov
push
mov
inc
pusha
fisttp
dec
ins
fs
aad
ror
dec
add
mov
push
mov
add
in
mov
or
xlat
pushf
test
or
xchg
test
js
add
fcomp
sbb
imul
stos
add
test
add
(bad)
cmp
js
aad
movs
imul
and
cmps
aam
mov
mov
imul
pusha
mov
push
dec
sub
aas
rol
bnd
push
push
mov
push
ds
nop
or
inc
push
mov
xchg
cmp
or
nop
scas
pop
test
inc
jl
sub
inc
test
call
and
or
xor
inc
enter
rol
adc
xor
lods
push
pusha
add
cdq
dec
dec
test
xchg
fadd
fcom
adc
(bad)
sbb
imul
or
inc
dec
push
sbb
dec
dec
pop
push
sbb
adc
loopne
loopne
mov
and
les
aaa
pop
inc
call
adc
xor
pop
or
stos
dec
aam
adc
dec
mov
mov
mov
add
sti
sbb
add
xchg
or
xor
dec
test
sub
push
add
or
dec
es
inc
lock
push
inc
popa
movs
mov
push
mov
in
push
and
add
leave
and
add
pusha
xor
or
cmp
push
out
loopne
enter
nop
clc
pop
inc
mov
pop
or
inc
nop
daa
nop
inc
pop
or
inc
sbb
or
add
loope
sub
fs
pop
stos
movs
or
inc
pop
in
add
or
in
or
inc
popa
cmps
dec
push
jns
add
mov
inc
loopne
arpl
imul
dec
dec
dec
inc
pusha
or
dec
shl
push
popf
push
push
add
gs
aad
push
push
add
retf
push
xchg
push
stc
mov
push
test
nop
adc
add
adc
xor
rcr
sbb
add
and
pop
push
inc
mov
fwait
mul
pop
aas
pop
adc
dec
aas
setb
(bad)
lods
(bad)
mov
and
push
inc
and
and
cli
sub
and
or
jmp
shr
cmc
sbb
mov
push
loopne
dec
jnp
mov
or
jbe
push
clc
pushf
popa
mov
movs
inc
xor
mov
pop
das
pop
sub
test
jb
adc
push
sbb
xchg
test
xor
sub
pop
test
or
in
cwde
cmps
fs
xchg
push
mov
mov
mov
ja
or
int3
inc
xchg
sar
cmp
jl
imul
mov
daa
pop
jo
or
sub
into
sbb
(bad)
inc
(bad)
xor
inc
push
adc
push
inc
jo
xchg
or
cmp
aaa
fwait
adc
inc
cli
inc
test
mov
jmp
xor
mov
or
cmp
aaa
mov
adc
loop
dec
movmskps
jnp
dec
mov
xor
push
cld
aam
and
(bad)
out
nop
bound
or
lahf
pop
and
adc
mov
jle
add
mov
mov
dec
mov
enter
dec
adc
mov
addr16
mov
arpl
add
push
or
je
and
ret
test
inc
jl
add
and
fsubr
fimul
cdq
fsub
loopne
mov
pushf
or
(bad)
and
sbb
lea
xchg
imul
jne
cmp
aas
data16
and
iret
ret
pop
ins
fisttp
or
jbe
cwde
in
xor
adc
jmp
das
jmp
xchg
call
cmp
and
or
or
and
iretw
or
jmp
add
xchg
imul
mov
mov
xlat
loopne
nop
outs
cmps
pop
hlt
add
add
cmp
and
cmp
adc
aad
or
stos
mov
das
arpl
leave
fcom
xchg
dec
add
pop
ja
xlat
fwait
inc
inc
adc
sub
and
sar
inc
jge
xor
scas
inc
mov
xor
sub
push
cli
pop
sub
mov
or
fild
pop
aaa
mov
cmp
xchg
mov
stc
mov
inc
jl
push
loope
aas
add
fdivrp
rcr
push
sbb
loopne
xor
inc
lods
stc
add
jl
ret
(bad)
dec
and
cmp
push
add
pop
test
sar
jnp
pop
mov
push
jo
sbb
adc
jns
xchg
clc
inc
mov
popf
je
mov
cmps
shl
(bad)
sbb
mov
cmps
push
aad
cmc
xor
daa
aas
adc
mov
push
or
pop
enter
sub
mov
sbb
fwait
add
ret
dec
mov
inc
aas
cmp
mov
cmp
push
adc
or
loopne
push
(bad)
adc
sbb
dec
dec
pushf
mov
jo
js
fadd
xor
adc
mov
jo
pop
call
or
mov
mov
div
retf
sbb
or
(bad)
mov
je
dec
fidiv
int3
cmp
xchg
dec
and
cmp
mov
fisttp
lea
or
ss
jb
aaa
cld
shl
sbb
test
mov
adc
add
or
jae
add
adc
adc
ret
fstp
outs
pop
cs
jmp
mov
sar
enter
pop
fcmovb
lahf
in
test
sub
xchg
out
adc
add
add
fisub
cdq
mov
push
dec
jne
loopne
pop
mov
pop
cmp
cmps
lods
cli
mov
pop
adc
jl
add
loop
push
js
pop
sbb
dec
es
dec
dec
jbe
mov
es
cmp
sbb
neg
arpl
adc
test
lahf
fild
rol
adc
pop
xchg
aam
add
lock
and
dec
jecxz
and
xchg
add
sub
inc
mov
cmp
aas
jmp
mov
or
or
xor
xchg
push
add
or
jbe
fstp
add
or
mov
jo
push
ds
push
inc
add
and
xor
imul
pop
xchg
lea
inc
sbb
inc
xchg
das
int
and
adc
inc
sub
and
or
bound
(bad)
(bad)
cmp
push
xchg
lods
add
aam
imul
jg
rcr
mov
adc
xlat
cmps
icebp
adc
ret
pop
mov
or
jae
jmp
cs
mov
adc
and
jl
iret
fst
mov
outs
fidivr
inc
inc
add
add
dec
cmp
jl
or
adc
inc
(bad)
das
inc
inc
add
xchg
imul
rol
int3
into
xor
rol
and
imul
inc
dec
dec
sbb
adc
mov
jecxz
retf
pop
add
pusha
push
stc
imul
es
push
outs
int
push
xchg
cmp
cwde
sar
cmp
push
aas
movs
push
xchg
cmp
pop
ret
or
mov
cmc
sub
loop
push
mov
rcl
fwait
pop
es
sub
pop
cmp
cmp
mov
es
test
and
dec
add
mov
cwde
cmp
add
jns
outs
cmp
bound
fadd
or
pop
pop
imul
or
push
mov
pusha
adc
cmc
cld
cli
add
sub
push
sbb
dec
das
pop
pushf
nop
mov
sub
neg
jmp
arpl
je
enter
aaa
sbb
dec
inc
xlat
cli
jno
sbb
push
push
test
and
test
lock
shl
int
dec
fadd
stos
xchg
aam
rcr
cdq
fidiv
in
xor
cmp
xchg
or
pushf
sub
adc
loope
xchg
ins
or
cmp
pop
pop
jno
clc
xchg
test
mov
arpl
and
popa
jns
or
cmps
in
jb
out
pop
cmps
aaa
mov
xchg
adc
call
into
hlt
xor
and
movs
sbb
enter
scas
cmp
xor
setl
out
dec
mov
jmp
inc
inc
or
pop
cmp
sti
adc
sti
jmp
sbb
ins
out
jl
sbb
xor
ret
jnp
repz
or
scas
cmp
jae
cmp
pusha
mov
pop
rcl
add
or
jmp
movs
push
adc
push
lods
cs
std
jp
retf
aaa
and
leave
aam
adc
sbb
mov
movs
(bad)
pusha
mov
or
je
ss
jmp
jl
cmps
vmovntps
fcom
lock
xchg
mov
iret
repz
push
retf
push
sub
xchg
popf
cdq
fcom
dec
cmp
rcl
aaa
add
and
jle
sbb
sub
pop
mov
mov
mov
xchg
adc
push
pop
dec
out
sbb
mov
xchg
jno
dec
inc
jb
sbb
aas
gs
adc
xlat
xor
push
xchg
inc
push
popf
mov
shr
in
sbb
dec
es
mov
mov
outs
imul
cwde
push
std
push
or
adc
or
add
jl
push
sub
or
sahf
lahf
add
inc
inc
pop
or
xchg
sar
adc
jle
push
jo
adc
dec
outs
xchg
arpl
fsubr
je
or
dec
pop
das
pop
nop
mov
cmp
enter
xchg
inc
mov
ficomp
mov
test
and
push
xchg
mov
jp
cs
in
xchg
xor
push
data16
in
cs
pushf
xor
xor
js
sub
mov
and
or
adc
pusha
int3
inc
add
mov
loope
mov
push
add
jno
imul
sbb
call
sub
sbb
add
mov
xor
sbb
sbb
add
and
push
test
fs
push
add
pusha
popf
or
and
hlt
push
in
and
cmp
inc
push
sbb
xor
sub
add
call
rcl
lea
push
push
psubusb
fist
stos
call
mov
dec
outs
add
push
mov
mov
sbb
dec
mov
inc
pop
inc
pop
inc
loop
and
sbb
fwait
adc
or
jmp
push
cwde
out
inc
or
push
aaa
mov
dec
test
inc
mov
and
xlat
or
mov
(bad)
icebp
fwait
cli
shl
out
adc
mov
adc
jge
xor
ins
bound
ret
jmp
and
test
scas
xor
sbb
push
adc
push
sub
cmp
push
aaa
inc
xchg
fs
xor
jle
adc
and
xor
mov
mov
jne
iret
ja
push
mov
and
cmp
or
mov
sbb
sbb
sub
jno
xchg
jne
adc
dec
fwait
cmp
das
lock
mov
push
inc
ret
jo
cwde
out
aas
pop
sbb
push
movs
adc
outs
fsubr
popa
loopne
cmc
and
inc
gs
and
push
out
push
add
int3
adc
inc
std
pop
add
test
icebp
loopne
in
push
sbb
cmp
adc
xchg
or
call
pop
dec
or
adc
pop
lahf
lods
cmp
sub
je
ins
and
pop
sub
sbb
add
mov
mov
ret
fcmovne
inc
xchg
sbb
pop
add
popf
pop
push
ret
repz
cmp
add
inc
test
mov
pop
dec
and
mov
fs
adc
mov
and
dec
xchg
retf
ret
or
mov
jo
inc
pop
shl
es
inc
sub
dec
jmp
jb
test
loopne
loop
and
repnz
std
xor
sub
add
xlat
sbb
scas
cmp
popa
pushf
sbb
movs
sbb
mov
xor
fcomp
push
lea
push
movs
mov
sbb
inc
pop
and
adc
enter
ja
rol
sahf
mov
sbb
out
sbb
pop
add
fucomi
mov
jmp
ja
mov
in
imul
sbb
fdivr
xchg
retf
and
or
es
mov
mov
mov
or
adc
adc
sub
pop
aad
sbb
stos
inc
adc
xchg
inc
add
ret
adc
in
fs
add
mov
and
push
pusha
push
ret
dec
cld
xchg
or
pop
jmp
and
ja
cmp
hlt
scas
and
retf
add
pop
dec
fwait
push
cmp
or
adc
add
cmc
mov
aas
mov
mov
push
jns
imul
pop
inc
mov
pop
xchg
mov
popa
ins
cwde
pop
popa
dec
popa
jl
bt
mov
(bad)
cwde
(bad)
rcl
dec
inc
call
popa
jns
or
xchg
or
ret
mov
inc
mov
inc
fs
add
and
inc
sbb
xor
mov
push
xor
xor
aam
pop
shl
push
int3
adc
dec
push
neg
jmp
mov
neg
lea
and
and
add
rcl
xchg
hlt
test
mov
in
inc
nop
mov
sbb
sbb
push
mov
fdiv
fadd
push
pop
or
push
pop
pop
lods
xor
xchg
mov
and
popf
ss
mov
pop
or
mov
lods
and
js
xchg
inc
leave
push
int
cmps
ss
jnp
add
add
das
add
cmps
cmp
sahf
or
dec
pusha
lods
clc
in
popf
mov
or
out
fnstcw
pop
ret
pop
add
loope
je
ds
push
mov
push
adc
lea
rcr
inc
(bad)
jmp
push
mov
cmp
aas
sbb
xchg
inc
pop
call
out
in
sbb
inc
call
push
inc
test
(bad)
jo
(bad)
jae
stc
push
ret
div
sub
dec
ins
inc
and
and
fbstp
push
clc
inc
fs
dec
sub
mov
in
shl
ds
jl
rcl
cs
stos
test
dec
cmp
xor
xor
das
cmp
lods
ins
adc
mov
or
add
test
ret
xchg
sbb
vpunpcklqdq
fs
jns
imul
mov
cmp
loop
mov
jg
stos
jo
inc
xchg
jmp
fs
pop
and
inc
and
ret
mov
mov
int3
das
jne
push
push
xor
test
pop
daa
iret
fidiv
and
fisttp
mov
nop
add
mov
jne
sbb
ins
out
cmp
out
and
push
mov
add
or
cmc
adc
fldpi
xchg
pop
sbb
pop
in
jp
scas
mov
sub
sbb
pushf
mov
cmps
or
in
mov
push
mov
xor
or
shl
cs
push
cmp
inc
add
push
mov
mov
ret
push
sub
dec
fwait
(bad)
cmp
pop
nop
outs
sub
add
fs
cmc
jne
mov
inc
xor
aas
adc
pop
adc
add
lock
imul
bound
and
dec
pop
sub
dec
pop
sbb
add
xor
and
xchg
mov
arpl
xor
pop
pop
fsub
sub
(bad)
adc
xor
stos
js
fild
cmp
mov
test
add
fcmovbe
fwait
jmp
inc
daa
sbb
test
test
add
mov
xor
ins
or
dec
adc
and
mul
mov
sub
dec
and
ds
rcl
gs
mov
add
fld
rcl
jns
fbstp
jb
test
mov
xor
int
mov
cmp
xchg
push
mov
dec
stos
(bad)
fwait
(bad)
push
inc
cdq
ins
sub
xchg
push
inc
inc
arpl
(bad)
int3
dec
stc
or
mov
adc
xchg
sti
lock
pop
(bad)
xchg
mov
mov
pop
outs
addr16
cdq
pop
mov
sub
les
mov
jne
dec
sbb
xor
sub
ja
fcomi
mov
daa
jo
dec
nop
and
fild
les
pop
ret
adc
fbstp
mov
scas
rcl
and
inc
or
hlt
cmp
test
xchg
jbe
retf
pop
cmp
clc
inc
adc
mov
push
fidiv
push
jmp
adc
cmp
je
mov
movs
pop
(bad)
mov
push
jb
rol
or
add
je
inc
or
test
add
jl
stos
and
rol
mov
nop
in
sub
gs
mov
ret
mov
cmp
cmp
jne
mov
mov
inc
push
test
push
std
add
icebp
add
mov
cmp
sbb
mov
ja
push
add
and
js
mov
xor
shl
out
dec
str
les
push
js
mov
adc
not
sbb
add
add
cmps
test
pop
mov
cmp
test
mov
pushf
cmps
pop
addr16
je
adc
push
les
and
inc
sbb
xor
imul
nop
aas
adc
lods
test
cmp
push
loop
push
test
push
xor
pop
aas
adc
or
cmps
pop
and
loop
sub
int
ja
ins
aaa
dec
pop
fsubr
push
and
push
loopne
sub
pop
ins
fistp
js
mov
mov
jle
loop
mov
add
mov
sub
dec
xchg
sbb
add
xchg
sbb
retf
pop
mov
xor
dec
mov
jecxz
mov
jmp
add
(bad)
arpl
or
jg
sub
xor
sub
dec
jmp
aaa
loop
fwait
test
add
dec
cmps
leave
lahf
add
add
(bad)
in
mov
aas
sbb
addr16
arpl
ds
sbb
bound
lock
imul
adc
call
add
push
mov
inc
data16
mov
(bad)
aad
and
jge
(bad)
cmp
xor
xor
rcl
xchg
movs
clc
xor
mov
call
mov
dec
dec
xor
push
push
movs
add
cmc
addr16
add
mov
push
mov
push
nop
mov
(bad)
adc
sbb
jmp
push
sub
sub
mov
cwde
jns
push
and
cwde
mov
pop
push
cmp
lock
popa
inc
dec
fsub
xor
call
mov
sub
or
and
add
and
mov
adc
ret
mov
or
scas
and
stos
shl
inc
inc
in
or
test
inc
or
icebp
xor
call
cmp
or
ja
leave
ins
lods
test
out
test
fs
mov
push
leave
push
push
add
scas
xor
sahf
call
dec
jmp
add
add
outs
inc
cmp
les
aam
inc
jne
jns
outs
jbe
inc
jl
vpmacsswd
bt
or
mov
and
imul
loop
add
jae
pop
jmp
push
sti
add
xor
sub
pop
add
dec
jmp
shl
cwde
and
test
sbb
es
inc
fs
loop
int
cmp
add
sub
dec
ss
xchg
add
adc
jb
aas
and
inc
(bad)
pop
jecxz
and
test
mov
sbb
dec
dec
xlat
rcl
push
push
pusha
sub
mov
xor
pop
lahf
lods
add
push
fisttp
cmp
add
push
dec
inc
cmps
int
add
adc
and
popa
iret
inc
outs
les
pop
dec
inc
fadd
and
ss
stc
cmp
shl
push
pop
xchg
pop
mov
sub
pop
(bad)
sub
push
movs
and
loope
inc
shr
out
in
or
pop
movs
(bad)
(bad)
mov
or
sahf
cmp
inc
sar
je
mov
jo
mov
mov
xor
inc
add
fldenv
jg
nop
dec
and
scas
or
in
inc
inc
mov
into
and
xchg
je
shl
cmps
cwde
je
mov
mov
push
mov
xchg
cli
push
cmp
xchg
outs
dec
mov
jo
xchg
or
sbb
or
xor
dec
(bad)
loopne
sbb
idiv
and
fs
jns
stc
lock
mov
movs
and
push
jmp
lahf
mov
call
clc
cmp
mov
add
mov
call
test
stos
scas
leave
les
lods
jb
or
jl
xor
lea
or
push
hlt
lods
add
ret
ror
add
sbb
sbb
jmp
or
mov
lods
and
or
xor
and
rol
pop
lea
adc
and
mov
lock
jae
in
or
add
int
inc
or
cmp
and
and
and
xor
xor
adc
inc
dec
mov
inc
mov
add
movs
mov
sbb
mov
fdivr
xchg
xchg
xchg
sub
xor
dec
add
aam
sbb
ins
add
dec
loope
mov
and
pop
enter
loope
push
ss
inc
add
hlt
add
inc
or
cmp
push
call
sub
xlat
jne
inc
add
inc
xchg
cmp
jecxz
push
pusha
adc
ret
ins
fild
dec
movs
adc
call
mov
xor
fsub
mov
sub
push
and
cmp
or
pop
cdq
ror
sub
sbb
mov
mov
jne
dec
stc
jbe
sbb
pop
pop
inc
add
pop
nop
imul
nop
pop
sub
test
movs
test
in
cmp
cmps
pop
ja
sbb
in
push
arpl
mov
(bad)
test
aaa
into
jno
ja
or
gs
sub
movs
inc
loop
jle
mov
mov
call
inc
jp
push
push
stos
sub
adc
push
popa
or
cmps
sub
sbb
inc
push
inc
adc
cmp
aad
mov
movs
add
enter
lock
les
leave
or
jecxz
mov
in
cmp
test
dec
cmp
xchg
movs
push
adc
fist
and
xor
dec
fisub
or
sub
movs
jno
das
inc
adc
movs
pop
xor
push
inc
minps
mov
push
dec
pushf
loopne
inc
and
aaa
popf
sbb
adc
xor
jo
mov
sbb
adc
ins
leave
enter
out
pushf
cmp
js
pop
mov
sbb
mov
add
in
inc
faddp
inc
pop
add
fs
and
outs
enter
inc
xor
mov
sbb
push
push
cmp
add
jo
and
add
adc
add
xchg
mov
dec
or
and
add
sahf
int
pusha
or
mov
es
adc
enter
loop
sbb
sbb
sbb
(bad)
jle
push
scas
or
sbb
add
add
push
or
adc
xchg
or
or
inc
add
pop
xchg
jne
push
xor
add
cmp
jno
popf
pop
mov
and
fs
in
or
test
jns
das
push
enter
in
hlt
adc
jmp
xchg
nop
push
arpl
scas
and
xchg
adc
fs
stos
cmp
sbb
push
test
add
or
mov
cld
jmp
das
fimul
xor
fs
loop
cmp
jle
or
xor
cmp
sub
adc
call
or
xchg
scas
lea
outs
push
mov
(bad)
xchg
not
mov
mov
mov
int3
add
or
jmp
xadd
jmp
rol
push
push
les
push
ja
stos
in
je
aaa
out
or
fiadd
dec
or
sbb
jmp
dec
inc
add
fmul
out
adc
or
retf
fimul
or
or
imul
mov
inc
push
and
mov
clc
cmp
pop
jmp
mov
add
imul
sub
cmp
inc
cmp
sub
inc
inc
fmul
and
add
xor
test
push
pop
mov
loope
xchg
imul
sub
and
sbb
(bad)
(bad)
test
out
push
xchg
nop
push
xchg
mov
cmp
jl
jge
test
add
mov
dec
xor
(bad)
cmp
dec
add
das
push
mov
sub
sub
push
add
fcomp
lea
pusha
rol
push
ja
icebp
dec
call
mov
cdq
int3
add
imul
daa
enter
in
adc
add
xchg
add
push
stos
daa
pop
retf
sbb
outs
adc
je
fstp
adc
sub
xchg
sbb
popa
xor
mov
push
sbb
sub
and
xchg
inc
loop
ret
aaa
mov
je
fmul
outs
aam
and
test
adc
xchg
or
xchg
cmp
xor
add
lock
add
pop
add
inc
fisub
ins
js
test
outs
mov
(bad)
std
xor
out
in
push
xor
stc
sbb
fdiv
stc
dec
or
sub
push
pusha
inc
mov
adc
lods
nop
pop
inc
jbe
(bad)
nop
xor
int
test
ss
pusha
addr16
add
inc
or
add
pop
xor
gs
push
dec
add
cli
push
xchg
add
dec
je
outs
or
push
xor
sbb
and
sar
push
sbb
adc
lods
sbb
cmps
rcl
lahf
xor
add
push
fist
sub
jne
arpl
sbb
jne
scas
mov
and
add
adc
sbb
call
sahf
adc
(bad)
xor
(bad)
mov
cmp
fld
and
les
stos
cmp
mov
loope
push
lea
mov
mov
lods
add
popa
ja
jo
call
or
sub
xor
cmp
inc
out
test
dec
push
rcr
sub
in
popa
or
add
cmp
(bad)
mov
hlt
inc
bound
lods
retf
lahf
inc
xor
mov
pop
or
ret
jp
test
mov
jp
inc
dec
inc
daa
fdiv
push
(bad)
in
jnp
je
sub
nop
jae
sub
outs
cld
jne
rol
dec
pop
dec
xor
(bad)
or
adc
or
mov
add
push
push
cmps
cld
stos
ror
fsubr
or
xor
mov
adc
test
loop
ins
mov
dec
ret
adc
mov
loopne
fsubr
mov
jmp
stos
ss
cmps
jge
loop
repz
jmp
aaa
clts
pushf
fiadd
xchg
bound
cmp
jo
mov
jge
and
adc
daa
int
pop
psllq
xchg
inc
xchg
xchg
test
adc
dec
lock
push
mov
clc
call
jmp
js
ret
or
enter
dec
inc
inc
inc
xor
xchg
sub
push
in
and
adc
inc
push
mov
mov
out
adc
popa
out
ja
inc
femms
shr
add
(bad)
pop
cmp
push
mov
push
ss
sbb
add
jp
arpl
dec
ja
dec
and
loope
dec
inc
add
push
push
mov
int
test
cmp
or
cmp
cmc
add
dec
test
xor
pop
jbe
sbb
pop
out
jle
cmp
cmps
add
sbb
mov
nop
or
sub
jne
(bad)
inc
test
or
les
add
ja
cwde
add
mov
scas
cmp
bound
ret
sbb
mov
ins
pop
jne
jb
arpl
mov
stos
sbb
test
shl
xchg
cdq
sbb
pusha
or
sub
call
xlat
adc
sub
rol
pop
lods
inc
aaa
push
pop
test
jp
push
rcl
inc
add
pop
outs
push
push
push
ins
sub
xchg
in
movs
cdq
mov
jo
push
push
mov
adc
je
sbb
and
sub
jo
inc
addr16
ret
cmc
or
add
adc
enter
out
cmp
test
inc
push
bound
jge
mov
add
or
jno
sbb
mov
jne
rol
loop
and
adc
push
and
push
fs
sub
mov
dec
mov
add
or
mov
ror
test
jle
push
mov
jp
cmp
jne
xchg
ins
push
cmp
sbb
ror
adc
cmp
xchg
add
call
das
bts
cmp
mov
fcomp
pop
cmp
jnp
push
jecxz
mov
mov
stos
loopne
shr
imul
xor
jbe
xor
dec
or
lods
cmps
test
test
mov
adc
dec
mov
sub
mov
sub
jmp
popa
fmul
pop
inc
es
jnp
push
(bad)
dec
dec
xchg
(bad)
cmp
xchg
inc
shr
or
mov
xchg
fld
adc
push
retf
and
aad
shl
pop
pop
inc
inc
inc
push
and
and
dec
add
add
and
sbb
(bad)
mov
div
mov
sbb
push
idiv
inc
enter
sub
pop
xor
aas
or
mov
loope
lods
fisubr
lods
(bad)
mov
dec
add
add
je
sbb
jg
cdq
push
inc
pusha
add
repz
jmp
mov
movs
jge
sbb
retf
daa
les
xchg
fs
mov
hlt
mov
and
call
retf
jecxz
lods
jae
mov
adc
and
sub
pop
retf
mov
cmc
mov
adc
or
test
jmp
jg
xchg
push
ror
push
cmps
repnz
adc
pop
add
sbb
adc
dec
jns
mov
pop
jne
mov
push
jne
mov
sbb
xor
pop
fbstp
idiv
pop
jne
mov
dec
adc
pop
add
xchg
mov
add
ror
pop
jo
dec
add
push
sar
and
sub
push
cmp
and
js
sbb
fnsave
dec
dec
cmp
lahf
xchg
ret
jnp
sbb
call
call
or
or
jne
das
jmp
jecxz
ret
rol
adc
cmc
sub
lods
jo
out
push
push
and
and
(bad)
pusha
or
push
daa
fs
test
test
sub
mov
xchg
rcl
stos
or
mov
xor
and
push
sbb
clc
push
ins
or
or
mov
mov
lea
(bad)
add
imul
sbb
(bad)
adc
sub
pop
repnz
rcl
sbb
dec
push
inc
and
add
lods
fcomp
cmps
add
push
jl
add
sbb
fisubr
data16
sbb
pop
sub
and
lock
inc
lock
jmp
mov
sub
shl
mov
loope
xor
sbb
xor
or
sbb
adc
mov
mov
mov
pop
sbb
sbb
leave
push
test
push
xchg
das
xadd
xchg
sbb
add
pop
loope
adc
mov
mov
xor
xor
push
adc
cmp
and
add
jne
mov
add
jb
lahf
push
cli
mov
movs
jne
shl
jo
cld
addr16
es
(bad)
dec
jo
std
sbb
push
adc
mov
xor
mov
pop
sub
shl
jl
ror
call
push
fidivr
xor
fsubp
dec
test
adc
inc
cdq
or
sahf
inc
jl
inc
addr16
stc
ja
iret
xor
dec
inc
jnp
je
or
inc
xchg
or
or
dec
psubusw
stc
dec
outs
adc
lods
stos
fdivr
stos
cmp
ins
shl
jmp
cdq
jne
lea
mov
add
xor
ficom
pop
in
or
xor
jnp
fadd
or
adc
shl
hlt
add
adc
inc
fadd
xchg
jae
xlat
xchg
adc
in
pop
push
xchg
inc
mov
cld
leave
mov
adc
dec
mov
push
test
idiv
inc
sub
jno
cwde
clc
lock
push
mov
jp
add
cli
fild
or
paddsw
add
jge
sbb
mov
loope
retf
retf
xor
rol
stos
aam
add
es
push
xchg
mov
jno
ficom
clc
and
push
dec
xchg
dec
ins
fsub
inc
gs
cmp
push
retf
xchg
(bad)
(bad)
push
xor
pop
rcl
cmp
xchg
mov
cmps
sub
xchg
mov
sub
xchg
mov
in
push
push
jmp
rcr
ss
and
and
ins
fild
inc
mov
fisttp
inc
loope
jne
fwait
test
popf
jmp
cmp
test
sub
(bad)
sbb
xchg
pop
pop
mov
inc
cmp
in
ins
sbb
dec
bound
cmp
je
test
scas
jne
popf
xor
retf
push
cmps
mov
inc
jl
xchg
mov
loopne
rcl
pusha
inc
sti
and
push
movups
cmp
sbb
jecxz
iret
jecxz
or
xchg
jl
push
pop
or
int
mov
mov
or
xchg
retf
xor
retf
cmp
daa
pop
imul
cs
bound
mov
or
out
shl
sahf
test
adc
mov
es
or
push
mov
sbb
iret
push
pop
mov
pop
cmp
sub
push
xor
daa
dec
dec
jmp
fcmovnbe
mov
and
dec
test
jg
push
or
mov
daa
loopne
pushf
or
adc
cmps
test
xor
jo
or
mov
mov
stos
ins
cdq
xor
pop
jl
or
adc
cwde
sahf
inc
stc
jmp
and
sbb
cmp
mov
push
cmp
inc
ret
mov
ss
adc
es
pop
xor
lahf
enter
inc
jne
mov
dec
sbb
jne
iret
xor
leave
mov
ins
and
jno
lods
inc
loope
jbe
fild
sub
les
mov
inc
mov
xor
adc
inc
not
and
lods
add
or
ret
add
mov
xor
mov
out
sbb
xor
mov
xor
adc
cs
sub
sbb
push
push
and
jns
addr16
jp
sub
pop
fist
test
xchg
rol
mov
xchg
movzx
(bad)
cmp
mov
(bad)
shl
mov
jo
cwde
inc
mov
movs
out
push
rcr
pop
and
(bad)
jmp
jl
sub
adc
fwait
mov
mov
xchg
push
or
and
(bad)
sahf
dec
or
dec
inc
cmp
in
je
cmp
je
pop
je
xchg
(bad)
dec
cmp
lock
sbb
ds
cmps
pop
sar
shl
pop
push
mov
(bad)
bound
and
cmp
inc
ficomp
pusha
loopne
push
adc
out
push
cmp
sub
(bad)
or
or
add
xor
not
xor
(bad)
sahf
add
sbb
cmps
fcom
add
sub
(bad)
or
es
dec
or
rcr
xchg
arpl
cmps
loop
shl
bound
push
in
pop
rol
pop
push
pop
(bad)
pop
aaa
push
mov
cmp
inc
pop
jo
cwde
arpl
pop
cmp
aas
test
retf
clc
mov
jnp
cmps
xor
sahf
mov
lea
and
xchg
pop
mov
inc
sbb
adc
or
rcr
rcr
jne
es
and
xor
fistp
sub
inc
mov
dec
les
jg
dec
adc
add
inc
ins
dec
xchg
ins
pop
ret
sar
mov
or
fnsave
inc
push
and
sbb
sbb
movs
mul
sub
xchg
leave
rcr
adc
jecxz
dec
push
or
xchg
cmps
lock
data16
pop
das
or
dec
jg
or
cmp
xor
dec
mov
dec
rol
pop
mov
and
fadd
test
mov
(bad)
jge
add
hlt
dec
jne
gs
inc
loopne
cmp
jnp
jae
pop
ja
or
js
inc
jne
xchg
jge
icebp
mov
mov
xchg
mov
mov
das
ins
ins
iret
xchg
xor
xor
mov
sub
mov
imul
lea
add
push
je
jecxz
cmps
jge
in
jb
sub
mov
imul
push
dec
or
shr
in
enter
leave
mov
nop
push
nop
jno
test
or
dec
jge
iret
mov
outs
pop
(bad)
(bad)
and
xor
xlat
cld
mov
(bad)
fild
test
add
jns
mov
xchg
push
mov
fwait
add
inc
jmp
sub
add
sub
add
movs
fwait
sbb
add
push
lods
loopne
fwait
jmp
dec
rol
jbe
movs
or
add
test
adc
or
mov
push
adc
icebp
pop
loope
jno
or
jno
aaa
mov
adc
and
sub
idiv
and
mov
push
jns
jmp
popa
push
and
and
push
inc
loope
test
int
mov
adc
aaa
mul
or
clc
sbb
add
sti
adc
dec
cmps
xchg
jmp
aaa
xor
dec
pusha
mov
arpl
xor
pop
push
xor
mov
mov
int
push
test
add
jmp
sbb
in
mov
lods
inc
js
mov
sbb
test
inc
add
push
das
inc
pop
or
add
mov
sbb
or
dec
xor
int
ror
push
test
imul
outs
pop
push
jmp
inc
mov
cmp
cmp
push
test
xchg
add
push
nop
idiv
push
push
adc
test
ret
and
fisubr
jo
inc
clc
sbb
(bad)
in
rol
rol
gs
xor
inc
aad
lea
inc
sub
icebp
adc
jae
mov
xor
inc
mov
xchg
mov
xor
add
push
call
in
inc
rcl
ds
or
in
xor
and
js
xchg
movs
movs
sbb
jp
dec
and
and
or
aas
test
outs
add
and
ret
or
inc
cmp
xchg
adc
cmp
ins
dec
test
loopne
sub
retf
test
jnp
(bad)
cld
mov
push
daa
(bad)
retf
adc
jp
sbb
push
sub
repz
inc
loopne
pop
add
bound
mov
xchg
jno
pop
out
ror
inc
daa
lock
addr16
xor
dec
adc
(bad)
ret
jno
dec
xchg
add
popf
and
call
and
or
and
or
pusha
dec
clc
les
aas
or
add
and
xor
adc
or
ss
cmp
dec
xchg
xor
std
xchg
xor
inc
xor
push
or
adc
icebp
daa
sbb
loopne
inc
or
inc
cmp
stos
shl
or
or
sbb
mov
push
mov
and
lock
sbb
dec
push
add
pop
dec
sbb
jmp
mov
pop
sub
cs
add
in
imul
xor
adc
pop
or
leave
pop
push
adc
lods
dec
jge
jp
push
mov
retf
mov
pusha
cs
or
or
sbb
fisubr
add
pop
daa
mov
jne
outs
adc
hlt
add
push
daa
pop
loopne
pop
inc
jmp
add
xchg
push
or
push
add
pop
test
push
in
repz
daa
movs
out
xor
cwde
mov
add
mov
repz
sub
and
add
xchg
push
dec
pop
or
pop
scas
ss
xchg
mov
ficomp
sub
mov
jnp
ss
cwde
mov
gs
pusha
(bad)
mov
repz
push
or
mov
adc
fs
or
sub
repnz
sidtd
clc
ds
push
inc
and
push
ins
adc
cli
add
mov
push
mov
add
pusha
pop
add
call
and
sbb
or
push
leave
sbb
hlt
rol
pop
enter
rcl
sub
sub
call
or
sub
mov
mov
push
inc
(bad)
int3
popf
push
sbb
pop
dec
inc
cmp
pop
or
pop
stos
hlt
xor
sub
adc
imul
push
pop
push
std
call
add
adc
xor
outs
push
ss
movs
clc
lods
push
(bad)
retf
mov
rcr
and
jbe
shl
dec
inc
and
mov
dec
and
dec
in
scas
mov
xchg
inc
dec
push
imul
push
jb
or
in
pop
or
aas
mov
sub
add
sub
(bad)
push
mov
outs
fisubr
jp
dec
and
pop
fiadd
xor
cmps
inc
in
pop
push
test
inc
sbb
add
bound
push
jg
ins
jle
mov
outs
pop
in
std
push
test
and
cmp
add
inc
out
dec
rol
add
xor
dec
retf
xchg
call
sar
(bad)
cmp
addr16
jge
fsub
loop
add
add
repz
lock
jae
jno
test
rol
cmp
cmc
mov
push
mov
mov
rcl
sub
ins
shl
add
shl
mov
mov
and
repz
or
popa
std
scas
sbb
cmp
pop
jl
mov
or
jb
jb
push
inc
pop
cmp
cmp
popf
rcl
retf
rol
mov
lock
cli
daa
je
or
je
adc
mov
xchg
imul
addr16
jmp
repz
inc
push
call
adc
clc
inc
push
lods
lods
arpl
cmc
mov
push
mov
jnp
add
push
jle
or
scas
stos
stos
test
stos
cmps
jmp
and
push
ins
push
lds
in
sub
push
jne
dec
or
fdiv
pop
dec
and
aaa
aam
lock
sbb
jmp
push
pop
fcomi
push
inc
test
jnp
and
mov
jne
jne
add
push
add
imul
jge
sbb
jl
out
xor
push
mov
cmp
in
sub
shl
test
pop
iret
jg
inc
ja
mov
add
and
jo
pop
jne
cwde
add
movs
xchg
test
cmp
aam
jmp
dec
xor
mov
arpl
xor
adc
inc
ret
sbb
xchg
test
pop
enter
cmp
and
adc
popa
pop
and
xor
mov
and
jnp
mov
cdq
mov
repz
add
pop
add
in
lock
cmp
mov
rcr
dec
or
and
mov
gs
xchg
xchg
test
in
fnsave
jno
shr
pop
dec
dec
and
test
or
call
mov
or
and
and
add
mov
adc
pop
adc
push
loopne
fisttp
ret
fld
jo
les
sub
cli
inc
shr
mov
push
not
mov
adc
or
sub
sub
xlat
sbb
inc
bound
shl
add
pop
mov
shl
cmp
sub
pushw
call
mov
cli
add
scas
loop
cmp
(bad)
cmp
add
sbb
ret
push
pop
jp
add
add
test
repnz
mov
cmp
pusha
mov
jo
or
inc
push
jmp
xchg
pop
lock
cmps
sar
pushf
jle
mov
mov
adc
hlt
sub
cmps
adc
or
loope
adc
outs
cmp
mov
daa
ss
pop
add
sbb
cmp
(bad)
lds
pop
xor
pop
mov
adc
jmp
lock
xchg
outs
push
or
sub
retf
inc
std
mov
sub
inc
push
inc
in
add
aam
mov
scas
adc
rcl
sti
sub
sahf
push
les
std
por
ret
cdq
jmp
call
sub
cdq
mov
sub
xchg
not
retf
out
or
pop
xlat
scas
mov
xor
and
dec
loop
ins
xor
push
clc
(bad)
jns
and
test
mov
in
push
pop
mov
inc
shr
add
cdq
mov
mov
(bad)
dec
pop
add
xchg
dec
icebp
std
daa
cli
mov
xchg
cdq
and
add
sub
sbb
add
loopne
int3
jbe
mov
jb
lods
jmp
sbb
inc
or
aad
pop
js
xchg
in
mov
mov
shl
ins
imul
mov
clc
adc
push
dec
jo
adc
add
mov
(bad)
sub
pop
loope
out
cmp
les
adc
shl
hlt
inc
mov
std
adc
sbb
push
adc
sub
jmp
add
or
das
push
cmp
jnp
shl
jns
mov
push
fld
popf
fdiv
or
fdiv
xchg
jb
xchg
and
sbb
cmp
push
out
xor
and
repnz
mov
xlat
add
pop
jle
iret
mov
sub
(bad)
pop
je
sahf
inc
fnstenv
jo
(bad)
and
push
rol
ret
shl
outs
stos
sub
mov
sbb
jae
pop
outs
add
add
or
add
cmp
xor
inc
lds
test
movs
mov
xchg
js
pop
and
dec
cmp
or
ret
test
mov
add
push
sub
push
xlat
dec
test
std
les
sub
mov
add
mov
or
or
push
loope
nop
into
rcl
push
ficom
test
(bad)
xchg
jp
adc
and
dec
lods
mov
push
xor
push
push
adc
add
xchg
daa
push
fmul
inc
jmp
shl
inc
pop
xchg
das
jne
add
sub
inc
sbb
or
add
pop
enter
cs
call
xchg
adc
pop
adc
mov
sub
pop
pushf
test
xchg
adc
mov
mov
mov
xchg
and
ds
imul
stos
fstp
dec
arpl
imul
lock
xchg
sub
outs
pusha
sbb
ret
mov
or
jns
lods
xchg
lods
xchg
or
and
lods
les
mov
push
sbb
(bad)
cwde
push
pop
pop
adc
add
lods
sbb
sbb
scas
test
and
les
add
cmps
sti
pop
jl
pop
jnp
adc
lahf
imul
(bad)
movd
ficom
push
inc
inc
add
das
sub
loope
inc
sub
and
lock
and
mov
shr
ret
lods
or
or
add
movs
mov
jno
adc
test
pop
shl
sub
rol
adc
add
add
test
aas
ret
and
inc
cld
pop
pop
ins
push
loope
mov
adc
sbb
sbb
push
sub
pop
add
adc
out
xor
pop
(bad)
fcmovb
js
adc
out
mov
push
cs
jne
(bad)
inc
(bad)
ret
pop
ds
xor
cmp
mov
pop
das
mov
inc
lock
xor
xchg
xchg
inc
xor
(bad)
in
dec
test
mov
pop
xor
and
add
inc
mov
or
cmp
(bad)
arpl
add
mov
movs
adc
mov
xchg
jnp
scas
imul
xchg
xchg
rcr
mov
mov
(bad)
xor
or
leave
loopne
sbb
(bad)
ja
xchg
lds
sbb
div
out
pop
or
sbb
call
or
mov
or
inc
jmp
psraw
imul
ins
enter
ret
push
addr16
pop
mov
leave
xor
inc
in
sbb
cmp
shl
xchg
jl
mov
lods
xor
push
dec
(bad)
mov
arpl
imul
sar
imul
inc
mov
clc
pop
daa
bound
pushf
and
call
adc
gs
lock
mov
ss
sub
in
imul
sbb
jl
push
mov
adc
fcomp
mov
inc
inc
mov
sub
je
maxps
mov
clc
dec
setno
dec
sbb
xchg
mov
clc
adc
or
imul
es
(bad)
aas
rcl
inc
xchg
mov
in
call
dec
inc
loopne
sbb
dec
push
mov
mov
push
setne
pop
sub
jno
add
out
sub
add
sub
inc
cld
xor
add
call
and
add
mov
xor
sar
inc
dec
bound
jae
xchg
add
adc
dec
lds
pop
jb
cmc
mov
lods
rcl
pop
out
jo
mov
dec
inc
dec
imul
jne
clc
push
nop
mov
dec
or
add
and
xchg
or
aam
xor
pop
or
mov
aaa
fistp
ds
fld
pop
sub
(bad)
push
sub
pop
mov
fsubr
je
xchg
xor
add
sub
or
xchg
or
inc
inc
sub
push
bound
or
jae
mov
loop
pop
xlat
jle
inc
ss
push
ds
or
push
dec
push
or
out
pop
les
loopne
xor
mov
cmp
jecxz
and
cmp
xor
mov
or
push
mov
dec
push
mov
mov
ins
xchg
add
sub
add
inc
add
pop
add
inc
add
jg
dec
mov
mov
jmp
add
add
inc
add
into
nop
leave
xchg
cmp
inc
dec
mov
and
je
loope
js
cli
ins
ja
(bad)
pop
fidiv
ror
daa
lds
push
xchg
xlat
sbb
or
cmp
loopne
retf
mov
ins
pop
mov
xchg
das
mov
cmp
das
or
lahf
mov
ss
sub
and
sbb
cmp
dec
fs
sub
adc
push
fmul
and
icebp
xchg
xchg
ret
rol
out
cmp
pop
xchg
fiadd
add
iret
sahf
push
sbb
loop
jae
iret
cmps
mov
or
nop
mov
xchg
nop
or
or
mov
inc
lock
dec
dec
xchg
mov
imul
mov
enter
out
bound
mov
test
dec
xchg
mov
enter
mov
test
or
mov
push
push
adc
mov
xchg
inc
js
ins
dec
pop
inc
cmp
pop
enter
rol
and
mov
or
fstp
pop
jmp
das
jl
pop
push
jmp
fidiv
jno
and
ins
pop
daa
jo
xchg
add
jb
mov
ret
mov
dec
dec
and
pop
xchg
cmc
call
pop
ficomp
rcr
or
push
push
xor
push
push
pop
xor
int
dec
dec
ss
and
push
push
and
neg
inc
pusha
sbb
push
add
fiadd
push
and
xor
and
inc
xor
dec
xchg
mov
mov
scas
outs
je
adc
jno
dec
ss
test
mov
out
xor
pop
push
into
cmps
inc
push
call
inc
loopne
fisttp
or
sbb
jp
pusha
push
ffree
mov
scas
sti
out
jl
or
jle
cmp
sahf
sbb
shr
call
mov
retf
imul
js
popf
mov
mov
mov
or
push
add
movs
adc
leave
and
cmp
mov
cmps
mov
int
mov
pusha
push
push
pop
fbstp
push
xlat
mov
fs
inc
mov
push
ret
mov
xchg
or
fwait
dec
cmc
adc
clc
icebp
test
mov
stos
ja
cmc
loopne
mov
cmp
ja
sbb
loope
jo
inc
sbb
pop
mov
pop
pusha
cld
adc
loope
jb
adc
rcr
rol
pop
aam
fist
inc
mov
imul
cmp
inc
mov
imul
xor
sub
add
call
fiadd
(bad)
cmp
test
pop
mov
sbb
adc
cli
add
jmp
xor
pusha
fs
sar
call
sbb
cld
dec
mov
and
sub
lea
xor
in
mov
adc
fdiv
rol
cmp
cmp
push
repz
movs
imul
add
adc
fisubr
add
inc
neg
mov
inc
sub
and
add
jo
push
add
or
pop
inc
pusha
adc
ret
adc
pop
xchg
inc
(bad)
js
ins
dec
add
arpl
cmps
ror
ror
pop
push
xchg
pusha
mov
rol
and
jne
cmp
sbb
test
sub
pop
pop
pop
inc
lea
xor
cmp
push
mov
xchg
lods
pop
or
pusha
in
dec
jae
cmc
adc
movs
add
pop
adc
xchg
xor
inc
or
jae
(bad)
in
adc
jne
jmp
pop
sbb
or
movs
push
cmp
call
call
adc
add
fnstenv
inc
test
test
and
fistp
push
jle
or
sub
inc
pop
adc
test
lods
std
add
xchg
adc
adc
aad
or
mov
pop
xor
mov
jl
jnp
pop
fs
or
leave
jmp
jne
cmp
or
call
and
dec
movs
sub
xchg
js
mov
push
mov
xor
les
jbe
xchg
add
rcl
inc
aaa
mov
daa
ins
imul
push
push
mov
or
or
cmps
xchg
xor
push
aad
sbb
and
movs
imul
mov
push
not
out
dec
popf
adc
inc
rcr
ins
int
leave
mov
and
or
out
dec
jmp
sub
add
fld
idiv
pop
dec
inc
and
xor
mov
fcmovne
aam
sbb
inc
mov
mov
dec
scas
or
rcr
sbb
cmp
sub
clc
or
jno
frstor
or
dec
sub
mov
cld
pop
and
mov
cmp
outs
push
sub
add
xchg
sar
xor
enter
(bad)
repz
imul
loopne
mov
inc
int
hlt
scas
iret
repz
sbb
xor
fmul
pop
pop
mov
push
and
cmps
cmp
js
sbb
sub
ja
jmp
sbb
xor
lods
push
pushf
enter
mov
dec
mov
sbb
ret
and
cmp
sub
inc
nop
push
into
cmps
(bad)
push
dec
cmp
jge
outs
add
mov
and
xlat
inc
fadd
mov
cmp
repz
fsub
icebp
dec
int
adc
dec
push
sub
rcr
inc
and
inc
or
xor
lock
fiadd
pop
add
sbb
mov
fsubr
into
es
mov
nop
clc
adc
fild
shl
cmp
push
dec
lea
pop
pop
cmp
mov
mov
xor
xor
test
mov
mov
or
xchg
clc
cmp
bound
mov
arpl
xor
les
cld
fld
pop
hlt
je
clc
pop
and
add
outs
iret
dec
xchg
pop
(bad)
retf
ficom
test
sbb
sub
lock
sub
push
xor
mov
sub
push
pop
outs
or
xchg
rcr
mov
(bad)
cs
rcl
fnsave
(bad)
xchg
pop
push
scas
mov
(bad)
rol
inc
pop
push
call
mov
cmp
enter
pop
leave
pusha
addr16
pop
xchg
or
fiadd
dec
sti
and
adc
add
and
and
fdivr
cmp
xor
add
lock
xor
sbb
sbb
call
adc
fsubr
outs
xchg
mov
or
rcl
xor
or
pop
sub
add
jo
sbb
inc
sbb
int
test
nop
fimul
and
sub
lods
pop
(bad)
mov
cli
mov
mov
mov
cmp
imul
cdq
cli
shl
cmps
push
mov
mov
test
out
mov
adc
sub
dec
lods
imul
cmp
add
dec
jmp
sti
jl
mov
add
cmp
pop
rcr
cmp
ror
push
pop
mov
ficom
xchg
mov
or
out
dec
xchg
in
mov
fcompp
xchg
xor
adc
enter
push
ds
dec
cmc
test
cmp
out
ror
mov
mov
cs
fucomi
mul
in
dec
ins
mov
test
or
(bad)
and
je
jmp
(bad)
loope
outs
cld
mov
push
jns
add
sahf
mov
nop
mov
retf
lock
daa
push
push
mov
mov
sbb
rcr
push
jle
fcom
push
inc
or
jne
aaa
pop
das
pop
pop
xchg
clc
mov
mov
jp
xor
push
mov
and
inc
loopne
(bad)
or
test
repz
sar
add
mov
or
shl
inc
xchg
test
add
in
fistp
push
popa
or
sub
ret
into
jg
or
mov
jnp
or
cmp
into
and
movs
rol
jge
test
popa
mov
sub
aaa
mov
clc
jecxz
jg
mov
fsubr
or
test
mov
jmp
xchg
pop
ret
mov
js
jecxz
dec
in
int3
jmp
or
ret
leave
cmp
add
add
iret
jae
mov
mov
cmps
test
imul
sbb
mov
sbb
add
or
jns
cmp
mov
xchg
mov
lods
sub
ret
adc
mov
movs
inc
rcr
pop
inc
adc
cmps
mov
xchg
enter
daa
mov
dec
lock
and
lea
sub
pop
push
stc
inc
leave
pop
xlat
imul
xor
call
sti
ror
das
inc
push
adc
not
or
hlt
loope
xchg
adc
mov
ficom
push
push
push
add
mov
xor
fmul
sub
jge
xor
inc
add
clc
dec
stos
movs
dec
jge
dec
pop
dec
in
test
and
icebp
jp
jp
add
inc
js
push
cmp
dec
jb
push
or
fld
mul
icebp
and
inc
sbb
xchg
rcr
sbb
xchg
sti
jo
cdq
mov
retf
push
or
and
fs
cmp
retf
inc
mov
ss
dec
xlat
rol
mov
pop
iret
cmp
je
or
and
fs
out
bswap
push
pop
adc
adc
imul
ss
div
inc
and
aam
arpl
add
sti
push
jl
xchg
nop
push
or
xchg
add
pop
aam
aas
adc
in
push
add
inc
jmp
jmp
and
mov
rcl
lock
sti
xor
xor
fsubr
or
xor
xor
aam
nop
jae
push
sub
test
xchg
fidiv
add
xchg
xchg
shl
dec
cmp
sub
(bad)
rol
jo
add
xchg
and
arpl
and
mov
repnz
nop
dec
imul
mov
imul
in
aam
add
ds
sub
inc
mov
push
pop
fld
push
sbb
jae
sbb
mov
pusha
or
ins
jmp
test
inc
add
std
outs
jmp
cmp
jmp
les
in
xor
xchg
mov
inc
imul
xchg
popa
or
xchg
es
sub
aad
cdq
push
push
mov
mov
dec
adc
pop
pusha
pop
sbb
dec
imul
cmp
xchg
lds
xor
jae
xchg
and
dec
les
nop
hlt
inc
jecxz
add
cwde
lea
inc
imul
push
push
and
inc
cli
(bad)
push
xchg
push
pop
pop
sub
add
in
add
fs
and
xor
xchg
inc
xor
jb
push
or
xchg
dec
hlt
adc
xchg
mov
mov
sub
inc
mov
mov
and
movzx
enter
fbstp
sar
lea
mov
std
in
mov
sub
push
(bad)
pop
nop
pop
loopne
jmp
add
xchg
lock
push
std
pop
scas
jle
dec
or
shr
nop
int
inc
sub
loope
push
aas
fsubr
inc
pusha
mov
mov
inc
adc
jne
xchg
push
cs
and
sbb
xor
inc
cmp
cld
gs
mov
mov
sub
cmps
js
imul
imul
pop
cmp
je
push
rcr
jp
in
dec
jge
mov
add
test
pop
cmp
xchg
mov
cmp
(bad)
sub
hlt
inc
loop
xchg
xchg
rol
ins
xchg
mov
xchg
add
hlt
fs
jle
aaa
test
pusha
pusha
icebp
sub
dec
rcl
add
xchg
add
add
cmp
jmp
push
(bad)
and
mov
inc
jne
das
push
jle
jle
pop
and
inc
xlat
sbb
or
jle
add
ss
add
add
push
or
sbb
mov
push
jmp
xor
clc
ins
dec
push
or
cmp
jne
cmp
or
mov
jno
jo
fs
mov
cmp
or
fild
in
pop
xor
cmp
call
test
ret
add
pop
adc
or
outs
jmp
push
cmp
(bad)
dec
retf
push
dec
jl
mov
inc
iret
imul
stos
ins
add
mov
jbe
or
cwde
pop
les
or
mov
pop
cmp
jg
push
mov
dec
cmp
or
cwde
jb
push
pop
or
scas
mov
lods
cs
cmp
pop
mov
or
lods
add
add
into
xor
sahf
ret
repz
inc
add
pop
and
call
loop
or
xchg
sub
inc
xor
jl
mov
add
jg
push
das
(bad)
mov
adc
add
mov
adc
xchg
movs
sub
repnz
sbb
and
daa
xchg
in
inc
out
dec
inc
sti
ins
outs
imul
push
mov
add
adc
or
fwait
dec
bound
jmp
imul
sub
mov
ss
add
mov
add
sub
sub
add
shl
pop
sets
mov
dec
cmp
fst
pop
add
les
and
fbld
sub
pop
stc
push
fnstcw
xor
lahf
shl
adc
outs
and
aaa
push
pop
push
std
sub
adc
pop
into
mov
jecxz
call
fstp
xor
lods
cmp
pop
push
add
or
std
lock
push
out
jae
pop
fsubr
push
push
or
mov
mov
sbb
sub
loopne
push
and
and
add
mov
dec
loope
shr
adc
sahf
lods
fadd
jge
mov
add
outs
inc
cmp
pop
fimul
dec
adc
stos
not
popf
iret
(bad)
sbb
iret
dec
cmovbe
in
add
enter
and
les
cmp
jne
leave
ins
mov
adc
icebp
daa
lock
popa
adc
popa
lea
and
jae
adc
inc
(bad)
sub
aad
pop
jne
rcl
fdivr
adc
shl
arpl
sub
cmps
adc
jge
arpl
mov
sahf
dec
and
std
sbb
add
imul
and
lods
out
or
pusha
inc
sub
mov
pop
adc
pop
sub
ins
outs
pusha
cmp
les
adc
fisub
movd
jo
adc
add
ret
sub
or
mov
sbb
or
lea
fwait
rcl
rol
stc
adc
std
ret
inc
dec
mov
jo
sub
or
jbe
cmp
in
push
or
sbb
or
adc
mov
push
(bad)
add
mov
mov
add
aam
(bad)
aam
daa
cmp
jb
sub
xchg
inc
jmp
fisubr
jmp
popa
ds
mov
sti
push
aad
cmp
sbb
and
push
pop
sub
jmp
xlat
push
adc
ss
pop
les
xchg
and
add
in
sbb
inc
cs
add
dec
ins
pop
lahf
(bad)
jmp
lods
jmp
dec
xchg
mov
or
es
mov
dec
push
sub
cdq
or
xchg
sub
pop
xlat
inc
in
inc
xchg
in
inc
movs
(bad)
fcomp
inc
dec
les
fs
xlat
loopne
jbe
mov
ja
jecxz
sub
out
cmps
or
pop
pop
pop
or
aas
ins
jge
push
cpuid
jmp
sbb
xchg
into
movs
push
sub
cmp
mov
push
pop
xor
jne
sbb
gs
mov
adc
jns
int
and
mov
pop
xor
dec
mov
repz
or
and
adc
in
in
and
ja
leave
inc
lock
retf
sub
or
or
add
lods
das
pop
push
rcr
mov
pshufw
adc
int
fwait
rcl
inc
add
pop
ret
cmp
sbb
pcmpeqd
and
leave
push
fnsave
or
ror
adc
or
jmp
cmp
mov
and
mov
cmp
cmc
sbb
adc
adc
dec
push
pop
xchg
pop
fidiv
push
cld
std
mov
rcl
dec
inc
push
test
test
xchg
ret
pushf
or
add
push
or
add
pusha
dec
ds
mov
or
xor
stc
add
xor
xor
(bad)
sub
cmp
or
dec
lods
adc
xor
clc
or
pop
dec
push
adc
mov
nop
push
xor
test
pop
adc
inc
test
mov
pxor
rol
addr16
inc
cmp
jnp
mov
paddsb
and
cmp
mov
sbb
scas
sub
imul
push
cmp
lods
ins
popf
cmc
add
jbe
xor
or
adc
pop
inc
ds
add
pop
xchg
popf
or
mov
pusha
mov
popa
mov
dec
addr16
or
dec
in
pusha
dec
cmp
call
or
push
bt
or
mov
push
xchg
mov
add
cwde
pop
pop
push
add
cmp
dec
aad
movs
call
je
adc
adc
push
retf
jmp
add
aam
add
in
popa
ficom
sub
dec
mov
jno
mov
xchg
mov
mov
push
dec
sbb
es
inc
lds
mov
mov
rcr
mov
sbb
fmul
neg
push
dec
aaa
dec
jge
cmp
dec
jae
or
test
js
inc
das
in
adc
add
mov
add
sbb
cmps
in
adc
in
arpl
xchg
add
mov
adc
sub
inc
xlat
mov
jns
ror
ret
sbb
pop
sbb
out
fcomi
mul
push
popa
dec
and
or
sbb
xor
outs
and
add
js
or
push
repnz
dec
(bad)
out
in
push
xor
sbb
das
or
cmc
pop
add
mov
add
or
xor
push
clc
cwde
push
das
inc
daa
sub
inc
dec
(bad)
jbe
sbb
or
rol
adc
xor
or
in
ret
pop
add
jae
mov
mov
adc
movs
mov
jecxz
test
cmp
mov
dec
imul
cli
jo
aas
push
mov
pop
cmp
pusha
loopne
(bad)
in
inc
adc
dec
mov
mov
xor
dec
mov
lods
or
xchg
sti
jmp
sub
(bad)
pusha
test
leave
aaa
sti
inc
push
rcr
pop
push
push
and
mov
imul
add
pop
sbb
loopne
addr16
push
push
sahf
xchg
cmps
inc
xor
das
add
adc
mov
push
adc
and
inc
mov
pop
rcr
and
sbb
mov
mov
and
add
fiadd
mov
sub
dec
adc
xchg
lods
rcr
mov
adc
push
xchg
mov
jl
and
sbb
sbb
sbb
and
addr16
mov
adc
rcl
out
sub
sub
push
jmp
dec
push
jge
int
inc
daa
adc
fwait
xchg
or
xchg
add
pop
or
sub
cld
jnp
repnz
icebp
mov
sub
add
shl
xchg
cmc
sbb
sbb
mov
cdq
cld
je
fcom
retf
jno
jmp
push
or
mov
and
dec
aaa
inc
add
and
mov
xor
mov
inc
mov
mov
outs
in
inc
add
jl
sbb
adc
lods
mov
or
and
test
pop
sbb
jne
sub
and
arpl
or
adc
pop
sbb
out
enter
add
pusha
scas
mov
scas
pop
test
ins
sub
cli
xchg
push
imul
or
xchg
lock
lock
push
and
imul
je
and
xlat
push
sbb
adc
and
pusha
jae
mov
jae
push
cmp
aas
std
xchg
xor
jo
and
(bad)
lock
or
test
rcr
jne
sub
loopne
in
jmp
push
pusha
imul
mov
or
adc
gs
mov
inc
jo
and
mov
loopne
sub
pop
test
mov
add
por
inc
push
in
add
push
add
or
dec
pop
cmp
xlat
cmp
stos
mov
jmp
xor
sbb
pop
adc
dec
pusha
add
retf
lea
jecxz
gs
dec
or
shr
add
or
add
add
cmp
jo
dec
inc
add
mov
and
outs
stos
loope
push
and
sub
or
test
xchg
cmp
add
and
mov
mov
and
lods
sub
mov
jo
inc
mov
cmp
dec
dec
out
rcl
cmp
aas
dec
xchg
add
jmp
in
stc
jnp
cmp
out
bound
(bad)
push
push
ss
test
add
or
dec
jbe
push
jne
cmp
xor
xchg
les
mov
xchg
mov
ja
mov
push
push
pop
mov
adc
(bad)
hlt
pop
pop
or
jno
fadd
xor
push
pop
and
cli
add
je
mov
fdivr
pop
gs
add
or
data16
adc
nop
lock
out
xor
lea
push
sbb
or
adc
adc
fwait
in
call
mov
sbb
push
aaa
data16
and
rcl
sub
adc
shl
loope
dec
xlat
ret
sbb
jnp
add
popa
sbb
mov
pop
(bad)
pop
xor
adc
sub
lods
sbb
dec
and
fmul
arpl
lahf
mov
mov
iret
pop
mul
sub
into
pop
inc
xor
bound
repnz
cmps
push
xchg
pop
xchg
jmp
out
ret
dec
jae
cmp
fs
ror
pop
les
sub
add
mov
sub
add
mov
fisttp
cmps
mov
xchg
or
or
les
lahf
popa
sub
mov
inc
dec
fs
ja
push
mov
push
adc
add
scas
lock
sar
sub
xchg
test
dec
mov
pop
loop
or
ja
push
cmp
int3
fwait
out
sub
inc
sbb
and
pop
retf
pop
add
out
hlt
sub
mov
loopne
push
cmp
add
imul
sub
popa
aad
and
sbb
out
repnz
popf
test
adc
push
mov
mov
xor
fcom
and
cdq
pop
pop
pop
adc
adc
imul
rol
leave
inc
bswap
push
dec
das
add
and
or
mov
xor
mov
bound
ja
mov
test
jmp
mov
std
jo
lahf
fcom
sbb
cli
and
mov
push
hlt
aam
xor
add
mov
(bad)
push
scas
cmc
jmp
sbb
cli
ror
pop
pop
add
fld
retf
sbb
add
cmp
sub
or
push
aam
inc
(bad)
lds
in
inc
pop
inc
jl
push
cmp
cmp
pcmpeqb
xchg
cmp
lock
xor
push
xor
add
jnp
clc
push
jnp
popa
dec
loope
cmc
test
mov
lea
xchg
call
ins
xlat
call
cmp
and
add
popa
and
and
mov
xchg
jno
or
dec
clc
or
mov
mov
xor
es
adc
jae
loopne
or
shr
xchg
(bad)
int
cwde
mov
mov
push
push
mov
xlat
lahf
test
push
scas
pop
pop
loopne
push
nop
scas
and
xor
inc
add
pop
adc
data16
sub
add
int3
push
stos
loop
cmp
add
mov
fsubr
pop
adc
sub
das
add
mov
in
retf
xchg
add
ds
mov
sbb
cmp
cli
enter
scas
das
in
nop
popa
test
add
inc
pusha
cmc
push
rol
pop
push
icebp
mov
les
jp
push
je
adc
push
jo
pop
mov
and
lods
pusha
mov
pop
xlat
or
sbb
adc
add
je
sbb
push
or
lods
test
rol
push
jmp
ret
je
jmp
inc
jecxz
ins
or
outs
push
(bad)
push
test
inc
push
mov
inc
inc
push
add
in
add
jbe
dec
rol
cmp
fisub
adc
ffreep
adc
fsubr
fiadd
inc
push
outs
int3
pushf
xchg
mov
and
mov
mov
pop
repz
mov
mov
dec
xchg
movs
xlat
aaa
push
pop
pop
or
jl
push
sub
mov
es
enter
or
aaa
sub
stos
clc
addr16
cwde
dec
push
inc
and
mov
push
pop
add
adc
xor
mov
xor
push
test
inc
addr16
cdq
dec
cmp
test
test
xchg
and
inc
mov
pop
ins
pop
sar
stos
clc
imul
cs
mov
sub
out
addr16
xlat
rcr
push
jge
ins
loope
inc
out
add
ror
mov
ss
movs
xlat
inc
xchg
mov
mov
or
js
sbb
or
push
push
sbb
dec
stos
test
lock
adc
lsl
ins
pushf
xor
in
sbb
pop
fdivrp
les
and
jecxz
(bad)
or
fcomp
push
xlat
push
sti
push
daa
ret
cmp
xor
add
in
push
aam
and
mov
ucomiss
push
(bad)
out
push
push
and
clc
popa
jno
add
lock
repz
cmps
cmp
fdivr
and
out
lods
mov
jg
xchg
or
push
add
adc
xchg
adc
fsub
xor
int
push
and
push
dec
rol
into
adc
add
out
jo
or
jno
rol
mov
dec
call
mov
adc
inc
sub
adc
rol
add
inc
push
mov
adc
mov
sub
push
push
in
sub
push
cdq
into
mov
pop
add
mov
inc
ret
sbb
dec
adc
pop
jp
add
stos
mov
data16
imul
les
push
sub
inc
and
sub
push
adc
mov
jmp
or
add
rcl
lods
cmp
push
movs
or
rcl
outs
pop
clc
cs
jne
adc
arpl
int3
pop
into
xor
es
dec
mov
xchg
movs
sub
adc
imul
into
das
dec
sub
call
jae
fadd
test
sub
(bad)
cmps
and
adc
xchg
push
jo
mov
cs
sub
ret
das
mov
dec
sbb
enter
fsub
inc
pop
mov
add
(bad)
out
xor
mov
push
or
adc
mov
rol
add
adc
dec
aaa
gs
std
or
repz
aam
and
add
out
nop
push
sub
adc
enter
inc
dec
fnsave
stc
les
fidiv
inc
mov
shl
push
mov
ins
pop
cwde
sub
sub
rol
mov
aas
cmp
xchg
movs
push
pusha
adc
sbb
fsubr
xor
and
push
sar
arpl
in
pop
lea
lock
sub
xor
pop
test
add
sbb
inc
in
cmp
(bad)
imul
dec
and
adc
ficomp
or
iret
jmp
outs
(bad)
cmp
pop
xchg
jmp
pop
mov
cmp
inc
sbb
outs
xchg
inc
sbb
fidiv
pop
or
push
call
cmp
leave
aam
sub
sub
leave
ror
test
mov
dec
fs
bound
mov
xor
lods
pop
jl
and
fstp
mov
into
xchg
adc
mov
fist
sub
adc
ins
mov
adc
or
mov
or
sbb
and
lahf
xchg
add
pop
xchg
sub
mov
and
adc
jg
sbb
mov
sub
add
dec
dec
sahf
outs
push
es
inc
cmp
je
test
aaa
lds
ins
lods
arpl
aaa
jne
pop
inc
mov
sbb
dec
ror
and
rep
jne
inc
or
dec
rcr
jmp
loopne
and
xchg
dec
jmp
push
call
xor
inc
outs
jb
shr
pop
jae
sub
dec
sub
xlat
sub
inc
cmp
bound
mov
gs
mov
or
mul
scas
push
add
add
add
mov
push
cmp
jo
mov
inc
or
or
and
lds
push
pop
fwait
sbb
mov
or
dec
add
(bad)
ret
adc
stos
mov
mov
cmp
inc
push
mov
pop
aad
lods
pop
mov
clc
add
aad
adc
inc
(bad)
mov
inc
scas
lods
pop
and
cmp
mov
xor
sbb
mov
fld
ret
inc
and
fmul
retf
pop
sub
dec
das
bound
xchg
sbb
push
(bad)
jb
rcr
add
push
push
ret
js
push
test
fistp
popa
push
push
dec
add
adc
and
push
xchg
ret
mov
adc
push
push
test
sbb
push
imul
and
xchg
outs
mov
adc
adc
mov
jmp
xchg
lods
jp
sub
xchg
sbb
shl
adc
adc
sbb
xor
mov
jmp
std
push
dec
add
and
xchg
mov
test
and
cs
jb
clc
test
outs
dec
jae
scas
or
sub
fiadd
xchg
xchg
cmps
xlat
pop
mov
push
add
loope
add
push
cmps
imul
or
adc
dec
xchg
adc
sbb
pusha
rcl
mov
push
or
shl
mov
cmps
pop
push
dec
(bad)
cld
outs
push
cld
cmp
inc
sub
jmp
cmp
rcr
pop
call
adc
fwait
fwait
dec
adc
sbb
push
sub
cmp
fwait
sbb
je
or
adc
cwde
cmps
imul
and
enter
jl
mov
nop
dec
shr
shl
mov
movs
ins
cmp
xor
in
test
dec
jmp
idiv
push
clc
cmp
cmp
stc
cli
sti
cld
cmp
cmp
std
(bad)
jmp
cmp
cmp
loope
jecxz
cmp
cmp
in
out
pop
xchg
or
jmp
add
dec
xor
shl
add
jg
mov
add
pop
xor
sbb
sub
jg
inc
add
push
add
nop
fld
or
pop
pop
push
xor
mov
inc
in
xor
or
push
push
xlat
sar
push
adc
imul
frstor
xchg
inc
leave
sbb
or
pushf
ss
pop
jge
jb
jb
xlat
rcl
outs
nop
add
mov
sub
xor
adc
xchg
inc
leave
inc
sti
push
inc
nop
pushf
fbld
dec
dec
inc
push
or
adc
ret
and
imul
fisubr
sub
inc
push
test
jb
out
mov
pop
dec
dec
inc
ja
(bad)
mov
scas
push
or
inc
mov
nop
push
sar
dec
inc
fwait
pop
adc
loopne
push
retf
inc
leave
call
add
imul
xchg
adc
pop
and
mov
ss
(bad)
and
stos
add
xor
jae
inc
jnp
inc
push
and
dec
and
push
test
push
shl
sub
adc
pop
sub
cmp
xor
daa
xchg
and
and
arpl
mov
test
push
pop
cmp
dec
(bad)
jmp
push
sbb
pop
and
fwait
nop
mov
test
popf
mov
mov
xor
scas
adc
dec
push
pop
mov
clc
xlat
cld
push
mov
xor
dec
or
dec
jle
scas
lea
and
call
mov
mov
fdivr
inc
add
jb
aas
dec
jbe
add
dec
lods
je
xchg
or
mov
push
test
ss
data16
push
cmp
ins
lock
fnstsw
outs
push
or
push
and
(bad)
ror
add
test
clc
into
neg
in
sub
hlt
outs
cld
cdq
push
or
mov
cmp
imul
jno
mov
(bad)
jo
imul
sbb
repz
cmp
mov
shl
out
dec
ds
or
inc
sti
inc
dec
inc
dec
inc
nop
dec
es
pusha
outs
in
enter
inc
in
push
jl
dec
mov
push
dec
inc
out
rol
lock
mov
out
fsub
pop
sti
inc
pop
enter
jo
out
jo
pop
and
shl
jae
cmp
iret
push
daa
pop
ret
cmps
popf
add
push
xor
add
dec
inc
nop
mov
enter
jbe
add
out
mov
jg
dec
push
inc
nop
sub
inc
sub
fwait
and
dec
cld
dec
sub
ror
dec
(bad)
and
push
nop
movs
mov
push
lahf
push
inc
ret
(bad)
sbb
sbb
iret
enter
xor
and
nop
cmp
cmp
out
adc
pop
ret
dec
mov
push
fcom
mov
dec
or
adc
inc
pop
add
sbb
sub
pop
cmp
daa
jbe
mov
cmp
movs
cmp
je
rcr
push
nop
lahf
mov
xor
inc
outs
inc
stc
add
pop
push
test
xor
push
rcr
add
or
mov
adc
or
(bad)
pop
add
or
sub
pop
sbb
or
lahf
sub
pop
inc
mov
shl
outs
int3
push
and
and
popa
add
cmps
pop
pusha
inc
or
call
xchg
aam
in
fcom
or
int
ss
pop
enter
into
sub
or
mov
xchg
sahf
push
add
jge
lea
aas
fdiv
fcmovu
leave
fidiv
lahf
clc
add
add
mov
cdq
and
sti
and
nop
lods
loopne
movnti
in
dec
dec
fwait
and
mov
jns
loopne
ror
fild
fwait
adc
xor
or
dec
dec
cmp
pop
dec
xor
adc
shr
xor
dec
jne
mov
test
movs
inc
mov
test
mov
inc
sbb
mov
inc
or
add
cwde
and
push
xor
ja
dec
mov
shr
adc
jb
dec
sub
loop
stos
sub
push
stc
sub
push
imul
clc
lahf
(bad)
dec
add
rol
shl
sub
std
(bad)
jl
cmp
jl
or
(bad)
jl
xchg
ror
rol
outs
bswap
pop
sub
dec
sub
in
dec
ja
lock
sub
(bad)
jl
or
leave
pop
fstp
repnz
shr
ror
rol
iret
jle
adc
sahf
sub
adc
mov
sar
daa
aam
stos
jge
sub
jbe
mov
pop
and
ret
test
and
mov
sbb
xchg
inc
and
cmp
movs
inc
jne
xor
lods
xor
sub
push
sub
ret
mov
xchg
push
nop
xor
das
ret
push
sti
neg
push
or
or
nop
ret
daa
pop
daa
in
aam
fsub
xchg
inc
(bad)
in
enter
xchg
jg
push
clc
pop
pusha
nop
push
xor
outs
or
and
mov
pop
fs
scas
call
mov
sub
add
fmul
push
lock
mov
cmp
mov
xor
sub
retf
xor
ins
adc
xor
and
dec
scas
jl
ins
idiv
cmp
cld
loopne
cmp
aas
shl
add
stos
xor
bound
js
sahf
popf
xor
xor
xchg
jnp
or
or
xchg
sbb
shl
adc
xchg
mov
ins
jg
mov
mov
out
jb
push
adc
daa
aad
push
add
(bad)
loop
or
xor
lds
cmp
ret
xchg
cmps
test
jnp
cmp
jg
outs
add
cmp
push
push
fwait
pop
nop
ret
adc
xor
(bad)
jl
add
pop
iret
mov
(bad)
mov
push
mov
push
ror
jge
adc
add
fcmovnu
mov
in
adc
pop
pop
cmp
dec
in
add
mov
pusha
loope
mov
push
inc
je
sbb
and
leave
inc
push
mov
arpl
pop
cmps
or
add
cdq
idiv
adc
sub
mov
mov
enter
add
nop
inc
call
mov
add
jo
add
sbb
sub
jge
sbb
lock
lock
xor
jbe
add
mov
rcl
and
adc
(bad)
pop
fwait
daa
fwait
add
xor
fldenv
push
add
or
xor
mov
cwde
and
pop
int
ja
pop
inc
mov
pusha
pop
std
imul
in
adc
aad
loop
or
cmp
jge
adc
in
stos
mov
dec
test
sub
fcom
push
or
pop
inc
shl
in
pop
sbb
(bad)
inc
jmp
lahf
cdq
and
stos
ja
sahf
es
mov
(bad)
pop
xor
sbb
cld
pop
push
pusha
dec
iret
adc
test
(bad)
ins
sub
jo
dec
add
addr16
dec
or
rcr
lock
or
add
jmp
inc
pop
xor
cli
cmp
es
add
fisttp
shr
jae
mov
mov
fadd
arpl
stc
inc
cmps
jo
pop
clc
cmp
ja
rol
ja
dec
iret
cmp
sbb
or
nop
mov
mov
add
repz
add
xor
add
ret
mov
jmp
push
xor
imul
iret
imul
sti
test
xor
cmp
inc
daa
cwde
addr16
sub
add
adc
adc
add
adc
and
sub
imul
ret
pop
sbb
sub
push
loope
ror
outs
dec
bswap
div
add
xor
daa
dec
movs
pop
mov
ins
xor
sbb
in
in
mov
jl
mov
and
mov
call
icebp
or
call
xor
xchg
ret
clc
add
push
sahf
or
xchg
xor
jae
out
or
outs
cmp
arpl
or
xor
add
fsubr
das
pop
lock
dec
sub
ret
and
enter
nop
adc
adc
ss
sub
jbe
xor
push
adc
retf
fisttp
cmp
sub
(bad)
fisttp
ror
cmp
clc
xchg
or
rcr
mov
adc
fsub
push
jge
cmps
dec
cmps
and
mov
xchg
add
mov
xchg
inc
mov
cmp
sar
xchg
rcr
sub
xor
dec
inc
popa
sbb
xchg
push
sbb
adc
data16
ins
cmp
push
shl
jbe
ds
pop
xchg
mov
add
sub
inc
pusha
dec
cvttpd2pi
test
sbb
dec
outs
xchg
cmps
pop
inc
stos
add
in
push
into
dec
add
call
dec
and
adc
jae
xchg
or
adc
add
popf
cmp
and
sahf
mov
dec
int
mov
and
dec
inc
add
dec
dec
xchg
fsub
ror
jo
out
inc
aam
nop
dec
jnp
les
add
xlat
inc
or
(bad)
sbb
lds
movs
(bad)
lds
clc
or
test
fstp
jmp
jb
inc
int3
pop
and
pop
add
or
dec
cmps
shl
(bad)
jmp
mov
ret
mov
inc
xor
sbb
dec
or
xchg
mov
mov
sbb
mov
xor
sbb
or
stc
mov
add
mov
push
in
call
or
add
mov
xchg
shl
cwde
push
adc
out
inc
imul
fisub
aaa
jp
hlt
aas
jne
or
aam
jle
xchg
inc
or
cmp
sbb
dec
mov
js
or
test
inc
jne
or
or
or
stos
jo
or
add
or
and
mov
push
mov
pop
add
add
retf
in
sbb
add
movzx
out
and
mov
mov
or
fwait
out
sahf
pop
sbb
sbb
push
sbb
adc
jmp
shl
retf
jle
adc
jl
ins
add
mov
xchg
inc
cmc
test
push
or
cmp
cmps
pushf
push
adc
add
add
sbb
sbb
in
mov
and
nop
sub
mov
inc
push
clc
xor
dec
xor
icebp
pop
fs
aad
mov
shr
loopne
movs
adc
jecxz
mov
push
imul
sbb
mov
xor
dec
loope
dec
sbb
mov
or
(bad)
in
xor
clc
mov
sbb
push
cs
jno
and
mov
js
push
movs
in
dec
movs
retf
mov
adc
push
stos
dec
and
ds
mov
dec
ret
ret
cld
aas
dec
std
enter
out
or
dec
add
xchg
push
sub
adc
aam
sub
(bad)
(bad)
adc
and
imul
mov
sub
leave
pop
pop
test
(bad)
mov
add
adc
shr
vpsrad
ret
or
push
push
jp
lock
(bad)
pop
popa
mov
add
out
imul
imul
ss
or
push
dec
pop
inc
xchg
inc
test
jmp
add
outs
aaa
jae
mov
inc
add
rcl
xlat
aad
aam
(bad)
adc
adc
or
or
jl
or
push
ror
sub
dec
push
and
pop
jae
test
inc
ins
add
lea
adc
jne
push
add
dec
or
pop
cs
(bad)
fs
adc
sbb
icebp
nop
add
inc
dec
(bad)
lods
movs
push
and
or
cmp
loope
or
and
push
sbb
ret
icebp
or
inc
jns
das
push
cmps
leave
inc
dec
hlt
and
push
jle
dec
lea
push
sub
or
arpl
mov
imul
pushf
xchg
aam
xchg
xor
in
(bad)
cmp
push
jnp
clc
pop
lods
ja
lea
psllq
cmps
inc
sbb
outs
adc
inc
(bad)
or
push
jo
sbb
inc
sbb
sub
inc
cdq
sub
and
enter
sbb
movs
cmp
sbb
fiadd
adc
cmp
or
ja
jbe
ret
lock
dec
int
(bad)
pop
add
or
or
pop
ins
push
jns
mov
sbb
xchg
or
mov
push
lea
retf
movs
sbb
adc
cmp
xor
push
pop
jbe
dec
ss
(bad)
hlt
mov
pop
loope
sti
jmp
cmp
hlt
jae
rcr
dec
call
inc
mov
xchg
cmp
popa
scas
mov
je
and
imul
adc
mov
inc
(bad)
mov
repz
dec
in
pop
fmul
mul
sub
and
adc
mov
push
push
push
sub
bound
cmp
xchg
inc
test
sbb
mov
out
xor
not
pop
dec
ror
jmp
cwde
adc
or
repnz
add
lock
movs
scas
stos
mov
je
shl
push
rol
cmp
mov
add
pop
jae
retf
dec
sub
clc
mov
cmp
inc
add
add
push
dec
fwait
movs
into
and
iret
pop
pop
mov
sbb
push
inc
jmp
or
pop
inc
mov
or
xor
repz
mov
dec
or
dec
dec
dec
in
add
in
aad
mov
(bad)
mov
pop
and
add
or
cmps
por
mov
sbb
lahf
push
nop
add
dec
inc
adc
rol
test
dec
and
add
sub
xor
mov
add
dec
(bad)
jle
je
push
adc
jl
pusha
or
jecxz
sbb
xchg
iret
inc
push
jo
adc
or
add
loopne
std
add
sub
xor
inc
enter
push
push
push
pop
aam
sub
push
rcl
push
adc
jl
add
sbb
daa
push
push
xor
mov
das
mov
imul
mov
loopne
js
out
and
push
pop
inc
ja
and
lahf
cmp
sti
mov
xchg
cmp
pop
outs
scas
nop
aas
aas
jl
xchg
mov
and
push
pushf
push
jae
jo
xor
sbb
sub
clc
and
je
outs
fisub
jne
dec
sbb
push
scas
inc
sbb
lods
nop
sbb
test
je
inc
(bad)
imul
xor
inc
adc
jnp
or
mov
push
mov
add
mov
cmp
dec
adc
fsub
movs
xchg
std
pop
jg
rol
sbb
sbb
jecxz
ins
test
mov
mov
add
out
lock
xchg
xchg
cmp
aam
int3
inc
and
sub
adc
inc
xor
cmp
rcl
sbb
pop
mov
push
rol
imul
shr
mov
inc
inc
in
add
inc
mov
pop
jne
xchg
add
test
(bad)
xchg
push
ss
sbb
inc
shl
pop
lock
inc
and
(bad)
xor
mul
shl
shl
mov
pop
cmp
pusha
push
sbb
gs
push
shl
add
jmp
push
in
xchg
add
sbb
test
loopne
call
pop
lods
arpl
pusha
rol
clc
pusha
xor
rol
cdq
loope
cmp
pop
aam
mov
ins
cmp
hlt
stos
cdq
ins
(bad)
and
add
jne
mov
shl
pusha
pop
pop
dec
add
push
push
add
adc
pop
lea
xchg
xchg
add
inc
shl
push
(bad)
inc
daa
xchg
xor
adc
sub
movaps
pusha
ins
cld
or
add
cdq
mov
sahf
xor
pop
push
fidiv
pushf
push
mov
inc
mov
arpl
sub
inc
mov
inc
pop
cmp
iret
pop
pusha
xchg
sbb
leave
or
cmp
dec
test
add
out
inc
cmovge
leave
jae
dec
hlt
lods
dec
sti
pop
test
hlt
js
loop
xchg
add
dec
(bad)
scas
inc
test
xchg
lds
das
ret
cwde
rcr
mov
ins
push
aaa
and
ins
adc
jp
inc
push
dec
pop
ins
repz
js
jmp
fiadd
add
test
sbb
or
outs
push
(bad)
dec
daa
sahf
loopne
and
lea
dec
sbb
or
fadd
add
lods
cmps
loopne
arpl
mov
ss
xor
push
mov
into
aas
pop
inc
mov
mov
inc
stos
imul
dec
cli
nop
jle
add
adc
jmp
(bad)
pop
mov
repnz
sub
sub
mov
imul
fcmovnb
lahf
lods
cmp
and
std
mov
pop
mov
xchg
fdiv
pop
aad
loope
sub
imul
xor
ret
into
add
mov
sbb
cwde
adc
jmp
jge
lea
dec
or
push
sbb
fwait
sbb
pop
mov
fwait
sub
add
retf
movs
pusha
fcom
das
mov
sub
jmp
lods
adc
or
add
sar
mov
xchg
push
push
iret
imul
adc
sbb
fsub
mov
pop
sub
jmp
cmps
pop
bound
outs
dec
adc
repnz
inc
mov
cmovg
or
mov
sub
loop
cld
dec
ror
lea
add
lea
mov
inc
cmps
sbb
in
pop
push
inc
add
sbb
xchg
pop
sbb
je
pop
xchg
xchg
hlt
pop
sub
nop
shr
add
fdivr
sbb
cli
xchg
add
movs
mov
add
dec
sub
fimul
imul
in
add
add
cmp
mov
adc
xchg
lock
xor
xlat
call
sbb
jl
loope
lods
daa
mov
imul
sahf
mov
dec
adc
sbb
and
jmp
sbb
mov
sub
data16
push
repnz
xor
clc
inc
sub
shl
fimul
sbb
dec
inc
adc
je
dec
out
clc
pop
aas
xchg
inc
push
jno
add
push
mov
lods
pop
outs
(bad)
sti
test
and
and
loopne
mov
dec
or
add
clc
aad
push
inc
pop
sub
push
or
adc
cld
bound
xor
sbb
jge
add
shl
movs
(bad)
movs
ror
pop
add
add
ud2
cdq
in
mov
ror
mov
fisub
mov
pop
or
ja
sub
fisubr
fwait
adc
rol
test
mov
cmps
call
fisub
cmp
movs
push
xchg
or
add
fst
dec
or
fmul
jg
sub
fisttp
cmp
cmp
dec
scas
jmp
int3
push
(bad)
in
xor
aam
lock
push
xchg
push
cwde
add
fs
pop
inc
imul
push
into
sbb
ss
scas
cmp
inc
iret
pop
jmp
aam
test
push
sbb
lods
jbe
mov
lea
push
dec
add
xor
(bad)
aas
pop
push
push
pop
in
dec
js
sbb
je
push
adc
inc
xor
adc
push
pusha
or
repnz
mov
push
jle
mov
push
shl
pushf
sbb
jns
cli
add
and
and
imul
pop
pop
push
or
push
jmp
cmp
push
push
push
daa
push
cmp
push
or
mov
repnz
inc
or
je
and
pop
in
call
mov
or
mov
add
dec
push
mul
push
movs
clc
leave
mov
xchg
mov
mov
iret
mov
inc
add
add
popa
mov
fs
mov
sub
dec
sbb
sub
scas
shl
push
(bad)
daa
mov
mov
sbb
add
add
mov
or
mov
clc
jnp
xchg
iret
int3
inc
push
sbb
mov
pop
or
mov
or
mov
adc
dec
inc
add
push
inc
(bad)
cdq
xor
dec
add
in
push
loopne
or
push
add
xor
dec
mov
and
imul
lock
or
sahf
ja
and
add
adc
and
cld
shl
ins
xor
or
jle
lea
mov
mov
sbb
add
sbb
dec
jne
inc
push
xchg
movs
sbb
and
add
xchg
dec
scas
add
leave
xchg
mov
inc
add
add
inc
pop
loopne
and
dec
xchg
pop
shl
adc
call
add
sub
add
or
lods
sti
push
out
mov
inc
and
and
loopne
sbb
in
ror
ss
scas
xchg
test
(bad)
imul
das
fs
ffreep
jmp
jecxz
or
mov
inc
mov
or
mov
shl
adc
lock
ja
mov
jle
push
sbb
cmovbe
cdq
add
pop
add
adc
sub
inc
pop
lea
clc
adc
or
cmps
sbb
jb
xchg
xchg
stos
or
test
lods
or
sub
mov
pop
inc
push
or
inc
or
inc
inc
inc
ins
fadd
jbe
push
and
mov
ins
fdiv
xor
cmp
in
pop
add
xor
sbb
repnz
adc
jae
cmc
sub
add
ret
scas
(bad)
and
scas
pushf
push
ds
inc
leave
int3
push
bnd
ret
jno
lea
jmp
mov
repnz
call
xchg
retf
sub
push
dec
gs
xor
xor
mov
pop
cmp
pop
xchg
test
xor
fdiv
add
add
clc
(bad)
lock
(bad)
xchg
shl
inc
mov
inc
clc
mov
sub
js
add
push
call
mov
jge
and
add
inc
pop
fmul
data16
push
push
cmp
adc
pusha
std
cmp
and
jnp
sub
jb
cmp
loop
and
dec
dec
mov
xchg
adc
retf
cli
pop
xor
ins
dec
mov
sub
or
xor
push
xchg
jnp
jns
xchg
and
shr
add
inc
test
mov
fisub
cmp
xchg
mov
test
adc
sub
sbb
add
pop
dec
mov
sub
fmul
add
and
sbb
add
loope
fwait
das
fdiv
(bad)
dec
cmp
or
push
loopne
sub
mov
push
leave
icebp
cmp
xor
fisttp
jo
mov
mov
sbb
ret
inc
mov
push
lods
lods
lock
add
or
push
cli
and
ds
leave
cwde
adc
test
out
int
pop
pop
sbb
mov
mov
adc
pop
jl
push
mov
mov
data16
rcr
mov
push
or
lods
int
inc
pop
pusha
jb
push
xor
add
popa
test
add
fimul
inc
add
sub
idiv
dec
int3
jmp
sub
in
push
push
stos
push
stc
mov
and
ret
jne
jmp
imul
sub
in
lods
lods
neg
ror
sbb
aas
ror
mov
or
call
js
pop
cmp
pop
sub
mov
mov
sub
(bad)
pop
cwde
test
sub
add
sbb
or
lods
add
cmp
add
mov
sub
cld
mov
jmp
arpl
mov
sbb
push
or
sub
sbb
arpl
cmp
inc
in
adc
jne
inc
dec
es
add
dec
es
or
cmp
inc
ja
rcr
inc
(bad)
or
or
sbb
hlt
and
scas
into
inc
retf
icebp
adc
out
ret
call
in
or
aam
(bad)
mov
hlt
cdq
push
inc
dec
mov
(bad)
mov
sti
xor
imul
imul
movs
cmp
jg
sbb
popf
or
jmp
test
adc
fsub
dec
jne
xor
sar
jg
cmp
ror
sub
sbb
add
call
jecxz
lds
push
je
bound
mov
xor
and
add
xor
push
lea
push
mov
iret
or
or
inc
mov
push
repz
inc
fsubr
xor
sar
mov
add
sahf
gs
xor
pop
(bad)
dec
jne
dec
pop
scas
sbb
cmp
pop
pop
retf
fnstenv
inc
pop
jmp
(bad)
stc
test
jle
xchg
test
out
add
ins
add
sbb
mov
pop
mov
push
push
loop
pop
in
in
imul
and
arpl
popa
add
outs
mov
adc
add
add
adc
js
mov
push
mov
push
mov
sbb
ins
dec
sahf
fs
xchg
cmp
mov
pop
out
jmp
or
mov
mov
sbb
dec
test
push
add
test
mov
jae
icebp
xor
pushf
lods
adc
bswap
sub
mov
push
bound
ret
test
cmp
add
nop
push
or
imul
and
sbb
scas
pop
add
aaa
or
or
or
and
add
mov
test
popf
nop
lahf
sbb
pushf
or
push
ficomp
adc
add
mov
es
jne
push
dec
add
sub
push
pop
fiadd
mov
clc
inc
sub
jl
out
popf
add
(bad)
ror
(bad)
mov
sbb
add
or
mov
push
xchg
fstp
repnz
sbb
outs
add
mov
into
add
ror
xchg
pop
rcl
push
or
inc
push
mov
sub
adc
mov
pop
or
lods
or
pop
pop
adc
cmp
sahf
jb
xchg
add
(bad)
xor
and
pop
inc
into
cmp
out
or
retf
sub
dec
enter
push
jmp
mov
inc
ss
xlat
and
pop
mov
out
lock
pusha
push
push
into
(bad)
sar
imul
adc
pop
out
shl
add
pop
cmp
cwde
stc
cmp
sbb
and
mov
mov
imul
out
xor
or
push
jbe
ret
push
cld
je
pop
addr16
sbb
sbb
push
cmp
push
rol
jl
mov
xchg
mov
and
js
sbb
and
or
lea
add
add
call
mov
and
and
add
add
add
cmps
push
sub
sbb
bound
out
and
jbe
jmp
mov
dec
test
dec
ds
push
add
or
mov
add
or
mov
sub
push
add
fld
jo
mov
jecxz
and
sbb
mov
add
ror
(bad)
and
add
sbb
fadd
daa
pop
add
mov
and
jb
nop
lock
xor
adc
enter
adc
cli
mov
jmp
retf
and
sub
nop
test
push
sub
add
mov
fistp
ds
and
push
dec
sub
stc
fmul
pop
xor
in
or
sub
dec
sub
ins
shl
xchg
cmp
cld
or
call
std
push
adc
sub
mov
mov
mov
push
add
pop
data16
nop
pop
and
stc
pusha
dec
addr16
iret
add
in
and
mov
or
icebp
cmp
adc
mov
scas
es
js
in
adc
add
aam
or
aad
and
lds
sbb
sbb
cmp
ja
out
iret
cwde
xor
js
ror
or
add
sub
push
or
sbb
inc
or
iret
dec
jb
fwait
jecxz
retf
push
sahf
mov
mov
and
and
mov
mov
push
xor
sbb
dec
popf
mov
add
popa
loope
(bad)
lods
xrelease
scas
mov
pop
cwde
stos
push
adc
sbb
enter
jecxz
clc
or
cmp
inc
inc
jmp
hlt
nop
dec
mov
rcl
mov
mov
ds
or
test
sti
adc
ins
lock
jo
(bad)
and
and
add
add
mov
add
sbb
sub
outs
mov
lods
test
jl
scas
outs
pusha
pusha
cmp
aam
test
(bad)
ret
mov
ins
inc
mov
mov
dec
aam
ret
add
jle
cmp
push
cmp
add
bound
jo
inc
movs
cmps
lods
jo
inc
sub
sub
cmc
test
lea
or
pop
mov
int3
(bad)
cwde
ret
push
and
je
sub
jmp
xor
ja
mov
or
stos
shl
and
sbb
mov
add
add
cld
nop
or
sub
dec
push
push
dec
add
push
adc
cdq
fcom
inc
shr
out
mov
or
dec
add
das
div
in
sbb
daa
or
pop
(bad)
fstp
add
bound
out
jb
xchg
lock
xchg
adc
repnz
pop
jg
fs
jb
sbb
pusha
mov
shl
add
mov
adc
sub
call
adc
sbb
jae
jne
add
and
inc
xor
aas
jmp
inc
adc
retf
les
arpl
mov
pop
jmp
pop
inc
pop
push
add
jl
or
fmulp
push
movs
and
and
fstp
fwait
sub
mov
fwait
xor
jno
imul
pop
imul
fmul
scas
and
data16
mov
xor
push
lock
mov
out
cmps
cs
sub
cmp
mov
or
test
rcl
adc
lahf
pop
cmps
into
adc
js
ja
retf
pop
add
add
and
push
ret
inc
int
mov
in
adc
or
dec
and
aad
aaa
adc
add
or
in
xchg
lods
sbb
and
in
inc
add
sbb
mov
jle
daa
inc
rcl
je
call
cdq
push
push
cmp
ror
jo
pop
mov
mov
jl
mov
mov
mov
movs
daa
sub
cmp
rcr
push
push
arpl
hlt
add
sbb
pop
push
push
jecxz
arpl
ret
push
mov
dec
jb
cmp
inc
xchg
mov
add
loopne
out
jbe
ds
test
pop
or
arpl
xchg
pop
into
add
jo
or
mov
push
in
jbe
jno
pusha
leave
outs
idiv
add
mov
ret
sub
rcl
sub
outs
sub
xor
push
mov
mov
dec
fwait
sbb
or
test
dec
add
clc
xchg
sahf
push
lock
div
jl
push
(bad)
mov
into
leave
jnp
push
into
in
add
mov
push
imul
mov
or
imul
sub
mov
sub
retf
or
push
pop
add
loope
add
sub
enter
aaa
loope
in
aaa
movs
xor
mov
cmovae
push
sub
cmp
(bad)
dec
sub
and
sbb
cli
int
mov
sbb
xchg
aas
ins
imul
sub
lea
scas
stos
push
jns
sub
push
xor
ror
and
loopne
lock
(bad)
rcl
or
pop
in
jnp
adc
push
aaa
outs
loop
clc
(bad)
xchg
add
pop
dec
push
dec
add
or
ret
adc
pop
dec
cmp
mov
cmp
jge
cmp
cmp
sbb
mov
xor
and
push
sub
push
js
pop
pop
pop
mov
outs
repz
xchg
add
or
sbb
in
mov
scas
push
scas
xor
outs
and
mov
inc
dec
ficomp
cmp
cmp
call
fwait
xchg
shr
mov
mov
mov
or
inc
pop
cwde
cmps
or
cli
pusha
repnz
xchg
sub
mov
push
iret
shl
xor
mov
fs
pop
add
mov
outs
pop
popa
cmps
pop
push
push
inc
cmps
js
lods
cdq
mov
push
or
ins
(bad)
mov
and
jb
adc
xchg
pusha
scas
fadd
xchg
and
xor
sub
xor
add
fsub
sub
inc
adc
inc
and
and
cdq
inc
mov
pop
cdq
jge
xchg
mov
dec
imul
push
add
lods
shl
test
nop
inc
add
(bad)
or
xchg
data16
out
add
dec
pop
js
test
add
xor
mov
inc
mov
das
mov
sbb
or
(bad)
and
fdiv
dec
(bad)
or
fild
or
mov
xor
adc
mov
mov
dec
add
inc
mov
(bad)
dec
les
add
aam
jbe
dec
mov
cmp
inc
add
or
cmp
ret
lds
dec
lea
add
sbb
retf
add
add
ins
imul
lods
fnsave
shl
sbb
mov
lds
nop
sar
push
sbb
push
into
test
xor
jb
lods
lods
imul
mov
xchg
pop
fdiv
sub
mov
sub
dec
enter
sbb
inc
nop
xchg
push
add
sub
inc
push
nop
xchg
add
sbb
and
push
sub
je
outs
out
inc
cwde
fisubr
and
aam
shr
adc
lods
sysexit
adc
shr
and
cs
pop
jmp
pop
push
cld
add
sbb
scas
ja
in
inc
xor
retf
psraw
or
add
test
inc
mov
sub
arpl
es
pop
cmp
jbe
mov
and
cdq
mov
adc
mov
sub
add
adc
add
dec
ds
movs
push
pop
sbb
mov
sbb
mov
pop
add
mov
into
mov
outs
adc
or
add
rol
add
mov
dec
xor
add
cmp
push
jns
or
or
aaa
cwde
or
xchg
adc
cwde
xor
fwait
in
adc
shr
inc
out
xchg
pop
clc
mov
inc
pop
and
imul
inc
ins
jne
and
sub
jg
ret
sbb
xchg
nop
cmp
jne
arpl
fisub
mov
jne
add
fs
iret
cmp
xor
lea
push
push
cmp
fbstp
mov
and
ja
sbb
addr16
fld
mov
or
sar
pop
xlat
xor
sub
mov
data16
cmp
in
add
cmps
add
push
or
adc
inc
or
dec
loopne
fcomp
or
add
and
cmc
xchg
(bad)
add
fild
or
and
or
mov
and
or
dec
pusha
aam
sahf
sub
mov
cld
ja
sbb
ret
and
mov
je
dec
sub
add
xor
mov
sahf
in
aaa
stos
or
fwait
icebp
sbb
and
ds
pop
dec
dec
ss
jle
mov
pusha
sbb
and
mov
fwait
ss
aam
pop
push
xor
fmul
scas
or
fst
sbb
pop
aam
dec
jp
aam
sbb
outs
enter
rcl
mov
cmp
int3
jne
dec
sar
add
in
daa
imul
adc
or
enter
rcr
ds
push
mov
adc
(bad)
test
out
cmp
dec
sub
test
pop
shl
nop
jbe
fadd
push
sbb
xor
jge
sub
mov
and
in
xchg
or
pusha
xor
inc
loopne
dec
or
repz
shl
push
xor
mov
xor
and
mov
fsub
stc
jns
test
xchg
push
add
and
mov
xor
add
seto
inc
das
add
add
jo
or
xchg
into
xchg
mov
or
adc
scas
aam
sub
pop
cmp
dec
sbb
and
mov
inc
mov
imul
data16
imul
bound
mov
pop
add
div
push
mov
or
ja
inc
fwait
cmp
mov
fs
cmp
fld
enter
icebp
push
mov
shl
fsubr
pusha
add
or
or
add
(bad)
or
sub
xchg
cmp
(bad)
mov
push
jo
sbb
pusha
paddb
mov
data16
outs
aas
push
out
and
adc
daa
or
(bad)
out
adc
inc
adc
lea
sbb
int
or
add
push
dec
fist
call
sbb
mov
movs
dec
mov
(bad)
cmovs
fisttp
fcomp
or
sbb
mov
mov
sub
mov
movs
mov
imul
sub
mov
shl
adc
jmp
mov
jmp
sbb
xor
and
push
adc
add
and
jae
retf
mov
add
nop
pop
mov
rcl
repz
ins
add
aas
fs
pop
push
mov
jae
js
movs
mov
xchg
push
or
inc
ins
add
lds
popa
add
loopne
(bad)
mov
test
jmp
shl
imul
jge
jae
daa
add
xor
scas
xchg
xor
inc
xchg
inc
aam
cmp
xor
xchg
inc
mov
sub
mov
pop
(bad)
ret
pop
retf
push
sub
cmp
mov
fiadd
xchg
popa
push
xor
rol
or
aaa
aam
push
dec
or
nop
jo
push
mov
sbb
enter
fisttp
pop
pop
fldenv
and
ror
ret
jp
adc
sub
sub
(bad)
adc
adc
push
fldenv
clc
and
lahf
add
and
and
push
lock
hlt
test
xchg
sbb
mov
jmp
es
outs
cmp
sbb
fild
stos
imul
shr
and
fisttp
dec
add
dec
pusha
inc
push
or
fisttp
js
lea
mov
and
jne
or
add
mov
and
xor
out
ja
sub
pop
ins
xchg
sub
inc
popa
test
cmp
jl
inc
popa
adc
xor
cmps
bsr
fsubrp
and
push
dec
sbb
push
pop
in
add
cli
outs
dec
and
lea
mov
or
pop
mov
shl
cmp
je
loop
outs
pusha
sub
add
pop
(bad)
ret
adc
xor
mov
dec
call
or
push
adc
adc
sub
mov
mov
ds
and
dec
scas
push
daa
push
ret
cmp
sete
retf
adc
icebp
add
dec
adc
inc
jge
jmp
(bad)
mov
xor
mov
xchg
aas
outs
iret
or
push
fwait
jnp
push
jg
scas
test
je
adc
adc
inc
les
js
and
xchg
lods
adc
inc
xor
dec
xor
xchg
pop
xor
(bad)
aam
js
mov
imul
cmp
xchg
shr
push
imul
sbb
push
push
lock
imul
dec
adc
xchg
pop
mov
lods
and
push
inc
or
mov
mov
add
xor
xor
mov
call
xor
adc
and
push
in
pop
rcr
mov
in
mov
fld
adc
mov
sbb
out
or
or
addr16
addr16
jg
push
mov
mov
inc
pop
jae
scas
and
or
test
push
inc
aaa
xchg
rcl
dec
inc
setnp
neg
mov
call
iret
test
shr
and
sbb
xor
fcomp
pop
jb
push
lahf
mov
pop
inc
in
push
push
addr16
inc
cmp
cmp
xor
shl
or
ret
cmp
push
scas
mov
cmp
and
or
jmp
mov
lock
inc
imul
cmp
mov
out
fucomip
sbb
add
inc
mov
daa
das
or
or
cmp
out
mov
arpl
out
xor
mov
push
arpl
push
and
out
fadd
add
neg
push
ds
movs
fdivr
or
add
pop
in
xchg
mov
xor
inc
ds
test
clc
xchg
or
add
ret
add
jl
pop
adc
cmps
lock
into
add
pop
(bad)
lock
mov
pop
add
push
nop
aaa
sbb
cs
mov
fild
(bad)
hlt
jne
mov
sub
or
push
shl
cwde
mov
fsub
xor
out
scas
cmc
mov
adc
test
repz
fs
mov
nop
inc
test
cmps
mov
pop
leave
inc
and
(bad)
adc
rcr
push
mov
clc
mov
loopne
les
or
pop
jg
sub
jbe
xor
or
pop
pop
imul
cmc
xchg
ror
lahf
rcl
adc
pop
out
dec
fmul
test
pop
add
push
mov
cmp
popa
push
fs
lock
pop
cwde
mov
and
call
enter
cmp
leave
push
fdivr
gs
int3
push
mov
adc
mov
push
je
pop
add
push
xor
adc
dec
hlt
cmc
jo
aad
and
retf
and
test
dec
ins
or
add
gs
add
shl
dec
imul
fmul
shl
pushf
add
pop
cmc
push
push
and
movs
jns
gs
adc
inc
push
or
dec
call
sub
fs
aam
scas
jecxz
xor
(bad)
mov
inc
call
hlt
xor
pop
fcom
push
das
in
ror
adc
loopne
jmp
repnz
mov
or
dec
push
into
mov
sub
mov
or
dec
in
hlt
jae
jmp
jno
and
jl
adc
les
push
fwait
add
inc
adc
cmps
neg
mov
xor
add
test
xor
daa
xor
in
mov
test
nop
xchg
add
in
jbe
add
adc
add
stos
cmp
rol
jl
and
test
(bad)
hlt
and
adc
loop
and
inc
xchg
cmp
adc
push
ret
push
imul
or
dec
inc
or
inc
js
jne
fld
ret
popf
movs
inc
push
out
and
or
in
or
(bad)
sbb
xlat
das
xchg
add
jnp
xlat
jg
and
mov
sub
mov
popa
mov
sbb
sbb
aam
gs
mov
das
or
and
lods
adc
jle
aad
jbe
adc
js
and
add
cmp
mov
jo
pop
mov
inc
in
and
leave
hlt
test
nop
pushf
mov
stc
and
fnsave
cbw
or
int
icebp
inc
mov
jno
ror
mov
in
ss
jmp
in
in
in
in
out
out
rcl
in
in
rcl
aam
in
in
(bad)
xlat
fcomp
in
in
fcmovu
(bad)
ret
in
ffreep
in
push
repnz
and
and
jnp
leave
cdq
mov
sahf
pop
ds
mov
xlat
or
add
adc
mov
(bad)
mul
ficom
push
and
sub
pop
test
sbb
or
lods
leave
psubw
sbb
aaa
repnz
ins
cld
sbb
pop
imul
cmp
or
ror
and
adc
cmp
or
cwde
dec
enter
pop
mov
sbb
mov
xchg
stc
sbb
mov
jns
cmp
jo
dec
jns
sbb
adc
ror
sub
ss
stos
popa
fcom
imul
lock
or
mov
sbb
sub
mov
sbb
push
sbb
inc
loop
adc
rcr
xchg
test
inc
je
or
sbb
sbb
outs
je
shl
or
mov
sub
sub
or
ss
cmp
push
adc
mov
mov
inc
adc
std
sub
js
movzx
and
and
or
xor
or
sbb
scas
mov
test
add
add
jae
rcr
sub
shl
cld
pop
sbb
inc
or
push
add
mov
xor
sti
nop
mov
dec
mov
jmp
test
xchg
add
call
and
jl
adc
hlt
or
push
push
and
mov
hlt
std
xor
cmp
es
ins
movs
dec
ins
xor
inc
and
inc
sbb
or
jl
dec
push
idiv
ins
dec
sbb
fwait
mov
dec
xor
and
dec
out
mov
rcr
test
mov
imul
xchg
xor
sub
ss
pop
or
fwait
call
xchg
shl
mov
inc
add
dec
add
test
fcmovnb
ror
or
push
dec
xor
sub
fild
add
mov
ja
xor
out
movs
mov
add
les
cwde
inc
inc
jle
add
xchg
mov
(bad)
push
inc
dec
leave
mov
aam
add
cmp
(bad)
push
mov
cmp
sub
push
lock
ret
inc
rol
std
jle
sub
or
pop
iret
enter
mov
shr
xchg
xchg
sub
mov
lock
inc
add
add
sub
xchg
in
mov
adc
add
in
cmp
enter
(bad)
dec
popa
mov
call
arpl
pop
rol
mov
inc
cdq
pop
adc
ror
outs
xchg
mov
inc
loopne
xchg
add
shld
push
es
icebp
push
add
push
push
adc
and
cdq
xor
ror
outs
test
addr16
push
cmps
dec
or
pop
dec
and
jb
cmps
cmp
pop
sbb
dec
push
add
cmps
jne
mov
into
ja
repnz
pusha
push
mov
loope
and
xchg
retf
ins
jo
movs
xor
je
js
and
add
je
dec
inc
push
pop
jae
sbb
jbe
sub
inc
mov
dec
inc
fs
ja
aas
inc
stos
dec
test
into
jb
fst
xchg
cwde
add
push
arpl
test
mov
add
mov
call
rol
push
add
dec
pop
mov
push
push
scas
and
movs
xor
inc
and
ins
xchg
ror
fisubr
mov
int
hlt
mov
nop
data16
sbb
shl
sub
push
jle
fisttp
cmp
call
xor
pop
fsubr
and
hlt
dec
loopne
jecxz
pop
add
sahf
aam
sub
jmp
mov
pop
pusha
or
jb
inc
jmp
sub
add
stc
fmul
in
scas
and
fsub
adc
xor
test
jmp
cld
lods
movzx
cmp
jle
nop
adc
inc
lds
mov
push
cvttps2pi
(bad)
mov
mov
in
pop
dec
rcr
mov
mov
sar
add
push
inc
adc
jns
push
(bad)
outs
adc
rcl
loopne
mov
adc
dec
jne
mov
xchg
aad
std
nop
push
les
xor
fstp
and
and
inc
add
add
xchg
or
enter
and
sub
les
mov
add
pop
or
call
or
sti
cli
or
and
loopne
dec
push
mov
sbb
push
sbb
xchg
and
jnp
mov
add
mov
pop
fcomp
xchg
retf
rol
fwait
xor
pop
popa
out
adc
dec
push
push
add
or
push
idiv
repnz
or
dec
cmps
setbe
and
mov
push
add
mov
dec
add
addr16
loop
sbb
cmp
sub
cwde
imul
jle
mov
inc
add
jp
push
adc
add
sub
inc
dec
pop
xchg
or
push
jno
jecxz
mov
in
outs
or
jle
jle
inc
fld
mov
jne
mov
ret
xchg
adc
sbb
inc
int3
xlat
mov
ins
and
push
push
cmp
mov
fdiv
push
ret
inc
add
ret
das
imul
inc
add
dec
add
cmp
inc
add
stc
adc
test
dec
out
mov
es
ret
xchg
or
xchg
or
jae
jmp
push
retf
enter
jns
mov
push
iret
in
ret
push
mov
ins
loopne
call
bound
sub
mov
xchg
into
mov
enter
xor
push
jge
or
lods
inc
sbb
ror
mov
or
in
ss
sub
push
sbb
xchg
fcom
ins
or
pop
xchg
(bad)
and
add
cmp
and
mov
inc
rol
pushf
inc
rol
add
pop
sbb
push
or
mov
popf
sub
jmp
add
paddb
popa
cmp
mov
cld
(bad)
call
xor
jnp
inc
jbe
arpl
and
js
push
or
xor
jmp
pop
sbb
out
add
daa
adc
stc
sahf
inc
cs
pop
sub
test
js
mov
push
add
push
ror
mov
lea
mov
push
mov
lock
mov
push
shr
fs
dec
es
jns
mov
clc
sbb
or
jns
xor
lock
and
jecxz
pop
cmp
or
pop
xor
adc
mov
dec
dec
cmp
xor
jmp
dec
add
cmp
ror
xor
rol
mov
xor
push
xor
push
mov
loopne
mov
sub
ss
jmp
and
cmp
jb
cmp
ja
xchg
push
mov
out
push
cmp
mov
or
or
push
loopne
and
mov
push
inc
dec
jne
mov
(bad)
jmp
inc
mov
adc
pusha
xchg
dec
jne
sub
cmps
cmp
xor
pop
out
sbb
push
or
and
push
push
mov
sbb
fcomp
(bad)
mov
push
push
jecxz
mov
das
aaa
je
add
xlat
mov
test
xor
push
add
ss
mov
sub
push
(bad)
mov
add
icebp
ins
rol
jb
fcomp
add
inc
push
pop
repnz
sahf
dec
push
push
inc
imul
dec
in
pop
outs
ftst
add
or
ins
dec
fwait
inc
scas
dec
pop
xlat
fistp
ins
adc
cmp
xchg
daa
daa
mov
push
ins
adc
cmps
jns
test
xor
call
bound
in
sub
pop
adc
mov
out
sub
mov
sbb
and
in
mov
aas
fisubr
xor
(bad)
jnp
jg
not
ja
cmp
add
fild
cmps
add
ret
pop
sahf
mov
xor
push
push
lahf
xor
fmul
in
in
enter
jae
clc
js
cmp
sbb
mov
add
mov
loopne
sbb
adc
inc
dec
dec
or
jp
movs
outs
movs
lock
jmp
push
ss
adc
retf
ds
add
ins
add
jmp
ja
and
rol
push
arpl
and
mov
femms
nop
out
fs
add
jns
adc
fs
add
fnsave
popa
jo
or
mov
jne
rol
or
adc
adc
aam
cmp
add
add
imul
adc
stc
xchg
push
fisub
ins
jb
ja
(bad)
jo
add
sub
xchg
in
cwde
add
and
mov
adc
lea
fcomp
dec
inc
adc
push
dec
adc
inc
xchg
rcl
adc
movs
inc
and
and
fld
out
icebp
ror
cmps
add
sub
or
pop
add
inc
push
pop
lahf
inc
add
cmp
mov
add
sbb
nop
int3
cwde
sbb
imul
fbld
xchg
inc
xlat
in
dec
loopne
xchg
in
loopne
push
and
cmp
loope
pushf
fdiv
push
sbb
in
daa
fiadd
fimul
sbb
ret
adc
js
or
jb
ret
push
(bad)
cmp
(bad)
aam
mov
inc
push
fnstenv
daa
sbb
(bad)
ja
movs
dec
(bad)
mov
lods
push
(bad)
dec
es
dec
ror
addr16
and
inc
adc
fmulp
out
adc
nop
leave
(bad)
push
frstor
mov
adc
repz
sbb
dec
cmp
repz
pop
imul
xchg
repz
mov
jmp
cmps
stc
cmp
out
icebp
sti
add
push
(bad)
mov
aaa
sbb
es
inc
lahf
add
sub
sub
in
call
(bad)
imul
or
test
call
jg
mov
loope
aaa
mov
daa
ss
iret
and
and
mov
in
mov
inc
fidivr
dec
add
clc
xor
repz
xor
push
adc
sbb
arpl
in
cmp
jecxz
dec
jnp
xchg
std
inc
pop
mov
and
push
repz
jmp
mov
push
jb
mov
ror
mov
cmp
mov
adc
pusha
mov
clc
push
cmp
and
aam
dec
out
int
xchg
aas
sbb
repz
xor
mov
out
lock
outs
dec
mov
pop
enter
loopne
push
sbb
outs
repnz
dec
adc
jge
and
jmp
sbb
mov
daa
mov
jmp
call
xchg
daa
movs
ja
dec
inc
outs
shl
push
sbb
fcomp
fcomp
fs
inc
fcomp
fsub
push
fcomp
fcom
fcomp
inc
push
sbb
fcomp
sbb
fcomp
fcom
repz
mov
cmp
pop
mov
arpl
or
mov
repz
in
stc
out
sahf
out
mov
iret
repz
xor
daa
xor
inc
dec
mov
mov
push
pop
mov
push
add
xor
mov
adc
rcr
cmp
iret
in
adc
in
xor
in
and
cwde
adc
xchg
cmp
fwait
mov
jns
out
retf
aad
jmp
out
pop
mov
repz
das
cmp
push
popa
call
jno
jnp
(bad)
out
test
fs
pop
test
pushf
mov
leave
sub
(bad)
ret
out
ror
jnp
and
test
enter
loopne
or
and
out
sbb
xchg
nop
icebp
pushf
out
clc
shl
psllq
adc
hlt
xchg
dec
or
xor
les
shl
inc
dec
rcl
iret
repz
addr16
test
repz
(bad)
cdq
mov
iret
repz
aad
jmp
repz
pop
rcl
and
test
shl
repz
frstpm(287
out
stc
add
lahf
out
sahf
or
aas
ror
inc
lahf
out
shl
int
ret
ins
ret
and
or
pop
ins
dec
aam
in
enter
sti
aam
and
aam
outs
xor
aam
dec
fadd
mov
push
sbb
aam
aam
fs
inc
aam
aam
nop
inc
push
aam
aam
inc
push
sbb
aam
inc
push
sbb
aam
gs
aam
aam
adc
cmp
mov
stos
push
lds
iret
xlat
ret
repz
out
dec
ret
adc
daa
xor
inc
dec
pop
cmp
repz
ins
ja
mov
cmp
repz
lahf
test
jns
cmps
xchg
fwait
movs
scas
mov
ret
int
ret
rep
jns
ret
sub
les
leave
push
je
aas
xor
add
cmp
add
jnp
or
retf
and
mov
out
call
pop
sahf
out
sahf
outs
jns
lea
mov
out
sahf
out
fucom
icebp
sti
cmps
stc
cmp
add
(bad)
test
lds
adc
das
fs
mov
push
enter
enter
dec
mov
outs
ins
push
cmp
nop
rcl
rcl
cmp
nop
inc
rcl
shl
nop
inc
push
rcl
rcl
rcl
inc
push
cmp
rcl
ror
cmp
nop
rcl
rcl
cmp
nop
inc
rcl
shl
nop
inc
push
rcl
rcl
rcl
push
cmp
in
rcl
rcr
nop
inc
rcl
(bad)
jns
jbe
mov
cmp
repz
rcr
out
jns
out
sti
add
out
sahf
out
aaa
inc
dec
push
lahf
out
sahf
pop
imul
iret
repz
outs
jns
lea
repz
mov
ins
sahf
xor
mov
xor
test
cmp
mov
mov
neg
dec
push
inc
xor
jns
sbb
fsub
mov
in
dec
cmp
test
jmp
iret
repz
add
aaa
cmp
repz
dec
push
pop
imul
jge
xchg
fwait
iret
repz
movs
scas
mov
cmps
stc
cmp
leave
leave
rcr
out
int3
icebp
jns
sti
leave
xchg
jmp
add
mov
pop
mov
sbb
daa
iret
fisub
outs
jg
mov
sub
sub
push
das
inc
pop
daa
sbb
mov
or
inc
sub
push
push
call
int3
int3
int3
int3
imul
rcl
mov
int3
int3
int3
xor
shl
int3
int3
int3
int3
dec
xor
ror
int
int
daa
in
call
cmp
(bad)
and
into
dec
add
fcomp
nop
jmp
in
mov
pop
or
dec
adc
add
jmp
xchg
push
inc
iret
fiadd
push
pop
into
out
sahf
cmps
imul
jns
fwait
movs
scas
mov
out
xlat
loope
cmc
push
cmp
repz
adc
call
into
aas
in
ss
jns
fs
push
rcr
iret
and
test
push
shl
jne
in
pusha
imul
add
push
push
pop
cmp
sar
imul
repz
repz
popf
cmps
mov
iret
repz
(bad)
jecxz
neg
ror
adc
icebp
jns
cmp
mov
leave
rol
rol
fs
rcl
and
retf
cmp
jecxz
out
aaa
add
and
add
mov
pop
sar
jae
rol
repz
mov
repz
retf
aad
jmp
imul
and
jns
inc
dec
push
pop
ror
cdq
jecxz
addr16
dec
out
adc
cmp
adc
aam
rol
and
aam
pop
or
cwde
sbb
dec
mov
xchg
iret
jae
ins
aad
push
or
mov
(bad)
sahf
out
(bad)
in
test
aad
adc
iret
repz
inc
push
pop
gs
mov
mov
(bad)
inc
jb
cmp
(bad)
and
cmp
push
mov
xor
nop
and
xchg
hlt
pop
loopne
add
adc
and
shl
mov
test
ret
out
xchg
mov
xchg
leave
push
fsubr
and
test
jo
clc
(bad)
cmp
loop
lea
iret
push
pop
cmp
cmp
stos
push
push
pusha
xor
and
xor
jb
jb
arpl
pusha
push
sbb
nop
inc
mov
mov
dec
aam
(bad)
push
sti
push
dec
adc
and
cmp
pop
pop
sbb
sbb
cmp
fmul
sbb
frstor
adc
adc
pop
int3
adc
enter
dec
hlt
daa
mov
adc
push
push
jb
or
adc
xor
enter
loopne
or
sbb
pop
push
push
jb
pop
add
or
addps
xchg
or
pushf
hlt
aas
enter
add
int3
int3
push
sbb
int3
int3
int3
sbb
int3
int3
int3
fs
inc
push
int3
int3
int3
nop
inc
push
sbb
int3
int3
inc
push
sbb
int3
adc
fs
int3
int3
int3
xchg
mov
int3
out
dec
and
into
in
out
xchg
sahf
out
sahf
lahf
test
jns
sar
addr16
push
add
repz
or
xor
cmp
push
retf
aad
repz
repz
(bad)
cdq
mov
lods
mov
fdiv
fisubr
or
es
(bad)
call
jecxz
sahf
cmps
stc
cmp
add
or
jns
xor
sahf
out
outs
jns
fsub
imul
fst
sbb
das
cmp
push
jns
out
popa
imul
adc
out
add
repnz
(bad)
aaa
enter
pop
jb
cld
xor
lea
loopne
sub
outs
jne
movs
stc
cmps
movs
(bad)
aas
cmp
ror
jno
ss
(bad)
xor
adc
and
pop
mov
inc
sub
pop
or
sbb
inc
test
sar
movs
ret
inc
mov
push
xor
or
outs
ins
adc
test
sub
sbb
dec
xor
adc
xchg
mov
dec
mov
add
jne
call
sbb
pop
inc
xchg
xchg
ss
fisttp
or
retf
adc
mov
enter
dec
or
das
scas
dec
mov
push
adc
daa
sub
jecxz
jne
xor
sbb
sub
xor
(bad)
shl
push
cmps
add
dec
inc
cmp
and
pop
adc
add
cvtdq2ps
dec
fs
sahf
push
xchg
jge
push
xchg
cld
mov
or
mov
outs
sub
cs
inc
adc
inc
push
add
dec
xchg
dec
dec
sbb
sub
in
rol
xlat
(bad)
fistp
sbb
add
imul
sub
xchg
stos
(bad)
adc
rcl
(bad)
mov
popa
jnp
loopne
clc
call
mov
inc
or
fsub
pushf
inc
ds
xor
retf
jb
push
nop
add
xchg
iret
ret
mov
pop
ins
loope
mov
cmp
push
test
inc
repz
pusha
sub
imul
inc
add
ss
dec
cdq
add
xchg
retfw
or
mov
test
loope
dec
and
and
call
popf
add
icebp
xchg
call
sbb
ja
arpl
js
pop
js
and
test
aaa
mov
and
and
imul
inc
cmps
out
add
in
mov
mov
popf
aaa
jb
push
push
push
call
iret
add
cli
push
add
ins
xchg
mov
lahf
add
adc
jecxz
fstp
je
xor
xchg
xlat
sbb
leave
mov
mov
add
or
sbb
mov
cdq
push
nop
xchg
lock
pop
call
popa
hlt
in
data16
cmp
lds
shl
and
dec
in
ss
xchg
mov
outs
mov
(bad)
cmc
add
sub
jmp
icebp
and
adc
sub
add
or
add
jl
mov
push
cmp
or
xchg
rcl
sbb
loop
mov
dec
nop
xor
jp
hlt
mov
push
or
lods
(bad)
push
xor
and
sbb
cld
add
xchg
mov
jno
jecxz
inc
pcmpgtb
out
push
in
fdiv
xor
dec
jmp
in
imul
push
add
mov
test
inc
push
inc
pop
push
xchg
sub
inc
enter
shr
lahf
jae
int3
and
clc
lahf
out
inc
xor
cld
int
test
cld
adc
xchg
push
stos
pusha
sub
sbb
add
or
out
fs
mov
lds
cmp
adc
aas
out
scas
leave
or
and
aad
sbb
fisttp
pop
fistp
xchg
inc
adc
add
adc
mov
push
aad
adc
sub
mov
mov
daa
or
idiv
jmp
cmc
xor
xchg
arpl
and
dec
or
and
pop
or
sub
ja
dec
inc
std
xchg
stos
pop
xor
pop
mov
pop
dec
mov
sbb
push
adc
inc
enter
pusha
jmp
jmp
cmp
mov
or
les
jb
jmp
pop
pop
mov
push
enter
lea
in
jp
ror
adc
cwde
pop
pop
enter
push
and
dec
jmp
test
add
in
inc
in
jo
movs
or
out
dec
mov
xchg
adc
in
ret
ror
adc
inc
iret
mov
enter
in
mov
adc
inc
(bad)
adc
xchg
test
pop
ins
push
ret
or
inc
sub
ins
or
or
aas
stos
sbb
push
lods
adc
loop
sbb
adc
pop
hlt
add
pop
mov
xor
add
adc
xchg
cmpxchg
out
adc
inc
push
(bad)
mov
rcl
call
stos
xor
mov
and
add
clc
mov
sub
xchg
push
(bad)
outs
jae
lods
push
sub
repz
ror
out
in
xlat
mov
les
xchg
cmp
sub
jmp
fisttp
aam
daa
iret
xor
jns
popa
push
addr16
fadd
call
cwde
jg
xor
mov
mov
mov
push
and
mov
popa
jmp
xlat
sbb
sbb
fcom
out
or
mov
repnz
in
cmc
pusha
lea
lds
or
push
cmp
cmp
sub
in
call
and
push
pop
cmps
daa
xchg
repnz
and
add
cmps
adc
mov
sbb
movs
or
push
xchg
add
repnz
fdiv
sbb
dec
hlt
sub
nop
add
or
sbb
arpl
add
mov
add
mov
aaa
lahf
mov
test
mov
sub
inc
test
(bad)
and
or
sbb
fild
test
and
in
in
div
add
popa
imul
and
adc
stos
psubsw
xor
add
pop
xor
adc
or
mov
pop
dec
cmp
out
mov
adc
repnz
xchg
pop
push
imul
lods
push
add
and
js
stc
in
mov
lods
iret
iret
or
fcom
sbb
fnsetpm(287
stc
out
and
jg
push
lods
test
(bad)
nop
add
xchg
or
pop
test
out
jbe
test
adc
not
adc
adc
sti
ja
jbe
adc
inc
mov
jmp
and
adc
nop
dec
jb
(bad)
or
test
mov
jmp
shl
in
out
sbb
aad
pop
fnstcw
std
int
mov
or
adc
addr16
jo
inc
shl
add
ja
pushf
mov
sub
jo
sbb
dec
nop
pop
or
and
imul
je
in
in
ja
rol
or
test
jb
std
in
fistp
add
or
cmp
(bad)
adc
pop
push
nop
dec
push
(bad)
inc
aaa
(bad)
out
test
bound
adc
xor
(bad)
in
add
adc
pop
xchg
call
pop
sub
push
sbb
movs
inc
adc
and
cmp
aad
(bad)
mov
stos
add
ror
call
pop
pop
cmp
add
sub
xchg
ror
add
ror
lahf
mov
adc
xchg
sti
mov
pop
add
cdq
dec
jb
dec
clc
add
hlt
mov
sbb
lock
push
pop
xor
add
nop
(bad)
aam
pop
lds
pop
mov
daa
and
dec
add
test
jnp
and
xchg
call
pusha
in
rcl
stos
xchg
sub
mov
inc
mov
sub
je
mov
inc
adc
dec
pop
cmp
adc
lock
mov
push
mov
popf
cmp
pop
das
adc
add
sbb
add
adc
movs
or
and
push
jne
pop
mov
mov
adc
push
es
nop
es
inc
outs
adc
xchg
ja
ins
add
dec
test
jge
add
popa
and
pop
mov
jmp
data16
adc
js
mov
jl
rcl
and
test
push
adc
mov
add
out
dec
xchg
xor
jg
dec
rol
xchg
pop
add
cmp
cli
loope
scas
leave
sub
push
cmp
imul
jb
test
adc
mov
push
lods
inc
mov
jno
out
mov
dec
push
add
sub
mov
lock
mov
lahf
or
mov
cmps
rol
adc
(bad)
in
inc
and
sub
and
leave
mov
jns
inc
push
xchg
push
mov
ror
xchg
pushf
les
rcr
and
mov
js
gs
ret
out
movs
add
(bad)
out
pop
push
loope
xor
and
pop
inc
loopne
cmps
imul
adc
call
mov
xor
fild
cmp
sbb
or
call
int3
std
add
and
enter
je
(bad)
les
push
sbb
fadd
popa
mov
xchg
xchg
test
and
rol
test
test
or
xchg
cli
(bad)
fcom
pushf
and
movs
or
mov
repnz
mov
out
int3
or
dec
enter
adc
or
scas
mov
sahf
push
cmp
idiv
adc
sbb
in
aas
push
cld
lea
sub
mov
cmps
stos
xor
sbb
or
or
add
and
out
ins
sbb
fisttp
sbb
inc
mov
or
mov
leave
and
and
xchg
or
sub
stc
cmp
add
push
cs
sub
outs
jo
pop
cmps
pop
shl
(bad)
inc
pop
sbb
xor
dec
jae
femms
push
and
or
xchg
xchg
dec
mov
daa
das
nop
pop
test
jmp
adc
jle
dec
xchg
pop
and
xchg
out
adc
in
stos
push
sub
dec
or
pushf
shl
mov
cmp
adc
rdmsr
leave
mov
repnz
adc
adc
pop
and
or
pop
add
xchg
mov
leave
push
dec
mov
adc
mov
mov
sbb
adc
push
call
pop
dec
jno
fbld
push
adc
mov
adc
push
add
or
mov
push
sbb
or
imul
adc
or
aam
or
xor
sub
push
push
movs
pusha
add
std
call
(bad)
jecxz
aad
adc
xchg
push
das
nop
push
jne
pop
xor
inc
xor
bound
xor
mov
mov
adc
pop
mov
cli
add
and
call
jb
sbb
sub
adc
push
mov
jb
adc
ror
adc
or
aam
inc
(bad)
in
push
sub
sub
cwde
sbb
xor
out
sbb
sbb
and
in
sbb
adc
pop
enter
push
test
inc
mov
(bad)
mul
add
adc
rol
adc
adc
sbb
inc
dec
xor
lods
sbb
add
out
sbb
add
sbb
lods
xlat
test
rcl
sub
call
pushf
test
stc
sbb
mov
mov
push
or
xchg
dec
enter
shl
das
adc
inc
or
and
cmp
enter
or
stos
mov
adc
out
repnz
pop
adc
xor
xchg
and
and
nop
push
inc
mov
cmp
push
dec
fiadd
and
and
xchg
adc
or
in
test
or
and
(bad)
dec
push
fist
push
stos
ret
dec
sub
pop
movs
pop
and
cs
cmp
add
and
cld
inc
or
in
jmp
jns
dec
enter
imul
jg
std
sbb
inc
xchg
loopne
in
mov
sub
push
add
adc
test
push
adc
xchg
cmps
push
and
and
xchg
les
mov
into
cmc
or
cmp
xchg
mov
dec
pop
push
loop
outs
add
pop
out
(bad)
daa
xchg
adc
mov
sbb
in
push
and
sub
sub
retf
in
jb
and
cmp
(bad)
data16
stos
in
retf
sets
add
es
cwde
xor
xor
out
mov
sbb
sub
loopne
(bad)
or
daa
lock
inc
test
leave
push
pop
call
xchg
sbb
rol
and
inc
push
or
xor
sub
test
pop
in
xor
clc
and
sub
xor
call
in
clc
xchg
call
popa
inc
push
xor
and
mov
sub
xchg
or
inc
or
adc
push
bound
sub
push
inc
jo
push
shr
inc
call
mov
inc
jg
push
mov
lahf
sub
js
add
adc
ret
out
seto
add
mov
pop
inc
lahf
retf
jmp
or
cld
inc
in
mov
loop
popf
(bad)
jmp
cmp
and
ss
fcomp
xchg
outs
(bad)
aam
bound
arpl
cmp
fstp
pop
jns
dec
sub
pop
and
xchg
push
sbb
sub
or
retf
into
pusha
jg
in
jno
or
pop
enter
push
sub
and
sbb
lock
sub
inc
adc
shl
xor
in
and
and
or
sub
cmp
fwait
and
cwde
cs
aaa
push
push
mov
inc
xchg
push
dec
pushf
inc
and
in
das
sub
cdq
sub
loopne
cmp
clc
mov
xchg
adc
inc
outs
ret
mov
shl
daa
pop
cmp
in
xor
adc
call
inc
(bad)
adc
leave
xor
sbb
cld
xor
add
and
stos
pop
fs
ins
xor
add
popf
xchg
inc
push
inc
pop
add
add
jle
pop
js
dec
xchg
(bad)
movlps
inc
call
and
xor
push
ja
loope
mov
retf
add
pop
loope
xchg
test
pop
daa
cld
pop
repnz
or
or
add
adc
xor
adc
enter
outs
jecxz
mov
add
xchg
retf
add
lods
enter
add
cwde
or
gs
test
in
adc
jmp
xor
jl
lock
shl
or
inc
jae
outs
arpl
and
adc
sub
dec
dec
outs
popa
sub
int
nop
inc
or
nop
dec
xor
and
or
addr16
dec
add
cdq
inc
pop
mov
adc
imul
dec
ja
imul
bound
ror
or
lahf
pop
pop
pop
cmps
and
or
shl
adc
push
and
push
pop
nop
mov
and
push
mov
and
adc
fwait
movs
mov
dec
add
inc
ins
ins
add
pop
daa
mov
mov
cmps
adc
aaa
push
js
stc
push
and
jg
mov
rol
fistp
or
cmp
sbb
mov
(bad)
xchg
add
fs
ret
pop
(bad)
xor
sar
inc
daa
adc
cwde
push
adc
add
lods
or
xor
pusha
mov
add
test
(bad)
add
mov
lahf
xor
inc
mov
mov
pop
mov
rcr
clc
pop
rcl
mov
in
pop
inc
nop
ret
push
fstp
inc
push
loopne
das
or
test
cmp
stc
or
push
cdq
pop
adc
ds
add
cs
hlt
and
mov
in
push
and
inc
sub
cmp
and
es
push
or
or
jnp
xchg
dec
lahf
mov
cmp
ins
inc
sti
movs
xor
ret
jmp
mov
mov
shl
or
je
jo
fcmovu
ins
je
cmp
mov
xchg
jl
add
cwde
inc
fcom
sub
add
out
push
popf
neg
sub
xor
enter
pop
retf
adc
push
aaa
dec
loopne
mov
mov
lock
add
xlat
dec
cmp
or
test
lock
popa
add
hlt
add
push
xchg
iret
pop
pop
adc
adc
mov
pop
pop
or
pop
in
mov
mov
in
xor
fisttp
cmc
arpl
shl
clc
jl
movs
add
adc
lahf
stc
shl
and
push
jno
into
add
cwde
adc
pop
or
movs
rcl
jmp
dec
and
ins
cmp
sub
add
(bad)
jl
mov
in
test
sub
pop
lds
in
mov
and
in
xor
(bad)
or
test
in
adc
in
js
dec
loope
xor
inc
sub
mov
adc
(bad)
and
in
popa
imul
dec
xor
inc
mov
jmp
ret
inc
and
stos
cmp
push
pop
ss
sub
jl
inc
pop
mov
jae
xchg
jo
pusha
out
dec
jno
inc
cmp
nop
ret
adc
int
out
test
enter
iret
(bad)
pop
cmp
shr
or
and
push
xchg
xchg
sbb
cmp
cmp
push
add
int
dec
popa
sub
arpl
fdivr
sub
sub
cld
rcl
pop
jle
cmp
mov
cmp
shr
mov
dec
or
icebp
aaa
pop
mov
ss
or
adc
scas
int3
(bad)
scas
and
sbb
sbb
mov
and
int
imul
adc
push
imul
sbb
ss
pop
sbb
or
push
pop
and
sub
(bad)
mov
inc
push
jae
icebp
jmp
in
les
aaa
or
inc
or
pop
pop
paddq
jo
sub
ins
sahf
(bad)
mov
adc
ret
jge
dec
dec
outs
outs
adc
cmps
and
and
mov
sbb
xchg
ins
scas
pop
dec
fiadd
or
(bad)
rcr
and
mov
and
(bad)
pminsw
rcr
push
push
inc
fisub
sub
add
sbb
aaa
je
aas
mov
test
sbb
sub
mov
mov
mov
pusha
daa
inc
xor
ins
(bad)
or
or
add
(bad)
dec
adc
movs
mov
lock
scas
out
dec
je
mov
lea
xor
popa
loope
cld
adc
or
aaa
pop
pop
out
xlat
imul
or
aaa
add
push
mov
and
jle
cmp
sub
popa
add
arpl
adc
inc
adc
lea
or
bound
(bad)
inc
jl
shl
mov
loope
outs
fsub
lods
add
or
lea
xchg
sbb
and
out
inc
es
rcr
adc
mov
dec
scas
mov
add
ja
pusha
mov
pop
and
pop
push
or
jns
cmp
adc
push
push
fdiv
js
push
daa
dec
js
or
adc
pusha
or
enter
pop
dec
pop
dec
cmps
mov
lahf
loopne
test
inc
adc
pop
inc
aaa
mov
fistp
ret
push
in
or
ins
loopne
mov
inc
outs
imul
fcom
sbb
mov
pop
inc
add
dec
enter
jne
jne
jbe
outs
dec
ret
dec
or
enter
adc
je
mov
(bad)
daa
push
mov
add
cmc
or
clc
mov
aas
fcom
clc
or
aaa
sub
cmp
popa
dec
clc
inc
dec
push
xchg
adc
inc
jne
pop
adc
and
popa
cmps
or
lock
adc
pop
hlt
push
inc
mov
dec
aad
sbb
push
sbb
test
xchg
xchg
fwait
xchg
add
push
in
xor
add
sub
and
dec
adc
stos
push
inc
ret
daa
push
push
or
and
xor
add
push
pop
mov
inc
jb
(bad)
mov
sbb
mov
hlt
nop
inc
and
mov
sub
sar
test
fcmovbe
inc
outs
call
dec
mov
(bad)
jno
push
imul
test
adc
fcmovne
popf
sbb
push
pop
and
inc
cld
sbb
dec
inc
or
mov
or
jbe
jae
pushf
je
mov
in
jnp
inc
cmp
xchg
adc
adc
sbb
bound
ds
sbb
out
inc
or
popa
cmc
pop
xor
jae
test
mov
rcr
xchg
ss
iret
lds
fs
mov
pop
mov
add
lock
dec
pop
adc
jp
dec
fsubp
inc
mov
inc
popa
jae
xchg
int3
push
shl
push
jg
mov
push
mov
pusha
cwde
push
call
sub
cli
mov
jg
jp
inc
aaa
xor
jns
adc
aaa
cmp
(bad)
pop
daa
push
jecxz
and
pop
(bad)
icebp
mov
or
in
jmp
push
push
pop
add
outs
push
mov
ret
int
iret
inc
pop
ja
pop
pop
adc
jns
inc
nop
popf
dec
inc
dec
imul
movs
cmp
mov
dec
mov
cdq
pusha
mov
fs
pop
daa
fs
out
dec
dec
dec
jp
loopne
out
js
add
in
das
out
fmul
add
xchg
nop
xlat
fadd
cmp
adc
aad
add
int3
dec
call
push
pushf
cwde
or
dec
sbb
mov
xor
stos
lods
cmps
adc
enter
icebp
ss
mov
enter
pop
mov
in
ret
and
mov
cli
push
mov
pop
sbb
dec
xchg
out
push
push
and
call
retf
inc
add
cmp
in
repz
cmp
hlt
imul
push
inc
mov
and
and
xchg
out
repnz
pop
inc
ds
or
pop
push
dec
dec
xchg
iret
ja
aam
inc
push
dec
push
pop
inc
ds
fs
cmp
xchg
out
repnz
mov
and
test
sbb
mov
clc
sbb
dec
sbb
rol
shr
test
fcomp
mov
inc
push
push
jb
inc
add
fbld
xchg
cmp
pop
hlt
and
and
and
and
pop
sub
in
retf
xor
or
cmp
jb
dec
push
push
pop
push
mov
pop
xchg
inc
xchg
adc
dec
sbb
repz
or
mov
mov
xchg
lock
adc
dec
sub
dec
fsubr
and
mov
jge
cmp
inc
(bad)
xor
mov
jbe
pop
cmp
enter
adc
lea
dec
dec
xchg
jb
test
loopne
pop
in
add
nop
out
or
movs
adc
pop
mov
ins
icebp
push
stc
and
add
add
and
xor
movd
add
sbb
sub
mov
clc
clc
stc
punpcklbw
and
or
ja
daa
or
jne
inc
push
push
and
or
call
arpl
js
pop
mov
or
dec
leave
pop
push
enter
adc
enter
push
inc
push
push
and
push
and
push
pop
ror
mul
cmps
inc
push
retf
push
cmp
xchg
push
sub
mov
mov
sub
nop
sub
bound
test
es
cmp
inc
fisubr
push
call
adc
enter
repnz
or
or
repnz
mov
call
inc
dec
mov
jne
or
mov
xor
push
xor
adc
aam
xor
les
lods
adc
ret
and
xor
sub
or
and
inc
pop
orps
sbb
cs
push
push
push
and
xor
dec
mov
inc
sahf
in
(bad)
mov
mov
shl
inc
push
imul
into
push
and
or
ja
test
cdq
push
cmp
fist
and
stos
add
push
jbe
push
adc
into
or
mov
xchg
inc
sub
xor
into
sbb
mov
push
dec
sar
ins
fwait
sub
push
sub
ins
push
iret
xor
sbb
int3
ret
les
or
jo
dec
call
add
test
add
jmp
push
popa
bound
push
mov
ror
sub
add
es
mov
test
popa
call
js
fcmovb
push
pop
pop
mov
jp
and
test
dec
jns
inc
sbb
add
and
mov
add
lods
mov
(bad)
push
movs
jne
dec
mov
and
xor
cmp
imul
movs
jo
inc
jnp
dec
push
jo
xchg
push
ins
add
fadd
shl
pop
mov
jae
inc
test
or
addr16
adc
inc
inc
cmp
loope
in
aaa
mov
inc
adc
mov
xchg
push
rcr
or
jb
stos
test
stc
pop
and
xchg
push
or
jne
aam
stc
stc
add
inc
jne
xor
pop
add
test
(bad)
scas
mov
jmp
sbb
mov
and
bound
dec
or
cmp
or
sar
dec
sbb
jp
dec
cmp
ja
xor
bound
or
ins
pop
mov
and
nop
adc
rol
imul
push
mov
mov
dec
mov
push
xchg
sbb
or
leave
mov
lds
enter
or
sub
test
daa
dec
add
add
pop
and
mov
fmul
movs
mov
pop
pop
mov
pop
inc
inc
aas
scas
cwde
popa
ret
pop
inc
inc
adc
es
test
dec
xor
cmps
and
or
sub
ret
test
push
mov
shl
fist
inc
jg
push
mov
pop
sbb
push
out
popw
adc
test
std
fwait
mov
xchg
sbb
int
out
mov
adc
adc
cmp
ret
push
cmps
xchg
mov
xchg
and
enter
cmp
jl
add
cmp
ss
and
sar
ds
adc
lods
movq
outs
mov
mov
or
cmp
dec
push
push
mov
jae
fwait
out
arpl
add
cmp
inc
call
aas
lahf
imul
xchg
inc
in
or
jmp
dec
mov
or
xchg
lods
sbb
in
add
pop
pusha
add
or
imul
xor
add
sub
dec
das
and
mov
and
icebp
icebp
aad
dec
jg
mov
and
sti
mov
and
inc
dec
cmp
(bad)
jge
fadd
in
or
dec
(bad)
sbb
scas
sub
sub
pop
inc
mov
ret
mov
stc
and
mov
shr
mov
repnz
inc
gs
add
dec
jo
dec
or
lahf
ins
add
shl
and
push
push
cmovle
push
dec
ins
fld
fwait
or
jge
or
mov
sub
mov
imul
mov
fiadd
xor
out
pop
pop
push
fs
ss
mul
jo
das
sbb
loopne
loopne
ins
add
nop
or
pop
xor
imul
sbb
fwait
or
add
mov
mov
in
add
inc
inc
scas
cmp
mov
dec
outs
add
ror
lods
jo
ret
push
daa
push
shl
imul
and
or
rcl
(bad)
rol
sub
dec
push
out
js
les
enter
or
fiadd
mov
cwde
pop
or
je
fcomp
pop
fsub
push
pop
inc
or
cmp
push
and
outs
sub
addr16
in
bound
fs
jmp
test
mov
clc
add
pop
movs
retf
cmp
dec
pop
shl
dec
int
cld
or
sub
sub
ret
add
jecxz
arpl
inc
pop
xlat
and
push
stos
push
clc
mov
add
or
das
ja
xor
dec
cwde
loop
dec
adc
and
jl
aaa
push
pop
adc
ret
add
clc
mov
push
xor
push
ins
das
add
add
inc
cdq
call
loop
ror
push
adc
popa
push
rcl
ss
sbb
xchg
add
pop
ins
pop
fcomp
int3
cwde
scas
adc
mov
add
or
adc
adc
mov
pop
sbb
pop
add
movs
lea
jg
cwde
das
rcr
and
rol
mov
pop
(bad)
popf
outs
loope
sbb
dec
and
mov
ins
jg
addr16
pop
or
mov
hlt
(bad)
call
in
jmp
inc
jne
cmp
stos
lahf
(bad)
sar
ret
sub
cmp
mov
enter
loope
neg
int3
rcl
dec
aam
mov
pop
dec
fadd
pop
(bad)
sub
cmc
int3
rcl
test
xlat
enter
adc
pop
push
jno
pop
pop
cs
inc
add
es
inc
xchg
test
dec
rcr
xchg
pop
call
jns
sbb
xchg
push
lods
test
fbstp
xor
setle
rol
mov
(bad)
(bad)
or
add
mov
ins
fistp
call
xchg
sbb
add
or
push
and
fbld
cmc
fsubr
push
loopne
mov
pop
sbb
jle
or
push
sbb
push
and
push
jo
test
in
dec
sub
sbb
adc
retf
or
mov
adc
cmp
inc
adc
outs
movs
ds
and
pop
mov
and
add
and
inc
test
or
cmp
and
xor
outs
imul
ret
cs
push
pushf
gs
sub
xor
mov
aaa
and
and
or
xor
icebp
or
mov
icebp
out
or
cwde
in
and
jl
and
push
jb
fwait
pop
cmp
push
cmp
clc
adc
sbb
sbb
nop
inc
inc
dec
cdq
xor
xchg
xlat
push
sahf
out
sahf
loope
jae
xchg
fwait
movs
scas
mov
jmp
in
mov
dec
jmp
sbb
aaa
sub
imul
call
outs
fdiv
dec
add
push
cmp
sub
mov
push
add
bound
xchg
fwait
jl
mov
and
fcomp
sub
or
push
mov
ins
xor
sahf
out
push
push
in
out
stc
add
iret
ror
lock
add
xor
mov
fisub
ins
nop
push
add
dec
inc
add
movs
adc
fwait
pop
ins
mov
cmp
mov
inc
add
lods
ror
dec
sub
popf
pop
push
jbe
pop
xor
add
mov
xor
mov
adc
cs
adc
cmp
call
or
add
add
mov
popa
or
test
sbb
rol
enter
add
pop
push
mov
psubusb
mov
outs
das
in
adc
(bad)
fwait
or
es
retf
mov
xchg
dec
cld
call
xchg
dec
cld
xchg
dec
nop
cs
ret
cdq
out
fnsave
test
pop
scas
or
ret
mov
dec
shl
js
shl
cmps
dec
push
movs
dec
cmc
sub
xlat
bound
xor
imul
ret
pop
xor
dec
sahf
mov
sbb
dec
jns
gs
clc
lea
enter
add
push
push
(bad)
fcomp
xchg
(bad)
lock
fsubr
sbb
movs
rcl
fwait
stos
jbe
add
xor
jo
jle
pusha
inc
cli
or
xadd
mov
rcl
push
dec
jns
inc
fdiv
push
cmp
inc
sub
int3
pop
add
hlt
lock
dec
xchg
adc
out
addr16
jno
fidiv
cs
xchg
cmp
int
test
sbb
cmp
mov
add
mov
cmps
mov
push
mov
sub
pop
or
or
xchg
inc
gs
add
dec
xchg
mov
js
test
inc
inc
push
mov
sub
mov
aam
sbb
loopne
lds
sbb
scas
cmp
sub
push
mov
pop
enter
imul
add
cmp
leave
ret
sbb
rol
cs
sbb
jns
in
adc
dec
enter
and
scas
or
and
or
mov
mov
les
int3
push
and
jns
sbb
lods
scas
dec
imul
mov
jae
pop
sub
rcr
je
or
xchg
or
in
je
outs
add
push
lock
mov
xor
mov
fxtract
lea
cmp
inc
mov
scas
add
push
push
push
ds
and
pop
out
push
sbb
stos
arpl
add
inc
es
mov
or
sbb
test
add
sub
cmps
push
imul
inc
push
shr
mov
push
add
mov
in
hlt
and
jbe
add
pushf
pop
jbe
jbe
mov
xchg
and
or
and
ror
movs
pop
enter
add
add
movs
add
neg
xchg
push
aam
je
into
je
popa
or
push
fiadd
push
sub
mov
inc
ret
push
inc
inc
pop
add
fisub
or
cdq
mov
pop
ja
ret
pop
jp
aaa
sub
dec
jne
adc
or
jb
or
push
cmp
js
cmp
out
xchg
jecxz
cmps
pop
dec
ret
push
(bad)
and
push
dec
push
nop
dec
or
dec
sub
dec
add
add
les
nop
pop
jns
mov
pop
mov
push
mov
mov
mov
mov
fs
mov
into
mov
mov
mov
push
cs
sbb
add
(bad)
adc
outs
and
pop
loope
dec
mov
add
fisub
sbb
add
add
mov
nop
(bad)
aam
in
(bad)
sti
into
test
cmp
addr16
ficomp
push
test
mov
stc
push
ret
mov
es
pop
jecxz
lds
inc
push
ret
pop
sub
mov
jbe
adc
add
cmp
test
push
data16
adc
in
fnsave
xchg
je
jae
add
sbb
shl
and
jo
push
add
adc
or
push
sub
mov
pop
repnz
jp
jnp
mov
inc
aam
dec
int3
and
xlat
(bad)
jnp
inc
mov
sub
aam
dec
sub
cmp
xor
pusha
mov
enter
sub
push
adc
ins
lods
add
jmp
add
pop
inc
scas
pop
xor
add
push
sbb
sbb
dec
mov
pusha
push
push
lgdtd
out
inc
neg
retf
ret
or
sbb
dec
cwde
xor
sub
push
cmp
xor
cmps
(bad)
dec
and
inc
retf
loope
imul
and
sbb
or
jno
test
mov
mov
or
es
fist
test
fcom
dec
cs
outs
and
xor
and
sub
sub
push
jno
sub
xor
mov
test
push
xchg
jne
pop
sub
dec
dec
and
(bad)
push
sbb
push
das
xchg
xchg
dec
stc
adc
xchg
xor
or
outs
inc
cdq
add
xor
mov
push
and
shl
xor
pop
add
leave
aad
push
dec
xor
pop
and
ss
xchg
fs
aaa
cmp
leave
cmp
cmp
push
xor
and
aam
jb
inc
add
inc
adc
inc
inc
pop
and
and
inc
or
and
add
aad
inc
inc
adc
jb
dec
loopne
xor
mov
lds
outs
pusha
nop
das
pushf
push
enter
retf
or
jno
dec
pop
mov
push
fcomp
inc
and
loope
and
add
outs
nop
retf
dec
nop
add
sbb
adc
je
sub
(bad)
lahf
add
dec
test
cwde
test
out
jnp
adc
les
sbb
add
(bad)
movs
into
dec
clc
fsubr
xor
push
mov
dec
xchg
enter
movs
add
outs
or
jg
bound
push
dec
pop
dec
ds
dec
or
xchg
stc
cmp
(bad)
mov
dec
sbb
xchg
xchg
outs
dec
hlt
fdiv
shl
inc
and
mov
mov
inc
ja
push
xchg
mov
sub
push
sbb
dec
js
sub
js
or
rcl
push
cmp
cmp
add
ret
cmp
jo
in
add
adc
(bad)
inc
sub
xor
hlt
lock
pusha
ins
pushf
dec
scas
sbb
ins
lea
lods
es
push
mov
xor
or
aaa
push
enter
inc
push
sub
push
(bad)
and
push
loope
outs
(bad)
adc
xor
cmp
imul
jne
lea
imul
fst
xor
call
mov
dec
sub
call
sbb
ret
adc
mov
rcr
sub
dec
jno
leave
ret
aas
xor
or
(bad)
mov
je
add
and
out
or
jge
inc
(bad)
and
pop
cwde
add
pop
add
lods
jg
rol
idiv
and
add
out
sub
pop
mov
sbb
jns
mov
mov
aam
xchg
xchg
sbb
add
test
jbe
lods
and
pop
inc
sub
push
(bad)
aas
mov
xchg
inc
je
dec
sbb
mov
js
(bad)
inc
cmp
push
test
add
or
je
jbe
es
out
aad
or
ss
sar
mov
add
add
gs
or
adc
arpl
inc
jb
mov
xchg
dec
mov
push
xchg
pusha
or
inc
xor
push
xor
movs
cmp
fidivr
add
add
or
in
movs
or
fadd
and
sub
shl
pop
or
sbb
mov
scas
adc
add
add
repnz
add
or
inc
jmp
cmp
sub
mov
jge
lock
add
dec
push
adc
and
pop
mov
and
popf
imul
cmps
ins
popa
push
mov
sbb
scas
dec
in
fstp
push
mov
add
add
aas
push
xchg
pop
popa
mov
lea
je
sub
jo
rcl
lock
sbb
pop
mov
loopne
das
fist
aaa
push
pop
and
nop
enter
jnp
push
jl
outs
mov
and
shr
ins
out
cmp
adc
dec
push
and
and
jp
mov
leave
pop
or
lds
push
mov
clc
pop
inc
push
pop
push
xor
pop
xchg
lahf
jg
ficom
jb
vpmacssdqh
shl
ja
loopne
xchg
lahf
lock
mov
mov
outs
push
xchg
(bad)
pop
ss
clc
or
jl
in
jb
enter
pop
icebp
test
les
jb
icebp
adc
nop
xchg
jl
dec
push
repnz
sub
aas
push
and
jg
add
js
iret
mov
sub
pop
mov
mov
test
rcr
stos
xchg
rol
adc
mov
inc
cmp
sbb
jne
mov
(bad)
fst
(bad)
add
cmps
and
jg
movzx
add
pop
mov
dec
cmp
lock
mov
mov
scas
les
sbb
xlat
push
mov
movs
cmps
cmps
ret
sbb
jg
push
pusha
or
cmp
and
rol
mov
std
and
or
mov
push
cmps
std
add
pop
adc
lea
mov
adc
leave
test
adc
jb
inc
and
adc
in
sub
fld
test
ins
pop
stos
mov
(bad)
mov
jo
ret
movups
sbb
lds
sbb
sbb
imul
fisttp
and
leave
in
add
hlt
adc
push
jo
int3
inc
pop
or
je
push
sbb
pop
and
add
adc
xor
std
and
mov
and
jl
xchg
pop
cmps
xchg
dec
ror
scas
xchg
dec
add
adc
xchg
lods
stos
retf
push
(bad)
sub
repz
jmp
sbb
bnd
mov
inc
inc
push
adc
daa
and
sub
adc
scas
call
xbegin
outs
or
cmp
adc
jne
pop
mov
inc
ror
jle
push
daa
fs
add
inc
dec
or
jmp
mov
stos
dec
pop
iret
xchg
scas
fcmovnbe
cmp
jmp
fwait
jmp
nop
imul
inc
mov
fsubr
inc
je
call
dec
add
sub
leave
pop
add
push
mov
adc
inc
rcl
push
adc
lea
daa
cs
xchg
jmp
add
add
sub
xor
in
cwde
mov
sbb
add
sbb
nop
aam
push
xor
fwait
and
sahf
jmp
loope
mov
jmp
or
xor
push
add
xchg
or
mov
je
cmp
xor
mov
xor
adc
lock
and
xchg
add
sub
jns
dec
test
ins
jae
cmp
loopne
xchg
mov
or
in
iret
jecxz
outs
(bad)
(bad)
fsub
(bad)
or
pusha
add
mov
out
sub
pop
mov
cmp
sub
inc
imul
arpl
daa
fs
neg
mov
push
jno
test
in
int
mov
(bad)
xchg
xchg
je
rcl
and
test
or
mov
adc
inc
in
fcmovnbe
or
jmp
cmp
(bad)
push
xor
adc
mov
jecxz
call
jns
xor
xchg
adc
sbb
mov
lahf
jno
stos
push
sub
fimul
daa
arpl
gs
push
ret
cmp
imul
or
jo
sbb
xor
call
pop
sub
daa
ins
pusha
loopne
push
test
or
pop
fwait
xor
cmp
or
or
push
or
ins
mov
or
test
add
ss
inc
rcl
add
add
mov
imul
and
and
test
into
dec
gs
loopne
push
icebp
or
dec
mov
and
xchg
(bad)
xor
out
nop
ja
push
imul
std
cs
pop
cld
daa
mov
mov
out
and
call
popfw
cdq
std
mov
or
cmp
jne
sub
jl
xchg
jne
(bad)
sub
mov
call
inc
mov
inc
push
dec
adc
adc
sar
dec
adc
push
neg
push
and
pushf
or
xchg
add
neg
inc
cmp
jl
dec
cmp
jne
xchg
adc
mov
pop
adc
jno
sub
lds
and
or
(bad)
enter
bound
imul
out
div
sub
test
mov
jb
loope
inc
ins
sbb
pop
or
push
and
mov
xor
xor
(bad)
push
or
sar
cmp
dec
xor
movs
inc
call
cmp
xlat
fst
or
cmp
in
mov
jge
in
jbe
inc
retf
dec
add
shl
adc
add
or
call
or
add
push
add
nop
push
sub
out
xor
sbb
mov
loope
mov
retf
mov
fcomp
add
or
adc
std
mov
pop
adc
dec
xor
pop
cmp
or
add
adc
add
fild
mov
and
jl
std
adc
in
jle
dec
xchg
ror
mov
in
and
(bad)
add
or
les
jmp
jne
inc
in
pop
sub
xor
lds
movs
cmp
push
lods
and
(bad)
mov
test
(bad)
test
jb
lahf
fsubr
or
and
xchg
jmp
test
add
ins
sbb
push
mov
dec
lock
mov
mov
or
and
mov
xchg
push
fadd
adc
test
fsubr
das
sbb
icebp
add
xor
repz
mov
pop
xchg
(bad)
mov
cmp
and
jb
std
jo
xor
in
or
pop
jge
sub
int3
or
es
push
jl
cmp
repz
in
add
scas
or
or
rcr
cmp
out
add
pop
ins
sbb
int3
mov
jno
scas
jbe
loope
push
mov
xchg
or
test
or
xchg
out
inc
push
dec
dec
aam
enter
mov
inc
(bad)
les
outs
push
mov
rol
enter
ret
outs
pop
mov
cmp
pop
adc
inc
rol
and
aam
icebp
pop
movs
dec
push
stc
and
mov
add
clc
mov
lods
cmp
aaa
shl
sub
or
adc
lahf
js
jb
sti
out
jo
xchg
pop
lods
dec
push
mov
and
in
jne
retf
movs
mov
hlt
clc
div
add
dec
fsub
add
into
pop
shl
mov
add
mov
adc
sbb
adc
mov
inc
sahf
ret
(bad)
out
dec
movs
rol
mov
fst
mov
mov
push
aam
shl
jne
clc
test
jge
jnp
inc
push
test
mov
xchg
movs
movs
adc
sbb
mov
xor
js
add
inc
mov
xor
cmp
push
mov
cld
sbb
ud1
scas
call
rcl
mov
shr
aam
jl
sub
xchg
ja
sti
ret
jo
pop
sub
xchg
enter
test
jmp
(bad)
fsubr
inc
add
cld
lea
loopne
dec
add
movs
outs
pop
clc
sbb
lea
cmps
fsubr
sbb
push
mov
loopne
sub
add
inc
cld
adc
rol
cld
in
stos
or
js
sub
sub
or
mov
rcl
out
sbb
ret
shr
add
or
jmp
(bad)
ret
inc
jmp
xor
call
out
fst
and
push
mov
mov
sbb
imul
mov
or
or
enter
adc
pushf
xor
mov
mov
test
pop
xchg
mov
and
and
xchg
or
sub
dec
and
shl
rol
cmp
pop
inc
nop
adc
dec
pop
or
dec
sub
add
inc
inc
dec
jle
lock
sbb
sbb
les
xchg
mov
test
adc
mov
test
pop
stos
retf
adc
inc
fdivr
sbb
push
xchg
div
push
or
sti
push
add
mov
adc
xor
adc
(bad)
or
popf
adc
fsubr
and
sbb
fcomp
out
outs
xchg
fistp
or
fwait
sub
sub
push
jmp
sub
pop
adc
ins
add
ret
mov
ret
or
dec
add
dec
sbb
pop
mov
mul
and
or
or
lds
mov
inc
mov
or
loope
(bad)
mov
mov
repnz
movs
add
(bad)
jo
mov
push
fist
or
sar
cmp
push
clc
outs
add
cmps
and
fmul
rcl
lods
pop
adc
inc
dec
xchg
ficom
push
test
clc
fidivr
add
pushf
sub
sub
fadd
add
mov
sub
sbb
add
mov
add
sub
adc
cmp
push
adc
push
rcl
xchg
sbb
push
adc
es
and
adc
add
jmp
and
inc
jne
scas
les
adc
(bad)
inc
fcomp
xchg
inc
test
aam
seto
ret
lahf
mov
push
sbb
outs
mov
dec
into
or
jecxz
pop
pushf
push
mov
pop
cmp
add
stos
inc
fldcw
sbb
repnz
pop
nop
and
daa
scas
dec
push
es
add
cmp
add
sbb
lock
pop
aaa
push
call
adc
add
inc
or
mov
xchg
adc
fisttp
cmp
aaa
xchg
shr
pop
mov
pop
dec
add
mov
aas
inc
(bad)
sub
jb
adc
sub
and
push
sub
add
add
sub
aam
and
call
sar
clzero
pop
cs
xchg
and
dec
mov
(bad)
call
cs
dec
mov
lea
inc
cmps
cmp
adc
jmp
(bad)
leave
shl
dec
iret
adc
(bad)
xchg
cmp
das
mov
enter
pop
push
push
push
mov
hlt
int
adc
add
mov
mov
cwde
daa
sahf
mov
adc
jns
sub
add
add
mov
adc
dec
popf
mov
mov
into
xor
daa
mov
outs
xchg
jo
xchg
sbb
jae
jmp
sub
mov
xchg
push
sub
jmp
xor
rcl
pusha
imul
sub
imul
lods
mov
aam
adc
cmc
movzx
mov
mov
push
add
cdq
das
pop
test
sub
sbb
ss
add
or
dec
mov
mov
jae
adc
mov
fdivr
add
add
das
mov
lahf
inc
add
daa
fcom
jo
xchg
jne
pop
or
mov
adc
xchg
xchg
dec
cmp
pushf
mov
and
and
add
or
cmp
pop
xchg
mov
push
add
push
(bad)
xchg
cmc
aad
mov
hlt
add
push
iret
jl
and
scas
pop
push
jnp
test
das
and
in
outs
fcom
adc
add
push
push
iret
test
add
cwde
int3
rcr
rol
cmp
and
int3
xor
push
ror
or
push
or
mov
not
push
aas
push
pop
js
add
lods
push
imul
stc
adc
xchg
and
je
sar
cwde
mov
inc
loope
push
aaa
push
sub
xchg
push
mov
adc
pop
inc
dec
cmp
xchg
inc
scas
push
cld
add
mov
dec
pop
mov
lods
inc
bound
jge
sbb
into
lock
cmc
sub
aaa
add
idiv
in
xchg
test
pop
mov
cmp
test
les
adc
push
cli
dec
aam
fidiv
mov
mov
rcl
je
stos
je
nop
retf
dec
sub
loope
sar
mov
cs
daa
lock
shl
sbb
cmp
mov
aaa
popa
or
sub
fnstcw
mov
rol
xor
cld
mov
ret
popa
inc
mov
pushf
jo
mov
push
repnz
lock
call
hlt
or
mov
in
dec
mov
mov
mov
in
mov
sub
xchg
neg
mov
pop
loope
add
mov
fst
push
xor
hlt
pop
xchg
xchg
daa
popa
and
inc
inc
push
push
jmp
dec
or
ss
adc
ss
or
push
pop
pop
rcr
and
sub
pop
or
mov
test
push
ret
pop
add
mov
ficom
imul
inc
pop
cld
nop
das
lahf
cmps
(bad)
clc
push
mov
mov
xchg
dec
mov
mov
fimul
retf
test
test
adc
inc
cmp
outs
popa
add
xor
xor
pop
rol
test
push
ins
loop
(bad)
mov
shl
cwde
and
pop
push
xchg
pop
dec
fsubr
int3
enter
lods
xchg
pop
push
and
pushf
mov
movs
pop
add
jb
test
push
dec
pop
dec
push
inc
mov
and
cmps
es
aam
scas
cwde
outs
not
adc
shr
mov
ins
aas
mov
outs
jo
xchg
(bad)
adc
outs
xor
or
(bad)
push
(bad)
pop
add
inc
mov
add
sbb
pop
pop
inc
push
mov
test
push
push
add
bound
sub
jle
xor
and
test
repnz
push
sub
xor
fcmovnb
sar
mov
pop
and
add
and
jle
dec
lock
pop
test
(bad)
enter
fwait
shl
nop
dec
cmp
pop
add
imul
in
int3
dec
call
shr
aam
retf
int3
inc
call
mov
adc
lock
out
push
stos
pop
clc
mov
push
rol
aad
pop
push
inc
nop
mov
xchg
or
ret
adc
ror
cld
add
je
jl
jle
into
pop
lea
jecxz
push
add
sbb
jmp
sar
or
mov
aam
movs
movs
sbb
xor
rol
retf
popf
mov
cmps
xor
mov
jle
rcr
dec
add
adc
retf
mov
pop
add
test
gs
shl
jp
xchg
dec
mov
out
add
sub
push
in
mov
adc
and
ret
jo
div
cmp
add
mov
lea
stos
add
stos
sub
enter
or
inc
rol
pop
inc
cmps
fwait
or
enter
or
add
push
cwde
ret
les
or
sar
dec
std
test
popa
test
cdq
dec
je
ret
dec
test
jae
adc
imul
es
jmp
xor
aas
or
outs
jl
loope
jo
add
pusha
sbb
or
je
ret
ins
mov
push
and
push
jmp
ret
sub
je
sub
and
lods
mov
enter
(bad)
and
jmp
lea
xchg
and
cmp
ja
rcl
rcl
xchg
add
es
adc
sbb
dec
fimul
enter
push
add
pop
stc
push
sub
pop
mov
add
xor
test
int3
dec
mov
clc
inc
push
mov
fmul
idiv
loope
sbb
lahf
hlt
jo
add
dec
(bad)
dec
mov
daa
add
hlt
add
dec
cmp
jl
fcomip
jnp
(bad)
je
data16
push
iret
test
or
jo
inc
and
test
and
lock
test
jl
ret
(bad)
mov
jnp
and
xchg
inc
mov
add
dec
xchg
addr16
jecxz
pop
leave
push
shl
fnsave
iret
mov
sub
scas
push
test
clc
mov
hlt
ds
mov
ja
test
lods
pop
or
cdq
sub
jmp
inc
loope
add
out
push
sti
ret
and
sbb
mov
hlt
stos
xchg
add
sbb
jno
mov
fnstsw
jmp
inc
sub
inc
test
mov
and
jmp
cmp
inc
into
add
(bad)
cmc
pop
pop
js
cmp
add
lods
mov
or
mov
rol
or
inc
cmp
(bad)
fdiv
mov
movs
gs
pop
pop
xor
or
int3
test
xchg
imul
dec
inc
cmp
pop
clc
inc
inc
inc
shl
sbb
mov
rol
jl
mov
sbb
sub
or
nop
scas
cmps
sub
test
movs
add
pusha
xor
cmps
or
imul
jne
pop
jg
push
mov
mov
movs
mov
cmp
sti
clc
lea
cld
add
sub
ret
stc
jnp
dec
sbb
clc
(bad)
and
inc
mov
(bad)
movs
jle
sub
mov
loopne
cmp
jl
inc
and
fisttp
inc
jg
popa
loop
add
cmp
dec
fldcw
iret
ror
jmp
fild
push
mov
cmc
mov
gs
enter
loope
ja
jne
mov
jbe
xor
stos
inc
push
xchg
add
sti
dec
jmp
dec
push
xlat
sub
inc
pusha
fcomi
push
mov
mov
or
cmp
push
ds
out
add
adc
pop
inc
sub
dec
aaa
or
je
mov
inc
add
test
daa
xchg
call
mov
sbb
mov
mov
mov
xor
sti
sub
mov
inc
xor
rcl
mov
sbb
adc
push
push
xor
mov
xor
sbb
mov
push
mov
jae
fsub
call
sub
loopne
mov
inc
mov
adc
jae
enter
ret
inc
pop
xor
aas
aas
movs
leave
mov
add
adc
and
xor
push
loopne
mov
push
stos
mov
loopne
and
pinsrw
xchg
dec
xchg
shl
xchg
pop
fdiv
lock
add
xchg
mov
sub
outs
sub
les
aad
fsubr
mov
adc
test
neg
and
mov
or
retf
add
hlt
xlat
mov
rcl
or
or
pop
jg
or
lods
sub
mov
xor
dec
adc
xchg
fmul
dec
lods
add
or
jbe
and
sub
test
dec
gs
test
outs
and
xor
push
lahf
ret
mov
sahf
dec
retf
xchg
rcr
jge
or
pushf
shr
xchg
scas
jp
test
cmps
adc
or
xor
inc
mov
mov
inc
or
int3
shl
or
jp
sub
pop
aas
adc
loope
mov
fwait
dec
mov
sbb
mov
dec
sub
and
je
mov
aas
mov
in
jmp
sbb
sbb
shl
jmp
test
mov
mov
or
loopne
and
dec
mov
or
popf
dec
add
mov
mov
int3
xlat
pushf
hlt
dec
data16
add
shl
jle
cwde
cwde
in
push
nop
retf
in
int3
or
rcl
mov
in
scas
int3
xchg
adc
fsubr
xchg
or
enter
mov
lds
xchg
mov
ds
xlat
into
imul
adc
xchg
shl
add
fist
add
add
push
jmp
or
ret
dec
cmps
movs
jmp
and
ret
inc
clc
jg
push
mov
push
mov
and
mov
cmp
push
sbb
add
cwde
aam
sub
out
enter
jecxz
inc
mov
dec
adc
test
sbb
dec
jmp
mov
mov
jmp
inc
xchg
dec
jo
imul
call
mov
dec
je
mov
cmp
add
in
adc
and
push
xor
pop
adc
adc
rol
pop
lea
test
push
dec
inc
adc
mov
jg
pushf
and
push
mov
jecxz
dec
test
add
mov
cmps
cld
ret
pop
add
rcl
push
pop
cmps
dec
push
pop
test
push
pusha
popa
and
aaa
mov
xor
sub
mov
fsubr
adc
sbb
movs
and
lods
sbb
stos
ins
js
lods
pushf
loopne
aam
or
pop
pop
(bad)
call
loop
adc
adc
xchg
cmps
jg
jno
imul
movs
mov
sar
mov
in
retf
and
inc
cmovo
mov
lea
mov
mov
adc
(bad)
dec
stos
mov
add
repz
and
sub
mov
test
cld
pop
aaa
or
gs
mov
jl
add
mov
cmp
inc
js
add
shl
mov
jp
out
add
inc
lock
adc
pop
push
mov
inc
mov
inc
dec
or
cmp
add
(bad)
pop
jg
repnz
pusha
push
js
lods
push
dec
push
dec
push
mov
aam
dec
out
or
pop
push
ret
pop
fcmovnb
vmwrite
jl
or
or
add
mov
push
sbb
in
and
adc
in
cmp
add
(bad)
sti
aam
adc
or
out
pusha
or
(bad)
pop
daa
jp
mov
mov
sbb
dec
repnz
mov
unpcklps
and
or
adc
cmp
ds
push
jg
cmp
mov
xchg
add
mov
sbb
xor
aam
in
out
shr
cmps
imul
dec
(bad)
aam
add
cmp
adc
or
pop
mov
inc
sbb
or
shr
out
mov
pop
jns
inc
dec
out
jno
jnp
test
jns
out
imul
mov
push
rcl
mov
push
pushf
push
pop
cmp
ins
fdivp
ss
je
loopne
loop
mov
adc
pop
je
push
test
addr16
lds
inc
call
mov
aad
popf
xlat
sahf
out
pop
cmps
push
mov
xchg
(bad)
sar
xchg
jns
mov
pop
jns
inc
pushf
bound
repnz
call
dec
and
fsubr
dec
(bad)
sbb
sbb
jo
push
pop
add
ficom
(bad)
adc
pop
mov
xchg
(bad)
shl
pop
stc
sub
pop
in
in
and
dec
add
dec
xor
sti
cmp
ja
push
or
sub
ins
ss
xchg
sar
xchg
pop
in
call
inc
push
nop
push
dec
loopne
out
jmp
inc
aaa
or
out
and
pusha
shl
pop
and
(bad)
pop
inc
js
(bad)
push
cmp
adc
add
cmp
vpmadcswd
lods
in
dec
sbb
sbb
int
jmp
or
inc
and
sbb
out
enter
ficom
lahf
sbb
fcom
fcomp
sbb
stos
arpl
mov
daa
(bad)
iret
xlat
ficom
leave
sbb
les
test
mov
push
push
xor
and
fstp
sbb
and
mov
pop
movs
dec
sbb
outs
(bad)
in
sbb
fcmovne
inc
xchg
fistp
and
into
in
pop
ds
hlt
aad
clc
lea
test
add
pop
adc
bound
les
inc
add
sbb
ins
loopne
push
mov
pop
(bad)
adc
nop
nop
std
std
inc
mov
imul
pushf
(bad)
mov
cwde
mov
adc
add
mov
xchg
mov
stos
(bad)
sar
(bad)
pop
lahf
adc
inc
es
jle
adc
cli
inc
fisttp
add
inc
pop
adc
xor
push
ficomp
dec
or
pop
movs
xchg
sub
jmp
movs
push
jp
fild
add
pusha
stc
fnstenv
movs
pop
fisttp
out
xor
mov
xor
sbb
push
inc
xchg
je
and
enter
sub
xor
jo
xor
loop
push
pusha
arpl
shl
mov
mov
test
dec
push
ret
mov
mov
mov
sub
fild
xor
dec
add
mov
das
mov
fcom
pushf
push
loop
aaa
and
out
mov
dec
inc
push
adc
jle
inc
adc
add
add
out
jmp
cdq
fsub
imul
mov
loope
je
cmp
in
das
cdq
movs
and
popf
inc
adc
cs
test
jno
ret
nop
sbb
ret
pop
lock
imul
sbb
and
add
mov
push
add
clc
xchg
add
dec
and
push
sub
dec
sbb
adc
xchg
add
add
xchg
add
sub
nop
sbb
xchg
rcl
das
jne
test
retf
(bad)
dec
test
cmps
(bad)
sub
mov
aas
aaa
adc
pop
push
rcl
push
aas
loop
and
sub
sbb
aam
xchg
push
repz
nop
mov
dec
fnop
cmp
ror
jge
fwait
das
mov
cs
add
push
sldt
pop
fst
shl
es
enter
add
or
mov
loop
shl
inc
dec
or
cld
aad
sbb
lock
and
(bad)
(bad)
sub
loope
inc
sbb
or
add
call
dec
inc
fadd
cs
jns
push
xor
jecxz
(bad)
loop
inc
inc
add
push
adc
cmp
mov
push
pop
mov
mov
and
adc
add
leave
(bad)
jecxz
add
test
inc
outs
addr16
movs
adc
loope
xchg
sub
pusha
xor
sahf
fst
sbb
cmps
jo
or
adc
push
dec
in
jmp
leave
push
test
pop
addr16
lea
in
in
push
test
popf
sub
test
sbb
shr
sbb
mov
or
lods
les
(bad)
add
ret
repz
xor
clc
retf
dec
enter
in
out
imul
inc
sub
add
nop
add
fld
sub
ds
or
pop
dec
enter
mov
int
sub
lock
xchg
(bad)
pxor
jo
sub
leave
mov
lahf
push
and
fcomp
adc
out
mov
enter
sbb
pop
xor
jg
xchg
ins
sub
mov
xor
push
sbb
mov
jmp
loopne
in
pop
nop
daa
movs
add
lock
jnp
stos
and
push
sub
outs
data16
sbb
or
xchg
loope
sahf
and
pop
sub
adc
add
pusha
fdiv
aaa
daa
or
sbb
mov
jmp
push
mov
lods
aaa
dec
adc
pop
fwait
test
sub
xchg
sub
ret
xchg
nop
add
and
add
or
adc
adc
out
cs
loopne
push
push
sbb
rol
fsub
add
test
cwde
fcomip
fidiv
push
xor
xor
push
shr
pop
add
inc
loope
cmp
out
and
sbb
pusha
mov
inc
sbb
adc
sub
cs
repnz
rol
dec
jae
dec
dec
or
sbb
inc
add
aaa
sbb
or
xchg
or
jecxz
pop
cmps
imul
inc
neg
ret
test
shl
and
pop
and
mov
mov
shr
fdiv
shr
ss
ret
mov
lds
dec
orps
and
cmp
iret
xor
cmp
and
dec
dec
xlat
adc
shl
mov
pop
jge
push
retf
rol
add
push
adc
xlat
aas
imul
push
lods
repnz
bound
inc
push
sub
bound
and
and
jbe
nop
sbb
pop
inc
push
jmp
add
xchg
lahf
rol
inc
enter
push
nop
jl
jno
adc
mov
mov
cmp
mov
push
push
fadd
not
sub
inc
sub
nop
lods
xchg
add
cwde
js
xor
mov
leave
push
pop
out
and
dec
aaa
mov
int3
adc
adc
mov
daa
xor
mov
push
dec
and
imul
addr16
cmps
bound
jecxz
loope
ins
nop
or
jl
sbb
jno
mov
ds
setb
ja
inc
pop
jmp
dec
mov
mov
cmp
mov
adc
sub
inc
dec
mov
sub
in
(bad)
sbb
cmp
test
add
mov
inc
popf
and
push
inc
nop
cs
loop
es
in
add
xchg
sbb
pop
pop
dec
add
adc
clc
push
cmp
fsub
rcl
loopne
mov
cmp
test
xchg
movs
inc
mov
repz
push
pop
outs
sub
or
aaa
cmp
inc
out
push
mov
xchg
xchg
das
dec
out
dec
jo
adc
push
daa
sbb
add
int3
and
inc
sbb
ret
jnp
or
sbb
or
sub
add
fidiv
xor
cmp
dec
sbb
mov
or
shl
movs
cmp
xor
cmp
wrmsr
and
xor
inc
push
add
fidiv
pusha
mov
nop
xor
sbb
ins
and
sbb
ins
pusha
add
sbb
and
or
or
inc
pusha
jns
adc
add
nop
mov
fs
mov
outs
dec
sbb
cmp
or
cwde
mov
enter
xor
sub
sub
jb
and
sub
sbb
and
xor
add
push
and
cld
sbb
mov
sub
mov
sbb
nop
add
nop
sub
pop
rcl
icebp
add
or
and
cmp
sti
jmp
pop
stos
repz
repz
stc
xor
out
out
sbb
out
jmp
outs
jnp
ss
iret
repz
push
and
xor
out
ds
out
jecxz
std
mov
out
xchg
mov
mov
repz
cld
or
push
rcr
push
sahf
out
sahf
dec
pop
imul
jns
stos
mov
les
iret
repz
and
cmp
dec
push
fs
repnz
test
jmp
icebp
cmp
or
inc
push
ins
ss
adc
aaa
pusha
or
sbb
and
out
repnz
je
adc
adc
pop
ficom
aas
cmp
enter
adc
push
add
inc
dec
sahf
add
aaa
lods
xchg
out
aam
test
outs
fcomp
pusha
rol
xchg
mov
jbe
pop
xor
jns
gs
pop
ret
cmp
mov
cli
nop
add
or
in
xchg
aas
int3
sbb
dec
clc
les
push
lods
adc
or
fcmovb
pusha
xor
xchg
add
or
dec
movs
adc
or
mov
xchg
pop
dec
or
add
or
and
dec
int3
adc
push
inc
jne
jns
in
jo
push
nop
call
out
jns
adc
push
and
out
adc
or
xor
adc
or
int
jle
dec
sub
mov
push
sub
mov
imul
xor
js
add
lods
lds
call
mov
fcomp
xchg
icebp
or
mov
div
mov
or
nop
inc
and
push
xor
scas
jecxz
test
addr16
add
fs
mul
sbb
cmps
cmp
fchs
(bad)
inc
and
add
rol
popf
mov
mov
add
inc
jg
inc
and
push
les
mov
add
xor
daa
mov
add
dec
add
test
arpl
add
test
or
int
xor
daa
or
or
aam
sbb
and
pop
sbb
cmp
sbb
test
jg
hlt
push
(bad)
into
inc
inc
das
fcom
mov
mov
mov
and
jle
sub
or
cmp
nop
pop
jmp
adc
dec
adc
dec
inc
add
mov
retf
aas
js
add
cmp
sti
sub
int3
cmovns
and
adc
xor
jle
jmp
jne
mov
leave
nop
pushf
cmp
lods
xchg
cmp
dec
sar
push
out
hlt
adc
pushf
lods
in
retf
mov
lods
sbb
rol
pop
fild
or
jo
fwait
lea
jne
aam
xor
loopne
sbb
inc
inc
add
push
push
xchg
adc
add
or
ficom
push
jnp
int3
or
mov
je
push
int3
inc
adc
xchg
fldenv
fcmove
leave
mov
or
dec
push
sbb
pop
pusha
jp
mov
out
adc
add
adc
pop
sub
push
pop
nop
mov
mov
mov
mov
arpl
mov
cmp
icebp
jl
(bad)
loope
pop
iret
repz
or
xor
jo
out
pop
xor
fild
cwde
adc
or
jl
inc
jne
or
adc
pop
rol
and
test
or
xor
jnp
add
cmp
inc
or
or
sti
leave
or
fiadd
test
inc
or
add
and
and
jge
addr16
cmp
cwde
ins
data16
ja
cmp
je
mov
xor
jmp
dec
cdq
fstp
cmp
je
pop
inc
push
adc
push
add
adc
dec
(bad)
pop
adc
xchg
xchg
lea
aaa
fs
gs
imul
jl
dec
cmp
mov
dec
hlt
mov
sub
or
or
js
out
mov
add
inc
pop
hlt
sbb
and
sub
push
pop
test
push
enter
jle
add
push
addr16
mov
adc
jns
rcr
push
inc
adc
pop
je
mov
push
inc
sub
jg
(bad)
(bad)
mov
add
das
mov
xchg
(bad)
cmp
jne
ins
pop
and
repz
retf
and
xor
clts
or
sub
pop
inc
sahf
rcl
mul
add
jo
rcl
cmp
jns
push
aad
mov
ins
movs
xchg
push
repz
mov
or
call
pop
add
outs
mov
pop
or
adc
pop
jmp
jl
mov
adc
in
jne
add
add
xchg
fwait
imul
mov
(bad)
iret
adc
aas
clc
mov
add
clc
add
in
mov
dec
repz
and
xchg
(bad)
xor
stc
jmp
sbb
sub
add
sbb
clc
call
or
jmp
dec
and
adc
jg
push
popa
lock
bound
cmp
std
add
jne
pop
jbe
ret
mov
adc
sub
sbb
aaa
dec
pop
jnp
sbb
add
ror
jecxz
and
dec
or
stos
pushf
add
adc
add
adc
dec
sub
or
cmovbe
mov
adc
push
dec
movs
cwde
xchg
cmp
pop
retf
jmp
push
xor
push
jg
in
adc
add
je
and
mov
or
xchg
lahf
adc
mov
sub
and
in
cs
out
cmp
add
pop
and
cmp
cmp
and
test
daa
push
adc
xchg
inc
pop
pop
pusha
dec
imul
inc
xor
rol
sbb
jl
inc
inc
sbb
dec
and
inc
dec
inc
cmps
dec
or
dec
xchg
in
adc
sub
int
popa
lds
ins
fistp
cmovne
dec
add
cmp
or
add
xor
jns
dec
xor
or
clc
jne
push
xchg
test
mov
jns
xchg
fstp
inc
push
mov
jge
add
nop
and
add
test
inc
mov
(bad)
movs
test
jge
lods
jb
add
dec
cdq
ins
aas
out
(bad)
or
push
loope
adc
or
cmp
xchg
cli
xchg
push
xchg
jmp
jo
pop
inc
aas
or
adc
push
sbb
and
ss
pop
mov
xchg
xor
lods
dec
arpl
mov
es
sbb
sub
imul
mov
inc
sub
dec
and
add
jo
shl
push
(bad)
lock
push
repnz
or
jmp
add
out
inc
repnz
dec
dec
push
dec
push
jno
iret
ret
pop
or
xor
xor
add
cmps
pushf
mov
inc
mov
and
cmc
mov
test
das
or
outs
push
dec
lods
and
and
mov
and
je
or
imul
xor
clc
xchg
fstp
fdivr
pop
xor
test
rcl
lods
adc
gs
dec
jnp
and
rcl
fist
in
jmp
push
jae
mov
push
add
hlt
cmp
ja
shr
dec
add
push
cmc
add
dec
mov
and
adc
cmp
mov
lea
mov
ror
std
hlt
push
cmp
add
fsubr
mov
sahf
ins
mov
stos
ret
xor
ins
loope
iret
out
jo
jecxz
fadd
scas
mov
sub
jo
or
outs
stos
add
or
cli
out
(bad)
push
(bad)
into
mov
or
cwde
add
mov
xor
adc
jle
jmp
sub
pop
stos
pop
and
(bad)
jne
jne
dec
stos
add
dec
or
pop
pop
cmc
add
dec
push
and
add
jmp
push
mov
mov
mov
push
mov
sbb
inc
push
call
cmp
test
popa
add
sbb
xor
add
add
xor
xchg
popa
jmp
clc
mov
js
push
add
dec
inc
pop
cli
loop
or
test
adc
jo
dec
sbb
sub
cmp
sbb
sahf
cs
sar
jbe
cli
cmp
cmp
and
cmps
jnp
sbb
dec
call
cld
adc
lahf
or
inc
mov
mov
and
loop
mov
and
ror
mov
daa
mov
adc
dec
and
cmp
dec
push
push
pop
fcom
or
pop
fadd
jne
inc
xor
(bad)
call
repz
dec
xor
mov
push
pop
(bad)
cmps
cs
retf
je
out
jno
aas
(bad)
mov
jg
js
xchg
data16
add
sbb
pop
jl
rol
sahf
lock
(bad)
mov
cmc
inc
call
in
daa
mov
pop
pop
adc
inc
add
in
movs
aam
addr16
adc
jle
and
scas
dec
(bad)
mov
mov
nop
sbb
aad
or
add
inc
lock
mov
div
outs
xor
and
add
movs
cdq
scas
push
add
ret
lds
in
inc
jns
out
mov
adc
test
dec
jmp
test
ret
ins
scas
je
add
jp
mov
pop
test
jmp
or
add
popa
adc
xchg
clc
push
xor
sub
pop
pop
jo
pop
scas
je
mov
xchg
jae
sar
push
xchg
or
fsubr
mov
push
push
or
mov
out
cld
rol
xor
pop
mov
add
adc
pop
and
add
repnz
or
or
fst
fst
inc
push
cmp
sub
inc
inc
sub
xor
inc
call
cli
inc
scas
ins
jmp
pop
ins
jecxz
adc
push
fdiv
add
mov
cmps
icebp
or
data16
jnp
push
(bad)
rol
adc
inc
or
popw
and
jl
pop
xchg
push
dec
(bad)
xchg
leave
dec
jmp
dec
daa
lahf
call
dec
sub
cld
clc
xor
xchg
xchg
clc
retf
sbb
imul
mov
cmps
inc
cmps
sub
xchg
stos
cmp
xchg
push
(bad)
movs
xor
dec
imul
jnp
inc
stos
and
xor
fld
inc
hlt
jne
dec
shl
jb
inc
cmps
lock
add
ficom
lds
sbb
or
mov
lea
jecxz
bound
push
jg
sar
and
test
adc
icebp
sub
adc
sub
pop
push
and
out
add
or
push
push
and
and
adc
inc
mov
mov
sahf
adc
adc
jmp
push
ds
out
inc
mov
sub
and
fimul
adc
cwde
inc
and
adc
(bad)
enter
jp
mov
pop
push
adc
push
imul
inc
mov
std
mov
adc
fcomp
das
or
gs
mov
push
ret
sub
test
pop
ror
cmp
add
stos
mov
scas
fnstenv
cmps
cmp
sbb
xchg
or
jns
jecxz
in
or
jge
jmp
pop
or
outs
pop
inc
adc
or
mov
or
jmp
out
(bad)
pop
and
mov
add
dec
imul
mov
inc
jmp
test
data16
mov
inc
sbb
mov
mov
retf
mov
(bad)
out
lock
mov
add
in
add
cmps
add
jecxz
sbb
loopne
or
sub
cli
and
in
mov
or
or
movs
loopne
dec
adc
pusha
fsub
cmp
jne
mov
or
lock
aad
xor
cs
or
gs
jne
xor
mov
jmp
jb
rol
outs
cmp
ja
cmp
or
sbb
sub
mov
sbb
mov
mov
xor
icebp
loope
adc
dec
and
push
sbb
mov
int
adc
or
pop
inc
pushf
call
xchg
jne
push
inc
push
and
and
and
and
rcr
adc
xchg
adc
push
scas
xor
clc
ss
sub
mov
cmp
fs
sbb
jae
(bad)
xchg
mov
fld
fcomp
cmp
nop
cvttps2pi
imul
(bad)
(bad)
xor
jne
test
cmc
jne
xchg
inc
sub
test
adc
mov
mov
pop
or
sbb
mov
ins
jne
add
inc
adc
add
push
push
jne
mov
mov
inc
add
shr
or
xchg
adc
inc
pop
mov
mov
(bad)
adc
test
test
sub
cs
add
mov
(bad)
or
popa
and
xor
push
bound
mov
mov
mov
or
dec
ins
mov
ins
sub
pop
dec
mov
mov
push
nop
ins
or
pop
and
mov
mov
leave
mov
nop
inc
adc
mov
or
lea
arpl
and
fadd
and
lock
push
mov
or
je
push
xlat
inc
pusha
xchg
ror
xchg
or
dec
cmp
mov
ret
dec
mov
mov
enter
fsubr
or
push
retf
lods
inc
add
fsub
pop
add
cmp
pushf
sbb
jo
sar
mov
leave
shr
neg
or
push
push
bound
shl
out
sbb
mov
add
or
pop
popf
push
xor
pop
add
adc
cld
(bad)
cmp
das
jl
cmp
and
popa
lods
movs
aas
fwait
into
je
sbb
sahf
sahf
push
sub
sbb
inc
adc
lods
mov
inc
in
push
aas
mov
adc
sbb
sub
das
mov
cmp
xchg
add
sbb
xchg
in
cmps
xchg
or
daa
xchg
xor
out
hlt
cmps
frstor
pop
dec
inc
outs
adc
and
pusha
movs
and
jae
push
pushf
clc
sub
mov
(bad)
and
mov
mov
div
and
pop
or
fmul
pop
xchg
xlat
or
or
inc
inc
add
and
pop
mov
push
fwait
inc
add
fwait
popa
(bad)
aas
pop
add
jmp
fld
fmul
fcmovnu
stc
(bad)
inc
cmc
add
inc
add
add
xor
test
clc
add
jg
push
inc
and
outs
add
adc
adc
mov
mov
imul
test
pop
lea
cdq
movs
sub
mov
add
loop
inc
(bad)
pop
pop
dec
xor
pop
mov
addr16
or
jno
fadd
sub
push
sub
xor
mov
xor
xchg
inc
cmp
push
adc
shl
or
dec
fstp
xor
inc
push
or
popa
or
pop
push
ds
rcpps
cdq
lahf
fdiv
cmp
fwait
aam
addr16
outs
inc
xchg
pop
xchg
cmp
outs
cmps
mov
sbb
or
inc
pop
sub
mov
mov
xchg
sub
ja
or
jmp
aas
push
(bad)
mov
enter
imul
add
pop
dec
add
mov
or
icebp
dec
xchg
mov
pop
add
test
push
dec
test
adc
or
mov
sub
in
cmp
xor
std
jg
push
pop
rcr
out
pop
adc
push
adc
pop
inc
add
mov
pusha
aam
int3
sub
add
and
int
pop
mov
cmp
inc
xor
(bad)
jnp
or
add
xchg
mov
bound
push
push
(bad)
movs
call
ja
ins
pop
dec
fadd
cmp
jbe
xor
cmp
ins
mov
adc
iret
pop
xchg
hlt
inc
sub
xor
mov
mov
je
add
add
mov
loop
pop
mov
add
js
ins
fmul
inc
dec
push
and
pop
sbb
lods
inc
and
pop
rcl
xchg
jp
add
dec
pop
cmp
dec
mul
mov
sub
sbb
inc
cmp
add
add
pop
inc
adc
add
imul
fisub
adc
or
cwde
je
dec
dec
ss
xchg
les
or
out
or
pop
bound
push
jae
pushf
bound
and
xchg
mov
adc
dec
aam
inc
mov
mov
inc
mov
mov
loope
cmc
sbb
pop
xor
lds
mov
xchg
dec
pop
and
or
cmp
leave
mov
jne
ror
pop
inc
dec
stc
inc
sbb
mov
fs
je
pop
cmp
and
add
daa
push
movs
pop
and
add
addr16
adc
or
add
or
sbb
aad
add
xchg
add
pushf
test
dec
or
mov
push
adc
xchg
push
jmp
mov
wbinvd
dec
ins
outs
retf
outs
lahf
mov
sbb
pop
add
outs
mov
jae
cld
xor
imul
daa
nop
jne
jb
mov
push
mov
sbb
and
arpl
mov
mov
and
push
lock
inc
je
arpl
outs
or
out
(bad)
hlt
and
cmp
sub
fcom
in
sbb
pop
jb
fmul
cmp
pushf
mov
mov
push
xchg
push
pop
imul
mov
aaa
dec
and
inc
in
push
add
inc
sbb
push
out
push
add
adc
mov
cmp
ret
adc
and
gs
push
jge
jg
out
aam
repnz
or
pushf
push
pop
call
je
add
push
and
and
adc
dec
arpl
test
sub
sub
shr
fild
mov
sub
dec
adc
pusha
sbb
pop
and
xchg
xchg
pop
cwde
pop
shl
cld
sub
inc
jmp
or
inc
xlat
push
mov
enter
sub
out
mov
inc
push
ss
mov
dec
dec
push
out
stos
popa
or
add
xchg
aaa
aaa
inc
xchg
add
sub
pusha
imul
dec
cmp
in
adc
mov
(bad)
daa
dec
jmp
adc
mov
nop
push
fimul
inc
push
or
aas
dec
dec
sbb
push
outs
jo
mov
sub
and
jne
sub
std
lods
and
movs
inc
aam
arpl
sbb
pusha
adc
test
inc
mov
std
dec
je
jl
inc
push
xchg
lea
cdq
loope
call
int3
(bad)
add
call
das
imul
adc
jno
push
add
fadd
cdq
je
pop
add
sbb
jne
xor
rcl
or
sar
retf
jmp
xor
sbb
pop
push
inc
sar
push
popa
ja
and
movs
ror
jne
js
outs
inc
or
push
jb
or
and
pop
adc
inc
inc
popa
and
add
mov
cmp
xchg
cmp
cmp
lods
jo
push
out
push
push
sub
sub
dec
cmp
or
sub
or
add
mov
push
std
add
loopne
add
je
out
and
cmp
and
xor
xor
inc
jg
xchg
lock
daa
push
sub
in
hlt
lods
scas
lods
neg
add
cmp
xchg
mov
add
mov
pusha
in
loopne
pop
add
data16
ror
lock
shl
sub
add
jne
imul
stos
and
xchg
(bad)
mov
sbb
(bad)
fadd
push
cmp
add
loop
add
jne
std
mov
ret
cs
cmp
int
(bad)
lods
cmp
inc
xchg
jl
bound
xor
inc
xor
in
(bad)
pop
mov
das
mov
push
movs
add
bound
pop
sbb
sub
adc
call
push
dec
xlat
adc
pop
add
ja
mov
addr16
sub
nop
popa
add
jb
fistp
mov
jbe
or
(bad)
mov
popa
push
or
scas
int
adc
leave
loop
xchg
cld
adc
xor
or
push
test
jae
movs
xor
push
adc
aam
mov
adc
cmp
pusha
arpl
dec
cmps
lods
and
and
pop
inc
ret
(bad)
push
or
or
jns
cmps
into
in
sbb
sbb
xlat
pop
dec
stos
push
mov
push
dec
inc
jnp
mov
ror
enter
into
adc
push
imul
xchg
mov
les
dec
popf
or
dec
pop
ror
fcomip
cmps
sbb
dec
popa
jbe
adc
mov
or
or
imul
cmps
jne
inc
pop
adc
int3
jae
ud2
inc
xor
mov
xchg
fidiv
imul
fadd
push
inc
jns
ret
xor
ins
xlat
lock
xor
loopne
sub
aam
mov
mov
repz
stos
loop
mov
bnd
(bad)
jmp
mov
add
push
and
mov
or
stos
test
dec
daa
xchg
xor
(bad)
adc
pop
call
aaa
lods
popa
pop
aaa
sub
inc
add
push
ds
call
mov
(bad)
mov
(bad)
aaa
xor
push
sbb
or
xchg
rol
and
pop
push
mov
add
neg
xchg
sbb
mov
popa
mov
je
mov
or
mov
rcl
or
or
stos
sbb
adc
inc
cmps
pop
ins
inc
sbb
popf
rol
jmp
and
pop
(bad)
pop
add
(bad)
int
xor
mov
sbb
xchg
push
and
xchg
leave
pop
dec
in
sbb
push
shl
push
cmp
dec
pop
pushf
and
loopne
jecxz
add
arpl
cmp
push
cmc
loope
pop
lods
pop
pop
pop
movs
xor
xchg
pop
push
pop
jle
int3
or
fld
add
add
pop
or
pop
sub
mov
lock
add
ficom
mov
push
das
leave
push
and
adc
xchg
inc
iret
pop
xor
pop
inc
in
sub
xchg
cmp
movs
add
xchg
movs
sbb
mov
pop
xlat
inc
test
jb
or
inc
jno
xor
retf
cmp
pop
out
dec
ss
and
cmp
pcmpgtd
xor
add
je
inc
add
and
cmp
mov
and
stos
sub
sbb
and
or
push
and
rcl
nop
pop
inc
outs
outs
popa
lock
ret
mov
popa
arpl
add
arpl
adc
bound
pop
jnp
jp
cmp
sbb
push
inc
push
jmp
cs
in
pop
xor
dec
in
add
mov
xchg
add
sub
or
xchg
mov
aam
add
dec
add
cmp
mov
ret
paddw
add
jb
inc
and
scas
jns
enter
xor
add
or
cmps
mov
push
sbb
cmp
mov
mov
dec
scas
inc
sbb
(bad)
sub
or
sbb
mov
xchg
push
xor
inc
xchg
fwait
outs
sub
gs
inc
enter
xchg
add
and
repz
les
and
aad
leave
aad
jno
iret
inc
xchg
jb
stos
les
in
add
cli
xor
data16
or
js
je
xor
inc
mov
add
aam
xchg
mov
fst
cs
in
add
adc
pop
sub
leave
nop
xor
pop
dec
sub
inc
fs
sub
call
fidiv
lds
mov
jns
sbb
sub
shl
lock
out
jns
sub
inc
mov
les
inc
lods
pop
xor
pop
outs
jns
mov
adc
push
or
pop
add
pop
or
cmps
dec
out
add
mov
mov
iret
fwait
sub
cmp
jl
add
dec
shr
push
leave
jl
dec
and
xor
or
cmp
adc
xor
dec
sub
fiadd
repz
adc
pop
xor
xor
add
jmp
ss
inc
sub
aaa
fcmovnb
in
sahf
test
dec
dec
cmp
mov
push
jns
push
retf
rol
pop
cmp
scas
or
in
sbb
push
cs
push
pop
mov
push
dec
retf
cmp
mov
enter
adc
je
dec
jnp
xor
ds
sbb
fs
pop
push
add
add
pop
in
ds
mov
inc
ds
and
push
nop
mov
inc
inc
or
xor
cwde
cwde
inc
jns
adc
mov
or
dec
in
mov
cld
pop
test
test
cmps
loope
or
mov
inc
mov
in
push
fisub
inc
cmp
ror
rol
inc
add
stc
inc
sahf
ja
ins
enter
pop
dec
out
stos
(bad)
sbb
shl
jb
dec
fstp
lock
sub
fmul
test
(bad)
aaa
cmps
pushf
in
mov
ror
loopne
outs
adc
sub
pop
xchg
pop
ins
add
jnp
(bad)
xor
sbb
pushf
es
jnp
cmp
rol
jmp
movs
lds
pop
xor
loop
xchg
call
fcomp
and
aam
cvtdq2ps
or
pop
or
(bad)
add
pop
das
cld
mov
dec
ins
push
mov
call
movs
jmp
and
sbb
in
push
cmp
sbb
mov
js
dec
rcl
and
pop
lea
and
or
jnp
adc
xchg
push
test
cmps
xor
jne
lds
jmp
mov
cmp
inc
dec
dec
shl
popf
push
pushf
and
shl
ret
push
and
inc
and
dec
mov
jne
mov
jbe
enter
or
lock
xor
and
je
ret
or
rol
inc
pushf
xchg
push
popf
xor
repz
pop
addr16
push
cli
fucomip
mov
leave
jmp
sub
loope
jbe
test
mov
fdivr
jns
add
dec
sar
aaa
fsubr
js
aaa
outs
add
outs
cmc
js
cmp
lahf
daa
and
inc
lods
pop
inc
and
push
loop
les
addr16
les
and
nop
fiadd
cmp
jbe
adc
add
or
inc
and
stc
xor
or
cwde
mov
das
sbb
ror
adc
movs
mov
ss
dec
int3
mov
scas
adc
push
pop
adc
push
arpl
sbb
adc
fs
inc
adc
ja
add
or
cmp
lock
push
ins
retf
dec
add
sub
sti
aas
add
push
dec
jb
pop
hlt
sti
hlt
sti
lock
sbb
or
or
or
ins
js
enter
nop
pushf
or
test
push
mov
enter
lds
int3
sbb
dec
repz
sub
cmp
sahf
out
ds
dec
push
pop
ins
jns
sahf
out
xchg
jns
out
aam
out
sti
jl
pop
add
xor
or
cmp
call
and
mov
mov
ss
rcl
sahf
and
mov
test
push
sbb
int3
fisub
pop
inc
sub
xor
inc
enter
dec
sbb
mov
cmp
test
scas
xchg
add
cmp
nop
mov
bound
cmp
dec
push
push
xor
test
lock
fwait
dec
test
add
push
push
or
mov
adc
ins
inc
xchg
loopne
int3
(bad)
aaa
imul
pop
ins
add
cmps
mov
aam
or
and
out
add
push
cmps
cmp
inc
adc
addr16
mov
push
xchg
stos
dec
enter
fisttp
jmp
in
push
push
mul
cli
mov
xor
push
jne
adc
cmp
clc
retf
push
inc
or
or
mov
mov
mov
mov
mov
sbb
adc
pop
movs
sub
cmp
les
and
add
pusha
fadd
mov
shl
arpl
add
pop
les
pushf
xlat
les
in
out
repnz
leave
mov
inc
rcl
fcmovnbe
cdq
ret
mov
xchg
sbb
xor
mov
and
retf
mov
dec
mov
das
cmp
mov
dec
push
xchg
mov
lahf
cmp
mov
js
and
sbb
and
addr16
inc
outs
dec
and
adc
mov
lods
retf
lahf
leave
add
pop
or
and
or
xor
das
sub
sub
inc
fwait
test
scas
adc
pop
adc
scas
or
add
push
mov
out
pop
push
stc
repnz
je
iret
xchg
jecxz
adc
add
mov
nop
dec
out
call
dec
shr
push
sbb
push
cmp
or
leave
cmp
xchg
test
inc
and
dec
dec
sub
add
bound
fs
xor
scas
aam
and
fs
push
ss
daa
push
test
das
outs
inc
inc
sub
aaa
ficomp
cmp
fild
add
das
or
pop
mov
addr16
or
xlat
cmps
fcomp
lods
sbb
inc
adc
mov
xor
inc
cmp
sub
jle
xor
adc
push
and
sub
loop
jecxz
dec
xchg
pop
inc
add
adc
mov
je
push
jnp
pop
or
jp
pop
movs
movs
rcl
inc
addr16
mov
sub
push
xchg
mov
jmp
dec
idiv
dec
pop
inc
aas
pop
xchg
fisubr
cmp
push
ja
rol
cmp
sub
add
push
cs
aaa
add
or
out
jg
push
dec
push
nop
ja
inc
outs
cwde
inc
xchg
out
outs
adc
push
jmp
dec
arpl
push
and
xor
out
xor
add
mov
rol
shld
bound
dec
sbb
sub
and
sub
stos
sub
in
inc
or
(bad)
out
mov
jo
ss
(bad)
pop
push
push
push
add
push
(bad)
aaa
or
push
pop
add
scas
push
mov
pop
mov
xchg
adc
dec
test
loope
lahf
xlat
imul
stos
popa
lahf
jnp
mov
jmp
outs
rcl
ror
ins
sbb
ins
adc
jb
inc
or
push
in
inc
cmp
fs
push
(bad)
adc
jnp
pop
add
jnp
push
repnz
or
mov
sub
test
mov
or
jne
push
iret
mov
and
into
mov
add
or
pop
push
je
inc
addr16
xor
mov
das
sti
push
pop
mov
pop
popa
inc
stos
push
movs
out
fbld
xlat
add
loopne
mov
pop
and
fisttp
ja
jae
gs
mov
rcl
mov
sub
xchg
xor
or
aam
lods
ja
into
adc
lods
jmp
or
sbb
(bad)
mov
iret
inc
enter
inc
test
mov
jo
cmp
push
jne
pop
rcr
add
sub
xchg
pop
sbb
sub
das
cmp
add
mov
daa
add
pop
or
inc
fimul
imul
aas
test
xchg
and
outs
xchg
ins
mov
or
xchg
mov
adc
mov
addr16
gs
data16
push
mov
in
fcomp
gs
lahf
ins
jl
adc
mov
iret
pop
outs
pusha
add
or
push
pop
iret
repz
xchg
pop
cdq
mov
iret
repz
leave
rcr
loope
ds
repz
or
jns
out
sbb
sub
inc
cmp
pop
mov
mov
dec
inc
sbb
dec
pop
push
rcr
add
or
es
sub
je
push
or
jp
inc
mov
je
inc
adc
pusha
cmps
cs
mov
cmp
test
(bad)
push
push
push
push
push
call
(bad)
or
and
rol
or
lods
xorps
add
out
out
mov
push
add
loopne
jae
xchg
imul
inc
and
mov
jge
into
ja
data16
sbb
cmp
add
add
cmp
fist
mov
mov
fcmovnu
or
adc
add
sahf
mov
fs
pushf
enter
dec
clc
cld
adc
addr16
mov
loope
xchg
pushf
pop
inc
setge
popa
daa
add
or
test
je
adc
cwde
pushf
nop
test
call
jb
jb
pop
sbb
cmp
(bad)
xchg
test
(bad)
jbe
bswap
fwait
pop
mov
fs
xor
pop
mov
cmp
aas
adc
addr16
ror
mov
enter
fbstp
xchg
push
xor
add
jnp
das
jbe
jp
mov
daa
jno
cmps
test
add
mov
iret
repz
pop
or
sbb
sub
repz
cmp
push
repz
repz
arpl
jnp
repz
or
iret
repz
mov
cmp
repz
jmp
sti
cmp
repz
inc
adc
and
imul
inc
gs
ins
out
sahf
out
jge
xchg
sahf
sahf
out
sahf
cmps
scas
mov
(bad)
into
jns
out
(bad)
fsubp
out
idiv
call
(bad)
pop
aaa
nop
sub
xchg
mov
xchg
mov
fadd
ins
(bad)
dec
sti
pop
pop
add
aaa
clc
pop
pop
fs
loopne
test
pusha
inc
push
push
pop
adc
adc
inc
xchg
fisubr
into
mov
call
or
idiv
adc
enter
sbb
xchg
adc
mov
push
ins
and
jo
cmp
(bad)
xor
adc
clc
cmp
mov
adc
push
in
dec
(bad)
or
xchg
add
or
pop
or
jnp
aam
dec
ret
mov
(bad)
jae
add
mov
mov
and
(bad)
cmp
jo
lahf
in
sbb
test
cwde
adc
movs
mov
cmp
enter
clc
sbb
enter
cmp
jb
add
leave
js
add
dec
xor
mov
mov
sar
jb
arpl
mov
nop
inc
mov
nop
and
adc
inc
push
cmp
and
mov
mov
push
xor
mov
(bad)
test
cmp
fsub
pushf
dec
add
mov
push
jl
push
push
mov
loope
leave
in
pop
pop
or
xor
lods
lods
cwde
repz
and
and
xor
out
or
repnz
jmp
xlat
stc
bound
arpl
iret
repz
or
sbb
iret
repz
push
popa
imul
iret
repz
xchg
popf
cmps
iret
repz
mov
retf
call
repnz
push
bound
sbb
out
and
cmp
out
sahf
out
pusha
push
jle
out
sahf
mov
js
out
rcr
in
add
push
fidivr
xchg
shl
ret
jg
dec
nop
imul
dec
out
inc
dec
ret
cmp
int3
add
xor
outs
mov
das
bnd
push
pop
push
in
nop
gs
sbb
jnp
jle
aam
jb
add
scas
dec
sub
aaa
nop
pop
mov
mov
and
fisub
sub
dec
push
or
cdq
xlat
or
ss
xor
ja
out
iret
add
push
dec
outs
mov
ret
pop
outs
pusha
(bad)
jo
retf
pop
mov
cmp
sbb
ret
cli
rol
(bad)
jl
data16
sub
movs
mov
mov
sbb
test
add
adc
cmp
pusha
test
xor
push
mov
lea
inc
scas
and
add
daa
mov
faddp
lds
or
xor
sbb
cmp
inc
add
mov
lea
js
enter
cmp
mov
jne
xchg
mov
int3
xchg
sbb
adc
dec
sahf
push
pop
jmp
or
je
jnp
ret
sar
les
mul
mov
repnz
test
xor
xor
mov
or
inc
cwde
mov
pop
repnz
cwde
or
or
adc
sub
push
jmp
out
fisttp
dec
test
scas
or
inc
xchg
inc
push
adc
sahf
(bad)
sub
lahf
push
cld
xor
shr
rol
sti
nop
mov
xchg
and
add
xor
jl
cdq
fbld
and
mov
mov
pop
mov
sub
or
xor
sbb
fmulp
or
xchg
jmp
movs
push
jbe
das
ret
outs
xchg
push
mov
shl
mov
dec
inc
inc
mov
mov
sub
sti
cmp
pop
inc
jbe
inc
mov
xchg
xor
mov
movs
inc
aas
and
leave
inc
mov
ins
cmp
inc
mov
cdq
fimul
test
popa
add
or
jl
clc
xchg
lahf
adc
or
inc
enter
and
dec
xchg
dec
mov
sub
je
sub
inc
(bad)
je
cmc
pop
pop
sub
dec
imul
adc
movs
imul
and
sbb
adc
jle
sbb
ret
retf
fbstp
inc
lea
inc
inc
cmp
nop
idiv
sar
imul
xlat
push
xlat
add
mov
or
mov
add
jge
and
jns
push
cld
sbb
cmps
jge
mov
inc
dec
je
add
and
aas
call
and
cmp
jnp
inc
sbb
adc
cwde
loop
xor
cmp
and
sub
and
ret
xchg
dec
xor
add
push
sbb
sbb
mov
dec
dec
cmp
(bad)
(bad)
(bad)
mov
xor
stc
out
imul
or
pop
call
add
add
iret
lds
test
(bad)
inc
leave
add
or
fmul
cmp
or
aas
sbb
repz
jb
dec
outs
cmps
adc
push
leave
or
cmp
dec
sub
mov
adc
xchg
add
push
pop
es
cmp
mov
adc
shl
inc
scas
and
das
cdq
mov
mov
adc
leave
and
cmp
test
or
adc
adc
cmp
push
or
imul
jns
jnp
and
and
adc
cmps
or
and
xor
pop
add
add
js
les
pop
mov
sub
mov
jne
lods
xchg
mov
in
pusha
jb
mov
ret
imul
mov
inc
ret
gs
clc
pop
sub
jmp
inc
fisub
xchg
sbb
mov
pop
pop
inc
and
fwait
int
push
cmp
out
jmp
jl
lods
loopne
out
or
inc
push
push
or
xor
push
ja
add
icebp
sbb
jo
mov
fucomi
inc
xchg
nop
push
jg
dec
fcom
add
and
shl
imul
punpckhwd
aas
adc
and
adc
push
sbb
rol
mov
pop
pusha
add
push
ins
adc
lock
xor
add
mov
punpckhbw
xlat
push
xor
mov
jo
loopne
pop
and
out
push
or
inc
ja
or
dec
or
idiv
xor
inc
or
mov
fisubr
inc
or
dec
aas
push
mov
add
ss
add
jb
xor
pop
ret
aaa
pop
inc
add
jecxz
adc
push
add
inc
push
cs
ror
mov
mov
(bad)
test
adc
jo
(bad)
in
pop
jno
xor
sahf
and
and
pop
or
xor
add
and
or
and
and
cwde
out
jl
inc
lea
mov
push
xchg
aam
mov
xchg
(bad)
mov
test
dec
lods
enter
ds
sbb
nop
inc
inc
mov
shl
add
jmp
sub
fld
rol
pop
in
pop
jl
jmp
scas
repnz
jae
or
inc
xchg
xchg
mov
jae
xor
pop
pop
push
or
out
xor
pop
push
in
daa
mov
sub
add
push
xchg
fwait
mov
dec
inc
dec
mov
out
push
mov
add
or
cwde
push
add
aaa
aaa
add
cmp
inc
add
test
inc
sub
cmps
or
inc
cmp
test
pop
xor
inc
aas
push
cmp
or
add
or
retf
nop
or
sbb
sub
je
sbb
retf
dec
cwde
or
fild
imul
jne
push
sbb
rcl
jne
or
fmul
xor
pop
sub
dec
ret
addr16
lahf
mov
call
inc
push
mov
dec
xor
ret
or
mov
pushf
imul
int3
pop
sbb
xor
iret
and
mov
ret
push
or
lock
adc
jecxz
pop
pushf
and
jge
jmp
lea
cmp
pop
push
std
xor
push
(bad)
leave
inc
mov
cmp
scas
aad
mov
jge
add
scas
outs
or
xchg
push
adc
dec
in
jmp
sbb
sub
and
mov
and
mov
mov
sbb
(bad)
jecxz
call
or
cmp
xor
jns
adc
or
add
shl
sbb
fisub
cmp
cli
push
les
or
inc
or
mov
xchg
pop
dec
div
js
inc
push
and
js
js
jae
add
lock
icebp
fcomp
mov
nop
pop
sbb
repnz
ror
xchg
mov
and
js
xchg
mov
(bad)
mov
mov
clc
pop
pusha
sub
and
sbb
fidivr
pop
mov
test
pop
jo
dec
pop
cmp
test
fcmovbe
xor
dec
rsqrtps
jo
sbb
xlat
fadd
mov
dec
pop
jg
call
push
ss
jns
adc
(bad)
pop
mov
mov
lahf
adc
xchg
mov
xor
cmp
je
ja
jne
or
pop
mov
in
mov
pop
aad
xor
fdivr
dec
lock
loopne
cmp
dec
sbb
dec
pop
jo
or
fild
in
xchg
xor
shr
jnp
sbb
fisub
cmp
add
rol
shl
sub
xchg
out
pusha
jnp
dec
in
dec
ficomp
jmp
inc
loopne
imul
(bad)
loopne
es
call
ja
xor
adc
adc
mov
xor
int
add
mov
dec
add
inc
ret
sbb
arpl
mov
inc
and
(bad)
pop
inc
mov
mov
into
ss
pop
in
jl
gs
sbb
mov
call
inc
cmp
add
lds
push
mov
addr16
jo
xchg
mov
addr16
sbb
loope
push
fldenv
and
inc
mov
out
push
or
and
dec
jb
sbb
dec
mov
xor
dec
fwait
or
adc
add
mov
cmp
ss
and
test
inc
js
aas
xor
add
ins
pop
cdq
adc
icebp
movs
adc
and
and
sub
int3
push
xor
jg
dec
inc
fdivr
push
retf
or
pusha
fcom
dec
cmps
sbb
mov
clc
xor
je
mov
neg
jmp
int
xchg
inc
sbb
push
mov
popa
inc
sbb
cld
xchg
test
cmps
add
loop
cs
xchg
rcl
ins
mov
clc
ret
push
fild
mov
(bad)
jmp
ja
jmp
cmp
inc
jg
mov
in
push
in
cld
test
mov
stc
gs
push
jg
call
jg
retf
jge
in
in
jg
add
push
push
mov
in
adc
add
cmp
dec
adc
and
push
inc
ret
not
arpl
sub
mov
je
or
dec
data16
mov
mov
add
sbb
fdivr
jo
pop
movs
mov
xor
or
and
sub
sbb
aam
push
repnz
sub
cld
mov
mov
xchg
aaa
retf
out
in
push
movs
xchg
in
sub
add
or
cwde
pop
mov
push
fistp
sub
or
scas
call
mov
pop
and
lock
cs
mov
mov
xor
ins
in
xor
xchg
or
call
inc
sub
or
jbe
sar
dec
sub
or
cmp
and
mov
adc
icebp
lea
cwde
dec
push
ins
mov
hlt
sti
ins
out
pop
icebp
xchg
add
ror
mov
clc
(bad)
add
and
add
add
xchg
or
lahf
jo
in
pop
neg
fisub
sbb
adc
es
mov
dec
push
jmp
lock
dec
sbb
jns
inc
sbb
adc
je
dec
cld
mov
push
jmp
and
add
pop
rcl
push
stos
daa
or
iret
mov
sub
push
sbb
jmp
nop
dec
mov
mov
or
jae
inc
int3
fcom
fmul
loopne
sub
test
mov
popf
inc
loop
mov
pop
ret
out
add
dec
adc
stos
dec
lods
je
xor
cmp
or
lock
arpl
adc
sbb
aad
and
mov
daa
dec
loope
aaa
dec
mov
adc
js
in
hlt
pop
imul
xchg
outs
add
(bad)
sbb
je
sbb
in
or
(bad)
mov
movs
test
mov
mov
push
and
xchg
stc
ffree
push
sbb
shl
and
or
xor
mov
sbb
sub
sbb
dec
xchg
stc
loopne
movs
or
and
add
cmp
mov
and
mov
ja
and
push
xchg
mov
inc
jbe
and
test
inc
sbb
aad
movs
les
out
pop
xlat
add
scas
test
lds
mov
jne
mov
sahf
jmp
inc
mov
pop
pop
sbb
sbb
repz
mov
add
pop
lods
sbb
add
and
daa
hlt
outs
movs
adc
xchg
movhps
add
xchg
dec
movs
clc
sbb
inc
lock
dec
push
jb
mov
hlt
dec
mov
add
sub
or
rcl
inc
aaa
push
nop
nop
or
add
call
xchg
ins
mov
ins
dec
inc
pop
jecxz
sti
add
mov
or
out
xchg
or
push
loopne
sahf
add
xor
ins
push
hlt
adc
xor
cmps
pop
jecxz
xchg
add
adc
invd
pop
xchg
xchg
jmp
add
bound
xchg
xor
ins
aad
dec
inc
pop
rcl
pop
fs
dec
xchg
fcmovnu
mov
push
enter
push
xor
pop
lock
mov
xor
xchg
mul
loopne
sub
jecxz
loopne
push
inc
pop
gs
and
jnp
or
jg
and
addr16
(bad)
dec
sbb
cmp
xor
pop
xchg
sub
push
or
add
mov
sbb
or
sub
add
cmp
sub
or
xlat
push
xor
das
pop
gs
add
fs
pop
loopne
inc
loopne
xchg
fwait
test
movs
sbb
adc
push
call
dec
or
lea
in
ret
adc
movs
lea
cmp
cmp
ror
xchg
or
mov
pop
jp
clc
int3
ins
enter
add
fstp
pusha
xchg
add
sub
shl
ja
add
jo
jb
ins
sbb
mov
adc
and
adc
jl
add
popf
pushf
int3
xchg
(bad)
aam
stos
jno
loope
sub
ror
(bad)
jg
ror
add
rcr
mov
mov
dec
add
sbb
sbb
cmp
dec
test
and
mov
or
jno
loopne
addr16
cmp
lock
in
sbb
dec
call
test
das
xchg
mov
shr
push
cwde
mov
inc
ret
adc
xor
pop
adc
mov
mov
and
fs
mov
pop
cmps
call
or
in
adc
aaa
and
pop
je
and
jecxz
jbe
push
sbb
jp
adc
stos
popf
mov
mov
rcr
or
mov
fcom
rol
aam
int3
xor
push
or
pop
mov
aam
mov
call
add
mov
inc
or
aam
shl
add
inc
fistp
dec
addr16
ret
xchg
or
cs
test
cmc
inc
jnp
pop
or
mov
push
ins
lock
inc
pushf
inc
mov
rol
mov
ror
jmp
push
or
and
dec
stc
xchg
dec
xchg
stos
in
mov
(bad)
lock
fwait
sbb
aam
dec
mov
push
rol
aam
(bad)
and
and
and
push
add
and
xchg
lods
out
(bad)
inc
dec
xor
add
push
and
sub
and
jns
ret
pop
iret
adc
adc
(bad)
sbb
in
cmp
mov
adc
enter
(bad)
pop
xchg
add
sub
sub
and
mov
inc
fsub
sub
dec
mov
mov
adc
je
lock
inc
in
out
cmp
pop
lock
es
ss
push
jb
in
add
cmp
icebp
or
mov
div
into
or
inc
xchg
loopne
cmp
xchg
or
push
or
or
cmp
leave
cli
pusha
fimul
and
pop
es
aam
clc
push
inc
mov
(bad)
pop
fs
jo
cmp
adc
ficomp
xchg
cmc
(bad)
xlat
xchg
pusha
xchg
or
adc
test
and
jmp
push
movs
jne
cmp
push
push
jb
and
xchg
xchg
ret
aad
les
inc
xchg
adc
ret
dec
loop
sub
fiadd
enter
jmp
and
stos
pop
sbb
adc
loopne
pop
pop
sub
cmp
daa
lods
rol
jo
and
mov
push
push
push
mov
adc
push
dec
or
test
add
jb
xchg
daa
jo
mov
fs
movs
mov
or
mov
inc
fs
cmp
inc
pusha
out
mov
(bad)
push
adc
imul
dec
lods
retf
adc
test
aad
xchg
pop
pop
repnz
push
mov
adc
xchg
xchg
xchg
inc
pop
aaa
add
fs
inc
push
jmp
mov
mov
mov
pop
xchg
fdiv
sbb
enter
in
xor
imul
ja
sbb
sar
test
rcl
fist
dec
scas
adc
enter
enter
sbb
rol
cmp
inc
jb
mov
inc
xor
sub
mov
push
cld
sbb
sbb
cmp
cmp
pop
inc
out
mov
mov
xor
rol
mov
jns
xchg
enter
stos
(bad)
cmps
imul
test
sbb
cwde
iret
mov
dec
ret
adc
mov
sbb
jmp
jo
rcr
xchg
sbb
ss
test
cmp
and
call
inc
add
push
lea
sbb
ret
call
nop
mov
and
fldl2e
loop
sub
push
xor
cwde
test
test
outs
or
adc
rcr
mov
outs
mov
ret
or
dec
popa
push
inc
adc
or
jl
aam
cli
inc
jmp
push
cmps
movs
rol
faddp
jl
cdq
js
adc
or
or
jmp
dec
scas
jmp
adc
dec
lock
xchg
hlt
jbe
adc
push
jne
and
cmp
lods
clc
(bad)
stos
(bad)
rol
test
push
sbb
es
pop
out
cdq
adc
xchg
sbb
cvtps2pi
mov
and
mov
dec
icebp
or
mov
popa
test
push
sub
add
adc
test
push
sbb
loopne
add
mov
fadd
call
dec
ret
aam
loopne
mov
icebp
cmp
mov
ss
sbb
xor
cdq
les
rcr
enter
mov
push
or
xor
leave
jae
sbb
nop
pushf
pushf
mov
dec
jae
mov
xor
je
pop
hlt
and
mov
cli
jb
sub
push
mov
xor
adc
adc
sub
cwde
aas
pushf
pop
mov
mov
ror
pusha
dec
inc
push
pop
shr
nop
test
jns
lock
add
and
push
sbb
mov
mov
imul
or
int3
and
dec
rol
call
add
int
cld
(bad)
test
add
retf
sub
xchg
mov
in
loop
mov
shl
sbb
cld
arpl
sahf
mov
mov
popf
dec
jae
sahf
je
xor
cmp
cs
mov
push
jmp
or
add
sub
add
push
ret
pop
mov
xchg
popf
mov
mov
mov
inc
js
sbb
ror
push
imul
dec
scas
sbb
push
adc
es
push
sahf
pop
movs
add
xor
popa
mov
jo
popa
imul
sbb
cmp
pop
pop
fmul
or
aam
push
pop
sahf
sub
or
push
mov
loopne
cmp
adc
push
xchg
push
push
sbb
bnd
lea
sub
pop
dec
add
mov
scas
inc
imul
sbb
std
cmp
xchg
sbb
lock
iret
cs
fucomp
adc
cmp
sbb
or
rol
(bad)
fwait
push
call
sub
(bad)
cs
push
je
mov
inc
xor
in
or
add
sub
sub
inc
cmp
sub
adc
rol
xor
jg
mov
or
mov
cmp
lds
mov
push
aad
and
push
sub
popa
aam
lahf
sbb
mov
xchg
adc
stos
mov
push
in
jo
or
sub
push
dec
loope
xor
scas
fmul
adc
inc
dec
mul
cmp
jne
or
add
sub
cmp
sub
add
add
out
dec
push
xlat
and
add
punpckhdq
sbb
les
push
adc
sub
js
xor
xchg
clc
aad
jle
adc
adc
push
adc
mov
das
sbb
sub
and
nop
mov
add
mov
das
mov
xchg
push
push
mov
jbe
cli
jbe
daa
in
add
mov
jge
sub
adc
or
sub
aaa
jmp
dec
sahf
clc
hlt
hlt
dec
and
xchg
mov
dec
addr16
dec
das
xor
adc
xchg
pop
or
inc
and
adc
cmp
add
or
sbb
cmp
lahf
push
sub
arpl
mov
imul
es
iret
mov
and
in
je
inc
enter
dec
in
jo
scas
hlt
nop
daa
cmps
or
test
add
push
repz
lock
ret
push
add
inc
not
rcr
ins
xchg
add
dec
inc
or
loopne
add
pop
adc
mov
or
mov
xor
push
cmp
mov
arpl
or
imul
stos
and
pop
dec
lock
ror
xor
out
mov
popa
adc
je
inc
xchg
cmps
cmp
loopne
ja
adc
sub
add
dec
cld
clc
clc
mov
mov
mov
mov
cmps
pushf
bound
sahf
cmps
lea
retf
cwde
dec
add
xchg
jns
in
enter
push
pop
and
mov
mov
adc
and
dec
push
movs
cmps
mov
sahf
aam
push
jl
test
jg
xchg
sahf
dec
mov
inc
mov
mov
mov
nop
test
jb
pop
lea
enter
inc
or
mov
(bad)
or
div
xchg
call
pop
sbb
sbb
sub
pop
and
imul
sub
addr16
dec
hlt
das
(bad)
frstor
clc
stos
or
push
inc
sub
popa
shl
push
sub
jge
test
cmp
push
sub
arpl
add
dec
loope
add
iret
jge
test
mov
pusha
xlat
sbb
(bad)
mov
dec
stos
pop
jl
and
lods
xchg
cld
in
or
test
sub
or
(bad)
xlat
or
fwait
aas
(bad)
stos
arpl
repnz
inc
ins
xchg
jnp
mov
aam
mov
add
and
pop
xlat
ins
add
dec
mov
xchg
dec
mov
ss
cmp
enter
inc
jle
sbb
call
stos
icebp
add
cmps
add
in
xchg
cdq
inc
in
lock
or
mov
add
cmps
add
lods
cmc
outs
or
mov
xor
sub
jmp
mov
les
(bad)
jg
fisubr
jbe
mov
sub
dec
inc
mov
mov
nop
aam
ds
adc
or
stc
lock
fsub
(bad)
ja
mov
mov
and
mov
push
mov
imul
sub
xor
cmp
cwde
jg
cmp
mov
dec
iret
xchg
jnp
std
retf
inc
lds
lods
into
inc
mov
mov
push
sbb
jmp
jecxz
xor
fxam
adc
enter
into
cmp
inc
hlt
mov
and
sub
test
xor
cmp
pop
mov
push
pop
dec
dec
fdivr
sbb
add
inc
xor
mov
add
sub
dec
cdq
push
jno
cmp
adc
xor
(bad)
pop
addr16
das
and
inc
add
xor
pop
mov
and
pop
push
mov
(bad)
cmp
es
jns
scas
dec
pop
sbb
jle
pop
inc
mov
push
iret
dec
push
cwde
dec
out
inc
xchg
into
mov
jg
sbb
mov
xor
repz
mov
mov
inc
ins
mov
clc
add
adc
and
jmp
mov
stc
cmc
jae
inc
fnstsw
inc
cmp
lds
lea
add
ror
scas
sbb
pop
xchg
test
dec
push
mulps
xor
arpl
inc
pop
test
push
mov
call
test
jne
inc
pop
or
or
dec
xchg
adc
adc
mov
xchg
sbb
mov
dec
add
and
jmp
and
push
pop
or
inc
test
sub
jo
mov
test
push
pop
clc
xor
retf
sbb
fidiv
dec
ins
jmp
sbb
push
inc
mov
mov
sbb
fild
add
das
or
cmp
jge
sbb
fst
nop
test
xchg
or
cs
mov
or
aas
je
dec
or
xchg
mov
pop
sbb
push
daa
add
or
add
or
mov
xchg
and
adc
adc
cmp
fisttp
mov
in
jecxz
mov
and
dec
scas
adc
pop
inc
ret
mov
jg
inc
mov
mov
or
je
call
lods
sub
adc
push
xchg
aad
test
mov
out
lds
daa
adc
dec
mov
nop
sub
fisttp
adc
dec
cmps
jmp
sub
cmp
and
in
jmp
(bad)
push
and
mov
or
lods
and
adc
push
out
jg
xchg
adc
adc
fist
and
daa
mov
mov
pop
loop
and
call
aam
push
jl
dec
call
enter
adc
mov
popf
pop
push
pop
cmp
cmps
mov
sbb
mov
jg
in
(bad)
inc
jmp
inc
repnz
mov
dec
add
(bad)
sbb
jl
cmps
iret
sbb
jmp
movs
jbe
pusha
inc
and
xor
or
pop
and
pop
xor
jne
mov
sub
cmp
inc
dec
dec
(bad)
fld
xchg
sbb
or
retf
xchg
mov
(bad)
dec
add
movs
xor
ins
leave
ret
mov
xchg
(bad)
fdivr
add
out
add
adc
ds
pop
jmp
and
or
add
xchg
dec
pop
enter
adc
or
add
cld
add
mov
adc
sbb
inc
mov
push
mov
fstp
fldln2
nop
cmps
xchg
adc
(bad)
xchg
mov
sub
mov
sub
movs
adc
daa
test
mov
add
enter
sub
push
shr
mov
dec
xchg
iret
mov
xchg
fwait
cmp
or
rcl
mov
mov
and
mov
daa
nop
inc
mov
xchg
adc
and
inc
mov
pop
push
mov
mov
fsub
pop
addr16
pop
dec
outs
ins
add
fs
add
and
push
into
sub
inc
pop
push
dec
or
push
nop
xor
loope
add
mov
sbb
outs
daa
stos
sub
mov
je
mov
push
ss
and
leave
mov
arpl
ja
shr
jo
adc
mov
(bad)
scas
dec
or
pop
pop
and
fldenv
cld
inc
and
push
xchg
add
mov
sub
mov
or
inc
idiv
dec
and
push
mov
sub
hlt
or
xor
cld
xchg
pusha
aaa
jo
hlt
test
cld
loope
sbb
pop
call
imul
mov
sti
jmp
dec
add
xor
out
outs
movs
or
jp
rep
mov
ins
cwde
pusha
ins
lahf
push
rcl
mov
int3
cmp
add
pop
bound
xor
xor
or
pop
ss
lds
in
(bad)
xchg
inc
jl
inc
js
sbb
lods
xchg
test
push
sub
frstor
adc
movs
ja
or
add
jge
mov
cmp
cmp
or
mov
sub
test
dec
js
mov
xchg
mov
dec
lods
jg
and
mov
nop
pop
add
sbb
sub
xlat
in
(bad)
push
cmp
je
mov
or
ret
sub
pop
mov
inc
pop
(bad)
mov
popa
icebp
sbb
(bad)
add
adc
dec
adc
cmp
mov
push
leave
push
mov
hlt
inc
pop
add
ins
out
rcl
and
mov
movs
sub
out
push
test
sub
dec
jmp
fwait
lea
in
mov
push
ds
and
leave
mov
aam
sar
jae
je
cmp
pusha
popf
jne
lahf
shr
outs
fdivr
lods
dec
icebp
mov
mov
imul
js
pop
enter
dec
push
cmp
in
pop
dec
xor
xor
ins
sbb
and
and
add
mov
out
sar
or
sar
clc
imul
lds
inc
sub
loopne
outs
test
pop
rcl
xchg
daa
jmp
int3
or
inc
mov
jnp
mov
jo
sbb
jne
mov
mov
loopne
dec
pusha
(bad)
out
ret
into
push
dec
adc
or
jo
add
imul
inc
mov
loop
(bad)
test
xor
(bad)
pop
mov
inc
cmp
or
test
jl
ret
(bad)
(bad)
dec
aad
sub
xor
xor
dec
or
add
fisub
push
call
aas
sub
and
xor
sub
and
jmp
sbb
or
test
aas
aaa
push
stc
dec
pop
jmp
adc
push
hlt
rcl
ins
add
and
add
icebp
push
push
xchg
push
ss
sub
jb
add
mov
pop
sbb
xor
sub
dec
test
push
push
pushf
add
add
pusha
in
or
lock
push
sbb
(bad)
(bad)
push
jmp
cmp
adc
mov
test
dec
icebp
cwde
xor
inc
inc
sti
ret
pop
inc
aas
jne
adc
push
add
or
ret
(bad)
jg
sar
and
les
xor
(bad)
dec
je
or
jb
dec
mov
sbb
(bad)
push
jb
out
inc
add
push
idiv
mov
add
add
les
mov
rcl
in
and
outs
jo
sbb
add
fs
retf
and
and
or
cmp
sub
add
push
mov
dec
push
mov
push
call
js
les
in
int3
jp
fadd
repnz
xlat
push
inc
mov
add
aad
pop
adc
mov
ret
cwde
ret
inc
pop
out
xor
inc
push
mov
push
mov
push
popf
inc
arpl
jl
rcl
cmp
hlt
xchg
adc
add
xchg
stc
push
int3
adc
ds
dec
sub
sbb
and
ret
jo
add
jns
(bad)
pusha
ins
test
das
pop
mov
mov
push
or
loopne
and
cdq
(bad)
or
adc
and
cmp
ret
inc
sbb
(bad)
or
and
in
mov
(bad)
dec
or
adc
repnz
push
movs
or
dec
movs
dec
nop
and
push
or
jno
or
enter
xor
mov
les
or
or
ret
add
push
push
add
mov
dec
sbb
inc
cmp
cwde
or
jo
sbb
inc
push
stc
int3
call
sub
aam
xor
dec
inc
sahf
enter
lods
in
mov
or
sbb
and
or
mov
test
and
adc
xchg
enter
mov
in
enter
and
fwait
cdq
cld
jecxz
enter
mov
xadd
les
not
add
(bad)
jmp
sub
xor
pop
retf
leave
dec
movs
loop
add
cld
sub
inc
shr
lock
push
rcl
push
and
mov
in
cmp
pop
ror
add
push
out
retf
dec
aam
(bad)
mov
add
jae
push
xchg
hlt
rol
mov
adc
or
adc
add
data16
test
or
retf
sbb
cdq
retf
nop
xchg
lock
pop
sti
sbb
bound
pop
retf
ror
sti
and
mov
popf
adc
xor
or
push
push
and
or
nop
add
and
loopne
inc
inc
stos
in
xchg
pop
sub
(bad)
je
and
push
sti
adc
xchg
xor
pop
mov
xchg
push
(bad)
pusha
cmps
daa
arpl
mov
xor
mov
jmp
shl
push
or
dec
ret
inc
ret
xor
(bad)
sub
mov
add
or
retf
cmp
jmp
sbb
xchg
pop
shr
xor
fcmove
push
or
rcr
les
pop
mov
in
loope
arpl
mov
aas
or
xabort
add
dec
sub
mov
rcl
and
imul
stos
icebp
jno
jl
bound
out
dec
push
xcrypt-cfb
cmps
popa
inc
(bad)
fstp
lea
bound
or
iret
mov
pop
fsubr
enter
xor
out
mov
add
stos
adc
ror
inc
mov
imul
add
sar
cwde
movs
or
fwait
xchg
sbb
adc
lea
pop
xchg
cmps
xor
call
ret
adc
and
or
or
or
outs
call
nop
fwait
cmp
shr
iret
push
push
stc
inc
jmp
lea
imul
mov
adc
xchg
push
cwde
pushf
add
mov
aam
push
and
loope
adc
cmp
vmread
jb
adc
sbb
mov
xchg
(bad)
jle
pop
xchg
sub
cld
add
add
(bad)
dec
jp
int3
imul
mov
jmp
inc
outs
jg
aam
xchg
int3
add
stos
mov
rcr
movaps
cmp
sub
xor
push
pusha
ret
xchg
rol
jmp
add
push
xor
xor
scas
and
rcr
mov
les
inc
inc
test
pop
and
sbb
and
push
and
xchg
xlat
adc
add
outs
sub
test
retf
cmp
stos
outs
or
nop
addr16
dec
rcl
cmps
sbb
test
lds
or
mov
js
xchg
dec
in
lock
add
lock
and
or
jge
rcr
js
int3
rcl
inc
or
mov
enter
fcomp
mov
sahf
xchg
out
mov
mov
pop
dec
jb
out
dec
jp
adc
pop
aam
xlat
mov
das
sub
push
pop
pop
test
inc
mov
mov
add
dec
test
jg
mov
or
aam
fcmovbe
jle
add
in
aam
mov
or
dec
inc
in
mov
retf
xor
sub
(bad)
jmp
fnstenv
xor
push
and
and
ds
mov
jns
repz
pop
inc
addr16
mov
lea
sbb
push
cdq
add
or
test
xor
lods
mov
or
jecxz
mov
jb
aam
xchg
dec
or
jg
je
adc
push
fcomp
adc
(bad)
enter
(bad)
dec
loopne
(bad)
mov
add
pop
push
sbb
ret
jo
xchg
sbb
hlt
add
fs
dec
mov
push
into
add
adc
jp
push
dec
and
(bad)
out
call
add
add
sbb
js
neg
dec
inc
push
hlt
mov
or
dec
(bad)
aaa
mov
cld
inc
out
xor
add
fild
or
fiadd
leave
push
jns
lock
(bad)
in
ret
jo
or
ds
dec
jp
inc
outs
imul
in
loopne
imul
jecxz
push
ret
js
popf
fisub
lds
pop
pop
lods
movs
outs
mov
adc
push
jp
je
jecxz
aam
mov
aaa
and
xchg
test
dec
shl
adc
aam
xor
jp
add
outs
mov
jo
jmp
xor
mov
pop
dec
mov
dec
and
or
add
movs
std
add
cmp
cmp
mov
(bad)
enter
push
loope
fstp
faddp
cmps
fbstp
shr
nop
and
xor
je
inc
leave
add
dec
dec
mov
in
ror
ror
xor
mov
nop
mov
pop
xor
xchg
fstp
es
scas
jae
movs
sbb
mov
mov
mov
jbe
imul
outs
jnp
mov
repnz
or
xchg
adc
sbb
pop
mov
test
mov
push
push
dec
add
or
jg
fistp
clc
sbb
push
inc
push
push
cmc
add
aam
or
nop
aam
cmp
(bad)
ret
daa
neg
stos
xor
xlat
or
xor
adc
dec
je
leave
sub
cld
jo
jb
js
pop
fmul
pop
fdivr
mov
daa
push
xchg
sbb
mov
iret
jo
and
outs
add
test
fstp
ja
(bad)
mov
push
jl
inc
push
add
and
sub
push
push
in
fild
pusha
je
js
nop
ret
or
frstor
add
xchg
mov
cwde
ret
pmulhuw
dec
cwde
movhps
dec
dec
inc
mov
sbb
and
push
sbb
loope
adc
push
push
cmp
test
or
sub
in
movs
sbb
sub
or
in
or
dec
mov
xchg
cmc
xchg
stos
and
fisttp
out
inc
cmp
add
lea
mov
mov
mov
adc
xchg
and
fcom
pop
xchg
sbb
neg
dec
test
mov
inc
dec
fs
push
cmp
pop
dec
(bad)
pop
fild
mov
jb
push
cmp
ror
and
and
inc
mov
sbb
clc
xchg
adc
loopne
dec
loopne
add
sar
leave
inc
mov
enter
in
fist
mov
jg
imul
cmp
inc
loope
cwde
rcr
dec
call
xor
shr
scas
adc
xor
mov
loop
xchg
pushf
push
js
dec
mov
je
outs
push
mov
lods
(bad)
mov
adc
push
jne
cmc
and
out
data16
in
jecxz
outs
ins
add
adc
in
push
jb
push
cld
rcl
in
pusha
sbb
push
xor
adc
push
shl
rcl
es
(bad)
out
rcl
add
adc
push
or
test
adc
ja
mov
inc
mov
dec
cmp
addr16
in
(bad)
enter
dec
dec
retf
int
dec
dec
dec
into
iret
mov
dec
dec
dec
dec
mov
mov
dec
dec
dec
dec
mov
mov
dec
mov
dec
dec
dec
mov
dec
dec
dec
mov
dec
dec
dec
cmps
cmps
test
dec
dec
dec
dec
stos
stos
lods
lods
dec
dec
dec
dec
scas
scas
nop
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
cwde
cdq
dec
dec
dec
dec
call
dec
sahf
lahf
add
add
dec
out
push
ds
or
mov
push
outs
les
adc
add
adc
push
sbb
fcomp
in
or
ror
add
test
js
xchg
nop
push
out
pop
push
and
dec
adc
dec
cs
adc
lock
push
jo
lds
pusha
and
dec
inc
fdivr
les
pop
test
or
push
outs
out
cmp
js
test
ins
xacquire
mov
sub
xchg
and
movs
cmp
mov
jne
je
or
outs
pop
push
or
xchg
inc
ins
outs
bound
jg
push
fsubr
mov
fidiv
outs
inc
les
lock
adc
pop
jae
in
or
cwde
dec
push
add
ret
adc
or
cwde
pop
pusha
or
fld
inc
mov
daa
add
dec
add
mov
jg
and
hlt
rcl
or
aaa
xchg
in
fadd
ds
push
add
mov
gs
sbb
or
loopne
jg
xchg
add
call
fcom
cmp
cmp
(bad)
cmc
xchg
mov
ins
or
push
add
adc
add
dec
out
sbb
xchg
add
mov
enter
add
and
adc
and
adc
in
shl
xchg
rcl
dec
icebp
jbe
or
cs
fimul
gs
fdiv
ret
sub
inc
or
out
gs
add
test
sahf
push
pop
inc
push
jmp
or
jmp
loopne
jecxz
cmp
je
bts
dec
and
int
imul
and
mov
mov
jecxz
shl
or
cld
cmp
stc
dec
add
loope
dec
cwde
movs
dec
rol
ret
mov
outs
xchg
daa
outs
sub
xchg
and
iret
sti
inc
adc
ins
push
fs
push
inc
mov
arpl
ret
and
add
rsqrtps
shr
sub
mov
ins
dec
cmps
cmc
aam
xchg
or
(bad)
stos
mov
sub
jl
inc
xchg
cld
dec
aaa
ret
dec
dec
repnz
jb
or
jae
inc
movzx
adc
or
or
pusha
inc
jmp
jecxz
add
and
add
jno
mov
adc
add
repnz
dec
test
mov
jmp
in
sbb
loop
mov
jle
jae
or
inc
daa
add
lods
mul
inc
loope
push
pop
nop
mov
fldln2
test
aaa
(bad)
jl
inc
fadd
pop
xchg
sbb
pop
inc
add
jmp
movs
adc
popf
sub
pop
aaa
sub
xchg
mov
or
(bad)
push
test
xchg
outs
mov
dec
in
mov
iret
test
push
sbb
int
push
or
popa
or
ins
std
sti
sub
fisubr
fstp
push
pusha
pop
cmp
mov
inc
adc
xchg
test
jge
add
inc
cwde
cld
fdiv
push
and
lock
sbb
pcmpeqd
hlt
ins
pop
lods
mov
add
add
in
dec
xchg
(bad)
inc
add
add
xor
leave
pop
xchg
mov
aaa
adc
inc
mov
in
lock
adc
fs
jle
mov
leave
adc
jb
pop
adc
or
and
sbb
adc
add
add
pop
in
push
pop
test
lock
jo
dec
xchg
lahf
nop
ret
fistp
dec
jge
mov
and
add
mov
mov
mov
add
idiv
ret
scas
in
dec
inc
or
adc
add
jbe
pop
(bad)
les
xor
add
mov
pop
mov
cmps
xor
shr
xchg
daa
jne
mov
dec
fs
push
neg
sbb
icebp
dec
dec
pop
sbb
add
cmp
bound
repz
fisttp
inc
outs
mov
cs
jae
ficom
out
inc
es
js
popa
sti
nop
or
sub
jecxz
ins
jbe
arpl
shr
push
inc
scas
arpl
pop
sub
add
(bad)
xor
arpl
aaa
mov
push
sar
cdq
outs
pop
mov
(bad)
in
cmp
jmp
sub
jge
xchg
mov
pop
push
aaa
push
cmp
sub
out
addr16
push
dec
push
jmp
(bad)
jmp
stos
dec
loop
pusha
and
lods
repnz
and
(bad)
fldenv
enter
repz
int3
repz
dec
pop
jnp
(bad)
and
dec
jb
lock
pop
sub
jb
and
pop
mov
xchg
jo
xor
push
jnp
call
sub
mov
cmps
adc
fild
cmp
ror
xchg
in
add
adc
or
hlt
jnp
fimul
cmp
popf
and
lock
jae
sbb
outs
loop
ret
call
movs
shr
enter
add
and
and
ins
adc
outs
sub
ret
cmc
pop
xor
int3
lldt
push
les
inc
mov
fwait
outs
xor
enter
cmp
pop
push
cmp
dec
or
add
lea
stc
std
in
pop
ret
(bad)
mov
mov
mov
jo
xor
inc
cmova
loopne
fild
push
sbb
pusha
mov
cmp
cli
addr16
inc
sub
inc
xchg
mov
sbb
outs
test
call
sbb
jno
test
popf
movs
adc
jecxz
add
sbb
ins
rcl
jmp
jmp
dec
test
iret
addr16
mov
rol
sub
push
xchg
and
jmp
or
or
ins
pusha
add
adc
call
xchg
pop
fdiv
in
aam
or
hlt
inc
mov
mov
not
dec
in
fisubr
sub
inc
sti
inc
jbe
push
popa
pop
xor
data16
or
pop
pop
add
clc
mov
cmps
add
inc
es
das
mov
inc
jo
dec
adc
cli
or
es
inc
push
cdq
mov
loopne
sbb
push
loop
xor
xor
xchg
inc
inc
inc
push
pop
add
clc
inc
call
cmps
repnz
mov
adc
int
and
rol
pop
shl
ror
sbb
mov
call
(bad)
fs
inc
sbb
outs
js
inc
jb
jne
lock
rcl
cs
fstp
xor
outs
or
mov
test
and
ins
xor
imul
jle
test
lods
fadd
and
ins
sar
jmp
dec
in
in
repnz
les
or
stc
dec
imul
or
mov
adc
adc
push
les
js
xchg
fs
fadd
stc
outs
mov
cmps
push
aaa
push
in
xor
adc
pusha
and
push
cmp
and
mov
lods
push
xchg
test
jmp
ret
(bad)
scas
or
and
movs
jmp
xchg
call
cld
mov
mov
fst
xchg
xor
sbb
cmps
mov
mov
push
popf
inc
jo
lock
je
xchg
cs
push
and
call
dec
or
out
pop
adc
dec
scas
ror
out
sub
sub
call
add
lea
(bad)
adc
cmp
shr
out
je
mov
hlt
or
rcl
loop
xor
add
(bad)
sub
or
out
jp
aam
xchg
adc
inc
jmp
test
lock
add
xor
mov
xchg
loopne
cmps
sbb
ss
pop
push
iret
inc
or
and
pop
dec
pushf
or
mov
push
sbb
mov
lods
jns
clc
jo
jb
pop
ds
mov
test
sbb
lods
cmp
movs
jge
stos
fist
hlt
or
dec
push
or
dec
add
fwait
and
nop
jae
mov
dec
inc
sub
mov
inc
push
push
lds
jge
mov
jle
mov
cmp
push
mov
cmc
dec
jne
fs
je
push
pop
add
pusha
mov
dec
data16
add
lods
add
sbb
and
mov
test
test
push
xor
(bad)
jmp
dec
sbb
out
test
adc
cdq
push
inc
gs
sbb
sub
inc
and
adc
pop
dec
test
je
into
dec
add
shl
(bad)
arpl
inc
dec
mov
jl
mov
add
dec
nop
les
or
orps
mov
mov
(bad)
mov
les
adc
or
ja
ret
xor
les
test
inc
sbb
cmp
lea
jo
lock
jno
and
jb
(bad)
fstp
std
test
or
(bad)
call
arpl
outs
test
pop
xor
or
and
add
and
push
dec
jl
and
add
lock
mov
lea
mov
inc
data16
out
push
mov
mov
and
sub
lock
mov
jmp
cmp
aad
aam
cmp
and
push
lods
and
scas
jno
das
sbb
sbb
dec
call
fs
in
cld
hlt
or
adc
iret
push
test
add
inc
dec
sbb
test
mov
ss
pop
leave
cdq
popa
in
push
(bad)
cmp
push
test
mov
xchg
push
push
mov
mov
mov
dec
cmp
mov
test
xchg
push
cmps
mov
adc
jmp
rcl
inc
and
sub
dec
movs
jb
adc
and
ds
mov
inc
pop
jmp
repz
ror
je
out
(bad)
mov
nop
add
ret
daa
inc
mov
out
fild
inc
xor
or
je
or
call
ins
inc
fldenv
mov
in
idiv
or
pop
(bad)
fldlg2
push
sub
dec
or
mov
int
push
sub
lock
and
sub
inc
jp
and
stos
xchg
dec
adc
or
or
jo
cmp
dec
inc
adc
pusha
add
add
xchg
inc
sbb
push
adc
add
mov
mul
or
ins
ret
rcl
imul
or
call
push
adc
jge
push
add
xchg
xchg
(bad)
xlat
push
cmp
daa
jae
stos
pop
outs
or
rol
test
sahf
jge
hlt
cmp
xchg
stos
jmp
add
fst
dec
dec
sbb
sub
les
jne
fcom
sbb
dec
fdiv
daa
inc
cmp
push
add
fild
in
stc
(bad)
out
popa
add
popa
mov
mov
bound
in
cmp
add
jo
test
(bad)
jne
sbb
es
pop
xor
add
mov
and
jbe
inc
scas
ret
arpl
mov
adc
cmp
adc
dec
mov
mov
enter
or
inc
add
movs
jnp
jo
dec
push
cld
pop
test
adc
xlat
jmp
cs
rol
dec
js
push
jns
pop
movs
cwde
push
inc
cmp
dec
push
int3
pop
pop
loopne
inc
push
es
mov
pop
and
push
pushf
pop
dec
or
je
jb
mov
cmp
loope
and
xchg
out
and
imul
dec
sahf
in
jle
cwde
mov
mov
in
movs
mov
repnz
sahf
in
mov
mov
or
repnz
mov
inc
sar
out
pushf
out
xchg
xor
sbb
mov
xor
shr
xor
fdiv
ficom
in
mov
and
repnz
mov
inc
nop
psubw
mov
xor
adc
inc
retf
inc
lea
xor
loope
(bad)
mov
rcr
push
bound
das
pop
rcr
sbb
(bad)
or
daa
push
adc
outs
inc
add
dec
add
and
or
shr
jno
xor
out
push
repz
dec
or
mov
pop
je
cmp
xlat
jne
popa
in
or
or
jb
jb
cwde
add
arpl
push
push
shr
sbb
add
popa
pop
ins
xchg
das
ins
ffreep
or
nop
pop
jne
xlat
jl
add
(bad)
cwde
cwde
pusha
dec
pop
inc
ins
add
push
jae
or
aas
ret
sbb
pop
push
jg
stos
sbb
aaa
or
test
lahf
jae
jo
push
mov
or
add
adc
or
sbb
outs
jnp
push
(bad)
call
push
dec
call
call
and
sub
imul
cwde
dec
dec
inc
xor
mov
aam
cld
push
xchg
out
leave
or
and
loope
repz
mov
cmp
push
cmp
add
out
idiv
xor
sbb
std
dec
or
xor
dec
pop
inc
test
cmps
and
outs
add
stos
ret
sbb
inc
pop
pop
scas
daa
push
imul
aaa
adc
outs
and
jbe
test
out
inc
dec
adc
or
fmul
cmp
lahf
dec
push
(bad)
jnp
jbe
mov
or
xor
xor
inc
lea
aaa
fadd
retf
lea
stos
and
xchg
in
mov
cmp
nop
div
daa
mov
test
push
sub
cmp
ss
push
inc
cmp
adc
inc
stc
jnp
adc
and
add
repnz
fsub
add
add
xor
or
pop
pop
mov
sub
dec
sub
aaa
inc
add
add
out
jo
stc
shl
rol
mov
icebp
sub
ja
pop
and
push
mov
push
ror
mov
ret
outs
push
popf
and
pop
xor
add
dec
dec
mul
jns
adc
int
mov
or
adc
movs
(bad)
push
push
addr16
adc
mov
dec
ins
push
and
inc
pusha
and
ins
mov
mov
adc
lock
mov
mov
pop
or
test
fsub
xor
test
inc
rol
ins
jmp
add
rol
ins
and
and
mov
or
jl
sub
lea
shr
adc
cmps
sbb
call
fcom
xor
not
and
mov
xor
mov
fild
dec
les
inc
inc
loop
and
mov
add
sbb
jbe
mov
dec
shr
push
sbb
movs
out
ja
xchg
mov
sub
or
or
mov
sub
jmp
es
sti
popf
mul
mov
pusha
mov
scas
mov
fadd
sbb
aas
xchg
xchg
sbb
mov
retf
push
dec
dec
lods
add
push
aad
xor
bswap
lahf
inc
cmps
ins
jbe
adc
xor
lock
ss
dec
and
push
adc
jo
push
dec
cs
imul
mov
hlt
gs
outs
mov
add
add
and
enter
jl
or
pop
xchg
imul
push
mov
in
scas
sbb
adc
jns
adc
lock
fst
rcr
neg
push
cmc
xor
adc
adc
sbb
or
outs
push
xchg
mov
add
and
cmp
mov
pusha
push
mov
pop
cwde
dec
sub
pop
outs
xchg
sub
xor
mov
dec
push
xor
pop
pop
pop
data16
jge
repnz
test
outs
xor
mov
inc
inc
rol
(bad)
mov
pop
push
jnp
pop
xor
sbb
(bad)
mov
mov
jo
xor
add
or
push
xor
adc
leave
repnz
jl
scas
enter
sbb
sbb
aas
(bad)
das
rsqrtps
lea
xchg
dec
in
adc
sbb
mov
add
adc
sbb
jl
sbb
pop
mov
fsubr
cmps
add
in
repnz
sbb
mov
adc
lds
mov
cmps
cli
sbb
jb
lds
add
push
or
js
xlat
leave
and
xchg
ss
ret
ja
or
push
pop
imul
pop
cmps
push
pop
clc
xrelease
xchg
clc
mov
and
and
pop
lea
movs
pop
mov
adc
gs
xor
or
jecxz
cdq
into
addr16
or
jmp
pop
pop
pop
sub
dec
xor
push
adc
jmp
jae
and
xchg
xor
daa
inc
daa
pop
shl
test
adc
rcl
xor
adc
or
lock
sub
push
adc
test
ret
and
push
xchg
sbb
add
lea
es
dec
jle
movs
rcl
inc
add
dec
cld
push
or
shl
cmps
sbb
or
dec
pop
repz
and
or
add
sbb
cmps
out
leave
sub
mov
cmp
mov
push
test
ins
push
or
movs
jno
sbb
(bad)
push
push
sahf
and
jl
ss
and
mov
aam
popf
dec
and
mov
and
and
and
aam
sahf
push
jle
in
gs
jp
scas
xchg
mov
and
dec
xor
and
and
jecxz
sub
ror
sub
shl
push
mov
test
(bad)
(bad)
inc
push
adc
int3
cwde
sbb
cmps
clc
jecxz
mov
pop
mov
dec
pop
and
mov
and
(bad)
inc
mov
mov
add
sub
sbb
and
add
sub
mov
and
test
test
inc
sbb
cmp
and
sbb
add
inc
xor
leave
les
bound
test
hlt
fcmovnbe
xchg
cld
cmps
cld
icebp
(bad)
mov
repnz
add
inc
(bad)
cmps
adc
stos
pop
or
push
je
into
mov
add
mov
aam
pop
inc
fdiv
add
loope
sbb
lock
setle
adc
popa
push
sub
(bad)
mov
mov
adc
mov
xor
clc
add
mov
call
sbb
push
add
mov
push
add
and
fdivr
daa
ror
or
shl
arpl
dec
adc
and
push
cmp
mov
test
pusha
aaa
ins
aaa
mov
mov
lds
jno
and
(bad)
ss
mov
add
and
aaa
je
inc
neg
dec
outs
sbb
inc
jg
pop
push
inc
xchg
add
push
push
push
inc
sub
sub
and
pop
(bad)
adc
or
add
mov
sub
or
pop
ret
xchg
sbb
jno
imul
mov
mov
xchg
adc
or
pop
push
push
add
xchg
add
sbb
xchg
je
test
sbb
pop
mov
mov
jne
sub
les
movs
ds
push
fild
adc
inc
push
xor
adc
push
and
xor
push
xor
jae
push
ins
test
inc
push
xlat
mov
dec
push
je
sub
xor
xchg
sub
pop
xor
add
push
sub
cmps
retf
mov
jae
xor
adc
dec
inc
ss
sub
sub
sub
and
out
mov
test
mov
and
ficom
inc
movs
ret
push
mov
adc
adc
mov
push
jb
(bad)
addr16
outs
sbb
fwait
cmps
sub
call
dec
lea
dec
push
pop
les
outs
mov
pop
pop
mov
and
xchg
pop
fldpi
inc
mov
fs
ins
adc
lahf
cs
jne
add
(bad)
out
jg
mov
je
lea
call
mov
fs
pusha
jmp
lock
dec
gs
dec
sbb
adc
add
push
ret
jmp
adc
gs
sbb
lods
pop
or
cdq
pop
xchg
in
add
in
push
fld
cmp
xlat
adc
xchg
pop
adc
push
xor
mov
mov
sub
dec
repz
mov
test
pop
mov
dec
push
jns
mov
in
test
das
dec
ins
cmp
pop
test
and
call
clc
test
dec
xor
cmp
sbb
push
clc
test
rcr
ja
push
sbb
pop
add
push
jne
nop
xchg
push
loopne
dec
dec
inc
imul
ret
mov
add
mov
ja
cmp
adc
je
push
pop
cmps
xor
push
jp
push
inc
xor
adc
push
mov
push
movs
pop
inc
push
dec
call
jns
fbstp
push
pop
adc
push
ds
xor
cld
jmp
test
xlat
xlat
xchg
lds
popf
mov
cmp
cld
cld
cs
sbb
jo
jne
ins
mov
cmovg
jecxz
or
fs
cmp
push
nop
mov
pushf
xor
loope
test
mov
rol
mov
mov
stos
and
inc
inc
push
or
aaa
das
and
inc
dec
test
add
xor
into
add
sbb
movs
scas
push
jb
xor
ret
bound
out
pop
sbb
jecxz
shl
loopne
pop
inc
dec
and
loopne
inc
sub
shl
jmp
or
push
les
enter
aad
hlt
xor
add
add
xor
xor
inc
xor
test
xor
or
js
call
fld
add
jb
in
xor
ret
xor
mov
sbb
add
cmp
sub
ds
jb
arpl
sbb
dec
es
push
sbb
mov
and
in
add
les
pop
sbb
nop
inc
or
jle
daa
or
add
sub
xor
jb
sub
nop
or
and
adc
call
sahf
sbb
pushf
jmp
enter
dec
cmp
cmp
xor
shl
mov
mul
aad
mov
aaa
inc
cmp
add
cmp
sbb
cmp
cwde
dec
cmp
sbb
addr16
imul
mov
add
add
mov
mov
adc
inc
pushfw
arpl
enter
jo
cmp
outs
push
test
pop
jge
aas
xchg
cmp
jns
cmp
cmp
cmp
jns
cmp
mov
test
xchg
or
add
or
add
movs
cmp
cdq
add
sbb
lea
(bad)
pop
lea
pushf
add
add
push
sub
test
ds
mov
dec
or
dec
pop
xchg
or
dec
jb
in
enter
mov
add
aam
add
sbb
mov
xor
outs
cmp
nop
add
daa
lods
inc
int3
inc
in
enter
int3
inc
pop
mov
mov
mov
or
outs
mov
jns
mov
fadd
xchg
cmp
fadd
inc
inc
push
cmp
mov
movs
jb
repnz
nop
push
leave
or
inc
loopne
nop
push
leave
add
inc
loopne
pmulhuw
inc
sbb
(bad)
in
enter
hlt
inc
cmp
jb
hlt
inc
hlt
inc
call
xlat
push
xor
jmp
scas
rcl
test
inc
icebp
inc
daa
sbb
pop
es
push
adc
sbb
adc
add
fs
mov
dec
dec
mov
cmp
inc
adc
inc
add
add
xor
cmp
inc
les
sbb
test
nop
adc
cmps
sub
add
add
dec
inc
xor
jb
dec
inc
enter
add
xor
pushf
cmp
add
sbb
fs
fs
adc
dec
int3
int3
dec
mov
mov
add
popa
dec
in
enter
or
enter
ror
jns
inc
shr
dec
cmp
cmp
dec
xchg
in
enter
cwde
dec
enter
cwde
dec
aam
in
or
or
pop
sar
jae
add
add
mov
add
cmp
dec
mov
cmp
and
fcomp
cwde
dec
popa
int
test
cmp
repnz
dec
les
pushf
add
dec
les
es
(bad)
push
adc
daa
lods
dec
or
ja
(bad)
test
aas
mov
sbb
fmul
repnz
dec
fmul
xor
loopne
das
les
test
shl
(bad)
clc
dec
add
daa
inc
clc
dec
clc
cmp
in
inc
enter
or
and
sbb
icebp
dec
enter
adc
push
fs
add
push
call
call
movs
and
jbe
es
clc
or
jb
in
or
add
add
sub
enter
in
in
je
dec
dec
adc
outs
enter
and
jb
in
inc
push
inc
push
test
add
lock
pusha
and
sub
adc
or
sbb
(bad)
(bad)
xor
adc
jne
aas
add
add
inc
push
fs
inc
push
sbb
inc
es
hlt
dec
push
arpl
mov
jae
pop
push
sbb
inc
es
push
jl
clc
push
enter
xor
movs
pop
cwde
sbb
ja
mov
sbb
push
jb
xchg
jne
nop
push
in
repnz
dec
in
cld
cld
jl
enter
daa
inc
jb
in
mov
push
sbb
cmp
movs
push
movs
push
inc
push
dec
add
add
xor
dec
popa
xchg
inc
cmp
shl
xor
cdq
push
dec
sbb
push
mov
adc
pop
inc
mov
add
jb
cs
push
cmp
sbb
adc
outs
xor
das
dec
add
add
enter
pop
pop
pop
repnz
or
pop
pop
pop
pop
pop
and
mov
inc
xchg
pop
dec
sbb
pop
clc
pop
adc
pop
inc
clc
pop
or
jb
cs
pop
pop
cmps
inc
and
adc
pop
push
lahf
cmp
cmp
cmp
dec
ret
and
sbb
ja
icebp
loope
sar
inc
das
push
js
xor
inc
dec
push
pop
adc
pop
pusha
ja
pop
jo
enter
jo
cmp
pop
leave
adc
pop
pop
adc
fild
jne
mov
test
inc
pop
and
pop
inc
pop
and
sbb
pop
les
jb
pop
push
outs
pop
sbb
jno
cmps
jmp
cmp
lds
pop
add
daa
inc
in
in
nop
or
adc
int3
pop
sbb
adc
pusha
add
add
jg
pusha
add
in
pusha
and
dec
enter
and
cmp
inc
adc
(bad)
ja
inc
popa
daa
inc
push
shr
fs
or
xor
xchg
and
push
out
nop
mov
popa
sbb
or
bound
repnz
adc
bound
repnz
bound
sub
je
xor
les
daa
ret
push
or
addr16
arpl
add
shr
arpl
arpl
arpl
arpl
and
cmp
stos
jecxz
mov
aas
repnz
pop
pop
fs
repnz
loopne
loopne
and
jns
xor
pop
scas
cmp
cmp
fs
add
push
sbb
pop
adc
mov
scas
xchg
or
pop
and
xor
or
xchg
in
or
pop
add
nop
adc
pop
sbb
addr16
sbb
mov
ror
inc
inc
mov
push
adc
in
repnz
dec
push
dec
dec
add
test
push
pop
imul
imul
imul
dec
inc
imul
adc
inc
dec
jnp
xchg
cmp
addr16
push
push
xchg
cmp
js
js
in
cmp
push
pop
push
pop
or
and
pusha
push
inc
sub
imul
(bad)
sub
inc
push
test
jb
in
imul
imul
nop
push
mov
pop
inc
dec
and
nop
adc
shr
inc
enter
inc
jb
mov
ins
and
inc
push
(bad)
ins
enter
cld
ins
cld
ins
test
add
pop
xor
in
adc
mov
aaa
ja
sub
sti
imul
xor
outs
inc
dec
sbb
sub
and
and
sub
pusha
mov
outs
sar
dec
and
pop
push
ins
dec
inc
xor
inc
push
jo
add
add
test
fs
jb
cdq
or
jno
add
add
jno
inc
push
cmp
daa
in
push
in
test
jb
add
add
dec
cmp
es
dec
mov
scas
mov
inc
pop
jne
dec
shl
pop
and
jae
sbb
jl
clc
test
ret
dec
jp
cdq
js
xlat
jo
xor
sbb
fs
loopne
lds
ins
ja
je
nop
adc
pop
add
add
leave
add
add
sbb
in
je
pop
dec
inc
out
push
pusha
js
add
adc
pop
sub
jbe
add
add
jbe
and
test
adc
adc
or
pop
inc
push
xor
and
ja
nop
adc
inc
ja
leave
add
inc
ja
movzx
inc
mov
mov
add
jo
add
add
jo
jo
pop
push
ret
sub
les
shl
nop
mov
dec
push
xor
xchg
xchg
pop
jge
adc
pop
inc
pushf
jns
add
add
cmps
sbb
mov
mov
enter
jns
or
fwait
adc
movs
dec
fwait
popw
cdq
add
add
jb
in
jp
jp
and
aam
mov
and
add
in
jnp
jnp
sbb
cmp
jnp
jnp
enter
fdivr
dec
das
jae
or
clc
jl
xchg
pop
and
jl
jl
and
in
in
loopne
pop
and
dec
and
or
scas
xchg
pop
or
jle
xor
pop
loopne
lock
pop
inc
push
adc
xchg
pop
inc
pop
adc
dec
jg
pop
and
jg
xchg
in
shl
repnz
jg
sbb
cmp
jns
cmp
sbb
push
cmp
in
inc
and
inc
jecxz
add
add
add
add
push
or
lock
add
cmp
jb
daa
jge
pushf
or
pushf
add
es
hlt
hlt
sbb
daa
test
add
mov
push
fadd
nop
add
cmp
pushf
nop
and
les
or
jb
inc
push
adc
int
in
test
nop
adc
in
test
add
in
test
adc
sub
or
test
push
adc
xchg
and
xchg
cmp
push
repnz
mov
jb
in
sbb
add
add
cmp
jb
dec
adc
add
in
enter
mov
add
mov
and
inc
and
dec
mov
add
stos
bound
mov
enter
mov
in
pop
and
jo
nop
and
push
xor
enter
test
enter
enter
lock
enter
nop
mov
adc
mov
inc
aaa
dec
(bad)
loop
push
cmp
add
daa
inc
cld
mov
mov
cmp
adc
in
push
sbb
cmp
pop
inc
dec
xor
xor
inc
inc
cmp
in
sbb
add
mov
mov
mov
outs
test
addr16
adc
cmp
pusha
cwde
sbb
arpl
sbb
and
cwde
(bad)
cwde
pop
nop
or
or
sbb
cmp
pop
inc
dec
int3
nop
int3
nop
test
adc
and
mov
mov
fst
jg
xchg
clc
xchg
cmp
jns
clc
xchg
mov
mov
sbb
or
or
inc
pop
pop
test
adc
inc
xchg
dec
test
sub
dec
sbb
xchg
mov
mov
push
mov
add
in
xchg
pusha
xchg
sbb
pusha
xchg
pusha
xchg
dec
enter
ror
mov
jns
scas
leave
add
xchg
nop
add
adc
inc
push
enter
jne
jo
outs
dec
and
sbb
xchg
enter
int3
xchg
int3
xchg
fs
add
xchg
int3
test
inc
dec
and
loope
nop
adc
pop
add
enter
shl
cmp
pop
shr
xchg
repnz
pop
(bad)
sub
sub
jb
(bad)
les
cdq
adc
and
loopne
addr16
call
call
push
leave
dec
pop
dec
pop
push
call
push
cmp
daa
inc
push
jl
jl
nop
or
adc
daa
in
fs
pop
imul
stos
dec
xor
xchg
mov
pushf
test
enter
test
nop
adc
lods
lods
nop
pushf
enter
push
mov
jb
in
aam
aam
cdq
add
add
popf
mov
jb
push
mov
popf
mov
sahf
inc
add
add
sbb
call
jns
sahf
adc
ins
mov
cmp
test
mov
xor
xor
add
repnz
test
inc
push
enter
pop
adc
es
pop
popa
add
add
stos
outs
dec
mov
jb
ins
mov
cdq
add
daa
push
mov
adc
add
add
mov
xor
mov
mov
push
lea
mov
aam
aam
enter
ins
ins
mov
inc
sbb
adc
js
lock
nop
pop
or
in
movs
add
add
or
or
pop
xor
jb
movs
jo
push
and
and
movs
push
push
sbb
cmps
inc
cmps
add
daa
inc
inc
cmps
inc
cmp
je
push
leave
or
popa
cmps
add
cmps
add
and
nop
push
inc
and
mov
mov
test
enter
enter
fs
add
test
inc
jb
mov
or
icebp
test
adc
and
adc
jb
clc
test
cmp
xchg
cmp
pop
stos
pop
stos
in
cmp
add
pop
or
stos
push
pop
xor
pop
lods
nop
adc
pop
jl
jl
leave
add
add
or
test
lods
add
sbb
lods
sbb
dec
es
push
mov
daa
in
mov
movs
scas
les
les
xchg
dec
sub
lods
scas
or
inc
pop
neg
push
mov
pop
pushw
addr16
pusha
dec
sub
addr16
inc
scas
loopne
mov
clc
add
mov
sbb
pop
outs
xchg
ss
or
pop
rol
fiadd
xlat
sbb
xor
div
mov
mov
xchg
add
xor
xor
movs
and
movs
jg
shl
out
out
adc
mov
jo
or
(bad)
push
dec
cwde
xor
pop
mov
cmps
test
mov
mov
and
cmp
addr16
pop
enter
stos
and
ja
stos
stos
push
pusha
pop
or
in
mov
fwait
out
push
add
adc
push
or
scas
or
xchg
mov
dec
dec
cmp
ja
ds
xchg
cmp
ds
push
pop
add
dec
es
dec
cmp
mov
dec
ffree
imul
mov
pop
inc
and
leave
enter
adc
retf
mov
test
adc
mov
mov
dec
fisub
bound
xchg
cmp
dec
(bad)
and
mov
push
xor
push
sbb
xlat
push
enter
fwait
or
addr16
dec
(bad)
xlat
into
dec
movs
call
dec
push
push
sub
pop
sti
cmp
mov
xchg
iret
test
xor
in
stc
adc
nop
sub
xchg
inc
stc
push
ds
cmp
cmp
mov
test
stc
push
ds
lods
sar
out
jl
lahf
retf
mov
inc
mov
repnz
add
sub
inc
inc
int3
lahf
retf
push
inc
shl
cwde
dec
push
test
dec
fmul
push
ds
dec
loopne
dec
in
dec
call
adc
sub
lock
jnp
ds
push
hlt
push
adc
out
pusha
scas
cmp
mov
inc
dec
in
stc
sbb
fsub
cld
adc
jl
lahf
retf
and
pusha
and
pop
retf
test
fcomp
jge
lahf
adc
adc
pop
(bad)
bound
bound
mov
sub
mov
add
jl
push
stc
push
shl
inc
sbb
dec
jl
dec
in
addr16
push
retf
test
int3
imul
mov
ds
dec
test
sub
push
stc
push
fs
outs
push
mov
cld
pop
pushf
push
jl
retf
les
add
test
repnz
mov
sub
cmps
nop
jl
ja
cmps
cmp
or
pushf
and
mov
jl
test
call
cmps
mov
pushf
movs
push
ja
cmps
repnz
test
jl
lahf
retf
mov
xchg
retf
test
nop
xchg
lods
jl
lahf
int3
les
pop
dec
in
fst
aam
jns
int3
imul
ds
jp
test
adc
shr
fsub
jnp
loopne
jge
cmp
mov
in
stos
pop
js
push
test
sahf
in
jg
push
ds
dec
lock
hlt
pushf
adc
clc
call
retf
cld
cmp
bound
add
add
arpl
jge
lahf
retf
or
test
sub
je
scas
shl
xchg
sbb
frstor
sbb
mov
shl
and
mov
add
cwde
or
jg
pop
adc
jb
add
inc
outs
inc
enter
lea
sub
rcl
mov
jne
call
cmp
add
sbb
test
mov
imul
mov
fnsave
push
adc
cmp
ret
adc
movs
pop
push
pop
lods
add
rcr
sub
sub
inc
smsw
and
mov
movs
mov
sbb
lods
mov
add
cmp
jnp
in
aas
mov
(bad)
push
add
jns
adc
and
das
fisub
out
repnz
mov
inc
fdivr
inc
mov
sti
sbb
push
mov
mov
aaa
sbb
or
xchg
or
mov
adc
cmps
pop
cmp
imul
adc
push
nop
sar
push
add
xchg
sub
in
mov
push
or
push
add
nop
ret
jg
mov
jno
pop
add
fadd
jl
mov
ja
adc
mov
mov
addr16
adc
xor
arpl
mov
cwde
mov
imul
inc
in
xchg
xchg
retf
fs
mov
push
pop
or
ins
add
sub
pop
push
mov
pop
dec
in
js
jl
sbb
out
dec
pop
jnp
outs
push
dec
ins
add
test
and
pop
pop
sub
movs
cmps
inc
stos
inc
ret
add
loope
les
shl
and
pop
add
mov
imul
push
push
fstp
jae
mov
daa
dec
jo
inc
fwait
lea
rol
push
aas
data16
and
sub
jbe
and
adc
jnp
add
scas
inc
es
inc
push
das
sbb
pop
pop
outs
xor
sar
xor
popa
aaa
cwde
bound
add
pop
jns
push
das
xor
(bad)
push
fwait
cwde
pop
lahf
je
loop
dec
and
or
cmps
call
xor
xor
dec
sar
or
add
icebp
ja
stos
in
inc
pop
rol
das
inc
in
mov
repnz
cld
neg
push
adc
pop
inc
dec
lds
cmp
imul
(bad)
push
jno
jnp
xchg
push
cwde
std
inc
punpckhwd
lock
sbb
add
mov
sar
je
mov
enter
arpl
in
dec
adc
shl
lock
xchg
rcl
dec
sbb
add
add
and
les
jg
scas
dec
or
mov
inc
push
inc
inc
cld
add
(bad)
sub
stos
js
sbb
ret
xlat
push
int3
pop
jo
adc
mov
dec
inc
rcl
std
in
cmps
and
or
dec
sub
movs
mov
lock
shl
fcom
pop
push
and
inc
jg
test
mov
outs
and
push
lea
sar
aad
in
inc
sbb
push
dec
jne
add
or
sbb
mov
add
out
loope
leave
inc
cmp
add
jae
test
dec
arpl
mov
imul
push
and
les
rcl
retf
sub
jne
mov
(bad)
dec
mov
adc
or
push
mov
mov
shr
call
cdq
xchg
out
mov
push
in
push
xor
loopne
add
fadd
jmp
jne
mov
and
and
lea
adc
sahf
sti
movs
add
dec
or
in
imul
mov
out
xor
stos
mov
mov
sbb
dec
pop
push
or
lods
pop
shl
mov
cmp
shl
dec
mov
add
adc
aas
push
add
sub
inc
addr16
cmp
xchg
push
call
xchg
inc
lea
cmps
daa
add
es
imul
mov
mov
inc
adc
xchg
and
push
not
and
jns
inc
push
push
test
xchg
xchg
dec
cmp
add
rcl
sbb
add
push
jle
push
cmp
xor
add
enter
les
stos
adc
xchg
aaa
mov
cmc
mov
mov
sbb
iret
or
in
push
push
fild
mov
das
adc
xchg
stos
jg
or
faddp
movs
or
idiv
sti
jmp
mov
shr
mov
mov
mov
dec
xchg
jp
inc
xchg
addps
nop
or
lock
stos
(bad)
adc
mov
mov
mov
mov
and
and
mov
fs
ret
dec
repz
inc
cdq
in
sbb
push
in
cmp
or
data16
mov
dec
xchg
aas
pop
enter
test
push
lock
push
outs
popa
jbe
mov
in
pop
and
aam
add
adc
test
ins
js
fild
cmps
ins
mov
push
sbb
mov
push
jl
idiv
and
cmp
push
adc
shl
outs
in
dec
ins
add
xchg
pop
leave
dec
push
jo
dec
retf
and
loopne
call
mov
retf
sub
inc
loop
cs
mov
sahf
in
push
in
add
xlat
push
or
fcom
int
sahf
dec
lock
cld
dec
iret
push
adc
out
daa
ds
pop
in
cld
dec
fdivr
pop
inc
pop
xchg
dec
inc
pop
stos
adc
sub
push
ss
in
sar
out
test
int3
jl
rcr
fwait
xlat
and
sub
aam
push
cmp
fcomp
(bad)
cmps
add
test
pop
test
loopne
fist
mov
test
push
shr
xor
sar
retf
int
ds
add
enter
in
inc
and
mov
add
cmp
inc
cmp
or
push
push
bound
iret
adc
push
loop
sub
mov
add
push
mov
and
aaa
test
xor
or
mov
gs
jns
add
dec
fsubr
pusha
addr16
inc
add
jne
pop
or
pop
dec
push
jns
adc
ins
aam
in
add
xchg
push
enter
mov
mov
cmp
and
test
cmp
call
adc
adc
idiv
dec
daa
push
mov
mov
mov
call
add
jle
push
mov
adc
cmp
or
or
inc
add
mov
dec
sbb
in
add
dec
mov
pop
(bad)
shr
(bad)
adc
in
inc
loop
sbb
cmp
movs
(bad)
adc
and
inc
or
dec
clc
sbb
enter
call
adc
add
jmp
jge
mov
cld
hlt
jb
xchg
int
sbb
push
push
mov
inc
jg
lds
jo
mov
mov
mov
and
inc
mov
lock
dec
add
mov
shl
inc
shl
xchg
aaa
js
push
js
add
pop
dec
dec
pusha
pop
rol
rol
xchg
cmps
lea
adc
mov
mov
cmp
test
data16
lods
cli
add
cld
or
(bad)
xor
add
push
xchg
push
mov
shr
cmp
mov
dec
shl
movs
rol
push
dec
adc
push
xchg
outs
fadd
in
sar
iret
dec
cli
xchg
push
loope
push
arpl
xor
aad
mov
adc
mov
mov
mov
push
and
push
sub
test
jg
imul
dec
fistp
or
jno
adc
sti
mov
cdq
add
dec
xlat
mov
sti
lock
fadd
jnp
xor
fcom
jmp
scas
dec
add
sbb
fsubr
xchg
xchg
or
test
jmp
xor
inc
jmp
xchg
jno
add
subps
mov
shl
cmp
fcom
dec
shl
mov
popa
and
and
and
jae
fcomp
xchg
xchg
inc
fisubr
jge
xor
add
inc
cmp
cmp
xchg
fsub
xchg
xor
mov
loopne
ret
cs
cmp
inc
sahf
arpl
jge
jp
aam
adc
loope
inc
inc
shl
add
sub
add
sub
gs
aaa
inc
xchg
or
cmps
sbb
js
add
add
leave
dec
and
cmp
arpl
adc
add
fiadd
stos
push
or
push
xor
movs
in
sub
xchg
pop
mov
and
jge
jbe
pop
test
test
push
pop
sbb
xchg
mov
add
bound
lds
sub
js
adc
dec
lock
sbb
or
and
mov
loop
cmp
cld
cmp
and
cs
data16
mov
or
add
sbb
(bad)
ins
or
lods
add
enter
(bad)
call
out
push
hlt
cmp
imul
mov
je
pop
shl
ds
mov
dec
mov
lods
movs
xlat
test
push
hlt
in
pop
xor
jne
pop
rol
test
inc
pop
int
cmp
push
cmp
mov
pop
sahf
dec
lock
sbb
test
nop
or
dec
and
aas
and
ja
hlt
int
cmp
enter
push
iret
and
rol
dec
jbe
mov
jne
lock
mov
mov
test
xor
dec
cdq
add
or
enter
enter
loope
jo
(bad)
adc
pop
ins
leave
jnp
xor
js
push
pop
loop
test
or
add
(bad)
cld
xor
jl
lock
xlat
test
cmps
mov
and
and
xlat
les
in
lea
mov
fwait
inc
add
sbb
add
cmp
(bad)
sub
in
rcl
xlat
lds
xchg
and
loopne
je
push
inc
pop
es
push
pop
mov
lahf
test
push
mov
sahf
movs
inc
mov
cmp
outs
int3
mov
push
(bad)
mov
inc
cmp
mov
adc
mov
jno
fsubr
lods
add
xchg
lahf
and
sbb
push
sbb
fyl2x
mov
cwde
sub
test
jb
not
dec
ss
lea
clc
dec
ror
aas
jmp
xor
sub
or
jecxz
(bad)
jno
outs
(bad)
cmp
inc
inc
call
lahf
push
sbb
in
inc
loope
or
adc
(bad)
movs
nop
ja
or
sub
mov
ss
test
popa
mov
jae
cs
bound
xchg
test
dec
mov
sub
mov
retf
fcmovb
mov
jbe
in
xchg
sbb
imul
jbe
cmp
es
cwde
or
xchg
or
(bad)
hlt
hlt
js
cmp
ins
jo
(bad)
fild
add
inc
dec
out
cmp
psrld
fdiv
and
xchg
leave
push
jae
fdiv
dec
arpl
jl
or
cmp
dec
xchg
sub
push
loopne
push
imul
dec
mov
or
xchg
outs
clc
jmp
int3
mov
cld
sahf
pop
xchg
or
inc
inc
xchg
scas
xchg
repz
cmps
or
pop
call
push
or
pop
sbb
icebp
sub
jg
jne
push
and
dec
sbb
ss
loope
call
add
cwde
clc
into
mov
pop
jmp
or
sub
jne
fimul
retf
iret
mov
and
xchg
inc
cmp
pop
sub
cli
sub
int
sub
sbb
xor
sahf
push
cmps
(bad)
ret
pop
dec
sti
(bad)
xchg
sub
mov
sbb
sti
imul
jp
mov
push
push
pop
push
adc
mov
cmps
cdq
nop
cmp
jmp
mov
pop
stc
pop
push
pusha
lods
in
(bad)
sbb
(bad)
es
or
test
cmp
push
xchg
inc
xchg
popf
sar
ret
xor
adc
sar
test
push
aas
rcl
cmp
and
mov
pop
adc
sbb
lock
ins
in
(bad)
in
loopne
xor
xchg
mov
pop
pop
mov
adc
xchg
mov
ss
and
sbb
mov
pop
adc
xchg
lds
loop
enter
lea
mov
mov
bound
xor
cmps
ja
and
in
cmps
add
inc
xchg
add
add
push
push
data16
push
mov
mov
xchg
pop
enter
and
loopne
rcl
pop
pop
sbb
in
pop
push
loopne
pop
inc
sahf
sub
jno
sbb
aam
mov
sbb
push
movs
push
fistp
mov
rcl
adc
popf
cs
retf
shr
and
inc
scas
xchg
cld
fadd
add
imul
add
jp
test
add
retfw
xor
mov
lea
ror
xor
mov
xchg
inc
mov
cmp
fadd
cmp
das
dec
hlt
lea
aam
inc
xor
jl
clc
or
inc
or
movs
pushf
(bad)
cwde
js
xchg
retf
xor
jmp
das
or
jae
lods
adc
hlt
xor
loop
add
daa
cmp
daa
dec
dec
lock
je
xlat
sub
or
test
dec
add
pop
mov
outs
rcl
int3
pop
aaa
out
jecxz
push
and
xchg
rcl
sub
fnstcw
cmp
es
lods
pop
adc
jecxz
sbb
in
mov
das
popa
inc
add
jo
shl
mov
movs
int
add
add
sub
push
xchg
mov
ss
js
jle
js
jle
in
push
sub
inc
cs
mov
daa
mov
xor
jmp
inc
cmp
jne
clc
dec
mov
pop
dec
jne
push
mov
and
sub
add
mov
pop
das
mov
pusha
xor
xor
xchg
and
pop
inc
(bad)
lea
inc
cs
add
sbb
popa
ret
push
dec
inc
stc
lea
rcl
rol
das
inc
pop
add
dec
int
cld
and
adc
or
jbe
mov
arpl
inc
and
sbb
mov
push
cmps
xor
mov
mov
mov
dec
adc
sbb
mov
mov
(bad)
and
adc
add
int
call
or
jge
jmp
test
lods
xchg
cmps
adc
(bad)
xchg
xor
mov
sbb
sahf
jbe
dec
add
shl
add
mov
pop
movs
dec
sbb
sbb
add
int3
cli
mov
inc
mov
movs
mov
sub
sub
add
jecxz
push
shl
mov
inc
loope
ins
pop
mov
inc
jne
xor
and
lahf
cwde
sbb
scas
jg
add
mov
and
jne
jmp
jecxz
(bad)
or
sbb
test
mov
gs
mov
or
ror
push
push
shl
mov
inc
call
cmp
icebp
sbb
sub
mov
mov
mov
inc
test
jne
outs
mov
shl
fldlg2
outs
(bad)
stos
scas
mov
aam
or
push
xchg
daa
scas
jno
and
pop
(bad)
js
xor
lea
inc
movs
push
(bad)
daa
leave
sbb
push
xchg
cld
inc
add
inc
and
jle
in
or
ins
lds
rol
into
mov
mov
test
mov
mov
fsubr
sbb
call
cmp
pop
xchg
addr16
add
mov
imul
ins
pusha
fiadd
pop
add
leave
and
dec
cwde
mov
cwde
inc
pop
xchg
adc
sti
dec
call
fbld
and
popa
in
adc
jl
or
or
out
fimul
jmp
pop
jmp
mov
loope
push
adc
mov
ret
sbb
push
loope
jns
cld
mov
cmp
adc
lock
jno
lea
fs
rcr
imul
cmps
sub
jmp
add
xchg
mov
into
lea
mov
(bad)
xlat
jns
cwde
sbb
or
or
xor
test
push
sbb
fsub
cmp
pop
test
shr
mov
pop
jmp
dec
sub
xchg
inc
test
sub
clc
cld
jns
inc
or
bound
and
xchg
pusha
ins
daa
dec
sub
jmp
or
or
int3
scas
xchg
inc
mov
sbb
sub
call
push
es
and
addr16
dec
mov
out
je
and
xchg
icebp
mov
call
imul
les
mov
fs
out
and
push
push
push
dec
pop
or
rol
cld
mov
ins
lock
cmps
sbb
dec
movs
aaa
orps
or
sbb
and
lock
icebp
sbb
pop
adc
or
pop
inc
movs
xchg
mov
int
dec
mov
mov
add
jmp
adc
inc
xchg
adc
stos
ins
out
add
or
mov
bound
add
les
jns
or
push
or
push
or
mov
jns
mov
mov
add
data16
test
mov
mov
dec
gs
test
int3
mov
(bad)
mov
pop
mov
leave
adc
clc
sub
clc
mov
mov
das
fnstcw
push
leave
xchg
je
mov
dec
in
and
nop
sub
jb
jne
lock
inc
or
xchg
adc
jge
sub
repz
loopne
imul
rol
dec
push
stos
adc
iretw
stos
cmps
xchg
or
ret
cmp
cli
aaa
cmp
ja
clc
pop
imul
rcl
cmps
loope
inc
leave
repz
add
test
jp
mov
sti
and
jmp
hlt
nop
pop
inc
sbb
jl
(bad)
out
and
jmp
mov
mov
jmp
push
xor
adc
clc
ins
sbb
adc
cmps
cs
outs
or
xchg
test
repz
push
dec
jmp
aas
cmc
inc
sbb
aaa
das
jecxz
adc
xor
xor
xchg
(bad)
xor
cmc
movs
cmc
mov
in
jb
cmc
sub
enter
or
mov
jno
daa
data16
adc
enter
das
and
push
mov
das
inc
push
test
cmp
test
mov
pop
test
add
adc
push
pop
nop
shr
ret
add
jne
loopne
mov
cmp
add
dec
inc
test
or
jle
lahf
test
clc
cmp
add
mov
movs
inc
mov
push
sbb
mov
adc
pop
lock
inc
sbb
fnsave
ja
mov
add
dec
add
es
push
das
ret
add
mov
scas
(bad)
rcl
inc
clc
cwde
in
add
add
imul
pop
enter
sbb
ss
sti
jne
add
in
fdivr
ds
(bad)
dec
cmp
push
mov
lods
imul
pop
push
ins
dec
ucomiss
enter
pop
stc
jns
out
mov
shl
cmc
repz
repz
cli
pop
sub
dec
iret
repz
pop
ins
jge
lahf
mov
iret
repz
shl
hlt
add
imul
out
sahf
out
push
xchg
shl
enter
jmp
and
je
jbe
pop
repnz
dec
jne
js
leave
test
sbb
mov
jns
sbb
jb
lock
fsub
mov
pop
xchg
mov
jo
mov
in
lods
jp
in
xchg
test
dec
cs
js
xor
xchg
inc
jb
rol
jbe
iret
and
jmp
sbb
je
movs
jns
addr16
gs
js
push
xor
arpl
inc
outs
mov
clc
xchg
cmps
sbb
les
add
jmp
imul
in
add
mov
sub
sti
adc
and
sahf
pop
inc
(bad)
(bad)
xlat
rcr
and
dec
xchg
call
jb
cmp
push
adc
dec
and
shl
das
test
std
fcmovnbe
inc
sub
jb
lea
xchg
clc
inc
pop
push
cmp
pop
dec
jl
cmp
ja
dec
or
inc
sub
aaa
aaa
or
xor
adc
mov
dec
idiv
ror
add
inc
stos
pop
sub
shl
retf
imul
cmp
sub
or
fmul
or
int3
fdivr
fsubr
add
(bad)
push
add
xchg
rol
es
inc
sbb
sbb
nop
jge
cmp
add
icebp
mov
dec
ret
fsubr
inc
not
push
cmp
jne
push
push
(bad)
hlt
mov
(bad)
mov
scas
les
enter
dec
ds
inc
xor
pop
push
sub
xchg
sahf
scas
push
pop
(bad)
ins
test
pop
shl
sbb
pop
cmp
int
fstp
call
loopne
call
cmp
in
dec
push
inc
sbb
pop
xor
cmp
push
test
dec
inc
dec
or
xchg
mov
jnp
and
dec
sbb
daa
test
daa
or
dec
mov
dec
add
add
iret
lds
js
pusha
inc
es
in
nop
dec
dec
or
data16
inc
mov
and
pop
(bad)
mov
nop
pop
add
and
push
nop
xor
jmp
in
inc
xor
xchg
(bad)
push
jb
and
push
pusha
xor
stos
cmp
cld
ins
in
outs
or
jne
lods
cmp
xor
sub
or
dec
mov
mov
dec
adc
(bad)
hlt
bound
pop
mov
addr16
add
fdiv
pop
xor
sub
imul
and
xlat
mul
add
call
or
das
sub
jae
xchg
in
lods
mov
adc
mov
out
cmp
push
in
sbb
dec
sub
inc
push
movs
cmps
inc
pusha
pop
or
js
mov
and
test
addr16
and
add
mov
sub
leave
dec
cld
xchg
pop
or
lods
sbb
add
xchg
gs
aaa
or
aam
aaa
push
pop
cmp
mov
or
jo
aam
call
test
(bad)
leave
cmp
mov
or
sbb
scas
ja
add
cdq
and
rcr
inc
jmp
xor
lods
fiadd
add
push
out
imul
inc
add
push
cs
(bad)
loopne
ja
xor
or
sbb
nop
mov
movups
rol
sbb
or
imul
ret
or
fbld
mov
cs
lods
das
nop
cdq
pop
mov
sahf
mov
or
add
and
jbe
fsubr
pop
inc
and
addr16
shr
test
push
je
lock
push
or
outs
das
pop
xlat
add
sub
fs
mov
enter
push
and
rol
and
pop
and
lods
ins
nop
push
xor
shl
xor
mov
and
daa
xor
(bad)
popa
pop
dec
add
adc
or
dec
movs
pusha
ss
xor
add
xchg
inc
jmp
hlt
js
inc
push
mov
mov
iret
jae
pop
sub
add
add
jbe
add
in
mov
lock
push
mov
mov
call
mov
mov
leave
add
sbb
sub
pop
jl
aaa
mov
mov
or
pop
mov
mov
mov
test
daa
ins
inc
pop
shr
pop
cmp
leave
adc
add
jmp
loopne
lock
rcl
jmp
pusha
lods
mov
aas
adc
add
adc
retf
lock
or
push
xor
inc
add
push
fwait
or
mov
iret
scas
adc
mov
test
clc
(bad)
pusha
xor
cmps
dec
or
push
mov
ins
cs
ja
xor
(bad)
dec
adc
adc
(bad)
push
mov
sti
pop
out
adc
push
hlt
(bad)
cld
xchg
dec
scas
dec
mov
xchg
iret
enter
jbe
cmp
inc
and
mov
mov
enter
push
and
icebp
es
or
or
cmp
inc
or
or
cmp
xor
adc
es
cmp
or
loopne
jp
(bad)
add
push
push
and
jnp
and
dec
sbb
in
add
xor
int
mov
cwde
push
dec
adc
xchg
mov
push
into
arpl
add
mov
and
pop
or
jno
bnd
shl
push
push
loop
and
add
lock
sbb
add
push
or
sub
sub
mov
icebp
or
or
and
add
mov
popa
mov
pop
add
adc
pusha
lods
mov
or
push
inc
iret
test
mov
rol
dec
or
adc
or
pop
inc
in
pushf
or
mov
mov
xor
jmp
retf
movs
stc
xor
xor
ins
xchg
clc
aas
in
je
push
outs
loope
and
cdq
and
push
inc
pop
dec
sbb
or
adc
pop
or
inc
nop
inc
jo
in
cmovo
bound
test
outs
xor
inc
call
and
jne
test
les
push
jmp
dec
push
adc
add
and
int
cmc
inc
iret
inc
sub
add
push
dec
lahf
je
add
aas
mov
and
adc
cld
fild
cdq
dec
jle
test
and
(bad)
push
gs
out
aas
xchg
int3
cmp
jbe
adc
sub
jno
jns
mov
scas
rcl
loop
jmp
mov
inc
jmp
hlt
enter
mov
jl
call
scas
xchg
pushf
loopne
mov
nop
int
pop
loope
in
loopne
dec
ret
or
cmp
xor
pop
mov
(bad)
test
mov
dec
sub
aam
mov
fisttp
nop
dec
sbb
pop
test
push
mov
out
or
mov
jmp
sbb
mov
test
mov
dec
fidivr
push
vmread
mov
mov
mov
loope
mov
pop
add
and
out
push
mov
or
xor
xchg
sbb
dec
jecxz
sub
inc
and
(bad)
cmp
mov
mov
inc
sub
lea
dec
and
pop
cmp
cmp
js
push
fstp
xchg
adc
ins
fist
xchg
daa
adc
add
in
aaa
inc
adc
and
inc
xchg
sub
mov
lock
cs
jne
push
mov
nop
retf
xor
(bad)
fcomp
mov
xchg
(bad)
sub
push
sub
xchg
ret
pop
jns
xor
idiv
call
(bad)
pop
add
(bad)
or
(bad)
push
loope
aad
push
sbb
shl
and
sbb
repz
sub
bound
or
push
sub
push
adc
jmp
mov
sbb
bound
and
add
sub
(bad)
shl
imul
and
sbb
int3
inc
in
dec
into
neg
in
sub
push
mov
mov
or
and
mov
dec
xchg
jmp
ins
xchg
jge
pusha
jne
div
dec
or
aad
mov
dec
jg
clts
dec
inc
jne
mov
mov
dec
mov
pop
inc
mov
or
bnd
push
loop
data16
jle
stos
xor
clc
pop
pop
mov
shr
rcl
add
add
loopne
pop
cmp
je
jmp
dec
repnz
int3
loop
mov
push
xchg
push
dec
out
pop
mov
cmp
das
xchg
daa
daa
mov
daa
daa
mov
daa
daa
jb
je
daa
daa
daa
daa
jbe
js
daa
daa
daa
daa
jp
jl
daa
daa
daa
daa
jle
pusha
popa
daa
daa
daa
daa
bound
gs
daa
daa
daa
addr16
xor
daa
push
adc
mov
push
arpl
push
rcr
pop
ret
inc
int3
es
dec
add
repnz
push
dec
cmp
inc
sbb
jge
cmps
push
xor
sbb
pop
hlt
push
cmp
imul
enter
jne
fwait
mov
mov
jo
jns
pop
pop
sbb
test
xchg
test
or
fist
pop
add
ins
jo
loopne
add
ds
sub
loop
aaa
lahf
sub
out
retf
les
ror
mov
sbb
xor
adc
or
add
sbb
xor
sub
(bad)
add
adc
add
adc
jmp
dec
in
mov
test
aaa
add
aas
call
push
xor
and
es
add
hlt
ss
or
dec
xchg
inc
pop
dec
ret
dec
jg
add
imul
cs
pop
mov
cmps
add
mov
mov
or
or
jnp
adc
lds
pushf
add
xor
pop
sbb
push
push
les
mov
sbb
aad
sbb
pop
inc
cmp
push
pop
test
adc
mov
inc
imul
xchg
int
sbb
sub
and
(bad)
dec
out
sub
xor
in
lock
lods
xchg
(bad)
movs
xor
pushf
out
nop
ret
hlt
xchg
lock
xlat
xlat
sub
shl
daa
add
push
push
xlat
mov
iret
shl
(bad)
lods
sbb
cwde
sub
mov
test
lahf
inc
outs
outs
jne
push
lds
sbb
popf
test
push
jnp
sbb
dec
jne
sti
nop
test
xor
icebp
inc
inc
push
ja
sbb
cwde
mov
inc
mov
imul
sbb
js
out
push
and
sub
popf
add
cmps
mov
(bad)
jl
aam
adc
xor
sbb
loop
test
outs
sar
cmp
push
leave
mov
cmps
call
clc
jae
clc
push
or
ficom
inc
and
sub
xor
cs
jge
push
add
or
mov
aaa
or
cmps
das
pop
dec
or
hlt
and
or
and
jno
add
fisttp
add
dec
or
cmp
mov
push
sub
adc
cmps
ja
pop
mov
or
xor
loope
xor
aam
xor
pop
lea
or
and
aam
and
push
lock
inc
call
xchg
mov
jmp
or
adc
or
inc
nop
push
inc
or
push
and
jmp
int3
mov
je
mov
jle
enter
or
imul
or
cmps
inc
or
hlt
(bad)
mov
inc
add
mov
gs
pop
mov
or
je
icebp
dec
int
push
ja
(bad)
loopne
jno
add
cmp
popa
cmp
and
enter
and
sbb
adc
in
xor
hlt
cwde
clc
aaa
or
popf
pop
xchg
or
out
inc
ins
pop
inc
jno
adc
inc
ror
add
push
add
sub
adc
jns
cld
cmps
sub
movs
or
pop
pop
lds
or
add
sub
dec
ins
jbe
adc
xchg
push
and
inc
or
or
dec
mov
jnp
out
into
mov
cmp
pop
jle
leave
mov
fidivr
cmp
test
xor
or
dec
arpl
sub
adc
jnp
push
sub
test
aaa
cmp
inc
add
and
ss
mov
out
or
shr
scas
or
bound
mov
cmp
adc
pop
or
cmp
mov
cwde
and
adc
push
pop
push
nop
jmp
pusha
dec
fdivr
repnz
mov
nop
jo
jne
and
adc
mov
or
ins
push
push
push
sub
fsub
adc
loope
jne
(bad)
popf
mov
adc
ins
push
and
inc
icebp
hlt
in
push
shr
adc
shr
dec
in
adc
push
push
fadd
fldenv
adc
scas
add
inc
pop
aad
jmp
outs
add
and
cs
lahf
pop
push
out
(bad)
push
je
rol
lods
sbb
inc
pop
shr
fld
sbb
push
adc
jne
inc
xor
sub
test
mov
push
or
ret
lahf
jne
adc
xchg
add
in
sub
mov
push
xchg
push
cmp
push
sbb
rcr
dec
or
lock
mov
inc
or
mov
test
or
sub
fwait
dec
adc
cmp
pop
adc
mov
jge
or
enter
push
jmp
clc
push
lea
mov
jnp
jge
int
push
sti
cmps
xor
(bad)
jg
lock
push
fstp
aad
jnp
rol
inc
neg
and
add
jmp
push
aaa
inc
lock
test
and
jecxz
fld
or
inc
xchg
mov
inc
imul
xor
ret
mov
scas
inc
inc
sub
stos
test
push
inc
jae
arpl
cld
and
nop
inc
mov
dec
add
out
xchg
dec
sub
aaa
mov
pop
mov
in
jmp
sti
push
xchg
pop
xor
dec
pop
ds
push
and
data16
cmp
xchg
push
or
loopne
inc
pop
cmp
mov
sub
fbld
scas
loop
fadd
or
mov
or
inc
xlat
adc
jo
std
and
fadd
rol
imul
not
inc
mov
ret
dec
pop
pop
push
add
add
inc
xor
cmp
ins
mov
xor
fnstenv
xor
test
pop
pop
jnp
pop
push
xor
or
movs
mov
jns
push
dec
xor
pop
jno
xchg
inc
dec
aaa
jo
pusha
(bad)
lock
dec
xchg
(bad)
shr
dec
add
jle
inc
cmp
(bad)
lock
sbb
enter
sub
dec
mov
movs
fistp
(bad)
dec
rol
aaa
popa
mov
adc
and
xlat
les
pop
xor
pop
jmp
adc
cmp
push
jb
jg
sub
sbb
jb
xchg
push
leave
mov
sub
dec
sub
(bad)
mov
movntq
sar
daa
mov
mov
jbe
inc
pop
cmc
mov
sahf
and
out
fs
in
sub
dec
outs
xor
daa
adc
nop
ror
xchg
pop
mov
push
scas
mov
popa
imul
out
lds
adc
out
add
inc
cmp
jge
mov
add
movs
out
inc
movs
push
repnz
outs
jae
sub
shl
in
sub
inc
push
push
aaa
xchg
test
rol
adc
push
dec
push
pop
in
ficom
push
jb
fsin
adc
and
outs
dec
ret
es
or
push
jb
out
nop
neg
(bad)
mov
inc
fcmovnu
add
out
cs
mov
mov
test
mov
ficomp
daa
pop
mov
out
cs
and
pop
pop
push
push
dec
mov
ins
in
mov
das
(bad)
js
rol
mov
in
lock
and
pop
xor
push
push
sbb
xchg
cmc
mov
cmc
inc
sbb
mov
ret
jnp
(bad)
call
or
cs
xor
pop
xor
dec
push
test
dec
adc
pop
xchg
mov
xchg
mov
stos
sbb
in
add
mov
dec
xor
pop
mov
test
jb
into
push
jmp
or
adc
push
push
inc
aaa
mov
xor
xchg
jmp
(bad)
cs
mov
cmp
nop
stos
pop
inc
stos
push
daa
ficomp
stc
inc
xor
push
xor
sub
push
adc
mov
inc
enter
gs
sbb
popa
ins
cmp
dec
push
xor
push
add
xchg
daa
push
adc
dec
or
int3
and
xchg
bound
repnz
jns
cdq
fcom
arpl
cmovs
xor
and
xchg
nop
rcl
pop
add
adc
and
mov
movs
shl
push
daa
pop
aaa
aas
jge
enter
push
push
dec
imul
inc
loopne
in
aaa
and
and
pop
add
pusha
cmp
ins
cmp
xor
sbb
jmp
push
pop
js
in
cmp
xchg
or
push
bnd
xchg
pushf
push
jmp
mov
dec
or
out
aam
mov
xchg
mov
or
dec
jo
add
dec
add
xchg
and
pop
cmp
cdq
jne
pop
and
fadd
add
ffree
sbb
push
aam
test
adc
cmp
cmp
pop
cmp
push
add
out
imul
into
mov
inc
push
daa
cmp
ds
mov
mov
pop
and
push
sbb
nop
push
imul
push
ds
push
movs
dec
les
lahf
out
sahf
int3
jo
push
lods
ds
out
xor
addr16
sete
nop
ja
and
mov
add
or
and
mov
push
inc
popa
jae
and
push
movs
xor
mov
fmulp
dec
add
add
add
push
outs
xor
push
fst
aam
or
loopne
movs
xchg
imul
out
frstor
cmp
jns
mov
sahf
or
jbe
cs
(bad)
ins
push
rol
mov
cmp
xor
jmp
jge
je
test
out
dec
inc
sub
add
add
mov
jl
pop
ret
pop
je
mul
ds
sbb
adc
test
cmps
idiv
ja
xlat
faddp
or
mov
ret
fisttp
lea
add
inc
es
pushf
add
rcl
sahf
push
aaa
cmp
std
mov
add
dec
or
push
mov
sub
mov
(bad)
cmp
xor
iret
xor
fcomp
jle
mov
push
xchg
enter
pop
cld
pop
shr
dec
cmp
adc
and
dec
add
(bad)
lds
(bad)
lock
push
mov
pop
rcr
add
or
xchg
adc
push
inc
xor
loopne
mov
mov
xchg
cmp
cs
pop
dec
pushf
xor
jmp
add
xor
pusha
in
inc
push
dec
aas
mov
and
sub
adc
push
mov
sub
aas
push
icebp
cmp
add
dec
ss
xchg
adc
aas
mov
test
xor
xchg
mov
movzx
dec
or
aam
inc
push
dec
jl
sbb
inc
dec
std
xor
and
xchg
jg
sbb
mov
(bad)
nop
ins
push
cmp
loope
rcr
cmp
pushf
nop
dec
repz
add
clc
(bad)
je
sub
ror
iret
fcmovnu
loope
clc
or
cmps
inc
xor
jmp
and
out
fild
inc
inc
sbb
punpckhwd
in
pop
popw
ss
xor
add
pop
xchg
or
xlat
push
sub
movs
rol
inc
dec
movs
pop
adc
pop
arpl
inc
cmps
xor
and
pop
sub
enter
inc
sub
cmps
adc
xor
(bad)
jmp
test
imul
inc
inc
push
lock
pop
out
sub
add
dec
mov
jne
sbb
dec
dec
shl
sub
movs
jb
jcxz
inc
movs
rol
ret
mov
and
iret
cmc
add
test
movs
adc
and
repnz
xor
ins
movs
or
fadd
jnp
adc
(bad)
adc
icebp
sbb
push
push
or
(bad)
fwait
add
inc
repnz
dec
jbe
push
push
xchg
div
adc
xor
sbb
xchg
xchg
fs
shl
dec
push
loope
inc
(bad)
cmc
inc
push
and
adc
jne
mov
enter
pop
(bad)
cmp
inc
jbe
adc
aaa
adc
sub
jnp
or
jp
or
and
cli
jle
lock
jns
or
movs
fcmovnbe
or
add
pop
int3
call
shr
mov
cmp
iret
mov
pop
adc
lods
and
mov
outs
inc
dec
stc
add
inc
mov
mov
sbb
jmp
mov
movs
frstor
(bad)
cmp
inc
inc
nop
aad
into
stc
add
sub
jecxz
js
sbb
cmp
jle
mov
out
push
inc
mov
mov
sub
inc
fisttp
sub
call
les
xor
mov
jne
jle
sub
leave
addr16
fs
pop
es
(bad)
imul
adc
out
hlt
adc
cli
je
adc
pusha
aaa
inc
adc
mov
sbb
in
xchg
xchg
(bad)
mov
ins
add
je
jo
add
and
and
jl
loop
or
jge
or
sbb
ss
inc
pop
jb
ret
add
or
xchg
ret
repz
or
push
int3
popf
inc
cmp
inc
inc
out
loope
add
add
cmp
test
daa
cmp
inc
xor
inc
test
cmp
(bad)
and
cmps
jo
mov
rcr
sbb
xor
mov
mov
inc
(bad)
mov
mov
mov
rcr
hlt
rol
ret
sbb
pop
mov
push
lock
dec
loope
ror
mov
iret
mov
test
pop
in
push
sub
xchg
adc
dec
or
add
popa
mov
sub
lods
jno
dec
cmp
pop
dec
add
push
daa
jns
inc
cmp
push
cmp
pusha
jp
enter
rcr
add
sbb
fild
pusha
in
lock
out
sub
jo
loopne
mov
xor
and
mov
aaa
jne
pop
add
jno
lock
sbb
lahf
push
mov
pop
add
pop
mov
leave
in
ja
sub
xchg
adc
stc
jbe
leave
aas
cwde
xor
cmp
mov
cmps
enter
adc
jp
mov
sbb
sub
jmp
adc
sbb
jne
and
rol
jge
push
push
dec
sbb
or
inc
ret
shl
popa
movs
sub
mov
add
mov
mov
mov
xor
icebp
mov
ins
pop
dec
test
loope
mov
sub
push
test
fadd
aas
stos
clc
sub
aaa
retf
loopne
mov
push
inc
cmp
mov
pop
cmps
xor
or
jns
dec
dec
ins
mov
mov
xchg
mov
and
in
push
pop
jmp
mov
cld
enter
dec
repnz
dec
jne
pusha
dec
int
xor
dec
xchg
retf
adc
push
sbb
dec
cmp
dec
stc
push
dec
sub
sbb
(bad)
out
gs
mov
inc
test
aam
jmp
mov
stos
pop
sbb
(bad)
sub
outs
mov
jmp
sub
inc
or
loopne
imul
sub
ror
mov
push
lea
dec
adc
sub
sub
add
fwait
add
pcmpgtb
pop
(bad)
and
je
sub
adc
xlat
dec
jl
bound
cmps
xchg
out
or
jo
shl
mov
sbb
sbb
daa
fwait
dec
in
les
dec
enter
pop
add
int
jle
add
mov
sbb
push
mov
test
ret
dec
(bad)
adc
dec
adc
inc
sub
retf
xchg
sub
into
sub
cmc
jmp
inc
xor
mov
fcmovnu
add
movs
xchg
lods
pop
fcmovbe
jno
jae
add
dec
sbb
inc
adc
xor
dec
add
xor
jb
sub
inc
dec
pushf
mov
dec
dec
push
pop
ins
dec
ja
add
cmp
sbb
aam
or
das
adc
add
fadd
jge
dec
pop
push
pop
shl
push
ja
pop
add
sbb
sub
add
(bad)
into
sub
xchg
push
int
cmp
push
mov
dec
les
xchg
nop
sub
xchg
jge
or
pop
rol
rol
xor
jb
cmp
jmp
fnstsw
sub
mov
add
inc
je
and
dec
aas
es
dec
arpl
loopne
dec
repz
push
adc
mov
xor
inc
inc
push
xor
inc
das
jecxz
fld
jle
xor
fwait
jmp
and
mov
jl
or
movs
pop
add
out
xor
add
adc
xchg
dec
gs
xchg
outs
in
test
and
loopne
add
pop
xchg
scas
ret
push
out
or
or
jle
and
push
jne
and
lods
ins
outs
ins
cmps
add
xor
in
ins
add
inc
dec
sbb
mov
inc
jbe
sbb
or
hlt
mov
jmp
cmps
jo
nop
loope
push
push
dec
add
inc
jns
(bad)
in
sub
outs
sub
cvtdq2ps
and
and
sub
and
je
and
pop
aad
call
aaa
movs
popa
xor
push
(bad)
shr
fwait
push
push
(bad)
(bad)
mov
and
movs
test
mov
and
jb
xchg
jge
adc
dec
mov
stos
adc
and
adc
push
push
push
dec
pshufw
and
mov
lods
ins
fist
loopne
push
jmp
or
addr16
popa
and
sahf
cmp
mov
gs
pop
add
hlt
repz
inc
icebp
push
ror
mov
aam
movs
sbb
mov
inc
sub
cli
add
cmps
stc
lds
jnp
mov
add
inc
call
mov
dec
cwde
int3
ins
jmp
daa
out
dec
bound
outs
test
jne
pop
mov
adc
pusha
loope
fs
or
add
fucomip
xor
call
lahf
add
sbb
mov
and
in
mov
adc
add
movs
pop
call
push
cmp
xor
adc
cwde
ja
jle
cmp
jge
push
jns
loop
mov
cmp
test
shr
add
adc
add
or
add
out
inc
xchg
cmp
xor
push
push
push
repz
fst
in
rol
push
movs
ret
enter
(bad)
or
pushf
push
loope
inc
inc
clc
mov
(bad)
push
add
cs
and
add
popf
arpl
les
jnp
pop
retf
into
dec
ss
adc
sub
sub
and
call
adc
(bad)
dec
add
ret
and
gs
sbb
lock
push
push
jno
pop
dec
or
dec
jnp
fistp
add
ss
and
push
mov
clc
movs
sti
cmps
sub
and
stc
retf
mov
mov
mov
in
sub
adc
cdq
not
add
adc
push
popa
shl
bound
add
pop
mov
movs
mov
mov
add
pop
arpl
mov
and
daa
xor
call
call
mov
adc
cmc
cld
mov
sub
mov
sar
ret
neg
xor
mov
pop
lods
test
(bad)
dec
je
arpl
cmp
mov
fcmovbe
arpl
fwait
in
clc
sub
mov
and
scas
sbb
push
fist
imul
and
dec
aad
movs
add
std
or
or
mov
or
push
(bad)
mov
dec
push
push
push
jle
mov
cli
ss
push
mov
stc
into
mov
test
sbb
mov
or
cmp
loope
pop
jge
movs
cmp
dec
mov
lahf
call
fwait
iret
push
pop
inc
xchg
jb
in
add
add
xor
push
sbb
retf
cmp
fstp
gs
cmp
mov
pop
cdq
clc
pop
dec
jns
xlat
and
lock
imul
in
test
cmp
xlat
ins
ret
mov
retf
and
cmp
jb
inc
mov
push
or
jge
add
or
mov
cmp
(bad)
imul
ret
pop
add
movs
enter
repnz
dec
push
pop
inc
imul
or
fst
inc
mov
push
and
mov
popa
mov
nop
hlt
lea
sbb
(bad)
jge
push
cmp
push
in
or
adc
add
adc
xchg
icebp
mov
inc
mov
and
xor
test
sub
or
popa
mov
push
inc
inc
sar
pop
fwait
rol
dec
add
push
loopne
in
cmp
cmp
cmp
ja
inc
and
adc
dec
push
dec
cmps
dec
dec
sub
add
inc
push
and
adc
pusha
mov
inc
mov
enter
(bad)
cmp
push
pop
mov
xor
ss
ja
xchg
arpl
mov
fsub
dec
shr
dec
xor
jno
xlat
mov
push
dec
push
nop
inc
iret
pop
cmp
inc
or
cmp
mov
call
and
sub
dec
push
popa
jge
ins
popf
jo
nop
and
(bad)
mov
push
xchg
mov
and
adc
div
shl
mov
sbb
dec
cmp
lods
int3
nop
push
mov
pop
jecxz
xchg
mov
adc
ror
pop
cmp
push
test
mov
cmp
sub
add
dec
(bad)
popa
inc
ficom
daa
scas
daa
bound
and
js
stc
jo
cwde
push
mov
adc
push
mov
adc
loope
pushf
dec
out
push
inc
enter
or
pop
dec
fwait
out
push
mov
inc
adc
mov
cmc
and
xchg
mov
push
add
pop
pop
jb
pop
cmp
push
repnz
arpl
cmps
test
scas
arpl
scas
jo
or
fild
pop
aas
mov
leave
push
enter
push
in
jle
jmp
xor
sbb
stc
repnz
mov
gs
dec
imul
jle
xor
ins
fsubr
mov
gs
fsub
pop
mov
shl
push
inc
inc
aas
pop
and
sbb
or
push
fisubr
dec
mov
mov
mul
loopne
imul
pop
outs
aaa
push
(bad)
push
mov
das
imul
pushf
mov
ja
and
fs
data16
sbb
adc
fs
nop
inc
adc
sti
pop
jl
xor
js
xchg
mov
stos
inc
add
dec
fs
mov
stos
int3
add
lods
add
lods
adc
add
mov
sbb
xor
aas
clc
xor
ja
sbb
imul
inc
rol
in
and
cmp
mov
in
and
jbe
pop
std
arpl
push
mov
sub
pop
(bad)
in
fisttp
mov
inc
iret
scas
sub
add
inc
dec
sbb
xchg
and
and
loope
push
inc
pop
clc
add
sub
call
cdq
or
or
dec
pushf
xchg
xadd
lods
push
sub
inc
scas
cld
sbb
mov
rcr
lea
jb
push
or
les
xor
xchg
pop
sahf
arpl
or
push
xchg
dec
cmp
loopne
push
mov
xor
lock
adc
adc
dec
icebp
cmp
inc
push
call
cwde
lea
add
pop
jle
inc
sbb
push
jne
cmp
push
leave
int3
imul
jbe
push
mov
imul
dec
or
lock
or
sar
mov
out
inc
push
test
xchg
mov
mov
mov
test
hlt
lds
ret
mov
jnp
cmp
pop
dec
lock
xchg
pop
ds
jns
add
push
mov
push
mov
mov
sahf
lods
je
jb
call
outs
(bad)
mov
add
fs
pushf
(bad)
fsub
in
loope
or
sub
lods
(bad)
addr16
xor
or
or
or
cwde
jbe
adc
lock
dec
ss
ss
ja
adc
in
inc
enter
aaa
xor
sbb
or
popa
mov
and
enter
add
cmp
mov
nop
inc
push
jp
jb
jle
fiadd
inc
fimul
add
test
repnz
or
or
and
cs
mov
imul
les
or
or
cwde
push
das
test
adc
loopne
mov
and
cmovl
adc
in
rcl
add
xor
adc
hlt
sbb
adc
stos
dec
popa
add
add
mov
clc
cmp
inc
or
xor
xchg
or
add
(bad)
adc
call
adc
push
dec
cmp
mov
gs
cmps
adc
les
xchg
jl
xor
(bad)
aaa
movs
add
jb
mov
push
imul
xchg
movs
push
xchg
dec
jo
data16
shl
(bad)
sub
or
lods
rcl
push
add
arpl
es
sub
and
inc
add
sub
out
sub
mov
pop
mov
neg
das
fisttp
les
mov
add
das
loopne
mov
(bad)
dec
pop
out
rcl
mov
fs
xchg
mov
xor
pop
data16
xor
xchg
inc
mov
mov
or
(bad)
mov
pop
call
into
retf
mov
push
hlt
in
nop
retf
in
clc
call
movs
jb
add
add
hlt
or
cmps
and
pop
scas
(bad)
sbb
xor
cmp
sbb
mov
jo
mov
mov
xor
cmps
fwait
sbb
xchg
popa
sub
add
sbb
or
jno
hlt
pushf
test
retf
idiv
mov
and
push
movs
jb
push
das
rcl
shl
adc
inc
push
mov
inc
push
mov
daa
xchg
das
pop
mov
mov
adc
retf
xchg
std
sbb
scas
sub
dec
push
xchg
in
ret
push
imul
pop
mov
addr16
push
movs
add
les
mov
das
mov
mov
or
ret
repz
enterw
pop
(bad)
out
xchg
out
movs
and
lock
dec
nop
rcl
ss
outs
sub
and
outs
clc
push
cdq
xchg
inc
cld
call
dec
add
add
adc
cld
int
or
sub
xchg
cmp
or
pop
or
sbb
jmp
or
xchg
mov
sahf
cmc
mov
xchg
out
xchg
outs
push
xchg
sbb
sbb
stos
cs
aad
xchg
sbb
retf
in
jl
lock
hlt
in
pop
cs
clc
call
jb
mov
(bad)
mov
cmp
in
inc
aaa
inc
(bad)
nop
mov
call
popf
or
push
add
out
xchg
(bad)
xor
dec
jne
dec
jne
sub
pop
pop
outs
add
rol
lods
lods
inc
int
aaa
je
add
push
cwde
add
or
sbb
cmps
push
shl
mov
cmp
sti
push
pop
pop
adc
mov
jg
sub
retf
dec
dec
jl
mov
xchg
mov
popa
test
fisubr
lock
pop
add
xor
cwde
jbe
sti
or
or
add
add
add
sti
in
mov
stos
add
dec
adc
xchg
mov
push
add
sbb
adc
out
xchg
mov
and
inc
fld
push
dec
inc
dec
push
sbb
adc
dec
(bad)
fdivr
or
push
sub
fwait
inc
jmp
jbe
cmp
jbe
mov
adc
xor
adc
xor
push
ficomp
xchg
add
adc
aas
iret
add
(bad)
adc
outs
pusha
inc
mov
sub
popa
push
push
test
cmp
in
inc
rcr
lods
repnz
dec
pop
js
and
inc
push
cld
jns
mov
stos
jl
mov
mov
test
test
and
test
fs
adc
add
imul
xor
dec
sub
mov
pop
xchg
xchg
mov
out
and
xor
or
dec
ficom
xor
xchg
adc
pop
(bad)
or
dec
xchg
xchg
or
popf
mov
mov
add
or
jmp
or
push
add
mov
lock
sbb
mov
and
ret
sahf
and
jnp
adc
popa
aam
hlt
aad
jge
inc
sub
push
fmul
cwde
ret
mov
xchg
outs
bound
adc
jl
add
mov
cmp
mov
lahf
sub
sbb
jp
or
sar
outs
pop
nop
(bad)
push
ret
jmp
and
shl
int3
mov
repnz
int3
xchg
pop
pusha
push
in
fmul
leave
leave
xchg
fcomp
fmul
leave
xchg
sbb
rcl
leave
xchg
sbb
aam
enter
ret
int3
xchg
int3
dec
aam
dec
or
add
dec
and
ret
(bad)
sar
inc
ja
fdiv
jne
test
jg
sbb
push
into
pop
mov
xor
dec
sbb
mov
xor
adc
jae
jb
mov
sub
fcomp
inc
push
pop
loopne
mov
mov
cmp
pop
and
shl
test
je
fs
xchg
test
cmp
push
mov
cmp
pop
std
mov
pop
pop
sub
stos
ror
dec
add
dec
jmp
xor
or
mov
loop
jmp
(bad)
les
jo
pop
je
inc
inc
into
dec
enter
js
lock
mov
lods
inc
in
mov
adc
fcom
add
push
dec
mov
cmp
add
and
cwde
adc
add
xor
out
jp
fcom
or
add
loopne
movs
ret
add
mov
add
mov
or
icebp
inc
pop
xchg
mov
cmps
mov
xor
mov
and
dec
adc
les
cwde
cmps
push
mov
or
mov
jns
retf
and
mov
sbb
add
imul
add
xor
jae
add
in
and
adc
cmp
xchg
mov
mov
js
push
xchg
sub
adc
jns
push
pushw
xor
adc
push
or
cld
test
test
pusha
dec
dec
cmp
and
or
add
into
mov
add
fist
in
jnp
jmp
cmp
push
or
jno
pop
adc
dec
test
push
sbb
pop
test
cmp
push
je
mov
inc
fbld
ss
imul
adc
mov
xchg
adc
or
add
and
xchg
xlat
add
gs
jo
add
inc
loope
adc
cmp
ja
aas
xor
add
sahf
out
sahf
sub
js
shl
push
clc
jno
je
imul
inc
push
fs
call
add
sbb
in
mov
jl
in
xor
jl
jns
loopne
fsub
ds
js
add
movs
rcr
or
mov
aam
aaa
(bad)
or
mov
cmp
int3
xor
or
push
or
jge
dec
or
xor
xchg
rol
xchg
inc
sahf
pop
bound
or
mul
(bad)
push
dec
inc
lea
jb
lods
inc
mov
enter
and
test
shl
xor
add
test
or
mov
xchg
sbb
ins
push
cmp
add
rcl
or
(bad)
outs
in
nop
jl
fwait
idiv
nop
and
imul
push
jno
push
jno
push
pop
in
hlt
and
lock
lock
in
xchg
or
add
xor
enter
pop
pop
mov
sub
int
cdq
rcr
push
mov
xor
test
fadd
aam
or
adc
leave
xchg
sbb
or
gs
fcom
add
xor
inc
or
test
mov
jp
ins
xchg
rcl
push
push
imul
out
mov
xchg
lahf
mov
mov
sub
fs
std
neg
sbb
adc
ror
loop
std
dec
and
ins
dec
jmp
pop
dec
ins
add
inc
jecxz
cld
inc
imul
setb
xchg
movs
add
and
stos
nop
cmp
xchg
dec
lea
xor
pop
lea
and
xchg
out
popf
inc
mov
mov
xchg
and
xlat
jne
add
jmp
xchg
and
bound
add
push
jae
(bad)
adc
sub
add
push
add
mov
aaa
push
aaa
xor
aaa
push
adc
popa
ror
cmp
and
test
dec
or
xor
and
test
iret
add
mov
movs
xor
stc
fdivr
mov
adc
das
adc
mov
push
stc
add
test
stos
shl
fwait
pop
inc
push
sar
add
lock
rcl
jle
pop
in
ins
jmp
inc
add
mov
clc
adc
ins
aam
add
or
xor
stc
mov
scas
mov
scas
call
and
and
call
adc
add
in
cmp
add
cdq
push
nop
arpl
sbb
inc
xor
or
push
xor
inc
pop
pop
xchg
arpl
mov
inc
cmp
xor
inc
push
push
lock
mov
xchg
and
pop
lock
xchg
xlat
dec
lea
push
adc
iret
mov
jnp
fsubr
aaa
jl
or
and
(bad)
jb
(bad)
lock
fdivp
xor
xlat
std
and
xchg
outs
(bad)
iret
ins
(bad)
(bad)
push
jg
lea
stos
shr
push
stos
jno
repz
mov
enter
lods
in
dec
les
jno
repz
shr
push
in
add
mov
xchg
add
mov
pop
xor
out
arpl
sahf
cmp
and
hlt
iret
xchg
je
xor
mov
scas
sub
aaa
mov
adc
ds
or
pop
add
sbb
jns
test
mov
xchg
add
sbb
mov
bound
and
lock
lods
lods
push
aas
daa
cmovae
add
adc
(bad)
outs
mov
addr16
in
inc
add
lds
mov
inc
and
add
enter
lock
lods
push
dec
fisub
dec
shl
sbb
inc
mov
xchg
and
and
inc
push
stc
inc
jo
mov
bound
bnd
jmp
das
add
retf
jl
pop
and
jg
or
(bad)
into
dec
mov
enter
sbb
sub
xor
xchg
loopne
pop
inc
stos
or
out
in
sub
cld
(bad)
test
gs
rol
sahf
data16
jmp
push
adc
lock
cmp
pusha
and
pop
repnz
push
loopne
dec
fsubr
fdiv
pop
pop
sub
nop
dec
add
js
outs
and
ror
and
or
or
xchg
enter
xchg
or
rol
add
test
test
mov
or
and
jl
and
mov
fild
xchg
mov
mov
dec
cmps
nop
xchg
mov
mov
inc
push
sub
lods
lods
lea
sbb
inc
mov
sub
mov
test
movs
test
adc
or
cmc
mov
inc
out
iret
cs
cwde
mov
mov
stos
outs
daa
push
add
and
and
outs
or
push
sti
dec
mov
mov
pop
xor
fwait
push
push
lods
in
pop
in
push
cmp
movs
fwait
add
dec
and
inc
enter
xchg
test
call
cmp
or
cmp
jne
adc
pop
pop
daa
cmc
cmps
mov
and
add
movs
cmp
sbb
mov
push
mov
jl
pop
xor
adc
push
sub
test
movs
cmp
dec
mov
xor
mov
pop
mov
sub
(bad)
loopne
sahf
adc
lock
and
nop
popf
inc
inc
and
sub
leave
in
(bad)
popf
dec
shl
sahf
sahf
call
mov
movs
mov
in
call
movs
mov
fcom
fcomp
add
aam
add
adc
mov
sub
enter
dec
push
imul
movs
pop
inc
retf
jmp
xor
mov
or
daa
and
and
adc
xor
mov
sbb
jo
push
mov
rcr
cmps
(bad)
jmp
pushf
sub
sub
in
cmp
in
mov
cmp
lock
dec
sbb
or
push
pop
call
pop
jns
lods
dec
ss
mov
stc
inc
test
sub
jmp
stc
sbb
inc
pop
jnp
cld
mov
add
mov
popa
mov
cli
(bad)
mov
jmp
mov
enter
push
and
mov
movs
push
movs
xor
ins
xor
fwait
pop
push
jg
adc
xchg
sub
mov
inc
scas
sbb
rcr
jl
(bad)
mov
nop
jl
mov
rol
dec
dec
mov
cmp
sub
xlat
add
and
sbb
push
loop
mov
pop
mov
adc
add
aad
add
ss
mov
icebp
arpl
pop
cmp
adc
adc
xor
mov
pop
in
mov
adc
div
(bad)
and
pop
ret
or
scas
jmp
cwde
adc
gs
ds
add
add
stc
push
push
adc
mov
outs
sbb
retf
add
inc
loope
jns
(bad)
cmp
aam
push
add
loope
push
fild
jecxz
enter
add
jl
jo
dec
jae
test
inc
stc
jo
inc
and
mov
imul
sbb
push
add
add
and
sub
in
xor
or
push
cmp
lock
cmps
lock
and
xor
jns
enter
cmps
lock
(bad)
and
xor
add
add
add
add
dec
es
pop
fwait
push
jnp
and
or
loop
and
mov
sub
adc
cs
loopne
mov
pop
loopne
dec
or
sbb
inc
test
test
inc
fcmovu
mov
push
push
ja
cdq
add
out
pop
push
xchg
sbb
ja
(bad)
fsubr
and
inc
das
rol
jg
jge
and
ret
es
jl
add
push
sub
inc
sbb
xor
mov
lea
add
pop
push
cmps
jo
ins
jecxz
fcom
lock
adc
loope
pop
mov
mov
scas
setno
xor
dec
lods
adc
sub
test
add
aam
nop
or
data16
xchg
xor
add
repnz
push
inc
xchg
pop
adc
retf
ins
stos
mov
push
sbb
rol
inc
mov
add
lods
pop
push
test
jno
or
dec
fs
and
xchg
inc
les
jns
adc
dec
in
mulps
scas
dec
lods
movs
scas
fiadd
and
mov
scas
mov
shl
cmps
push
lock
push
mov
mov
adc
imul
inc
cmps
pop
xor
in
dec
outs
adc
adc
cmps
inc
mov
call
push
xchg
inc
xchg
movs
cmps
or
fimul
rcl
int3
(bad)
or
ja
rol
in
inc
and
inc
sahf
std
std
psubusw
loope
add
push
imul
xor
je
in
movs
mov
add
scas
and
popa
sbb
pop
not
inc
and
ja
xchg
sbb
aas
cmp
(bad)
push
and
add
hlt
jno
xor
add
lahf
ror
ja
jmp
cmp
fmul
push
cmp
in
je
adc
es
push
mov
xor
push
dec
and
or
add
xchg
mov
or
sub
cmp
add
iret
push
cmps
ret
(bad)
or
xchg
les
fs
or
lea
icebp
and
adc
pop
push
loop
xchg
loop
or
mov
(bad)
aas
repnz
xor
lock
cli
or
xchg
xchg
stc
add
movs
pop
inc
mov
fcmovnu
sub
push
pop
aam
test
or
lea
xlat
add
xor
jmp
pop
xchg
jp
ss
or
pop
mov
jmp
dec
add
xchg
inc
push
sbb
push
ror
xor
adc
mov
or
int3
or
test
enter
pop
fmul
es
mov
addr16
dec
loopne
fwait
test
xor
fisttp
popa
loopne
mov
outs
or
dec
lock
sub
rol
push
add
mov
sbb
push
adc
loop
out
test
or
test
inc
mov
cdq
enter
add
lds
(bad)
dec
add
lahf
pop
je
mov
hlt
cmp
xchg
dec
and
and
push
xor
es
mov
(bad)
call
add
jbe
(bad)
mov
jge
popa
dec
inc
adc
cmps
lds
pop
cmps
mov
rol
div
push
mov
and
les
jp
cmps
lock
in
sub
and
mov
mov
ins
inc
pushf
cld
mov
jnp
pop
scas
push
sbb
mov
pop
pop
xchg
arpl
jmp
push
adc
jmp
pop
daa
pop
rcl
adc
adc
lods
dec
push
add
pop
arpl
fcomp
setle
push
xchg
add
jle
lods
and
xor
dec
add
test
aad
rcl
enter
push
push
jg
fdivr
sar
push
jge
addr16
dec
or
das
ucomiss
mov
inc
mov
stos
nop
aas
add
mov
dec
inc
push
and
mov
add
dec
pop
mov
hlt
mov
sbb
ins
xchg
cmp
xor
or
xor
add
or
add
pop
or
lock
inc
inc
mov
adc
ins
ins
sub
adc
daa
mov
retf
xchg
push
pop
and
int3
mov
pop
dec
adc
mov
mov
ss
lds
or
dec
mov
clc
mov
rol
nop
mov
cmp
adc
dec
cmp
xlat
dec
xor
mov
mov
stos
mov
pusha
and
(bad)
lea
or
add
push
sbb
jo
adc
nop
inc
cmp
mov
jge
jne
pusha
fs
pop
das
lock
xor
ror
repnz
test
sub
pop
jae
sbb
jl
call
aas
pop
ret
ret
je
dec
inc
leave
sbb
push
ficom
mov
xor
sub
mov
pop
xor
fist
inc
fwait
and
test
and
popa
ss
mov
or
sbb
popf
inc
or
in
and
and
cld
aam
mov
and
fs
fwait
mov
push
adc
push
ret
es
jmp
xor
retf
clc
xchg
sub
mov
fwait
xchg
sbb
dec
js
addr16
xchg
xchg
aas
cwde
mov
sbb
cwde
(bad)
and
xor
jne
ds
xor
stc
inc
mov
sbb
lods
addr16
add
out
push
mov
sti
jecxz
jmp
cmp
adc
adc
movs
and
clc
cmp
mov
lods
cmp
shl
rcl
pop
pop
xchg
push
cmp
xor
xchg
rcl
mov
cmp
sub
push
push
mov
movs
push
pop
cmps
xchg
fsubr
push
mov
sub
mov
inc
adc
pop
mov
jl
ret
xor
mov
lds
xchg
bnd
sub
mov
inc
push
sbb
imul
mov
fwait
xchg
inc
das
add
mov
xor
xor
sbb
sbb
add
ss
sbb
push
inc
ror
repnz
cdq
jae
mov
or
(bad)
push
inc
sbb
xchg
and
cmp
imul
inc
or
(bad)
mov
mov
sbb
adc
inc
or
(bad)
lahf
add
pop
ret
js
sbb
dec
inc
sub
jmp
inc
dec
or
xor
aas
mov
dec
xor
dec
inc
bound
dec
fstp
push
xchg
cmp
jnp
cwde
push
ss
sub
pop
push
dec
inc
push
mov
mov
stos
lea
imul
cmps
xor
inc
xchg
test
push
add
pop
jns
add
mov
inc
shl
enter
pop
mov
add
bswap
and
dec
lds
ret
test
repnz
xchg
test
(bad)
sub
xor
add
push
test
cmps
test
push
inc
add
dec
sub
add
nop
pop
mov
push
mov
es
sub
dec
adc
cmp
cmp
ds
mov
pop
pop
pop
inc
pop
mov
call
ror
dec
scas
xchg
mov
fisttp
pushf
jno
lock
mov
loope
jbe
test
sbb
test
push
das
mov
add
push
(bad)
bound
mov
xchg
push
xchg
arpl
(bad)
push
or
dec
(bad)
sbb
add
xlat
mov
push
out
pop
or
ins
sbb
push
leave
frstor
xor
je
mov
xlat
inc
mov
aas
gs
aaa
ins
cmps
inc
aas
inc
mov
adc
aas
out
sbb
fld
dec
add
movs
mov
cli
and
add
adc
outs
or
shl
or
and
out
push
mov
push
stos
shr
mov
pop
js
ret
xlat
lock
adc
shl
pop
xchg
ror
mov
inc
adc
inc
not
xor
push
pop
xchg
jb
add
movs
aaa
rol
or
scas
sub
mov
cmps
push
call
jne
mov
push
movs
imul
push
xacquire
ret
jge
pop
hlt
loop
add
cmp
xchg
jo
and
les
sub
xchg
lods
or
inc
cmp
add
sub
inc
lods
aaa
sub
adc
cwde
dec
mov
ret
inc
cld
mov
cmps
stc
fdivr
cmp
xor
dec
mov
push
mov
mov
pop
call
add
jmp
xchg
test
out
inc
push
mov
sahf
or
loope
cmp
mov
jmp
addr16
mov
inc
adc
lock
mov
sub
in
aas
ins
jmp
out
dec
or
sub
cld
mov
call
inc
hlt
movs
or
mov
cmp
add
imul
and
out
xor
outs
push
cmp
jne
dec
jne
xchg
cmps
test
ret
repz
sub
add
idiv
xor
retf
les
ret
mov
sbb
and
jo
pop
mov
add
sbb
xchg
and
jno
add
and
fst
mov
mov
lods
xor
enter
les
mov
ficomp
fistp
int3
fist
data16
adc
call
push
xchg
push
(bad)
popa
mov
dec
in
adc
movs
shl
loopne
imul
sub
outs
test
adc
fadd
jns
sbb
adc
popa
mov
and
lds
inc
jecxz
fdiv
push
movs
or
imul
cmp
cmp
ins
outs
outs
push
cmp
cmp
push
push
push
push
cmp
cmp
push
push
push
pop
cmp
cmp
pop
pop
pop
pop
cmp
cmp
pop
pop
pop
inc
add
inc
cmp
(bad)
out
xchg
add
pop
loop
add
xchg
sbb
jle
add
imul
sub
xchg
or
adc
cli
ficomp
pop
xor
cmps
jbe
and
out
pop
add
mov
and
fimul
shl
mov
push
push
outs
and
sub
cmp
aaa
iret
arpl
xor
pop
scas
das
pop
jae
punpcklwd
adc
(bad)
push
or
mov
pop
pop
push
xor
mov
loope
imul
dec
xchg
out
ficomp
enter
mov
sbb
imul
fwait
dec
cmps
push
lahf
or
push
adc
mov
outs
mov
scas
jno
push
lock
adc
sbb
add
jg
and
ins
je
push
aas
pop
sbb
pop
pop
cs
push
xor
outs
mov
and
rol
and
xchg
ja
dec
push
push
push
ja
popa
jge
test
mov
lods
fs
push
lahf
push
inc
add
adc
or
lods
ins
fcmovnbe
pop
or
(bad)
mov
xor
add
or
fistp
inc
add
xchg
mov
lahf
lea
cmp
mov
mov
mov
les
pushf
mov
pop
sbb
sbb
xor
adc
sbb
mov
shl
mov
xor
inc
es
sub
cmps
test
or
test
div
imul
cmp
dec
or
and
pop
push
xor
test
aaa
and
retf
inc
retf
imul
sbb
dec
cmovae
or
ret
jmp
mov
dec
lahf
pop
fwait
dec
sub
or
inc
or
inc
imul
mov
out
jg
enter
imul
pop
in
mov
aaa
xor
inc
adc
mov
ja
sub
int3
inc
inc
add
push
leave
inc
ins
retf
das
imul
add
fadd
inc
inc
or
push
adc
jb
and
out
dec
inc
mov
rcl
ficomp
mov
(bad)
fimul
xchg
add
sub
outs
ss
or
(bad)
imul
movnti
outs
push
js
pop
aaa
jo
inc
pop
das
scas
sub
adc
daa
outs
iret
or
mov
ret
sub
or
add
add
fcmovnbe
dec
xor
xor
cmc
jg
push
call
fsub
mov
pop
add
ss
lahf
mov
push
pop
add
inc
add
scas
sbb
add
jmp
aaa
push
add
jbe
imul
adc
nop
imul
adc
jns
fidiv
or
ins
inc
dec
cmp
outs
jmp
mov
ss
mov
rcr
loope
add
xor
xor
cmps
adc
push
mov
or
aaa
lahf
inc
out
jne
xchg
jb
xor
fwait
lahf
sbb
je
or
inc
sbb
or
add
jb
pop
add
inc
cmps
lahf
mov
push
(bad)
or
rol
data16
mov
mov
aaa
dec
adc
bound
test
int3
xor
sub
sbb
popf
cdq
xor
out
iret
aaa
sub
mov
fcmovb
xor
ss
xor
cs
ins
xor
out
fbld
mov
bound
pop
cmp
mov
(bad)
aaa
mov
xor
cs
pop
ins
jae
aaa
xchg
(bad)
or
(bad)
arpl
bound
pop
aaa
stos
shr
mov
push
jb
outs
jae
div
mov
mov
test
sub
ficomp
pop
iret
inc
mov
push
xchg
fcmovnu
aas
adc
jg
pusha
loopne
enter
or
bound
and
aas
cmp
push
inc
inc
(bad)
cmovg
dec
or
jg
push
xchg
xor
or
push
daa
xlat
xor
and
stos
rol
fisttp
(bad)
out
cmps
ss
pop
adc
xor
or
sbb
pop
xor
dec
lds
mov
sqrtps
cmp
pop
mov
addr16
mov
push
retf
xchg
iret
outs
cmp
dec
out
sub
popa
ins
pop
adc
mov
aaa
push
mov
scas
sbb
mov
inc
xor
cmp
and
test
jg
push
rcr
pop
xor
xor
inc
mov
pop
ja
xchg
mov
add
pop
mov
and
in
dec
add
pusha
(bad)
and
jg
stos
mov
retf
stos
pusha
stos
adc
pop
ss
adc
aaa
pop
add
mov
pop
aas
(bad)
aaa
shl
outs
fbld
push
les
cmp
or
ror
cmp
dec
xor
mov
cmp
ss
sub
ja
push
bound
aaa
inc
loopne
dec
mov
push
sub
cmp
sbb
add
pop
sbb
push
mov
fbstp
inc
xchg
or
arpl
jle
xor
(bad)
jbe
cmp
jo
rep
dec
bound
xchg
xor
movaps
lods
or
push
push
inc
cmps
push
in
cmp
cmp
push
outs
cmps
test
fcom
sub
scas
loopne
pop
or
xor
xor
mov
ja
ja
loopne
cmp
outs
ins
and
outs
sbb
pop
add
pop
cmp
js
ja
invd
cmps
ss
xchg
sbb
xor
pop
or
and
ss
pop
sbb
mov
mov
syscall
stos
inc
xor
ret
pop
or
movs
pusha
push
or
dec
xchg
mov
daa
adc
mov
iret
mov
inc
call
jbe
iret
icebp
xchg
jb
out
push
(bad)
int
sub
push
mov
or
cmps
cmova
adc
aaa
or
mov
mov
or
xor
dec
xor
cmp
dec
out
sub
daa
push
xor
dec
fstp
sub
mov
xor
arpl
sub
xlat
adc
push
jbe
mov
adc
ja
int
les
push
mov
mov
cmp
add
in
loopne
rdpmc
sbb
ins
xchg
xor
(bad)
xor
push
enter
xor
jo
jb
xor
enter
xlat
xor
ins
add
adc
(bad)
mov
xor
sub
push
xlat
push
xlat
inc
es
mov
les
xchg
(bad)
test
mov
cmps
dec
mov
xchg
adc
mov
xor
or
xor
loopne
or
inc
push
push
popa
push
add
ja
popa
es
push
mov
inc
retf
mov
ss
ja
mov
mov
and
xor
xor
xlat
inc
stos
in
mov
push
xor
aas
iret
retf
xor
mov
xlat
sub
fs
aaa
dec
imul
push
stos
dec
retf
xor
push
movs
push
icebp
cmps
cmp
in
add
test
adc
mov
inc
imul
in
ins
mov
add
add
leave
push
(bad)
dec
pop
aaa
aaa
pop
and
adc
jmp
aas
add
outs
lahf
push
and
cmp
or
stos
pop
push
cmp
cmp
aas
push
mov
lahf
lahf
cmp
add
adc
aam
out
sub
sbb
jb
cdq
push
cmp
out
mov
cmp
add
sub
cmp
sub
add
daa
in
les
scas
and
pop
fwait
mov
jae
scas
stos
lahf
sahf
sar
or
data16
loope
call
xor
add
push
mov
daa
jns
jne
rol
cmp
aad
pop
push
lods
aam
xchg
xchg
inc
out
sub
pop
adc
fiadd
inc
jmp
inc
ror
(bad)
pop
push
pop
adc
xlat
iret
or
cmps
dec
mov
xor
xor
or
sub
test
inc
mov
das
add
xor
fld
add
jae
mov
jbe
popa
push
jo
push
adc
cwde
lea
sub
and
shl
pop
das
mov
ret
push
aaa
(bad)
aas
dec
leave
aam
push
cmp
and
cmp
sub
out
sbb
cdq
xchg
xor
imul
(bad)
pop
arpl
stos
ins
test
aas
out
mov
inc
add
push
das
js
jne
push
or
mov
add
jne
mov
cmc
out
add
xor
push
das
jg
push
pop
ins
inc
xlat
or
adc
daa
xor
fwait
or
cmp
out
sti
cmp
popa
pop
mov
enter
inc
or
cmp
jle
pop
xor
mov
fimul
push
fs
pop
add
cmp
sbb
push
mov
xor
mov
pusha
xchg
mov
jecxz
pop
mov
imul
add
adc
pusha
push
or
mov
scas
or
add
sub
or
jmp
imul
mov
push
adc
div
outs
mov
dec
(bad)
dec
jmp
pop
pop
call
not
inc
pop
pop
call
aas
or
out
sar
inc
cmp
pop
stos
and
in
push
aaa
xor
dec
pop
imul
inc
jmp
ja
lea
outs
test
push
inc
loop
idiv
jae
xchg
xor
into
pop
outs
(bad)
(bad)
mov
bound
xor
(bad)
mov
(bad)
push
inc
xlat
dec
mov
xlat
out
xor
or
inc
daa
xor
jg
and
mov
xor
xchg
push
mov
imul
pop
or
bound
mov
dec
aas
out
test
aaa
addr16
sub
loope
pop
jo
outs
loop
push
dec
shl
xlat
xor
les
xchg
out
pop
in
(bad)
outs
ja
arpl
inc
ja
dec
push
(bad)
aas
push
dec
outs
xchg
inc
ds
(bad)
xor
xor
fimul
ret
ss
sub
dec
fisttp
push
sar
ja
je
adc
inc
scas
ins
mov
pusha
adc
jecxz
adc
bound
sbb
mov
push
das
cmp
cmp
push
xor
xor
outs
cmps
pop
and
(bad)
iret
xchg
push
inc
enter
out
xor
sbb
push
xor
push
ror
aaa
or
mov
dec
sub
or
mov
cmp
cmp
(bad)
mov
sbb
inc
or
cmp
xor
minps
mov
div
pop
or
inc
inc
jnp
mov
mov
jb
and
xchg
gs
xor
in
in
xor
push
dec
mov
xchg
mov
xor
push
mov
rol
(bad)
inc
aaa
mov
pop
jb
rcr
aaa
ret
scas
mov
jnp
in
popa
xor
adc
sbb
addr16
scas
xor
mov
div
loopne
or
sub
cdq
or
daa
dec
pop
loop
cmps
push
(bad)
cmp
call
xchg
or
or
pop
addr16
mov
adc
lods
sbb
inc
cmp
sbb
daa
aaa
xchg
or
stos
test
xchg
aaa
jle
mov
push
pop
mov
xlat
rcl
ret
pop
xor
daa
push
add
ficom
fbstp
dec
and
imul
adc
dec
cmps
xchg
leave
adc
iret
xor
imul
sbb
inc
add
xor
xchg
xor
or
or
dec
aaa
fsubr
es
inc
scas
fsubr
dec
sub
xor
mov
mov
dec
push
in
adc
cdq
pop
stos
sbb
xor
in
xor
xchg
iret
xor
cmp
xor
xor
scas
in
mov
adc
ss
jb
inc
ss
loopne
stos
mov
sub
cmp
pop
in
dec
mov
cmp
addr16
pop
and
aaa
adc
and
test
adc
ucomiss
idiv
jne
adc
pop
dec
xor
jmp
adc
mov
jb
cmp
and
xchg
xchg
in
shr
inc
adc
cmp
inc
enter
mov
cmps
outs
mov
xor
xchg
mov
mov
fwait
push
or
mov
pop
dec
cmps
call
mov
mov
mov
in
mov
mul
fisubr
aaa
test
xor
push
pop
and
push
dec
xchg
(bad)
movups
ins
arpl
and
cmps
push
pop
push
jo
push
mov
inc
outs
dec
and
in
mov
lahf
mov
addr16
pusha
lds
lahf
inc
rcl
out
out
dec
cmp
shr
push
inc
push
dec
push
lahf
sbb
cmps
inc
sbb
or
pop
xchg
push
jb
jl
dec
add
inc
leave
push
push
inc
add
mov
xchg
(bad)
push
push
mov
push
xor
push
push
leave
pop
add
mov
push
push
out
mov
dec
retf
push
or
mov
(bad)
out
and
leave
adc
push
imul
dec
out
rcl
idiv
outs
inc
mov
pop
cmps
dec
add
fs
imul
mov
mov
mov
xchg
add
push
sbb
aad
(bad)
fbstp
pop
call
cmp
das
sub
mov
xor
rol
add
inc
inc
nop
push
sti
rol
cmp
sbb
loopne
xchg
xchg
inc
jo
and
cmp
pop
adc
dec
aas
inc
aas
fs
adc
pop
adc
sbb
sub
sub
rcl
daa
inc
push
mov
pusha
daa
cmp
adc
sbb
jo
sub
xor
inc
jb
xor
scas
test
inc
xchg
adc
cmp
xor
push
in
imul
adc
push
cmps
addr16
sbb
push
leave
xor
xor
add
add
adc
jb
(bad)
and
leave
adc
das
pop
adc
xor
imul
xchg
and
and
dec
xor
cmp
cmp
setb
add
or
aaa
dec
push
xchg
stos
aaa
aaa
pop
cmp
nop
pop
jne
cmp
add
inc
pop
sub
jb
outs
retf
out
and
leave
inc
cmp
movs
jae
sbb
jae
mov
lock
out
mov
dec
iret
ret
and
ja
mov
jg
dec
bound
dec
sbb
aaa
mov
popa
inc
(bad)
fwait
aas
sbb
jo
aaa
sub
lods
inc
sbb
pop
aas
ss
push
xor
aaa
enter
data16
dec
xor
pop
adc
sub
sbb
out
pop
aaa
and
add
les
loopne
xor
mov
adc
cmp
in
iret
xor
sbb
lods
push
mov
jg
(bad)
les
or
pop
sub
aaa
add
stos
xor
mov
jb
outs
and
inc
lods
ficom
xchg
cmp
das
or
sub
xchg
fcmove
xchg
adc
inc
adc
inc
mov
push
push
push
iret
mov
je
ins
fisub
inc
inc
add
xchg
and
test
push
fmul
pop
(bad)
call
jnp
rcl
pop
adc
aaa
or
pop
adc
jno
jecxz
inc
(bad)
and
xchg
aaa
je
xor
popa
pop
adc
ficomp
iret
xchg
imul
or
imul
jnp
sub
mov
mov
push
in
adc
sbb
ja
jae
inc
add
cmp
adc
add
push
mov
adc
dec
mov
je
repz
ins
in
or
iret
leave
inc
enter
outs
adc
add
add
pop
mov
push
and
mov
iret
xor
pop
push
pop
push
rol
adc
outs
inc
sub
mov
pop
ins
push
pop
jae
xchg
and
mov
nop
add
sbb
cmp
out
xchg
mov
movs
mov
xor
and
dec
bound
mov
xor
(bad)
jmp
jg
xor
mov
dec
push
add
jmp
dec
int
mov
add
adc
and
dec
mov
adc
or
cld
adc
aad
sub
lods
adc
shl
outs
mov
inc
sbb
or
xchg
rcl
(bad)
scas
aas
cmp
ds
outs
xor
dec
dec
scas
or
push
push
das
retf
sub
jg
push
inc
daa
push
lahf
bnd
dec
pop
mov
or
push
xchg
pop
je
pop
mov
out
inc
inc
ret
ror
mov
and
sar
cmovae
adc
xor
aaa
push
mov
bound
add
cmp
(bad)
lahf
imul
fwait
pop
dec
dec
dec
dec
and
dec
or
dec
add
das
add
mov
push
xchg
sub
imul
(bad)
arpl
xchg
pop
fs
pusha
add
inc
or
mov
dec
iret
push
mov
pop
jbe
lahf
or
inc
das
or
aad
adc
jb
jb
xor
jb
jb
xor
jb
jb
ss
add
xchg
inc
and
jo
add
xor
cwde
pop
sub
push
out
add
cmp
pop
add
pop
adc
or
and
test
sub
add
or
xchg
inc
cmp
pusha
jmp
inc
dec
xor
mov
add
adc
leave
fmul
jno
ret
(bad)
cmp
retf
inc
cmp
jmp
push
imul
xchg
test
push
jp
loope
(bad)
retf
cmp
jge
xchg
in
cmp
or
or
lods
jae
xlat
je
inc
jle
sub
sbb
or
lods
add
cmp
inc
fs
add
imul
mov
xchg
pop
or
mov
outs
(bad)
pop
add
adc
xor
sahf
loope
push
mov
imul
jne
push
cmp
sbb
ins
movs
cmp
sbb
jne
jne
ja
jno
rcr
shr
shr
push
ficomp
ror
loop
jne
mov
adc
imul
arpl
fcomp
test
rol
fadd
dec
in
rol
or
inc
popa
ror
xor
or
mov
xlat
sahf
enter
clc
xchg
jne
jmp
jno
jg
fild
dec
push
xor
jnp
xor
xor
std
ja
outs
adc
sahf
dec
loope
push
mov
push
xor
ret
cmp
dec
outs
mov
std
(bad)
inc
pop
shl
sub
jg
sar
or
inc
and
adc
and
popf
in
aas
adc
inc
sub
jb
inc
xchg
inc
inc
fwait
and
cld
into
adc
xchg
cld
inc
dec
jne
popa
movs
in
adc
(bad)
xor
adc
icebp
sub
mov
adc
cs
dec
or
mov
loop
sub
pop
mov
inc
ins
cdq
or
adc
shl
inc
push
adc
mov
push
or
or
adc
inc
add
ss
sub
aas
fsubr
pop
inc
pop
push
mul
jecxz
repnz
and
inc
dec
movs
sub
or
adc
push
mov
push
and
push
jmp
aad
adc
fadd
test
aam
cld
mov
in
add
rol
sar
jo
ss
sbb
fsubr
cmps
loopne
dec
mov
mov
ror
cmp
inc
sti
test
aaa
daa
scas
cmp
call
clc
jge
enter
leave
inc
jecxz
ficom
dec
les
loope
push
lahf
(bad)
hlt
xor
adc
sub
or
retf
push
jbe
sub
les
mov
daa
and
inc
xchg
dec
in
or
mov
and
xchg
and
aas
or
idiv
push
jae
(bad)
(bad)
rol
addr16
xchg
or
cld
es
ins
arpl
push
inc
mov
call
sub
inc
sbb
sub
ss
imul
movs
ins
mov
es
push
call
xor
mov
aad
mov
and
adc
mov
je
sub
inc
out
mov
je
and
xchg
push
xchg
dec
inc
push
popf
pop
jae
push
xor
clc
jge
cs
cmp
out
dec
fdivr
push
push
or
test
mov
dec
aam
mov
sahf
cwde
inc
lods
ja
in
dec
or
mov
aad
fcmovnu
js
xchg
jo
(bad)
sub
rol
mov
cmp
xlat
and
(bad)
inc
ret
and
shl
test
mov
lods
xor
shl
fs
call
add
xchg
pop
(bad)
and
rol
(bad)
sbb
in
inc
dec
jmp
add
jbe
cmp
jns
cmps
add
fdivr
test
mov
and
mov
xchg
stos
jl
das
retf
sbb
sbb
jne
add
mov
repnz
pop
ret
aad
dec
or
mov
fimul
jno
inc
dec
sbb
jns
or
adc
inc
in
les
mov
imul
call
aam
outs
sbb
(bad)
xor
xor
or
pop
nop
jl
add
add
jne
or
add
inc
fsub
sbb
in
(bad)
ror
daa
dec
sahf
cmp
inc
fadd
inc
add
in
mov
sbb
mov
xchg
push
sub
push
push
leave
or
sbb
adc
push
loope
xor
push
ficomp
adc
or
daa
leave
inc
test
inc
nop
cmp
cmovne
push
inc
add
adc
dec
add
jmp
push
nop
push
lods
pop
seta
ins
jmp
inc
call
and
jl
or
push
call
cmp
sub
aad
in
test
mov
(bad)
mov
mov
adc
nop
shl
sub
sbb
loopne
test
rol
xor
inc
dec
push
aam
pop
sub
push
aam
loope
adc
jge
or
xchg
add
stc
jae
add
add
shl
lods
xor
pop
inc
sar
fmul
push
(bad)
push
das
jmp
fild
ds
push
push
(bad)
test
ja
mov
aam
bound
outs
mov
mov
inc
dec
jo
inc
inc
das
mov
add
sub
inc
out
cmp
cmp
mov
or
inc
dec
les
jno
add
push
inc
or
imul
mov
inc
jp
mov
dec
mov
mov
sub
push
cwde
lock
sub
cs
fcom
ins
lock
push
add
not
popf
mov
cmp
jle
arpl
cwde
sub
or
mov
push
dec
mov
ins
or
sbb
xlat
sub
dec
cmp
mul
add
(bad)
lock
sbb
dec
fstp
outs
pop
push
jge
mov
sbb
in
mov
inc
test
in
lahf
lock
dec
xchg
ret
jg
enter
pusha
sar
add
cs
fisub
call
pslld
stos
call
dec
or
addr16
mov
loope
aam
mov
push
div
retf
ror
push
xchg
test
mov
push
loopne
adc
xchg
loopne
inc
cmp
cmp
push
push
sbb
or
movsx
xor
cs
cdq
je
cld
sbb
dec
loopne
add
ss
out
test
and
or
stc
cdq
push
pop
add
pop
dec
imul
lea
pushf
add
scas
jmp
dec
pop
xchg
sbb
add
xchg
in
lock
es
sbb
push
rcl
lods
dec
sub
mov
jmp
daa
mov
pop
mov
int
movs
mov
mov
or
rcl
ror
adc
cmp
mov
cmp
mov
and
inc
sub
pop
inc
dec
sub
loopne
dec
in
cwde
sbb
or
sub
test
mov
xchg
mov
sahf
xor
mov
mov
test
or
and
adc
mov
jmp
mov
sub
jecxz
mov
push
mov
js
or
xor
jecxz
jecxz
mov
dec
or
aaa
jo
mov
jecxz
xchg
das
cs
sbb
push
mov
jg
dec
dec
test
push
nop
outs
and
rol
dec
loope
mov
pop
push
jmp
mov
mov
push
das
mov
stc
dec
dec
sahf
pop
adc
mov
ret
or
repnz
add
or
das
sub
mov
mov
outs
rcr
dec
mov
inc
xchg
ficom
push
cmp
sub
cmp
int
(bad)
xchg
das
add
xor
xchg
ret
adc
or
and
test
dec
inc
jnp
mov
lea
add
adc
pop
mov
and
sub
in
outs
adc
adc
nop
inc
push
sbb
and
call
push
xor
mov
call
cmp
pop
adc
lods
sub
in
or
adc
xlat
mov
or
mov
inc
rcr
xor
jle
retf
call
xchg
and
adc
jle
push
int
xchg
cld
mov
pop
sub
gs
ss
and
push
pop
retf
and
inc
test
jge
jmp
xor
jp
arpl
push
or
test
push
push
fisub
xor
add
test
in
or
and
sbb
mov
xor
inc
sahf
in
sub
xor
xor
sub
cld
ret
xor
aaa
lea
rol
loopne
fistp
xchg
sbb
jno
mov
xchg
test
pop
inc
mov
and
xchg
and
xchg
jno
adc
fcom
and
push
fcomp
call
mov
inc
push
das
pop
aas
ins
push
inc
pop
pop
enter
pop
pop
xor
rol
jl
push
dec
loopne
cs
loop
lea
dec
dec
repnz
into
xor
add
xor
fbstp
inc
and
pop
pushf
or
daa
rcl
xor
inc
or
xor
shl
lods
and
and
sub
push
and
inc
pusha
inc
sbb
popa
and
in
pop
pop
ror
lock
clc
ficom
mov
inc
or
ret
pop
add
hlt
push
push
xor
mov
sbb
adc
sub
loopne
mov
pop
sbb
jmp
imul
pop
test
cmps
push
pop
fdiv
mov
add
hlt
xchg
fsub
xor
mov
sbb
dec
jl
inc
or
push
and
jp
push
pop
mov
and
push
inc
lock
and
add
cmps
sti
or
pop
dec
in
mov
pop
xchg
nop
dec
sbb
mov
nop
jne
int3
or
test
shl
lods
sub
ret
xchg
je
outs
push
dec
cdq
push
sub
loop
pop
pop
push
pop
xchg
out
pop
pop
sbb
cs
imul
push
add
sub
add
in
sbb
call
sub
cmp
inc
rol
lods
or
jl
pop
jmp
adc
jmp
retf
test
inc
cmps
add
pop
nop
retf
je
push
inc
jo
mov
in
sbb
lea
hlt
and
or
dec
ret
adc
jo
add
pop
dec
les
sbb
ret
gs
pop
mov
lock
add
cmp
push
add
lods
jge
push
ins
mov
push
mov
inc
add
or
(bad)
call
push
sub
pop
dec
add
adc
stos
ds
xor
sub
enter
xor
int3
push
lock
mov
ficomp
pop
mov
xchg
ins
cs
shl
inc
add
test
cmp
cmp
pop
and
popa
aas
or
add
jmp
add
dec
mov
and
and
movs
adc
xchg
(bad)
push
xchg
and
std
pop
ret
add
push
xchg
cmp
call
pop
sub
mov
mov
mov
mov
aas
or
sub
mov
and
inc
cmps
or
dec
mov
aam
aas
jge
sub
pop
add
mov
(bad)
dec
cwde
into
adc
(bad)
ret
add
sub
mov
mov
xchg
dec
daa
js
mov
sbb
pop
aam
jnp
ret
mov
xchg
and
and
inc
push
cdq
jbe
push
in
pusha
in
xchg
hlt
jg
cmp
mov
inc
dec
dec
stos
out
inc
and
mov
dec
add
sti
test
mov
xor
aam
xchg
pop
jge
sub
fsubr
sub
frstor
mov
call
loop
mov
cmps
outs
test
add
or
pop
retf
push
mov
je
mov
mov
(bad)
xchg
xor
xchg
cmp
(bad)
inc
or
ret
and
cmp
cmp
shl
xor
stos
adc
retf
pop
test
mov
push
or
mov
mov
push
es
(bad)
and
add
daa
mov
(bad)
cmp
ror
cmp
lea
pop
in
mov
(bad)
dec
lock
out
pop
xor
pop
xchg
sub
sbb
lds
cld
mov
inc
mov
inc
mov
pop
pusha
sub
(bad)
adc
dec
jmp
and
js
mov
(bad)
in
sbb
push
mov
adc
loop
lock
out
pop
into
lds
push
sub
retf
xor
mov
loopne
and
xor
or
hlt
jmp
add
daa
dec
fdiv
push
adc
xchg
popa
dec
idiv
inc
nop
aaa
add
(bad)
retf
(bad)
mov
push
inc
bound
cmp
or
nop
push
dec
cld
dec
jl
push
adc
movs
arpl
ror
dec
(bad)
jmp
inc
inc
xchg
bound
daa
sbb
jl
lods
or
dec
dec
xchg
mov
dec
xor
sbb
aam
mov
arpl
or
in
add
call
inc
cmps
xor
xchg
shr
xor
fmul
pop
pop
push
fwait
inc
and
fs
pushf
xchg
arpl
aam
das
and
add
(bad)
or
mov
sbb
pop
and
mov
test
inc
mov
or
sbb
jno
pop
ja
ret
fimul
adc
and
iret
cmp
jle
jo
shl
cld
out
daa
or
dec
cld
and
cdq
or
or
aaa
inc
add
and
scas
dec
mov
xor
and
adc
sbb
mov
push
or
sbb
adc
test
mov
pusha
push
movs
jns
inc
sub
dec
push
cmp
cmp
add
inc
mov
(bad)
loop
popa
inc
mov
mov
shl
repnz
test
pushf
push
hlt
aad
lods
retf
xchg
push
pop
scas
xchg
test
mul
and
dec
and
fwait
xor
test
rol
sbb
xor
pop
inc
push
sub
add
cmp
dec
fst
dec
sbb
push
outs
bound
sbb
jno
sub
addr16
sbb
imul
mov
addr16
add
enter
outs
dec
div
mov
xor
or
xor
out
inc
pop
loopne
shl
sbb
add
(bad)
add
les
inc
xchg
cmps
jp
movs
push
xchg
sub
or
xchg
xlat
int
clc
mov
push
cld
push
nop
imul
dec
xchg
addr16
imul
xor
repnz
sub
enter
mov
mov
fidiv
xchg
pop
add
nop
lods
pop
(bad)
mov
jno
pop
push
mov
inc
inc
sbb
stc
leave
fsubr
aad
dec
fimul
sub
leave
inc
inc
dec
mov
lock
or
dec
cmp
or
sbb
or
pop
mov
ds
lahf
push
push
push
add
pop
sbb
fisub
fs
or
sbb
stos
cmp
sub
xlat
test
sub
xchg
inc
add
push
xor
mov
push
stos
push
addr16
fdiv
lahf
shr
shl
popa
das
clc
test
mov
mov
neg
dec
mov
xchg
rcl
sub
iret
xor
mov
or
(bad)
cld
inc
js
clc
or
sbb
in
add
inc
mov
sbb
lock
xchg
retf
xchg
(bad)
cmp
jge
popa
out
mov
bound
fisttp
mov
and
adc
test
push
enter
add
arpl
adc
adc
mov
push
aaa
shl
ja
cmp
pop
adc
dec
cmp
push
push
dec
rol
loop
or
push
add
add
nop
add
pop
or
sbb
clc
xchg
rcr
or
fsubr
addr16
gs
inc
or
jns
shl
leave
adc
or
inc
sub
mov
call
mov
mov
push
fs
add
push
or
cmps
sub
mov
(bad)
sbb
mov
outs
mov
inc
pop
hlt
pop
movs
mov
into
sub
adc
popf
test
fsub
add
xchg
cmc
add
sbb
dec
aad
lea
pop
xlat
cs
adc
enter
imul
add
retf
pop
fisttp
cmp
push
loop
xchg
lock
and
push
pop
aam
aam
hlt
add
and
push
aaa
sub
dec
sbb
dec
test
jge
add
adc
les
fwait
inc
sub
inc
jmp
int
mov
and
jp
add
add
mov
imul
call
or
das
sbb
mov
inc
xor
xor
xor
fwait
test
mov
shr
and
add
push
xor
mov
sbb
add
scas
sbb
shr
inc
or
test
pop
leave
clc
lods
jmp
jmp
(bad)
jmp
add
xor
loope
jge
ins
push
lahf
clc
push
jle
shr
jne
add
fsubr
xchg
mov
pop
fisttp
pop
rcl
push
push
repnz
ds
les
les
dec
cmps
jmp
or
stc
cmps
jae
mov
jo
or
(bad)
inc
movs
xchg
aas
das
(bad)
pop
jp
(bad)
xor
add
imul
call
jne
cmp
iret
sub
pop
jp
and
push
js
fucomip
mov
ss
sub
jo
adc
push
mov
ins
sub
shl
imul
cmp
dec
data16
sbb
cmp
pop
cmp
push
sub
loope
mov
inc
outs
lds
rol
test
adc
or
je
mov
cmps
hlt
nop
ins
xor
daa
ss
push
mov
inc
mov
dec
adc
cmp
xor
rol
ja
adc
popf
(bad)
jns
lods
js
or
mov
fisub
push
pop
pop
sub
addr16
add
xchg
test
jl
or
push
je
retf
adc
cmps
cld
mov
imul
cwde
mov
mov
dec
dec
dec
dec
inc
push
lock
dec
dec
dec
lock
push
push
push
push
pop
pop
pop
popa
jecxz
(bad)
(bad)
bound
push
ins
outs
outs
jo
jb
je
jbe
js
jp
sbb
imul
push
ror
les
cmp
les
fcomi
movs
movs
push
xor
pop
sub
push
jge
mov
rcl
inc
xor
push
pop
xchg
xlat
std
hlt
or
cld
jecxz
je
nop
inc
sub
push
jp
ss
movs
pop
mov
and
xchg
mov
ins
dec
aas
out
jle
outs
jle
push
ins
(bad)
mov
les
mov
sbb
movs
pop
xor
sti
dec
dec
xlat
adc
jbe
jp
push
mov
and
imul
dec
sub
leave
aas
cwde
jg
add
mov
push
dec
out
adc
mov
adc
or
sub
mov
lods
or
pcmpeqb
cli
jbe
jnp
cmps
and
dec
lea
inc
and
nop
mov
pop
adc
jp
retf
das
sub
test
scas
pop
pop
pslld
jl
lods
push
test
icebp
push
in
or
jne
inc
and
or
or
and
push
popa
(bad)
loopne
sar
push
sub
fwait
stos
nop
cmp
rcr
pusha
dec
call
dec
scas
aas
or
push
jg
mov
jmp
pop
mov
ror
int3
jecxz
add
sbb
mov
jg
or
push
jb
xor
or
pop
and
push
inc
add
xor
pop
ret
ror
jbe
cmp
fidivr
lods
push
mov
retf
lods
scas
fimul
or
lea
dec
push
leave
jp
es
inc
jnp
test
or
sub
xor
enter
cmps
outs
sub
nop
adc
cmp
js
outs
mov
test
or
pop
push
ficom
push
and
mov
test
xor
xor
cmp
xor
sub
movs
aam
mov
and
ins
enter
or
hlt
inc
pop
or
test
push
je
je
inc
adc
(bad)
sbb
or
outs
mov
arpl
stos
nop
mov
xchg
mov
sbb
outs
and
retf
and
out
stos
lea
loope
sbb
sbb
mov
stc
ins
cld
fstp
and
das
or
mov
enter
cmp
in
or
dec
dec
mov
scas
xor
or
xchg
push
mov
jl
mov
cmp
push
daa
out
inc
call
or
pop
add
lds
mov
add
rcl
add
pop
dec
add
mov
pop
cmp
and
ja
lahf
jno
or
out
addr16
rcr
sub
sbb
sub
inc
aas
push
or
lods
push
loop
push
stos
cmp
in
jge
call
sub
(bad)
xor
inc
push
gs
sbb
sub
jo
dec
(bad)
cmp
ror
xchg
cmp
inc
sub
out
adc
ret
das
ds
sub
in
loopne
scas
scas
inc
outs
outs
imul
fiadd
sub
mov
inc
out
or
sub
dec
adc
cs
shl
inc
xchg
aaa
adc
dec
hlt
mov
lea
and
xchg
push
ins
lea
popf
out
xchg
cmp
inc
adc
push
lahf
and
test
arpl
gs
adc
outs
xchg
pop
ret
push
sysret
push
aas
int
imul
mov
inc
or
dec
int
adc
in
mov
nop
xor
pop
mov
sub
dec
out
mov
inc
cmp
adc
sbb
xor
mov
dec
pop
sub
std
pop
rol
clc
sub
adc
pop
push
cmps
add
cmp
xor
ret
inc
nop
add
and
test
dec
enter
xchg
in
xchg
add
inc
jmp
pusha
cmps
nop
dec
pop
sub
fwait
enter
xchg
pushf
pop
mov
(bad)
pusha
adc
movs
cmps
inc
pop
xchg
dec
test
dec
jae
test
aaa
cld
adc
dec
sbb
dec
pop
inc
xchg
push
repnz
test
pusha
xchg
add
push
push
mov
nop
dec
ss
mov
(bad)
cmp
xor
or
and
mov
adc
add
and
sti
aaa
xor
inc
and
pop
mov
add
jle
sub
or
pusha
enter
ins
in
mov
or
push
mov
cld
add
inc
dec
push
in
or
mov
add
outs
sub
push
loopne
xchg
outs
mov
inc
jmp
(bad)
bswap
inc
adc
pop
mov
sbb
sub
xor
inc
cmp
mov
inc
cs
inc
add
xchg
inc
push
xchg
xchg
jg
mov
or
xor
(bad)
nop
sub
dec
push
push
xor
adc
pop
xchg
ret
or
out
(bad)
das
push
and
mov
pusha
add
push
fs
das
lods
sbb
mov
fidivr
adc
add
dec
and
or
mov
cmp
sbb
icebp
push
lea
test
adc
sub
jo
popa
aaa
mov
dec
test
jae
sub
push
mov
movs
jecxz
arpl
push
and
jmp
test
int
and
retf
inc
mov
dec
cmp
sbb
dec
mov
dec
movs
push
jno
icebp
jmp
and
imul
sub
or
pushf
lock
adc
pusha
cmp
push
clc
mov
mov
movs
and
hlt
mov
dec
fcom
mov
dec
cmp
adc
mov
retf
add
push
xlat
dec
outs
sbb
ja
mov
push
out
add
not
xor
inc
cmp
jecxz
mov
outs
es
xchg
sub
push
loopne
xchg
popf
mov
xor
cwde
dec
lods
and
fld
rcr
or
jns
sbb
inc
repnz
ss
icebp
cld
fmul
ror
add
xchg
jae
rol
jecxz
in
inc
sub
sbb
add
sbb
sbb
cmp
inc
loopne
and
adc
stc
push
test
fcomp
out
call
pop
ins
jne
cmp
bound
dec
pop
sti
sbb
jmp
ins
call
dec
push
xor
dec
push
push
lahf
rcl
les
xchg
sbb
xor
imul
nop
test
xchg
sub
mov
cdq
mov
clc
fwait
inc
ret
cmp
mov
mov
sbb
daa
mov
aam
inc
xor
xor
push
and
inc
add
lock
fisttp
sbb
push
cmp
sbb
xor
inc
xchg
jne
inc
repz
ins
lock
lock
push
or
mov
xor
adc
in
loopne
push
pop
xor
cmp
dec
scas
out
add
call
or
sbb
retf
push
or
xor
jnp
jbe
shl
cmp
add
stos
std
shr
push
jae
sbb
arpl
stc
push
mov
in
adc
cld
cmp
add
mov
sbb
push
leave
mov
test
push
fcmovbe
adc
xor
cmp
aam
call
xor
jle
mov
ret
nop
xchg
inc
add
cs
cdq
mov
push
xor
add
enter
rol
in
pop
push
xchg
cmp
repz
mov
add
jb
push
dec
jmp
jl
fwait
scas
push
push
std
aas
out
ins
call
push
js
ret
mov
mov
xor
scas
jecxz
sub
fild
in
lods
(bad)
nop
fld
sar
add
mov
or
in
sti
dec
xchg
(bad)
adc
pop
dec
scas
pop
(bad)
aam
in
mov
mov
ss
retf
pop
push
pop
pop
es
xor
pop
leave
daa
jg
add
add
xchg
xchg
cmp
out
add
pop
xchg
mov
xchg
xchg
sub
and
mov
leave
mov
jmp
test
xor
cdq
icebp
dec
push
pop
fist
and
add
push
add
outs
mov
mov
pusha
ins
enter
pusha
movs
sub
in
jecxz
dec
jmp
mov
js
xor
xor
and
mov
(bad)
loopne
out
sub
or
and
pop
push
dec
(bad)
push
cmps
cmps
nop
inc
popa
dec
mov
fst
jge
and
add
or
and
xchg
add
ror
fs
xchg
inc
outs
dec
loopne
add
add
sbb
mov
test
pop
jne
or
inc
sub
enter
test
mov
les
xchg
pop
das
or
sbb
outs
popa
mov
addr16
test
imul
mov
rcl
ds
rcr
cmp
inc
fmul
or
pop
xchg
adc
ins
es
adc
fadd
sbb
lea
or
xchg
lods
inc
and
jns
mov
(bad)
sub
enter
sub
adc
push
pop
imul
dec
test
rol
and
imul
jb
sbb
jbe
aad
mov
shl
es
and
(bad)
mov
cs
sub
or
sub
sbb
popa
inc
or
enter
das
mov
pop
sub
and
outs
pop
jmp
dec
inc
pop
inc
fwait
dec
jl
and
xchg
ss
or
loope
inc
fisttp
adc
sub
adc
mov
cmp
std
cmp
sub
pop
push
push
push
and
mov
pop
mov
btr
pusha
imul
aam
gs
test
mov
nop
xor
sub
mov
call
sbb
rol
cld
shl
adc
xlat
aaa
pop
xor
push
mov
push
jbe
rdpmc
add
add
mov
fild
fwait
cs
push
push
xor
push
and
(bad)
bound
jl
stc
xor
jns
xor
clc
cwde
(bad)
xchg
dec
sbb
and
test
inc
or
dec
outs
add
mov
ror
mov
(bad)
xchg
push
push
adc
push
hlt
gs
sbb
push
xchg
loope
dec
imul
or
jecxz
sbb
in
in
je
in
pushf
or
dec
jge
sbb
jno
call
adc
xor
xor
fmul
seta
mov
pop
pop
gs
imul
hlt
jle
adc
xchg
add
mov
sbb
inc
sahf
rcl
or
dec
jne
xor
add
cld
inc
jge
fcmove
jg
push
jg
adc
enter
in
add
cmps
inc
or
jl
fild
jo
xchg
(bad)
push
adc
sub
fbstp
pusha
add
or
(bad)
mov
jo
push
pusha
rol
mov
mov
nop
call
sub
fnstsw
popa
mov
popf
fmul
sub
jge
out
aaa
mov
mov
fxch
aam
mov
xor
jne
inc
or
es
cmp
inc
mov
shr
lahf
mov
fisttp
cmp
ret
nop
xchg
pop
pop
loopne
cld
or
xchg
xor
lea
pop
aaa
cs
out
sbb
xchg
sbb
cmp
push
sbb
add
leave
mov
mov
xlat
sbb
dec
call
les
or
dec
movs
cmp
lods
nop
das
cmp
les
cmp
inc
pop
dec
and
mov
add
cmp
pop
cmp
xor
test
dec
aad
add
add
shl
push
cmp
push
push
adc
add
cmp
or
ret
push
sbb
dec
pop
arpl
mov
ins
dec
test
add
adc
push
mov
das
jno
mov
xchg
jmp
or
test
ins
es
xor
shl
push
loop
and
movs
dec
inc
jnp
mov
daa
jl
push
adc
test
imul
outs
jb
outs
pop
or
and
cmp
sbb
adc
aas
add
inc
es
cdq
inc
push
jns
outs
mov
(bad)
add
das
mul
ffreep
add
sbb
push
jns
push
sbb
adc
dec
push
inc
or
add
xor
xor
dec
clc
outs
and
add
adc
cmp
jne
popa
adc
in
pop
test
cmp
jne
xchg
ss
inc
adc
add
add
leave
ret
jne
push
add
xor
pushf
pop
jne
hlt
add
xor
add
add
add
aad
daa
mov
movs
push
or
out
hlt
add
sahf
stos
ins
cmps
or
lods
ret
jae
dec
test
cmp
xor
pop
xchg
lds
add
add
add
mov
cld
sub
(bad)
xchg
arpl
sub
cdq
sub
aas
pop
add
leave
lods
mov
outs
loope
mov
dec
push
push
loope
inc
or
pop
iret
add
outs
rol
fwait
xchg
fsubr
out
loopne
dec
sbb
or
and
ss
or
pop
pop
fimul
xlat
dec
ds
or
das
adc
pop
ins
(bad)
out
xor
or
sub
adc
lock
jge
pop
(bad)
clc
ja
xchg
dec
xchg
xor
and
add
rol
ja
cmp
je
xor
add
mov
cdq
pop
and
sbb
mov
sbb
push
(bad)
jae
add
pop
sahf
mov
inc
test
inc
sub
push
and
rol
push
sbb
aas
push
stos
xor
scas
xor
inc
pop
inc
adc
adc
mov
call
sbb
mov
inc
mov
outs
(bad)
lock
daa
loopne
stos
mov
repnz
or
dec
scas
dec
add
dec
out
loopne
add
mov
nop
push
out
add
mov
push
add
(bad)
push
lods
ret
adc
fild
cmp
cmp
inc
push
pop
dec
adc
inc
cmp
bound
lods
daa
clc
stos
sub
dec
xchg
nop
inc
xchg
test
push
test
or
xor
lods
inc
xor
sbb
in
pushf
add
mov
out
rcl
lods
ja
sub
popa
cmp
ja
adc
sbb
cmps
inc
push
shl
rcl
sbb
pusha
jbe
pop
sub
xchg
cmp
(bad)
cmp
rcr
sbb
inc
xor
sub
jae
jmp
fsub
pop
sub
adc
xor
inc
lahf
mov
adc
sbb
xchg
mov
add
add
rcl
adc
and
lahf
mov
mov
pop
rcr
stos
jnp
sub
ret
(bad)
aas
push
xchg
fcmovu
or
test
sbb
jge
nop
aas
xor
(bad)
and
add
inc
bound
ds
lahf
repnz
sbb
add
sub
or
in
scas
mov
mov
pop
hlt
cmp
pop
cli
add
call
mov
or
jnp
rcl
add
or
inc
sets
jo
xor
lds
(bad)
xor
mov
dec
sbb
ficomp
push
push
push
xor
arpl
or
and
or
cld
mov
scas
mov
ins
test
push
or
sub
push
scas
(bad)
adc
xor
sub
inc
stos
mov
sub
push
inc
mulps
xchg
es
push
add
dec
imul
xchg
mov
aaa
ret
shl
ret
dec
cmp
push
ja
mov
dec
push
mov
push
gs
outs
fs
pusha
xchg
sub
jns
dec
push
jg
sub
push
lods
mov
cmp
pop
jp
imul
and
dec
sbb
les
movs
and
inc
or
div
adc
inc
mov
add
ss
repnz
pusha
or
rcr
jnp
iret
adc
in
inc
cmp
in
mov
mov
sub
push
dec
mov
in
(bad)
mov
add
sbb
out
push
jb
popa
(bad)
mov
mov
cmps
push
push
push
xchg
pop
add
and
dec
lds
xor
adc
fdiv
frstor
mov
cmp
mov
push
test
lods
add
dec
sahf
or
or
bound
dec
stos
gs
fisttp
je
repnz
add
imul
cli
mov
jecxz
mov
in
mov
dec
jae
sahf
mov
jp
mov
enter
sar
retf
js
cwde
pop
in
retf
out
adc
or
cs
pusha
aas
nop
sete
pushf
mov
pusha
movs
jb
add
adc
xor
sub
sub
sti
pop
push
mov
or
sahf
out
inc
xor
inc
jl
adc
jl
push
dec
add
add
pop
or
xor
(bad)
ret
push
xchg
cmp
pop
add
inc
xor
nop
sbb
pusha
nop
rcr
sbb
test
and
aad
inc
sbb
dec
out
(bad)
pusha
inc
addr16
dec
pushf
ror
test
call
jo
dec
mov
test
sbb
xchg
cld
mov
imul
mov
cs
test
fldcw
je
push
adc
rol
adc
cmp
nop
pusha
or
shl
repnz
pop
push
clc
push
ds
mov
ror
dec
outs
xchg
inc
adc
add
mov
int
fs
push
xor
dec
push
inc
gs
mov
push
iret
cdq
mov
push
in
push
add
out
dec
or
cmp
xchg
sbb
dec
inc
dec
rol
or
sub
dec
(bad)
dec
(bad)
sub
xor
dec
sub
sub
sbb
push
cwde
gs
enter
imul
out
adc
sbb
mov
inc
imul
imul
imul
cmps
imul
cmps
xor
pop
pop
or
imul
add
enter
xor
or
movs
sub
cmp
addr16
mov
repz
imul
enter
sub
add
pop
sar
mov
jmp
mov
xor
and
or
inc
push
adc
(bad)
fsub
repnz
add
or
mov
movs
sbb
xor
or
call
inc
in
repnz
jae
adc
inc
and
fdivr
xor
sbb
mov
lahf
xor
aam
int3
inc
aam
fcom
and
cdq
inc
outs
das
or
ss
popf
dec
shl
rol
in
xchg
idiv
mov
or
sbb
rol
ss
push
adc
mov
inc
int3
inc
shl
or
rcr
dec
and
and
dec
clc
sub
cmp
xchg
aaa
xor
add
mov
in
or
les
jle
push
add
rcl
mov
mov
out
and
mov
fild
fdiv
jle
out
xchg
fwait
jmp
aad
or
scas
pop
lahf
xor
icebp
mov
mov
test
jo
stc
nop
lahf
pop
cmp
jae
loope
xor
add
sub
ja
add
or
push
mov
xchg
or
mov
add
xchg
adc
sbb
aaa
pop
dec
push
sub
xlat
or
add
scas
sbb
sub
or
daa
dec
scas
fwait
rcr
bound
out
inc
pop
jae
dec
xor
stos
and
pop
scas
inc
leave
test
in
test
mov
movs
inc
dec
push
das
sub
mov
(bad)
outs
popf
ret
rol
dec
ret
adc
jle
jnp
cli
ret
xor
inc
mov
xchg
dec
adc
mov
xchg
adc
mov
add
sbb
enter
and
or
or
sbb
xor
mov
pop
repnz
push
add
mov
push
int3
repz
fcomp
push
sbb
add
repnz
les
dec
xor
add
pop
hlt
xchg
or
daa
hlt
mov
add
fdivr
inc
dec
imul
dec
aaa
inc
mov
push
pop
dec
sbb
ret
sbb
imul
rol
push
mov
inc
inc
add
add
pop
or
xchg
rol
inc
addr16
mov
das
fdiv
or
cmp
add
dec
jns
adc
xchg
ja
sub
cmp
pop
ret
setg
daa
cmp
inc
push
xchg
inc
xor
pop
jp
mov
mov
mov
out
and
rcr
mov
mov
sbb
push
aam
jnp
inc
mov
mov
enter
cld
and
or
mov
jmp
int3
retf
shl
aam
ins
pop
in
mov
sbb
inc
cmps
fcom
mov
or
inc
fst
(bad)
adc
aad
addr16
js
push
jne
pop
dec
loope
ficom
popa
sub
daa
rcr
dec
xchg
xchg
ret
lock
sahf
or
pop
pusha
lods
push
and
jbe
pop
xlat
popf
dec
xchg
lea
xchg
adc
sbb
enter
and
dec
stos
mov
jmp
mov
sub
rol
xor
jl
or
leave
or
sbb
cmp
test
repnz
mov
or
xchg
in
(bad)
in
dec
xor
dec
loopne
fsub
xchg
and
cmp
clc
fcomp
cld
mov
push
mov
xor
pop
test
and
add
mov
inc
push
inc
dec
pop
enter
sub
mov
push
add
add
dec
or
pop
or
fwait
rcl
or
adc
scas
test
mov
xchg
pop
xor
mov
add
js
js
adc
xor
mov
test
mov
cs
xchg
xchg
movs
or
retf
cwde
or
xor
add
mov
pusha
push
push
add
or
rcr
jge
sti
push
pushf
xor
pop
inc
xchg
(bad)
pop
inc
add
dec
das
sbb
pop
xor
sub
push
add
es
ret
repz
inc
adc
adc
sub
lods
inc
mov
cwde
mov
and
cmp
sub
add
imul
add
xchg
cmp
mov
mov
inc
cdq
dec
lods
pop
mov
xchg
xor
sti
jl
enter
retf
lods
hlt
inc
test
iret
mov
xchg
xchg
fs
cwde
add
add
lods
mov
iret
pop
inc
jle
icebp
xchg
ror
push
dec
scas
pop
repnz
push
fdivr
ret
sub
(bad)
adc
fsub
or
addr16
cmp
loope
mov
mov
repnz
pushf
dec
in
push
xor
arpl
push
sub
lar
into
and
sbb
(bad)
adc
stos
add
and
scas
or
or
outs
push
cmp
add
push
rol
or
fisttp
push
fbstp
ror
push
dec
iret
test
out
push
adc
repz
xor
(bad)
arpl
mov
adc
inc
or
or
adc
mov
nop
jle
test
and
mov
push
and
ins
rcr
xor
xchg
cld
clc
mov
xchg
sar
hlt
mov
dec
xor
popa
mov
ds
pop
hlt
push
dec
sbb
mov
and
imul
shl
lock
mov
ror
cmps
inc
inc
inc
out
addr16
mov
xchg
cs
fmul
push
outs
arpl
adc
dec
aad
mov
pop
sbb
test
add
hlt
mov
mov
daa
or
mov
rol
and
mov
xor
sahf
in
adc
cmps
sahf
inc
mov
sub
nop
fcomp
shl
jg
stos
mov
lock
dec
call
cmp
jb
xchg
pushf
dec
pop
xor
push
adc
dec
push
int3
pop
repz
cs
mov
data16
adc
adc
aaa
mov
bound
xor
fistp
fisttp
pop
inc
outs
pop
sub
inc
sub
xlat
out
and
cmp
inc
test
(bad)
push
test
mov
xchg
xchg
ins
js
cdq
xor
pop
stos
add
xchg
sbb
(bad)
pop
js
(bad)
movs
out
mov
ret
push
inc
js
pop
pop
cli
sbb
popa
jae
cmps
mov
inc
mov
jo
xlat
inc
sbb
push
mov
add
mov
outs
retf
push
jg
dec
call
in
adc
in
add
xlat
fnstenv
sub
add
jl
pop
dec
test
mov
ds
jb
or
mov
ret
shl
aam
mov
fist
cwde
es
or
aam
push
shl
int
cli
add
clc
adc
je
jne
es
push
imul
(bad)
ins
jmp
fiadd
and
mov
dec
adc
or
xlat
jmp
dec
ja
or
rcl
test
sbb
xor
(bad)
fnstcw
sbb
daa
and
psubusb
rcr
cmp
mov
push
loopne
xor
adc
xor
push
pop
leave
xchg
sub
(bad)
loopne
mov
pop
shl
dec
xor
or
dec
mov
call
test
push
mov
sbb
push
jbe
mov
jo
or
push
push
inc
push
sbb
xchg
shl
mov
arpl
add
mov
sub
popf
and
dec
add
mov
mov
jle
ret
lds
dec
adc
(bad)
les
inc
xor
iret
rol
mov
test
fist
sbb
dec
std
or
push
mov
and
loope
xlat
xor
add
add
mov
cmp
pop
inc
pop
xlat
push
(bad)
push
add
js
pop
ret
push
adc
mov
and
xlat
add
add
mov
mov
mov
and
pop
(bad)
and
push
add
add
mov
pop
clc
inc
test
popa
fcomip
std
lds
(bad)
mov
or
adc
cmp
inc
xchg
or
cdq
jns
pop
xchg
and
xlat
or
push
dec
loop
adc
xor
lea
add
mov
or
retf
mov
or
add
pusha
(bad)
or
cdq
rcr
xor
xor
leave
fwait
add
mov
(bad)
xor
inc
xor
or
ss
dec
or
(bad)
cmp
sbb
lea
(bad)
ss
mov
jecxz
xor
sub
and
and
scas
nop
sub
and
in
mov
mov
sub
add
add
add
dec
mov
std
add
adc
mov
inc
jl
add
adc
rcr
add
das
pusha
movs
push
add
mov
pop
cmp
or
call
sbb
jae
call
jecxz
lea
cmp
or
jg
cs
cmp
push
add
or
xor
push
aaa
inc
cmp
push
cmp
or
sub
cmp
ins
and
sub
test
add
shrd
loopne
sub
jmp
scas
popa
shl
inc
push
mov
sbb
imul
lea
jne
sar
push
add
inc
jl
das
enter
xchg
add
jo
inc
xchg
sub
mov
js
push
(bad)
dec
xchg
inc
jo
push
dec
xchg
inc
in
pop
push
ss
jl
mov
push
xlat
and
adc
add
imul
ret
ror
fstp
ret
movs
movs
rol
stc
ret
xor
and
int3
adc
and
push
pop
and
xor
cmp
xor
push
push
(bad)
xchg
neg
and
xor
dec
jae
fsubr
loopne
dec
jae
sub
xor
test
xor
jae
xor
cmp
cmp
xor
dec
hlt
inc
clc
ss
dec
jae
cld
dec
add
pop
pop
dec
jp
ret
add
xchg
jnp
lds
push
(bad)
mov
jae
(bad)
cmp
cmp
es
dec
repz
or
xor
out
imul
xor
scas
nop
out
sub
sub
nop
out
sub
inc
nop
out
imul
scas
sub
fisttp
jecxz
repz
mov
out
dec
movs
fnsave
nop
or
cmp
dec
shr
sbb
mov
pop
adc
movs
cmp
sub
cmp
pusha
movs
cmp
inc
fs
cmp
and
ins
and
call
and
das
movs
cmp
add
rcr
xlat
ror
inc
pop
test
push
rcr
(bad)
cmp
(bad)
sub
or
cmp
ret
shr
outs
mov
movnti
lds
out
nop
adc
rcl
pop
xor
adc
sub
rcr
dec
test
lods
pop
and
adc
int
shl
pop
adc
xor
test
add
adc
push
add
bound
fnstenv
ds
aam
or
inc
ins
shr
jmp
push
mov
cmp
xchg
add
add
repnz
add
neg
in
mov
or
and
sub
xchg
(bad)
jg
and
daa
mov
add
rcr
popf
sub
ins
mov
add
mov
and
mov
adc
sub
xor
aaa
outs
cdq
cmp
sahf
dec
push
xchg
ret
mov
ja
add
sub
cmp
mov
mov
out
pusha
jno
inc
nop
leave
add
fld
xor
or
dec
test
adc
adc
rcr
pop
cs
xchg
dec
xor
jo
test
sar
xor
loopne
cdq
dec
in
push
into
fcmovnb
mov
mov
rcl
and
pop
loopne
out
movs
add
addr16
mov
loopne
dec
retf
ss
jbe
mov
and
jne
add
sar
ja
(bad)
xchg
and
int3
xlat
loopne
cmp
jle
jp
pop
fstp
add
dec
rcl
rcl
ins
in
movs
or
and
xor
mov
mov
and
jg
mov
js
or
and
(bad)
and
std
sbb
add
jle
cmp
movs
(bad)
or
inc
mov
or
shl
pop
push
jno
fadd
xor
push
push
je
jl
jle
mov
xchg
lock
mov
jb
mov
add
movntq
mov
push
jbe
icebp
test
mov
outs
or
cmp
test
pusha
push
inc
mov
sbb
mov
dec
add
or
stc
imul
xor
add
xchg
xchg
ja
scas
sbb
jae
and
scas
jne
mov
add
sub
add
test
cmp
pop
jae
dec
jno
outs
or
mov
xchg
out
pop
sub
daa
aas
rcl
outs
or
and
fcomp
add
loop
(bad)
mov
bound
sbb
adc
pop
or
leave
pop
pop
pop
popf
mov
xchg
or
and
ss
sti
xor
outs
cmp
push
lock
jno
jo
repz
fiadd
push
addr16
add
add
or
sbb
dec
lods
movs
jge
inc
jae
pusha
mov
dec
popa
nop
movs
mov
pop
jne
or
sbb
xchg
and
add
add
or
push
pop
jne
pop
or
jne
push
or
mov
jmp
iret
dec
and
push
adc
outs
mov
ror
xchg
cmc
mov
rol
shl
jae
cmp
inc
pushf
xchg
popa
dec
add
hlt
cli
cmp
pop
popf
inc
cmp
rcr
xor
enter
loopne
and
adc
and
test
mov
xor
xor
jo
pop
aas
dec
les
out
lock
fcomp
into
int3
hlt
sbb
ficom
loope
push
push
fsubr
outs
inc
fcom
push
push
xchg
fsub
or
mov
xor
jnp
retf
push
aam
cli
mov
cmps
repz
cmp
mov
dec
or
je
mov
(bad)
push
sbb
in
xor
and
or
nop
pop
sar
sti
cmp
int3
mov
jl
sbb
mov
mov
je
inc
adc
jge
cmp
int3
add
push
inc
mov
adc
xchg
pop
adc
mov
xor
xchg
les
leave
int
fs
popa
jno
std
pop
add
add
call
or
xchg
movs
loopne
sub
icebp
add
mov
mov
mov
or
inc
das
xor
call
aas
iret
ds
scas
call
push
add
adc
fwait
daa
jg
(bad)
mov
daa
ret
jb
cmp
add
pop
sbb
mov
ret
jl
pop
jmp
gs
mov
push
ja
test
cwde
popf
pop
fisttp
jg
jb
inc
and
cmp
dec
dec
sub
dec
add
into
push
lock
inc
dec
mov
sbb
mov
inc
mov
dec
jl
test
retf
dec
into
push
and
jl
jg
adc
dec
dec
push
mov
cmp
in
out
mov
int3
aam
push
sbb
sar
aam
push
jb
enter
fadd
loopne
in
fs
and
call
cmp
cwde
lock
enter
or
clc
xchg
add
enter
aam
xor
inc
push
sbb
or
mov
nop
xchg
inc
adc
rcr
hlt
sbb
enter
or
xor
cmp
jnp
in
pop
and
and
xchg
jb
enter
xor
inc
push
cmp
or
push
and
(bad)
mov
retf
and
cmp
enter
or
inc
inc
push
dec
cmp
cmp
jo
cwde
pop
xchg
push
sbb
pop
test
xchg
inc
inc
xor
mov
shl
ins
ror
xchg
inc
jo
test
fmul
and
jl
inc
push
sbb
nop
xchg
test
mov
add
mov
ins
nop
paddb
xchg
std
and
imul
adc
sbb
xor
in
imul
and
movs
in
in
and
inc
push
sbb
fs
xchg
loopne
in
and
adc
mov
enter
test
inc
mov
hlt
lods
sbb
fs
xchg
mov
mov
inc
push
sbb
mov
jbe
enter
les
mov
ins
cmp
mov
inc
cs
fsub
cdq
(bad)
jmp
add
adc
inc
inc
push
or
sbb
fs
cwde
and
and
and
js
jb
enter
lock
inc
mov
and
cmp
fs
pusha
cmp
jl
hlt
imul
push
mov
xor
rol
pop
and
push
mov
inc
in
test
jb
sbb
pop
and
xchg
in
fs
push
push
ins
ins
jo
cmp
xlat
mov
sbb
sbb
xchg
xchg
and
imul
cld
pushf
and
mov
enter
or
inc
push
cmp
adc
in
xchg
adc
sbb
movs
and
in
xchg
inc
ins
in
jo
mov
and
enter
pusha
mov
je
(bad)
and
jb
enter
or
mov
js
mov
and
nop
and
inc
push
sbb
xchg
push
cwde
test
nop
xchg
inc
pushf
mov
sbb
loopne
adc
sub
enter
sub
mov
jb
shl
nop
and
push
retf
arpl
imul
int3
aam
sub
push
shl
push
cmp
and
xor
loope
xchg
fcomp
and
sbb
inc
lods
inc
fsub
inc
dec
adc
retf
mov
fs
and
sbb
jb
nop
retf
dec
push
push
add
xchg
jb
in
aam
test
xchg
loopne
fs
and
sbb
call
in
xchg
inc
adc
sbb
sbb
es
inc
push
sbb
xchg
in
aam
dec
xor
mov
mov
and
aaa
ds
fiadd
and
dec
or
sbb
test
mov
or
or
mov
test
movs
jns
dec
pop
mov
fild
arpl
cmps
pop
mov
push
dec
mov
add
mov
sbb
sub
xchg
imul
shl
or
inc
add
fcomp
or
popw
das
adc
sbb
sbb
jnp
jbe
ins
mov
imul
inc
push
ja
fidivr
mov
or
sbb
cmp
or
pop
push
test
imul
adc
es
adc
rep
nop
jmp
pop
test
sbb
fs
pop
sbb
jmp
jne
mov
fs
bound
dec
scas
(bad)
es
cmps
movs
rcl
jb
mov
add
aam
aas
mov
mov
mov
mov
jg
outs
or
inc
push
dec
pop
pop
pop
mov
cmps
aas
stos
test
mov
lods
mov
pop
(bad)
out
xor
out
mov
or
ds
mov
sbb
arpl
ins
add
inc
add
or
arpl
scas
adc
dec
mov
shl
mov
push
xor
(bad)
mov
mov
inc
jnp
jecxz
imul
adc
arpl
addr16
xor
xor
jbe
pop
or
push
xor
add
add
dec
sub
push
dec
xor
inc
xor
and
dec
inc
and
inc
xor
dec
inc
and
or
stos
bound
sub
and
xchg
imul
fmul
mov
imul
sub
push
pop
xlat
mov
xor
push
jb
das
jne
pop
test
pop
inc
test
imul
mov
imul
cmps
mov
imul
and
mov
pop
pop
xchg
mov
sbb
pop
push
mov
rol
jne
inc
cmps
fsubr
scas
outs
xchg
mov
movs
pop
xor
in
in
or
imul
inc
sbb
cmp
push
mov
inc
and
js
sub
push
pop
sbb
push
jg
add
push
mov
and
pop
xchg
arpl
pop
jmp
add
push
pop
aaa
nop
or
call
inc
pop
fwait
call
retf
or
sbb
mov
data16
fs
ins
dec
scas
addr16
jmp
test
hlt
stos
sbb
dec
mov
adc
(bad)
arpl
pop
sub
js
out
dec
pop
dec
pop
outs
lea
pop
pop
push
push
icebp
mov
arpl
add
inc
mov
sbb
adc
outs
mov
std
jae
scas
addr16
cmova
adc
js
repnz
jns
xchg
push
dec
pop
jae
push
jmp
dec
inc
(bad)
push
ret
inc
sbb
and
fisttp
jecxz
jae
pop
ins
push
fistp
dec
das
xlat
je
shl
imul
mov
xchg
mov
test
xlat
push
sub
rol
out
adc
lahf
push
addr16
(bad)
(bad)
rcpps
jae
push
pop
pop
or
pop
push
daa
mov
inc
pushf
jne
imul
mov
mov
pop
sub
add
add
push
mov
push
dec
aaa
lods
imul
aas
xorps
in
int
jb
adc
aaa
jb
inc
test
outs
addr16
pusha
(bad)
pop
call
adc
data16
push
outs
iret
dec
cmps
fisub
mov
and
fidivr
push
ins
pop
outs
cmp
adc
xor
push
and
jnp
sbb
arpl
sub
sar
out
mov
dec
xchg
or
or
xchg
pop
inc
pop
add
mov
push
jae
dec
jae
push
fild
push
inc
pop
push
imul
aas
jg
or
or
ja
aad
sub
push
xlat
or
jae
in
or
sub
mov
jo
xchg
or
(bad)
lea
dec
jo
jae
test
xchg
jno
int3
aad
or
xor
mov
(bad)
sti
addr16
mov
js
ja
out
push
fwait
or
aad
xchg
imul
push
xor
out
sbb
rol
cmp
xchg
ins
ror
add
pop
add
clc
cs
or
push
cmp
jae
jne
add
mov
outs
nop
xchg
in
ins
enter
mov
mov
push
adc
out
adc
mov
je
sbb
lahf
mov
mov
xchg
mov
addr16
xor
ficom
dec
fisttp
dec
popf
and
dec
sar
mov
pop
push
cmp
mov
movs
push
sub
mov
xlat
pop
pop
dec
xchg
dec
inc
or
push
cmp
not
sbb
adc
bound
pop
cmp
popa
dec
xor
adc
inc
fiadd
sbb
vpcomuw
cmp
ins
scas
xor
jb
push
push
pop
aas
fisubr
mov
fist
imul
cmovg
push
adc
bound
mov
dec
movs
dec
sbb
push
dec
bswap
xor
or
inc
aaa
xor
cmp
xchg
dec
or
dec
test
inc
jae
push
push
mov
ds
mov
push
mov
pop
addr16
out
push
imul
lds
mov
scas
inc
lods
pop
sbb
jno
adc
mov
ins
or
sbb
adc
pop
ret
test
jecxz
mov
pop
sbb
xchg
mov
mov
push
iret
add
bound
push
xlat
push
leave
adc
jmp
ins
pop
mov
xor
or
es
jmp
push
outs
lods
xor
fmul
jecxz
lods
inc
jmp
inc
cmp
push
test
adc
xor
adc
adc
adc
push
and
mov
or
imul
sbb
jne
enter
inc
add
ret
push
mov
or
or
or
ror
pop
adc
aas
loopne
lods
xor
xchg
shr
dec
sub
sub
xchg
arpl
js
js
push
and
sub
ret
xor
push
inc
dec
shr
dec
sbb
jecxz
in
fmul
fnstenv
adc
push
push
adc
sar
push
fidivr
nop
cmp
pop
inc
inc
xor
mov
or
mov
jnp
retf
data16
sar
sub
mov
mov
jecxz
jmp
pop
test
fistp
mov
je
add
outs
or
cmps
jno
and
cmps
jl
and
mov
dec
and
sub
cwde
mov
enter
ins
shl
mov
dec
push
dec
dec
push
push
push
add
sub
push
or
pop
and
or
mov
shr
or
or
scas
dec
or
pusha
fs
mov
jmp
or
rol
pushw
imul
or
adc
shl
ins
mov
shr
jg
cdq
add
ret
dec
add
dec
push
push
push
mov
mov
push
inc
xor
add
cld
sti
cmp
out
pop
push
push
or
jbe
add
or
add
xor
and
imul
dec
loop
inc
sub
push
sbb
xor
sub
adc
mov
and
or
jge
hlt
adc
hlt
ss
lods
sti
mov
pop
lds
fmul
pop
xor
push
jge
(bad)
ins
dec
int3
mov
inc
mov
(bad)
adc
ret
dec
sbb
mov
enter
or
std
popf
cmovbe
jo
xor
sub
dec
sub
sbb
dec
sbb
les
add
enter
sub
sub
add
scas
cmp
gs
aad
cmp
or
ret
jno
mov
pop
ss
inc
jmp
aam
mov
push
aas
mov
aas
pop
sahf
jecxz
push
mov
test
ret
daa
jg
mov
pushf
inc
repz
cmp
cmp
push
sbb
inc
mov
test
and
ja
sbb
imul
cmp
shl
xor
jle
imul
imul
add
cmp
add
mov
xor
cwde
cmps
fnstenv
push
repnz
mov
inc
add
xchg
or
cmp
add
ss
push
mov
rcr
das
dec
push
push
inc
dec
outs
inc
pop
call
mov
push
xor
jmp
mov
add
sub
fist
xchg
and
ins
and
ret
loope
push
ror
loop
xor
push
pop
lahf
cld
jbe
mov
fwait
test
sbb
jecxz
push
inc
xor
xchg
fs
rol
pop
retf
faddp
sub
int3
clc
call
add
aam
sbb
xchg
jp
and
test
and
std
mov
in
out
clc
lods
outs
shl
out
sub
out
mov
inc
sub
pop
sbb
loopne
or
movs
pop
add
jb
sbb
cld
loope
dec
cmp
or
cmp
cmp
out
popa
or
inc
inc
call
mov
call
sub
jmp
or
pop
movs
push
jo
mov
movs
jecxz
pop
or
push
es
pop
lsl
adc
popf
add
and
push
push
test
imul
lock
in
mov
xchg
in
inc
mov
imul
push
dec
mov
test
adc
in
sub
and
daa
ins
lock
mov
xor
add
in
or
test
xchg
inc
xchg
mov
and
pushf
adc
push
stos
fist
add
clc
sbb
popa
lock
push
push
mov
xlat
mov
retf
cmp
sbb
lahf
xor
sub
or
outs
sub
sub
imul
addr16
xor
lock
dec
int
mov
dec
ror
sub
lock
sbb
in
test
retf
dec
sub
xor
adc
nop
xchg
pushf
outs
dec
fwait
sbb
inc
cwde
push
pop
or
or
outs
mov
das
mov
enter
sub
lods
ins
mov
lock
(bad)
jmp
push
sbb
mov
ins
jbe
mov
aas
jbe
or
xor
adc
sar
dec
push
jbe
or
cmp
adc
scas
sbb
fcmovbe
adc
push
push
pop
push
or
jae
xor
sbb
out
jle
js
or
adc
xor
scas
adc
mov
push
mov
push
gs
adc
dec
dec
outs
and
fild
adc
cmp
aam
push
adc
jo
adc
call
ret
jne
ret
adc
ret
mov
dec
adc
div
and
ins
lods
or
loopne
mov
push
cwde
rcl
or
push
add
jecxz
pop
xchg
and
fadd
stc
dec
push
fstp
inc
in
mov
das
or
js
out
cdq
aas
adc
add
add
cmps
pop
mov
push
push
pop
add
sub
sahf
mov
sbb
dec
aam
add
movs
fistp
and
mov
pop
ret
pop
and
icebp
ins
or
push
or
mov
push
je
test
sub
adc
adc
mov
retf
pushf
add
call
ja
adc
dec
xchg
or
adc
sar
push
or
push
inc
(bad)
xchg
mov
shl
inc
faddp
adc
dec
and
pop
mov
mov
push
mov
pop
daa
and
iret
dec
cmp
outs
or
movlps
(bad)
jmp
jae
aam
mov
nop
and
mov
add
bound
daa
movs
pusha
test
cmp
test
pop
sub
cmp
jb
test
enter
pusha
push
dec
mov
and
int3
push
dec
clc
push
dec
out
or
dec
cwde
(bad)
movs
push
or
nop
scas
dec
pop
pop
out
call
pop
js
idiv
pop
push
je
sbb
lods
or
xchg
push
mov
mov
push
or
retf
and
push
aaa
xor
mov
adc
jns
ror
ret
mov
je
cwde
push
loopne
sbb
dec
push
scas
bound
xor
dec
dec
add
push
popf
mov
cmp
or
daa
or
repnz
inc
mov
dec
repnz
push
dec
add
dec
shr
pop
cs
push
push
push
test
xor
mov
nop
push
in
or
sbb
mov
mov
mov
adc
jbe
sub
pop
loope
inc
test
add
movs
mov
mov
xchg
mov
sub
ja
and
pop
or
xor
outs
or
inc
imul
jo
adc
fdivr
and
mov
add
mov
jae
aas
xlat
add
mov
lock
push
push
imul
mov
jnp
(bad)
imul
lock
xlat
jl
pop
sbb
or
sbb
mov
in
out
(bad)
test
xchg
lea
rcl
dec
mov
iret
ins
ds
pop
mov
xlat
mov
cs
arpl
inc
call
sbb
add
or
jb
mov
inc
pop
mov
push
leave
fs
adc
add
out
ror
dec
fcom
jbe
imul
inc
pop
inc
sub
xchg
sbb
xchg
nop
adc
push
add
xlat
mov
cmp
push
dec
or
dec
inc
mul
pop
and
sbb
jmp
jo
outs
std
into
enter
daa
pop
aam
inc
neg
lea
sub
sar
add
inc
xchg
arpl
cdq
pop
test
rcl
mov
daa
push
cli
cmc
nop
inc
inc
test
pop
movs
addr16
imul
pop
shl
shr
push
leave
je
inc
inc
int3
out
in
jnp
inc
out
dec
inc
sbb
ret
pop
inc
pop
in
jae
repnz
mov
push
and
test
xor
cmp
xchg
test
cmps
pop
push
xchg
icebp
push
inc
inc
movs
xchg
js
add
or
(bad)
mov
int
cmp
mov
push
cmps
inc
lods
arpl
(bad)
cld
push
or
stc
adc
mov
pop
or
inc
xchg
pop
int
add
rcl
push
cld
sub
aas
and
push
push
add
sbb
and
dec
aam
stos
dec
retf
ins
sbb
fiadd
cmp
inc
clc
call
ins
cmp
push
and
mov
ret
push
cld
in
add
and
inc
cld
cmp
mov
ins
jecxz
jnp
pop
js
or
and
push
mov
ret
pop
add
repnz
sbb
jge
jbe
add
sbb
sbb
pusha
add
cmp
sbb
or
dec
bnd
and
push
adc
cmp
pusha
dec
jne
mov
cdq
cmp
jnp
inc
inc
jmp
sub
adc
sub
out
or
fldlg2
adc
nop
dec
hlt
add
mov
dec
loope
inc
sbb
call
mov
arpl
das
out
sub
repz
inc
sbb
add
rol
add
adc
loopne
dec
jne
inc
jmp
mov
fist
adc
adc
dec
cs
lea
mov
loopne
outs
lock
fdiv
(bad)
dec
dec
mov
dec
stc
cmp
ins
xchg
inc
loop
xor
add
test
add
stos
mov
and
xchg
out
mov
mov
dec
add
dec
mov
jns
inc
mov
dec
adc
pushf
das
jmp
cmp
and
dec
fst
cmp
clc
ja
mov
xchg
adc
in
mov
xchg
adc
sbb
mov
xor
jae
jo
push
out
and
les
sbb
cmp
push
cmp
int3
rcr
pop
dec
or
mov
shl
or
or
pop
cmps
or
inc
pop
pop
ret
inc
sbb
mov
jmp
pop
sub
loopne
cmp
arpl
aad
les
je
out
push
dec
dec
xlat
mov
xor
rcl
mov
xchg
out
mov
test
in
add
push
pop
dec
push
push
mov
shr
dec
in
add
add
pop
mov
mov
lahf
test
mov
dec
repnz
push
pop
dec
or
cwde
popf
mov
inc
cmp
inc
inc
push
add
ins
call
iret
movs
sbb
adc
jb
repnz
or
dec
(bad)
ret
jo
jns
jo
push
inc
ret
or
mov
add
pop
in
pushf
pop
ficom
cmps
pop
dec
jne
or
repz
shl
push
inc
mov
pop
or
jmp
xor
inc
aad
pop
push
repz
adc
adc
or
sub
mov
sar
popa
pop
mov
or
js
adc
test
(bad)
cwde
and
test
pop
test
pop
mov
add
js
lods
sub
inc
mov
or
or
out
fisubr
adc
adc
push
int3
jae
xor
das
fcmovu
inc
enter
mov
ss
push
jecxz
adc
push
mov
addr16
cwde
and
dec
repz
imul
add
push
or
popf
in
push
sar
dec
ins
imul
outs
push
push
mov
loop
or
les
(bad)
sbb
or
(bad)
and
xor
mov
test
cmp
sbb
push
pop
adc
adc
stos
jns
add
sbb
sub
outs
mov
mov
dec
sub
dec
movs
and
mov
add
push
push
mov
xchg
fbstp
test
or
pop
sbb
(bad)
fmul
add
jp
ret
sbb
das
mov
pop
push
push
js
xlat
sbb
mov
icebp
mov
xchg
mov
xchg
call
xchg
dec
mov
push
and
inc
xchg
dec
and
sub
out
test
sub
sti
pop
mov
inc
stos
pop
lods
xchg
mov
sub
cmp
pop
jmp
jg
nop
and
adc
add
(bad)
push
and
mov
xchg
mov
cmps
fxtract
adc
xchg
cwde
nop
mul
popf
enter
lods
sbb
(bad)
div
fidiv
pop
test
(bad)
jnp
add
adc
adc
loopne
rol
or
xor
add
fwait
xchg
sbb
adc
cmp
movd
into
adc
pop
or
js
mov
pusha
dec
sub
push
dec
xor
push
cmps
lock
lea
dec
add
push
into
and
sar
clc
nop
cs
movnti
push
dec
or
daa
mov
cmp
and
add
in
fisubr
or
jmp
addr16
mov
fs
mov
add
or
lahf
mov
push
lahf
mov
add
in
mov
sahf
loope
dec
cmps
jne
test
cmp
inc
jo
jmp
leave
pop
ror
jl
dec
cwde
or
stos
push
xchg
pop
xchg
xor
mov
ret
aad
and
daa
pop
sub
mov
icebp
pop
sub
push
or
ret
add
inc
or
or
and
in
or
or
jns
(bad)
or
or
or
dec
push
enter
sub
and
cmp
sbb
or
or
scas
mov
mov
adc
dec
repnz
dec
pop
sbb
jb
iret
inc
sbb
sbb
push
pop
stc
sbb
adc
and
jl
enter
sub
sub
jmp
add
dec
pop
les
add
sub
pusha
dec
js
cmp
data16
js
aas
mov
mov
adc
je
rol
add
dec
add
je
mov
adc
nop
scas
dec
repnz
cmp
xor
dec
adc
shr
xchg
jp
and
sbb
(bad)
sbb
daa
pop
dec
cs
add
sub
pop
xor
das
repnz
popa
cwde
das
repz
dec
push
test
and
mov
mov
test
jl
ret
adc
sbb
push
pop
mov
repz
xor
xor
sub
mov
popa
mov
adc
jmp
add
ss
and
pop
xor
shl
adc
nop
cmp
jnp
movs
or
cmp
lock
mov
inc
ret
div
cmp
jmp
clc
mov
inc
add
add
imul
js
add
shl
pop
xchg
outs
push
and
pop
ins
jbe
(bad)
adc
adc
retf
inc
fimul
sbb
jmp
test
or
psubw
push
adc
mov
lock
cmp
in
mov
xor
in
mov
je
mov
test
and
cld
nop
adc
pop
inc
xor
push
cmp
inc
dec
call
cmp
fidivr
movs
sub
sub
in
ss
loop
mov
sub
jae
or
and
cdq
lods
rcl
push
aam
repnz
or
lea
push
xor
ja
inc
push
cmp
dec
cmp
dec
and
push
or
xor
inc
push
push
push
inc
dec
inc
push
push
shr
cmp
aaa
jmp
inc
frstor
jb
mov
add
push
add
sar
mov
pusha
cld
jae
sub
dec
xchg
push
pop
mov
mov
pop
add
or
push
inc
push
add
inc
call
addr16
push
adc
jecxz
pmaddwd
jp
adc
cwde
sbb
push
and
xor
sub
add
cmp
ins
nop
pushf
push
jae
lock
pushf
fmul
js
popf
nop
pop
ins
mov
or
add
enter
jp
je
addr16
test
pop
sbb
daa
mov
mov
repnz
cmp
push
in
(bad)
nop
jns
push
push
mov
lahf
out
dec
iret
adc
lods
jno
cmps
or
jnp
movs
mov
add
test
outs
dec
push
or
xor
fld
sbb
mov
shl
and
or
pop
and
imul
movs
imul
int3
jo
cmp
sahf
inc
sahf
daa
adc
push
jbe
out
push
outs
fs
(bad)
pop
call
push
dec
xor
add
cli
pop
sub
sub
add
xchg
add
gs
xor
sbb
es
shl
and
das
scas
sub
rcl
push
loopne
and
pop
xchg
sbb
aaa
ror
cmps
push
jbe
pop
and
mov
test
movs
and
and
or
cmp
hlt
pusha
inc
push
arpl
xchg
pop
mov
movs
mov
clc
add
data16
leave
dec
push
mov
cmps
dec
pop
and
(bad)
jne
xor
jl
inc
cmp
movs
add
or
push
adc
xchg
mov
fs
or
imul
fwait
movs
cmp
push
pop
mov
sbb
out
dec
jnp
or
ror
ret
mov
mov
jg
dec
lahf
xchg
or
push
imul
xor
and
and
and
jg
sub
inc
dec
push
stc
lock
dec
sub
cmp
push
movs
push
in
in
imul
and
in
les
fnsave
mov
ss
pop
sub
and
xchg
leave
jnp
loopne
or
adc
out
sub
(bad)
mov
pop
jno
lea
mov
mov
loopne
xor
adc
sbb
dec
add
mov
xchg
(bad)
xchg
xchg
xor
mov
scas
stos
pop
sub
rcr
ret
mov
out
leave
xchg
lods
hlt
push
mov
pop
or
xchg
call
jg
pusha
dec
adc
ss
pop
add
pop
inc
add
lods
test
add
inc
(bad)
out
imul
call
or
inc
jb
ja
mov
mov
inc
outs
(bad)
xchg
sub
sti
push
mov
cwde
ins
dec
shr
scas
mov
(bad)
cli
cmp
ins
jo
daa
jmp
lea
pop
add
inc
and
lahf
ins
sti
xor
pop
les
ins
dec
out
mov
mov
push
out
push
les
sbb
ret
aaa
and
lahf
xchg
stos
loopne
mov
popf
nop
dec
and
adc
imul
pop
loopne
jnp
mov
je
iret
iret
jle
add
sub
push
push
loope
inc
ja
dec
dec
adc
movs
pop
add
lock
ficomp
test
push
mov
mov
ret
inc
mov
pop
push
push
push
fchs
cdq
and
xchg
sub
dec
pop
pop
bound
push
xchg
ficomp
xchg
mov
shl
add
xor
push
mov
mov
loopne
loopne
call
(bad)
xor
sbb
inc
les
(bad)
data16
jmp
test
iret
cs
jge
ins
call
jge
jmp
cmp
ss
cmp
test
inc
lahf
dec
call
fsubr
dec
or
loopne
jne
in
rcr
fmul
fstp
mov
inc
pop
out
scas
outs
outs
jo
jmp
aam
mov
adc
mov
nop
rcr
cld
push
inc
jno
movs
ja
pop
es
and
mov
jb
add
je
fmul
js
iret
or
cmps
inc
cs
xor
ret
ret
inc
adc
sbb
xor
or
rcr
pop
cmovo
nop
push
out
or
add
sbb
mov
stos
add
js
jne
or
add
jmp
inc
push
dec
js
inc
cld
out
adc
(bad)
pop
imul
add
or
add
add
add
cwde
jb
movs
mov
lods
add
movs
mov
add
jmp
mov
inc
xor
add
xchg
or
ds
push
dec
ja
stos
or
pusha
cmp
repz
adc
sbb
push
pop
ror
ss
jge
add
out
out
or
mov
sub
ins
cld
mov
ss
adc
and
int3
je
mov
sbb
call
push
ja
sub
sub
pop
or
add
push
xor
aam
sahf
dec
out
xor
cmp
bsf
test
ins
enter
cmc
cmp
mov
movs
lods
push
(bad)
dec
sbb
jl
imul
inc
repz
pop
icebp
xchg
mov
sub
stc
inc
pusha
mov
push
dec
push
dec
jg
lea
and
je
xchg
sahf
add
inc
mov
ins
rcl
push
sub
mov
(bad)
xor
fld
clc
mov
xchg
push
pop
push
xchg
movs
inc
inc
hlt
or
cmps
xchg
dec
sbb
pop
xchg
lock
ja
mov
imul
out
jmp
mov
push
inc
xchg
or
sbb
jne
xchg
outs
pop
push
cmp
push
in
mov
xchg
inc
jbe
cmp
aaa
pusha
jbe
mov
xchg
aas
enter
test
add
pop
punpckhbw
sbb
mov
push
dec
gs
jb
addr16
dec
adc
lods
daa
dec
cmps
js
repz
retf
fisubr
push
mov
(bad)
mov
mov
movs
jnp
cmps
not
fwait
ja
pop
push
pop
fmul
div
std
add
xor
xor
sbb
inc
int3
imul
or
add
jae
add
sub
push
inc
mov
test
push
and
pop
or
push
add
shl
lock
rcr
inc
aam
sbb
test
or
retf
add
push
(bad)
shl
leave
sbb
out
sbb
(bad)
sbb
add
sbb
bnd
add
add
js
shl
stos
jmp
addr16
add
mov
pop
add
xchg
add
mov
cmp
sti
or
adc
push
js
popa
out
and
mov
jns
jo
cwde
mov
add
cmp
movs
mov
cmps
out
shr
shl
cwde
inc
fisub
mov
sub
je
sar
jp
(bad)
jmp
fidiv
fs
add
aam
add
inc
test
xchg
mov
inc
test
jns
sub
pusha
cmps
daa
pop
sub
loopne
add
jbe
push
add
dec
push
syscall
mov
jnp
adc
ds
adc
dec
repnz
repnz
rcr
push
enter
dec
jl
mov
mov
or
gs
or
mov
pop
sub
push
icebp
fs
or
bound
push
xchg
in
adc
lock
mov
cmp
sbb
pop
xchg
push
sbb
movs
dec
mov
mov
les
inc
push
out
or
(bad)
les
popf
dec
out
push
or
repz
ror
add
or
and
push
sub
or
das
inc
xor
out
in
xor
push
fwait
jmp
add
xchg
jne
nop
mov
dec
ret
fst
dec
pop
in
loop
adc
pushf
scas
xchg
pop
cmps
xchg
sbb
adc
inc
pop
repz
adc
cmps
or
push
sbb
add
sub
pop
push
call
or
inc
sbb
jmp
lods
pusha
ror
xchg
pop
out
imul
cmps
nop
movs
xor
push
or
pop
add
(bad)
rcl
jo
cdq
cli
adc
push
inc
pop
and
or
pop
mov
cmp
sbb
and
pop
sub
pop
xor
adc
jmp
aam
jbe
lock
ins
mov
ret
int
inc
gs
cmp
sbb
push
xchg
xor
inc
ret
adc
add
pop
or
xor
dec
jne
ror
push
je
xor
add
loopne
jno
and
push
test
inc
push
mov
leave
ficom
inc
inc
or
inc
or
xchg
inc
mov
dec
mov
nop
imul
cmp
loop
mov
scas
add
jae
test
mov
jns
or
fsubr
(bad)
enter
test
inc
sbb
movs
in
leave
sub
cwde
push
clc
(bad)
rol
mov
push
jp
js
and
mov
cmp
add
inc
pop
fwait
dec
js
and
loope
push
mov
lods
adc
xor
sub
pop
xchg
ja
test
das
add
add
add
push
inc
jmp
out
sub
dec
dec
sub
cs
pop
mov
(bad)
movs
hlt
mov
retf
repz
clc
sbb
cmps
sbb
call
xor
fimul
lea
xchg
dec
mov
dec
test
xchg
jbe
dec
mov
rcr
mov
lock
call
hlt
push
push
pop
jns
test
nop
xor
xchg
ror
mov
movs
packsswb
and
jb
dec
and
xchg
or
dec
add
push
je
les
xor
push
int
sbb
test
jmp
add
dec
popa
dec
jnp
aam
dec
jmp
push
hlt
and
mov
movs
mov
jns
xor
sub
push
push
adc
shl
aaa
enter
add
ror
nop
xchg
or
pop
and
sbb
or
push
shl
mov
jbe
xchg
adc
shr
push
push
adc
int3
ret
xor
adc
push
test
cmovs
inc
push
cmp
jo
jne
or
pop
shl
jbe
clc
xchg
out
mov
jb
movs
and
nop
dec
dec
cmp
or
sbb
les
aas
les
and
pop
das
dec
add
lahf
ja
sub
scas
ins
adc
push
add
pop
push
xchg
mov
aam
cdq
xchg
and
pop
push
push
sbb
push
pusha
retf
pushf
sub
inc
ret
das
adc
mov
adc
pop
or
call
push
adc
mov
ret
jno
clc
inc
icebp
or
pushf
push
out
mov
adc
cmp
mov
dec
scas
push
pusha
test
ins
mov
cdq
shl
xlat
push
out
pop
add
sub
mov
mov
sub
mov
adc
push
dec
or
sahf
lahf
jge
ret
out
dec
jnp
jae
retf
mov
inc
mov
in
pop
or
xor
loopne
jmp
sbb
mov
pop
jp
sbb
dec
xchg
push
push
jl
mov
nop
or
add
xor
adc
aaa
sub
mov
and
cmp
push
sub
mov
in
cmp
imul
pop
push
sbb
popa
push
inc
cs
bound
cmp
popf
lds
or
dec
sub
or
aas
and
dec
mov
sbb
jl
jmp
and
adc
rcl
mov
cmps
ficom
adc
ret
test
lea
pusha
cmps
push
lea
cmp
pop
repz
and
movs
xlat
repnz
dec
pop
sbb
fmul
adc
jg
lea
push
inc
jb
mov
cmp
(bad)
out
add
cmp
sbb
in
fst
inc
or
mov
sub
jne
shl
arpl
(bad)
pusha
pop
clc
jb
adc
dec
call
aaa
daa
pop
movs
inc
mov
dec
dec
call
push
sub
adc
ret
jmp
inc
dec
xchg
pop
mov
popa
fcom
out
sub
mov
popa
scas
mov
fisub
mov
push
loope
hlt
dec
xchg
inc
and
test
sbb
jl
mov
icebp
loop
pusha
jb
loopne
jne
pop
xchg
push
and
adc
add
or
js
push
jmp
dec
fidivr
ds
or
sub
arpl
xchg
push
inc
xchg
mov
(bad)
jle
and
sub
mov
pushf
in
add
xor
add
dec
jmp
inc
nop
loope
push
xchg
jge
cmp
inc
xor
or
adc
inc
xor
xchg
xor
jne
and
repnz
clc
pop
mov
cli
xchg
bound
sbb
or
xor
push
jmp
adc
mov
aas
test
movs
aaa
push
std
mov
push
jb
or
and
mov
inc
in
dec
mov
pop
mov
inc
(bad)
daa
sbb
shl
and
push
and
adc
movs
mov
push
ja
das
xor
daa
jne
cmovae
bound
cmps
fistp
xchg
dec
mov
sar
mov
push
sbb
mov
xchg
cld
push
cld
mov
and
or
and
shl
nop
sub
mov
cmp
push
in
lods
ffreep
xchg
add
add
retf
in
daa
sub
pop
in
ins
nop
sbb
push
cdq
or
or
enter
jmp
sub
xchg
imul
sub
inc
xchg
jl
adc
mov
adc
les
mov
(bad)
jns
or
fs
test
xor
and
jg
in
mov
add
and
mov
mov
cmp
ror
in
(bad)
mov
and
dec
lods
and
jne
mov
xchg
das
xchg
mov
(bad)
push
push
rcl
mov
in
mov
mov
push
aaa
inc
jle
cmp
rol
pushf
jb
mov
sbb
adc
xor
cmp
mov
sbb
rcl
addr16
and
mov
mov
push
adc
adc
push
add
cld
leave
nop
out
add
adc
mov
lea
xchg
mov
dec
fidiv
rol
xor
dec
xchg
sbb
mov
xor
cmp
inc
ja
sbb
(bad)
adc
(bad)
mov
cmp
inc
scas
into
pop
adc
fldcw
mov
int3
xchg
cmp
xchg
sub
xor
or
mov
out
mov
popa
pop
scas
jne
(bad)
sbb
or
enter
sub
cwde
pushf
adc
and
push
fadd
jo
xlat
xor
pmulhuw
pop
pushf
jp
xchg
out
pusha
or
xchg
aad
in
add
push
push
arpl
sbb
test
inc
call
sub
aaa
jp
mov
das
jmp
pop
sub
jmp
or
fld
js
popa
cmp
test
xchg
and
sub
in
adc
movs
jnp
ret
push
and
xor
mov
test
cmp
sar
inc
jbe
dec
and
and
cmp
sbb
push
xchg
sub
rol
pushf
adc
inc
leave
adc
fdiv
fsubr
inc
pop
and
popf
sub
xor
cmp
adc
mov
cmp
cli
cld
mov
adc
cdq
mov
fwait
stc
jae
js
pop
add
xchg
xchg
fs
outs
xor
cmp
push
mov
jo
push
popf
int
mov
jo
push
adc
or
sub
cmp
sbb
xor
mov
xor
fdivr
imul
cmc
or
push
call
push
xchg
pop
dec
or
pop
add
nop
xor
xchg
cmp
dec
enter
pcmpeqd
nop
and
pushf
adc
dec
adc
or
cld
mov
(bad)
fdiv
cwde
mov
stos
dec
pcmpeqw
mov
in
(bad)
mov
add
lahf
clc
mov
xor
lods
in
xchg
in
sub
cmp
jo
ror
hlt
pusha
xchg
lea
lods
icebp
push
sub
scas
shl
scas
inc
add
rep
sub
mov
push
gs
xchg
mov
fwait
stos
push
push
addr16
mov
das
xchg
add
xchg
outs
aaa
or
and
js
pop
rol
xchg
lahf
and
arpl
mov
sar
popa
or
das
and
inc
add
mov
and
call
xchg
and
dec
sbb
cdq
dec
shr
mov
dec
arpl
inc
das
lods
xchg
je
adc
(bad)
xchg
dec
cmc
xchg
stos
adc
mov
loope
(bad)
pusha
mov
sbb
pop
pop
test
mov
mov
inc
or
gs
mov
mov
mov
or
popf
mov
out
dec
dec
in
jb
xchg
in
clc
in
push
daa
and
lahf
lods
xor
je
xchg
mov
adc
mov
shl
xchg
ret
or
iret
or
xor
mov
xchg
or
jmp
and
sub
movs
test
ja
push
ret
xlat
add
call
pop
js
(bad)
inc
add
fmul
mov
add
jnp
dec
dec
sahf
jge
mov
test
xor
jmp
mov
adc
arpl
push
and
call
fsub
push
jno
push
xchg
jne
enter
pop
pop
rcl
inc
xchg
sub
pop
xchg
xchg
cs
pop
pop
ins
add
arpl
and
daa
xchg
int3
xchg
pop
pop
inc
call
xor
test
leave
mov
or
outs
loopne
test
fimul
mov
nop
lods
adc
movs
sbb
push
cs
fdiv
in
mov
gs
nop
inc
data16
arpl
mov
inc
and
jle
jne
sbb
enter
ins
fcomi
or
aam
shl
or
mov
sahf
(bad)
mov
pop
(bad)
and
gs
ins
repz
sub
rol
and
enter
imul
adc
fiadd
push
popa
xchg
cmp
mov
and
xor
imul
and
add
and
add
ins
ror
or
ror
adc
ss
pop
lock
cmp
movs
rcr
call
daa
xchg
in
in
lock
jb
not
call
jae
xor
xor
adc
xor
call
mov
jb
and
lods
dec
popf
stc
mov
jo
dec
dec
sub
or
adc
imul
sbb
push
cmp
adc
push
mov
shl
and
adc
je
cmp
not
mov
and
sbb
adc
cmp
xchg
(bad)
div
shl
adc
push
movs
add
push
call
nop/reserved
pop
sbb
out
pusha
sub
mov
cwde
dec
push
(bad)
in
push
pop
or
push
mov
loopne
mov
imul
shl
daa
xlat
adc
dec
inc
mov
sub
sbb
pop
sti
bound
imul
mov
(bad)
and
mov
pop
(bad)
cdq
lea
ins
gs
ja
sub
cmc
cli
sub
or
xchg
dec
or
inc
cmp
in
jmp
jp
jmp
and
inc
inc
sbb
mov
push
jmp
add
ret
lock
mov
(bad)
fiadd
xor
and
movs
les
xor
ins
push
xor
sar
loop
pop
and
pop
mov
dec
mov
sahf
xchg
push
mov
jne
fbstp
sub
in
inc
lock
movs
or
sub
repnz
fisub
shr
call
mov
jmp
loope
inc
test
out
add
mov
pop
dec
add
add
add
add
add
stos
cmp
and
mov
mov
sub
jns
test
gs
lock
or
call
pop
clc
in
mov
mov
leave
test
cmp
test
mov
cdq
enter
call
mov
sub
hlt
sub
into
add
repz
add
jmp
fs
aam
lahf
xor
rol
dec
dec
xchg
fisubr
sbb
adc
inc
inc
xchg
cli
sbb
pop
fdiv
dec
or
xor
sbb
dec
test
mov
pop
or
push
pop
imul
push
jnp
sub
test
pop
les
adc
aas
inc
or
xchg
stos
xchg
xchg
push
inc
dec
ret
movs
hlt
stos
xchg
mov
jne
lock
adc
add
mov
shl
in
xchg
comiss
xchg
mov
popf
pusha
xor
inc
adc
jno
push
xor
pop
fild
imul
ja
or
jl
inc
xchg
dec
repnz
add
mov
push
xor
adc
adc
cmp
sub
fbld
lock
repz
sar
add
mov
xchg
cmp
in
push
fwait
pop
mov
lods
sbb
icebp
test
lods
pop
sbb
xor
sub
ss
jo
or
jg
xchg
div
dec
push
jns
mov
dec
cwde
mov
inc
mul
or
inc
cld
stc
nop
mov
inc
push
push
hlt
mov
ss
scas
dec
xor
sub
push
jg
add
xor
ds
jle
rcl
push
test
inc
nop
dec
inc
sbb
sbb
movsx
cmp
cmc
sahf
fs
adc
inc
test
shr
loop
inc
sbb
cli
ds
imul
mov
stc
pop
out
xor
sbb
in
(bad)
cs
sub
fiadd
inc
push
pop
xchg
mov
les
or
or
int
aas
call
xor
xor
cdq
jmp
sbb
pop
nop
scas
xor
or
cdq
outs
and
sbb
cld
dec
and
xchg
xchg
push
pop
xchg
scas
add
dec
and
push
adc
stos
xlat
fadd
mov
dec
add
data16
div
inc
or
lock
mov
cmp
mov
adc
(bad)
pushf
test
mov
and
pop
sbb
mov
inc
mov
jne
pop
test
adc
js
mov
mov
inc
in
inc
cmp
(bad)
and
dec
daa
gs
test
das
mov
adc
xor
push
push
and
adc
inc
cwde
popf
adc
push
(bad)
ds
cmp
cmp
lock
ss
popa
outs
and
dec
and
call
dec
add
fisub
push
mov
xchg
pop
sti
cmps
sub
sbb
add
push
(bad)
gs
clc
sub
je
and
mov
xchg
mov
sar
mov
test
sub
rcl
add
jmp
sub
jmp
sub
or
call
ss
mov
je
adc
stos
popf
nop
fs
xchg
jmp
lahf
loope
pop
cdq
push
push
or
xchg
mov
jmp
fs
std
inc
mov
test
pop
mov
add
or
fdivp
shr
imul
mov
jae
mov
dec
test
hlt
mov
jecxz
aas
ret
push
addr16
or
inc
das
add
ret
and
xor
test
add
lods
sar
outs
bswap
inc
mov
rcr
xor
int
dec
cmp
mov
imul
inc
lds
das
(bad)
lock
or
sub
in
ret
rcr
sbb
loopne
push
and
and
jae
jne
rol
lock
jno
shr
retf
mov
test
and
(bad)
mov
and
mov
or
(bad)
fstp
jg
inc
add
int
shl
mov
sub
add
daa
inc
adc
sub
fcomp
and
rcl
sub
mov
(bad)
sub
or
out
pusha
xlat
jle
xchg
lock
push
movs
pop
adc
add
xchg
push
test
inc
jp
clc
pop
jns
retf
pop
or
adc
mov
std
sbb
je
mov
jnp
jle
dec
jecxz
jo
or
(bad)
dec
xor
fild
ds
xchg
jbe
jo
mov
leave
jmp
enter
outs
dec
retf
mov
jno
test
push
jno
xor
sub
push
das
and
sub
outs
and
mov
and
(bad)
into
mov
mov
stos
ss
popf
inc
jge
frstor
pusha
mov
in
lods
mov
in
repnz
dec
mov
add
pop
add
cmps
fldenv
push
enter
adc
shl
push
adc
dec
leave
xor
or
les
or
out
lods
pop
inc
mov
nop
int
mov
enter
xchg
jo
pop
sub
and
call
repnz
mov
shl
dec
and
mov
aaa
inc
inc
or
lods
ins
repz
pop
add
jecxz
pop
cmp
pop
imul
dec
loop
les
inc
imul
icebp
daa
inc
stos
xor
pop
sub
mov
ret
push
push
addr16
shl
pop
add
pop
or
jo
test
ret
inc
jb
cmps
mov
mov
inc
mov
data16
and
mov
dec
jle
mov
adc
or
es
jbe
or
sbb
andps
enter
pop
mov
or
add
add
loope
pop
mov
sbb
xchg
jp
inc
cmovg
jmp
fsincos
mov
ins
adc
sub
inc
pop
xor
pop
sbb
call
add
xor
mov
sbb
fdivr
loopne
xor
adc
inc
push
push
xor
push
inc
push
in
adc
push
in
push
pop
push
sub
repz
push
mov
pop
sub
pop
fadd
movs
inc
cmp
(bad)
and
loopne
and
add
dec
jb
push
fdivr
lahf
rcl
aam
in
mov
pop
mov
inc
inc
pop
pusha
jne
(bad)
popa
add
xchg
cmp
xor
mov
dec
test
fs
xor
ja
les
ss
pop
sbb
sub
ror
dec
sbb
push
or
sub
inc
push
sahf
mov
shl
mov
test
adc
js
cld
(bad)
dec
push
retf
xor
mov
jo
add
push
test
or
pop
cmps
in
cdq
retf
xchg
jb
and
mov
push
xor
int
mov
push
mov
cwde
lds
inc
sbb
jae
dec
mov
adc
add
and
push
and
sub
adc
push
mov
pop
jae
aaa
(bad)
shl
sti
pop
and
(bad)
xor
adc
nop
ss
out
jp
pop
mov
and
cmps
bound
scas
or
fs
inc
cmps
sub
sub
pop
test
adc
xlat
or
mov
movs
adc
pop
cmps
dec
push
inc
outs
add
bound
xor
adc
adc
mov
xchg
das
or
inc
cdq
dec
test
add
mov
and
daa
es
les
jle
and
cmp
or
lods
sub
loopne
frstor
jnp
(bad)
in
std
lock
cmc
pop
pushf
or
inc
retw
out
rcr
sbb
dec
mov
add
or
xchg
neg
outs
dec
cs
sbb
add
mov
inc
pop
or
push
in
mov
ins
inc
ja
ins
ret
cmps
adc
movs
out
mov
xchg
movs
mov
and
cmp
or
sbb
push
push
rcl
sub
push
cmp
pop
cs
shl
jo
test
xor
add
dec
ss
sbb
sbb
and
sbb
pop
outs
adc
push
out
mov
hlt
mov
neg
xchg
sub
mov
push
add
cmp
sub
jnp
mov
push
nop
std
je
mov
push
push
(bad)
mov
inc
repnz
(bad)
out
or
sub
call
add
inc
xchg
scas
loop
adc
mov
mov
sub
(bad)
lods
cld
sbb
mov
adc
mov
pop
sbb
sbb
adc
or
add
inc
xchg
push
dec
jg
rcl
jo
push
retf
enter
adc
mov
inc
ja
push
add
(bad)
and
mov
or
add
ins
push
fs
push
dec
aas
pop
scas
lea
xchg
imul
add
sbb
pop
dec
xchg
xor
push
mov
sub
xor
adc
push
inc
mov
or
cmp
test
inc
bound
loope
adc
out
dec
pushf
add
cld
retf
and
mov
jmp
mov
and
jbe
cmps
adc
retf
(bad)
repz
mov
repnz
ret
popa
push
retf
mov
and
out
add
js
or
and
call
or
out
cli
mov
mov
pop
ins
(bad)
inc
les
or
(bad)
aad
add
and
mov
mov
inc
inc
cmps
cmps
and
ret
outs
and
dec
inc
scas
sar
ja
ja
dec
add
mov
add
adc
add
or
movzx
(bad)
add
add
fst
or
std
mov
jnp
dec
je
add
lods
rol
call
ret
sti
mov
sbb
ins
ds
sub
and
fild
fidivr
fs
sub
sub
jmp
inc
xchg
or
cdq
add
cmp
mov
add
jmp
sbb
and
push
mov
fdiv
js
ret
or
xchg
mov
cmp
ins
dec
or
mov
inc
inc
xor
mov
pop
gs
shl
push
call
xchg
inc
and
inc
dec
jne
push
dec
push
clc
(bad)
sbb
lock
push
setle
sar
push
jg
mov
xchg
add
xor
outs
mov
pop
cmp
ja
push
rol
push
fnstsw
push
lods
jmp
mov
or
fcmovb
mov
jb
(bad)
fdivr
clc
mov
mov
call
push
mov
mov
push
scas
clc
inc
inc
cmp
shl
jge
push
jle
jnp
pop
cmp
sbb
sbb
inc
inc
iret
cmc
in
push
sub
mov
into
mov
ja
mov
xor
jne
ds
pop
nop
sub
and
ja
imul
ins
imul
inc
mov
xlat
lods
and
cmp
ja
inc
fcomp
lea
mov
sar
mov
cmp
ds
mov
lds
pusha
push
push
push
cld
ret
and
repz
push
inc
inc
(bad)
cmc
push
inc
xor
into
mov
lea
ss
sub
and
mov
xchg
adc
mov
mov
loope
mov
enter
jmp
jle
add
jo
aas
(bad)
arpl
add
int3
pusha
mov
js
in
inc
and
das
jg
in
enter
aam
xor
sbb
and
dec
add
xor
and
out
cli
mov
dec
inc
xor
pop
mov
shl
mov
mov
retf
sub
or
lea
ss
and
push
or
sbb
xor
outs
mov
mov
and
sti
out
outs
or
mov
fdivr
xor
pop
outs
pop
inc
add
fadd
xor
jo
mov
outs
add
dec
adc
clc
mov
sbb
sti
or
mov
or
add
loop
cli
test
xchg
shl
js
imul
sub
cmp
jb
mov
rcl
stc
cmp
cmp
sub
adc
clc
inc
mov
push
clc
jp
or
lods
mov
pop
mov
fild
pop
push
scas
ror
jl
icebp
push
aam
jl
(bad)
(bad)
ss
or
mov
inc
push
sub
sbb
ret
pop
cs
add
xchg
mov
(bad)
xor
or
pop
xor
mov
arpl
ror
or
mov
xchg
dec
adc
sbb
lock
adc
and
adc
adc
sbb
sub
inc
enter
enter
cmp
outs
and
retf
ret
jg
xlat
dec
inc
xor
jno
in
xlat
and
adc
xlat
pop
stc
adc
add
mov
pop
or
test
or
xchg
rcr
or
mov
inc
cmp
aaa
and
and
or
and
and
sub
and
and
or
and
and
sub
and
and
adc
and
inc
into
xchg
jne
sbb
and
pop
loopne
rol
scas
sti
adc
rol
mov
retf
cmp
out
xor
and
leave
inc
cmp
inc
xor
and
leave
cmp
xor
inc
xor
adc
adc
jo
and
pop
pop
js
push
dec
mov
dec
mov
rol
inc
aaa
pop
(bad)
xchg
cld
inc
pop
aam
loope
add
add
xor
jb
cmps
mov
cwde
push
pop
mov
push
add
push
mov
push
push
popa
or
push
push
adc
xlat
movs
dec
jecxz
xchg
cld
nop
xor
xchg
das
or
push
rol
push
in
retf
cmp
pop
mov
or
sar
pop
dec
push
les
mov
test
ret
in
push
cmp
xor
cmp
repnz
pop
and
aad
sub
xor
shl
adc
mov
mov
push
fld
nop
and
and
cmps
lods
call
mov
adc
sbb
sbb
enter
retf
outs
aas
add
mov
cmp
jae
adc
xor
or
dec
adc
push
(bad)
(bad)
sub
push
push
hlt
ffree
jae
pop
mov
cmp
in
gs
sbb
jnp
add
cmp
push
ins
cmp
add
xchg
imul
inc
call
arpl
pop
repz
cld
data16
mov
es
xchg
sbb
shr
gs
fld
out
mov
jmp
(bad)
or
push
cld
sbb
fidivr
jae
aas
sbb
push
push
arpl
mov
xchg
and
add
call
push
sub
sub
js
mov
aaa
xchg
xchg
mov
into
in
ffreep
mov
shr
shr
adc
fisttp
dec
jns
mov
inc
add
js
pop
push
dec
mov
ds
inc
jne
data16
cli
and
pop
call
push
ret
add
cmp
and
outs
xchg
mov
sub
nop
adc
push
sub
fist
sbb
fadd
and
in
dec
das
cld
(bad)
or
imul
aam
xlat
cmp
push
ret
or
test
push
(bad)
push
jmp
jge
push
out
js
push
mov
into
jmp
sbb
pop
cmp
add
sub
adc
adc
inc
imul
cwde
retf
shl
rol
mul
jo
add
dec
sti
(bad)
loope
add
pop
dec
imul
lea
inc
dec
bound
fsubr
jo
sbb
lea
and
add
test
scas
fdivr
jle
loope
mov
mov
(bad)
and
dec
add
adc
adc
pop
pop
aam
xchg
pusha
adc
and
add
cmp
je
jmp
add
sub
jae
add
lea
push
add
sub
inc
nop
mov
ret
pop
xchg
fcomip
add
sar
cmp
je
add
popa
inc
push
(bad)
add
or
jne
jl
test
(bad)
(bad)
ja
arpl
add
push
push
adc
xor
mov
cmp
test
or
popa
push
add
jmp
inc
xor
loopne
or
xchg
inc
loope
mov
ins
sbb
clc
lock
xor
sbb
ins
cld
jne
sub
pop
outs
test
add
push
pop
shl
rcr
mov
scas
fnsave
ret
sbb
unpckhps
or
retf
xlat
xor
add
rol
jbe
sbb
and
push
popa
data16
outs
mov
nop
dec
inc
inc
cmp
add
dec
adc
ins
lods
popf
jg
data16
cmp
aas
adc
dec
adc
add
clc
pop
jo
ss
adc
add
add
dec
adc
pop
es
mov
inc
or
push
dec
nop
fcomi
sub
xor
call
add
xor
or
daa
cwde
daa
fisttp
cs
es
call
test
frstor
mov
cmp
es
mov
or
(bad)
test
push
add
stos
sub
mov
pop
loop
fld
mov
xchg
jne
test
mov
mov
loopne
ret
inc
retf
mov
lea
mov
jmp
or
xor
xor
dec
leave
pop
add
int
cmps
add
pop
adc
fmul
and
shl
pop
cmp
jbe
adc
or
mov
out
jns
daa
dec
sub
push
sub
add
sub
adc
nop
push
xor
daa
in
inc
or
pop
xchg
bswap
pusha
xlat
cli
cwde
rol
dec
sub
dec
mov
sar
jmp
in
fidivr
and
jne
sub
xchg
into
xor
shr
sbb
mov
pop
jbe
add
dec
rcr
or
jl
inc
add
mov
jno
xor
hlt
addr16
sbb
sub
pop
jnp
and
in
sar
sub
cmp
add
cmps
and
test
stos
outs
test
das
test
ss
jp
in
inc
cmps
cmp
fist
mov
es
xchg
ret
inc
fwait
and
cmp
add
sub
mov
jb
mov
jecxz
and
push
or
inc
and
xchg
hlt
(bad)
adc
jmp
in
push
lock
and
addr16
dec
dec
push
push
mov
and
(bad)
pop
cmovae
daa
daa
inc
inc
inc
dec
daa
daa
daa
daa
dec
dec
dec
dec
daa
daa
daa
daa
dec
dec
dec
xor
daa
daa
daa
xor
xor
daa
daa
daa
xor
daa
daa
daa
cmp
cmp
daa
daa
daa
cmp
or
daa
and
add
pop
stc
and
movs
test
sbb
inc
xor
je
addr16
sbb
jge
or
and
or
lods
(bad)
jb
in
sti
inc
mov
shl
add
adc
mov
mov
add
dec
push
fiadd
aas
mov
mov
xchg
loop
cmps
in
stos
lods
sbb
cmp
mov
mov
out
push
sub
mov
movs
cdq
idiv
mov
ds
retf
test
xchg
jl
jge
dec
jo
add
mov
je
ins
aas
imul
jge
sub
sub
xor
inc
or
inc
fisub
xor
xor
mov
shl
ror
mov
dec
sbb
jmp
in
in
icebp
add
or
fsub
add
jmp
rol
pop
retf
pop
mov
in
jge
xor
mov
pop
sbb
rcr
mov
mov
call
jnp
xor
xor
arpl
scas
sar
fld
sar
pop
loope
retf
fst
(bad)
xchg
aas
arpl
inc
shl
cmp
fs
in
retf
out
mov
les
add
mov
cmps
push
adc
adc
into
sub
add
adc
mov
dec
jle
out
add
cs
shl
xor
ss
cmp
cmp
cmp
dec
shr
and
sub
dec
shl
inc
inc
xor
shl
inc
dec
dec
dec
xor
daa
ret
add
add
dec
dec
call
dec
pop
and
aaa
(bad)
adc
cmps
imul
cmps
imul
imul
cmps
imul
cmp
sbb
adc
jp
out
and
fs
adc
push
mov
inc
gs
inc
inc
mov
sbb
addr16
jne
gs
mov
push
test
push
pop
add
shl
lods
les
sub
mov
sub
rcl
imul
xor
stc
jne
out
add
data16
add
jmp
lods
in
pop
sub
movs
cmp
adc
sahf
pop
xchg
jnp
retf
mov
in
cmp
movs
retf
outs
push
mov
in
inc
mov
add
ss
mov
or
and
shl
xchg
repz
push
sbb
mov
push
and
xchg
in
shr
loop
sub
jae
add
fcmovne
xchg
mov
adc
in
xor
add
gs
lods
xor
popa
aaa
cmp
les
jb
xchg
je
jmp
sub
push
sub
std
cmps
loopne
jmp
ret
je
cmp
je
jle
sub
pop
mov
cmp
and
stos
adc
jge
sub
jg
je
sub
jmp
add
jb
imul
daa
sbb
mov
daa
mov
inc
xchg
daa
movs
lods
in
loopne
xchg
cdq
jmp
into
or
dec
outs
das
add
clc
or
or
mov
push
int3
push
cmps
sbb
sub
nop
imul
pop
in
sbb
cwde
popf
mov
fs
mov
mov
mov
test
loop
int3
push
loope
xchg
add
add
jecxz
inc
cs
nop
add
add
inc
push
cmp
loop
push
enter
in
test
and
add
pop
pop
out
xchg
clc
or
out
and
jb
ror
call
mov
xor
or
in
jb
test
or
in
and
or
adc
mov
and
scas
outs
push
mov
or
or
sbb
test
push
xor
xchg
xchg
push
mov
add
rol
ret
or
fisttp
enter
mov
add
dec
inc
push
jbe
jno
mov
push
mov
retf
mov
cdq
jbe
jo
adc
js
sub
push
sbb
call
inc
sbb
and
sub
mov
or
mov
or
and
adc
xchg
cmp
xchg
(bad)
xchg
xchg
add
add
mov
adc
mov
aam
fs
add
push
push
mov
jo
cwde
pop
adc
leave
adc
xchg
sbb
loopne
nop
add
leave
sbb
loopne
jbe
mov
sub
pushf
nop
dec
sub
add
sbb
add
test
sbb
ins
enter
sbb
xor
test
sbb
xor
in
add
push
push
fmul
add
nop
pop
jb
pop
enter
daa
sbb
mov
test
sub
hlt
pop
push
and
enter
or
push
in
add
cwde
(bad)
jl
cmp
dec
pusha
and
and
cwde
or
xchg
and
nop
sub
nop
push
mov
enter
and
enter
mov
push
in
add
mov
cld
and
fwait
inc
daa
and
inc
dec
enter
sub
sub
std
fsub
cmps
in
or
loop
mov
daa
sbb
movs
add
loope
sub
or
jb
pop
sub
enter
mov
shl
and
jb
sub
retf
dec
push
(bad)
sub
sub
sbb
and
inc
dec
xor
and
sbb
adc
sub
add
adc
and
xor
or
dec
push
in
xor
xor
js
dec
enter
push
enter
test
xor
inc
dec
enter
xor
fs
add
dec
xchg
add
inc
es
mov
daa
fs
add
pop
add
leave
sbb
aaa
dec
and
xor
cmp
xor
cmp
mov
or
dec
and
xor
cmp
xor
cmp
and
nop
(bad)
cmp
pop
cmp
cdq
fs
cmp
fs
cmps
nop
cwde
cmp
cdq
fdivr
or
xor
inc
enter
aas
sub
inc
dec
add
inc
sbb
nop
sub
inc
adc
es
adc
xchg
or
inc
inc
jne
enter
inc
inc
adc
and
or
inc
inc
ja
in
cmp
inc
or
nop
dec
push
fs
inc
jns
jb
pushf
push
dec
enter
enter
dec
dec
jnp
cmp
inc
adc
inc
es
dec
jl
fs
add
sbb
daa
sub
dec
nop
add
leave
dec
adc
cwde
pushf
fs
cmps
dec
dec
loopne
and
sbb
xor
add
daa
sbb
dec
rcl
and
pop
es
add
dec
pop
fs
addr16
shl
cdq
lea
jo
inc
cli
mov
push
mov
and
xchg
inc
jg
or
jns
push
mov
je
bound
push
add
test
ins
add
and
ret
sub
pop
ins
adc
not
sub
dec
jp
push
inc
cmp
pop
jo
jae
sbb
sbb
daa
inc
addr16
inc
jb
xor
imul
sub
sbb
xor
adc
aaa
xor
and
add
sbb
mov
or
add
xor
push
add
pop
jb
pop
xor
dec
jb
sbb
xor
inc
xor
xchg
adc
outs
dec
dec
pop
push
nop
add
mov
dec
xor
pop
xchg
xor
or
xor
out
mov
outs
dec
clc
aaa
and
(bad)
loopne
test
mov
add
xchg
mov
jae
adc
cs
ret
stos
and
pop
cmp
out
enter
outs
cmp
loope
sbb
add
aaa
mov
sbb
pusha
mov
aas
out
xchg
aaa
pusha
mov
cmp
cmp
cmp
cmp
imul
addr16
xor
pop
pop
jnp
stos
mov
fild
or
ss
test
inc
inc
xlat
push
fadd
mov
jae
inc
sbb
repz
sbb
mov
jg
(bad)
or
xchg
mov
sub
xor
add
jae
dec
daa
inc
mov
add
xchg
nop
push
rcr
sbb
enter
inc
arpl
mov
or
mov
ret
mov
sub
sub
das
xor
fcmovnu
push
mov
mov
and
inc
xchg
fdiv
imul
ins
stos
adc
in
pop
xchg
jp
add
push
push
aaa
movs
and
pop
bswap
movs
jo
push
push
push
arpl
jmp
xchg
jg
repnz
ins
and
push
cwde
data16
jne
jg
cmp
cs
(bad)
out
jb
out
cmp
add
daa
fidiv
pop
aaa
arpl
fadd
fwait
dec
inc
xor
das
sbb
dec
push
dec
sbb
imul
retf
daa
mov
ret
loop
xchg
sub
sbb
out
ffree
inc
jno
dec
inc
mov
or
jae
cmps
cmp
aaa
sub
ins
aaa
and
loope
pop
inc
inc
sub
xchg
mov
or
fwait
wrmsr
pop
xchg
and
inc
iret
jecxz
aaa
add
sub
dec
or
xor
pop
enter
popa
ja
je
add
push
rol
add
enter
xor
test
ins
daa
arpl
arpl
push
inc
scas
lahf
das
(bad)
xor
pop
pop
lods
ins
inc
add
push
inc
scas
xlat
and
imul
xor
lahf
sbb
fidivr
pop
xor
scas
xor
xchg
mov
jg
ins
and
pop
daa
jae
or
ror
aaa
xlat
jno
daa
aaa
aaa
xlat
xor
sub
cmp
sub
mov
push
ins
sbb
ficom
daa
jae
fisub
jg
xor
pop
jae
pop
daa
add
in
mov
ins
adc
pop
and
fwait
mov
xor
xlat
(bad)
dec
jg
xor
mov
pop
inc
cmp
and
xchg
sbb
xor
jno
das
ss
enter
cmp
mov
dec
inc
pop
xchg
arpl
and
and
scas
inc
xchg
fwait
cmp
(bad)
mov
jns
jne
pop
mov
adc
jmp
sub
inc
jg
jnp
nop
adc
pop
sub
ss
sub
mov
push
mov
mov
xor
test
push
sbb
sub
inc
xlat
xor
push
jb
xor
or
xchg
mov
pop
mov
add
xor
pop
mov
and
pop
and
add
xor
xor
test
test
mov
fadd
pop
or
ss
push
fs
cwde
iret
xlat
aaa
or
xchg
add
pop
mov
cmp
fadd
nop
cmp
pop
mov
inc
cmp
bound
push
fild
mov
and
pop
fsub
sti
aad
sub
out
mov
mov
sbb
add
xchg
jecxz
xor
pop
sahf
and
pop
test
lds
outs
(bad)
pop
cmp
fld
call
inc
aas
div
push
jecxz
xchg
pop
shl
pop
imul
dec
je
daa
push
cwde
ret
dec
pop
ins
sub
ins
leave
rcpps
je
and
fwait
sbb
xlat
add
sbb
cdq
daa
iret
pop
dec
push
adc
pop
out
sub
stos
inc
aas
(bad)
pop
dec
push
push
jae
stc
add
inc
jae
push
xor
aaa
xor
xchg
es
mov
sbb
sub
cmp
jg
xlat
fadd
shl
cmp
fiadd
(bad)
dec
data16
sbb
push
jmp
xor
mov
lea
pop
je
fistp
add
mov
cmc
push
xchg
xchg
dec
xor
mov
sar
jmp
add
jno
ja
xor
lsl
jae
rcr
inc
cs
arpl
(bad)
fsubr
aas
cmp
ins
mov
add
push
cmp
setbe
sbb
xor
add
iret
xchg
dec
loope
leave
invd
xor
lds
adc
cmp
pop
sub
sar
dec
xchg
shr
add
add
xchg
inc
movs
xchg
cvtdq2ps
mov
xlat
push
cmp
push
fsub
pushf
xor
mov
add
sbb
cmp
nop
retf
sbb
retf
loope
aaa
push
out
(bad)
xchg
dec
out
gs
add
inc
cmp
in
inc
je
pop
out
lock
enter
in
cmp
in
dec
ror
and
add
in
push
and
xor
je
or
push
xlat
sahf
cs
or
(bad)
in
xchg
xchg
mov
sbb
adc
repnz
scas
lea
dec
mov
sub
dec
popa
xchg
stos
retf
aaa
sub
inc
cmp
shl
sub
ss
and
xchg
sbb
push
andps
pop
dec
ror
inc
(bad)
xor
mov
enter
int
test
ss
retf
shl
pop
jmp
imul
fwait
pop
push
enter
shr
add
es
add
pop
movs
mov
xor
push
add
add
add
add
inc
out
ins
nop
jmp
jnp
int
xor
mov
push
or
sub
leave
push
push
or
add
in
add
cmp
shl
mov
xor
add
icebp
inc
pop
call
mov
(bad)
push
add
jp
inc
data16
or
aam
ins
in
mov
jp
inc
pushf
cmp
adc
daa
or
push
dec
movs
pop
aam
or
xchg
pop
push
adc
mov
push
in
xor
pop
rcr
lock
imul
adc
mov
inc
cmp
mov
sbb
addps
push
push
test
cmp
mov
push
fisttp
or
pop
movs
cmp
fcomp
aaa
or
pop
fsubr
pop
ret
pop
ror
test
sar
rcr
mov
aam
dec
pop
ror
dec
enter
rcr
ror
xchg
movs
xchg
sbb
xor
std
retf
xchg
dec
inc
fcomip
jle
or
pusha
enter
adc
and
rcl
add
int3
add
add
aas
xchg
xchg
adc
lods
or
test
and
mov
lock
dec
cmp
hlt
call
and
jno
mov
dec
sbb
adc
dec
hlt
push
sub
xor
icebp
inc
cwde
and
les
mov
adc
add
sub
lahf
fadd
rcl
and
xor
mov
mov
clc
mov
xchg
mov
xor
add
mov
dec
or
pop
and
adc
ret
or
xchg
jbe
adc
mov
ror
icebp
push
sbb
add
adc
(bad)
stc
(bad)
jg
adc
fsubr
or
fst
mov
inc
dec
adc
div
in
mov
sbb
and
inc
fsub
jns
and
sbb
add
movs
sahf
jg
sbb
idiv
mov
adc
stc
sar
adc
cs
xchg
(bad)
pop
adc
mov
push
test
sbb
shl
cmp
add
jns
dec
mov
jmp
into
or
and
test
or
push
movs
jo
(bad)
nop
add
in
xchg
sbb
je
pop
movs
cmps
cmp
pusha
mov
push
in
sub
int
inc
lock
inc
mov
cdq
(bad)
ret
(bad)
adc
clc
add
cdq
fcom
add
fcomp
adc
pop
cmps
test
enter
imul
cld
dec
add
or
mov
add
call
jl
fadd
fadd
sbb
sub
mov
xor
push
loop
cld
add
pusha
fild
call
loopne
loope
sar
push
pop
inc
cmp
cdq
push
and
aaa
push
movaps
imul
add
xchg
and
adc
es
adc
adc
call
loop
add
clc
mov
lods
inc
dec
call
push
daa
(bad)
xchg
hlt
sbb
hlt
in
and
pop
jbe
leave
lock
lea
mov
mov
dec
scas
ins
xchg
in
into
mov
inc
jne
or
daa
add
mov
sbb
cmp
inc
lock
addr16
and
sbb
inc
sahf
mov
xor
hlt
aas
sub
ss
cmps
jns
sub
mov
ins
fidiv
push
push
sub
mov
mov
adc
movzx
ucomiss
sbb
cmp
jo
or
sub
cmp
adc
or
sub
mov
sbb
or
push
or
pop
repz
mov
pop
sub
push
xchg
(bad)
popa
mov
adc
ins
dec
push
jb
or
pop
cs
push
shl
sbb
push
loope
jmp
loopne
dec
sti
xchg
mov
add
pop
cwde
xor
inc
sub
mov
in
retf
mov
or
(bad)
test
or
pop
sbb
inc
add
adc
outs
inc
daa
pusha
pop
jb
cs
dec
daa
test
bound
jo
out
mov
dec
dec
dec
pop
dec
sbb
sub
loopne
dec
push
and
add
ror
ds
jl
outs
add
sbb
scas
adc
mov
(bad)
mov
inc
cmps
inc
sub
pop
repnz
(bad)
test
sub
cs
cmp
mov
ins
add
mov
not
(bad)
loope
iret
aam
xchg
jbe
dec
or
xlat
pop
daa
icebp
inc
in
cmp
sub
xor
dec
mov
bound
and
sti
ror
pusha
sub
ret
cmp
daa
(bad)
and
not
movs
sub
sub
(bad)
sub
leave
shr
inc
(bad)
xor
mov
(bad)
push
dec
dec
push
mov
sbb
pop
push
sbb
loop
or
sbb
mov
mov
(bad)
call
imul
jo
adc
inc
and
iret
outs
es
inc
imul
add
mov
pop
jmp
outs
add
cmps
aas
sbb
sbb
test
mov
mov
cmp
outs
sbb
daa
mov
lods
sub
lahf
or
add
cmp
sbb
outs
push
add
pop
shr
pop
push
mov
arpl
cmps
dec
xor
mov
jecxz
xor
push
call
push
daa
dec
inc
fdiv
pop
ffree
jl
or
mov
rol
inc
fbld
daa
sub
mov
mov
and
add
inc
test
inc
or
pop
add
stos
mov
add
adc
sbb
adc
or
mov
mov
ror
adc
add
inc
mov
inc
sbb
and
cmp
(bad)
fld
call
(bad)
adc
sbb
jmp
sbb
xor
aad
inc
imul
sbb
mov
mov
sub
aam
test
xchg
leave
ins
or
dec
push
mov
dec
(bad)
mov
enter
mov
push
sbb
shl
fcmovnb
pop
dec
dec
adc
dec
pop
sub
jne
inc
cmp
imul
push
xchg
ja
xchg
or
add
sbb
cmps
mov
shr
adc
xor
xchg
lea
and
sub
xor
inc
adc
ins
jns
inc
test
push
xor
(bad)
ror
mov
sbb
push
inc
add
loop
ret
aad
inc
or
mov
(bad)
push
retf
mov
add
jo
or
or
repz
out
fdecstp
cli
retf
stos
or
in
pushf
mov
daa
mov
cmp
je
dec
sbb
mov
or
cmp
arpl
dec
and
mov
dec
mov
add
inc
adc
movs
call
dec
das
adc
pusha
xor
adc
call
mov
dec
rcr
mov
mov
ror
int
enter
jl
jge
nop
int3
jmp
fcmovu
sbb
jp
sbb
mov
add
test
cmp
sbb
jne
or
ins
movs
fldcw
jns
mov
and
push
xor
xchg
mov
jns
xor
inc
dec
sbb
jg
xor
xchg
sbb
pop
inc
xchg
dec
(bad)
mov
mov
dec
inc
test
aaa
sub
ret
add
aaa
jne
es
mov
mov
adc
sub
add
add
add
and
jmp
and
mov
mov
adc
or
iret
and
(bad)
iret
(bad)
stos
or
mov
xor
inc
jne
sub
xor
mov
sti
add
test
scas
add
push
inc
and
shl
dec
mov
ds
pop
hlt
mov
xor
or
pop
pop
or
sub
sub
call
adc
cmp
out
loopne
sti
xor
push
add
jecxz
xor
das
push
pop
and
inc
jl
xor
or
int3
enter
cmps
adc
jns
and
dec
push
and
in
shl
add
cmp
push
adc
fnstenv
pop
adc
pop
lods
pop
xor
sbb
add
add
addr16
xor
bound
inc
test
inc
mov
inc
scas
pop
sbb
xor
adc
rol
push
mov
mov
xlat
dec
xchg
ror
xor
ins
and
and
xor
mov
or
jne
xor
rol
out
sbb
sbb
adc
fwait
jbe
jne
or
ins
inc
or
cmp
adc
or
movs
in
inc
push
sbb
shr
adc
scas
cwde
ss
push
or
sub
mov
pop
add
or
mov
jnp
inc
ja
scas
ja
ret
adc
iret
mov
adc
in
in
aaa
gs
je
cmp
rdtsc
pop
mov
aaa
or
and
dec
adc
xchg
sub
sub
ds
sbb
pop
cmps
push
sbb
movs
adc
faddp
lahf
ds
je
inc
sahf
mov
cmp
cmp
dec
mov
inc
sbb
ss
imul
dec
pop
and
sbb
xchg
inc
push
sub
dec
adc
ror
out
and
xor
or
push
add
adc
fcmovu
out
jo
mov
sbb
pop
aas
dec
push
cmp
or
nop
xor
out
sysexit
or
push
push
add
inc
shl
push
add
adc
xor
mov
inc
aaa
dec
cmp
sbb
rcl
xchg
lea
(bad)
sbb
dec
mov
mov
mov
test
or
xchg
xchg
aas
arpl
outs
cmp
or
mov
add
push
or
add
aaa
ins
xchg
adc
inc
iret
sbb
dec
dec
aaa
dec
imul
pusha
dec
inc
adc
sbb
bnd
cmp
push
xor
fsub
bound
cmp
rol
jl
add
adc
dec
jo
xchg
(bad)
cmp
or
mov
jbe
pop
ret
dec
cmp
mov
pop
cmp
or
(bad)
xor
aas
cmp
and
push
ins
mov
inc
jbe
pop
dec
add
dec
aam
inc
aad
arpl
sbb
xor
add
add
add
sub
push
push
add
daa
loope
lods
fs
add
pop
punpckldq
or
ret
shr
mov
ret
lods
push
ss
cmps
add
lds
in
push
and
adc
lea
and
mov
cld
popf
pop
lock
enter
sbb
xor
or
in
enter
(bad)
jmp
dec
stos
mov
push
push
xor
and
or
or
test
cmp
mov
or
and
sti
ucomiss
(bad)
in
inc
sbb
cmp
(bad)
xor
addr16
sub
adc
inc
push
shl
push
add
push
mov
inc
cmp
push
cmp
call
sbb
in
das
or
add
hlt
loopne
push
or
jae
aaa
dec
pusha
jmp
sbb
push
cmp
mov
jo
fdivr
ss
mov
out
cmp
dec
or
outs
call
inc
xchg
(bad)
aad
das
scas
pop
mov
aas
xchg
test
sbb
sub
leave
out
int3
or
dec
sub
sub
popa
mov
push
jnp
loope
cdq
or
or
movs
inc
out
xchg
or
fadd
mov
xchg
fwait
scas
and
dec
movaps
sbb
enter
leave
mov
and
inc
push
xor
pop
daa
adc
mov
in
push
and
cs
je
push
pop
iret
arpl
xchg
or
int
adc
mov
call
rol
add
push
push
test
fadd
daa
push
mov
out
dec
and
out
aaa
adc
adc
xor
or
xor
gs
adc
inc
dec
inc
inc
imul
hlt
add
mov
lds
mov
push
add
rcr
push
mov
rcl
add
outs
mov
or
bound
dec
and
mov
jg
jge
maskmovq
not
jl
mov
pop
mov
ficom
(bad)
mov
push
fst
cmp
fisttp
(bad)
mov
dec
js
or
mov
add
add
xor
dec
jb
xor
xor
fiadd
pop
(bad)
jmp
mov
adc
mov
cwde
adc
sbb
or
jae
add
ds
jl
cwde
arpl
add
inc
sbb
rcr
or
jp
loop
sub
sbb
rdtsc
xor
sbb
fs
and
(bad)
xor
pop
jns
dec
adc
fdivrp
outs
adc
aam
add
fcmovb
jae
mov
cmp
dec
rol
sar
adc
inc
add
mov
loopne
ds
aas
out
pop
mov
sbb
icebp
jne
xchg
repz
aam
cmp
add
jne
mov
shl
iret
pop
jbe
stos
pop
data16
mov
leave
enter
outs
cwde
cld
retf
enter
inc
outs
mov
repz
fadd
and
xor
sub
and
push
sub
inc
outs
bound
(bad)
pop
push
sbb
inc
jb
xor
inc
mov
ret
aas
dec
loop
fidivr
sbb
push
jmp
aam
inc
cmp
jne
mov
mov
jle
and
push
jg
das
xchg
push
stc
add
sahf
or
mov
mov
mov
cmp
shl
push
mov
or
lahf
retf
add
scas
add
add
xor
imul
das
adc
pop
xchg
mov
mov
pop
inc
sub
movs
loop
sub
lods
lods
xchg
mov
or
sub
jp
jbe
add
adc
(bad)
into
jmp
popf
scas
sbb
or
or
add
mov
mov
or
push
lea
cld
cld
outs
inc
test
adc
aam
sahf
in
cmp
cmp
push
jbe
ins
dec
fdiv
inc
(bad)
mov
or
(bad)
popa
add
pextrw
cmps
mov
push
aaa
nop
or
sub
mov
add
and
cmp
jge
(bad)
fcom
xchg
push
jge
push
jo
in
ins
or
loope
jmp
sbb
retf
dec
adc
xchg
and
adc
repnz
dec
ds
enter
mov
inc
mov
fild
inc
lods
cs
enter
cs
dec
scas
add
and
and
repnz
ins
outs
push
popa
lds
xchg
test
dec
lods
xor
leave
call
es
and
test
xor
push
imul
loope
xor
ja
cmp
inc
enter
add
or
adc
ficom
push
mov
dec
inc
mov
inc
cmp
jg
fstp
adc
outs
es
mov
bound
jg
jge
jmp
adc
jne
inc
push
mov
cmp
add
add
cmp
test
mov
jbe
imul
sub
push
and
sbb
xchg
pop
push
stc
mov
cmp
add
nop
inc
dec
xor
add
dec
cmp
out
add
or
inc
push
sub
iret
in
test
jae
ins
mov
pushf
retf
or
es
imul
push
call
or
(bad)
dec
shr
and
xor
jle
or
dec
mov
and
jle
loope
push
lock
lea
dec
and
loop
jmp
and
cs
dec
sbb
sti
test
(bad)
cmp
cmc
mov
push
mov
push
loop
sub
fidiv
inc
int3
inc
fs
add
xor
sub
or
xchg
push
adc
data16
rol
push
mov
sbb
data16
push
dec
jae
ins
fadd
adc
cwde
shr
mov
jmp
shr
sbb
movs
mov
push
pop
rol
shr
push
test
adc
add
sub
daa
adc
retf
and
xor
add
add
xchg
sti
jnp
pop
sub
mov
shr
and
fimul
mov
cs
xor
and
mov
fnstsw
dec
je
retf
jae
sub
(bad)
out
mov
shr
mov
dec
adc
dec
sub
addr16
(bad)
or
pop
(bad)
(bad)
xlat
pop
push
xor
test
mov
adc
cs
les
mov
xor
fmul
xlat
push
push
loopne
mov
cmp
pop
icebp
test
or
outs
div
xor
(bad)
and
scas
xchg
or
add
jg
add
push
mov
fdivr
sbb
lock
(bad)
add
pop
mov
xlat
adc
sub
xchg
jg
cld
sbb
sbb
add
repnz
and
and
scas
test
add
sub
jg
stc
add
xor
cld
add
pop
xor
xchg
jno
std
cmp
daa
nop
jg
cmp
and
mov
add
aas
jb
repz
sbb
xchg
dec
call
pop
pop
es
push
movs
push
xchg
cld
stos
(bad)
mov
stc
and
rcl
adc
adc
pop
adc
(bad)
mov
add
add
cmp
sbb
mov
shl
xlat
inc
repnz
and
out
loope
cmp
pop
enter
add
and
jg
stc
add
xor
add
add
pop
or
sbb
fld
outs
bound
xchg
std
mov
xchg
and
cli
call
dec
cs
jno
or
and
or
(bad)
popf
ins
xor
int3
cmp
and
in
pop
int3
inc
jmp
xlat
adc
nop
jg
cld
sbb
pusha
dec
mov
mov
repnz
xor
(bad)
jle
sub
pop
fsub
test
out
aam
lahf
inc
(bad)
sbb
and
cmp
aam
cmpxchg
repz
(bad)
xlat
cmp
clc
xchg
cld
add
jl
pop
or
daa
test
and
hlt
nop
push
add
xchg
jmp
inc
or
add
and
adc
mov
stc
add
adc
add
ret
pop
pop
xlat
or
xchg
int3
or
stc
pop
enter
jge
out
inc
pop
and
and
cmp
loopne
cld
add
out
(bad)
sbb
repnz
nop
jg
add
adc
pop
inc
inc
sub
xor
add
pop
enter
add
test
adc
xor
or
or
ins
movs
bound
xchg
les
call
cmp
push
cmp
mov
sbb
movzx
pop
adc
and
hlt
movs
jge
mov
jne
sub
test
jbe
sub
mov
jae
or
mov
sub
das
test
mov
inc
push
daa
outs
mov
dec
mov
int
mov
jl
mov
inc
call
add
pushf
and
or
imul
fwait
xor
xor
(bad)
scas
sbb
pop
xor
inc
inc
(bad)
retf
adc
data16
cs
out
push
enter
jo
mov
sbb
push
test
jle
dec
gs
rcr
push
pop
push
push
and
call
ja
and
inc
sbb
and
adc
or
push
mov
add
pusha
add
dec
sub
or
shl
(bad)
cmp
sbb
imul
in
mov
xor
inc
in
fisttp
mov
sbb
inc
idiv
mov
xor
jnp
and
add
xchg
cld
inc
or
(bad)
icebp
jo
pop
xor
scas
jo
adc
mov
pop
xor
add
push
pop
push
cdq
inc
rcr
xor
or
pusha
cld
sahf
jns
dec
adc
pop
stc
fcomp
inc
enter
xor
in
jmp
add
enter
jge
pop
push
adc
sbb
shl
add
mov
cmp
add
jns
pop
test
test
in
aam
inc
xchg
xor
push
cmp
xchg
pop
leave
leave
xlat
nop
nop
jnp
dec
sbb
cwde
mov
inc
mov
jb
push
cwde
inc
scas
movs
popf
adc
mov
add
cmp
test
cmp
ins
jp
jne
ds
mov
inc
sub
cmp
push
ins
add
xchg
push
xlat
lock
and
push
push
cmp
call
add
cs
cli
inc
push
inc
inc
add
or
ret
(bad)
cmovbe
repz
sub
inc
xchg
mov
cs
cmp
sbb
push
nop
or
xor
adc
inc
in
adc
mov
pop
les
sar
test
cdq
add
dec
xchg
jmp
mov
xor
sbb
mov
jne
sub
fs
mov
push
pushf
or
test
push
or
add
sbb
int
add
nop
pop
enter
sub
xor
imul
outs
in
and
inc
popa
add
pusha
cmps
or
and
add
pop
aas
mov
je
shr
stos
or
les
out
pop
adc
add
cwde
dec
and
push
add
comiss
adc
dec
outs
call
jbe
loopne
and
and
dec
pop
inc
add
adc
mov
sub
pusha
sbb
mov
add
xor
(bad)
xchg
jno
popf
addr16
mov
repz
fsub
add
les
sbb
jne
cmp
mov
cmp
and
mov
and
fsub
mov
retf
fmul
sbb
mov
es
cmp
push
aad
sbb
push
add
int3
(bad)
lock
in
push
int3
mov
cwde
enter
inc
jne
or
addr16
daa
les
call
xchg
sub
rol
add
call
js
and
nop
mov
in
push
push
add
adc
into
enter
adc
test
outs
inc
sub
arpl
js
cwde
dec
out
add
adc
adc
div
xlat
ins
push
mov
mov
call
scas
lock
sbb
lods
mov
fwait
mov
push
add
leave
leave
scas
sub
add
or
pop
xor
shr
lea
mov
aas
sbb
jbe
iret
pop
aas
push
mov
jne
or
dec
add
xchg
ja
and
stos
xchg
xor
add
xor
scas
bound
rcl
inc
in
push
jns
fs
je
fs
mov
mov
adc
leave
xlat
cs
sub
test
jp
(bad)
xchg
stos
aas
cs
shl
and
test
xor
inc
gs
mov
and
inc
imul
xchg
pop
mov
fistp
mov
adc
nop
and
out
pop
pop
pop
les
dec
mov
or
clc
fcmovbe
jge
nop
push
or
sbb
imul
xor
add
and
sbb
lahf
repz
nop
fwait
cmp
jge
xor
dec
push
add
mov
jns
push
push
pop
addr16
in
in
or
rcr
outs
xchg
outs
mov
dec
repz
push
movs
ins
imul
push
pushf
test
iret
jnp
repz
adc
dec
push
mov
push
(bad)
nop
lahf
pop
and
push
mov
out
add
ds
pop
push
sbb
outs
adc
sub
inc
inc
dec
dec
popa
jo
shr
dec
loopne
jae
ficom
daa
aad
and
sub
inc
jo
inc
sbb
leave
xor
and
out
and
xor
mov
mov
je
(bad)
ret
idiv
and
ficom
adc
adc
xlat
push
sbb
sbb
in
out
mov
imul
cld
imul
repnz
jecxz
cmp
cmp
sub
mov
sub
push
add
cmps
xchg
and
pop
inc
mov
mov
or
adc
pusha
ror
leave
sbb
gs
adc
or
popf
mov
or
outs
gs
shl
push
inc
in
addr16
dec
shl
fs
pop
and
adc
inc
mov
in
int
(bad)
jg
add
imul
pop
adc
dec
or
dec
imul
sbb
fdiv
dec
push
imul
push
ja
test
movs
and
push
add
imul
adc
mov
xchg
test
push
stos
mov
out
push
xor
addr16
loope
add
jnp
inc
cmp
jo
sub
adc
fbld
repz
adc
pop
adc
xchg
and
lods
loop
mov
xchg
dec
xor
cld
adc
push
dec
add
imul
push
inc
pop
fs
push
cmp
or
xchg
sbb
in
ins
lods
add
lds
mov
pop
ins
and
fldenv
call
cmp
pop
mov
retf
shl
mov
cli
ja
mov
imul
aas
xchg
int3
and
inc
mov
cmp
add
in
shl
dec
cmps
mov
aam
and
scas
and
nop
xchg
cmps
pop
inc
ins
imul
and
lods
push
adc
ret
pop
mov
push
xchg
inc
sti
in
inc
cmp
push
sbb
addr16
mov
dec
les
retf
bound
and
sahf
adc
push
lods
push
push
mov
pop
cmps
ins
sahf
cmc
and
imul
and
and
ins
or
xchg
add
aam
rol
push
and
or
pop
aaa
pop
(bad)
scas
xor
lods
sbb
sbb
jo
ss
xor
fld
add
cmp
lea
inc
inc
xchg
sub
dec
mov
push
mov
pop
xor
jmp
xor
xchg
jno
xlat
cmp
imul
mov
sub
stos
imul
sub
sti
fs
mov
movs
xor
jmp
inc
pop
xchg
push
das
lock
push
jnp
in
jb
out
mov
sbb
mov
test
sub
cmp
into
push
sbb
sub
test
or
fidiv
or
sar
xor
sbb
push
push
xchg
(bad)
mov
and
and
pop
mov
movs
jmp
les
enter
cli
movs
test
mov
lock
xchg
ins
pop
sbb
out
int3
clc
add
sti
(bad)
test
inc
adc
sub
jl
xchg
adc
pop
add
aad
gs
fcomp
jae
push
into
and
leave
and
mov
or
in
xchg
cmp
test
cmp
mov
dec
int
mov
mov
pusha
outs
movs
pop
sub
jmp
inc
es
das
and
test
daa
xchg
fs
les
aas
sub
or
push
ret
adc
and
and
pop
aas
aaa
mov
pop
or
push
xor
aaa
push
and
pop
test
mov
jmp
aam
adc
adc
pushf
ret
and
sbb
fwait
or
jg
call
ds
adc
and
test
add
jnp
inc
clc
out
lock
jne
fisubr
adc
ret
pop
and
in
fwait
nop
cmp
jne
cwde
sbb
dec
test
loope
push
mov
push
aaa
jne
jp
pop
and
adc
sbb
jo
xchg
or
ds
dec
mov
mov
imul
jne
mov
sbb
(bad)
not
mov
(bad)
aaa
imul
sbb
pusha
add
cmps
jl
jp
cmp
push
mov
mov
pop
clc
arpl
mov
sbb
ins
inc
pop
inc
and
ja
mov
xor
pop
push
xchg
sbb
or
mov
ficom
mov
mov
test
push
push
pcmpgtw
mov
sbb
xchg
pop
inc
jno
cmp
nop
mov
test
test
pop
mov
add
js
cmp
ss
gs
ds
add
outs
stos
push
arpl
cmp
xor
fwait
xor
or
inc
dec
push
mov
xchg
rol
and
add
sbb
pop
lock
daa
and
xchg
cmp
cld
ja
fxch
xor
inc
xor
dec
adc
repnz
fs
bswap
cwde
cld
outs
or
jmp
and
repz
outs
adc
dec
mov
fld
and
fdiv
xchg
sub
and
pop
cmps
sbb
dec
adc
(bad)
call
or
mov
inc
popa
inc
pop
jae
add
arpl
(bad)
pop
push
leave
push
xchg
dec
mov
ret
or
push
int3
push
add
test
push
jg
xchg
shr
les
into
pop
dec
inc
mov
add
inc
fs
dec
jp
jnp
xchg
push
push
xlat
sbb
ins
arpl
inc
adc
jge
push
push
adc
mov
ins
fld
lock
mov
pop
lahf
retf
imul
lods
cli
push
retf
ds
sub
inc
cmps
sbb
cmp
inc
jno
jle
push
mov
and
adc
add
out
fwait
jb
dec
xlat
rcr
mov
iret
mov
dec
dec
push
retf
add
inc
lea
inc
scas
mov
adc
push
daa
pop
or
jnp
sub
adc
cmp
je
and
pushw
sbb
cdq
add
mov
and
xor
mov
push
stos
add
jmp
jl
pop
gs
mov
sbb
sbb
(bad)
ins
les
sbb
mov
push
sbb
imul
push
fisttp
dec
mov
mov
push
mov
cmp
or
sub
mov
inc
inc
add
ins
fucomip
add
pop
aad
(bad)
xor
pusha
add
or
add
mov
push
cmps
cmp
jmp
outs
inc
jns
imul
xor
mov
adc
mov
xor
mov
sbb
loopne
xchg
jb
adc
jmp
inc
outs
fwait
retf
add
adc
inc
xor
mov
inc
add
fmul
mov
or
xor
mov
or
sbb
mov
movs
add
mov
inc
jle
jmp
sub
pop
cmps
dec
fisttp
pop
mov
inc
xor
xlat
dec
popf
jle
mov
mov
add
add
ss
pushf
shr
push
jecxz
adc
stos
push
inc
xchg
ss
dec
xchg
or
ins
jg
push
enter
jg
inc
dec
aam
cmp
arpl
mov
iret
aam
fimul
(bad)
adc
jecxz
sbb
les
xor
mov
and
mov
js
jb
and
and
pop
adc
dec
lods
pop
xor
push
add
mov
fld
dec
ins
pushf
adc
ds
cmps
xor
or
shr
inc
daa
(bad)
push
jmp
fisttp
lahf
inc
mov
mul
mov
mov
mov
fadd
and
push
fistp
xor
mov
cmc
jle
adc
jmp
dec
movs
mov
(bad)
enter
test
add
jns
or
jmp
sbb
dec
xchg
or
or
arpl
cli
adc
jmp
xchg
cmc
push
dec
ss
mov
add
jo
push
dec
adc
dec
sub
mov
imul
sar
jnp
(bad)
lahf
add
or
outs
mov
popa
add
lock
and
rcl
mov
xchg
retf
rol
mov
xor
or
jne
pop
adc
nop
ret
cmps
ins
scas
(bad)
(bad)
cmp
pop
jg
ins
push
daa
xor
cwde
push
iret
lea
repz
push
xor
xor
pop
xchg
jne
jmp
sbb
jne
test
out
inc
adc
mov
ret
mov
xchg
dec
sbb
or
push
or
push
dec
popa
push
inc
dec
test
out
pop
push
or
outs
sbb
shr
push
or
test
and
push
jne
mov
loope
ins
pop
or
jg
fcom
mov
sbb
add
push
enter
xor
pop
sbb
ja
mov
cmp
int3
jo
fiadd
loope
add
and
xor
inc
out
cmp
xor
inc
jne
mul
cld
adc
fbstp
lods
adc
jb
test
mov
push
mov
inc
dec
aad
mov
jne
mov
cli
mov
test
pop
push
add
or
test
sti
mov
mov
xor
ret
pusha
xor
pop
mov
inc
fldenv
sbb
pop
add
add
inc
inc
xchg
test
(bad)
jb
aas
push
lea
mov
inc
or
out
cmp
jmp
sbb
pop
inc
adc
jg
(bad)
and
jmp
dec
scas
push
push
mov
dec
iret
or
js
movs
xor
cmp
fcmovnu
movs
loop
jl
(bad)
retw
loope
jno
hlt
sahf
xchg
mov
(bad)
sbb
inc
push
imul
ficom
stos
mov
adc
mov
push
nop
inc
sbb
inc
jb
lods
and
xchg
xor
aaa
loopne
push
and
xchg
pop
mov
addr16
xchg
add
sub
push
adc
inc
add
add
arpl
rcl
or
cmps
jne
pop
sub
jecxz
sub
aad
inc
inc
aas
xor
ja
xor
push
mov
or
mov
adc
mov
(bad)
jb
out
push
(bad)
pusha
pop
out
cmp
loop
int3
nop
push
movs
inc
and
push
add
xchg
retf
shl
test
cmp
xor
outs
iret
inc
sbb
cmp
xchg
test
or
mov
in
sbb
inc
inc
aas
xor
fsub
outs
or
dec
xchg
outs
sbb
adc
inc
inc
jbe
lds
mov
adc
dec
cmps
daa
mov
mov
pop
jmp
dec
(bad)
imul
add
pop
mov
push
int
jecxz
cmps
jo
(bad)
jg
fs
xchg
test
push
ja
or
add
shr
fisubr
sub
aam
push
or
add
or
fcmovnbe
adc
xor
push
push
jg
imul
outs
fidiv
imul
and
or
push
into
pop
test
popf
rol
add
call
sub
gs
cld
lods
fdivr
mov
push
cmp
dec
test
xor
pusha
outs
xchg
jle
push
adc
push
arpl
xor
ret
sbb
or
dec
pop
push
inc
push
(bad)
fild
mov
cmp
mov
enter
(bad)
iret
ffreep
sub
or
mov
mov
outs
in
ins
scas
dec
daa
je
sbb
rol
pop
push
les
stc
dec
push
adc
and
jb
mov
fdivr
cmp
aaa
push
mov
sbb
test
mov
or
ds
push
add
xchg
(bad)
clc
popf
int
mov
es
push
js
pop
shl
mov
mov
data16
push
sbb
mov
add
or
test
movs
fsub
or
cmp
cmps
push
mov
fist
push
or
pop
movs
push
inc
iret
aam
out
icebp
ds
(bad)
out
mov
data16
out
push
pop
jbe
lods
add
(bad)
sti
mov
push
pop
push
mov
mov
retf
sar
push
call
push
mov
ss
inc
out
mov
sahf
jg
imul
pop
or
nop
ins
out
out
lods
ds
rol
push
push
nop
mov
push
mov
mov
mov
pop
movs
add
mov
ror
sub
mov
cmp
ins
xor
pop
mov
movs
subpd
adc
ret
sbb
gs
sbb
xchg
out
xchg
mov
pcmpeqw
cmp
jae
and
adc
repz
or
adc
nop
ss
add
in
nop
mov
or
xor
pop
dec
xlat
loopne
pop
push
fcomp
lods
xor
cmp
sub
adc
xor
nop
xchg
jbe
push
test
push
sbb
mov
push
fsub
push
jb
inc
repnz
cmp
das
mov
and
cmp
push
cmp
in
in
and
out
ins
push
cmp
sub
push
sar
bswap
out
jb
int3
aam
or
inc
mov
adc
cmp
jmp
xlat
push
stc
ins
(bad)
push
xchg
dec
and
fwait
imul
arpl
icebp
adc
fs
ss
xor
fwait
push
ins
dec
rcl
out
inc
xchg
jo
and
int3
sub
inc
cmp
cmp
and
cmp
cmp
mov
cmp
cmp
or
cmp
jl
mov
(bad)
pushf
sbb
mov
adc
push
push
(bad)
aad
(bad)
mov
add
push
or
and
adc
(bad)
fldz
adc
xchg
mov
test
inc
adc
inc
push
fld
aaa
inc
popf
test
inc
push
shr
inc
scas
add
outs
inc
in
in
sahf
mov
push
fs
les
rol
stos
push
add
inc
daa
cmps
jae
repz
cmps
bound
lods
aam
and
xor
add
arpl
xchg
ss
jp
(bad)
pop
pop
xor
jecxz
daa
scas
push
call
pushf
and
adc
push
xchg
je
xor
mov
cdq
retf
sbb
sub
sbb
xchg
mov
add
arpl
aam
rcr
or
pop
jnp
jnp
mov
and
aam
aad
or
xor
call
mov
int3
inc
movs
aam
loope
ror
add
add
or
ins
popf
adc
xchg
and
adc
pop
adc
stc
inc
sub
add
push
inc
shl
push
push
psubw
sub
adc
push
dec
jo
into
inc
inc
push
push
sbb
push
mov
inc
adc
push
or
loopne
repnz
push
cmp
add
adc
mov
pop
ja
cs
dec
in
sub
or
mul
call
inc
sahf
pop
mov
cmps
jae
out
push
cmps
dec
lock
inc
mov
adc
cmp
push
mov
(bad)
cmp
(bad)
ins
addr16
add
jne
gs
dec
or
dec
pop
cmp
lods
jne
fimul
and
adc
stc
bound
add
sbb
sahf
cmp
out
inc
push
test
inc
inc
sahf
outs
xchg
mov
fcomp
push
or
in
mov
inc
ficom
sbb
dec
push
xlat
int3
fs
call
mov
mov
sbb
xchg
inc
out
inc
pop
mov
in
xchg
xchg
inc
xor
js
inc
sahf
push
fisttp
hlt
hlt
dec
pushf
add
and
sti
jp
xchg
ins
outs
ins
dec
pop
test
push
sub
jno
lahf
scas
leave
mov
ja
cld
add
push
loopne
cmp
add
dec
imul
mov
pop
and
push
and
addps
aam
cwde
mov
cmp
jo
add
pop
es
out
push
push
daa
in
pop
push
xchg
mov
inc
sbb
add
inc
push
pusha
mov
dec
sub
les
inc
add
mov
sub
sahf
aaa
adc
shr
cmp
add
mov
js
fidiv
mov
mov
adc
addr16
xchg
or
cld
xchg
mov
add
fcom
outs
repnz
add
inc
push
fimul
test
sub
add
or
dec
inc
arpl
adc
gs
pusha
cld
in
ret
clc
or
pop
add
(bad)
pop
sar
dec
mov
jmp
add
in
daa
add
adc
outs
xor
int3
pop
movs
ins
loope
dec
(bad)
fild
jg
xor
sbb
int
je
sub
ins
call
push
push
add
sub
setb
scas
inc
call
inc
pop
add
into
movs
sub
mov
xor
adc
out
pop
xor
mov
mov
xor
rol
cmp
and
jle
and
pop
jne
push
push
dec
adc
scas
push
mov
adc
hlt
mov
adc
xor
pop
pop
icebp
int
add
shl
jb
adc
movs
pop
mov
jo
inc
inc
bsf
adc
push
push
inc
pop
inc
dec
call
test
cmp
jbe
ret
outs
inc
outs
pop
ja
outs
outs
push
icebp
fdiv
fs
mov
in
out
dec
ficomp
lock
out
fcom
(bad)
ja
fld
mul
jge
mov
in
loopne
loopne
mov
add
and
pop
aad
imul
or
nop
add
in
mov
or
inc
jns
inc
mov
call
sbb
xchg
call
cmp
dec
push
adc
in
js
in
sbb
enter
add
adc
xchg
jns
jb
cmp
fwait
lock
push
ja
lock
or
ss
xchg
enter
pop
push
and
inc
stos
xor
ret
dec
loop
rcl
pop
(bad)
jo
leave
ins
jnp
xchg
(bad)
clc
dec
inc
mov
jno
out
psrlq
cmovno
jl
inc
outs
mov
mov
cdq
cmp
xchg
fsubr
bnd
and
add
or
and
add
and
or
xchg
add
push
addr16
add
or
fcomp
push
mov
dec
ja
xchg
pushf
cwde
outs
enter
or
pop
sub
xchg
or
je
sbb
adc
dec
cmps
add
stos
adc
xchg
inc
adc
nop
xchg
and
mov
xchg
mov
adc
adc
pop
jp
push
jns
xor
sbb
sbb
mov
inc
push
push
call
aas
add
dec
(bad)
out
fcom
jl
sub
pusha
outs
or
jmp
sub
jl
mov
and
nop
fcmovnb
in
push
xor
jmp
push
fwait
imul
gs
lods
mov
push
pop
or
add
or
psubusw
enter
cmp
adc
adc
inc
or
add
pop
pop
popa
mov
jge
and
lods
(bad)
movs
aas
sbb
pop
lds
daa
fld
mov
inc
xor
outs
fs
daa
ror
dec
sub
sbb
cmp
jbe
xchg
dec
(bad)
jo
and
inc
push
dec
jo
gs
sbb
xor
push
push
clc
(bad)
jae
pop
arpl
or
fsub
push
jnp
push
pop
xor
ins
leave
push
jmp
inc
sahf
pop
fistp
pop
cmp
pop
pop
bound
daa
shl
xchg
inc
out
rcr
outs
inc
xlat
xor
(bad)
int3
inc
es
inc
sbb
sbb
test
adc
nop
ja
and
and
and
cdq
test
test
sbb
or
push
je
xchg
mov
jbe
or
push
test
xchg
neg
and
sbb
nop
pushf
ror
xor
mov
enter
or
fmul
enter
loopne
call
in
lock
clc
enter
cld
add
add
enter
or
adc
enter
sbb
and
enter
sub
xor
enter
cmp
inc
dec
enter
dec
push
push
pop
or
add
cmp
pusha
pop
or
jg
sub
imul
mov
dec
mov
test
cmp
cdq
jl
pop
adc
jne
xor
cwde
mov
add
shl
je
or
arpl
pusha
or
pop
loopne
mov
fs
xor
test
pushf
repz
lods
hlt
mov
mov
pop
mov
outs
or
jmp
sbb
stos
ja
push
push
pop
cmp
pop
loop
jo
mov
push
lock
mov
push
int
mov
push
add
push
mov
adc
sbb
mov
adc
pop
adc
shl
jae
out
adc
sbb
ins
rol
sub
pop
cmp
pop
mov
push
add
mov
push
or
adc
fs
mov
in
dec
shr
inc
xor
inc
mov
add
scas
nop
adc
loope
mov
scas
and
jne
xchg
rcr
and
inc
cs
leave
push
enter
mov
out
push
in
in
push
fcomp
shl
nop
mov
pushf
and
mov
xchg
or
or
mov
jb
or
mov
cmp
mov
and
aaa
or
outs
adc
xchg
xor
loopne
or
inc
mov
add
cmc
in
loop
pop
add
daa
seta
inc
jl
cmp
int
idiv
fmul
or
enter
jno
bswap
jmp
add
repz
mov
mov
sub
clc
sets
mov
xor
sub
push
popa
call
int
stos
inc
xchg
adc
jb
or
fwait
enter
push
cmp
shl
ss
sub
and
inc
push
cmp
inc
mov
lock
jmp
je
shl
mov
jmp
mov
adc
ret
mov
xor
adc
test
inc
and
cmc
fstp
fwait
cmps
sub
xor
add
test
inc
dec
je
mov
scas
pusha
mov
xor
jp
(bad)
mov
and
lds
cmps
cmp
lea
mov
xor
movs
repnz
mov
xchg
aam
xchg
loopne
aad
ins
sbb
add
sbb
xor
xchg
idiv
or
add
add
adc
mov
mov
sti
(bad)
je
xchg
mov
pop
test
test
test
or
mov
(bad)
jne
xchg
pusha
es
daa
aas
sub
mov
xchg
gs
sbb
daa
pop
pop
jmp
jge
or
mov
nop
rcl
push
dec
cs
xchg
mov
scas
pop
call
(bad)
call
jmp
add
sbb
add
jbe
retf
shr
lea
mov
aas
sub
jl
rol
push
shr
pop
test
fs
pop
nop
xchg
out
cs
pushf
mov
push
inc
push
lea
ret
mov
mov
jmp
cmp
xchg
add
and
jmp
ss
pop
mov
lahf
minps
mov
fmul
mov
xor
mov
(bad)
setbe
dec
pop
call
gs
shl
cmp
mov
sahf
iret
push
call
dec
mov
jno
shr
pop
enter
repnz
add
test
in
jb
lods
mov
fsub
inc
sahf
pop
scas
(bad)
out
xchg
sub
dec
sbb
lahf
sub
add
scas
adc
or
popa
jl
add
pop
sbb
add
inc
jo
aam
mov
jbe
sub
dec
push
sbb
std
call
sub
dec
or
leave
add
stos
pop
test
dec
add
inc
(bad)
xchg
dec
rol
sahf
pusha
inc
add
cmp
je
movs
jae
mov
mov
frstor
call
inc
add
mov
movs
fadd
adc
mov
inc
sbb
pop
pop
addr16
mov
mov
dec
and
cmp
out
xor
push
add
js
adc
dec
nop
call
or
ret
cmp
je
mov
(bad)
mov
mov
ret
inc
dec
scas
adc
xor
and
and
mov
cwde
cmp
push
neg
cmc
add
bound
dec
ja
div
fisub
push
outs
xchg
add
pusha
in
pop
xor
shl
inc
push
xor
inc
mov
xor
nop
dec
nop
lahf
push
push
mov
fs
push
clc
inc
inc
inc
mov
cmp
lods
sbb
cwde
(bad)
fidivr
pop
js
or
mov
mov
add
mov
leave
fist
add
stc
push
jnp
stos
cmps
adc
dec
or
jns
add
pushf
in
mov
sub
add
in
sahf
xchg
adc
test
mov
fldcw
add
psrld
xchg
jl
mov
leave
add
inc
pop
sbb
mov
mov
adc
jmp
mov
jg
fdivrp
push
mov
out
or
inc
inc
sbb
inc
outs
sbb
outs
cmp
and
mov
mov
imul
or
xchg
inc
or
add
xchg
dec
mov
fldz
pop
mov
test
cmp
(bad)
sti
arpl
add
data16
call
xor
imul
pop
(bad)
stc
cmps
cmp
pop
push
aas
sub
xor
shr
mov
or
push
xchg
iret
sbb
iret
fld
add
sahf
adc
add
and
push
sbb
js
or
dec
jb
int3
cdq
ror
ret
inc
push
xchg
inc
adc
cmp
push
jge
icebp
in
ret
shl
hlt
inc
fs
sbb
adc
ret
inc
pop
xchg
cmps
add
and
loopne
dec
ins
(bad)
adc
shr
push
outs
pop
xor
mov
(bad)
dec
cmp
pop
imul
inc
and
or
xor
imul
jne
add
or
(bad)
or
(bad)
xchg
cmp
rcl
push
adc
mov
ror
xchg
xor
push
push
scas
xor
mov
xchg
cdq
push
jo
lea
pop
mov
dec
xchg
xchg
clc
les
aaa
or
and
scas
call
ror
xchg
retf
mov
pop
mov
or
mov
icebp
adc
stc
pusha
cmp
pop
in
dec
add
gs
(bad)
repnz
je
xor
or
add
pop
mov
and
jge
sub
mov
out
sub
adc
and
test
out
out
xchg
inc
xor
jge
xchg
mov
shl
in
call
enter
je
enter
popa
mov
cmp
sbb
xor
dec
or
jp
fist
mov
hlt
mov
scas
shl
push
dec
stos
into
dec
daa
jbe
inc
es
cdq
nop
dec
(bad)
in
adc
jge
mov
mov
popa
jle
test
add
adc
cmps
repnz
sahf
sbb
or
jne
mov
inc
or
into
or
xor
push
popa
pop
rol
push
sub
stc
inc
sub
pushf
adc
push
(bad)
mov
fcomp
sahf
shl
daa
mov
sbb
pop
pop
sbb
jmp
mov
inc
aam
repz
or
rol
mov
test
lock
push
call
push
xchg
push
or
mov
sbb
cmps
mov
pop
lods
adc
jns
outs
addr16
mov
xor
js
sub
test
jo
mov
fcmovbe
add
pop
jg
bound
mov
loopne
xor
inc
bswap
cmp
stos
sahf
add
hlt
leave
dec
mov
jmp
mov
inc
retf
sub
dec
retf
imul
and
mov
mov
fs
into
add
add
in
cmc
int
pop
cdq
enter
cmp
cmp
mov
ret
test
jmp
mov
test
mov
cmp
sub
(bad)
and
mov
and
add
xchg
add
inc
push
inc
add
inc
cmp
sub
psubb
ret
xor
or
dec
jno
and
pop
mov
int3
mov
and
adc
in
mov
adc
push
xor
jecxz
add
dec
shl
xor
out
xor
xchg
loop
adc
es
fidivr
xchg
hlt
adc
repz
push
push
adc
not
and
sbb
push
mov
lock
add
push
dec
mov
mov
cmp
fs
int
mov
(bad)
out
retf
lods
dec
imul
ds
pop
cmp
cs
push
inc
jne
loope
mov
and
test
xchg
and
movs
adc
and
movs
ins
movs
repz
sbb
popf
ins
jb
neg
adc
and
xor
cmp
or
out
not
adc
test
or
sbb
sti
sar
inc
inc
leave
sbb
mov
inc
cwde
adc
mov
add
jl
jmp
daa
data16
lea
xor
cmp
lahf
sbb
mov
sbb
xchg
movs
(bad)
mov
mov
adc
pusha
out
add
ins
in
aam
pop
imul
push
xlat
mov
leave
add
jne
adc
aam
arpl
pop
or
and
add
mov
add
in
adc
das
mov
sub
or
pusha
ins
mov
cdq
adc
stos
cmp
add
in
aas
add
inc
push
fs
hlt
add
inc
push
fs
clc
or
inc
push
fs
cld
and
mov
pop
test
add
add
movs
pop
add
outs
lahf
sar
movmskps
bound
add
mov
fadd
xchg
and
inc
cmp
pusha
test
cmps
shl
push
inc
sub
addr16
cmc
hlt
dec
sbb
push
push
je
pop
xchg
dec
xlat
inc
mov
fist
adc
or
xlat
nop
jnp
ror
ror
icebp
stos
jae
add
push
cmp
cmp
dec
mov
dec
aam
mov
dec
ret
lock
rol
inc
push
and
xor
push
jae
jmp
mov
out
push
dec
outs
push
mov
lds
pop
add
sbb
adc
jno
loopne
pop
and
aam
add
sbb
sbb
sbb
cmovge
jo
or
and
je
shr
pop
shl
andps
dec
nop
pop
stos
and
sub
mov
(bad)
(bad)
out
xor
jl
(bad)
xor
push
into
js
add
adc
sub
shr
adc
iret
and
dec
lea
or
jnp
xchg
test
pop
sbb
mov
(bad)
sbb
or
wrmsr
aam
mov
rol
push
xor
inc
rol
push
enter
les
aam
dec
push
inc
and
or
out
add
add
xchg
jecxz
mov
aaa
inc
xor
pop
add
add
sbb
and
push
enter
pop
push
push
scas
aad
aaa
enter
sbb
(bad)
sub
pop
push
xor
and
pusha
or
aam
and
fst
xchg
xor
aas
mov
ret
mov
scas
popa
shr
scas
in
dec
mov
pushf
sub
add
push
jne
and
mov
xchg
mov
or
jmp
data16
mov
int3
in
adc
pushf
enter
pxor
xlat
ins
pop
and
adc
and
rcr
dec
inc
push
mov
inc
push
cdq
in
xlat
mov
dec
xor
movs
xor
enter
mov
stos
xchg
pop
fcmovnbe
xor
add
mov
xchg
(bad)
cmp
nop
es
cmp
call
loop
movs
test
mov
int3
dec
fist
push
sbb
(bad)
fimul
or
int
add
fld1
add
and
push
mov
and
fs
pop
or
sar
ja
popf
loopne
in
sub
or
retf
call
in
mov
dec
pop
add
adc
inc
and
mov
arpl
out
add
sbb
outs
pop
cs
pop
add
jbe
and
or
out
daa
adc
mov
ins
ins
aaa
into
seto
mov
pop
lahf
adc
push
push
or
pop
rol
cs
xchg
dec
outs
and
jecxz
adc
rol
mov
cmps
inc
rol
cmp
fcom
mov
inc
mov
and
lea
fnstenv
add
adc
pop
repnz
into
outs
sar
cmps
pusha
test
jno
call
jecxz
cmp
in
jmp
add
fwait
mov
pop
jb
jmp
push
pop
and
inc
lods
sub
nop
cwde
and
add
es
jbe
ins
aaa
(bad)
cmps
inc
add
(bad)
cs
mov
mov
jo
lahf
repnz
fcmove
mov
pop
mov
pop
cmp
mov
xchg
cmc
push
dec
or
add
and
addr16
or
push
out
mov
adc
shr
call
push
jl
retf
xor
in
in
push
xchg
cwde
and
dec
cld
or
mov
mov
xchg
(bad)
sub
stc
lahf
sub
push
bound
jb
arpl
mov
jo
jne
add
fwait
inc
or
test
adc
xor
cmp
adc
rcl
push
popf
ret
sbb
loopne
sar
les
or
lock
jmp
mov
inc
dec
xor
ja
sub
and
daa
aaa
les
mov
xchg
xor
daa
(bad)
sbb
sahf
cmp
push
aas
adc
cs
fcom
xchg
loopne
mov
jne
sub
pop
int3
(bad)
xor
mov
mov
push
mov
hlt
pop
fwait
mov
adc
sbb
sub
jno
mov
fisttp
lds
cs
pop
or
in
jecxz
shl
leave
hlt
es
lock
pop
mov
adc
mov
jmp
ja
fld
sub
pop
push
shl
cmp
(bad)
clc
inc
fdivr
mov
aas
jmp
push
mov
test
rol
mov
ficom
push
adc
test
les
aas
cmp
jecxz
dec
adc
sbb
inc
sbb
jae
xchg
push
rcl
dec
push
adc
jecxz
adc
test
imul
inc
xchg
ins
and
and
imul
pusha
mov
mov
add
xlat
fild
ret
push
xchg
sbb
jo
xor
jecxz
push
xor
out
(bad)
sub
test
stc
inc
in
ret
loope
jb
aad
mov
and
fild
mov
test
jnp
push
or
popa
mov
mov
xor
pop
dec
enter
jecxz
mov
xor
cld
in
lock
xor
xchg
lock
sar
lds
in
lock
pop
sbb
(bad)
add
mov
test
push
pop
dec
dec
pop
leave
fiadd
mov
jo
call
(bad)
push
jb
push
fwait
in
test
xchg
pop
call
mov
ret
in
loop
adc
inc
loope
popf
push
int3
int3
out
test
test
rcl
sub
and
mov
mov
sub
scas
adc
push
add
xchg
dec
push
add
out
shr
cmp
cmp
in
out
mov
rol
sbb
dec
(bad)
xor
mov
xor
push
call
punpckhwd
add
enter
lods
cmps
rcr
xchg
jmp
push
adc
shl
sub
xchg
inc
fadd
aad
push
mov
fdiv
shr
fmul
inc
test
push
pop
and
xor
retf
sar
retf
dec
ins
(bad)
test
mov
sbb
inc
sub
dec
enter
mov
and
adc
adc
test
int
push
xor
(bad)
sub
push
jmp
jmp
jb
pop
jb
mov
pusha
and
inc
ja
shl
adc
xchg
add
cmps
lahf
jo
sbb
mov
fimul
rcl
sbb
pop
fldcw
clc
jmp
pop
dec
xor
mov
push
xor
and
cwde
push
jo
les
pop
js
pushf
inc
test
add
jecxz
or
adc
cmp
and
pushf
lock
mov
in
or
or
sbb
adc
ins
push
inc
sub
cwde
mov
arpl
jo
mov
mov
inc
and
inc
push
push
lds
and
aam
push
retf
dec
dec
inc
jo
jbe
fbld
cs
sbb
pop
mov
mov
fwait
es
sbb
lods
je
sub
mov
inc
lds
or
mov
add
ins
sbb
pop
scas
rcr
xlat
dec
test
mov
adc
sbb
adc
xchg
sbb
ja
or
sub
rcl
loope
or
inc
xor
jp
mov
ret
mov
ins
mov
and
dec
aaa
xor
lock
int
out
in
loopne
xchg
jl
xchg
add
imul
pop
push
add
pusha
adc
push
adc
adc
sbb
xor
daa
and
add
mov
mov
or
sub
adc
call
pop
stos
mov
inc
cmps
inc
adc
push
or
jne
and
pop
popa
cmp
fiadd
imul
and
and
imul
icebp
pop
mov
add
loope
sub
fs
cwde
sub
je
or
pop
std
or
jmp
jmp
sub
rcr
test
add
or
adc
jg
push
mov
lods
xor
cmp
mov
pop
adc
enter
inc
inc
data16
movs
mov
enter
loopne
int3
fmul
stc
pop
dec
xchg
mov
test
les
movs
cmp
fucom
pop
jns
add
sbb
stc
inc
(bad)
push
and
mov
aad
cs
(bad)
fstp
mov
leave
into
jge
nop
fadd
das
rcl
mov
cdq
rol
mov
cmp
mov
scas
nop
mov
adc
jo
cmps
add
mov
shl
add
fidiv
inc
arpl
test
das
mov
push
rol
and
or
cmp
xor
adc
fs
push
mov
neg
lods
fst
icebp
sbb
hlt
shr
(bad)
(bad)
das
shl
int3
lock
mov
or
cmps
pop
sub
shl
add
or
mov
popf
inc
xchg
add
leave
rcl
sub
adc
daa
xor
mov
shl
jnp
cmp
xor
fisttp
frndint
add
dec
arpl
inc
push
es
fnstenv
sbb
ins
inc
cwde
mov
add
sbb
sbb
icebp
jne
mov
xchg
(bad)
dec
imul
dec
fisubr
cli
dec
std
mov
inc
enter
push
xchg
inc
aas
pop
add
fidivr
fsubr
mov
lds
lea
jo
pop
ins
popf
js
or
add
fmul
cmp
mov
sbb
mov
jae
xchg
repz
test
add
xchg
mov
pop
xchg
mov
adc
push
mov
cmp
jmp
dec
pusha
inc
xchg
mov
ins
popf
ret
scas
mov
mov
pop
js
stos
xchg
ret
and
mov
xchg
inc
lahf
push
aam
pop
mov
xchg
dec
sbb
xor
arpl
adc
sub
sub
rol
or
(bad)
popa
das
push
rcl
or
jbe
ret
scas
or
xchg
mov
xor
xor
dec
fcmovu
adc
dec
(bad)
mov
add
sbb
add
dec
pop
cmps
xor
sahf
cmp
jp
xchg
jg
inc
jge
jnp
out
xchg
dec
les
or
mov
test
inc
add
add
or
add
push
push
test
ret
movs
dec
sub
in
leave
add
les
ins
xchg
and
inc
mov
jo
(bad)
adc
mov
or
cmps
int
scas
dec
es
mov
cld
pushf
inc
dec
push
mov
fmul
add
jne
dec
sub
outs
fdiv
in
jmp
(bad)
shr
mov
xor
add
dec
xor
xor
add
mov
xor
in
cmp
add
mov
cmps
out
les
stos
hlt
loopne
movs
sub
xor
xor
sbb
mov
dec
mov
mov
and
nop
nop
mov
in
jle
inc
mov
add
test
leave
push
loop
add
ss
rcr
mov
add
in
and
movs
pusha
punpckhdq
test
or
sub
(bad)
mov
pop
mov
jae
or
add
cwde
div
cmp
hlt
or
adc
mov
(bad)
jmp
ins
nop
hlt
fwait
dec
jle
mov
pop
push
mov
push
imul
je
inc
sbb
xor
xchg
les
cmp
je
cwde
add
and
mov
or
mov
int
pop
add
and
add
mov
loopne
xchg
mov
dec
mov
popf
rcr
jg
mov
xor
push
add
xchg
cmp
daa
push
and
or
pop
or
ret
movs
inc
or
les
scas
xor
loop
mov
sbb
lahf
or
inc
push
inc
adc
mov
out
daa
add
in
pop
dec
xor
sbb
les
outs
push
popa
cmp
sub
jmp
fimul
add
or
sub
enter
lds
movs
sub
mov
sti
jne
mov
pop
outs
add
push
or
jmp
popa
sbb
sub
aam
dec
es
jg
movs
int
clc
inc
leave
ret
lods
pop
and
push
dec
jae
push
or
je
inc
pop
cli
dec
ret
ret
mov
sar
push
xchg
bound
hlt
ins
and
rcr
add
inc
dec
xor
adc
mov
sbb
push
add
lea
aaa
sahf
add
icebp
shl
add
and
mul
test
nop
scas
or
xor
jo
imul
push
add
xor
push
inc
xor
loope
jmp
cmp
jne
loopne
and
dec
pop
mov
pop
and
push
adc
cwde
fadd
add
popa
sbb
dec
adc
std
or
sub
add
fnstsw
sar
cs
dec
(bad)
out
and
jae
or
call
sbb
ins
test
xor
int
push
and
jbe
fwait
je
or
adc
jle
sub
(bad)
in
and
inc
fld
sub
sbb
adc
mov
push
xor
xlat
adc
xchg
pop
jge
mov
test
pop
adc
add
mov
inc
and
sub
pop
hlt
sbb
ror
pusha
and
or
rcr
rcr
inc
or
and
cmp
jnp
sbb
retf
clc
cmp
mov
adc
jl
sbb
or
dec
sbb
mov
dec
aad
mov
dec
inc
inc
sub
pop
retf
inc
dec
cmps
cmp
jp
jecxz
sub
sub
jne
cmp
sub
or
mov
and
pop
xor
into
jg
or
mov
outs
add
ss
mov
mov
es
loopne
icebp
xchg
fwait
mov
mov
sub
sub
sub
xor
xchg
pusha
mov
ja
add
jb
lods
mov
sbb
jo
mov
inc
inc
inc
and
dec
push
repnz
sar
adc
mov
mov
out
rol
and
or
fild
leave
xor
dec
xchg
mov
dec
push
aas
push
push
and
daa
push
inc
bound
lock
popa
popf
nop
xor
in
dec
adc
push
inc
fcomp
or
hlt
jb
xor
hlt
add
pop
les
adc
jo
push
jbe
mov
or
add
imul
rol
pop
push
add
add
and
mov
jl
pop
or
fcom
push
inc
pop
pop
repnz
add
jmp
xchg
or
add
jne
xchg
push
clc
cmp
les
fstp
push
cld
push
(bad)
sti
jns
and
jmp
mov
loopne
sub
sti
mov
jmp
and
ret
test
or
push
xchg
aas
add
and
push
repnz
add
push
cmp
lea
jb
ficomp
fld
push
cvttps2pi
xor
nop
mov
mov
add
push
xor
cmps
mov
ds
xchg
test
pop
or
or
sbb
jae
sbb
sbb
add
inc
xchg
addr16
fiadd
dec
add
daa
test
sub
and
sbb
aam
add
mov
sbb
lods
adc
adc
mov
mov
in
sub
rol
cmp
sbb
sub
and
sahf
cmps
cmp
outs
push
xchg
movs
mov
int
jns
add
loopne
lahf
idiv
adc
and
aas
dec
pop
add
iret
imul
push
rcl
xor
out
(bad)
dec
xchg
mov
dec
repz
(bad)
cmc
add
adc
xchg
cmps
repnz
lods
out
sbb
sbb
dec
push
inc
sahf
out
push
gs
icebp
fwait
sub
or
sub
rol
lods
in
cs
or
adc
dec
jmp
ja
or
cdq
shr
pop
repnz
jb
pop
jb
(bad)
call
sbb
enter
test
or
sbb
or
in
sbb
pop
jb
aam
pop
cmp
add
ins
fcom
sbb
inc
push
enter
cmp
in
push
jl
add
add
fsub
sbb
adc
dec
sbb
sbb
in
and
pop
in
push
in
mov
(bad)
sbb
jns
and
pusha
cmp
add
mov
adc
sub
leave
xor
adc
mov
dec
jg
dec
sbb
jecxz
xchg
push
dec
push
push
mov
test
push
mov
dec
cmova
xchg
xlat
pop
fld
dec
mov
(bad)
ins
repnz
xchg
jl
xchg
inc
mov
sub
mov
test
sbb
ja
add
mov
test
outs
aam
rcr
sbb
popa
jns
iret
rcl
xchg
adc
add
ja
dec
test
dec
ins
bound
pop
or
fisubr
rol
sub
inc
xchg
rcl
mov
(bad)
adc
movs
xor
mov
pop
xor
addr16
cvtps2pi
push
or
jbe
pusha
lods
jnp
jae
adc
mov
imul
outs
dec
add
pushf
fbstp
jae
retf
cmp
cmp
push
pop
xchg
(bad)
dec
inc
stos
mov
adc
push
xchg
dec
adc
sbb
sub
sub
jae
sbb
xor
lahf
and
push
mov
xchg
fisubr
pop
adc
jns
das
mov
lods
ret
mov
jo
mov
dec
cmps
xlat
push
fist
fiadd
test
jmp
loop
(bad)
jp
add
and
push
push
sbb
dec
cmp
and
outs
stos
push
test
dec
jecxz
aaa
mov
stos
das
addr16
mov
dec
sbb
call
add
add
push
xchg
(bad)
sbb
shl
or
lods
pop
daa
pop
xchg
ja
inc
imul
ja
mov
in
popa
call
daa
and
or
pop
and
mov
gs
adc
adc
adc
pop
add
pop
jno
jo
arpl
xchg
or
mov
ins
das
sbb
and
sbb
adc
or
or
xor
adc
fcom
sbb
sti
mov
cwde
mov
add
or
pop
rol
xor
jo
mov
push
xchg
addr16
sbb
addr16
adc
push
or
jae
jp
je
les
popa
fsub
mov
daa
dec
adc
ret
test
adc
mov
mul
fist
add
jne
cmp
(bad)
push
add
(bad)
and
pop
push
xchg
and
dec
xchg
adc
pusha
adc
(bad)
pop
mov
sub
daa
push
xchg
sub
and
adc
sbb
je
dec
lahf
sbb
sub
push
sbb
xchg
iret
lods
and
mov
pop
outs
pusha
loop
lahf
out
dec
pop
xor
sbb
adc
mov
inc
cmps
or
mov
out
fcomp
clc
clc
push
dec
xor
lds
pop
sub
add
sub
mov
retf
push
and
int3
shl
xchg
mov
pop
and
mov
shrd
or
push
imul
xchg
ret
mov
pop
call
sbb
shr
imul
jo
in
xchg
ins
hlt
and
out
xor
ror
je
adc
out
xor
pop
(bad)
and
out
and
mov
je
sbb
cmp
test
xchg
xchg
and
cwde
mov
or
popa
les
add
leave
push
mov
push
xor
jae
xor
xlat
cs
xor
or
cmps
xor
cmps
add
or
jne
(bad)
sbb
push
push
or
xor
test
es
cmp
stos
test
pop
adc
scas
and
dec
(bad)
stos
enter
xor
cmp
les
push
mov
push
xor
(bad)
(bad)
rol
inc
push
enter
daa
adc
mov
push
pushf
push
and
mov
mov
adc
adc
stos
mov
push
bound
xchg
cmp
xchg
shl
add
fistp
xor
daa
ret
cmc
loope
and
nop
fwait
add
hlt
pop
hlt
mov
push
sbb
sub
aas
mov
push
call
in
int3
add
in
popf
loop
mov
call
popf
sbb
stos
cwde
out
loopne
adc
sbb
daa
in
bswap
cmp
mov
or
fsubr
and
or
adc
je
xchg
es
push
(bad)
daa
push
loopne
and
ja
or
mov
mov
outs
ss
xor
inc
aad
dec
cli
and
out
(bad)
mov
xchg
push
jb
sbb
mov
add
nop
mov
cmp
jmp
mov
inc
sbb
bnd
mov
dec
jb
repz
add
test
add
xor
and
test
add
ret
push
jo
push
enter
inc
arpl
jmp
mov
pop
pop
sbb
rcr
rcl
sbb
jle
push
jno
adc
add
fldenv
scas
outs
mov
cmp
mov
mov
nop
push
or
mov
and
jg
mov
nop
cwde
mov
xchg
mov
lock
rol
pop
add
pop
into
xchg
aam
sti
or
mov
scas
movs
pop
sti
cmp
cmp
pop
xor
repnz
or
xchg
add
xchg
leave
ror
jo
ret
or
lahf
push
xchg
adc
dec
mov
test
and
push
sti
add
mov
shl
and
dec
xchg
xor
jge
mov
or
fwait
or
push
fbstp
mov
xor
pop
enter
lea
inc
cmp
mov
push
sub
icebp
imul
lock
xor
aas
pmulhuw
iret
je
sub
mov
(bad)
dec
sub
(bad)
in
dec
push
enter
add
rol
iret
lea
and
cmps
dec
mov
and
and
dec
pop
adc
inc
pusha
add
out
or
and
xchg
fisubr
xlat
ror
push
pop
bnd
add
(bad)
cmps
shr
add
and
mov
xor
pop
nop
in
ins
dec
dec
test
pushf
cmps
jp
jno
scas
jl
movs
add
shl
adc
or
fwait
or
(bad)
jg
mov
nop
daa
or
lods
mov
xchg
push
inc
push
adc
jecxz
pop
add
or
add
push
fs
mov
or
mov
xor
out
int
or
adc
add
jg
or
cmp
xor
les
nop
rcl
xor
pop
add
adc
and
sub
aas
das
push
iret
cwde
add
lahf
lock
gs
outs
nop
xor
ins
mov
cli
add
daa
ret
mov
aaa
nop
dec
mov
adc
enter
cmp
add
or
mov
pop
and
imul
xchg
sub
cmp
dec
clc
out
outs
xchg
xchg
mov
imul
mov
mov
in
push
test
cmp
or
pusha
das
or
push
ret
je
mov
xor
nop
out
aaa
imul
sbb
pop
mov
loopne
mov
sbb
cmp
mov
pusha
and
shl
fld
and
out
add
push
inc
jle
adc
loope
xchg
das
mov
scas
sub
test
or
cmps
imul
dec
jmp
or
or
fistp
dec
mov
sub
aaa
xchg
jmp
je
dec
jne
mov
cmp
dec
cs
fisttp
add
fstp
imul
push
push
pusha
aam
sbb
inc
push
in
es
aaa
add
mov
xchg
cmp
add
jl
(bad)
ret
sbb
pusha
sub
and
or
sbb
and
(bad)
xor
jns
out
push
ins
jae
jg
shl
out
xchg
xchg
mov
cmps
imul
and
mov
sbb
loopne
sub
inc
push
fdiv
mul
out
mov
or
push
out
sahf
sbb
ss
out
(bad)
inc
nop
in
je
outs
adc
push
push
jmp
push
pop
dec
adc
pop
mov
cmp
add
and
pop
cmp
adc
lock
imul
sub
xor
leave
hlt
je
or
aaa
ins
gs
in
ret
sbb
xlat
jg
fdivr
dec
cmp
add
movlhps
adc
sub
bound
jno
jns
loopne
inc
sub
cmps
popf
clc
fisub
inc
xchg
js
sub
sbb
add
sbb
cmc
jbe
push
lock
push
sahf
ret
add
jmp
pop
cmp
loopne
jns
test
call
jge
jb
cmp
and
push
out
test
enter
test
ret
out
push
shl
add
xlat
movs
add
mov
jp
add
shr
jns
push
adc
sub
jmp
and
dec
fsubrp
(bad)
sub
inc
inc
jle
loopne
scas
jl
das
and
test
mov
dec
dec
sahf
ins
jmp
and
sub
stos
repnz
addr16
add
int
test
pop
inc
es
es
gs
outs
push
pop
rcl
imul
or
mov
xchg
or
inc
cmp
rcl
daa
es
xchg
sub
popa
dec
jae
push
inc
ret
xor
nop
xchg
jb
add
add
push
outs
jmp
inc
xchg
(bad)
add
arpl
cmps
sbb
jne
(bad)
shr
push
xor
gs
lods
mov
aas
xchg
adc
push
sbb
and
xlat
and
and
popa
xor
adc
pop
ret
push
outs
or
sub
push
xchg
pop
ret
push
jmp
and
lods
aas
mov
xchg
xchg
or
add
sbb
mov
test
mov
inc
cmps
imul
inc
dec
sbb
je
arpl
shl
imul
(bad)
jbe
mov
mov
in
add
mov
frstor
test
icebp
add
ins
sub
jg
ja
fisubr
push
mov
add
and
mov
jmp
sub
mov
push
inc
jle
mov
dec
test
lds
add
xchg
loopne
dec
pusha
(bad)
adc
test
cld
sbb
push
mov
into
xchg
data16
xchg
outs
stos
rcl
sbb
imul
adc
in
and
cmovae
jo
pop
(bad)
xchg
adc
scas
or
push
ret
and
stc
pop
ret
cmp
adc
lock
push
nop
inc
sub
cmp
mov
push
movs
pop
imul
xor
mov
out
fs
mov
call
inc
jle
sbb
or
jg
cmp
ret
mov
cmp
mov
and
nop
inc
ja
(bad)
mov
pushf
pop
(bad)
retf
add
xchg
inc
mov
movs
mov
js
mov
jg
leave
inc
leave
clc
push
cmp
cmp
popa
pop
je
jmp
sub
xchg
repnz
and
mov
movs
movntps
fild
inc
fst
cmps
outs
mov
sub
dec
outs
cmp
jmp
fnstenv
jmp
movs
frstor
push
jmp
neg
xchg
cwde
sbb
aad
inc
repz
repz
lods
outs
inc
pcmpgtd
xchg
(bad)
push
inc
sahf
cwde
push
addr16
push
shl
adc
sti
(bad)
in
retf
inc
lock
rcl
and
sub
cmp
or
mov
cmp
inc
adc
push
add
ficomp
nop
add
xchg
shl
or
inc
push
mov
add
pop
mov
jge
dec
mov
or
inc
in
cmp
jge
and
adc
lock
or
jae
add
and
mov
ret
mov
jmp
pop
sbb
inc
pop
or
adc
addr16
js
inc
in
xor
hlt
jl
out
nop
mov
jecxz
scas
sbb
or
nop
imul
xchg
add
add
xchg
fiadd
jg
dec
cmp
imul
fdivr
xchg
sub
hlt
popa
outs
nop
es
mov
(bad)
mov
pushf
and
xor
adc
xor
push
add
push
movs
adc
les
or
jmp
pop
cwde
ret
lods
movs
pusha
sub
inc
rcl
dec
fadd
jle
and
sub
inc
jle
pop
adc
loop
arpl
dec
add
mov
sub
mov
pop
mov
in
inc
cmp
cmp
clc
loope
cmp
test
dec
(bad)
popa
fs
and
lea
mov
stos
push
xchg
push
jg
inc
(bad)
cmp
xor
jle
adc
inc
add
add
mov
cmp
and
dec
push
into
inc
mov
into
inc
pop
pop
push
pop
sub
jge
in
xor
nop
shl
mov
push
add
fdecstp
fwait
je
jmp
mov
sub
cli
mov
fild
outs
pusha
ret
cmp
iret
outs
js
jge
cmp
data16
add
push
inc
or
inc
cmp
jl
aas
gs
test
ja
cmp
aam
aas
sub
(bad)
enter
lea
or
mov
cld
ja
sahf
rol
pop
fnstenv
arpl
dec
les
inc
jmp
loopne
bnd
daa
sbb
add
lods
xor
pop
daa
mov
xor
push
and
lds
and
mov
xchg
add
mov
sub
add
pop
dec
sbb
sahf
arpl
sbb
call
mov
inc
push
add
sub
cmc
or
sbb
xchg
aaa
add
sub
mov
jp
sar
pushf
pop
(bad)
lock
push
or
sti
aaa
gs
inc
in
repnz
inc
inc
std
inc
and
sub
aas
aad
nop
test
xchg
cdq
ins
stos
cmp
xor
imul
mov
cmp
mov
loope
and
out
loop
loope
dec
sub
mov
sar
mov
mov
je
out
or
adc
pop
or
fist
pop
pop
mov
shr
adc
jmp
pop
mov
std
lock
fs
add
xor
push
out
aas
fiadd
dec
movlps
in
rcl
adc
ret
add
movs
mov
mov
push
or
mov
mov
and
cmc
add
sub
sub
lods
adc
stos
jp
mov
jg
test
shr
fiadd
fdivr
and
push
and
mov
lock
inc
dec
adc
sub
out
sbb
gs
xor
push
mov
push
pop
adc
push
or
push
dec
push
and
shr
(bad)
inc
push
inc
dec
xor
mov
adc
repnz
inc
or
mov
sbb
pop
ss
xor
jge
pop
or
mov
ins
push
cmp
adc
mov
mov
adc
pop
or
test
inc
adc
ret
lahf
sbb
adc
pop
sbb
jb
pop
add
test
xor
lock
sub
test
jo
push
in
mov
mov
lods
add
mov
add
xchg
adc
add
rol
dec
fcom
push
pop
test
cwde
les
and
mov
xor
rol
jg
push
xchg
stos
dec
push
jno
aad
dec
adc
imul
scas
push
push
ja
mov
mov
sbb
ins
ja
add
fimul
jae
ror
mov
push
mov
add
lea
add
shr
mov
adc
(bad)
pop
mov
jnp
add
fs
fs
sbb
loopne
jne
adc
(bad)
xchg
test
push
mov
outs
loopne
jns
popf
jg
or
add
mov
xchg
jae
inc
out
test
pop
push
push
dec
lods
mov
shr
inc
addps
fcomp
in
push
xchg
lock
or
inc
jae
mov
add
dec
aaa
mov
and
fwait
or
push
ins
add
pop
inc
div
das
sbb
pop
push
sub
push
pop
cs
or
inc
repnz
(bad)
fcom
in
fcom
es
fist
xchg
or
and
nop
xchg
sub
ins
ds
jl
pushf
je
loopne
cld
mov
scas
mov
into
jbe
les
(bad)
mov
test
iret
imul
mov
int
and
xchg
arpl
iret
cmp
aam
push
mov
push
jl
mov
clc
lods
push
imul
fdiv
add
scas
es
rcr
shl
in
push
test
lods
mov
int
in
mov
pushf
pushf
fsubr
ror
loopne
call
in
lock
clc
dec
inc
sahf
pushf
cld
add
add
dec
dec
dec
dec
or
and
dec
dec
dec
dec
cmp
pop
dec
dec
dec
dec
pusha
fs
dec
mov
es
int3
mov
bswap
enter
int3
push
or
sub
or
cmps
mov
sbb
xchg
or
inc
jg
push
popa
and
mov
mov
mov
add
add
loope
and
mov
or
mov
and
add
add
push
nop
mov
aad
mov
xor
push
and
or
pop
lock
movs
jns
mov
hlt
or
inc
loop
clc
xor
adc
fs
or
(bad)
aad
fisttp
int
or
add
aad
pmaddwd
sub
not
add
xor
adc
xchg
fdivr
adc
dec
fadd
outs
js
pop
push
imul
out
adc
cmp
imul
pop
push
shr
jae
adc
inc
bound
lods
push
fs
push
adc
stos
cmp
pop
sbb
leave
dec
push
inc
sbb
bound
push
sbb
xor
sbb
dec
fdiv
inc
outs
cmp
add
ret
sub
push
pop
shr
in
adc
sub
lahf
jo
push
jne
movs
stos
mov
test
sub
mov
sbb
add
mov
pop
leave
jno
ret
fistp
or
pop
enter
adc
inc
pop
and
and
or
bound
jl
add
push
cmp
js
mov
mov
xor
adc
and
out
push
cmp
mov
fadd
fs
inc
or
pusha
cmp
cmc
and
cs
ins
loop
sahf
mov
push
dec
pop
nop
push
ins
add
cs
sub
aam
(bad)
xor
push
inc
jo
add
jbe
retf
test
fst
das
sub
or
repnz
sub
or
ja
dec
cwde
cwde
sub
adc
cs
std
test
(bad)
out
sub
test
pop
pop
imul
inc
retf
repz
ins
stc
inc
pop
enter
add
xlat
mov
fcmovu
xor
add
push
add
jmp
call
xor
xor
xor
inc
jle
or
imul
xor
xor
inc
push
daa
aaa
sbb
add
add
inc
push
adc
icebp
loopne
xor
inc
in
stos
adc
mov
xor
inc
aaa
and
add
jno
mov
push
mov
pusha
mov
sbb
movs
cmp
mov
inc
(bad)
add
and
add
sub
add
or
fs
add
sub
jns
fcom
inc
add
pop
or
cmc
jno
sub
add
test
inc
add
pop
les
cmp
test
(bad)
xchg
cwde
add
pusha
scas
es
sub
sub
inc
sar
sub
cs
push
cmp
cmp
(bad)
ds
inc
loope
pop
adc
arpl
pop
pop
pop
aaa
xor
pusha
aas
aas
inc
dec
push
dec
int3
and
mul
add
pop
push
mov
mov
loope
sub
in
iret
popa
dec
pop
scas
add
cmps
cld
add
je
nop
fistp
dec
arpl
ret
movs
icebp
inc
sbb
mov
push
xor
or
dec
and
xor
and
and
bound
ins
lea
sar
fwait
jg
sar
and
shr
ss
and
out
call
xor
xchg
retf
(bad)
daa
inc
repnz
add
div
outs
adc
(bad)
lock
pop
fld
add
outs
(bad)
or
adc
in
add
jg
lea
rol
cmp
call
fsub
fbld
or
cli
adc
mov
dec
mov
ss
jnp
jne
pause
add
test
pop
imul
out
xchg
push
fcmovbe
mov
movs
xchg
ror
je
adc
ja
inc
(bad)
xchg
lahf
pop
adc
call
inc
pop
inc
pushf
ret
test
mov
ss
jns
xor
xor
cmp
adc
add
rcr
pop
sbb
mov
pusha
addr16
or
loopne
loopne
icebp
mov
inc
adc
sub
xlat
inc
add
dec
mov
jb
xchg
sbb
sub
dec
push
cdq
in
pop
dec
or
es
mov
add
jno
xchg
mov
and
dec
dec
nop
xchg
adc
(bad)
out
and
cli
mov
add
inc
or
fs
push
mov
xor
push
xor
add
push
(bad)
push
fld
inc
push
cwde
add
mov
add
dec
xor
rcr
xchg
pusha
dec
enter
jb
pushf
int3
push
mov
adc
push
test
retf
add
add
adc
add
or
sub
sbb
repz
sbb
sub
add
push
inc
mov
and
cmp
adc
cmp
imul
add
imul
push
bound
xchg
mov
das
jo
cmps
in
mov
sbb
dec
dec
sub
xchg
add
movs
cmp
adc
repnz
test
sar
dec
and
ror
sbb
movs
and
push
xor
clc
cdq
adc
int3
mov
popf
sbb
das
mov
cmp
ror
jae
popa
hlt
ret
adc
jne
bound
push
pusha
mov
ins
jmp
mov
sub
add
mov
cmp
push
push
cmp
out
and
or
pop
out
ja
push
in
add
add
push
js
rol
jns
inc
mov
popa
push
mov
push
push
out
lea
inc
pop
repnz
push
mov
pop
imul
xchg
inc
sti
hlt
cli
mov
adc
(bad)
pop
ror
mov
or
sti
sbb
ret
sbb
mov
cmp
jne
cmp
dec
sar
xor
xchg
cs
cmps
or
and
add
inc
mov
jae
pop
cmp
repnz
leave
daa
add
and
jmp
inc
mov
mov
daa
scas
or
push
mov
inc
call
in
sbb
xchg
mov
or
and
mov
jb
lahf
mov
adc
xchg
(bad)
fdiv
mov
sar
(bad)
jmp
clc
or
xchg
pop
mov
jns
iret
cld
pcmpgtb
xor
out
sahf
push
bound
xchg
mov
ja
stos
cmp
neg
push
lods
mov
fadd
fs
mov
clc
repnz
pop
mov
je
pop
enter
mov
mov
inc
push
push
mov
inc
call
sub
and
fld
aam
mov
fcomp
pop
xor
es
dec
jg
pop
add
and
cmp
gs
add
inc
push
push
ja
loope
inc
cmps
jg
inc
not
sbb
or
lods
add
pop
test
and
adc
pop
clc
xchg
add
add
lods
addr16
shl
add
ja
ror
dec
inc
add
gs
add
adc
mov
inc
add
or
aad
leave
or
push
mov
mov
add
mov
aas
xchg
nop
ss
pop
inc
(bad)
je
inc
push
ret
push
and
scas
fimul
mov
xchg
or
xchg
enter
mov
mov
rol
xchg
cmp
sbb
(bad)
add
fsub
aas
in
jmp
call
push
in
data16
inc
sahf
add
mov
jb
sbb
dec
mov
mov
and
in
call
cwde
mov
(bad)
loope
cmp
mov
jno
adc
jbe
addr16
add
sbb
add
adc
cmp
pop
pop
mov
dec
jnp
jg
cmp
cmp
nop
mov
add
inc
jnp
add
call
adc
and
pop
add
rcl
out
add
push
cmp
ja
and
outs
push
or
dec
cmp
jb
out
mov
movs
jns
es
cmp
adc
rol
repnz
xchg
ret
popa
hlt
popf
fstp
mul
or
enter
xor
pop
xchg
or
xchg
inc
sbb
pop
jl
or
in
loope
or
cmc
xchg
scas
mov
fwait
pop
add
sbb
sub
outs
xchg
into
add
jl
cwde
rol
or
sbb
mov
bound
cmp
push
movs
lea
or
fdivr
xor
pop
push
data16
jb
push
sub
test
dec
stos
jg
mov
push
mov
jecxz
(bad)
test
mov
mov
adc
int3
test
icebp
dec
jp
and
sbb
pop
or
pop
ror
data16
inc
sbb
xchg
cld
add
enter
pop
fsubr
and
ret
cmp
inc
mov
add
in
cs
enter
inc
push
pop
add
fs
or
(bad)
adc
ds
daa
jmp
and
add
inc
leave
rol
sbb
scas
fcmovnb
adc
sub
test
jnp
fs
ja
mov
inc
ret
xchg
mov
adc
push
inc
and
movs
or
push
and
call
pop
or
inc
ins
inc
add
sub
lds
mov
mov
mov
xor
leave
test
add
add
mov
mov
retf
inc
sahf
retf
add
lock
repnz
lock
jno
mov
in
in
add
enter
mov
push
test
popa
xchg
pop
cdq
xchg
add
popa
xchg
clc
in
add
jb
fmul
pop
or
xor
test
dec
leave
sbb
enter
mov
pop
mov
xor
repnz
ins
mov
add
xchg
push
mov
push
mov
sub
sbb
sbb
mov
cmp
mov
and
fs
call
pop
add
(bad)
not
dec
adc
in
das
es
in
jb
adc
mov
shl
inc
push
sbb
pop
ret
jns
call
mov
adc
xor
xor
movs
pop
hlt
jb
sub
cs
adc
push
jmp
data16
push
dec
xor
mov
enter
cwde
arpl
xchg
je
cdq
inc
push
or
popa
test
mov
add
fidiv
popa
xor
jno
push
iret
jae
test
jno
pminub
add
cwde
and
ret
adc
(bad)
aad
push
retf
in
pop
inc
gs
sub
sbb
xchg
sbb
scas
sub
daa
or
clc
(bad)
fidiv
and
adc
push
(bad)
jnp
sbb
or
push
inc
xchg
add
sub
push
mov
and
add
arpl
add
mov
(bad)
lock
imul
add
adc
lds
jne
mov
cmc
fs
out
sbb
mov
adc
imul
mov
jne
xchg
xchg
and
in
push
cwde
daa
test
xchg
or
inc
xchg
(bad)
mov
pushf
mov
call
jl
pop
lahf
mov
xchg
mov
and
shl
test
dec
enter
add
and
int3
call
add
fcomp
nop
and
add
icebp
push
inc
jns
cli
mov
jp
mov
add
mov
gs
xor
xor
dec
inc
mov
sub
imul
fs
aaa
add
in
test
and
sbb
and
jl
inc
pusha
jb
shr
mov
add
inc
shr
add
cmc
push
out
push
jo
mov
hlt
scas
dec
push
arpl
xchg
and
fs
outs
xchg
fisttp
xor
jp
mov
xor
leave
xchg
ins
cmp
or
cmp
jnp
add
cdq
lock
mov
in
dec
and
jp
add
mov
inc
xor
mov
adc
push
jb
mov
daa
push
and
dec
mov
aaa
mov
add
add
add
xchg
pop
and
dec
pusha
aad
mov
stos
or
mov
daa
sub
mov
mov
pop
mov
stos
sub
movhps
jle
mov
push
icebp
and
cmp
movs
inc
call
mov
ret
clc
push
in
iret
jne
push
add
outs
lock
outs
adc
jo
test
add
adc
add
mov
arpl
das
lea
cmp
adc
adc
mov
je
pop
or
pusha
pop
push
je
das
add
leave
in
pop
and
xchg
outs
or
and
mov
pop
xchg
retf
dec
sub
les
sub
sub
cwde
or
and
jmp
aas
fdivr
mov
pop
shl
repz
add
les
add
packssdw
fiadd
mov
ret
pop
call
add
adc
fcom
int3
mov
and
fbstp
je
imul
enter
inc
xor
push
dec
sub
pushf
fstp
lock
sbb
mov
repz
adc
out
pop
push
ret
pop
fs
dec
inc
mov
xor
ja
pusha
lds
inc
add
or
out
push
push
mov
in
and
int
push
add
push
push
shl
cli
je
or
adc
sahf
cld
push
xchg
add
aad
imul
rcl
mov
rcl
add
retf
gs
sub
pop
jo
pushf
add
jmp
mov
pop
pop
mov
mov
lds
adc
lahf
es
test
push
jns
out
js
sbb
gs
xor
xor
popa
adc
ds
nop
pusha
xor
xlat
pop
push
fwait
nop
push
fs
add
fsub
ret
add
xchg
mov
pop
sbb
adc
mov
add
(bad)
cmp
jg
add
bound
sbb
ror
das
or
lock
adc
mov
sbb
iret
ret
mov
adc
rcl
imul
movs
in
xor
sub
jnp
and
xor
add
cmp
in
inc
(bad)
cs
or
push
pop
call
pop
jb
call
mov
rcr
cld
cld
push
or
mov
cdq
in
dec
push
pop
fdivr
add
in
add
xchg
jno
fnstsw
(bad)
je
inc
shl
mul
je
leave
aam
cwde
dec
shl
add
pop
pop
pop
or
push
stc
in
add
add
mov
es
dec
mov
mov
es
sar
inc
mov
cdq
(bad)
sbb
inc
jno
jmp
push
inc
jmp
sub
and
rol
sbb
add
xchg
jl
add
pop
mov
(bad)
xor
fldenv
cmp
adc
into
ds
out
mov
emms
jmp
cmp
jmp
add
lock
xchg
add
jno
xchg
pop
inc
mov
fst
fcomp
(bad)
rcr
arpl
nop
int3
fld
or
dec
sbb
pop
cmp
mov
add
pop
pop
xor
inc
mov
lea
xor
movs
mov
sbb
jle
iret
inc
(bad)
push
out
dec
stc
mov
push
mov
nop
mov
and
dec
mov
pushf
xor
sbb
inc
shr
push
mov
outs
pushf
cmp
sub
nop
out
nop
mov
xor
pop
mov
mov
or
and
stc
ins
adc
mov
mov
outs
or
fs
push
sub
cmp
sbb
test
push
mov
add
xchg
iret
dec
cmp
fsub
fisubr
adc
rcpps
jbe
sbb
js
bound
mov
and
push
data16
mov
out
xchg
addr16
pop
or
pop
rcl
xchg
jnp
mov
aaa
adc
mov
(bad)
pop
jno
jecxz
std
mov
xchg
sbb
in
push
add
push
out
or
push
loopne
call
shl
or
sbb
dec
inc
mov
inc
inc
adc
les
cmps
aaa
mov
adc
push
mov
daa
aas
or
test
lahf
lahf
xchg
and
push
or
(bad)
xchg
mov
cwde
cwde
pop
scas
adc
bound
pop
push
xor
cmp
pop
or
adc
xor
dec
dec
pusha
mov
adc
(bad)
pop
adc
inc
mov
lds
adc
(bad)
mov
pop
xor
cwde
popa
loop
add
adc
nop
add
sub
push
or
or
cmps
cmp
dec
adc
mov
fcomip
test
jb
push
sbb
dec
jo
inc
cvtdq2ps
push
add
and
pop
add
dec
jge
or
push
dec
xchg
ret
sub
dec
push
cmp
jmp
jmp
loope
mov
inc
and
mov
add
jo
test
dec
idiv
inc
pop
fld
sbb
mov
xor
loope
push
call
adc
cmp
mov
lock
int3
xchg
xor
add
mov
mov
adc
mov
outs
push
xchg
aam
es
ds
push
xchg
and
add
mov
xor
sub
sub
lock
dec
call
in
or
outs
xor
call
add
sub
sbb
sbb
gs
je
shr
cmp
sub
loopne
jne
xor
sub
cld
retf
retf
jmp
jg
int
mov
out
sub
sbb
dec
iret
test
loope
xchg
cmp
cmp
jbe
xchg
mov
mov
pop
mov
sbb
test
jmp
sbb
adc
jnp
ja
mov
dec
push
aas
lea
mov
jbe
inc
adc
adc
jne
inc
cmp
jl
and
rol
stc
add
jmp
cmps
dec
je
adc
push
or
jmp
add
cmp
test
adc
enter
fucomp
sbb
dec
and
xchg
outs
inc
jbe
icebp
fadd
or
in
push
rol
pusha
pop
ins
loop
pusha
mov
movs
xchg
dec
pop
jmp
pop
lods
repnz
ss
outs
pop
add
inc
imul
inc
xor
(bad)
in
xor
sub
movs
ss
ss
or
aam
enter
dec
aaa
or
mov
adc
pusha
add
mov
fcomi
into
cmp
shl
jo
idiv
mov
adc
jo
inc
or
(bad)
(bad)
cmp
adc
pop
xchg
bts
mov
adc
mov
cmps
xor
ss
and
lock
cmp
or
xchg
xchg
sub
enter
or
ror
rcl
mov
adc
push
jb
pop
adc
call
popa
xor
adc
push
mov
jecxz
inc
dec
xchg
dec
(bad)
scas
xchg
popa
outs
sbb
aad
daa
arpl
fbstp
aaa
fld
lea
nop
xchg
or
mov
jmp
xor
sbb
lods
daa
arpl
and
push
pop
add
sub
xchg
push
popa
pop
dec
pop
xchg
and
push
and
test
stos
sub
adc
ret
cmps
(bad)
sbb
adc
scas
xchg
leave
jle
movzx
add
outs
xor
inc
inc
dec
and
push
adc
jg
(bad)
push
sub
sbb
int3
lea
rcl
xchg
mov
push
stc
xor
pop
stc
lods
add
les
lock
iret
fdiv
add
inc
cmp
xor
pop
ret
push
add
push
xchg
aam
dec
mov
dec
push
movs
add
push
jmp
test
out
add
mov
jmp
push
ror
sar
cmp
sub
jp
mov
inc
cdq
lea
dec
mov
nop
into
dec
loopne
sbb
jl
push
jmp
xchg
arpl
test
xchg
(bad)
or
lock
pop
into
(bad)
sub
and
or
mov
push
mov
fidivr
jle
add
repz
push
imul
inc
jnp
xchg
pcmpeqb
mov
dec
push
sar
dec
int3
je
sub
xor
cmps
aaa
xor
xchg
daa
pop
out
movs
xchg
pop
ret
add
fs
cli
das
cmp
addr16
adc
(bad)
push
or
movs
inc
pop
jne
movhps
inc
outs
retf
es
and
sbb
or
push
leave
xor
sub
add
xchg
inc
bound
int3
scas
sbb
pusha
dec
mov
fs
fs
das
dec
call
mov
adc
sbb
mov
jo
xor
xchg
mov
jb
sub
fcom
test
push
cdq
add
cwde
ins
sub
dec
or
xchg
dec
jg
loopne
inc
sub
mov
stc
mov
mov
sbb
dec
dec
mov
sub
popf
sub
lds
mov
xor
mov
lods
enter
ret
js
xor
sub
sub
mov
xchg
jecxz
or
stos
pop
retf
push
or
or
dec
sub
les
movs
cmp
push
stos
or
in
sub
adc
pop
xor
fadd
mov
sbb
pop
xor
mov
or
jecxz
add
mov
add
mov
ror
bound
nop
adc
adc
in
pop
mov
fs
(bad)
jb
and
jl
adc
fidiv
mov
mov
adc
xchg
adc
add
(bad)
jno
push
iret
addr16
dec
ret
cld
les
add
punpckhwd
adc
adc
inc
xchg
out
nop
xchg
inc
into
xor
lods
mov
mov
icebp
add
cmps
test
push
mov
jge
sbb
sbb
sub
jo
lea
repz
mov
add
lea
mov
loopne
ss
add
lds
sub
add
cmps
adc
pop
add
loop
and
jle
pop
sbb
sbb
sti
movs
and
sbb
mov
rdmsr
je
adc
push
ret
inc
inc
jbe
push
jmp
or
pop
call
test
rcl
hlt
xchg
lea
inc
mov
inc
mov
mov
mov
pusha
movs
dec
dec
ror
je
dec
lods
or
and
ror
and
rcr
lea
fisttp
mov
sbb
das
lock
retf
push
rcr
ror
cmp
jmp
and
je
dec
fsub
push
fstp
pop
inc
mov
xor
cmp
and
cmp
stos
push
lock
sub
lahf
or
jle
je
mov
test
xchg
jbe
pop
push
loopne
push
pop
popa
ficom
movs
arpl
push
sbb
mov
shl
dec
movs
rcr
add
add
and
pushf
dec
mov
stc
mov
inc
jo
xchg
jb
les
fnsave
mov
pusha
mov
cmp
adc
xchg
lods
push
jo
and
adc
mov
retf
cdq
lea
inc
stos
add
adc
inc
mov
add
inc
dec
xchg
pusha
sahf
ds
(bad)
lock
(bad)
ins
add
dec
xor
cmps
sar
or
ins
ds
scas
cwde
nop
arpl
test
sub
push
fs
push
adc
bound
mov
xchg
pop
or
movs
loope
mov
test
pop
pusha
das
sub
xor
fs
movs
enter
mov
mov
pop
adc
pop
jl
cdq
in
movs
nop
nop
cmp
ror
sub
data16
aam
mov
repnz
rcr
jo
loope
outs
bound
and
mov
sub
ins
dec
push
jno
push
pop
adc
mov
mov
xchg
ss
pop
add
test
nop
out
xchg
mov
or
mov
fnstcw
xchg
outs
or
mov
dec
addr16
mov
pop
add
sahf
cmp
xchg
sbb
push
sbb
xchg
push
inc
xor
and
adc
call
mul
sub
stos
out
add
mov
mov
sbb
or
jmp
push
push
in
add
sub
fstp
sbb
adc
dec
sub
nop
out
add
not
mov
or
sub
xchg
pop
iret
and
jb
sahf
arpl
dec
dec
jle
pop
ins
or
gs
xor
sub
mov
imul
jb
jae
or
inc
and
mov
fdiv
pop
test
pop
and
mov
sub
not
ror
outs
aas
test
jg
and
paddsw
add
xchg
add
add
add
or
jns
xchg
adc
jmp
aam
fdiv
xor
ficom
sar
sbb
sahf
fs
inc
mov
or
fld
push
and
sbb
adc
sbb
imul
fsub
lea
repnz
pop
ret
test
jmp
cmc
and
cli
add
xor
pop
fmul
or
scas
push
jp
inc
ss
jl
(bad)
nop
test
rol
popa
je
cli
retf
pop
push
ret
shr
mov
cli
stos
push
add
dec
leave
leave
cmp
test
or
push
push
setg
sbb
popf
les
les
cmp
movs
pop
mov
repz
mov
nop
push
dec
jb
cld
hlt
add
clc
(bad)
or
lea
sar
ds
jae
adc
mov
pusha
pop
loop
jle
jbe
mov
mov
call
call
sbb
pop
pop
mov
or
ins
mov
push
add
test
shl
jmp
scas
jbe
and
cld
inc
add
cmp
and
adc
mov
or
call
push
push
sbb
inc
or
pop
cmp
enter
sub
xlat
adc
enter
adc
retf
fild
test
jl
imul
or
push
inc
sbb
sbb
pop
pop
fimul
mov
add
xchg
outs
in
xor
pop
shl
add
add
rcr
jo
lods
cmps
cdq
xor
mov
jecxz
aam
fisubr
jne
je
push
adc
dec
pop
add
in
dec
pushf
jmp
scas
mov
sub
or
ja
out
cmp
call
fisttp
pushf
retf
cmp
test
movs
jne
jb
pop
imul
inc
xor
sbb
repz
jnp
sub
jmp
aad
jmp
push
mov
test
pop
add
push
xchg
push
ja
bnd
lahf
rep
adc
add
retf
xor
sbb
in
xchg
add
or
add
push
popa
inc
sub
daa
or
xor
jne
aam
cwde
sub
adc
lods
jmp
pushf
push
dec
test
inc
dec
cmp
pop
and
or
lods
jns
adc
or
scas
retf
mov
add
sahf
dec
push
rcr
mov
adc
out
setno
mov
xchg
adc
push
loope
icebp
sub
pshufw
ins
sub
aas
cmp
inc
adc
mov
add
out
sbb
popa
iret
xchg
call
mov
push
or
adc
xchg
sbb
mov
ficomp
fwait
lock
scas
enter
push
cs
xchg
enter
inc
das
call
mov
(bad)
outs
dec
mov
ins
mov
call
xor
dec
jg
dec
or
push
dec
das
addr16
mov
mov
imul
add
sbb
or
cs
sub
pop
adc
jmp
fsubr
sub
pop
gs
inc
push
jne
add
mov
retf
jge
xor
mov
xchg
push
dec
(bad)
jno
and
lods
sub
inc
mov
push
push
les
int
sub
or
cmp
jle
jnp
neg
inc
lds
jle
stos
inc
call
xchg
lea
and
xor
mov
and
sbb
add
cmps
nop
fs
in
movs
test
out
jb
xchg
dec
out
out
add
xchg
and
mov
in
dec
inc
and
arpl
or
rol
out
cmp
adc
aaa
lock
call
add
jg
cwde
cmp
pop
mov
mov
test
cmps
cmove
xchg
pop
xor
dec
pop
push
sbb
or
mov
mov
inc
jne
mov
test
add
xchg
in
or
scas
lea
add
mov
inc
adc
mov
pop
add
cmp
or
inc
or
dec
push
xchg
adc
dec
daa
sub
inc
sub
pop
add
jle
scas
mov
(bad)
and
pop
sbb
jecxz
dec
ror
add
dec
in
cmps
dec
push
mov
and
shr
cwde
daa
inc
or
test
inc
or
mov
xchg
aam
test
dec
lea
mov
mov
nop
sbb
or
pop
mov
stos
add
iret
es
push
stos
pop
inc
(bad)
test
pushf
mov
(bad)
jne
or
stc
or
mov
das
ret
test
cmp
cwde
retf
xchg
ficom
and
ret
mov
test
jmp
cmp
inc
push
mov
adc
jbe
xchg
adc
inc
data16
je
fistp
sub
or
fadd
adc
pop
popf
mov
cmp
pop
xor
cmc
xchg
ret
or
jbe
add
xchg
add
or
das
inc
push
add
mov
mov
xchg
clc
mov
fs
sub
dec
sub
mov
mov
lds
xchg
push
fldenv
jo
fnstcw
adc
sub
jmp
mov
pop
mov
in
or
cs
(bad)
inc
shl
pop
inc
scas
mov
fs
cmp
mov
mov
icebp
repnz
add
push
push
add
loope
(bad)
jl
xor
add
xor
jne
mov
test
nop
bound
sbb
push
adc
sub
push
add
mov
jo
pop
out
dec
sbb
xchg
mov
bts
push
pop
mov
push
icebp
call
sub
fcomp
(bad)
add
jb
test
or
js
imul
or
imul
dec
or
dec
jae
int
aaa
movs
clc
and
aas
hlt
hlt
call
mov
mov
out
xor
call
push
dec
mov
clc
mov
and
xor
ror
sub
dec
xor
jno
sbb
push
icebp
test
out
jmp
inc
jge
push
loopne
imul
loopne
push
jmp
xchg
retf
jmp
inc
or
adc
xchg
adc
outs
or
add
(bad)
je
cmp
rcr
mov
ins
test
dec
adc
cmp
sub
lahf
sub
fs
or
sbb
jl
retf
xchg
mov
sbb
xor
rol
and
jb
sti
sti
cmps
dec
loope
lods
movs
leave
ror
test
push
jo
(bad)
es
(bad)
in
jl
mov
push
mov
ret
xor
loopne
cmps
xchg
test
xor
add
in
adc
xor
mov
scas
test
data16
inc
scas
iret
aam
add
add
add
movs
adc
sti
mov
mov
xchg
dec
push
fbstp
push
scas
shl
adc
add
ins
daa
cmp
out
and
(bad)
mov
cmp
int3
cmp
push
pusha
sub
les
adc
data16
adc
mov
jb
sar
lds
and
out
xchg
rol
add
pop
nop
sub
shl
stc
rcl
fstp
inc
adc
shl
mov
sbb
lods
lds
pusha
clc
ret
inc
clc
cld
mov
ja
jg
jbe
les
rcl
xchg
fadd
xchg
mov
out
push
mov
push
or
and
dec
xor
add
inc
jmpw
mov
leave
pop
add
inc
pop
sbb
mov
and
add
fadd
xor
adc
ja
push
add
xor
mov
mov
pop
inc
scas
retf
and
cmps
push
ret
inc
push
leave
leave
add
push
inc
in
mov
(bad)
push
hlt
or
pop
add
sbb
ret
test
inc
in
add
add
inc
jb
ret
mov
sbb
xor
jecxz
add
iret
sbb
test
fwait
mov
add
jb
inc
mov
inc
and
pop
inc
enter
lds
iret
sbb
jnp
mov
sbb
dec
pop
xchg
xchg
add
(bad)
pop
add
pop
pop
js
sbb
sub
cmps
bound
(bad)
pop
int3
pop
or
ins
xor
xor
jb
test
add
mov
repz
mov
cs
shl
cmps
mov
imul
and
inc
push
xor
or
adc
push
mov
rcr
scas
in
mov
leave
enter
pop
pop
inc
jp
pop
pop
pop
push
adc
and
ror
mov
add
test
and
test
leave
cmp
das
add
add
xchg
cmp
sbb
fsubr
inc
add
push
dec
or
loopne
enter
mov
and
popf
mov
mov
xlat
cli
call
dec
jl
adc
push
clc
cmps
mov
add
dec
sti
jle
sbb
push
das
mov
int3
lock
sub
and
add
cs
push
pushf
or
sbb
mov
xchg
pop
enter
fdivr
xchg
dec
enter
lea
imul
in
rcl
sbb
sbb
mov
cwde
xchg
scas
sbb
adc
dec
call
push
add
stos
pop
xlat
mov
jmp
repnz
add
out
int3
push
lea
and
or
lods
cmp
(bad)
xchg
inc
cld
xchg
mov
pushf
jecxz
outs
rcl
mov
mov
sbb
xchg
fsub
cdq
in
cwde
xchg
fcom
sub
push
test
pop
adc
ret
sahf
add
loopne
inc
sbb
or
push
ja
jae
adc
push
retf
gs
push
xor
push
add
xchg
adc
push
bound
bound
or
adc
and
inc
jae
iret
pop
add
and
pop
or
mov
cmp
jg
aad
popa
aad
xchg
lock
inc
xchg
and
rol
dec
imul
mov
xchg
stos
enter
popf
dec
dec
mov
ja
ror
add
je
pop
or
inc
dec
xchg
dec
dec
xchg
inc
mov
ja
sti
mov
mov
into
lods
mov
push
adc
add
mov
shr
lock
fisubr
cmc
push
or
add
or
sub
xor
jae
add
xor
movs
mov
fist
fidivr
push
xchg
ss
mov
jle
push
or
or
das
pushf
or
inc
or
push
bound
xor
mov
pop
shl
enter
push
sbb
mov
sub
push
scas
push
push
leave
scas
sahf
add
aam
sar
cwde
dec
repz
sbb
sub
add
nop
sbb
jbe
rol
leave
adc
retf
pop
into
inc
jp
cmp
adc
pop
rol
hlt
dec
sub
fild
mov
xor
sbb
(bad)
imul
aad
cmp
jae
or
mov
dec
or
ins
lods
xchg
and
cmp
jno
popf
iret
mov
and
mov
fs
and
lods
jns
loop
ret
fbld
mov
sbb
pop
mov
sub
inc
fwait
loope
add
les
add
add
and
add
xchg
shl
pop
mov
or
jnp
mov
call
mov
adc
sbb
or
xor
xor
scas
les
inc
sti
or
push
les
push
adc
mov
jne
jbe
push
push
in
rcl
pop
push
cmp
loopne
xor
jno
enter
push
inc
dec
sti
sub
inc
fsubrp
dec
jae
cmp
ret
xchg
pop
js
das
cmp
test
stos
jnp
xchg
adc
(bad)
add
adc
xchg
out
push
or
pop
dec
sub
out
ret
inc
and
outs
test
std
in
sahf
loope
pop
test
pusha
push
mov
xchg
add
stc
outs
addr16
jp
mov
les
in
in
sub
mov
clc
mov
and
clc
(bad)
sar
aad
mov
nop
sbb
and
xchg
dec
dec
inc
pop
mul
fbld
jecxz
xlat
push
icebp
pusha
xchg
sub
fdiv
loopne
sub
add
test
mov
push
adc
push
cmp
xor
clc
xchg
adc
and
jnp
in
pop
enter
call
cmp
xlat
mov
cs
mov
inc
push
pushf
ret
shl
outs
mov
add
inc
mov
and
push
inc
sub
sbb
fs
fdivr
cwde
sub
cmps
mov
add
ins
add
test
mov
retf
(bad)
pop
xchg
xor
bound
pop
mov
nop
popa
aaa
es
cmps
add
les
pop
ret
cmps
or
pop
out
sbb
icebp
cwde
(bad)
nop
jae
add
out
mov
push
adc
and
cs
ins
(bad)
push
xor
js
fcmovnu
adc
cmps
icebp
out
xor
mov
xor
imul
adc
test
into
popa
dec
sub
mov
mov
jne
adc
push
pusha
je
adc
or
ret
int3
mov
inc
pop
popa
(bad)
add
xchg
xchg
mov
or
add
ss
sub
mov
pop
rol
adc
add
(bad)
rcr
test
ret
out
jo
mov
inc
or
mov
(bad)
push
cmp
in
or
fst
rcr
inc
cld
not
and
or
es
(bad)
nop
shr
and
call
ret
and
rol
inc
outs
and
pop
inc
retf
ret
sub
shl
or
mov
outs
mov
adc
lods
fadd
inc
adc
or
add
pop
or
retf
xchg
mov
xor
scas
inc
lock
and
sbb
sbb
div
test
mov
inc
or
jecxz
or
adc
cmp
jne
push
rol
push
(bad)
(bad)
ins
sar
nop
or
adc
or
dec
jne
pop
or
mov
pushf
sub
daa
or
and
lea
or
sbb
mov
push
hlt
repnz
jge
arpl
cmovo
or
and
add
gs
jo
add
push
movs
aam
inc
jbe
lds
xor
rol
fmul
mov
rcpps
xor
and
pop
or
adc
mov
adc
xor
xor
sub
push
push
sbb
inc
mov
add
cmp
mov
test
inc
mov
cmp
mov
inc
cmp
rol
aad
test
aad
rol
dec
sahf
aad
sub
mov
xchg
mov
cmp
pushf
aad
add
mov
fcmovb
pushf
aad
add
push
pushf
aad
xor
rol
or
aad
shl
dec
push
push
call
imul
pushf
aad
fcmovb
add
inc
cmp
add
cdq
ficomp
stos
sbb
cmp
rcr
sub
aad
cdq
fcmovb
add
sub
cwde
aad
rol
push
cwde
aad
sub
cmp
rol
mov
cdq
ficom
xor
add
xchg
aad
cmp
cmp
or
push
push
push
lock
mov
push
xlat
aad
push
pop
push
xchg
aad
and
aad
push
aad
mov
in
xchg
aad
or
inc
xchg
mov
in
aad
or
jbe
aad
add
push
push
cmps
jbe
xchg
aad
in
pop
or
mov
xchg
aad
push
aad
mov
in
nop
aad
or
and
pop
shl
aad
push
push
xchg
aad
cmp
push
nop
test
fcmovb
add
punpckhbw
in
xor
cmp
ror
push
nop
aad
sbb
pusha
add
push
mov
add
and
pop
cmp
pusha
add
rcl
pop
push
mov
xor
retf
mov
push
mov
aad
retf
push
mov
dec
sbb
pusha
add
push
mov
add
inc
mov
add
inc
sbb
add
movhps
out
pusha
xchg
pop
or
adc
pop
or
add
shr
add
adc
adc
pusha
sub
daa
jmp
cmp
in
pop
and
add
cmp
mov
dec
shr
sbb
adc
ja
fdivr
fbstp
lea
mov
and
push
sbb
ret
lods
inc
adc
push
sbb
xchg
les
call
add
(bad)
inc
dec
and
add
inc
iret
dec
mov
mov
add
xchg
mov
retf
or
lock
mov
inc
loop
mov
enter
xchg
shl
rcr
jno
pop
shl
inc
pop
ret
pop
mov
xchg
stos
and
enter
mov
outs
mov
fstp
test
in
jne
add
xor
sbb
pop
mov
add
lock
pop
and
jnp
mov
xchg
je
mov
sub
sbb
push
mov
sub
cmp
xchg
retf
jecxz
jns
add
or
hlt
sbb
xchg
sub
push
or
mov
aaa
cli
mov
into
in
mov
(bad)
icebp
fwait
mov
mov
cmp
and
out
and
mov
dec
sub
pop
les
cmps
ss
xchg
cs
sub
mov
lods
dec
loop
aad
fdivr
(bad)
call
sbb
or
sub
push
xchg
or
inc
sub
aad
xor
mov
sub
add
mov
pop
add
cs
or
inc
movs
lahf
aaa
and
les
dec
sbb
inc
push
add
or
cmp
add
lea
dec
mov
outs
movs
rol
test
fisttp
sub
popa
jae
out
jmp
add
mov
(bad)
int3
scas
sbb
mov
add
pop
(bad)
xchg
or
rcr
pop
jae
dec
add
ins
inc
outs
sbb
imul
pop
int3
ins
pushf
or
push
mov
lahf
nop
sbb
test
pop
rcl
dec
cmps
int
repnz
mov
mov
push
mov
shl
jmp
mov
or
mov
fwait
inc
lahf
shl
and
and
inc
push
ins
dec
push
mov
and
xor
in
dec
adc
adc
add
push
inc
push
pop
stos
jbe
mov
in
call
mov
add
jno
or
sbb
pusha
ja
out
push
fiadd
in
out
call
shr
out
push
cmps
dec
les
in
adc
mov
mov
les
pop
or
push
pop
mov
cmp
or
paddq
les
or
pop
nop
pop
cmp
jmp
sbb
push
mov
xor
push
cmp
dec
dec
jae
mov
movs
inc
les
call
es
mov
and
loopne
add
jne
adc
jae
stos
add
jae
and
out
sahf
push
loop
and
fs
add
shr
test
shl
dec
xchg
xchg
or
in
les
leave
dec
leave
or
or
mov
add
or
ja
lods
cmp
scas
push
btc
or
dec
push
cmp
pop
dec
call
loope
push
cmps
enter
and
xor
push
sub
leave
pushf
and
test
cmps
adc
mov
inc
push
mov
xchg
xor
arpl
xchg
(bad)
dec
or
or
int
in
cmps
shl
mov
sub
shl
dec
pop
jmp
je
push
aam
sub
sahf
fwait
xchg
mov
or
or
mov
jbe
push
rol
out
jnp
xchg
push
iret
jl
jl
mov
inc
push
or
loop
and
push
and
aas
or
pop
xor
add
mov
xchg
inc
cmp
and
cwde
stos
xor
push
xchg
test
les
retf
stos
xor
in
lock
mov
xor
sbb
call
add
ins
and
dec
add
dec
aam
(bad)
stos
mov
fstp
add
mov
fwait
xor
js
mov
dec
repz
fwait
mov
ret
dec
test
lea
inc
lahf
popa
cmps
or
cmps
movs
sahf
inc
dec
add
cmp
sbb
call
js
jl
mov
dec
mov
div
nop
and
cmp
or
mov
xor
xchg
test
daa
mov
mov
rcl
or
add
test
retf
repz
push
mov
mov
not
(bad)
jmp
imul
cld
sbb
or
or
xor
sub
movs
retf
jo
sub
inc
repz
cmp
mov
shl
xor
sbb
add
add
inc
and
inc
sub
mov
sub
mov
hlt
mov
jecxz
or
and
ret
xchg
imul
cmc
jmp
enter
jbe
pop
xchg
in
sub
push
mov
mov
loopne
es
xchg
sbb
call
mov
popf
div
movs
es
or
mov
sbb
cmp
not
clc
push
cmp
fadd
push
pop
jp
shr
leave
mov
out
je
push
xlat
adc
(bad)
or
sub
mov
or
pmuludq
adc
inc
jnp
iret
fnsave
and
jbe
loope
xor
mov
cmp
sbb
movs
lea
mov
scas
cmps
push
mov
rcl
ret
inc
les
mov
sub
xchg
inc
and
push
mov
out
ret
push
pop
jmp
add
or
xchg
adc
inc
out
mov
mov
mov
mov
aaa
mov
add
inc
inc
cmp
clc
jae
adc
sbb
addr16
push
cmp
sbb
add
je
jle
xchg
jl
jecxz
adc
loope
in
mov
hlt
mov
ret
cmp
mov
(bad)
fdiv
and
cmps
add
pop
lock
dec
outs
shl
mov
mov
sbb
mov
mov
jnp
dec
loopne
push
sbb
gs
dec
aam
cmp
add
(bad)
fdiv
xor
fcomp
mov
es
retf
and
jbe
adc
push
xchg
rcl
or
inc
aad
outs
sbb
xor
xlat
add
inc
add
(bad)
call
mov
adc
xor
gs
(bad)
sub
out
pop
mov
add
adc
movs
test
ins
and
ja
xor
ret
fiadd
daa
xor
mov
sub
mov
sti
hlt
mov
repnz
sti
jl
mov
retf
ja
movs
lock
ins
cmp
daa
xchg
push
add
mov
int
mov
jl
push
in
imul
add
dec
mov
in
pusha
add
and
test
inc
jmp
call
or
rol
jg
and
call
es
or
cmp
and
scas
inc
popa
adc
not
pop
lock
or
xchg
or
xchg
jno
jg
cs
jmp
pop
sub
or
push
and
push
push
mov
(bad)
jo
jo
rol
mov
add
cmc
xor
add
or
sbb
xchg
popa
push
sub
jle
jo
jnp
inc
adc
in
loope
mov
icebp
sahf
jns
xchg
pop
mov
dec
test
add
mov
aam
outs
pop
or
call
and
mov
add
js
ins
cmp
mov
sbb
pop
call
jl
jo
call
mov
addr16
or
adc
pushf
popf
stc
and
adc
sub
mov
and
aaa
bound
jle
jge
in
xor
fdivr
rol
bnd
cmp
or
jmp
ds
shld
js
push
cwde
out
mov
popf
mov
jl
les
les
xchg
stos
lea
xchg
aad
fld
xchg
stos
popa
movs
rcr
push
(bad)
stos
pop
fimul
xlat
sbb
adc
aam
push
mov
cmps
lock
call
mov
inc
out
call
sub
dec
lods
or
dec
jae
pop
xor
lods
mov
mov
mov
mov
mov
dec
push
cdq
mov
xor
mov
inc
mov
xchg
xchg
sub
mov
sbb
or
loope
push
cmp
add
jo
push
pushf
push
dec
or
mov
push
mov
jne
cmp
push
fs
jbe
stos
jne
push
or
ret
std
add
adc
mov
add
or
inc
inc
cmp
add
pop
lock
cmp
cmp
mov
lods
ficomp
add
ins
test
mov
add
add
add
clc
ins
adc
jo
das
sbb
add
aam
jno
lds
add
cmp
add
mov
inc
sbb
add
xlat
mov
mov
imul
mov
push
bound
xor
sub
adc
mov
sbb
jae
or
mov
out
push
shl
cmps
or
add
mov
fist
adc
sbb
das
and
sbb
pop
pop
sub
test
(bad)
push
shl
shr
mov
xor
push
push
or
push
inc
test
adc
mov
ror
push
clc
cmp
and
add
sbb
xlat
fist
pop
and
and
jns
adc
dec
adc
push
daa
sub
call
push
or
adc
dec
or
inc
mov
shr
mov
jbe
adc
push
mov
adc
mov
imul
pusha
pop
push
dec
pop
dec
call
mov
outs
cmp
xor
push
pop
inc
jmp
loopne
push
fwait
in
aas
out
ret
adc
int3
(bad)
in
in
popa
push
add
test
rcl
enter
xchg
cmp
int3
mov
xchg
xchg
sahf
sub
sub
js
jl
daa
inc
mov
push
daa
xchg
retf
adc
les
mov
stc
sar
inc
popf
jbe
xor
es
mov
je
adc
mov
neg
scas
lods
dec
lods
or
inc
mov
jge
xchg
mov
adc
xchg
add
or
loope
inc
sahf
xchg
test
mov
addr16
movs
mov
mov
cwde
cwde
push
repnz
mov
pop
xor
imul
ins
leave
pop
inc
sbb
or
xor
xchg
cld
mov
inc
sbb
pop
sbb
repnz
xchg
xchg
mov
dec
mov
std
shr
popf
dec
push
fimul
cmp
push
inc
cld
dec
pop
and
xchg
sub
pop
push
xchg
inc
xor
scas
inc
cmp
les
xchg
pop
mov
push
adc
(bad)
push
(bad)
push
mov
or
nop
mov
lahf
or
pop
(bad)
cmp
gs
add
xor
inc
test
test
mov
xor
aaa
and
and
mov
add
or
inc
mov
sqrtps
or
or
adc
mov
or
and
shl
mov
adc
je
pop
call
dec
push
mov
mov
add
push
imul
aaa
mov
pop
fild
in
in
push
and
add
lods
adc
xor
adc
dec
test
inc
test
cmp
xlat
dec
mov
sub
mov
repnz
adc
adc
lds
(bad)
xchg
cs
fs
inc
outs
or
push
mov
stc
fsubr
aam
aam
or
mov
jmp
je
xor
adc
rcr
enter
aaa
xchg
aam
sahf
inc
adc
int3
jae
or
and
lods
sbb
add
xor
inc
cmovo
out
mov
pop
lahf
xchg
cs
push
outs
aaa
adc
rcr
xlat
xor
imul
stos
push
shl
inc
scas
sub
push
xor
les
xor
inc
push
xchg
cmp
and
lahf
loope
pop
mov
retf
sbb
or
pop
adc
add
pop
test
test
mov
mov
mov
call
test
or
mov
rol
push
mov
adc
pushf
sub
arpl
enter
int3
add
fistp
push
neg
push
jle
xchg
int
sbb
cmp
dec
sub
and
jmp
ret
jmp
jae
daa
mov
das
jl
enter
jp
and
and
add
or
mov
dec
outs
inc
xchg
mov
mov
adc
sar
inc
jo
push
je
or
shr
addr16
es
(bad)
xchg
and
push
nop
xchg
xchg
dec
push
nop
test
xchg
and
call
pop
add
inc
jae
jbe
push
jmp
adc
inc
icebp
leave
fdiv
dec
xchg
xor
xchg
mov
mov
fsubr
test
cmp
push
push
ret
sub
rol
inc
outs
dec
dec
ins
inc
pop
inc
(bad)
cmp
jns
add
mov
dec
jle
hlt
scas
xor
push
push
sbb
xchg
inc
js
cld
sbb
in
xor
inc
stos
push
pop
adc
sbb
pop
pop
sub
jge
xor
fdivrp
xor
add
call
sbb
mov
xchg
xchg
mov
ss
cld
ret
fisttp
mov
push
and
test
or
scas
mov
jae
sub
push
xor
inc
xor
nop
or
add
adc
sub
pop
int3
outs
add
or
mov
ret
shl
push
dec
push
ret
imul
movs
or
push
dec
pop
xchg
test
adc
add
mov
push
sub
loop
push
dec
fcmovnbe
inc
dec
push
dec
js
je
cdq
scas
ja
pop
jg
out
or
ret
movs
bound
outs
or
xchg
sbb
push
mov
jo
push
scas
add
data16
and
fadd
mov
push
stos
and
test
mov
lods
mov
cmp
bound
sbb
push
fisttp
adc
pop
adc
test
inc
inc
jge
push
mov
bound
pop
arpl
cwde
inc
inc
jbe
push
push
icebp
ja
sbb
xor
sti
adc
xchg
sub
cmp
and
mov
outs
xchg
add
sub
mov
arpl
in
mov
add
mov
in
ror
sub
mov
mov
enter
mov
shr
(bad)
les
xchg
fadd
imul
sbb
push
push
rcl
inc
sbb
and
cmp
sub
test
es
jae
push
or
and
jl
sbb
sar
adc
inc
cmps
adc
add
das
cmps
mov
(bad)
loop
cmp
fcmovnbe
or
aam
dec
mov
sub
push
sbb
and
pop
(bad)
sbb
movs
xchg
pop
add
sub
adc
xchg
jge
adc
lock
out
and
push
sbb
jne
mov
push
jl
sub
movs
cs
mov
pop
in
mov
pop
test
dec
repz
jl
aam
jle
add
jnp
pusha
ja
xor
mov
xchg
cmp
add
cdq
(bad)
(bad)
jbe
xor
xor
pusha
add
jle
mov
mov
mov
and
popf
push
outs
dec
inc
add
test
dec
iret
dec
mov
inc
sub
aas
adc
xchg
cmps
inc
pop
ins
mov
out
mov
pop
push
ret
inc
mov
pop
cmps
jbe
jb
rcl
cmp
and
mov
mov
sub
mov
dec
sbb
test
or
push
(bad)
loopne
movs
scas
ins
sbb
push
call
adc
gs
daa
adc
adc
test
jmp
pop
push
sub
add
sub
fs
push
lods
ins
pop
jbe
add
and
enter
push
xchg
and
stc
pop
fstp
push
xor
and
jae
xor
add
addr16
add
xchg
pop
repz
outs
xor
cmp
sub
xor
ins
xor
nop
xchg
xor
popa
in
adc
jns
add
inc
adc
dec
es
and
aad
adc
xor
adc
add
xor
imul
mov
in
imul
and
cmp
jbe
inc
jl
push
rdtsc
add
jnp
adc
test
dec
add
imul
ins
cmp
aaa
das
shr
dec
add
stos
inc
cmp
test
out
push
cli
pop
dec
adc
sbb
adc
dec
add
mov
std
test
mov
add
stc
push
push
inc
or
sbb
adc
sbb
and
bound
or
or
mov
je
adc
pop
(bad)
das
xchg
pop
or
mov
outs
add
pop
xchg
sub
cdq
add
and
adc
nop
cmps
adc
and
pop
daa
mul
inc
add
es
adc
pop
adc
out
or
xchg
mov
push
stos
mov
mov
push
into
inc
loopne
ds
clc
(bad)
and
add
xor
aad
inc
arpl
push
stos
mov
mov
add
add
movs
mov
inc
idiv
ret
sti
mov
sub
mov
push
dec
call
test
add
sbb
and
daa
push
inc
inc
test
cmp
(bad)
cli
lsl
sbb
pop
sbb
sbb
ss
push
sahf
mov
loope
add
push
popa
imul
movs
ds
and
mov
inc
dec
adc
es
xchg
sbb
mov
movs
adc
add
xor
mov
(bad)
sub
adc
hlt
inc
jnp
andps
stos
sbb
out
and
test
pop
mov
sbb
adc
or
sub
push
or
aaa
xor
adc
sbb
pusha
adc
pop
movs
adc
ret
adc
xor
stos
mov
bound
lds
or
ficomp
sti
icebp
repnz
cs
in
xchg
dec
pop
mov
cmp
cmp
push
xor
cmp
ja
push
adc
fisubr
adc
push
or
adc
adc
sbb
dec
inc
mov
(bad)
and
addr16
bound
daa
push
adc
pop
retf
movs
lock
add
pop
add
add
jecxz
inc
popf
jnp
cwde
xor
pushf
mov
or
inc
rcr
dec
nop
mov
pop
xchg
sbb
or
jne
pop
push
jmp
scas
add
ds
or
movs
and
in
add
cmp
mov
push
add
pop
push
(bad)
mov
cmp
stos
mov
or
dec
popa
dec
or
add
inc
push
jmp
popf
aam
mov
inc
ss
mov
sti
adc
dec
in
in
sbb
call
imul
movs
dec
and
push
mov
sub
dec
lahf
pop
test
jl
push
dec
dec
cmc
movs
inc
das
pop
int
test
pusha
shl
xchg
sbb
sbb
cmp
mov
sbb
popa
jne
push
ins
sbb
aas
push
fcom
sub
loopne
mov
xchg
mov
adc
xor
imul
sbb
test
dec
std
je
sub
jl
push
add
or
add
cmp
mov
add
leave
push
add
dec
push
jmp
add
or
push
arpl
and
mov
add
and
and
and
shl
mov
inc
movs
jno
fidivr
mov
lea
or
mov
or
mov
mov
cmps
cmp
sbb
or
push
mov
cwde
xchg
sub
mov
(bad)
(bad)
mov
xchg
xchg
rol
mov
sbb
test
adc
xor
test
dec
outs
fs
add
adc
add
sbb
push
(bad)
push
push
lea
push
adc
jmp
call
xor
pop
add
pop
inc
adc
xchg
add
loope
sbb
fwait
add
fldenv
adc
add
aam
cmps
dec
and
(bad)
xor
clc
mov
xchg
int3
add
xor
sbb
add
sub
cmp
mov
dec
push
jmp
loopne
xchg
adc
lahf
mov
push
stos
repz
ltr
cmp
pop
mov
pop
stc
xor
dec
jo
imul
and
leave
pusha
call
ins
and
sub
movs
xchg
pop
and
mov
in
xchg
ret
leave
jl
dec
es
loopne
ins
jno
add
or
or
inc
push
in
addr16
stos
add
add
rol
push
pop
ret
jnp
imul
dec
push
or
cmp
pop
cmp
or
add
inc
lods
xchg
push
es
fld
mov
dec
js
jb
outs
mov
sub
dec
push
loope
or
sti
(bad)
std
add
iret
je
sbb
or
ja
loopne
js
(bad)
push
aaa
xchg
xchg
shr
push
mov
adc
xchg
push
xchg
imul
add
outs
aam
mov
stos
scas
lahf
sub
or
leave
ffree
pop
push
sub
test
jnp
sub
push
mov
adc
jno
pop
mov
iret
imul
pop
jmp
es
aas
aaa
adc
fidiv
add
xlat
sub
cmp
sub
push
jecxz
dec
pop
cmp
push
push
adc
inc
and
nop
xchg
mov
dec
adc
rol
(bad)
mov
stos
dec
imul
jge
nop
sbb
sub
cdq
clc
jl
mov
jge
add
lods
jb
add
lea
push
punpckhdq
jnp
adc
inc
sti
and
jmp
mov
push
mov
dec
jle
mov
inc
mov
adc
call
ins
sub
sub
jo
pop
adc
push
test
and
mov
nop
xor
dec
cmc
jge
popa
and
jle
and
es
xchg
dec
cmp
cmp
mov
or
cmp
repnz
pusha
mov
jo
dec
xor
push
or
movs
push
std
hlt
pop
xor
outs
addr16
push
imul
push
pop
ss
retf
mov
xor
push
xor
ret
xor
push
shr
push
xchg
or
pop
mov
jnp
pop
pop
test
mov
addr16
push
inc
pop
xor
pop
aaa
fwait
stos
jo
leave
pushf
ss
cmpxchg
ss
and
retf
out
aaa
movs
aaa
jb
in
mov
popa
aaa
imul
push
xlat
adc
lock
adc
add
icebp
push
sub
jnp
popa
loopne
xchg
or
cmp
pusha
xor
in
dec
push
outs
pop
aam
sbb
adc
test
lods
test
lods
aam
pop
push
repnz
ja
cmp
out
jno
jns
imul
sbb
cmps
rcr
pushf
cmp
push
mov
dec
push
dec
push
sub
mov
dec
push
jns
inc
(bad)
jo
push
add
push
mov
imul
das
sar
push
add
push
data16
ja
push
and
fadd
cmp
pop
add
xor
push
fsub
sbb
call
sbb
int3
push
cmp
cmps
adc
and
sbb
push
in
inc
mov
dec
push
leave
adc
or
adc
xchg
cmp
cld
dec
push
add
dec
push
or
push
pop
inc
and
dec
push
mov
fnsave
(bad)
ror
jnp
inc
enter
inc
push
mov
xor
mov
inc
push
cwde
call
xchg
add
sbb
ret
xor
fwait
inc
push
daa
or
sbb
fcom
cmp
jno
and
push
xchg
stos
nop
dec
push
and
sbb
fiadd
enter
xor
xor
inc
push
push
dec
lds
rcl
enter
nop
jl
adc
jmp
popa
dec
cwde
(bad)
stos
dec
xlat
jns
or
aaa
rcr
xchg
or
push
adc
add
stos
nop
jo
xor
popa
fmul
and
stos
adc
ret
bound
add
push
ret
inc
push
sub
or
(bad)
imul
and
bound
rcr
sub
pop
cmp
jg
cmp
jne
nop
xchg
popf
pop
dec
or
or
pop
jno
push
out
sub
jmp
aaa
in
inc
xchg
or
xor
ret
push
lds
mov
cmp
inc
xchg
jl
dec
push
or
and
repnz
dec
push
push
dec
push
and
pop
outs
xor
xor
inc
xchg
test
mov
push
stc
aaa
jno
ror
and
lock
cmp
aam
shr
adc
mov
push
ret
call
and
dec
push
sub
add
pop
adc
adc
sub
xchg
in
scas
mov
mov
mov
stos
and
dec
in
cmp
outs
icebp
pop
mov
and
les
out
pusha
es
add
jl
lea
mov
dec
adc
dec
and
dec
add
xor
adc
cmp
or
and
lock
fcmovnbe
jecxz
add
dec
or
(bad)
ss
jle
cmp
popa
in
pop
xchg
inc
(bad)
rcr
dec
pop
or
dec
add
sub
push
jnp
addr16
or
xchg
btc
loopne
ins
ret
les
std
ins
inc
(bad)
adc
aas
fild
retf
enter
icebp
push
hlt
test
into
push
push
adc
mov
and
lock
adc
pfpnacc
add
adc
(bad)
sbb
or
or
clc
lock
and
dec
mov
xor
aad
ret
push
fdivr
cs
inc
dec
dec
add
stos
cmps
outs
mov
mov
(bad)
mov
and
outs
or
and
out
xchg
jnp
xor
sbb
adc
imul
sbb
cmp
and
add
cmps
in
and
push
jno
rcr
jge
dec
sub
xchg
xchg
pop
(bad)
add
xor
and
sub
adc
fisttp
add
inc
xor
xcrypt-ofb
cmps
das
push
jo
mov
dec
test
xchg
(bad)
imul
int
adc
xchg
int
or
sbb
push
(bad)
adc
movs
icebp
push
and
adc
and
cld
lock
fld
je
or
imul
mov
or
sbb
daa
push
pop
push
pop
imul
sti
cdq
mov
sub
push
add
nop
sbb
lods
push
add
popf
add
xor
arpl
rcl
xchg
dec
stos
dec
xor
test
xor
(bad)
adc
mov
inc
call
push
test
pop
mov
and
mov
jbe
sub
xchg
add
clc
xchg
call
pop
push
mov
dec
lock
lds
inc
test
mov
push
inc
push
mov
in
sub
lea
je
jb
jmp
and
sub
and
or
inc
add
inc
mov
int
ins
mov
ret
aad
and
inc
mov
adc
aas
in
adc
test
jmp
repz
je
jmp
adc
pop
aas
mov
push
dec
outs
sbb
inc
fist
icebp
lods
ins
xor
cmp
mov
imul
or
fild
(bad)
sbb
mov
dec
adc
aaa
es
mov
or
daa
push
jmp
push
aad
clc
hlt
mov
mov
inc
push
xor
sub
push
push
add
or
mov
mov
add
mov
push
test
push
sbb
xorps
mov
imul
mov
movs
add
add
cmps
add
push
dec
xchg
lods
and
mov
or
cld
push
adc
add
xor
pusha
pop
mov
and
cmc
jge
lahf
loope
push
out
or
add
push
add
enter
push
dec
dec
dec
mov
mov
lds
test
mov
mov
pop
rcr
shr
outs
fsubr
xor
lods
ror
jmp
dec
test
in
sub
sub
das
das
push
add
ficom
pop
ret
mov
lods
aaa
push
jge
pushf
xor
adc
cmp
add
dec
push
sub
sub
arpl
pop
inc
and
call
inc
loop
push
xchg
jns
ins
push
inc
sub
jle
mov
adc
xchg
imul
lahf
mov
xchg
xchg
mov
daa
enter
push
data16
push
sahf
outs
jb
add
test
in
xor
mov
iret
and
jnp
jge
les
sbb
cmp
xchg
int
mov
(bad)
or
and
add
cmp
movs
pop
or
ror
and
xor
imul
fs
(bad)
mov
xchg
inc
arpl
adc
mov
xchg
mov
rol
push
(bad)
and
test
inc
outs
scas
inc
arpl
or
mov
cld
adc
xchg
xor
mov
sub
xchg
out
mov
add
jg
repz
and
push
sbb
add
pop
cmp
out
adc
pushf
jmp
mov
gs
sbb
ins
shl
inc
jae
imul
enter
mov
sub
xchg
repnz
fidiv
mov
add
xor
nop
mov
mov
enter
data16
and
pushf
mov
(bad)
fs
push
xor
call
pop
cmovno
mov
adc
sub
arpl
push
stc
(bad)
sub
loopne
adc
loopne
push
ins
xor
pop
ja
ins
arpl
gs
cmp
pop
dec
hlt
bound
in
jge
shl
test
ror
xor
xchg
(bad)
fs
clc
or
fdivr
or
(bad)
imul
pop
sahf
jae
jne
pop
pop
cld
xchg
xor
test
hlt
or
cs
jl
or
jae
add
xor
xor
or
(bad)
push
call
inc
inc
retf
cmp
jo
sbb
pop
mov
int
ret
not
(bad)
or
push
and
sti
xor
jne
and
adc
pop
xlat
imul
dec
sub
adc
rcl
sti
sub
adc
push
inc
xor
mov
add
push
mov
jne
xor
or
paddb
sti
packsswb
imul
adc
test
push
fisubr
pop
sbb
fsubr
add
pop
fisubr
cld
mov
mov
jne
mov
pop
movs
jae
or
cmp
cli
add
adc
sbb
dec
or
movs
cmp
mov
pop
cmps
pop
add
sbb
fild
imul
xchg
xchg
push
loop
mov
call
sub
sbb
test
lock
adc
or
call
jne
xor
add
ins
xor
and
mov
in
xor
add
mov
(bad)
xor
mov
aad
add
adc
adc
sub
inc
inc
dec
or
add
and
push
dec
aaa
cmp
sbb
adc
movs
mov
sub
lods
adc
mov
aaa
mov
mov
cmps
ficom
add
pop
xor
jmp
jle
add
sbb
push
test
xor
push
sar
push
int
and
push
lahf
sbb
aas
inc
pop
fidivr
jmp
(bad)
push
in
push
add
push
fist
pop
fs
add
enter
jp
loope
add
fdiv
enter
cmp
inc
dec
jnp
adc
mov
jg
std
aaa
mov
xchg
add
pop
and
sbb
bnd
xchg
mov
jne
mov
mov
jl
test
cwde
and
popa
inc
pop
xor
mov
aam
(bad)
aam
sub
ror
in
mov
sub
sub
push
jns
call
pop
push
sbb
xor
fcmovnb
mov
sbb
lods
fs
popf
nop
or
jno
inc
jmp
sub
and
add
adc
std
xor
sub
jne
dec
aas
cmp
sbb
in
mov
mov
or
call
xor
adc
neg
popf
in
not
xor
addr16
(bad)
ds
clc
push
push
push
movs
fs
and
push
fdivr
iret
cmp
add
push
addr16
mov
fcomp
into
icebp
push
sbb
dec
std
test
lods
inc
addr16
fmul
ret
mov
movs
dec
in
movs
inc
xchg
sub
je
mov
sub
ror
jae
cmp
repz
mov
sbb
addr16
pop
sub
add
xor
fwait
jnp
outs
data16
and
int
cmp
add
dec
push
or
bound
mov
adc
iret
xor
leave
dec
imul
xor
add
jns
jl
xor
xor
daa
pop
fbstp
(bad)
push
add
adc
ds
cdq
(bad)
pop
push
outs
mov
adc
(bad)
je
bound
shr
daa
dec
cmp
outs
js
add
sbb
xor
push
or
and
pop
or
test
lock
(bad)
movs
cdq
pop
push
aaa
inc
in
push
dec
ror
xchg
or
and
out
cmp
mov
add
or
xchg
outs
repnz
jmp
adc
jmp
xchg
ror
sbb
xchg
dec
mov
imul
mov
adc
cmp
and
ret
loopne
lea
dec
or
nop
mov
push
xor
xchg
add
int3
or
ins
test
mov
sbb
pop
popf
nop
out
push
or
cmp
add
cmp
jb
nop
cmp
mov
xor
sbb
sbb
or
sbb
adc
enter
jg
or
in
sbb
cld
(bad)
sbb
enter
pop
or
cmp
in
add
inc
cs
in
(bad)
nop
add
fsub
push
cmp
mov
jb
mov
and
int
out
outs
add
mov
adc
sub
dec
mov
call
sub
cmp
lods
test
rcr
dec
add
aas
test
and
je
adc
je
or
dec
addr16
dec
enter
cdq
or
sti
inc
add
push
sbb
cmps
and
adc
and
xchg
add
adc
hlt
js
nop
add
push
dec
fist
jns
add
in
sbb
aam
enter
sbb
les
cmp
or
or
or
rol
sbb
test
je
ins
leave
sbb
push
inc
jo
ror
(bad)
lock
jge
ins
xor
pusha
xchg
push
ins
inc
inc
dec
cs
ins
jb
loopne
movs
mov
sbb
pusha
call
sahf
sub
(bad)
mov
fadd
xor
push
add
aaa
nop
pusha
sbb
push
aam
jo
std
sub
add
in
jnp
in
add
test
push
push
or
and
sbb
jns
imul
xchg
xor
and
sub
es
xchg
popf
inc
nop
or
nop
adc
add
or
mov
rol
leave
sub
inc
(bad)
pop
rol
push
clc
add
out
das
push
push
cld
cld
out
jnp
in
cld
or
ficom
repnz
clc
loope
cld
inc
and
loop
sar
sbb
mov
add
dec
jb
pop
mov
in
cld
in
cld
add
movs
mov
cld
fdiv
cld
call
add
(bad)
sbb
cmp
mov
fwait
and
dec
or
pusha
and
sbb
mov
mov
jb
mov
in
sub
and
mov
or
pop
cwde
mov
or
add
mov
adc
popf
nop
or
nop
pop
pop
dec
xchg
sbb
cmp
loopne
test
cmp
sub
mov
or
nop
mov
jb
nop
or
adc
int
in
clc
sti
sbb
call
shl
jb
fcomp
adc
pop
xor
enter
xor
adc
jae
mov
fwait
push
jmp
add
add
fisttp
sub
mov
sbb
and
or
lods
xchg
xchg
lds
hlt
mov
inc
ss
sbb
push
int3
lea
pusha
sub
add
or
pop
cwde
sti
push
mov
mov
pop
cwde
sti
push
enter
xchg
in
inc
je
sbb
nop
pop
pop
call
fcom
sbb
pop
pop
inc
popf
inc
or
add
xor
(bad)
int3
ins
jnp
ins
sbb
add
jnp
cli
sbb
or
loope
or
out
js
sbb
lock
jnp
(bad)
adc
nop
cwde
dec
rol
jae
dec
xor
add
adc
and
enter
add
cld
lock
jo
add
cld
sub
in
test
and
cmp
je
imul
fild
push
adc
sbb
xor
add
fild
xor
add
and
rcl
es
mov
dec
jge
repz
jae
pushw
pop
add
inc
inc
push
push
fs
jmp
or
imul
imul
sbb
(bad)
pop
retf
lahf
dec
imul
and
scas
test
mov
lahf
pop
push
cmp
mov
dec
test
mul
fadd
(bad)
iret
sub
push
pusha
(bad)
out
mov
ret
add
xlat
adc
mov
add
or
add
daa
xchg
or
rcl
loope
(bad)
jae
jo
shl
inc
jns
(bad)
mov
adc
cmp
push
jg
pop
push
jb
pop
shl
jae
stos
add
add
(bad)
adc
ret
shl
inc
xor
lods
adc
aaa
stos
test
fild
push
or
cmp
addr16
xchg
sbb
adc
lds
adc
sbb
or
inc
ficom
xor
add
loopne
les
adc
push
add
adc
jno
shl
sbb
push
push
iret
push
test
sub
in
sub
mov
mul
push
add
hlt
sub
cmp
out
in
pop
mov
push
fnstsw
popa
fadd
fcom
add
fadd
mov
nop
test
and
popa
aaa
ins
xor
inc
push
test
cwde
inc
shr
(bad)
aam
xchg
cmp
or
in
pushf
data16
lea
nop
pushf
mov
dec
sar
pop
lea
xchg
rcl
cmp
push
nop
dec
rol
pop
rol
clc
cmp
dec
dec
mov
or
xor
inc
mov
push
add
pop
and
mov
jg
adc
sar
lea
nop
xor
add
retf
fmul
int3
cmp
add
clc
inc
test
mov
add
adc
or
lea
xor
ret
movs
int
pop
xchg
cld
sbb
cmp
pop
push
push
iret
dec
xchg
out
mov
inc
add
out
xchg
das
add
mov
pop
nop
enter
int3
shl
dec
shl
cmp
lock
adc
sbb
or
cwde
sbb
ss
push
mov
or
mov
cwde
xor
xchg
add
in
push
push
or
mov
xor
dec
jo
add
test
jo
(bad)
cmp
pop
js
adc
dec
test
push
push
lods
lods
mov
push
mov
jp
sbb
mov
add
pop
mov
mov
and
mov
jne
pushf
pfacc
sbb
bound
jnp
or
inc
add
call
dec
cmps
rcr
pop
sbb
inc
dec
daa
and
fbld
popa
push
sbb
xchg
jg
sub
movs
and
xchg
sbb
jl
fwait
scas
xchg
adc
nop
mov
mov
cld
or
inc
xchg
cmp
and
xchg
enter
jns
mov
adc
mov
test
and
test
pop
ja
mov
outs
xchg
pause
inc
dec
in
xchg
hlt
adc
jno
push
mov
jge
ret
js
and
mov
mov
inc
jbe
jmp
mov
jbe
pusha
mov
fmul
sbb
xchg
test
xchg
mov
pop
or
mov
sbb
xchg
xchg
lock
push
push
inc
sub
mov
push
and
mov
and
shr
rcr
adc
(bad)
mov
aaa
nop
or
add
dec
ds
in
mov
xchg
pop
adc
xchg
bound
shr
or
loopne
stos
adc
mov
push
mov
and
data16
test
or
sub
jae
stos
or
mov
std
push
add
rol
loopne
or
out
ret
mov
fcmovne
jne
call
dec
sti
or
sbb
pop
(bad)
cmps
xchg
inc
jmp
mov
jo
sar
xchg
mov
mov
mov
cmps
movs
mov
jg
inc
pop
jmp
push
out
mov
mov
push
je
in
(bad)
in
xor
xor
and
sbb
sub
in
in
test
dec
scas
inc
scas
sbb
shr
mov
add
mov
mov
mov
pop
push
or
shl
dec
inc
mov
or
mov
ins
jl
ins
jb
mov
xor
or
outs
cli
repz
xchg
arpl
cmp
add
shr
adc
jb
sbb
in
add
ret
push
and
xchg
or
add
enter
mov
fs
pop
rcr
xchg
xor
xor
mov
ins
sbb
add
mov
imul
outs
mov
(bad)
les
arpl
dec
leave
or
inc
push
int3
pusha
cmp
lods
xor
sbb
es
inc
data16
jecxz
stc
pop
repz
sub
adc
aam
mov
(bad)
pop
ret
shr
dec
push
lds
sar
pop
mov
cs
or
aaa
stos
push
and
push
push
xchg
mov
add
shl
arpl
add
jmp
imul
mov
and
xchg
xor
push
pop
push
retf
mov
inc
cs
or
ins
mov
sbb
test
dec
cmp
lods
je
push
ins
pushf
inc
inc
mov
pop
ret
adc
and
adc
popa
pop
les
sub
dec
pusha
inc
mov
xchg
xchg
mov
test
jl
fild
(bad)
fldcw
stos
push
adc
loope
xchg
inc
or
mov
lea
fwait
mov
hlt
add
jmp
cmp
xlat
push
inc
mov
mov
das
push
cwde
bound
nop
cwde
out
xor
xor
cmps
mov
mov
pop
gs
or
ja
mov
pop
mov
adc
aam
xchg
sbb
or
mov
cmp
hlt
pop
or
ret
and
aam
adc
add
or
adc
jmp
push
xchg
ret
or
inc
cs
inc
mov
jmp
enter
inc
(bad)
adc
push
daa
xchg
sbb
pop
and
jns
enter
xchg
or
lods
sub
jecxz
adc
xor
pop
push
push
jecxz
mov
inc
repnz
push
or
call
add
shr
call
in
push
or
pop
adc
cdq
jmp
pop
jb
pop
js
pushf
imul
xlat
sub
nop
mov
retf
fild
xchg
sub
cdq
mov
adc
rol
pop
and
and
lahf
xchg
cmp
sub
test
cmp
gs
ins
and
(bad)
mov
sub
push
fwait
lock
jne
jmp
movs
cmp
inc
leave
rcl
add
and
xlat
je
sbb
in
mov
test
xchg
mov
xchg
mov
imul
cmp
xchg
mov
pusha
popa
loopne
aam
inc
dec
and
inc
mov
mov
mov
hlt
mov
addr16
jno
or
adc
adc
movs
sub
hlt
add
push
rcl
ins
and
cwde
jb
pop
add
in
or
and
test
push
pop
cdq
adc
adc
fist
adc
outs
movs
sti
adc
lock
add
cmps
test
push
leave
xchg
aam
and
xchg
mov
push
lock
mov
sbb
add
nop
nop
mov
mov
dec
gs
sar
sbb
fisubr
xor
or
fwait
not
repnz
sbb
(bad)
mov
xchg
add
jbe
mov
xchg
add
fs
popa
rcl
add
add
adc
cmp
or
add
inc
outs
fs
cmp
pop
gs
les
nop
adc
and
(bad)
in
jmp
adc
mov
neg
pause
push
rcr
add
popf
div
inc
bound
or
popf
test
enter
inc
test
dec
div
mov
pushf
int
pop
jmp
call
cmp
adc
sbb
adc
or
test
mov
dec
pushf
sub
mov
adc
sahf
cmp
adc
mov
in
lock
mov
jns
or
test
not
push
and
ror
cmp
or
inc
and
mov
ss
or
and
js
test
xchg
mov
xchg
mov
sbb
pop
fld
sbb
rcr
aas
mov
ins
popa
mov
pushf
add
jge
lods
(bad)
scas
(bad)
mov
enter
movs
push
xchg
mov
pop
retf
daa
popf
add
add
enter
mov
sti
adc
xchg
and
xchg
lock
inc
cs
nop
hlt
fdiv
add
cmps
fs
pusha
mov
mov
and
add
xor
sub
mov
movs
pop
dec
inc
add
dec
out
adc
inc
jmp
test
add
retf
enter
xchg
or
nop
and
dec
pop
adc
xchg
stos
and
bound
xor
pop
(bad)
(bad)
xor
sub
and
das
imul
fcomp
xor
sub
push
je
out
add
(bad)
je
adc
aam
or
fs
int
es
xor
inc
adc
int3
enter
int3
enter
mov
add
lds
inc
add
inc
mov
xchg
jns
or
add
and
sub
les
and
aad
xchg
dec
mov
enter
mov
dec
enter
jne
inc
daa
xchg
enter
xchg
add
mov
xchg
ins
xchg
and
adc
and
fst
dec
push
pop
add
fucomi
fnsave
arpl
cmp
sub
outs
enter
test
sub
sub
dec
mov
(bad)
out
add
mov
add
inc
push
xor
jle
sub
mov
not
arpl
mul
rol
scas
in
cdq
ds
pop
inc
cmp
aad
dec
push
fs
cwde
jo
xchg
leave
xchg
add
nop
scas
cmp
pop
test
jle
fldcw
inc
and
ror
jae
mov
jnp
jmp
or
xchg
add
out
nop
adc
rol
ficomp
mov
inc
push
push
pop
mov
fisttp
cs
iret
mov
fsub
inc
scas
push
lods
fdivp
fmul
cmp
mov
push
xchg
or
pop
repnz
pusha
jae
test
(bad)
enter
js
pop
pop
dec
or
push
xor
xchg
or
jo
jb
and
and
or
pop
stos
dec
dec
ror
inc
sbb
inc
cmp
mov
stos
cmp
and
xor
mov
add
cmps
xchg
stc
test
xchg
mov
add
add
add
dec
xor
xchg
xor
mov
sub
mov
and
mov
or
and
push
dec
in
das
inc
or
test
adc
sbb
test
xor
or
and
xor
or
jns
mov
scas
add
and
add
shl
(bad)
pop
cld
(bad)
clc
dec
pop
inc
pop
or
add
adc
xchg
nop
dec
pop
repnz
(bad)
hlt
(bad)
jo
inc
es
lock
nop
mov
in
scas
cmp
call
call
sbb
pop
mov
mov
(bad)
fdivr
test
aam
push
adc
push
cmp
jns
retf
push
or
(bad)
sar
inc
cmps
loop
int3
sti
int3
enter
inc
enter
xchg
add
(bad)
les
shl
mov
mov
fs
shl
mov
stos
lods
dec
push
pop
inc
sbb
cmps
stos
test
push
mov
test
sbb
xor
inc
jne
dec
inc
cmp
jb
pushf
cwde
adc
dec
enter
ins
push
push
xor
xchg
enter
nop
mov
enter
cmp
mov
add
add
sbb
jl
and
je
inc
enter
jo
ins
pop
xor
inc
(bad)
ins
push
and
nop
xchg
imul
mov
ds
xchg
jnp
pop
or
add
pop
pop
push
pop
enter
push
push
push
jb
sub
adc
dec
dec
xor
add
inc
inc
test
enter
sub
inc
leave
adc
and
and
xor
cmp
cmp
adc
xor
enter
xor
xor
test
sub
cwde
xor
dec
enter
and
jae
inc
and
adc
sbb
enter
sbb
cmp
in
adc
xchg
fs
adc
nop
or
cdq
or
or
fs
add
add
jb
xchg
add
cld
std
cld
jmp
mov
jno
push
cmp
xchg
xchg
ss
and
shl
inc
adc
xor
dec
jns
popf
inc
push
mov
dec
or
les
inc
std
mov
jp
adc
pop
xor
stc
mov
fmul
mov
popf
ins
(bad)
xor
or
in
iret
in
in
add
ins
adc
fmul
std
mov
inc
in
lock
lods
mov
in
mov
sub
mov
out
pop
dec
or
ins
xchg
rcl
mov
inc
pop
cwde
pop
les
xor
or
nop
dec
fs
jo
scas
xchg
and
add
sbb
inc
mov
je
inc
imul
xor
inc
mov
daa
xor
jecxz
jae
add
call
or
outs
cwde
(bad)
jae
cmp
jb
mov
adc
pop
popa
inc
dec
cmp
aas
xchg
gs
push
push
xchg
dec
call
gs
mov
mov
cmp
daa
mov
iret
(bad)
sub
mov
mov
mov
adc
pop
mov
test
jno
xchg
pop
mov
mov
(bad)
and
js
hlt
mov
cld
fs
jne
push
ja
push
push
pop
adc
rcl
icebp
or
out
push
jns
and
mov
mov
cmp
jb
xchg
inc
(bad)
or
pop
jmp
dec
push
sbb
mov
push
and
movs
jmp
adc
test
cmp
mov
xchg
sub
push
(bad)
(bad)
and
jge
mov
sub
jno
mov
cmp
add
les
mov
cmp
push
sbb
add
rol
adc
enter
dec
(bad)
shl
dec
popa
mov
fcmovbe
push
fisttp
cmp
adc
cmp
mov
cmp
pop
je
jmp
mov
mov
sbb
xor
add
add
cmp
je
sbb
js
pop
push
cmp
xchg
xchg
sbb
inc
inc
pop
rcl
imul
(bad)
aam
(bad)
movs
xlat
sub
push
mov
sbb
add
sbb
inc
popa
fcomp
mov
xchg
mov
sbb
lock
lods
int
into
mov
mov
jo
sub
push
mov
fiadd
mov
retw
rol
in
movs
mov
or
test
or
in
mov
mov
mov
mov
psubb
nop
xchg
pop
inc
test
daa
adc
mov
inc
cmp
aas
adc
sub
adc
std
shl
in
rcr
pop
in
xchg
add
adc
and
dec
ja
sbb
aad
mov
sbb
or
adc
push
cmp
inc
outs
or
dec
les
mov
sahf
or
out
mov
mov
icebp
rol
cmp
add
ins
sbb
mov
sub
and
add
adc
jb
nop
in
or
sbb
jne
xchg
movs
sub
jp
fadd
hlt
aam
xchg
es
jmp
fadd
fidivr
mov
or
mov
and
jb
les
add
and
xor
jo
pop
xor
xchg
add
stos
adc
adc
add
int
and
sbb
imul
and
jns
ret
fdivr
mov
test
ret
dec
dec
or
push
sub
push
in
sub
inc
push
popa
bound
repz
push
jb
movs
rcr
lea
add
jb
imul
daa
xchg
fbld
add
(bad)
fisubr
sbb
inc
outs
add
lds
push
sbb
movs
cmp
mov
es
add
or
sbb
fsubr
data16
aam
inc
or
fwait
dec
popa
or
clc
clc
ja
lds
pop
sbb
pop
dec
xchg
out
sub
stos
ss
inc
and
es
stos
mul
pusha
test
nop
(bad)
fbld
call
add
pop
jae
pushf
mov
xor
jg
push
xor
outs
(bad)
repnz
ror
mov
xchg
add
cwde
sbb
nop
push
movs
mov
push
push
ror
icebp
fs
sub
cmp
fadd
xor
xor
dec
fld
dec
or
mov
hlt
aaa
nop
xor
retf
mov
adc
jmp
mov
cmp
sub
push
fstp
and
mov
mov
adc
dec
inc
xchg
lock
and
movs
rcl
pop
dec
or
popa
stos
(bad)
loopne
jge
in
xchg
jmp
das
sbb
xchg
leave
in
inc
enter
ds
or
jb
arpl
xor
pop
xchg
add
sub
xchg
add
fstp
jecxz
adc
push
bound
push
mov
sub
xor
mov
ss
retf
push
adc
loope
mov
aas
inc
or
and
push
loop
int3
xchg
mov
pop
idiv
cmps
or
mov
jle
jmp
adc
mov
inc
sbb
push
je
nop
psubb
dec
and
cmp
nop
cmp
xor
push
shl
imul
add
lods
test
dec
retf
js
imul
daa
inc
mov
jne
and
sub
inc
retf
push
push
inc
or
inc
or
sbb
adc
mov
jb
enter
push
mov
iret
add
mov
jbe
loopne
rol
xchg
inc
add
sbb
jo
cmps
fldcw
data16
and
push
(bad)
scas
mov
retf
sbb
(bad)
nop
lahf
loopne
enter
inc
push
ds
inc
fstp
in
out
cwde
mov
jecxz
adc
daa
stc
call
scas
xchg
(bad)
push
out
fld
push
xor
inc
in
in
(bad)
out
in
ret
out
dec
out
repz
cmp
xor
call
imul
cmp
inc
sar
aas
nop
jle
mov
fstp
imul
mov
mov
fs
push
mov
push
rol
addr16
repnz
push
jae
in
and
sbb
mov
inc
lock
dec
lahf
push
mov
mov
xor
int
retf
cmp
jmp
in
cmps
stc
cmp
sub
inc
dec
pop
je
in
sar
nop
push
test
fs
dec
mov
pop
repz
xchg
push
ds
aam
cmp
mov
jmp
jl
dec
stc
mov
imul
jle
dec
cmp
jo
repz
push
fs
loopne
fst
dec
ins
(bad)
fimul
je
sub
out
mov
das
fadd
aam
dec
mov
and
test
les
popf
xchg
dec
in
sahf
xor
out
ss
enter
fmul
js
push
in
imul
sbb
sbb
in
or
add
mov
add
ds
out
movs
nop
mov
push
in
cld
cmps
dec
scas
sub
clc
scas
dec
inc
adc
mov
xchg
jl
jl
cmp
scas
sub
xor
push
or
dec
push
pop
bnd
div
push
test
imul
retf
adc
add
sbb
stc
cmps
in
aad
cs
jl
inc
lahf
sub
sbb
adc
retf
push
js
repz
dec
mov
push
nop
sahf
or
cmp
hlt
push
pusha
jle
loopne
test
call
push
fst
sbb
push
push
(bad)
jl
lods
sbb
push
retf
or
fmul
adc
sub
cmp
jno
push
xchg
or
pop
mov
add
popf
ins
xor
or
ficomp
adc
xor
or
inc
jne
pop
std
mov
mov
sub
xchg
daa
fbld
adc
add
mov
out
(bad)
add
add
mov
rcr
and
mov
or
cmp
mov
xchg
cmp
xchg
sub
sub
cmps
add
fbstp
(bad)
lods
dec
mov
cmp
mov
xor
mov
outs
mov
fs
or
sub
mov
xor
sbb
stc
or
cmp
mov
mov
mov
fmul
add
mov
loop
sbb
xor
cld
mov
inc
xchg
mov
adc
mov
xchg
aam
loop
clc
pop
mov
ja
mov
sbb
js
jns
jns
ret
fs
retf
call
add
and
into
sub
mov
sub
popa
or
fild
mov
and
outs
pop
adc
aam
and
inc
mov
push
cwde
mov
adc
mov
leave
lods
push
xchg
data16
sbb
lods
mov
mov
into
scas
in
pop
mov
rol
add
test
dec
push
and
mov
les
enter
test
mov
mov
push
push
pop
add
das
and
iret
sub
daa
cdq
nop
adc
xor
jmp
mov
mov
ffreep
pop
dec
adc
or
mov
jl
mov
icebp
or
mov
xchg
out
aas
push
pop
pop
adc
retf
ja
mov
pop
call
push
mov
hlt
aaa
mov
mov
scas
push
add
sbb
add
nop
and
sbb
xor
pop
popf
add
cwde
and
mov
pop
xor
push
cmp
ds
data16
push
mov
push
or
and
sub
dec
dec
cmc
aaa
push
outs
cmp
sbb
rcr
(bad)
sub
es
mov
push
es
ins
jo
gs
jo
mov
inc
or
pop
mov
in
icebp
loopne
fwait
sbb
jl
push
and
add
xchg
das
mov
mov
test
ins
fcomp
pop
adc
sbb
adc
xchg
mov
mov
adc
dec
call
out
cmp
rcl
add
push
stc
setne
fadd
jnp
push
add
xchg
fldcw
pop
add
mov
xor
loopne
enter
xor
inc
aam
add
or
add
mov
inc
out
xor
cmps
dec
hlt
rcl
clc
ret
pop
jno
add
dec
inc
pop
sti
inc
mov
or
push
and
cmp
pop
in
mov
rol
test
scas
fist
push
in
ficomp
dec
daa
or
push
fsub
outs
xchg
inc
das
stos
mov
rcr
test
push
xor
sub
jg
xor
mov
cli
push
mov
or
dec
mov
and
ins
fistp
bound
sbb
hlt
cs
push
popa
stos
arpl
js
and
pop
aam
movs
or
push
dec
cli
xchg
ins
mov
clc
neg
mov
dec
mov
pop
jbe
cwde
test
pushf
jns
ret
adc
mov
out
sbb
test
pop
lods
mov
stc
jecxz
daa
in
scas
sbb
dec
call
adc
sub
and
inc
push
jmp
adc
nop
xchg
cld
aad
movs
xchg
(bad)
(bad)
(bad)
jae
addr16
addr16
jmp
adc
xchg
retf
mov
je
push
inc
in
popf
dec
mov
inc
cwde
jl
in
and
aas
pop
inc
dec
adc
dec
xor
stc
int
dec
or
je
cwde
push
jg
shl
sbb
push
and
add
xchg
rol
inc
adc
bound
lods
sbb
pslld
jmp
ret
aas
fwait
lock
adc
or
clc
mov
sbb
jle
(bad)
aas
je
fistp
notrack
push
out
jmp
adc
daa
dec
lock
mov
arpl
or
test
or
mov
shr
nop
push
pushf
adc
hlt
out
int
ja
lock
not
mov
adc
add
and
test
(bad)
jo
popf
fmul
mov
mov
ins
mov
mov
cmps
jl
sub
pop
push
add
add
cdq
inc
data16
sub
adc
xor
mov
add
push
mov
in
jnp
sub
and
call
mov
mov
dec
mov
faddp
and
callw
cmc
xchg
in
cmp
lock
inc
jl
dec
adc
and
jg
js
mov
call
dec
cmp
cli
or
fs
mov
push
jg
or
fwait
dec
xchg
loop
add
in
xchg
hlt
and
mov
not
movs
loopne
sar
(bad)
cli
clc
mov
cmp
jg
aas
add
in
pop
sbb
add
add
aaa
int3
mov
push
cli
dec
dec
mov
cmp
shl
or
aad
cld
pop
xor
add
into
mov
or
jg
jo
dec
jo
inc
leave
cmp
xchg
jne
sub
ins
push
mov
dec
push
bound
jecxz
mov
out
je
out
out
imul
push
sti
int
sti
and
push
xchg
or
enter
dec
fadd
jle
adc
jge
lahf
dec
xor
mov
and
dec
mov
jo
test
adc
push
out
in
outs
mov
and
int3
sbb
ret
inc
xchg
push
aas
mov
mov
retf
adc
push
xchg
push
mov
add
pavgb
push
sar
add
data16
xchg
sti
xor
adc
pop
lock
test
addr16
fwait
mov
mov
or
cmp
dec
fsub
mov
push
sbb
inc
rol
dec
outs
sahf
iret
ja
cmps
or
xchg
sub
jnp
or
loopne
inc
adc
jmp
push
out
mov
daa
and
ins
cmps
sbb
arpl
lock
and
xchg
retf
ins
pop
sub
sub
pop
push
sub
mov
mov
bound
movs
outs
and
enter
call
stc
mov
and
retf
repnz
pop
cmp
dec
outs
xor
inc
ror
and
test
or
cwde
xchg
dec
sbb
retf
add
dec
jb
sub
sub
add
dec
les
cmp
lahf
jo
xchg
dec
sbb
or
inc
ret
or
or
imul
xchg
jae
in
add
imul
pop
and
push
sbb
dec
neg
mov
xor
inc
jns
push
sub
mul
mov
jae
cmps
xor
arpl
pop
ret
imul
sub
dec
jmp
xchg
jo
push
xlat
mov
xchg
and
or
mov
adc
imul
test
test
pop
stos
push
adc
iret
out
js
dec
hlt
repnz
sahf
xor
cmp
inc
inc
in
xchg
in
xchg
sbb
pop
repz
outs
mov
call
pcmpgtb
dec
dec
dec
ins
jo
lods
test
pop
scas
fcom
jl
leave
and
inc
sar
dec
push
test
ror
cld
and
or
lea
adc
xor
out
mov
pop
add
lods
pop
inc
sbb
adc
hlt
and
push
mov
cmp
jmp
adc
pop
adc
pop
sbb
repz
cs
inc
es
in
imul
movs
or
lock
int3
aaa
in
addr16
in
and
hlt
out
out
jnp
add
adc
add
cld
adc
xchg
xor
jmp
mov
fs
and
test
shr
push
and
mov
dec
daa
push
pop
bound
fldcw
dec
push
retf
adc
mov
dec
mov
xor
seto
add
rol
mov
jnp
inc
int3
adc
sub
cmp
jl
enter
test
cmp
rcl
xchg
and
and
or
cs
enter
nop
cmp
jb
inc
mov
xchg
sub
pop
push
pop
ins
mov
pusha
jb
pop
and
jo
pop
leave
inc
js
inc
jb
pop
mov
cwde
mov
xchg
rcl
pop
and
loopne
mov
add
adc
xor
mov
and
and
adc
mov
loopne
add
xchg
pop
and
mov
loopne
and
pop
leave
inc
pop
aas
shl
dec
es
add
lock
inc
repnz
loopne
daa
xchg
pop
jo
adc
and
dec
rol
push
or
or
or
sbb
push
xor
call
sbb
pop
add
int3
enter
enter
(bad)
(bad)
(bad)
fcmovnu
fcmovu
retf
(bad)
loopne
jecxz
in
jmp
nop
sub
outs
and
daa
scas
pusha
and
fdivr
popa
je
xor
dec
dec
mov
dec
add
scas
jns
sbb
adc
or
adc
or
(bad)
nop
call
adc
add
(bad)
fucomi
jmp
sbb
add
sbb
(bad)
sbb
sbb
add
sbb
test
dec
cmp
pop
xor
push
mov
sbb
adc
arpl
sbb
pop
push
push
add
jmp
push
call
test
push
sub
or
aas
ins
lods
lods
pop
xchg
push
xor
xchg
inc
out
ds
lock
add
jns
sbb
sub
cmp
sahf
out
dec
push
pop
pusha
push
jo
or
cwde
mov
cmps
cdq
out
enter
sahf
jo
jns
sahf
sahf
sahf
lahf
push
daa
daa
mov
popa
add
add
fs
daa
daa
daa
gs
stos
inc
fs
xchg
cld
push
jbe
xor
sbb
mov
mov
jns
repnz
mov
cmp
or
stos
push
mov
xchg
and
mov
mov
sahf
out
add
mov
clc
sbb
add
add
xchg
cmps
sahf
add
sysret
gs
push
mov
pop
add
mov
adc
adc
adc
invlpg
fcmove
lods
popf
outs
or
xchg
mov
pop
or
pop
jbe
int3
xor
push
add
add
add
imul
in
aam
or
add
dec
ja
imul
pop
(bad)
sahf
fcomi
or
or
jbe
add
or
or
or
or
or
add
jmp
push
cmp
nop
lods
jns
jge
int3
in
jmp
push
cmp
sahf
out
mov
xor
hlt
or
sub
loopne
ret
jnp
add
adc
pop
jo
fidivr
je
(bad)
(bad)
repnz
push
push
inc
xor
mov
xlat
add
push
mov
cmp
xchg
add
add
or
push
add
mov
pusha
(bad)
pop
jmp
es
sub
pop
rsqrtps
adc
call
bound
mov
and
push
and
sbb
xchg
hlt
or
inc
adc
jmp
scas
mov
inc
adc
push
adc
retf
fist
xor
add
adc
add
push
call
out
imul
and
adc
push
repnz
mov
aas
inc
xchg
inc
mov
scas
jns
push
shl
jle
in
cmps
retf
adc
jnp
aas
in
sti
push
xor
mov
bound
iret
repz
add
cmps
stc
cmp
sbb
adc
adc
out
push
iret
jae
out
and
sbb
sbb
jns
cmps
mov
mov
push
repz
out
sbb
or
cmp
cmp
mov
jae
repz
rol
push
add
out
call
fcomip
mov
push
and
cmp
push
fadd
sar
cmp
inc
scas
push
cmps
stc
cmp
add
add
cmp
sahf
dec
xor
sub
movs
jmp
mov
repz
ror
mov
sbb
cmp
test
aam
push
repz
ror
int3
sub
pop
out
xor
cmp
cmp
sub
jns
es
jmp
mov
mov
sub
jne
adc
or
or
and
fimul
cmovle
push
cmp
add
adc
sbb
nop
pop
in
(bad)
lods
sbb
adc
sbb
inc
mov
cmp
sbb
in
repz
mov
int3
shr
add
jnp
jge
sbb
pusha
in
(bad)
clc
std
fild
mov
call
add
sahf
add
pop
add
das
pop
aas
pop
cdq
std
into
and
add
add
push
iret
add
adc
xor
add
adc
mov
xchg
and
and
xchg
push
(bad)
mov
xor
xor
sub
and
imul
push
gs
inc
xchg
push
adc
and
jb
adc
sbb
ret
inc
sbb
push
inc
adc
das
ins
popf
cs
pop
(bad)
push
push
xchg
jae
int
stos
push
pop
pop
push
jo
xor
sar
push
pusha
and
cmp
add
push
pop
sbb
out
cmp
cmp
add
jns
out
pop
adc
mov
lahf
out
sahf
mov
add
adc
out
sahf
out
or
sub
sahf
out
sahf
or
test
jne
jns
call
push
sahf
out
cwde
add
push
jl
fcomp
repz
ins
sub
or
iret
repz
dec
clc
add
mov
and
les
repz
repz
movs
add
inc
in
pop
sbb
jp
aam
repz
repz
mov
mov
repz
dec
hlt
add
or
repz
repz
int3
bswap
repz
data16
push
xchg
iret
repz
or
pushf
idiv
repz
fcomp
push
jns
jnp
outs
cs
dec
loop
mov
(bad)
adc
push
ret
jns
out
mov
sahf
xchg
out
pop
sbb
cmp
imul
out
mov
push
adc
push
mov
push
out
sahf
xchg
retf
stos
add
test
pop
sbb
call
sahf
out
mov
jns
xchg
cli
push
adc
jae
sahf
xchg
out
(bad)
arpl
cmps
cmp
out
add
jns
xchg
out
xchg
jnp
(bad)
jns
out
imul
or
dec
not
out
jns
ja
into
addr16
xchg
out
sahf
scas
pop
xchg
out
jns
pop
pop
sahf
jg
jne
mov
das
mov
mov
inc
mov
loope
or
in
cs
icebp
leave
test
jmp
in
mov
mov
mov
in
mov
cs
lods
in
popf
inc
cs
fnstsw
std
ret
mov
jecxz
xchg
or
cs
cs
stos
jmp
cs
fstp
sti
(bad)
or
nop
or
cs
mov
cs
out
lahf
in
inc
cs
mov
shl
sahf
pop
push
out
add
jle
aam
adc
sbb
add
add
ds
out
add
sbb
add
adc
lods
mov
inc
push
jle
push
imul
pop
push
rcl
popa
pusha
add
xor
or
pop
push
daa
lods
outs
mov
loop
xchg
int3
xor
rcr
ret
je
add
call
arpl
ins
sub
unpcklps
push
adc
test
call
mov
mov
sub
xor
mov
adc
sbb
addr16
pop
add
xor
and
je
push
(bad)
and
int3
pusha
fidiv
movs
ins
popa
mov
or
jb
jns
and
std
sub
jae
ins
bound
cmp
in
mov
imul
test
sub
push
mov
sub
push
pushf
sbb
mov
jbe
mul
repz
ror
pop
push
lods
ss
bswap
adc
je
dec
lods
sbb
xchg
sub
cmps
mov
dec
daa
mov
pop
scas
repnz
pushf
pushf
pop
in
jp
adc
adc
pushf
adc
push
leave
add
mov
or
inc
adc
out
rol
out
adc
ret
adc
mov
data16
rcl
mov
lods
sti
jecxz
ret
push
add
jns
out
sbb
sbb
sbb
sbb
es
cmovns
mov
and
push
movs
(bad)
fs
(bad)
in
add
cs
add
add
sub
fadd
push
pop
pop
pushf
pushf
pushf
pushf
or
or
stos
mov
pushf
or
add
mov
or
mov
dec
sahf
out
sahf
int3
sub
ins
in
sbb
sahf
out
pushf
pop
fdivr
out
sahf
out
cld
add
sahf
ret
(bad)
adc
out
xchg
push
shl
mov
jns
out
repnz
sahf
retf
push
sbb
out
call
sahf
out
cli
push
xchg
out
sahf
(bad)
cmps
data16
jns
out
xchg
push
(bad)
ss
jns
out
test
dec
sahf
out
sahf
into
cs
outs
out
push
jns
out
sahf
pop
fidivr
mov
jle
add
sahf
shl
popa
loope
jns
out
xchg
push
shl
mov
jns
out
icebp
or
sahf
leave
sub
sahf
out
cdq
pop
fnstcw
mov
jns
add
jns
lds
jns
out
xchg
push
aad
mov
jns
out
cmc
or
jns
int
lods
ins
in
sbb
popf
pop
fnstsw
out
std
adc
or
xchg
push
iret
repz
xchg
push
push
rcl
xor
repz
mov
jae
repz
repz
mov
repz
mov
retf
retf
sub
repz
stos
stos
imul
iret
repz
sbb
fwait
iret
repz
fwait
pop
pop
fcmovnu
cmp
repz
mov
cmp
repz
sti
pop
pop
xchg
repz
xchg
mov
cmp
cmps
cmps
addr16
repz
pop
pop
xchg
iret
repz
xchg
push
push
xlat
xlat
aaa
cmp
repz
mov
ja
repz
repz
(bad)
jg
(bad)
dec
dec
iret
iret
das
cmp
repz
scas
scas
outs
outs
repz
repz
out
pop
pop
lahf
iret
repz
lahf
pop
pop
(bad)
aas
cmp
repz
mov
mov
or
and
jns
out
adc
jo
out
sahf
or
push
out
cmp
inc
and
jns
out
adc
xor
jns
out
add
and
arpl
jecxz
out
sahf
cmps
push
or
add
or
out
sahf
sbb
adc
sbb
jns
out
push
push
push
add
out
sahf
out
sbb
jns
sbb
pop
pop
(bad)
sar
lods
test
daa
or
ret
push
or
adc
xlat
ret
ja
aaa
or
pusha
dec
rcl
jo
mov
and
(bad)
(bad)
fistp
mov
cmps
pusha
xchg
sar
adc
clc
mov
push
push
pop
push
push
pcmpeqw
shr
daa
pop
daa
adc
adc
xchg
sar
add
push
or
or
mov
dec
sahf
test
cs
or
in
mov
mov
xor
ins
jnp
pop
jb
pop
jb
sbb
and
sbb
push
and
dec
lods
mov
aaa
sub
retf
add
leave
leave
dec
adc
adc
enter
push
pop
and
leave
test
sbb
sbb
(bad)
(bad)
jmp
xchg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
(bad)
(bad)
jmp
xor
fdivr
jmp
rcl
mov
sub
jmp
xchg
sbb
mov
repnz
repz
test
ficomp
jmp
(bad)
mov
(bad)
(bad)
(bad)
push
mov
imul
std
in
leave
mov
add
ins
push
arpl
ud0
(bad)
(bad)
cli
cmc
or
outs
cmp
imul
addr16
add
aam
dec
std
test
shr
or
ins
cwde
mov
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
(bad)
fcomp
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
iret
shld
sub
mov
(bad)
and
or
adc
stos
sbb
inc
cmp
inc
fdiv
jno
add
aad
mov
mov
movs
in
pop
or
call
mov
stc
or
jmp
movs
dec
loope
or
ins
push
fs
add
hlt
push
imul
ins
pop
bound
xor
(bad)
mov
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
call
mov
jmp
cld
fistp
ficom
gs
aam
pop
popa
mov
outs
(bad)
inc
add
inc
movs
fisttp
xchg
fadd
(bad)
shl
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
(bad)
jl
fnstsw
add
daa
push
or
and
test
(bad)
(bad)
(bad)
dec
aam
mov
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
aas
and
(bad)
cmp
lods
ins
mov
(bad)
(bad)
(bad)
(bad)
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
(bad)
(bad)
(bad)
jmp
push
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
or
inc
push
imul
xor
sbb
push
imul
aam
loopne
(bad)
(bad)
(bad)
call
mov
ficom
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
(bad)
(bad)
(bad)
call
mov
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
(bad)
(bad)
dec
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
cmp
(bad)
jmp
mov
loop
push
xchg
ja
int3
add
mov
das
es
lds
or
(bad)
(bad)
(bad)
mov
sub
mov
cmps
call
ret
shl
sbb
ret
es
(bad)
(bad)
jmp
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
(bad)
(bad)
(bad)
(bad)
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
(bad)
call
icebp
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
call
jo
ud0
cmp
pop
or
adc
sahf
gs
clc
sar
imul
(bad)
mov
loop
mov
push
add
mov
cmp
cmps
not
pusha
ror
imul
ja
ds
push
scas
fcomp
fldenv
fild
(bad)
(bad)
fist
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
(bad)
(bad)
(bad)
jmp
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
outs
cmc
(bad)
call
or
fild
sub
sbb
mov
inc
push
sub
hlt
ja
xchg
(bad)
(bad)
(bad)
inc
or
ret
call
hlt
jecxz
dec
mov
dec
jle
mov
sub
(bad)
(bad)
(bad)
call
dec
adc
fst
jo
js
inc
out
popa
push
xlat
scas
cs
mov
xlat
mov
sbb
test
(bad)
(bad)
inc
sbb
add
call
out
ins
ins
(bad)
fistp
inc
aam
push
(bad)
(bad)
(bad)
call
mov
adc
mov
popa
ja
mov
out
repz
gs
(bad)
push
(bad)
scas
(bad)
jmp
inc
inc
sub
imul
jo
scas
imul
out
pop
sub
sub
pop
or
push
(bad)
jmp
sbb
repz
fbstp
push
jo
add
hlt
div
sub
push
ret
xchg
sbb
xor
pop
nop
sti
mov
test
jns
test
cmp
jns
(bad)
(bad)
push
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
(bad)
sbb
pop
sbb
out
adc
push
cmp
cmps
ret
(bad)
(bad)
fnstcw
mov
dec
hlt
mov
or
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
dec
mov
mov
lea
push
cwde
xlat
call
loopne
ficom
test
loope
xchg
retf
les
jb
out
imul
push
mov
(bad)
inc
test
pop
adc
push
sbb
adc
and
inc
and
inc
(bad)
fcomip
jmp
jl
or
push
fs
dec
mov
mov
and
cmps
xor
mov
sbb
loope
lods
out
sar
mov
adc
stos
and
leave
jmp
sti
(bad)
(bad)
(bad)
jmp
gs
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
(bad)
(bad)
push
out
jle
(bad)
repz
mov
xchg
rcl
cmp
mov
js
mov
(bad)
cmp
test
cwde
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
(bad)
(bad)
dec
pop
repz
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
mov
test
mov
pop
mov
(bad)
ins
pop
push
dec
(bad)
(bad)
(bad)
jmp
or
sub
add
adc
cwde
mov
nop
bound
xchg
push
lds
cld
(bad)
push
fst
out
les
fdecstp
jmp
lea
inc
xor
out
sub
dec
jo
outs
sbb
sub
loope
fisub
(bad)
call
lds
push
call
dec
in
mov
movs
ret
addr16
test
mov
(bad)
(bad)
jmp
stc
lahf
fdivrp
cmp
repz
jnp
call
cmp
mov
or
stos
mov
sbb
(bad)
(bad)
jmp
adc
sub
jae
xor
mov
jo
cmc
shr
add
mov
arpl
push
mov
mov
stc
dec
xlat
loopne
adc
mov
(bad)
(bad)
(bad)
push
popf
mov
test
and
pop
ins
cmp
les
adc
sub
dec
add
rol
(bad)
(bad)
cli
jns
or
cmp
popf
cmps
push
mov
xchg
adc
jmp
pop
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
push
xchg
sub
(bad)
call
sbb
bound
mov
xor
call
mov
pop
lods
ret
outs
xchg
dec
ins
imul
push
jne
adc
test
(bad)
call
adc
jns
movs
dec
mov
movs
daa
sub
repnz
(bad)
shr
(bad)
in
and
out
mov
shl
es
xchg
aas
call
(bad)
mov
adc
out
sar
mov
gs
pop
jle
aaa
or
cli
(bad)
(bad)
out
jbe
dec
div
lahf
adc
jb
and
push
push
(bad)
mov
aam
add
inc
add
test
jmp
retf
push
mov
lea
push
cld
mov
call
push
(bad)
cmp
(bad)
test
or
stc
sbb
sub
(bad)
(bad)
inc
mov
inc
leave
in
push
ja
pop
sub
das
sbb
(bad)
(bad)
inc
fild
sbb
repnz
adc
dec
jae
adc
cmp
and
(bad)
adc
(bad)
(bad)
(bad)
jp
mov
pop
loopne
dec
cmp
sub
cmp
clc
or
cmp
inc
aas
or
call
sar
pop
outs
jge
aaa
ss
fidiv
test
xchg
xor
push
std
(bad)
jmp
xor
(bad)
mov
fsub
leave
pop
(bad)
(bad)
(bad)
jmp
and
mov
and
mov
sub
fidivr
sub
icebp
(bad)
(bad)
(bad)
ds
sbb
sub
call
das
ror
jno
pop
(bad)
(bad)
(bad)
fistp
xor
jb
and
push
jbe
icebp
pop
je
fwait
aad
js
mov
mov
jg
cmc
(bad)
(bad)
dec
or
jl
je
jns
push
inc
js
mov
(bad)
jnp
cs
xlat
fild
outs
jmp
loop
in
ja
add
jg
push
push
or
bound
stos
sub
shr
aam
cmps
gs
cli
(bad)
(bad)
mov
and
imul
dec
pop
mov
outs
jns
(bad)
inc
fimul
or
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
inc
std
(bad)
push
dec
inc
inc
shl
inc
xor
inc
jae
cmovo
out
inc
sbb
adc
add
push
ds
mov
mov
clc
push
mov
(bad)
(bad)
jmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
lock
(bad)
(bad)
call
sti
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
cmp
(bad)
(bad)
jmp
imul
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
in
das
pop
cmp
call
mov
stos
jmp
pop
imul
fcom
cld
sahf
ins
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
test
adc
cli
sbb
sti
inc
les
clc
dec
jmp
ret
cmp
push
adc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
(bad)
(bad)
(bad)
(bad)
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
fsubr
(bad)
(bad)
(bad)
call
xor
mov
rcr
and
adc
pop
lds
xchg
pushf
les
fimul
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
icebp
outs
mov
push
leave
enter
aad
pop
gs
inc
int3
inc
ins
xchg
sbb
ror
mov
(bad)
(bad)
(bad)
jg
ja
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
clc
(bad)
(bad)
(bad)
(bad)
(bad)
mov
sahf
xchg
adc
pushf
mov
outs
mov
adc
xor
xor
mov
pop
loope
mov
iret
(bad)
in
popf
or
dec
add
mov
(bad)
mov
call
and
push
adc
fadd
arpl
pop
xchg
sar
(bad)
(bad)
jmp
test
into
add
stos
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
lods
sbb
icebp
cmps
das
jmp
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
(bad)
(bad)
inc
mov
sbb
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
push
call
mov
push
not
xor
mov
ficomp
mov
cld
(bad)
out
dec
ja
mov
stos
out
scas
mov
push
xchg
bound
shr
and
add
dec
or
loopne
(bad)
(bad)
(bad)
mov
xlat
mov
fsubr
xor
loopne
adc
lahf
push
sbb
xor
(bad)
(bad)
call
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
outs
into
int
jg
xchg
adc
mov
(bad)
(bad)
jmp
daa
call
jae
lods
and
mov
inc
jp
ds
xor
mov
(bad)
(bad)
(bad)
(bad)
cmp
rol
xchg
or
in
xchg
loop
pop
test
xchg
fstp
(bad)
(bad)
push
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
mov
sub
les
(bad)
in
sub
and
loop
outs
dec
jg
or
(bad)
jge
aad
sar
jmp
xor
lds
xchg
lahf
mov
inc
std
mov
xchg
(bad)
hlt
adc
(bad)
fcomip
imul
dec
test
adc
pop
aas
test
mov
sbb
mov
jbe
push
retf
(bad)
jmp
pusha
ret
push
shl
pop
mov
sbb
pop
mov
adc
shl
sbb
push
das
retf
jnp
dec
ja
(bad)
clc
(bad)
dec
jae
mov
cmc
cwde
outs
inc
nop
call
(bad)
(bad)
inc
data16
sbb
ficom
daa
mov
mov
out
mov
mov
mov
icebp
(bad)
(bad)
fild
xchg
js
sub
pop
outs
xchg
add
cmp
inc
mov
das
xchg
in
(bad)
(bad)
(bad)
call
sub
mov
pop
clc
or
test
push
mov
fist
inc
addr16
fwait
push
add
push
std
jo
in
mov
dec
leave
xor
inc
arpl
adc
(bad)
(bad)
call
push
mov
aaa
pop
in
push
loope
inc
call
cwde
call
scas
push
out
aaa
push
(bad)
push
clc
inc
add
and
push
cdq
scas
xlat
loopne
retf
xor
mov
(bad)
call
cld
in
pop
shl
push
mov
inc
aad
in
jmp
bound
inc
xchg
out
xor
or
jo
sahf
in
sub
push
in
cmp
pop
cmp
outs
xor
or
xchg
mov
loope
mov
sub
dec
dec
cmc
scas
repz
xor
mov
(bad)
call
leave
hlt
js
scas
dec
rol
std
shl
pop
xchg
idiv
sub
(bad)
call
sbb
repnz
and
sbb
pusha
jle
cmc
mov
(bad)
out
mov
pop
push
mov
fld
jmp
mov
xor
mov
push
arpl
popa
stc
(bad)
and
push
mov
rol
outs
mov
push
or
adc
jmp
(bad)
(bad)
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
and
fwait
imul
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
mov
into
pop
hlt
(bad)
dec
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
jmp
(bad)
stc
mov
(bad)
push
bound
lock
imul
ss
test
jmp
dec
cs
mov
call
mov
loope
into
cs
(bad)
push
test
out
add
add
pop
std
pop
jmp
icebp
and
(bad)
(bad)
inc
sub
aam
into
mov
iret
test
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
(bad)
(bad)
call
sbb
loope
push
adc
cmp
adc
mov
jle
cmp
ret
(bad)
(bad)
test
and
mov
cmps
push
data16
jno
ds
outs
sub
(bad)
(bad)
dec
rcl
out
mov
dec
or
sbb
rol
pop
outs
sti
ret
neg
jmp
cmps
xchg
addr16
pop
test
or
xchg
popa
mov
fdivrp
ja
xor
out
push
popa
sub
or
pop
ins
les
jo
hlt
(bad)
xor
push
fisttp
movs
(bad)
(bad)
(bad)
jmp
aad
push
xchg
rcr
mov
mov
sub
jl
out
sub
xchg
sbb
mov
repnz
hlt
(bad)
push
mov
inc
ficomp
fcmovbe
jge
fucom
jmp
aam
push
sub
(bad)
(bad)
(bad)
call
imul
mov
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
(bad)
(bad)
dec
dec
imul
in
addr16
cmp
in
dec
add
inc
ror
mov
xor
(bad)
(bad)
cli
inc
mov
ins
fstp
stc
inc
xor
ins
jecxz
fistp
(bad)
or
pop
fnstenv
(bad)
(bad)
jg
lods
push
mov
enter
mov
mov
mov
mov
and
mov
(bad)
(bad)
(bad)
jmp
sahf
pop
add
fnstenv
das
outs
jl
pop
push
sbb
(bad)
(bad)
jmp
nop
add
jno
cwde
shl
mov
jno
test
lahf
mov
add
js
leave
les
and
or
jmp
push
cwde
sbb
or
sub
out
pop
add
push
hlt
sbb
jmp
add
test
fdiv
bound
dec
ins
push
xchg
in
sbb
movs
jnp
or
sar
les
mov
(bad)
adc
mov
jl
fstp
shl
dec
mov
jl
sti
aam
gs
mov
test
into
mov
adc
loop
fbld
xlat
movs
rol
ins
sar
(bad)
(bad)
call
hlt
sti
inc
imul
cld
lods
mov
pusha
mov
jae
add
pop
fucom
(bad)
(bad)
dec
jno
daa
add
mov
or
xchg
mov
and
mov
(bad)
(bad)
mov
popa
in
pop
fdivrp
push
sub
leave
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
cmp
mov
in
mov
mov
(bad)
(bad)
mov
sub
inc
cmp
(bad)
adc
jecxz
or
jmp
cmp
pop
test
push
iret
or
add
aaa
push
rcr
mov
push
(bad)
inc
(bad)
mul
pop
and
sbb
outs
imul
(bad)
aam
jbe
shr
loopne
fidivr
frstor
dec
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
jmp
sar
ret
fcomip
push
sar
addr16
mov
fisttp
ss
fdivr
scas
cli
dec
sbb
dec
test
fbld
ret
test
fist
outs
mov
call
loopne
imul
outs
shl
(bad)
(bad)
push
int3
or
xchg
mov
add
mov
lds
or
sub
(bad)
(bad)
(bad)
inc
xlat
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
(bad)
(bad)
(bad)
dec
pushf
or
test
jb
test
add
xchg
mov
jp
jnp
sub
dec
mov
fsubr
mov
fcmovnu
and
aam
inc
push
push
outs
cmp
ja
sbb
out
(bad)
(bad)
(bad)
dec
push
pushw
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
(bad)
(bad)
(bad)
dec
adc
ret
es
shl
test
ja
scas
shr
fcos
(bad)
(bad)
call
pop
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
retf
(bad)
(bad)
mov
xchg
xor
mov
add
push
ficom
and
addr16
(bad)
(bad)
jg
jp
les
mov
sub
xchg
mov
mov
mov
sub
jg
dec
pop
sbb
inc
xor
bound
(bad)
(bad)
call
lds
pop
cmps
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fcos
(bad)
(bad)
dec
lods
mov
or
scas
jle
sahf
sub
dec
ret
push
fldenv
adc
jo
popa
out
inc
(bad)
(bad)
(bad)
call
aaa
mov
adc
cwde
mov
add
sbb
sbb
ss
(bad)
(bad)
(bad)
call
jmp
aam
aas
(bad)
pop
push
sahf
xchg
test
mov
inc
and
(bad)
jmp
call
shl
ret
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
(bad)
(bad)
push
imul
sub
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
(bad)
(bad)
jmp
repz
sbb
jne
pop
mov
sti
push
test
jmp
mov
cmp
jns
push
dec
push
lds
jge
fisubr
cmp
(bad)
(bad)
push
jns
add
ret
xchg
push
sbb
xchg
adc
mov
cmp
(bad)
(bad)
cmp
hlt
dec
or
xchg
into
pop
int3
fist
pop
nop
xlat
xor
cli
bound
pop
push
mov
jmp
lea
(bad)
xchg
xchg
push
xchg
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
(bad)
jmp
sbb
pop
dec
test
unpckhps
sbb
jo
cmp
std
imul
add
or
add
lahf
loop
cmps
int3
and
mov
jmp
and
scas
mov
shr
lahf
adc
ins
leave
dec
and
rcl
jmp
ja
(bad)
(bad)
jmp
aas
jns
ss
mov
or
je
adc
xor
push
dec
lea
pusha
jle
(bad)
(bad)
(bad)
push
out
repz
(bad)
std
ret
rcl
cmp
call
js
cmps
gs
(bad)
(bad)
(bad)
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
(bad)
(bad)
dec
inc
and
shr
ja
adc
out
movs
add
(bad)
(bad)
(bad)
inc
pop
mov
cwde
pop
ins
(bad)
adc
ss
daa
sbb
(bad)
(bad)
(bad)
(bad)
fnstsw
xor
mov
push
rcr
hlt
lds
(bad)
out
hlt
push
out
ret
neg
xchg
(bad)
cld
call
scas
pop
mov
test
xor
imul
dec
lods
push
push
cld
(bad)
clc
pop
sbb
inc
sub
data16
loope
lds
mov
lods
mov
in
test
xchg
sub
in
scas
mov
(bad)
(bad)
(bad)
stc
(bad)
repz
cmp
call
imul
or
stos
test
jg
sbb
mov
pop
adc
icebp
push
sub
pop
xor
dec
jo
mov
imul
jp
xor
pop
mov
retf
cli
xlat
dec
shl
out
ja
ror
stc
add
xlat
push
scas
xchg
adc
lea
or
idiv
enter
mov
and
sbb
ins
je
aas
les
push
push
test
cwde
inc
jle
test
(bad)
(bad)
jns
ror
cmp
hlt
pop
mov
cmps
popf
stos
adc
add
cld
dec
xor
das
cli
(bad)
jmp
cdq
into
jns
fmul
dec
pop
push
cli
jle
jnp
sub
sub
(bad)
(bad)
push
mov
xchg
push
mov
repz
inc
gs
dec
xchg
outs
jne
mov
call
and
pop
test
gs
(bad)
(bad)
fucomip
jns
(bad)
mov
sbb
mov
daa
repnz
mov
mov
(bad)
jg
(bad)
out
and
loope
or
mov
jle
shl
imul
(bad)
dec
std
ja
fsub
push
jle
hlt
out
push
or
test
mov
jg
loopne
adc
xor
ret
add
hlt
add
pop
lods
test
push
retf
ret
(bad)
(bad)
(bad)
jg
add
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
sub
sbb
mov
inc
pop
mov
sbb
(bad)
(bad)
dec
lods
sbb
popa
fwait
sbb
mov
adc
cwde
call
mov
cmps
adc
xchg
adc
call
adc
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
(bad)
(bad)
out
cmp
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
aad
(bad)
mov
mov
shr
xor
add
and
in
mov
cmps
daa
(bad)
(bad)
call
(bad)
es
dec
dec
and
cdq
and
and
adc
sub
(bad)
jmp
cld
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
idiv
(bad)
(bad)
push
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
cli
(bad)
(bad)
(bad)
jge
or
jl
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
ret
scas
out
jl
outs
cmp
fisub
nop
jmp
ja
pop
push
xor
imul
jg
arpl
popa
sub
push
cmps
xlat
aam
cmc
(bad)
jmp
jecxz
and
mov
dec
xlat
retf
and
mov
dec
(bad)
mov
fisub
dec
sbb
retf
dec
pop
mov
dec
cwde
(bad)
(bad)
(bad)
jmp
inc
push
lock
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
call
push
icebp
push
addr16
jne
ds
mov
fild
loope
or
ror
fidivr
(bad)
(bad)
(bad)
(bad)
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
loope
ret
out
clc
call
and
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fldcw
mov
or
cmp
in
paddsb
hlt
popa
call
in
mov
(bad)
(bad)
(bad)
(bad)
jmp
ss
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
fild
inc
(bad)
stc
sahf
les
pop
scas
jne
dec
bnd
(bad)
(bad)
(bad)
push
test
adc
or
cmc
retf
sub
test
fnstcw
pusha
fdivr
(bad)
(bad)
(bad)
mov
fstp
jecxz
fidiv
mov
(bad)
and
fdiv
dec
in
imul
test
(bad)
call
out
fdiv
shl
add
mov
jo
shl
pop
lds
adc
pushf
xchg
daa
(bad)
(bad)
(bad)
inc
fisubr
jle
sbb
ret
int3
ret
xchg
cmp
rcl
mov
retf
dec
scas
test
pop
lahf
std
(bad)
jg
enter
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
call
inc
nop
ins
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
(bad)
push
clc
sahf
jle
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
adc
repz
mov
pop
mov
mov
sbb
(bad)
(bad)
(bad)
fisttp
(bad)
and
sbb
sbb
out
(bad)
rol
cmps
(bad)
(bad)
(bad)
jmp
pop
sbb
xchg
jb
test
and
into
stos
movs
outs
stc
scas
jmp
jl
sub
(bad)
(bad)
(bad)
dec
outs
lods
adc
sbb
movs
jne
jbe
mov
inc
mov
cmp
(bad)
(bad)
push
mov
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
(bad)
(bad)
(bad)
cmp
mov
mov
adc
test
xchg
pushf
xor
loopne
sub
pop
pop
fidivr
mov
enter
mov
out
(bad)
bound
xor
xlat
cmp
or
outs
(bad)
(bad)
mov
xlat
add
mov
fucom
fbstp
pop
arpl
push
push
sbb
(bad)
(bad)
call
call
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
(bad)
jmp
jg
sub
mov
xchg
rcr
mov
(bad)
and
jp
leave
mov
mov
pop
or
addr16
xchg
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
fnstsw
loopne
iret
(bad)
dec
pop
loop
(bad)
(bad)
jmp
aas
jmp
jecxz
in
fmul
lock
mov
pop
and
sub
sahf
xchg
mov
jg
outs
test
or
(bad)
call
pop
adc
ror
and
lds
sub
mov
(bad)
(bad)
inc
inc
and
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
(bad)
(bad)
jmp
pop
loope
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
pop
lock
imul
ret
ja
imul
setl
call
cli
(bad)
sub
mov
cld
sar
nop
out
push
jle
(bad)
(bad)
(bad)
(bad)
fidiv
sbb
mov
inc
sub
mov
cmp
jg
sar
xchg
(bad)
(bad)
cmp
outs
pop
hlt
cmp
test
das
aas
mov
xchg
pop
in
mov
pusha
push
or
pop
xor
(bad)
(bad)
call
dec
test
cmps
icebp
iret
mov
inc
cs
addr16
daa
jo
jno
dec
mov
or
stc
xor
inc
out
imul
pushf
sub
(bad)
(bad)
(bad)
inc
ss
jb
pop
aaa
retf
pop
loope
scas
dec
push
inc
call
mov
aaa
out
push
inc
cmc
add
inc
clc
inc
daa
popf
and
pop
jle
js
mov
xlat
scas
xor
loopne
mov
in
pop
mov
push
in
pop
inc
pop
mov
in
sbb
bound
and
inc
xchg
push
xor
out
mov
aam
push
stc
mov
in
pop
cmp
(bad)
(bad)
(bad)
cmp
xor
or
cmp
movs
add
sub
scas
(bad)
call
cmc
test
and
mov
mov
sbb
rcr
dec
cs
add
push
movs
not
cmp
and
cli
(bad)
(bad)
dec
sbb
out
ror
ret
push
jp
jmp
fnop
aaa
(bad)
call
mov
xor
xor
(bad)
and
stc
popa
call
sar
add
fsubr
or
sbb
into
sub
mov
xchg
(bad)
loope
(bad)
(bad)
push
fxch
sub
inc
and
jne
jp
adc
scas
dec
jae
(bad)
(bad)
(bad)
call
out
sbb
test
jbe
out
push
into
icebp
mov
inc
lea
dec
das
jns
inc
xchg
push
xor
es
jmp
fdiv
inc
mov
sub
bound
mov
xchg
xchg
cdq
xor
jmp
(bad)
push
es
mov
cld
mov
adc
push
ja
ss
adc
out
mov
add
pop
pop
not
dec
jmp
ds
ins
add
aam
popa
inc
(bad)
mov
stos
jle
(bad)
(bad)
push
test
cmp
es
jl
mov
pop
sbb
mov
repz
in
jmp
jns
adc
imul
mov
jle
cmp
cdq
in
(bad)
call
or
pushw
cmps
fidiv
sub
fisubr
sar
lock
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
push
addr16
cmps
int3
mov
pop
je
fdivr
mov
fiadd
add
inc
add
lock
aas
scas
lock
add
out
mov
(bad)
fdivr
clc
fadd
cld
cmc
cmc
and
cli
jmp
add
out
jg
fidiv
inc
pushf
clc
enter
jge
out
hlt
push
cmc
out
push
(bad)
mov
inc
pxor
add
add
out
mov
fidivr
(bad)
jnp
add
and
scas
and
push
test
out
push
(bad)
cli
int
shr
sti
jl
lock
add
fidivr
das
call
push
xchg
jl
mov
push
clc
stc
out
sub
xor
cmp
out
push
cs
(bad)
outs
les
stc
iret
jl
inc
push
fcom
add
pop
movs
sub
add
repz
mov
add
movs
pusha
add
lods
fisub
add
cmp
push
inc
(bad)
cld
repz
into
push
mov
and
pop
mov
add
lock
aas
int
aas
add
jmp
mov
pop
push
sahf
pop
cs
call
out
loopne
pop
push
lods
push
push
and
ins
test
jg
add
nop
out
nop
pop
aam
push
pusha
cmp
cld
mov
int3
fisub
push
scas
fcom
and
mov
push
add
mov
call
mov
add
lahf
mov
(bad)
sbb
into
cmp
jno
mov
out
add
mov
loope
data16
xor
lock
movq
xchg
cli
call
dec
mov
pop
scas
and
out
add
out
loop
push
cwde
push
lods
fsub
(bad)
pop
xchg
cli
ja
in
addr16
fs
in
push
pusha
jle
push
push
sbb
stc
dec
add
int3
add
push
ss
iret
aas
jle
popa
mov
and
jmp
push
hlt
xor
inc
imul
(bad)
retf
push
sbb
jo
ror
rol
bound
xor
sub
mov
ror
out
add
add
stc
out
add
add
add
int3
add
iret
mov
mov
les
(bad)
adc
(bad)
cdq
pop
lds
out
fs
mov
test
fild
mov
jl
cld
call
add
gs
add
out
sub
adc
(bad)
cld
fidiv
add
lods
fdivr
popf
in
dec
imul
aas
(bad)
inc
push
jnp
out
add
mov
mov
add
repz
jns
sub
xor
js
cmp
movs
cmc
add
push
aam
out
sbb
(bad)
push
mov
cmp
dec
dec
add
fadd
push
push
test
push
movs
inc
test
iret
inc
adc
mov
pop
sub
add
mov
inc
and
adc
dec
jnp
imul
repz
add
push
mov
nop
cmp
repz
mov
push
ret
pop
js
add
or
push
jmp
out
or
cmp
loopne
call
cmp
dec
mov
iret
repz
xor
inc
dec
push
and
cmp
cmp
mov
in
out
sahf
out
clc
sub
pusha
je
test
enter
leave
mov
nop
psrad
or
test
xchg
add
daa
or
ss
pusha
cmp
or
xchg
stos
das
add
pop
sub
daa
add
push
dec
ins
das
cmps
inc
mov
ja
(bad)
out
lock
outs
dec
pop
or
nop
daa
lock
sti
or
bound
mov
std
sub
iret
repz
dec
cli
fs
repz
repz
test
int3
cmps
stc
cmp
imul
cmc
or
hlt
sahf
out
sahf
xor
dec
repnz
icebp
jns
out
mov
lods
out
shl
lock
dec
mov
outs
out
sub
jmp
jmp
je
xchg
add
pop
leave
or
into
ins
mov
mov
sbb
or
(bad)
not
or
mov
or
or
add
repz
push
add
iret
repz
adc
cmp
fs
repz
test
iret
repz
shr
clc
add
out
sahf
cmps
adc
xor
pop
lds
sahf
jo
xchg
jg
mov
leave
adc
aaa
or
push
and
adc
ss
add
add
xlat
jae
push
ss
xor
pop
in
mov
in
lds
jg
stc
cmp
repz
mov
iret
repz
std
(bad)
inc
iret
repz
add
add
cmp
add
cmp
inc
add
xlat
inc
jo
xchg
cmps
push
sbb
int
or
xor
cmp
repz
pop
pop
fild
or
dec
mov
in
add
add
adc
cmps
packuswb
ins
add
push
in
dec
mov
xchg
dec
fisubr
push
fs
push
mov
dec
inc
or
repz
pop
dec
mov
cmp
iret
cwde
nop
aas
fwait
int
popf
aam
es
ret
mov
fwait
in
ins
ss
rcl
cs
inc
(bad)
movs
fdivr
jns
add
(bad)
xor
sbb
sar
pop
enter
mov
loop
xor
imul
adc
fidivr
push
in
ds
test
sahf
out
cmp
in
aas
and
out
push
imul
push
rol
call
jge
out
pop
jl
inc
push
mov
cmp
int3
in
push
add
out
add
dec
sbb
inc
dec
lahf
mov
push
xor
mov
cmp
(bad)
push
jno
xlat
sub
dec
push
retf
add
add
push
shl
add
add
xor
adc
inc
mov
imul
jno
sti
fidivr
cs
add
fdivrp
lahf
out
sahf
out
add
or
sahf
out
sahf
or
pop
or
push
call
loop
call
inc
stc
push
mov
xor
adc
mov
xchg
ret
push
xchg
dec
shr
into
sbb
push
and
leave
inc
xchg
add
and
mov
push
in
push
sbb
jns
out
push
je
movs
jns
jns
enter
push
push
xor
out
sahf
out
cwde
mov
push
ds
jns
out
push
cmp
mov
jl
out
in
adc
iret
repz
dec
jl
rcl
repz
ds
xchg
pusha
test
add
inc
ins
int
jns
mov
cmp
iret
repz
js
and
ja
out
test
push
mov
pop
scas
push
movntq
aaa
pop
push
ins
mov
add
les
add
rcr
addr16
mov
call
aas
fsubp
bound
nop
ss
pusha
mov
push
xchg
mov
xor
add
jns
les
in
add
adc
cmp
repz
push
fs
repz
repz
std
jg
out
pop
sbb
jge
mov
retf
iret
adc
ja
pop
dec
mov
and
mov
jbe
fdivr
dec
adc
fidivr
xchg
mov
out
rcl
in
cli
pop
mov
push
cdq
jno
(bad)
call
ss
(bad)
sbb
fs
xchg
cs
jb
xor
enter
pop
outs
imul
(bad)
dec
push
ret
and
out
movs
dec
jne
inc
test
pusha
ins
add
adc
push
jns
inc
add
pop
cmp
out
mov
or
sub
iret
repz
sahf
out
enter
lods
iret
sar
lock
xor
test
shr
or
sub
sahf
out
inc
push
mov
out
sbb
cmp
test
hlt
sbb
outs
push
push
mov
sahf
out
int
mov
add
sub
repz
repz
fadd
iret
outs
push
cmp
repz
pop
sub
jns
rcl
pushf
mov
jge
shl
pop
ins
mov
jns
mov
cmp
cmp
repz
nop
rcl
jns
cmps
stc
adc
inc
test
clc
sub
dec
push
jl
(bad)
in
adc
sahf
out
sahf
xor
and
jl
(bad)
inc
jo
les
out
call
jo
jns
out
mov
clc
and
iret
repz
inc
je
mov
iret
mov
mov
iret
fadd
sub
fucom
jns
nop
mov
lock
cmps
out
sahf
out
jo
mov
call
sbb
cmp
jl
mov
in
fnsave
push
push
jo
repz
xchg
enter
ficomp
jo
mov
hlt
out
fidivr
(bad)
push
pop
test
int3
in
adc
xor
jo
iret
repz
mov
jns
out
dec
push
cmp
repz
cmp
lods
int3
out
call
test
sahf
ja
in
(bad)
in
ins
lods
loopne
out
test
test
in
or
xor
js
ds
repz
enter
sub
jns
out
pop
je
mov
call
pusha
test
enter
jle
iret
repz
push
jl
int3
lock
cmp
mov
push
call
push
jns
jns
jl
fmul
in
cmps
push
dec
repz
out
jl
fadd
in
iret
repz
and
jo
enter
jns
out
sub
mov
fdivr
aaa
out
push
push
js
stc
cmp
pushf
(bad)
in
adc
xor
out
sahf
pusha
test
cmp
repz
dec
push
out
fmul
repnz
ins
sar
pushf
(bad)
in
adc
cmp
repz
pusha
test
cmp
mov
jl
shl
cmp
cmp
hlt
cmc
push
pop
jl
jns
iret
repz
clc
sbb
inc
pusha
sar
xchg
(bad)
call
repz
pusha
test
out
sahf
sub
je
movs
enter
jns
adc
outs
push
mov
jns
movs
enter
cmp
repz
lods
aam
sub
jge
out
push
js
(bad)
in
sti
sahf
out
out
cld
push
push
js
mov
dec
repz
add
and
pop
stc
cmp
repz
sahf
cmps
cmp
js
mov
shr
add
inc
push
inc
pop
(bad)
jns
out
test
call
xor
sahf
out
pusha
jl
lods
int3
repz
out
or
sbb
pusha
(bad)
cmp
je
mov
hlt
aas
add
out
push
inc
ins
mov
out
add
and
pop
iret
repz
je
lods
int3
call
mov
pop
test
call
lahf
out
sahf
jo
movs
int3
in
or
cmp
repz
inc
sbb
loopne
adc
cmp
jns
out
js
mov
lahf
clc
adc
cmp
mov
aam
or
xor
out
push
ins
test
call
inc
pusha
js
lahf
out
mov
sbb
cmp
repz
pusha
js
shl
ds
fdiv
or
inc
sahf
out
sahf
pop
jo
lods
(bad)
fdivr
repz
adc
sub
pusha
repz
repz
test
in
iret
mov
sahf
push
dec
fs
cmp
pause
(bad)
loopne
or
xchg
cmp
repz
pushf
mov
call
sbb
out
sahf
out
ins
test
fdiv
adc
push
cmp
repz
out
pushf
(bad)
in
adc
repz
sbb
jl
rcr
adc
xor
jns
out
push
repz
out
or
and
ins
out
cmp
mov
sahf
out
sahf
and
xchg
shr
iret
sar
cmp
mov
sahf
out
fadd
sub
adc
sahf
out
(bad)
in
sbb
iret
repz
dec
ins
nop
mov
cld
repz
mov
test
sar
sbb
cmp
sahf
out
sahf
jo
lods
(bad)
loopne
cmp
sar
xor
js
iret
cmp
repz
sbb
sbb
push
cmp
enter
sbb
iret
pop
mov
iret
mov
cwde
mov
push
out
fidivr
jl
iret
sar
hlt
adc
inc
mov
fdivr
sbb
cmp
jns
mov
cmp
shl
je
int3
out
call
fs
out
sahf
test
and
jns
ja
push
push
repz
hlt
sbb
repz
repz
in
es
inc
iret
repz
pop
jo
mov
add
jns
daa
and
fs
sub
jns
stc
sbb
push
mov
adc
out
cmp
push
and
jns
xor
rol
sub
call
sbb
dec
cmp
out
cwde
enter
cmp
repz
sub
sahf
ja
out
in
das
out
js
cmp
out
(bad)
in
or
sub
idiv
rep
nop
mov
hlt
aaa
sahf
out
pop
xor
push
je
shr
iret
sar
pop
jl
les
iret
repz
adc
cmp
cmp
jae
mov
fidiv
xor
mov
jl
sbb
cmp
repz
push
repz
mov
ss
xor
add
push
adc
mov
add
add
or
lock
pusha
pusha
les
push
push
push
xor
push
js
rcr
or
sub
cmps
xor
adc
or
shl
dec
add
in
xor
adc
cmps
and
add
or
sbb
lods
sub
add
push
es
adc
movs
test
rcl
js
inc
sub
loopne
adc
movs
and
mov
pop
pop
push
rcl
or
add
jl
movs
and
push
nop
add
push
rol
pusha
dec
add
cmp
add
adc
mov
add
pop
sub
js
sub
sub
add
adc
adc
mov
mov
out
and
add
add
out
cmp
pop
mov
rol
pop
retf
add
and
shl
sub
inc
xchg
outs
mov
xor
add
cmp
sub
sbb
or
cmp
sub
(bad)
(bad)
(bad)
call
or
ds
push
push
push
inc
cmp
sub
sbb
or
xor
and
adc
add
xor
and
(bad)
(bad)
call
adc
add
adc
das
daa
pop
pop
sysret
sub
xor
cmp
inc
and
pop
das
ud0
(bad)
push
pop
aas
pop
es
cs
ss
ds
and
adc
sub
xor
cmp
and
sub
cmp
push
adc
sbb
add
or
adc
sbb
add
or
adc
sbb
mov
inc
aas
mov
or
adc
adc
cmp
ficomp
sbb
add
sbb
movhps
add
sbb
and
add
adc
push
push
push
or
pop
scas
inc
or
outs
mov
and
xchg
out
push
adc
sbb
add
mov
clts
adc
sbb
rcr
adc
add
xor
and
xor
loopne
sub
daa
cmp
xor
sbb
cli
mov
or
ud2
or
or
or
ins
sti
lods
fst
add
sbb
or
das
js
dec
or
pop
inc
add
add
pop
add
int3
dec
or
push
or
push
and
push
sahf
or
or
es
test
or
pop
or
mov
or
bswap
fisub
add
jo
push
or
mov
jp
sub
pop
xor
fsub
add
mov
or
mov
fld
femms
add
ins
push
jno
and
sub
packssdw
add
pop
ss
mov
pusha
add
dec
xchg
pop
pop
pushf
aam
mov
int3
pop
pop
dec
or
inc
aam
int
sub
jl
jp
mov
push
data16
and
xchg
into
cli
sub
or
jle
add
cld
push
int
add
push
push
inc
ins
imul
(bad)
mov
add
xor
jl
or
int3
push
sub
bound
repz
sbb
jle
paddsb
pop
add
mov
mov
add
cmp
int3
or
scas
pop
fiadd
add
popf
loopne
mov
jb
mov
inc
(bad)
out
fldcw
or
add
sbb
loopne
pop
or
push
cmps
xchg
inc
sub
or
mov
sbb
xor
add
or
add
je
jmp
ins
loop
or
cmovs
xor
inc
jle
aad
ins
fmul
inc
adc
cmp
lea
fimul
sbb
push
inc
loopne
mov
je
sahf
dec
test
imul
cmp
movs
sbb
lock
call
dec
push
(bad)
pop
add
dec
inc
xchg
fistp
jecxz
cmp
fild
push
mov
mov
xchg
add
imul
add
jecxz
lahf
out
lock
pop
aam
inc
or
or
arpl
push
inc
mov
or
aaa
push
and
push
xlat
pop
add
push
pushf
mov
mov
push
push
push
cmp
imul
pop
lock
in
ds
push
daa
mov
sbb
imul
xor
dec
add
imul
test
movs
test
adc
data16
jle
bound
out
add
jnp
cmp
mov
or
pinsrw
imul
cwde
icebp
ficomp
cmps
rcr
pop
fdivr
mov
sub
inc
push
cmps
test
out
mov
cld
pop
js
lock
sub
popf
or
jbe
in
add
out
adc
pop
inc
pop
fiadd
ficom
movs
inc
add
loope
fbld
(bad)
loopne
sbb
add
cmp
mov
push
int3
int
test
push
mov
les
fs
jnp
out
push
and
ror
push
xchg
xchg
enter
ds
xchg
push
mov
sahf
in
ds
mov
ds
adc
jle
xchg
out
lods
mov
pusha
mov
faddp
xchg
ror
cs
xchg
js
rcl
push
hlt
push
and
callw
fiadd
push
ins
(bad)
iret
jnp
mov
sub
cmp
out
mov
imul
mov
or
sbb
out
cmp
clc
je
rcr
int
fs
(bad)
popf
push
ss
out
mov
int3
sahf
test
adc
mov
pop
add
push
add
sbb
sub
cmp
jle
dec
mov
pop
push
addr16
(bad)
push
sbb
inc
sub
(bad)
mov
xchg
ds
inc
mov
pop
(bad)
jo
dec
ss
pop
daa
fistp
push
into
int3
pop
mov
pop
mov
test
or
cmp
or
inc
and
fsubp
jnp
hlt
cmp
pusha
cs
or
test
sahf
test
(bad)
mov
or
call
inc
mov
add
mov
aaa
push
jo
adc
mov
lock
jnp
scas
fidivr
xchg
ret
repz
sahf
shl
cmp
mov
mov
sar
shl
push
ror
sbb
es
repz
nop
(bad)
fimul
test
pop
(bad)
mov
mov
sub
sbb
iret
call
jg
sbb
sub
xchg
sahf
inc
js
cmp
mov
pop
ss
out
imul
push
int3
mov
cwde
loopne
js
(bad)
push
and
mov
pop
sar
fisubr
ins
fsubrp
dec
sbb
movs
pop
push
mov
push
lock
fs
(bad)
xor
mov
(bad)
rcr
cbw
scas
shl
(bad)
je
dec
ds
jae
cmps
xchg
dec
add
push
sbb
jo
xor
sti
push
shl
inc
iret
mov
push
lahf
jns
ja
outs
int3
jle
outs
xor
imul
push
ds
push
dec
imul
xchg
mov
or
mov
out
mov
or
jbe
ret
and
js
mov
mov
sub
sahf
cs
push
hlt
es
jbe
out
mov
adc
inc
sahf
mov
xchg
fdiv
mov
out
scas
xor
idiv
mov
push
inc
mov
stos
or
in
(bad)
call
data16
mov
jo
push
cs
pushf
push
out
loopne
dec
add
les
mov
dec
jo
sar
int
push
daa
jo
xor
punpckhwd
mov
pop
adc
push
es
nop
xchg
mov
fist
jns
clc
or
outs
add
shl
bts
dec
pop
lods
imul
inc
dec
sbb
test
fidiv
sub
sbb
outs
push
(bad)
rcr
sar
fs
push
sub
mov
jnp
or
jbe
rcr
push
or
loope
push
fidivr
or
add
lods
daa
sbb
das
div
xchg
pop
pop
cs
out
loopne
push
mov
(bad)
mov
sub
js
sbb
lock
clc
iret
ret
cmp
ds
xchg
push
rcr
iret
jecxz
popf
pushf
push
aam
dec
addr16
push
outs
inc
cs
into
mov
mov
jle
out
cld
dec
or
inc
out
loop
loopne
pusha
xor
cld
sahf
xchg
dec
add
je
popf
or
xor
sar
sub
pop
scas
sbb
push
ins
push
push
xor
rol
cs
jbe
idiv
mov
push
and
mov
pop
fadd
scas
ja
test
out
enter
js
push
pop
out
mov
fidivr
js
(bad)
enter
cwde
dec
add
xchg
dec
shl
clc
cs
out
fmulp
add
jl
repz
lock
mov
data16
jae
aad
jbe
mov
push
pop
(bad)
popf
lock
push
enter
push
(bad)
ret
aaa
jno
out
xor
out
aam
cmp
lahf
and
cmp
callw
(bad)
jp
lds
sub
hlt
push
cli
es
push
loopne
pop
daa
jbe
lock
jmp
cs
jnp
cmp
cld
ss
cld
push
call
out
div
loopne
aaa
outs
dec
cmp
pop
cmp
mov
(bad)
(bad)
(bad)
cmp
jmp
test
jne
repz
push
fdivr
rcl
mov
cmps
dec
push
enter
in
ja
or
adc
ins
out
fs
js
push
mov
outs
and
mov
fidiv
scas
in
dec
shl
imul
in
jo
push
mov
out
mov
cs
xchg
xor
int3
push
cmps
sub
jge
inc
or
fdivr
dec
mov
into
clc
or
test
rcl
mov
cmp
adc
lods
cs
fld
sbb
mov
or
add
test
add
nop
push
add
add
xor
push
add
mov
inc
push
mov
adc
inc
iret
and
mov
adc
nop
inc
add
add
mov
out
jns
add
push
mov
add
pop
inc
sbb
adc
out
or
pop
repz
sti
cmps
mov
push
pop
dec
add
out
mov
sbb
push
dec
scas
dec
pop
mov
cmp
push
inc
mov
jnp
inc
sub
or
out
imul
inc
cmp
aas
aaa
nop
fnstsw
inc
shr
inc
xchg
push
add
add
out
add
pop
mov
push
pop
push
neg
inc
xor
xchg
or
fsubrp
out
pusha
iret
or
call
inc
push
inc
lock
in
xor
or
mov
inc
fmul
push
ins
cmp
in
inc
or
pop
push
dec
cmps
or
or
lock
aas
push
or
jae
push
ror
pushf
mov
push
into
xor
xchg
pusha
push
dec
or
arpl
mov
pop
xchg
sbb
dec
xor
add
and
imul
and
into
add
inc
add
out
repnz
add
or
int
inc
mov
mov
mov
push
gs
mov
push
inc
cld
jg
clc
jae
jl
aas
push
pop
jmp
rol
jnp
retf
aas
pop
or
push
aas
add
and
(bad)
jg
add
sbb
add
or
prefetch
push
mov
call
add
xchg
jg
addr16
sahf
data16
push
out
ficomp
in
xor
out
ja
add
loopne
fs
xor
lock
sbb
pop
push
(bad)
aas
fcmovnu
cmp
xchg
add
pop
lock
scas
repz
push
pop
std
cmp
push
fld
ins
jl
cmp
mov
inc
add
jle
shl
out
pop
inc
add
jo
pop
sbb
pusha
iret
rol
inc
cmp
or
jae
cmp
dec
pop
aas
cmp
sbb
jg
push
add
movups
(bad)
repz
aas
into
push
add
sub
dec
jno
addr16
loopne
call
add
add
fnstsw
aas
dec
pop
outs
push
sub
iret
pop
std
fs
cmp
lock
aas
rcr
(bad)
(bad)
push
dec
add
push
inc
jmp
outs
clc
pop
adc
leave
push
and
data16
jmp
sbb
out
dec
test
inc
nop
or
mov
aas
pop
jle
addr16
cmps
push
(bad)
pop
in
pop
mov
les
test
cmp
jb
cs
adc
add
cld
pop
pop
inc
ss
cmp
fsubr
repnz
mov
mov
aaa
xchg
and
ins
js
std
or
jle
or
push
mov
addr16
add
in
inc
add
(bad)
pusha
xor
sbb
push
push
sbb
dec
inc
cmc
ja
cmc
fwait
or
shl
cmp
clc
dec
sbb
cmp
sbb
stc
int
pop
or
test
loopne
loope
cmp
xchg
adc
xchg
and
add
push
jb
or
sahf
adc
add
and
add
into
inc
add
in
inc
push
jns
mov
cmp
sub
jle
sub
sbb
cmp
(bad)
xor
mov
and
xor
fisub
adc
and
jae
fidiv
inc
cmp
clc
dec
push
dec
push
jae
int
mov
push
push
daa
inc
outs
fucom
cmp
daa
xchg
mov
ss
(bad)
sbb
cdq
sar
mov
jge
stc
push
(bad)
(bad)
ja
push
daa
ret
mov
sbb
or
add
mov
lahf
adc
cmp
xor
cmp
inc
and
cmp
xor
and
fiadd
mov
daa
in
jns
dec
sub
repz
xor
mov
repnz
dec
sub
clc
xor
in
cmp
pop
push
es
mov
xchg
push
int3
push
and
jbe
mov
and
mov
cmp
pop
push
(bad)
cmp
and
fs
fs
xlat
push
pop
(bad)
mov
retf
push
and
xor
loope
mov
or
adc
xsavec
push
lds
inc
push
addr16
mov
sub
add
push
fdivr
add
test
or
push
or
dec
jmp
mov
xor
inc
aad
outs
lahf
xchg
or
pop
daa
mov
mov
in
jae
and
push
inc
dec
nop
mov
(bad)
(bad)
(bad)
clc
add
daa
fistp
mov
daa
or
arpl
dec
pushf
es
test
mov
fild
lock
xor
inc
arpl
daa
ds
nop
inc
shl
xor
arpl
lea
daa
dec
dec
jae
lahf
cmp
inc
mov
pop
dec
or
fs
dec
imul
fwait
daa
push
in
outs
mov
push
aas
daa
in
push
pop
jbe
retf
jmp
cmp
es
daa
dec
add
jmp
addr16
xor
in
repz
mov
push
sub
jecxz
test
adc
sbb
push
xor
in
inc
xchg
sbb
or
stos
movs
out
sub
inc
out
fdivp
or
daa
xor
pop
in
mov
arpl
das
es
ss
mov
daa
push
inc
sub
pop
cmp
push
push
xor
ror
repz
sub
je
add
outs
data16
inc
push
jb
cdq
mov
je
push
inc
mov
ffreep
outs
je
stos
inc
aas
call
inc
fadd
stos
sub
push
ret
cmp
fmul
push
shl
movs
pop
xor
dec
dec
push
jns
xchg
daa
mov
xchg
stos
xor
ja
test
inc
jmp
js
xchg
jmp
jne
adc
cmps
fsubr
or
sbb
push
cmp
sbb
cmp
(bad)
xchg
sbb
and
inc
daa
adc
cmp
sbb
jmp
mov
mov
and
clc
or
sbb
pop
jbe
mov
fcom
daa
dec
xor
dec
xor
dec
daa
dec
daa
addr16
dec
daa
clc
dec
or
xor
cmp
cmp
adc
nop
inc
jno
ror
ret
sbb
(bad)
mov
mov
xor
cdq
cmp
push
mov
mov
loope
imul
daa
repz
xor
enter
cmp
ficom
sbb
inc
xor
(bad)
sbb
sbb
push
daa
xor
daa
rol
(bad)
push
mov
lahf
pop
cld
jne
adc
sub
inc
pushf
out
sbb
and
cmp
push
mov
call
push
push
push
sub
fadd
cmp
aas
ss
mov
imul
cwde
and
jbe
stos
sub
aaa
fs
ins
(bad)
(bad)
xlat
mov
outs
test
scas
push
imul
aaa
mov
ffree
outs
out
pusha
xor
push
and
out
jmp
xchg
add
mov
pusha
mov
aas
add
push
aad
aas
adc
or
adc
add
or
retf
emms
push
jo
pop
push
pop
(bad)
mov
add
pop
push
xor
jg
inc
sbb
js
in
xchg
ror
add
sti
or
mov
pop
(bad)
shl
pusha
in
mov
add
mov
int3
ud2
jnp
loopne
in
push
cmp
das
xor
jnp
add
mov
and
lock
jb
pop
pop
sbb
(bad)
movq
pop
sub
jo
div
pop
(bad)
cwde
push
shl
out
add
aas
mov
xchg
rcr
and
ins
aas
pop
mov
and
repz
pop
pop
aas
mov
popa
and
pop
lock
and
sub
pop
cld
int3
iret
(bad)
js
inc
push
pop
or
mov
loopne
jo
mov
in
mov
js
aas
jo
add
movs
mov
repnz
or
cmpxchg
lock
xor
dec
dec
and
jo
fs
mov
and
adc
adc
mov
mov
or
xor
out
xor
mov
jb
in
add
pop
mov
lock
out
fld
out
xchg
fwait
cmp
in
inc
(bad)
xor
or
fbstp
push
inc
outs
sbb
sysret
add
mov
lidtd
push
add
add
dec
push
adc
outs
mov
test
add
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
test
mov
inc
mov
xchg
inc
fcmovb
add
es
or
pop
dec
pop
adc
mov
add
lods
dec
inc
dec
add
(bad)
inc
push
cmps
push
add
ret
shl
jbe
and
outs
push
(bad)
popa
sub
fcom
mov
add
pop
ss
and
inc
or
and
inc
mov
or
xor
test
add
sub
xor
mov
add
jno
mov
push
imul
jmp
les
nop
packssdw
mov
pop
lahf
jae
sbb
add
das
mov
adc
dec
outs
in
dec
xchg
jne
adc
push
sub
in
idiv
push
add
jb
mov
in
or
dec
and
js
inc
dec
or
aaa
das
cmp
push
sbb
add
pop
bound
inc
shl
rcl
adc
jg
les
mov
xchg
xchg
outs
push
sbb
ficom
mov
xor
js
pop
pop
lods
shl
inc
outs
dec
dec
and
ror
mov
lods
ret
call
xor
xor
or
mov
mov
ja
ja
dec
or
ins
push
jne
cvtdq2ps
rol
push
mov
les
push
jg
adc
sbb
jns
out
push
and
cmp
adc
or
pop
and
jb
movs
ins
mov
les
or
add
outs
add
jae
push
scas
inc
push
adc
push
mov
pop
ins
pusha
xchg
mov
adc
or
pop
lds
mov
sub
and
rol
pop
cs
push
push
or
pop
inc
jmp
or
mov
and
repz
daa
dec
add
sub
fistp
lds
pop
inc
aaa
add
pop
mov
imul
scas
not
and
imul
daa
stos
xchg
and
xor
jg
pop
cwde
movs
inc
xchg
inc
outs
aas
fmul
inc
or
mov
daa
inc
xchg
mov
and
mov
inc
shr
ror
inc
test
bound
jae
inc
stos
xchg
adc
or
movzx
xchg
bound
ins
pusha
jnp
sub
jnp
adc
sbb
dec
out
add
mov
popa
sub
jmp
push
inc
sbb
lock
mov
push
dec
mov
or
inc
lods
adc
ret
cmp
fcmove
and
fs
inc
adc
ins
cwde
cmp
push
xor
loop
mov
ret
je
aas
mov
outs
push
(bad)
dec
inc
fst
inc
int
dec
daa
(bad)
jle
movs
ins
loopne
ins
dec
inc
add
call
push
xor
fstp
cmp
sub
dec
fcom
arpl
push
or
jecxz
ss
scas
jnp
xchg
adc
add
ret
dec
jo
mov
mov
js
popa
sbb
test
xchg
je
push
call
dec
je
mov
add
mov
(bad)
mov
ins
ret
popa
aaa
inc
test
add
jae
adc
sub
xchg
and
fild
pop
loopne
rcl
push
jae
imul
int
cmp
sbb
adc
xchg
ja
fld
jne
jmp
out
sbb
add
and
cmp
or
adc
and
inc
daa
xchg
ror
or
add
(bad)
fst
jae
dec
push
push
mov
sbb
inc
data16
and
push
mov
pop
mov
mov
fld
adc
or
mov
sbb
test
adc
arpl
out
inc
dec
inc
and
outs
mov
jecxz
inc
mul
(bad)
mov
mov
mov
xchg
nop
sub
add
popa
dec
pop
xchg
dec
bound
push
push
sub
inc
mov
push
ret
push
push
push
add
pop
or
dec
js
xor
mov
sbb
inc
imul
jmp
or
pop
jnp
add
outs
rol
mov
adc
cmova
jbe
or
and
popa
cmp
pop
test
pop
packssdw
or
add
add
nop
call
mov
cmp
dec
cmps
jnp
imul
retf
imul
xchg
jp
(bad)
mov
adc
mov
(bad)
jo
lahf
push
repz
add
inc
or
pop
mov
cmp
cmps
outs
add
mov
jg
lea
mov
bound
popa
xlat
lods
sbb
retf
mov
mov
pop
sbb
mov
stos
nop
push
mov
inc
and
xor
jnp
scas
popa
add
(bad)
out
lods
lods
fwait
sti
retf
push
sub
jae
adc
mov
mov
pop
xchg
fist
xor
sbb
xor
iret
lods
sbb
push
ret
push
rcr
or
pop
arpl
xor
adc
imul
lahf
or
adc
pusha
jle
loop
or
xchg
or
add
or
rol
popf
das
mov
nop
or
add
xchg
mov
adc
push
sbb
pop
or
imul
rcr
inc
xor
mov
jae
shr
fild
mov
(bad)
es
mov
mov
stos
scas
ja
aaa
adc
and
jbe
or
jnp
iret
sub
fist
add
mov
jb
call
inc
mov
adc
push
idiv
test
sub
jbe
and
push
dec
sbb
(bad)
ins
push
inc
xchg
sbb
adc
cmp
stos
jo
aaa
pop
cmps
or
and
movs
jmp
aaa
ja
xor
mov
add
push
dec
jmp
inc
mov
stos
adc
outs
fcmovb
adc
and
rol
jno
pop
and
aaa
ins
(bad)
or
mov
dec
sbb
dec
and
sbb
call
sbb
push
fdiv
cmps
adc
fcmovb
sbb
out
dec
lds
push
fisubr
mov
lahf
pop
sub
add
lea
fcmovb
pop
jmp
scas
mov
mov
ins
inc
and
fbld
adc
shl
mov
sbb
push
ja
push
and
stos
mov
xchg
fidiv
jo
cmps
ss
mov
sbb
add
ins
sbb
out
fild
push
dec
mov
fstp
sbb
test
(bad)
out
push
ins
sbb
(bad)
xchg
data16
and
jg
dec
inc
mov
adc
fild
push
xor
data16
inc
sbb
jo
inc
sub
adc
in
leave
mov
push
mov
push
sbb
mov
push
add
js
pusha
jne
cs
xchg
sbb
push
adc
mov
frstor
mov
repz
lods
or
pop
fisubr
(bad)
xor
pop
pusha
adc
lock
rol
out
or
call
sbb
pop
jle
mov
jae
loopne
mov
iret
push
popa
mov
push
aaa
jmp
loope
aam
fild
add
xor
les
push
add
sbb
adc
jp
(bad)
fcomp
adc
and
add
iret
test
fcmovb
and
xchg
es
stos
or
ret
mov
or
jg
ret
mov
ins
or
xor
push
mov
jnp
mov
jg
or
jae
scas
adc
xchg
and
add
jo
xchg
push
test
test
mov
add
pop
sub
add
add
fbstp
outs
retf
aaa
or
inc
sub
pusha
jnp
enter
mov
jae
das
dec
xchg
mov
xchg
xchg
mov
(bad)
shl
lods
inc
pop
push
mov
gs
test
mov
mov
and
adc
cmps
jmp
xchg
and
fisttp
cmp
xor
adc
jae
pop
jo
mov
ret
adc
fmul
data16
dec
aas
lods
cmps
push
adc
scas
(bad)
je
inc
push
das
dec
arpl
xor
pusha
sub
dec
inc
aas
mov
mov
sub
(bad)
cld
rcl
es
add
jae
shr
xor
fimul
adc
or
hlt
push
daa
div
bound
(bad)
push
and
das
and
xchg
and
inc
cmp
inc
adc
sbb
add
pop
out
and
scas
or
mov
aas
shl
fs
or
and
mov
inc
aas
fdivr
rol
out
sbb
push
jmp
dec
out
fwait
ins
test
add
in
mov
add
add
cmp
xchg
sub
outs
adc
or
scas
bound
rcl
dec
lahf
out
ret
xchg
jb
dec
inc
adc
add
push
shr
outs
and
ja
jmp
add
adc
pop
jg
test
mov
xchg
or
pop
xor
aaa
or
ror
xor
push
pop
adc
enter
scas
stos
push
mov
add
pop
inc
pop
adc
les
(bad)
or
push
ret
xlat
pusha
adc
jmp
push
xchg
or
mov
or
adc
sbb
shr
dec
add
daa
inc
js
or
das
ja
push
lds
cmp
dec
in
jne
arpl
mov
mov
pop
mov
scas
xor
bound
jne
fimul
scas
jp
mov
jecxz
bound
mov
adc
push
mov
sub
fwait
and
push
js
push
sbb
and
inc
test
pop
repz
sub
push
mov
xchg
cmp
arpl
or
add
movs
pusha
leave
add
aam
aas
mov
or
jg
pop
call
dec
jmp
mov
pop
daa
push
iret
pop
bound
scas
or
mov
adc
mov
imul
add
aaa
mov
inc
add
jmp
sti
loop
cwde
je
xor
dec
sti
dec
sti
pusha
rcl
push
fadd
xchg
inc
xchg
sub
fisttp
inc
dec
add
pop
rcr
fild
das
stos
push
ret
mov
mov
test
mov
sub
das
xchg
pop
mov
addr16
or
fild
fcomp
xor
loope
sbb
pop
push
push
and
or
les
fld
pop
pop
fimul
bts
sti
shl
xchg
cs
pop
mov
or
es
arpl
sub
rol
mov
movs
pop
or
test
xchg
mov
aad
jmp
sub
mov
add
lods
leave
pop
adc
mov
test
sub
jns
ss
mov
or
addr16
add
jmp
add
outs
jb
fwait
dec
mov
push
daa
movaps
test
mov
xlat
shr
or
xchg
mov
add
xor
mov
ja
xor
or
sbb
inc
mov
or
ins
(bad)
xchg
dec
or
mov
fsubr
shr
push
xor
(bad)
(bad)
js
ror
sub
shl
(bad)
mov
mov
in
jmp
add
push
sbb
sub
inc
ins
push
add
sub
push
movs
add
bound
jmp
pop
mov
movs
jo
mov
adc
sbb
ret
rol
and
adc
sbb
pop
pop
pop
outs
into
dec
mov
arpl
jcxz
push
imul
push
or
pop
das
ja
and
inc
add
aam
dec
fsub
add
inc
and
aas
inc
or
cmps
punpckhbw
popa
or
fcmovb
cmp
setg
test
pop
fsubr
aaa
rcl
or
aaa
mov
rcl
(bad)
pop
pop
inc
pop
mov
dec
arpl
fs
imul
jae
pop
dec
daa
inc
es
movs
or
movs
fist
sbb
scas
xchg
dec
and
fidiv
mov
or
ja
cmovbe
mov
or
or
arpl
je
jbe
js
mov
mov
inc
call
add
fld
ja
push
dec
push
push
adc
ficomp
mov
scas
ins
in
frstor
mov
jge
mov
pop
add
ja
dec
fs
fwait
pop
add
mov
pop
out
sub
dec
jg
ud2
outs
and
jmp
pop
pop
xor
sbb
xor
je
retf
add
or
push
outs
cmps
lock
inc
and
xchg
out
cwde
sub
pop
sbb
add
or
es
sub
inc
push
add
jp
outs
add
mov
mov
js
inc
aas
push
(bad)
lods
fidiv
inc
mov
cmp
adc
popa
xchg
stos
xor
daa
call
inc
sub
jmp
sub
sub
add
sub
pop
jmp
jmp
outs
cmps
stos
pop
mov
jecxz
adc
push
lds
push
shr
xchg
lahf
adc
or
outs
jp
ret
xchg
or
popa
and
xor
jg
and
stos
mov
jnp
add
and
push
loop
(bad)
(bad)
stc
mov
dec
push
aaa
imul
adc
ja
mov
xchg
push
adc
mov
mov
(bad)
out
sbb
retf
push
mov
inc
arpl
inc
sub
or
or
mov
fisttp
jbe
out
and
or
and
aaa
repnz
adc
pop
xchg
enter
mov
test
imul
lock
pop
xchg
ficom
mov
adc
mov
dec
adc
stos
push
adc
imul
out
adc
and
ins
mov
mov
aaa
fwait
or
xchg
rcl
mov
push
(bad)
ret
jae
mov
inc
xlat
add
inc
xchg
xor
push
adc
push
es
imul
and
inc
or
pop
jnp
push
jge
cmp
out
aad
inc
pop
jg
inc
adc
or
xchg
movs
mov
packsswb
or
inc
jg
sahf
adc
xor
cmp
dec
call
shr
push
and
ja
adc
popa
ret
sub
inc
mov
or
call
pop
push
mov
xchg
jmp
dec
(bad)
fdivr
shr
cmps
sbb
or
mov
adc
adc
and
sti
dec
add
movs
pusha
adc
cs
out
sbb
xchg
(bad)
push
xchg
jno
shl
jne
mov
das
and
xor
mov
out
outs
adc
test
dec
aaa
adc
mov
adc
mov
add
loope
cmp
data16
or
dec
aaa
xlat
addr16
dec
xchg
xor
and
rol
or
jo
mov
arpl
fwait
and
cmp
add
push
push
inc
jae
and
loope
fstp
pop
lods
or
jp
sub
ins
dec
mov
js
addr16
(bad)
test
loop
retf
shr
sbb
cmps
fs
and
sub
sbb
or
add
add
(bad)
pop
pop
mov
arpl
arpl
addr16
and
retf
stos
ret
pop
sbb
retf
adc
push
pusha
test
(bad)
addr16
sub
adc
in
shr
add
push
sbb
imul
push
aas
stos
add
mov
cmp
mov
bound
test
push
mov
sbb
test
adc
(bad)
ficom
ja
ja
push
test
sub
repz
mov
pop
adc
xlat
pop
aaa
sbb
xchg
dec
mov
push
adc
xor
test
xchg
adc
adc
sub
ret
cmps
mov
shl
mov
mov
pop
pop
push
aam
sbb
addr16
dec
pop
xchg
xor
mov
push
rcl
daa
mov
ins
and
ja
les
xchg
dec
out
and
sbb
inc
adc
adc
(bad)
xor
sbb
dec
aas
mov
or
inc
inc
pop
and
push
mov
sbb
inc
lahf
adc
or
adc
and
sub
js
cs
retf
retf
js
stos
fwait
xor
push
inc
ror
jne
shr
rol
and
mov
push
and
addr16
jmp
push
cmps
push
sub
mov
mov
(bad)
cmp
push
adc
mov
mov
fsubr
(bad)
aad
inc
push
mov
jecxz
add
(bad)
imul
jo
dec
fwait
sub
pop
rol
and
cmp
or
shl
jae
movs
test
xor
xchg
cmp
retf
popa
mov
rol
jg
sbb
mov
push
sub
push
push
sub
jmp
push
mov
add
(bad)
jnp
and
ret
mov
pop
push
mov
xor
push
popa
cmps
push
ins
lods
arpl
es
enter
daa
nop
inc
pop
and
add
pop
xor
(bad)
inc
adc
lea
mov
callw
inc
cmps
sub
daa
inc
lods
inc
pop
popa
aas
pop
sbb
movs
repz
or
dec
nop
inc
fisttp
sub
cmp
arpl
or
and
ror
sub
pop
ins
nop
xacquire
(bad)
adc
(bad)
xchg
sbb
xor
add
adc
ret
or
mov
jp
shl
or
push
gs
stos
scas
bswap
fstp
push
add
mov
scas
in
push
outs
pop
push
jnp
pop
cwde
or
ret
or
push
add
stos
or
xchg
nop
xchg
push
ret
sbb
neg
into
dec
mov
jmp
fiadd
xlat
xor
mov
mov
movs
xor
cmp
movs
xor
add
outs
add
add
adc
push
pop
(bad)
push
push
sti
ja
(bad)
jmp
pop
or
adc
add
cwde
stos
adc
add
cdq
sub
rol
push
ret
push
xor
jg
add
push
popf
aaa
(bad)
(bad)
jae
push
inc
push
and
adc
and
stos
cmp
sub
adc
adc
xor
push
out
fisttp
adc
adc
jecxz
bound
and
xor
sub
push
iret
inc
call
fwait
xchg
retf
jne
daa
daa
dec
stos
lea
jg
lods
pusha
sbb
xor
or
rcr
mov
sbb
xlat
dec
stos
dec
jmp
xor
mov
push
cmp
mov
push
and
xchg
(bad)
stos
sbb
add
mov
pop
dec
fisttp
push
push
inc
in
add
out
cmps
push
test
cmp
sbb
pop
cmps
sbb
rol
mov
add
stos
fadd
and
push
sub
sub
xor
jnp
je
and
mov
mov
cmps
arpl
aam
mov
fadd
push
test
pop
mov
adc
and
jmp
pusha
sbb
js
movs
aad
inc
add
inc
cmp
stos
cmp
mov
mov
pop
lahf
dec
stos
push
test
cmp
dec
mov
shr
mov
or
adc
sbb
dec
sbb
mov
or
ror
and
mov
pop
dec
inc
and
js
dec
shr
add
je
out
bound
sub
bsf
xchg
pop
xchg
jo
pop
adc
inc
add
inc
call
lods
push
pop
lds
add
xor
push
shl
das
adc
push
sbb
adc
outs
addr16
stos
mov
ret
add
call
pop
add
sub
add
inc
into
push
xchg
push
jo
daa
pop
add
daa
or
outs
or
das
lods
shr
outs
push
lahf
mov
adc
push
xlat
adc
ss
sti
mov
mov
shr
or
push
xchg
outs
inc
jge
test
aaa
arpl
jo
adc
(bad)
push
pop
sahf
pop
mov
or
pop
xor
rol
dec
push
sti
pop
or
add
arpl
mov
fs
fldcw
sbb
inc
push
sbb
out
call
mov
inc
inc
pusha
mov
fsubr
lods
mov
shr
dec
inc
or
push
adc
xor
int
add
jo
add
(bad)
jmp
add
add
add
add
add
add
add
add
add
push
add
clc
push
add
sbb
add
add
add
add
xchg
cs
sub
adc
add
add
add
dec
(bad)
out
std
lock
add
movhlps
inc
cs
jo
add
mov
add
add
add
add
(bad)
mov
add
add
add
add
pop
jbe
mov
add
pusha
add
add
inc
and
add
add
add
add
add
add
bound
add
cmp
add
and
add
and
inc
and
stos
mov
add
inc
test
sub
not
push
push
adc
rol
(bad)
out
cmp
add
loope
not
pop
add
adc
cmp
rol
sahf
sub
inc
data16
into
xchg
out
fidiv
jae
sub
push
mov
cmps
xor
inc
into
sub
add
mov
inc
add
add
xchg
cli
sub
jo
mov
mov
xor
add
sub
mul
add
mov
arpl
add
pop
test
xchg
and
add
adc
add
pusha
add
xchg
pop
add
add
sti
iret
mov
push
adc
and
xor
inc
push
pop
push
push
pusha
push
push
jo
add
push
ds
std
xor
push
rcr
mov
ja
pop
lock
add
adc
push
pop
xor
inc
pop
sbb
js
push
pop
out
mov
(bad)
jg
add
pop
rol
pop
loopne
(bad)
mov
or
or
inc
or
out
std
xchg
sbb
jo
or
add
sub
add
ror
xor
or
arpl
add
mov
add
adc
xchg
jge
or
or
inc
sbb
xor
sbb
xor
out
inc
or
pusha
jo
cmps
or
mov
or
add
or
mov
ror
loopne
mov
push
add
xor
push
and
inc
or
pusha
or
or
or
dec
(bad)
ja
or
pop
inc
mov
mov
dec
repz
or
jmp
sbb
add
sbb
mov
or
or
int
ret
inc
or
pusha
or
jge
pop
imul
add
nop
or
mov
ss
push
shr
shl
loopne
(bad)
fucomip
jnp
add
or
push
and
add
push
or
or
or
jecxz
idiv
or
or
or
or
or
or
ds
or
xor
push
jbe
pusha
or
or
or
loopne
lock
jg
mov
and
xor
inc
push
xor
push
aas
out
jge
dec
pusha
pop
add
sub
sub
nop
lods
sti
pop
in
add
or
rcr
cmp
push
sbb
add
push
or
je
push
sbb
loopne
lock
(bad)
push
and
xor
inc
(bad)
cpuid
pusha
sbb
push
sysenter
inc
mov
mov
mov
ror
xchg
je
push
sub
loopne
mov
lds
not
into
invd
push
push
aaa
in
adc
and
xor
adc
adc
inc
xchg
add
lahf
push
adc
add
and
push
pslld
idiv
adc
jmp
rcl
adc
adc
cmp
je
sahf
cld
add
lahf
out
mov
jns
cmpeqps
adc
adc
mov
rcl
aas
adc
stos
xlat
xor
(bad)
jg
adc
(bad)
arpl
out
dec
xor
scas
add
adc
call
pusha
add
sub
xchg
mov
fiadd
mov
lahf
std
retf
add
add
std
xchg
or
adc
dec
adc
adc
mov
pop
out
jnp
push
std
xchg
lahf
adc
rol
adc
push
adc
jo
jmp
jl
xchg
adc
mov
xchg
or
fist
rcl
loopne
adc
adc
out
sbb
push
add
jmp
or
sti
and
xor
(bad)
cld
xor
jg
inc
adc
and
ret
ret
ficom
rcl
adc
(bad)
lock
retf
cmps
into
pusha
or
pop
mov
lods
rcr
xchg
adc
fiadd
mov
cld
aas
mov
add
or
adc
repnz
adc
(bad)
pop
adc
pop
call
adc
pusha
xchg
xor
mov
repz
mov
fiadd
sub
adc
adc
or
or
loopne
adc
adc
or
add
or
adc
push
adc
dec
cmp
add
stc
(bad)
mov
adc
ins
adc
mov
fnstsw
rcl
mov
sbb
mov
xchg
test
inc
adc
add
mov
add
outs
inc
ins
add
fild
inc
enter
jb
nop
add
nop
popa
adc
sbb
movs
sbb
in
inc
add
or
out
or
leave
mov
retf
cmp
pop
add
in
sbb
pop
add
cmp
or
mov
or
ficom
(bad)
cmp
add
loope
stos
sbb
addr16
pop
sbb
aaa
sbb
or
xchg
sub
enter
adc
add
add
or
gs
nop
adc
shr
sub
add
call
imul
add
neg
dec
and
jg
add
sub
pushf
mov
add
clts
push
int3
xchg
iretw
mov
jg
sbb
sbb
rol
aad
fiadd
adc
pop
add
add
inc
ret
xor
js
(bad)
mov
add
or
sbb
sub
pop
fidiv
xchg
pusha
fisttp
jne
mov
mov
fstp
xlat
xchg
or
(bad)
jmp
lmsw
mov
(bad)
ins
jmp
xchg
ins
mov
mov
inc
jmp
outs
adc
imul
pop
sub
mov
or
xchg
inc
sbb
add
or
push
ror
or
dec
daa
xchg
cmp
xchg
ja
dec
sbb
and
sbb
(bad)
in
js
or
adc
or
lahf
icebp
jg
push
mov
pop
jg
ins
add
add
sti
mov
jg
fnstenv
aas
mov
mov
shr
jg
xor
pop
jge
mov
and
mov
int
cmc
dec
mov
push
mov
xor
or
and
inc
mov
add
phaddsw
adc
loopne
sub
mov
stos
mov
(bad)
add
fnstcw
fst
das
push
mov
pusha
adc
mov
mov
test
test
nop
sub
ret
jnp
xchg
mov
ss
fistp
das
sbb
add
pusha
or
mov
ret
adc
jg
cmp
shl
or
pop
adc
jno
pop
add
add
mov
jmp
int
jl
sbb
sbb
adc
jae
jb
mov
ins
or
jmp
lock
inc
lods
inc
add
test
add
sub
pusha
dec
inc
mov
pop
mov
adc
imul
test
popf
aaa
fbld
fwait
add
jae
xchg
and
pop
or
(bad)
and
and
retf
mov
mov
aas
or
sub
cmp
sbb
pop
jnp
imul
dec
adc
adc
adc
push
adc
mov
mov
cmp
adc
sbb
sub
inc
mov
mov
xor
xor
adc
stos
jo
cmp
push
add
or
inc
iret
pop
movs
and
or
cmp
lock
add
add
lds
or
sbb
add
sbb
and
add
add
fwait
mov
sbb
sub
inc
sbb
lea
add
push
xor
add
retf
(bad)
pop
fcom
rcl
pop
daa
lods
xchg
pop
sub
mov
xchg
jg
das
cmp
ins
mov
and
add
arpl
pop
pusha
or
sbb
pop
test
out
sub
lods
sbb
pop
stos
shl
adc
popa
add
out
shl
push
(bad)
mov
pop
pop
sbb
adc
or
add
les
mov
sahf
add
pop
push
cdq
dec
inc
or
imul
adc
sub
push
aas
icebp
out
mov
lahf
pop
pop
adc
adc
and
sub
inc
mov
popf
mov
and
test
popa
adc
pop
aad
sub
lods
add
pop
jb
add
add
in
inc
dec
cmp
test
jmp
aam
test
or
pop
aas
add
adc
dec
icebp
xchg
push
adc
mov
(bad)
fsub
test
lds
mov
adc
add
sbb
or
jmp
and
dec
jg
js
nop
push
repz
fadd
jae
adc
sub
and
xchg
js
(bad)
lods
inc
adc
or
fistp
mov
(bad)
dec
neg
mov
mov
adc
retf
mov
pop
sub
sbb
sbb
in
out
(bad)
dec
jo
mov
test
mov
imul
stc
dec
scas
sub
xor
push
cmps
inc
push
mov
sbb
push
sbb
(bad)
not
mov
cmp
or
cmp
or
inc
loope
pop
repnz
fbld
push
ja
mov
neg
mov
xchg
add
imul
pop
xchg
mov
fbstp
or
push
adc
pop
pop
loopne
dec
sar
daa
lds
inc
setae
jns
inc
adc
mov
mov
push
add
adc
and
adc
push
fisubr
mov
aas
add
inc
shl
pop
mov
stos
movs
(bad)
jnp
adc
or
addr16
out
repz
mov
push
and
mov
add
cld
fmul
inc
add
call
nop
mov
fdiv
addr16
and
cmp
in
mov
pop
rol
out
mov
sub
push
add
icebp
push
add
pusha
add
pop
dec
es
and
xchg
dec
mov
repnz
add
adc
pop
lock
cmp
or
adc
sbb
add
xchg
and
inc
pop
dec
jbe
pop
jg
das
adc
call
test
das
fbstp
inc
js
and
pop
inc
mov
cmp
mov
adc
add
push
and
mov
das
setl
cmp
xor
mov
adc
dec
dec
push
push
lahf
mov
in
mov
rdtsc
inc
sub
xor
mov
aas
(bad)
(bad)
call
out
push
push
aad
pop
push
dec
or
in
call
outs
psubusw
pop
pop
hlt
(bad)
jg
aas
je
sub
pop
push
lds
mov
stos
jmp
psubusb
in
aas
outs
aas
jb
add
es
sub
jg
(bad)
or
mov
jmp
pop
sub
xor
mov
inc
pop
or
push
mov
aas
jg
push
aad
lahf
pusha
inc
test
pxor
lahf
mov
inc
cs
add
outs
movups
push
or
pop
paddusb
mov
pushf
pushf
pushf
pushf
cmp
cmp
jbe
pop
pushf
cmp
cmp
jb
inc
add
outs
daa
mov
inc
inc
inc
pop
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
inc
xor
dec
dec
dec
dec
fisttp
push
pop
add
pop
js
and
sub
enter
test
fs
dec
jo
scas
jo
jns
stc
or
ror
fld
mov
das
dec
fucom
jmp
call
repz
push
nop
pushf
lahf
stc
cmc
aas
enter
lock
dec
xlat
push
sub
(bad)
jg
and
fisubr
lods
add
fisubr
dec
lahf
ud0
ds
fcmovb
cmp
pop
dec
lods
aas
scas
aas
mov
das
lahf
shr
or
fistp
stos
jge
mov
jne
mov
out
cs
iret
push
adc
mov
adc
iret
push
and
inc
dec
fild
adc
pop
add
push
and
(bad)
(bad)
aas
fistp
aas
jg
in
mov
and
stos
mov
aas
pop
push
inc
push
aas
inc
pop
test
mov
pop
movs
aas
sar
and
mov
dec
lahf
jns
dec
ret
mov
pop
fwait
cmp
cld
push
fiadd
add
push
inc
push
pop
in
(bad)
(bad)
jmp
dec
bound
pop
push
outs
jne
imul
in
call
sub
or
loopne
jo
push
jns
test
cmps
or
push
jae
push
dec
add
adc
nop
mov
das
mov
fs
mov
(bad)
xchg
push
push
and
adc
outs
dec
pop
ret
ficom
push
push
dec
sub
sbb
adc
dec
in
fnstsw
pop
adc
add
and
push
adc
push
dec
ficom
adc
and
je
mov
xchg
cmp
ins
jo
push
mov
in
ins
inc
adc
out
mov
adc
cmps
std
sub
repz
push
push
mov
out
push
sbb
push
ins
cmp
test
gs
mov
in
ror
gs
ins
inc
push
dec
je
mov
ds
mov
add
xchg
adc
sbb
and
cmp
sar
inc
ja
inc
jo
inc
push
js
adc
cmps
add
jmp
fbstp
ins
pop
ins
aaa
jbe
ja
jo
sub
addr16
push
addr16
fnsave
sar
or
js
ins
test
(bad)
imul
cs
bound
mov
or
adc
inc
adc
jnp
push
sub
inc
ja
adc
std
mov
cmp
pusha
nop
dec
fs
pop
out
xchg
gs
push
popa
inc
xor
mov
push
jb
fimul
outs
je
inc
cmp
sub
and
ins
cmps
or
xor
sti
mov
pushf
sub
adc
ret
xchg
push
and
pop
rcr
or
mov
sbb
stc
or
iret
dec
add
xchg
je
push
dec
inc
test
nop
inc
lds
imul
adc
sub
sbb
sub
ret
es
add
xor
pop
fld
adc
or
mov
or
mov
fbstp
test
test
call
inc
test
inc
jb
js
sbb
jae
retf
test
ret
outs
popf
xor
and
and
dec
jae
jle
mov
and
retf
or
adc
mov
pusha
add
jl
sub
add
retf
(bad)
xor
jns
adc
mov
xchg
les
fs
jae
mov
ds
jne
loopne
pop
xchg
dec
xchg
mov
inc
dec
inc
hlt
adc
je
add
ins
mov
sub
add
mov
int3
inc
mov
push
and
jecxz
add
or
add
push
test
dec
push
clc
fidiv
pop
mov
cwde
mov
pop
sbb
popa
leave
imul
jb
or
enter
push
fs
pusha
(bad)
jg
mov
sub
jmp
sbb
dec
adc
sbb
xor
adc
and
lahf
cmps
dec
jne
bound
and
or
push
cdq
imul
mov
lods
movs
movs
push
mov
add
adc
mov
in
jp
mov
and
loopne
jns
and
xchg
inc
addr16
ret
retf
rcl
inc
xchg
mov
sub
data16
and
mov
mov
gs
lods
adc
and
sub
add
and
or
out
push
out
shl
outs
int
xor
xor
adc
mov
and
arpl
fs
inc
pop
nop
push
jo
xchg
imul
pop
xchg
xchg
dec
jnp
ficom
dec
data16
add
stos
mov
enter
push
sahf
inc
nop
mov
mov
inc
xor
pusha
outs
dec
xor
and
jo
inc
push
popa
out
iret
xor
mov
out
pop
xchg
(bad)
repnz
dec
cwde
adc
stos
add
(bad)
push
and
pushf
jbe
sbb
outs
inc
popa
pop
adc
ins
popa
push
jl
pop
sbb
ds
jae
cwde
xor
scas
sub
adc
pop
into
in
xchg
pushf
mov
adc
imul
nop
test
mov
popa
or
loope
rol
in
cmp
add
fadd
pop
sbb
adc
nop
dec
rcl
ins
adc
dec
xor
mov
ins
adc
push
push
pop
adc
adc
cmc
xchg
jae
jle
fwait
or
xlat
sbb
jo
and
jl
data16
mov
ins
lea
pmulhw
jbe
add
(bad)
mov
das
inc
pushf
pop
inc
inc
adc
sahf
push
push
push
cmp
push
rcl
add
xor
in
mov
xchg
jle
leave
rcl
imul
add
mov
loop
out
add
sbb
sbb
xchg
inc
movs
test
cmp
fild
xor
xor
push
js
sahf
pop
fst
mov
xor
in
mov
adc
add
push
fwait
sbb
mov
push
xlat
dec
push
dec
fiadd
and
js
xor
xchg
mov
push
sbb
cmc
add
sbb
add
mov
aaa
pop
and
push
cmps
jno
pop
sub
outs
mov
push
mov
mov
jecxz
mov
or
inc
mov
gs
(bad)
call
cmp
sub
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
scas
pusha
mov
cmp
pop
in
sbb
xor
ret
test
push
push
js
push
adc
jno
or
pop
call
push
jno
xchg
xor
lds
sub
xchg
sbb
xchg
xlat
pusha
fisttp
push
add
or
dec
push
or
xor
add
test
add
or
mov
outs
or
scas
pop
add
sub
or
scas
sbb
push
cmps
or
or
sbb
pop
xor
add
adc
jns
mov
gs
jno
gs
add
jne
jle
push
sub
arpl
popa
inc
cs
or
ins
aas
js
loopne
ucomiss
sub
cmp
and
(bad)
lock
ins
adc
dec
xor
add
dec
jp
push
jp
push
arpl
cmp
imul
and
and
cmp
or
in
sbb
fnstsw
cmp
sub
imul
or
cld
push
and
xor
outs
outs
push
and
ss
xor
xor
xor
sub
pop
cmp
cmp
aaa
and
and
cmp
cmp
in
dec
in
mov
xlat
sbb
das
ja
cs
fstp
outs
jb
das
xor
xchg
xor
outs
je
sub
int
sub
imul
fcomp
sub
dec
mov
fiadd
push
fs
js
mov
dec
and
int3
adc
jae
push
data16
ficomp
das
sbb
call
push
sbb
and
(bad)
mov
scas
clc
in
test
dec
inc
outs
xor
fs
cmp
inc
cmp
inc
xor
inc
cmp
inc
xor
inc
inc
ss
push
xor
push
push
pusha
popa
outs
adc
xor
inc
xchg
inc
inc
xlat
mov
sbb
inc
xor
cmp
xor
cmp
or
xor
aaa
jl
inc
ss
ja
xchg
inc
ja
imul
cmp
or
jae
sbb
push
and
mov
pop
xor
ds
scas
sub
push
and
mov
jmp
loopne
cmp
loope
pop
and
add
inc
xor
cmp
xor
cmp
xor
and
ins
mov
pusha
das
sbb
pop
and
add
cmps
daa
sbb
bound
call
lock
sar
in
fcom
(bad)
(bad)
(bad)
(bad)
fild
inc
push
out
push
push
push
fld
stos
sti
fild
test
clc
jb
sub
jmp
or
cmp
sub
ds
mov
sti
mov
push
cmp
(bad)
fstp
add
mov
jg
jmp
mov
add
rol
nop
pop
add
xor
fs
add
inc
int
inc
rol
inc
jo
jbe
(bad)
(bad)
(bad)
call
pushf
jne
int3
in
(bad)
gs
jae
mov
pop
shl
test
out
int3
iret
fcos
(bad)
(bad)
(bad)
fsubp
into
fxam
mov
mov
push
in
dec
pop
push
or
cdq
jno
imul
mov
cmp
mov
(bad)
(bad)
(bad)
jmp
hlt
mov
rcl
scas
fdiv
mov
pop
shl
test
adc
loope
xchg
mov
fwait
idiv
(bad)
(bad)
call
aas
mov
push
dec
fdivr
jmp
test
dec
outs
xor
stc
outs
clc
jns
(bad)
(bad)
(bad)
jg
arpl
in
add
pop
mov
loopne
mov
mov
imul
cmp
(bad)
(bad)
(bad)
in
cld
int3
mov
out
data16
std
mov
jecxz
iret
xchg
(bad)
mov
(bad)
lods
fcomip
loopne
cmp
es
(bad)
(bad)
dec
scas
(bad)
mov
int
xchg
sbb
pop
jb
fimul
(bad)
(bad)
call
vmaxss
mov
mov
ss
addr16
cld
cmc
sti
ins
push
adc
push
ins
aad
adc
push
push
mov
das
cmp
add
sbb
aas
cmp
shr
mov
test
jo
push
mov
jp
dec
mov
adc
loope
add
sbb
inc
ins
and
aam
add
push
push
sub
xor
mov
js
jge
add
jnp
xor
pop
pop
pop
add
pop
cmp
pop
loopne
cmp
or
add
arpl
(bad)
(bad)
jmp
add
adc
retf
xlat
push
fadd
sub
sahf
cmps
stos
movs
jo
xchg
and
push
les
ins
add
pop
nop
jp
(bad)
fadd
push
mov
push
pushf
inc
push
mov
jmp
push
bound
mov
rol
push
and
call
sub
xor
(bad)
(bad)
push
inc
sub
or
add
jg
sbb
adc
and
(bad)
(bad)
jmp
push
lock
repnz
pop
ret
or
ret
adc
and
push
push
inc
sub
rol
iret
and
mov
inc
cmp
push
pusha
xor
sub
sbb
and
lahf
and
(bad)
(bad)
inc
add
pop
stc
adc
cmp
ret
add
inc
cld
xor
push
add
inc
push
test
js
or
leave
push
and
pop
cmps
loopne
jmp
pop
add
or
cld
inc
les
adc
aam
mov
inc
and
mov
mov
and
inc
sbb
clc
inc
fst
add
or
xor
push
jno
add
xor
das
inc
dec
cdq
add
push
(bad)
(bad)
(bad)
aas
jecxz
pop
push
xor
mov
dec
sbb
xor
and
cdq
call
inc
(bad)
call
enter
popa
inc
ret
and
jg
sbb
cwde
inc
push
(bad)
(bad)
inc
pop
sbb
es
jo
dec
dec
mov
call
sub
push
jmp
(bad)
inc
in
push
call
add
inc
mov
pop
push
sar
xor
or
scas
aad
int
xchg
dec
repz
outs
fcmovnu
(bad)
jmp
clc
jp
rol
ins
ss
es
lods
push
adc
cmc
ret
std
inc
inc
mov
sti
icebp
push
inc
jg
test
into
lods
sub
dec
inc
es
(bad)
(bad)
jl
mov
(bad)
mov
mov
setno
ss
jmp
call
cld
call
stos
pop
iret
dec
cmp
or
inc
test
or
test
(bad)
(bad)
dec
nop
fsubr
sahf
cdq
shl
jmp
cmps
(bad)
and
mov
mov
jbe
or
(bad)
call
adc
call
adc
sbb
std
inc
movs
(bad)
(bad)
(bad)
dec
js
pop
mov
inc
sub
rcl
adc
(bad)
dec
jne
cli
(bad)
mul
mov
cld
xchg
xor
bnd
mov
pop
jns
out
and
add
call
mov
mov
mov
gs
aad
je
aaa
int3
adc
cld
fcomip
(bad)
inc
neg
scas
das
aas
push
in
add
lds
sbb
(bad)
jmp
mov
push
jecxz
movs
add
enter
cmp
dec
jmp
fnstenv
lahf
mov
jb
add
sbb
xchg
and
and
mov
pop
sar
sub
cmp
mov
jbe
push
mov
mov
(bad)
scas
clc
(bad)
jl
loope
xor
daa
add
add
dec
pop
jl
out
bound
jg
test
js
and
push
(bad)
xchg
jno
inc
lds
xor
in
in
push
pop
aas
(bad)
std
(bad)
(bad)
(bad)
(bad)
call
jle
frstor
inc
mov
xor
mov
pop
xor
adc
xchg
(bad)
(bad)
cmp
cmp
xor
retf
sbb
ret
xchg
in
pop
sahf
ja
push
sti
(bad)
dec
mov
cmp
inc
inc
add
or
sbb
or
jmp
inc
sub
test
mov
or
leave
sbb
mov
sar
les
cmp
push
cwde
push
mov
jg
(bad)
(bad)
(bad)
mov
inc
inc
repz
add
dec
sub
inc
das
mov
xchg
mov
(bad)
jg
fucomip
mul
pop
push
jns
jmp
pusha
loop
sub
pop
outs
gs
(bad)
(bad)
(bad)
(bad)
jmp
int
push
push
fsub
lods
adc
stos
mov
adc
xchg
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
jl
adc
or
push
popa
movs
sub
jb
dec
sar
movs
(bad)
pop
fsubr
sbb
cli
add
(bad)
dec
test
xlat
push
inc
mov
xor
jmp
ins
mov
sbb
push
outs
add
out
and
loopne
jmp
(bad)
(bad)
inc
aam
ss
in
(bad)
repz
mov
add
mov
call
add
mov
add
rcl
call
in
mov
sbb
push
mov
inc
or
inc
les
xor
or
adc
(bad)
jmp
sbb
sub
loop
push
aaa
mov
add
cld
and
(bad)
inc
push
or
dec
xchg
add
aam
xor
adc
jae
jmp
adc
(bad)
(bad)
or
sub
dec
xchg
add
pop
push
mov
(bad)
or
int
push
fcomip
sbb
jne
xchg
push
ds
add
push
push
fnstenv
and
pop
(bad)
in
cmps
mov
mov
mov
jmp
and
loopne
push
adc
mov
inc
sub
ret
ret
aaa
cld
out
icebp
and
rol
outs
adc
xor
aaa
jp
adc
inc
sbb
fstp
jb
push
pop
dec
pop
sahf
mov
adc
push
pop
xchg
ret
push
(bad)
aas
sbb
dec
add
(bad)
icebp
cmp
mov
jmp
cmp
mov
stc
add
sub
call
add
test
aad
imul
jno
repnz
daa
cmp
xchg
pushf
(bad)
lahf
das
mov
int3
mov
inc
sbb
test
test
out
test
jb
mov
aad
pop
mov
call
cmc
aad
adc
adc
cmp
fbld
xor
mov
jecxz
ret
sti
sar
clc
jmp
popa
call
sub
mov
(bad)
(bad)
call
mov
sbb
js
jle
push
mov
je
cmp
(bad)
(bad)
push
sbb
test
daa
xchg
dec
shl
push
pcmpeqb
cmp
ja
je
pop
(bad)
fucomip
(bad)
out
test
fs
in
mov
leave
gs
sahf
fstp
cs
mov
sub
ja
imul
(bad)
cmp
arpl
out
leave
outs
(bad)
mov
cs
fld
mov
xlat
loope
inc
mov
push
jmp
mov
das
movs
adc
inc
movs
pop
cmps
jecxz
in
jbe
stos
(bad)
fist
loopne
push
lods
shl
sub
push
and
(bad)
jnp
mov
add
push
adc
push
test
sbb
out
(bad)
mov
call
pop
popf
rol
cmps
aad
jecxz
jmp
shr
call
cmp
xor
jbe
mov
cld
lods
dec
call
inc
xlat
jo
js
jmp
fdiv
call
mov
and
inc
movs
sbb
jmp
dec
xchg
pusha
pop
in
dec
sub
gs
push
push
aaa
add
push
pop
pop
inc
daa
adc
inc
daa
push
add
lahf
mov
ins
add
call
push
aaa
adc
xlat
repnz
xchg
inc
push
ror
or
cmps
dec
ins
out
jns
mov
(bad)
(bad)
(bad)
jmp
ret
adc
push
test
mov
data16
inc
arpl
fcomi
mov
(bad)
(bad)
call
push
and
xlat
enter
xchg
leave
jl
jmp
imul
mov
das
add
(bad)
jp
ret
adc
or
inc
pop
(bad)
stos
mov
imul
ret
out
in
mov
hlt
push
mov
xchg
popf
xchg
cdq
in
(bad)
jg
jmp
push
jmp
pop
fcomp
cmp
sti
or
ret
aad
xchg
add
dec
cmp
adc
and
sub
jl
and
or
fsub
(bad)
(bad)
jmp
adc
adc
shr
or
adc
or
shl
fmul
(bad)
(bad)
(bad)
inc
add
sti
lea
add
xchg
std
sar
push
mov
out
(bad)
(bad)
(bad)
jmp
(bad)
test
push
(bad)
(bad)
sbb
es
out
cmp
enter
sub
retf
call
or
scas
or
mov
add
out
sub
mov
test
(bad)
(bad)
jmp
cmp
mov
xor
das
sub
sbb
push
sub
mov
fnstenv
jg
into
cmp
test
cwde
or
in
ins
out
outs
cli
(bad)
push
jecxz
add
fnstenv
inc
cld
stc
sub
(bad)
push
cmp
sbb
(bad)
(bad)
dec
or
mov
mov
je
cmp
ja
dec
sub
repz
mov
sbb
and
(bad)
in
(bad)
call
and
loopne
jns
add
aaa
ss
or
pop
mov
cmp
call
loopne
xor
mov
(bad)
in
and
pop
sub
rol
xor
(bad)
(bad)
jmp
fmul
sti
xchg
push
sub
mov
mov
fdivr
jb
lods
pop
jle
(bad)
(bad)
(bad)
call
jle
xchg
imul
not
out
mov
push
ficom
xor
stc
push
(bad)
int
retf
(bad)
call
ins
add
inc
repz
xchg
mov
fisttp
dec
dec
ret
dec
mov
sahf
cmps
mov
sbb
(bad)
(bad)
jmp
push
add
shl
mov
rcl
mov
jo
js
(bad)
(bad)
(bad)
inc
mov
push
(bad)
fild
fwait
ja
fidiv
push
test
fidiv
addr16
push
data16
inc
push
out
inc
fdiv
sub
lods
push
jmp
repnz
fwait
in
call
mov
jecxz
imul
pop
inc
mov
pushf
pop
fcomip
(bad)
inc
stc
xchg
or
adc
sub
fsub
into
add
and
(bad)
(bad)
(bad)
dec
nop
imul
(bad)
cmp
or
mov
out
push
stos
mov
mov
(bad)
(bad)
call
fwait
addr16
push
or
scas
gs
movs
cwde
push
cs
sub
in
or
(bad)
call
sbb
lock
bound
jnp
or
xchg
and
stos
sar
jmp
mov
call
pop
sbb
mov
add
pop
or
push
dec
lods
mov
out
inc
dec
jle
add
stc
add
pushf
ins
pusha
sar
bound
(bad)
call
lods
inc
js
push
lock
fild
push
xchg
jne
nop
mov
js
(bad)
call
inc
popf
popa
sar
jo
push
outs
rol
int
out
inc
mov
mov
aam
jg
jmp
mov
js
dec
sbb
xchg
shr
cmps
cmp
addr16
jmp
loopne
fs
(bad)
bound
out
push
lods
dec
aad
xchg
sub
(bad)
(bad)
inc
or
add
xchg
cmp
jge
nop
sti
fld
stos
push
push
addr16
outs
clc
call
push
push
and
jbe
and
add
repnz
push
cmp
ins
or
clc
sbb
adc
jne
mov
mov
xchg
jmp
fcomp
sbb
mov
mov
or
mov
std
cld
(bad)
(bad)
(bad)
(bad)
mov
sub
xchg
sar
mov
mov
pop
lahf
int3
fcomp
rol
cmps
addr16
push
mov
(bad)
mov
scas
jg
cmp
neg
loopne
mov
inc
loope
pop
xchg
(bad)
jge
cld
(bad)
add
imul
fsubr
ret
pop
js
idiv
mov
out
loope
(bad)
psubd
(bad)
sti
(bad)
sbb
les
jg
push
cmp
push
add
jnp
js
dec
enter
lods
add
imul
pop
dec
sbb
pop
lock
retf
(bad)
jnp
cs
imul
pop
in
arpl
mov
mov
adc
sbb
shl
sbb
mov
mov
and
repz
enter
out
xchg
xor
xchg
cmp
(bad)
(bad)
(bad)
dec
cld
fadd
xchg
jg
xor
int3
xchg
sahf
push
mov
std
pop
stos
jns
cmp
(bad)
(bad)
push
pop
imul
rcr
xchg
and
icebp
dec
fdiv
pop
cmps
cmps
lock
sar
ror
push
xchg
scas
cli
(bad)
jmp
stos
sub
jno
pop
xlat
jmp
jge
adc
sbb
xchg
and
push
and
(bad)
(bad)
(bad)
in
jnp
mov
or
xor
adc
sbb
cmps
mov
xchg
(bad)
(bad)
(bad)
jg
mov
jecxz
dec
les
mov
scas
mov
cmp
or
pop
add
push
(bad)
aad
add
sub
xchg
adc
xor
in
lods
pop
mov
mov
imul
mov
lock
xor
cmp
(bad)
jge
nop
in
mov
or
mov
pop
push
jmp
movs
xchg
sti
jge
dec
jno
pop
mov
in
push
iret
adc
stos
(bad)
(bad)
(bad)
jmp
mov
mov
nop
dec
inc
test
jo
dec
xor
ret
jle
jno
sub
(bad)
(bad)
dec
jae
outs
ror
or
jmp
mov
jo
in
nop
sar
pop
xchg
out
jno
(bad)
(bad)
(bad)
(bad)
adc
or
push
jb
pop
inc
xor
loope
pop
ja
mov
push
(bad)
(bad)
fstp
imul
jl
xchg
push
lea
jg
mov
int
xor
dec
or
in
(bad)
(bad)
(bad)
(bad)
in
cli
mov
retf
add
fdiv
cmp
ja
ins
sbb
jmp
inc
loopne
int
call
call
or
mov
gs
jecxz
add
jo
mov
pop
cld
test
push
ins
call
sub
int3
push
pop
(bad)
inc
jge
hlt
stos
dec
xor
imul
fstp
(bad)
sbb
mov
jg
test
add
test
cmp
jno
(bad)
(bad)
push
out
data16
leave
dec
and
xlat
adc
shl
nop
stc
dec
test
pop
lock
test
popf
call
ror
scas
push
imul
sbb
bound
or
and
and
out
ficomp
stc
xor
dec
fiadd
dec
or
lock
jb
push
mov
(bad)
(bad)
push
out
retf
and
popf
jge
(bad)
iret
iret
sub
loop
add
adc
(bad)
(bad)
call
iret
je
aas
das
jb
mov
xrelease
inc
pop
aaa
loop
jno
lock
in
sbb
inc
inc
mov
enter
adc
movs
lds
sti
adc
cs
(bad)
(bad)
mov
shl
sub
rol
daa
and
(bad)
(bad)
(bad)
mov
call
call
mov
outs
push
jge
mov
dec
and
test
or
xchg
dec
rol
xor
(bad)
inc
daa
pop
jno
mov
pop
or
pop
and
cmps
sub
out
pop
add
cmp
pop
mov
add
pop
add
test
xor
nop
push
push
loopne
cmp
push
popa
mov
fldenv
sub
sub
pop
gs
push
inc
popa
push
add
add
call
lock
inc
mov
and
dec
or
leave
and
dec
or
push
push
icebp
adc
dec
and
and
pop
(bad)
test
add
(bad)
mov
leave
push
sub
jae
jge
retf
sub
push
sbb
or
mov
mov
push
shr
dec
sahf
pop
inc
cmp
add
mov
cmp
popa
(bad)
(bad)
fimul
ficomp
xchg
push
xchg
shr
and
fsubr
adc
int3
inc
outs
and
dec
ficom
mov
fild
push
push
int
adc
gs
cmp
out
cdq
add
mov
adc
jge
dec
popa
js
adc
mov
add
mov
imul
or
or
fcom
dec
lods
sbb
dec
and
cmps
dec
jecxz
or
ins
push
mov
mov
xor
xor
xchg
or
xor
movs
test
or
add
popf
(bad)
mov
dec
push
and
out
in
out
add
retf
cdq
add
add
cmp
xchg
(bad)
aas
inc
xor
aaa
inc
xor
xor
cmps
push
inc
sahf
outs
xor
xor
inc
inc
and
loop
ja
rcl
add
adc
inc
inc
pop
inc
cli
add
(bad)
inc
inc
inc
xor
cmp
inc
inc
(bad)
jmp
jg
not
pop
add
in
adc
mov
xchg
popf
daa
push
(bad)
push
clc
(bad)
(bad)
(bad)
call
push
pause
adc
xor
add
or
aaa
jb
adc
add
(bad)
(bad)
push
mov
mov
jns
(bad)
push
sub
adc
outs
(bad)
daa
jge
xor
push
cmc
mov
aam
sti
out
outs
sub
sub
mov
leave
xchg
and
(bad)
in
sbb
rcr
ds
std
xor
inc
mov
imul
jmp
add
xchg
aas
pop
mov
jg
pop
sti
fisubr
xlat
outs
or
mov
clc
xchg
popa
push
sub
mov
add
enter
in
and
jbe
xchg
in
mov
cld
lahf
or
enter
jg
int
mov
pop
(bad)
(bad)
inc
mov
cmc
dec
(bad)
aas
sar
out
mov
mov
(bad)
(bad)
jg
sar
shl
lock
stc
sar
xchg
push
pop
mov
ins
dec
jnp
or
(bad)
call
push
pop
xchg
cmp
dec
pop
pop
pop
stos
out
stos
mov
imul
(bad)
(bad)
frstor
push
mov
ins
out
pop
fistp
mov
ret
mov
inc
or
jae
out
cli
jmp
lds
cdq
xor
pop
xchg
sbb
cmp
(bad)
shr
jl
(bad)
(bad)
jmp
lods
mov
or
scas
xchg
sub
xlat
xlat
int3
call
(bad)
(bad)
call
mov
xor
lods
mov
mov
(bad)
test
popa
mov
pop
fsubr
mov
dec
fistp
mov
(bad)
(bad)
call
shl
mov
bound
scas
in
not
mov
(bad)
dec
loope
cli
(bad)
(bad)
jg
bnd
jle
xchg
scas
ins
jbe
(bad)
fist
aaa
jnp
pop
data16
(bad)
call
(bad)
jae
(bad)
pop
mov
xor
lods
sub
std
(bad)
(bad)
(bad)
call
xor
scas
sub
sbb
jns
xchg
xor
lahf
int
mov
lock
adc
(bad)
stc
jae
(bad)
pop
in
mov
jg
mov
(bad)
stos
cld
call
mov
aas
mov
lahf
arpl
mov
imul
(bad)
popa
pop
mov
(bad)
mov
stos
push
sub
push
(bad)
(bad)
inc
js
call
imul
adc
jmp
mov
lahf
das
cmc
push
cld
jmp
fnsave
(bad)
(bad)
push
xor
addr16
jg
(bad)
call
(bad)
call
call
sbb
sbb
lods
fst
sbb
not
arpl
push
pop
cli
ja
mov
cld
cmp
ds
neg
(bad)
push
mov
ins
jmp
pop
mov
sub
ins
ds
(bad)
call
xlat
mov
fcomip
out
jae
enter
ret
div
pop
clc
fcomip
(bad)
call
imul
dec
(bad)
fist
fucomp
jmp
push
lods
jl
repz
cmp
mov
iret
cmps
ficomp
in
xor
xor
dec
jle
rol
scas
mov
(bad)
(bad)
(bad)
jmp
(bad)
mov
out
inc
fisttp
into
hlt
ret
pop
repz
in
xchg
out
int
sti
idiv
pop
(bad)
(bad)
(bad)
(bad)
mov
std
ins
cli
cmp
(bad)
(bad)
int
cmp
iret
jle
mov
outs
outs
(bad)
(bad)
jmp
xchg
mov
xchg
ds
jle
in
out
jnp
mov
pop
ds
inc
movs
cmp
(bad)
dec
jl
jl
cmp
in
mov
das
(bad)
imul
rcl
arpl
pop
out
(bad)
fcos
pop
lock
mov
mov
mov
rcr
in
mov
lds
mul
(bad)
dec
pushf
aaa
cli
sbb
and
cmp
cmp
mov
pop
das
(bad)
(bad)
(bad)
(bad)
(bad)
fucomip
hlt
sbb
in
out
pop
std
imul
(bad)
addr16
cdq
scas
jne
aaa
mov
loope
jmp
rol
mov
jns
call
(bad)
jle
push
sti
idiv
(bad)
out
pop
pop
cs
repnz
(bad)
inc
iret
fist
inc
(bad)
es
mov
fxch
ins
mov
icebp
(bad)
jg
lods
stc
sti
jecxz
sti
jmp
lock
clc
lahf
cmps
std
jge
stc
(bad)
(bad)
mov
jae
ret
out
jno
sbb
bound
mov
(bad)
(bad)
jmp
push
not
aas
mov
leave
jnp
mov
xor
pop
jg
(bad)
jg
mov
out
or
mov
xor
jnp
xchg
xchg
ss
dec
(bad)
(bad)
mov
div
mov
push
loope
iret
jp
cmp
test
in
mov
mov
ins
pop
sti
sar
pop
xlat
out
cmp
jno
mov
mov
std
das
clc
clc
xchg
sub
scas
arpl
ss
fs
ret
(bad)
(bad)
(bad)
mov
jbe
push
(bad)
sbb
sub
dec
jae
outs
(bad)
mov
(bad)
jne
(bad)
dec
aam
cmp
pop
or
adc
das
mov
dec
repz
clc
(bad)
mov
addr16
(bad)
neg
fld
jge
shl
call
shl
cmp
(bad)
(bad)
sti
aad
cmp
cmp
ins
jmp
ret
(bad)
push
push
xchg
aad
les
sbb
hlt
dec
fwait
aas
aas
repnz
dec
fld
in
lea
std
cmp
pop
cmp
div
pop
fild
rol
mov
cmps
fsubp
(bad)
(bad)
jmp
adc
enter
jbe
addr16
jle
inc
pop
mov
mov
xchg
(bad)
(bad)
(bad)
mov
pop
pop
add
ss
(bad)
loop
add
push
fs
lock
(bad)
(bad)
(bad)
call
fs
out
data16
and
adc
out
lods
fldl2e
bound
fwait
mov
add
(bad)
(bad)
(bad)
dec
inc
mov
int3
sub
sbb
lock
int3
or
movs
or
add
ss
(bad)
(bad)
(bad)
inc
xchg
and
(bad)
mov
aas
jle
outs
fistp
ror
inc
adc
jmp
cli
add
iret
jne
push
mov
loopne
(bad)
call
(bad)
(bad)
(bad)
jmp
xlat
add
paddw
cmps
xchg
mov
push
push
fstp
jg
fmul
test
add
scas
lds
bnd
sbb
outs
add
popa
or
sbb
(bad)
(bad)
(bad)
inc
pop
fbstp
jle
in
int
xcrypt-ecb
cmps
dec
loopne
jmp
push
bnd
fbld
out
cmp
xor
adc
cmp
or
push
out
cli
sar
mov
jo
sbb
jge
mov
sbb
lea
idiv
cmc
(bad)
(bad)
inc
lds
ret
sub
jno
cli
cwde
clc
mov
push
sahf
or
(bad)
(bad)
pop
(bad)
xlat
pop
mov
int
sahf
add
mov
mov
pop
pop
into
add
call
adc
mov
sahf
jle
(bad)
(bad)
jmp
jmp
push
scas
pop
cmp
mov
scas
sbb
loopne
jne
cmp
mov
mov
loope
lock
push
clc
jl
icebp
clc
push
jmp
sti
(bad)
jmp
pop
add
fcmovnu
outs
sbb
adc
fs
retf
js
ins
add
xlat
sbb
aaa
sar
(bad)
stc
(bad)
and
shl
and
int3
(bad)
jne
jne
push
les
movs
xchg
out
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xor
retf
dec
pop
pop
pop
scas
xor
sbb
mov
ror
aam
loopne
jno
cmp
ret
cmp
push
xor
retf
fldpi
xor
fstp
fld
and
pop
loope
pop
std
push
cld
enter
sbb
out
mov
in
call
push
pop
pop
fmul
popf
xchg
dec
pop
push
fistp
sub
push
ss
pop
cmp
lock
(bad)
inc
rcr
or
cmps
and
aam
xor
loopne
pop
mov
cmp
cld
cs
bound
idiv
(bad)
(bad)
push
js
jno
inc
jnp
mov
xlat
(bad)
retf
xchg
cwde
cmc
iret
xor
sbb
ror
(bad)
sub
(bad)
call
out
popf
or
cmp
lods
jp
(bad)
or
div
dec
(bad)
stc
aam
pop
mov
mov
std
(bad)
dec
jmp
hlt
mov
pusha
jmp
in
test
jmp
leave
mov
iret
out
jo
cmp
fsubr
mov
push
mov
call
cld
push
bnd
mov
iret
call
jns
sti
call
(bad)
call
jl
mov
lahf
cs
cmc
out
into
xchg
pop
xlat
test
add
inc
xchg
cmp
out
imul
in
iret
sar
xor
fucomp
stc
push
in
arpl
(bad)
(bad)
(bad)
inc
adc
cmp
sar
daa
lods
pop
cli
cmp
xor
movs
sar
(bad)
fld
cli
mov
(bad)
sti
(bad)
out
push
jecxz
mov
movs
ss
push
dec
ss
adc
add
sub
or
add
mov
ins
pop
jno
aad
aam
dec
test
sbb
lods
stc
inc
push
leave
imul
repz
jp
call
pop
sahf
ins
fimul
sbb
cld
out
add
push
out
cmp
jno
mov
aam
popf
xor
jmp
lock
adc
add
pop
out
add
fadd
xor
push
jo
(bad)
sbb
lea
and
sbb
aas
movs
cmp
rol
fbstp
fild
cld
push
mov
ret
(bad)
(bad)
inc
rcl
and
mov
jmp
in
aad
jnp
cld
in
cmp
test
jnp
jmp
(bad)
fsubr
jg
xor
sbb
shr
push
mov
cmp
repz
(bad)
jmp
fs
xor
add
pop
jg
mov
cmp
dec
bound
jg
cmp
or
(bad)
mov
mov
cmp
gs
arpl
(bad)
(bad)
(bad)
(bad)
push
mov
or
ins
ja
out
push
add
lods
call
xor
loopne
adc
test
repz
shl
add
fdiv
rcr
(bad)
call
clc
sbb
ins
repz
fwait
jle
fs
and
jg
push
mov
aad
pop
shl
push
out
lahf
sbb
mov
xchg
loopne
stc
popf
add
shl
or
add
xlat
loop
(bad)
(bad)
jmp
sbb
dec
xchg
ret
mov
iret
cld
pop
pop
jae
cmp
mov
fwait
mov
(bad)
(bad)
jg
add
cwde
cmp
xchg
cwde
into
jg
or
mov
add
sub
(bad)
jg
(bad)
inc
leave
jge
push
ds
fcomp
mov
sbb
imul
clc
pop
imul
mov
pop
and
fst
sbb
repnz
mov
mov
dec
pusha
leave
jmp
mov
mov
xor
pop
mov
sbb
inc
(bad)
cmc
idiv
cmp
mov
and
js
jle
adc
or
cmp
(bad)
(bad)
(bad)
jmp
dec
ret
sbb
pop
jle
xor
mov
jecxz
fisubr
das
cli
dec
lds
mov
stc
loop
xchg
cmp
mov
in
dec
(bad)
jmp
cmp
sbb
inc
ret
mov
std
(bad)
jmp
js
jae
push
jb
cmps
daa
repz
cld
sahf
popa
shl
loope
mov
fist
lds
or
mov
add
stc
(bad)
(bad)
ficomp
inc
ficom
fdiv
mov
or
cs
fsubr
int3
lea
ins
out
adc
(bad)
(bad)
(bad)
call
idiv
sub
sub
sbb
out
sbb
push
xor
test
(bad)
push
cmp
sbb
push
pop
mov
ins
out
enter
jb
dec
ins
(bad)
(bad)
(bad)
(bad)
mov
imul
test
mov
mov
sbb
mov
mov
in
(bad)
(bad)
(bad)
(bad)
mov
mov
out
icebp
jmp
rcl
mov
xor
cmp
jg
dec
fdiv
std
push
stos
pop
fdiv
cmp
ds
(bad)
jo
stc
inc
sub
sub
push
mov
lahf
pop
sti
int3
adc
and
icebp
(bad)
(bad)
(bad)
jmp
xor
(bad)
js
nop
stc
test
neg
mov
add
call
jge
jbe
jne
data16
ror
or
test
je
(bad)
stc
sar
ret
push
(bad)
(bad)
(bad)
jmp
mov
mov
out
jle
jo
shl
div
jl
add
pandn
mov
ins
icebp
loop
add
jl
jnp
repz
pop
sbb
(bad)
mov
clc
sbb
xor
sub
jle
jae
mov
add
inc
mov
xchg
sbb
mov
and
lock
jg
sti
jecxz
popa
cmp
pushf
push
xchg
outs
clc
or
push
add
jmp
cli
or
shr
inc
ja
clc
hlt
rcl
in
(bad)
(bad)
xor
clc
or
(bad)
(bad)
(bad)
call
jae
xor
cli
cmp
jmp
fidivr
mov
(bad)
jb
fcomip
cmp
les
jbe
pushf
lahf
add
ret
cli
mov
(bad)
(bad)
jmp
stc
jp
int3
or
xor
std
rol
add
into
add
lea
adc
mov
(bad)
ins
ret
jge
sti
test
and
push
mov
and
(bad)
mov
cs
or
in
push
sahf
dec
les
sbb
push
jmp
cmp
jnp
sar
xlat
loope
ror
mov
call
addr16
cwde
clc
iret
div
sbb
out
bswap
cwde
ret
mov
xlat
aaa
xchg
sbb
dec
jge
or
mov
leave
xor
ret
(bad)
call
add
js
inc
ja
pop
and
and
call
test
add
call
xor
rcr
je
repnz
adc
in
rcr
pop
mov
jl
(bad)
jg
cmp
cdq
adc
pop
cmp
fmul
mov
jo
push
(bad)
(bad)
(bad)
(bad)
(bad)
call
sbb
pop
pop
dec
pop
pop
imul
pop
(bad)
stos
fwait
data16
lods
xchg
call
cld
(bad)
(bad)
cli
(bad)
xchg
pop
retf
scas
or
rcl
imul
(bad)
(bad)
fild
loop
mov
ja
xchg
sbb
add
(bad)
(bad)
(bad)
jg
xor
dec
dec
inc
lods
push
(bad)
mov
addr16
daa
and
push
xor
inc
pop
movs
jl
add
push
add
bound
push
ret
jnp
adc
fnsave
jp
scas
inc
bound
jecxz
(bad)
call
lds
xor
ret
mov
xchg
jecxz
jne
(bad)
inc
ins
push
mov
iret
push
ins
loopne
int3
fadd
push
push
inc
or
out
xchg
(bad)
(bad)
(bad)
(bad)
ficom
lock
dec
jae
(bad)
stc
mov
sub
cmp
xchg
(bad)
jns
mov
jmp
pop
mov
add
push
jmp
fcom
or
mov
out
(bad)
(bad)
(bad)
push
mov
pop
fwait
(bad)
clc
shl
cmps
gs
in
sbb
fsubp
xlat
retf
rcr
mov
inc
out
fsubr
ret
lods
push
push
mov
icebp
mov
jne
mov
pushf
mov
add
jmp
repnz
mov
ret
push
pop
lds
scas
shl
addr16
dec
(bad)
(bad)
(bad)
jmp
stc
aas
fnsave
cs
inc
jmp
cmp
jbe
adc
cli
sti
dec
cli
xchg
(bad)
(bad)
(bad)
dec
arpl
int
cli
ds
stc
cmp
imul
idiv
aaa
push
mov
(bad)
(bad)
(bad)
jmp
popf
xchg
push
lahf
aas
pop
fimul
es
outs
pop
jecxz
sahf
cwde
std
test
(bad)
(bad)
(bad)
call
hlt
mov
cwde
inc
out
inc
imul
pop
mov
xchg
lods
mov
fist
imul
xchg
ret
add
jecxz
popa
mov
fsubr
imul
js
loopne
push
push
sub
test
(bad)
jg
mov
jae
and
outs
stc
pop
pop
das
std
jne
fidivr
jg
adc
inc
data16
sbb
test
or
or
adc
or
cli
test
ins
adc
hlt
add
mov
lock
xchg
add
test
cmp
cmp
pusha
cmp
dec
pusha
in
cwde
in
ror
adc
cmps
(bad)
adc
sub
pop
test
dec
jo
or
xor
popa
sub
(bad)
xchg
mov
outs
syscall
xor
sub
stos
in
mov
std
(bad)
push
dec
dec
in
xor
repnz
clc
fdiv
jle
sbb
(bad)
nop
lods
cwde
cmps
cmp
(bad)
(bad)
(bad)
fcomp
or
sub
scas
(bad)
lock
nop
xchg
in
inc
push
retf
dec
dec
movs
adc
pop
je
mov
or
out
jge
les
jle
lahf
pop
(bad)
(bad)
call
sbb
movs
pop
mov
clc
jge
dec
sub
addr16
jne
push
fcomp
jbe
sar
cmc
fisubr
adc
adc
push
cmp
push
(bad)
(bad)
(bad)
(bad)
cld
jbe
fbstp
jg
rol
stc
jle
and
add
inc
repnz
scas
clc
(bad)
push
add
pop
pop
sbb
inc
lds
fwait
jp
inc
xor
int3
dec
addr16
xchg
mov
test
popf
(bad)
jae
cmp
pop
mov
das
jne
(bad)
(bad)
(bad)
mov
dec
arpl
and
sbb
fdiv
stc
std
mov
retf
stos
jmp
and
ins
or
add
js
sbb
mov
movs
repz
imul
cmps
out
fstp
dec
mov
js
fisttp
jo
mov
test
dec
pop
(bad)
(bad)
(bad)
inc
gs
sti
add
je
sub
xchg
inc
fwait
ins
jg
cmps
pop
rol
jle
sub
(bad)
call
dec
lock
popfw
int3
jge
jecxz
sub
ds
lods
enter
hlt
ja
in
loope
xlat
xchg
sbb
outs
push
imul
nop
add
aaa
mov
sbb
jmp
clc
in
clc
cmc
ja
pop
sbb
jb
aas
mov
push
cmp
test
daa
in
inc
(bad)
(bad)
call
sar
add
sub
call
xor
jg
(bad)
mov
imul
loope
xchg
nop
adc
shr
pop
mov
daa
adc
add
(bad)
jmp
push
jnp
out
jae
call
(bad)
mov
pushf
test
add
outs
cmp
gs
inc
mov
xchg
popf
jb
test
(bad)
mov
cli
cmps
xchg
and
pushf
mov
mov
fadd
outs
jmp
(bad)
push
add
mov
cmp
sub
enter
xchg
mov
ds
daa
arpl
fisttp
dec
imul
(bad)
jmp
push
icebp
outs
add
imul
(bad)
mov
jecxz
jbe
mov
xlat
in
fist
mov
jg
add
iret
aas
es
mov
add
xor
mov
(bad)
(bad)
dec
adc
movs
neg
dec
fiadd
out
adc
jg
addr16
adc
(bad)
(bad)
mov
outs
call
in
jge
stc
stos
repz
lahf
imul
pusha
sar
(bad)
(bad)
jmp
mov
mov
outs
fild
sahf
push
test
sub
and
sahf
pop
enter
(bad)
(bad)
(bad)
call
mov
bound
cld
mov
inc
imul
fcom
mov
mov
scas
jno
in
add
jg
(bad)
(bad)
fsubr
ret
(bad)
aaa
and
pusha
pushf
out
out
clc
push
cli
cld
fwait
test
cld
cmps
(bad)
fcomp
repnz
adc
ret
mov
pusha
add
inc
(bad)
(bad)
jmp
add
(bad)
mov
loope
and
jns
pop
fwait
mov
mov
cmp
jmp
adc
es
(bad)
loop
cwde
fwait
add
(bad)
(bad)
(bad)
dec
xchg
xchg
repnz
fcomp
mov
rcr
clc
std
mov
cmp
pop
jle
inc
jns
bound
sub
ja
inc
sbb
loop
enter
leave
in
sub
scas
mov
(bad)
(bad)
jmp
add
sbb
jno
cdq
add
xor
sub
jnp
jl
push
sbb
(bad)
(bad)
push
and
push
pop
call
xor
js
lock
test
jo
ret
jo
dec
jne
(bad)
push
add
mov
sbb
ds
test
jmp
dec
outs
push
lods
mov
jmp
dec
and
scas
fsub
ds
aaa
cld
mov
adc
jecxz
dec
mov
lahf
sar
ficom
(bad)
mov
ds
pusha
stc
pusha
ss
je
mov
js
(bad)
(bad)
jmp
dec
test
fcomp
and
cmp
in
xor
push
or
sub
(bad)
mov
jle
adc
mov
mov
ror
test
(bad)
adc
ins
ret
jmp
std
dec
and
jbe
jae
mov
stc
loopne
xchg
jb
xchg
call
adc
jmp
in
jno
lods
xor
rcr
xchg
(bad)
(bad)
(bad)
(bad)
fstp
mov
mov
std
pusha
ds
icebp
movs
aas
xchg
(bad)
aam
cmps
jb
push
mov
shl
(bad)
(bad)
call
inc
cdq
(bad)
or
and
mov
sbb
fist
cs
mov
(bad)
(bad)
fild
ja
inc
das
iret
sbb
je
pop
rcl
mov
pushf
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
cld
jb
popa
push
gs
fnstsw
retf
cmp
mov
nop
leave
pusha
out
loop
push
pop
idiv
push
je
mov
cmp
mov
jmp
sbb
cld
js
adc
aas
sbb
rol
(bad)
stos
lds
pop
mov
mov
xor
sahf
cmps
xchg
test
(bad)
jmp
fldenv
call
mov
shl
test
lods
dec
mov
(bad)
(bad)
push
cmp
or
add
dec
test
mov
sbb
ret
inc
jmp
(bad)
(bad)
(bad)
mov
ins
icebp
shl
loopne
out
mov
test
xor
(bad)
(bad)
(bad)
(bad)
mov
popf
pop
imul
jmp
dec
mov
fadd
(bad)
jbe
mov
movs
sbb
(bad)
(bad)
(bad)
(bad)
mov
repnz
leave
mov
mov
mov
into
nop
mov
and
(bad)
mov
(bad)
in
stos
fwait
aaa
in
movs
fnstenv
cmp
mov
outs
pusha
rcl
nop
(bad)
inc
pop
mov
in
adc
data16
xor
mov
cld
adc
(bad)
(bad)
sti
daa
cmp
mov
repnz
push
cmp
adc
fstp
jmp
dec
jg
push
ins
jg
ror
xlat
(bad)
scas
enter
stc
sub
mov
scas
iret
and
inc
xor
(bad)
(bad)
call
ret
mov
push
in
pop
aaa
test
enter
fwait
pop
inc
push
or
test
aam
cli
push
in
ror
inc
push
stc
dec
fdecstp
sahf
sub
pop
mov
jns
lods
in
shl
pop
add
jg
adc
sti
adc
or
ret
(bad)
(bad)
in
das
jmp
sahf
and
push
jns
jmp
jbe
add
cmps
stos
jo
(bad)
(bad)
push
outs
xchg
mov
mov
bound
jmp
sub
lods
sbb
test
(bad)
(bad)
(bad)
jmp
pandn
xlat
(bad)
mov
fnstsw
pop
add
sbb
fldcw
cmps
(bad)
popa
push
(bad)
(bad)
fisttp
sub
cmp
mov
iret
jl
cmps
xor
sub
mov
jmp
or
inc
push
in
push
test
jmp
or
lods
fmul
push
(bad)
(bad)
call
int3
mov
xor
sbb
outs
in
aas
mov
mov
push
xor
pop
pusha
lds
fiadd
mov
jmp
(bad)
ins
fwait
xor
jge
mov
outs
jbe
xchg
stos
adc
xchg
cli
sbb
out
mov
int3
js
mov
inc
test
jg
call
sbb
cmps
sbb
out
imul
outs
pusha
mov
jb
fcomip
inc
mov
xchg
inc
fwait
imul
sub
hlt
add
fwait
sub
cmp
sub
(bad)
(bad)
cmps
push
push
(bad)
iret
push
jb
js
cwde
pop
out
mov
sbb
dec
sub
pusha
sub
cli
cli
retf
inc
and
or
cwde
(bad)
jmp
clc
or
pop
cmp
cmps
push
lds
xor
mov
fbstp
(bad)
(bad)
std
mov
and
dec
cmps
ss
loope
push
cmp
hlt
xchg
popf
mov
(bad)
dec
imul
dec
ror
xchg
mov
test
dec
xchg
xor
push
hlt
sbb
adc
(bad)
mov
test
pop
pop
and
mov
arpl
fidivr
stos
call
je
cmp
adc
jg
jbe
fild
jo
sbb
in
(bad)
fiadd
(bad)
out
mul
push
jecxz
xchg
fs
pop
pop
clc
sti
int3
cli
sbb
jbe
cmp
pushf
das
jmp
jmp
shr
loopne
xchg
inc
pop
cmp
mov
out
jmp
lock
fmul
adc
lea
push
stos
out
inc
push
es
dec
fidivr
(bad)
(bad)
dec
pop
fwait
add
jb
jns
sub
mov
or
in
xchg
cmp
jnp
jle
retf
retf
mov
jl
lods
jno
jecxz
pop
(bad)
cmp
mov
cwde
push
or
test
(bad)
pop
mov
xchg
xor
mov
(bad)
fdivp
mov
inc
pusha
adc
xchg
dec
push
mov
pop
stos
std
(bad)
call
cld
fcomp
mov
(bad)
mov
jle
(bad)
mov
retf
(bad)
call
ins
ret
out
pop
fdivr
fistp
pop
cmp
out
out
call
sub
xchg
sbb
pop
call
outs
mov
(bad)
(bad)
(bad)
mov
dec
(bad)
retfw
aas
imul
jnp
arpl
(bad)
mov
imul
(bad)
(bad)
(bad)
jmp
sub
mov
dec
arpl
cmp
inc
out
push
aas
push
jecxz
jle
gs
(bad)
jmp
outs
in
mov
adc
push
or
aas
and
shl
xchg
add
push
mov
ret
call
xor
inc
cwde
(bad)
(bad)
(bad)
dec
rol
dec
xchg
inc
imul
cdq
cli
cmps
xor
or
and
test
inc
in
add
fdiv
or
adc
jmp
(bad)
(bad)
(bad)
jmp
push
cmp
cld
iret
sbb
mov
in
ret
sub
dec
call
fisttp
(bad)
(bad)
(bad)
jnp
and
ja
call
mov
popa
in
enter
xchg
mov
das
push
jmp
(bad)
(bad)
jg
inc
and
mov
jnp
out
scas
sub
mov
loope
mov
mov
or
jmp
cli
inc
mov
push
call
loope
cmp
adc
pop
rcr
in
pop
sbb
dec
inc
aad
and
popf
sub
push
jmp
(bad)
and
leave
scas
in
int
cmp
push
inc
push
xor
inc
in
and
xchg
push
popa
inc
xchg
mov
pop
and
ficomp
mov
inc
lea
call
and
cmps
xor
std
(bad)
(bad)
(bad)
in
call
loope
jno
out
mov
repz
repz
repz
or
aad
add
(bad)
(bad)
call
sub
push
sub
push
cmp
lock
arpl
ret
(bad)
(bad)
(bad)
(bad)
fsubr
pop
ss
push
mov
test
mov
push
push
push
or
xchg
and
(bad)
(bad)
push
push
iret
imul
cld
jecxz
push
in
jae
dec
fadd
xlat
xor
or
cli
(bad)
out
outs
stc
cwde
sub
ss
mov
xchg
in
cmp
jecxz
(bad)
(bad)
(bad)
aas
pop
pop
iret
ins
dec
outs
das
repz
je
shr
stos
clc
dec
and
mov
dec
(bad)
sub
mov
enter
inc
into
xor
sub
lods
cmc
sub
cld
into
dec
(bad)
(bad)
(bad)
push
shl
inc
add
xchg
aas
ins
xchg
pushf
add
leave
jae
cld
jge
mov
bound
fwait
jb
sbb
in
pop
or
mov
adc
(bad)
pop
xchg
je
out
in
jge
imul
rcl
jg
or
(bad)
(bad)
(bad)
(bad)
mov
ret
daa
push
(bad)
jge
sbb
mov
inc
add
and
das
scas
popf
pop
mov
(bad)
jmp
add
out
test
sub
retf
sub
xchg
repnz
icebp
ret
xchg
pop
push
inc
out
pusha
pop
(bad)
dec
push
push
(bad)
pushf
in
mov
stos
pusha
ins
adc
loope
hlt
sbb
mov
pushf
enter
inc
adc
inc
sbb
arpl
mov
xchg
pusha
cwde
cld
(bad)
(bad)
call
push
or
hlt
stc
jmp
shr
pop
stc
mov
inc
xlat
cmps
sar
push
loopne
mov
mov
outs
sbb
(bad)
(bad)
(bad)
call
xchg
pop
popf
sti
jmp
sti
icebp
and
ins
jo
xlat
cmp
jle
test
mov
or
outs
fnstcw
cmp
ins
repnz
loope
fcom
push
daa
jp
out
(bad)
(bad)
(bad)
(bad)
mov
(bad)
jmp
(bad)
xor
call
repz
pop
lods
push
lock
(bad)
push
dec
inc
mov
sbb
aas
clc
aad
fwait
cld
neg
adc
idiv
jmp
cld
dec
in
cmp
mov
jp
push
icebp
jns
shl
fild
lock
(bad)
jmp
sti
fist
outs
xchg
mov
push
sub
outs
inc
xchg
adc
(bad)
in
or
das
pusha
xchg
scas
xor
jl
mov
outs
iret
aaa
pop
fistp
fild
sub
pop
scas
in
(bad)
shl
sti
cvttps2pi
js
arpl
lahf
das
mov
mov
pop
or
mov
(bad)
call
jo
mov
add
cmps
xchg
sbb
inc
push
mov
in
mov
jne
or
(bad)
inc
in
and
sub
aaa
or
xchg
(bad)
push
std
out
mov
add
test
(bad)
(bad)
(bad)
(bad)
jns
cmp
js
mov
jne
pop
out
repz
sbb
in
fucomip
jo
lods
pop
add
mov
xchg
int3
rcl
movs
pop
dec
rol
sub
(bad)
(bad)
(bad)
fsubr
bound
xchg
push
mov
and
inc
add
push
imul
in
icebp
pop
sbb
cmp
and
in
mov
mov
pop
sbb
xchg
loopne
sbb
jnp
jnp
xchg
inc
jno
outs
cli
(bad)
push
scas
ror
call
je
ins
pop
jae
mov
jmp
cmp
cs
call
inc
movs
adc
and
mov
scas
(bad)
(bad)
fstp
ror
xchg
pop
inc
lahf
push
imul
mov
out
xlat
pop
jmp
(bad)
ss
mov
push
adc
outs
pop
sti
mov
add
mov
mov
inc
or
movs
xor
ds
test
int3
arpl
scas
and
push
ins
test
xchg
mov
nop
pop
(bad)
cld
xchg
mov
fdiv
aaa
sbb
xchg
sub
mov
jge
dec
movs
mov
cmp
mov
or
in
(bad)
mov
mov
pop
out
push
cld
ss
out
push
mov
fisubr
jne
(bad)
(bad)
(bad)
call
pop
retf
sub
fsubrp
dec
and
sbb
mov
xchg
jbe
mov
fwait
add
(bad)
inc
and
push
sbb
or
lahf
stc
and
test
rol
dec
dec
pop
sub
popa
(bad)
(bad)
(bad)
inc
pop
dec
cmp
jne
sahf
in
pop
mov
retf
into
jle
not
ja
and
(bad)
jmp
or
mov
fsub
xchg
add
sbb
pop
lock
adc
sbb
mov
jle
(bad)
push
sub
scas
sbb
and
sbb
push
sub
jle
mov
push
dec
scas
imul
(bad)
(bad)
(bad)
push
stos
das
push
mov
out
in
cwde
ins
jge
lds
scas
jge
xchg
adc
out
fcomip
push
mov
mov
lods
shl
push
inc
call
inc
push
test
(bad)
call
aad
fbstp
cld
fs
mov
into
xchg
cmp
pusha
shl
ja
xchg
jne
loopne
dec
ret
dec
(bad)
cld
cmp
imul
lahf
jl
(bad)
(bad)
mov
fldenv
icebp
sub
scas
xchg
sub
push
out
and
and
jmp
xor
sbb
xchg
stc
adc
pop
clc
arpl
movs
sub
jmp
mov
mov
iret
popf
sar
fcomp
jnp
jle
int
pop
data16
pop
jle
dec
outs
(bad)
cmp
cmps
div
aas
(bad)
std
aas
(bad)
ins
xor
(bad)
call
clc
cmp
and
or
hlt
mov
data16
shl
int
push
sub
(bad)
(bad)
call
stos
rcr
xchg
cli
fstp
repz
pinsrw
inc
clc
mov
and
push
in
jo
mov
and
test
fistp
sbb
and
adc
adc
call
mov
mov
and
push
sbb
dec
push
xor
adc
push
sbb
(bad)
(bad)
(bad)
cmp
push
push
push
xchg
cmps
call
sbb
mov
jo
add
(bad)
(bad)
call
push
sbb
jns
outs
es
ins
(bad)
in
xor
inc
test
cmp
cmp
jmp
fild
outs
clc
ja
adc
dec
push
inc
adc
into
jnp
into
sub
xor
call
inc
jge
dec
les
push
xor
push
popa
ja
pop
bound
or
(bad)
(bad)
jmp
ret
mov
test
cli
add
cld
pop
jns
jns
loopne
clc
mov
cld
jmp
movs
test
adc
test
push
sar
push
frstor
pop
sub
xor
or
(bad)
dec
jns
inc
sbb
sbb
inc
(bad)
jo
cs
inc
add
stc
jle
(bad)
(bad)
(bad)
mov
not
(bad)
push
pop
fistp
into
mov
jno
int
xchg
jl
ds
sbb
(bad)
push
in
js
push
inc
push
pop
test
addr16
or
retf
or
inc
sbb
hlt
loop
test
(bad)
(bad)
in
pusha
sbb
mov
out
(bad)
fdivr
push
sub
lds
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
pop
mov
push
add
or
(bad)
ret
adc
(bad)
movs
mov
ins
jns
inc
stc
adc
(bad)
(bad)
(bad)
inc
jbe
add
fs
test
pop
mov
stc
pop
sbb
push
dec
outs
mov
(bad)
(bad)
inc
and
push
into
(bad)
clc
ret
dec
inc
add
movs
and
into
fbstp
cli
jp
in
sbb
retf
stos
cs
sbb
push
mov
xor
aas
(bad)
(bad)
(bad)
(bad)
cmp
inc
add
lods
push
pop
add
mov
std
dec
sub
ret
mov
(bad)
(bad)
dec
fisub
neg
cwde
in
push
popf
out
cmps
pop
dec
push
lods
jl
repnz
(bad)
(bad)
(bad)
jmp
xor
out
mov
out
mov
pusha
frstor
mov
lods
adc
scas
cli
(bad)
cmp
mov
or
pop
jle
fstp
pop
push
add
push
jp
mov
jl
sbb
(bad)
cmp
mov
xchg
popa
mov
push
push
fistp
jb
mov
cld
fstp
(bad)
(bad)
(bad)
(bad)
stc
rcr
jno
inc
mov
sub
inc
jb
dec
rcr
ds
sub
cs
nop
std
leave
(bad)
push
(bad)
std
mov
mov
sbb
xchg
mov
mov
mov
mov
ficomp
enter
pop
aas
jl
je
(bad)
lods
scas
std
mov
dec
(bad)
(bad)
(bad)
(bad)
in
stc
jmp
lods
js
adc
or
sbb
jl
lds
fwait
(bad)
(bad)
call
cli
js
and
ret
imul
retf
or
sbb
mov
cmc
mov
leave
psubb
or
fwait
cld
out
test
cs
sbb
test
test
jmp
(bad)
cs
pand
dec
pop
jno
pushf
or
jmp
dec
out
bts
sti
push
jmp
rcl
std
jmp
std
(bad)
(bad)
call
into
adc
and
rol
xsavec
push
fnstcw
cli
scas
out
adc
or
jmp
push
ds
fsub
retf
ficomp
mov
ds
cli
(bad)
(bad)
(bad)
(bad)
push
jmp
mov
pop
jo
mov
add
repnz
int
(bad)
std
cld
test
std
(bad)
(bad)
jmp
xor
sbb
sub
mov
pop
cmps
fs
inc
xchg
scas
cli
(bad)
jmp
mov
push
out
popa
mov
push
push
mov
sar
(bad)
jmp
das
into
jl
ss
leave
ficom
jnp
jg
shl
stos
push
mov
pop
xchg
je
(bad)
push
hlt
sbb
mov
jbe
enter
add
retf
(bad)
call
adc
(bad)
cmps
adc
movs
and
cmp
pop
psubw
inc
(bad)
popa
aaa
add
(bad)
(bad)
jmp
cli
out
mov
lods
lods
dec
mul
scas
jbe
ret
icebp
dec
jne
loope
push
rcl
(bad)
jmp
mov
push
sahf
mov
mov
jmp
sti
pop
xchg
inc
pop
pop
(bad)
(bad)
(bad)
call
sbb
ins
aas
call
pandn
lods
and
lods
out
mov
mov
or
lea
jmp
inc
mov
lods
pushf
cmp
imul
das
cmp
movs
(bad)
(bad)
(bad)
jmp
push
pop
and
mov
jnp
popa
bound
sbb
and
inc
mov
rol
jmp
ins
in
sub
xor
repz
pop
(bad)
push
add
sbb
or
push
pop
pop
imul
and
jg
(bad)
call
xor
push
cmp
repnz
test
outs
(bad)
(bad)
(bad)
call
iret
ror
dec
test
jg
stos
jns
xor
add
imul
pop
xor
jp
dec
mov
std
(bad)
(bad)
(bad)
push
ret
and
mov
test
es
push
xor
jo
cs
cdq
push
jae
sub
xchg
cmp
push
jmp
sub
adc
mul
test
test
mov
int3
add
fadd
loop
xor
cli
pop
push
sub
mov
jmp
jne
(bad)
cs
jmp
sub
dec
rcl
in
(bad)
test
cmc
test
jge
mov
xchg
test
cld
push
dec
and
adc
ds
retf
loop
and
mov
cmps
xchg
scas
jl
(bad)
repnz
mov
sub
popa
pop
xor
push
lods
call
popf
adc
adc
adc
(bad)
(bad)
(bad)
call
jg
inc
icebp
xor
ja
movs
push
xchg
data16
stc
fcom
(bad)
mov
(bad)
(bad)
dec
or
xor
(bad)
nop
and
jae
pop
cmp
mov
neg
pop
dec
mov
(bad)
(bad)
(bad)
inc
fxch
mov
loope
push
into
inc
cmps
push
or
jno
fcmovnu
int3
xchg
ds
push
retf
cmps
mul
(bad)
(bad)
(bad)
push
stc
cs
push
sbb
cmc
jne
add
cmp
enter
(bad)
mov
push
mov
or
mov
xchg
xor
into
std
test
(bad)
(bad)
jmp
add
sbb
cli
sbb
sahf
pushf
out
pushf
and
pop
idiv
jae
repz
(bad)
(bad)
push
aas
add
call
iret
addr16
pop
jle
mov
mov
ret
(bad)
(bad)
cmp
aas
test
(bad)
in
(bad)
fdivr
iret
ins
mul
fmul
jl
cs
(bad)
(bad)
(bad)
jmp
dec
cmp
pop
lods
fnsave
xchg
ret
mov
ficomp
(bad)
(bad)
(bad)
inc
rol
stos
inc
inc
cwde
(bad)
mov
fwait
in
push
pop
jns
sbb
sub
(bad)
(bad)
(bad)
call
xor
fld
ret
dec
or
cmps
ja
push
enter
sbb
sbb
(bad)
(bad)
(bad)
call
push
pop
and
ror
mov
iret
pop
std
loopne
rcr
mov
adc
(bad)
(bad)
jmp
cmp
lods
pop
mov
ret
jo
pushf
or
adc
sub
xchg
call
mov
lea
mov
add
sub
push
xchg
xor
dec
xor
mov
dec
and
cmp
sub
addr16
dec
mov
in
cmc
mov
bound
push
sub
pop
sbb
dec
outs
div
outs
test
xchg
test
leave
sub
mov
pop
scas
add
out
clc
(bad)
call
pop
jmp
stos
out
stos
mov
in
call
sub
mov
mov
push
push
pop
adc
sbb
mov
push
test
(bad)
(bad)
(bad)
inc
cmp
xchg
jbe
loop
scas
mov
mov
or
adc
out
adc
call
(bad)
rol
cmp
iret
push
xchg
and
movs
dec
ins
(bad)
(bad)
(bad)
fbstp
inc
dec
sbb
jae
ror
leave
sub
or
add
or
cmp
mov
sub
imul
or
(bad)
mov
outs
xchg
bound
add
dec
in
loop
add
out
imul
sub
(bad)
(bad)
(bad)
inc
mov
cmp
xchg
cmp
jl
fidiv
int3
(bad)
les
lea
add
lock
cli
xor
lods
leave
inc
ror
sub
push
adc
mov
(bad)
(bad)
dec
push
cmp
push
arpl
sub
(bad)
mov
sar
mov
(bad)
(bad)
in
mov
mov
enter
test
jne
xor
or
out
imul
(bad)
(bad)
jmp
ins
cli
in
fcom
jp
(bad)
ins
push
fs
lock
pop
mov
(bad)
(bad)
(bad)
addr16
lds
aam
out
clc
mov
lods
sbb
add
(bad)
xchg
clc
jns
dec
popf
(bad)
(bad)
(bad)
call
mov
push
xchg
fdivr
(bad)
fisttp
mov
jle
mov
inc
out
data16
(bad)
(bad)
jmp
add
popf
add
sbb
out
sbb
mov
mov
enter
sub
(bad)
dec
enter
js
repz
push
xchg
ror
pop
inc
int3
adc
mov
cwde
stos
cmp
in
jno
jge
(bad)
lods
sub
(bad)
(bad)
cmp
cmp
and
fst
and
scas
push
inc
leave
mov
inc
hlt
inc
dec
shr
pop
dec
mov
ins
push
pop
pop
scas
push
and
(bad)
(bad)
in
scas
scas
icebp
jg
popa
mov
sahf
jmp
xor
xchg
mov
sbb
(bad)
(bad)
(bad)
mov
out
lods
sti
sbb
stc
jge
mov
retf
jge
dec
mov
int3
jnp
(bad)
(bad)
(bad)
jmp
lea
sbb
in
inc
retf
mov
pop
ja
jge
mov
or
inc
push
call
cmp
rcr
fidiv
inc
or
(bad)
(bad)
(bad)
dec
jl
mov
dec
ret
dec
sti
cmp
and
ret
cmps
hlt
in
pusha
(bad)
(bad)
(bad)
jmp
jo
loopne
repnz
add
mov
inc
jno
mov
(bad)
(bad)
cmp
or
pop
push
mov
mov
fsubr
push
sbb
test
repz
js
ret
jnp
sub
cli
(bad)
(bad)
xchg
or
jnp
imul
stos
aas
push
cmps
adc
xchg
cmps
inc
js
ds
aaa
push
jp
pop
dec
xor
popa
dec
addr16
push
(bad)
adc
and
lahf
cli
jae
push
call
call
sti
pop
and
mov
nop
adc
add
ret
push
or
(bad)
call
lock
repz
jmp
sbb
push
sahf
not
sahf
(bad)
(bad)
call
fwait
out
lods
lds
mov
mov
inc
add
test
inc
adc
(bad)
(bad)
(bad)
inc
arpl
out
popf
jae
ror
push
sub
retf
pusha
das
sub
pop
push
cwde
aad
mov
push
std
movs
mov
pop
inc
sub
jmp
add
mov
ret
jl
(bad)
(bad)
push
mov
xchg
or
repz
pop
and
popf
iret
sbb
push
xor
push
mov
push
inc
cld
inc
sub
mov
icebp
xchg
inc
stos
ret
es
call
inc
inc
cmp
and
jl
stc
sbb
outs
hlt
aam
adc
jno
test
lock
(bad)
push
inc
jmp
pop
adc
mov
jmp
xchg
pop
jbe
lock
retf
out
push
pop
pop
addr16
test
jecxz
xchg
out
outs
and
(bad)
push
cld
dec
jge
cmps
arpl
push
xchg
sbb
(bad)
jns
iret
ins
xor
(bad)
mov
movs
pop
and
jg
mov
xor
dec
sbb
mov
xchg
mov
xor
repz
mov
(bad)
push
adc
push
rol
cmp
fwait
jg
(bad)
out
or
jmp
test
(bad)
cmp
out
mov
addr16
(bad)
pop
iret
mov
stc
xor
addr16
sar
sbb
stos
(bad)
(bad)
jg
(bad)
xchg
mov
cmp
dec
test
dec
or
stc
mov
sub
add
fistp
inc
sahf
sub
sbb
jge
popa
cmp
jge
push
xor
int3
test
cmp
aad
cmp
xor
sti
xchg
into
pop
jnp
popa
outs
sbb
(bad)
(bad)
jmp
int
loop
pop
gs
and
mov
or
fmul
stc
mov
sbb
call
fwait
adc
in
xchg
jle
out
or
(bad)
xchg
imul
in
std
jmp
(bad)
push
cld
inc
out
jg
(bad)
adc
data16
push
lock
jo
ror
outs
pop
jne
push
pop
add
(bad)
(bad)
call
outs
or
adc
test
sahf
sti
mov
in
jbe
pop
idiv
scas
clc
sbb
retf
das
jo
stc
sti
pop
ss
std
mov
ja
aas
jmp
(bad)
(bad)
jmp
dec
xor
mov
dec
dec
loop
stos
aad
sub
or
push
mov
dec
std
add
sbb
fs
stc
das
jge
std
adc
push
and
rol
push
(bad)
(bad)
(bad)
jmp
inc
or
in
add
inc
push
pop
mov
pop
test
dec
add
scas
outs
ins
sbb
out
cmps
mov
ret
inc
sub
rcl
cmp
(bad)
jmp
cld
mov
xchg
mov
fdiv
add
push
stc
retf
xchg
dec
cmp
dec
movs
mov
mov
(bad)
inc
sub
or
popa
and
ret
ss
popa
dec
push
cmp
(bad)
(bad)
fcomip
mov
lahf
sahf
mov
cld
adc
rol
cmp
(bad)
(bad)
(bad)
call
push
push
pop
push
push
dec
pop
mov
pop
or
or
sub
enter
and
aaa
test
in
(bad)
pop
xchg
jmp
push
test
cmp
ins
push
stos
fmul
(bad)
(bad)
jmp
jae
or
cld
add
repz
(bad)
stos
sbb
ror
mov
adc
clc
ins
stos
sahf
sbb
jbe
cmp
mov
in
or
dec
inc
sub
mov
mov
sbb
xor
xchg
test
mov
sbb
mov
push
es
jmp
shl
xchg
jae
out
int
push
pop
pushf
cdq
dec
bound
and
(bad)
inc
mov
xchg
lock
jae
mov
ins
fcomp
xlat
cmp
cdq
fisttp
popa
fcomip
(bad)
(bad)
cmp
sbb
mov
fldenv
xor
ret
xchg
iret
(bad)
(bad)
(bad)
dec
mov
and
in
pusha
and
xchg
bswap
addr16
pop
add
add
cmp
ins
cmps
into
aaa
push
xlat
pop
(bad)
(bad)
(bad)
jmp
fst
in
dec
retf
adc
jg
xchg
cmp
ja
ret
push
and
mov
pop
jbe
and
sbb
mov
push
fs
(bad)
jmp
cmp
inc
mov
add
clc
xor
nop
(bad)
(bad)
(bad)
(bad)
push
inc
call
daa
mov
adc
(bad)
call
ds
movhps
(bad)
call
(bad)
jmp
iret
jnp
jle
inc
mov
pop
add
mov
(bad)
(bad)
(bad)
call
jmp
out
jne
mov
out
jmp
inc
sub
lods
cdq
(bad)
(bad)
(bad)
mov
pop
xor
test
cmc
inc
xor
pop
cld
(bad)
mov
je
mov
mov
shl
cmc
cmp
movs
jo
inc
(bad)
(bad)
(bad)
(bad)
jmp
sub
jb
adc
repnz
and
(bad)
pop
xlat
call
(bad)
jmp
bnd
dec
retf
and
jae
loopne
inc
enter
sub
push
xor
cld
das
rol
xchg
mov
int3
aam
ins
jne
scas
ds
push
stc
mov
xor
pop
or
cwde
jns
cli
xchg
jle
mov
xchg
adc
popa
jb
(bad)
call
xchg
xchg
daa
(bad)
jae
cmp
xchg
jne
mov
fucompp
ja
(bad)
(bad)
(bad)
call
pop
retf
or
cmp
mov
xor
ins
lods
push
stc
repz
scas
dec
pop
in
(bad)
(bad)
(bad)
inc
neg
icebp
or
int
retf
jne
pop
jmp
pop
inc
cli
xchg
ret
sub
mov
xchg
cmc
(bad)
(bad)
(bad)
call
pop
retf
es
rcl
or
pop
xchg
inc
test
std
mov
lahf
pop
clc
loope
sar
outs
call
stos
int
push
nop
mov
mov
scas
cmp
jle
jle
aaa
cld
sbb
test
add
jmp
ja
and
push
add
jns
sbb
inc
inc
cmp
add
(bad)
inc
mov
(bad)
cmp
aam
mov
je
test
cdq
sbb
dec
call
out
aas
dec
leave
jmp
add
add
jle
sub
cmp
in
inc
(bad)
(bad)
(bad)
push
fnstcw
push
lds
sbb
ins
out
sti
ja
fidivr
outs
(bad)
dec
jne
mov
jmp
push
retf
xor
(bad)
jecxz
(bad)
(bad)
push
nop
push
lods
aam
push
inc
mov
(bad)
lods
(bad)
cmc
mov
out
jns
push
repz
jmp
ret
sbb
into
sbb
stos
jnp
scas
push
retf
jp
(bad)
(bad)
jmp
cli
mov
push
push
dec
gs
in
es
or
(bad)
(bad)
jmp
dec
cmps
adc
fstp
pop
leave
mov
mul
xchg
repz
cmps
sub
jmp
in
(bad)
(bad)
jmp
jecxz
stos
xchg
sbb
mov
popf
xor
rcl
jle
pop
dec
loope
(bad)
(bad)
jg
out
bound
mov
xchg
mov
test
and
fisttp
mov
je
and
push
scas
sbb
push
or
pusha
mov
(bad)
(bad)
dec
xchg
sub
adc
addr16
push
jne
es
mov
jl
repnz
jb
xchg
mov
push
ret
(bad)
mov
aam
out
jo
mov
push
xlat
and
cld
(bad)
jg
mov
fist
shl
pop
(bad)
xor
pusha
sub
mov
push
inc
aaa
popa
bound
fld
sub
pushf
dec
outs
dec
popf
fwait
(bad)
mov
cmc
fucomi
ret
push
loopne
mov
and
dec
popa
or
(bad)
call
rcr
cli
lods
adc
jne
les
and
push
std
cmp
or
jg
(bad)
(bad)
jmp
mov
call
mov
pop
jle
jecxz
rol
(bad)
(bad)
(bad)
(bad)
(bad)
dec
jns
movs
push
or
pop
jbe
cli
(bad)
call
adc
sub
mov
push
sahf
cmp
cld
cdq
push
outs
fld1
out
shld
push
out
mov
fcomip
xchg
(bad)
(bad)
(bad)
jmp
or
push
xchg
ja
push
lock
xor
push
cmp
mov
cmps
imul
icebp
adc
and
lods
jnp
xchg
xchg
fild
neg
push
imul
icebp
mov
jmp
rol
pusha
nop
inc
fs
into
addr16
ins
cmp
mov
inc
out
outs
add
or
(bad)
(bad)
call
xor
iret
inc
and
jnp
sub
and
inc
cmp
(bad)
(bad)
(bad)
call
(bad)
mov
push
lods
jbe
dec
push
xchg
fwait
mov
aam
iret
mov
push
cwde
dec
xor
(bad)
(bad)
(bad)
call
in
add
add
scas
and
out
scas
mov
bound
push
outs
into
out
aas
mov
out
stc
mov
in
mov
cld
mov
inc
adc
jmp
mov
(bad)
(bad)
(bad)
fnstcw
add
jne
jnp
sahf
sti
pop
pop
enter
mov
push
mov
sar
arpl
(bad)
(bad)
jmp
dec
xor
jae
sbb
aas
sahf
add
xor
mov
xlat
fsubr
(bad)
(bad)
(bad)
(bad)
stc
cmp
mov
fsubp
and
mov
mov
mov
(bad)
(bad)
inc
xchg
xchg
pop
shr
cmp
inc
jns
repz
mov
sub
sti
(bad)
(bad)
inc
push
in
mov
xor
mov
bound
test
call
sub
(bad)
(bad)
(bad)
inc
adc
jnp
daa
add
jmp
add
sub
mov
rcl
mov
in
(bad)
(bad)
call
push
addr16
imul
mov
bound
repnz
xchg
outs
(bad)
fcomip
dec
add
jge
jbe
mov
dec
sub
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jg
mov
push
sahf
popf
cs
dec
movs
ficom
(bad)
fucomp
jb
mul
shl
or
sbb
fld
in
ret
xchg
data16
pop
adc
sti
jbe
cmc
(bad)
push
nop
push
and
aad
push
xchg
dec
mov
dec
call
dec
adc
in
mov
pop
sub
dec
cmp
rcl
mov
jmp
std
push
push
jbe
pusha
mov
test
pop
xchg
jmp
in
iret
pop
fcomp
mov
push
inc
jnp
in
dec
mov
cmp
lods
bound
cli
(bad)
fadd
lods
mov
jne
daa
leave
cmps
cld
addr16
jbe
or
(bad)
call
cmp
inc
retf
shl
ror
ret
sub
scas
or
aaa
xchg
push
cmps
jmp
jg
(bad)
jmp
pusha
hlt
std
jle
xchg
addr16
adc
aam
(bad)
(bad)
retf
(bad)
popf
or
sbb
push
xchg
push
loop
mov
sbb
into
movs
(bad)
(bad)
(bad)
push
push
dec
pop
lahf
cmp
cvtps2pi
outs
sbb
jne
pop
mov
mov
pop
jne
lock
(bad)
(bad)
inc
jp
mov
stos
xchg
scas
inc
popa
mov
mov
test
and
(bad)
(bad)
mov
movs
pop
push
sar
push
bnd
xlat
add
std
sbb
fbld
mov
add
mov
cld
jg
lahf
mov
loope
push
js
call
dec
fdivp
inc
test
add
pop
add
out
ins
(bad)
std
cdq
sub
inc
cmps
shl
mov
into
test
jp
fcmovb
add
enter
jle
cdq
inc
outs
mov
lea
call
mov
jns
mov
outs
(bad)
inc
xchg
retf
mov
loop
pop
mov
loopne
cmp
pop
or
push
jecxz
inc
dec
ror
(bad)
inc
sbb
mov
adc
add
loope
push
hlt
dec
std
and
iret
xor
cdq
inc
cmp
cli
nop
fwait
mov
test
lods
fucomi
je
adc
dec
jp
inc
push
xor
cmps
mov
cmp
cli
jo
pop
inc
or
pop
cld
mov
xor
jae
stos
bound
add
(bad)
out
call
data16
lahf
add
pop
jae
cmps
movs
push
push
push
mov
fldcw
cmp
(bad)
(bad)
(bad)
sti
fnsave
faddp
imul
sub
ja
scas
inc
jb
inc
sbb
fs
outs
adc
push
ror
ds
xor
add
mov
inc
js
out
fdivrp
idiv
fisttp
mov
fs
ja
repnz
xchg
frstor
jg
rcr
(bad)
(bad)
(bad)
dec
(bad)
mov
jg
repnz
mov
mov
mov
mov
sub
(bad)
(bad)
jmp
ss
mov
cmp
adc
xor
mov
(bad)
(bad)
fbld
adc
fwait
xor
push
sbb
xchg
cmps
pop
shl
(bad)
(bad)
jmp
or
clc
or
pop
mov
push
mov
jno
sbb
stc
lock
sti
(bad)
(bad)
(bad)
(bad)
inc
(bad)
inc
and
jge
and
mov
cmp
ror
jb
mov
xchg
(bad)
jmp
adc
sbb
pop
popa
jnp
(bad)
add
fstp
cmps
movs
repnz
sti
dec
js
jmp
(bad)
ins
xor
dec
jmp
ficomp
jmp
daa
jnp
(bad)
inc
or
(bad)
(bad)
in
jp
sub
adc
fimul
jmp
dec
scas
jl
xchg
push
xchg
into
add
shl
data16
(bad)
(bad)
(bad)
jmp
mov
cmc
sub
mov
lods
jmp
sub
add
xor
(bad)
(bad)
(bad)
call
or
fcom
sbb
pushf
std
xchg
push
sbb
pop
out
shl
or
(bad)
call
dec
and
into
sub
jno
sub
add
pop
aad
test
pop
sahf
dec
add
add
push
(bad)
idiv
ins
retf
mov
into
and
mov
add
mov
popa
mov
and
mov
(bad)
call
stos
sar
mov
icebp
push
push
(bad)
call
cld
out
cmp
or
scas
lods
jno
scas
push
and
or
(bad)
(bad)
(bad)
push
ja
fimul
push
jl
jo
push
adc
ins
xor
stc
pop
dec
xchg
or
mov
(bad)
(bad)
jmp
and
retf
clc
pushf
int3
mov
and
aad
cmc
pop
jns
repnz
retf
(bad)
cwde
xor
xor
test
je
adc
(bad)
rol
(bad)
(bad)
(bad)
mov
sub
loopne
mov
(bad)
imul
ror
lock
push
(bad)
jg
mov
(bad)
ficomp
jmp
dec
xchg
mov
in
into
(bad)
(bad)
(bad)
dec
mov
mov
xchg
std
add
mov
hlt
out
ficomp
jmp
lds
cmc
(bad)
(bad)
(bad)
inc
into
mov
push
xchg
addr16
adc
sbb
jecxz
xor
(bad)
jmp
push
or
push
mov
adc
stos
jge
xchg
(bad)
(bad)
in
mov
dec
pop
push
mov
push
inc
sbb
outs
scas
test
(bad)
(bad)
(bad)
jg
call
and
pop
pushf
xor
jecxz
sbb
clc
(bad)
(bad)
jmp
mov
sbb
pop
fs
and
add
(bad)
(bad)
dec
popa
pop
mov
out
in
ret
pop
test
jno
mov
dec
push
stc
mov
push
scas
and
(bad)
(bad)
(bad)
jmp
fwait
pop
mov
mov
dec
dec
add
call
jo
fdivr
outs
adc
jge
dec
cmp
call
retf
fsubr
jl
mov
ret
mov
sub
jge
adc
rcr
sar
adc
(bad)
movs
iret
mov
scas
std
mov
out
pop
cld
(bad)
call
jmp
test
pusha
or
mov
adc
xchg
popa
leave
int
sub
(bad)
fstp
jmp
mov
inc
(bad)
jmp
pop
hlt
call
sbb
in
jl
or
push
sub
test
cmp
jno
push
jb
sub
pop
jmp
mov
mov
inc
sbb
sbb
call
(bad)
jg
push
mov
fild
add
xor
dec
pusha
ins
fisttp
mov
(bad)
(bad)
(bad)
mov
pop
push
lea
xchg
mov
sub
sahf
stc
sub
(bad)
(bad)
mov
rcl
mov
enter
add
cmp
cli
loope
popf
shr
xchg
push
mov
(bad)
(bad)
(bad)
jmp
xchg
fwait
cmp
xchg
jg
adc
or
adc
sub
test
inc
pop
xor
cmp
push
add
(bad)
(bad)
(bad)
call
mov
push
ja
scas
fcmovne
fld
out
(bad)
mov
xor
sub
mov
ja
int
call
sub
movs
repnz
ret
add
(bad)
call
je
loop
in
xchg
outs
mov
pushf
or
sub
dec
adc
(bad)
(bad)
mov
xchg
ret
loope
jae
popa
dec
aas
xchg
dec
push
jne
mov
add
cmp
and
(bad)
(bad)
push
jbe
push
sbb
adc
dec
retf
stos
sbb
xor
or
es
xor
aad
push
xchg
push
sub
or
nop
into
(bad)
sti
and
(bad)
(bad)
(bad)
stc
popa
inc
inc
and
ror
sbb
mov
jb
adc
es
xchg
push
int3
aas
push
mov
into
(bad)
(bad)
(bad)
jmp
mov
mov
lods
bnd
push
and
shl
icebp
ins
lock
mov
dec
icebp
(bad)
(bad)
dec
fnstenv
jnp
push
pop
add
sar
fdivr
push
pop
push
pop
lods
mov
call
mov
adc
call
add
cmps
adc
out
hlt
(bad)
(bad)
(bad)
jmp
inc
xor
gs
mov
pusha
test
jp
repz
shr
mov
and
xchg
(bad)
(bad)
jg
stos
sbb
mov
inc
mov
jg
outs
fdivr
addr16
jge
in
rol
(bad)
call
scas
xchg
fisttp
cwde
sahf
clc
mov
xor
(bad)
sub
addr16
jo
add
(bad)
(bad)
mov
cmp
push
imul
push
imul
jb
(bad)
jmp
test
add
sub
jno
adc
inc
or
stos
(bad)
(bad)
mov
inc
(bad)
dec
xchg
jl
inc
loope
aad
xchg
sub
mov
(bad)
in
and
inc
xor
jb
in
push
xor
dec
or
leave
sbb
(bad)
dec
cmp
int
mov
add
imul
imul
inc
pop
mov
retf
dec
cmp
loope
inc
sbb
dec
jnp
pop
jmp
mov
aas
sub
loopne
xor
mov
dec
adc
enter
jb
retf
jne
call
and
loope
pushf
inc
mov
push
cld
sahf
jl
cmp
call
mov
ror
mov
jmp
jne
fistp
xchg
sti
cmp
jmp
push
outs
mov
rcr
imul
pop
scas
js
aas
sub
(bad)
inc
out
in
fild
cld
inc
in
fs
clc
ficomp
sub
or
jmp
pop
sub
mov
xchg
(bad)
(bad)
shr
jmp
push
into
in
lock
jmp
fwait
push
sar
(bad)
(bad)
fbld
jmp
mov
jle
popf
cmp
call
sub
jo
(bad)
jmp
popa
mov
adc
js
repz
sar
sbb
(bad)
jmp
stc
sbb
and
pop
mov
aas
sub
outs
in
daa
aam
arpl
inc
cld
and
and
cmp
dec
pop
aas
push
out
sub
test
aas
mov
(bad)
(bad)
inc
leave
push
stos
xchg
aad
out
inc
push
cmp
fs
pop
(bad)
pop
(bad)
sar
jmp
jne
imul
push
mov
pop
cmp
pop
loopne
xchg
(bad)
(bad)
call
ins
aas
jge
ja
out
add
dec
ret
push
pop
lds
pop
pop
sub
fcomip
pop
nop
movs
xchg
sub
test
cmp
adc
ins
scas
or
lods
test
cld
outs
js
mov
cmp
(bad)
movs
loope
mov
in
dec
pop
aam
mov
inc
repnz
movs
out
cmps
push
or
inc
or
in
xor
rol
lods
ds
jecxz
mov
jnp
test
jg
icebp
int3
popf
xor
inc
(bad)
dec
push
test
movs
sub
push
sar
jmp
jmp
mov
mov
or
xor
stos
dec
lock
adc
cli
pushf
nop
arpl
sbb
stc
nop
(bad)
mov
(bad)
cmp
ds
xchg
sbb
fwait
ja
add
mov
(bad)
(bad)
jg
movs
in
call
aam
or
ss
das
adc
xcrypt-cbc
cmps
push
in
cmp
add
ror
out
frstor
jmp
aam
lock
xlat
hlt
pop
ds
mov
in
ret
jmp
lods
(bad)
jg
pop
mov
xchg
imul
loope
std
pop
in
jo
mov
mov
fwait
mov
mov
lods
fucomi
out
loopne
mov
loop
sahf
xchg
(bad)
mov
xor
pusha
sahf
aaa
test
xor
jl
jnp
outs
fsubr
mov
and
push
jb
add
hlt
les
or
daa
cmp
(bad)
call
ror
pop
cmps
push
aas
push
adc
inc
into
push
jl
push
push
sbb
add
(bad)
(bad)
(bad)
fidiv
push
sub
into
out
pop
(bad)
mov
or
mov
retf
or
(bad)
(bad)
(bad)
call
call
add
push
push
pusha
push
inc
ja
sub
lea
add
mov
(bad)
call
jnp
mov
pop
lods
and
leave
std
or
fimul
xchg
and
xor
int3
js
pusha
int
jae
clc
jmp
div
outs
fdivrp
(bad)
(bad)
call
je
jmp
push
cmp
repnz
pop
ins
in
adc
outs
fwait
adc
mov
dec
dec
pop
fadd
int3
movs
stos
rcl
popa
dec
popf
mov
lods
jae
jae
cdq
sbb
call
mov
enter
sub
or
test
jecxz
dec
iret
xchg
aas
das
les
daa
sti
outs
sub
ret
lock
(bad)
(bad)
call
adc
xchg
(bad)
out
sub
cwde
mov
mov
repnz
sti
xor
loop
sahf
add
lahf
sub
(bad)
inc
pop
pop
jb
sar
fcmovbe
adc
xchg
call
mov
sub
inc
adc
push
in
dec
pop
ins
repnz
(bad)
(bad)
(bad)
fisttp
lock
mov
std
adc
jecxz
pop
mov
cmp
or
add
or
(bad)
push
add
cmp
sbb
repz
(bad)
(bad)
jmp
push
je
out
or
cmps
gs
(bad)
jmp
mov
jg
stos
out
aaa
jl
(bad)
fcomp
and
cmp
(bad)
adc
inc
sub
mov
and
out
repz
jnp
(bad)
std
jnp
cmp
aad
cmp
(bad)
(bad)
(bad)
call
popf
stc
mov
push
and
sbb
dec
mov
out
arpl
jmp
pop
and
(bad)
(bad)
jns
loopne
mov
fldcw
rcl
lahf
pop
jmp
xchg
cvtpi2ps
sub
sub
pop
xchg
(bad)
mov
in
adc
add
adc
(bad)
(bad)
push
nop
rcl
aam
out
cli
cmp
jo
push
push
imul
sbb
and
mov
(bad)
(bad)
(bad)
dec
std
and
mov
sbb
mov
lea
xor
daa
xchg
test
push
repnz
or
cs
jbe
dec
(bad)
call
push
xchg
adc
sub
mov
mov
test
mov
or
(bad)
push
and
mov
aad
shl
sub
mov
scas
(bad)
jl
mov
repnz
outs
dec
push
add
out
add
sbb
(bad)
(bad)
push
cli
addr16
inc
and
jecxz
popa
jne
sub
sar
cmp
ja
xchg
and
dec
jbe
jg
not
pop
ja
mov
xor
in
js
cmp
jecxz
(bad)
ss
(bad)
fcomip
cmc
sub
nop
cmp
imul
push
call
jnp
inc
pop
es
(bad)
(bad)
(bad)
(bad)
jg
jo
repnz
js
xchg
mov
mov
addr16
add
stc
jmp
jne
mov
sbb
test
inc
jecxz
into
push
jnp
push
call
xor
js
cs
mov
push
cld
inc
adc
dec
and
add
repnz
iret
mov
push
jge
sbb
xchg
and
pop
cmp
(bad)
repz
out
mov
data16
cmp
inc
fld
jmp
add
or
pop
dec
lea
jns
mov
or
jge
xlat
ins
(bad)
(bad)
fcomip
fdiv
rcl
enter
push
or
xlat
mov
push
(bad)
push
ja
call
leave
leave
and
push
mov
pop
ror
test
xchg
(bad)
aas
int3
imul
jg
(bad)
mov
dec
fcmovu
mov
aaa
push
(bad)
(bad)
(bad)
call
sbb
icebp
mov
cmp
mov
ins
dec
lods
arpl
sbb
(bad)
out
cmp
(bad)
(bad)
(bad)
push
imul
icebp
sub
loope
mov
xor
aam
sahf
or
hlt
aaa
pop
xchg
ja
jmp
(bad)
(bad)
(bad)
(bad)
mov
daa
or
jge
dec
and
retf
pop
hlt
cs
(bad)
out
repnz
jle
fst
mov
pop
std
sbb
(bad)
(bad)
int3
sbb
clc
inc
ss
cmc
xchg
hlt
adc
shl
sub
(bad)
dec
out
test
pusha
test
cmp
int
lods
movs
(bad)
ja
mov
xchg
jmp
jo
mov
add
stos
inc
out
sbb
push
(bad)
mov
cmps
lock
xor
pop
adc
aam
mov
mov
xor
(bad)
(bad)
(bad)
(bad)
cli
fisttp
and
fdivr
imul
add
leavew
jmp
sub
or
hlt
cmp
(bad)
jmp
inc
sub
sub
xchg
jns
stos
cmp
dec
push
stc
in
jo
adc
std
sub
int3
scas
(bad)
(bad)
inc
adc
add
xchg
cdq
sbb
ret
retf
sbb
hlt
mov
loop
push
ins
mov
add
lods
jne
retf
jbe
mov
cmp
loope
push
xchg
sub
pop
mov
std
nop
sbb
ficomp
dec
inc
add
pop
in
in
test
dec
dec
ds
push
(bad)
(bad)
(bad)
push
rol
movs
cmps
inc
sahf
fwait
retf
cmp
push
and
mov
sub
inc
cmp
jmp
loope
xchg
add
data16
xor
addr16
adc
inc
sbb
(bad)
(bad)
(bad)
dec
push
push
and
clc
and
push
rol
shl
popa
fadd
xlat
call
nop
add
(bad)
(bad)
call
movs
inc
push
push
ja
clc
sub
jne
mov
lods
push
daa
push
outs
inc
cmps
cmc
jp
push
daa
jae
cs
inc
(bad)
(bad)
(bad)
call
out
mov
std
xor
test
js
repz
xchg
add
ins
jmp
sti
(bad)
(bad)
(bad)
call
imul
adc
jmp
imul
mov
ud0
(bad)
(bad)
jl
out
mov
and
pop
add
rol
push
rol
sbb
stos
jl
(bad)
(bad)
(bad)
call
movs
addr16
xor
call
xor
rol
cmp
fidivr
jg
mov
(bad)
out
outs
mov
mov
outs
pop
call
(bad)
test
mov
cmp
sti
or
mov
xor
inc
rol
in
jl
fwait
dec
xor
ds
jg
outs
clc
adc
cmp
cli
jnp
or
push
imul
mov
stos
cld
add
pop
scas
push
loop
retf
mov
retf
scas
mov
sub
cmps
adc
(bad)
dec
cmp
push
ret
pop
(bad)
mov
mov
or
pushf
inc
sbb
(bad)
(bad)
fild
xchg
lods
xchg
pop
mov
sub
rcl
ds
inc
(bad)
push
xchg
xor
arpl
bnd
sar
xchg
scas
popf
stc
fwait
mov
(bad)
push
and
(bad)
or
jae
xor
test
jmp
(bad)
(bad)
(bad)
jmp
dec
dec
cmp
iret
pushf
jge
out
push
aam
cmps
mov
jle
jo
es
xchg
jbe
(bad)
out
cli
iret
in
pop
cmp
loope
popa
jmp
(bad)
fidiv
xchg
mov
pop
lds
mov
push
push
cli
sbb
cs
(bad)
(bad)
jmp
jecxz
ja
js
cli
inc
jmp
idiv
shl
jae
ds
cmc
lods
jno
dec
pop
sub
test
mov
(bad)
(bad)
call
lock
cmp
sti
idiv
aaa
ins
repnz
(bad)
call
mov
lahf
(bad)
dec
and
cld
test
dec
out
nop
lea
imul
(bad)
dec
stos
mov
aaa
pop
(bad)
xor
cwde
aad
xor
cmp
sbb
aas
jl
pop
fnstsw
add
arpl
adc
fcom
xchg
clc
(bad)
(bad)
jnp
jbe
adc
nop
inc
repnz
(bad)
ins
xor
pop
setle
(bad)
inc
(bad)
(bad)
out
fiadd
je
sbb
movs
stos
mov
test
pop
(bad)
(bad)
(bad)
dec
push
mov
stc
out
xor
mov
push
ja
add
add
ror
xor
bound
xchg
(bad)
(bad)
(bad)
push
fcomp
mov
sub
or
dec
push
sub
scas
push
sbb
ret
(bad)
(bad)
(bad)
(bad)
cmp
mov
in
cmc
jg
dec
stc
mov
and
ins
or
mov
out
add
aaa
add
mov
push
inc
sbb
push
cld
adc
scas
(bad)
(bad)
jmp
icebp
pop
mov
cmp
inc
jb
jmp
repnz
and
xchg
(bad)
(bad)
(bad)
call
iret
and
jg
popa
inc
ret
cmps
call
out
loop
push
fld
or
xor
out
test
loop
adc
repz
cmps
inc
cmp
mov
inc
fwait
icebp
inc
aaa
push
cmc
(bad)
call
(bad)
(bad)
(bad)
inc
in
and
adc
sbb
cdq
iret
or
in
popf
dec
(bad)
popf
(bad)
(bad)
(bad)
mov
mov
or
mov
ret
jo
and
paddsb
cmc
jae
mov
(bad)
(bad)
(bad)
(bad)
mov
aaa
jge
xchg
ss
outs
ss
jge
inc
and
pop
inc
push
or
jge
(bad)
(bad)
(bad)
(bad)
jmp
mov
test
call
push
retf
mov
and
adc
add
cmp
mov
idiv
stos
cmp
sbb
mov
or
(bad)
out
cwde
push
push
inc
lahf
jo
pop
(bad)
jle
scas
popf
iret
(bad)
(bad)
(bad)
jmp
int3
std
popf
mov
mov
jb
in
add
or
test
leave
mov
shl
sbb
sub
out
pop
adc
(bad)
(bad)
(bad)
push
pusha
fisttp
je
sbb
out
call
out
lea
cld
jmp
in
xlat
xchg
dec
adc
ss
in
mov
jle
push
inc
sar
(bad)
(bad)
in
mov
jnp
lds
pop
push
push
push
loopne
xchg
push
std
inc
add
das
pushf
dec
ja
add
arpl
stos
mov
jg
in
(bad)
xor
jmp
dec
dec
jl
cmp
adc
push
aaa
or
jmp
mov
sub
pop
inc
arpl
imul
clc
dec
push
int
cmp
mov
in
cwde
aam
xor
movs
stos
test
(bad)
(bad)
mov
jb
sbb
jl
(bad)
loopne
inc
aad
sub
push
(bad)
(bad)
call
pop
mov
inc
mov
ja
int
and
jl
mov
sbb
mov
(bad)
(bad)
push
push
pop
lods
sti
neg
imul
gs
test
mov
call
test
(bad)
fsub
lahf
sti
repz
and
pop
or
ja
(bad)
call
add
mov
push
dec
xchg
out
rol
ss
xchg
(bad)
(bad)
mov
xchg
and
pop
lds
mov
push
jecxz
(bad)
and
jmp
mov
xchg
push
lds
mov
or
shr
push
movs
mov
pop
push
adc
mov
in
lock
jnp
push
sbb
and
jb
dec
mov
mov
pop
lock
push
push
out
mov
mov
jge
jp
sub
out
out
(bad)
fiadd
(bad)
(bad)
fidivr
pop
xchg
push
ds
cs
mov
pop
fcom
push
leave
ret
push
ins
paddq
dec
jns
(bad)
(bad)
jmp
push
std
cmp
push
gs
sbb
mov
mov
sub
dec
fisubr
and
(bad)
(bad)
jmp
cmc
popa
sub
mov
sbb
cdq
cli
nop
shl
mov
neg
sti
pop
jle
(bad)
(bad)
jmp
xchg
mov
add
pop
popf
test
pop
rcr
cmps
mov
cmp
pop
cmps
xchg
mov
(bad)
(bad)
cmp
shl
fisttp
mov
enter
das
sub
mov
jmp
cmps
lock
add
aam
pop
pop
mov
repz
inc
pushf
xlat
jns
push
fmul
lods
shl
out
mov
inc
mov
adc
cwde
sbb
mov
hlt
stos
outs
cmp
pop
aam
test
dec
xchg
rcl
inc
sub
push
jmp
ret
out
dec
mov
dec
jmp
(bad)
(bad)
call
xchg
sub
dec
fprem
mov
sub
pop
ins
mov
jg
rol
test
idiv
cmp
fstp
movs
frstor
call
aad
scas
imul
dec
mov
sub
hlt
push
or
mov
lods
(bad)
(bad)
call
cmc
cmp
scas
(bad)
mov
mov
cmp
ficom
pop
dec
scas
xor
(bad)
(bad)
(bad)
inc
(bad)
mov
xchg
add
sub
xchg
adc
xchg
test
add
jmp
jmp
cli
(bad)
fst
sbb
stc
div
pop
inc
bound
jae
mov
imul
(bad)
(bad)
jmp
outs
sub
push
cmp
mov
adc
adc
lds
ins
sbb
jl
adc
pop
cld
js
(bad)
(bad)
jmp
push
pop
ss
cli
cmp
adc
(bad)
cmp
fbstp
jne
(bad)
mov
mov
and
sahf
(bad)
out
fs
mov
out
xor
fwait
stos
mov
sub
aad
cmp
pop
sti
(bad)
hlt
ficom
dec
xor
test
(bad)
loop
(bad)
ins
in
gs
(bad)
inc
push
dec
mov
adc
pop
ins
and
mov
inc
or
pusha
push
(bad)
js
pop
jge
call
test
stos
repz
sbb
xor
jg
(bad)
(bad)
mov
lods
xor
cld
sti
and
lds
mov
or
and
sub
pop
sahf
mov
test
pushf
test
mov
pushf
or
add
movs
and
xchg
mov
xchg
not
in
dec
mov
ds
(bad)
pop
call
push
mov
ins
cli
sbb
push
dec
outs
push
xor
jne
fistp
push
jne
in
jmp
clc
pop
test
jmp
lahf
jmp
push
(bad)
out
das
outs
test
mov
jle
xchg
jns
push
pop
inc
shl
adc
aas
test
mov
(bad)
(bad)
(bad)
dec
mov
dec
xchg
inc
jp
pop
popf
lods
outs
sub
and
add
imul
(bad)
(bad)
mov
push
imul
pop
jnp
ins
cmps
fistp
xor
shl
(bad)
(bad)
call
sub
sahf
add
jne
loopne
daa
pop
test
or
stos
ins
mov
call
cmps
ins
fdivr
sbb
mov
loopne
inc
xor
iret
mov
jle
or
sti
loope
and
shr
xchg
jae
mov
push
std
(bad)
call
inc
fild
adc
mov
(bad)
jp
and
(bad)
(bad)
call
mov
pop
pusha
pop
(bad)
or
fsubr
dec
xlat
retf
(bad)
jmp
vpunpckhwd
scas
ret
dec
retf
retfw
sbb
scas
xchg
jne
popf
xchg
xor
add
adc
jg
scas
jge
in
xor
test
pop
repz
adc
sub
(bad)
(bad)
(bad)
call
push
add
idiv
test
outs
cmp
mov
repz
xchg
ror
ror
jne
add
(bad)
jmp
mov
add
sbb
sbb
daa
sub
sar
(bad)
jg
int3
xor
adc
mov
stos
cmp
or
out
(bad)
jmp
dec
sbb
mov
dec
xchg
mov
sar
dec
shl
xchg
sar
neg
xlat
ins
sbb
cwde
aas
pop
fdivrp
mov
dec
xlat
div
lahf
dec
and
test
clc
(bad)
call
jge
mov
pop
sbb
sub
xchg
sbb
call
shl
(bad)
(bad)
call
sub
pop
clc
push
mov
sti
and
mov
ror
cwde
cmp
std
dec
jg
push
mov
mov
ret
mov
push
out
cs
mov
mov
addr16
cmps
push
fadd
outs
in
fdiv
retf
xlat
sbb
(bad)
(bad)
(bad)
dec
lods
fstp
sar
ret
cmp
scas
aas
movs
lods
out
mov
mov
cmp
mov
outs
hlt
popa
mov
jb
xchg
push
retf
adc
dec
mov
(bad)
push
std
adc
mov
out
fisttp
and
or
mov
sub
(bad)
(bad)
call
lods
and
cmp
fdivrp
(bad)
stos
shr
lods
cmp
mov
sbb
pop
loopne
xor
mov
popf
es
sub
mov
xlat
hlt
ficom
(bad)
(bad)
(bad)
mov
jmp
jnp
cdq
pop
ja
adc
jl
shl
xchg
cmps
push
inc
(bad)
fsub
jne
mov
jg
call
(bad)
dec
in
scas
ja
or
or
repz
jb
fldcw
sub
(bad)
(bad)
call
icebp
mov
xor
mov
pop
xor
cmp
and
sub
dec
pop
ins
fs
bound
jmp
mov
pop
scas
movs
mov
(bad)
(bad)
(bad)
(bad)
std
jo
outs
cli
jge
xlat
cs
shl
and
retf
out
mov
sar
in
jmp
(bad)
out
and
inc
enter
lods
in
aas
sub
mov
loopne
stos
adc
mov
xor
jmp
cli
aaa
fist
jnp
mov
mov
out
jl
dec
(bad)
jg
jmp
(bad)
push
pop
jne
sbb
test
(bad)
pop
or
xor
(bad)
(bad)
inc
stos
push
and
xchg
shl
add
in
sbb
mov
mov
xor
xchg
add
jmp
dec
pop
test
test
ins
adc
jp
in
mov
jmp
(bad)
(bad)
(bad)
stc
das
dec
sbb
aad
mov
fld1
jecxz
sub
test
and
inc
mov
fadd
add
ja
xchg
fstp
test
mov
clc
sbb
and
fadd
mov
pop
dec
push
movs
push
xchg
cmp
fistp
in
int
push
xor
push
(bad)
cwde
or
pop
scas
(bad)
(bad)
inc
pop
adc
cmp
inc
daa
aas
inc
rcr
push
pop
inc
push
and
in
sbb
jle
(bad)
(bad)
(bad)
cmp
lods
mov
popa
cmpxchg8b
xor
test
pop
(bad)
out
and
push
icebp
inc
add
xchg
call
lds
sub
xchg
fstp
inc
pop
cmp
cmp
(bad)
mov
std
(bad)
call
iret
out
mov
sbb
adc
shr
add
icebp
ja
das
add
loop
inc
cwde
out
icebp
dec
sub
mov
mov
out
cld
cld
push
inc
inc
into
and
dec
fimul
xchg
sub
cmp
(bad)
(bad)
mov
adc
add
popf
rcl
adc
outs
test
adc
push
jmp
loope
adc
in
mov
jg
into
push
ins
icebp
fdivp
mov
sar
(bad)
(bad)
mov
stos
push
xor
xor
xor
inc
jle
ret
xchg
inc
imul
sar
leave
pop
push
rcr
fstp
imul
lods
ja
fild
stc
loop
bound
(bad)
(bad)
dec
test
mov
xchg
out
jmp
mov
push
retf
push
clc
cwde
loope
shr
sbb
imul
(bad)
dec
jg
adc
add
ret
fstp
jns
das
aas
ds
xor
inc
(bad)
(bad)
(bad)
call
cmp
pop
and
popa
cwde
sub
fisttp
cmp
cs
mov
sub
(bad)
(bad)
call
out
(bad)
pop
mov
in
outs
mov
pop
scas
and
and
addr16
fidivr
push
xchg
(bad)
pop
mov
push
mov
add
outs
xchg
in
outs
inc
jno
mov
(bad)
jg
(bad)
sti
xchg
in
fld
push
xchg
jne
xchg
inc
and
stos
mov
std
call
dec
add
in
mov
lea
inc
loope
scas
jecxz
mov
(bad)
(bad)
call
mov
fwait
scas
pop
inc
mov
in
gs
sbb
mov
dec
(bad)
(bad)
(bad)
call
fild
cmp
jl
and
push
cdq
jne
and
pop
loopne
xor
sbb
iret
xchg
(bad)
jne
sub
jge
mov
or
sahf
retf
(bad)
(bad)
(bad)
jmp
retf
jle
jecxz
sahf
adc
push
push
or
dec
or
mov
mov
and
(bad)
call
cmps
and
arpl
mov
jle
xor
loope
das
ins
cld
(bad)
(bad)
call
adc
mov
retf
adc
xchg
inc
cmps
mov
out
jg
std
int
xlat
(bad)
inc
dec
(bad)
mov
retf
push
sti
xchg
push
or
jg
cmc
pop
mov
lock
push
xor
test
int
in
(bad)
(bad)
(bad)
call
push
adc
dec
adc
xor
add
popa
enter
pop
fisttp
xchg
fdivr
mov
hlt
in
movs
push
push
loope
stos
push
scas
repnz
xchg
(bad)
(bad)
(bad)
jmp
jne
dec
ror
pop
std
xchg
adc
dec
pop
gs
sbb
aas
pop
jle
(bad)
(bad)
mov
popw
das
add
mov
inc
scas
imul
cmp
xchg
push
(bad)
(bad)
(bad)
jmp
xchg
lods
xchg
ja
cmp
je
dec
mov
mov
inc
xchg
mov
cmp
jnp
inc
adc
mov
cli
lahf
mov
push
xchg
mov
test
adc
aam
pusha
(bad)
(bad)
(bad)
jmp
pop
repz
push
and
pop
inc
xor
repz
jecxz
nop
inc
fimul
inc
cli
add
mov
ins
mov
xchg
pop
xor
out
inc
scas
mov
(bad)
(bad)
(bad)
jmp
stc
and
adc
popf
imul
jae
idiv
sbb
cmps
pop
sub
mov
(bad)
(bad)
(bad)
jmp
mov
iret
icebp
addr16
and
aam
mov
loope
fwait
mov
mov
stos
(bad)
(bad)
(bad)
(bad)
(bad)
mov
out
dec
arpl
(bad)
and
push
xor
mov
pop
sbb
adc
jle
push
mov
(bad)
(bad)
(bad)
call
add
neg
add
xlat
out
xor
cmc
movs
cmps
idiv
jmp
enter
add
or
(bad)
(bad)
push
pop
aam
test
fs
pop
sbb
or
push
scas
sub
cmps
adc
push
repnz
(bad)
(bad)
mov
out
jmp
pop
mov
fsubp
xor
cld
jg
(bad)
jmp
xchg
sub
mov
stos
adc
xor
add
call
sbb
jo
or
inc
and
cmp
cmc
aas
mov
inc
xor
int3
inc
rcl
clc
(bad)
(bad)
dec
sub
jp
mov
fldenv
std
cmp
inc
pop
cmp
ins
push
aad
pop
mov
ror
(bad)
(bad)
inc
pop
retf
pop
fcomi
shl
jb
(bad)
jo
jmp
xchg
sbb
(bad)
jmp
sub
shl
icebp
inc
dec
add
cmp
into
lock
sub
push
out
(bad)
(bad)
(bad)
jmp
sub
add
inc
fistp
call
xor
or
icebp
pop
(bad)
(bad)
(bad)
jmp
jbe
cmp
icebp
shl
scas
pushf
inc
test
adc
lods
cmp
fdiv
inc
(bad)
call
sbb
and
jmp
cmp
(bad)
movs
loopne
inc
inc
mov
shr
add
retf
xlat
daa
xchg
xchg
bound
and
iret
test
or
(bad)
cmp
sbb
mov
fsubrp
push
mov
jne
retf
les
xlat
jo
push
(bad)
mov
add
sbb
sbb
ds
adc
pop
pop
leave
mov
repnz
inc
and
daa
(bad)
(bad)
(bad)
inc
mov
fdivr
mov
mov
sbb
cmp
aad
mov
(bad)
sar
xchg
pop
iret
popf
dec
jp
mov
pop
cmp
mov
push
aad
(bad)
(bad)
(bad)
inc
mov
xchg
sub
cmp
pop
adc
icebp
jge
into
push
arpl
imul
(bad)
(bad)
jmp
cmp
sbb
data16
in
mov
popa
(bad)
push
jg
pop
dec
test
into
lods
icebp
(bad)
xchg
ds
pop
fnstsw
imul
pop
ds
stc
xor
ds
loopne
and
jns
ficom
rcl
cmp
out
outs
lahf
test
fisttp
loope
jge
push
inc
ja
dec
cmp
rcr
imul
inc
mov
(bad)
jmp
outs
sub
dec
repnz
lds
dec
test
adc
(bad)
call
push
adc
enter
lods
or
xor
mov
fdiv
in
loopne
(bad)
push
xchg
pop
push
or
test
pop
add
in
(bad)
cli
(bad)
call
adc
sub
shl
mov
mov
mov
shl
(bad)
inc
push
in
scas
jb
test
adc
jmp
hlt
mov
mov
mov
jmp
imul
ins
cld
jle
xchg
mov
jle
push
and
push
lods
sti
fst
xchg
sahf
(bad)
push
add
aaa
cmp
call
jmp
rcl
imul
clc
mov
add
push
dec
add
fdiv
int
(bad)
(bad)
inc
dec
adc
mov
std
and
lods
pop
and
xor
add
cmp
sahf
(bad)
(bad)
(bad)
call
das
aad
mov
add
and
lock
out
pusha
sub
shl
push
fild
and
lock
inc
jmp
imul
out
or
ret
movs
adc
es
cmp
out
stos
int
cli
push
jg
(bad)
(bad)
cmp
sub
inc
data16
cdq
fbld
imul
pop
dec
inc
repnz
inc
pop
cmp
pop
sbb
aam
scas
rol
retf
out
pop
or
pop
lods
pusha
push
cld
inc
push
mov
and
pop
add
sar
pop
(bad)
(bad)
(bad)
jmp
jbe
xor
mov
xchg
out
and
fsub
dec
aaa
cwde
or
jmp
fsub
adc
push
jg
repz
push
imul
scas
and
aad
(bad)
(bad)
(bad)
cld
(bad)
fdivr
das
cmp
mov
add
pushf
sbb
sahf
hlt
out
(bad)
(bad)
(bad)
(bad)
jmp
adc
xor
aad
loope
inc
and
cmc
and
inc
loop
push
call
sub
stos
push
lea
mov
stc
into
ficomp
push
push
test
push
pop
cld
push
(bad)
(bad)
fldl2t
jmp
sub
sti
aaa
jp
mov
daa
pop
and
mov
sbb
lods
std
(bad)
(bad)
call
in
mov
movs
repnz
xchg
adc
push
inc
pop
mov
imul
sbb
in
mov
(bad)
fld
icebp
or
dec
ss
jle
mov
pop
and
fld
sahf
jne
fwait
lods
ja
cmp
inc
(bad)
(bad)
(bad)
inc
jmp
xchg
lea
stos
mov
test
inc
push
sar
sti
or
xor
(bad)
jg
scas
mov
inc
pop
clc
out
sbb
lahf
xchg
push
sub
inc
iret
sbb
pusha
jae
lock
shr
les
pop
js
hlt
mov
(bad)
mul
(bad)
dec
fisub
loopne
ja
mov
fmul
movzx
dec
(bad)
xchg
fwait
(bad)
(bad)
(bad)
dec
jp
leave
popa
shr
test
clc
xchg
pop
mov
pop
mov
test
(bad)
(bad)
push
jge
and
xchg
shr
push
dec
jg
jmp
mov
call
push
sbb
idiv
(bad)
jmp
sub
pop
icebp
mov
out
test
jmp
in
(bad)
(bad)
(bad)
mov
cmps
ja
cmp
fidivr
loope
jb
add
jl
stc
cmp
cmp
lock
push
lods
cld
lahf
idiv
mov
clc
arpl
fs
stos
(bad)
(bad)
(bad)
push
fadd
sbb
lock
add
adc
scas
mov
and
(bad)
jge
cmp
or
and
jmp
or
mov
pop
adc
add
(bad)
(bad)
call
(bad)
cli
data16
lds
lock
(bad)
cmps
movs
call
mov
jmp
(bad)
(bad)
jg
dec
and
les
mov
push
ja
mov
sub
cmp
inc
(bad)
mov
or
imul
mov
and
(bad)
(bad)
push
mov
jl
xor
push
mov
mov
inc
fwait
adc
int
ret
pop
sub
repnz
outs
(bad)
push
push
retf
mov
fwait
xor
mov
into
test
das
mov
icebp
out
(bad)
fild
mov
repz
mov
xchg
mov
fild
xchg
mov
(bad)
mov
movs
(bad)
(bad)
(bad)
dec
cmps
pop
and
add
js
das
daa
add
addr16
and
fistp
repnz
sub
(bad)
push
inc
into
pop
push
cmp
mov
cdq
inc
loop
ror
out
push
(bad)
jmp
dec
sbb
mov
xor
xor
outs
pop
lahf
mov
add
in
iret
dec
es
(bad)
sbb
jb
inc
fst
pop
push
push
or
sub
int
call
retf
and
clc
jno
daa
adc
(bad)
(bad)
(bad)
jmp
mov
popf
jge
fadd
ffreep
sub
(bad)
jge
retf
mov
pop
loop
push
mov
inc
sar
jmp
xchg
push
addr16
sub
daa
(bad)
(bad)
(bad)
(bad)
cmp
stc
fsubr
and
cli
add
mov
and
mov
or
call
call
push
jne
jmp
cld
inc
addr16
arpl
rol
xchg
mov
fsubr
and
(bad)
(bad)
(bad)
(bad)
jns
jns
sub
cmp
sbb
in
dec
sub
stc
es
out
jo
cmp
mov
nop
std
dec
lock
sbb
jne
mov
cmps
sub
sti
mov
add
xchg
sahf
popa
jecxz
push
ins
ror
or
call
pop
cmp
aam
mov
xchg
call
(bad)
(bad)
dec
and
ret
mov
push
clc
mov
mov
sub
mov
pop
stos
(bad)
(bad)
(bad)
dec
mov
dec
movs
push
bound
iret
adc
xchg
mov
sti
leave
daa
sub
or
jb
pop
push
sahf
mov
es
imul
dec
xor
fstp
call
push
lock
cld
hlt
dec
out
push
(bad)
lahf
mov
xor
inc
cmp
cdq
mov
push
jno
inc
mov
inc
cdq
iret
cmp
mov
pop
pop
stos
fst
sbb
and
gs
(bad)
(bad)
push
xor
sti
mov
in
ss
xchg
mov
(bad)
(bad)
(bad)
(bad)
jmp
xor
lds
retf
or
and
aaa
xor
add
stc
aad
ret
(bad)
(bad)
ds
into
mov
push
aas
cdq
sub
lahf
pop
jbe
mov
mul
ins
cmp
xchg
out
dec
mov
call
(bad)
mov
pop
fwait
cld
pop
(bad)
lods
jno
iret
mul
nop
sbb
aad
add
(bad)
(bad)
push
mov
loope
bound
jnp
mov
fcom
ficom
(bad)
push
mov
and
push
dec
(bad)
xchg
or
jp
aaa
inc
hlt
add
and
and
das
(bad)
inc
xchg
push
sbb
mov
lock
adc
setl
retf
ins
(bad)
(bad)
(bad)
jmp
pop
xchg
sbb
xor
cdq
sbb
inc
or
jl
pop
inc
inc
pop
lahf
adc
repnz
rcl
(bad)
mov
sbb
jno
mov
(bad)
or
(bad)
call
das
(bad)
sub
retf
sbb
stc
cmp
lahf
xchg
jg
sar
in
jmp
xchg
data16
jns
or
add
pop
push
loop
sub
mov
jg
(bad)
xor
push
or
mov
lahf
xchg
inc
push
ins
and
out
outs
cwde
mov
xor
ds
or
pop
jp
loope
push
(bad)
(bad)
(bad)
in
outs
cdq
arpl
add
call
in
test
adc
push
(bad)
(bad)
(bad)
jmp
mov
leave
shr
push
sub
popf
imul
mov
mov
pusha
sti
imul
ss
mov
lock
retf
or
lds
and
not
fldcw
add
(bad)
(bad)
jmp
daa
push
cmp
adc
jmp
popf
dec
push
and
std
mov
ins
into
outs
push
(bad)
(bad)
jg
adc
mov
and
retf
xor
mov
inc
jecxz
(bad)
(bad)
(bad)
push
cmc
lods
mov
add
jge
xchg
jae
mov
inc
ins
mov
outs
sbb
nop
jae
out
js
aad
jp
daa
sbb
out
jno
movs
sub
pop
sub
push
mov
icebp
(bad)
call
push
mov
xchg
lods
sub
arpl
es
add
(bad)
(bad)
out
rol
out
in
jae
mov
and
icebp
movs
ins
int3
scas
sbb
(bad)
(bad)
jg
fstp
mov
jmp
in
js
lahf
fdivp
jmp
mov
sub
push
(bad)
call
jns
mov
ins
in
xchg
out
das
fdivr
stos
ins
(bad)
(bad)
(bad)
inc
xchg
adc
sub
inc
fild
mov
xchg
outs
and
cmps
xchg
mov
mov
(bad)
(bad)
(bad)
push
daa
out
or
pop
xor
ja
dec
add
inc
xchg
xchg
mov
mov
cs
(bad)
(bad)
push
pop
mov
or
xor
mov
cmp
(bad)
call
(bad)
imul
outs
add
adc
call
adc
es
pop
cmc
(bad)
dec
aas
int
sub
dec
out
out
xor
cmps
(bad)
(bad)
(bad)
inc
out
xchg
js
jecxz
mov
cmp
aaa
inc
pop
out
xchg
xchg
dec
and
ins
ss
(bad)
mov
xchg
push
pusha
aad
ins
test
test
dec
dec
and
push
mov
out
adc
or
lock
fwait
add
nop
std
jmp
sti
pop
ret
inc
cli
cmc
cli
ja
(bad)
mov
pop
fwait
out
xchg
xchg
(bad)
mov
cmps
(bad)
mov
call
out
mov
mov
xor
pop
inc
mov
jle
sbb
iret
pop
mov
ds
(bad)
(bad)
(bad)
(bad)
fisubr
jmp
cmp
sar
std
cmp
xchg
stc
sar
lds
(bad)
fisubr
cli
in
jge
xor
mov
adc
adc
or
mov
(bad)
call
add
push
cdq
fild
and
inc
cmps
stos
or
jmp
add
cmps
xor
adc
sbb
fdivr
outs
cli
outs
pop
(bad)
inc
add
cmps
pop
cld
int
add
xchg
(bad)
call
mov
sub
lods
dec
test
push
inc
sbb
(bad)
(bad)
(bad)
jg
jnp
inc
dec
sub
repnz
jbe
in
inc
(bad)
and
add
mov
retf
clc
addr16
(bad)
(bad)
call
enter
icebp
cmp
or
push
add
lods
jns
mov
(bad)
call
xchg
mov
mov
mov
pop
ins
retf
arpl
dec
cld
xor
inc
scas
pop
xchg
mov
or
push
xchg
pushf
cmps
mov
jbe
loope
cmp
jmp
movs
ss
push
jnp
outs
cmp
int
mov
out
push
push
and
(bad)
(bad)
(bad)
jmp
mov
je
(bad)
pushw
mov
test
stos
sbb
dec
ds
sub
loop
pop
inc
mov
jbe
dec
dec
les
sbb
clc
ficomp
xchg
retf
mov
and
(bad)
(bad)
(bad)
(bad)
push
push
push
add
mov
repz
pop
add
cmp
hlt
push
and
movs
cmp
std
dec
(bad)
jle
sbb
fnstenv
std
and
adc
outs
mov
dec
fcomip
sbb
loope
mov
xchg
jb
ja
(bad)
cmp
and
inc
call
mov
push
add
jg
adc
dec
aad
lahf
pop
cmp
repnz
lods
(bad)
(bad)
(bad)
inc
or
pop
idiv
cmp
fnclex
jb
add
ss
test
cld
cmc
outs
(bad)
(bad)
call
add
sub
out
out
(bad)
in
int
aaa
mov
adc
aas
jecxz
cld
cli
(bad)
(bad)
(bad)
jg
push
sub
xchg
jns
inc
sahf
mov
ins
pusha
out
pop
xor
test
push
arpl
data16
pop
inc
jg
mov
jl
out
and
test
in
pop
(bad)
repz
(bad)
(bad)
jmp
loop
pop
push
mov
fstp
in
mov
loop
std
mov
push
push
cmp
cdq
mov
fcmovnu
jg
(bad)
(bad)
cmp
lods
js
enter
cs
stos
add
fistp
jecxz
(bad)
dec
and
mov
ss
mov
nop
test
aam
retw
cdq
xabort
cmc
mov
iret
sub
or
cmp
add
xchg
(bad)
call
test
sbb
fdivp
iret
repz
into
mov
mov
shl
cld
(bad)
(bad)
dec
jnp
fwait
sbb
loop
and
es
stc
push
mov
clc
shl
call
sub
rol
xor
adc
push
dec
mov
fwait
std
(bad)
jg
jl
mov
ss
dec
sti
mul
fwait
push
sahf
pop
pop
rol
adc
aaa
std
(bad)
mov
jle
fdiv
sbb
lahf
(bad)
popf
pop
fcmovnbe
clc
bound
ret
mov
(bad)
mov
rol
sub
in
loope
pop
mov
jmp
xlat
xor
mov
(bad)
mov
retf
jne
pusha
int
mov
(bad)
cli
mov
cld
aam
into
xor
add
adc
(bad)
(bad)
(bad)
dec
sti
cmp
jl
fistp
add
lock
rcl
push
fidiv
add
pop
addr16
jmp
mov
call
retf
xor
cmps
lods
pop
fdiv
daa
push
cmps
mov
inc
dec
dec
jmp
add
mov
xor
daa
call
jmp
outs
in
lahf
(bad)
lock
adc
cmp
sbb
jge
retf
repnz
(bad)
(bad)
push
xor
fisttp
mov
xchg
das
pop
mov
jecxz
mov
movs
xor
(bad)
jnp
fcom
shr
sub
movs
in
mov
add
ret
std
cmp
movs
call
add
lds
mov
shl
call
add
inc
sbb
sub
cmp
add
pop
or
jmp
pop
sub
mov
adc
xor
add
mov
jg
aas
push
mov
sub
dec
test
cld
ja
adc
mov
pop
(bad)
lods
inc
shl
ret
(bad)
push
push
dec
cmp
adc
mov
call
inc
imul
(bad)
call
inc
sub
js
mov
and
adc
lods
add
popa
fs
test
cmp
(bad)
(bad)
push
inc
add
cs
test
xchg
xchg
mov
mov
(bad)
inc
(bad)
daa
xchg
sub
sub
in
in
repz
add
ss
and
(bad)
(bad)
(bad)
inc
test
fs
ss
sub
mov
out
sbb
inc
cld
cmp
hlt
(bad)
jmp
aam
pop
(bad)
adc
mov
push
pop
push
mov
and
mov
(bad)
(bad)
jmp
mov
xor
ficomp
les
inc
fisttp
sub
(bad)
pop
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
clc
fwait
push
aas
mov
(bad)
repnz
xor
addr16
std
dec
mov
mov
pop
xor
js
jge
sub
pop
xchg
jg
mov
mov
inc
pop
mov
fild
adc
jns
lds
sub
ss
add
push
push
inc
mov
and
es
cs
test
call
xchg
adc
sub
les
push
add
outs
clc
dec
push
outs
push
js
jb
pop
div
ins
or
push
icebp
inc
mov
or
shl
cli
neg
add
pop
scas
les
mov
sub
and
jns
outs
cmp
(bad)
call
mov
sar
std
jns
jp
mov
and
fxch
xor
push
(bad)
(bad)
das
push
aam
(bad)
(bad)
jg
sbb
outs
pop
rcl
xor
mov
fisub
(bad)
call
push
push
mov
jns
xlat
and
std
cmp
out
and
adc
stos
call
outs
dec
lods
loop
mov
leave
out
inc
and
ja
pop
ss
(bad)
(bad)
call
movs
add
aaa
aas
in
xor
mov
cmp
pop
inc
fst
inc
popa
fild
fcomp
push
movs
jg
pop
(bad)
in
(bad)
or
enter
(bad)
mov
pop
fsubr
jge
test
pop
jo
or
or
(bad)
push
in
jb
push
mov
cli
test
test
push
int3
add
fsub
cmp
fisttp
shl
xor
or
dec
scas
(bad)
push
push
inc
lds
inc
mov
fsubr
ins
sti
cwde
pop
mov
loope
mov
(bad)
(bad)
(bad)
(bad)
jmp
test
inc
push
add
cli
xchg
jmp
in
add
mov
mov
xor
xchg
(bad)
(bad)
(bad)
inc
pop
xchg
loop
mov
jbe
leave
fs
sub
or
sar
ret
jecxz
xchg
(bad)
(bad)
jmp
push
icebp
out
enter
mov
dec
enter
push
push
cmp
cmp
or
das
cli
inc
les
inc
xor
lods
sti
fstp
push
pop
mov
clc
lahf
xlat
pop
int3
jl
mov
mov
jmp
inc
adc
xor
pop
clc
loopne
jmp
(bad)
mov
xchg
and
fild
test
push
mov
imul
pop
cmp
mov
xchg
stc
loop
dec
cmp
fcmovb
push
mov
and
sub
scas
rol
(bad)
(bad)
(bad)
inc
ror
adc
push
ja
lods
push
cmp
fisttp
std
dec
pusha
in
sbb
(bad)
mov
ja
jg
fadd
fstp
jmp
pop
xlat
in
xor
jp
add
adc
(bad)
scas
push
cmp
pop
sbb
and
xchg
xor
retf
xlat
iret
and
jl
into
fnstsw
fwait
mov
movs
push
arpl
inc
push
mov
ss
jg
cmps
rol
(bad)
out
fwait
pushf
or
jl
jno
mov
adc
mov
mov
ror
(bad)
fisttp
ins
stos
retf
nop
dec
sti
push
mov
int3
mov
call
iret
mov
inc
hlt
push
stos
mov
stos
lds
xor
test
mov
dec
pop
aad
(bad)
(bad)
mov
push
jbe
add
add
ret
out
lods
je
push
ss
(bad)
aas
hlt
jnp
popf
(bad)
xchg
(bad)
(bad)
jmp
fwait
gs
sbb
outs
les
cs
cdq
(bad)
(bad)
push
mov
ret
(bad)
call
mov
mov
dec
es
mov
lds
arpl
jg
add
mov
pop
sub
push
xchg
adc
sub
(bad)
pop
push
ret
dec
xchg
int3
jmp
fldcw
in
push
pop
pusha
gs
jmp
mov
fs
dec
cmp
adc
(bad)
cmp
jmp
(bad)
(bad)
(bad)
dec
pop
pop
int
imul
mov
stos
ret
out
pop
cmps
int3
aad
sbb
daa
(bad)
(bad)
(bad)
call
add
out
out
mov
mov
daa
mov
bound
clc
ret
lods
sub
cli
hlt
push
mov
dec
cmps
popa
ror
test
push
lahf
cmp
(bad)
(bad)
(bad)
dec
dec
imul
mov
sbb
inc
fdiv
cmc
pop
clc
or
out
and
out
cli
(bad)
jmp
push
test
je
ds
clc
xor
shl
sub
add
push
(bad)
jmp
jmp
push
mov
mov
ds
aad
cld
stos
(bad)
(bad)
dec
xchg
mov
sub
into
and
pop
loop
inc
add
idiv
xchg
pop
pusha
(bad)
jmp
cmp
(bad)
jg
aad
(bad)
pop
aad
jmp
fist
mov
sar
(bad)
call
push
popf
mov
jne
sbb
xchg
or
mov
and
shr
(bad)
(bad)
(bad)
jg
outs
in
loopne
sbb
or
inc
nop
movsx
mov
sbb
stos
push
add
inc
rol
jg
loop
push
leave
fbld
mov
out
mov
es
mov
mov
xchg
cmps
repz
dec
pop
xchg
push
ins
je
and
xor
(bad)
jl
mov
pop
test
lock
(bad)
(bad)
jmp
add
fsubr
add
sbb
mov
cmps
cmp
dec
pop
mov
push
(bad)
(bad)
call
xchg
mov
pop
lahf
test
out
push
cmp
inc
sub
or
mov
dec
(bad)
(bad)
(bad)
dec
or
sub
popa
pushf
jbe
or
shr
pop
fistp
pop
jnp
push
lods
xchg
iret
sub
mov
call
push
mov
and
pop
push
pop
cmp
(bad)
test
(bad)
jmp
cli
sbb
adc
mov
gs
or
push
out
loope
call
mov
repz
(bad)
(bad)
inc
mov
pop
(bad)
add
inc
ins
int
lods
aad
sub
cld
mov
xchg
xchg
call
ret
sbb
mov
lods
pop
push
jns
push
or
cld
cmc
cld
mov
xlat
(bad)
mov
cmps
sub
mov
add
jl
das
xchg
push
mov
(bad)
dec
pop
dec
fnsave
aas
mov
mov
test
jnp
mov
aam
and
nop
outs
das
fwait
and
jl
(bad)
(bad)
call
sahf
mov
jb
xchg
int3
pop
test
adc
jns
(bad)
(bad)
(bad)
jg
das
(bad)
stos
out
dec
imul
neg
adc
int3
and
out
sti
mov
add
pop
push
(bad)
aam
mov
ins
in
loop
sbb
add
dec
sub
cmp
(bad)
div
xchg
(bad)
push
leave
mov
fnsave
std
push
jo
mov
jno
sub
out
push
ds
movs
(bad)
(bad)
(bad)
jmp
mov
int
cmc
mov
sub
lods
fisttp
mov
jbe
jae
(bad)
(bad)
(bad)
call
sub
and
xchg
jecxz
jl
cld
inc
neg
hlt
icebp
inc
mov
inc
ins
or
jge
pop
cmps
fcmove
mov
pop
adc
or
jg
inc
push
arpl
fnstenv
and
rol
mov
(bad)
(bad)
jmp
and
aaa
or
stc
addr16
rcl
xor
mov
movs
push
sub
aaa
xor
adc
xor
(bad)
mov
xchg
pmulhw
or
fwait
dec
lock
xchg
ret
popf
and
and
(bad)
jmp
and
fs
js
mov
imul
ss
mov
sub
dec
test
fcos
mov
jmp
xchg
popa
cmp
sub
xchg
or
call
int
pop
gs
lods
test
dec
ins
push
jae
jae
(bad)
pop
inc
fadd
(bad)
(bad)
jmp
mov
ret
clc
inc
movs
arpl
(bad)
mov
std
adc
cmp
push
xlat
(bad)
jmp
fdiv
out
(bad)
addr16
sub
pop
out
pushf
out
sahf
shr
inc
out
(bad)
jnp
sbb
hlt
cs
fwait
sar
(bad)
cmp
outs
call
push
daa
fidivr
xchg
add
jno
sub
xor
mov
push
or
out
inc
sbb
and
mov
adc
test
xor
or
jne
addr16
stos
adc
adc
or
pop
inc
adc
ins
les
jle
mov
pop
lahf
stos
movs
sub
dec
push
fnstenv
mov
imul
iret
frstor
push
loopne
icebp
adc
imul
inc
mov
mov
rcl
xchg
or
jns
mov
cs
ffree
mov
scas
mov
(bad)
(bad)
call
pop
xchg
pop
add
cli
or
les
call
icebp
imul
clc
(bad)
call
add
inc
inc
ror
push
xchg
test
jmp
(bad)
mov
fsubr
cmp
xchg
push
outs
push
in
jecxz
imul
out
xchg
stos
jg
(bad)
call
js
jg
and
cli
dec
sbb
fnstsw
adc
mov
(bad)
(bad)
push
pop
xor
mov
addr16
xor
sub
mov
mov
jno
inc
sbb
pop
hlt
jmp
pop
pop
(bad)
sahf
xor
ret
ja
ss
mov
xchg
jne
sbb
enter
(bad)
call
mov
cmp
(bad)
mov
iret
sar
ja
call
movs
add
pop
dec
arpl
loopne
call
inc
or
outs
cmp
jl
xor
mov
int3
neg
cmp
(bad)
jg
sar
clc
repz
js
cli
cwde
ss
cmc
and
mov
pop
test
mov
(bad)
(bad)
(bad)
jmp
int
loop
jmp
push
into
xchg
jmp
mov
xor
xor
mov
pop
sub
sbb
xchg
es
jmp
push
(bad)
(bad)
(bad)
jmp
mov
out
mov
ins
xor
outs
(bad)
cmp
repz
xchg
push
jo
xchg
lods
(bad)
fisub
scas
mov
jmp
inc
xchg
out
clc
out
loop
lods
push
ret
add
clc
(bad)
(bad)
(bad)
(bad)
fldenv
jle
dec
xor
sti
das
loopne
add
dec
(bad)
pop
pop
push
aaa
push
jo
ja
hlt
in
(bad)
(bad)
(bad)
dec
jns
mov
stos
jne
scas
and
outs
add
stos
mov
pop
jae
mov
(bad)
jmp
push
push
loopne
sub
mov
dec
pop
rol
lods
test
(bad)
push
push
out
and
fst
jmp
jge
adc
mov
fcomip
(bad)
jmp
(bad)
mov
inc
popa
pop
(bad)
popa
push
xchg
in
scas
mov
xchg
call
mov
mov
inc
push
lods
and
call
fwait
(bad)
int3
mov
cld
dec
loop
rol
push
sbb
xor
mov
jp
movs
push
sub
(bad)
(bad)
call
nop
cmp
lds
sub
fidivr
add
or
dec
cmc
xchg
nop
sub
jmp
add
mov
xchg
adc
mov
pop
lea
(bad)
(bad)
(bad)
dec
adc
fdiv
inc
test
sub
jae
popf
(bad)
(bad)
call
outs
fdivr
jmp
mov
jp
mov
cld
loope
out
aad
in
imul
add
xor
addr16
lahf
(bad)
out
adc
or
(bad)
(bad)
jg
gs
add
xchg
test
cmc
leave
push
sub
test
int
outs
xlat
stos
(bad)
call
lock
or
and
lods
ins
pop
loopne
leave
push
sbb
(bad)
(bad)
(bad)
call
push
repz
ror
out
mov
dec
test
loope
cmp
mov
pop
(bad)
(bad)
(bad)
call
ins
inc
mov
outs
fisttp
dec
out
ret
pop
push
add
push
(bad)
mov
xchg
mov
push
mov
stc
sahf
imul
das
clc
mov
push
bts
add
fcom
loope
pop
adc
mov
(bad)
out
retf
int
sub
(bad)
(bad)
jmp
push
stc
outs
inc
test
inc
cmp
or
pusha
inc
cmc
into
pop
xchg
(bad)
sub
push
std
(bad)
call
mov
jmp
push
dec
les
jge
outs
sub
inc
jnp
mov
(bad)
mov
(bad)
mov
inc
daa
mov
push
cmp
stos
outs
retf
inc
dec
or
jg
mov
loop
ds
(bad)
(bad)
call
loope
jb
push
pop
test
jp
adc
es
pop
and
xor
mov
jg
hlt
pop
mov
dec
cmp
mov
out
cmp
imul
stos
(bad)
(bad)
(bad)
(bad)
mov
imul
dec
ret
sbb
mov
cli
call
mov
jae
cwde
cdq
xchg
rcr
pusha
add
(bad)
jg
mov
push
ins
aas
lahf
add
(bad)
jg
ret
ret
xchg
enter
int
bound
dec
movs
mov
mov
ja
and
pop
fist
aad
inc
mov
cwde
pop
or
sub
ds
in
scas
(bad)
mov
test
lea
mov
push
inc
jmp
push
mov
xchg
pop
and
jmp
jo
mov
(bad)
jg
jmp
repz
iret
dec
int3
ins
push
ds
popf
add
sbb
mov
push
add
in
(bad)
(bad)
inc
shl
out
cmp
repz
ins
mov
mov
add
inc
adc
arpl
(bad)
xchg
outs
dec
movs
add
jle
(bad)
(bad)
(bad)
cmp
and
jne
add
stos
xchg
mov
sbb
out
movntq
out
icebp
cmp
jmp
mov
jg
pop
call
add
mov
bound
cmp
clc
inc
aam
int
out
sub
imul
adc
mov
popf
xchg
repnz
(bad)
jmp
cli
pop
pop
mov
mov
mul
push
jmp
mov
sbb
push
gs
call
in
outs
push
ret
call
inc
cmp
mov
cli
das
in
mov
or
cmp
je
imul
(bad)
(bad)
jmp
outs
push
rol
jge
mov
shr
popf
mov
jae
jp
(bad)
fnsave
into
sub
push
(bad)
in
push
cld
xlat
jmp
nop
repz
jg
mov
(bad)
mov
jno
retf
sbb
test
jne
loope
mov
sbb
cdq
xchg
or
aas
std
and
data16
dec
lods
repz
pop
test
sar
inc
cmps
dec
mov
or
jne
(bad)
(bad)
(bad)
(bad)
(bad)
jecxz
add
jg
(bad)
pop
cmp
xchg
push
push
test
ror
mov
(bad)
(bad)
call
fs
jp
lds
xchg
call
test
xchg
fcmovnbe
pop
xchg
cwde
pop
sub
clc
(bad)
push
mov
rol
add
cmp
push
add
out
ret
test
and
call
adc
jecxz
sub
lock
es
sbb
sbb
xchg
(bad)
(bad)
mov
add
idiv
and
push
sub
push
cmp
xor
imul
pop
jmp
imul
js
inc
pop
sub
add
aaa
in
pop
pop
clc
test
(bad)
(bad)
(bad)
(bad)
cli
ret
or
jno
adc
lea
pop
xchg
ror
lds
xor
(bad)
(bad)
jmp
addr16
mov
sub
jne
(bad)
bound
mov
jns
push
(bad)
dec
test
adc
das
and
mov
pushf
xchg
in
xchg
jae
js
xchg
out
(bad)
(bad)
jg
stos
pop
and
lea
adc
push
xchg
mov
dec
and
mov
(bad)
(bad)
(bad)
call
and
inc
clc
and
and
ss
mov
pop
push
(bad)
(bad)
(bad)
jmp
ss
sbb
push
icebp
js
ja
or
xchg
pop
scas
xchg
dec
jns
mov
sub
pusha
fisubr
or
sbb
cmp
out
mov
outs
fsub
(bad)
(bad)
(bad)
dec
pop
cmp
cmc
imul
loope
in
jp
shr
pop
cmp
int3
push
sub
(bad)
(bad)
(bad)
call
sub
call
cwde
call
jp
test
adc
inc
sub
cmps
fxch
outs
movs
cmp
xchg
out
jle
add
pushf
mov
(bad)
(bad)
inc
xor
inc
adc
clc
dec
stc
lea
imul
out
fadd
call
(bad)
hlt
mov
std
jns
sbb
les
shr
(bad)
jg
push
jnp
push
fwait
cmp
outs
int
xchg
ds
jecxz
jnp
(bad)
jmp
cmps
dec
dec
push
in
(bad)
arpl
ss
mov
and
jmp
(bad)
(bad)
(bad)
jmp
stos
mov
push
lock
inc
cmps
and
cmps
sbb
popf
sar
(bad)
call
pop
push
jo
sbb
addr16
dec
pop
aaa
add
cmp
(bad)
test
(bad)
jmp
sar
cdq
jg
cmps
xchg
inc
or
pusha
lahf
push
movs
xor
cs
jb
push
cld
fcmovb
js
into
sub
enter
aam
pop
sbb
loope
movs
mov
(bad)
(bad)
(bad)
jmp
rcl
sub
jl
xor
lock
mov
stos
sbb
(bad)
(bad)
(bad)
jnp
imul
cli
dec
cmp
mov
xor
xchg
push
out
ins
dec
and
(bad)
(bad)
jmp
or
mov
lods
lods
aam
ds
sahf
sahf
fwait
adc
jnp
push
jp
fistp
fistp
sahf
dec
xchg
jmp
not
aaa
dec
sbb
imul
(bad)
sub
jecxz
cli
out
mov
aaa
sub
(bad)
(bad)
fldenv
(bad)
scas
stc
xchg
mov
fwait
pushf
and
clc
bound
mov
inc
push
and
add
call
and
(bad)
(bad)
(bad)
out
es
ss
js
push
or
inc
enter
push
in
push
add
mov
sub
pop
fnstsw
and
jle
scas
aad
adc
div
fst
and
(bad)
outs
(bad)
(bad)
jle
adc
arpl
mov
add
adc
xor
mov
(bad)
aas
mov
jle
push
mov
idiv
test
jb
aam
mov
push
(bad)
(bad)
(bad)
inc
sbb
push
shr
cli
inc
or
xor
pop
add
test
or
movs
xor
xchg
ins
add
xchg
mov
mov
retf
shl
add
cmp
hlt
(bad)
(bad)
(bad)
inc
inc
or
aad
punpcklbw
lods
fist
inc
inc
mov
and
jg
imul
arpl
jmp
sub
test
mov
jmp
mov
dec
fist
fsubr
jl
repnz
rcl
(bad)
(bad)
push
xlat
loopne
sub
cmps
jge
and
(bad)
ins
stos
push
repnz
movs
mov
int
push
sar
inc
adc
cmp
rcl
lds
mov
mov
mov
iret
push
int3
mov
ins
mov
xor
(bad)
(bad)
push
add
mov
outs
sbb
sub
(bad)
stc
stos
mov
dec
ds
jnp
(bad)
(bad)
(bad)
jg
sub
int
sbb
xor
stos
jmp
cmp
arpl
(bad)
(bad)
clc
icebp
(bad)
mul
lds
ins
stos
cmc
push
lahf
inc
in
(bad)
jp
pop
sub
jmp
cmc
push
xchg
adc
je
sbb
pusha
dec
pusha
rol
call
(bad)
int
push
ds
pop
lds
cmp
sub
cld
mov
sar
mov
sbb
pop
rol
out
sbb
inc
mov
push
fcos
(bad)
(bad)
push
aas
imul
pop
leave
cmp
outs
or
jl
jbe
inc
inc
cdq
pop
repz
sub
(bad)
mov
(bad)
fdiv
repz
jl
(bad)
scas
les
fwait
add
xor
sub
and
cmp
je
jmp
es
inc
mov
aam
adc
scas
push
lahf
xor
js
cmp
das
xchg
enter
and
jl
mov
(bad)
push
lods
mov
add
leave
out
scas
jecxz
inc
add
fs
mov
(bad)
add
(bad)
cmp
jl
scas
outs
add
or
fld
push
movs
cmp
xchg
sub
(bad)
(bad)
jmp
into
cmps
rol
jmp
out
jb
aad
jbe
inc
cmp
dec
add
push
(bad)
(bad)
(bad)
jmp
pop
out
mov
data16
out
push
pop
daa
mov
sahf
pop
mov
scas
imul
inc
cld
inc
fwait
inc
adc
cmp
adc
loopne
test
push
mov
rol
(bad)
xor
lock
adc
test
mov
jmp
call
(bad)
inc
push
shl
int
(bad)
mov
mov
aas
(bad)
(bad)
(bad)
call
xchg
xchg
xchg
loopne
fst
xor
jbe
dec
sub
inc
sbb
mov
sbb
(bad)
(bad)
(bad)
jmp
and
pop
mov
xor
lock
mov
js
jp
jo
(bad)
ss
call
xor
jo
call
mov
dec
imul
jg
(bad)
call
lock
xor
inc
push
mov
and
(bad)
(bad)
dec
int3
lahf
cmps
mov
nop
sub
and
pop
sub
dec
adc
mov
cmp
adc
xchg
push
pop
sbb
xor
or
xchg
inc
jecxz
add
adc
(bad)
(bad)
jmp
sbb
push
movs
mov
push
cmp
adc
in
fsub
fistp
pusha
addr16
(bad)
(bad)
js
aaa
jmp
cli
jae
sbb
add
add
pop
inc
add
push
xor
(bad)
jmp
inc
cdq
mov
push
test
leave
and
sub
outs
in
mov
mov
int
fcomip
scas
cli
xchg
(bad)
(bad)
jbe
push
bnd
call
mov
push
in
cmc
(bad)
(bad)
jmp
popa
add
sbb
or
aad
and
fiadd
xchg
imul
movs
push
sar
(bad)
fistp
nop
int
test
mov
vcvtusi2ss
ror
mov
adc
xor
out
aaa
cmp
lods
or
(bad)
(bad)
inc
xor
test
rol
jne
mov
(bad)
xor
add
cld
cmp
fwait
call
(bad)
inc
sub
movs
push
ja
sbb
mov
inc
push
or
or
xchg
mov
pop
int3
out
(bad)
es
sub
dec
add
xor
call
stos
fmul
(bad)
jl
push
ins
std
clc
xchg
add
mov
(bad)
mov
addr16
pop
pop
xchg
clc
pop
add
stos
cs
add
pop
test
jp
(bad)
(bad)
jmp
adc
jg
mov
ror
retf
bound
test
lds
ins
sti
lods
cdq
(bad)
(bad)
(bad)
(bad)
ds
or
inc
sub
mov
mov
push
sub
or
bound
or
or
push
push
adc
(bad)
cli
inc
(bad)
(bad)
(bad)
mov
stc
jp
ret
loop
add
mov
push
jne
inc
test
mov
jo
dec
int3
pop
sbb
mov
mov
dec
cmp
(bad)
inc
pop
clc
test
xlat
les
int
adc
jg
scas
std
(bad)
mov
pop
(bad)
(bad)
(bad)
call
stos
push
mov
mov
xor
and
jo
jo
js
ins
xchg
clc
out
out
or
xchg
or
stos
xor
adc
add
jmp
cmp
cmp
pushf
and
mov
inc
sub
fidiv
push
add
add
das
mov
jg
lahf
xchg
js
jbe
mov
sbb
cdq
xchg
sti
fcomip
ds
(bad)
(bad)
push
pop
in
scas
xchg
idiv
and
push
fcomip
jl
pusha
cli
push
idiv
(bad)
(bad)
(bad)
inc
popf
ja
adc
sar
dec
cmp
fldcw
int
in
nop
pop
outs
xor
(bad)
jp
out
inc
int
aad
in
jg
dec
repnz
mov
push
cmp
(bad)
(bad)
jmp
adc
gs
icebp
jmp
mov
mov
outs
pusha
xor
scas
cli
rol
pop
sbb
enter
pop
jns
xlat
xchg
iret
dec
movs
ret
add
(bad)
inc
add
fsub
adc
ja
push
js
scas
out
ficomp
cmp
call
fist
sahf
leave
test
ret
call
(bad)
xor
xchg
scas
(bad)
(bad)
(bad)
call
xchg
sti
repz
adc
lods
jl
std
(bad)
scas
ret
inc
retf
sbb
repz
(bad)
(bad)
(bad)
(bad)
fldpi
adc
mov
call
scas
jae
mov
jmp
jne
mov
das
repz
cdq
les
cld
(bad)
(bad)
inc
fisttp
push
push
retf
pop
leave
popf
popf
mov
dec
sub
push
push
pop
xor
call
stos
test
sbb
cmps
mov
xlat
das
push
jbe
push
retf
les
fchs
test
retf
enter
inc
fs
in
dec
jo
inc
adc
retf
mov
or
(bad)
(bad)
call
lods
push
and
push
push
pop
jmp
mov
and
jmp
sbb
adc
mov
retf
mov
mov
popa
xlat
fs
cli
mov
jae
sbb
rcl
or
into
int
shr
xchg
aas
xchg
and
(bad)
(bad)
jmp
test
pusha
and
xor
das
std
stos
test
add
mov
adc
(bad)
(bad)
dec
ror
and
dec
lods
cmp
ret
(bad)
cmp
(bad)
xchg
jp
adc
push
inc
stos
sbb
and
(bad)
dec
xor
inc
lods
cmps
enter
dec
pop
or
push
(bad)
fs
pop
imul
(bad)
jmp
imul
xchg
push
jo
jmp
xor
pop
adc
adc
(bad)
jnp
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
pop
inc
out
psllq
adc
mov
mov
ja
(bad)
ins
es
movs
cli
xchg
(bad)
(bad)
call
loope
cmp
jns
icebp
push
arpl
mov
lods
mov
std
mov
jge
in
std
jmp
dec
add
hlt
ins
jg
mov
in
cld
hlt
cmp
mov
(bad)
(bad)
(bad)
mov
test
mov
aam
stc
es
dec
sbb
adc
fnsave
add
dec
imul
pop
outs
cmp
ins
or
cld
(bad)
(bad)
inc
movs
test
fxch
clc
and
sub
sti
out
fisubr
ja
in
xor
inc
pop
xchg
adc
(bad)
(bad)
call
les
push
jo
(bad)
mov
dec
iret
xchg
jbe
(bad)
inc
cmp
pop
sbb
fcomp
in
call
fsubp
imul
clc
xchg
push
or
fimul
mov
sar
jecxz
retf
cmp
dec
and
(bad)
(bad)
call
push
ror
icebp
xor
repz
mov
mov
sar
pop
inc
mov
jmp
sub
(bad)
dec
pop
or
sar
(bad)
(bad)
js
push
fldenv
push
in
addr16
arpl
iret
popa
call
(bad)
(bad)
jg
pop
cmp
jp
lods
in
jne
sub
mov
xchg
cmp
stc
mov
sahf
dec
(bad)
jmp
nop
retf
add
repz
mov
(bad)
(bad)
jmp
cmp
mov
lahf
stos
scas
dec
scas
cmc
pop
enter
sar
retf
push
push
fwait
adc
(bad)
(bad)
(bad)
jmp
call
mov
out
retf
and
push
outs
int
ret
cmp
(bad)
(bad)
call
arpl
mov
dec
adc
dec
pushf
cmp
outs
jbe
ja
(bad)
pop
(bad)
jmp
xchg
pop
fwait
cmp
mov
(bad)
mov
jns
(bad)
(bad)
(bad)
jnp
mov
retf
sbb
xchg
aad
sbb
sub
cli
pushf
fiadd
fisttp
mov
ins
(bad)
fsub
push
cmp
sar
jo
aas
jmp
out
aad
pop
xor
mov
adc
or
neg
(bad)
mov
cli
repz
neg
jg
pop
out
mov
mov
xor
push
mov
das
push
int
jbe
(bad)
(bad)
(bad)
push
jg
push
mov
jne
cwde
add
push
dec
es
fldenv
(bad)
(bad)
(bad)
dec
lea
and
jns
fucomi
push
daa
out
pop
cmp
clc
ins
or
and
(bad)
(bad)
dec
test
dec
jmp
pop
pop
add
cmps
inc
es
and
add
cmp
ja
cmps
arpl
outs
push
jp
inc
in
xor
jnp
push
movs
add
stos
int3
pusha
push
hlt
(bad)
(bad)
(bad)
call
gs
test
push
mov
mov
data16
retf
cmp
sub
popa
inc
xor
(bad)
(bad)
call
and
push
sub
mov
cmps
cli
jmp
(bad)
movs
iret
pusha
jbe
outs
repnz
mov
maxps
push
not
jmp
dec
jno
lods
ss
test
call
mov
mov
pop
lods
mov
scas
(bad)
cmp
push
inc
cmp
sar
(bad)
(bad)
inc
loope
cmp
add
outs
inc
cmp
jno
lods
jmp
es
push
adc
sbb
aaa
cld
inc
lock
inc
jl
cmp
call
jb
movs
pusha
lea
push
(bad)
(bad)
jmp
fwait
add
and
inc
cmc
in
or
pop
sub
mov
and
adc
(bad)
fild
jne
rcr
xacquire
xchg
(bad)
xchg
or
loop
(bad)
(bad)
(bad)
call
shl
xlat
scas
fild
sub
popa
(bad)
push
out
stc
push
sbb
mov
or
(bad)
(bad)
(bad)
jl
fldenv
hlt
pop
pusha
je
cmp
sbb
ins
push
repz
adc
(bad)
mov
adc
aaa
outs
movs
sbb
lods
push
shl
test
cmps
movs
xchg
jmp
xor
fiadd
adc
or
(bad)
inc
imul
je
aaa
mov
(bad)
(bad)
dec
faddp
jbe
jnp
stos
(bad)
cmps
(bad)
ficomp
sbb
repnz
add
in
test
mov
xchg
(bad)
(bad)
push
int
sbb
inc
or
repz
push
add
xlat
mov
call
(bad)
(bad)
(bad)
jmp
icebp
pushf
fcomp
out
(bad)
adc
add
and
mov
xor
outs
fdivr
(bad)
(bad)
call
add
retf
movs
and
mov
cmp
fnsave
xchg
stc
mov
(bad)
(bad)
jmp
shl
mov
jmp
lahf
pop
mov
repz
xchg
popa
rcl
in
fnstsw
jecxz
adc
jmp
sbb
xor
scas
mov
xor
sahf
or
repz
les
sbb
xchg
clc
mov
xlat
data16
(bad)
mov
adc
add
outs
cs
jns
fimul
test
pop
or
(bad)
(bad)
call
inc
(bad)
cs
cmp
js
ins
(bad)
je
cmp
pop
icebp
push
push
icebp
jne
call
fcmovb
(bad)
inc
pop
push
sbb
push
pop
sbb
mov
add
(bad)
mov
inc
pop
fst
cmp
rcr
and
add
pushf
fcomip
idiv
pusha
cli
jmp
lea
sbb
in
dec
(bad)
(bad)
(bad)
jmp
pusha
push
jmp
mov
dec
push
push
xor
out
cmp
dec
mov
jnp
dec
fldcw
mov
xchg
jg
shl
cdq
dec
mov
pop
pop
out
outs
sbb
mov
hlt
mov
jmp
mov
fldenv
sbb
(bad)
std
rcl
fldenv
adc
fstp
aaa
(bad)
(bad)
jg
mov
popf
push
sahf
pop
out
mov
rol
push
pop
sub
(bad)
jmp
dec
cmc
lea
add
sti
std
sahf
push
pop
jns
data16
add
xchg
retf
std
jg
cmp
push
jmp
inc
mov
lock
inc
setno
xchg
loope
mov
call
(bad)
push
and
inc
cmp
xor
(bad)
fsub
add
mov
cwde
iret
inc
test
nop
test
mov
xchg
inc
dec
mov
movs
or
jbe
dec
ja
jmp
(bad)
daa
dec
or
and
mov
sub
sbb
cld
cmp
pop
cld
inc
clc
(bad)
(bad)
jmp
dec
std
jmp
mov
popa
retf
xchg
push
sbb
stc
pop
inc
and
clc
cmp
push
push
shr
(bad)
jmp
movs
jne
(bad)
(bad)
inc
xchg
into
loop
outs
repz
das
push
(bad)
mov
(bad)
(bad)
fild
ins
adc
mov
and
scas
stos
retf
stos
push
sbb
daa
sti
and
cmps
inc
jecxz
add
inc
pop
dec
jmp
mov
lods
sub
popa
(bad)
dec
and
push
jae
out
outs
mov
(bad)
mov
adc
jle
adc
xor
inc
push
inc
inc
fs
in
(bad)
(bad)
jg
clc
(bad)
mov
push
das
ins
loope
add
jge
and
sar
(bad)
(bad)
call
lea
fnstsw
mov
imul
cmp
mov
mov
daa
add
jmp
rcl
je
inc
or
out
jmp
in
fdivr
cmp
jmp
dec
jne
aaa
inc
cdq
iret
or
mov
xchg
(bad)
(bad)
jmp
ror
xor
inc
or
call
imul
clc
js
sbb
pop
cld
(bad)
jmp
mov
popa
cmp
clc
popa
adc
dec
or
add
lahf
hlt
add
mov
(bad)
(bad)
call
fidivr
jg
and
div
pop
aas
mov
sub
ror
imul
ds
sbb
add
js
mov
out
sar
adc
and
jge
or
sub
sbb
test
jg
icebp
xchg
cmp
jmp
cmps
or
fwait
mov
(bad)
cmp
inc
imul
mov
cmps
scas
ins
stc
cld
push
push
dec
into
(bad)
mov
cdq
adc
xchg
sahf
cmp
or
push
jl
jnp
push
(bad)
mov
jg
call
lods
cmp
inc
mov
rcr
ins
imul
cmc
(bad)
dec
xor
jp
jle
and
stos
cmp
ins
js
test
(bad)
(bad)
out
and
test
scas
stc
dec
(bad)
mov
jge
mov
movs
sub
vmread
(bad)
inc
push
xchg
call
cmps
clc
aad
mov
dec
imul
(bad)
(bad)
(bad)
(bad)
js
push
mov
mov
pushf
or
adc
push
cdq
lods
shl
cli
pop
sub
xchg
sar
xor
shr
aaa
mov
jmp
mov
or
cdq
(bad)
(bad)
(bad)
push
imul
xchg
push
loopne
sbb
ins
or
jg
or
aaa
cld
mov
in
icebp
(bad)
(bad)
jmp
adc
push
push
xor
out
jecxz
mov
stos
mov
lahf
dec
or
call
adc
mov
mov
gs
popa
xchg
push
dec
call
fisttp
inc
jl
mov
adc
(bad)
(bad)
mov
outs
push
fstp
into
scas
popf
jmp
cmps
mov
add
inc
pop
(bad)
(bad)
(bad)
dec
popa
sub
jo
in
inc
fwait
cli
fisubr
bound
xor
call
add
inc
repnz
push
daa
xor
stos
push
aad
call
(bad)
mov
shl
add
(bad)
xlat
nop
mov
int3
xchg
stos
movs
push
sub
jg
inc
push
in
fwait
shr
and
ss
dec
cmps
push
add
cli
movs
call
call
add
ret
adc
mov
mov
cmps
bound
mov
fdivp
(bad)
out
jbe
mov
inc
ja
(bad)
jbe
arpl
jb
and
(bad)
call
cs
add
lods
nop
sbb
push
cmps
mov
es
js
cli
(bad)
jmp
(bad)
dec
lods
test
dec
jl
enter
dec
sbb
cmps
mov
(bad)
(bad)
(bad)
push
in
not
jns
ds
loopne
mov
jae
sub
mov
xchg
xchg
cmp
sub
(bad)
(bad)
jmp
xchg
pop
fwait
(bad)
retf
retf
test
mov
ins
test
add
rcr
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
stc
aad
mov
jg
xchg
stos
lea
shl
mov
jg
retf
mov
das
mov
dec
sub
outs
jne
stos
leave
adc
(bad)
rcl
pop
(bad)
cmp
or
adc
(bad)
jmp
push
test
or
pop
aam
xor
movs
cmp
adc
sub
jg
jmp
jo
adc
imul
push
mov
bound
int
push
std
dec
arpl
mov
and
enter
rol
imul
or
(bad)
(bad)
dec
xchg
pop
neg
fdiv
sbb
movs
mov
inc
pop
lock
adc
clc
(bad)
jle
clc
(bad)
(bad)
(bad)
jmp
cs
push
lods
jo
sub
sbb
(bad)
cmp
into
push
jmp
mov
movs
(bad)
(bad)
(bad)
call
sti
es
outs
ss
test
xchg
outs
imul
movs
sub
mov
mov
mov
arpl
into
in
sub
mov
jmp
lods
pop
mov
aaa
push
push
outs
mov
inc
mov
aaa
and
loope
xor
or
inc
(bad)
pushf
mov
or
jg
stos
ds
sub
clc
repz
jmp
adc
(bad)
jmp
je
(bad)
(bad)
mov
aam
clc
mov
les
or
(bad)
mov
(bad)
bound
adc
xor
mov
fs
cwde
mov
inc
xor
inc
xchg
ja
(bad)
dec
popa
scas
or
dec
add
xchg
and
pop
jb
loope
jl
arpl
mov
(bad)
(bad)
call
cmc
fidiv
jl
iret
aam
xlat
out
iret
pop
shl
sti
jae
mov
cwde
icebp
mov
pop
inc
cld
retf
adc
mov
int
add
mov
xlat
xor
pop
cld
(bad)
call
inc
adc
in
test
add
stos
sub
out
aaa
(bad)
(bad)
(bad)
call
push
jne
(bad)
push
in
stc
xor
mul
cmc
xchg
xor
sub
pop
ja
(bad)
(bad)
inc
push
or
lods
mov
cmp
repnz
push
mov
jg
inc
or
ja
repz
(bad)
(bad)
cmp
adc
add
fdivr
and
dec
push
mov
fistp
fsub
(bad)
(bad)
jns
add
test
dec
enter
adc
pop
sbb
and
lock
inc
or
adc
out
pop
jnp
xchg
call
push
lods
cmp
and
test
and
mov
stos
mov
push
mov
cmp
(bad)
(bad)
jmp
pop
in
push
add
mov
push
pop
mov
xor
fsub
lds
test
dec
jmp
dec
sub
push
mov
int3
jecxz
jecxz
sub
in
shr
and
jmp
push
clc
adc
xchg
xchg
outs
dec
test
sti
add
xchg
inc
adc
mov
(bad)
inc
sub
add
inc
aaa
or
cs
or
xor
inc
(bad)
fstp
test
inc
mov
pop
dec
(bad)
xchg
in
in
out
icebp
jmp
push
adc
add
add
scas
mov
pop
repz
push
xchg
aam
push
xchg
(bad)
(bad)
(bad)
(bad)
jmp
cmp
inc
jne
shr
fiadd
outs
xor
ror
pop
fcomp
outs
jmp
jp
xchg
cmps
mov
add
loop
pusha
(bad)
out
cwde
jge
scas
sub
or
dec
test
mov
or
pop
push
(bad)
(bad)
(bad)
(bad)
mov
clc
dec
fist
enter
rcr
push
cmps
iret
(bad)
push
push
xchg
or
or
stos
(bad)
call
cmps
loope
push
stos
pop
aaa
aam
test
ret
loope
xor
(bad)
mov
mov
or
stc
mov
loopne
shr
mov
jbe
(bad)
(bad)
dec
ss
and
sub
retf
mov
setg
jbe
mov
mov
sbb
xchg
xor
(bad)
(bad)
(bad)
(bad)
mov
mov
cmc
mov
push
pop
mov
add
jmp
(bad)
js
push
call
add
push
xchg
xor
mov
sub
fisubr
jg
call
mov
cli
jle
dec
test
inc
sbb
retf
sbb
mov
call
into
sbb
mov
sbb
and
lea
addr16
xlat
cld
xchg
(bad)
(bad)
(bad)
call
outs
sub
mov
cmp
jmp
lods
mov
call
xchg
iret
repz
push
(bad)
(bad)
(bad)
call
xchg
sub
std
icebp
cmp
jmp
sbb
jle
add
fiadd
and
std
(bad)
jmp
xlat
(bad)
mov
les
xlat
imul
push
aad
(bad)
(bad)
dec
jge
inc
aaa
es
adc
movs
bound
sub
xchg
cmps
lahf
addr16
push
(bad)
(bad)
mov
push
ret
repz
pop
outs
pusha
imul
sahf
das
lods
mov
and
(bad)
cmp
mov
movs
stos
mov
(bad)
inc
leave
aaa
mov
adc
mov
cld
(bad)
(bad)
jmp
out
jmp
popa
adc
sahf
test
xor
retf
movs
nop
add
fcos
(bad)
(bad)
inc
sbb
sub
jae
sar
jae
pop
repz
sub
mov
mov
iret
(bad)
cli
sub
(bad)
mov
scas
mov
xchg
in
jmp
hlt
cmps
in
(bad)
(bad)
(bad)
(bad)
aas
scas
jecxz
jbe
daa
imul
ficom
sub
(bad)
add
sub
cmp
pop
and
sbb
(bad)
push
inc
les
push
mov
hlt
sti
(bad)
(bad)
(bad)
inc
pop
out
fdivr
xor
and
sbb
jecxz
into
daa
push
repz
jmp
mov
mov
rcr
mov
push
and
jno
arpl
sub
(bad)
(bad)
inc
add
leave
loopne
idiv
cwde
inc
mov
and
fwait
adc
retf
(bad)
call
push
pop
inc
mov
or
add
cli
jmp
xor
pop
mov
xchg
inc
je
retf
xchg
sub
dec
jbe
push
mov
movs
js
test
xchg
cmp
stc
retf
push
popf
xor
(bad)
(bad)
call
fiadd
pop
movs
xchg
xchg
ja
hlt
and
or
cmps
shl
sbb
(bad)
(bad)
(bad)
call
xlat
stos
movs
push
mov
mov
mov
mov
add
mov
push
sar
(bad)
(bad)
(bad)
jmp
outs
das
push
lds
lea
imul
mov
adc
inc
inc
inc
xchg
ja
aad
(bad)
push
movs
pop
mov
cmp
enter
lods
jne
das
mov
(bad)
(bad)
dec
or
test
adc
dec
icebp
push
loopne
(bad)
out
(bad)
(bad)
(bad)
jg
ficomp
xor
clc
add
icebp
add
dec
add
mov
outs
test
mov
sub
outs
(bad)
(bad)
push
jmp
sbb
jecxz
nop
pop
sbb
call
stos
mov
bound
call
mov
addr16
ja
xor
cld
push
stos
ds
xchg
call
pop
aad
add
pop
pop
mov
(bad)
(bad)
std
int3
mov
mov
and
fst
test
add
xchg
clc
aam
jmp
mov
lock
int3
out
inc
mov
sbb
push
mov
ins
hlt
mov
or
pop
xchg
sbb
sbb
(bad)
(bad)
(bad)
fldcw
cmp
pop
dec
jp
(bad)
xor
test
push
and
repz
add
aas
mov
test
movs
iret
js
sub
shl
mov
xor
gs
xlat
je
push
loopne
pusha
sub
not
fs
sub
(bad)
(bad)
jmp
repz
in
mov
mov
mov
xchg
xlat
(bad)
(bad)
ds
jecxz
retf
js
lods
push
(bad)
(bad)
(bad)
dec
ret
jae
mov
(bad)
pop
call
lahf
in
sti
xchg
cmp
ds
pop
sbb
lock
push
dec
clc
ins
vcmpps
mov
fst
(bad)
(bad)
(bad)
call
jmp
cwde
retf
mov
inc
push
cmc
sub
pusha
adc
dec
btr
(bad)
(bad)
(bad)
out
sub
cmp
push
(bad)
test
inc
callw
mov
pop
mov
fdiv
sti
loop
(bad)
(bad)
(bad)
(bad)
jmp
iret
inc
jmp
sar
and
jo
dec
(bad)
in
repz
clc
xlat
add
(bad)
(bad)
mov
call
out
mov
pop
inc
dec
and
inc
test
call
push
xor
std
mov
cdq
pop
pop
sub
xlat
lods
xlat
(bad)
(bad)
call
(bad)
pop
or
cld
std
inc
sub
cld
fst
stc
repz
(bad)
jg
int3
push
cmp
cmp
int
aas
std
stos
dec
(bad)
stc
cmp
(bad)
(bad)
dec
in
aam
int3
mov
push
arpl
inc
push
jl
out
cdq
ret
outs
clc
call
mov
in
dec
movs
es
xor
in
imul
aad
inc
mov
jno
loopne
sub
shl
out
add
fwait
retf
(bad)
(bad)
push
push
pusha
clc
ins
sub
sub
jae
jbe
(bad)
call
xchg
mov
jecxz
iret
nop
inc
je
or
cli
ja
(bad)
(bad)
fisub
cmc
mov
pop
cmp
inc
add
(bad)
xchg
ror
out
mov
(bad)
(bad)
inc
pop
push
ds
cmp
cmp
leave
sar
cmp
xchg
jne
leave
inc
mov
(bad)
(bad)
dec
imul
sub
sub
push
pop
stc
data16
push
mov
call
fidiv
adc
cs
inc
fs
les
push
adc
mov
jl
mov
mov
push
imul
pop
int
(bad)
cmps
test
pop
loope
pop
repnz
(bad)
(bad)
(bad)
jmp
push
loopne
sub
mov
add
aad
bound
pushaw
sbb
sbb
push
sar
sbb
aam
jo
push
push
xor
xor
dec
inc
(bad)
(bad)
(bad)
call
pop
mov
in
push
xlat
mov
neg
retf
sub
fwait
sbb
popa
icebp
(bad)
(bad)
call
aas
push
pop
dec
push
getsec
aad
dec
lds
xchg
dec
sub
add
ins
out
fldcw
adc
inc
prefetchnta
xchg
test
test
nop
push
inc
push
push
and
sub
inc
imul
xchg
jnp
retf
rol
pushf
fst
or
push
push
(bad)
(bad)
call
adc
shr
sub
fucomi
pop
out
div
jb
jns
adc
(bad)
(bad)
(bad)
(bad)
fst
xor
mov
push
fistp
sub
sti
jnp
xchg
shr
clc
(bad)
inc
test
and
push
mov
pop
cmp
(bad)
call
mov
mov
out
push
push
dec
ins
out
repnz
mov
sbb
clc
mov
add
bound
outs
ds
pop
jnp
cmp
pop
mov
movhps
cmps
xchg
cmp
fisubr
aaa
enter
sub
mov
jbe
pop
div
aam
push
outs
(bad)
(bad)
(bad)
call
test
stos
test
pop
adc
or
fnstenv
fwait
(bad)
jmp
dec
inc
shr
jle
(bad)
int
loop
aam
mov
(bad)
(bad)
(bad)
(bad)
inc
dec
sub
ret
les
xchg
(bad)
mov
dec
lahf
xchg
cwde
out
stos
test
jecxz
daa
(bad)
(bad)
(bad)
call
cs
les
adc
pop
mov
pop
xor
inc
xchg
inc
xor
aaa
and
push
dec
in
mov
add
jns
push
cld
dec
fbstp
je
clc
xor
mov
int
(bad)
push
dec
pop
mov
add
scas
adc
(bad)
(bad)
(bad)
jmp
adc
cmp
cli
dec
adc
bound
stos
mov
mov
xchg
or
pop
pop
icebp
(bad)
(bad)
cli
sti
add
out
outs
mov
add
cmp
pop
xor
loopne
push
jmp
ja
sub
push
sub
xchg
cld
pop
adc
jmp
or
fidiv
mov
shl
sub
mov
cs
cmp
in
and
jb
push
rol
(bad)
cld
jnp
pop
sub
test
xor
test
popa
push
movs
add
(bad)
(bad)
(bad)
jmp
cmp
and
sub
adc
add
les
xchg
push
mov
std
inc
scas
inc
pop
(bad)
jg
jmp
push
imul
outs
adc
adc
(bad)
push
les
push
jp
jl
push
lds
adc
fsubr
repz
push
pop
loopne
(bad)
(bad)
call
mov
push
retf
xor
pop
sahf
stos
js
sti
or
add
lods
jl
inc
(bad)
(bad)
(bad)
jmp
popa
or
imul
and
sbb
ret
loopne
jb
loop
out
std
sub
neg
(bad)
(bad)
inc
pushf
in
fist
dec
ret
pop
cld
mov
dec
push
push
inc
xchg
add
push
aas
dec
add
in
(bad)
out
cli
inc
mov
clc
jo
or
jge
inc
ror
es
push
clc
(bad)
(bad)
dec
cmp
xor
push
xchg
dec
lods
pop
adc
aam
(bad)
mov
rcr
push
add
add
stc
daa
add
mov
(bad)
push
(bad)
dec
inc
dec
fcom
mov
pop
imul
pop
push
xchg
mov
or
mov
lahf
clc
jne
jle
cdq
pop
cmp
(bad)
scas
(bad)
mov
sub
stos
(bad)
(bad)
mov
xchg
dec
add
pop
fs
repz
(bad)
loopne
(bad)
push
(bad)
mov
push
push
repz
adc
push
(bad)
std
sub
ds
(bad)
(bad)
call
or
lea
sbb
sbb
xchg
push
push
or
test
push
push
sbb
nop
and
call
dec
lods
pushw
add
jmp
inc
(bad)
(bad)
sti
sub
fwait
and
outs
cmp
test
leave
xchg
(bad)
(bad)
(bad)
push
aas
mov
repz
pop
sbb
mov
mov
adc
xor
(bad)
(bad)
dec
ret
xchg
dec
test
adc
aad
(bad)
addr16
add
sub
(bad)
(bad)
dec
mov
cmp
ins
sbb
mov
sub
mov
jo
stos
(bad)
jmp
stos
mov
out
jl
sub
retf
mov
cli
mov
(bad)
(bad)
dec
xchg
push
jecxz
fwait
mov
xor
loopne
jmp
dec
out
sbb
mov
(bad)
call
(bad)
xor
(bad)
arpl
jge
clc
loopne
popf
(bad)
pop
fcmovu
mov
(bad)
(bad)
(bad)
dec
cmc
cld
ja
xor
shr
sub
jmp
(bad)
stos
adc
clc
stos
(bad)
(bad)
(bad)
inc
shl
xor
sub
enter
cld
mov
mov
daa
mov
inc
test
sub
dec
and
daa
and
ja
mov
fisub
aad
lahf
sub
enter
inc
lds
imul
or
imul
cli
(bad)
(bad)
(bad)
dec
out
pop
fidivr
in
outs
enter
xor
test
mov
call
push
rcr
pop
(bad)
jmp
mov
retf
(bad)
jae
out
pop
movs
test
scas
mov
mov
aam
js
dec
cdq
jno
sub
mov
ins
popf
xor
mov
pop
sbb
dec
jl
dec
mov
ins
cmp
fimul
adc
lahf
jmp
(bad)
(bad)
(bad)
jmp
adc
sub
pop
push
mov
(bad)
(bad)
(bad)
call
mov
hlt
sub
mov
call
pop
push
int
mov
or
add
sbb
xchg
mov
outs
add
jno
lock
sub
jmp
test
sub
pop
or
mov
icebp
(bad)
jmp
cmc
mov
dec
inc
adc
push
jge
stc
jno
adc
enter
cmp
cmp
mov
pushf
lods
and
push
leave
fcom
cmp
adc
cmp
popa
push
cmp
xor
sbb
xchg
mov
sub
das
pop
cld
mov
sbb
dec
or
and
loopne
sub
sar
or
outs
pop
and
push
(bad)
mov
sbb
add
rcl
mov
imul
adc
(bad)
inc
js
jecxz
nop
add
xor
pop
xchg
inc
cwde
mov
mov
inc
push
push
adc
jg
pusha
add
iret
dec
lds
sub
push
and
cmp
in
xchg
adc
add
fs
(bad)
add
and
mov
dec
pop
inc
push
retf
(bad)
jmp
(bad)
retf
inc
xchg
repnz
(bad)
mov
xor
xchg
std
loop
dec
icebp
mov
sub
sbb
outs
push
dec
(bad)
repnz
sbb
xchg
jmp
outs
fadd
sub
xchg
mov
xlat
stos
out
mov
cmp
mov
inc
and
out
adc
jle
sbb
push
jb
and
jae
jecxz
mov
cmp
adc
jl
(bad)
cdq
(bad)
xor
cmp
sub
(bad)
lea
jne
(bad)
int
bound
pop
loope
or
inc
pushf
iret
jecxz
mov
push
stos
loop
mov
out
dec
hlt
out
popa
sub
hlt
(bad)
jmp
sub
(bad)
push
call
jne
dec
(bad)
clc
push
push
jb
jmp
(bad)
test
jns
adc
add
push
jmp
aaa
adc
repz
imul
lods
mov
xchg
or
and
fnop
stc
dec
bnd
in
dec
aam
pop
ja
(bad)
out
fs
mov
mov
lea
inc
inc
lods
imul
(bad)
(bad)
(bad)
(bad)
fnstsw
pop
add
out
sbb
jl
pop
jg
mov
test
xor
in
jmp
(bad)
(bad)
(bad)
call
ins
fistp
mov
jecxz
repnz
cmps
mov
jnp
int3
(bad)
(bad)
(bad)
(bad)
cmp
xchg
cmp
bound
pop
fwait
add
push
jle
mov
jae
jns
cld
sti
jg
ror
mov
mov
dec
pop
mov
cmp
ss
xor
mov
sbb
ins
mov
sub
pop
test
(bad)
(bad)
call
sub
cld
sub
push
xor
jle
sbb
pop
or
sub
(bad)
call
cmps
sbb
nop
bound
das
das
cmp
cmc
addr16
popf
popa
test
or
icebp
mov
icebp
in
jge
in
adc
out
int3
mov
mov
loop
pop
icebp
xchg
ret
aam
idiv
pop
push
xchg
fs
test
pop
add
jo
adc
fisub
jmp
icebp
inc
out
fld
cmc
sbb
xchg
data16
mov
sub
add
or
mov
(bad)
(bad)
(bad)
fisttp
sbb
xchg
(bad)
int3
sub
jl
pop
mov
test
outs
pushf
je
jmp
(bad)
(bad)
(bad)
call
jl
cmp
cdq
lods
push
push
mov
in
add
int3
jbe
add
add
(bad)
(bad)
(bad)
jmp
push
test
stos
lock
push
cmp
add
in
cwde
xchg
inc
cmc
cli
inc
lahf
aam
and
(bad)
(bad)
call
add
test
inc
ror
aaa
adc
mov
dec
lahf
(bad)
(bad)
(bad)
mov
pop
leave
push
push
mov
mov
ret
(bad)
in
mov
add
cmps
sub
mov
ret
xchg
push
adc
mov
inc
dec
mov
popa
(bad)
(bad)
(bad)
(bad)
out
push
(bad)
mov
jle
aad
icebp
pop
fmulp
xor
mov
cdq
mov
jo
(bad)
(bad)
(bad)
dec
daa
pop
cs
add
pop
lods
and
cmp
pop
pop
mov
(bad)
push
ror
(bad)
jmp
das
add
push
stos
popa
dec
retf
repz
(bad)
(bad)
push
add
mov
mov
movs
int3
xor
mov
sbb
ins
cmp
jcxz
cld
push
out
cli
(bad)
(bad)
fdiv
add
adc
jns
mov
push
jbe
push
imul
add
stos
(bad)
(bad)
jg
xchg
daa
mov
pop
mov
hlt
call
push
stos
jns
outs
or
and
(bad)
(bad)
inc
mov
(bad)
int3
jp
sbb
dec
xchg
or
push
push
mov
jmp
add
popf
dec
lods
xchg
pop
pop
pusha
cmp
xchg
cmps
stos
fidivr
shr
xor
or
jmp
es
jecxz
call
shl
je
das
cmp
mov
mov
xor
sbb
adc
xchg
loopne
or
pusha
(bad)
sbb
cli
mov
out
ss
cli
fmul
(bad)
(bad)
push
push
mov
push
jl
fwait
push
sub
mov
stos
mov
(bad)
(bad)
jg
mov
sbb
icebp
cmps
pop
pop
inc
hlt
jecxz
sub
jo
mov
out
aaa
(bad)
jg
out
or
not
or
shrd
cmps
pop
mov
shl
out
nop
(bad)
xchg
xchg
sub
sahf
adc
(bad)
pushf
pop
cdq
mov
mov
push
dec
movs
pusha
shl
xchg
in
dec
mov
fnsave
or
sub
call
addr16
(bad)
and
scas
fnstenv
mov
repnz
(bad)
dec
or
sbb
rcl
xlat
push
mov
ffreep
movs
jl
(bad)
(bad)
(bad)
jmp
retf
arpl
sub
dec
clc
push
into
pop
(bad)
jae
or
pushw
fwait
imul
inc
(bad)
(bad)
(bad)
dec
adc
lahf
jmp
or
pop
mov
ret
push
mov
sbb
jp
mov
jmp
mov
sbb
push
in
mov
push
jle
mov
in
mov
(bad)
(bad)
jmp
mov
mov
add
loop
fld
pop
jae
into
push
hlt
adc
je
fdivr
(bad)
(bad)
call
div
fwait
loopne
xor
ficomp
das
popf
cmps
cmp
mov
jmp
(bad)
call
mov
popf
or
dec
jg
jmp
jle
sbb
mov
inc
cld
(bad)
push
cmc
mov
iret
inc
repnz
push
sbb
sbb
les
aaa
dec
lahf
retf
in
aas
push
jmp
mov
pop
(bad)
jl
sbb
xchg
aas
jmp
(bad)
(bad)
(bad)
(bad)
fstp
and
stos
sub
in
lods
xor
fs
push
and
sbb
cdq
jns
(bad)
(bad)
inc
sub
adc
and
out
jg
cmc
and
inc
pop
push
push
fdiv
(bad)
(bad)
call
stc
sbb
and
xor
push
adc
std
jge
(bad)
(bad)
(bad)
jmp
gs
pop
mov
mov
sub
test
movs
xchg
(bad)
xchg
push
jo
repz
inc
mov
add
(bad)
mov
out
(bad)
(bad)
call
xchg
repz
cmp
mov
jb
xchg
push
push
arpl
das
pop
inc
jg
loopne
shr
(bad)
call
dec
lods
int3
pop
add
pop
sti
xchg
jnp
cmp
adc
(bad)
enter
cmp
(bad)
(bad)
jmp
icebp
(bad)
adc
adc
cmp
xor
iret
ins
cmp
cdq
adc
enter
mov
(bad)
ftst
rcr
xchg
int3
je
xchg
ret
push
pop
mov
push
and
inc
lds
dec
cdq
fwait
(bad)
(bad)
inc
or
pop
sub
fiadd
xor
mov
dec
aad
(bad)
(bad)
(bad)
call
les
push
push
sbb
cmp
jo
test
pop
pop
test
mov
rcl
lock
push
push
in
lods
inc
jge
xor
jmp
bound
in
scas
mov
adc
inc
add
inc
out
pop
(bad)
jecxz
stos
(bad)
(bad)
call
std
dec
jmp
pop
ss
mov
(bad)
cmp
inc
outs
pop
imul
les
xor
mov
mov
push
push
adc
xchg
jl
(bad)
(bad)
push
dec
ins
push
out
je
push
sub
inc
jno
imul
imul
sbb
(bad)
(bad)
jmp
hlt
or
xor
dec
lods
add
cmps
imul
dec
loop
shl
ret
mov
jbe
jle
sub
arpl
push
out
or
cmp
push
pop
and
inc
inc
inc
mov
ret
int
cmps
sti
jmp
and
adc
(bad)
call
mov
daa
xchg
pop
int3
jmp
inc
adc
add
sbb
pop
mov
cmp
jnp
or
call
stc
fcom
lock
lds
jmp
ret
jmp
jl
cli
inc
(bad)
(bad)
(bad)
(bad)
jmp
xchg
pushf
fldcw
test
mov
mov
test
mov
jmp
add
cmp
pop
pop
int
dec
sahf
fnstsw
mov
fxch
(bad)
out
(bad)
(bad)
(bad)
jmp
sub
pop
outs
push
pop
cmp
jl
sahf
or
sbb
shld
enter
pop
aas
and
(bad)
(bad)
jle
mov
jle
cmp
jg
popf
dec
xchg
ja
jmp
or
pop
sbb
jl
mov
xchg
push
std
jmp
in
push
adc
xchg
(bad)
push
push
adc
or
push
ss
(bad)
jg
jmp
test
push
ds
xor
jns
or
frstor
idiv
(bad)
(bad)
dec
pop
out
lods
into
popf
cmp
arpl
xor
fistp
lods
cld
(bad)
sbb
fbld
out
cwde
and
jns
xor
add
mov
mov
daa
cwde
and
mov
sub
lods
inc
push
fwait
pop
loope
popa
pop
mov
(bad)
push
in
int3
iret
ja
sahf
ds
stc
sar
or
cmp
push
(bad)
(bad)
push
daa
push
dec
push
mov
call
addr16
xchg
test
call
jmp
out
mov
fisubr
(bad)
call
stos
mov
repz
retf
push
loop
mov
xor
sub
(bad)
(bad)
(bad)
inc
fs
push
call
sahf
out
fiadd
jns
push
shr
fld
(bad)
(bad)
(bad)
jmp
arpl
sub
stc
mov
dec
push
pop
cmps
repnz
xchg
std
pusha
gs
aaa
jecxz
(bad)
(bad)
jmp
sub
outs
push
xchg
adc
dec
push
push
jo
fdiv
mov
icebp
ror
mov
pusha
jo
adc
mov
(bad)
dec
call
add
jmp
sahf
cmps
mov
and
jp
pusha
stos
adc
fadd
sar
(bad)
jmp
fmul
test
jbe
pop
xor
cmps
mov
pop
out
outs
fnsave
jg
ja
pop
jno
or
mov
and
(bad)
(bad)
push
call
addr16
cs
movs
mov
hlt
mov
iret
sub
ds
mov
(bad)
(bad)
(bad)
mov
mov
dec
xchg
and
clc
dec
clc
loope
pop
pop
inc
sub
inc
fild
retf
clc
in
add
push
mov
in
inc
fwait
popf
inc
test
mov
(bad)
dec
(bad)
aaa
sbb
data16
lahf
dec
(bad)
cdq
mov
add
lock
(bad)
mov
dec
push
jns
pop
cli
lods
mov
inc
inc
jb
rcr
call
jb
lahf
js
push
les
cdq
jle
retf
into
pop
push
pop
pop
jnp
cmp
std
leave
fs
xor
(bad)
(bad)
(bad)
(bad)
inc
stos
cmp
fs
out
imul
sub
int
test
(bad)
mov
cmps
daa
mov
popf
outs
(bad)
(bad)
(bad)
jmp
in
lods
loopne
pop
mov
jmp
std
outs
movs
pop
test
(bad)
(bad)
(bad)
call
inc
jl
cmp
inc
rcr
dec
and
pop
adc
sahf
jle
(bad)
jg
dec
out
rcr
mov
xor
clc
jnp
jge
rcr
(bad)
aad
adc
fsubrp
add
aad
push
frstor
cwde
adc
(bad)
clc
xor
(bad)
(bad)
inc
outs
ror
sbb
ret
pop
mov
adc
and
sbb
(bad)
(bad)
(bad)
push
adc
push
mov
sbb
mov
pop
jnp
push
rep
cmp
and
xchg
ret
jnp
dec
fstp
aad
imul
pop
or
push
or
jg
add
jnp
cmp
(bad)
jg
out
fwait
sbb
mov
ret
int
hlt
fs
aam
fcomi
dec
int
pop
(bad)
jg
(bad)
imul
lods
ficom
mov
shl
(bad)
test
jns
and
(bad)
cmp
rcl
fcomip
iret
jg
sub
jp
rol
repz
sub
xor
(bad)
push
fnsave
jb
mov
sub
lahf
ins
loopne
and
push
neg
test
scas
and
(bad)
(bad)
(bad)
jmp
push
std
or
lea
sahf
cmp
pop
cmps
xchg
mov
mov
stc
push
das
sbb
(bad)
dec
dec
repz
mov
or
xchg
pop
sub
pop
mov
sar
pop
repz
adc
cs
(bad)
(bad)
call
pushf
sub
daa
mov
mov
sub
out
aaa
cmp
push
inc
mov
mov
loope
call
mov
idiv
call
cs
(bad)
dec
outs
jle
mov
mov
int3
mov
cmp
stos
mov
retf
data16
aaa
std
mov
popf
stc
jnp
xor
sbb
dec
(bad)
push
pop
(bad)
(bad)
(bad)
mov
pop
jle
dec
xor
movs
dec
xchg
int3
movs
aaa
jmp
and
mov
sub
repnz
inc
aad
cmp
(bad)
(bad)
(bad)
jl
cmp
retf
jbe
jl
cmp
xor
retf
mov
push
inc
in
pop
test
(bad)
(bad)
(bad)
jmp
aam
std
loope
or
push
rcr
lods
std
fidiv
mov
push
imul
sti
(bad)
(bad)
(bad)
inc
inc
adc
mov
inc
push
inc
xor
and
add
push
jle
xchg
mov
and
pop
lea
jo
lock
les
xchg
(bad)
jmp
adc
or
mov
cld
retf
dec
fwait
ror
aad
jg
xchg
addr16
(bad)
push
int
les
pop
nop
(bad)
daa
out
or
movs
cmp
(bad)
dec
add
movs
stos
pusha
test
xlat
and
jbe
mov
push
mov
jl
call
(bad)
(bad)
(bad)
(bad)
jl
inc
fsubrp
push
cmp
xchg
ins
push
lods
cmp
push
hlt
pop
bound
dec
jnp
leave
retf
push
or
lods
xchg
fild
inc
jbe
call
jo
mov
(bad)
jmp
inc
mov
(bad)
cwde
stos
or
mov
imul
cs
mov
fwait
cmp
sar
push
je
mov
aam
das
xchg
dec
cmp
cmps
xchg
ss
repnz
pop
lods
(bad)
(bad)
jg
push
cli
push
stc
cmc
test
push
push
push
in
push
pop
(bad)
outs
scas
stos
pop
ins
inc
fild
loop
and
in
pop
mov
jmp
add
(bad)
(bad)
(bad)
sti
add
(bad)
sub
xchg
push
jecxz
idiv
sbb
scas
inc
stos
push
dec
ins
mov
cmc
(bad)
call
inc
sbb
mov
inc
xchg
popa
xor
push
mov
test
push
fcos
(bad)
ffreep
mov
xchg
test
xor
dec
xor
xor
and
loopne
mov
out
je
hlt
movs
push
cmps
pop
inc
icebp
repz
pop
push
les
adc
fidivr
out
arpl
idiv
(bad)
call
mov
sbb
push
in
lods
jmp
into
xchg
and
arpl
(bad)
(bad)
jmp
(bad)
mov
stc
test
mov
push
add
cmp
into
ret
sbb
(bad)
push
mov
nop
pushf
jmp
nop
out
dec
mov
jne
mov
jg
fisttp
xchg
(bad)
(bad)
(bad)
mov
stos
loopne
aaa
repz
ja
jbe
in
test
fcom
mov
mov
mov
mov
jnp
call
call
das
pop
popa
push
ja
inc
cli
xchg
dec
jg
hlt
adc
xchg
jne
imul
jg
(bad)
push
or
lods
bound
daa
call
popf
das
lods
(bad)
(bad)
dec
loop
adc
pusha
movs
adc
push
cld
jno
(bad)
push
aam
jmp
cmp
(bad)
(bad)
push
in
add
(bad)
pop
into
addr16
pop
inc
inc
sbb
jp
sar
ja
add
jg
sti
push
and
pop
push
nop
dec
movs
adc
ins
dec
push
fwait
mul
xchg
pop
mov
cwde
retf
inc
cld
lahf
enter
scas
and
or
add
mov
icebp
mov
ret
xor
(bad)
iret
cmp
push
pusha
inc
aas
add
mov
lock
cmc
xor
(bad)
call
rol
mov
stc
mov
sub
jo
(bad)
(bad)
(bad)
jmp
pushf
sbb
dec
jmp
mov
rcr
(bad)
(bad)
addr16
arpl
stc
in
call
ins
les
mov
or
shr
call
pop
dec
clc
sti
out
enter
push
jmp
ins
mov
xlat
jge
daa
repz
mov
pop
std
push
and
or
jb
jbe
(bad)
(bad)
(bad)
std
retf
mov
or
inc
sub
push
int
cmp
cdq
or
lds
aaa
std
(bad)
jl
das
sti
mov
icebp
data16
idiv
cmp
pop
popf
mov
ins
retf
push
cld
jmp
inc
sbb
add
and
mov
add
and
(bad)
(bad)
inc
adc
sahf
mov
popa
mov
fisub
add
xchg
sti
mov
loopne
push
sbb
std
push
pop
xor
push
retf
leave
sti
adc
lods
(bad)
jmp
aad
pop
push
ja
push
mov
das
dec
(bad)
jl
cmp
int3
(bad)
(bad)
(bad)
jg
cmp
test
loope
ss
mov
fs
or
cmp
rol
fiadd
(bad)
inc
sbb
ss
inc
dec
sub
mov
jae
pop
xor
mov
add
es
cmps
stos
(bad)
(bad)
(bad)
inc
retf
test
adc
dec
shl
and
rol
cwde
mov
scas
jmp
cmc
(bad)
(bad)
aas
cmp
push
cmovo
test
ret
loope
mov
sub
push
(bad)
arpl
inc
(bad)
(bad)
cli
jg
rcr
call
add
movs
xor
cld
(bad)
dec
ins
(bad)
(bad)
(bad)
call
int3
je
loope
sub
lods
push
mov
pop
add
sub
xchg
das
das
xor
ins
adc
jecxz
lock
jo
mov
out
clc
mov
jge
icebp
(bad)
(bad)
inc
add
push
(bad)
sub
cld
clc
cmps
push
cmc
sub
nop
retf
sar
(bad)
mov
outs
fs
xchg
jae
mov
sub
xor
mov
jmp
out
sub
sub
pop
cmp
mov
iret
int3
(bad)
ds
mov
(bad)
(bad)
mov
cmps
in
or
test
or
lock
das
fadd
dec
push
sub
jmp
push
loop
mov
ret
pop
ja
jle
mov
jge
sar
test
mov
push
inc
rol
aaa
stos
sub
jns
mov
cmp
cmp
inc
sbb
in
xchg
cmps
mov
cmp
xchg
or
dec
inc
cmp
lods
dec
sbb
mov
dec
or
mov
mov
sbb
xor
sub
ins
jle
jo
(bad)
jp
jmp
mov
inc
(bad)
(bad)
out
mov
add
push
stc
pushf
cmp
jmp
cmc
(bad)
(bad)
call
pop
mov
cmp
enter
sahf
(bad)
std
sbb
(bad)
(bad)
(bad)
daa
in
xlat
mov
xor
xchg
xchg
xlat
add
rcl
push
cdq
or
xchg
add
jmp
jl
ins
hlt
add
inc
xor
gs
cmp
repnz
in
mov
cmp
(bad)
(bad)
mov
lods
mov
push
out
std
fldcw
cld
cdq
ret
movs
aas
repz
push
sbb
aad
pop
loope
jmp
push
sub
or
xchg
add
xor
repz
lods
pop
dec
test
(bad)
(bad)
(bad)
mov
stos
dec
inc
push
inc
repz
inc
inc
cmps
mov
or
shl
jnp
cmp
and
aad
add
or
add
jmp
cs
cmps
sahf
(bad)
(bad)
(bad)
jg
test
or
cli
mov
cmc
pop
cmp
adc
cmp
push
push
(bad)
(bad)
(bad)
call
loopne
cmp
jmp
mov
mov
icebp
dec
stc
jb
scas
mov
(bad)
aas
adc
out
adc
pop
cli
(bad)
jmp
xor
or
push
lods
(bad)
(bad)
(bad)
call
mov
loopne
xor
(bad)
popa
dec
pusha
(bad)
mov
movs
loope
adc
jg
mov
lock
dec
jmp
inc
mov
jns
push
imul
aam
(bad)
mov
mov
pop
scas
adc
jg
inc
xchg
pop
ret
scas
xor
outs
push
mov
stos
mov
jne
mov
xchg
push
mov
(bad)
mov
cld
ret
loopne
scas
inc
in
inc
pop
or
loope
cmp
call
push
das
jl
into
pushf
push
lahf
js
inc
fist
and
xchg
dec
pop
xchg
(bad)
(bad)
push
mov
mov
popa
mov
sbb
ret
lea
ret
ins
(bad)
(bad)
mov
or
jne
cld
loopne
xchg
jbe
or
jb
or
jg
test
cmp
repnz
and
cmp
(bad)
mov
popa
xchg
lods
and
pop
adc
add
inc
mov
pop
popf
clc
call
loopne
popa
inc
inc
and
push
out
mov
dec
ins
cs
jbe
clc
add
inc
pop
jecxz
mov
(bad)
(bad)
(bad)
mov
adc
stc
cmps
retf
enter
es
(bad)
mov
xchg
xchg
ret
mov
jbe
in
fsub
clc
fcom
cli
mov
(bad)
(bad)
mov
push
pop
xor
in
inc
call
adc
adc
sbb
and
(bad)
(bad)
dec
leave
inc
movs
clc
test
dec
inc
mov
push
cmc
(bad)
out
dec
fidivr
das
(bad)
dec
xor
jl
fldenv
stos
add
xchg
jns
loope
(bad)
(bad)
(bad)
inc
test
mov
mov
aas
cmp
mov
dec
pop
push
pusha
sbb
clc
test
loop
(bad)
(bad)
(bad)
cmp
cmp
loopne
arpl
mov
lahf
loope
sub
pop
pushf
in
stc
mov
jg
jecxz
sti
mov
pop
div
mov
push
(bad)
cmc
mov
test
mov
(bad)
(bad)
(bad)
(bad)
in
inc
jo
xor
das
adc
push
js
and
pop
or
push
mov
repz
(bad)
(bad)
call
dec
push
push
shl
jbe
cs
out
fwait
xchg
popf
mov
push
(bad)
fcmovnb
push
mov
pusha
shl
xor
mov
cmp
(bad)
(bad)
push
jns
not
aaa
ins
jnp
fidiv
(bad)
(bad)
xchg
stos
(bad)
test
imul
retf
idiv
(bad)
(bad)
jmp
js
sbb
mov
sbb
or
xor
loope
pop
cli
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
frstor
inc
stos
movs
cmp
cmp
cmp
cdq
movs
(bad)
(bad)
(bad)
call
xor
adc
test
xor
or
imul
retf
outs
in
sar
(bad)
(bad)
fcmovnb
xchg
fstp
bnd
fsub
in
cmp
pop
pop
dec
or
cld
stos
dec
in
sbb
xchg
dec
js
add
sub
mov
popa
adc
mov
into
sti
mov
(bad)
(bad)
dec
mov
xor
sahf
or
mov
retf
adc
clc
clc
aaa
aas
ds
(bad)
(bad)
push
stc
jns
sub
add
jecxz
jae
cmp
add
(bad)
cld
cli
cmc
lods
scas
cld
sahf
pusha
addr16
or
push
inc
jmp
push
inc
mov
mov
in
xchg
or
les
sbb
jno
pop
lock
mov
cmp
call
mov
pop
scas
and
dec
inc
aaa
(bad)
(bad)
(bad)
dec
cmp
sub
dec
imul
pop
pop
xor
sbb
jg
call
jbe
ss
dec
movs
mov
xchg
test
mov
push
dec
push
rol
(bad)
out
clc
dec
ins
inc
push
mov
cmp
out
sbb
xchg
(bad)
(bad)
(bad)
cmp
adc
or
stos
xchg
std
push
pop
mov
pop
jo
xchg
fisubr
(bad)
(bad)
mov
push
loop
aad
and
xor
clc
dec
or
sub
cmp
fdiv
das
cli
jmp
and
rcr
or
inc
jle
out
push
into
(bad)
(bad)
call
out
frstor
in
mov
mov
test
add
sbb
(bad)
(bad)
jmp
jp
pop
cs
mov
xor
scas
jne
pop
ds
jmp
scas
(bad)
(bad)
(bad)
jmp
test
dec
adc
sub
sub
(bad)
jns
mov
jmp
(bad)
inc
lock
mov
adc
jo
sbb
or
cmp
lock
shr
(bad)
(bad)
(bad)
call
xor
lods
push
cmp
sbb
test
rcl
sbb
ja
fdiv
mov
movups
fistp
ins
test
push
cmc
xor
mov
fdivr
inc
sub
jbe
(bad)
(bad)
call
cmp
jb
and
add
cmp
out
gs
cdq
in
jns
jmp
call
xchg
popa
sbb
push
and
(bad)
mov
lods
sbb
cld
push
jae
and
dec
dec
(bad)
cmp
dec
dec
(bad)
bound
cmp
out
push
cmp
dec
add
test
cmp
push
fs
(bad)
jl
ss
mov
das
push
rcl
rcl
dec
stos
push
iret
gs
sbb
add
jbe
jo
fdiv
cmp
repz
mov
test
mov
(bad)
push
sub
adc
int3
iret
jg
(bad)
jg
cmp
out
or
cwde
ror
test
(bad)
(bad)
jmp
mov
pop
mov
jge
adc
bound
jg
lds
hlt
mov
jle
or
(bad)
call
sub
mov
push
or
movs
sbb
(bad)
inc
pop
pop
jle
inc
(bad)
mov
cmp
out
xchg
stos
and
push
mov
and
lock
test
mov
cmp
(bad)
(bad)
jmp
pop
arpl
jb
or
jmp
icebp
in
mov
adc
aaa
mov
(bad)
(bad)
jmp
push
mov
jne
push
mov
addr16
pop
or
leave
out
jns
je
jl
xchg
sahf
ret
(bad)
(bad)
(bad)
push
push
xor
pop
xchg
nop
add
lahf
sti
push
push
xchg
push
popa
jmp
repnz
mov
retf
(bad)
(bad)
stc
mov
sub
mov
mov
ja
xor
xor
repnz
jmp
les
cld
xchg
sub
xchg
cwde
mov
addr16
cmc
jnp
bnd
xor
lds
(bad)
jmp
arpl
jnp
test
test
lea
sar
(bad)
(bad)
cli
scas
pop
retf
(bad)
popf
mov
cdq
stos
mov
sub
(bad)
(bad)
jg
jp
push
cmp
inc
mov
mov
sub
ins
or
out
and
out
je
clc
add
jmp
or
dec
inc
push
xor
js
or
push
jb
add
push
(bad)
(bad)
(bad)
push
adc
and
pusha
adc
movs
pop
les
and
repnz
cmps
clc
dec
(bad)
jnp
(bad)
(bad)
(bad)
dec
(bad)
push
push
arpl
sub
xchg
pop
dec
mov
test
mov
pusha
popf
add
ret
jmp
mov
pop
inc
pop
(bad)
sbb
jecxz
pop
fld
sub
or
sbb
jl
fs
test
div
(bad)
(bad)
mov
push
pop
dec
dec
stos
fucomp
xor
rcl
mov
or
(bad)
push
(bad)
(bad)
call
and
and
retf
jle
ret
lds
adc
sar
add
mov
jecxz
add
in
jp
cld
(bad)
call
pop
mov
sub
mov
pop
sbb
mov
call
fistp
sub
mov
cmp
shl
sahf
test
(bad)
call
cwde
inc
adc
daa
rcl
mov
stos
retf
idiv
fist
and
sub
dec
lock
std
sbb
or
test
arpl
cmp
xchg
je
lock
ret
imul
or
xor
stos
mov
adc
jb
cmp
xchg
inc
sbb
jo
(bad)
(bad)
(bad)
jmp
movs
inc
fwait
xchg
pop
inc
add
push
sub
out
pusha
pop
ins
cli
mov
fld
push
pop
push
or
xchg
imul
inc
in
jle
sub
test
cmp
(bad)
(bad)
(bad)
dec
sbb
fist
(bad)
mov
push
fld
push
fdecstp
(bad)
ja
cld
xchg
xchg
ret
lea
ret
mov
add
daa
pop
into
xor
lods
add
pop
lock
hlt
sub
lods
(bad)
(bad)
(bad)
jmp
dec
push
retf
fsubp
daa
cmp
mov
sub
std
outs
frstpm(287
push
inc
retf
dec
push
clc
sbb
or
enter
cld
mov
xchg
(bad)
(bad)
(bad)
dec
ins
imul
and
out
test
ins
in
cld
(bad)
inc
ret
cmps
(bad)
lea
ret
test
xor
mov
push
pop
call
out
mov
ficom
add
loopne
cli
jg
or
mov
mov
fild
and
(bad)
(bad)
jmp
repz
jbe
inc
add
push
cmp
mov
ss
ins
or
iret
add
(bad)
mov
xchg
mov
mov
sbb
movs
repnz
(bad)
call
adc
lods
mov
mov
into
jns
and
add
(bad)
(bad)
(bad)
jg
popa
adc
test
aas
pop
imul
rcl
rol
shl
cmp
(bad)
mov
sub
sbb
scas
mov
mov
fwait
and
adc
(bad)
pop
or
jnp
(bad)
(bad)
(bad)
jmp
in
ror
mov
and
push
or
add
add
je
jo
mov
jmp
daa
addr16
mov
loope
dec
mov
sbb
(bad)
(bad)
call
ds
aaa
fwait
dec
jnp
fcom
inc
inc
fistp
or
ret
mov
loop
(bad)
(bad)
fdivp
sbb
out
cmps
and
cmp
pop
dec
pop
(bad)
jmp
clc
push
mov
push
push
add
jne
mov
mov
popa
ret
arpl
data16
jnp
neg
xchg
mov
jmp
or
int
fs
mov
add
jae
test
dec
cld
add
and
mov
and
(bad)
(bad)
push
test
push
pop
cmp
aas
retf
out
mov
(bad)
push
adc
int
shl
xchg
sub
jmp
inc
fidiv
mov
aad
push
clc
inc
mov
mov
and
scas
adc
(bad)
pop
add
add
mov
push
std
sbb
sub
pop
in
add
push
aad
cmp
jmp
push
in
daa
mov
outs
and
cmp
sahf
fld
pop
ss
cmp
or
(bad)
fcomip
icebp
into
pop
imul
(bad)
repnz
mov
inc
or
push
xor
pop
cmp
jmp
in
sub
sbb
test
aam
(bad)
out
push
cmp
inc
cmp
mov
cld
sub
add
(bad)
jmp
(bad)
and
loopne
rol
mov
hlt
(bad)
sbb
les
or
out
xchg
daa
sbb
inc
cmp
sbb
mov
mov
fadd
inc
call
cmp
or
jmp
push
push
mov
mov
lods
add
mov
push
test
jnp
aad
stos
mov
jb
sahf
mov
ror
in
loope
(bad)
(bad)
push
xchg
jnp
std
movs
cmp
and
cmp
push
push
jne
lods
lds
mov
adc
dec
(bad)
(bad)
(bad)
call
or
mov
mov
push
pop
scas
in
inc
test
push
adc
shl
(bad)
dec
sahf
mov
inc
add
mov
add
stos
cmp
xchg
in
lods
add
cld
jnp
outs
(bad)
dec
lods
xor
xchg
mov
inc
sbb
cs
popf
scas
add
inc
(bad)
jl
aas
mov
sub
mov
mov
xchg
adc
mov
into
and
fwait
dec
enter
jne
jmp
or
into
inc
dec
pop
test
(bad)
(bad)
(bad)
fsub
dec
test
pusha
mov
loopne
(bad)
xor
add
or
dec
stc
pop
fwait
mov
loop
mov
jmp
out
jge
arpl
out
dec
and
xchg
js
mov
jne
daa
adc
jmp
(bad)
sub
test
push
cdq
mov
add
(bad)
pop
push
mov
and
jp
or
and
in
jbe
sbb
add
jmp
in
test
hlt
stc
xor
cmp
and
and
(bad)
(bad)
jg
pop
inc
in
repz
jge
mov
pop
ds
in
xchg
jp
(bad)
(bad)
(bad)
call
mov
mov
push
lds
sbb
(bad)
jle
mov
(bad)
(bad)
(bad)
call
adc
sub
mov
adc
(bad)
std
push
movs
push
inc
and
test
add
(bad)
(bad)
dec
test
test
xchg
(bad)
inc
lock
xor
mov
ja
mov
ret
(bad)
(bad)
dec
(bad)
and
pop
mov
test
int
addr16
imul
push
scas
out
(bad)
jg
xchg
fcom
xchg
movs
push
int3
jg
mov
dec
sbb
inc
movs
popf
out
push
sub
fnstenv
push
daa
std
mov
idiv
dec
and
bnd
push
jmp
mov
pop
(bad)
dec
dec
inc
xchg
movs
out
aad
clc
ja
pop
lock
dec
jo
jmp
in
iret
push
adc
dec
ficom
(bad)
cmps
push
mov
inc
sub
jb
mov
(bad)
stos
cmp
jge
ja
(bad)
inc
(bad)
test
push
std
stos
es
jae
mov
cmp
(bad)
(bad)
(bad)
dec
les
out
js
fcomp
out
add
cmp
cld
mov
stos
fnstcw
jl
(bad)
cmc
nop
(bad)
(bad)
(bad)
call
leave
sar
jecxz
(bad)
lahf
(bad)
sbb
(bad)
js
test
cli
jle
mov
out
scas
jmp
sbb
jmp
mov
repz
out
sar
mov
cli
jg
mov
jmp
movs
jecxz
adc
shl
jmp
mov
loopne
jge
pop
adc
popa
scas
aad
push
sbb
xor
add
xor
outs
jbe
push
mov
(bad)
cld
sti
xchg
stc
outs
stos
push
xchg
scas
cli
(bad)
jg
sbb
fbstp
cld
setp
inc
cmp
dec
or
(bad)
(bad)
cmp
sti
ja
(bad)
jmp
push
jg
ror
mul
jg
(bad)
int3
dec
fcos
(bad)
(bad)
dec
daa
and
rcr
into
std
outs
sbb
mov
jp
dec
pop
(bad)
out
(bad)
(bad)
mov
inc
out
outs
dec
aas
cli
icebp
das
jle
mov
out
out
(bad)
(bad)
fcomip
std
out
test
inc
(bad)
sbb
mov
shl
iret
cmp
imul
(bad)
(bad)
(bad)
(bad)
in
mov
aas
imul
cmps
aas
std
jmp
sbb
mov
cmp
(bad)
call
cld
pop
xchg
xor
shl
cmp
neg
(bad)
cld
frstor
jae
adc
xor
xchg
(bad)
(bad)
es
call
std
cmps
mov
sahf
imul
mov
xor
mov
(bad)
(bad)
(bad)
dec
pop
fwait
pushf
cli
scas
dec
call
ins
in
(bad)
out
mov
mov
inc
cli
cmp
outs
ins
jae
(bad)
call
cmps
jne
popf
mov
sti
clc
enter
ss
scas
cli
push
ror
cmp
(bad)
call
xor
sbb
outs
push
jle
mov
xor
repz
movs
outs
mov
xor
or
int3
les
or
sub
leave
test
xchg
sahf
jns
(bad)
shl
push
repnz
int
sar
in
ja
ror
jmp
inc
jmp
cmp
mov
cwde
or
dec
jg
lods
dec
dec
jge
and
or
int
mov
mov
sahf
sar
inc
out
f2xm1
lea
shl
jge
jmp
cmp
dec
fstp
sar
pop
out
cmc
xor
xor
fisttp
lods
mov
int3
xchg
mov
pop
mov
xchg
cmp
aas
loop
shl
loope
jmpw
sti
cmp
mov
fs
(bad)
pusha
adc
mov
(bad)
jmp
xchg
cmps
test
cdq
fild
int3
sub
xor
jnp
xchg
popf
cld
mov
scas
sbb
jnp
enter
mov
scas
clc
shl
sar
mov
mov
jmp
inc
jmp
fs
jmp
jo
mov
hlt
test
push
adc
jno
daa
xor
ret
fbld
icebp
aaa
xchg
std
popf
hlt
jns
xor
fcmove
cmp
xchg
sbb
cmp
ins
adc
in
mov
lods
jnp
sbb
push
imul
jbe
jge
stc
mov
sbb
inc
mov
sbb
call
jl
pop
outs
(bad)
scas
sahf
gs
ins
sbb
imul
rcr
or
out
push
gs
sbb
in
push
mov
cdq
outs
aam
imul
pop
mov
stc
push
add
outs
dec
(bad)
jmp
imul
sub
(bad)
rcr
xor
(bad)
movs
es
sbb
sbb
stos
test
(bad)
cmp
cli
or
mov
leave
outs
fwait
mov
lods
fucom
pop
(bad)
aaa
or
fucomip
std
ficom
dec
aaa
aaa
(bad)
jmp
scas
jbe
fst
out
js
cli
sbb
aad
jno
pop
sar
int3
test
test
and
mov
pushw
mov
sti
mov
xchg
movs
ins
clc
hlt
fldpi
adc
cmovl
repz
(bad)
jg
sar
arpl
movs
pop
(bad)
clc
(bad)
enter
jmp
xchg
outs
and
repz
dec
aas
call
movs
mov
clc
lahf
out
pop
sbb
pop
out
pop
cmps
aaa
fdiv
fistp
fwait
loope
out
push
or
fild
cmp
push
in
cld
sub
lods
sub
scas
sbb
loopne
pop
and
shr
xchg
jp
outs
push
adc
push
sbb
push
jmp
aas
fdiv
je
call
fsubr
fwait
mov
cmp
cmp
fwait
pop
cmp
sahf
test
cmps
stc
jmp
mov
into
and
loope
(bad)
imul
or
outs
mul
movs
sbb
aas
hlt
inc
fistp
mov
imul
cmp
pop
push
mov
sbb
jmp
xchg
mov
xor
sti
ins
sahf
repz
sbb
adc
mov
(bad)
mov
xor
mov
jge
cdq
jg
ret
pop
fdivrp
mov
div
sub
pushf
or
xor
cwde
jge
mov
scas
adc
les
or
adc
cmp
imul
test
addr16
fidiv
stos
inc
addr16
int3
aam
xchg
fisttp
cwde
cmp
dec
pusha
nop
mov
loopne
sti
mov
dec
add
pop
mov
jne
jne
imul
mov
push
icebp
lods
ins
dec
jle
adc
lahf
repz
rcl
ret
add
cli
out
push
loope
in
push
or
push
out
dec
sbb
out
stos
aaa
jmp
and
pop
les
sbb
jecxz
stos
call
fdiv
lods
cs
mov
lahf
out
pusha
das
cmps
call
or
in
popf
mov
out
cli
nop
jo
aas
jno
jp
out
jne
bound
inc
jo
lock
xchg
jns
pop
outs
jg
iret
mov
test
mov
scas
cmp
cmp
(bad)
jle
ja
or
adc
jl
popa
sbb
ja
imul
sti
jg
(bad)
fstp
js
inc
(bad)
dec
jmp
and
jle
jae
jns
jmp
cli
adc
sub
mov
ds
sbb
mov
mov
loop
mov
jmp
ds
(bad)
mov
lock
and
dec
retf
adc
fwait
jbe
(bad)
int
jmp
scas
jmp
jp
scas
mov
inc
lahf
(bad)
in
xor
popa
jnp
iret
mov
rol
dec
pusha
inc
sahf
dec
ja
ret
xchg
jnp
jge
pop
sar
int
mov
ins
mov
jmp
xor
adc
sbb
jg
mov
sub
stos
push
int
push
les
mov
and
fst
retf
and
lds
jbe
dec
(bad)
pop
sar
aam
pop
int3
hlt
pand
jno
stc
xchg
mov
in
jae
jmp
aam
mov
shr
in
xchg
xor
and
jne
push
mov
mov
pop
jmp
pop
out
xor
inc
and
inc
jmp
fistp
int
pop
out
jns
repnz
ins
cmp
pop
dec
mov
mov
xchg
pop
or
fs
mov
xchg
mov
ficomp
push
in
jge
div
out
(bad)
jg
or
(bad)
fbld
cmp
ror
and
addr16
bound
cmps
ret
mov
std
ins
mov
jge
mov
sbb
xchg
mov
jmp
ret
cmps
data16
xor
adc
(bad)
xor
push
cmp
adc
repz
add
jge
xor
jnp
add
clc
neg
jl
push
xchg
fidivr
mov
(bad)
push
mov
das
adc
dec
add
mov
fnstsw
and
sub
imul
movs
clc
jmp
add
fld
sti
jl
push
inc
jne
lock
and
call
mov
cmp
inc
mov
ja
sub
mov
push
sub
mov
dec
dec
mov
shl
xchg
outs
mov
mov
adc
aaa
mov
xor
mov
loop
inc
or
jno
sar
inc
rcl
ja
in
rcl
sub
icebp
ds
pushf
xchg
jmp
out
xchg
cwde
ds
sub
cwde
xchg
pop
adc
cmp
ds
cmps
xchg
std
sbb
pop
out
imul
jmp
jl
enter
in
fnsave
aaa
(bad)
int3
push
jecxz
xchg
jbe
dec
sub
mov
lahf
push
xchg
ret
out
jno
call
adc
xor
fnsave
push
loopne
outs
jno
loopne
and
aas
(bad)
repnz
in
adc
mov
mov
sahf
sbb
fld
inc
sub
pop
leave
popa
shl
or
adc
adc
ds
fld
push
push
inc
or
jae
mov
inc
mov
sbb
push
fidiv
push
xchg
jp
out
push
(bad)
shl
cmps
int
lods
adc
aam
mov
stc
mov
cmc
pop
es
out
stos
add
(bad)
mov
shl
fsubrp
mov
(bad)
icebp
pop
ret
sahf
cmps
(bad)
mov
mov
clc
or
je
cmp
pop
out
pusha
ret
push
lods
or
jns
fwait
mov
repnz
inc
jle
hlt
cmp
scas
int
in
jmp
inc
(bad)
mov
hlt
in
fsubrp
mov
lahf
inc
call
aaa
xor
pop
js
xor
xchg
dec
fsub
jecxz
cdq
mov
sar
leave
jns
jmp
add
push
test
jp
adc
xor
push
loopne
push
cmp
push
dec
mov
push
in
sahf
xor
mov
inc
(bad)
jmp
hlt
mov
dec
outs
jmp
sbb
push
jge
sbb
add
setb
(bad)
adc
xchg
xchg
imul
jl
cmp
lods
movs
fldenv
shl
inc
jnp
movs
addr16
enter
push
mov
or
cmp
push
cmp
xor
in
push
xor
fisttp
xor
movs
loop
jecxz
clc
dec
lea
and
or
pop
test
cmps
mov
(bad)
(bad)
pop
inc
sbb
test
icebp
ror
mov
ror
pop
not
mov
in
mov
mov
inc
out
mov
loop
pushf
in
popf
(bad)
in
stos
cmp
aaa
jae
scas
xchg
adc
mov
dec
inc
xor
lds
in
xchg
pushf
in
mov
daa
daa
mov
xor
std
push
out
jb
mov
dec
loope
xor
or
inc
retf
aaa
and
std
mov
adc
jle
dec
jnp
xchg
xchg
xchg
xchg
sbb
or
sub
dec
jg
sti
iret
jle
xor
add
shr
ja
(bad)
std
out
out
cmp
pop
movs
jge
std
std
fisttp
ja
inc
inc
div
cmp
gs
mov
outs
fs
daa
jns
push
and
dec
sbb
xor
(bad)
outs
push
xchg
iret
jge
out
push
clc
jnp
mov
mov
mov
stos
sbb
adc
cmc
xchg
fistp
cdq
das
shl
ret
jg
fsubr
dec
das
mov
repnz
ins
sbb
loopne
stc
(bad)
call
or
pop
mov
or
pop
outs
retf
mov
cmc
addr16
jnp
add
mov
call
pop
and
(bad)
mov
jmp
dec
fstp
enter
xor
lea
and
hlt
mov
cli
fcmovbe
retf
push
jp
stos
mov
dec
out
daa
popf
stos
out
jle
jns
das
xchg
jbe
je
enter
fld
cld
outs
data16
(bad)
jmp
in
fild
jecxz
outs
cmps
push
dec
ds
cmps
scas
xor
enter
mov
into
fistp
aas
dec
stos
sti
imul
xor
mov
pop
clc
fmul
jmp
fisttp
sti
xchg
fsub
call
out
mov
imul
pop
xchg
dec
mov
xor
push
lock
js
rcl
call
sti
rcl
xchg
aaa
lds
repz
(bad)
rcl
inc
fwait
(bad)
fstp
jbe
outs
mov
je
icebp
xchg
inc
fidivr
inc
mov
lods
xor
sar
fstp
fucomi
(bad)
mov
sar
add
sub
sti
sub
cmp
sahf
(bad)
dec
mov
and
iret
shl
jp
push
xor
lahf
adc
dec
cmp
subps
rcl
out
mov
call
xor
jp
ffree
daa
push
fisttp
xlat
dec
aas
pop
dec
mov
cwde
fwait
xor
xor
push
add
fwait
(bad)
jae
cmp
xchg
arpl
leave
cmps
shr
cmp
sub
sub
xchg
jns
ror
jne
in
xlat
adc
or
pop
mov
bound
jae
stc
sbb
je
icebp
jle
int3
sub
(bad)
cmp
ret
call
(bad)
mov
std
loopne
test
push
popf
int
add
xor
repz
fistp
jge
jae
jmp
mov
mov
pushf
cmp
fnsave
and
rcr
retf
fstp
adc
inc
mov
pop
jmp
fwait
xor
(bad)
cmp
mov
pop
cdq
mov
outs
pop
clc
mov
outs
mov
inc
retf
aaa
fidivr
mov
pop
or
int
sub
mov
mov
jns
repz
jecxz
cwde
sti
in
mov
neg
or
cmp
lock
(bad)
push
cwde
push
aas
mov
rol
idiv
mov
in
pop
jnp
or
mov
outs
push
jbe
push
in
lahf
jp
(bad)
mov
fisubr
(bad)
out
cli
pop
sar
mov
iret
adc
and
jmp
imul
mov
int3
sub
cmp
std
mov
js
mov
(bad)
mov
ins
das
adc
int
sub
fdivr
jne
dec
add
sti
jmp
shl
(bad)
mov
test
cwde
(bad)
xchg
cmp
xchg
mov
dec
mov
cld
scas
add
sbb
jg
retf
jmp
add
jg
push
or
mov
pop
into
and
call
jo
mov
aas
mov
aas
sbb
pop
add
imul
and
gs
pusha
clc
add
and
ror
scas
mov
mov
fistp
enter
mov
push
and
xchg
inc
mov
or
cmp
int
pop
mov
das
(bad)
push
bnd
cdq
scas
adc
xor
loopne
std
fcomi
jmp
ror
(bad)
daa
ja
popa
sub
xor
pop
rcl
loop
dec
aad
fdivr
and
and
sub
xor
cld
jo
inc
popfw
cmp
or
cmp
pop
loopne
jns
in
mov
mov
rol
inc
not
inc
(bad)
mov
leave
enter
xchg
mov
and
mov
dec
adc
(bad)
jge
stos
inc
cmps
jo
sar
jg
fbstp
xchg
dec
into
fucom
scas
loop
sbb
adc
pop
scas
sbb
sti
repz
sbb
nop
pop
sub
out
data16
loope
imul
in
in
cwde
lahf
sub
dec
xchg
mov
aas
inc
aad
cmps
popf
out
jp
add
mov
cmp
mov
ret
paddsw
cmp
xor
stc
es
sahf
mov
inc
sub
mov
scas
sub
das
add
rcr
std
lahf
push
push
cli
repz
out
repnz
hlt
ret
clc
lock
(bad)
jg
dec
inc
add
das
dec
(bad)
jle
repz
push
jg
push
cli
fbstp
mov
sbb
inc
cmp
in
mov
aad
xchg
and
pop
int
push
xchg
nop
shr
dec
js
inc
das
test
or
int
in
mov
int
loopne
push
stos
in
rcl
xor
sbb
mov
pop
test
pop
sub
add
call
sub
xor
out
mov
test
ror
xchg
int
fwait
adc
push
and
mov
dec
sub
or
mov
in
in
push
ds
add
inc
inc
inc
mov
daa
aaa
int
and
adc
outs
add
add
push
fwait
and
aas
arpl
or
ret
pop
jb
data16
pushf
in
mov
(bad)
call
lds
push
and
jecxz
mov
cmp
or
(bad)
(bad)
(bad)
inc
fdiv
mov
xchg
aaa
sub
js
mov
repnz
into
(bad)
es
mov
outs
mov
(bad)
(bad)
jmp
fldcw
xchg
add
adc
adc
out
mov
fcomp
push
in
sbb
iret
test
movs
(bad)
(bad)
mov
stos
dec
aad
sub
shl
jns
je
jne
jne
stos
mov
pop
(bad)
(bad)
fcomip
mov
inc
adc
out
test
add
mov
pushw
dec
push
rol
bound
aad
fbstp
shl
cs
xchg
add
les
ja
js
jp
jbe
(bad)
out
xchg
retf
cmp
inc
or
sbb
push
pushf
rcl
je
adc
or
mov
cmp
sub
(bad)
mov
add
scas
mov
ds
scas
out
int3
push
mov
retf
push
jmp
cmc
sbb
arpl
sahf
push
or
mov
or
cmp
outs
clc
daa
rcl
call
cmp
adc
mov
jbe
cmc
mov
or
loop
jmp
clc
push
xchg
test
xor
xchg
fsub
ins
(bad)
stos
jl
js
xchg
jns
idiv
test
mov
fld
inc
pop
jb
ins
adc
(bad)
(bad)
(bad)
bound
int3
ror
jmp
mov
ds
das
adc
jmp
daa
mov
adc
stos
add
(bad)
(bad)
(bad)
inc
jo
xor
mov
pop
cmp
call
pop
test
or
(bad)
scas
outs
dec
test
mov
(bad)
mov
mov
cmp
jno
scas
push
lea
cmps
jecxz
das
jg
dec
xor
loopne
(bad)
mov
inc
and
sub
cmc
in
inc
xor
lds
out
aaa
lock
(bad)
jmp
inc
rol
jg
aam
pop
gs
rcl
push
mov
(bad)
fistp
pusha
xor
adc
aaa
pop
push
(bad)
mov
clc
fnstcw
mov
cmp
(bad)
(bad)
dec
jbe
and
xchg
or
sbb
and
xchg
xor
mov
xchg
cld
(bad)
(bad)
push
pop
or
mov
inc
movs
cld
sub
rcl
fnsave
xchg
jg
call
outs
push
loop
adc
scas
out
repz
scas
sub
push
je
je
xor
adc
sbb
out
or
xor
sbb
imul
sbb
mov
add
push
xchg
push
(bad)
jg
push
ja
retf
xlat
icebp
test
out
loop
int3
cmp
adc
mov
call
push
mov
jl
jl
mov
mov
add
aam
add
outs
mov
xchg
dec
add
cld
mov
dec
sub
or
mov
sbb
xor
pop
pusha
iret
cmp
cmc
mov
int3
sbb
retf
push
lods
mov
add
dec
mov
jmp
jp
retf
pop
fdivr
sbb
fcomp
leave
jmp
mov
test
jle
add
cmp
call
mov
daa
sbb
or
pop
lahf
cmp
(bad)
jmp
fwait
ror
add
mov
mov
ss
mov
mul
clc
(bad)
inc
repnz
adc
and
and
cdq
add
(bad)
(bad)
call
inc
ret
loop
jmp
es
pop
ret
pushf
add
outs
fstp
mov
sti
pop
lahf
or
ss
sahf
cmp
aad
mov
adc
dec
lock
std
cmp
xor
xor
jbe
mov
dec
pop
daa
aas
adc
loop
pop
pop
test
sbb
dec
sti
jbe
pop
iret
xor
inc
nop
hlt
sbb
mov
int3
xchg
or
ins
cdq
add
push
jmp
arpl
lahf
push
sti
fldcw
and
test
xchg
idiv
mov
shr
inc
mov
xlat
xor
inc
lods
pop
(bad)
push
(bad)
icebp
inc
cmp
(bad)
cmp
bound
sbb
and
mov
inc
push
adc
pop
dec
dec
inc
lea
mov
es
xor
dec
fsubr
lock
std
addr16
(bad)
(bad)
(bad)
mov
mov
neg
into
in
push
out
push
fidiv
dec
in
cld
jno
adc
(bad)
(bad)
(bad)
(bad)
fsubrp
ins
lds
jp
add
int3
out
call
mov
add
call
jmp
call
xor
repnz
sbb
inc
sbb
pop
ret
add
hlt
popa
cmp
stc
add
sbb
(bad)
(bad)
push
retf
dec
jg
ins
addr16
idiv
sti
and
js
(bad)
out
fwait
xor
xchg
and
(bad)
(bad)
(bad)
(bad)
mov
daa
ret
add
scas
ret
out
xlat
stos
push
stos
scas
jp
cmc
push
mov
(bad)
inc
dec
add
lea
inc
pop
out
pop
in
shr
cmps
call
push
ret
mov
sbb
sbb
push
clc
mov
jne
xchg
repnz
push
jo
mov
dec
or
aas
push
jmp
test
(bad)
jmp
imul
je
jle
sahf
inc
cmp
xchg
imul
cmp
rol
mov
and
mov
mov
sbb
(bad)
call
rcl
(bad)
call
jecxz
popf
inc
adc
call
dec
jne
and
push
and
fwait
daa
push
aad
xor
xor
(bad)
inc
add
dec
retf
ja
adc
js
scas
jge
fiadd
mov
jp
call
mov
push
test
pop
loope
xor
adc
(bad)
repz
jl
add
cli
sub
add
test
mov
loope
movs
call
mov
sahf
mov
(bad)
(bad)
(bad)
in
jmp
mov
adc
pop
leave
ds
inc
push
lods
push
shr
sbb
movs
mov
call
cld
jno
cli
mov
xor
add
mov
cmps
test
xor
jle
aam
push
sbb
(bad)
(bad)
jp
push
icebp
in
movs
sahf
pop
jge
push
fstp
clc
inc
arpl
cli
push
push
cmp
cmp
jne
repnz
test
cld
cmp
es
mov
mov
mov
out
jp
cmps
push
sbb
test
pushf
add
jno
into
je
inc
aad
xchg
pop
push
(bad)
inc
add
sahf
pop
mov
jns
add
repnz
(bad)
mov
pushf
xor
fwait
dec
cwde
jno
add
data16
sti
dec
inc
sub
(bad)
(bad)
(bad)
inc
ss
test
xlat
adc
aam
xchg
aam
push
daa
lds
daa
mov
dec
mov
(bad)
(bad)
call
or
mov
fcmove
sti
add
adc
shr
mov
xor
add
adc
fwait
or
pop
rcr
add
push
cmp
push
lock
sub
lea
mov
adc
fcomip
sbb
rcl
jecxz
(bad)
test
sub
sub
fnstsw
cmp
sub
(bad)
dec
jecxz
rcl
aam
xchg
sub
pop
mov
xor
js
ficom
ja
add
(bad)
(bad)
mov
adc
cmp
jmp
mov
push
lahf
ins
stc
shl
xlat
jg
mov
mov
push
(bad)
jg
xchg
enter
push
and
cmp
and
mov
(bad)
cmp
js
cwde
sub
push
jmp
neg
adc
push
mov
dec
add
xor
(bad)
jg
fdivp
cwde
xor
mov
add
les
inc
inc
ficom
(bad)
jg
add
inc
and
ret
push
in
cmp
push
hlt
jg
dec
jmp
add
dec
stc
fist
and
cmp
and
rcr
fwait
(bad)
(bad)
fistp
dec
jmp
push
pop
dec
cmp
xor
in
lock
ja
cdq
popf
out
mov
arpl
cmc
xor
mov
(bad)
(bad)
(bad)
jge
stos
xchg
sub
adc
add
dec
sbb
xchg
fst
sbb
sbb
push
scas
in
or
inc
into
loop
out
cmp
or
in
clc
pop
cld
jg
push
pusha
adc
add
das
cmp
adc
inc
cmp
adc
(bad)
(bad)
(bad)
mov
aam
pop
popf
out
pop
cmc
in
xor
jle
mov
push
mov
push
idiv
(bad)
(bad)
push
popa
sbb
test
inc
(bad)
adc
and
dec
test
mov
cmp
or
(bad)
pop
cld
jo
inc
mov
sub
call
fsubr
shl
(bad)
jg
adc
retf
jns
lods
inc
xlat
mov
mov
jne
call
jle
mov
dec
leave
cmp
add
add
mov
mov
push
push
fmul
in
repnz
jo
xchg
or
leave
cmpxchg
fprem1
imul
out
out
ret
ret
(bad)
jmp
rcl
pop
inc
xor
rcl
add
daa
loopne
jg
mov
(bad)
(bad)
(bad)
(bad)
jge
ficomp
add
mov
das
jp
icebp
pop
jp
ds
add
push
push
fsub
push
cld
jmp
dec
cld
in
out
enter
lahf
pushf
adc
les
add
neg
or
cli
jno
stos
pop
push
mov
pushf
cwde
push
cld
(bad)
dec
sub
ja
mov
retf
addr16
outs
test
sub
stc
mov
(bad)
push
sub
dec
jl
ins
cmp
aas
retf
out
arpl
shr
pop
adc
nop
cmc
(bad)
xchg
cmps
(bad)
sub
(bad)
shl
(bad)
call
cmp
fscale
push
movs
faddp
jnp
cmps
rcl
adc
clc
mov
sti
sti
fisttp
xor
call
sahf
das
scas
aad
dec
(bad)
(bad)
(bad)
inc
(bad)
mov
sbb
sub
lock
sbb
cmp
popa
push
dec
aas
in
cdq
or
cmp
call
test
cmp
sbb
push
lahf
cmp
dec
cdq
add
push
call
cmps
dec
xchg
pop
call
add
lods
aas
shr
push
mov
mov
or
cmp
shl
mov
mov
pushf
xor
(bad)
(bad)
jg
ror
dec
std
fistp
mov
out
leave
imul
cli
add
mov
data16
cmp
pusha
cdq
add
sahf
xchg
xor
daa
int3
and
cwde
pushf
cmp
call
daa
fidivr
adc
adc
loope
add
mov
or
xor
(bad)
jg
cld
inc
out
stos
mov
ds
push
add
push
test
and
jg
sub
jg
(bad)
cld
rcl
mov
jmp
inc
xor
xchg
mov
in
cmp
in
inc
push
int
add
lds
xor
ds
nop
(bad)
sbb
sbb
jnp
mov
pusha
bound
push
pop
and
jns
mov
sar
jg
sbb
call
dec
add
scas
or
jmp
mov
ret
movs
fs
or
push
xlat
sub
jbe
cmp
(bad)
mov
push
rcr
fbld
test
das
and
xchg
(bad)
jmp
loop
mov
ins
cmp
sbb
sub
rcr
pop
(bad)
push
xchg
int3
test
pop
dec
dec
and
retf
pop
add
push
lar
(bad)
call
loopne
retf
retf
imul
jne
lods
adc
or
(bad)
(bad)
dec
push
not
rcl
cmp
hlt
sub
test
pusha
jmp
stc
mov
(bad)
(bad)
(bad)
jmp
lea
jmp
xchg
outs
daa
or
xor
mov
(bad)
adc
(bad)
(bad)
(bad)
jmp
fnstenv
push
pop
es
dec
jecxz
jge
lods
adc
test
pusha
lods
adc
adc
push
sbb
push
add
pusha
add
pop
dec
xor
(bad)
call
(bad)
lods
ss
xchg
xor
sbb
xor
or
lods
sub
es
sub
call
sahf
(bad)
daa
pop
or
arpl
mov
inc
hlt
call
jmp
cmp
and
shl
xchg
imul
jmp
push
es
or
xchg
mov
(bad)
call
pop
js
sub
inc
pusha
cmp
jg
mov
test
div
sbb
jmp
and
and
aad
jmp
out
int3
xor
push
dec
scas
loop
pushf
imul
stc
add
cmps
mov
in
movs
call
outs
fcomip
(bad)
inc
xchg
adc
jmp
xchg
aad
jmp
pop
ror
dec
sbb
cwde
sbb
lock
(bad)
jmp
inc
dec
jo
push
movs
jmp
dec
add
inc
and
sti
adc
jg
add
mov
or
sub
xchg
cmps
pop
popf
icebp
(bad)
fisttp
xchg
jb
(bad)
add
and
sub
call
fcom
addr16
jp
or
out
push
(bad)
(bad)
call
and
push
or
jle
pop
cwde
daa
adc
ret
push
lahf
(bad)
mov
(bad)
push
mov
psrlw
cmc
clc
or
cmp
adc
adc
aad
and
push
(bad)
(bad)
mov
add
int3
or
daa
retf
ficomp
popf
sub
sbb
icebp
(bad)
(bad)
(bad)
inc
push
dec
add
ins
int3
aas
sbb
call
push
sbb
test
outs
(bad)
(bad)
mov
add
dec
(bad)
fstp
mov
and
enter
adc
inc
ret
(bad)
(bad)
inc
inc
jnp
mov
arpl
ret
aas
sar
inc
dec
and
(bad)
and
add
adc
into
inc
loop
sub
jnp
mov
jo
call
(bad)
lea
in
cdq
lods
dec
sbb
add
dec
lods
mov
lock
inc
adc
add
jle
mov
mov
icebp
and
(bad)
or
xor
imul
(bad)
scas
dec
iret
(bad)
(bad)
sar
inc
jbe
dec
mov
lock
sti
lods
and
dec
popa
es
mov
aad
(bad)
in
call
cmc
ds
sahf
dec
sub
rcr
ins
xchg
clc
sub
mov
jg
mov
nop
ror
or
add
mov
mov
mov
adc
clc
out
dec
mov
add
leave
pop
or
(bad)
(bad)
call
(bad)
pop
in
and
add
push
add
pop
dec
test
(bad)
(bad)
call
push
add
aam
cmp
mov
push
sahf
addr16
(bad)
ficom
(bad)
jg
(bad)
(bad)
js
pop
arpl
push
and
jns
(bad)
mov
sbb
mov
or
add
adc
sub
pop
or
and
xchg
adc
push
test
mov
sbb
dec
fdivr
(bad)
(bad)
call
and
cmc
lahf
ins
sub
in
mov
jnp
dec
add
or
xchg
pop
and
(bad)
(bad)
dec
sti
xor
and
sti
and
mov
xor
or
sub
(bad)
(bad)
(bad)
fsub
not
add
sub
and
into
(bad)
lods
inc
inc
jbe
icebp
jne
mov
mov
and
(bad)
popa
cmps
gs
add
pop
arpl
cdq
mov
scas
cmp
add
add
(bad)
mov
test
aam
(bad)
(bad)
cmps
push
add
lds
outs
pop
or
push
inc
adc
add
pop
sub
in
mov
cmp
mov
mov
icebp
out
outs
ss
enter
call
fstp
xor
adc
les
test
jmp
dec
fiadd
mov
xor
mov
and
cmps
call
add
daa
pusha
and
cmp
or
cmp
and
cli
sbb
pop
fucomi
scas
repnz
fwait
sub
cmc
push
imul
dec
pop
dec
cmps
mov
jne
mov
les
test
cmps
and
pop
or
(bad)
dec
add
mov
jno
mov
jle
jne
xor
xor
cdq
(bad)
fcomip
inc
jmp
add
xor
pop
cmp
mov
(bad)
call
hlt
mov
jecxz
cmp
in
jmp
rcr
or
or
(bad)
push
push
add
push
and
inc
loopne
jg
(bad)
jl
pusha
icebp
or
xchg
dec
mov
outs
add
mov
inc
inc
ss
ins
xchg
mov
sub
pop
push
sbb
mov
cmps
nop
pushf
and
lea
out
lods
or
and
lock
push
and
jbe
icebp
mov
mov
mov
add
fisub
lahf
dec
ret
(bad)
in
fild
xor
mov
call
(bad)
stc
push
adc
addr16
fst
stc
mov
enter
xchg
xor
mov
pop
add
dec
inc
ins
clc
jo
push
push
aam
sti
dec
mov
pop
inc
sub
(bad)
mov
aad
or
xchg
popa
jl
inc
or
push
xchg
mov
pop
xchg
lock
push
mov
dec
mov
jmp
add
inc
es
sbb
(bad)
(bad)
(bad)
jmp
inc
sbb
cmps
lahf
adc
cmps
inc
xchg
cmp
(bad)
push
ds
mov
stos
sub
sbb
data16
dec
call
mov
inc
adc
(bad)
scas
js
fdivr
jl
cli
xchg
push
ret
movs
daa
popf
or
div
(bad)
(bad)
push
das
pop
fidivr
in
push
xor
jle
not
punpckldq
add
(bad)
sbb
(bad)
(bad)
in
mov
loope
jl
jmp
and
inc
lods
pop
jl
jp
or
dec
cmp
loopne
(bad)
fdivr
xchg
jecxz
les
add
stos
inc
mov
cmp
neg
sbb
adc
jmp
mov
sub
dec
movs
lea
add
pop
adc
adc
jmp
jo
inc
jb
inc
add
adc
inc
outs
sti
loop
xor
and
pop
sti
pop
mov
out
scas
cli
mov
cmp
and
mov
int
lods
(bad)
(bad)
(bad)
mov
sub
inc
(bad)
jns
mov
inc
pop
ss
cdq
mov
(bad)
sahf
stc
mov
sbb
and
and
not
xchg
outs
les
cmp
pop
aaa
jge
mov
push
add
cmp
and
(bad)
(bad)
(bad)
call
call
stos
scas
xor
fisttp
(bad)
addr16
jns
ins
mov
ror
add
mov
cmps
push
ret
add
jbe
sbb
pushf
xor
rol
call
dec
arpl
movs
mov
test
sbb
cmps
push
sbb
out
push
movq
push
cmc
int3
xchg
pop
mov
call
hlt
sbb
or
mov
test
xchg
mov
pushf
xor
loopne
push
call
xchg
sbb
retf
arpl
rcl
and
(bad)
inc
(bad)
cmp
xor
jle
out
std
scas
pop
xlat
inc
cld
add
add
gs
ror
xor
xor
jecxz
out
pop
add
repz
loopne
out
jno
dec
jle
sbb
mov
(bad)
shld
push
sahf
fcomp
bound
in
dec
jnp
xchg
add
mov
or
sar
add
cmps
pop
or
push
adc
loopne
jbe
adc
adc
(bad)
(bad)
mov
hlt
lds
cld
fldcw
in
lock
aam
outs
(bad)
std
aas
std
push
(bad)
(bad)
cmp
call
jecxz
retf
scas
adc
or
add
lock
aam
(bad)
sar
inc
arpl
cmp
mov
mov
mov
pop
fs
jmp
jg
jmp
add
mov
sbb
je
cmp
ret
ror
jmp
xor
call
adc
jmp
(bad)
jbe
mov
mov
out
adc
(bad)
fsub
enter
sbb
loopne
(bad)
push
push
fdiv
sbb
mov
fisubr
xor
or
push
pop
xor
mov
rol
frstor
test
(bad)
push
inc
cmp
mul
stos
mov
cmps
(bad)
test
fcomp
(bad)
(bad)
jmp
loope
xchg
jo
jg
adc
jle
(bad)
lock
cmps
jno
jmp
(bad)
(bad)
jg
ret
les
add
or
neg
dec
ins
push
ins
cld
sub
jns
mov
leave
or
(bad)
(bad)
push
je
xchg
adc
and
addr16
push
popa
gs
(bad)
mov
(bad)
inc
sub
in
xchg
jecxz
mov
fcomip
jmp
mov
mov
idiv
push
movs
ret
ja
in
aad
popa
rcl
adc
cmp
xchg
push
sbb
popf
jl
jl
pop
push
xchg
sti
mov
addr16
add
jbe
xchg
(bad)
(bad)
(bad)
call
das
mov
adc
cmc
ret
scas
in
fdivr
fimul
retf
jae
pushf
ss
iret
mov
sbb
cmp
jle
cmp
mov
out
xchg
pusha
and
and
push
je
or
cmp
mov
sar
stos
(bad)
(bad)
cmp
push
mov
stos
jecxz
std
add
es
push
(bad)
jmp
sbb
rcl
and
mov
test
xor
push
or
fld
sbb
(bad)
mov
stos
test
fild
aam
dec
rcl
out
sbb
aas
push
cmp
(bad)
fild
xchg
(bad)
addr16
out
ds
popf
jae
sar
(bad)
push
test
pop
mov
pmaxsw
xchg
mov
scas
xchg
pop
fdivr
in
add
adc
jne
fs
push
cdq
(bad)
fidivr
xor
popf
shr
push
lock
xlat
sbb
sti
jmp
xor
iret
outs
or
repnz
xor
clc
fcmovbe
jo
std
sqrtps
f2xm1
pop
(bad)
(bad)
mov
sbb
js
mov
xor
jb
(bad)
xchg
je
iret
fbstp
cmp
ja
fcomip
call
jmp
outs
add
push
mov
xlat
fimul
mov
(bad)
(bad)
jmp
dec
push
sahf
mov
ja
cdq
div
cmp
out
call
fwait
inc
es
iret
lock
(bad)
jmp
loope
fdiv
add
mov
mov
sbb
jge
add
inc
xor
sbb
cmc
inc
call
mov
push
sbb
dec
cmp
mov
lahf
aaa
mov
enter
xchg
js
xchg
cld
inc
jmp
adc
inc
mov
or
outs
pop
(bad)
adc
cmp
add
sub
mov
add
or
or
popa
push
sahf
jl
out
inc
sub
jno
daa
out
shl
(bad)
jmp
fild
sbb
or
or
add
sub
lock
dec
scas
adc
sti
fisttp
ja
pop
(bad)
mov
in
lock
push
dec
addr16
outs
or
pusha
bound
loope
mov
jmp
add
dec
mov
mov
stc
cdq
popa
sub
mov
mov
adc
ja
xor
mov
(bad)
call
into
inc
pop
(bad)
fisub
mov
dec
loopne
lea
loopne
xchg
xchg
arpl
and
repnz
inc
(bad)
mov
movs
popa
dec
inc
dec
xlat
loope
repz
mov
out
mov
aas
loopne
mov
and
sub
jl
pop
pop
(bad)
(bad)
(bad)
(bad)
jge
aad
fidivr
xor
out
dec
div
xchg
sti
pop
les
pop
xchg
ret
cmp
mov
adc
lods
aas
ins
(bad)
fistp
iret
cdq
daa
(bad)
(bad)
(bad)
(bad)
js
cmps
int3
lahf
sub
push
popf
(bad)
rcl
dec
lock
mov
sbb
fwait
fs
inc
inc
std
push
dec
xchg
cmps
jo
and
inc
mov
push
je
adc
imul
jmp
les
jmp
cmp
or
aas
jmp
lea
int
out
fmul
(bad)
push
jns
jle
or
sub
icebp
(bad)
mov
xchg
xchg
mov
sti
mov
call
addr16
(bad)
(bad)
push
aaa
ficomp
cmp
bound
xchg
daa
or
repz
pushf
fbld
sbb
(bad)
jg
fneni(8087
add
or
pop
jp
and
clc
(bad)
(bad)
lods
add
(bad)
pop
icebp
xor
cmp
add
mov
xchg
inc
dec
dec
jl
movs
push
and
int
xchg
xor
jg
mov
fsub
test
dec
push
fidivr
pop
fild
mov
outs
add
retf
sub
jnp
xchg
pop
sbb
sub
cmc
or
shr
iret
out
jmp
lahf
add
mov
das
fisttp
lods
ins
outs
inc
lock
in
into
sub
aas
cmp
mov
dec
push
(bad)
iret
or
les
call
sbb
shl
adc
mov
icebp
ja
cmps
cli
lods
arpl
mov
mov
inc
cld
mov
pop
cmp
(bad)
inc
js
xchg
pop
jo
cmp
cli
ds
out
mov
ret
outs
inc
(bad)
(bad)
(bad)
dec
ss
xor
scas
pusha
(bad)
xor
in
mov
mov
fsub
mov
mov
jo
mov
mov
xchg
bound
jmp
push
sbb
add
loope
xchg
or
push
fstp
xor
adc
jnp
stos
das
push
ss
movs
mov
inc
dec
nop
into
sti
xchg
push
or
jb
mov
in
call
sub
mov
mov
psadbw
les
(bad)
push
inc
retf
xchg
push
(bad)
push
mov
inc
mov
addr16
xor
cwde
out
lea
jg
push
das
sar
jl
xor
xchg
test
jmp
shr
loopne
std
cmc
jecxz
pop
pop
clc
pop
sti
jg
ret
pop
outs
neg
mov
dec
push
icebp
add
push
pop
in
ret
(bad)
jmp
out
mov
add
sbb
or
inc
(bad)
(bad)
(bad)
(bad)
jmp
xchg
dec
sbb
push
scas
cmps
stos
call
stc
fst
xor
cmp
outs
jecxz
movsx
mov
out
out
(bad)
(bad)
(bad)
jmp
inc
pop
stc
xor
dec
mov
hlt
sar
aas
scas
add
sbb
mov
icebp
(bad)
jmp
ds
aaa
add
xchg
adc
out
(bad)
dec
mov
mov
jg
fadd
mov
sub
jmp
fsub
or
adc
add
cwde
push
cmp
jecxz
or
ret
aas
loopne
(bad)
dec
pop
xchg
inc
dec
add
sub
clc
out
adc
sahf
jb
gs
cmp
stos
(bad)
dec
lahf
std
sbb
cmp
xor
and
mov
(bad)
jg
mov
imul
shl
icebp
or
call
lahf
xor
push
(bad)
(bad)
(bad)
inc
out
(bad)
das
mov
outs
enter
pop
ds
inc
repnz
aas
movs
mov
xchg
cwde
ret
and
pop
sub
add
adc
add
pushf
cmp
and
inc
add
int
inc
mov
push
and
and
inc
jecxz
pop
ss
jmp
cli
(bad)
(bad)
xchg
pop
lock
arpl
bound
pop
scas
or
fstp
or
(bad)
cmp
daa
or
or
arpl
dec
shr
push
popa
xchg
dec
shl
or
out
cli
and
push
push
icebp
leave
push
or
loopne
mov
and
xor
icebp
(bad)
out
clc
inc
int3
and
sub
les
lea
(bad)
out
pop
push
test
data16
std
es
mov
dec
inc
mov
cmp
in
(bad)
jmp
pop
sti
(bad)
push
ds
mov
dec
aas
mov
neg
push
cmps
iret
sar
(bad)
(bad)
call
lods
scas
in
stos
test
lock
(bad)
sbb
xchg
cld
shl
ins
inc
adc
(bad)
(bad)
jmp
add
add
rcl
add
xor
test
sub
not
inc
sbb
fdivr
dec
loope
rcl
icebp
cwde
xor
jl
xchg
xchg
mov
ins
(bad)
in
pop
or
aas
add
mov
(bad)
(bad)
cmp
or
out
xchg
dec
rcr
add
adc
gs
mov
lock
(bad)
in
leave
call
icebp
stos
pop
ret
(bad)
in
fiadd
mov
inc
fbstp
cmp
cmp
and
outs
mov
or
cmps
nop
jecxz
mov
in
sbb
adc
outs
mov
dec
cmp
neg
(bad)
(bad)
(bad)
cmp
push
dec
push
in
repz
cmp
pop
cs
call
out
cmps
xchg
or
xchg
mov
mov
lahf
add
mov
ret
sar
(bad)
cld
repz
xlat
dec
dec
test
shl
inc
fcom
mov
cmp
xor
mov
loop
pop
add
pop
add
dec
cld
les
stc
add
or
mov
shr
push
(bad)
jmp
mov
nop
jecxz
(bad)
jmp
hlt
out
dec
sbb
push
xchg
icebp
aam
int
movsx
call
push
std
sbb
pop
cmp
cmp
push
js
xor
retf
(bad)
(bad)
(bad)
inc
and
data16
clc
call
adc
inc
popf
pop
idiv
(bad)
(bad)
(bad)
mov
stos
pop
pop
(bad)
mov
and
sbb
icebp
inc
shl
jmp
sbb
(bad)
inc
loop
mov
jl
hlt
add
leave
loopne
pop
js
xchg
lods
stos
jle
(bad)
aas
ret
enter
sbb
inc
mov
mov
test
movs
pop
ret
(bad)
(bad)
(bad)
clc
call
cdq
xor
push
retf
(bad)
cmp
hlt
add
xlat
jmp
mov
loop
(bad)
ja
aaa
cmp
mov
mov
les
sub
call
out
mov
sar
cmp
(bad)
hlt
out
cli
ja
sbb
mov
inc
adc
ds
jmp
call
push
or
test
push
pop
test
push
and
hlt
outs
cli
dec
inc
adc
jo
jge
mov
shl
inc
cmp
inc
(bad)
jmp
mov
xchg
test
(bad)
cmps
sahf
frstor
rep
scas
scas
(bad)
mov
clc
(bad)
jmp
adc
imul
cmp
cwde
jbe
ss
(bad)
(bad)
jmp
jg
out
sbb
mov
xchg
inc
pop
cmc
imul
mov
mov
ret
jmp
jmp
xor
clc
jb
(bad)
jmp
cs
push
sub
dec
inc
mov
test
shr
ins
jmp
add
(bad)
(bad)
push
mov
stc
add
cdq
mov
int3
mov
adc
sbb
fistp
loop
outs
fld
ret
aad
outs
xchg
sahf
push
arpl
jmp
fbld
fbld
iret
adc
xor
movs
inc
lock
hlt
dec
imul
fidiv
adc
(bad)
call
test
popf
call
mov
in
movs
jle
scas
sbb
(bad)
inc
mov
mov
add
cld
push
js
push
jg
or
loop
setge
nop
sub
xor
pop
xchg
sahf
mov
(bad)
(bad)
push
jp
inc
(bad)
jo
jne
sar
stc
pop
dec
mov
cmps
sbb
(bad)
fdiv
and
or
(bad)
(bad)
inc
xchg
sub
fistp
pop
es
jle
pop
aam
pop
dec
in
imul
dec
(bad)
(bad)
(bad)
jmp
out
dec
xlat
scas
movs
scas
xlat
fucomi
push
fsubr
and
and
jmp
xchg
(bad)
jg
adc
cmp
pusha
gs
sti
je
add
cs
jno
pop
mov
inc
cld
aam
fcmovb
pusha
push
(bad)
imul
mov
inc
mov
jp
lahf
jmp
mov
ret
mov
in
daa
push
xchg
shl
cmp
call
dec
lock
movq
xlat
imul
adc
shl
dec
jecxz
sub
inc
in
pop
mov
enter
lods
pop
push
adc
sbb
push
stos
pop
cmp
(bad)
(bad)
dec
mov
inc
mov
pushf
adc
icebp
add
jo
or
je
add
xor
ins
and
imul
lea
or
and
outs
clc
(bad)
jle
and
mov
ror
xchg
icebp
repnz
fld
les
popa
js
xor
push
ins
add
in
in
or
add
xor
and
dec
sbb
adc
fcmovnbe
jne
(bad)
in
(bad)
es
imul
fisubr
(bad)
jg
push
lods
in
jmp
add
xchg
inc
push
xor
pushf
mov
test
dec
ror
inc
and
test
pop
or
daa
mov
sbb
pop
mov
test
js
neg
pop
mov
and
fucomi
std
or
sub
out
(bad)
(bad)
(bad)
(bad)
(bad)
xor
xor
mov
popf
pop
inc
adc
xlat
mov
jp
adc
push
mov
(bad)
(bad)
jmp
jge
sbb
rcr
xor
mov
movs
add
mov
icebp
pop
pop
xor
push
rol
jnp
stc
dec
add
(bad)
jg
(bad)
pop
nop
cmps
cdq
add
loop
ss
and
movs
pop
cwde
add
(bad)
(bad)
(bad)
jmp
stos
mov
rcl
pop
jle
das
jg
outs
loopne
add
pop
xchg
pop
sbb
(bad)
dec
ins
jge
ss
add
push
push
add
mov
mov
jmp
pop
dec
ror
pop
ins
cld
(bad)
(bad)
(bad)
jmp
scas
xchg
pop
push
iret
cwde
push
stos
mov
jp
push
iret
cmc
jmp
mov
or
dec
or
aaa
or
mov
fadd
pop
pop
cmps
mov
mov
inc
add
call
jo
mov
pop
xlat
pop
cmps
mov
jp
(bad)
(bad)
(bad)
inc
test
aam
pop
mov
add
pushf
shr
mov
vaddss
js
push
repnz
(bad)
in
push
fsubr
bound
ins
sub
cmps
out
in
xchg
fld
imul
(bad)
push
mov
sbb
jge
and
cmp
mov
stos
in
mov
shl
push
sbb
adc
or
add
pop
call
(bad)
call
xchg
mov
test
add
sub
loopne
ins
jl
add
inc
adc
pusha
ret
sub
push
ret
and
dec
jmp
sbb
in
xchg
and
add
adc
(bad)
(bad)
mov
repnz
icebp
dec
(bad)
pop
fs
jle
popf
shl
push
call
pop
std
pop
pop
jp
or
fisub
or
pop
loope
jmp
ror
mov
loop
fistp
sbb
xchg
imul
lock
jg
(bad)
push
cmp
jmp
adc
es
dec
gs
dec
mov
mov
cmps
out
push
mov
lds
popa
cwde
add
test
loopne
(bad)
(bad)
(bad)
call
sbb
xor
add
pop
loopne
jp
dec
mov
icebp
sbb
push
test
cmp
(bad)
dec
add
xor
cmc
mov
loop
(bad)
mov
inc
cdq
cmp
inc
inc
jne
inc
(bad)
jmp
movs
psrlq
shr
inc
and
ja
add
(bad)
(bad)
dec
fisttp
mov
(bad)
pop
add
rcl
sub
cs
clc
(bad)
jg
(bad)
sahf
cmp
mov
clc
ret
loop
mov
std
push
pop
sbb
(bad)
(bad)
inc
sti
into
mov
loop
ja
ds
sti
test
inc
or
loopne
push
sbb
test
ret
(bad)
(bad)
inc
pop
inc
sti
or
cld
sub
and
sub
cli
(bad)
inc
mov
jns
lods
and
rol
shl
(bad)
inc
and
mov
mov
addr16
add
dec
cmp
add
std
daa
js
(bad)
mov
je
cld
int3
aas
mov
enter
add
int3
mov
aad
push
cmp
nop
in
sbb
fistp
js
ins
cmp
out
aam
lock
mov
out
js
sub
leave
gs
out
push
enter
ficom
inc
idiv
mov
inc
(bad)
or
pop
jmp
into
ret
daa
dec
jmp
(bad)
(bad)
inc
cmp
jnp
shr
mov
cdq
jmp
mov
call
inc
xor
adc
fidivr
sbb
jp
mov
fwait
inc
movs
call
dec
jns
mov
sahf
test
lock
sbb
scas
push
and
stos
sub
or
(bad)
and
inc
test
stos
add
jg
inc
cmp
es
call
fstp
repnz
jl
sbb
add
ret
sti
mov
jb
int
out
(bad)
rcr
stos
cs
xchg
sbb
(bad)
(bad)
call
adc
pop
or
jl
fs
pusha
push
cmp
add
fnstenv
dec
mul
in
je
mov
push
mov
iret
fnstsw
mov
ins
ret
in
or
jg
cmc
gs
mov
call
push
sar
cld
call
leave
repz
icebp
mov
scas
retf
(bad)
loop
mov
jg
mov
ret
(bad)
retf
rol
jmp
lahf
mov
fdiv
dec
push
sbb
mov
ins
or
in
dec
call
cmp
icebp
ds
jno
gs
loope
std
scas
loope
(bad)
mov
push
mov
jecxz
addr16
or
push
push
fidivr
pop
shl
cmp
jmp
xor
mov
inc
push
and
adc
int3
xchg
imul
leave
cmps
mov
or
mov
ins
jle
inc
push
cmp
(bad)
mov
fild
cli
sub
inc
jecxz
mov
mov
call
sbb
dec
arpl
loope
rol
jo
nop
dec
(bad)
(bad)
(bad)
jmp
in
retf
outs
fild
das
mov
cdq
sbb
lods
pop
inc
pop
jmp
sub
xlat
cmp
ret
push
aam
mov
ds
(bad)
cmp
push
jp
adc
(bad)
(bad)
dec
cld
aas
not
push
cmp
mov
sti
int
icebp
stc
jmp
jmp
cwde
scas
jne
jbe
je
call
(bad)
call
pop
out
jge
and
xor
inc
jnp
ja
mov
jnp
push
lock
sub
or
adc
jg
movs
icebp
jmp
rcl
(bad)
fbstp
mov
xchg
adc
and
cmps
xchg
aad
or
jecxz
and
mov
add
(bad)
sub
out
push
pop
pop
cld
mov
add
outs
or
sbb
cs
jae
aad
adc
hlt
push
pop
ja
xor
push
mov
or
adc
push
aad
dec
dec
push
loop
adc
or
adc
sub
cs
dec
(bad)
jne
adc
lock
out
(bad)
out
adc
mov
mov
loope
sbb
dec
cs
movs
mov
call
pop
leave
test
pop
(bad)
xchg
xchg
(bad)
hlt
mov
mov
aad
mov
or
inc
shl
cmps
in
call
xor
test
jecxz
fld
imul
es
cli
mov
(bad)
push
jmp
mov
pop
fdiv
in
int3
(bad)
(bad)
out
clc
or
mov
rcl
loope
pop
inc
aad
add
sub
call
pop
and
push
xor
push
dec
dec
push
sub
add
(bad)
jg
test
add
push
sub
adc
ja
mov
mov
xchg
jg
daa
fdivr
leave
out
lods
pop
inc
mov
add
adc
jl
add
xor
dec
bound
(bad)
call
mov
xchg
popf
mov
adc
pop
jmp
jne
pop
mov
(bad)
repnz
sub
icebp
fcmovb
out
mov
(bad)
jmp
mov
mov
lahf
pop
inc
aad
push
leave
stc
dec
pop
shl
mov
cmc
icebp
sub
gs
(bad)
(bad)
(bad)
call
and
cmp
fcom
das
jecxz
test
add
sbb
(bad)
call
push
cmc
jg
icebp
or
iret
(bad)
xchg
dec
js
mov
pop
pop
dec
mov
mov
popa
add
adc
ja
cld
push
popf
(bad)
(bad)
(bad)
mov
outs
pop
cmp
ret
std
out
cmps
add
xchg
test
xor
cmp
add
(bad)
(bad)
(bad)
pop
or
aaa
push
sub
icebp
(bad)
jmp
into
push
xor
mov
shl
xor
(bad)
(bad)
(bad)
push
cld
or
and
cmps
push
pop
mov
ins
mov
(bad)
leave
mov
jg
(bad)
dec
push
rcl
cmps
mov
mov
add
fs
icebp
(bad)
(bad)
cmp
aad
or
mov
pop
or
pop
aas
fisubr
fistp
(bad)
push
retf
cmp
sub
jecxz
mov
(bad)
(bad)
(bad)
jmp
retf
mov
jo
cdq
imul
inc
lahf
pop
adc
into
mov
out
mov
lds
sar
mov
sbb
adc
adc
sbb
cmc
pop
lock
mov
cmp
sbb
jmp
icebp
cld
adc
add
nop
gs
fsubr
jmp
mov
add
dec
ds
adc
add
xor
cmp
jbe
jns
xor
aad
retf
sbb
(bad)
fucomip
call
scas
push
aas
(bad)
jmp
inc
pop
fdiv
sahf
(bad)
out
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
js
cmps
xchg
test
mov
inc
mov
jnp
jmp
(bad)
and
or
call
jbe
ins
stos
add
ret
sbb
icebp
(bad)
add
stos
shl
lods
jmp
mov
sbb
(bad)
(bad)
(bad)
jp
loopne
movs
out
shl
(bad)
loop
and
mov
(bad)
out
sahf
inc
cld
(bad)
(bad)
jnp
(bad)
xor
aas
fidivr
lods
call
xor
cmp
jmp
repz
or
dec
sub
and
(bad)
(bad)
jmp
add
mov
movs
push
push
enter
adc
mov
rcl
or
xor
mov
cmp
fnsave
inc
shl
(bad)
(bad)
(bad)
call
loope
cmc
js
(bad)
(bad)
cmps
add
bnd
test
rcl
or
cmp
sti
jl
(bad)
push
add
aas
pop
pushf
ret
jnp
shr
into
ret
pusha
cmp
(bad)
(bad)
(bad)
call
cmps
mov
gs
cmp
sbb
or
or
jae
add
push
dec
mov
pop
int3
and
cmp
push
push
or
adc
(bad)
popa
push
(bad)
(bad)
(bad)
(bad)
fiadd
retf
retf
leave
and
neg
xor
sbb
jl
outs
mov
adc
pop
ds
in
cmps
repz
stos
cmp
adc
(bad)
mov
push
pop
fwait
rol
add
leave
sub
mov
(bad)
mov
js
into
xlat
mov
inc
dec
pop
into
adc
adc
hlt
push
div
add
call
push
aas
xor
jg
loop
mov
and
dec
mov
sub
loopne
sbb
xchg
mov
mov
(bad)
jmp
sar
sbb
(bad)
pop
outs
mov
in
add
shl
loop
lods
jne
call
jb
sub
inc
leave
xchg
(bad)
(bad)
(bad)
jmp
into
dec
jne
push
aam
das
mov
fnstcw
out
aam
lods
icebp
mov
lds
jmp
add
jg
sar
mov
out
in
adc
rcl
push
push
xor
mov
add
adc
or
mov
push
dec
or
or
mov
stc
jl
add
ss
jae
xchg
and
(bad)
(bad)
jmp
inc
jbe
shr
icebp
or
cld
in
clc
icebp
mov
cli
addr16
rcr
std
add
pop
mov
jl
add
xchg
fnstsw
or
pop
(bad)
(bad)
(bad)
(bad)
push
dec
or
mov
jg
lock
popa
aaa
pop
(bad)
pop
out
xor
lahf
ins
or
pop
dec
out
adc
inc
retf
fisttp
(bad)
jge
jmp
std
mov
and
(bad)
inc
mov
call
out
or
pop
js
stc
int
std
hlt
mov
mov
outs
int3
stc
sub
iret
mov
retf
pop
cld
(bad)
jg
inc
push
xor
push
out
test
idiv
pop
jle
jns
repz
in
fwait
(bad)
(bad)
jmp
test
xor
js
push
xor
xchg
in
and
jns
xor
mov
adc
addr16
add
out
cmp
(bad)
(bad)
daa
in
(bad)
(bad)
jg
aam
ficomp
jp
jnp
in
pop
jo
das
inc
(bad)
(bad)
sub
sbb
fisttp
loop
test
xor
jp
or
data16
(bad)
(bad)
(bad)
call
push
cld
dec
aad
fadd
stc
out
dec
inc
pusha
jp
xor
add
lds
clc
push
neg
xchg
(bad)
(bad)
call
adc
push
mov
inc
stos
xchg
retf
add
add
fldenv
adc
(bad)
(bad)
(bad)
jmp
and
jns
aad
add
ja
jmp
daa
sahf
jo
adc
lea
or
(bad)
jg
lock
(bad)
aas
push
jo
mov
add
xlat
sub
int3
pop
push
shr
add
xor
mov
movs
in
jmp
(bad)
(bad)
ds
test
loope
inc
inc
and
ds
adc
and
mov
push
lea
dec
sub
das
sbb
add
xchg
int
dec
stos
mov
ret
mov
lods
add
push
(bad)
xchg
xchg
pop
add
cld
jno
(bad)
(bad)
jnp
push
lea
push
push
push
rcl
push
dec
pop
(bad)
(bad)
jg
jp
enter
cmp
pop
or
inc
add
data16
stos
in
push
inc
dec
cld
retf
add
lods
push
inc
test
sub
push
inc
push
je
push
cs
mov
sbb
aas
cmc
sub
mov
hlt
es
repz
xor
ds
mov
jge
xchg
std
(bad)
(bad)
(bad)
call
mov
jae
pop
xor
xchg
es
or
or
mov
inc
or
push
call
scas
inc
repz
xchg
ltr
stc
mov
outs
push
xchg
cmp
xor
bound
dec
popf
or
mov
pop
inc
cli
fdiv
pop
mov
pop
in
jl
jp
dec
or
jg
dec
cmp
cmp
loopne
pop
sub
and
mov
adc
push
and
clc
(bad)
nop
stos
es
int3
add
std
pop
xor
nop
std
mov
mov
ja
scas
and
dec
adc
jb
cmc
clc
adc
cmp
(bad)
(bad)
jg
mov
sbb
test
(bad)
(bad)
(bad)
fptan
cdq
jo
ret
push
pop
in
inc
ret
add
pusha
xor
add
(bad)
(bad)
jmp
nop
xor
in
jle
out
jb
es
and
mov
lea
in
mov
push
pushf
jne
add
inc
sbb
xchg
cmp
mov
pop
jp
jg
lock
adc
test
sub
mov
icebp
(bad)
cmc
in
xlat
ror
pop
push
(bad)
(bad)
(bad)
(bad)
out
xchg
fcomp
ja
mov
iret
imul
fcom
ja
in
mov
mov
aad
mov
push
push
push
xchg
imul
push
sahf
mov
out
clc
(bad)
jg
xor
mov
and
xchg
xor
cmps
inc
xchg
add
addr16
rcl
shl
push
hlt
mov
pusha
test
mov
movs
xlat
inc
call
int3
cmp
(bad)
(bad)
dec
je
lea
push
push
sbb
pop
rcl
sbb
jmp
pop
xchg
mov
movs
mov
add
or
clc
xor
jmp
sar
cmps
jle
gs
ins
jmp
xchg
add
and
xchg
push
add
xchg
mov
mov
cmp
(bad)
(bad)
dec
mov
jg
and
dec
popa
movs
call
jns
and
and
ret
test
(bad)
(bad)
(bad)
cmp
pop
clc
fidiv
mov
addr16
(bad)
imul
jg
or
jbe
daa
adc
icebp
(bad)
jnp
scas
jo
xchg
inc
mov
xor
adc
ret
and
(bad)
and
cld
(bad)
(bad)
inc
ins
pop
adc
fisttp
inc
push
out
push
fldenv
aas
inc
(bad)
fsub
add
inc
sub
adc
mov
(bad)
or
add
and
add
cli
(bad)
(bad)
fsubr
sbb
pusha
adc
sub
and
mov
xlat
movs
mov
je
in
(bad)
push
movs
mov
pop
imul
add
jmp
mov
(bad)
jmp
mov
shl
mov
nop
jle
(bad)
jg
(bad)
jl
inc
mov
xor
fnstsw
icebp
inc
mov
add
xchg
ins
xlat
pop
cmp
add
add
mov
(bad)
sti
iret
inc
add
inc
add
dec
aaa
add
push
mov
xchg
add
fld
and
lock
mov
sub
(bad)
aas
add
std
push
leave
les
jae
call
sub
mov
mov
sub
fmul
daa
add
(bad)
push
jne
jo
mul
int3
js
add
add
mov
add
ins
cld
add
dec
push
add
pop
push
push
cmps
and
std
(bad)
jg
mov
popw
mov
or
inc
and
nop
or
pop
sbb
xor
push
dec
pop
mov
inc
scas
in
(bad)
in
(bad)
inc
out
push
jg
mov
mov
outs
pop
jle
mov
sbb
repnz
mov
jg
mov
mov
dec
lds
dec
cmp
and
mov
cmp
ret
idiv
je
std
mov
add
lods
xchg
in
cmp
and
ret
inc
jmp
push
ins
jg
add
inc
push
adc
aas
ror
or
(bad)
mov
pop
dec
sub
imul
cmp
pop
and
rcl
xchg
out
pop
jmp
imul
sti
mov
cmps
push
dec
pushf
and
add
into
outs
mov
mov
shr
popf
sahf
pop
mov
out
fwait
jmp
(bad)
in
cdq
je
inc
adc
and
add
jp
and
sub
(bad)
mov
add
sub
shl
mov
aas
dec
mov
add
iret
mov
xchg
inc
and
mov
fisubr
fs
hlt
(bad)
(bad)
call
mov
dec
retf
inc
pop
mov
mov
mov
cmp
cmp
nop
or
addr16
neg
out
clc
(bad)
push
jns
pop
dec
dec
dec
hlt
fdecstp
jmp
push
cld
xor
mov
pop
mov
push
shr
mov
or
jl
adc
pop
ss
and
sub
(bad)
(bad)
call
inc
mov
fidiv
mov
add
sbb
push
fisttp
sub
or
das
(bad)
(bad)
(bad)
jmp
pop
into
mov
aad
pop
mov
cmp
jecxz
bound
inc
jnp
pop
mov
ror
fwait
add
inc
mov
dec
jne
clc
lock
(bad)
(bad)
call
and
adc
icebp
jg
in
cmc
daa
(bad)
mov
in
sub
shl
pop
adc
adc
add
jmp
(bad)
(bad)
(bad)
mov
(bad)
rol
dec
fild
fbstp
popf
cmp
jg
fstp
sub
addr16
mov
ins
xor
call
js
push
js
icebp
jmp
cmp
popa
mov
sahf
lds
repz
(bad)
jg
inc
mov
adc
add
lds
push
int3
add
push
sub
(bad)
(bad)
(bad)
jle
fild
icebp
cli
sbb
fidivr
jecxz
pop
aas
inc
sti
or
push
call
xor
or
push
cdq
mov
pop
push
shl
sub
ds
iret
loop
(bad)
ror
mov
cmp
repz
test
lea
call
and
xor
int3
fwait
jl
hlt
mov
adc
jnp
inc
push
(bad)
pop
xor
data16
(bad)
(bad)
(bad)
dec
test
push
into
dec
and
(bad)
(bad)
std
fidiv
out
cmp
or
clc
ret
cmps
mov
(bad)
call
scas
popa
(bad)
cwde
sahf
or
adc
ds
shr
mov
and
cld
(bad)
inc
dec
in
dec
(bad)
pop
std
cdq
xchg
mov
ds
(bad)
(bad)
inc
pusha
ja
nop
sbb
xchg
inc
push
js
add
add
dec
adc
xor
(bad)
(bad)
jmp
cmp
cwde
add
jb
(bad)
mov
sub
test
xchg
mul
(bad)
(bad)
(bad)
push
xchg
rol
jbe
rcr
adc
popf
or
neg
pop
mov
inc
mov
in
mov
pusha
mov
aas
jnp
mov
outs
dec
xor
(bad)
(bad)
mov
lods
addr16
imul
sbb
std
xchg
movs
and
or
data16
push
sub
jg
push
rcr
adc
dec
and
sub
inc
out
loop
stos
aas
fnstcw
call
pop
pop
add
sub
clc
aad
aaa
shl
adc
(bad)
(bad)
cli
paddsb
in
ins
mul
sbb
fwait
and
cmp
(bad)
mov
pusha
and
inc
jp
test
out
push
in
jne
pop
mov
in
imul
sub
mov
es
cli
(bad)
gs
and
hlt
lods
adc
mov
push
xchg
push
leave
mov
mov
pop
sub
aad
(bad)
(bad)
inc
dec
sbb
aaa
xchg
cs
mov
push
add
je
std
mov
(bad)
(bad)
(bad)
jg
imul
pop
pop
(bad)
ins
les
add
dec
je
movs
adc
pop
pop
or
jno
in
push
(bad)
jmp
xor
sbb
icebp
stc
ins
sti
adc
mov
push
outs
mov
cld
stc
mov
(bad)
jg
(bad)
and
mov
ss
inc
push
pop
pop
pop
into
into
or
add
jecxz
retf
mov
pop
cs
pop
inc
xchg
clc
add
loope
pusha
jbe
mov
int3
(bad)
(bad)
(bad)
push
dec
inc
and
cmp
jp
hlt
mov
lahf
cmc
dec
fwait
cli
mov
int
out
sbb
(bad)
(bad)
(bad)
jmp
ficom
daa
or
rcl
jmp
arpl
dec
pop
in
sbb
ret
mov
cmp
rol
(bad)
cld
add
push
shl
nop
xor
(bad)
adc
xchg
test
pop
fist
test
std
push
and
fdiv
adc
dec
jmp
jge
shl
dec
cmp
scas
fiadd
adc
adc
int
daa
xor
retf
push
dec
call
push
mov
fisttp
mov
jmp
dec
sahf
mov
cmp
pusha
lods
out
iret
mov
xor
mov
or
jo
(bad)
inc
enter
test
std
add
dec
inc
bound
movs
add
(bad)
cli
in
inc
fadd
and
xor
mov
call
mov
lods
cli
lods
les
push
dec
cmps
ss
mov
add
(bad)
jmp
push
fcomp
cli
loop
mov
mov
or
inc
loopne
je
mov
bound
adc
push
int3
jle
outs
clc
pop
inc
cmp
bnd
std
sub
add
mov
adc
mov
sahf
pop
mov
fisttp
clc
jmp
int
inc
ds
lods
scas
imul
pop
push
jo
push
pop
cmc
(bad)
jmp
add
jecxz
pop
and
mov
in
xchg
xchg
cli
call
loope
bound
rcr
sti
adc
sar
mov
pop
(bad)
cli
jmp
adc
out
out
mov
inc
imul
pop
out
cmc
(bad)
mov
stc
dec
or
bound
scas
or
in
inc
in
sahf
dec
add
jg
push
lods
fcomi
aam
pop
push
mov
mov
pop
hlt
jmp
test
sar
pop
mov
cmps
popf
movs
jae
mov
cmp
(bad)
mov
(bad)
fisttp
dec
arpl
and
adc
jb
sub
(bad)
jp
test
ss
jmp
ret
add
(bad)
daa
and
add
jmp
cmps
xchg
leave
adc
push
or
xchg
xor
dec
adc
dec
cmc
mov
add
icebp
retf
mov
lods
cmp
sub
sub
add
pop
inc
sub
xchg
sar
sub
pop
push
inc
xchg
inc
aas
pop
xchg
adc
mov
test
or
mov
inc
fbld
add
jmp
aad
or
fild
lods
aad
cmp
xor
call
retf
add
cld
mov
addr16
(bad)
iret
adc
cs
push
add
push
push
test
bound
dec
inc
push
dec
jns
push
(bad)
mov
mov
je
jg
test
(bad)
fldenv
mov
add
adc
(bad)
(bad)
(bad)
(bad)
fistp
ins
push
jno
rcl
ins
(bad)
lods
xor
fimul
push
sub
test
sbb
cdq
aam
cmp
(bad)
test
fiadd
rcl
scas
test
lahf
add
xchg
and
fcomip
test
cld
ins
pop
jo
pop
std
(bad)
jg
xchg
hlt
outs
jge
stc
pushf
jns
and
cmp
pop
sbb
push
call
add
jbe
or
add
sub
hlt
(bad)
(bad)
jmp
mov
fstp
enter
lods
ror
inc
ds
push
push
xchg
sbb
and
and
or
mov
sar
(bad)
jmp
push
(bad)
sahf
sbb
pusha
aad
jb
mov
add
xchg
xchg
loop
ror
mov
(bad)
inc
push
mov
int
aas
(bad)
pop
xor
cmp
fiadd
push
or
(bad)
(bad)
dec
cmp
push
int3
idiv
jno
adc
mov
push
retf
(bad)
(bad)
fist
inc
shl
(bad)
popa
mov
cmps
xor
js
xchg
xchg
data16
ror
xchg
(bad)
fcomip
(bad)
call
shl
arpl
ja
retf
arpl
or
sub
push
or
add
repnz
sub
rcl
pop
enter
pop
and
jecxz
(bad)
push
jle
pusha
push
mov
cmp
pop
xchg
gs
pop
lock
lock
(bad)
(bad)
mov
adc
cmps
mov
fbstp
sbb
jle
sbb
rcl
lea
jmp
sar
fisttp
push
pop
ja
push
add
jno
sbb
and
lods
jmp
add
fld
movs
push
pusha
mov
mov
xlat
dec
lock
cmp
xor
jp
call
inc
loop
(bad)
(bad)
(bad)
jg
int
jle
cwde
add
sbb
jmp
pop
cmp
or
(bad)
stc
xor
ss
inc
test
loope
adc
mov
mov
cmp
sbb
sub
xchg
movs
cs
popa
inc
aam
xchg
xor
or
inc
inc
sbb
fnstenv
js
out
(bad)
mov
or
pop
pop
ret
stc
(bad)
jbe
movs
inc
push
retf
repnz
cld
(bad)
push
iret
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
movs
xchg
mov
xchg
clc
xor
and
pop
xchg
sub
es
(bad)
(bad)
(bad)
call
xchg
inc
fdivrp
xchg
scas
dec
jl
fdiv
dec
and
aas
cmp
dec
mov
add
(bad)
(bad)
jmp
ret
ds
repz
ins
popf
jecxz
mov
not
enter
dec
sbb
hlt
and
inc
rcl
pop
cmp
(bad)
test
mov
cdq
call
xchg
or
add
(bad)
xor
addr16
jno
xor
xor
dec
cld
pop
mov
mov
pop
rcl
push
jnp
mov
jp
and
or
(bad)
(bad)
call
scas
cmc
repnz
xchg
fldz
cmp
stos
clc
jns
adc
jbe
xchg
mov
(bad)
call
(bad)
(bad)
sub
or
jae
push
jmp
or
inc
dec
push
add
sbb
out
cld
inc
enter
outs
hlt
cmc
inc
sub
adc
mov
add
lock
sbb
cli
push
fsubr
(bad)
(bad)
inc
out
stos
push
xchg
cmc
aam
cmp
jmp
loop
pop
mov
or
jg
loopne
sbb
enter
shl
shl
jp
das
clc
rol
retf
popf
or
cmps
nop
test
add
shr
fsub
outs
(bad)
(bad)
inc
outs
lds
pusha
movhps
jecxz
inc
pop
js
pop
bound
dec
dec
or
stos
xor
fstp
jl
lds
movs
fadd
sbb
mov
xlat
lahf
mov
(bad)
xchg
mov
adc
and
ja
aaa
xchg
call
loopne
push
add
push
aad
ins
loop
pop
std
jns
pop
and
mov
or
inc
(bad)
(bad)
call
inc
verr
inc
out
out
cmp
push
(bad)
outs
ds
mov
(bad)
(bad)
call
das
mov
jp
cmc
ds
mov
jp
cwde
jge
cwde
in
popf
out
out
mov
(bad)
cli
pop
icebp
or
idiv
retf
cs
imul
dec
inc
movs
mov
or
adc
std
pop
push
push
inc
out
xchg
sahf
jne
(bad)
xchg
aaa
pushf
(bad)
out
clc
add
scas
jp
jmp
push
imul
add
mov
mov
int3
das
cwde
(bad)
(bad)
(bad)
(bad)
fisttp
mov
push
imul
aaa
jl
dec
jge
fwait
cmp
das
push
push
jb
add
ins
xor
stos
das
xchg
mov
test
loopne
jmp
in
inc
and
inc
imul
outs
jl
clc
out
add
inc
(bad)
sahf
test
xchg
pop
rol
iret
inc
and
movs
sbb
inc
jle
add
rcl
push
inc
sub
pop
or
mov
pop
sub
push
push
call
jmp
fs
adc
jbe
(bad)
aaa
rcr
(bad)
jecxz
aas
jo
frstor
xlat
pop
xchg
sub
(bad)
(bad)
(bad)
push
int3
xor
xor
daa
imul
sbb
ucomiss
(bad)
(bad)
(bad)
mov
cmps
bound
push
cmps
ja
les
or
cli
std
inc
ror
leave
aad
std
and
adc
dec
movs
test
cli
pop
and
jg
call
fld
ret
ja
or
loope
mov
lea
mov
aas
and
aas
(bad)
retf
repz
push
jmp
mov
inc
adc
ins
loope
jmp
and
jo
imul
movs
xchg
in
pop
adc
lock
call
mov
sti
fiadd
loopne
sti
jno
cli
jg
xor
push
outs
stos
sub
or
nop
ins
pop
mov
(bad)
(bad)
(bad)
jmp
push
pusha
cmps
repnz
jge
mov
(bad)
and
lods
lods
aam
int
scas
(bad)
pop
fdivrp
add
and
shl
imul
and
jg
enter
movs
mov
pop
or
add
or
icebp
dec
dec
out
(bad)
jg
rcr
fdivr
repz
jmp
test
loopne
push
(bad)
call
jns
jno
and
imul
cld
inc
mov
cdq
mov
add
int3
or
(bad)
(bad)
(bad)
jg
test
add
add
icebp
or
or
sub
shl
or
ins
mov
sbb
(bad)
scas
rol
or
test
sub
and
(bad)
sbb
inc
mov
xor
xchg
fcomip
(bad)
dec
shl
or
fcomip
ja
add
push
(bad)
or
adc
call
(bad)
jmp
add
mov
adc
stc
xchg
push
pop
arpl
or
call
aaa
inc
(bad)
(bad)
std
(bad)
mov
push
ror
repz
sub
neg
je
pop
icebp
dec
(bad)
xor
xchg
jo
push
jbe
push
mov
repz
mov
(bad)
(bad)
call
xor
xchg
xor
sub
pop
and
adc
in
ret
xchg
and
lock
xchg
dec
dec
cmc
and
cmc
or
ret
rcl
inc
jecxz
arpl
mov
rcr
pop
jl
push
mov
(bad)
dec
cmp
clc
inc
cmp
push
xor
sub
add
(bad)
(bad)
cmp
sub
or
mov
mov
gs
shl
add
mov
mov
xchg
rcr
outs
lock
push
adc
(bad)
call
std
sub
pop
push
andnps
aam
xlat
jbe
sub
icebp
stos
fstp
add
enter
nop
cmp
(bad)
(bad)
jg
cmp
mov
scas
push
pop
mov
lea
adc
(bad)
call
inc
pushf
and
adc
and
adc
jle
sbb
loopne
or
scas
rcl
(bad)
(bad)
jmp
test
inc
dec
mov
lock
mov
xor
shl
fdivr
(bad)
(bad)
jmp
outs
add
test
xor
sub
and
stos
icebp
lods
stos
aas
mov
shl
(bad)
(bad)
(bad)
inc
je
pop
popa
add
push
inc
add
push
pop
and
push
or
dec
nop
das
sbb
dec
in
cwde
lods
mov
call
enter
cld
cs
retf
xchg
ins
and
stos
out
hlt
fcomip
(bad)
(bad)
push
pushf
enter
retf
enter
imul
inc
xchg
or
in
mov
mov
loopne
es
xor
cmp
jo
jmp
addr16
xor
mov
inc
cmp
(bad)
(bad)
mov
clc
retf
and
push
das
nop
test
ffreep
into
lods
clc
hlt
call
cld
push
rol
call
mov
or
cmp
sub
add
xchg
dec
cld
sub
(bad)
(bad)
(bad)
jmp
mov
cmp
add
push
lds
or
dec
mov
xchg
pop
std
stos
(bad)
(bad)
fcomp
ja
lahf
mov
sbb
or
xor
daa
or
(bad)
(bad)
push
sbb
pushf
daa
ficomp
sub
xchg
sbb
lods
(bad)
xor
rol
push
inc
and
cdq
xor
xor
fadd
scas
adc
or
pop
fnstsw
(bad)
(bad)
jg
(bad)
stos
dec
es
cmc
(bad)
jmp
dec
and
inc
add
mov
enter
pusha
mov
add
daa
ds
(bad)
xlat
sbb
pop
ss
mov
gs
fadd
inc
icebp
add
int3
das
sbb
cmp
inc
daa
lock
push
js
enter
or
pop
fcom
stos
add
or
or
ror
dec
cmp
pusha
sbb
sahf
cmp
fst
fcom
jmp
mov
call
rcl
pop
add
and
(bad)
push
adc
js
or
aad
inc
mov
mov
and
stos
jle
and
or
dec
shl
into
xor
pushf
push
jbe
fdivr
push
add
loopne
pop
std
lahf
fistp
push
sti
push
mov
adc
xor
sub
(bad)
(bad)
mov
daa
imul
and
mov
iret
inc
push
repz
sub
retf
std
inc
out
mov
jo
(bad)
clc
rcl
mov
retf
mov
cmc
jmp
mov
pop
xchg
xchg
xlat
jecxz
add
jg
cli
ins
js
int3
dec
and
add
stos
stos
fsubrp
mov
sub
cli
jl
or
fs
pcmpeqd
dec
(bad)
(bad)
call
mov
cmps
lods
mov
push
push
or
pop
mov
stos
icebp
lock
add
fadd
dec
add
or
sub
or
(bad)
mov
or
lock
es
pushf
mov
adc
mov
(bad)
mov
mov
stos
jbe
inc
adc
imul
push
call
mov
pop
adc
iret
jg
jmp
jb
sub
ror
inc
sbb
fstp
inc
nop
dec
lock
retf
cmp
(bad)
lea
jg
and
lods
sub
clc
push
xchg
sbb
out
jg
ds
push
std
push
loop
retf
mov
es
sub
je
dec
mov
dec
or
sub
call
scas
inc
push
push
clc
(bad)
(bad)
call
jecxz
mov
cmp
rcl
add
or
inc
sar
das
mov
inc
movs
pop
xchg
cmp
adc
jp
sar
fst
cwde
inc
mov
inc
dec
push
or
cmps
(bad)
(bad)
jg
push
jns
pop
or
aad
cld
jb
xchg
bound
xor
cs
addr16
sbb
adc
add
or
pushf
dec
mov
add
sbb
(bad)
mov
jle
pop
je
ret
cmp
data16
jl
in
jg
aad
aam
sar
(bad)
(bad)
inc
clc
dec
shr
jp
in
fs
add
out
or
jg
inc
aaa
inc
ret
sti
push
cld
fs
ins
jp
enter
mov
dec
(bad)
(bad)
imul
fisttp
add
sar
fisttp
cld
inc
xchg
or
scas
aaa
ret
add
mov
sbb
jg
outs
cli
das
adc
(bad)
sar
and
test
jg
(bad)
push
adc
inc
ja
sahf
xchg
xchg
push
add
in
dec
inc
pop
add
xchg
xor
push
and
cwde
je
or
add
(bad)
push
mov
mov
call
fs
jg
(bad)
out
inc
fstp
les
sub
(bad)
(bad)
inc
mov
push
add
addr16
ret
enter
scas
mov
mov
aam
mov
scas
push
inc
xor
pop
add
jge
(bad)
dec
push
push
ror
cmp
push
pusha
adc
push
fisttp
loope
cld
cli
mov
loop
(bad)
jg
jne
(bad)
jg
(bad)
jle
mov
cmp
mov
xchg
mov
sbb
mov
sbb
(bad)
(bad)
mov
movs
adc
xor
add
pop
mov
loopne
outs
js
(bad)
call
and
retf
add
aam
pop
fidiv
and
mov
(bad)
and
std
pop
shl
adc
and
in
cmp
pop
sub
rcl
push
mov
mov
mov
mov
push
mov
cmp
(bad)
inc
stos
adc
sbb
in
sbb
lahf
cmc
add
xchg
lock
les
cld
(bad)
(bad)
call
leave
push
sti
loop
add
cmps
outs
add
test
mov
test
add
sbb
es
add
adc
pop
js
jmp
mov
xchg
cmps
idiv
or
or
or
add
jbe
(bad)
mov
xchg
sbb
leave
mul
ret
jl
adc
push
gs
mov
jbe
dec
int3
adc
cmp
(bad)
call
mov
inc
mov
cmc
and
pop
inc
(bad)
std
jg
mov
jp
sub
jno
popf
adc
or
sbb
jmp
pop
cmc
inc
test
in
cld
aaa
add
adc
jge
js
mov
aaa
fmul
inc
cld
stos
push
sahf
inc
xchg
sub
sbb
jge
and
ins
movs
(bad)
(bad)
(bad)
mov
repz
jns
aas
pushf
scas
adc
pop
test
mov
cli
(bad)
cmp
leave
xchg
into
test
imul
loopne
sub
xor
or
mov
stc
mov
into
jg
jns
sbb
inc
mov
jae
inc
sub
mov
(bad)
(bad)
(bad)
out
xlat
or
xchg
mov
out
xor
push
or
(bad)
xor
inc
jne
jmp
(bad)
fcomip
mov
or
pop
mov
push
call
(bad)
dec
xchg
clc
aas
aas
mov
loopne
imul
mov
mov
cmps
pop
(bad)
pop
mov
lods
xchg
and
int3
pop
inc
in
es
fisub
lds
jp
ror
dec
lock
addr16
imul
es
or
(bad)
(bad)
js
xchg
div
mov
mov
xor
iret
mov
dec
inc
jmp
(bad)
(bad)
inc
outs
sub
and
(bad)
arpl
movs
nop
clc
sti
mov
push
xchg
xchg
clc
push
lods
cli
(bad)
fdivr
cld
xor
jb
stos
inc
ficom
(bad)
call
cwde
(bad)
sub
lock
mov
pop
in
or
add
or
or
mov
out
loopne
dec
icebp
fcomp
pop
sbb
bound
push
adc
call
hlt
and
xor
add
data16
sar
mov
push
inc
push
cld
dec
sub
jg
(bad)
(bad)
(bad)
mov
xchg
fstp
pop
mov
adc
jbe
mov
jno
(bad)
cdq
out
(bad)
(bad)
(bad)
(bad)
inc
jge
adc
inc
push
stc
or
int
inc
cmp
out
stos
js
pop
leave
add
(bad)
call
std
mov
addr16
aaa
aas
jbe
lea
cmp
mov
inc
shl
call
sar
into
imul
test
pop
mov
cwde
mov
dec
(bad)
(bad)
(bad)
call
cld
adc
add
xor
(bad)
mov
push
jmp
or
(bad)
(bad)
(bad)
dec
cli
add
cmps
les
jmp
in
stc
ins
les
js
or
ja
(bad)
inc
pop
nop
pushf
xor
and
enter
jle
es
jmp
inc
sub
pop
(bad)
jae
fs
push
fild
mov
xchg
int3
cmc
or
(bad)
push
and
pop
retf
mov
imul
cld
add
jns
mov
addr16
mov
cdq
pop
aad
jmp
(bad)
out
sub
dec
popa
push
sub
inc
sbb
push
adc
loope
loop
pop
rcr
add
pop
push
add
add
(bad)
(bad)
fild
xor
cwde
ja
push
cmp
adc
jne
xlat
rcr
cli
das
rcl
stos
mov
xlat
cmp
cmp
push
pushf
adc
adc
mov
in
gs
push
mov
mov
xchg
call
mov
jno
mov
outs
(bad)
or
pop
add
jo
push
or
repz
cmc
or
push
add
(bad)
(bad)
call
je
adc
pop
or
pop
lods
les
sub
and
xchg
jl
dec
repnz
lods
pop
lock
out
pop
xor
in
mov
pop
std
(bad)
(bad)
fldenv
outs
inc
out
jl
cmp
scas
add
call
mov
jmp
xor
or
movs
pusha
cli
xor
ret
imul
fadd
imul
cmp
sub
call
push
and
inc
adc
adc
dec
push
inc
inc
inc
mov
(bad)
(bad)
(bad)
jmp
adc
jo
sub
sub
imul
enter
rcr
fs
(bad)
(bad)
dec
push
add
test
sbb
mov
dec
(bad)
(bad)
push
retf
inc
push
mov
das
or
mov
add
nop
push
sub
add
mov
shr
inc
out
ret
test
aaa
std
pop
inc
adc
movs
jge
mov
popa
dec
ficom
or
cld
stos
(bad)
adc
pop
inc
adc
retf
(bad)
jg
rol
add
(bad)
fisttp
mov
dec
mov
dec
rcr
cs
icebp
(bad)
inc
rol
sub
xor
movs
cs
or
push
loopne
(bad)
(bad)
(bad)
push
push
push
sbb
pop
fcom
shl
xor
push
inc
jmp
dec
repz
(bad)
call
sbb
ret
and
lds
mov
and
push
popa
test
mov
mov
in
or
cmp
out
(bad)
mov
hlt
ror
enter
fsub
es
(bad)
(bad)
(bad)
mov
lock
fadd
mov
or
pusha
or
mov
push
iret
push
xchg
pop
aam
push
aaa
std
call
std
dec
pop
mov
aas
pusha
test
cmp
push
push
(bad)
(bad)
jmp
inc
adc
sbb
in
cmp
dec
leave
inc
mov
adc
sbb
(bad)
call
inc
dec
add
test
sbb
idiv
(bad)
(bad)
(bad)
clc
add
sbb
pop
(bad)
call
jo
xchg
and
stos
in
rol
adc
(bad)
cdq
xchg
ja
cmps
call
adc
mov
mov
pop
add
stos
popa
push
fmul
sar
jae
xor
add
fdivr
pop
push
pop
movs
not
inc
jnp
pop
or
(bad)
jg
mov
push
cld
ins
xor
or
mov
add
test
lea
cwde
mov
pop
and
sbb
or
or
push
popa
jmp
cmp
or
pop
cmc
(bad)
aas
mov
fmulp
push
add
jb
or
ins
jb
add
add
xchg
icebp
xchg
pop
sbb
mov
cmp
push
das
cmp
and
push
adc
sti
call
cld
jmp
adc
add
stos
cmp
pop
loope
(bad)
(bad)
jmp
sbb
in
inc
sbb
jno
cdq
mov
sub
std
out
test
popa
push
adc
dec
and
cli
inc
popf
add
inc
sub
and
loope
jmp
das
mov
jmp
stos
(bad)
out
fild
mov
jge
mov
out
jo
icebp
dec
(bad)
(bad)
fist
inc
cmc
mov
mov
lods
xchg
mov
stos
pushf
mov
scas
dec
mov
push
cld
inc
in
mov
retf
(bad)
mov
mov
stos
sub
and
(bad)
dec
jp
mov
push
adc
dec
adc
jecxz
sub
js
ret
xchg
add
in
arpl
jbe
mov
mov
addr16
or
inc
lock
cmps
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jne
leave
(bad)
add
cmp
sub
jae
mov
jmp
jbe
ss
and
(bad)
inc
jmp
push
push
les
jge
dec
mov
or
js
(bad)
dec
call
pop
mov
and
(bad)
(bad)
fild
xlat
repz
xlat
pusha
dec
adc
loop
cmp
mov
jmp
(bad)
call
pop
pop
jmp
xlat
pop
pop
ja
pop
daa
sub
inc
leave
xchg
mov
cmp
inc
test
call
xchg
cmps
mov
pop
inc
mov
aam
outs
cli
dec
imul
jmp
jle
pop
adc
(bad)
(bad)
dec
int3
sub
sbb
jmp
lods
scas
jecxz
lahf
mov
or
retf
sub
jge
push
xor
loop
(bad)
call
ins
(bad)
cmp
lahf
adc
pop
push
call
push
dec
pop
adc
(bad)
mov
jp
pop
inc
nop
ins
in
cmp
inc
fisttp
(bad)
(bad)
(bad)
fbld
pusha
call
mov
mov
sbb
fwait
mov
xchg
(bad)
(bad)
(bad)
push
and
das
and
sbb
mov
add
in
imul
(bad)
(bad)
(bad)
(bad)
call
add
out
jp
pop
das
pushf
inc
mov
ins
pop
jg
sub
push
cmp
push
jcxz
into
(bad)
dec
push
test
fdivr
jecxz
(bad)
std
pop
mov
sbb
sar
mov
jmp
cmc
jmp
xor
(bad)
jmp
mov
pop
add
adc
inc
fbstp
loopne
std
iretw
xchg
dec
int
(bad)
(bad)
(bad)
(bad)
call
ins
add
ins
fild
call
fild
push
imul
sbb
sub
or
or
or
scas
lods
mov
mov
pop
sbb
clc
lea
(bad)
fdivr
(bad)
inc
push
add
es
in
mov
sbb
cmp
cdq
or
push
cmc
or
fwait
(bad)
repnz
dec
push
cmps
loope
xchg
mov
sar
push
inc
cmps
cmp
and
js
push
scas
aas
push
push
outs
ins
loopne
jmp
inc
test
cmc
push
cmp
fdivr
ror
loop
out
js
dec
fwait
mov
pop
iret
(bad)
jg
or
xchg
aas
jo
inc
add
mov
les
push
cmp
and
in
int3
or
sub
jmp
jno
mov
dec
mov
in
mov
fiadd
nop
(bad)
jg
cld
adc
push
and
mov
and
and
scas
in
(bad)
(bad)
jg
mov
bound
aas
or
or
sub
lock
or
pop
jbe
inc
cmp
add
stc
pop
popa
cmp
dec
adc
dec
sbb
nop
adc
lahf
push
ret
mov
retf
sub
(bad)
call
lock
sub
popf
pop
sub
inc
xchg
xchg
add
push
pop
(bad)
(bad)
fcomip
rcr
daa
loop
jle
cmps
test
js
adc
jg
fwait
cld
jno
cmp
add
xrelease
loop
pop
pop
(bad)
sub
push
imul
fistp
ja
clc
ins
add
(bad)
(bad)
(bad)
cmp
aad
push
fbld
inc
dec
in
fwait
adc
add
(bad)
push
cmp
jnp
(bad)
(bad)
fnop
xor
jno
jl
fdiv
xor
imul
push
xchg
add
inc
push
rcl
jno
cmp
out
test
jno
jb
sbb
(bad)
jmp
es
popf
cmps
sbb
jl
imul
nop
sub
push
inc
jg
or
push
xor
shr
sbb
lock
sbb
jle
ds
mov
(bad)
(bad)
(bad)
jmp
ret
div
xchg
int
fdivr
add
js
push
call
(bad)
(bad)
call
cmp
jno
mov
cmp
sbb
shl
pop
dec
clc
call
inc
cmp
jle
sub
call
mov
add
data16
add
(bad)
mov
pop
mov
jne
shl
fisubr
mov
mov
pop
cwde
sub
mov
bound
outs
cli
push
add
push
and
jmp
popa
pop
ror
mov
jg
jg
adc
popf
inc
ss
inc
push
bound
adc
icebp
sbb
inc
ins
jnp
dec
pop
cwde
std
mov
enter
add
fidiv
int3
aad
std
sti
movs
ins
call
cmp
pop
add
push
mov
(bad)
(bad)
(bad)
mov
call
adc
in
cmps
mov
xor
jl
cld
pcmpgtd
(bad)
(bad)
cmp
aam
enter
mov
and
icebp
pop
mov
repnz
add
mov
scas
aad
push
mov
(bad)
(bad)
mov
xchg
(bad)
pop
jp
mov
inc
daa
jns
lea
les
rcl
sbb
test
cmps
pusha
jnp
cld
ss
mov
jg
(bad)
(bad)
std
add
xchg
pop
mov
and
cmp
inc
xchg
jb
std
iret
xchg
jb
(bad)
(bad)
jmp
out
cmp
and
add
jmp
dec
(bad)
dec
les
ds
cli
jp
add
mov
fcomp
(bad)
jmp
cmp
xor
hlt
je
sub
frstor
mov
sub
push
hlt
ins
mov
(bad)
jmp
jmp
push
dec
add
xor
mov
inc
(bad)
(bad)
mov
rcl
fs
jne
call
xor
cmps
(bad)
(bad)
(bad)
dec
outs
pop
xchg
mov
jp
cmp
je
jne
shl
data16
jnp
and
shl
call
sbb
mov
mov
mov
loopne
je
adc
xor
add
cwde
cmp
neg
je
(bad)
(bad)
call
jae
mov
dec
les
jne
popa
sbb
push
adc
ja
mov
jge
lock
shl
dec
out
push
shl
sbb
pop
(bad)
(bad)
(bad)
(bad)
cwde
sahf
lahf
add
jmp
fld
sahf
jg
repz
cld
xor
pusha
xchg
xor
add
(bad)
(bad)
inc
cmp
aam
sbb
lea
movs
xor
jb
or
iret
add
call
loopne
sbb
cmp
dec
cdq
pop
mov
push
push
(bad)
(bad)
inc
pop
mov
add
jge
mul
je
mov
(bad)
(bad)
mov
xchg
sti
cld
lods
pop
pop
pop
popa
add
into
sub
iret
call
or
call
(bad)
(bad)
(bad)
push
mov
ror
push
jecxz
rcr
add
pop
shl
add
dec
jle
jmp
ins
aam
mov
nop
lock
fwait
data16
mov
loop
sbb
(bad)
dec
mov
and
rcr
test
hlt
inc
adc
adc
popa
rcr
cmc
xor
out
cli
jne
fwait
test
jbe
pop
xor
ds
(bad)
jmp
mov
or
push
add
mov
aam
mov
add
mov
or
push
pop
cmp
or
mov
xchg
xchg
xchg
enter
mov
lock
mov
dec
and
cmp
and
lea
jmp
ins
jg
(bad)
jmp
sub
rol
pop
mov
push
outs
push
jo
or
sar
dec
cmp
(bad)
iret
bound
or
jg
fsub
fmul
loopne
(bad)
(bad)
(bad)
(bad)
jge
scas
mov
stos
repz
das
jg
xchg
clc
lahf
pop
stc
dec
dec
adc
test
push
xchg
pop
jle
hlt
(bad)
jmp
mov
mov
push
shl
push
mov
(bad)
push
test
(bad)
jmp
and
mov
test
sub
test
xchg
leave
out
ins
(bad)
inc
stc
sbb
mov
sub
nop
add
jo
clc
jmp
(bad)
inc
sub
hlt
dec
(bad)
sbb
mov
out
hlt
xchg
jg
lock
neg
pusha
stos
mov
xlat
fwait
push
push
lods
mov
add
(bad)
clc
dec
cmp
adc
cld
dec
inc
(bad)
sub
fstp
int
dec
jl
loop
push
hlt
jl
fwait
lahf
shl
pushf
cdq
sahf
rcl
in
enter
(bad)
clc
(bad)
aad
icebp
dec
lahf
cli
pop
pop
pop
cdq
ret
mov
push
fcomp
add
lea
xchg
(bad)
(bad)
(bad)
inc
ss
jnp
xchg
or
aad
gs
sbb
jo
push
jo
cmp
jmp
fcmovb
arpl
outs
pusha
data16
call
bnd
cmp
hlt
jns
imul
shl
xchg
add
call
loopne
mov
and
sar
mov
inc
sub
std
(bad)
cdq
cld
mov
or
stos
mov
hlt
lea
adc
xlat
div
lods
ret
sbb
jnp
scas
mov
or
pop
loopne
jmp
(bad)
(bad)
(bad)
push
repnz
adc
xlat
or
shl
jae
jg
(bad)
fwait
(bad)
cmps
rcr
xor
or
push
jb
das
ja
push
push
mov
(bad)
(bad)
(bad)
cmp
jmp
pusha
push
cvtpi2ps
dec
fstp
pop
jbe
sbb
leave
xor
shr
nop
pop
mov
mov
bound
cmp
push
mov
dec
adc
outs
adc
mov
xchg
hlt
dec
jge
cli
iret
xchg
sbb
sti
les
sub
sbb
fisttp
cdq
hlt
mov
inc
xchg
jb
shl
shl
inc
jle
in
push
mov
(bad)
jg
not
push
add
ficom
in
dec
xchg
je
ins
xlat
sbb
push
sbb
ficom
imul
scas
jmp
pop
sub
dec
xor
sub
cmc
popf
addr16
frstor
pusha
js
adc
das
inc
lods
jb
ja
cmp
dec
fistp
test
imul
in
inc
scas
aaa
fwait
sub
rcl
xchg
mul
stos
dec
(bad)
(bad)
mov
jle
dec
cmc
cli
jmp
or
add
test
outs
adc
pop
jecxz
in
xor
repnz
adc
(bad)
(bad)
call
mov
rcr
mov
test
jg
dec
xchg
(bad)
(bad)
jmp
and
mov
and
adc
call
(bad)
dec
pop
push
lock
aam
(bad)
mov
add
add
(bad)
hlt
retf
mov
cmp
jmp
clc
or
push
push
loopne
push
call
dec
push
ins
scas
xor
inc
outs
fld
xchg
pusha
(bad)
xor
imul
mov
xchg
jmp
cli
(bad)
out
mov
aas
ds
scas
add
dec
sar
and
or
inc
call
add
push
stos
clc
fidiv
stos
cwde
mov
shl
pop
test
or
(bad)
(bad)
(bad)
cmp
int
xor
aaa
jae
es
fwait
push
mov
popa
(bad)
push
add
stc
lods
(bad)
(bad)
(bad)
inc
test
mov
push
push
add
sbb
test
push
mov
repz
out
js
cmp
enter
clc
(bad)
dec
cdq
(bad)
out
add
xor
pop
add
adc
(bad)
(bad)
dec
jle
cmc
push
mov
lahf
dec
sti
jne
mov
sbb
xchg
bound
enter
mov
ret
push
xor
or
daa
mov
add
std
or
cmps
add
xor
mov
xchg
dec
mov
add
es
pop
mov
lock
(bad)
dec
mov
mov
pop
inc
(bad)
je
stc
sbb
add
ret
fisub
add
leave
xchg
in
fsubr
ret
mov
mov
ja
(bad)
inc
xlat
test
outs
and
adc
xchg
push
inc
ds
sub
(bad)
(bad)
(bad)
dec
mov
mov
push
test
add
mov
add
adc
xchg
stos
inc
push
push
test
(bad)
(bad)
(bad)
adc
pop
cmc
jmp
mov
call
sub
inc
jge
mov
cli
dec
mov
mov
(bad)
(bad)
inc
movs
fld
inc
and
inc
test
retf
push
cs
push
pop
ret
repz
mov
(bad)
pop
cmc
mov
and
inc
dec
movs
push
sahf
inc
jecxz
push
pop
jmp
inc
ret
pop
sbb
aam
push
je
in
push
mov
movs
sar
mov
imul
popa
pop
es
outs
enter
jmp
adc
pop
mov
cmc
push
and
pop
dec
mov
mov
test
mov
and
ins
(bad)
stos
mov
sbb
mov
jmp
fadd
xchg
inc
in
mov
cli
(bad)
inc
push
xor
sahf
daa
or
les
call
in
mov
out
dec
iret
and
mov
pop
retf
add
sub
dec
pop
mov
(bad)
(bad)
mov
add
mov
(bad)
dec
jns
or
sahf
aaa
mov
xchg
(bad)
(bad)
dec
xor
movs
sbb
loop
push
icebp
jnp
aaa
fimul
and
and
clc
mov
(bad)
(bad)
(bad)
mov
push
cmp
push
fdiv
(bad)
imul
cmp
fimul
ss
std
or
pop
rcl
mul
inc
xor
mov
aaa
pusha
lock
call
sbb
int3
jb
xor
test
cld
push
sbb
(bad)
lods
push
sub
sar
(bad)
dec
pop
mov
pop
(bad)
in
jne
test
leave
mov
or
(bad)
(bad)
jg
mov
ror
and
mov
push
adc
push
mov
jge
call
mul
inc
aaa
xor
nop
gs
xor
loopne
jl
mov
mov
(bad)
(bad)
jmp
dec
sbb
dec
ret
cmps
call
into
xor
ins
mov
pop
mov
mov
cmp
fisttp
int
in
xor
icebp
cwde
cmps
pop
shr
imul
stos
jg
ja
aaa
shl
push
lea
pusha
mov
add
mov
lods
jmp
cmp
sbb
cli
cmp
adc
cs
int3
fistp
push
xlat
or
xor
je
(bad)
(bad)
(bad)
cmp
xchg
scas
ja
addr16
cmp
xor
int
and
scas
pop
lock
hlt
jne
lea
arpl
aas
and
dec
pop
or
rol
xor
xor
aaa
lahf
aas
(bad)
(bad)
(bad)
dec
(bad)
jne
jo
inc
shr
aas
mov
pop
and
xor
sbb
xor
jp
(bad)
(bad)
(bad)
push
mov
lods
cwde
sub
fcom
pop
mov
cmp
or
fiadd
xchg
popa
mov
mov
cmp
(bad)
shr
pop
push
call
repz
xor
test
rcr
cmp
mov
sbb
sub
outs
cmp
div
inc
pop
add
or
(bad)
sbb
(bad)
pop
hlt
dec
fidiv
pusha
test
stos
(bad)
mov
mov
adc
mov
adc
stos
lods
cmp
(bad)
inc
jns
xchg
inc
hlt
call
adc
lds
add
(bad)
jg
inc
ins
cmp
dec
pmaxub
adc
int3
es
sbb
and
test
pusha
inc
or
and
jbe
mov
(bad)
(bad)
mov
das
pop
fdivr
daa
dec
pop
test
push
xchg
ret
rol
mov
xchg
imul
ret
jmp
jo
lahf
shr
add
or
xchg
mov
test
mov
(bad)
inc
mov
pop
js
shr
lock
and
arpl
jmp
call
out
jbe
lods
cmp
jl
test
cmp
mov
test
pop
mov
mov
lods
push
les
mov
jne
std
(bad)
dec
push
jmp
adc
mov
inc
dec
xor
xchg
or
cs
sar
dec
mov
sahf
mov
mov
jp
cwde
call
fbld
lock
cmp
pop
int
int3
xchg
fimul
xchg
lock
(bad)
cmp
inc
loop
fstp
add
adc
inc
int
leave
fs
(bad)
call
js
in
jmp
dec
pop
mov
cmp
aas
xchg
adc
xchg
jp
xor
sub
test
(bad)
(bad)
(bad)
jmp
lock
push
cli
fild
mov
aam
int3
fwait
add
mov
dec
and
dec
hlt
xor
mov
xchg
cmps
(bad)
jo
sub
push
fidiv
(bad)
push
pop
mov
push
xchg
cmp
std
sbb
shl
lods
push
add
sbb
das
(bad)
and
loope
cmc
nop
out
mov
das
sub
ret
pop
std
mov
adc
(bad)
(bad)
(bad)
jmp
jle
and
push
xor
jae
cli
dec
test
out
mov
std
aaa
mov
(bad)
jmp
sahf
pop
nop
paddb
add
xor
cld
sti
push
sbb
adc
scas
ficomp
xchg
or
mov
pop
xchg
inc
das
fsub
and
retf
call
cld
jmp
mov
jbe
add
lods
int3
int
cmp
mov
push
out
jnp
(bad)
call
enter
cmp
xchg
mov
(bad)
jno
sbb
in
sbb
dec
sbb
pop
outs
(bad)
(bad)
jmp
leave
adc
jb
js
sbb
loopne
les
xor
mov
out
neg
(bad)
jg
mov
daa
pusha
movs
push
shr
mov
cmp
sbb
push
sbb
inc
pop
mov
std
pop
cmps
add
popa
(bad)
(bad)
jg
jbe
cmp
or
add
sbb
in
pop
push
es
pop
mov
call
xchg
mov
jne
test
rol
xchg
lahf
call
out
rol
fdiv
fidivr
lods
jmp
dec
movs
cli
add
(bad)
(bad)
fild
xor
mov
das
sti
jge
mov
mov
mov
fidiv
mov
dec
std
dec
sbb
outs
mov
mov
add
hlt
(bad)
(bad)
jmp
(bad)
xchg
push
push
jle
add
add
mov
and
sahf
mov
fucomip
xor
stos
push
pop
xchg
and
movs
aad
call
(bad)
push
xor
jo
xor
and
ret
aam
sbb
mov
push
test
(bad)
push
xchg
bnd
fsubrp
push
xor
sti
mov
loop
mov
fs
(bad)
jmp
jno
nop
pushf
or
pusha
div
jp
mov
add
push
(bad)
mov
sar
pop
nop
loope
xlat
pusha
cli
adc
hlt
mov
mov
and
lock
ja
add
cli
cld
icebp
leave
aas
jno
aas
push
sbb
push
mov
dec
pop
ret
push
cmp
cld
fstp
and
add
rsqrtps
shl
(bad)
(bad)
(bad)
fstp
xor
loope
add
sub
outs
call
cld
(bad)
jmp
push
lods
fild
ficom
fdivr
lea
sti
repz
lock
mov
pusha
cmp
jb
add
mov
xchg
add
(bad)
(bad)
mov
out
std
dec
mov
xchg
call
or
jmp
inc
imul
(bad)
fisttp
mov
shr
stos
pminub
pop
mov
xchg
cwde
stc
dec
int
ret
out
call
jno
(bad)
(bad)
(bad)
(bad)
ds
aas
sbb
cmps
ins
shl
test
mov
pop
push
loopne
mov
cdq
xchg
pop
lods
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
xor
in
cmp
sar
adc
mov
jmp
rcl
lea
xchg
mov
outs
sahf
lahf
inc
jle
or
add
(bad)
mov
inc
inc
(bad)
(bad)
(bad)
dec
scas
jmp
or
icebp
sbb
sahf
or
lea
dec
push
(bad)
(bad)
(bad)
jmp
lods
ds
add
dec
mov
adc
or
push
cs
push
add
add
(bad)
(bad)
(bad)
aas
call
ds
call
dec
repz
gs
add
loop
xor
push
mov
sbb
repnz
add
and
cmps
stc
cmp
(bad)
jmp
stos
add
cmp
or
jns
call
out
(bad)
(bad)
(bad)
jmp
pop
xchg
jecxz
mov
gs
xchg
inc
mov
test
retf
fldcw
movs
fs
inc
and
imul
and
retf
call
lods
test
repz
leave
adc
fbld
cmp
out
(bad)
mov
(bad)
(bad)
(bad)
fdivrp
jge
push
scas
(bad)
loopne
inc
sub
rcl
jo
cmp
call
sub
(bad)
(bad)
call
mov
mov
push
xor
sahf
pop
push
sti
mov
out
mov
scas
jo
mov
adc
sar
add
jae
push
repz
mov
xor
cmp
push
std
out
push
bound
inc
xor
jbe
sub
or
add
in
and
(bad)
jmp
dec
push
lds
les
cmp
jbe
or
aas
clc
dec
xor
dec
lock
xchg
xchg
and
cmps
cmp
dec
push
add
leave
test
stos
test
(bad)
cdq
shr
and
(bad)
ja
dec
and
pop
or
push
pop
jae
pop
sbb
push
adc
shl
(bad)
(bad)
(bad)
jmp
jge
mov
ror
clc
inc
ja
iret
inc
or
inc
jmp
lods
adc
sahf
or
jb
cmovl
rol
(bad)
(bad)
(bad)
dec
inc
retf
mov
fucomp
pushf
fmul
fimul
sub
test
lods
mov
clc
(bad)
cmp
xchg
mov
mov
mov
cmps
hlt
sahf
jbe
imul
(bad)
(bad)
inc
pop
adc
pushf
inc
lods
add
jecxz
enter
and
sbb
add
mov
inc
rol
jns
ret
rcl
pop
jo
sub
sbb
(bad)
dec
mov
arpl
inc
mov
str
push
test
mov
call
fsubr
push
aad
rcl
dec
mov
call
push
mov
addr16
pop
cmc
push
dec
push
xchg
inc
cwde
loopne
es
(bad)
dec
pop
mov
loopne
fmul
mov
xor
ret
mov
dec
add
ja
push
call
fwait
loope
push
xchg
or
test
jp
loope
cmp
add
les
add
or
fistp
fwait
pop
pop
xchg
or
jmp
add
add
cmp
pop
into
hlt
mov
xor
pop
pushf
jl
or
mov
outs
lds
jbe
pusha
xchg
cmp
and
mov
and
fild
je
cmps
add
cmps
xchg
mov
sbb
pop
aam
add
add
es
xchg
fimul
or
fidivr
call
mov
jl
shl
mov
xor
ins
popf
xchg
inc
loopne
call
dec
add
fld
scas
cdq
fldlg2
and
(bad)
out
push
sbb
stc
push
movs
fwait
call
shl
mov
sbb
dec
xlat
(bad)
jmp
push
(bad)
rcl
div
add
scas
and
jg
and
jnp
jns
push
jns
mov
sti
xchg
adc
call
xchg
movs
test
cli
dec
aam
repnz
cmp
fadd
dec
retf
in
jp
sbb
add
inc
xlat
push
mov
add
imul
scas
cli
repnz
jb
pop
xchg
dec
xor
sub
xchg
xor
pushf
inc
sub
inc
sub
add
scas
jmp
nop
xchg
mov
retf
adc
popf
xor
xchg
pop
jle
inc
or
mov
sub
test
xchg
pop
(bad)
out
mov
dec
cdq
lahf
(bad)
(bad)
(bad)
mov
pop
jmp
cli
adc
add
fnstsw
cmc
cmc
xor
xchg
daa
xor
or
mov
out
outs
cli
jmp
js
in
mov
xor
pop
cmps
in
repz
add
adc
in
push
jnp
fwait
cmp
mov
or
jge
int3
ja
push
sbb
out
push
pop
adc
sbb
dec
js
clc
jge
or
push
add
in
mov
adc
sbb
or
call
test
inc
sbb
shl
xchg
fcmovnu
test
jp
push
jnp
bound
push
clc
(bad)
(bad)
jmp
cmp
jne
mov
sub
repnz
jmp
(bad)
(bad)
dec
arpl
sbb
and
ret
test
sbb
mov
int3
push
xchg
jne
test
(bad)
jmp
adc
add
jmp
outs
jbe
xchg
xor
(bad)
(bad)
(bad)
jmp
es
jne
push
push
pop
add
dec
rcr
mov
mov
xor
clc
cli
leave
pop
bound
or
sar
test
scas
sub
(bad)
(bad)
(bad)
push
sub
add
push
rol
mov
or
adc
addr16
push
push
xor
jecxz
(bad)
clc
cmc
sub
or
mov
fs
paddsb
(bad)
call
or
jnp
daa
cld
cmp
xlat
push
xor
call
and
jl
div
mov
je
push
push
fisttp
(bad)
jg
xor
(bad)
mov
jnp
ret
push
cmps
mov
(bad)
adc
add
pop
std
(bad)
inc
les
rcr
movs
dec
(bad)
loopne
and
and
push
iret
mov
das
jp
call
lods
pop
ret
repz
pop
popa
in
xor
xchg
mov
(bad)
(bad)
(bad)
fld
sub
daa
adc
fs
or
sbb
pop
inc
mov
dec
(bad)
(bad)
jg
mov
test
aad
jmp
add
movlps
aam
push
fwait
cli
xchg
sahf
ins
call
and
lods
add
add
(bad)
jmp
add
push
or
push
int3
adc
addr16
int
psrlw
call
mov
mov
imul
js
sbb
or
imul
outs
ror
or
fdivr
adc
popa
mov
cmps
(bad)
call
mov
test
clc
ficomp
mov
cmc
xchg
xchg
jmp
pop
jb
or
jl
pop
add
sahf
mov
push
iret
pop
sbb
inc
(bad)
(bad)
jmp
push
sub
cmp
movs
in
fisttp
div
fnstcw
sar
fdivr
add
pop
mov
outs
xchg
mov
sbb
int
jle
lea
pop
pusha
loopne
jo
(bad)
(bad)
(bad)
jnp
xor
fidiv
loope
test
jne
sbb
aaa
push
pop
js
cli
and
(bad)
push
ss
inc
xchg
push
outs
or
adc
mov
into
test
aam
loop
adc
or
(bad)
dec
push
popf
fs
scas
push
and
outs
enter
call
(bad)
jmp
aas
lods
cmp
add
xor
out
push
in
es
int3
shl
test
(bad)
(bad)
(bad)
inc
dec
das
dec
aam
in
lahf
pop
adc
call
aas
mov
mov
inc
pop
retf
inc
xchg
rol
(bad)
dec
mov
mov
xor
mov
xor
ins
retf
shl
pusha
movs
sti
(bad)
adc
jo
call
loopne
sub
in
cmp
movs
push
sbb
sahf
inc
jmp
mov
jg
call
xchg
add
xor
jl
das
add
xchg
inc
popa
mov
jmp
jns
(bad)
cli
les
sub
shl
add
dec
cmp
cli
(bad)
jg
iret
mov
mov
or
inc
mov
and
sub
shr
jge
lahf
aas
cmp
add
fldenv
imul
fisttp
add
popf
or
out
sar
iret
lahf
adc
mov
cmc
(bad)
call
in
jae
jbe
jbe
imul
aam
jmp
bound
xor
cmp
(bad)
hlt
leave
iret
jecxz
cld
and
aaa
(bad)
(bad)
mov
pop
adc
inc
xor
stos
nop
and
ror
mov
ja
jb
sbb
dec
(bad)
movs
gs
pop
push
cmp
jb
test
call
call
popf
xor
fisubr
pop
int3
xchg
and
pop
add
sbb
addr16
cld
add
cs
cld
(bad)
(bad)
push
push
jno
ss
mov
dec
cmp
dec
hlt
cli
dec
(bad)
out
int
xor
stos
jbe
pop
mov
in
or
add
mov
out
mov
pop
and
(bad)
out
(bad)
mov
jp
mov
add
lock
jmp
inc
xor
(bad)
outs
ds
popf
inc
mov
out
inc
mov
push
xor
xor
loopne
jg
(bad)
(bad)
inc
push
ss
add
cdq
dec
mov
jae
outs
sar
out
add
neg
pop
enter
inc
stos
rol
mov
call
jbe
loopne
mov
cmp
push
sub
sub
into
shr
cwde
sbb
jmp
loope
push
push
clc
aam
(bad)
lds
test
push
xor
push
stos
inc
test
aam
push
or
mov
push
xchg
mov
pop
or
dec
cmc
add
(bad)
jg
xchg
out
xor
xchg
nop
push
enter
cmc
inc
and
push
shl
mul
sar
xchg
sar
add
or
push
jecxz
xchg
(bad)
jg
(bad)
(bad)
(bad)
(bad)
js
sub
(bad)
shl
cli
mov
(bad)
mov
jnp
or
fldcw
dec
and
cmps
loope
cmps
mov
add
mov
and
popf
xchg
(bad)
(bad)
dec
add
imul
sti
xchg
aam
xchg
mov
sub
ja
outs
(bad)
js
dec
mov
or
mov
add
xchg
or
inc
mov
(bad)
jmp
pop
mov
pushf
rcl
dec
retf
mov
loope
add
loop
test
(bad)
(bad)
inc
push
mul
ret
outs
mov
lahf
aaa
loope
push
push
push
xlat
je
push
pop
test
(bad)
cmp
aaa
dec
mov
xchg
jecxz
cmp
mov
jg
nop
(bad)
mov
or
sub
mov
add
(bad)
call
or
mov
lock
lahf
clc
and
cmps
(bad)
nop
xchg
or
in
jmp
adc
or
push
inc
mov
sub
add
mov
mov
sbb
jmp
test
add
(bad)
(bad)
mov
lahf
pushf
fidivr
nop
jbe
inc
xor
xchg
jns
mov
mov
ins
xor
push
lock
gs
sub
and
imul
add
test
std
not
std
(bad)
xchg
add
push
sub
add
ins
dec
sti
push
mov
(bad)
(bad)
(bad)
dec
or
pop
mov
lock
mov
add
repnz
ds
rcl
add
mov
clc
xchg
aad
push
icebp
jae
cmc
pop
cwde
sbb
and
sbb
and
mov
pop
sub
jns
inc
(bad)
(bad)
mov
jecxz
fnstenv
cwde
jecxz
(bad)
jmp
inc
sbb
(bad)
(bad)
(bad)
jmp
(bad)
push
(bad)
(bad)
fnstenv
aas
pop
sbb
cmps
ds
jl
ret
iret
aas
mov
aaa
dec
add
add
ins
call
xchg
in
xchg
jg
(bad)
inc
cmp
pop
shl
sahf
int3
fnsave
popf
nop
or
nop
cli
call
(bad)
cmp
hlt
dec
jno
call
jecxz
ror
scas
(bad)
pusha
sbb
aaa
sbb
mov
adc
sbb
xchg
(bad)
(bad)
(bad)
push
loop
jns
mov
jp
push
adc
sahf
mov
bound
shr
mov
jmp
push
(bad)
(bad)
call
jnp
dec
stc
mov
lods
pop
ret
mov
mov
cmps
push
mov
(bad)
(bad)
(bad)
dec
xchg
inc
retf
xchg
in
jle
add
icebp
mov
adc
mov
ds
pop
(bad)
jg
push
sbb
ins
dec
push
pop
sub
mov
out
fs
sahf
ins
neg
sbb
(bad)
(bad)
(bad)
(bad)
cmp
mov
xchg
and
mov
dec
jae
mov
jp
pushf
push
pop
mov
ret
jno
movs
(bad)
push
(bad)
fidivr
pop
pusha
(bad)
cmps
add
jecxz
aam
cmp
add
cli
sar
out
inc
popf
lods
rcl
xchg
mov
mov
aaa
or
push
test
(bad)
(bad)
call
fsubr
mov
jnp
inc
dec
repz
jbe
cmp
cwde
neg
inc
and
scas
cwde
das
xchg
(bad)
(bad)
xor
ret
and
inc
dec
out
test
adc
mov
(bad)
(bad)
push
or
loop
jno
inc
mov
jmp
fyl2x
push
add
or
sbb
stos
fdivr
push
ror
and
pop
push
scas
fucom
cmp
es
(bad)
push
and
loopne
jno
inc
xor
fisubr
push
inc
pushf
es
(bad)
(bad)
out
call
jae
xor
push
das
aas
test
cli
cld
lahf
pusha
pop
dec
xor
xlat
fcomip
fisttp
push
mov
dec
and
jg
out
push
std
(bad)
(bad)
mov
jnp
test
out
jp
or
mov
push
sub
inc
inc
xor
pusha
pop
push
imul
pop
int
dec
ret
fwait
test
js
test
mov
popa
pushf
in
(bad)
(bad)
(bad)
(bad)
cmp
shl
inc
or
inc
test
and
fs
xor
lock
call
mov
and
push
xchg
pop
sbb
enter
xchg
stos
push
outs
add
pop
xchg
daa
and
mov
shl
and
dec
adc
inc
outs
neg
adc
lock
out
xor
repnz
add
xchg
test
sbb
in
jg
call
(bad)
pop
fisttp
xchg
or
imul
or
fdiv
dec
test
add
sub
or
pusha
xor
jg
sub
(bad)
mov
(bad)
mov
push
daa
out
inc
dec
or
fucomi
sub
and
cmps
call
mov
(bad)
scas
clc
loope
mov
ins
rcr
pop
mov
mov
out
(bad)
(bad)
(bad)
call
fld
or
or
lods
mov
(bad)
dec
scas
or
fistp
lea
mov
cli
mov
jne
les
xchg
or
and
imul
push
lods
repz
int3
std
inc
add
imul
(bad)
jmp
adc
sub
dec
add
xchg
add
es
lock
mov
daa
lea
scas
mov
or
pop
sub
xor
xchg
sub
add
jns
sti
cmps
mov
inc
clc
(bad)
(bad)
(bad)
(bad)
mov
(bad)
inc
push
mov
aas
push
or
ror
lahf
mov
sbb
xor
(bad)
(bad)
(bad)
(bad)
ds
retf
nop
das
mov
mov
jp
or
es
inc
bnd
or
sahf
fild
sub
clc
mov
loopne
mov
or
iret
jo
sahf
inc
push
ss
adc
leave
(bad)
(bad)
push
nop
jmp
clc
test
dec
movq
stos
jne
push
pop
mov
clc
(bad)
(bad)
dec
jmp
das
jle
jmp
pop
test
dec
loopne
adc
fnstenv
xchg
inc
mov
inc
mov
xchg
jbe
add
pop
sub
pop
shl
jae
(bad)
call
mov
mov
les
mov
mov
bound
enter
(bad)
(bad)
xchg
(bad)
std
fistp
int
rcr
jle
jb
in
mov
sahf
push
xor
xor
push
dec
aad
(bad)
(bad)
mov
or
neg
mov
shl
inc
add
pop
popa
sbb
cmp
sti
mov
jae
fsubr
repnz
ret
icebp
jmp
sub
(bad)
push
jp
sub
das
in
jmp
idiv
cld
fimul
les
es
xor
cmp
(bad)
fisttp
mov
cmp
cwde
les
in
pop
xor
mov
adc
jg
push
xor
adc
lock
cmps
or
lods
sub
fsub
iret
jg
lahf
(bad)
jmp
pusha
mov
inc
fld
pop
test
pop
popa
mov
les
push
add
(bad)
jg
inc
push
mov
outs
aam
out
xor
(bad)
hlt
pop
mov
sub
(bad)
(bad)
jmp
nop
scas
pusha
aaa
pop
stos
mov
jle
jo
inc
mov
(bad)
and
sbb
test
mov
jmp
xor
pop
icebp
sti
shl
mov
enter
leave
push
loop
mov
fdivr
les
sbb
(bad)
dec
je
jbe
mov
push
sahf
enter
ins
push
mov
mov
ret
ficom
ja
xchg
scas
shl
sub
pop
call
(bad)
(bad)
(bad)
fsubr
sub
or
and
adc
inc
mov
movs
aaa
dec
scas
inc
push
sub
jg
(bad)
jg
inc
loope
mov
std
mov
in
inc
lahf
ja
in
loopne
loopne
dec
push
fdiv
cmp
test
push
cld
jb
sbb
dec
xchg
xchg
mov
and
cmp
call
pusha
sub
bswap
cmc
push
ds
pop
jg
(bad)
push
pop
fs
cmp
mov
pop
inc
clc
mov
xor
mov
mov
mov
(bad)
dec
hlt
mov
imul
pop
pop
and
xor
inc
push
rcl
mov
fst
into
xchg
mov
mov
popf
xchg
or
and
pop
sbb
jle
pop
(bad)
fdivr
jmp
ror
fisttp
push
xor
inc
jmp
jle
fdiv
jecxz
or
std
add
(bad)
fcomi
daa
fistp
aas
repz
add
and
or
outs
and
mov
pop
add
add
mov
and
(bad)
(bad)
(bad)
call
test
(bad)
(bad)
retf
in
pop
aas
xchg
test
mov
push
add
and
add
(bad)
inc
inc
or
mov
in
leave
add
int
stc
xor
fistp
js
sub
push
fiadd
sub
jne
out
outs
(bad)
(bad)
fbstp
clc
add
rcl
shl
lock
aas
sti
jg
adc
(bad)
(bad)
jg
popf
das
xchg
(bad)
or
fisttp
loopne
mov
(bad)
(bad)
(bad)
inc
add
aad
push
xor
dec
fiadd
les
sbb
cli
movs
sti
pop
(bad)
jg
shl
imul
cmp
pop
pusha
mov
aad
sbb
daa
es
das
stc
xor
(bad)
inc
fwait
jg
cmp
pop
lea
mov
push
xor
xor
mov
fmul
add
(bad)
fmul
stos
mov
call
scas
loope
mov
mov
and
push
inc
mov
imul
xlat
mov
sbb
(bad)
in
and
ror
(bad)
in
out
jbe
jmp
xchg
pop
add
or
lahf
mov
pusha
mov
sub
add
or
sbb
jg
xchg
pop
pop
ficomp
sub
cld
shl
sbb
mov
inc
lds
(bad)
sub
scas
(bad)
cmp
(bad)
call
call
pop
call
adc
ss
adc
cli
mov
push
and
sbb
cmp
mov
(bad)
jg
addr16
sub
pop
test
(bad)
and
jle
fstp
in
pop
and
(bad)
call
push
repz
fisttp
pop
push
add
ins
lea
cmp
test
aad
lock
(bad)
out
dec
call
(bad)
(bad)
(bad)
jg
pushf
add
(bad)
or
movs
pop
jnp
fs
mov
xchg
push
dec
mov
mov
push
ret
out
ds
dec
cld
loope
lahf
ret
cmp
lock
cdq
mov
bound
(bad)
jmp
xor
adc
in
movs
sti
mov
pop
jmp
xor
mov
adc
mov
hlt
xchg
cli
adc
sub
adc
fist
das
std
or
std
out
loopne
pop
cld
adc
push
and
jge
mov
dec
dec
mov
xor
xrelease
sbb
cmp
sub
sbb
movs
or
xor
ss
bound
and
mov
push
(bad)
(bad)
fild
sub
cmps
ds
jns
mov
fcom
add
jg
dec
cmp
cmp
jle
(bad)
push
push
xlat
rcr
mov
cmc
inc
jl
lahf
or
icebp
int3
lods
js
mov
lock
jecxz
popa
data16
adc
jp
sbb
outs
fdivr
ret
pop
push
(bad)
dec
xchg
aad
or
(bad)
pushf
clc
cs
sub
(bad)
cli
cli
inc
xchg
leave
inc
mov
(bad)
(bad)
mov
add
xchg
add
fisttp
call
popf
in
aam
cmp
arpl
call
repz
sar
adc
(bad)
(bad)
(bad)
jmp
inc
push
mov
mov
jbe
cmc
movs
fsub
mov
mov
add
(bad)
inc
mov
cmps
lods
stc
jp
es
fiadd
inc
push
dec
pop
fsubr
jmp
inc
out
and
cld
push
pop
push
mov
adc
xor
inc
sbb
inc
adc
add
mov
or
mov
dec
jecxz
mov
fild
rol
push
into
xlat
arpl
push
(bad)
inc
jecxz
ficom
data16
push
sub
fbld
(bad)
std
push
and
(bad)
(bad)
(bad)
call
std
call
xor
pop
jg
outs
loopne
clc
jae
jecxz
mov
ins
data16
sub
call
mov
out
and
out
out
cmc
icebp
dec
cmp
in
repz
sar
dec
and
pop
xchg
cmp
shr
call
push
push
xlat
jmp
mov
add
js
and
jg
dec
aas
sub
fdiv
icebp
cmp
and
or
(bad)
fwait
enter
clc
(bad)
jmp
sbb
inc
inc
enter
rcl
xchg
jmp
stc
ficom
loopne
or
push
repz
xchg
cld
idiv
sbb
addr16
xor
(bad)
(bad)
jmp
add
adc
or
mov
cs
pop
mov
add
and
inc
dec
lock
(bad)
(bad)
jmp
shl
pop
shl
xchg
mov
mov
shl
(bad)
mov
inc
int
mov
jmp
add
dec
xchg
popa
cmps
pop
inc
dec
ss
cld
jmp
or
dec
dec
cwde
jmp
sub
(bad)
aaa
call
in
or
loopne
push
jns
stos
mov
(bad)
(bad)
(bad)
jmp
mov
push
add
pop
inc
out
sbb
xchg
add
out
xchg
inc
call
xchg
int3
les
je
cwde
add
pushf
nop
inc
repz
sub
cmp
(bad)
mov
adc
xchg
add
mov
cdq
mov
std
cld
fstp
ret
mov
add
add
fmulp
hlt
(bad)
(bad)
(bad)
(bad)
jmp
push
and
retf
(bad)
fild
repz
movs
repnz
push
inc
out
mov
dec
ror
(bad)
call
int
icebp
push
ficomp
inc
pop
test
pushf
push
push
pop
pop
sbb
in
fbld
adc
(bad)
(bad)
dec
pop
mov
bound
pop
shl
dec
xchg
shl
hlt
pop
jae
sub
out
jp
cli
popf
sar
jmp
jnp
fisttp
jp
add
mov
or
mov
cmp
pop
pop
mov
jg
stos
jle
inc
push
outs
jg
or
ds
xor
and
push
fcomi
inc
mov
cmp
or
cmp
sar
stc
mov
(bad)
lock
xor
in
mov
div
and
pop
clc
inc
inc
add
xor
push
xor
add
jecxz
inc
xchg
inc
mov
mov
das
retf
repnz
jae
outs
jg
add
outs
and
in
es
iret
retf
sub
aam
cld
push
test
jmp
sti
dec
and
dec
aad
daa
add
out
pop
pop
and
jl
push
push
fnstenv
xlat
mov
loop
add
xchg
(bad)
pusha
mov
xchg
cs
mov
call
inc
sbb
shr
add
dec
xchg
mov
(bad)
(bad)
inc
mov
sbb
fdiv
arpl
inc
adc
or
inc
ror
clc
pop
hlt
lock
xor
enter
cs
and
out
cmp
(bad)
jmp
int
adc
out
in
adc
add
jne
idiv
(bad)
inc
cmp
sbb
shr
add
ret
jns
add
mov
test
ret
push
adc
(bad)
(bad)
(bad)
in
dec
adc
retf
pop
stc
push
add
mov
mov
adc
popf
push
mov
dec
push
in
mov
dec
pop
and
fs
stos
cwde
cmp
push
push
(bad)
(bad)
call
push
xchg
jp
test
lock
xchg
outs
cmp
loopne
mov
retf
inc
loopne
pop
add
sti
inc
mov
repz
(bad)
mov
mov
add
dec
mov
in
mov
pop
icebp
or
(bad)
jle
xor
inc
inc
fmul
mov
call
pop
xchg
mov
fsubr
xchg
dec
adc
lock
call
add
push
inc
enter
xor
pop
jp
sbb
shl
xchg
(bad)
rol
loopne
add
fisttp
enter
push
call
movs
outs
(bad)
(bad)
jmp
jl
cmps
xchg
dec
test
ficomp
ja
data16
or
dec
adc
mov
jmp
(bad)
and
adc
cmp
arpl
iret
lea
dec
push
jg
sbb
call
sub
(bad)
(bad)
(bad)
jmp
arpl
mov
push
cwde
(bad)
faddp
mov
into
popa
fmul
das
rcl
cmp
in
es
(bad)
jmp
arpl
pusha
xlat
adc
push
pushf
jge
lock
sti
inc
ins
lahf
mov
call
lods
mov
sar
inc
mov
mov
cmp
inc
jge
outs
test
adc
movs
sbb
or
in
out
inc
mov
mov
cmp
into
cmp
xchg
mov
sahf
dec
mov
push
inc
add
aaa
jecxz
cli
(bad)
jnp
cmp
ret
stc
imul
mov
test
test
sub
repnz
push
(bad)
(bad)
(bad)
jg
inc
mov
cmp
in
mov
and
cld
out
mov
mov
(bad)
std
sbb
(bad)
(bad)
mov
dec
mov
clc
push
pusha
std
dec
push
ret
out
int
jb
or
sbb
scas
fs
(bad)
jg
je
jecxz
idiv
mov
jp
in
jno
sub
icebp
repnz
jecxz
(bad)
(bad)
(bad)
(bad)
mov
cmps
aad
cli
fimul
mov
mov
rcr
pop
adc
pop
fdecstp
std
(bad)
(bad)
(bad)
aas
popf
cmp
pushf
pop
jl
das
push
pop
(bad)
stos
fiadd
jl
mov
rcl
jnp
lods
es
(bad)
call
add
jecxz
aad
int3
out
fidivr
rol
pop
adc
out
lods
or
aad
xor
add
sar
call
jl
adc
xchg
jp
lock
mov
push
adc
push
cld
(bad)
jg
lahf
ins
arpl
xor
rcr
js
inc
sub
clc
sbb
(bad)
(bad)
(bad)
(bad)
pop
(bad)
or
mov
lahf
dec
popf
or
pop
clc
push
into
outs
pushf
(bad)
push
push
ds
sbb
dec
ret
mov
push
arpl
in
(bad)
or
nop
pop
adc
(bad)
(bad)
jg
(bad)
inc
mov
nop
bnd
dec
mov
mov
ficomp
xchg
jb
xchg
lea
cmp
or
idiv
add
fild
mov
jg
lds
and
ret
xor
icebp
inc
mov
(bad)
call
shl
call
lods
lods
mov
ficomp
lds
loope
ret
fcmovbe
adc
push
mov
add
push
aad
xchg
sub
cld
(bad)
(bad)
(bad)
fsubr
cld
add
push
xor
les
mov
mov
fimul
inc
jno
(bad)
(bad)
(bad)
jnp
mov
mov
cmps
repz
cli
retf
dec
push
setg
xchg
pop
imul
loop
(bad)
mov
and
pop
lock
mov
xor
sbb
shr
call
push
add
jo
(bad)
(bad)
call
mov
or
lods
jmp
test
in
clc
mov
sbb
fs
or
dec
mov
into
fdiv
dec
(bad)
dec
lods
jmp
cdq
addr16
scas
div
xor
mov
cli
mov
xchg
icebp
shr
outs
and
rol
stc
mov
mov
add
mov
adc
mov
rol
jae
test
stc
cld
aam
(bad)
(bad)
dec
mov
or
sbb
enter
fimul
imul
and
mov
inc
js
popa
inc
sbb
inc
clc
sub
(bad)
call
dec
and
cmp
add
push
inc
sti
mov
add
(bad)
(bad)
cmp
and
pop
xor
push
sti
mul
ror
dec
or
jle
jle
(bad)
call
sahf
div
cmps
das
cmp
adc
mov
or
movs
push
gs
arpl
(bad)
fcomip
and
jne
mov
sub
push
mov
mov
mov
fdiv
mov
push
adc
cld
xchg
aad
push
shr
or
inc
or
push
(bad)
(bad)
(bad)
cmp
jb
imul
push
mov
adc
mov
cmps
cli
mov
(bad)
(bad)
jmp
in
push
mov
push
cmp
jl
mov
pop
cmp
ret
pop
std
call
icebp
in
stos
std
(bad)
lock
ja
mov
hlt
(bad)
(bad)
(bad)
dec
inc
or
scas
mov
div
aam
leave
(bad)
js
push
popa
stos
fbld
jl
or
dec
sub
add
sbb
jge
call
test
lods
mov
sbb
(bad)
mov
add
sti
adc
inc
scas
cmp
(bad)
(bad)
(bad)
jmp
inc
mov
jbe
or
cmp
pop
cmp
scas
mov
fcom
mov
push
cmp
pop
cld
ja
rcl
std
adc
mov
pop
and
and
mov
xchg
pop
mov
test
mov
push
cld
jmp
and
mov
pop
repz
mov
push
lods
sub
movs
arpl
pop
lods
inc
cld
inc
in
inc
dec
cli
and
mov
stc
mov
add
lds
fwait
in
xchg
lahf
les
sti
cmp
cmp
scas
dec
loopne
into
mov
jg
(bad)
jmp
js
retf
adc
lds
shl
(bad)
jmp
mov
clc
clc
ins
outs
adc
push
leave
push
js
cli
cmp
(bad)
(bad)
jp
jmp
call
mov
iret
arpl
add
sub
rcr
xor
push
push
shr
add
inc
std
fistp
fsubrp
rol
pop
sbb
jle
jmp
adc
(bad)
call
in
add
int
jne
lds
xor
mov
test
mov
or
(bad)
(bad)
call
jb
sahf
pop
jg
xchg
adc
push
shl
sbb
stos
mov
mov
test
(bad)
jmp
inc
dec
add
mov
aas
xor
sbb
jno
xchg
dec
sub
cmp
repnz
das
enter
add
or
inc
retf
clc
cmp
loopne
jae
inc
sbb
jae
mov
pop
jns
js
in
(bad)
inc
xchg
inc
pop
pushf
and
add
cld
cmc
push
jecxz
push
xor
sub
scas
jmp
add
mov
(bad)
js
(bad)
(bad)
(bad)
fstp
xchg
push
in
icebp
test
test
push
add
adc
mov
hlt
(bad)
dec
loop
mov
cli
rcr
rol
adc
(bad)
(bad)
fisttp
or
stc
idiv
sbb
mov
pusha
mov
mov
dec
pop
push
mov
lahf
fwait
(bad)
out
(bad)
(bad)
outs
out
sub
cmps
adc
fild
mov
dec
jno
pop
mov
in
scas
gs
mov
jb
xor
js
(bad)
(bad)
out
cmp
imul
aas
adc
jns
cli
std
xlat
xchg
mov
mov
(bad)
xchg
fld
xor
xchg
push
clc
imul
rcr
cmp
call
mov
dec
lock
rcl
clc
(bad)
(bad)
(bad)
jmp
mov
add
add
es
mov
clc
sub
pop
cmp
push
fist
mov
sti
cmps
push
loop
jnp
sahf
repz
mov
in
cmp
ret
fisttp
xchg
mov
mov
push
jmp
jb
sub
mov
dec
std
and
pop
mov
push
pop
or
(bad)
jmp
push
pushf
pop
aas
xchg
sbb
jae
adc
inc
stc
shl
and
sub
fistp
mov
(bad)
push
jmp
jmp
sbb
add
xchg
mov
loopne
xchg
test
lock
(bad)
jmp
mov
mov
add
or
loop
in
int
sti
mov
push
es
data16
sbb
lods
sbb
iret
jle
cmc
or
aad
(bad)
inc
dec
dec
cdq
nop
jne
xchg
mov
cmps
cmp
xchg
pop
scas
cld
jmp
ret
scas
push
hlt
jmp
sub
push
and
or
ja
jmp
mov
fistp
cld
aam
jle
xchg
or
fdivr
aaa
xor
int
sbb
pop
scas
xor
call
(bad)
cmp
jb
shl
or
inc
clc
cmps
jo
inc
jg
jns
xor
adc
cmp
add
and
add
sub
(bad)
add
sub
add
and
sub
add
xor
in
(bad)
cmp
add
cmp
push
cmp
dec
cs
xchg
pop
adc
pusha
inc
sub
verr
ins
or
push
cmp
outs
mov
push
xor
jb
fisub
cs
pop
jae
sahf
push
xor
push
push
dec
sub
mov
mov
cmp
cmp
jbe
add
sbb
dec
adc
ins
or
push
bound
js
lods
(bad)
out
push
push
js
ret
pop
pusha
sbb
jae
inc
mov
sbb
jbe
js
add
add
jbe
dec
addr16
add
add
pusha
es
push
mov
inc
sub
dec
pop
pop
pop
sub
ss
pop
inc
into
retf
push
pop
aaa
add
push
push
push
aas
add
cmp
pop
and
gs
inc
dec
jnp
mov
jbe
jle
mov
xor
push
dec
inc
out
dec
pusha
mov
push
push
pop
push
nop
pop
pop
inc
cmps
pop
dec
std
(bad)
mov
push
push
push
pop
pop
ficomp
imul
add
inc
test
pop
mov
popa
dec
xchg
add
push
jne
dec
jge
in
xchg
inc
push
fs
inc
addr16
add
popa
gs
dec
ins
push
jnp
popf
adc
movs
jb
add
jbe
mov
jbe
lock
lods
jl
xor
add
pusha
ret
and
xchg
mov
sbb
outs
mov
add
inc
jp
xor
mov
ins
repz
inc
fwait
dec
add
push
nop
push
pop
mov
push
jle
ret
in
add
pop
sahf
pop
cmp
mov
jns
add
gs
pop
imul
data16
jo
fwait
cdq
inc
movs
dec
add
pop
mov
add
cmp
(bad)
(bad)
jl
jg
imul
cmps
jno
jne
jge
xchg
mov
xchg
lea
add
push
cs
(bad)
push
xchg
and
xchg
push
call
movs
cwde
(bad)
cmps
sahf
cmp
mov
fcom
(bad)
mov
test
add
push
mov
lock
sub
test
push
add
outs
add
mov
fwait
push
and
(bad)
out
mov
lods
jae
xchg
cmps
jp
out
imul
ds
mov
add
mov
mov
and
outs
outs
int
add
pop
fwait
xchg
test
add
mov
pushf
xchg
xchg
cmps
add
stos
add
fstp
(bad)
scas
push
call
mov
jle
pop
push
mov
call
cdq
add
lea
ins
imul
cmps
mov
sahf
mov
jbe
ins
pop
cmps
mov
mov
es
movs
(bad)
stos
add
lods
cs
add
mov
ins
mov
imul
lods
ds
scas
add
fld
(bad)
mov
mov
(bad)
mov
sar
fnstcw
test
rol
retf
lds
sahf
lds
fcom
push
leave
ret
mov
add
(bad)
mov
mov
(bad)
rol
lds
(bad)
es
(bad)
leave
enter
retf
ror
add
xlat
shl
jg
repz
rcl
(bad)
add
add
in
jecxz
icebp
lock
add
and
pop
mov
movsx
sbb
add
add
jg
push
cmp
sahf
sub
pop
add
into
and
and
add
or
iret
mov
add
or
add
mov
sbb
add
push
push
pop
fistp
sbb
inc
mov
cmps
sbb
pop
sbb
int3
cld
adc
pop
imul
cld
sar
test
(bad)
(bad)
jge
sbb
sbb
(bad)
fld
mov
sti
fisttp
push
add
pop
lods
sbb
push
std
fadd
fnstcw
loopne
mov
push
or
pop
and
call
scas
inc
aad
fiadd
(bad)
jg
mov
pop
dec
push
mov
mov
jns
fmul
(bad)
jns
jns
ret
loope
icebp
xor
adc
pop
push
cmp
pop
xor
in
repz
fndisi(8087
fstp
cmc
sbb
es
pop
syscall
adc
fstp
sub
jle
jb
rcr
repnz
ss
mov
pop
pop
sysret
or
sub
jnp
(bad)
jmp
movs
cmps
das
das
mov
rep
sub
or
(bad)
push
mov
fcmovb
clc
div
idiv
(bad)
jmp
jmp
mov
sub
pop
pusha
sub
scas
clc
dec
sti
stos
outs
clc
rol
mov
in
outs
pop
sub
stos
fist
adc
or
jge
clc
movs
data16
mov
xlat
pusha
out
add
pop
pop
mov
or
(bad)
cld
(bad)
mov
mov
sub
addr16
pusha
(bad)
or
xor
cmc
cld
push
add
mov
pop
adc
or
aas
mov
jbe
fstp
mov
pop
or
(bad)
fbstp
(bad)
cld
jmp
mov
cld
outs
and
push
add
test
ins
xor
cs
and
or
pop
mov
ss
inc
imul
pop
and
or
popa
or
loopne
adc
pop
jge
aad
(bad)
push
pop
add
test
pop
or
or
lar
in
add
pop
push
jle
cmp
imul
mov
or
add
addr16
(bad)
cs
pop
pop
or
fs
mov
xchg
fwait
push
in
fistp
popf
fwait
xchg
push
inc
jp
push
or
arpl
pop
mov
and
jbe
adc
pop
pop
pop
clts
or
call
xchg
xchg
xchg
pop
adc
pop
(bad)
inc
or
adc
lahf
in
mov
jmp
repz
mov
push
push
or
add
mov
in
xchg
in
cli
mov
fbld
pop
push
mov
push
pop
cmp
xchg
xchg
add
mov
pop
mov
push
push
push
pop
dec
les
jo
inc
add
pop
ds
loopne
or
mov
mov
lds
xor
dec
mov
sbb
daa
dec
dec
dec
or
ret
pop
nop
mov
cmp
pop
or
jnp
fwait
xchg
add
pop
add
xor
add
cdq
xchg
xchg
xchg
adc
jnp
add
or
(bad)
mov
add
out
mov
int3
mov
add
dec
and
add
paddb
add
inc
pop
pop
lock
add
cld
add
inc
and
clc
cld
ret
imul
jae
adc
and
inc
pop
sbb
adc
movs
outs
inc
sbb
sbb
sbb
sbb
pop
das
das
adc
in
and
add
push
xor
and
sub
daa
add
call
xor
cmp
xor
xor
cmp
xor
int
(bad)
pop
pop
push
outs
push
inc
imul
ss
jle
xor
or
push
ins
mov
push
xor
xor
cmp
out
sub
dec
sti
inc
fisubr
cmp
ds
aaa
ja
and
pop
push
lock
shr
jo
inc
je
or
pop
jns
add
jo
jle
mov
js
inc
adc
push
gs
je
inc
jne
jg
jle
mov
pop
jp
outs
outs
pop
arpl
add
push
push
jge
add
pop
outs
push
add
sbb
je
adc
inc
fidiv
pop
sub
inc
cmp
inc
(bad)
dec
dec
xchg
mov
add
add
push
xchg
jg
pusha
push
das
pop
push
cmp
pop
sub
inc
jnp
mov
push
dec
jg
outs
and
push
push
mov
xchg
inc
add
inc
push
dec
inc
push
push
inc
add
inc
fwait
dec
and
pop
pop
ins
pop
or
adc
add
cs
pop
scas
dec
pop
test
pop
inc
mov
pop
xchg
mov
imul
dec
jo
(bad)
jp
push
je
push
ja
jl
or
sahf
popa
push
(bad)
ins
mov
into
jbe
push
js
pop
mov
mov
ss
add
(bad)
dec
xor
test
ds
test
xor
mov
cdq
dec
pop
xchg
push
(bad)
sahf
int
mov
sahf
pop
popf
pop
(bad)
mov
outs
xchg
pusha
xchg
or
addr16
push
push
xchg
mov
out
dec
add
push
add
dec
jbe
mov
icebp
pop
sti
je
jge
push
movs
out
add
lea
xchg
xchg
xchg
cdq
xchg
sahf
mov
cdq
test
add
lahf
xchg
add
mov
cdq
add
sub
fwait
pop
cld
das
pop
push
test
test
es
pusha
imul
scas
test
mov
mov
mov
add
jns
nop
mov
fwait
jnp
fwait
scas
jp
mov
popa
add
mov
push
shl
sar
int
dec
mov
cs
outs
jle
add
xchg
mov
test
mov
mov
ss
xchg
push
cdq
xchg
push
xchg
xchg
nop
add
shr
xchg
call
cwde
mov
sahf
fwait
dec
(bad)
xchg
mov
popf
scas
outs
popf
mov
mov
call
add
inc
mov
cmps
fisttp
in
mov
mov
ins
rol
mov
ss
stos
add
jmp
ret
lds
mov
inc
xchg
add
add
mov
iret
pop
mov
sti
mov
pop
int3
mov
dec
rol
(bad)
mov
movs
sub
into
jbe
(bad)
mov
add
ret
(bad)
fnstsw
cs
pop
int
mov
ret
shl
retf
lds
ret
(bad)
rcl
mov
push
int
mov
fild
jbe
add
fcompp
add
jmp
inc
aam
and
add
jae
pop
jge
loop
sub
es
test
je
in
dec
sbb
daa
add
mov
sbb
ds
push
or
scas
cld
out
nop
mov
dec
sbb
push
sbb
push
push
into
(bad)
scas
xor
js
loope
out
jle
add
mov
ficom
push
ds
and
jp
jecxz
mov
(bad)
jg
push
inc
pop
or
or
and
xor
jg
mov
in
and
dec
jb
and
and
or
cs
rcl
or
in
test
cs
pop
or
scas
mov
(bad)
mov
lock
push
inc
into
aas
fdivr
daa
imul
mov
jge
xor
push
or
(bad)
dec
stc
clc
fstp
int
fsubrp
out
aaa
xor
xor
pminub
push
ds
cmc
cli
(bad)
loopne
iret
fisub
unpcklps
aas
fdiv
sti
jg
das
cmp
(bad)
adc
xor
adc
cld
push
(bad)
aaa
add
jnp
sub
arpl
adc
aaa
and
adc
in
les
cmp
push
ins
ds
cmp
cmp
ins
outs
mov
(bad)
out
ss
xchg
or
push
pop
push
inc
jg
and
jmp
popf
cmps
pushf
popf
pushf
pushf
xchg
cmp
ds
sub
(bad)
lods
sub
add
xchg
imul
xchg
int
jmp
cmps
mov
cmps
cmps
mov
or
nop
(bad)
(bad)
call
stos
mov
lahf
xchg
xchg
dec
arpl
inc
push
les
mov
xchg
xchg
add
bound
push
jg
std
arpl
xchg
(bad)
ins
xchg
add
inc
ds
call
pop
pop
pop
adc
jbe
add
pop
pop
ds
add
dec
in
jmp
mov
movs
lods
lods
je
pop
inc
add
push
or
jbe
add
aas
and
clc
add
and
sub
push
enter
and
std
test
mov
pop
sbb
and
pop
dec
adc
and
xor
imul
xor
and
fsubr
mov
js
aaa
cmp
cmp
fwait
cmp
cmp
add
cmp
xor
or
test
out
fidivr
adc
shl
inc
ss
inc
cmp
fadd
jns
jle
add
fwait
cs
inc
pushw
push
jle
push
jle
jae
jae
add
outs
jae
outs
lods
mov
inc
inc
cmp
hlt
push
pop
cmp
push
sub
jne
and
popa
repz
fld
mov
add
dec
add
inc
add
dec
fs
inc
shl
inc
dec
outs
dec
inc
dec
xor
pop
add
add
cs
mov
fiadd
inc
add
jbe
lahf
dec
add
clc
call
add
push
jb
ja
mov
pusha
ret
out
fiadd
inc
into
ss
sub
push
mov
mov
xchg
push
lea
loope
xchg
and
sub
xchg
cdq
sub
mov
cs
fwait
xor
movs
fwait
push
mov
(bad)
not
cmps
mov
pop
cmps
call
mov
jg
(bad)
push
add
imul
lods
push
add
mov
add
(bad)
mov
jmp
stos
add
mov
add
mov
sahf
jbe
scas
push
add
mov
into
(bad)
test
rcl
rol
fstp
fild
add
and
ins
inc
sbb
push
test
adc
pop
mov
adc
inc
inc
jg
push
mov
or
pop
adc
inc
imul
push
adc
pop
gs
and
sbb
ins
outs
imul
jo
pop
sbb
xor
setg
mov
dec
pop
popa
cmp
and
pop
and
and
sbb
fnstcw
dec
inc
sub
pop
add
push
pop
push
push
inc
cmp
push
sub
push
push
dec
dec
dec
dec
inc
sub
or
nop
(bad)
aas
cld
cmp
or
pop
bound
pop
pop
push
aaa
das
or
inc
sahf
out
push
pop
lock
cvtps2pi
dec
dec
jno
or
movs
or
mov
and
scas
jbe
pop
add
add
in
sub
pop
inc
lods
mov
inc
add
mov
pop
sbb
aaa
ja
(bad)
push
mov
div
sub
aaa
sub
sub
add
pusha
ins
xor
mov
lahf
pop
imul
lods
fld
add
pop
add
add
addps
fistp
add
pop
das
mov
imul
add
add
xchg
pop
adc
add
mov
loop
pop
xchg
add
stos
mov
fist
mov
dec
outs
add
mov
add
add
cmp
pushf
pop
test
lsl
div
into
add
pop
inc
pcmpeqd
fsub
cmps
inc
popw
inc
outs
in
xchg
(bad)
inc
add
sbb
arpl
xchg
pop
lahf
xchg
push
fisttp
pop
pop
add
add
mov
pop
(bad)
fisubr
sub
add
pop
pop
mov
add
nop
xchg
inc
scas
scas
add
clts
add
lods
sbb
jg
lods
stos
or
not
shr
push
push
ret
xchg
jnp
pop
aaa
iret
(bad)
in
sbb
inc
inc
push
mov
dec
scas
mov
das
add
add
fisttp
std
add
rol
nop
mov
fldcw
add
add
int
mov
add
add
cmp
mov
xchg
iret
add
test
inc
jmp
push
test
mov
(bad)
mov
out
inc
adc
jns
add
fisubr
add
add
xchg
outs
pop
add
call
(bad)
clc
div
add
in
jmp
add
inc
mov
(bad)
inc
ds
cmp
inc
inc
inc
add
cmp
add
pop
add
dec
add
add
fwait
int
add
test
daa
(bad)
lldt
aad
ja
pop
push
pop
pop
adc
and
push
and
leave
add
xchg
iret
pusha
lds
sbb
mov
cmova
das
push
scas
js
inc
inc
mov
xchg
daa
(bad)
dec
cli
add
icebp
add
out
add
aad
add
xchg
jnp
adc
mov
bound
dec
cmp
push
add
fwait
int
and
sub
sub
or
xor
push
inc
int
repz
add
inc
add
cmp
add
je
xchg
add
bound
cwde
fdivrp
jbe
ds
pop
(bad)
daa
bswap
add
sub
pop
test
mov
das
daa
adc
sub
cmps
pop
add
sub
push
add
mov
sub
xor
imul
call
sub
jmp
add
jecxz
add
iret
mov
outs
mov
lahf
add
jle
imul
pop
jnp
push
pop
jbe
xor
gs
(bad)
(bad)
jmp
imul
and
sbb
sbb
not
sbb
fist
adc
push
xchg
adc
cmp
and
pop
xor
or
nop
mov
xor
xor
pop
pop
pop
add
add
cld
out
pop
sub
aad
aas
not
stos
nop
xchg
lahf
lds
adc
add
add
mov
je
and
lods
mov
add
add
div
add
lock
lds
cmc
inc
add
mov
outs
or
mov
pop
inc
ins
and
les
addr16
and
and
dec
sbb
in
repz
push
call
sbb
push
nop
sti
(bad)
(bad)
fistp
lock
adc
or
sbb
xor
es
add
inc
inc
mov
arpl
rol
hlt
xlat
or
loop
adc
sub
mov
out
mov
push
mov
mov
fistp
add
scas
test
test
inc
iret
add
jmp
cmc
cmc
repnz
in
out
loope
fild
sar
add
retf
mov
mov
mov
test
imul
cmp
mov
pop
retf
push
sub
and
sbb
(bad)
neg
(bad)
(bad)
push
adc
repnz
adc
and
adc
dec
dec
mov
aas
push
pop
add
add
imul
(bad)
lea
aaa
mov
inc
and
mov
pop
scas
push
dec
cmps
add
push
loopne
jmp
stos
dec
mov
aaa
(bad)
(bad)
sub
sti
cli
stc
add
jmp
add
(bad)
lds
xchg
movs
(bad)
call
mov
add
mov
stos
clc
(bad)
call
nop
pop
dec
pop
add
jne
mov
imul
and
inc
adc
sub
and
(bad)
sbb
push
ud0
adc
adc
adc
push
mov
sbb
sbb
cs
pop
popa
pop
add
js
add
add
inc
sub
cmovp
add
add
inc
adc
imul
push
xchg
pop
push
jg
icebp
stos
inc
and
loop
call
add
clc
test
in
add
iret
rol
add
(bad)
lods
(bad)
(bad)
(bad)
mov
cmps
mov
jae
xchg
mov
push
inc
pop
add
jo
scas
xor
sbb
mov
loope
ins
adc
and
mov
jg
adc
xor
sub
sub
jnp
push
call
es
(bad)
mov
adc
pusha
bound
rol
or
xchg
pop
jmp
ret
push
iret
mov
add
ret
push
mov
pop
pop
mov
add
mov
call
add
out
jmp
add
xlat
enter
mov
mov
ret
movs
push
stos
mov
js
arpl
aas
arpl
je
jp
test
sub
std
pop
push
inc
and
mov
cld
adc
jmp
and
(bad)
cld
mov
adc
push
push
adc
pop
adc
(bad)
fstp
adc
adc
sub
push
data16
mov
add
cwde
add
cs
add
pop
add
push
adc
pop
lahf
push
pop
(bad)
xlat
cli
stc
stc
(bad)
(bad)
(bad)
(bad)
clc
add
in
out
fsubp
xlat
add
ror
add
ret
mov
add
(bad)
push
jl
pop
cmp
cmp
jb
mov
sub
es
cli
loop
and
push
inc
cmp
and
jns
neg
push
adc
pop
pop
out
outs
mov
out
and
pop
pop
repnz
fistp
pop
imul
add
xor
jno
dec
je
movd
or
das
jl
inc
scas
ja
fisttp
nop
push
add
inc
scas
dec
sub
add
pop
push
loope
dec
add
data16
fneni(8087
aad
(bad)
(bad)
inc
int
lds
retf
add
test
mov
ins
or
arpl
popa
jle
inc
in
cld
jmp
mov
aas
imul
cli
daa
pop
lods
ss
call
ds
and
push
test
mov
pop
jmp
jecxz
nop
and
test
in
stos
stos
cmps
add
and
pop
mov
mov
out
iret
xor
movs
push
or
push
cmp
inc
xor
outs
out
(bad)
dec
stos
aam
jle
(bad)
(bad)
add
into
mov
add
lds
inc
sar
mov
mov
sub
pusha
jle
xchg
dec
jae
(bad)
scas
add
imul
enter
and
push
push
inc
(bad)
(bad)
sbb
adc
pop
sbb
adc
pop
out
pop
and
and
xchg
xchg
add
add
pop
push
sbb
aas
sbb
add
das
add
stos
add
add
add
mov
loop
fadd
fcomp
rol
jmp
mov
mov
add
stos
add
repz
(bad)
call
lea
(bad)
popf
jnp
jns
bound
lea
push
jge
shl
push
repnz
dec
adc
sub
daa
push
sub
push
push
inc
movs
shr
lock
xor
(bad)
adc
std
xchg
mov
adc
das
sub
sbb
push
and
push
fdiv
cmp
pop
paddd
xor
and
add
enter
cmps
int3
pop
jno
daa
mov
inc
and
retf
(bad)
dec
add
cmc
movs
push
lods
push
mov
pop
lods
test
icebp
out
add
in
add
aam
add
enter
mov
add
stos
test
(bad)
(bad)
inc
mov
outs
add
adc
dec
ins
sub
sub
bound
pop
jle
pop
jno
pop
jle
aas
xor
sub
mov
fild
and
femms
test
repz
jg
pop
xor
imul
rcr
daa
xor
imul
cwde
jno
pop
inc
push
(bad)
movq
test
movs
dec
lods
push
outs
cvttps2pi
not
(bad)
jg
push
into
loope
push
mov
movs
mov
mov
(bad)
call
jg
sahf
mov
add
fwait
add
push
pop
pop
jo
dec
push
ja
or
mov
push
or
out
out
sub
movs
mov
into
dec
dec
cmp
arpl
out
lahf
loop
lock
call
cmp
jmp
push
out
ins
(bad)
ins
xor
sub
aas
pop
pop
and
xchg
fsin
push
imul
sbb
pop
push
mov
sub
(bad)
call
add
(bad)
cmps
in
loope
retf
fcmovnb
add
mov
add
pop
add
(bad)
(bad)
(bad)
call
pop
xchg
jo
pop
add
add
cmp
data16
inc
pop
jns
js
push
lods
cmp
mov
sbb
sub
pop
and
cs
call
call
inc
call
das
xor
cmps
test
mov
fbstp
pop
dec
cmp
popa
push
pusha
sub
xor
int
(bad)
sbb
jmp
sub
push
mov
mov
mov
push
mov
xchg
dec
popa
push
fistp
dec
jnp
mov
or
jg
pop
jle
cmp
push
fs
dec
add
sub
sub
(bad)
(bad)
(bad)
out
inc
jge
pop
inc
jl
add
dec
add
xor
inc
push
jno
imul
fnstcw
push
das
ins
adc
sub
or
and
pop
pop
outs
sub
push
sbb
pop
(bad)
stc
gs
push
ss
stc
(bad)
mov
jo
sbb
das
push
jae
cmp
sbb
sbb
adc
xor
xor
mov
pop
xchg
inc
mov
call
pop
dec
daa
inc
inc
bound
daa
call
add
inc
sbb
cmp
xor
mov
adc
xor
(bad)
jnp
add
adc
cs
das
leave
repz
lods
sub
(bad)
(bad)
mov
imul
(bad)
out
push
mov
push
idiv
xor
adc
(bad)
outs
pop
inc
xchg
cmp
xchg
call
push
xor
call
push
push
sub
sub
mov
push
mov
scas
adc
pop
pop
daa
sbb
xchg
add
(bad)
cld
pop
icebp
inc
sbb
or
jb
add
jo
cmp
ror
fldcw
out
push
push
pop
add
pop
adc
inc
inc
xor
and
jne
outs
out
sbb
sbb
sbb
clts
fst
sbb
inc
ds
push
dec
xlat
sbb
push
(bad)
sbb
and
push
ds
jne
(bad)
cmp
pop
es
call
imul
add
mov
mov
add
lods
clc
arpl
pop
sbb
or
xor
add
sub
mov
into
sahf
pop
call
dec
idiv
pop
xor
sub
(bad)
div
sbb
or
movs
push
and
push
and
or
pop
(bad)
push
jle
push
push
jbe
push
mov
add
ss
pop
inc
adc
inc
aas
call
dec
fistp
cmp
add
push
add
fwait
das
push
call
add
pop
pop
inc
call
pop
push
xor
(bad)
pop
and
imul
pop
pop
sbb
out
pop
in
stos
sbb
xor
mov
loop
jmp
add
leave
(bad)
shl
mov
movs
std
gs
add
cmp
test
(bad)
cmp
cmp
add
add
scas
push
dec
div
call
inc
setl
push
out
sbb
sbb
ja
inc
stos
out
and
xlat
push
(bad)
out
and
push
mov
imul
into
or
inc
mov
(bad)
sub
cmpxchg8b
pop
daa
rcr
aas
push
dec
ins
stos
pop
or
add
nop
cmps
repnz
pop
add
jno
xchg
jmp
xor
outs
sti
xchg
jmp
sub
scas
pop
or
sub
mov
sub
push
xor
pop
push
xchg
je
outs
xor
jno
push
mov
xor
call
call
test
outs
push
and
(bad)
push
pop
sbb
daa
xchg
push
imul
or
add
push
imul
cmp
inc
inc
movs
sub
cmps
rcr
add
push
lahf
out
cwde
fiadd
jo
xor
sbb
adc
dec
jns
(bad)
jnp
push
(bad)
jg
outs
inc
xchg
pop
push
retf
ret
shl
xchg
or
push
mov
sub
loopne
ds
sub
cs
div
dec
push
dec
push
inc
inc
mov
sub
xor
sbb
sbb
pop
cmp
loop
test
std
fist
cmp
imul
lds
in
jb
mov
pop
dec
fild
pop
push
xchg
push
mov
(bad)
seta
retf
add
test
lds
mov
jb
xchg
xor
jo
(bad)
jg
jne
mov
push
call
(bad)
cli
stc
stc
fbstp
aam
jmp
inc
xchg
inc
cmps
cmps
jle
jp
retf
(bad)
push
or
(bad)
push
dec
int
call
iret
iret
dec
int
call
sti
(bad)
call
cmp
lahf
scas
xor
jno
dec
cmp
sub
idiv
call
dec
pop
(bad)
push
mov
(bad)
(bad)
sub
push
and
sbb
mov
pop
pop
pop
cdq
or
(bad)
fisttp
out
pop
dec
lods
sbb
sub
jl
pop
call
data16
pop
push
icebp
pop
sub
test
or
xor
add
outs
push
xor
jge
(bad)
mov
retf
std
add
cld
cld
push
loop
fdivrp
js
jne
idiv
inc
inc
movs
sbb
ret
call
iret
sar
retf
retf
leave
es
enter
mov
push
into
push
movs
mov
call
cmp
(bad)
mov
cmp
push
out
pop
push
sub
movs
cli
sub
pop
and
(bad)
js
mov
push
and
and
(bad)
mov
es
cmp
imul
retf
add
inc
fucomip
jmp
inc
sub
loopne
inc
iret
add
push
mov
je
add
jae
mov
into
push
mov
inc
cmp
mov
sub
mov
lods
clc
mov
in
jmp
cmps
dec
aaa
jg
pop
inc
pop
sbb
pop
test
leave
add
vshufpd
leave
(bad)
mov
ja
mov
push
mov
push
or
nop
cmps
push
jb
xor
call
(bad)
pop
lods
out
test
pop
xor
pop
shr
pop
imul
push
pop
cmps
pop
(bad)
js
push
sbb
sar
and
daa
ds
cmp
sub
aad
push
or
mov
icebp
push
not
pop
pop
dec
lods
push
and
adc
add
push
mov
push
adc
repz
imul
(bad)
fsub
xlat
call
hlt
hlt
(bad)
clc
(bad)
sti
add
repnz
lock
sahf
inc
dec
inc
pop
movs
in
loop
ret
inc
mov
(bad)
mov
ret
push
mov
enter
retf
sar
into
sar
shr
jo
inc
fidivr
push
jb
or
sub
pop
mov
pop
pop
pop
inc
call
and
cs
cmps
js
out
sbb
xlat
jne
js
out
daa
cs
pop
mul
cmp
ins
in
in
repnz
repnz
pop
or
pop
pop
pop
js
movhps
pop
mov
(bad)
fistp
(bad)
popf
add
sbb
inc
ja
xchg
(bad)
pop
fist
div
push
xchg
fs
leave
test
cld
out
(bad)
out
in
jmp
loopne
mov
cmps
call
cmps
mov
mov
dec
movs
push
test
ret
or
into
adc
mov
lods
out
mov
(bad)
mov
sar
mov
push
mov
mov
dec
daa
push
push
mov
test
stos
sar
pop
pop
dec
push
pop
dec
(bad)
pop
scas
inc
(bad)
ss
and
push
mov
sbb
push
jecxz
lock
out
push
sbb
and
das
inc
or
or
mov
sub
or
pop
push
mov
fstp
add
stos
pop
push
cld
mov
test
push
xchg
add
adc
push
adc
pop
idiv
mov
jmp
out
xchg
(bad)
in
loop
jmp
stos
scas
int3
push
out
(bad)
retf
jbe
movs
pop
inc
sbb
mov
pop
mov
dec
inc
mov
sahf
inc
adc
(bad)
mov
push
ret
mov
push
mov
mov
mov
scas
xlat
mov
mov
ror
jae
mov
mov
dec
notrack
ins
jg
jne
(bad)
pop
aaa
cmp
jmp
es
ret
push
push
(bad)
iret
mov
xchg
push
neg
es
daa
int3
div
push
daa
cmp
ins
loop
or
loop
sub
idiv
push
pop
push
jmp
mov
arpl
pop
push
(bad)
add
xor
aas
jbe
cmp
or
or
and
xchg
out
call
fcmovu
aad
(bad)
xlat
jmp
(bad)
push
in
jmp
pop
add
jmp
in
scas
movs
cs
mov
xchg
retf
push
pop
mov
fwait
(bad)
call
jmp
enter
int3
test
outs
cmp
test
fsubr
ror
mov
(bad)
push
mov
dec
add
cmp
pop
out
mov
inc
popa
test
cmp
sub
arpl
pop
push
call
pmaxub
inc
push
in
inc
daa
pop
adc
mov
(bad)
ins
jmp
or
mov
lods
loop
jmp
inc
xlat
add
or
mov
adc
cld
push
dec
push
test
add
cs
(bad)
pop
mov
repz
idiv
ins
test
mov
push
ror
retf
scas
fcmovnu
(bad)
(bad)
ficom
jmp
jle
(bad)
mov
push
inc
dec
push
mov
repz
push
mov
sahf
cmc
and
dec
popf
inc
dec
fwait
dec
mov
sbb
jmp
mov
sar
pop
iret
stos
xlat
scas
(bad)
push
fcmovnb
(bad)
jle
ins
or
daa
push
jae
mov
lahf
sub
and
arpl
dec
test
stc
loop
push
xor
daa
daa
xchg
(bad)
sub
call
daa
sbb
sti
mul
aas
inc
ds
test
dec
and
jmp
das
ins
pop
pop
inc
pop
add
pop
sub
out
inc
cld
(bad)
call
mov
add
jnp
pop
mov
jo
jo
mov
mov
sar
retf
enter
sar
iret
push
and
mov
lahf
dec
pop
pop
lahf
out
ins
daa
sahf
ss
popf
pushf
push
dec
fwait
dec
mov
pop
call
call
cmps
mov
mov
movs
aam
std
cmp
test
fadd
(bad)
mov
pusha
mov
jb
xchg
out
mul
sub
(bad)
pusha
dec
pop
bound
(bad)
cmp
jmp
xchg
pop
out
push
iret
pop
mov
cs
pop
push
push
sbb
inc
dec
inc
outs
jmp
sub
inc
or
pop
imul
(bad)
test
pop
aaa
cmp
push
cmps
psubw
inc
xor
loop
fiadd
je
dec
add
adc
push
and
movs
cmp
xchg
mov
stos
push
mov
push
mov
adc
mov
(bad)
mov
dec
(bad)
popf
inc
jle
xor
dec
dec
sahf
dec
jge
int
dec
popf
dec
pushf
dec
call
into
ss
push
dec
cdq
ss
popf
pop
dec
mov
mov
aad
pop
test
mov
pop
div
ret
call
or
fwait
adc
jae
ss
adc
inc
je
inc
add
arpl
popa
call
cmp
adc
cs
dec
xchg
mov
push
daa
sbb
daa
pop
push
dec
mov
inc
inc
inc
inc
ins
rcl
ror
test
nop
stos
add
add
call
jmp
out
jo
dec
add
sbb
pop
dec
cmp
add
stos
movs
or
stos
mov
push
test
sbb
bound
outs
sub
xchg
lahf
(bad)
call
push
scas
fwait
dec
fwait
sar
out
mov
call
push
call
push
sahf
push
call
push
popf
sbb
pushf
push
call
ds
dec
popf
pop
jmp
fs
cmps
push
imul
js
les
aam
mov
adc
mov
div
mov
(bad)
ds
pop
aad
xchg
xor
inc
dec
jle
pop
icebp
cmp
gs
(bad)
bound
pop
mov
cmp
and
push
and
loop
mul
push
sub
cmc
mov
fiadd
(bad)
sbb
mov
idiv
add
lods
and
dec
add
inc
pop
pop
(bad)
call
test
out
loopne
mov
sbb
fstp
or
cmp
jae
stc
mov
mov
mov
cmps
mov
push
mov
xchg
jmp
(bad)
jmp
ja
imul
pop
sahf
push
ss
call
push
push
xchg
repz
fwait
mov
xchg
dec
nop
ss
dec
dec
mov
mov
cdq
ss
scas
xchg
cmps
(bad)
mov
int3
mov
xor
jmp
aad
test
out
sar
shr
(bad)
mov
call
xchg
cmp
pop
inc
jmp
dec
aaa
mov
pop
push
push
pusha
pop
cmp
das
ds
cmp
and
jne
neg
neg
sub
nop
jmp
fidiv
or
pop
setb
add
aad
outs
call
mov
lahf
in
bnd
add
sbb
shr
inc
je
pop
inc
jno
add
jecxz
neg
push
fwait
xchg
push
sbb
or
pop
add
call
sbb
es
retf
mov
sub
outs
ds
sahf
pop
(bad)
cwde
mov
adc
nop
test
(bad)
dec
mov
dec
push
es
mov
xlat
push
sub
mov
scas
out
sar
(bad)
data16
int
mov
mov
iret
stos
mov
idiv
xor
add
out
imul
push
dec
(bad)
arpl
icebp
mov
dec
cmp
jmp
sub
and
ret
aaa
and
push
jmp
sub
in
cli
sysret
cmovne
outs
icebp
add
test
dec
imul
daa
stos
mov
aaa
iret
scas
bound
sub
mov
add
push
add
sbb
jne
pop
icebp
or
es
ins
xor
fwait
jge
call
cwde
ds
pop
not
mov
xchg
xchg
mov
mov
add
(bad)
call
stos
stos
push
mov
mov
mov
call
(bad)
dec
push
dec
push
pop
sub
dec
push
mov
jns
(bad)
(bad)
stos
out
(bad)
cmps
sar
out
into
mov
out
retf
scas
mov
add
ret
(bad)
mov
mov
iret
inc
imul
pop
cmp
cmps
ss
test
xor
jmp
push
push
inc
sub
popa
push
(bad)
das
adc
push
and
and
out
cmp
fmul
mov
fbld
dec
dec
dec
outs
repz
std
or
inc
adc
jmp
push
cmp
add
sbb
mov
add
and
loopne
outs
out
cmp
xchg
inc
add
and
inc
pop
inc
jae
ja
jmp
test
nop
mov
xchg
mov
xchg
xchg
mov
in
(bad)
cmp
mov
(bad)
jnp
jbe
push
mov
int
das
fwait
dec
nop
dec
push
nop
dec
call
nop
pop
clc
mov
nop
pusha
xchg
ds
cmp
cdq
and
test
mov
mov
out
lods
mov
add
loopne
out
mov
push
pop
mov
jbe
mov
ret
ret
retf
in
mov
iret
int
cmp
jb
pop
(bad)
scas
cli
inc
cmp
dec
outs
push
push
call
dec
(bad)
cmp
mov
push
sub
call
sub
push
out
(bad)
adc
push
sbb
shr
pop
(bad)
mov
pop
aas
test
(bad)
xor
dec
call
adc
lahf
push
add
and
pop
out
cmps
(bad)
(bad)
jno
mov
sahf
xchg
call
sar
cdq
xchg
call
xchg
mov
mov
call
call
sbb
scas
mov
push
push
push
sahf
addr16
aas
repz
push
popa
xchg
push
cs
cmps
test
add
loop
jge
mov
punpckhwd
sar
fwait
les
retf
push
jg
mov
rcl
jb
jl
dec
adc
push
push
imul
fstp
dec
pop
push
dec
dec
pop
cmp
jmp
pop
sub
mul
add
push
pop
das
push
sti
pop
loope
out
test
pop
push
mov
or
dec
pop
inc
out
push
adc
rol
rcl
mov
fld
imul
mov
pop
jmp
aad
mov
jmp
ds
push
pop
sub
xchg
xchg
mov
xchg
xchg
mov
(bad)
xchg
push
jno
sub
data16
push
pop
test
xchg
pop
(bad)
jns
outs
push
jg
(bad)
push
out
jne
(bad)
push
scas
js
push
gs
jnp
lods
jecxz
mov
xchg
stos
jge
movs
xchg
(bad)
jle
jl
dec
icebp
mov
mov
ret
jns
sbb
rol
test
dec
int
aad
enter
jno
jo
pop
push
jbe
rcl
sbb
inc
push
cmp
imul
jmp
repnz
xchg
sub
jmp
xor
sub
es
jmp
dec
dec
sbb
pop
enter
or
cs
pop
dec
push
(bad)
mov
lods
add
or
in
das
add
adc
dec
mov
out
jmp
mov
dec
test
lods
scas
cmps
jmp
call
dec
popf
sahf
xchg
call
clc
not
cmp
hlt
js
xchg
scas
mov
pusha
inc
push
cmp
sbb
pop
ja
sbb
xchg
mov
pop
movs
ss
scas
jg
push
cld
outs
mov
xchg
inc
mov
iret
rol
ret
bnd
sar
enter
retf
shr
rcr
push
out
cmps
dec
fisub
pop
push
jbe
xor
loopne
add
jb
dec
dec
imul
(bad)
imul
mov
aas
(bad)
sub
sahf
aad
(bad)
and
test
js
(bad)
mov
add
push
pop
cmp
adc
shrd
out
mov
or
call
cld
lahf
add
jecxz
fld
outs
xchg
cmp
mov
sbb
pop
dec
jne
push
(bad)
mov
mov
sar
mov
stos
cld
sar
jmp
lods
movs
jmp
stos
push
movs
mov
cmp
cmp
(bad)
jno
inc
(bad)
mov
inc
je
ficom
mov
push
inc
adc
inc
jno
scas
lods
pop
icebp
ss
mov
sahf
mov
xchg
in
jmp
mov
or
push
int
adc
enter
inc
jne
xor
repnz
jbe
xchg
aas
push
lods
adc
ins
push
imul
loop
dec
jmp
inc
xor
aad
cs
sub
jns
js
(bad)
jmp
and
femms
call
add
sysret
or
stos
pop
dec
push
lds
(bad)
cld
fwait
xchg
add
in
ficom
adc
add
pop
lahf
inc
imul
rol
int
mov
mov
mov
(bad)
and
mov
dec
pop
jne
aaa
dec
scas
push
xchg
stos
ja
les
outs
adc
push
inc
or
mov
mov
data16
cmps
mov
mov
xchg
add
leave
ret
mov
mov
(bad)
cs
inc
mov
cs
mov
jg
and
pop
inc
popa
ss
inc
xor
js
dec
pop
cmp
push
pop
dec
jmp
push
dec
sub
sub
push
cld
aad
daa
push
daa
sub
jle
xlat
pop
pop
sub
sub
inc
dec
dec
dec
outs
idiv
lds
fs
pop
or
ds
inc
not
mov
sub
push
jmp
mov
and
pop
sbb
dec
rcr
rol
iret
push
jle
clc
leave
dec
ror
out
les
(bad)
into
mov
iret
enter
ror
lods
clc
popf
jp
int
xchg
cs
test
call
aam
repz
ss
call
mov
cmp
sbb
shl
mov
test
(bad)
cmps
mov
mov
mov
(bad)
mov
lds
test
mul
mov
in
mov
sahf
punpckhbw
xor
jbe
cmp
cld
mov
push
cmp
pop
imul
ror
push
dec
push
addr16
call
jmp
sub
mov
cvttps2pi
imul
mov
and
jo
cs
pop
lods
push
sub
or
lods
test
mov
inc
inc
push
(bad)
jmp
jecxz
mov
or
xrelease
pop
dec
pop
dec
dec
inc
xor
(bad)
(bad)
into
(bad)
inc
xlat
rol
into
mov
aad
int3
sbb
rcr
push
sahf
(bad)
sti
stos
lds
rcr
sbb
dec
jae
mov
mov
push
js
das
mov
push
out
out
mov
nop
jnp
rol
stos
lods
dec
(bad)
scas
scas
out
int
mov
(bad)
mov
mov
ror
mov
cs
push
inc
mov
jae
cmps
xchg
pop
xor
adc
(bad)
data16
(bad)
js
dec
cmp
mov
push
push
jb
outs
imul
push
and
in
jmp
add
push
daa
push
and
mov
dec
jo
adc
lds
das
test
imul
add
sub
out
jmp
push
das
in
icebp
out
mov
xor
pop
push
pop
lock
imul
push
fnop
push
(bad)
cmps
push
ror
push
(bad)
pop
mov
mov
nop
xchg
xchg
jmp
mov
fnstsw
movs
mov
jmp
aad
stos
mov
(bad)
test
xchg
cmp
loop
outs
jne
mov
mov
mov
ja
repz
scas
mov
jo
lock
int3
mov
mov
jo
dec
pop
sub
jno
sub
jno
push
div
imul
outs
outs
push
inc
xor
adc
out
bound
out
cmc
push
es
pop
push
push
out
out
and
push
push
push
jno
adc
repnz
pop
or
out
mov
add
repnz
jae
fcos
xchg
lods
push
pusha
sbb
push
js
pop
push
ja
pop
(bad)
dec
ins
retf
call
fcmovbe
into
push
cli
int
mov
ret
retf
mov
xchg
fwait
mov
mov
mov
cmps
mov
jmp
(bad)
movs
mov
cs
repz
push
mov
call
mov
sbb
(bad)
lahf
push
mov
xchg
repnz
test
leave
scas
int
pop
shl
dec
outs
push
mov
pop
cld
lds
sub
jle
dec
(bad)
jns
pop
aaa
fwait
adc
ins
jb
dec
dec
dec
xchg
push
push
(bad)
(bad)
sub
sub
cs
loop
push
xchg
and
sub
and
call
dec
(bad)
adc
imul
pop
pop
pop
push
neg
pop
push
push
mov
push
rol
(bad)
aas
repz
add
sbb
push
jp
push
(bad)
and
xchg
add
mov
rcr
push
arpl
ror
pop
iret
int3
push
data16
(bad)
popf
mov
(bad)
pop
push
(bad)
es
dec
(bad)
scas
ins
xlat
jl
inc
mov
jbe
fwait
mov
push
jl
sbb
lds
mov
retf
push
jno
movs
sbb
js
inc
dec
jno
bound
jmp
(bad)
jp
push
mov
inc
(bad)
xor
jmp
es
push
pop
sub
es
pop
push
cs
movs
cmps
pop
das
daa
outs
inc
push
push
push
push
jno
pop
pop
push
test
pop
add
out
or
or
stos
add
(bad)
inc
scas
cmc
div
add
cmp
js
ss
int
pop
ja
jb
test
sub
push
out
test
loopne
not
iret
retf
lds
cs
mov
call
xchg
push
data16
scas
xchg
push
in
scas
mov
mov
fidiv
xchg
scas
pushf
fidiv
outs
jno
es
mov
out
fucomi
sar
rcr
iret
(bad)
pushf
sahf
enter
pop
dec
jg
inc
(bad)
mov
arpl
mov
xchg
cmp
pop
cmp
jle
xchg
lds
dec
outs
dec
jo
jmp
jle
dec
dec
push
sub
test
sub
and
and
pop
nop
push
jno
adc
and
push
(bad)
out
push
iret
(bad)
(bad)
imul
xchg
ds
push
ret
ret
mov
push
mov
adc
inc
push
fdivr
loop
jns
push
(bad)
rcl
icebp
add
out
retf
pop
(bad)
(bad)
retf
stos
mov
ss
ret
add
test
jmp
call
nop
jns
jne
ins
test
js
scas
(bad)
in
mov
push
scas
cmps
mov
push
mov
mov
xchg
push
into
les
pop
cs
test
sahf
mov
xchg
lds
pop
xor
(bad)
imul
(bad)
jle
push
jnp
dec
dec
stos
mov
(bad)
out
icebp
inc
repz
sub
push
pop
jl
loope
test
and
and
(bad)
(bad)
adc
loop
pop
or
xor
addr16
rcl
add
repz
out
add
(bad)
xor
test
imul
push
mov
int3
call
fmul
aad
xlat
out
push
retf
retf
test
(bad)
dec
jbe
mov
dec
(bad)
fcmovu
(bad)
in
out
out
jmp
call
(bad)
mov
xchg
fwait
mov
push
mov
cwde
push
cmps
lahf
mov
xchg
xchg
data16
mov
ret
jmp
das
call
int3
cmps
cmps
call
ror
cmp
xchg
mov
je
js
jns
scas
les
test
lds
(bad)
dec
jns
dec
dec
shl
scas
(bad)
inc
xor
popa
mov
dec
out
sub
xchg
ins
push
sub
push
and
loop
sbb
setno
pop
sbb
push
test
aad
sub
inc
idiv
repz
ror
pop
test
in
add
inc
jno
fwait
test
loop
xlat
aam
(bad)
sar
out
mov
(bad)
out
test
sub
push
in
out
out
clc
lahf
std
mov
jmp
loop
outs
dec
mov
scas
jmp
ins
mov
xchg
mov
jge
rol
scas
mov
mov
push
lds
into
mov
call
retf
mov
ins
es
outs
jle
ja
cmps
cli
mov
ss
test
push
stos
(bad)
jo
call
outs
cs
push
push
push
inc
inc
jmp
xor
test
jbe
cmp
cmp
ss
cvtps2pi
mov
pop
pop
jb
mov
push
out
daa
not
out
call
push
jb
outs
mov
sub
out
cmp
inc
cwde
lods
add
daa
inc
pop
jp
jns
or
mov
div
stos
push
fdiv
test
dec
sahf
enter
inc
push
call
(bad)
(bad)
out
idiv
pop
inc
aad
inc
es
fistp
inc
jne
mov
fiadd
cmps
xchg
fldcw
xchg
pushf
xchg
inc
out
mov
mov
push
mov
mov
into
mov
cmp
push
iret
mov
into
stos
jmp
xor
loope
dec
cmp
push
jp
gs
push
cmps
mov
push
dec
outs
ret
sub
imul
push
xchg
add
pop
push
push
(bad)
aaa
(bad)
call
push
mul
imul
push
(bad)
push
dec
push
jle
dec
dec
es
dec
(bad)
clc
or
push
push
push
sbb
int3
adc
lea
push
mov
pop
sbb
sub
cli
sti
clc
add
pusha
cmp
mov
inc
inc
pop
inc
pop
mov
outs
popf
dec
jb
mov
rcl
push
rcl
push
add
leave
int3
out
outs
jecxz
or
retf
add
xlat
fcomp
sbb
clc
out
cmc
cmc
div
cld
push
icebp
lock
jg
je
fdivrp
enter
stos
cmps
mov
ins
ss
cmps
xchg
xchg
cdq
xchg
sahf
xchg
mov
dec
ds
scas
push
mov
mov
mov
mov
shl
stos
mul
cs
mov
mov
inc
push
and
pop
cmp
dec
inc
jae
push
addr16
push
(bad)
imul
sub
add
pop
sub
push
sub
push
pop
inc
mulps
dec
inc
call
pop
pxor
push
clc
not
and
pop
pop
pop
pop
jae
push
xlat
jne
(bad)
sysret
adc
ds
dec
lods
push
jno
xlat
add
daa
in
out
mov
add
add
jp
icebp
fstp
pop
jns
ja
adc
jbe
(bad)
test
bound
lds
add
into
ror
add
test
(bad)
stc
cli
cli
(bad)
jmp
out
out
or
pop
fcomp
(bad)
(bad)
mov
stos
test
pop
push
or
dec
xchg
(bad)
xchg
cmp
fwait
xchg
fwait
xchg
lahf
cwde
movs
popf
xchg
mov
push
mov
mov
mov
cdq
into
mov
mov
or
mov
movs
push
jp
inc
push
push
inc
call
je
ja
push
mov
(bad)
push
jmp
push
(bad)
out
loop
cmp
xor
sub
sub
jno
das
ins
sysret
dec
dec
inc
neg
cmp
(bad)
call
jmp
pop
not
lds
mul
pop
pop
iret
add
push
push
out
dec
add
jle
inc
in
cld
sub
ret
nop
add
pop
or
out
je
mov
mov
int3
data16
pop
pop
test
push
cmc
outs
add
out
call
fdivr
sar
sbb
in
stc
jmp
lods
dec
fld
mov
test
call
out
xchg
cwde
xchg
fwait
xchg
mov
call
lods
xchg
es
push
mov
sub
mov
pop
je
pop
ja
mov
das
xor
(bad)
ja
inc
jl
dec
jb
(bad)
outs
push
push
test
int
push
push
jmp
cmp
sub
add
(bad)
(bad)
sub
cmc
int
ror
sahf
popa
pop
call
cmc
cmp
push
daa
push
pop
cs
fstp
xor
pop
jmp
inc
jmp
pop
jmp
ret
(bad)
cld
aas
lds
add
pushf
inc
cmp
stc
xor
adc
pop
pop
ficomp
adc
popf
push
test
out
pop
sub
mov
aad
jmp
fimul
jmp
clc
movlhps
repz
test
enter
mov
push
(bad)
aad
into
mov
aad
call
xchg
call
test
stos
push
scas
test
mov
xchg
sub
push
cdq
jmp
sbb
push
jnp
sub
dec
xchg
jge
push
xor
shr
push
jb
add
(bad)
sub
add
mov
dec
push
xchg
aas
ss
cld
push
lods
inc
ud0
push
jo
cli
cli
pop
push
pop
cwde
pop
test
pop
jmp
nop
xchg
add
and
pop
mov
xchg
(bad)
mov
pop
cld
cmps
xchg
out
pop
jno
mov
popa
sub
iret
into
add
cs
imul
aas
and
xor
cmc
call
inc
jmp
das
mov
cmps
mov
or
push
mov
ins
aad
sahf
out
cmps
mov
dec
lods
arpl
in
pusha
daa
pop
pop
ja
push
jnp
lods
cmc
add
data16
inc
(bad)
jl
idiv
jo
sub
das
(bad)
outs
push
push
jmp
push
inc
jl
push
popf
sub
dec
push
dec
xchg
je
xor
push
inc
pop
xor
call
adc
aam
pushf
adc
push
pop
push
jmp
(bad)
mov
lds
xchg
mov
pop
(bad)
int
mov
out
int
call
inc
xor
out
(bad)
mov
(bad)
div
push
loop
mov
(bad)
(bad)
int3
mov
jmp
or
call
push
mov
mul
mov
mov
or
js
cmp
mov
pop
xchg
inc
push
adc
cld
adc
push
cmp
test
dec
(bad)
jg
dec
(bad)
jp
push
mov
shl
ins
push
dec
adc
inc
icebp
sub
pop
(bad)
(bad)
sub
scas
mov
cmp
mov
push
and
pop
lds
push
pop
push
jb
adc
movs
push
pop
pop
pop
(bad)
cpuid
rol
sub
sub
push
mov
mov
mov
pop
fwait
cmp
push
pop
jne
adc
es
push
fld
mov
jmp
and
push
idiv
sbb
ja
jno
cld
out
fisub
sar
pop
scas
or
cmps
mov
push
pushf
sahf
call
icebp
test
pop
jae
popa
jns
inc
and
jl
inc
push
xchg
scas
push
pop
jle
inc
idiv
dec
neg
push
mov
jae
js
push
jbe
call
mov
ins
push
inc
inc
(bad)
xor
mov
test
inc
inc
call
dec
ins
push
lea
push
jne
sub
adc
cmpxchg8b
inc
cs
push
aad
pop
dec
add
pop
jae
repnz
mov
push
(bad)
jnp
add
ja
jno
call
(bad)
out
jo
dec
ins
add
cmc
into
out
cmps
mov
(bad)
(bad)
ss
test
stos
(bad)
(bad)
shl
pop
inc
push
adc
stos
push
popf
cli
push
push
movs
jmp
out
mov
mov
mov
jp
cs
or
lods
jno
out
test
idiv
dec
scas
les
idiv
jbe
jae
push
add
imul
loope
(bad)
push
xor
sub
xchg
pop
out
js
inc
dec
mov
push
pop
push
cli
cmp
pop
push
push
jmp
mov
and
stos
mov
out
hlt
xor
jle
ret
call
lds
sub
cmp
inc
mov
(bad)
jne
loop
fisub
mov
aam
(bad)
jmp
push
stc
clc
clc
idiv
out
imul
mov
push
aaa
push
fisttp
push
(bad)
out
pusha
jae
and
(bad)
jbe
mov
jl
scas
fcomp
xchg
dec
dec
and
dec
js
pop
jge
xor
(bad)
fs
(bad)
jmp
das
aaa
lods
push
xchg
test
push
pop
push
push
jecxz
sbb
push
cs
(bad)
call
ret
or
add
or
push
sub
lods
sbb
jg
aaa
test
mov
push
addr16
in
cwde
push
pop
jl
mov
repz
jp
xchg
pushf
sub
stos
push
mov
call
inc
add
(bad)
aam
push
retf
or
push
mov
call
jmp
out
adc
mov
push
push
loop
inc
dec
inc
xor
xchg
jbe
lahf
out
repz
(bad)
jp
jo
imul
adc
sbb
push
pop
or
dec
jmp
add
cmp
(bad)
push
mov
dec
mul
mov
je
fild
mov
adc
add
out
daa
imul
or
jbe
mov
ins
push
popa
jae
jno
jae
jne
fpatan
lods
fisub
jnp
imul
dec
dec
push
hlt
pop
push
cmp
xchg
dec
sub
test
pop
push
or
push
loopne
push
(bad)
push
(bad)
gs
movs
pop
mov
sub
(bad)
dec
rol
push
push
bsf
push
push
xchg
test
loopne
add
invd
lods
fs
or
add
sub
mov
fwait
cmps
push
and
push
pop
and
int
mov
addr16
dec
pop
popa
lds
push
push
xor
adc
push
push
jmp
dec
sub
sub
or
dec
dec
ds
push
fdiv
call
jbe
imul
aam
jmp
test
inc
dec
or
mov
movs
(bad)
mov
(bad)
mov
(bad)
xchg
add
push
pop
push
test
push
xor
sbb
dec
not
dec
div
jecxz
bound
out
scas
push
imul
push
push
push
push
or
push
loope
inc
cmp
pop
sub
push
mov
(bad)
cmp
dec
push
dec
cs
push
mul
push
jmp
test
add
adc
shld
add
push
adc
cli
jmp
outs
ret
add
pop
test
pop
push
xor
or
je
sub
jno
push
(bad)
jno
fld
arpl
inc
inc
add
push
(bad)
(bad)
out
not
(bad)
out
sub
test
out
imul
(bad)
pop
jb
adc
pop
lea
lods
sub
pop
aam
movs
push
idiv
add
add
xor
mov
test
jle
pop
sub
xor
cmps
dec
inc
xor
dec
sub
or
test
jo
pop
pop
call
push
xor
sub
test
dec
dec
dec
pop
outs
loopne
fadd
pop
pusha
pop
out
pop
pop
sub
pop
jae
test
push
adc
dec
enter
add
iret
jmp
inc
push
pushf
aas
sbb
push
fdiv
dec
push
in
pop
push
cmp
jbe
shl
add
jbe
ins
not
addr16
ds
aaa
mul
adc
dec
inc
js
jo
pop
cs
and
call
loop
adc
pop
add
test
stos
dec
push
or
or
scas
(bad)
leave
xchg
add
lods
popa
pop
jno
push
pop
mov
inc
adc
mov
jp
call
js
add
push
in
shl
(bad)
push
push
inc
test
or
sub
sub
cs
push
adc
add
ret
arpl
call
mov
and
push
pop
test
call
stos
xchg
pop
xor
pop
jmp
jg
inc
daa
mov
xchg
sub
jae
push
mov
xor
push
adc
fimul
dec
out
cmp
add
jo
test
inc
js
imul
in
(bad)
aas
sub
sub
rcl
popa
out
out
popa
pop
pop
inc
mov
push
jmp
push
(bad)
xor
push
mov
out
inc
jmp
scas
out
das
test
imul
sub
add
inc
repz
enter
lds
adc
adc
pop
jb
xor
daa
sub
je
out
test
jbe
dec
not
pushf
mov
(bad)
addr16
loop
pop
out
bound
cs
dec
loope
sub
das
es
mov
sub
mov
not
call
dec
add
push
or
call
jle
lahf
cmps
push
pcmpeqd
sbb
das
xor
fimul
les
out
pop
mov
push
out
push
mul
clc
push
cld
push
popa
popa
dec
(bad)
aas
cs
fild
or
femms
out
push
ds
cmp
or
cmp
dec
inc
call
pop
out
shr
xchg
aas
jmp
sub
out
test
or
pop
nop
cmp
xor
mov
movs
sysret
sub
inc
lds
or
pop
add
fnsave
pop
in
push
aaa
not
les
div
div
ja
pop
sbb
outs
dec
fdivrp
lods
lock
or
push
push
push
(bad)
cmp
aas
ss
sub
ret
jp
jns
cmp
aam
mov
push
sub
xchg
pop
cmps
pop
jmp
maskmovq
test
dec
stos
sbb
pop
stos
sysret
mov
cmps
push
or
adc
(bad)
js
sub
inc
inc
adc
outs
jb
mov
bound
jp
lds
push
jmp
dec
and
popa
pusha
dec
inc
das
test
es
fwait
cwde
test
push
push
outs
dec
pop
ins
gs
idiv
adc
popa
test
div
sub
or
daa
xchg
mov
push
and
loopne
pop
mov
scas
pop
push
jp
pop
mov
push
pop
xor
inc
shr
mov
fild
stos
mov
div
ins
imul
mul
xchg
inc
gs
(bad)
cmp
es
into
bswap
gs
(bad)
push
imul
push
push
push
dec
aad
iret
pusha
push
dec
stos
aas
out
pop
sub
add
xchg
push
xchg
bsr
push
inc
add
movs
dec
add
push
pop
adc
(bad)
xor
imul
fidivr
ficom
jmp
mov
mul
stos
call
push
pusha
(bad)
call
sub
call
pop
add
xchg
xchg
xchg
push
push
xchg
jmp
popa
xchg
sub
push
aas
mov
test
push
dec
jo
sub
pop
dec
sub
sbb
lds
push
neg
pop
inc
ud0
les
add
sti
push
(bad)
mov
xchg
inc
aas
test
je
dec
dec
stos
cmps
push
stos
test
test
ins
mov
push
data16
dec
cld
push
sub
jne
push
mul
and
cld
(bad)
push
inc
into
jbe
popf
push
mul
inc
inc
and
sub
xlat
(bad)
call
aam
pop
pop
mov
inc
jns
jmp
add
retf
cwde
fwait
cmp
jle
push
(bad)
fadd
les
(bad)
stc
mov
nop
out
cli
lds
inc
jg
push
jl
dec
jl
mov
xlat
imul
addr16
jmp
dec
jmp
fidivr
dec
xor
psrad
add
push
pop
dec
test
jno
jb
out
test
mov
(bad)
fild
pop
aad
push
out
inc
push
mov
call
pop
enter
mov
outs
add
add
(bad)
in
xchg
mov
(bad)
pop
test
fs
inc
adc
ins
pusha
cmp
pushf
push
sub
div
(bad)
jns
xor
outs
xlat
push
mov
(bad)
mul
dec
test
mov
cmp
scas
imul
out
out
sub
push
(bad)
mov
xor
xchg
pop
test
push
push
pusha
jmp
push
lods
add
leave
pop
or
add
add
mul
lahf
in
inc
xchg
add
loopne
and
es
inc
mov
pop
(bad)
nop
and
dec
jbe
jmp
pushf
ds
ror
lods
scas
call
mov
mov
cdq
shl
mov
pop
(bad)
sti
push
jecxz
ds
xchg
xchg
jmp
scas
les
idiv
inc
push
sub
jo
outs
inc
into
gs
jne
(bad)
ins
(bad)
imul
fs
arpl
repnz
pop
dec
fisttp
mov
push
pop
push
call
pop
dec
push
lods
stos
push
jmp
add
pop
mov
dec
xchg
mov
mov
test
add
(bad)
fiadd
jle
mov
dec
sbb
scas
test
fcomi
push
ja
call
push
lods
pusha
daa
(bad)
stc
fidivr
dec
push
daa
lods
mov
mov
pop
inc
cmps
xchg
xor
xor
jb
fist
iret
out
jno
outs
dec
dec
push
push
ins
addr16
push
bound
pop
sub
in
pop
pop
cmp
xor
and
mov
mul
das
xor
pop
out
js
mov
jae
dec
daa
(bad)
jo
aam
adc
xlat
stos
fisttp
push
lahf
loop
xor
add
enter
ret
stos
stos
push
add
out
push
jmp
mov
xchg
outs
mov
jo
lea
mov
adc
les
mov
jne
mov
lds
(bad)
xchg
mov
cmp
push
mov
push
mov
call
scas
arpl
idiv
ds
stos
stos
pop
sahf
sbb
jo
adc
cmp
inc
test
fist
jne
dec
test
stos
push
dec
(bad)
mul
jmp
cmp
(bad)
(bad)
clc
adc
das
jmp
and
dec
mov
js
pusha
add
into
jl
push
ffreep
or
dec
call
push
pop
out
or
sub
call
mov
les
cld
dec
inc
ret
ret
mov
imul
push
inc
repnz
bound
pushf
fwait
cmp
aam
xchg
(bad)
mov
das
nop
mov
mov
lea
sahf
lds
add
push
push
(bad)
inc
ret
ins
(bad)
test
ds
cmp
mov
icebp
cmc
cdq
cwde
xor
sub
push
push
sbb
pop
pop
hlt
push
dec
(bad)
jno
adc
ss
push
ja
call
stos
lock
dec
test
sub
pop
js
gs
dec
dec
mov
push
dec
stos
arpl
mov
mov
push
mov
bound
xchg
mov
add
out
(bad)
call
(bad)
sub
out
sbb
mov
mov
xchg
mov
(bad)
jmp
mov
call
push
and
mov
in
mov
push
call
adc
push
adc
(bad)
jb
jnp
inc
ins
add
push
jbe
(bad)
jae
dec
lds
push
(bad)
push
out
jle
fs
dec
jmp
pop
pop
dec
(bad)
cmp
xor
div
(bad)
(bad)
fisttp
push
pop
push
call
nop
mov
xchg
xor
dec
dec
pusha
ss
(bad)
out
es
or
sbb
cs
test
pop
add
aam
pusha
pop
add
shr
or
cmp
xchg
out
call
jg
add
xor
(bad)
jle
inc
inc
mov
dec
repz
add
iret
out
dec
jmp
dec
cmp
popa
push
pop
pop
inc
aaa
cmp
xchg
mov
out
sub
imul
sub
ins
push
and
jbe
js
push
pop
popa
pusha
adc
out
(bad)
dec
mov
in
out
or
adc
daa
add
jmp
mov
add
jae
dec
pop
in
inc
inc
xor
xor
fisub
div
jp
push
ja
(bad)
jne
jno
push
outs
cmps
ret
fisubr
test
mul
sub
(bad)
(bad)
(bad)
inc
push
out
push
push
or
pop
div
lods
mov
jnp
push
pop
inc
loopne
(bad)
ins
repnz
test
or
add
push
add
and
outs
pop
out
mov
mov
jns
call
loope
dec
mov
push
lea
sbb
cmp
(bad)
cs
pop
mov
(bad)
movs
xchg
les
fisub
jne
test
cmp
push
aad
repz
mov
lahf
(bad)
(bad)
and
(bad)
sahf
inc
pop
adc
mov
fistp
pushf
aaa
daa
sahf
mov
(bad)
ds
pop
add
ds
cmp
(bad)
jg
push
push
loopne
jl
jns
imul
je
push
or
ins
dec
(bad)
dec
mov
imul
arpl
pop
scas
jmp
dec
jmp
(bad)
test
push
(bad)
lock
add
add
in
xor
push
orps
femms
inc
inc
inc
ins
in
add
push
scas
pop
sub
sub
stos
lods
add
pop
ret
jmp
mov
aaa
add
jbe
mov
ins
add
(bad)
movs
dec
pop
mov
outs
in
es
clc
repz
jmp
(bad)
pop
hlt
hlt
in
mov
enter
loopne
ret
jmp
cwde
lock
mov
mov
jecxz
(bad)
mov
cli
idiv
mov
push
test
push
jae
out
int3
leave
xchg
(bad)
fcom
lods
call
shr
shl
retf
out
out
loopne
xchg
nop
pop
pop
push
cmp
rol
pop
push
dec
jbe
(bad)
out
ins
inc
push
push
js
inc
push
push
pop
idiv
dec
test
bound
dec
(bad)
pop
add
pop
dec
dec
dec
push
jb
mov
pop
and
push
sahf
lds
cmp
inc
mov
loop
or
daa
and
test
int3
idiv
jmp
test
or
cdq
pop
push
push
idiv
mov
or
pop
push
(bad)
add
fisttp
js
shl
push
into
lds
fld
push
jge
push
and
(bad)
mov
pop
fcom
call
int3
popf
es
cmps
pop
jl
scas
test
retf
pop
aaa
mov
dec
cdq
xchg
div
repnz
ja
call
fdiv
call
into
movs
out
inc
jp
xchg
neg
pop
in
in
fistp
scas
inc
push
aaa
pop
(bad)
mov
mov
arpl
stos
out
cmp
dec
(bad)
fs
cmp
ins
inc
pop
xor
xor
inc
push
jno
outs
gs
fld
push
imul
dec
test
pusha
pop
pop
pop
dec
stos
(bad)
dec
(bad)
idiv
xor
scas
pop
rcpps
jp
mov
xchg
push
dec
adc
retf
push
push
call
push
add
push
ja
pop
adc
arpl
and
(bad)
daa
loope
adc
add
test
(bad)
ds
repz
stos
adc
push
mov
pop
adc
mov
into
lahf
xchg
jl
push
out
push
outs
pop
sub
push
xchg
jmp
mov
(bad)
xchg
retf
das
jbe
call
fcom
je
fnstcw
mov
and
jg
fimul
jecxz
mov
popa
call
movs
(bad)
in
mov
ret
xchg
xchg
stos
dec
ss
ins
stos
outs
pop
jbe
aas
imul
imul
mov
jb
push
outs
fs
mul
mov
jl
(bad)
mul
dec
jmp
dec
stos
repz
pop
pop
dec
dec
(bad)
xchg
mov
jmp
daa
outs
mov
in
pop
and
dec
mov
je
(bad)
jnp
add
idiv
test
push
dec
add
test
fist
jne
(bad)
sbb
adc
push
adc
shr
movs
popf
xor
aad
ja
bswap
jmp
in
jmp
mov
xlat
mov
xchg
sub
loope
jne
dec
xchg
call
fisttp
test
xor
mov
or
call
or
dec
pop
inc
xchg
div
lock
outs
push
js
jmp
add
mov
lock
mov
xchg
jmp
inc
shl
mov
pop
add
sub
jnp
fdivr
stos
fld
jbe
inc
mul
push
inc
fs
aad
sub
addr16
add
arpl
popa
enter
(bad)
dec
and
mov
ret
dec
popa
xlat
xchg
inc
push
(bad)
nop
xchg
mov
or
neg
sub
out
dec
add
and
inc
xor
pop
(bad)
call
(bad)
lds
addr16
and
push
sub
xchg
aas
mov
ror
jbe
fist
pop
shl
out
out
mov
jmp
das
mov
call
setbe
pop
inc
cwde
mov
fsubr
cmps
data16
daa
xchg
mov
in
cmp
or
push
idiv
movs
pushf
xor
sahf
xchg
daa
call
mul
inc
mov
into
mov
mov
daa
aaa
pop
pop
lds
aaa
sub
imul
(bad)
jno
ins
arpl
out
stos
mul
pusha
inc
jmp
dec
dec
pop
dec
(bad)
imul
push
push
mov
aaa
adc
sub
(bad)
es
push
dec
lods
mov
sub
(bad)
(bad)
lods
mov
and
or
sub
inc
aad
mov
idiv
sub
test
inc
mov
lods
push
jbe
cmp
xchg
test
rcl
push
clc
pop
ficom
mov
push
fidivr
outs
jno
out
das
mov
push
mov
adc
mov
xchg
cmp
push
add
jmp
sar
sti
xchg
mov
ja
pop
fdivr
mov
inc
push
jno
inc
sub
adc
inc
jmp
pushf
push
neg
out
pop
push
pop
or
xchg
mov
(bad)
fadd
and
das
push
call
push
dec
push
dec
or
jp
ficom
out
mov
mov
daa
(bad)
jmp
or
or
sub
adc
out
mov
out
cmps
cmp
add
sbb
into
xchg
pop
test
or
into
or
lods
movs
inc
(bad)
add
ins
in
or
lahf
xchg
and
movs
cmps
sar
std
inc
lahf
xchg
and
mov
in
aad
js
xchg
and
das
pop
icebp
inc
push
dec
adc
cmp
jne
inc
repnz
mov
mul
mov
pop
inc
push
(bad)
(bad)
jno
sahf
push
out
pop
dec
dec
call
add
addps
(bad)
ss
xchg
out
push
es
sbb
inc
aaa
or
(bad)
jnp
dec
out
(bad)
scas
ss
(bad)
aas
inc
ds
fcmovnu
fisttp
or
out
xor
pop
mov
scas
rol
movs
aaa
mov
mov
aaa
xchg
dec
xchg
xchg
push
fnsave
cmp
imul
aas
out
arpl
call
pusha
(bad)
imul
pop
fs
dec
test
fiadd
pop
pop
inc
push
dec
pop
push
adc
xlat
inc
out
pop
cmc
cmps
lock
femms
mov
iret
push
or
ud1
aam
ror
out
add
or
arpl
add
and
aam
daa
das
in
mov
ja
add
mov
pop
leave
xchg
inc
pop
stos
outs
push
adc
out
fs
lods
jp
(bad)
outs
popa
ins
pusha
inc
out
pop
rol
inc
neg
inc
jmp
(bad)
xchg
bound
pop
pop
pop
pop
inc
stos
dec
femms
(bad)
push
inc
mov
sbb
push
test
sbb
fiadd
fistp
(bad)
loope
loopne
cmc
add
std
mov
pop
xchg
iret
iret
stos
pop
test
sbb
movs
mov
push
rol
sti
inc
xchg
mov
add
xchg
inc
adc
mul
pop
xor
mov
cmp
jo
mul
into
in
cmp
pop
inc
push
addr16
inc
neg
push
push
dec
xor
repnz
pop
pop
mov
call
adc
pop
(bad)
and
sub
iret
pop
xchg
push
push
popa
out
(bad)
sbb
push
into
and
dec
push
inc
mov
sbb
pop
das
mov
aaa
call
and
scas
push
add
mov
ret
xchg
pop
and
inc
std
call
xchg
ret
push
pushf
cs
xchg
and
sub
es
pop
push
or
inc
aas
stc
stos
cdq
mov
neg
out
push
data16
gs
arpl
pop
dec
aad
int
pop
pop
pop
inc
pop
(bad)
push
pop
sub
jnp
pop
pop
push
call
dec
or
push
mov
pop
out
and
lahf
add
xor
aad
aam
lock
pop
mov
popa
inc
cld
pop
jg
(bad)
mov
add
xchg
xchg
(bad)
int
inc
inc
mov
jnp
mov
jbe
pop
inc
test
pop
pop
cld
inc
adc
adc
push
dec
aaa
out
inc
mov
and
inc
push
out
pop
inc
imul
inc
out
fs
push
popa
pop
inc
call
jecxz
pop
sub
pop
push
out
stos
ins
pop
pop
push
ss
push
outs
xor
mov
sbb
push
jbe
push
sub
pop
sub
mov
cmp
cmp
ret
or
lods
ror
jmp
dec
and
sub
gs
cmp
mov
lods
mov
mov
dec
mov
nop
inc
mov
imul
daa
push
mov
stc
jg
aaa
sbb
arpl
jmp
inc
out
pop
inc
push
pop
pushf
mov
arpl
jmp
ins
mov
test
not
and
xchg
iret
cmovs
push
mov
push
and
pop
and
fbstp
out
cld
ja
fmul
pop
cmp
cmp
cmps
mov
cs
inc
(bad)
mov
fist
mov
call
pop
dec
push
add
retf
jg
inc
out
lods
add
in
jae
(bad)
out
pusha
xor
lahf
addr16
jno
sub
out
pop
addr16
pop
pop
inc
fdivr
outs
jno
test
pusha
push
pop
dec
mov
push
push
pop
push
inc
push
push
pop
mov
inc
data16
sub
inc
pop
mov
pop
pop
xchg
push
pop
out
out
xlat
sub
pop
div
sti
(bad)
and
push
push
push
add
xchg
or
mov
push
xchg
pop
fisttp
pusha
sub
add
call
sbb
inc
clts
mov
push
(bad)
(bad)
fisub
fstp
pop
test
xor
sub
pop
pop
imul
dec
mul
push
inc
push
neg
mov
aaa
pop
push
inc
out
(bad)
jle
idiv
push
inc
cvtps2pd
push
inc
pop
push
push
push
push
and
test
xlat
(bad)
aad
mov
xlat
out
lods
push
les
sti
sub
mov
inc
xchg
aas
add
out
inc
jmp
cmp
ret
inc
add
fild
test
int3
pushf
and
add
mov
aas
pop
ins
scas
bound
inc
push
fs
outs
arpl
cmp
mov
push
inc
pop
push
call
inc
test
imul
mov
(bad)
xor
neg
mov
les
mov
out
sbb
pop
xchg
mov
push
lods
lods
stos
push
fadd
and
bound
test
add
dec
int
repnz
add
push
dec
adc
aaa
out
inc
push
shl
push
pop
inc
not
jnp
cmp
into
push
inc
push
(bad)
lods
arpl
xchg
push
(bad)
pslld
(bad)
call
push
pop
mov
xlat
es
sub
pop
pop
mov
test
pushf
popf
fwait
add
push
xchg
jmp
add
dec
add
add
call
mov
push
pop
mov
pop
cmp
xchg
test
aas
out
pusha
push
push
pop
pop
push
inc
sub
push
retf
pop
out
push
push
inc
test
push
pop
pop
pop
inc
pop
pop
push
ds
call
pop
adc
out
maskmovq
mul
inc
nop
dec
adc
and
adc
scas
lods
push
loopne
out
mov
add
mov
mov
test
outs
nop
mov
out
stos
test
adc
neg
dec
cmp
jmp
dec
pop
push
inc
out
sub
sahf
cmps
inc
inc
inc
out
pop
push
mov
test
call
inc
(bad)
out
test
dec
(bad)
jns
retf
mul
mov
fcomip
sbb
ficom
sysret
push
sub
movs
popa
jmp
daa
push
mov
push
rol
cmps
adc
push
fwait
out
fisttp
adc
pop
outs
fstp
rcl
cmp
mov
call
jmp
and
lds
sub
inc
out
pop
push
pop
cld
jge
mov
pop
push
inc
push
daa
inc
pop
pop
push
inc
sbb
mov
adc
dec
inc
inc
sbb
neg
push
dec
sub
iret
(bad)
and
clc
push
jmp
ds
push
mov
(bad)
mov
push
imul
push
xlat
push
push
fadd
add
dec
inc
push
push
nop
cmp
sahf
cmps
jmp
pop
aaa
xor
ret
inc
xchg
inc
fisub
jp
iret
inc
inc
fiadd
out
out
mov
stos
mov
inc
inc
int3
add
pop
pop
xchg
mov
mov
pop
out
fbld
pop
push
(bad)
sbb
cmp
add
out
pop
sbb
cmp
sbb
or
daa
xchg
cmps
jge
dec
lahf
push
movs
call
pop
adc
sahf
adc
dec
inc
aaa
out
not
out
pop
dec
inc
push
test
pop
mov
xchg
mov
inc
inc
iret
pop
mov
push
push
inc
inc
inc
and
out
sbb
out
push
adc
outs
add
daa
and
and
cmps
movs
push
jecxz
mov
(bad)
call
ins
iret
out
inc
and
push
call
add
inc
sbb
push
inc
cmp
scas
dec
inc
dec
mov
mov
pop
ss
aas
out
inc
not
(bad)
pop
sysret
push
rcr
inc
dec
cmp
ss
push
push
(bad)
fcomp
stos
adc
pop
push
adc
xchg
ret
and
imul
jmp
test
add
add
add
mov
mov
jmp
fnstenv
push
add
ret
mov
out
rcl
fld
jmp
jmp
repz
in
loop
dec
inc
mov
pop
retf
mov
inc
add
fst
mov
test
jno
mov
push
pop
push
push
lods
xchg
loope
iret
fistp
out
bound
dec
dec
jb
jno
mov
sub
pop
iret
add
pop
inc
cmp
test
inc
test
add
cmp
push
pop
ss
add
jge
mov
push
add
pop
adc
test
ss
out
xchg
push
xor
cmp
mov
dec
test
fs
xchg
push
(bad)
outs
fwait
(bad)
jg
xchg
push
mov
movs
push
adc
cmps
xchg
adc
outs
add
jle
mov
(bad)
push
and
jns
xor
jae
inc
dec
inc
pop
pop
xchg
push
in
sub
push
push
push
pop
pop
mov
daa
dec
ud0
inc
sub
adc
out
sbb
inc
in
out
pop
push
fild
div
(bad)
sub
pusha
pop
add
mov
add
popa
inc
rol
sub
and
add
add
push
add
jbe
jmp
add
add
nop
jge
add
cs
aas
call
add
add
(bad)
lar
add
pushf
sub
stos
out
mov
xor
(bad)
(bad)
(bad)
jg
add
mov
xor
mov
cmp
shl
add
mov
jg
push
add
lds
add
push
adc
outs
(bad)
mov
das
cmp
push
mov
lahf
xor
jnp
mov
xor
mov
mov
cmps
mov
mov
jns
ss
(bad)
loop
cld
loop
std
xchg
or
aaa
xor
jmp
inc
jecxz
dec
inc
icebp
(bad)
ins
jno
sahf
std
pop
test
inc
push
push
cmpps
aaa
aaa
mov
(bad)
out
push
push
dec
jmp
add
div
not
push
sbb
in
push
adc
xor
or
aad
inc
add
inc
push
movs
lea
pop
add
(bad)
push
daa
push
pop
add
mov
das
dec
adc
sub
push
xchg
add
in
add
out
add
(bad)
(bad)
out
rol
loope
scas
add
fsubr
in
mov
add
(bad)
push
in
retf
pop
fxch
cdq
add
int3
xchg
add
shl
(bad)
fidivr
movs
add
fcmovnbe
sahf
add
les
add
rcr
ja
retf
add
mov
add
ret
(bad)
mov
(bad)
jnp
aam
mov
mov
rol
xchg
rcr
add
scas
push
out
(bad)
fstp
pop
rol
jg
enter
mov
sub
aaa
rol
ret
mov
cmps
jl
lahf
cdq
or
mov
(bad)
(bad)
(bad)
call
test
xchg
mov
sub
xchg
xchg
mov
jae
xor
cmp
fs
popa
push
mov
sahf
ins
pusha
push
scas
addr16
dec
mov
ss
push
loopne
cld
daa
call
das
xor
mov
pop
xlat
sbb
stc
push
adc
adc
inc
data16
push
js
jbe
lods
lods
outs
push
inc
pop
adc
fcomp
sub
inc
pop
pop
adc
pop
rol
xchg
iret
inc
mov
shr
sub
fild
cli
add
sti
clc
mov
cmc
add
test
div
jmp
icebp
loope
icebp
in
fiadd
in
xlat
add
(bad)
(bad)
in
call
fadd
call
rol
mov
fisttp
stos
add
(bad)
into
out
rol
(bad)
loope
mov
test
fmul
xchg
(bad)
aad
add
leave
lods
add
rol
add
ss
fstp
add
int3
leave
push
mov
push
mov
mov
in
clc
mov
inc
lds
mov
cmps
add
mov
mov
or
cmps
mov
add
xchg
mov
stos
mov
sub
nop
lock
pop
sbb
fwait
push
jbe
and
jae
push
pop
ins
push
fdivr
sub
xor
cmp
adc
fimul
push
push
push
push
push
add
fcom
std
ins
jno
add
(bad)
fwait
popf
call
or
cmpxchg
mov
ja
and
fdiv
pop
pop
test
aas
jno
mov
push
xchg
shr
pop
jb
push
inc
or
mov
dec
outs
pop
scas
inc
sbb
xchg
inc
(bad)
cwde
xchg
stc
jb
fld
test
stc
repz
add
jb
mov
push
clc
(bad)
(bad)
(bad)
lods
outs
add
repnz
add
jmp
in
fisttp
lock
inc
out
add
(bad)
aad
(bad)
xlat
add
(bad)
(bad)
(bad)
inc
lods
cmps
lahf
add
mov
stos
add
movs
mov
add
(bad)
jmp
add
mov
imul
dec
inc
add
inc
add
inc
add
out
clc
call
pop
add
push
add
outs
add
mov
add
mov
push
xor
add
add
cld
cmps
jne
pop
xchg
ud0
push
add
and
push
out
jp
cmp
mov
cmps
cmp
mov
and
out
daa
add
shr
outs
xor
push
repnz
add
pop
test
(bad)
ds
loope
ins
jecxz
(bad)
(bad)
jg
pop
add
add
(bad)
add
xlat
(bad)
add
add
mov
add
jmp
add
nop
mov
xchg
mov
popf
sahf
pushf
add
leave
enter
pop
cdq
int
retf
add
add
out
in
or
add
das
add
add
and
lods
pop
dec
add
sbb
aad
aaa
aas
iret
mov
mov
adc
add
cwde
push
movs
pop
mov
add
sub
aad
sub
and
fild
and
mov
jne
das
add
mov
ffreep
push
test
mov
iret
mov
mov
pop
xchg
inc
mov
out
lods
and
pop
pop
test
movs
sub
xchg
mov
pop
scas
inc
sub
pop
adc
pop
aaa
mov
mov
cmps
(bad)
pop
pop
pop
mov
sub
jb
scas
add
push
pop
stos
lahf
ja
aad
or
and
adc
mov
and
xlat
dec
sub
shr
adc
sbb
jmp
add
adc
cmps
test
add
aad
jo
xchg
push
xchg
mov
pusha
mov
ror
inc
push
mov
push
push
dec
add
and
pop
fild
ja
push
add
mov
push
sub
or
xlat
and
push
add
adc
out
ss
adc
out
or
pop
out
frstor
faddp
ret
sub
add
daa
xchg
sti
scas
xchg
add
xor
and
sbb
jg
pop
fcom
adc
add
loop
mov
(bad)
cld
pop
jnp
xchg
cli
ror
test
loop
cs
nop
adc
lds
mov
rol
jns
gs
jecxz
enter
out
loopne
daa
in
dec
mov
lods
adc
sbb
mov
mov
sbb
add
pop
mov
inc
mov
jb
or
sbb
push
sbb
add
add
mov
sbb
or
mov
je
inc
aas
add
inc
inc
fild
mov
inc
fist
pop
cmp
jae
pop
cmc
inc
std
pop
pop
repnz
psubd
popa
inc
in
inc
cmp
or
push
xchg
stos
aas
stc
and
ds
nop
add
rcr
repnz
sub
nop
xor
ins
add
cmp
inc
pop
(bad)
fbstp
add
add
daa
add
aas
add
sbb
add
pop
xchg
and
das
push
scas
(bad)
sub
pop
(bad)
ins
ss
inc
push
add
add
pop
imul
(bad)
add
sub
popa
jg
out
add
add
add
cmp
ins
add
call
ins
ss
cmp
add
and
stos
or
jmp
daa
push
test
dec
fwait
gs
or
pop
and
fwait
add
shl
in
ins
into
out
pop
sysret
add
fisttp
mov
add
mov
xchg
data16
ins
add
add
mov
cdq
int
jne
adc
mov
xor
ja
add
mov
cmp
xchg
sbb
inc
add
pop
and
add
loope
(bad)
(bad)
ffreep
mov
cmps
add
push
add
xor
and
das
and
das
push
inc
inc
inc
cmp
push
push
add
jnp
pop
add
bound
and
add
add
xlat
outs
or
ds
mov
add
pop
jmp
sbb
(bad)
dec
(bad)
clc
add
in
in
aam
retf
(bad)
inc
mov
stos
add
ins
mov
dec
jne
jne
ins
pop
stos
sub
sbb
fisttp
test
hlt
adc
adc
fsin
jmp
adc
and
cmp
add
push
add
push
pop
add
push
scas
cmp
pop
out
xlat
sbb
rcl
addr16
pusha
lahf
or
add
add
sub
aas
call
ss
mov
cld
(bad)
fiadd
leave
aad
add
lods
or
(bad)
std
(bad)
jg
pop
add
jns
mov
es
adc
and
inc
pop
adc
or
(bad)
(bad)
and
sbb
adc
dec
pop
cdq
scas
sub
add
shl
mov
add
pop
aas
jo
inc
inc
outs
jns
daa
mov
das
aas
add
lea
add
out
add
jmp
xor
int
mov
mov
popf
outs
xor
addr16
clc
call
cmp
sub
mul
pop
aas
add
xor
and
cwde
cld
(bad)
sub
in
jg
cmp
push
adc
out
push
and
jno
jo
in
add
and
out
lds
pop
(bad)
adc
add
out
or
cs
nop
jle
iret
data16
push
jmp
add
in
add
retf
stos
mov
jbe
imul
inc
jae
(bad)
sub
movs
popf
or
or
ds
cs
and
sub
and
cwde
(bad)
aas
pop
push
adc
jg
pop
push
sbb
push
(bad)
pusha
bound
mul
pop
sbb
daa
add
jmp
dec
mov
mov
pop
jno
scas
daa
cld
cld
sti
add
cmps
mov
cs
xlat
fst
add
(bad)
les
les
add
mov
es
push
push
cmp
inc
shl
adc
sbb
(bad)
cmp
packsswb
pop
jle
sbb
cs
cmp
(bad)
jg
jg
sahf
sahf
add
adc
xor
add
pop
scas
fcomip
outs
mov
fld
(bad)
iret
mov
mov
movs
data16
(bad)
inc
ins
mov
mov
push
jg
mov
sub
sbb
test
and
inc
inc
xor
js
es
sbb
inc
loope
mov
inc
aas
inc
(bad)
sbb
push
and
sbb
pop
(bad)
push
pop
dec
or
add
push
sbb
(bad)
lahf
(bad)
xchg
mov
add
cs
lock
push
(bad)
call
stos
add
mov
jp
imul
sub
(bad)
into
ret
in
push
sub
cmps
adc
add
pop
pop
inc
dec
fs
popa
ds
adc
dec
dec
ds
dec
push
mov
(bad)
push
inc
inc
(bad)
and
cs
push
inc
and
mov
xchg
xchg
xchg
or
adc
and
add
(bad)
(bad)
(bad)
jg
sbb
add
xor
add
cmp
jno
pop
add
cmp
inc
sub
push
xchg
xor
mov
cmp
xor
push
std
sub
rcl
shr
inc
dec
aas
test
jmp
push
pop
(bad)
push
push
inc
dec
aas
sbb
fwait
in
outs
call
arpl
cs
jl
mov
mov
call
add
shl
push
and
pop
push
(bad)
das
jo
les
outs
or
mov
dec
fisub
inc
inc
mov
and
push
imul
fcomip
xor
cmps
push
inc
sbb
das
sbb
sbb
jne
(bad)
scas
scas
scas
or
clc
clc
(bad)
pop
add
xor
lar
push
out
pop
mov
and
ja
cmp
(bad)
push
dec
int
or
(bad)
aaa
inc
push
and
pop
(bad)
mov
push
pop
cmps
xor
inc
out
mov
ins
or
or
fild
adc
das
xor
das
ins
push
or
imul
push
dec
xor
sub
aaa
mov
xor
mov
clc
(bad)
xor
ds
sbb
or
xchg
dec
(bad)
push
aaa
inc
dec
add
add
or
xor
pandn
es
inc
(bad)
aas
inc
jbe
(bad)
jp
data16
addr16
pop
(bad)
nop
dec
(bad)
cmps
mov
jmp
cli
xchg
inc
dec
ins
clts
outs
(bad)
loopne
add
fild
pop
adc
push
push
inc
(bad)
call
sub
sbb
mov
pop
outs
sbb
sbb
pop
inc
jl
loopne
out
mov
and
repnz
push
jg
pop
adc
add
aaa
add
aaa
jno
sub
push
push
fisttp
or
dec
sbb
outs
pop
call
(bad)
mov
dec
aam
dec
push
(bad)
adc
sub
(bad)
je
jae
or
dec
int
dec
(bad)
mov
mov
ins
xchg
pop
test
(bad)
xchg
pop
cs
push
jbe
(bad)
pop
pop
ds
sub
push
and
or
jecxz
call
and
mov
or
(bad)
push
mov
or
aas
pop
addr16
xchg
push
inc
push
pop
std
lahf
inc
sub
dec
jle
add
jae
fadd
scas
call
adc
dec
jg
adc
out
(bad)
(bad)
pop
test
inc
add
jae
jb
sar
sbb
inc
into
cmps
cmp
cld
int
call
adc
adc
xor
in
dec
pop
pop
dec
push
aaa
inc
sub
gs
lods
(bad)
jg
add
sbb
inc
push
adc
out
outs
icebp
cmp
jne
push
sahf
cmp
pminub
jb
fwait
inc
dec
dec
pop
cmp
jne
ret
(bad)
sbb
(bad)
in
in
jmp
push
(bad)
jmp
lods
push
inc
imul
jecxz
aaa
mov
push
sar
lds
sar
inc
and
cmp
mov
nop
imul
add
cmp
xor
inc
movs
push
retf
sbb
shl
sar
pop
call
push
push
out
aas
jo
dec
add
jne
sbb
(bad)
cmp
cmp
pop
(bad)
mov
jmp
(bad)
in
loope
scas
jl
inc
mov
or
push
sahf
mov
sahf
jne
stos
ret
stos
into
mov
(bad)
scas
fstp
cmp
pop
cmps
ret
add
aas
outs
clc
sub
cmp
fdivrp
pusha
push
aaa
cmp
push
add
jl
and
mov
or
and
and
rol
or
sub
(bad)
sbb
add
(bad)
jle
pop
add
adc
cmp
cmp
ja
mov
mov
(bad)
aad
sar
(bad)
scas
mov
dec
mov
dec
pop
dec
lahf
dec
popf
dec
pushf
dec
pop
jo
pop
sahf
inc
dec
xchg
jbe
jnp
movs
shl
into
dec
sahf
lods
idiv
scas
fld
(bad)
js
data16
cmp
xlat
ret
dec
mov
popa
paddd
inc
(bad)
arpl
jno
int
popa
pusha
cmp
and
sbb
mov
mov
iret
(bad)
ds
(bad)
and
and
aam
xlat
or
mov
ss
inc
aas
add
push
nop
sub
nop
scas
jb
sar
inc
inc
jbe
add
test
(bad)
outs
push
(bad)
xchg
cmps
(bad)
dec
dec
dec
push
push
popf
dec
inc
mov
out
sahf
push
popf
push
fwait
push
cs
es
test
(bad)
jbe
fdiv
ret
jmp
ins
(bad)
fwait
retf
lods
aas
test
ret
(bad)
mov
inc
adc
pop
xor
rcr
push
xor
adc
(bad)
int3
ss
aaa
bound
(bad)
cmp
loopne
ret
sahf
mov
push
in
dec
push
aas
pop
loope
outs
push
jg
ins
test
mov
adc
add
(bad)
aas
cwde
repnz
fwait
mov
add
bswap
inc
je
ins
jecxz
inc
inc
mov
fwait
mov
jmp
cdq
scas
cwde
inc
pop
(bad)
dec
mov
(bad)
push
call
dec
xchg
mov
dec
lea
push
cwde
mov
(bad)
cmps
ror
(bad)
movs
aam
aam
ss
fbstp
es
mov
ds
(bad)
push
mov
aam
ud0
dec
pop
(bad)
push
or
mov
fs
dec
(bad)
sbb
(bad)
and
inc
or
mov
or
fsubr
verw
retf
cmps
dec
lods
pop
aas
cmp
shr
push
call
ja
int3
inc
je
pop
sbb
cld
iret
inc
pop
jg
(bad)
pushf
cwde
xchg
inc
xchg
mov
lock
dec
outs
mov
popf
cwde
xchg
(bad)
das
push
fidivr
(bad)
push
(bad)
outs
jle
fnstenv
nop
dec
push
(bad)
dec
push
push
call
push
jbe
cmp
rol
ins
call
mov
aaa
adc
gs
ds
xchg
idiv
call
jb
pop
jne
popa
call
(bad)
imul
imul
cmps
into
(bad)
sub
dec
sub
(bad)
movs
inc
or
and
lea
add
mov
xchg
jg
gs
inc
or
jbe
pusha
idiv
pop
nop
lods
ins
add
push
retf
test
pop
fbstp
inc
jae
xchg
data16
pushf
xchg
(bad)
xchg
xchg
ficom
mov
call
data16
pop
xchg
push
xchg
pop
nop
mov
ins
cmp
cmps
gs
pop
mov
pop
mov
mov
outs
jle
test
mov
ret
retf
movs
(bad)
neg
(bad)
jno
pop
ds
xchg
lea
push
dec
cmp
es
push
shl
push
push
(bad)
sub
push
mov
rol
shl
pop
xchg
push
inc
mov
fdiv
popa
fwait
cmp
aas
or
pop
or
stos
inc
(bad)
in
cld
movnti
add
or
dec
pop
mov
pop
or
jle
cmps
nop
(bad)
stos
stos
xchg
lahf
mov
(bad)
pushf
popf
sahf
cdq
xchg
xchg
xchg
lea
xchg
nop
mov
jp
jns
imul
and
push
inc
scas
ss
cmp
mov
ret
es
fmul
rol
rol
sar
(bad)
(bad)
mov
mov
data16
pop
push
push
(bad)
xchg
inc
fs
(bad)
popa
pop
inc
inc
inc
dec
xchg
inc
ds
sub
aaa
inc
sbb
ds
sub
mov
push
ja
jmp
mov
xor
movs
pop
add
or
jg
jo
(bad)
mov
mov
mov
push
mov
jmp
mov
sahf
(bad)
and
jmp
ud0
outs
push
call
(bad)
inc
sar
enter
into
mov
inc
jno
add
dec
push
cmp
and
push
inc
imul
data16
sar
xchg
sbb
shl
inc
jmp
ret
scas
fcomp
test
dec
adc
inc
dec
adc
dec
cdq
aaa
adc
add
iret
aaa
add
pop
mov
jp
ret
in
pop
dec
ret
mov
leave
ror
(bad)
int3
inc
iret
push
add
cld
inc
xchg
(bad)
push
leave
out
fcom
mov
mov
test
adc
push
xchg
jle
(bad)
mov
fdivr
ficom
mov
int
mov
in
mov
push
(bad)
mov
pop
jae
pop
cmps
sbb
push
data16
push
out
jne
jbe
push
cmp
addr16
cs
xor
ds
and
mov
jno
cmps
jg
mov
push
fsub
xchg
push
pop
mov
adc
or
dec
mov
or
pop
add
add
sbb
add
adc
dec
imul
popa
sysenter
pushf
pop
fdivrp
pop
push
xchg
popa
rcr
cmc
sub
mov
xchg
(bad)
mov
mov
lahf
movs
xchg
push
cmps
loope
ret
rep
lods
ss
int
call
fisub
sub
jnp
ds
and
dec
(bad)
ins
push
xor
xor
(bad)
(bad)
xchg
push
dec
mov
into
sub
and
into
adc
pop
ror
or
or
add
clc
pop
sub
das
mov
nop
add
adc
es
dec
jae
lds
dec
aam
ror
(bad)
mov
mov
xchg
xchg
mov
mov
mov
inc
cmps
mov
mov
out
xchg
ret
sbb
enter
les
dec
(bad)
jg
(bad)
ror
stos
(bad)
mov
lea
xor
fadd
ds
push
aaa
(bad)
jge
enter
dec
(bad)
js
jae
imul
and
and
leave
jae
xor
or
test
cmp
inc
mov
adc
push
js
pop
push
jbe
lods
cmp
add
jge
dec
mov
retf
(bad)
add
movs
cmps
ja
jmp
out
test
lahf
(bad)
inc
jl
(bad)
cmps
mov
cld
not
outs
fmulp
lds
aam
test
push
push
je
iret
pop
icebp
push
adc
dec
mov
jl
fs
cmps
(bad)
jo
aas
ins
pusha
and
cld
inc
inc
xor
jmp
cs
xchg
jb
shl
aas
adc
cld
xchg
cmp
or
add
ja
ror
call
test
push
pop
xor
cmp
(bad)
not
sar
retf
mov
int
ds
movs
int
jo
test
xlat
(bad)
hlt
xor
inc
push
push
(bad)
mov
sahf
ins
inc
add
stos
movs
push
mov
add
scas
mov
(bad)
jg
xchg
xchg
cmps
dec
ja
pop
inc
add
or
jae
(bad)
adc
aas
jle
inc
ss
sub
or
cmpxchg8b
sub
jecxz
pop
repnz
sub
mov
mov
cld
pop
xchg
add
adc
fwait
or
mov
stos
ds
into
int3
sbb
dec
inc
ds
inc
fistp
fisub
add
call
push
mov
(bad)
mov
(bad)
retf
retf
cmps
sahf
repz
adc
xchg
mov
(bad)
mov
mov
outs
ret
sar
icebp
inc
jnp
pop
inc
push
sbb
cs
dec
dec
ins
push
ds
ins
jle
push
inc
xor
mov
aas
aas
push
cdq
dec
not
pop
push
xchg
ds
jg
or
inc
or
sbb
pop
inc
jg
lds
fsub
outs
outs
mov
jo
and
jb
mov
int3
cmps
aaa
mov
std
mov
enter
frstor
repz
std
ds
in
in
int3
cmp
scas
lods
stos
call
xchg
pop
add
inc
mov
out
aaa
inc
mov
sub
iret
xchg
outs
clc
push
push
sub
dec
(bad)
js
(bad)
ins
inc
enter
inc
cmp
xchg
mov
es
ds
(bad)
sbb
xor
jg
enter
adc
daa
add
gs
aaa
cmp
aaa
(bad)
mov
scas
pop
jp
inc
inc
ret
int
pop
js
popf
data16
ss
dec
push
add
(bad)
(bad)
aam
pop
fstp
jbe
jmp
(bad)
jmp
jmp
ds
(bad)
mov
lods
jmp
inc
outs
jmp
cmps
xchg
xchg
(bad)
push
in
sbb
pop
jns
ds
pop
pop
ret
mov
dec
mov
ds
jle
addr16
push
push
push
inc
shl
xor
jae
pop
jle
inc
ds
and
imul
add
inc
retf
add
xchg
cmp
pop
pop
ja
sahf
imul
retf
call
rcl
loop
mov
dec
test
dec
es
jecxz
or
call
sahf
mov
icebp
aas
dec
cmps
movs
(bad)
push
xor
mov
pop
push
cmps
ins
inc
ret
popa
inc
mul
and
out
out
mov
pop
xlat
ret
add
stc
aas
inc
cmp
pop
inc
xchg
jo
sub
not
dec
mov
(bad)
outs
or
dec
push
add
neg
adc
add
sbb
pop
xchg
popa
in
sbb
jge
inc
rcr
(bad)
stc
add
mov
xchg
out
(bad)
cmps
mov
scas
(bad)
mov
out
js
inc
(bad)
mov
imul
arpl
jl
xlat
dec
pop
xor
mov
inc
cmp
jne
jl
cwde
inc
mov
outs
jno
(bad)
imul
push
out
je
sub
aas
fcom
idiv
dec
push
dec
(bad)
das
ss
mov
ds
lods
inc
comiss
add
aam
add
and
adc
jl
inc
push
mov
arpl
nop
pushf
pop
dec
into
mov
icebp
repnz
div
cmc
inc
mov
aam
mov
fbld
pop
(bad)
ins
jle
(bad)
jns
daa
adc
push
dec
push
sbb
jbe
int
rol
jne
jo
ds
sub
cmp
dec
inc
inc
(bad)
aaa
cmp
or
sub
and
inc
xor
rcr
mov
jnp
and
sub
ins
shl
mov
pop
push
int3
outs
sub
xchg
jbe
sub
jo
and
gs
addr16
pop
div
mov
push
push
inc
cmp
ds
xchg
out
jo
jl
push
push
ds
xchg
dec
inc
inc
aas
inc
inc
jle
cdq
popa
dec
xor
adc
aas
mov
mov
jl
and
or
inc
imul
out
inc
ret
aaa
outs
mov
fidiv
push
jo
mov
ds
xor
sti
scas
push
push
inc
scas
jbe
mov
aas
sub
jb
fdiv
int3
jmp
mov
adc
add
sub
inc
mov
cmp
je
pusha
sub
push
ss
mov
or
cmps
or
xlat
adc
(bad)
es
inc
mov
dec
and
jg
shl
mov
add
jmp
add
shl
pushf
jo
add
pop
scas
jle
add
push
pop
pushf
jle
inc
inc
and
dec
xchg
retw
idiv
ins
imul
ss
fs
idiv
cmp
cmp
scas
cmp
sub
sub
jg
jl
dec
aas
jg
sub
sar
das
inc
push
mov
rcl
scas
add
mov
pop
(bad)
fdiv
push
mov
dec
push
sbb
jbe
(bad)
repz
scas
not
fsubr
imul
push
jecxz
mov
(bad)
aam
jo
jg
sub
aas
or
ss
retf
iret
mov
dec
xor
and
jne
pop
scas
inc
shl
adc
or
sbb
(bad)
jge
iret
ins
ret
(bad)
cs
mov
push
ds
sbb
and
ss
lock
jbe
pop
outs
or
inc
inc
and
int3
mov
pop
push
add
push
and
push
xchg
sbb
ret
(bad)
(bad)
pop
push
xor
xor
(bad)
jno
dec
mov
(bad)
gs
call
pop
xchg
inc
ret
jbe
dec
dec
(bad)
out
shl
ja
shl
inc
aas
and
jmp
and
add
aaa
int3
into
lahf
add
stos
dec
adc
dec
adc
fistp
push
mov
jbe
outs
and
add
inc
sub
dec
push
jmp
sub
mov
jno
sbb
das
fcomp
or
out
or
mov
adc
(bad)
jmp
adc
pop
aam
lods
add
add
data16
dec
push
inc
push
aaa
sbb
jp
inc
adc
dec
scas
cmps
ins
jbe
lods
dec
daa
push
jle
gs
call
sub
sub
push
mov
sahf
data16
jle
ss
dec
mov
fs
aas
ds
test
pslld
xlat
fdiv
add
add
les
add
adc
sahf
mov
(bad)
(bad)
nop
xchg
sub
xchg
xchg
xor
clts
fisubr
dec
test
push
pop
push
or
push
push
sbb
inc
(bad)
dec
inc
outs
data16
mov
jo
xor
fs
bound
ds
or
pop
scas
cmp
jle
(bad)
imul
test
push
push
pop
xchg
mov
pop
xchg
(bad)
mov
nop
nop
and
mov
jg
test
sahf
sahf
ds
cmps
cmps
push
dec
inc
(bad)
stos
loope
cld
jmp
sub
lahf
lahf
inc
(bad)
movs
movs
dec
mov
ficomp
cmp
movs
movs
push
popf
popf
cmp
push
dec
and
add
sub
jnp
inc
es
inc
or
sub
out
repnz
(bad)
arpl
popa
popa
cmp
and
mov
and
push
pop
push
(bad)
jae
jo
push
dec
rcl
data16
arpl
mov
or
std
dec
xchg
push
inc
mov
cwde
xchg
call
shl
stos
pop
xchg
daa
mul
sahf
popf
cmp
mov
(bad)
loope
xor
cmps
movs
push
(bad)
xor
call
(bad)
cdq
inc
push
xor
shr
cmp
sbb
ds
outs
(bad)
imul
bound
cmp
jbe
add
cmps
push
sub
pop
arpl
xor
add
add
add
out
pop
sub
imul
jbe
sahf
add
dec
mov
xchg
nop
and
xchg
xchg
sub
xchg
inc
rol
mov
(bad)
ja
sub
or
or
dec
out
dec
jbe
ret
push
mov
xchg
aas
aaa
test
stos
(bad)
pop
jmp
inc
pop
add
pusha
mov
and
mov
loop
mov
add
jl
mov
adc
(bad)
lds
data16
scas
inc
ss
scas
add
pop
jne
aas
(bad)
jp
ds
cmp
dec
(bad)
ss
test
pusha
cmp
xor
loope
ss
mov
jle
push
test
add
or
push
add
loop
and
add
aas
iret
int
int
(bad)
cdq
add
test
aad
(bad)
xchg
mov
dec
rcr
(bad)
(bad)
pop
cs
rol
sahf
add
ret
cs
push
cmp
mov
mov
lds
pushf
test
(bad)
(bad)
mov
lock
cmps
cmps
mov
jge
mov
fucomp
jle
cmps
mov
pop
push
push
push
jbe
inc
(bad)
js
ds
outs
jo
jl
cs
lock
loope
es
push
aaa
cmp
cmp
add
push
push
jle
fwait
out
jg
push
js
test
push
jne
pop
aas
dec
pop
scas
push
mov
add
cmp
repz
rcl
test
jmp
fcmovnu
mov
mov
sahf
rcl
cmps
(bad)
mov
loope
jg
(bad)
ror
sahf
dec
scas
push
ret
movs
lahf
cmp
dec
clc
(bad)
(bad)
aam
mov
(bad)
scas
stos
push
inc
out
cmps
std
outs
push
les
(bad)
push
shl
out
out
into
retf
mov
xlat
pop
data16
pop
push
dec
and
jnp
ds
jno
mov
cmps
shl
fnstcw
ss
pop
push
pop
pop
pop
dec
ds
les
int3
lock
cs
push
ds
sub
add
jg
in
cmp
jg
add
ret
aas
aad
mov
js
popf
adc
dec
(bad)
scas
pop
dec
jmp
mov
mov
(bad)
mov
push
ret
mov
ds
mov
ins
push
ss
sbb
xchg
mov
fistp
stos
push
iret
les
mov
cmps
mov
or
ficom
mov
xchg
mov
popa
data16
shl
cmp
jg
cmps
add
or
sbb
cmp
out
jg
inc
sahf
test
or
nop
loop
(bad)
cmp
push
cld
out
call
rcr
test
mov
mov
dec
enter
jg
(bad)
push
jle
mov
inc
mov
rcr
cmps
popf
xor
cmp
mov
or
push
push
cmps
sahf
aaa
inc
jge
cld
data16
push
push
ss
jle
fs
bound
imul
pop
dec
jbe
dec
pop
mov
adc
pop
pop
push
xor
push
lock
dec
add
xor
(bad)
xlat
int
jmp
push
inc
or
mov
out
int
mov
xchg
mov
jae
dec
pop
bound
or
std
or
or
shr
inc
out
bound
push
or
xchg
bound
pop
dec
ss
pop
xor
pop
pop
pop
aas
aaa
and
push
jg
(bad)
cmp
dec
or
movnti
pusha
dec
jle
push
adc
inc
mov
pop
mov
shr
xchg
nop
dec
int
lds
jo
cmps
xchg
xchg
mov
inc
pop
push
adc
in
adc
pop
addr16
sahf
inc
mov
fs
popa
pop
pop
aaa
pop
jp
sbb
ds
inc
aas
jle
adc
sbb
ret
imul
pop
jbe
xlat
into
into
int
stos
rcr
ja
xchg
aas
setg
inc
call
inc
aas
mov
(bad)
cmp
jns
push
pop
mov
add
pop
fimul
or
ins
pop
fldcw
mov
pop
ds
gs
bound
xor
pusha
pop
sahf
(bad)
sbb
xor
xchg
(bad)
xor
cmp
inc
daa
mov
xor
jle
push
pusha
popf
mov
or
push
mov
aas
pop
xor
jne
cs
push
or
add
dec
pop
test
imul
cmps
pop
(bad)
jbe
jl
push
imul
daa
pop
pop
in
push
adc
pop
inc
push
test
dec
inc
cs
inc
mov
ins
ds
fs
bound
xlat
mov
push
pop
aaa
push
pop
pop
call
(bad)
sbb
scas
aaa
push
dec
lea
hlt
pop
mov
xlat
cmps
test
mov
aas
push
ja
das
or
frstor
pop
push
mov
(bad)
dec
mov
push
fs
das
inc
add
inc
test
stos
lea
gs
ss
ss
(bad)
cmp
push
inc
(bad)
pop
or
cs
push
pop
push
ds
cmp
ja
push
and
push
dec
or
scas
scas
lods
or
fs
scas
add
push
sub
call
sub
stos
mov
mov
push
aaa
pop
inc
inc
shl
or
dec
ds
cmps
add
pusha
push
jle
xor
ss
push
push
pop
inc
sbb
xor
sub
and
add
(bad)
lahf
mov
xchg
push
ds
push
aas
retf
push
aas
aaa
xor
sbb
ds
pop
push
adc
ins
push
push
push
ds
push
pop
push
or
push
cmps
ss
jb
cmp
push
inc
push
pop
xor
daa
ja
jb
lock
dec
loope
enter
mov
cmps
pop
mov
jg
add
xor
aas
add
dec
mov
pusha
mov
shl
jo
loopne
call
add
sti
and
pop
pop
push
xor
cs
lahf
adc
call
xchg
adc
add
repz
and
pop
and
pop
lahf
push
(bad)
inc
fdiv
xchg
loope
sub
out
pop
pop
inc
pop
js
push
pop
pop
pop
comiss
sub
sbb
sbb
inc
mov
push
sbb
rol
sbb
clc
xor
mov
inc
mov
(bad)
adc
xchg
lahf
push
mov
lahf
idiv
jnp
(bad)
push
aam
mov
loop
push
idiv
mov
scas
pop
ds
mov
mov
ds
add
sub
dec
inc
and
pop
and
adc
(bad)
sbb
adc
movs
inc
jg
outs
ins
pop
xchg
shl
add
aas
call
xor
add
loopne
(bad)
inc
outs
add
(bad)
jnp
add
add
adc
and
aas
or
cwde
and
mov
das
adc
fwait
sub
(bad)
(bad)
cmp
dec
xor
mov
mov
cmp
(bad)
sti
in
call
sbb
pop
and
push
mov
xchg
adc
movs
(bad)
out
lock
or
mov
add
xchg
stc
jne
cmp
jmp
stc
push
dec
inc
fistp
in
cmc
pop
movs
imul
jmp
orps
sub
or
jmp
push
cli
sub
arpl
add
aas
aas
add
sbb
out
in
test
bound
add
lock
sub
(bad)
mov
in
(bad)
add
call
rol
sbb
neg
push
add
push
call
int3
pusha
add
loope
(bad)
xlat
stos
inc
loopne
inc
mov
add
pop
add
pop
dec
(bad)
(bad)
mov
add
aam
nop
adc
mov
cmps
add
(bad)
(bad)
mov
cmps
pop
sahf
xchg
(bad)
and
call
test
push
cmp
outs
add
ja
je
xchg
push
scas
je
jmp
ror
(bad)
scas
test
mov
fwait
out
jbe
aam
cmc
inc
inc
aas
ds
or
inc
mov
aas
pop
ja
sti
adc
xchg
lea
push
xor
jg
test
out
adc
jmp
loopne
jmp
std
sti
add
repz
add
cld
cli
add
add
aaa
jg
clc
add
stc
stc
add
hlt
repz
in
jmp
push
in
sub
add
loopne
add
aam
(bad)
(bad)
(bad)
out
(bad)
ror
retf
sar
mov
jge
outs
jno
add
pop
push
add
dec
add
add
mov
lods
stos
add
add
mov
push
cmp
lahf
iret
push
and
aaa
ror
sbb
xchg
sbb
mov
pop
outs
ss
in
loop
std
add
clc
add
add
icebp
mov
mov
mov
cmp
aaa
daa
add
add
aam
add
mov
add
aas
int3
ss
pusha
mov
add
movs
call
xor
xchg
pop
aad
mov
sbb
add
out
add
sub
pop
mov
dec
pop
add
test
aas
sub
adc
movs
add
test
xchg
div
cwde
lods
outs
add
leave
pop
add
jne
pop
push
aaa
sar
aam
sahf
aas
(bad)
cld
inc
mov
call
add
clc
lock
cs
mov
nop
add
mov
mov
pop
hlt
cld
or
pusha
pop
sub
inc
and
(bad)
add
inc
pop
(bad)
inc
add
push
stos
push
dec
jg
jnp
push
(bad)
jbe
add
push
xchg
pop
and
stos
outs
imul
sbb
pop
xchg
pop
add
inc
aas
pop
dec
jmp
out
or
cmps
push
and
adc
(bad)
pop
sub
inc
ins
(bad)
pop
shl
pop
add
adc
mov
fidivr
pop
mov
push
adc
out
stos
push
add
js
push
xchg
fisubr
add
add
das
(bad)
add
inc
or
fs
add
pcmpgtd
lods
aas
(bad)
xchg
sahf
out
outs
imul
inc
and
xlat
es
mov
(bad)
call
out
add
loop
add
sar
add
(bad)
(bad)
inc
inc
sub
and
sbb
mov
and
sub
daa
and
dec
dec
dec
add
add
add
add
inc
inc
sar
add
mov
pop
or
add
jno
add
idiv
cmc
add
in
in
ins
std
(bad)
call
(bad)
add
cmps
jge
jp
popa
cmp
aaa
ins
dec
js
ret
mov
sbb
and
paddw
and
(bad)
jg
mov
sti
adc
adc
sbb
sbb
sub
dec
inc
scas
add
call
out
add
xchg
xchg
xchg
push
scas
(bad)
jp
scas
push
out
adc
mov
or
addr16
std
(bad)
(bad)
push
out
fcomp
iret
add
int
add
mov
jle
lea
push
add
cmp
ins
adc
not
cmp
pop
(bad)
adc
push
iret
jmp
sbb
mov
sahf
fs
es
fwait
add
dec
adc
lock
idiv
addr16
fild
lods
mov
call
jmp
mov
movs
push
mov
scas
clc
jns
bound
mov
inc
jne
(bad)
sub
adc
pop
adc
lea
xchg
(bad)
stos
scas
out
inc
inc
xor
adc
inc
push
lahf
xor
or
mov
into
aaa
repz
stc
stc
idiv
pop
add
mov
fild
(bad)
(bad)
add
enter
dec
mov
pop
push
cmp
cs
adc
loope
aam
out
push
(bad)
aas
inc
xor
inc
add
pop
fild
inc
xchg
push
mov
imul
push
jbe
pop
add
and
add
addr16
xchg
(bad)
jg
add
out
jmp
int3
mov
add
test
push
push
arpl
pop
dec
ss
lahf
or
mov
xor
mov
out
push
fistp
dec
fcmovb
sar
call
xor
jmp
fiadd
add
sub
and
jg
(bad)
(bad)
jg
ror
add
out
add
xchg
add
mov
jb
pop
dec
push
jge
gs
jno
mov
outs
sbb
jbe
hlt
mov
test
and
mov
cmps
or
sub
ss
and
imul
fadd
add
xor
adc
add
pop
mov
sbb
or
cmp
push
xor
push
cmp
xor
jae
mov
sub
nop
jmp
inc
inc
ss
push
out
xor
mov
(bad)
outs
pop
gs
xchg
ds
add
fadd
daa
dec
out
movs
sub
outs
mov
push
daa
dec
test
push
div
jns
push
or
bound
sub
out
aas
je
out
daa
push
outs
or
and
and
pop
jne
jne
loope
push
inc
es
std
adc
mov
or
xor
int3
push
jmp
outs
addr16
sub
adc
nop
fsubrp
retf
sub
scas
pop
jnp
jnp
into
push
adc
sub
or
es
or
retf
call
jg
add
cmp
into
(bad)
aas
jp
push
mov
jmp
pop
call
xor
outs
dec
xchg
pop
lea
xor
and
inc
xchg
nop
rcl
inc
cmp
push
mov
pop
and
test
aaa
and
rol
out
dec
sbb
pop
adc
(bad)
fbld
sub
(bad)
call
inc
call
mov
mov
(bad)
jle
jl
xor
cmps
test
push
loopne
gs
mov
fwait
ins
jle
push
cmc
adc
sub
(bad)
adc
jmp
cmp
push
mov
cmc
xchg
xchg
inc
and
pop
xchg
dec
jb
push
mov
pop
je
mov
mov
cmps
push
sti
xchg
popf
dec
fstp
cmps
xor
pop
rol
mov
mov
rol
push
cmp
jo
cmps
cwde
cli
popa
adc
dec
cmp
pop
sbb
inc
inc
call
scas
mov
(bad)
cmp
stos
fs
add
and
ret
jmp
dec
jns
ja
mov
in
in
sahf
hlt
push
leave
push
movs
dec
xchg
or
and
push
out
mov
mov
ins
fistp
pop
mov
jno
scas
pop
mov
arpl
call
inc
test
nop
out
pop
pop
push
push
add
push
and
sub
shl
js
inc
js
rcl
adc
inc
mov
push
mov
into
mov
movs
cs
mov
inc
int3
mov
mov
dec
mov
inc
jmp
add
xchg
mov
mov
mov
outs
push
lods
pop
mov
aaa
xchg
and
adc
ins
inc
push
test
dec
and
sbb
loop
dec
sbb
xchg
cmp
lods
inc
(bad)
(bad)
pop
nop
cmps
mov
and
inc
jbe
mov
lds
xchg
sahf
cmps
mov
movs
scas
jmp
pop
xchg
frstor
dec
dec
frstor
push
call
pop
test
jbe
cmps
push
out
mov
mov
(bad)
pop
mov
push
dec
dec
cmp
or
retf
mov
inc
loop
setno
mov
(bad)
mov
pop
(bad)
cld
outs
mov
inc
push
ja
mov
sbb
pop
jae
cmp
mov
mov
mov
pop
mov
call
mov
popf
push
call
push
call
push
dec
xchg
push
push
xchg
push
and
test
es
movq
mov
(bad)
(bad)
ds
cmps
mov
pop
aam
inc
dec
sub
bound
loop
dec
and
sub
cmp
add
ins
sub
cmps
add
mov
mov
mov
rcr
fiadd
inc
jno
sub
cmc
mov
jmp
cmps
push
xchg
mov
mov
push
call
push
in
push
xchg
(bad)
push
lea
dec
(bad)
fld
sub
stos
sar
sahf
mov
xchg
fdivr
inc
dec
push
jge
inc
pop
xor
cmps
inc
jae
dec
cmp
and
dec
push
cmp
push
test
adc
scas
inc
xor
ds
cmps
push
into
inc
das
(bad)
stos
xor
scas
ret
push
pop
(bad)
lods
xchg
push
mov
out
leave
sbb
add
sbb
pushw
iret
xchg
nop
mov
sbb
xchg
or
push
call
hlt
mov
pop
push
xchg
es
push
xor
dec
mov
push
push
sub
ja
dec
sbb
cmps
mov
jae
pop
ds
mov
inc
inc
test
sub
leave
or
and
adc
scas
push
jecxz
(bad)
push
or
test
dec
jp
mov
xchg
mov
mov
add
fistp
pop
not
sub
or
jge
jno
jo
popa
push
lea
je
mov
xor
es
stos
ds
movs
lahf
jno
cli
movs
ficom
ret
xchg
mov
ror
push
lods
mov
inc
jae
fs
add
stos
pusha
in
es
jmp
dec
push
push
mov
pop
push
fild
rcr
jmp
test
lods
fwait
pop
cmp
mov
mov
(bad)
cmp
jne
inc
sub
jbe
mov
cmps
mov
jmp
popa
fst
daa
movs
push
cdq
mov
data16
push
sub
sahf
add
adc
fnstenv
xlat
dec
mov
or
xlat
jle
dec
jae
stos
adc
push
scas
jbe
jno
and
and
push
push
ds
xchg
popa
pop
push
and
mov
test
test
std
xchg
mov
jg
lods
das
mov
nop
movs
jne
int
add
xchg
sar
mov
mov
stos
push
lods
mov
xchg
inc
mov
dec
imul
jbe
mov
cs
and
lds
ror
push
cmps
scas
mov
movs
add
jecxz
sub
jae
movs
mov
push
mov
rol
or
loopne
pop
mov
imul
mov
jg
stos
out
dec
jmp
ins
out
call
pusha
ffreep
retf
xchg
sahf
nop
mov
mov
stos
mov
ins
rcl
call
mov
dec
push
aam
mov
popf
bound
popa
dec
out
push
aaa
mov
dec
and
loopne
dec
inc
sub
ds
and
movs
cmps
movs
inc
jo
mov
push
inc
push
lahf
aad
inc
(bad)
shr
cmps
das
movs
add
xchg
dec
push
pop
xor
jle
xchg
jb
(bad)
mov
cmovp
mov
(bad)
(bad)
ins
mov
fdiv
mov
movs
out
and
les
xchg
mov
push
data16
je
pop
dec
imul
div
xchg
ret
jmp
imul
clc
sub
cmps
cmps
cmps
dec
or
inc
or
mov
test
movs
dec
jmp
pop
jns
pop
fisub
out
xlat
shl
dec
shl
mov
js
xchg
out
(bad)
enter
rcr
test
xchg
mov
mov
sbb
adc
test
mov
add
inc
pop
adc
push
jb
dec
inc
adc
out
test
mov
xchg
nop
loop
(bad)
adc
inc
xchg
push
jbe
cmps
push
xchg
mul
(bad)
retf
inc
pop
mov
shl
icebp
repnz
xchg
lahf
cwde
sahf
pushf
xchg
mov
mov
stos
cs
mov
jbe
ret
movs
sahf
jp
mov
mov
jl
jb
ss
movs
jg
push
(bad)
pop
push
push
inc
dec
dec
test
popa
jmp
cmp
push
sub
cmps
inc
lahf
retf
loopne
inc
or
add
sub
adc
sub
out
xchg
ss
mov
and
iret
mov
jecxz
mov
inc
je
fwait
ds
shr
inc
jmp
mov
xchg
mov
mov
push
pop
ja
pop
push
push
sub
dec
div
nop
je
(bad)
push
push
inc
out
sub
or
out
fs
dec
mov
sub
inc
push
xchg
test
cs
(bad)
inc
cld
pop
(bad)
mov
lea
pushf
pop
push
pop
pop
xchg
(bad)
fwait
js
fwait
popa
(bad)
jle
pop
movs
pop
xlat
mov
or
shl
cmp
ds
lods
out
dec
cmps
and
mov
mov
jle
rcr
jbe
cmps
js
ja
cmps
pop
pop
jns
repnz
push
aaa
pop
push
cs
aam
out
push
inc
push
push
dec
pop
sub
xchg
(bad)
sahf
cmp
push
push
xchg
adc
inc
mov
and
cmps
xchg
scas
bound
inc
add
sub
aas
pop
js
call
ror
in
out
pop
dec
cmps
(bad)
stc
scas
dec
(bad)
add
std
jbe
or
cmps
mov
jmp
or
push
ror
ins
pop
outs
arpl
pop
jnp
push
pop
dec
cmp
not
inc
(bad)
cmps
push
jl
call
cmp
cmps
ds
xlat
test
imul
(bad)
inc
inc
lods
(bad)
cmps
ins
dec
std
pop
(bad)
ret
lea
xchg
ss
aaa
ins
ss
jnp
jns
mov
int
shl
shr
rcl
into
in
push
(bad)
aad
(bad)
mov
inc
cmps
stos
cmps
scas
popf
mov
jns
cmp
js
rcl
dec
pop
jl
jae
add
data16
outs
movs
movs
movs
repnz
jmp
inc
out
imul
imul
mov
cs
sub
aad
dec
adc
mov
not
sbb
pop
push
js
shr
mov
es
cmps
popa
mov
push
jno
call
push
adc
dec
push
sbb
cli
sbb
add
ins
(bad)
push
call
das
es
inc
retf
aad
(bad)
(bad)
test
add
sbb
mov
in
rol
xchg
mov
fcmovbe
xor
or
push
data16
ja
ins
push
imul
(bad)
and
js
push
jmp
cmc
stos
inc
idiv
xor
das
fisub
movs
xchg
(bad)
fs
movs
mov
adc
sub
(bad)
mov
adc
add
idiv
push
(bad)
push
push
inc
add
aas
aaa
(bad)
pop
inc
xchg
dec
das
sub
adc
inc
xchg
pop
(bad)
inc
jne
pop
daa
arpl
ins
popa
aas
mul
jae
push
(bad)
push
push
push
sub
aaa
or
and
aaa
push
inc
ss
adc
dec
or
pop
loopne
enter
nop
cli
test
pop
movs
fiadd
inc
jg
dec
inc
dec
(bad)
push
bound
lahf
imul
xor
xor
test
xor
test
push
or
pop
dec
cmp
sub
out
mov
add
loopne
xchg
xchg
rol
aam
push
push
sbb
out
dec
inc
int
push
push
push
mul
inc
push
es
and
or
cmps
test
loop
xchg
mov
call
ret
add
xor
push
es
out
mov
(bad)
adc
adc
dec
test
gs
inc
es
sahf
dec
push
pop
adc
test
inc
fidivr
sub
push
scas
pop
push
sbb
retf
lods
xchg
movs
or
addr16
xchg
aam
add
lahf
add
stos
xchg
sub
push
dec
push
and
movs
movs
inc
xchg
xchg
push
aad
pop
pop
ficom
mov
mov
stc
es
or
or
sbb
outs
jb
jmp
cmp
shl
jne
jns
ror
push
push
push
gs
imul
out
imul
idiv
movs
cmps
pusha
inc
ins
jmp
stos
inc
daa
daa
daa
jecxz
fld
fwait
popf
cmp
xchg
mov
mov
jne
push
push
jle
mov
mov
pop
push
ds
xchg
sub
xchg
mov
aaa
mov
push
daa
sahf
jg
sub
pop
pusha
ins
jnp
inc
daa
dec
inc
or
push
test
mul
push
dec
dec
inc
out
fisttp
je
(bad)
inc
dec
sub
jb
sar
out
int
(bad)
out
add
pop
sbb
push
dec
not
mov
mov
sahf
xchg
xchg
pop
mov
xchg
and
xor
mov
push
div
add
pop
pop
push
pop
das
outs
inc
add
sbb
mov
out
push
bound
test
dec
cmps
and
sub
sub
push
sub
jl
mov
mov
pop
adc
call
add
mov
push
mov
pop
aaa
mov
call
xchg
xchg
es
mov
mov
ja
push
cmp
(bad)
cmps
lea
add
pop
dec
(bad)
and
out
dec
jecxz
out
jno
outs
(bad)
pop
add
adc
inc
test
pop
aas
add
push
call
mov
inc
aaa
outs
push
in
js
pop
dec
ss
(bad)
jbe
jno
dec
push
imul
arpl
xor
dec
cmp
and
lea
mov
daa
cmp
and
dec
call
cmc
add
mov
(bad)
jno
xchg
nop
mov
mov
enter
fisubr
(bad)
icebp
pop
or
lods
pop
pop
mov
inc
aaa
movs
or
je
jb
push
adc
cdq
aam
jecxz
xchg
into
mov
scas
adc
movs
xchg
ds
jbe
jo
mov
mov
xchg
push
jp
push
push
cmp
ins
lock
imul
rol
out
dec
dec
push
pop
call
push
ficom
fild
push
xchg
xchg
xchg
cmp
sub
push
push
out
inc
adc
call
(bad)
mov
outs
mov
push
test
int
xchg
inc
dec
lods
data16
dec
push
fsubr
xchg
push
loope
ret
mov
inc
xchg
add
outs
cmps
jno
inc
cmp
scas
mov
mov
test
jbe
scas
pop
out
scas
pop
test
adc
je
jl
icebp
pusha
arpl
push
jno
pop
inc
ss
push
arpl
(bad)
jle
ins
cmp
dec
cmp
pop
pusha
gs
add
fcomp
(bad)
and
sbb
dec
ret
nop
add
addr16
(bad)
call
es
retf
(bad)
nop
(bad)
int3
fwait
mov
rol
push
mov
add
mov
scas
pop
xchg
mov
push
fsub
bound
lods
movs
sub
mov
sub
fistp
out
outs
pop
daa
pushf
xchg
and
xor
(bad)
idiv
pop
mov
(bad)
jns
je
mov
gs
jp
dec
dec
cmp
jbe
mov
mov
xchg
cmp
scas
dec
or
(bad)
dec
and
loop
mov
inc
jecxz
sbb
mov
inc
xor
push
mov
cmps
sahf
ss
arpl
sar
aad
mov
jae
stos
adc
aas
pop
push
and
cmps
icebp
adc
cmp
js
pop
pop
(bad)
push
mov
cld
bound
je
jno
jle
sub
(bad)
nop
xchg
nop
cmp
adc
xor
add
mov
scas
mov
aas
xchg
test
push
bndldx
pop
or
push
pop
cmps
dec
cmp
pop
dec
inc
push
fstp
cmps
out
jbe
retf
(bad)
sahf
mov
enter
out
pop
push
push
cmps
add
dec
add
push
cmps
(bad)
push
cs
movups
inc
add
ds
mul
pushw
(bad)
pop
inc
pop
pusha
pop
inc
pusha
cmps
jo
pop
push
cmps
inc
aaa
adc
cmp
sub
and
call
inc
out
pop
xor
inc
es
adc
call
dec
jbe
push
mov
or
or
push
xor
pop
inc
mov
pop
inc
call
xor
sub
out
neg
or
xchg
out
pop
lods
dec
or
ja
jbe
(bad)
fild
inc
adc
add
and
stos
xchg
pop
pop
jle
xchg
add
jecxz
push
adc
arpl
sbb
sbb
and
in
pop
(bad)
push
inc
ss
std
repnz
sbb
sbb
js
ja
mov
or
add
pop
and
dec
popa
inc
pop
mov
adc
jns
js
nop
sbb
xor
pop
xor
push
ror
lahf
push
inc
call
fwait
js
out
movs
pop
xor
cmp
stos
pusha
sbb
or
aaa
or
fwait
xchg
pop
inc
pusha
fcomp
dec
inc
cs
pop
inc
js
adc
or
shl
inc
inc
xor
sbb
mul
(bad)
outs
jno
cmp
pop
push
das
or
daa
and
jno
or
jp
dec
inc
aaa
scas
cmp
aas
daa
push
ss
xchg
out
packuswb
test
call
pop
pop
and
(bad)
test
test
ss
inc
and
inc
mov
push
jbe
or
cmps
pop
mov
jnp
or
pop
dec
getsec
cwde
dec
mul
inc
push
sub
int3
adc
(bad)
pop
bound
aas
xor
fnstsw
fild
aam
mov
dec
mov
push
mov
and
dec
sar
data16
dec
or
mov
lea
pop
cmps
push
or
movs
(bad)
or
mov
mov
shl
(bad)
bound
adc
mov
movs
sbb
dec
pop
inc
push
inc
or
(bad)
xlat
mov
cmp
push
call
xchg
mov
add
jg
lods
mov
pop
or
outs
inc
sti
xor
push
sub
add
add
push
dec
push
mov
add
(bad)
(bad)
(bad)
mov
imul
mov
add
mov
add
mov
add
sar
aas
xchg
cmps
add
ret
jg
sar
(bad)
jmp
adc
shl
cmp
mov
dec
les
(bad)
mov
jo
mov
mov
jbe
mov
bound
imul
shl
cdq
jo
pop
test
call
dec
jo
cmc
push
jmp
cli
push
dec
call
xor
jl
jo
fiadd
popf
pop
pop
pop
push
dec
or
xchg
rcr
fisttp
(bad)
dec
pop
(bad)
mov
std
cli
cmps
clc
add
stc
repnz
imul
add
hlt
jmp
add
repnz
add
outs
(bad)
call
out
jmp
out
es
fadd
loope
add
(bad)
fld
aad
into
add
dec
add
and
and
add
(bad)
mov
jge
ja
dec
push
dec
cmp
dec
cmp
inc
cmp
cmp
cmp
dec
dec
inc
adc
add
inc
(bad)
add
mov
push
aas
push
add
adc
add
sbb
or
and
add
dec
or
add
cmps
and
addr16
sti
add
outs
mov
add
retf
inc
push
int3
inc
(bad)
(bad)
(bad)
add
das
xor
ins
pop
into
push
inc
sub
xlat
(bad)
mov
pop
pop
and
scas
ja
lods
sbb
push
add
nop
push
and
iret
or
pushf
add
mov
lea
loopne
push
add
push
push
jg
and
imul
gs
add
pop
xchg
outs
icebp
(bad)
scas
cmp
mov
loopne
sub
add
add
cs
or
loopne
movs
mov
lock
dec
je
data16
and
inc
or
jo
popa
ror
out
fwait
int
or
data16
dec
add
add
ins
add
das
add
push
daa
iret
fwait
in
mov
add
lods
dec
(bad)
inc
xor
imul
movs
fimul
scas
cmovb
(bad)
fild
inc
jnp
add
sub
add
pop
xchg
retf
cmp
add
ss
dec
outs
or
lsl
pop
pop
ror
jecxz
call
add
jae
cmp
sub
dec
push
aad
jle
xchg
data16
call
add
out
add
lods
sub
add
mov
arpl
iret
es
xor
ds
pop
mov
add
(bad)
(bad)
(bad)
jg
out
icebp
in
add
(bad)
add
test
xor
fs
js
cwde
aaa
jo
int3
imul
(bad)
push
and
dec
or
outs
adc
jbe
push
adc
mov
jbe
(bad)
xchg
jne
neg
fld
daa
ror
adc
(bad)
outs
inc
mov
leave
add
push
add
pop
lahf
dec
clc
lahf
sbb
add
jecxz
add
mov
outs
mov
lahf
scas
mov
jne
js
inc
in
jmp
daa
les
outs
adc
and
(bad)
fadd
xchg
push
sub
push
jg
sbb
pop
scas
(bad)
ins
call
pop
inc
add
ss
popa
cdq
pop
mov
add
ja
jmp
repz
cli
out
jmp
add
fcmove
add
lock
push
mov
inc
mov
sub
test
test
xchg
or
(bad)
sub
dec
cmps
test
or
pusha
adc
lock
dec
(bad)
ja
add
add
jmp
xchg
mov
mov
cmp
xchg
jo
pop
add
jle
mov
jae
jmp
xchg
push
push
pop
gs
push
push
cmp
clc
nop
icebp
mov
xlat
add
and
inc
in
dec
mov
jg
leave
rol
add
pop
jbe
imul
mov
add
pusha
or
test
dec
ja
jl
ja
mov
outs
pop
dec
xchg
test
jecxz
scas
das
jmp
sbb
mov
cmp
xchg
mov
and
cmp
loopne
push
data16
mov
jg
and
dec
enter
stc
inc
inc
adc
add
jno
inc
das
jno
fwait
iret
mov
mov
and
inc
jbe
test
out
xchg
mov
cmp
aaa
push
and
in
or
jg
and
or
cdq
mov
(bad)
pop
pop
(bad)
aad
or
das
pop
pop
dec
bound
dec
push
push
imul
(bad)
outs
outs
aaa
test
outs
jg
mov
fadd
pop
jo
mov
xor
jle
xchg
xor
pop
pop
xor
call
(bad)
cwde
mov
call
or
add
push
int3
pop
retf
push
jmp
dec
jle
mov
ja
aaa
push
mov
dec
mov
adc
xchg
mov
in
or
dec
dec
push
jle
push
mov
xchg
mov
leave
or
into
dec
xchg
push
sahf
dec
inc
sub
dec
sbb
lea
dec
movs
dec
inc
inc
xchg
xor
ret
pop
and
adc
pop
or
ror
inc
push
jbe
add
inc
imul
push
sbb
fld
jg
pop
ret
xlat
dec
adc
fadd
add
push
xchg
iret
loopne
gs
es
(bad)
fnop
(bad)
push
push
or
inc
scas
ins
mov
outs
inc
mov
mov
xor
xchg
(bad)
mov
cdq
ret
mov
adc
jo
inc
es
xchg
dec
(bad)
das
xor
paddusb
inc
(bad)
aas
pop
push
aad
push
jg
add
das
or
out
add
sbb
iret
or
jne
cmps
lods
inc
xor
and
dec
dec
sub
jbe
popf
lock
add
pop
add
mov
dec
xchg
add
mov
(bad)
stc
xor
ss
xor
sub
sbb
sbb
and
retf
jle
pop
xor
mov
xchg
jg
add
xchg
inc
out
fild
push
and
aas
jb
xchg
outs
fnsave
pusha
(bad)
(bad)
stos
cmps
mov
(bad)
(bad)
fild
sahf
push
(bad)
push
fwait
push
dec
dec
(bad)
clc
xor
push
cdq
push
dec
xchg
(bad)
movs
jle
lods
aam
inc
or
dec
jbe
adc
push
call
dec
or
add
(bad)
and
rcr
neg
xor
pusha
inc
in
add
ret
jmp
xchg
jmp
mov
rcl
(bad)
ins
stos
add
dec
xchg
and
das
pop
xchg
mov
test
mov
mov
sbb
jbe
call
jbe
jle
add
push
mov
cwde
add
add
fist
inc
pop
push
jle
or
inc
xchg
push
sub
push
pushf
and
lahf
mov
xchg
jmp
add
or
pop
fild
add
ja
sbb
fadd
push
sbb
ja
in
jno
cs
popf
xchg
push
mov
(bad)
inc
push
add
adc
test
sar
scas
ins
jmp
push
(bad)
leave
out
mov
cmp
(bad)
jle
arpl
mov
jp
inc
or
push
sub
pop
mov
rcr
mov
pop
xor
addr16
shr
fisubr
push
jle
add
push
test
inc
(bad)
lea
aaa
rol
pop
(bad)
stos
scas
cmps
mov
stos
mov
out
not
mov
jae
(bad)
xchg
scas
add
mov
(bad)
(bad)
pop
and
retf
mov
add
inc
inc
inc
mov
outs
cmp
sub
add
inc
pop
xchg
push
xor
ret
add
bound
cmp
pop
mov
out
loope
mov
xor
adc
jbe
lahf
mov
ss
mov
ss
pop
or
adc
sub
cs
jmp
out
adc
scas
dec
mov
mov
mov
retf
push
fisub
mov
mov
nop
into
push
inc
outs
jp
add
idiv
cmp
inc
daa
lahf
mov
sub
adc
xchg
or
xchg
dec
das
bnd
jg
test
jle
cmps
pop
(bad)
xchg
stos
jl
fcom
(bad)
js
imul
mov
scas
xchg
lods
mov
(bad)
rol
hlt
es
push
cmp
aam
mov
cmp
and
push
loopne
outs
push
cmp
clc
outs
pop
sbb
cs
out
out
adc
in
jo
jg
and
enter
ja
icebp
hlt
jmp
jb
xor
pop
dec
and
mov
stos
and
enter
adc
ret
xchg
lock
mov
(bad)
xchg
jle
mov
lds
add
dec
xchg
dec
scas
inc
jnp
(bad)
(bad)
push
jbe
xchg
dec
pop
into
mov
mov
jg
out
pop
dec
js
jg
(bad)
sub
jo
dec
inc
cs
inc
push
fimul
jne
popa
test
xchg
out
add
jp
cwde
mov
pop
pop
(bad)
pop
js
push
xchg
add
mov
add
sahf
cmps
int3
(bad)
not
mulps
(bad)
mov
xchg
add
xchg
inc
dec
jmp
outs
or
sbb
das
xor
xor
or
mov
sub
jg
mov
xchg
add
pop
pop
add
aas
inc
pop
stc
cli
test
cdq
inc
ja
sbb
push
mov
xchg
adc
out
enter
fdivr
xchg
fdivrp
es
in
mov
pop
pop
mov
dec
mov
enter
scas
movs
popf
push
mov
ror
popf
ds
into
(bad)
outs
or
ins
pop
arpl
data16
cmp
jle
push
xor
arpl
inc
out
pushf
xor
push
jg
montmul
cmps
inc
ret
add
push
lock
add
mov
mov
jge
pop
xchg
lahf
fmulp
add
fidivr
or
hlt
pop
loop
loopne
or
push
xchg
ds
mov
jne
push
out
xchg
xchg
dec
cdq
gs
pusha
jns
test
test
jb
gs
and
idiv
ins
or
outs
push
cmp
sub
pop
or
xchg
add
and
rol
(bad)
inc
add
stc
hlt
add
push
mov
arpl
adc
inc
sar
xor
lock
jle
out
push
idiv
lods
stos
cmps
call
xchg
dec
pop
inc
xor
inc
mov
out
ins
jg
fcomp
xor
xor
cs
outs
(bad)
dec
inc
mov
sub
jg
dec
in
adc
or
xchg
into
out
fistp
lea
add
mov
mov
xor
movs
popa
call
xchg
dec
pusha
mov
xor
pop
push
sbb
rol
arpl
or
ret
stc
imul
sbb
add
sbb
jg
jg
mov
xchg
sahf
inc
ins
ins
jge
pop
shl
and
dec
add
stos
(bad)
(bad)
dec
push
push
cmp
js
js
imul
mov
jg
cmc
pop
or
sub
imul
pop
movhps
(bad)
jg
xor
pop
div
(bad)
icebp
sar
data16
xor
mov
data16
push
test
cmp
add
jg
popa
add
(bad)
xchg
pushf
ds
mov
test
callw
into
outs
fs
(bad)
sub
mov
test
xor
push
adc
push
inc
aaa
and
xor
jg
pop
add
inc
in
(bad)
stos
jle
add
fiadd
mov
gs
push
inc
sub
mov
push
or
out
outs
shr
(bad)
inc
in
add
xor
adc
daa
jg
outs
pop
loopne
(bad)
cli
xchg
call
push
pop
add
nop
inc
ins
sbb
pop
pusha
pusha
sbb
xor
es
or
xor
push
inc
xor
sbb
jmp
dec
or
push
cmp
call
sub
out
pop
pop
popa
xchg
xor
movq
inc
mov
dec
ds
fadd
add
bound
(bad)
leave
rol
push
(bad)
xchg
mov
jbe
xor
aaa
cs
out
gs
outs
pop
push
(bad)
add
or
pop
and
in
jg
cs
mul
sahf
cmp
outs
(bad)
pop
pop
fs
movs
pmaxub
out
cmps
push
sahf
test
popf
popf
cmp
push
(bad)
mov
mov
mov
mov
pop
arpl
mov
jo
(bad)
jbe
ins
or
dec
xchg
mul
shr
sub
jae
push
ror
jg
(bad)
jmp
daa
scas
xchg
or
pop
sbb
cld
and
add
test
call
and
mov
mov
push
mov
js
arpl
pop
(bad)
xchg
xchg
and
dec
jl
push
push
cmp
jns
inc
inc
adc
out
dec
push
data16
or
sbb
push
xor
dec
inc
sub
(bad)
(bad)
js
sub
outs
mov
xor
inc
shr
inc
fild
jmp
xchg
xchg
and
mov
ficomp
mov
out
mov
adc
xchg
xchg
pop
sahf
popf
xor
pop
sbb
and
and
adc
(bad)
jnp
and
neg
pop
or
jmp
jbe
push
addr16
xlat
mov
push
or
add
out
inc
add
mov
mov
in
add
or
add
dec
jg
xchg
and
sub
mov
out
xor
and
movs
push
aad
(bad)
scas
test
inc
ret
mov
jne
mov
fbld
ror
es
pushf
push
stos
fmul
mov
outs
test
lea
pusha
xchg
addr16
adc
scas
inc
cmps
xchg
rol
popa
popa
pop
jbe
sub
shr
sub
mov
jo
cs
and
loope
or
sar
jg
xchg
out
pop
fs
push
(bad)
xchg
lods
cmps
dec
mov
adc
lods
push
(bad)
mov
push
mov
add
cmp
pusha
pop
jge
xchg
mov
jbe
popf
ss
call
sahf
pusha
mov
push
into
mov
pop
jle
inc
shl
ss
aad
or
imul
pop
(bad)
(bad)
pop
pop
adc
pop
call
inc
adc
imul
outs
adc
cs
jle
pop
dec
xchg
and
dec
fwait
xchg
mov
mov
sbb
add
xchg
sti
fidiv
pop
sysret
daa
pop
xchg
mov
ins
xchg
daa
das
pop
push
xchg
fsubr
popa
gs
jle
imul
ins
jg
outs
push
call
inc
pop
push
inc
xchg
fadd
xchg
nop
xchg
dec
pop
push
inc
dec
ss
call
(bad)
ss
xchg
xor
mov
fadd
adc
or
or
arpl
cdq
pop
mov
pop
not
dec
(bad)
ror
(bad)
adc
jg
and
leave
pop
push
add
pusha
xor
dec
inc
in
cld
inc
pop
fwait
xchg
add
loopne
test
rcl
jmp
inc
xchg
pop
scas
push
outs
push
push
(bad)
mov
sbb
sbb
mov
mov
push
adc
push
adc
jle
inc
and
sahf
mov
jl
(bad)
jl
pop
push
or
pop
bound
pop
push
push
inc
ror
xor
scas
jb
enter
push
add
add
out
(bad)
mov
jle
or
adc
arpl
jg
sbb
add
fdiv
fisub
(bad)
pop
movhps
loope
pop
push
and
push
xchg
xchg
sub
mov
loop
shl
call
push
add
jle
add
sar
shl
add
jle
sahf
test
repnz
push
dec
das
(bad)
pop
push
inc
pop
out
out
gs
push
dec
xchg
jo
out
(bad)
pop
jle
push
push
push
ja
ds
sub
mov
les
sbb
add
mov
fisttp
adc
mov
mov
dec
loopne
mov
inc
add
adc
movhps
mov
(bad)
dec
mov
mov
pop
pop
test
sbb
lock
or
mov
cdq
call
xlat
addr16
das
sbb
dec
inc
add
push
dec
add
gs
imul
or
addr16
jle
sub
shl
push
pop
push
mov
pop
es
mov
shl
inc
shl
movs
cmp
and
cmps
inc
jne
test
(bad)
(bad)
fild
scas
fwait
daa
test
outs
fs
cdq
jno
pop
test
arpl
pop
adc
push
leave
pop
push
dec
fstp
inc
jmp
sub
and
push
test
in
push
fld
lea
lods
pusha
jg
sub
test
xchg
inc
retf
xchg
jg
mov
lock
imul
add
hlt
jmp
add
out
fild
jmp
add
pop
adc
jmp
(bad)
fld
ror
add
sar
(bad)
(bad)
mov
add
jne
jb
bound
sub
push
push
dec
sbb
jbe
cmps
test
movs
add
fiadd
add
stos
or
and
sub
add
stos
adc
(bad)
pop
cwde
push
ins
add
adc
add
push
(bad)
and
inc
mov
adc
mov
add
add
add
and
sbb
test
and
inc
and
add
outs
push
add
and
cld
pop
hlt
lock
fwait
mov
mov
bound
pop
xchg
mov
adc
push
push
adc
add
push
loop
mov
xchg
fld
add
push
jne
mov
ins
add
jge
add
sbb
mov
add
sub
in
push
add
loope
or
addr16
adc
pop
pop
sar
pop
not
scas
call
mov
jne
xor
cmp
or
xchg
adc
mov
xlat
test
add
dec
and
lock
add
loope
add
(bad)
stos
sub
cmps
jbe
push
xchg
(bad)
cmp
sub
pop
rcr
push
outs
repnz
shl
pop
pusha
pop
pop
xor
push
push
pop
div
in
mov
mov
adc
mov
add
jmp
fild
iret
mov
mov
inc
jl
xor
cld
sub
out
out
xchg
push
sahf
out
test
add
out
call
(bad)
inc
mov
push
push
push
add
fst
add
aam
add
push
(bad)
jmp
push
or
mov
jae
call
adc
jle
dec
jge
or
cmp
inc
daa
test
je
jo
jne
movs
xor
fild
in
jmp
xor
sub
sub
push
dec
inc
pushf
pop
push
sub
data16
test
xor
push
call
inc
sbb
add
aas
mov
(bad)
dec
push
dec
push
push
repnz
push
(bad)
sbb
mov
sahf
jmp
mov
dec
into
jmp
dec
add
push
or
mov
in
mov
or
or
sub
and
out
mov
sbb
push
jo
adc
push
push
pushf
mov
sub
inc
popa
add
bound
sub
adc
dec
pop
and
inc
ss
lahf
push
xor
es
add
dec
pop
dec
sub
and
out
faddp
sahf
imul
scas
popf
dec
pop
lock
nop
dec
add
add
js
push
pop
out
push
adc
inc
jne
jmp
pop
shl
fild
call
(bad)
inc
cld
add
int
and
mov
cmp
daa
cmp
mov
jb
test
test
lahf
and
mov
pop
xchg
add
cmps
jmp
add
shl
ins
into
out
xchg
push
xchg
sahf
fwait
push
iret
push
push
call
adc
sbb
add
inc
jo
pop
add
and
es
(bad)
pop
arpl
xlat
outs
jmp
movs
mov
xchg
or
clc
add
dec
pop
dec
outs
imul
test
inc
test
cs
ja
add
(bad)
mov
mov
outs
out
push
jmp
add
jbe
lea
neg
sub
push
fbld
aaa
pop
shr
scas
ret
pop
pusha
xchg
lahf
xchg
movs
adc
das
movs
pop
push
dec
xchg
add
add
pop
pop
scas
add
sub
mov
add
jmp
add
inc
add
outs
sbb
adc
push
gs
xchg
push
movs
bound
mov
dec
jecxz
pop
loop
(bad)
mov
push
ins
push
pop
popf
scas
(bad)
and
push
inc
mov
and
dec
xor
test
cs
mov
cmp
out
sub
and
cmps
pop
arpl
jmp
xchg
mov
push
call
rcl
loopne
(bad)
pop
lahf
mov
push
pop
xchg
dec
jmp
sub
ror
pop
bound
add
jbe
adc
call
icebp
inc
mov
push
pop
xchg
hlt
test
add
or
das
pop
(bad)
les
pop
and
adc
inc
call
mov
mov
dec
mov
imul
addr16
and
sbb
jle
(bad)
dec
mov
idiv
adc
pop
sahf
jae
inc
daa
dec
(bad)
mov
push
add
out
ss
or
(bad)
imul
(bad)
sub
stos
add
stos
mov
adc
daa
lods
dec
inc
in
pusha
or
into
shl
imul
mov
xor
and
cmps
sub
cmp
loopne
xor
out
mov
xor
popa
pusha
xor
jle
imul
mov
rcr
pop
jl
jnp
adc
imul
push
xchg
mov
inc
mov
dec
outs
adc
dec
js
sub
rcr
inc
jno
pop
push
bound
mov
dec
out
xchg
lods
pop
fisubr
das
scas
push
inc
mov
test
je
mov
jbe
add
pop
or
xor
inc
bound
(bad)
movs
dec
xor
xchg
pop
sub
jmp
sub
mov
je
inc
and
add
push
rol
jge
gs
jbe
js
mov
(bad)
pop
xchg
push
lock
addr16
xchg
(bad)
popa
test
ss
call
sbb
mov
or
adc
mov
xchg
xchg
sub
loope
(bad)
pop
xchg
xchg
das
xchg
sub
add
inc
test
test
jbe
push
push
inc
adc
mov
out
inc
jo
inc
cmps
ss
lahf
test
dec
and
mov
mov
pop
mov
mov
mov
push
adc
xchg
aaa
mov
imul
out
inc
cld
add
outs
inc
adc
pop
lods
dec
push
inc
dec
(bad)
fcom
das
push
cmp
cmp
fidiv
mov
push
iret
or
mov
push
dec
bound
jmp
dec
xchg
push
mov
xor
or
in
not
call
ds
out
aas
inc
cmp
adc
lahf
pop
mov
mov
dec
or
outs
mov
sub
xchg
sub
sub
sub
mul
inc
js
stos
push
push
pop
pop
pop
push
or
pop
daa
int3
aam
jge
test
enter
fild
dec
dec
inc
call
push
popf
cld
cld
cld
sub
sbb
xchg
call
xor
xchg
das
call
fiadd
inc
imul
pop
out
sub
push
jb
out
pop
and
push
push
inc
jae
adc
push
push
inc
and
jg
je
ja
inc
jg
dec
fidiv
(bad)
pop
pop
arpl
inc
and
daa
out
sahf
hlt
mov
arpl
out
dec
inc
pushf
jo
dec
test
inc
cdq
call
out
cs
cmps
cmps
mov
or
fcom
pop
xchg
out
add
cmps
dec
pop
push
inc
inc
and
xor
pop
dec
dec
cmp
mov
(bad)
and
or
bound
sub
dec
and
nop
inc
das
test
mov
xlat
cmp
aaa
fwait
add
fistp
xchg
inc
pop
sbb
add
push
sub
sti
data16
inc
aaa
movs
xchg
es
mov
cmp
movs
cmp
push
ins
mov
mov
and
xchg
(bad)
mov
push
scas
stos
xchg
sbb
inc
shr
(bad)
arpl
fcomp
call
push
clc
scas
ret
inc
dec
neg
pop
add
push
jp
and
mov
add
cmps
mov
fucomip
sti
cli
hlt
or
or
inc
aas
repz
push
out
add
out
add
fstp
add
ror
add
or
(bad)
adc
or
push
add
into
int3
add
sub
xchg
cmp
add
test
leave
pop
push
and
add
push
push
outs
(bad)
loop
loop
push
push
sahf
xor
cmps
imul
loopne
jge
stos
nop
add
loopne
xchg
inc
dec
adc
inc
add
cmp
add
ins
ss
mov
mov
add
sub
dec
sbb
add
dec
mov
cmp
add
clc
(bad)
(bad)
jg
cmc
div
add
fmulp
pop
cmps
mov
push
mov
jge
bound
dec
jecxz
sub
fidiv
jbe
add
(bad)
inc
or
add
xchg
ja
bound
test
mov
jae
out
hlt
lods
rcr
outs
push
xor
xchg
into
sahf
andps
and
adc
or
popf
adc
(bad)
mov
xor
setns
inc
je
push
dec
jge
push
push
dec
and
pop
jp
push
inc
xor
out
bound
or
out
inc
add
lods
sub
xchg
aaa
fiadd
int3
jle
ds
stos
lods
test
aaa
iret
ds
mov
sbb
mov
outs
popf
xchg
call
inc
call
mov
inc
aaa
push
addr16
xor
addr16
les
add
(bad)
aam
sub
adc
mov
data16
sbb
outs
xchg
mov
jle
pop
aaa
push
div
test
mov
mov
fild
xor
push
rcr
mov
add
fiadd
rcr
adc
sbb
outs
jae
inc
dec
cmp
mov
mov
or
xor
push
add
test
dec
inc
das
pop
sbb
jo
pop
out
inc
dec
outs
(bad)
in
mov
out
mov
or
add
fdivr
and
dec
pop
outs
sahf
jns
cmp
ja
inc
(bad)
cmp
mov
mov
adc
(bad)
mov
inc
pop
inc
xchg
(bad)
into
mov
or
mov
jbe
and
inc
and
push
clc
cmps
and
mov
inc
inc
mov
push
popf
dec
push
push
xor
loop
and
push
imul
sub
cmp
scas
lods
push
dec
js
dec
sbb
dec
es
xchg
push
adc
xor
imul
imul
out
push
xor
xchg
popa
pop
jg
das
add
xchg
mov
inc
pop
mov
adc
dec
and
adc
inc
lsl
sahf
inc
push
jg
(bad)
jmp
sub
or
cmps
xchg
sbb
push
mov
adc
dec
movs
nop
adc
xchg
loope
push
dec
out
clc
inc
mov
cld
xchg
xchg
xchg
inc
add
sub
add
lods
idiv
clc
mul
mov
hlt
inc
mov
in
jmp
xchg
or
xor
dec
fiadd
xchg
add
ds
shl
aas
out
scas
inc
or
or
cmp
icebp
pop
and
jnp
add
add
cmps
dec
movs
nop
sub
and
sub
push
add
je
test
in
pop
add
jg
or
pop
xor
sub
adc
add
dec
stc
add
or
les
ret
popa
std
xchg
jmp
or
add
stc
loopne
adc
in
push
push
add
sbb
push
sar
rcr
imul
lods
mov
arpl
and
rol
mov
add
movaps
and
cld
dec
push
xor
xor
xor
xor
ss
push
leave
sub
mov
cld
jmp
inc
xor
xor
xor
inc
xor
xor
xor
inc
inc
cmp
loopne
xchg
push
test
addr16
mov
cmp
das
inc
repnz
cmp
xchg
mov
xchg
jmpw
(bad)
push
in
xchg
pop
push
rol
cmps
lods
sti
gs
dec
lods
rol
mov
push
movs
or
fwait
lock
lods
add
add
ret
aas
int
adc
pop
call
dec
fistp
inc
sub
clc
add
cdq
fbld
fdivr
test
daa
add
(bad)
(bad)
(bad)
fucomp
and
ret
fdiv
outs
mov
sub
mov
pop
xchg
rol
dec
push
jge
lods
daa
and
inc
std
mov
xchg
adc
mov
adc
(bad)
(bad)
(bad)
jg
push
sub
pop
pop
es
and
loope
dec
sbb
les
inc
and
and
fdiv
(bad)
(bad)
inc
sub
jp
(bad)
ja
xchg
jge
dec
push
inc
test
cmc
push
(bad)
(bad)
(bad)
call
and
and
dec
cld
mov
fld
(bad)
(bad)
(bad)
jmp
rcl
std
sbb
mov
mov
mov
outs
pop
pop
(bad)
inc
fdivr
mov
sahf
sbb
push
jno
popa
imul
and
nop
add
inc
sbb
cld
inc
xor
aaa
aaa
aaa
xor
add
mov
add
push
movs
xchg
mov
add
pushf
pop
inc
fdiv
(bad)
(bad)
(bad)
mov
or
push
pop
ror
cld
push
loop
mov
shr
push
loope
mov
std
pop
shl
and
inc
or
in
cwde
shl
jbe
imul
dec
and
inc
aad
xchg
push
test
pop
push
movs
mov
dec
xchg
sbb
xor
adc
xor
and
in
dec
sbb
and
push
bnd
test
adc
lock
cli
(bad)
dec
cld
adc
jno
(bad)
xchg
mov
add
shl
mov
jmp
adc
pop
mov
pushf
add
and
popa
add
(bad)
(bad)
jg
loope
pusha
stc
retf
adc
clc
sub
xchg
mov
jg
mov
cs
xchg
loopne
pop
mov
sar
(bad)
jmp
xor
xor
push
cmp
aaa
(bad)
push
cwde
cwde
inc
pop
(bad)
mov
xchg
sbb
add
push
cmp
(bad)
dec
or
add
cmp
(bad)
imul
push
fimul
jae
movs
cmp
add
or
sbb
cmps
dec
mov
(bad)
and
in
inc
adc
pusha
mov
dec
pop
test
call
mov
(bad)
out
xchg
cs
shl
clc
(bad)
fist
adc
out
hlt
lahf
push
sbb
out
loop
scas
add
jle
sub
rcl
add
test
loopne
add
movs
dec
xchg
and
sbb
jg
ds
sbb
mov
xor
dec
fdivr
(bad)
inc
outs
inc
jl
xchg
and
pop
fwait
loope
push
cmp
pusha
mov
add
xchg
pop
std
push
adc
adc
sub
add
or
and
(bad)
push
adc
ins
xchg
nop
push
ss
inc
stc
loope
add
aam
sahf
es
vunpcklps
inc
ss
xor
dec
inc
stc
cld
adc
xchg
xchg
push
cld
dec
mov
into
add
scas
jmp
rcl
push
sub
js
jecxz
cld
pop
sbb
aam
mov
aam
dec
dec
fucom
or
lods
rol
mov
in
or
add
ja
pop
dec
adc
les
repz
add
jae
gs
(bad)
(bad)
in
push
test
or
inc
cld
and
mov
push
sbb
(bad)
(bad)
jmp
mov
das
mov
adc
shl
sub
pop
adc
cmps
mov
lahf
dec
dec
aam
inc
(bad)
push
sbb
js
sub
bound
sub
xor
and
dec
movs
and
add
pop
push
sub
or
push
add
nop
jp
les
xchg
or
(bad)
clc
addr16
lods
add
dec
lods
add
add
xchg
icebp
mov
fldcw
push
repz
xchg
and
(bad)
jmp
sbb
add
sbb
sub
push
loopne
or
jl
js
pop
mov
iret
push
or
in
inc
xor
inc
xor
jbe
inc
jle
rol
xchg
shr
lahf
inc
add
sub
sbb
js
jle
push
sbb
mov
adc
pop
push
test
and
jmp
in
dec
adc
xchg
xor
dec
mov
sub
xchg
adc
or
and
sub
pusha
pop
shl
mov
pop
mov
push
test
not
nop
and
cmp
pop
or
adc
push
jae
les
das
mov
in
outs
imul
inc
jb
outs
repz
popa
add
pop
jnp
adc
std
add
dec
bound
ins
pop
push
xchg
ja
test
hlt
lds
add
mov
adc
pop
adc
inc
test
sub
inc
addr16
mov
inc
inc
inc
ja
aas
and
inc
clc
and
pop
or
inc
aam
jg
dec
xchg
jle
dec
sbb
ds
(bad)
in
inc
mov
and
add
loopne
mov
add
stos
js
jne
add
add
push
inc
add
mov
and
test
into
dec
mov
(bad)
(bad)
jg
fucomp
iret
and
xor
je
pop
jbe
retf
jmp
jecxz
pop
xchg
shr
pop
adc
ja
imul
enter
mov
xchg
mov
jmp
(bad)
(bad)
inc
cmp
sub
push
jnp
mov
xlat
dec
lock
cmp
xchg
jo
cmps
sub
sbb
call
xchg
popa
or
push
mov
push
(bad)
(bad)
(bad)
inc
pop
and
test
xchg
lods
mov
icebp
push
mov
push
leave
sbb
add
(bad)
(bad)
(bad)
inc
mov
sub
outs
push
jmp
sub
and
xor
mov
xor
out
(bad)
(bad)
(bad)
inc
jb
sbb
mov
add
xchg
movs
push
ja
int
call
cwde
adc
sub
push
jmp
pop
retf
test
std
add
outs
or
xchg
ins
call
adc
pop
mov
iret
adc
push
cmp
mov
mov
(bad)
(bad)
jmp
inc
mov
inc
jg
shl
in
(bad)
cmps
mov
scas
dec
dec
pop
and
fild
sbb
mov
ss
sbb
adc
hlt
test
mov
xor
mov
mov
dec
sub
push
push
in
dec
fcmovnbe
sar
cli
cdq
add
ss
pop
stos
add
mov
push
(bad)
(bad)
(bad)
fistp
jbe
into
sbb
inc
mov
adc
or
mov
inc
sbb
(bad)
(bad)
(bad)
jmp
mov
sub
push
les
push
xor
or
paddusw
(bad)
(bad)
jmp
cmp
enter
push
jg
mov
std
js
inc
(bad)
fdiv
push
out
cld
or
(bad)
(bad)
cmp
push
(bad)
cld
and
not
cs
rcr
push
cli
jbe
(bad)
(bad)
call
movs
cld
std
mov
jmp
cmp
mov
repz
mov
xlat
(bad)
push
add
pop
ret
xchg
es
mov
dec
push
idiv
sbb
pop
or
(bad)
mov
addr16
stc
stos
clc
loope
cld
fbld
es
cli
push
loope
in
xor
add
jae
outs
xor
inc
pop
or
ret
jns
mov
xor
fld
xor
inc
inc
inc
xor
cmp
ret
xor
mov
in
icebp
outs
retf
xor
xor
xor
xor
cmp
add
leave
or
inc
cli
sbb
mov
cmp
ins
jmp
fdivr
out
add
retf
cmp
sbb
inc
push
add
test
sub
lods
ins
add
jmp
sti
pop
dec
or
inc
xor
out
pop
jp
pop
cmp
out
data16
cli
(bad)
fcomip
retf
loop
into
inc
int3
mov
jb
jnp
out
mov
sub
(bad)
jmp
add
or
ds
je
cmove
out
or
mov
clc
test
pop
push
in
imul
popf
(bad)
repnz
sub
inc
(bad)
(bad)
jg
dec
pop
xchg
cmps
enter
inc
ret
movs
imul
mov
(bad)
(bad)
call
rol
inc
aas
add
fld
loope
sbb
and
mov
jo
inc
push
fnsave
shl
pusha
or
push
data16
push
inc
push
lock
(bad)
(bad)
(bad)
jns
es
xor
imul
cli
sub
daa
test
mov
cmp
pop
inc
push
pusha
fcmovnb
adc
sbb
inc
out
scas
(bad)
(bad)
call
push
mov
pop
jg
mov
xchg
in
fisttp
cli
add
mov
cmp
or
push
ins
xchg
pushf
(bad)
fisttp
mov
adc
add
call
mov
inc
mov
clc
push
mov
mov
inc
mov
dec
jae
lahf
outs
jb
cli
jae
mov
(bad)
adc
(bad)
(bad)
fild
nop
or
mov
neg
fcmovnbe
sub
std
push
call
dec
test
xchg
dec
pop
sbb
das
stos
push
sbb
imul
(bad)
jg
add
out
mov
fst
mov
lods
mov
or
jg
(bad)
fcmovbe
stos
arpl
mov
std
popf
xor
jp
jmp
sbb
push
cmp
fcmovnu
xchg
mov
(bad)
dec
(bad)
shr
call
inc
scas
inc
call
loope
push
push
sbb
ins
xchg
push
call
cld
enter
jecxz
jl
icebp
push
das
sub
adc
iret
hlt
or
das
xchg
cld
push
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
mov
mov
cld
das
add
dec
cmc
pop
(bad)
std
call
mov
mov
mov
inc
(bad)
(bad)
push
or
in
into
push
pop
mov
cmc
in
add
aaa
adc
daa
sub
hlt
stos
popa
adc
(bad)
call
cmps
cmp
dec
das
mov
or
dec
add
pop
nop
cld
or
aaa
inc
aaa
inc
cmp
adc
loope
ja
pop
call
stc
pop
call
sub
adc
out
xchg
cmps
xchg
fild
jmp
lea
dec
(bad)
jmp
in
leave
xlat
bound
xor
or
mov
(bad)
(bad)
dec
mov
xor
jo
xchg
jecxz
dec
dec
push
jmp
mov
(bad)
(bad)
push
inc
in
sbb
jl
xlat
frndint
push
aam
ffree
mov
call
movs
(bad)
push
out
mov
(bad)
call
daa
xor
sub
cmp
sbb
sub
mov
call
jge
xor
mov
sar
repz
cmp
or
(bad)
(bad)
jmp
test
fild
pop
or
add
inc
xchg
push
sbb
fcom
mov
das
pop
(bad)
iret
or
pop
imul
or
cli
add
sbb
fld
sbb
js
(bad)
(bad)
jmp
call
cmp
mov
scas
pusha
push
mov
push
fld
in
inc
and
fiadd
movs
shl
(bad)
(bad)
call
out
or
mov
pop
test
loope
(bad)
jmp
cmp
jne
jp
out
call
test
add
fisttp
call
call
cs
cs
jo
ins
jmp
dec
out
xchg
test
loop
adc
and
xchg
rcr
cs
xor
out
(bad)
call
xor
push
sti
es
cwde
ins
(bad)
sbb
cmc
call
add
sbb
and
les
sbb
dec
(bad)
outs
mov
xchg
mov
pop
popf
xchg
mov
aam
shr
sbb
fwait
or
push
enter
mov
xchg
xor
outs
sti
mov
dec
(bad)
mov
ins
push
pushf
stos
jmp
call
mov
sbb
jmp
dec
(bad)
push
idiv
jo
fsubr
add
mov
arpl
sbb
or
adc
jge
pop
mov
push
fwait
daa
rol
jmp
int
hlt
aas
push
imul
jg
shl
xchg
and
xchg
mov
cmp
cli
in
idiv
loope
or
push
das
pusha
pop
leave
and
pop
jle
adc
and
out
push
rol
(bad)
stos
and
je
out
dec
sub
(bad)
call
mov
sbb
and
sub
hlt
(bad)
jg
pop
cmps
mov
push
(bad)
rol
fdivr
mov
scas
and
push
or
pop
xchg
add
lock
inc
aas
lock
and
sti
(bad)
(bad)
push
call
inc
fs
xchg
popa
mov
mov
mov
pusha
leave
dec
lock
add
(bad)
(bad)
jg
push
dec
xor
retf
mov
mov
xchg
(bad)
jmp
inc
(bad)
dec
ja
out
xchg
mov
dec
out
je
jmp
mov
cmps
push
adc
sbb
(bad)
dec
dec
sti
icebp
out
dec
aaa
or
loopne
int
adc
cmps
dec
inc
popf
jecxz
call
inc
sub
jmp
xor
inc
icebp
pop
mov
ret
jnp
or
pop
xchg
push
cli
push
and
cmp
xor
xor
xor
pop
add
push
rcl
aaa
(bad)
mov
xor
xor
repz
push
push
push
es
sub
and
jmp
add
sbb
pop
nop
adc
xor
sub
stos
(bad)
push
xor
jb
vcvtps2pd
(bad)
imul
jp
sbb
(bad)
(bad)
(bad)
aas
jmp
aas
mov
in
in
add
cmp
mov
stos
repz
jl
std
inc
xchg
(bad)
(bad)
(bad)
call
outs
push
(bad)
mov
aaa
imul
mul
fsubr
(bad)
mov
fs
add
mov
enter
push
out
ret
icebp
inc
call
call
fwait
repnz
inc
ins
add
adc
adc
cmps
imul
xchg
jp
test
(bad)
call
cmp
mov
aaa
jbe
call
push
mov
bnd
(bad)
jg
or
and
cs
scas
ins
mov
pop
gs
shr
out
dec
jge
(bad)
packuswb
sar
jmp
sbb
dec
add
mov
jp
outs
and
and
gs
imul
add
(bad)
(bad)
inc
stos
out
ins
xchg
pop
jmp
mov
mov
mov
inc
aas
inc
call
(bad)
dec
mov
sub
cmp
sbb
inc
xor
jg
push
cld
jp
or
fsubr
out
sbb
imul
mov
inc
(bad)
in
(bad)
call
fwait
inc
push
test
dec
sbb
cdq
imul
cli
add
jge
fiadd
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
dec
mov
mov
rol
adc
inc
mov
inc
call
cli
jbe
sub
pop
fwait
xchg
ror
jo
outs
push
call
aaa
cld
(bad)
inc
pop
(bad)
cmps
pop
arpl
loope
jmp
cmps
aas
xlat
mov
rcr
or
daa
(bad)
(bad)
(bad)
call
cmp
lahf
jno
loopne
ins
mov
rol
pop
mov
push
pop
jmp
(bad)
(bad)
fisttp
gs
mov
jbe
(bad)
xchg
pop
xchg
test
ret
cmp
mov
ja
(bad)
(bad)
(bad)
jns
loop
(bad)
mov
aaa
jb
sub
inc
(bad)
es
inc
pop
xchg
in
es
push
js
aad
(bad)
(bad)
(bad)
push
mov
mov
inc
stc
cmps
sub
std
inc
aas
gs
mov
push
jmp
jo
pop
pushf
std
mov
imul
ins
cli
pusha
inc
jmp
and
sbb
pop
cmc
sub
outs
adc
mov
mov
jmp
call
inc
fs
push
iret
mov
fisttp
pop
adc
sbb
cmp
jae
add
sbb
nop
(bad)
jae
jne
(bad)
in
leave
mov
xor
xor
add
movs
mov
add
cdq
sbb
mov
imul
pop
or
sbb
idiv
xchg
mov
sub
and
inc
adc
and
mov
or
or
out
aaa
jecxz
cs
scas
mov
(bad)
data16
push
ficomp
loopne
(bad)
(bad)
call
and
push
fwait
mov
fidivr
cmp
sbb
arpl
push
(bad)
cmp
mov
mov
clc
or
cli
cs
mov
jnp
retf
(bad)
inc
push
loop
addr16
std
popa
push
push
out
clc
outs
(bad)
dec
sbb
inc
inc
pop
inc
sahf
sub
bound
sbb
popf
ror
jmp
sbb
ss
cmps
xchg
out
xlat
sbb
lds
jae
inc
push
mov
in
adc
cmp
xchg
retf
(bad)
(bad)
(bad)
jmp
(bad)
fisub
shl
loope
pop
daa
push
dec
lods
fs
retf
fwait
ror
(bad)
jmp
sub
popf
jno
fisubr
jge
imul
sahf
stc
xchg
retf
daa
push
push
and
mov
cld
sub
push
mov
data16
sub
push
add
daa
aam
fnsave
(bad)
(bad)
(bad)
push
or
mov
jecxz
adc
cdq
push
fs
stos
imul
xchg
mov
(bad)
call
pop
es
iret
adc
ficom
pop
jbe
stos
inc
jmp
dec
inc
xor
out
daa
xchg
stos
(bad)
nop
dec
pop
and
cwde
inc
daa
repz
mov
dec
into
xchg
mov
ins
test
int
nop
fist
xlat
push
leave
pop
fs
(bad)
fidiv
jle
scas
shr
adc
leave
je
mov
(bad)
call
push
popa
retf
hlt
in
popf
pushf
int3
in
xchg
int3
aas
test
repz
xor
sub
jp
push
hlt
dec
adc
mov
mov
dec
pop
gs
jle
(bad)
jg
or
aaa
inc
mov
xchg
mov
xchg
jnp
xchg
leave
inc
dec
ins
cmp
movs
daa
pop
add
inc
xchg
mov
call
sbb
(bad)
(bad)
mov
mov
jnp
mov
sbb
mov
ins
jecxz
js
(bad)
(bad)
inc
jle
dec
leave
bound
out
push
dec
cli
mov
pop
jmp
cmps
mov
jmp
cld
cmp
out
cmp
cdq
nop
push
scas
test
addr16
daa
(bad)
jb
cld
mov
sar
dec
std
iret
xor
inc
nop
repz
loope
mov
mov
add
jns
mov
push
sbb
dec
test
aam
cmp
and
or
push
or
xor
or
addr16
push
jmp
inc
sbb
add
add
outs
push
inc
adc
(bad)
(bad)
(bad)
cmp
inc
add
dec
mov
and
sub
sbb
push
scas
adc
(bad)
jmp
mov
cmp
jl
es
xor
iret
in
and
shr
pop
pop
(bad)
(bad)
(bad)
call
lahf
(bad)
jg
out
movs
imul
stos
mov
inc
mov
push
outs
aaa
push
mov
jae
push
outs
clc
call
sti
push
pop
in
scas
out
adc
and
mov
enter
call
fadd
jns
mov
into
out
push
jb
xchg
cmp
push
std
dec
leave
in
int
add
fucomp
stc
lods
inc
stos
sahf
in
int3
cs
fdivrp
mov
(bad)
(bad)
jg
and
fldlg2
sar
ins
add
enter
push
pop
adc
add
cmp
jnp
repz
jecxz
(bad)
mov
pop
cdq
mov
test
ins
xor
lea
clc
(bad)
js
loopne
rcr
jne
repz
sbb
(bad)
(bad)
(bad)
jmp
push
or
adc
add
sbb
int
push
dec
rcr
repnz
popa
fisub
(bad)
(bad)
dec
imul
idiv
mov
mul
test
inc
call
(bad)
or
add
pop
sub
(bad)
(bad)
call
stos
outs
cmps
xchg
(bad)
lock
add
scas
cdq
dec
or
mov
jne
sub
cld
(bad)
mov
imul
fldcw
pop
icebp
(bad)
(bad)
jg
test
jnp
lock
add
xchg
and
push
(bad)
inc
push
sbb
and
add
sub
push
fidivr
dec
inc
mov
(bad)
(bad)
fistp
and
rcl
pop
cmp
adc
dec
add
push
cmp
popa
jnp
(bad)
fild
inc
div
lock
sub
mov
(bad)
(bad)
(bad)
push
rcr
sub
lods
jmp
push
into
ror
dec
sub
jl
and
fs
jb
repz
test
push
mov
cmp
test
mov
fcmovnbe
(bad)
sub
mov
mov
dec
cmp
xlat
shr
mov
ss
(bad)
rcr
or
ja
push
and
pusha
ds
pop
popa
push
xchg
and
jmp
cwde
ja
and
add
popa
sbb
mov
push
(bad)
mov
xchg
fs
mov
arpl
arpl
dec
cdq
mov
mov
xchg
adc
or
in
aad
jg
fcomip
(bad)
jg
(bad)
jl
mov
gs
out
mov
loop
test
popa
inc
(bad)
call
fwait
cmc
cmp
sbb
mov
dec
xor
icebp
imul
push
fcmovbe
loopne
(bad)
and
or
or
cmp
loopne
addr16
pop
pop
in
popa
lock
xor
(bad)
(bad)
mov
add
(bad)
fsincos
add
shr
das
aad
fild
std
lahf
shl
cld
pop
icebp
(bad)
(bad)
cmp
dec
out
(bad)
cmc
jecxz
ja
jb
mov
mov
sub
aas
pop
pop
(bad)
(bad)
(bad)
(bad)
jmp
jmp
jmp
mov
fs
push
leave
out
push
imul
adc
xchg
xlat
int
jg
jae
jg
mov
push
mov
das
cmps
stos
es
push
push
add
mov
add
xor
inc
xor
aaa
and
add
sub
iret
lods
call
jo
xor
mov
xchg
mov
(bad)
(bad)
(bad)
inc
mov
or
jno
mov
inc
inc
add
inc
sbb
rcl
lock
(bad)
(bad)
(bad)
call
les
xchg
popf
ins
jbe
jno
arpl
int
(bad)
(bad)
fisubr
shl
and
in
(bad)
(bad)
(bad)
call
dec
inc
pop
lods
xchg
test
mov
xchg
out
rol
hlt
xchg
clc
mov
inc
pop
in
push
(bad)
movs
call
shl
test
sahf
push
clc
add
dec
sub
push
test
imul
jecxz
mov
(bad)
(bad)
(bad)
cmp
xor
cmp
inc
push
dec
test
aam
push
imul
sub
mov
pop
lds
(bad)
(bad)
(bad)
jl
sahf
cmp
into
adc
out
sbb
data16
gs
dec
nop
sbb
dec
fstp
pop
xor
(bad)
(bad)
inc
out
and
test
mov
pop
inc
jbe
movs
xor
cld
(bad)
(bad)
(bad)
jmp
(bad)
loop
push
adc
adc
jae
mov
setae
add
mov
pop
cmp
(bad)
(bad)
(bad)
inc
cwde
mov
add
or
mov
(bad)
push
pusha
mov
retf
dec
popf
adc
das
sub
cmp
and
fimul
aad
push
shr
xchg
sbb
(bad)
(bad)
(bad)
push
in
inc
or
and
inc
sub
pop
xor
ins
mov
daa
stos
pop
and
retf
std
(bad)
jmp
dec
in
pop
push
cwde
aaa
in
or
xor
or
gs
aas
mov
push
rcl
data16
push
and
call
shl
mov
mov
dec
fist
mov
push
xchg
pop
(bad)
jb
sbb
mov
addr16
(bad)
(bad)
(bad)
inc
mov
lods
(bad)
stos
stos
gs
push
test
or
jl
popa
pop
test
cmps
into
mov
push
fcomip
cmp
imul
hlt
sub
xchg
and
adc
(bad)
sbb
mov
(bad)
cmp
dec
mov
jle
es
sar
ja
pusha
mov
inc
sti
es
lods
xlat
jmp
lock
in
fcmovu
cdq
ret
int3
pop
test
add
jnp
add
pop
lock
daa
jmp
mov
out
adc
out
fisub
cdq
(bad)
push
je
mov
call
push
xor
jno
xor
gs
mov
call
mov
cmp
hlt
mov
push
clc
(bad)
(bad)
cmp
fnstenv
icebp
hlt
shr
into
jbe
(bad)
(bad)
call
retf
fdivp
ret
icebp
lock
call
stos
mov
jmp
ins
pop
(bad)
fild
pusha
pop
fdiv
xor
push
jne
and
std
(bad)
jmp
pusha
ss
arpl
adc
cld
(bad)
hlt
sbb
mov
mov
sbb
or
inc
scas
or
add
dec
(bad)
dec
dec
es
xchg
push
and
rcl
add
repz
lods
stos
xor
dec
mov
push
mov
enter
cvtps2pi
inc
push
xor
les
or
and
and
xor
xor
cwde
sbb
fwait
xchg
or
pop
jbe
add
imul
shl
adc
push
cmp
and
bound
and
sbb
dec
add
pop
jb
ja
lods
or
popa
mov
sbb
add
rcr
test
loop
fwait
and
add
inc
sbb
dec
aam
fld
sbb
mov
and
or
adc
push
fstp
nop
push
xchg
loopne
inc
or
or
aas
push
add
dec
lahf
adc
push
push
xor
inc
push
push
dec
push
inc
movs
add
adc
and
icebp
add
mov
or
inc
fld
xor
xor
shl
repnz
inc
dec
mov
push
inc
in
popa
mov
adc
aad
add
hlt
cmp
mov
or
mov
gs
sub
xlat
push
pop
mov
and
jmp
adc
shr
cmp
xor
out
stos
inc
enter
add
dec
pop
or
fidiv
mov
inc
lock
push
add
and
ins
push
jmp
dec
loop
jns
dec
test
inc
jns
arpl
ret
sbb
and
and
push
add
popa
pop
and
idiv
ds
ds
pusha
outs
adc
addr16
movs
adc
cmp
jb
cmp
imul
inc
stc
mov
leave
xor
mov
test
daa
xor
sbb
push
xchg
fadd
enter
dec
mov
cmp
scas
mov
(bad)
(bad)
(bad)
inc
sbb
mov
clc
or
inc
push
outs
push
push
and
pop
mov
aaa
pop
lods
in
loop
(bad)
(bad)
(bad)
call
inc
sbb
pop
and
mov
mov
out
mov
jbe
(bad)
(bad)
(bad)
call
int3
mov
out
mov
ss
mov
inc
push
mov
adc
and
or
pop
mov
(bad)
(bad)
inc
popf
jo
imul
loope
inc
cmp
daa
shr
mov
iret
inc
and
pop
cmc
daa
sbb
(bad)
(bad)
(bad)
dec
push
imul
and
test
xchg
jp
dec
lods
cdq
jle
lods
sub
es
jno
pop
inc
adc
(bad)
(bad)
jnp
mov
aas
jno
dec
inc
adc
movs
sbb
mov
cli
(bad)
call
push
mov
sub
fisub
xchg
mov
(bad)
(bad)
(bad)
fistp
aam
xchg
ret
mov
hlt
cmps
adc
daa
push
imul
mov
pop
jl
fs
lahf
(bad)
(bad)
(bad)
(bad)
jmp
neg
out
hlt
ds
mov
mov
xchg
and
mov
(bad)
(bad)
jmp
push
cld
movs
inc
vorps
fidiv
std
lock
ja
call
add
xlat
outs
enter
repz
xor
mov
or
stos
(bad)
(bad)
(bad)
call
sub
mov
sbb
daa
xor
mov
das
bound
cmp
dec
cld
dec
add
mov
aad
dec
ret
inc
or
rcr
or
(bad)
fadd
and
pop
add
mov
data16
cmp
jae
push
xor
daa
and
mov
adc
nop
pop
adc
nop
add
mov
or
lds
jge
pop
dec
test
and
inc
and
xor
add
xchg
push
xor
iret
repz
add
and
ss
mov
shl
or
cmp
mov
mov
xor
push
and
test
out
add
and
adc
lds
push
adc
push
pushf
push
sub
pop
and
pop
test
or
sbb
fld
adc
dec
adc
mov
loopne
push
add
iret
adc
mov
bound
dec
add
(bad)
inc
inc
ja
add
adc
jno
mov
inc
push
jnp
add
mov
adc
stos
scas
mov
outs
or
cmps
push
ror
or
sbb
add
scas
outs
jl
cmps
mov
add
add
add
fdivr
test
and
sbb
fs
(bad)
and
xchg
and
or
jg
fs
fs
fimul
nop
xchg
inc
mov
leave
add
xlat
inc
cdq
pop
inc
or
sbb
into
add
nop
inc
outs
sbb
adc
cmp
(bad)
(bad)
popa
add
data16
daa
pop
fimul
xor
rcl
pop
pop
mov
fs
dec
ret
mov
adc
dec
xchg
pop
add
add
ins
ins
cs
and
pusha
mov
outs
loopne
adc
adc
push
test
add
xor
cmp
enter
push
and
cwde
pop
push
add
outs
fwait
push
add
push
gs
movs
push
dec
mov
and
aam
or
movs
xor
adc
add
xor
dec
inc
xor
pop
xor
jmp
shr
sbb
in
and
mov
add
jmp
inc
cmp
retf
mov
icebp
sub
outs
imul
shr
enter
mov
inc
es
push
mov
test
xor
and
pop
inc
and
xor
jo
jbe
movs
sub
adc
mov
add
call
sub
jne
test
xchg
test
jmp
xor
or
add
jne
xchg
pop
xor
adc
jno
cwde
add
pop
pop
xchg
pop
shr
xchg
cdq
or
sbb
pop
movs
add
nop
or
in
nop
mov
inc
pusha
les
loope
add
jnp
inc
dec
scas
jmp
and
stos
adc
icebp
add
stos
mov
sbb
adc
nop
cmp
xchg
and
add
bound
mov
or
sbb
inc
jb
test
pop
add
enter
mov
out
loopne
push
xor
and
or
push
dec
mov
fwait
sub
aas
fist
pop
sub
sub
add
lods
add
push
inc
fisttp
xor
pop
not
add
add
sbb
(bad)
imul
movs
stos
fst
jns
inc
sub
cli
add
imul
imul
mov
rol
xchg
(bad)
(bad)
mov
stc
mov
jp
dec
add
stc
add
or
inc
aas
xchg
add
bound
fcmovne
add
add
inc
enter
or
and
loope
dec
imul
clc
add
call
sub
ss
fiadd
les
pop
dec
imul
mov
pop
add
shl
xchg
push
cmps
sub
sbb
shr
fadd
and
cmps
mov
sub
daa
add
or
fist
jg
xor
adc
jno
cs
mov
imul
(bad)
(bad)
jmp
mov
leave
push
mov
mov
and
sbb
pop
stos
test
(bad)
xchg
pop
and
(bad)
(bad)
(bad)
(bad)
fild
xchg
lods
or
jmp
mov
sti
imul
add
push
stc
xor
cmps
in
(bad)
(bad)
(bad)
push
add
jl
pop
lods
push
ret
xor
add
push
jecxz
pop
scas
xlat
mov
data16
mov
lahf
cmps
jge
ja
sbb
add
stos
stos
in
pop
leave
mov
fneni(8087
mov
xchg
pop
adc
mov
sbb
push
fsub
(bad)
(bad)
(bad)
aas
das
push
aam
inc
push
jg
cmc
aas
iret
ins
out
aas
jecxz
pop
xor
daa
int3
ds
aas
(bad)
call
std
xor
ret
mov
out
pop
outs
(bad)
pop
mov
ss
cdq
push
(bad)
(bad)
(bad)
cmp
add
outs
nop
sub
fdiv
lods
jnp
jae
jno
sbb
scas
icebp
lock
sbb
(bad)
(bad)
mov
icebp
clc
sbb
clc
sahf
popf
mov
(bad)
mov
pop
repnz
lahf
mov
push
jecxz
std
mov
inc
dec
aas
out
xchg
aas
out
cld
xor
sbb
es
or
push
(bad)
jmp
imul
cmp
mov
jbe
ins
(bad)
and
(bad)
(bad)
dec
cmp
popa
fbstp
arpl
pop
stc
jmp
or
in
cmp
int3
sbb
ins
inc
push
(bad)
in
pop
icebp
fiadd
ja
(bad)
(bad)
(bad)
fistp
into
je
jno
stc
sbb
ja
rcr
pop
out
shl
test
(bad)
cld
mov
xchg
jns
(bad)
xor
add
sub
retf
jmp
or
int
pop
add
scas
aad
fmul
fsubr
mov
movs
xlat
and
push
pop
sub
retf
fbstp
mov
lahf
mov
shl
fst
enter
ins
out
inc
pop
cmps
sbb
inc
cld
push
pop
and
rcr
fsubr
mov
pop
xor
push
pop
mov
and
push
and
push
sub
sbb
push
add
lahf
xchg
fnstcw
inc
sbb
adc
adc
daa
repz
test
arpl
shl
jae
loope
push
aaa
push
test
sub
push
das
push
sub
in
xor
adc
cmp
leave
add
push
xor
mov
mov
lahf
pop
sbb
push
pop
add
adc
sub
sub
dec
jno
fs
sbb
out
or
ins
test
test
and
sub
add
xchg
sub
add
sub
add
dec
js
or
adc
inc
(bad)
nop
iret
(bad)
sbb
movs
inc
sbb
sub
mov
out
fs
arpl
and
inc
retf
mov
jae
outs
imul
mov
aaa
inc
and
push
add
outs
add
inc
jns
sub
add
push
pop
mov
sub
sbb
fcmovb
sub
push
pop
leave
xchg
mov
clc
add
ja
outs
ins
popa
or
add
ja
mov
push
sub
or
inc
sbb
int3
ins
mov
movs
pop
outs
mov
inc
xchg
adc
sbb
adc
retf
cmp
and
mov
fwait
dec
cmp
or
jp
pop
push
daa
cmp
xchg
inc
int3
pushf
shl
add
push
call
imul
inc
or
es
add
mov
dec
pop
std
je
daa
add
outs
mov
js
add
aam
and
jns
inc
enter
push
push
loop
mov
mov
jl
xor
sub
ss
xchg
test
cld
sbb
push
into
shl
sbb
pop
sub
inc
gs
shr
push
je
sbb
mov
push
dec
inc
jo
gs
push
retf
sbb
mov
push
mov
jmp
xchg
hlt
sbb
ins
ins
cwde
inc
rcl
das
stos
fisubr
mov
push
inc
aaa
xor
sub
in
rol
and
pop
mov
xor
add
dec
and
aam
sbb
inc
daa
lds
pop
or
int
ss
add
inc
(bad)
sbb
and
push
mov
shl
push
daa
sbb
and
push
fistp
dec
pop
push
stos
inc
ret
and
fild
shl
iret
pusha
in
loopne
addr16
xchg
sbb
mov
dec
pop
inc
jp
push
aad
ret
xchg
sysexit
xchg
sbb
mov
sub
sbb
imul
inc
adc
lea
add
xchg
cmp
test
dec
fs
and
pusha
(bad)
mov
dec
sub
adc
fs
push
cmps
ins
inc
push
loope
or
mov
add
or
mov
(bad)
das
test
add
jbe
fwait
or
arpl
adc
pop
stc
push
fistp
push
mov
rcr
sub
mov
mov
sbb
and
sbb
sbb
xor
arpl
pop
push
jo
daa
sbb
sbb
jb
outs
xor
aaa
loop
pop
je
retf
icebp
call
inc
icebp
sub
fidivr
nop
push
add
loop
mov
add
shr
(bad)
shr
stos
xchg
dec
js
ret
push
jne
pop
add
adc
jge
and
cdq
push
stos
jmp
stos
adc
ins
movs
push
add
dec
fstp
push
sbb
jne
lds
sbb
outs
loopne
sbb
je
sub
push
mov
loope
inc
inc
and
dec
shl
cmp
ins
test
cmp
fld
xlat
and
not
jns
xchg
mov
cmp
(bad)
mov
push
xchg
inc
cmp
xchg
clc
mov
fld
maxps
push
xchg
sub
nop
pop
push
inc
inc
and
dec
push
nop
jmp
sbb
stos
dec
mov
sub
sub
jle
retf
or
sub
mov
outs
das
xor
test
or
pop
push
sbb
inc
and
outs
das
and
sbb
dec
ins
(bad)
pusha
adc
cmps
ja
ja
and
or
inc
sub
clc
dec
and
cmps
xor
mov
adc
mov
cmps
lahf
mov
xchg
lahf
dec
in
adc
int
cmp
push
adc
cmp
jae
inc
ins
xor
ins
cs
dec
or
dec
jb
ss
jbe
add
dec
or
mov
pop
ret
or
dec
and
and
dec
mov
test
adc
adc
(bad)
push
sbb
cmp
sbb
cmps
inc
jb
jmp
idiv
sti
out
imul
out
sbb
inc
pop
xchg
cmc
arpl
sbb
push
fwait
cmps
gs
call
ins
adc
mov
adc
jns
outs
adc
jns
pusha
hlt
mov
mov
xor
jno
cmp
sbb
push
push
mov
push
mov
jo
cld
fistp
inc
shl
inc
inc
sti
sub
jnp
inc
dec
pop
and
jo
cwde
pushf
mov
fist
fsubr
ins
pop
pusha
ficomp
xchg
movs
sti
push
push
aad
inc
imul
pop
adc
xor
mov
mov
sbb
das
push
imul
test
sub
sub
iret
push
les
or
fstp
pop
adc
cdq
jge
ret
mov
out
sub
std
xchg
lods
arpl
sbb
mov
add
fst
xchg
mov
hlt
mov
ins
(bad)
jmp
sbb
xchg
and
push
aad
push
add
ret
mov
mov
xchg
push
addr16
inc
sbb
dec
dec
test
in
inc
lods
pusha
sub
sbb
cmp
daa
leave
sbb
sub
(bad)
pop
push
push
je
les
xchg
mov
jo
jmp
inc
mov
sub
xor
in
out
imul
mov
loopne
sub
dec
push
scas
mov
dec
outs
dec
jae
les
dec
adc
jae
repz
ror
aad
adc
call
mov
shl
jge
add
ins
popa
sub
mov
sub
xchg
sbb
or
and
pop
addr16
inc
mov
les
arpl
cmp
rol
ins
stc
test
mov
push
shl
pop
add
aad
xchg
sbb
xchg
adc
add
and
test
jae
js
mov
xchg
mov
pop
inc
jno
inc
push
pushf
in
xchg
or
enter
mov
inc
aam
data16
rcl
and
xor
inc
and
pusha
adc
dec
jno
test
dec
jne
data16
sbb
xor
mov
sbb
aaa
ror
ret
pop
clc
in
daa
or
stos
mov
das
cdq
adc
adc
dec
mov
and
sub
mov
loopne
cs
push
stc
cs
adc
sub
pop
push
ret
cdq
push
xchg
dec
(bad)
jo
mov
into
ins
fisub
xchg
fcom
xor
adc
pop
xchg
push
dec
push
jg
or
test
add
mov
ins
outs
xor
movs
lea
sbb
add
loope
add
adc
test
je
fwait
retf
pop
jmp
sbb
inc
test
es
aad
lock
jg
dec
ror
pop
cwde
pop
and
mov
dec
scas
inc
arpl
addr16
loop
add
sub
dec
pop
mov
jecxz
xor
fsub
pop
hlt
xchg
out
leave
ins
fsub
or
imul
mov
dec
inc
outs
pop
enter
and
loop
or
sub
xchg
call
push
mov
aaa
fadd
jno
push
cwde
mov
and
push
fld
test
sbb
je
push
push
int3
jae
retf
jbe
jnp
std
push
and
das
and
xchg
mov
dec
and
xor
jae
cli
and
je
jne
and
sbb
imul
daa
inc
(bad)
std
adc
sbb
(bad)
fmul
sbb
mov
pop
cmps
xchg
jae
pop
pop
stos
push
jb
ffreep
sbb
fldcw
fsubr
adc
ins
sbb
dec
imul
icebp
push
pop
sahf
adc
mov
and
scas
sub
sub
lods
cmp
stos
mov
inc
mov
mov
jae
xor
lds
push
test
call
xor
sbb
mov
ins
jae
(bad)
jmp
inc
push
jmp
cdq
mov
data16
lods
jge
mov
push
pop
push
sbb
jg
xor
test
popf
mov
cmp
or
jecxz
fstp
sbb
test
pop
(bad)
push
push
inc
leave
jno
enter
inc
arpl
or
adc
adc
and
fwait
sbb
push
fild
pop
call
sbb
and
mov
sbb
mov
scas
pop
daa
xchg
mov
inc
mov
aam
cmp
and
and
mov
add
add
stos
push
inc
adc
test
enter
or
sti
inc
xor
cmp
fldenv
xor
lods
add
sbb
adc
jge
mov
dec
lock
das
sub
sub
add
pop
or
and
ror
cmc
xchg
movs
or
sbb
inc
in
push
out
mov
sbb
pop
call
gs
push
test
shl
add
and
popa
push
fcmovnb
fcom
sbb
stos
mov
and
stos
mov
in
dec
sbb
data16
fldenv
ins
pop
imul
retf
push
mov
jno
pop
pop
pop
or
sbb
mov
push
jo
xor
in
xor
pop
jo
xchg
dec
xor
dec
fist
dec
outs
ja
pop
pop
sbb
outs
pop
and
call
push
dec
lds
jo
std
pusha
shr
aam
or
js
stos
xchg
inc
addr16
and
out
push
gs
dec
sar
lds
or
mov
sbb
add
dec
pop
sub
and
and
mov
mov
daa
outs
add
dec
mov
sti
xchg
jb
pushf
xchg
scas
xor
xchg
imul
lods
adc
mov
inc
and
pop
xor
rcl
arpl
cmp
dec
sti
push
daa
and
add
adc
and
nop
xor
hlt
adc
inc
stc
push
or
fwait
cmp
jns
add
in
mov
or
push
mov
xor
nop
adc
add
or
adc
mov
add
sbb
adc
shl
cs
scas
mov
in
(bad)
out
les
add
and
imul
enter
xchg
in
jnp
jl
fisub
cli
and
or
bound
pop
xchg
fcom
adc
adc
dec
xchg
mov
aaa
lock
ss
ds
mov
add
adc
jb
jno
add
inc
jnp
sahf
inc
dec
gs
and
sbb
push
dec
cmp
xchg
inc
jno
fwait
inc
jae
dec
addr16
outs
xchg
adc
das
and
xchg
lock
sbb
add
mov
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
pop
add
call
push
