stc
fnsave
cld
test
jne
mov
ja
enter
inc
pop
push
jg
dec
push
addr16
pop
leave
je
sbb
es
mov
popa
daa
mov
pop
jno
aaa
sub
enter
in
sbb
xor
jg
ins
jge
ss
push
repz
mov
push
push
jg
push
jge
mov
jne
mov
adc
je
enter
or
sub
dec
daa
and
jne
mov
mov
shl
or
xchg
inc
clc
fwait
xchg
fimul
fwait
ror
popf
xchg
sub
inc
pop
jns
inc
lods
xor
add
(bad)
mov
jno
enter
enter
(bad)
in
xor
xchg
xor
imul
pop
(bad)
cld
mov
sahf
(bad)
fnstenv
sbb
or
or
xchg
xor
inc
sbb
shl
pop
rol
pop
jno
mov
ror
pop
jno
lahf
dec
enter
jno
cmc
and
xor
js
jno
ins
nop
dec
dec
js
jno
cmc
sub
xor
aaa
dec
(bad)
jae
inc
cli
sub
adc
add
gs
cld
mov
and
dec
fnstenv
mov
fimul
jg
adc
cld
int3
xchg
cli
xor
loop
clc
rcl
cld
cld
xchg
cwde
adc
or
add
inc
jbe
sbb
ss
hlt
or
sbb
sbb
mov
sbb
or
jg
fld
mov
lods
xor
sbb
cdq
push
mov
jno
or
js
mov
sbb
mov
std
or
cmp
enter
shl
addr16
jno
in
popa
jno
dec
fnstenv
leave
sbb
das
sub
icebp
sub
dec
and
mov
jo
enter
imul
jp
sub
jbe
sbb
shl
sbb
sbb
enter
mov
jno
enter
fmul
and
cdq
daa
adc
push
adc
push
ja
les
dec
fnstenv
enter
loopne
xor
cmp
xor
mov
jno
std
xor
inc
push
js
jno
std
cmp
push
arpl
jno
mov
fldcw
add
or
sbb
jno
enter
popf
xchg
xchg
iret
rcl
ja
mov
ja
dec
daa
and
adc
xchg
mov
jnp
mov
emms
jno
enter
enter
enter
mov
cmc
arpl
enter
jo
push
ja
jmp
aaa
xchg
mov
xor
add
stc
fstp
repnz
(bad)
jns
leave
sbb
(bad)
cdq
sahf
mov
ror
dec
cdq
jb
sbb
jo
pop
mov
inc
(bad)
jnp
mov
and
jo
enter
cmc
loop
ja
imul
(bad)
es
jno
aas
cli
clc
repnz
dec
ret
(bad)
inc
mov
inc
sub
cdq
dec
daa
and
inc
jle
pushf
sahf
adc
in
cli
(bad)
loope
sbb
(bad)
sbb
sbb
push
cdq
retf
jno
push
pushf
mov
out
sbb
jne
or
dec
mov
loop
imul
add
and
or
xchg
mov
mov
sbb
jne
or
addr16
mov
jo
iret
movs
jae
enter
dec
fidivr
das
enter
mov
mov
dec
icebp
jge
lahf
mov
leave
inc
stos
sbb
xor
inc
(bad)
xor
jno
enter
aaa
push
jno
inc
fstp
mov
sub
arpl
push
add
aaa
push
jno
inc
fisttp
push
enter
mov
adc
mov
js
xor
xchg
dec
inc
mov
hlt
and
and
lahf
xchg
add
addps
cld
(bad)
in
mov
(bad)
and
loop
add
hlt
lods
jmp
jno
movs
sub
cld
(bad)
in
mov
(bad)
and
loop
add
inc
aaa
div
pop
jns
jbe
jae
jbe
dec
dec
sbb
xor
in
repnz
leave
sbb
add
aaa
pop
test
lea
je
(bad)
loope
dec
jo
sub
pop
cmp
cmp
dec
jbe
push
fisttp
rcl
hlt
sbb
add
and
mov
lahf
or
aaa
sbb
mov
iret
fcomp
add
and
jge
xchg
or
(bad)
and
inc
cwde
lea
loope
clc
loop
loop
mov
sbb
xor
xchg
mov
add
xor
hlt
sbb
add
and
add
fcomi
jbe
loop
ja
push
clc
and
clc
(bad)
loope
cli
and
xchg
gs
inc
mov
loop
xor
ret
inc
cwde
lea
xor
(bad)
test
xor
(bad)
or
inc
lds
push
cdq
je
enter
inc
cwde
jo
aaa
loop
sub
clc
repnz
and
jge
(bad)
loope
dec
mov
leave
cmps
in
sbb
clc
xor
xchg
xor
stc
jmp
push
and
or
xchg
or
jb
cmp
fmul
aas
div
push
xchg
xchg
mov
or
call
test
rcr
outs
enter
inc
pop
test
(bad)
in
xchg
cmp
xor
inc
pop
lea
xchg
inc
mov
es
dec
daa
and
jge
(bad)
loope
pop
xor
cli
xor
mov
or
push
and
push
ja
xchg
or
jb
cmp
fmul
aas
div
push
xchg
xchg
mov
or
call
test
(bad)
sbb
clc
xor
xchg
xor
aaa
sbb
xor
(bad)
enter
add
and
sub
xchg
add
inc
inc
gs
loope
dec
cmp
xchg
mov
or
ret
mov
cli
xor
adc
jae
xchg
mov
xchg
cmp
(bad)
mov
add
pushf
(bad)
pop
dec
test
std
lock
ss
sub
sub
xchg
xchg
es
dec
daa
and
jns
sbb
loopne
inc
in
pop
mov
test
jge
xchg
cld
xor
cmc
aaa
mov
loop
xor
sub
mov
sub
pop
jno
and
mov
xor
and
and
mov
and
(bad)
aas
cli
clc
xor
xchg
mov
xchg
inc
mov
es
dec
daa
and
jge
inc
add
ja
jmp
aaa
push
jno
inc
fistp
ja
sbb
jno
sahf
loop
jg
sbb
add
movs
xor
enter
inc
pop
mov
pand
enter
xchg
inc
mov
es
dec
es
mov
mov
idiv
test
ja
sahf
dec
jmp
pop
jno
mov
pop
jno
inc
add
aaa
jae
imul
loop
jg
sbb
and
xchg
mov
inc
ficomp
sub
xchg
xchg
hlt
and
and
lahf
xchg
add
ja
dec
(bad)
jmp
xchg
mov
out
sbb
sbb
mov
xor
cwde
jne
xchg
mov
jno
or
inc
or
js
(bad)
xor
mov
sahf
dec
sbb
sub
sbb
(bad)
in
and
inc
fiadd
rol
jmp
xchg
xor
rcr
inc
inc
in
repnz
dec
sbb
sub
cld
into
loop
cld
fsub
gs
enter
inc
fdivp
cwde
adc
stc
fnstsw
mov
inc
mov
idiv
xor
dec
dec
cdq
jb
loop
cs
(bad)
sub
clc
leave
pop
enter
jl
jno
fwait
dec
es
inc
outs
rcr
lds
inc
fdivp
dec
mov
xor
loop
ja
sbb
push
mov
xor
mov
dec
xor
adc
mov
lea
ror
jl
jno
or
dec
jmp
pop
jno
mov
pop
jno
inc
sub
call
adc
mov
sbb
mov
(bad)
cmc
out
add
mov
nop
hlt
xchg
aaa
jecxz
daa
and
mov
cmc
loop
ja
push
shl
leave
sbb
jns
enter
fwait
sbb
and
lea
cli
dec
aaa
dec
ins
dec
sbb
jno
dec
pusha
lea
cwde
pop
jbe
sbb
lock
mov
xor
loop
ja
xor
scas
aas
(bad)
clc
repnz
(bad)
mov
test
test
popa
lds
in
popa
lds
jl
jno
(bad)
in
mov
jae
ja
sbb
jno
inc
lds
inc
ficom
mov
std
jae
inc
pop
mov
(bad)
cmc
ror
jl
jno
(bad)
in
and
mov
xchg
xchg
into
int3
sbb
cli
or
xchg
push
jae
xchg
dec
mov
xchg
test
scas
aaa
jecxz
dec
sahf
or
enter
push
mov
nop
xor
cwde
xchg
dec
mov
and
enter
xor
mov
call
cli
dec
ror
imul
inc
and
jno
inc
pop
lea
push
lds
enter
icebp
cwde
lods
mov
loop
dec
dec
out
lock
enter
push
mov
jp
push
mov
inc
mov
xchg
xor
icebp
pop
mov
xor
mov
sahf
push
jmp
pop
jno
jo
jp
enter
dec
leave
mov
xchg
inc
mov
hlt
and
and
lahf
mov
lock
cmp
ja
jmp
test
push
sub
sbb
cli
xor
popf
dec
inc
int3
adc
out
sbb
gs
loope
ja
sbb
xchg
psadbw
(bad)
cmp
aas
dec
in
add
pop
jb
hlt
sub
jae
js
ja
pop
jns
mov
jo
mov
cmc
imul
repnz
xchg
mov
inc
fidiv
ja
cmc
pop
xor
js
mov
sbb
add
xor
mov
jo
inc
(bad)
adc
xchg
psadbw
adc
dec
cmp
pushf
ficom
inc
dec
icebp
bound
clc
pusha
jne
lods
loope
(bad)
xor
dec
pop
cli
xor
popf
dec
inc
enter
aaa
loop
hlt
lods
loope
hlt
mov
jno
(bad)
loop
jg
sub
mov
or
enter
mov
sbb
jno
mov
jmp
cmps
sbb
sbb
sbb
inc
sbb
sbb
mov
add
xor
hlt
sbb
add
xchg
mov
enter
cdq
dec
mov
shl
(bad)
and
ja
ja
cli
(bad)
jmp
adc
enter
aas
cli
clc
xor
xchg
xor
inc
fimul
sbb
sbb
mov
inc
clc
leave
(bad)
pop
jno
in
jo
ja
dec
es
scas
outs
push
enter
dec
test
mov
or
jnp
enter
aaa
jecxz
ja
stc
xchg
xor
enter
cmp
(bad)
mov
ss
lahf
mov
adc
js
ret
enter
adc
push
enter
cmps
sbb
mov
adc
mov
nop
hlt
mov
jecxz
daa
and
mov
dec
and
aam
sbb
sub
xchg
inc
cwde
ror
cwde
xchg
mov
loop
(bad)
push
mov
dec
mov
adc
add
test
(bad)
jecxz
dec
nop
hlt
stos
aaa
jecxz
daa
mov
xchg
hlt
xchg
aaa
jecxz
daa
inc
and
jno
enter
rcr
bnd
fldenv
enter
or
(bad)
in
aam
sbb
cmovno
jle
adc
jne
sbb
xor
test
mov
loop
mov
loop
hlt
or
clc
mov
xchg
int3
(bad)
aaa
jecxz
cld
dec
ror
xlat
mov
clc
mov
cwde
iret
mov
loop
(bad)
push
mov
dec
mov
adc
js
movs
jbe
enter
jbe
(bad)
cmc
clc
retf
div
mov
push
sbb
mov
pop
jno
dec
loopne
mov
dec
cdq
sar
loop
hlt
or
clc
mov
xchg
int3
shl
jecxz
test
dec
ja
adc
repnz
loop
mov
loop
ja
adc
dec
retf
js
cwde
xlat
mov
loop
daa
inc
cwde
mov
cwde
mov
push
ja
sahf
mov
(bad)
stos
hlt
shl
jecxz
mov
sbb
xlat
mov
mov
movs
test
hlt
mov
sbb
push
ja
ja
pop
sbb
dec
shl
enter
aaa
loop
mov
and
push
mov
pop
jno
jne
mov
ds
hlt
or
dec
mov
sbb
hlt
fbstp
jecxz
jbe
sbb
mov
mov
jno
and
mov
aaa
loop
ja
cmp
jbe
movs
xchg
xor
aaa
jecxz
and
(bad)
test
cmc
loop
ja
imul
aaa
sbb
ja
ja
pop
gs
xor
dec
shl
enter
aaa
loop
mov
and
push
mov
pop
jno
jne
mov
cmp
adc
sbb
hlt
fbstp
jecxz
jbe
sbb
rcl
push
call
jge
aaa
loop
ja
cmp
jbe
movs
xchg
xor
aaa
jecxz
and
pop
test
cmc
loop
ja
imul
aaa
sbb
ja
xchg
test
xlat
aaa
jecxz
dec
ja
pop
pop
std
xor
dec
shl
enter
aaa
loop
mov
and
jge
cwde
(bad)
enter
mov
jne
xlat
mov
mov
or
dec
mov
sbb
hlt
fbstp
jecxz
jbe
sbb
or
push
jmp
jge
aaa
loop
ja
pop
sbb
movs
xchg
xor
aaa
jecxz
and
mov
mov
sahf
mov
cmc
loop
ja
push
add
xor
cmc
jecxz
aaa
loop
mov
and
jge
cwde
(bad)
enter
test
jno
dec
mov
jno
(bad)
je
jl
jno
inc
cwde
mov
pusha
out
mov
ins
lds
push
test
inc
scas
inc
fidiv
mov
hlt
push
enter
mov
jno
inc
cwde
test
cld
dec
ror
aaa
dec
sub
mov
cwde
xchg
sbb
vpmacswd
aaa
jecxz
daa
inc
and
xor
inc
lds
inc
fdivp
or
jno
dec
mov
jno
cmp
aam
aaa
jecxz
ja
mov
jo
inc
test
ja
pushf
mov
mov
jno
sets
mov
loop
ja
cwde
ror
enter
inc
loop
mov
jecxz
daa
inc
cwde
test
cld
clc
loop
imul
xchg
inc
cwde
cmc
mov
loop
mov
cwde
movs
mov
loop
pop
pop
cld
xor
cwde
loope
ss
cld
lock
dec
enter
inc
pop
lea
adc
dec
int3
sbb
mov
sbb
vpmacswd
int
ja
xchg
xor
inc
lds
inc
fdivp
or
jno
inc
cwde
cdq
mov
loop
cld
dec
int
mov
dec
cli
dec
aaa
dec
dec
dec
cwde
mov
test
jno
and
cld
repnz
vpmacswd
aaa
jecxz
daa
inc
and
xor
jo
adc
jmp
aaa
xchg
mov
mov
jno
dec
fnsave
enter
aaa
jecxz
daa
inc
cwde
cdq
mov
loop
cld
lock
push
inc
pop
(bad)
(bad)
adc
dec
sahf
or
enter
retf
sbb
adc
xchg
jecxz
ja
test
mov
loop
daa
push
loopne
mov
dec
cdq
inc
movs
sbb
repnz
(bad)
jno
enter
and
sbb
pushf
cmp
icebp
mov
aaa
jecxz
daa
mov
nop
hlt
mov
jecxz
daa
and
sbb
arpl
pop
scas
inc
ficom
mov
xchg
mov
dec
icebp
mov
aaa
jecxz
cli
dec
or
mov
popa
(bad)
das
movs
jne
enter
inc
test
mov
loop
fcom
ja
mov
vpmacswd
xor
xor
mov
dec
jb
ja
sahf
aam
aaa
jecxz
ja
fimul
repnz
loop
mov
sbb
vpmacswd
and
enter
xor
mov
dec
xor
enter
xchg
sbb
mov
ins
loop
mov
jno
xor
mov
dec
loop
ja
sahf
aam
aaa
jecxz
ja
cld
jo
enter
xor
jno
xchg
xchg
test
adc
cwde
add
inc
cwde
(bad)
mov
(bad)
icebp
mov
loop
cli
jge
mov
inc
cli
enter
jno
ins
nop
les
aaa
jecxz
hlt
and
clc
nop
jno
jno
enter
jne
mov
aaa
dec
add
push
lahf
sbb
hlt
sub
jecxz
dec
sahf
or
enter
leave
sbb
mov
dec
loop
mov
sbb
vpmacswd
and
enter
xor
mov
dec
or
enter
aaa
jecxz
ja
cdq
js
enter
test
(bad)
jno
jge
mov
aaa
jecxz
daa
inc
and
xor
inc
lds
inc
fdivp
or
jno
scas
sahf
int3
pop
aaa
jecxz
jg
cwde
mov
retf
(bad)
cmc
mov
sbb
mov
mov
bound
jg
fidiv
(bad)
jne
mov
ret
div
mov
inc
sbb
or
aaa
test
mov
loop
repnz
jne
xchg
mov
(bad)
push
sbb
fcom
mov
add
xor
hlt
sbb
add
xchg
hlt
(bad)
aaa
jecxz
mul
add
loop
das
aaa
loopne
cli
dec
inc
mov
xor
(bad)
je
aaa
jecxz
daa
and
mov
mov
loop
mov
sbb
(bad)
mov
mov
pushf
or
sbb
mov
inc
cwde
icebp
mov
loop
cld
clc
loop
jg
lds
mov
loop
mov
cwde
(bad)
push
cwde
(bad)
(bad)
mov
aad
ss
cld
clc
loop
jg
cwde
in
mov
loop
cld
clc
loop
jg
cwde
popf
mov
loop
repnz
(bad)
popf
mov
loop
cmc
es
mov
or
aaa
jecxz
ja
cmp
enter
dec
mov
mov
xchg
mov
dec
cmc
mov
aaa
dec
jns
jne
mov
inc
cwde
mov
cld
clc
loop
jg
mov
jno
les
mov
inc
sub
hlt
scas
aaa
jecxz
daa
inc
sub
hlt
stos
aaa
jecxz
daa
inc
sub
test
cld
dec
std
mov
aaa
dec
jns
out
jmp
or
xchg
mov
pop
jno
push
or
jno
enter
inc
cmp
enter
fmul
and
cdq
mov
stc
dec
inc
push
lock
cmp
mov
sbb
xchg
mov
nop
pop
jno
and
sbb
sahf
mov
and
mov
sahf
dec
idiv
ja
ret
call
loop
pushf
loopne
xor
leave
sbb
xchg
mov
js
mov
shr
sbb
pop
xchg
add
and
mov
pop
xchg
xor
lods
mov
loopne
or
jno
inc
clc
and
ja
pop
push
popf
xchg
mov
inc
ficomp
idiv
sbb
test
sbb
adc
enter
and
adc
inc
mov
hlt
and
and
inc
inc
jns
mov
into
adc
in
jo
inc
fisttp
ja
(bad)
repnz
int3
lea
ja
xchg
xor
add
repnz
lock
enter
pop
pop
jno
prefetcht2
ja
sbb
xor
sbb
xor
enter
mov
call
js
arpl
enter
enter
mov
cmp
out
pop
jno
lds
cwde
pop
retf
mov
imul
div
cmp
repnz
int3
pop
clc
xor
sbb
dec
push
pop
jno
neg
jno
dec
adc
mov
jle
out
jno
sbb
out
mov
popf
jmp
xor
sbb
ja
in
xchg
push
hlt
je
enter
lock
and
jo
enter
jl
jno
int
out
ss
stc
fstp
idiv
loop
ja
popf
jl
push
pop
jno
push
mov
cwde
inc
aaa
loop
or
sbb
je
sbb
popa
ja
popf
jl
push
pop
jno
and
mov
push
pop
jno
mov
cld
jae
enter
stos
sbb
out
ss
push
pop
jno
mov
(bad)
je
push
pop
jno
mov
test
ja
xchg
sbb
add
mov
and
xor
sbb
(bad)
je
push
pop
jno
mov
xchg
jae
enter
(bad)
sbb
out
ss
mov
ja
xchg
(bad)
je
jl
jno
int
out
ss
cmp
ss
leave
sbb
xor
sbb
mov
jno
cs
xor
inc
fcomi
jp
xor
mov
nop
ja
sbb
jno
or
jo
lock
and
jno
enter
mov
xor
mov
popf
jmp
xor
mov
ja
loop
add
hlt
int
out
ss
enter
cmp
dec
sahf
je
push
pop
jno
and
mov
push
sbb
ja
adc
mov
jg
enter
inc
sbb
jno
jle
and
mov
repnz
bound
in
cwde
loope
mov
jno
mov
mov
dec
aaa
cmp
mov
pop
jno
lds
call
sbb
in
ss
push
pop
jno
jmp
(bad)
cmp
dec
popf
jl
push
pop
jno
and
inc
mov
dec
jo
enter
sbb
xor
push
pop
jno
(bad)
cdq
mov
enter
mov
xor
in
pop
xchg
jle
int
shl
enter
xor
(bad)
jb
mov
jbe
(bad)
out
ror
jno
dec
xchg
jno
enter
mov
mov
adc
lahf
push
jle
mov
sbb
shl
push
pop
jno
int
loope
enter
push
pop
jno
mov
sbb
mov
push
bnd
lea
ja
div
div
popf
jl
push
pop
jno
inc
in
jo
inc
(bad)
mov
sub
xor
stos
je
push
pop
jno
sub
stc
xor
popf
or
int
jl
mov
jno
iret
sahf
je
pop
pop
jno
inc
in
pop
xchg
repnz
les
imul
les
stc
jae
and
je
pop
pop
jno
ror
out
sbb
sub
sbb
xor
imul
add
les
stc
jae
mov
xor
pop
pop
jno
lock
icebp
sbb
mov
add
mov
pop
pop
jno
or
sub
fisub
sub
mov
leave
mov
cs
xor
inc
fisttp
ja
adc
xor
enter
mov
dec
cdq
not
mov
retf
xor
xchg
sbb
xor
pop
jp
enter
(bad)
in
mov
and
xor
xchg
sbb
xor
push
retf
xor
xchg
sbb
xor
inc
retf
xor
xchg
sbb
xor
inc
mov
hlt
and
and
lahf
cmps
test
into
arpl
scas
leave
(bad)
aaa
sbb
repz
jno
lea
shl
rcr
jo
inc
fdivp
adc
xor
addps
mul
call
enter
enter
jl
jno
lods
int
(bad)
adc
dec
sahf
adc
enter
leave
sbb
lods
jbe
sbb
jno
aas
(bad)
clc
xor
mov
int
retf
xor
aaa
sbb
xor
jno
enter
enter
inc
pop
in
or
xor
leave
sbb
leave
ja
pusha
int
mov
sbb
xor
cwde
jne
ja
sbb
mov
xor
inc
lds
inc
fdivrp
xor
ja
pop
aad
mov
sbb
jno
push
jno
inc
pop
shl
aaa
push
and
enter
mov
sbb
jno
enter
into
loop
xchg
and
ja
movs
mov
xchg
inc
pop
loope
or
add
and
sub
enter
jl
jno
(bad)
cmc
and
sub
mov
xor
inc
pop
xchg
pushf
into
pushf
call
inc
mov
hlt
and
mov
xor
jbe
xchg
xchg
dec
xchg
xor
inc
pop
(bad)
cld
lea
clc
xor
xchg
cmp
inc
push
mov
lods
jmp
and
inc
pop
cdq
sbb
leave
nop
xor
cwde
nop
xor
cwde
loop
(bad)
mov
dec
sbb
(bad)
xor
and
lock
xor
aam
and
and
ja
adc
xchg
mov
xchg
mov
int
lds
mov
xor
jo
or
jmp
xchg
aam
and
repnz
les
and
jns
xchg
adc
ja
loop
ror
dec
mov
sbb
(bad)
xor
sbb
mov
sbb
(bad)
xor
pop
dec
mov
sbb
(bad)
xor
push
dec
mov
sbb
(bad)
xor
sbb
sbb
jae
enter
inc
pop
jb
inc
or
fsub
jle
(bad)
loop
ror
adc
mov
dec
mov
cwde
out
enter
adc
arpl
and
js
xchg
jno
enter
and
jle
fmul
dec
mov
data16
lea
jb
jle
addr16
or
(bad)
xor
jne
cmc
cmc
jno
enter
jle
mov
adc
jae
je
xor
xchg
sbb
mov
or
arpl
iret
int
enter
xchg
inc
jno
inc
pop
mov
add
cli
and
nop
and
hlt
and
pop
cmps
retf
pop
mov
and
clc
xor
xor
inc
pop
jb
leave
in
lahf
int3
xchg
and
inc
or
sbb
(bad)
xor
jbe
arpl
je
je
jno
mov
sbb
inc
aaa
loop
mov
imul
dec
int3
push
icebp
dec
into
sbb
inc
in
lahf
retf
jno
push
cdq
je
and
mov
cmc
jne
jle
ja
mov
sbb
clc
(bad)
dec
cmc
je
hlt
sbb
ficom
and
sbb
popf
int3
sahf
mov
inc
sbb
sbb
jae
lods
xchg
mov
dec
and
mov
cmc
jae
hlt
sbb
cdq
xchg
mov
and
icebp
dec
into
pop
add
inc
in
lahf
int3
adc
jae
and
jo
hlt
jno
enter
add
cli
and
nop
and
hlt
and
pop
cmps
leave
(bad)
int3
xchg
xor
inc
pop
popa
cli
mov
je
xor
mov
fcomp
jo
enter
neg
and
hlt
sbb
adc
dec
inc
in
lahf
retf
popf
dec
jno
push
cdq
jae
stos
jne
hlt
and
ja
imul
mov
sbb
cld
and
sbb
dec
div
int3
or
enter
aaa
sbb
repz
mov
hlt
and
and
lahf
loop
add
cld
mov
loop
jo
and
mov
cmc
jb
enter
aaa
cmc
jb
enter
inc
pop
jge
and
jno
icebp
fild
scas
and
jno
enter
aaa
sbb
rcr
dec
(bad)
call
xabort
leave
lds
lahf
dec
jmp
mov
pop
jno
jle
outs
dec
and
dec
sahf
enter
call
idiv
adc
xor
inc
or
fcomp
mov
xor
jne
mov
cdq
pushf
out
xchg
jne
inc
sbb
mov
jo
enter
inc
out
jo
loope
clc
(bad)
leave
(bad)
jo
inc
pop
test
mov
jo
popf
jmp
jne
mov
cli
hlt
add
clc
test
(bad)
pop
cmps
inc
out
lods
leave
int
lahf
int3
xchg
xor
push
sbb
inc
pop
outs
jbe
dec
mov
fsub
je
jl
jno
add
pop
pop
outs
jb
int
lahf
int3
xchg
xor
push
sbb
ja
sbb
and
or
jae
cld
or
retf
mov
mov
or
sub
clc
leave
sub
sbb
jno
fwait
dec
es
push
in
mov
cwde
xchg
test
loop
lahf
jo
jno
cmc
sbb
jbe
dec
(bad)
scas
mov
sbb
repnz
mov
jl
jno
dec
mov
jno
fst
(bad)
repnz
mov
je
jno
mov
ret
enter
jle
sbb
jge
xor
and
rcr
mov
xchg
in
push
loop
sbb
adc
jnp
and
cdq
ficom
mov
mov
xchg
jne
cwde
test
ja
stos
in
daa
loop
sbb
add
jnp
ret
retf
dec
mov
retf
rcl
loop
mov
or
out
mov
jno
pop
mov
jne
call
cwde
sbb
cwde
sbb
popf
dec
jb
cmps
xor
adc
cmp
loop
mov
out
sahf
mov
sbb
sahf
mov
fcom
push
pop
pop
jno
(bad)
cdq
jmp
enter
pop
out
sahf
mov
fcom
daa
push
pop
jno
pop
leave
scas
mov
loop
add
div
scas
mov
sbb
jno
and
mov
pop
loop
mov
imul
mov
sbb
call
sbb
mov
mov
mov
dec
cdq
ficom
sahf
xchg
sti
jae
jl
mov
or
in
and
mov
pop
nop
hlt
repz
loop
daa
and
ja
loop
add
hlt
ins
icebp
sahf
mov
sbb
jno
aaa
loop
ja
test
cwde
aaa
loop
ret
mov
aaa
sahf
mov
inc
pop
lea
imul
mov
sbb
mov
inc
(bad)
mov
retf
jne
dec
(bad)
cld
cld
cmps
repnz
int3
es
repnz
aaa
sbb
lods
div
loop
ja
outs
jle
adc
jno
enter
dec
ret
mov
enter
dec
out
xchg
sbb
lea
xchg
pushf
hlt
fwait
daa
loop
ja
sbb
cld
dec
xchg
scas
mov
xor
repnz
mov
aaa
loop
jb
test
test
dec
lahf
sbb
jno
(bad)
stos
in
daa
loop
mov
pop
cli
arpl
cmp
in
daa
loop
hlt
ins
jmp
cli
loop
repnz
adc
cwde
jne
cld
jae
test
cli
jnp
xchg
std
bound
ret
inc
mov
xchg
retf
mov
pop
mov
retf
mov
xlat
icebp
jge
loop
and
mov
jne
sahf
mov
sbb
(bad)
mov
imul
xchg
pop
loop
ja
inc
sbb
jne
jno
pusha
dec
jno
inc
cwde
shr
retf
or
sbb
scas
mov
sahf
mov
retf
pop
clc
repnz
ret
mov
aaa
loop
loop
ret
mov
retf
jecxz
loop
cld
dec
mov
in
push
loop
je
xchg
hlt
out
loop
dec
scas
mov
xchg
hlt
mov
dec
shr
dec
movs
scas
mov
dec
mov
adc
mov
enter
pop
loop
dec
dec
mov
xor
dec
fldcw
ret
pop
loop
jbe
shr
pop
loop
ja
ficomp
ja
sbb
enter
pop
loop
mov
adc
cld
pop
movs
scas
mov
fcomp
ja
sbb
mov
mov
stos
in
daa
loop
mov
pop
cli
cli
adc
mov
aaa
loop
jnp
sub
(bad)
loop
repnz
fmul
push
out
sbb
mov
enter
sahf
sbb
scas
mov
adc
js
jge
ja
popf
or
enter
leave
sbb
sahf
mov
adc
ja
hlt
jno
enter
mov
jo
dec
and
enter
enter
cmp
mov
enter
and
cld
xor
sbb
repnz
mov
aaa
loop
hlt
gs
scas
mov
sbb
ret
mov
lock
repnz
retf
ja
add
xchg
jb
lock
repnz
int3
popf
dec
ja
pop
clc
xchg
je
lock
mov
xor
imul
mov
push
jl
aad
aaa
loop
repnz
mov
adc
jno
hlt
jno
enter
int3
sub
enter
aaa
nop
xor
xchg
pop
loop
pushf
dec
xchg
xchg
loop
jbe
xor
std
fist
xchg
test
loop
sahf
dec
mov
test
jle
shr
retf
bound
mov
sbb
hlt
and
enter
loopne
dec
dec
retf
ja
push
jb
enter
fcomp
jno
enter
hlt
and
sbb
call
loop
jle
(bad)
aam
mov
jo
aam
(bad)
repnz
mov
pop
loop
mov
scas
mov
cmc
pop
mov
loop
mov
popf
int3
xchg
pop
loop
ja
pop
repnz
mov
daa
loop
mov
pop
clc
scas
or
jae
sub
jb
xor
cmc
bound
ret
inc
sbb
dec
jmp
int3
and
mov
sbb
je
jl
jno
out
mov
aaa
loop
js
cwde
sbb
popf
dec
jb
cmps
xor
adc
pop
xor
mov
xchg
inc
mov
hlt
and
and
lahf
xchg
sub
addps
mul
sbb
cld
or
nop
inc
add
jno
fstp
cli
xor
xchg
xor
inc
pop
mov
xor
xor
inc
pusha
test
xor
enter
inc
pusha
mov
xor
enter
dec
jo
push
sbb
add
mov
xor
inc
fbstp
inc
dec
mov
ficom
(bad)
dec
mov
xchg
add
popf
xor
int3
idiv
(bad)
jecxz
div
(bad)
enter
enter
(bad)
stos
and
repnz
fs
(bad)
cwde
std
ja
sbb
xor
popf
xor
leave
adc
xor
and
adc
in
fnsave
enter
mov
sbb
ror
jbe
xor
add
add
sahf
mov
mov
icebp
xor
sbb
ror
add
dec
std
jbe
xor
add
dec
pop
mov
mov
or
(bad)
popf
in
ror
jno
dec
sbb
icebp
xor
sbb
retf
and
jge
pop
jo
mov
sbb
xor
adc
sahf
loop
mov
pop
lea
or
je
stos
and
repnz
cmps
mov
sbb
jge
pop
lea
pusha
lea
stc
lock
mov
ja
adc
je
sahf
jno
enter
(bad)
loop
js
pop
mov
xchg
inc
mov
and
dec
cli
add
cmps
shl
lock
mov
jno
mov
dec
sbb
sbb
ja
xchg
xor
loop
div
sbb
add
xchg
mov
(bad)
popf
dec
dec
xchg
push
jo
and
ds
aaa
sbb
call
sub
clc
leave
jae
sbb
jno
sahf
dec
into
iret
cmps
add
xor
xchg
dec
scas
mov
xchg
mov
xor
mov
std
mov
enter
enter
cwde
cmc
jle
enter
fcom
inc
ds
das
mov
lahf
mov
lock
push
adc
sbb
push
out
and
sbb
clc
xchg
dec
icebp
jge
sahf
dec
into
fist
push
jo
enter
dec
sbb
sbb
push
sbb
sbb
cdq
push
sbb
(bad)
repnz
sbb
jge
call
cli
clc
xor
mov
or
and
cdq
sbb
mov
cwde
ja
lahf
or
jno
inc
pop
(bad)
mul
mov
jno
mov
jno
rcl
pushf
into
nop
xor
inc
pop
test
mov
dec
jno
sahf
cmc
fwait
daa
enter
xor
ja
xor
dec
inc
das
sub
fisub
sub
mov
clc
(bad)
mov
sbb
jno
int3
ja
sbb
enter
shl
es
dec
fidivr
jns
sbb
jne
or
and
enter
cdq
sbb
clc
mov
aad
aaa
dec
and
mov
sbb
and
add
jno
mov
dec
sbb
in
xchg
xor
cdq
sbb
pop
ja
dec
cdq
es
sbb
jno
xchg
inc
sub
dec
icebp
jge
lahf
mov
leave
push
(bad)
sbb
xor
inc
ficomp
ja
popf
jno
enter
enter
enter
aaa
push
jno
inc
(bad)
(bad)
aas
cli
clc
xor
mov
ss
jae
fstp
ja
sbb
jno
mov
dec
mov
fsub
add
sahf
cmc
dec
es
loope
clc
mov
cmc
cmps
cmp
sbb
das
mov
cdq
dec
daa
and
jns
(bad)
loope
adc
xor
push
ja
sub
(bad)
pop
div
jle
dec
jbe
pop
dec
or
popa
test
push
xor
data16
pushf
add
gs
jno
mov
cmc
sbb
sbb
stos
pushf
fist
(bad)
jae
dec
sbb
pop
jno
pushf
dec
jno
dec
fnstcw
repz
jge
and
pushf
ret
popf
dec
dec
enter
int3
and
repz
jge
cmp
pop
sub
lahf
in
jno
dec
fnstcw
(bad)
loope
mov
(bad)
and
das
sub
fisub
sub
xchg
sub
inc
push
mov
xor
push
ja
jne
xchg
mov
jno
stc
loop
fs
stos
jne
cwde
jne
xchg
mov
jno
or
ss
aas
outs
cwde
pop
out
std
xor
shl
ja
inc
cli
xor
mov
or
mov
dec
icebp
pop
and
dec
retf
es
(bad)
adc
dec
jnp
xor
sbb
hlt
lods
icebp
jno
lods
cmc
jno
lods
stc
jno
mov
cld
inc
push
mov
jno
enter
push
jge
ja
(bad)
clc
xor
mov
mov
jo
into
jnp
xor
add
jle
mov
stc
xor
neg
es
ja
(bad)
clc
xor
xchg
mov
jle
mov
pop
je
dec
(bad)
(bad)
icebp
icebp
or
pop
add
dec
jo
jne
not
inc
enter
aaa
sbb
or
sbb
jge
jg
jae
(bad)
jecxz
push
dec
not
ror
xor
add
and
jne
movs
cmc
jae
movs
jecxz
div
xchg
test
scas
inc
fdivrp
xor
adc
ja
dec
jns
jg
pop
cmps
mov
sbb
jle
or
xchg
inc
lds
inc
fdivrp
cmp
xchg
mov
rol
movs
jbe
stc
cli
xor
adc
aaa
into
xchg
and
(bad)
stos
and
int
rcr
xor
inc
pop
jge
jg
jns
popf
adc
pop
cmps
leave
pop
xchg
cld
(bad)
stc
call
fisubr
sub
(bad)
loope
pop
movs
jno
mov
xor
movs
or
inc
loope
or
pop
out
(bad)
loope
ror
out
(bad)
loope
pop
(bad)
loope
pop
pop
loope
pop
(bad)
loope
pop
(bad)
loope
pop
and
out
(bad)
loope
adc
jno
mov
xor
movs
ss
pop
loope
or
ins
out
(bad)
loope
ror
jae
(bad)
loope
adc
popf
out
(bad)
loope
pop
(bad)
loope
pop
jp
(bad)
fchs
mov
lea
lahf
enter
nop
(bad)
loope
pop
lea
pop
jno
in
dec
aaa
enter
pop
(bad)
loope
inc
push
jne
pop
(bad)
cli
daa
ror
out
(bad)
repnz
(bad)
loope
icebp
(bad)
loope
pop
lea
out
fnstsw
pop
(bad)
repnz
enter
mov
lea
out
(bad)
loope
scas
hlt
ret
loop
mov
cmc
stc
mov
jno
mov
ss
pop
mov
pop
(bad)
loope
pop
movs
jno
mov
loope
pop
inc
loope
pop
(bad)
loope
xor
and
pop
(bad)
loope
dec
xchg
xor
xchg
test
pop
(bad)
loope
or
mov
daa
pop
(bad)
loope
pop
xchg
mov
cmp
loope
pop
mov
out
(bad)
loope
pop
(bad)
loope
pop
mov
loope
clc
(bad)
loope
pop
sbb
out
(bad)
loope
cmp
jno
mov
loope
pop
imul
int3
sbb
xor
xchg
test
pop
(bad)
loope
or
mov
daa
pop
(bad)
loope
pop
xchg
mov
cmp
loope
pop
mov
out
(bad)
loope
pop
(bad)
loope
pop
mov
loope
clc
(bad)
loope
pop
sbb
out
(bad)
loope
cmp
loope
pop
(bad)
loope
and
pusha
mov
fidiv
fwait
ror
and
jns
lea
pop
dec
lock
dec
test
fbstp
inc
dec
lea
jnp
xor
sbb
jno
inc
lds
cwde
cmc
out
xor
sub
or
mov
sbb
pop
and
ja
xchg
xor
jo
push
ja
mov
jle
popf
out
mov
int3
call
cld
(bad)
icebp
call
call
sbb
clc
xor
xchg
xor
inc
sbb
mov
push
(bad)
adc
aaa
(bad)
stos
popa
js
push
mov
xchg
popa
js
sbb
sub
clc
scas
leave
in
xor
or
pop
mov
xor
or
ja
pop
pop
sbb
and
mov
ja
adc
xor
dec
clc
scas
leave
in
and
(bad)
out
jle
popf
out
cmps
cwde
cmc
sti
cmp
sbb
and
lds
cwde
cmc
or
enter
in
sahf
mov
dec
push
jno
aaa
pop
cmp
fstp
shl
mov
or
xchg
dec
icebp
pop
and
dec
retf
into
push
or
pop
cmp
sbb
mov
inc
fadd
(bad)
(bad)
push
xchg
xchg
mov
popf
repnz
or
xor
push
xor
xor
dec
mov
shl
(bad)
aaa
loop
mov
xchg
mov
or
cmc
pop
retf
js
pusha
sahf
mov
pop
cli
arpl
mov
xor
pusha
mov
ds
mov
es
pusha
sahf
mov
pop
mov
mov
xor
cmc
fxch
xor
test
jno
cmp
je
jne
jno
(bad)
cmc
and
dec
fldcw
add
lea
sbb
xor
inc
or
addr16
pop
lea
aad
xor
jne
jno
(bad)
loope
scas
imul
xor
and
leave
mov
xchg
xor
inc
fdivrp
xchg
pop
mov
ffree
int3
xor
(bad)
in
(bad)
sbb
xor
sbb
xor
outs
mov
ja
pop
lods
lahf
lods
push
jno
inc
pusha
lods
js
loop
mov
stos
mov
mov
mov
jno
and
ja
xchg
xor
and
cmp
enter
(bad)
stos
mov
or
(bad)
movs
or
popa
jle
xchg
dec
stos
jne
jno
mov
retf
clc
xchg
sbb
lahf
sub
ja
fnstcw
add
test
sbb
xor
inc
or
addr16
pop
test
aad
xor
jne
jno
(bad)
jmp
int3
xor
and
xchg
pop
cmp
enter
(bad)
in
jne
sbb
xor
sbb
xor
outs
scas
(bad)
aas
push
dec
mov
pop
jno
jle
sahf
cmps
sub
xor
adc
jnp
xchg
xchg
int3
xor
daa
int3
xchg
cld
fmul
cli
jp
mov
dec
test
jle
enter
leave
push
imul
in
jb
or
xor
cmc
fmul
shl
enter
enter
enter
aaa
push
jno
inc
pop
xchg
idiv
gs
ja
cli
(bad)
cmc
and
mov
sbb
cdq
outs
sbb
ja
sub
aaa
and
leave
ja
sbb
xor
inc
fisubr
sub
clc
lock
rcr
jno
fwait
dec
es
push
sub
add
mov
xchg
dec
mov
int
lds
enter
pop
pop
jno
cmp
dec
cmc
iret
cmp
sbb
popa
es
fadd
mov
add
inc
int
dec
sahf
mov
inc
out
loop
jecxz
mov
pop
mov
xor
js
pusha
mov
sbb
addr16
xchg
mov
and
mov
in
pop
add
mov
xchg
in
aaa
jecxz
mov
mov
pop
mov
imul
aaa
sbb
jno
or
mov
mov
loop
mov
fcomi
jno
loop
inc
dec
jmp
cs
aaa
jecxz
mov
sbb
jno
dec
out
mov
dec
cdq
inc
sbb
sbb
enter
enter
xor
mov
enter
cmp
mov
inc
xlat
xor
cmc
ja
enter
inc
cwde
or
mov
loop
xor
jno
inc
in
jo
inc
fisttp
mov
fidiv
ja
loop
add
and
shr
ss
daa
and
hlt
mov
shr
ss
daa
mov
cmc
and
sbb
jno
cs
hlt
lahf
xor
loop
add
pop
or
xor
shr
mov
loop
daa
mov
cmc
push
ja
sbb
xor
pusha
scas
xor
enter
enter
or
lock
dec
clc
xchg
dec
icebp
jge
sahf
dec
cli
add
mov
clc
(bad)
loope
clc
mov
sbb
(bad)
aas
cli
clc
xor
mov
lods
loope
cli
(bad)
in
cli
(bad)
loope
sbb
(bad)
sbb
sbb
push
cdq
push
sbb
dec
jbe
push
mov
xor
jbe
sbb
add
and
cmp
pushf
sahf
dec
icebp
sbb
cdq
mov
inc
mov
and
pop
adc
mov
cdq
jp
sbb
mov
fsub
add
aaa
push
cdq
inc
enter
or
sub
dec
clc
xchg
cdq
dec
into
nop
hlt
cs
(bad)
xor
xchg
dec
sbb
jae
pop
gs
aaa
push
mov
shl
ja
sbb
mov
es
dec
into
iret
lahf
repz
xor
dec
nop
xor
cwde
nop
xor
cwde
ja
pop
into
sbb
sbb
sbb
add
and
ja
adc
add
sub
pushf
jmp
add
aaa
push
sbb
push
cdq
sbb
imul
sbb
(bad)
xor
dec
loop
mov
cmp
sub
aaa
xchg
aam
and
repnz
cld
mov
jnp
xor
mov
lock
jno
xor
dec
nop
xor
cwde
jne
ja
sbb
jge
mov
sbb
jne
or
dec
cli
lea
sbb
push
cdq
xchg
(bad)
sbb
jge
mov
sbb
imul
sbb
imul
pop
cmp
or
xchg
cdq
dec
daa
and
pop
adc
pushf
mov
stos
sbb
movs
xor
and
xor
(bad)
mov
clc
(bad)
stc
in
mov
loope
xor
mov
div
sbb
enter
mov
jl
xor
enter
sbb
or
add
sub
pushf
fsubp
inc
mov
pop
jno
inc
pop
lea
sbb
mov
fwait
push
gs
aad
mov
in
sbb
bound
dec
jns
popf
xchg
xchg
es
dec
es
mov
fidiv
xchg
pop
stc
inc
inc
pop
(bad)
dec
xor
(bad)
popf
loope
test
sub
dec
not
add
inc
in
scas
cwde
xchg
xor
cmc
sub
enter
les
addr16
sbb
inc
in
mov
neg
test
ss
and
or
popf
dec
dec
enter
xor
dec
into
pop
add
inc
pop
popa
mov
sbb
push
ja
xchg
test
xchg
lds
lahf
ins
pop
jno
inc
(bad)
xor
pop
ja
adc
add
xchg
xor
cmc
sysexit
enter
xor
mov
or
(bad)
and
inc
mov
inc
sub
dec
icebp
gs
dec
cli
sub
fidiv
sub
cli
jno
push
jno
and
ja
xchg
xor
inc
fisub
and
sbb
inc
and
xacquire
adc
jae
sahf
add
repz
sbb
call
fidiv
enter
(bad)
stos
or
(bad)
stos
dec
dec
inc
in
ins
enter
aas
in
mov
inc
in
ins
enter
xchg
mov
aas
push
fwait
inc
retf
test
dec
sbb
and
ja
sahf
mov
scas
loop
mov
stos
xor
repz
mov
xchg
inc
sub
jo
jno
enter
enter
lahf
mov
mov
int3
sahf
aam
aaa
jecxz
ja
mov
jno
dec
in
mov
dec
mov
(bad)
cmc
jmp
xchg
mov
cmp
dec
adc
add
sub
sahf
loopne
jno
dec
mov
jno
lds
fimul
hlt
arpl
mov
fdiv
aas
xor
sbb
mov
enter
aaa
jecxz
dec
mov
aaa
loopne
sbb
lds
loop
loop
mov
dec
ja
sbb
cdq
and
loope
mov
pushf
mov
mov
adc
jno
jo
jno
inc
in
pop
xchg
cli
xor
xchg
hlt
cmps
aaa
loopne
dec
sahf
mov
jbe
push
jns
pop
int
mov
sbb
and
aaa
sahf
mov
mov
loop
jg
xchg
xor
enter
mov
loop
mov
jecxz
lahf
nop
pop
jno
dec
fnstcw
lock
jno
jno
jno
enter
dec
out
or
jne
xchg
mov
(bad)
xor
enter
inc
in
inc
xchg
cdq
jp
sbb
jno
push
jmp
and
xor
ja
sbb
cli
retf
(bad)
dec
test
sbb
jno
dec
fldenv
adc
ja
pop
jno
enter
dec
out
or
jne
xchg
mov
(bad)
xor
jg
sub
mov
jecxz
lahf
sub
jno
dec
fnstcw
push
pop
jno
enter
dec
out
or
jne
xchg
mov
vpcmov
and
ja
movs
jnp
enter
xor
cdq
push
mov
jno
push
jmp
ss
pop
test
ja
cmc
pop
xor
sbb
add
mov
xchg
hlt
mov
jecxz
daa
mov
dec
cdq
mov
lock
or
ds
ja
sbb
mov
push
sbb
jge
mov
enter
shl
mov
(bad)
xor
jg
div
ja
movs
jnp
enter
xor
sbb
jge
mov
enter
shl
mov
(bad)
xor
sahf
mov
and
jnp
enter
xor
cdq
(bad)
mov
jno
push
jmp
ss
pop
test
ja
cmc
out
xor
sbb
add
enter
inc
cwde
mov
mov
jb
ja
movs
cdq
je
sbb
sbb
jne
mov
mov
mov
fcom
mov
mov
dec
cdq
mov
cdq
inc
mov
jno
push
jmp
and
xor
movs
adc
sbb
cli
retf
(bad)
dec
test
sbb
jno
dec
fldenv
cmp
xchg
dec
mov
cmp
ja
pop
jno
enter
dec
out
or
jne
xchg
mov
(bad)
xor
sahf
mov
and
xor
movs
jnp
enter
xor
sbb
loope
mov
cmc
fwait
xor
shl
xor
enter
aas
in
(bad)
int
bound
cmp
xor
test
mov
loop
mov
sbb
clc
xchg
in
clc
mov
mov
arpl
lea
push
ret
xor
cmc
sysexit
enter
fdiv
das
xor
enter
aas
in
(bad)
int
bound
add
xor
test
mov
loop
or
adc
jno
ret
ja
jmp
mov
loop
mov
jecxz
lahf
nop
pop
jno
dec
fnstcw
fcomp
ja
pop
jno
enter
dec
out
or
cmc
jae
enter
enter
aas
in
cld
jne
mov
pop
pop
jno
and
xor
sahf
mov
dec
pusha
push
ja
cdq
cmc
jbe
sbb
mov
enter
enter
enter
mov
fisttp
or
mov
xor
loop
mov
cwde
mov
inc
mov
jb
or
mov
inc
in
ins
enter
aas
in
mov
dec
clc
(bad)
jno
jno
enter
or
xchg
pop
mov
cmps
hlt
(bad)
es
jne
jno
aaa
dec
sbb
jne
jno
aaa
dec
cdq
push
mov
leave
pop
popf
sbb
hlt
iret
aaa
loopne
dec
loop
mov
loopne
div
mov
enter
aaa
loop
mov
mov
inc
cwde
jno
aaa
loop
cld
dec
loope
mov
dec
sbb
push
pop
jno
and
xor
sahf
mov
and
xor
movs
jnp
enter
xor
sbb
push
pop
jno
jge
mov
enter
shl
aaa
enter
enter
aas
in
(bad)
int
bound
add
xor
test
mov
loop
mov
adc
clc
mov
mov
ja
movs
jnp
enter
xor
sbb
jge
mov
enter
rcr
enter
dec
jmp
hlt
(bad)
aaa
jecxz
dec
dec
(bad)
call
dec
icebp
mov
cs
hlt
mov
loopne
dec
hlt
or
sbb
hlt
(bad)
aaa
jecxz
sahf
sbb
ja
loop
js
and
enter
cmp
ja
sbb
mov
leave
sbb
mov
aaa
loopne
mov
pop
jno
dec
jmp
cdq
outs
mov
cld
cli
cmp
mov
dec
and
mov
xchg
int3
mov
loopne
(bad)
cmp
dec
nop
hlt
ja
loop
daa
(bad)
stos
hlt
mov
loopne
cli
dec
sbb
lahf
in
es
inc
cwde
test
jns
mov
dec
in
mov
aaa
jecxz
mov
loop
mov
lea
lods
ret
xor
cmc
xlat
dec
enter
shl
test
sbb
repnz
int
bound
xchg
ret
xor
test
mov
loop
shl
sbb
clc
xchg
in
clc
mov
inc
dec
ja
movs
jnp
enter
xor
sbb
loope
mov
cmc
or
sbb
inc
dec
enter
enter
aas
in
(bad)
int
bound
cmp
xor
test
mov
loop
and
sbb
mov
cmp
mov
enter
ficomp
mov
enter
aaa
test
mov
loop
lahf
loopne
mov
dec
in
mov
adc
js
mov
test
xor
(bad)
dec
ja
sahf
mov
and
dec
ja
movs
jnp
enter
xor
sbb
push
pop
jno
jge
mov
enter
shl
dec
enter
enter
aas
in
(bad)
int
bound
add
xor
test
mov
loop
retf
jno
or
clc
xchg
sti
clc
repnz
mov
neg
jno
push
jmp
mov
loop
mov
jecxz
lahf
inc
and
dec
fnstcw
cli
ret
xor
test
mov
loop
push
neg
cdq
inc
neg
jno
push
jmp
and
dec
ja
movs
adc
sbb
cli
retf
(bad)
dec
test
sbb
jno
dec
fldenv
enter
jno
jno
enter
dec
out
or
jne
test
xor
(bad)
dec
ja
sahf
mov
dec
jmp
pop
enter
cmc
sbb
jno
push
jmp
mov
loop
mov
jecxz
lahf
cmp
jno
dec
fnstcw
js
jno
jno
jno
enter
dec
out
or
jne
xchg
mov
(bad)
dec
ja
sahf
mov
and
jnp
enter
xor
cdq
push
cmc
sbb
jno
push
jmp
ss
pop
test
ja
cmc
pop
dec
enter
fdiv
test
xor
(bad)
dec
ja
sahf
mov
inc
in
pop
xchg
cdq
dec
cmc
sbb
jno
push
jmp
mov
loop
mov
jecxz
lahf
xchg
and
dec
fnstcw
aam
xor
test
mov
loop
ds
sbb
cdq
jb
sbb
jno
push
jmp
mov
loop
mov
jecxz
lahf
in
and
dec
fnstcw
rol
xor
test
mov
loop
data16
sbb
lock
fimul
enter
enter
xor
sbb
jge
mov
enter
rcl
daa
inc
cwde
lea
retf
ja
cmc
xlat
dec
enter
fdiv
test
sbb
repnz
int
bound
cmp
xor
test
mov
loop
shl
sbb
sbb
pop
jno
jge
mov
enter
shl
dec
enter
enter
aas
in
(bad)
int
bound
cmp
xor
test
mov
loop
sbb
sbb
leave
add
xchg
hlt
mov
loopne
dec
cmc
imul
enter
jno
aas
in
mov
enter
jne
mov
adc
adc
enter
and
dec
ja
movs
jnp
enter
xor
sbb
jge
mov
enter
shl
mov
(bad)
dec
ja
sahf
mov
and
jnp
enter
xor
sbb
jge
mov
enter
rcr
inc
es
jno
jno
enter
dec
out
or
cmc
or
enter
jno
aas
in
cld
jne
mov
pop
pop
jno
and
ja
sahf
mov
mov
loop
mov
jecxz
lahf
inc
es
dec
fnstcw
enter
retf
sbb
enter
shl
dec
enter
and
mov
enter
xor
(bad)
dec
ja
ja
cli
jne
mov
jge
mov
aaa
loopne
lahf
test
jno
aaa
test
mov
sbb
mov
enter
leave
in
clc
mov
cmc
out
enter
and
mov
or
xchg
dec
icebp
jns
enter
sbb
xchg
aaa
loop
mov
pop
mov
es
(bad)
loop
pop
inc
shl
inc
cwde
mov
jl
jno
inc
in
pop
sbb
fwait
lods
xor
ss
daa
mov
cmc
xchg
aam
xor
leave
xchg
xor
hlt
sbb
leave
mov
pop
jno
add
ja
sbb
ja
cmc
mov
mov
adc
xor
imul
ja
popf
cdq
(bad)
cmp
mov
or
lock
xchg
push
jno
xchg
aam
and
lock
pop
pop
jno
fwait
dec
es
pop
inc
in
pop
repnz
mov
xchg
xor
dec
and
repnz
leave
xchg
hlt
out
loop
cld
lea
jno
enter
xor
xor
dec
sub
cld
lea
je
and
ja
xchg
and
inc
dec
jae
mov
and
sub
enter
xor
mov
push
inc
enter
rcl
cli
pushf
pop
je
pushf
pop
jo
inc
mov
mov
loop
(bad)
mov
cmc
jae
enter
mov
mov
aaa
loop
xchg
sbb
mov
xor
sub
inc
dec
jns
inc
mov
int
cld
add
pop
jo
pushf
pop
jo
inc
mov
mov
loop
sub
cmps
xor
enter
pop
loopne
mov
popf
jp
sbb
cld
repnz
loopne
mov
sbb
jno
and
dec
ja
jne
jbe
sbb
mov
mov
jno
retf
mul
or
push
rcr
jp
cmc
xlat
inc
enter
and
ja
cmc
jle
aaa
loop
jae
sbb
(bad)
cld
bnd
mov
enter
pop
loopne
mov
test
mov
loop
ret
mov
aaa
loop
ret
mov
aaa
loop
cli
dec
test
cdq
cmp
loop
hlt
or
clc
repnz
loopne
mov
fld
sahf
cmc
dec
inc
enter
and
jo
enter
mov
mov
enter
loope
clc
mov
cwde
lds
dec
loope
mov
dec
cdq
out
sbb
mov
aaa
loop
xor
jecxz
mov
sbb
mov
xchg
mov
dec
movs
(bad)
jno
enter
ss
jbe
sbb
cdq
mov
loop
ja
mov
jno
aam
mov
and
mov
xlat
pop
jno
inc
cwde
leave
mov
loop
lahf
fucomi
mov
xor
cwde
leave
mov
loop
sbb
call
ja
cli
dec
loope
mov
dec
sbb
jmp
dec
les
enter
xor
cs
inc
in
pop
mov
pop
loopne
mov
jne
stos
mov
mov
enter
fcomp
hlt
add
loop
ja
xor
add
jno
inc
cwde
lea
mov
ds
ja
xchg
mov
or
pop
and
jno
and
ja
popf
hlt
add
loop
jbe
cwde
add
mov
dec
sbb
sbb
jno
dec
mov
jno
ret
xchg
sbb
jno
int3
sbb
ja
cwde
lea
and
jo
mov
cwde
lea
mov
jge
aaa
loop
ja
cmp
rcl
mov
imul
ins
or
and
repnz
mov
pushf
mov
clc
sbb
mov
cld
sbb
jno
aas
cli
clc
repnz
fisub
lahf
mov
sbb
mov
enter
xor
das
jno
inc
cwde
in
mov
loop
js
inc
jnp
enter
dec
jno
mov
xchg
mov
xchg
inc
mov
(bad)
sub
dec
es
xchg
or
icebp
(bad)
sbb
mov
psrad
and
inc
ja
xchg
mov
inc
dec
(bad)
(bad)
xor
dec
loop
jnp
cmps
inc
ja
xchg
mov
inc
dec
lea
sti
sbb
clc
and
dec
cdq
(bad)
sti
sbb
clc
and
(bad)
xor
adc
and
mov
jbe
adc
and
xor
ja
cmps
inc
ja
xchg
mov
daa
dec
aas
ja
sub
hlt
mov
jo
pop
(bad)
xor
xchg
ja
int3
nop
xor
cwde
xchg
xor
enter
(bad)
inc
in
repnz
dec
cdq
dec
stc
sbb
jle
(bad)
jecxz
xor
sbb
daa
and
inc
ja
xchg
mov
xchg
mov
mov
jecxz
xor
sbb
popf
loope
xor
pop
and
fwait
adc
xor
nop
xor
and
mov
cli
mov
inc
ja
nop
xor
cwde
ja
and
ja
sbb
enter
dec
repnz
push
enter
sahf
cmc
rol
sbb
daa
lahf
clc
sub
ja
cmc
sub
sbb
das
sub
fisub
sub
sbb
jno
sahf
dec
cli
sub
mov
clc
(bad)
loope
clc
mov
xchg
jns
enter
dec
movs
xchg
mov
xchg
mov
dec
mov
outs
ja
nop
hlt
retf
sub
mov
inc
cwde
mov
aaa
loop
pop
scas
shl
and
pop
ja
xchg
mov
or
cmc
out
sbb
addr16
dec
mov
or
mov
enter
rcr
push
aaa
loop
add
cmc
pop
inc
enter
aas
cli
clc
bnd
mov
mov
sub
aaa
pop
outs
ja
nop
hlt
retf
sub
mov
inc
cwde
mov
aaa
loop
and
jb
ja
adc
add
xchg
mov
xchg
mov
aaa
test
xchg
aaa
loop
inc
cld
sbb
js
mov
std
mov
sbb
jno
stc
fnsave
pushf
ret
dec
sbb
mov
iret
fdivr
pop
ja
dec
daa
and
jns
arpl
cs
fist
enter
leave
in
clc
mov
jne
jbe
sbb
jno
adc
dec
jbe
push
jns
adc
and
aaa
sahf
mov
mov
dec
cdq
xor
sbb
lock
pop
xchg
sbb
pop
pop
jno
dec
sbb
cdq
jbe
sbb
cdq
xchg
sti
sbb
jno
push
jmp
mov
nop
hlt
ja
loop
daa
and
inc
ja
sahf
mov
and
jnp
enter
xor
cdq
fdivrp
sbb
jno
push
jmp
aaa
loop
pop
nop
shl
inc
mov
es
push
fldenv
dec
cs
jno
jno
enter
dec
out
or
jne
xchg
mov
mov
enter
rcl
inc
xor
cwde
jno
aaa
loop
lahf
dec
cs
dec
fnstcw
mov
jno
jno
jno
enter
dec
out
or
jne
xchg
mov
mov
enter
shl
inc
enter
enter
aas
in
(bad)
int
pop
lahf
shr
ja
jle
ja
test
ja
loop
and
nop
int3
ja
loop
and
loop
ja
sahf
mov
aaa
push
xor
cwde
jno
aaa
loop
pop
jmp
cwde
jno
aaa
loop
lahf
adc
jno
dec
fldenv
cmp
xchg
dec
scas
mov
xchg
mov
js
jno
jno
jno
enter
dec
out
or
jne
xchg
mov
mov
enter
shl
mov
mov
enter
shl
inc
enter
enter
aas
in
(bad)
int
gs
cmp
xor
cwde
jno
aaa
loop
lahf
pop
das
jno
dec
fnstcw
retf
ret
inc
cwde
jno
aaa
loop
lahf
dec
das
jno
dec
fnstcw
cmp
xchg
dec
scas
mov
xchg
mov
clc
das
jno
jno
jno
enter
dec
out
or
cmc
outs
inc
enter
enter
aas
in
cli
jne
xchg
mov
dec
sbb
adc
jno
jne
xchg
mov
dec
cdq
(bad)
cli
sbb
sbb
pop
jno
dec
sbb
cdq
push
cli
sbb
cdq
xchg
stc
sbb
jno
push
jmp
mov
nop
hlt
ja
loop
daa
and
inc
ja
sahf
mov
mov
nop
hlt
ja
loop
daa
and
inc
ja
sahf
mov
inc
in
inc
xchg
cdq
(bad)
stc
sbb
jno
push
jmp
mov
nop
hlt
ja
loop
daa
and
mov
mov
nop
hlt
ja
loop
daa
and
mov
and
ja
movs
jnp
enter
xor
sbb
dec
sbb
cdq
repnz
sbb
lock
jge
dec
sbb
sbb
pop
jno
dec
sbb
cdq
dec
stc
sbb
cdq
push
sbb
jno
push
jmp
mov
nop
hlt
ja
loop
daa
and
inc
ja
sahf
mov
mov
nop
hlt
ja
loop
daa
and
inc
ja
sahf
mov
and
inc
ja
movs
jnp
enter
xor
sbb
dec
sbb
cdq
jbe
sbb
leave
dec
cmps
sbb
hlt
fwait
pop
loop
dec
cmc
fild
sbb
jno
aas
in
mov
enter
jne
xchg
mov
dec
sbb
pop
jno
jne
xchg
mov
dec
cdq
jmp
cdq
or
sbb
jno
push
jmp
mov
nop
hlt
ja
loop
daa
and
mov
mov
nop
hlt
ja
loop
daa
and
mov
dec
repz
ss
clc
sbb
jno
push
jmp
mov
nop
hlt
ja
loop
daa
and
ja
sahf
mov
and
inc
ja
movs
jnp
enter
xor
cdq
jb
sbb
jno
push
jmp
aaa
loop
pop
nop
shl
inc
mov
es
xor
jno
dec
fldenv
sbb
xor
cwde
jno
aaa
loop
lahf
les
jns
enter
retf
sbb
enter
inc
xor
inc
cwde
lea
add
jno
inc
cwde
jno
aaa
loop
lahf
les
jno
mov
ret
lahf
dec
cld
retf
mov
pop
loop
lahf
sub
jno
aaa
test
test
loop
or
sbb
call
fld
sub
clc
lock
dec
sbb
fwait
dec
es
sbb
in
nop
inc
cwde
cmc
mov
loop
mov
mov
jno
ds
mov
mov
adc
jno
inc
dec
jns
pushf
pop
jo
pop
mov
das
xchg
hlt
div
loop
dec
cmc
cmp
and
and
mov
std
sbb
xor
push
ja
xchg
hlt
xlat
xor
ja
cli
dec
mov
cdq
mov
sbb
jno
inc
cwde
lds
shl
mov
jne
ja
popf
cdq
xchg
sub
cmp
(bad)
cdq
fdiv
sbb
jno
dec
loope
mov
dec
cld
bnd
mov
enter
leave
in
mov
test
mov
loop
cli
dec
test
cdq
pop
xor
mov
or
js
(bad)
cdq
add
sbb
jno
dec
loope
mov
dec
cdq
fsubp
sbb
mov
xor
mov
enter
sub
test
xor
cli
dec
movs
(bad)
cdq
(bad)
out
jno
or
lock
sbb
ja
cwde
leave
mov
loop
ja
sbb
mov
dec
mov
jno
aam
mov
and
mov
mov
cwde
leave
mov
loop
lahf
sar
mov
xor
cwde
leave
mov
loop
sbb
call
ja
cli
dec
loope
mov
dec
sbb
loop
ja
adc
js
lahf
jo
enter
xor
xor
ja
in
pop
mov
push
xsaveopt
mov
mov
enter
fcomp
hlt
or
loop
ja
xor
mov
and
lea
mov
ss
ja
xchg
mov
or
pop
and
jno
and
ja
popf
hlt
or
loop
jbe
cwde
push
mov
loop
jb
aad
add
sbb
jno
cwde
aaa
jno
inc
in
pop
sbb
sbb
lea
add
jno
mov
pop
jno
dec
lea
and
mov
or
dec
mov
sbb
jno
enter
xor
mov
fwait
cmc
rol
adc
js
mov
ja
ja
mov
mov
xor
mov
and
ja
pushf
xchg
mov
or
and
mov
xchg
mov
jge
mov
enter
adc
jno
aam
jno
cwde
jne
stos
mov
jno
dec
fldenv
or
pop
ret
shl
and
pop
ja
xchg
in
jmp
loop
hlt
and
and
or
and
test
mov
loop
inc
adc
mov
or
call
loop
lahf
sti
dec
daa
mov
mov
aaa
loop
mov
pushf
sahf
xchg
mov
sbb
enter
xor
sbb
mov
loope
jno
xor
dec
ja
mov
mov
enter
ins
loopne
mov
add
enter
xor
pushf
xchg
sbb
mov
(bad)
sub
dec
es
xchg
adc
adc
pavgw
ja
dec
cdq
and
sbb
mov
(bad)
cmc
cmp
sbb
and
aaa
and
ja
xchg
mov
sahf
cmc
push
push
enter
xchg
xor
inc
fisub
lahf
call
push
jo
and
push
ja
dec
cdq
cs
sbb
and
xchg
pop
jno
enter
fdiv
ja
fistp
mov
sbb
clc
xor
xchg
mov
(bad)
loope
and
pop
push
ja
dec
cdq
sbb
sbb
sub
clc
leave
ja
sbb
jno
sahf
dec
into
add
inc
ja
ja
mov
sbb
mov
xchg
mov
ds
xor
aaa
adc
inc
cwde
jo
aaa
loop
and
cli
pop
ja
ja
mov
in
mov
aaa
loop
mov
and
jae
in
call
sbb
fistp
sbb
sub
fisub
sub
mov
lock
ja
fidiv
leave
sbb
xor
cwde
jne
stos
mov
cdq
cmps
loop
jno
aas
xor
ja
nop
xor
cwde
ja
pop
mov
ja
sub
(bad)
mov
jno
jg
(bad)
hlt
or
and
aaa
(bad)
xor
pop
test
and
mov
inc
pop
test
mov
sbb
out
ss
enter
(bad)
jecxz
ror
in
add
and
sub
dec
iret
add
add
jno
aas
sti
clc
xor
mov
enter
enter
int
jo
enter
enter
enter
mov
or
jno
shld
xchg
inc
pop
mov
push
ja
and
mov
pop
ja
ja
and
xor
and
ja
ja
and
mov
pop
ja
ja
and
xor
and
ja
ja
and
mov
ja
push
pop
ja
pushf
lahf
jmp
leave
dec
sbb
sub
mov
jno
leave
dec
sbb
sub
mov
jno
leave
dec
sbb
sub
aam
sbb
jno
leave
dec
sbb
sub
jle
sbb
cmp
mov
test
ja
out
push
ja
ja
and
xor
and
push
ja
ja
and
mov
push
ja
ja
and
mov
push
ja
movs
lds
sbb
test
push
inc
das
mov
(bad)
or
aas
dec
jnp
enter
std
cmc
in
ss
enter
pop
pop
jno
fcomp
mov
xor
and
push
ja
ja
mov
popf
shl
enter
push
pop
jno
fcomp
mov
mov
push
ja
pushf
xchg
xor
inc
pop
push
pop
jno
xor
jno
imul
ss
mov
pop
call
out
sbb
inc
imul
lahf
sbb
jno
imul
lock
ins
loop
sbb
jno
xor
inc
pop
push
pop
jno
js
jno
imul
enter
mov
pop
call
out
sbb
inc
push
push
pop
jno
inc
cmp
imul
aaa
enter
mov
push
call
out
sbb
mov
emms
lea
enter
enter
push
pop
jno
fcomp
mov
mov
push
ja
inc
mov
inc
clc
repnz
enter
push
repnz
push
enter
adc
mov
loop
dec
jne
lods
mov
mov
rol
lahf
mov
jno
dec
jmp
cmp
lahf
movs
cmp
mov
xor
mov
loope
xor
xor
cwde
ja
sbb
dec
dec
sbb
sub
xor
sbb
dec
push
enter
push
loop
inc
push
pop
jno
enter
inc
pop
mov
repnz
lods
dec
sbb
or
ja
popf
and
or
xor
(bad)
stos
xor
sar
ja
sbb
ss
xor
inc
push
pop
jno
enter
push
sbb
ja
pop
mov
repnz
lods
dec
sbb
mov
popf
and
adc
xor
(bad)
stos
xor
or
jno
imul
enter
retf
sbb
leave
ja
sbb
je
jno
mov
adc
push
ja
xchg
mov
leave
dec
sbb
sub
mov
jno
enter
push
pop
jno
enter
push
jne
jne
sbb
sbb
sbb
xor
(bad)
stos
xor
nop
cmp
imul
enter
mov
loop
inc
push
pop
jno
enter
push
jne
jne
sbb
sbb
sbb
xor
(bad)
stos
xor
aam
jno
imul
mov
sub
ss
std
pop
shl
enter
sbb
ja
mov
pop
pop
enter
mov
jne
lods
mov
push
ja
mov
sbb
sub
mov
xor
addr16
ja
jne
ja
sbb
jno
cwde
jne
lods
mov
jno
enter
enter
push
pop
jno
enter
push
pop
jno
enter
push
ja
pop
bound
sbb
and
adc
xor
cwde
stos
xor
mov
cmc
in
ss
in
sbb
xor
sbb
jno
and
push
ja
jne
lods
mov
jo
enter
push
pop
jno
aam
jno
mov
xor
mov
mov
jo
enter
bound
sbb
and
adc
xor
cwde
stos
xor
les
jno
imul
sub
loop
inc
push
pop
jno
enter
push
sbb
ja
and
(bad)
sbb
jno
mov
jne
test
sbb
jno
enter
enter
push
pop
jno
loop
mov
cld
xor
mov
mov
sbb
jno
enter
enter
enter
mov
(bad)
stos
xor
inc
ds
imul
sub
xor
inc
ficomp
ja
sub
mov
xor
addr16
ja
jne
ja
sbb
jno
enter
mov
jne
lods
mov
push
ja
mov
sbb
sub
mov
xor
addr16
outs
leave
sbb
jno
mov
jne
lods
mov
jno
enter
enter
push
pop
jno
enter
push
pop
jno
enter
push
jne
ja
sbb
jno
lods
jne
ja
dec
sbb
jno
adc
xor
sbb
jno
cmp
mov
xor
mov
mov
sbb
mov
jne
ja
sbb
and
into
(bad)
xor
(bad)
stos
xor
push
aas
jno
imul
mov
sub
ss
std
jge
xor
in
jno
mov
ja
pop
enter
mov
jne
lods
mov
jno
test
jno
imul
mov
sub
ss
std
jge
xor
dec
sbb
jno
enter
enter
mov
jne
lods
mov
jno
in
aas
jno
imul
aaa
enter
xor
inc
push
pop
jno
enter
push
ja
pop
adc
jno
mov
popf
and
adc
xor
sbb
xor
enter
jmp
xor
mov
xor
mov
mov
sbb
mov
ja
pop
enter
mov
jne
lods
mov
jno
fs
ja
cmp
jno
std
sub
ss
std
pop
shl
enter
push
sbb
jo
enter
enter
mov
jne
scas
mov
push
ja
mov
cdq
sub
loop
(bad)
xor
dec
cmc
test
fisub
sub
dec
into
inc
mov
sub
dec
jne
lods
mov
pop
xor
clc
mov
icebp
stos
xor
aas
loop
hlt
or
sar
pop
jno
xor
dec
ja
mov
adc
ja
enter
cmp
lahf
enter
mov
xor
mov
loope
xor
xor
cwde
ja
sbb
dec
dec
sbb
sub
xor
sbb
mov
xor
jno
enter
push
pop
jno
enter
inc
pop
mov
repnz
lods
dec
sbb
or
ja
popf
and
add
xor
(bad)
stos
xor
push
cmp
out
ss
mov
inc
inc
push
pop
jno
enter
push
sbb
ja
pop
mov
repnz
lods
dec
sbb
mov
popf
and
adc
xor
(bad)
stos
xor
nop
cmp
shl
retf
sbb
leave
ja
sbb
je
jno
mov
adc
push
ja
xchg
mov
leave
dec
sbb
sub
mov
jno
enter
push
pop
jno
enter
push
ja
sbb
retf
sbb
scas
xor
mov
outs
ja
mov
lock
ror
jno
mov
ja
pop
mov
ja
cmc
fild
sbb
jno
enter
enter
and
outs
ja
popf
dec
out
pop
jno
mov
sbb
cmp
sbb
in
ss
enter
mov
push
jo
enter
push
pop
jno
lods
add
mov
xor
mov
mov
jo
enter
fdiv
pop
retf
sbb
scas
xor
mov
outs
ja
mov
clc
(bad)
mov
sbb
xor
sbb
xor
xor
enter
fdiv
ja
sbb
and
adc
xor
cwde
stos
xor
rol
jno
imul
ss
aaa
loop
ja
sub
mov
xor
addr16
ja
ja
pop
fcomp
ja
sbb
and
adc
sbb
enter
imul
inc
push
pop
jno
enter
push
ja
pop
dec
sbb
jno
enter
enter
adc
pop
adc
xor
sbb
jno
clc
test
ja
hlt
inc
ja
jmp
mov
xor
mov
mov
sbb
push
jns
ja
sbb
xor
(bad)
stos
xor
xchg
add
imul
ss
std
sub
ss
std
pop
shl
enter
sahf
jne
ja
sbb
jno
enter
mov
jne
lods
mov
outs
ja
mov
sbb
sub
mov
xor
addr16
ja
jne
ja
sbb
jno
cwde
jne
scas
mov
jno
enter
enter
imul
inc
push
pop
jno
enter
push
jne
ja
sbb
jno
(bad)
jne
ja
dec
sbb
adc
pop
adc
xor
sbb
jno
push
sbb
xor
sbb
xor
add
jno
in
gs
enter
mov
jne
lods
mov
jno
mov
jno
imul
aaa
enter
mov
jno
enter
push
pop
jno
enter
push
ja
sbb
enter
mov
jne
lods
mov
jno
hlt
add
imul
mov
sub
ss
std
jge
xor
lods
ja
sbb
dec
dec
sbb
leave
(bad)
xor
sbb
ja
enter
push
pop
jno
enter
push
pop
jno
enter
push
jne
ja
sbb
jno
(bad)
jne
ja
dec
sbb
les
ja
sbb
jno
push
mov
or
sbb
cdq
dec
cmc
stos
xor
sub
fisub
sub
dec
es
jnp
in
nop
inc
pop
popf
dec
ja
pop
dec
sbb
sbb
push
sbb
sbb
cdq
jmp
(bad)
loopne
enter
sahf
cmc
jmp
enter
sahf
cmc
(bad)
outs
enter
xor
mov
cmp
jno
enter
das
xchg
xor
inc
(bad)
xor
dec
cld
xor
mov
fdiv
ret
mov
icebp
lahf
cmp
add
mov
jne
scas
mov
jno
mov
cmc
lods
xchg
aaa
loop
mov
xchg
xor
rcr
push
mov
pop
mov
aaa
push
xor
sbb
ja
cmc
push
aad
loop
mov
xchg
mov
xchg
mov
xchg
inc
mov
mul
daa
leave
jg
outs
adc
jo
inc
fcomi
cdq
jnp
jno
mov
nop
hlt
ja
loop
daa
and
ja
cmc
mov
sbb
jno
aas
in
movs
inc
inc
mov
mov
jo
fnstenv
(bad)
mov
mov
enter
loope
clc
mov
pusha
mov
or
scas
js
jno
dec
sbb
cdq
outs
rcr
jb
fnstenv
(bad)
mov
mov
enter
aaa
sbb
mov
nop
hlt
ja
loop
daa
and
data16
xchg
xor
loop
add
jne
(bad)
mov
mov
enter
aaa
sbb
mov
nop
hlt
ja
loop
daa
and
or
iret
push
xor
cwde
jno
aaa
loop
lahf
push
pusha
mov
or
hlt
jns
jno
dec
sbb
cdq
(bad)
fistp
cmp
shr
push
xor
cwde
jno
aaa
loop
lahf
movs
or
dec
pusha
mov
or
test
pop
jno
dec
sbb
cdq
and
sbb
jp
fnstenv
lds
loop
mov
sbb
add
mov
nop
hlt
ja
loop
daa
and
data16
popf
or
lds
pop
icebp
scas
xor
cwde
jno
aaa
loop
lahf
fmul
jno
inc
in
xchg
aaa
loop
mov
pusha
mov
or
and
jno
dec
sbb
cdq
call
jno
mov
xor
push
test
enter
aaa
loop
daa
mov
cmc
popf
xchg
aaa
loop
dec
adc
pop
jbe
xor
pop
out
ss
aaa
loop
mov
adc
lahf
cmp
jno
dec
fstp
cmp
xchg
dec
(bad)
mov
out
jecxz
mov
sbb
daa
and
jns
das
sbb
and
inc
(bad)
sbb
cld
sub
sbb
and
adc
mov
sahf
mov
rcr
jg
sbb
jno
xchg
inc
sub
or
jno
inc
clc
lock
lock
es
into
and
dec
dec
jmp
sbb
sbb
jno
mov
nop
hlt
call
addr16
cmc
mov
enter
enter
aas
in
loop
in
mov
or
jne
lds
jmp
enter
cmp
mov
push
scas
xor
cwde
pushf
xor
and
dec
mov
jb
fnstenv
lds
jmp
enter
fstp
hlt
xchg
aas
loop
dec
popf
int3
test
loop
jae
or
jbe
pop
jno
dec
lock
fstp
mov
mov
nop
hlt
call
fs
popf
int3
test
loop
jno
or
inc
jnp
jno
dec
lock
fstp
mov
mov
nop
hlt
call
fs
xchg
xor
out
mov
mov
nop
hlt
call
fs
popf
int3
test
loop
jle
or
cld
jnp
jno
dec
lock
fstp
mov
mov
nop
hlt
call
gs
popf
int3
test
loop
jl
or
mov
dec
lock
fcomp
xchg
dec
xchg
jne
mov
mov
nop
hlt
call
gs
popf
int3
test
loop
jp
or
je
pop
jno
dec
lock
fcomp
mov
mov
nop
hlt
call
gs
jne
xlat
mov
mov
aaa
loop
xchg
sti
clc
repnz
mov
push
scas
xor
in
mov
sahf
mov
inc
cwde
cdq
xor
icebp
retf
mov
jne
xchg
repz
jno
dec
repz
jl
sbb
clc
repnz
mov
inc
fild
mov
pop
jno
mov
mov
dec
icebp
mov
dec
(bad)
jae
enter
enter
xor
mov
retf
div
lea
repz
ja
mov
dec
js
xor
enter
xor
mov
push
inc
ja
jmp
aaa
xchg
mov
dec
in
mov
dec
sbb
pop
jno
dec
loope
mov
dec
cdq
not
sbb
repnz
mov
mov
out
stos
dec
clc
mov
div
push
xchg
xchg
mov
repz
jle
test
jno
dec
and
jmp
loope
mov
jno
dec
loope
mov
dec
cdq
(bad)
rcr
cmp
mov
jno
dec
loope
mov
dec
cdq
mov
sbb
call
nop
hlt
mov
loop
daa
and
gs
movs
ret
sbb
mov
mov
cwde
lea
fadd
xor
cwde
lea
je
jno
mov
nop
hlt
mov
loop
daa
and
data16
sahf
mov
inc
cwde
lea
fmul
jno
inc
cwde
lea
int3
dec
cld
repnz
mov
mov
mov
enter
fdiv
cli
dec
loope
mov
dec
cdq
rcr
sbb
test
xor
mov
aaa
loop
mov
adc
js
jle
ja
nop
hlt
mov
mov
or
and
xchg
xchg
hlt
(bad)
xor
mov
cmp
xchg
dec
xchg
jne
mov
cld
sbb
ja
test
(bad)
aaa
loop
out
pop
jno
sub
cwde
lea
enter
dec
fldenv
inc
scas
xor
cwde
lea
cld
(bad)
ja
cwde
lea
cld
or
inc
cwde
movs
xor
call
loop
retf
int
(bad)
add
inc
cwde
movs
xor
mov
int
(bad)
call
loop
retf
mov
cmp
xchg
dec
xchg
jge
mov
ss
daa
mov
nop
hlt
mov
loop
daa
and
ja
sahf
mov
inc
cwde
lea
or
jno
inc
cwde
mov
retf
mov
enter
add
mov
lahf
ja
lahf
sub
jno
inc
cwde
test
arpl
ja
cwde
lea
jge
mov
enter
xor
mov
enter
xor
mov
xor
mov
mov
jo
and
ja
nop
hlt
(bad)
xor
mov
mov
in
mov
ja
sbb
enter
sbb
jno
inc
cwde
lea
aaa
test
(bad)
aaa
loop
mov
adc
mov
fnstsw
ret
mov
test
(bad)
aaa
loop
sub
sbb
ds
jne
add
sbb
jno
and
das
sub
fbstp
popf
xchg
xchg
iret
lods
push
jno
and
daa
and
inc
mov
xchg
test
pop
pop
lods
xor
sbb
jno
call
cwde
aad
aaa
loop
mov
or
lahf
cwde
or
ja
sbb
jle
sbb
out
dec
enter
sar
jb
xor
pop
sbb
xchg
loop
mov
dec
in
ss
enter
enter
pop
mov
pusha
ja
cmc
inc
enterw
call
div
jae
sbb
lahf
mov
dec
mov
shl
addr16
mov
nop
hlt
(bad)
es
daa
and
jmp
loop
ja
adc
imul
imul
push
mov
sbb
mov
pop
jno
and
mov
dec
jmp
xlat
xor
(bad)
sbb
dec
fidiv
(bad)
xor
mov
aaa
sbb
inc
and
ja
adc
retf
mov
fmul
aas
div
push
xchg
xchg
mov
push
jl
test
dec
aam
loop
test
sti
bnd
mov
dec
fimul
enter
arpl
mov
enter
fbstp
(bad)
fcomi
fisub
cwde
fistp
dec
mov
sbb
imul
ja
cwde
out
fwait
aaa
loop
lahf
les
jno
dec
out
aaa
gs
inc
cwde
out
fwait
aaa
loop
cli
dec
lods
lahf
mov
dec
cdq
fcomp
popf
mov
dec
cdq
xor
mov
cdq
mov
or
sbb
cwde
out
fwait
aaa
loop
lahf
int3
or
ja
sbb
inc
(bad)
sbb
push
ja
jne
scas
mov
jno
push
lds
ja
pop
out
ss
enter
stos
repz
mov
jno
scas
mov
jno
pop
mov
test
xlat
mov
jno
adc
dec
nop
int3
pop
es
cli
std
pop
cmps
xor
enter
ins
jne
scas
mov
jno
push
lds
ja
cmp
xor
cld
retf
mov
mov
jno
scas
mov
jno
pop
mov
test
jmp
fistp
cld
retf
mov
mov
jno
ins
xchg
test
sbb
int3
ja
sbb
enter
push
pop
jno
push
adc
inc
pop
lds
enter
(bad)
sbb
mov
sbb
cld
bnd
mov
enter
jge
mov
dec
and
mov
push
int3
ret
mov
aaa
push
jno
mov
dec
sbb
in
xchg
xor
and
jle
enter
mov
mov
sbb
cld
bnd
mov
enter
jge
mov
dec
and
mov
push
int3
ret
mov
aaa
push
jno
mov
dec
sbb
in
xchg
xor
and
ja
loop
ret
and
jg
enter
enter
inc
cwde
rcr
lock
sub
xor
pop
xchg
(bad)
cld
xor
inc
pop
mov
aaa
enter
mov
ja
lahf
je
jno
inc
pop
movs
pop
retf
bound
mov
sbb
lock
sbb
jno
addps
sbb
enter
adc
xor
retf
sbb
pop
scas
inc
fidiv
ja
fidiv
enter
inc
pop
int
and
jno
std
sub
ss
enter
enter
enter
add
jno
sub
xor
sbb
jno
enter
mov
ja
sbb
enter
and
mov
and
ja
and
enter
mov
cmc
imul
sbb
adc
daa
and
jl
enter
and
mov
mov
enter
cwde
loop
(bad)
mov
mov
sbb
enter
adc
mov
dec
cld
repnz
mov
jno
cwde
test
jno
dec
cmc
(bad)
loope
loop
mov
adc
add
sahf
push
sbb
ja
sbb
ja
sbb
mov
adc
dec
nop
hlt
fbld
loop
daa
mov
icebp
add
enter
enter
enter
inc
adc
inc
cwde
fstp
enter
xlat
outs
xor
sbb
jl
enter
les
test
sbb
jno
mov
jno
rcl
retf
jns
sbb
jno
inc
pop
xchg
daa
and
jno
enter
(bad)
stc
and
rcr
mov
or
lock
lock
jno
fwait
dec
es
pop
dec
ficom
xor
sahf
mov
cdq
loope
enter
dec
in
js
js
ja
hlt
mov
leavew
sbb
jae
enter
enter
cmc
or
ja
adc
fcmovb
sbb
jno
(bad)
cdq
pcmpeqd
sbb
jno
cmc
jne
xor
sbb
jno
mov
loop
pop
jl
jno
idiv
mov
aaa
loop
(bad)
mov
icebp
stos
xor
xor
stc
mov
dec
cmc
mov
xor
test
mov
loop
lds
cmc
repnz
dec
aad
mov
dec
mov
mov
jge
enter
cmps
xchg
hlt
xchg
xor
lds
inc
mov
loop
loopne
mov
int
push
aaa
loop
repnz
mov
pop
leave
mov
xor
imul
xor
ror
loopne
mov
cwde
test
sbb
std
pop
shl
enter
enter
in
jno
dec
and
js
fnsave
enter
mov
jno
aas
das
dec
ja
sahf
push
adc
ja
and
ret
mov
cdq
mov
loop
cs
and
ret
mov
jbe
enter
jl
jno
mov
mov
enter
leave
in
mov
sbb
xor
(bad)
cwde
push
jo
sbb
jl
enter
enter
push
pop
jno
lea
jns
fcom
jno
jo
pop
ja
jmp
aaa
xchg
mov
std
sbb
inc
pop
dec
(bad)
xchg
loop
jno
int
shl
int
shl
int
call
dec
int
in
ss
int
shl
int
shl
int
shl
int
out
ss
int
out
ss
into
sbb
add
and
jge
enter
ss
dec
int
shl
int
shl
int
call
pop
js
popa
ja
push
jno
mov
loop
and
enter
enter
inc
cwde
test
mov
mov
jno
ins
std
mov
adc
mov
enter
and
mov
enter
into
sbb
mov
pcmpeqw
repnz
loop
mov
pop
jno
and
jno
dec
mov
jno
call
jne
scas
mov
jp
enter
push
pop
jno
int3
push
jno
and
je
enter
xor
mov
xchg
hlt
xor
mov
mov
adc
in
enter
aaa
sbb
jo
aaa
loop
mov
cdq
shl
enter
leave
loop
mov
mov
dec
and
mov
outs
ins
sbb
mov
mov
aaa
loop
mov
and
push
mov
cs
lahf
add
jno
aaa
sub
(bad)
mov
jno
scas
sbb
jo
dec
ja
jmp
aaa
xchg
mov
dec
sbb
mov
dec
cld
repnz
jne
scas
mov
mov
enter
fdiv
ja
sbb
mov
pop
pop
jno
and
jno
dec
mov
jno
call
jne
scas
mov
jnp
enter
pop
pop
jno
int3
pop
jno
and
jne
enter
aaa
loop
hlt
add
xor
hlt
sbb
add
sahf
mov
cmp
sbb
enter
enter
aam
xor
sar
enter
enter
enter
enter
jle
jno
aaa
loop
repz
mov
int3
and
call
jne
mov
and
js
enter
pop
pop
jno
pop
adc
ja
lahf
jne
enter
aaa
loop
jbe
cwde
jno
aaa
loop
addr16
in
mov
cwde
jo
aaa
loop
cli
dec
call
sbb
pop
jno
dec
call
cdq
loop
sbb
sbb
dec
sbb
mov
dec
mov
mov
jns
enter
aaa
loop
ja
cmp
sbb
enter
enter
dec
mov
js
enter
enter
shl
inc
cwde
jo
aaa
loop
cli
dec
call
sbb
pop
jno
dec
call
cdq
pop
ret
sbb
sbb
dec
sbb
mov
dec
mov
xor
and
int3
jbe
loop
ja
cmp
sbb
pop
pop
jno
enter
enter
in
xor
mov
ja
hlt
shl
clc
(bad)
stc
in
mov
cwde
jo
aaa
loop
cli
dec
call
sbb
pop
pop
jno
dec
call
cdq
mov
sbb
sbb
dec
sbb
mov
dec
mov
xor
and
jns
enter
aaa
loop
ja
cmp
sbb
pop
jno
enter
enter
loopne
xor
pop
jns
enter
enter
leave
loop
mov
mov
dec
and
mov
imul
in
xor
sbb
jno
std
xor
arpl
sbb
jno
dec
loop
mov
sbb
hlt
mov
loop
std
dec
sbb
aaa
loop
inc
mov
dec
dec
mov
sbb
sbb
jno
enter
enter
loopne
xor
into
jbe
enter
enter
aaa
jecxz
mov
xchg
hlt
mov
loop
dec
retf
outs
enter
mov
seto
jbe
loop
daa
inc
cwde
test
in
xor
cwde
test
adc
ja
fldenv
aaa
sbb
jo
aaa
loop
mov
cmp
xor
sbb
mov
enter
fxch
xor
sbb
jno
std
cmp
sub
sbb
jno
dec
jecxz
mov
sbb
hlt
mov
loop
std
dec
sbb
aaa
loop
inc
mov
dec
dec
mov
sbb
sbb
jno
enter
enter
call
push
jbe
enter
enter
ss
mov
nop
cld
jbe
loop
hlt
add
xor
hlt
sbb
add
adc
loop
jecxz
mov
fild
fild
inc
pop
cld
repnz
loop
mov
loop
daa
mov
nop
hlt
xor
js
enter
jo
sub
dec
mov
xor
ja
sbb
enter
enter
mov
cmc
out
enter
cmp
mov
mov
jecxz
mov
mov
dec
pop
jl
jno
mov
test
ja
aad
aaa
dec
and
mov
sbb
mov
push
pop
jno
jge
(bad)
stos
jb
sbb
or
mov
mov
enter
xor
loop
div
sbb
add
ja
cli
pop
in
mov
push
call
mov
cmp
mov
enter
dec
in
mov
mov
loop
xor
mov
aaa
test
mov
loop
data16
sbb
shl
enter
enter
mov
sbb
jno
mov
out
sbb
jno
dec
jmp
mov
xor
stc
mov
retf
sbb
ss
lahf
jl
jno
inc
adc
aad
sbb
icebp
dec
leave
sbb
sbb
mov
and
(bad)
shl
ss
lahf
cmp
jno
mov
loopne
mov
retf
xor
test
mov
loop
scas
int3
sbb
(bad)
add
mov
movs
test
jno
inc
in
pop
sbb
sbb
sbb
pop
mov
xor
dec
lds
enter
inc
loop
hlt
or
sbb
sub
mov
jno
pusha
add
clc
repnz
mov
aaa
push
mov
(bad)
and
je
enter
add
popa
ja
xchg
xchg
hlt
and
and
lahf
xchg
add
ja
jp
stos
xchg
mov
xchg
mov
lea
dec
ja
sbb
jno
enter
rcl
mov
sbb
shl
std
cmc
in
ss
enter
aas
cli
clc
xor
xchg
mov
std
cmc
in
ss
std
popf
shl
enter
dec
mov
mov
xor
and
ja
es
pop
push
pop
jno
ret
loop
imul
lahf
xchg
sbb
inc
in
nop
inc
pop
test
(bad)
inc
imul
add
loop
pop
push
pop
jno
mov
jno
repz
mov
push
call
int3
sbb
out
ss
cmc
ins
lds
aaa
sub
data16
sbb
out
ss
cmc
ins
lds
aaa
sub
(bad)
mov
jno
rcl
inc
fiadd
repz
jno
add
mov
xor
sbb
push
xor
repz
mov
push
call
add
sub
mov
jno
mov
xor
sbb
push
mov
push
call
inc
add
mov
xor
sbb
push
xor
rol
gs
push
mov
les
lahf
mov
sbb
mov
pop
jno
xchg
inc
sub
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
popf
xchg
xchg
es
cmc
iret
ja
sbb
push
add
ja
(bad)
xor
lahf
cwde
sbb
dec
fnstcw
(bad)
loope
mov
xor
mov
div
dec
and
xor
ins
xor
mov
je
xor
ss
sbb
mov
imul
jbe
ja
daa
and
sahf
mov
inc
mov
ja
sbb
jno
dec
sbb
enter
mov
sbb
sub
push
jg
(bad)
mov
loop
lock
fild
inc
pop
push
jg
xchg
or
loope
retf
in
sbb
ja
cmp
test
sbb
xor
out
sbb
cmp
sbb
cmp
out
sbb
and
sbb
and
out
sbb
sub
sbb
sub
out
sbb
adc
sbb
adc
out
sbb
sbb
sbb
sbb
out
sbb
add
sbb
add
out
sbb
or
sbb
or
out
sbb
icebp
test
sbb
cmc
test
sbb
stc
test
sbb
std
test
sbb
loope
mov
jno
aaa
cmp
test
sbb
jmp
out
sbb
in
test
sbb
rol
sbb
aad
mov
jno
aaa
cmp
test
sbb
fld
sbb
rol
jno
aaa
cmp
test
sbb
leave
test
sbb
int
mov
jno
aaa
cmp
out
sbb
mov
mov
jno
aaa
cmp
out
sbb
mov
out
sbb
mov
out
sbb
movs
test
sbb
test
out
sbb
lods
test
sbb
xchg
test
sbb
xchg
test
sbb
cdq
test
sbb
popf
test
sbb
mov
sbb
lea
sbb
jno
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
mov
jno
aaa
cmp
or
jno
aaa
cmp
out
sbb
cmp
enter
aaa
cmp
out
sbb
and
enter
aaa
cmp
out
sbb
sub
enter
aaa
cmp
out
sbb
adc
enter
aaa
cmp
out
sbb
add
enter
aaa
cmp
out
sbb
or
enter
aaa
cmp
out
sbb
icebp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
or
jno
aaa
cmp
out
sbb
mov
mov
jno
aaa
cmp
out
sbb
mov
out
sbb
mov
out
sbb
movs
or
jno
aaa
cmp
out
sbb
lods
or
jno
aaa
cmp
out
sbb
xchg
or
jno
aaa
cmp
out
sbb
popf
or
jno
aaa
cmp
out
sbb
test
enter
aaa
cmp
out
sbb
lea
enter
