mov
mov
mov
mov
mov
mov
pop
ret
sbb
jmp
adc
jne
outs
(bad)
or
es
push
or
(bad)
jbe
aaa
mov
push
push
mov
mov
test
outs
push
je
cmp
je
or
je
mov
cmp
je
lea
sbb
in
stos
cld
fisttp
pop
push
push
inc
test
lods
jle
outs
fdivrp
dec
and
pop
pop
ret
push
mov
mov
(bad)
fld
fisttp
push
and
xor
mov
mov
jmp
adc
ins
push
mov
cmp
jne
mov
cmp
push
mov
in
mov
mov
lea
jbe
fbstp
add
push
(bad)
lods
or
mov
pop
ret
jl
mov
arpl
lock
mov
jnp
push
push
call
add
ret
ins
mov
pop
mov
test
lahf
rcl
fisubr
or
sbb
add
mov
push
das
or
lock
out
push
sub
mov
jo
sbb
jns
fisttp
dec
adc
add
push
jne
xchg
rcl
clc
push
jle
ins
push
push
inc
cmp
clc
push
mov
inc
mov
jae
ficom
adc
inc
xrelease
in
idiv
sar
setne
sahf
lea
ret
out
sub
sahf
push
lea
aas
ds
stos
lods
cmp
jo
(bad)
mov
ret
in
add
int3
adc
sar
push
xadd
dec
test
jg
push
mov
push
call
fs
jmp
cmc
pop
es
mov
cmp
jb
cmp
ja
push
push
mov
mov
mov
xor
mov
mov
sub
js
loopne
cmp
push
in
shr
mov
fild
shl
push
(bad)
dec
stos
jne
push
mov
inc
cmps
sbb
ficom
adc
xchg
push
lahf
mov
or
push
or
pop
xchg
add
ret
cmp
add
add
scas
pusha
mov
mov
call
or
jge
push
je
mov
fdiv
jg
mov
add
adc
add
adc
leave
push
jmp
jbe
mov
ss
mov
sub
ja
fdiv
loopne
mov
int3
add
in
pop
leave
ret
scas
xor
div
adc
imul
hlt
mov
fidiv
mov
push
stos
fild
adc
cmp
gs
nop
cmps
fnstcw
rcl
fdiv
push
add
stc
dec
jle
mov
pop
pusha
jmp
jl
dec
jg
mov
adc
jo
sbb
or
push
das
mov
dec
loopne
imul
fcom
adc
push
sub
cs
inc
mov
dec
jno
loope
in
add
cmp
sbb
ds
ja
test
je
ja
stos
lock
mov
aaa
mov
fwait
or
loope
mov
movs
xor
data16
jne
sets
inc
mov
push
push
add
add
inc
inc
shr
lock
inc
aam
jns
jo
jmp
mov
lock
mov
and
fxch
cmp
ds
cmp
cli
mov
add
mov
sbb
lds
add
ins
adc
xor
dec
movhps
jl
and
mov
inc
add
loope
add
cwde
das
add
sar
sub
mov
sub
adc
clc
loope
mov
push
sub
clc
fimul
adc
outs
inc
aaa
ja
mov
push
cmp
jge
ret
inc
push
lea
push
or
push
xor
aas
cld
inc
mov
add
jle
outs
push
mov
pop
leave
or
jl
cld
sub
or
inc
add
outs
or
mov
inc
jmp
add
push
adc
xor
inc
cmp
fidivr
pop
pop
push
push
cmp
je
push
add
(bad)
aaa
adc
es
mov
jo
mov
xor
cmp
and
or
into
cmp
stos
data16
cmp
dec
and
ja
sub
lock
jno
pushf
pop
and
push
sub
and
jmp
jmp
(bad)
cmp
jae
mov
test
dec
sbb
lea
jae
movs
sar
sbb
adc
add
pop
idiv
fild
pop
or
push
sub
push
add
push
jmp
sub
push
movs
loope
iret
loop
pop
pop
xor
push
adc
jg
dec
push
pop
mov
mov
cmp
shl
jne
mov
in
shr
jmp
shl
pop
div
mov
cmp
jae
push
sbb
ss
pop
sub
cmp
ja
xor
sahf
fiadd
ja
call
mov
jmp
mov
cmp
add
sbb
inc
inc
sbb
xor
push
xor
ret
mov
mov
in
sub
test
inc
lea
dec
push
cmp
xchg
mov
add
iret
mov
push
mov
ret
dec
test
daa
mov
not
fidiv
loope
in
push
push
adc
add
cmp
jle
repnz
in
jg
add
jmp
mov
(bad)
jge
mov
shl
cld
push
xor
cmp
jle
add
ret
push
jge
cmp
test
inc
lea
stos
pop
sub
inc
outs
jp
pop
stos
out
in
leave
jno
icebp
and
data16
scas
into
bound
sub
jo
xchg
sti
mov
lds
out
push
ss
in
inc
sbb
or
lds
test
mov
jmp
sub
idiv
sbb
jae
out
clc
jae
(bad)
push
arpl
jmp
ins
es
rcr
jo
(bad)
sbb
pop
neg
sbb
imul
not
sahf
lock
inc
cmp
test
or
cmp
mov
xor
test
cwde
mov
add
or
push
cld
fisttp
pop
sbb
addr16
or
ror
test
mov
dec
or
mov
or
fs
adc
mov
mov
xor
test
dec
cmps
ror
push
mov
cmps
add
xchg
or
jns
cmp
xchg
inc
ja
cs
cmp
mov
or
fbstp
push
addr16
adc
lahf
mov
and
in
jmp
adc
or
aaa
lods
mov
fadd
cmp
cmps
dec
sbb
cli
push
cmps
cmp
inc
or
push
add
push
push
sbb
mov
pop
pop
ficomp
sub
sub
or
or
lock
clc
mov
fst
test
and
add
(bad)
mov
mov
imul
sub
mov
push
pop
(bad)
mov
add
add
sbb
push
rcl
push
sahf
adc
test
jb
xor
pop
ror
stos
push
std
inc
dec
loope
ret
or
push
mov
pop
inc
or
fild
rcl
xor
nop
repz
or
push
cmp
add
mov
in
add
ja
call
add
sbb
jae
push
retf
stc
mov
push
cmp
mul
add
inc
mov
cmp
in
(bad)
int3
and
push
sub
mov
jg
add
jge
test
or
mov
or
(bad)
lods
jmp
mov
cmc
or
enter
lea
push
cmp
add
ds
ret
dec
push
mov
add
mov
sbb
add
inc
cmp
sbb
push
xchg
(bad)
aas
cmp
mov
dec
or
inc
lea
and
xchg
int3
pop
pop
mov
repnz
jo
mov
clc
add
jp
sar
cmp
mov
jl
fcom
cvtps2pi
call
xchg
mov
mov
retf
adc
fcom
pop
add
inc
add
jecxz
shr
nop
not
sar
pop
pushf
mov
sbb
(bad)
aas
jbe
pop
shr
xlat
adc
pop
mov
xor
inc
and
shl
stos
mov
std
and
neg
sbb
push
ds
(bad)
mov
test
ror
shl
or
jmp
inc
(bad)
loop
shl
inc
(bad)
(bad)
idiv
and
push
push
aad
fstp
sbb
call
test
jne
add
inc
cmp
jb
inc
cmp
jb
mov
jg
xor
ret
mov
shl
add
jmp
cmps
xchg
push
pop
into
test
cmp
sbb
retf
sub
sbb
cmp
loope
retf
scas
xor
cld
cmp
je
push
lock
lock
movs
xchg
fst
jge
pop
mov
ret
or
mov
das
mov
je
push
cmc
xor
mov
aas
mov
dec
sub
retf
sbb
push
mov
adc
clc
cwde
push
test
cmp
stos
sub
jnp
and
(bad)
pop
mov
mov
xchg
mov
(bad)
sti
cmps
(bad)
push
fst
fstp
and
ins
fstp
pop
pop
cli
(bad)
js
inc
mov
cmp
rcl
sub
dec
inc
imul
add
mov
cmp
cmp
out
sbb
add
sar
and
mov
imul
addr16
cmp
sub
stc
push
mov
scas
sbb
mov
adc
pop
fcom
jb
push
dec
ins
lods
sahf
sbb
adc
lahf
mov
pop
mov
mov
mov
push
sbb
add
or
loopne
pop
mov
je
pop
push
ss
jns
mov
push
mov
mov
aad
push
outs
mov
int3
ret
lock
add
sbb
sbb
mov
mov
push
adc
and
mov
retf
push
sbb
cmp
sub
or
xchg
call
test
rcl
jo
xchg
mov
lock
pusha
adc
(bad)
mov
cmp
fild
div
ret
xor
sub
sar
mov
cmp
ret
loopne
lea
test
jle
ficom
dec
mov
push
int
adc
ret
adc
jo
push
lea
mov
call
pop
mov
dec
inc
call
pop
push
mov
sub
dec
arpl
xchg
pop
or
lds
or
jno
and
cs
and
jne
jne
adc
ja
xchg
xchg
dec
mov
and
jmp
jbe
(bad)
xchg
inc
jne
add
loopne
div
sbb
add
movs
ror
add
call
pop
test
jne
xchg
inc
rcl
push
aam
adc
movs
stos
rol
jb
inc
or
inc
fdiv
pop
push
rol
adc
lock
imul
and
xor
ds
clc
bound
sar
loope
aas
push
and
rol
and
xchg
mov
ret
xchg
sbb
add
dec
sbb
mov
inc
cs
sahf
jge
cmp
in
or
test
add
xlat
pusha
enter
cmps
push
or
bswap
and
xchg
sbb
fwait
inc
sub
dec
push
mov
enter
mov
xchg
mov
add
repnz
mov
mov
push
fidiv
pop
leave
aaa
mov
sub
add
add
add
mov
call
adc
in
pushf
adc
xor
mov
add
call
shr
mov
cmp
add
shr
push
push
mov
mov
sbb
out
inc
push
mov
xor
ins
cli
sbb
pop
ins
dec
push
enter
lods
push
push
sar
repz
mov
xor
pop
scas
in
aam
dec
je
mov
inc
add
jne
adc
dec
js
jno
sbb
(bad)
jl
ds
push
push
fs
adc
sahf
or
and
adc
mov
and
shl
jb
cs
inc
clc
(bad)
mov
inc
mov
js
inc
adc
mov
add
push
jmp
mov
push
xor
es
and
shl
ins
sub
je
mov
clc
cmp
jbe
mov
inc
adc
xor
mov
pushf
stos
and
cmpxchg
inc
mov
clc
add
pop
pop
pop
pusha
fsub
or
ins
adc
hlt
leave
xor
jo
jbe
ror
cwde
sub
sbb
ret
adc
fwait
xor
inc
cmp
or
popf
push
sub
mov
data16
sbb
mov
adc
xchg
xor
cmp
(bad)
dec
xor
pusha
push
mov
adc
and
sbb
jb
sbb
cmp
ds
push
adc
sbb
cs
ret
sub
pop
imul
jnp
sti
(bad)
jns
jbe
sub
sub
jecxz
mov
mov
xchg
pop
(bad)
lods
aas
call
ret
and
or
add
pop
mov
sbb
loope
jbe
call
jne
es
mov
sub
and
and
mov
adc
and
add
cwde
add
fdiv
sbb
(bad)
ficomp
mov
sbb
mov
jmp
jo
sbb
push
push
push
jmp
(bad)
iret
fwait
sbb
push
jbe
nop
fsub
movs
loop
int3
sub
icebp
sub
dec
sbb
dec
add
or
inc
jbe
jg
add
sbb
jne
rcr
(bad)
bnd
sub
iret
loopne
loop
enter
retf
cmp
pushf
shl
sbb
push
sbb
test
mov
xor
jl
and
fisub
mov
addr16
xor
mov
retf
pop
cs
or
and
xor
(bad)
mov
fidivr
push
fwait
adc
add
ins
adc
or
add
jne
dec
sbb
and
mov
lock
push
lock
mov
cmp
fsubr
iret
je
push
imul
into
sbb
add
or
jmp
popa
imul
cmp
xor
mov
dec
push
or
pushf
ss
aam
mov
sbb
adc
hlt
push
adc
xor
mov
push
push
ret
test
add
out
test
push
mov
adc
add
xlat
sar
adc
clc
jne
xor
jmp
cmp
mov
mov
mov
dec
lea
push
pop
mov
xor
lock
addr16
(bad)
fdiv
test
inc
bound
es
imul
cmp
aam
adc
fist
mov
js
sub
loope
jg
mov
sar
shl
add
idiv
hlt
or
ror
add
shr
sub
cmp
jae
call
in
add
add
xor
xchg
sub
in
addr16
scas
inc
fcomp
jge
sub
inc
mov
push
loop
das
or
lahf
(bad)
mov
ja
dec
jbe
sub
pop
in
mov
or
push
pusha
mov
sar
add
pop
jo
fst
test
adc
(bad)
in
ins
push
or
mov
movs
daa
mov
loop
push
dec
fcomp
add
cmp
xchg
add
mov
fidiv
les
lods
clc
push
jmp
or
iret
stos
loopne
sub
push
xchg
pusha
sub
or
push
add
xor
push
mov
sub
mov
push
lea
jmp
mov
jecxz
xor
retf
shl
sbb
es
outs
cs
pusha
push
push
jns
ins
test
fwait
ins
das
mov
push
loop
sbb
or
xor
pop
stos
adc
xor
es
retf
pop
xchg
inc
xor
les
push
dec
or
int3
xchg
push
call
inc
or
sbb
push
adc
push
add
mov
dec
in
sbb
pop
push
jge
cmps
sbb
push
and
add
mov
push
and
popf
pop
jbe
shl
les
xchg
loopne
(bad)
lock
cmp
xchg
sti
and
(bad)
jl
mov
cmps
loope
push
pop
cli
ret
dec
push
stos
pop
retf
gs
add
and
dec
pusha
mov
push
jbe
cwde
push
daa
add
mov
inc
push
jne
xor
pop
or
mov
xchg
and
adc
mov
adc
cmp
jmp
jne
test
sahf
es
jmp
aas
cld
ja
pop
and
xchg
mov
inc
or
jne
sub
pushf
jp
ret
(bad)
ror
xor
pop
jo
loopne
loop
jecxz
cmp
cld
fdiv
jg
arpl
push
pop
in
retf
mov
call
je
in
mov
call
push
add
ret
in
dec
mov
dec
lods
pop
ficom
scas
add
vprotb
or
or
test
push
ror
push
push
lods
mov
ror
mov
retf
add
dec
mov
dec
adc
inc
push
fcomp
and
es
fmul
and
cmp
push
rol
mov
mov
jbe
lea
push
fs
adc
push
mov
test
hlt
(bad)
dec
cmp
jb
inc
cmp
jb
mov
add
jle
jbe
mov
cwde
or
or
cmp
jb
adc
data16
cmp
or
lock
ret
test
mov
(bad)
mov
int3
mov
mov
or
das
push
add
addr16
js
sbb
sbb
data16
call
pop
adc
icebp
mov
mov
test
sbb
jne
mov
sub
adc
js
adc
lock
xor
imul
pop
outs
imul
test
aas
jne
and
xchg
inc
inc
adc
adc
jnp
jmp
test
jo
push
je
arpl
sbb
cmc
push
add
cwde
add
mov
stc
mov
mov
mov
mov
sub
stc
add
sbb
arpl
rcl
push
add
add
es
pop
and
(bad)
add
jmp
ret
add
out
or
popa
adc
aad
jmp
add
dec
pop
in
cmps
sbb
pop
push
ret
in
push
or
(bad)
in
or
fwait
mov
ret
cmp
inc
mov
or
jo
xor
cli
(bad)
adc
hlt
lock
ret
cmp
cmp
inc
call
cmp
clc
pop
jmp
into
push
or
mov
add
cwde
in
mov
in
sti
jp
in
adc
inc
jo
or
les
pop
imul
mov
mov
push
or
aam
dec
inc
sbb
lock
or
inc
inc
mov
xor
rcr
adc
fild
sbb
cmp
mov
push
inc
mov
jmp
(bad)
mov
inc
pop
and
sbb
movsx
inc
push
sub
fnsave
or
dec
mov
jne
mov
frndint
imul
ds
fdiv
int
adc
scas
xor
push
or
xor
sub
in
add
retf
sbb
push
or
mov
cmp
add
push
jge
xor
shr
bound
xor
in
fmul
shl
xchg
add
sbb
add
test
pop
adc
ror
mov
mov
jl
dec
dec
push
push
add
mov
ss
jp
mov
jbe
add
cs
sub
sub
outs
xor
sbb
mov
pop
in
xor
rol
cmps
push
xor
cs
add
enter
xor
push
and
push
push
jecxz
jb
sbb
(bad)
xor
int
(bad)
adc
scas
pop
mov
pop
push
push
outs
mov
pop
push
sbb
retf
mov
xor
je
add
cmp
jbe
cmp
mov
add
push
push
cdq
arpl
cmp
scas
inc
idiv
test
jnp
mov
das
mov
push
je
adc
cld
jae
mov
(bad)
xor
sti
test
fwait
cld
cmp
jne
inc
mov
mov
pop
out
sub
stos
inc
pop
add
pop
mov
add
jmp
call
pop
sbb
mov
push
pusha
cmp
je
(bad)
adc
adc
stos
loopne
or
mov
pop
retf
add
sahf
addr16
lods
and
sub
mov
cmp
mov
sub
adc
call
sub
stos
xor
pop
adc
js
add
dec
rcl
mov
retf
jmp
(bad)
out
scas
pop
sbb
sbb
cmp
lds
and
xchg
or
cmp
inc
dec
sbb
add
adc
or
lods
pop
push
inc
xchg
jb
xor
pop
mov
lock
sbb
mov
cmp
push
into
lea
loope
and
in
test
mov
add
xor
inc
mov
push
fiadd
jns
cli
mov
adc
push
mov
pop
push
xor
shl
xchg
mov
jno
call
lods
cmp
dec
and
sahf
jae
test
add
xchg
fistp
cmp
mov
jmp
and
xor
inc
jmp
inc
cdq
in
nop
or
or
gs
inc
sbb
fucomp
aad
mov
or
sti
sbb
add
ins
movs
cmps
adc
add
data16
icebp
add
popa
push
and
cmp
mov
clc
or
xchg
je
adc
je
push
jmp
fist
pop
pop
mov
xor
xchg
push
adc
push
inc
push
in
xor
adc
and
cmp
mov
pop
adc
cwde
push
sbb
sahf
or
or
pop
fnsave
jbe
sbb
dec
movzx
lea
jne
in
sbb
and
and
shr
and
stc
jle
fs
add
sub
push
push
leave
fsubr
cmp
jmp
mov
jg
les
push
sti
push
inc
xor
inc
push
ret
push
clc
sbb
push
push
push
outs
fidiv
add
movs
out
nop
aaa
loope
imul
inc
push
in
mov
mov
push
icebp
les
adc
ins
cmp
fisubr
or
add
pop
pop
jb
test
add
mov
or
inc
and
sti
shr
lock
bound
lea
pop
push
jae
pop
test
out
jmp
pop
stc
inc
add
or
call
ja
neg
sbb
not
and
or
std
inc
push
(bad)
push
or
jl
or
lods
jo
sub
mov
sbb
rcr
sub
mov
pop
mov
jl
cmp
mov
push
sub
or
les
inc
xor
in
add
mov
xor
cmp
xchg
add
dec
idiv
jo
inc
jae
and
xchg
ret
lds
sbb
sbb
out
gs
inc
test
dec
rcr
stc
daa
mov
sbb
les
aaa
lods
cmp
xlat
cmp
test
mov
ret
sub
mov
cmp
addr16
inc
or
and
sbb
hlt
pop
push
sub
icebp
popf
mov
push
inc
push
lods
int3
mov
sbb
mov
ss
scas
pushf
sbb
(bad)
xor
or
stc
xor
jbe
mov
test
test
xchg
int3
pop
ds
rcl
add
add
gs
jne
and
inc
push
inc
lods
pop
sbb
inc
ret
push
icebp
jl
sbb
inc
fisttp
sahf
push
mov
mov
push
push
push
dec
sti
inc
mov
jne
lea
or
jge
xlat
lea
mov
inc
or
push
jmp
clc
mov
and
add
mov
sub
pop
dec
dec
add
and
clc
(bad)
lods
jmp
jle
cmp
inc
push
pop
add
mov
push
(bad)
aam
test
push
iret
sbb
(bad)
enter
xchg
js
and
dec
inc
je
or
fld
mov
and
mov
(bad)
push
or
popf
mov
or
shr
int3
into
int3
pop
add
xchg
iret
lds
ffreep
or
shl
loopne
or
shr
or
iret
aaa
aam
mov
adc
in
add
(bad)
cli
add
jb
cmp
fwait
xor
add
xor
cmp
push
cmp
(bad)
enter
fs
xor
shl
push
xor
inc
hlt
daa
iret
dec
xor
hlt
add
popa
(bad)
pop
mov
xor
mov
sub
cmp
and
add
enter
rcr
and
dec
push
mov
movs
aam
les
stc
mov
imul
rol
shl
ret
int
das
call
push
gs
cmp
popa
or
mov
jl
pop
ja
xor
push
pusha
mov
pushf
pop
or
pop
jb
jp
jns
popa
neg
mov
cmp
mov
mov
dec
(bad)
push
pop
iret
dec
dec
add
clc
clc
pop
mov
hlt
jae
(bad)
lock
aad
inc
cmp
sbb
pop
sub
(bad)
mov
bound
jmp
sub
inc
inc
or
and
mov
pusha
adc
or
push
test
or
xchg
outs
push
loopne
adc
(bad)
dec
and
xor
fist
xor
inc
dec
pop
loopne
std
jne
dec
outs
xor
mov
mov
sar
test
jne
sbb
add
rep
or
adc
scas
add
add
dec
add
cld
push
or
dec
inc
dec
ins
js
cmp
pop
sti
daa
fdiv
mov
pop
mov
loop
sbb
pop
ror
sbb
push
sub
lea
mov
dec
mov
outs
sbb
push
jmp
and
xor
xchg
or
and
ret
inc
pop
les
rcl
adc
add
add
aad
imul
or
in
mov
add
scas
pop
rcr
jnp
das
(bad)
call
dec
and
int
sbb
and
jb
or
ret
aaa
call
pop
dec
xchg
gs
push
lods
shl
cmp
mov
(bad)
push
or
sub
jmp
dec
inc
ficomp
ret
je
and
sbb
cmp
jle
idiv
repz
lock
sub
jmp
push
ja
add
pop
je
(bad)
hlt
push
fucomp
pop
lock
jmp
add
mov
or
sar
jo
lods
movs
out
stos
xor
sub
pushf
sub
cmc
cmp
cmp
xor
ret
cmp
jns
mov
lods
(bad)
dec
sbb
daa
cld
shl
daa
clc
dec
cmps
push
xchg
jge
pop
add
push
arpl
movzx
jle
xchg
pop
in
and
fwait
sbb
sub
adc
gs
sub
add
enter
data16
or
dec
or
test
push
and
movs
ror
arpl
aas
cs
ret
inc
std
dec
mov
push
adc
and
cmp
hlt
mov
lock
xchg
jecxz
mov
mov
cmp
dec
or
xchg
aad
imul
inc
sbb
mov
lods
test
add
xor
sti
ret
stos
lea
leave
push
add
cdq
jne
push
push
mov
mov
mov
shl
cmp
pop
ds
jo
call
push
ror
push
lea
push
jle
sbb
cmp
ror
ja
call
xchg
or
or
mov
add
inc
shl
cmp
rcl
sti
xchg
ret
inc
adc
shr
(bad)
nop
sbb
cmp
xor
sub
(bad)
xor
(bad)
pushw
lods
jmp
push
int
inc
mov
push
mov
loopne
je
or
hlt
mov
stos
cmp
je
inc
sbb
mov
lock
es
add
data16
addr16
enter
lea
xor
(bad)
push
icebp
js
dec
pop
pop
pop
cmp
ret
daa
or
mov
fwait
inc
into
push
lock
sbb
lea
push
xor
push
add
aaa
loopne
enter
lods
jae
clc
and
push
enter
jg
ins
pop
ss
push
je
push
movs
pop
in
push
add
push
mov
nop
loop
ret
hlt
adc
fcomp
cmp
adc
cmp
push
test
jge
add
fistp
pop
adc
xor
adc
jle
sbb
pop
mov
adc
and
lods
ret
pop
sub
mov
dec
xor
push
add
jbe
mov
jp
jmp
or
push
add
add
xchg
or
dec
test
shl
jle
dec
test
push
sbb
dec
retf
fist
xor
dec
icebp
mov
lods
xchg
mov
mov
rol
test
je
pushf
rcl
jne
aam
and
out
add
mov
jae
sar
xchg
push
and
inc
pop
test
pop
pop
cmc
mov
shl
push
sbb
je
cmp
je
sub
jge
push
jae
adc
add
in
jl
and
push
adc
sub
pop
cmp
call
enter
ss
dec
sub
lods
and
(bad)
inc
cmp
cmc
mov
sub
in
pusha
add
or
cmp
push
mov
add
imul
es
mov
cmp
mov
push
xor
ja
adc
loopne
xor
inc
dec
xor
and
inc
sub
cwde
pop
add
adc
lods
add
jle
jle
jl
cmp
jne
dec
mov
pop
enter
(bad)
jmp
loope
add
mov
or
add
push
lea
test
fist
inc
jmp
push
xor
adc
or
sbb
sub
inc
clc
adc
pop
fisub
sub
dec
enter
pop
dec
sub
mov
push
push
ror
fsub
or
retf
lea
cmp
cmp
push
clc
xchg
push
push
cmovs
in
pop
cmp
add
leave
mov
add
and
fs
add
test
loopne
adc
in
add
adc
bound
fild
movs
pop
adc
loop
jb
mov
and
xchg
xchg
retf
cmp
data16
push
int
iret
jmp
dec
push
inc
ret
mov
in
mov
in
and
add
add
rcr
repnz
and
or
add
pop
ss
jb
pop
xor
nop
inc
sbb
add
in
(bad)
loopne
add
pop
ror
and
add
aas
daa
daa
rcl
sub
add
mov
sbb
call
jmp
shr
xchg
push
add
stos
fidivr
rcr
fldcw
add
clc
jmp
mov
enter
inc
mov
icebp
aas
ror
push
push
ror
enter
(bad)
mov
mov
test
scas
arpl
mov
idiv
push
shr
mov
mov
push
pop
push
xor
xor
clc
inc
mov
cld
sub
je
fiadd
xor
adc
add
js
mov
sbb
adc
jg
cmp
mov
or
and
jo
ds
or
test
jmp
cmps
push
(bad)
cmc
xlat
and
pop
(bad)
push
push
stc
ss
pop
push
cld
push
add
stc
push
pusha
ror
in
mov
mov
jge
push
je
dec
sbb
dec
or
and
sub
add
stos
movs
push
dec
dec
push
or
lock
xchg
icebp
fild
add
and
cmp
je
push
pop
cmp
push
push
neg
sub
sub
jnp
mov
jp
cmp
sbb
dec
push
push
inc
cld
xor
adc
ret
push
xchg
cmp
sub
mov
add
mov
jp
push
je
sbb
mov
add
leave
stos
inc
jmp
dec
movs
xor
imul
jb
adc
test
or
out
adc
jne
ret
in
mov
adc
and
jg
push
imul
sub
int3
imul
int3
sub
mov
(bad)
inc
push
out
or
add
inc
and
jbe
cmp
movs
xor
push
or
test
test
nop
inc
dec
push
push
test
jl
mov
ret
jmp
popa
(bad)
jmp
push
ds
xor
mov
pop
test
jmp
jne
jne
mov
ss
neg
push
(bad)
push
cmp
jbe
cmp
push
or
in
jge
sub
mov
ret
add
mov
mov
inc
cmp
cmc
out
or
inc
adc
fimul
test
cmps
popf
clc
sbb
fst
sbb
sbb
and
mov
shl
fisttp
sbb
add
jmp
cmp
shl
or
mov
hlt
push
cmp
stos
test
sub
add
sub
mov
sbb
mov
and
int
ret
mov
mov
fs
pop
cmp
ins
test
arpl
adc
cmp
or
mov
pop
or
push
push
jp
inc
les
xor
dec
pop
mov
or
push
mov
loope
dec
xchg
xor
mov
pop
push
adc
lea
in
adc
push
sbb
adc
pushf
add
mov
xor
je
rcr
(bad)
jo
imul
mov
shl
push
adc
xor
test
fldcw
lock
enter
xchg
xchg
pop
mov
jle
cmp
and
(bad)
push
je
or
sub
mov
cmp
jae
call
xor
ret
(bad)
rcr
inc
dec
pop
xchg
dec
pop
cmp
mov
push
mov
scas
sar
mov
push
jb
dec
xchg
mov
inc
scas
dec
fucomi
or
mov
mov
sub
add
shr
mov
xchg
lock
pop
jmp
adc
jg
mov
add
retf
jae
xor
icebp
sbb
(bad)
rcl
pop
lea
jl
std
(bad)
stos
pop
add
push
mov
(bad)
push
mov
cdq
sar
ins
(bad)
sbb
add
mov
jg
or
add
xor
adc
movs
jne
or
xor
add
bound
maskmovq
mul
ret
cmp
sahf
fist
sub
add
pop
pop
sbb
sub
xor
shr
xor
and
push
out
add
pop
or
cmp
(bad)
outs
mov
inc
inc
outs
clc
push
push
sbb
pop
inc
ret
sbb
popa
out
je
imul
stos
mov
push
sub
test
add
cmp
inc
add
add
lods
movs
dec
out
mov
out
and
dec
popa
dec
call
pusha
popa
pop
cld
push
push
push
lea
sub
sub
sbb
cmp
(bad)
outs
jno
mov
sub
das
dec
sbb
pop
inc
shl
jo
and
jecxz
add
repz
push
push
out
jg
pop
hlt
sub
sar
and
sar
pop
ja
lea
push
mov
adc
ud0
mov
xor
cmp
xchg
loopne
out
retf
int3
sub
lea
leave
adc
sbb
pop
pop
jmp
cwde
push
fiadd
stos
push
push
and
inc
call
jbe
inc
add
mov
sbb
ins
ja
mov
pop
(bad)
fwait
sbb
in
movs
mov
add
cmp
add
xchg
sub
push
test
xor
push
push
xor
shl
cmp
jp
data16
lods
pop
jmp
aam
and
pop
loope
or
call
retf
add
mov
and
push
lea
cmp
jae
inc
jmp
add
lea
jecxz
or
arpl
and
lea
push
and
xchg
mov
xchg
shl
add
scas
scas
js
add
cmp
jge
enter
xchg
push
jg
mov
pop
or
fdivr
push
xor
paddd
cmp
out
cdq
add
clc
(bad)
loopne
mov
add
stos
add
inc
inc
call
sar
clc
sub
repnz
enter
push
push
mov
and
aaa
cmps
cmp
lock
add
ficomp
add
add
sbb
add
sub
mov
or
jge
scas
push
inc
inc
add
cmp
jb
cmp
add
mov
sbb
ins
inc
add
cmp
push
mov
ret
sub
das
aas
inc
out
jb
mov
test
inc
mov
dec
test
xchg
inc
adc
mov
lock
or
and
push
cmps
arpl
scas
or
retf
jmp
xchg
cmc
loop
xchg
add
imul
fdiv
ds
aaa
dec
add
jmp
repnz
ja
inc
mov
pop
push
loope
push
in
add
loope
das
dec
sbb
xor
xchg
mov
shl
pop
add
sbb
or
push
out
push
xchg
adc
into
aad
jmp
call
cmp
sahf
ror
jmp
mov
and
out
or
mov
add
fs
push
add
push
cmp
pop
jl
mov
lods
pop
aaa
mov
add
sbb
fmul
push
pop
or
ins
rcr
inc
outs
inc
or
dec
dec
cmp
aaa
pop
imul
out
xchg
js
ror
rcl
or
mov
int3
jns
out
pop
outs
pop
push
push
cmp
pop
inc
bound
mov
cmp
mov
mov
push
mov
xor
or
adc
mov
out
adc
ret
add
push
push
nop
sbb
test
jne
jae
sub
test
fwait
clc
xor
inc
repz
mov
add
adc
sub
fs
retf
repz
in
pop
jae
push
pop
cdq
cs
or
lods
pusha
and
push
shr
je
test
push
ret
shl
dec
in
add
and
mov
int3
fcom
or
pop
mov
pop
fisub
pop
imul
add
and
int3
fs
xchg
pop
arpl
int
popa
in
sbb
test
jne
and
add
adc
jmp
mov
and
(bad)
(bad)
leave
mov
scas
dec
aaa
sub
mov
jmp
mov
mov
test
mov
cmp
je
inc
shr
mov
es
rol
retf
std
cs
mov
sub
push
push
cmp
mov
pop
iret
jge
mov
test
xor
test
or
imul
add
and
add
rcr
and
mov
movs
cmp
mov
inc
xor
inc
cmp
jno
sbb
xor
nop
outs
add
mov
mov
test
dec
sub
loopne
stos
lock
push
xor
cmp
mov
adc
mov
int
mov
sbb
test
sbb
pop
mov
or
cmp
ret
pushf
inc
mov
bound
and
mov
shr
dec
xchg
inc
add
arpl
jo
mov
data16
std
xchg
js
pop
jns
xor
add
enter
mov
imul
lock
enter
pop
or
add
mov
and
cwde
into
add
cmp
retf
arpl
movs
pop
sub
jmp
mov
je
(bad)
call
add
int3
and
push
add
pop
or
cmps
mov
cmps
std
iret
cs
push
push
mov
add
mov
adc
xchg
call
add
sbb
std
pop
xor
or
aad
into
sbb
(bad)
dec
into
add
pop
mov
pop
ret
sti
aam
jnp
cld
nop
push
fisttp
fmul
sbb
cmps
xchg
mov
je
test
mov
loope
xor
dec
pop
push
xchg
loop
call
std
push
data16
pop
pop
call
int
xchg
pusha
jecxz
shl
movs
push
dec
enter
add
jmp
jo
mov
mov
push
add
jno
ins
out
std
je
call
and
xchg
(bad)
mov
mov
les
cmp
call
imul
jecxz
jp
pop
in
dec
test
int3
rcr
xor
pop
shl
jns
jo
ins
jle
ins
and
in
fs
or
cmp
jo
adc
jae
mov
mov
popa
idiv
shl
leave
sbb
ds
pusha
iret
test
stc
sbb
(bad)
(bad)
pop
in
xchg
dec
stc
bound
test
cwde
add
mov
imul
movs
in
sbb
add
or
movs
adc
jp
into
hlt
and
pop
jmp
(bad)
adc
mov
arpl
in
add
lea
jl
or
cmp
pushf
retf
ds
push
or
mov
pop
lock
movs
pop
xlat
aad
loop
stos
xor
pop
dec
jo
cli
jl
sbb
xor
loopne
and
or
sbb
inc
inc
fist
loope
pop
ds
in
(bad)
mov
lods
add
mov
pop
and
jl
push
xchg
stos
ficom
sbb
sti
push
lock
adc
add
push
xor
enter
pop
enter
pop
(bad)
xchg
loopne
mov
mov
in
inc
xor
nop
call
dec
xlat
sub
mov
mov
push
cmc
mov
mov
mov
cmp
inc
repnz
test
sbb
call
idiv
push
lods
call
gs
test
lock
rcr
mov
test
call
cld
iret
adc
out
add
jne
shl
jge
scas
mov
xchg
mov
inc
push
inc
pop
inc
mov
mov
out
add
lahf
adc
js
mov
push
adc
inc
inc
hlt
std
div
add
aaa
xor
sete
mov
jecxz
rcl
aaa
stc
ret
addr16
jmp
and
sub
clc
out
outs
inc
xor
pop
sub
das
pusha
sbb
pop
push
cmp
mov
pop
cmp
pop
pusha
add
add
dec
loopne
sbb
sbb
fdiv
out
push
movs
and
jo
add
jg
arpl
and
sbb
loopne
lea
mov
dec
push
loopne
cmp
inc
jmp
mov
ds
add
add
pushf
test
je
xor
jg
and
nop
xchg
popf
mov
adc
call
cmp
jle
cmp
jle
sub
jo
pop
xor
test
fmul
not
in
aam
jno
sti
pop
psllq
ja
and
inc
je
cmp
mov
mov
mov
clc
ror
lods
add
mov
jne
jg
xor
(bad)
mov
and
fisttp
jmp
dec
mov
xchg
out
jmp
pop
shl
mov
mov
jecxz
enter
ret
add
loope
sub
mov
and
imul
dec
into
dec
sbb
sti
out
ins
or
movs
pusha
push
xchg
xor
loopne
(bad)
movs
xor
jl
jbe
jge
sbb
fiadd
add
cmp
jge
jbe
add
in
or
jge
mov
in
jae
int3
pop
add
mov
dec
sub
adc
inc
fild
scas
pop
daa
push
jp
sub
and
mov
cmp
xor
push
inc
ror
mov
sbb
and
dec
ds
inc
ficomp
out
ret
lods
inc
je
and
inc
(bad)
cmps
push
inc
out
add
clc
mov
cmp
xor
xor
add
push
lea
or
or
ret
popf
das
jno
cmps
jne
std
hlt
(bad)
mov
(bad)
clc
inc
div
push
lea
in
bswap
dec
xor
xlat
push
popf
fisttp
div
inc
cld
retf
iret
dec
lods
jge
int3
push
pop
(bad)
fst
dec
cmc
pop
sahf
mov
xchg
rcl
jae
jmp
and
nop
das
inc
add
aaa
aas
sub
out
push
push
or
push
add
or
cmp
jno
and
in
je
add
mov
fidivr
pop
je
push
or
lods
dec
fnstenv
pop
lods
xchg
test
mov
adc
je
or
inc
or
stos
test
inc
ror
add
or
syscall
jmp
mov
or
lods
xor
ds
dec
stos
inc
mov
push
push
adc
and
pushf
jl
lea
push
dec
push
push
xchg
inc
loopne
jecxz
iret
push
xor
and
cmp
je
stos
xor
dec
idiv
push
xor
addr16
ret
mov
fcomp
sbb
inc
inc
dec
cwde
fisub
sub
or
lock
jne
pop
pop
(bad)
pop
imul
es
mov
shl
ss
mov
xor
loope
push
inc
or
ror
sub
sar
jmp
or
lods
jno
jl
lods
test
push
js
jmp
or
jbe
mov
jmp
mov
jp
out
shl
into
pop
pop
push
shl
mov
mov
fld1
cmp
sub
aas
jle
les
xor
or
ficom
jo
cmps
jnp
xor
add
and
push
push
pop
push
mov
add
daa
rol
iret
out
cmp
out
jg
inc
fadd
and
add
ret
test
aaa
js
gs
xchg
in
std
jnp
xor
jnp
xchg
add
cmp
sbb
adc
or
inc
inc
xchg
movs
mov
xchg
ja
cmp
inc
pop
imul
sahf
add
jge
cmp
mov
or
xor
aam
sbb
dec
cs
or
mov
popf
or
pop
rcr
iret
add
pop
sbb
enter
fwait
iret
add
and
sub
and
fcomp
jb
xor
adc
mov
push
adc
sbb
and
push
jb
adc
inc
sahf
and
inc
es
adc
enter
rcl
inc
push
dec
adc
and
add
bound
imul
jne
(bad)
icebp
pop
fwait
sbb
test
pop
setle
ret
retf
add
jl
aas
inc
cmp
xchg
test
iret
sbb
jne
jmp
cmp
jle
pushf
jb
dec
dec
or
and
jle
jp
jge
test
jmp
inc
dec
int3
push
mov
int
das
mov
jb
shl
out
mov
mov
jmp
into
and
cmps
fsub
sbb
int3
(bad)
pusha
pop
call
pcmpgtb
pop
dec
push
enter
add
xor
(bad)
adc
enter
dec
nop
inc
push
enter
pop
in
or
aam
cmp
imul
cmc
sar
cdq
nop
inc
push
aas
push
loopne
or
inc
push
les
mov
ins
add
lds
xchg
dec
push
enter
sar
adc
jns
jne
movs
int
stos
mov
bound
pop
nop
sahf
inc
push
and
and
sbb
fstp
adc
lods
xor
jg
movzx
shr
mov
shr
shr
leave
mov
inc
sbb
adc
shl
mov
push
shl
mov
nop
lock
and
xor
icebp
jbe
jnp
nop
xor
cli
dec
outs
xor
push
jns
push
cmps
jle
mov
pop
xor
mov
js
push
jg
aam
lea
or
fucomip
(bad)
xor
mov
not
xor
jae
test
stos
and
xor
mov
mov
push
mov
outs
sub
add
dec
add
imul
sbb
add
mov
jle
movs
lea
lock
push
(bad)
pusha
mov
sub
mov
out
in
push
adc
jle
mov
dec
cli
mov
mov
out
lods
or
mov
push
lea
inc
les
sub
xor
push
int3
cmps
sub
test
popf
shl
out
or
push
push
pushf
cdq
loope
push
(bad)
sti
push
xor
push
xor
push
out
mov
mov
xor
sub
sub
add
adc
xor
div
pop
jnp
sub
mov
int3
retf
test
int3
xor
jbe
fsubp
mov
test
cs
shl
rol
mov
fs
mov
dec
(bad)
retf
test
xor
add
sub
dec
xor
xchg
dec
jb
add
push
sbb
xor
jno
or
sub
scas
or
xchg
cwde
pushf
sbb
ss
push
xor
dec
inc
or
mov
xchg
test
adc
scas
leave
sub
pushf
sbb
mov
je
and
mov
sbb
dec
scas
xor
or
enter
dec
int3
and
xchg
rcl
or
fcomp
ret
xchg
and
nop
inc
es
in
in
xchg
and
dec
push
or
hlt
mov
adc
mov
daa
pop
xor
mov
test
mov
out
test
and
(bad)
xchg
out
retf
js
js
mov
pminsw
sub
pslld
or
je
les
adc
sub
cmp
addr16
out
popa
cmps
or
xchg
mov
ret
pop
test
pop
js
clc
jns
xchg
pop
rep
out
stos
lock
fwait
and
dec
lock
call
aas
out
sbb
shl
xchg
add
les
or
icebp
icebp
pop
jo
add
popf
outs
dec
push
shl
add
dec
jb
mov
mov
xchg
mov
jmp
inc
mov
xor
xchg
jno
ror
shl
xchg
cmp
and
in
xchg
adc
in
ror
cmp
jecxz
or
pop
sbb
ss
jns
ins
mov
or
xor
or
or
ret
xchg
pop
test
stc
or
ret
test
sub
xchg
popf
sahf
adc
ins
adc
retf
or
pop
cmp
adc
repnz
or
leave
leave
leave
in
lods
jnp
adc
fbld
pop
xor
int3
mov
es
int3
xor
and
cmp
adc
lea
into
and
mov
and
dec
xor
cmp
cwde
mov
adc
and
xor
dec
mov
shr
mov
and
ins
call
sahf
add
inc
push
inc
add
inc
add
call
mov
sahf
add
shl
xor
inc
cmps
jmp
jle
inc
or
xchg
cmps
shr
imul
call
sbb
or
jno
add
inc
cdq
pusha
stos
jmp
or
dec
enter
xor
sbb
enter
mov
movs
adc
rcr
iret
dec
jo
mov
clc
aam
pop
mov
shl
movs
pop
pop
adc
xchg
or
sbb
ds
xchg
adc
test
jbe
in
xor
xor
cmp
enter
sbb
jmp
pminsw
out
add
inc
outs
loop
push
inc
stos
or
xchg
sbb
add
inc
es
add
loope
in
int3
pop
out
xchg
or
jae
test
and
dec
dec
lahf
dec
or
mov
dec
or
or
or
movs
mov
jl
add
adc
lea
jge
(bad)
add
push
out
repnz
mov
into
push
dec
sbb
test
pop
ret
mov
aaa
push
mov
push
mov
mov
xor
mov
(bad)
test
mov
(bad)
sbb
adc
ss
dec
and
xchg
fld
lea
inc
xor
mov
xor
retf
and
push
loop
call
cmp
mov
rcr
and
xor
stos
loop
lods
add
mov
sub
fld
mov
sub
add
and
add
inc
and
jle
add
or
or
mov
adc
(bad)
xor
add
cmp
adc
and
pop
pop
adc
sbb
sbb
inc
xor
mov
mov
jb
mov
dec
dec
sub
or
push
enter
mov
mov
inc
and
jb
xor
cmp
jb
dec
xchg
mov
inc
mov
test
test
mov
outs
inc
in
xchg
inc
inc
dec
dec
inc
inc
push
stos
push
push
pop
mov
pusha
cmp
cmp
push
dec
and
out
in
test
sbb
dec
shl
mov
jmp
stc
jnp
push
(bad)
test
jo
pop
add
and
xchg
jmp
jg
pop
adc
fcomp
cmps
cmps
imul
xor
xor
mov
adc
or
xor
pop
mov
popa
jmp
loopne
je
push
(bad)
pop
sub
je
xchg
add
xor
or
(bad)
pop
out
jae
xchg
js
out
fcmovb
das
(bad)
pop
xchg
add
or
pop
loop
add
faddp
pop
jb
or
xchg
mov
pop
mov
inc
add
icebp
out
movs
jle
sti
ins
adc
jmp
shl
or
push
in
xchg
popa
and
adc
mov
inc
dec
add
inc
jno
cmp
jl
pop
lea
mov
cmp
aam
dec
mov
push
cdq
not
mov
stos
les
ror
push
xor
inc
mov
add
mov
adc
push
jle
cmp
jne
cmp
fwait
push
adc
add
jge
fmul
loope
jl
jmp
mov
cmps
xchg
mov
cmp
add
loopne
mov
or
xor
fst
mov
mov
add
add
and
clc
daa
out
sub
mov
sahf
push
lea
push
push
lahf
jmp
push
xor
jo
jge
popf
lea
push
shl
or
mov
push
dec
adc
push
push
add
dec
add
stos
sbb
cld
adc
pop
push
shl
inc
lea
inc
push
pop
dec
push
mov
xor
add
pop
sub
dec
pop
jne
and
cs
js
out
and
sub
or
dec
fdivr
push
inc
xchg
inc
adc
test
add
and
adc
outs
xchg
jl
adc
mov
dec
adc
sub
push
push
dec
cmp
pop
es
loop
add
xchg
ficomp
jle
lea
mov
shr
imul
add
icebp
xchg
cmp
xchg
pop
mov
loop
icebp
dec
or
adc
xchg
push
sbb
int3
inc
and
inc
xchg
xchg
iret
sub
adc
enter
stc
xchg
cmp
int3
mov
int3
jnp
cmc
jb
es
or
lea
retf
retf
xlat
rcl
(bad)
jmp
xor
sub
cdq
in
rol
int3
or
inc
test
scas
add
daa
pop
add
push
rcl
inc
xor
and
fsub
ret
xchg
adc
or
inc
sub
xor
and
and
in
jne
and
xchg
test
add
cld
sbb
or
sub
pop
mov
inc
and
or
and
fdiv
sub
pushf
pop
push
leave
sbb
and
enter
sub
rcl
or
imul
xlat
mov
aaa
cmp
lea
xor
and
push
test
enter
pop
and
out
(bad)
ret
push
xor
arpl
cmps
cmps
ins
xor
or
js
push
les
ja
and
ins
cwde
pop
fistp
adc
imul
mov
clc
xchg
popf
fadd
mov
ret
sahf
cmc
adc
sti
cmp
lock
mov
fidivr
mov
ds
push
xchg
nop
dec
js
cmp
pop
push
xchg
daa
and
dec
aam
loopne
push
mov
cwde
inc
or
dec
lods
pusha
mov
leave
adc
push
(bad)
cdq
les
xchg
pop
loop
lods
dec
stos
ins
mov
inc
aad
and
cmp
xchg
mov
in
jo
movs
test
push
and
not
lea
retf
cmp
mov
ficomp
jne
arpl
ret
dec
xor
push
test
mov
jnp
mov
les
or
xor
dec
mov
and
paddd
leave
ins
lds
jnp
enter
xor
int3
mov
es
xchg
cmp
jnp
or
sbb
pop
push
cmp
or
pop
iret
iret
cmp
sub
call
int3
enter
pop
push
or
dec
mov
mov
faddp
lods
retf
mov
ret
mov
push
xor
retf
xor
mov
dec
lea
inc
and
shl
adc
ficomp
xlat
cmps
das
test
movs
push
int3
jnp
int3
je
nop
dec
adc
fs
stos
loop
xor
mov
loopne
cld
test
imul
mov
mov
jne
lock
mov
xor
sub
or
nop
mov
je
cmp
(bad)
sub
mov
and
jge
xchg
test
xchg
psubd
(bad)
mov
cdq
adc
aad
lods
sbb
xchg
or
xchg
mov
shl
mov
movaps
rcl
sbb
add
cli
dec
enter
paddd
and
xor
jb
repnz
sub
idiv
xchg
test
adc
shr
jmp
mov
into
jl
retf
inc
ds
sbb
arpl
(bad)
in
mov
jmp
inc
add
int
jmp
fisub
retf
sub
(bad)
or
dec
fidivr
dec
ret
sub
(bad)
or
test
ficomp
mov
rol
jns
xor
push
add
mov
(bad)
or
xor
mov
inc
fsub
or
test
test
data16
sar
push
adc
rcr
aaa
pop
xor
out
add
sahf
es
mov
loopne
ss
and
sbb
inc
push
jne
pop
pop
mov
fucomip
add
add
cmp
jbe
lea
push
mov
shl
mov
dec
jne
push
fs
or
pop
sub
or
or
cmp
fild
inc
add
pusha
and
ds
in
es
cmp
pop
jp
pop
or
pop
aas
add
idiv
mov
pop
cwde
adc
pusha
div
mov
push
push
push
pop
cmps
loope
jmp
mov
aas
add
mov
push
push
push
jns
int3
inc
mov
leave
add
add
sub
daa
add
mov
ror
les
mov
mov
daa
data16
sub
ja
xchg
inc
outs
adc
mov
inc
daa
ja
pop
in
cmps
mov
or
mov
es
and
sub
jno
mov
push
pop
or
cmp
mov
in
sub
add
sti
mov
bound
pop
sbb
add
and
inc
movs
or
scas
in
sbb
test
dec
popa
xchg
sbb
xor
pop
shl
add
call
mov
or
pop
adc
mov
sub
mov
fistp
or
movsx
push
mov
mov
add
inc
inc
(bad)
jle
sar
add
jae
adc
cs
mov
pop
icebp
sub
inc
mov
lahf
or
push
pop
add
adc
outs
aam
inc
inc
pop
inc
mov
pop
jmp
mov
mov
and
cmp
loop
xchg
popa
mov
hlt
sbb
into
sub
mov
sbb
inc
nop
dec
inc
jo
xchg
jmp
push
xor
pop
cmp
test
and
push
in
dec
jns
inc
enter
clc
cmp
push
mov
or
xchg
cmp
add
pushw
jne
in
or
xor
mov
jnp
jnp
add
inc
pushf
dec
push
pop
and
sub
mov
mov
(bad)
ret
push
(bad)
stos
and
adc
mov
repnz
movs
data16
add
cmp
adc
dec
pop
cmp
push
dec
mov
lock
xchg
xchg
call
ret
unpcklpd
push
xchg
popa
add
inc
mov
imul
sub
sbb
les
add
fistp
xchg
cwde
and
in
int3
lock
cmp
push
and
jmp
lea
cmps
mov
(bad)
xor
je
and
nop
fsub
sti
shl
aam
xor
in
and
or
fistp
rdpmc
sub
xadd
(bad)
call
clc
sub
dec
or
pop
loopne
loope
mov
les
dec
ror
mov
dec
rcl
inc
sub
mov
test
or
outs
in
cs
push
push
or
pop
adc
dec
sbb
adc
xchg
pop
add
adc
mov
mov
cmp
or
add
push
test
lock
adc
cmp
in
add
mov
adc
inc
cmp
or
leave
jb
and
mov
sub
add
test
xchg
and
add
cmp
push
adc
mov
jmp
xor
or
enter
adc
or
add
(bad)
dec
arpl
in
in
mov
add
sub
xchg
mov
or
cmp
lea
xor
add
mov
lods
inc
inc
push
adc
pop
fwait
add
push
int3
sbb
dec
or
(bad)
push
cdq
in
sub
cld
mov
push
xor
shl
push
inc
ds
and
jg
sbb
das
lea
push
add
adc
arpl
pop
push
fistp
add
loope
push
pop
daa
div
test
sti
rol
xor
outs
ins
jb
jne
jo
adc
es
pop
and
mov
ja
push
inc
xor
adc
ficomp
sub
add
es
ret
cld
sbb
jg
or
or
das
sub
lods
retf
sbb
in
mov
adc
adc
test
pop
add
or
mov
add
inc
or
ins
cmc
xchg
jecxz
jmp
jmp
fsubr
mov
mov
mov
js
add
or
stos
lds
add
cmp
div
sbb
(bad)
aas
xor
div
push
lds
jno
and
rcr
mov
dec
pop
cld
je
mov
push
mov
int
adc
pop
and
mov
(bad)
push
mov
cld
mov
jae
inc
jbe
push
adc
fimul
inc
and
ret
add
das
add
push
js
je
push
or
leave
or
ja
cmp
add
xor
pop
sub
mov
sbb
xor
pop
sbb
or
clc
inc
xor
add
jmp
cmp
ja
mov
jmp
jecxz
mov
mov
out
push
fisttp
pop
add
xchg
ret
stos
mov
jo
movs
ror
test
xlat
pop
xor
jb
das
adc
ins
sub
jmp
pop
and
xor
or
dec
mov
adc
neg
inc
pop
inc
icebp
cmp
cmp
daa
push
lds
jmp
aad
cmp
repnz
inc
push
mov
loope
fmul
push
or
leave
inc
sub
in
fsubr
popa
movs
std
scas
retf
ret
and
add
inc
adc
and
shr
adc
cs
push
sub
rol
adc
add
lahf
jg
adc
sti
add
push
jne
mov
jmp
cmp
popa
jmp
std
cmps
mov
xchg
ret
adc
mov
popa
ret
test
sub
ret
sub
or
pop
cmp
div
jmp
loop
ss
xor
repnz
sub
inc
add
outs
jmp
push
mov
fist
je
mov
pop
shl
not
and
or
into
scas
dec
or
xchg
sbb
push
adc
mov
adc
inc
xchg
ret
pop
daa
mov
test
pop
dec
cmps
inc
dec
xor
xchg
lods
in
test
loopne
jmp
and
movs
jne
fld
ins
into
push
adc
loopne
in
adc
xor
jge
ret
or
inc
shl
ret
test
add
adc
sub
ret
outs
xlat
sub
ja
retf
imul
aaa
push
ss
cmp
or
adc
ja
push
jo
hlt
add
or
inc
add
je
inc
inc
or
push
(bad)
mov
xor
cs
aas
mov
or
xor
push
push
popf
and
sub
xchg
inc
or
loope
mov
or
iret
sub
ror
pop
jns
aam
push
leave
aaa
pop
ret
mov
and
or
jmp
pop
leave
pop
pop
ror
push
rcl
test
retf
dec
xor
std
pop
cmp
mov
daa
daa
push
loop
shr
add
test
arpl
fsub
or
sbb
cmp
(bad)
xor
daa
retf
ja
mov
adc
mov
mov
bound
mov
ss
mov
mov
and
rol
push
lods
pop
push
pushf
sub
shl
xchg
add
xor
lea
pop
mov
outs
addr16
add
shl
inc
push
nop
pusha
mov
mov
jp
jle
mov
jbe
xchg
pop
call
sbb
push
fdivr
(bad)
jge
leave
dec
inc
xor
pop
pop
ss
push
push
inc
not
addr16
sbb
inc
push
or
inc
ret
or
jmp
inc
daa
push
xor
or
mov
xchg
adc
cwde
leave
cwde
das
nop
or
rol
shr
xchg
and
mov
push
sub
push
inc
push
sbb
sbb
xchg
movs
add
enter
mov
cmp
jmp
popf
or
fcomp
push
fimul
ret
inc
push
test
(bad)
sub
sub
push
fstp
adc
cs
xchg
and
dec
ss
loopne
mov
mov
shl
jmp
mov
jmp
int3
hlt
xchg
shl
add
add
add
pop
or
dec
scas
int3
or
pop
mov
ret
push
or
sbb
sub
mov
jae
pop
sar
xor
(bad)
aad
nop
loopne
sub
pop
push
add
mov
or
pop
out
add
iret
call
lock
ja
addr16
mov
add
in
aad
fwait
mov
xlat
inc
lea
ins
sub
dec
ss
cmp
adc
bound
je
xchg
sbb
pop
add
jl
add
ds
xchg
lea
iret
movs
inc
mov
pop
jb
push
or
leavew
pop
test
mov
add
adc
js
dec
xchg
mov
jno
pop
adc
xor
sub
push
je
xchg
jp
jmp
aaa
push
or
scas
rol
xor
add
cld
imul
fidiv
mov
sbb
sbb
xlat
inc
in
pusha
ret
sub
add
iret
add
leave
add
and
loop
inc
pop
or
lea
sbb
(bad)
or
sbb
add
or
or
xor
mov
mov
mov
ret
jbe
pop
lea
enter
adc
retf
add
sub
jo
inc
push
jb
nop
cmp
inc
mov
(bad)
inc
in
ins
push
lea
dec
data16
sub
push
push
add
rcl
or
or
sbb
add
pop
pop
mov
loopne
ret
adc
(bad)
lock
cld
or
scas
psubd
out
int3
mov
nop
mov
and
enter
(bad)
ret
leave
jmp
add
ror
and
or
adc
adc
mov
and
jne
icebp
movs
sbb
sub
test
xor
lock
loopne
ja
or
jl
mov
add
imul
lahf
pop
lock
sbb
lahf
pushf
jecxz
loopne
cli
loop
dec
push
dec
cmc
into
shl
dec
repz
shr
inc
rcl
or
adc
xor
cmp
enter
shr
pop
xchg
mov
les
arpl
inc
or
fnsave
pop
dec
xchg
test
jb
sbb
clc
push
sar
pop
xlat
ins
sbb
inc
push
rcl
shr
inc
nop
or
fisttp
adc
push
mov
aad
jmp
in
lods
rol
inc
mov
sti
xchg
add
lods
inc
aad
ret
mov
lods
mov
movs
push
sub
and
out
movs
mov
(bad)
sub
sub
imul
sbb
sbb
imul
push
pop
outs
inc
popa
arpl
adc
adc
sub
xchg
pusha
test
test
adc
or
mov
sub
adc
sbb
pop
sub
push
into
push
pop
(bad)
mov
inc
in
sti
jge
sbb
ret
mov
sbb
rcl
fbld
and
je
movs
nop
jge
sub
cmp
add
mov
and
sbb
adc
or
cli
pop
cmp
cmp
je
push
cdq
push
xchg
xchg
push
adc
jge
movs
add
adc
push
push
fdivrp
mov
jne
mov
mov
push
sbb
dec
xor
pop
ror
dec
push
adc
adc
jno
shr
out
call
pushf
adc
push
jns
sbb
test
mov
loope
scas
push
mov
mov
inc
inc
cmp
jne
mov
(bad)
jg
jo
call
adc
shl
mov
shr
add
mov
sub
aaa
int
test
and
inc
out
repnz
mov
out
loopne
mov
in
push
mov
arpl
inc
pusha
mov
mov
call
push
sbb
fsub
mov
xchg
dec
lahf
mov
pop
push
pop
sub
push
lea
loopne
dec
sub
add
sbb
in
push
adc
add
and
cmp
ror
pop
sbb
mov
adc
mov
pusha
aad
jmp
inc
sti
inc
cmp
jl
in
pop
or
adc
(bad)
cmp
xor
mov
icebp
dec
jne
add
loope
inc
pushf
pop
xchg
mov
or
je
pusha
or
xchg
pushf
sbb
ficomp
push
and
test
les
test
or
popa
mov
adc
sbb
add
xor
ss
(bad)
call
add
es
pop
push
mov
(bad)
push
daa
out
aad
mov
shr
call
pop
inc
(bad)
cli
and
les
imul
cmp
int3
rep
and
lds
mov
dec
and
fist
das
loopne
into
push
or
xlat
inc
nop
sbb
in
jmp
rcr
adc
cmps
les
or
es
ret
das
lds
shl
add
pop
push
or
adc
bound
xchg
nop
leave
ret
jg
and
or
cmp
sub
adc
push
leave
mov
cmps
pusha
cdq
add
repz
pop
sbb
push
mov
in
jb
sbb
cmps
rol
pop
cmp
rcr
adc
shl
in
lahf
adc
or
mov
mov
fadd
aaa
imul
lock
add
mov
pop
xor
mov
xor
ret
and
and
add
mov
mov
popa
ror
xor
addr16
jno
xchg
clc
out
in
sub
test
jecxz
leave
dec
jb
mov
les
add
loopne
jns
or
pop
mov
add
mov
and
lds
add
mov
mov
pop
and
loop
mov
and
jecxz
movs
jb
mov
movs
lods
xor
repnz
mov
mov
les
sub
outs
outs
and
loop
les
push
or
sbb
pop
movups
rcl
fcom
add
push
push
mov
cld
int3
or
cmp
push
push
in
cmp
int
push
cmp
xor
pop
mov
fst
int3
adc
in
call
and
std
add
or
mov
or
ins
adc
or
call
inc
jo
pushf
popa
das
sahf
mov
sbb
jbe
xchg
sbb
dec
adc
dec
das
add
inc
ret
pushf
push
ficom
adc
jg
mov
mov
xchg
push
jb
inc
mov
sbb
sbb
fst
sti
sbb
push
leave
js
lods
int3
or
push
repnz
sbb
or
lock
test
retf
sub
mov
outs
sbb
or
lea
dec
test
fwait
jle
arpl
xchg
or
fisub
mov
xor
jmp
pusha
cmp
or
add
test
add
adc
xchg
add
fdiv
push
cs
imul
push
sti
ffree
int3
xchg
imul
outs
mov
mov
and
enter
mov
stos
ins
icebp
push
fisub
into
mov
ret
adc
pusha
adc
xchg
jl
pushf
inc
sbb
repnz
and
rol
or
mov
xlat
mov
scas
and
sub
sub
add
push
stc
xchg
xor
fisub
pop
lods
push
lods
gs
scas
add
pop
mov
cmp
lock
push
mov
xor
add
clc
sub
inc
sub
int3
mov
je
mov
sub
jle
cld
ret
fst
punpckhdq
fstp
sbb
and
adc
and
pop
and
sub
push
and
mov
in
sahf
push
or
adc
mov
inc
lock
add
push
sbb
sub
push
and
jne
(bad)
loop
and
inc
cmps
retf
xchg
call
test
jle
hlt
add
movs
fadd
cmp
jae
test
dec
mov
aaa
mov
(bad)
cwde
or
mov
cmp
jne
loop
pusha
arpl
outs
cli
ins
sub
push
and
push
xchg
add
ins
sub
dec
sbb
xor
enter
test
jmp
test
mov
call
outs
test
adc
sub
and
add
mov
and
pop
inc
dec
add
cs
inc
test
push
dec
pusha
jno
xor
dec
and
inc
pushf
inc
test
mov
jns
(bad)
movs
mov
sbb
popf
mov
dec
jns
int
pushf
les
lods
xor
push
outs
pushf
shr
sub
push
cwde
xor
sti
sub
nop
and
add
push
cwde
sub
inc
shl
sub
aas
cmp
mov
dec
cld
test
mov
or
add
sub
nop
icebp
xor
push
pusha
sub
mov
(bad)
not
movs
inc
(bad)
out
es
dec
ja
pop
mov
pop
pop
dec
mov
push
pop
(bad)
or
out
pop
mov
cmc
sbb
rcr
mov
inc
or
mov
cli
xchg
mov
mov
cld
pop
lock
push
cmp
mov
inc
add
je
cmp
jne
lods
sub
add
pop
pusha
int3
fisub
in
jge
mov
out
fdiv
pop
add
jmp
add
cmp
js
mov
jmp
and
mov
out
sar
sar
mov
dec
jl
movs
int3
das
sub
push
(bad)
dec
lods
mov
clc
cmp
push
or
mov
out
sahf
pusha
inc
ss
mov
xlat
mov
mov
shl
sti
mov
jge
jbe
sub
add
shl
loopne
push
push
dec
sahf
jmp
mov
push
sub
add
push
loope
cs
mov
jecxz
pop
nop
sub
nop
jns
das
jge
xchg
or
adc
mov
push
cmp
push
sub
rcl
sub
pop
cs
mov
addr16
ja
sub
xchg
push
sbb
rcr
push
ds
je
test
shl
pop
sub
test
inc
popa
mov
inc
or
sbb
add
push
test
sbb
call
xchg
fsub
mov
adc
cmp
fcmovnu
jnp
dec
xchg
mov
inc
arpl
add
push
aaa
xor
dec
adc
gs
and
pop
enter
adc
mov
dec
ret
sbb
push
xchg
mov
or
or
cmp
call
add
mov
push
jbe
jle
or
mov
pushf
out
fisub
sub
inc
push
lods
cmp
pop
add
test
mov
and
fabs
rcr
enter
sbb
bound
enter
sub
out
mov
add
or
xor
cmp
lahf
mov
push
mov
adc
pop
rol
loopne
(bad)
and
cmp
and
clc
jge
xchg
push
clc
push
adc
inc
sbb
adc
and
hlt
mov
test
fld
fucomp
fnstsw
test
jnp
sub
rcr
leave
clc
xchg
fstp
mov
mov
sbb
push
ds
inc
fistp
dec
jnp
fstp
jmp
cmp
jl
icebp
fdivr
add
in
jg
push
sbb
ror
fxch
add
add
or
pop
jne
and
outs
or
nop
ins
inc
jmp
cmp
movs
je
out
rol
dec
push
cs
push
movs
push
xchg
and
and
adc
xchg
shl
xchg
push
call
inc
dec
scas
xchg
fistp
and
js
je
leave
push
jne
xor
aam
adc
or
movs
icebp
add
in
loope
popa
icebp
mov
inc
or
mov
mov
cmp
jb
lods
fsub
cmp
out
mov
add
and
popf
sbb
ins
adc
mov
fld
pop
ret
loopne
pop
je
mov
xchg
popa
test
mov
push
loop
je
inc
call
mov
aaa
jmp
adc
lock
mov
cmps
das
mov
in
pop
mov
and
(bad)
loopne
and
je
inc
mov
or
fs
fadd
cmp
mov
in
and
sub
call
call
and
(bad)
or
ins
inc
stos
jne
mov
retf
bound
test
inc
mov
cmc
mov
dec
sbb
retf
pop
and
and
out
pop
(bad)
nop
push
sbb
(bad)
or
(bad)
fcomp
push
pop
adc
test
and
out
cmp
shr
sub
scas
ds
inc
cmps
stc
into
mov
push
and
mov
adc
pop
rcr
xor
xchg
ret
ret
sbb
or
(bad)
jno
imul
seta
in
pop
call
mov
and
push
fdivr
bound
and
cmp
test
int
sbb
dec
or
rol
cld
mov
sub
cmp
(bad)
cmp
and
shr
sub
cmp
and
push
mov
and
jp
add
rol
les
in
adc
ins
mov
inc
sub
test
add
or
sub
inc
xchg
xchg
out
pop
sbb
and
je
int
les
ja
jecxz
mov
xchg
push
stos
xchg
enter
ds
xlat
shl
jecxz
add
adc
sbb
cmc
mov
jne
mov
inc
jmp
nop
mov
or
test
and
mov
add
adc
inc
ret
loopne
sbb
fmul
cli
add
jle
cmp
pop
jmp
sbb
inc
push
inc
pop
mov
push
push
adc
mov
nop
outs
pop
leave
add
(bad)
ffreep
jecxz
dec
lea
push
pop
movs
push
imul
jecxz
sbb
add
inc
cld
add
pop
cmp
push
imul
pusha
lock
push
cmp
inc
ja
push
adc
ret
cmp
loopne
loop
mov
loopne
lock
sub
sub
mov
rep
or
push
add
mov
lods
dec
cmp
sar
mov
mov
loopne
and
jns
inc
dec
nop
not
and
lea
ficomp
fdivr
push
jb
fdiv
stc
retf
add
loopne
sbb
(bad)
fsubrp
clc
dec
inc
inc
std
vminsd
push
in
fdiv
push
mov
test
lock
loope
or
add
sub
push
xor
call
cli
sbb
push
cmp
lea
jmp
push
pop
inc
rol
cmp
into
adc
sar
retf
push
xchg
dec
in
into
sub
dec
out
das
cmp
movs
ins
push
ret
sub
jle
adc
inc
pop
enter
inc
inc
dec
or
or
enter
cmp
or
ins
dec
ror
pop
ja
loope
push
aam
pop
ret
pop
retf
and
sub
ret
jge
sub
mov
xor
dec
inc
sbb
int3
das
cmp
mov
push
push
(bad)
and
pop
ss
cld
pop
pop
sub
ins
sbb
(bad)
sub
shl
es
cmp
or
adc
mov
inc
fcomp
mov
pop
fs
inc
inc
push
inc
dec
jne
pop
cmp
bound
push
loope
ss
xchg
les
ins
jae
nop
pushf
ds
push
mov
sub
jg
inc
jmp
jne
pop
mov
rcr
pop
cmp
int3
pop
mov
je
or
je
dec
or
fdiv
mov
ror
pushf
fnstenv
imul
std
and
cmps
mov
mov
cld
mov
je
retf
mov
cld
ret
fild
cmp
(bad)
lock
push
xchg
jne
fadd
pop
jecxz
push
mov
push
cmp
pop
jmp
adc
pop
mov
ret
adc
aas
(bad)
rol
fisttp
add
ret
into
in
jmp
sbb
sbb
and
mov
or
inc
push
pop
sbb
daa
jl
stos
sti
dec
jmp
dec
std
ins
sbb
add
cli
je
prefetcht2
das
cmp
mov
fild
adc
jb
pop
adc
sbb
scas
jne
adc
xor
adc
jne
repnz
loope
fwait
sar
and
xor
add
sub
sub
xor
in
jnp
outs
pushf
add
and
pop
inc
or
add
addr16
adc
nop
or
iret
adc
mov
test
int3
aas
add
mov
into
xor
mov
ja
cmp
mov
add
hlt
setg
cmp
sub
pop
or
dec
xor
in
xchg
mov
fucomip
cmp
sub
cmp
sbb
clc
push
sub
or
and
call
sbb
(bad)
or
jmp
push
call
mov
dec
loope
imul
ss
(bad)
and
add
(bad)
popa
adc
iret
xchg
mov
loope
(bad)
and
add
push
jl
xor
or
je
ror
ins
mov
or
ficom
sbb
adc
dec
inc
cmp
jg
xchg
ret
aas
cmp
pop
inc
lea
sub
dec
ins
pushf
pop
in
mov
lea
and
loope
cmp
mov
pop
popa
inc
arpl
movs
mov
pusha
fist
ret
sub
packsswb
sub
push
or
icebp
popf
pop
adc
popa
add
into
pop
xchg
xchg
push
xchg
add
fadd
sbb
mov
pop
add
lods
mov
add
add
aas
sub
pop
and
out
mov
mov
repnz
adc
jmp
cld
push
push
nop
retf
lea
push
std
je
in
sahf
inc
sbb
bound
add
dec
inc
mov
cmp
add
ret
hlt
adc
and
lea
mov
rcr
cmp
cmps
adc
mov
icebp
out
push
sub
sbb
jmp
add
add
mov
add
cmp
ja
cmp
imul
or
mov
aas
mov
inc
lods
jnp
jb
movs
jbe
imul
pop
jg
sar
mov
mov
add
xor
loopne
add
or
add
(bad)
dec
adc
sub
inc
sub
call
cmps
jle
add
arpl
or
sbb
in
test
jbe
dec
or
cmp
or
inc
jnp
ds
push
loop
je
cmp
movs
mov
push
jo
dec
call
pop
cmp
jl
movzx
add
inc
(bad)
mov
mov
pop
popa
adc
stc
aam
cmp
adc
jne
or
xor
das
inc
xchg
aad
sar
popa
(bad)
nop
mov
add
and
add
clc
xchg
inc
call
or
ret
mov
les
push
pop
mov
adc
cld
or
(bad)
push
xor
adc
mov
jmp
mov
loopne
mov
xchg
fs
or
mov
push
cdq
add
push
add
cdq
jle
xchg
sub
out
ret
jne
outs
lods
(bad)
int
inc
and
aam
out
dec
pop
add
push
jne
xchg
and
sbb
inc
add
adc
mov
bound
and
inc
sub
xchg
or
test
and
scas
gs
push
imul
(bad)
push
push
xor
cmp
leave
ret
xchg
mov
jecxz
loope
int3
dec
add
pop
aam
mov
sub
dec
cmps
push
dec
retf
xor
leave
and
bound
add
inc
aad
or
test
xchg
mov
popa
cld
popf
jmp
sub
xor
call
das
popa
sub
xchg
call
icebp
outs
xor
mov
push
arpl
or
push
mov
pusha
xchg
loope
mov
push
push
ffreep
mov
or
bound
and
enter
add
and
ret
or
xchg
xor
stos
(bad)
mov
fs
pop
pop
or
jo
rol
pop
cmp
je
xchg
fld
sbb
cs
push
inc
inc
inc
xor
add
add
leave
loope
sub
sar
push
push
pop
cmp
call
jg
ret
(bad)
in
push
adc
mov
xchg
mov
inc
inc
rcr
aaa
inc
inc
adc
add
ficom
and
jne
les
xor
add
imul
push
test
add
popa
mov
push
shl
fnsave
arpl
adc
cmp
imul
and
leave
or
lock
popa
movs
ret
adc
jo
(bad)
and
ins
adc
and
mov
sbb
or
push
jnp
xchg
mov
je
nop
ja
mov
xor
jns
push
rol
int3
out
mov
in
enter
enter
popf
jp
xchg
cmp
leave
adc
clc
mov
or
inc
sbb
mov
pusha
pop
mov
mov
js
mov
movs
out
leave
or
mov
mov
shr
cmp
icebp
aam
xchg
int3
adc
inc
and
mov
xchg
sub
sahf
push
(bad)
pusha
dec
mov
daa
xchg
xor
xchg
or
cmp
or
test
mov
and
push
or
pushf
xor
repnz
fsubr
push
sub
and
jle
push
xor
or
and
jle
adc
sub
sub
inc
mov
pop
imul
mov
and
inc
pop
dec
into
pop
pusha
xor
aas
out
lea
or
rol
ror
or
mov
les
pop
adc
adc
xor
push
adc
hlt
inc
mov
jecxz
adc
inc
sub
and
adc
into
je
test
push
jne
sub
mov
std
out
test
pop
add
mov
pop
jmp
shl
sbb
xchg
cmp
loope
or
jmp
pop
ins
jne
jnp
mov
and
add
sbb
mov
or
jmp
fsub
adc
add
fnstcw
ss
test
cld
int3
loopne
add
add
cmp
xor
mov
outs
adc
cld
xchg
lock
sbb
cdq
daa
or
iret
add
cmp
dec
inc
pop
out
aad
fdiv
arpl
sub
iret
retf
lods
xchg
fs
mov
mov
xchg
ret
mov
test
mov
add
or
push
(bad)
push
jb
adc
add
and
add
and
add
shl
retf
test
ret
add
imul
das
add
adc
add
ror
and
adc
push
mov
adc
fmul
jmp
ins
fs
scas
mov
enter
scas
nop
inc
inc
jne
cmp
mov
inc
gs
iret
dec
mov
lea
(bad)
push
fnstcw
xor
iret
retf
sub
sub
mov
add
stos
pop
daa
push
imul
sbb
lock
add
sub
out
inc
in
add
add
mov
call
xchg
xchg
out
loop
sar
stos
pop
loop
ss
cwde
adc
mov
inc
cmps
adc
sbb
mov
push
push
inc
and
mov
adc
add
push
dec
jge
fcomp
push
push
iret
mov
add
mov
and
rcr
rcr
push
mov
mov
jb
mov
mov
fwait
neg
mov
adc
test
lock
push
push
mov
jnp
sahf
lods
sbb
mov
out
and
add
scas
dec
les
mov
movs
mov
xchg
or
out
sbb
popf
add
jne
lea
sbb
mov
leave
outs
imul
or
pop
add
lods
cmp
test
jp
sti
sub
sbb
pop
lock
leave
mov
in
mov
call
loopne
jge
or
push
shl
and
pushf
sbb
lock
mov
mov
adc
inc
out
or
add
dec
test
xor
int3
mov
sbb
mov
push
popa
mov
push
add
push
pop
mov
and
inc
cs
pushf
fstp
sar
sbb
sub
int3
cmp
loop
jle
cmp
jl
mov
add
mov
movs
or
movs
adc
iret
rol
(bad)
popa
nop
pop
int3
arpl
es
je
int3
ins
movs
or
je
adc
fcomip
in
inc
sub
push
mov
sub
stos
aam
aam
dec
push
retf
adc
adc
into
mov
retf
and
sbb
cmp
shl
add
fld
mov
rol
es
add
add
mov
or
lock
aaa
xchg
add
or
inc
cdq
rol
mov
ror
mov
sbb
push
pop
mov
jo
and
das
mov
sub
pop
mov
int
sub
mov
or
mov
out
data16
gs
or
in
(bad)
cli
jbe
cmp
cmps
ret
push
cmps
or
push
sub
in
sbb
(bad)
leave
mov
xchg
and
and
or
les
mov
add
xor
pop
(bad)
(bad)
(bad)
jno
retf
enter
(bad)
xchg
dec
(bad)
daa
push
shl
xchg
mov
mov
jle
jle
rcl
and
pop
into
pusha
push
mov
adc
loop
ror
push
aaa
adc
sbb
out
mov
std
call
and
push
mov
test
push
(bad)
jle
popa
adc
jo
jg
sbb
test
push
or
ds
int
dec
sti
hlt
add
push
rcr
mov
push
(bad)
fmul
lds
xor
xor
ins
int3
mov
xor
and
adc
push
sub
and
sub
or
leave
mov
(bad)
push
add
test
push
pop
dec
cli
cmp
jne
push
adc
loopne
repnz
add
movs
daa
popa
mov
test
adc
adc
jle
sbb
mov
jb
add
sub
sub
push
iret
ror
pop
repz
mov
repz
popf
add
into
xchg
mov
xlat
and
pop
out
mov
mov
dec
mov
pop
movs
xlat
add
push
ficom
retf
mov
cs
popf
jmp
push
mov
rcl
xor
popa
daa
mov
arpl
xor
xchg
add
inc
or
test
jno
and
jb
test
sub
cdq
lea
jbe
mov
pop
push
jmp
adc
shl
push
pushf
add
mov
test
mov
dec
inc
mov
push
sbb
or
inc
je
(bad)
jae
and
iret
adc
xchg
dec
mov
mov
xchg
rol
mov
test
mov
add
xchg
or
jb
or
push
or
xchg
mov
ins
pop
add
loop
mov
xchg
or
jo
jnp
inc
sub
xchg
imul
add
test
push
mov
outs
and
adc
push
and
into
mov
not
loope
arpl
mov
pop
and
cmp
nop
dec
pop
add
jno
cmp
add
dec
and
rcl
mul
inc
mov
xchg
mov
adc
and
aam
mov
gs
scas
shl
adc
(bad)
(bad)
sti
(bad)
icebp
outs
adc
pop
push
mov
push
enter
sbb
xor
xchg
pop
push
cmpxchg
push
stc
sbb
aas
mov
adc
push
mov
shr
lock
pop
sub
ins
sbb
fidivr
mov
arpl
sbb
sbb
inc
push
int
sar
add
jae
mov
(bad)
mov
hlt
sbb
jnp
pop
mov
or
lods
cmp
push
pop
sub
pop
out
sar
push
ins
pop
test
pop
cmp
adc
push
push
(bad)
mov
cmps
inc
mov
and
jl
push
mov
jo
jecxz
adc
lahf
add
jp
shr
popf
pop
inc
les
pop
push
call
leave
and
adc
aam
and
push
imul
mov
inc
packuswb
mov
push
adc
scas
(bad)
lea
mov
les
pushf
loop
push
or
cmp
mov
es
loopne
xchg
(bad)
jns
out
aaa
push
fbstp
cmp
inc
inc
mov
daa
sub
daa
movs
sub
outs
nop
sub
ins
shl
div
(bad)
hlt
and
xlat
and
lods
mov
pusha
xor
imul
js
aad
sbb
adc
sub
jnp
fimul
and
xor
jae
stos
and
call
pusha
and
or
adc
pop
sbb
dec
mov
in
inc
movs
ret
ds
push
sbb
repnz
push
sub
in
out
jnp
cmp
cwde
pop
add
imul
mov
ja
inc
shl
push
cs
bound
sbb
mov
scas
loopne
ficomp
cmp
jbe
add
pop
das
shl
sbb
outs
sbb
enter
jge
push
sub
and
xor
jo
sbb
inc
add
and
das
cmc
adc
out
adc
push
adc
mov
push
xor
pusha
daa
ins
ror
xchg
dec
loope
in
or
js
mov
test
(bad)
das
nop
push
cmp
cmp
andps
cmc
stc
or
pop
mov
xchg
adc
inc
jno
mov
and
xor
dec
ss
bound
xor
pusha
cmp
ja
cmp
ins
dec
and
and
mov
mov
jmp
arpl
(bad)
xor
push
test
push
leave
cmp
or
repnz
mov
jnp
mov
ret
popa
pusha
and
and
fld
xchg
and
xchg
sbb
pushf
dec
pop
lock
cwde
inc
or
loop
adc
sub
inc
and
out
fmul
adc
jmp
jl
jge
pop
or
or
pop
jmp
mov
orps
hlt
fs
or
cmps
clc
outs
push
add
xor
test
div
adc
inc
sub
push
xor
mov
leave
adc
dec
ror
scas
test
nop
fldlg2
mov
cld
sbb
add
or
aaa
test
sar
es
xchg
iret
dec
sbb
mov
pop
fcom
ret
jle
sub
push
push
and
icebp
int3
int
add
lock
jge
sub
add
jp
xchg
(bad)
jle
sbb
mov
xor
push
mov
js
push
cwd
mov
icebp
cmp
jne
loop
adc
add
add
in
jecxz
add
call
pusha
ins
jg
mov
push
mov
cmp
or
stc
adc
add
jmp
or
add
and
or
iret
jb
sub
fild
mov
mov
jno
lods
or
add
cmp
add
or
jmp
leave
repz
int
sub
pop
or
or
(bad)
fucomi
movs
push
or
in
pushf
jmp
and
inc
xchg
retf
add
lods
xchg
sub
adc
adc
rcl
jp
and
cli
sub
clc
mov
ret
pop
jp
scas
xor
cmp
ds
add
xor
cdq
dec
cmp
add
xchg
jno
sub
add
outs
dec
mov
imul
push
ret
outs
fsub
or
das
xor
mov
mov
add
call
inc
enter
shrd
and
add
pop
nop
mov
push
jmp
ds
or
rcr
sbb
dec
loope
xor
scas
leave
stos
or
jg
adc
add
push
or
push
add
in
int
or
lea
fsubr
cmp
retf
cmc
mov
sub
mov
push
jne
jno
iret
add
movs
push
hlt
leave
mov
xor
adc
aam
fld
pop
test
cmp
mov
pop
mov
add
adc
add
and
mov
add
push
ss
ror
aam
ror
xor
les
lods
shr
lea
mov
and
lods
lods
and
pushf
jge
push
nop
test
leave
fiadd
cmp
mov
shr
adc
jb
push
push
mov
mov
xlat
dec
mov
xor
cwde
push
push
xchg
push
pop
pop
pop
or
pusha
mov
shl
pop
movs
mov
inc
inc
pop
call
cmp
xchg
cli
test
repnz
cmps
(bad)
loopne
pop
xchg
jmp
jb
sbb
addr16
add
fwait
xor
jp
push
jl
push
retf
mov
add
inc
in
adc
mov
mov
or
mov
gs
in
add
imul
xchg
mov
mov
cmps
dec
daa
sub
scas
push
in
push
push
enter
add
popf
adc
inc
pusha
push
xchg
jl
or
hlt
and
lock
cmp
pop
and
loope
sbb
pop
mov
mov
inc
mov
shl
sti
adc
adc
jle
pop
mov
fisttp
pop
add
sub
add
fwait
in
(bad)
nop
ss
imul
sub
pop
bound
push
sub
inc
aaa
fmul
(bad)
mov
jl
das
hlt
cli
xor
xor
inc
add
test
mov
pusha
jle
xor
adc
lahf
add
or
dec
jle
shl
leave
jl
mov
daa
les
push
dec
dec
sti
add
ins
mov
popa
jg
loopne
les
dec
iret
xor
cmc
or
sbb
nop
jecxz
test
pop
ins
(bad)
ret
and
add
xor
mov
sbb
ds
push
mov
dec
lock
test
fndisi(8087
repnz
adc
dec
jo
pop
and
xor
ins
loopne
inc
add
pop
iret
in
or
test
les
sbb
outs
adc
jmp
inc
sbb
push
mov
add
pop
or
dec
and
clc
push
test
pop
cwde
cmp
je
cmp
xchg
mov
cmp
fistp
mov
jne
mov
mov
sbb
jg
shl
push
mov
mov
mov
call
and
cmp
jne
and
orps
mov
inc
aas
sub
nop
jo
ja
sub
cmp
fistp
push
push
or
ss
xchg
sub
and
jl
js
push
push
(bad)
dec
jb
call
adc
bound
out
das
lea
leave
mov
push
clc
sbb
call
jge
adc
sahf
add
loopne
jns
dec
mov
xor
push
aaa
(bad)
jo
push
inc
mov
sbb
int3
mov
jno
jge
inc
push
jge
push
aam
add
hlt
daa
jbe
mov
mov
cmp
int3
jno
lods
and
ret
xchg
test
or
in
fnsave
cmp
push
jb
shl
mov
push
add
add
inc
es
adc
adc
add
or
add
add
clc
sub
iret
jmp
pop
or
push
hlt
fdiv
push
push
push
fld
add
nop
push
inc
or
pop
adc
jle
les
scas
mov
mov
pop
adc
pop
pop
sbb
js
sar
mov
adc
sbb
jnp
and
jae
aaa
mov
push
loopne
rcl
and
ret
xlat
aas
jmp
xchg
jg
sbb
pop
xor
ret
mov
adc
push
test
dec
mov
push
cmc
add
push
adc
jp
adc
adc
push
push
mov
jnp
cwde
inc
add
adc
add
and
les
or
inc
test
mov
push
xlat
jl
mov
push
add
dec
ja
push
add
movs
shl
mov
jb
sub
leave
lock
(bad)
outs
pop
mov
mov
jne
xchg
in
int
sbb
sub
js
icebp
nop
xchg
ins
push
add
push
pop
jge
jg
lock
xor
cmp
jo
jmp
fsub
mov
sub
and
sbb
(bad)
jne
cmp
jge
cwde
daa
xor
cli
cmp
lahf
outs
cmp
pop
or
and
jmp
or
iret
sbb
pop
xchg
jmp
push
pop
(bad)
jnp
or
adc
add
jnp
dec
stos
sbb
and
mov
adc
es
jo
jle
or
inc
stc
push
xor
cmp
cmp
add
xlat
or
adc
add
cld
out
pop
sub
sbb
jg
add
test
jne
add
in
adc
pusha
and
cmp
jne
add
fldcw
cli
inc
mov
mov
xor
sub
fdivr
ja
jne
mov
cmp
fcomi
cmp
je
jne
xor
inc
push
(bad)
dec
sti
xchg
xchg
inc
pop
cmc
mov
mov
inc
xchg
out
out
mov
movs
jmp
rcl
(bad)
iret
adc
call
mov
cmp
ins
aas
ja
ja
out
cmp
xchg
cmp
sti
add
int3
mov
or
ins
push
inc
dec
es
lods
dec
mov
xor
or
daa
xor
addr16
adc
and
jo
jmp
sbb
repz
mov
push
in
add
pop
shr
daa
in
and
xor
mov
sbb
add
cmp
sbb
xor
xor
(bad)
call
in
jno
xor
fs
sub
pop
popf
movs
cmp
pop
pop
movq
les
add
and
inc
dec
mov
fcomp
ss
jg
sbb
sysret
push
loopne
inc
pusha
ret
(bad)
sbb
push
jae
stos
or
lods
sub
push
push
fld
cmp
xchg
jb
jmp
stos
ins
test
call
imul
inc
inc
inc
inc
inc
aaa
push
daa
xor
mov
adc
(bad)
adc
imul
call
in
mov
sbb
hlt
sti
lea
mov
in
es
or
mov
sub
cmp
jbe
cmp
inc
add
or
mov
adc
mov
aas
inc
jmp
mov
ins
inc
sbb
inc
retf
in
sbb
mov
sbb
or
mov
cmp
fcom
lea
jns
test
pusha
dec
sub
jl
and
and
aad
mov
mov
aam
jge
and
in
cwde
and
and
movs
inc
jge
sti
(bad)
and
or
cmp
jne
inc
call
inc
add
pop
test
dec
jne
push
push
push
cmp
je
pop
mov
not
or
push
or
pushf
test
sub
pusha
push
scas
dec
mov
xchg
pusha
jmp
jle
push
push
xor
dec
and
cdq
push
shr
push
mov
dec
jmp
fs
add
btr
stos
cmp
not
ficomp
dec
push
and
add
jl
jo
rol
xchg
or
or
or
in
sbb
in
or
add
nop
rol
repnz
bound
dec
jg
and
shr
pop
sti
add
scas
xor
test
add
scas
mov
push
sub
js
pusha
(bad)
mov
adc
aas
add
test
shr
mov
rcr
xor
hlt
retf
gs
xchg
sar
push
or
icebp
mov
dec
and
pop
jmp
stos
and
(bad)
or
ret
jge
jno
xchg
shl
or
adc
jb
add
jo
push
mov
imul
add
ds
bound
pop
repnz
loopne
(bad)
xor
or
loopne
xchg
mov
xor
test
jge
xchg
jle
neg
mov
popa
push
sbb
cld
or
push
push
ror
sub
mov
add
cld
fcomp
mov
mov
sbb
dec
in
push
pop
adc
dec
or
sbb
enter
or
inc
xchg
out
add
or
or
enter
shl
xor
sub
ret
sbb
cmps
div
and
(bad)
int3
push
or
adc
inc
cs
movs
mov
hlt
adc
push
adc
lahf
mov
jne
push
popf
sub
adc
cmp
push
and
aaa
je
add
add
add
push
call
ins
add
mov
sbb
sub
and
inc
adc
inc
enter
cmp
call
and
add
gs
fst
push
cwde
cdq
nop
pop
cmovb
ret
js
adc
jb
adc
rcr
sti
dec
mov
push
adc
pop
shl
in
int
nop
add
or
jb
dec
hlt
inc
es
shl
push
mov
bound
pop
push
inc
jmp
ins
cmp
sar
jmp
and
xor
push
inc
aaa
adc
mov
lds
shr
lea
inc
push
ret
(bad)
pop
add
add
push
enter
fwait
pop
push
pop
cmp
add
cmp
dec
cmp
xchg
setb
add
add
push
sub
pop
cmp
mov
and
push
cwde
dec
(bad)
enter
adc
push
mov
dec
add
ret
mov
cmc
xchg
mov
jmp
call
jmp
pop
fucomi
test
add
icebp
les
cs
sub
fild
jbe
add
loopne
push
push
fmul
mov
or
ficomp
xchg
pop
xchg
bound
add
ins
repz
cmp
scas
sbb
jne
outs
mov
push
adc
movs
(bad)
mov
aad
sub
inc
add
add
repz
(bad)
jecxz
jo
cmp
add
in
shl
mov
add
add
inc
push
fadd
push
loope
adc
das
cmp
xor
and
lock
aam
jp
pushf
cmp
pop
nop
pop
adc
push
cs
push
aam
mov
aaa
js
cmp
sahf
and
mov
inc
in
sub
mov
in
fs
inc
aam
inc
pop
adc
pop
add
clc
add
sbb
pop
add
test
push
inc
sbb
inc
test
adc
call
cmp
xor
in
jne
retf
loopne
shl
xchg
jmp
jg
arpl
icebp
dec
mov
adc
gs
les
jecxz
and
inc
ss
dec
(bad)
jmp
mov
jb
inc
xor
leave
adc
add
cmc
call
js
enter
rcl
add
mov
pusha
cmps
in
jecxz
jo
retf
not
fmul
mov
pop
loope
pop
cmc
aam
pop
jl
cmp
(bad)
icebp
cmp
and
test
mov
in
pusha
pop
add
add
xor
pop
test
cmp
adc
xor
pusha
fild
popf
or
mov
sub
test
call
mov
inc
stos
and
jne
aad
lahf
xchg
inc
inc
and
dec
push
(bad)
sbb
xor
xchg
fcom
and
in
add
pop
dec
dec
ret
sbb
xchg
sgdtd
(bad)
ins
or
hlt
push
jmp
in
add
mov
push
cmps
pop
pop
loopne
add
in
xchg
jmp
jne
shl
pop
lods
push
(bad)
inc
cdq
popa
js
ror
pop
push
sub
rol
xor
pop
add
mov
add
or
pusha
int3
frstor
push
into
(bad)
in
fucomi
nop
into
pop
dec
fisub
rol
into
imul
or
and
popf
loope
rcr
ins
push
ficom
call
xchg
sbb
out
jle
(bad)
(bad)
inc
adc
push
addr16
adc
out
sbb
sbb
ror
sar
fdivr
inc
movs
cmp
dec
sub
push
push
pop
and
movs
add
addr16
adc
or
retf
add
cmp
mov
inc
sub
test
mov
inc
not
enter
in
(bad)
pop
mov
sbb
sbb
lds
sbb
retf
sbb
and
es
push
jmp
push
pusha
int3
push
push
scas
lock
or
jl
mov
loope
fld
adc
or
aad
pop
add
outs
adc
div
push
pop
and
imul
sbb
test
pop
or
adc
add
dec
loope
xor
idiv
mov
lock
or
pop
or
test
add
mov
inc
dec
dec
sub
(bad)
xor
pop
rol
popf
sbb
mov
fadd
enter
call
fcmovnu
dec
ret
and
mov
push
and
ins
aam
and
inc
fsub
aad
(bad)
(bad)
pop
pop
hlt
pop
sub
jle
iret
adc
dec
clc
mov
repnz
mov
fidiv
push
sbb
les
add
pop
loop
loopne
dec
jns
mov
jmp
mov
mov
inc
cli
cs
iret
add
mov
cmps
nop
push
ror
mov
push
std
test
pop
lea
lea
shr
cwde
mov
xchg
mov
test
pop
xchg
imul
into
mov
xchg
leave
dec
pop
rol
daa
pop
push
adc
mov
cmp
int
pop
ror
lahf
(bad)
movs
push
sbb
or
adc
popa
bound
fild
sub
adc
mov
je
and
or
push
jb
loope
and
dec
sbb
inc
(bad)
clc
sar
sbb
jo
jo
outs
mov
jne
call
or
lea
in
lods
int
cmp
lea
retf
test
sbb
mov
adc
(bad)
ins
mov
test
adc
and
jnp
sbb
sahf
inc
nop
dec
popf
in
mov
cld
lods
jmp
(bad)
cmp
ret
pop
neg
add
jle
push
push
add
push
push
ret
jbe
fsub
push
mov
push
or
adc
adc
pop
add
and
jb
add
sbb
mov
pop
ret
cmp
add
ror
mov
ja
ja
stos
mov
dec
pop
loopne
jle
je
ficom
sbb
mov
cs
nop
movs
popf
fcomp
das
and
pop
fxch
push
pop
or
daa
cmps
dec
pop
cwde
pop
or
add
or
mov
and
push
push
popa
ret
push
xlat
push
sub
loope
sti
mov
push
sub
cmp
xor
nop
test
call
mov
add
pop
les
mov
int3
sbb
xor
rol
and
sbb
dec
enter
scas
xchg
icebp
sbb
arpl
iret
bound
mov
and
mov
popf
push
jbe
(bad)
push
hlt
add
xchg
mov
lahf
push
movs
adc
fcom
ds
daa
call
repz
pusha
loope
js
sbb
inc
fst
nop
push
icebp
retw
jmp
ret
pop
inc
push
inc
push
nop
add
or
in
or
push
and
test
adc
cmp
mov
daa
push
leave
push
cmp
pusha
mov
lods
movs
or
dec
pop
mov
mov
add
jno
jmp
jo
cdq
jle
iret
cmp
fsub
jo
loop
movs
push
daa
sub
mov
aaa
pusha
arpl
add
ins
push
adc
adc
add
push
pop
mov
inc
pop
push
cmps
mov
repnz
dec
(bad)
movs
mov
idiv
out
lods
in
xlat
in
aaa
xlat
xor
icebp
push
mov
or
int3
or
test
sub
mov
sub
sbb
fisttp
or
mov
mov
(bad)
add
sbb
and
loope
or
pop
sub
dec
sub
add
cwde
pop
sbb
ds
push
adc
push
mov
push
(bad)
or
je
add
push
jmp
push
or
in
mov
je
sahf
sub
stc
clc
adc
in
dec
movs
push
fmul
fdiv
je
add
push
shl
sti
cmp
daa
in
sbb
mov
and
addr16
adc
add
pop
or
pop
adc
mov
push
movs
mov
jge
scas
pop
add
shr
dec
adc
sub
adc
sbb
push
call
adc
call
into
rcl
sahf
mov
xor
sbb
push
mov
or
or
pop
or
or
or
inc
xchg
and
je
pop
daa
cmps
ret
pop
push
and
inc
and
pop
or
adc
xchg
sub
mov
mov
xor
ror
or
mov
pop
or
in
stos
scas
lds
cmp
call
adc
pop
mov
cmps
enter
pop
inc
dec
dec
push
pusha
mov
inc
xchg
shr
dec
cs
and
in
inc
retf
xor
leave
mov
sub
pop
adc
popa
sbb
jo
pop
pusha
test
int3
push
repnz
dec
fldenv
ret
shl
lea
fcom
lea
sbb
adc
xchg
and
push
add
pop
pop
jecxz
add
ret
add
xor
pop
add
xchg
arpl
and
ror
or
and
jns
ins
in
sbb
mov
sar
sub
pushf
icebp
and
imul
outs
sbb
push
ror
je
cmps
mov
adc
or
popf
ror
prefetcht0
mov
push
or
mov
mov
fld
xor
mov
and
mov
mov
or
mov
inc
add
cmp
inc
push
pushf
jnp
add
imul
mov
sbb
aaa
mov
xor
mov
ins
sub
(bad)
retf
arpl
pop
sti
cmp
arpl
pop
pop
test
push
jecxz
or
inc
xor
xchg
push
inc
or
shr
pop
jmp
mov
test
and
push
inc
es
ins
fst
fidiv
inc
or
add
sbb
jnp
dec
fld
cmp
dec
jle
ret
adc
sbb
nop
sbb
dec
add
pop
xchg
add
icebp
mov
xchg
jne
fild
sub
out
je
add
mov
xlat
mov
add
sub
add
add
test
pop
add
sub
lods
dec
dec
pushf
and
mov
dec
lods
inc
push
and
cmp
and
mov
xchg
data16
icebp
fnsave
fmul
fild
mov
sbb
test
cld
stos
leave
add
ins
xchg
sar
xor
adc
data16
xor
arpl
pop
add
push
push
jp
sbb
les
push
sbb
add
pop
sahf
cwde
fnstcw
pop
and
test
xor
repnz
arpl
bound
fdivr
dec
ja
sub
jnp
loop
adc
or
rcl
(bad)
mov
ror
jo
add
in
(bad)
bound
aad
ror
xchg
add
fild
jmp
nop
fmul
or
cs
sbb
push
add
or
adc
jle
sbb
push
or
shr
out
add
push
jg
xchg
push
adc
(bad)
pop
adc
cmp
inc
and
push
mov
sbb
pop
ins
cdq
dec
adc
retf
jl
dec
dec
xchg
ins
(bad)
cmp
ror
bound
push
repnz
jo
in
cwde
push
retf
and
dec
pop
sbb
pop
pusha
cmp
in
data16
dec
and
jge
adc
inc
loop
mov
inc
outs
and
cwde
(bad)
push
jae
mov
pop
mov
inc
(bad)
je
imul
xchg
jge
fiadd
cwde
mov
nop
mov
xor
pop
adc
add
stos
enter
jle
adc
mov
pop
inc
daa
je
loope
inc
mov
xchg
mov
ss
xor
nop
inc
xchg
ins
dec
leave
xchg
cmp
or
imul
sbb
jae
or
arpl
shl
mov
sbb
daa
je
push
retf
add
and
cdq
adc
and
jb
in
mov
or
sub
cld
aad
sbb
pop
lea
push
mov
dec
sub
cmp
mov
(bad)
enter
ss
mov
ret
pop
shl
mov
push
xchg
fidivr
addr16
adc
nop
cld
in
imul
lea
inc
test
mov
mov
add
test
pop
ret
int
inc
mov
xchg
mov
pop
leave
cmp
pop
imul
(bad)
mov
push
cmp
inc
sbb
(bad)
je
lods
cdq
clc
sbb
or
or
mov
fistp
jno
and
inc
dec
inc
js
adc
es
mov
test
and
in
aaa
ss
and
adc
mov
add
test
repz
xor
addr16
mov
xor
jne
cmp
call
and
in
enter
adc
ins
iret
jl
inc
sbb
ins
stos
dec
mov
adc
push
jnp
leave
mov
inc
pop
inc
xor
iret
pop
pop
xchg
mov
cmp
sbb
pop
or
inc
sahf
sub
ja
push
test
pop
or
sub
add
add
xchg
inc
repnz
jo
and
xor
jo
push
fisttp
sub
ficom
mov
iret
sbb
rcl
xor
adc
cmps
outs
push
dec
pushf
jb
xchg
xor
or
adc
pop
xchg
mov
adc
add
(bad)
repz
add
mov
pop
or
push
add
jmp
les
pushf
xor
or
shl
imul
xor
loope
rol
mov
cld
fs
inc
sahf
xchg
xchg
add
jp
add
add
pavgw
jno
cmp
jge
daa
and
sub
scas
cmc
or
mov
repnz
ret
call
jbe
mov
mul
sub
aaa
pushf
sbb
pop
add
add
dec
daa
lahf
cmp
fsub
call
add
dec
or
sub
or
push
add
cmp
outs
call
je
idiv
xor
clc
xchg
and
retf
or
int
xchg
shr
lods
jae
test
xor
fild
(bad)
fwait
pop
adc
and
xchg
in
ret
and
pop
inc
pop
mov
xchg
aaa
xchg
xchg
les
pop
repnz
dec
and
fst
je
mov
out
push
movs
and
mov
cs
pop
dec
ret
int3
push
imul
xor
pop
jmp
inc
(bad)
dec
mov
sbb
sub
adc
jmp
sbb
or
gs
sub
add
xchg
xchg
fnstcw
js
jle
ror
or
mov
inc
jnp
aas
mov
jb
mov
add
add
add
jmp
fdiv
popa
in
xchg
stos
add
push
adc
adc
jno
mov
dec
and
push
xchg
pop
and
mov
fisubr
mov
movs
enter
movs
mov
div
movs
mov
sub
daa
or
jl
and
cmp
push
jbe
leave
mov
pop
xchg
pushf
push
imul
movs
enter
enter
cmp
mov
adc
inc
jbe
or
rcl
stos
sbb
sbb
test
adc
jmp
ja
cmp
jl
push
movs
xacquire
adc
lea
enter
xchg
push
push
stos
imul
pop
adc
mov
add
test
or
gs
loope
shl
push
push
push
idiv
mov
push
movs
mov
cs
pop
fiadd
cmp
out
sub
and
xor
leave
or
add
push
ja
push
mov
mov
add
cmp
jmp
sub
sub
lock
jp
loopne
sub
ins
loopne
xor
gs
xor
cmp
pop
and
sahf
sub
xchg
or
repz
or
cmp
or
or
cmp
push
nop
cdq
cmp
mov
mov
mov
or
push
mov
in
loop
or
xor
loopne
dec
mov
aaa
mov
or
and
sub
jno
test
jnp
jge
adc
jae
adc
xor
inc
adc
gs
rcl
lods
mov
inc
jl
sub
push
or
xchg
and
aam
mov
or
jae
call
mov
sub
jnp
add
pop
aam
add
add
dec
or
(bad)
and
push
add
aas
cmp
dec
or
in
pop
jae
cmp
cmp
inc
lea
pop
sub
arpl
test
(bad)
mov
xchg
pop
stos
push
inc
repz
adc
mov
sbb
inc
dec
adc
stc
push
add
loope
mov
outs
rcl
ret
popf
push
dec
pop
inc
xchg
mov
xor
jnp
or
inc
jns
in
dec
sbb
iret
ss
lock
and
cdq
fs
test
xchg
mov
in
adc
dec
sbb
push
xor
loopne
mov
add
add
imul
movs
inc
dec
sub
sub
push
inc
push
jl
stc
push
call
cmc
test
and
movs
add
stos
mov
push
or
add
mov
sbb
ins
and
or
add
shl
push
pinsrw
mov
pushf
mov
or
ins
nop
adc
out
xor
xchg
xchg
mov
xchg
and
dec
adc
push
cdq
dec
adc
cdq
xchg
and
xor
push
sbb
dec
push
cdq
adc
sbb
test
sbb
adc
sbb
xchg
les
out
jns
mov
sub
pop
xchg
test
mov
xor
cmps
scas
add
mov
ds
adc
je
cmp
call
ret
xchg
inc
ret
push
and
xchg
xchg
jbe
and
inc
stos
and
cwde
sbb
test
cmp
adc
xchg
out
sbb
add
in
sbb
fs
addr16
sub
or
cmp
jne
lock
test
cmp
and
sub
icebp
cmp
jnp
imul
add
outs
push
iret
es
test
test
push
sbb
push
cwde
into
xor
(bad)
das
xchg
out
ret
push
jo
sub
fadd
and
add
cli
mov
push
push
xor
mov
es
fstp
inc
jnp
adc
jns
mov
cs
sub
push
imul
cmp
in
dec
or
add
pop
xchg
mov
ds
cwde
aad
mov
pop
or
add
cmp
pop
push
mov
jle
push
loop
mov
sbb
not
out
xchg
aam
ja
stos
cvtps2pi
jle
push
nop
cmp
cmovno
pushf
(bad)
mov
rol
(bad)
std
dec
pusha
inc
dec
jle
inc
fwait
arpl
inc
sub
dec
mov
dec
imul
int3
out
inc
aaa
xchg
cmp
dec
mov
mov
xchg
fs
mov
nop
and
jl
mov
xchg
test
adc
pop
push
inc
push
sub
jl
js
xchg
lea
xchg
stos
push
push
pop
int3
jg
push
bound
and
ficomp
sub
popa
mov
mov
ja
iret
jne
sub
cmp
jns
mov
test
or
rol
lods
mov
aas
in
movs
adc
adc
test
rcl
add
sbb
int
pusha
mov
add
fwait
pop
cmps
test
mov
arpl
nop
pop
sbb
mov
test
sbb
iret
fwait
movs
inc
scas
js
es
inc
fmulp
and
mov
dec
je
mov
leave
dec
pop
int
mov
and
call
imul
popa
pop
push
or
xchg
xor
push
xchg
mov
and
cdq
push
or
adc
adc
stc
mov
cmp
scas
les
sbb
ret
mov
jne
push
aad
mul
add
test
pop
and
je
and
loope
dec
jl
enter
adc
sub
mov
das
sub
sub
adc
mul
and
jmp
push
xor
leave
jg
not
push
lea
and
and
and
xchg
daa
test
jno
add
ja
or
sub
and
movs
sbb
sub
es
lea
daa
in
dec
push
fmul
pushf
add
in
in
sbb
cdq
and
and
add
and
fstp
pushf
add
push
scas
jne
add
xchg
pop
add
xchg
pop
or
dec
scas
jbe
xchg
or
or
or
jne
xchg
mov
adc
push
enter
pop
add
adc
daa
cmp
dec
adc
add
adc
fsub
add
adc
fwait
outs
mov
pop
rol
sbb
stc
and
sbb
adc
or
inc
bnd
mov
in
adc
mov
sbb
mov
add
sbb
and
fcomp
iret
and
enter
and
pop
(bad)
jnp
sbb
sbb
pop
push
ror
mov
add
mov
jbe
popf
movs
cmp
and
rcl
ins
mov
and
jle
inc
mov
fstp
xor
and
adc
int
or
adc
leave
pop
adc
mov
mov
add
bound
sub
mov
ret
ds
push
cmp
fcom
push
xlat
mov
enter
pop
pop
test
mov
mov
shr
ret
fstp
test
(bad)
fld
cdq
aas
(bad)
or
inc
sbb
call
fmulp
sbb
cld
mov
push
add
call
adc
adc
add
out
push
jns
mov
adc
mov
or
adc
mov
(bad)
fstp
cmps
pop
cmp
pusha
dec
add
in
and
inc
or
in
fwait
add
movs
cmp
adc
mov
lods
test
outs
fisubr
dec
mov
mov
les
add
clc
mov
div
inc
fcomp
cmp
pop
cmp
jne
mov
pop
sar
mov
fadd
or
dec
and
cdq
mov
fild
sub
cmps
mov
adc
mov
outs
fwait
test
push
std
pop
and
adc
movs
icebp
popa
jge
movs
pusha
and
mov
call
movs
or
jbe
jl
add
cmp
cld
clc
inc
fcmovnu
inc
fs
or
fsubp
loopne
jge
jnp
aaa
push
xor
or
cmp
sub
idiv
mov
cmp
inc
and
cmp
packssdw
clc
fwait
jmp
sbb
out
push
sub
adc
cmps
fadd
sbb
pop
and
imul
jns
mov
ins
jb
add
add
cmps
sbb
inc
mov
(bad)
push
fldcw
je
adc
int3
(bad)
jg
rol
dec
(bad)
push
test
mov
sbb
(bad)
sub
les
or
sbb
dec
je
xlat
adc
xchg
mov
adc
aad
aad
mov
sbb
xchg
mov
cmp
dec
xor
aam
out
adc
add
aam
fwait
and
cmp
mov
arpl
bound
push
dec
push
lock
xor
inc
or
js
add
pop
add
cwde
or
pop
daa
aaa
call
loopne
std
push
(bad)
ficomp
pusha
add
dec
test
push
add
fidivr
jle
inc
pop
mov
sbb
or
popa
pushf
and
add
or
jo
xor
fadd
nop
and
mov
fadd
pushf
es
in
xor
pop
dec
rcr
xor
push
je
mov
and
call
push
sub
push
shl
imul
aam
test
int3
or
xor
dec
xchg
fimul
cwde
dec
punpcklwd
leave
xor
outs
pushf
pop
enter
pop
adc
fwait
jne
jge
fdiv
loopne
lea
retf
call
out
sahf
add
and
call
loopne
adc
adc
lds
sar
cmp
adc
std
call
push
sub
mov
dec
cmp
in
or
call
adc
in
clc
inc
add
daa
les
xor
div
dec
sbb
push
pop
sbb
push
mov
jl
xchg
adc
inc
sbb
cwde
ficomp
inc
xchg
cwde
call
mov
or
dec
sub
mov
shl
mov
xor
rcl
mov
scas
push
xor
int
scas
das
xor
leave
and
iret
int3
fsub
push
fsub
push
int3
popa
cmpps
push
in
xchg
xchg
mov
jne
scas
jno
and
lds
loopne
push
mov
or
(bad)
nop
retf
xor
and
inc
nop
and
mov
inc
inc
sub
push
(bad)
in
cmc
add
mov
js
ins
xor
mov
mov
jge
sbb
pop
xchg
xor
inc
sbb
fld
adc
mov
add
sub
dec
inc
jmp
cmp
cmp
sbb
je
xor
push
add
lea
lea
ror
xchg
inc
lock
mov
je
inc
pop
inc
movs
jmp
lea
loopne
in
push
ins
aam
sbb
pop
adc
(bad)
sar
push
test
es
int3
sub
push
lods
in
outs
(bad)
xor
das
push
sar
outs
sti
and
sbb
mov
mov
mov
(bad)
into
shl
out
xor
sbb
outs
mov
xchg
pop
mov
adc
outs
and
inc
pop
pop
sbb
push
or
cli
jmp
pop
es
push
sbb
cs
cwde
rcl
dec
or
jp
xor
ror
jne
std
dec
test
je
push
jmp
pop
push
add
cs
add
push
push
stc
mul
add
jo
aas
add
adc
inc
xchg
or
les
inc
cmp
shr
push
or
lea
push
push
push
add
push
adc
and
fistp
adc
es
add
outs
mov
test
cmp
jl
xlat
pop
xchg
imul
jecxz
call
sub
cmps
clc
fmul
hlt
add
jmp
mov
ret
les
and
push
inc
fistp
rol
mov
or
test
mov
push
test
fild
cld
adc
xor
xor
mov
xor
sub
push
push
or
(bad)
cmp
mov
and
push
jl
adc
sbb
out
inc
enter
mov
and
push
xchg
push
pop
push
retf
popa
add
adc
dec
jge
fadd
rol
(bad)
popf
lods
dec
jl
xchg
cmp
jecxz
cmp
add
(bad)
dec
neg
cmp
je
in
jl
mov
rcl
icebp
cmp
mov
movs
test
je
and
jb
and
and
test
pop
mov
sbb
cmp
push
std
test
jo
pushf
mov
es
ss
adc
add
sbb
push
and
or
and
push
sti
jne
jge
jae
(bad)
fld
inc
dec
aam
add
dec
inc
aam
cmp
pop
cmp
push
call
xlat
push
jmp
mov
ror
je
lea
adc
fiadd
repnz
or
push
std
cmp
out
or
imul
inc
ror
das
push
push
xor
pop
xor
sub
adc
and
sbb
and
xchg
cmp
je
pop
sbb
shl
fsub
jnp
or
xchg
or
shl
(bad)
imul
cmps
mov
adc
sbb
lds
cmp
mov
push
sahf
loope
es
add
adc
call
(bad)
xchg
push
lea
int
fs
sub
or
xor
repnz
xchg
hlt
or
je
push
mov
sbb
inc
call
sub
or
add
add
or
fld
pop
add
sub
dec
call
das
mov
add
cdq
cmp
and
int3
je
sbb
lock
sub
and
hlt
repnz
icebp
lds
mov
arpl
xor
jmp
cmp
xchg
movs
fs
jno
lods
mov
push
xchg
dec
sbb
inc
mov
xor
push
push
add
aas
hlt
sub
mov
jg
call
push
mov
shl
or
cld
(bad)
or
ins
push
mov
jo
mov
and
int3
add
lods
pop
xchg
out
iret
adc
and
inc
inc
or
sbb
in
dec
cwde
(bad)
cmp
dec
mov
push
ret
add
aas
add
mov
hlt
mov
cmp
push
push
pop
jae
jl
and
loopne
add
dec
lds
inc
adc
adc
adc
or
je
push
push
lea
add
sub
ins
dec
jmp
dec
mov
shl
js
mov
cmp
push
adc
adc
out
loop
dec
dec
add
or
fiadd
push
pop
sbb
enter
retf
mov
ret
sub
clc
sbb
push
and
push
xor
clc
popf
ins
xchg
(bad)
sar
pushf
dec
xchg
sub
xor
jne
inc
ficomp
add
mov
div
push
pop
cmp
or
mov
popa
inc
cmp
cmc
jbe
outs
and
test
out
or
adc
or
fnstsw
movzx
(bad)
sbb
gs
pop
push
add
imul
and
les
int3
mov
add
cmpxchg
push
outs
cmps
xchg
jmp
dec
in
inc
sti
jnp
iret
push
mov
jmp
mov
out
dec
mov
in
das
(bad)
in
jne
mov
aaa
jmp
push
pop
out
xor
out
jne
or
add
lods
es
adc
pushf
mov
mov
mov
xor
pop
fs
leave
mov
inc
pusha
add
cmp
sar
mov
ret
xchg
pop
or
and
cmp
and
cmp
and
mov
jge
(bad)
dec
sub
cmp
ja
pusha
sub
jmp
push
or
xor
add
inc
or
lods
xchg
hlt
sub
adc
sub
adc
das
dec
loopne
push
pop
inc
shr
mov
shl
sub
rcr
ror
adc
fiadd
cmps
push
aam
shl
push
or
jp
mov
in
or
call
int3
push
mov
and
retf
and
dec
mov
nop
mov
adc
test
fidiv
sub
div
in
push
or
or
call
rsqrtps
sub
hlt
push
or
mov
cld
outs
add
leave
or
mov
cmp
sbb
push
or
or
adc
enter
(bad)
je
pop
and
leave
inc
lds
push
in
pop
mov
or
dec
imul
sti
clc
mov
jmp
sbb
adc
push
sbb
fmul
jns
das
and
mov
sbb
and
pop
rcr
movzx
fstp
leave
cli
add
adc
cmps
mov
jmp
adc
nop
jbe
push
in
push
push
push
push
push
popa
sbb
loope
pop
pushf
sub
mov
mov
push
inc
add
pop
or
cmp
call
mov
add
fcomi
mov
cmp
pop
inc
mov
and
jmp
xor
add
mov
push
push
mov
cld
pop
jle
mov
jle
test
cwde
and
test
cmp
push
ret
mov
mov
add
pop
mov
addr16
neg
push
push
dec
or
adc
cmp
sub
dec
(bad)
shr
add
and
adc
call
rol
or
sbb
dec
cdq
loope
dec
adc
push
dec
sub
cmp
adc
loopne
adc
xor
add
or
dec
shl
adc
mov
aam
sbb
jbe
in
adc
push
enter
jo
add
mov
add
ret
and
les
leave
sub
and
rol
or
leave
adc
loop
rcr
add
inc
or
mov
mov
xchg
pop
xchg
push
adc
in
and
push
inc
pop
nop
and
je
arpl
mov
dec
sub
sbb
dec
movs
pop
mov
add
leave
nop
rcr
outs
cdq
mov
ja
dec
repz
pusha
fwait
add
dec
pop
leave
ret
push
movs
mov
or
xor
repnz
shl
stos
and
test
sbb
add
(bad)
sbb
xchg
nop
pop
cmp
mov
pop
popf
rcl
adc
add
add
js
sbb
and
and
cmp
pop
adc
add
dec
cmp
pop
imul
and
add
pop
mov
je
mov
rcl
cmp
add
jle
adc
sbb
cmp
mov
adc
add
inc
in
adc
call
or
and
outs
repz
xchg
das
fwait
mov
or
pop
add
dec
dec
dec
add
xor
inc
mov
pusha
repnz
add
push
xchg
add
or
inc
mov
add
call
rol
xchg
cmc
and
push
cmp
test
mov
jo
ss
xor
pusha
push
dec
pop
arpl
jecxz
or
jmp
adc
inc
jnp
cmp
cmp
ror
ja
pop
imul
(bad)
call
add
push
inc
inc
cmp
jb
out
clc
je
lods
dec
stos
clc
jo
retf
retf
mov
inc
pop
mov
inc
sub
sar
fisttp
inc
pop
push
or
push
add
std
and
mov
bound
lods
inc
and
(bad)
(bad)
mov
or
call
push
jno
adc
or
mov
xchg
clc
push
pop
das
adc
loope
mov
sbb
sbb
js
jl
pop
adc
or
cmc
push
add
dec
imul
push
adc
push
or
or
or
popa
data16
mov
or
call
cmp
loop
mov
push
add
not
les
sti
clc
ret
in
push
cld
push
loope
or
or
sbb
inc
inc
mov
jl
push
sub
ja
jne
addr16
add
mov
cmp
js
ins
mov
in
jo
lock
sbb
retf
cmp
add
movs
sub
(bad)
in
or
ds
dec
cmc
out
jnp
mov
cmp
test
movs
mov
or
adc
add
sbb
mov
rcl
adc
push
dec
(bad)
pop
inc
and
(bad)
or
sbb
jns
add
sub
push
mov
adc
mov
sub
adc
cmp
or
mov
and
or
je
or
xchg
icebp
fcom
rcr
or
add
cmc
inc
push
push
or
(bad)
push
or
les
mov
ss
rcl
cmp
jno
add
add
cmp
sbb
movs
(bad)
push
out
data16
sub
out
sbb
adc
mov
cmp
sar
outs
push
(bad)
aas
(bad)
cld
or
push
cmp
or
or
push
cmp
jne
push
pop
ss
fcmovb
inc
push
cmps
push
idiv
nop
shl
pop
jmp
adc
or
nop
or
xchg
out
xlat
sbb
es
call
lock
je
push
test
mov
add
xor
push
sub
ds
adc
inc
add
jmp
mov
jo
add
add
jno
mov
ss
sub
jmp
int
retf
scas
mov
xor
add
jae
mov
sub
test
jb
bound
jae
das
sub
ret
and
cwde
push
xchg
jmp
adc
push
add
cmp
rcl
xchg
shl
add
or
fist
outs
or
test
pusha
xlat
sub
mov
retf
push
xor
fld
das
push
je
xor
pop
scas
add
test
jbe
test
retf
pop
jecxz
jno
mov
mov
adc
push
out
or
mov
jnp
fisubr
cdq
sub
sub
popf
adc
mov
jmp
jl
or
xor
jle
iret
push
add
adc
ror
add
or
test
adc
push
inc
cmp
add
add
call
unpcklps
ret
jo
jns
shl
jnp
jge
(bad)
sub
xor
ins
pop
jmp
call
fnstenv
mov
lea
push
mov
or
adc
dec
cmp
push
shl
push
adc
xor
jbe
movs
(bad)
jp
pusha
sbb
(bad)
ss
sub
jmp
out
pop
xor
nop
xor
sbb
mov
add
lods
(bad)
pop
add
add
add
(bad)
push
push
mov
mov
dec
pop
shl
cmc
pop
adc
push
push
sbb
or
mov
ins
xor
dec
inc
test
movs
mov
xchg
scas
stos
adc
cmps
cdq
loopne
sbb
mov
fiadd
outs
add
sahf
push
dec
dec
and
add
mov
adc
lock
out
mov
lock
mov
xchg
lods
add
dec
xchg
je
cmp
push
loop
sbb
adc
test
xor
adc
movs
nop
jae
mul
add
sub
int3
sahf
and
aaa
sbb
test
sub
ret
jl
retf
or
and
add
ds
inc
bswap
xchg
add
imul
inc
mov
inc
int
and
aad
add
loope
and
push
xor
sub
jmp
je
sahf
shl
xchg
sahf
ror
stos
shl
ror
repnz
push
aam
adc
push
xor
mov
aas
shl
(bad)
dec
push
jmp
adc
loop
xchg
mov
pop
push
or
xchg
ror
jb
mov
mov
add
and
(bad)
or
or
add
and
iret
ret
push
ss
lock
cmp
rcr
jle
adc
jl
xor
mov
adc
cmc
adc
dec
add
adc
shl
push
int
add
sbb
or
outs
sbb
sbb
push
xor
pop
movs
lock
outs
sub
xor
lods
and
mov
sbb
sbb
push
and
or
and
mov
lds
cmp
shl
push
je
push
push
push
push
gs
pop
test
push
inc
call
add
aad
adc
cmps
push
es
add
mov
add
jecxz
sbb
daa
jmp
or
iret
inc
sub
imul
lahf
fdivr
push
out
sub
dec
loopne
push
dec
or
and
popa
mov
adc
pop
dec
or
icebp
loopne
mov
cmp
or
inc
cmp
cld
add
jbe
jmp
cmp
es
sahf
imul
js
outs
rol
mov
add
push
les
imul
pop
and
add
and
scas
add
add
add
pusha
add
sbb
xor
lahf
add
(bad)
call
adc
inc
cdq
jne
push
pop
mov
or
sti
aas
leave
inc
test
or
adc
mov
push
and
and
mov
jo
cwde
fsub
pop
push
lea
test
jbe
iret
jp
add
and
(bad)
js
mov
inc
shl
pop
or
and
jge
test
push
popa
les
in
mov
addr16
out
push
(bad)
test
push
adc
daa
jo
xchg
push
sub
sbb
lock
stos
jne
jbe
add
mov
shl
mov
js
add
jl
sbb
test
data16
mov
call
js
add
mov
lds
add
and
aam
xor
xor
cmp
je
into
jns
mov
xor
jne
pop
mov
loopne
or
add
inc
ficomp
push
out
ds
mov
or
cmp
cmp
cmp
pop
xor
add
xchg
push
repnz
or
pop
sub
adc
cmp
aam
ss
or
push
test
jle
(bad)
mov
add
sub
or
movs
push
je
inc
shl
pop
aam
xlat
call
mov
xchg
popf
cli
addr16
jns
mov
adc
and
popa
pop
sub
dec
lods
jb
inc
imul
movs
sub
adc
xchg
or
fadd
dec
retf
or
xor
aad
test
push
fucomip
xchg
adc
fiadd
or
add
jno
adc
lahf
push
jno
(bad)
push
pop
repnz
and
int
adc
mov
cmp
test
sbb
push
adc
inc
inc
jmp
inc
jmp
pop
and
fild
rol
in
jle
sub
sahf
sbb
xchg
int
lods
mov
xchg
or
xchg
sub
adc
xchg
xchg
cld
mov
add
or
mov
pusha
inc
call
xor
jae
or
push
sub
nop
scas
out
aad
or
and
cmp
nop
sbb
mov
jg
test
fadd
out
(bad)
ficomp
test
je
mov
jne
adc
add
test
call
add
cmp
mov
cmp
mov
adc
jne
xor
pop
ficom
mov
je
or
sbb
fcomp
stc
adc
cmp
cmc
jmp
and
std
lea
push
xor
push
test
pop
pop
fsubr
into
xlat
fild
and
in
push
movs
imul
or
aas
lea
jo
xlat
ret
push
mov
enter
mov
pop
and
leave
and
dec
(bad)
je
push
push
pop
or
jb
ins
call
sbb
cs
and
push
or
and
popa
jo
mov
cmp
cs
inc
add
push
push
inc
into
jmp
push
pop
add
xchg
adc
and
add
push
cli
jmp
pop
dec
dec
fisttp
jmp
sbb
ret
jge
adc
(bad)
xchg
sar
mov
int
push
retf
sub
push
sbb
and
push
arpl
shl
lods
xor
pop
aaa
jmp
pushf
mov
push
(bad)
out
jmp
xchg
or
jnp
and
push
adc
addr16
mov
jnp
push
inc
and
nop
sub
dec
out
rcr
jmp
bound
sar
xchg
inc
push
and
aas
jmp
inc
sub
mov
adc
pop
adc
pop
add
leave
pop
in
(bad)
ins
sub
cmp
add
jmp
xchg
mov
and
mov
stos
adc
dec
sub
push
xor
cwde
ins
fild
xchg
adc
jo
mov
pop
dec
or
sbb
add
in
add
xchg
arpl
scas
lock
mov
lahf
or
mov
test
ror
jg
fs
test
cli
mov
xchg
push
adc
inc
xor
jmp
movs
add
add
pop
fsubr
sub
addr16
adc
xor
sub
adc
jbe
push
pop
cmp
pop
push
adc
cdq
or
push
sub
dec
fmul
inc
adc
dec
int
xchg
add
xor
adc
inc
sub
pop
pop
cmp
jae
cmp
adc
add
mov
sbb
mov
xchg
ret
inc
fsub
ret
jmp
sub
lock
pop
push
sbb
push
mov
aam
inc
mov
std
ret
rcr
add
mov
adc
sar
inc
xchg
push
add
addr16
rcl
clc
pop
js
fisubr
sub
dec
icebp
xor
inc
push
or
loope
jmp
call
cmp
ret
sub
mov
icebp
jae
ret
sub
test
sbb
adc
add
leave
pop
xor
les
ja
adc
je
mov
adc
mov
fistp
sahf
ret
inc
cmp
jb
dec
dec
gs
push
mov
shr
sub
int3
ss
sub
sbb
in
and
outs
and
aaa
jp
mov
daa
mov
fisubr
sbb
and
bound
mov
adc
pop
push
jle
data16
sbb
add
add
push
cdq
sub
iret
hlt
mov
add
xchg
std
dec
sub
add
in
push
push
mov
int3
push
or
inc
adc
rcl
push
jbe
adc
adc
mov
loop
push
lea
movs
ja
cmps
aam
and
mov
movlps
pop
adc
jle
jae
outs
push
push
loopne
mov
inc
sbb
pop
or
sbb
pop
out
test
sti
add
add
fcmovne
cmp
iret
or
push
add
ret
jbe
jb
aam
pushw
mov
pusha
pop
ja
ror
adc
jmp
push
or
push
xor
cmc
psadbw
jmp
(bad)
push
pop
jp
push
cmp
or
cdq
icebp
xchg
sahf
adc
inc
lea
xor
pop
js
sub
fsubr
add
sbb
ror
stos
sbb
xchg
ins
test
xchg
jmp
xchg
dec
push
mov
je
lods
mov
retf
mov
sbb
sub
mov
sbb
add
and
nop
cmp
add
dec
(bad)
rcl
bound
adc
cs
rol
fnstenv
inc
push
pop
jne
imul
dec
sbb
sti
movs
movs
add
movs
and
xor
sub
cdq
and
adc
jmp
pop
cmps
or
jg
rcr
mul
mov
xchg
ins
dec
dec
or
xchg
clc
es
ficom
add
sbb
add
cdq
push
xor
enter
loop
repnz
leave
movs
(bad)
mov
not
(bad)
fidiv
or
ins
and
jp
jl
(bad)
dec
add
cmp
ret
cmp
lods
pop
test
add
stos
adc
ss
push
in
jbe
mov
add
xchg
mov
repnz
pop
jmp
mov
and
jmp
dec
in
test
fs
inc
sub
push
jmp
pop
pop
jmp
fwait
add
or
out
jb
xor
and
or
cmps
icebp
and
sub
test
cmp
inc
cmp
or
and
push
add
push
cmp
hlt
add
in
adc
inc
push
in
adc
adc
push
cmp
add
in
mov
nop
inc
push
in
sbb
test
in
add
js
push
sbb
sbb
dec
push
xor
in
add
and
push
cmp
add
in
and
pop
jb
and
sbb
hlt
and
dec
or
sbb
enter
or
nop
sub
mov
ja
xchg
sbb
inc
xor
sbb
sub
cmp
fmul
std
add
xor
sub
in
push
or
movs
cld
pop
jb
xor
enter
rol
shr
enter
ja
mov
dec
xchg
and
sub
push
or
inc
jb
das
mov
push
xchg
dec
sub
xchg
push
jno
dec
sub
mov
fadd
fidiv
xchg
or
push
dec
adc
add
je
push
cwde
sub
dec
inc
jge
push
mov
push
lock
add
push
lea
push
dec
or
push
pop
xchg
inc
push
aam
in
imul
cmps
pop
test
enter
add
push
clc
xchg
inc
and
punpcklbw
push
inc
shr
ins
mov
test
lahf
ffreep
and
(bad)
(bad)
add
xchg
mov
push
aas
mov
jns
sbb
sbb
mov
repz
dec
shl
ret
cmp
xlat
sbb
in
jge
gs
pop
mov
mov
adc
push
xchg
push
jbe
inc
fistp
xchg
jne
or
push
sub
adc
das
sub
jbe
mov
sub
sbb
fld
test
movs
xlat
test
push
cmp
cmp
and
fldpi
inc
pop
pushf
pusha
and
pop
adc
loop
test
fcmovnbe
(bad)
fadd
or
dec
dec
outs
adc
add
dec
test
in
push
int
push
sbb
inc
retf
or
lods
enter
or
lods
loopne
inc
jne
outs
adc
in
xor
andps
push
sub
cmp
es
add
daa
push
cmps
sbb
sub
fist
or
xchg
sbb
iret
cmp
push
and
mov
sub
sub
and
and
pop
clc
sub
sub
(bad)
cmp
dec
inc
pop
add
adc
fbld
adc
xchg
xor
add
cld
mov
cmp
call
inc
ror
bound
jbe
add
fcom
dec
mov
imul
test
fst
test
or
pop
cmp
add
jne
push
push
dec
adc
shl
mov
jmp
sub
nop
push
jmp
add
cwde
out
fwait
shl
mov
in
ror
mov
and
and
aas
fwait
ret
call
push
jns
push
jno
iret
pushf
push
cdq
fadd
cmp
lea
int
stc
test
jne
retf
and
fwait
idiv
sub
sub
adc
jnp
adc
jle
or
add
frstor
and
jb
or
sub
call
pop
jno
push
std
sub
cmp
add
xchg
mov
cmp
addr16
cmp
sub
jp
sbb
add
outs
mov
cmp
test
cmp
jmp
and
aad
aad
xor
cmp
aad
pop
add
addr16
aad
cmc
loopne
(bad)
xchg
inc
xchg
ror
es
or
fnstcw
jns
lahf
jmp
push
call
add
xchg
leave
dec
mov
into
pop
push
call
in
je
std
loopne
and
add
sub
or
pop
cwde
dec
mov
and
in
bnd
sbb
jo
adc
mov
clflush
(bad)
push
push
and
jno
xchg
jmp
cmp
add
popa
xchg
xor
fsub
jb
push
repnz
xchg
popa
xor
popa
les
push
bnd
aad
in
adc
in
adc
imul
aad
lods
push
jno
pop
out
aad
movs
push
rcr
aam
dec
leave
pop
mov
stos
mov
and
sbb
cmp
add
jo
pop
push
push
push
in
pop
push
mov
sub
dec
pop
push
add
js
push
sub
push
and
mov
std
and
sub
or
test
cmp
outs
iret
xor
jl
shl
push
jmp
pop
or
sti
push
add
cmp
xor
sbb
in
test
int3
adc
out
mov
add
bnd
cmp
adc
add
push
or
mov
(bad)
sub
inc
aam
mov
dec
mov
movs
(bad)
xor
inc
pop
dec
jg
pusha
inc
cmp
jne
push
jo
jb
add
je
rol
push
leave
push
xlat
pusha
cdq
test
popf
test
ja
cmp
js
cmp
jne
test
jge
jnp
sub
jae
mov
jg
pop
ret
mov
pop
add
xchg
cvtdq2ps
enter
stc
mov
popa
jb
sub
add
lahf
pushf
dec
ins
mov
dec
movsx
sub
ins
adc
out
jmp
add
in
xor
test
cmp
mov
repnz
test
lds
out
inc
xor
push
adc
add
cmp
pusha
add
or
cmp
dec
cmp
adc
cdq
cli
dec
jge
pop
xor
dec
jb
out
jo
sti
aad
mov
mov
jne
mov
xchg
xchg
add
mov
and
dec
je
dec
lock
fisttp
loopne
push
mov
inc
and
je
add
cmp
sbb
les
push
add
int3
add
loopne
xchg
cmp
bound
push
jo
add
pop
jmp
call
std
imul
inc
je
test
mov
out
cld
into
or
scas
add
mov
push
cmp
or
in
out
add
or
add
test
push
push
sbb
mov
or
outs
outs
lock
sub
adc
mov
pop
out
xchg
sbb
sti
or
xor
ja
pop
out
xor
sub
sub
shl
movs
push
adc
add
in
nop
mov
cdq
and
push
pop
scas
push
push
or
movs
or
push
add
inc
and
sub
mov
push
adc
or
xchg
pop
or
push
aaa
pop
call
sub
mov
jmp
js
nop
sub
out
fld
dec
add
sub
push
sbb
rcl
jge
push
jmp
bnd
popf
jp
loope
call
outs
or
cli
pop
mov
and
lock
clc
movsx
cmps
sti
jne
xor
or
pop
cmp
pmuludq
mov
sub
leave
add
rol
(bad)
popa
sbb
(bad)
jb
jmp
dec
test
fimul
fdivrp
xor
or
pop
lods
and
in
adc
or
es
js
and
push
ret
fcom
in
std
mov
sub
jmp
mov
(bad)
rcl
(bad)
pop
or
test
seta
adc
frstor
and
sbb
fild
call
clc
cdq
bound
call
les
lods
xchg
xchg
or
nop
mov
xchg
add
adc
mov
movs
adc
daa
pop
add
xchg
mov
rcr
lods
or
inc
push
jmp
pop
ret
xchg
push
cmp
movs
ss
mov
pop
daa
add
mov
je
pop
adc
(bad)
int
or
dec
repnz
cmps
pop
stc
jbe
adc
push
sbb
jle
xor
jmp
sub
test
add
and
mov
or
or
inc
xor
dec
psubusb
cmp
stc
ins
or
jecxz
pop
pop
mov
xchg
ficom
push
and
or
rol
movs
and
cmp
lea
pop
sub
(bad)
cmps
jl
and
fcomip
jnp
call
dec
out
call
test
jne
fdiv
sub
lock
je
jns
test
repz
xor
or
fld
mov
xchg
nop
jne
(bad)
movs
inc
movs
jecxz
repz
movs
xchg
cmp
push
repnz
or
hlt
add
dec
push
push
ss
push
xor
lds
stc
pop
sub
mov
pop
les
add
sub
hlt
xchg
sbb
enter
sti
ss
xchg
out
or
(bad)
mov
pop
inc
push
test
inc
cmp
jle
sub
int
fucomi
dec
test
xchg
sbb
jne
pop
mov
cli
mov
cmp
jmp
adc
jne
push
sub
ins
js
sub
ret
sub
or
and
jmp
push
xchg
or
jmp
je
pushf
pop
jmp
add
rol
or
cmp
sub
add
ror
dec
mov
sbb
imul
add
dec
push
into
dec
sub
iret
or
arpl
or
je
xchg
adc
std
arpl
push
xor
movs
jl
cld
add
(bad)
test
bswap
lock
ins
jmp
out
mov
sbb
test
and
push
sbb
sbb
sub
mov
cmp
je
xor
inc
ficom
enter
mov
adc
xchg
jmp
or
mov
pusha
push
mov
adc
inc
jmp
and
add
dec
add
dec
add
add
not
test
clc
xchg
mov
xlat
adc
and
mov
pop
retf
loop
int
ss
sub
pop
adc
mov
fmul
rol
inc
aam
and
or
sub
mov
add
cmp
jae
sahf
fldcw
pushf
ret
jmp
cwde
cmp
jns
mov
jne
push
push
nop
fistp
hlt
pop
pop
jmp
pop
enter
xchg
mov
int3
retf
js
or
inc
jg
cmp
inc
mov
fs
(bad)
les
mov
imul
push
add
push
enter
add
push
hlt
and
xor
sbb
and
cwde
xor
int3
pop
jg
repnz
lea
int3
xor
jl
sub
adc
movs
xchg
xchg
dec
mov
(bad)
iret
movs
sub
add
test
add
pop
and
loop
call
cmp
and
jo
call
cmp
add
push
dec
je
inc
les
imul
push
fcom
jbe
je
icebp
jmp
add
lock
fxch
test
cmp
xor
imul
adc
test
sbb
push
cmp
adc
push
arpl
adc
sbb
and
mov
adc
pop
or
stos
and
add
pop
gs
mov
push
push
lods
inc
xor
cmp
jb
inc
inc
xor
jg
cli
or
push
or
inc
adc
daa
sub
sub
dec
xor
mov
push
fsub
add
shl
(bad)
mov
js
inc
mov
xchg
sbb
jae
test
jg
aad
mov
bnd
aad
or
shl
retf
test
rcr
adc
sbb
cmp
mov
cmp
mov
dec
sbb
movs
or
sahf
in
stos
and
push
sub
fwait
aam
xchg
cmp
outs
add
push
test
and
hlt
ja
rol
lds
add
push
and
and
ret
mov
fsubr
pushf
inc
or
adc
add
int3
sbb
push
and
adc
lock
test
dec
or
sbb
js
js
sbb
and
ror
mov
push
mov
hlt
ret
sub
icebp
je
ret
add
or
sbb
cli
pop
repz
jbe
in
out
outs
jmp
push
add
add
dec
sti
dec
or
inc
adc
or
mov
arpl
sub
inc
and
add
add
adc
pop
jle
je
dec
mov
or
out
or
or
or
and
rol
pop
add
and
enter
xor
into
repnz
xchg
cmp
into
rol
push
je
adc
add
adc
shl
bound
jecxz
nop
cdq
icebp
push
sbb
jg
push
daa
(bad)
or
and
push
stos
scas
rol
dec
cmps
xchg
pop
aad
das
push
jo
xor
xor
dec
adc
or
mov
cmps
mov
sub
unpcklps
dec
or
mov
movs
xor
aam
movs
mov
fistp
and
sbb
xchg
mov
or
jmp
sub
dec
cmp
(bad)
daa
inc
dec
cmp
lea
cmp
jae
inc
xchg
jmp
xor
nop
add
cwde
enter
add
xchg
xor
and
sbb
jne
std
push
inc
cmps
jp
add
js
(bad)
and
add
or
stc
lods
add
inc
scas
or
cdq
fmul
mov
pop
or
push
leave
movs
jge
cmps
rol
mov
sbb
dec
cmp
jg
and
adc
mov
jns
or
mov
cmp
cmp
nop
push
add
xor
int
push
xchg
dec
push
repnz
pushf
cmp
test
push
dec
mov
in
cmp
cmp
jno
sbb
retf
push
sbb
pop
js
outs
push
(bad)
cld
(bad)
adc
mov
movs
aaa
dec
or
movs
xchg
arpl
mov
mov
(bad)
xchg
frstor
add
sti
xchg
mov
repz
mov
and
mov
sar
pop
push
jmp
adc
jbe
mov
popa
inc
sbb
xor
je
pop
adc
pusha
push
xchg
test
lods
add
int3
inc
imul
or
add
and
shl
xor
jne
sub
push
movs
xlat
pop
mov
shl
loopne
in
(bad)
outs
push
pop
movs
pop
add
mov
mov
mov
xchg
jns
add
and
in
pop
loope
int3
aad
lds
repnz
int
mov
(bad)
jp
inc
(bad)
xor
sbb
cld
inc
sub
add
cmp
pop
mov
lds
push
add
stos
enter
adc
leave
or
sti
or
push
fcomp
inc
test
and
cmp
je
push
mov
adc
aas
ss
push
inc
fdiv
push
mov
mov
pop
int3
jno
add
dec
add
jno
(bad)
adc
or
les
mov
sub
push
push
cmp
add
stos
movs
sbb
sbb
int
pushf
int
cmps
rcl
jl
imul
test
inc
jb
mul
cmp
add
pop
and
jmp
add
jo
leave
out
repz
add
mov
inc
dec
icebp
mov
inc
in
push
retf
fucomp
jae
scas
leave
shl
cdq
jecxz
xor
ret
cmp
or
into
gs
ds
call
push
sbb
sbb
xchg
jl
adc
test
sub
test
push
lahf
add
push
in
ret
and
cdq
push
sub
adc
dec
mov
dec
movs
std
retf
aas
add
inc
cmp
rcl
add
mov
cmp
lods
push
push
sti
retf
pop
add
or
add
cmp
sbb
adc
mov
arpl
mov
test
rcl
sti
cmp
or
xchg
clc
jns
mov
cmp
adc
xor
jl
jge
sbb
fs
hlt
sub
add
gs
adc
add
mov
test
push
retf
clc
jno
mov
jo
and
aaa
loop
or
jl
cmp
and
addr16
cld
xor
jle
sbb
mov
into
push
dec
pop
xchg
mov
aaa
add
fist
dec
push
daa
pop
(bad)
sbb
jno
ror
lods
cld
mov
push
push
push
adc
add
movs
adc
clc
pop
hlt
inc
ror
nop/reserved
add
add
mov
and
(bad)
test
and
gs
out
sbb
and
dec
ja
push
or
test
in
mov
adc
test
adc
xor
adc
sbb
rcl
mov
and
test
or
movs
fisttp
cmps
xchg
aaa
pop
adc
adc
add
adc
and
int3
ins
aas
and
adc
pop
mov
js
arpl
daa
in
and
inc
lea
hlt
lock
movs
mov
jnp
jae
inc
dec
loopne
adc
sbb
push
(bad)
jne
imul
pushf
pop
mov
rol
clc
xor
xchg
jmp
push
pop
hlt
xor
mov
push
loopne
cmp
add
jmp
inc
sbb
cmp
nop
adc
add
retf
xor
setne
test
pop
or
push
inc
pop
into
jp
je
pop
popf
popa
lea
lea
mov
test
je
shl
or
call
and
mov
addr16
movs
add
xor
je
jmp
aad
dec
xchg
push
jbe
(bad)
inc
inc
pop
idiv
mov
int
push
sar
(bad)
ret
(bad)
retf
lea
add
sub
jmp
mov
cmp
push
retf
ins
jmp
push
sbb
das
and
adc
out
aam
pop
jp
and
fidiv
sub
adc
jp
jb
popa
cmp
mov
and
add
add
inc
hlt
leave
add
rcr
adc
sahf
xchg
jne
mov
sub
xchg
add
mov
imul
pop
sub
sbb
popf
jge
xor
iret
inc
adc
sar
cmp
fadd
and
bound
pop
pcmpgtb
adc
inc
imul
add
mov
(bad)
jno
call
fs
fldcw
in
dec
sub
cdq
push
push
test
imul
in
retf
sbb
aas
ret
cmp
ret
pushf
imul
push
sub
push
sbb
dec
pop
xchg
push
fcomp
xor
cmc
jmp
push
and
xchg
imul
mov
std
fstp
sub
dec
cmps
sahf
pop
(bad)
push
retf
pop
inc
and
test
mov
push
push
dec
inc
mov
mov
enter
sub
(bad)
mov
inc
sbb
je
mov
loope
and
sar
pop
dec
cmp
push
pop
jne
(bad)
fnsave
iret
jne
sbb
je
cmp
je
cmp
inc
cmp
je
dec
loop
cld
cmp
je
cmp
xor
je
test
pop
enter
daa
cmp
je
add
pop
cmp
and
jnp
cmp
xchg
ja
jge
inc
add
je
and
adc
dec
xchg
das
jne
cbw
mov
mov
addr16
and
or
lds
fadd
outs
stos
add
push
xor
mov
add
mov
iret
loopne
pop
mov
add
or
inc
sbb
jl
stc
sub
enter
call
inc
out
jmp
and
adc
and
dec
add
stc
or
fisttp
nop
xchg
add
popa
ss
fwait
cmp
adc
(bad)
int3
dec
mov
jbe
scas
cld
lods
mov
lock
xchg
ret
shr
test
repnz
cmp
fld
sbb
pop
iret
loopne
mov
jg
mov
test
iret
jmp
fisubr
rol
add
and
call
mov
or
gs
emms
and
not
jne
xchg
lods
pop
or
xchg
test
or
stos
inc
ror
adc
jnp
push
inc
shl
push
aad
cmp
push
xor
and
push
int
mov
push
movs
xor
jp
or
jge
call
jbe
clc
inc
test
jmp
sbb
stc
mov
nop
lds
sub
fs
xor
jo
aas
and
jne
imul
add
push
sbb
imul
(bad)
pop
shl
cmp
aam
jmp
into
por
mov
lock
jno
push
sub
add
xchg
xchg
or
xor
js
leave
in
je
loopne
das
pop
jp
xor
(bad)
jae
pusha
(bad)
loope
jecxz
aaa
xchg
in
add
cmp
sub
cmps
push
in
(bad)
pop
add
lea
retf
push
sbb
jmp
pop
repnz
in
rcl
push
or
push
fsubrp
outs
add
xchg
js
cdq
xchg
les
mov
sub
test
inc
rol
fisubr
inc
xchg
in
popa
add
rcl
add
inc
movaps
mov
mov
jecxz
xchg
xor
rol
(bad)
or
xchg
lea
outs
ret
and
mov
fcomp
std
sbb
int3
movs
mov
iret
rcl
add
and
mov
xor
inc
cs
jne
add
lock
inc
push
in
or
and
in
adc
enter
rcr
lods
push
push
jae
adc
mov
imul
sub
mov
mov
push
int3
push
add
mov
pop
add
push
sub
sub
dec
shl
mov
leave
xor
lods
or
outs
outs
inc
test
push
lds
xchg
movs
movs
leave
in
sahf
test
mov
pushf
add
mov
xchg
pop
fild
mov
stc
sub
adc
and
inc
xor
jb
loopne
add
in
xor
xor
pusha
xchg
inc
test
add
mov
add
loope
push
push
(bad)
inc
fiadd
push
mov
or
jl
ret
sbb
sbb
outs
add
mov
push
outs
add
cmp
jne
jo
push
sub
or
ret
add
sbb
sub
push
retf
icebp
sti
cld
jp
mov
movs
daa
sub
mov
jno
or
and
test
hlt
dec
jo
shl
push
call
add
add
add
add
mov
xchg
sub
add
pcmpgtb
lahf
add
pop
dec
test
(bad)
std
sbb
retf
mov
sbb
stc
and
fsub
xlat
sbb
add
fbld
in
inc
icebp
test
add
stos
dec
mov
push
mov
test
sub
xor
pusha
xchg
push
inc
add
adc
pop
pop
mov
hlt
jae
xchg
mov
fsqrt
push
imul
jle
sub
retf
stos
push
shr
xchg
stos
js
pop
inc
mov
pusha
retf
push
cdq
mov
ins
mov
cmp
push
mov
inc
mov
cli
popa
lea
add
xor
aam
xchg
aaa
outs
sbb
adc
pop
or
and
pop
sbb
les
add
cmps
inc
les
les
lea
loop
jmp
mov
jb
jge
add
ins
mov
mov
loopne
sub
xor
pop
retf
loop
jns
xchg
repnz
adc
jg
mov
mov
xchg
fnstenv
mov
jae
loop
jl
cmc
xlat
dec
sub
adc
sbb
leave
int
mov
call
mov
sub
mov
mov
pinsrw
xchg
mov
adc
cs
and
out
pusha
mov
xor
gs
add
add
jp
(bad)
pop
loope
xchg
cmp
jae
xchg
and
add
int3
inc
inc
push
int
xor
fdiv
sub
xchg
xchg
mov
adc
fist
jae
rcl
rsqrtps
and
and
adc
mov
add
es
push
mov
pop
xor
cmp
sbb
lea
mov
rcr
mov
cmp
dec
int
ret
inc
(bad)
mov
adc
cmp
xor
imul
ins
add
arpl
lds
xchg
add
add
loope
and
pop
push
jns
dec
or
inc
cbw
clc
jne
pop
sub
cmp
jne
loope
or
je
popf
mov
das
or
and
cmp
jg
xor
and
in
cmps
std
and
cmp
icebp
push
pop
cmp
jae
loope
pop
shl
and
add
jno
push
mov
push
and
push
mov
sbb
loopne
mov
or
jmp
mov
pop
xchg
adc
xor
push
and
adc
pusha
jb
pop
or
adc
js
jnp
lea
and
leave
gs
call
jmp
cmp
jnp
(bad)
mov
icebp
push
cs
push
es
cmp
inc
push
xchg
test
push
jbe
fwait
or
test
or
jne
add
adc
(bad)
addr16
jmp
cdq
iret
fs
or
pop
adc
js
and
add
aas
adc
cdq
adc
push
sub
inc
cmp
int
sbb
cld
pop
dec
leave
mov
aad
aad
push
enter
out
aad
leave
xchg
pop
sub
adc
cmps
ret
sub
and
or
add
cmp
nop
xchg
and
jno
sub
lods
jns
mov
and
stos
(bad)
pop
xchg
inc
sub
adc
popf
jne
sub
cs
es
mov
jge
(bad)
or
enter
ins
div
mov
repnz
push
mov
mov
pop
cmp
popf
inc
lods
add
aaa
and
and
ds
ret
push
sahf
mov
pop
loope
mov
fwait
mov
ret
push
fistp
sbb
jmp
cmps
aas
js
loop
adc
mov
fs
cwde
pop
dec
sub
sbb
jmp
sub
cmc
inc
xchg
mov
test
adc
out
ret
bound
das
fwait
adc
fmul
add
and
add
xchg
cmp
int3
popa
test
cdq
or
ret
pop
add
and
test
xchg
bswap
leave
xor
lock
lea
adc
sbb
pop
in
pushf
sbb
stos
pushf
movs
pushf
ss
repnz
add
add
mov
add
cmp
imul
and
jmp
jnp
loopne
push
mov
in
mov
add
jle
jecxz
pop
icebp
and
push
out
cmc
push
arpl
ror
and
shl
xchg
dec
lods
fstp
jne
mov
cmp
imul
mov
ret
test
je
(bad)
cmps
dec
adc
and
jmp
repnz
popa
xor
loopne
add
dec
cld
sbb
inc
and
jbe
xor
sub
xor
aaa
xor
mov
daa
cmp
int
xor
lock
xor
pop
sub
pop
pop
retf
xchg
pusha
push
adc
inc
or
cwde
sbb
jge
push
xchg
outs
mov
or
sub
das
lock
in
dec
sub
ror
pop
stos
mov
sub
xlat
into
adc
outs
push
xcrypt-ecb
cmps
int3
lods
test
jmp
add
xor
or
or
js
or
popf
stos
inc
test
push
call
stos
fild
add
push
or
jbe
add
in
inc
dec
jne
stos
rcl
mov
aaa
jnp
fsubr
rcl
mov
cmp
pop
push
mov
xor
push
rcpps
dec
test
inc
in
add
stos
cmp
mov
aam
pusha
adc
ficom
and
test
inc
fabs
in
pushf
xor
jge
jge
inc
enter
leave
add
(bad)
(bad)
xchg
add
inc
in
les
sub
push
jnp
loopne
nop
pop
adc
fsub
adc
lahf
push
and
test
mov
adc
xchg
sbb
inc
mov
mov
mov
call
and
adc
push
loope
loop
(bad)
stos
test
jg
repz
jmp
mov
cmc
xchg
adc
xor
xchg
mov
xor
add
leave
hlt
int
ds
loop
inc
jne
shl
xor
(bad)
cmps
sbb
cld
sub
add
push
xlat
push
mov
inc
inc
call
push
or
gs
xchg
add
out
dec
enter
push
adc
sub
mov
cli
add
inc
and
xor
sbb
in
imul
or
in
or
mov
dec
mov
fimul
pop
add
aaa
jns
sti
rol
push
cmp
test
loope
sbb
js
inc
sbb
add
add
enter
leave
inc
test
mov
jp
inc
add
dec
xchg
xchg
pusha
dec
pop
adc
sbb
loope
add
push
stos
pop
xchg
enter
rcl
mov
loopne
mov
pusha
les
adc
cmp
adc
adc
inc
add
jnp
push
or
mov
(bad)
jecxz
pop
lock
jle
ret
pop
pop
jno
outs
call
(bad)
xchg
add
(bad)
nop
sbb
mov
fsub
imul
push
inc
jnp
(bad)
sar
repz
call
ins
pusha
pop
add
xor
sbb
add
xor
add
pop
mov
adc
or
push
add
push
sub
aad
pop
add
add
mov
inc
mov
jmp
mov
test
mov
sbb
imul
push
sub
leave
or
add
ja
(bad)
fcom
out
aad
adc
cmp
int
aas
arpl
jne
inc
xchg
and
stos
add
mov
pusha
callw
dec
adc
add
js
inc
add
xchg
outs
add
out
inc
sbb
rol
cld
and
or
push
inc
into
push
and
stos
mov
repnz
pop
sbb
shl
xchg
aad
in
pop
dec
add
and
dec
ss
mov
pop
and
jmp
(bad)
in
and
sbb
in
push
mov
mov
add
add
and
dec
test
adc
cs
fst
verw
add
inc
sub
inc
pop
das
loopne
or
and
inc
pop
test
pop
push
or
or
jne
inc
jmp
lock
addr16
add
test
inc
dec
adc
xchg
pop
jle
movzx
je
mov
jmp
or
jge
pop
pop
or
fs
loope
add
pop
push
cmp
(bad)
test
jge
xchg
push
sub
add
ror
fs
adc
lods
cld
aad
inc
(bad)
and
into
push
push
or
test
dec
test
call
mov
loopne
shr
lock
jns
das
adc
or
push
in
dec
and
popa
jge
dec
bound
pop
repnz
inc
jbe
jecxz
pop
push
mov
or
shl
push
loopne
sbb
or
jo
popa
or
or
movs
lods
inc
pop
test
leave
pop
cmp
add
nop
pop
into
pop
pop
outs
pop
sbb
jbe
inc
cmp
xchg
ss
dec
cli
call
in
add
ss
je
sub
lock
(bad)
aaa
cmp
loope
test
sbb
xchg
inc
push
dec
ret
aas
loopne
mov
mov
jb
imul
mov
mov
sbb
loopne
mov
adc
lds
jb
push
cwde
rcl
and
push
and
dec
lods
push
add
sub
int3
xchg
in
xor
sub
xchg
inc
add
and
arpl
and
shr
lock
sbb
inc
xchg
xor
dec
enter
enter
lgdtd
out
aad
aad
aad
add
loop
mov
push
out
lar
popa
or
pop
pop
inc
sub
xchg
sbb
push
outs
and
or
aas
jle
ret
fs
add
cld
lea
pushf
xchg
jns
add
mov
leave
in
dec
pop
xlat
inc
push
mov
hlt
cld
test
or
daa
out
cld
sub
sahf
sbb
mov
jbe
(bad)
jmp
dec
cld
mov
mov
and
inc
in
push
enter
mov
or
xchg
or
and
lea
pop
and
icebp
loopne
sbb
mov
xchg
loop
hlt
and
push
cdq
imul
jmp
xchg
add
arpl
cmps
add
xchg
add
xor
(bad)
bound
in
inc
push
cmp
popa
into
pop
cwde
pop
aas
sub
xor
not
add
pop
pop
add
jge
dec
cmps
push
test
xchg
mov
fcom
xor
adc
dec
sub
xchg
push
nop
adc
adc
adc
arpl
or
aad
xchg
xor
sbb
ja
cmp
fisttp
xor
add
xor
(bad)
or
or
lods
fist
xchg
scas
out
xchg
les
add
mov
cmps
arpl
dec
scas
jmp
cmp
inc
xor
jne
jns
push
sub
inc
in
jl
or
add
enter
retf
std
cmp
jle
push
leave
js
cmp
sbb
lea
dec
jp
jb
test
in
and
daa
jle
dec
outs
jmp
jne
call
enter
loopne
push
in
mov
movs
retf
cwde
adc
push
and
mov
arpl
icebp
sub
xor
push
lock
add
inc
lock
(bad)
iret
cmp
and
mov
loopne
sti
mov
clc
add
sub
sub
(bad)
jmp
add
and
push
stc
sbb
ds
pop
and
mov
inc
lock
jo
(bad)
dec
and
add
and
dec
ror
or
jge
cmp
(bad)
mov
mov
popa
jge
mov
add
pop
neg
add
nop
xor
les
xchg
push
mov
ret
ins
and
ins
pop
ins
inc
pop
sub
test
dec
mov
sbb
sbb
sub
xchg
dec
popa
jmp
inc
pop
enter
sbb
mov
js
cmp
xchg
not
ds
inc
sbb
add
lahf
push
jmp
add
or
dec
jge
retf
jb
mov
cmp
scas
mov
sbb
or
ret
(bad)
jmp
jmp
add
(bad)
mov
pop
loop
call
int3
mov
pushf
fdiv
fcomp
in
lock
mov
call
loope
dec
test
mov
cs
and
or
dec
push
fs
or
or
and
adc
stos
pusha
xchg
fwait
xchg
xchg
lock
mov
adc
sbb
in
ret
push
add
lock
pusha
inc
push
inc
or
pushf
out
fs
dec
add
or
loope
pop
int3
jb
dec
enter
jb
and
inc
sub
or
(bad)
push
mov
jmp
sbb
push
data16
inc
imul
lods
or
push
(bad)
pop
inc
dec
leave
test
icebp
push
xor
xchg
pop
push
xchg
sub
mov
cmp
pushf
jg
test
lea
sbb
xchg
jae
ds
and
dec
push
ins
loope
adc
dec
sbb
test
add
fnsave
imul
push
push
inc
add
inc
into
cmps
(bad)
adc
jne
test
ds
sbb
jnp
out
add
sub
mov
dec
mov
add
and
test
push
pusha
sub
dec
pushf
cmp
add
add
lods
pop
out
inc
ret
movhps
pop
inc
test
xor
cmp
scas
add
test
les
sub
jmp
fs
cmps
popf
add
push
xor
and
test
enter
pop
cli
push
(bad)
hlt
push
mov
ss
enter
push
mov
inc
push
shl
ret
and
xchg
cmc
mov
xor
test
jne
mov
mov
enter
push
add
shl
xor
xor
mov
in
or
cmp
jbe
sub
mov
aad
adc
add
jne
or
pop
push
fiadd
pop
pop
loop
mov
fbstp
xchg
xor
push
push
add
mov
sti
or
sbb
std
sub
test
push
xchg
cmp
or
and
mov
add
pop
pop
mov
push
jmp
push
mov
push
mov
pop
idiv
shl
mov
pop
add
cmp
lods
jns
fs
push
cmp
jp
adc
jb
jge
(bad)
movs
jle
xchg
mov
mov
test
sub
mov
xlat
ror
ins
add
pop
push
pop
fcmovnb
shl
rcl
jmp
push
push
in
lock
pop
add
dec
lods
in
movs
aam
mov
lahf
lods
push
dec
repnz
jle
cmp
push
push
repnz
rcr
mov
cmp
pusha
pop
or
jge
add
pop
dec
outs
cmp
lds
inc
push
or
or
cmp
not
xchg
pop
add
cs
cdq
mov
out
retf
in
push
mov
sbb
sub
inc
(bad)
in
xchg
xor
push
out
sbb
lock
adc
test
pop
test
inc
sub
push
inc
mov
xor
jnp
sti
aad
lods
cdq
sbb
sub
sub
or
mov
or
xchg
jl
pop
cli
mov
cmp
mov
cld
push
push
add
and
jle
mov
dec
pusha
hlt
or
jecxz
stc
es
sub
xchg
pop
ror
das
ret
loopne
and
push
add
cmp
jl
mov
xchg
(bad)
add
push
xor
mov
nop
call
clc
xor
mov
mov
xor
mov
inc
out
add
sbb
mov
iret
sbb
xor
hlt
pop
into
inc
ret
cmp
arpl
mov
cli
sub
jg
add
and
sbb
or
mov
ror
sbb
pop
mov
iret
mov
(bad)
mov
push
mov
cmp
ja
adc
jb
mov
jmp
mov
shl
push
push
test
fwait
cmp
sub
or
rcr
add
and
mov
and
les
pop
mov
inc
sti
fsubr
mov
sub
sbb
push
inc
xor
jmp
retf
and
mov
xor
jle
and
cmp
pop
pop
enter
cld
add
outs
in
enter
mov
aad
jns
cmps
out
aad
dec
test
add
daa
push
pop
sti
cmps
add
push
pusha
test
or
ss
mov
jb
je
xor
push
add
add
sub
je
out
int3
in
adc
push
sub
test
dec
push
ret
ror
int
add
stc
or
and
pop
cli
in
add
dec
push
mov
in
stos
addr16
pop
imul
stos
push
scas
rcr
jmp
mov
ror
inc
add
xchg
(bad)
push
int3
jns
outs
dec
push
test
add
push
rcr
xchg
nop
retf
daa
xchg
out
dec
js
cmp
in
inc
or
add
inc
inc
sbb
or
add
push
scas
in
cmp
popf
or
int3
add
inc
or
hlt
ins
gs
lea
inc
pushf
push
out
and
inc
push
add
push
mov
dec
sub
jg
iret
or
adc
pop
shr
sbb
mov
stos
pop
test
aas
or
in
cli
jne
jecxz
loopne
daa
out
outs
mov
push
cmp
xor
cmps
add
pop
sbb
repz
les
mov
mov
jne
enter
and
mov
out
mov
test
sub
add
stc
adc
xchg
in
jmp
sub
sub
fadd
or
cmps
pop
(bad)
std
jne
loopne
fisttp
adc
sub
(bad)
paddsb
test
jo
outs
lds
arpl
ficom
cli
add
test
mov
cmp
or
outs
pop
dec
inc
jl
and
inc
lds
(bad)
(bad)
adc
mov
cmp
jmp
dec
or
mov
pop
lock
je
or
push
pop
pop
mov
ror
lock
push
jns
jae
mov
cmp
inc
pop
pop
mov
inc
push
out
sub
mov
or
push
push
bound
adc
add
mov
sbb
dec
sete
inc
inc
sub
mov
in
mov
push
cld
cmp
jb
inc
mov
mov
lock
dec
ret
or
mov
mov
adc
pop
push
js
and
sbb
mov
je
loop
or
inc
scas
cwde
adc
or
dec
adc
in
add
clc
add
shl
push
cmp
je
mov
loopne
leave
cmps
test
push
xchg
push
push
push
push
outs
and
pop
jge
mov
pand
les
ret
adc
mov
add
sbb
sbb
imul
(bad)
xor
pop
push
or
cmp
jne
dec
mov
mov
sub
pop
mov
icebp
xor
(bad)
jmp
mul
and
mov
loopne
call
jecxz
xchg
push
cmc
shl
sub
adc
push
test
push
lea
rep
mov
dec
cmps
jge
sbb
jne
xchg
or
jl
cmp
and
aas
mov
xor
imul
jno
shl
mov
mov
mov
cmp
pop
dec
sahf
int
ins
push
addr16
enter
fs
fistp
aaa
pop
push
imul
inc
mov
dec
jmp
pop
movs
sub
ins
pop
sbb
pushf
push
xchg
sbb
(bad)
jmp
cmp
shl
loopne
inc
fadd
xlat
in
jle
retf
cmc
sub
and
dec
jl
mov
cmps
or
sbb
fdiv
fiadd
mov
pop
or
mov
fadd
mov
jp
(bad)
and
or
cmp
outs
or
pop
add
in
adc
xchg
xchg
pop
dec
pop
mov
add
lods
aad
sbb
adc
adc
sub
mov
mov
fcmove
pop
je
cdq
adc
or
rcl
lea
adc
mov
lock
imul
fadd
pusha
retf
jp
mov
les
popf
ja
xchg
arpl
xor
inc
out
mov
sub
xor
loopne
ds
xor
push
arpl
test
sbb
bound
jne
mov
jg
push
pop
add
test
dec
ret
inc
call
pop
and
sahf
enter
ins
push
sub
jg
cmp
pusha
pusha
and
enter
(bad)
push
cmp
add
push
push
mov
and
inc
xchg
icebp
xor
and
push
je
adc
cmps
or
push
adc
mov
cmp
mov
sbb
es
aam
inc
add
xchg
fiadd
pop
add
inc
fistp
out
sbb
pop
mov
(bad)
dec
cli
cld
lea
push
rol
push
test
daa
sub
or
xor
icebp
mov
add
stos
mov
and
sbb
pop
sub
mov
push
mov
mov
pop
pushf
sub
jb
mov
ret
pop
mov
push
iret
shl
les
adc
jbe
loopne
and
cs
dec
sub
xor
(bad)
dec
sub
test
or
jbe
pop
jb
or
test
(bad)
xchg
jo
mov
or
lock
adc
adc
or
add
or
in
cs
sbb
dec
push
repz
cmps
outs
ins
push
inc
leave
mov
aas
jne
xchg
or
nop
or
out
in
pop
xchg
loopne
cdq
dec
xchg
mov
jbe
in
jg
cmp
add
iret
lahf
mov
ins
ds
cs
dec
xor
scas
test
inc
sbb
inc
in
test
xchg
leave
cmp
pop
cwde
add
stos
inc
in
add
or
mov
movups
mov
sbb
xchg
jno
pop
xchg
imul
into
xchg
or
mov
xor
lods
inc
pop
inc
adc
ins
movs
push
or
inc
sbb
pop
xchg
aas
loop
dec
loopne
and
mov
(bad)
je
dec
sub
inc
push
jno
or
sub
jne
push
aam
ins
push
xchg
or
or
fsubr
push
add
call
or
sub
dec
pop
xor
sub
dec
test
cli
sub
daa
mov
sbb
ret
je
ja
sbb
jmp
int3
pop
jne
dec
dec
pusha
and
fcmovnu
fmul
cmp
add
pop
jmp
imul
and
fnsave
pop
add
not
jl
add
or
stos
jge
repnz
cdq
ret
outs
adc
push
mov
mov
push
pushf
xor
inc
sbb
mov
mov
and
jb
mov
es
je
mov
shl
or
rcl
mov
sub
shl
sbb
out
xchg
pushf
add
mov
dec
loopne
xor
fcmove
xor
lods
pop
stos
add
and
mov
sub
jbe
push
pop
xchg
xchg
and
test
(bad)
xchg
pop
adc
sub
sub
push
pop
and
mov
sbb
and
lds
shl
gs
repz
aam
cmp
adc
pop
or
out
stc
fdiv
sbb
cmp
adc
lea
sub
push
jmp
(bad)
pop
cmp
push
stos
in
and
mov
push
fidiv
les
xor
pop
fsub
sub
aam
mov
mov
mov
jne
mov
mov
(bad)
jne
test
stc
mov
sub
pop
xchg
push
push
push
in
rcr
mov
dec
xchg
stc
pop
ret
in
xchg
cmps
jge
(bad)
push
and
sub
sub
aas
je
jnp
xor
call
dec
xchg
and
add
xchg
add
adc
and
xrelease
mov
mov
and
add
adc
mov
pop
xor
jae
das
inc
pop
jl
jl
cmp
cmp
sub
test
out
daa
cmp
or
mov
in
fnstenv
push
les
xor
aam
gs
mov
pop
test
xor
rcr
mov
add
push
fcom
fisubr
bound
aam
rol
nop
dec
push
jmp
icebp
xor
dec
and
or
mov
add
or
add
mov
sub
aam
jae
add
mov
add
pop
xor
push
push
jne
xor
loopne
push
xlat
pop
or
mov
in
mov
or
add
xchg
or
(bad)
xor
in
sar
in
leave
and
in
cmp
push
sbb
mov
fmul
ss
inc
fs
adc
xchg
sub
pop
sbb
sar
xor
mov
nop
pop
pop
dec
test
cmp
shr
sbb
mov
arpl
mov
push
add
inc
add
pop
pop
js
mov
pop
(bad)
pop
or
daa
loope
scas
add
jo
adc
rcl
lods
movs
stos
and
pop
xchg
and
call
dec
push
push
icebp
inc
add
or
and
stos
aad
or
adc
push
and
and
test
nop
test
sbb
xor
data16
dec
nop
test
add
pop
push
in
inc
pop
cmp
aas
fadd
inc
sub
fistp
es
adc
js
mov
inc
push
push
push
pop
xchg
mov
jne
add
adc
inc
add
add
inc
jmp
sbb
sub
retf
js
(bad)
adc
inc
adc
dec
sub
sbb
or
mov
add
sbb
sbb
jae
sub
ins
aad
and
push
sahf
inc
or
in
add
test
mov
enter
or
add
sub
mov
add
add
mov
add
loopne
sbb
or
or
and
rol
sbb
or
mov
mov
cmp
add
leave
fmulp
inc
mov
test
jne
lods
xchg
loopne
das
dec
lea
cld
and
mov
sbb
cmp
jmp
add
loop
ds
mov
cmp
je
inc
sbb
pop
les
fldcw
popa
pusha
int
pop
ds
jnp
sub
add
push
cmp
je
mov
mov
and
xlat
(bad)
cmp
push
loopne
retf
(bad)
inc
jmp
push
pop
cmp
adc
adc
fsubr
push
xor
enter
aam
adc
cmp
les
cmp
cmp
and
adc
dec
xchg
ror
fsub
leave
add
data16
popf
xor
cmp
loope
cmp
xchg
in
lds
pop
into
imul
stos
ss
dec
(bad)
loopne
loop
push
pop
push
sbb
sbb
jp
mov
pop
mov
in
mov
ret
lods
aam
rcl
fadd
call
push
add
shl
and
aam
inc
cld
dec
adc
sar
add
pushf
sbb
sbb
or
sub
ss
or
or
jle
ss
jle
sub
lods
pop
jnp
cmp
sbb
add
add
cmps
sbb
cmc
xchg
or
popf
push
sub
mov
sbb
push
pop
test
ins
push
adc
enter
and
push
add
jns
and
jae
lods
lock
add
pop
(bad)
inc
mov
mov
lods
sub
push
arpl
out
jg
or
pop
mov
nop
in
inc
push
ss
adc
pop
ja
mov
jmp
cmc
sbb
in
push
fstp
sub
jns
mov
cmp
push
test
sbb
cmc
jl
ja
imul
jae
je
pop
inc
sbb
movs
and
in
mov
sbb
adc
xchg
ret
sbb
inc
sbb
lds
push
arpl
adc
aam
inc
out
in
pop
sar
enter
mov
sbb
in
sub
push
call
or
or
movs
retf
dec
mov
in
das
mov
in
and
adc
fidivr
inc
xchg
test
test
lock
or
mov
outs
cmp
dec
retf
aad
xor
sahf
leave
mov
retf
test
add
add
imul
push
mov
or
add
pop
push
dec
pusha
inc
(bad)
ffree
sbb
repz
or
mov
movs
jne
xchg
sbb
dec
mov
bound
sbb
imul
push
dec
xor
xor
mov
aam
add
pop
add
add
dec
pusha
mov
aam
nop
and
imul
out
push
shr
jecxz
sub
inc
hlt
mov
and
or
add
movs
sbb
(bad)
retf
inc
jo
mov
or
fsubr
rol
fwait
and
pusha
test
mov
jno
dec
mov
retf
or
jl
dec
test
leave
jns
sub
and
int3
and
bound
push
popa
int3
call
jmp
rol
ret
jns
add
nop
push
xor
pop
or
and
pop
in
cmp
cmp
scas
or
add
pusha
pop
cmp
daa
cdq
and
leave
dec
add
sub
adc
in
inc
enter
mov
xchg
push
jecxz
(bad)
js
add
xchg
mov
add
pop
out
jecxz
aam
push
sbb
nop
push
adc
xor
add
ss
shl
sub
add
cvtdq2ps
xor
xchg
jmp
push
add
push
sbb
fidiv
leave
in
call
les
ret
cdq
add
add
cmp
inc
clc
test
sub
sbb
dec
outs
js
aaa
mov
mov
xor
les
outs
dec
aas
scas
rcl
and
rcr
test
pop
cli
fsubr
ret
add
cmc
push
sar
mov
jo
fldenv
pop
push
push
jbe
loop
(bad)
cmp
dec
mov
add
inc
mov
mov
fadd
movs
xor
push
mov
and
jge
bt
mov
int3
jp
popa
(bad)
jo
movs
dec
sub
shl
push
cmp
mov
repz
mov
rcl
push
jmp
xor
dec
popf
xchg
cmp
enter
mov
pop
add
arpl
stos
test
xor
dec
xchg
cmp
(bad)
dec
sbb
data16
push
loope
pop
and
es
dec
in
jle
outs
pop
mov
inc
push
adc
push
pop
shl
or
lods
pop
pop
lea
mov
out
scas
xor
sbb
enter
ret
sbb
xchg
add
xchg
push
and
mov
sub
adc
cmp
lds
push
repnz
add
nop
das
or
ja
lea
adc
aam
jns
mov
fwait
les
mov
and
or
shr
movs
inc
jne
(bad)
nop
ret
add
cs
xchg
push
jns
rcr
dec
or
mov
and
retf
inc
aaa
dec
add
inc
inc
call
push
call
cwde
mov
ror
sub
fst
pop
imul
and
cs
add
test
push
shl
push
jp
jmp
ja
or
cmp
pop
add
sbb
ror
mov
lea
and
loope
add
pop
cmc
loopne
or
fcom
sbb
or
ins
pxor
arpl
dec
enter
jno
xor
cmp
addr16
sbb
test
push
bnd
call
fild
mov
movs
mov
mov
adc
add
add
cmps
in
dec
dec
push
sub
add
mov
fsubr
inc
dec
nop
dec
sti
xchg
mov
mov
inc
sbb
pop
mov
pop
push
inc
test
(bad)
arpl
retf
xchg
out
lods
or
pop
mov
lds
xor
pop
xchg
aad
ret
sbb
aam
mov
push
xor
rol
jbe
fmul
mov
and
xchg
sbb
std
pop
sbb
std
push
pop
mov
(bad)
and
mov
rcl
fs
aam
dec
dec
shl
pop
or
cmc
jg
mov
jns
jns
or
inc
add
pop
leave
xchg
pusha
aam
or
adc
xchg
mov
pop
or
fwait
aam
mov
repnz
aam
inc
unpckhps
into
pop
call
je
imul
mov
cmp
stc
inc
jb
or
xchg
dec
mov
push
dec
dec
shr
stos
je
jo
in
and
fs
push
and
and
cmp
jecxz
rol
jmp
test
dec
push
mov
or
sbb
in
or
daa
jmp
mov
clc
mov
push
push
xor
in
push
add
mov
gs
stos
aaa
add
fidiv
push
push
pop
xor
sbb
mov
in
xchg
xchg
out
ret
sbb
xchg
repnz
jmp
inc
push
adc
or
int
inc
inc
add
add
add
dec
add
add
pop
xor
or
push
xchg
mov
sbb
mov
in
adc
call
xor
mov
(bad)
jg
sbb
pop
adc
adc
push
push
stc
movs
xchg
lods
mov
xchg
sar
loopne
xor
fs
sub
retf
in
cmp
jb
mov
jecxz
sbb
cmp
push
retf
ret
movs
stc
jno
inc
or
cmp
pop
bound
mov
test
add
retf
or
jne
cmp
add
push
aas
imul
popf
out
dec
int3
mov
or
xor
or
leave
push
lock
and
lahf
pop
mov
arpl
stos
mov
or
test
or
and
or
cmc
aas
push
jl
add
inc
or
jns
loopne
adc
add
and
ret
(bad)
or
or
or
jo
pop
add
cmps
push
and
xor
adc
sub
or
fimul
xchg
mov
cmp
xor
mov
or
loopne
xor
test
jg
pop
jne
xor
call
das
and
pop
and
jmp
das
les
jmp
mov
and
sub
add
push
cs
or
add
loopne
xor
and
xor
fadd
das
xchg
pop
mov
mov
lock
sub
cld
and
or
add
xor
or
cmp
xor
push
and
push
mov
cmp
add
inc
inc
mov
add
mov
cs
mov
add
pushf
adc
xchg
jae
nop
test
or
fs
or
add
mov
(bad)
lahf
pop
nop
addr16
push
or
add
ret
push
sbb
sbb
mov
inc
cs
(bad)
xor
adc
jl
mov
jo
sbb
sub
dec
pop
inc
scas
jne
stos
aas
sbb
fimul
sub
xchg
out
and
pop
add
and
and
adc
or
xor
adc
adc
xor
lsl
or
fwait
mov
add
test
adc
in
sub
jl
mov
out
jmp
add
mov
les
and
pop
jbe
gs
cmovns
jns
or
adc
jmp
test
adc
xchg
jle
add
add
pop
outs
lahf
cmp
movs
push
inc
inc
int3
xchg
sub
pop
test
lods
inc
loope
or
int3
pop
fstp
jne
add
jne
enter
cwde
pushf
push
pusha
enter
or
mov
add
lods
mov
dec
daa
jbe
or
shl
dec
or
or
push
add
push
loopne
retf
sahf
adc
push
loopne
(bad)
adc
adc
xchg
dec
mov
adc
jo
fcom
leave
in
dec
lahf
adc
cwde
lea
push
add
ret
(bad)
clc
out
sbb
es
(bad)
cmp
fistp
cmp
jg
test
dec
sar
outs
fst
and
aas
mov
aaa
mov
pop
shl
push
and
aam
jo
sahf
cmp
adc
xchg
add
add
je
jecxz
cwde
je
ret
mov
add
mov
push
push
sub
pop
gs
or
push
push
inc
fcom
adc
repnz
add
movs
pop
imul
dec
sbb
cdq
in
xchg
int
or
loopne
pop
and
push
nop
or
mov
mov
jnp
ins
and
or
sbb
fs
retf
push
cmps
ins
inc
sahf
movlps
jge
rol
push
or
sbb
pop
jbe
ret
fs
ss
rcl
push
stc
push
cmp
aad
push
push
lea
cwde
dec
rcl
shl
mov
ss
rcr
or
push
push
push
jle
not
mul
xor
push
sub
push
aaa
inc
cli
lods
push
mov
ret
pop
xchg
hlt
sbb
mov
and
sbb
jmp
mov
call
sbb
xor
fnstsw
adc
dec
adc
movups
loope
out
sbb
sbb
lods
sbb
cmc
mov
jmp
mov
or
cmps
cdq
sbb
sub
fmul
imul
test
je
imul
mov
cwde
pop
imul
add
xor
xchg
pop
jmp
sbb
nop
fsub
loopne
imul
sbb
rol
mov
sbb
imul
outs
int
inc
xchg
xchg
retf
add
fsubr
jmp
pop
sbb
or
mov
test
mov
cmps
add
push
jb
pop
movs
inc
(bad)
pop
nop
out
xchg
out
xchg
test
movs
push
test
js
xchg
and
push
cmp
mov
add
(bad)
jg
dec
dec
test
add
pop
sub
or
int
sbb
popf
sub
ror
sbb
pslld
loopne
cmps
in
adc
ret
add
jb
adc
mov
xacquire
xchg
inc
sahf
imul
sbb
adc
les
scas
fist
or
sub
cmp
cmp
ja
aam
mov
nop
inc
sbb
pop
or
add
fcomp
sbb
add
push
pop
cmps
inc
add
and
xor
pop
popf
ret
ja
push
mov
call
dec
mov
add
(bad)
je
xchg
ret
sub
stos
cmp
test
in
push
adc
pop
adc
jno
mov
xor
icebp
leave
xor
or
int
inc
call
sahf
add
and
loopne
enter
adc
or
(bad)
ror
xor
add
cmps
mov
and
xor
xlat
fcom
(bad)
hlt
jnp
ins
and
arpl
jmp
mov
mov
sub
inc
xchg
aas
retf
sbb
or
test
mov
sbb
pop
lods
enter
mov
add
mov
test
test
adc
xor
jae
adc
add
mov
add
mov
cld
stc
and
push
pop
in
or
or
mov
call
lods
outs
lds
cmp
nop
adc
adc
sbb
imul
push
(bad)
or
mov
dec
repnz
pop
adc
dec
dec
inc
add
pop
sub
or
out
mov
add
xlat
and
pmulhuw
mov
add
rcl
push
(bad)
mov
es
dec
pop
jmp
dec
pop
adc
enter
inc
xor
dec
nop
dec
and
inc
fist
cld
les
idiv
retf
repz
jmp
push
xchg
cmp
test
in
inc
xor
nop
out
sbb
lods
push
fs
inc
or
or
add
out
mov
and
pop
jmp
or
mov
bound
push
mov
push
stos
xchg
xchg
sbb
mov
sub
in
and
in
sbb
push
dec
jp
nop
xchg
rol
or
out
ja
mov
or
add
and
in
dec
scas
push
fist
lods
cmp
cwde
adc
sub
cmps
jne
nop
mov
pop
cdq
in
and
inc
push
in
cmps
dec
dec
inc
cmps
scas
push
pusha
push
inc
jbe
(bad)
pop
movs
adc
and
inc
cmp
sbb
or
std
push
cmp
leave
call
enter
aas
push
mov
push
ins
iret
push
mov
or
sub
mov
imul
add
or
or
fadd
inc
sbb
or
into
fistp
xlat
add
sbb
mov
or
or
xor
cli
sbb
mov
mov
cmp
pop
fidivr
adc
add
and
test
js
adc
or
je
or
fmul
ins
popf
mov
jecxz
test
adc
mov
out
adc
or
cmp
je
out
xchg
lods
cmp
cs
and
ficom
lock
or
mov
mov
mov
push
sub
pop
sub
inc
adc
fmul
dec
test
xchg
mov
add
xor
ret
std
cmp
pop
pop
fist
jne
cmp
je
repnz
loopne
inc
fadd
call
outs
push
into
imul
int
jg
cmp
sbb
mov
sub
adc
lds
pop
ds
add
pop
sbb
test
mov
jle
inc
jmp
in
mov
add
dec
push
jbe
sbb
test
pcmpgtw
xor
and
jns
test
adc
add
jmp
adc
mov
mov
retf
inc
inc
add
push
(bad)
fst
sub
adc
aam
dec
add
mov
(bad)
push
mov
mov
addr16
nop
add
into
pop
mov
pop
dec
mov
or
push
imul
mov
push
push
gs
sub
nop
pop
cmp
call
inc
ror
inc
push
mul
into
mov
sub
dec
add
std
jl
pusha
dec
arpl
push
xor
in
cmp
arpl
mov
dec
mov
cmp
dec
shl
inc
cmp
leave
mov
mov
into
xchg
iret
and
cmp
mov
jl
and
dec
xrelease
cmp
shl
iret
enter
and
inc
jo
clc
lahf
sub
sbb
movaps
push
push
dec
ret
aad
xor
push
mov
rol
and
shl
aas
pusha
or
mov
sbb
sub
xchg
dec
add
sbb
mov
add
mov
xchg
dec
cwde
and
aaa
sbb
dec
pushf
or
pop
jne
data16
jge
mov
inc
gs
sub
xor
sub
or
movs
xor
sar
lock
stc
fisub
(bad)
shl
(bad)
cld
sar
cmps
push
gs
adc
xchg
jb
sbb
or
and
sti
sbb
sbb
(bad)
cmp
jmp
or
push
pop
lods
enter
nop
stos
add
rcr
adc
xor
and
inc
ror
les
jne
xchg
movs
(bad)
fimul
sub
into
ret
add
push
dec
add
dec
inc
mov
enter
retf
push
or
test
ret
nop
or
aam
push
push
adc
iret
aad
mov
outs
xor
add
daa
xchg
aam
jb
or
adc
enter
jmp
or
jae
jl
and
mov
jbe
or
cmp
push
push
push
jnp
add
test
cmp
jmp
leave
sbb
inc
cmp
cmp
stos
inc
ja
enter
aad
ds
mov
add
popa
mov
jge
push
add
mov
fxch
test
jge
push
mov
mov
pop
push
lea
and
add
push
enter
loope
and
push
xor
or
les
shr
fsub
jmp
bswap
xchg
and
jmp
bound
int3
cmp
adc
adc
ja
fwait
jne
neg
mov
jmp
add
mov
pop
or
jns
xor
stos
pushf
test
int3
add
les
mov
nop
dec
shl
or
enter
mov
adc
stos
push
pop
xchg
or
jno
jb
in
nop
cmp
lods
dec
add
or
jge
lods
xor
test
or
or
adc
or
sbb
fisubr
cmp
sbb
lods
add
xor
push
jns
cdq
add
lods
jno
mov
outs
jmp
movs
xchg
jns
fstp
out
cdq
pusha
jbe
test
fdivr
je
lock
fld
fstp
jmp
or
mov
xacquire
gs
sbb
mov
lods
movs
mov
in
and
gs
nop
mov
in
mov
inc
mov
and
leave
pop
jo
or
leave
mov
add
je
sub
fidivr
les
je
mov
in
xchg
add
loope
push
pop
in
out
cmp
add
cs
pop
pop
imul
mov
popa
mov
pop
or
movs
cmps
mov
loope
and
add
iret
dec
out
push
add
test
dec
and
or
test
dec
mov
popa
sbb
add
push
jecxz
mov
test
lods
dec
sbb
jle
dec
jle
imul
jne
xchg
dec
ins
or
jmp
cmps
push
jno
or
hlt
ret
or
inc
dec
scas
cmp
mov
or
lss
jg
adc
lock
mov
bound
pop
les
add
das
jecxz
jbe
push
pop
rcl
xchg
fwait
cmc
mov
test
sbb
adc
imul
sub
push
sar
je
imul
int
call
test
mov
adc
xor
sub
cmp
popa
loop
mov
mov
int3
mov
imul
sbb
ds
jl
sbb
loope
test
xchg
ret
mov
call
add
fdivr
ds
ja
mov
loope
jns
ret
inc
int3
rol
sbb
js
jb
jb
shr
adc
push
push
inc
stos
xchg
add
inc
std
mov
mov
data16
repz
dec
sub
jnp
or
je
addr16
lods
inc
inc
in
xor
test
adc
sar
xor
outs
push
adc
sub
or
or
push
cwde
add
push
inc
lea
(bad)
pop
cmp
ror
adc
inc
push
es
add
jb
xchg
aam
pop
or
or
js
or
push
fidiv
xchg
les
push
add
dec
pop
cwde
sbb
sbb
push
scas
adc
push
jo
adc
or
retf
or
adc
aaa
jno
xor
add
movs
fstp
push
mov
call
push
rcr
add
ret
loope
and
pop
adc
pop
add
fcomi
mov
mov
and
cmp
test
inc
jnp
adc
scas
push
add
out
lods
and
or
(bad)
call
or
loope
test
add
mov
stc
enter
add
dec
pop
or
xor
pop
xchg
shr
je
fsub
ficom
inc
lods
fld
jae
dec
rol
jnp
push
jb
mov
(bad)
push
popf
lods
add
xchg
aam
dec
jl
shr
fwait
xchg
in
fsub
inc
cs
enter
enter
jne
inc
adc
enter
sbb
call
adc
ror
call
mov
add
lock
je
rcr
dec
push
and
dec
(bad)
mov
and
and
int3
or
or
test
mov
movs
jg
jns
retf
push
mov
xchg
xor
adc
enter
sbb
nop
mov
nop
xchg
push
pushf
psraw
pop
es
and
les
jb
inc
scas
push
out
dec
jle
aas
aam
rol
dec
in
sbb
adc
xchg
or
cmp
sub
jp
stos
xor
sub
iret
lds
loopne
sti
push
lock
pop
pushf
xchg
in
mul
mov
xchg
pop
jo
xchg
leave
mov
test
and
(bad)
pop
mov
nop
pop
cdq
cmp
mov
adc
shr
and
loop
or
jae
stc
sbb
cmp
and
daa
cmp
fsub
xor
ss
or
xchg
jle
data16
add
mov
loope
xchg
push
pop
xchg
or
push
fsubr
dec
popa
and
in
inc
xor
sbb
outs
arpl
ja
bound
fwait
mov
sub
lds
retf
ins
inc
in
inc
shl
in
adc
or
or
mov
add
jb
or
popa
shl
fwait
mov
ins
adc
push
push
in
fbstp
in
pop
push
js
lods
test
fdiv
or
or
daa
inc
mov
pop
xor
pop
cmp
in
mov
retf
push
add
call
shr
or
nop
xchg
sbb
bound
adc
cmp
outs
sar
dec
inc
pop
pop
mov
sbb
mov
push
sbb
jle
xchg
adc
ret
mov
mov
xor
sub
sar
punpckhdq
pop
push
mov
push
push
pop
adc
push
pop
cmp
cmps
or
push
or
or
and
sub
sbb
jne
xchg
mov
pop
pop
xor
mov
pop
and
sbb
cmp
in
jp
retf
jno
push
xlat
or
rcl
push
sbb
movs
in
dec
cmp
or
es
jl
mov
sbb
popf
sub
mov
xor
rol
and
aas
fucomip
mov
xchg
loopne
cli
or
sbb
xor
pop
add
push
dec
imul
test
and
lock
call
mov
push
pop
pop
je
cmp
in
(bad)
sub
xor
add
cmp
mov
(bad)
jmp
jmp
add
or
adc
fsubr
mov
cwde
xor
out
mov
and
std
sar
pop
ret
push
or
lock
(bad)
or
pop
jl
push
add
xlat
test
inc
cmp
cmp
int3
and
sbb
and
fldenv
inc
dec
test
sub
stos
leave
push
dec
inc
ret
inc
mov
nop
fsubp
retf
jle
out
aam
sahf
jl
sbb
pop
add
sar
into
shl
pop
push
clc
stos
add
rcpps
inc
int
push
cmps
and
or
pop
sbb
pop
mov
pop
addr16
add
jmp
adc
leave
cli
mov
xchg
adc
iret
push
ret
pop
add
jmp
sbb
jns
sbb
sub
pop
sahf
retf
jae
add
xchg
out
or
in
inc
adc
dec
sahf
retf
jae
sbb
xchg
out
pop
pop
sub
iret
in
cmp
fs
jns
ins
cmp
pop
sahf
je
js
jl
mov
push
test
jns
iret
mov
gs
repnz
sahf
retf
addr16
imul
pushf
jno
jg
jns
iret
in
test
lods
xchg
pop
sahf
retf
jae
xchg
mov
mov
mov
cs
in
les
retf
jae
mov
xchg
out
pop
fadd
(bad)
loopne
in
cmp
in
call
cs
jmp
pop
sahf
hlt
icebp
clc
sti
cld
jns
int
add
add
pop
add
pop
sahf
retf
jae
(bad)
adc
repnz
sbb
sbb
and
and
retf
jae
cmp
cmp
repnz
xor
pop
cmp
in
cmp
cmp
inc
addr16
jae
cs
outs
dec
jne
repnz
sahf
dec
jnp
jg
in
cmp
test
pop
xchg
jae
cs
pusha
cdq
mov
retf
movs
ins
scas
jo
mov
mov
mov
in
or
int
sahf
retf
jae
iret
mov
nop
cmp
out
fist
in
pushf
repz
jae
std
test
add
mov
mov
out
pop
sahf
mov
in
cmp
cmp
cmp
inc
jae
cs
int3
dec
rcl
repnz
sahf
retf
push
fcomp
pop
mov
gs
call
imul
lock
xchg
sahf
dec
repz
repnz
add
xchg
out
pop
or
in
cmp
adc
sbb
sbb
and
out
pop
sahf
and
sub
sub
mov
out
out
jae
cs
cmp
cmp
inc
jns
dec
in
add
adc
jae
sbb
xchg
out
sub
pop
aaa
cs
in
pusha
cmp
sahf
retf
jae
inc
ins
push
jo
xchg
out
pop
je
js
jl
in
cmp
xor
retf
jae
mov
mov
repnz
sahf
nop
(bad)
xchg
xchg
cwde
in
cmp
mov
jae
cs
movs
mov
mov
retf
(bad)
mov
mov
mov
xlat
mov
iret
in
(bad)
icebp
enter
retf
jae
sti
sar
aam
retf
push
stc
pop
add
or
seta
repnz
loopne
in
call
and
retf
jae
cs
aas
clc
inc
jae
pop
sahf
cld
inc
add
dec
add
pop
sahf
retf
push
or
arpl
imul
in
sbb
and
and
sub
repnz
cs
in
cmp
cmp
inc
sahf
retf
jae
int
iret
dec
aad
out
pop
dec
loope
jmp
iret
in
cmp
pop
call
mov
or
jns
iret
push
repnz
sahf
retf
pop
je
js
mov
sub
iret
in
mov
pop
pop
sahf
retf
jae
gs
ja
cmp
out
sbb
test
lods
sahf
retf
jae
lahf
mov
mov
xchg
out
pop
mov
iret
in
cmp
(bad)
leave
enter
jns
int3
iret
rcl
out
pop
sahf
aam
fcomp
fsub
mov
repz
mov
pop
push
in
or
in
hlt
pop
clc
pop
cs
jae
and
hlt
sub
retf
jae
das
or
repnz
adc
dec
sbb
in
cmp
sbb
and
jae
cs
sub
repnz
sahf
sub
xor
in
cmp
cmp
cmp
jae
cs
inc
mov
pop
sahf
retf
lods
dec
mov
xchg
out
lds
pop
jns
iret
in
pusha
fldenv
sahf
retf
jae
icebp
ins
div
xchg
out
sti
je
js
pop
xchg
out
push
jl
sbb
iret
in
cmp
mov
mov
jae
cs
dec
xchg
dec
out
pop
sahf
cwde
push
pushf
push
mov
push
movs
popa
test
jae
cs
lods
jae
jns
repnz
sahf
retf
mov
cmp
out
lahf
les
in
int3
ret
ror
pop
sahf
retf
jae
int
iret
fdivr
out
shl
fnsetpm(287
loope
iret
in
call
dec
in
jns
hlt
add
jns
cs
adc
jns
iret
add
or
or
pop
sahf
retf
sub
xor
mov
inc
sbb
and
iret
in
and
sub
sahf
retf
jae
pop
xor
cmp
out
jno
cmp
iret
in
inc
lahf
inc
movs
dec
sahf
retf
jae
lods
dec
mov
repnz
push
ret
pop
retf
pop
iret
in
cmp
pusha
frstor
jae
cs
repnz
sahf
jo
je
js
pop
sahf
retf
jl
sbb
and
iret
in
nop
das
xchg
xor
cwde
inc
pushf
dec
mov
dec
movs
dec
test
cs
in
lods
pop
mov
mov
retf
jae
imul
repnz
rol
mov
shl
aam
fsubr
fadd
loopne
in
mov
jmp
out
jae
cs
lock
hlt
idiv
xor
lahf
retf
std
cld
adc
add
pop
cs
in
add
or
or
retf
jae
cmp
cmp
repnz
sbb
popa
and
in
cmp
and
sub
jae
cs
xor
repnz
sahf
xor
cmp
xchg
test
inc
xchg
jae
cs
dec
xchg
dec
cdq
push
repnz
sahf
retf
lahf
push
test
xchg
out
mov
mov
in
push
sahf
retf
jae
in
out
cmp
out
in
jl
xor
cmps
repnz
adc
nop
sbb
cwde
sub
mov
in
cmp
push
lods
push
mov
jae
cs
mov
mov
sahf
retf
jnp
mov
lea
xchg
int3
cdq
sar
iret
in
aam
fdivr
fadd
loopne
in
xchg
out
iret
call
iret
in
lock
in
jns
cld
pop
or
mul
mov
adc
and
or
adc
adc
pop
sahf
retf
inc
sbb
pop
mov
popa
and
sub
iret
in
sub
xor
xor
cmp
repnz
inc
popf
inc
mov
iret
in
dec
mov
mov
jns
push
(bad)
pop
jecxz
out
pop
pop
in
jmp
iret
in
cmp
push
test
or
cs
js
jl
xor
sahf
retf
pop
test
mov
mov
sub
cs
in
cwde
dec
pushf
push
pop
sahf
retf
jae
imul
mov
cs
in
mov
mov
jae
mov
xchg
out
pop
enter
ror
in
cmp
aam
fcom
retf
jae
cs
loopne
out
pop
sahf
in
call
cmp
repz
hlt
(bad)
mov
or
cld
pop
add
cmp
out
sbb
cs
in
or
adc
jns
sbb
push
xchg
out
pop
and
pop
sub
in
cmp
sub
xor
jae
cs
cmp
cmp
inc
xchg
inc
in
cmp
fwait
dec
mov
mov
jns
iret
push
mov
pop
sahf
retf
rcr
fstp
in
push
iret
in
jo
pcmpeqb
cs
in
js
jl
sbb
sub
pop
mov
inc
xchg
iret
in
cmp
cwde
dec
pushf
push
retf
jae
mov
repnz
sahf
test
lods
imul
mov
mov
iret
mov
repnz
sahf
retf
lods
enter
mov
mov
cs
in
(bad)
loopne
pop
sahf
retf
jae
out
call
out
std
lock
hlt
seta
repnz
clc
pop
cld
and
out
pop
call
mov
cmp
cs
adc
sbb
repnz
sahf
retf
jae
jns
jnp
cmp
out
test
xor
iret
in
xor
cmp
cmp
inc
movs
inc
cmp
out
scas
dec
mov
mov
push
rcl
retf
jae
out
icebp
pusha
repz
pop
fs
push
pop
sahf
ins
or
je
mov
sub
cs
add
mov
pop
sahf
retf
pop
mov
arpl
imul
and
fwait
lods
mov
repnz
mov
mov
mov
les
enter
xchg
out
pop
shr
aam
fsub
fmul
cmp
sbb
jae
cs
in
sub
sub
repnz
sahf
retf
xor
aaa
cld
inc
pop
sahf
dec
repz
inc
add
or
out
pop
or
adc
iret
in
adc
sbb
sahf
retf
jae
(bad)
and
repnz
sub
in
cmp
xor
cmp
retf
jae
cs
inc
shl
repnz
sahf
inc
fisttp
dec
repnz
sahf
retf
push
or
xchg
out
daa
pop
sub
in
fs
push
jae
dec
jo
je
xchg
out
push
js
jl
cs
in
sub
mov
mov
repnz
xchg
mov
mov
movs
lahf
retf
jae
cs
lods
mov
mov
mov
mov
fnstcw
cs
(bad)
in
enter
pop
sahf
retf
stc
sar
aam
adc
sahf
retf
push
fsub
fsubr
loopne
xchg
out
xor
cmp
inc
cs
in
in
dec
lock
hlt
sahf
retf
jae
imul
cld
jno
jae
pop
add
jne
(bad)
out
pop
sahf
or
mov
mov
mov
jns
iret
sbb
and
and
pop
sahf
retf
aad
jecxz
out
sahf
retf
add
cmp
out
adc
inc
pop
cs
in
inc
and
retf
jae
sub
push
cmp
pop
inc
pop
inc
pusha
iret
in
cmp
fs
push
cs
addr16
out
pop
sahf
je
js
jl
mov
pop
mov
pop
sahf
retf
mov
mov
xchg
out
lds
iret
in
test
lods
pop
push
cs
in
mov
mov
mov
adc
repnz
les
enter
in
cmp
sar
aam
retf
jae
fadd
dec
out
pop
sahf
loopne
in
call
ins
in
outs
lock
jns
iret
hlt
xchg
clc
xchg
cld
jns
int
lahf
add
test
retf
jae
mov
mov
bnd
adc
sbb
cs
in
sbb
and
and
retf
jae
loope
in
jmp
out
pop
xor
xor
cmp
cmp
pop
inc
in
cmp
cmove
dec
daa
jae
cs
dec
xor
push
repnz
sahf
retf
pop
pop
arpl
cmp
out
jnp
lea
cs
in
ins
fwait
jo
pop
sahf
retf
jae
movs
js
jl
xchg
out
mov
cs
in
mov
mov
nop
sahf
retf
jae
loope
jmp
repnz
pushf
cmc
mov
push
ds
sbb
cmp
sbb
jae
cs
mov
repnz
sahf
retf
dec
les
push
mov
shl
jns
iret
in
fdivr
jg
sahf
retf
jae
test
vpmacsdql
fwait
in
popf
lock
cs
in
hlt
lods
clc
mov
iret
movs
jns
mov
(bad)
retf
jae
cs
or
out
pop
sahf
adc
adc
sbb
mov
jmp
cmc
test
std
sub
iret
in
xor
xor
pop
sahf
retf
jae
inc
cmp
inc
cmp
out
push
inc
pop
dec
jns
iret
in
dec
adc
jns
pop
cdq
pop
mov
pusha
test
in
cmp
ins
mov
(bad)
retf
jae
cs
js
out
pop
sahf
jl
cmp
repnz
sahf
retf
mov
xchg
out
pop
xchg
and
and
retf
jae
xor
xchg
out
dec
mov
mov
cs
in
mov
sahf
retf
jae
jge
xchg
mov
xchg
shl
cmp
fsubr
jns
loopne
in
out
pop
sahf
call
in
cmp
xlat
hlt
jecxz
repz
sti
add
inc
xchg
cmps
repnz
and
adc
adc
sbb
sbb
and
out
pop
and
sub
iret
in
cmp
xor
gs
jae
cmp
jae
repnz
sahf
inc
jg
or
cmp
xchg
dec
popf
push
cmps
jae
cs
push
mov
pop
sahf
retf
shl
fnstcw
out
ins
div
xchg
cmps
repnz
adc
cs
in
jl
sub
sahf
retf
jae
sub
xchg
out
pop
nop
inc
xchg
dec
cwde
iret
in
cmp
pushf
push
mov
movs
sub
cdq
mov
mov
movs
mov
iret
shl
sahf
retf
loope
repz
pop
sahf
retf
or
xchg
out
and
and
xor
call
sahf
retf
jae
inc
hlt
dec
clc
push
dec
repz
cld
pop
add
arpl
repnz
sahf
add
or
in
cmp
jne
jnp
jge
jns
iret
sbb
pop
sahf
retf
xchg
and
sub
sub
xor
in
cmp
retf
jae
xlat
inc
fisttp
xchg
out
loope
cmc
push
stc
mov
icebp
mov
mov
sub
push
inc
push
jns
iret
in
or
fs
pop
sahf
retf
jae
and
xchg
out
das
je
js
in
in
jl
inc
or
ins
in
in
mov
mov
in
in
mov
movs
shl
in
test
lods
(bad)
mov
mov
pop
sbb
in
jecxz
out
gs
dec
mov
dec
or
jle
pop
xchg
dec
dec
test
dec
call
or
dec
fs
or
xchg
pushf
popa
or
dec
ja
xchg
adc
cmp
and
inc
push
mov
rol
(bad)
mov
js
inc
(bad)
ss
(bad)
pushf
xchg
and
cdq
test
add
push
and
adc
inc
inc
xor
xor
inc
inc
mov
cmp
push
dec
push
int3
ins
fs
stos
loopne
dec
sbb
sahf
mov
ret
inc
adc
aaa
es
test
jle
mov
push
jne
lock
leave
add
jo
sbb
clc
cmp
je
loop
xchg
bound
push
adc
add
aad
int3
mov
mov
or
xor
test
imul
enter
xor
adc
sbb
dec
mov
xchg
add
mov
mov
add
clc
mov
xchg
(bad)
cld
ror
fcomp
sbb
enter
mov
pusha
xor
mov
mov
gs
dec
ret
adc
add
mov
mov
xor
push
adc
add
bswap
aad
inc
cmps
mov
loope
ret
ret
arpl
push
out
push
popf
(bad)
jg
movs
(bad)
mov
sbb
inc
loopne
jl
cmp
es
js
in
pop
and
dec
les
pop
pop
test
jne
and
adc
mov
js
in
dec
bnd
add
inc
das
inc
retf
push
jl
sub
ror
rcr
lea
cdq
rcr
adc
mov
int
adc
adc
out
in
or
clc
mov
push
or
aaa
add
and
into
dec
ins
in
push
mov
fnstsw
cdq
mov
js
ss
call
inc
outs
es
add
push
fs
add
add
inc
add
push
and
sti
aas
ret
call
push
sahf
push
popf
sub
ds
push
fwait
mov
shr
int
mov
imul
and
inc
push
mov
xor
push
sbb
ror
xor
in
lods
xchg
rcr
inc
fisub
inc
adc
push
lds
ret
neg
in
mov
xor
mov
dec
or
add
jp
push
add
aam
add
es
adc
hlt
(bad)
cwde
xor
mov
movs
sub
xchg
cmovae
push
inc
or
in
je
cli
sti
or
xchg
or
cmps
pop
add
cmp
adc
enter
iret
sub
gs
mov
nop
shl
in
jge
or
push
or
test
cmp
not
push
xchg
out
inc
enter
outs
clc
and
add
or
(bad)
ins
jo
out
lea
sub
add
add
ror
cmp
xlat
call
shl
aam
or
fwait
sbb
adc
and
jae
sub
fdivr
daa
fcom
xchg
pop
or
daa
sub
xchg
xor
scas
fdivr
in
dec
js
test
ret
jo
xor
sub
xlat
frstor
mov
mov
ds
push
mov
mov
mov
add
sbb
fmul
popa
call
les
lds
sti
xchg
sub
adc
and
test
imul
imul
pop
and
push
sub
(bad)
mov
xlat
pop
fdivr
inc
fsubr
mov
retf
cmp
mov
data16
rcl
inc
xchg
or
pop
mov
movs
add
pushf
leave
push
rol
and
iret
fst
dec
lods
mov
dec
pop
xor
dec
xchg
pushf
xchg
call
mov
int3
ficomp
mov
shl
shl
xchg
fistp
shr
and
pop
cwde
call
out
inc
mov
or
stos
sub
aam
call
jl
mov
sbb
cdq
fadd
sbb
movs
push
push
and
fisub
daa
cwde
je
call
inc
mov
imul
pop
add
inc
pop
or
fnstcw
push
jmp
ins
mov
imul
rcl
jg
xchg
pushf
or
or
or
or
hlt
nop
xor
add
(bad)
xor
nop
xchg
push
pop
push
lds
inc
mov
add
add
add
call
xchg
test
repz
int3
and
imul
jo
add
xchg
jne
test
cmp
or
sbb
mov
pop
cld
es
pop
add
add
(bad)
pop
mov
mov
pop
add
dec
push
outs
mov
sbb
sbb
loopne
movs
rol
out
jno
sti
dec
cmp
push
add
xor
add
xor
xchg
rol
(bad)
fmul
jmp
lahf
popa
adc
mov
repz
pop
scas
xchg
jbe
xor
mov
adc
and
int3
fwait
rol
or
or
add
xchg
mov
lea
add
cwde
arpl
lods
inc
dec
xchg
or
add
sub
dec
adc
jl
adc
xor
dec
add
xor
pop
or
rcl
add
push
adc
jno
mov
outs
adc
dec
popa
fwait
pop
push
fisttp
xorps
and
inc
in
add
jne
lods
inc
adc
xchg
in
dec
inc
adc
add
lea
retf
aam
xchg
cmp
outs
(bad)
imul
mov
ja
sbb
stc
xchg
ret
push
stc
lds
sub
push
or
add
dec
or
das
jne
jl
imul
sub
add
and
jbe
add
add
imul
add
sar
mov
pop
sbb
xchg
inc
pop
mov
mov
in
sub
or
and
or
in
std
or
sub
aam
pop
sbb
adc
push
shr
adc
adc
mov
lock
push
sbb
mov
retf
scas
cmp
xor
and
mov
sub
nop
pop
js
xchg
pop
xlat
out
aaa
sbb
out
sbb
(bad)
enter
and
lods
cwde
inc
sbb
movs
push
mov
nop
cmps
xor
sbb
add
mov
xchg
pop
adc
or
out
push
cdq
sbb
test
jg
xor
jl
jbe
xchg
mov
adc
xor
dec
adc
fld
xor
sbb
mov
scas
inc
or
push
or
ins
movs
add
mov
cmp
cdq
jbe
loope
or
xchg
dec
ins
test
or
leave
test
xchg
push
enter
mov
lods
xor
xchg
dec
adc
les
int3
dec
enter
aam
dec
xor
xchg
in
fcom
xor
test
in
sbb
sbb
int3
retf
leave
and
push
cmp
and
bound
sbb
cdq
enter
nop
dec
es
inc
es
push
shl
xchg
or
shl
es
nop
dec
and
ficom
jb
sub
and
inc
and
cmps
xor
loopne
bound
xor
push
sub
hlt
sub
push
or
add
sub
mov
adc
mov
and
inc
cwde
and
xchg
push
inc
sub
inc
call
daa
test
inc
sbb
add
inc
fxch
adc
or
xchg
into
popa
rcl
mov
xchg
adc
push
daa
push
inc
test
psubusb
stos
aas
push
rcl
aam
dec
add
mov
push
mov
or
push
add
mov
xchg
jl
push
pushf
xchg
pop
nop
sub
add
sahf
test
test
push
in
add
or
das
push
or
stos
int
je
rcl
sbb
adc
add
movs
arpl
in
cmp
test
repz
dec
mov
ja
adc
lods
test
add
or
push
inc
push
inc
or
xchg
pop
pop
xchg
inc
loop
mov
mov
not
add
pop
ror
adc
push
adc
int
xchg
mov
cmp
test
inc
sub
mov
cmc
scas
add
jecxz
pop
mov
stc
sub
lods
push
cld
xlat
mov
add
push
mov
xor
popa
push
sub
dec
fwait
mov
push
jo
daa
jo
pop
xor
add
int3
lods
dec
push
or
mov
loopne
outs
or
xchg
xchg
adc
or
sbb
and
(bad)
retf
loope
gs
or
and
sbb
(bad)
and
fadd
xchg
or
loop
jbe
lods
data16
or
adc
or
rcr
xorps
mov
sbb
jns
fcom
adc
jo
or
add
and
cmps
sbb
or
ja
jge
inc
fld
inc
nop
rdtsc
movs
push
leave
nop
or
mov
pop
mov
or
xor
dec
push
sbb
(bad)
sbb
pushf
sbb
add
xor
jmp
imul
push
scas
sbb
xchg
push
cs
sub
aaa
push
mov
xchg
cmp
pop
stos
and
xchg
dec
sbb
dec
loopne
popa
inc
and
dec
cs
out
iret
retf
ror
xchg
mov
or
xchg
daa
fs
xchg
sub
sub
push
loopne
loopne
lds
push
loopne
and
sti
sub
push
dec
and
or
cs
or
xchg
ins
push
dec
push
mov
xchg
mov
or
dec
xor
cwde
jmp
lahf
nop
push
enter
vmptrst
or
cmp
in
xor
xor
xlat
mov
add
sub
pop
aaa
adc
ret
and
cmp
pop
push
mov
xchg
enter
cmp
gs
ds
mov
aas
mov
lods
inc
jmp
jno
and
cmp
imul
ret
pop
es
rol
inc
sub
ret
pop
inc
sub
add
and
(bad)
cli
or
adc
sbb
lahf
fwait
fwait
test
pop
xchg
mov
xchg
cli
mov
shl
in
cmps
cmp
lods
mov
dec
pop
xlat
mov
aaa
and
pop
adc
and
dec
sub
push
push
xchg
xor
mov
mov
or
and
cmps
push
push
jge
add
out
inc
shl
pop
xchg
inc
aaa
movs
push
dec
sub
ficomp
xlat
jno
or
sub
sbb
and
inc
push
rcl
in
pop
xor
xlat
mov
fimul
jb
stc
into
push
out
pop
dec
jb
aaa
and
jecxz
dec
in
inc
leave
push
movs
push
je
sub
push
sub
dec
sub
mov
or
push
(bad)
mov
xor
mov
loop
leave
and
adc
push
push
pop
jne
cs
in
push
xor
pop
jns
add
add
pop
push
jae
pop
mov
cdq
pushf
inc
in
repnz
es
xorps
cvttps2pi
add
nop
test
pushf
adc
sub
add
sbb
rcl
jmp
mov
retf
and
xor
pop
pusha
xor
xor
aaa
ror
sbb
fs
mov
xlat
push
inc
sub
xchg
bound
fwait
sub
pop
cs
xchg
imul
dec
pop
push
test
sbb
popa
push
add
imul
dec
sbb
push
and
xchg
push
sub
dec
inc
push
xor
imul
ins
ins
dec
mov
repnz
push
popa
outs
push
push
xor
imul
aaa
jne
pop
arpl
jo
mov
mov
movs
in
inc
repnz
cwde
fiadd
sti
jo
push
and
jae
add
push
in
cwde
push
lea
push
push
sbb
arpl
mov
enter
sti
nop
or
out
lea
add
cmps
(bad)
mov
fist
ja
popf
mov
push
out
xchg
sub
mov
(bad)
jmp
mov
out
dec
xchg
jge
ja
cmps
jle
out
fmul
dec
lds
cwde
dec
pop
xor
cdq
cmc
lods
mov
push
outs
add
sbb
push
dec
cwde
sub
and
inc
sar
add
lea
jbe
push
push
(bad)
push
scas
push
pop
fdivp
ins
sahf
(bad)
cli
sbb
pop
push
iret
mov
addr16
ds
push
sbb
push
jb
inc
rol
fldcw
push
outs
adc
or
sbb
mov
fwait
in
out
push
adc
adc
mov
neg
mov
add
jns
adc
test
dec
add
and
sbb
pop
rcl
or
sub
add
sub
add
or
(bad)
lock
mov
mov
nop
ds
call
jg
int3
or
jae
jae
or
or
or
fwait
jg
pop
je
jge
adc
jg
and
mov
cmp
jb
inc
jl
add
or
sub
push
and
pop
mov
add
mov
clc
cmps
cmc
xor
adc
jne
imul
out
pusha
pop
xchg
fst
mov
jo
add
and
leave
rcl
mov
jne
inc
into
jb
das
xor
data16
je
or
je
jmp
pop
pop
je
bound
add
jmp
add
inc
dec
dec
mov
shl
xor
aam
cs
xor
dec
fdivr
cli
adc
jl
scas
inc
jle
popa
jl
xor
mov
data16
pop
inc
outs
jb
out
std
jmp
rcl
sbb
sbb
pcmpeqd
out
shl
sti
imul
jmp
mov
adc
icebp
int3
ret
(bad)
dec
cmc
call
aaa
cld
loopne
(bad)
movs
fisub
lock
cmp
rcl
or
or
gs
mov
cmp
pop
inc
popf
mov
dec
in
or
mov
call
and
mov
ins
or
cmp
xchg
xor
stc
or
mov
push
add
sub
rcr
dec
js
in
packssdw
mov
out
add
xor
or
pusha
add
or
jge
pop
out
xchg
hlt
dec
xchg
femms
pop
pop
jp
fild
int3
or
test
popf
sub
sub
jp
and
fisubr
int3
lea
add
add
sbb
mov
mov
lea
mov
mov
or
adc
pop
mov
jge
ret
mov
jmp
sbb
dec
std
dec
jge
cld
push
xor
add
js
xchg
rol
loope
dec
sbb
pusha
add
ret
out
mov
dec
adc
jmp
cmp
jl
stc
outs
pop
mov
dec
les
adc
movs
cmp
and
adc
lahf
rol
je
ja
push
xchg
inc
jg
sub
je
pop
dec
sub
pop
or
add
push
sbb
popf
push
cmp
mov
and
xchg
shl
out
xchg
jmp
pop
lods
mov
outs
lock
push
push
pop
cmp
sbb
lock
inc
adc
mov
pop
pop
ret
dec
hlt
test
rcl
xor
lock
sub
and
popa
cmp
mov
iret
mov
cmp
stc
in
addr16
xchg
je
pop
xchg
sbb
(bad)
jmp
jg
cld
and
add
sub
mov
add
call
xlat
in
xchg
xchg
push
push
push
pop
xchg
ret
inc
ins
jno
xor
adc
mov
and
fild
fdiv
inc
inc
cwde
mov
adc
add
jo
xchg
ins
and
and
movs
cmp
or
fcmovnb
int
fmul
adc
lea
test
test
daa
add
xchg
add
or
dec
pop
in
sub
pusha
add
fistp
aaa
mov
xchg
xor
call
add
jo
cdq
sub
enter
(bad)
add
xor
je
adc
add
xlat
jnp
adc
or
sbb
and
out
adc
inc
push
mov
adc
cmp
cmp
call
sub
repz
push
int
mov
jg
add
lea
push
push
push
push
dec
push
jl
adc
adc
ds
fld
mov
dec
test
pop
fistp
xor
enter
jle
fist
mov
cmp
rol
mov
shl
push
push
mov
aad
or
adc
dec
inc
sub
stc
push
into
xor
jmp
mov
daa
dec
jnp
adc
stos
mov
xchg
(bad)
repnz
jl
jo
retf
mov
je
cmps
imul
fs
pop
js
out
adc
xor
inc
pusha
leave
test
ja
ret
ret
jmp
movs
push
push
add
mov
loope
loope
push
cmp
out
sub
jns
les
test
mov
mov
add
add
xor
scas
mov
cmp
inc
fiadd
add
sti
mov
test
mov
inc
pop
add
lock
or
mov
sbb
es
dec
push
push
and
cmp
jo
push
popa
adc
pop
or
xchg
pusha
mov
rol
push
ins
or
aas
ja
jb
push
add
push
aaa
xor
xlat
mov
dec
push
and
mov
add
in
xchg
pusha
arpl
imul
sub
sahf
test
inc
movs
popf
adc
or
ja
mov
lahf
sub
sbb
mov
push
icebp
sbb
rcr
loop
adc
inc
jmp
data16
dec
jecxz
inc
fwait
push
or
pop
jle
test
push
je
push
push
inc
add
and
jno
dec
adc
xor
ret
pop
push
pop
sbb
sbb
test
cmps
and
adc
pop
mov
nop
movaps
ror
add
jg
sar
pop
and
dec
jecxz
ds
and
in
rep
or
or
ja
inc
add
imul
mov
adc
adc
push
(bad)
mov
adc
sbb
and
dec
dec
ret
rcl
add
push
ror
shr
push
or
add
mov
mov
sbb
stos
or
add
mov
stc
test
push
repnz
or
pop
or
jmp
pop
or
loope
repnz
add
xchg
adc
nop
mov
call
cs
sbb
nop
(bad)
or
and
lods
add
mov
clc
mov
jle
aad
les
adc
test
fisubr
or
lea
dec
imul
icebp
mov
xor
and
add
les
mov
int
ret
pop
jge
xor
mov
jnp
int
push
shr
(bad)
ret
adc
sub
add
inc
and
push
sub
rcl
lock
test
pop
das
mov
dec
imul
xor
into
adc
pop
in
mov
loopne
add
nop
adc
enter
add
(bad)
(bad)
lea
push
loope
and
ficomp
jbe
xor
sbb
ja
pop
pusha
movs
lods
pop
sbb
pop
in
ret
or
dec
pop
sub
jae
pusha
xchg
js
fstp
or
adc
je
cmp
repz
aad
sub
ja
dec
inc
cs
adc
push
adc
push
push
pusha
add
(bad)
push
test
je
jmp
xchg
sbb
push
or
xchg
(bad)
xor
push
push
add
or
lea
cmp
or
push
jb
dec
ret
(bad)
pusha
mov
ret
xor
add
lock
leave
mov
retf
rcl
fistp
mov
mov
or
rol
lods
dec
dec
ror
leave
pop
jge
pop
ror
add
push
or
sbb
add
pushf
inc
xchg
pop
das
das
lds
mov
loopne
lea
add
inc
rcl
rcl
inc
out
jns
stc
sar
(bad)
push
add
jecxz
mov
add
sub
bound
jmp
fwait
or
or
add
sub
fs
les
das
xchg
mov
(bad)
mov
ja
je
aaa
mov
or
push
or
cmps
test
jne
loop
out
push
(bad)
aaa
mov
cwde
jmp
or
ja
jb
jmp
add
push
adc
loopne
or
dec
cmp
shr
push
stos
mov
out
jbe
int
je
mov
sti
retf
adc
je
add
push
jmp
push
je
sbb
push
jmp
xor
or
lock
mov
scas
jmp
sbb
mov
xchg
sbb
dec
loop
adc
inc
nop
sbb
in
xchg
and
ret
addr16
cdq
add
inc
enter
add
mov
adc
iret
jmp
or
xchg
cmp
cmovs
test
dec
push
push
test
ss
adc
and
in
cmps
repnz
or
ja
add
dec
jns
or
leave
sub
add
dec
push
push
mov
push
mov
cmovp
lock
and
xor
xchg
inc
jne
add
ss
cmovp
sbb
stc
int3
inc
test
jno
les
add
push
pop
mov
push
das
add
push
push
xchg
cmp
lock
ror
sub
add
add
mov
pop
fsubr
sub
push
push
dec
loop
mov
sti
out
dec
pop
push
push
imul
or
imul
jne
xchg
out
and
jg
scas
iret
jbe
pop
mov
pop
lds
inc
lea
dec
cld
push
ret
into
cmps
dec
rcl
and
in
inc
cmps
vmwrite
cdq
inc
xchg
cmp
nop
les
mov
jo
arpl
ror
shl
adc
les
add
ret
shr
xor
sub
aad
add
inc
cmp
mov
loope
loop
test
daa
popa
daa
in
xchg
sbb
cmp
add
sbb
dec
les
push
or
adc
repnz
jg
inc
js
jb
dec
(bad)
movaps
pslld
add
jb
sbb
jnp
loopne
push
daa
add
dec
add
inc
or
add
movzx
add
mov
pop
stos
(bad)
int
dec
lods
add
jecxz
cmps
adc
dec
dec
scas
xchg
aas
pop
and
xchg
out
and
jg
in
lods
xchg
push
sub
sub
in
mov
sub
rcr
mov
in
push
sahf
xchg
add
cmp
or
hlt
sti
add
xor
pop
inc
inc
or
(bad)
xchg
push
(bad)
add
fs
ret
aas
mov
add
push
mov
adc
loopne
fdiv
out
mov
call
aam
xchg
jge
mov
pop
les
or
pop
mov
loop
dec
les
pop
ss
fcom
lods
and
movs
fisttp
into
out
or
pop
paddsw
sbb
pop
mov
and
iret
add
or
cmp
cmp
pop
pop
mov
daa
test
xor
inc
pop
adc
ror
fdivp
mov
pusha
sbb
sbb
add
hlt
cmp
iret
enter
push
gs
lods
or
sub
cmp
pop
mov
mov
movs
je
or
jns
dec
add
cmp
fcomp
dec
sbb
mov
jbe
sub
mov
hlt
xor
movd
mov
sub
or
jmp
lock
icebp
sub
or
or
cmp
xchg
mov
inc
retf
retf
cmp
mov
enter
stc
nop
mov
jb
mov
sub
adc
and
jne
or
ins
aaa
sbb
xor
sbb
pusha
icebp
and
ins
or
sbb
or
or
cwde
imul
sub
(bad)
(bad)
ror
mov
push
ret
sbb
jb
mov
pop
dec
cmp
and
jecxz
xchg
jb
(bad)
or
sbb
jmp
or
or
leave
cmp
inc
mov
loop
mov
add
mov
add
fst
fiadd
mov
adc
in
imul
add
in
test
jecxz
or
mov
cmp
enter
cmps
dec
(bad)
pop
or
sbb
aad
rol
dec
cmps
lods
add
sbb
lock
retf
(bad)
pop
(bad)
push
dec
mov
jbe
dec
sbb
add
das
not
inc
stc
ret
inc
or
sub
test
test
call
cmp
test
adc
in
xchg
dec
es
mov
loopne
or
sbb
sbb
test
jnp
sub
adc
scas
shr
(bad)
nop
nop
dec
fcom
adc
dec
aam
lds
test
fist
jo
(bad)
int3
shl
call
in
int3
rcl
push
or
adc
adc
jmp
cmp
dec
add
and
leave
add
enter
in
(bad)
add
mov
mov
push
and
mov
lock
lahf
or
push
loopne
push
dec
ja
movs
jne
push
aaa
push
sahf
jnp
enter
data16
fs
adc
push
clc
xor
sbb
push
xlat
loopne
(bad)
and
cmps
jle
bound
or
ds
or
test
push
fidiv
sbb
imul
addr16
and
iret
sete
xor
mov
sbb
ins
out
(bad)
xchg
mov
push
or
mov
pusha
scas
stos
(bad)
fwait
dec
mov
pop
ret
call
popf
or
add
dec
add
xchg
hlt
mov
mov
stc
push
xchg
int3
inc
xor
or
nop
mov
add
add
dec
push
xor
or
adc
or
sbb
adc
sbb
adc
jo
push
hlt
push
ret
sbb
xor
pushf
mov
call
les
sbb
add
cs
cvtps2pi
out
shl
lock
jne
inc
adc
fs
sub
sub
outs
sbb
fist
mov
ins
pop
imul
dec
ret
jb
test
jmp
sbb
jmp
jg
pop
mov
jmp
sbb
aam
clc
jmp
dec
movs
xchg
sub
jmp
movs
push
icebp
jmp
push
push
out
out
sbb
dec
jmp
and
loope
push
(bad)
aad
push
iret
icebp
repz
inc
push
push
pop
iret
repz
pop
ins
je
sbb
cmp
cwde
lahf
cmp
test
sub
add
cmp
cmp
pop
sub
sub
xor
and
mov
or
in
mov
xor
and
mov
dec
out
sub
(bad)
repnz
test
xor
mov
add
push
loopne
xchg
push
adc
push
xchg
mov
je
js
mov
mov
push
movs
sbb
call
sub
jno
and
cmp
sub
nop
sub
in
jns
mov
jmp
cmp
ins
add
rcl
xchg
ss
fild
adc
ret
clc
jmp
xor
mov
or
enter
jne
mov
mov
add
loopne
aam
sub
daa
add
mov
adc
icebp
inc
mov
cmps
xchg
call
cdq
movups
call
call
push
fld
adc
ins
jecxz
adc
in
cmp
sbb
fs
pop
sbb
sub
xchg
pushf
cmp
loopne
add
or
inc
call
mov
dec
pop
sub
and
mov
or
loope
ret
jmp
scas
lock
cmps
or
push
inc
jmp
and
mov
pop
scas
jo
bound
addr16
push
clc
mov
gs
loope
sub
add
push
js
jmp
fs
inc
sub
mov
push
mov
int3
dec
cmp
dec
in
push
mov
dec
xchg
mov
push
and
cwde
shr
xchg
(bad)
cmc
pusha
pop
xor
ret
seto
sub
xchg
nop
sub
jl
lea
adc
jo
lds
sbb
jle
mov
mov
inc
pushf
push
fdiv
mov
sub
icebp
xchg
leave
cmp
imul
fistp
sbb
mov
ror
lods
xchg
ret
data16
repnz
das
into
jmp
cmp
mov
or
add
rcl
add
pop
and
dec
in
inc
lods
in
aam
in
movs
and
pop
mov
data16
in
imul
mov
test
mul
or
sbb
ret
imul
rcr
add
les
cmp
sub
push
sub
push
jb
and
mov
call
loop
sbb
lea
movs
ret
(bad)
stc
push
jne
mov
mov
mov
test
call
inc
xchg
in
in
repnz
test
loope
pop
sub
mov
xchg
mov
adc
lea
push
call
out
movs
jo
ror
mov
rol
jl
adc
inc
enter
and
push
mov
(bad)
xor
sbb
mov
mov
retf
xor
addr16
mov
sub
mov
adc
mov
add
xor
mov
dec
retf
(bad)
fdivr
sub
lods
bound
jo
push
sbb
dec
pop
sub
dec
push
sar
push
test
cmp
movs
rol
fiadd
adc
and
je
mov
(bad)
rcl
xchg
push
popa
into
mov
dec
inc
cmps
sub
sbb
push
sub
push
mov
adc
cld
mov
adc
xchg
add
push
es
in
dec
rol
dec
jbe
pop
adc
and
mov
pop
fild
enter
mov
sti
(bad)
les
enter
mov
(bad)
enter
xor
imul
adc
add
(bad)
nop
dec
in
dec
les
jb
enter
or
push
inc
std
mov
cwde
(bad)
xchg
mov
pop
jle
lods
push
les
movs
adc
and
mov
add
push
lds
push
push
shr
pop
dec
or
dec
shl
cmp
add
das
cld
add
cmps
icebp
(bad)
push
push
std
xchg
jg
xchg
mov
mov
leave
pop
rcl
iret
push
mov
inc
or
push
cmp
je
push
sbb
sbb
or
adc
jae
(bad)
stos
and
test
xchg
add
outs
jl
or
shl
cwde
sub
retf
retf
inc
test
sub
pop
mov
xchg
cmps
repnz
inc
test
mov
dec
call
adc
mov
retf
shl
pop
mov
sbb
pop
push
inc
inc
mov
add
mov
loop
mov
pushf
xchg
sti
call
lds
test
and
dec
mov
dec
cs
in
imul
sub
xor
push
cdq
retf
ins
lahf
xor
addr16
cdq
inc
add
sbb
and
jg
or
rol
pop
dec
out
cmps
or
icebp
inc
mov
test
inc
adc
add
add
inc
add
mov
add
or
adc
mov
test
add
inc
and
dec
movs
ucomiss
xor
in
and
adc
mov
adc
adc
mov
rcr
ret
int
add
push
add
add
repnz
add
mov
xchg
cmp
add
sbb
and
sbb
mov
inc
add
add
fnstcw
xor
and
pop
imul
lods
pop
inc
cdq
outs
mov
int3
mov
push
or
ret
sar
or
add
push
jbe
mov
fst
jno
and
sub
icebp
jo
sahf
test
rcl
add
jmp
cs
cmp
jecxz
fcom
and
fcom
jns
or
pusha
repnz
add
pop
dec
mov
push
cmp
stos
sub
push
mov
out
cs
adc
jo
jmp
pop
es
pushf
mov
in
adc
add
loop
mov
and
aam
je
pushf
jl
push
loopne
adc
dec
mov
or
lods
and
int3
(bad)
jb
pop
mov
dec
iret
fdivr
pop
in
ret
(bad)
jbe
xchg
cmp
mov
pop
(bad)
jmp
movs
push
sub
push
cmp
int
fisub
push
cmp
xlat
mov
add
sbb
out
jne
sbb
mov
add
aam
xchg
and
jl
add
pusha
repnz
cmp
mov
push
xor
dec
mov
dec
or
mov
(bad)
inc
jns
sub
mov
shr
or
mov
pusha
js
sub
cmps
js
repnz
xchg
sbb
sti
lods
lea
clc
add
les
push
pusha
pop
sub
mov
rcl
lock
imul
pop
push
add
cmovno
clc
pop
ret
sar
sbb
lods
fdivr
mov
and
xor
dec
cmp
and
adc
add
cmp
mov
gs
stos
movs
xchg
js
js
les
int
mov
or
add
pop
jmp
jg
and
outs
pushf
loopne
xor
pop
nop
inc
pop
and
xor
pop
sbb
clts
sbb
pop
shr
lea
(bad)
aam
push
dec
sbb
sbb
xor
je
xor
push
cmc
ja
pop
sub
addr16
xor
jns
shl
jmp
aaa
and
repz
(bad)
int3
rcr
xchg
lods
mov
cli
fwait
add
cmps
pusha
mov
leave
pop
sbb
adc
imul
mov
and
cmp
ret
push
add
mov
je
ss
push
fild
mov
mov
sub
xor
xchg
jno
push
push
adc
pop
rcl
int3
mov
xchg
add
pop
push
movs
jmp
mov
pop
pop
or
and
lahf
fmul
xchg
and
pop
sbb
cmp
push
je
and
pop
dec
xor
daa
dec
sub
add
fadd
leave
daa
es
jmp
sub
inc
push
inc
push
sub
imul
nop
dec
sub
(bad)
icebp
mov
movs
xchg
pop
sar
fs
retf
shl
push
cdq
(bad)
dec
outs
neg
or
outs
mov
add
add
cdq
mov
push
inc
and
sbb
aas
add
xor
dec
and
sbb
in
xchg
sub
push
pusha
dec
test
adc
xor
xor
mov
in
ins
lock
ret
repnz
enter
adc
stc
adc
inc
adc
xchg
dec
jnp
cmp
push
mov
idiv
lods
inc
cli
adc
scas
scas
xchg
mov
mov
push
in
cmp
dec
sub
rol
push
enter
in
push
sub
enter
add
cs
jb
sbb
xchg
out
sbb
or
adc
sbb
loop
lds
sbb
xchg
push
cmps
xor
movs
pop
nop
push
mov
push
push
icebp
shl
xchg
imul
and
stos
mov
and
push
movs
outs
and
jb
clc
imul
mov
pop
rdpmc
or
ret
jecxz
scas
or
idiv
and
je
cmp
ins
imul
fs
popa
enter
pusha
stc
xchg
or
cmp
(bad)
fistp
sub
adc
push
cdq
mov
jle
mov
sbb
retf
and
push
dec
mov
mov
fmul
cmc
dec
sub
mov
inc
(bad)
add
dec
adc
in
inc
sub
rcl
dec
out
and
sub
add
cmp
cmp
jl
pop
push
cmps
jl
stos
dec
mov
loopne
and
xor
ins
gs
xor
xchg
add
es
je
sub
or
inc
cvtpi2ps
ret
mov
adc
or
mov
test
adc
adc
push
push
lods
xor
mov
add
adc
cmps
push
cs
mov
add
mov
dec
xchg
sub
fst
xor
mov
or
inc
out
shr
call
dec
in
xchg
shl
push
not
imul
out
cdq
inc
push
pushf
retf
lock
pop
nop
lea
push
cmp
inc
or
pop
fidivr
ret
std
add
gs
and
mov
xor
stos
int3
not
add
arpl
das
fdivp
mov
pusha
or
pushf
outs
inc
test
push
outs
sub
push
outs
rcr
popa
inc
lods
sub
push
xchg
test
stos
int3
dec
movs
movs
or
ins
shl
mov
push
mov
call
jmp
pusha
inc
fisub
adc
mov
or
add
cmps
adc
sub
cmps
adc
push
mov
adc
dec
or
(bad)
mov
jecxz
xor
cmp
call
sbb
adc
dec
test
sbb
and
dec
jne
push
add
mov
pop
adc
and
xor
pop
sbb
arpl
enter
dec
or
cdq
inc
xchg
sar
(bad)
sbb
dec
xchg
ret
push
pop
fiadd
fisubr
pushf
add
cmp
mov
xor
rcr
test
dec
pop
push
call
mov
stc
inc
push
movs
rol
and
pop
cmp
xor
inc
setle
shr
xchg
sub
mov
pmaxub
sub
add
loopne
adc
jbe
xor
pop
cmp
jae
ret
movs
and
loop
push
mov
bound
popa
fdivr
mov
push
stos
adc
aas
ins
sbb
pusha
xchg
and
aas
jne
ins
pop
pop
loopne
test
inc
push
lods
movs
mov
xor
dec
inc
in
cwde
aam
sbb
mov
test
pop
les
imul
popa
cmp
fistp
or
lea
js
in
ins
pushf
rcr
dec
xchg
pop
adc
mov
push
mov
and
nop
sbb
mov
(bad)
addr16
popa
ffree
pop
mov
sub
mov
popf
sbb
(bad)
dec
push
jne
imul
cmps
adc
or
test
push
mov
xor
sar
(bad)
adc
leave
xchg
js
js
movs
inc
pop
sar
popf
sbb
movs
pusha
jae
mov
sbb
lds
add
push
das
std
shr
and
dec
xchg
lea
push
pusha
jl
sbb
mov
or
in
test
push
or
dec
mov
(bad)
jmp
bound
mov
sbb
cmp
adc
mov
xor
mov
daa
or
inc
call
nop
dec
enter
lea
rcl
cwde
pop
fdivr
or
dec
push
addr16
pop
in
or
int3
mov
xor
or
adc
sbb
jns
ss
xchg
cmps
ror
jo
fs
inc
int3
and
les
jl
push
ja
add
xor
adc
mov
push
ds
xchg
dec
cwde
and
xor
in
leave
inc
je
jle
leave
daa
mov
xchg
dec
es
loope
test
add
push
cmp
bound
add
fadd
sub
cdq
rcl
push
xchg
or
int
xchg
cmp
sbb
int
mov
enter
add
daa
nop
and
into
pusha
iret
inc
scas
inc
cs
iret
rol
adc
push
push
cmps
sub
leave
inc
iret
fadd
nop
pushf
rcr
dec
push
inc
add
xchg
outs
out
inc
dec
ins
mov
cmp
test
xchg
pop
inc
dec
sub
pop
or
mov
jl
add
adc
aam
xor
sbb
bound
lea
mov
or
jl
and
push
or
test
test
jo
add
call
das
daa
add
or
and
push
retf
and
dec
xlat
ret
ja
jp
add
inc
mov
shr
jne
test
aad
loopne
push
sub
lds
sbb
ds
xor
sub
and
or
add
dec
jge
sub
or
outs
adc
addr16
push
mov
dec
jne
pop
and
inc
sub
and
sub
or
add
cdq
ins
cmp
test
pop
fld
add
jmp
add
xchg
push
mov
inc
push
enter
add
add
in
cmp
jp
add
add
and
add
dec
nop
add
sbb
and
fcom
inc
add
and
pusha
mov
and
scas
dec
inc
inc
dec
jb
jg
pusha
add
pop
(bad)
cld
icebp
repnz
call
dec
jbe
mov
repz
cmp
ror
push
outs
inc
add
cmp
imul
nop
and
je
stos
sub
add
mov
les
sti
ret
add
add
adc
fnstcw
dec
mov
dec
mov
add
aas
xor
jae
outs
sub
lea
dec
sbb
mov
jbe
push
xchg
jg
inc
retf
shl
push
sub
test
push
mov
mov
add
add
shl
pushf
and
inc
inc
jno
push
getsec
test
pop
and
or
bound
inc
add
mov
lsl
mov
cli
ins
and
pop
cmp
out
jl
and
dec
bound
pop
aam
mov
sbb
pop
jns
sub
push
fcom
nop
xor
xchg
js
jne
aas
ins
sub
(bad)
iret
jg
gs
jecxz
inc
in
mov
clc
and
data16
cld
mov
adc
mov
popa
inc
push
lods
or
add
and
shr
jb
std
inc
ds
add
outs
add
add
fwait
or
test
and
mov
push
and
add
outs
xchg
sbb
add
popf
add
push
mov
adc
mov
adc
getsec
jmp
push
sbb
push
push
movs
and
adc
add
ds
mov
add
push
dec
sahf
dec
add
sbb
push
test
movs
xor
inc
movs
inc
repnz
push
add
movs
movs
movs
cmp
add
add
daa
lahf
push
test
and
pop
test
xchg
mov
test
mov
cmp
mov
add
pop
push
add
stc
movs
shl
push
add
cmp
inc
test
pop
sbb
in
and
pop
cmp
pop
popf
push
jno
test
push
xchg
dec
sahf
cwde
lods
add
push
xchg
xchg
inc
sahf
add
xchg
and
xchg
lods
add
aas
push
mov
in
pop
les
sbb
test
mov
sub
test
pop
test
test
push
lahf
push
shl
sbb
mov
cmp
lahf
lods
stos
shl
sub
test
cmp
xor
in
push
es
xchg
xor
sbb
xor
pop
xchg
adc
xchg
movs
mov
shl
xchg
adc
pop
mov
outs
add
dec
sub
adc
sub
push
daa
mov
lea
push
movs
sahf
xchg
cmps
push
inc
inc
add
pusha
push
jmp
dec
jae
sub
add
mov
add
and
dec
loopne
mov
(bad)
push
push
push
mov
jmp
int3
out
cmp
pop
in
add
add
xchg
sar
adc
jno
xor
add
mov
(bad)
fdivr
and
mov
popf
and
cld
mov
pop
in
and
repnz
cs
scas
xor
xchg
or
or
stos
and
or
push
retf
std
or
movs
out
xchg
xor
cmp
lods
mov
or
dec
adc
xlat
(bad)
cld
scas
sub
jae
loopne
mov
mov
adc
call
lock
movs
dec
enter
test
pop
adc
cld
adc
push
mov
jle
enter
sub
dec
mov
mov
test
cs
mov
mov
sbb
sub
sbb
fucom
sub
sbb
jb
push
push
pop
or
sub
push
test
and
push
std
sub
xchg
call
pop
and
in
je
and
push
test
pop
pop
call
es
mov
daa
outs
push
and
xor
lods
mov
jnp
fsub
and
out
push
mov
cmps
and
sbb
and
and
ret
and
and
mov
cmp
cmp
(bad)
ror
push
cld
sbb
pop
sbb
cmp
dec
pop
cmp
out
sbb
sbb
sbb
mov
in
ja
imul
push
sti
adc
leave
xor
adc
and
ja
sub
dec
cmps
mov
sbb
xor
push
push
es
or
or
jns
jns
or
or
jns
jns
or
pop
cld
jbe
jns
push
cld
add
mov
mov
push
xchg
sbb
fnstenv
mov
add
das
xchg
lea
int3
mov
pop
sub
xchg
or
repz
xchg
add
out
inc
sub
sub
enter
xor
call
inc
cmp
mov
add
push
ja
push
clc
jb
push
add
imul
ret
outs
pop
in
rol
sbb
add
add
in
xchg
das
add
pmulhuw
fs
add
xchg
(bad)
xchg
mov
mov
add
cmp
mov
test
mov
mov
nop
js
jmp
mov
add
adc
inc
mov
inc
pop
lea
stos
test
dec
adc
mov
push
inc
or
(bad)
mov
mov
sar
in
loopne
retf
mov
inc
mov
sub
cmp
cli
imul
outs
sbb
push
sub
pop
push
mov
or
inc
(bad)
cmp
pop
inc
xor
or
jnp
xchg
(bad)
push
and
js
jecxz
out
sub
or
mov
pop
sti
(bad)
jbe
push
outs
or
push
jo
aaa
pushf
(bad)
jmp
cs
(bad)
xchg
inc
mov
shl
xchg
int
xchg
inc
lods
push
or
outs
repnz
nop
or
or
fdiv
push
xor
fdivr
add
fisub
inc
jb
pop
add
sbb
(bad)
movs
mov
pop
cmp
jbe
push
pop
jp
les
sbb
adc
inc
sub
ret
ins
test
adc
icebp
pop
mov
call
loopne
test
xor
or
cmps
or
imul
mov
add
cmp
in
sahf
and
cmp
xchg
das
push
out
sar
mov
sub
dec
fwait
nop
adc
out
xor
inc
imul
int3
inc
nop
mov
pop
pop
call
jg
xlat
daa
pop
pop
and
into
lock
inc
jmp
popa
push
push
push
xchg
nop
dec
in
sub
and
ficomp
fisttp
test
popa
lds
xor
mov
jae
ins
mov
(bad)
repnz
fadd
dec
outs
or
movs
pushf
xor
mov
cmc
test
pmovmskb
push
ror
lea
adc
inc
or
mov
mov
mov
jecxz
sahf
sti
test
inc
retf
pushf
gs
fild
and
and
add
adc
pop
loopne
je
arpl
mov
cld
test
mov
test
mov
push
inc
or
loop
fwait
jo
inc
push
mov
rol
xchg
cmp
in
jle
arpl
pop
mov
je
jo
rcr
popa
test
add
dec
enter
add
cwde
pop
mov
add
mov
cmp
sub
fld
daa
ins
lods
imul
sub
xchg
pop
outs
mov
das
pop
xchg
inc
js
test
mov
loop
add
mov
mov
sbb
pop
sahf
es
jne
mov
mov
pop
imul
nop
test
ret
loope
xor
in
inc
inc
sbb
and
sub
jb
popf
adc
clc
mov
mov
popa
sti
call
mov
adc
shl
add
inc
cmp
jb
pop
arpl
mov
or
(bad)
cmc
push
dec
cmp
int3
shl
add
loope
fcmove
es
js
mov
add
shr
lock
call
push
jne
or
or
or
pop
fidivr
enter
pop
sbb
xchg
xor
sub
in
dec
lahf
xchg
push
inc
imul
neg
cli
sbb
mov
push
and
jo
adc
jbe
or
cmp
xor
mov
inc
adc
push
push
xor
aad
adc
push
call
div
mov
xor
adc
mov
repz
mov
adc
mov
push
or
cdq
loop
mov
clc
cmovno
into
inc
in
mov
in
mov
pop
mov
xor
out
adc
add
test
mov
mov
mov
jge
bound
icebp
pusha
mov
jmp
cmp
and
rol
xchg
xchg
cmp
imul
sbb
add
xchg
jne
dec
(bad)
inc
mov
(bad)
mov
mov
lods
(bad)
jmp
pop
sbb
xchg
cmc
mov
(bad)
xor
pop
add
mov
dec
inc
scas
pop
(bad)
or
inc
xchg
mov
enter
(bad)
lahf
cwde
inc
nop
xchg
mov
add
sub
es
mov
sbb
stc
sbb
push
stos
inc
mov
arpl
mov
imul
shl
pop
shl
movups
je
push
sub
and
pop
rcr
(bad)
and
aad
lock
ins
sbb
fst
mov
push
push
push
arpl
mov
jmp
jb
cmp
nop
mov
adc
iret
dec
mov
mov
les
pop
repnz
dec
mov
mov
xor
outs
add
jns
rcl
adc
fldenv
inc
sbb
jmp
inc
adc
rcr
sahf
clc
cmps
mov
(bad)
test
mov
cmp
jne
gs
ja
cld
inc
mov
xlat
mov
sbb
inc
sub
in
in
js
mov
dec
push
mov
push
or
add
pop
dec
jecxz
dec
mov
out
push
pusha
push
mov
or
push
jg
test
mov
jmp
mov
cmp
pop
movzx
(bad)
sub
js
call
aam
jp
add
sub
inc
cmps
push
and
adc
add
into
push
in
in
sub
imul
push
add
pop
mov
sti
pop
jmp
movs
add
cmp
sar
shr
sbb
into
mul
jb
sbb
add
xor
add
sub
aas
pop
rcr
adc
pop
lea
dec
mov
sub
std
xchg
mov
aas
pop
aas
jo
pop
mov
mov
mov
aas
out
inc
jl
or
sbb
jmp
pop
xchg
mov
rdpmc
test
retf
add
fs
or
adc
xor
(bad)
fadd
lea
rol
(bad)
loop
pop
cmps
cmp
icebp
jne
lea
std
and
js
rcr
je
or
or
sub
mov
sub
or
mov
add
sub
mov
pop
sbb
pop
sub
jmp
and
lods
ret
jnp
nop
add
fist
mov
cmps
inc
scas
and
xchg
push
or
cmp
mov
push
adc
sar
sbb
ja
push
movs
(bad)
mov
inc
mov
popa
scas
(bad)
shl
push
and
imul
imul
inc
js
inc
cmps
pop
cli
xor
cmps
idiv
(bad)
jo
push
pop
jmp
xor
pop
add
ss
inc
repnz
test
arpl
sahf
loopne
pop
or
jbe
xor
mov
jmp
pop
xlat
stos
push
sahf
ret
add
xchg
inc
sbb
je
out
lea
scas
add
push
jbe
test
pop
pop
or
xchg
imul
fcom
scas
cdq
and
mov
and
and
sub
cmp
es
movs
dec
adc
push
std
xor
sub
push
push
rcl
push
fld
jbe
jbe
fs
out
mov
mov
stc
dec
movs
loopne
dec
test
adc
in
xor
pop
push
daa
push
add
test
adc
jbe
mov
mov
push
scas
mov
sub
push
inc
gs
test
movs
cdq
push
push
mov
pop
pop
aas
push
jmp
push
sbb
das
and
popf
mov
pop
jp
xchg
idiv
inc
call
mov
movs
adc
mov
sbb
shl
xchg
inc
push
cmps
test
and
test
pop
xor
mov
sub
stos
mov
add
sbb
mov
and
dec
sbb
adc
mov
imul
add
and
and
inc
repnz
(bad)
push
sub
or
(bad)
push
sbb
ret
or
pop
cdq
pop
cld
sbb
push
pop
push
adc
dec
xlat
cmovs
nop
inc
sbb
inc
cmps
(bad)
and
imul
or
xchg
sbb
test
push
adc
xchg
out
mov
mov
xchg
adc
pop
xchg
cmp
enter
xlat
aaa
mov
cmp
ja
je
ret
test
sbb
push
imul
or
lods
cmp
loop
xchg
cmp
push
sbb
out
sbb
dec
int
fisub
xor
rcr
adc
mov
mul
add
cmp
stos
or
adc
fmul
cmps
mov
and
mov
cmp
mov
in
add
clc
mov
sbb
int3
sbb
add
and
or
sahf
shl
xchg
aaa
push
jle
ficom
push
mov
or
std
daa
pop
and
pop
test
shl
inc
add
push
outs
int3
add
leave
in
mov
mov
push
std
mov
gs
push
pop
push
push
xchg
sbb
(bad)
(bad)
and
test
lods
push
inc
sbb
add
test
dec
adc
test
dec
adc
xchg
cmps
mov
or
repnz
mov
adc
inc
inc
lea
xor
retf
push
je
je
push
xchg
xor
enter
shl
pop
enter
test
movs
cld
sub
in
aam
rol
jb
cwde
test
inc
dec
jo
movs
cmc
pop
(bad)
cdq
push
pop
idiv
fidivr
or
data16
mov
add
sbb
dec
and
(bad)
push
mov
into
rcr
pop
inc
push
push
fcomp
jno
jecxz
mov
jle
mov
xchg
or
dec
or
add
sbb
pop
inc
dec
jmp
add
add
push
or
cld
pop
cli
sti
push
je
inc
scas
aas
jle
or
cmps
cdq
cmp
in
sub
add
call
sbb
jne
into
xchg
dec
js
sbb
xor
test
rcl
jbe
pop
in
je
sti
lock
sub
dec
xchg
mov
cli
int
push
mov
adc
push
sub
stos
jne
mov
out
push
add
xor
or
out
add
int3
dec
loope
adc
jl
sub
push
pop
add
adc
cmc
loope
or
mov
fcmovnb
nop
icebp
jle
(bad)
or
cli
loope
add
arpl
jo
cmp
jge
(bad)
sbb
inc
xchg
add
cmp
mov
inc
xchg
dec
xchg
jns
xor
pop
jp
cmp
loop
add
dec
cmp
sub
popa
repnz
mov
mov
mov
je
push
fisttp
fsubr
jp
das
jnp
xchg
cmp
(bad)
jo
push
pop
ret
adc
pop
and
dec
mov
push
fpatan
pop
jle
addr16
jmp
ss
push
and
mov
or
dec
jp
sub
cmp
sahf
or
scas
call
enter
inc
sbb
mov
xor
cwde
pusha
jae
push
ror
push
mov
inc
ins
add
lea
add
mov
mov
sub
popf
ss
push
mov
jno
inc
push
mov
lea
inc
call
xor
ret
retf
mov
add
or
pop
pop
inc
push
sbb
xchg
imul
or
mov
out
lea
push
sbb
pop
jp
pavgb
cmp
mov
js
in
(bad)
push
cli
push
add
loopne
stos
scas
push
pop
sbb
xor
add
test
fiadd
icebp
xchg
sub
adc
shl
xchg
repnz
mov
cmp
add
fisttp
push
je
cwde
in
test
in
sbb
xor
in
cli
and
ficom
ds
shl
add
test
push
pop
les
xchg
pop
sbb
cmp
jb
fbstp
(bad)
add
cmp
call
or
dec
push
fcmovnb
add
add
imul
pop
inc
ins
pop
add
leave
sbb
ficomp
jno
xchg
cdq
cmp
and
rol
add
sbb
push
and
add
nop
pushf
mov
in
mov
mov
adc
or
fwait
sti
jge
pushf
sbb
lods
push
mov
sbb
std
jmp
dec
inc
or
pop
add
add
cmc
add
cmp
mov
ror
or
pop
and
add
mov
inc
push
push
and
adc
push
retf
mov
popa
inc
sbb
mov
push
xchg
pop
adc
add
sbb
xchg
jbe
dec
sbb
jge
inc
or
nop
sbb
leave
or
ret
rcl
dec
sahf
add
pop
idiv
sub
add
setb
mov
add
ja
mov
and
lods
mov
cmp
sub
cdq
clc
sub
stos
shl
inc
mov
inc
fadd
sbb
adc
mov
add
xor
dec
aam
jecxz
cmps
xchg
add
add
gs
adc
push
mov
inc
stos
mov
jle
es
or
ins
xchg
inc
in
jb
pop
mov
add
and
sbb
inc
adc
sbb
nop
sbb
call
movs
adc
adc
lea
pop
inc
icebp
(bad)
xor
rep
jae
jb
pop
push
scas
mov
or
push
and
daa
(bad)
fisub
adc
dec
push
retf
rol
xchg
pop
push
mov
mov
gs
repnz
sub
ret
push
addr16
shl
outs
mov
fisttp
stos
stc
push
push
(bad)
(bad)
pop
push
iret
cmp
inc
jp
out
and
les
scas
leave
or
inc
dec
xor
stos
sub
std
sub
retf
fist
add
inc
mov
inc
outs
add
gs
dec
les
or
div
stos
jp
pop
xchg
sbb
mov
fstp
cdq
in
mov
sbb
mov
push
jne
inc
cs
dec
mov
mov
sahf
mov
and
cwde
fcmovnbe
ret
in
inc
push
pop
retf
movs
popf
mul
mov
test
mov
fisttp
sbb
add
jo
sbb
pop
sub
or
iret
jmp
pop
out
dec
dec
push
mov
add
in
add
test
popa
cmps
stc
mov
mov
add
stos
in
rcr
xchg
stos
xchg
cs
stos
fimul
mov
sbb
mov
mov
test
nop
xchg
cwde
movs
mov
cs
push
push
sbb
test
popa
jle
add
xchg
mov
push
xrelease
mov
add
(bad)
imul
cwde
(bad)
call
sbb
cmp
jb
jg
pop
push
pop
adc
dec
sbb
lock
pmulhuw
add
sub
jmp
jmp
xor
(bad)
push
adc
dec
jmp
or
add
mov
add
loopne
add
in
inc
fsubr
add
dec
pushf
idiv
dec
je
mov
movs
pop
test
std
ds
sub
cmp
fcom
mov
inc
shr
and
test
wrmsr
pop
mov
lods
mov
and
sbb
or
jae
pusha
push
imul
mov
push
pop
mov
sbb
or
call
or
xor
jo
call
xchg
in
mov
clc
call
jo
cmp
mov
push
or
imul
dec
push
mov
cmp
dec
cld
and
sbb
je
loopne
rol
je
xchg
mov
fs
dec
add
xor
inc
or
loope
jge
lea
mov
or
dec
test
push
add
or
fs
push
add
int3
cmps
retf
popa
cld
or
sbb
xor
mov
test
std
cmp
jge
push
jecxz
std
mov
nop
retf
dec
mov
mov
adc
push
popa
ret
int3
lods
and
xchg
cs
and
push
xor
or
push
xchg
je
dec
fdiv
xor
loopne
ja
retf
or
jmp
or
add
sub
cmp
mov
push
rol
stos
test
and
push
mov
ss
in
cmp
jge
es
xor
and
push
add
add
imul
push
and
pop
lods
or
or
xchg
and
pop
sub
mov
push
or
sbb
cmps
repz
push
adc
lea
cmp
mov
test
xchg
push
inc
mov
test
sbb
xchg
inc
mov
(bad)
enter
push
fld
mov
xchg
sub
sbb
xchg
rcr
lock
or
movs
mov
test
adc
test
loop
sbb
xor
push
mov
mov
mov
or
es
or
data16
jmp
push
pop
inc
jno
or
pop
dec
dec
gs
sub
dec
call
add
push
push
loopne
mov
add
ret
mov
repz
sbb
sub
mov
mov
data16
add
rcr
and
inc
mov
pop
je
adc
push
add
(bad)
sar
cmp
or
and
adc
sbb
xor
ja
sbb
retf
js
inc
dec
xrelease
smsw
push
or
push
push
xchg
adc
rcl
rcl
sub
jne
sbb
rol
push
leave
out
or
psubusb
add
aad
sbb
daa
les
push
pop
leave
sbb
sbb
sub
arpl
mov
or
push
jmp
dec
and
lea
jno
lock
inc
push
fnsave
stos
push
test
and
add
add
shr
dec
pop
push
cmp
fsubr
mov
push
stc
movs
mov
add
jno
movs
and
xlat
xor
add
add
mov
inc
sahf
cwde
(bad)
fld
adc
push
xor
ss
dec
pop
push
cmp
mov
add
push
cmp
and
dec
push
cmp
adc
jnp
pop
(bad)
push
rol
fs
mov
inc
loopne
jle
in
add
xor
xor
mov
shl
sub
mov
arpl
xor
lahf
fwait
movs
mov
mov
or
pop
and
add
pop
ror
test
popa
cmp
add
add
inc
les
mov
mov
js
std
sbb
js
aas
(bad)
daa
or
add
pop
sbb
(bad)
mov
sbb
stc
adc
push
xchg
sub
cli
rol
adc
dec
or
adc
icebp
fdivr
adc
fs
movs
sti
lock
dec
xchg
adc
adc
fmul
push
inc
jmp
lds
jb
and
int3
cmp
pop
int3
movs
xchg
pop
mov
mov
push
mov
xchg
xchg
lods
add
and
inc
(bad)
mov
or
add
ror
adc
pop
stc
and
pop
or
pop
js
sbb
mov
cmp
mov
dec
add
or
pop
sbb
mov
test
imul
gs
in
sti
or
pop
mov
mov
aad
clc
mov
jo
test
int3
mov
or
test
sar
jb
or
repz
inc
sbb
lods
mov
dec
sub
in
pop
inc
jmp
pusha
add
dec
outs
or
pusha
sub
jge
sbb
sub
or
es
mov
or
stc
ret
cmp
fstp
xchg
and
lods
ret
and
pop
adc
xchg
or
repnz
je
(bad)
jmp
int
jl
adc
add
pop
ret
leave
pop
sbb
inc
fwait
or
jge
lods
jo
add
sub
or
and
addr16
pop
inc
inc
std
lods
fwait
inc
mov
jb
pop
pop
popa
lods
pop
sbb
cmp
push
cdq
jne
sub
add
adc
inc
pusha
xchg
jp
add
pop
jl
jns
es
call
outs
push
sbb
rol
pushf
or
dec
aas
ret
jmp
leave
inc
mov
dec
ret
pop
xor
lea
addr16
sbb
sbb
cmps
mov
inc
mov
pop
cmp
fdiv
mov
or
adc
movs
test
lods
lods
sub
adc
adc
or
lods
cld
dec
add
jnp
dec
xchg
or
mov
dec
gs
loope
add
aaa
cli
scas
jno
dec
add
mov
push
std
cli
jb
fcom
mov
pop
bound
mov
xor
movs
xchg
fadd
std
add
jae
leave
and
imul
nop
pop
lahf
call
and
ret
lds
adc
pop
mov
mov
cwde
and
sub
push
test
jnp
adc
fdiv
and
ins
aas
inc
jb
pop
push
xor
push
sub
add
mov
sbb
pop
xor
or
add
or
pop
dec
push
jmp
add
jge
inc
int3
cmc
cmp
mov
add
mov
cmp
sub
(bad)
mov
inc
inc
push
sbb
lods
in
sahf
add
lock
push
(bad)
popa
ins
push
and
pusha
pop
add
popf
xor
xor
or
or
lock
lock
push
std
jbe
dec
dec
inc
stc
mov
and
and
or
push
inc
sub
or
nop
add
xor
dec
dec
frstor
add
or
in
jecxz
out
push
adc
push
mov
inc
add
adc
xchg
push
test
or
add
popf
xor
adc
push
in
jbe
in
add
mov
cmp
jae
mov
cs
outs
inc
icebp
add
add
push
sbb
ret
adc
in
add
or
or
adc
cmp
lds
add
push
add
arpl
call
mov
in
or
xchg
in
ret
push
aad
mov
xor
(bad)
lds
adc
lock
call
jns
dec
mov
pop
xor
bound
cmp
sbb
xor
or
das
(bad)
xor
push
pop
sub
mov
inc
(bad)
call
(bad)
push
dec
mov
cmp
pop
dec
mov
mov
int3
inc
pop
(bad)
inc
mov
fnstsw
scas
cmp
inc
(bad)
mov
add
or
loope
xchg
cmp
call
int
cmps
and
dec
and
sbb
add
in
ds
push
push
inc
int3
lea
push
lahf
sti
inc
cld
lea
xor
lods
mov
sbb
and
fsubr
jnp
pop
fst
sub
sub
mov
xchg
in
sbb
add
shr
xchg
mov
sbb
cmp
sub
das
jp
mov
mov
jmp
fistp
cmp
(bad)
es
nop
mov
sbb
dec
adc
sbb
jbe
sub
mov
or
xchg
lods
nop
sub
(bad)
icebp
daa
mov
out
sbb
cmp
jne
fwait
iret
adc
cld
sub
ret
add
sbb
add
adc
test
push
mov
add
mov
je
pop
mov
mov
pop
xor
mov
push
call
mov
adc
mov
add
sbb
adc
pop
inc
add
sub
icebp
inc
inc
and
mov
push
cmp
arpl
push
mov
fist
or
jo
sbb
xor
iret
mov
fs
xor
es
mov
pop
dec
jne
mov
add
push
cdq
push
push
push
push
add
or
add
ins
xor
pushf
cmp
inc
mov
or
lods
test
test
push
and
shl
cmp
mov
lods
in
pop
add
sbb
xor
loopne
cwde
sbb
into
push
movs
add
cmps
adc
mov
adc
push
adc
stc
push
add
cmp
cmc
les
add
jne
loopne
ror
and
add
sahf
outs
push
xor
mov
dec
or
test
xor
cli
adc
and
pop
mov
std
mov
mov
sbb
inc
add
(bad)
push
push
xor
in
clc
lea
jns
mov
or
cmp
rol
outs
xlat
add
pop
pop
out
shl
aas
and
dec
jb
ss
sbb
outs
add
pop
cmp
sub
mov
(bad)
sbb
mov
movs
les
cmp
mov
enter
inc
ds
das
xchg
int3
jno
stos
shl
or
push
ffreep
adc
scas
int3
cmp
or
pushf
mov
pusha
or
mov
sbb
fdiv
test
xchg
lock
and
lods
mov
mov
or
pop
xor
mov
out
or
add
out
les
(bad)
cdq
push
adc
jbe
sub
(bad)
test
mov
icebp
add
jmp
imul
popa
ins
fld
cmps
mov
add
pop
lea
add
dec
les
jbe
mov
sbb
nop
(bad)
dec
mov
ins
add
pop
jne
and
in
es
adc
add
in
or
and
arpl
adc
pop
ja
and
jbe
add
or
dec
sub
mov
adc
sub
sbb
aaa
js
adc
xchg
xchg
mov
and
mov
sbb
je
push
or
pop
xchg
push
add
xchg
cmp
test
jmp
sub
xor
push
mov
and
add
add
fld
or
icebp
cmp
add
mov
jo
or
test
cmp
push
mov
ins
inc
mov
sbb
pop
fadd
dec
jnp
dec
cmp
sbb
mov
cs
jns
int3
mov
leave
and
mov
ins
add
or
mov
adc
pusha
push
push
adc
xchg
inc
mov
sbb
cmp
mov
ins
add
add
and
test
in
nop
xchg
add
jbe
jae
jbe
mov
enter
jbe
inc
sbb
add
or
fbld
or
mov
test
inc
push
adc
mov
int
loopne
jmp
dec
inc
outs
sub
jbe
out
mov
les
std
scas
mov
ror
je
shr
add
adc
pop
jmp
ss
sub
mov
les
mov
mov
sbb
adc
sub
ss
adc
dec
sbb
sub
or
movs
or
imul
or
loop
and
mov
and
ret
int
mov
and
cmp
cmp
inc
or
mov
adc
std
bound
dec
and
dec
adc
mov
dec
or
inc
sbb
cmc
sbb
das
push
or
(bad)
or
mov
jmp
add
cmps
mov
fs
dec
or
mul
xor
lods
outs
push
pop
dec
and
pop
dec
pop
adc
mov
or
mov
and
add
out
invd
jle
jae
adc
and
mov
push
scas
mov
or
sbb
and
and
add
or
js
es
and
pop
pop
mov
jbe
push
aad
or
dec
cmps
add
stos
mov
add
(bad)
movzx
adc
or
and
adc
adc
pop
cmc
sbb
and
xor
and
sbb
arpl
sub
sbb
(bad)
inc
adc
xchg
pop
cmp
scas
adc
dec
fsub
jne
loop
popf
inc
xchg
and
dec
sbb
dec
cmp
sbb
push
and
push
mov
mov
inc
loope
dec
retf
mov
add
cmp
ins
(bad)
test
clc
and
add
adc
cmps
data16
add
pop
inc
dec
lahf
in
xlat
in
ret
mov
in
pusha
mov
cmp
or
push
add
out
fs
and
test
sbb
aam
adc
and
jecxz
adc
mov
add
mov
fwait
inc
adc
sub
push
out
sub
test
mov
fbstp
outs
sbb
xor
inc
sbb
and
jmp
outs
push
jo
push
ins
mov
mov
(bad)
lock
pop
rcr
sub
and
pop
cs
fsincos
push
xlat
int3
je
push
add
sbb
inc
xor
or
xor
and
add
rcl
ds
retf
xor
jo
cmps
or
add
mov
pop
popa
cwde
out
push
push
dec
mov
pop
fadd
mov
mov
push
hlt
xor
aam
cwde
xchg
push
in
mov
mov
outs
mov
add
mul
xor
jb
xchg
adc
stc
ins
mov
add
shl
or
and
cmp
cmp
add
ins
add
ins
and
push
test
in
inc
fwait
add
or
ins
adc
add
cdq
cmp
repnz
mov
cmp
ja
in
inc
add
loopne
cmp
add
jbe
jae
loope
add
jo
dec
movs
mov
sbb
jecxz
adc
jb
xor
sub
ja
and
xor
test
mov
mov
retf
adc
sbb
and
(bad)
xchg
add
or
popa
cli
pop
scas
mov
test
shl
pushf
xchg
dec
inc
pop
pop
movs
xchg
add
push
or
ja
and
jnp
mov
adc
inc
or
pusha
in
jnp
or
dec
pop
and
or
inc
sub
je
jnp
adc
mov
add
pop
mov
lods
stos
sub
aad
push
mov
and
ja
push
test
sub
sub
xor
das
sub
and
dec
add
push
cmps
mov
push
add
mov
iret
push
repnz
add
ins
xchg
enter
or
iret
xchg
ja
enter
add
loopne
cmp
mov
jmp
xchg
and
add
ins
jbe
jae
leave
pop
xchg
add
pop
dec
imul
cmovl
in
adc
popa
inc
nop
clts
shr
and
dec
mov
imul
sahf
add
ins
mov
cmp
jae
and
add
dec
or
add
mov
ds
add
nop
adc
aam
in
fild
sub
sub
data16
jno
in
mov
les
lock
and
add
aam
push
push
jae
mov
pop
dec
sbb
and
das
jns
fiadd
and
dec
inc
mov
lea
ds
jo
rcr
add
xor
jnp
es
add
pop
and
pushf
std
sub
jmp
ret
push
add
and
sub
xor
pop
push
sub
lea
sbb
call
test
mov
pop
mov
mov
ins
push
loopne
mov
in
enter
push
jecxz
mov
out
push
invd
loope
jg
mov
test
call
push
mov
mov
mov
(bad)
mov
mov
mov
sub
stos
xchg
add
in
(bad)
push
movs
pop
pop
pushf
inc
xor
cmp
rcr
(bad)
mov
pop
or
daa
rcpps
sbb
rol
pop
xor
fiadd
fdivr
retf
jbe
es
fwait
or
push
mov
fdiv
pop
sbb
(bad)
ss
jne
outs
or
fild
pop
adc
or
mov
lock
clc
cmp
rcl
call
sub
pop
adc
in
cmp
sub
mov
call
sub
(bad)
in
retf
adc
dec
xor
ror
inc
or
adc
xor
sbb
sbb
aam
dec
nop
ins
xchg
nop
in
fcmovbe
add
mov
or
adc
adc
es
pusha
mov
inc
jl
push
mov
sub
adc
ins
mov
or
cmp
shl
retf
xchg
(bad)
in
outs
add
iret
fs
pop
cmps
push
push
push
pop
sub
mov
ja
test
scas
sub
add
mov
pop
add
push
inc
mov
cmp
inc
enter
jbe
test
mov
and
cmps
gs
ins
push
les
lock
and
xlat
and
jmp
xlat
pop
rcl
xchg
adc
inc
push
bound
or
push
mov
ds
sub
push
push
push
inc
pusha
fdiv
push
and
rcr
cmp
sub
or
adc
out
dec
ret
fwait
mov
shl
nop
xchg
cwde
dec
shl
lods
mov
dec
shl
mov
mov
test
mov
lock
shl
aam
add
aam
cld
push
mov
push
fisubr
sahf
retf
or
neg
push
lea
inc
cmp
jbe
loopne
cmp
rcr
sub
in
mov
fdivr
ins
and
cmp
jecxz
or
mov
mov
inc
add
outs
jb
mov
shl
hlt
cmp
push
adc
inc
push
cmp
clc
call
cmp
push
adc
leave
add
xor
fisttp
pusha
jne
xlat
imul
in
cmp
add
pop
sub
aas
popf
sub
jmp
rcr
test
sub
ret
test
pop
sub
hlt
pushf
test
cmp
rol
or
or
add
jg
push
mov
(bad)
fidiv
xchg
dec
push
xchg
xchg
and
xor
sbb
test
xchg
jle
pop
add
jmp
adc
lea
rcl
or
mov
add
rol
shl
mov
clc
call
into
sub
movs
inc
cmps
jbe
fcmovne
adc
clc
fmul
ret
sbb
pusha
xchg
or
sar
ret
jb
or
loopne
xor
lea
test
dec
ja
lea
or
cdq
loopne
lea
dec
lock
sbb
jle
es
jle
xchg
aad
dec
aam
dec
call
dec
or
aam
stc
sar
sub
mov
jl
jmp
cmps
xchg
enter
xchg
shr
iret
(bad)
and
jbe
mov
sub
sbb
les
jmp
and
test
imul
ror
xchg
sar
and
iret
clc
jmp
loopne
mov
xor
sbb
mov
add
push
int
cmc
sti
and
jle
and
in
xor
inc
shl
shl
fidivr
xor
cli
mov
lea
loop
jns
push
test
outs
add
ss
repnz
sub
into
(bad)
lock
test
jne
push
and
jo
mov
(bad)
mov
cmp
and
adc
dec
and
ror
hlt
jne
push
or
int3
and
add
cmp
mov
and
ret
push
popf
sub
mov
imul
loope
mov
sbb
daa
mov
mov
inc
sbb
daa
or
cmp
mov
(bad)
pusha
fsub
sbb
xor
sahf
inc
sbb
adc
aam
sti
sti
je
add
mov
add
or
std
(bad)
clc
sub
in
cld
mov
mov
pusha
mov
adc
and
loopne
and
and
or
ror
dec
adc
sub
call
add
adc
pop
cs
or
push
add
sbb
daa
add
sar
sar
test
jne
xchg
jne
cmp
add
ja
xchg
inc
push
mov
cmc
adc
cmp
fwait
xchg
fs
cld
je
inc
jmp
push
dec
enter
jmp
xor
sbb
inc
arpl
in
add
or
mov
add
call
xchg
mov
inc
ret
push
and
and
push
out
mov
inc
add
aam
pusha
add
shl
push
add
jmp
or
jmp
sbb
push
in
or
div
mov
sar
fcom
pusha
push
sbb
adc
push
(bad)
mov
mov
or
xchg
(bad)
loop
pop
adc
adc
or
sbb
and
jbe
inc
or
shr
test
fidivr
xchg
xchg
retf
add
inc
enter
adc
add
jb
repz
pop
fs
shl
push
mov
sub
inc
xor
and
or
push
out
lods
mov
sbb
fcomp
sub
cmp
xor
fild
ror
sub
push
(bad)
(bad)
int3
mov
sbb
or
jmp
fisub
in
sbb
shr
add
add
sbb
xchg
mov
sbb
pop
cld
(bad)
fcomp
sub
adc
cli
enter
jbe
sub
push
mov
mov
inc
inc
pop
cmc
mov
sub
sbb
out
mov
pushf
and
add
fistp
pop
iret
jo
cmp
and
pop
in
mov
inc
cs
fs
mov
pushf
clc
js
mov
sub
push
sub
or
cmp
shr
adc
popa
les
push
jo
shl
sub
mov
movs
lea
cmp
sahf
push
xchg
int3
xor
loop
out
add
xor
sbb
dec
cld
add
inc
mov
shl
nop
enter
test
push
rcr
or
ins
and
push
push
pop
jmp
inc
arpl
and
je
mov
lock
jmp
pop
into
shr
mov
inc
sub
mov
std
xchg
out
mov
add
into
call
mov
mov
push
mov
inc
vaddsubps
pop
in
mov
and
test
sbb
fsub
fst
xlat
imul
popf
push
mov
and
mov
sub
dec
mov
mov
cs
outs
adc
xor
and
mov
or
and
mov
lock
push
mov
inc
ins
mov
xchg
ret
or
cmp
imul
inc
mov
shr
xor
dec
or
lock
pop
js
cmp
cmp
leave
bsf
ds
scas
rcl
stc
jns
cmc
xor
xor
pop
sbb
and
ret
movzx
dec
nop
aaa
add
inc
mov
psrlq
mov
push
add
and
push
test
dec
adc
or
add
jl
pop
sbb
fcomi
add
jb
mov
or
add
lar
jb
jb
add
push
pop
jb
jb
or
or
jb
jb
or
push
cmovne
dec
push
pop
pusha
cmp
xchg
or
inc
sub
push
dec
jl
mov
aas
cmp
repz
inc
repnz
lds
call
cli
ja
push
pop
inc
adc
sbb
daa
mov
mov
sbb
or
jecxz
mov
xor
sbb
retf
push
add
adc
or
rol
jno
fcom
out
adc
lock
mov
push
push
lods
xchg
jp
dec
clc
test
mov
daa
je
je
pop
aam
(bad)
push
adc
push
aad
sahf
sbb
mov
sbb
je
xor
xchg
xor
loope
inc
inc
dec
adc
mov
inc
clc
sbb
jle
jne
and
jp
sbb
mov
jne
and
push
shl
sub
in
pop
add
cld
jmp
mov
cld
lods
jle
or
or
inc
or
adc
bswap
xchg
and
rol
push
cmp
das
shl
ins
inc
jns
push
(bad)
mov
mov
test
addr16
dec
rol
fsubr
es
or
je
gs
cmp
push
push
lods
dec
mov
dec
adc
mov
mov
dec
pop
push
xlat
or
pop
xor
dec
pushf
adc
popa
test
xchg
inc
xor
jne
(bad)
mov
hlt
aaa
test
clc
dec
lea
cli
xor
pusha
inc
or
test
sbb
add
sbb
xor
push
mov
mov
pusha
mov
or
sub
jbe
and
adc
inc
push
xor
movs
add
pusha
imul
or
cmp
shl
aam
or
test
jle
jne
lea
jmp
je
ret
pop
fwait
push
clc
pop
mov
mov
xchg
mov
and
mov
sbb
imul
dec
or
push
mov
sub
(bad)
jmp
outs
popa
(bad)
pop
leave
cmp
je
cmp
cmp
jne
push
push
or
xor
jmp
pop
test
mov
pop
das
adc
popf
jmp
push
jmp
jae
les
std
sub
sbb
add
jnp
ja
outs
or
xchg
mov
loop
adc
test
sub
mov
ss
mov
add
sub
dec
add
cmp
jbe
xadd
push
(bad)
jnp
jne
sub
add
sub
push
mov
cmp
add
daa
jne
fidiv
iret
jecxz
xor
sub
lea
add
mov
cdq
hlt
ss
rcl
ins
fsubr
and
cmps
cmp
or
psrlw
sbb
dec
cdq
icebp
add
xlat
outs
sbb
jge
and
ja
jns
das
adc
inc
xchg
scas
mov
sbb
iret
(bad)
jmp
in
out
mov
mov
mov
inc
sub
inc
cmp
cmc
out
push
loopne
add
sbb
add
test
xor
pop
inc
ret
jl
test
(bad)
jle
js
xchg
inc
pop
add
dec
add
add
sahf
xchg
push
adc
cmp
sar
scas
mov
test
jmp
add
out
enter
add
push
jp
dec
add
das
out
jo
mov
lods
fstp
cmp
adc
fs
cmp
dec
pop
call
fld
repnz
rcr
add
sbb
or
xor
pop
inc
imul
std
and
jmp
xchg
imul
sahf
mov
dec
jne
or
add
and
call
in
inc
hlt
cmp
jne
scas
test
paddb
mov
mov
xor
out
clc
fwait
mov
dec
sbb
and
add
or
or
pop
shr
sbb
fisubr
xor
and
loop
add
bound
(bad)
xchg
cmp
mov
mov
lahf
or
ds
adc
inc
sbb
push
aam
push
push
aaa
in
into
call
repnz
and
cmp
push
hlt
not
push
dec
add
pushf
mov
jl
cld
cdq
sbb
scas
movs
sbb
mov
scas
in
mov
repz
dec
mov
loopne
mov
sub
mov
or
aad
jbe
les
enter
leave
xchg
pop
leave
rcl
fsub
stos
pop
fsubr
clc
daa
pop
fs
lods
in
or
cmp
mov
and
jae
mov
nop
rcl
adc
jbe
jl
add
daa
inc
pop
jp
sub
mov
je
lods
int3
outs
and
dec
imul
repz
fisub
or
ss
cmp
mov
shl
push
mov
and
add
ret
pop
les
mov
inc
fistp
jp
and
pop
push
das
push
rcr
cmp
jae
mov
jmp
xor
mov
xor
and
sbb
fstp
lods
pop
adc
lea
rep
jb
sub
cld
pop
push
or
sub
fnstenv
rcl
js
push
shl
mov
mov
add
sub
mov
test
sbb
mov
pushf
jmp
mov
xchg
sub
jb
lea
add
mov
mov
or
jg
mov
dec
adc
adc
jnp
mov
movs
jmp
retf
js
retf
inc
and
jae
pop
out
lock
inc
mov
int3
ds
cmp
xchg
and
or
add
add
and
mov
and
cmp
xor
mov
clc
mov
cmp
mov
rol
stos
call
mov
lock
or
ss
adc
lods
fild
stos
add
jns
dec
jnp
movs
pop
or
mov
push
pop
inc
fmul
ins
push
inc
es
dec
adc
rcl
sub
sbb
xchg
mov
or
and
jb
adc
cdq
mov
imul
mov
inc
sbb
push
and
popa
or
cmp
add
add
sub
or
inc
and
jge
inc
cmp
push
and
add
or
mov
push
stc
cmp
icebp
pop
fisttp
cmps
cs
test
inc
mov
cmp
add
xchg
in
push
or
inc
dec
adc
xor
or
dec
out
jmp
cmp
test
jnp
int
cdq
push
or
(bad)
xchg
adc
add
mov
stc
pop
fstp
loope
add
or
jmp
push
jmp
push
mov
jmp
inc
lock
cmp
xor
idiv
mov
aas
push
inc
repnz
inc
sub
inc
xor
jmp
xchg
dec
inc
adc
sub
sub
cmps
fstp
or
mov
inc
je
sub
jmp
jbe
mov
out
xor
(bad)
mov
ror
dec
std
movs
cdq
fs
and
mov
js
ds
dec
mov
movzx
rcl
rol
adc
das
je
xchg
pop
pop
and
cld
push
mov
pusha
add
jge
loop
pop
fld
mov
fild
lea
and
inc
push
or
lahf
jne
jb
push
push
xor
(bad)
cmp
retf
xchg
jge
cmp
cmp
mov
push
push
ja
or
sbb
loopne
mov
jmp
sub
add
pop
adc
push
daa
pop
iret
retf
mov
icebp
loop
and
fnstsw
dec
rol
add
add
fmul
test
and
and
or
rol
mov
inc
or
pop
into
cmp
pop
xor
cmp
cmps
enter
push
xchg
lahf
jmp
pop
sub
push
and
mov
mov
cmovb
in
mov
mov
lock
jg
cmp
and
(bad)
mov
jg
push
jne
inc
inc
jmp
push
ja
test
xor
lock
mov
adc
mov
imul
xchg
ret
test
clc
mov
xchg
shr
test
inc
cld
and
sbb
push
jle
test
add
in
outs
xchg
jmp
dec
or
je
ficom
xor
push
das
pop
neg
add
out
mov
pop
scas
mov
add
popf
mov
push
inc
test
(bad)
push
adc
xchg
test
push
mov
and
rcr
out
add
xor
add
inc
movs
in
add
push
xchg
or
sbb
sub
xchg
cli
dec
call
inc
jne
sub
push
mov
hlt
sbb
jp
rol
xchg
(bad)
mov
mov
movs
in
add
btc
inc
cmp
loope
mov
(bad)
mov
adc
mov
lea
push
add
js
test
mov
pop
add
call
jb
sbb
test
pop
ret
(bad)
add
shl
loop
push
add
nop
sbb
shr
add
cmps
clc
and
push
push
movs
or
iret
cmp
out
add
or
push
mov
mov
cs
and
retf
mov
sbb
adc
cmp
sti
jl
dec
loopne
(bad)
imul
add
(bad)
ja
dec
sub
xchg
xchg
add
retf
lock
push
sbb
pop
mov
add
ret
xchg
std
pusha
and
inc
xchg
mov
add
les
xor
test
fs
push
lock
cmps
push
and
pop
sbb
push
jno
cmp
sub
mov
push
sbb
ss
adc
aam
dec
xor
or
add
call
or
pushf
scas
jecxz
or
jbe
pop
je
stos
sub
xchg
dec
jmp
xor
inc
mov
add
lods
and
and
push
call
mov
pavgb
push
xchg
xchg
fcmovne
scas
jbe
mov
push
leave
mov
das
stc
pop
retf
scas
xchg
je
inc
inc
inc
or
(bad)
je
mov
push
add
clc
mov
in
sti
mov
and
pop
dec
repz
add
adc
mov
adc
je
sub
dec
inc
xor
movs
shl
and
and
or
jle
inc
push
or
sbb
lock
enter
add
jbe
mov
jnp
sbb
ins
or
jmp
rcr
jle
mov
add
or
(bad)
mov
or
or
in
mov
sbb
ror
adc
icebp
mov
pop
add
cwde
and
rcr
pop
jb
xor
xchg
xchg
call
push
push
add
in
dec
inc
loopne
int
in
jae
add
push
push
pop
rol
pop
jno
mov
in
daa
push
xchg
shr
adc
sbb
loope
or
dec
mov
bnd
ins
inc
lock
add
mov
loop
pop
aaa
mov
dec
les
or
(bad)
adc
or
dec
hlt
or
xor
in
addr16
fsub
and
loopne
fisubr
ss
xor
pop
test
rol
and
or
mov
adc
les
sbb
cs
ja
cmp
call
add
adc
and
add
cmp
add
push
int3
dec
or
cmp
sub
inc
add
pushf
and
imul
js
push
xor
add
bound
xor
adc
add
jns
add
test
es
jmp
in
shl
xchg
add
mov
xchg
pop
ja
fisubr
ss
dec
add
cmc
add
inc
xchg
lock
inc
add
lock
mov
dec
and
call
cmps
jnp
mov
dec
cmp
stos
bound
in
mov
push
sar
cs
or
mov
lea
ins
das
daa
aad
xor
hlt
adc
cmp
pop
xchg
inc
pushf
adc
inc
xchg
pop
jmp
cmps
test
lock
mov
inc
ret
cmp
dec
or
add
dec
jbe
sub
xor
push
int3
add
clc
pop
dec
popa
jmp
sahf
add
mov
xchg
(bad)
pop
loopne
push
(bad)
dec
push
push
xor
pop
push
clc
sub
arpl
jmp
test
or
mov
loopne
and
inc
leave
icebp
xchg
dec
pop
jbe
sub
add
(bad)
loopne
ffreep
imul
xor
dec
dec
mov
dec
dec
dec
fldcw
push
mov
add
or
out
mov
mov
sbb
mov
xchg
ins
sahf
int
dec
dec
cmps
dec
sub
dec
ss
aas
xchg
daa
lahf
sub
adc
retf
mov
cmp
jle
mov
out
adc
push
clc
sahf
or
add
stos
imul
xor
inc
(bad)
push
sub
mov
sub
add
mov
fldenv
push
es
test
add
call
cmps
xor
pop
adc
adc
push
cmp
add
call
pop
out
mov
inc
imul
add
or
jl
ja
dec
inc
fild
lds
jl
push
adc
or
loope
adc
push
and
jge
mov
es
nop
fwait
pop
loopne
call
xor
test
call
inc
sub
sub
adc
mov
into
mov
or
sbb
addr16
in
sbb
sbb
pop
or
call
sbb
ret
jb
and
mov
fimul
or
(bad)
stc
and
nop
or
rol
sub
out
dec
or
xlat
jmp
inc
mov
dec
cmp
pop
clc
cmp
iret
lds
or
jmp
inc
and
sbb
aas
mov
loope
jb
popa
or
mov
sub
pop
push
or
inc
xor
clc
or
clc
dec
adc
stos
pop
mov
xchg
lock
cmp
jg
lahf
adc
enter
inc
mov
jp
inc
sub
neg
add
adc
(bad)
hlt
test
hlt
jle
ror
add
sub
pushf
je
call
jo
push
sbb
jnp
jl
aas
idiv
test
sbb
inc
inc
cdq
add
repz
push
test
(bad)
dec
loop
push
inc
imul
retf
push
out
add
push
sub
xor
scas
cs
mov
in
add
dec
jl
in
sub
stc
inc
pop
or
xchg
mov
ja
pop
add
cs
rol
jb
fstp
daa
pop
dec
test
movs
inc
loop
add
or
jb
mov
push
sub
push
add
std
es
jp
(bad)
ins
adc
dec
fcmovbe
test
movs
enter
push
retf
push
cmp
and
inc
add
loop
push
loope
adc
push
fimul
stc
xor
mov
mov
or
bound
jae
jnp
and
loopne
cmp
stos
mov
cmp
outs
xchg
push
sbb
pop
inc
inc
repnz
sbb
lods
jo
lea
nop
pop
add
pop
push
lea
push
aam
or
jnp
push
push
push
add
add
cs
call
add
push
mov
or
mov
mov
les
adc
push
clc
pusha
push
xor
inc
mov
repnz
popf
adc
or
mov
sbb
call
add
adc
cmp
icebp
imul
lock
js
xchg
push
add
push
imul
call
inc
cmp
out
fcom
lock
adc
sbb
cmc
sar
xchg
retf
(bad)
sub
push
retf
pop
cmp
sbb
add
push
or
shl
movs
xor
test
(bad)
test
fiadd
or
ror
out
dec
das
add
sbb
pop
jo
call
cmc
pop
fwait
or
jne
pop
sbb
add
jae
ret
in
out
std
push
sbb
jmp
(bad)
xor
jmp
add
add
dec
pop
cmp
je
fimul
dec
adc
cmps
dec
dec
dec
retf
sub
sahf
stc
adc
dec
or
mov
dec
nop
add
imul
int
mov
push
adc
push
mov
push
or
shl
sbb
push
xchg
pop
retf
mov
or
pop
or
mov
sbb
or
jbe
pop
outs
imul
add
inc
lods
fcmovb
test
pop
popa
dec
dec
mov
or
test
inc
clc
stos
cmp
cmp
mov
cmp
add
mov
cmp
mov
fmul
sub
inc
mov
dec
(bad)
mov
xchg
int3
sbb
jmp
add
xor
pop
cmovl
aam
idiv
adc
dec
mov
or
pop
data16
xchg
hlt
cmp
sub
push
xchg
cmp
add
pop
xor
xchg
ins
inc
adc
dec
mov
fs
(bad)
or
mov
push
push
sub
cmp
or
call
push
pop
jl
int3
dec
sar
add
cmp
or
mov
push
pop
or
dec
mov
dec
fs
enter
pop
or
js
or
or
and
jo
and
xchg
popf
test
add
add
pop
mov
div
mov
add
mov
sbb
mov
pop
and
imul
inc
mov
lods
xor
imul
jnp
mov
out
in
inc
pop
mov
pop
jl
retf
sbb
int
ins
pop
jle
ficomp
mov
ins
sahf
adc
inc
stos
fsubr
push
adc
xor
pushw
outs
xchg
or
sbb
add
inc
pop
sbb
or
ror
pop
add
addr16
xchg
fsubr
mov
cs
adc
and
(bad)
dec
fist
fs
hlt
adc
or
cld
shl
mov
push
pop
ss
(bad)
xchg
cwde
and
fdivr
pop
clc
mov
pop
xchg
lea
fisub
or
shl
pop
push
mov
je
dec
mov
jecxz
push
test
push
cmp
(bad)
pand
and
sub
leave
fs
call
lock
sti
push
pop
lea
mov
push
rep
aaa
and
ret
dec
nop
xor
sbb
push
repz
cmps
outs
add
fwait
xor
sub
push
jae
inc
inc
(bad)
ins
pop
test
sub
js
out
ret
sbb
and
xchg
inc
cdq
jmp
push
push
movs
mov
xchg
repz
sub
cmps
push
push
dec
gs
dec
or
pop
push
pop
wbinvd
push
(bad)
shl
inc
push
push
es
add
imul
sbb
push
cmp
nop
adc
add
adc
jmp
dec
push
pop
sbb
inc
mov
xor
cmps
pop
or
inc
xor
inc
ins
xor
xchg
cmp
fsubr
mov
and
jmp
or
mov
xor
mov
adc
push
xor
mov
je
addr16
and
nop
sbb
push
(bad)
xor
sbb
or
(bad)
mov
and
es
inc
mov
inc
in
out
push
out
mov
mov
cmp
clc
mov
xor
sbb
xchg
lods
fistp
mov
inc
popa
sbb
mov
mov
sar
iret
je
test
imul
cs
sbb
enter
shl
and
mov
push
cmc
add
xor
rcr
test
ins
adc
push
adc
pusha
fisttp
imul
jmp
arpl
inc
ins
sub
add
sub
cmp
dec
add
jmp
je
xchg
test
and
dec
push
inc
jo
xor
pop
in
bound
mov
mov
les
mov
xchg
sti
lds
push
add
cmp
mov
inc
cwde
jbe
sub
inc
jl
retf
cmp
mov
sar
cmp
(bad)
mov
add
ficom
xchg
add
mov
dec
sbb
xor
mov
push
push
mov
xor
dec
pop
add
adc
jle
loope
pusha
fcomp
add
push
add
xor
pop
push
rcl
call
pop
stos
jmp
dec
sbb
mov
add
mov
add
outs
int
aaa
clc
scas
mov
add
add
cmp
and
adc
pop
es
pop
sub
and
fiadd
mov
adc
xchg
sub
lock
sub
mov
jo
dec
adc
sahf
nop
inc
js
add
adc
cmps
fbld
add
add
pop
jne
cmp
and
out
mov
fiadd
add
add
cmp
xchg
push
jecxz
fldcw
inc
mov
pop
lods
js
je
ins
inc
and
add
jnp
pop
sbb
ficom
adc
fwait
(bad)
jnp
lahf
icebp
je
sbb
add
mov
fidivr
sti
movs
and
pusha
lock
loopne
inc
sub
add
cmp
jge
(bad)
pop
and
ss
cmp
clc
adc
push
movs
aas
add
jl
test
and
mov
fstp
mov
pop
cmp
sahf
mov
add
or
es
add
xchg
xor
and
inc
sti
int3
add
sbb
dec
add
adc
jge
adc
iret
imul
jnp
and
jne
test
das
sub
or
xchg
sahf
sbb
jnp
sub
push
add
or
fild
and
mov
movs
jne
mov
sbb
rol
fiadd
or
add
add
rcl
out
fst
add
cmp
sahf
loope
in
dec
test
mov
loopne
add
xor
js
add
xchg
mov
mov
add
push
or
ret
sar
push
loopne
jnp
mov
inc
or
ss
pop
je
cmp
imul
dec
loop
dec
punpcklbw
adc
fsubr
cmp
aaa
xchg
pop
xor
test
xchg
sbb
fidivr
add
xchg
mov
movs
mov
and
mov
mov
inc
jbe
jl
jle
push
lods
inc
cmps
adc
mov
xlat
jne
imul
outs
scas
repz
jmp
pop
adc
retf
sbb
or
aam
xchg
imul
shr
jge
inc
push
or
mov
pop
sbb
mov
push
sbb
jmp
dec
cli
inc
imul
daa
jbe
xlat
mov
xchg
and
loop
adc
inc
fwait
sub
fst
push
dec
sub
adc
push
fs
xchg
enter
shl
rcr
mov
popf
adc
test
or
sub
sbb
aas
mov
inc
xor
pop
call
das
pop
xor
adc
or
adc
mov
push
mov
add
push
sub
push
enter
add
adc
pusha
leave
inc
and
push
leave
adc
pop
jb
cmps
shr
add
or
rol
pop
ja
jae
call
sub
sub
popf
jno
or
mov
mov
lock
jmp
pop
dec
mov
xchg
pop
inc
or
adc
mov
dec
xchg
adc
adc
in
ins
xchg
adc
pop
repz
stos
mov
sbb
mov
cmp
or
sbb
mov
mov
xchg
jo
xor
clc
pop
ds
mov
dec
shl
inc
arpl
lds
xlat
jo
pop
add
mov
(bad)
ds
xchg
lock
mov
add
mov
cld
retf
adc
sub
jl
out
leave
iret
sar
push
mov
(bad)
push
or
cmp
nop
dec
dec
and
mov
push
cmp
xchg
sub
shl
mov
jmp
sbb
nop
add
jmp
aas
dec
sub
sbb
outs
or
inc
mov
mov
or
rcl
add
movs
or
pop
shl
ss
xchg
shr
adc
pop
call
test
in
dec
(bad)
mov
pop
cwde
inc
push
mov
movs
mov
movzx
mov
fbld
mov
push
pop
aad
push
and
and
cmp
retf
push
mov
je
ds
es
pusha
dec
imul
cdq
stos
mov
test
adc
mov
in
cwde
cmp
jne
cld
pop
push
repz
cld
call
ss
xor
pop
dec
fiadd
mov
adc
jne
jne
jecxz
je
push
inc
push
daa
sub
and
ja
les
xchg
mov
nop
push
cmp
arpl
mov
fadd
repz
mov
ins
ret
push
in
mov
xchg
cwde
cdq
add
add
inc
call
and
sbb
sbb
pop
into
pusha
xor
cld
or
pop
mov
lea
invd
dec
cmp
fistp
push
test
sub
lods
push
add
mov
pop
xor
xor
add
(bad)
loope
cmps
sub
xor
mov
gs
push
leave
jns
add
cmovle
add
jle
xor
mov
fwait
mov
xor
xor
shl
into
pusha
mov
das
fsubr
into
push
stos
pop
stc
inc
xchg
scas
push
ins
nop
jp
mov
lds
push
nop
push
push
pop
push
outs
sbb
mov
mov
or
cmp
movs
iret
pop
shl
dec
cmp
pop
push
push
into
add
aaa
sub
sbb
pop
or
fchs
or
in
pop
int3
mov
fsubr
and
jns
outs
dec
lea
sbb
mov
add
movs
mov
dec
mov
adc
imul
test
add
dec
and
repz
sbb
shl
int3
imul
ja
imul
adc
loope
popf
cmc
rcr
sbb
popa
xchg
mov
jo
push
mov
stc
xchg
nop
bound
mov
mov
(bad)
ss
xchg
add
jne
shl
outs
aas
das
ret
or
lds
mov
or
push
inc
xchg
pop
mov
cwde
retf
aam
lea
xchg
(bad)
imul
or
adc
push
inc
test
adc
loopne
adc
adc
in
sbb
add
add
ror
and
xor
jge
push
sbb
mov
sub
leave
aam
push
inc
sbb
rol
pop
jb
mov
push
pop
jge
iret
addr16
ret
fidiv
mov
es
out
movs
push
push
add
or
ins
jmp
xor
mov
jl
(bad)
(bad)
dec
mov
push
sub
jp
mov
jae
push
mov
inc
shl
sub
adc
mov
jmp
outs
fnstcw
sbb
jbe
mov
aaa
repnz
push
retf
les
mov
sub
inc
cmp
je
loopne
sbb
push
mov
sub
add
xor
xor
sbb
inc
(bad)
jnp
call
xchg
jl
inc
mov
pop
movs
popf
retf
imul
xor
(bad)
pop
test
or
fsub
or
pop
add
mov
js
nop
mov
sub
stc
hlt
adc
mov
or
push
adc
movs
adc
mov
inc
and
pusha
push
test
js
or
iret
retf
xchg
sub
lds
repz
in
add
sub
loope
test
(bad)
jl
and
ret
sbb
mov
dec
sbb
inc
daa
imul
or
or
ins
and
or
scas
jo
clc
dec
adc
push
fadd
mov
test
test
repnz
adc
fadd
lods
outs
pop
(bad)
ret
sar
adc
mov
inc
imul
jb
mov
add
and
(bad)
arpl
lea
adc
jnp
push
into
pusha
(bad)
ret
outs
movs
mov
lock
jmp
mov
cmp
mov
sar
gs
ds
dec
push
or
sbb
test
adc
rol
retf
fs
xchg
push
adc
add
adc
(bad)
out
loopne
adc
push
xchg
push
adc
adc
dec
shl
(bad)
xchg
xor
stc
call
in
fadd
cdq
fs
fcom
ror
cdq
fs
jecxz
xchg
mov
cmp
lahf
mov
inc
fs
lock
inc
push
pop
shld
fwait
jg
leave
push
lea
add
pop
push
fadd
ret
push
jnp
sub
dec
or
or
mov
(bad)
dec
or
fistp
jecxz
out
add
mov
xlat
rcl
popa
mov
sar
push
outs
sbb
sub
sbb
push
scas
push
push
add
or
cwde
ds
imul
adc
dec
xor
dec
call
or
xor
rcl
shl
scas
mov
(bad)
(bad)
pop
or
jbe
repnz
inc
loopne
mov
(bad)
pop
nop
(bad)
pop
push
mov
inc
(bad)
pop
sbb
(bad)
fnsave
call
enter
mov
pop
js
pop
push
pushf
adc
je
sbb
rcr
icebp
mov
mov
xor
add
jmp
sbb
add
push
xchg
xor
mov
seto
sbb
cld
xchg
test
mov
adc
or
(bad)
sub
out
mov
and
mov
jb
stos
cmp
mov
repnz
mov
rcr
push
sbb
mov
mov
cmp
js
int
loope
int
rcl
add
mov
mov
adc
push
imul
mov
setne
pop
jno
inc
(bad)
and
tzcnt
jbe
stos
push
add
xchg
pop
lods
aaa
jmp
sti
std
push
or
push
aas
hlt
rol
lods
jmp
cld
sub
or
or
add
or
mov
mov
mov
lods
mov
nop
add
push
xor
popf
jns
movs
jne
pop
or
fwait
cld
cmp
aas
add
cdq
imul
and
rcr
inc
ss
xchg
sub
add
test
sub
aam
add
xor
add
or
or
or
adc
inc
rcl
xchg
inc
push
adc
mov
or
test
dec
cdq
dec
scas
fs
xchg
pop
ja
ins
dec
es
adc
xor
adc
sbb
or
adc
es
adc
dec
xchg
mov
sti
push
cmp
inc
xchg
das
sbb
clc
or
mov
clc
adc
or
in
adc
xor
or
pop
sbb
enter
cwde
sbb
leave
xchg
or
test
sbb
cdq
scas
pop
test
or
mov
adc
pusha
add
dec
in
pop
push
xor
pop
outs
sub
sbb
push
lods
cmc
add
cmp
mov
dec
dec
das
sub
jl
push
jne
mov
mov
sub
test
adc
push
mov
into
(bad)
dec
daa
aad
stc
inc
mov
popa
fsubr
lods
das
sub
sub
fisubr
out
add
clc
add
adc
clc
cmp
add
and
pop
pop
xchg
js
mov
or
popa
dec
jmp
xor
or
cmp
dec
or
es
or
jecxz
cmps
push
push
inc
push
add
cmp
in
pop
adc
sbb
and
and
dec
push
or
and
add
cmp
enter
jb
xchg
push
outs
fisttp
or
je
or
mov
aaa
mov
add
and
nop
sub
and
in
push
add
dec
cmp
popa
sub
inc
cmp
jne
push
push
cmps
xchg
or
je
ja
push
(bad)
add
adc
hlt
outs
jno
mov
dec
or
cld
push
xor
xor
sub
xchg
jmp
cmp
push
or
shl
shr
movs
push
xchg
add
js
stc
pop
les
das
or
cdq
je
int3
push
daa
push
xchg
push
mov
push
add
pop
push
add
add
jbe
xchg
push
fisttp
and
xor
sbb
jmp
jne
outs
(bad)
or
push
xchg
lock
jno
or
(bad)
or
sbb
push
std
add
inc
call
pop
icebp
and
sub
xor
aaa
or
push
fsub
add
inc
jmp
cmp
and
jp
adc
mov
test
(bad)
adc
inc
jnp
loope
dec
fisttp
and
pop
arpl
movs
ret
adc
sub
adc
push
mov
popf
inc
jp
shr
ror
sub
adc
or
add
hlt
jo
out
cmp
jle
outs
ror
adc
shl
(bad)
adc
enter
and
movs
movq
leave
push
sbb
loop
iret
adc
rcl
adc
adc
dec
leave
nop
add
retf
adc
and
fs
add
test
clc
(bad)
or
add
fs
in
sbb
xchg
jl
vmovups
fdivr
add
inc
sbb
cmps
popf
je
int3
sbb
add
sub
or
and
or
adc
sub
adc
or
inc
imul
inc
xlat
jb
and
sbb
sti
call
jp
inc
ror
mov
ror
sub
aaa
or
dec
or
cmps
fadd
aas
or
mov
or
ret
aas
pusha
outs
or
push
or
ret
pop
or
adc
(bad)
and
inc
push
je
in
push
add
add
lods
and
inc
mov
xor
das
cs
dec
and
(bad)
push
aas
outs
mov
and
in
inc
fst
pop
sbb
and
ja
push
mov
and
into
jge
or
shl
pop
mov
dec
repz
cld
add
add
sbb
xchg
jmp
ret
adc
fstp
xchg
push
dec
cmps
loope
mov
adc
adc
mov
push
(bad)
aam
pop
jb
mov
mov
dec
sbb
xchg
imul
or
mov
mov
dec
jnp
bnd
push
push
pusha
lock
adc
or
inc
test
mov
or
push
mov
sti
ss
sbb
je
scas
mov
inc
add
pop
out
inc
add
add
mov
or
and
dec
(bad)
nop
fcomp
jg
pop
adc
fiadd
hlt
or
push
push
and
clc
push
xor
pusha
jno
adc
scas
and
sbb
call
pop
pop
inc
mov
xor
pop
adc
call
or
popa
and
aad
lds
add
and
pop
std
outs
adc
sbb
out
je
jne
lea
adc
stc
clc
daa
xor
xor
push
rdmsr
and
cli
push
adc
shl
push
sub
xchg
mov
ds
mov
push
imul
mov
push
ret
or
or
pop
adc
aas
mov
and
cs
js
mov
push
imul
add
sbb
fwait
mov
sbb
(bad)
in
mov
fild
pop
ss
xor
mov
jmp
adc
jb
push
jl
cmps
push
push
retf
jns
cmp
int3
push
jne
adc
mov
jmp
push
push
pop
or
sbb
xchg
sbb
ja
movs
dec
in
(bad)
nop
mov
add
inc
add
and
sub
push
pop
sti
je
inc
cld
jg
test
(bad)
dec
cld
sub
push
ins
sahf
or
cmovle
sub
mov
sbb
sbb
jle
mov
or
(bad)
jmp
xor
shl
jecxz
and
sbb
mov
(bad)
aad
fild
xor
mov
adc
pop
add
mov
call
enter
mov
add
push
add
cmc
stc
mov
or
mov
adc
ret
ret
mov
pop
add
adc
push
sahf
add
adc
or
cdq
jmp
jbe
sbb
lds
je
add
rol
loop
xchg
lahf
and
xor
data16
xchg
test
jl
ds
cmps
imul
jg
mov
xchg
neg
ret
cmp
sub
clc
pop
fsubr
fidivr
inc
aas
adc
ins
jp
pop
xchg
inc
jo
adc
sar
cs
mov
and
outs
sar
push
daa
xchg
dec
mov
add
push
js
or
pusha
cmps
movs
cmp
lock
std
add
dec
and
push
sbb
loopne
int3
add
jbe
enter
push
xchg
adc
cmp
ffreep
xchg
inc
clc
jmp
mov
cmps
pop
jg
push
shr
sub
add
mov
push
cmp
jmp
and
and
xor
dec
mov
mov
repnz
push
push
sbb
sbb
jo
mov
add
out
and
cmps
jmp
pop
add
sub
retf
stos
xor
mov
scas
retf
loopne
fcomp
fild
mov
push
in
cdq
js
adc
or
lock
mov
sub
(bad)
xor
ret
fild
mov
add
or
mov
or
loop
add
lea
xor
xchg
or
push
or
jmp
jmp
xor
or
inc
fdiv
xchg
pop
jge
and
dec
pop
lea
mov
jge
or
stos
shl
enter
or
mov
and
mov
dec
pop
inc
mul
mov
push
ja
inc
push
enter
add
dec
adc
mov
hlt
cmp
mov
push
mov
mov
pop
retf
sub
mov
xchg
mov
and
or
jns
or
push
pop
or
xor
dec
xchg
or
sti
jns
sub
adc
sub
sbb
add
add
inc
mov
mov
pop
xor
lds
sbb
inc
pop
push
cli
adc
lods
retf
rcl
loopne
or
mov
mov
push
dec
inc
or
mov
mov
inc
mov
cmps
sub
cmp
in
push
(bad)
jle
or
jecxz
sbb
mov
addr16
imul
mov
adc
pop
sbb
sub
psllw
shl
clc
shl
add
fild
push
dec
lea
pop
cmp
add
movs
inc
jmp
add
sbb
fbld
push
test
or
add
add
xor
loopne
xor
push
adc
or
fcmovne
ret
popa
pop
dec
mov
lods
ret
pop
dec
repnz
ss
pop
ins
addr16
add
sub
cli
iret
inc
shl
ret
jge
push
pop
sbb
or
shl
mov
stos
or
add
jno
push
rcl
inc
mov
pop
and
hlt
adc
lock
push
sbb
pop
push
pop
jl
mov
push
ror
cmp
das
push
jl
mov
jge
movs
jne
jne
xchg
push
push
adc
call
push
jbe
push
ins
and
mov
(bad)
jbe
pushaw
cdq
pop
loopne
or
or
or
and
dec
aaa
sahf
or
xchg
mov
adc
or
dec
xor
sbb
or
push
ja
(bad)
cmp
shl
or
cmps
or
imul
sub
push
lahf
sbb
and
repz
adc
mov
adc
push
sbb
int3
and
add
(bad)
or
mov
call
in
mov
gs
jp
push
adc
and
mov
pusha
mov
and
push
in
jo
cmp
add
or
lock
sub
mov
jge
bound
call
mov
cld
add
es
mov
lock
test
fmul
mov
add
dec
rol
mov
pop
lea
adc
cmps
and
push
xor
int3
ret
or
popf
ins
lahf
lock
das
xchg
ins
stos
sbb
inc
lock
lods
xchg
popf
xchg
les
lea
sub
add
adc
push
rcr
scas
or
add
adc
call
and
mov
pop
fidivr
fidiv
pop
neg
mov
push
mov
test
popa
mov
int3
pop
add
into
test
mov
sbb
pop
loope
and
cmc
rcl
popf
scas
xchg
sbb
mov
cmp
dec
jae
dec
cld
or
dec
fsub
imul
jo
jbe
mov
add
aas
push
loopne
pop
fistp
adc
sub
sbb
add
jp
jg
in
lods
(bad)
int3
mov
push
jg
fadd
stos
jle
call
repnz
rcl
cmpxchg
rol
dec
nop
xchg
out
inc
dec
jle
shl
or
xchg
push
or
and
add
xchg
lahf
cld
xchg
and
pop
sub
inc
jb
shr
in
mov
push
xchg
fs
call
mov
xor
pop
leave
mov
pop
mov
int3
mov
mov
jg
pop
sub
rcl
pop
sbb
cwde
fstp
outs
or
xor
add
dec
mov
ds
pop
adc
stos
mov
dec
nop
push
xchg
add
push
sbb
sahf
jl
xchg
sbb
xchg
out
push
mov
push
jnp
ins
adc
inc
xlat
mov
es
xchg
or
les
in
push
mov
xchg
push
xchg
xchg
or
and
call
popa
ins
lock
loope
add
xchg
stos
push
jno
aam
fisubr
mov
es
adc
push
arpl
sbb
(bad)
pusha
mov
fucomip
aam
aaa
push
lock
adc
loopne
mov
in
xlat
add
push
pop
and
or
mov
xor
mov
add
add
lahf
aas
shl
jno
std
shl
ins
push
sbb
cli
stc
add
or
or
shl
cmp
xchg
cmc
movs
adc
push
sbb
movs
in
or
adc
js
sar
aas
pop
and
sbb
stos
cld
mov
jmp
push
movs
adc
test
ret
sub
ins
push
jb
cmc
cmp
mov
push
arpl
adc
les
cld
xchg
mov
mov
xchg
cmp
sub
sbb
scas
daa
loopne
dec
call
add
mov
dec
or
sbb
adc
lods
popf
retf
add
and
test
mul
iret
add
in
loopne
div
fadd
add
mov
cmp
inc
add
and
sbb
push
push
test
aaa
ret
and
adc
sahf
stc
push
xlat
add
je
lods
hlt
push
mov
xlat
das
loop
adc
cmp
cmp
adc
scas
fcomi
aaa
test
or
test
add
mov
ror
add
inc
mov
mov
mov
push
or
add
sbb
or
add
push
test
or
movs
sbb
push
add
push
dec
mov
xor
sbb
int
test
lock
lahf
xchg
xor
lds
mov
cmp
js
ds
and
popa
cmp
repnz
ins
pushf
icebp
or
in
sbb
push
int
in
int3
inc
or
movs
pop
cmps
clc
shr
pusha
cld
or
push
ds
or
inc
shl
jle
or
out
in
add
mov
adc
ins
(bad)
cli
lods
xor
xchg
mov
mov
add
push
test
dec
xchg
nop
sub
retf
fcom
add
adc
inc
enter
adc
fsub
push
enter
pop
cmp
test
xor
sbb
or
stos
mov
loope
mov
rcr
sub
adc
fmul
xchg
xchg
aam
js
sub
adc
and
gs
xor
inc
fsub
push
pop
mov
mov
sub
sub
sbb
adc
xor
in
rcl
std
rol
inc
add
cmp
sub
jg
xor
xlat
add
pop
data16
jmp
jmp
lock
push
pushf
mov
in
je
dec
lods
in
pop
shl
push
outs
aad
push
cmp
stos
and
or
sbb
push
or
push
in
mov
push
jae
fld
aaa
and
sbb
add
gs
shl
or
or
bound
icebp
mov
dec
js
ja
push
hlt
les
mov
stc
stos
popa
mov
stos
adc
add
in
sti
add
inc
push
sub
xor
mov
ins
mov
cdq
and
dec
pop
mov
adc
out
dec
jp
loopne
pop
push
lock
jge
nop
mov
inc
daa
pusha
scas
lds
adc
mov
cli
retf
jg
adc
retf
dec
in
jg
loopne
imul
push
and
pop
clc
mov
mov
xor
repnz
cli
mov
mov
in
add
and
jp
xchg
rol
and
loopne
pop
xchg
in
dec
add
push
inc
movs
sub
fsubr
mov
shl
mov
inc
or
jne
adc
test
mov
mov
cwde
adc
shl
into
pushf
aad
in
add
in
lock
xchg
cmp
fst
sbb
popa
dec
push
jns
xor
fsubr
push
xchg
add
cmc
hlt
call
sub
test
(bad)
into
les
aaa
jne
mov
movs
push
pusha
cmp
pushf
pusha
jne
mov
fsub
inc
cmp
adc
ss
mov
fcom
mov
clc
sbb
pop
xchg
jl
adc
(bad)
in
movs
in
push
pop
xor
leave
mov
cdq
mov
test
inc
in
mov
inc
pop
push
loopne
cmps
pushf
(bad)
stos
imul
je
scas
lock
pop
or
jb
popa
aas
hlt
cli
pop
leave
enter
hlt
mov
cld
dec
push
hlt
lock
movs
or
add
adc
movs
push
imul
cld
(bad)
pop
test
adc
push
mov
mov
inc
mov
or
xchg
aas
clc
or
add
mov
sbb
pop
clc
ins
ins
mov
outs
jg
jnp
imul
je
jae
pop
movs
add
inc
call
inc
push
cdq
push
or
scas
lock
retf
jbe
or
mov
jno
clc
les
xchg
push
in
sub
jmp
dec
in
adc
xchg
jmp
mov
inc
mov
cmp
xor
out
fisttp
pop
setae
xor
add
push
in
xor
jns
mov
push
lock
dec
or
sar
adc
inc
lods
cmp
int
inc
loope
fmul
mov
pusha
fmul
add
rol
mov
mov
in
lods
or
mov
mov
add
add
pop
push
or
adc
add
sub
inc
stos
movs
add
mov
mov
jecxz
inc
stc
imul
popa
adc
(bad)
in
jg
ret
lods
lea
push
push
push
mov
cs
fidiv
mov
jmp
adc
jo
push
loopne
(bad)
xchg
xor
push
sbb
leave
push
or
test
cmp
xlat
or
daa
adc
cs
sub
cli
retf
pop
sub
adc
stc
and
mov
rcr
into
loope
and
add
je
and
cmp
inc
lea
add
vpcmpgtb
sub
out
dec
xchg
lahf
adc
enter
dec
add
stos
push
xor
adc
mov
fisttp
dec
sbb
jo
or
rcl
inc
cmp
add
add
adc
clc
pop
ins
ins
push
jne
sbb
xor
sbb
sbb
sbb
sbb
fnstcw
mov
lods
arpl
mov
push
sub
ret
ds
ins
jge
fs
jmp
test
dec
loope
inc
rol
test
add
(bad)
(bad)
ss
mov
movs
pushf
in
daa
in
call
aad
bound
adc
lahf
cmp
jbe
or
into
jle
sub
xlat
sub
push
js
jg
mov
cmp
adc
add
fdiv
enter
add
test
sub
mov
lea
out
push
add
ror
add
or
loope
push
inc
aas
xor
aam
mov
add
sar
push
adc
pop
xchg
xlat
inc
add
push
pusha
ror
mov
jmp
or
sbb
lahf
xor
pop
sub
push
fsubr
push
add
int
ins
or
sub
(bad)
push
fwait
or
mov
push
stc
aas
or
shr
push
and
push
sub
push
les
stos
or
mov
add
cmp
lea
dec
add
sub
aam
call
(bad)
mov
pop
cmps
mov
mov
aad
rol
xchg
nop
loopne
aam
or
jbe
call
and
pushf
aaa
pop
jmp
movs
imul
pop
pusha
lods
dec
and
les
and
je
or
rol
jge
test
rcl
sub
int3
fisttp
ja
fild
pushf
adc
pushf
xchg
cmp
shr
icebp
adc
dec
lahf
or
add
es
sub
add
adc
dec
mov
mov
nop
lds
in
cmp
ins
mov
add
and
sub
add
shl
or
std
push
push
inc
fcom
in
aam
pop
inc
push
daa
pop
in
mov
inc
cmp
pop
ror
in
mov
cwde
test
in
mov
push
dec
rol
retf
mov
into
stc
jnp
loopne
aam
test
xor
aam
xchg
or
enter
inc
lahf
ds
adc
or
sbb
mov
int3
sub
int3
ds
or
sbb
jno
sub
test
fcom
das
cli
pop
test
push
das
in
popa
dec
and
sub
rol
or
mov
and
jl
inc
push
fcomp
shr
in
push
js
sbb
in
mov
imul
push
mov
jp
mov
jl
sub
pop
jp
ficomp
rol
push
enter
sub
dec
cmps
enter
cdq
xchg
enter
sbb
data16
popfw
cs
ins
mov
mov
stc
(bad)
repnz
aas
adc
jmp
cld
sbb
dec
cld
xor
add
sti
or
popf
mov
push
adc
scas
dec
sbb
enter
xor
dec
nop
outs
add
nop
inc
loopne
mov
test
mov
and
ins
int3
push
leave
adc
jge
clc
sbb
inc
cdq
push
je
xor
test
push
sbb
xor
adc
fsubr
ret
mov
cmp
movs
ja
sbb
cmp
push
loopne
call
imul
xchg
call
cli
inc
mov
and
adc
push
dec
dec
mov
test
sub
retf
nop
aas
xor
cmp
dec
inc
adc
inc
clc
pusha
inc
xchg
xchg
sar
add
scas
stos
cmp
repnz
add
mov
adc
lea
jbe
(bad)
scas
mov
mov
stos
sbb
xor
pop
or
repz
imul
hlt
push
inc
fs
sti
in
rcr
inc
push
sahf
push
lahf
sbb
sub
xlat
add
pop
inc
outs
and
aaa
mov
cmp
in
je
adc
inc
pop
repz
call
inc
add
xchg
out
dec
jbe
inc
jp
aaa
test
add
and
rol
fs
dec
scas
popf
xor
sbb
or
mov
mov
adc
aam
je
rcr
iret
sbb
shl
cld
test
sbb
add
cmps
xor
dec
and
stos
push
pushf
mov
fucomi
push
pop
or
sbb
or
ret
icebp
cmp
ret
ret
fsub
enter
or
shr
adc
out
ror
call
xor
jp
cmp
shr
sti
movs
mov
ins
cld
add
jl
sub
movs
clc
cmp
mov
add
add
aam
cmc
xor
idiv
or
loopne
dec
dec
cmps
scas
pop
icebp
aaa
mov
loop
int3
xchg
fistp
scas
push
push
dec
push
mov
test
dec
xor
push
ja
xor
jp
sub
fmul
mov
jmp
add
movs
add
adc
shl
movq
add
mov
cmp
push
test
inc
outs
adc
add
ret
test
(bad)
rcr
and
sub
es
or
push
pop
jbe
(bad)
mov
inc
sti
adc
ror
shr
push
sub
pop
or
int
push
mov
cmp
xor
push
mov
push
pop
test
push
rcr
mov
ja
mov
mov
loop
xchg
fwait
mov
aaa
jnp
adc
add
sar
inc
vpmaddwd
dec
lds
dec
sbb
mov
add
into
lock
cld
je
xor
fisub
mov
pop
nop
imul
or
mov
bound
loope
dec
push
aam
and
and
adc
nop
or
push
inc
jns
cs
jecxz
cli
lods
and
mov
pop
mov
aam
push
inc
fisubr
(bad)
rcl
iret
and
push
fcom
fimul
xchg
adc
int3
es
ds
movsx
xor
or
adc
lahf
jge
push
or
or
rcl
or
push
ret
adc
xchg
sub
add
popa
and
adc
mov
add
pop
adc
jmp
sub
sbb
jnp
int3
popa
push
adc
mov
mov
pusha
(bad)
out
push
inc
xchg
fimul
dec
sbb
adc
sbb
fmul
add
jne
aam
or
or
sbb
xor
mov
add
movs
mov
int
std
nop/reserved
or
xchg
pop
and
rol
test
add
imul
adc
jp
pushf
pusha
fidivr
in
ror
in
shl
cmps
popf
push
mov
cmp
pop
push
pop
mov
popa
mov
mov
cmp
xor
or
or
loopne
aas
sti
popf
out
cdq
jmp
add
mov
push
mov
push
popa
pop
and
hlt
into
cmovns
push
lea
popa
and
lahf
pop
sbb
out
jmp
rol
sbb
sub
mov
dec
ds
mov
test
sub
dec
in
sub
xchg
popa
fsubr
add
jne
and
mov
rcl
or
add
push
lea
fmul
xchg
loopne
mov
adc
jno
js
scas
jmp
pop
cmp
jne
adc
ret
and
cmps
mov
jmp
lea
lods
call
xchg
adc
jo
push
dec
adc
mov
enter
or
dec
hlt
sub
xchg
dec
mov
test
and
xor
hlt
lock
movs
xor
inc
xor
icebp
scas
dec
(bad)
nop
lock
in
and
dec
add
xchg
scas
mov
cmp
jno
leave
pop
sahf
fmul
retf
push
shl
ficom
sbb
ja
mov
mov
loopne
sub
ret
pop
or
popf
push
lock
or
mov
sbb
ds
out
lods
pop
(bad)
xchg
mov
adc
(bad)
retf
cwde
mov
inc
add
pop
iret
jno
xor
pushf
push
and
sar
sar
pop
popf
mov
dec
pop
js
fdivr
test
lock
mov
fdivr
and
rol
stc
mov
sub
outs
fnsave
icebp
js
pop
rcr
dec
jmp
jmp
jb
fcmovu
xor
mov
inc
or
cmps
pop
push
mov
push
sub
rol
scas
imul
popa
cwde
xor
mov
xor
pop
pop
adc
ror
adc
leave
sbb
push
pop
add
loope
arpl
hlt
or
xchg
add
add
push
jo
sti
in
mov
and
sbb
(bad)
stc
int
jmp
out
and
imul
mov
jg
and
in
inc
rol
dec
inc
fadd
retf
xor
sbb
cmovb
rol
lahf
add
add
xchg
cmp
inc
inc
sahf
dec
idiv
adc
movs
inc
push
dec
push
shr
add
mov
int3
pop
into
push
xchg
jle
mov
mov
test
test
fisubr
pop
xchg
mov
jmp
iret
add
add
in
jno
movs
nop
jecxz
lock
mov
add
call
mov
mov
rcr
lea
mov
or
data16
pop
outs
mov
lods
imul
jo
fld
loopne
into
inc
popf
ret
and
push
xor
inc
mov
rcr
dec
shl
movs
adc
cdq
xchg
dec
leave
sub
hlt
adc
add
dec
retf
and
shr
test
adc
(bad)
jle
push
cmp
mov
movs
push
icebp
sub
into
lock
fidivr
test
fild
sub
clc
jmp
or
mov
mov
lods
test
or
jg
sbb
jb
nop
adc
and
movs
inc
push
repnz
sub
fisub
imul
mov
lock
in
(bad)
test
add
xor
add
mov
stos
cmp
int3
inc
and
sbb
fsubr
mov
inc
dec
inc
out
cmp
scas
mov
cwde
clc
dec
fmul
cmps
or
cmp
and
imul
mov
or
fistp
pop
call
es
pusha
ss
sbb
mov
ficomp
retf
or
xor
jnp
adc
in
rcr
push
xlat
loop
dec
inc
stos
repz
imul
fisttp
adc
add
inc
sbb
jnp
cmps
or
dec
call
in
push
mov
jbe
push
or
ret
mov
push
lahf
sub
or
xor
movs
cmps
fwait
push
movs
das
pop
cld
mov
push
and
sbb
in
dec
add
xor
cmps
cs
inc
mov
ja
mov
pop
inc
jge
dec
dec
(bad)
xor
aaa
aas
mov
cld
push
mov
ds
jbe
cmc
sub
adc
cmp
pushf
iret
mov
or
jmp
enter
pop
sar
sbb
rcr
dec
test
inc
push
dec
sahf
pop
les
js
shr
(bad)
jmp
jo
or
lods
mov
or
mov
cmps
sti
shl
ficomp
call
sub
adc
adc
clc
add
and
add
push
bound
jmp
cmp
ret
retf
cld
data16
cmp
jmp
cdq
xchg
fsubr
xchg
arpl
dec
or
(bad)
mov
ror
pop
dec
icebp
mov
adc
xchg
push
dec
or
or
xor
loope
ror
fbld
sbb
fsub
push
lock
std
clc
push
xchg
inc
push
clc
clc
sbb
fisttp
cmp
stos
adc
or
dec
jo
das
add
lods
add
add
sbb
fstp
mov
loopne
loopne
jge
or
(bad)
daa
in
loope
mov
xchg
mov
ret
pop
pusha
or
retf
mov
dec
or
xlat
les
pop
rol
shl
mov
dec
xor
or
hlt
sub
mov
xchg
mov
sub
enter
or
call
call
out
lahf
mov
rol
inc
sub
dec
and
mov
inc
jle
xor
sub
sbb
retf
mov
sbb
xchg
xor
popf
xor
cmp
push
(bad)
jnp
sbb
in
mov
push
jb
outs
(bad)
test
mov
mov
mov
add
xor
(bad)
cdq
or
sub
jl
loope
inc
adc
test
adc
shl
leave
neg
rcl
inc
lds
xor
pop
jnp
cld
adc
call
repz
or
and
or
add
dec
aaa
mov
jg
push
fiadd
rol
call
jg
adc
sub
pop
jecxz
inc
fld
movs
jo
js
fnstenv
movs
and
or
adc
adc
aas
and
ret
xor
mov
stos
pushf
mov
je
int
cmp
dec
lods
mov
setne
ret
inc
pop
mov
xchg
(bad)
cli
fimul
and
fbld
and
pushf
xchg
test
cs
cmp
xchg
mov
inc
fimul
ror
rol
into
add
inc
lahf
lock
or
into
dec
ficomp
in
lahf
add
cld
cmp
jg
enter
jge
push
jle
test
ret
ror
retf
jl
or
fcomp
jmp
jmp
jmp
push
pop
test
pop
push
adc
sub
retf
movs
mov
scas
jmp
xchg
loopne
jo
movs
sub
and
lahf
push
test
pop
adc
adc
inc
js
mov
je
add
or
xchg
jmp
aaa
je
les
or
pop
push
mov
dec
sbb
dec
add
(bad)
dec
daa
into
jmp
xchg
push
xchg
ds
mov
pusha
mov
pop
push
inc
push
add
ret
adc
mov
xchg
jb
pushf
inc
and
cmp
cmp
rol
hlt
ret
sbb
inc
call
cmps
shl
push
sub
mov
xor
xchg
gs
mov
add
push
imul
sub
dec
aam
or
jecxz
imul
sub
add
or
adc
adc
ins
push
cmps
ffree
fmul
pop
fisub
pop
adc
add
shl
adc
hlt
cmp
push
xchg
cld
mov
call
sbb
sub
dec
add
and
hlt
lock
test
jnp
ficomp
mov
test
je
mov
test
pop
pop
pop
adc
jmp
dec
in
lock
cmp
push
(bad)
and
and
jns
adc
or
xlat
ja
push
jecxz
inc
or
bound
cmc
clc
pop
call
call
test
outs
es
psubw
inc
and
jo
(bad)
cmp
pop
jmp
push
minps
cmp
(bad)
push
mov
leave
jne
mov
inc
dec
add
sbb
mov
pop
test
sub
sbb
or
jb
jno
aaa
sbb
shl
ja
mov
sbb
or
and
mov
(bad)
jmp
dec
or
test
nop
ja
and
adc
inc
dec
clc
clc
je
dec
xchg
sub
and
mov
dec
sub
jl
mov
test
stos
pop
int3
hlt
jp
imul
nop
cmps
stos
adc
lods
in
hlt
xlat
ret
inc
mov
cmp
cmp
sub
jbe
adc
loop
loop
cmp
fs
rol
loopne
jne
mov
fsub
loop
paddusw
mov
inc
ja
or
out
loope
les
fistp
jae
push
pop
cmps
mov
in
cmp
clc
fdivr
aas
jbe
and
fcomip
dec
in
repnz
nop
push
clc
jmp
jmp
push
data16
lods
or
mov
movs
clc
fbld
test
adc
sub
aad
push
pop
test
fprem
push
lods
sar
add
push
pusha
jno
jo
iret
jo
mov
dec
jmp
sbb
(bad)
adc
iret
popa
xor
sbb
test
dec
clc
dec
test
sbb
rcl
sbb
push
mov
sub
mov
jo
add
inc
pop
out
sub
sbb
movs
xchg
push
inc
sbb
push
pop
mov
(bad)
and
jns
pop
sub
jne
pop
aaa
cmp
push
adc
xor
js
lahf
sbb
or
mov
mov
jecxz
ins
add
push
fwait
stos
dec
push
sbb
mov
ret
aas
std
ret
mov
adc
cmp
(bad)
inc
pusha
test
xor
es
inc
imul
mov
cmps
or
mov
jae
mov
cmp
dec
jecxz
idiv
adc
ss
add
mov
(bad)
mov
push
js
retf
mov
das
ins
adc
enter
push
adc
xor
push
xor
adc
add
adc
adc
aaa
stos
adc
adc
in
inc
stos
pop
shl
xchg
into
sbb
mov
or
push
mov
adc
icebp
pop
jbe
jl
xor
jnp
xchg
or
mov
and
dec
push
add
sbb
ret
cmp
shl
arpl
cwde
or
out
lods
rol
out
lods
pop
sbb
push
nop
xor
cmp
jne
les
ds
and
inc
fxam
cmp
mov
mov
sub
dec
nop
or
sub
sub
push
ja
inc
jmp
(bad)
fst
lds
je
lock
enter
adc
push
xchg
mov
pusha
xchg
shr
cmp
sub
jmp
aas
retf
fisub
push
xor
ror
adc
and
(bad)
sub
add
jle
xor
push
cmp
add
fmul
inc
test
les
sbb
ret
das
les
push
loop
push
in
rcr
jb
pop
cli
fsub
adc
jbe
and
fcom
xchg
je
loop
mov
ficom
and
sbb
jb
shl
test
loop
push
inc
mov
sar
push
jp
lods
retf
pop
cmp
jno
cli
pop
adc
mov
mov
and
cmp
add
push
sbb
fld
sbb
sbb
sti
jne
ret
pop
push
add
in
adc
ret
mov
ror
add
add
loope
sub
or
ja
pop
sub
ss
cmp
adc
mov
sbb
jmp
inc
adc
sbb
retf
(bad)
push
das
xor
test
jl
ins
or
xor
js
das
rol
std
imul
or
loope
je
mov
scas
fmul
in
dec
fild
aas
dec
fs
rol
xor
and
cmovp
push
loopne
lahf
shl
jb
mov
jmp
enter
push
mov
push
dec
add
inc
adc
clc
std
or
mov
jmp
lods
(bad)
mov
mov
add
test
push
add
xchg
in
ins
push
push
aas
fs
mov
push
push
enter
dec
(bad)
fild
les
outs
sub
mov
test
int3
fwait
push
jecxz
and
int3
sub
sub
inc
inc
jmp
jo
push
mov
jle
rol
ret
jmp
mov
xor
add
jae
aam
enter
in
(bad)
and
sahf
lods
scas
icebp
mov
ficomp
jns
or
sub
mul
and
sbb
outs
out
movs
loopne
sbb
ins
sub
test
pop
or
aaa
lock
repnz
icebp
add
pop
adc
add
xor
shl
lock
xchg
(bad)
lock
or
mov
cld
arpl
call
in
pop
ja
adc
or
pop
call
rcl
ret
jmp
movs
lock
pop
ss
add
ss
fldenv
mov
sbb
cmp
mov
xor
in
(bad)
jne
ss
or
ficomp
(bad)
sbb
sbb
shld
aam
neg
in
push
adc
loope
sahf
inc
loop
dec
les
je
aaa
cdq
fistp
mov
mov
aam
sahf
ins
cmp
jmp
int
test
add
add
add
add
add
cmp
outs
int3
pop
inc
stc
add
jg
push
adc
push
fisttp
mov
ret
mov
adc
or
outs
mov
push
je
les
test
ja
xor
test
mov
call
xor
(bad)
scas
sbb
sar
mov
shl
inc
in
xchg
rcr
ror
retf
mov
xchg
das
pushf
ds
ror
mov
cmps
add
in
jae
stc
push
lea
xchg
aam
xchg
cmp
xor
mov
test
push
lock
sahf
pop
aas
push
inc
clc
test
xor
gs
loope
retf
add
inc
add
in
xchg
jl
lock
lock
in
js
movs
jne
lock
add
or
imul
gs
cs
loope
dec
xchg
xchg
cmps
jns
cli
xchg
test
in
sar
test
js
js
pop
add
dec
fcomp
jno
add
jecxz
es
icebp
mov
rcr
xchg
test
(bad)
imul
xchg
sub
add
xchg
mov
mov
or
mov
or
sub
add
add
hlt
push
jnp
push
js
dec
or
cmc
mov
clc
je
lea
clc
adc
or
or
dec
add
mov
add
icebp
mov
jo
lods
(bad)
rol
out
xchg
es
popf
dec
int3
xchg
das
jmp
jmp
hlt
push
dec
aaa
push
add
mov
hlt
add
add
push
xchg
dec
sbb
in
add
xor
add
or
mov
cwde
sbb
es
pop
hlt
(bad)
mov
sar
add
mov
outs
push
jp
adc
shl
fs
jbe
dec
gs
cwde
cmp
mov
sti
jmp
and
shr
fst
jb
aam
or
shl
int
and
jmp
xchg
ficomp
and
and
push
push
daa
adc
adc
movs
xor
imul
ror
call
cwde
mov
push
fs
movs
pop
pop
leave
sar
jns
test
jmp
fld
test
leave
in
daa
inc
scas
test
mov
lock
daa
scas
and
and
cmp
or
sbb
enter
adc
out
fstp
movs
shr
lea
mov
inc
cmps
jmp
mov
shr
cmps
in
add
pusha
lods
not
lock
xchg
cmp
mov
adc
or
and
push
fwait
inc
leave
mov
cmp
out
movs
movs
dec
cmps
pop
ss
je
sbb
mov
jp
xor
cmp
pop
pop
fisttp
lods
(bad)
sub
rol
sub
inc
popf
lahf
sbb
adc
outs
xor
cmps
mov
(bad)
xlat
push
inc
ficomp
scas
inc
dec
sahf
push
int
mov
sbb
cmp
add
sub
stos
test
and
dec
mov
sub
(bad)
test
dec
cmps
xchg
jl
pusha
test
or
aas
stos
test
pop
sbb
jo
add
add
dec
rcl
pop
mov
or
aam
sbb
inc
push
jmp
inc
xchg
mov
adc
push
xchg
adc
jns
push
jne
xor
xchg
dec
sti
sbb
test
in
in
xor
jnp
mov
lock
cwde
push
jl
pushf
adc
sti
dec
cmp
jle
pop
cmp
sub
mov
test
xor
rcr
mov
dec
push
movs
in
xchg
mov
test
jp
fnsave
jl
inc
cmp
jb
and
mov
pop
sti
shl
mov
xchg
ins
push
mov
enter
jno
ins
inc
mov
jmp
test
leave
aaa
cmp
inc
xchg
(bad)
pushf
cmp
sub
inc
cwde
or
mov
cs
xchg
pop
cld
pushf
cmp
arpl
add
lahf
loope
je
pop
stc
movs
jmp
in
ja
cwde
outs
loop
xchg
pusha
mov
pop
nop
or
pop
test
push
aad
in
mov
inc
and
jge
xchg
dec
cmp
cld
test
push
push
shr
jne
cs
mov
mov
inc
xor
and
in
mov
or
call
pop
jmp
popf
shl
out
not
and
add
inc
push
cli
jns
lahf
loopne
xor
or
mov
pop
push
clc
cmp
into
(bad)
add
dec
sti
in
retf
jno
pop
jle
mov
mov
cmps
jmp
test
popf
imul
or
dec
call
sub
mov
adc
add
lea
xchg
scas
adc
jnp
pop
mov
jl
jl
sbb
inc
pop
dec
push
pop
arpl
push
sbb
pusha
dec
cmps
les
xor
test
inc
push
sub
fadd
fmul
add
stos
jnp
pop
jne
mov
ins
lea
add
in
xor
sub
(bad)
iret
outs
outs
(bad)
sub
push
mov
adc
inc
fild
js
loopne
or
inc
les
into
xor
dec
in
and
jge
ins
push
rcr
bound
cwde
mov
dec
add
mov
xchg
or
imul
cmp
lea
dec
cmp
pop
in
mov
adc
xor
or
cmc
xchg
jb
jl
adc
dec
sub
adc
cwde
ret
or
xchg
push
bswap
lds
vcvtss2sd
movs
rcl
rcl
aam
xchg
retf
leave
aam
sbb
pop
mov
dec
add
outs
imul
sub
mov
cmpps
int3
dec
jb
leave
int3
int3
int3
test
in
repnz
test
jmp
int
jmp
ror
rcl
jne
daa
sub
dec
sar
lea
rol
stos
and
dec
mov
pop
jo
xchg
or
or
add
dec
movs
mov
lahf
movs
int3
in
pushf
shl
xchg
xor
addr16
mov
(bad)
jmp
push
dec
movs
mov
xchg
seta
bound
je
in
repnz
je
jo
add
addr16
pop
add
dec
cmp
or
mov
add
mov
cmp
add
push
mul
push
push
and
xchg
push
pusha
push
imul
xchg
push
mov
pop
lock
sti
(bad)
and
scas
jmp
push
or
in
or
loopne
add
bound
mov
jmp
or
test
shl
dec
leave
and
mov
ins
mov
sub
mov
test
lds
vmwrite
push
cdq
in
(bad)
stos
cmp
mov
push
sbb
add
adc
or
test
push
xor
cld
leave
sbb
pop
call
add
dec
xchg
sbb
addr16
fmul
les
pop
sbb
lods
fistp
fdiv
push
std
movs
jne
(bad)
inc
sbb
jns
add
je
imul
fild
pushf
sub
dec
adc
xchg
push
pushf
mov
fmul
pop
call
(bad)
jl
je
or
inc
jl
jne
adc
clc
int3
push
bound
jmp
mov
sbb
xchg
(bad)
mov
fimul
dec
enter
xor
push
mov
xchg
rol
cmp
test
(bad)
sbb
sbb
movs
cmp
add
cmp
test
jp
fwait
movs
pop
or
or
mov
repnz
or
daa
jmp
mov
xchg
arpl
mov
fsub
mov
push
nop
or
call
push
jmp
or
push
adc
mov
xchg
sub
bswap
adc
ja
inc
scas
cmp
shl
pop
add
mov
lods
pop
fs
pop
pop
and
inc
or
shr
cmc
or
sbb
add
cld
out
xchg
in
adc
adc
and
popf
sbb
xchg
(bad)
mov
add
dec
push
dec
mov
aas
jb
clc
popa
pop
(bad)
mov
inc
sbb
mov
stos
cld
push
hlt
addr16
adc
or
pop
inc
or
cli
pushf
dec
pop
lds
sbb
add
rcl
dec
inc
clc
ss
aaa
rcl
cmp
or
sub
add
xchg
xchg
jbe
jp
fld
setl
loopne
pop
dec
mov
bound
sti
push
call
cmp
push
cmp
mov
sbb
aam
adc
mov
xchg
pushf
ins
push
lods
mov
mov
lock
pop
sbb
inc
mov
inc
popf
adc
inc
jge
lock
lods
rcr
push
fucomip
ins
mov
cmp
(bad)
jo
imul
(bad)
(bad)
cmps
stos
xor
and
push
div
js
xchg
pop
das
xor
(bad)
sub
xor
loope
add
or
popf
inc
add
xchg
movd
pop
add
xchg
cmp
xchg
inc
or
inc
inc
or
jp
test
cld
sub
in
push
fcomp
xchg
push
dec
add
jge
pop
sar
pop
jne
loopne
jl
add
mov
mov
sub
dec
dec
push
mov
je
(bad)
fidiv
dec
push
jl
jmp
push
push
test
dec
pop
fisub
and
push
nop
sub
inc
adc
sub
in
add
push
hlt
js
sub
es
fsubr
push
int3
je
and
sub
xchg
xor
jns
xor
jnp
hlt
push
add
outs
popf
sar
cmp
mov
lods
mov
daa
in
lods
sbb
test
je
mov
sbb
add
xchg
pop
out
xor
loopne
and
cs
xchg
aam
(bad)
nop
and
sahf
inc
and
pushf
out
pop
shr
cmp
aaa
dec
xchg
xorps
fs
inc
sbb
movs
cmp
xor
cld
movs
or
sar
and
mov
enter
imul
mov
inc
inc
pop
adc
sahf
adc
nop
outs
stos
xchg
add
loope
test
inc
call
test
add
aas
sub
out
dec
hlt
pop
test
sbb
xor
and
mov
movs
inc
push
add
push
push
rcl
or
push
or
test
retf
push
sub
lahf
jmp
sar
pushf
icebp
sbb
jl
push
xor
aas
cld
add
mov
mov
pop
leave
out
push
lods
add
cld
dec
js
mov
lea
stc
mov
add
repnz
pop
movs
js
(bad)
cmp
repnz
aam
cdq
jo
cmp
lock
mov
jl
call
out
popa
and
pop
(bad)
pop
loopne
inc
mov
nop
xchg
pop
in
push
add
je
pop
inc
pusha
xchg
sub
ins
sub
or
push
fs
jmp
cdq
ins
das
push
(bad)
push
ins
lahf
enter
cmp
mov
mov
sbb
addr16
pop
dec
push
in
loopne
adc
add
pop
imul
in
push
es
inc
cmp
or
ins
sub
or
cmp
mov
inc
cmp
cmp
into
mov
nop
and
mov
ja
mov
xchg
pop
dec
mov
add
push
cmc
pushf
ins
add
bound
xchg
push
mov
mov
inc
push
aam
fs
add
shr
dec
xor
sbb
movs
enter
icebp
in
inc
mov
or
imul
mov
int3
push
repnz
add
add
ror
xchg
add
or
stc
or
pop
add
sbb
movs
dec
je
movs
mov
test
add
inc
aas
mov
xor
inc
pusha
jmp
jle
pop
mov
or
stos
aaa
xchg
pusha
mov
jno
pop
dec
nop
dec
add
add
xor
cmp
xor
add
add
mov
cld
jg
cmp
mov
mov
pop
loope
pop
repnz
repnz
rol
add
xchg
ds
dec
popa
add
call
jne
sbb
push
and
imul
das
test
adc
scas
aam
popa
or
add
das
xchg
imul
adc
ja
mov
enter
jne
in
add
bound
mov
xchg
pusha
mov
cmp
add
or
je
cmc
jo
lea
pop
and
stc
loopne
or
add
xor
dec
gs
mov
loop
gs
xchg
sub
add
add
mov
mov
and
movs
sbb
sbb
add
push
mov
clc
or
adc
jmp
rol
js
cmp
mov
or
or
(bad)
pop
shl
popa
popa
xor
in
mov
inc
mov
lods
and
and
push
cmp
(bad)
jecxz
ss
xor
push
push
cmp
bnd
sub
cld
add
and
or
adc
arpl
out
je
loope
fimul
sahf
sbb
js
test
xchg
test
or
js
jg
push
add
sub
shr
pop
or
call
lods
cmp
adc
jne
xor
leave
stos
mov
add
pusha
popf
fisttp
push
sbb
mov
ds
gs
mov
inc
(bad)
shl
shl
inc
dec
pushf
stos
(bad)
and
fdiv
fdivr
les
jbe
jae
mov
adc
inc
popa
xchg
in
push
into
push
push
test
fiadd
inc
pop
or
loopne
mov
mov
adc
add
lea
sub
add
cdq
ret
sbb
push
push
inc
adc
push
daa
mov
add
cmp
aas
movs
adc
(bad)
jmp
addr16
enter
enter
mov
aad
rcl
jmp
push
jns
inc
loope
dec
adc
inc
add
add
pavgw
(bad)
jge
pop
adc
and
sub
ins
and
or
xor
sbb
inc
xor
enter
dec
jb
jge
popa
or
mov
(bad)
adc
pop
sub
add
imul
cmp
arpl
cmp
xchg
or
jbe
and
sub
xor
mov
aad
cmp
xor
inc
mov
test
fadd
int3
mov
add
dec
lods
stos
add
outs
outs
and
bound
stc
hlt
jl
jb
sbb
ins
mov
cmp
sub
sbb
mov
xchg
pushf
cli
adc
jmp
xor
sbb
or
mov
int3
mov
lock
lahf
leave
xchg
jl
rol
rol
sub
cmps
inc
lock
es
add
enter
push
dec
test
icebp
mov
pushf
adc
mov
jl
lea
or
jb
xor
dec
bound
jmp
xor
sar
adc
in
adc
fstp
mov
xor
test
iret
sub
jae
dec
mov
xchg
xor
lahf
push
inc
jnp
xchg
mov
test
pop
push
mov
jl
adc
pop
dec
mov
push
mov
or
mov
sbb
rcr
cmp
test
(bad)
das
mov
pop
popf
mov
lea
pop
mov
push
sbb
add
adc
push
pop
dec
mov
dec
popf
and
xchg
push
aas
fdivr
stos
dec
or
and
mov
adc
stc
or
jne
jae
jp
adc
mov
xor
(bad)
int3
dec
cmp
inc
ds
jle
gs
clc
sub
and
lock
jo
mov
scas
push
mov
and
ret
aad
nop
dec
ins
cld
cld
xchg
jb
cmp
aas
out
shl
add
movs
out
mov
inc
xchg
mov
and
mov
xchg
aas
ficomp
push
shl
pop
in
ret
mov
or
xor
je
clc
inc
leave
cmp
imul
pcmpeqw
loop
fisubr
ds
dec
outs
or
or
pusha
inc
cwde
and
or
push
sbb
cmp
sbb
cmps
and
mov
xor
mov
and
test
pop
popa
mov
xor
es
call
jecxz
xchg
add
ror
xlat
xchg
mov
dec
sub
mov
cmp
mov
or
sbb
fild
loop
je
std
or
inc
push
and
mov
add
xor
scas
cmp
xor
je
sar
ss
inc
inc
and
nop
ja
adc
repz
add
clc
ror
push
sbb
pop
mov
cli
jnp
rcr
sub
sub
pop
jl
cmp
add
mov
(bad)
jmp
adc
inc
daa
rol
mov
cmp
(bad)
rcl
sbb
pop
mov
sbb
sbb
es
jae
push
pop
dec
xor
jns
push
add
mov
jns
mov
xlat
fisub
aam
or
jne
jnp
and
xchg
stos
and
mov
lock
sbb
sbb
sub
pop
dec
add
fsubr
and
mov
shl
add
and
enter
call
mov
and
lock
ret
mov
xchg
pop
jb
ins
add
shr
mov
outs
dec
xor
push
nop
dec
xor
clc
outs
clc
lea
ret
adc
leave
xor
inc
fiadd
int3
test
rol
sahf
pop
test
pop
add
mov
and
inc
fbld
enter
add
adc
outs
add
jecxz
jmp
mov
jl
add
addr16
xchg
js
mov
add
lahf
out
cs
or
pop
or
dec
xor
jmp
cli
xchg
pop
in
or
adc
or
push
or
mov
sub
or
mov
aad
es
(bad)
dec
stos
rcr
mov
inc
movs
jbe
mov
mov
adc
out
xor
test
ret
pop
enter
push
add
inc
bound
adc
leave
hlt
movs
inc
dec
mov
mov
add
or
pushf
movs
movs
rcr
or
cmp
mov
movzx
popf
and
mov
xor
cmps
movs
leave
enter
add
pushf
add
inc
cmp
gs
movs
sti
jb
das
push
mov
int
add
pop
daa
mov
add
inc
icebp
sbb
in
pop
pop
jg
pusha
mov
fmul
or
mov
dec
xchg
rol
fmul
or
dec
das
cwde
sbb
pop
rcr
test
call
lds
rcl
xchg
les
fild
ret
xchg
in
adc
mov
dec
inc
dec
shl
add
add
ss
fbld
adc
jmp
adc
adc
test
in
in
enter
fistp
movs
inc
sub
test
stos
nop
movs
(bad)
jne
inc
dec
in
sub
test
sbb
lea
ret
or
or
mov
lock
xchg
outs
fmul
dec
clc
pusha
mov
adc
movs
mov
inc
dec
fs
imul
pop
adc
cmp
cmp
inc
fs
repnz
add
and
gs
or
dec
ret
pop
mov
lds
dec
daa
add
les
jnp
xor
fsub
push
add
cmp
gs
sbb
xchg
sbb
xchg
push
shr
pop
xchg
jae
ss
mov
jne
cmp
sbb
cmp
inc
mov
cmc
ret
adc
or
and
sub
sub
nop
or
mov
pop
cs
push
pop
or
inc
xlat
push
out
lahf
movs
mov
sbb
sbb
xchg
adc
and
push
ins
xchg
mov
jno
jae
movs
dec
rcl
inc
clc
xchg
pusha
je
add
mov
adc
or
jno
jmp
add
pushf
leave
call
or
pop
icebp
sbb
mov
inc
pop
bound
mov
pop
push
aaa
lods
add
fdiv
push
push
inc
pusha
push
dec
cmp
add
pop
enter
fdivr
jne
adc
ss
ins
pop
sbb
inc
call
jo
inc
dec
sub
inc
jle
push
dec
add
cmps
push
adc
dec
pop
aas
mov
adc
xor
push
push
or
(bad)
xchg
ret
std
pushf
adc
aaa
mov
(bad)
sub
repz
mov
fcomp
sbb
cmp
push
cdq
or
loopne
xchg
test
jmp
stc
aam
call
fsubr
pop
add
pop
test
sbb
lahf
popf
or
inc
push
adc
test
inc
cmp
lahf
or
adc
(bad)
or
sbb
es
push
mov
imul
sbb
add
push
in
int3
push
sbb
jne
adc
scas
hlt
pusha
adc
xor
xchg
in
lods
test
mov
jne
repz
sbb
push
xchg
enter
inc
sub
add
push
pusha
sar
xor
hlt
stc
loopne
inc
pop
pop
retf
std
xor
push
aas
xchg
mov
cmp
in
in
pop
mov
and
in
mov
in
push
sar
lock
pop
jb
lock
mov
push
mov
sub
dec
jl
xchg
cmps
sub
mov
cmp
push
push
lods
ret
jne
jb
push
(bad)
inc
and
icebp
sbb
stc
and
inc
jecxz
dec
mov
add
mov
and
lods
fwait
ins
shr
adc
mov
loope
inc
test
pop
lds
sub
push
pop
or
xchg
and
add
das
je
jne
mov
aas
sub
jle
and
sub
je
mov
movs
movs
add
cmp
or
jmp
xor
out
test
stc
pop
dec
cmps
loop
jmp
cmps
cs
adc
aas
sub
ja
(bad)
mov
add
repz
mov
loopne
dec
dec
addr16
jmp
xor
xor
xchg
shr
or
clc
add
ret
call
inc
das
jmp
and
xchg
xor
add
add
lea
add
and
lahf
mov
sbb
and
test
mov
(bad)
(bad)
xchg
inc
dec
xchg
mov
pop
adc
in
or
inc
hlt
pop
add
daa
mov
retf
pop
mov
nop
sbb
call
popf
fmul
lods
inc
mov
scas
adc
call
(bad)
js
xor
cmp
ins
(bad)
mov
stos
cmp
add
in
scas
xor
jmp
inc
and
mov
jmp
jp
mov
mov
sti
cmp
jne
xchg
xchg
ret
or
push
shl
and
mov
xor
bound
int
fs
and
xchg
adc
xchg
or
xlat
and
mov
cmc
cwde
push
add
or
push
retf
and
nop
(bad)
aas
pop
mov
push
adc
add
call
push
sbb
push
outs
or
or
ins
lods
movs
push
cmp
out
(bad)
out
mov
dec
or
push
stos
sbb
arpl
(bad)
fsub
test
jne
pusha
push
out
sbb
and
cld
sbb
push
sub
aaa
xor
or
xor
imul
cli
jge
inc
movs
xchg
es
ins
pusha
push
mov
or
xchg
and
sbb
enter
push
mov
xlat
or
or
pop
fwait
mov
xchg
dec
dec
adc
les
fadd
push
push
pop
dec
rol
xchg
adc
mov
mov
xchg
sub
mov
push
loope
mov
aad
rol
mov
xor
lahf
adc
fiadd
cld
sbb
imul
das
add
ins
mov
mov
call
shl
dec
or
pushf
out
inc
or
or
xchg
xor
add
adc
adc
mov
sti
mov
mov
push
add
sub
movs
pop
call
adc
xor
pop
adc
inc
and
ins
movs
cmp
or
xchg
pop
cmps
mov
adc
and
(bad)
lock
lock
mov
les
mov
cli
adc
add
rol
js
dec
push
fst
and
or
mov
add
call
inc
sub
xchg
jl
cdq
dec
int
mov
adc
rcr
sbb
jno
repz
pop
dec
mov
jg
sub
rol
loope
sar
push
add
dec
mov
add
inc
pop
dec
rcr
xor
sub
pop
cmp
mov
int
jl
ja
popa
and
out
sbb
dec
adc
fild
cmp
jecxz
add
addr16
xor
mov
movs
dec
jg
push
or
clc
cld
cmp
fstp
lods
ror
mov
in
pop
push
cmps
sbb
inc
pushf
popf
jnp
pop
dec
rcr
test
push
ror
mov
(bad)
jl
dec
add
mov
(bad)
enter
xchg
add
and
sub
add
and
sbb
cdq
cmp
mov
sbb
or
mov
lods
and
sbb
pop
mov
inc
and
jg
add
xor
inc
mov
sbb
std
sbb
in
je
pop
dec
mov
push
mov
push
adc
jns
sub
adc
fmul
xchg
mov
bound
jmp
mov
xor
rol
sub
hlt
sub
repz
jmp
mov
add
xlat
aaa
jmp
push
cmp
aaa
push
add
hlt
jmp
fisubr
xchg
add
icebp
inc
shr
sbb
dec
ret
arpl
sbb
clc
adc
push
mov
test
inc
dec
je
les
inc
jmp
sbb
imul
xchg
sbb
push
ror
xor
aam
mov
sbb
int
xor
cmp
dec
fstp
outs
dec
dec
cmp
mov
push
add
push
xchg
and
addr16
sbb
mov
and
aaa
pop
pop
lods
mov
and
popf
push
push
sbb
mov
pop
repz
fs
adc
icebp
aam
push
pop
ror
arpl
popf
mov
hlt
xor
xchg
iret
addr16
mov
sbb
cmps
movs
inc
test
and
mov
pop
repz
pop
or
mov
cmp
jns
dec
repz
daa
mov
call
js
cmps
pop
pop
push
ss
add
scas
inc
cmp
(bad)
icebp
in
dec
loop
jle
and
imul
sub
stos
jge
push
shr
jmp
dec
loop
call
adc
hlt
adc
or
push
jo
test
inc
sbb
cld
lahf
adc
or
xor
sbb
ja
fdivr
call
nop
je
mov
in
clc
jp
in
loop
dec
pop
lods
mov
and
mov
push
and
call
enter
enter
push
mov
push
or
aaa
or
mov
adc
fadd
adc
mov
cmp
call
shl
inc
jo
pop
dec
retf
adc
or
push
or
jbe
aas
dec
add
push
xor
sbb
ret
outs
movs
jne
dec
cmp
add
mov
fwait
and
mov
sahf
out
dec
cmp
xor
inc
fsubr
or
in
pop
aas
push
xchg
push
mov
out
add
pop
xor
push
iret
or
jecxz
ins
and
ss
aas
pushf
lahf
sub
adc
mov
add
retf
js
inc
inc
mov
test
push
rcr
fwait
dec
mov
js
add
ds
add
adc
into
cmp
mov
lods
mov
add
mov
mov
adc
adc
add
pusha
lods
push
mov
pop
dec
rcr
add
(bad)
mov
mov
test
cld
dec
test
jae
stc
fsubr
xchg
loop
aaa
call
mov
dec
pop
cmp
xor
lahf
jnp
popa
or
movs
or
mov
mov
sub
mov
aaa
pop
inc
mov
mov
pop
adc
clc
clc
lods
add
or
jne
movs
adc
sub
push
cmp
mov
mov
mov
pusha
push
xchg
inc
sbb
icebp
or
addr16
add
dec
jmp
add
adc
dec
mov
inc
sbb
stos
sub
loop
(bad)
cdq
add
push
cmp
pop
dec
pop
aad
inc
mov
and
in
or
jmp
inc
ret
add
sbb
aam
out
or
cmp
mov
push
push
jns
out
jp
cdq
xchg
shl
loopne
add
mov
dec
xchg
pop
xor
nop
jbe
sbb
out
dec
int
and
fsub
fnstcw
sub
fimul
adc
adc
fidiv
xchg
in
push
dec
xlat
adc
push
or
sbb
mov
ret
imul
or
push
imul
adc
popf
pop
add
jb
inc
adc
dec
stc
adc
pusha
movs
add
push
movs
mov
push
sahf
add
and
cmp
in
add
loopne
sbb
pop
cwde
sub
dec
or
sub
adc
add
jmp
push
loope
ja
js
add
dec
adc
adc
push
xchg
inc
adc
mov
movs
popa
sbb
pop
icebp
xor
gs
jo
test
and
pop
adc
arpl
lods
sub
and
and
cmp
dec
ins
push
jne
nop
xchg
xchg
stos
add
ds
mov
or
and
sbb
push
push
xchg
pop
pop
das
fdiv
mov
gs
cmp
clc
inc
xlat
xchg
inc
jo
inc
cmp
int3
sub
pusha
push
mov
sbb
enter
push
pop
adc
arpl
scas
movs
adc
pop
js
pop
jb
mov
push
aaa
test
sub
loopne
push
dec
pop
push
add
nop
dec
loope
xchg
inc
add
retf
fisubr
push
inc
jae
pop
mov
popa
outs
mov
test
scas
adc
scas
sti
ret
mov
jnp
xor
pop
shl
dec
js
mov
or
fwait
inc
sbb
mov
inc
loope
je
and
ins
and
lock
stc
sub
rcl
dec
push
cmp
push
int3
(bad)
cmp
inc
xchg
int3
push
xchg
mov
mov
fs
cld
and
adc
sbb
push
mov
pop
pop
inc
movs
xlat
push
aam
repz
adc
adc
repz
call
int3
push
jg
out
outs
adc
fwait
sub
ja
pop
int3
push
aaa
lods
add
rcl
sub
loop
test
or
jno
mov
or
push
jbe
nop
js
cdq
mov
add
xor
push
push
adc
and
sbb
xor
dec
std
cmc
inc
or
je
mov
jo
inc
jno
or
loopne
dec
test
and
nop
stos
scas
or
leave
push
jmp
pop
int3
enter
leave
int3
mov
ss
mov
jns
or
mov
mov
sbb
xor
xchg
ins
sub
pusha
clc
inc
lods
mov
jns
test
mov
cmp
adc
shl
cli
xlat
jle
inc
mov
pop
mov
lock
movs
or
xor
sbb
mov
inc
es
adc
xor
outs
les
cmp
out
aaa
pop
repnz
fmul
push
pusha
xchg
push
das
push
pop
fsub
js
pop
push
and
int3
jle
cmps
jmp
push
cmovae
data16
fdiv
sbb
lods
(bad)
mov
imul
out
repnz
sbb
repz
add
int3
inc
cmp
int
mov
leave
and
aas
mov
xor
in
or
add
dec
mov
call
mov
arpl
dec
jb
dec
shl
or
rcr
add
and
add
aad
cdq
lods
or
and
xchg
fiadd
cmp
push
leave
stos
push
movs
pop
xchg
sbb
or
adc
in
mov
pusha
add
add
fwait
ret
xor
xchg
add
sub
add
in
scas
jmp
dec
aaa
repz
sti
and
mov
ja
in
mov
cmp
mov
xchg
mov
js
sub
lock
push
or
(bad)
lock
ret
inc
inc
or
inc
aas
dec
loope
and
inc
test
cmp
jge
pop
inc
jmp
mov
or
aas
in
jmp
or
scas
mov
cmps
aas
inc
sub
adc
mov
and
mov
je
add
pushf
or
xchg
push
push
rol
and
out
sbb
jmp
std
jl
mov
sub
cwde
lock
adc
icebp
push
dec
mov
mov
xor
enter
xchg
add
enter
(bad)
mov
sbb
and
ret
jg
dec
scas
mov
cld
add
xchg
cwde
pop
push
jl
and
sahf
or
xchg
adc
mov
and
push
daa
lea
inc
fsubr
cs
sub
int3
push
aas
mov
test
cwde
pop
jnp
or
nop
inc
das
xor
cmp
inc
push
push
cs
js
loopne
xor
bound
add
or
pop
stos
cmp
les
leave
jecxz
shr
or
push
mov
imul
sub
mov
or
cwde
mov
cmp
xor
addr16
cmp
push
sbb
cmp
retf
jae
(bad)
pop
outs
and
mov
rol
int3
(bad)
xor
fsubr
or
int3
popa
popf
test
out
pop
das
ins
mov
pop
jecxz
test
mov
sub
imul
mov
mov
xlat
add
nop
add
and
adc
adc
xchg
sub
mov
xor
mov
nop
(bad)
xor
movs
lds
call
(bad)
mov
(bad)
lock
push
jns
sahf
cmps
(bad)
enter
add
lock
pop
xchg
pop
test
ins
mov
adc
xchg
sub
add
sbb
add
mov
push
cmp
or
iret
pop
hlt
sbb
loopne
cmps
lock
shl
cmps
std
cmp
imul
or
jae
push
push
sbb
push
arpl
xchg
imul
push
aam
fcom
rcl
xor
pushf
lea
xchg
add
nop
xor
lods
loop
inc
pop
aam
mov
rcl
ins
add
xchg
cmp
mov
cs
leave
clc
jo
push
mov
push
loope
jmp
jmp
jb
rol
jae
mov
lea
icebp
inc
or
mov
xchg
iret
mov
call
ficomp
xchg
bound
push
mov
dec
sbb
mov
mov
sub
rol
shl
push
mov
je
xchg
push
pop
jg
xor
add
sub
stc
dec
shl
lods
pushf
cmp
(bad)
sbb
(bad)
pop
cmp
cmp
fst
iret
xchg
adc
xor
sub
jmp
aam
dec
push
fild
jo
fcom
aam
mov
pop
mov
push
pop
(bad)
and
lods
jbe
(bad)
and
stc
jbe
xchg
xchg
dec
out
test
lea
frstor
fsub
inc
shr
xor
xchg
xchg
mov
cld
ror
adc
pop
pusha
sub
inc
jno
push
addr16
dec
mov
pusha
add
loop
mov
sbb
or
cmps
popa
popa
or
sub
lds
xor
xchg
push
cmp
lock
add
das
add
lods
adc
inc
or
adc
(bad)
jo
mov
shr
ret
cmc
fsubr
sbb
inc
pushf
sar
xchg
inc
mov
nop
cmc
popf
mov
pop
rcr
lock
retf
xor
das
lds
sahf
fsub
aaa
inc
or
add
imul
imul
std
push
mov
xor
add
(bad)
in
jl
xor
xor
sbb
dec
mov
mov
and
or
fadd
stos
or
or
sbb
out
pop
pop
push
pusha
xor
cmps
and
inc
shl
addr16
mov
mov
mov
pop
and
pop
sub
cmps
jne
inc
lods
or
mov
push
sbb
mov
fisttp
sub
sub
adc
pop
inc
dec
into
sahf
xchg
scas
repz
adc
jg
bound
mov
mov
mov
je
pop
xchg
and
xchg
jmp
xlat
sbb
(bad)
xor
push
je
cmp
jmp
je
in
or
test
adc
stos
icebp
rol
inc
jecxz
(bad)
sbb
or
mov
sub
pop
dec
test
cmp
sub
pusha
bound
or
xchg
pop
clc
bound
pop
inc
inc
cld
arpl
and
mov
cmp
mov
mov
cmp
mov
and
adc
add
mov
add
cmp
jg
sar
mov
add
sti
bound
mov
push
or
dec
cdq
lods
mov
fcmovu
and
push
ret
and
in
cmp
in
nop
sbb
loopne
pop
cmp
xor
inc
jo
ins
pop
pop
fs
push
call
adc
push
pop
arpl
lahf
pop
add
adc
imul
je
div
push
adc
mov
or
mov
mov
inc
stc
inc
cmp
push
enter
(bad)
or
je
enter
dec
xchg
add
dec
push
mul
cmp
jmp
aas
add
xor
mov
xor
imul
rol
fs
xchg
mov
dec
mov
jne
out
cmps
pusha
jne
xchg
xchg
dec
fsub
xor
inc
mov
cmc
fidiv
je
mov
dec
outs
xor
xchg
test
pinsrw
cmc
cmp
pop
imul
pop
cmp
loopne
push
sti
cld
push
push
mov
push
xchg
sbb
mov
int
pop
mov
push
scas
jmp
jmp
mov
test
mov
scas
jns
dec
mov
loopne
loop
mov
push
dec
lahf
pop
mov
inc
jb
sbb
xchg
pop
in
mov
loop
jbe
stos
test
cmp
mov
inc
aam
pop
or
xor
push
pop
jg
jg
push
bound
fld
adc
and
jb
cmps
sbb
inc
jmp
sub
frstor
cmps
push
sub
xchg
push
dec
arpl
outs
sub
call
loope
add
sar
sub
gs
sahf
mov
lock
scas
or
add
jmp
jo
or
cmp
stos
retf
call
popa
xchg
aas
clc
xchg
in
adc
aas
jmp
(bad)
sub
mov
adc
push
mov
push
jmp
lds
or
pop
add
inc
add
mov
sbb
popa
and
push
jb
adc
jne
add
push
jle
add
add
jne
or
add
movs
and
xchg
or
jno
outs
and
mov
cmp
mov
inc
dec
fidiv
lock
call
add
stos
add
xchg
inc
mov
bound
jg
mov
mov
pop
pop
pop
ins
test
cmp
dec
shr
rcr
pop
sbb
xor
icebp
or
or
xchg
rcl
loope
or
jno
fwait
push
cmps
sti
mov
sub
inc
cwde
ins
sbb
pop
sti
popa
rcl
pop
rol
mov
xchg
js
or
adc
rcl
sbb
mov
jle
sbb
xor
je
xor
push
sub
call
push
or
gs
xor
mov
sub
hlt
cmp
jge
xor
sbb
fdivrp
hlt
mov
loopne
jmp
sub
rcr
call
add
loope
test
(bad)
mov
xor
cmp
jle
imul
fiadd
sbb
nop
ins
jbe
lock
sub
mov
in
hlt
jge
arpl
dec
outs
adc
push
std
inc
and
jmp
sbb
and
mov
in
cmp
cwde
icebp
push
inc
xchg
test
add
inc
pop
cdq
and
add
repz
ins
sub
aaa
mov
mov
and
lds
ret
cmps
rcr
out
add
add
push
movs
sbb
mov
das
iret
pop
in
dec
(bad)
repz
jge
sar
pusha
call
sbb
js
xor
rol
or
rcr
push
push
cmp
jg
rcr
rol
mov
loopne
in
cs
jge
push
or
mov
sub
outs
in
cmps
xor
mov
call
push
jne
xor
sbb
sbb
inc
and
sbb
inc
inc
xchg
inc
movs
or
test
cld
sbb
jno
or
and
pushf
cmp
jne
add
and
mov
sub
jl
movs
xor
mov
arpl
xchg
lahf
ss
adc
adc
mov
aaa
popf
es
repnz
mul
jo
dec
sbb
mov
aam
pushf
add
or
inc
adc
or
pop
xor
lods
xor
imul
or
imul
std
fcom
jle
xor
fsubr
jns
sub
push
push
jmp
rcl
or
add
adc
out
nop
fsub
dec
or
push
inc
das
adc
jg
sar
cmp
push
inc
loop
test
ret
push
lock
lea
int
add
or
mov
pop
daa
jecxz
add
jmp
xchg
fisub
sbb
cld
arpl
js
dec
and
push
push
leave
pop
pop
adc
add
mov
mov
lock
or
inc
push
push
add
enter
or
clc
clc
push
mov
clc
clc
clc
dec
ds
and
add
cmps
dec
adc
leave
jo
pop
shr
inc
and
xor
fisttp
xchg
add
sub
inc
test
in
push
mov
bound
fs
mov
lahf
cmp
and
add
or
ficomp
or
in
pop
je
stos
nop
adc
sub
arpl
(bad)
pop
mov
ins
inc
dec
xchg
loopne
or
inc
out
push
dec
loop
aaa
fs
shl
pop
js
call
and
push
pop
nop
sub
xor
nop
retf
test
js
(bad)
test
or
fistp
sbb
fs
cs
nop
aas
lods
add
add
or
or
sub
test
adc
cwde
adc
cmps
or
push
test
cmp
or
nop
bound
pop
aas
jno
inc
lods
daa
mov
sar
mov
sbb
add
(bad)
sub
js
sub
xor
mov
adc
mov
sub
and
dec
enter
fimul
sahf
push
mov
cmp
sub
or
add
data16
in
cmp
ret
add
and
adc
add
sub
stos
popa
lahf
lahf
inc
lds
pushf
aam
jb
add
mov
or
or
mov
das
ret
cmp
ins
fsub
loop
or
jp
sub
js
add
xor
nop
or
or
int
in
push
add
jg
add
adc
inc
cmp
push
enter
sub
pop
leave
xor
add
and
inc
xchg
mov
inc
inc
jbe
push
push
mov
push
cmp
and
inc
mov
mov
ror
or
push
push
jmp
cld
retf
repnz
ss
inc
ins
test
mov
push
sub
cmp
add
fistp
add
and
xor
mov
or
cs
cld
inc
sbb
shl
inc
adc
loopne
dec
pop
push
fwait
adc
dec
aaa
out
add
add
push
in
and
inc
mov
push
cmp
dec
mov
add
adc
sub
xchg
movs
fbstp
or
cmp
pop
stos
or
aas
movzx
lods
lods
inc
and
add
xchg
push
jae
jmp
inc
adc
xchg
jnp
jmp
jp
pop
test
fnstsw
cwde
aaa
and
pop
test
fs
aad
add
pop
jmp
xchg
jno
sbb
sbb
and
sbb
mov
mov
or
or
adc
add
retf
adc
add
inc
xchg
fdiv
xchg
sub
adc
or
dec
lds
rcr
and
sbb
sahf
mov
cmp
aaa
fiadd
cmc
cdq
icebp
loope
adc
add
movs
in
sub
and
dec
sbb
xchg
push
mov
imul
pop
adc
jmp
ja
shr
pop
dec
mov
pop
neg
dec
xor
jne
data16
inc
push
popa
dec
push
or
pop
add
push
push
or
ror
xchg
out
dec
cmps
fs
and
hlt
ficom
mov
sbb
sub
or
inc
xchg
adc
adc
and
jecxz
fcomip
jo
or
pop
or
mov
add
leave
enter
in
jbe
xchg
pushf
sbb
ja
xor
sbb
in
movs
ror
push
gs
in
dec
test
pop
sbb
in
and
pop
mov
and
xchg
mov
xor
cmp
add
jmp
mov
pop
pop
mov
cmp
add
fmul
out
mov
jle
or
test
add
cmp
sbb
aam
mov
out
aam
aam
scas
cdq
sbb
inc
xor
cmp
cmp
pusha
sbb
rcl
inc
and
sbb
enter
fs
sbb
dec
nop
pop
sbb
mov
jns
push
sub
int3
jno
mov
dec
sub
inc
jns
xchg
fs
int3
adc
inc
mov
or
xor
scas
dec
sahf
xchg
iret
repz
retf
xchg
cmp
int
mov
mov
and
ins
pop
leave
sub
fdivr
(bad)
jne
sub
je
data16
enter
(bad)
jae
push
jmp
les
rcr
xchg
mov
and
sbb
std
jne
adc
retf
adc
sub
dec
mov
(bad)
inc
ficom
adc
inc
xor
call
pop
call
mov
adc
movs
adc
scas
mov
ret
je
push
(bad)
mov
ins
pop
fstp
mov
jne
xlat
or
je
xor
sub
dec
les
push
rcl
xlat
pop
mov
or
jmp
sbb
xchg
cmps
mov
add
mov
jecxz
bound
and
push
ret
or
add
xlat
xor
jmp
xchg
mov
sbb
out
xchg
pop
jae
imul
loope
nop
dec
lods
enter
setle
pop
and
and
pop
movs
(bad)
call
int
add
test
bound
inc
popa
xchg
sub
mov
sub
jge
jmp
(bad)
jle
es
nop
into
xlat
xchg
cmp
mov
mov
or
jecxz
xlat
adc
and
and
pop
pusha
add
adc
(bad)
loopne
cmps
aas
dec
pushf
add
mov
scas
adc
scas
fsub
out
adc
mov
add
lods
jg
gs
inc
repnz
pop
aas
data16
test
enter
ror
or
push
push
or
shl
sub
dec
jmp
fst
sub
and
aas
sub
push
mov
pusha
aas
or
adc
into
sub
test
inc
push
and
sbb
imul
adc
test
xchg
sub
pop
jg
xchg
dec
cdq
dec
pop
add
mov
neg
jle
mov
sub
adc
shl
or
push
imul
jmp
xor
(bad)
into
pop
xor
imul
scas
xor
jg
ror
daa
inc
stos
fisttp
cmp
aad
stos
push
sub
pop
cdq
inc
push
enter
(bad)
push
bound
jmp
(bad)
sub
lods
pop
mov
jecxz
or
(bad)
push
xor
sub
aas
push
push
les
and
in
sar
mov
adc
jmp
cmp
add
mov
and
pop
out
shl
call
test
add
and
(bad)
or
push
cwde
and
imul
imul
pop
add
cld
add
dec
adc
sub
std
arpl
retf
mov
in
push
pop
push
not
pop
addr16
neg
ret
sti
mul
and
inc
hlt
or
bswap
push
jb
stos
add
cmp
jb
dec
in
in
mov
cmp
aaa
(bad)
(bad)
mov
jecxz
sbb
lock
pop
push
add
lds
xchg
or
xor
test
outs
sbb
jo
inc
adc
add
ds
xchg
push
push
loopne
xchg
daa
and
or
movs
daa
in
scas
and
cmp
scas
sbb
sub
jnp
retf
movs
pop
jb
push
cmps
imul
mov
or
or
enter
push
sub
sub
pusha
(bad)
adc
pop
mov
sar
xchg
cmp
call
and
xchg
sbb
mov
jle
adc
jle
enter
shr
dec
push
dec
call
mov
(bad)
in
dec
xlat
xchg
xchg
cmp
jle
ficomp
adc
sar
gs
mov
push
add
sub
xchg
sub
mov
jle
repnz
push
das
push
ja
xchg
jbe
gs
idiv
sbb
imul
lea
push
mov
inc
mov
sub
jns
xchg
pop
call
xor
inc
sub
ss
imul
not
xchg
daa
and
nop
mov
pop
push
and
ds
sar
mov
lea
xchg
or
das
pop
dec
pop
call
cld
(bad)
ss
jmp
jno
movs
push
push
in
ja
adc
loopne
add
pusha
mov
scas
test
fld
addr16
pop
mov
ins
cmc
push
addr16
xchg
cmps
in
ja
sbb
or
add
pop
push
and
sub
mov
push
shl
lods
or
push
xor
jnp
cmps
popa
xor
je
inc
fld
mov
inc
xchg
cs
or
xchg
outs
xor
popa
movs
cmp
mov
jg
rcl
cmp
ins
pop
cmp
dec
jo
and
xchg
mov
imul
cmp
cs
mov
das
mov
cwde
xor
and
add
adc
push
mov
js
inc
popa
ret
jnp
ins
lds
push
jl
data16
jae
pop
mov
ss
add
bound
xchg
xor
cmp
or
push
hlt
mov
inc
xor
js
int
jg
or
mov
push
sar
or
lods
adc
push
cmp
jne
xchg
out
adc
dec
push
push
add
jecxz
je
inc
and
mov
cmp
pop
mov
inc
nop
mov
push
fwait
jp
xchg
ds
lea
cmp
dec
mov
mov
push
inc
mov
iret
ror
mov
push
test
stos
mov
mov
xor
pop
dec
pop
stc
test
fwait
test
mov
cmp
adc
arpl
mov
push
xchg
mov
mov
mov
mov
add
ret
(bad)
cmp
add
pop
mov
push
jg
cmp
sti
scas
jmp
aas
adc
mov
push
and
and
mov
xchg
and
jmp
loope
mov
mov
push
push
aaa
mov
inc
inc
loopne
mov
pop
fimul
sbb
push
add
sbb
leave
push
(bad)
dec
mov
shl
mov
jge
out
and
fwait
or
jns
aam
and
leave
mov
xor
add
inc
fmul
test
pop
add
pop
xchg
sahf
adc
call
push
push
or
mov
cmp
lahf
movs
mov
out
xor
or
int3
jp
push
jg
lods
xor
add
js
pop
mov
adc
adc
pop
jno
rcl
adc
das
jmp
jmp
popf
dec
adc
inc
add
push
(bad)
push
adc
jmp
xor
pmaxsw
cwde
xor
inc
out
sbb
xchg
push
sbb
push
je
outs
jne
or
mov
dec
bound
fadd
push
aad
pop
jge
lods
in
or
cwde
sub
pop
es
pop
xor
ret
fisttp
adc
xor
push
push
dec
out
hlt
jecxz
pop
inc
mov
push
mov
(bad)
adc
ins
and
xchg
adc
jmp
push
sub
add
sbb
test
shl
leave
add
cmp
sbb
or
dec
adc
sbb
mov
adc
ds
inc
imul
ja
xor
mov
in
mov
inc
data16
add
dec
push
sbb
xor
jnp
mov
add
dec
add
ins
pop
fistp
lahf
lods
call
fimul
aas
ret
or
xor
push
nop
sbb
imul
sub
pusha
test
stos
xor
inc
pop
jle
jle
rcr
or
gs
xchg
push
stc
sti
(bad)
popa
add
adc
dec
sar
mov
xchg
or
faddp
add
push
cmp
xor
inc
inc
or
mov
mov
sub
fild
and
xlat
sbb
stos
xor
mov
out
movs
xlat
and
cs
es
or
mov
(bad)
imul
or
sub
xchg
pop
jmp
add
mov
ret
loopne
dec
pusha
fnsave
add
mov
cmp
sbb
dec
adc
shl
adc
(bad)
enter
pusha
mov
pop
mov
(bad)
xchg
mov
cmp
xor
add
adc
dec
cmp
push
add
je
cmps
test
jnp
cmp
je
cmp
sub
dec
(bad)
and
shr
push
cmp
rcr
pop
icebp
sbb
and
add
and
pop
mov
and
das
movs
in
cmp
xchg
(bad)
stc
jge
or
nop
jl
sub
inc
lahf
jle
mov
cmp
cmp
sbb
movs
mov
lods
aas
cmps
dec
test
stos
pop
adc
inc
or
cmp
arpl
pop
pop
fist
and
movs
mov
lahf
inc
push
test
lahf
lea
mov
xchg
fmul
sub
inc
leave
dec
inc
or
or
(bad)
pop
or
pop
fstp
and
push
mov
mov
test
or
xor
or
mov
jb
inc
and
sbb
sahf
test
push
adc
inc
cs
dec
loopne
pusha
inc
nop
outs
clc
in
gs
inc
or
arpl
and
and
inc
add
loop
rcr
and
pop
add
jno
or
ror
test
in
mov
test
or
adc
add
add
pop
adc
cmp
rcr
push
punpckhwd
not
jne
lods
mov
sbb
xchg
ss
hlt
inc
xor
or
mov
inc
sub
call
jl
jbe
nop
xchg
cmp
dec
ret
lods
in
leave
cmp
loop
aam
mov
jmp
cmps
scas
out
pop
dec
leave
inc
inc
ret
push
sub
fs
mov
or
mov
sbb
push
(bad)
repnz
in
adc
jg
pop
arpl
adc
sub
adc
jecxz
arpl
rcl
sub
and
not
mov
pop
or
inc
pop
imul
(bad)
jo
cmps
ins
xchg
push
inc
mov
sbb
pop
test
(bad)
out
(bad)
dec
mov
mov
inc
test
les
clc
and
jb
addr16
ror
or
inc
aas
xchg
lahf
in
mov
mov
dec
sbb
(bad)
lods
jge
xchg
jle
xchg
jge
add
and
inc
jne
mov
ficom
cmp
inc
cdq
scas
sub
fidivr
dec
icebp
ss
sbb
or
sar
arpl
xchg
leave
inc
or
imul
(bad)
add
and
loope
lea
int
xor
int
pop
adc
or
(bad)
push
jl
xor
adc
cld
repz
cld
add
dec
inc
mov
cmp
inc
sub
aas
push
into
add
test
sub
popa
add
int
lods
and
fistp
or
xor
nop
mov
jb
movs
in
mov
cmp
inc
in
xor
leave
test
inc
nop
ins
clc
sub
jecxz
sub
jmp
jmp
jmp
jmp
pop
call
lock
in
add
movs
ror
enter
mov
push
jmp
jae
jmp
loopne
cmp
mov
or
movs
rcr
add
scas
add
adc
adc
(bad)
sub
pop
pop
jae
popa
stos
lahf
sbb
push
rol
push
popa
pop
aam
shl
jnp
sub
ss
je
mov
adc
jmp
cmps
sbb
dec
pop
dec
js
mov
push
or
js
adc
pop
dec
jg
add
cmp
adc
aas
push
push
arpl
gs
leave
pusha
inc
js
add
shl
sti
xchg
adc
je
or
xor
mov
push
cmp
cmp
and
xor
stos
sub
clc
out
sbb
dec
cmp
fnstcw
sbb
and
pop
and
pusha
adc
into
shl
and
ror
jae
sar
push
add
js
cs
retf
xchg
adc
cmp
mov
aaa
movs
pop
xchg
inc
mov
inc
mov
icebp
popa
inc
pop
addr16
inc
xlat
sub
lea
rep
mov
xor
sub
push
int3
mov
cmps
int3
pusha
sub
inc
jmp
fiadd
ins
jmp
retf
dec
popa
push
js
add
rcl
and
iret
cli
xor
and
push
sub
add
inc
jecxz
and
lahf
push
and
inc
jmp
movs
jnp
cmp
nop
add
dec
into
sub
push
nop
outs
sub
ins
xor
mov
pop
mov
sub
les
ficom
rol
adc
stos
mov
mov
xchg
cmp
outs
xor
sbb
mov
pop
push
mov
dec
rol
xchg
fwait
add
pop
jmp
add
mov
popa
xor
and
mul
inc
arpl
inc
dec
outs
cwde
or
pop
in
(bad)
fst
fld
fs
jmp
mov
cld
leave
xor
js
mov
dec
sbb
dec
jb
test
adc
adc
or
popf
add
or
cmp
or
lea
movs
cdq
fmul
enter
cwde
loopne
push
scas
std
not
mov
mov
push
(bad)
push
scas
add
xchg
push
mov
push
pop
cmp
mov
inc
out
mov
sbb
sbb
and
arpl
jecxz
int
repnz
imul
xchg
mov
sub
or
dec
daa
das
inc
popf
or
test
test
inc
inc
push
rol
inc
out
popf
jge
pusha
or
js
test
inc
mov
lods
gs
inc
or
adc
fisttp
dec
push
push
sub
ror
cmp
les
push
or
shl
pop
in
fadd
adc
mov
test
and
push
call
mov
cdq
add
lock
in
test
jg
pushf
and
and
or
xchg
xor
mov
les
dec
pop
js
call
pop
push
mov
jge
push
inc
loope
add
enter
cmp
or
int
outs
cmp
xor
or
cmp
lock
jno
xchg
pusha
adc
stc
outs
bound
movs
and
mov
and
push
jnp
mov
pop
pmaddwd
push
xor
(bad)
(bad)
arpl
pop
movzx
add
(bad)
jmp
jmp
lods
in
adc
xor
or
ret
sbb
pop
mov
add
dec
add
test
rol
xchg
in
add
jbe
in
or
outs
pop
sub
gs
inc
adc
scas
es
jae
enter
daa
aas
pop
adc
push
sbb
jno
push
mov
or
add
fistp
dec
mov
ins
sub
rol
xchg
or
xchg
dec
and
ja
sbb
psrlw
sbb
dec
sub
dec
push
loop
std
dec
dec
and
jg
adc
call
mov
in
mov
push
mov
adc
icebp
mov
rcl
imul
sub
xor
inc
clc
pop
add
sub
add
fcom
lock
sub
and
or
inc
pop
lds
jbe
mov
jp
test
or
test
fcmovnu
mov
jg
jmp
and
cmp
cwde
sub
xchg
dec
sub
dec
inc
fld
jge
dec
jo
data16
inc
outs
imul
pop
dec
jns
jecxz
or
sbb
test
leave
les
jg
pop
push
hlt
ins
and
xchg
fcmovnbe
dec
cs
cld
and
sbb
sub
leave
shl
popa
bound
dec
and
adc
ja
movs
stc
xor
test
adc
movs
or
sbb
pop
add
mov
push
lahf
or
in
in
aas
enter
and
jp
pusha
and
sbb
adc
dec
popa
add
shr
pusha
add
cmp
ror
or
add
addr16
cli
das
lock
xchg
sbb
rcr
push
jb
mov
ss
and
pop
lahf
adc
fnsave
in
push
pop
pop
outs
xchg
mov
adc
fwait
jbe
test
fld
and
pop
adc
in
(bad)
or
inc
aas
dec
movs
add
mov
xchg
retf
xor
xchg
daa
or
jecxz
jmp
rol
and
in
and
push
cmp
(bad)
out
ret
stos
sar
adc
test
aas
aas
or
pop
jb
inc
shl
(bad)
and
cmp
(bad)
outs
or
not
(bad)
pop
popa
adc
add
scas
jno
fcom
lea
add
nop
outs
dec
pushf
pop
and
sub
aas
movs
sub
add
(bad)
jno
xor
jnp
dec
or
sbb
retf
in
div
dec
loope
add
in
ins
push
add
dec
je
stos
adc
cmp
adc
pushf
(bad)
cmp
ds
lock
ss
jb
neg
call
dec
adc
jl
xchg
jbe
shl
or
movs
out
xchg
(bad)
jmp
pop
leave
scas
push
adc
das
add
int3
sbb
loop
jo
jne
mov
inc
xor
xchg
or
adc
and
cmp
(bad)
loope
lock
sbb
loope
pop
cmp
push
cmp
test
jnp
sbb
dec
xchg
fcmovbe
ret
and
sbb
lds
xchg
push
sbb
(bad)
cmp
lea
ror
jecxz
add
and
test
sbb
inc
or
cmp
xchg
or
in
aas
ja
add
sub
mov
dec
retf
frndint
xor
mov
and
mov
fnstcw
push
mov
outs
xchg
cmc
inc
adc
rcr
jmp
outs
std
and
jmp
sub
rcr
mov
rdmsr
sbb
add
sbb
mov
add
mov
jmp
addr16
pop
jmp
jmp
xor
sbb
movs
push
clc
jmp
add
push
and
mov
sub
or
cmc
and
push
xchg
adc
popa
(bad)
jno
jbe
add
cdq
outs
cmp
sub
mov
pop
sbb
ror
(bad)
add
pop
jg
jo
or
xchg
sub
ror
nop
das
ror
retf
leave
xchg
aam
add
mov
push
xchg
loop
inc
retf
jle
aas
loopne
fs
stc
push
fistp
and
mov
sbb
imul
sbb
xor
das
loop
jecxz
mov
dec
(bad)
fs
lds
cmp
xor
imul
into
and
pop
outs
(bad)
in
push
pushf
pop
loop
mov
inc
icebp
add
in
arpl
shr
mov
daa
mov
adc
jns
mov
and
or
jns
js
cmps
fild
xor
xor
test
cmp
(bad)
push
dec
shl
cmp
lods
inc
es
inc
cmps
mov
mov
jmp
and
jge
sbb
cmp
nop
inc
and
sub
mov
push
xor
bound
(bad)
outs
jmp
push
cld
or
loop
jne
cmps
xor
mov
sar
sbb
clc
lods
inc
pop
daa
popa
cmp
add
dec
inc
add
inc
add
stos
inc
ins
and
fild
or
je
xor
scas
ror
cmps
ror
mov
cmps
aam
adc
add
outs
sub
sub
adc
xor
ret
mov
jg
dec
xchg
jo
or
shl
cmp
sbb
pop
fmul
cli
fild
push
push
inc
pop
pop
fld
add
leave
jbe
imul
add
inc
mov
sub
sbb
sub
sahf
inc
ins
mov
adc
pop
pop
mov
test
(bad)
and
stos
lds
aam
xor
rcr
movs
fisubr
cld
cmp
inc
and
lods
fdivr
push
ret
es
ror
add
dec
pop
sub
xor
outs
hlt
inc
adc
pop
adc
call
and
sub
outs
and
sub
enter
dec
(bad)
xchg
nop
jecxz
push
jg
mov
cmp
adc
dec
pop
ds
mov
and
or
sub
or
pop
mov
movs
pop
jo
cmp
popf
xor
adc
cld
or
clc
call
scas
adc
cmps
prefetch
sahf
inc
add
shl
sbb
pop
es
mov
add
sub
movs
pop
push
retf
cmp
aas
movs
push
nop
xchg
in
cwde
or
push
dec
movs
sub
dec
and
cmp
std
jle
(bad)
adc
push
(bad)
out
shl
or
int3
cmc
dec
daa
push
pop
and
or
jno
test
or
sbb
scas
mov
arpl
pop
inc
push
inc
test
test
or
xchg
or
in
or
icebp
dec
or
in
scas
imul
xchg
jnp
inc
lds
sbb
push
pop
dec
mov
push
loopne
mov
outs
or
sub
sub
retf
mov
or
bound
jns
pusha
mov
into
xchg
sub
mov
pop
ret
and
xor
dec
movhps
ror
add
xor
adc
xor
jne
(bad)
pop
inc
int3
xor
xchg
js
and
cmps
push
ds
pusha
pop
in
adc
arpl
stc
xor
push
nop
adc
inc
mov
fldenv
push
stc
xchg
push
pop
jp
push
cmp
je
jecxz
cwde
pop
mov
pop
adc
sub
pusha
lods
fisttp
int3
or
fild
inc
iret
jno
inc
mov
test
xor
xchg
bound
or
arpl
div
pop
pop
xchg
sub
adc
add
mov
push
stc
jns
cmp
movs
inc
mov
adc
inc
xchg
mov
popa
nop
xor
(bad)
sbb
(bad)
in
call
hlt
dec
fist
or
ins
pop
retf
inc
jbe
xchg
sbb
cmp
jo
je
pop
shl
jg
or
lods
push
punpckhbw
fs
mov
ror
pop
jg
addr16
and
sbb
add
test
or
xchg
nop
nop
or
and
imul
int3
push
xor
fiadd
inc
mov
lods
and
xor
popa
mov
rcr
and
loopne
mov
jae
inc
cmps
sub
sbb
mov
or
inc
adc
or
inc
popa
sub
test
dec
sbb
pop
add
adc
pop
dec
push
jle
and
mov
ret
inc
push
adc
call
dec
push
push
and
xchg
push
inc
popa
and
add
rcl
shl
stos
inc
dec
xor
push
addr16
dec
add
rcl
popf
or
or
in
inc
and
outs
push
popa
js
xchg
mov
imul
xchg
push
xor
movs
and
clc
adc
xchg
xor
sbb
push
mov
fwait
js
adc
test
pop
mov
sbb
jle
add
lahf
push
and
add
aam
xchg
(bad)
mov
inc
out
mov
or
arpl
xor
inc
bound
mov
sbb
repnz
jns
push
inc
call
xchg
xchg
aam
nop
add
cld
in
sbb
mov
mov
aad
pop
or
inc
ja
in
fcmovnbe
ret
mov
ja
adc
ins
jnp
mov
mov
or
xor
xchg
(bad)
xchg
and
je
sub
(bad)
(bad)
push
inc
stos
jge
push
mov
movs
add
aam
or
popa
sub
push
inc
call
aam
fsub
pop
pop
pop
enter
fwait
mov
xchg
dec
cwde
adc
lock
xchg
daa
int3
cld
jmp
seto
add
ins
retf
pop
jns
das
test
and
nop
int
pusha
jns
sbb
mov
pop
or
int
bound
loopne
jns
enter
aaa
xchg
aad
(bad)
je
adc
or
nop
and
ret
je
add
enter
scas
rcr
push
daa
xchg
mov
mov
shl
and
sbb
in
push
movs
enter
dec
dec
xlat
push
std
nop
shr
popa
call
es
fs
mov
jl
jbe
fbstp
(bad)
aaa
add
ret
sbb
xor
int3
fistp
and
mov
icebp
int3
mov
adc
jmp
inc
fwait
mov
test
push
nop
sbb
in
inc
rol
in
or
push
test
add
loope
shl
movs
loop
push
dec
or
dec
add
adc
jns
dec
loopne
fsub
or
sbb
rol
push
pop
cmp
pusha
mov
mov
and
aam
test
mov
leave
bnd
retf
jns
push
xor
adc
mov
adc
pop
out
pop
cli
add
dec
sbb
and
imul
sbb
cmp
rcr
outs
adc
pop
call
push
xor
mov
pop
mov
movs
movs
and
inc
lock
adc
cmps
push
sbb
push
fadd
and
sub
lock
or
push
mov
jmp
push
shl
cmp
add
mov
movs
cld
xor
adc
or
jno
cwde
sti
ds
pushf
xor
addr16
sub
jge
push
cmp
pop
data16
cmp
or
aas
xchg
jl
sbb
inc
dec
cmp
xor
data16
js
iret
mov
clc
xor
fs
or
popa
or
dec
inc
jne
mov
jmp
jne
mov
pop
neg
nop
jmp
jmp
jne
jmp
mov
and
test
rcr
add
cld
pop
aaa
sub
lods
and
push
push
cmp
ds
bound
add
lahf
or
mov
int
clc
dec
mov
fmul
jne
hlt
or
jle
imul
bound
mov
sub
imul
stos
dec
inc
jle
ret
adc
cmp
mov
cmp
mov
test
sub
xor
add
dec
add
xor
jmp
pop
ror
sub
sub
out
fisttp
or
rcr
mov
aas
or
push
adc
movzx
pop
enter
mov
shl
or
pop
jecxz
add
shr
add
adc
movs
adc
xor
sbb
enter
mov
lds
hlt
or
daa
call
rcl
adc
and
mov
xor
xor
add
dec
mov
cmp
mov
ret
cmp
pop
pop
and
loope
fdivrp
and
gs
aam
add
cli
mov
mov
xor
aad
jo
mov
xor
and
jl
sbb
leave
add
repnz
ret
sbb
pusha
mov
outs
movs
mov
lods
outs
ins
ror
jbe
push
cmp
movs
(bad)
cmp
dec
fiadd
in
fdivr
add
es
in
and
popa
adc
xor
repnz
and
sbb
adc
mov
icebp
adc
shl
adc
or
mov
daa
neg
test
lods
adc
adc
ret
ss
int
add
pop
jbe
loop
je
adc
retf
and
je
jecxz
je
out
lock
popa
xchg
or
in
mov
jl
push
adc
and
repnz
call
shl
mov
push
push
fcom
or
jb
movs
loopne
add
dec
adc
add
popf
retf
adc
add
and
iret
mov
or
push
jmp
fcmovbe
adc
inc
cmp
mov
adc
or
adc
dec
xchg
pop
push
ret
adc
push
pop
dec
push
and
cmp
push
popf
clc
loop
sbb
call
push
mov
or
or
and
(bad)
push
inc
mov
or
adc
sbb
dec
dec
out
test
mov
cmp
rcl
inc
mov
dec
sub
les
pop
push
mov
ret
mov
mov
stos
fcomp
(bad)
les
fstp
mov
repz
mov
lea
pop
xor
pop
call
push
mov
or
outs
and
or
sub
xor
xchg
xchg
out
lods
mov
add
xlat
nop
(bad)
subps
jne
ror
xchg
ss
sub
ror
std
push
mov
retf
test
cwde
jne
adc
into
and
sub
mov
(bad)
jne
jmp
push
hlt
add
xchg
xchg
and
inc
sahf
popa
pop
jno
push
clc
jp
mov
(bad)
push
jecxz
jl
inc
mov
test
scas
stos
adc
scas
xchg
mov
mov
mov
inc
inc
ss
std
lahf
sub
das
jnp
add
pop
mov
mov
dec
push
test
mov
or
test
adc
in
test
push
xchg
sub
cmps
jno
add
retf
fnsave
movs
jge
out
movs
mov
mov
and
xchg
ret
jp
xchg
pop
mov
int
mov
pop
adc
or
loope
xchg
data16
sub
pop
mov
and
in
push
xchg
sub
data16
movs
jmp
push
cmp
test
and
inc
movs
inc
cs
mul
add
movs
scas
jns
add
xchg
xchg
inc
mov
add
xor
xchg
stos
inc
push
jg
cmp
jb
dec
imul
ja
cmp
lahf
mov
fmul
dec
sub
add
(bad)
ins
leave
shr
jmp
lea
inc
lahf
mov
adc
push
shr
lock
push
lock
push
dec
pop
pop
push
arpl
call
enter
loope
add
xor
call
sbb
lock
es
xlat
fiadd
push
inc
adc
sbb
push
inc
mov
mov
mov
xor
adc
push
fidivr
jmp
ds
or
jmp
and
pop
mov
inc
adc
add
xor
cld
inc
xchg
push
jnp
inc
mov
add
push
fld
jns
mov
xor
mov
imul
inc
ds
fcom
imul
idiv
cmp
mov
pop
mov
test
clc
mov
mov
lds
add
or
daa
cmc
mov
je
and
adc
adc
add
sbb
ins
jbe
cmp
sub
mov
push
cmp
xchg
call
cdq
bound
or
sub
pop
pop
scas
in
push
mov
xor
stos
movs
mov
jae
cmp
or
mov
aaa
push
cdq
sbb
xor
or
push
js
dec
aas
leave
push
rcl
or
icebp
adc
imul
ins
jmp
and
mov
and
inc
push
adc
pop
lea
dec
shl
jne
cmps
or
sbb
ja
xor
xor
push
in
les
stos
push
cld
or
mul
mov
sub
leave
cmp
bound
push
sub
fisubr
in
fidiv
scas
or
cld
jno
dec
pop
or
call
jmp
pop
sbb
xor
sub
hlt
sbb
das
test
shl
adc
js
push
jmp
(bad)
sbb
xchg
add
test
xchg
in
fdivr
pop
nop
and
in
mov
sub
dec
jle
jno
or
jo
sbb
xor
stos
dec
stc
and
es
jge
add
in
jae
jnp
ret
add
dec
rcl
add
(bad)
jmp
imul
push
fsubr
jp
mov
leave
(bad)
fstp
inc
pop
test
popa
add
and
cmp
adc
test
je
xor
add
mov
add
js
jne
mov
aad
inc
dec
arpl
push
and
cmp
shr
cmp
dec
pminub
mov
clc
and
xor
mov
sbb
iret
lock
push
imul
(bad)
loopne
push
ins
fs
call
mov
dec
inc
test
inc
pop
xor
pop
adc
dec
pop
and
pop
nop
pop
sbb
icebp
or
gs
jo
and
ins
pop
ins
cmp
mov
rcr
sbb
and
jmp
and
and
adc
and
mov
jnp
and
sbb
mov
repnz
jmp
jae
icebp
add
sub
pop
dec
imul
jb
sbb
jne
jmp
sbb
xchg
pop
or
sub
ja
sub
in
push
inc
mov
cmp
out
jbe
les
stc
push
xor
xchg
fld
shl
push
cmp
nop
scas
movs
cwde
jno
push
sub
xlat
inc
and
test
cdq
aad
push
(bad)
xchg
rcl
out
mov
imul
dec
pop
inc
adc
call
scas
push
in
cmp
jl
or
push
outs
loop
pop
mov
xor
add
pusha
(bad)
addr16
sub
shl
jbe
ret
cmc
mov
xchg
jle
sbb
outs
popa
pop
adc
(bad)
and
cmp
adc
dec
les
nop
xchg
mov
inc
or
rol
iret
cmp
inc
mov
out
scas
mov
int
cmc
jl
cmp
or
xchg
xlat
es
jmp
push
cmps
mov
push
sub
call
adc
push
or
popa
hlt
das
pop
add
add
and
dec
mov
jmp
adc
enter
push
neg
lahf
adc
adc
je
mov
push
or
daa
nop
sar
xchg
adc
(bad)
push
cld
cld
jbe
cs
mov
cmp
sahf
xor
ds
call
rcl
adc
mov
mov
pop
(bad)
fnstsw
div
rol
sub
or
bound
test
popa
dec
int
aas
push
xor
jns
and
push
test
outs
sbb
cmp
jae
sub
mov
das
inc
pop
aas
out
adc
mov
add
cmp
mov
or
stos
or
push
sar
sub
sub
add
add
mov
push
add
mov
(bad)
repz
imul
and
add
dec
leave
ror
dec
dec
retf
lahf
or
pop
sbb
mov
sub
ss
(bad)
mov
xor
inc
jne
pop
push
ja
mov
dec
push
cmp
mov
pusha
sbb
ret
sbb
icebp
cmp
jne
cmp
ins
xchg
or
dec
or
push
push
jmp
mov
xchg
pop
cmp
add
in
movs
and
pop
aas
aaa
jb
adc
xchg
push
add
pop
mov
movs
add
test
and
sbb
inc
out
cmc
push
jns
mov
dec
xchg
jno
sub
pop
bound
popf
lods
dec
cmp
or
inc
retf
and
pop
pop
push
cmp
mov
mov
enter
repnz
xchg
and
ss
ffreep
stc
push
jne
daa
lods
out
jge
pop
and
rcl
ffree
pop
pop
xor
mov
mov
push
movs
mov
or
leave
cmp
fs
xor
imul
pusha
scas
jns
add
jo
stc
mov
add
or
and
push
jns
xchg
add
add
inc
cmp
lahf
xchg
ja
or
xor
dec
stos
ret
es
pushf
xor
cmp
pop
adc
inc
xor
or
sar
mov
imul
hlt
ja
popa
mov
retf
lock
fcomp
loopne
ins
loopne
add
mov
addr16
or
adc
(bad)
sbb
push
mov
mov
mov
pop
ror
push
ss
test
imul
or
es
cmp
or
or
pusha
fs
mov
mov
push
xchg
pushf
or
mov
mov
mov
cmps
add
or
add
xchg
cmp
mov
dec
cmp
xlat
push
cmps
or
jmp
jmp
push
call
jae
jmp
sti
ror
xchg
clc
clc
lods
movs
loopne
jb
pop
pop
xlat
inc
sbb
fdivr
sub
xor
nop
mov
inc
jo
aaa
mov
test
dec
dec
xor
mov
or
mov
ret
cmp
jge
sbb
enter
cmp
dec
sbb
in
push
xor
rol
or
jmp
adc
in
jmp
add
dec
xor
pusha
mov
(bad)
cdq
test
outs
fisub
les
cmp
push
xor
sbb
shl
and
sbb
dec
inc
pop
stos
add
adc
adc
dec
cmp
jmp
sbb
shl
es
adc
test
sub
inc
dec
dec
and
or
inc
and
mov
inc
je
adc
lea
and
dec
dec
add
lds
push
xor
es
or
or
and
sub
and
cmp
repz
js
cmp
add
sahf
sbb
mov
add
add
mov
cmp
xor
inc
pop
dec
sub
loop
leave
sub
and
sub
mov
and
sbb
sub
lods
add
sar
pop
dec
cs
pop
jae
or
call
pop
mov
cmps
stos
add
bound
bound
xor
pop
jmp
fdiv
pushf
inc
sub
ror
xchg
shl
test
xchg
jl
cdq
mov
repz
mov
addr16
mov
sbb
add
xor
nop
xchg
push
in
loope
aaa
loope
xchg
mov
mov
ret
lods
adc
and
sbb
popf
xchg
pushf
scas
xchg
sub
clc
xchg
add
pushf
and
hlt
addr16
pop
stos
leave
popf
adc
xor
xor
pop
push
pop
adc
repz
xchg
xchg
and
adc
mov
push
adc
cwde
sub
jae
mov
add
sub
cmp
add
pop
repz
or
lock
pop
out
data16
in
xchg
sub
push
sbb
fbstp
mov
in
inc
in
aaa
fadd
jmp
adc
in
xchg
je
or
loopne
push
pusha
xor
xchg
and
xchg
aaa
call
xor
mov
xor
lock
je
add
add
inc
mov
shl
add
fsubr
push
lods
and
mov
rcl
xor
xchg
pusha
add
jmp
mov
cmp
mov
adc
nop
lahf
sbb
adc
iret
or
push
adc
add
call
cmp
add
fiadd
add
cmp
out
int3
loope
pop
xchg
mov
jns
repz
add
add
cmp
add
xor
test
cmp
shl
clc
add
out
out
jns
jnp
sbb
idiv
cmp
out
daa
stos
push
shl
or
idiv
repz
jo
mov
jns
or
push
inc
jmp
iret
add
xchg
fadd
or
stos
fwait
shl
out
pop
pop
out
dec
jnp
push
ja
push
pop
jbe
out
sahf
xchg
stos
(bad)
fmul
cmp
addr16
int
es
inc
add
add
int3
unpckhps
enter
addr16
pop
pop
xor
jg
fsub
gs
xchg
jb
mov
dec
sub
sub
test
scas
or
dec
fcomp
jne
xchg
push
mov
std
push
clc
and
sbb
and
mov
inc
sub
and
data16
xor
imul
call
and
sbb
xchg
dec
into
repz
shr
nop
mov
out
dec
sahf
inc
push
xor
pop
jp
jns
stos
test
std
std
sub
movs
mov
rcl
xor
inc
jae
aaa
sbb
and
lock
test
pop
adc
cdq
inc
xchg
fadd
bound
jg
mov
pop
add
xor
fistp
dec
in
xchg
mov
sbb
in
xchg
cmp
call
pop
cmp
out
adc
in
adc
retf
movs
mov
ret
dec
push
jo
jg
jbe
push
push
test
sub
and
fisub
jmp
pop
pushf
sar
aam
test
ins
or
push
pop
bndldx
mov
inc
ss
add
repnz
adc
aas
push
xchg
hlt
mov
xor
jl
adc
inc
jmp
popf
movs
or
pop
mov
pop
push
mov
inc
sahf
mov
or
sbb
ja
out
sub
mov
mov
pop
pushf
sbb
lods
out
pop
add
or
ffreep
add
fs
xor
jnp
pop
nop
add
adc
(bad)
jge
jno
or
(bad)
jmp
jbe
test
daa
jmp
or
xchg
or
mov
je
loopne
sahf
push
cmc
pop
in
ins
ret
cmp
add
enter
push
fld
ret
xor
adc
push
rcl
sbb
sub
out
in
sbb
push
les
inc
mov
sbb
push
cmp
xor
aad
(bad)
or
inc
sbb
push
int
add
or
adc
or
retf
or
adc
xor
jg
std
push
lods
into
xor
mov
sbb
add
or
or
ror
mov
test
sub
pop
shl
add
sbb
or
sbb
push
cmp
ud1
or
xchg
add
mov
fmul
pop
add
mov
inc
ja
sbb
fadd
jg
int3
push
fisubr
ss
jb
and
or
sbb
mov
and
repnz
and
popa
add
jmp
in
(bad)
sub
jne
div
or
sbb
mov
xchg
clc
push
add
(bad)
out
sbb
neg
jns
add
cmp
sbb
test
mov
xchg
lods
push
cmp
loop
loopne
pop
psubd
jne
pop
or
cmp
or
or
adc
shl
add
or
sub
inc
push
loopne
(bad)
retf
sub
sub
call
retf
xchg
fs
mov
add
dec
mov
pusha
movs
test
loop
mov
cmp
or
sbb
les
stos
adc
push
aas
xchg
or
inc
dec
sub
cmps
aam
pop
fwait
aam
mov
or
loope
popa
pop
sbb
inc
adc
inc
dec
jnp
sub
int3
or
cwde
dec
sub
ss
pop
xor
jnp
inc
push
push
mov
imul
cmp
add
call
add
inc
push
pop
inc
fisttp
sub
sub
xchg
dec
retf
mov
add
movs
stc
or
dec
aam
sbb
and
push
sub
inc
rol
or
and
jbe
cdq
bound
xchg
add
or
inc
jp
adc
outs
imul
popa
cmp
adc
xchg
addr16
dec
push
inc
mov
mov
les
push
push
add
bound
and
test
mov
or
jo
(bad)
in
imul
push
test
dec
add
lods
xchg
or
pop
adc
add
push
jae
cs
push
test
push
dec
cwde
push
jecxz
mov
xor
out
mov
inc
mov
xor
lods
pop
ds
jb
test
mov
jno
and
jmp
mov
cmps
mov
xchg
stc
aad
and
push
add
jp
es
mov
xor
adc
mov
clc
ja
loope
xrelease
xor
inc
xor
sbb
dec
movs
and
add
mov
scas
aam
sub
adc
aam
jmp
cld
inc
call
(bad)
aam
mov
add
sbb
mov
sbb
adc
iret
xor
jbe
adc
mov
sbb
out
mov
pop
call
stc
cld
sbb
adc
mov
movs
pop
dec
(bad)
dec
call
out
outs
mov
cmp
ja
icebp
or
je
les
sbb
push
sbb
xchg
inc
xor
repnz
push
pop
fdiv
cdq
mov
sbb
outs
in
pop
sub
xchg
sbb
mov
xchg
push
xchg
(bad)
movs
adc
fstp
dec
adc
jmp
fcmovnu
mov
cs
test
cmp
mov
add
or
nop
add
add
shr
jne
mov
adc
or
xor
popa
jnp
gs
lods
dec
rcr
imul
or
mov
jecxz
loopne
imul
lahf
mov
loop
mov
jnp
test
push
ror
pop
xchg
jmp
cld
push
lahf
pop
loope
adc
fiadd
push
xchg
or
pop
cdq
loope
cwde
(bad)
push
adc
cld
pop
add
aas
jnp
cld
pop
mov
and
ffree
sbb
push
sbb
or
push
popa
call
hlt
sub
xor
inc
jae
loope
ins
bound
and
aad
mov
pop
repnz
cmps
inc
push
shl
mov
adc
icebp
push
push
rcr
idiv
adc
add
pop
(bad)
out
push
jb
add
fdivr
cld
lds
xor
cld
cld
cld
outs
push
dec
xchg
inc
jle
stos
outs
test
pop
inc
call
sbb
hlt
sbb
jg
cmp
test
and
or
cmp
xchg
push
xchg
mov
jge
mov
pop
sbb
xor
inc
pop
xor
outs
and
mov
inc
inc
mov
xor
rol
push
push
daa
add
iret
add
call
xor
test
in
inc
push
leave
adc
mov
pushf
pop
and
fbld
nop
jbe
shl
and
aas
and
or
es
jnp
inc
lock
and
rcl
stos
xchg
rol
inc
or
xchg
sub
cwde
rcr
sbb
add
cmp
jmp
push
(bad)
(bad)
and
push
into
xchg
bnd
pop
xchg
push
(bad)
dec
stos
cmp
cmp
pop
xchg
mov
lds
add
mov
jne
and
xor
or
push
push
inc
adc
mov
jmp
push
jmp
jae
es
add
add
fild
xchg
je
add
int3
jne
lea
sub
and
mov
adc
and
xor
add
xchg
inc
loope
adc
ja
add
cmp
adc
xchg
or
mov
in
push
loopne
push
or
retf
fchs
sbb
es
fcom
xor
and
push
mov
cmp
(bad)
les
mov
mov
push
pusha
push
xchg
ds
fsubr
xchg
mov
ret
vaddpd
das
fs
adc
aaa
in
add
inc
in
sar
xchg
jecxz
jns
push
xor
addr16
mov
adc
mov
pop
mov
sub
test
cmp
jae
add
inc
shl
and
inc
scas
loopne
test
push
jns
push
and
push
push
adc
xchg
sbb
push
outs
pushf
push
leave
aam
pop
rcl
mov
push
nop
and
nop
movs
pop
add
retf
dec
mov
sub
pop
jg
jmp
inc
mov
adc
in
add
jo
push
cmp
test
fidiv
popa
stos
jns
jmp
mov
dec
inc
xchg
mov
dec
shl
sub
(bad)
mov
mov
clc
sub
pop
mov
jmp
(bad)
mov
push
adc
mov
aaa
stos
and
cmp
shr
xchg
dec
in
mov
test
sub
and
stos
std
dec
mov
and
cmc
add
or
or
add
cmp
enter
dec
push
dec
mov
or
or
test
push
push
and
inc
les
or
push
sbb
dec
dec
push
dec
jmp
push
and
mul
push
inc
cmp
mov
outs
xchg
jmp
jp
lea
xchg
outs
sbb
cmp
push
das
jl
mov
je
and
or
pop
inc
jnp
ret
dec
pushf
shr
push
or
dec
sub
add
and
add
push
lea
mov
mov
aas
dec
inc
shl
fcmove
sub
and
aaa
pushf
sub
xor
pusha
xor
cmp
inc
icebp
pop
es
mov
add
lds
jne
sub
jnp
xor
xor
mov
jl
(bad)
ins
xchg
sub
or
mov
inc
mov
push
pop
jnp
repnz
push
pop
sub
jle
jmp
jae
push
arpl
pop
push
mov
div
into
adc
neg
push
xchg
adc
sbb
push
(bad)
ret
and
and
sti
test
add
push
sub
or
bound
add
sub
inc
inc
rcl
or
add
or
fs
cld
(bad)
cld
inc
xchg
inc
push
cmp
or
and
cmp
or
(bad)
in
(bad)
lock
hlt
aas
fcom
adc
test
in
(bad)
push
retf
xchg
daa
lock
hlt
(bad)
mov
add
fdivr
fcomp
in
xchg
inc
push
cmp
loopne
push
cdq
add
xor
int3
push
jno
inc
rcl
(bad)
sub
cs
enter
nop
and
sar
aam
xor
loopne
add
rcr
repnz
xchg
(bad)
mov
mov
dec
push
dec
lods
(bad)
lods
(bad)
mov
and
in
(bad)
mov
icebp
lods
nop
sub
sub
out
add
stos
xchg
mov
ja
in
cwde
(bad)
pushf
(bad)
mov
pop
imul
ins
cmp
movs
js
enter
dec
sub
add
sub
xchg
fs
xchg
dec
cwde
pushf
mov
movs
ins
dec
les
retf
cmp
mov
int3
cmp
dec
sahf
mov
jl
or
and
test
mov
add
dec
add
xor
loop
add
or
ins
jo
jb
into
je
or
movs
and
fs
ins
jo
adc
call
xor
push
push
pop
pop
in
retf
and
push
sbb
push
pop
pop
rol
in
or
ins
stos
imul
dec
aad
pop
adc
sbb
jmp
push
test
inc
inc
sbb
sbb
jmp
inc
out
mov
addr16
test
jmp
pop
mov
push
fwait
out
cmp
imul
mov
sub
ss
shr
les
pop
xchg
adc
sbb
jne
in
lods
icebp
das
pop
unpckhps
mov
lahf
sbb
xchg
sbb
adc
sbb
and
dec
adc
cs
cli
sbb
je
xchg
jo
fiadd
rcr
or
push
sti
jne
out
xor
push
lea
adc
and
sti
movs
dec
js
fadd
mov
push
and
das
add
push
sbb
jl
jns
aam
leave
inc
ror
add
or
push
shl
pop
nop
and
shl
mov
mov
js
test
adc
aad
cmc
ret
clc
push
pop
xor
cdq
movs
sbb
pop
shl
and
and
adc
add
lods
shl
add
sbb
mov
add
add
and
sar
and
retf
movs
xor
adc
sbb
push
inc
daa
push
rcr
xor
sbb
mov
fdiv
les
cmp
loopne
and
xor
fnstenv
jno
nop
and
fiadd
adc
pop
push
lahf
ror
in
mov
loope
sub
adc
sbb
add
(bad)
test
and
adc
out
popa
add
and
jb
leave
mov
or
push
add
rcr
sar
loopne
sub
adc
jb
dec
xchg
or
adc
xor
add
jb
lock
push
add
fisub
add
fist
jb
and
xor
push
dec
pop
(bad)
rcl
stos
in
loopne
xchg
adc
lahf
push
loopne
scas
or
sbb
sbb
sbb
hlt
clc
in
movs
mov
xor
adc
pop
mov
xor
lock
xor
add
and
es
add
dec
clc
jg
sub
lock
sub
jp
pop
or
clc
push
mov
jnp
or
scas
aad
stos
cwde
pop
pop
loopne
lock
and
ins
mov
add
or
sbb
fisub
arpl
cs
xchg
addr16
sbb
push
std
or
pop
xchg
adc
and
leave
aad
les
leave
sub
fwait
or
adc
add
mov
rcr
ret
adc
xor
xchg
push
xor
jb
pop
aad
cmp
cmp
sub
add
std
inc
and
or
inc
sbb
enter
and
push
sub
aas
dec
enter
xor
add
dec
leave
adc
cdq
jnp
adc
sub
push
push
mov
sbb
ins
adc
xlat
cmp
icebp
pop
add
aas
dec
pop
lods
xchg
pop
adc
test
sub
rol
xor
popf
retf
movs
jb
or
adc
nop
xchg
mov
scas
nop
stos
cmp
inc
les
mov
lahf
push
and
sbb
pop
inc
inc
sub
push
add
xor
sub
sbb
(bad)
push
push
jp
rcl
fld
mov
push
sub
and
push
bound
jge
inc
(bad)
sub
mov
mov
mov
push
pop
jo
jl
xor
push
add
fs
ja
xor
ret
fld
xor
rol
fadd
or
clc
xor
ss
(bad)
shr
adc
test
mov
cmp
and
sub
arpl
add
and
and
add
fistp
push
jle
lods
mov
js
jg
pushf
inc
xchg
and
and
dec
dec
clc
cmp
pop
jmp
adc
jno
std
outs
adc
mov
pop
inc
and
jo
dec
and
add
enter
mov
push
xchg
inc
rcl
dec
push
stos
movs
movsx
push
pushf
ror
cdq
xchg
inc
mov
inc
jae
push
in
mov
mov
mov
ret
and
mov
push
cmp
fwait
and
add
xor
inc
push
xor
ret
add
imul
rcl
sub
xchg
dec
fwait
mov
xchg
mov
mov
jbe
or
mov
add
out
jecxz
and
or
nop
ror
jmp
add
inc
(bad)
pop
dec
xchg
xchg
add
push
adc
lds
test
das
inc
push
mov
xor
or
out
inc
shr
adc
cwde
add
mov
xchg
pop
jnp
test
push
mov
pop
and
imul
fwait
sub
fld
dec
cdq
int3
push
sti
jecxz
dec
fidivr
es
push
or
mov
sub
sbb
shr
popa
mov
je
pop
mov
mov
mov
jno
ds
xchg
xor
jg
dec
(bad)
(bad)
inc
adc
enter
std
jle
rcr
jmp
outs
cwde
dec
pop
mov
sub
pop
dec
call
loopne
xchg
aaa
pop
adc
movs
stos
xlat
sub
adc
aad
cmp
lods
jl
dec
cmps
jo
pop
adc
int3
add
add
and
daa
je
pop
cmp
xor
cmc
jmp
xchg
popa
xchg
in
clc
popa
adc
xor
adc
inc
inc
fidiv
imul
jg
xor
enter
test
dec
clc
clc
rol
and
inc
add
mov
xchg
sbb
clc
and
sub
aam
push
mov
pop
leave
xchg
inc
push
pop
shr
sahf
movs
aam
inc
xlat
mov
out
xor
test
movs
push
sub
pop
jnp
pop
pop
dec
mov
add
xchg
dec
cmps
add
add
xchg
add
hlt
jmp
or
add
sbb
dec
and
xchg
je
shr
shl
sub
xor
in
add
adc
jnp
pop
or
mov
aas
xor
movs
je
inc
jbe
cmp
sahf
add
add
ja
movs
jb
sub
js
xchg
xchg
push
mov
ror
or
and
ss
inc
cwde
add
imul
int3
rcl
ret
aam
sub
jle
addr16
inc
ret
enter
mov
sub
je
sbb
mov
xchg
add
mov
mov
lock
or
inc
arpl
jl
inc
add
rcl
mov
xor
push
or
xchg
dec
and
shr
lock
mov
xchg
(bad)
mov
or
gs
xchg
or
add
pop
inc
test
aaa
movs
imul
mov
pop
add
stos
xchg
pop
je
or
inc
xchg
add
add
adc
mov
xchg
jns
lock
fisubr
rol
cmp
mov
nop
push
dec
stos
xchg
sub
push
mov
push
dec
cmp
push
adc
and
je
xchg
int3
jo
sub
or
or
push
sahf
dec
fdiv
cmp
cdq
xchg
and
lock
mov
inc
and
dec
add
push
cwde
(bad)
std
ss
or
dec
ror
hlt
pushf
push
xor
cmc
pop
rcr
add
inc
inc
je
cmp
lahf
xchg
inc
ins
es
out
outs
pop
pop
mov
sbb
clc
xor
mov
aas
add
aas
jmp
sub
mov
xchg
mov
ret
icebp
mov
or
mov
test
sbb
inc
push
fs
mov
sub
jnp
(bad)
pop
leave
dec
adc
inc
ror
addr16
jle
push
cmp
fisubr
xchg
sub
pop
pop
adc
int
jp
mov
mov
cwde
adc
cmp
mov
adc
or
xchg
adc
es
js
retf
cld
fadd
js
or
inc
retf
push
pushf
cmp
mov
jbe
push
inc
(bad)
mov
mov
sar
pop
or
mov
jl
mov
pop
pop
pop
call
(bad)
mov
sub
in
jmp
sub
jne
stos
mov
dec
or
pushw
clc
sbb
dec
arpl
mov
mov
sub
pop
les
mov
mov
push
add
ja
add
xchg
ret
pop
aas
push
sbb
jns
sbb
sub
loop
shl
sub
xchg
jo
jp
pop
pop
xacquire
or
nop
enter
adc
xchg
pop
cmc
jne
idiv
or
retf
cmps
and
enter
cmp
fst
push
leave
push
and
int
and
aam
mov
add
in
retf
test
adc
je
mov
push
xor
add
shl
add
or
out
xor
add
js
imul
inc
or
push
leave
xchg
pushf
push
add
add
pop
clc
push
dec
hlt
push
sbb
pushf
or
jmp
mov
shr
je
lods
aad
cmp
inc
push
push
out
and
and
rcr
dec
dec
loope
jo
leave
add
or
add
fld
fsubr
loope
add
sbb
add
or
adc
in
or
add
mov
cmp
(bad)
loopne
popa
adc
inc
or
sbb
mov
ds
add
add
cmp
add
aaa
pusha
loope
dec
add
in
loope
adc
pop
in
dec
sbb
push
lock
push
cmp
aam
dec
ins
adc
sbb
xor
mov
enter
imul
rol
sub
rcr
mov
retf
stc
pop
sbb
jmp
sub
arpl
popf
pop
lods
pop
cwde
add
adc
test
ins
popf
push
inc
fcomp
sbb
xor
xchg
(bad)
dec
out
into
pop
and
mov
js
imul
ds
mov
pop
mov
push
mov
cmps
test
ficomp
sub
add
popf
pop
add
aas
mov
test
mov
push
mov
mov
mov
jg
or
les
popf
rol
int3
push
mov
add
inc
inc
ret
clc
(bad)
push
mov
dec
or
xor
sub
push
mov
inc
pop
pop
xchg
xor
fwait
nop
or
jnp
xchg
das
push
ret
or
cdq
nop
cld
ins
call
xchg
add
xor
nop
out
pop
out
shr
rol
inc
mov
cmp
test
add
inc
test
sub
aas
dec
push
push
mov
lods
xor
jg
test
cmc
sub
rcr
aas
stos
loope
adc
jg
dec
dec
xchg
sub
pop
jb
or
add
inc
pusha
inc
pop
ror
xor
mov
adc
mov
pop
nop
cld
add
or
shr
jg
inc
pushf
push
mov
inc
enter
sahf
push
repnz
nop
adc
pop
repnz
sbb
push
fdivr
jg
dec
ror
and
xlat
sub
pop
push
mov
jnp
test
mov
fimul
push
(bad)
adc
mov
push
inc
and
arpl
push
pop
clc
pop
in
jmp
add
shl
mov
mov
xchg
aas
enter
add
sbb
xchg
sub
(bad)
aam
test
and
adc
sbb
jl
cmp
daa
sbb
cmp
cmp
mov
pop
rcr
adc
xchg
loope
(bad)
push
lods
es
fld
adc
movs
or
adc
ror
int
or
pop
or
or
jecxz
pusha
and
xchg
cmp
pop
push
or
outs
cld
xchg
cld
and
jmp
dec
ror
cmp
gs
sub
push
(bad)
mov
adc
adc
rcl
lock
dec
jbe
or
or
push
leave
clc
or
lds
push
sbb
mov
inc
adc
cmps
dec
add
jp
pop
xchg
push
jl
adc
pop
add
or
jno
and
sbb
test
add
sub
lahf
and
sbb
mov
or
call
jl
and
mov
and
sub
sbb
test
lahf
mov
sbb
mov
sub
sub
mov
xor
sub
mov
push
sbb
fst
cmp
adc
adc
mov
sbb
in
pop
adc
mov
stos
leave
adc
in
fs
dec
arpl
mov
in
mov
or
sbb
movs
cmp
mov
pop
sbb
and
fst
jb
xlat
or
xchg
stos
pop
pop
and
dec
scas
sub
and
jmp
sub
bound
movs
les
lahf
add
rcr
jg
adc
xor
jo
test
fisub
push
movs
sub
aad
retf
ret
jae
movs
xor
xor
mov
adc
movs
mov
lahf
lahf
movs
adc
jg
loope
and
ins
add
cmp
adc
inc
and
(bad)
mov
stos
hlt
pop
xor
clc
pop
xchg
mov
mov
(bad)
mov
int3
ss
mov
lahf
inc
fs
sar
push
pop
jle
sub
(bad)
and
sbb
push
outs
cmp
stos
dec
lods
jmp
inc
movs
arpl
ror
adc
push
add
mov
lods
push
sub
or
push
pusha
imul
push
adc
dec
in
jge
push
mov
fild
retf
fisubr
pop
pop
add
pop
pop
dec
adc
add
dec
ins
stos
jg
mov
or
sub
add
loop
data16
scas
fwait
les
push
jno
lods
test
xor
dec
add
and
sahf
fadd
push
pop
frstor
cwde
shl
movs
dec
aam
adc
and
cmps
and
xchg
pop
or
pusha
push
jb
inc
or
cld
cmp
add
sub
inc
add
xchg
nop
cmp
aaa
sub
inc
push
cmp
pop
call
jno
inc
and
repnz
add
sbb
inc
js
daa
cwde
not
or
ret
pusha
or
inc
pop
add
lea
sbb
jne
push
jmp
add
pop
ror
fmul
xchg
mov
mov
sbb
sub
jno
rcr
jne
jmp
or
pop
xchg
add
and
adc
inc
or
adc
popa
jne
pop
push
pop
xchg
out
jbe
and
sub
inc
jno
stos
enter
sbb
adc
mov
enter
icebp
fadd
fisubr
mov
and
mov
ja
aam
movs
jb
aam
(bad)
les
cmp
pop
inc
xchg
in
inc
test
call
pop
adc
js
sbb
add
shr
lock
inc
mov
cwde
add
sbb
rol
fcomp
mov
(bad)
in
movs
mov
dec
lods
add
pop
pop
inc
or
mov
add
sub
hlt
cmp
xor
mov
or
mov
adc
int3
add
pop
adc
scas
dec
push
cmp
jl
or
sub
nop
xchg
inc
or
add
jge
ss
lods
cmps
jge
adc
adc
add
clc
(bad)
dec
jl
xor
pop
or
mov
and
sub
add
pushf
add
lahf
movs
xchg
dec
ins
aas
cmp
out
pusha
loope
jg
stos
or
repz
leave
jle
dec
jle
lods
sub
test
jg
and
stc
push
sub
and
popf
imul
sbb
enter
cmps
int3
mov
mov
lahf
pop
and
rcl
aaa
push
aaa
(bad)
jne
sub
pop
dec
pusha
or
ret
pop
inc
addr16
jo
or
stos
mov
sbb
push
and
cmp
jge
outs
jge
cld
add
repnz
push
push
pop
call
or
mov
pop
aaa
les
add
dec
sub
test
outs
adc
sbb
arpl
lock
jns
dec
dec
push
adc
adc
dec
rcl
and
pop
mov
enter
lahf
xor
add
movs
fs
lds
call
mov
scas
pop
lahf
sub
es
movs
inc
push
adc
sbb
push
xor
jmp
jns
nop
retf
jg
in
pop
and
add
lahf
pop
ret
push
jnp
inc
cmps
sar
pop
ss
lahf
test
xor
adc
shl
mov
mov
dec
add
test
mov
push
pushf
mov
inc
pop
xchg
inc
nop
add
pop
pop
leave
push
xchg
rcpps
ins
add
lahf
xchg
imul
and
dec
test
dec
push
mov
addr16
mov
push
inc
pop
movs
or
ja
jmp
sbb
sbb
test
call
loop
rcr
pop
mov
mov
lahf
pop
rcr
xor
adc
enter
xchg
push
in
sar
pop
jge
xor
aas
mov
add
sub
add
pop
pop
add
lds
scas
mov
add
mov
add
aas
dec
in
pusha
adc
aas
and
cld
daa
dec
xlat
inc
mov
mov
inc
jb
mov
aas
sub
ins
sub
movs
clc
push
lahf
inc
push
rcl
push
jmp
xchg
pop
cwde
inc
test
sbb
pop
leave
add
add
popa
and
bound
aas
add
daa
or
or
add
mov
sbb
lods
cmp
add
or
push
outs
or
test
and
and
stos
in
sbb
dec
mov
ficom
inc
repz
add
pusha
inc
push
pop
leave
aad
ds
dec
scas
push
jge
and
lahf
js
fmul
sub
loopne
add
mov
cld
arpl
outs
or
lahf
cmp
je
movs
add
inc
rcr
rol
sub
pop
dec
jge
ffreep
scas
cmc
lods
rol
ret
ret
or
mov
test
call
in
in
call
inc
push
xor
mov
mov
rcr
adc
inc
mov
mov
push
test
push
les
mov
(bad)
popa
fwait
dec
pop
leave
pop
sbb
sbb
arpl
dec
xor
add
pusha
pop
test
ror
and
cdq
and
push
push
xchg
lea
rcl
sbb
(bad)
shl
mov
xor
ret
jne
popa
xor
aas
sbb
pop
stc
jl
jb
jbe
fbld
ror
call
adc
add
xchg
jmp
push
xchg
push
mov
dec
inc
pop
push
push
mov
add
sti
dec
cmp
and
adc
(bad)
sub
inc
mov
adc
adc
push
pop
addr16
cmp
mov
pop
or
xlat
icebp
sub
or
adc
adc
cmps
fstp
lahf
or
fild
fbld
in
test
pop
mov
retf
adc
mov
cs
inc
aad
or
mov
int3
push
enter
jmp
and
leave
in
mov
cmp
jg
shl
xor
aas
mov
pop
shl
adc
cmp
cmp
clc
cmps
cmp
jg
fcomi
and
aaa
nop
popf
hlt
hlt
nop
scas
mov
dec
mov
or
push
repnz
call
xchg
inc
push
pushf
jmp
jmp
and
xadd
loop
sub
xchg
cmp
xchg
or
sbb
mov
mov
in
in
in
add
rcl
push
cmps
and
pop
add
mov
inc
cwde
fild
and
add
lods
pop
sub
es
mov
adc
in
sbb
cmp
stos
pop
sar
xor
sub
xlat
and
push
dec
add
cmp
add
push
pop
push
enter
adc
fbld
or
sub
out
movs
loopne
xchg
pop
add
adc
xlat
jne
lods
movs
and
or
push
sbb
dec
adc
xchg
in
or
jmp
push
nop
frstpm(287
test
sbb
push
int3
xchg
push
or
ja
inc
sbb
or
pusha
loop
adc
xchg
dec
adc
cdq
clc
loopne
test
icebp
je
fnstsw
push
or
xchg
adc
inc
mov
xor
enter
adc
xor
sti
test
stos
inc
lea
aas
and
add
retf
fild
jmp
push
outs
pop
xlat
pop
pusha
sti
fst
or
add
cdq
call
push
and
or
xchg
clc
and
mov
gs
jg
je
sbb
out
xchg
mov
mov
pop
xor
add
mov
pop
pop
add
push
add
push
push
add
add
shr
pop
sbb
and
adc
repz
sub
sub
test
add
jmp
push
daa
push
ret
shr
in
fdiv
add
jmp
sbb
and
and
movs
adc
cmp
push
push
enter
sbb
mov
xor
inc
les
rcr
adc
cmc
ins
maxps
xor
ror
test
push
ret
xchg
add
jae
dec
dec
cmp
out
jo
dec
(bad)
adc
gs
div
sub
mov
push
fisub
xor
dec
sub
in
dec
dec
push
call
enter
and
outs
out
sbb
push
shl
mov
or
mov
jne
aaa
cwde
lahf
sbb
nop
sub
outs
xchg
rol
lock
xchg
inc
call
xor
sub
mov
sbb
jae
inc
sbb
cwde
rol
pop
test
push
ret
jg
xor
aaa
scas
xchg
lock
lods
mov
sbb
cmp
rol
(bad)
aaa
ss
lock
pushf
fmul
jl
cld
(bad)
or
push
movs
and
add
fwait
lods
in
mov
jmp
push
repnz
test
mov
sub
push
push
hlt
test
adc
div
and
sbb
sbb
test
jne
add
lahf
sahf
mov
push
push
sub
and
dec
(bad)
(bad)
sub
fwait
popa
jae
(bad)
dec
movs
scas
push
and
sbb
clc
sbb
pop
popa
leave
mov
and
test
pop
xlat
dec
push
push
test
(bad)
jae
pop
rcr
xor
cdq
xchg
push
sub
ret
jmp
sub
lds
test
mov
not
mov
test
add
jbe
push
pop
test
fist
cmps
cmps
xchg
adc
mov
sbb
mov
hlt
pop
jne
das
call
call
add
sub
push
jae
push
sub
jg
sub
push
lahf
cmp
cmps
xchg
push
cmp
xor
cli
mov
cld
xor
out
dec
mov
pop
lahf
pop
cmp
add
cmps
mov
dec
enter
int3
neg
mov
jmp
adc
popa
popa
push
icebp
pusha
clc
inc
(bad)
sbb
or
mov
adc
je
push
jns
dec
in
into
xor
push
add
pop
pop
or
sbb
icebp
test
push
fidivr
sbb
push
or
push
cld
push
(bad)
push
cmp
and
addr16
nop
cs
pop
lock
lods
ficomp
xchg
or
add
push
xor
push
mov
jmp
inc
fnstcw
fdiv
sbb
movs
mov
push
or
xor
rol
pop
clc
jmp
jge
dec
rol
xchg
adc
jno
inc
mov
push
or
dec
popa
lock
sbb
jns
sbb
or
ss
jl
pop
pop
adc
aad
or
mov
push
imul
int
adc
mov
sub
or
adc
mov
adc
adc
pop
pop
in
adc
xchg
fisttp
xchg
mov
xchg
fmulp
mov
sbb
pop
xor
inc
clc
and
aas
adc
js
jle
sub
in
pop
lods
lahf
cmp
bound
xchg
xchg
mov
or
xchg
or
jle
mov
imul
fsubr
sub
call
inc
fs
mov
lea
out
in
lahf
push
mov
mov
fnsave
mov
movs
int3
(bad)
fsub
imul
aas
nop
pushf
dec
xchg
sub
adc
mov
add
ins
enter
or
add
or
movs
jge
aas
push
sbb
imul
test
adc
push
dec
add
test
and
add
sub
adc
adc
xchg
in
js
mov
jl
jecxz
into
adc
lgs
add
inc
or
push
dec
push
cmps
in
lahf
or
jb
nop
adc
test
mov
lods
in
mov
push
jb
lahf
add
pop
pop
test
sbb
push
and
test
push
call
sub
add
push
int3
sbb
cmp
fwait
cmp
pop
(bad)
fsubr
outs
or
in
in
inc
or
cmp
add
inc
cmp
xor
call
xchg
mov
dec
xchg
inc
ret
(bad)
jmp
xchg
push
movs
jb
test
enter
add
enter
in
push
stos
test
and
test
jne
jno
jne
and
fisub
jmp
pop
and
dec
stos
sub
jg
adc
pusha
les
dec
inc
sahf
lahf
inc
aad
dec
scas
jno
jno
and
inc
mov
push
test
cdq
js
pop
dec
and
in
pop
nop
add
sbb
nop
lods
or
inc
xchg
or
adc
mov
mov
mov
pop
mov
mov
xor
xor
test
mov
pop
jb
call
dec
and
and
and
sbb
lods
(bad)
pushf
pop
jns
xor
jg
scas
dec
sub
or
cwde
xchg
jb
push
add
mov
mov
dec
out
fisttp
and
or
mov
mov
push
jb
or
jmp
sub
lahf
mov
mov
call
xchg
fcom
mov
rcr
outs
sub
mov
or
and
test
ret
adc
in
mov
push
mov
push
jb
mov
enter
mov
aas
lahf
push
ror
add
fnstenv
rcr
fst
sbb
add
add
stos
bound
push
add
pop
lahf
pop
inc
push
xor
enter
push
je
add
mov
xchg
addr16
mov
jo
nop
adc
jo
xor
je
push
fs
jg
adc
rcr
jg
les
loope
push
leave
push
repnz
adc
push
js
xor
cmps
adc
sub
inc
pop
fistp
adc
pop
(bad)
out
xchg
push
rcr
scas
push
out
aas
mov
mov
pusha
xor
or
cmps
push
leave
retf
add
in
dec
pop
enter
ret
cmps
or
and
enter
push
mov
pusha
sar
pusha
xor
pop
or
and
and
pop
xchg
add
lahf
cmp
cdq
stos
lahf
cmp
(bad)
cli
stos
lods
pop
in
jnp
sbb
pop
jmp
pop
pop
lods
and
jbe
mov
cmps
sbb
fbld
mov
push
daa
addr16
and
(bad)
and
rcl
add
lahf
and
and
ret
add
movs
dec
mov
xchg
and
dec
leave
adc
int
jl
pop
addr16
in
xchg
push
pop
mov
shld
cmp
or
xor
int3
push
dec
bound
add
xchg
sub
fld
add
inc
loope
and
in
push
xor
movs
hlt
jle
cmps
push
enter
ins
dec
mov
pop
adc
out
push
adc
fisttp
push
leave
sub
out
cld
push
leave
nop
push
cmp
aam
pusha
cmps
lahf
mov
dec
mov
push
call
xor
cmp
mov
jl
push
mov
sbb
shl
and
adc
mov
pop
les
and
adc
lds
add
adc
sub
xchg
sbb
and
test
jb
cmp
out
fsub
mov
enter
sbb
inc
dec
or
inc
xchg
lock
sbb
mov
pop
pusha
js
and
mov
mov
dec
xchg
cwde
add
and
xchg
jno
cmp
(bad)
(bad)
leave
ja
xor
xchg
retf
(bad)
les
dec
cs
xchg
cmp
ins
fcomp
int3
in
dec
inc
cmp
push
and
or
ror
test
or
enter
push
leave
or
dec
or
jl
pop
nop
pop
inc
sahf
xchg
jl
inc
enter
mov
enter
inc
xchg
pushf
jg
xchg
add
pop
mov
jg
add
pop
fild
mov
pop
jg
inc
mov
fsub
add
mov
and
or
cmp
jne
sbb
pop
mov
push
push
or
in
xor
bound
leave
dec
jns
sti
enter
or
mov
fsub
sub
pushf
mov
ins
sub
sti
les
inc
mov
icebp
push
sub
hlt
mov
jb
pop
into
push
mov
add
and
push
outs
push
pop
add
call
in
ja
adc
shl
or
neg
js
inc
pop
iret
add
fsubr
adc
push
movs
and
fsubr
or
sbb
(bad)
xlat
or
ret
lock
mov
jle
pop
add
mov
bound
cmp
or
pop
push
dec
cmp
jns
push
dec
mov
and
(bad)
mov
je
pusha
mov
adc
aaa
movs
inc
sbb
jge
cli
pusha
ss
xchg
push
enter
sub
pop
xchg
iret
dec
ret
inc
pop
mov
je
mov
add
ret
mov
in
psraw
or
ret
dec
jnp
je
lock
xchg
push
push
ffree
fld
fdivr
adc
xchg
imul
lock
(bad)
inc
dec
pushf
cmp
jmp
daa
mov
cmps
test
popa
aaa
push
pop
fisttp
pusha
nop
or
stos
add
sbb
push
push
sub
jo
xchg
popa
rcr
mov
(bad)
dec
sbb
lahf
dec
and
das
pop
mov
cmp
xchg
aad
and
push
enter
cmps
(bad)
push
enter
cmp
inc
jl
int
rcr
add
push
add
sbb
push
or
int3
xor
addr16
pop
mov
sbb
ret
ds
popf
xor
repz
jno
clc
sbb
push
xor
inc
sbb
test
push
mov
sbb
xor
sub
xchg
or
into
lods
xor
push
call
and
gs
(bad)
mov
mov
mov
and
and
test
sub
sub
xchg
push
inc
in
push
je
sbb
add
xchg
mov
add
mov
and
xor
sub
or
pop
hlt
and
push
mov
cmp
jecxz
call
xchg
push
mov
(bad)
in
add
(bad)
cmc
push
movs
movs
arpl
mov
(bad)
push
adc
adc
mov
out
mov
cmps
xor
mov
data16
add
(bad)
sbb
mov
or
add
and
xor
xchg
out
nop
sub
mov
adc
mov
mov
inc
jmp
clc
sub
push
test
call
pop
lahf
sbb
lods
jge
inc
sbb
mov
jnp
inc
sbb
lods
test
xor
jb
xor
in
mov
(bad)
pop
xchg
push
add
enter
mov
sbb
dec
mov
dec
(bad)
jmp
adc
cmp
adc
leave
jl
ins
inc
or
enter
pop
or
dec
add
adc
sbb
iret
add
loopne
sbb
hlt
sub
push
push
loopne
jnp
push
and
clc
out
mov
xchg
sbb
push
dec
ins
xlat
mov
sub
mov
mov
and
push
jecxz
cs
int
in
sub
fcomp
in
in
cmp
hlt
mov
push
and
jl
push
mov
dec
adc
(bad)
mul
mov
(bad)
loopne
jne
mov
jae
cmps
xchg
adc
(bad)
sti
add
fnsetpm(287
iret
ror
mov
push
popf
pop
stos
jl
xor
fidiv
jge
or
adc
retf
(bad)
dec
push
push
sbb
xor
lahf
mov
jo
bound
jbe
mov
adc
cmps
pop
leave
lds
das
popa
nop
jmp
or
mov
(bad)
lea
js
bound
push
jl
mov
pusha
xchg
xchg
aas
push
pop
adc
lods
shl
mov
mov
test
and
int
jns
stc
mov
jge
in
in
and
adc
adc
loopne
retf
nop
push
adc
inc
ins
push
xchg
arpl
mov
sbb
(bad)
(bad)
lahf
aam
sub
retf
es
je
add
and
stos
sub
or
adc
and
or
mov
dec
pusha
movs
fst
dec
mov
push
pop
push
imul
clc
(bad)
in
push
loopne
hlt
push
out
sti
ins
sub
pop
push
dec
cmp
mov
es
mov
mov
and
ror
mov
and
rcr
lahf
imul
adc
sti
ror
push
add
pop
xchg
xor
inc
push
fwait
dec
loopne
jo
xchg
test
mov
out
ins
test
lods
movs
shl
cmps
inc
(bad)
sub
push
xor
retf
js
push
mov
mov
inc
inc
cmps
jmp
fdivp
int
repnz
adc
je
hlt
xor
inc
sub
jno
or
hlt
(bad)
loope
leave
hlt
ficom
dec
cmp
sbb
retf
xchg
enter
xchg
es
push
das
test
mov
jb
jno
scas
mov
lds
in
imul
cld
push
ds
cmp
in
inc
jecxz
or
or
ret
jmp
cmp
into
ss
ret
inc
retf
add
inc
fst
repnz
fwait
add
pop
cmp
mov
pushf
push
inc
pop
dec
jecxz
mov
sbb
fidivr
mov
and
xchg
xchg
pop
dec
jo
cmp
psrld
pop
mov
dec
and
ins
(bad)
lods
or
inc
ins
ret
(bad)
xchg
(bad)
pop
mov
adc
mov
xor
mov
mov
popf
mov
sqrtps
push
std
addr16
mov
cmp
push
mov
movs
rcl
adc
lahf
scas
push
lock
out
in
mov
push
dec
movs
lea
adc
mov
test
xor
mov
lea
fs
dec
and
aas
xchg
inc
xchg
mov
ret
lods
inc
and
mov
jge
or
xchg
or
rcr
inc
mul
pop
hlt
(bad)
dec
jo
fdiv
add
push
fs
jp
adc
in
sub
movs
stos
mov
lods
jecxz
mov
or
test
test
inc
mov
inc
mov
js
stc
jmp
adc
sti
pop
pop
add
adc
(bad)
push
and
lahf
cmps
ins
jnp
inc
call
rcr
adc
xor
cmc
sbb
mov
dec
pop
push
mov
xor
jns
adc
and
add
push
mov
addr16
inc
push
pop
adc
test
jl
push
or
mov
ins
loop
rol
dec
dec
lods
loop
pushf
loop
ins
(bad)
adc
(bad)
sub
adc
out
movs
sbb
xor
stc
add
pushf
(bad)
in
add
mov
jb
mov
rcl
mov
jge
lea
push
in
dec
movs
cmp
call
adc
lods
sub
jl
leave
loopne
loopne
pop
sahf
cmp
in
add
cmps
and
les
dec
aam
movs
int
pusha
cld
stos
shl
add
push
add
shl
stos
or
mov
out
mov
cmp
and
add
gs
inc
sub
cmp
push
inc
add
and
iret
test
adc
jl
mov
out
add
ror
pop
aad
mov
or
push
sbb
loope
test
xor
jo
loope
adc
pop
lahf
xor
(bad)
frstor
push
xor
mov
mov
lods
popa
push
cwde
cwde
outs
xor
pusha
sbb
out
stos
jbe
imul
pop
and
cdq
nop
adc
(bad)
xor
ror
cmp
(bad)
push
xchg
cli
inc
shr
xchg
add
sub
cmc
rcr
fisub
ja
test
cmp
jae
and
or
adc
adc
sahf
jl
mov
xchg
and
sub
jb
mov
xchg
add
push
pusha
sbb
lea
ja
xchg
psubw
fild
test
cwde
cmp
add
adc
popf
mov
adc
mov
fs
inc
sub
push
sbb
rcl
inc
retf
adc
loope
je
sbb
inc
push
push
jns
pop
ds
dec
cmp
adc
mov
pushf
and
inc
iret
sub
mov
and
jo
scas
bound
and
pop
and
inc
scas
adc
adc
sahf
and
mov
or
sub
xchg
inc
cmp
or
pop
addr16
mov
sbb
ja
nop
fld
sub
inc
fiadd
mov
mov
push
and
loope
mov
sub
test
pusha
push
stos
xlat
rcl
pushf
push
(bad)
jne
repnz
dec
test
nop
push
mov
mov
nop
sbb
mov
add
pop
inc
or
shl
pop
xchg
sbb
out
cmps
jae
adc
aas
loope
add
nop
mov
inc
ins
xchg
aas
or
push
push
dec
cmp
out
and
mov
sbb
shr
cmp
movs
push
(bad)
mov
xchg
mov
or
adc
pop
out
dec
push
jne
in
test
or
adc
add
jbe
inc
inc
popa
push
sbb
lahf
jnp
xor
clc
or
and
lahf
cmp
sbb
mov
mov
push
je
mov
add
rol
jge
ror
fsub
popf
sub
add
mov
add
pop
xlat
pop
pop
xor
cld
push
movs
call
add
cmp
push
xchg
push
imul
or
and
inc
mov
lea
xchg
je
push
shl
mov
ror
lock
inc
aaa
push
pusha
fsubr
lock
adc
adc
stos
and
sbb
push
sub
shl
lahf
bound
mov
dec
adc
xlat
(bad)
lahf
in
lea
pusha
les
jge
ror
adc
lds
sbb
ins
or
xchg
cmp
adc
aaa
cli
sar
sub
popf
daa
mov
lods
pop
fmul
imul
push
adc
data16
mov
jne
stos
loopne
fsubr
dec
add
adc
jecxz
lea
push
or
push
pop
cmc
rcl
or
sub
push
jmp
push
adc
or
jns
push
sub
(bad)
jnp
pop
add
adc
cs
fdiv
xor
sub
push
jno
aaa
or
stos
hlt
pop
dec
cmp
mov
lock
sub
add
add
loope
arpl
inc
in
outs
push
call
xor
xor
sbb
jmp
cmp
in
and
or
and
sbb
pop
call
mov
setl
lahf
adc
push
in
xor
out
movs
and
bnd
loopne
cmp
cmp
retf
push
mov
loopne
cwde
sub
mov
test
mov
dec
dec
loopne
push
xchg
pop
je
(bad)
out
xor
add
dec
clc
sbb
pop
enter
jge
add
xchg
lods
inc
push
add
dec
jmp
inc
pop
int3
js
adc
cmp
xchg
xor
js
sti
scas
daa
lods
scas
or
pop
jg
cwde
adc
lods
adc
call
retf
jmp
push
test
pusha
fiadd
xchg
out
scas
pop
les
pusha
jl
mov
out
jl
jbe
jo
(bad)
cmp
cwde
cmp
mov
push
arpl
mov
xchg
fst
xchg
mov
mov
imul
push
sub
(bad)
dec
push
or
push
sbb
data16
rcl
push
lods
adc
loop
mov
sti
mov
pop
sub
ins
les
sbb
jne
inc
cmp
or
pop
out
or
pop
ret
das
push
adc
out
add
mov
push
jno
mov
aad
xchg
sbb
dec
mov
scas
mov
jl
cmp
mov
add
pop
leave
rcl
and
xchg
loope
or
sub
out
nop
push
adc
lahf
push
mov
jmp
cmp
mov
push
pop
loopne
lock
cmp
jb
xor
jle
mov
and
(bad)
movs
sub
dec
call
add
add
push
sub
int
inc
arpl
pop
add
push
pop
hlt
jle
adc
and
mov
test
lahf
inc
call
dec
movs
mov
gs
sub
add
fist
jge
mov
adc
pop
and
inc
xchg
fld
outs
add
pop
pop
mov
ror
push
or
pop
outs
sub
push
shr
push
xor
adc
mov
push
or
and
pop
lods
sub
addr16
add
add
fsubr
rcr
dec
mov
cmp
js
dec
mov
jl
inc
ss
push
dec
jbe
or
jnp
mov
enter
mov
jmp
and
jl
inc
js
sub
lds
mov
fild
mov
sbb
mov
mov
sbb
retf
or
add
movs
in
clc
xor
sbb
and
mov
push
cmp
sub
xor
int
out
sub
jnp
lds
and
or
add
imul
inc
pop
lds
inc
mov
add
jo
mov
mov
call
ins
jg
dec
mov
pop
bound
iret
mov
fisttp
cmp
xor
test
cmp
mov
push
repnz
cmp
cs
mov
adc
stos
sub
lods
sbb
je
int3
lock
je
cli
daa
and
sbb
fdivp
pusha
mov
das
pop
rep
hlt
sahf
mov
push
push
sbb
pusha
adc
and
popf
sub
adc
bound
push
pop
add
cs
retf
out
test
cmp
outs
repz
mov
popa
ret
and
jo
or
dec
call
push
add
enter
add
fdiv
hlt
or
push
loope
fs
push
(bad)
xor
rcl
or
test
loopne
mov
add
sub
fcomip
js
dec
gs
inc
ins
cmp
adc
and
lods
or
or
adc
or
ror
call
icebp
push
add
ret
jno
imul
or
add
(bad)
adc
adc
cmp
mov
jmp
add
mov
and
or
pop
sub
or
test
adc
push
mov
sar
in
sahf
stc
cmp
mov
les
sbb
push
and
or
add
add
mov
push
popf
cli
imul
jne
ds
xchg
loop
nop
retf
jg
and
inc
xor
inc
sub
fisttp
in
clc
pop
push
xchg
xchg
adc
push
cdq
in
in
(bad)
adc
(bad)
sti
pop
call
test
pop
add
push
clc
push
ret
sub
xlat
daa
and
or
adc
sub
movs
xchg
sub
or
mov
and
ret
das
aas
cs
jl
mov
nop
test
mov
icebp
popf
add
add
arpl
aam
cmp
cs
ins
outs
jl
pop
sub
adc
sbb
and
jp
mov
pop
and
in
call
sbb
adc
clc
xor
cld
push
addr16
push
inc
and
mov
adc
in
les
loope
or
pop
and
or
dec
xor
sub
fs
or
dec
push
inc
or
or
mov
mov
in
(bad)
cld
pop
enter
lock
cmps
loopne
inc
jge
or
inc
cmp
or
add
adc
sbb
cmps
sbb
xchg
dec
xor
in
mov
mov
pop
and
and
inc
fstp
inc
add
shld
rcl
pop
mov
sub
loop
std
adc
xchg
movs
or
je
aaa
dec
fs
outs
add
cli
clc
push
or
jne
pop
push
push
pop
mov
cmp
mov
rol
cmp
cmp
lods
ret
sbb
dec
and
push
bswap
jmp
sbb
add
scas
or
shr
iret
add
in
xchg
jecxz
add
cld
mov
pop
leave
cmp
push
push
call
jp
jo
fsubr
mov
mov
jns
mov
or
leave
in
mov
std
pop
ret
mov
add
sar
test
mov
mov
inc
push
or
aam
jge
lods
sub
xor
into
test
loope
fmul
daa
icebp
mov
scas
clc
inc
xchg
xor
or
stos
nop
test
hlt
mov
inc
pusha
jmp
cmps
scas
dec
rol
and
add
sbb
pop
inc
xchg
cmps
lock
lahf
adc
test
xor
push
movs
in
mov
push
sbb
adc
push
mov
out
mov
inc
adc
inc
or
or
xchg
lods
pop
aaa
fistp
sub
popa
fcmovne
cwde
popf
sbb
imul
fdiv
sbb
add
mov
or
adc
stos
cmp
cmps
repnz
data16
daa
adc
test
xchg
push
lahf
sbb
add
adc
add
nop
enter
fld
in
(bad)
adc
cld
sbb
and
sbb
popa
or
adc
lahf
push
jp
sbb
sbb
jp
shl
pop
nop
add
jmp
sti
sub
push
out
add
sbb
add
cld
jno
push
push
xchg
in
mov
in
push
adc
imul
dec
arpl
push
xor
push
mov
cs
fild
xor
jo
adc
pop
add
arpl
sub
aam
jbe
inc
lods
push
mov
loop
adc
dec
push
cmp
test
lods
jne
and
mov
cmp
sbb
retf
rol
xor
and
mov
sti
mov
lods
and
cdq
add
pop
loope
loope
jge
fsubr
add
aad
in
lods
bound
psrld
iret
mov
lfs
pop
inc
enter
xchg
add
pop
inc
aas
adc
sbb
das
dec
sbb
pop
or
test
or
mov
fdiv
adc
add
(bad)
jmp
xchg
mov
int3
int3
int3
add
sub
daa
mov
adc
loop
rol
mov
(bad)
jg
retf
push
mov
fs
lock
xchg
push
sbb
nop
test
dec
push
push
aad
inc
inc
lods
outs
fld
stos
fistp
lock
push
enter
fucom
sub
push
cmps
and
cmp
enter
int3
cmp
ret
cmp
push
(bad)
dec
dec
adc
dec
mov
push
sbb
ret
push
push
add
cmc
cmp
dec
jmp
cmp
sub
sbb
in
jmp
add
test
sbb
inc
fst
sbb
movs
out
movs
xor
and
jo
sbb
sbb
push
stos
pop
sub
adc
add
fiadd
rcr
mov
(bad)
dec
push
and
icebp
pop
dec
inc
jmp
xchg
inc
leave
inc
mov
pop
int3
out
or
adc
add
test
pop
pop
cmp
hlt
daa
movs
pop
mov
sub
in
xor
mov
dec
mov
add
jmp
cld
dec
sbb
ffreep
add
xor
ret
lea
lods
fist
mov
push
mov
fwait
dec
lods
cmps
xchg
jns
inc
hlt
push
enter
ins
adc
div
fwait
cmp
mov
fild
popf
je
jmp
fcomp
leave
xchg
ss
loopne
jp
add
arpl
and
push
pop
dec
bound
add
add
adc
js
pop
add
int3
mov
hlt
push
cld
and
fadd
ja
nop
cmp
je
mov
aam
or
adc
or
cmp
lock
or
and
jg
cs
(bad)
jg
repnz
xchg
sbb
hlt
or
pop
in
rol
aaa
jg
xchg
(bad)
out
ins
cmp
sti
push
in
adc
adc
xchg
ins
ficomp
mov
cmp
call
scas
in
jno
fcomp
and
loopne
adc
sub
popa
mov
xchg
sub
mov
pop
aam
push
retf
xchg
mov
xor
mov
in
js
ds
cmp
aas
pop
and
pop
fnstcw
aas
pop
mov
add
ret
jne
pop
jne
gs
pop
dec
jns
jb
test
cwde
lock
mov
dec
clc
cld
jmp
and
xor
call
clc
ins
push
or
push
jb
pushf
mov
cmp
imul
add
xor
dec
add
mov
retf
enter
in
in
fst
push
cmp
enter
push
fistp
pop
cmp
(bad)
and
mov
je
movs
sub
or
das
inc
je
jmp
iret
or
dec
sub
xor
enter
fs
fcomp
fsubr
shl
fs
jecxz
les
in
mulps
loopne
movs
(bad)
add
jnp
inc
(bad)
in
aas
pushf
mov
sbb
and
fdivr
pop
lods
pop
and
xchg
mov
fld
add
sub
dec
repnz
outs
fcomp
mov
and
test
jne
loop
stos
pop
pusha
sub
jne
sbb
push
scas
movs
xor
inc
mov
dec
imul
jmp
fadd
push
movs
iret
pop
lahf
xchg
sbb
gs
dec
cdq
scas
dec
arpl
(bad)
and
pushf
cwde
jp
dec
call
mov
mov
leave
mov
xor
lds
leave
push
aas
rcl
pop
dec
test
jno
rcl
popa
call
aas
push
cmp
in
xchg
push
push
push
xchg
out
cmp
dec
pusha
or
mov
fistp
dec
or
int3
add
mov
mov
adc
gs
cmp
adc
add
mov
mov
fstp
aam
aam
push
or
or
add
adc
fcmovu
and
and
and
xor
imul
clc
(bad)
pop
pop
adc
or
fwait
add
shl
mov
daa
add
adc
outs
mov
pop
or
add
xor
dec
sub
fcom
and
xchg
push
pop
aam
jb
pop
aam
sbb
xor
pop
aam
daa
xor
in
mov
push
cmps
sbb
cmp
nop
jnp
and
push
mov
jg
and
inc
repnz
test
(bad)
and
and
hlt
push
xor
hlt
mov
add
add
test
and
es
xchg
fadd
sbb
adc
jbe
sub
pop
cmp
cvtdq2ps
and
dec
imul
pop
jmp
movs
rol
mov
jmp
test
add
inc
shl
rcr
sti
xchg
lods
bound
test
rcl
add
jg
dec
hlt
inc
xor
dec
leave
out
jge
out
nop
ss
xchg
iret
int3
cld
fs
enter
jge
add
dec
test
test
pop
mov
hlt
int3
mov
pop
pop
xor
outs
inc
or
inc
mov
or
dec
mov
pop
shl
mov
push
mov
dec
mov
mov
xchg
inc
mov
mov
pop
xchg
das
dec
mov
inc
lock
sbb
imul
cmp
dec
js
dec
shl
lahf
cmp
adc
add
inc
enter
cmp
adc
in
dec
cs
mov
repnz
adc
(bad)
adc
push
fbstp
(bad)
xchg
test
and
cmps
add
movs
sub
xchg
retf
xor
cwde
mov
in
xchg
fmul
and
pop
pop
dec
mov
je
pop
pushw
jmp
jl
(bad)
push
rcl
xlat
lock
outs
or
mov
or
add
daa
fbld
mov
cwde
rcr
stos
or
fs
inc
or
push
(bad)
xchg
rcr
sbb
add
pop
inc
mov
retf
arpl
inc
pusha
cmp
nop
inc
dec
dec
sub
push
or
addr16
cdq
dec
pusha
inc
or
sbb
push
and
pushf
pop
repnz
xor
mov
std
xchg
call
mov
push
pop
push
and
mov
call
pop
int
movs
push
mov
std
or
std
inc
sahf
mov
cmps
jo
test
lahf
and
xchg
jns
xlat
popa
in
cmp
and
ror
movs
lock
add
rol
ins
dec
inc
mov
adc
rcr
jno
fisttp
unpcklps
les
(bad)
or
(bad)
xchg
cdq
jmp
fwait
or
ins
fmul
mov
leave
shr
cmp
jge
cmp
ficomp
push
mov
dec
inc
dec
jmp
jne
pop
psubsw
hlt
stc
call
loopne
sub
clc
xor
shr
sbb
lock
or
mov
cmps
mov
add
xor
lods
cmc
fst
retf
push
loopne
jnp
jnp
jge
leave
sub
call
imul
scas
imul
rol
and
dec
test
xchg
push
mov
sub
cmps
adc
js
cdq
jp
pop
jo
xor
jmp
push
popa
adc
sbb
out
dec
movd
jge
movs
mov
imul
xor
and
cmp
pop
loope
push
in
fistp
jae
and
clc
rol
nop
xchg
xor
push
int
push
fisubr
test
push
mov
mov
xor
mov
push
nop
add
mov
enter
arpl
loop
ror
and
call
adc
sbb
js
xor
fsub
and
test
aas
push
jbe
mov
mov
pushf
out
clc
add
test
xor
mov
jns
into
sub
jl
aad
mov
dec
es
mov
pop
out
mov
mov
data16
lock
loopne
sbb
je
cmp
sbb
pushf
xchg
jl
lods
mov
add
inc
out
retf
loopne
jae
pop
xchg
or
ds
or
add
add
cdq
inc
or
rol
mov
push
sti
cld
lahf
xor
push
popf
adc
cmp
add
cmp
sub
inc
ret
mov
test
ss
or
or
lds
aas
or
iret
bswap
adc
adc
out
inc
popa
mov
adc
inc
sub
and
leave
pop
popf
xchg
add
push
and
or
or
xchg
out
shr
mov
xlat
cmc
sub
test
sub
pop
out
fs
push
retf
push
sub
cld
popa
sub
pop
jecxz
and
cld
pop
and
or
mov
cmp
add
ja
push
or
push
sub
push
cmc
cmp
adc
or
add
and
and
loopne
cld
xor
je
sub
dec
mov
in
cmp
and
in
js
lock
pusha
and
ins
add
or
push
loope
mov
imul
adc
cmp
sbb
pop
add
and
aas
add
mov
sub
add
test
or
inc
adc
cmp
test
mov
jmp
dec
dec
pop
jbe
xchg
sbb
into
and
or
inc
sub
fisubr
pop
jmp
sub
push
imul
sbb
ins
rol
retf
jne
mov
add
ds
pop
pop
cmp
xlat
jnp
adc
sbb
sar
inc
test
sahf
imul
dec
repnz
std
inc
cmc
not
test
loop
push
and
popa
das
fstp
xchg
repz
iret
repz
mov
fsub
add
add
add
mov
fs
inc
push
lea
cld
xor
add
mov
adc
pop
add
cli
mov
xchg
cmp
add
pop
add
or
pop
sbb
cmps
pusha
pop
and
test
mov
inc
mov
mov
loope
pop
sbb
fdivr
scas
sub
loop
fmul
inc
mov
loopne
pop
mov
and
lea
bound
add
inc
out
mov
jnp
dec
push
cmp
dec
jnp
push
ror
cs
cld
es
xchg
mov
loopne
scas
mov
aam
dec
test
mov
adc
sub
mov
push
vmread
add
xchg
cmp
iret
hlt
retf
rcr
pop
xchg
rcr
sub
stos
jo
cmc
sbb
jne
add
pusha
jge
test
sub
or
popa
clc
sub
or
fadd
jnp
cmp
and
push
sbb
jae
enter
or
or
inc
jl
dec
push
mov
outs
pop
in
sub
(bad)
in
in
push
sub
push
les
jno
adc
lea
ds
les
or
jb
(bad)
iret
loopne
jge
add
in
push
popa
fwait
or
mov
push
fsubr
sub
sub
mov
inc
enter
cli
or
paddq
and
push
cld
sub
mov
mov
outs
pop
and
inc
xchg
adc
dec
pop
sbb
dec
adc
out
rcl
ror
add
sub
or
xchg
adc
mov
mov
mov
test
lahf
xor
inc
push
fs
add
adc
dec
dec
rcl
retf
pop
inc
dec
pop
pop
sar
xchg
or
ss
cld
test
xor
add
sbb
or
push
dec
shl
dec
leave
cmps
xchg
add
and
leave
and
fsub
loopne
movs
jbe
push
std
pop
ja
dec
pop
and
call
frstor
add
call
fcom
fcom
sub
mov
and
sbb
sub
sub
mov
test
xchg
xchg
or
mov
aam
jns
outs
test
sbb
pop
or
leave
adc
cmp
push
in
xor
and
cmp
mov
dec
push
and
lods
xchg
sbb
cmp
lea
lds
mov
cmp
inc
icebp
inc
in
xor
push
das
dec
inc
jo
push
call
in
movs
sub
mov
sub
add
in
inc
loopne
sub
mov
mov
adc
push
sbb
or
cmp
movs
sub
pusha
inc
push
int3
mov
mov
mov
push
lods
aad
mov
xor
cmp
repz
fisub
dec
lds
cmp
or
xor
push
data16
add
dec
mov
mov
mov
test
jo
ins
inc
cmps
jno
imul
push
xchg
movs
sbb
push
movs
shr
mov
sbb
stos
mov
pushf
lea
pop
push
jp
sub
cdq
sub
inc
call
enter
or
enter
cmp
enter
add
fisttp
push
mov
mov
mov
dec
add
xor
shl
in
int3
push
xlat
sbb
pop
add
pop
pop
ret
adc
ror
scas
sub
test
cmp
in
movs
xor
ficomp
push
ins
push
and
pushf
inc
je
lea
aas
inc
inc
mov
call
pushf
jge
push
sbb
sub
add
add
sar
jb
adc
xchg
add
or
in
and
or
rcr
cmps
mov
push
mov
jp
or
mov
pop
cmp
test
cmp
(bad)
fmul
xchg
sbb
sbb
fbstp
cmp
cmp
mov
xor
pop
fiadd
mov
dec
por
sub
jmp
cmc
xor
or
adc
sub
dec
push
add
in
mov
outs
adc
sbb
movs
rcr
add
jp
ret
push
das
add
sub
(bad)
call
mov
xchg
aas
ror
add
pushf
stos
sub
daa
add
mov
cli
or
mov
stos
or
nop
nop
inc
adc
or
sbb
lea
xor
pop
fs
mov
fsubr
sbb
adc
test
adc
adc
js
ss
mov
mov
test
test
add
int
jl
mov
gs
loopne
call
xchg
lods
mov
add
int3
cmp
ins
add
push
mov
xor
sub
add
test
jmp
inc
sar
push
shr
push
dec
dec
or
call
rcl
ret
dec
and
inc
xor
adc
out
dec
lea
or
(bad)
cdq
sub
mov
pop
xchg
cmp
inc
sbb
and
loopne
mov
loop
int3
rcl
dec
sbb
stos
xchg
mov
or
cwde
jle
inc
shl
inc
or
fcomp
iret
and
daa
sbb
jne
arpl
xchg
(bad)
in
adc
xchg
aad
or
xor
(bad)
or
retf
jo
mov
or
dec
jnp
js
sbb
xchg
pushf
sub
inc
add
gs
sbb
mov
xor
add
stos
push
mov
or
jae
push
xchg
(bad)
or
fadd
out
inc
dec
mov
inc
les
pop
inc
fs
nop
or
lods
push
nop
pop
cmps
test
je
xor
pop
or
mov
je
aam
jmp
popf
xchg
push
aad
jmp
dec
js
fsubr
dec
pusha
push
dec
and
inc
push
xchg
sbb
push
pop
jnp
or
in
jecxz
(bad)
and
dec
inc
sub
in
mov
aaa
fwait
adc
push
add
bound
xchg
pop
in
dec
inc
cmp
ins
dec
push
add
push
sub
dec
mov
vrsqrtps
inc
cmp
push
jo
(bad)
dec
imul
adc
imul
cmp
sub
imul
(bad)
push
es
lods
pop
add
adc
mov
mov
push
add
enter
ss
inc
xor
push
inc
mov
imul
(bad)
mov
xchg
fidiv
add
int
mov
pop
push
add
inc
mov
adc
mov
and
sub
test
dec
nop
sub
push
mov
lds
les
rcl
push
sub
call
xchg
or
mov
push
add
sub
test
cmp
push
or
push
rcr
pop
mov
adc
or
adc
mov
push
xor
push
imul
sub
dec
push
stc
cmps
int3
mov
jnp
test
cmp
lea
in
add
call
add
inc
enter
adc
fsub
sub
inc
inc
ror
js
jb
aaa
(bad)
push
jo
and
inc
dec
mov
inc
jae
enter
and
sub
sub
in
mov
push
stc
lods
add
and
in
or
retf
dec
or
inc
sahf
or
ret
xchg
mov
pop
loope
jo
repnz
sbb
mov
or
xor
or
dec
test
cmp
and
test
jo
sti
jp
or
in
xchg
ss
popa
jmp
mov
(bad)
fisttp
sub
cmp
loopne
cs
mov
dec
xchg
lea
int3
into
rcl
mov
mov
xor
mov
xor
add
sub
sub
lods
adc
push
and
add
sahf
cmp
cmc
movs
cmp
push
dec
push
add
and
into
add
or
pop
mov
int3
adc
movs
cmp
mov
shl
or
test
adc
push
aad
ins
test
ins
(bad)
enter
popf
nop
pop
jb
cmp
fs
sete
push
push
dec
jl
daa
lods
jl
sbb
inc
enter
mov
sub
rcr
shl
inc
xchg
pushf
mov
mov
add
push
jne
les
shl
in
mov
adc
xor
mov
call
bound
jp
adc
push
and
arpl
sbb
ja
stc
add
cdq
pusha
pop
(bad)
adc
adc
push
sub
lds
add
pop
adc
and
push
mov
or
dec
add
pop
xor
xor
inc
sub
std
cmp
inc
pushf
mov
dec
jl
lea
cdq
aaa
js
mov
js
xlat
inc
nop
inc
or
test
movs
jb
test
fmul
and
sub
xchg
aas
ret
push
adc
inc
add
and
movs
dec
and
mov
rcl
shr
push
pop
es
pop
test
push
sbb
jne
and
jp
aam
jo
imul
jo
int
jne
push
sub
xor
dec
enter
sub
push
dec
pop
cs
xor
xchg
xchg
retf
lea
add
scas
nop
loop
or
jl
test
or
fldenv
sbb
(bad)
xor
cs
fimul
adc
in
mov
inc
cdq
fsubr
enter
adc
aad
xchg
fidivr
dec
dec
test
inc
mov
iret
jp
pop
adc
sub
push
sbb
xor
sahf
sub
and
jne
inc
pop
add
adc
pusha
addr16
inc
or
in
adc
test
sub
mov
cmp
jae
and
inc
xchg
imul
pusha
in
cdq
inc
call
data16
popa
dec
xor
jo
and
add
add
sbb
xchg
xchg
in
and
int3
dec
jge
(bad)
inc
adc
mov
sbb
leave
ret
sbb
jmp
sub
add
and
(bad)
mov
push
inc
and
add
aas
and
stos
and
mov
add
add
les
pop
pop
pop
dec
fcomp
cwde
test
sub
rol
add
push
in
ror
cmp
or
cmc
fild
dec
inc
push
loop
dec
mov
and
nop
add
jecxz
and
(bad)
loope
sbb
pop
dec
dec
jbe
and
and
adc
add
or
stc
dec
jnp
xor
xor
nop
adc
cmp
add
movs
and
xor
into
adc
out
sub
js
and
mov
fs
call
dec
sub
cmp
xchg
push
inc
dec
push
add
pop
cmp
sbb
sub
sbb
loopne
jl
cmp
call
lock
fadd
xor
dec
shl
cmp
dec
xor
and
add
cmp
xchg
adc
(bad)
xlat
dec
shr
adc
popf
push
cmp
pop
xor
add
ss
add
jo
sbb
enter
sub
iret
(bad)
nop
inc
int
movs
popa
leave
add
push
inc
fwait
sub
ss
mov
jo
or
pusha
leave
dec
jge
ja
xchg
ss
sub
je
adc
iret
mov
js
add
int3
inc
stos
adc
jns
into
adc
xlat
push
clc
arpl
push
push
push
xchg
mov
push
adc
icebp
adc
cli
(bad)
xchg
mov
nop
aas
loopne
adc
test
out
loope
xchg
(bad)
ins
xchg
int3
jmp
push
rcl
sub
call
push
sub
(bad)
dec
or
inc
je
sub
sbb
mov
pop
nop
mov
(bad)
jno
add
mov
loopne
test
jle
or
stc
je
adc
jl
arpl
xchg
adc
jecxz
jae
mov
adc
ret
int
dec
adc
out
aas
cli
adc
les
push
add
dec
dec
mov
mov
sub
pop
les
add
jg
or
mov
mov
sbb
sub
xchg
in
mov
sub
ins
cmp
mov
jmp
mov
add
fisttp
pop
dec
ror
outs
or
sbb
inc
and
add
jmp
adc
imul
jae
jno
jmp
jmp
jo
popa
jmp
pop
jmp
in
fnstenv
dec
xor
cmp
(bad)
cmp
jmp
sub
sub
and
and
adc
jmp
leave
jmp
add
iret
mov
push
and
inc
push
iret
repz
pusha
outs
jle
pushf
stos
cmp
repz
leave
loope
jmp
dec
add
sahf
out
sub
cmp
call
add
add
push
pop
or
or
or
or
adc
add
inc
repnz
sbb
adc
jg
mov
daa
add
in
or
repnz
dec
test
push
fs
adc
inc
dec
fdivr
mov
jo
adc
inc
add
inc
mov
cmp
(bad)
or
push
fld
std
adc
sbb
ss
mov
adc
and
adc
xchg
cmp
mov
dec
push
(bad)
inc
sbb
add
out
push
pop
sub
inc
mov
jo
and
add
mov
in
adc
add
cmp
mov
in
mov
or
jne
adc
repnz
jp
retf
fwait
add
out
aam
or
cwde
je
jno
imul
retf
stos
add
daa
jmp
sbb
push
add
pop
or
ret
sub
adc
inc
es
or
loop
jg
mov
in
or
cmp
movs
jmp
or
or
retf
clc
jge
jnp
jl
out
mov
mov
cmps
movs
push
mov
inc
out
aaa
repz
outs
xchg
push
fild
push
fild
lods
dec
test
ss
or
push
repnz
fimul
sub
shl
imul
xor
push
push
add
dec
fisttp
and
push
pop
hlt
mov
movs
test
xor
mov
and
mov
cmp
call
addr16
mov
add
xchg
pop
inc
xor
mov
and
adc
push
clc
(bad)
push
sbb
stos
sar
mov
sub
test
add
push
hlt
and
stos
cld
test
cmp
(bad)
xor
xchg
dec
fcom
push
jge
push
test
push
loop
cmp
and
sub
sbb
adc
or
fild
and
sub
je
mov
(bad)
push
sbb
pop
push
jmp
adc
aas
push
sbb
push
sub
or
xor
inc
mov
ret
dec
push
cld
movs
adc
icebp
ins
imul
or
xchg
sbb
cli
adc
jb
add
push
jmp
sub
add
mov
cmp
loope
mov
ret
push
(bad)
push
add
inc
cmp
mov
inc
inc
inc
and
cmp
add
xchg
push
outs
scas
cmp
leave
leave
or
push
or
xor
es
fsubr
mov
test
dec
inc
shl
lock
mov
and
and
lods
push
loopne
xchg
pop
xor
add
or
mov
aaa
dec
aaa
or
xor
sbb
repnz
xor
adc
test
cmp
daa
and
daa
pop
in
xchg
pop
and
add
cmp
mov
fisttp
dec
or
cli
pop
adc
push
cmps
inc
push
js
cmp
cmp
adc
adc
jp
loop
call
test
aam
movs
(bad)
xchg
(bad)
and
push
cdq
std
call
sub
or
push
sbb
ret
and
dec
add
mov
adc
ret
mov
ds
jno
pop
pop
movs
xor
fwait
je
loope
mov
sub
addr16
xor
or
push
call
jecxz
or
mov
loopne
dec
ins
adc
push
xor
sahf
xchg
sbb
fmul
push
aas
dec
and
xor
sbb
jo
les
jne
pmulhuw
dec
xchg
or
fcom
dec
ins
cwde
or
je
rcr
lock
xor
and
pop
add
add
das
lea
or
pop
mov
enter
mov
add
adc
popa
mov
inc
pop
stc
xchg
dec
bound
out
xor
sub
adc
xchg
push
adc
pop
mov
popa
mov
mov
in
xor
retf
push
xchg
out
loop
repz
sar
ror
cmp
or
mov
clc
test
rol
xchg
inc
cmp
fidiv
inc
fcomp
dec
xor
push
and
cmp
push
add
or
rol
(bad)
rol
sub
loopne
sahf
ror
xor
mov
pop
ror
sub
sub
aaa
and
sub
adc
sub
or
sub
movs
bound
push
push
sbb
xchg
dec
jae
or
and
dec
enter
sbb
inc
xchg
test
pop
cs
or
sbb
adc
popf
mov
xchg
sbb
fs
xchg
dec
repz
sar
cld
(bad)
fisttp
adc
or
pusha
js
add
and
add
call
ins
sbb
or
or
add
in
mov
xchg
add
mov
cs
xchg
add
cld
std
or
std
inc
push
in
fdivr
or
xchg
(bad)
clc
std
jae
std
cmp
or
std
int3
stos
adc
shl
sar
pop
pop
(bad)
lock
in
or
push
leave
xchg
mov
fistp
cld
cs
shr
ror
pop
jl
lea
jmp
call
repz
ins
cmps
fstp
(bad)
movs
mov
scas
sbb
in
sub
mov
test
jle
fld
fdiv
fistp
dec
cmps
data16
loopne
das
out
jo
and
pushf
int
in
loopne
loopne
paddusb
xor
sbb
dec
(bad)
out
lahf
dec
push
mov
xchg
movs
loop
out
push
movsx
mov
push
adc
and
mov
xchg
xor
mov
push
and
pop
mov
xchg
scas
cld
imul
data16
dec
adc
cmp
xor
jo
cs
shl
adc
jl
movs
nop
or
aas
jl
jno
adc
and
sti
loopne
stc
sub
push
cs
mov
pusha
xchg
dec
push
mov
ins
enter
inc
les
les
sub
ins
clc
cmp
pop
int3
(bad)
cmp
push
jns
or
and
loope
mov
push
out
pop
ret
dec
inc
add
push
shl
ins
sahf
int
sub
push
out
sub
iret
pop
ds
push
pop
push
fcomi
pop
jmp
pusha
push
adc
or
adc
(bad)
pop
and
or
add
adc
pop
or
xchg
loopne
pusha
in
add
and
inc
clc
pop
pushf
sub
dec
or
imul
(bad)
or
popf
xor
add
adc
mov
xchg
dec
lahf
pop
xchg
push
rcr
stos
hlt
cmp
add
add
enter
add
hlt
dec
imul
retf
outs
xchg
push
push
or
ja
test
adc
jns
push
mov
jmp
push
imul
cmp
add
xor
xchg
out
cmp
not
pop
cs
loopne
add
call
pushf
fwait
and
adc
adc
bound
test
mov
add
or
xchg
pop
lods
cmp
(bad)
inc
xor
stc
dec
add
mov
movs
test
sbb
mov
js
xchg
push
les
rcr
add
int3
add
int3
push
sti
add
jp
ret
inc
leave
int3
int3
mov
jno
(bad)
(bad)
bound
pop
je
rcl
call
int3
xor
in
mov
and
pop
ret
mov
retf
mov
shr
xor
inc
retf
inc
loope
or
ins
add
in
aas
or
push
dec
sbb
and
sbb
cmp
es
ror
jno
gs
daa
in
je
loopne
lahf
stc
push
inc
lock
jecxz
xor
add
add
mov
add
cmp
xor
cdq
repz
push
add
or
adc
xchg
addr16
jmp
push
fcom
xor
imul
loope
xor
push
mov
shl
and
in
or
clc
(bad)
jo
xchg
inc
push
jne
xor
movs
movs
mov
jmp
push
xchg
aad
adc
jb
(bad)
rol
aaa
add
inc
sub
push
adc
dec
hlt
rcl
(bad)
outs
jae
adc
sbb
mov
ss
sub
leave
push
cmps
imul
stc
cs
shl
or
je
fwait
mov
add
clc
inc
aam
and
inc
mov
adc
or
pop
add
jbe
add
shl
xor
pushf
(bad)
bound
jo
or
nop
mov
add
or
nop
int3
add
xchg
or
sti
clc
jp
dec
mov
jae
fsubr
mov
xchg
xchg
ror
fstp
pop
aaa
jmp
rol
sub
cli
nop
mov
jbe
mov
adc
jmp
mov
pushf
test
fst
or
ss
dec
xchg
and
mov
or
adc
push
or
add
adc
sub
add
push
sbb
into
mov
inc
dec
inc
dec
es
aam
cmp
dec
adc
xchg
sub
mov
rcr
mov
jns
inc
fadd
loope
(bad)
not
fldcw
sub
(bad)
clc
jle
sbb
imul
add
mov
or
lahf
cmp
push
ins
mov
in
pusha
leave
add
sbb
dec
add
movs
xor
scas
add
stc
cmp
inc
cmp
adc
das
shl
push
mov
xchg
xchg
loopne
call
jae
mov
dec
sub
or
(bad)
pushf
dec
jp
ret
(bad)
clc
(bad)
arpl
ins
adc
add
sub
cmp
cs
jp
or
lea
pop
sub
adc
dec
sbb
push
dec
movs
cmps
aam
or
mov
push
pop
fisubr
inc
pop
pop
jb
or
xchg
add
imul
mov
mov
or
imul
cmp
xor
mov
movs
lock
xor
push
movs
push
sub
mov
aam
daa
or
int
sub
inc
call
and
adc
mov
gs
sti
adc
inc
sub
or
icebp
xor
je
cmp
(bad)
and
push
cmp
xor
ret
nop
cli
int3
jbe
sub
aaa
and
adc
add
jnp
fild
jne
movs
loopne
xchg
pop
in
push
and
stc
or
pop
popf
cmp
xchg
or
or
ror
das
jae
xchg
mov
or
or
sbb
lock
xor
pop
idiv
js
push
add
add
sub
imul
jns
test
sahf
out
imul
ss
mov
movs
int
fidiv
sub
sysret
mov
sub
add
(bad)
lmsw
inc
sbb
ret
push
out
dec
add
es
movs
movs
cli
mov
fwait
or
add
sub
dec
lods
rcr
sub
and
or
add
adc
data16
movs
ret
xchg
mov
mov
mov
les
loopne
outs
xchg
push
xchg
push
jge
adc
mov
pusha
or
cmps
inc
and
xor
rcr
cs
or
nop
push
xchg
cmp
loopne
cmps
enter
loopne
ret
push
mov
clc
push
or
or
sub
inc
imul
cld
nop
cli
cmc
adc
(bad)
push
jns
sub
push
loopne
push
pop
xor
fcomp
sub
test
dec
mov
inc
lds
mov
xchg
pop
or
add
pop
ret
ja
in
hlt
add
push
dec
or
movs
mov
inc
adc
xchg
inc
jb
jmp
and
enter
adc
imul
sar
mov
mov
enter
adc
inc
add
clc
xchg
or
jmp
pusha
ins
cmp
mov
xor
pop
inc
inc
in
in
jmp
fs
sub
add
push
in
xchg
mov
or
stos
loopne
ins
sub
cdq
pop
dec
gs
je
dec
add
or
dec
or
sbb
shr
call
adc
aas
jmp
addr16
jbe
push
xor
add
cmp
mov
test
arpl
js
inc
mov
push
push
cmp
cmp
jmp
cmp
jle
pop
pop
dec
test
ret
cmps
push
add
sub
mov
push
jmp
mov
and
mov
add
xchg
aaa
hlt
rcr
push
or
lock
add
xor
sub
add
jmp
pop
pop
adc
jbe
scas
or
lock
idiv
imul
sub
mov
(bad)
adc
mov
gs
adc
call
jecxz
add
mov
or
aas
arpl
in
ja
mov
inc
lock
lahf
inc
or
mov
or
adc
ficomp
shl
push
add
add
nop
or
mov
or
push
add
and
mov
pop
in
leave
jge
in
add
add
in
jnp
iret
out
pop
xlat
aad
push
je
or
je
add
mov
ret
jg
loopne
add
sbb
or
sub
imul
add
je
fsub
leave
loopne
fsubr
pop
push
cmovge
pop
sub
dec
fcomp
daa
in
add
mov
aam
jmp
loopne
mov
pop
mov
test
in
xor
add
inc
movs
lock
sbb
sbb
inc
jl
daa
sub
(bad)
call
and
dec
add
xor
add
push
and
jmp
pop
leave
movs
popa
movs
jmp
aaa
sub
add
sub
inc
xlat
mov
add
ins
inc
jb
push
inc
in
pop
pushf
cwde
cmps
xchg
push
loopne
jg
dec
mov
pop
cdq
dec
pop
popa
movs
jp
ja
mov
mov
jecxz
dec
mov
loope
popa
cmp
loop
add
cmp
imul
shl
xchg
and
in
xchg
mov
scas
push
cdq
cmps
pop
pop
psubb
mov
in
pushf
sbb
pop
call
dec
in
call
sub
push
(bad)
push
or
sub
pop
push
loop
sbb
adc
xchg
add
(bad)
movs
arpl
and
or
nop
pusha
add
jecxz
add
inc
xchg
push
ja
xor
cmp
repnz
ficom
pop
sub
xchg
add
push
(bad)
cmp
test
and
inc
inc
jecxz
adc
icebp
cmp
lods
out
inc
call
es
xchg
into
shr
lods
enter
dec
dec
sbb
cmp
fild
retf
push
mov
cmps
aam
es
mov
pop
in
mov
adc
add
add
xchg
add
pop
add
jg
call
std
movs
sbb
pop
adc
pop
sub
clc
aaa
xor
add
add
adc
and
jnp
cld
cld
imul
pop
or
test
push
jne
sbb
nop
nop
dec
enter
mov
into
ds
dec
(bad)
xchg
jl
jns
bswap
jge
in
out
enter
pop
sub
int3
(bad)
dec
bound
sub
in
(bad)
adc
ja
test
or
mov
sub
pop
lahf
ret
jge
cmp
pop
ds
pop
lods
lods
test
dec
lods
inc
rcl
or
test
movs
in
aaa
fimul
ja
mov
test
test
test
pop
pop
pushf
sbb
add
xchg
push
shr
mov
mov
and
dec
leave
jmp
sub
jne
out
add
ins
xor
imul
out
or
push
jne
and
or
add
jne
mov
inc
sub
ds
ja
adc
xor
inc
inc
push
or
popa
push
or
mov
pop
retf
dec
mov
xchg
mov
fdivr
add
mov
mov
dec
or
add
jno
scas
sbb
pop
push
fs
jns
out
jbe
mov
lds
aad
add
add
mov
aas
and
cs
ret
pop
call
in
(bad)
mov
adc
rol
xor
add
or
fist
cwde
jbe
inc
repnz
cs
push
xchg
movhps
mov
xchg
inc
jmp
pop
lock
je
js
mov
and
cmp
lock
sub
pop
add
add
dec
sub
lahf
adc
or
sbb
push
or
fisttp
mov
test
sub
push
dec
cld
imul
push
dec
in
add
aam
pop
and
dec
inc
gs
xchg
lods
les
push
cmp
pusha
inc
and
sbb
mov
dec
mov
pop
imul
and
pusha
mov
pop
ror
sub
ds
nop
xchg
pop
ins
out
dec
pop
add
lods
call
sbb
fist
or
and
mov
inc
dec
lahf
pop
push
push
add
int
xor
cmps
(bad)
nop
push
sbb
add
or
xor
mov
sbb
mov
test
icebp
bound
fst
push
jb
nop
aas
mov
sub
mov
inc
mov
hlt
mov
into
shr
add
add
out
sbb
(bad)
sti
mov
mov
jo
or
sbb
push
inc
bound
shl
push
push
ins
retf
inc
add
or
ins
or
cs
mov
retf
or
fcomp
xchg
xor
push
push
es
add
inc
add
jmp
bound
push
add
gs
inc
cmps
fdiv
test
adc
mov
pop
mov
sbb
popf
jg
mov
inc
sub
ins
and
imul
cwde
pop
rcr
push
mov
jecxz
add
movs
pusha
inc
adc
dec
pop
add
cmp
ja
adc
push
and
jmp
sbb
or
and
lock
sbb
lods
setno
mov
ja
sub
inc
mov
jecxz
pop
lods
jbe
es
add
jg
dec
or
cmc
xor
pusha
stc
das
mov
mov
out
push
dec
mov
aam
sub
retf
xor
mov
(bad)
sub
hlt
setno
adc
adc
xchg
add
adc
and
test
xchg
ins
sub
and
push
bound
out
inc
sahf
mov
leave
sar
mov
cwde
test
iret
mov
(bad)
nop
sub
fwait
adc
clc
clc
pop
mov
aas
pop
lahf
ror
sbb
cmovl
cmc
mov
in
aaa
lahf
mov
leave
jge
sub
mov
loope
jecxz
pop
sbb
sub
pop
add
daa
sbb
loop
add
pop
and
xchg
ins
xchg
mov
cvtpi2ps
pushf
xchg
stos
dec
mov
xor
cs
adc
sar
popa
enter
sbb
leave
xchg
pop
ins
call
jb
xchg
call
or
call
xchg
inc
and
add
popf
sbb
mov
mov
inc
inc
mov
sub
xchg
add
mov
xlat
repnz
test
add
or
clc
fbstp
nop
imul
nop
in
aas
inc
dec
and
cld
mov
stos
ss
(bad)
push
jb
mov
(bad)
or
xor
aam
inc
dec
pop
(bad)
mov
test
push
cwde
sbb
mov
cmps
mov
jns
ss
iret
cld
cdq
pop
jg
jb
fs
call
jmp
inc
jb
sbb
lods
jg
xchg
inc
es
aas
xchg
or
xor
es
xchg
iret
inc
add
mov
adc
and
and
xchg
or
xchg
add
pop
mov
jb
imul
or
or
or
xchg
ficom
mov
mov
inc
jb
rcr
xor
or
push
add
fs
ret
sub
add
push
icebp
or
fild
lock
add
add
mov
push
test
rcr
fs
fild
lods
pop
test
fcmovnu
leave
adc
fstp
or
add
mov
add
and
retf
xor
pop
jmp
adc
jb
in
add
pop
sub
mov
push
pop
push
jp
jnp
xor
call
inc
in
lock
fldenv
xchg
xchg
add
push
pop
and
in
push
xor
test
or
cwde
xor
adc
add
mov
rol
adc
xor
pop
dec
push
dec
lea
dec
dec
sbb
inc
mov
adc
movs
adc
ins
mov
pop
les
jne
push
add
adc
and
movs
shl
push
xor
push
pop
cmp
inc
ds
daa
xchg
nop
lock
enter
call
inc
lods
inc
inc
sub
pop
xor
shr
fst
mov
enter
adc
adc
retf
jecxz
adc
loopne
adc
leave
xor
je
pop
jne
dec
xchg
push
and
push
pop
xchg
push
or
pop
or
ror
mov
sub
ja
imul
jno
lahf
mov
ins
jle
cmp
dec
(bad)
lock
sub
or
shl
add
pop
add
inc
cmp
pop
and
or
out
cmp
in
lock
add
push
add
xlat
xchg
add
mov
lods
cs
push
dec
fnsetpm(287
add
in
mov
je
aas
hlt
jg
mov
push
out
mov
xor
add
test
add
mov
adc
mov
cdq
sub
je
mov
aaa
dec
arpl
xor
xchg
mov
sub
js
pop
sub
push
stc
adc
and
adc
pop
mov
or
jg
test
jl
mov
jg
out
inc
movs
popa
and
mov
int
fwait
mov
push
scas
stc
mov
ds
(bad)
div
sbb
scas
adc
sbb
pop
mov
dec
xchg
or
xor
and
loope
inc
aaa
hlt
xchg
mov
fs
je
lahf
fdiv
or
ret
cmps
mov
(bad)
jl
mov
and
(bad)
xchg
rol
loope
jge
and
pop
pop
add
fs
or
xchg
xchg
xchg
mov
xchg
push
mov
mov
lods
in
xor
and
fsub
fwait
dec
sbb
mov
mov
in
nop
movs
xor
in
movs
mov
mov
sbb
enter
add
movs
mov
mov
mov
pop
xchg
shl
scas
outs
sar
adc
scas
pop
inc
cmovno
rcr
dec
ror
jb
test
out
cld
xor
xor
pop
mov
add
pop
popa
adc
dec
addr16
test
jg
cmp
sub
in
fbld
sub
and
gs
xchg
cmps
test
and
lock
lods
sub
or
add
xor
pop
pop
stos
jp
je
sbb
mov
push
jp
sbb
push
sub
popa
retf
popa
sbb
add
mov
sbb
jmp
adc
or
pop
shl
xchg
xor
fcom
rcl
pushf
cmps
mov
xchg
cld
and
bound
call
jno
retf
lods
mov
sub
inc
aas
sub
xor
sub
mov
or
rol
xor
mov
and
leave
sar
call
ret
dec
push
sbb
cmps
rcr
add
sub
rcr
loope
or
or
(bad)
adc
cdq
fs
shl
fadd
aaa
lods
cmc
and
call
adc
sub
mov
cmps
pusha
inc
dec
and
dec
or
xor
bound
dec
jg
inc
in
xchg
mov
loop
inc
mov
bnd
lods
movs
push
pop
stos
inc
or
sub
sub
aas
inc
or
adc
adc
ret
mov
xchg
mov
sub
pushaw
imul
xchg
movs
clc
add
push
rol
sbb
mov
push
sbb
sbb
test
sub
addr16
(bad)
ror
sub
ja
cmp
mov
icebp
jge
sub
mov
retf
push
or
cmp
mov
call
mov
cmp
mov
fst
fcmovnbe
mov
mov
call
enter
add
outs
retf
xlat
idiv
add
mov
pushf
aad
and
sbb
sbb
imul
pop
stc
in
mov
mov
xchg
inc
cmp
mov
pusha
adc
inc
jp
inc
mov
test
dec
jle
jns
cmp
dec
xlat
sbb
ret
mov
fnsetpm(287
mov
mov
aam
push
(bad)
lock
pcmpgtb
or
xchg
ss
add
jnp
test
mov
add
mov
jnp
aam
xor
arpl
push
sbb
sysexit
imul
mov
icebp
or
popa
aam
fcomp
pop
xor
mov
or
int
mov
in
nop
lods
adc
scas
pop
daa
loop
ins
out
test
pop
cmp
out
push
stos
xchg
pop
enter
aas
stos
add
inc
nop
test
popa
iret
sub
test
push
arpl
push
push
inc
fiadd
sub
push
movs
dec
xor
jmp
dec
je
and
test
scas
xor
adc
lods
pop
mov
in
test
cmps
adc
add
push
out
mov
imul
push
test
cdq
shr
lea
push
sbb
mov
fadd
xchg
mov
ret
lock
in
in
sbb
pop
cdq
xor
inc
sbb
fucom
imul
push
jl
lods
push
xchg
xor
lds
fs
push
xor
sub
xchg
nop
leave
ins
dec
retf
ret
cld
adc
rol
cmps
or
ds
inc
or
mov
movs
or
mov
mov
fiadd
push
mov
push
fcom
les
jno
mov
mov
xor
add
dec
fmul
fucomip
rcl
test
push
sar
add
test
or
xor
jo
cld
fmul
add
dec
push
sti
hlt
and
lahf
adc
ror
xchg
push
in
pusha
popf
cmp
mov
inc
push
stc
mov
dec
pop
cs
sbb
es
outs
inc
mov
sbb
dec
shr
or
inc
cdq
jo
mov
add
lahf
jl
push
cmp
mov
pop
mov
outs
es
pop
aaa
test
mov
jp
push
mov
fcomip
icebp
in
sub
cmp
cmp
ret
and
and
or
pop
mov
dec
inc
add
mov
adc
nop
cmp
push
or
aas
jecxz
fwait
aam
js
out
push
aaa
inc
jg
and
push
les
imul
test
inc
mov
leave
fdivr
and
hlt
pop
add
pop
test
std
wrmsr
and
sub
popa
daa
fbstp
mov
or
dec
xchg
and
cmp
mov
inc
cmp
push
adc
inc
push
(bad)
int3
inc
sub
pop
dec
cmp
(bad)
mov
ror
clc
and
sbb
xor
into
in
lock
and
adc
and
add
adc
mov
add
mov
add
xchg
sub
adc
inc
add
imul
mov
push
jmp
or
sub
lea
sub
jmp
out
push
mov
sub
sub
js
lods
lods
push
(bad)
mov
mov
pop
xor
into
fmul
jns
adc
iret
sbb
lods
push
xlat
pop
jmp
and
ret
sub
ret
loopne
dec
gs
retf
loopne
mov
jno
dec
mov
ins
fcom
and
mov
mov
xor
jmp
mov
call
loopne
repnz
cmp
jmp
jo
fstp
nop
sbb
loopne
and
adc
add
adc
jmp
sbb
xor
or
sub
adc
pop
sbb
call
mov
aas
fdivr
mov
xchg
retf
in
test
cmp
loop
mov
mov
pop
leave
rcl
ins
cmp
jp
aam
aas
xor
mov
or
les
(bad)
ins
test
mov
leave
fcom
test
popa
loop
popf
pop
sub
fxrstor
repz
xchg
lea
call
fadd
add
loopne
icebp
sub
xchg
cdq
or
pop
ins
sub
mov
dec
lods
mov
cwde
xchg
xchg
pusha
adc
adc
jo
cmp
pop
push
stos
adc
mov
dec
cmp
and
lea
mov
cmp
mov
mov
push
add
add
clc
inc
xchg
add
daa
mov
out
adc
xor
and
leave
add
in
jecxz
or
and
xor
call
xor
mov
nop
iret
push
fiadd
in
div
and
dec
ins
into
xchg
(bad)
sti
adc
sub
sub
lahf
sub
inc
jl
jmp
jmp
or
and
sub
int3
and
inc
ret
adc
fcom
xchg
xchg
inc
push
push
adc
or
sbb
shr
int
xor
sbb
dec
mov
pop
pop
(bad)
sbb
adc
and
sbb
add
lahf
mov
push
aaa
and
inc
push
pusha
adc
sbb
sub
or
jne
mov
cmp
loope
push
pusha
(bad)
push
push
dec
push
movntps
(bad)
push
inc
mov
add
mov
nop
and
mov
push
add
xlat
sbb
inc
xlat
pop
jp
dec
or
jb
sbb
or
add
fdiv
push
jo
stc
dec
dec
add
loopne
and
push
mov
sub
and
mov
aam
and
cwde
add
fwait
add
aam
sti
les
xchg
pop
and
adc
mov
inc
movs
loope
fcomp
mov
stc
mov
push
and
sti
enter
dec
(bad)
adc
nop
pop
stos
mov
mov
sub
or
sbb
pushf
jb
jns
js
lods
movs
lds
loope
les
and
call
test
int3
pop
inc
push
mov
pop
aas
adc
mov
cld
dec
mov
mov
and
mov
mov
and
call
mov
mov
xchg
pop
dec
loopne
pop
and
ds
leave
push
xchg
or
lahf
dec
pop
dec
outs
and
or
test
dec
jb
sbb
mov
cmp
add
or
in
and
scas
pop
call
shl
repnz
mov
mov
add
push
push
out
bound
add
rol
xor
inc
mov
cmp
pop
xor
pop
and
mov
aas
out
push
sbb
xor
mov
jg
je
je
jl
jl
mov
adc
pop
dec
and
and
pusha
sub
in
adc
and
inc
ret
ret
adc
movs
rol
pop
sub
mov
jo
mov
and
fisttp
pop
xchg
imul
add
lock
mov
jb
mov
aam
lahf
ss
popf
pop
add
pop
(bad)
out
adc
ret
inc
rcr
(bad)
stc
lds
inc
pop
inc
imul
test
popf
gs
enter
xchg
jecxz
fcmove
test
sbb
push
push
push
dec
jmp
movs
and
repz
test
fsub
add
sbb
loopne
dec
sar
mov
inc
mov
shl
push
pushf
pushf
push
bound
cmp
and
jmp
jecxz
or
push
add
rol
push
repnz
js
sub
je
test
dec
sar
cmps
push
je
cmp
retf
ss
sbb
inc
jmp
int3
shr
xchg
fmul
int3
xlat
pop
leave
dec
loopne
aas
or
adc
pop
sbb
aas
movs
mov
pop
pop
xor
xor
add
fadd
xor
adc
repz
sbb
push
aaa
and
loopne
add
scas
and
or
shr
mov
daa
push
push
and
fnstcw
(bad)
jl
add
mov
pop
inc
adc
enter
push
mov
aam
add
jmp
mov
in
mov
inc
add
test
mov
jge
add
add
lahf
ror
mov
inc
xor
mov
sbb
mov
jl
and
jp
mov
adc
enter
sbb
xor
rol
call
cmp
pusha
outs
shl
outs
mov
dec
nop
sbb
xchg
fcomp
les
daa
mov
dec
outs
hlt
sub
(bad)
and
push
sahf
add
jno
push
daa
add
gs
pop
call
jbe
adc
je
xlat
sbb
add
cmp
pop
xlat
in
test
push
hlt
pop
push
xor
jmp
adc
dec
pop
jae
xor
inc
xlat
fistp
sub
jo
fcom
pop
in
cmp
in
adc
push
add
sub
(bad)
nop
loopne
enter
mov
jo
and
xchg
mov
or
sub
test
stc
movs
or
jne
xor
mov
pop
add
jl
shr
or
and
adc
pop
retf
cmp
popa
adc
les
ja
jmp
gs
or
inc
or
push
not
movs
shl
pop
imul
cmp
test
icebp
movs
ds
hlt
stc
and
test
sbb
pop
test
(bad)
sub
inc
hlt
adc
push
push
fcomp
mov
ins
and
nop
loop
lods
int3
retf
ja
lds
mov
push
cmp
push
or
dec
jns
shl
add
jb
add
add
int3
xchg
lock
rol
push
aad
mov
pop
mov
fcom
jae
pop
xchg
adc
rcl
stos
cmp
outs
call
sub
cmp
fs
xchg
jmp
stos
push
enter
mov
in
sbb
pop
pop
int
or
pop
adc
dec
and
out
inc
push
imul
or
pop
nop
dec
movs
nop
mov
test
je
xor
sbb
movs
add
dec
push
cmp
fcmovb
ror
inc
call
xchg
scas
stos
in
imul
dec
adc
push
pop
out
mov
cld
pop
jmp
cmp
add
push
dec
lahf
shr
add
ror
out
outs
imul
addps
and
jne
xchg
cmp
push
enter
in
inc
sub
mov
add
jle
sub
leave
mov
push
mov
jmp
cmp
and
and
sbb
xchg
into
sbb
loope
adc
cmps
mov
iret
push
xor
hlt
inc
mov
movs
jnp
les
outs
cld
imul
lahf
test
mov
ret
into
sar
mov
and
fisttp
loopne
add
sbb
inc
cmp
and
ss
mov
and
fs
pushf
dec
inc
push
jg
imul
add
test
loope
jg
lahf
jle
pop
je
rcr
xor
test
dec
inc
or
neg
xor
sbb
adc
or
test
xchg
loopne
call
adc
jl
add
jns
loop
pop
push
add
ror
arpl
pop
sbb
(bad)
icebp
repnz
fadd
test
mov
js
adc
cmp
ret
push
mov
push
je
or
add
int
sub
rol
add
jmp
inc
shl
ror
sub
add
mov
enter
addr16
sbb
push
sub
ins
xor
retf
xor
sbb
int
fsubp
xor
sbb
xor
sbb
(bad)
mov
mov
dec
test
inc
jno
or
xor
mov
aaa
movs
pop
inc
pop
leave
ror
mov
adc
int3
int3
movs
xlat
and
jmp
out
inc
sbb
cmp
cdq
retf
mov
mov
dec
push
aaa
xchg
inc
jns
jb
mov
mov
lock
cmp
loope
test
adc
fmul
and
xor
sar
xor
mov
xchg
aad
add
adc
inc
js
in
add
sbb
sbb
adc
test
add
shl
dec
and
mov
cmp
add
and
les
nop
nop
inc
imul
jmp
mov
pop
or
adc
jno
sbb
adc
add
mov
inc
inc
dec
sub
stos
dec
aad
sbb
push
lahf
jo
dec
jno
or
jo
loopne
adc
das
push
sahf
cmps
push
jmp
imul
push
add
bound
sub
aas
and
in
adc
cwde
dec
ja
xchg
cmp
test
test
push
add
out
hlt
push
mov
adc
(bad)
das
lahf
or
imul
call
ins
add
dec
xor
or
scas
test
or
or
sub
push
inc
mov
lea
push
test
sbb
jae
out
adc
add
lar
pusha
jo
test
push
adc
xor
ins
pop
cli
and
dec
test
inc
pop
(bad)
in
inc
call
es
fisub
mov
inc
aam
jg
mov
fldenv
not
jl
rol
gs
sub
lea
enter
imul
iret
mov
cmp
pusha
ror
adc
outs
sbb
mov
fs
shr
mov
mov
cdq
ins
xchg
or
xchg
sbb
arpl
mov
mov
dec
rcl
jb
push
cmp
inc
dec
test
fstp
int3
loopne
jmp
add
jp
daa
lods
xor
inc
jp
retf
push
pop
inc
xor
mov
adc
mov
add
inc
adc
sbb
rol
mov
pop
push
pop
outs
mov
pop
enter
jns
add
and
pop
sbb
sub
add
push
adc
pop
pop
arpl
in
mov
cmps
js
fcmovnb
outs
imul
sbb
pushf
jns
cmp
dec
or
pop
and
sbb
scas
sbb
add
xor
push
and
inc
inc
push
rol
lahf
jo
in
or
sbb
mov
(bad)
sub
jae
jno
mov
movs
and
xor
sbb
(bad)
movs
push
cmps
pop
cmp
retf
mov
push
pop
pop
adc
mov
fidiv
nop
dec
xchg
push
add
cld
and
jo
pop
cwde
movs
dec
outs
in
or
fmul
scas
and
push
je
xchg
and
cmp
nop
inc
push
enter
add
jno
or
xor
fnstenv
js
movs
pushf
pop
pop
rcr
or
mov
pop
dec
sub
dec
adc
jge
cmp
call
jecxz
dec
push
retf
arpl
xor
loopne
dec
das
push
add
inc
xor
and
ds
test
and
sbb
push
bound
(bad)
daa
push
adc
pop
ds
adc
push
imul
nop
sbb
push
sub
es
f2xm1
jns
or
sub
dec
loope
adc
ffreep
or
jns
cmp
pushf
scas
cmp
add
jno
aad
xor
das
adc
inc
mov
push
or
add
inc
pop
sub
out
inc
lahf
add
cmps
xor
pusha
inc
popa
je
pusha
xor
lock
pop
ret
test
mov
pop
cdq
xchg
add
or
movs
icebp
rcr
add
jnp
ret
adc
ds
test
dec
add
rol
xchg
mov
dec
or
inc
in
call
push
add
sbb
mov
cwde
sub
push
sub
inc
ins
sbb
fsubr
jge
rol
cmp
cmps
sbb
sub
xor
pop
inc
ss
sbb
retf
xchg
push
add
add
ins
push
xor
add
jg
mov
push
ins
sar
into
or
out
add
push
jmp
in
sbb
sbb
nop
adc
cmp
sbb
fwait
std
dec
dec
add
daa
pop
cmp
xchg
and
pop
fwait
or
pop
enter
hlt
inc
dec
mov
stos
in
cwde
adc
jno
dec
adc
dec
mov
mov
adc
dec
dec
dec
jge
jb
rcl
lods
xchg
cmp
loopne
add
sbb
cs
int3
or
shl
jl
ret
(bad)
fmul
loop
movs
fild
jl
or
add
and
dec
ja
mov
jle
pushf
pop
dec
pop
cmp
test
stc
xor
(bad)
or
dec
jge
cmp
add
sub
fcom
xchg
dec
xor
mov
fs
or
fwait
in
(bad)
cld
xchg
pop
add
and
je
adc
pushf
xchg
js
adc
test
and
dec
fwait
mov
xor
xlat
lahf
jbe
xchg
pop
xchg
jo
jmp
jnp
push
pusha
jg
lahf
adc
into
aas
popa
retf
bswap
pop
and
mov
sbb
lahf
dec
enter
xchg
sub
mov
pop
and
inc
pop
sbb
in
test
fstp
xor
aas
adc
and
push
sbb
mov
out
mov
mov
xchg
cs
mov
or
mov
mov
lahf
imul
enter
pusha
mov
mov
fwait
inc
push
add
or
and
inc
sbb
js
mov
jg
in
dec
cmp
jge
adc
outs
js
call
inc
fst
xchg
mov
cmps
pusha
pop
xor
mov
mov
je
ins
or
cmp
xor
xor
cmps
ins
and
shl
test
and
daa
jo
lods
mov
and
fild
mov
and
out
lahf
inc
inc
dec
pop
add
xchg
lods
dec
loope
sbb
push
daa
jns
cmps
inc
jg
cmp
je
sub
jb
mov
shr
ror
pop
les
push
cmp
mov
and
ret
dec
hlt
call
mov
sbb
nop
add
(bad)
aas
pop
dec
add
stos
lods
mov
ins
adc
jg
movs
in
xchg
dec
pushf
cmps
out
mov
dec
frstor
dec
js
push
retf
sbb
or
lea
enter
dec
mov
je
jnp
int
mov
dec
(bad)
hlt
and
xlat
mov
jns
inc
popa
rcr
pop
and
pop
ss
pop
and
rol
lahf
or
push
aad
pop
imul
push
mov
push
rcl
pop
jecxz
aad
cmps
loopne
inc
mov
outs
xchg
pusha
add
sbb
pop
imul
and
nop
sbb
pop
aas
pop
in
mov
sbb
and
loope
adc
pop
ins
inc
or
and
mov
lods
pop
leave
and
pop
lods
out
jmp
jo
pop
shr
nop
stos
xchg
in
or
aam
sub
aam
jmp
nop
and
or
mov
sub
fld
add
add
or
mov
rcr
dec
scas
xor
popf
mov
jae
rsqrtps
add
adc
add
lahf
cs
and
sbb
and
jg
jb
jb
in
in
mov
and
cmp
dec
push
or
icebp
call
sub
cmps
adc
fst
add
mov
imul
push
and
add
add
adc
retf
lock
add
xor
sbb
push
vmwrite
xor
rol
push
mov
pop
mov
shl
sbb
lods
cmovp
jb
push
jb
cwde
ins
(bad)
out
test
pop
pop
inc
pop
sbb
fistp
or
push
sbb
sbb
hlt
sbb
jmp
fwait
test
pop
mov
or
adc
das
xchg
jle
daa
je
mov
ins
mov
fisub
ret
clc
push
sbb
mov
inc
push
mov
inc
add
cmp
outs
adc
pop
test
add
or
push
xchg
lock
hlt
aam
push
sub
cwde
fmul
adc
add
add
jnp
xchg
mov
push
inc
jbe
mov
stos
xor
enter
push
mov
test
or
jo
cwde
pop
add
shr
push
add
mov
push
sbb
dec
pop
int
stos
aad
clc
sbb
push
mov
fistp
inc
(bad)
sar
xchg
out
inc
popf
outs
shl
jns
inc
dec
aas
adc
push
lds
lahf
mov
or
cmps
push
add
add
in
adc
or
nop
dec
lds
test
and
add
in
outs
xchg
sti
aad
xor
mov
inc
sbb
lds
mov
mov
ins
inc
xlat
loopne
test
push
mov
adc
sti
test
inc
inc
popa
or
idiv
jmp
adc
cmp
pop
inc
mov
pop
(bad)
mov
and
dec
inc
dec
inc
lock
jnp
mov
sbb
push
xor
jg
push
leave
rol
fsub
fist
jns
jg
mov
or
xchg
test
and
and
sub
push
test
lds
mov
mov
jle
xor
adc
outs
test
push
and
(bad)
add
mov
ss
xchg
sub
or
inc
and
adc
outs
lods
inc
pop
jp
fwait
dec
cmps
lahf
std
sbb
push
aam
sbb
mov
adc
xchg
unpckhps
jnp
push
ja
add
jmp
mov
hlt
ror
adc
mov
or
push
enter
aas
push
test
or
pusha
sbb
clc
and
jb
arpl
or
int3
nop
inc
call
cmps
xchg
sbb
call
in
and
hlt
rol
push
das
rcr
mov
or
test
xchg
cmovs
nop
xchg
add
xchg
push
je
lock
movs
inc
enter
mov
and
or
cwde
xor
dec
mov
mov
rcl
mov
pop
mov
push
stc
push
xor
push
mov
mov
js
sub
dec
in
and
and
or
jle
bound
hlt
aad
or
bound
retf
in
sar
in
sub
pop
call
call
loop
retf
inc
call
movs
js
movs
push
in
movs
pop
hlt
pop
sbb
cmp
and
cli
push
and
sbb
arpl
loop
sbb
out
fnstcw
pop
nop
cmp
add
jecxz
or
dec
jg
sahf
adc
add
dec
dec
push
enter
test
and
xor
sahf
push
test
mov
xchg
fdiv
fisttp
add
mov
add
mov
in
sbb
sbb
ret
jmp
test
xor
push
rcr
dec
sub
imul
xchg
jne
fild
lods
pop
xchg
test
add
pop
loop
adc
test
push
mov
sub
icebp
adc
scas
or
and
outs
or
rcl
ret
push
mov
gs
mov
push
or
test
movs
mov
sbb
fld
out
lock
push
dec
cmp
sbb
mov
xor
push
icebp
sbb
dec
ret
push
cmp
mov
inc
pop
push
cwde
and
ror
imul
rcl
dec
fbstp
push
adc
lods
sub
or
and
xchg
pop
shr
or
push
popa
push
xor
call
cdq
push
jmp
test
push
jmp
mov
retf
add
test
push
fild
fadd
pop
xor
nop
mov
sbb
dec
jmp
sub
sub
sbb
mov
or
lahf
sbb
mov
add
add
les
cmps
dec
es
mov
sub
call
add
dec
mov
aam
stos
lods
je
and
jns
retf
cmps
movs
pushf
cwde
push
dec
mov
mov
rol
or
push
out
cmp
push
sbb
dec
pop
hlt
(bad)
les
rcl
jecxz
nop
in
mov
jecxz
pop
sbb
sub
cld
jge
or
aam
push
in
nop
xchg
inc
(bad)
lock
sbb
cmp
jecxz
or
and
les
sbb
out
pop
inc
or
jno
lods
jecxz
test
push
mov
cmp
mov
in
cmp
adc
(bad)
leave
repz
call
add
repnz
add
fnstenv
fcomp
test
out
sbb
xlat
lods
mov
inc
aam
adc
out
push
cmp
stos
jecxz
arpl
nop
nop
popf
or
adc
fild
pushf
or
dec
(bad)
fild
mov
dec
or
inc
inc
(bad)
repnz
inc
sbb
pop
jmp
push
aam
pop
jb
lods
inc
jg
imul
xor
push
and
and
lock
xor
in
pop
jno
and
lods
scas
pop
sub
int
(bad)
pop
pop
sbb
and
and
adc
inc
adc
xor
icebp
sub
bound
sub
inc
imul
jne
or
adc
or
ret
cmps
xor
dec
adc
mov
(bad)
test
jg
and
enter
movs
dec
ret
inc
sbb
jge
bound
pushf
adc
and
sub
dec
dec
push
outs
adc
add
gs
les
es
jmp
sub
jmp
or
add
faddp
jne
movs
das
xor
sub
and
retf
mov
add
sbb
retf
fcmovnu
inc
sub
retf
mov
inc
outs
ja
outs
retf
sbb
push
inc
cmp
cdq
cmps
cdq
mov
xor
bound
outs
movs
aam
sub
mov
dec
pop
scas
or
movs
pop
mov
jmp
movs
lea
rep
xchg
ja
cli
and
shr
inc
das
jae
push
hlt
or
test
or
add
pop
ret
test
(bad)
test
call
mov
mov
or
aam
shl
adc
and
pop
imul
cmps
test
inc
and
out
mov
in
jmp
out
movs
icebp
xchg
dec
mov
pop
inc
xchg
lods
cmp
cmps
lds
adc
aas
cmp
adc
dec
adc
int
sbb
aas
mov
pop
or
or
mov
movs
mov
popa
sbb
sbb
push
mov
and
ins
add
lock
pop
dec
add
cmps
in
add
sbb
jo
movs
into
shr
call
cwde
lahf
test
fdiv
retf
cmp
xchg
xor
cmp
adc
sbb
pop
movs
pushf
(bad)
mov
outs
cmp
inc
sub
push
int
add
fs
and
add
dec
shl
push
loopne
inc
xor
add
mov
daa
call
ss
mov
jne
mov
pop
packssdw
test
(bad)
ror
jp
adc
mov
dec
fadd
out
cmp
mov
cmp
pop
inc
add
mov
je
es
in
fdiv
and
das
or
test
jp
xor
inc
cmc
ins
inc
popa
(bad)
into
xchg
repz
aad
test
pop
lea
in
push
adc
add
jmp
loop
dec
fnstcw
or
pop
pusha
mov
shl
(bad)
sti
jns
pop
pop
les
xor
test
push
movs
lahf
xor
sub
sub
add
cmp
inc
sub
or
stc
xchg
sub
ror
movs
and
adc
sub
leave
xchg
test
mov
pop
mov
pop
inc
or
jne
scas
add
mov
cmps
sar
sar
or
or
or
sub
cmp
inc
xor
and
lods
inc
add
sti
adc
and
fs
or
xchg
sub
in
mov
xor
pop
or
jbe
mov
call
xor
and
(bad)
scas
mov
dec
push
icebp
xor
clc
xor
xor
and
pop
xchg
fucom
lds
imul
mov
cmp
and
mov
jg
ret
or
nop
inc
(bad)
js
pop
dec
dec
cmps
pop
and
and
push
ins
loope
xor
or
dec
mov
ins
mov
xchg
fdivr
pop
fild
adc
lea
fisubr
mov
push
test
dec
es
push
clc
adc
mov
movs
mov
(bad)
pop
add
call
push
dec
push
push
jg
mov
or
mov
lahf
pop
shl
lea
je
fnstcw
sub
repz
sbb
add
xchg
or
pop
enter
push
cmp
or
or
sbb
and
dec
scas
shr
mov
inc
hlt
push
xchg
les
xchg
dec
xlat
adc
enter
hlt
hlt
push
add
and
xchg
xor
dec
dec
sbb
test
add
push
imul
aas
push
pop
lock
cmps
lods
sub
sub
int
(bad)
or
cmp
leave
bound
cmps
cwde
or
mov
aas
sbb
sub
ret
pop
add
add
(bad)
outs
aam
retfw
divps
add
sbb
xor
aaa
inc
dec
add
pop
jnp
inc
pop
and
push
mov
sbb
pop
add
jmp
pop
jg
in
adc
cmp
mov
je
add
xor
mov
test
cmp
and
mov
out
or
in
lahf
push
and
cmps
xor
ret
or
shl
adc
in
retf
sub
adc
mov
hlt
add
and
dec
xchg
xchg
(bad)
ret
outs
loopne
ret
adc
jae
sahf
pop
fs
push
aam
fist
loopne
in
or
jns
xchg
pop
add
ret
movs
jns
jnp
pop
int3
int3
pop
pop
xor
loop
sbb
lods
fild
clc
or
dec
dec
sbb
xchg
xor
cmp
xchg
pop
shl
enter
add
push
xor
add
and
cmp
stc
dec
and
movaps
cmp
and
dec
mov
cmps
jmp
adc
xchg
inc
cmp
cmps
shl
popa
out
mov
sub
adc
push
rol
dec
inc
mov
sbb
call
jge
mov
cmp
add
jns
jle
rol
dec
add
dec
ror
and
push
adc
les
pusha
add
les
inc
or
inc
nop
and
ja
sub
inc
stos
fst
mov
adc
fdiv
fild
add
adc
fisttp
fs
das
leave
sar
pop
push
popa
or
cmp
mov
push
add
mov
clc
push
pop
jns
les
jnp
test
push
push
lods
imul
cmp
(bad)
and
mov
fmul
popf
xchg
or
and
test
pop
push
add
xor
sub
push
add
movs
sub
adc
test
add
or
cmp
sbb
dec
inc
mov
mov
jecxz
add
das
add
movs
out
pusha
enter
dec
pop
je
inc
dec
sar
sbb
add
por
jns
lods
imul
outs
fdivr
rcl
lds
xor
int3
test
mov
mov
test
sub
xchg
test
je
pop
sbb
pop
test
add
and
and
test
inc
add
lock
mov
push
push
jmp
inc
dec
(bad)
hlt
adc
lock
or
sub
add
sar
(bad)
mov
sbb
and
in
ret
jp
mov
mov
inc
push
mov
mov
arpl
jno
push
cmp
adc
push
scas
imul
in
mov
mov
push
movs
jb
pop
in
mov
mov
cdq
in
xchg
fcomp
and
test
pop
cwde
cwde
jecxz
xor
and
test
pop
int3
int3
xor
push
sbb
cmp
lods
dec
cmp
inc
cmp
fcomp
cmp
mov
mov
and
dec
inc
or
aas
rol
mov
and
push
iret
adc
dec
inc
or
mov
nop
push
test
icebp
lods
jno
xor
imul
fld
test
mov
shl
or
fist
pop
hlt
add
aad
fisttp
stos
inc
ficom
mov
xchg
add
stos
aad
fadd
or
mov
imul
mov
jmp
and
cmp
cs
add
sbb
cmp
leave
popa
addr16
nop
pusha
ds
dec
cld
adc
ins
repz
adc
aas
lea
inc
repnz
fild
add
mov
inc
sub
jmp
push
and
fimul
enter
popa
inc
add
jg
sbb
fs
pop
pushf
cmps
lea
mov
sub
push
lahf
sbb
cmp
bound
or
shr
pushf
ins
shl
test
push
cli
xor
mov
faddp
add
or
sub
cdq
fs
sbb
and
cdq
fs
dec
sub
xor
xchg
dec
cmp
xchg
dec
es
inc
dec
dec
dec
es
fs
push
pop
es
fs
pop
pusha
fs
ins
jo
inc
nop
dec
es
inc
cmps
cmp
in
push
in
mov
xchg
cwde
pushf
inc
push
in
mov
in
lods
mov
in
push
mov
mov
rol
inc
push
in
int3
ror
in
push
aam
fadd
in
loopne
in
push
in
in
lock
in
push
hlt
clc
cld
and
repnz
add
add
and
jb
or
pop
jb
pop
adc
sbb
pop
jb
and
and
jb
sub
pop
jb
pop
xor
cmp
pop
jb
inc
inc
jb
pop
jb
dec
push
pop
jb
pop
push
pop
pop
and
jb
pusha
fs
pop
jb
ins
jo
jb
pop
je
jl
pop
jb
add
jp
xor
pop
xchg
cmps
adc
sbb
add
mov
cwde
data16
jl
sbb
lds
or
cmps
push
shl
mov
scas
call
and
pushf
in
test
cmp
jmp
ss
and
adc
sbb
adc
cmps
sbb
adc
movs
mov
pop
cmp
xor
sbb
call
sbb
sub
push
fbld
mov
or
pushf
or
adc
ins
jmp
jo
cwde
sar
push
mov
addr16
inc
mov
xchg
pop
cld
sub
je
mov
mov
ss
in
push
rcr
push
out
cmp
inc
push
arpl
in
push
ins
adc
jne
xor
mov
adc
pushf
sbb
dec
dec
int3
int3
sbb
movs
push
rcl
rcl
adc
and
enter
cmp
and
pop
jge
imul
sub
inc
sbb
inc
popf
push
js
stos
cmp
repz
pop
or
fnstcw
push
or
and
mov
sub
sbb
fild
push
ds
add
retf
or
push
scas
xor
push
loop
movs
dec
cmp
mov
add
sbb
imul
loopne
cmp
sbb
xchg
mov
push
and
push
push
push
fwait
aaa
in
xor
cmp
ret
push
mov
cmp
cdq
or
dec
(bad)
ds
sar
mov
add
dec
mov
scas
popf
jmp
xchg
cmps
mov
pop
dec
jmp
std
lea
gs
outs
sub
out
jl
inc
fadd
and
in
push
sbb
fcom
push
cmp
ins
ret
cmp
fsubr
xor
pop
xchg
inc
bound
jo
popa
cld
test
cld
cmp
cmp
push
pop
sbb
push
ds
loopne
jge
arpl
xchg
cmps
pop
pusha
(bad)
clc
pop
pushf
adc
popf
push
movs
bound
push
xchg
and
test
push
outs
hlt
xchg
mov
and
or
movs
fadd
xor
fxch
sbb
hlt
sub
or
ins
hlt
xchg
fwait
ins
loop
or
dec
pop
sub
dec
cmp
mov
fwait
mov
mov
xchg
pop
xchg
aam
icebp
aad
imul
mov
dec
jno
or
clc
push
pop
rcr
sub
or
sbb
imul
mov
test
fild
ins
loop
mov
cmp
clc
or
test
nop
jno
les
loope
data16
les
push
add
lahf
lock
dec
jle
mov
cmps
cmp
jge
loop
outs
fcmovnb
add
dec
pushf
jmp
jmp
fld
aad
push
ins
bound
lock
or
in
add
push
mov
sbb
clc
clc
push
adc
or
or
mov
cld
or
pusha
ss
lods
jnp
adc
sbb
dec
je
(bad)
mov
jne
dec
or
scas
and
(bad)
mov
xor
sbb
ss
add
imul
mov
cmp
mov
add
xor
xor
ret
push
aas
adc
and
or
sbb
inc
sub
popf
mov
ret
and
adc
dec
adc
mov
jge
(bad)
and
sbb
aad
cmp
inc
jg
and
cmp
lahf
test
fbld
outs
and
nop
pop
sub
test
push
pop
and
retf
div
and
push
aas
add
icebp
les
dec
mov
jo
stos
xor
add
pop
sbb
in
je
push
dec
cmp
test
and
push
push
xor
inc
dec
pop
fimul
inc
add
and
inc
mov
retf
inc
sub
fs
or
inc
dec
lock
stos
ds
cmps
mov
nop
xchg
pop
call
sub
shr
lods
loope
push
cmp
gs
es
jmp
retf
mov
mov
or
and
xchg
add
sub
nop
int
jo
mov
add
cmp
or
fistp
ins
adc
punpcklbw
push
imul
or
pop
fdiv
stos
push
ss
add
test
xchg
adc
inc
and
fstp
pop
pop
or
sub
nop
sub
mov
out
or
adc
les
pop
shl
mov
cwde
pop
or
sbb
add
sub
jg
popa
and
jne
nop
add
cld
sbb
push
repnz
movs
data16
push
in
adc
test
xor
leave
repz
or
lock
jno
xlat
retf
pop
adc
jmp
pusha
test
call
call
pop
or
js
aas
jb
mov
add
push
es
ins
xchg
xor
dec
push
cmp
dec
add
daa
call
test
and
dec
xchg
cwde
sbb
lods
or
adc
dec
jg
jecxz
fs
pop
fmul
sbb
fsubr
cmp
mov
pusha
in
dec
fs
shl
push
(bad)
sub
add
ror
mov
test
lock
add
push
lds
push
repz
les
cwde
jmp
mov
loopne
sti
mov
shl
push
stc
les
push
pop
xor
jb
lea
in
ja
(bad)
jmp
cmp
add
hlt
cmp
adc
sets
inc
mov
dec
cmp
call
popa
nop
test
or
xchg
jae
ret
pushf
push
cmp
jmp
push
lea
jmp
jbe
arpl
pusha
enter
clts
scas
add
fnstsw
xor
es
xor
sbb
shl
das
lods
push
adc
xor
add
lahf
(bad)
adc
leave
or
pop
pushf
aas
test
les
cmp
adc
ins
in
stc
sbb
jge
adc
cmp
mov
lods
jbe
add
and
push
pop
lods
cmp
pop
mov
pop
add
call
ror
sti
(bad)
mov
jmp
push
and
inc
inc
arpl
mov
sub
dec
xor
sbb
(bad)
add
jo
ret
pop
(bad)
bound
add
(bad)
dec
nop
aaa
ins
inc
in
fnstenv
xchg
ds
ins
sbb
movs
push
out
inc
xor
sub
add
pop
fcmove
retf
sbb
inc
fwait
sub
inc
mov
mov
add
push
lods
rol
xchg
popf
stos
dec
(bad)
test
cmps
out
jnp
sub
sub
push
pop
or
and
sbb
test
not
pop
aad
(bad)
inc
js
enter
push
cmp
mov
add
outs
mov
mov
(bad)
fdiv
mov
jl
push
loop
xchg
aam
call
sub
xor
fild
push
pop
add
add
or
nop
pop
sbb
jne
(bad)
add
push
test
loopne
pop
sub
jns
mov
shl
adc
not
retf
enter
inc
inc
enterw
mov
sub
sub
mov
xor
jb
cmps
stc
(bad)
or
repz
dec
enter
xor
cmp
push
inc
adc
xchg
xor
xchg
sub
push
shl
push
ins
fld
jnp
mov
shr
cmp
mov
dec
ja
jnp
ins
push
xchg
mov
sub
dec
mov
fdivr
into
movs
xchg
sub
cmc
imul
(bad)
pop
in
adc
jmp
ss
call
mov
in
int3
repz
push
cmp
mov
push
mov
dec
movs
call
sub
cmc
push
repnz
jae
lock
jno
add
lock
test
je
add
jne
int
pusha
xor
push
shl
inc
or
xchg
add
lock
in
xchg
sbb
mov
js
retf
ds
lods
push
dec
ins
sbb
ficom
push
xchg
mov
pop
imul
xchg
mov
(bad)
xor
daa
lock
rcl
xor
add
mov
xor
into
shl
sti
rol
js
es
nop
retf
cwde
xchg
enter
inc
ror
rcl
in
jl
push
lahf
sbb
push
inc
das
jge
jmp
adc
and
daa
pop
dec
cmp
shl
xor
cmp
rcl
xor
jle
push
cli
add
sahf
push
clc
xchg
add
fcomp
lock
gs
rcr
outs
(bad)
movs
mov
addr16
adc
popa
pop
jmp
rcl
loope
lock
push
jb
pop
add
jmp
cmp
ror
xchg
or
rol
mov
add
(bad)
(bad)
ja
adc
data16
jb
mov
shr
xchg
je
add
adc
shl
sbb
jns
loopne
loopne
and
sub
adc
movs
fdivr
ret
pop
push
out
fcom
shl
jmp
aaa
add
test
clc
add
add
cmp
loopne
jnp
push
pop
xor
mov
(bad)
push
push
lods
or
mov
and
mov
in
outs
mov
xchg
fdiv
pop
and
adc
mov
xor
stos
and
and
dec
sbb
push
mov
mov
jno
and
sub
in
sub
rcl
xchg
cmp
add
add
fiadd
aas
loope
addr16
aam
loopne
out
or
inc
jmp
jns
fdivr
test
test
test
shl
add
sub
in
adc
jmp
xor
or
cmp
aam
or
jno
jge
jno
and
pusha
sub
and
jne
inc
ja
jmp
xor
jno
aaa
and
or
dec
mov
adc
adc
arpl
add
add
or
mov
xor
test
stos
ror
adc
or
jmp
test
cwde
cli
sbb
popa
ret
jle
jge
sbb
pop
mov
mov
xchg
clc
cmp
mov
int3
add
inc
call
and
jmp
jnp
xchg
jbe
jge
cmp
pop
daa
in
jmp
clc
in
jge
in
push
sar
retf
data16
xchg
test
xchg
adc
into
adc
test
add
data16
sbb
retf
xlat
xchg
xchg
push
or
shl
inc
arpl
outs
push
inc
push
add
mov
xchg
xor
jae
jnp
js
xlat
jnp
popa
push
or
xchg
dec
lods
sub
sbb
dec
pop
ins
stos
push
dec
sbb
inc
mov
ins
push
xor
xor
lea
or
retf
add
add
shl
js
mov
cmp
lock
and
mov
sbb
pop
or
iret
sbb
rcr
dec
loop
mov
or
jnp
add
cld
mov
cld
pusha
cmp
inc
jae
xchg
push
xor
or
cmp
mov
add
mov
inc
cmp
pop
sub
outs
stos
sbb
ret
ror
inc
mov
mov
movsx
xchg
mov
pushf
inc
mov
sub
and
or
push
xchg
or
outs
arpl
push
xchg
inc
mov
xor
push
adc
adc
test
add
inc
jp
into
and
dec
bound
aam
push
mov
jg
jmp
pop
(bad)
add
retf
xchg
loopne
repz
add
mov
nop
add
jmp
ja
push
stos
adc
fld
rcl
repnz
mov
and
inc
and
jecxz
ret
and
xchg
(bad)
pop
jnp
cmp
call
push
dec
adc
pop
sar
xchg
call
xchg
js
add
nop
cmp
mov
out
or
xor
sub
sti
mov
in
fisttp
(bad)
in
adc
or
xor
add
out
ret
sbb
shl
mov
push
iret
sub
inc
adc
pusha
stc
dec
dec
sub
pushf
pusha
pop
and
out
aam
push
nop
retf
fmul
fdiv
aad
xlat
call
dec
dec
xor
dec
(bad)
and
add
and
sub
outs
mov
fidivr
sbb
bound
bound
add
mov
arpl
iret
jmp
ret
xor
pop
mov
gs
inc
xchg
xor
cmp
cmp
jo
sub
jmp
jbe
push
xchg
jp
sub
dec
push
inc
inc
sub
mov
imul
adc
stos
sbb
and
add
test
or
data16
sbb
cmp
xchg
outs
mov
mov
jo
pusha
cld
pop
lahf
xchg
in
inc
adc
aam
pusha
fnstsw
pop
test
xor
stos
mov
cmp
cmp
mov
outs
cmp
lea
add
sbb
mov
int3
cmp
push
mov
cld
push
inc
jmp
add
xor
or
fcomp
cwde
push
movs
jb
xor
cmp
xchg
adc
xchg
dec
ja
inc
sbb
fmul
sub
add
out
ret
into
cdq
and
fdiv
mov
mov
ss
fnsave
xor
push
sbb
cdq
jge
movs
or
mov
aas
(bad)
fadd
adc
rcl
adc
jmp
sbb
pop
jecxz
bound
adc
imul
add
xor
iret
push
xor
sub
je
sbb
sub
inc
sub
ins
lea
ror
cmps
jno
jmp
loop
nop
popa
and
and
inc
outs
pop
xchg
ja
lock
pop
add
in
sub
out
push
popw
psrad
ja
retf
sub
(bad)
add
xchg
test
sbb
push
fsub
push
and
push
push
cmps
cmps
mov
lods
int
pop
aas
adc
push
and
jbe
adc
inc
push
aam
shr
sub
(bad)
aaa
or
les
rcl
inc
dec
dec
adc
xchg
dec
push
jo
loopne
loopne
in
push
mov
cs
pop
jbe
int3
out
test
or
mov
jl
pop
ins
mov
hlt
sub
pusha
je
add
pop
ret
or
add
call
fsubr
(bad)
sbb
(bad)
mov
cmps
fmul
dec
sbb
into
push
shl
mov
or
or
mov
ret
out
int3
loope
fldenv
call
push
adc
call
push
xchg
fimul
xor
lock
or
loopne
sub
mov
push
es
scas
mov
lock
jp
dec
mov
fs
mov
div
add
dec
out
pop
dec
xchg
data16
lods
mov
push
or
cmps
pusha
rcr
in
ror
push
pop
inc
scas
ret
cmp
js
lock
scas
mov
hlt
push
loop
or
cs
jp
mov
popf
mov
call
sub
imul
push
xor
mov
movs
sbb
or
and
mov
je
add
and
jmp
push
dec
add
xchg
cmps
pop
mov
adc
sbb
neg
push
sbb
fst
arpl
fcomp
xchg
mov
xor
jb
sete
pop
jns
inc
jno
(bad)
ret
mov
add
sub
or
and
mov
push
lar
loopne
rcl
push
cmp
sub
dec
sub
adc
mov
enter
inc
cld
sbb
lods
jbe
test
cmp
fwait
cld
adc
add
test
mov
cmp
push
jmp
cdq
push
inc
in
cld
xor
loope
xchg
pop
and
mov
ins
sar
inc
ret
(bad)
sar
nop
je
sbb
ds
pop
aaa
mov
inc
mov
xchg
jb
pop
inc
jno
cld
(bad)
in
enter
cld
cld
or
sub
enter
cs
out
xor
ret
jo
mov
add
loopne
loope
add
and
loopne
loopne
ins
in
das
loopne
mov
nop
dec
pop
sub
dec
arpl
ds
inc
mov
jbe
jbe
aas
mul
cmp
cmp
cmp
sti
test
xchg
(bad)
push
jb
repz
inc
jge
and
clc
fistp
cmp
sub
shl
jns
dec
imul
add
mov
out
shl
adc
inc
push
ja
nop
pusha
or
cmp
lock
mov
mov
cwde
mov
ins
push
das
and
(bad)
push
imul
xchg
in
(bad)
xor
dec
fsubr
call
or
and
imul
fmul
adc
jo
int
fidivr
jns
pop
pop
inc
sahf
loopne
mov
loopne
loopne
push
mov
and
in
inc
dec
ret
sbb
in
fidivr
mov
sub
loope
sbb
popa
sti
ret
adc
mov
jno
imul
sbb
and
and
hlt
dec
xchg
mov
je
xor
cmp
mov
push
mov
inc
sbb
leave
or
sub
dec
adc
xor
mov
nop
mov
or
fidiv
push
stc
iret
test
movs
push
mov
lods
add
and
add
retf
pop
jno
jbe
sbb
add
jns
pop
or
or
dec
fs
cmps
jns
or
je
cwde
xor
pop
xchg
cli
adc
loope
data16
dec
test
cmp
cmp
inc
push
popf
jmp
ret
jmp
jg
push
inc
or
cmp
jne
sbb
clc
loopne
push
jle
mov
mov
jo
jmp
add
ja
and
add
gs
test
push
pop
adc
push
push
pop
dec
mov
in
adc
push
gs
fadd
popa
loopne
mov
push
cdq
mov
dec
ror
jg
adc
inc
dec
push
(bad)
pop
or
fadd
jmp
push
dec
lods
jae
sbb
push
rcr
out
sub
lea
(bad)
and
xor
push
inc
cli
nop
popa
movs
mov
adc
fld
push
add
sbb
outs
leave
mov
add
or
bound
sbb
push
adc
cwde
adc
stc
push
shr
inc
xor
xor
sbb
ins
sub
xor
push
outs
sub
jo
or
(bad)
loope
sbb
lahf
mov
dec
call
call
nop
je
in
mov
jge
pop
fsubr
dec
add
lea
leave
xor
xchg
mov
xchg
stos
push
sbb
lea
int3
fsub
or
mov
or
sub
mov
aas
fs
add
and
(bad)
dec
sbb
sti
sub
pushf
std
cmp
arpl
push
mov
or
fwait
or
fwait
cmp
sub
xor
imul
adc
and
add
add
out
fsub
and
pop
mov
push
mov
push
fnstsw
ss
adc
cmps
outs
inc
test
or
push
xchg
push
inc
aaa
cmp
ror
data16
dec
jmp
xor
test
fld
or
adc
mov
pop
mov
xchg
jp
ret
js
(bad)
dec
lods
pop
and
add
xor
inc
or
sub
adc
or
xchg
out
adc
or
(bad)
dec
loop
mov
iret
jnp
adc
loop
push
adc
cmp
ss
dec
xchg
xor
stos
pop
push
or
and
gs
jns
rol
cwde
in
rol
sub
push
rcr
xor
cmp
mov
sbb
push
daa
fwait
mov
xor
jg
and
adc
or
iret
jg
pop
adc
(bad)
hlt
leave
les
inc
and
ror
inc
xchg
adc
add
xchg
retf
cmovbe
sub
add
pop
push
xchg
mov
add
or
pop
(bad)
ror
rol
jl
jl
add
or
mov
and
test
ror
dec
xor
fst
or
stos
xchg
dec
imul
pop
fsubr
adc
xchg
dec
es
addr16
pop
fs
dec
mov
shl
imul
adc
and
jb
ins
ror
adc
xchg
or
sub
jns
ret
dec
es
lods
enter
or
and
rcr
dec
imul
popa
imul
or
inc
test
movs
xchg
(bad)
dec
xor
outs
sbb
xchg
popa
imul
je
push
gs
imul
kxorw
fst
outs
jns
push
dec
mov
pop
sub
idiv
mov
cmp
push
xchg
int3
or
cmp
inc
push
add
push
pop
or
add
popa
pop
or
and
mov
dec
adc
xchg
js
push
mov
loopne
sub
lock
fadd
mov
push
jle
std
sub
or
les
cmp
sbb
aas
mov
xor
inc
ret
es
jg
add
sbb
or
or
cmp
push
dec
mov
or
sub
addr16
push
dec
jp
adc
mov
jo
ja
and
je
lock
pushf
dec
out
lods
xor
xchg
push
retf
and
xor
jg
mov
adc
jg
adc
mov
rcl
and
test
xchg
fisubr
mov
cld
add
sbb
cmp
and
add
push
mov
scas
aas
and
aad
aaa
dec
lea
add
lahf
outs
in
dec
sbb
cmp
fwait
push
aaa
test
stos
cmps
mov
adc
dec
je
xchg
sahf
fsub
xchg
pusha
ins
pandn
imul
enter
lahf
outs
push
push
nop
adc
mov
sbb
outs
add
test
cmp
sub
mov
jb
and
sbb
sub
bound
mov
lods
fnstenv
nop
or
or
dec
repnz
mov
pushf
cmps
popa
and
mov
lea
add
pop
mov
cmp
add
cwde
sub
adc
shr
pusha
(bad)
in
xor
xor
repnz
fadd
aas
add
in
es
and
repnz
push
or
je
or
nop
dec
sub
mov
aam
lods
push
test
xchg
xor
in
(bad)
adc
jnp
jmp
add
cmp
not
mov
sub
push
xor
xchg
mov
inc
retf
popa
mov
and
mov
cmp
jb
or
mov
mov
es
aam
xchg
ret
mov
mov
ja
or
dec
repz
enter
rcr
test
or
sbb
repz
or
or
ret
xchg
ins
add
push
and
inc
or
inc
mov
(bad)
inc
push
popa
rcl
or
dec
test
and
push
(bad)
mov
dec
push
mov
pop
inc
test
mov
add
test
xor
cmps
lea
xchg
mov
imul
or
inc
inc
lods
aas
lods
(bad)
nop
jb
ror
dec
mul
mov
movs
mov
shl
adc
mov
stos
mov
ja
prefetchwt1
adc
jmp
lock
in
mov
scas
or
xlat
inc
add
jecxz
ss
or
mov
jmp
inc
pop
leave
cdq
sbb
inc
inc
mov
cmps
test
sbb
sbb
push
cmps
int3
add
sub
and
data16
or
ds
repnz
xchg
loopne
add
xor
je
inc
inc
add
sub
and
pop
mov
jmp
retf
and
dec
cdq
lds
test
lods
mov
or
mov
pop
push
add
inc
movs
mov
fs
jg
mov
loopne
and
ror
pop
sbb
jb
and
dec
sbb
inc
inc
jle
pop
test
or
sub
fs
or
and
and
sbb
sbb
mov
or
jmp
cmp
inc
sub
lea
adc
outs
fistp
ins
add
or
icebp
fisubr
sbb
test
(bad)
movs
movs
pop
sbb
add
ror
lods
paddw
xor
jge
inc
dec
cmps
pop
inc
sbb
xor
inc
sbb
add
xchg
data16
nop
pop
adc
adc
sbb
xor
sbb
pop
cdq
cmp
sub
in
popa
loope
test
pop
jmp
movsx
sub
movs
call
xor
adc
test
inc
loope
xor
mov
loopne
ret
scas
movs
xchg
and
adc
mov
push
xchg
xor
ja
push
pop
cmp
push
xor
div
hlt
push
mov
cld
mov
add
jno
test
leave
out
ror
mov
mov
inc
jb
sbb
inc
jmp
sub
add
es
sub
xor
dec
ret
push
pop
pop
mov
clc
(bad)
dec
daa
or
fcmovnbe
imul
add
js
pop
mov
clc
or
mov
cmc
xor
jmp
inc
fistp
xor
add
fcomp
sbb
dec
in
add
add
xor
dec
push
shr
rcl
push
sar
sbb
jg
add
scas
cmps
jne
adc
repz
push
pop
dec
push
sbb
sub
imul
adc
cdq
pop
jmp
jg
mov
push
sub
pop
jo
adc
leave
scas
out
adc
shr
mov
inc
dec
pusha
add
add
inc
nop
test
add
inc
add
add
cmps
xchg
mov
(bad)
cmp
sbb
adc
mov
mov
(bad)
les
add
jae
cmp
popa
pushf
xor
rcr
jae
sti
cld
cld
add
xor
test
fist
xor
std
js
arpl
sub
push
dec
or
inc
add
sbb
xlat
xor
je
outs
pusha
jno
xchg
mov
sub
mov
push
cmp
jge
jmp
dec
add
cmp
pop
popa
xor
sbb
add
cwde
jb
bound
xchg
cmp
movs
dec
add
pop
xor
jo
pop
and
call
and
and
(bad)
sbb
add
pop
leave
mov
add
pop
out
sahf
sub
adc
jo
jae
test
call
pop
xor
xor
and
push
pop
add
xor
sar
jb
in
fild
inc
sub
jns
push
mov
sub
test
xor
test
or
adc
idiv
ds
xor
dec
jl
rol
inc
sub
pop
cld
add
pop
mov
enter
cmp
add
adc
cmc
add
cs
ror
push
loopne
add
lods
sub
mov
jnp
xchg
xor
adc
dec
cmp
cwde
xor
in
push
xor
dec
adc
mov
inc
lock
jae
jnp
mov
popf
test
rcl
lods
pop
fisub
push
mov
mov
xchg
cs
add
mov
mov
cmp
imul
rcr
or
add
test
adc
pop
xor
push
xor
sub
jb
inc
dec
dec
in
mov
sub
adc
lods
add
sub
add
push
inc
or
add
inc
out
or
jb
(bad)
dec
sub
test
mov
jecxz
mov
dec
adc
mov
jmp
fstp
xchg
cmp
ja
jae
and
inc
mov
or
sub
pusha
pop
or
mov
in
cld
lods
mov
pop
stos
xchg
scas
inc
(bad)
or
push
xor
pop
mov
test
cld
add
cld
or
or
ror
adc
push
cdq
mov
in
in
mov
mov
je
and
mov
add
mov
gs
nop
cli
push
in
ins
in
ror
in
sub
cmp
les
shl
hlt
cmp
inc
in
mov
dec
ret
inc
adc
in
push
test
add
xchg
inc
cmp
inc
stos
mov
inc
push
pop
xor
inc
add
loope
loope
xor
add
sar
aam
aad
int
and
shr
loopne
adc
add
ins
xor
add
sub
add
pop
sub
movs
cmp
cdq
dec
pop
add
sub
inc
push
pop
or
aas
ret
or
push
or
sub
pop
call
clc
adc
and
pop
aas
inc
pusha
adc
mov
push
and
(bad)
pop
std
jg
xchg
dec
inc
imul
pop
jg
pop
jb
les
sbb
inc
dec
(bad)
gs
popf
or
mov
test
cwde
js
and
cmc
adc
cmp
test
fsubr
jmp
out
or
(bad)
cld
lahf
cs
cli
das
dec
push
retf
sbb
stos
nop
sub
ss
mov
aas
or
adc
or
inc
adc
out
and
enter
rcl
push
add
mov
lods
je
xchg
cmps
jp
inc
pop
xchg
mov
pop
mov
fwait
mov
cs
test
or
mov
(bad)
in
and
jmp
jge
pop
or
jb
push
imul
push
ret
add
cmp
test
pop
mov
and
xor
stos
adc
jnp
sbb
push
enter
test
popa
sub
imul
mov
lds
popa
daa
or
test
mov
frstor
pop
dec
dec
or
push
pop
mov
int
adc
test
xchg
fnstsw
sbb
mov
inc
or
and
lahf
inc
je
pusha
dec
scas
je
sahf
pushf
in
sbb
inc
xor
add
jmp
cld
lods
push
not
push
nop
(bad)
addr16
mov
loope
in
xor
test
movaps
fstp
inc
dec
call
xchg
test
sbb
sub
or
inc
rcl
mov
and
or
sub
inc
es
add
or
jns
pop
movs
movs
and
dec
movs
nop
fcmovb
add
sub
or
std
push
dec
movs
rcl
xchg
adc
add
xor
add
sbb
cmp
and
add
pop
jl
pop
in
jo
add
js
pop
stos
aam
cmps
and
cmp
or
mov
adc
js
test
inc
sbb
shl
js
int3
pop
sbb
fiadd
xchg
add
mov
cld
shr
adc
fwait
push
sub
cmps
movs
mov
xor
push
sbb
jmp
push
sbb
aas
in
and
out
push
add
fisttp
fs
imul
adc
lea
cmps
lock
and
and
repz
mov
cmp
adc
mov
push
add
ror
sbb
xor
cwde
xor
mov
add
dec
push
mov
and
adc
fcomp
cmp
sub
test
loop
add
or
dec
mov
sbb
mov
shr
push
std
ss
adc
in
dec
adc
sub
test
out
cmps
ret
sub
(bad)
sbb
sbb
xor
push
xchg
push
cmps
movs
xchg
adc
aad
sbb
or
sbb
adc
fist
adc
mov
aas
ja
xor
pop
push
mov
or
ins
imul
sbb
adc
scas
and
and
call
hlt
ins
mov
or
add
dec
test
cmp
je
sub
stc
sti
pop
xchg
and
push
pop
push
lods
std
movs
or
imul
iret
sbb
lock
lods
test
imul
push
sbb
aas
xor
test
test
clc
inc
push
daa
clc
xchg
push
lods
xchg
arpl
sub
and
sbb
jno
shl
mov
push
ret
pop
cdq
aaa
lahf
mov
in
jg
gs
sub
in
push
sub
pop
xor
and
fst
or
das
pop
cmp
and
test
push
inc
add
dec
jbe
ss
add
push
aam
jmp
push
mov
daa
dec
pop
add
fmul
leave
lock
lds
std
dec
imul
push
xor
ror
ins
mov
sub
add
pop
add
or
push
and
mov
jo
lss
cmps
and
mov
pushf
mov
pop
add
add
test
jb
sbb
and
mov
or
add
loope
shl
and
jl
stos
int3
fst
mov
add
shl
mov
adc
iret
stos
pop
or
pop
cmp
mov
mov
push
enter
push
test
mov
enter
fbstp
or
inc
add
add
test
repnz
imul
mov
(bad)
push
jbe
cmp
ret
or
addr16
push
add
or
int3
mov
lds
bound
xchg
add
in
jg
les
fisttp
call
or
xchg
pop
dec
icebp
adc
adc
sbb
dec
xor
shl
in
in
cmp
dec
jp
sbb
lods
shr
xor
add
ss
xor
lahf
sub
dec
pop
push
fadd
sbb
adc
jb
dec
mov
and
out
daa
dec
pop
xchg
or
or
add
outs
dec
mov
dec
push
cld
push
imul
movs
out
xor
push
out
xor
fistp
and
jns
jecxz
pop
or
xor
shl
fisub
pop
stc
jne
push
ins
cmps
and
ret
push
out
add
or
ja
sub
mov
cmc
ret
jb
mov
cmp
out
cmps
fdiv
lea
fs
push
adc
punpckhbw
sbb
xor
repz
inc
sbb
call
xor
xlat
dec
cdq
pop
mov
test
push
jmp
mov
aas
lds
mov
mov
mov
mov
inc
add
ror
movs
les
sbb
pop
push
dec
aas
leave
adc
jle
cmp
pop
xchg
pop
and
je
pop
leave
inc
jb
enter
pop
and
cmp
and
popa
adc
mov
(bad)
call
in
push
inc
or
pop
dec
ret
cmp
mov
pop
(bad)
loop
mov
mov
mov
in
and
aas
loopne
mov
adc
ins
pop
xchg
adc
int3
ret
clc
inc
fld
jmp
jo
sti
or
sub
or
adc
xor
or
pop
mov
add
push
adc
dec
xchg
rol
xor
xchg
or
sub
push
xor
loop
mov
xchg
pop
adc
sbb
sub
xor
mov
mov
outs
mov
daa
and
out
add
mov
jne
fld
cmp
fisttp
movs
test
nop
std
push
and
add
and
jns
and
push
mov
je
pop
mov
mov
add
mov
and
pop
xchg
mov
sbb
dec
scas
jne
sahf
movs
sti
ret
and
and
cli
mov
lock
push
or
or
mov
mov
mov
cs
loopne
push
xor
cdq
enter
jbe
mov
and
adc
xchg
or
or
or
xchg
cdq
popa
pop
cmp
ins
fsub
ins
mov
add
xor
adc
push
push
inc
imul
pop
sub
stc
ds
hlt
popa
adc
js
pop
or
ins
ins
push
push
xchg
sbb
and
xchg
xor
inc
or
jb
(bad)
push
inc
loopne
lods
adc
ret
xor
and
imul
arpl
push
add
dec
jge
mov
add
mov
imul
cmp
lgdtd
popa
ret
mov
adc
and
mov
add
mov
ret
jl
jo
adc
addr16
inc
ja
adc
mov
push
lock
dec
rcr
dec
pop
mov
push
dec
dec
cmp
add
add
ss
mov
lea
xor
and
sbb
mov
in
and
cmp
add
pop
cmp
dec
add
retf
jl
or
or
and
adc
and
neg
mov
adc
mov
or
outs
cmp
inc
pop
mov
pop
sub
pushf
movs
in
mov
mov
push
enter
arpl
test
xchg
or
xchg
push
xchg
add
jbe
retf
push
aam
out
adc
cmp
push
pop
enter
add
(bad)
jmp
xchg
or
mov
adc
cmovp
xor
(bad)
bound
jg
pop
les
and
mov
xor
add
jmp
outs
ins
repz
lock
lahf
mov
or
pop
jb
mov
jmp
inc
dec
pop
cmp
(bad)
outs
push
pop
pop
add
sbb
jnp
aad
dec
sahf
inc
jno
adc
mov
push
add
fmul
in
and
xor
add
or
mov
repnz
mov
inc
adc
jp
cmp
sub
ror
hlt
rol
lods
mov
xor
add
add
test
inc
stos
push
cmp
imul
scas
cmp
add
hlt
mov
cdq
mov
(bad)
hlt
cwde
mov
jg
add
push
add
ror
movs
push
xor
add
sub
retf
and
push
cmp
cld
enter
add
sub
push
ret
cld
stos
push
mov
scas
nop
pop
pop
dec
dec
pop
pop
fwait
ins
rol
jo
mov
aaa
sbb
adc
jg
pop
clc
adc
add
imul
adc
push
sbb
push
jo
push
in
xor
leave
in
js
pop
or
push
fs
dec
dec
cmp
mov
push
xchg
adc
jns
loopne
aas
mov
cdq
add
mov
jns
aas
cdq
mov
add
nop
call
or
dec
xchg
sbb
cmp
sub
push
sbb
pusha
es
add
pop
add
ret
cwde
test
inc
dec
and
enter
imul
push
inc
in
adc
loopne
mov
or
or
ins
dec
icebp
js
loope
pop
xchg
xor
mov
hlt
mov
lods
pop
sub
dec
dec
add
xor
mov
add
movs
jae
dec
pop
and
lds
jmp
jb
jb
jp
mov
sub
sbb
fcmovnbe
xchg
imul
adc
add
stos
loope
icebp
inc
fstp
faddp
in
or
(bad)
sbb
add
dec
jns
xchg
dec
sbb
btr
mov
packsswb
mov
dec
es
push
mov
push
popa
or
and
in
into
add
fidiv
sub
sbb
add
or
mov
call
aad
adc
or
inc
mov
cmp
leave
pushf
out
add
imul
dec
test
or
pop
ins
sbb
add
jmp
sbb
sar
jbe
(bad)
daa
add
jge
mov
xlat
(bad)
sbb
dec
loop
or
inc
dec
shl
adc
xor
les
dec
mov
cmp
xor
inc
dec
add
popa
mov
(bad)
mov
pusha
int3
mov
or
gs
inc
(bad)
movs
lods
pop
stc
pop
xor
fisttp
cld
inc
jno
ror
mov
inc
add
pop
lahf
and
sub
(bad)
in
add
inc
lods
adc
outs
mov
xor
mov
ret
fs
shl
sub
enter
adc
sub
jl
sub
pusha
lods
add
(bad)
in
std
adc
mov
test
adc
add
mov
rcl
pop
cdq
mov
or
xor
jg
mov
ins
dec
and
cdq
inc
imul
mov
mov
pop
add
pusha
cmovo
push
sbb
jmp
jmp
or
leave
test
adc
adc
sahf
or
jmp
sbb
imul
add
imul
push
lock
in
sub
add
fadd
(bad)
mov
(bad)
call
and
dec
mul
push
sub
or
mov
nop
or
mov
pop
push
jmp
mov
sub
adc
dec
mov
push
or
stos
push
int
adc
mov
ins
fwait
sbb
mov
jb
mov
mov
sbb
ja
sbb
or
mov
test
push
inc
and
hlt
jmp
popa
fcomp
pop
pusha
add
xor
cs
fs
jno
inc
or
or
movs
sbb
lea
rol
cmp
cmp
inc
or
test
loopne
jbe
test
push
in
add
dec
push
or
adc
xchg
neg
sub
je
hlt
sbb
jmp
add
aam
clc
stc
or
movs
or
js
sub
mov
push
add
out
repz
lock
js
into
ins
iret
adc
sbb
add
nop
add
ja
add
arpl
adc
push
jb
push
daa
add
or
sub
mov
dec
or
xchg
add
and
aas
pop
ins
add
pop
or
sbb
out
push
mov
adc
jmp
xor
repnz
in
outs
addr16
mov
push
push
fcomp
dec
inc
cmp
ss
das
or
inc
outs
movs
sbb
or
not
call
push
sahf
out
sahf
xchg
mov
jns
out
rcr
out
cli
repz
mov
add
sbb
sub
repz
ss
dec
push
pop
push
jb
xchg
rep
scas
mov
cmp
(bad)
loopne
hlt
dec
sahf
out
sahf
or
sbb
xor
jns
out
inc
dec
pop
bound
sahf
out
or
sahf
test
mov
sahf
out
in
cmc
cld
into
add
cmp
repz
sbb
es
cmp
sub
dec
mov
test
popa
dec
add
pop
push
xchg
add
mov
idiv
aas
mov
adc
adc
sbb
dec
sbb
add
xchg
(bad)
dec
and
and
and
sub
dec
sub
sub
das
xor
ficomp
leave
xor
xor
xor
ss
cmp
stc
jge
cmp
dec
cmp
ds
adc
inc
or
dec
inc
inc
add
lahf
inc
dec
inc
lds
dec
icebp
cmp
fistp
push
push
push
pop
ins
and
sbb
rol
jbe
add
mov
ss
ror
les
addr16
clc
aam
xor
daa
cmp
shr
hlt
jnp
imul
jmp
jbe
xchg
xchg
push
add
rcl
xchg
icebp
add
in
loop
sbb
test
xchg
mov
dec
outs
or
rol
add
add
lahf
aam
mov
setbe
mov
arpl
jo
cmp
push
or
daa
or
inc
and
pop
push
cdq
or
cdq
mov
mov
mov
mov
dec
mov
pushf
jno
xchg
pusha
ror
dec
add
ins
adc
xchg
aas
popa
push
(bad)
sbb
inc
lods
push
(bad)
je
cmp
sbb
stos
inc
mov
dec
or
fwait
sbb
sub
inc
loope
test
jns
inc
jecxz
test
xchg
sub
or
pop
xchg
or
das
push
ja
dec
push
xchg
fadd
jne
push
aas
and
mov
fcomp
adc
fs
dec
cmp
dec
xchg
adc
sbb
jb
pop
or
outs
or
dec
add
adc
rol
push
arpl
test
int
push
retf
inc
movs
and
out
test
and
mov
int
ffreep
fidiv
lea
test
adc
jae
mov
jns
ror
imul
sbb
iret
add
rcl
sbb
mov
or
call
adc
popa
mov
or
jecxz
fcom
add
push
mov
xor
sub
mov
xchg
inc
sar
xor
retf
xor
jl
fxch
das
xchg
test
rcl
test
cmp
stc
pop
sbb
fs
and
xor
call
or
pop
retf
xchg
mov
mov
pop
jecxz
ficom
cmps
movs
bound
test
jecxz
dec
les
cmc
mov
outs
dec
or
loope
sub
aam
bound
xor
mov
xor
mov
xor
fwait
jmp
test
ret
xchg
push
push
leave
stos
xchg
call
mov
pop
or
sbb
add
in
inc
dec
dec
rcr
dec
test
jmp
nop
add
cdq
dec
je
jge
jnp
test
into
pop
movaps
sub
fistp
dec
inc
add
and
fisubr
arpl
cmc
dec
aaa
sub
push
inc
inc
sub
out
mov
retf
or
inc
xor
jns
nop
or
adc
adc
movs
and
push
rol
rol
lock
bound
lods
clc
push
mov
jmp
retf
cmp
mov
cmp
cdq
inc
add
push
inc
cmp
inc
je
xchg
pop
xor
fimul
pop
mov
std
arpl
sub
adc
stc
xchg
scas
aaa
xor
xor
push
cmp
cmps
sbb
and
xchg
inc
cs
and
and
xor
test
gs
cmp
clc
repnz
sbb
or
add
mov
pop
xor
fdiv
fstp
inc
pop
jno
dec
js
stos
jmp
(bad)
pop
stc
and
es
mov
mov
das
jge
mov
clc
jne
aad
or
dec
mov
mov
mov
and
pusha
xor
fstp
xchg
popf
and
lock
(bad)
jno
ret
fs
cmp
je
mov
and
or
add
jecxz
rcr
jge
in
inc
pop
inc
call
jo
stos
std
sub
test
cli
xchg
add
cmp
xor
adc
or
stc
sub
leave
cmp
sbb
xor
jne
adc
dec
mov
movs
or
add
or
shl
dec
push
inc
push
mov
sbb
les
repnz
mov
jns
add
rcl
or
push
cli
cmp
pop
je
push
je
adc
rcr
dec
push
js
dec
or
sbb
mov
xchg
jle
daa
retf
fmulp
div
mov
or
mov
stos
push
jne
mov
xchg
movs
pop
jne
pop
ins
xor
jmp
popa
cmp
sbb
cdq
cmp
mov
sti
dec
adc
add
cwde
push
pop
ret
lahf
popf
push
jge
loopne
(bad)
in
cld
jne
and
push
fdivr
jb
aam
sbb
pop
adc
push
aaa
and
pusha
xchg
cmp
imul
loope
or
inc
loopne
inc
jnp
add
or
fs
lahf
pop
pushf
callw
adc
inc
and
stos
push
adc
fbld
add
mov
pop
movs
sub
shl
bound
add
dec
inc
sub
push
add
sub
lahf
jne
xchg
loope
mov
or
cdq
xchg
push
sub
dec
jmp
dec
es
fcmovnu
bound
and
jmp
nop
xchg
push
mov
bound
nop
imul
ror
outs
jae
or
imul
cwde
adc
clc
xchg
inc
mov
rcl
jle
aam
sub
and
jecxz
ss
sub
ja
scas
cmp
or
pop
and
loop
mov
pop
jno
fidiv
adc
sub
(bad)
and
gs
adc
dec
mov
xchg
sahf
jle
mov
add
and
(bad)
sub
jnp
jo
inc
cs
inc
sbb
adc
dec
test
pop
pop
or
pop
and
(bad)
leave
in
clc
dec
clc
adc
mov
jecxz
adc
push
push
and
fsub
dec
adc
fwait
(bad)
or
scas
rol
xor
mov
dec
scas
xchg
or
push
jl
jae
cdq
xchg
xor
jno
pusha
aaa
adc
call
inc
fldenv
cmp
out
lods
jecxz
add
sbb
mov
sub
add
fbstp
xchg
pop
dec
jnp
cld
add
and
sbb
ret
jmp
pop
sbb
inc
mov
or
and
and
out
fsubr
push
xor
subps
cmps
jne
push
retf
add
inc
fs
psubsb
enter
fdiv
add
xchg
mov
jmp
fisttp
cmp
lea
jmp
xchg
pop
mov
iret
sub
or
mov
sbb
sbb
mov
pop
jb
movs
mov
sub
pop
jae
inc
mov
and
mov
sbb
fild
das
push
rol
sbb
adc
mov
ja
mov
sub
call
pop
lea
je
shr
mov
aas
xlat
out
sbb
lods
fsubr
mov
xchg
in
in
es
push
call
lahf
jbe
pop
fild
fs
enter
add
repnz
jge
and
cmp
cmp
push
pop
cmp
(bad)
push
and
push
test
pop
ss
jnp
push
ds
mov
push
cmps
xchg
pop
sub
repz
adc
adc
es
dec
pcmpeqd
popa
mov
pop
inc
call
fistp
ins
dec
and
push
xor
mov
or
repnz
or
ins
rol
or
out
mov
enter
test
imul
add
pop
ret
inc
cmps
and
fs
rcl
jae
fwait
or
adc
xor
scas
inc
cmovge
push
data16
or
sub
jge
pop
xor
add
xchg
xchg
leave
and
bound
or
add
pop
ror
out
adc
ins
or
in
retf
push
enter
idiv
test
sub
add
add
cwde
inc
push
sub
ds
and
adc
xchg
xor
cmps
xchg
aaa
cmp
ja
push
rcr
mov
jp
jmp
push
cmp
adc
add
xchg
or
lahf
out
in
push
sbb
adc
sub
shr
fldcw
xor
scas
cmps
push
push
int3
mov
jns
stc
or
shr
push
mov
add
daa
mov
pop
push
shl
cs
loopne
mov
adc
mov
mov
(bad)
int
add
fdiv
rol
mov
ret
or
fild
push
ss
jmp
pop
add
or
cmps
ficom
shl
xchg
adc
(bad)
or
jns
test
jnp
mov
icebp
sbb
cmp
jmp
jl
mov
test
add
mov
adc
mov
add
cmp
inc
imul
mov
or
mov
hlt
clc
lods
mov
retf
lods
pop
cmp
push
test
mov
(bad)
fwait
out
sub
movs
lea
add
mov
jl
mov
arpl
int
and
test
inc
cmp
nop
frstpm(287
sub
mov
cwde
inc
call
addr16
mov
sar
xchg
or
ins
xor
arpl
pop
pushf
rcr
xchg
stos
clc
xor
pop
push
push
gs
mov
jmp
gs
push
call
or
sbb
xchg
nop
add
dec
cli
sub
nop
add
xchg
push
inc
nop
or
aaa
inc
cmp
popf
or
mov
jge
jl
mov
shr
loopne
stos
adc
mov
dec
test
sub
(bad)
adc
mov
mov
in
(bad)
xchg
push
push
adc
test
sbb
add
or
xor
jae
ret
hlt
xchg
jecxz
rcr
test
ja
sbb
arpl
pop
les
cdq
add
cmc
mov
inc
cwde
jne
mov
ror
outs
mov
aaa
jmp
pop
and
adc
mov
ja
mov
out
mov
sub
jmp
test
mov
xor
adc
mov
or
jge
pusha
or
outs
int3
push
mov
(bad)
fld
mov
pop
ror
adc
push
loope
adc
int3
sub
sbb
and
dec
cmp
jne
or
dec
inc
xor
sbb
and
or
dec
pusha
stc
pushf
and
pop
sbb
and
add
mov
aas
or
dec
mov
add
sbb
or
and
or
push
sahf
sub
rcl
gs
popf
inc
imul
and
or
push
pusha
popa
pop
inc
push
adc
xchg
adc
sbb
or
int
mov
jnp
scas
fdivr
pop
mov
xor
inc
sub
sbb
addr16
sbb
jbe
test
mov
popf
inc
fsub
sbb
and
push
ja
add
sub
std
mov
jmp
and
movs
xlat
pop
scas
fld
lods
loop
and
pusha
xchg
push
popa
xchg
fistp
sbb
mov
mov
in
hlt
mov
lahf
push
repz
sbb
leave
pop
add
bound
or
les
test
sbb
add
or
sbb
add
jae
and
rcl
cmc
popa
adc
lock
cld
lock
jb
jae
pop
fild
std
std
push
sbb
adc
shr
jge
and
(bad)
dec
mov
xor
sbb
call
jmp
xchg
xchg
xchg
ss
enter
scas
unpcklps
dec
sbb
rcr
retf
cli
mov
cmp
push
pop
and
adc
hlt
je
xor
shrd
jne
ret
and
push
adc
dec
cmp
mov
fs
dec
sbb
push
jne
aas
fnstsw
dec
dec
ds
add
sbb
jecxz
add
or
sub
movs
push
(bad)
fdiv
and
call
push
sbb
int
adc
cld
jmp
les
jo
ret
stc
rcl
imul
mov
mov
mov
inc
or
inc
out
jo
fs
sti
clc
lahf
int
dec
push
add
and
add
cdq
(bad)
jb
test
xchg
push
mov
or
pop
ja
add
adc
lahf
popa
adc
ins
ins
jmp
(bad)
jmp
mov
das
add
pop
adc
adc
sub
nop
bound
pusha
(bad)
or
les
or
cld
jle
mov
adc
jl
adc
add
jp
sub
or
gs
sbb
lea
lods
or
in
aas
(bad)
pop
add
aam
jg
add
ffreep
xchg
lock
push
call
retf
ja
add
xchg
xchg
xor
test
sub
mov
cmp
add
adc
xor
push
or
and
and
cdq
fistp
cmps
lods
inc
add
pop
inc
xor
inc
inc
ja
mov
aas
and
or
test
add
push
retf
xchg
push
jne
inc
and
or
xlat
frstor
or
sub
push
nop
popa
adc
bound
inc
jne
arpl
cld
cld
xor
jmp
pop
dec
ja
shr
jne
jnp
movs
imul
addr16
dec
scas
lea
adc
jne
arpl
cmp
jb
and
ins
inc
dec
xor
inc
rcl
lock
add
xchg
ins
imul
pop
or
cmp
dec
jmp
sub
xchg
mov
add
ret
or
add
and
sbb
(bad)
push
loopne
or
fst
ss
shr
add
cwde
loop
jb
cmp
movs
pop
jmp
sub
pusha
xchg
mov
mov
push
repnz
les
or
adc
test
adc
xchg
xchg
mov
stos
pop
out
fsubr
sbb
cdq
cmps
sbb
outs
push
xchg
inc
test
sub
mov
pop
xor
inc
cs
xor
cmp
ror
push
or
ret
mov
inc
bound
sbb
push
arpl
mov
add
movs
fidiv
or
test
mov
cmp
add
cmp
pop
or
pop
inc
sbb
pop
stos
js
push
dec
or
and
in
inc
xchg
ret
(bad)
cmp
and
jns
imul
sbb
lea
cmp
ins
push
jbe
rol
neg
push
jecxz
test
xchg
cld
sub
inc
adc
and
cmps
inc
mov
hlt
test
adc
jmp
and
rol
mov
cld
aaa
adc
cmps
outs
inc
js
cdq
xchg
and
fidiv
hlt
mov
push
cs
aas
dec
mov
push
jo
test
call
pusha
adc
add
lea
stos
lahf
fwait
add
retf
mov
xchg
dec
mov
lahf
fcom
jb
or
push
mov
cmp
mov
adc
cmps
and
mov
xchg
push
mov
add
sub
imul
(bad)
inc
pusha
sbb
cs
mov
test
std
mov
mov
sub
sub
ins
(bad)
cmp
call
or
or
cwde
fisub
jb
mov
mov
inc
inc
aas
push
test
rcr
push
push
add
mov
clc
ret
add
cmc
adc
loope
rol
jnp
in
xor
pop
fucomip
push
lods
inc
outs
adc
dec
and
or
mov
addr16
hlt
inc
push
imul
add
outs
xchg
jbe
les
inc
or
sbb
(bad)
(bad)
stc
sub
push
and
dec
or
test
push
iret
rcl
and
movs
fwait
nop
int
mov
push
sub
test
sub
pop
mov
adc
dec
or
cmp
add
loope
mov
es
bound
inc
jmp
and
movs
and
mov
dec
pop
pop
pop
or
pusha
movs
push
rcl
and
pop
dec
hlt
rcr
and
stos
mov
xchg
out
fist
stc
push
shl
movs
sub
xor
xor
ins
jp
push
int3
mov
pop
push
lods
fs
inc
pusha
jg
adc
rol
or
into
and
clc
je
adc
jl
push
mov
lea
push
mov
shl
lods
mov
add
aas
gs
outs
add
push
sub
sbb
dec
mov
cmc
sbb
add
and
out
xor
adc
mov
mov
xchg
cmp
push
test
or
xchg
pop
test
sub
add
push
jno
movs
rol
hlt
push
and
enter
or
or
jno
mov
(bad)
jg
bound
pop
or
mov
adc
outs
adc
push
push
push
data16
push
pop
nop
dec
or
pop
hlt
daa
xor
lahf
mov
and
jmp
sbb
(bad)
mov
mov
adc
out
push
repnz
sub
sub
aaa
cmp
aam
(bad)
aam
sar
mov
jns
dec
push
mov
sub
sbb
or
dec
pop
xor
xlat
lds
inc
mov
nop
or
pop
push
iret
nop
nop
data16
setae
pop
jnp
or
je
dec
add
pop
ret
push
leave
ret
(bad)
stos
and
test
or
xchg
adc
cld
movs
lea
push
movlhps
sar
mov
push
inc
fdiv
mov
dec
or
in
pop
sbb
or
in
imul
sbb
or
adc
mov
xor
add
add
push
bound
nop
ja
jnp
(bad)
or
ins
cmps
pushf
cmp
jne
cmp
add
popa
sbb
(bad)
and
pop
imul
cli
ficom
adc
mov
push
jne
jge
or
cmp
loopne
push
xor
scas
sub
dec
jecxz
pop
repnz
push
and
mov
sar
jo
fbld
lock
dec
add
dec
mov
inc
loopne
fbstp
fdiv
pusha
pop
xchg
mov
dec
(bad)
sbb
mov
dec
aaa
fsub
or
cli
or
push
sbb
in
add
nop
xor
in
dec
adc
shr
test
std
cmp
or
js
fild
cmps
(bad)
lods
(bad)
push
push
loope
cmp
ja
rcl
mov
arpl
xchg
xchg
xchg
iret
adc
into
add
inc
js
xor
adc
not
adc
and
and
dec
or
or
rol
fdiv
xor
xor
call
nop
dec
aam
pop
add
call
jg
xor
mov
cmp
or
push
add
push
inc
stc
in
fiadd
or
or
loopne
aas
cmp
xor
adc
lahf
shr
push
ins
push
test
and
adc
ret
inc
pop
sbb
pop
(bad)
in
in
in
xchg
or
sbb
push
pop
inc
ja
outs
pop
loopne
adc
or
aam
aam
shl
mov
jne
mov
cmp
and
loope
or
pop
xor
inc
and
pop
inc
mov
push
mov
call
fwait
loopne
jbe
mov
imul
inc
aam
push
retf
or
movs
mov
inc
xchg
fild
repnz
dec
adc
push
or
stos
fcomip
pop
jb
or
lock
jp
(bad)
cs
enter
add
enter
out
(bad)
ins
inc
jmp
(bad)
(bad)
lock
sbb
jmp
adc
outs
jmp
call
scas
out
adc
push
push
leave
pop
jmp
jmp
test
jb
pop
xchg
add
sbb
cmp
inc
js
cmp
sahf
pop
and
pop
pop
mov
mov
inc
jne
sub
loopne
add
outs
push
sti
(bad)
das
popa
and
cld
mov
pop
push
sub
add
inc
test
(bad)
stc
push
inc
add
xor
ror
shl
add
fwait
cmp
add
call
cdq
inc
lock
push
pop
pop
in
push
les
pop
pop
ror
bound
xor
lahf
scas
icebp
sbb
into
xchg
jne
or
fisttp
or
inc
inc
fbstp
adc
adc
jecxz
sbb
cmp
mov
push
pop
and
test
lods
lods
sbb
inc
popf
jmp
jg
inc
sub
lahf
mov
adc
lds
sub
imul
sub
inc
xchg
shr
ss
jg
je
cwde
inc
push
imul
movs
add
push
frstor
or
adc
lea
sbb
sub
and
(bad)
and
jae
mov
cdq
clc
sbb
pop
cld
cs
inc
inc
push
mov
dec
add
xor
in
mov
inc
lods
mov
pop
sub
and
movs
xchg
inc
dec
push
mov
push
ffreep
fdivr
pop
add
push
aas
push
leave
push
or
mov
fistp
push
sub
stos
outs
ffreep
sbb
or
dec
dec
push
fsub
and
je
add
aas
inc
and
retf
add
pushf
addr16
aas
clc
or
leave
lods
ss
pop
adc
add
nop
sbb
add
inc
outs
push
pop
les
jne
sub
es
inc
loopne
cmp
popf
lods
sub
mov
ins
movs
fbld
xor
push
ror
lahf
jne
inc
xchg
push
fucomip
dec
aaa
xchg
xor
mov
add
mov
push
rol
stos
xor
add
leave
clc
cmps
lods
imul
push
or
inc
cdq
and
nop
popf
or
xor
add
push
ficom
dec
add
jo
das
pop
mov
aam
sbb
add
retf
pop
or
sub
xchg
push
jg
das
adc
imul
sar
retf
mov
cdq
les
movs
add
dec
ins
test
lods
in
mov
push
add
dec
push
cs
sub
lods
and
(bad)
rcr
cmp
jge
dec
cmp
adc
sub
mov
fisubr
mov
enter
adc
dec
pusha
les
arpl
sub
pop
cmps
hlt
and
in
cdq
daa
adc
retf
out
inc
arpl
repnz
fcom
mov
and
mov
pop
sbb
cmp
dec
lds
xor
add
mov
call
sub
and
and
and
rcl
and
dec
pop
loopne
cmp
and
adc
or
sub
outs
test
sub
inc
fstp
add
add
imul
ins
inc
jae
xchg
xchg
sub
(bad)
cmp
test
inc
inc
sub
or
nop
icebp
imul
dec
pop
(bad)
push
pop
in
xchg
add
rcl
xchg
cmp
pop
sub
rol
rcl
(bad)
push
fcom
aaa
hlt
xor
pop
xchg
test
pushf
push
nop
and
in
es
and
mov
dec
adc
fld
in
sub
or
into
test
data16
not
adc
mov
adc
add
ror
je
adc
mov
push
xor
je
icebp
push
shr
inc
push
or
inc
popa
xchg
aam
sbb
lds
test
pop
push
dec
(bad)
jbe
adc
adc
lods
sub
pushf
jmp
adc
pop
lods
fwait
xchg
or
jb
aad
dec
inc
sbb
out
xor
dec
cmp
dec
dec
leave
shl
jne
lods
icebp
pop
inc
pop
bound
call
fcom
cdq
inc
inc
inc
dec
rol
movs
shr
inc
mov
movs
(bad)
ins
imul
push
sub
inc
mov
ins
cdq
add
or
cwde
ret
add
cwde
or
out
imul
push
and
push
push
pop
fisttp
aaa
adc
mov
sbb
jmp
pop
fadd
cwde
add
sbb
push
mov
mov
test
mov
aaa
jmp
or
pop
jecxz
ficomp
xor
inc
popf
fadd
mov
addr16
cmp
add
mov
xchg
sbb
das
mov
push
nop
adc
xchg
mov
sub
cmp
xor
ss
test
in
adc
jnp
(bad)
inc
(bad)
(bad)
(bad)
and
adc
outs
call
xor
test
xor
cli
adc
xchg
and
lock
add
mov
and
repnz
mov
sbb
xchg
pop
ror
mov
rcl
pop
mov
mov
ret
addr16
add
jmp
xor
pop
jge
movs
adc
mov
sar
gs
call
cmc
mov
cmp
mov
inc
xor
ret
or
(bad)
cli
xor
repz
xor
pop
sbb
jmp
mov
jo
adc
and
je
std
sbb
sub
add
mov
push
aas
add
xor
ds
pop
xor
inc
(bad)
jg
or
inc
sub
and
pop
sub
push
push
popa
and
pop
mov
jg
outs
sub
dec
cmovo
mov
xchg
in
hlt
inc
xchg
ret
xlat
ins
xor
inc
and
fsubr
or
adc
adc
cmp
add
sbb
test
(bad)
lahf
dec
dec
dec
xchg
jmp
loopne
in
sub
and
push
arpl
lods
cmc
outs
or
xchg
movs
add
pop
or
sbb
dec
je
adc
mov
mov
pop
inc
or
pop
jns
ss
popa
xor
icebp
dec
ja
(bad)
push
xchg
mov
xor
xor
pop
sbb
stos
add
sbb
jbe
mov
cdq
mov
xor
(bad)
bnd
cmp
cdq
ss
and
add
hlt
adc
or
dec
mov
iret
adc
js
xor
mov
dec
lahf
jl
jae
aad
in
int3
fwait
push
repnz
cmp
mov
pushf
dec
ficomp
or
push
pop
in
xchg
aam
push
sbb
sbb
mov
push
xchg
adc
cs
ret
cmps
call
les
add
adc
or
or
inc
retf
ret
data16
sbb
push
dec
lods
mov
adc
mov
dec
imul
push
inc
hlt
(bad)
dec
adc
xchg
mov
loop
ret
adc
xchg
adc
xchg
inc
pop
sbb
inc
push
adc
adc
push
or
lods
call
xchg
dec
es
into
fsub
(bad)
and
in
inc
out
stos
or
hlt
cs
sub
cmp
push
cmpps
popa
daa
add
test
pop
fneni(8087
cld
xor
mov
imul
cs
inc
cmc
push
inc
or
ret
mov
xor
jmp
ss
or
das
inc
fld
out
xchg
lods
in
jg
inc
fsub
xchg
mov
push
loopne
xchg
mov
hlt
cmp
pop
in
hlt
hlt
hlt
mov
loop
mov
movs
sub
leave
fs
dec
sub
ins
outs
leave
aad
call
sub
jne
pop
adc
or
addr16
dec
xchg
clc
cld
in
leave
sar
rol
ret
ret
xor
mov
or
or
ins
and
mov
(bad)
xchg
xor
sbb
out
dec
or
in
(bad)
aam
dec
inc
or
rol
add
push
(bad)
sahf
hlt
hlt
(bad)
rcl
inc
mov
add
push
mov
jg
cmp
popf
xchg
or
cmp
jg
xchg
ins
pop
mov
jmp
jno
pop
mov
mov
mov
pop
jno
jg
sub
repnz
mov
sar
or
adc
xchg
xor
xor
loop
movs
ret
aad
cmp
loope
shl
add
xchg
sub
push
add
or
add
add
add
and
or
and
inc
and
push
xor
ret
nop
sbb
jns
ss
jbe
xchg
call
cld
jmp
ret
lds
push
dec
and
test
pushf
mov
or
ins
add
inc
add
sub
scas
in
or
js
pop
or
inc
scas
xchg
stos
push
cmp
or
movs
in
mov
stos
lea
lods
jne
jmp
push
les
and
sub
sbb
cmp
cmp
jecxz
and
add
add
lea
adc
jmp
(bad)
cmp
jo
pop
enter
fiadd
push
sahf
inc
popa
or
xor
push
or
stc
mov
pop
sar
pop
and
cmp
jns
or
mov
mov
and
sub
xchg
retf
or
sbb
cmp
sbb
sbb
mov
in
cmp
inc
lahf
sbb
test
xchg
inc
push
sbb
add
lock
repnz
add
repz
mov
mov
cld
pop
lds
sub
xor
fsub
push
cdq
inc
pop
(bad)
inc
xor
nop
fadd
jecxz
xor
adc
mov
fcmovnbe
or
dec
outs
or
mov
xor
ds
pushf
sbb
(bad)
fsubr
aas
cmp
ins
movs
idiv
and
(bad)
cmp
test
or
sbb
add
xor
inc
mov
push
(bad)
adc
inc
jmp
mov
aam
mov
les
push
sar
popa
and
test
cmp
daa
ret
loopne
ja
hlt
loop
cwde
sbb
hlt
jecxz
push
movs
sub
fst
xchg
xor
hlt
jmp
dec
aaa
je
imul
push
jle
lock
and
mov
push
hlt
or
das
mov
ss
sbb
aaa
jl
pusha
add
jle
loope
leave
loopne
dec
jno
add
inc
sbb
mov
add
jle
xlat
movs
call
push
call
jmp
call
jne
test
jg
xlat
push
dec
icebp
xchg
adc
popf
arpl
pop
mov
pop
cld
sub
pop
imul
in
sbb
cdq
lods
call
call
loopne
and
cmp
pop
dec
push
paddsw
jno
push
fild
call
call
pop
cmp
mov
add
jmp
sub
sub
push
sub
into
fcom
push
outs
jge
outs
mov
mov
inc
jbe
push
lahf
cdq
jno
dec
mov
pop
pop
push
popa
push
enter
inc
push
jb
lahf
ds
cmp
add
fbld
pop
add
dec
inc
cld
cmp
adc
pusha
lds
xchg
xchg
pop
dec
imul
xchg
pusha
shl
cs
pop
fnsave
fild
fs
xchg
loopne
xchg
fst
dec
pop
dec
xchg
leave
imul
shl
dec
ret
pop
ins
xchg
es
inc
outs
clc
fimul
adc
or
add
hlt
mov
sub
add
add
rol
dec
in
jecxz
jo
or
inc
leave
adc
sbb
mov
xor
(bad)
loope
adc
popa
lock
cmp
dec
mov
js
in
or
dec
in
push
pushf
adc
sbb
jmp
retf
repz
dec
leavew
aas
adc
cli
add
jp
xchg
clc
repnz
mov
jbe
pop
mov
repnz
cmp
dec
pop
fbstp
push
add
nop
pusha
pusha
dec
inc
xchg
pop
and
pusha
es
xor
jecxz
pop
imul
ds
stos
fs
mov
sub
and
inc
jl
test
popa
or
mov
dec
ins
lds
repnz
test
mov
repnz
lds
inc
lds
add
xor
loope
in
pop
enter
mov
sub
push
mov
test
dec
mov
inc
es
jno
cld
cmp
xchg
test
clc
test
cdq
sub
dec
dec
mov
cs
jns
repnz
xchg
xchg
clc
push
rol
xor
inc
mov
rcl
pop
add
jl
cmps
pop
lock
xchg
cmp
lahf
and
ins
test
test
(bad)
mov
mov
mov
popa
mov
test
jno
xchg
mov
jg
in
sbb
scas
mov
nop
mov
cmp
enter
in
or
and
xor
in
pushf
(bad)
xor
xor
cmp
xor
jns
enter
pop
cmp
xchg
(bad)
xor
test
pop
xchg
mov
nop
xchg
dec
push
push
rol
xor
dec
or
and
pop
xchg
sbb
clc
adc
sbb
jl
sbb
fnsetpm(287
clc
cmp
mov
aaa
loopne
cmp
mov
dec
(bad)
sar
add
pop
sub
in
fdiv
adc
sbb
sub
jle
sub
bound
arpl
daa
fadd
add
xor
enter
(bad)
xor
inc
push
cmp
pop
popa
mov
jge
jbe
sbb
inc
aad
stos
mov
inc
mov
pop
mov
stos
test
cmps
leave
(bad)
aam
cwde
jg
cmps
and
ret
push
stos
mov
jb
pop
pop
and
outs
xchg
fbstp
imul
call
enter
push
fiadd
hlt
ret
and
cld
hlt
add
push
inc
or
clc
mov
nop
push
retf
add
pop
or
push
and
cmc
(bad)
sbb
dec
push
nop
clc
clc
rcr
adc
or
mov
sbb
or
clc
cmp
daa
and
(bad)
aam
pop
add
jb
jmp
dec
push
jp
adc
in
mov
in
in
jle
les
rcr
leave
mov
xor
ror
mov
pusha
sub
xor
jbe
xor
adc
ins
loopne
push
mov
adc
and
inc
jmp
or
or
ret
xor
shr
pusha
sub
nop
retf
mov
(bad)
lock
test
lock
xor
xchg
mov
mov
dec
ja
jmp
fisttp
scas
leave
pop
pop
mov
inc
pop
call
dec
loope
pop
or
jecxz
and
lock
(bad)
push
mov
(bad)
mov
adc
xchg
cmovne
pop
dec
adc
clc
add
mov
mov
xchg
push
clc
test
and
out
mov
ror
mov
sti
hlt
stos
hlt
sub
jmp
fmul
xor
mov
push
rcr
xchg
inc
loop
dec
scas
add
mov
pusha
cmps
ret
dec
pop
mov
cld
inc
aas
call
lea
fwait
bound
cmp
leave
adc
and
push
xor
add
imul
adc
jb
jae
jmp
mov
or
xor
lock
and
lods
addr16
and
jp
ss
movs
jne
mul
jmp
sbb
(bad)
ficom
sbb
in
adc
push
xchg
js
sub
xchg
popa
popf
mov
or
repnz
lock
pop
adc
inc
icebp
inc
xchg
ret
leave
shl
dec
adc
sub
mov
xor
and
mov
inc
sub
pop
ficom
jbe
outs
sbb
mov
push
mov
enter
clc
inc
enter
mov
pop
enter
push
and
clc
inc
push
add
clc
(bad)
xor
and
jb
sbb
popa
sub
add
popf
das
cmp
and
xchg
shr
aaa
and
mov
push
retf
inc
test
xor
xchg
jmp
push
mov
xchg
clc
js
imul
data16
push
jle
test
pop
lds
dec
in
jg
ret
clc
jecxz
ins
or
inc
cmp
imul
inc
inc
es
adc
adc
hlt
inc
mov
add
dec
push
cmp
leave
mov
add
xchg
inc
add
mov
cmps
cmpxchg8b
jle
pop
xchg
(bad)
test
mov
out
jmp
call
call
pop
and
dec
dec
jg
inc
push
push
or
shl
dec
xor
or
scas
dec
in
leave
call
fst
fisub
sbb
or
out
ficomp
mov
xor
(bad)
and
dec
xor
hlt
push
inc
push
xor
push
sbb
leave
enter
ins
clc
push
or
ins
dec
lahf
or
je
xor
push
nop
pop
in
in
jns
dec
and
or
shr
aam
sbb
inc
fist
and
loop
cmp
dec
ficom
ja
aas
fisttp
xchg
(bad)
imul
push
(bad)
dec
adc
pop
xchg
je
test
cwde
stos
lahf
lock
das
pop
pop
inc
cld
sbb
es
dec
les
loope
mov
int
sub
loope
add
and
lock
xchg
adc
adc
jb
sbb
jg
mov
call
call
xchg
adc
enter
movs
jb
ins
pop
test
call
call
ror
push
sub
in
ins
mov
sti
push
imul
inc
stos
dec
or
lahf
jle
les
cs
push
cs
inc
jmp
pop
mov
test
or
ss
cmps
cmp
jb
pop
pop
and
pop
outs
lods
jno
sar
dec
cld
aas
clc
mov
xor
mov
dec
inc
inc
add
push
pop
bound
(bad)
(bad)
pop
xor
icebp
inc
in
hlt
xor
add
sbb
inc
push
sub
or
inc
mov
popf
jmp
pusha
pop
pop
ins
push
sbb
xchg
lahf
icebp
and
mov
loop
push
push
inc
sbb
dec
scas
adc
sbb
(bad)
ja
ret
sar
lods
sub
daa
les
add
inc
mov
shr
xchg
shl
and
and
iret
(bad)
je
ja
cmp
jmp
jmp
loopne
pop
inc
mov
div
add
xor
xor
in
outs
in
adc
xor
mov
mov
dec
jmp
mov
inc
xchg
loopne
mov
jb
je
mov
fcmovne
and
jb
mov
popf
mov
xor
mov
mov
mov
test
dec
imul
jmp
mov
aam
lea
jb
adc
outs
mov
cmovb
leave
clc
mov
cs
mov
add
mov
sub
mov
or
call
int3
jmp
jmp
pop
pop
test
push
enter
jno
jne
stos
in
or
lds
in
pop
inc
lahf
clc
jnp
push
and
je
sbb
fstp
xchg
mov
xchg
in
dec
mov
fnstsw
add
sahf
mov
fucom
in
mov
mov
jl
jmp
mov
or
je
shl
mov
adc
xor
daa
lea
or
fcomp
adc
sub
xchg
xchg
(bad)
adc
xor
lods
add
dec
jecxz
ror
add
les
sti
inc
ss
(bad)
lahf
test
sbb
movs
jo
imul
fcomp
and
lock
or
xlat
ror
xor
pop
enter
push
jp
jmp
xor
push
push
or
mov
int
push
or
add
repz
stc
and
mov
test
call
icebp
adc
data16
add
sbb
nop
pop
jmp
sbb
cmp
sbb
js
mov
mov
xor
xor
into
(bad)
or
dec
add
add
sbb
les
mov
sub
pop
sbb
and
ins
(bad)
dec
(bad)
aam
ja
imul
mov
stos
xchg
jmp
int
xchg
pusha
lods
xchg
pop
popf
xor
or
inc
int3
lahf
jle
mov
push
mov
test
movs
sbb
mov
int
mov
xlat
int3
fisttp
mov
lods
dec
fistp
inc
xor
fisttp
cmp
jns
test
jns
push
call
lods
sub
add
adc
les
movs
jg
outs
lea
push
push
pop
dec
test
inc
jb
enter
jecxz
dec
mov
sbb
and
push
retf
add
test
ret
pop
arpl
movs
add
imul
mov
and
test
aas
enter
sub
cdq
fmul
retf
movs
xchg
icebp
sub
fisub
xchg
stos
shl
dec
shr
mov
dec
or
adc
cmp
or
mov
mov
repz
jno
push
and
jne
xor
jne
imul
pop
push
inc
and
xor
aaa
mov
sub
lods
xor
inc
sbb
mov
pop
dec
sbb
or
push
test
ror
mov
fcomp
jnp
sbb
push
cmp
cmp
repz
fs
xor
enter
jmp
inc
jl
nop
es
sbb
fadd
in
pushf
nop
aam
dec
sub
mov
or
mov
sbb
stos
sbb
mov
cmp
fisub
xchg
and
dec
pop
sbb
xor
adc
and
sbb
pushf
sti
loopne
jb
call
sbb
aad
adc
arpl
jne
or
fld
shl
in
jb
cmc
les
xchg
mov
lock
mov
adc
pop
scas
pop
sbb
data16
fstp
ss
shr
dec
movs
loopne
mov
and
jmp
aaa
adc
mov
fs
sub
xor
and
xor
test
or
jge
lahf
repz
pushf
xchg
sbb
loop
add
add
and
sbb
or
adc
add
sbb
loop
xchg
je
mov
sar
add
xchg
cdq
sbb
xchg
nop
push
lock
ror
or
add
jb
pusha
xlat
cmps
mov
lea
xor
dec
mov
cmp
cwde
dec
test
adc
adc
ret
scas
xor
pop
imul
xchg
repnz
dec
add
add
popa
or
xor
jae
and
loopne
mov
test
adc
and
cwde
mov
jecxz
pusha
xchg
lea
daa
ffreep
ins
xchg
mov
shl
xor
adc
add
or
xor
retf
add
xchg
or
sahf
mov
adc
xor
mov
pop
(bad)
xor
pop
push
or
mov
adc
adc
sub
in
cmp
sbb
cmp
add
test
cdq
call
pop
cmp
ins
arpl
dec
adc
mov
ins
inc
arpl
cmp
inc
fdiv
pop
sub
mov
lahf
loope
mov
inc
movs
outs
pusha
int
push
dec
data16
fcomi
movs
int3
bound
scas
xchg
mov
mov
xor
rol
(bad)
xor
mov
push
fcom
mov
test
mov
dec
(bad)
outs
or
repnz
sub
mov
or
ds
sub
js
fdiv
push
and
in
mov
pushf
gs
sbb
add
sub
add
add
fld
push
xchg
mov
into
cmp
bound
push
dec
or
dec
sub
inc
repnz
sbb
jge
nop
xchg
pop
or
je
jae
adc
fadd
mov
mov
imul
aas
adc
adc
push
in
adc
test
cmps
pushf
stos
add
in
jns
sbb
xor
shl
outs
retf
push
cmps
jg
add
inc
pop
jno
add
xchg
pop
dec
(bad)
cli
sub
scas
or
test
jo
std
ss
xchg
loopne
cmp
inc
jnp
jl
sub
mov
call
fcmovu
cmps
je
loop
add
mov
fcom
xor
jne
and
leave
cmp
ret
rcl
add
xchg
mov
movs
dec
in
shl
xor
add
xor
leave
xor
xchg
je
das
and
imul
test
call
jne
sbb
imul
cmp
sub
nop
(bad)
sbb
add
dec
leave
aam
jecxz
push
sbb
push
fild
sbb
push
xchg
jno
nop
movs
leave
frstor
mov
imul
dec
or
out
jns
xlat
or
jns
in
daa
inc
arpl
pop
ror
add
fisubr
fstp
cld
pop
jl
sub
mov
push
imul
add
sbb
jne
lods
ss
rcr
dec
cwde
inc
or
fcomi
sub
or
cs
loopne
push
enter
aas
and
lahf
jbe
sub
push
pushf
aad
adc
fst
or
mov
inc
daa
cmp
(bad)
cld
xor
xchg
add
int
push
sub
clc
push
lock
dec
sbb
pop
ror
clc
dec
pop
push
jbe
scas
jne
jno
add
add
jno
inc
add
sbb
dec
pushf
in
mov
lock
lock
dec
(bad)
mov
pop
cmp
stc
dec
cmps
push
inc
scas
pushf
stc
stos
xor
mov
inc
sbb
mov
add
inc
outs
ror
imul
inc
test
dec
aad
or
mov
rcl
push
pop
jge
or
sub
bswap
jae
push
cmp
inc
nop
gs
mov
retf
rcl
or
xchg
fist
xor
push
jno
fcom
mov
lods
dec
in
loopne
(bad)
in
(bad)
mov
or
pop
push
cmp
stos
or
and
push
or
hlt
jae
in
mov
outs
sbb
adc
dec
into
popa
sbb
scas
push
adc
or
pop
xchg
mov
or
and
sub
(bad)
push
and
push
mov
add
add
add
ret
cmps
dec
enter
adc
pop
lods
movs
dec
and
int3
or
aas
add
or
and
xchg
xor
sahf
dec
in
xchg
(bad)
or
pop
cs
mov
mov
sub
inc
add
jns
pop
test
fs
jmp
or
jne
jp
and
xor
adc
xlat
inc
movs
lods
push
movs
and
adc
dec
push
mov
gs
(bad)
fs
pusha
ins
jmp
xchg
push
es
shl
cmp
cwde
jbe
xor
stos
lods
pusha
movs
sbb
popa
popf
jle
repnz
(bad)
ins
and
nop
add
in
push
sub
std
inc
test
mov
loope
push
test
lock
enter
jne
mov
in
cmp
mov
mov
fiadd
sbb
movs
and
push
push
add
and
loopne
hlt
adc
repz
adc
fcomp
or
lahf
add
cmp
movs
pop
clc
mov
xchg
pop
call
adc
and
(bad)
jnp
es
(bad)
clc
xchg
jmp
dec
jae
jno
test
rcl
inc
sbb
mov
cli
mov
mov
lahf
es
sub
dec
or
mov
dec
int3
push
aaa
data16
inc
clc
xor
or
ds
xchg
aas
(bad)
out
mov
aas
sbb
inc
clc
mov
pop
or
inc
es
fld
or
sbb
jae
and
ss
push
or
movs
xor
cmps
add
test
mov
test
mov
int
inc
xor
jo
xor
sub
jl
push
pop
dec
or
sub
js
and
pusha
push
mov
or
pop
sbb
lahf
es
lock
add
in
jo
outs
pop
enter
sub
push
lods
in
lea
pop
mov
imul
and
jmp
sbb
jmp
jge
das
inc
test
add
dec
test
xor
push
jmp
push
test
retf
and
jmp
mov
dec
iret
popf
ss
inc
mov
push
(bad)
rol
and
shl
les
mov
icebp
and
mov
(bad)
mov
or
mov
xchg
retf
hlt
xchg
push
jne
xor
mov
or
dec
lahf
es
lock
loopne
or
nop
outs
or
cmp
sub
inc
and
mov
fld
or
sbb
int
lahf
inc
not
sbb
jmp
dec
mov
push
or
rcl
bswap
ds
shld
es
add
mov
(bad)
mov
push
shr
xchg
sbb
scas
add
add
adc
xor
enter
cld
int3
mov
fwait
cwde
pop
add
fnsave
mov
ret
sub
enter
mov
adc
adc
(bad)
sti
es
enter
adc
push
int3
enter
adc
shl
daa
xchg
sbb
cmp
loop
jo
adc
retf
inc
sub
pop
add
dec
xlat
adc
lea
add
ret
xor
jne
cmp
pusha
je
mov
data16
sbb
jge
shr
sbb
aaa
adc
in
mov
mov
retf
aas
pop
push
and
and
mov
add
and
sub
push
adc
push
xchg
mov
mov
ficom
and
sbb
sbb
xchg
mov
fsub
sbb
(bad)
ret
pop
fstp
sbb
push
neg
jl
push
pop
and
cmp
jo
fcom
xor
arpl
pop
jle
or
dec
or
mov
f2xm1
push
es
outs
test
xchg
mov
adc
in
or
and
mov
adc
and
(bad)
adc
cmp
iret
repz
push
mov
out
ss
cmp
mov
lahf
adc
jns
ja
in
outs
popfw
outs
push
mov
out
xlat
sahf
or
iret
pop
in
xchg
popf
cmp
repz
push
pop
push
mov
mov
rep
mov
inc
repz
repz
addr16
sahf
jns
out
test
rcl
lods
out
mov
cmp
lds
rol
enter
(bad)
mov
and
fsub
adc
mov
(bad)
daa
clc
rcl
mov
movs
push
inc
adc
in
mov
jge
jne
cdq
lahf
or
push
push
cmps
mov
and
push
sbb
dec
(bad)
call
cmps
fbstp
xchg
(bad)
out
sub
hlt
popa
pop
cmp
(bad)
dec
push
sub
dec
in
js
fwait
xor
inc
daa
sbb
in
add
test
lods
add
(bad)
dec
jg
fsub
pop
sbb
ror
xchg
pop
mov
jg
xchg
lods
push
mov
pop
inc
(bad)
and
loopne
and
xchg
mov
(bad)
ins
or
add
stos
lods
jmp
ds
retf
xor
shr
repnz
or
inc
nop
jl
or
push
enter
ror
popa
or
cmp
and
sub
test
popf
fs
test
jae
mov
repz
jae
push
pop
sbb
dec
or
nop
andnps
nop
dec
jle
ror
jnp
adc
inc
lahf
scas
ret
inc
shl
dec
(bad)
push
and
fldenv
cmp
push
or
push
out
or
jmp
movs
or
rcr
in
sub
jmp
(bad)
and
int3
jg
and
xor
add
adc
or
mov
ret
add
ret
pop
or
mov
fadd
add
ret
adc
mov
test
dec
in
pop
mov
ret
jg
jae
fst
push
je
rcr
or
sub
gs
gs
jno
dec
in
push
outs
push
add
sbb
push
cs
and
mov
dec
aas
pushf
inc
not
xor
shl
mov
aas
cmp
pop
jmp
jge
jae
sbb
std
mov
enter
ins
fmul
sub
sub
sbb
add
inc
and
cwde
es
jne
xchg
imul
repnz
out
test
mov
leave
xchg
jns
fmul
fsub
pop
adc
popf
adc
fadd
pop
fmul
sub
ret
add
shr
adc
mov
or
rcr
test
nop
or
or
fdivr
mov
inc
std
aam
mov
adc
add
sbb
inc
pop
aam
retf
add
mov
nop
mov
mov
pop
mov
call
push
jg
(bad)
mov
push
leave
inc
pop
jg
xchg
adc
pop
inc
adc
mov
add
pop
and
mov
inc
pop
dec
pop
mov
ret
dec
cld
mov
pop
sub
adc
mov
push
jmp
iret
add
mov
pop
and
aad
pop
sub
adc
repnz
or
and
mov
imul
test
clc
xchg
fstp
or
jle
inc
mov
mov
call
sbb
jle
pusha
js
xchg
es
in
call
pop
addr16
cdq
nop
xchg
add
mov
push
imul
or
inc
sub
fimul
rcl
call
mov
inc
(bad)
or
loopne
push
mov
adc
push
cs
pusha
xchg
dec
sub
(bad)
xchg
iret
and
mov
add
push
jecxz
scas
add
out
add
fidiv
je
push
mov
xchg
cdq
ret
ins
jo
jmp
push
xchg
cmp
div
push
ret
pop
mov
mov
out
add
shl
test
cmp
xor
mov
lods
inc
inc
outs
push
stos
fwait
add
add
stos
add
movs
rcr
pop
addr16
pop
add
inc
add
cmps
fistp
jns
push
xor
pop
(bad)
ret
add
add
call
je
outs
cmps
sti
push
test
push
pushf
or
and
or
jne
push
add
movs
lock
sahf
inc
movs
mov
(bad)
hlt
hlt
stos
clc
ror
fwait
das
jle
cmp
mov
jl
mov
jl
je
clc
add
or
pushf
or
jo
test
jl
outs
or
mov
mov
or
ins
ja
xor
add
scas
jbe
in
ins
add
gs
sub
push
mov
fdivp
rol
or
pop
xor
pop
cmp
popa
cmps
and
push
rol
arpl
je
jns
jbe
les
jae
add
retf
les
pop
test
dec
in
and
xor
sub
cli
xor
lds
in
ss
adc
rol
mov
add
retf
dec
and
jno
loope
ror
imul
cmp
inc
pop
mov
adc
rcl
in
mov
jle
pop
ret
sub
aas
nop
sbb
inc
leave
or
mov
dec
cwde
push
enter
cmp
mov
pop
or
and
push
dec
ret
or
aam
adc
jmp
adc
into
fimul
pushf
test
add
nop
ss
cmp
jp
imul
aam
in
jb
xchg
dec
jo
fdivr
jns
ja
mov
sbb
push
loope
jo
inc
mov
int3
in
adc
push
fadd
xchg
xchg
sbb
aas
push
lds
stos
add
fistp
mov
ins
jmp
cmps
xor
sub
dec
fwait
inc
add
pop
mov
fnstcw
pusha
dec
pop
pop
fs
or
or
sub
push
aas
fist
cmp
push
push
and
mov
jmp
cmp
jmp
sub
mov
das
inc
and
mov
sub
movs
xchg
pop
icebp
xchg
jecxz
mov
lds
aaa
popf
cdq
jecxz
les
xor
loope
jne
pop
mov
imul
pop
sub
inc
imul
daa
lods
imul
lahf
inc
dec
push
pusha
mov
sbb
lahf
dec
aad
lods
mov
xchg
pushf
jp
push
mov
inc
pop
pop
pop
push
adc
stos
popa
and
sbb
sub
in
push
imul
cwde
adc
int
ret
sbb
lock
lock
cs
lock
push
repz
sub
xchg
cmp
adc
test
lods
mov
sbb
and
or
fisub
scas
pop
and
or
scas
jg
fcom
daa
lea
cmp
pop
xor
push
sbb
pop
cmp
mov
das
das
lea
pop
sahf
call
inc
repz
loope
add
pop
and
xor
dec
cmp
or
sbb
call
jge
jmp
push
sub
and
and
xchg
aas
or
or
mov
xor
sbb
ror
fistp
xchg
dec
adc
cmp
or
bound
lea
loopne
movaps
or
xchg
(bad)
pop
or
inc
xor
fst
fadd
enter
fsubr
and
lods
jecxz
mov
ret
aam
in
push
adc
in
and
sbb
hlt
les
mov
int
or
sbb
push
xchg
rcl
in
and
push
dec
or
fdivr
ret
imul
rcl
in
(bad)
fsub
sub
xchg
sbb
add
mov
fild
inc
imul
into
ret
bound
xchg
pop
call
mov
jg
sub
je
enter
add
pop
sbb
arpl
xchg
xchg
inc
and
jne
inc
jmp
or
and
in
les
sub
pop
pop
clc
and
enter
adc
imul
pop
lea
pop
add
movs
and
outs
(bad)
ja
jl
push
push
push
cli
cmp
dec
dec
push
stc
inc
jl
pop
mov
jg
psubsw
sbb
and
adc
inc
pop
movs
push
add
and
ds
or
mov
loopne
mov
aad
xor
add
add
dec
je
aad
call
sub
xchg
pop
xor
js
in
xor
sub
or
daa
cmp
adc
and
mov
fadd
xchg
cmp
push
std
mov
jmp
in
imul
pushf
nop
xchg
push
fdivr
lock
sbb
das
mov
(bad)
shr
xchg
or
add
mov
movs
and
sbb
inc
ret
loopne
push
addr16
(bad)
repz
xor
mov
stc
in
dec
popa
jmp
mov
push
mov
push
push
xlat
fist
xor
sbb
aas
sbb
nop
pop
xchg
sub
lods
invd
sub
lods
or
push
push
and
mov
mov
lea
loopne
hlt
push
sbb
ret
pop
jmp
push
xor
jmp
adc
dec
pop
cmps
cdq
(bad)
and
inc
inc
or
push
fistp
lahf
inc
ret
pop
pop
mov
add
les
xlat
jae
adc
sbb
jmp
add
inc
or
loopne
lea
push
dec
and
repz
mov
add
or
rcr
popa
or
sub
sub
pop
adc
aas
pop
sbb
inc
mov
sbb
sbb
stos
and
les
rol
mov
pop
mov
inc
adc
add
pop
aam
add
sbb
sbb
pushf
sub
je
lods
ds
out
ds
cmp
or
adc
ss
pop
shr
inc
lods
mov
or
or
or
sbb
cmc
sub
ins
sub
je
loop
(bad)
adc
add
and
dec
dec
ror
clc
jb
cmp
push
hlt
jmp
rcr
mov
pusha
retf
mov
and
or
dec
dec
shl
shl
js
inc
xor
bound
xor
fcom
pop
jne
cwde
imul
or
push
retf
dec
pop
cmp
mov
add
loopne
jl
ret
loop
shr
inc
xchg
inc
sub
sti
sbb
movs
bound
popa
test
sbb
sbb
jg
shl
push
dec
add
or
popf
or
xor
mov
pop
(bad)
pop
dec
sbb
xor
or
add
inc
stos
mov
in
inc
repnz
(bad)
dec
lods
sahf
pop
add
and
add
fdivr
in
pop
and
test
sbb
inc
nop
cmp
call
mov
and
ins
rcr
cmp
add
daa
xchg
mov
call
dec
sub
ret
cmp
(bad)
push
xchg
inc
mov
mov
fidivr
pop
or
add
lods
enter
movs
add
lahf
movs
sbb
sub
jo
push
inc
push
shl
ins
test
sub
adc
add
add
push
ror
shl
enter
adc
(bad)
icebp
and
sbb
and
dec
cdq
dec
mov
ds
adc
push
int
hlt
push
addr16
sbb
cmc
pusha
and
push
mov
pop
push
xor
and
jae
push
and
imul
push
pop
mov
sub
push
push
arpl
ret
jae
jnp
movs
add
cmp
loop
cmp
xchg
es
add
int
int3
cmp
leave
arpl
(bad)
jnp
xchg
and
pop
add
or
push
add
add
xor
xchg
pop
dec
cmp
fiadd
int3
test
mov
xor
push
pop
and
push
fistp
cmp
iret
add
jg
jg
jne
inc
sbb
retf
mov
clc
add
mov
cli
rol
outs
cmp
inc
pop
push
mov
or
out
bound
xor
aas
nop
push
and
popf
gs
inc
sub
dec
dec
or
and
jne
shl
mov
or
jae
jg
push
adc
xchg
rcr
add
sub
dec
jg
fsub
rol
and
jnp
sub
dec
pop
and
cs
push
xor
mov
sti
movs
mov
push
xchg
or
cld
mov
adc
ret
into
adc
bound
and
sbb
js
lahf
jl
pop
daa
or
push
out
scas
hlt
push
pop
ds
inc
inc
push
mov
sub
and
or
adc
inc
test
mov
fwait
inc
sar
add
movs
outs
cmp
jne
xor
add
in
cmp
xor
sbb
dec
and
sub
sub
dec
mov
dec
add
ret
dec
or
outs
add
sbb
lea
test
mov
imul
mov
adc
push
mov
test
push
adc
xor
cwde
cli
mov
rol
and
adc
ins
or
imul
popa
pop
push
popf
cmp
hlt
jb
movsx
stc
mov
sub
jne
imul
jb
cmp
or
jp
nop
popa
sub
mov
push
push
lock
pop
inc
sbb
rol
popf
shl
xchg
fld
cmp
push
xchg
push
sub
mov
cs
retf
xchg
jmp
je
xchg
jo
stc
xor
dec
xchg
sbb
xchg
xchg
xor
inc
jge
aaa
cmp
or
aaa
mov
add
ins
or
or
push
fadd
clc
add
cwde
or
fadd
jo
jl
popa
or
push
repnz
or
ins
fwait
data16
sbb
adc
or
test
push
cmp
cs
mov
xchg
adc
jmp
inc
cmp
out
jns
jmp
jnp
repz
sub
inc
loopne
jns
push
inc
shl
push
pop
jg
cmp
dec
leave
leave
and
mov
add
and
ret
(bad)
jns
adc
es
movs
loopne
sbb
or
and
add
in
rcr
adc
mov
or
add
cld
and
test
pop
nop
and
push
push
sub
dec
sbb
xchg
clc
leave
and
cmp
dec
movs
call
jecxz
jg
inc
in
mov
add
cmp
add
xchg
xor
inc
cmps
jg
and
in
or
dec
ds
and
dec
cmp
sub
lods
adc
jns
push
es
dec
xor
in
outs
bound
mov
pop
mov
clc
scas
bound
aas
or
mov
or
lea
add
ins
movs
add
pop
and
cli
test
adc
and
adc
jmp
inc
hlt
inc
cmp
jbe
std
and
adc
cdq
dec
add
and
lds
dec
ins
jae
fwait
pop
cmps
in
lock
sub
inc
outs
stc
cmp
pop
ins
or
pop
push
pushf
ja
cwde
push
push
sub
or
pop
xchg
push
cmp
adc
add
movs
adc
xchg
mov
cdq
push
repz
dec
and
dec
add
cld
add
xchg
dec
pop
xchg
mov
or
xor
mov
adc
or
lea
push
imul
ret
sub
inc
scas
sub
xor
push
clc
add
nop
mov
sbb
shr
pcmpgtw
mov
push
or
mov
jno
jb
push
add
sub
mov
aas
sbb
xor
pop
loop
pop
xor
xlat
inc
dec
retf
out
iret
repnz
or
jl
das
cmp
sar
(bad)
cs
dec
or
test
add
add
or
push
push
mov
nop
inc
jmp
mov
push
push
push
mov
inc
sub
add
jno
cwde
loop
(bad)
mov
sar
addr16
lock
and
rol
push
add
sub
in
add
call
xchg
aad
popa
jmp
jle
jl
ins
push
add
shl
cmps
pusha
jecxz
jno
(bad)
cmps
ss
mov
sub
(bad)
cwde
in
pop
(bad)
loop
loopne
push
or
jecxz
das
loop
adc
and
sub
cmp
lds
aas
pop
inc
and
jb
lock
add
and
imul
pop
inc
call
xchg
inc
mov
pop
xor
(bad)
mov
add
les
push
push
aas
imul
inc
mov
xor
add
xchg
sub
xor
in
adc
or
out
dec
retf
push
arpl
xor
fidiv
pop
aam
(bad)
push
push
and
adc
jg
sti
ror
jae
xor
ss
aas
or
cmps
adc
or
aas
ds
pop
inc
mov
inc
cs
sbb
enter
adc
push
inc
mov
xchg
cmp
dec
(bad)
loopne
es
sbb
cdq
jmp
fldcw
mov
(bad)
ret
or
fldcw
adc
and
cmp
mov
inc
test
lock
test
jmp
imul
xchg
pop
pop
and
dec
cmp
add
aam
ret
inc
and
js
aaa
(bad)
call
retf
push
inc
inc
cmp
imul
add
repnz
and
jns
mov
test
rol
or
nop
sar
push
int3
and
xor
xchg
into
sub
sub
inc
call
push
mov
test
rol
inc
sub
or
das
add
ds
pop
xor
popf
fs
gs
or
push
test
adc
push
jge
sar
xchg
fmul
inc
xchg
jne
sub
inc
xchg
add
ins
dec
ds
dec
daa
gs
dec
leave
fst
add
sub
and
data16
pop
mov
fimul
repz
cmp
mov
psubsb
sbb
mov
test
(bad)
mov
outs
jmp
mov
cmc
ins
out
ret
or
iret
lock
(bad)
push
pusha
jne
dec
add
fs
pop
clc
loopne
sub
pusha
movs
int
push
nop
outs
add
xor
movs
xor
and
adc
int
pop
ret
cmp
dec
adc
adc
cli
or
xor
popa
or
adc
cmps
jo
(bad)
sub
inc
outs
pusha
popf
test
iret
loopne
or
fs
sub
sub
xchg
cmp
mov
call
lds
rcr
adc
dec
loope
or
sbb
loopne
mov
sub
jle
cmp
ss
lock
sub
stos
add
adc
adc
cmp
push
dec
shl
scas
xchg
dec
mov
lock
jmp
mov
jge
aam
dec
inc
inc
daa
fcom
aad
pusha
sub
mov
add
xor
mov
ins
sub
cwde
mov
daa
jp
mov
pusha
pop
or
les
lock
dec
fsubr
pop
call
imul
cmc
pop
or
clc
or
push
mov
and
mov
and
push
push
add
pop
shr
in
mov
sub
add
ds
sar
push
repz
mov
imul
mov
adc
mov
test
xchg
add
jne
or
fcom
test
xor
and
imul
je
fldenv
ins
lock
out
mov
or
test
push
or
dec
xor
jns
dec
or
aas
lock
arpl
push
push
sar
sbb
mov
ss
mov
nop
jcxz
pop
mov
nop
mov
push
or
pop
xor
mov
fistp
jl
or
fstp
lods
dec
inc
fiadd
fnsave
fisttp
aaa
jne
mov
add
add
adc
pop
cmps
mov
test
add
xor
shr
or
jae
adc
in
xchg
js
add
daa
sbb
(bad)
xchg
sbb
sub
pop
lds
mov
or
push
and
cmp
mov
out
sbb
in
jns
int
lock
or
jnp
fldcw
out
mov
dec
add
ss
in
and
outs
(bad)
jge
ficom
mov
ja
or
in
retf
test
xchg
int3
rcr
in
adc
fwait
dec
loopne
lahf
mov
inc
xchg
jo
(bad)
push
mov
pop
pusha
xchg
outs
test
stos
test
xchg
jo
inc
push
xor
or
(bad)
adc
fcmovb
aad
(bad)
xor
jmp
into
jl
add
or
in
inc
lds
pop
mul
test
test
sbb
jecxz
jge
(bad)
mov
adc
mov
sbb
mov
inc
ret
lods
add
mov
movs
add
aaa
sbb
xchg
mov
sub
pop
cmp
cmp
mov
mov
daa
(bad)
and
push
inc
shr
in
call
mov
out
push
or
xchg
cmps
cmp
test
je
out
and
inc
jbe
enter
jo
fsub
ret
inc
or
mov
popf
xchg
adc
call
arpl
add
push
sub
mov
dec
leave
inc
dec
test
mov
jae
sub
ret
enter
shl
pop
push
mov
ss
add
cmp
out
mov
mov
add
sub
enter
cwde
add
push
out
ins
mov
test
aas
cmp
cmovo
out
push
repnz
push
and
ja
or
inc
idiv
or
enter
out
mov
push
nop
fstp
pop
test
idiv
pop
in
cmc
mov
popf
inc
fld
cmp
jmp
aas
cmp
dec
loopne
add
fisttp
push
out
pop
pop
ins
sbb
sbb
push
rol
xor
cdq
sar
mov
call
sar
inc
dec
sub
pop
ror
adc
lods
add
adc
call
arpl
and
or
jne
test
mov
test
push
xchg
and
push
xchg
inc
jmp
movs
mov
call
jne
scas
xor
add
jb
ret
adc
xchg
add
jp
int
xchg
sub
sub
adc
mov
sbb
push
inc
adc
ja
xchg
push
mov
inc
fnstsw
test
push
lods
pop
daa
fst
int
inc
fstp
jmp
pop
fst
cmp
push
inc
lods
data16
ds
js
pop
push
mov
dec
dec
mov
push
xor
mov
xor
dec
jmp
add
xchg
(bad)
mov
cmp
xor
retf
sub
or
or
sbb
cmp
sub
outs
mov
int
outs
test
push
cwde
inc
or
call
push
xor
lea
and
jge
dec
and
fistp
iret
mov
cmc
add
inc
jno
add
jbe
or
add
ret
push
shr
jns
int
test
jb
leave
repz
cmp
mov
retf
div
lods
mov
fmul
pop
add
jb
push
fsubr
mov
inc
les
out
or
xor
and
sub
lods
fsubr
dec
mov
add
sub
rcl
shr
add
sahf
dec
gs
shr
pop
xchg
jmp
sar
and
fcom
std
jge
shl
jb
in
pop
mov
lea
mov
mov
push
add
sbb
inc
sub
lods
add
push
leave
stc
mov
sub
data16
and
cmp
popa
(bad)
jo
push
cmc
inc
add
add
or
dec
adc
mov
rol
or
sbb
inc
jbe
sbb
mov
call
sbb
xchg
pop
ret
jge
imul
(bad)
sub
sub
jle
sbb
mov
adc
mov
fadd
xchg
push
movs
movs
sbb
and
add
fcom
add
movs
or
xchg
and
add
icebp
dec
add
aaa
mov
cmp
jmp
inc
or
sbb
js
mov
imul
or
sub
pusha
push
pop
cmp
test
rcl
xor
test
mov
je
mov
sbb
jb
loopne
dec
pusha
push
ret
pop
jge
test
test
add
xchg
mov
add
add
in
nop
mov
push
jo
movs
mov
xchg
jnp
ret
mov
jge
xchg
(bad)
sbb
mov
xor
ins
(bad)
jg
ret
sub
jmp
inc
stos
adc
adc
cs
cmp
bound
test
mov
add
adc
nop
test
push
add
lods
add
or
jnp
frstor
lahf
and
mov
adc
or
dec
sub
adc
loopne
lea
jmp
inc
retf
xchg
jp
jmp
movs
xor
test
sbb
xchg
jbe
sub
pop
push
out
cdq
pop
mov
inc
sbb
and
pop
mov
push
std
add
out
push
adc
add
push
or
sbb
or
push
push
pop
dec
jne
sub
inc
push
adc
add
sub
push
es
cmp
test
test
inc
call
jnp
adc
inc
push
dec
mov
sbb
jo
cmp
rcr
sub
pop
dec
pusha
sub
jo
cwde
add
call
dec
rcr
or
jno
stos
imul
jns
movs
adc
add
cmp
icebp
pop
jne
sbb
std
or
ret
fiadd
stos
mov
ja
(bad)
in
mov
inc
cmp
and
in
jbe
sub
cmp
add
daa
jle
cmp
cmp
pop
xor
iret
sub
sub
fsubr
dec
adc
xchg
pushf
and
add
ret
mov
adc
js
cwde
das
cmc
movs
(bad)
int
sub
jo
or
pop
lock
or
xchg
(bad)
je
pop
pop
inc
outs
adc
mov
aad
and
aas
jle
scas
movs
movs
xchg
jg
xor
mov
mov
call
xchg
dec
shl
cwde
mov
in
sbb
ret
mov
xor
clc
xchg
sbb
inc
adc
add
call
add
add
cmp
popa
adc
push
(bad)
push
add
imul
xchg
(bad)
sbb
ins
daa
aad
pushf
ins
mov
or
add
push
in
xor
push
push
aam
sub
or
sub
pop
test
xchg
mov
lods
push
add
adc
enter
mov
xor
mov
dec
push
pop
and
pop
aaa
dec
loopne
sbb
and
fcom
rol
jne
xor
or
test
pusha
outs
jge
inc
fcomp
pop
inc
xlat
mov
jno
inc
mov
or
inc
sbb
mov
push
mov
addr16
das
jno
or
das
inc
cmps
and
inc
and
in
inc
in
xchg
inc
inc
es
mov
pusha
dec
inc
test
arpl
sbb
pcmpeqw
push
or
or
or
loopne
push
push
cmp
(bad)
and
mov
add
sub
scas
dec
test
push
xchg
ss
sub
repz
xchg
sbb
inc
rol
add
(bad)
in
or
and
call
pop
mov
or
ins
arpl
jecxz
in
es
je
push
jmp
int3
movs
mov
and
adc
xor
xor
cmp
add
add
add
cmp
xchg
mov
or
int3
rol
add
leave
sub
adc
lock
add
inc
cmps
cwde
or
add
add
loop
add
inc
fmul
les
nop
push
push
ins
or
sub
ds
add
jmp
cli
inc
mov
jne
cmp
add
jmp
ja
jl
lahf
add
jecxz
fwait
or
dec
int3
scas
int3
push
pop
xor
js
cmp
pop
cwde
fcom
or
and
test
cmp
sbb
test
add
movs
or
aam
cs
inc
push
and
cmp
cmp
sub
sub
pop
lea
stos
dec
dec
sbb
xor
dec
repnz
or
cmp
and
pop
adc
dec
or
cmp
scas
imul
shl
sub
cmc
jmp
dec
push
add
mov
push
rol
jecxz
gs
add
dec
daa
mov
rol
and
cmps
cwde
popa
nop
mov
movs
mov
push
mov
out
dec
bound
inc
out
jnp
js
jmp
adc
or
ds
mov
inc
ins
pop
mov
add
mov
and
lock
popf
or
hlt
sbb
or
fstp
push
cmps
add
ret
xchg
ins
test
or
pop
cmp
pop
aam
pop
pop
adc
or
and
sbb
inc
enter
femms
pop
pop
pop
add
mov
mov
mov
pop
retf
das
jns
aas
xor
les
inc
fcomp
pop
ins
cmp
cmp
adc
xor
or
sub
mov
mov
cmps
sahf
inc
mov
aaa
sbb
inc
(bad)
(bad)
or
adc
pop
adc
adc
and
push
mov
aaa
inc
loopne
ror
push
jns
imul
in
inc
shr
sbb
pusha
(bad)
dec
adc
lds
cmp
loope
aam
call
and
sub
mov
sbb
xor
inc
dec
aam
xchg
popf
pop
adc
or
sar
lea
xchg
pusha
dec
push
xor
jno
mov
cmps
mov
and
push
es
pop
fdivr
es
xchg
fs
inc
dec
jae
pop
xchg
pusha
push
fs
ds
and
inc
or
xchg
or
or
mov
retf
test
loope
lds
scas
test
jae
punpcklbw
popa
jmp
adc
iret
movs
test
cmp
sahf
add
pop
inc
js
inc
mov
jo
push
mov
pop
pusha
mov
add
mov
and
loope
push
and
and
or
mov
sbb
(bad)
in
add
sub
mov
xchg
adc
mov
or
add
add
pop
push
push
dec
adc
sub
or
and
shl
sbb
pop
leave
xor
adc
push
pop
push
imul
pop
pop
and
push
sbb
inc
mov
mov
pop
add
movs
or
jno
stos
adc
push
aas
fisubr
in
sbb
mov
jns
fwait
gs
pminub
inc
fistp
cmp
cmc
icebp
sub
bound
mov
adc
jge
icebp
je
hlt
or
sti
push
sahf
inc
(bad)
pop
dec
adc
adc
daa
loope
leave
or
retf
dec
aad
and
xor
(bad)
neg
outs
test
jg
(bad)
dec
add
call
lahf
sub
loope
jecxz
add
clc
mov
adc
loope
push
dec
fistp
push
lods
mov
cdq
div
sti
or
test
in
cld
and
jne
out
call
sub
jbe
or
test
xchg
mov
je
add
push
int3
pop
mov
push
pop
jg
push
or
add
xchg
lods
repz
jo
jmp
in
inc
sbb
repz
xor
mov
cmp
ins
jecxz
push
repz
stc
adc
jmp
nop
sbb
inc
mov
add
dec
leave
xchg
cs
repnz
sbb
jo
arpl
shl
pusha
sbb
mov
sbb
movs
aas
out
cwde
jbe
aam
cmps
adc
add
pop
inc
gs
xor
push
jb
jg
pushf
or
pushf
or
add
jno
sar
jns
nop
mov
push
hlt
adc
and
xor
jns
sbb
xor
jno
sub
pop
repz
cdq
and
cmc
test
push
dec
lahf
clc
push
fcom
sbb
stos
xchg
and
cmc
adc
jmp
clc
(bad)
pop
ins
jne
jae
push
mov
mov
add
mov
jg
nop
sbb
leave
cmps
jbe
sub
and
daa
xchg
mov
add
and
fist
leave
mov
movs
mov
or
pop
inc
and
dec
cmp
pop
jle
mov
and
mov
mov
sbb
push
mov
push
dec
pop
hlt
mov
inc
enter
fdiv
mov
xchg
pushf
test
les
push
jl
stos
inc
push
hlt
mov
mov
mov
xchg
hlt
mov
nop
daa
or
pop
jne
(bad)
mov
mov
sub
jns
dec
imul
jle
cwde
les
sahf
rcr
sahf
jne
push
pushf
shl
inc
xchg
dec
mov
or
js
mov
push
inc
and
pop
sub
lahf
xchg
sbb
bound
jl
cmp
in
cld
test
sub
cmp
pop
scas
push
push
les
push
xlat
pop
jg
pop
sub
adc
mov
inc
enter
sbb
sub
movs
test
push
sub
or
lods
cmps
dec
(bad)
fbld
or
cli
jns
rol
cmps
add
pop
jno
cs
sbb
jp
add
fcmove
add
mov
shl
(bad)
sar
ins
shl
sub
cmp
sbb
(bad)
pop
push
(bad)
fisttp
adc
push
movs
shl
push
jb
mov
add
ss
mov
imul
mov
and
lahf
and
mov
(bad)
call
push
and
test
or
push
pop
or
mov
jl
adc
nop
jmp
inc
and
call
outs
add
lods
ins
inc
jl
or
fild
jl
shl
addr16
push
pop
sub
pop
sub
scas
rcl
aam
sbb
xor
dec
jmp
mov
xlat
movsx
and
jae
aam
loopne
or
in
mov
and
mov
xchg
and
jae
pusha
sar
and
inc
sbb
pop
retf
stos
xor
pop
in
and
mov
loope
hlt
pop
es
mov
lea
xchg
rcl
inc
and
clc
lahf
mov
add
(bad)
push
repz
dec
dec
jmp
mov
mov
sub
pop
or
loopne
mov
pusha
outs
dec
push
sub
std
push
(bad)
fadd
adc
imul
repz
rep
aaa
sub
cmc
pusha
mov
sahf
cmps
cld
out
adc
and
js
adc
inc
jl
add
jns
imul
ret
xor
xor
lods
jo
xchg
jg
fcomp
or
jl
imul
fild
adc
add
push
and
fadd
jle
sbb
xchg
xor
xchg
and
jg
out
fst
jne
or
xor
mov
dec
pusha
cmc
xchg
cmps
push
pop
add
rol
mov
xchg
pop
mov
popf
inc
mov
test
adc
mov
push
sbb
jg
jne
dec
xor
(bad)
fist
test
adc
fisubr
pop
lods
sub
inc
sbb
add
(bad)
mov
aad
fiadd
mov
jg
lea
repnz
add
and
shl
imul
pop
or
jl
dec
inc
dec
and
xchg
and
mov
jno
push
mov
inc
in
pop
add
nop
jmp
pushf
mov
cld
mov
pop
adc
sub
jne
aaa
dec
jg
lahf
sub
pop
xchg
inc
into
mov
cmp
jmp
push
sbb
add
cmps
out
inc
in
pop
loopne
pushf
jbe
shl
cmps
push
(bad)
ins
adc
add
or
data16
or
and
in
rol
mov
inc
sub
add
push
arpl
out
sub
jg
jp
cmp
or
dec
sbb
inc
jbe
and
adc
cmp
stos
push
popa
adc
mov
or
add
cmp
jmp
ins
pop
sbb
lock
inc
and
shl
xchg
and
jbe
and
or
sbb
or
xchg
(bad)
aaa
mov
shr
mov
xchg
add
cmp
adc
or
jno
in
xchg
push
add
sub
inc
add
cmp
or
fimul
scas
or
jmp
mov
ror
jne
push
or
sub
pop
sub
jbe
sbb
jmp
adc
and
xor
int3
pusha
xor
ror
xchg
pop
pushf
and
in
dec
aas
imul
aad
lock
xchg
push
and
add
lods
pop
pop
adc
(bad)
shl
mov
push
fcom
(bad)
fadd
test
test
cmp
xchg
jecxz
sub
sub
pop
ret
cmp
scas
mov
sub
pushf
add
or
cmp
sbb
dec
pop
jne
aam
outs
pop
xor
mov
and
xor
iret
mov
shl
xlat
fisttp
push
in
add
shl
xchg
pop
aas
jo
pop
pop
push
outs
mov
mov
cmp
ret
adc
xor
or
mov
outs
inc
les
inc
sbb
ins
mov
jnp
cmp
sub
mov
and
and
dec
mov
pusha
mov
inc
inc
aas
call
popf
or
sbb
rcr
cli
ins
loop
mov
push
adc
cmp
enter
adc
xor
add
inc
inc
sub
adc
pop
xor
xor
in
mov
mov
sbb
mov
sbb
jae
call
pop
jge
sbb
pop
push
in
fcmovbe
ja
push
xor
fcom
adc
adc
in
lea
push
mov
int3
cmc
inc
pushf
add
movs
or
sbb
adc
dec
add
loop
adc
and
call
add
leave
int
adc
sbb
add
pop
or
sbb
jmp
cld
dec
adc
mov
shr
inc
pop
inc
mov
inc
mov
shr
or
mov
clc
lea
dec
mov
ja
xchg
jbe
push
mov
sbb
pop
dec
add
(bad)
lock
dec
loop
push
enter
push
xchg
jge
add
lea
sub
inc
xchg
shr
mov
xor
mov
shl
jb
cmc
push
imul
sub
adc
cmp
dec
sti
xor
add
scas
inc
sub
shr
aad
inc
lods
enter
jns
jmp
and
dec
xor
xchg
push
(bad)
es
jns
and
xor
in
inc
arpl
scas
leave
inc
or
push
jbe
test
or
lds
mov
and
daa
xor
dec
sbb
or
push
aad
add
jne
or
dec
adc
pop
or
sbb
push
sub
outs
call
ja
fstp
mov
adc
jg
xchg
les
xchg
push
call
sub
add
ret
inc
xchg
jne
fsubr
sbb
scas
cmps
and
adc
add
mov
sub
pushf
jo
xchg
in
loope
sub
in
mov
sbb
lahf
add
mov
in
or
or
jne
inc
cmps
aas
inc
pusha
dec
es
pop
cmps
dec
or
or
cmp
loop
sub
or
pop
je
sub
sbb
xor
mov
repz
(bad)
repz
scas
push
pop
sbb
jmp
xchg
sbb
pushf
xchg
sbb
mov
hlt
jmp
cmp
mov
retf
sbb
imul
data16
xchg
(bad)
cmp
inc
hlt
add
ins
hlt
xor
push
adc
hlt
push
ins
dec
inc
adc
push
aam
jg
retf
push
pop
push
add
call
lahf
add
add
adc
xor
pop
iret
mov
popf
fs
inc
or
jmp
adc
mov
and
sub
xor
xor
or
mov
shl
jne
xor
add
sub
ret
inc
sbb
add
inc
ins
and
cmc
imul
imul
jp
inc
push
jb
cmp
fcomp
in
cmp
add
adc
or
dec
in
add
adc
push
xchg
xchg
clc
cld
adc
adc
pop
(bad)
cwde
mov
retf
mov
add
cs
les
sub
mov
or
in
add
popa
iret
lods
add
inc
stc
movs
inc
xchg
cmp
cmp
sbb
movs
sbb
xor
mov
inc
sbb
mov
add
xor
sbb
mov
aaa
loop
pop
in
mov
lock
je
jo
jmp
sahf
sub
dec
mov
mov
adc
pusha
xor
rcl
sar
xor
(bad)
lock
lods
or
ss
imul
ins
jecxz
ret
sub
shr
cmp
sbb
jbe
adc
push
cli
pop
jg
cmp
xchg
pushf
sbb
or
jge
or
cld
out
lea
rol
dec
cmp
or
shr
out
scas
sub
ret
pop
popa
push
xchg
xchg
inc
jp
add
lea
mov
add
and
and
push
cmp
ret
pop
test
lods
jecxz
in
inc
push
lock
test
call
jbe
cmp
inc
xchg
js
lods
icebp
and
add
sbb
and
and
aad
sub
sbb
dec
jbe
loopne
xchg
jp
mov
add
loope
mov
xor
xchg
test
cmp
inc
gs
mov
xor
pop
mov
push
and
pop
test
movs
jbe
shl
pop
fwait
jmp
lock
int3
push
or
loop
inc
xor
popa
lds
cmp
jae
cdq
or
ret
outs
js
jmp
scas
pop
pusha
or
das
cmp
jp
or
lds
pop
enter
inc
add
sbb
lods
add
mov
mov
jne
xchg
push
push
call
ror
je
cmovo
lea
pusha
clc
xchg
or
das
dec
jne
into
pop
or
push
in
fld
adc
loop
cs
dec
(bad)
fchs
mov
(bad)
dec
jl
repz
rol
and
inc
or
add
daa
jo
les
sub
mov
mov
pop
xor
add
inc
aad
sub
mov
ret
jmp
pop
loopne
xor
sbb
(bad)
pop
mov
call
stos
(bad)
fld
dec
gs
push
pushf
xor
push
mov
or
pop
cld
inc
mov
mov
push
sbb
push
fld
adc
jge
sub
mov
xor
nop
fwait
sub
cmp
(bad)
fiadd
ins
ins
rcl
pop
jb
cmp
jg
sbb
push
mov
lods
adc
dec
inc
cmp
in
push
and
fild
add
loope
cmp
xor
push
push
push
add
lahf
push
adc
add
rcr
aas
pop
sbb
bsf
pop
ja
(bad)
adc
dec
inc
outs
fdiv
ret
or
sub
jp
jmp
adc
icebp
xor
jo
adc
pop
adc
sbb
dec
cmc
dec
xor
aas
ret
enter
addr16
add
jle
pop
and
sbb
popf
inc
sbb
adc
dec
dec
call
leave
stos
cmp
fld
push
add
or
scas
jns
lods
inc
sbb
popa
test
cmp
out
or
mov
adc
inc
and
aaa
or
xchg
(bad)
aad
cdq
adc
les
fcmovb
fstp
pop
or
leave
xchg
fcomp
add
leave
or
popa
mov
ins
push
pop
or
fs
push
or
dec
pop
sbb
sub
stos
or
mov
and
ds
js
ins
repnz
adc
rol
movs
and
mov
cmp
add
push
jg
mov
dec
imul
inc
and
add
xchg
pop
cmp
pop
push
mov
fs
stos
(bad)
jns
popa
sbb
push
mov
or
sti
mov
or
sbb
mov
sbb
cmp
jae
mov
push
cmp
leave
push
scas
cmp
xchg
fcmovb
sub
xor
test
push
test
out
rcl
les
jl
dec
jl
or
ret
or
sbb
sahf
xor
sbb
push
call
mov
xchg
outs
inc
sub
sub
mov
lea
pop
add
inc
retf
cmp
push
xor
lock
xor
and
nop
jae
nop
data16
sahf
or
pop
jae
pop
leave
add
jmp
xchg
adc
dec
mov
xchg
sub
push
mov
and
jl
cmps
add
adc
and
or
cdq
push
xchg
push
xchg
dec
add
and
movs
dec
dec
in
pop
and
adc
sbb
and
cdq
mov
mov
inc
add
add
adc
inc
dec
inc
or
jmp
xchg
inc
mov
push
dec
adc
mov
into
xor
loope
push
inc
(bad)
mov
movs
jle
adc
xor
pop
xor
icebp
mov
inc
call
clc
es
jl
cld
and
add
jmp
pop
adc
push
cmc
mov
sbb
jb
pop
jp
sub
retf
adc
shr
dec
loop
mov
push
int
iret
rol
mov
dec
lea
nop
xor
xchg
or
jmp
jbe
sub
adc
cmp
pop
aaa
popa
leave
scas
sub
pop
mov
add
xor
push
cmp
fstp
add
(bad)
push
add
jmp
sub
test
jg
adc
or
or
jo
mov
xor
je
push
push
sbb
add
push
sub
sub
adc
xor
ins
pmulhuw
xchg
(bad)
jne
or
popa
push
push
in
int3
scas
sti
cld
pop
cld
je
jmp
dec
cmc
dec
push
or
and
(bad)
adc
call
cli
push
(bad)
enter
cmp
movq
(bad)
sub
jne
imul
xchg
clc
dec
sub
add
push
pop
jmp
mov
mov
mov
cs
cmp
sub
and
sub
ret
push
es
outs
jae
movs
lahf
pop
test
ret
(bad)
mov
dec
arpl
push
lods
cwde
cmp
popa
outs
sub
push
push
pop
je
pop
push
aas
mov
adc
push
jmp
jo
jbe
mov
nop
inc
sub
mov
jo
inc
sbb
nop
xor
mov
adc
inc
outs
lahf
fs
stos
mov
out
cmp
add
mov
ficom
xchg
cmp
mov
mov
xchg
cmc
neg
out
or
movs
xor
jecxz
add
dec
or
xchg
push
jns
push
dec
adc
push
ins
test
or
inc
fidiv
(bad)
dec
ins
ror
or
sbb
push
sub
jno
mov
int3
and
adc
int3
pop
(bad)
push
loope
push
mov
pop
sbb
int3
loope
pusha
sub
pop
popa
jb
push
adc
cmp
sub
push
adc
add
rol
xor
in
cld
push
or
inc
mov
movs
repnz
mov
push
or
in
push
or
movs
xor
mov
retf
and
mov
and
sbb
aas
sub
mov
sub
dec
pop
xchg
imul
fldenv
add
movsx
or
jmp
mov
dec
retf
push
jno
xor
cmps
fisttp
movs
sbb
xchg
inc
xchg
inc
add
xchg
mov
cmp
xchg
fiadd
bound
imul
iret
data16
xchg
cmp
push
cmp
sbb
nop
cmp
stos
add
jae
jo
call
outs
sbb
adc
fsubr
xor
cmp
pop
adc
xor
adc
iret
lahf
adc
inc
fs
cld
es
and
call
dec
mov
add
inc
add
mov
and
fiadd
cmp
inc
or
dec
gs
fwait
pop
push
mov
add
lods
sbb
dec
loop
pop
xor
call
adc
not
or
dec
rol
into
daa
jmp
ret
sbb
xor
push
das
push
mov
cmp
dec
or
adc
sar
push
sbb
imul
ror
mov
pop
lock
adc
jns
push
fwait
test
aam
jecxz
mov
shl
push
daa
sbb
sub
daa
fmul
mov
lock
ffreep
lock
in
xchg
inc
push
add
jg
fcom
inc
ret
dec
sahf
or
mov
mov
ins
cmp
nop
call
lock
push
push
fcomp
dec
repnz
push
test
and
push
fbstp
sub
dec
pop
mov
add
cmps
jmp
fimul
sti
loopne
sbb
or
push
jmp
xchg
nop
inc
push
xchg
pop
pop
push
or
or
dec
pop
inc
ror
dec
or
ins
test
pop
pop
inc
fist
(bad)
dec
pop
or
inc
sub
test
idiv
sbb
aaa
adc
fld
or
pop
inc
add
mov
add
mov
and
xor
xor
lea
cdq
adc
popf
adc
je
rol
mov
or
jg
outs
adc
test
ss
clc
jns
or
aas
jns
mov
ret
pusha
sbb
add
or
or
push
add
jmp
shl
rcl
lahf
and
or
(bad)
xor
fbstp
mov
add
and
sbb
loop
mov
inc
push
mov
xor
stos
mov
cs
pop
xchg
imul
inc
push
push
aam
push
jne
lods
pop
mov
mov
adc
enter
js
je
sbb
sub
hlt
addr16
and
adc
or
scas
xor
jl
pop
dec
and
pusha
cld
push
call
pop
rol
or
jg
jne
fild
leave
mov
add
or
or
retf
and
loop
pop
outs
and
or
add
pop
ja
sbb
sub
push
xor
jb
sbb
xchg
jnp
call
pop
xor
fwait
mov
jl
(bad)
enter
push
jecxz
mov
js
and
enter
int
enter
xor
and
ins
jl
test
xor
pop
mov
cwde
sub
ret
push
xchg
sub
cdq
inc
shl
jb
test
pop
dec
mov
movs
shr
fs
fs
pusha
in
inc
(bad)
xchg
retf
les
mov
xchg
les
stos
dec
xor
scas
les
or
push
push
xchg
pop
dec
mov
test
mov
int
sbb
or
mov
jle
jl
cwde
sub
sub
dec
xchg
retf
popa
lock
xchg
pop
mov
cmps
movs
pop
ds
enter
test
mov
xchg
mov
rol
inc
xor
and
scas
inc
imul
sub
adc
mov
lahf
fcom
inc
push
or
leave
dec
(bad)
adc
cmp
pop
or
loop
pop
jae
jo
jo
xchg
or
mov
xchg
scas
mov
and
and
fs
adc
(bad)
dec
shl
ss
add
adc
out
dec
inc
and
stos
mov
and
push
mov
add
and
test
pusha
and
cmp
add
mov
add
and
inc
icebp
dec
pushf
mov
push
fadd
and
or
sbb
jmp
dec
mov
shl
shr
in
pusha
repnz
xor
out
sbb
aam
aam
jmp
out
or
push
push
or
and
add
(bad)
das
shl
fs
repnz
sub
mov
jmp
dec
sub
push
mov
sbb
and
imul
adc
sbb
imul
mov
sbb
add
xor
adc
fwait
push
xchg
dec
cmp
xor
xor
sbb
cs
bound
push
sub
sub
nop
jo
adc
jnp
adc
cmp
push
xchg
mov
ins
ret
adc
int
in
add
xchg
xor
dec
add
in
fwait
jp
cwde
pop
or
inc
pop
repnz
lock
sub
je
ret
ret
xor
or
dec
hlt
lahf
imul
das
ss
dec
cld
push
push
push
jns
or
mov
jno
iret
and
jbe
movs
mov
ret
cmp
pop
mov
cmp
sbb
test
xchg
cmp
mov
inc
fsubr
mov
ins
adc
test
and
idiv
pop
adc
inc
mov
jmp
cmp
push
jmp
imul
lock
add
mov
std
rol
das
jecxz
inc
adc
call
out
adc
(bad)
mov
mov
push
mov
cs
xor
pop
add
mov
or
and
ret
(bad)
setbe
stc
push
or
add
inc
emms
xchg
xchg
or
cmps
gs
shl
test
mul
add
leave
js
mov
or
xchg
and
mov
inc
jge
xor
push
dec
mov
add
add
xor
lds
or
hlt
or
lods
and
fadd
dec
test
lock
iret
not
push
out
jg
popa
jge
pop
call
call
test
lea
adc
dec
mov
out
push
jbe
adc
xchg
adc
int
or
adc
xlat
adc
xlat
inc
pop
push
cmps
arpl
test
mov
sub
test
xchg
cmp
(bad)
clc
aaa
jmp
and
jns
(bad)
and
or
call
inc
or
push
push
paddd
leave
add
sub
movs
or
enter
and
or
addr16
adc
and
jg
xchg
inc
sar
imul
pop
rcr
jl
(bad)
and
xchg
jmp
sub
adc
fistp
inc
dec
sub
xor
daa
and
sub
mov
push
or
cmp
movs
xor
fstp
sar
push
repnz
mov
or
shl
jbe
fwait
mov
ja
mov
pop
lods
fs
sub
fst
add
adc
into
lods
mov
(bad)
jnp
push
add
and
retf
(bad)
jmp
cmp
xchg
sar
dec
cmp
lods
pop
push
aaa
pop
sbb
xor
fild
mov
jg
addr16
add
mov
sub
stos
inc
xor
xor
inc
fwait
sub
push
pushf
pop
es
xchg
sbb
sar
in
ins
ret
mov
das
iret
dec
je
dec
jg
or
add
loope
push
lods
mov
les
dec
loopne
adc
and
rol
fst
push
cmp
sbb
mov
imul
dec
jbe
nop
dec
mov
call
stc
out
and
dec
cwde
or
nop
xchg
cwde
cwde
pushf
or
pushf
pushf
jl
inc
cmp
test
dec
aad
sbb
mov
mov
cwde
nop
mov
mov
sub
add
sub
and
ins
sub
jg
adc
cdq
pop
xchg
dec
lock
sbb
outs
or
mov
mov
arpl
mov
es
push
pop
xchg
sub
pop
outs
or
aaa
mov
cli
xchg
or
pop
sbb
je
mov
xchg
xor
push
arpl
push
cwde
icebp
loopne
dec
ins
mov
es
adc
mov
xor
and
or
and
and
hlt
sub
xor
xor
daa
add
and
jb
aaa
sub
cmp
dec
outs
mov
shl
call
nop
cmp
lahf
test
lea
movs
ss
popa
push
rcr
cmp
rol
les
dec
or
nop
add
pop
cmp
sub
or
mov
movs
mov
sub
xor
pop
cmp
in
call
xchg
lods
inc
mov
ja
inc
push
cmp
lock
sbb
sahf
imul
jne
pop
loope
xchg
mov
add
xor
pop
jg
ja
out
xor
pop
jg
pop
xchg
data16
dec
pop
loope
sub
or
pushf
in
and
push
lahf
adc
icebp
push
dec
daa
mov
dec
cmp
test
inc
imul
push
hlt
and
adc
jg
mov
retf
and
or
sbb
mov
sbb
jne
push
jb
adc
or
sub
faddp
(bad)
out
xor
dec
call
mov
adc
xor
mov
inc
mov
arpl
push
jmp
aam
jg
pop
unpcklps
adc
add
inc
fmul
jle
mov
pop
stc
push
mov
pop
pop
sub
adc
add
or
fdivr
fsubr
in
push
mov
add
mov
dec
cmp
mov
lods
sub
mov
adc
mov
iret
es
mov
adc
lods
cmp
les
and
pop
xor
dec
leave
stos
je
jmp
push
sti
std
in
addr16
adc
cdq
cmp
jne
in
inc
add
inc
ins
sahf
push
js
push
push
cli
pop
or
les
dec
gs
js
in
mov
ins
stc
test
adc
fisubr
and
fdivr
(bad)
ins
adc
loopne
xchg
or
xchg
je
push
jmp
push
cs
call
and
in
adc
je
fadd
inc
mov
loopne
sar
cmp
lea
inc
retf
stos
pusha
push
(bad)
mov
int3
dec
jle
xor
xchg
sbb
push
jns
dec
pop
jg
sub
sub
cmp
jb
test
xor
adc
push
jl
and
inc
or
(bad)
arpl
dec
jmp
jne
retf
mov
repz
or
pop
push
jle
xor
pop
inc
jl
dec
xor
xor
cdq
lock
and
pop
aaa
call
sub
cmp
rol
jle
cmp
jne
pop
cmp
push
lds
retf
sbb
int3
je
jns
into
leave
ja
and
sub
jbe
imul
mov
push
add
jle
push
push
test
xchg
sbb
aas
and
sbb
sbb
aas
in
inc
jo
es
dec
dec
cmps
popa
in
sar
in
call
pop
cdq
nop
imul
ja
xchg
arpl
in
ror
outs
stos
or
xor
imul
adc
sbb
dec
adc
jb
push
ds
sbb
neg
xor
ret
fst
xor
jbe
imul
call
popa
in
push
push
fxch
xchg
adc
push
arpl
pop
nop
cmps
leave
adc
repz
mov
fcom
cmp
scas
add
cld
inc
jo
sbb
rcr
push
or
shl
rcl
cdq
add
rcl
arpl
int3
mov
xchg
cmps
add
int3
fistp
in
add
xchg
les
in
dec
xchg
rcl
scas
movs
jb
rcl
rcl
jb
xchg
dec
rcl
rcr
jmp
add
mov
fld
sbb
dec
pop
push
stc
fadd
sti
sbb
rcl
rcr
or
cmc
mov
in
(bad)
outs
loopne
jmp
movs
add
and
add
repnz
adc
add
repnz
shl
jne
or
xchg
sbb
fsubr
mov
xchg
push
jns
or
jg
mov
sbb
or
ret
add
enter
fdivr
or
les
dec
rol
int
repnz
push
mov
adc
xchg
aam
sar
cmp
jns
xchg
scas
pop
jo
fild
pop
fist
inc
je
sub
test
add
push
mov
xchg
push
ror
sub
aas
test
ficomp
(bad)
inc
dec
push
add
hlt
mov
clc
fldz
fstp
adc
sbb
(bad)
icebp
jae
cmp
mov
xor
pushf
pop
hlt
inc
or
mov
clc
fmul
repnz
jge
adc
inc
mov
xlat
push
xchg
push
and
xchg
pop
and
mov
dec
cmps
mov
out
into
xchg
jb
jmp
mov
ins
arpl
pop
or
hlt
adc
push
mov
add
or
jns
adc
cmc
mov
je
sub
or
sbb
push
mov
xor
ins
adc
cmp
mov
push
(bad)
or
mov
hlt
fisubr
mov
xchg
adc
enter
ret
dec
fbld
int
jl
mov
cmps
repz
mov
add
icebp
push
cmp
pushf
jns
or
lahf
aaa
mov
jo
jg
loope
out
push
and
inc
movs
and
jge
mov
sub
mov
shr
(bad)
push
call
xchg
sub
xchg
sbb
add
jo
ret
popa
les
outs
push
fstp
xor
imul
push
mov
test
cmp
arpl
ja
cmp
pop
or
push
inc
add
inc
out
push
lea
push
inc
push
jnp
sub
or
inc
mov
or
pop
inc
xchg
inc
add
adc
or
mov
test
je
in
std
pop
jl
in
(bad)
int
outs
cmp
jge
bound
dec
(bad)
mov
jo
sub
push
xchg
sub
movs
(bad)
mov
les
or
push
mov
mov
in
into
push
cmp
sti
idiv
or
add
pop
add
mov
shr
fadd
out
inc
dec
sub
sub
sub
xor
lea
jns
push
mov
pop
dec
pop
dec
loopne
push
in
in
mov
es
pop
scas
lea
push
enter
sbb
jno
test
push
xor
or
jnp
ins
clc
mov
sbb
ret
ins
or
adc
xchg
or
cld
fs
dec
jb
ins
aaa
mov
adc
push
jb
lahf
sbb
sub
mov
or
sub
push
gs
jno
repnz
repnz
sbb
test
xchg
scas
sbb
adc
enter
retf
in
ret
cli
call
xor
nop
rcl
push
cwde
cmps
mov
rol
rol
mov
imul
dec
repnz
sahf
cld
out
adc
imul
imul
not
add
push
out
neg
div
imul
mul
jne
dec
call
dec
and
call
sub
shl
fdiv
shr
mov
inc
add
retf
js
jb
adc
push
mov
jmp
push
adc
fdiv
adc
cmp
fdiv
jb
push
jns
xchg
fadd
cmps
and
add
into
imul
(bad)
pop
adc
shl
pop
xchg
adc
add
push
add
jns
in
pop
rcl
cmps
dec
test
sbb
push
pop
test
in
mov
push
mov
mov
dec
adc
adc
sub
sub
pop
inc
add
xchg
sbb
inc
neg
mov
inc
add
push
cmc
(bad)
push
fild
lods
push
bound
test
or
and
out
adc
dec
xchg
ret
add
and
jge
fiadd
push
out
mov
mov
enter
sub
fst
scas
sbb
xchg
lock
xchg
and
mov
imul
ja
push
sar
iret
(bad)
push
adc
add
and
scas
xor
add
xor
into
addr16
out
loopne
cld
sub
xchg
call
jno
fist
jo
add
pop
fbld
sub
aad
add
stos
and
add
pop
pop
dec
rol
cs
add
mov
xor
xchg
pop
ins
hlt
push
imul
sub
sbb
rcl
push
cmps
jmp
pop
sbb
pop
mov
and
mov
xchg
mov
ins
lods
mov
sti
gs
jg
aam
add
dec
test
dec
add
and
ja
adc
aad
or
enter
ret
jmp
or
loop
push
adc
cmps
inc
xchg
inc
xchg
cwde
pusha
mov
cmps
sbb
ret
sbb
or
jmp
adc
push
shl
adc
xor
add
mov
pop
sub
add
(bad)
push
dec
xchg
mov
cwde
outs
adc
cmp
and
inc
jle
push
(bad)
lock
and
iret
js
jo
push
mov
leave
mov
mov
xchg
jmp
ficom
inc
adc
and
mov
das
jmp
sbb
cmp
and
add
push
push
in
(bad)
fimul
and
lock
add
mov
fsub
add
push
pop
or
js
in
(bad)
jne
adc
jl
add
push
xchg
outs
add
push
xchg
adc
jnp
call
dec
mov
add
sub
outs
inc
ins
cmps
lods
jno
inc
fcmovb
sub
mov
loopne
sub
push
pop
adc
ret
mov
(bad)
push
arpl
xor
ss
or
xchg
ret
jg
out
cmp
add
mov
sbb
pop
pop
mov
movups
and
out
das
push
or
pop
leave
and
js
add
jecxz
imul
add
xor
fistp
es
xchg
xor
js
add
orps
lea
shr
movq
jmp
movs
sahf
lods
xor
das
push
fmul
ins
pop
shl
dec
fsub
jne
add
mov
fbld
xor
sbb
jmp
inc
or
inc
clc
arpl
aad
xor
xchg
inc
pop
mov
pop
and
lds
ret
dec
pop
xchg
imul
pop
mov
and
xchg
or
jg
or
inc
mov
add
jl
fiadd
jl
push
or
jmp
pop
sub
dec
rcl
es
xchg
dec
sub
adc
adc
xor
test
(bad)
loope
je
enter
mov
dec
jp
outs
lds
push
es
inc
cdq
in
mov
movs
ret
dec
or
retf
jb
nop
xchg
clc
cld
mov
adc
aaa
pop
or
push
jns
lock
ret
sysenter
or
ins
add
hlt
stc
mov
sbb
or
add
lock
sbb
add
mov
jge
inc
add
mov
lock
sbb
enter
adc
cwde
sbb
fwait
or
lahf
sti
or
stos
cmps
mov
lock
clc
jne
and
xor
add
rcl
push
lahf
jg
ins
fmul
test
jle
inc
or
test
mov
adc
sbb
mov
jl
call
xchg
sbb
sbb
in
aam
aam
cmc
movs
sbb
mov
or
xchg
sub
fidivr
lods
mov
mov
imul
inc
mov
mov
mov
sbb
dec
in
cmp
mov
pop
cs
xor
sbb
lods
add
sub
mov
sub
xchg
mul
mov
mov
inc
cdq
sbb
jmp
js
jne
jmp
retf
data16
ret
jg
add
retf
lahf
and
cli
or
js
(bad)
jmp
and
add
inc
sub
fwait
sbb
mov
and
icebp
ss
xor
mov
pop
xchg
sbb
shl
add
cmp
sbb
jle
inc
rcl
push
lahf
dec
or
push
test
mov
fsubrp
and
bnd
out
in
push
dec
push
jg
(bad)
loopne
push
add
(bad)
les
jle
dec
gs
mov
mov
xchg
je
iret
jg
(bad)
cmp
pop
sbb
push
inc
(bad)
jge
or
xchg
xor
push
shl
lea
inc
enter
mov
aas
pop
pop
push
movs
inc
and
mov
ret
aad
inc
xchg
movs
jg
fnstcw
neg
shl
inc
add
dec
mov
aas
and
jg
(bad)
(bad)
mov
xor
mov
dec
sub
adc
jns
icebp
retf
jg
jmp
lds
or
ficomp
mov
sub
fistp
loopne
mov
or
mov
shr
inc
cwde
je
ror
inc
and
dec
add
sbb
inc
add
and
mov
adc
jno
and
mov
mov
fcomip
or
movs
inc
xor
jmp
fdivr
and
aas
ror
(bad)
(bad)
adc
xchg
enter
or
gs
jnp
cdq
sbb
and
rol
pop
mov
adc
and
aam
mov
or
add
test
ja
mov
aaa
outs
add
pushf
pushf
ins
adc
or
stos
fwait
ins
jg
or
and
test
push
push
sub
or
sub
loopne
and
and
(bad)
pop
lock
or
in
test
add
arpl
ins
fwait
adc
sub
call
and
fistp
push
cmps
mov
mov
test
sbb
sbb
pop
jno
sbb
fild
ins
in
ret
fcom
pop
cmp
ins
push
cmp
jmp
xchg
or
sub
mov
in
sub
push
xchg
js
lea
lahf
mov
cdq
aaa
ffreep
(bad)
and
mov
aaa
ret
push
cwde
cmc
and
pop
fs
int
or
movs
adc
pop
loop
adc
repz
test
repz
or
adc
and
test
adc
sub
inc
xchg
or
mov
cli
jg
add
push
inc
jae
add
sub
adc
lahf
dec
or
mov
cwde
cmp
(bad)
ss
mov
and
push
icebp
pop
mov
and
push
inc
mov
push
js
dec
(bad)
push
popf
ror
pop
mov
addr16
push
jae
or
add
lahf
mov
and
sub
daa
mov
hlt
clc
xchg
dec
push
inc
sbb
outs
sbb
jo
test
or
mov
jp
add
jl
push
ss
mov
test
mov
mov
sub
push
push
inc
or
dec
xchg
stc
adc
add
or
and
icebp
adc
inc
jg
test
add
pop
fst
popa
dec
and
pop
cli
sub
pop
iret
mov
sbb
jp
aaa
add
xor
(bad)
jo
mov
add
and
or
in
das
dec
jmp
sar
push
xchg
loope
push
fdiv
out
sub
cs
loopne
sahf
clc
sbb
sbb
pushf
cmp
in
jl
inc
hlt
xchg
lock
in
loope
into
test
movs
add
aas
sbb
push
inc
adc
inc
add
push
push
push
sub
pop
add
add
sub
ret
call
mov
add
xor
ret
pop
in
out
add
lods
mov
or
add
xor
das
add
popa
fsubr
push
iret
enter
sbb
inc
push
repnz
ss
daa
repz
or
sbb
enter
jle
add
stos
sub
rol
adc
adc
rcl
call
add
out
xchg
mov
and
std
or
gs
inc
sbb
mov
test
fld
xor
or
mov
add
(bad)
cmp
mov
ds
out
mov
clc
in
inc
cmp
test
leave
punpckldq
jmp
in
jmp
pop
adc
add
stc
sti
mov
fcmovnb
xchg
aaa
add
(bad)
cmp
jmp
adc
cmpps
push
sub
outs
add
adc
or
test
push
in
xchg
data16
inc
adc
call
fadd
adc
aam
push
add
adc
mov
sbb
or
jo
dec
enter
cmp
es
(bad)
jecxz
xchg
inc
(bad)
sbb
leave
cmp
mov
call
pop
push
sub
pop
xor
pop
xor
dec
xchg
xor
in
inc
js
jo
arpl
add
add
add
and
aas
cmp
aaa
test
test
test
and
jo
and
jg
or
sbb
or
pop
adc
push
xchg
mov
push
and
cmc
mov
out
mov
mov
lods
xchg
mov
mov
jmp
sub
test
in
jnp
adc
pop
xor
inc
(bad)
push
loopne
push
sti
or
and
dec
pop
mov
mov
adc
sub
or
sub
loopne
retf
push
xchg
xor
push
shl
pop
adc
retf
sbb
push
fisttp
loope
inc
cmp
sub
mov
imul
dec
push
jns
pop
or
into
xor
push
frstor
test
xchg
sbb
fistp
and
sbb
sub
xchg
add
inc
dec
jge
cmp
lds
mov
mov
rol
inc
mov
adc
lods
and
xchg
ins
adc
outs
or
ret
dec
push
retf
adc
or
movs
adc
add
sub
dec
push
add
adc
dec
cmp
mov
(bad)
out
in
mov
cmc
mov
sbb
(bad)
cmp
aas
shl
iret
and
aaa
jb
loopne
loopne
jp
test
and
test
mov
sub
mov
in
jns
dec
and
jle
xchg
dec
das
ret
mov
test
test
stos
adc
lea
xor
in
push
lahf
cmp
push
ins
aas
mov
pop
dec
pushf
jmp
pushf
cld
fadd
pop
mov
adc
sbb
xchg
or
jg
jmp
lahf
sub
sub
(bad)
retfw
pusha
popa
sbb
pop
dec
dec
repnz
or
clc
retf
or
aam
push
jl
(bad)
pop
inc
cmp
pop
out
ret
lock
jne
ror
sub
xor
lahf
cmp
pop
inc
sbb
cmp
mov
jae
jmp
fld
mov
jae
and
jnp
add
pop
sub
dec
sbb
imul
rcr
adc
cdq
fstp
nop
add
mov
xchg
dec
add
rol
sti
cmp
push
movs
inc
or
arpl
adc
jns
mov
out
mov
jle
mov
jae
stos
int3
ss
les
unpckhps
cwde
jg
sbb
popf
aam
les
daa
xor
popa
lock
std
add
cmp
add
push
das
lods
mov
mov
jge
inc
add
dec
enter
rol
stos
repnz
add
mov
lahf
cli
dec
or
imul
jo
sbb
sub
loope
inc
sbb
imul
push
push
xor
pushf
pop
mov
fisttp
retf
clc
or
or
jge
jne
fwait
or
and
or
dec
sbb
adc
cmp
xor
mov
in
pop
and
pop
rcl
(bad)
rcl
dec
jae
hlt
and
cdq
and
imul
xchg
mov
fisttp
icebp
scas
xlat
mov
clc
rol
push
and
mov
fwait
adc
stos
test
sub
daa
or
jno
and
inc
jmp
jmp
loopne
push
add
addr16
dec
mov
and
hlt
jns
loope
sub
inc
mov
fdiv
mov
push
scas
pop
dec
lods
icebp
lock
adc
lea
xchg
cmc
inc
dec
arpl
mov
xor
sub
aad
inc
sbb
dec
out
jle
nop
push
xchg
(bad)
movs
add
fdiv
and
mov
sbb
add
lea
cmps
movs
ins
(bad)
shl
and
inc
add
cmp
mov
pop
mov
mov
ins
sbb
or
jecxz
pop
hlt
mov
mov
dec
popa
and
mov
push
and
adc
or
add
jecxz
dec
or
sbb
fistp
push
mov
mov
xchg
mov
mov
push
jmp
jae
or
mov
jl
mov
sub
sar
pop
jb
mov
mov
and
int3
jno
or
and
fisttp
dec
sub
cvttps2pi
inc
cwde
and
push
das
pop
in
scas
dec
sbb
xchg
pop
and
popa
jbe
(bad)
cmp
jl
mov
mov
out
cmp
adc
leave
in
fsubrp
fmul
or
ftst
or
inc
ret
fwait
loope
jecxz
mov
add
pusha
arpl
int3
bndldx
inc
push
pop
pop
scas
xor
pusha
or
je
push
out
jne
mov
adc
sub
jb
ror
ins
jmp
or
adc
push
or
xchg
adc
dec
or
xchg
fucomip
fadd
jne
inc
cwde
aas
imul
jmp
sbb
ret
pusha
jge
cld
push
dec
(bad)
push
jae
pop
out
dec
aam
leave
inc
mov
out
push
cmp
xor
inc
retf
sbb
mov
cmp
jmp
pop
lahf
dec
and
pop
loopne
(bad)
test
add
test
je
test
dec
and
add
mov
mov
(bad)
(bad)
(bad)
jle
rol
sub
sti
ins
pop
or
inc
cld
jb
test
mov
push
test
push
inc
fcmovu
cmp
int
inc
dec
sub
ret
adc
loopne
in
std
cld
pop
icebp
xor
inc
xchg
or
aaa
pop
adc
outs
loop
enter
fstp
mov
or
adc
aas
retf
cld
call
sbb
fmul
(bad)
loope
sahf
add
lods
adc
push
adc
cmp
shr
push
(bad)
add
jle
adc
cdq
ins
test
ins
ds
or
and
xchg
inc
es
and
jmp
cdq
jno
jb
dec
sbb
push
adc
pop
pop
js
mov
pop
retf
stos
popa
cmp
aaa
retf
xlat
nop
test
xlat
ja
push
xchg
rcl
rcl
adc
leave
or
dec
or
pushf
cmp
push
rol
mov
loopne
xsave
inc
arpl
jle
mov
pop
xchg
jae
xor
xor
cmc
inc
xor
in
sbb
jl
in
push
mov
lea
call
pop
cld
mov
pop
bound
mov
sbb
shr
xor
push
test
shl
inc
pop
sbb
push
mov
into
mov
lds
dec
lods
push
xor
inc
sbb
imul
adc
ins
lods
add
scas
fmul
adc
mul
cmp
push
(bad)
add
pop
xor
sbb
dec
add
mov
loop
push
sbb
rol
or
push
jbe
je
xor
out
or
and
push
aas
sbb
movs
adc
fcomp
outs
sbb
sahf
and
xchg
retf
mov
and
hlt
mov
ret
push
shr
fmul
stos
add
inc
jbe
shl
pop
xchg
xchg
nop
adc
fmul
push
adc
pusha
inc
call
fmul
push
lods
mov
xchg
adc
adc
inc
bound
pop
xor
mov
pop
nop
rcl
rol
xor
or
fstp
test
adc
sub
fldcw
mov
js
cmp
arpl
imul
popa
and
icebp
mov
jo
push
fdivrp
mov
test
cmp
mov
jg
lea
cmp
nop
jge
shr
add
add
arpl
fsincos
pusha
(bad)
jge
jns
(bad)
call
inc
mov
mov
cmp
ja
cmp
jbe
mov
jbe
pop
mov
cmp
add
sub
popa
das
std
sbb
mov
dec
add
or
jbe
mov
cmc
mov
outs
or
cdq
jne
pop
sbb
pop
ret
mov
jnp
hlt
pusha
arpl
icebp
or
mov
rol
jns
inc
jmp
or
mov
add
icebp
mov
jne
repz
inc
mov
(bad)
scas
in
dec
sub
mov
mov
dec
add
adc
sbb
aad
test
ins
jg
and
jg
adc
add
ds
pop
not
add
popf
lock
sbb
in
jg
sub
adc
in
lahf
rcr
or
mov
aad
push
jmp
dec
adc
sbb
pop
xchg
pop
mov
or
add
mov
add
sub
pop
fist
push
pushf
les
inc
jg
fsubr
rcr
cmps
scas
adc
shl
lods
inc
cs
ins
add
fs
pop
clc
sbb
dec
dec
dec
jecxz
scas
jmp
jmp
adc
inc
inc
lahf
enter
and
mov
ficomp
xor
or
push
loopne
or
pop
dec
les
xchg
das
pop
or
or
add
or
ror
sbb
mov
mov
(bad)
adc
jbe
icebp
or
ins
mov
pop
sub
inc
mov
or
mov
dec
push
push
mov
cwde
mov
je
push
ja
xchg
adc
add
or
cdq
add
nop
dec
mov
inc
retf
jp
cdq
or
fwait
sub
mov
cmp
jnp
lods
add
mov
pop
or
rol
mov
or
int3
ins
imul
and
inc
ins
mov
ret
(bad)
jge
call
dec
pop
loopne
dec
mov
mov
jge
fisttp
clc
or
and
lock
inc
cmp
pop
mov
mov
jb
mov
sub
jbe
mov
clc
add
inc
adc
push
xchg
cmp
push
and
stc
mov
sbb
loopne
mov
mov
(bad)
xor
cmp
in
dec
xor
iret
adc
loop
inc
inc
mov
(bad)
push
aam
adc
sub
popa
push
in
rcr
sub
fcom
cmp
xchg
outs
fs
or
je
enter
ds
inc
xchg
enter
imul
xor
sar
arpl
or
mov
or
mov
div
ins
loopne
mov
adc
mov
out
test
mov
mov
add
lods
adc
je
movs
sbb
xchg
xchg
mov
(bad)
sar
lods
lahf
mov
inc
nop
and
adc
xsaves
fist
inc
jl
and
icebp
sub
pusha
sub
(bad)
nop
adc
push
push
and
mov
in
into
fcomp
jns
arpl
jo
dec
mov
sbb
sub
and
imul
aam
push
or
xor
dec
sbb
cmc
push
push
xor
ret
xor
inc
mov
adc
call
jo
and
(bad)
cmp
sub
je
pusha
and
push
pop
ret
push
and
inc
aas
sub
sub
cdq
or
cmp
rol
add
add
fsubr
or
jnp
test
test
or
inc
nop
popf
mov
gs
or
jne
xor
movs
leave
pop
xor
scas
gs
lea
inc
aas
outs
shl
and
or
push
and
add
or
dec
xor
jb
inc
retf
call
add
int3
add
dec
test
test
push
inc
jb
popf
mov
push
cmc
or
dec
outs
add
xor
or
and
jmp
cdq
push
pusha
pop
(bad)
adc
jne
hlt
inc
mov
cmp
inc
mov
inc
or
xor
out
jl
repz
loop
rol
and
and
jmp
sbb
mov
xchg
or
imul
and
fcomp
jns
add
add
and
dec
les
and
mov
sub
jmp
xchg
push
or
jae
push
fbld
aaa
lahf
or
mov
mov
xchg
adc
test
and
pop
jnp
pushf
cmp
test
jg
retf
jno
loopne
in
jae
dec
dec
xchg
jmp
jb
push
enter
adc
pop
test
shl
(bad)
or
sbb
dec
call
call
je
sub
mov
cmp
mov
inc
lock
movs
pop
retf
(bad)
les
or
sub
ins
mov
add
adc
repnz
and
sub
and
test
in
push
add
jl
mov
sbb
adc
nop
push
mov
xor
cmp
push
sub
xadd
cmp
inc
js
scas
bound
inc
dec
push
add
xchg
test
lahf
sub
mov
mov
inc
add
pop
xor
and
cmp
or
ret
popa
or
popa
xor
int
sub
adc
call
jg
xor
and
jb
and
cli
adc
mov
pop
mov
push
adc
push
popa
pop
push
adc
in
sub
add
jge
push
enter
xchg
xchg
or
dec
rol
fadd
push
shl
js
inc
jns
sub
inc
pusha
pusha
and
adc
and
jae
test
pop
ret
and
mov
xchg
pop
sbb
push
xor
dec
adc
fistp
loopne
loopne
sbb
dec
js
fcom
mov
fsubr
dec
xor
dec
in
and
adc
pop
cmps
jl
fadd
dec
jae
fadd
push
(bad)
lahf
push
aam
movs
mov
add
mov
int3
mov
push
movs
fdiv
jg
sbb
mov
dec
inc
inc
ins
adc
es
add
mov
push
pop
mov
xor
sar
jecxz
nop
mov
je
push
add
nop
int3
sbb
jne
add
in
movs
test
xchg
adc
ss
std
dec
retf
sar
xchg
enter
out
iret
retf
mov
call
retf
retf
retf
popf
mov
lods
lods
pushf
(bad)
push
addr16
test
mov
retf
mov
adc
adc
cld
fstp
retf
pop
mov
cmp
push
aam
popa
into
movs
cmps
or
mov
xlat
and
pop
pushf
push
std
mov
lock
adc
xchg
xor
cli
adc
xor
movs
xchg
test
cmps
inc
add
pop
sar
ss
push
and
cs
cmp
cmp
mov
and
std
std
fstp
and
test
pusha
jmp
movq
movaps
(bad)
push
enter
shl
jle
test
data16
push
add
ror
rol
iret
adc
dec
cmp
pop
jl
and
retf
or
jg
(bad)
icebp
fld
jmp
jnp
mov
popa
(bad)
rcl
aam
pusha
mov
pop
adc
or
xor
(bad)
fld
add
fadd
rol
add
jg
mov
push
shl
addps
int
xor
ret
lock
dec
sbb
rcr
loopne
lock
mov
test
popa
cld
(bad)
cld
fnclex
jg
adc
adc
or
and
out
stc
adc
rcr
xor
cs
sbb
loopne
loop
arpl
jae
sbb
mul
mov
das
mov
cmp
adc
out
pop
add
mov
jno
clc
ds
adc
ins
fmul
ret
aaa
adc
add
pop
lahf
fcomip
out
je
pop
and
fld
fld
sbb
jl
adc
jecxz
fild
push
push
and
(bad)
mov
jmp
fstp
icebp
add
push
js
add
dec
mov
pop
inc
rcr
sub
das
fcomp
cmp
imul
ret
mov
add
adc
mov
add
cmp
shl
imul
test
(bad)
jge
outs
imul
inc
or
fcom
push
mov
inc
clc
sar
cmp
xchg
movs
jg
cli
add
xor
fdecstp
or
ror
push
fiadd
mov
mov
ror
jmp
jl
stos
mov
dec
jmp
ret
jg
add
pusha
stc
ins
scas
mov
mov
push
adc
les
mov
sbb
adc
push
mov
loope
pop
inc
push
or
or
das
and
fxch
loope
xchg
cli
cmps
mov
stos
pushf
cmp
dec
inc
cmp
ror
inc
add
mov
nop
cmp
sub
mov
mov
xchg
or
adc
adc
or
pop
jbe
movs
movs
addr16
aas
mov
jmp
inc
pop
push
cmp
call
add
movs
dec
aas
cmp
pop
mov
loopne
or
fdiv
or
clc
je
or
sbb
pop
mov
nop
and
lods
xchg
cmp
mov
sub
pop
and
int3
inc
ins
inc
(bad)
push
ret
or
ror
or
into
aam
inc
dec
xor
aam
dec
sub
enter
iret
or
outs
sbb
ret
push
sub
sub
jo
or
and
jo
ds
jns
push
imul
mov
cs
mov
sbb
js
cmps
and
int3
int3
xor
ror
xchg
add
mov
add
test
dec
iret
sub
fild
imul
pop
loope
pushf
or
cmps
lds
adc
loope
dec
xchg
popf
movs
pushf
(bad)
inc
push
adc
test
dec
je
aaa
push
jo
and
scas
sbb
mov
and
mov
mov
cmps
retf
in
shl
or
les
sbb
mov
add
mov
data16
pop
add
adc
pop
imul
adc
sbb
or
sbb
or
ficom
mov
stos
das
pop
stos
mov
jo
jle
je
fsqrt
add
push
lods
lea
xchg
aad
lock
mov
loop
jecxz
push
adc
jge
fidiv
add
adc
and
dec
cmps
in
add
sub
mov
push
and
mov
xor
and
in
fnstsw
scas
icebp
pop
jecxz
push
das
loopne
outs
nop
clc
xor
mov
dec
mov
cmp
lock
and
add
sub
out
pusha
jecxz
adc
adc
xor
out
loope
rol
mov
popf
pop
pop
fbstp
int
cmp
ret
or
xor
popf
cld
daa
js
lock
adc
mov
sbb
imul
and
adc
je
ds
and
jg
dec
imul
sub
jne
dec
or
push
xor
xchg
into
xchg
jmp
and
enter
cmp
jnp
adc
scas
adc
cwde
ins
lahf
mov
cld
cld
sbb
inc
cmp
mov
mov
xchg
pop
xor
stos
adc
cld
add
or
add
sbb
loope
and
retf
jae
mov
or
test
retf
pop
enter
in
sbb
aam
xchg
add
aas
add
mov
jae
push
cmp
jmp
ss
loopne
inc
jb
push
test
cwde
pop
xor
ret
adc
or
imul
enter
jmp
loope
sub
dec
pop
xor
jo
inc
inc
mov
jns
aad
sub
mov
push
and
jg
cdq
pusha
xchg
lock
mov
dec
stc
xor
xchg
bound
dec
lahf
pop
shl
call
jb
add
test
(bad)
imul
sub
push
push
dec
mov
cmp
mov
shl
jb
jle
or
adc
pop
leave
enter
sbb
sbb
mov
nop
mov
mov
pop
adc
xor
xchg
or
call
je
iret
push
popa
inc
aas
add
fs
loop
fimul
in
daa
or
iret
jmp
das
jmp
xchg
ss
call
inc
cs
or
sbb
add
or
loope
xchg
xchg
mov
sbb
adc
inc
xor
or
pop
or
add
add
jns
mov
push
and
pop
leave
push
sbb
jbe
mov
adc
xchg
xchg
mov
push
mov
or
gs
sbb
add
fs
jl
pop
pop
cs
xchg
mov
sbb
xor
jmp
inc
(bad)
ud2
mov
or
pop
in
test
add
out
test
(bad)
hlt
mov
add
inc
cs
and
jmp
add
inc
add
dec
cmp
or
fild
mul
adc
in
out
push
iret
repz
jle
jecxz
add
pop
ret
idiv
jnp
fistp
pop
xor
mov
lea
repz
dec
xchg
mov
repz
xchg
add
inc
or
sbb
cmp
je
aaa
lock
push
or
pop
(bad)
mov
xchg
xor
mov
lock
dec
adc
xchg
push
pop
add
(bad)
cld
lahf
push
shr
add
or
xchg
sbb
xchg
mov
and
call
enter
xchg
retf
lock
dec
in
inc
les
loopne
push
jb
inc
lock
dec
and
mov
pop
adc
and
sbb
jmp
jl
jno
jg
mov
mov
jae
fdivr
mov
sub
sub
push
mov
inc
xchg
cli
hlt
or
rol
fld
test
push
mov
adc
jmp
inc
xor
or
or
into
mov
pop
(bad)
sbb
rcr
clc
add
loopne
retf
fst
jb
adc
sbb
add
sar
sbb
add
jbe
mov
int3
and
or
int
imul
add
adc
and
rcr
xchg
adc
cwde
mov
retf
test
call
pop
daa
jecxz
fsub
dec
imul
mov
ins
fcomp
push
cmp
push
jne
orps
jnp
xchg
and
sbb
mov
sbb
or
sahf
lahf
inc
sbb
push
ficomp
loopne
xchg
add
scas
add
fwait
outs
and
mov
xchg
add
je
sub
mov
stc
add
cmp
xor
and
pusha
retf
es
rol
stos
mov
aas
jb
and
xor
call
jne
push
adc
or
dec
xchg
dec
popa
add
mov
sub
pop
repnz
mov
test
inc
and
add
mov
test
es
mov
add
adc
dec
or
add
retf
lods
push
or
add
or
fs
out
sbb
xchg
mov
sub
clc
fadd
imul
mov
mov
or
dec
adc
pusha
shl
std
adc
mov
into
movzx
xchg
push
lock
cli
fdivr
sub
out
cmp
jnp
icebp
mov
adc
add
inc
xlat
xor
movs
mov
lock
in
lahf
pop
ret
test
lahf
sbb
pop
jbe
mov
add
mov
clc
or
dec
add
data16
mov
xlat
push
loopne
pop
outs
dec
loopne
jecxz
retf
add
cmp
cmp
pusha
leave
or
int3
ret
jno
jns
add
lahf
out
or
retf
xor
sub
and
xor
hlt
mov
outs
xor
and
mov
nop
push
jecxz
fiadd
pop
in
in
xchg
test
jnp
mov
sbb
je
sbb
xchg
popa
ins
xchg
jge
rol
jmp
push
(bad)
sbb
shl
jns
add
scas
jae
or
mov
call
mov
es
call
or
or
pop
jle
nop
push
enter
lods
sbb
mov
xchg
dec
dec
cmp
mov
add
inc
and
(bad)
retf
cmc
adc
xor
add
pop
mov
popf
test
xor
bound
dec
mov
stc
sbb
sbb
shl
push
outs
jg
into
sbb
loopne
mov
add
xor
sbb
das
and
sub
mov
or
int3
and
adc
les
or
invd
jae
inc
aas
movs
mov
dec
push
mov
jae
or
dec
sti
test
sbb
sbb
fs
sbb
inc
xchg
jne
nop
rol
jmp
cmp
add
xor
add
addr16
mov
cmc
gs
and
or
cmp
and
mov
push
ins
fwait
inc
push
(bad)
xor
repnz
jae
rol
scas
mov
mov
sbb
and
cdq
and
sub
adc
adc
add
push
test
and
or
ret
mov
push
and
add
jp
jb
xor
xor
ret
jae
ja
sub
imul
int3
mov
das
or
cwde
ret
cmp
call
push
dec
push
int3
fs
cmp
sub
(bad)
lock
jae
sbb
jnp
popa
mov
add
mov
ja
sub
scas
add
ror
aaa
leave
jae
pop
fwait
lahf
sbb
lahf
pop
loop
add
popa
dec
push
inc
and
pop
sub
inc
sbb
xor
fld
push
push
jg
pop
add
popa
add
mov
or
inc
adc
fldcw
add
lea
or
sub
push
adc
dec
dec
add
jae
arpl
jnp
push
cld
icebp
lock
jl
movs
lods
fwait
and
add
mov
hlt
mov
fidivr
clc
cmp
or
or
or
jle
adc
jl
jae
cmps
add
xor
loopne
cmps
xacquire
test
fmul
jbe
loope
ret
dec
xchg
add
and
push
movs
lea
add
sub
cmp
in
or
mov
int3
or
scas
pop
lods
add
lahf
dec
mov
test
add
jnp
cmps
push
popf
daa
or
loope
retf
or
das
das
xchg
in
xor
nop
test
push
inc
pop
mov
xchg
inc
and
test
ins
cwde
xchg
adc
aam
lahf
and
lods
jge
and
test
add
in
std
sub
je
mov
mov
mov
xchg
jno
cmp
and
ret
pusha
jae
fwait
push
inc
xchg
push
rcr
sbb
test
jmp
retf
pop
rcr
adc
xor
and
mov
cmp
cmps
sbb
push
jle
adc
jnp
test
call
and
add
xchg
mov
pop
xchg
inc
push
pop
mov
enter
daa
cld
pop
cmp
ror
je
fstp
into
xor
push
out
cmp
ret
or
loope
jl
add
sbb
add
push
clc
test
push
adc
mov
add
ja
addr16
dec
mov
sub
(bad)
inc
jb
test
mov
shr
mov
sbb
mov
mov
mov
cmp
dec
cmp
aas
dec
or
inc
leave
in
bound
nop
push
pop
rol
test
pop
pop
and
aam
gs
cmp
std
fld
xchg
sbb
adc
cmc
out
sbb
xchg
scas
adc
mov
dec
push
repnz
mov
xor
in
pop
dec
push
or
loopne
and
or
xchg
ffreep
inc
add
jnp
aam
(bad)
and
mov
add
or
cmp
inc
and
pop
(bad)
jmp
fwait
and
push
adc
or
xchg
push
adc
fiadd
and
mov
sbb
fwait
push
dec
xchg
ficom
and
cs
pop
out
and
dec
dec
nop
jl
nop
or
fs
and
xchg
and
lods
loopne
mov
or
pop
pop
inc
jmp
add
cmps
add
retf
adc
leave
cmp
sbb
imul
jge
sbb
add
jne
adc
dec
add
jo
popa
retf
mov
inc
nop
js
in
mov
jne
mov
adc
cmp
test
push
lea
xor
int
xor
fcmovnbe
push
outs
nop
cdq
sbb
add
or
pop
add
hlt
adc
sbb
cwde
sub
adc
xchg
fld
cmp
daa
mov
push
aaa
cmp
adc
add
out
or
mov
fld
or
or
cmp
jmp
aad
xor
xchg
fadd
cmp
sar
outs
adc
jmp
cmp
pop
shl
hlt
xchg
and
push
or
add
(bad)
push
mov
mov
and
add
retf
cmps
aas
mov
mov
mov
add
and
call
cdq
add
stos
and
xchg
pop
and
pop
pop
sub
jmp
push
test
and
inc
test
(bad)
aaa
sbb
or
(bad)
xchg
mov
jle
cmp
aaa
mov
jg
test
mov
push
fwait
or
xlat
scas
xor
or
bound
mov
test
fs
dec
dec
jb
je
xchg
or
mov
(bad)
gs
inc
xor
sub
mov
icebp
mov
mov
mov
out
xor
push
lahf
jo
dec
aam
add
mov
ja
jo
cmp
pop
jb
pop
add
fild
daa
xor
scas
sbb
enter
pop
test
icebp
and
jmp
mov
pop
fld
jge
cwde
mov
pop
fstp
nop
sbb
and
mov
ror
cmp
iret
jno
(bad)
(bad)
jl
jl
outs
mov
push
pop
leave
daa
mov
aam
fsubr
pusha
pop
add
cmp
mov
mov
je
jo
dec
(bad)
xor
jmp
pop
xchg
push
js
and
mov
ins
and
daa
sbb
pop
sbb
ret
es
xchg
or
dec
jge
dec
int
push
outs
out
push
xor
jns
adc
or
lahf
adc
dec
dec
push
dec
xchg
ficom
mov
rol
mov
sub
enter
ret
ret
sub
jae
test
mov
sub
and
outs
push
sbb
sahf
sub
cmp
bound
pushf
in
rol
jne
pop
jne
ds
add
ja
xchg
pop
mov
cmps
dec
stos
das
sbb
xor
sub
and
popf
push
push
adc
sbb
dec
ret
call
add
movs
cmp
les
rol
cli
aad
mov
or
mov
jle
les
pop
loope
dec
mov
sbb
(bad)
movs
cmp
mov
cmc
or
jae
cmps
cmp
pusha
cmp
adc
mov
push
add
adc
pop
or
mov
jmp
sub
mov
movs
or
lods
pop
adc
push
mov
sar
push
jecxz
neg
dec
and
jl
das
jge
lea
adc
sub
push
jo
adc
test
pop
fild
mov
movs
jne
add
push
xor
movs
and
jae
sbb
sub
dec
add
ret
fistp
test
mov
add
dec
adc
ins
les
sub
pop
sbb
mov
add
adc
mov
push
mov
cmp
cdq
sub
cld
test
lahf
add
adc
sbb
rcl
add
add
sbb
inc
sub
(bad)
mov
cli
pop
or
adc
and
sbb
call
push
jg
sbb
inc
sub
sbb
inc
ret
dec
push
or
icebp
cdq
nop
mov
mov
jp
jp
ss
xchg
rcl
movs
jge
sar
(bad)
cmp
jbe
cmp
cmp
and
fdivr
out
and
dec
pop
pop
jne
js
je
je
lods
test
inc
adc
mov
xchg
sub
movs
add
pop
rol
or
fs
mov
mov
cmp
jb
add
sti
sti
mov
mov
js
lea
adc
nop
or
push
mov
and
mov
mov
mov
mov
or
inc
mov
mov
(bad)
mov
sbb
and
add
and
or
repz
jnp
dec
push
inc
cmp
sub
cmp
iret
and
mov
mov
call
iret
in
in
lock
hlt
add
repz
clc
cld
fcomp
mov
add
add
fnstenv
mov
mov
and
add
mov
int
ds
inc
pop
sti
and
or
rol
push
pop
jno
or
cmp
or
mov
(bad)
cld
out
adc
neg
xchg
mov
mov
daa
stc
fisubr
xchg
sub
add
nop
push
adc
cmp
inc
jnp
fiadd
jl
mov
fst
sahf
inc
xchg
push
ficom
push
add
imul
pop
add
jmp
push
mov
mov
repz
aam
in
repz
jae
sbb
sbb
adc
repz
adc
adc
or
leave
repz
add
loope
fidiv
or
push
sbb
cmp
rcl
push
add
pop
mov
adc
(bad)
ja
and
call
push
bound
or
fisttp
add
ds
or
mov
je
sub
sbb
push
mov
shl
lea
or
hlt
je
clc
fstp
repnz
ret
push
in
or
retf
mov
daa
stc
xor
xor
push
mov
pusha
and
imul
and
jmp
in
adc
movs
fucomi
mov
inc
(bad)
jp
(bad)
pop
or
jo
add
cld
aas
mov
xchg
in
ins
sub
push
daa
jo
or
add
add
xchg
mov
bound
popf
mov
pusha
ret
add
xchg
add
neg
cmp
add
jmp
mov
adc
bound
xor
in
(bad)
mov
pop
inc
pop
dec
pop
mov
jg
push
add
mov
sub
fst
adc
mov
fild
jne
sub
push
not
in
and
repnz
gs
mov
add
sub
jbe
mov
mov
mov
ficomp
cmp
pop
mov
push
xor
ror
jae
sub
or
jo
xor
icebp
jb
push
jbe
cmp
or
inc
cmp
or
push
mov
sub
clc
loopne
(bad)
lea
clc
fdivr
or
sbb
add
into
call
or
mov
xor
dec
ins
ret
popa
xor
mov
pop
xor
lods
cmps
pop
xor
shl
and
or
cs
loopne
mov
test
sahf
sbb
cmp
cmp
mov
pop
pop
addr16
addr16
mov
and
js
sbb
push
jl
pop
fisttp
add
or
push
cmp
dec
and
loop
push
ins
cmp
add
sub
sub
push
(bad)
push
lods
xchg
cmc
or
int3
push
loopne
rcr
jp
bound
jl
jno
(bad)
dec
sbb
and
sub
jbe
or
mov
or
lea
ffreep
popf
adc
nop
add
sti
or
sub
imul
dec
cmp
(bad)
or
bound
xchg
outs
or
je
sbb
xchg
mov
add
sub
leave
mov
mov
jne
sub
mov
xchg
xlat
push
test
mov
popf
ret
gs
arpl
lahf
in
jne
mov
(bad)
sbb
mov
mov
add
lock
cld
or
pusha
loope
or
sub
sbb
sbb
or
mov
xor
fstp
push
mov
addr16
shl
js
test
lahf
push
and
daa
sub
add
shl
add
pop
xchg
adc
or
xchg
mov
pop
lahf
jnp
or
or
nop
fbstp
add
dec
dec
imul
cmps
mov
adc
data16
punpckhwd
sbb
pop
pop
mov
sub
push
sub
mov
(bad)
out
and
inc
and
inc
xor
xchg
mov
movs
jecxz
data16
adc
mov
cdq
cmp
mov
lock
movs
jns
sbb
movs
ret
aaa
adc
and
or
inc
jo
push
dec
pushf
mov
or
push
repnz
jp
js
cs
mov
xor
clc
jo
sub
push
xor
jle
mov
push
jae
and
sbb
adc
das
and
sbb
add
push
cmp
adc
js
or
jbe
jb
push
cs
rcr
sub
sub
xor
sbb
jnp
mov
mov
inc
je
data16
mov
lahf
push
push
and
pop
test
mov
inc
adc
cmp
or
pop
out
add
or
mov
jg
fsub
or
add
cmp
inc
dec
iret
and
or
iret
xor
xor
imul
mov
cmp
movs
mov
test
inc
popa
mov
iret
xor
cmp
sub
das
sbb
arpl
mul
sub
mov
and
add
add
add
imul
or
dec
fstp
xlat
test
add
and
push
sub
push
or
adc
mov
jg
pop
and
sub
inc
jns
cmc
inc
inc
fisttp
and
mov
push
jge
inc
cmp
inc
inc
pop
dec
int
loop
push
inc
jno
xchg
xchg
je
adc
push
and
jecxz
sub
inc
nop
call
mov
test
lods
add
ret
add
test
fdivr
xchg
ror
fmul
sub
pop
mov
mov
xor
(bad)
fst
pop
add
xchg
retf
rcr
cdq
sub
imul
jb
add
push
push
push
push
or
lds
inc
add
loopne
adc
cmc
ficomp
leave
aaa
sub
or
xor
sub
xchg
and
push
or
add
push
aad
test
mov
xor
rol
in
and
loopne
or
mov
fcomp
loopne
clc
add
jp
xchg
add
jbe
and
dec
add
xchg
cmp
xor
adc
in
or
inc
ret
test
imul
int3
or
lods
xchg
and
hlt
xor
cmc
or
ins
ret
cmc
or
sbb
jmp
or
and
retf
inc
retf
ror
sar
sub
push
enter
pop
outs
movs
mov
jmp
clc
xchg
daa
push
clc
sub
sbb
ret
push
ret
pop
xchg
inc
ins
outs
add
xchg
cmp
popa
pop
fs
push
sub
push
bound
mov
sub
xchg
cmc
ret
daa
jno
or
cmp
inc
pop
retf
lock
repnz
mov
cwde
mov
bound
jmp
sbb
lods
mov
call
add
push
(bad)
or
leave
mov
or
call
or
call
dec
lds
add
adc
dec
ror
cmp
jmp
and
adc
sbb
dec
pop
pop
add
call
cwde
loope
cmp
loop
mov
mov
pusha
cmp
or
sub
fcomp
xlat
std
xor
add
pop
jg
xchg
loop
push
sub
xor
add
pop
mov
jbe
adc
gs
gs
loop
xor
in
stc
mov
xchg
jne
and
xchg
jne
xor
and
add
add
mov
mov
or
mov
or
sub
loopne
cmp
jg
xor
fsubr
dec
adc
jge
xchg
pop
adc
adc
mov
push
retf
mov
in
in
or
addr16
lea
aas
xchg
das
and
xor
jne
jmp
pusha
test
xchg
jecxz
mov
inc
cmp
sub
jno
ret
scas
lahf
or
xor
sbb
dec
inc
test
dec
mov
push
cmc
je
ror
add
fs
mov
jne
sub
in
rol
dec
xchg
jbe
push
ds
jmp
xchg
lahf
fdivr
xor
ins
daa
adc
sbb
imul
test
add
xchg
ins
call
mov
sar
cld
adc
xor
or
add
xchg
jns
ret
cmp
add
dec
lea
cmp
aas
and
(bad)
int3
(bad)
mov
add
dec
rol
add
or
mov
imul
xchg
imul
pop
loopne
jno
mov
aaa
or
mov
in
jecxz
push
or
adc
push
data16
adc
arpl
fst
mov
dec
xor
and
and
cmp
ret
xor
push
rol
mov
mov
or
xchg
or
test
das
sbb
sbb
jbe
addr16
jecxz
mov
icebp
and
mov
push
mov
lods
sbb
jp
sbb
sbb
fwait
push
nop
jae
aam
or
xor
add
std
out
mov
repnz
jbe
mov
xor
lods
ins
mov
call
test
mov
cmps
adc
add
or
nop
shl
psubd
or
or
leave
mov
cs
mov
mov
fcomip
push
test
jle
pushf
pushf
jmp
jmp
jmp
sbb
jecxz
jg
and
dec
aas
jecxz
pop
hlt
test
dec
cwde
cwde
jmp
push
imul
or
mov
stos
test
push
and
ret
adc
call
pop
pop
xor
or
rcl
pop
ret
mov
das
mov
jl
dec
mov
out
push
sbb
ja
pop
jne
(bad)
in
push
les
add
mov
or
(bad)
(bad)
(bad)
jmp
pop
jnp
test
mov
lock
cmp
adc
xchg
or
add
sahf
add
dec
sbb
icebp
pop
add
int
clc
mov
cdq
pusha
dec
ins
in
jecxz
aas
and
xchg
sub
aas
lahf
adc
xchg
movs
ins
add
inc
nop
clc
push
mov
addr16
es
daa
pusha
sub
pop
cmovge
cmovs
out
das
add
sbb
lods
mov
test
adc
xchg
inc
(bad)
and
test
nop
addr16
fstp
call
or
fist
cmp
retf
out
addr16
jae
(bad)
xor
popa
loope
inc
sub
inc
mov
ds
xor
icebp
push
push
pop
pop
jae
cld
jne
and
rol
pop
sub
or
mov
ins
adc
or
add
ja
dec
std
cmp
rcl
mov
mov
mov
sub
adc
test
xor
sub
aaa
inc
ror
out
je
jne
pop
je
cmp
mov
sbb
jb
pop
and
and
in
mov
sbb
call
cmc
mov
retf
cli
ret
mov
in
leave
in
jmp
out
jecxz
out
cmp
mov
add
aam
test
mov
push
pop
and
xchg
in
jmp
or
pushf
xor
or
fst
ror
popf
add
mov
or
xchg
or
in
out
dec
add
sub
jne
pop
sbb
add
mov
pop
push
js
inc
ficomp
adc
sbb
pop
or
test
ss
out
add
pop
adc
sbb
pop
dec
adc
xchg
div
outs
jb
scas
sbb
xchg
adc
and
outs
mov
sub
cli
in
sub
inc
clc
jle
add
and
and
fild
aas
int
cld
cmp
in
shl
xor
(bad)
push
sbb
fcomp
out
addr16
cmp
(bad)
dec
pop
repnz
push
aam
or
adc
sbb
jmp
mov
jbe
and
imul
cwde
aad
sub
sub
mov
dec
add
test
add
xor
xchg
push
jmp
jl
fdiv
pop
jb
fsubr
rol
xor
stos
adc
add
jo
sub
jno
xchg
cdq
pop
or
cdq
sub
es
add
or
sub
or
test
scas
sbb
aaa
mov
xor
add
mov
sub
inc
(bad)
xor
or
pushf
mov
lock
lea
inc
(bad)
les
xchg
jb
mov
pop
xchg
mov
loop
hlt
and
sub
jmp
cmp
lahf
pop
mov
sub
sbb
ins
xchg
fsubr
sbb
jb
fcomp
push
nop
imul
mov
xchg
dec
xchg
mov
leave
aas
sahf
imul
das
pop
int3
cs
sbb
and
add
outs
or
jns
(bad)
rol
add
pop
aam
cmp
sbb
or
jl
dec
nop
jb
and
(bad)
mov
add
sub
and
enter
nop
pop
cs
rcl
mov
rol
ja
inc
out
pop
data16
fsub
in
xor
movs
leave
cmp
loop
out
es
sahf
mov
sbb
pop
out
push
pop
mov
shr
rcr
jmp
out
out
inc
and
neg
add
mov
cmp
add
sbb
xchg
inc
xor
add
jl
add
push
adc
or
add
(bad)
adc
jmp
pop
cmp
jge
sub
je
pop
jne
adc
xor
into
adc
jnp
clc
cmps
ret
gs
fidivr
sahf
loope
adc
add
jne
push
ror
out
sti
push
cdq
test
mov
push
push
ror
cmc
pusha
aas
(bad)
es
icebp
call
or
adc
jecxz
add
popf
loopne
jl
cmps
jp
js
mov
daa
call
inc
dec
dec
jnp
pushf
aaa
xchg
sbb
sbb
jb
pop
mov
jne
sub
sbb
jb
xor
call
sub
and
pusha
stos
test
push
adc
push
movs
int
out
adc
add
mov
cmp
jns
jmp
enter
adc
gs
(bad)
push
push
mov
xor
pop
mov
and
jbe
enter
pop
imul
xchg
jnp
or
xlat
mov
imul
mov
and
mov
enter
lahf
call
and
add
adc
mov
adc
test
lar
out
pop
les
pusha
dec
add
(bad)
retf
ret
cmp
pop
sbb
push
inc
dec
fs
dec
mov
dec
push
sub
mov
sub
mov
inc
xor
in
nop
je
mov
mov
ins
gs
dec
in
loopne
aam
or
push
shl
or
cmp
sbb
add
nop
mov
add
xor
mov
or
shr
xor
rcr
pop
cwde
add
pop
cmp
add
mov
enter
mov
jne
adc
imul
(bad)
mov
xor
xor
pop
xor
mov
lahf
xor
push
or
rcl
daa
mov
stc
xchg
or
cld
mov
mov
push
mov
and
and
(bad)
fidivr
leave
sbb
cmp
and
sar
push
fs
cmp
or
movs
fsubr
push
adc
sti
or
mov
jecxz
rol
and
inc
pusha
fidiv
arpl
jo
and
dec
mov
adc
xor
push
gs
add
loope
in
inc
xor
mov
outs
fxch
sub
pop
fcom
add
fsubr
repnz
mov
inc
mov
shl
shl
dec
ret
push
int3
je
adc
(bad)
int3
cmp
shr
repnz
test
cwde
push
inc
nop
dec
pop
and
dec
jmp
pop
pop
and
aam
jle
pop
add
inc
in
push
ds
mov
inc
hlt
jmp
scas
mov
add
addr16
imul
or
test
or
inc
add
and
shl
je
cwde
jmp
add
pop
mov
fcmovbe
call
call
push
fwait
mov
mov
(bad)
out
popa
xor
sbb
sar
push
push
push
ins
sti
cli
gs
rcl
cmp
dec
lods
or
jl
cs
or
mov
retf
inc
sbb
or
adc
mov
add
ja
mov
imul
pop
fstp
fadd
and
mov
cmp
push
sub
cld
push
scas
neg
shl
cmp
ins
push
test
mov
cld
(bad)
(bad)
mov
jne
repnz
inc
sbb
loopne
inc
data16
test
(bad)
call
or
(bad)
mov
mov
leave
jge
xor
xor
or
push
sbb
in
test
or
lock
push
(bad)
jmp
in
rcr
cdq
aam
and
scas
adc
or
shl
mov
inc
cld
and
test
pop
gs
inc
mov
jmp
sub
cmp
mov
sub
jo
jo
aad
push
xor
icebp
or
sbb
cmp
xor
std
idiv
inc
inc
pusha
sbb
xor
xor
sub
sub
out
inc
jbe
adc
xlat
enter
inc
call
adc
or
(bad)
fistp
inc
jnp
movs
push
push
push
fild
jg
adc
or
mov
add
cmp
jecxz
or
add
xor
or
sbb
and
or
jg
fmul
dec
pushf
sbb
or
fist
test
das
mov
das
shl
and
inc
push
add
call
dec
and
subsd
iret
add
and
out
xlat
das
rol
add
imul
add
add
aad
or
or
repnz
aad
inc
push
inc
push
inc
fild
push
inc
jae
dec
or
xchg
jo
(bad)
inc
sub
push
pop
int
mov
aam
xchg
xor
pop
mov
mov
or
jns
jle
and
cmc
mov
or
icebp
xor
jb
cmp
fmul
sub
xor
push
scas
or
lahf
(bad)
jg
jl
inc
jae
jle
mov
pop
jl
pusha
fbstp
movs
aam
outs
inc
xchg
jbe
or
js
mov
adc
addr16
aaa
ss
dec
enter
xchg
dec
push
mov
fimul
dec
popa
sbb
pmulhuw
das
loopne
push
jae
or
xchg
lock
push
jmp
jbe
mov
push
mov
xor
and
(bad)
xchg
sub
dec
or
sub
sbb
adc
popa
loopne
mov
and
add
jbe
in
or
cmp
fimul
add
add
xchg
xor
arpl
test
aaa
daa
xchg
call
mov
push
lock
ins
jge
push
(bad)
mov
ins
add
pop
add
push
or
and
mov
cs
cmp
add
sti
fld
add
sub
stos
cmp
mov
sbb
mov
pop
xor
jge
rcr
xor
add
dec
leave
push
jb
sbb
jb
push
mov
fsubr
mov
or
sub
fxsave
sbb
rcr
idiv
sub
xor
dec
or
dec
or
push
xchg
cs
out
or
int
mov
mov
adc
call
cmps
pusha
inc
or
adc
adc
pop
loopne
mov
lea
mov
push
adc
pop
adc
call
add
scas
imul
bound
aad
or
scas
sbb
push
(bad)
test
rol
mov
push
movs
rcr
dec
hlt
sub
cmp
fidiv
cwde
mov
push
add
add
arpl
bound
sub
dec
inc
pushf
lock
or
sbb
add
ret
adc
movs
jo
pop
mov
or
mov
mov
lds
sub
leave
scas
pop
add
mov
or
jo
pop
lds
or
inc
call
scas
sbb
or
inc
cmp
inc
fs
test
out
mov
jle
and
adc
cmp
je
test
je
xlat
jmp
fcom
dec
fisubr
adc
leave
xchg
div
retf
mov
movups
(bad)
iret
xor
movs
in
push
sub
je
sti
imul
add
pop
pop
pop
in
mov
push
inc
cld
cmp
je
or
cmp
and
jecxz
daa
adc
aas
iret
repz
and
fadd
aam
xchg
in
test
pop
sti
outs
or
adc
add
cmp
pop
(bad)
in
jl
push
xor
mov
xor
mov
push
or
jns
inc
cmp
push
outs
movs
pop
rcl
xor
test
(bad)
adc
pop
pop
xchg
retf
sbb
pop
pop
dec
jmp
and
bound
cwde
xchg
stc
add
(bad)
pop
shl
add
or
add
adc
mov
int
ror
sar
movsx
je
shl
dec
loope
xchg
xchg
dec
loope
test
int3
push
int3
xchg
or
mov
sar
ror
dec
ins
sbb
mov
outs
fisttp
shr
sub
inc
push
xor
dec
sub
xor
or
xchg
dec
mov
inc
xor
aad
or
movnti
fdiv
add
stos
jl
or
mov
lahf
mov
dec
mov
shl
pusha
lahf
push
or
pushf
cmp
jns
pop
enter
and
or
imul
dec
xor
lahf
push
or
lea
cs
pop
mov
add
int
out
adc
or
cmp
and
sub
cmp
jmp
dec
mov
adc
jg
sar
sbb
xchg
xor
and
sub
inc
xchg
push
or
xor
inc
pop
mov
or
aad
into
sub
pop
mov
and
int
adc
clc
clc
hlt
hlt
or
hlt
sub
in
in
jge
and
call
call
inc
mov
das
es
jo
in
retf
inc
push
or
xor
add
pop
out
inc
mov
leave
sbb
and
out
cmp
dec
or
sbb
outs
add
xchg
popa
jns
jns
sub
(bad)
inc
and
push
jae
sub
add
dec
movs
movs
repz
scas
(bad)
inc
je
popf
ret
jnp
adc
pusha
add
inc
retf
fsubr
xor
pop
xchg
call
ja
add
call
sbb
test
jmp
xchg
add
pop
mov
lods
mov
sbb
sub
pop
pusha
or
mov
lods
jg
call
sub
pop
mov
mov
pusha
in
jae
mov
adc
xchg
test
push
adc
pop
enter
test
push
mov
mov
cmp
jmp
retf
push
mov
pop
lea
ficomp
std
(bad)
sub
push
and
and
outs
retf
and
fcmovnbe
pusha
add
dec
mov
xlat
jg
xor
cmp
adc
sub
push
and
push
mov
fwait
sub
sbb
cmp
add
pop
mov
das
pop
les
adc
xchg
and
mov
jp
pop
cmp
pop
test
push
push
scas
loope
sbb
adc
(bad)
nop
(bad)
out
cmp
and
push
push
xlat
jecxz
add
(bad)
jmp
push
jne
div
retf
scas
call
push
jnp
dec
retf
rcr
pop
mov
in
adc
sbb
inc
jbe
loope
mov
and
add
cmp
mov
push
push
or
jmp
cmp
inc
test
add
jo
cmps
xor
sub
bound
inc
mov
dec
cs
mov
or
rcl
jae
add
xor
enter
xchg
mov
pop
xor
adc
jb
or
movs
inc
add
sub
inc
jb
cmp
adc
inc
aam
xor
inc
inc
sbb
rol
xchg
xor
fsubr
dec
fsubrp
daa
xor
or
mov
jle
ds
ja
push
mov
cmp
pop
out
add
in
leave
inc
add
dec
pop
aas
js
xor
mov
and
rol
aaa
lds
cmp
test
dec
call
mov
ret
into
pop
sahf
mov
add
out
sbb
or
cmps
sbb
and
test
das
in
out
mov
cmp
loopne
cmp
mov
cmp
push
mov
ror
arpl
sbb
dec
fld
nop
sub
add
and
mov
sbb
ins
aad
xchg
add
arpl
xor
pop
rcr
jno
dec
add
inc
sub
mov
cmp
sub
lods
les
jb
pop
fdiv
pusha
loopne
nop
lods
inc
data16
fidiv
pop
aam
js
in
jns
aam
sub
inc
js
xor
inc
in
lods
rcr
cmp
inc
lods
dec
cmp
pop
inc
sub
cmp
xor
push
mov
(bad)
and
loope
adc
mov
cmp
add
push
jl
push
cwde
ss
and
aaa
gs
xchg
jo
push
adc
xchg
cmp
pop
outs
or
dec
inc
aaa
xor
xor
xchg
shr
add
xchg
mov
call
ss
nop
arpl
sbb
add
and
and
cmp
xor
test
xchg
and
mov
inc
rcl
movs
mov
and
test
jno
add
frstor
xor
out
fcmovnbe
mov
rcr
or
leave
and
aas
cmp
mov
popa
sub
inc
fnstcw
xor
in
sbb
jae
ret
jmp
jmp
sub
adc
mov
sub
pusha
pop
cmp
popa
cld
fistp
add
dec
push
fsub
add
fs
push
lahf
inc
xchg
sbb
jmp
cld
push
or
dec
pushf
mov
sub
lock
cs
dec
in
inc
sub
cs
lock
mov
mov
push
or
jno
xchg
sbb
cmp
add
dec
jg
dec
test
add
cdq
xor
les
sbb
cmps
daa
stos
push
sub
add
xchg
mov
cmp
gs
jns
dec
or
jno
mov
punpckhwd
dec
pop
and
dec
xchg
push
adc
sub
push
mov
ins
xchg
pop
(bad)
sbb
imul
or
in
sbb
sub
pop
cmps
mov
dec
dec
aad
stos
pop
loopne
lods
sbb
jnp
inc
fsubr
sub
or
inc
mov
mov
add
mov
cmp
dec
mov
mov
cmps
inc
lahf
mov
dec
dec
cwde
cld
push
xor
sub
mov
or
clc
sub
or
mov
popf
movs
in
xchg
pop
cwde
rol
in
pop
cwde
bound
gs
lea
ins
je
push
leave
cmp
push
inc
cld
dec
test
xchg
push
sbb
or
push
mov
(bad)
xor
xor
mov
add
pop
and
sahf
xchg
out
hlt
rcr
call
or
adc
xchg
push
xchg
ret
je
dec
addr16
addr16
call
ins
sahf
push
xchg
repz
(bad)
and
xor
retf
and
or
sbb
pop
or
add
mov
xor
or
enter
test
xchg
sbb
mov
pop
iret
data16
add
nop
xchg
push
pop
frstor
fwait
sub
mov
pop
int3
fs
test
dec
pop
dec
inc
js
test
js
je
cmp
sub
adc
repnz
and
mov
jo
xor
nop
adc
add
xchg
xchg
sahf
adc
out
push
xor
pop
xor
sbb
xor
inc
jb
mov
(bad)
or
cmp
aam
and
dec
in
pushf
aam
and
jb
cmp
stos
(bad)
mov
or
imul
clc
movs
repnz
clc
add
or
mov
sbb
cmp
in
mov
mov
mov
sahf
sbb
les
xor
adc
jg
xchg
and
bound
mov
mov
sub
jns
jne
add
mov
shl
ret
or
dec
call
js
lock
sbb
mov
add
adc
sbb
arpl
dec
call
rep
cdq
fiadd
jg
jne
lea
fwait
jbe
movs
jg
(bad)
mov
lods
inc
out
jmp
(bad)
clc
and
popa
sbb
and
(bad)
xor
mov
shl
mov
inc
test
je
or
jb
(bad)
movs
sbb
adc
hlt
or
adc
in
sbb
daa
imul
mov
fild
dec
jmp
dec
cmp
pop
and
and
ret
mov
push
sub
or
jmp
inc
push
sbb
test
add
push
and
xchg
pop
call
ror
dec
loopne
or
inc
stos
inc
or
call
jo
xchg
push
push
test
leave
pushf
sar
pop
ins
and
add
es
xchg
sub
cmp
push
or
adc
popa
xor
rcl
(bad)
push
mov
out
pop
sub
cmp
iret
out
dec
movs
repnz
loopne
loopne
add
fcomp
inc
add
add
mov
xor
push
xor
cdq
in
(bad)
or
and
mov
push
in
sahf
adc
jbe
in
ret
fwait
xor
and
pop
cmp
mov
push
ror
cmp
bound
inc
add
and
ja
shr
and
cmp
rcr
mov
adc
adc
and
leave
ret
or
(bad)
cld
inc
icebp
adc
mov
nop
(bad)
(bad)
cwde
and
xchg
cmp
sub
ins
out
sub
(bad)
and
lock
sbb
je
hlt
adc
add
or
mov
or
push
mov
(bad)
adc
add
jne
jmp
lods
and
xor
jmp
mov
push
es
dec
cmp
mov
lea
stos
fnop
xchg
add
adc
loop
pop
jae
push
mov
or
cmp
out
imul
mov
les
pop
mov
cmp
fst
cdq
xor
push
scas
mov
in
inc
add
lea
xchg
test
ja
add
movs
or
repnz
jmp
mov
int3
clc
shl
inc
loopne
loopne
dec
loopne
xchg
push
add
sub
add
sbb
mov
scas
mov
lods
mov
leave
and
pop
xchg
push
or
jns
repnz
enter
or
mov
aaa
sbb
adc
in
mov
or
xor
mov
aam
pop
sub
inc
mov
lahf
cld
jb
test
jp
es
jmp
sub
add
test
push
cmp
sar
push
and
(bad)
xlat
test
cwde
sub
pop
pop
jl
dec
imul
call
fcomp
xlat
movs
movs
pop
jnp
test
cmp
dec
inc
test
jmp
sbb
nop
xchg
jae
mov
leave
jge
cmp
ror
fistp
xchg
add
test
test
sub
enter
fstp
xchg
call
adc
push
cmp
js
outs
pop
aas
hlt
sbb
adc
lock
aam
or
rcr
push
xchg
rol
repz
sub
sar
int3
jb
push
enter
dec
enter
mov
mov
pop
push
sub
xor
sub
fdivr
mov
xchg
icebp
dec
repnz
adc
and
out
adc
int3
int3
lods
xchg
mov
dec
cmps
int3
xchg
lods
xor
nop
dec
mov
mov
fsubr
ss
jne
add
add
adc
sbb
ret
sbb
loopne
sbb
mov
sub
mov
mov
data16
jbe
pop
or
cdq
shl
inc
and
cmp
imul
ret
pop
sub
inc
not
pop
(bad)
jp
push
push
jle
outs
ret
sub
and
mov
and
sbb
push
add
inc
jecxz
push
jno
iret
adc
sub
and
lds
cmp
dec
jb
mov
jmp
movs
rcr
inc
sbb
add
sub
cmp
or
sbb
lods
inc
dec
xchg
fild
lods
or
fdivrp
lock
inc
mov
pusha
jl
lds
push
push
lods
adc
bound
pusha
stc
inc
xchg
xor
xchg
stos
push
xor
pop
add
pop
xchg
jnp
test
repnz
lods
pusha
ja
into
sahf
movs
mov
sar
call
inc
js
adc
movs
ins
or
xchg
xchg
dec
mov
aaa
lock
sub
dec
inc
dec
push
sbb
dec
inc
js
scas
adc
dec
mov
nop
adc
inc
xchg
dec
cmps
in
inc
inc
test
dec
sub
and
lock
das
dec
inc
mov
push
es
and
adc
xchg
retf
test
std
pushf
pushf
xchg
sub
or
call
dec
in
adc
sub
out
adc
mov
loope
mov
shl
jnp
xchg
push
lock
mov
pop
sti
retf
add
jo
scas
add
xor
xor
jg
xchg
movs
cmp
push
fild
or
aad
add
aas
or
push
cmp
mov
inc
loopne
xor
sbb
pop
and
xor
in
or
or
cwde
cwde
sahf
pop
sub
cwde
out
xor
xchg
and
and
xor
mov
das
or
xchg
dec
adc
add
pop
xchg
xchg
ins
mov
and
leave
adc
xchg
loopne
xchg
test
or
nop
nop
dec
and
ror
fmul
xor
mov
add
mov
push
dec
jae
or
push
jmp
sub
mov
fild
clc
movs
xchg
and
rcl
fwait
push
mov
dec
scas
mov
in
pop
arpl
(bad)
mov
std
scas
sub
xchg
sub
scas
inc
add
add
stos
add
add
cmp
test
test
push
in
cmps
nop
mov
mov
dec
and
dec
adc
or
add
daa
xchg
dec
and
mov
leave
mov
ror
jno
or
jo
dec
jmp
ret
sbb
sbb
push
adc
fimul
jl
pop
pop
dec
mov
leave
xchg
dec
and
retf
dec
push
inc
push
add
xor
js
pop
js
in
pop
js
adc
adc
mov
xor
adc
fisub
in
or
nop
dec
push
je
je
enter
rcr
xchg
and
lahf
dec
xor
mov
adc
xchg
sub
xchg
mov
sub
fisttp
es
rol
push
mov
sar
sbb
loopne
loopne
sub
dec
nop
es
ins
sbb
repz
in
stos
shr
sbb
ret
gs
sub
movs
sbb
add
rol
xor
sub
push
shl
mov
adc
stc
clc
cmp
add
xor
je
pop
add
inc
xor
jmp
push
mov
std
movs
sub
cmp
mov
and
jae
sbb
add
add
test
ss
adc
das
dec
mov
adc
fwait
(bad)
daa
xor
dec
jns
mov
leave
push
sbb
inc
xor
loope
cmp
mov
ins
les
imul
sbb
mov
inc
or
jnp
test
xchg
ret
dec
lods
push
loopne
xchg
mov
xchg
cmp
dec
ffreep
add
fmulp
rol
sbb
sbb
retf
jecxz
xchg
movs
adc
inc
xor
pop
daa
nop
xor
rep
ss
adc
pop
mov
mov
mov
mov
inc
fstp
in
xor
test
sub
in
imul
outs
scas
add
add
mov
add
add
or
(bad)
cmp
or
out
sub
(bad)
aas
loopne
retf
mov
add
adc
or
or
jp
xor
xor
loop
pushf
or
push
call
push
sbb
test
fisttp
sub
sbb
imul
and
mov
mov
inc
stc
out
mov
xor
xchg
pop
sub
icebp
fadd
aaa
mov
call
cld
jmp
and
push
fucomip
pop
fsubr
jno
add
icebp
sbb
cld
sti
add
adc
jle
mov
jo
ja
test
pop
add
jnp
shl
enter
xor
add
pusha
mov
cmp
shl
pop
pop
mov
and
dec
mov
les
cli
aam
mov
sbb
mov
add
data16
ror
dec
cmp
loopne
shl
sub
test
out
xor
jo
jno
jmp
ret
ins
sub
dec
shr
dec
(bad)
outs
inc
adc
enter
retf
fcmovne
fist
or
dec
add
fiadd
or
add
loopne
loop
nop
pop
sub
jae
push
les
fstp
lea
adc
adc
and
jecxz
xchg
loop
jo
push
xchg
int3
fisub
and
push
ffreep
ret
xor
leave
jle
pop
lahf
mov
xor
adc
adc
pop
cmp
push
int3
pop
dec
fwait
dec
jns
and
es
xchg
dec
retf
mov
ret
fst
rcl
js
fdiv
mov
out
in
cmp
cs
inc
mov
pop
mov
daa
rcl
cs
les
hlt
xchg
push
or
inc
call
aam
(bad)
clc
popf
rol
ja
mov
pop
pop
int3
cmp
xor
or
(bad)
jmp
jl
sahf
add
nop
cdq
outs
jne
mov
mov
jg
jb
cmp
popa
inc
cdq
xchg
adc
add
data16
inc
jns
dec
dec
mov
int
sbb
or
in
dec
sub
inc
lods
and
xchg
mov
aam
xchg
ja
out
(bad)
inc
lods
xchg
sbb
dec
sahf
dec
cs
test
test
ds
js
xchg
pop
les
mov
scas
push
push
jmp
lods
push
dec
pop
cmp
mov
push
in
inc
aam
and
das
lahf
or
push
sti
cwde
lock
adc
lods
aaa
out
pop
clc
lods
pop
retf
lds
xchg
mov
inc
mov
jg
xor
sub
xor
pop
sub
inc
ss
jnp
sub
je
(bad)
jbe
imul
repnz
sub
inc
lock
sbb
and
add
xchg
jg
jno
or
xchg
(bad)
ret
mov
mov
in
ss
fiadd
int
daa
jne
out
nop
sub
pop
mov
repz
inc
mov
add
hlt
xchg
pop
scas
fs
hlt
hlt
inc
add
jb
xchg
mov
movs
xchg
fsubrp
shl
jmp
lods
ret
scas
hlt
sbb
pop
scas
pop
push
cmps
call
push
add
loopne
cmp
test
arpl
lea
xor
pop
(bad)
pusha
adc
dec
jmp
stc
ja
es
out
mov
popa
add
add
mov
(bad)
sub
xchg
dec
xchg
fisub
pop
aaa
out
jns
mov
xchg
push
xchg
cdq
jb
movs
fwait
or
or
test
add
iret
repz
inc
push
inc
dec
push
jnp
(bad)
repz
mov
jg
in
adc
cmp
adc
pop
push
ror
das
fwait
pusha
push
mov
imul
scas
cmp
inc
sbb
add
retf
nop
stos
sbb
cmp
or
(bad)
or
xor
aaa
inc
and
ins
xchg
push
or
jo
and
movs
into
rcl
(bad)
push
enter
cmp
dec
lea
mov
xor
je
sbb
ja
xchg
cwde
cmp
cmovge
push
jmp
jl
adc
inc
jns
inc
enter
mov
lods
ror
sar
enter
cmps
ret
jge
enter
push
enter
or
outs
shl
sar
xchg
je
sbb
cmc
or
test
xor
cdq
sbb
inc
sub
push
push
aas
fdiv
cmc
and
(bad)
cmp
ja
xchg
je
fmul
xchg
and
inc
ins
fdivr
inc
xor
jmp
pop
mov
xor
mov
int3
adc
xlat
jns
popf
sub
mov
sbb
in
xchg
int3
in
pop
xchg
sub
jmp
and
and
sub
loopne
mov
add
fisubr
fsub
pop
and
cmp
fld
mov
rcr
mov
out
xchg
mov
shl
fcom
ret
adc
out
rol
ror
mov
fwait
dec
lods
jmp
in
adc
mov
sbb
push
aam
jmp
outs
push
or
xchg
cmc
xchg
xor
aam
daa
jmp
cmp
or
test
ins
cmc
add
ror
test
pop
add
inc
and
add
imul
retf
dec
inc
and
call
xchg
xchg
dec
mov
mov
mov
add
mul
cmp
int
hlt
inc
or
xor
xlat
sub
and
jnp
or
movs
stc
stos
cdq
je
mov
aam
mov
lods
out
data16
sbb
nop
mov
or
mov
loopne
add
out
or
mov
jle
test
or
cdq
add
mov
and
jnp
fst
jae
cmp
sbb
xor
fcom
add
and
pop
sub
nop
rol
xchg
sbb
mov
(bad)
(bad)
add
fdivp
mov
push
movs
or
jne
cmp
sbb
out
mov
shr
inc
mov
mov
adc
neg
jo
adc
push
xchg
pop
sbb
cwde
xchg
cwde
jne
sbb
ret
retf
cmp
xor
add
jmp
inc
test
ins
adc
aad
(bad)
and
push
push
mov
ret
xor
cdq
scas
in
or
push
push
out
cmp
and
out
scas
adc
inc
add
aas
jg
mov
mov
ret
adc
adc
pop
sbb
dec
push
das
je
cld
hlt
adc
cmp
sbb
mov
ss
scas
xchg
mov
xchg
jno
cmp
sub
push
or
addr16
add
push
add
ins
push
mov
imul
dec
xor
shl
popa
lods
lods
mov
imul
inc
lock
fistp
shl
and
test
enter
out
xchg
fwait
add
add
xchg
out
inc
mov
dec
sub
fisttp
inc
ins
test
add
adc
cs
pop
and
mov
jle
rcr
push
sub
add
int3
jne
adc
or
mov
add
adc
and
aad
adc
rcl
(bad)
jg
scas
rol
shld
jne
dec
add
cmp
hlt
dec
jmp
lock
mov
movs
jo
nop
and
adc
sti
or
jns
sbb
je
punpckldq
adc
loope
cmp
mov
jge
jbe
in
cmp
and
mov
inc
adc
pop
enter
push
cmp
call
add
push
dec
jp
mov
xchg
mov
xchg
xchg
pop
jg
nop
es
xor
sbb
dec
loope
les
cmp
js
dec
addr16
arpl
leave
repz
jbe
ins
and
or
pusha
pop
pop
add
rol
inc
pop
jae
xchg
ror
xor
iret
call
and
call
pop
and
dec
(bad)
and
ss
jne
or
movs
add
mov
ins
push
mov
push
xor
cmps
add
inc
push
cwde
jge
(bad)
sub
or
outs
sub
sub
fcmove
add
inc
xor
out
sbb
lds
adc
cmp
pop
adc
pop
xlat
lea
movs
loope
add
xchg
pop
inc
inc
test
push
inc
(bad)
jne
and
das
pop
dec
inc
cmp
call
xor
sub
call
(bad)
sbb
pop
and
pop
and
dec
pop
dec
mov
arpl
pushf
inc
mov
cmp
adc
xchg
push
imul
adc
cld
adc
jmp
sbb
inc
adc
mov
rcr
cwde
inc
into
jg
pushf
inc
lahf
jb
push
cmp
adc
pushf
das
add
jmp
pop
push
aaa
sub
lea
sbb
sub
fild
add
jmp
daa
stos
in
sub
mov
and
dec
and
or
and
pop
or
or
in
inc
in
and
xchg
stos
add
hlt
add
lea
sbb
push
test
add
pop
imul
rol
(bad)
repnz
mov
xor
jae
xor
jae
cwde
sub
xchg
addr16
pop
(bad)
in
inc
ficom
inc
test
pop
adc
cmp
jmp
aas
xchg
mov
test
and
push
js
push
mov
inc
xor
enter
scas
sub
sub
enter
inc
gs
fs
dec
cwde
push
xchg
mov
jb
mov
or
ss
bound
mov
ror
fcmovb
in
add
pop
sbb
sbb
pop
xor
dec
repnz
or
iret
add
add
leave
test
stos
jmp
push
mov
adc
arpl
cwde
or
ret
inc
push
cdq
mov
inc
sbb
dec
cmp
jne
arpl
or
aaa
jno
sbb
pop
or
push
push
jne
inc
cmp
ins
jl
push
icebp
inc
jl
iret
mov
popa
jl
xor
mov
adc
mov
mov
in
jnp
call
push
addr16
pop
lahf
or
sar
push
pop
inc
shl
dec
rcr
rcr
xchg
jnp
sbb
inc
dec
adc
pop
sbb
or
or
call
and
xor
or
push
ins
loopne
mov
sub
js
(bad)
bound
and
fld
pop
xor
les
arpl
xchg
push
sub
in
pop
adc
test
movs
pop
or
call
pop
add
test
and
clc
push
movs
adc
scas
mov
pop
adc
pop
or
adc
stos
test
shl
jecxz
in
ret
adc
aas
add
jne
push
ins
(bad)
sbb
rcr
xchg
mov
icebp
push
pop
xchg
add
and
arpl
lea
xor
ja
lock
pusha
sbb
pop
mov
test
xchg
add
scas
popa
pusha
icebp
add
jo
adc
mov
sahf
or
push
das
xchg
clc
data16
and
or
xchg
add
addr16
and
inc
jmp
sti
push
or
xor
mov
nop
(bad)
sub
adc
or
aaa
adc
dec
add
pushf
movs
or
pop
test
cmp
add
xchg
fs
xor
add
int
adc
or
cmps
pop
cs
and
mov
dec
pop
cmp
push
fist
and
mov
xchg
and
xchg
sub
push
cwde
sub
or
std
dec
pop
xchg
cmp
sbb
xor
add
and
sub
rcl
jp
add
or
shl
inc
or
xchg
push
pop
and
shl
adc
cld
mov
or
mov
cld
sub
iret
xchg
std
out
ja
sub
std
cmp
bound
stc
xor
cmp
sub
mov
aaa
stos
(bad)
inc
adc
ds
cmp
push
fs
bound
(bad)
(bad)
inc
xchg
dec
(bad)
call
inc
lock
inc
(bad)
jmp
data16
mov
mov
add
rol
mov
push
or
(bad)
dec
adc
test
adc
jp
pop
mov
add
inc
jg
jne
add
dec
(bad)
jne
dec
cmp
fnsave
cs
cmp
fsub
je
mov
call
retf
jne
sub
add
sbb
xor
shr
fdivr
dec
jp
ret
nop
sbb
shl
fcmovb
xchg
je
mov
sbb
rcr
loopne
mov
retf
mov
mov
and
adc
enter
cmc
xor
add
loope
push
or
fdivr
mul
add
loope
rcr
ins
dec
mov
push
mov
outs
push
imul
xor
cmp
ds
push
or
xor
outs
or
jmp
std
jmp
cld
push
(bad)
dec
fsub
cld
data16
jnp
mov
mov
dec
mov
in
es
(bad)
sti
fsub
xor
div
fist
paddusw
jo
in
mov
or
(bad)
mov
ficom
mov
and
mov
aad
jg
and
xor
(bad)
cs
pop
ins
xchg
jns
xchg
(bad)
sub
in
ss
cld
mov
or
jns
inc
cmps
sub
arpl
inc
out
or
pop
inc
imul
add
push
popa
in
cmp
mov
lea
and
imul
inc
sub
or
pop
cmp
in
gs
add
cmp
mov
or
push
mov
rol
or
and
int3
in
add
cmp
cmp
adc
leave
dec
jo
enter
fs
mov
pop
xchg
sbb
lock
inc
pop
add
test
pop
loopne
cmp
xchg
inc
push
mov
mov
cmp
leave
leave
add
mov
or
(bad)
jmp
cmc
xor
inc
add
dec
xor
test
int3
jp
and
fadd
add
in
sub
imul
cmp
lds
je
in
xlat
cmp
pusha
leave
dec
nop
cmp
ins
and
inc
xor
push
test
sbb
stos
pop
or
pop
in
(bad)
pop
call
inc
js
inc
(bad)
adc
or
mov
loopne
ss
loope
or
ret
loope
mov
dec
mov
mov
push
jb
bound
inc
or
sub
mov
fcom
fsubr
push
add
bound
dec
or
lods
and
jns
jmp
xchg
and
and
or
push
pop
cmp
adc
nop
arpl
movs
in
adc
(bad)
in
inc
pop
mov
inc
pop
mov
or
add
or
xchg
in
pop
sbb
adc
sub
or
outs
push
xchg
les
in
or
sub
sbb
test
cmc
ror
sbb
cmp
cmp
imul
and
dec
and
cli
xlat
pop
jae
pop
popf
js
addr16
dec
and
(bad)
dec
daa
out
push
pop
pop
adc
test
push
mov
mov
pop
cmp
int
mov
xchg
sbb
adc
out
add
fidiv
and
dec
loopne
in
push
sbb
aas
xor
(bad)
or
cs
ret
xchg
add
cld
push
ret
mov
lea
push
add
push
daa
sbb
test
add
ud2
lds
mov
icebp
sar
dec
ja
mov
inc
dec
and
mov
rcr
imul
pusha
xchg
push
fdivr
in
pop
mov
sub
test
jge
jl
jnp
add
sbb
push
sbb
lock
sbb
inc
inc
sub
sahf
or
inc
ja
jne
xchg
rcr
mov
cmps
in
add
retf
jmp
inc
adc
ds
cs
adc
cmp
cmp
pop
pop
pusha
sub
mov
pusha
pop
lea
add
cs
add
sbb
adc
jo
push
adc
retf
jns
test
xchg
lock
add
add
fldenv
add
and
mov
ds
push
les
test
nop
test
inc
ja
jl
lock
xchg
mov
inc
sub
xchg
loopne
aaa
cmp
mov
or
sbb
imul
lock
ins
or
push
sub
dec
pop
push
pop
or
cwde
sub
xor
nop
xlat
sbb
push
je
adc
pmulhuw
ja
mov
ret
fdiv
adc
xor
or
inc
jmp
push
pop
fild
(bad)
stos
fdivr
mov
pop
call
xchg
pushf
add
pusha
les
xor
jb
mov
retf
and
and
push
(bad)
inc
nop
dec
sbb
cmp
imul
or
inc
adc
sbb
and
xchg
ds
xchg
and
fcomp
mov
test
pop
and
and
adc
or
mov
popa
in
lods
or
mov
xor
cmps
nop
jo
imul
push
test
sbb
sub
jbe
ret
(bad)
jl
popa
test
data16
push
pop
test
imul
or
popf
call
retf
pop
fisubr
xchg
mov
pop
mov
xor
in
or
inc
dec
call
push
or
jns
push
shl
sbb
in
cmp
dec
mov
add
xchg
or
addr16
pop
leave
dec
mov
or
push
jb
in
adc
aam
mov
adc
ret
sbb
adc
ja
loopne
pusha
xchg
dec
cs
imul
nop
imul
test
mov
dec
add
pop
and
ret
sub
xchg
dec
enter
or
mov
scas
mov
mov
les
dec
dec
add
dec
jns
xchg
loopne
retf
adc
(bad)
push
jg
dec
hlt
or
xchg
push
(bad)
push
mov
jmp
sub
leave
dec
iret
retf
adc
jb
cmc
jb
out
js
cdq
push
add
mov
add
and
ret
or
add
mov
adc
mov
scas
dec
in
mov
ds
mov
ror
in
adc
adc
loopne
pop
and
cmp
mov
mov
gs
sub
popf
xchg
jmp
pop
mov
cmps
push
fistp
push
jae
add
shl
adc
aam
sub
xor
popf
addps
clc
ins
mov
nop
jns
add
shl
push
and
enter
(bad)
(bad)
fcomp
pop
jb
push
shr
push
cmp
adc
sbb
push
mov
adc
das
push
add
add
and
icebp
cmp
xchg
jne
lock
xchg
xor
in
ror
in
sbb
inc
in
pop
mov
in
dec
mov
loope
por
sbb
iret
or
js
rcr
sbb
lock
inc
jbe
aaa
or
sbb
sar
je
push
mov
fsub
sub
in
add
ss
adc
cmp
mov
add
push
push
daa
inc
es
sbb
adc
fcom
out
int
je
add
xchg
fstp
xor
or
mov
or
dec
jo
or
lods
sub
push
adc
enter
ret
int3
push
gs
mov
push
and
push
mov
pushf
gs
rol
xchg
das
sub
mov
dec
cmps
enter
lods
pop
mov
sbb
push
pop
pop
pop
xchg
fwait
push
and
jo
movs
movd
daa
cmp
shl
stos
xchg
xchg
out
pop
out
push
adc
pop
mov
adc
es
mov
xchg
fsubr
inc
add
cmp
pop
mov
shl
xchg
or
and
imul
frstor
aam
xchg
xchg
imul
rcl
or
es
mov
test
ror
ins
enter
inc
or
enter
shl
or
les
dec
rol
jbe
cli
or
xchg
mov
movs
jmp
jae
pop
fidiv
adc
dec
pop
mov
adc
mov
clc
inc
je
rol
ins
jmp
mov
sub
enter
enter
jp
enter
jmp
mov
add
mov
xor
out
sbb
push
xor
sub
outs
jns
aas
push
inc
mov
jns
gs
shl
or
fsubr
xchg
gs
pushf
call
xchg
inc
lahf
mov
or
in
in
adc
and
out
mov
push
cmp
out
adc
loope
pop
xlat
or
not
enter
dec
jne
jmp
inc
push
mov
add
push
or
adc
shld
shl
ds
sbb
mov
add
shl
daa
xchg
fwait
jmp
push
xor
xchg
shl
inc
adc
sar
fidiv
add
neg
neg
xchg
mov
in
cdq
fs
sbb
sbb
or
adc
dec
push
jg
scas
xchg
rcl
icebp
add
push
shr
inc
push
fdivrp
cmp
xor
jmp
(bad)
jmp
ds
data16
adc
mov
movs
out
shl
cmp
dec
cld
dec
or
cmp
add
(bad)
dec
mov
sbb
xor
loopne
pop
pop
pop
add
adc
out
and
rcr
or
add
xor
push
cmp
pop
or
inc
mov
or
add
sub
push
or
pop
xchg
or
mov
or
jmp
sub
(bad)
jl
popa
and
add
sbb
(bad)
rol
mul
dec
jl
int
adc
int3
movs
lock
inc
mov
pop
xchg
rol
inc
fld
mov
sub
xor
retf
sbb
jp
push
ret
loope
mov
not
sbb
add
ffreep
jno
adc
fdiv
loopne
adc
sbb
daa
jbe
aas
ins
push
inc
lods
or
sahf
fs
and
or
mov
dec
cmp
lock
rol
adc
push
push
iret
sti
pop
or
dec
xchg
lock
js
xchg
mov
mov
rcr
or
adc
imul
sub
aad
mov
clc
mov
jmp
imul
mov
(bad)
jmp
test
pop
sub
(bad)
out
sbb
or
or
fisub
push
daa
push
xor
sbb
inc
jge
sub
mov
and
fwait
movs
psubusb
fcom
das
add
in
cmp
jae
enter
cmp
shr
arpl
or
enter
push
mov
push
rol
or
or
xchg
aad
xchg
shl
cwde
fmul
add
sti
pop
adc
adc
in
sbb
je
xor
inc
mov
sub
jmp
add
sub
sub
ret
jno
imul
in
je
fimul
or
push
mov
cmp
or
mov
lods
mov
mov
push
out
add
adc
packuswb
call
ret
ret
or
cmp
push
out
xchg
jle
xor
rcr
inc
add
sub
test
add
sub
or
(bad)
jecxz
inc
ds
and
std
stos
(bad)
movs
jns
or
sbb
loop
pop
sbb
mov
inc
add
and
or
mov
js
xor
mov
pop
push
fadd
or
mov
jmp
cmc
(bad)
lahf
pop
shl
push
jmp
jno
retf
cmp
hlt
sbb
push
sbb
sbb
(bad)
adc
jecxz
lods
or
sbb
or
and
shr
lahf
mov
adc
cwde
inc
xchg
retf
test
add
out
push
shl
mov
out
sbb
push
push
cmc
add
repnz
or
mov
xchg
xchg
xchg
jecxz
mov
add
xchg
and
imul
(bad)
(bad)
jne
push
and
pop
rol
popa
and
repz
dec
push
sar
add
dec
cmp
jne
jne
outs
or
mov
lods
push
sbb
sbb
loope
lods
add
push
enter
pop
sbb
clc
cmp
cmp
sbb
loopne
sub
std
add
sub
pop
adc
and
in
adc
int
dec
ret
outs
sub
leave
and
cmp
popa
or
add
mov
push
push
retf
jo
xor
mov
call
mov
cmp
out
xor
retf
inc
jmp
and
jne
or
loope
(bad)
fisttp
ins
fistp
fist
or
out
fidivr
add
inc
and
cmps
ror
jecxz
adc
loopne
add
icebp
sub
shr
data16
mov
push
cmp
fcom
and
ins
add
and
aad
push
and
mov
gs
or
xor
cs
fist
mov
push
adc
inc
ss
cmp
popa
pusha
pop
loopne
into
and
add
mov
sbb
dec
mov
popa
sbb
bound
or
sbb
pop
jmp
std
loopne
loopne
mov
dec
pop
xchg
pusha
jp
sub
push
sbb
push
(bad)
rcl
loopne
inc
call
sub
mov
pop
sbb
fild
fstp
pop
sub
or
fst
xor
loopne
sbb
pop
jo
cmp
cmp
push
jb
dec
xchg
sub
repz
sub
mov
pop
enter
mov
pop
loopne
imul
dec
pop
add
mov
in
cmp
cmp
inc
sub
enter
int3
or
add
inc
push
push
inc
xor
dec
loopne
mov
or
cdq
repz
enter
cmp
add
sbb
xor
iret
or
jmp
mov
jge
popa
je
or
or
vzeroupper
je
jmp
(bad)
adc
jno
ins
jmp
nop
test
je
enter
push
enter
in
jo
dec
imul
pushf
push
jg
aad
loopne
or
in
add
ret
lahf
mov
stc
inc
jb
and
(bad)
inc
(bad)
push
ja
jmp
ds
lea
dec
jae
nop
es
sub
loopne
adc
dec
sub
or
in
test
adc
mov
div
cmp
mov
ret
jmp
out
test
test
(bad)
and
or
add
pop
sti
(bad)
xor
out
mov
stc
outs
add
mov
or
mov
inc
mov
je
pop
mov
lds
inc
nop
cmp
or
pop
pushf
mov
xor
(bad)
and
jmp
mul
push
call
cmp
sbb
add
cmp
add
xor
add
stos
fs
cli
push
push
push
loope
nop
ror
inc
adc
sbb
dec
adc
push
inc
inc
pop
leave
adc
and
nop
push
push
(bad)
cmp
cwde
or
das
mov
push
ins
push
push
push
movs
add
(bad)
add
in
sbb
add
ins
cmp
fsub
xor
and
sub
jmp
in
mov
(bad)
(bad)
push
adc
enter
dec
pop
or
add
mov
cmp
add
in
or
add
inc
enter
inc
loopne
xor
stos
ror
add
push
call
adc
stos
push
or
pusha
dec
jecxz
popf
out
fistp
fwait
lds
adc
pop
sar
pop
xchg
and
and
adc
cmp
lds
cmp
push
xor
inc
cmp
dec
call
mov
or
ret
xchg
sbb
sbb
dec
adc
add
pop
int3
aas
ds
loop
test
dec
add
or
inc
and
jmp
pusha
add
test
out
adc
test
cld
push
je
out
push
in
inc
and
add
sub
out
pop
push
push
inc
sub
jne
xor
ins
popa
ror
lock
dec
imul
or
leave
imul
mov
and
or
and
gs
int3
ins
fbstp
mov
mov
cmp
sbb
mov
push
pop
jg
sbb
pop
nop
pop
rol
mov
cmp
push
push
adc
pusha
loopne
add
repnz
push
adc
mov
mov
shl
mov
dec
bound
rcl
jg
push
sub
lea
dec
cmp
(bad)
inc
or
jbe
inc
outs
or
cmps
fadd
call
iret
jne
xor
add
pop
dec
jb
es
cmp
push
ss
pusha
adc
or
shl
mov
sub
rol
sahf
ds
mov
mov
pop
add
retf
je
dec
ins
sbb
xchg
imul
gs
nop
and
push
dec
nop
and
and
out
or
(bad)
jl
push
sbb
add
and
pop
pop
je
ret
xchg
pop
repnz
dec
mov
pop
or
add
mov
ret
xchg
dec
adc
(bad)
(bad)
fcomp
iret
pop
lock
sub
jne
sub
dec
and
fsubr
stc
mov
adc
hlt
ret
(bad)
jmp
mov
inc
fs
dec
sti
mov
push
sbb
pop
pop
adc
cmp
inc
inc
dec
scas
(bad)
in
add
leave
(bad)
aam
and
sar
jmp
fstp
xchg
jle
and
pop
loopne
push
inc
into
ja
(bad)
scas
rol
(bad)
xchg
scas
add
jl
dec
loop
sub
sub
mov
push
inc
stos
lock
and
mov
or
xor
test
loope
push
sub
dec
push
pushf
cs
shl
dec
in
adc
gs
repnz
bswap
pusha
pop
xchg
loope
add
xchg
retf
scas
add
mov
enter
add
jmp
add
push
push
shr
fisttp
daa
sub
std
daa
enter
xchg
scas
jg
xor
repnz
test
sbb
jae
ja
cwde
inc
outs
mov
shl
xchg
xor
mov
aad
or
or
xchg
adc
sti
cmps
cmps
or
cmps
mov
cmps
(bad)
or
cmp
xor
outs
cmp
or
sar
in
jb
(bad)
les
mov
and
push
sub
adc
hlt
(bad)
les
xchg
inc
inc
out
sbb
mov
scas
jg
pop
movs
adc
ret
mov
xor
cmp
sbb
pop
ins
fmul
movs
dec
sbb
and
imul
shr
outs
jns
push
push
jmp
inc
cmp
lock
mov
loope
mov
mov
arpl
push
test
inc
(bad)
call
retf
jne
adc
jnp
adc
cmp
les
rcl
or
sub
or
lods
or
inc
adc
rol
sbb
mov
lea
sar
stc
mov
mov
test
or
sbb
mov
mov
in
and
xor
sub
push
cli
and
pusha
repz
nop
cmps
loopne
fidivr
movs
movs
fs
sub
dec
jecxz
ja
jns
push
loop
test
lea
cmp
test
test
pushf
ret
in
adc
and
pop
ja
loope
jo
(bad)
loopne
jl
xor
cmps
sahf
lock
sub
dec
cmp
mov
jno
jmp
dec
cmp
pop
mov
mov
js
push
ja
xor
popf
sti
mov
aas
sbb
ret
test
or
dec
test
sti
mov
xor
push
jb
out
ret
mov
test
sub
scas
fmul
fcmove
mov
out
loope
ja
ret
ror
es
push
or
fcomi
jnp
cdq
in
data16
scas
or
(bad)
xchg
cld
or
in
iret
sub
jg
inc
cmp
cs
pop
adc
gs
push
xchg
or
jo
in
addr16
or
mov
add
adc
(bad)
sbb
xor
push
retf
imul
pop
push
rcl
cmp
in
enter
or
add
pop
shl
mov
xchg
(bad)
push
nop
xchg
ja
clc
inc
fs
pop
inc
mov
or
mov
fidiv
and
adc
retf
push
(bad)
std
ret
popf
(bad)
loopne
fdivr
xchg
aaa
push
or
and
sub
outs
mov
ret
pop
or
fcomip
loop
dec
sti
push
cmc
les
sbb
dec
and
ins
cmp
(bad)
jg
and
mov
cmp
and
mov
or
dec
inc
bound
mov
xchg
sub
jb
jmp
xchg
repz
xchg
push
sub
xor
mov
enter
call
out
dec
sahf
mov
mov
xchg
push
cmp
movs
(bad)
mov
mov
out
jae
sbb
mov
outs
sub
fild
mov
enter
pop
(bad)
(bad)
or
push
seto
add
inc
xor
test
test
fst
test
mov
xchg
test
and
adc
xchg
cs
mov
pop
xor
sbb
stc
mov
adc
xchg
jg
add
push
add
add
popf
pop
adc
pop
js
aam
adc
mov
pop
jp
jg
xchg
inc
jb
pusha
add
xchg
test
push
or
push
mov
mov
add
push
das
xchg
sbb
push
jmp
adc
push
imul
adc
dec
sbb
sbb
and
and
cdq
pop
pop
loope
aaa
add
jns
fiadd
cmp
mov
repz
loope
lea
add
ret
stc
mov
ss
dec
es
int3
rol
xor
stos
or
or
or
stos
das
cs
mov
push
fwait
cmp
ret
ins
dec
stc
push
push
add
xchg
push
adc
jb
in
sub
add
rcr
aam
ja
sbb
jne
rcl
fdivr
fiadd
jns
out
hlt
push
aad
pop
dec
inc
mov
dec
jno
clc
pop
outs
call
les
sub
sub
mov
inc
test
mov
inc
add
(bad)
enter
jge
adc
test
cmp
and
outs
test
mov
or
arpl
inc
pop
cdq
sbb
jns
push
adc
sbb
add
jg
jo
hlt
dec
sbb
sbb
jge
add
repnz
and
cmp
(bad)
je
xchg
jo
adc
adc
int3
mov
mov
mov
pushf
dec
test
iret
pushf
lds
mov
push
scas
inc
ins
pusha
jp
jb
adc
loopne
mov
cmp
add
add
pop
movs
cs
clc
or
adc
mov
jbe
and
or
mov
in
or
add
and
push
rcl
pop
std
arpl
and
aas
mov
or
or
or
fadd
push
pop
or
or
or
push
test
lock
or
push
add
jo
test
mov
lahf
mov
aad
ins
imul
adc
sar
sub
outs
xor
mov
sbb
mov
mov
jnp
cmps
sbb
or
sbb
inc
add
mov
and
adc
sub
leave
aam
ror
xchg
and
and
xchg
stc
cmp
ds
sbb
add
stos
mov
jmp
shr
(bad)
push
or
outs
add
sahf
mov
push
xchg
inc
test
inc
or
in
push
sbb
fimul
ret
(bad)
or
ja
push
mov
dec
hlt
add
push
jle
dec
sub
int
stos
or
rol
bound
lahf
push
xor
add
xor
inc
cmp
jmp
fist
mov
sbb
out
in
mov
test
jno
dec
xchg
rol
jmp
mov
add
test
mov
in
dec
inc
mov
clc
push
stc
mov
gs
cmp
aaa
dec
in
mov
cmp
out
jb
add
add
adc
ror
fcom
out
cmp
mov
and
xor
repnz
push
and
push
jo
cmp
mov
dec
mov
aam
push
or
push
sbb
dec
and
add
rol
add
jne
add
dec
ins
or
in
test
and
ins
(bad)
pop
cmc
adc
leave
xchg
fisttp
fwait
cmps
dec
jecxz
movs
fsub
jle
adc
xor
aam
fsubr
pop
(bad)
mul
sub
and
push
inc
pop
popa
push
inc
adc
test
out
push
push
mov
cmp
dec
push
jmp
iret
sub
adc
fidivr
mov
jmp
dec
aas
outs
loopne
out
shr
aaa
in
and
sub
xchg
sbb
mov
clc
xchg
or
cwde
jecxz
jae
add
inc
pop
aam
test
fistp
inc
sti
(bad)
cmp
aas
inc
jns
push
lods
cdq
mov
movs
in
stos
aam
add
mov
xor
js
xchg
js
xor
jmp
call
inc
addr16
ins
push
push
or
lahf
aaa
adc
push
clc
outs
cld
add
adc
sub
mov
movs
xchg
or
fs
pop
enter
push
add
sbb
je
jl
inc
inc
jmp
sbb
loop
add
dec
mov
cmc
or
imul
mov
pushf
jge
mov
mov
xchg
movs
and
mov
ja
jo
push
adc
mov
fadd
loop
cli
add
lea
or
push
int
cmp
sar
add
push
mov
inc
add
sub
xor
clc
cli
inc
sub
jmp
mov
pop
or
int3
and
ss
mov
sub
or
push
sbb
test
ret
push
sbb
fld
pop
or
and
add
jnp
add
pop
mov
mov
mov
sbb
imul
adc
shl
js
mov
mov
xchg
pop
add
inc
shl
or
push
push
jns
dec
dec
adc
test
clc
call
stos
std
or
ret
sbb
push
add
push
mov
enter
push
push
das
fs
mov
mov
cmp
and
(bad)
out
push
mov
push
int
and
inc
pop
jb
repnz
or
jl
adc
(bad)
jbe
les
sbb
daa
xor
shl
scas
push
xor
rcr
(bad)
loope
ja
xor
pop
adc
(bad)
push
sub
fcompp
dec
cmp
add
adc
inc
nop
sbb
cmp
int3
mov
adc
imul
and
dec
test
add
in
(bad)
sub
mov
inc
push
enter
mov
sahf
comiss
mov
xor
jo
mov
call
pusha
cld
in
xchg
add
ins
sbb
pop
sbb
mov
mov
sbb
xor
lods
(bad)
ins
pusha
or
xchg
call
jo
movs
sbb
inc
adc
ins
cmp
push
add
mov
sbb
and
lods
add
movs
shl
xor
xchg
(bad)
mov
lock
or
fs
fs
xchg
mov
pop
or
sub
clc
inc
mov
jne
jns
test
adc
shl
(bad)
jne
mov
cmp
(bad)
in
adc
retf
stos
mov
jb
pop
in
mov
push
mov
popa
(bad)
(bad)
mov
sti
adc
fcom
(bad)
out
sbb
scas
aam
aam
sbb
out
shr
aam
pop
lock
fst
inc
test
add
es
cmp
add
jl
dec
add
lock
and
mov
sub
add
aas
add
inc
or
inc
pusha
ja
sbb
daa
pop
sub
or
add
inc
mov
repz
xor
mov
sbb
cmp
cmp
sub
pop
je
push
inc
sbb
lds
xor
stc
sbb
aaa
xor
pop
mov
jmp
add
sbb
pop
enter
mov
pop
jb
rol
sbb
xchg
jecxz
jg
ret
dec
lds
mov
pop
fwait
call
ins
arpl
push
push
aad
sub
inc
icebp
pop
and
push
addr16
loopne
mov
test
add
ins
push
enter
lahf
test
pushf
bound
mov
mov
adc
or
test
mov
movs
fisttp
or
add
nop
inc
ds
inc
xor
mov
jne
push
js
arpl
sub
or
pop
and
adc
sbb
pop
inc
mov
adc
push
cmp
call
xor
test
push
test
arpl
mov
pop
add
sbb
stos
pop
and
sbb
aam
inc
xor
pop
pusha
mov
sbb
inc
and
out
push
push
sbb
xor
sbb
push
mov
xor
jg
dec
adc
xchg
in
push
push
shl
ja
popa
cs
aaa
xchg
dec
loope
sbb
mov
(bad)
adc
cmp
pop
nop
or
jnp
push
or
test
or
dec
js
dec
and
mov
sub
test
push
push
aad
xchg
xchg
xchg
sbb
or
lock
mov
push
inc
(bad)
fcos
rcl
clc
dec
jbe
and
push
sbb
jb
jl
or
xchg
mov
inc
sub
frstor
lods
xchg
adc
imul
enter
test
repnz
scas
mov
(bad)
ja
add
rol
adc
je
inc
shl
dec
push
fistp
ins
mov
shl
or
adc
jmp
adc
ins
dec
arpl
push
dec
mov
sub
pop
test
adc
xchg
adc
adc
inc
gs
test
sbb
mov
sub
ret
pop
sub
xor
and
sar
pop
(bad)
ins
xchg
arpl
or
rol
mov
(bad)
in
leave
outs
dec
cs
add
aam
mov
mov
jb
sub
push
xor
js
mov
jecxz
jecxz
dec
xor
mov
(bad)
jmp
aad
or
jo
ret
inc
mov
cmp
jno
push
or
test
pop
xor
lahf
movs
cwde
or
sub
dec
icebp
push
loope
jo
push
mov
push
or
pop
push
add
rdtsc
neg
add
inc
(bad)
mov
fcom
cmp
out
pop
je
sub
out
inc
fstp
mov
stc
adc
fsub
shl
loope
or
sbb
fnstsw
adc
and
adc
loopne
aad
sub
add
sbb
movs
aas
push
pop
push
cs
or
jecxz
xor
popa
test
xor
data16
enter
dec
lods
nop
lods
mov
add
add
inc
test
mov
ret
jns
push
das
push
add
xor
dec
mov
xor
nop
dec
nop
or
lods
pop
add
xlat
dec
jne
daa
(bad)
rcr
adc
mov
push
pop
push
xor
pop
push
pop
add
xor
(bad)
rcr
fstp
nop
ins
in
sti
test
push
pop
add
add
and
xor
daa
jecxz
push
cmp
rol
repnz
mov
ins
sub
retf
movs
mul
dec
or
cmp
inc
mov
outs
jo
jl
cwde
inc
xor
shl
mov
inc
mov
call
mov
pop
push
or
pop
pop
jne
inc
mov
adc
cmp
in
or
jl
cmps
jae
pop
addr16
repz
push
push
call
(bad)
or
test
or
xor
icebp
xor
loop
xchg
add
jbe
gs
aaa
dec
mov
js
aam
mov
xchg
push
and
cmps
imul
and
push
push
cmps
push
or
or
mov
add
cmc
das
cld
cmp
and
pop
mov
mov
jno
movs
mov
dec
test
shl
mov
and
iret
pop
mov
xchg
ret
mov
push
mov
imul
adc
cmps
push
xor
and
aaa
movs
add
sub
mov
dec
inc
and
sbb
inc
push
mov
fadd
pop
aam
jecxz
(bad)
jge
test
out
jno
or
les
add
mov
sub
sub
cli
or
hlt
ins
push
loope
test
adc
inc
add
leave
add
pop
jp
mov
add
shl
imul
dec
ja
stos
sti
xor
pop
nop
or
push
and
push
sub
and
push
cmc
call
test
je
pop
out
pop
add
dec
str
pop
add
dec
(bad)
call
sub
push
cdq
xchg
es
popf
and
or
mov
imul
and
shl
add
ret
push
xor
xor
push
push
dec
ss
sbb
sar
(bad)
cld
mov
loop
lds
cmp
stos
stos
and
cmp
mov
mov
add
jbe
cli
cmp
jne
dec
pusha
cmp
test
jb
sbb
and
adc
add
or
adc
add
pop
jmp
inc
dec
pop
ror
ja
dec
xchg
mov
dec
cmp
rcl
scas
(bad)
mov
btr
mov
sbb
loop
add
xor
mov
jns
mov
and
xchg
pop
int
out
lods
out
mov
popf
pushf
cmp
mov
bound
add
lahf
push
mov
nop
and
cwde
jmp
div
pop
sbb
or
repnz
inc
push
sbb
icebp
mov
sbb
out
sub
inc
or
cmp
mov
fidiv
je
mov
pop
cmps
dec
mov
aaa
pop
mov
pop
add
add
jnp
jnp
push
and
jno
or
leave
repz
ret
outs
repz
outs
pop
push
aas
push
mov
es
sub
inc
leave
movs
push
addr16
adc
(bad)
mov
dec
sub
imul
ret
sub
mov
lock
push
cmp
jge
mov
pop
or
stos
add
lock
test
add
sub
and
add
add
adc
addr16
push
pusha
inc
sbb
lods
mov
pusha
clc
or
movs
jge
inc
aaa
and
dec
mov
xor
sar
repz
in
inc
or
fstp
xor
ins
stc
daa
pop
add
cld
aaa
cs
stos
jmp
jle
jle
int
push
add
leave
(bad)
mov
rcl
xor
jns
das
push
mov
push
cwde
dec
pop
ret
jne
and
xor
dec
adc
mov
add
ror
push
cs
mov
xchg
in
pusha
cmp
or
or
das
cmp
pop
pop
scas
push
inc
push
mov
rcr
mov
pushf
in
pop
xor
inc
sub
in
in
aam
daa
shl
jb
xor
add
sbb
shl
or
adc
and
cmp
inc
jne
xchg
jne
sub
mov
or
push
or
jmp
sbb
fimul
ret
aam
xor
mov
add
jo
pop
leave
mov
rcl
jno
xlat
(bad)
jp
sbb
cmp
or
rcr
add
addr16
and
add
adc
inc
popa
dec
add
js
xor
cmc
dec
in
movs
mov
xor
lods
sub
xor
adc
fisub
inc
fsub
movs
xor
lea
adc
rcl
mov
into
inc
(bad)
mov
inc
js
fsubr
jno
cmp
ret
call
adc
popa
inc
cmp
in
lahf
and
sbb
add
das
sub
or
sub
sub
std
cdq
mov
lahf
mov
dec
inc
jle
or
cmp
xchg
pop
outs
and
and
sub
rcr
adc
(bad)
movs
sbb
scas
mov
pusha
xchg
lds
pusha
add
clc
fwait
sbb
ja
scas
jge
and
jp
xchg
adc
xchg
hlt
out
jp
jns
push
and
es
push
clc
lea
mov
das
lds
fwait
movs
fdivr
popa
sub
or
lods
pop
dec
cmp
jae
push
idiv
and
mov
dec
inc
push
xor
inc
dec
mov
xor
add
dec
cs
inc
clc
pop
inc
adc
add
jle
(bad)
not
mov
jne
adc
or
inc
push
mov
cmp
call
sbb
or
push
xor
sub
retf
push
sar
outs
jl
push
xchg
inc
xor
push
add
pop
lods
push
or
mov
adc
push
popa
mov
push
addr16
test
cmp
imul
adc
enter
xchg
pop
imul
mov
mov
xchg
push
pop
or
push
pop
xor
and
ret
mov
mov
and
xchg
sbb
das
and
jp
lock
fnstenv
sbb
inc
jecxz
mov
sub
cmp
dec
pusha
and
rol
aas
xchg
jae
pop
pop
adc
mov
fld
and
jb
test
fwait
sbb
pop
and
dec
les
adc
jb
jne
ret
fisub
jnp
dec
ret
lods
push
add
movzx
mov
nop
test
add
xchg
inc
sub
ret
push
or
sbb
aaa
sub
popa
jne
sbb
pop
push
sbb
sbb
pop
inc
jg
mov
lea
not
daa
add
push
lds
push
dec
add
int3
inc
or
(bad)
xchg
or
jae
pop
fiadd
sbb
add
and
and
test
xchg
mov
xor
es
imul
add
cmp
xor
add
mov
cmp
cld
xchg
cmp
cmp
jne
sub
jbe
dec
cs
push
and
adc
and
jns
sbb
lods
pop
add
adc
dec
or
adc
ja
inc
xor
dec
pop
stc
mov
daa
je
das
push
inc
in
sbb
mov
add
sbb
int3
enter
iret
lock
outs
rcr
push
cmp
and
mov
imul
sbb
rcl
pop
lea
add
rol
xor
xchg
xchg
les
jbe
icebp
xlat
arpl
out
ret
loopne
sub
or
xor
(bad)
into
or
mov
push
sbb
aad
test
or
inc
push
aaa
sub
jg
mov
jp
pushf
pop
jns
or
mov
iret
sbb
xchg
data16
(bad)
fcomp
mov
push
or
inc
in
dec
scas
outs
jle
std
mov
mov
xchg
lea
cld
pop
push
dec
inc
add
pop
sti
add
push
int
sub
inc
sub
mov
test
cmp
push
scas
pop
sbb
sar
mov
sub
out
pusha
sbb
retf
inc
cmps
fxch
scas
sbb
(bad)
push
int3
int
shl
mov
push
adc
imul
or
loopne
fdivr
pusha
inc
or
pop
ret
adc
(bad)
xor
jo
sbb
adc
test
xchg
dec
cld
xchg
cmp
shl
inc
ror
xor
add
dec
movs
dec
jle
fimul
cld
jp
ret
ds
xchg
add
leave
add
cmp
enter
lock
loope
shl
dec
inc
loopne
sub
push
add
adc
or
sub
es
and
ss
ret
cmp
adc
push
dec
scas
pop
cwde
cmp
stc
int
int3
jl
and
inc
add
push
and
fs
ror
adc
lods
daa
in
adc
mov
xor
loope
xlat
dec
sbb
add
dec
setl
and
dec
ins
gs
adc
add
add
adc
mov
xchg
mov
and
xchg
or
or
movs
push
pop
aas
jne
and
mov
or
dec
lods
or
pop
sbb
das
loope
or
pop
cmp
jecxz
addr16
sbb
jp
dec
xchg
cmp
ins
fs
or
jle
adc
cmp
stos
nop
and
hlt
or
jle
rcr
push
(bad)
xor
arpl
hlt
mov
mov
jg
popa
xchg
mov
test
adc
mov
or
loope
sub
fsub
xor
ret
jo
push
lea
pop
sbb
loopne
shl
(bad)
dec
or
je
arpl
push
scas
xchg
jl
imul
(bad)
fidivr
jne
lods
je
jmp
leave
pop
mov
stos
and
mov
dec
aas
mov
inc
rcl
pop
jmp
fst
lahf
add
fwait
aam
add
and
or
jne
stos
adc
and
jmp
pop
cld
cmp
adc
rcr
dec
cld
push
inc
fcomp
nop
adc
movs
loope
fiadd
sub
mov
pusha
movs
test
adc
lods
mov
fcom
inc
or
sub
dec
scas
in
stos
gs
cld
or
ins
inc
arpl
(bad)
es
mov
sub
adc
add
stc
inc
jne
mov
neg
pop
les
add
adc
and
xchg
sahf
sbb
cmp
xor
enter
in
enter
mov
xchg
mov
das
mov
addr16
sub
ss
jns
in
cld
stc
or
jp
fwait
rcr
ins
mov
rol
ret
adc
enter
and
or
pop
movs
xchg
push
xchg
rol
les
sub
inc
es
mov
enter
pop
(bad)
xor
or
inc
mov
cdq
add
add
nop
shl
mul
lock
and
xchg
ror
xor
inc
inc
std
(bad)
test
adc
(bad)
ins
sbb
sub
jb
sbb
int3
sub
cmp
pop
push
into
inc
pop
push
inc
fbstp
jl
(bad)
(bad)
or
retf
pop
jle
hlt
mov
fwait
cmp
sub
outs
adc
sub
sub
adc
jmp
test
add
add
inc
push
lahf
aas
inc
mov
adc
add
adc
int
jecxz
adc
and
add
inc
retf
daa
je
rcl
xor
mov
aaa
add
call
into
xor
fnsave
and
sbb
push
add
pop
adc
add
dec
dec
jp
dec
pop
xor
mov
test
cmp
inc
mov
test
mov
out
pushf
cmp
cli
add
and
sub
add
jae
add
push
push
add
aam
inc
mov
ds
mov
mov
gs
js
and
jmp
mov
jbe
fs
das
dec
add
rcl
out
sbb
add
add
fist
adc
sbb
jb
dec
and
imul
sub
mov
mov
jge
xor
and
lea
or
jmp
inc
pop
adc
xchg
xchg
push
add
sub
push
sbb
jmp
mov
adc
aas
inc
(bad)
dec
lods
lahf
mov
addr16
rol
xchg
(bad)
das
inc
and
test
adc
pop
push
mov
pop
aas
push
push
dec
daa
sub
or
into
or
add
fs
sbb
ds
sbb
dec
xor
push
inc
ret
popa
popa
dec
dec
push
jg
test
jns
xchg
add
and
jge
sbb
mov
sub
sbb
je
jge
out
mov
xchg
hlt
(bad)
cmp
sbb
ins
mov
or
push
and
push
add
and
and
in
jmp
mov
aas
or
rcl
aam
adc
fst
pushf
jmp
fwait
xchg
and
mov
dec
ret
xor
push
cmp
jo
pop
pop
cmp
(bad)
cld
daa
adc
mov
cmp
into
int
adc
(bad)
shl
fisttp
inc
adc
into
aam
dec
iret
dec
ins
adc
adc
pop
cs
push
xchg
inc
add
pop
sub
or
dec
sub
sub
int3
sbb
fdivr
or
pop
mov
add
aas
and
jns
dec
jl
dec
jl
jl
xchg
or
fsubr
dec
mov
xor
adc
aam
inc
mov
das
dec
sbb
xchg
pop
xor
dec
fadd
pop
dec
push
ror
sbb
call
or
and
lods
stos
imul
cmp
sub
push
out
push
mov
nop
movs
adc
xor
sub
mov
aaa
test
mov
and
push
inc
rcl
in
add
jmp
repz
xchg
repz
loope
pop
repz
or
sbb
mov
add
leave
mov
imul
aam
jmp
mov
in
icebp
xor
repnz
mul
xchg
ror
sbb
into
aas
in
or
xchg
aas
add
xchg
dec
jae
xchg
aam
rcl
xchg
retf
rcl
int3
rol
int3
aam
iret
enter
loopne
inc
and
inc
int
push
rcpps
cs
enter
sbb
xchg
sub
cmp
sub
jb
sub
aam
popf
or
sub
xor
adc
mov
or
add
or
dec
lahf
sbb
mov
dec
cmp
ins
push
or
mov
addr16
cmp
jae
jb
shl
(bad)
fs
aam
add
in
push
add
stos
inc
cmp
es
dec
xchg
mov
inc
cmp
in
or
lods
add
xor
jnp
push
add
ins
push
or
and
scas
fild
inc
loopne
xchg
adc
and
lea
lods
inc
scas
test
push
add
and
sbb
pop
adc
xchg
add
das
ds
pmulhuw
push
dec
or
push
or
cmp
call
ud1
cmp
je
mov
mov
mov
shl
sar
xchg
pop
or
in
mov
add
pop
adc
xor
add
loop
pop
int3
and
add
test
pop
les
loopne
jnp
popa
cmc
or
cmp
(bad)
push
inc
addr16
mov
mov
push
sub
add
clc
pop
(bad)
loopne
ins
inc
movs
sub
add
or
clc
cmp
nop
fs
fisttp
push
or
sbb
fsub
or
sbb
inc
pop
add
mov
adc
pop
mov
jmp
sbb
lock
sbb
xchg
xor
jmp
das
(bad)
pusha
mov
push
loopne
loope
(bad)
and
inc
mov
out
add
mov
push
push
pop
pop
xchg
xor
mov
rol
lahf
inc
pop
ss
dec
ss
jnp
push
dec
dec
movs
aad
call
mov
scas
scas
sbb
rcr
lds
pop
and
in
mov
adc
jecxz
push
cmp
pop
and
add
repz
add
shl
popa
call
mov
xchg
push
or
pop
stos
or
sub
inc
fs
outs
aad
jb
jmp
push
cwde
adc
pop
adc
adc
in
lea
add
cmps
and
shl
mov
mov
js
mov
(bad)
dec
jge
or
push
cmp
jae
mov
inc
leave
mov
push
push
sbb
ficomp
inc
sbb
addr16
push
sbb
in
push
test
aam
add
mov
mov
sbb
add
mov
retf
enter
lods
jge
jae
and
lahf
inc
je
leave
loop
ficom
imul
imul
pop
mov
cmp
div
sbb
inc
add
out
sbb
or
add
add
repnz
inc
js
jo
fnsave
pop
pop
test
or
jecxz
mov
pop
mov
retf
push
xchg
cs
mov
leave
cmps
dec
aad
or
test
or
mov
loop
mov
add
dec
cmps
fmul
or
sahf
fld
sub
movs
hlt
fcmovnu
ret
or
fcomp
hlt
or
sbb
clc
and
cmp
data16
sbb
stos
sub
pop
(bad)
dec
mov
jl
leave
rcr
add
inc
xchg
fsubr
fisttp
sub
(bad)
sub
or
in
clc
or
sub
leave
adc
mov
in
sbb
rcl
sbb
mov
jmp
jne
dec
shr
mov
pop
or
adc
(bad)
dec
mov
pop
and
add
jb
pop
adc
retf
xchg
rcl
ins
retf
or
bound
add
test
rol
inc
and
add
push
jmp
repz
cmp
push
adc
jge
movs
std
or
and
dec
and
dec
jae
add
push
add
and
xor
xchg
xor
cmp
add
inc
fld
ret
add
or
adc
pushf
sbb
pop
ja
or
sbb
or
sbb
lods
jno
adc
in
xchg
add
push
push
dec
mov
or
sbb
mov
lods
rcl
dec
xchg
cmp
add
sub
push
adc
xchg
jbe
sub
sub
jle
add
sub
sbb
mov
(bad)
cmp
pop
adc
dec
jmp
inc
js
stos
shr
enter
into
rol
(bad)
outs
imul
push
add
cmp
lods
fcom
cmp
cdq
xor
push
sub
rcr
mov
enter
dec
pop
(bad)
mov
in
add
ss
out
dec
push
ret
shl
pop
sbb
cmp
sbb
xor
ret
shr
push
cwde
xchg
adc
push
add
call
sub
mov
cmp
adc
or
gs
or
sbb
pop
cmp
test
push
and
(bad)
add
test
push
mov
es
sahf
in
dec
fnstcw
jo
cwde
dec
leave
loopne
pusha
xor
fisttp
push
in
stos
mov
mov
dec
sbb
inc
add
cmp
jmp
or
cmp
test
sub
outs
pop
jb
test
fcomp
cmps
out
daa
sub
sub
push
inc
sub
jnp
add
and
iret
adc
dec
jne
jne
inc
lods
dec
jl
sub
inc
pop
mov
and
movs
xchg
jl
or
mov
aam
bound
add
test
dec
in
mov
sti
push
rcl
ror
cmp
dec
xlat
in
bound
imul
mov
mov
cwde
mov
or
sub
add
add
ss
inc
les
mov
jne
add
push
mov
mov
enter
add
push
sbb
cmp
movs
cmp
push
das
add
sub
out
popa
sub
les
sub
ret
loop
or
mov
addr16
inc
sbb
push
pusha
or
mov
movs
pusha
leave
adc
add
and
lea
mov
pop
mov
je
sbb
cmps
adc
les
frstor
add
mov
cs
mov
add
jnp
test
xor
add
add
and
ror
push
int
rcr
aaa
rol
stos
mov
mov
sub
pusha
dec
sub
(bad)
lock
add
(bad)
sbb
push
pop
add
movs
or
fimul
xchg
jns
pop
jns
xchg
pushf
adc
outs
xchg
sub
adc
sub
xchg
push
adc
pop
jb
push
mov
or
sar
rcr
ret
int
std
mov
in
jns
dec
and
sahf
or
cmp
mov
mov
add
pop
add
pop
in
push
add
and
push
sbb
adc
gs
and
push
jle
int3
and
jmp
and
ds
and
popa
push
in
pop
and
enter
lods
in
inc
pop
or
in
test
aas
or
enter
xor
xchg
nop
out
cmp
or
xchg
mov
nop
pop
add
mov
loopne
fbstp
push
pop
or
test
jo
sbb
add
int3
cmp
jl
or
jl
jo
adc
push
add
jb
pop
inc
pop
rcl
inc
repnz
lods
dec
mov
sbb
adc
or
repz
xor
xor
jmp
rcr
push
leave
repz
sbb
or
lods
or
pop
(bad)
rol
(bad)
fdiv
add
mov
test
dec
ss
mov
push
or
call
or
cmp
ror
pop
xchg
retf
sbb
or
xchg
clc
fdivr
movs
movs
in
mov
xchg
clc
fadd
cs
out
mov
xlat
push
cwde
or
in
add
pop
loop
enter
jnp
inc
inc
lock
jmp
aas
in
(bad)
add
or
mov
call
pop
mul
or
adc
in
inc
inc
out
xor
mov
outs
inc
or
pop
adc
adc
ja
pop
imul
inc
adc
test
test
sbb
xor
cmps
in
or
dec
cmp
push
sbb
inc
jo
jg
xchg
inc
xchg
lods
push
or
repz
cs
cs
out
jae
inc
dec
es
mov
mov
pushf
test
adc
ss
call
push
push
ret
data16
sbb
cmp
inc
jb
adc
es
add
jmp
mov
loopne
repnz
ins
es
add
hlt
xchg
inc
jb
jmp
aas
push
add
lock
push
jg
adc
enter
and
pop
inc
and
push
and
shr
dec
hlt
stc
rcl
cmp
stc
sbb
pop
xchg
push
lahf
pop
aam
xor
fisubr
cmp
imul
cld
xchg
and
sub
lahf
and
vunpckhps
in
dec
add
repnz
push
fisttp
inc
or
inc
and
js
or
popa
dec
cmps
or
pop
sbb
lock
in
or
mov
mov
mov
jle
and
(bad)
xlat
pop
push
dec
and
add
add
adc
shl
jmp
inc
adc
mov
inc
int
jecxz
or
dec
(bad)
and
das
and
inc
add
inc
add
sbb
or
xor
push
jge
cld
push
mov
das
or
in
xor
leave
pop
lds
or
lods
adc
pop
jle
fld
add
xor
enter
aaa
jmp
or
call
ins
mov
out
add
dec
icebp
pop
int3
cmp
inc
mov
loopne
pop
int3
xor
sbb
and
lahf
dec
sub
and
sub
inc
push
scas
or
dec
pop
jl
jg
es
xchg
jbe
mov
xor
add
mov
fist
shl
call
gs
popa
or
das
in
jns
hlt
lock
hlt
add
adc
ret
mov
rcl
add
call
stc
stos
es
cmps
push
add
push
mov
rcl
jge
arpl
fld
jae
dec
inc
daa
xor
push
lock
in
push
add
jmp
jns
dec
or
inc
mov
shl
(bad)
sahf
or
ins
pop
mov
daa
test
ret
adc
in
add
xchg
or
call
cld
inc
lods
pop
push
dec
pusha
cmps
call
(bad)
mov
cmp
sbb
sbb
mov
mov
jmp
inc
ins
add
mov
or
sti
movs
adc
cmp
xchg
jno
inc
cmps
in
call
in
sub
fmul
cs
ret
rol
pop
add
test
and
dec
push
lock
stos
xchg
scas
push
iret
lock
adc
(bad)
inc
(bad)
push
cmp
pop
out
ja
sbb
in
das
add
sar
hlt
mov
and
pop
stos
push
jmp
push
ret
dec
sub
aam
cmp
fst
and
test
sub
and
mov
jl
add
or
popa
and
pop
sub
fild
and
jmp
sub
repz
cmc
das
jne
cmp
mov
mov
mov
inc
not
mov
sbb
adc
adc
sbb
mov
cmp
daa
stc
into
jle
movs
xor
sub
mov
adc
(bad)
fcom
mov
add
in
xor
add
jnp
mov
adc
loop
loop
jnp
outs
dec
fimul
pop
pushf
xor
not
mov
rol
sub
add
xor
push
mov
sub
test
iret
ss
jne
add
mov
sti
xor
stc
lds
pushf
imul
pop
movs
jnp
arpl
or
gs
rol
or
cmp
lods
sbb
or
cwde
mov
pop
xchg
fucomip
mov
call
gs
xchg
pop
sar
mov
shl
adc
xor
nop
ja
int
cmps
mov
cmp
mov
(bad)
xchg
sub
xchg
dec
mov
sub
push
cs
dec
xchg
or
retf
push
mov
sub
jmp
jne
inc
add
mov
pusha
push
push
lock
adc
movs
inc
fwait
call
pop
imul
or
cmp
sbb
(bad)
sar
or
mov
xchg
sub
fild
mov
retf
jg
mov
iret
or
adc
(bad)
xor
sub
add
dec
and
es
fwait
clc
push
jbe
test
clc
add
mov
pop
push
mov
or
test
aas
ficom
mov
addr16
and
mov
cmp
inc
arpl
cld
or
retf
cmp
addr16
sub
sub
leave
out
add
adc
mov
imul
push
mov
and
retf
xor
add
stc
add
repz
or
mov
and
arpl
or
xor
shl
dec
and
and
and
fcomp
inc
xchg
leave
lock
ror
pop
dec
icebp
js
loopne
cmps
dec
push
jp
dec
sbb
xchg
jp
xchg
int
pop
jle
jns
dec
push
or
and
inc
mov
cmp
ss
mov
xchg
dec
xchg
adc
jns
inc
aad
(bad)
aad
loopne
pop
lea
(bad)
iret
es
loope
shl
and
shl
lock
es
mov
cmp
arpl
mov
dec
push
cmp
pusha
add
or
add
ss
mov
out
dec
mov
pop
dec
sti
push
mov
adc
inc
jne
dec
arpl
inc
sub
call
in
fwait
cmp
ds
rol
sbb
and
and
push
cmps
xchg
push
ret
mov
ret
inc
mov
jne
xchg
rol
add
aad
pop
cdq
adc
xchg
or
or
xchg
mov
lods
jne
or
xchg
inc
fs
mov
mov
test
cmp
inc
add
fucomip
loope
fs
and
mov
and
jg
and
or
(bad)
loopne
jmp
enter
shr
loope
jmp
fs
push
add
pop
adc
adc
pop
add
shr
xlat
retf
sbb
mov
push
icebp
or
jb
push
sti
mov
add
sbb
and
mov
push
jle
adc
inc
jmp
leave
ss
add
jl
dec
mov
test
mov
cmp
and
ror
loopne
sub
stos
adc
push
js
mov
ds
test
push
or
inc
aam
adc
in
dec
adc
inc
mov
sub
sub
(bad)
xor
and
xlat
dec
mov
mov
mov
pop
add
inc
ret
pop
popa
dec
loop
scas
or
es
sub
rcr
inc
mov
mov
out
test
pop
mov
mov
xor
inc
add
jb
sub
and
xor
or
mov
cmp
mov
jmp
jl
clc
rcl
out
(bad)
(bad)
xchg
pusha
imul
sbb
add
mov
cmp
jb
movs
int3
test
fistp
mov
inc
in
pushf
pop
cmp
loope
add
push
cmp
mov
outs
mov
ret
les
movs
xor
xor
sbb
test
push
sbb
pop
xchg
inc
push
dec
bndldx
pop
sar
not
mov
cmp
ins
pop
pop
(bad)
mov
inc
jmp
adc
inc
cmp
ret
mov
movsx
adc
imul
mov
adc
push
test
xchg
and
and
pop
sbb
add
push
sub
call
movs
and
adc
test
xor
call
cmp
js
adc
ja
xchg
add
lea
jmp
mov
add
push
cmp
repnz
fisttp
add
push
xchg
xchg
cmc
xor
cwde
jb
dec
inc
xchg
mov
add
mov
js
inc
or
call
inc
cwde
push
ja
xchg
fadd
adc
and
bound
sub
add
ror
loop
loop
add
jo
mov
ds
leave
or
inc
jmp
and
pop
push
test
inc
cmp
icebp
sbb
push
(bad)
dec
ror
inc
push
add
add
int3
rol
cmc
sahf
and
xchg
test
shl
mov
clc
ss
pushf
(bad)
cmp
push
or
jb
xchg
cdq
lods
sbb
jb
pop
aas
pop
adc
xchg
sub
adc
test
sar
pop
scas
adc
mov
sub
mov
stos
test
push
sbb
inc
push
test
push
arpl
pop
pop
or
or
sub
adc
xor
pop
stc
add
addr16
or
add
xor
jno
jo
fist
ror
fld
ja
arpl
inc
lods
jae
pop
or
(bad)
aas
fist
and
enter
sub
clc
(bad)
mov
and
push
adc
add
pop
mov
or
scas
daa
and
or
mov
sub
dec
and
mov
test
ror
push
ret
mov
inc
add
push
xchg
ins
aaa
xchg
bound
mov
jl
push
cdq
lods
inc
mov
sbb
aam
movs
movs
mov
xor
pop
jmp
fisub
add
mov
sbb
and
fiadd
rcr
cmp
pusha
xchg
xor
mov
sub
cmps
fsub
aaa
sub
ins
daa
jbe
pop
ret
adc
xchg
push
mov
mov
xchg
aam
adc
push
sbb
adc
pop
xor
repnz
shl
mov
or
push
(bad)
in
xchg
jl
test
xchg
and
popa
dec
push
mov
adc
sub
xchg
stos
mov
jb
and
mov
mov
ror
cli
aas
adc
movs
in
ins
jecxz
fild
add
rol
xor
adc
add
or
sbb
repz
or
and
icebp
jae
push
or
das
pusha
ret
mov
outs
enter
xor
dec
inc
cmp
add
ret
(bad)
sbb
rol
ret
cmp
or
movs
ins
fld
or
outs
add
ror
arpl
adc
loope
test
pop
jg
dec
add
leave
xor
sub
add
push
jae
mov
push
loope
add
vunpckhps
clc
cmps
cmp
inc
mov
inc
dec
adc
mov
call
pop
inc
cwde
dec
imul
bound
call
ret
sub
xchg
or
nop
dec
es
inc
fs
es
inc
inc
dec
fcom
add
cmp
popa
dec
pushf
sub
ficom
and
addr16
and
lock
push
loopne
xor
sub
xchg
test
ins
cdq
add
dec
dec
xor
sbb
movs
test
jmp
and
push
std
or
(bad)
adc
rcl
bound
and
jg
es
sub
push
rol
add
sub
dec
fild
adc
or
lahf
or
inc
inc
pop
jecxz
les
rcr
ds
mov
pop
sub
pop
out
lods
movs
cmp
sub
adc
cmps
das
push
es
movs
add
add
or
push
sub
jl
or
xor
pop
sbb
inc
xor
push
xchg
and
add
adc
adc
or
fidiv
jae
pop
in
push
push
jmp
sbb
or
push
push
push
or
sub
adc
push
bound
or
add
push
fbstp
inc
lods
cmp
add
aad
clc
dec
mov
pushf
sub
mov
fs
add
sub
push
adc
add
repnz
jp
add
mov
and
push
inc
cmp
in
jne
push
inc
jecxz
movs
xor
in
mov
and
mov
aaa
and
push
cmp
push
inc
test
lock
and
scas
push
pop
push
aas
jmp
pop
dec
call
mov
adc
pop
repnz
mov
adc
ss
or
mov
cmp
pop
and
ja
mov
mov
aas
inc
bound
push
jno
lahf
or
mov
jnp
add
lea
les
out
dec
nop
fcom
add
sub
pop
jo
or
mov
fmulp
push
enter
or
push
cwde
jns
out
nop
mov
sub
push
pop
fsub
jmp
aaa
add
enter
lahf
push
or
add
repz
sahf
push
inc
push
nop
push
fs
mov
lahf
or
push
mov
enter
push
mov
jns
test
and
or
sub
inc
lahf
mov
or
push
js
lahf
adc
add
jmp
sub
imul
and
aad
pop
inc
sbb
pop
es
jmp
mov
dec
add
cdq
push
inc
pop
pop
xchg
pusha
or
sub
lea
pop
mov
pop
ret
add
sub
and
jnp
and
jb
adc
inc
and
in
sbb
xor
add
ret
cld
(bad)
add
jl
popa
dec
xor
cdq
pusha
inc
or
fwait
xor
clc
hlt
movs
(bad)
shl
imul
inc
and
gs
out
pop
dec
pop
mov
mov
or
out
mov
mov
sar
repz
or
mov
repnz
mov
mov
add
pop
mov
mov
loope
pop
mov
xor
daa
hlt
test
and
adc
lea
xor
sbb
sbb
ss
clc
inc
sar
shr
scas
ins
pusha
or
mov
ss
or
push
or
aas
inc
push
push
cmp
add
jne
fs
(bad)
xchg
neg
fs
test
popa
cmc
mov
fidiv
inc
inc
jmp
das
push
jne
or
cmps
retf
les
push
push
lea
gs
sbb
in
mov
mov
ror
jg
push
and
lods
pop
mov
inc
adc
mov
mov
les
fmul
adc
test
int3
call
dec
xchg
aad
push
lods
push
retf
mov
add
stc
mov
mov
aaa
xchg
mov
or
dec
cmp
lods
xlat
retf
cmp
lds
xchg
js
sub
je
loope
test
mov
movs
call
(bad)
(bad)
jmp
sub
cwde
int3
lds
stc
jae
loope
pop
xchg
push
das
push
addr16
mov
xor
add
rcl
mov
push
imul
je
sbb
cmps
cmp
inc
call
popa
mov
dec
inc
push
sub
cmp
and
test
into
in
and
ins
and
jae
(bad)
jmp
popa
mov
jns
dec
or
repnz
in
mov
imul
movs
dec
jp
out
sbb
and
in
xor
xchg
(bad)
stc
inc
mov
div
and
dec
xor
arpl
inc
enter
inc
mov
movups
push
adc
xchg
and
leave
add
or
movs
xchg
rol
daa
rcl
add
add
inc
or
xchg
push
sub
lea
test
loop
add
sub
pop
jbe
mov
mov
jmp
mov
rol
mov
test
hlt
mov
or
xchg
enter
xor
cmc
aas
add
test
jecxz
jge
add
xor
dec
pop
gs
test
fcmovb
and
or
or
or
jne
jecxz
in
fdiv
xchg
dec
nop
xchg
out
jne
xor
mov
and
cmp
popf
adc
sar
cmp
inc
aam
inc
sbb
jo
jnp
add
shr
shr
or
rol
retf
mov
adc
aad
and
push
jp
jle
cmp
ds
add
sbb
pop
lahf
ss
jg
sbb
cmp
add
jmp
out
iret
jno
int3
add
adc
xchg
push
es
push
add
xchg
mov
nop
(bad)
pop
add
mov
cmp
cdq
lea
mov
jno
xchg
in
icebp
stos
pop
or
sub
sub
stc
push
iret
xchg
pop
movs
pop
pop
adc
xor
pop
cmp
cmp
scas
pop
mov
fwait
lods
outs
pop
push
cmp
ins
cmp
prefetcht2
shr
inc
cmp
push
xor
out
mov
mov
pusha
int3
or
addr16
cld
ins
mov
add
mov
add
aam
fs
mov
rcr
cmp
xor
aam
sub
js
dec
aam
jge
mov
les
and
test
and
rcr
dec
adc
cmps
and
es
xchg
and
in
pop
dec
jnp
cmp
pop
push
pop
push
(bad)
test
xchg
int3
mov
add
addr16
stc
pop
hlt
mov
shl
pop
imul
and
stos
(bad)
enter
mov
push
jp
mov
mov
les
mov
mov
push
test
(bad)
lock
cmp
xor
dec
ds
inc
sub
sbb
mov
and
dec
jmp
push
mov
ins
inc
sub
ret
sub
je
adc
ss
lods
inc
mov
in
cdq
adc
leave
and
sub
rcr
add
mov
lea
aaa
test
adc
push
mov
pop
cmp
lock
push
sub
push
add
clc
xor
imul
push
rcl
(bad)
jo
or
shl
push
fwait
push
das
mov
pop
sbb
pop
inc
or
jle
push
cmp
or
inc
bound
jno
fidiv
lock
mov
sub
aad
mov
mov
jnp
push
and
adc
in
xchg
(bad)
xor
mov
adc
loope
dec
cmp
add
lock
or
aam
leave
mov
adc
add
ins
jmp
or
dec
cmps
or
mov
jnp
ret
dec
loopne
(bad)
movs
or
pushf
xchg
out
shl
add
inc
retf
(bad)
jmp
fild
add
fisttp
jno
push
inc
ins
mov
push
push
pop
lock
in
inc
popf
add
stc
shl
mov
push
xchg
in
adc
jb
push
pop
adc
enter
mov
and
fsub
movs
loopne
and
mov
xor
lods
sti
or
xchg
(bad)
fstp
cmp
out
in
and
and
adc
out
jg
xchg
xchg
mov
test
(bad)
xor
or
stc
or
adc
xchg
or
adc
movs
test
or
ja
or
sbb
adc
jecxz
inc
or
mov
sbb
mov
and
mov
or
mov
sbb
enter
xor
repz
jo
mov
push
sub
mov
add
(bad)
hlt
pop
mov
jo
jbe
and
and
mov
(bad)
push
pop
inc
out
jle
cmp
sub
add
pop
call
mov
sti
ret
jge
pop
xchg
ss
invd
xchg
call
ror
(bad)
dec
add
sub
xor
xchg
cli
push
loope
imul
pop
out
retf
repz
pushf
dec
shr
xchg
inc
adc
inc
loop
cdq
sbb
sub
dec
push
ss
movs
inc
sub
cs
in
sub
leave
mov
fs
jle
pop
adc
adc
repz
mov
cmps
ss
sbb
or
xor
sbb
(bad)
adc
ret
ds
into
pop
mov
xor
xor
jb
push
inc
aaa
repnz
popa
fs
push
not
jl
je
inc
outs
je
inc
jne
push
adc
in
js
or
icebp
movs
test
mov
lods
ret
jb
rol
and
bnd
test
lea
addr16
and
push
or
sahf
or
xor
or
inc
out
xchg
sub
lock
sbb
dec
cmps
hlt
gs
test
mov
mov
pop
pop
(bad)
dec
cmps
mov
push
and
or
imul
cmp
or
sbb
lea
and
push
js
or
dec
loopne
clc
sahf
mov
xchg
out
cmp
adc
mov
loope
or
retf
mov
cmp
add
and
add
push
popa
pop
pusha
or
inc
mov
jecxz
add
(bad)
lock
dec
popf
and
das
sbb
jmp
mov
sbb
pop
add
mov
jecxz
xor
lock
loope
pop
mov
popa
cmp
push
pushf
inc
lds
pop
lods
iret
inc
pop
loopne
mov
xchg
int
add
cli
aaa
push
not
dec
ret
mov
loop
popf
fidiv
aam
and
imul
sbb
mov
mov
push
adc
sbb
dec
add
cmp
out
cwde
repz
or
xchg
sbb
sbb
sub
sti
adc
sbb
fs
jl
mov
mov
nop
mov
cmp
test
adc
adc
sub
mov
adc
les
sub
mov
inc
loopne
repz
fwait
imul
and
push
sub
sub
popa
inc
adc
add
xor
jle
adc
mov
lock
push
and
mov
cmp
outs
xchg
mov
add
fdivr
test
(bad)
xor
or
imul
cmp
rcl
add
inc
inc
pop
mov
test
mov
or
mov
sbb
sub
xchg
mul
pop
pop
rol
adc
jp
and
add
push
mov
or
pop
adc
and
mov
sar
popa
dec
add
ins
sub
ror
or
pop
aas
pop
and
aas
and
adc
mov
sbb
ds
xor
mov
push
pusha
or
xchg
sub
add
and
mov
cmc
pusha
add
inc
lahf
or
aad
jbe
mov
dec
mov
inc
jmp
je
or
cwde
cdq
pop
jmp
push
mov
lods
imul
or
sbb
xor
in
xor
aaa
stos
add
lods
mov
stos
sub
jg
jl
adc
jae
adc
mov
(bad)
ins
mov
lea
pop
jg
pop
xchg
mov
pop
dec
fnstcw
aaa
imul
adc
inc
pop
ds
dec
test
sbb
retf
add
sbb
test
or
nop
add
es
test
scas
rcl
test
jg
add
pop
ret
je
sbb
lods
cmp
xchg
add
or
fisttp
inc
pop
push
pop
inc
or
adc
test
dec
imul
pop
cmp
jle
adc
xchg
mov
cmp
lea
jg
cdq
or
mov
fadd
cmp
push
(bad)
mov
xor
dec
aaa
and
xor
pop
popa
push
add
(bad)
std
dec
test
(bad)
rol
int3
adc
fnstcw
add
mov
cmp
push
and
add
pop
mov
add
xchg
arpl
popa
sub
mov
cmp
add
jl
retf
or
add
aam
retf
mov
pop
test
in
push
mov
and
repz
inc
adc
jle
or
cs
mov
ror
mov
outs
sbb
xor
push
test
outs
addr16
cld
xchg
add
push
xchg
mov
fdivr
add
mov
loopne
pop
jge
add
mov
jmp
pop
dec
les
mov
mov
xchg
cmp
sub
sbb
adc
jno
cwde
retf
mov
fidiv
call
inc
lahf
out
(bad)
xor
out
add
add
sahf
add
mov
ja
mov
push
cld
data16
push
adc
add
mov
in
add
add
jnp
fist
mov
mov
imul
jl
mov
in
xchg
scas
push
cmps
fstp
mov
xchg
add
add
add
add
push
jl
call
add
push
pop
fcomp
sbb
or
push
or
add
aad
aas
cmp
xor
je
mov
xor
push
test
or
fwait
xchg
out
pop
and
ins
mov
jge
xchg
push
xchg
out
mov
jae
push
adc
shl
inc
adc
rcr
(bad)
imul
fs
dec
outs
stos
ins
int
and
sub
lds
pop
jmp
sahf
int3
pushf
add
daa
add
sub
hlt
sbb
aas
or
inc
pop
clc
pop
dec
add
rcr
les
adc
push
xor
pop
pushw
fwait
mov
mov
xor
sub
jmp
and
push
push
dec
out
and
xchg
dec
sahf
outs
loopne
and
mov
adc
push
or
fist
sbb
add
enter
jb
cmp
in
retf
and
and
or
add
inc
rol
dec
sub
dec
push
sahf
pushf
sbb
pop
rol
and
inc
push
xchg
cmp
inc
rol
sub
xchg
sbb
sbb
inc
enter
rol
in
into
(bad)
mov
mov
rol
xchg
push
dec
sub
adc
add
shl
xchg
nop
jb
xchg
dec
mov
and
movs
mov
mov
push
enter
dec
adc
movs
jb
adc
test
mov
movs
mov
dec
sub
in
add
and
test
js
in
xor
xchg
or
inc
pop
es
xor
sbb
push
test
and
dec
jns
and
iret
dec
int
adc
xchg
jb
sub
push
dec
fld
jecxz
push
jo
cwde
adc
dec
or
dec
test
add
inc
inc
sbb
pop
xchg
push
nop
pop
push
inc
cmc
or
xchg
xor
xor
cmp
push
ror
ss
cmps
les
push
push
fcomi
cmp
mov
add
pushf
cs
xlat
jns
out
fld
in
ret
repnz
xor
sti
iret
(bad)
or
mov
sahf
fld
push
ror
out
fnstenv
fcmovne
xchg
push
(bad)
adc
pop
push
int3
pop
les
test
sub
cmp
leave
call
repz
ins
dec
push
imul
add
lahf
or
jno
pop
jb
mov
pusha
pop
add
iret
repz
fstp
fnstsw
loope
out
ss
lock
in
in
sahf
idiv
out
jmp
in
out
sahf
not
push
out
out
lock
cmp
jnp
repnz
test
iret
rep
lods
scas
scas
push
out
sahf
out
div
clc
stc
jns
push
pushf
cli
cld
push
rcl
push
shl
jns
out
aam
(bad)
xlat
and
and
rep
dec
pop
jno
pop
sbb
das
test
adc
and
aaa
pushf
test
adc
mov
mov
cmp
cmp
cli
cmp
mov
rcr
sub
or
sub
fisub
add
out
push
add
pop
(bad)
sahf
bound
push
int3
fld
xor
xor
push
enter
pop
(bad)
adc
imul
pusha
push
dec
jae
add
inc
xchg
and
push
and
adc
fmul
dec
add
push
add
add
sbb
(bad)
and
sbb
add
and
ficom
mov
pop
fld1
lods
add
push
or
xchg
xchg
add
push
frstor
cmp
push
cs
mov
inc
mov
lods
sbb
(bad)
jmp
leave
xor
les
mov
add
in
aad
fdivr
sbb
add
xor
test
adc
adc
enter
lods
adc
movs
aam
jb
enter
adc
out
xchg
in
jmp
pop
mov
jmp
stos
test
push
push
nop
inc
stos
call
jmp
xchg
out
sahf
addr16
scas
aam
push
aad
push
mov
mov
cmp
icebp
cmp
out
mov
imul
add
add
add
nop
cld
adc
or
prefetchw
int
sbb
push
out
pop
push
mov
sahf
adc
jne
jecxz
jns
fcomp
cmp
xor
mov
(bad)
mov
sbb
sar
lods
add
les
test
mov
lock
or
or
popa
imul
cmp
jg
sbb
add
add
xor
rcpps
cli
inc
lea
sub
aaa
cs
ficomp
dec
inc
push
push
pop
xlat
lea
mov
and
pusha
outs
pop
lock
adc
stos
push
shl
retf
bound
jmp
gs
adc
out
add
cmp
iret
rcl
lock
ret
or
(bad)
sub
cmp
aas
sbb
add
pop
add
adc
pop
fdiv
enter
push
call
test
jo
mov
mov
pop
call
or
shl
mov
fst
mov
sub
loopne
push
adc
pop
xchg
add
loopne
inc
adc
adc
sub
dec
or
gs
fs
lds
(bad)
cmp
fisttp
and
and
repnz
inc
js
aam
xor
(bad)
test
sbb
push
enter
push
push
call
dec
shr
mov
mov
call
std
or
je
inc
xlat
mov
mov
xor
or
imul
cdq
gs
cmp
mov
push
add
adc
lock
jmp
call
ins
adc
sbb
sub
jne
jmp
lods
jnp
imul
pop
dec
ret
and
and
sbb
push
xchg
inc
xchg
mov
fnstsw
xchg
push
sbb
mov
into
cmps
and
sub
jl
ror
popa
xchg
jmp
inc
hlt
xchg
into
and
cmp
hlt
les
pop
pop
add
test
sbb
xchg
sub
xor
jo
pop
push
add
jp
icebp
int3
mov
pop
nop
or
cmp
int
mov
push
inc
mov
mov
aad
or
or
xchg
push
xor
call
lds
dec
xor
jae
xchg
sub
stc
iret
xchg
sbb
ror
cmp
xchg
sbb
push
mov
adc
sub
lock
ret
out
xor
rol
xor
push
inc
pop
xchg
adc
mov
push
inc
out
cmp
mov
cli
xchg
enter
cmp
ja
pop
sub
push
in
sbb
push
inc
or
aas
dec
or
dec
(bad)
inc
stos
ins
in
xchg
leave
stos
sbb
dec
xor
push
push
and
xchg
adc
fsub
dec
cmps
fmul
fmul
enter
sbb
int3
add
sbb
pop
inc
outs
and
or
aam
adc
dec
cmps
aam
push
cmp
enter
or
pop
add
lods
fld
add
clc
xchg
lds
hlt
mov
mov
push
pusha
jmp
sub
push
add
(bad)
repz
or
jae
nop
hlt
push
dec
sbb
in
pop
dec
test
xor
int
sbb
inc
or
or
and
aam
enter
aaa
push
cwde
sar
jbe
sbb
and
test
cmp
jmp
mov
sti
mov
clc
imul
mov
sub
imul
rcr
imul
or
cdq
inc
dec
or
loopne
or
push
clc
daa
add
jmp
dec
lock
enter
mov
xchg
add
and
and
hlt
adc
mov
jmp
pushf
add
mov
pushf
mov
ins
add
jmp
dec
sar
inc
cmp
repz
sbb
and
mov
mov
adc
jns
xor
inc
or
mov
add
in
mov
add
pop
movs
pop
rol
and
jmp
dec
push
xchg
sbb
bound
(bad)
cdq
or
inc
gs
std
xchg
or
mov
imul
cmp
std
jb
daa
cmp
jbe
mov
xchg
add
and
xchg
xlat
pop
and
inc
cdq
cmp
ins
push
dec
inc
add
add
add
adc
adc
test
xchg
adc
lods
test
stos
or
test
jmp
xchg
lahf
shr
cld
add
sbb
mov
shr
dec
fwait
cli
lock
das
sub
push
ins
xor
dec
loope
add
cmps
xor
push
push
fist
rol
pop
or
xor
xchg
aas
cmp
push
add
push
shl
je
xor
popa
lods
jmp
sub
test
out
cmp
xchg
pop
or
push
lock
dec
hlt
pop
gs
pop
ror
ins
ins
lea
and
retf
ins
jo
pop
inc
les
push
dec
inc
in
mov
dec
sar
push
mov
inc
pop
test
ja
mov
xchg
sbb
dec
jle
mov
movs
loopne
hlt
es
and
jae
dec
mov
or
ds
lea
add
sbb
mov
pop
popf
push
cmp
movs
add
sub
loope
mov
sbb
jle
imul
dec
and
adc
fdiv
sar
or
test
add
cmp
adc
mov
jnp
sbb
ds
out
add
jmp
mov
or
jmp
sub
inc
adc
in
(bad)
rol
xchg
std
push
adc
adc
adc
ficomp
mov
and
mov
xor
fxch
mov
cmc
(bad)
das
lea
jne
push
mov
xor
rcr
int
mov
or
daa
xchg
imul
or
pop
pop
inc
out
les
xlat
test
idiv
or
sbb
and
add
push
mov
push
mov
(bad)
ficom
hlt
jecxz
pop
loopne
jb
shr
sar
sub
cmps
push
adc
rol
push
adc
dec
call
cld
dec
jg
sbb
add
bound
loopne
shl
fiadd
mov
push
cmp
dec
inc
fs
rcl
rcr
jno
or
adc
rcr
int
dec
or
pop
lea
das
mov
jno
dec
xchg
mov
push
or
popf
adc
fld
pop
sub
call
xchg
scas
inc
dec
inc
dec
adc
and
cmp
mov
xchg
jo
mov
add
mov
and
mov
call
push
loopne
push
jb
out
add
fldcw
fldenv
and
sub
fs
cmp
int3
ror
push
xor
xor
mov
sbb
and
rcr
push
add
xchg
push
add
cdq
mov
mov
cld
cmc
sbb
mov
pop
jmp
loopne
ss
and
enter
push
inc
dec
jge
(bad)
rol
push
or
push
and
bound
mov
push
adc
jne
push
sub
cld
cld
sub
dec
jl
or
nop
or
dec
pop
add
div
sub
xchg
rcl
loope
dec
adc
and
pop
cmp
sub
fdivr
add
je
pop
jp
retf
jmp
inc
or
adc
push
ficomp
or
jge
int3
jmp
sub
rcr
dec
addr16
add
sbb
pop
fld1
arpl
and
ss
shr
and
pop
daa
loopne
les
in
mov
nop
add
xchg
mov
and
in
and
xchg
sub
xchg
sbb
fcomp
retf
adc
fcomp
in
je
addr16
dec
dec
mov
and
xor
mov
mov
lods
mov
adc
shr
fs
sbb
lock
setl
mov
and
inc
xor
jl
mov
ret
mov
mov
mov
ja
or
test
ror
icebp
cmps
inc
dec
and
shl
leave
inc
or
xor
jg
or
nop
add
inc
jne
ret
cmp
sti
enter
xor
push
data16
into
loop
rcr
pop
icebp
imul
mov
inc
lds
mov
popa
jmp
add
sub
add
push
dec
ret
test
push
or
and
icebp
imul
aas
jp
push
and
jae
test
es
mov
adc
movs
in
and
add
sub
sbb
aas
sbb
and
adc
clc
stc
xor
cdq
std
std
std
and
in
xchg
dec
sub
lods
push
add
pop
or
(bad)
cwde
dec
and
retf
adc
adc
das
cmc
iret
jbe
pop
movs
std
cdq
je
adc
je
jmp
xchg
inc
ins
dec
pop
push
xchg
adc
xchg
dec
gs
adc
push
sub
stc
push
cmps
push
add
retf
test
add
outs
jge
adc
xchg
or
sahf
inc
es
std
std
std
nop
nop
out
pop
jmp
and
inc
cmps
nop
add
inc
xor
xor
and
je
dec
mov
or
or
cmp
and
mov
sbb
adc
dec
and
and
imul
xor
xor
mov
rcl
adc
xor
cmps
cdq
jb
and
popa
inc
cli
dec
(bad)
mov
loope
cwde
add
cs
mov
mov
test
xchg
int
loopne
sub
cli
xchg
and
or
add
shr
call
lods
sub
and
std
les
dec
arpl
mov
or
jne
xlat
ret
lea
mov
stc
sbb
xchg
cmc
nop
out
push
push
mov
and
and
inc
cmps
mov
xchg
and
sbb
inc
or
aam
test
adc
inc
inc
mov
or
jno
pop
ret
or
xor
or
ja
mov
loope
rcl
(bad)
ror
hlt
xor
xchg
test
jmp
and
je
xchg
add
xor
adc
inc
(bad)
into
movs
mov
inc
or
jmp
mov
ror
jbe
xchg
push
outs
ss
dec
xor
shr
cdq
cmpxchg
inc
call
dec
adc
in
push
inc
and
pop
dec
or
mov
je
jae
clc
dec
clc
or
movs
popa
and
clc
call
aam
ins
jne
jae
inc
jbe
lldt
adc
or
add
xchg
ss
push
les
jne
jmp
jns
cmp
and
out
xor
adc
nop
rdmsr
jne
loope
test
jo
or
mov
mov
jo
fimul
jo
push
pop
mov
nop
lods
sub
sub
or
sub
aaa
jne
(bad)
hlt
xchg
hlt
jmp
xchg
hlt
hlt
aaa
sbb
test
push
or
sbb
adc
xchg
test
hlt
addr16
or
test
sub
(bad)
pop
mov
dec
fadd
push
jg
push
sub
fsubr
or
inc
es
sti
rol
lea
mov
das
sbb
or
pop
mov
jl
and
mov
std
stc
and
dec
inc
call
imul
cld
lock
lock
je
rcl
gs
cmp
cmps
adc
inc
jne
outs
and
or
in
aaa
addr16
cmp
shl
inc
adc
leave
cmp
mov
xor
pop
movs
imul
popa
push
js
(bad)
out
pop
call
push
cmp
adc
js
movs
sar
mov
loop
arpl
sbb
in
cld
pop
sub
in
cld
adc
push
mov
cwde
nop
adc
movs
cwde
or
mov
fcomp
jge
push
or
fst
ins
and
sub
aaa
shl
cmp
cmps
add
seto
sbb
mov
bnd
scas
inc
push
rol
adc
adc
and
shl
pop
sbb
lods
or
aam
bound
std
sbb
add
inc
stc
push
pop
dec
in
cmp
mov
inc
sbb
sub
xor
add
mov
scas
pusha
and
repz
and
sahf
and
or
xor
push
outs
cmps
xor
add
sub
pop
xchg
pop
adc
movs
mov
mov
lea
nop
std
cmp
test
ret
std
mov
jl
aam
adc
push
std
or
popf
dec
push
pop
mov
pop
pop
lea
cmp
inc
adc
adc
jb
and
push
std
push
std
mov
std
dec
std
cmps
mov
jp
cmp
pop
in
dec
std
dec
std
test
inc
adc
dec
std
das
ror
inc
mov
push
push
pop
and
dec
std
dec
std
push
push
jb
pop
std
dec
std
dec
std
inc
push
call
std
pop
std
xor
inc
or
pop
jo
nop
and
add
in
or
outs
nop
out
jb
add
sub
addr16
test
mov
shr
and
inc
std
(bad)
sbb
inc
std
inc
std
push
and
or
fs
xor
bnd
enter
mov
and
cmp
mov
xchg
dec
cmp
cmp
sbb
mov
jmp
jb
push
(bad)
test
xchg
lea
and
ror
std
adc
cmp
add
std
and
or
cmp
jle
or
sbb
std
(bad)
shl
sbb
add
pop
sub
or
int
sbb
sbb
loopne
sti
(bad)
(bad)
std
test
adc
adc
cld
xchg
push
iret
jnp
iret
std
nop
ret
(bad)
cmp
jnp
repz
sbb
jnp
add
inc
push
cs
(bad)
jle
(bad)
ins
fstp
or
push
add
sahf
div
es
push
dec
push
add
jnp
gs
mov
push
pushw
pop
(bad)
pop
and
in
pusha
push
mov
cmps
out
call
push
push
xchg
into
aam
mov
add
lods
xchg
xchg
and
mov
aam
xor
popa
aaa
daa
push
mov
jge
cdq
mov
pop
cmps
xor
xor
sub
mov
inc
in
clc
cmps
pushf
ror
jmp
lods
je
ds
fdivr
dec
or
mov
add
jbe
mov
jnp
mov
jmp
neg
add
lock
xchg
lock
enter
fist
push
push
xchg
add
add
ins
std
dec
add
or
jmp
shr
movs
sti
mov
loope
sbb
jg
adc
and
xchg
dec
xor
pusha
jo
mov
mov
mov
stc
dec
les
jbe
jbe
adc
mov
adc
or
push
ss
fild
popa
or
xchg
dec
in
cmp
out
mov
popf
mov
enter
xor
or
loopne
jmp
cmps
jl
xor
daa
push
or
repnz
bound
(bad)
dec
or
(bad)
fisub
or
(bad)
scas
mov
inc
and
ror
stos
push
call
xchg
mov
push
retf
fcmovnb
xor
mov
mov
in
sub
shr
in
jbe
mov
mov
(bad)
and
mov
xchg
xor
mov
cdq
jmp
mov
or
loopne
pusha
nop
call
fsub
mov
push
aas
sub
jg
sbb
mov
push
fnstcw
aas
jp
clc
xchg
jmp
inc
in
push
mov
mov
jo
cli
mov
push
loope
inc
add
adc
outs
inc
or
lahf
inc
call
cmp
dec
push
mov
loopne
adc
or
add
sar
or
fcom
xchg
clc
and
inc
and
loopne
mov
xchg
cwde
jb
mov
or
mov
(bad)
out
dec
imul
or
jo
mov
xchg
add
movs
push
fadd
loope
popa
ret
fsubr
xor
imul
retf
xor
loopne
adc
inc
test
push
shr
aas
mov
add
mov
mov
pop
je
fstp
out
imul
lods
add
inc
sbb
jle
sbb
pusha
jmp
pop
jns
xchg
push
pop
add
mov
imul
ret
pop
mov
mov
jmp
mov
dec
ss
pop
xchg
retf
sbb
dec
in
ret
nop
push
add
inc
test
out
call
rcr
(bad)
sub
and
movs
or
jmp
imul
(bad)
aad
call
mov
mov
mov
mov
lods
into
add
loopne
stc
jo
mov
cmps
retf
sub
add
cwde
and
jno
jge
arpl
and
xchg
fcomp
jmp
jmp
add
and
cld
jne
jecxz
les
fsubr
rol
mov
dec
xor
lahf
in
push
retf
aam
inc
xor
(bad)
(bad)
es
cdq
jae
fsub
adc
adc
fbstp
imul
jae
inc
add
dec
mov
std
sub
lock
or
mov
out
add
jno
jae
int3
mov
lea
dec
pusha
loop
in
dec
movs
dec
dec
dec
mov
push
mov
push
mov
push
xchg
adc
sbb
lock
mov
xlat
push
add
outs
sbb
lock
sbb
jmp
jmp
aam
cmp
or
pop
pusha
fs
xchg
shl
ret
add
push
sbb
push
jne
and
push
bound
jmp
lea
leave
sbb
dec
mov
into
call
jmp
(bad)
jge
outs
and
ret
les
pusha
sub
sub
cmp
loopne
mov
push
imul
or
(bad)
push
ins
xor
arpl
xchg
imul
and
push
mov
aam
ucomiss
fstp
sbb
aaa
or
test
mov
inc
fisubr
inc
sbb
shl
or
xchg
and
std
(bad)
mov
push
inc
movs
adc
lahf
cmp
sub
push
sub
lods
or
jb
ror
ret
rcl
cmc
outs
cdq
lock
xchg
add
lock
lds
adc
(bad)
jbe
xchg
repz
mov
data16
neg
mov
sbb
or
push
fimul
push
pop
sbb
jns
xchg
popf
movs
stos
mov
xchg
add
pop
leave
xchg
shr
or
retf
jge
popf
mov
psllq
add
adc
icebp
sbb
mov
les
(bad)
mov
mov
mov
sbb
rol
ret
mov
sub
xor
daa
jmp
sub
sub
fisub
cli
adc
ja
pop
adc
xchg
or
data16
rol
test
and
or
lods
hlt
xchg
adc
sti
inc
aaa
or
mov
not
or
jnp
ja
mov
push
or
add
pop
sub
adc
jg
sbb
pop
pop
add
clc
cld
pop
mov
lea
add
ins
or
cmp
movs
mov
mov
ret
add
loopne
push
jg
cmp
push
lahf
mov
mov
movs
aaa
outs
mov
mov
add
dec
loop
cmp
or
jns
and
(bad)
in
cmc
jne
aaa
lods
dec
pop
fiadd
mov
sbb
sbb
jmp
cmp
inc
jb
hlt
ror
adc
add
dec
mov
add
div
xor
in
sbb
(bad)
popa
jp
inc
xchg
sub
push
xor
fisttp
mov
adc
fdivr
push
adc
mov
inc
add
lods
and
push
cwde
and
mov
and
push
ret
int3
aas
nop
xchg
or
inc
xor
ins
or
or
addr16
lea
dec
or
or
movs
add
adc
lods
aad
jmp
pop
pop
adc
aas
call
rcl
push
mov
jmp
mov
sub
adc
xchg
dec
bound
jg
or
or
adc
add
test
sbb
pop
mov
clc
loope
inc
mov
push
jmp
xchg
pop
fadd
sbb
sbb
and
ret
ret
rcl
aam
lea
imul
mov
push
aas
imul
inc
push
cwde
test
adc
mov
xor
mov
fcom
js
or
jbe
das
mov
mov
adc
dec
mov
popa
sbb
xor
or
or
rcl
aaa
xchg
rol
pop
mov
and
ss
loop
dec
sub
mov
adc
or
sbb
add
mov
mov
sub
rcr
clc
mov
xchg
inc
push
jge
xor
shl
mov
sbb
ja
call
cmp
mov
xor
test
fist
cmps
int
test
cmps
es
xchg
pop
adc
mov
or
mov
mov
or
sbb
icebp
mov
xor
psllw
or
adc
or
fisttp
pop
and
das
pop
pushf
sbb
and
and
ins
shl
xor
dec
mov
or
cwde
add
ja
add
push
aaa
add
add
dec
or
je
jnp
push
cmp
mov
cmp
jp
pop
jp
or
(bad)
push
push
js
xchg
xor
cmp
xchg
call
fisub
pop
inc
test
scas
xor
and
jno
fsubr
lahf
jnp
inc
sub
ret
loopne
adc
fmul
les
cld
cmc
call
push
jne
add
and
jmp
mov
pop
ja
add
push
or
sub
adc
xor
imul
or
ja
mov
jmp
ss
cmps
xchg
jge
out
shr
nop
sub
xor
hlt
fistp
outs
jmp
ja
lds
in
dec
retf
xor
push
lods
pusha
test
or
mov
sbb
pop
(bad)
mov
loopne
pop
adc
rcr
xor
mov
popa
lds
bound
mov
adc
push
(bad)
enter
jg
nop
cwde
jbe
inc
inc
mov
popa
aam
mov
aad
push
or
cmps
mov
add
xchg
lods
pop
test
jmp
pop
imul
adc
mov
lock
test
idiv
mov
cmps
push
cld
pop
loopne
or
es
mov
inc
jecxz
sub
sub
pop
cmp
jno
cmp
xchg
push
dec
sub
adc
xchg
inc
push
pop
ret
out
mov
enter
fild
outs
adc
cmp
popa
loope
dec
adc
fistp
pop
imul
add
cdq
adc
xchg
sub
inc
loop
scas
sub
mov
inc
arpl
push
leave
ret
xchg
adc
add
pop
adc
rcr
retf
leave
jnp
shr
push
mov
sahf
shr
mov
inc
or
sbb
cpuid
scas
and
add
mov
rol
jg
xchg
rcl
rol
mov
pop
clc
out
das
inc
imul
lea
sar
enter
add
mov
outs
leave
clc
in
xor
xchg
sub
les
jo
cs
push
int3
jb
shl
out
lods
sbb
sar
in
inc
and
aas
sti
nop
sub
jecxz
cld
pop
(bad)
and
jae
mov
test
aam
push
add
mov
inc
add
and
xor
dec
in
arpl
retf
sbb
jg
call
jb
inc
cmp
xchg
cmp
push
sbb
and
test
xchg
aaa
dec
add
mov
sbb
int3
xchg
ret
xor
pop
das
enter
dec
jbe
sub
and
rcl
add
adc
sahf
pusha
or
bound
and
lahf
bound
add
sub
sbb
leave
out
(bad)
bound
jae
pop
aad
not
cdq
frstor
(bad)
sub
mov
adc
mov
int3
or
call
dec
leave
rcl
cmp
pop
in
rcl
fs
inc
rcl
in
retf
and
or
xchg
js
dec
daa
fcmovu
and
imul
ins
lea
push
adc
rcr
mov
cwde
leave
pop
in
dec
pop
sub
dec
pop
int
imul
enter
sbb
xor
int3
mov
dec
enter
ror
fistp
jmp
lods
sbb
xchg
aad
and
xor
or
adc
out
inc
loope
shl
popa
sub
xchg
push
push
add
mov
push
shl
sub
outs
inc
les
inc
fwait
inc
inc
inc
js
xchg
nop
retf
pop
ret
pop
sub
or
adc
(bad)
push
mov
jnp
inc
mov
data16
cwde
ret
or
ss
mov
push
mov
pop
dec
jmp
fadd
lods
or
test
mov
xchg
or
sub
adc
or
inc
mov
ds
sub
nop
pop
fld
pop
adc
inc
jbe
xchg
loopne
sub
mov
inc
pusha
pusha
stc
clc
dec
in
mov
push
add
or
push
imul
adc
dec
and
or
pusha
stos
call
rcl
test
or
scas
dec
sub
hlt
jae
frstor
mov
and
ss
mov
xchg
ss
push
xchg
fild
mov
pop
jae
sub
adc
movs
imul
ret
(bad)
xor
rcr
xchg
fsubr
mov
test
dec
aad
nop
sub
mov
lock
loopne
in
loope
test
xor
inc
inc
adc
dec
aaa
in
mul
mov
sar
sbb
add
retf
pushf
aaa
mov
push
lock
or
fdiv
or
jne
jns
mov
xor
dec
nop
jo
dec
jl
jne
dec
jmp
dec
sbb
fcomp
nop
int3
mov
jge
les
xor
test
or
adc
adc
js
inc
xchg
adc
add
add
sub
ret
dec
pop
or
nop
jle
cmp
push
pop
xor
or
repnz
and
fcomp
ds
xor
mov
test
popa
and
iret
in
jbe
int3
jmp
fadd
retf
or
jmp
in
dec
test
in
push
lock
loopne
fmul
jl
push
pop
add
das
dec
mov
int
push
add
lock
test
pop
push
lock
inc
push
jns
lock
xor
xchg
fsubr
nop
fldlg2
dec
nop
mov
xor
push
ret
mov
iret
adc
xor
xchg
push
fcmovnb
adc
cmp
add
es
nop
fst
dec
enter
stos
ins
add
rol
fwait
shl
adc
mov
and
icebp
push
mov
aam
push
jne
pop
dec
adc
test
pop
mov
imul
xchg
jb
fs
imul
(bad)
stos
sahf
inc
aad
idiv
stos
outs
add
adc
pmullw
push
push
push
dec
jge
adc
adc
push
push
repnz
inc
xor
adc
sahf
xchg
sbb
mov
adc
and
push
mov
les
mov
push
jg
adc
mov
movs
cmp
ss
outs
xlat
mov
fdiv
ds
(bad)
lea
add
aas
jge
xor
xchg
retf
mov
clc
clc
lock
test
jmp
mov
loop
xor
outs
sbb
xor
and
or
mov
adc
jo
hlt
shl
mov
(bad)
hlt
sub
out
retf
outs
sbb
or
mov
sbb
mov
cli
shr
push
enter
mov
sbb
es
rcr
mov
(bad)
dec
in
jmp
or
cs
std
call
pop
mov
div
add
cmp
and
fisttp
inc
ja
test
pop
adc
push
jns
pusha
inc
add
push
mov
jge
add
shl
xor
adc
call
cmp
xchg
push
xlat
mov
push
cs
add
test
nop
iret
fsub
(bad)
lock
jecxz
lea
int
cmp
fwait
push
mov
sbb
mov
mov
adc
(bad)
rol
xor
sbb
jle
cmp
sub
sbb
cmp
ins
(bad)
pop
inc
xchg
jge
mov
adc
std
cmp
clc
mov
dec
sbb
out
dec
clc
daa
jge
mov
mov
clc
lahf
icebp
xor
mov
or
jle
push
dec
sub
cld
cld
cld
pop
enter
push
mov
jl
outs
mov
mov
xor
js
cmp
pop
dec
out
sbb
xchg
enter
das
inc
clc
cdq
mov
sub
xor
push
jb
daa
xor
xchg
push
sub
lods
mov
jl
xor
repnz
shl
icebp
and
rol
mov
sub
pusha
jno
push
pushf
push
cld
mov
adc
lea
aas
mov
jmp
test
in
cmp
lods
and
cmp
es
add
int
sbb
lds
mov
hlt
adc
pop
jns
dec
cli
adc
and
movs
nop
call
scas
xchg
xchg
xor
or
out
dec
lock
aam
xor
inc
mov
mov
cli
sub
mov
rol
aam
mov
aam
mov
xor
xchg
loopne
call
popa
hlt
pop
nop
jg
sub
out
sub
mov
xchg
mov
pop
or
mov
add
pop
in
sub
jmp
xchg
add
adc
adc
mov
test
sbb
std
mov
sub
sub
mov
test
add
out
xchg
pop
sbb
jmp
or
std
jae
ss
mov
test
dec
add
mov
xchg
mov
push
and
add
cmps
cmp
fcom
rcl
stos
xor
push
(bad)
je
sti
jb
and
adc
lea
xor
add
adc
mov
les
dec
sbb
aas
pop
add
popf
popf
jb
xchg
int
test
or
outs
retf
test
(bad)
mov
xchg
pop
mov
stc
mov
cmp
push
jp
ret
or
sub
mov
cli
fmul
and
and
jmp
dec
and
idiv
pop
xchg
mov
pop
int
adc
push
into
mov
in
lods
sbb
imul
xor
jmp
aaa
test
out
mov
adc
push
sbb
and
lock
jb
idiv
inc
add
push
mov
mov
or
push
push
clc
outs
cld
and
(bad)
out
fwait
movs
loopne
aam
fidiv
loopne
mov
clc
inc
or
int3
add
test
mov
shl
shl
and
fsubr
clc
jmp
(bad)
mul
lods
sti
lods
es
loop
sbb
inc
and
jne
push
leave
clc
popf
shr
(bad)
mov
add
or
int3
jmp
pop
ins
and
jge
fcom
sub
push
pop
mov
inc
push
shl
cmp
shl
cwde
xchg
gs
scas
rcl
or
dec
inc
mov
loop
call
inc
xor
lock
hlt
test
cmp
clc
inc
shl
push
mov
add
cmp
test
pushf
mov
push
out
inc
enter
xor
push
cmp
pop
xchg
inc
jne
xor
mov
cdq
add
jnp
or
cmp
pop
add
or
xlat
in
or
ds
dec
sbb
mov
sub
push
push
jno
mov
xor
xlat
ja
clc
or
rcl
ret
cmp
add
push
mov
arpl
add
add
rep
xor
iret
jne
neg
cmps
imul
dec
pushf
in
in
mov
adc
push
push
ret
loop
ins
inc
jmp
pop
es
cs
sub
lock
add
in
cld
cmp
shr
cmovbe
or
jg
hlt
add
jmp
lea
push
add
repz
dec
adc
push
and
vmovd
outs
inc
or
sahf
add
repz
jle
in
outs
add
cld
jns
jg
lea
loopne
daa
inc
les
push
cmps
lahf
aas
pushf
cdq
sbb
mov
add
add
cdq
inc
sbb
arpl
sub
popa
retf
gs
inc
or
cld
mov
jo
je
sub
xchg
mov
arpl
mov
jbe
es
loopne
adc
add
inc
and
pop
mov
jns
inc
sbb
repz
dec
add
jnp
imul
add
adc
add
or
and
rol
in
in
adc
sbb
push
daa
xor
push
cdq
jl
clc
into
add
gs
add
inc
inc
out
jne
push
xor
or
sub
xor
or
adc
push
mov
push
dec
ret
in
adc
pushf
ds
cdq
dec
add
pop
adc
mov
scas
adc
inc
pop
mov
clc
jp
add
sub
adc
or
adc
cdq
or
and
lods
pop
imul
sbb
es
sub
ror
stos
je
sub
or
jbe
lods
sbb
cmp
shl
add
inc
ret
sbb
pop
call
sar
pusha
ret
jmp
add
repz
add
push
int3
loopne
cwde
push
enter
pop
pop
inc
xchg
dec
sahf
push
and
push
sub
and
rcr
or
push
or
inc
adc
enter
adc
sbb
cmp
sbb
add
pop
dec
jbe
sub
inc
sbb
xlat
xchg
cmp
popf
cmp
enter
ror
mov
or
jne
inc
or
in
adc
sbb
and
mov
dec
jecxz
mov
or
jle
adc
dec
ret
arpl
fidivr
ins
loop
daa
push
mov
cmp
ss
sar
retf
mov
mov
sub
mov
and
pop
out
adc
outs
sete
mov
adc
inc
ror
les
in
xchg
jae
sbb
aad
mov
xchg
inc
inc
ja
or
push
mov
lods
popw
push
mov
sbb
sbb
add
push
mov
test
and
(bad)
adc
sub
aam
mov
aam
or
sbb
dec
dec
clc
or
jne
sti
and
and
adc
rcl
or
adc
rol
invlpg
and
inc
paddsb
scas
sti
jge
sub
or
jle
fld
push
aam
xor
mov
loop
pop
mov
or
or
jmp
test
in
and
add
jnp
pop
push
std
jnp
sbb
rcr
mov
pop
sbb
imul
and
cmp
xchg
or
(bad)
aad
push
rcl
mov
xchg
jne
dec
or
and
sti
sub
ds
sbb
add
mov
inc
mov
adc
xor
push
mov
call
adc
xchg
jmp
jge
popf
ins
push
or
sub
xchg
out
or
cmp
retf
pusha
jne
xor
imul
inc
add
push
out
jmp
push
mov
int3
jp
(bad)
add
xor
and
fcom
mov
scas
in
adc
pop
repnz
in
loop
ret
and
jl
add
push
or
ds
add
cmp
cmps
pop
inc
lods
popa
add
push
and
iret
movs
retf
imul
sub
mov
inc
pop
popa
jecxz
dec
and
jp
mov
mov
sub
dec
push
cmps
out
mov
sub
or
jb
mov
mov
dec
xchg
xor
in
xchg
push
aas
inc
shl
adc
fsub
sub
push
gs
sbb
push
dec
cdq
movs
dec
aam
cmp
dec
movs
mov
jl
push
es
gs
popf
in
enter
adc
outs
rol
(bad)
jo
jecxz
lahf
xor
div
jmp
pop
jmp
cwde
or
push
test
fmul
and
mov
sbb
sub
fistp
mov
inc
inc
imul
inc
pop
shl
mov
cmps
cs
sub
and
pop
(bad)
neg
adc
push
inc
pop
or
and
inc
sub
xchg
inc
cmp
jns
frstor
pop
dec
xor
mov
sub
dec
sub
add
ins
(bad)
mov
jl
add
or
call
popa
ss
add
cmp
sbb
push
push
cmps
push
adc
adc
cmp
fnstenv
or
test
pop
jo
cmp
add
test
pop
or
pop
outs
imul
clc
in
stc
sbb
pop
mov
sbb
xchg
inc
xchg
rcr
sub
xchg
pop
mul
cdq
adc
inc
mov
ja
lea
nop
or
mov
aas
cmps
adc
pop
call
jmp
pushf
shl
adc
add
pop
aam
nop
mov
test
or
fmul
xchg
sbb
xchg
cmp
cli
sbb
icebp
loope
fs
and
fsubr
pusha
cs
sbb
adc
rcr
and
and
aaa
jge
ret
das
stc
les
or
push
xor
xor
push
jnp
mov
(bad)
(bad)
je
xchg
cli
adc
bnd
lea
dec
shr
mov
or
jnp
int3
push
ror
repnz
sbb
jmp
pop
inc
loop
ret
outs
inc
add
cmp
hlt
xchg
sti
stos
pop
push
shr
push
adc
mov
inc
mov
sar
pop
paddsw
dec
dec
and
push
add
dec
ret
sub
addr16
loop
mov
sbb
shl
div
jl
or
icebp
mov
cmp
xor
out
dec
inc
loop
scas
ucomiss
push
inc
repz
sbb
push
pop
retf
dec
push
movs
pusha
je
adc
push
aad
jg
pop
inc
push
in
or
xchg
and
addps
in
jle
mov
jb
imul
push
xor
push
out
mov
dec
push
pop
mov
cmp
mov
or
inc
sub
push
pop
stos
in
jno
and
cmps
rcl
push
jne
sbb
shl
sbb
call
push
shr
and
and
(bad)
mov
aaa
inc
dec
aam
nop
push
sbb
or
packsswb
rcl
loopne
mov
test
xchg
les
pushf
movs
inc
in
xchg
add
xchg
ficom
add
mov
mov
cli
mov
ds
test
dec
inc
retf
icebp
stos
les
leave
nop
rol
fldcw
adc
cdq
sub
pop
or
push
popa
xor
jb
loope
sbb
ja
push
in
sub
pop
sar
inc
popa
and
sbb
add
into
push
xor
cld
pop
add
mov
xlat
fdiv
mov
jmp
adc
dec
dec
inc
sbb
(bad)
mov
jnp
retf
sub
cli
xor
in
or
mov
dec
or
cld
xchg
push
mov
pusha
sbb
jmp
test
inc
mov
or
sbb
(bad)
arpl
jne
inc
inc
sbb
fcom
and
adc
dec
add
lea
leave
int3
fadd
pop
fisttp
out
sbb
cdq
push
mov
pop
data16
cmps
ss
nop
sbb
sub
adc
cmps
push
div
mov
mov
xchg
adc
(bad)
aad
and
(bad)
imul
fld
push
div
push
(bad)
cmp
mov
ret
add
aam
cmp
ins
fdiv
xor
cmp
fbstp
adc
fadd
add
xor
pop
dec
cmp
popf
and
pusha
mov
adc
ret
inc
pop
je
inc
adc
fbstp
sbb
jg
xchg
int3
push
aas
sub
xchg
lods
lea
push
add
push
jmp
dec
push
les
push
fld
and
mov
push
xchg
jno
jmp
pop
mov
xor
sbb
mov
jecxz
adc
mov
lock
jo
lods
pop
mov
adc
jle
loope
xor
cmp
jp
das
js
xchg
cmp
jbe
push
jecxz
iret
test
sub
inc
popf
cmp
cwde
test
jbe
and
adc
xchg
dec
dec
es
inc
sbb
sub
xchg
xchg
inc
dec
and
and
add
inc
and
xchg
xchg
add
sbb
pop
mov
jbe
cmp
adc
jns
out
sete
add
jge
iret
and
fld
add
test
retf
lods
movs
rol
inc
adc
dec
and
daa
add
pop
sbb
ins
jge
mov
pusha
jl
stos
sbb
mov
pusha
jle
jl
jge
pusha
xchg
dec
jmp
jns
lods
add
jg
imul
pusha
xchg
xor
pop
popf
bound
inc
ret
scas
rcr
popa
add
imul
add
sub
retf
xchg
cmp
cmc
push
jmp
dec
add
jge
xor
mov
add
xor
inc
adc
adc
test
and
adc
loopne
into
popf
pop
add
adc
(bad)
or
push
pop
add
std
adc
push
ss
sar
push
and
mov
fdivrp
sub
daa
mov
fwait
gs
xor
inc
clc
xor
sbb
sbb
pusha
ret
sbb
das
adc
imul
mov
pusha
sub
push
imul
inc
ret
fimul
fs
data16
aas
rol
xchg
in
gs
cmp
jle
jmp
xor
adc
cmp
lods
addr16
jnp
and
(bad)
mov
push
cmp
daa
mov
and
sub
sub
sbb
cmp
adc
xchg
out
leave
mov
cmp
mov
push
mov
add
in
popf
inc
push
sub
dec
cld
push
and
inc
out
pop
div
jo
jo
and
add
es
adc
out
into
std
jmp
cmp
sbb
ins
jl
ins
shr
sbb
xchg
dec
push
inc
pop
sahf
adc
inc
mov
push
and
mov
xor
sub
or
fdiv
ins
sar
call
mov
outs
cmp
out
fs
mov
ss
jns
add
mov
and
(bad)
enter
movs
cwde
add
sbb
adc
dec
xor
or
sbb
sbb
xor
sbb
sbb
sub
ss
jns
xor
cmp
pusha
movs
mov
mov
enter
inc
imul
push
or
mov
sbb
sbb
or
call
inc
or
mov
pusha
and
arpl
and
dec
cmps
retf
es
push
inc
(bad)
or
sahf
out
mov
mov
mov
pop
stos
mov
add
shl
fist
outs
sbb
jge
sbb
aad
adc
sbb
xlat
adc
mov
in
in
sbb
nop
dec
out
outs
aaa
or
inc
or
push
sbb
in
pop
dec
test
cmp
sub
push
jo
jl
push
push
stc
adc
imul
mov
xor
mov
add
je
cmp
sub
cmps
sbb
pop
call
mov
pop
mov
dec
cwde
push
sbb
xchg
xchg
push
nop
lahf
cs
mov
adc
sub
push
or
popa
in
cmp
or
mov
xchg
cld
in
dec
cld
inc
sub
pop
mov
sbb
sbb
jmp
lahf
rcl
fistp
inc
mov
dec
push
arpl
test
xor
lds
icebp
sub
jmp
ds
mov
lds
lods
or
xor
cs
sti
cld
cld
in
inc
cs
hlt
hlt
daa
retf
hlt
jp
fcompp
aam
int
adc
rcr
popa
clc
push
adc
mov
je
addr16
dec
and
or
sbb
cs
jecxz
jecxz
cmp
sar
and
dec
cmp
mov
sbb
sub
add
push
test
fistp
xchg
or
mov
inc
adc
retf
in
and
cmps
push
add
movs
xchg
pop
fild
pusha
xchg
dec
inc
pop
pop
add
or
imul
movs
fist
mov
mov
ror
adc
std
sti
inc
sahf
fld
fdiv
add
cdq
nop
and
add
fist
scas
sbb
dec
pop
adc
pop
adc
mov
ins
setbe
(bad)
add
(bad)
or
mov
sahf
cmovb
stos
mov
test
sub
bound
cmp
sbb
cmp
pusha
jae
xchg
push
ins
sbb
inc
adc
add
mov
or
(bad)
imul
sbb
adc
sbb
fadd
and
inc
sbb
test
cmp
leave
push
xchg
stos
cmps
cmp
push
sbb
xchg
dec
leave
push
xchg
push
add
popf
push
ins
or
pusha
mov
addr16
mov
and
sbb
or
cmp
jecxz
mov
jo
inc
data16
repz
xor
test
adc
or
shl
sar
sbb
adc
nop
loope
adc
fidiv
pusha
push
adc
xor
dec
cmp
jb
and
js
js
xor
add
dec
sub
mov
mov
je
or
mov
lds
(bad)
or
ins
push
shl
jns
in
fiadd
adc
mov
ret
pushf
or
add
or
cmp
test
and
sbb
mov
and
xor
push
jo
icebp
jp
push
outs
test
pop
repz
or
mov
pop
mov
add
cmp
lods
push
xchg
push
call
and
adc
lds
mov
xor
cs
mov
rol
gs
push
gs
push
jmp
fist
adc
push
and
das
or
add
adc
add
int3
cdq
shl
(bad)
outs
test
xor
sbb
push
add
je
adc
pusha
jne
inc
pop
inc
jge
add
xchg
lods
cwde
cmps
xor
hlt
sub
dec
mov
xor
fld
jne
cmp
or
mov
mov
mov
pop
je
mov
add
push
sar
sbb
rcl
inc
cs
mov
pop
adc
push
jne
lods
popf
rcl
push
movs
repnz
retf
xchg
mov
and
sti
int3
test
cdq
dec
loope
test
int
pop
add
ins
imul
mov
and
push
sub
or
jnp
add
inc
or
push
push
mov
ins
sub
or
pushf
cmp
inc
mov
cdq
ss
xchg
dec
shl
jne
out
push
fild
imul
fcmovu
cs
dec
pop
jmp
rcl
pop
aas
ins
daa
cmp
xor
sti
pop
leave
sub
or
lea
mov
lea
sub
out
fbld
mov
xchg
and
ins
mov
mov
inc
enter
sub
xchg
repnz
or
jge
ins
mov
xchg
arpl
jae
fisub
sub
pusha
jp
pop
add
push
ror
mov
and
add
shr
retf
sub
push
cmp
jb
mov
push
inc
cwde
test
cs
and
shr
adc
loopne
sbb
inc
jne
addr16
mov
or
and
scas
sbb
dec
sub
xor
stos
fmul
xchg
ret
outs
xchg
adc
rol
add
pop
mov
xlat
inc
xchg
adc
adc
imul
inc
lock
adc
inc
dec
je
rcl
stc
sub
ins
lahf
js
push
lock
jl
cmp
jae
push
test
sbb
shl
shl
aam
cdq
jns
ret
gs
cs
(bad)
(bad)
pop
jb
gs
test
aam
mov
(bad)
fsub
fld
ret
adc
xor
or
repz
das
cmp
adc
scas
rol
xor
push
js
cmp
xchg
ret
mov
xchg
in
cwde
mov
push
(bad)
lock
pop
dec
or
cld
jo
push
sub
sub
cmp
stos
js
fst
arpl
adc
jbe
adc
mov
lea
sub
rcl
lock
sbb
pop
sbb
dec
cmp
dec
pop
and
pop
jg
mov
seta
or
add
arpl
int
cmp
xor
add
push
xor
or
sbb
add
icebp
inc
push
push
jmp
sub
in
or
sbb
add
and
inc
int
add
(bad)
dec
adc
sub
inc
aas
push
xlat
mov
xor
adc
dec
dec
or
sbb
imul
inc
ror
and
inc
push
imul
ror
popa
inc
int
cdq
add
out
and
les
mov
jg
add
push
pop
inc
mov
test
xor
cmp
cmp
mov
adc
js
mov
and
pusha
rcl
mov
mov
mov
add
outs
adc
cwde
mov
call
pop
and
mov
or
movs
aaa
mov
call
test
sbb
(bad)
and
cmps
dec
fcomp
sbb
nop
(bad)
xchg
enter
f2xm1
push
retf
dec
shr
mov
jmp
xor
pop
add
sbb
add
jmp
(bad)
das
adc
fisttp
or
fisttp
jnp
sar
sbb
push
sbb
or
push
adc
jbe
test
out
jl
or
scas
mov
ss
or
mov
add
jne
das
les
inc
xchg
or
sar
push
push
test
cmp
adc
xchg
popf
xchg
add
dec
mov
repz
loopne
loope
mov
cmp
jbe
nop
daa
adc
out
add
jo
xlat
test
push
shl
push
dec
imul
in
adc
dec
clc
xchg
push
add
jecxz
add
cdq
adc
or
dec
adc
adc
cwde
mov
or
xor
mov
in
leave
add
mov
ror
dec
and
movs
add
xchg
test
push
fisttp
jae
leave
ret
pop
sub
mov
xor
xlat
jmp
imul
add
test
dec
dec
and
mov
retf
xor
and
sbb
mov
pop
push
push
or
sahf
je
rol
sub
aas
cs
icebp
dec
push
mov
and
fdiv
mov
push
sahf
pop
ja
add
or
in
mov
aam
stos
fnstcw
add
shl
mov
adc
xor
push
fbld
movs
movs
mov
ret
retf
retf
mov
(bad)
adc
aad
retf
in
scas
mov
xchg
movs
sbb
call
mov
pop
add
scas
push
mov
in
and
call
mov
and
dec
lock
call
fcom
rcl
mov
pop
xchg
pop
cmp
rol
add
adc
mov
adc
adc
nop
inc
sbb
inc
jne
lahf
or
lahf
mov
and
pop
inc
pop
mov
xor
clc
and
sbb
mov
aam
sub
xlat
daa
jbe
mov
push
xlat
mov
jno
cmp
cmp
push
sub
icebp
std
inc
and
fmul
mov
lock
sub
sahf
sub
xor
dec
dec
and
cmp
inc
lahf
dec
and
or
xchg
adc
je
add
add
xchg
adc
fdiv
leave
loop
pop
fisttp
push
pop
add
cmps
sub
jmp
push
inc
dec
sahf
sbb
fidivr
xchg
repz
and
ret
push
add
add
adc
sub
or
xchg
stc
stos
inc
adc
cmps
pop
cmp
lods
or
adc
xchg
pop
add
das
movs
sub
or
xor
push
xor
fadd
dec
es
add
bound
adc
loopne
out
jl
xor
add
ins
pop
push
inc
push
imul
add
mov
fnstsw
imul
xchg
rcr
test
and
mov
mov
sub
inc
outs
jne
test
or
pop
cmp
push
lsl
fucomp
mov
mov
xor
xor
aad
inc
dec
mov
pop
add
pop
leave
test
xor
inc
scas
in
mov
aam
cmp
mov
imul
or
sbb
fcom
mov
xchg
sbb
and
neg
movs
mov
sbb
dec
push
in
push
frstor
mov
mov
pop
xchg
mov
adc
shl
sub
out
pop
dec
or
push
dec
ret
test
stos
cmp
xchg
out
dec
add
cmp
outs
adc
repz
push
cmp
test
repnz
mov
nop
dec
adc
inc
sbb
stc
(bad)
int3
and
mov
mov
xchg
inc
jb
movs
mov
xchg
or
lea
push
aam
add
data16
pusha
adc
movs
inc
push
nop
lds
test
xchg
inc
movs
inc
(bad)
scas
jmp
dec
jmp
dec
xchg
cmp
(bad)
fbld
mov
lea
cs
and
lods
popa
mov
dec
cmps
lods
lods
mov
mov
shr
xchg
int
gs
nop
add
and
pop
inc
inc
dec
test
mov
or
push
xor
push
stos
or
xchg
and
imul
loope
cdq
jne
out
cmp
scas
and
mov
mov
adc
or
add
adc
inc
shr
or
js
or
sbb
adc
ins
ror
push
gs
clc
dec
or
adc
mov
sar
jmp
sar
push
sbb
add
shr
push
adc
cdq
adc
adc
or
sbb
or
jge
shl
add
lahf
push
xchg
inc
adc
enter
inc
and
and
aad
or
and
in
enter
fist
pop
jl
cmp
mov
aas
and
pop
rcl
jne
ja
sbb
and
jmp
push
ins
jne
js
mov
xchg
daa
sbb
stc
and
add
dec
push
adc
add
sub
cwde
add
add
popa
xor
test
test
popf
cmp
add
adc
adc
and
push
pop
add
aam
clc
or
add
int3
cmp
inc
lahf
xor
sbb
mov
or
or
push
adc
enter
or
pop
cmp
mov
scas
pop
xor
sub
xchg
mov
xchg
shl
call
sbb
xor
dec
cmc
push
outs
pop
cmp
xor
cmc
and
call
cmp
sbb
popa
xor
cmp
mov
or
push
or
cdq
pop
sub
sbb
rol
ja
mov
or
and
adc
pop
push
xchg
rcl
add
icebp
shl
dec
je
cmp
repz
adc
sub
mov
mov
jnp
xrelease
movs
imul
or
or
jmp
jmp
mov
pushf
inc
icebp
dec
add
jge
inc
mov
inc
movs
adc
lods
int3
mov
cli
push
cmp
je
int3
lock
jmp
cmp
dec
popa
xchg
outs
movs
adc
xchg
sbb
stos
lea
and
cmp
xor
bound
push
jmp
gs
ret
push
and
inc
xor
outs
xlat
sbb
mov
add
add
loope
xor
mov
or
mov
ror
test
push
fcmovnu
and
jle
add
lahf
pop
or
jmp
jne
sahf
movs
aad
adc
push
pop
sub
cld
shr
mov
jo
aam
or
inc
add
sbb
stos
add
sti
out
dec
dec
js
repnz
adc
mov
xchg
ret
mov
aam
int3
mov
or
imul
lock
sub
leave
add
shl
in
loopne
clc
ror
mov
dec
shr
das
(bad)
add
mov
push
dec
add
sbb
dec
rcr
xor
jmp
out
and
cmps
lods
daa
les
mov
or
push
loopne
test
or
jge
ins
adc
add
cmp
jae
sbb
push
add
(bad)
stc
pop
movs
pop
push
add
cs
into
inc
jle
js
loopne
inc
xor
inc
and
add
sbb
icebp
push
fist
pusha
sbb
in
push
mov
cmps
dec
add
jmp
lea
mov
ret
test
pushf
add
adc
adc
pusha
jo
pop
sbb
pop
dec
xor
mov
clc
mov
test
sub
mov
or
xor
sub
mov
in
aam
or
es
int3
mov
xchg
inc
outs
mov
xchg
scas
sub
push
xchg
sar
movs
popa
add
adc
jne
enter
cmps
and
movs
inc
push
sub
ss
inc
aas
push
imul
les
mov
je
cmp
ja
pop
jmp
cmp
enter
ins
mov
adc
out
sub
push
inc
sbb
jno
inc
and
inc
push
mov
enter
inc
xchg
lods
push
or
out
or
nop
pusha
add
fstp
aaa
add
cdq
xor
inc
inc
sbb
add
je
add
lock
lahf
pusha
mov
(bad)
hlt
imul
inc
inc
pop
push
hlt
fdivr
add
mov
xchg
sbb
loopne
js
shl
push
jo
mov
and
xchg
es
push
pop
cwde
idiv
adc
dec
scas
in
icebp
dec
push
in
adc
xor
je
pop
xor
adc
call
mov
inc
sbb
adc
es
nop
in
jge
or
out
pop
inc
cmp
pop
add
cmps
pop
ja
pusha
loopne
dec
fnstsw
popf
adc
push
mov
leave
add
sbb
mov
mov
push
ret
jmp
je
mov
pop
cs
cwde
adc
ja
pop
ror
frstor
fisttp
add
add
mov
rol
jmp
sar
add
cmp
ins
call
add
jb
je
jne
arpl
pop
xchg
or
xchg
sbb
pop
mov
push
pop
add
cmp
sub
leave
je
push
lods
repnz
add
leave
adc
add
push
push
xor
cwde
inc
sahf
fxch
std
mov
pop
or
pop
std
mov
jmp
push
sub
push
ins
or
or
inc
pop
push
test
out
adc
pop
xlat
test
in
scas
or
sbb
sub
repz
ja
cmc
push
cli
fwait
imul
addr16
cmps
and
sti
jns
jns
or
add
or
cld
mov
adc
add
aaa
in
or
pop
or
or
and
jne
inc
push
outs
sbb
mov
push
mov
dec
push
jl
in
sbb
pop
mov
test
mov
inc
xor
or
sbb
push
mov
sub
imul
iret
lods
sub
mov
in
and
pop
cwde
mov
rcr
int3
cmps
jae
and
mov
or
enter
movs
pop
stos
call
shr
(bad)
cmp
jo
inc
and
ss
add
adc
pop
push
rol
inc
add
sub
mov
inc
mov
add
movs
pop
hlt
xor
cmp
inc
xor
dec
repz
cmp
dec
pop
cmps
nop
dec
and
pop
push
or
jns
pop
or
xchg
mov
in
inc
push
sub
mov
add
pop
into
movs
clc
push
dec
les
js
bound
in
inc
inc
daa
int3
jne
push
mov
mov
gs
dec
sti
repnz
adc
mov
push
push
enter
push
dec
clc
leave
xor
fadd
retf
jp
ret
clc
sbb
call
out
dec
les
cdq
pusha
push
mov
jg
and
adc
xchg
(bad)
push
mov
clc
lock
jecxz
xor
mov
push
clc
jg
adc
mov
mov
std
popa
bound
push
push
and
pop
or
pop
pop
popf
mov
or
ret
pop
out
arpl
add
stos
arpl
or
loop
aad
jmp
sbb
hlt
cmp
and
xor
mov
movs
jo
mov
and
stc
cli
or
add
inc
dec
arpl
popf
sbb
jmp
xchg
sbb
pop
pop
loop
sbb
xor
aam
(bad)
aaa
pop
or
fcomp
gs
cmp
stos
add
(bad)
jecxz
in
dec
add
cmp
sbb
sbb
(bad)
sbb
or
leave
jg
push
dec
xchg
(bad)
xlat
pushf
lods
add
pop
iret
mov
cmp
in
or
enter
clc
lock
push
retf
xchg
lds
loopne
push
and
cmps
xchg
cmp
sub
sbb
dec
or
js
fbstp
aam
stos
jle
mov
and
adc
es
je
add
inc
or
ror
push
jae
pop
sub
push
and
fwait
and
add
ins
xor
lea
leave
fisttp
fwait
nop
xor
repz
adc
cmp
or
add
sub
or
push
sub
add
pusha
mov
mov
iret
out
or
je
adc
sub
arpl
cmp
ror
add
mov
shl
adc
or
mov
rcr
sub
push
sti
push
push
xchg
push
mov
pop
mov
cmp
adc
sub
xchg
push
and
pop
sub
das
and
jnp
cs
dec
jg
fsubr
adc
push
dec
xchg
sbb
mov
into
add
and
adc
retf
inc
test
jb
ins
stos
or
ret
movs
arpl
adc
sbb
popa
fdivr
mov
mov
cmp
pusha
sbb
inc
aam
push
jmp
aam
xor
adc
ins
and
and
int
xchg
adc
add
leave
cmp
popa
test
or
sub
shr
lea
lods
xor
das
mov
mov
jnp
loope
js
and
lods
sbb
xor
xor
stc
pop
push
jns
dec
xor
das
daa
or
jb
inc
aam
jmp
loopne
pushf
pushf
fsubrp
inc
adc
fs
and
loop
adc
xchg
mov
adc
pop
pop
movs
cdq
mov
push
push
mov
movs
and
aad
mov
pusha
sub
inc
retf
je
pop
and
es
and
sub
pop
add
or
or
jno
stos
sub
in
nop
sbb
or
xor
cdq
or
add
pop
pop
or
pop
adc
rol
pop
jno
push
jg
xor
lea
pop
cmps
xor
outs
xlat
enter
cmp
or
push
adc
mov
sbb
add
fs
inc
rcr
int
mov
mov
pop
sbb
sub
inc
adc
sbb
cmps
cwde
(bad)
(bad)
pop
mov
in
clc
in
neg
test
adc
and
sbb
mov
jl
sbb
xor
fwait
xor
aam
mov
inc
pop
sub
shl
mov
pushf
and
ins
mov
or
pop
(bad)
(bad)
add
and
and
clc
clc
lods
xchg
or
aaa
xchg
or
popf
addr16
xchg
sbb
nop
dec
sub
or
je
adc
cmp
fidivr
int3
xor
pop
shl
jmp
sbb
sbb
xchg
mov
sahf
adc
es
fsub
or
dec
sub
and
dec
loope
sbb
xchg
xlat
cmp
call
fmul
or
lods
push
dec
sub
push
ret
sbb
add
pop
pop
add
addr16
sbb
inc
mov
sub
popa
dec
ficomp
jge
jbe
movs
stc
push
push
arpl
mov
cmp
ss
fldcw
aaa
sbb
push
test
test
out
stos
popf
stos
xchg
iret
lods
mov
sahf
int
push
push
lods
pop
scas
adc
inc
push
push
jo
js
or
xor
sbb
add
add
pop
sbb
nop
(bad)
jbe
ins
add
and
mov
add
mov
repz
bound
inc
(bad)
ror
fdivr
sbb
cmp
jl
repz
in
adc
mov
jmp
fs
jne
sbb
jb
push
loopne
(bad)
pop
ins
loopne
inc
jo
stc
add
add
and
pop
inc
sub
cld
and
jecxz
cmp
loop
and
dec
ds
fcomp
fist
movs
out
jnp
mov
mov
fidivr
mov
test
xor
lahf
arpl
inc
and
punpcklbw
mov
sbb
ins
adc
pop
ss
cli
shl
sar
in
out
and
mov
lods
mov
pop
adc
add
fdivp
ss
cli
jge
inc
add
xlat
mov
pop
out
jmp
jbe
ins
loopne
sbb
cmps
aaa
cmc
or
jnp
push
and
xchg
and
aas
jg
sub
mov
je
inc
lods
cmp
sub
mov
js
mov
jecxz
adc
jne
pop
push
inc
or
fmul
add
cmp
pop
dec
or
mov
jg
enter
(bad)
repz
inc
jmp
sbb
scas
adc
jl
jge
(bad)
daa
mov
mov
mov
pop
enter
mov
retf
adc
int3
sar
lock
inc
pushf
jp
mov
shl
ret
sbb
or
lods
dec
and
xor
push
cmp
or
sub
adc
scas
add
push
or
dec
adc
mov
cmps
adc
xchg
test
fsub
loope
add
xchg
jo
sbb
retf
jmp
push
xcrypt-ecb
cmps
mov
cli
fmul
in
mov
(bad)
mov
out
inc
int3
repz
leave
mov
cli
fdivr
mov
mov
add
push
(bad)
jne
add
dec
rcl
sar
rcl
jecxz
ds
jbe
ror
loop
dec
mov
xor
(bad)
(bad)
fisub
fs
fcmovb
(bad)
jg
das
daa
daa
das
lock
int
fsub
or
imul
push
daa
test
jo
stos
and
jb
jmp
add
sub
ss
inc
aas
or
xor
loop
stos
push
push
shl
push
adc
stc
adc
or
retf
test
or
out
dec
adc
pop
pop
xchg
rcl
loop
mov
icebp
arpl
(bad)
adc
adc
adc
pop
dec
cmp
sar
and
xor
mov
and
mov
mov
enter
sbb
jmp
test
sar
mov
cwde
add
sub
popa
nop
cwde
mov
add
mov
inc
push
iret
add
sub
mov
sar
or
add
and
retf
add
movs
movs
sbb
mov
sbb
leave
test
rcl
adc
xchg
(bad)
test
mov
sub
xchg
sub
ret
ret
sbb
or
movs
sub
in
pop
ja
das
fst
sub
pop
xor
xor
add
xor
movs
pusha
lock
mov
xchg
sbb
mov
mov
add
xor
daa
xchg
retf
pop
xor
or
ror
push
add
xchg
cmp
dec
dec
es
xor
cs
loop
sub
or
mov
movs
xchg
cmp
jmp
rol
or
and
dec
fstp
mov
inc
add
mov
add
mov
ss
mov
mov
jnp
in
imul
push
mov
mov
lahf
test
inc
push
iret
jnp
mov
push
mov
pop
pop
mov
aas
scas
aad
add
xchg
not
xchg
and
daa
add
call
sar
xor
jge
pusha
inc
push
mov
stc
push
push
cmp
mov
pop
cmp
cmp
mov
call
or
loopne
aaa
cmp
in
mov
pcmpgtd
jb
mov
(bad)
or
pop
cmp
pusha
fisubr
jns
or
mov
es
xchg
mov
or
or
scas
fs
or
xchg
sub
nop
or
or
or
and
(bad)
push
jns
xchg
ficomp
mov
add
(bad)
maskmovq
idiv
dec
and
jns
add
pop
aaa
jbe
or
dec
fnstenv
adc
dec
outs
inc
mov
dec
aaa
jmp
test
sbb
cwde
je
imul
xchg
fidivr
(bad)
xchg
jb
add
xor
mov
inc
lahf
adc
cmp
(bad)
sbb
dec
add
and
cmp
push
nop
gs
inc
popf
add
and
(bad)
test
add
fld
or
add
adc
pop
inc
xchg
adc
outs
mov
mov
neg
xor
sub
xchg
loop
ret
(bad)
or
mov
sbb
jne
pop
pop
pop
sub
aas
adc
jle
mov
test
je
add
jnp
clc
std
les
mov
push
mov
and
fucomip
stos
bound
mov
push
lea
sbb
mov
or
push
mov
push
add
sbb
or
add
or
push
pop
or
pushf
jns
push
sub
in
adc
xlat
push
inc
inc
or
adc
and
add
stos
inc
aam
in
jns
and
or
test
push
fld
repnz
xor
or
nop
pushf
inc
dec
and
xchg
cli
cwde
in
or
cmps
lock
mov
iret
cmp
cli
pushf
cli
mov
cli
pushf
cli
mov
cli
xchg
cli
xchg
cli
cwde
nop
adc
inc
cli
cwde
cli
nop
fs
add
ins
bound
pop
mov
mov
mov
and
pop
inc
inc
pop
and
or
test
mov
movs
repz
push
dec
xor
pop
(bad)
sub
and
test
aaa
popf
mov
lods
popf
and
inc
lods
xlat
or
or
or
cmp
inc
test
jns
adc
push
int3
lock
sub
xchg
pop
sub
xchg
mov
add
adc
or
adc
mov
or
xchg
test
mov
and
ror
cs
loop
test
pop
rdmsr
hlt
sbb
xor
or
packssdw
sub
lock
push
or
shl
mov
push
pop
pop
push
adc
js
or
in
mov
pushf
mov
movs
xor
xchg
mov
mov
sahf
or
inc
cmp
or
adc
push
xor
iret
lock
cmps
test
pop
into
scas
aaa
pop
test
into
test
jae
push
lods
mov
sub
xchg
inc
xor
dec
sbb
dec
push
push
or
loop
xor
(bad)
push
loopne
inc
loopne
clc
push
inc
test
call
adc
inc
xchg
sbb
bts
adc
adc
xor
jno
test
sub
aad
or
outs
dec
push
push
and
push
retf
dec
xor
push
loope
jp
mov
jecxz
pop
aam
(bad)
sbb
sbb
and
sbb
and
push
shl
pushf
mov
scas
push
or
xchg
(bad)
push
inc
push
pusha
in
add
ror
jnp
add
lock
xor
call
cld
sbb
(bad)
aas
retf
div
or
push
pop
jb
inc
jo
adc
or
test
jae
cmp
push
test
lds
ror
add
and
jmp
mov
adc
rol
xchg
add
jmp
inc
or
push
imul
sub
xchg
or
pop
jl
dec
mov
sbb
pop
mov
mov
in
sub
add
(bad)
out
and
movs
add
inc
aas
adc
add
xchg
mov
cmp
jno
fs
cmp
xchg
add
clc
fwait
leave
(bad)
cdq
leave
push
add
push
mov
jb
adc
xchg
popa
and
adc
sub
cmps
add
push
or
pop
sbb
dec
push
cmc
das
or
and
and
(bad)
cmp
dec
mov
(bad)
adc
aad
xor
inc
and
in
pusha
dec
movs
rcr
sbb
loop
lock
dec
inc
add
rcr
xchg
stc
lock
cmps
mov
cld
add
mov
inc
add
rol
jle
fld
sbb
clc
(bad)
int3
xchg
pop
aad
jno
in
hlt
sub
jmp
movzx
in
mov
xchg
cmc
popa
(bad)
aad
cmp
out
dec
xchg
xchg
or
pop
fisttp
push
xor
add
ja
adc
or
js
xbegin
inc
push
int
or
and
lods
add
lods
cmp
lahf
or
mov
daa
cli
(bad)
cli
les
loope
les
sar
and
imul
adc
adc
xchg
ret
or
jnp
add
clc
add
je
adc
ret
fxtract
rcr
push
enter
adc
sbb
and
sub
add
xor
jge
add
xor
adc
retf
sbb
and
mov
add
in
xor
mov
pusha
dec
mov
jmp
addr16
in
out
adc
sbb
xor
gs
aad
imul
mov
fucomip
loope
nop
test
outs
push
int
jle
stos
xchg
push
mov
(bad)
adc
and
xchg
arpl
cld
ja
je
rcr
neg
dec
adc
icebp
jge
xchg
sub
arpl
jb
inc
xor
cld
cmp
leave
ror
jne
out
and
(bad)
fsubr
iret
add
xchg
adc
fsubr
inc
inc
inc
sar
test
fstp
ret
mov
jge
lods
xor
add
add
inc
or
mov
xor
pop
dec
jae
adc
dec
jae
xor
sbb
fiadd
push
jl
and
and
dec
call
call
and
cmp
inc
cmp
and
dec
call
call
and
cmp
pop
dec
and
dec
call
call
and
cmp
jl
inc
and
inc
add
in
imul
cs
mov
xchg
retf
inc
jb
nop
inc
jb
pop
push
xchg
inc
cwde
and
and
pushf
sub
movs
mov
lods
sbb
xchg
movs
and
push
or
outs
or
test
loop
cdq
pop
jo
pusha
sub
loopne
and
adc
and
adc
data16
fs
or
or
and
and
xchg
mov
and
xchg
xor
cmp
xchg
and
cmp
inc
and
xchg
and
xchg
and
xchg
push
push
pop
sbb
and
xchg
and
xchg
and
xchg
jo
js
or
cwde
aad
movs
jmp
xor
mov
ja
nop
push
jb
push
xchg
cwde
pushf
and
movs
add
add
loopne
mov
push
inc
(bad)
lock
(bad)
pop
and
or
sbb
shl
push
xor
cwde
mov
pop
repz
or
or
cmp
movs
push
jne
inc
pop
mov
(bad)
push
mov
add
(bad)
aad
clc
cdq
push
push
xchg
pop
call
xchg
sbb
cmp
dec
div
(bad)
retf
xchg
add
adc
jp
mov
ret
push
ins
add
or
inc
invd
adc
xor
push
je
ret
das
loopne
add
fs
xchg
mov
jmp
dec
mov
jmp
dec
sub
push
ins
push
ret
js
mov
cmp
or
dec
sbb
push
xor
sub
and
test
pop
xor
ror
shl
mov
add
and
ret
jmp
test
sub
rcr
inc
adc
imul
dec
xor
jg
aas
push
rcr
xor
adc
ret
xchg
cmp
call
mov
mov
packsswb
mov
mov
add
mov
sbb
inc
pop
pop
or
into
ins
lods
inc
pusha
movs
push
leave
adc
or
das
outs
jns
and
cmp
ror
loope
sub
xchg
fistp
inc
pop
xchg
sbb
and
lods
inc
call
imul
jge
pop
dec
imul
sub
push
pusha
xchg
fidiv
stos
sbb
add
jno
xchg
popa
xor
scas
jmp
cwde
sub
inc
or
jae
call
aaa
loop
inc
adc
and
movs
cmp
sbb
and
sbb
pop
dec
jae
sbb
push
pop
dec
jae
sub
dec
jae
xor
sub
pop
cs
das
ret
add
inc
mov
jns
add
shr
inc
mov
cmovg
sbb
rep
pop
rcr
adc
dec
dec
retf
inc
xchg
dec
or
in
pusha
adc
cmp
xchg
push
xor
xor
mov
out
lods
add
stos
mov
mov
repnz
xchg
mov
ror
pusha
mov
ins
jo
add
mov
jmp
mov
sbb
js
mov
enter
xor
inc
sbb
test
and
mov
and
and
enter
jg
in
arpl
mov
jmp
push
push
nop
lods
je
cmp
xor
sub
and
sub
cmc
xchg
jno
mov
movs
fs
or
pop
adc
adc
lds
add
jns
leave
(bad)
adc
push
dec
push
push
jmp
sub
cmp
and
or
inc
or
mov
mov
dec
add
mov
adc
mov
sub
mov
mov
push
add
push
or
das
test
leave
push
push
push
push
jb
and
add
daa
sbb
or
push
push
add
lea
adc
inc
fnstcw
(bad)
clc
cdq
inc
clc
push
stc
pop
popa
outs
mov
lock
adc
xor
je
jecxz
imul
push
sbb
push
lock
fiadd
fild
lea
dec
cmps
aad
sbb
je
mov
push
sbb
gs
dec
and
in
dec
add
loopne
cmc
sbb
inc
inc
and
jnp
mov
jecxz
xor
sub
mov
mov
cmc
arpl
or
add
(bad)
lods
hlt
sub
out
or
or
sbb
jae
jb
or
cld
cld
push
sbb
mov
dec
test
mov
mov
xor
sbb
mov
sbb
xchg
add
lahf
add
pop
jl
cmp
lahf
outs
xor
mov
or
fs
or
scas
and
test
stos
mov
xor
jb
dec
test
adc
iret
(bad)
mov
xor
sbb
push
nop
mov
ret
mov
int
cld
and
fadd
jg
sub
sbb
jg
loope
das
push
add
mov
movs
mov
xor
pusha
jmp
xor
add
sbb
cs
jbe
jge
jge
(bad)
test
clc
and
sub
adc
xor
add
ret
xchg
sub
pop
mov
inc
xchg
ror
pop
xor
mov
mov
jle
fimul
and
and
and
(bad)
or
lods
loop
jne
adc
lahf
jge
(bad)
mov
sar
js
pop
sub
test
or
add
adc
add
mov
push
nop
dec
lds
dec
int
push
outs
sbb
inc
add
push
xchg
movs
imul
jb
(bad)
aas
adc
ret
jno
jae
enter
ins
test
ja
in
push
adc
inc
xadd
jne
jge
or
cdq
jmp
jnp
dec
aaa
mov
movs
repz
cmc
jb
jae
pop
in
mov
cmp
push
cmc
push
jo
rcr
repnz
push
fnstcw
cs
stos
adc
cmp
jne
push
push
inc
pop
adc
mov
add
xor
shr
fbld
retf
sbb
mov
xlat
jge
xchg
das
fwait
and
pop
rol
sbb
xchg
mov
shl
push
test
mov
jecxz
xor
jae
inc
popf
adc
cmp
and
add
mov
mov
adc
aas
ins
and
inc
push
aaa
gs
push
mov
xchg
test
xor
movs
sbb
ret
aas
adc
jp
lds
jne
nop
bound
jns
adc
leave
or
dec
or
adc
gs
sbb
push
cmp
xchg
adc
inc
div
pusha
dec
jae
jp
inc
xchg
retf
inc
adc
add
rcl
popa
js
scas
pop
pusha
mov
sbb
adc
adc
add
jb
mov
sbb
gs
movs
test
cmp
and
dec
lods
push
sub
add
fisttp
leave
add
pop
sub
cmp
jecxz
aas
adc
clc
pusha
ret
xor
cmp
mov
jae
ror
pop
jne
(bad)
lds
add
cmps
shr
or
sub
pop
aas
and
movs
push
cdq
add
sbb
xor
mov
pop
or
inc
rol
pop
and
fidiv
adc
inc
push
bound
pop
loope
inc
enter
xchg
add
into
lods
inc
imul
ja
cwde
dec
add
mov
cld
aaa
ror
adc
mov
push
and
or
pop
inc
clc
or
pop
sbb
daa
or
jg
jecxz
inc
sahf
push
cmp
rol
fcomp
sbb
push
jl
xchg
or
sbb
push
mov
sar
xor
add
adc
push
jecxz
push
push
sub
adc
sti
movs
lock
shr
cmps
cmp
rcl
loope
dec
(bad)
push
dec
push
inc
mov
aas
sub
popa
jl
data16
iret
mov
sub
daa
mov
jmp
cmp
adc
into
enter
or
addps
dec
shl
ja
or
call
xchg
(bad)
pop
out
dec
or
dec
sti
lds
and
xor
(bad)
sti
dec
mov
fcmovnb
imul
aad
pop
cmp
aas
out
dec
test
sbb
adc
jbe
dec
mov
ja
call
std
add
pop
dec
mov
dec
adc
jmp
push
xor
push
or
inc
fsub
push
ins
loop
movs
push
aam
sar
mul
or
ret
jle
test
push
xchg
sbb
pop
adc
loopne
fld
stc
pusha
call
(bad)
push
sub
dec
retf
int
jmp
(bad)
adc
add
add
pop
ror
outs
mov
push
mov
popa
les
adc
xchg
je
ins
lock
and
or
mov
stos
or
(bad)
mov
cmp
or
add
dec
jae
fdivr
jnp
sub
std
push
sub
sbb
dec
mov
add
dec
enter
push
inc
sbb
outs
xor
and
inc
inc
fist
ins
jmp
stc
mov
sbb
pop
rcr
adc
add
jb
mov
mov
cmps
dec
lods
mov
pop
sbb
stos
add
inc
push
in
add
in
dec
es
call
call
pop
adc
lods
mov
imul
fidivr
or
sub
xor
mov
mov
js
leave
fcmovnb
scas
bound
and
and
push
inc
inc
dec
mov
mov
adc
or
or
sbb
imul
and
adc
pusha
dec
call
and
or
or
adc
mov
jmp
adc
nop
cmps
jg
cld
push
inc
cld
push
adc
sub
dec
cld
push
add
sbb
add
cmp
pop
inc
cmc
and
popa
test
jnp
mov
mov
and
loop
adc
and
js
mov
sahf
enter
or
xchg
ins
shl
ficomp
xor
and
das
call
cmp
inc
adc
pop
faddp
je
cmp
add
sub
data16
inc
sub
add
sar
sbb
pop
sahf
or
add
jle
push
(bad)
out
push
mov
and
adc
jmp
aas
push
lea
inc
jb
inc
inc
mov
jb
push
jle
sub
and
pop
or
loope
ror
sbb
jmp
jmp
sbb
push
mov
and
jecxz
or
adc
sbb
adc
fcomp
enter
push
add
pop
push
jb
dec
pop
mov
sbb
mov
sub
mov
or
push
or
push
or
repnz
push
push
push
add
mov
push
stc
mov
pushw
push
push
or
push
or
jns
stc
sub
or
push
or
jns
stc
sub
or
push
or
or
loope
xchg
cmps
leave
ror
add
or
nop
scas
nop
xchg
or
push
or
sbb
dec
ds
or
lahf
add
aas
nop
dec
push
mov
mov
call
leave
or
add
push
test
push
add
and
mov
pop
jb
daa
add
add
std
test
or
adc
add
and
daa
add
add
lds
add
adc
or
xchg
out
mov
push
pop
or
repz
out
into
push
push
cmp
add
pop
jp
dec
out
mov
xor
or
push
nop
adc
push
and
daa
das
das
or
cld
cld
cld
cld
leave
retf
mov
cld
in
scas
in
cld
hlt
cld
hlt
cld
cmp
adc
hlt
cld
mov
push
pop
(bad)
sub
add
mov
dec
adc
adc
add
pcmpgtw
pushf
add
mov
xor
repnz
lock
lock
lock
imul
add
ror
mov
or
adc
(bad)
fs
shr
push
pop
lods
(bad)
aam
add
gs
xor
xor
shl
inc
mov
adc
in
and
call
xchg
fwait
lahf
call
push
and
and
in
test
leave
and
xchg
sbb
repnz
enter
and
and
cmp
in
cld
cmp
in
and
push
and
adc
femms
and
adc
fwait
popf
movs
xor
pop
push
and
loopne
jo
in
loopne
sub
and
dec
popf
dec
ds
push
push
aad
push
mov
push
adc
and
jb
sbb
(bad)
fmul
push
mov
push
and
add
jl
push
pop
jb
cmp
xchg
dec
jb
js
pop
or
in
push
xchg
push
fcomp
xchg
or
jo
inc
dec
sub
ins
mov
ins
ins
mov
xchg
je
leave
popf
cmp
je
cmp
pop
push
push
aam
aam
add
add
repnz
xchg
mov
and
and
dec
mov
inc
enter
pop
xor
push
pop
push
dec
mov
jb
dec
push
sbb
add
popf
pop
mov
add
popf
cmp
push
inc
mov
adc
and
popf
dec
dec
movs
jb
enter
inc
aam
out
lea
in
or
nop
retf
inc
inc
add
dec
jb
xchg
inc
inc
push
inc
test
inc
inc
push
inc
dec
cmp
nop
mov
aas
cmp
add
cmp
xchg
xchg
dec
scas
and
xor
fs
dec
sub
cmp
jb
sbb
shr
xor
cmp
and
and
xor
sub
push
and
push
and
cmp
cmp
push
push
adc
aaa
inc
adc
push
xchg
in
and
pop
add
int3
and
mov
add
mov
dec
enter
std
add
or
add
nop
add
adc
adc
cmp
adc
out
fidiv
push
in
(bad)
retf
mov
inc
mov
pop
cmp
ds
into
push
fnstenv
fild
out
push
sbb
pop
sbb
pop
in
cmp
cmp
test
push
sbb
sbb
sahf
neg
inc
jno
push
inc
pop
push
imul
mov
add
rol
add
jb
es
punpckhwd
and
movs
sub
pop
ds
add
inc
add
les
and
inc
pop
cmp
shl
or
mov
pop
push
mov
dec
push
or
pop
mov
movs
mov
adc
jl
or
jle
add
shr
push
push
mov
fdiv
adc
pop
jmp
mov
inc
push
dec
mov
ja
dec
xchg
lods
xchg
dec
cmp
push
and
jns
rol
sub
and
mov
retf
push
int
and
ficomp
rcr
(bad)
mov
das
xor
jae
adc
dec
cld
test
test
and
push
push
and
adc
jg
adc
push
leave
rol
lea
repnz
push
lea
mov
mov
inc
sub
push
cmp
std
push
or
mov
mov
loopne
jl
jecxz
or
pop
push
push
ins
rcl
jmp
ins
push
pop
add
std
xor
mov
ficom
sbb
dec
or
pop
or
mov
pop
lea
cwde
jmp
adc
(bad)
out
mov
dec
or
adc
sub
push
pop
pop
rol
and
or
and
bound
fadd
and
add
pusha
push
sub
inc
les
fadd
and
pop
rcr
outs
or
or
add
cmp
adc
cdq
nop
and
adc
(bad)
sub
sbb
xor
xor
mov
addr16
push
mov
outs
pop
mov
and
outs
push
sub
adc
out
push
test
lahf
fist
pop
jmp
popa
jmp
bound
pop
add
inc
push
(bad)
loopne
lods
and
add
mov
adc
jl
add
fild
ds
ror
arpl
movs
lahf
mov
xor
or
inc
mov
sbb
rcl
push
(bad)
add
sbb
inc
jae
xor
cmps
mov
mov
sbb
ret
push
ins
or
shl
pop
pop
pusha
xor
les
push
pop
dec
mov
mov
xor
pop
sub
je
push
popf
cmc
inc
inc
popa
js
and
mov
cmc
and
out
daa
mov
add
ret
ret
pop
aam
lock
pop
jg
push
inc
imul
or
jmp
or
shr
cmp
out
mov
adc
sbb
test
dec
outs
dec
or
lods
add
mov
and
cmc
frndint
pop
mov
add
adc
ret
bound
mov
mov
cs
and
jmp
pop
mov
jb
dec
xor
into
jle
mov
mov
sbb
inc
inc
sub
push
pushf
xor
add
stos
lods
cwde
sar
pusha
xlat
repz
push
xor
or
fdiv
jecxz
push
mov
fcomp
daa
scas
lea
cmc
push
ss
retf
xor
or
cmp
mov
inc
adc
(bad)
cmp
adc
and
pop
ror
iret
adc
fwait
pop
call
pop
xor
loopne
cwde
push
fsub
es
retf
ins
inc
cmp
add
adc
add
inc
add
and
mov
xor
adc
or
xchg
or
xchg
add
or
xchg
jb
add
add
stos
push
inc
dec
add
add
aaa
neg
adc
ror
retf
push
cmps
imul
ins
push
add
fst
pop
jae
sti
or
jecxz
and
dec
jb
shl
loope
or
and
(bad)
xor
push
cs
fwait
cwde
add
rcl
adc
sub
add
sub
or
loop
test
mov
dec
jb
and
and
popa
loope
cwde
test
lods
(bad)
ja
adc
inc
shl
dec
sbb
out
gs
adc
into
scas
mov
mov
sbb
or
xor
add
ret
xor
add
fsub
sbb
fcmovb
xlat
adc
(bad)
xor
ret
sbb
hlt
pop
or
sub
mov
sub
pop
adc
mov
pop
and
sbb
std
xchg
push
sbb
add
pop
adc
jmp
daa
pusha
sbb
fld
fstp
jnp
in
jmp
stos
and
sbb
pop
xor
add
pop
adc
pusha
xchg
xor
push
pusha
sbb
mov
js
imul
and
sub
mov
or
ret
jno
call
mov
pop
test
xor
add
nop
cmp
xor
mov
or
dec
stc
in
mul
outs
enter
fistp
add
jle
add
add
call
test
rcr
leave
in
(bad)
out
popa
pusha
das
or
sbb
add
jo
nop
mov
jge
jmp
mov
push
add
and
pop
or
sti
xchg
and
nop
and
and
fld
fnstcw
cmp
fld
inc
and
sahf
mov
xor
gs
xor
lods
dec
sub
aaa
hlt
mov
inc
fwait
push
popa
push
xor
movs
and
sbb
stc
cld
inc
idiv
stc
ss
xor
loop
push
in
sti
add
xchg
gs
or
adc
xor
pop
adc
loopne
repz
shl
sbb
enter
mov
xor
sbb
(bad)
loopne
mov
ins
stos
sbb
ret
mov
cwde
fstp
jmp
fchs
sbb
pop
push
cdq
std
fld
fstp
popa
inc
sbb
sbb
mov
fadd
mov
sbb
data16
enter
ss
jmp
sbb
jns
mov
mov
sbb
push
push
imul
adc
test
rcl
sub
jne
pop
iret
inc
xor
push
cmp
rol
push
pop
adc
in
push
aaa
mov
loopne
fs
cmp
into
add
or
clc
inc
call
mov
loopne
cmps
inc
xor
stos
inc
call
jne
sub
mov
test
adc
xor
leave
adc
mov
cld
(bad)
adc
sub
pop
call
pop
or
mov
pop
adc
jmp
dec
call
call
ss
xchg
loopne
mov
std
adc
xchg
sbb
je
pop
inc
out
adc
and
xor
push
dec
mov
xchg
push
ss
mov
mov
loop
add
push
outs
add
and
je
and
sub
hlt
adc
shl
aaa
and
cmps
push
addr16
test
es
and
or
ret
aas
(bad)
in
cs
push
or
add
jmp
add
adc
lods
stc
sar
add
sbb
mov
cmp
or
mov
aam
push
movs
or
and
(bad)
xor
add
(bad)
push
push
cmp
bnd
sub
add
add
add
rcl
pop
add
mov
pop
das
(bad)
jl
or
cmc
sete
sub
mov
lock
jge
and
pop
sbb
mov
inc
xor
aas
stos
inc
aam
and
pop
test
pushf
sub
sub
ds
or
test
in
or
dec
or
add
jg
or
adc
xchg
fstp
hlt
pop
add
int3
out
scas
cmp
les
shl
mov
sbb
shl
fwait
lea
pop
lahf
push
sub
pop
ret
xchg
push
das
mov
xchg
mov
into
push
inc
loopne
sbb
aaa
inc
nop
out
imul
popf
xchg
rol
leave
aas
push
push
sbb
cld
shl
jmp
inc
dec
mov
das
ds
mov
ret
dec
fisttp
mov
pop
sub
es
lock
test
loop
dec
mov
(bad)
rol
xchg
scas
and
(bad)
retf
lods
xchg
sar
test
ins
clc
jne
mov
or
sub
hlt
fwait
test
int3
lock
sbb
jae
inc
xchg
adc
sub
cmovo
mov
xor
fcomp
sbb
fldpi
cmp
or
sbb
jbe
(bad)
mov
jo
mov
sub
pop
scas
xor
xchg
or
jb
mov
pop
in
jb
loopne
add
loopne
jge
sbb
or
out
sub
mov
push
sti
mov
lods
and
cwde
clc
xor
cld
leave
std
dec
shl
mov
sbb
mov
xor
or
inc
inc
xchg
add
xchg
inc
cmp
das
movhps
pop
and
stos
fwait
adc
std
jg
(bad)
or
repz
fst
seta
cs
hlt
in
nop
sub
adc
mov
add
out
mov
add
or
sbb
and
push
jmp
add
mov
shl
cli
cmp
test
xor
or
and
clc
enter
sahf
fadd
scas
(bad)
jmp
inc
daa
jmp
inc
les
inc
xchg
mov
pop
jns
lods
add
xchg
ins
stos
(bad)
aaa
ret
pop
push
pop
pop
mov
or
inc
cmp
adc
cmp
inc
jb
ret
lock
jns
sbb
and
add
add
out
ret
in
repnz
inc
and
sbb
pop
das
in
adc
mov
xchg
pop
call
(bad)
sub
xor
jle
jmp
ret
and
shl
in
in
pop
lahf
sbb
call
fist
cwde
jl
jb
xor
jl
jge
cmp
sub
adc
add
xor
lods
(bad)
mov
fcos
es
inc
stos
push
addr16
push
shr
pop
pop
adc
xchg
add
mov
rcr
out
xchg
std
call
mov
mov
cld
pop
leave
cs
inc
or
add
(bad)
aas
pop
push
inc
in
adc
lahf
add
pop
adc
adc
inc
or
ret
pusha
loopne
cmp
cmp
nop
or
or
adc
xchg
mov
and
inc
add
pop
dec
cld
sbb
test
and
xchg
adc
or
xchg
dec
or
(bad)
clc
clc
mov
lock
push
call
xchg
jge
mov
je
sub
jb
imul
jbe
pop
out
cmp
or
xor
push
pop
popf
cmp
and
sub
mov
inc
lahf
push
clc
cmc
mov
loopne
and
inc
add
and
lds
xchg
rol
fcomp
pop
stc
mov
scas
xchg
fwait
cld
ss
cmp
mov
cmp
(bad)
xchg
test
mov
cmp
call
xchg
dec
xchg
xchg
jno
sub
sub
jmp
or
sahf
call
jno
jmp
leave
add
les
imul
cmps
inc
push
inc
jmp
rol
sub
test
jae
mov
xor
jl
and
inc
(bad)
dec
rol
sbb
inc
jb
arpl
dec
shl
leave
idiv
jge
lock
mov
div
jae
mov
mov
mov
clc
retf
cs
je
(bad)
fstp
or
retf
mov
cmp
jbe
mov
inc
add
repz
and
lds
fs
add
mov
jno
jne
pusha
test
xchg
push
sbb
inc
jmp
inc
xor
sub
(bad)
in
je
movs
inc
arpl
jg
cmp
or
imul
inc
xor
push
jb
fwait
and
enter
fst
mov
push
inc
xlat
inc
inc
sbb
rol
and
movs
cmc
push
ins
xchg
cmp
ficomp
mov
and
outs
inc
movs
pop
sub
sbb
jno
sub
mov
mov
shl
mov
or
imul
repnz
call
jmp
sbb
push
jmp
or
and
dec
or
out
jp
pop
dec
adc
scas
add
pop
rol
jmp
out
sbb
mov
adc
fmul
inc
ficomp
addr16
shr
push
retf
sbb
inc
xor
xor
add
inc
in
xchg
sbb
cs
cmc
clc
cwde
adc
xor
or
test
mov
or
add
gs
nop
addr16
int
xor
and
enter
pop
jne
mov
push
stos
dec
(bad)
ror
mov
ja
mov
sti
ss
push
push
mov
dec
and
not
sub
pop
xor
cmp
out
jp
movs
inc
jns
pop
stos
(bad)
mov
cmp
or
xchg
mov
mov
pop
xor
mov
nop
xchg
add
mov
xor
les
js
(bad)
das
pop
push
ins
test
test
jg
adc
add
(bad)
jae
outs
adc
je
sbb
jle
fs
add
sub
das
mov
pop
push
adc
dec
sub
add
xchg
dec
add
adc
gs
psrld
add
ss
xchg
dec
and
addr16
mov
push
cmp
test
inc
jmp
lock
sbb
mov
jne
aas
or
in
and
fcomp
fidiv
or
(bad)
fwait
call
ret
mov
push
push
sub
xor
mov
mov
fs
sub
loop
dec
push
adc
push
daa
or
add
les
add
test
add
ja
adc
retf
jae
icebp
or
or
adc
add
test
add
and
mov
and
es
mov
scas
(bad)
xor
jne
adc
cmp
sbb
lea
add
inc
jmp
ret
ins
add
mov
pop
add
mov
sub
adc
cli
ss
xor
out
xchg
inc
push
movs
cmp
mov
add
and
sbb
(bad)
stos
sub
mov
pop
scas
or
cmp
loopne
call
xchg
inc
inc
push
loopne
inc
jo
cmps
adc
lock
(bad)
push
lds
mov
xor
ja
mov
and
push
xor
arpl
jmp
add
fucom
inc
sbb
mov
mov
call
imul
or
adc
sti
mov
lahf
mov
and
loope
iret
aas
es
xor
dec
dec
data16
fs
mov
cwde
cld
pop
bound
(bad)
(bad)
adc
sbb
repnz
cmp
pop
scas
pusha
jne
cmp
adc
cmps
cmp
inc
and
inc
enter
push
fdivr
dec
sub
(bad)
sub
(bad)
in
mov
inc
pop
call
cmp
je
das
add
mov
nop
cmp
cs
dec
add
mov
xor
and
lock
jmp
dec
les
xchg
cmp
jmp
or
fwait
pop
sbb
test
add
or
shl
imul
add
or
(bad)
js
je
pop
xor
inc
sbb
int
push
add
or
add
fmul
dec
jmp
mov
mov
inc
xchg
rcr
lds
inc
cdq
cmps
or
dec
bound
xor
inc
jle
xchg
je
pop
jmp
push
jmp
adc
and
mov
pop
pop
pop
xchg
or
sbb
adc
push
ins
jmp
adc
rol
sub
xor
add
or
ror
mov
in
or
outs
cmp
movs
movs
int
or
mov
je
add
fist
sbb
mov
out
mov
out
dec
pop
push
adc
mov
dec
sub
inc
or
std
lock
pushf
sbb
or
cmp
popf
jl
(bad)
(bad)
inc
cmp
call
inc
push
and
nop
pop
or
jnp
or
mul
sbb
scas
or
clc
xchg
xchg
mov
mov
jns
or
lods
out
inc
jne
add
dec
cmp
push
mov
and
es
fwait
loopne
lea
push
shr
inc
sub
cwde
cwde
adc
mov
cwde
mov
pop
out
and
xchg
xor
and
add
adc
sbb
lds
xor
add
loopne
push
jp
sub
loope
or
out
lock
xchg
or
jae
jne
test
and
retf
daa
pop
ret
adc
ret
adc
xor
and
and
imul
push
sbb
inc
xchg
or
or
movs
xchg
ficomp
inc
or
sahf
push
pusha
pop
or
lock
out
out
cmps
dec
pop
push
sub
inc
dec
mov
cmp
or
and
cmp
pop
inc
mov
add
mov
pop
xor
icebp
sub
jo
pop
push
mov
daa
mov
dec
push
sub
inc
and
outs
nop
js
sbb
xor
stc
or
call
sbb
push
mov
sub
sbb
(bad)
mov
push
or
inc
aam
in
scas
push
test
mov
add
inc
retf
test
test
ror
cmp
mov
xor
imul
add
and
add
ret
mov
inc
xchg
js
and
add
dec
sub
mov
cmc
xor
inc
dec
sub
add
ror
dec
push
cmc
out
pop
rcr
or
sub
push
mov
pop
cmp
es
ss
das
aas
pop
sti
pop
mov
adc
lock
sub
mov
jg
and
push
cwde
cmps
sar
fistp
daa
inc
arpl
xor
sbb
mov
nop
inc
mov
ss
xor
imul
xor
lds
hlt
push
rol
jecxz
sar
int
sbb
inc
dec
clc
push
or
(bad)
jo
jl
add
and
sub
adc
sahf
cmp
pusha
mov
xor
aaa
iret
adc
mov
xor
es
adc
clc
jbe
adc
mov
mov
mov
and
mov
fsubr
mov
xor
mov
cmp
mov
js
sbb
les
lahf
lods
add
xchg
mov
pop
xchg
and
jns
jmp
enter
cwde
nop
test
adc
add
mov
repnz
push
pushf
rol
xor
pop
push
or
or
cmps
or
xchg
adc
fist
pop
push
or
mov
in
aas
in
xchg
sbb
loopne
pop
add
loopne
enter
add
and
push
(bad)
les
xor
leave
les
cmps
sbb
dec
les
xor
or
and
les
loopne
jo
push
clc
lods
push
or
retf
and
clc
dec
or
push
ss
pop
push
cmp
inc
pusha
jno
mov
mov
and
push
sbb
cdq
cmps
rol
ror
push
cdq
nop
int3
int3
pop
fwait
xor
(bad)
call
dec
pusha
and
int3
test
and
lahf
jecxz
dec
cmp
cmp
push
sbb
lods
adc
push
push
cs
or
add
add
ins
sbb
push
mov
sar
imul
jb
mov
loopne
div
daa
jno
fldenv
cmps
push
lods
arpl
das
jo
or
out
push
imul
call
(bad)
mov
nop
inc
hlt
jge
pop
fadd
mov
mov
iret
mov
fldcw
loope
mov
mov
lahf
mov
fnstcw
and
dec
ins
xor
jmp
jmp
jl
inc
mov
add
cdq
leave
movs
loopne
dec
into
loopne
(bad)
call
mov
out
test
dec
sub
mov
out
or
xor
popf
xor
or
rol
test
dec
mov
xchg
(bad)
cwde
imul
ss
test
mov
and
adc
ds
and
add
ret
push
sbb
mov
add
xchg
retf
test
test
loopne
mov
add
in
jnp
adc
in
loop
stc
adc
and
lock
outs
je
xchg
mov
xchg
neg
inc
test
(bad)
jg
and
and
mov
and
(bad)
sub
dec
and
jmp
(bad)
jmp
mov
mov
(bad)
clc
sbb
jmp
mov
add
test
call
pusha
adc
js
rdtsc
and
add
add
add
sub
call
fistp
aaa
sbb
nop
pop
lock
lock
pop
lea
out
pop
movs
hlt
mov
(bad)
lods
xor
xchg
movs
sub
and
inc
fiadd
or
enter
add
fcomip
lock
ins
jno
push
push
cmp
push
inc
or
shl
ret
nop
pop
or
push
adc
mov
jb
or
fild
jle
mov
lock
call
hlt
(bad)
call
adc
sbb
sbb
call
mov
ret
pop
(bad)
(bad)
neg
movs
enter
sbb
mov
jl
jge
mul
sub
jmp
js
in
and
ret
in
inc
jb
lahf
cld
adc
mov
stos
sub
jp
xor
adc
mov
adc
aaa
add
inc
leave
imul
test
pop
add
sub
sub
enter
fst
in
jp
popa
pop
ret
pushw
and
sub
call
mov
and
mov
dec
push
or
or
stos
xlat
mov
or
or
jne
call
cmp
ret
mov
mov
sbb
inc
cmp
xor
inc
mov
and
cs
inc
std
dec
hlt
ss
inc
(bad)
aad
push
enter
dec
adc
add
imul
pusha
lea
cmps
xor
test
push
aaa
add
clc
test
test
popa
sti
dec
cmp
(bad)
pop
mov
adc
inc
push
or
ja
push
outs
mov
and
mov
push
adc
mov
call
adc
repz
rol
(bad)
(bad)
iret
repz
enter
retf
aas
mov
xchg
lock
pop
cli
or
pop
mov
in
and
repz
mov
in
mov
jmp
mov
add
les
cs
jle
imul
int
movs
fsubr
in
addr16
inc
xor
fidivr
push
add
(bad)
cmp
cmps
add
out
push
ins
ret
cmc
stc
jne
xchg
jo
inc
cmps
adc
je
popf
adc
push
adc
inc
movs
repnz
stos
cld
jl
adc
leave
clc
mov
adc
ja
push
int3
stc
adc
out
add
shl
push
lock
retf
jp
(bad)
push
int
jne
ss
sar
dec
stos
mov
pusha
push
add
jnp
lods
inc
mov
xchg
and
or
push
test
mov
mov
xchg
fdivr
push
add
pop
mov
xchg
retf
dec
inc
aaa
inc
pushw
mov
mov
sbb
mov
movs
xor
dec
mov
sbb
add
iret
xchg
mov
mov
adc
xor
mov
cwde
scas
nop
pusha
test
test
stos
push
js
bound
aas
ret
popf
push
add
xchg
ret
(bad)
mov
aas
push
stos
xor
and
out
ins
and
xor
mov
ja
adc
fcom
mov
jecxz
loop
inc
mov
or
je
xor
or
test
sub
dec
and
int
or
sar
push
adc
sar
sub
sub
stos
mov
add
test
dec
dec
or
add
movs
out
cmps
and
ret
mov
sub
push
mov
jle
dec
mov
movs
gs
lock
popa
stos
and
add
jp
ret
jmp
pop
mov
dec
lods
aaa
adc
cmps
clc
mov
cmp
rcl
or
dec
jecxz
icebp
pusha
xor
call
das
movs
jmp
ds
xor
mov
lock
cwde
add
jmp
lahf
cmp
jae
mov
mov
mov
or
mov
popf
(bad)
push
mov
jns
or
neg
test
sub
jmp
jne
shr
push
push
jno
shl
movs
int
xor
or
inc
test
cmp
cwde
popf
jae
sub
cmp
push
test
fidiv
jae
sar
ror
in
sbb
add
cwde
mov
push
fsub
retf
jb
cmp
fdivr
jns
dec
aam
sub
stc
sub
sahf
adc
outs
aad
ins
jmp
dec
dec
es
pop
xor
sbb
push
inc
rcl
add
pop
je
nop
adc
or
pusha
pop
xlat
jb
mov
mov
dec
dec
popa
enter
pop
or
xchg
sub
pop
add
pop
add
dec
and
xor
cmp
je
retf
push
jno
nop
cmps
sbb
sub
push
dec
cmps
clc
or
and
mov
mov
mov
test
pop
xlat
retf
cs
or
pop
pop
retf
xor
adc
pop
retf
inc
in
and
jae
retf
inc
jns
enter
retf
inc
jns
jb
jae
jae
push
inc
enter
jne
enter
jne
jne
add
sub
or
mov
push
mov
in
dec
popw
iret
fsubr
out
cmp
mov
jne
cmp
and
xchg
add
repnz
inc
repnz
push
add
and
add
or
adc
dec
xchg
pop
test
adc
add
sub
leave
or
xor
add
adc
push
int3
xchg
int3
lahf
add
jmp
mov
int3
adc
fist
ss
ret
sbb
pop
pusha
adc
add
sbb
fs
sbb
add
ja
add
jecxz
inc
mov
inc
xchg
addr16
add
das
xchg
dec
and
and
sbb
xor
aas
nop
pop
mov
inc
xor
add
pop
inc
adc
adc
or
add
jo
and
test
mov
test
sbb
xchg
loopne
aas
(bad)
mov
jb
test
test
test
mov
and
push
aas
pusha
add
pop
ja
pusha
in
adc
pusha
hlt
retf
or
test
xchg
test
push
arpl
jb
push
push
and
add
aas
inc
fs
xchg
leave
js
jl
inc
mov
test
sub
clc
inc
inc
rcr
xor
jmp
inc
sub
inc
leave
fmul
aas
and
push
mov
dec
mov
sbb
push
out
mov
inc
mov
sub
jecxz
or
adc
xchg
aas
rol
xchg
mov
pushf
add
ds
adc
xlat
mov
jg
push
leave
outs
xchg
adc
rol
xchg
push
xchg
add
loope
mov
mov
sar
rcl
ret
les
pop
nop
pushf
call
dec
xor
(bad)
ret
jge
adc
inc
push
add
dec
add
pusha
inc
(bad)
call
mov
test
cmp
inc
(bad)
cmp
pop
xchg
push
xchg
test
push
repz
mov
xor
iret
jecxz
jbe
aas
jle
fld
jle
pop
jge
pop
jg
or
push
aas
or
enter
sub
inc
push
fwait
int
add
jo
sub
xchg
stos
cs
cmp
cwde
xchg
lds
jl
cmp
mov
retf
pusha
cmp
ds
xchg
or
push
test
mov
or
xor
fcomp
aam
xchg
xor
aam
mov
sub
cdq
mov
push
inc
sub
or
rcr
xor
adc
call
or
mov
add
in
hlt
sbb
add
cwde
nop
jns
add
nop
dec
call
in
ins
int3
sbb
imul
in
outs
and
ror
outs
push
adc
movs
cmp
call
outs
add
imul
push
pop
sbb
mov
adc
cmp
sbb
mov
or
test
inc
pop
add
and
retf
mov
imul
fdivr
ret
xor
aas
js
adc
in
and
sbb
fs
mov
xchg
cdq
out
int3
push
push
push
push
inc
or
cmps
lea
(bad)
jle
inc
add
push
clc
add
and
fadd
push
or
aas
or
into
sar
sub
push
xchg
sub
cli
xor
mov
pop
mov
mov
push
(bad)
fwait
add
push
mov
pop
mov
mov
adc
and
rcr
push
and
jge
push
and
inc
fcmovnbe
cmp
outs
inc
mov
imul
push
lea
mov
and
sbb
fist
iret
clc
push
call
int
pop
push
push
push
push
push
movs
mov
and
and
loopne
aas
mov
dec
mov
jp
cmp
and
push
hlt
mov
inc
(bad)
pop
push
and
lock
ret
sahf
inc
loopne
xchg
inc
div
std
popf
cmp
push
iret
mov
inc
adc
push
popf
xor
xchg
mov
(bad)
xchg
cli
jle
ins
dec
cmc
dec
pop
mov
mov
mov
inc
popa
mov
clc
mov
dec
mov
cmps
rcr
(bad)
loopne
add
dec
nop
ret
fbstp
push
call
adc
push
aad
or
inc
rcl
mov
fcomp
and
push
add
or
pop
jmp
cmps
add
add
rcr
push
mov
inc
loopne
enter
jp
adc
shl
sub
lock
dec
xlat
jmp
xchg
pushf
fld
push
outs
add
in
push
out
mov
push
lea
sub
ret
dec
add
clc
cmps
js
xor
clc
mov
out
ja
xor
sbb
movs
push
mov
inc
(bad)
fist
mov
popa
pop
push
pop
jmp
push
xchg
jp
sbb
add
pop
jmp
inc
add
test
into
xchg
sub
xchg
cmp
push
adc
movs
outs
xchg
outs
add
dec
(bad)
sbb
stc
sti
or
push
adc
stos
pop
push
or
ja
in
dec
mov
pusha
sub
push
adc
jle
push
xor
cmp
rcl
rcl
ja
inc
shl
inc
mov
inc
xchg
call
or
push
popf
and
rcl
fdivr
dec
adc
push
push
sbb
sar
push
daa
sub
lock
inc
push
imul
movs
mov
and
pop
dec
jmp
test
and
dec
sbb
cmp
inc
ror
pop
data16
and
sets
sub
shr
cmps
mov
inc
inc
jmp
cmp
sub
mov
add
add
pop
add
pushf
sub
pop
adc
dec
adc
ja
test
push
lock
loopne
loopne
push
pop
or
out
lods
addr16
popa
ficom
lock
sub
sbb
xchg
ja
push
pusha
xchg
or
adc
pop
and
and
or
call
psllq
or
xchg
and
and
and
cmps
adc
cs
and
outs
retf
push
cmp
add
out
add
or
xor
fdiv
aas
inc
loopne
mov
and
jmp
sub
sub
test
daa
fwait
add
jmp
jne
pop
jo
pop
sbb
or
stos
fiadd
pop
inc
pop
stc
pop
shl
je
cmp
and
ja
out
jbe
sbb
and
add
mov
or
push
lock
aaa
or
or
and
or
and
ret
gs
and
jno
xchg
inc
push
sbb
add
outs
cdq
add
mov
es
cld
out
test
add
es
pusha
push
sub
aaa
cmp
rcl
adc
jbe
add
in
push
push
xor
cmp
push
xor
add
mov
mov
into
pushf
fsubr
sbb
add
jmp
jge
sbb
and
mov
nop
xor
xor
(bad)
enter
add
and
or
jmp
scas
pop
jl
mov
mov
rcl
mov
dec
fbld
fs
jno
pop
clc
and
push
loope
test
dec
repz
cmp
mov
aas
movs
jmp
xor
mov
mov
inc
jl
jne
or
adc
shr
out
jae
pusha
jno
rcl
inc
mov
and
mov
mov
mov
add
sub
in
je
adc
cwde
jge
sbb
push
in
add
mov
shl
sub
lahf
nop
mov
mov
or
jo
sub
mov
ja
jne
add
add
lahf
add
add
inc
add
leave
xor
or
jnp
and
or
adc
ret
(bad)
xchg
iret
or
inc
lahf
movs
add
jb
das
sbb
jae
or
cmp
sbb
lods
xchg
dec
cmp
dec
pop
test
dec
in
adc
mov
or
test
lock
or
dec
in
xor
retf
aam
loopne
cmp
shl
and
mov
clc
sbb
rcr
xchg
adc
sub
jge
add
ja
jmp
xchg
xchg
rcl
movs
aad
inc
loop
adc
inc
imul
pushf
sbb
dec
pusha
icebp
cmp
out
add
test
jmp
sbb
sbb
inc
shr
les
fist
push
ins
(bad)
pop
add
fist
pop
and
int3
aaa
lock
cld
pop
sub
add
sub
push
cwde
jno
shl
add
or
fiadd
dec
test
xchg
ins
adc
mov
imul
(bad)
stos
xchg
sub
sbb
or
pop
inc
mov
mov
fwait
add
push
(bad)
push
mov
mov
add
xlat
pop
jb
mov
adc
aam
paddb
push
adc
je
mov
and
dec
push
adc
xchg
test
out
jmp
fdivr
fsub
dec
fcom
pop
cmp
mov
imul
cmp
or
pop
call
rcr
inc
and
jl
sahf
jg
lea
or
xchg
or
cli
or
test
sti
mov
or
arpl
rcr
icebp
and
jns
jle
adc
xlat
jl
cmp
test
mov
out
shr
mov
hlt
dec
adc
push
push
stos
pop
rol
fs
push
adc
sub
cmp
jne
dec
or
xor
test
push
ins
lods
xor
adc
adc
in
arpl
popf
(bad)
out
mov
(bad)
imul
dec
jnp
jle
push
jae
jbe
push
loope
test
sti
jl
inc
add
mov
dec
add
push
call
sti
loopne
and
mov
in
mov
mov
push
jp
daa
sub
outs
fadd
movs
jbe
push
imul
and
pusha
or
push
popa
or
inc
imul
inc
std
xor
or
jae
loop
xchg
push
xchg
xchg
xor
inc
sbb
sbb
iret
imul
push
sar
mov
sbb
ja
jl
fimul
push
push
push
scas
or
pop
mov
lods
(bad)
jo
test
and
das
mov
mov
out
or
pop
and
jne
mov
xor
mov
stc
mov
mov
leave
add
rcl
and
xor
xchg
inc
shl
adc
xchg
ror
out
jne
stos
pop
or
test
cmp
or
stos
lahf
xchg
lahf
push
je
leave
je
mov
jge
mov
mov
mov
dec
xor
xor
es
mov
mov
and
fbld
rcr
ja
add
cmp
and
(bad)
cmp
jne
xchg
ds
shl
leave
adc
or
and
push
add
movs
outs
inc
dec
retf
enter
sbb
dec
inc
imul
aad
or
jle
adc
inc
rcl
mov
or
mov
push
ret
or
xor
int3
fdivr
iret
add
adc
call
or
nop
icebp
data16
sbb
bnd
inc
cld
fadd
adc
bnd
mov
mov
cli
cmp
jb
inc
jmp
jmp
and
cmp
and
ror
mov
mov
mov
add
mov
adc
cmp
and
lock
hlt
push
push
push
mov
push
push
call
(bad)
loopne
add
pop
pop
fwait
lock
inc
sbb
adc
sar
mov
xor
sub
test
out
pop
(bad)
nop
dec
push
je
jne
jno
add
and
sbb
push
jb
push
hlt
retf
jnp
xlat
xchg
cld
jae
cld
fadd
in
cld
cmp
adc
jbe
or
mov
repnz
mov
jno
loopne
adc
jg
ja
ret
jne
cmps
sbb
inc
ret
xchg
add
cmp
jnp
jne
cmp
inc
shl
js
pop
cld
pop
jae
mov
or
jns
xor
orps
leave
test
je
sub
ds
jmp
cmp
jbe
cmp
jb
call
ins
sub
fs
inc
cmp
add
and
sahf
pop
fsub
orps
add
ins
adc
jp
push
inc
adc
cmp
sub
add
add
jg
or
mov
adc
xchg
add
enter
rcl
pushf
jo
out
in
push
mul
lds
divps
mov
sbb
inc
inc
mov
rcr
cmp
lds
in
pop
push
push
inc
mov
cmp
clc
ret
lods
or
outs
jns
inc
push
lock
cmp
xchg
cmps
add
pop
sbb
loopne
inc
lea
bound
mov
xlat
dec
mov
adc
cmp
(bad)
or
inc
lea
cs
push
mov
cdq
cmp
mov
push
adc
dec
push
test
std
into
sahf
fsub
jne
pop
cmp
mov
xchg
cmps
imul
pop
dec
mov
mov
or
mov
inc
cmp
jle
xchg
adc
clc
pop
pop
dec
das
add
pop
pop
pusha
or
inc
pop
cmp
das
fcomp
or
jge
pop
shr
sbb
dec
ret
add
and
and
fwait
out
sub
aam
push
and
jns
jge
add
cmps
and
or
in
inc
and
adc
aam
in
push
cdq
cmp
and
loopne
retf
rol
pop
in
rol
call
mov
ins
add
enter
inc
pop
pushf
imul
outs
inc
sub
pop
shr
ror
mov
mov
out
pop
and
sar
jl
in
xlat
and
fwait
and
rcl
mov
aaa
sbb
or
mov
rol
fistp
imul
dec
dec
jg
sub
cmp
cmp
add
imul
add
push
enter
ins
inc
or
or
in
repnz
ds
sbb
cmps
mov
sbb
xor
jo
mov
cmc
sub
adc
and
jmp
dec
idiv
and
jne
push
mov
fs
in
sahf
gs
pop
fist
jb
stc
xor
mov
inc
cmp
push
imul
xor
cmp
jmp
sbb
int3
push
and
dec
and
fidiv
inc
xor
je
test
push
add
dec
or
(bad)
push
and
maxps
aaa
mov
adc
sub
jne
cs
loop
xchg
(bad)
sahf
add
push
add
fild
mov
pop
sub
out
fadd
mov
mov
xchg
and
jne
sbb
inc
aaa
xchg
and
sbb
jae
or
xchg
cld
std
inc
add
jmp
nop
dec
daa
or
adc
add
mov
call
ins
jo
das
inc
jmp
push
xor
inc
jecxz
jb
mov
jmp
mov
aad
add
shl
dec
inc
xchg
pop
sub
nop
jmp
idiv
imul
cmp
xor
cmp
mov
mov
add
loopne
test
xor
or
xchg
dec
and
movs
dec
push
icebp
scas
and
dec
inc
xor
push
das
adc
je
cmp
pusha
dec
add
push
jbe
mov
mov
clc
push
jmp
or
mov
pop
jmp
movs
mov
ds
jmp
scas
pop
or
sub
mov
jno
pop
jecxz
mov
xor
ror
adc
retf
aad
movs
adc
icebp
or
dec
shr
or
pop
xchg
icebp
in
push
call
inc
aaa
xchg
jne
stc
sbb
xlat
pushf
or
repnz
int3
daa
lock
stos
cld
sbb
add
mov
fild
arpl
xor
retf
repnz
test
cli
xchg
in
rcr
jg
mov
test
xlat
imul
aam
pop
inc
lods
pop
cmp
cmovs
push
fistp
sbb
and
cmp
rep
push
or
inc
sub
scas
in
leave
pop
or
add
adc
fnstcw
push
lea
adc
dec
test
dec
das
or
mov
out
push
or
dec
dec
jl
mov
jne
call
add
add
int3
ins
pop
and
mov
fdiv
xor
ficom
sub
sub
add
xchg
(bad)
adc
xchg
or
int
test
jbe
push
mov
push
xor
jl
push
mov
fucomip
ds
les
movs
and
int3
xchg
push
aam
adc
mov
xor
xchg
int
jbe
and
xchg
clc
pop
les
mov
pop
pop
lea
inc
pusha
add
jge
popf
es
dec
(bad)
(bad)
xchg
inc
pop
and
ins
ins
outs
arpl
popa
fdiv
sbb
add
xor
sbb
call
add
or
sbb
aaa
enter
adc
mov
in
add
inc
out
in
scas
or
rol
aad
mov
sub
push
shr
inc
cmp
int3
or
add
xchg
cmp
int
arpl
call
or
gs
shl
inc
or
imul
inc
inc
adc
imul
ret
cmc
push
jmp
jno
push
jmp
popf
mov
push
enter
inc
mov
and
sbb
lods
or
aam
call
lds
sbb
sub
(bad)
int
push
pop
push
dec
adc
out
sub
push
cs
out
lds
pop
pop
xchg
jbe
push
add
fstp
dec
jge
lea
sbb
daa
or
fiadd
pop
pop
or
pop
sar
add
add
jl
inc
or
loopne
sub
adc
rol
sub
jecxz
inc
cs
fimul
add
jnp
dec
mov
sub
add
adc
add
fmul
mov
push
mov
adc
sbb
mov
sbb
in
bnd
dec
add
mov
pop
or
sub
jo
pop
push
mov
adc
adc
(bad)
and
inc
arpl
mov
inc
in
pop
fstp
push
(bad)
cli
mov
dec
call
aam
sbb
call
sub
and
adc
pusha
mov
sub
jb
or
or
(bad)
jg
add
pop
push
jne
sti
jge
jnp
dec
add
rcl
jne
popf
aam
jo
jo
sub
add
mov
inc
jp
mov
and
inc
pop
retf
mov
daa
pop
mov
pop
xor
jp
or
in
xchg
sub
pop
mov
xchg
sub
inc
fadd
jo
arpl
add
cld
mov
add
pop
or
aas
ret
jl
arpl
ret
inc
add
add
or
xchg
jl
pop
pop
mov
pop
icebp
(bad)
and
sbb
adc
mov
dec
add
(bad)
cmc
xor
xor
mov
aad
add
push
mov
div
jbe
sub
fwait
inc
js
or
add
mov
pop
cmp
out
adc
cmp
inc
dec
cmp
lock
push
pop
dec
push
dec
mov
push
nop
mov
(bad)
or
push
(bad)
jl
xor
sub
(bad)
(bad)
push
push
test
fcos
jge
clc
push
dec
cmp
jne
cmp
scas
or
jne
fidivr
inc
stos
sbb
add
push
push
mov
jns
inc
or
xor
aaa
adc
dec
sahf
mov
add
movs
mov
or
and
stos
add
lea
dec
in
jno
xor
sub
xor
cs
pop
in
and
lock
xchg
sbb
xor
xor
rcr
or
nop
mov
mov
inc
or
lea
sbb
rcr
xor
neg
and
je
or
ret
sbb
(bad)
xchg
mov
ja
push
call
in
sub
sbb
lahf
call
fsubr
push
lahf
cs
cmp
dec
dec
pop
leave
sub
add
mov
and
or
adc
push
les
fsubr
or
shl
daa
das
sub
popa
jb
or
test
inc
jb
test
call
imul
jg
(bad)
adc
in
in
mov
add
mov
and
jmp
fist
mov
mov
push
push
cmp
inc
loopne
addr16
inc
fsubr
add
cmp
std
imul
ins
adc
addr16
dec
and
pop
xor
jns
xor
or
nop
sub
xor
pop
xchg
in
rol
int3
jl
nop
in
mov
leave
neg
or
mov
jno
xor
xor
neg
sub
dec
inc
adc
jb
add
jo
call
fs
sbb
push
stos
add
cmp
clc
int3
int3
enter
imul
ret
inc
push
xchg
les
cld
stos
aam
test
mov
sub
int3
xor
arpl
or
add
dec
cmp
ret
cdq
xchg
data16
lea
push
call
push
jo
mov
dec
pop
aam
add
sub
je
pop
xlat
mov
mov
aaa
inc
mov
adc
jge
mov
sbb
sbb
rol
pop
fadd
fs
add
(bad)
in
into
and
mov
in
pop
xor
and
xlat
sbb
sub
jbe
call
comiss
imul
cmp
wbinvd
popf
push
imul
cmp
lods
outs
sti
pop
xor
mov
cmp
mov
stc
or
fwait
push
mov
cdq
mov
xor
xchg
adc
lahf
in
push
in
adc
ror
repnz
push
xor
fucomi
rcpps
jmp
push
jmp
xor
std
xchg
xchg
push
imul
ins
cmp
das
or
daa
fnsave
jno
(bad)
and
jb
adc
and
fistp
adc
jecxz
jno
xchg
mov
mov
in
cmp
inc
xchg
loop
or
or
in
jb
sub
and
cmp
cmp
cmp
add
mov
push
sbb
adc
jnp
imul
dec
or
mov
out
xchg
adc
fstp
dec
sbb
in
cmp
inc
mov
fidivr
add
jb
retf
cmp
and
cmp
sub
push
or
in
pop
ds
pop
pop
stc
ds
dec
sbb
adc
mov
jbe
loop
f2xm1
jne
ror
pop
loopne
loopne
cs
imul
frstor
call
int3
and
ins
in
adc
aas
inc
push
sar
je
mov
inc
or
cmp
adc
leave
mov
jne
int3
or
pop
mov
(bad)
mov
(bad)
fcmovnu
mov
xlat
mov
jb
mov
test
cmp
jns
xor
lods
fs
jmp
or
in
popa
sub
inc
add
inc
sub
inc
inc
push
inc
mov
in
shr
int
test
inc
lea
add
inc
or
or
adc
and
movs
add
mov
mov
inc
mov
fwait
mov
out
das
push
movs
bswap
pushf
imul
out
das
add
xchg
mov
push
rol
aad
cmp
pop
mov
adc
mov
daa
imul
pushf
scas
push
cld
ins
add
inc
sbb
push
fsub
add
xchg
sbb
fadd
push
(bad)
mov
addr16
aad
out
pusha
xchg
lods
aad
das
pop
shr
and
xchg
sub
inc
out
jg
fstp
add
out
movs
cmp
and
dec
mov
inc
jle
inc
test
sub
in
mov
lock
or
mov
inc
stos
(bad)
in
mov
mov
xlat
scas
stos
jae
fwait
pop
int3
in
movs
sub
or
sbb
in
in
(bad)
scas
fsubp
and
test
fwait
ret
xor
jae
out
les
add
call
and
(bad)
and
icebp
fs
test
inc
inc
ins
add
adc
cmp
push
retf
or
pusha
popa
xchg
adc
fadd
and
jns
retf
add
or
leave
and
jnp
pop
push
or
xchg
jbe
repnz
jmp
cdq
mov
pop
or
adc
dec
mov
mov
sti
popa
int3
movs
jge
adc
daa
mov
push
(bad)
xchg
dec
fwait
push
adc
jb
into
lods
sub
sbb
mov
inc
add
imul
or
inc
adc
icebp
pop
push
(bad)
ss
xchg
bound
sub
mov
inc
lea
mov
imul
pop
or
ret
mov
adc
fs
pop
cmp
push
jl
loopne
and
fmul
idiv
cdq
dec
pushf
shl
and
mov
aam
and
cmp
add
loopne
iret
outs
sbb
add
dec
add
add
rol
xor
pminsw
in
dec
pop
and
in
call
inc
pop
bound
and
pop
mov
cmp
stos
sbb
aas
or
or
jae
pavgb
mov
push
sub
jb
fs
push
movs
mov
out
cwde
fs
cld
pop
xchg
nop
jl
and
dec
dec
cwde
push
stc
add
sub
pushf
pushf
and
xchg
push
adc
xor
je
mov
test
inc
scas
add
push
mov
xchg
arpl
push
xor
int3
xchg
cmp
test
xor
std
or
popa
inc
mov
test
inc
inc
xor
shl
in
sub
dec
push
cmp
outs
pop
ret
push
inc
out
call
or
cdq
in
push
les
adc
mov
push
mov
dec
mov
inc
in
in
in
xor
jb
mov
scas
pop
or
adc
add
xchg
and
mov
sub
(bad)
in
and
shl
mov
xor
add
jmp
or
pop
pop
add
fst
cmp
sbb
lods
nop
adc
aam
pusha
out
adc
push
push
adc
push
jo
mov
pop
shr
sbb
shl
mov
call
cdq
and
pop
les
ss
or
fcom
or
movs
push
mov
rcl
enter
cmp
scas
add
pop
in
pop
pop
frstor
mov
cmp
jb
fiadd
leave
xor
ret
neg
mov
pop
jl
add
add
test
les
in
neg
or
add
xor
dec
adc
sub
adc
pop
cmp
pushf
dec
and
pop
push
pop
sub
pop
leave
ins
pop
mov
loopne
inc
nop
popa
mov
js
jmp
or
(bad)
clc
push
mov
sbb
inc
out
std
mov
mov
std
dec
popa
das
test
ss
test
sbb
pop
xchg
pop
xchg
adc
push
imul
ja
or
adc
ret
add
adc
int3
ret
test
sti
inc
adc
loopne
or
dec
out
fdivr
lea
cmp
sub
movs
out
or
bound
(bad)
loopne
adc
or
test
and
cmp
in
inc
gs
jle
fadd
ins
jb
inc
dec
in
call
and
test
push
mov
sbb
sti
test
push
sub
jne
adc
adc
jl
test
sbb
aam
mov
cmp
cmp
and
dec
sub
dec
ins
xchg
ss
enter
test
test
test
addr16
inc
sbb
sbb
adc
push
add
pop
pop
rol
outs
daa
mov
lea
cwde
cs
sub
or
push
mov
rcl
sbb
leave
not
mov
jecxz
sbb
xchg
xchg
push
pushf
inc
push
push
out
outs
daa
dec
movaps
or
add
dec
push
pushf
mov
or
shr
adc
movs
pusha
or
xor
pop
mov
adc
(bad)
mov
mov
pop
test
xor
adc
mov
inc
shl
fsub
mov
xchg
xor
test
inc
and
push
mov
dec
or
es
mov
pop
cmps
loope
cmps
mov
and
cdq
nop
dec
cwde
push
shr
imul
pop
aam
mov
mov
ins
adc
pop
pop
add
push
lods
ss
fwait
aam
add
bswap
mov
rcl
cdq
jne
retf
in
in
(bad)
aam
ins
xor
in
cmp
lods
jno
jnp
and
pusha
cmps
das
and
bound
pop
sbb
xchg
loope
fisubr
mov
and
jno
mov
mov
outs
lock
mov
or
or
(bad)
mov
dec
dec
repz
pop
mov
nop
ins
aad
repnz
mov
sub
jo
and
enter
xor
rol
add
or
sub
adc
imul
jo
mov
jno
xchg
leave
das
imul
sbb
js
push
mov
cwde
jbe
adc
dec
dec
cmps
mov
sub
test
mov
(bad)
push
mov
jne
cmp
fcmovbe
jo
mov
sbb
push
jno
lock
loope
jmp
xchg
push
jae
sti
cmp
xchg
add
and
mov
mov
jne
mov
loopne
xchg
call
mov
(bad)
push
fld
or
xsave
mov
sbb
jnp
pop
addr16
shl
inc
and
je
mov
mov
jne
jnp
mov
pop
and
test
icebp
mov
jbe
and
and
add
addr16
jbe
in
bound
pop
adc
fs
and
popf
jbe
and
rcr
(bad)
in
repz
fld
cmp
ja
enter
cmp
cmp
xor
push
dec
test
test
pushf
pop
and
test
(bad)
in
jb
mov
mov
sbb
es
mov
push
test
adc
pop
lods
stos
test
lea
push
dec
aas
(bad)
loopne
mov
ins
aas
push
dec
es
push
adc
and
dec
ficom
inc
add
mov
or
clc
push
in
cmp
xor
jns
jae
xor
push
cmp
clc
sub
jns
adc
jne
shr
jns
mov
inc
fxch
jp
jecxz
dec
dec
cs
cwde
(bad)
in
sahf
dec
les
jp
add
add
mov
add
dec
xor
fadd
fsubr
dec
xchg
pop
fcomp
adc
xchg
(bad)
jnp
mov
add
jl
mov
sbb
jl
and
mov
pop
loop
es
xor
cmp
dec
adc
pop
clc
and
and
jge
inc
fsub
or
push
inc
pop
call
(bad)
push
push
jge
add
add
je
jge
cs
movs
adc
(bad)
rcr
sbb
jle
call
xor
aaa
in
(bad)
and
sub
cmp
or
push
sbb
jg
cmp
xchg
ret
xchg
pusha
leave
or
test
in
in
in
loop
jg
sbb
cmp
cmp
sub
sub
in
lods
add
test
or
loopne
lea
ret
jne
sbb
mov
pusha
push
aad
sbb
imul
movs
sub
loope
sbb
out
lea
sbb
mov
comiss
push
push
dec
in
and
inc
add
mov
inc
test
aam
ins
sub
call
add
dec
mov
mov
push
test
in
in
add
dec
pop
loopne
fdivr
sub
mov
cmp
push
les
aam
jl
int
loop
cmp
jg
dec
test
call
stc
fsub
stos
inc
mov
data16
xchg
jmp
aam
je
aaa
cmp
stc
push
adc
adc
pop
pop
sbb
in
aam
in
pop
push
sbb
call
cmp
sbb
lods
or
cmp
push
xadd
xor
and
mov
and
in
les
pop
test
in
mov
fadd
pop
int3
test
movs
ins
adc
mov
push
xor
mov
lods
or
pop
jbe
pop
mov
pop
daa
adc
in
mov
shl
mov
mov
xchg
dec
enter
int3
lock
or
dec
dec
call
sub
xchg
mov
in
sar
inc
push
inc
adc
add
inc
sbb
add
mov
add
stos
mov
xchg
mov
int3
in
xchg
cdq
ror
inc
mov
dec
es
lock
aas
and
mov
fild
in
pmulhuw
mov
cmp
test
int3
enter
sub
mov
inc
scas
cwde
sub
aam
loopne
mov
rcl
adc
dec
mov
push
dec
movs
pop
xchg
stos
add
lods
xchg
and
add
test
popa
fdiv
sar
mov
js
lock
and
iret
push
fmul
nop
adc
fdivr
lods
imul
(bad)
add
adc
mov
aas
jno
je
push
mov
test
pushf
add
mov
sub
xchg
sub
cmp
and
sbb
mov
cld
mov
mov
in
adc
dec
mov
fsubr
add
movs
add
and
and
push
adc
cmp
pop
seto
xchg
nop
(bad)
or
cmp
jge
jns
push
icebp
aas
inc
stos
xchg
lods
or
xchg
or
sub
stos
les
xchg
push
pop
push
ins
pop
loop
and
in
pusha
sub
sbb
movs
mov
pop
enter
shl
mov
pop
aad
cmp
cmp
les
xchg
mov
and
jmp
jno
mov
retf
dec
cwde
mov
push
inc
pushf
pushf
test
pushf
inc
not
call
sahf
imul
and
inc
or
fcomp
dec
xor
rcl
xor
mov
jb
xchg
sub
push
mov
test
dec
dec
dec
outs
das
test
sub
pop
je
xchg
jl
call
fucomip
mov
in
lds
mov
xchg
ins
sub
mov
cs
movs
das
mov
(bad)
sub
add
mov
push
pop
ror
pop
into
sub
mov
push
xlat
call
xchg
pusha
xchg
mov
add
(bad)
mov
pop
sbb
and
fist
cmp
xor
push
inc
jns
pop
lahf
add
sbb
push
mov
and
movs
push
je
cwde
pushf
push
test
and
xchg
adc
ins
adc
cdq
and
popf
dec
mov
adc
popf
cdq
lods
xor
or
add
leave
cmc
ror
jmp
pop
leave
mov
test
adc
cmc
rcr
enter
jne
je
lahf
or
fwait
aam
mov
pop
fnstsw
jo
lods
pop
mov
or
mov
aad
shl
add
pushf
movs
sbb
pop
jno
dec
lods
sbb
mov
call
in
dec
mov
mov
or
adc
inc
sbb
rcl
sbb
inc
sbb
fnstcw
mov
pop
adc
popa
dec
cmp
aam
rcl
xchg
int3
std
ffree
std
mov
mov
mov
mov
xchg
jp
fmul
out
add
sub
aas
add
movups
ficom
cmp
pop
jg
xor
jo
mov
dec
das
xchg
mov
loop
mov
push
mov
mov
jno
add
rol
pop
push
sbb
dec
aam
push
mov
push
push
je
pushf
outs
mov
cwde
jecxz
cld
scas
mov
in
push
jecxz
cmps
cs
sbb
and
pop
popf
mov
pusha
mov
push
sti
inc
xchg
cmp
inc
ins
imul
nop
(bad)
fs
gs
or
in
movs
add
or
mov
(bad)
addr16
rdpmc
cwde
in
or
add
imul
inc
sbb
movs
sub
adc
jo
fnstsw
pop
adc
nop
sub
mov
and
int3
adc
and
jb
lods
mov
loopne
sbb
cmps
mov
jmp
sbb
jge
ins
test
push
sbb
cmp
cmps
dec
or
adc
sbb
scas
inc
es
inc
dec
loopne
pop
jmp
push
pop
enter
fcomp
adc
jno
fist
fsub
in
inc
sub
fmul
les
xor
adc
dec
lds
cmp
push
sub
lock
cs
push
xor
hlt
push
xor
push
pop
loope
pop
sub
mov
push
push
sub
lods
push
in
pusha
sbb
test
push
push
or
push
adc
jne
mov
gs
sub
enter
pusha
add
cld
xchg
push
in
adc
cdq
bound
pop
scas
jg
pop
nop
xchg
add
enter
add
cmp
test
fs
dec
push
clc
lods
pushf
mov
rol
scas
and
dec
test
inc
enter
es
(bad)
loopne
pop
inc
mov
or
mov
add
inc
jp
scas
ins
adc
adc
in
pusha
mov
int3
cs
sbb
cmp
mov
pop
or
rol
aad
xor
es
test
in
lock
fadd
ins
mov
addr16
and
mov
and
inc
adc
enter
(bad)
inc
pop
ins
lea
xchg
mov
xchg
test
jecxz
sbb
(bad)
push
mov
call
cmc
enter
and
mov
fs
loopne
adc
or
cmps
add
les
mov
or
sbb
popa
pop
sub
pop
or
mov
cmp
mov
push
adc
add
inc
(bad)
mov
mov
pop
xor
ret
repnz
aaa
cwde
and
mov
ret
add
lods
(bad)
daa
je
and
and
cwde
pop
adc
adc
or
movs
push
mov
cdq
adc
loop
sbb
int3
sbb
not
mov
hlt
(bad)
xor
lea
mov
out
sar
lock
lock
psrld
stos
inc
or
xor
invd
push
add
bound
inc
int3
retf
mov
mov
fistp
or
dec
shl
nop
sub
shr
in
push
add
enter
push
movs
mov
dec
lock
mov
cmp
adc
fist
test
sub
xor
movs
adc
or
sub
les
out
jmp
inc
jnp
nop
push
rcl
sub
mov
dec
aam
nop
mov
mov
cdq
loope
shl
cmp
(bad)
(bad)
push
xchg
xchg
mov
lods
in
pop
jg
ins
adc
not
inc
mov
fiadd
adc
dec
(bad)
jg
mov
and
pop
rol
imul
pop
xchg
or
mov
das
dec
mov
mov
push
ins
adc
add
ins
cwde
pop
cmp
push
pop
mov
ficomp
dec
enter
mov
cmp
mov
add
mov
jo
mov
(bad)
ja
xor
(bad)
in
int3
dec
jb
sub
xor
mov
scas
or
dec
adc
mov
shl
shl
mov
add
je
fcom
mov
jmp
shl
push
fdivr
and
and
push
push
dec
rol
mov
lods
xchg
dec
add
clc
ret
stos
dec
scas
jmp
mov
fild
stos
and
mov
rcl
or
adc
pop
daa
xor
or
aas
aaa
xor
add
xchg
mov
pusha
inc
lods
dec
lods
lds
nop
xchg
rol
in
loop
xchg
add
adc
jecxz
push
and
adc
mov
pop
add
les
adc
das
adc
fadd
push
lds
leave
add
sub
and
inc
test
mov
shl
pop
dec
leave
push
sub
rol
adc
push
mov
(bad)
rol
sub
adc
jne
and
aad
je
ret
pop
aad
cli
rcl
and
sbb
xabort
add
push
int3
addr16
rol
mov
mov
pop
in
fistp
jne
bswap
int3
shl
outs
ret
pop
and
inc
add
mov
test
mov
mov
rol
nop
fs
xchg
mov
or
xor
jae
das
lds
or
mov
sub
cmp
jmp
mov
rol
ins
leave
in
dec
(bad)
lock
je
sub
jne
scas
mov
dec
(bad)
aam
retf
int3
pop
imul
pop
sub
aaa
and
lea
mov
repz
clc
dec
retf
rol
cmp
fs
popa
das
in
in
stc
lea
imul
pop
adc
ror
jns
cli
adc
es
push
clc
fs
inc
mov
ins
repnz
repz
icebp
xchg
pushf
movs
lods
sbb
enter
pop
push
cmp
nop
xchg
dec
jb
jo
not
cli
adc
ins
shl
leave
and
pusha
push
xor
cmp
and
stc
shl
sbb
inc
inc
enter
mov
xor
xor
cmp
movs
fdivr
add
or
inc
das
sub
jne
jns
repz
xor
dec
int3
or
aam
and
mov
push
ja
sbb
mov
lods
gs
sub
mov
popa
stos
and
sbb
fs
mov
lea
mov
repnz
aaa
enter
jo
addr16
das
imul
aam
pop
test
mov
pop
cld
(bad)
jbe
sbb
mov
and
rcr
push
jno
bsf
pop
mov
in
fimul
gs
xor
stos
push
or
int
fs
mov
add
push
sar
das
js
mov
arpl
inc
fiadd
(bad)
pop
jb
adc
in
inc
outs
(bad)
int3
xchg
sbb
xchg
mov
cmp
mov
lods
lods
test
mov
fdiv
dec
call
jb
fldenv
shl
inc
push
mov
pop
push
shr
rol
dec
(bad)
int
adc
dec
shl
les
aad
cmps
lea
mov
int
ret
or
dec
pop
enter
inc
call
push
or
inc
daa
test
add
and
and
in
or
aad
jl
pop
mov
loopne
test
mov
lock
jg
adc
jae
jge
psrlq
jne
repz
call
dec
ror
pusha
in
pop
xor
pop
xor
xor
fsubr
or
and
(bad)
hlt
js
push
mov
mov
inc
daa
xchg
test
xchg
sub
sub
es
movs
fwait
push
std
std
std
xchg
fs
dec
std
(bad)
adc
test
sub
xchg
dec
es
sti
std
cld
es
fs
push
enter
fidiv
(bad)
ins
xchg
dec
dec
xor
sub
enter
and
leave
and
es
push
adc
mov
adc
dec
pushf
add
cwde
and
push
call
dec
adc
popa
leave
and
pop
mov
xchg
xchg
shr
pop
ret
or
xchg
fs
sub
adc
cmp
cmc
es
push
dec
ja
or
push
jl
adc
pop
inc
in
pop
xchg
sbb
clc
add
bound
(bad)
sub
repz
or
sbb
std
xchg
ret
or
cmp
pop
fnstcw
rcr
nop
cwde
test
mov
mov
mov
sbb
test
dec
sbb
shl
xor
cmp
push
cmp
test
jne
jge
dec
pop
call
ror
shl
pop
xor
add
fstp
add
cmp
lea
mov
mov
inc
test
mov
call
adc
fwait
dec
push
cmp
xchg
mov
dec
in
enter
mov
xor
and
add
or
ficomp
xor
enter
fisttp
pusha
push
push
and
loopne
add
sbb
mov
mov
mov
(bad)
fmul
lds
and
sbb
rol
loop
mov
xor
fadd
cmp
xor
js
loopne
in
inc
mov
fs
mov
inc
test
xor
daa
rcr
and
int
xchg
or
xor
ds
outs
in
xor
add
jo
xchg
rcr
or
mov
or
adc
and
dec
lods
sub
test
arpl
imul
fwait
in
push
jecxz
cli
jecxz
movs
adc
jns
movs
add
push
xor
dec
sbb
in
out
in
add
xchg
jno
jno
pusha
add
or
cmp
fs
add
or
enter
in
add
push
sbb
push
ins
enter
jo
or
jmp
addps
or
repz
lods
or
and
ja
sub
xchg
jmp
jmp
dec
pop
lock
sti
and
xchg
push
in
and
push
lods
adc
stos
lods
xor
mov
cmp
cmp
inc
ins
push
or
fist
sub
sub
push
fucomp
xchg
in
nop
sub
lds
(bad)
aad
or
sbb
sbb
xchg
loope
adc
mov
dec
dec
in
or
popf
sub
aam
pop
mov
ins
(bad)
mov
imul
push
add
in
mov
xchg
lods
push
aas
gs
(bad)
adc
dec
and
in
cmp
add
sbb
aam
std
test
mov
mov
adc
out
push
ins
out
sar
add
xchg
pop
sbb
inc
push
add
xchg
mov
sub
dec
xchg
sti
enter
push
push
fimul
loope
mov
nop
addr16
mov
or
jnp
aam
xchg
cmp
add
repz
add
test
aam
jo
ret
imul
adc
test
out
test
jne
fadd
add
mov
es
sbb
xor
addr16
and
adc
rcl
int3
xor
and
dec
mov
push
mov
icebp
mov
and
inc
int3
in
cmp
xor
aam
and
rol
dec
popa
lock
repnz
push
pop
xchg
add
jns
adc
and
xchg
scas
ret
jo
mov
inc
push
xchg
and
mov
mov
repz
add
cdq
mov
cmp
das
repz
cs
xchg
int
inc
mov
addr16
test
and
fwait
and
cmp
call
dec
repz
out
xor
cmp
cmp
cmps
bound
hlt
in
pop
outs
or
(bad)
mov
imul
inc
fisub
aad
fs
adc
rol
and
or
jno
adc
add
mov
nop
and
xchg
dec
mov
lods
or
or
cmc
loopne
imul
test
div
or
adc
pop
inc
pop
les
or
nop
pop
test
cdq
push
dec
mov
stos
es
lods
lahf
and
add
not
(bad)
cld
dec
add
jns
cld
cld
mov
mov
xchg
je
movs
sbb
mov
jecxz
int3
jg
add
push
lods
or
cld
push
mov
jae
test
into
cmc
jne
mov
popa
dec
pop
and
pop
adc
dec
xor
inc
lods
mov
arpl
sub
dec
call
ret
mov
in
push
sbb
mov
pop
ror
mov
sbb
jecxz
push
or
imul
lds
sub
add
sbb
(bad)
ss
outs
das
aas
das
nop
popa
sbb
add
js
xchg
fsubr
int3
add
retf
add
jecxz
mov
test
enter
stos
sub
popf
cmp
repnz
fld
sbb
les
adc
retf
mov
cmps
test
cs
(bad)
iret
pop
push
int3
dec
rol
sbb
inc
or
ins
aad
cmp
mov
arpl
in
mov
add
idiv
inc
lahf
shl
les
fadd
shr
and
jo
pop
mov
push
js
cmp
aas
mov
or
in
iret
test
mov
pop
fdiv
push
add
fcom
sbb
mov
iretw
push
pop
mov
mov
hlt
mov
cmp
dec
call
call
and
or
in
inc
inc
jmp
mov
add
adc
add
push
rcl
sub
jl
movs
sbb
fs
int
dec
mov
retf
ins
test
adc
jb
sbb
(bad)
fiadd
inc
test
(bad)
xchg
inc
mov
test
add
xor
int3
pop
fs
xchg
test
or
outs
sbb
pop
xchg
cwde
pop
mov
jo
xchg
(bad)
int3
jno
jb
arpl
add
xchg
dec
enter
(bad)
rcr
or
push
ins
sbb
fcomp
inc
dec
rcl
test
imul
arpl
shr
imul
iret
jo
mov
sub
icebp
add
inc
lods
jmp
movs
cmp
mov
xor
dec
les
lea
xor
xor
test
std
imul
adc
jg
push
lea
mov
lock
mov
jne
ins
xor
pop
xor
sbb
add
leave
xor
sbb
dec
add
jle
sub
push
jo
movzx
dec
jb
add
mov
dec
hlt
cwde
sbb
(bad)
les
cmps
adc
add
lods
stos
fcom
or
cdq
test
sub
pop
push
movs
pop
dec
or
pop
mov
jns
adc
in
pop
or
dec
xchg
mov
inc
mov
xchg
jb
imul
(bad)
loopne
xor
jmp
out
sub
adc
cmc
jns
push
lea
inc
adc
sub
and
dec
ficom
cs
in
mov
in
pop
dec
pushf
shl
sbb
call
imul
push
ret
xchg
dec
and
jl
shl
nop
outs
push
mov
aas
fsubp
or
shl
xchg
or
pop
pop
dec
pop
leave
jl
data16
bound
inc
mov
aas
pop
dec
call
pop
jb
lahf
int3
je
inc
enter
(bad)
clc
repnz
sbb
rcl
and
daa
fcom
jmp
inc
cmp
loopne
arpl
pushf
mov
(bad)
push
inc
ins
and
shl
dec
pop
mov
xchg
dec
xchg
or
cs
dec
lds
or
mov
dec
out
mov
adc
push
cmp
push
and
fcom
loopne
or
shr
mov
push
sub
in
and
adc
in
sub
aam
and
mov
aad
cmp
push
jb
rcr
mov
rcr
sub
imul
and
sbb
outs
dec
aam
cmp
les
jae
aaa
movs
paddsb
push
or
adc
push
mov
cdq
inc
bound
add
or
sbb
xchg
dec
cmps
jge
sub
inc
dec
xor
adc
cdq
fs
in
fmul
mov
lods
pushf
mov
dec
es
and
nop
mov
cmp
out
test
or
aaa
cmp
xchg
pop
xchg
cmp
lock
jg
add
add
lds
mov
cmps
inc
clc
call
and
pop
jg
and
inc
dec
(bad)
adc
pop
enter
push
je
inc
mov
or
cmp
adc
fs
jb
stos
pop
push
mov
les
jne
ins
mov
adc
bound
out
inc
mov
movs
in
mov
seto
adc
cmp
fwait
add
push
imul
mov
mov
fisttp
mov
and
push
mov
adc
jo
inc
out
fist
pusha
sub
mov
lahf
loopne
pop
call
les
xchg
xchg
cwde
add
scas
outs
(bad)
sbb
pop
aam
mov
cmp
or
xchg
pop
popa
imul
sar
je
xchg
and
add
cld
fistp
stos
popf
jl
sbb
inc
pop
es
push
pusha
pop
sub
fs
fild
sub
sub
mov
pop
inc
nop
jg
rol
sub
imul
outs
lods
pop
push
mov
inc
sbb
jg
in
test
lahf
mov
dec
mov
call
clc
fild
sbb
or
add
xor
pop
ss
mov
nop
cmps
call
mov
(bad)
mov
dec
jb
sub
leave
and
call
jle
call
xchg
mov
nop
add
mov
loope
je
fmul
jg
or
nop
hlt
inc
in
mov
enter
enter
or
inc
enter
retf
mov
sbb
or
fsubr
and
mov
mov
push
and
imul
xor
push
enter
or
inc
aas
call
imul
aam
add
cwde
sub
(bad)
pop
lds
pop
ins
bound
mov
addr16
test
in
imul
mov
enter
mov
test
adc
xor
pop
test
in
call
mov
or
and
inc
nop
xchg
mov
pop
in
in
inc
pop
mov
push
outs
popf
and
in
jle
fsub
mov
xchg
in
pop
and
or
adc
in
and
or
popf
sbb
leave
push
jl
and
pop
pop
in
pop
scas
or
lea
fbstp
aad
add
fadd
or
pop
in
jns
or
xor
repnz
or
fbld
lahf
test
and
call
movs
sbb
sub
and
enter
fdiv
add
push
add
push
mov
and
stos
inc
das
rol
test
lea
xchg
adc
(bad)
nop
push
inc
mov
je
loope
adc
push
pop
and
fist
add
pop
pop
int3
lahf
xchg
and
and
movs
movs
nop
mov
pusha
jo
add
xor
clc
jb
stc
inc
pop
or
add
add
sbb
daa
add
cmp
in
sub
pop
sbb
clc
mov
shr
lods
add
fist
sbb
pop
repnz
enter
inc
lock
je
cld
mov
jg
pop
shl
sub
pop
push
push
inc
test
test
xor
stos
(bad)
daa
pop
fist
xor
adc
sbb
xor
inc
rcl
push
pusha
mov
inc
cmp
jmp
sub
rol
sar
push
adc
sub
pop
pop
xchg
and
and
sbb
sub
sub
inc
fimul
inc
mov
ror
sar
in
(bad)
inc
xchg
sbb
and
call
mov
scas
retf
test
sbb
sbb
adc
adc
and
icebp
sub
fs
cmp
cmp
push
lods
movs
cmp
add
pop
push
or
(bad)
popa
xor
push
mov
cmps
imul
push
sub
sub
fwait
push
loopne
push
dec
sahf
cdq
add
dec
mov
ja
dec
cmp
xor
enter
push
cmp
lahf
lahf
sub
push
pop
mov
mov
stos
cmp
aas
int3
inc
push
nop
in
push
push
stos
xchg
stos
stc
sub
push
pop
loopne
dec
sub
or
push
nop
xchg
or
cs
call
mov
lock
push
sub
pop
fcomp
aas
sub
pusha
mov
add
pop
xchg
sbb
inc
aas
or
xchg
das
movs
aas
in
sub
loope
pop
xor
add
test
mov
xor
test
xor
push
xor
dec
aad
aam
add
push
push
push
xor
test
xor
inc
mov
(bad)
add
scas
pop
xor
lods
and
and
sbb
jg
or
ret
sbb
fistp
loopne
add
pushf
or
in
or
lahf
pop
add
and
sbb
add
xchg
and
pop
dec
or
cmp
pop
movs
or
nop
xor
xchg
aaa
push
cwde
push
mov
in
or
clc
pop
(bad)
mov
push
cmp
ret
add
(bad)
dec
sbb
loopne
push
dec
out
retf
pop
fcmovnbe
mov
add
mov
les
hlt
ins
shl
or
or
mov
xor
mov
fstp
xor
leave
push
push
push
xor
jo
sbb
test
dec
in
cmp
sbb
pushf
xor
dec
or
mov
sbb
xor
add
inc
mov
push
pop
pop
or
mov
gs
enter
dec
sti
add
mov
dec
(bad)
xchg
pop
ss
call
fsub
ret
stos
mov
lock
add
dec
mov
and
push
add
fs
sbb
jo
pop
aaa
sbb
push
push
sub
sbb
aaa
cmp
mov
xchg
cwde
mov
aaa
sub
ss
lock
pop
scas
cmp
inc
rol
stos
mov
arpl
and
cmp
add
pop
jmp
sbb
xor
inc
or
repnz
je
add
mov
scas
and
push
rdpmc
stc
mov
rol
sub
call
add
adc
dec
inc
inc
daa
test
pop
repnz
push
movs
dec
dec
repnz
push
les
clc
jb
push
mov
xchg
fisub
xchg
sbb
mov
scas
popf
and
ds
jb
and
pop
rcl
pop
sub
xor
xor
sub
nop
sub
or
dec
xchg
push
pushaw
jo
sbb
add
and
pop
cmp
add
sbb
dec
push
jg
pop
movs
sar
cwde
sti
dec
push
mov
stos
mov
fisub
rol
js
xor
ret
and
cmp
lods
add
(bad)
cmp
aam
inc
cmp
aaa
mov
(bad)
out
cmps
leave
adc
sub
cmp
xchg
xor
inc
shr
shl
mov
sbb
cmp
test
mov
call
(bad)
sub
cmp
xchg
sbb
jl
inc
cmp
je
inc
cs
mov
in
cs
jg
fimul
xor
push
mov
cwde
push
mov
pusha
mov
(bad)
dec
push
push
or
bnd
loopne
stc
js
cld
jb
imul
pop
sbb
jbe
scas
clc
and
mov
mov
in
push
les
xchg
or
cmp
adc
and
dec
in
jae
pop
sub
push
pop
push
pop
and
dec
jbe
call
enter
push
add
sub
mov
inc
shr
xor
je
push
aas
jo
and
je
pop
or
retf
push
mov
xchg
arpl
test
mov
cmp
xor
retf
mov
pushf
xchg
mov
add
nop
mov
xor
lock
jecxz
es
xchg
sbb
adc
and
jb
dec
mov
cmps
lods
fild
lahf
xor
push
add
jl
and
aas
nop
adc
mov
out
and
cli
and
mov
adc
jl
ss
add
movs
xor
push
scas
aas
test
mov
sub
sub
or
inc
sub
xor
cmp
test
sub
sub
inc
cmp
retf
cdq
inc
dec
push
test
dec
pusha
push
je
movs
xor
pop
(bad)
xchg
push
pop
mov
repnz
jmp
and
out
or
and
or
cmp
stos
dec
dec
repz
in
mov
lock
xor
jg
push
mov
adc
pop
adc
mov
adc
inc
ja
aas
movs
push
lds
and
mov
(bad)
shl
jg
repnz
push
inc
jmp
mov
pop
push
nop
mov
loopne
mov
dec
dec
jmp
or
clc
mov
sbb
nop
jae
xchg
push
mov
cmp
push
pop
test
cld
rol
cwde
imul
aas
mov
lock
leave
add
dec
ds
adc
cmps
sbb
shr
out
pop
pop
xor
add
pusha
adc
popf
sti
jmp
popf
jg
test
or
pop
and
sub
out
cld
fnsave
lahf
adc
fdiv
jae
arpl
lods
mov
call
or
adc
test
add
and
sbb
or
inc
sub
and
sub
adc
cdq
je
mov
cwde
xor
sub
or
sub
gs
lock
or
dec
sub
adc
push
adc
cdq
inc
sub
push
cmps
nop
retf
push
pusha
sub
dec
and
add
or
nop
in
je
out
push
enter
rcl
pop
dec
pop
sahf
or
pop
out
pushf
call
(bad)
adc
jb
dec
sti
sub
int3
dec
xor
xlat
cs
ret
dec
sbb
xor
pop
sub
mov
stc
in
cmp
test
mov
stos
jmp
sahf
cli
cmp
addr16
adc
je
lock
cmp
fdiv
movs
movs
ja
lahf
inc
mov
adc
push
cmp
nop
and
dec
pusha
enter
mov
mov
movs
repz
jno
mov
cwde
sbb
adc
into
addr16
xchg
cmp
push
cmp
shl
mov
nop
jl
nop
inc
push
je
mov
xchg
movs
inc
push
cmp
cwde
test
retf
es
shr
fsub
(bad)
adc
adc
cmp
xchg
adc
in
aad
in
add
or
adc
into
movs
icebp
jbe
pop
out
sti
movs
rcr
inc
enter
loopne
jge
cmp
xor
ss
fneni(8087
sbb
mov
clc
jecxz
lea
sub
mov
and
pusha
mov
inc
xor
mov
adc
mov
jmp
out
or
mov
aas
adc
(bad)
fadd
adc
fadd
int
or
pusha
push
push
in
or
mov
arpl
mov
sbb
ds
enter
jnp
int3
test
lahf
inc
out
add
stc
mov
sbb
and
push
pushf
ds
adc
jo
push
mov
out
mov
mov
rcl
mov
jns
and
nop
sar
cmp
xchg
add
xchg
mov
push
lea
sahf
out
repz
mov
jns
mov
sahf
mul
xchg
nop
push
mov
lock
adc
cmp
xor
ds
xchg
repz
repz
xchg
xchg
xchg
xchg
iret
repz
xchg
xchg
xchg
xchg
xchg
xchg
cmp
repz
xchg
xchg
xchg
xchg
fnstcw
repz
xchg
and
push
mov
sahf
out
xchg
cmps
mov
sahf
jmp
inc
push
cmp
repz
sbb
repz
xchg
dec
out
sahf
out
jnp
mov
iret
mov
sahf
(bad)
(bad)
mov
pop
sub
repz
push
imul
lods
ret
(bad)
mov
out
sahf
out
ss
bound
out
sahf
mov
cmp
rep
mov
jns
int
mov
pusha
mov
sahf
out
mov
iret
loop
iret
and
xchg
(bad)
sahf
out
sahf
add
inc
pusha
and
loopne
and
iret
repz
xchg
xchg
xchg
(bad)
cmp
xchg
cmps
add
fisub
or
xor
or
cs
mov
sub
shl
aas
neg
jg
dec
or
loopne
push
cwde
mov
shl
inc
add
ins
push
je
dec
add
jae
iret
add
push
jbe
inc
jb
arpl
mov
jnp
xor
popa
jbe
inc
push
xor
push
bound
and
out
sbb
jmp
(bad)
repz
add
cld
in
ror
add
adc
lock
dec
xchg
jnp
neg
push
adc
add
push
dec
into
sbb
daa
cmp
pop
es
addr16
loopne
or
and
fwait
jae
push
sub
mov
sar
add
sub
loopne
out
dec
dec
arpl
push
data16
push
out
mov
jne
and
je
fs
jnp
pop
jno
hlt
add
outs
push
into
pop
outs
jp
fistp
ins
aas
gs
js
je
imul
addr16
adc
test
or
push
std
(bad)
(bad)
aas
aas
cmp
outs
addr16
ins
and
ins
gs
sub
sub
arpl
loope
sub
data16
push
imul
jne
and
xor
push
inc
pop
pusha
ins
ins
data16
arpl
sbb
xlat
std
arpl
je
push
or
adc
ret
ja
and
or
push
xor
and
das
ficomp
out
ins
outs
arpl
xchg
imul
push
sbb
mov
lock
sbb
xchg
and
inc
and
jne
and
addr16
ins
jbe
add
neg
sar
or
je
sbb
outs
aas
out
out
lds
gs
cmp
aaa
loopne
out
mov
fs
(bad)
push
mul
sbb
push
jnp
arpl
dec
xchg
sub
sar
xchg
xchg
mov
retf
push
add
xchg
bound
imul
dec
pop
push
sub
xor
scas
jbe
and
push
out
jnp
and
mov
call
bound
scas
or
add
add
je
dec
mov
stc
js
dec
outs
data16
sub
out
ret
fwait
xchg
sub
bound
xor
inc
iret
ins
dec
cs
mov
inc
sub
aas
jle
neg
add
idiv
and
sti
clc
lock
mov
mov
clc
pop
aas
outs
ins
xchg
inc
mov
add
arpl
outs
imul
arpl
jl
or
jo
pop
fidivr
push
dec
addr16
in
js
jg
inc
xchg
ins
add
inc
sub
dec
inc
retf
imul
jg
ret
loopne
jmp
fs
out
push
outs
dec
ja
jo
pusha
sar
pop
pop
nop
adc
add
mov
push
iret
cmp
outs
mov
jl
jl
fisubr
mov
shl
pop
jmp
scas
ins
push
adc
out
sub
pop
stos
mov
inc
ins
mov
or
aas
scas
out
scas
xor
or
and
push
je
daa
dec
scas
imul
ss
add
sub
push
jp
ins
retf
sub
dec
push
pop
push
pushf
jnp
(bad)
push
jbe
arpl
cmp
and
and
sbb
call
(bad)
outs
jbe
ins
imul
arpl
jo
push
mov
and
stos
bound
xchg
lock
inc
pop
jne
daa
stos
jmp
pop
stos
adc
and
pop
sub
rcl
add
call
fbld
clc
inc
sub
pop
pop
inc
test
inc
dec
mov
mov
fmul
leave
les
inc
dec
add
out
sub
pop
mov
sub
sbb
lahf
pop
stos
jno
and
push
movs
push
xchg
or
add
test
fist
sub
mov
add
mov
push
ror
mov
(bad)
push
ret
jo
ror
sbb
sbb
and
xor
lods
js
into
arpl
sub
and
cs
push
aas
ins
and
sti
jb
lahf
xor
pop
movs
xor
je
jp
or
jmp
jecxz
pop
into
(bad)
ja
xchg
push
ret
push
mov
mov
xor
push
pop
fisubr
imul
aas
pop
jae
xchg
or
clc
div
add
imul
push
pop
jne
jo
jb
jae
popa
arpl
lock
pop
stc
jo
outs
arpl
outs
ins
outs
ja
shl
adc
stc
mov
repz
ins
push
bound
imul
push
pop
outs
jne
cmps
ret
and
push
pop
add
retf
sbb
adc
add
and
add
add
ret
pop
ret
add
xlat
loopne
cmp
outs
sbb
mov
add
add
add
inc
push
push
ret
xchg
inc
pop
sub
ds
xor
ins
mov
push
fdiv
or
fnstcw
cmp
sbb
ror
push
inc
push
push
inc
pop
inc
gs
inc
loopne
mov
jae
gs
ret
xor
inc
and
out
jae
(bad)
(bad)
rcl
or
inc
inc
dec
inc
push
bound
std
jnp
jg
and
jb
and
pop
inc
jne
adc
popa
jb
gs
inc
lds
dec
outs
fs
push
mov
fldcw
and
imul
push
push
mov
jb
inc
outs
lods
outs
ins
push
mov
mov
call
inc
mov
jns
inc
dec
pop
xchg
outs
gs
xor
adc
(bad)
fs
or
fs
pusha
mov
mov
jbe
mov
outs
push
dec
ja
stos
outs
out
mov
dec
inc
dec
push
push
pop
jae
ins
pop
fs
pop
lock
mov
push
xor
mov
data16
dec
ds
or
dec
mov
mov
rol
push
inc
jo
mov
and
dec
ds
popa
rol
ja
gs
js
mov
imul
popa
ins
gs
shr
aam
js
bound
push
fs
neg
fimul
xchg
pop
push
jmp
adc
fwait
mov
or
popa
or
jg
aaa
lock
or
test
mov
push
mov
jmp
dec
popa
push
push
dec
add
iret
adc
pop
stos
add
and
bound
push
pushf
jb
pop
repz
sub
pop
dec
out
add
outs
pop
pop
ja
pop
aas
popa
and
jmp
jae
ds
inc
xor
cmps
pop
add
lsl
arpl
dec
mov
mov
fiadd
lahf
lock
inc
xchg
pop
test
ins
daa
fistp
push
dec
dec
imul
cmp
cmp
retf
inc
retf
push
mov
mov
adc
xchg
pop
(bad)
imul
dec
pop
push
mov
ja
outs
imul
out
dec
lahf
aaa
mov
ds
sbb
mov
cmps
dec
pop
loopne
add
sub
adc
loopne
js
outs
xor
out
push
outs
outs
je
inc
dec
dec
push
push
inc
loopne
push
and
add
cs
and
jle
adc
dec
dec
push
adc
inc
push
and
outs
test
(bad)
not
jb
dec
dec
dec
and
and
daa
jae
ficom
sbb
or
int
mov
jg
outs
arpl
cmp
sub
adc
ins
jne
sub
sbb
je
ret
rcr
push
das
xchg
aad
sbb
push
mov
fwait
cmp
push
sar
push
int3
and
pop
add
push
mov
push
add
adc
sbb
sbb
inc
es
cs
ror
mov
dec
xor
pop
push
cmp
call
inc
push
sbb
push
pop
add
mov
dec
dec
pop
inc
and
push
pop
ins
or
jg
push
push
sbb
jl
das
outs
sub
ins
jae
sbb
outs
dec
xlat
scas
jnp
inc
and
ss
ins
sbb
push
arpl
or
aaa
or
pop
push
pop
pop
bound
cmp
gs
add
inc
bound
sbb
sahf
xchg
data16
or
xor
popa
fs
lods
stos
ret
mov
ins
popa
jns
neg
mov
fidiv
mov
mov
pop
loopne
outs
ja
stos
les
ja
pop
aam
pushw
lods
dec
jb
ins
ins
inc
mov
jg
daa
fisub
inc
sub
push
gs
pop
outs
jo
sub
popa
mov
or
jns
es
inc
and
imul
mov
ja
xor
test
pop
mov
sub
ins
cmp
push
enter
fsub
jbe
jae
ins
dec
or
push
outs
push
dec
and
inc
inc
inc
mov
inc
pop
xor
add
xchg
push
sbb
push
push
sbb
mov
daa
push
mov
(bad)
fbld
inc
inc
gs
jb
jp
xor
fadd
pop
fsubr
sub
push
(bad)
push
imul
jbe
outs
ss
push
mov
push
sti
and
imul
xor
or
js
repz
inc
pusha
hlt
xchg
push
inc
pop
nop
pop
es
pop
js
push
push
loopne
push
inc
pop
cmp
dec
imul
dec
pop
add
je
inc
test
mov
mov
stc
daa
xchg
lea
pop
or
cs
xor
xor
int3
loop
(bad)
xchg
imul
add
fidiv
dec
inc
ficomp
adc
xchg
outs
sbb
data16
sbb
(bad)
jmp
cli
pop
loop
sar
add
push
mov
push
add
hlt
mov
gs
inc
push
(bad)
pop
lods
mov
sbb
aaa
push
ins
xor
jmp
out
loopne
add
dec
dec
arpl
mov
(bad)
dec
ret
outs
push
idiv
jp
pop
pop
sbb
mov
inc
mov
pop
mov
aaa
xor
out
add
in
push
add
inc
aaa
mov
ret
jne
inc
jnp
and
mov
js
mov
adc
test
mov
push
cmp
cwde
fidivr
pop
es
aaa
push
mov
jbe
arpl
imul
lods
inc
push
dec
and
shl
and
cmp
(bad)
mov
fs
(bad)
mul
pop
outs
jbe
sub
(bad)
(bad)
inc
repnz
add
(bad)
xlat
stos
jbe
or
cli
pop
inc
lock
aam
(bad)
(bad)
jmp
shl
test
jno
xor
sbb
jmp
clc
and
daa
mov
sub
sbb
mov
(bad)
call
mov
jecxz
test
add
and
mov
push
mov
iret
shr
stos
sti
inc
dec
xor
(bad)
inc
jg
cmp
test
mov
cmp
mov
push
ror
or
in
pop
xchg
inc
pop
les
jle
fs
sbb
or
inc
out
mov
fneni(8087
xor
or
and
ret
sar
lods
bound
enter
aad
test
(bad)
scas
or
jmp
(bad)
call
mov
dec
(bad)
(bad)
(bad)
inc
test
xor
sbb
adc
mov
push
sub
mov
(bad)
(bad)
jmp
inc
push
mov
mov
aad
movs
cmp
repz
sti
jl
cmp
jmp
inc
(bad)
fsubrp
retf
push
jnp
xor
dec
xchg
or
ret
dec
or
mov
(bad)
(bad)
fldenv
jbe
mov
and
xchg
push
aam
pop
int3
pop
gs
ins
jo
push
std
(bad)
(bad)
(bad)
(bad)
in
mov
push
cmps
lea
add
pop
add
shr
(bad)
(bad)
(bad)
aas
lar
scas
mov
imul
adc
addr16
xchg
repnz
into
lock
jae
lods
je
out
(bad)
(bad)
jmp
aaa
call
inc
icebp
sbb
sub
mov
bound
stos
sbb
dec
mov
and
int
hlt
pop
(bad)
xor
adc
jg
sbb
jp
xchg
leave
pushf
out
mov
lock
sub
mov
jmp
push
cdq
popa
push
adc
call
sub
mov
imul
(bad)
jns
out
arpl
jl
jnp
out
sahf
out
outs
lds
add
sub
xlat
stos
jbe
sahf
out
retf
jge
out
sahf
out
inc
lock
aam
out
sahf
mov
sar
jns
std
xchg
es
sahf
out
test
jns
in
jno
xor
add
and
sbb
jns
out
add
out
sahf
and
daa
mov
jns
out
or
jns
out
pop
mov
jns
(bad)
mov
jecxz
das
iret
cmp
test
in
push
and
cmp
repz
pop
push
mov
cmp
pop
iret
iret
repz
shr
stos
sti
inc
dec
cmp
repz
test
add
cmp
repz
cmp
test
repz
push
mov
cmp
repz
cmc
mov
iret
repz
push
ror
repz
int
adc
pop
xchg
cmp
repz
pop
les
repz
iret
repz
pusha
or
repz
mov
mov
adc
pop
or
iret
repz
loopne
cmp
dec
push
cmp
repz
pop
ret
repz
repz
repz
out
aaa
ins
(bad)
aad
iret
repz
test
cmp
repz
cmp
mov
cmps
cmp
repz
(bad)
call
iret
repz
dec
mov
cmp
jo
mov
dec
add
repz
push
popa
xor
repz
iret
repz
loope
cwde
adc
cmp
repz
xchg
fwait
push
xchg
cmp
repz
iret
repz
mov
cmp
push
iret
repz
cmpxchg
add
test
and
push
out
or
xor
push
xor
movs
cmp
mov
dec
shl
xlat
sti
jl
dec
shl
inc
xor
inc
inc
(bad)
shl
push
jnp
shl
and
out
dec
xchg
or
xor
sar
ret
dec
or
dec
shl
and
xor
shl
pop
mov
dec
ror
dec
shl
cwde
push
xor
shl
movs
pop
int3
pop
shl
ins
jo
imul
in
mov
ficomp
inc
push
cmps
imul
push
mov
mov
shl
in
add
shl
dec
shl
lar
mov
dec
rcl
mov
xchg
dec
shl
fsubr
xor
shl
repnz
into
lock
xchg
lods
dec
shl
xor
loop
aaa
push
call
call
imul
imul
imul
cmps
imul
imul
imul
cmps
imul
cmps
imul
push
push
jg
shl
or
xor
jp
xchg
leave
shl
dec
rcr
call
mov
cmps
imul
imul
cmps
imul
imul
repnz
sub
(bad)
(bad)
jmp
clc
jl
test
ja
cdq
idiv
(bad)
push
repnz
cld
jmp
fisubr
mov
vandpd
xor
(bad)
(bad)
(bad)
jg
into
addr16
out
(bad)
sbb
stos
stos
out
jbe
call
(bad)
(bad)
(bad)
inc
inc
cli
jge
xchg
cli
cli
adc
mov
leave
sti
lock
lods
in
mov
(bad)
(bad)
(bad)
call
addr16
mov
scas
jmp
movs
mul
jb
xchg
fwait
rol
jne
mov
loope
(bad)
(bad)
(bad)
(bad)
std
sbb
xchg
xchg
scas
dec
es
ss
jle
aas
inc
cmc
div
add
xor
pop
push
movs
(bad)
(bad)
(bad)
jmp
xor
icebp
icebp
or
jno
xchg
stos
fcomp
jae
xor
push
sub
add
xchg
(bad)
(bad)
(bad)
(bad)
inc
push
inc
and
gs
ret
ret
pop
xor
sbb
aaa
xchg
xchg
mov
das
call
and
(bad)
(bad)
(bad)
call
sbb
loop
int
jmp
dec
daa
daa
imul
jne
adc
or
sbb
inc
je
sbb
cs
sbb
mov
pop
out
pop
mov
push
idiv
(bad)
(bad)
push
cmp
(bad)
(bad)
popa
jge
mov
push
sub
jnp
jecxz
ds
das
das
jno
test
(bad)
jg
jecxz
rcl
or
in
in
sub
and
pusha
jecxz
cld
pop
jns
mov
(bad)
(bad)
dec
mov
pop
in
aam
push
(bad)
retf
retf
inc
addr16
cmp
dec
dec
ficomp
pop
pop
(bad)
(bad)
(bad)
(bad)
call
mov
out
out
sub
stos
in
sti
sti
push
xchg
lds
xor
(bad)
(bad)
(bad)
call
test
iret
jmp
add
push
(bad)
jg
and
lahf
lahf
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
inc
rol
xchg
lods
and
cmp
(bad)
(bad)
dec
cmc
cmc
add
mov
mov
scas
fcmovu
jne
and
arpl
adc
xor
(bad)
call
std
repz
(bad)
(bad)
dec
mov
int
dec
sbb
adc
adc
xor
mov
xchg
xchg
mov
(bad)
(bad)
dec
cs
pop
cmp
cmps
cmps
repnz
jle
cmp
inc
enter
mov
sbb
(bad)
(bad)
(bad)
jmp
out
jae
shl
sbb
dec
shl
and
push
sub
jle
nop
nop
(bad)
(bad)
(bad)
jmp
mov
retf
out
sub
mov
cmp
(bad)
jns
pop
pop
loop
or
(bad)
(bad)
(bad)
call
fneni(8087
loopne
xor
push
je
cmp
or
push
xchg
dec
dec
fisttp
push
or
and
(bad)
(bad)
jmp
pop
in
ret
mov
lods
lods
out
les
cmps
cmp
xchg
movs
shl
in
dec
(bad)
aaa
bnd
mov
out
mov
enter
aaa
pop
fisubr
mov
dec
mov
dec
dec
ror
test
mov
call
push
cli
repz
hlt
pop
iret
jmp
hlt
jp
cmp
scas
jmp
jmp
sbb
mov
dec
and
cs
sbb
and
cmps
cmps
icebp
jae
(bad)
(bad)
(bad)
push
retf
call
fnstsw
je
ds
pop
and
mov
(bad)
(bad)
(bad)
dec
test
jo
nop
jl
ds
jno
mov
int3
data16
nop
dec
dec
fadd
add
add
(bad)
push
add
push
adc
popa
popa
mov
scas
push
push
stc
imul
rcr
mov
or
loope
jmp
clc
adc
cwde
cwde
mov
adc
jmp
xchg
imul
pop
mov
cmps
sub
(bad)
(bad)
(bad)
call
push
and
jmp
into
dec
stos
push
push
call
sub
(bad)
jp
mov
jmp
mov
gs
out
test
(bad)
shr
mov
sub
(bad)
(bad)
call
sub
adc
mov
test
push
cld
ins
mov
push
cmp
add
repz
mov
push
add
cmp
(bad)
out
inc
repz
repz
inc
xchg
iret
leave
or
addr16
jmp
xchg
pop
ret
iret
repz
push
inc
iret
repz
add
hlt
xor
cmp
repz
jae
aas
or
cmp
repz
gs
sub
lgs
ss
cmp
es
iret
repz
je
sub
iret
out
sti
test
cmp
repz
ds
cmc
repz
repz
iret
repz
enter
(bad)
iret
repz
aam
dec
imul
iret
repz
push
(bad)
repz
push
xchg
iret
adc
cmp
mov
iret
repz
mov
iret
dec
add
shl
iret
repz
sbb
ins
dec
repz
repz
das
loope
iret
repz
int3
cmp
add
repz
out
xchg
mov
cwde
sar
jle
repz
stos
or
sar
iret
repz
loop
jbe
repz
repz
dec
push
fisttp
iret
repz
ins
in
outs
out
cmps
cmp
repz
movs
aaa
mov
repz
repz
pop
mov
fs
repz
shl
mov
pop
and
scas
mov
jmp
out
mov
and
out
sahf
out
push
and
out
sahf
and
fadd
out
inc
les
sahf
out
adc
jns
rcl
jns
out
adc
jns
out
cmps
mov
xchg
sahf
out
sahf
and
js
(bad)
jns
out
clc
adc
xor
jns
out
mov
out
sahf
adc
cld
(bad)
cmp
sahf
out
jl
jnp
imul
sahf
out
lds
add
out
sahf
sub
xlat
stos
jbe
jns
out
or
cli
pop
out
sahf
out
lock
aam
sahf
out
sahf
scas
pushf
movs
jb
mov
sahf
out
std
xchg
es
out
sahf
out
int3
xor
in
out
sahf
icebp
jno
xor
jns
and
sbb
add
sahf
out
sahf
loop
daa
mov
or
out
sub
outs
out
sahf
out
mov
out
sahf
mov
jecxz
test
sahf
out
rol
in
and
out
sahf
out
pop
push
mov
cmp
pop
iret
sar
out
out
stos
sti
inc
dec
out
sahf
out
test
add
push
cmp
test
jns
out
mov
out
sahf
out
cmc
mov
jns
and
push
ror
jns
out
or
in
pop
xchg
out
sahf
out
pop
les
sahf
cmp
pusha
jns
out
or
sahf
out
mov
mov
adc
pop
or
loopne
sahf
out
xor
or
out
sahf
out
pop
ret
sahf
out
sahf
bound
jns
out
enter
aad
jns
out
test
out
sahf
jmp
sahf
out
js
cs
out
sahf
out
(bad)
call
jns
pop
dec
mov
sahf
out
ds
dec
add
jns
out
push
popa
xor
sahf
mov
loope
sahf
out
clc
cwde
adc
out
sahf
out
xchg
fwait
push
xchg
into
push
sub
mov
out
mov
out
sahf
out
push
out
sahf
cmpxchg
arpl
out
jl
jnp
imul
sahf
out
lds
add
out
sahf
sub
xlat
stos
jbe
jns
out
or
cli
pop
out
sahf
out
lock
aam
sahf
out
sahf
scas
pushf
movs
jb
mov
sahf
out
std
xchg
es
out
sahf
out
int3
xor
in
out
sahf
icebp
jno
xor
jns
and
sbb
add
sahf
out
sahf
loop
daa
mov
or
out
sub
outs
out
sahf
out
mov
out
sahf
mov
jecxz
test
sahf
out
rol
in
and
out
sahf
out
pop
push
mov
cmp
pop
iret
sar
out
out
stos
sti
inc
dec
out
sahf
out
test
add
push
cmp
test
jns
out
mov
out
sahf
out
cmc
mov
jns
and
push
ror
jns
out
or
in
pop
xchg
out
sahf
out
pop
les
sahf
cmp
pusha
jns
out
or
sahf
out
mov
mov
adc
pop
or
loopne
sahf
out
xor
or
out
sahf
out
pop
ret
sahf
out
sahf
bound
jns
out
enter
aad
jns
out
test
out
sahf
jmp
sahf
out
js
cs
out
sahf
out
(bad)
call
jns
pop
dec
mov
sahf
out
ds
dec
add
jns
out
push
popa
xor
sahf
mov
loope
sahf
out
clc
cwde
adc
out
sahf
out
xchg
fwait
push
xchg
into
push
sub
mov
out
mov
out
sahf
out
push
out
sahf
cmpxchg
push
hlt
(bad)
(bad)
(bad)
jmp
push
sbb
movs
ret
cmp
pop
xchg
cmp
inc
icebp
lods
cli
pop
stos
dec
jecxz
xchg
and
cmp
(bad)
(bad)
cli
push
lods
jbe
test
dec
and
lds
retf
xlat
es
xor
mov
dec
and
jmp
ret
(bad)
(bad)
call
or
imul
mov
pop
out
xchg
pushf
xchg
mov
(bad)
(bad)
(bad)
call
fcmovbe
mov
and
dec
loopne
sub
ret
hlt
mov
cdq
pop
imul
(bad)
(bad)
(bad)
mov
dec
mov
mov
data16
cmp
sbb
adc
(bad)
(bad)
call
inc
mov
ja
mov
and
pop
pop
sbb
(bad)
(bad)
(bad)
jnp
mov
jae
and
add
jecxz
(bad)
push
push
stos
sub
mov
add
(bad)
(bad)
(bad)
push
or
and
push
in
push
sbb
sub
pop
repnz
(bad)
(bad)
(bad)
jmp
mov
push
add
bound
les
push
popf
mov
mov
xor
jmp
in
cmp
out
stos
pop
jno
push
mov
outs
adc
and
fld
cmp
dec
out
inc
xchg
push
lea
(bad)
(bad)
(bad)
inc
aam
pusha
push
adc
and
mov
inc
int3
fstp
call
mov
out
pop
cmp
out
(bad)
inc
psubsw
test
leave
xchg
add
xor
in
dec
push
adc
ins
pop
jb
std
push
(bad)
sti
jne
aad
ss
fldenv
(bad)
jmp
cmps
and
ss
addr16
push
out
mov
xchg
rcr
fwait
xchg
sahf
add
dec
clc
(bad)
(bad)
jmp
and
sbb
sbb
loop
mov
in
and
inc
adc
pop
sbb
out
dec
or
mov
lods
sub
push
test
test
cdq
fnstsw
xchg
(bad)
std
test
cmc
mov
pop
sti
(bad)
fcomip
mov
retf
and
fdiv
icebp
arpl
xor
retf
test
adc
and
(bad)
adc
test
jge
mov
xor
(bad)
sub
dec
fdiv
(bad)
(bad)
(bad)
call
ja
jecxz
sub
mov
cli
inc
jmp
mov
mov
jge
(bad)
(bad)
jmp
and
nop
out
xchg
(bad)
fnstcw
rol
mov
mov
cmps
cmc
or
fidiv
mov
aas
lods
mov
in
js
or
push
jle
(bad)
test
call
(bad)
push
pop
add
cmc
lahf
pop
cmp
aad
test
enter
adc
jge
call
jmp
fstp
mov
or
sbb
in
call
out
outs
gs
jmp
jle
mov
iret
or
adc
(bad)
ss
jmp
(bad)
xor
xor
movs
(bad)
(bad)
(bad)
call
je
mov
cmps
loopne
shl
icebp
add
dec
inc
in
(bad)
jg
(bad)
(bad)
(bad)
call
pop
xchg
imul
jbe
(bad)
lea
mov
int3
stos
dec
push
in
add
sahf
shl
sbb
sub
(bad)
(bad)
call
mov
popf
pop
jmp
xchg
or
mov
sbb
push
jmp
call
ins
(bad)
inc
adc
mov
adc
jmp
cmp
into
test
leave
xor
(bad)
jmp
in
jp
mov
pushf
rcr
pop
push
bnd
sbb
jns
(bad)
aaa
mov
pop
std
stos
pop
fistp
outs
adc
inc
fild
mov
and
sub
mov
ret
jb
loop
or
cmp
(bad)
(bad)
dec
dec
add
or
(bad)
mov
pushf
fs
rcl
xor
ins
ins
pop
je
mov
push
ret
xchg
cmp
repz
icebp
stos
xchg
push
repz
repz
repz
or
iret
repz
adc
iret
repz
jmp
sub
iret
sub
imul
iret
repz
pop
data16
repz
repz
test
repz
sbb
pop
sbb
cmp
loop
sub
repz
repz
repz
mov
mov
int
pop
mov
mov
iret
repz
push
push
stc
cmp
repz
add
cmp
repz
int3
ja
mov
repz
cmp
inc
jmp
repz
dec
lods
dec
sti
repz
repz
push
daa
fs
repz
sar
mov
rcr
dec
mov
cmp
repz
sbb
cmp
mov
std
cmp
repz
mov
cmp
repz
retf
repz
inc
and
adc
iret
repz
repz
shr
iret
repz
cli
and
sbb
repz
fsubr
mov
repz
sub
movs
in
cmp
repz
iret
repz
pop
cmc
mov
iret
repz
cmps
outs
jnp
repz
repz
add
cmp
or
fxch
aam
cmp
repz
xor
shl
cmp
repz
mov
dec
test
das
lea
fistp
repz
sbb
iret
repz
jae
pop
push
iret
repz
xor
mov
mov
repz
xor
cmp
repz
jns
jmp
xchg
iret
repz
or
inc
jno
cmp
repz
cmp
je
cmps
movs
pop
cmp
repz
inc
pop
add
repz
rep
jbe
xlat
retf
iret
repz
inc
mov
cmp
repz
lock
stc
pop
repz
repz
jp
and
repz
imul
cmp
repz
lods
lods
cmp
cmp
repz
jg
scas
iret
repz
mov
clc
cmp
repz
add
iret
repz
xchg
push
sbb
repnz
iret
repz
mov
cmp
repz
loope
in
out
iret
repz
lahf
adc
iret
repz
pop
aam
sti
repz
repz
iret
repz
pop
out
or
push
add
repz
in
jo
push
cmp
repz
cmp
cmps
iret
repz
push
cs
xchg
cmp
repz
and
mov
sub
pop
or
iret
test
sbb
frstor
iret
repz
cmc
cmp
repz
repz
cld
icebp
fadd
and
and
xor
das
xor
push
repz
repz
iret
repz
sub
dec
shl
cmp
fimul
iret
repz
int3
inc
adc
imul
cmp
repz
jge
mov
repz
repz
iret
call
cmp
repz
and
repz
cwde
fcmove
repz
push
not
mov
add
iret
repz
mov
push
jmp
inc
sbb
iret
push
inc
popa
or
cmp
iret
repz
leave
in
fcomip
cmp
repz
aaa
int
iret
repz
outs
fcomi
les
cmp
repz
and
cmp
repz
rol
push
hlt
inc
pop
daa
cmp
repz
popf
cli
jecxz
repz
repz
add
sub
repz
xor
(bad)
cmp
repz
dec
inc
ror
xchg
ins
push
mov
iret
loopne
ret
mov
loope
and
fcomip
cmp
repz
fs
cmp
or
cmp
repz
dec
pop
push
jmp
cmp
repz
aaa
sub
add
iret
jns
imul
xor
cs
repz
and
cmp
jno
and
ds
iret
repz
les
push
cwde
repz
repz
iret
repz
sbb
jl
test
cmp
repz
sub
pop
push
repz
repz
repz
pop
or
fwait
cmp
repz
fdiv
xchg
repz
repz
iret
repz
mov
icebp
jne
jg
iret
repz
jb
sti
inc
repz
repz
in
arpl
repz
xchg
(bad)
dec
mov
repz
mov
shl
xchg
jmp
cmp
jge
dec
cmp
aam
iret
repz
jp
lods
cmp
cmp
repz
jle
fmul
repz
cmp
pop
rcl
and
lods
sbb
repz
call
iret
mov
mov
iret
repz
aas
movs
mov
repz
cmp
int
dec
out
stos
xchg
cmp
repz
push
gs
repz
repz
repz
adc
xlat
mov
repz
popa
sbb
shl
cmp
repz
idiv
iret
repz
cmp
mov
sbb
repz
repz
push
retf
xor
repnz
ins
mov
mov
jmp
mov
movs
xchg
pop
cmp
jp
(bad)
outs
scas
push
push
cmp
mov
jecxz
add
push
jbe
mov
es
pop
inc
pop
push
pop
call
pop
imul
cs
mov
push
es
push
sbb
(bad)
cmps
out
sbb
movs
into
pop
dec
jp
mov
jmp
mov
ss
xchg
call
inc
sbb
movs
dec
mov
dec
pop
test
scas
inc
mov
imul
sahf
mov
push
dec
mul
out
mov
sbb
cs
(bad)
pop
imul
outs
fimul
mov
xchg
mov
mov
ds
mov
movs
push
push
jle
imul
xchg
movs
mov
mov
push
mov
mov
jmp
movs
xchg
out
push
mov
cmps
jbe
push
sbb
mov
outs
push
push
cmp
jle
push
sbb
test
pop
outs
ds
movs
mov
push
xchg
xchg
pop
push
mov
inc
cmp
movs
jbe
push
sbb
test
jmp
xchg
push
test
jbe
cmps
sahf
cmp
(bad)
(bad)
test
pop
jmp
jp
test
out
inc
(bad)
imul
cmp
(bad)
movs
dec
sbb
cs
ds
cmp
movs
outs
pop
push
cmp
movs
xchg
xchg
push
jle
test
inc
out
pop
sbb
cmps
test
(bad)
pop
jp
lods
mov
test
pop
jle
es
xchg
out
into
jp
pop
mov
(bad)
pop
jmp
test
push
push
scas
jmp
push
push
lods
mov
dec
mov
(bad)
pop
mov
xchg
push
jp
movs
movs
push
push
out
jmp
lods
movs
mov
jle
mov
sbb
cmps
jbe
mov
jmp
jbe
(bad)
cmp
mov
pop
pop
jne
mov
add
cmp
repz
push
sbb
cmp
cmp
pop
push
dec
inc
cmp
repz
jg
imul
xchg
iret
repz
mov
cmp
repz
iret
rcr
jnp
cmp
repz
push
pop
iret
repz
inc
dec
and
xor
cmp
add
adc
repz
repz
out
iret
repz
icebp
cli
xchg
cwde
test
mov
repz
repz
loopne
fcmovbe
iret
repz
int3
(bad)
scas
movs
mov
cmp
mov
repz
push
pop
push
iret
repz
jl
push
adc
repz
cmp
(bad)
repz
xrelease
repz
mov
aad
ret
enter
cmp
repnz
in
repz
repz
adc
iret
repz
pop
or
outs
jae
cmp
repz
inc
pop
push
div
cmp
repz
loope
fcmovnbe
iret
repz
int
scas
movs
mov
cmp
mov
iret
repz
push
pop
imul
cmp
jge
pop
adc
add
repz
cmp
iret
xrelease
repz
mov
aam
ret
iret
repz
repz
in
repz
repz
sub
adc
iret
repz
push
or
cmp
repz
inc
pop
push
add
cmp
repz
sbb
es
repz
cmp
pop
push
dec
inc
cmp
repz
jle
push
repz
iret
repz
mov
cmp
repz
into
rcr
jp
cmp
repz
addr16
pop
iret
repz
inc
dec
and
xor
cmp
repz
add
cmp
repz
out
iret
repz
lock
xchg
cdq
test
mov
repz
repz
iret
repz
and
jb
cmp
repz
push
inc
dec
shl
cmp
repz
(bad)
in
iret
repz
(bad)
repz
iret
repz
adc
lods
pop
xchg
cwde
rcr
leave
les
repz
jmp
repz
pop
push
iret
repz
inc
dec
add
sbb
iret
repz
cmp
iret
repz
ja
pop
push
iret
repz
inc
dec
add
iret
repz
cmp
es
mov
stos
mov
sahf
aad
iret
ret
repz
in
sti
not
repz
repz
shl
iret
repz
clc
cmc
mov
iret
repz
xchg
iret
repz
xor
iret
repz
sub
cmp
repz
push
inc
dec
(bad)
cmp
repz
ror
jecxz
repz
hlt
stc
mov
test
cmp
repz
mov
repz
adc
cmp
and
bound
jne
iret
repz
pop
dec
inc
popa
repz
rep
jnp
push
pop
iret
repz
dec
inc
or
push
cmp
repz
xor
sub
mov
iret
repz
lahf
xchg
(bad)
ret
into
cmp
repz
loopne
cli
mov
cmp
repz
iret
repz
cdq
xchg
(bad)
(bad)
iret
repz
out
cld
addr16
repz
jo
pop
iret
repz
dec
inc
lar
cmp
and
repz
repz
sbb
xor
and
imul
push
pop
dec
inc
fdiv
cmp
repz
retf
call
iret
repnz
repz
lea
iret
repz
sbb
ss
dec
inc
pop
push
cmp
repz
gs
nop
repz
repz
or
iret
cmps
scas
fcom
retf
iret
repz
cmc
out
out
repz
repz
and
push
iret
repz
or
push
push
pop
inc
dec
stos
repz
repz
iret
repz
popf
xchg
jecxz
icebp
clc
cmp
repz
into
aad
jbe
cmp
repz
ins
push
pop
iret
repz
inc
dec
ds
sub
cmp
repz
adc
add
repz
repz
hlt
std
ret
repz
rcr
scas
cmps
mov
cmp
sbb
repz
pop
push
imul
jb
or
push
cmp
repz
sub
cmp
repz
repz
(bad)
stc
lock
repz
jmp
xchg
pushf
xchg
mov
mov
iret
repz
test
iret
fcmovbe
movs
lods
mov
cmp
repz
mov
iret
repz
addr16
push
iret
repz
dec
inc
xor
es
cmp
repz
sbb
or
repz
repz
int3
repz
iret
repz
loope
lahf
xchg
lea
mov
mov
repz
push
pop
arpl
repz
jno
clts
sbb
cmp
and
xor
xchg
mov
cmp
lods
movs
rcr
ror
iret
repz
jmp
in
or
cmp
repz
adc
daa
iret
repz
cmp
inc
dec
push
pop
cmp
repz
outs
je
mov
test
mov
cmp
xchg
sahf
jmp
iret
repz
(bad)
(bad)
xor
cmp
repz
sub
iret
pop
push
jns
imul
repz
push
dec
inc
add
dec
shl
add
add
dec
shl
and
sbb
add
and
xor
xor
cmp
inc
inc
inc
inc
inc
inc
pop
add
or
outs
xchg
add
push
push
adc
push
sub
xchg
add
out
sbb
and
fdivr
push
aaa
arpl
bound
xor
gs
cmp
xor
data16
xor
push
sub
gs
cmp
fs
fistp
arpl
arpl
xor
xor
xor
arpl
cmp
cmp
test
pop
cmp
hlt
mov
and
popa
jb
mov
loope
out
sub
lock
add
pop
cld
mov
pop
pop
cdq
andnps
outs
outs
ja
and
add
and
pop
add
inc
push
je
je
rol
pop
ins
ins
bound
cwde
dec
outs
add
sbb
gs
push
(bad)
push
cmp
mov
sub
and
outs
test
add
leave
shl
xchg
add
sbb
push
jae
mov
xor
or
mov
push
inc
adc
adc
and
js
adc
xor
je
sbb
add
push
add
jo
push
outs
mov
xchg
add
scas
inc
inc
fistp
cmp
lods
adc
iret
mov
adc
scas
xlat
(bad)
imul
lsl
xor
sub
add
mov
mov
cld
retf
scas
int
fldcw
push
repnz
jae
lock
pushf
xchg
clc
out
pushf
out
popaw
ins
stos
bound
jae
je
jne
pop
inc
and
inc
pop
mov
cmps
scas
pop
ret
jae
dec
adc
lds
add
sub
and
xlat
sub
sub
addr16
adc
or
push
jp
sahf
int
jle
out
fistp
push
jg
mov
sub
out
test
pop
gs
inc
pop
es
ins
fs
push
(bad)
in
int
std
clc
mov
xchg
stos
cmp
and
add
dec
mov
push
pop
pop
loopne
and
inc
jle
jo
adc
dec
ins
imul
dec
dec
dec
dec
ret
test
dec
push
push
push
push
push
add
call
cld
pop
pop
pop
popa
bound
addr16
imul
jo
jb
frstor
mov
jns
lahf
sub
mov
shl
jb
mov
pop
arpl
jle
pop
and
fsub
je
jns
add
(bad)
lods
cmp
push
jo
push
imul
jae
sbb
outs
or
popa
adc
shr
dec
pop
or
cmp
or
xchg
popa
outs
mov
je
push
mov
jns
cs
dec
cmc
adc
popf
xor
outs
jne
jo
push
add
push
sub
sahf
fld
inc
mov
push
add
inc
sbb
inc
add
inc
mov
add
mov
je
int
mov
add
add
lock
mov
mov
add
shl
out
es
push
mov
shl
adc
jl
outs
jle
xchg
add
enter
add
neg
jecxz
(bad)
mov
out
jbe
jge
or
push
push
push
push
jo
mov
push
push
pop
push
jl
fild
shr
fisubr
fst
out
and
push
adc
mov
movs
pop
jmp
out
cmp
sahf
into
push
and
loopne
fnstcw
inc
xor
out
cmp
loopne
inc
mov
repz
rol
jo
inc
xor
cmp
mov
dec
and
out
pushf
sbb
or
fisub
neg
cmps
add
mov
clc
xor
cmp
aas
mov
mov
fidivr
push
and
push
cmp
xchg
xchg
and
cmp
into
arpl
push
mov
iret
jnp
cmp
into
push
push
and
xchg
jns
adc
pop
mov
ja
int
or
or
push
fiadd
adc
dec
and
mov
push
aam
add
inc
add
stos
xchg
jge
add
push
add
jge
add
pop
scas
mov
test
xor
jg
jle
push
(bad)
cli
jnp
mov
mov
push
add
add
loope
fcmovne
add
sti
mov
stc
jo
mov
or
das
lahf
adc
adc
or
call
add
cmp
iret
jnp
mov
or
push
add
bound
test
out
push
push
or
jge
iret
(bad)
push
sbb
neg
mov
cmp
xor
cmp
mov
nop
pop
push
inc
add
sbb
or
pop
ja
xor
xor
ss
inc
outs
out
pop
pop
pop
mov
add
pop
jno
push
pop
adc
xchg
push
out
inc
sahf
mov
pop
sub
test
ficomp
xchg
xchg
mov
scas
rcl
cmps
imul
jg
mov
inc
aaa
push
rol
pop
mov
aas
and
inc
mov
sub
movs
and
lahf
add
inc
dec
cdq
or
cwde
inc
sbb
loopne
lock
test
loopne
add
retf
inc
push
stc
xor
int
mov
pusha
loope
out
lock
fstp
mov
adc
shl
mov
dec
hlt
cmc
add
imul
neg
clc
sahf
idiv
lock
data16
mov
shr
sahf
outs
fdivp
dec
or
push
add
add
sbb
not
xlat
mov
cmp
pop
pop
outs
cmp
or
stos
cmp
adc
sub
sbb
test
pop
add
xor
and
and
add
push
sahf
cs
pop
sahf
sub
push
loop
fbld
ins
popa
imul
imul
cmp
jns
outs
rol
inc
mov
cli
inc
inc
je
xor
push
loopne
popa
jle
inc
jo
or
mov
push
pop
push
mov
inc
push
arpl
jo
lahf
fisubr
pop
pop
cmp
outs
xor
push
cmp
ss
fist
hlt
les
cmps
inc
sar
ror
inc
adc
cmps
push
dec
dec
push
(bad)
addr16
test
loope
outs
dec
outs
fs
ins
sub
loopne
je
xchg
ins
imul
pop
xchg
push
push
cmp
dec
mov
jg
(bad)
out
loop
inc
jae
and
outs
and
and
js
mov
xor
push
jbe
bound
cs
push
(bad)
jecxz
jo
add
fidiv
mov
cs
outs
inc
(bad)
add
scas
and
or
mov
in
or
jne
pop
(bad)
push
(bad)
ds
sti
push
inc
pop
dec
dec
inc
inc
and
push
and
pop
ret
dec
push
dec
inc
xchg
jo
jns
outs
popa
push
inc
pop
popa
pop
mov
mov
push
outs
outs
mov
cmp
(bad)
not
inc
outs
(bad)
ffree
cmps
out
inc
inc
push
push
dec
dec
dec
pop
adc
push
push
ficomp
in
test
inc
fmul
aaa
inc
inc
adc
pop
push
or
inc
and
jo
adc
mov
outs
push
jb
and
(bad)
inc
fs
mov
add
test
jae
push
sub
xor
mov
and
mov
and
dec
push
jne
jb
or
push
adc
arpl
out
arpl
and
inc
sbb
ret
add
(bad)
mov
adc
adc
es
dec
(bad)
push
popa
mov
sahf
jne
adc
cmp
inc
jae
xchg
loope
imul
sbb
cmps
pop
fcomp
out
aam
in
lods
mov
dec
push
push
test
in
mov
arpl
sbb
pop
dec
add
xlat
aad
pop
sahf
dec
bound
add
dec
or
add
dec
fmul
movups
punpckldq
pop
imul
mov
stos
sub
lods
mov
sbb
pop
push
imul
push
adc
jb
or
pop
lods
(bad)
je
xor
inc
cs
aaa
(bad)
test
jg
pop
aad
outs
fild
ja
out
adc
or
out
fdivr
add
inc
stos
or
ja
inc
add
push
jo
jb
shl
push
adc
mov
sbb
add
dec
jle
mov
add
retf
out
mov
pop
add
add
dec
shl
add
nop
and
push
or
inc
mov
inc
xchg
xlat
out
pcmpgtb
lahf
cmp
sbb
pusha
out
inc
xchg
fxch
nop
add
pop
dec
outs
and
xor
pop
lahf
mov
add
sbb
fist
les
dec
adc
or
enter
dec
or
sbb
sbb
data16
and
outs
fimul
add
xchg
outs
pop
xor
inc
(bad)
add
xchg
add
xor
rdtsc
jmp
add
clc
xor
enter
xor
adc
sub
pop
rcl
rol
dec
jp
xchg
nop
mov
adc
jmp
in
jge
popa
stc
push
mov
xor
adc
xlat
add
bound
pop
je
add
shr
addr16
js
ins
cli
jb
(bad)
mov
mov
pop
inc
ins
ss
(bad)
and
xchg
outs
call
pop
loop
sbb
adc
(bad)
xchg
les
adc
(bad)
stos
mov
inc
jb
pop
add
pop
mov
push
adc
xor
retf
add
sbb
test
mov
jmp
mov
mov
or
stc
test
add
imul
adc
adc
ins
mov
add
mov
ret
bound
sbb
xchg
and
lds
push
repnz
dec
add
mov
add
mov
xchg
ins
popa
jo
xchg
cld
pop
sub
mov
popa
bound
adc
sub
inc
mov
xchg
fidiv
cmp
pop
lahf
jae
add
adc
inc
lock
loope
imul
push
idiv
mov
call
and
add
ins
or
and
outs
inc
inc
inc
popa
dec
xchg
ror
(bad)
(bad)
inc
outs
add
cmp
imul
addr16
je
(bad)
repnz
sub
inc
jp
iret
iret
imul
push
push
mov
in
popf
inc
js
je
push
pavgb
shr
je
and
pop
outs
jne
pop
xchg
outs
jp
jne
or
outs
clc
fsub
iret
dec
mov
fsub
xor
xor
(bad)
dec
popa
jbe
cmps
lahf
xor
out
jbe
popa
ss
inc
jnp
lahf
xor
xchg
pop
lahf
lds
jno
(bad)
push
push
aaa
loopne
or
push
jb
mov
xor
push
imul
sbb
fs
jb
pop
movs
sti
clc
(bad)
jb
xchg
ror
push
pushf
and
gs
loope
jmp
or
das
mov
push
outs
imul
pop
test
push
cld
ins
movs
pop
xor
test
push
and
mul
cmp
cs
dec
cmp
or
fcomip
mov
lds
jmp
test
mov
js
outs
popa
ins
sbb
js
fild
fisub
pop
out
mov
add
mov
ret
and
test
pop
retf
adc
jl
add
mov
adc
das
push
jb
inc
jle
dec
lldt
cmc
aaa
out
bound
sub
mov
aas
push
adc
jmp
add
data16
or
nop
pop
inc
rol
or
dec
call
loopne
add
inc
fdivr
or
leave
inc
repnz
push
rol
xor
inc
add
push
pop
add
cmp
xor
pop
retf
fst
pop
aad
push
outs
mov
add
clc
ins
dec
iret
shl
cmps
fisttp
xchg
sti
push
fnsave
sahf
mov
dec
jmp
pop
pop
mov
cmp
inc
scas
cdq
and
outs
jmp
push
sar
pop
outs
jmp
pusha
dec
lock
repz
pop
mov
data16
out
add
shr
loope
mov
xor
push
and
cmp
and
jne
cmp
ja
ss
jp
jbe
ja
xor
adc
jo
jne
jo
aaa
dec
addr16
(bad)
push
jmp
inc
inc
imul
mov
xlat
sahf
jo
ja
and
dec
mov
js
scas
imul
jbe
not
add
arpl
jae
cmps
mov
popa
in
dec
imul
push
icebp
cmp
push
loop
jno
xor
ret
sar
ficom
dec
or
add
jecxz
jmp
in
mov
or
or
xor
cmps
mov
popa
rol
or
xchg
shl
sbb
add
sbb
js
mov
push
mov
push
jnp
out
xchg
fadd
pop
push
pop
dec
sub
je
jns
pop
and
adc
sbb
add
dec
add
mov
imul
dec
ror
and
push
pusha
pop
mov
push
data16
xchg
test
inc
(bad)
bound
adc
pop
push
mov
ret
cmp
push
sub
rcl
adc
push
adc
and
ret
ret
pop
mov
inc
sub
lds
(bad)
je
fst
sub
mov
loopne
psrld
jae
cmps
sti
inc
sbb
ret
pop
mov
add
mov
add
pop
push
repz
bound
shr
add
inc
pop
add
push
xor
lods
inc
sbb
mov
(bad)
dec
push
push
add
add
rcr
dec
dec
add
sub
mov
loopne
ins
push
push
scas
dec
jp
addr16
rcl
push
sti
retf
out
cmp
stos
mov
push
test
push
aas
jecxz
mov
add
je
mov
push
xor
push
add
sub
mov
or
test
sub
add
mov
xor
das
push
mov
lea
inc
inc
xor
pop
test
icebp
or
ins
bound
cld
nop
xor
pop
mov
jbe
sar
pop
add
cmp
pop
ja
jae
push
inc
jae
pop
sub
imul
xor
(bad)
sbb
mov
inc
js
jo
sub
mov
sbb
outs
adc
cmp
inc
outs
loope
das
aaa
add
adc
bound
je
jo
inc
cmp
mov
arpl
xchg
pop
fs
jo
cmp
add
popa
pop
jge
popf
mov
sub
sbb
add
(bad)
xchg
fdiv
data16
aaa
outs
jbe
push
jbe
jbe
jb
les
stos
inc
pop
push
inc
cmp
cmp
push
push
inc
jo
mov
jg
daa
and
mov
mov
push
jmp
pop
sbb
fidiv
(bad)
or
mov
push
mov
dec
push
inc
fidivr
dec
inc
or
inc
lea
mov
push
pop
and
xchg
cmp
ins
inc
(bad)
pop
mov
jg
bound
mov
(bad)
ror
adc
dec
pop
loop
cmp
pop
adc
(bad)
xchg
inc
fild
xchg
add
or
push
sub
out
rol
rol
mov
arpl
sbb
cmps
inc
xchg
outs
daa
dec
icebp
inc
int3
imul
inc
fmul
outs
pop
xchg
add
rcl
push
aas
dec
mov
xchg
stos
jae
or
idiv
xor
push
(bad)
and
mov
jo
sub
cs
jp
ucomiss
push
or
and
mov
iret
mov
ja
push
lea
pop
push
inc
idiv
gs
sub
out
add
jmp
retf
movs
adc
inc
pop
dec
xadd
and
les
outs
pop
ins
adc
dec
push
pop
outs
xor
inc
cmps
cwde
cmps
inc
mov
mov
mov
pop
and
jno
adc
or
scas
fwait
pushf
mov
cmp
rol
sub
sbb
xchg
ja
lea
mov
sahf
aaa
out
prefetch
dec
imul
sbb
jb
daa
gs
arpl
and
sub
pop
imul
inc
inc
jbe
pop
xor
dec
add
icebp
xor
jns
push
jmp
sub
pop
pop
jl
sub
lock
cmp
in
out
cmp
xchg
addr16
mov
mov
js
jae
fxch
push
(bad)
jmp
mov
mov
pop
test
hlt
in
inc
mov
jnp
pop
fmul
lods
rol
inc
inc
popa
mov
or
call
mov
mov
pusha
(bad)
adc
fimul
and
pop
xchg
xor
test
scas
xor
mov
mov
stos
push
pop
and
sub
push
iret
push
mov
sbb
stos
push
dec
outs
les
sub
jg
pop
and
stos
pop
mov
push
sub
sub
xor
test
add
mov
outs
and
scas
ret
aaa
xor
push
sub
jmp
push
mov
mov
adc
shl
das
adc
fwait
(bad)
shl
pop
xchg
sbb
aas
jg
cmp
inc
inc
adc
les
loopne
and
and
scas
add
aas
repz
ret
dec
add
add
in
and
add
gs
test
add
push
mov
sub
inc
outs
stos
clc
mov
imul
push
push
daa
pop
call
jmp
jo
pop
cmp
push
int3
(bad)
loopne
add
jg
pause
sub
dec
rcl
jmp
fmul
jmp
outs
sbb
push
pop
packsswb
lea
fisubr
test
aas
addr16
or
and
ins
sub
push
add
scas
ret
shr
(bad)
into
or
dec
jae
sbb
mov
iret
out
dec
pop
add
sub
mov
ins
ds
aas
xlat
inc
cvtpi2ps
arpl
push
push
into
out
dec
ja
(bad)
data16
push
sbb
push
sub
mov
add
mov
leave
fidiv
add
fild
mov
pop
enter
or
push
or
ds
push
aaa
mov
push
inc
cld
pop
mov
add
mov
push
aad
arpl
leave
(bad)
push
inc
push
dec
push
push
inc
or
mov
sub
ds
push
dec
inc
push
push
mov
jle
dec
aas
dec
push
push
dec
inc
dec
dec
inc
ss
dec
dec
(bad)
(bad)
(bad)
aaa
inc
inc
dec
dec
dec
push
dec
dec
dec
push
outs
and
daa
inc
dec
inc
push
dec
inc
sub
mov
mov
inc
or
inc
dec
dec
adc
mov
pushf
xor
pop
lods
daa
sar
inc
push
inc
dec
pop
das
les
sub
add
in
fist
xor
bound
fcmovb
inc
in
add
ss
loope
sub
xchg
sbb
movs
inc
ds
dec
dec
dec
push
pop
cs
dec
dec
bound
inc
push
pop
ret
or
push
ins
inc
inc
dec
inc
pop
inc
inc
push
call
xchg
push
or
and
adc
sbb
xor
mov
(bad)
mov
add
sub
mov
cwde
inc
paddsb
pop
lods
push
aas
and
add
fisub
lds
jns
jecxz
push
scas
fsubr
loopne
add
inc
loope
mov
movs
push
jne
mov
rol
inc
push
inc
dec
out
int3
call
push
mov
shl
xchg
xchg
and
adc
mov
dec
mov
das
das
neg
dec
sahf
imul
movq
mov
mov
outs
sub
rcl
add
mov
pop
cmp
sub
retf
and
pop
push
or
xchg
add
aas
and
add
rol
sub
arpl
test
mov
and
add
(bad)
call
pop
xchg
aaa
mov
lahf
test
popa
pop
ret
push
and
ror
sbb
push
push
mov
add
pop
inc
iret
ret
mov
gs
jo
push
push
ret
je
xor
(bad)
adc
popa
loopne
or
jmp
js
xor
jnp
mov
push
push
jb
sbb
or
cmps
xchg
je
cmp
jecxz
lahf
pop
jle
cmp
and
nop
out
sbb
pop
push
cmp
outs
outs
push
cmovb
jae
rcr
add
adc
adc
inc
sbb
mov
add
and
cmp
(bad)
mov
add
add
mov
out
clc
adc
push
out
sbb
stos
jb
gs
daa
das
push
lock
fild
pop
int3
imul
xor
dec
dec
add
and
out
inc
and
dec
dec
dec
inc
pop
and
shl
movs
push
mov
(bad)
jo
or
mov
cmp
and
mov
scas
out
inc
js
push
mov
leave
addr16
cmp
mov
fldenv
ins
ss
and
rcl
sbb
jecxz
xor
add
ins
sub
and
pop
pop
jae
jne
add
movs
or
fild
inc
jb
push
xchg
xchg
sti
out
xlat
out
mov
not
popa
xchg
inc
cs
icebp
loope
sbb
arpl
mov
addr16
jo
lods
xchg
pop
cmp
mov
dec
(bad)
sbb
jne
push
cmps
pop
jl
pop
xchg
mul
jo
cwde
add
inc
(bad)
dec
and
add
das
sbb
add
adc
dec
mov
push
mov
call
call
add
inc
scas
jo
je
add
add
inc
pop
arpl
das
push
inc
mov
test
dec
pop
mov
jns
mov
loopne
daa
ja
or
rol
inc
gs
mov
nop
push
mov
adc
cmp
adc
push
push
add
lock
imul
push
fs
repnz
push
ja
jne
push
pushf
call
mul
mov
mov
sbb
add
call
das
jg
test
mov
adc
jae
pop
je
fist
fsubr
aas
data16
or
cwde
add
xchg
lods
mov
ins
inc
inc
loopne
cs
jo
dec
jecxz
inc
rol
add
cmp
dec
and
pop
test
mov
mov
lahf
sub
inc
adc
jo
test
push
stos
lock
ins
add
xchg
jg
adc
cld
sar
fstp
inc
cdq
inc
mov
xchg
xchg
icebp
loopne
jmp
cmps
and
adc
push
hlt
xchg
aaa
inc
sets
and
and
pop
fidivr
mov
cmps
jl
xor
pop
jo
mov
xchg
or
nop
inc
test
push
fist
arpl
les
pop
pop
lods
scas
xchg
stos
mov
(bad)
dec
pusha
rol
add
les
jne
add
(bad)
xchg
and
and
jb
sub
add
pop
xlat
push
mov
and
and
push
scas
into
cmp
(bad)
mov
pop
push
lahf
outs
pop
jle
add
pop
mov
add
fimul
daa
add
mov
inc
mov
mov
jae
movs
les
aas
adc
in
outs
out
adc
aas
xor
and
retf
push
pop
ds
inc
push
stos
pop
inc
jle
or
mov
mov
popa
jbe
jl
push
push
xchg
sbb
push
or
ins
sti
mov
push
push
js
add
test
aas
jnp
hlt
lods
dec
outs
pop
and
lsl
movs
jg
cs
add
call
inc
pop
pop
pop
push
pop
mov
push
call
cmp
push
pop
sti
xsave
daa
bound
jns
imul
ss
(bad)
das
or
and
int3
scas
popa
adc
mov
xor
and
sub
cmp
cmp
mov
fisubr
push
jbe
cmp
retf
ror
lods
test
pop
ins
fwait
sub
mov
imul
stos
mov
and
xchg
xor
daa
mov
ins
or
pop
push
jmp
outs
ja
dec
push
sbb
cmp
sbb
ins
inc
es
mov
dec
outs
jae
ins
cwde
adc
dec
arpl
and
or
sub
mov
test
js
aaa
cli
jo
cmp
add
outs
xor
xor
out
mov
sub
mov
adc
pop
dec
cmp
xlat
cdq
push
mov
aas
sub
mov
and
sbb
add
mov
sub
jbe
imul
sbb
xchg
pop
sar
push
(bad)
cmps
cmp
jl
hlt
dec
push
xchg
mov
or
mov
and
jbe
and
push
jae
or
retf
mov
push
inc
or
popa
add
mov
xchg
pop
mov
or
pop
and
inc
jmp
jmp
inc
push
or
or
mov
pop
dec
mov
pop
and
push
mov
idiv
dec
and
push
mov
xor
adc
xor
sub
and
stos
add
loope
imul
and
mov
xor
mov
das
xchg
push
or
(bad)
(bad)
mov
xor
sub
and
outs
sbb
sar
pop
cmp
pop
retf
repz
aaa
push
sbb
outs
jo
adc
outs
push
add
js
sbb
ins
pop
arpl
lahf
sti
mov
inc
xchg
popa
inc
jo
push
xor
add
dec
push
imul
test
dec
loop
and
movs
xor
mul
adc
push
xchg
rol
ins
ins
retf
jg
pop
sub
mov
data16
xor
ret
mov
jecxz
movs
xchg
jbe
leave
dec
das
je
sbb
inc
call
bound
inc
dec
ins
jo
jae
bound
xchg
xor
pop
add
xchg
nop
rcl
pop
nop
ins
loope
aad
stos
push
out
cwde
fsub
int
clts
imul
push
cmp
or
aas
aaa
arpl
mov
imul
mov
dec
add
fwait
cmps
sbb
sbb
mov
outs
add
xchg
cmp
popa
pop
push
push
outs
imul
mov
in
xor
cwde
add
xor
adc
enter
and
add
push
out
add
add
and
(bad)
das
pop
dec
sbb
lods
ins
mov
mov
lock
bound
daa
xor
push
loope
stos
or
sbb
das
test
inc
and
or
sub
les
mov
dec
dec
sub
sub
or
push
and
pop
inc
imul
add
mov
data16
mov
leave
fisttp
inc
inc
push
xchg
es
or
(bad)
add
(bad)
cli
pusha
and
xor
jo
cs
adc
es
ficom
clc
push
mov
dec
outs
sbb
cwde
inc
pusha
add
push
add
sub
ins
fld
arpl
fidiv
iret
inc
inc
bound
cmps
mov
movq
xor
adc
adc
cwde
adc
js
dec
lahf
ja
pop
pusha
and
jmp
(bad)
adc
jbe
inc
outs
pusha
in
dec
out
jbe
sti
(bad)
push
xlat
shl
jae
pop
jg
daa
leave
shl
jae
and
pop
fwait
jmp
dec
rcr
ja
jae
(bad)
mov
inc
movq
sbb
out
inc
imul
xor
outs
cmp
sbb
or
test
sub
outs
jb
jp
(bad)
sbb
xchg
xor
and
loopne
sbb
sub
sub
adc
movaps
jmp
outs
jp
or
std
push
das
xor
add
and
and
cmp
push
dec
push
ss
and
neg
js
push
bound
je
xor
xor
push
jmp
adc
dec
push
dec
dec
sub
imul
in
pop
mov
jp
dec
inc
push
xor
mov
push
popa
popaw
inc
ins
xor
add
xchg
fisttp
and
inc
push
add
stos
or
imul
(bad)
xchg
ret
(bad)
je
xchg
mov
push
pop
and
push
mov
xchg
pop
jmp
pop
out
add
mov
xchg
scas
arpl
inc
pusha
xchg
imul
movs
shr
lods
mov
sbb
cs
stos
out
stos
jmp
sti
loop
and
mov
sub
xchg
xor
add
xchg
adc
pop
in
and
jge
dec
dec
xchg
data16
xchg
adc
(bad)
cmp
das
aas
xchg
hlt
pop
enter
movs
push
push
jg
repz
out
es
mov
aas
push
inc
jle
imul
outs
or
out
xor
ficomp
jb
and
sbb
leave
mov
inc
add
lahf
mov
dec
pop
pop
adc
or
das
and
push
retf
xchg
mov
repz
ret
push
or
xor
sbb
sbb
cmps
cmp
push
dec
and
add
mov
add
push
dec
lds
outs
sub
adc
(bad)
lds
mov
ret
and
jae
add
inc
xor
mov
test
sti
(bad)
es
xchg
or
das
jg
push
mov
out
outs
lods
sub
ja
sub
jg
mov
out
or
or
push
ror
clc
je
popa
jbe
or
imul
out
outs
punpcklwd
add
and
and
sub
bound
out
into
adc
pop
and
or
sub
sbb
mov
or
inc
addr16
je
cld
sahf
ret
push
adc
xchg
out
dec
jge
and
je
pop
sbb
xor
jnp
arpl
jb
imul
je
or
fst
das
push
leave
(bad)
dec
aaa
aaa
jne
ins
divps
push
int3
sub
dec
imul
jnp
jo
bound
push
bound
outs
jbe
lds
test
and
outs
adc
xchg
jmp
jbe
push
cmp
sub
je
ins
call
push
sub
cmps
xchg
test
(bad)
xchg
pop
ds
mov
add
mov
div
aad
mov
pop
pop
sub
or
sub
(bad)
or
scas
fild
nop
or
jge
mov
nop
fild
stos
jg
das
test
add
adc
retf
shl
and
movs
sbb
or
fst
out
adc
xchg
test
(bad)
add
push
(bad)
dec
fcmovne
pop
adc
mov
outs
ret
mov
and
neg
or
das
jmp
loopne
pop
mov
imul
js
xchg
call
push
fdivp
dec
add
adc
add
into
xchg
cld
or
test
mov
adc
ss
sar
popa
add
jmp
inc
xchg
mov
xchg
retf
pop
aas
or
adc
imul
aam
addr16
cs
ins
sub
sti
(bad)
(bad)
(bad)
push
gs
pop
dec
or
aaa
sub
test
inc
loopne
add
add
cli
mov
push
fmul
in
ins
ss
inc
push
repz
ss
hlt
xor
fwait
ins
icebp
js
les
out
add
inc
dec
inc
cmp
push
pop
xchg
mov
push
jae
cmps
fcomp
push
adc
dec
in
pop
inc
add
jb
push
pop
push
mov
or
addr16
(bad)
xchg
push
ret
jne
popa
leave
push
ins
lahf
mov
daa
addr16
gs
bound
fldenv
ins
daa
(bad)
add
rcr
adc
lods
inc
push
inc
rol
push
add
add
add
loope
push
or
ret
xchg
fbld
lahf
add
and
jge
mov
jnp
gs
dec
xor
or
sbb
inc
aas
or
dec
popa
or
dec
jo
and
movs
ins
nop
inc
(bad)
ds
pop
push
jp
push
jg
add
dec
cwde
adc
and
imul
or
push
data16
ja
xor
std
pop
pop
dec
ins
rol
daa
jmp
push
and
and
test
or
aad
jo
retf
mov
out
iret
pop
add
xchg
inc
adc
dec
and
and
sub
add
cmp
add
push
loopne
icebp
cmp
daa
out
pop
push
ficom
addr16
inc
add
xor
push
inc
inc
sub
pop
arpl
inc
pop
pop
dec
inc
pop
mov
dec
aam
inc
inc
inc
idiv
cmp
dec
push
pop
push
dec
inc
pop
inc
dec
inc
push
mov
and
ror
ins
push
and
mov
sbb
call
dec
mov
dec
cmp
cld
je
jbe
loope
mov
sbb
or
dec
jae
imul
call
sahf
add
inc
arpl
imul
inc
push
mov
fs
into
popa
xchg
out
pusha
shr
outs
sub
push
add
fs
(bad)
repnz
repz
fwait
pop
add
pop
nop
sahf
out
iret
jg
inc
(bad)
(bad)
(bad)
jg
out
(bad)
(bad)
(bad)
jmp
jne
jp
test
loope
jo
sbb
jle
jns
imul
cmp
inc
pop
or
push
outs
test
outs
jecxz
push
pusha
pop
loope
test
sti
xchg
out
jns
jae
push
pop
das
jo
repnz
jb
or
rcl
jno
jb
and
ins
jg
inc
loopne
xchg
xchg
fild
aas
pop
sbb
jb
cmp
shl
daa
daa
iret
push
adc
mov
daa
daa
daa
or
daa
daa
add
unpcklps
leave
leave
in
jecxz
sub
leave
leave
leave
enter
leave
leave
leave
leave
test
test
fcmovne
call
cmp
jns
cwde
push
push
jl
xchg
or
jmp
xchg
xchg
sub
or
xchg
xchg
xchg
xchg
dec
clc
add
xchg
xchg
xchg
adc
xchg
xchg
xor
or
xchg
xchg
xchg
and
xchg
inc
in
pop
xchg
xchg
xchg
xchg
sbb
xchg
cmp
adc
xchg
xchg
xchg
sub
xchg
dec
hlt
add
sahf
push
rol
jbe
cmp
cmp
int3
pcmpgtd
cmp
cmp
lods
push
xchg
cmp
cmp
or
cmp
cmp
pushf
arpl
cmp
cmp
fcomp
aas
outs
leave
in
jbe
cs
mov
add
push
call
cmp
cmp
popa
and
cmp
cmp
xchg
or
loop
sbb
cmp
rcl
sub
or
cmp
add
inc
dec
dec
es
retf
in
gs
in
test
pop
in
dec
dec
sbb
in
cmp
dec
dec
dec
mov
in
dec
cli
push
adc
cs
jae
(bad)
in
in
arpl
cmps
in
in
add
dec
cs
sbb
jnp
(bad)
imul
dec
sub
dec
dec
dec
not
xchg
or
pop
ja
cmp
mov
scas
cmp
cmp
pop
xchg
nop
xchg
xchg
or
sahf
or
cmp
outs
daa
mov
aas
das
mov
push
adc
add
adc
inc
jb
mov
and
shl
icebp
xchg
dec
and
leave
test
jmp
dec
and
stc
leave
inc
xor
movs
xchg
dec
and
in
adc
inc
xor
mov
dec
and
and
xor
and
fnstsw
std
ret
dec
and
leave
mov
xor
and
xor
and
leave
fstp
sti
(bad)
and
leave
inc
cmps
out
xor
and
iret
xor
and
leave
inc
lahf
fist
xchg
dec
mov
repnz
aaa
push
pandn
adc
jns
cmps
adc
pop
add
stos
cmp
push
inc
pop
inc
jg
push
retf
xchg
pop
add
dec
in
call
leave
lods
repnz
shl
xor
enter
sbb
and
pusha
add
enter
xor
xchg
mov
or
push
or
fist
dec
fistp
fdiv
sti
xchg
xchg
int3
cmps
bound
xor
push
jge
nop
stos
std
mov
xor
add
test
xor
pushf
jp
jmp
xchg
(bad)
fild
push
test
shl
adc
sbb
fild
dec
or
push
pop
pop
mov
ret
cmps
jecxz
sbb
add
nop
or
dec
sahf
or
or
pop
dec
out
jle
xor
(bad)
sbb
out
rol
idiv
inc
pop
inc
(bad)
xor
sbb
xchg
hlt
pop
data16
iret
ss
sub
in
pop
or
or
in
in
or
add
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
(bad)
(bad)
(bad)
mov
aad
mov
rcl
mov
sub
mov
sbb
jmp
mov
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
(bad)
(bad)
jmp
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
(bad)
(bad)
call
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
call
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
clc
(bad)
inc
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
(bad)
(bad)
dec
movs
mov
sub
mov
(bad)
and
or
adc
(bad)
(bad)
dec
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
lods
(bad)
push
mov
call
xor
jb
(bad)
(bad)
jg
or
mov
cmp
fs
add
hlt
push
imul
ins
sbb
(bad)
(bad)
(bad)
fdiv
test
(bad)
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
(bad)
(bad)
(bad)
jmp
cld
fistp
ficom
gs
aam
pop
popa
mov
into
push
jmp
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
shl
(bad)
(bad)
(bad)
(bad)
jmp
outs
xor
mov
sar
add
in
add
pop
dec
or
cmp
(bad)
(bad)
push
push
stos
inc
add
adc
or
and
test
or
mov
popa
into
push
(bad)
(bad)
(bad)
(bad)
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
(bad)
inc
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
mov
(bad)
dec
arpl
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
lods
(bad)
(bad)
(bad)
push
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
(bad)
(bad)
jmp
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
(bad)
(bad)
(bad)
call
mov
(bad)
jle
shl
push
repnz
addr16
cmps
fld
mov
(bad)
(bad)
(bad)
dec
mov
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
(bad)
(bad)
(bad)
(bad)
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
(bad)
(bad)
(bad)
jmp
es
lds
or
sub
mov
cmps
call
ret
shl
(bad)
(bad)
(bad)
call
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
(bad)
jg
adc
or
adc
mov
jnp
sbb
xchg
or
(bad)
jmp
mov
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
(bad)
mov
ja
outs
ja
mov
out
cli
jo
ud0
cmp
pop
or
adc
sahf
(bad)
jg
jmp
imul
push
js
or
push
add
(bad)
(bad)
(bad)
push
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
(bad)
(bad)
(bad)
(bad)
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
(bad)
(bad)
(bad)
jmp
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
inc
loopne
jmp
outs
sub
mov
or
sbb
add
sub
mov
fs
sub
gs
mov
dec
push
push
std
xchg
(bad)
ds
lods
leave
in
pop
xchg
ins
ss
aas
sbb
pop
std
adc
mov
je
les
and
in
sub
push
xor
mov
stc
and
fidiv
jl
imul
addr16
push
jle
mov
pop
outs
pop
das
pop
inc
test
dec
and
add
dec
add
ins
jmp
outs
jb
jae
ins
bound
int3
push
adc
mov
pop
add
outs
dec
mov
add
retf
dec
pop
pusha
cmc
inc
arpl
sub
ja
and
fnstsw
jne
cmp
cwde
adc
cdq
in
call
enter
or
ficomp
inc
lods
aas
mov
add
push
adc
jl
ja
gs
mov
imul
aam
popa
ins
dec
pop
inc
or
fucomi
js
xor
inc
fdiv
imul
adc
ret
or
outs
pop
and
das
mov
push
inc
push
dec
pop
jb
pop
scas
test
and
pminub
daa
fild
dec
mov
and
and
cmps
push
enter
sti
arpl
lods
push
or
inc
icebp
fisubr
add
push
cld
nop
push
pop
aaa
sub
outs
popa
and
icebp
call
or
or
and
mov
shl
(bad)
cmp
pushf
push
add
or
bound
(bad)
(bad)
pop
add
jle
mov
test
fucom
loope
add
mov
dec
mov
or
push
swapgs
or
jg
das
imul
call
inc
inc
js
daa
(bad)
push
sti
pop
ror
pop
dec
adc
or
dec
int3
nop
sub
push
mov
pop
pop
jecxz
jmp
add
xchg
jne
fisubr
push
shr
inc
dec
xchg
push
push
jmp
arpl
sbb
inc
imul
movs
inc
lods
inc
push
scas
daa
push
jae
inc
sub
arpl
jbe
cmp
pop
push
xor
inc
sahf
das
push
add
dec
or
mov
xchg
mov
es
add
dec
pop
jbe
push
ja
fst
or
inc
aas
dec
pop
pushf
sar
jbe
xchg
inc
or
pop
mov
xchg
bound
xor
sub
repz
aaa
xor
xor
xor
dec
cmp
jge
push
inc
cmp
inc
inc
xor
inc
aaa
inc
sub
lods
ss
mov
or
inc
dec
xor
sub
mov
lahf
xor
add
shr
xor
add
imul
xor
data16
iret
out
(bad)
dec
xor
sub
xor
lods
fcom
cmp
test
das
xor
push
test
cmp
or
cmp
inc
xor
sub
mov
inc
inc
ss
inc
inc
cmp
inc
cmp
inc
inc
xor
pop
xor
aaa
cmp
fucomip
lock
cmp
aaa
inc
xor
in
or
mov
xor
outs
pop
add
xor
outs
mov
xchg
sahf
inc
inc
bound
xor
out
xor
push
lods
ret
ss
xor
lahf
jo
in
out
xor
cmp
add
outs
push
aas
lahf
ss
xor
pop
inc
call
loopne
mov
sub
sub
xor
int3
loopne
sub
lea
mov
aas
aas
push
dec
imul
scas
pop
pusha
and
scas
add
cmps
jne
push
and
fs
cmps
lea
jbe
daa
inc
adc
pop
addr16
sub
jae
pop
lods
test
stos
xor
daa
addr16
add
mov
adc
sub
dec
sbb
addr16
adc
cmps
ret
ins
(bad)
dec
pop
sbb
jnp
test
das
jo
ror
sub
call
mov
mov
jns
call
clc
sbb
sub
popa
ins
loope
push
bound
jb
outs
mov
push
jo
dec
imul
test
rol
and
jbe
(bad)
and
fdiv
inc
add
sub
aad
add
sbb
shl
mov
call
add
adc
scas
not
daa
or
or
sub
jb
ins
inc
stos
mov
cs
cwde
jo
les
dec
xor
(bad)
push
dec
ins
mov
daa
sbb
sbb
test
adc
xchg
cs
scas
aaa
or
inc
scas
nop
dec
fadd
jae
cmc
pop
data16
pop
jbe
cmc
push
or
stc
aaa
ins
imul
jno
enter
push
pand
iret
shl
add
pusha
add
rcr
(bad)
nop
cmp
adc
push
jnp
mov
pop
(bad)
jae
cs
jg
ret
inc
dec
jno
push
inc
adc
stc
enter
adc
or
adc
add
mov
and
fs
rol
in
xchg
and
add
sub
dec
add
mov
in
in
das
inc
hlt
loop
xor
pop
add
mov
add
rol
sbb
xor
pusha
add
add
inc
pushf
mov
repnz
cmp
push
jl
inc
add
push
cs
add
into
mov
xor
das
sbb
add
push
cwde
adc
xchg
and
adc
rcr
sub
sbb
jb
push
sar
rcl
icebp
mov
pop
mov
(bad)
sbb
cmc
dec
neg
jo
jb
in
add
xchg
repnz
loopne
inc
mov
cmp
pop
stc
jl
in
xchg
and
inc
mov
sti
sub
sahf
push
dec
add
enter
add
pop
cmp
in
pop
sub
movmskps
cwde
ror
and
jl
add
xor
jo
cwde
cmp
gs
add
aam
and
or
and
sbb
or
xchg
add
pop
in
and
cmp
mov
pop
je
or
mov
push
xor
subps
retf
retf
and
add
push
cld
imul
in
sbb
cmp
xchg
push
mov
int3
addr16
and
repnz
mov
adc
or
or
adc
jmp
mov
(bad)
out
push
sbb
jb
out
sbb
inc
loop
pop
enter
mov
nop
in
mov
sbb
repnz
in
sub
call
xchg
xchg
inc
mov
mov
add
les
clc
or
adc
inc
adc
inc
mov
or
jb
retf
xchg
or
add
adc
sbb
pusha
adc
or
enter
or
and
inc
add
push
push
loopne
enter
sub
push
xor
push
mov
add
add
add
repnz
pop
pop
add
cmp
repnz
cs
addps
das
mov
inc
mov
(bad)
or
xor
push
or
enter
mov
or
ltr
stc
repnz
or
and
pop
pop
add
inc
mov
fmul
xor
in
push
pusha
pop
mov
mov
pop
pop
lock
and
pop
add
adc
xchg
shrd
fmul
mov
xor
add
movmskps
pop
js
fst
rcl
add
(bad)
repnz
pop
nop
jmp
sbb
int3
push
clc
sti
xor
in
xchg
and
and
jo
mov
ss
add
pop
pop
add
nop
add
bswap
push
stc
jb
sbb
mov
aaa
xor
inc
into
mov
and
test
fdivr
mov
adc
push
mov
jl
push
sub
cmp
in
out
xchg
test
das
sbb
(bad)
mov
jbe
cmp
sub
sub
andps
mov
sub
(bad)
mov
cmp
subps
mov
in
enter
cs
add
sub
xchg
fimul
jl
pop
icebp
xchg
dec
lea
dec
dec
imul
mov
mov
mov
aaa
imul
push
cmps
inc
es
push
pop
push
outs
sbb
jnp
fadd
aas
ss
call
outs
in
inc
push
dec
push
retf
(bad)
out
xchg
loope
inc
sti
ret
pop
push
sbb
sti
adc
jmp
pop
pop
sti
sahf
out
retf
imul
imul
push
shr
xchg
mov
ds
inc
nop
into
lods
ds
addr16
xchg
inc
mov
(bad)
fisttp
sub
aas
inc
repz
ret
out
loope
(bad)
pop
pop
or
loope
cmps
scas
bound
ret
popf
mov
dec
push
(bad)
pop
pop
or
outs
dec
cmp
push
daa
jne
enter
adc
aam
ret
push
jbe
push
pop
dec
pusha
add
pop
adc
cmp
and
test
push
ficom
out
int
ucomiss
dec
add
shr
(bad)
push
mov
add
outs
jbe
popa
mov
aaa
jnp
aaa
sbb
inc
mov
and
shl
out
inc
push
outs
jecxz
in
xor
hlt
daa
(bad)
dec
shl
push
fidivr
or
mov
xlat
push
call
lds
pop
jg
lock
add
inc
pop
dec
pop
push
mov
jmp
dec
es
jbe
push
inc
pop
test
out
aaa
push
fwait
shl
daa
ds
fild
and
pop
xlat
shr
fidivr
inc
fwait
dec
push
xchg
rcl
addr16
nop
push
xlat
fisub
pop
nop
pusha
in
lods
fwait
pop
pop
repz
mov
cmp
push
push
aas
inc
lahf
test
ss
pop
mov
pop
ficom
inc
pop
dec
mov
push
sub
lods
pop
dec
mov
inc
push
adc
test
mov
jecxz
sahf
fdiv
mov
push
mov
das
js
fmul
div
stos
test
mov
ja
js
cs
xchg
inc
mov
(bad)
(bad)
jecxz
cs
sub
cmp
jo
sub
jecxz
das
pop
pop
in
pusha
shl
rol
push
jo
xlat
out
xlat
fs
lods
inc
xchg
sub
sbb
mov
dec
pop
sti
into
add
push
ja
dec
adc
aaa
call
jno
dec
(bad)
push
pop
mov
retf
push
push
fisubr
mov
push
ss
pop
stos
sbb
dec
(bad)
aas
shl
dec
(bad)
out
jnp
and
cmp
je
mov
test
outs
loopne
test
pop
push
loopne
jge
mov
fwait
inc
cmp
jnp
dec
jnp
scas
inc
inc
in
pop
les
nop
jl
repnz
add
add
or
popa
lahf
xchg
retf
ja
xlat
repz
mov
neg
aas
(bad)
mov
dec
into
ret
push
cs
je
iret
push
mov
push
cmps
dec
push
mov
mov
inc
inc
and
push
dec
ds
fcom
loopne
push
out
pop
inc
daa
add
or
stos
push
push
or
mov
pop
inc
mov
loopne
adc
inc
pop
adc
dec
sub
dec
xchg
dec
pop
in
sub
push
cmps
outs
mov
xchg
xchg
dec
inc
add
loope
and
inc
mov
xor
sbb
pop
lods
pusha
test
dec
repz
adc
inc
outs
dec
sub
inc
jnp
or
sub
and
mov
mov
mov
dec
movs
outs
ins
pop
mov
mov
ja
fisubr
(bad)
daa
pop
(bad)
in
mov
loop
mov
or
inc
push
loope
stos
jge
aaa
push
pop
jns
pop
pop
jb
inc
or
das
mov
aas
dec
xchg
sbb
mov
loopne
fwait
jg
jae
pop
mov
pop
mov
aaa
fdiv
mov
ja
inc
xchg
xchg
cmp
out
xor
sti
dec
jg
aaa
xor
mov
daa
dec
inc
xor
pusha
rcl
sti
dec
push
test
dec
inc
dec
pop
bound
pop
in
adc
inc
push
inc
data16
dec
arpl
pop
int
mov
ret
inc
mov
pop
jl
add
pop
mov
cdq
loopne
inc
pop
push
cmp
mov
jnp
lock
test
lahf
add
sbb
jae
jle
mov
adc
inc
mov
fild
dec
dec
lahf
lds
cmp
fisttp
xchg
mov
push
inc
(bad)
(bad)
aas
mov
aaa
aas
(bad)
sbb
adc
cmp
mov
push
add
inc
(bad)
and
shr
pusha
lahf
mov
xchg
dec
outs
inc
das
pop
push
or
(bad)
mov
pop
ret
inc
xchg
das
loopne
adc
retf
sbb
push
pop
cmc
fwait
push
xchg
pop
mov
mov
and
inc
sub
(bad)
dec
inc
adc
iret
fist
push
ins
rol
xchg
mov
dec
inc
push
lods
imul
add
mov
mov
push
jp
inc
mov
rcr
in
aaa
fiadd
pop
mov
sub
mov
push
push
les
or
pop
aaa
xor
out
movs
inc
cmps
dec
addr16
ret
adc
inc
push
and
cmp
mov
aas
dec
xchg
ja
inc
test
xor
push
xor
fwait
les
hlt
not
sub
sub
stos
dec
inc
dec
add
imul
push
mov
add
dec
imul
shr
outs
cmps
fmul
dec
(bad)
lods
pop
ins
add
jg
push
jbe
inc
clc
push
add
maxps
push
mov
movhps
ja
sahf
jno
pop
push
cmp
add
pop
adc
push
xchg
jnp
sub
inc
and
ja
pop
pop
jbe
or
pop
fwait
inc
mov
shl
inc
jmp
(bad)
push
xchg
ins
aad
jg
add
mov
xchg
add
inc
dec
das
pop
dec
in
lods
pop
pop
mov
fiadd
dec
push
pop
shl
and
sbb
inc
mov
push
addr16
jae
pop
adc
cwde
dec
dec
pop
dec
pop
add
push
jns
xlat
bound
fsub
inc
pop
pop
das
push
(bad)
cmp
pop
mov
fidivr
push
pop
(bad)
fild
dec
stos
add
jbe
out
and
fisub
or
push
outs
lods
test
repz
push
daa
mov
lods
sub
fwait
mov
test
pusha
cmps
cs
add
inc
stos
mov
repz
xchg
mov
mov
dec
adc
pop
mov
dec
or
jnp
cmps
inc
cmp
ficom
pop
ja
adc
mov
pop
mov
rcr
scas
dec
dec
or
outs
push
mov
sbb
scas
aad
aas
inc
or
mov
mov
bound
push
xchg
dec
push
mov
xor
ins
xor
add
add
push
inc
stos
adc
out
idiv
mov
inc
mov
mov
ret
addr16
mov
add
pushf
and
cli
pop
popa
add
lods
addr16
sbb
(bad)
push
pop
aas
mov
das
aam
add
aas
shr
cmp
mov
add
add
aas
or
mov
adc
dec
imul
push
pop
push
cmps
dec
push
push
dec
pop
das
pop
cmps
cmp
fisubr
call
mov
ins
add
sbb
mul
mov
xchg
adc
pop
movs
xchg
sbb
imul
push
xchg
sbb
jno
dec
repz
push
stos
or
push
xchg
rcr
xchg
xlat
inc
dec
sub
pop
stos
push
dec
xchg
dec
mov
rcl
test
fisub
fwait
dec
push
daa
push
ins
adc
ins
les
push
jg
in
or
or
add
and
rol
fadd
mov
ins
lahf
dec
mov
mov
mov
pop
shl
sbb
xchg
jnp
dec
sbb
and
aad
fbstp
mov
jecxz
aas
sub
frstor
mov
cmp
mov
adc
imul
lock
adc
mov
iret
dec
ins
inc
out
scas
inc
ins
add
dec
and
push
mov
das
cmps
jbe
inc
sub
sbb
cmovbe
jg
sbb
out
push
add
push
adc
pop
nop
adc
cmp
call
nop
jae
stc
repnz
aas
nop
rcr
loopne
iret
xchg
out
fild
ror
jo
iret
repz
inc
or
iret
xchg
out
inc
xor
ins
xor
cmp
sahf
and
bnd
mov
inc
jo
mov
test
scas
loopne
scas
and
xchg
out
sub
das
inc
jo
das
mov
loopne
cld
loopne
inc
sub
sub
jl
pop
(bad)
cmp
push
dec
in
push
push
fadd
sahf
or
cs
iret
out
cmp
push
push
inc
add
add
inc
sahf
and
(bad)
(bad)
call
add
mov
ja
add
stos
inc
pop
push
(bad)
fbstp
lds
leave
push
pop
add
mov
add
rcr
push
lds
inc
push
xchg
mov
inc
stos
imul
enter
push
jmp
push
enter
mov
push
inc
xchg
push
push
aam
push
ret
enter
dec
lahf
push
or
sbb
jbe
lods
jmp
fild
pop
(bad)
dec
mov
pop
cmp
les
test
fild
mov
dec
ins
xchg
adc
(bad)
push
daa
and
movs
setb
mov
cmp
xor
xlat
mov
or
inc
xchg
sbb
(bad)
push
push
or
movs
push
rcr
fs
lods
mov
(bad)
push
xor
push
fist
jae
pop
push
adc
and
(bad)
outs
inc
jg
lea
mov
adc
(bad)
adc
ins
mov
aas
ja
rcl
leave
push
out
mov
aam
jg
cmp
ins
nop
sbb
fist
hlt
shl
fistp
xor
inc
cmps
xchg
or
cmp
inc
lds
lock
sbb
add
sub
out
fisttp
ret
aaa
sub
mov
xchg
outs
mov
pop
sub
sub
prefetchnta
in
inc
aaa
add
fidiv
xor
aam
push
cmps
aas
data16
test
xchg
test
sub
(bad)
add
aaa
ja
(bad)
fdivr
jecxz
ss
mov
fisttp
xor
or
xchg
jae
adc
add
or
add
mov
ud0
gs
leave
cmp
xchg
mov
pop
rcl
sbb
cmp
outs
or
mov
cmp
stos
movzx
ss
scas
mov
push
jo
mov
add
retf
imul
inc
and
movs
popa
daa
shrd
mov
or
mov
add
cmp
sti
adc
adc
or
adc
gs
and
imul
ins
dec
outs
xchg
add
ss
ins
imul
xchg
add
or
and
inc
sub
sub
or
jmp
mov
ror
jg
sbb
rep
mov
mov
shr
adc
cs
and
cs
sahf
shl
call
xchg
fwait
dec
push
jb
xchg
adc
arpl
inc
fwait
outs
(bad)
ins
fnstsw
stos
mov
rol
ins
addr16
popa
jb
push
cli
shl
cmp
push
and
push
xchg
jae
add
pop
mov
mov
cld
jb
cmp
push
push
addr16
lods
test
push
inc
fs
pop
sub
dec
test
test
fiadd
xchg
sub
jae
arpl
mov
inc
fimul
add
dec
test
or
xor
jns
sbb
inc
outs
gs
dec
inc
add
sub
pop
inc
mov
or
cs
and
sub
jae
es
sub
fcomp
ss
sub
jne
mov
push
add
and
ds
dec
inc
mov
jae
jbe
dec
outs
xchg
lock
or
inc
dec
inc
dec
dec
dec
push
push
xchg
adc
outs
jne
(bad)
or
and
popa
add
pop
imul
add
shl
mov
(bad)
inc
add
push
aam
jns
pushf
xor
xchg
data16
aas
push
push
mov
push
cwde
and
ins
js
push
xchg
ins
movs
mov
inc
and
je
sbb
(bad)
mov
out
inc
loop
hlt
sub
dec
jnp
int3
or
adc
retf
clc
shl
(bad)
adc
or
or
push
aad
push
shl
fs
inc
aaa
into
outs
jmp
sub
dec
inc
inc
daa
fs
addr16
loope
les
inc
adc
cmp
mov
ret
imul
(bad)
aaa
inc
dec
mov
sub
add
sti
int
rcl
jmp
pop
cmp
mov
ja
inc
adc
pop
inc
das
mov
jns
das
pop
cmp
adc
add
push
aam
lahf
push
xor
aam
inc
pop
cmp
aad
aaa
repz
xchg
daa
pop
adc
xchg
mov
scas
movs
addr16
test
xchg
dec
out
cmps
scas
imul
not
ins
js
and
pusha
jnp
jae
inc
lea
sahf
dec
aas
inc
(bad)
push
(bad)
dec
xlat
cmovle
mov
add
inc
nop
pop
inc
push
add
mov
sti
push
stos
inc
les
adc
jns
mov
mov
test
mov
push
pop
jae
pop
dec
aaa
(bad)
mov
call
adc
daa
add
pop
push
loop
pop
adc
push
dec
pop
adc
(bad)
dec
add
inc
lock
inc
sub
in
jge
imul
addr16
mov
push
dec
popa
inc
inc
loop
mov
sub
ret
retf
xchg
sub
dec
lahf
sti
push
push
cmp
(bad)
fcom
ret
das
dec
(bad)
(bad)
sbb
popa
xchg
ss
fwait
inc
adc
scas
dec
inc
mov
mov
add
jb
pop
inc
adc
sub
jl
mov
ins
pop
jo
lods
fimul
dec
test
inc
dec
push
dec
dec
jle
sbb
push
outs
and
sbb
je
dec
lock
pop
jmp
add
or
into
adc
dec
push
push
lock
push
les
das
ja
jg
adc
push
or
push
ins
jae
sbb
mov
je
jnp
outs
dec
jne
push
or
add
mov
push
cs
add
jae
jb
xor
xor
out
adc
sbb
out
dec
js
inc
pop
push
pop
pop
pusha
ret
inc
scas
gs
gs
jo
jns
xchg
fs
push
inc
loopne
mov
enter
xchg
inc
test
shl
dec
push
(bad)
pop
out
cmp
mov
das
fistp
hlt
lahf
fcmovnu
lds
inc
js
bound
inc
mov
outs
inc
ins
fs
test
xor
pop
out
pusha
and
cmp
or
adc
call
popa
mov
xor
fs
mov
or
push
push
or
outs
add
loope
(bad)
out
push
hlt
call
add
pop
push
enter
aaa
loopne
inc
pop
loope
mov
pop
pusha
out
push
add
aas
cmp
pop
das
and
pop
repnz
xor
inc
and
mov
adc
push
inc
and
pushf
inc
shl
arpl
fild
and
enter
pop
pusha
adc
sub
in
cs
pop
add
cmp
and
pop
enter
add
sub
in
mov
adc
nop
das
pop
jb
push
sub
mov
push
dec
jp
add
jo
jl
fsubr
shl
(bad)
adc
lock
fild
push
adc
retf
test
pop
xor
or
add
add
pusha
lsl
movaps
out
sbb
push
and
mov
das
sbb
cs
sbb
je
inc
push
stc
inc
das
cmp
dec
pusha
not
or
add
pop
jnp
jns
add
das
pop
pop
jns
push
push
out
dec
add
dec
sahf
popa
das
add
add
push
push
inc
pop
cmp
fiadd
xor
out
std
or
inc
das
dec
sar
dec
pop
and
jl
ds
iret
xor
adc
pop
in
jno
cmp
hlt
inc
les
data16
pop
and
pop
add
enter
xor
add
inc
sub
inc
data16
popa
push
cmp
mov
pop
dec
push
push
mov
xchg
into
jne
fisub
fcomp
jge
ins
and
sub
ror
popa
pop
push
inc
fwait
jge
fstp
outs
pop
je
and
push
mov
fs
push
sti
arpl
outs
gs
lds
aam
out
cs
sub
inc
sub
push
rcl
je
mov
pop
daa
ret
daa
test
sub
out
outs
ss
or
and
push
inc
out
popa
bnd
cmp
pop
ret
jbe
xchg
push
xor
sahf
inc
cmc
and
adc
adc
clc
arpl
outs
push
jo
js
mov
jo
(bad)
outs
adc
push
sub
cwde
or
jne
add
mov
(bad)
pop
jae
or
sbb
push
jae
sti
pusha
fwait
xor
jns
call
or
dec
gs
pop
adc
push
adc
inc
aaa
mov
cmp
aaa
ds
or
inc
jmp
xor
xor
push
arpl
jb
ret
jmp
(bad)
xor
dec
push
lea
(bad)
dec
neg
js
fisubr
imul
sbb
adc
cmc
adc
ins
push
int
call
push
add
sub
movs
push
das
push
rol
jbe
cmp
add
test
mov
mov
jne
sbb
imul
mov
sub
loopne
retf
inc
test
jne
inc
pop
shl
iret
jae
lods
loopne
cmp
out
clc
add
or
push
ja
out
in
(bad)
fwait
jl
in
shr
js
inc
mov
cmp
mov
xor
arpl
adc
xor
or
shr
and
sbb
add
stc
add
fcom
pop
pop
shr
push
jne
inc
jle
mov
add
jne
daa
adc
xchg
mov
test
jo
je
inc
outs
data16
sahf
or
jle
fdiv
pop
pop
cmps
inc
mov
inc
es
loopne
pop
shl
mov
jg
lock
inc
pop
loop
push
clc
clc
add
xchg
sub
rol
xlat
dec
jp
pop
ror
js
add
mov
pop
scas
outs
ins
cmp
cmp
add
fbstp
xchg
not
cmc
push
test
pop
push
je
aas
dec
sar
es
xchg
dec
xchg
std
mov
push
xchg
xchg
add
inc
fmul
movs
or
sub
popa
push
adc
ret
push
loopne
pusha
test
test
push
xor
pushf
rol
add
lock
aas
addr16
outs
aam
ins
arpl
mov
jns
dec
jne
enter
jmp
rsqrtps
pop
jge
sbb
sub
mul
cmc
pop
adc
sbb
popa
movs
test
xor
dec
and
in
jg
and
xchg
inc
push
add
sub
(bad)
pop
or
das
out
push
pop
adc
aaa
adc
in
xor
arpl
mov
or
dec
sbb
sub
mov
in
in
cli
pop
cmp
push
add
add
cmp
sub
aam
push
shr
icebp
ret
fsubr
and
cmp
cmps
mov
push
dec
pop
push
push
dec
push
movlps
in
cld
mov
sbb
mov
hlt
add
pop
and
ins
mov
mov
adc
fwait
aas
mov
cmp
loopne
push
test
mov
pop
stos
mov
add
inc
clc
or
inc
fmulp
push
sub
jg
sbb
pop
loop
(bad)
ss
jae
xchg
pop
mov
daa
xchg
add
movs
add
pop
out
outs
add
or
cli
mov
pop
imul
ins
xor
mov
bound
cmp
or
xchg
imul
add
out
imul
fucomi
daa
adc
lea
(bad)
(bad)
dec
(bad)
sub
movs
aaa
cmp
xor
aas
sub
mov
xlat
mov
stos
test
inc
cmps
imul
or
push
and
(bad)
pop
stos
pop
dec
cmp
xchg
or
popa
jno
clc
aas
inc
mov
call
jmp
push
and
mov
mov
xchg
iret
dec
dec
mov
aam
dec
shr
inc
cmp
push
nop
jno
or
out
shl
fs
fsubr
loopne
fld
ins
inc
cmp
leave
aaa
push
push
pusha
mov
dec
dec
and
ins
and
pop
in
push
inc
pop
mov
pop
and
pop
aam
out
add
mov
adc
jbe
xor
js
pop
cmp
and
jb
push
sti
mov
inc
dec
push
pop
outs
push
jle
retf
stos
and
add
imul
pop
(bad)
pop
push
and
cmp
out
das
xor
lock
mov
and
cmp
xor
idiv
ss
jo
cmp
idiv
test
jnp
sahf
int
cmp
jbe
push
and
fidivr
outs
inc
inc
pusha
iret
push
or
std
scas
jne
pusha
shr
fadd
add
dec
jle
loope
pop
and
sub
jne
and
xor
xchg
dec
clc
push
pop
inc
data16
and
rcr
add
jae
adc
scas
repz
rcr
xor
or
mov
sbb
xchg
js
scas
jae
and
mov
or
mov
out
sbb
mov
repz
jle
cmp
dec
pop
pop
cwde
fcom
jg
add
out
and
sub
inc
push
or
mov
push
adc
test
sub
movs
push
lock
ja
or
test
jns
or
or
sbb
mov
pop
or
dec
les
and
sbb
add
mov
jecxz
jae
es
mov
jo
lods
jo
ret
pop
ror
jns
sub
push
or
adc
pop
sub
sbb
cdq
xchg
mov
mov
dec
pop
imul
pop
xor
cmp
cwde
gs
jmp
pop
(bad)
mov
mov
cwde
add
out
or
fcomp
imul
and
in
add
and
into
ret
sub
mov
mov
stos
xor
jge
outs
xor
mov
add
jne
aam
xor
cmp
lahf
repz
push
adc
out
jo
pop
sbb
mov
push
mov
cmp
push
or
jne
cmp
aas
repnz
das
inc
cs
or
mov
sub
aaa
pop
jbe
inc
ds
sbb
sub
jmp
sub
add
add
jo
push
ret
push
dec
nop
cmp
lahf
pop
leave
add
in
inc
push
dec
inc
add
sub
in
in
sub
or
mov
adc
push
cmp
xor
push
mov
test
sbb
push
in
inc
cs
mov
(bad)
sub
out
loope
add
mov
pop
pop
inc
jle
das
mov
add
shl
pusha
(bad)
inc
cs
pop
push
jmp
outs
pusha
or
pop
mov
dec
jns
popf
pop
pop
lea
pop
loopne
and
pop
and
cmp
sbb
inc
lods
jno
add
test
call
dec
push
mov
les
push
jae
loopne
icebp
sub
sahf
shr
inc
or
fcom
mov
push
(bad)
daa
aas
pop
ret
xor
jne
daa
push
ss
cmp
in
jnp
push
jmp
inc
add
add
es
dec
jo
dec
push
mov
inc
xchg
jns
arpl
adc
lahf
inc
and
arpl
or
fcom
dec
ins
ins
mov
pop
inc
inc
jg
push
outs
in
jb
popa
pop
das
lea
inc
inc
mov
fcom
jmp
cld
mov
xchg
cmp
adc
sbb
fwait
jno
adc
mov
pop
ret
retw
cmps
or
and
add
mov
inc
cmp
pop
sub
inc
js
(bad)
lods
and
enter
mov
jmp
xchg
xor
mov
add
push
jne
inc
out
test
test
test
lods
sub
das
punpckhdq
add
outs
repz
std
lods
jo
push
jo
rep
mov
adc
pusha
push
mov
nop
ins
lock
movs
outs
mov
xor
ins
mov
pusha
adc
and
add
iret
mov
shr
loopne
inc
cmp
mov
mov
adc
xchg
iret
jnp
imul
ror
xor
adc
fsubr
adc
aam
pop
add
cmp
ja
das
pop
push
adc
bnd
fimul
ins
add
push
jp
add
in
push
cld
fs
adc
lds
inc
shl
and
stos
js
out
popf
jge
mov
xor
or
inc
iret
inc
sbb
(bad)
fwait
call
rol
test
fcomp
adc
aaa
icebp
fnstcw
jo
and
fwait
outs
xchg
mov
retf
ins
shl
push
jmp
ret
mov
xor
shl
push
inc
lahf
sbb
add
adc
push
jo
sbb
pop
xor
pop
pop
call
cmc
lock
enter
xor
xor
push
mov
and
jo
mov
cwde
or
(bad)
loopne
jp
push
pop
inc
ret
jns
enter
jecxz
(bad)
scas
inc
fisub
movs
jmp
cmp
arpl
jmp
mov
mov
loop
or
std
call
scas
push
mov
fist
push
das
sub
and
lea
retf
or
ins
jecxz
adc
repz
mov
push
dec
ret
out
jg
jecxz
fnstcw
movs
dec
test
pop
std
jo
dec
xchg
psubusw
push
lock
mov
mov
inc
lods
xor
pusha
jae
out
nop
pusha
loopne
xor
sub
mov
js
into
mov
mov
adc
lock
mov
pusha
aam
push
cmp
rcr
dec
and
inc
jb
add
cmps
rcr
js
test
add
jns
sti
pop
xor
inc
pop
sti
mov
fs
pop
dec
hlt
in
movs
call
dec
mov
(bad)
test
rcl
xchg
call
pop
add
aas
mov
cmps
cmp
out
push
adc
add
add
jns
out
or
adc
inc
ss
std
and
and
bound
jb
pop
clts
ret
add
push
mov
mov
add
add
push
adc
push
mov
ja
js
nop
out
add
push
add
add
pusha
daa
iret
rcr
mov
push
mov
jge
outs
je
pop
das
pop
shr
push
mov
or
inc
or
adc
jnp
jnp
push
adc
push
dec
movd
mov
mov
movlps
test
push
nop
adc
(bad)
loopne
div
push
push
xor
push
adc
push
ins
out
or
loopne
mov
adc
outs
adc
ds
adc
aas
adc
dec
pop
lock
mov
push
sbb
ds
jns
js
adc
mov
mov
cmp
jge
pop
jl
jge
jge
push
jle
inc
add
inc
and
push
stos
sbb
sbb
inc
push
(bad)
stos
fs
dec
ins
sbb
pop
push
mov
add
push
mov
inc
call
sub
js
mul
and
xchg
push
int3
sbb
pusha
dec
pushf
adc
pop
outs
ja
das
inc
add
pop
(bad)
pop
push
pop
inc
mov
rcl
xchg
mov
dec
fisub
adc
test
add
pop
mov
and
fnstenv
mov
popa
iret
bound
(bad)
mov
aas
adc
add
cwde
das
fistp
mov
jo
js
cld
outs
jne
xor
and
push
(bad)
cmp
jle
sar
push
push
push
push
lock
add
push
loopne
xor
jae
sbb
lods
in
ja
push
sbb
xor
imul
sub
xchg
inc
fwait
mov
dec
or
gs
mov
cmp
bound
add
fimul
mov
or
pop
ins
adc
stos
or
in
cmp
push
mov
jge
nop
call
(bad)
icebp
iret
out
push
ins
jne
outs
pushf
sbb
jmp
mov
dec
loopne
add
stc
ins
in
call
pop
xchg
mov
inc
xchg
movs
dec
or
push
pop
out
dec
push
mov
outs
adc
xchg
push
dec
dec
test
sbb
xor
outs
sahf
loope
test
mov
pop
xchg
mov
xor
xor
(bad)
xchg
movs
mov
or
cmp
test
push
cmp
repz
popa
ins
and
jbe
pop
outs
and
ret
imul
push
fwait
xchg
mov
mov
add
xor
adc
data16
sbb
push
inc
dec
loopne
jg
mov
inc
inc
and
inc
pop
pusha
aas
in
dec
dec
inc
xor
push
das
dec
dec
push
push
dec
lods
adc
inc
out
aaa
cwde
lods
add
dec
push
xor
cmp
mov
pop
(bad)
bound
data16
jae
sub
xor
dec
(bad)
push
inc
int
dec
in
push
jae
sbb
ss
mov
add
dec
cmp
dec
xchg
dec
movs
push
les
sbb
sar
pop
daa
ficomp
setnp
and
xchg
sti
mov
inc
pop
ficom
and
add
lods
or
inc
ds
jo
addr16
sbb
xor
jecxz
rcr
xchg
sub
push
outs
es
mov
fwait
push
pop
push
inc
and
jmp
or
mul
inc
xor
jne
and
out
inc
sti
cmp
sbb
mov
pop
jb
test
push
jnp
push
mov
xchg
and
push
lods
push
sub
inc
pop
imul
xlat
inc
dec
sbb
ret
div
mov
loop
inc
add
outs
sbb
fild
mov
or
pop
cs
mov
xchg
push
pop
add
aas
pop
pop
pusha
add
xor
stos
daa
pop
mov
shl
or
sbb
adc
sub
mov
mov
adc
adc
push
rol
addr16
push
test
xchg
aam
jnp
ins
push
gs
mov
adc
sbb
adc
movs
(bad)
adc
mov
pop
xchg
and
inc
ret
ss
dec
mov
cs
daa
jae
cmp
push
ret
in
int
popf
movs
inc
and
inc
dec
push
inc
mov
call
inc
pop
push
sub
test
fild
mov
fcomi
add
iret
pop
mov
mov
repz
and
iret
out
ss
pusha
lock
push
xchg
out
cmp
mov
mov
loopne
mov
mov
js
ss
fisttp
mov
mov
mov
mov
nop
into
repz
adc
dec
shl
nop
test
popa
stc
dec
shl
push
push
js
sbb
lock
imul
sub
cmp
rcr
mov
cmp
and
stos
xor
and
xchg
mov
lea
sbb
jbe
jge
loop
gs
adc
adc
mov
inc
jb
rcl
mov
add
dec
mov
push
mov
rcl
push
sbb
(bad)
push
scas
inc
dec
mov
pop
mov
adc
or
push
xchg
inc
xchg
jo
inc
mov
ret
(bad)
and
add
imul
out
cmps
mov
or
cmovns
hlt
inc
jne
pop
xor
out
inc
jb
outs
xchg
push
dec
fdiv
lahf
pop
push
pop
jecxz
das
add
das
add
lods
bound
inc
ds
xor
add
jo
add
xor
cmp
sysret
int
pop
add
pop
bound
sbb
cmps
cwde
mov
dec
dec
push
cmp
test
call
push
and
or
mov
jbe
inc
test
cmp
or
scas
loop
loopne
lods
inc
add
pop
retf
dec
xor
stos
test
loop
dec
sub
arpl
jo
adc
sub
sub
sub
jge
outs
pop
jne
sbb
cmp
and
mov
push
rcl
and
je
imul
mov
add
loope
cwde
xchg
mov
stos
and
repz
arpl
jae
mov
int3
cwde
mov
cs
fsubr
in
mov
mov
sbb
mov
ins
rcr
outs
popa
pop
in
test
add
dec
addr16
sub
push
mov
ins
lahf
mov
push
fiadd
std
sti
ror
pop
iret
mov
loop
mov
fucomi
add
jp
leave
xor
ds
test
jo
fwait
inc
lahf
ins
jne
xchg
rol
pop
add
adc
add
stos
out
inc
mov
adc
lods
shr
pop
push
mov
imul
aaa
retf
imul
loop
aas
popf
pop
pop
sbb
xchg
jecxz
fs
lods
add
lods
mov
dec
mov
xor
cmp
jg
ror
jecxz
pop
js
fwait
inc
push
addr16
inc
xchg
xor
or
ds
fadd
and
jl
inc
das
sub
inc
fwait
pop
or
sub
ja
dec
or
push
daa
nop
push
inc
jbe
popf
lods
ss
leave
aaa
inc
scas
cwde
adc
or
outs
mov
clc
aaa
sbb
push
mov
push
pusha
or
push
jb
pop
dec
inc
or
fisubr
push
sub
push
popa
cmp
pop
push
push
inc
dec
aaa
push
jae
xchg
mov
in
fld
pusha
es
call
sahf
pusha
lock
and
out
int
in
out
dec
out
out
adc
int
jge
add
shl
nop
repz
mov
mov
push
nop
mov
jo
xor
clc
mov
mov
mov
jle
clc
or
adc
out
mov
js
movs
xchg
mov
punpcklbw
in
addr16
aam
lods
jo
xor
std
fs
cmps
rcl
dec
sbb
xchg
and
sub
push
loopne
and
or
inc
stc
sar
push
sub
pop
mov
or
cmp
mov
and
push
enter
and
mov
cli
shr
pop
pop
sahf
mov
ins
addr16
imul
leave
sub
(bad)
std
or
cs
sub
sub
sub
fdivr
cmc
pop
add
dec
inc
inc
inc
sbb
inc
dec
and
lods
dec
bound
sbb
pop
sbb
fiadd
cmp
and
inc
and
out
sub
xchg
daa
push
imul
imul
add
xor
push
pop
jo
adc
int
adc
test
hlt
sub
or
mov
test
bound
cld
fidiv
data16
dec
xchg
les
js
pop
push
lods
es
fisubr
pop
dec
mov
mov
div
dec
xchg
dec
inc
dec
or
push
pop
add
jge
and
mov
ficomp
repnz
daa
(bad)
pop
push
stos
outs
jg
scas
inc
jns
mov
fstp
lock
popa
push
dec
dec
push
pop
inc
pop
and
(bad)
loopne
pop
inc
push
int
mov
push
inc
mov
shl
mov
jp
xchg
mov
pop
pop
ds
pop
and
add
pop
les
test
outs
ins
(bad)
pop
ins
jno
inc
pop
add
adc
pop
add
jp
add
push
leave
pop
and
jae
ins
push
je
jae
stos
and
out
xchg
test
sbb
xchg
rcl
jo
adc
into
add
ins
fisubr
sub
and
jns
lahf
out
mov
rcl
mov
shr
iret
dec
adc
push
lock
ins
mov
jnp
cmp
hlt
mov
rol
lea
sub
jb
outs
fwait
or
push
aaa
jo
call
and
jb
jmp
pop
inc
adc
mov
sbb
les
or
ds
sbb
inc
inc
push
test
push
xlat
scas
adc
push
or
xchg
repnz
push
push
pop
dec
add
jae
inc
fwait
add
jbe
pop
pop
mov
cmc
out
shl
lods
lods
adc
sbb
(bad)
push
popa
adc
sub
push
jmp
hlt
ret
repz
cs
scas
outs
and
call
sub
jo
inc
inc
inc
sub
not
test
ss
push
cmps
lock
arpl
sbb
jnp
push
cmps
ja
cld
lock
daa
inc
jne
jmp
inc
push
retf
test
adc
mov
xchg
call
sub
pop
aad
fmul
test
adc
cmp
imul
ins
jle
xlat
push
push
and
aas
push
dec
ins
les
push
daa
ret
inc
or
jo
div
adc
jmp
pop
pop
jne
cmp
sahf
daa
popf
cdq
rol
inc
pop
push
add
push
xor
dec
fst
imul
test
iret
out
push
or
stos
clc
in
fadd
loop
int3
mov
nop
ins
ss
loope
pushf
nop
xchg
cmp
dec
lods
pop
nop
push
dec
jo
cmps
jl
dec
ss
sbb
enter
loop
mov
popa
add
sbb
rol
rol
add
or
pop
and
and
xchg
lock
fldenv
js
stos
(bad)
jecxz
cmps
arpl
jne
cmp
aaa
jb
rcr
std
or
mov
js
mov
jae
pop
ltr
add
dec
sbb
pusha
jnp
mov
pop
sub
or
aaa
inc
and
jge
sbb
xor
inc
je
dec
or
mov
call
mov
or
mov
sahf
inc
cmp
xchg
retf
or
or
movs
repnz
faddp
or
(bad)
mov
adc
sub
jae
scas
push
or
xlat
cmp
jp
fwait
and
jae
sahf
mov
fdiv
push
in
(bad)
or
add
mov
aam
xor
mov
cdq
loopne
idiv
cwde
ror
nop
mov
sti
sahf
cmp
push
ret
mov
xchg
xchg
rol
xchg
gs
aas
fs
or
addr16
xchg
push
dec
lahf
xor
nop
dec
call
add
push
sub
fwait
and
pushf
lock
adc
push
add
sub
cmp
ja
sub
mov
pop
or
push
daa
(bad)
bound
jo
movq
xor
je
or
daa
or
adc
push
rcr
nop
push
push
sahf
pop
mov
xor
add
xchg
int
mov
test
adc
pushf
outs
sbb
pcmpgtb
xchg
pop
enter
cdq
sub
pusha
test
xor
pop
jb
adc
push
(bad)
stos
mov
push
popa
fnstsw
mov
ud2
iret
xor
sbb
mov
rol
(bad)
push
mov
fs
shl
fstp
inc
rcl
inc
call
sahf
ud2
and
push
adc
scas
adc
pusha
lods
in
or
add
push
retw
in
es
aas
rol
adc
sub
mov
adc
shl
enter
(bad)
nop
addr16
push
shl
jo
iret
test
rol
mov
lock
ins
rcl
or
rol
push
jg
mov
bound
jecxz
arpl
inc
imul
sub
jbe
sub
adc
shl
jmp
or
imul
or
es
scas
stos
xchg
outs
dec
aaa
pop
xchg
and
dec
mov
pusha
out
cmps
push
loopne
imul
push
cmp
add
xchg
test
imul
fwait
cli
xchg
(bad)
and
dec
ss
cmps
daa
jae
dec
clc
sbb
mov
dec
and
(bad)
movs
sub
xor
mov
cmp
inc
jl
das
jecxz
fild
inc
into
add
aaa
push
push
rcl
push
jns
xchg
aaa
and
or
mov
sbb
arpl
cmps
mov
cs
push
jg
shl
jns
out
enter
mov
ins
pop
push
dec
cmp
sbb
sub
xchg
sbb
and
add
outs
out
dec
jae
sbb
dec
fld
inc
mov
ss
sub
sbb
and
(bad)
pop
mov
xlat
cmp
xor
cmp
xchg
jbe
pop
add
push
push
sub
scas
mov
inc
ja
xchg
movs
hlt
sub
xor
sbb
jmp
fst
inc
call
mov
mov
inc
push
push
push
lock
(bad)
pop
add
inc
and
push
ja
inc
xchg
mov
push
enter
inc
ret
dec
das
xor
xchg
dec
lahf
ins
mov
dec
pop
(bad)
fadd
bound
xlat
sub
jne
xchg
or
(bad)
js
lds
adc
popa
jb
data16
and
add
loope
push
loop
jecxz
fs
mov
loopne
ss
xchg
ror
in
cmp
and
ret
ret
adc
mov
les
dec
pop
ins
popf
stos
addr16
arpl
shl
cmp
inc
lock
(bad)
sub
xchg
sbb
sbb
mov
ins
popa
pop
mov
dec
sub
ja
mov
jbe
outs
ins
mov
sub
xchg
mov
push
sahf
add
xor
push
adc
xchg
(bad)
arpl
les
inc
cmps
popf
loop
push
jne
jmp
dec
bound
jb
(bad)
leave
inc
and
adc
sub
mov
mov
pop
xchg
retf
sbb
mov
adc
(bad)
lock
sbb
sub
(bad)
adc
repz
out
fldcw
add
clc
pusha
cmc
xor
push
loopne
iret
sti
xor
cli
mov
cmp
ja
sti
inc
repnz
repnz
repz
repz
cmps
cmc
hlt
adc
mov
fmul
and
aaa
push
mov
pop
inc
ret
pop
out
(bad)
out
lds
aas
and
pop
jnp
inc
dec
xchg
pop
or
cmp
pop
cmp
add
pop
pop
movs
or
push
adc
sub
and
loope
(bad)
bound
sub
(bad)
sub
adc
es
jo
outs
adc
retf
(bad)
jae
sub
(bad)
adc
addr16
push
push
xchg
test
es
inc
cld
inc
add
sub
inc
sub
push
daa
xchg
(bad)
sbb
mov
pusha
inc
and
cmp
ins
mov
loop
nop
add
jmp
xor
jae
bound
adc
and
push
cmc
mov
push
data16
jnp
cmp
xor
xchg
les
push
xor
jae
rcr
lds
addr16
adc
inc
inc
sub
jae
and
rcr
dec
jno
or
inc
push
inc
xor
ror
pop
lds
and
jo
mov
pop
inc
or
inc
into
adc
sub
je
or
and
or
cmp
jnp
out
retf
mov
or
add
xchg
mov
sahf
and
cld
loopne
mov
or
or
sbb
(bad)
xor
pushf
jbe
mov
sbb
xchg
sar
mov
fcomp
bound
xor
(bad)
not
mov
test
test
outs
pop
shl
dec
scas
arpl
inc
(bad)
adc
dec
rol
dec
and
leave
pop
out
ret
ins
cmp
in
xor
cs
popf
loop
rcl
cmp
push
mov
aas
xchg
add
pop
jmp
mov
adc
movs
push
fidiv
icebp
ror
mov
sahf
les
sbb
cs
inc
pusha
push
ds
mov
inc
adc
xor
data16
arpl
push
inc
mov
call
ror
into
ss
mov
fldcw
mov
push
push
push
dec
inc
push
lock
mov
and
add
mov
(bad)
fmul
and
adc
xor
mov
pop
shl
jne
dec
popa
jo
adc
iret
inc
bound
ins
jmp
(bad)
adc
cs
dec
mul
cmps
bound
imul
rol
pop
or
mov
ret
mov
jae
jns
and
jne
inc
ja
and
(bad)
jae
imul
xor
nop
inc
mov
and
xchg
jg
jbe
inc
pop
ds
jecxz
inc
mov
pop
pop
(bad)
add
xchg
mov
or
or
aam
imul
test
mov
add
and
inc
mov
(bad)
fadd
addr16
dec
inc
inc
addr16
pop
or
dec
push
mov
jg
and
xchg
aam
push
inc
outs
inc
inc
pop
inc
inc
push
shl
inc
inc
push
inc
push
arpl
fstp
pop
and
popa
aas
inc
fdivr
pop
inc
mov
dec
dec
push
daa
pop
dec
push
and
xchg
dec
push
inc
ins
sahf
test
push
inc
push
push
aam
sbb
repnz
push
daa
sbb
mov
les
dec
scas
pop
add
jge
data16
pop
dec
pop
fcom
push
pop
add
or
call
dec
push
dec
js
gs
fild
push
dec
push
daa
out
sub
push
(bad)
ja
rol
dec
jb
clc
leave
dec
inc
dec
inc
dec
push
iret
pop
int3
ins
fadd
das
dec
and
lock
dec
dec
es
pop
pop
aam
and
inc
dec
push
adc
jg
inc
mov
pusha
inc
push
dec
iret
loopne
fdiv
adc
sub
xchg
adc
test
iret
outs
push
or
push
lods
mov
or
pop
je
test
ins
ins
pop
pop
(bad)
pop
pop
aam
mov
push
push
lahf
pop
push
cmp
int
pop
inc
inc
dec
das
push
dec
mov
sbb
push
outs
sbb
xchg
ror
daa
pop
push
pusha
cmp
push
or
dec
(bad)
sub
dec
inc
push
aas
daa
dec
sub
test
sbb
inc
dec
lea
cdq
inc
inc
push
js
rcr
or
sbb
sbb
stos
int
push
mov
dec
push
lahf
mov
aaa
and
mov
pop
ja
data16
sub
mov
shl
outs
lods
(bad)
push
push
inc
inc
daa
push
pop
shl
adc
(bad)
pshufw
pop
pop
inc
inc
stos
xor
push
dec
push
inc
pop
scas
push
jns
(bad)
dec
fldenv
lock
pop
pop
push
push
adc
pop
sub
xor
call
cs
fiadd
test
iret
push
imul
ss
inc
adc
add
inc
fmul
mov
fsub
xor
nop
stos
int
mov
push
addr16
mov
dec
dec
repz
xchg
or
push
push
mov
das
jo
pop
push
movs
data16
test
dec
lds
ficom
in
cmc
pop
push
add
daa
pop
inc
fcmovbe
mov
push
and
and
push
mov
fadd
mov
sbb
push
dec
jl
fadd
xor
pop
pop
push
and
fcmovnu
fdivr
std
aaa
imul
popa
sub
push
dec
inc
xchg
dec
in
add
bound
or
push
nop
sub
popa
adc
add
mov
push
pop
mov
fst
or
pop
pop
xchg
mov
push
cmc
aas
add
vpmaddwd
mov
inc
rcr
test
test
pop
leave
aaa
xor
mov
push
pop
cdq
shl
jne
mov
rcl
pop
inc
out
sbb
adc
sbb
test
ins
push
add
out
or
jge
fsubr
push
iret
and
jle
inc
dec
inc
test
cmps
dec
dec
or
xor
aaa
pop
pop
in
dec
imul
pop
pop
dec
inc
popf
xchg
xor
daa
mov
add
out
add
outs
inc
test
pop
icebp
mov
sbb
pop
adc
popf
pop
or
test
sbb
sahf
inc
(bad)
stc
daa
nop
inc
pushf
adc
pop
in
(bad)
push
loopne
sbb
inc
daa
dec
in
hlt
sub
nop
pcmpeqd
inc
push
dec
dec
dec
scas
pop
dec
sbb
xor
(bad)
pop
dec
push
inc
inc
jo
inc
hlt
dec
dec
push
pop
xor
push
add
inc
jo
pop
push
or
test
(bad)
pop
fild
mov
loope
push
(bad)
ins
mov
shl
push
xor
push
dec
add
retf
push
daa
push
test
inc
inc
jo
sbb
in
inc
mov
bound
psrlq
hlt
push
dec
setae
addr16
add
cmps
shl
add
call
and
add
mov
jb
or
or
xchg
and
or
sbb
jb
pop
adc
cmp
xor
xchg
and
and
adc
add
sar
repnz
xor
int3
xor
test
cwde
mov
jo
leave
in
cmp
dec
cmp
mov
sbb
sbb
pop
enter
in
aam
shl
cmp
lods
and
xchg
and
sub
inc
sub
jb
enter
cs
add
and
jl
clc
xor
aaa
fdivr
enter
xchg
inc
mov
add
cmp
pusha
xchg
enter
mov
mov
sbb
or
enter
shl
sbb
repnz
add
mov
add
add
add
add
in
inc
pop
xor
sub
sbb
and
sbb
adc
cld
adc
adc
jb
enter
push
int3
pop
mov
cmp
or
jl
in
xchg
and
add
dec
add
add
add
xchg
mov
pop
int
or
or
rcl
cmp
enter
and
inc
mov
and
and
in
xchg
daa
dec
sub
and
pop
pop
mov
or
add
add
clc
add
xchg
and
in
add
add
add
enter
mov
and
js
or
cmp
enter
push
adc
add
and
jl
call
loope
jb
enter
jecxz
in
in
mov
js
push
xor
enter
cmp
add
inc
sbb
inc
mov
popa
add
hlt
(bad)
loopne
int3
fs
xchg
and
mov
jns
mov
or
fs
fst
add
jge
std
jb
in
jl
adc
or
leave
clc
pop
add
in
sbb
sbb
das
enter
add
retf
and
mov
mov
sbb
fidivr
pop
or
fbld
adc
adc
mov
sub
sub
push
ins
sub
nop
js
movs
iret
or
lods
(bad)
(bad)
xchg
push
pop
cmps
xor
rol
fdiv
sub
movups
push
pop
addr16
add
mov
ror
out
inc
cmp
mov
pop
xor
mov
pop
inc
xchg
adc
test
iret
mov
pusha
xlat
fs
adc
outs
or
jne
jo
or
jmp
xchg
(bad)
add
jmp
ins
push
adc
ficom
inc
jmp
sbb
ins
(bad)
or
mov
or
push
sbb
adc
jo
xchg
and
or
mov
add
das
outs
popa
cmp
xor
pop
addr16
push
jne
gs
push
shl
je
adc
movs
fnstcw
rcl
shl
jnp
pop
pop
mov
test
xchg
fstp
test
arpl
inc
inc
or
dec
pop
xchg
push
les
pusha
push
(bad)
jbe
adc
jne
lods
punpckhdq
xchg
xor
xchg
fwait
out
inc
mov
and
ins
add
inc
outs
and
repz
fisub
fs
shr
mov
dec
inc
sub
je
(bad)
adc
lods
adc
repz
xor
mov
inc
jg
mov
fisubr
xchg
or
mov
cdq
iret
or
add
push
(bad)
daa
jg
and
inc
aas
push
or
sbb
or
inc
or
xlat
or
mov
adc
dec
rol
inc
scas
add
int3
push
sbb
xor
call
dec
rcl
mov
cmp
dec
lahf
sahf
adc
scas
and
lock
push
cmp
das
loopne
pop
inc
xchg
pop
dec
hlt
sahf
ret
rcr
sbb
enter
sub
sbb
and
ss
outs
rol
or
ror
fidivr
fild
out
fild
pusha
xlat
and
push
(bad)
repz
add
jo
dec
adc
out
shr
fcomp
mov
and
push
mov
ret
outs
inc
xchg
add
movs
add
xlat
add
add
sahf
loop
or
sub
into
cli
push
inc
iret
push
xlat
jo
not
ja
mul
xchg
int
xchg
je
in
loopne
lods
add
ror
test
jecxz
push
js
lds
mov
dec
enter
pushf
nop
jecxz
in
sub
inc
pop
push
jo
pop
sbb
push
adc
fistp
mov
loope
test
sub
sahf
popa
and
jne
test
mov
push
inc
xchg
dec
mov
and
or
mov
dec
mov
dec
and
add
outs
bound
push
loope
(bad)
arpl
push
sbb
push
pusha
adc
dec
neg
aas
lahf
pop
xchg
test
mov
or
pop
xchg
test
dec
int3
sbb
sbb
jmp
or
push
pop
aas
arpl
outs
outs
sbb
(bad)
dec
mov
and
pusha
mov
push
outs
in
mov
sub
push
xor
mov
xor
out
inc
test
xlat
mov
and
add
xor
pop
xchg
push
aaa
(bad)
pop
add
xchg
or
aas
dec
adc
pop
push
sbb
into
mov
cwde
xor
dec
adc
bound
inc
and
pop
push
ret
push
mov
das
and
inc
sbb
cmp
aaa
jecxz
push
in
sub
iret
mov
(bad)
in
mov
push
in
jns
mov
inc
or
out
mov
js
push
or
push
jmp
dec
in
dec
xor
call
mov
pop
pop
ja
daa
sub
adc
scas
cmovle
out
call
pushf
push
test
idiv
ror
lock
test
inc
cs
loopne
add
cs
or
fidiv
add
outs
mov
ins
mov
add
add
jmp
out
iret
xor
nop
sub
push
push
ds
scas
cmp
add
or
shl
ficom
sub
dec
and
sub
xor
mov
adc
out
arpl
dec
add
jbe
loope
fs
shr
jno
pushw
adc
xor
aaa
add
pop
mov
inc
lahf
out
add
or
daa
sbb
or
cmps
test
and
adc
push
xchg
or
sbb
mov
mov
mov
inc
fisttp
pop
mov
int
jns
mov
pusha
push
sbb
daa
jnp
mov
push
rol
push
xor
or
outs
dec
jmp
jmp
sub
dec
xchg
aaa
push
je
sub
nop
dec
push
outs
bound
xor
cli
(bad)
dec
outs
pcmpgtb
aaa
mov
inc
and
mov
adc
inc
shr
cmps
jle
push
adc
and
movs
add
pop
push
fs
jne
mov
mov
push
call
sbb
inc
and
pop
sub
jo
and
ror
jne
ret
pop
inc
mov
or
mov
or
imul
lea
lahf
mov
mov
adc
es
add
mov
mov
pop
mov
and
add
pusha
test
jl
xor
or
repnz
mov
adc
stos
add
cmp
pop
ins
in
mov
addr16
mov
xor
pushf
sbb
pop
or
cs
fild
add
inc
or
pop
sbb
mov
push
inc
jne
or
or
inc
jno
jg
mov
ins
sub
mov
fs
dec
dec
ss
(bad)
cli
and
xchg
mov
sbb
jo
cmc
test
dec
push
dec
mov
cmp
jg
repz
out
adc
cmps
jne
push
data16
lock
sbb
sub
mov
dec
pop
les
scas
outs
data16
pop
mov
push
jmp
fwait
int
loopne
pusha
and
imul
das
shr
(bad)
cmp
aas
sub
inc
xchg
data16
inc
adc
inc
mov
add
bound
and
pop
les
mov
push
mov
xor
addr16
xor
sbb
sub
(bad)
add
lahf
lods
ss
jp
ins
mov
xor
ror
je
rol
mov
jne
pop
cmp
fsub
bound
pop
xlat
or
mov
push
inc
or
dec
mov
bound
adc
ja
pop
inc
lahf
out
out
not
dec
mov
ss
imul
dec
dec
add
inc
mov
inc
lock
cmps
fldcw
push
adc
sub
fnstsw
rol
pop
ja
pop
js
aaa
mov
ja
push
inc
adc
inc
or
or
into
push
sub
shl
jge
sbb
in
push
add
push
lock
arpl
popa
dec
pop
jbe
pusha
cs
into
adc
push
inc
(bad)
sbb
ins
imul
jo
pop
movs
out
hlt
outs
(bad)
pop
aas
and
ja
jne
popa
cld
js
pop
push
fwait
adc
cs
out
ds
bnd
movs
imul
inc
pop
popa
xchg
jb
es
punpcklwd
sub
popf
pushf
sbb
sub
bound
nop
or
std
aas
pop
pop
or
and
or
or
or
add
rol
or
lahf
imul
and
pop
push
adc
adc
adc
and
gs
or
or
or
pop
or
mov
push
jg
test
or
adc
pop
add
(bad)
(bad)
inc
and
mov
mov
add
retf
mov
sbb
mov
jmp
cmps
push
mov
int
lods
dec
ds
sar
pushf
mov
push
jmp
lahf
inc
repnz
mov
sbb
test
xor
mov
pop
enter
icebp
push
xor
fsubr
clc
dec
and
rcl
mov
fs
fld
sbb
cld
lahf
inc
ret
push
mov
ret
test
sahf
pop
mov
(bad)
pop
cmp
pop
enter
mov
adc
mov
pop
add
in
mov
aas
xchg
hlt
mov
and
jg
jle
in
mov
add
(bad)
adc
loopne
mov
mov
repnz
stos
or
jnp
mov
int3
push
repz
and
pop
sbb
enter
sub
adc
dec
mov
in
push
iret
(bad)
bound
or
add
add
pop
int3
push
adc
jl
mov
jge
or
mov
xchg
jno
xchg
or
adc
arpl
xchg
aas
and
jb
cwde
pop
call
jg
pop
jb
pop
ins
or
and
pop
jb
mov
and
jb
jns
jb
pop
jb
adc
pop
jb
pop
sbb
jb
mov
mov
xchg
test
xchg
test
test
xchg
inc
jl
dec
add
inc
rcr
mov
enter
test
test
test
pop
addr16
pop
enter
enter
pop
pusha
mov
mov
enter
enter
mov
scas
pop
enter
mov
test
mov
enter
mov
test
mov
ret
pop
enter
pop
adc
mov
sbb
fs
es
mov
pop
add
das
idiv
adc
repz
lahf
out
ins
(bad)
sub
arpl
add
add
mov
jmp
and
xor
bound
or
cwde
inc
inc
push
lods
or
jae
adc
mov
nop
inc
cmp
sbb
jo
je
push
pop
test
dec
mov
sldt
push
sub
bound
push
arpl
pop
or
and
and
mov
pop
out
dec
add
add
fstp
inc
fist
push
add
pop
cmp
popa
movs
sub
inc
mov
sar
push
inc
int3
ins
mov
popa
ins
pop
dec
pop
jb
dec
jnp
dec
dec
in
mov
inc
add
jp
add
pop
sbb
(bad)
push
ss
jmp
imul
ficom
add
inc
mov
adc
es
cmp
rcl
pop
sbb
fcomp
inc
sbb
sub
test
scas
or
pop
push
dec
imul
push
mov
cmps
pop
add
push
je
sbb
in
push
ja
xor
pop
ds
aas
dec
push
inc
push
dec
or
test
pop
xor
pop
mov
add
jmp
dec
push
scas
ja
repz
push
or
and
inc
bound
sar
in
fwait
dec
(bad)
ss
push
nop
nop
shr
movs
mov
nop
lock
aam
or
das
or
ret
(bad)
push
mov
and
pop
sbb
test
popa
dec
adc
mov
rcl
xchg
loope
aaa
sbb
clc
push
or
cmp
rcl
cmp
jns
or
mov
or
retf
jmp
or
aam
leave
shr
fwait
inc
mov
(bad)
bound
ret
fiadd
test
or
push
movs
mov
xchg
cmc
fisub
es
lahf
out
xchg
jno
push
mul
dec
sbb
sub
ss
pop
iret
dec
mov
lods
sub
pusha
aas
push
inc
das
cmp
sbb
and
dec
ja
sub
sahf
sti
sub
nop
or
pop
stos
data16
pop
imul
and
pop
xor
cmp
pop
pop
sbb
adc
add
lods
aad
inc
dec
mov
push
(bad)
and
xchg
add
(bad)
daa
mov
mov
or
push
sbb
iret
cmps
bound
lahf
sbb
imul
or
ins
xor
sbb
jae
adc
or
lock
inc
add
jns
imul
mov
retf
arpl
lock
sbb
stos
pop
pop
sbb
ja
dec
outs
adc
inc
add
mov
mov
add
pusha
mov
fistp
cmp
gs
add
inc
jg
es
pop
and
nop
js
ret
ror
sub
push
or
add
bound
call
das
push
test
push
mov
xor
stos
jmp
mov
int
xlat
and
cmps
add
dec
or
aas
mov
(bad)
sbb
jnp
inc
jecxz
daa
jnp
dec
shl
adc
pop
push
lahf
add
mov
cmp
push
or
fild
aad
pop
or
das
add
pusha
and
mov
sbb
inc
inc
imul
xchg
rol
jae
sub
dec
pop
fwait
sar
and
stos
loopne
ret
loop
pop
pop
mov
sub
sub
(bad)
idiv
add
lahf
or
es
fistp
aaa
pop
add
sub
out
or
mul
or
rol
and
out
pusha
dec
and
pop
jnp
xchg
pop
dec
outs
shl
pop
pop
jo
mov
rcr
stos
pop
mov
jp
dec
add
mov
bound
imul
pop
retf
fld
dec
pop
push
xchg
and
push
and
add
sub
jo
sub
and
pop
inc
mov
inc
addr16
fist
inc
pop
mov
movs
adc
iret
rep
test
mov
sub
inc
push
ret
ret
mov
sub
xor
pop
dec
mov
mov
sub
shl
je
pop
jbe
fdiv
xor
sbb
xor
pop
ds
pusha
inc
pop
xor
xor
lods
pop
ret
dec
retf
xor
jbe
pop
cmps
mov
or
push
add
ret
mov
mov
pop
sub
jmp
jae
jo
(bad)
sub
add
or
pop
ja
test
jo
jnp
call
clc
push
lea
mov
out
(bad)
or
data16
imul
into
lods
sbb
xchg
ins
inc
dec
ins
(bad)
mov
sub
fs
mov
pop
das
and
pusha
shl
mov
lds
xor
(bad)
inc
outs
xchg
xor
rcl
xor
dec
imul
sub
imul
sub
xor
xlat
inc
adc
je
ins
inc
pop
push
fnsave
dec
rcl
mov
sbb
sub
das
aaa
shl
mov
push
je
ret
or
inc
pop
outs
sub
adc
xchg
repz
dec
loope
outs
aas
add
das
add
addr16
enter
mov
aaa
add
loopne
dec
adc
sub
inc
call
adc
pop
rol
sbb
sub
dec
in
sbb
das
xor
dec
daa
test
push
lods
pop
int
xor
dec
jl
loop
adc
repz
(bad)
xor
adc
mov
mov
punpckhbw
inc
imul
push
imul
retf
lds
pop
out
jmp
pop
push
sahf
add
stos
fist
scas
shr
fsub
or
and
(bad)
das
mov
fbstp
div
shl
addr16
scas
sahf
mov
(bad)
and
push
in
inc
mov
adc
push
addr16
xchg
ds
pop
dec
outs
pop
jo
mov
xor
sub
sbb
sub
pop
outs
sub
xchg
ins
daa
push
add
mov
or
push
les
xlat
pop
mov
xchg
arpl
adc
cmp
ret
add
pop
add
push
out
ror
push
sub
xchg
and
jecxz
sbb
sbb
inc
(bad)
test
cmp
jo
push
sar
adc
leave
add
add
imul
pop
sub
mov
cmps
or
dec
ror
in
in
inc
ins
push
gs
test
push
xor
cs
pop
call
shl
lods
jae
jae
ficomp
dec
out
sbb
or
rol
aad
push
fs
push
rcr
fiadd
sbb
pop
daa
lods
jbe
sub
push
jnp
xchg
mov
mov
push
push
push
mov
inc
mov
inc
add
call
dec
inc
mov
mov
shr
dec
je
add
cmp
repnz
fldenv
pop
pop
(bad)
jmp
and
jno
add
push
mov
adc
or
ja
hlt
or
retf
cli
lahf
out
xor
jmp
mov
ss
add
mov
outs
push
stos
mov
mov
imul
jmp
mov
rol
lahf
retf
imul
and
push
mov
jo
add
(bad)
add
popa
mov
jbe
add
clzero
mov
dec
inc
int
out
push
bound
arpl
lahf
mov
push
inc
lods
rcl
shr
inc
inc
retf
inc
mov
xchg
cmp
dec
inc
dec
cli
inc
add
pop
xlat
inc
inc
stos
js
or
cmps
stos
or
inc
sbb
add
nop
or
dec
stos
retf
xchg
add
sub
movs
test
out
aad
sub
mov
add
jle
ret
fst
mov
(bad)
mov
pop
mov
inc
inc
add
inc
outs
pusha
fcomip
jne
xchg
push
xchg
xchg
in
lea
pop
pop
outs
mov
addr16
outs
pop
pop
sub
adc
mov
sbb
pop
inc
jmp
pand
cmp
push
and
xchg
xchg
xchg
inc
mul
dec
or
sub
add
cmp
sub
dec
push
add
add
(bad)
outs
rol
xchg
scas
sar
pop
ss
jnp
mov
push
pusha
jge
dec
mov
and
and
inc
or
sub
ss
jae
sbb
test
ror
xchg
add
daa
xor
es
sbb
push
dec
call
lahf
sbb
outs
outs
gs
sbb
jnp
fcmovb
sub
das
cs
sub
bound
push
jmp
mov
ja
mov
ins
popa
sahf
imul
retf
xchg
or
(bad)
jae
xchg
mov
add
stos
aam
add
test
aas
pop
fld
and
pop
stos
cmp
jmp
pop
imul
imul
das
shl
je
sub
xchg
(bad)
pop
iret
inc
bound
ror
fisttp
add
arpl
mov
pop
(bad)
mov
bound
mov
or
xchg
daa
or
dec
adc
dec
mov
mov
inc
shr
stos
pop
(bad)
cmp
or
add
add
mov
pop
add
bound
sub
push
pusha
imul
push
add
mov
scas
mov
or
mov
dec
cwde
sub
inc
xor
xor
add
ins
sub
outs
fild
and
adc
xor
es
push
adc
jg
mov
pop
xor
js
jo
lahf
pop
pop
add
cmps
nop
sar
sbb
es
sub
cmp
inc
(bad)
bound
bound
mov
movs
mov
scas
in
push
inc
sar
loop
rcr
imul
sti
sbb
and
or
xchg
movs
mov
mov
(bad)
test
push
ins
dec
inc
dec
inc
or
inc
add
rcl
pop
fwait
dec
data16
outs
jecxz
cdq
mov
and
mov
xor
test
scas
mov
inc
fdivr
jmp
xor
fs
data16
ss
mov
jecxz
mov
pop
inc
stos
mov
cmp
lods
outs
pop
mov
pushf
jl
adc
mul
xchg
les
xor
jg
add
mov
rol
pop
adc
imul
and
pop
pop
adc
push
xchg
xlat
pusha
nop
(bad)
mov
dec
or
das
gs
push
shr
mov
out
adc
and
push
cmp
cmps
sbb
dec
add
in
lods
cmovg
js
in
mov
jbe
and
push
rcl
pop
xchg
and
xchg
adc
mov
sbb
mov
cmp
(bad)
jnp
xor
dec
inc
cs
jb
bound
bound
mov
(bad)
sbb
fwait
adc
push
scas
and
fs
pop
inc
add
punpckldq
clc
es
dec
shl
and
push
sbb
adc
or
inc
jmp
cli
daa
xor
lods
add
mov
movs
adc
arpl
mov
imul
dec
sub
adc
sub
imul
ja
bound
jae
fbstp
data16
lods
mov
ret
stos
add
cdq
jmp
aas
sbb
dec
(bad)
pop
bound
mov
adc
bound
add
and
ret
sti
mov
sub
push
inc
mov
pop
mov
add
mov
mov
sbb
sti
xchg
and
(bad)
push
out
and
daa
xchg
xor
cmp
dec
mov
xor
pop
jae
add
mov
(bad)
jae
sub
iret
push
test
cmp
cmp
add
and
adc
add
das
das
mov
mov
adc
push
dec
push
inc
inc
jbe
xor
outs
jbe
adc
test
dec
repnz
cwde
dec
sub
test
hlt
mov
outs
inc
pop
call
dec
cdq
std
sbb
mov
jne
inc
pushf
jae
fisub
adc
xchg
jae
cmp
jns
jg
addr16
popa
pop
xor
mov
jae
push
gs
sbb
sbb
push
jne
into
and
jae
cmp
jbe
inc
or
lahf
dec
push
push
jmp
dec
test
jae
pop
mov
jle
pop
mov
lahf
xor
add
repz
adc
mov
daa
dec
sub
loopne
xor
lds
or
lods
shl
adc
inc
jbe
inc
push
dec
mov
jmp
xor
and
cmp
pop
mov
stos
push
dec
mov
jmp
fld
mov
cmp
mov
cmp
mov
retf
fistp
jg
dec
sub
or
cmps
fcom
mov
popa
or
dec
xor
fsub
jne
jnp
out
jns
push
imul
rep
xchg
sbb
mov
xchg
mov
out
outs
out
cmps
or
outs
xor
jmp
ins
in
in
xor
pop
les
(bad)
fisub
and
outs
xchg
or
or
sub
ss
dec
xor
out
call
inc
push
xchg
retf
add
ficomp
inc
mov
cmp
add
ins
or
sub
add
pop
jb
es
and
pop
inc
dec
inc
adc
mov
dec
data16
add
rol
add
xchg
je
ss
pushf
jg
iret
stos
or
sbb
rol
or
lock
ja
xor
fsub
dec
pop
outs
mov
sub
outs
mov
pop
pop
mov
ja
inc
pusha
or
fisttp
repnz
add
loopne
and
inc
sbb
(bad)
movaps
mov
pop
and
hlt
lods
dec
addr16
hlt
ror
pusha
adc
ja
or
inc
jo
test
xlat
add
dec
adc
aas
mov
aaa
arpl
rcr
daa
(bad)
xor
push
(bad)
hlt
mov
inc
mov
mov
sub
and
mov
pop
mov
push
sbb
mov
mov
push
pusha
test
daa
dec
push
mov
pop
retf
sub
daa
or
mul
cmp
push
mov
fild
jo
inc
jae
push
sub
and
and
and
aad
add
cs
sub
outs
ds
addr16
and
mov
push
dec
js
xchg
add
xor
popa
xchg
add
retf
mov
dec
jecxz
mov
jbe
mov
push
je
sbb
sub
dec
loopne
popa
inc
sub
and
jnp
xchg
and
div
cmps
inc
repnz
bound
add
xor
jb
outs
arpl
and
mov
push
dec
imul
and
imul
lods
or
dec
inc
add
sbb
push
sub
and
pop
or
adc
jnp
xchg
or
addr16
mov
es
fisttp
dec
imul
xchg
inc
xor
sbb
imul
jo
fwait
mov
and
outs
sbb
popa
cmc
or
xchg
enter
add
fs
mov
or
test
mov
sbb
lods
ja
test
or
imul
sub
or
add
or
mov
ins
adc
jo
int
stos
cmps
jo
test
sub
push
movs
mov
out
pop
pop
dec
and
add
(bad)
fmul
or
fcom
sub
arpl
inc
xor
sub
push
cs
pop
test
mov
xlat
sub
shr
cmp
dec
popa
inc
and
inc
mov
mov
rol
enter
fistp
pop
xchg
mov
fld
jae
ficomp
jecxz
push
test
or
repz
mov
add
fs
mov
es
out
mov
mov
mov
fisttp
fisttp
sub
ja
inc
stos
mov
ret
xchg
sub
aas
fidivr
(bad)
or
sub
es
adc
mov
and
xchg
nop
sub
mov
mov
mov
inc
dec
adc
fwait
jbe
(bad)
loopne
add
arpl
es
gs
pop
sub
fimul
aam
fstp
out
shl
aam
bound
stos
imul
cmp
(bad)
fst
out
push
lock
push
out
pushf
sbb
or
out
outs
and
inc
je
outs
dec
out
imul
ins
outs
sbb
add
and
aas
mov
adc
sub
adc
dec
adc
stos
jg
pop
fcom
rcr
cmps
neg
sub
push
push
sub
push
sub
call
and
mov
shl
stos
add
sub
add
jg
ret
or
mov
lahf
jb
or
add
fsubr
mov
adc
aas
jnp
pop
pop
(bad)
push
data16
add
dec
pop
cmp
aas
or
dec
sbb
sub
xchg
daa
mov
adc
arpl
and
sbb
push
loope
xchg
dec
xor
push
ror
iret
imul
jno
lds
pop
push
sbb
or
xlat
outs
push
xlat
push
pop
punpcklwd
mov
int3
push
stos
push
dec
jnp
or
arpl
in
scas
in
dec
ja
(bad)
sub
cmp
add
mov
cmp
imul
add
mov
lahf
pop
shr
inc
dec
push
popa
jb
mov
and
lods
pop
pop
pusha
and
lock
mov
adc
dec
addr16
mov
ss
add
(bad)
or
jmp
inc
add
push
dec
lods
adc
fcom
jg
push
mov
cli
xor
popa
xchg
pop
das
inc
push
pop
or
push
test
aas
ja
inc
or
jg
sbb
inc
mov
and
xchg
scas
dec
add
test
add
adc
add
add
add
or
rol
add
ins
add
in
add
add
add
push
mov
mov
add
inc
sbb
add
sub
adc
(bad)
push
add
mov
xchg
xchg
(bad)
(bad)
(bad)
call
call
mov
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
(bad)
(bad)
(bad)
push
mov
mov
(bad)
(bad)
enter
int3
int
iret
rcl
rcl
(bad)
(bad)
(bad)
call
aad
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
xor
push
cmc
div
clc
stc
cli
sti
cld
std
(bad)
(bad)
mov
imul
sbb
cmp
inc
inc
and
inc
sub
xor
pop
cmp
cmp
ds
inc
movs
loopne
fdivr
pop
pop
pop
pop
pop
pusha
aas
jnp
jge
jg
xchg
mov
mov
sub
aas
inc
sbb
or
jo
push
(bad)
ins
jl
push
jecxz
jecxz
push
and
inc
and
dec
arpl
and
lea
pusha
inc
jns
mov
mov
cmovle
dec
or
or
xchg
mov
pop
pop
inc
adc
lock
or
and
pop
inc
adc
adc
jge
stc
imul
adc
pop
add
inc
mov
inc
or
das
xor
push
sbb
(bad)
adc
lods
lahf
dec
xor
sbb
dec
(bad)
mov
mov
push
mov
mov
pop
and
ja
sub
sbb
rol
inc
and
adc
sbb
stos
(bad)
jecxz
(bad)
sbb
mov
cmp
xchg
mov
adc
xor
jbe
fisttp
cmp
sbb
push
mov
xlat
sbb
aas
sub
sub
inc
pop
jb
dec
sbb
or
iret
jecxz
pop
fild
cmp
cmp
mov
(bad)
or
ins
jbe
mov
out
arpl
or
leave
sub
and
daa
retf
imul
and
das
test
pop
(bad)
in
jmp
or
xor
xchg
inc
and
ds
sub
or
outs
adc
out
ins
inc
jno
pop
addr16
dec
les
and
jae
push
rol
push
inc
push
sub
outs
sbb
addr16
push
rcr
jle
push
sbb
dec
adc
iret
test
test
xchg
cmp
das
sti
sbb
jge
pop
retf
das
mov
sub
dec
sbb
sbb
jae
sub
cmp
adc
dec
(bad)
add
loop
stos
and
xchg
sbb
adc
outs
and
pusha
adc
adc
lods
xchg
rol
jne
fwait
mov
ins
add
add
xor
or
xchg
imul
lds
xchg
outs
fwait
scas
and
iret
fistp
fisttp
mov
adc
arpl
aam
sub
outs
(bad)
stos
les
pop
add
mov
dec
dec
outs
or
or
lock
inc
add
pop
in
add
and
or
in
enter
mov
arpl
daa
jo
rcl
inc
mov
iret
jmp
mov
data16
jno
(bad)
sub
stos
cmp
xchg
dec
popa
xchg
dec
mov
xor
xchg
ret
imul
sar
sub
pop
stos
mov
inc
mov
inc
jg
push
movs
mov
cmps
pop
pop
and
ror
adc
xchg
xchg
pushf
rol
(bad)
mov
ja
sbb
add
dec
mov
pop
(bad)
stos
adc
add
and
inc
mov
dec
dec
mov
and
pusha
cmps
(bad)
xchg
mov
rcr
inc
jmp
or
add
(bad)
mov
or
sbb
add
lea
dec
cs
popa
mov
xchg
shl
das
jbe
mov
lods
and
jbe
sub
pop
cs
dec
dec
aad
arpl
je
jbe
aas
mov
addr16
lods
mov
bound
dec
jge
or
outs
push
xchg
cmp
movs
dec
mov
sbb
mov
sub
mov
mov
add
les
hlt
push
in
dec
adc
or
jb
outs
mov
or
mov
test
push
sbb
push
sahf
sbb
test
and
push
push
adc
arpl
outs
dec
adc
aam
push
xchg
adc
sahf
inc
and
pop
sub
int
shl
xor
or
les
xchg
jne
ja
jns
push
add
jae
xchg
loopne
mov
in
inc
xchg
outs
fs
inc
adc
inc
xor
or
cmc
jecxz
ins
sbb
cmp
mov
js
fs
jne
push
push
test
sahf
pop
fsub
push
inc
sub
bound
push
jno
cs
or
into
fisub
loopne
mul
lea
popf
cs
ret
mov
push
jl
imul
xor
pusha
or
xchg
xor
jns
jge
pop
mov
dec
aam
les
loopne
pop
imul
ret
adc
sbb
in
or
add
ins
jb
and
loop
loopne
sub
sub
inc
outs
sub
arpl
or
sub
repnz
pushf
inc
fnstenv
cmp
mov
sbb
out
xor
adc
mov
js
int3
inc
lahf
push
pop
pop
in
outs
push
das
pop
xor
adc
jno
fadd
pop
and
sbb
or
xor
cs
aaa
mov
xchg
shl
push
jns
cmp
int3
fcom
adc
aaa
push
test
(bad)
ja
outs
push
sbb
shr
movs
dec
mov
jo
inc
xor
jbe
inc
test
xchg
push
mov
jo
jmp
mov
and
shl
mov
lds
push
xor
cdq
push
adc
lods
adc
inc
mov
ins
xchg
mov
fcomp
imul
in
dec
mov
pop
dec
or
push
cmp
aas
call
mov
aad
dec
test
add
jbe
sub
leave
cs
xchg
and
xor
or
and
push
je
gs
push
pop
push
cmp
jae
xor
xor
call
or
mov
dec
or
xchg
lds
hlt
or
mov
xchg
add
jb
cs
aaa
dec
jo
daa
fstp
pop
jnp
idiv
push
jo
jl
lahf
dec
mov
and
or
jno
cmps
scas
pop
fimul
lea
mov
fcomp
cmps
push
sbb
pop
push
out
add
out
jmp
call
add
xchg
push
dec
aad
lods
sbb
mov
pop
stos
mov
mov
and
dec
dec
xor
add
inc
jg
mov
xor
xor
dec
adc
test
cmc
fistp
xlat
adc
and
cmp
cmps
pop
sbb
xor
jno
mov
xor
xchg
xor
outs
les
mov
js
jmp
lods
jecxz
or
sbb
mov
sub
dec
loop
test
ja
popa
pop
shl
aam
xor
mov
ror
lods
dec
cmp
fwait
push
pop
lock
pusha
xchg
in
inc
and
xchg
and
inc
push
or
sub
push
ret
ja
jo
jo
pop
lea
iret
(bad)
cs
xchg
push
push
jmp
adc
pop
pop
imul
jae
cli
frstor
mov
push
rol
add
iret
add
sub
ja
(bad)
scas
jne
daa
cmps
lock
ja
mov
mov
xor
call
xchg
pop
pop
data16
jo
jne
pop
out
jno
pop
xor
mov
retf
jg
mov
sti
xchg
sub
loopne
(bad)
or
fmul
sbb
pop
xor
jb
sbb
mov
addr16
aas
mul
mov
lock
sub
loopne
mov
mov
or
sar
idiv
cld
sti
retf
jno
icebp
pusha
inc
mov
clc
ret
movs
add
push
fld
outs
out
ins
jne
inc
mov
sub
enter
(bad)
fisttp
cmovs
cwde
xor
jmp
push
ficom
add
push
add
adc
inc
jecxz
(bad)
mov
mov
wrmsr
das
pusha
inc
ret
xlat
xor
push
xor
lock
mov
mov
sar
mov
retf
les
out
inc
sub
push
into
xchg
sbb
push
xor
dec
xor
jmp
rcl
lods
jmp
(bad)
scas
in
mov
mov
stos
add
xor
nop
pusha
aas
sti
sub
push
push
adc
sbb
(bad)
outs
outs
cmp
rcr
(bad)
adc
ja
sub
aam
mov
iret
(bad)
repnz
cmp
xor
cmp
push
jno
and
sub
int3
push
pop
cmp
sub
ja
jnp
dec
xchg
rdtsc
xor
out
outs
pusha
retf
ins
retf
ss
popa
retf
add
popw
xchg
jo
mov
sub
pop
sub
jne
mov
add
adc
add
add
add
add
cmp
sbb
pop
pop
or
aaa
pop
push
push
pop
and
jge
jbe
or
pusha
add
pop
js
or
add
out
pop
add
sbb
(bad)
and
push
or
mov
sub
push
push
cmps
mov
jae
mov
inc
sub
fwait
xor
sub
(bad)
test
mov
pop
and
shl
dec
and
in
push
or
pop
jae
je
add
dec
jae
adc
inc
mov
dec
pusha
shl
push
dec
xchg
xor
das
outs
sbb
jg
loop
or
into
outs
sbb
(bad)
and
leave
clc
jae
dec
adc
xor
push
inc
fiadd
sub
cmp
adc
jbe
imul
mov
or
adc
xor
ja
les
sub
sub
(bad)
pop
sbb
or
jp
xor
aas
movs
dec
pop
mov
imul
test
inc
xor
dec
inc
mov
jge
pop
sub
sub
lahf
popa
psrad
je
and
js
lods
std
push
jo
jp
sub
adc
cmp
movs
movs
xlat
ja
or
pop
dec
sbb
ror
and
and
sub
and
and
dec
push
and
and
fs
pusha
adc
ja
fldenv
pusha
sub
or
dec
and
and
add
jo
shl
mov
add
call
fild
mov
xchg
jae
or
loop
dec
xchg
jmp
and
pop
mov
ja
push
sub
lods
mov
out
(bad)
lods
ins
retf
or
or
mov
inc
test
gs
dec
pop
add
shr
add
xchg
xor
scas
fs
daa
mov
push
dec
mov
and
xor
daa
lahf
inc
daa
popa
inc
or
add
arpl
sbb
jnp
das
or
mov
add
(bad)
mov
ins
mov
jmp
mov
inc
aaa
out
(bad)
dec
popa
and
cs
sub
or
fmul
es
pushf
add
(bad)
neg
inc
sub
jecxz
adc
add
inc
or
push
imul
shl
and
mov
out
movlps
mov
mov
ffreep
fs
shr
and
xchg
sub
pop
and
mov
adc
(bad)
pop
push
pop
cli
jae
mov
xchg
out
dec
and
call
cmp
rcr
ss
push
dec
dec
or
rol
xchg
pop
jecxz
or
in
pop
scas
xchg
enter
or
mov
xlat
fsubr
test
cmps
jmp
sub
push
fnstsw
addr16
xor
or
mov
push
pop
sub
push
adc
or
inc
jg
test
std
sbb
aas
fs
add
(bad)
imul
xlat
dec
sub
push
inc
pop
(bad)
ins
lods
sbb
add
(bad)
sub
push
push
imul
pop
iret
xor
les
pop
push
add
adc
pop
adc
mov
adc
add
and
call
sti
lods
xchg
or
xchg
adc
mov
xchg
add
cmps
or
scas
loopne
ror
scas
dec
scas
(bad)
sub
jns
outs
outs
daa
sub
std
xchg
inc
gs
(bad)
pop
mov
or
ret
jb
fs
es
bound
(bad)
in
int
(bad)
push
push
popa
dec
arpl
sbb
aaa
and
scas
mov
jbe
imul
cwde
sub
adc
jb
es
out
and
aas
push
and
push
gs
jp
ins
xor
and
ficomp
ins
daa
addr16
test
in
repnz
retf
outs
arpl
push
aam
ret
inc
call
jae
add
jae
imul
push
xchg
xchg
data16
jne
iret
dec
xchg
outs
pop
jbe
add
pop
ins
mov
jne
xor
fsubr
mov
pop
lahf
and
in
fcmovu
daa
and
fs
add
jnp
sub
imul
popa
pop
or
inc
dec
imul
xchg
outs
pop
les
sub
cs
pop
popa
jae
add
test
lods
ret
cld
test
daa
arpl
mov
push
loopne
mov
mov
arpl
ret
xchg
mov
and
leave
pop
mov
imul
pop
neg
bound
jbe
pop
and
daa
pop
stos
outs
je
pushw
push
pop
jo
or
mov
add
jo
outs
imul
sar
and
jae
daa
lds
mov
imul
sub
jb
and
dec
mov
push
push
jmp
pop
ins
jne
in
sub
dec
addr16
enter
in
mov
add
popa
jne
xor
xor
sbb
shl
push
pop
xor
xlat
inc
pop
sub
mov
leave
imul
or
dec
popa
aaa
mov
jbe
pop
push
cmp
and
xor
imul
or
fwait
idiv
outs
pop
xor
cmp
adc
pop
add
add
test
(bad)
sbb
and
pop
daa
test
lock
daa
call
pop
ficom
punpcklwd
loop
call
pop
inc
into
sub
bound
and
mov
jle
int
in
jo
pop
push
inc
dec
dec
sub
call
cmp
dec
xor
test
sub
dec
push
sbb
mov
cmp
mov
aas
mov
push
push
int3
(bad)
mov
rcl
lods
push
pushf
dec
xor
cmps
mov
inc
jo
sub
test
cmp
dec
push
imul
mov
scas
cld
paddsb
inc
fcomp
enter
test
inc
inc
inc
xchg
inc
cmp
aas
out
dec
pop
push
dec
je
push
xchg
push
es
wrmsr
mov
xlat
pushf
sbb
iret
add
push
scas
lock
dec
push
imul
push
call
test
inc
push
dec
push
inc
inc
dec
xor
push
call
test
cld
inc
call
dec
movs
push
les
pop
mov
push
nop
push
push
inc
mov
lods
fiadd
adc
fbstp
ins
inc
inc
lahf
outs
dec
outs
daa
xchg
ja
pop
inc
pop
inc
push
inc
(bad)
push
pop
out
sub
xor
and
dec
cld
in
jbe
mov
jg
shrd
push
dec
scas
mov
dec
pop
in
inc
inc
fmul
push
or
enter
sbb
test
out
cs
or
or
or
adc
xor
mov
stos
sub
adc
sbb
jo
retf
dec
scas
jo
xchg
cmc
imul
mov
rcl
and
dec
aas
ja
out
jnp
daa
push
sub
adc
out
xchg
push
fwait
ins
add
dec
cmp
mov
cdq
or
dec
inc
sub
ret
mov
not
and
adc
cmps
adc
or
and
pop
lds
xchg
mov
dec
cwde
outs
inc
outs
push
jne
cs
lds
adc
add
arpl
xchg
jno
(bad)
and
bound
sbb
and
mov
cmp
add
dec
or
and
sub
(bad)
pop
sbb
add
adc
xchg
inc
hlt
dec
nop
imul
adc
pop
loopne
sbb
cmp
inc
pop
jae
cmc
movs
sbb
mov
xor
sub
push
and
js
jo
add
xchg
and
push
pop
cmp
sti
or
add
dec
inc
add
mov
adc
and
or
or
and
and
inc
dec
(bad)
jp
mov
icebp
sbb
and
mov
imul
dec
dec
lahf
push
rol
xor
daa
pop
add
xchg
call
mov
xor
pusha
test
jno
fld
mov
jb
cmp
in
mov
sbb
fcmovu
push
ins
or
daa
xchg
pusha
inc
push
shr
jbe
(bad)
push
push
lahf
(bad)
lds
nop
imul
gs
sub
inc
sub
mov
gs
push
adc
mov
dec
lahf
xchg
(bad)
fcmovbe
jo
mov
pop
(bad)
xchg
pop
pop
pop
movs
mov
dec
inc
sub
cmp
add
pusha
ins
call
and
inc
repnz
pusha
adc
mov
mov
xchg
and
push
push
test
xchg
ins
cmp
inc
dec
push
jne
repnz
ret
test
and
mov
sar
jg
movs
add
in
adc
(bad)
movmskps
and
dec
xchg
inc
mov
push
sbb
xor
add
cmp
ins
mov
jne
adc
or
and
stos
pop
das
push
outs
data16
test
mov
aaa
daa
xchg
mov
(bad)
cmp
mov
pop
pop
cmp
cmp
add
jnp
neg
push
sub
fistp
data16
sub
ds
jl
stc
add
pop
sub
or
cmp
sub
pop
bnd
into
add
and
cmp
inc
cmps
add
or
fs
mov
cdq
push
das
xor
imul
adc
xor
adc
iret
lods
push
les
sbb
cdq
mov
outs
and
jae
inc
jo
sub
push
addr16
mov
out
out
pop
adc
rol
jo
out
mov
out
dec
sub
mov
and
fdivp
pushf
xor
push
jl
neg
shl
push
js
je
jo
out
out
push
adc
enter
mov
outs
inc
sbb
dec
and
inc
imul
xor
dec
xor
cmp
fstp
mov
push
and
cmp
repz
or
out
ss
add
mov
out
sahf
loopne
int3
mov
xchg
ins
sahf
out
je
xor
mov
repz
cmp
sub
sbb
add
(bad)
enter
cmp
out
push
sub
mov
iret
repz
je
sbb
inc
pop
test
cmps
pop
mov
iret
ins
add
add
or
out
mov
out
je
mov
daa
jns
xchg
je
out
xor
inc
js
aam
gs
loopne
pop
push
in
mov
add
int3
dec
(bad)
sub
daa
xor
jns
or
dec
syscall
xchg
icebp
test
ud0
mov
imul
sbb
inc
mov
scas
fwait
and
loop
and
jne
stos
add
iret
ins
jae
add
scas
sub
mov
sti
add
cmps
xor
lahf
sahf
mov
pop
mov
dec
popa
mov
push
les
or
ret
mov
jp
sub
adc
or
jae
push
or
xor
das
(bad)
sbb
inc
sub
or
outs
imul
cmp
add
push
adc
jae
pop
dec
pop
hlt
sub
push
xlat
push
mov
mov
mov
je
ja
cmp
psraw
adc
push
call
scas
cmp
xchg
ret
mov
movs
daa
mov
test
lods
push
inc
sub
mov
ret
outs
jecxz
cmp
or
push
fdiv
push
scas
adc
shl
das
cmp
inc
scas
lahf
and
inc
and
cmp
sub
daa
cmp
mov
test
(bad)
jno
pop
stos
data16
mov
dec
cmp
pop
je
or
mov
jae
push
bound
iret
inc
add
das
sbb
or
das
aaa
hlt
scas
push
xor
push
dec
inc
dec
jmp
add
adc
lock
sub
pop
and
add
inc
push
es
out
pop
inc
cmps
jmp
inc
fwait
xchg
adc
inc
jb
shl
fist
adc
ret
lock
push
or
js
cmps
mov
and
not
out
imul
inc
lods
pop
ret
sub
xchg
jno
pop
movs
mov
rcr
lahf
add
lahf
push
shr
cmp
imul
ret
fcmovb
std
xor
or
inc
dec
pop
jb
inc
loop
inc
pop
cmp
pop
push
fs
inc
and
test
adc
inc
js
ss
cmps
aam
pop
out
or
test
mov
pushf
mov
clc
and
outs
sub
fist
and
outs
cmp
xor
dec
push
mov
ins
les
mov
jnp
sbb
in
pop
test
lods
pop
jae
pusha
bound
addr16
add
cmp
pop
or
and
cmps
sub
fld
inc
test
js
cmp
dec
test
inc
sub
mov
das
loop
pusha
or
add
dec
mov
jno
sub
sbb
add
add
jno
call
aas
push
inc
mov
loopne
fstp
push
push
frstor
adc
arpl
test
mov
cmp
jge
pop
popa
daa
movs
lods
xchg
inc
cmp
or
(bad)
int3
in
cmp
sbb
mov
pop
les
fisub
jnp
movs
push
jmp
push
int3
shl
js
sub
pop
popa
push
mov
pop
dec
sbb
sar
daa
add
shr
jo
cmp
mov
jnp
jge
adc
outs
sub
xor
inc
and
and
sahf
and
sub
cli
mov
outs
and
mov
add
sub
sbb
mov
mov
or
sub
and
sbb
(bad)
jnp
xchg
mov
mov
and
mov
and
cwde
cmp
out
cs
jno
arpl
and
cdq
push
sub
add
inc
push
mov
xor
das
imul
inc
loopne
mov
pop
and
jo
xchg
or
fisttp
outs
xor
fisttp
push
(bad)
test
popa
outs
jbe
jmp
dec
dec
cdq
sbb
and
xor
scas
jae
(bad)
and
mov
xchg
sub
mov
es
pusha
or
inc
and
data16
aas
or
dec
adc
fadd
ds
shr
loope
dec
push
and
add
push
scas
lods
push
lea
outs
adc
mov
cmp
dec
push
inc
inc
cmp
sub
int
jmp
cs
das
xor
jg
stos
inc
xor
dec
mov
add
mov
into
inc
leave
pop
inc
push
dec
clc
cmc
push
push
das
add
mov
retf
sbb
in
fdiv
js
aas
idiv
xchg
xor
or
retf
lds
dec
call
stos
sub
sahf
mov
popf
lods
mov
xchg
xchg
mov
aam
push
sub
iret
out
shl
les
mov
mov
xor
cdq
inc
test
arpl
shl
arpl
jae
inc
sbb
and
out
push
mov
inc
fmul
pop
gs
addr16
arpl
(bad)
stos
lods
adc
ret
add
push
xor
push
jmp
push
push
xchg
add
loopne
sub
adc
scas
leave
push
adc
jae
bound
or
cmp
dec
fimul
fild
dec
mov
add
in
retf
shr
inc
aas
fild
sbb
push
imul
xchg
sar
rcl
lods
push
and
inc
retf
call
cmp
in
div
scas
cmps
mov
and
iret
not
mov
inc
mov
jl
pop
loope
jns
xor
into
push
lea
idiv
jne
lods
inc
cld
call
mov
cli
(bad)
jg
loopne
and
jae
jno
hlt
dec
call
inc
call
jmp
xor
leave
(bad)
xor
push
les
add
ficomp
adc
xor
imul
cmp
sub
jbe
lahf
mov
add
loopne
in
retf
xor
inc
cmp
push
mov
jg
dec
addr16
out
rcr
jno
pop
or
sub
mov
gs
or
aaa
dec
jo
std
push
xchg
scas
ins
aaa
cs
mov
pop
(bad)
repnz
push
sahf
xchg
(bad)
inc
push
sbb
lock
cmps
inc
pop
fwait
cmps
stc
sbb
rcl
mov
ja
push
pop
cmp
push
sbb
and
mov
out
adc
jp
ins
push
sub
nop
inc
xchg
mov
inc
push
ja
fs
adc
jo
add
scas
adc
mov
neg
inc
lock
dec
pusha
push
xchg
sbb
cmp
int3
inc
add
es
pop
fild
xchg
pop
fadd
and
call
ins
rcr
adc
xlat
fimul
(bad)
xor
pop
nop
ja
dec
outs
dec
jl
pusha
repnz
fisubr
jo
cmp
enter
mov
test
rcl
fnstenv
pop
mov
fadd
rol
or
adc
sbb
(bad)
sbb
cld
dec
cmp
cld
add
adc
dec
sbb
movs
push
mov
inc
xchg
inc
dec
sahf
out
xchg
cmp
add
fs
pop
(bad)
out
add
imul
dec
push
data16
lea
fwait
aaa
into
mov
(bad)
je
das
cmp
mov
pushf
mov
aaa
rol
mov
dec
sbb
imul
(bad)
hlt
xchg
add
mov
aam
scas
mov
xorps
in
or
fidiv
add
adc
out
call
jg
cmps
and
sub
inc
aam
cld
into
fistp
and
lods
add
add
dec
or
xchg
dec
out
pop
push
push
pop
dec
out
dec
sbb
mov
jl
iret
fild
push
mov
(bad)
cwde
fimul
xchg
fcomip
xchg
cld
and
enter
loopne
adc
sub
cmp
dec
or
jbe
inc
xchg
outs
push
fnstenv
cmp
xchg
sub
or
push
push
mov
xchg
(bad)
jae
or
js
js
adc
in
loopne
jbe
add
xor
pop
js
lahf
in
jns
mov
loope
push
push
jo
adc
test
lahf
jbe
lods
sbb
nop
add
nop
pushf
rol
les
xchg
aam
enter
lock
or
add
aaa
lock
repnz
in
popf
test
xchg
dec
pop
test
cmp
dec
enter
mov
cwde
push
mov
ss
xchg
mov
xchg
in
pushf
jmp
es
add
mov
scas
jecxz
add
int
ins
sahf
jo
in
je
in
or
sub
scas
xor
aam
mov
dec
ficomp
aaa
(bad)
pushf
jecxz
and
dec
and
in
add
das
inc
xor
xchg
jbe
js
or
sbb
push
pop
in
movq
in
xlat
pop
sub
inc
cwde
xchg
out
(bad)
cmp
movs
lods
nop
xor
in
push
rcl
ret
pop
leave
mov
add
push
ja
daa
in
in
in
scas
or
fbstp
xlat
movs
js
mov
je
jmp
pop
pop
fiadd
dec
mov
movs
lahf
mov
daa
in
out
push
adc
pop
enter
lahf
hlt
test
out
in
jbe
lahf
push
push
fs
fcomp
dec
lahf
jbe
ss
adc
out
cmps
iret
inc
xor
xchg
int
and
in
out
and
xchg
shl
out
out
cmps
(bad)
adc
push
dec
out
push
inc
dec
inc
iret
js
dec
xchg
sub
and
push
jmp
mov
lods
in
addr16
pusha
or
cmp
fwait
mov
cmp
add
rcl
push
scas
sbb
loopne
mov
scas
loopne
call
loopne
xchg
inc
fimul
cdq
or
pop
mov
inc
fadd
jmp
jns
or
ss
cmp
cmp
imul
das
push
inc
dec
div
jl
xlat
adc
jae
fs
jo
push
jmp
mov
lods
popf
nop
out
cwde
clc
jmp
adc
inc
xchg
clc
fisttp
fiadd
xchg
push
repnz
inc
ja
cmp
fmul
repnz
test
add
add
call
dec
mov
fdivr
(bad)
jmp
xor
inc
test
and
jae
iret
dec
jo
mov
jb
jo
xchg
cmp
repnz
test
xchg
in
jb
popf
nop
or
sbb
and
xchg
jns
in
in
or
or
nop
out
cs
fsub
mov
fmul
jns
in
cld
in
pop
enter
in
or
in
pushf
fdivr
and
in
dec
pushf
inc
dec
repnz
mov
in
cmp
test
in
xchg
push
movs
pop
dec
pop
iret
inc
lock
ja
test
repnz
in
xchg
test
fstp
aam
out
and
or
or
xor
cmp
movs
xchg
jmp
nop
adc
and
ins
rol
mov
jl
test
(bad)
and
inc
xor
mov
sub
cmps
inc
int
fild
mov
out
push
out
rol
sub
sbb
stos
daa
pop
addr16
dec
fild
inc
sar
pop
inc
add
pop
in
jmp
(bad)
repz
out
mov
(bad)
loopne
aam
push
enter
adc
out
cmp
lock
inc
test
add
cmp
inc
and
div
add
lock
push
mov
movs
loopne
jbe
mov
pop
enter
cmps
mov
daa
fs
icebp
or
sbb
sub
push
repnz
lock
loop
fisub
icebp
ins
push
sbb
sbb
mov
pusha
in
adc
or
in
and
mov
fimul
pslld
or
ss
xlat
hlt
(bad)
lods
jecxz
sbb
data16
push
dec
push
daa
(bad)
lods
add
enter
cwde
inc
cdq
pusha
arpl
test
aas
(bad)
cwde
jae
iret
or
es
clc
aas
(bad)
loopne
adc
sub
cmp
inc
das
inc
hlt
push
mov
movq
iret
imul
ja
ret
lods
inc
xchg
je
sbb
enter
iret
sahf
repnz
ins
dec
fdivr
cwde
hlt
fmul
mov
adc
inc
imul
jbe
push
xchg
mov
inc
xchg
inc
cs
push
pop
mov
iret
test
ret
pushf
push
test
inc
xchg
adc
in
mov
xchg
add
call
dec
sahf
lock
mov
out
cmc
and
xor
cmp
xchg
xchg
mov
aam
ins
mov
out
pusha
shl
daa
cmc
movs
out
adc
dec
sahf
mov
call
nop
add
push
xlat
movs
or
mov
inc
mov
pop
neg
sub
cmp
imul
xchg
pusha
dec
sahf
or
js
bound
vmread
mov
mov
ja
addr16
push
call
or
jnp
push
ins
neg
mov
sub
cmp
and
nop
push
test
neg
repnz
enter
jl
test
enter
and
lock
les
pop
lock
adc
adc
and
xor
or
les
or
lahf
xor
je
nop
or
inc
xor
jnp
loope
push
mov
clc
les
cmp
fmul
xchg
push
(bad)
add
ins
xchg
mov
jl
stc
and
aad
cmp
xor
cmp
test
addr16
xchg
nop
adc
mov
mov
mov
call
lock
(bad)
fdiv
inc
or
(bad)
cli
cli
xor
or
mov
jns
outs
xchg
xchg
add
in
ins
js
lahf
inc
xchg
ins
or
mov
int
inc
enter
sbb
sti
sbb
cld
pushf
push
mov
sahf
or
jl
or
mov
enter
xchg
adc
sti
xor
pusha
sub
sbb
pop
inc
out
xchg
adc
aam
ja
mov
inc
sti
dec
push
idiv
add
dec
and
ss
call
hlt
addr16
add
(bad)
test
cld
ins
inc
xor
push
pop
inc
out
loopne
inc
mov
adc
dec
fiadd
sahf
sbb
adc
dec
inc
dec
in
scas
scas
(bad)
cld
in
fs
test
cmps
outs
add
inc
outs
fild
adc
popf
nop
inc
std
inc
std
push
push
pusha
fbstp
add
sub
adc
lea
add
daa
mov
data16
(bad)
xor
mov
daa
mov
dec
mov
mov
jg
and
xor
xchg
xor
cmps
push
fs
push
mov
out
enter
mov
inc
pop
xor
pop
in
popf
nop
add
adc
and
movs
add
test
inc
push
pop
enter
je
cmp
jb
push
shl
(bad)
shl
pop
enter
hlt
cs
push
pop
adc
adc
in
or
inc
in
sahf
mov
outs
imul
mov
lods
pop
inc
push
mov
pusha
ins
sbb
cs
pop
mov
and
add
adc
add
aad
addr16
pop
hlt
inc
jo
jns
push
add
add
out
or
pop
jl
mov
test
jne
fwait
les
or
addr16
in
lods
or
(bad)
mov
es
mov
push
out
dec
and
sar
call
add
jbe
(bad)
pop
or
cwde
or
test
mov
jnp
fistp
and
add
mov
sub
pop
and
add
or
mov
push
inc
inc
dec
pmulhuw
test
(bad)
add
lods
lahf
test
nop
or
scas
mov
jbe
fsub
xor
clc
add
push
sbb
enter
ja
outs
loop
cdq
ja
lahf
pop
push
or
push
pop
adc
jbe
pop
add
inc
xor
int
and
pop
shl
lock
or
ror
add
sub
add
test
pop
subps
je
push
or
cmp
pop
mov
push
bound
pop
mov
lock
sbb
push
add
or
popf
sub
sbb
shr
(bad)
dec
pop
xchg
and
dec
ja
and
inc
mov
jbe
out
push
pushf
push
mov
pop
pop
adc
adc
pop
fild
add
push
in
add
add
add
adc
pop
sub
pop
cmp
fimul
ds
out
jo
test
jns
jns
fsub
mov
nop
or
pusha
pusha
push
call
mov
(bad)
enter
or
jno
xor
and
sub
loopne
jns
or
pop
ss
add
xchg
ss
scas
xchg
ja
iret
inc
pop
pusha
mov
ins
sahf
fdivr
or
pusha
cmp
or
mov
scas
in
scas
add
test
(bad)
aaa
or
test
(bad)
mov
daa
pushf
add
test
leave
rol
loop
in
add
xor
dec
or
sbb
mov
xor
in
sahf
mov
pop
enter
dec
xchg
enter
movs
mov
enter
xchg
test
outs
fstp
pop
hlt
or
dec
mov
in
jbe
ins
aam
push
pop
or
daa
pop
pop
add
pop
outs
xchg
xchg
out
sahf
rol
in
and
jns
in
fsubr
loopne
bound
or
js
fs
or
push
cmp
xchg
xchg
pusha
js
addr16
iret
mov
js
mov
xor
push
add
pusha
add
out
rol
xchg
out
test
or
and
sbb
iret
sub
jb
pop
enter
xor
cmp
shl
stc
push
or
movs
fwait
nop
out
in
lock
pop
mov
in
(bad)
and
sbb
test
sahf
dec
xchg
push
mov
or
je
int3
das
sahf
dec
add
mov
add
push
ret
lods
scas
scas
mov
nop
add
out
clc
outs
fs
or
(bad)
xchg
pop
prefetchnta
sub
xor
xchg
or
mov
adc
je
test
or
mov
les
fmul
pop
xor
pop
fadd
mov
mov
inc
adc
sbb
xor
imul
pop
lock
lahf
or
xchg
adc
cdq
inc
sahf
lahf
or
fs
dec
pushf
sub
inc
rol
jne
rcl
dec
add
mov
adc
inc
scas
cmp
and
push
test
fwait
adc
je
cmp
push
cmp
nop
repz
jecxz
inc
add
or
sahf
int
adc
fcomp
inc
repnz
adc
clc
dec
ret
and
adc
sbb
outs
inc
ins
xchg
stos
dec
cmovns
and
adc
push
leave
sub
outs
add
ja
shl
repnz
xchg
sahf
shl
and
push
enter
mov
sbb
sub
icebp
(bad)
hlt
push
cmp
dec
aaa
daa
jbe
sub
enter
mov
nop
rcr
cmc
mov
cmp
pop
xchg
and
xbegin
mov
mov
add
fimul
cdq
in
xor
xchg
add
xchg
out
inc
dec
mov
in
xor
cs
dec
sahf
mov
out
mov
mov
out
test
adc
xor
outs
bound
scas
je
mov
nop
je
nop
lock
in
add
sub
enter
rcr
mov
pop
shl
pop
jnp
push
sbb
sub
cmp
or
pop
das
adc
push
push
pop
or
add
mov
pop
sahf
mov
ja
xchg
into
mov
outs
xchg
inc
(bad)
jmp
cld
push
pop
adc
mov
loope
not
jg
cmp
ss
add
inc
pop
dec
sbb
call
xchg
mov
pop
push
pop
inc
pop
scas
int
and
cwde
dec
fsubr
sbb
push
jbe
dec
and
mov
xor
ins
xchg
inc
out
pop
push
sbb
sub
dec
or
sbb
sahf
shl
add
movs
cmp
add
adc
and
xor
push
mov
push
daa
jo
pop
enter
lahf
push
adc
pop
repnz
pop
in
lods
push
dec
lahf
mov
pop
xchg
call
sbb
cmps
bound
pop
scas
aam
sub
fwait
in
rcl
sbb
rcr
push
js
and
mov
xchg
mov
cmp
inc
loopne
jns
fnstcw
push
nop
and
sar
sbb
cmps
loope
sbb
dec
shld
test
ins
dec
outs
xchg
ins
and
mov
inc
mov
pushf
aaa
inc
pop
and
mov
aaa
neg
mov
pop
xor
enter
ss
sbb
push
xor
add
or
xchg
outs
fiadd
or
sbb
or
inc
xchg
fs
add
mov
nop
enter
daa
dec
test
cdq
test
sbb
icebp
push
sbb
dec
idiv
add
test
dec
(bad)
repz
xchg
mov
push
mov
push
push
jnp
ss
ss
push
mov
rcl
push
lahf
ja
ja
in
aam
dec
daa
cmps
and
push
or
sbb
sub
popf
ror
(bad)
ja
inc
pop
mov
and
out
inc
lea
push
jl
mov
jecxz
mov
push
pushf
xlat
xchg
test
call
enter
fcomp
sar
(bad)
mov
cdq
lods
pop
add
adc
sbb
or
adc
lods
mov
shl
leave
mov
push
adc
mov
jns
cmps
stc
xor
add
(bad)
cmp
cmps
repz
out
push
enter
out
ds
movs
(bad)
sbb
inc
push
lea
dec
ds
repz
scas
retf
retf
jns
out
sbb
push
ja
sahf
out
out
sbb
pushw
jo
cli
ds
sar
lahf
aad
push
into
out
out
or
iret
xchg
je
fnstcw
in
shl
shl
repz
sahf
(bad)
push
shr
call
or
sub
jns
ja
out
aam
call
dec
outs
repz
out
icebp
es
arpl
mov
lods
jns
out
sub
pushw
outs
mov
dec
repz
cmp
mov
sahf
out
mov
movs
fist
fmul
repz
xchg
(bad)
push
and
jb
sahf
out
cmp
sti
push
loopne
xchg
cmp
out
mov
fsubp
repz
push
cmps
loop
jecxz
repz
pusha
fwait
(bad)
adc
xchg
call
sub
dec
jno
out
sahf
cmps
stc
cmp
push
out
mov
retf
call
iret
xrelease
jl
out
mov
or
inc
repz
iret
mov
and
out
ds
xchg
mov
cmps
stc
cmp
aaa
out
stos
neg
out
cmp
out
sahf
pop
and
addr16
cmp
(bad)
ds
hlt
push
ret
jns
out
out
mul
mov
loop
div
cmp
out
iret
std
sbb
cmp
ds
repz
rcr
stc
das
idiv
out
jne
int3
out
stc
data16
out
cli
push
cmps
(bad)
sub
repz
rol
(bad)
jns
out
cld
mov
stc
cmp
pop
mov
iret
repz
and
dec
outs
mov
sub
iret
repz
add
pop
add
stc
cmp
out
aaa
add
add
sar
xor
(bad)
add
cmp
mov
dec
push
fwait
mov
stc
dec
push
jne
adc
push
jl
iret
repz
sub
stc
cmp
sar
sti
push
or
jl
cmps
popa
(bad)
(bad)
cmp
(bad)
out
ds
shr
or
cmc
out
cmp
pop
or
push
int
jns
dec
xchg
ret
setno
inc
gs
dec
repz
inc
adc
ja
out
adc
mov
repz
hlt
mov
lods
adc
xor
cwde
mov
sbb
int
jns
rcl
sbb
jl
cmps
stc
sbb
add
jns
iret
shl
add
xor
out
jmp
repz
out
push
dec
xchg
sbb
dec
pop
into
and
lds
and
ins
mov
loop
and
ins
and
and
jl
jne
jbe
movs
fldenv
lahf
out
call
sub
mov
sub
out
out
push
sub
out
sub
in
iret
sar
push
jp
adc
imul
sti
sub
(bad)
cmp
repz
es
jl
or
out
jl
jne
aas
cmp
jl
(bad)
inc
cmp
sub
sar
in
dec
cmp
repnz
sar
loope
cmp
add
sub
stc
xor
int
inc
push
inc
movs
inc
(bad)
or
jl
cmps
inc
pusha
retf
and
imul
mov
xor
int
dec
or
dec
aam
dec
repz
cmps
push
mov
dec
outs
stos
cmps
stc
cmp
(bad)
loope
pop
dec
aas
sahf
out
sahf
pop
jne
stos
into
repz
sar
sub
stc
cmp
repz
mov
out
push
out
sahf
cmps
and
jp
(bad)
cmps
stc
xor
jmp
push
pusha
out
jl
mov
sub
fidivr
jbe
cmp
mov
div
dec
repz
push
mov
sbb
inc
arpl
(bad)
cmp
xor
cmps
gs
push
pop
dec
ins
out
call
mov
sahf
ja
clc
sbb
push
ins
mov
iret
sar
jnp
aaa
pop
mov
ds
repz
pusha
mov
mov
push
bound
arpl
adc
pushf
cmp
repz
add
push
test
out
retf
fs
mov
cmp
out
sbb
movs
in
out
sahf
out
imul
cmp
and
js
sub
imul
ret
call
jl
out
mov
xor
cmps
stc
cmp
nop
mov
jns
jns
mov
push
je
ja
out
xlat
or
push
pusha
fwait
out
idiv
inc
jno
push
cwde
retf
iret
repz
sti
xor
jo
mov
cmps
stc
cmp
pop
jae
jnp
fistp
jge
je
push
nop
xchg
jne
push
or
jns
ja
push
push
jo
out
lahf
out
daa
ja
push
stos
loopne
js
sti
cmp
repz
jbe
iret
repz
sti
sub
lahf
out
pop
test
sub
iret
cmp
repz
push
xchg
shl
sti
cmp
xor
xchg
push
xchg
mov
jns
iret
clc
sub
mov
in
jg
fistp
sbb
jns
push
mov
hlt
xor
sub
iret
cwde
retf
or
jns
iret
repz
test
je
cmp
out
or
jns
iret
xlat
or
repz
in
xchg
aam
out
add
ds
repz
adc
iret
repz
push
push
jo
mov
or
cmp
rol
mov
repz
jae
enter
cmps
stc
xor
mov
cmp
ror
test
adc
sahf
mov
js
jecxz
nop
mov
iret
cwde
enter
jg
repz
out
xchg
dec
test
iret
mov
or
out
shr
xchg
cs
inc
mov
clc
add
mov
pop
nop
xor
mov
mov
(bad)
sub
mov
sub
push
pop
pop
pop
cmp
sahf
cmp
aaa
data16
adc
add
jb
inc
xchg
outs
mov
or
in
inc
cmp
aaa
and
mov
and
and
fistp
or
fstp
pop
pushf
iret
lahf
(bad)
add
not
sub
subps
pop
add
inc
loopne
iret
inc
clc
(bad)
cmp
pop
push
jns
cmps
test
or
arpl
push
add
pop
leave
mov
fisttp
jecxz
adc
adc
inc
jl
mov
psraw
pop
mov
cmp
push
adc
adc
(bad)
(bad)
mov
push
sub
mov
loopne
mov
push
cs
and
inc
pushf
pop
cmp
shr
std
pop
hlt
or
mov
add
fadd
ins
inc
ins
daa
fild
das
daa
cwde
das
inc
mov
out
push
fimul
sbb
add
add
mov
in
xchg
fist
add
pop
pop
mov
jb
cmp
mov
jmp
int3
scas
outs
and
lock
fsub
and
sub
xor
push
test
xor
out
inc
jo
add
xor
js
sub
push
(bad)
xor
mov
mov
add
xchg
in
je
xor
div
pop
daa
and
sbb
out
lock
add
cmp
ins
inc
int
inc
mov
addr16
pushf
jecxz
mov
xor
je
mov
addr16
pop
xor
loopne
jb
push
cmp
fs
(bad)
scas
and
int3
fsub
xchg
mov
xor
and
xor
push
or
xchg
pop
ins
jl
pop
jb
pop
push
(bad)
aam
jb
pushf
in
loopne
popf
in
sbb
sub
cmp
test
xor
adc
xchg
mov
fld
push
ss
enter
add
add
dec
mov
cmp
add
imul
packuswb
xchg
xchg
retf
dec
push
iret
add
in
mov
lods
mov
add
and
pop
and
clc
cmp
sbb
sbb
and
mov
jl
push
ss
imul
jae
fsubr
pusha
arpl
pextrw
and
xor
int
ss
mov
data16
aaa
pop
sbb
cmp
(bad)
outs
aaa
or
out
adc
lock
cmp
inc
mov
es
adc
sbb
dec
jle
jne
pop
aaa
fs
test
dec
in
jnp
mov
iret
fdivp
pushf
sahf
pop
lock
mov
add
scas
cmp
inc
push
je
mov
xchg
mov
repnz
das
mov
add
push
or
das
xor
xlat
cmp
popf
pop
cmp
lahf
ins
ja
mov
push
loopne
and
cmps
in
sti
cmp
(bad)
or
fmul
push
push
push
ja
sbb
mov
into
out
push
pushf
push
cmp
imul
pop
rcl
aam
dec
and
adc
cmp
addr16
dec
inc
dec
add
push
add
enter
add
repnz
or
cmp
jns
or
in
std
(bad)
pop
push
adc
push
pop
push
inc
add
xchg
(bad)
leave
and
jge
(bad)
and
pop
sar
bsr
cmp
or
scas
jo
adc
add
pusha
mov
mov
cmp
push
daa
pop
out
(bad)
outs
das
cmp
daa
hlt
xchg
pop
mov
inc
das
add
add
push
add
jl
popa
inc
test
pop
jb
push
cmps
out
sbb
loop
int3
in
cmp
add
xchg
cmp
daa
in
in
add
and
sbb
pop
pop
jns
mov
push
cmp
mov
outs
ret
and
xchg
pushf
in
push
inc
add
pop
jb
sub
movs
sub
call
leave
dec
add
int
cmp
ret
pushf
jmp
push
out
ja
aaa
mul
fsubr
aas
adc
fsub
les
enter
add
outs
sub
aas
cmps
cmp
jnp
daa
push
outs
das
push
add
pop
leave
mov
mov
mov
xlat
mov
dec
dec
jecxz
aas
fdivr
xchg
adc
call
sub
jb
enter
cmp
inc
inc
xor
or
push
out
xchg
xor
test
xchg
js
adc
push
test
xchg
mov
inc
pushf
movs
add
(bad)
loope
jmp
inc
(bad)
push
wbinvd
sbb
push
scas
inc
push
daa
jmp
and
dec
inc
mov
push
pop
mov
inc
shl
cwde
test
push
push
add
pop
dec
jle
inc
xor
lahf
add
mov
jno
and
cmc
xchg
imul
add
xchg
push
out
pusha
test
cmp
daa
mov
add
sbb
pusha
iret
add
sar
(bad)
stc
cmp
mov
pop
inc
test
daa
cmp
inc
sbb
es
cmc
cs
adc
pop
inc
cmps
daa
mov
adc
xchg
arpl
packssdw
sti
in
mov
and
or
or
push
jb
shr
fcomip
enter
jns
add
xchg
loopne
gs
xchg
add
pop
enter
daa
sbb
jb
or
or
pop
enter
shl
push
(bad)
mov
iret
in
popf
stos
xchg
addr16
or
fst
fisubr
dec
dec
and
add
shl
lds
inc
adc
leave
enter
pusha
cs
and
js
add
cwde
pushf
int
push
add
js
retf
retf
imul
xor
ja
add
retf
leave
xchg
pushf
movs
add
lods
dec
cs
xchg
add
xlat
iret
inc
lds
lock
inc
pop
pop
dec
mov
or
mov
cmp
fs
inc
add
inc
mov
imul
daa
daa
and
ret
sbb
popf
inc
pusha
mov
cmp
dec
fmul
lar
add
xchg
inc
jo
test
sub
xor
jb
dec
in
and
pop
and
pop
outs
popf
mov
adc
sti
idiv
and
inc
sub
dec
dec
add
pop
cwde
add
repz
rcl
sbb
mov
sub
mov
xchg
cmp
nop
daa
xchg
and
int3
add
jb
jge
in
mov
femms
int3
xchg
pushf
sbb
mov
mov
inc
into
sahf
mov
loopne
por
not
leave
enter
int
movups
in
jbe
sbb
daa
pxor
pop
das
pcmpgtb
enter
pop
push
sbb
data16
not
(bad)
jno
das
jns
and
repnz
mov
xchg
and
mov
das
retf
sub
loope
pop
in
retf
fldlg2
sub
neg
into
add
jb
xor
xor
xor
outs
mov
cmp
pop
pop
pcmpgtw
ror
and
jnp
xchg
and
into
mov
push
rol
add
aas
fstp
mov
loope
push
jmp
int3
xchg
(bad)
stc
aas
(bad)
fsub
cmps
enter
(bad)
and
sbb
mov
loopne
lock
ds
jl
dec
add
sub
add
pop
jo
cmp
(bad)
push
inc
xchg
fcomp
xchg
cmovl
dec
or
into
mov
push
mov
xchg
mov
dec
add
in
adc
lea
push
adc
sub
leave
adc
fld
lods
mov
push
mov
push
dec
or
shl
iret
ror
fild
pop
jecxz
add
js
aaa
repz
push
push
movs
jb
bound
in
shr
daa
push
inc
shl
inc
fiadd
push
sub
xor
cmp
inc
fadd
jg
imul
sbb
enter
sub
dec
or
in
and
dec
and
mov
fld
inc
push
xor
adc
or
dec
or
mov
aas
in
enter
std
add
rol
rol
daa
(bad)
mov
add
push
or
fiadd
cdq
sbb
push
psubusw
mov
pushf
nop
fwait
cmp
jb
enter
jb
jb
into
(bad)
ds
repnz
push
inc
ret
inc
push
or
stc
pop
xchg
and
out
rol
add
or
add
sbb
inc
bound
or
outs
daa
push
shl
out
mov
xchg
fcmovnbe
dec
call
out
cmp
cmp
pop
and
push
pop
add
scas
push
xor
add
out
outs
or
addr16
xchg
xchg
push
inc
lahf
inc
inc
fmul
dec
push
pushf
push
in
lods
fldenv
xor
add
daa
fs
retf
add
inc
outs
daa
cmp
daa
and
adc
out
std
daa
rol
ror
mov
cmp
push
aam
pushf
daa
daa
mov
daa
sar
out
inc
dec
jo
mov
push
add
popf
in
out
push
or
push
daa
sbb
outs
daa
and
sar
or
cmps
test
mov
push
fiadd
cmps
mov
shufps
push
icebp
dec
stc
pop
pusha
movs
cmp
add
or
add
push
test
push
test
push
imul
jno
pop
aam
pop
xor
dec
dec
cmp
das
inc
dec
add
xchg
push
bound
or
jb
in
jb
(bad)
or
jmp
xlat
or
leave
dec
gs
push
sbb
adc
daa
pop
mov
rcl
enter
ror
fadd
loopne
dec
push
inc
mov
pushf
push
fs
lods
daa
je
into
sahf
nop
adc
add
or
movlps
add
inc
sbb
pop
leave
dec
push
in
inc
pushf
and
adc
push
pop
dec
ja
sub
cmp
or
mov
test
dec
out
daa
pop
mov
add
repnz
fdivr
aad
cli
and
mov
mov
sbb
inc
mov
(bad)
push
(bad)
jb
enter
ins
(bad)
jnp
mov
jbe
cmp
xchg
pop
push
xchg
or
call
lahf
pop
test
pop
push
out
and
or
inc
pop
push
xor
mov
xor
addr16
(bad)
push
loopne
pop
mov
xchg
je
jno
inc
pop
sbb
aam
daa
sbb
push
out
pop
pop
pop
pop
add
enter
adc
sbb
add
add
sbb
jb
sub
xor
cmp
inc
or
xchg
push
scas
mov
lods
pop
mov
cmps
fimul
add
push
daa
and
pop
or
in
pop
pop
xlat
cmps
cmp
jnp
adc
pop
and
mov
fcom
xlat
in
adc
push
ror
jl
pop
inc
shr
pushf
fmul
pop
fs
push
pop
or
mov
push
push
int3
xchg
xchg
out
xor
mov
dec
movs
pop
sub
(bad)
xchg
mov
xor
cmc
aas
pop
test
test
rcl
cmps
in
xor
sar
sar
pop
or
cmp
sbb
and
in
scas
iret
cmps
add
pushf
pop
repnz
fldl2e
popf
cmp
jb
loopne
xor
push
pop
sbb
fs
sub
and
push
add
add
cmps
or
(bad)
add
sub
inc
(bad)
cmp
stc
push
fimul
xchg
mov
movs
add
inc
outs
mov
maskmovq
not
mov
dec
inc
js
sub
fs
xchg
xor
push
add
jl
loop
xchg
xchg
out
pop
test
pop
lock
mov
mov
xchg
add
inc
inc
into
call
lock
sub
add
jo
cmp
jmp
in
leave
add
rcr
loope
addr16
xchg
push
fadd
pop
(bad)
or
and
sbb
test
dec
dec
jb
popa
adc
jb
mov
inc
leave
test
fmul
push
jbe
fcmovne
leave
jle
mov
xor
sbb
popa
xchg
fsub
movs
xchg
mov
aam
in
or
cmp
in
fisttp
jb
adc
aas
dec
sbb
hlt
mov
add
bound
nop
and
inc
aas
int3
ret
jg
push
mov
pushf
popf
pop
add
pop
add
pusha
add
sbb
dec
mov
pusha
mov
arpl
int3
dec
jb
mov
fwait
leave
test
frstor
enter
fsub
mov
fmul
dec
arpl
daa
ins
and
xor
pop
fimul
xchg
and
ficom
ficomp
fisub
jb
dec
enter
and
in
xor
dec
fs
hlt
dec
fidiv
cmp
inc
ficom
pop
fisub
jb
mov
push
mov
xchg
jb
mov
fisub
xchg
push
test
xchg
or
in
dec
(bad)
into
stos
xchg
xchg
xchg
(bad)
fsubp
out
inc
push
inc
dec
jb
adc
push
in
mov
mov
jp
and
daa
loopne
in
call
nop
out
dec
inc
pop
(bad)
jmp
cmp
jecxz
por
pop
repz
add
mov
pavgb
or
adc
sbb
leave
xchg
and
daa
or
or
add
or
jns
sbb
add
popf
mov
jmp
pop
repnz
lea
or
add
outs
test
mov
xchg
xchg
pop
push
sbb
fst
cmps
addr16
inc
dec
xchg
mov
nop
pop
es
adc
retf
add
scas
sbb
add
pop
repz
sub
add
inc
mov
or
adc
sbb
daa
and
xor
das
inc
dec
dec
dec
dec
dec
push
pop
arpl
dec
dec
imul
xchg
and
mov
in
cmps
push
scas
pop
mov
mov
sbb
and
sbb
pop
sub
lahf
(bad)
popf
push
cwde
enter
add
mov
mov
imul
pushf
bound
(bad)
loop
jb
enter
add
mov
xor
sub
xchg
loop
cmovle
push
or
pop
or
enter
jns
test
in
enter
mov
mov
repnz
pop
(bad)
aad
mov
fstp
in
lock
xchg
das
jecxz
adc
xchg
mov
jmp
push
(bad)
and
and
enter
daa
dec
sub
dec
dec
mov
add
and
test
movs
sbb
repnz
and
imul
je
call
and
push
dec
repnz
jecxz
add
and
scas
jecxz
add
test
cmpxchg
dec
dec
mov
dec
dec
dec
fsub
call
dec
clc
in
or
leave
enter
das
sbb
and
sbb
jb
xor
cmp
inc
sbb
and
push
sbb
sbb
in
enter
sbb
add
xchg
or
(bad)
ins
test
jnp
pmulhuw
add
fisub
or
je
inc
lods
xor
xlat
les
(bad)
daa
call
inc
adc
ins
in
fldenv
jno
add
repnz
adc
add
sbb
xor
cmp
inc
or
daa
daa
dec
inc
push
push
or
enter
pop
adc
in
in
leave
je
adc
xchg
jb
pop
lahf
sbb
fmul
mov
(bad)
loopne
das
adc
inc
call
out
in
(bad)
and
adc
sbb
and
(bad)
sbb
sub
pop
and
out
outs
mov
xor
push
add
mov
mov
fadd
ret
outs
enter
inc
fstp
outs
ins
lahf
std
push
out
jo
or
nop
addr16
cmp
out
aam
jb
ss
push
jo
leave
inc
jb
jne
cwde
xchg
fild
pop
mov
pop
and
test
mov
repnz
fld
lods
pop
(bad)
ja
cmp
cld
daa
jno
xlat
test
jno
mov
push
jo
sbb
add
jb
mov
add
out
call
fmul
jb
adc
and
mov
inc
pop
pop
inc
jo
jbe
sbb
and
mov
mov
dec
fcom
sbb
loopne
xlat
mov
addr16
jmp
cmps
xlat
jae
mov
shr
dec
cs
test
cs
push
jmp
xor
lahf
je
lahf
mov
fst
add
add
pusha
in
enter
jle
xchg
cs
not
popa
and
and
je
lock
mov
movs
pop
push
or
cmp
jmp
jb
and
jne
adc
cmp
inc
movs
imul
lods
jmp
and
xchg
mov
mov
pushf
pop
loopne
lahf
jbe
xchg
retf
and
in
or
dec
mov
and
mov
cmp
mov
cmp
xchg
cdq
int3
test
imul
inc
ja
daa
lock
in
outs
in
popf
sbb
fisttp
xchg
push
lods
data16
mov
dec
sub
xchg
cmp
push
cmovnp
aas
js
cmps
xchg
xchg
xchg
xchg
or
mov
dec
faddp
out
add
dec
push
inc
jnp
jns
ja
adc
neg
sbb
jb
and
sub
xor
sahf
mov
pop
push
pop
or
sahf
int3
pop
popa
imul
jb
jo
fistp
daa
les
jb
pushf
movs
lods
mov
jb
jbe
pop
clc
out
adc
sbb
jns
inc
mov
(bad)
add
pushf
mov
jp
lahf
xor
inc
mov
add
call
lods
out
iret
jp
in
mov
push
inc
in
lea
or
and
lock
lods
sbb
add
cld
mov
mov
jnp
jae
in
add
add
daa
pop
leave
jnp
xlat
(bad)
and
daa
daa
out
idiv
icebp
ins
fistp
fld
push
(bad)
aas
or
in
xor
out
int3
icebp
xor
cmp
inc
icebp
dec
icebp
push
and
and
add
fstp
xchg
jnp
jl
daa
pop
add
jl
setle
scas
mov
add
inc
je
add
jl
fcmovne
leave
ins
iret
fabs
jmp
xchg
icebp
stc
add
add
push
mov
jb
pop
adc
pop
or
or
add
sbb
in
and
jge
sub
cmp
cmp
add
xchg
bnd
add
sbb
mov
aaa
pop
and
push
add
xchg
repnz
cmp
mov
repnz
add
xchg
aaa
mov
loopne
call
xchg
lock
daa
repz
or
sbb
xchg
ja
mov
mov
mov
adc
repz
aaa
fs
repnz
imul
sbb
pop
mov
mov
lahf
les
sub
jg
hlt
adc
jbe
ins
addr16
mov
and
adc
jo
leave
test
daa
movs
pop
add
add
sbb
mov
push
pop
add
outs
add
mov
jg
xchg
mov
rcr
push
add
(bad)
in
xchg
and
fsubr
or
xchg
fcomip
das
cmc
cmp
fst
inc
dec
add
lds
jp
jno
outs
jb
dec
ret
lds
fcomp
ror
lods
js
fcom
jo
mov
das
mov
mov
fabs
jne
test
(bad)
aam
cmp
sub
add
ficomp
xor
push
add
cmp
adc
rcr
(bad)
or
and
aaa
nop
cwde
jns
jb
mov
mov
add
rcl
enter
sub
or
ret
dec
mov
xor
and
pop
and
adc
jae
push
push
sbb
mov
repnz
js
add
bnd
test
ret
push
test
adc
enter
push
(bad)
add
fld
add
in
in
(bad)
clc
adc
or
or
clc
pop
push
jae
repnz
jnp
mov
add
cmp
or
stos
movsx
leave
outs
popf
in
pushf
xor
test
test
daa
dec
outs
clc
out
inc
mov
adc
add
(bad)
mov
xchg
add
stc
inc
popf
pushf
pushf
pop
pop
fs
je
lds
xchg
daa
sbb
retw
mov
lock
add
and
push
daa
int3
dec
push
push
cli
cmp
jb
push
push
inc
add
push
add
add
pop
xchg
push
push
pop
mov
out
add
mov
mov
cmp
xchg
pushf
pop
movs
jg
xor
pop
out
lods
or
ss
inc
xor
loope
pop
add
cmp
in
sti
sbb
sti
xor
inc
xchg
mov
or
popf
pop
mov
iret
push
pop
pop
gs
pushf
sbb
pcmpeqw
dec
cs
pushf
pop
pop
test
pop
mov
add
add
cmp
add
inc
mov
cmp
addr16
sar
mov
xor
jo
les
test
and
cs
outs
inc
inc
mov
pop
dec
or
dec
add
push
pop
aas
sbb
pop
cmp
das
(bad)
or
push
xchg
or
mov
jecxz
jo
pop
mov
cld
jns
mov
add
sahf
xchg
push
pop
pushf
push
movs
jbe
cmp
mov
retf
cmp
in
in
pushf
test
movs
pop
(bad)
std
adc
sbb
pop
xor
mov
add
push
outs
test
add
mov
mov
pushf
sub
mov
outs
(bad)
dec
test
test
mov
and
sub
(bad)
sbb
and
sub
xor
ror
xchg
in
and
ror
cs
out
outs
ja
daa
and
add
stos
xchg
jle
mov
sbb
(bad)
out
icebp
sahf
add
adc
push
add
(bad)
enter
xchg
pop
pushf
mov
push
dec
into
ds
push
jmp
add
cs
ss
add
mov
jl
xchg
ss
(bad)
popa
imul
mov
xlat
jns
or
mov
jg
int3
aam
mov
cwde
mov
dec
repnz
out
mov
adc
je
push
xchg
fisub
(bad)
in
pop
add
pop
push
and
punpckhdq
in
sub
pop
xor
add
dec
xchg
test
les
dec
push
xor
nop
cmp
sbb
add
xchg
dec
mov
mov
nop
pusha
(bad)
dec
and
push
rol
mov
sahf
inc
sgdtd
add
add
adc
enter
push
outs
push
inc
xchg
pushf
xchg
aas
xchg
add
call
add
jb
jb
in
jp
pop
add
inc
mov
add
mov
outs
xlat
lods
mov
xlat
ror
daa
mov
(bad)
add
push
pop
psraw
xchg
and
daa
add
in
or
fs
test
comiss
adc
adc
adc
int3
dec
dec
adc
pop
dec
dec
ud2
dec
inc
dec
sbb
scas
lea
xchg
ror
mov
daa
inc
pop
pop
inc
add
mov
mov
addr16
rcl
or
xchg
add
adc
xor
pop
and
pop
pop
adc
js
iret
xchg
dec
adc
test
add
mov
mov
mov
mov
xchg
ror
das
rol
fld
xor
jmp
stc
xchg
mov
pop
xor
push
cmp
add
and
jmp
in
in
in
or
rcr
add
xchg
xchg
lock
mov
or
out
std
cmp
sbb
push
or
xchg
mov
ins
pop
push
dec
add
add
add
pop
dec
mov
cmps
mov
daa
daa
(bad)
int3
pop
aam
fcomp
in
mov
add
cmp
mov
and
leave
enter
add
cmp
in
push
dec
pop
push
pop
or
ds
cmp
imul
fs
mov
leave
leave
inc
retf
rcr
add
enter
jecxz
add
repz
mov
xor
pop
add
and
movs
sub
pop
inc
push
dec
sbb
repnz
add
add
push
jo
out
pop
jmp
leave
add
xchg
mov
xchg
fs
xchg
add
xchg
fabs
add
jmp
mov
in
or
outs
or
das
add
add
test
xchg
jne
daa
pop
leave
and
and
rcl
or
inc
popf
cmp
or
add
cdq
daa
inc
dec
mov
iret
or
or
inc
dec
outs
mov
push
add
pop
dec
or
xchg
mov
hlt
mov
in
int
pmullw
fld
inc
mov
pop
std
push
or
add
call
jbe
add
call
add
nop
outs
and
call
cmp
sub
push
mov
rol
sbb
add
out
and
sub
je
mov
out
mul
in
out
in
hlt
add
outs
cld
mov
rcr
or
push
daa
add
add
add
aas
add
dec
push
pop
push
mov
or
or
or
mov
xchg
call
add
dec
inc
ret
ror
dec
std
test
jb
cmp
or
or
in
sbb
xchg
je
pushf
cmp
ins
out
popf
or
not
add
or
jmp
addr16
jg
add
mov
inc
sbb
mov
mov
not
add
(bad)
push
and
lahf
mov
stos
adc
or
cs
push
inc
mov
sub
and
pusha
ja
and
sahf
loopne
test
xor
pushf
mov
push
add
mov
jmp
fisttp
xchg
xchg
dec
lahf
lahf
cwde
pop
jo
fild
lds
scas
mov
pop
mov
jns
or
lahf
in
lahf
les
nop
push
or
adc
push
cs
leave
adc
pop
bswap
mov
jmp
fisttp
mov
dec
addr16
out
push
push
ja
xor
xchg
adc
enter
out
pop
xor
adc
mov
sahf
arpl
imul
cmp
jae
(bad)
mov
dec
jbe
add
add
sbb
add
mov
jmp
mov
adc
add
sbb
pop
cmp
sub
mov
cmovo
push
pop
or
and
pop
arpl
or
xchg
xchg
or
mov
xchg
adc
or
test
in
xchg
pop
mov
xor
fs
sbb
fsub
sbb
jns
pop
(bad)
daa
cmp
mov
or
adc
or
jb
adc
dec
adc
movs
mov
mov
adc
mov
sti
mov
fild
bsr
adc
in
dec
out
push
jle
xchg
or
loope
cmp
popf
popf
pop
sahf
push
montmul
cmps
pop
pop
scas
scas
add
pop
add
mov
mov
inc
(bad)
call
xchg
into
add
movs
in
dec
scas
jmp
in
xlat
adc
add
sahf
int3
into
mov
adc
pop
sbb
add
invd
dec
add
xchg
test
jns
fcom
movs
and
cmp
push
inc
rol
xchg
add
inc
aas
int3
sahf
pushf
dec
pop
outs
pop
das
jp
and
or
or
popa
(bad)
or
psubusb
mov
mov
cmps
and
dec
or
cwde
ss
daa
mov
adc
adc
jb
xchg
jmp
repz
add
enter
add
das
sbb
mov
test
add
ret
(bad)
or
retf
cmps
mov
add
add
outs
aaa
in
leave
leave
jbe
xchg
outs
mov
mov
jb
or
or
xchg
and
or
xchg
xchg
xchg
adc
adc
and
dec
dec
dec
popf
popf
add
loop
cmps
lods
daa
je
in
in
adc
movlps
adc
push
jne
adc
and
dec
sub
xor
cmp
inc
jb
in
enter
rcpps
or
arpl
mov
inc
pop
sub
test
test
mov
out
sbb
or
leave
stos
sbb
dec
inc
into
adc
cdq
mov
addr16
stos
add
cmp
leave
ret
ror
fimul
and
sbb
or
or
xchg
xchg
xchg
add
adc
adc
outs
outs
add
scas
push
adc
xchg
inc
data16
and
sbb
sbb
inc
fistp
pop
mov
cmp
andnps
pop
and
repz
add
movs
mov
retf
sbb
lock
mov
dec
adc
adc
in
in
adc
jnp
repnz
mov
mov
cmp
cmp
or
hlt
paddb
or
adc
dec
inc
sahf
and
sub
adc
sbb
sbb
mov
cmp
push
sbb
add
cmp
add
mov
retf
stos
adc
and
add
loope
(bad)
xchg
daa
adc
xor
push
pop
mov
add
or
inc
sahf
mov
fld
or
loope
or
div
mov
lahf
stos
cwde
aaa
add
loopne
stos
loopne
test
rcl
push
dec
mov
mov
add
pop
(bad)
pop
or
push
shl
stos
mov
xor
xchg
inc
lods
js
inc
mov
push
nop
push
cwde
push
mov
fldcw
push
rcl
or
ror
stc
loopne
enter
pop
lods
test
add
lods
sub
pop
add
or
xchg
and
adc
sbb
and
inc
mov
add
inc
mov
leave
xchg
or
or
inc
into
into
xchg
pop
pcmpgtd
(bad)
leave
add
pushf
ss
sub
add
xchg
leave
shr
scas
into
fisub
prefetchnta
in
jbe
push
aaa
push
push
push
das
push
bndstx
fisttp
add
inc
jb
js
movs
jb
inc
jb
shl
pushf
cmp
inc
jmp
lock
dec
add
shr
ja
(bad)
sbb
pop
fsubr
sbb
xor
sahf
int3
ds
cmp
inc
add
dec
push
push
and
into
das
pop
pop
outs
or
in
xchg
or
mov
or
fs
push
nop
xor
mov
jb
lea
push
mov
and
leave
retf
xchg
and
lock
bndldx
or
ret
and
sbb
sub
xor
inc
adc
mov
addr16
push
imul
dec
ja
or
mov
pop
leave
cmp
aad
fld
shl
das
fst
lahf
sbb
dec
ja
rol
mov
(bad)
in
test
in
pop
pop
mov
cld
out
inc
into
ds
outs
sbb
jno
addr16
xchg
add
lods
enter
or
mov
mov
in
(bad)
or
iret
or
and
into
neg
sbb
mov
call
iret
scas
jmp
test
mov
inc
mov
daa
clc
dec
popw
je
sbb
add
push
pop
add
xchg
mov
data16
outs
add
in
leave
jle
or
mov
xchg
cmp
xor
sahf
mov
scas
push
inc
add
imul
cmp
add
cmps
iret
imul
cmp
pop
test
dec
enter
cmps
sbb
jb
in
aaa
add
aas
add
add
pop
push
jb
cli
dec
xor
iret
or
xor
add
mov
sbb
mov
lds
call
das
lods
fisttp
mov
inc
mov
js
sbb
inc
das
sbb
push
stc
loopne
xchg
add
sti
add
enter
mov
daa
lock
cmp
push
xor
cmp
enter
push
inc
dec
(bad)
add
mov
leave
arpl
jae
or
or
or
xchg
ror
add
call
mov
(bad)
daa
daa
pop
pushf
push
mov
mov
xchg
xchg
add
loope
jg
in
enter
psubw
pop
add
mov
inc
xor
pop
add
iret
shr
xchg
pusha
pop
xor
inc
pop
sub
sysenter
add
test
jns
add
out
inc
sbb
(bad)
mov
daa
nop
xchg
dec
or
pop
xchg
ja
cs
pushf
sbb
pop
seta
push
fld
lahf
or
pop
jno
mov
mov
aas
out
cli
add
inc
mov
and
add
add
sub
xor
cmp
mov
jb
or
push
or
enter
arpl
sbb
jb
jnp
adc
adc
mov
push
cmp
enter
sbb
sbb
sbb
inc
mov
sbb
sbb
sbb
xchg
push
stc
pop
and
and
and
sbb
adc
sbb
and
cwde
nop
adc
pop
or
adc
sbb
test
aaa
pop
cmp
mov
leave
sti
jne
xchg
and
jb
inc
scas
and
rsqrtps
pop
pushf
mov
bound
push
jb
into
sahf
int3
sahf
or
mov
enter
mov
push
jb
in
leave
mov
adc
adc
jnp
(bad)
adc
jmp
cmp
pop
and
sbb
sbb
sbb
enter
sbb
sbb
add
cmp
push
cmp
jg
and
xchg
and
push
and
bound
in
xchg
push
es
sub
mov
mov
xchg
sub
mov
and
das
xor
enter
xor
xor
push
sbb
jnp
xor
jmp
stc
ror
and
cmp
add
or
enter
adc
cmp
jb
sub
xor
add
jmp
popf
pop
inc
inc
cmovp
pop
push
cdq
cmp
inc
pop
bound
aas
jb
inc
mov
dec
or
xchg
daa
mov
call
xchg
fst
ret
sbb
jb
rcl
push
loop
jmp
pop
cli
pop
and
pop
in
leave
enter
sbb
and
sbb
jb
popa
xor
arpl
mul
and
gs
int
cmp
enter
imul
mov
ins
mov
push
jb
fs
outs
mov
jb
cmp
cmp
ror
aas
loop
jmp
cli
jnp
and
adc
ss
out
jg
sbb
ins
sbb
sub
fstp
stc
push
push
jne
add
fwait
add
mov
iret
retf
add
xchg
repnz
sbb
mov
inc
inc
dec
jo
leave
leave
inc
ins
je
xchg
mov
add
scas
cld
enter
xchg
lahf
addr16
cmps
add
in
leave
scas
mov
movsx
leave
leave
jmp
sbb
shl
cmp
or
js
or
enter
shl
sbb
xchg
and
add
inc
inc
add
push
push
fistp
sbb
in
shr
cmp
shl
shr
shr
dec
leave
leave
leave
leave
call
leave
mov
sbb
out
dec
enter
dec
pop
ret
sub
fs
mov
pop
push
pop
add
pop
mov
repnz
add
scas
xchg
cmp
dec
pop
aas
cld
and
ret
pusha
pavgw
mov
(bad)
in
ja
pop
adc
xchg
lods
pop
mov
call
pop
stc
sbb
jg
pop
adc
test
add
mov
enter
and
mov
sahf
sub
leave
in
sub
sbb
jb
(bad)
or
or
or
pop
xlat
sbb
imul
pop
scas
push
xchg
mov
movups
add
adc
inc
sbb
and
xor
dec
mov
cmp
and
les
dec
adc
cmps
adc
adc
jb
fld
inc
sub
dec
leave
in
test
push
sub
arpl
leave
leave
imul
or
mov
mov
xchg
or
pushf
stos
mov
ja
cmp
adc
(bad)
adc
adc
shr
xor
sub
cmp
dec
sub
mov
mov
mov
push
and
(bad)
in
enter
sub
dec
pop
imul
jns
iret
vshufps
xchg
xchg
mov
mov
xchg
fst
cmps
scas
push
(bad)
and
enter
xlat
or
jmp
sti
sub
add
or
add
and
mov
lods
arpl
neg
push
call
mov
pfrcpit1
sbb
enter
add
mov
xchg
sub
dec
in
cmp
leave
leave
leave
outs
jbe
xchg
cmp
or
daa
inc
mov
lds
adc
dec
data16
adc
int
or
mov
leave
add
sbb
fisttp
xchg
popa
das
add
jg
enter
enter
sub
sbb
jb
sub
sub
sub
sub
in
leave
enter
push
inc
sub
das
daa
daa
daa
mov
data16
jbe
pop
and
push
pop
mov
pop
enter
fild
and
in
mov
adc
mov
in
in
in
mov
rcr
dec
xor
mov
jmp
xchg
movs
rcl
pop
or
xchg
fisttp
je
outs
mov
jmp
daa
leave
leave
in
sub
inc
dec
or
pop
or
cmp
addr16
jnp
xchg
xchg
xchg
xchg
and
xor
lahf
das
cdq
adc
das
add
jmp
pop
push
gs
add
ja
sub
mov
sbb
sub
cmp
retf
xchg
pop
mov
xchg
or
add
arpl
dec
inc
sahf
imul
mov
in
and
lock
int3
shr
(bad)
iret
das
(bad)
out
jnp
lsl
int3
sbb
jo
out
cmp
pop
in
inc
ret
sub
pusha
test
mov
sbb
cmp
pushf
nop
imul
cmp
and
ds
aas
add
nop
xchg
int
das
jle
jns
stc
xlat
das
dec
das
push
das
pop
test
in
das
pusha
add
jae
movs
or
mov
jb
or
or
and
fmul
bswap
fucomi
xchg
std
xor
adc
adc
push
adc
leave
sub
sbb
jb
push
sbb
sbb
jbe
dec
inc
mov
pop
mov
lods
and
cmp
sub
pop
aaa
add
mov
sub
sub
inc
sahf
int3
pop
test
in
enter
das
pop
mov
mov
xor
aam
das
fbstp
mov
cmp
or
push
ss
push
pop
cmp
pop
retf
repnz
inc
daa
xchg
iret
xor
xor
cs
add
add
fxch
leave
cmp
push
pop
cmovb
jb
enter
dec
or
and
imul
(bad)
in
scas
cmps
fisttp
iret
add
fild
out
(bad)
sahf
mov
or
xor
or
or
pop
or
in
daa
comiss
aaa
adc
sahf
mov
inc
adc
push
pop
push
daa
and
aas
addr16
outs
sbb
daa
mov
mov
(bad)
lea
jl
add
add
loopne
sub
lock
xor
xor
movs
xchg
fld
xor
add
in
mov
js
pop
ja
imul
xchg
inc
int3
add
sysret
in
inc
out
aaa
and
das
pop
popa
fisubr
xor
jns
and
xor
xor
cvtps2pd
bound
iret
push
push
(bad)
or
cmp
jp
or
lea
and
cmp
or
leave
enter
adc
adc
retf
fcmovne
in
in
pop
in
hlt
ud0
cmp
in
pop
sbb
sbb
pop
sbb
sbb
inc
mov
pop
das
push
aaa
aas
jb
ins
or
push
and
and
add
push
inc
mov
test
lea
xchg
sub
push
pop
xor
dec
movs
push
icebp
add
mov
or
adc
shl
test
call
in
lods
inc
inc
push
cwde
inc
ss
mov
xchg
adc
aam
and
mov
(bad)
nop
mul
add
lea
jb
add
or
aaa
or
sti
sbb
jl
aaa
add
xchg
in
dec
aaa
push
aaa
pop
popa
ret
or
dec
aad
push
test
mov
dec
aad
daa
push
pop
aaa
lahf
aad
pop
push
mul
int3
sbb
jbe
pop
pop
fninit
je
jbe
fisttp
xlat
pop
xchg
str
dec
inc
(bad)
(bad)
dec
iret
(bad)
cmp
jb
or
cs
add
and
push
adc
iret
xlat
add
sub
push
cmp
dec
jg
and
ins
push
popa
add
add
xchg
push
xchg
pop
xlat
movs
sub
dec
dec
dec
and
outs
int
dec
dec
dec
dec
fucomp
lock
enter
cmp
pop
femms
or
or
jb
and
das
or
or
or
push
push
pop
pcmpgtd
cmp
enter
adc
inc
mov
pop
mov
sbb
sbb
sbb
sbb
sbb
jmp
or
in
xchg
and
and
and
mov
jb
and
dec
and
and
add
push
in
sub
xchg
or
test
daa
loopne
pop
push
adc
pmaxsw
xchg
cmovo
cmp
dec
outs
fstp
loopne
call
jb
sbb
pop
push
sbb
pop
mov
fldenv
sub
cmp
outs
addr16
aaa
(bad)
cmp
dec
push
pop
enter
arpl
outs
jns
sbb
jb
test
mov
or
cmp
xlat
adc
loop
pop
mov
add
test
mov
mov
fisubr
push
loop
fidiv
mov
test
outs
cmp
jno
mov
stos
add
push
and
cwde
test
(bad)
ror
das
dec
imul
addr16
add
aam
iret
add
inc
fist
adc
inc
jp
cmp
and
xchg
add
adc
mov
add
xchg
fsub
psubusb
jb
and
stc
add
sub
adc
ds
loope
movs
push
push
pop
addr16
dec
outs
or
fsub
jo
paddusb
cmps
not
fstp
pop
in
cmp
(bad)
je
and
xchg
test
dec
int3
fsubr
jb
mov
in
fisttp
xor
inc
scas
icebp
in
xchg
stos
jl
pushf
and
xor
and
hlt
mov
fild
cmp
dec
scas
cs
test
test
jb
in
cld
mov
je
jmp
xor
ins
cmp
xchg
mov
das
stos
jne
inc
mov
add
cmps
in
cmp
or
jns
dec
jb
loope
loope
fs
pushf
dec
mov
pushf
cmp
mov
mov
loop
cmp
loop
pushf
dec
dec
cs
ins
mov
pushf
pop
jb
movs
mov
leave
push
jb
cmp
xchg
sbb
jecxz
jecxz
mov
pushf
pop
jb
jecxz
fs
push
jb
cld
lods
in
jb
mov
cmp
test
daa
and
and
mov
sbb
pop
jmp
mov
push
jo
hlt
out
int3
(bad)
mov
cwde
in
das
aas
add
mov
jmp
in
in
fs
xchg
in
bound
punpckhdq
ss
xchg
dec
popf
mov
mov
(bad)
in
mov
lock
shr
jo
(bad)
icebp
outs
push
leave
add
sbb
out
add
fcom
aaa
inc
push
jmp
out
retf
ja
xor
out
xchg
and
push
inc
add
pop
add
daa
mov
gs
jnp
xchg
(bad)
enter
pushf
cmps
or
mov
shl
js
inc
mov
inc
in
in
inc
cmc
and
enter
add
adc
or
bnd
adc
fsub
shr
inc
add
dec
add
add
ja
cmp
imul
call
add
call
push
and
dec
dec
enter
lods
push
mov
aaa
cmp
call
xlat
(bad)
lods
mov
or
sub
xchg
mov
daa
fdivr
dec
cmps
call
lahf
jmp
stc
out
jmp
adc
repnz
sbb
and
mov
rcpps
pop
or
or
jae
sub
xor
jmp
pushf
cmp
add
dec
dec
mov
jnp
and
mov
inc
add
(bad)
cmp
cmp
add
sbb
cmps
cmp
xchg
pop
fadd
dec
cmp
add
data16
dec
ds
sbb
add
sbb
jb
or
push
daa
sbb
jmp
test
ja
mov
mov
nop
xchg
pop
leave
or
ror
and
inc
mov
or
or
repnz
inc
gs
adc
inc
mov
sbb
and
sub
xor
adc
fcomp
in
sbb
fisub
(bad)
jp
dec
dec
dec
or
fmul
(bad)
mov
nop
cmp
push
inc
inc
add
add
mov
in
sub
cwd
cmp
xchg
jg
call
jb
and
nop
dec
stos
jecxz
jns
jb
repz
add
push
dec
data16
sbb
push
dec
push
pop
das
and
or
xor
or
in
in
dec
or
cmp
cmp
adc
jb
aas
inc
mov
test
mov
cwde
vpcomud
add
mov
in
mov
pushf
daa
inc
loopne
dec
cmp
in
pushf
in
push
pop
out
adc
xor
dec
and
test
cmp
ins
shl
in
iret
out
cmp
in
dec
sbb
dec
sub
xor
cmp
clc
mov
push
jo
sbb
pop
lock
mov
out
pop
out
add
add
cmp
leave
inc
pop
dec
xor
call
sub
inc
sbb
rol
or
sub
pop
daa
daa
mov
ds
leave
and
dec
dec
xchg
pop
rol
push
les
pop
jb
lock
pushf
cmp
sbb
push
jne
je
repnz
repnz
jb
iret
rol
enter
push
loopne
add
ja
and
cmp
repnz
push
leave
inc
jb
fsub
stos
add
repz
repz
mov
dec
xchg
dec
xchg
fcmovne
mov
test
mov
jmp
fabs
mov
pushf
dec
sbb
mov
pop
pop
repz
inc
cmps
icebp
add
lahf
hlt
and
nop
sbb
pusha
daa
sub
ins
out
in
stos
dec
push
mov
mov
ret
add
pop
jo
push
adc
fnstenv
or
sub
mov
in
sbb
dec
mul
mov
test
add
jb
push
daa
pop
das
pop
xor
and
mov
cmc
xor
or
nop
sub
cmc
dec
push
cmps
push
push
pop
dec
pop
add
in
mov
sbb
jae
not
gs
out
psadbw
add
shl
cmc
ror
add
shl
ret
mov
call
sbb
sysret
pop
or
or
pop
pop
push
daa
or
dec
xor
in
or
or
loopne
enter
je
cmp
not
neg
push
push
add
mov
push
mov
int3
add
aam
adc
shr
push
push
test
dec
inc
mov
pop
pop
pop
pop
inc
push
pop
push
daa
push
das
push
aaa
pop
pop
pop
pop
push
aas
push
inc
push
dec
push
push
pop
pop
pop
pop
push
pop
push
addr16
outs
push
ja
mov
jg
push
(bad)
mov
clc
inc
xchg
ror
retf
add
enter
add
add
xchg
outs
in
push
sub
xor
sbb
movs
push
jle
xchg
in
leave
leave
push
mov
leave
leave
leave
leave
scas
mov
(bad)
leave
leave
leave
leave
into
(bad)
fsubp
in
leave
leave
out
idiv
push
push
in
in
push
push
push
es
in
cs
sub
in
dec
push
pop
aas
inc
push
leave
pop
add
outs
add
mov
inc
sbb
aam
pushf
xlat
push
retf
xchg
sbb
sub
mov
scas
scas
or
or
sbb
jb
or
or
inc
push
aam
test
stos
cmp
outs
(bad)
sbb
add
ss
daa
fs
mov
push
push
xor
cmp
inc
add
push
dec
inc
dec
push
pop
ins
nop
xchg
outs
cs
push
or
leave
in
leave
mov
das
in
fs
test
mov
mov
leave
in
enter
fadd
loopne
mov
lock
sbb
sti
inc
dec
lea
adc
test
aaa
pushf
push
mov
add
jnp
jg
inc
aaa
pop
and
test
mov
daa
cld
cmp
push
enter
aad
jl
stc
add
lock
aaa
push
inc
(bad)
paddb
add
add
and
lods
pop
adc
in
jbe
mov
out
jb
or
sar
pusha
xchg
push
jle
ja
test
test
push
leave
push
std
std
pushf
daa
lods
dec
cmp
push
and
jb
jns
in
mov
(bad)
adc
dec
(bad)
and
xor
jo
mov
addr16
mov
inc
push
test
ja
xchg
pop
and
add
out
xchg
add
sar
sbb
loopne
adc
add
aad
ins
adc
or
adc
dec
ss
dec
rcl
inc
cmps
push
pushf
xchg
ins
pop
cmp
xchg
mov
pop
mov
rcl
cs
sub
pop
iret
retf
cdq
pop
add
call
enter
push
xchg
outs
xor
lahf
dec
mov
mov
push
pusha
xchg
mov
add
sbb
jbe
pop
or
in
add
movs
xchg
xchg
ror
(bad)
or
pop
cmps
pop
(bad)
movs
cmp
pop
imul
dec
add
mov
aaa
cmps
dec
push
fmul
call
or
pop
adc
push
clc
pop
loopne
imul
scas
push
and
ss
outs
addr16
mov
inc
mov
je
in
lahf
or
and
(bad)
je
mov
sbb
mov
push
mov
add
fadd
out
pop
xchg
mov
repnz
nop
jne
or
shrd
ins
mov
sbb
xchg
fistp
fsub
and
mov
push
repnz
int
mov
sbb
inc
scas
loopne
add
push
push
(bad)
adc
pop
movs
xchg
pusha
pop
in
xchg
inc
inc
and
mov
and
and
ud0
je
pusha
sub
lock
rol
scas
es
dec
dec
rol
sar
pop
pusha
mov
push
aas
push
fwait
add
add
aam
int3
std
es
inc
push
push
add
dec
daa
adc
es
xchg
or
fcomip
test
mov
repz
loope
xchg
lahf
or
mov
iret
cmp
shl
pushf
daa
lods
cmps
mov
push
dec
test
(bad)
mov
adc
jo
pop
and
xor
mov
or
push
sub
mov
rcl
dec
dec
jb
pop
xor
sbb
push
(bad)
push
jae
mov
call
push
aas
push
mov
xchg
pop
jb
mov
adc
xor
loopne
jns
jmp
ror
dec
(bad)
dec
pop
dec
adc
or
sbb
pop
pusha
imul
dec
or
or
ror
in
cmp
addr16
int3
pop
rol
fcomp
and
cmp
or
add
(bad)
daa
xchg
adc
push
jno
aas
jb
jae
fs
dec
and
xor
(bad)
jne
mov
add
jae
dec
jb
jmp
or
or
daa
test
test
xor
or
test
push
int3
das
mov
popf
push
shl
cwde
xor
or
mov
add
loope
pop
push
sbb
es
mov
sbb
add
iret
cmps
in
mov
fcom
in
mov
xor
sub
lock
jg
cs
mov
pushf
daa
bound
inc
in
lods
scas
fdiv
enter
or
dec
lahf
jg
stos
popf
cmp
dec
(bad)
or
leave
mov
or
dec
cmp
jo
fmul
nop
pop
div
shr
call
gs
call
aaa
xor
test
idiv
ret
fsubr
andps
fs
je
sbb
jmp
idiv
popf
(bad)
or
lods
xchg
pushf
and
mov
xchg
imul
adc
xor
cs
dec
cs
mov
cwde
ror
jmp
add
(bad)
out
or
sbb
pop
add
jns
lahf
mov
mov
gs
xchg
pushf
xor
mov
mov
xchg
or
je
push
inc
out
xor
sub
and
(bad)
add
adc
pop
pop
push
daa
lahf
fs
or
imul
pusha
add
pusha
or
and
out
xchg
pushf
sub
pop
inc
inc
xlat
adc
jmp
daa
iret
inc
adc
test
adc
(bad)
mov
xlat
push
xlat
loop
and
popw
in
clc
add
push
daa
daa
daa
daa
sbb
cmp
daa
daa
daa
inc
push
pop
push
daa
daa
daa
jno
xchg
sub
repnz
gs
xchg
adc
clc
xchg
push
jb
add
mov
scas
loopne
jb
fist
les
aam
jb
frstor
in
xchg
adc
adc
daa
cmp
scas
xchg
xchg
inc
call
movs
xchg
dec
test
data16
addr16
out
test
ror
sub
fiadd
dec
fdivr
cmps
inc
aam
dec
cmp
adc
nop
xchg
and
adc
xchg
fsubr
pop
ja
movs
mov
in
inc
addr16
lds
(bad)
not
push
push
sub
xchg
sbb
jecxz
(bad)
movs
add
dec
jle
or
rol
ret
test
push
push
xchg
push
jbe
push
leave
(bad)
sbb
sub
cmp
pop
and
lock
or
xchg
xchg
movs
iret
loopne
mov
and
fsubr
loope
sub
sbb
mov
sbb
aas
jbe
(bad)
in
mov
imul
push
jmp
daa
cmp
sbb
outs
daa
mov
mov
in
hlt
rcl
mov
xchg
mov
dec
leave
inc
jb
push
js
fstp
mov
add
push
xor
mov
psubb
pushf
pusha
in
mov
xchg
and
cmp
pop
leave
or
push
jo
scas
mov
push
mov
xchg
enter
pushf
pushf
pushf
loopne
lock
imul
imul
daa
lock
inc
lea
or
xchg
sbb
or
daa
pop
out
imul
daa
icebp
imul
xchg
fcmovne
test
jg
call
repz
and
or
push
es
leave
cmp
ins
leave
inc
ror
fs
adc
test
push
pop
sbb
adc
or
pop
sub
cmp
lahf
pop
xchg
or
in
ins
loopne
cwde
lock
xchg
fisttp
adc
jo
outs
mov
loopne
(bad)
cmps
movs
fistp
mov
add
addr16
repnz
pusha
mov
inc
xchg
(bad)
sbb
outs
push
push
lods
push
leave
mov
jmp
mov
adc
push
bnd
sub
das
jb
pop
cmp
mov
pop
dec
daa
jmp
pop
inc
mov
call
inc
and
pop
xchg
inc
(bad)
outs
outs
push
adc
cmp
cmovo
and
arpl
je
daa
pop
ror
ja
sbb
xchg
mov
jo
cs
dec
mov
mov
in
or
push
(bad)
fbstp
and
clc
in
daa
pop
mov
and
cmps
adc
mov
mov
in
and
jmp
iret
ror
jb
or
cld
mov
enter
jmp
add
call
pop
mov
add
add
cs
sbb
or
and
out
cmp
jb
inc
and
pushf
pusha
mov
pusha
and
push
nop
jl
outs
daa
pusha
out
and
ja
pop
leave
mov
test
cmps
and
jb
mov
adc
and
xor
xchg
add
jg
and
and
mov
push
push
cwde
or
pop
add
and
ja
lock
scas
jae
outs
repnz
and
and
cmp
and
inc
jb
sahf
sub
dec
out
cmp
xor
in
je
xchg
pop
or
es
pusha
in
add
fwait
mov
inc
sub
je
ficom
rep
out
dec
mov
test
xor
cmp
scas
mov
and
dec
les
lahf
xchg
inc
repnz
aaa
push
daa
movs
jbe
outs
(bad)
nop
add
enter
add
leave
add
add
inc
aam
fisttp
cmp
rcl
pop
and
js
movs
xchg
dec
dec
and
add
cs
dec
cs
pusha
and
sub
push
rol
lods
js
movs
jnp
push
push
sub
fdiv
xchg
mov
sub
rol
push
xor
mov
add
sub
sub
daa
mov
mov
pop
rcr
add
out
js
push
sub
mov
xchg
sbb
daa
sub
sub
daa
and
xchg
adc
jns
jns
add
pushf
in
inc
sub
in
in
imul
call
cmps
inc
dec
xchg
retf
das
in
fdivr
cld
mul
and
pminub
jg
mov
sub
jp
mov
push
(bad)
call
cmp
daa
mov
scas
mov
cmp
leave
test
xor
shl
rol
jo
mov
pop
jbe
mov
sub
inc
in
les
or
cmp
adc
cmp
xchg
adc
and
ret
and
or
pusha
cwde
test
jnp
aam
cmps
push
push
jnp
jnp
dec
fisubr
add
clc
or
inc
test
shr
das
push
mov
jl
jl
scas
sbb
and
loop
push
jle
nop
push
sub
sbb
(bad)
shl
cmc
in
rcl
lock
inc
das
inc
or
enter
cmps
xor
xor
inc
xor
xor
pop
or
mov
jl
xchg
fisttp
jge
mov
jle
inc
aas
fmul
xchg
inc
or
in
jbe
retf
lods
push
cwde
mov
pop
sbb
loopne
jo
or
or
jg
cmp
add
dec
mul
jmp
adc
enter
xchg
inc
xchg
pop
and
fcom
shl
shl
leave
and
add
and
and
mov
enter
xchg
je
out
addr16
call
push
or
sub
push
xchg
in
nop
cwde
push
call
aas
mov
jnp
or
retf
and
dec
xor
cmp
xor
and
jl
pop
leave
xor
dec
add
dec
inc
mov
pop
pusha
xchg
push
in
and
sbb
in
enter
jmp
pop
xor
jo
inc
je
sahf
(bad)
retf
int3
pop
and
and
cmp
or
jb
mov
cmp
adc
sub
xchg
outs
push
inc
xchg
cmps
fs
and
rcl
add
adc
dec
dec
outs
ja
hlt
push
daa
dec
clc
unpcklps
or
cs
cmps
and
addr16
mov
cmp
cmp
and
int3
or
scas
popf
sbb
lahf
xchg
push
ins
inc
mov
test
(bad)
xor
push
int3
pop
mov
mov
pop
inc
sbb
aas
lock
loop
stc
sub
fdiv
adc
xchg
(bad)
mov
in
or
xchg
aas
or
dec
or
dec
sub
or
bound
iret
pusha
cmp
and
test
mov
or
inc
push
or
mov
ret
mov
push
bound
cmove
mov
pop
cmps
pop
fs
inc
shr
pop
iret
xor
sub
bound
packsswb
inc
cmp
dec
imul
outs
lods
jbe
ja
fmul
sbb
test
cld
(bad)
and
adc
or
out
and
or
jno
jle
nop
adc
mov
leave
and
push
ficomp
popf
fadd
(bad)
jecxz
jg
push
dec
cwde
jmp
and
(bad)
call
pushf
dec
push
out
pop
lock
daa
cmp
mov
and
popa
dec
jl
or
(bad)
mov
and
or
cmp
or
sbb
daa
xchg
fistp
sbb
xchg
add
push
and
jge
push
aas
das
or
and
je
adc
lods
mov
pop
pop
or
pop
vmwrite
fisubr
inc
dec
sti
and
inc
dec
push
push
dec
or
mov
loope
inc
sbb
movs
mov
mov
dec
jae
adc
(bad)
pop
or
push
push
aas
fadd
in
daa
cld
outs
pop
mov
xchg
fistp
pop
jnp
mov
dec
fs
push
out
outs
mov
sar
call
or
mov
xchg
in
fisubr
add
xchg
mov
cmc
lahf
jge
fiadd
or
jns
jg
or
das
mov
loopne
xor
leave
and
fsub
sbb
sub
pop
or
adc
inc
xchg
iret
sbb
push
lock
lds
mov
sbb
mov
jmp
or
or
mov
mov
out
or
dec
push
lods
ds
ret
fld
sbb
inc
cmp
jo
(bad)
js
jg
jb
loopne
pop
aas
add
or
test
mov
mov
mov
in
ins
retf
or
inc
rcl
dec
push
sub
sti
or
(bad)
push
sub
add
sub
push
cmp
push
popf
push
inc
fstp
jae
in
cmp
mov
push
retf
sub
pop
movs
aas
pop
or
out
push
mov
and
inc
in
js
push
(bad)
push
lahf
mov
jbe
movs
enter
inc
pop
mov
int
adc
sub
aaa
nop
add
test
icebp
push
add
stos
adc
push
ret
mov
aas
inc
loopne
or
mov
mov
add
mov
or
out
in
push
adc
inc
push
dec
loope
cmps
cs
push
and
jnp
push
jae
mov
(bad)
aas
cmps
pop
outs
pop
jb
fcomp
enter
pop
jg
inc
ret
je
fbstp
and
stos
mov
dec
sbb
cmp
or
fwait
aam
aaa
scas
xchg
pop
aas
and
dec
cmp
inc
dec
das
retfw
and
or
fs
repnz
into
inc
inc
jb
jbe
xor
std
sbb
cmp
push
and
pop
sbb
setns
addr16
add
adc
outs
out
ins
aad
jns
mov
or
inc
scas
push
push
cmps
pop
mov
js
in
imul
es
xor
xchg
dec
adc
xchg
fadd
pmulhw
imul
cmp
sahf
ja
xor
test
cmp
rep
rol
sbb
jns
addr16
lock
mov
mov
nop
test
out
sahf
fs
cmp
mov
out
sahf
out
in
shl
mov
push
fmul
push
outs
cmps
jbe
ret
xchg
and
mov
inc
push
outs
inc
add
fsub
addr16
dec
nop
fmul
lds
or
jns
lods
adc
mov
outs
cmc
pop
inc
shr
sbb
pop
xor
cmps
aas
cmps
mov
jo
jmp
xlat
ss
movs
inc
lock
iret
shl
or
movs
or
push
rcl
dec
mov
ret
aam
push
dec
das
arpl
mov
mov
xor
pop
inc
lahf
pop
mov
mov
das
and
loop
cmps
inc
pop
push
(bad)
call
adc
test
ins
jecxz
pop
xor
cmps
inc
sahf
dec
pop
rcr
arpl
sub
out
dec
jbe
shl
dec
es
sub
cmps
and
push
push
inc
pusha
jecxz
mov
mov
jecxz
outs
mov
jb
xchg
dec
or
imul
popa
imul
jns
(bad)
ret
scas
push
pop
push
push
cwde
ret
inc
movs
daa
adc
inc
aas
inc
in
or
add
scas
pop
frstor
push
jl
arpl
aaa
pop
dec
inc
ds
cmp
outs
outs
lds
push
inc
(bad)
gs
xor
dec
mov
add
add
stos
pusha
ins
mov
outs
jmp
popw
add
scas
adc
add
add
adc
ins
test
and
pop
jmp
jne
data16
jb
adc
inc
pop
aas
movs
or
dec
repnz
(bad)
adc
adc
pop
loope
dec
and
dec
add
and
xchg
or
adc
test
pop
js
cmps
ret
pop
jmp
adc
mov
add
into
pop
imul
daa
sbb
jo
or
jnp
mov
mov
outs
mov
jecxz
inc
mov
adc
nop
fwait
or
add
and
lds
scas
movs
rol
sar
sub
das
xor
rcl
push
mov
lods
or
aas
jg
adc
adc
rol
lods
pusha
aaa
cmp
aaa
pop
rol
xlat
adc
jo
es
scas
int
outs
add
je
int
sub
dec
add
sub
inc
push
lds
ins
pop
or
aaa
push
xor
adc
dec
dec
add
shl
mov
ja
push
mov
mov
mov
lods
mov
and
cmps
add
dec
adc
repz
repz
push
cwde
mov
hlt
icebp
jns
addr16
sbb
ins
mov
or
es
jae
ret
mov
pop
add
pop
pop
aas
data16
je
retf
addr16
push
pop
dec
jae
aaa
ja
inc
cmp
shl
cmp
lea
test
jns
inc
fsub
cwde
je
mov
pusha
mov
ins
push
dec
dec
dec
push
enter
inc
xor
shl
sbb
stos
add
adc
or
pusha
fucomi
cmp
out
aas
ror
enter
pavgb
or
and
pop
xor
fcom
test
mov
push
jo
js
sub
pop
pop
jg
dec
jl
adc
and
inc
mov
ja
dec
and
xchg
xor
outs
mov
dec
lahf
das
js
movs
ret
and
ficomp
pop
push
pop
push
xchg
dec
inc
xlat
inc
xlat
inc
aas
(bad)
adc
(bad)
aas
lods
add
sbb
scas
push
(bad)
ficomp
call
out
mov
pop
or
mov
xchg
aas
imul
sbb
stc
dec
or
inc
inc
pop
pop
dec
je
or
idiv
fild
adc
clc
sysret
cmp
repz
in
(bad)
push
jne
jae
cmp
repz
jo
outs
iret
repz
ins
ins
imul
ja
repz
dec
js
push
iret
repz
in
add
cmp
iret
repz
jl
test
jns
addr16
add
push
fs
out
xor
and
sub
sub
push
sbb
sbb
add
dec
lock
fsubr
mov
pusha
push
pop
mov
addr16
sbb
jns
ins
mov
iret
add
aad
add
dec
sub
pop
movs
xchg
mov
movs
(bad)
out
and
out
rcl
and
adc
push
inc
mov
push
push
cmc
push
test
push
gs
mov
push
adc
daa
pop
inc
inc
or
aad
add
dec
push
movs
and
mov
xchg
aas
xchg
xchg
sbb
xor
mov
inc
dec
sbb
shl
push
lea
cmp
mov
inc
ins
bound
imul
sbb
leave
jbe
(bad)
outs
imul
mov
movs
cwde
popf
push
inc
inc
jno
mov
inc
or
pop
inc
loopne
or
das
inc
inc
pop
jae
mov
stos
lahf
pop
xchg
mov
mov
dec
sbb
pop
nop
ins
push
(bad)
mov
fnsave
push
xor
into
xchg
add
inc
pop
shrd
push
in
imul
imul
cmp
or
arpl
mov
scas
aaa
or
mov
inc
out
cmp
inc
punpcklbw
pcmpeqw
push
(bad)
dec
jb
xchg
pop
xor
mov
inc
inc
and
mov
mov
xchg
das
push
mov
jno
aad
aaa
xchg
les
outs
mov
adc
inc
cmp
ins
rcl
dec
inc
aas
mov
push
or
inc
or
int
fwait
scas
mov
pop
xchg
push
loopne
cld
ss
jae
xchg
mov
inc
dec
add
dec
int3
pop
xor
xchg
pop
loopne
and
pop
outs
xchg
inc
shl
outs
sub
test
(bad)
push
xor
pop
test
call
out
pop
(bad)
(bad)
je
cmp
xor
adc
push
sbb
aaa
(bad)
mov
push
inc
pop
pop
push
inc
push
outs
aas
test
fnstenv
(bad)
aas
shr
mov
add
aaa
sbb
jno
(bad)
aas
ror
inc
jg
movs
xchg
inc
in
iret
cmp
ss
lea
cwde
cmp
pop
pop
push
sbb
push
mov
mov
inc
push
ret
cdq
rol
(bad)
xor
inc
pop
iret
retf
mov
mov
add
std
mov
mov
inc
cmp
sub
outs
inc
cmp
mov
push
cmps
inc
jg
ret
xor
xor
xchg
jmp
fdivr
xor
jb
inc
loopne
and
test
mov
lds
add
xchg
dec
pop
or
bound
lahf
jno
pop
mov
(bad)
call
inc
outs
and
fbld
outs
(bad)
dec
and
repnz
stc
mov
ins
jae
test
adc
inc
enter
jg
(bad)
(bad)
aas
pushf
pop
sbb
mov
fimul
mov
scas
div
loop
shl
jae
lea
(bad)
(bad)
inc
mov
adc
inc
mov
test
sub
push
inc
adc
adc
xchg
dec
fwait
xor
pusha
mov
rol
fmulp
sub
int
pop
fnstsw
movs
dec
daa
push
popf
ins
loopne
aaa
push
jo
and
cmovnp
mov
movs
push
add
cmp
out
xor
daa
dec
mov
daa
scas
push
dec
dec
inc
inc
(bad)
push
pop
pop
ret
xchg
xchg
mov
ja
inc
cdq
dec
sbb
shl
push
sbb
je
inc
pop
jmp
adc
outs
add
outs
inc
mov
mov
pop
out
popa
lods
aam
hlt
xchg
fadd
inc
push
inc
daa
leave
adc
add
push
add
in
jmp
dec
aas
psllq
push
or
je
push
call
shl
xor
jmp
dec
push
pop
lock
jmp
or
fisttp
jmp
push
push
sub
xor
daa
dec
dec
pushf
rcr
mov
mov
jno
jnp
sbb
aas
dec
push
or
xor
aaa
push
mov
outs
repz
clc
call
dec
sahf
out
stc
sub
cmp
loop
sahf
out
push
pop
fs
sub
aaa
or
mov
arpl
lock
and
adc
xor
sbb
dec
and
jne
ret
and
xchg
push
add
inc
lods
jne
mov
dec
and
jg
sub
and
inc
dec
push
push
or
lock
inc
inc
xchg
lods
pop
or
out
sbb
adc
mov
inc
push
jae
pop
dec
fiadd
mov
paddw
(bad)
lahf
sbb
(bad)
(bad)
out
sbb
add
jo
outs
pop
fisttp
inc
push
iret
repz
mov
iret
repz
test
cwde
nop
out
fdivp
test
jo
pusha
sahf
out
sahf
pop
pop
push
push
dec
dec
jns
out
inc
inc
cmp
xor
jns
out
and
adc
push
out
sahf
int
cmp
lahf
out
sahf
int3
enter
cwde
or
pop
adc
test
inc
add
test
sbb
add
or
popf
fmul
or
aaa
or
in
(bad)
scas
or
daa
fcmovne
in
and
adc
and
xchg
inc
inc
push
addr16
das
push
loopne
mov
pop
imul
cmp
out
and
jb
pop
jb
pop
jo
or
repz
jo
pop
xchg
sub
mov
aas
movs
loope
in
into
aas
xlat
sbb
data16
leave
xchg
mov
mov
fild
pop
add
add
outs
mov
xchg
add
popa
test
fiadd
ja
cmp
icebp
ins
push
mov
addr16
imul
ss
ror
mov
cmps
adc
leave
or
adc
adc
xchg
mov
je
rcl
sbb
jb
adc
adc
enter
xchg
sbb
jb
inc
sbb
push
xchg
pop
cwde
and
and
js
ja
retf
add
lock
cld
pop
adc
in
call
mov
xchg
adc
xchg
das
pop
pop
mov
aas
pop
nop
ins
inc
add
xor
add
aas
sub
inc
add
xchg
mov
lods
add
adc
enter
add
adc
and
cmp
and
leave
mov
adc
inc
add
add
movs
add
cmp
cmps
fisttp
pop
scas
jl
mov
cld
inc
jle
test
push
push
cld
pop
shl
cmovo
mov
inc
mov
out
adc
dec
mov
in
call
adc
mov
push
add
mov
xor
fcomp
push
push
and
loopne
jb
jle
or
jo
in
inc
cs
add
push
mov
rcl
lock
mov
mov
pop
push
xlat
aas
pop
cs
xor
test
push
pop
push
ret
pop
adc
jg
push
in
jnp
mov
enter
es
jb
add
cmp
sbb
dec
push
cmp
pop
js
cmp
repz
mov
repz
mov
dec
ins
add
push
pop
repz
repz
mov
bnd
sahf
out
add
dec
ins
add
dec
loop
xor
xlat
lock
push
ror
adc
and
xchg
fcomp
sbb
jb
retf
fcomp
shl
fsub
ror
aas
popf
sbb
pinsrw
adc
enter
popf
popf
xadd
das
cwde
adc
xchg
and
inc
lods
or
pushf
in
fst
test
mov
jb
pop
nop
and
and
and
outs
and
pop
adc
jo
cwde
lea
adc
xchg
mov
dec
sbb
mov
cmp
sub
jg
add
in
(bad)
pop
enter
inc
pushf
or
ds
push
ret
mov
adc
xchg
pslld
mov
leave
sbb
scas
mov
ret
inc
and
sahf
sub
lods
lds
(bad)
(bad)
(bad)
(bad)
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
in
(bad)
mov
cmps
iret
dec
js
inc
outs
(bad)
loopne
jmp
xchg
test
mov
movs
(bad)
jmp
cmp
inc
mov
popf
sti
(bad)
(bad)
(bad)
mov
out
jecxz
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
(bad)
(bad)
(bad)
push
jmp
dec
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
call
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
(bad)
(bad)
jmp
std
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
mov
and
and
(bad)
int
add
(bad)
(bad)
out
aas
sti
aas
jno
or
mov
pop
fs
dec
lea
aas
ret
sar
(bad)
(bad)
jmp
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
(bad)
(bad)
(bad)
jmp
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
(bad)
(bad)
call
std
mov
aas
ficom
jne
int
mov
addr16
push
mov
(bad)
(bad)
dec
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
(bad)
(bad)
mov
adc
movs
jmp
jg
sub
jge
mov
inc
rcr
push
(bad)
(bad)
(bad)
(bad)
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
(bad)
(bad)
mov
fmul
call
cmp
test
pop
mov
jne
fld
cmp
jno
(bad)
(bad)
(bad)
call
and
xor
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
(bad)
(bad)
(bad)
jmp
xor
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
mov
(bad)
mov
dec
dec
gs
std
or
pop
ficomp
frstor
bound
lahf
pop
adc
adc
es
(bad)
mov
inc
arpl
push
leave
mov
or
and
jne
movs
test
jne
inc
pop
jle
jo
pop
inc
and
inc
into
and
sub
xchg
mov
push
adc
clc
add
sub
or
jae
mov
les
(bad)
(bad)
(bad)
(bad)
sti
pop
mov
jnp
mov
push
push
call
xchg
loope
rcl
mov
xor
(bad)
(bad)
inc
mov
pop
push
sbb
test
dec
(bad)
xor
cli
adc
adc
lea
mov
test
cli
pop
sub
rcr
mov
ss
(bad)
(bad)
(bad)
dec
dec
stos
cld
js
das
jl
dec
cwde
and
int
and
into
jle
xchg
mov
aad
sub
(bad)
(bad)
dec
pop
mov
daa
mov
sbb
jnp
shl
icebp
dec
cmp
inc
xchg
push
adc
(bad)
(bad)
call
dec
out
pop
sbb
into
jp
jb
add
xchg
and
push
jae
inc
cmp
lods
adc
(bad)
call
add
movs
jae
jmp
(bad)
test
in
test
test
jnp
pop
push
call
jmp
push
stc
push
fidiv
and
mov
xor
or
fs
mov
fwait
mov
(bad)
(bad)
jmp
and
push
jge
dec
push
jle
inc
test
pop
mov
push
xchg
out
mov
jg
mov
(bad)
push
test
jne
call
and
dec
jle
in
fmul
push
or
jo
pop
sub
shl
pop
lds
cwde
lods
aad
pop
out
ficomp
jne
cmp
pusha
dec
loop
mov
loope
(bad)
(bad)
dec
inc
icebp
call
pop
in
jns
into
push
pop
(bad)
(bad)
push
mov
adc
inc
imul
(bad)
fcomp
cmp
mov
jg
fisubr
cmp
(bad)
fild
jb
jmp
xchg
test
in
out
arpl
lock
clc
(bad)
jmp
xchg
addr16
dec
cmp
dec
das
sbb
pop
sub
aaa
xor
mov
pop
push
xchg
test
or
xchg
hlt
hlt
or
dec
jns
inc
(bad)
(bad)
(bad)
inc
mov
gs
repz
push
inc
gs
clc
sbb
enter
cmp
les
(bad)
jmp
jmp
retf
mov
xchg
neg
test
aaa
cmc
clc
inc
cwde
fstp
cld
jno
cmp
cmp
sbb
popf
pop
mov
and
loopne
mov
(bad)
(bad)
(bad)
push
idiv
inc
dec
inc
scas
out
sbb
jl
in
out
xor
les
dec
out
jb
(bad)
(bad)
(bad)
call
stos
push
mov
dec
in
sub
scas
gs
inc
jmp
out
leave
cmp
push
xchg
ficomp
push
sub
sub
mov
fsubr
jecxz
pushf
inc
inc
arpl
xchg
(bad)
push
pusha
mov
ins
aad
cs
stos
ret
out
call
arpl
sub
rol
clc
jbe
cmp
mov
inc
mul
mov
dec
dec
and
dec
or
repnz
retf
xchg
je
dec
mov
mov
and
jge
cmps
xor
enter
(bad)
dec
or
(bad)
pushf
sbb
mov
mov
(bad)
dec
(bad)
(bad)
jg
fwait
das
(bad)
mov
xor
cmc
dec
aas
mov
in
sar
out
imul
shr
sbb
shr
(bad)
(bad)
jmp
leave
(bad)
mov
ds
data16
push
jge
ins
aaa
pop
jp
adc
pop
ss
(bad)
(bad)
mov
js
push
shl
mov
push
xor
cld
push
lock
mov
(bad)
and
(bad)
(bad)
(bad)
push
xlat
add
xchg
cmp
mov
clc
adc
sub
das
sahf
xchg
lds
inc
(bad)
mov
mov
std
(bad)
(bad)
inc
sbb
xchg
js
pop
mov
imul
out
cmp
sar
(bad)
(bad)
call
repnz
test
fdivr
lds
fild
xchg
mov
push
icebp
hlt
jmp
sar
idiv
jb
mov
cwde
lahf
rol
test
icebp
jnp
dec
loopne
add
stos
sub
mov
(bad)
jg
cs
push
xor
ds
sti
sbb
js
push
or
cmc
or
pop
sub
jae
(bad)
(bad)
call
stos
and
jecxz
ins
jecxz
mov
sub
add
jnp
call
leave
enter
(bad)
(bad)
mov
je
mov
cmp
test
dec
(bad)
arpl
(bad)
(bad)
jg
push
and
sub
xchg
rcl
(bad)
mov
daa
pop
pop
sbb
ror
or
stos
call
fistp
cmp
test
inc
stos
xchg
dec
cmc
test
(bad)
(bad)
jmp
in
out
fcomp
pop
shl
xor
mov
cmp
push
outs
std
pop
imul
std
push
dec
in
test
inc
jb
mov
sub
(bad)
(bad)
(bad)
call
cmps
mov
add
into
sbb
add
pop
push
test
adc
cli
ss
(bad)
(bad)
call
pop
std
mov
jno
loopne
stos
cmc
rcl
call
push
or
lds
stos
push
push
shl
push
dec
jge
push
xchg
or
push
std
adc
sub
stc
(bad)
(bad)
(bad)
(bad)
cmp
jo
(bad)
xchg
das
ja
mov
cmp
out
into
(bad)
jle
sbb
ins
loop
in
mov
push
in
(bad)
(bad)
call
stos
inc
inc
push
pop
and
xchg
les
sub
push
in
add
nop
sahf
mov
ret
mov
(bad)
(bad)
(bad)
jmp
inc
inc
out
xchg
pop
jne
arpl
and
sub
out
test
mov
pop
arpl
call
outs
mov
xor
push
sub
sub
xchg
or
clc
(bad)
push
fs
add
xchg
push
mov
enter
out
or
(bad)
(bad)
std
enter
mov
into
pop
jmp
retf
add
test
hlt
retf
sbb
ficom
cld
loope
jg
pop
push
dec
xor
sbb
ficomp
scas
xchg
push
stos
add
cmp
in
mov
call
(bad)
sbb
inc
sahf
inc
add
test
sub
pusha
push
(bad)
(bad)
(bad)
jmp
in
push
outs
ret
and
ins
sbb
out
cmp
push
pop
mov
loopne
rcr
or
call
lods
add
rol
add
leave
mov
pop
mov
(bad)
mov
loopne
out
xor
xor
mov
and
arpl
(bad)
(bad)
jmp
sbb
ret
out
scas
std
repnz
lock
pop
add
push
arpl
out
inc
cdq
std
(bad)
(bad)
(bad)
cmp
repz
xor
and
mov
inc
adc
repz
(bad)
call
and
jae
sbb
sbb
lea
out
xor
int3
test
movs
test
mov
adc
(bad)
(bad)
call
in
lock
jo
loopne
add
jmp
sbb
scas
push
mov
push
std
popf
mov
shl
cs
ins
stc
in
gs
dec
sbb
loopne
out
mov
mov
fisubr
xchg
sub
cs
xchg
mov
(bad)
(bad)
(bad)
(bad)
(bad)
arpl
cmp
pop
ret
std
xchg
or
fisub
popf
inc
push
mov
int
(bad)
sub
push
cmps
mul
iret
add
adc
xchg
adc
and
mov
(bad)
(bad)
inc
inc
jae
inc
stos
ins
jp
ret
ins
pop
jbe
and
jae
iret
mov
lods
pushf
adc
and
mov
test
aas
sbb
call
sub
inc
jmp
inc
das
push
sar
add
cmc
sub
test
add
push
push
cs
pop
shl
xchg
sub
inc
cs
aam
push
sub
jg
call
cdq
sub
mov
std
jo
jle
xchg
es
(bad)
cmp
lock
(bad)
(bad)
call
xchg
sub
push
xor
sbb
prefetch
aaa
je
push
imul
jge
enter
cmp
sbb
adc
dec
data16
in
cdq
pushf
fcomp
out
push
(bad)
jg
call
sub
fistp
sar
test
pusha
and
adc
call
repz
dec
call
sub
rcr
or
fadd
ret
in
pop
gs
call
into
jge
test
mov
push
call
lea
je
(bad)
(bad)
(bad)
dec
out
in
(bad)
mov
xchg
lea
dec
pop
mov
push
(bad)
xor
lock
call
mov
cs
push
jno
push
push
jp
js
sub
fcos
(bad)
(bad)
inc
pop
sub
sahf
daa
in
gs
push
stos
and
xchg
or
outs
mov
daa
fcmovnbe
(bad)
mov
(bad)
mov
sbb
dec
dec
aaa
and
and
aas
(bad)
cmp
pushf
lock
retf
lock
(bad)
(bad)
jmp
cs
dec
out
cmp
mov
imul
ret
(bad)
dec
cld
outs
stos
dec
mov
pop
(bad)
(bad)
(bad)
call
or
test
mov
mov
jge
xchg
sbb
sar
fmul
or
adc
inc
rol
xor
mov
jg
adc
mov
xor
cmp
div
sub
in
(bad)
(bad)
(bad)
std
xchg
rol
cs
cmc
stos
jae
add
xchg
aas
ret
pop
rcr
sbb
xchg
pop
(bad)
(bad)
(bad)
call
jae
inc
jp
bound
inc
ja
jg
dec
push
idiv
test
mov
rcl
std
jmp
or
cld
icebp
ficom
(bad)
pop
icebp
(bad)
jg
fidiv
or
xlat
xchg
jnp
retf
inc
int
pop
je
or
fdiv
jmp
cmc
pop
dec
cli
popa
mov
adc
cli
add
pop
fdivr
(bad)
(bad)
jmp
xor
adc
push
adc
leave
stos
test
mov
xor
jge
sub
(bad)
(bad)
(bad)
(bad)
js
mov
pop
shl
dec
cwde
lahf
in
jecxz
test
push
out
test
outs
lar
(bad)
dec
xchg
lods
fadd
lods
add
aaa
imul
call
dec
call
mov
cli
jp
pop
fcmovnbe
lock
jmp
(bad)
call
jns
xor
shl
or
pop
retf
mov
retf
and
push
add
mov
(bad)
(bad)
ds
or
jl
lahf
jo
dec
in
test
movs
sub
mov
adc
add
xchg
or
jge
xor
out
pop
ds
jmp
aaa
std
mov
sbb
push
sub
push
push
in
mov
cli
mov
fisub
cli
adc
addr16
xchg
mov
xsavec
das
mov
inc
inc
addr16
mov
icebp
push
mov
sbb
add
fldcw
push
jge
leave
sbb
dec
sub
and
call
aam
inc
xor
mov
retf
mov
fcom
push
out
scas
cwde
int
adc
(bad)
mov
sub
(bad)
pop
sub
add
clc
or
(bad)
(bad)
(bad)
jmp
int
fild
xor
(bad)
call
jb
popf
in
push
mov
sub
aam
mov
(bad)
(bad)
push
add
in
mov
mov
movs
cmc
mov
add
nop
test
cmp
call
loopne
xchg
aam
(bad)
(bad)
cld
gs
pop
pop
sub
(bad)
(bad)
(bad)
js
popf
mov
out
imul
mov
inc
xchg
jl
and
loopne
jg
sar
repnz
push
js
cmp
ss
lods
adc
mov
jmp
or
pop
mov
or
(bad)
clc
test
push
jno
(bad)
(bad)
dec
pop
call
je
jge
or
mov
movs
es
or
xlat
jno
and
inc
retf
loope
fwait
out
jmp
cmp
jl
inc
pop
dec
mov
add
xor
je
dec
into
xor
(bad)
(bad)
push
mov
pop
and
rcl
xor
(bad)
iret
int
shr
lahf
pop
add
push
lods
dec
daa
ret
loope
out
(bad)
(bad)
(bad)
call
mov
fistp
add
icebp
sbb
ss
ja
xor
shl
(bad)
(bad)
(bad)
call
cmp
and
adc
retf
push
sub
into
and
(bad)
(bad)
(bad)
fdivr
stos
lock
push
sbb
sbb
enter
xor
(bad)
(bad)
jmp
nop
fcmove
mov
dec
or
inc
add
cdq
cmp
or
das
clc
(bad)
jmp
and
dec
shl
push
fsubp
dec
sbb
arpl
(bad)
(bad)
(bad)
jge
movs
or
pop
in
fwait
and
imul
call
shl
fdivr
(bad)
(bad)
(bad)
dec
or
mov
adc
fidivr
mov
nop
xchg
mov
aaa
(bad)
(bad)
(bad)
(bad)
in
push
inc
int3
ins
fyl2x
shl
pushf
pop
movs
outs
(bad)
in
scas
scas
xchg
pop
pop
adc
xchg
stos
(bad)
(bad)
cmp
es
xor
inc
mov
xlat
out
ins
mov
les
jmp
mov
jbe
mov
fisub
(bad)
(bad)
(bad)
push
dec
lds
icebp
nop
pop
dec
pushf
in
sahf
jno
pop
jg
aam
jecxz
xor
popa
addr16
cs
xchg
outs
(bad)
(bad)
(bad)
jmp
in
inc
mov
sahf
les
std
repnz
bound
clc
div
rcr
push
sbb
bnd
mov
pop
cwde
dec
js
cmp
mov
hlt
dec
fstp
pusha
ret
(bad)
(bad)
(bad)
jg
scas
lahf
mov
outs
jnp
add
shl
push
mov
mov
(bad)
mov
sti
repnz
fcom
sbb
mov
pusha
fwait
in
cmps
or
les
(bad)
jmp
rcr
ds
shl
push
adc
call
mov
dec
pop
loopne
cli
ret
cmp
push
cmp
push
push
push
(bad)
mov
inc
pop
popa
or
dec
addr16
cmp
retf
ret
das
(bad)
mov
(bad)
dec
push
dec
stc
iret
out
jb
retf
out
fsubr
test
rcl
ins
sbb
lea
mov
(bad)
call
iret
xor
inc
xchg
push
sti
out
test
cmp
ja
out
pop
in
(bad)
(bad)
(bad)
(bad)
jge
shl
xchg
mov
push
mov
and
xchg
mov
imul
dec
(bad)
mov
add
xlat
mov
push
mov
or
test
xchg
xlat
call
mov
loopne
call
aam
ins
mov
jecxz
mov
enter
(bad)
(bad)
(bad)
jmp
or
jecxz
test
ret
movlps
adc
stos
imul
fcmovnbe
js
jo
mov
and
pop
pop
(bad)
stc
jae
inc
fdiv
fld
xchg
pop
out
iret
ds
pop
aam
lock
mov
(bad)
(bad)
call
mov
xchg
push
or
js
jp
inc
sti
xor
stos
popa
(bad)
call
pop
mov
ror
retf
mov
push
outs
mov
inc
push
cmp
inc
jg
(bad)
call
mov
dec
repnz
les
push
enter
fiadd
dec
sbb
test
(bad)
jmp
dec
push
sbb
out
xor
imul
repnz
idiv
cmp
xchg
mov
(bad)
(bad)
(bad)
(bad)
aas
dec
dec
js
dec
aas
cmp
bound
mov
push
lds
sub
mov
lds
mov
ja
mov
add
and
adc
aam
inc
cmp
adc
fisubr
clc
jmp
jb
enter
add
push
data16
ins
jns
add
out
pop
lods
mov
loopne
cmp
inc
inc
jle
or
or
lds
and
iret
sub
dec
in
add
dec
inc
je
es
mov
mov
mov
out
(bad)
(bad)
(bad)
dec
mov
push
ret
xor
in
dec
xchg
xor
hlt
xor
test
xchg
call
cld
push
jp
call
mov
test
add
sar
jle
(bad)
(bad)
(bad)
inc
mov
pop
xchg
mov
xor
adc
mov
sbb
xlat
rcl
jg
(bad)
(bad)
cmp
out
mov
sub
xor
or
lea
sbb
mov
sub
cmp
(bad)
mov
dec
xor
dec
add
adc
(bad)
(bad)
push
cmp
ret
mov
mov
sbb
mov
lods
mov
xchg
jmp
jb
pop
jne
shl
jp
setle
(bad)
(bad)
(bad)
mov
jae
in
in
bound
repz
scas
sub
scas
adc
add
inc
out
nop
fstp
(bad)
(bad)
(bad)
clc
lods
mov
addr16
iret
cmps
and
(bad)
out
cmc
push
pop
fadd
icebp
lds
fwait
shl
lods
(bad)
(bad)
(bad)
call
test
je
pushf
ret
lea
push
push
and
loop
out
xchg
push
js
jae
and
xlat
dec
inc
sub
sbb
push
pop
xor
cwde
push
mov
dec
inc
add
pop
mov
call
xor
cs
lea
cld
sbb
cmp
out
push
stos
mov
cmp
sbb
dec
inc
xor
xchg
mov
sub
(bad)
cmp
jae
icebp
data16
jg
mov
cmp
pop
mov
imul
and
mov
div
(bad)
(bad)
(bad)
(bad)
jns
loope
sbb
cmp
or
lahf
mov
es
pop
xor
jmp
(bad)
(bad)
call
cmp
or
jmp
in
addr16
ss
or
ror
(bad)
jg
sbb
shr
pushf
pop
xor
rcl
fistp
sub
mov
out
adc
lock
call
sub
in
mov
out
(bad)
sub
(bad)
(bad)
inc
xchg
popaw
into
hlt
js
imul
jecxz
sbb
popf
dec
add
scas
(bad)
(bad)
(bad)
in
movs
rcl
xchg
add
aaa
mov
shl
or
push
dec
lock
fcomip
mov
das
nop
adc
jo
mov
push
add
push
xchg
mov
(bad)
dec
(bad)
shl
js
dec
push
jo
cwde
nop
xchg
int
and
dec
stos
(bad)
mov
(bad)
(bad)
push
xor
loop
cmps
and
and
pop
xchg
sahf
sub
nop
(bad)
(bad)
(bad)
call
or
gs
and
movs
out
and
cs
jbe
jne
(bad)
(bad)
(bad)
push
mov
retf
xor
inc
push
test
test
sub
sub
ret
add
in
(bad)
jmp
mov
mov
pop
add
dec
sahf
ins
mov
mov
pop
aaa
mov
das
fs
cmp
mov
stc
mov
dec
scas
inc
and
(bad)
(bad)
(bad)
sti
sub
push
int
jecxz
sub
adc
jno
stos
fwait
stc
mov
mov
(bad)
mov
retf
mov
(bad)
jmp
out
or
cmp
adc
(bad)
(bad)
jmp
add
(bad)
cmps
xor
ins
inc
clc
mov
inc
xchg
(bad)
(bad)
(bad)
(bad)
clc
stc
or
cmps
xor
push
pop
arpl
push
mov
mov
fdivr
ins
movs
loop
(bad)
push
fidiv
add
jo
sar
ret
scas
or
ret
idiv
loop
push
test
push
and
into
inc
(bad)
aad
(bad)
(bad)
jg
sbb
jecxz
aas
(bad)
shl
cmp
imul
jns
(bad)
(bad)
(bad)
call
push
sub
xchg
and
xchg
push
sbb
mov
add
sbb
xchg
(bad)
(bad)
mov
out
nop
sub
scas
mov
out
inc
jp
add
xchg
(bad)
(bad)
(bad)
push
aaa
cmc
lea
xchg
pop
or
cmp
or
mov
xor
adc
or
shl
scas
lods
push
or
int
sar
ins
and
std
xor
or
sahf
out
pop
xlat
add
pop
mov
(bad)
(bad)
(bad)
inc
xchg
jmp
mov
movaps
pop
mov
or
dec
aad
(bad)
(bad)
jmp
inc
retf
out
(bad)
movs
movs
xcrypt-ofb
cmps
sub
data16
loop
xchg
not
push
cwde
(bad)
(bad)
(bad)
(bad)
sti
cmp
adc
mov
inc
xor
div
leave
cmp
dec
cmp
inc
(bad)
dec
lock
leave
add
test
cmp
cmp
and
dec
add
call
cld
ss
out
ja
ins
ret
rol
xchg
or
and
xor
pop
add
inc
sbb
sbb
retf
data16
xor
inc
sub
in
test
movs
lods
int
mov
sti
xchg
rol
(bad)
(bad)
call
scas
add
pop
sub
pop
adc
sar
ins
dec
ins
jp
(bad)
(bad)
call
pop
push
dec
enter
xor
es
aas
stos
(bad)
jmp
outs
lods
sbb
cmps
xchg
(bad)
(bad)
(bad)
push
cmp
mov
repnz
shr
sub
hlt
(bad)
fsub
popa
jle
sub
mov
(bad)
(bad)
mov
popf
sub
jecxz
push
cmp
and
pop
nop
sbb
xchg
(bad)
(bad)
jg
mov
or
sub
or
stos
push
mov
or
xchg
jnp
(bad)
(bad)
jg
adc
inc
mov
pushf
push
inc
loop
jbe
in
hlt
retf
ss
push
std
(bad)
in
jb
cmp
push
sar
cmp
loope
jbe
sub
jmp
cwde
xor
sub
sub
inc
push
leave
xchg
or
es
xchg
(bad)
(bad)
jnp
inc
ja
adc
retf
mov
dec
xchg
push
adc
(bad)
out
pop
sub
push
loope
mov
(bad)
ja
outs
cmp
int3
jl
shl
sub
(bad)
(bad)
mov
cmp
ds
mov
mov
fisub
shr
xchg
cs
jge
in
push
cmp
sub
mov
sti
mov
cmps
pop
jecxz
outs
xchg
lods
outs
cli
(bad)
call
xbegin
and
push
mov
repz
loop
in
or
movs
mov
(bad)
(bad)
jmp
imul
(bad)
stos
out
(bad)
jmp
xor
aad
sub
stc
mov
sbb
enter
mov
adc
and
sbb
push
mov
sar
(bad)
(bad)
(bad)
mov
pushfw
inc
and
shl
loop
pop
enter
outs
ds
inc
sub
pop
(bad)
(bad)
(bad)
(bad)
mov
rol
xlat
add
les
loopne
inc
add
inc
fcmovnb
dec
ret
(bad)
inc
stos
stos
(bad)
jmp
mov
and
lea
fcmovb
push
xor
(bad)
popf
cli
or
(bad)
(bad)
cmp
rcr
test
mov
fstp
cmp
dec
ret
pop
ins
adc
cli
leave
add
xchg
push
outs
int3
mov
(bad)
call
stos
pop
jecxz
fisttp
sahf
dec
and
jae
pop
stos
mov
mov
cmc
(bad)
call
outs
xchg
popa
jno
jl
jg
shr
rcr
pop
xchg
sbb
and
sub
aad
ins
fcomp
test
(bad)
(bad)
mov
sub
add
or
inc
ss
adc
out
(bad)
(bad)
(bad)
in
cmp
mov
inc
(bad)
in
lods
dec
(bad)
cmc
xor
mov
inc
mov
push
mov
pop
sub
(bad)
cmp
fidivr
and
jnp
mov
in
(bad)
push
scas
cli
xor
ffree
xchg
loopne
dec
aaa
xor
push
or
sar
jno
(bad)
(bad)
call
and
sub
bound
and
pop
mov
mov
outs
sbb
dec
hlt
cmp
push
xchg
cs
icebp
cmp
ret
add
retf
daa
sbb
inc
gs
sbb
push
pop
(bad)
(bad)
(bad)
call
(bad)
xchg
(bad)
cdq
pop
mov
mov
add
cmps
pop
arpl
mov
and
sub
or
out
dec
or
(bad)
(bad)
(bad)
push
popf
cmp
fimul
pop
ror
leave
int3
lds
push
fdivr
pop
dec
push
call
(bad)
fcmovnbe
adc
jp
lds
push
push
cmp
sbb
sbb
mov
pop
mov
loop
sbb
push
loopne
hlt
jbe
jmp
int3
sub
iret
push
dec
or
test
lods
dec
retf
test
jmp
js
or
test
xchg
arpl
in
out
pop
pop
mov
xchg
inc
inc
(bad)
(bad)
(bad)
inc
scas
sbb
sbb
int
shl
cmp
sbb
or
not
pop
add
(bad)
dec
popa
mov
xchg
or
fistp
mov
sub
push
inc
in
fstp
call
add
push
pop
or
dec
frstor
pop
ret
adc
mov
(bad)
cmp
adc
push
mov
mov
outs
or
(bad)
dec
xchg
pop
scas
sahf
repz
pop
mov
dec
retf
mov
data16
cwde
add
mov
dec
or
(bad)
(bad)
call
sbb
inc
mov
mov
ss
loop
(bad)
loope
sub
pop
or
(bad)
(bad)
(bad)
inc
loopne
fcmove
dec
cmp
adc
popf
pop
push
lea
or
pop
fdivrp
push
pop
hlt
(bad)
(bad)
call
hlt
mov
push
sub
cmps
leave
sbb
es
xchg
bnd
(bad)
(bad)
call
(bad)
aaa
mov
ins
cld
jno
out
rol
dec
popf
push
arpl
in
mov
xchg
xor
(bad)
(bad)
(bad)
(bad)
jmp
jo
push
xor
mov
aaa
inc
sahf
loope
jbe
(bad)
(bad)
call
imul
cwde
pop
inc
ss
mov
pop
pushf
ins
push
iret
mov
jno
jg
mov
dec
ret
in
test
and
or
pop
inc
push
sub
jmp
push
imul
inc
test
repnz
dec
or
clc
jmp
dec
icebp
int3
pop
and
sub
mov
test
and
mov
jmp
xor
imul
sti
and
jmp
ror
(bad)
and
sub
call
dec
bound
mov
jb
mov
loop
or
retf
call
or
push
and
(bad)
push
adc
(bad)
stos
cmpxchg
shl
jge
dec
inc
pop
mov
(bad)
mov
jae
push
adc
aam
(bad)
sub
(bad)
jnp
push
xchg
push
outs
pusha
xchg
jne
dec
int3
jne
add
out
fsubr
daa
cwde
rol
jb
(bad)
(bad)
jmp
retf
retf
sub
int3
popa
push
(bad)
sti
jae
into
add
paddusw
lahf
pop
adc
sbb
xchg
and
sbb
out
sub
fmul
fsub
(bad)
(bad)
jmp
rol
cmp
inc
sti
les
mov
jmp
es
sbb
in
hlt
cld
jecxz
(bad)
(bad)
(bad)
jmp
aam
jbe
mov
dec
mov
mov
inc
sub
mov
cdq
inc
(bad)
(bad)
(bad)
jmp
adc
arpl
dec
fidiv
enter
icebp
(bad)
add
(bad)
ja
push
outs
pop
or
enter
loopne
jg
leave
push
add
mov
mov
iret
cmp
pop
xchg
(bad)
jg
jmp
addr16
data16
repz
repz
mov
xchg
add
push
mov
call
cmp
sti
pop
mov
int
sbb
outs
rcl
dec
mov
fldcw
sahf
and
jbe
enter
push
mov
int
xor
jmp
inc
add
in
in
in
sub
sbb
dec
stos
dec
imul
mov
jl
cmp
xor
jb
aad
xchg
sar
(bad)
(bad)
dec
push
or
or
shl
xor
adc
xchg
sti
mov
inc
add
pop
sbb
loope
(bad)
(bad)
(bad)
call
test
xchg
inc
bound
xchg
bound
addr16
dec
imul
or
mov
push
call
mov
sahf
dec
je
sbb
mov
call
add
call
in
mov
sbb
sahf
jmp
js
and
add
push
adc
out
clc
jbe
hlt
ins
bnd
(bad)
call
add
cmp
clc
(bad)
inc
lea
adc
fisubr
lock
ins
out
ret
and
(bad)
fisttp
ins
cmp
xor
sbb
pop
sbb
jmp
inc
mov
into
mov
stos
push
xor
mov
(bad)
inc
and
nop
jmp
(bad)
(bad)
push
mov
sub
test
lock
(bad)
dec
cmp
add
ins
jns
dec
mov
xchg
movs
push
cdq
pop
mov
repnz
add
(bad)
fucomip
xchg
test
and
retf
aam
jge
icebp
push
(bad)
(bad)
mov
fidiv
push
dec
or
ss
je
icebp
(bad)
(bad)
dec
cmp
addr16
xchg
mov
ret
(bad)
adc
xchg
aas
xchg
xor
mov
mov
ret
or
or
sub
and
cmps
dec
mov
daa
cmps
mov
add
cli
push
pop
(bad)
(bad)
(bad)
call
mov
jmp
jno
push
xchg
dec
push
push
(bad)
or
add
imul
(bad)
call
aam
movs
stos
jo
sub
cmps
jl
in
mov
adc
adc
mov
out
call
dec
pushf
lahf
or
xchg
xor
aas
mov
(bad)
call
mov
push
or
push
jle
daa
xchg
fs
das
clc
(bad)
jmp
daa
add
in
jo
lahf
(bad)
in
adc
hlt
shl
dec
ds
xor
ins
pusha
pop
loop
(bad)
(bad)
inc
cmp
(bad)
xor
ins
(bad)
xor
jmp
(bad)
push
mov
xchg
aad
ins
push
pop
ins
popf
pop
leave
or
dec
or
(bad)
call
xor
and
(bad)
jecxz
adc
fcomp
mov
(bad)
mov
sub
dec
(bad)
(bad)
jmp
lock
push
pop
and
xchg
adc
(bad)
(bad)
(bad)
dec
je
fst
lea
std
xor
js
or
shl
loop
fild
push
sahf
inc
pop
mov
in
(bad)
loop
jno
add
fsubr
repz
or
mov
dec
out
mov
jns
adc
mov
and
mov
jmp
mov
pop
loopne
dec
movs
ror
fsubr
and
pop
xor
and
(bad)
(bad)
push
mov
jg
iret
add
push
lea
nop
leave
jl
stos
sub
mov
les
push
push
cmp
aam
sbb
mov
(bad)
and
sub
(bad)
call
(bad)
(bad)
mov
xor
mov
pushf
add
out
call
adc
(bad)
(bad)
dec
je
and
test
ror
retf
push
std
movs
dec
lods
push
add
test
test
(bad)
(bad)
call
sub
mov
sub
sub
push
bound
pop
inc
mov
push
or
(bad)
out
clc
loopne
push
jno
sahf
cs
dec
movs
sbb
push
loop
push
jl
mov
out
scas
clc
(bad)
in
sbb
pop
loope
and
in
jbe
mov
pop
stos
ins
mov
add
inc
cld
scas
sti
push
cdq
mov
inc
out
in
lahf
add
ss
(bad)
(bad)
inc
mov
mov
add
mov
jle
mov
loope
dec
cmp
xchg
mov
int
cmp
pop
call
cmc
dec
sbb
dec
pop
cld
inc
mov
call
aam
enter
imul
sub
outs
cmp
ds
dec
mov
mov
jae
out
pop
(bad)
(bad)
(bad)
jmp
sub
scas
dec
ja
dec
xor
dec
mov
stc
xor
jg
pop
sub
(bad)
(bad)
call
xchg
(bad)
nop
and
jae
lods
fdivp
cld
(bad)
sub
mov
adc
sub
(bad)
(bad)
push
mov
cmp
mov
cli
scas
fbld
jmp
mov
leave
adc
(bad)
(bad)
(bad)
jmp
push
std
push
aad
shr
int
in
or
aad
mov
cdq
adc
ja
(bad)
call
mov
xchg
mov
das
pushf
rcr
sub
(bad)
(bad)
(bad)
jmp
mov
and
pop
sub
adc
aam
xchg
retf
ins
xor
(bad)
(bad)
dec
out
push
mov
rcr
cmps
test
repnz
xchg
js
inc
push
add
(bad)
leave
aaa
imul
(bad)
(bad)
aas
cmp
mov
ret
sub
cmp
lahf
push
std
and
mov
sub
imul
xlat
scas
dec
ret
std
sbb
or
push
pop
mov
stc
adc
or
(bad)
(bad)
jmp
mov
inc
das
(bad)
mov
mov
mov
sbb
loopne
shl
and
add
call
cmp
xor
sbb
mov
jmp
aaa
movs
jbe
inc
es
ror
(bad)
(bad)
(bad)
dec
sbb
lods
jle
fwait
leave
pop
jg
retf
std
mov
sbb
ins
mov
dec
cmp
imul
aaa
out
dec
test
dec
xchg
nop
and
inc
fdiv
std
(bad)
arpl
xchg
ret
pusha
in
(bad)
pop
push
sar
call
in
and
mov
inc
jp
mov
jbe
(bad)
(bad)
jg
out
retf
inc
imul
mov
and
ds
movs
mov
(bad)
(bad)
jg
cmp
gs
lods
jno
pop
push
into
xlat
fstp
aas
into
fisub
(bad)
(bad)
(bad)
push
(bad)
fidivr
push
loop
fs
popa
jns
push
mov
adc
xchg
jge
out
jns
(bad)
(bad)
inc
push
cmps
adc
xchg
add
(bad)
jbe
pop
mov
mov
clc
(bad)
imul
cwde
fcomip
(bad)
call
cmp
enter
or
push
sub
xor
dec
in
leave
jbe
(bad)
inc
jo
int
(bad)
dec
(bad)
div
sub
inc
ss
ins
out
xor
cmp
inc
mov
fimul
jmp
pop
push
pop
and
pop
fst
sub
push
loop
push
add
out
(bad)
(bad)
(bad)
(bad)
dec
mov
dec
int
aaa
push
pop
scas
popf
loopne
sbb
pop
and
mov
cmp
call
ja
aas
inc
iret
jecxz
aaa
sbb
mov
aam
or
and
out
push
adc
dec
cmp
pop
xor
push
hlt
or
jg
test
outs
(bad)
call
std
sar
push
repnz
popa
dec
mov
push
repz
mov
dec
stos
bound
(bad)
(bad)
cld
pushf
add
xor
add
mov
fcomip
xchg
test
sti
pop
jecxz
(bad)
(bad)
(bad)
inc
xor
xor
mov
jne
xor
cwde
jg
retf
(bad)
or
xchg
in
std
(bad)
push
sub
push
ror
push
inc
mov
imul
inc
loopne
leave
mov
mov
mov
jbe
xor
ret
jecxz
jbe
sub
push
mov
push
cmp
clc
mov
dec
(bad)
(bad)
(bad)
mov
push
in
mov
enter
call
add
scas
clc
push
call
pop
and
push
clc
mov
mov
fwait
add
or
(bad)
(bad)
inc
nop
pop
imul
cmp
lds
sbb
loope
jle
(bad)
int
adc
jg
(bad)
(bad)
call
mov
out
mov
mov
in
xchg
and
mov
push
out
pop
jbe
(bad)
(bad)
(bad)
jns
enter
cs
and
lahf
aaa
outs
lahf
sbb
je
rcr
inc
push
mov
(bad)
dec
loope
outs
xchg
xchg
mov
sub
ret
fwait
mov
pop
outs
bndstx
push
shl
addr16
(bad)
(bad)
(bad)
push
movs
pop
test
adc
xor
ret
xor
sbb
out
scas
daa
jns
stc
mov
(bad)
(bad)
jmp
sbb
cmp
adc
sar
sub
in
(bad)
xor
sbb
mov
sbb
cmp
(bad)
int
jmp
mov
sti
xchg
cmp
xor
push
nop
xor
in
adc
(bad)
(bad)
fsub
ss
cmp
pop
mov
inc
leave
mov
(bad)
(bad)
jg
jae
push
addr16
xor
dec
jmp
lods
sbb
or
call
std
jmp
in
push
cmp
inc
in
mov
dec
int
(bad)
mov
std
popf
sub
fcomp
test
dec
out
(bad)
call
jnp
aad
inc
aad
imul
inc
mov
mov
push
add
adc
retf
(bad)
(bad)
(bad)
jmp
jne
lds
or
sub
(bad)
imul
(bad)
(bad)
(bad)
(bad)
mov
dec
repz
mov
test
mov
dec
les
gs
scas
dec
lods
add
mov
cmp
inc
pusha
pop
sub
mov
(bad)
jmp
clc
sbb
in
add
ins
out
push
mov
mov
cmp
add
(bad)
(bad)
(bad)
jmp
mov
mov
mov
outs
stc
pop
xor
adc
cld
aam
ret
pop
not
ficom
sub
(bad)
(bad)
inc
cdq
sbb
sar
aas
jnp
ror
push
and
mov
inc
mov
cmps
sub
test
nop
fistp
cmp
mov
es
jo
cmps
(bad)
(bad)
call
out
sbb
push
xchg
ror
sub
popa
loopne
dec
adc
test
cli
(bad)
push
leave
jmp
lods
into
nop
push
push
jbe
push
daa
jmp
dec
xlat
stos
stc
imul
(bad)
call
test
shl
ret
outs
inc
dec
retf
inc
movs
daa
enter
sub
int3
aaa
add
out
jg
pop
hlt
iret
sar
movs
test
dec
je
mov
inc
int3
cmc
push
cmps
sub
popa
(bad)
(bad)
(bad)
jmp
(bad)
xor
test
imul
cmps
cli
cmp
retf
and
(bad)
cmp
test
jge
cmp
xor
jle
inc
inc
in
push
loop
xchg
jb
mov
es
dec
sbb
call
xlat
fwait
sub
call
je
cli
(bad)
mov
jecxz
(bad)
ins
mov
xor
(bad)
(bad)
(bad)
inc
jno
and
sbb
in
adc
pop
call
(bad)
aas
repnz
push
ins
(bad)
(bad)
(bad)
call
test
repz
sub
loopne
sbb
mov
cwde
sbb
into
xchg
dec
inc
stos
mov
ret
sbb
xchg
repnz
out
xchg
icebp
push
lds
jle
fabs
fnstenv
icebp
and
xor
retf
clc
add
test
fwait
mov
lods
xor
push
clc
(bad)
dec
mov
das
hlt
lahf
ja
sub
cmps
(bad)
fdiv
dec
sub
icebp
cli
inc
test
out
pop
adc
sbb
fcomip
jmp
jo
sbb
push
les
pop
mov
and
(bad)
(bad)
(bad)
inc
push
mov
in
(bad)
sar
xor
outs
or
ja
push
jg
int
(bad)
scas
inc
xor
js
sahf
out
clc
(bad)
call
jle
in
or
pop
pop
cmp
xor
(bad)
jmp
mov
mov
div
mov
push
cli
pusha
fstp
movs
push
(bad)
jmp
and
ret
call
pop
pop
inc
pusha
jne
(bad)
(bad)
(bad)
jmp
cmp
dec
cmp
or
cmps
add
mov
fisttp
mov
push
cmp
(bad)
test
push
adc
cmp
stc
mov
lods
add
jg
xchg
imul
cmps
inc
std
jmp
add
and
out
pop
pop
mov
jo
aaa
mov
(bad)
(bad)
jg
test
push
sti
repnz
mov
inc
call
xchg
in
stc
add
xchg
xchg
adc
(bad)
(bad)
call
rol
clc
les
fldenv
cmps
push
mov
ror
push
inc
inc
and
mov
xor
mov
not
sbb
pop
lods
cmp
xor
add
(bad)
jmp
test
jmp
arpl
mov
cmp
fsub
clc
jg
mov
ficom
les
loope
cdq
call
add
call
dec
jb
add
mov
outs
cmp
(bad)
(bad)
(bad)
cmp
adc
xor
xchg
mov
test
cdq
arpl
xchg
aad
push
xor
dec
ret
std
and
(bad)
sbb
mov
icebp
cs
sub
pop
pop
repz
mov
sbb
int
ret
pop
pop
test
je
imul
(bad)
jg
lahf
fsincos
inc
fisub
outs
cli
jle
mov
mov
push
push
test
mov
(bad)
(bad)
mov
add
imul
and
(bad)
push
push
int3
ja
test
mov
jnp
imul
adc
in
pop
lahf
(bad)
(bad)
(bad)
call
retf
push
lock
mov
sub
cwde
mov
ror
pushf
push
mov
popf
mov
push
enter
retf
call
bound
fist
xchg
leave
movs
adc
pop
gs
(bad)
(bad)
(bad)
jmp
test
test
test
jbe
mov
cmp
mov
lods
mov
sub
mov
pop
call
jmp
adc
ss
repz
mov
loope
ins
aad
sti
and
sub
(bad)
(bad)
(bad)
(bad)
jmp
pop
enter
loop
adc
mov
and
jecxz
(bad)
ret
push
fistp
rcr
out
adc
stc
jp
popf
shr
imul
(bad)
(bad)
mov
or
push
jns
shl
pushf
sti
int
ja
or
pop
inc
out
out
clc
(bad)
jmp
xchg
jb
aaa
add
jmp
push
push
mov
adc
xor
(bad)
(bad)
push
outs
cmp
clc
cmp
arpl
xor
cli
popf
dec
pmaxub
jmp
imul
pop
mov
mov
ret
add
repz
fdivr
inc
cmps
push
cmp
jl
gs
jp
data16
mov
sar
(bad)
(bad)
jp
push
xor
mov
push
lock
mov
cmp
das
xchg
addr16
jmp
(bad)
fcomip
xchg
sbb
or
leave
mov
xchg
clc
jmp
mov
repnz
shl
dec
and
pop
(bad)
pop
pop
and
xchg
ins
lock
(bad)
(bad)
(bad)
jmp
(bad)
jb
ret
jbe
mov
stos
out
xchg
fidiv
add
adc
std
jl
jae
test
(bad)
(bad)
fmul
out
adc
add
sti
xchg
cs
scas
dec
pop
add
(bad)
lahf
sub
dec
add
(bad)
sbb
(bad)
ficomp
ficom
mov
(bad)
aam
scas
pop
cdq
or
sub
(bad)
(bad)
call
jae
call
stc
jbe
imul
sbb
jmp
mov
jnp
(bad)
(bad)
call
and
test
cmc
jbe
fnstsw
mov
cli
(bad)
(bad)
inc
jp
dec
bound
ss
fwait
push
std
adc
lea
pusha
sahf
pop
in
(bad)
jmp
mov
cs
mov
pop
mov
or
retf
push
adc
pop
movs
push
popf
adc
call
lea
xchg
jb
mov
push
and
(bad)
cmps
push
mov
iret
cwde
fcomp
jmp
jp
and
jo
mov
mov
xor
sbb
sbb
cmp
ror
mov
lds
inc
mov
(bad)
mov
pop
sbb
(bad)
(bad)
(bad)
jmp
mov
dec
icebp
mov
jle
mov
rcr
cs
xchg
or
out
jle
call
nop
mov
mov
push
aam
icebp
mov
cmps
fild
(bad)
(bad)
(bad)
dec
cmp
retf
cmp
scas
sahf
pusha
fisttp
mov
ss
aad
(bad)
fcomip
sub
fsubr
or
fadd
sub
dec
mov
sub
mov
sbb
or
(bad)
(bad)
dec
cmp
inc
adc
mov
fdiv
jg
pop
fs
clc
rcr
mov
(bad)
(bad)
call
cmp
jp
or
or
xlat
xor
jmp
and
inc
jnp
jmp
(bad)
(bad)
jmp
adc
mov
or
mov
mov
pop
pop
sti
cmps
add
sub
(bad)
(bad)
(bad)
(bad)
out
shl
out
stos
mov
dec
mov
psubw
sbb
sbb
xor
pushf
mov
push
and
jg
push
sbb
pop
xor
fidivr
imul
xchg
mov
sub
aam
std
call
add
cld
repz
sti
xchg
imul
std
xor
ja
sub
sub
push
(bad)
(bad)
(bad)
push
sahf
jnp
mov
sub
jae
stos
or
retf
cmc
dec
jmp
add
mov
mov
adc
xchg
add
cmp
or
pop
jae
pop
movs
fdivr
inc
movs
mov
mov
(bad)
call
repz
int3
jo
nop
imul
das
push
jae
jge
dec
cmp
adc
(bad)
(bad)
jmp
cld
dec
xchg
dec
in
dec
jmp
js
pop
dec
add
mov
and
dec
adc
int3
or
mov
ret
mov
bound
add
fs
(bad)
fcomip
fs
mov
dec
xchg
add
xchg
cmps
cmp
mov
cld
push
or
(bad)
jg
sbb
jmp
enter
xor
and
out
int
int3
xor
data16
(bad)
push
data16
sub
into
jb
arpl
dec
int
or
push
(bad)
(bad)
(bad)
jmp
aad
cmp
sbb
shl
pushf
cdq
xor
add
shr
in
in
scas
cli
(bad)
jmp
cmps
dec
inc
cdq
push
pop
xor
lahf
jge
ss
imul
sbb
push
fld
push
mov
bound
retf
sar
(bad)
(bad)
call
dec
int3
mov
sub
(bad)
xchg
push
daa
pop
and
stos
loope
cli
test
jge
int
mov
adc
ds
jmp
call
push
cmc
pop
imul
sahf
mov
in
mov
outs
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
call
jae
jno
data16
sbb
mov
stos
sub
retf
(bad)
adc
push
(bad)
(bad)
(bad)
inc
lods
jo
ins
js
cmp
repz
xor
or
dec
jle
or
push
imul
pop
sar
(bad)
push
xchg
icebp
sub
movlps
push
push
aam
ins
cdq
jbe
or
lods
mov
jecxz
out
(bad)
(bad)
(bad)
(bad)
fcomp
jp
shr
test
gs
scas
mov
or
(bad)
(bad)
(bad)
jmp
lods
imul
push
clc
sub
sub
aad
or
cwde
pop
cmps
push
pop
dec
test
sar
fs
push
(bad)
(bad)
(bad)
call
das
jno
dec
or
dec
retf
push
xchg
or
test
iret
or
cmp
jmp
mov
loope
call
cmps
jno
in
test
out
dec
jno
jns
(bad)
(bad)
call
mov
jmp
(bad)
out
retf
loopne
mov
cmps
xchg
push
sub
jl
fcom
add
ss
dec
popa
xchg
mov
movs
push
xor
fsubr
jmp
test
jo
sti
adc
adc
mov
inc
cli
mov
(bad)
inc
push
mov
mov
mov
fdecstp
add
(bad)
(bad)
(bad)
(bad)
jnp
pop
xchg
in
mov
dec
mul
(bad)
pop
jnp
fwait
push
fcomp
stos
mov
jmp
scas
xchg
jmp
pop
fidiv
sub
jbe
mov
mov
(bad)
(bad)
mov
push
loop
add
hlt
mov
aad
sub
mov
and
mov
(bad)
(bad)
(bad)
jmp
ss
neg
dec
sahf
dec
cmp
ret
xor
xchg
stos
js
nop
jle
(bad)
(bad)
jmp
sbb
jbe
bound
popf
jnp
inc
inc
push
inc
adc
clc
(bad)
(bad)
(bad)
(bad)
mov
pop
push
pusha
mov
dec
rcl
mov
iret
loope
clc
(bad)
(bad)
(bad)
in
ins
pop
mov
(bad)
repnz
in
adc
es
mov
das
xor
(bad)
(bad)
jmp
dec
push
pop
je
and
pop
popa
les
retf
cmps
in
or
dec
cmc
das
pop
pop
cli
(bad)
(bad)
(bad)
clc
popa
pop
pop
sub
adc
and
in
cmp
ror
inc
call
scas
fadd
bound
xor
sbb
sbb
and
mov
(bad)
(bad)
fstp
push
rdmsr
sub
lods
mov
mov
fsub
inc
jge
xor
jmp
(bad)
(bad)
js
leave
cs
imul
dec
mov
sysexit
sub
(bad)
(bad)
(bad)
jmp
xchg
lods
jmp
mov
push
mov
dec
sub
call
cld
mov
mov
ins
or
ss
jle
repz
dec
aas
lods
fsubr
iret
cld
hlt
int3
cld
adc
dec
ud0
(bad)
call
sub
movs
call
jnp
out
pop
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
popa
xor
pop
ins
(bad)
cdq
aas
jp
pop
lds
jl
xrelease
aad
out
cmp
push
lahf
(bad)
call
popa
cmp
xchg
sbb
cmp
mov
jge
clc
lds
shl
cmp
jmp
sub
jge
inc
bound
cld
jp
(bad)
mov
cmp
out
push
(bad)
(bad)
jmp
pop
enter
add
mov
mov
sub
(bad)
mov
jo
repz
sub
cmps
push
arpl
sar
movs
or
add
outs
stos
repz
(bad)
(bad)
(bad)
mov
das
or
ficomp
aaa
out
xchg
pusha
daa
out
cmp
js
test
test
(bad)
call
dec
cmovo
icebp
jmp
mov
retf
test
test
dec
sbb
jge
mov
leave
sub
ds
loopne
fist
(bad)
jmp
ficom
or
out
cmp
test
gs
(bad)
(bad)
(bad)
call
ins
out
mov
retf
(bad)
mov
fadd
lds
sub
inc
cmps
push
push
jne
call
(bad)
(bad)
push
sbb
rol
adc
push
fist
popa
jne
push
stos
xchg
loop
(bad)
gs
fcomip
(bad)
inc
inc
rol
sbb
mov
sub
sub
xchg
or
call
aam
sahf
xlat
inc
and
push
or
fadd
push
jns
dec
mov
fsub
iret
(bad)
(bad)
(bad)
jmp
ret
mov
mov
sti
int
shl
je
add
(bad)
arpl
dec
stos
lock
in
neg
(bad)
(bad)
(bad)
inc
ret
sub
mov
mul
pop
jle
sbb
(bad)
(bad)
(bad)
call
mov
pop
icebp
cdq
and
aad
stos
call
cli
(bad)
call
and
mov
icebp
cvtps2pd
(bad)
(bad)
(bad)
call
jae
je
sbb
aam
out
repz
xchg
or
imul
fcomp
pop
clc
pop
(bad)
cmp
xchg
test
shl
iret
jne
mov
(bad)
mov
mul
fnstsw
push
mov
sbb
mov
mov
cmp
das
gs
push
test
(bad)
jnp
mov
data16
(bad)
dec
outs
sbb
or
jnp
dec
ins
sar
or
gs
push
fadd
(bad)
(bad)
call
shr
mov
into
pop
out
fidiv
ds
mov
outs
popa
popf
add
(bad)
cmp
jmp
and
fidivr
jno
cmps
dec
jb
xchg
or
adc
(bad)
cmp
push
fistp
cmps
(bad)
xor
pop
mov
(bad)
in
(bad)
inc
hlt
(bad)
idiv
imul
sti
and
push
loop
mov
out
cmps
hlt
jmp
push
jae
hlt
push
sub
xlat
push
lds
(bad)
(bad)
push
int
jle
pop
mov
sub
adc
mov
(bad)
mov
(bad)
(bad)
call
les
and
jne
cmps
mov
arpl
ficom
dec
push
mov
pop
neg
pop
lahf
jno
sbb
(bad)
cmp
jmp
jg
push
lods
mov
js
call
(bad)
faddp
dec
out
hlt
icebp
or
loope
pop
icebp
(bad)
push
push
pop
xor
cmps
dec
test
xchg
sbb
das
daa
imul
cmps
leave
aam
test
cmp
lds
jge
and
xor
sar
(bad)
(bad)
push
sbb
push
mov
mov
lock
adc
pop
mov
xchg
mov
dec
loope
(bad)
(bad)
(bad)
(bad)
jg
cmp
and
or
cmp
push
xchg
cmp
sub
pusha
xchg
xchg
inc
push
adc
(bad)
(bad)
dec
sub
xchg
loopne
ror
outs
jo
test
ja
jno
sub
jle
aam
pop
mov
dec
je
(bad)
(bad)
call
fwait
cmps
outs
and
std
and
lahf
sub
push
jnp
mov
(bad)
inc
cmp
push
xchg
test
push
mov
sub
aam
push
or
adc
push
pop
cmp
sbb
test
mov
ret
mov
(bad)
(bad)
(bad)
(bad)
out
adc
and
jecxz
mov
dec
sub
(bad)
out
scas
imul
mov
(bad)
(bad)
(bad)
jmp
fsub
cmp
stc
adc
ds
push
sar
lods
loopne
and
ins
fs
(bad)
(bad)
(bad)
(bad)
(bad)
inc
jb
ja
pusha
cwde
cs
out
not
dec
xlat
mov
rol
cli
outs
(bad)
call
inc
xchg
fsubr
test
sub
add
or
jne
(bad)
jmp
hlt
jae
pop
lea
jbe
mov
push
in
mov
mov
aad
(bad)
(bad)
cmp
jae
sbb
lods
rcl
xor
sub
aad
or
aam
push
std
jg
adc
adc
and
ja
push
mov
jmp
jb
fcmovb
div
(bad)
jmp
and
test
sar
push
jmp
jb
and
cmps
out
cmp
cmc
xlat
jmp
sub
push
mov
add
ffree
or
aaa
movs
fisttp
mov
(bad)
lock
std
(bad)
(bad)
jg
add
jmp
sub
scas
xor
mov
dec
sbb
call
nop
scas
clc
cli
test
add
in
jmp
loopne
loop
fwait
sbb
jae
and
(bad)
call
cmp
(bad)
scas
and
test
inc
ja
pusha
push
cli
gs
(bad)
(bad)
(bad)
inc
shr
popf
xchg
iret
push
loopne
int
loop
xchg
jl
int3
cmp
pop
jmp
push
add
(bad)
dec
fcmovnbe
ja
xchg
sbb
mov
(bad)
(bad)
push
xor
loopne
jge
inc
dec
in
stc
inc
mov
xor
pop
scas
int3
pop
in
mov
bnd
jmp
setb
mov
jae
repz
jle
int3
dec
xchg
test
jg
(bad)
call
dec
jo
inc
ret
cld
das
pop
jge
iret
adc
jmp
add
in
mov
(bad)
inc
mov
cmp
mov
out
sar
or
cmp
xchg
shl
sbb
call
ficom
les
mov
mov
dec
ror
fwait
add
popf
nop
out
cmp
adc
(bad)
repz
fcomi
mov
push
imul
cmp
loope
enter
pop
mov
(bad)
(bad)
push
cmps
arpl
sub
jp
pop
xlat
mov
xchg
ins
fidiv
jnp
adc
push
push
(bad)
jmp
jl
sub
push
enter
jbe
sar
xor
jb
xor
and
(bad)
dec
imul
pop
loop
jp
jg
xlat
movs
inc
out
sbb
push
(bad)
out
adc
clc
pop
or
pop
shl
(bad)
(bad)
jmp
in
addr16
dec
repz
jp
aam
aad
jge
adc
jmp
and
push
pop
ins
(bad)
(bad)
(bad)
call
pop
mov
xchg
cmc
seta
push
(bad)
gs
xchg
rcl
mov
or
jmp
pop
iret
(bad)
out
cmp
(bad)
jmp
xor
mov
cmp
lahf
bound
std
mov
mov
jmp
jl
bnd
mov
daa
scas
xor
sar
clc
and
out
cmp
sahf
inc
jmp
inc
inc
imul
sub
adc
int3
inc
dec
pop
mov
in
(bad)
(bad)
push
in
in
stc
inc
xchg
loop
or
cld
xchg
inc
ffree
inc
lds
popa
mov
mov
inc
jne
out
outs
ret
or
aaa
data16
hlt
cmps
mov
add
(bad)
(bad)
(bad)
dec
adc
gs
icebp
test
outs
gs
mov
push
xchg
push
frstor
(bad)
cli
(bad)
cmp
pop
aam
lods
pop
dec
mov
jns
jge
sar
(bad)
(bad)
mov
or
sbb
pop
jo
retf
pop
and
iret
sub
(bad)
(bad)
inc
or
pop
loop
ja
push
scas
fld1
into
sbb
mov
mov
out
push
jle
jbe
outs
mov
je
test
repnz
cwde
les
jmp
xor
cmc
sub
jmp
cli
pop
mov
inc
stos
jecxz
int3
xchg
xchg
push
cwde
push
mov
out
add
(bad)
(bad)
fild
inc
push
push
inc
xor
into
cwde
mov
daa
or
loop
pop
dec
sar
mov
(bad)
(bad)
(bad)
push
mov
and
clc
and
out
or
push
dec
cwde
repnz
cmp
(bad)
call
inc
mov
adc
pop
mov
jns
cwde
cmp
push
icebp
mov
xchg
jno
(bad)
(bad)
(bad)
mov
push
xor
and
add
fstp
fsub
out
(bad)
ficom
(bad)
(bad)
(bad)
inc
pop
test
outs
adc
inc
cmc
or
stos
ror
mov
cli
(bad)
(bad)
dec
popa
sbb
adc
cmps
jmp
imul
jne
or
fisttp
ret
add
les
fimul
push
in
mov
shr
test
(bad)
call
cli
addr16
iret
mov
ss
jl
push
mov
mov
call
ss
xchg
(bad)
xchg
and
lock
sbb
sbb
mov
dec
(bad)
(bad)
(bad)
dec
out
movs
xchg
test
es
hlt
clc
outs
sbb
lea
(bad)
(bad)
jmp
sub
lods
add
sbb
dec
or
sahf
jmp
push
and
adc
(bad)
(bad)
dec
ds
test
into
push
mov
ins
in
mov
xchg
cmps
fsubr
scas
xor
dec
gs
mov
dec
out
adc
imul
mov
std
jg
cmp
dec
jl
(bad)
adc
cli
dec
mov
pop
pop
(bad)
(bad)
(bad)
(bad)
cmp
pushf
and
movs
push
call
test
mov
daa
(bad)
push
mov
es
and
ror
sub
(bad)
pop
test
or
(bad)
push
pop
push
dec
(bad)
in
lock
mov
dec
scas
mov
ss
xchg
adc
test
(bad)
(bad)
(bad)
inc
and
mov
mov
pusha
ja
xor
xor
cli
push
loop
aad
rol
(bad)
push
sub
inc
inc
rcl
retf
jmp
pop
and
sub
inc
or
test
adc
call
jge
push
jb
mov
arpl
push
ret
sahf
jl
je
mov
mov
call
dec
mov
(bad)
and
and
pushf
pop
inc
dec
push
sub
(bad)
test
push
mov
call
dec
pop
cli
imul
loope
add
add
cs
(bad)
(bad)
(bad)
fsubr
sbb
or
jge
cmp
iret
xchg
fstp
in
adc
aas
xchg
cs
imul
(bad)
jns
jnp
pop
pop
fsubr
les
loopne
or
adc
ss
mov
or
mov
cld
call
fcom
mov
sahf
stc
dec
sub
les
mov
dec
loop
jg
(bad)
call
mov
pop
fisub
fs
cdq
mov
push
xor
(bad)
(bad)
(bad)
call
dec
push
jns
es
(bad)
push
call
mov
jo
stc
add
push
rcl
clc
stc
xchg
fisttp
mov
ret
arpl
aad
push
sbb
cmc
adc
cmp
rcr
(bad)
(bad)
call
sub
xchg
cmp
push
jb
sub
or
xor
adc
gs
sti
dec
mov
xor
ss
dec
mov
jae
or
pusha
loopne
in
jno
xchg
dec
(bad)
pop
(bad)
aas
jb
mov
ins
addr16
pop
(bad)
(bad)
mov
cmp
fiadd
jg
sub
sar
jg
jge
in
(bad)
(bad)
jmp
stos
ror
mov
test
dec
xchg
shl
les
ja
js
(bad)
jp
cmps
mov
sar
call
call
mov
test
pop
aaa
retf
aam
sti
bound
cld
les
adc
push
shr
sti
sar
mov
sbb
gs
ja
in
stos
out
xchg
jp
or
pop
adc
(bad)
(bad)
call
adc
dec
sbb
ror
shl
push
out
jl
out
loope
push
dec
mov
(bad)
(bad)
(bad)
cmp
add
fsubp
cmc
pop
ja
rol
jbe
xchg
mov
xor
(bad)
call
idiv
fistp
(bad)
mov
jl
push
xchg
(bad)
(bad)
(bad)
call
in
inc
les
dec
retf
inc
push
shl
stc
mov
pop
repnz
jg
push
push
daa
mov
sub
clc
cmp
fidivr
movs
pushw
mov
ja
sub
test
sub
ror
leave
mov
outs
bound
(bad)
(bad)
inc
mov
shr
hlt
pop
jbe
sti
ss
xchg
and
mov
call
or
or
jbe
sbb
pop
add
dec
scas
into
inc
(bad)
cmp
push
or
sete
mov
fld
jmp
pop
sbb
lds
mov
imul
ja
leave
mov
push
mov
(bad)
(bad)
jmp
and
add
dec
stos
icebp
in
cmp
outs
in
or
xor
clc
fwait
test
sub
xor
test
add
(bad)
not
jae
cmp
cmp
(bad)
push
fidiv
test
fdivp
mov
sub
adc
repnz
(bad)
mov
mov
jnp
xchg
pop
pop
mov
mov
clc
mov
mov
outs
(bad)
(bad)
jmp
xchg
push
sub
dec
jne
pop
xlat
cmp
mov
out
pop
or
lock
repz
pusha
add
push
or
push
jno
xor
push
adc
lock
std
jb
push
jecxz
faddp
ds
out
ret
stos
int
mov
(bad)
(bad)
jmp
mov
(bad)
popf
mov
push
test
jmp
mov
(bad)
outs
sti
scas
test
adc
adc
(bad)
(bad)
(bad)
inc
or
mov
mov
or
xchg
inc
test
dec
mov
push
ds
(bad)
(bad)
(bad)
mov
cmc
xchg
repnz
hlt
fsubr
pop
imul
fsub
and
(bad)
inc
adc
xchg
dec
aam
stc
dec
ret
xor
iret
sbb
(bad)
jmp
sub
sar
xor
ins
cmp
jecxz
inc
movs
sbb
and
(bad)
(bad)
jg
pop
pop
bound
mov
dec
push
sub
aad
jae
add
daa
(bad)
(bad)
(bad)
call
xchg
cli
push
xor
cld
call
jp
lods
sub
jl
sub
popa
inc
(bad)
(bad)
(bad)
inc
or
dec
inc
push
push
scas
icebp
imul
mov
(bad)
ror
and
cmp
pop
adc
(bad)
(bad)
dec
or
out
jno
xor
not
add
dec
adc
les
(bad)
call
lahf
icebp
mov
cmps
data16
fs
loope
inc
sar
sub
(bad)
call
mov
add
and
in
jae
push
(bad)
ret
movs
iret
xchg
sub
inc
inc
int
mov
das
(bad)
xor
faddp
sahf
(bad)
js
pop
nop
and
(bad)
(bad)
(bad)
jmp
mov
mov
imul
sbb
stc
adc
inc
mov
(bad)
(bad)
call
sub
jl
mov
cmp
mov
dec
xchg
repnz
dec
je
or
call
test
int
loope
sbb
sub
fbld
ja
xchg
cmp
jbe
push
in
(bad)
jg
jmp
popf
stos
gs
dec
pop
cmc
or
dec
or
clc
pop
add
(bad)
(bad)
(bad)
jnp
scas
xor
scas
push
ret
fcmovnu
movs
and
push
push
mov
add
loop
ret
jne
inc
mov
mov
add
cmp
pop
push
ror
dec
mov
jg
ret
aas
cmp
push
ret
adc
stos
(bad)
(bad)
(bad)
call
in
dec
xchg
pop
cmps
scas
js
scas
div
data16
ds
xchg
(bad)
mov
(bad)
(bad)
(bad)
push
fistp
xor
mov
ins
add
ss
mov
retf
cld
lods
clc
sub
xchg
test
daa
in
cwde
inc
dec
fdiv
inc
jmp
dec
and
push
(bad)
(bad)
jg
or
and
lods
enter
mov
mov
(bad)
(bad)
call
xchg
sbb
inc
cdq
loopne
cld
ficomp
mov
xor
mov
xlat
in
push
daa
aas
xchg
in
sar
(bad)
aas
sub
ficom
shl
jp
sbb
addr16
repnz
xor
(bad)
(bad)
jg
fisub
push
push
pusha
dec
aad
adc
adc
scas
sub
jne
iret
test
or
dec
sub
fsubr
(bad)
push
clc
jmp
loopne
add
mov
xor
(bad)
(bad)
call
mov
imul
mov
ins
xchg
push
fwait
push
cmp
call
lock
(bad)
jmp
mov
in
pop
imul
mov
std
pop
xchg
inc
and
(bad)
(bad)
(bad)
jmp
mov
mov
lea
xchg
pop
js
(bad)
loopne
loopne
(bad)
out
cmp
(bad)
(bad)
(bad)
cmp
popa
jge
dec
jge
es
mov
and
and
mov
(bad)
int3
clc
xor
(bad)
(bad)
call
into
int
and
popf
or
stos
rcr
pop
ret
jmp
push
push
inc
jecxz
aad
sar
xor
(bad)
(bad)
(bad)
dec
(bad)
fdivr
pop
xchg
or
fld
and
jno
loop
mov
ret
add
sub
and
jb
dec
iret
sbb
in
push
xchg
inc
scas
add
or
xor
repnz
pop
loop
jp
test
pop
das
je
or
and
add
movs
dec
cli
in
in
call
mov
shr
(bad)
(bad)
call
sub
mov
test
inc
mov
shl
and
lahf
ja
(bad)
(bad)
(bad)
call
xchg
test
pushf
loop
push
clc
push
inc
les
hlt
stos
jmp
outs
jbe
xchg
icebp
inc
xor
movs
sub
and
lock
pop
cs
mov
dec
fbld
cdq
adc
fist
sar
(bad)
(bad)
(bad)
mov
or
xchg
out
mov
adc
outs
xor
test
push
cmp
into
dec
xor
inc
adc
call
es
jmp
(bad)
(bad)
dec
inc
jle
dec
inc
imul
and
push
sbb
fnstenv
(bad)
push
loope
fs
push
mov
mov
not
jne
inc
popf
into
(bad)
(bad)
(bad)
(bad)
jg
push
or
inc
cmps
cmp
movs
xor
cmp
repnz
xor
push
push
mov
cmp
(bad)
(bad)
inc
dec
mov
out
neg
jle
xor
(bad)
out
es
rol
xchg
push
into
arpl
outs
sub
loopne
pop
dec
sbb
mov
sub
mov
inc
jae
inc
mov
mov
or
mov
lock
or
out
add
out
(bad)
(bad)
inc
jmp
and
dec
jo
inc
daa
jmp
add
push
stc
(bad)
(bad)
jg
lods
mov
ds
les
outs
cmp
das
repnz
es
dec
lock
lahf
adc
(bad)
jl
sti
adc
mov
(bad)
aad
pop
addr16
call
call
scas
jo
jg
shl
idiv
jmp
outs
jb
cli
(bad)
(bad)
jmp
out
jge
aam
pop
fldcw
sti
mov
sahf
ror
jmp
test
xor
push
adc
call
push
(bad)
pop
repnz
pusha
out
idiv
add
sbb
xor
dec
push
sub
push
push
sbb
sbb
das
xchg
std
inc
sbb
movs
jae
and
rcr
ins
pop
ret
sbb
sbb
(bad)
push
jb
and
stos
jns
mov
dec
mov
fwait
jl
cwde
or
(bad)
(bad)
jg
repz
xchg
mov
cmp
mov
xchg
mov
fdiv
(bad)
(bad)
(bad)
call
in
gs
dec
add
mov
pop
mov
sbb
dec
xor
(bad)
jmp
imul
push
xor
push
ss
mov
and
sub
idiv
mov
sahf
mov
mov
pop
lea
out
mov
fnstsw
js
bound
push
in
ss
(bad)
(bad)
dec
adc
rcr
cmps
xchg
shl
cdq
xchg
out
push
add
retf
ins
jmp
das
jmp
test
add
dec
shl
test
loopne
add
jg
je
std
(bad)
inc
jnp
dec
or
dec
pushf
pop
lods
repz
out
(bad)
jg
jmp
dec
xchg
xor
shr
xchg
adc
das
movs
pop
jle
pop
outs
mov
(bad)
(bad)
(bad)
fcomp
icebp
arpl
outs
push
inc
cmp
rol
push
mov
(bad)
xlat
loopne
lahf
push
xchg
xchg
cmp
inc
push
mov
sar
loop
mov
notrack
mov
clc
xlat
pop
push
jp
adc
jg
(bad)
fcomp
int
sub
and
xchg
sub
xchg
sub
inc
test
lock
mov
pushf
pop
pop
mov
mov
(bad)
jmp
mov
push
sub
push
sbb
xor
mov
scas
or
movs
add
data16
test
push
sub
(bad)
(bad)
jnp
popa
aam
add
xchg
xchg
inc
jbe
out
dec
jae
and
dec
cmps
mov
xchg
cld
xor
inc
xrelease
aaa
inc
pop
mov
sbb
lock
call
sti
or
xchg
ret
outs
mov
dec
pop
jp
sti
(bad)
(bad)
call
jne
cmp
lods
sar
dec
call
call
add
adc
(bad)
(bad)
cmp
mov
dec
(bad)
mov
add
sub
je
mov
cmp
pop
(bad)
(bad)
frstor
fdivr
push
movs
add
inc
pop
adc
mov
(bad)
js
mov
inc
xchg
dec
fild
mov
inc
mov
mov
outs
test
sbb
jno
mov
cli
add
dec
(bad)
mov
cmc
push
(bad)
shr
daa
add
ss
hlt
(bad)
mov
adc
(bad)
(bad)
call
mov
xchg
and
xor
pop
aad
addr16
cli
(bad)
push
fwait
or
lods
or
lds
mov
dec
scas
cdq
idiv
(bad)
mov
push
sub
mov
maxps
jmp
and
dec
(bad)
(bad)
push
push
xchg
or
push
xchg
cmp
xor
mov
pop
pop
aad
adc
push
std
cmps
push
sub
cmp
mov
iret
pop
pop
hlt
(bad)
call
fcomip
adc
int3
jmp
add
jo
mov
(bad)
call
xchg
shl
rcr
bound
mov
inc
(bad)
(bad)
fcmovnu
cwde
jo
lock
add
pushf
inc
ret
pusha
sbb
sub
(bad)
ds
(bad)
(bad)
(bad)
dec
cmp
jb
xchg
int
lds
mov
data16
outs
jae
dec
ret
cmp
inc
mov
jmp
ins
ins
cmc
(bad)
divps
pop
xor
sahf
pop
pop
xlat
cwde
push
mov
test
jmp
call
adc
cld
xchg
jno
rol
ja
inc
(bad)
(bad)
mov
inc
fisttp
iret
and
inc
and
jge
pop
movs
push
sub
cmps
mov
add
(bad)
(bad)
(bad)
dec
cmp
pop
push
and
out
pop
inc
sub
repz
push
inc
mov
add
(bad)
jmp
loopne
dec
xor
sbb
and
jmp
rcr
hlt
pop
push
dec
pop
inc
cmp
mov
pop
push
test
(bad)
(bad)
(bad)
jp
call
pop
push
pop
and
in
clc
jp
lds
pop
pop
pop
or
in
enter
dec
out
push
cmps
fwait
out
or
xchg
fbstp
(bad)
in
fisubr
mov
dec
cmps
xor
je
(bad)
(bad)
call
adc
in
push
or
cmps
out
or
mov
stos
pop
fnstenv
push
pop
sbb
(bad)
(bad)
(bad)
push
inc
sahf
fiadd
clc
cmp
cmps
mov
mov
rcl
fiadd
jmp
stos
and
add
and
lock
(bad)
fucomip
repnz
daa
push
add
mov
push
fldenv
mov
xor
mov
arpl
inc
adc
adc
into
out
cmp
jge
inc
inc
adc
adc
call
xchg
call
adc
iret
fstp
push
(bad)
(bad)
(bad)
jmp
imul
repnz
(bad)
std
lds
and
(bad)
repz
fldcw
(bad)
mov
mov
sbb
or
je
mov
(bad)
(bad)
jmp
push
or
jae
sub
in
popa
add
fs
or
(bad)
(bad)
(bad)
cmp
mov
xchg
jb
enter
jb
(bad)
adc
int3
and
xchg
pop
les
jbe
dec
popa
mov
mov
cs
add
hlt
push
loope
sbb
outs
retf
data16
(bad)
(bad)
(bad)
call
dec
les
mov
jbe
aad
aaa
sar
aam
shl
sahf
lods
es
cmp
mov
std
xchg
(bad)
(bad)
(bad)
(bad)
in
nop
sti
sub
fstp
rcr
setg
cmps
ficom
mov
pop
inc
aad
dec
sub
fdiv
pushf
mov
in
mov
push
stc
popf
hlt
imul
xchg
out
mov
jb
mov
stos
add
push
pushf
ret
dec
ins
push
sub
retf
repnz
(bad)
(bad)
(bad)
mov
inc
data16
fist
fisubr
jp
xor
adc
push
(bad)
fdivr
(bad)
(bad)
jmp
or
hlt
pop
xor
loope
adc
lock
or
popaw
fdiv
nop
ret
gs
jmp
jg
fisub
aam
pushf
or
or
dec
fstp
lahf
adc
(bad)
(bad)
inc
leave
push
stos
icebp
ret
xor
in
xchg
xor
bound
into
and
(bad)
(bad)
call
ror
test
sub
jno
outs
movs
out
jge
and
pushf
out
popf
sbb
jle
jmp
(bad)
(bad)
(bad)
dec
(bad)
ror
(bad)
sbb
cmps
mov
int
nop
add
xor
fistp
xlat
jbe
popa
sub
(bad)
(bad)
(bad)
push
call
jp
sub
leave
fcom
add
loope
adc
fs
cmp
loopne
(bad)
(bad)
(bad)
jmp
xor
or
mov
and
jl
mov
jns
retf
std
out
pop
lock
lahf
aaa
retf
jns
imul
xor
push
int
loop
lods
idiv
xlat
enter
and
jl
or
lods
test
(bad)
jmp
cwde
das
or
inc
dec
maskmovq
test
movs
jo
mov
sub
mov
and
(bad)
(bad)
mov
pop
xchg
cs
cmp
rol
sub
push
addr16
bound
mov
fild
jle
cwde
xchg
adc
push
jae
inc
fldl2e
jge
jno
pusha
cmp
(bad)
(bad)
(bad)
jnp
test
jp
xor
jns
cmps
add
add
push
hlt
sub
fcomip
mov
sar
dec
pop
retf
pushf
xchg
mov
pusha
(bad)
(bad)
(bad)
jg
cs
fcomp
fwait
shr
adc
push
push
mov
pop
jle
push
stos
imul
(bad)
in
inc
pop
pop
outs
(bad)
adc
mov
les
iret
stc
add
pop
loop
(bad)
(bad)
call
pop
sub
std
sbb
jnp
pop
xchg
jg
xor
adc
repz
sub
mov
(bad)
(bad)
call
iret
stos
jae
(bad)
ins
scas
dec
scas
mov
push
cdq
cmc
shl
pop
pop
retf
scas
popf
int3
(bad)
(bad)
(bad)
dec
test
test
dec
cmps
dec
mov
je
inc
push
cmp
stc
stos
pusha
and
mov
dec
int3
js
inc
aaa
or
out
cs
repnz
(bad)
std
repnz
and
dec
fadd
sub
inc
jle
cld
(bad)
in
mov
in
mov
fsub
mov
(bad)
(bad)
(bad)
(bad)
fcomip
xlat
mov
mov
icebp
add
inc
xor
push
push
in
xchg
jmp
out
dec
mov
mov
push
ret
cmp
jmp
xchg
pop
lea
pop
(bad)
cli
(bad)
(bad)
call
mov
cmps
out
adc
fdiv
jb
mov
xor
ja
cld
std
cmc
(bad)
in
mov
cli
mov
mov
jg
mov
inc
(bad)
xor
ror
sub
cmp
dec
fist
in
lds
aam
(bad)
(bad)
call
add
ins
cli
adc
push
jns
shl
pusha
inc
loope
cmp
aam
mov
(bad)
inc
cmc
mov
rcr
sti
fldenv
and
call
cld
fistp
mov
push
retf
scas
mov
or
lock
sar
(bad)
jmp
mov
inc
pop
in
jp
and
or
sbb
sbb
gs
clc
xchg
mov
dec
xchg
push
scas
xchg
pop
add
cmps
imul
arpl
ja
rcr
xlat
(bad)
(bad)
aaa
mov
sub
or
push
dec
pop
dec
cmp
imul
std
(bad)
(bad)
jmp
sub
xor
adc
pop
scas
add
(bad)
lea
repz
jg
or
pop
iret
dec
mov
retf
mov
scas
pop
(bad)
(bad)
(bad)
dec
inc
ret
xor
test
sar
push
push
cmps
outs
sbb
and
(bad)
push
cwde
dec
jg
pop
jl
adc
and
push
pop
hlt
mov
inc
mov
sahf
pop
in
jae
js
(bad)
(bad)
jmp
test
mov
data16
in
jns
test
push
es
jmp
(bad)
pusha
int3
(bad)
(bad)
(bad)
push
test
test
ficom
pop
div
mov
adc
jnp
jmp
push
ret
ins
fucomp
mov
cmp
cmp
rcl
(bad)
(bad)
(bad)
sti
push
fsubr
test
aaa
movs
inc
dec
out
and
out
sub
and
dec
(bad)
jno
icebp
mov
xchg
out
stc
inc
fldenv
mov
imul
dec
leave
dec
push
cld
es
(bad)
(bad)
jmp
stos
mov
push
and
mov
loop
pop
shl
movs
jnp
js
shl
inc
xlat
cmc
(bad)
(bad)
(bad)
jmp
scas
adc
dec
je
sub
dec
popa
sahf
add
pop
xor
out
cmp
(bad)
(bad)
call
loopne
loope
sahf
arpl
cmp
cld
xchg
mov
mov
repnz
(bad)
(bad)
push
aas
daa
cmp
addr16
mov
or
sbb
and
pop
sbb
xor
lea
jo
(bad)
(bad)
inc
dec
repz
test
sub
sbb
xchg
add
nop
fs
inc
cmp
addr16
push
cmp
pushf
daa
(bad)
xor
cli
sub
mov
jae
jnp
mov
(bad)
(bad)
push
in
mov
js
stos
sti
jecxz
in
cld
jnp
repz
add
je
inc
pop
scas
(bad)
(bad)
(bad)
jmp
dec
test
and
xor
cmps
clc
jmp
pop
imul
jl
xor
add
sar
(bad)
dec
arpl
fisttp
add
xor
cwde
icebp
jns
sub
(bad)
(bad)
inc
push
add
or
pop
popf
and
push
pop
repnz
mov
les
fldcw
fdivr
(bad)
(bad)
inc
mov
(bad)
ror
pop
ret
aam
cmp
sbb
clc
les
aaa
(bad)
(bad)
(bad)
dec
inc
inc
push
xchg
mov
and
add
mov
out
jecxz
add
test
out
mov
dec
jns
push
scas
cs
ficomp
out
mov
cs
add
cmp
call
into
push
loope
fsub
in
scas
xchg
push
sbb
adc
repnz
pop
push
(bad)
(bad)
call
jle
dec
leave
js
jmp
mov
pop
adc
ror
sub
cmp
inc
imul
(bad)
jmp
mov
inc
mov
(bad)
push
xor
jp
popa
jno
cmp
jle
shl
sub
ret
xchg
stos
movs
push
ins
mov
leave
hlt
out
cld
sbb
icebp
mov
in
xchg
fbld
mov
push
push
push
mov
lds
(bad)
inc
jb
pop
mov
or
or
das
and
pop
outs
outs
loopne
(bad)
call
ins
sbb
and
cmps
dec
add
push
js
mov
ins
fld
(bad)
(bad)
(bad)
jns
fcom
icebp
(bad)
cmp
mov
xor
lahf
fwait
ret
aad
enter
push
push
imul
sbb
or
dec
push
ins
jne
mov
jl
cmp
push
je
xor
out
clc
jmp
mov
dec
adc
scas
dec
ins
push
jb
ins
pop
mov
repnz
stos
jmp
mov
push
lea
rcr
adc
mov
push
(bad)
jmp
mov
dec
not
clc
sub
and
enter
je
jbe
fnstenv
jl
dec
enter
(bad)
sbb
mov
mov
push
jb
ja
test
pop
xor
outs
or
fisub
rcr
(bad)
(bad)
call
pop
push
cmp
and
add
jge
pop
shl
(bad)
(bad)
(bad)
(bad)
inc
std
fistp
addr16
fs
je
ja
push
pop
fs
mov
mov
(bad)
(bad)
jmp
jae
mov
xchg
leave
add
retf
aas
adc
in
clc
pop
and
nop
hlt
sub
pop
add
popa
xchg
or
cld
popa
xchg
mov
(bad)
mov
push
push
into
mov
stos
les
push
push
out
sbb
fwait
(bad)
ins
sti
xchg
(bad)
dec
pop
int
iret
sub
jmp
inc
fiadd
aas
cdq
ja
mov
out
cdq
(bad)
call
cmp
clc
es
les
xor
jle
outs
sub
jmp
cli
jae
jbe
ja
and
mov
push
push
icebp
hlt
inc
xchg
jns
sbb
dec
sti
stos
xor
(bad)
into
lds
jns
adc
inc
cmp
mov
pusha
std
(bad)
(bad)
call
mov
retf
cmps
mov
xchg
out
inc
pop
mov
pop
leave
bound
push
sub
mov
or
mov
dec
faddp
pop
leave
inc
cs
jmp
cwde
xchg
fld
and
jno
fmul
(bad)
(bad)
push
es
add
jmp
sub
stos
sub
jb
mov
mov
test
(bad)
(bad)
dec
test
retf
jbe
leave
ins
adc
xchg
les
mov
(bad)
(bad)
(bad)
mov
push
cmps
cmc
loope
aas
adc
ror
pusha
outs
mov
inc
jmp
lahf
jo
retf
or
pop
mov
mov
(bad)
call
jae
das
stc
scas
js
outs
fs
fst
lahf
lock
xor
fmul
cmp
(bad)
(bad)
(bad)
(bad)
jmp
jne
push
cs
ins
loopne
or
arpl
xchg
lods
xor
(bad)
repnz
ins
(bad)
(bad)
(bad)
push
test
iret
(bad)
dec
mov
add
pop
or
adc
sbb
inc
sub
and
shl
mov
in
and
stos
gs
cmp
mov
xor
lahf
js
std
call
call
mov
lahf
icebp
dec
sub
loope
pop
int3
or
nop
or
shl
(bad)
(bad)
(bad)
(bad)
jle
jae
xchg
cmp
(bad)
movs
jne
mov
aaa
mov
movs
cmp
lds
(bad)
(bad)
dec
cmps
jmp
in
int
dec
jbe
les
mov
or
cli
(bad)
(bad)
fistp
jne
aam
mov
jl
add
aas
ds
dec
stos
jg
test
call
mov
jnp
(bad)
jl
pop
iret
xchg
cmp
jb
or
call
(bad)
sti
mov
cmp
dec
push
(bad)
jmp
lock
jl
pushf
imul
push
mov
inc
jge
mov
cdq
ins
jle
movs
cmps
or
fidivr
loope
pop
into
pop
out
fisubr
(bad)
(bad)
cli
mov
cmp
or
inc
scas
mov
mov
in
data16
dec
es
(bad)
(bad)
mov
lods
popa
push
sbb
aas
aaa
jns
cli
add
inc
fsub
and
pushf
(bad)
(bad)
(bad)
call
fisubr
(bad)
pop
mov
lahf
ja
pop
xchg
mov
jno
pushf
inc
xchg
aaa
fs
(bad)
(bad)
call
push
rcl
xchg
xchg
or
push
add
dec
idiv
mov
add
sbb
inc
xor
(bad)
(bad)
(bad)
call
pop
movs
retf
jb
stos
and
sbb
test
or
jnp
pop
inc
pop
(bad)
(bad)
(bad)
jmp
jnp
mov
or
fld
mov
mov
mov
cmp
fdivr
fisttp
loopne
jge
mov
stos
movs
(bad)
jmp
inc
mov
push
jl
mov
jb
loopne
lock
stc
(bad)
(bad)
(bad)
inc
ror
nop
shr
cs
mov
jp
outs
sub
pop
mov
cmp
mov
(bad)
(bad)
inc
or
sub
xchg
xchg
jp
jecxz
push
or
cmp
sti
fwait
(bad)
(bad)
(bad)
jmp
inc
dec
outs
repnz
fcomp
fwait
push
push
sub
xor
and
jg
dec
pavgb
sub
xor
inc
dec
push
das
jmp
pop
and
ins
(bad)
(bad)
jg
arpl
adc
mov
inc
test
xor
pop
pushf
(bad)
outs
loopne
add
dec
inc
mov
mov
mov
stc
mov
idiv
dec
mov
cmp
mov
sbb
loopne
clc
jmp
leave
sub
int
fld
fnstsw
pushf
ret
(bad)
(bad)
(bad)
mov
cli
test
fisub
jg
inc
in
jle
jo
sbb
es
loope
cmp
in
hlt
(bad)
jg
adc
mov
lods
fsubr
mov
inc
push
sti
mov
push
jo
cmp
inc
pop
sbb
stos
xchg
mov
sub
test
add
(bad)
(bad)
call
pop
stc
dec
jecxz
sub
call
inc
dec
xchg
jmp
in
or
aaa
cld
(bad)
mov
out
sti
pop
jmp
pop
push
lock
and
jg
and
(bad)
jmp
adc
cmp
(bad)
pop
jge
mov
out
cdq
lods
mov
outs
lock
sbb
mov
and
sub
mov
inc
(bad)
(bad)
(bad)
call
sbb
xchg
push
stos
fs
mov
lea
cmp
push
call
dec
stos
shl
add
inc
sbb
sbb
inc
push
and
std
push
rcr
(bad)
(bad)
jl
xor
inc
jno
cli
movs
fstp
mov
push
mov
outs
mov
call
(bad)
jmp
mov
pop
and
and
inc
dec
xchg
pop
sub
dec
hlt
out
sub
loopne
push
cmp
stos
push
cdq
sub
mov
mov
(bad)
jmp
(bad)
mov
(bad)
push
xor
and
jno
outs
leave
shr
test
(bad)
(bad)
push
addr16
test
iret
sub
out
cmps
jae
pushf
test
(bad)
mov
pushf
(bad)
mov
test
popf
scas
jae
jmp
cli
(bad)
jmp
mov
add
push
adc
jle
mov
cli
(bad)
(bad)
(bad)
call
jmp
add
fimul
ins
dec
fs
popf
in
out
(bad)
rcr
xchg
and
(bad)
(bad)
inc
(bad)
push
push
mov
retf
and
and
xchg
mov
jb
scas
rcr
fs
xor
addr16
jbe
adc
das
inc
mov
add
jg
enter
jmp
jne
(bad)
mov
(bad)
outs
test
push
xchg
mov
(bad)
(bad)
(bad)
(bad)
mov
jl
xchg
add
stos
pop
iret
cmp
and
push
movs
pop
inc
cmp
xchg
fldenv
cmp
(bad)
call
pusha
sar
or
dec
jg
jae
outs
adc
(bad)
lea
(bad)
loope
(bad)
cwde
dec
call
adc
push
sub
or
inc
mov
or
(bad)
cmp
gs
adc
jno
push
gs
scas
lahf
add
cdq
jno
(bad)
(bad)
(bad)
call
sti
int
jmp
stos
push
mov
out
or
into
inc
(bad)
jo
jno
ret
push
(bad)
(bad)
(bad)
call
xchg
fbld
jbe
add
shr
xchg
pop
or
push
mov
mov
fwait
(bad)
push
dec
dec
neg
ss
dec
add
xchg
mov
adc
(bad)
(bad)
dec
pop
icebp
adc
mov
mov
nop
dec
retf
ja
mov
loop
lods
call
jge
mov
jbe
xchg
pop
pop
mov
cmp
es
in
push
jmp
rcl
sbb
int3
or
pop
in
shl
pop
lock
cwde
fs
inc
sbb
lock
mov
fist
popa
fimul
popa
clc
(bad)
(bad)
(bad)
mov
jle
push
or
ins
je
in
rol
cmps
aas
add
stos
push
mov
jmp
data16
and
cmp
pop
imul
jl
jnp
pop
sbb
(bad)
(bad)
(bad)
push
inc
imul
pop
inc
dec
and
xor
cmp
or
call
stos
add
ins
(bad)
(bad)
push
loope
out
or
jecxz
xor
shr
leave
movs
cmps
icebp
cmc
(bad)
rol
hlt
(bad)
(bad)
(bad)
jmp
outs
adc
pop
adc
sahf
push
adc
(bad)
frstor
xor
cmps
int
cwde
xchg
jns
pop
jae
xchg
sbb
mov
(bad)
sub
scas
mov
add
(bad)
jmp
fwait
sbb
aam
mov
sub
cmp
mov
retf
mov
pop
scas
pop
movs
(bad)
call
jp
sub
cmp
dec
pop
sbb
clc
mov
das
and
mov
out
lahf
and
aas
ds
fs
adc
test
imul
pop
rcr
pop
mov
mov
call
pop
addr16
je
cmps
sets
call
(bad)
(bad)
jecxz
ss
pop
jne
inc
sub
std
addr16
fimul
jl
in
mov
dec
int3
outs
xchg
jecxz
(bad)
(bad)
fcomip
inc
and
jp
in
mov
and
xchg
cs
mov
adc
push
xchg
loop
and
sbb
mov
push
or
(bad)
(bad)
call
mov
mov
lods
lds
inc
enter
inc
jecxz
jp
jmp
mov
mov
das
xchg
sbb
jae
cmc
into
push
and
scas
(bad)
call
fsubrp
stc
inc
sar
das
fstp
sbb
mov
sub
mov
(bad)
(bad)
(bad)
call
push
mov
sti
lds
fwait
dec
fsubp
xchg
mov
jno
fimul
popf
sbb
(bad)
call
xchg
or
sub
or
and
vsqrtps
(bad)
(bad)
mov
cmp
jl
push
stos
mov
(bad)
(bad)
pop
pop
ds
(bad)
jg
inc
jo
sbb
mov
add
push
fcmovne
mov
jae
test
mov
xlat
dec
dec
daa
push
push
mov
das
adc
imul
ins
mov
(bad)
jmp
and
je
mov
fcom
mov
rcl
ins
ds
(bad)
(bad)
(bad)
fsub
jg
retf
sub
out
in
out
fucomi
sub
fld
sub
in
mov
jmp
push
mov
mov
inc
test
mov
pop
push
outs
retf
jmp
and
scas
cli
sbb
pop
mov
jecxz
inc
jmp
xor
jg
push
xor
mov
mov
test
out
cmps
add
cli
jmp
xchg
or
push
add
div
stc
repz
stos
(bad)
(bad)
(bad)
dec
sub
ins
ret
dec
loope
fstp
cmp
pop
inc
mov
popw
cld
mov
sub
call
scas
out
mov
imul
mov
or
cmp
scas
aad
inc
pusha
jne
push
cdq
jmp
lods
xchg
in
mov
mov
pop
ret
enter
(bad)
(bad)
(bad)
mov
lea
dec
inc
icebp
cmps
lea
gs
push
bound
sub
push
jge
(bad)
(bad)
(bad)
jmp
test
jl
pop
jecxz
fs
jg
and
cmp
je
(bad)
(bad)
jmp
inc
ds
scas
test
mov
nop
dec
jl
test
dec
popf
inc
xchg
pusha
rol
add
dec
and
call
inc
xor
aaa
mov
fwait
bound
inc
xor
(bad)
(bad)
(bad)
dec
sub
lock
xchg
pop
sbb
or
cld
jns
push
out
jns
scas
add
lods
add
ins
xchg
xchg
idiv
(bad)
cmp
f2xm1
cwde
xor
jl
pop
adc
not
arpl
cmp
cli
or
push
lahf
cmp
loopne
movs
push
das
push
cmp
call
dec
cmp
sub
shl
pop
dec
mov
jp
add
jbe
mov
pop
cmp
idiv
data16
je
imul
movs
fidiv
stos
(bad)
bound
js
pop
movs
call
adc
adc
ret
push
sub
(bad)
mov
popf
cmp
(bad)
call
gs
pop
out
fdiv
ret
movs
jecxz
out
mov
pop
push
add
in
(bad)
aad
push
call
enter
pop
mov
nop
mov
adc
stc
movs
dec
sti
clc
(bad)
(bad)
inc
ror
test
je
ds
int3
jns
and
fucom
shl
(bad)
call
out
ins
pop
or
popa
lds
adc
jae
nop
or
out
mov
push
(bad)
call
sub
mov
or
std
(bad)
(bad)
call
xor
inc
scas
out
pop
adc
push
(bad)
je
xchg
in
rcl
jns
cmp
sbb
cmp
call
adc
cli
aam
cmp
rol
aas
pop
outs
(bad)
(bad)
(bad)
jmp
repz
sub
add
loope
cmp
sar
jmp
data16
mov
add
dec
retf
mov
into
and
inc
pusha
(bad)
inc
nop
or
push
adc
jle
cmp
push
in
repnz
(bad)
(bad)
call
mov
mov
mov
push
or
xchg
or
mov
(bad)
jg
cmps
jmp
movs
xor
sub
push
push
iret
jecxz
jnp
ret
in
mov
mov
(bad)
(bad)
push
(bad)
add
pop
and
fwait
cmp
pand
in
leave
icebp
pop
sub
outs
mov
cli
(bad)
(bad)
(bad)
jmp
jnp
adc
mov
int3
in
jmp
(bad)
inc
adc
jge
ins
(bad)
(bad)
(bad)
(bad)
fldenv
pop
sub
pop
inc
or
fmul
mov
adc
and
xchg
imul
(bad)
(bad)
(bad)
push
sub
inc
xchg
fcompp
scas
fidivr
test
or
add
mov
(bad)
dec
dec
inc
push
test
loopne
nop
neg
(bad)
(bad)
jmp
mov
in
ret
add
(bad)
adc
call
push
loopne
sub
ret
push
and
pushf
pop
mov
pop
xor
pop
push
(bad)
(bad)
(bad)
jmp
mov
pop
shl
adc
mov
not
popf
pop
movs
cld
(bad)
jl
test
push
xchg
xor
dec
(bad)
dec
lock
mov
push
lahf
mov
loope
mov
push
inc
aad
(bad)
(bad)
(bad)
(bad)
call
xor
push
repnz
(bad)
mov
dec
fisubr
pop
neg
les
(bad)
call
xor
je
(bad)
cdq
mov
(bad)
(bad)
(bad)
inc
inc
(bad)
pop
or
adc
js
sub
jnp
dec
xor
std
push
mov
sub
sbb
(bad)
(bad)
(bad)
push
dec
mov
pop
cmp
in
add
xlat
xor
adc
sbb
fucomip
or
mov
(bad)
(bad)
(bad)
fadd
pop
sub
cld
jge
jns
cmovle
in
xchg
xor
sbb
(bad)
(bad)
inc
cmp
push
nop
fwait
imul
xor
imul
sbb
push
mov
(bad)
out
cmp
mov
pop
mov
dec
fimul
jge
adc
xchg
lock
imul
mov
adc
pop
mov
lods
les
and
das
jbe
(bad)
retf
xor
(bad)
inc
fimul
fdiv
daa
loope
leave
sub
mov
int
pop
cmp
jmp
je
ret
les
cmp
inc
ficomp
adc
cmc
retf
inc
fmul
cwde
int3
and
(bad)
jg
std
xchg
pushf
idiv
outs
add
pop
add
xchg
fcom
adc
dec
repz
inc
(bad)
(bad)
(bad)
call
xchg
call
cmp
iret
dec
(bad)
dec
nop
test
aam
out
das
push
mov
rol
adc
fdiv
xor
jnp
iret
xchg
sub
(bad)
(bad)
jmp
push
daa
mov
in
shl
cli
pop
je
not
sar
sbb
call
xchg
fisttp
push
pop
aaa
jo
jb
push
(bad)
adc
ja
cli
loopne
add
popa
cmp
stos
push
or
call
mov
cmp
sbb
fcmove
ss
scas
mov
or
into
xchg
ja
sar
push
xchg
jp
aam
dec
fwait
sub
data16
mov
push
hlt
imul
pop
add
dec
push
aad
pop
push
repnz
cmp
(bad)
(bad)
call
jmp
aaa
cli
xlat
inc
aad
xor
cmps
mov
enter
xchg
jne
int3
ins
xchg
call
(bad)
fwait
into
scas
clc
clc
sub
inc
jecxz
(bad)
(bad)
jmp
cmps
ja
mov
push
inc
cdq
fiadd
cmp
les
mov
or
(bad)
(bad)
call
scas
icebp
mov
cmc
imul
sub
jns
adc
rcl
dec
gs
cmps
mov
std
ret
mov
dec
in
int
loop
push
(bad)
aam
retf
mov
mov
sub
pop
(bad)
(bad)
(bad)
push
(bad)
retf
(bad)
sti
and
mov
ins
lock
pop
aaa
loop
ss
xor
rol
add
rol
(bad)
(bad)
fsubp
shl
ss
adc
pop
addr16
fisubr
cld
(bad)
jg
push
xor
or
push
sti
mov
and
cld
fidivr
pop
lock
retf
pushf
cmc
sbb
xchg
stos
fild
les
(bad)
out
fld
push
dec
dec
out
out
(bad)
(bad)
(bad)
dec
cld
dec
dec
push
sbb
mov
cs
adc
mov
jnp
push
mov
(bad)
(bad)
inc
retf
lods
shr
fld
jne
das
mov
cmps
(bad)
je
pop
stos
xor
(bad)
ja
(bad)
mov
sahf
pusha
and
or
test
test
clc
and
call
dec
mov
xchg
push
out
les
cmp
das
clc
mov
jae
inc
aaa
fs
fidiv
in
and
dec
call
enter
popf
out
dec
push
dec
jg
shr
aaa
movs
call
(bad)
mov
or
test
iret
mov
push
mov
pop
fiadd
xchg
mov
xchg
ss
and
(bad)
(bad)
(bad)
dec
xor
stos
retf
jnp
lock
test
repz
push
push
ror
jmp
dec
pop
jmp
sar
pushf
seto
inc
cli
mov
(bad)
ret
sub
add
(bad)
(bad)
jmp
mov
mov
icebp
std
xchg
adc
adc
(bad)
fcomip
mov
das
(bad)
inc
(bad)
out
mov
and
or
sub
push
cld
icebp
fistp
leave
push
test
dec
lds
mov
mov
jo
sbb
(bad)
jns
repz
enter
inc
test
arpl
and
inc
loope
mov
pop
pop
mov
push
mov
sub
out
fcom
lock
scas
jne
lds
dec
(bad)
popa
imul
(bad)
(bad)
(bad)
jmp
xor
repnz
fwait
sub
rcl
add
dec
loop
in
(bad)
(bad)
(bad)
dec
adc
mov
cmps
leave
add
xchg
adc
in
popa
mov
cmps
mov
jl
sbb
pop
cdq
inc
add
out
mov
imul
ret
pop
dec
or
in
(bad)
(bad)
(bad)
jmp
pop
push
and
inc
pop
xchg
inc
ret
pop
mov
nop
push
iret
into
mov
(bad)
(bad)
(bad)
(bad)
(bad)
daa
xor
dec
pop
std
sbb
or
data16
jns
movs
mov
mov
jmp
icebp
loop
pop
pop
loop
(bad)
xchg
add
xor
add
(bad)
(bad)
call
cmp
pop
mov
icebp
mov
jmp
das
in
add
(bad)
(bad)
(bad)
push
pop
mov
xor
test
mov
ins
mov
inc
jne
fcmovb
(bad)
(bad)
dec
or
jns
pop
xor
xchg
dec
pop
stos
out
out
(bad)
jecxz
cld
(bad)
(bad)
inc
leave
jne
dec
mov
ret
in
add
out
aad
jo
dec
mov
outs
scas
(bad)
push
test
or
scas
sar
fmul
jmp
repz
sbb
(bad)
(bad)
(bad)
(bad)
fild
sub
nop
aam
xchg
mov
int
lock
fcom
sbb
sbb
jne
cmp
push
adc
mul
sbb
sbb
(bad)
call
mov
dec
mov
cld
loope
sbb
mov
jg
cmc
loop
dec
push
push
pushf
mov
shl
(bad)
(bad)
out
sub
jnp
or
jae
je
fsub
aas
or
mov
rol
or
mov
pop
retf
pop
jge
cmc
push
scas
dec
repnz
jno
jns
jne
imul
(bad)
(bad)
dec
adc
retf
inc
and
jmp
pop
cmps
(bad)
outs
cmp
xchg
mov
(bad)
(bad)
call
enter
out
jne
mov
mov
daa
repz
cmps
in
in
and
(bad)
(bad)
(bad)
fist
pop
call
mov
das
pop
xor
dec
mov
ret
ret
or
pop
mov
mov
(bad)
(bad)
call
and
es
xchg
push
push
inc
ja
rcr
rol
call
imul
mov
(bad)
jp
ror
je
addr16
sbb
int3
xor
int3
sbb
dec
(bad)
(bad)
out
cli
jmp
sar
cmc
ja
push
sbb
rcr
jno
fld
(bad)
(bad)
(bad)
(bad)
(bad)
call
cmp
int3
scas
(bad)
pop
sub
push
dec
mov
mov
pop
test
xor
or
pop
(bad)
(bad)
(bad)
jmp
test
outs
jmp
inc
sub
inc
and
ficom
jmp
jecxz
movs
push
sub
lods
enter
mov
jae
push
call
push
std
jmp
push
out
jo
imul
pusha
jb
cli
call
fistp
(bad)
pop
and
popf
ret
into
jne
nop
inc
jne
movs
je
nop
cmp
(bad)
(bad)
(bad)
call
clc
outs
mov
ins
push
or
aad
sti
mov
xchg
in
into
aas
sbb
mov
inc
pop
inc
sub
(bad)
(bad)
(bad)
inc
das
jle
jo
ins
jecxz
sbb
inc
cs
test
mov
cmc
fdiv
movs
dec
mov
(bad)
dec
cmc
jbe
je
cmp
pop
cmp
pop
jecxz
and
mov
rol
jmp
mov
(bad)
ins
jle
gs
jns
cmps
fcmovnb
in
(bad)
(bad)
jmp
sbb
ins
mov
mov
call
(bad)
(bad)
(bad)
call
jbe
iret
lock
add
push
call
jmp
daa
or
jecxz
push
call
(bad)
sub
(bad)
(bad)
jmp
movs
out
call
mov
ret
mov
out
mov
lea
mov
mov
xor
mov
mov
add
push
and
lds
adc
in
fcmovnu
ret
(bad)
(bad)
fistp
fldenv
test
sbb
mov
iret
in
push
shr
test
ins
cmps
gs
cmp
scas
movs
dec
jge
jl
xor
xchg
(bad)
call
loopne
mov
mul
(bad)
cmp
pop
pop
int
shl
jle
lds
xor
jns
lods
shl
mov
mov
aaa
or
inc
add
and
std
lahf
movs
(bad)
std
ret
fsub
sbb
stos
popa
push
out
mov
cs
push
pop
xor
std
(bad)
(bad)
jmp
fcom
adc
add
repnz
xchg
adc
(bad)
loope
retf
dec
mov
jge
sub
mov
pushf
push
in
addr16
jmp
loop
addr16
(bad)
(bad)
call
xchg
push
or
and
push
ins
mov
inc
push
fld
push
call
inc
call
push
xchg
test
pop
push
popa
(bad)
(bad)
(bad)
push
mov
js
(bad)
xor
test
jge
push
fimul
outs
daa
inc
int3
ficom
(bad)
(bad)
(bad)
call
fsubr
out
sti
iret
add
shl
add
xchg
mov
inc
(bad)
(bad)
(bad)
dec
leave
or
mov
(bad)
call
jge
cmp
cmp
test
dec
fwait
push
movs
dec
dec
addr16
xchg
loopne
ror
adc
cmp
(bad)
push
ss
(bad)
(bad)
(bad)
(bad)
clc
mov
ret
pusha
mov
ret
popf
jnp
or
sbb
or
(bad)
dec
cmps
pop
mov
into
loop
inc
adc
leave
mov
lea
sub
or
inc
and
xor
cmp
add
(bad)
(bad)
(bad)
call
adc
(bad)
dec
out
call
test
out
sub
(bad)
adc
ret
(bad)
(bad)
push
jmp
push
retf
and
js
ret
cmp
lds
jecxz
xor
(bad)
(bad)
(bad)
call
pop
jmp
loope
push
mov
and
ds
mov
(bad)
(bad)
(bad)
jmp
aas
adc
mov
jge
push
xor
in
stc
shr
je
jge
jae
ins
dec
add
(bad)
(bad)
push
push
pop
(bad)
call
push
out
mov
jbe
or
add
sahf
or
jmp
cmps
inc
call
(bad)
rcr
mov
sbb
and
or
sbb
cmps
jmp
push
sbb
lock
pop
js
jmp
and
es
loop
mov
(bad)
call
fadd
inc
cmp
fistp
and
xchg
dec
or
inc
jno
mov
(bad)
fisub
adc
sar
(bad)
(bad)
(bad)
dec
ret
sbb
cmp
cmp
jmp
les
outs
rol
sub
sub
cmp
(bad)
sbb
retf
cmp
inc
mov
(bad)
jmp
sbb
mov
cdq
and
rcr
xor
stos
cmps
dec
xor
(bad)
(bad)
ffreep
movs
cmps
dec
pop
dec
sbb
fidiv
(bad)
sub
gs
into
sub
dec
(bad)
jp
ror
or
call
pop
and
and
out
cli
jmp
loop
add
dec
push
jnp
mov
retf
in
mov
mov
(bad)
(bad)
call
mov
push
push
jle
add
shl
popa
imul
popa
jle
mov
cli
(bad)
jg
jmp
pusha
cmp
sbb
pop
sahf
dec
dec
fst
lods
in
aad
test
rol
pop
cmc
cld
pop
ja
out
pop
aaa
div
(bad)
cs
jge
mov
inc
aaa
sub
mov
pop
sbb
push
data16
(bad)
(bad)
(bad)
call
hlt
and
add
aam
mov
and
rcl
mov
mov
iret
movs
pop
xor
adc
ret
and
xor
fist
ss
repnz
inc
retf
shl
dec
pop
xchg
pop
mov
movs
add
jmp
cdq
in
mov
jl
lock
(bad)
(bad)
(bad)
call
popf
mov
add
or
mov
idiv
cmc
leave
adc
add
xor
(bad)
(bad)
(bad)
fcmovnbe
jnp
sahf
repnz
sub
pop
dec
ja
pop
adc
adc
sub
add
inc
popw
sar
int3
rol
ror
(bad)
ffreep
retf
lock
pop
sbb
sub
sub
mov
push
(bad)
dec
jns
dec
(bad)
(bad)
(bad)
(bad)
cmp
out
xor
aad
xchg
rcl
mov
pop
ss
or
stos
cmp
cmp
pop
in
sar
cli
push
xchg
adc
lds
xor
aad
add
(bad)
fld
sbb
pop
and
mov
xor
outs
jecxz
mov
daa
(bad)
(bad)
(bad)
jmp
jns
es
(bad)
pop
mov
cmp
adc
int
and
out
inc
fwait
int
(bad)
call
mov
ins
popf
sbb
inc
dec
out
pop
stos
aam
and
cmp
and
(bad)
(bad)
push
sub
outs
sub
mov
outs
(bad)
xlat
push
mov
repnz
mov
sti
cmp
sub
dec
enter
xchg
fild
mov
scas
mov
(bad)
(bad)
(bad)
mov
pop
mov
adc
mov
xchg
ins
mov
ret
cmp
xchg
push
push
ins
cli
pop
std
stos
sub
sub
sub
rcl
(bad)
push
push
(bad)
sub
inc
lds
sub
cmc
mov
cld
(bad)
(bad)
jg
repnz
jmp
cmp
aas
xor
jmp
(bad)
call
pop
xchg
push
ds
retf
iret
nop
icebp
test
or
dec
dec
push
dec
loop
push
and
dec
jns
xor
sbb
push
(bad)
push
cmp
and
add
push
and
out
ss
test
mov
mov
ds
cmp
hlt
ds
mov
test
push
arpl
sub
in
xor
xchg
mov
loope
or
loope
xor
(bad)
cmc
and
(bad)
(bad)
out
cli
scas
retf
ret
dec
jne
xor
sub
mov
jnp
call
(bad)
(bad)
(bad)
jmp
ss
mov
daa
es
es
or
push
adc
mov
jo
js
les
push
aaa
std
jne
push
ficom
ds
fdivr
(bad)
(bad)
dec
test
dec
pop
imul
inc
pop
je
lods
push
in
fwait
lods
xchg
in
pop
xor
call
sub
xchg
mov
and
retf
pop
xor
jns
and
(bad)
call
jae
data16
mov
inc
sub
iret
push
fcomp
mov
out
mov
jno
push
mov
sbb
push
aam
sub
je
and
adc
shl
push
sbb
inc
(bad)
(bad)
(bad)
push
pop
int
scas
mov
inc
lea
lds
nop
jmp
icebp
push
jg
and
stos
ss
dec
ret
(bad)
(bad)
(bad)
jmp
mov
mov
adc
and
xor
jp
stos
stos
rdpmc
fiadd
xor
(bad)
(bad)
(bad)
inc
xor
jmp
jecxz
sbb
push
cmp
pusha
dec
(bad)
(bad)
(bad)
dec
sub
mov
mov
aas
inc
fst
test
imul
das
clc
sbb
cmc
(bad)
(bad)
call
add
jmp
shr
add
mov
neg
pop
or
mov
pop
sbb
jg
sti
inc
push
sbb
push
mov
jg
(bad)
out
mov
push
(bad)
(bad)
(bad)
push
mov
or
dec
bound
mov
(bad)
xlat
add
outs
xchg
sar
(bad)
(bad)
push
in
aad
push
jo
mov
(bad)
test
push
ss
xchg
mov
fiadd
inc
fbstp
call
loopne
jmp
data16
cmp
and
sbb
mov
pop
pop
ins
or
(bad)
(bad)
(bad)
inc
cmc
imul
clc
and
shl
jle
push
call
out
jle
(bad)
(bad)
push
and
mov
jae
retf
(bad)
jle
into
sbb
xchg
(bad)
mov
(bad)
or
xchg
into
jo
cmps
leave
hlt
lea
fwait
xor
jg
cmp
push
jg
pop
ret
ins
cld
cmps
outs
push
lock
mov
dec
icebp
or
jmp
shr
(bad)
dec
sbb
adc
(bad)
inc
fst
mov
mov
(bad)
sar
xchg
hlt
ja
jge
mov
jns
icebp
adc
mov
hlt
(bad)
(bad)
call
(bad)
cmp
cmp
bound
rcl
std
icebp
mov
imul
call
add
dec
retf
mov
inc
push
push
repnz
sub
jne
cli
xchg
(bad)
call
jb
call
lahf
pop
cmp
jnp
mov
pop
cmp
cmp
inc
loope
loopne
(bad)
inc
movs
adc
and
sar
pop
shr
outs
sbb
ins
sub
xor
or
sbb
imul
mov
mov
nop
test
xchg
add
imul
outs
xchg
retf
outs
cs
(bad)
(bad)
(bad)
dec
dec
aas
fisub
loopne
daa
xchg
or
mov
cs
ss
call
scas
enter
imul
or
sub
mov
xchg
fldenv
movs
cmp
aas
jecxz
(bad)
call
add
and
cwde
push
cmps
popa
sar
addr16
pusha
(bad)
(bad)
(bad)
jmp
adc
pushf
sbb
push
mov
xchg
cmps
ror
adc
leave
inc
pushf
imul
mov
pop
or
push
cmp
push
stos
cmps
mov
or
adc
pop
(bad)
(bad)
(bad)
call
mov
fadd
imul
mov
ret
cwde
popf
push
xchg
scas
mov
(bad)
(bad)
(bad)
(bad)
mov
push
in
jle
adc
mov
jmp
mov
(bad)
icebp
sbb
imul
sbb
sbb
ret
xchg
jo
inc
fistp
dec
xchg
sbb
outs
in
sub
nop
fisubr
(bad)
js
fnsave
ins
mov
sbb
xchg
add
aaa
rol
ficomp
mov
scas
clc
lahf
xchg
cmps
div
sub
and
scas
sbb
ins
adc
daa
and
(bad)
(bad)
ds
push
test
and
jbe
mov
jno
(bad)
jg
sbb
dec
sub
add
mov
cmps
out
xchg
jle
(bad)
(bad)
(bad)
(bad)
jg
add
call
adc
adc
sbb
adc
jl
sar
push
std
(bad)
push
push
aam
out
xchg
stos
out
nop
mov
fnsave
mov
sbb
in
and
dec
(bad)
jmp
xor
fidivr
mov
jo
jnp
mov
sbb
sbb
(bad)
(bad)
jg
add
and
adc
in
jl
push
(bad)
(bad)
clc
xchg
sub
adc
push
mov
inc
nop
push
movs
mov
test
mov
push
js
(bad)
(bad)
(bad)
(bad)
mov
fdivrp
mov
adc
or
jmp
mov
retf
adc
(bad)
(bad)
(bad)
inc
daa
add
cmp
addr16
push
rol
inc
cmp
retf
std
pop
push
(bad)
and
mov
(bad)
(bad)
(bad)
push
sti
jecxz
mov
or
adc
sbb
xchg
pop
pop
jl
pop
sbb
pop
scas
mov
aaa
enter
dec
ja
inc
cmp
repnz
enter
mov
movs
dec
aad
sbb
call
loopne
jns
fcmovb
pop
dec
mov
dec
fwait
out
and
fstp
dec
mov
loop
pusha
xor
xchg
mov
leave
sti
ds
imul
jg
or
inc
ja
lock
test
mov
stos
push
lods
lock
(bad)
(bad)
call
movs
push
mov
(bad)
fwait
xor
outs
mov
add
dec
inc
xchg
inc
adc
push
jge
popf
(bad)
(bad)
(bad)
dec
pushf
xchg
mov
jecxz
ins
xor
add
or
les
sahf
or
mov
ins
iret
or
stos
iret
dec
out
cmp
dec
push
sub
ins
test
(bad)
(bad)
cmp
rol
mov
xor
lock
pop
imul
fdiv
dec
loopne
pop
lock
(bad)
jg
mov
imul
sbb
pop
mov
(bad)
(bad)
jg
cs
cmps
es
and
or
dec
fcomp
and
icebp
cli
inc
jecxz
idiv
call
in
lods
in
sub
or
in
repz
sti
pushf
sar
jnp
(bad)
dec
leave
adc
and
in
mov
lds
pop
aaa
lods
pusha
dec
push
(bad)
(bad)
(bad)
call
retf
cwde
sbb
dec
dec
std
outs
repnz
pushf
cld
push
cmp
rep
nop
test
xchg
(bad)
(bad)
jmp
xor
es
int3
nop
mov
gs
push
cmp
jne
call
mov
and
rol
cmc
and
mov
sti
mov
jbe
jmp
(bad)
(bad)
push
sub
bound
or
inc
cmps
xor
or
(bad)
jo
xor
das
lea
icebp
jecxz
out
pop
pop
cmp
sbb
test
(bad)
(bad)
(bad)
call
addr16
xchg
sbb
jecxz
fld
lahf
call
cmp
jmp
(bad)
(bad)
(bad)
dec
inc
mov
fidivr
cli
pusha
inc
sbb
xor
or
or
xchg
aaa
adc
jmp
loope
cmp
xchg
push
sti
lahf
shl
sub
(bad)
(bad)
dec
sbb
mov
fadd
xor
call
mov
dec
mov
pop
cmp
(bad)
(bad)
(bad)
cmp
adc
sub
icebp
clc
mov
adc
sub
mov
je
(bad)
(bad)
(bad)
call
aaa
push
xchg
pop
xor
rcl
mov
xor
hlt
or
sbb
(bad)
fcomip
ins
add
sbb
cmp
and
icebp
xchg
jge
dec
xor
ret
aas
dec
fisub
and
mov
test
sub
loop
adc
mov
pusha
icebp
dec
retf
jmp
jmp
(bad)
clc
nop
mov
in
mov
or
push
mov
cmp
push
outs
push
mov
mov
aam
sub
movs
ins
shr
fwait
shl
mov
std
cmp
js
aaa
sbb
lods
rcr
(bad)
in
mov
jmp
pop
adc
dec
mov
and
out
lahf
lahf
push
ret
popf
xor
(bad)
mul
daa
mov
pop
jp
fild
ret
cmp
mov
sbb
retf
(bad)
(bad)
in
fmul
cld
xchg
mov
test
push
call
cdq
ficom
xchg
pushf
cmc
(bad)
(bad)
jmp
xor
daa
cs
pop
into
pop
outs
xor
sbb
adc
xlat
cmp
fild
aaa
xchg
xor
(bad)
mov
dec
(bad)
fidiv
fbld
or
jmp
fsub
inc
es
and
outs
mov
jnp
mov
pop
cld
mov
movs
outs
adc
(bad)
jmp
mov
add
(bad)
(bad)
push
int
arpl
push
(bad)
(bad)
fild
jge
xchg
pop
dec
test
fld
loop
xchg
jmp
jg
xchg
(bad)
push
cmp
add
cmps
mov
mov
fldcw
(bad)
(bad)
(bad)
(bad)
cld
call
mov
mov
cdq
ja
imul
push
dec
aas
fldenv
clc
(bad)
(bad)
(bad)
jmp
xor
and
inc
pop
call
lds
mov
xor
call
cmp
push
sub
inc
mov
and
(bad)
(bad)
(bad)
in
sti
xchg
mov
add
sub
addr16
bound
hlt
test
je
(bad)
jne
in
(bad)
(bad)
jmp
lahf
adc
mov
dec
loop
arpl
scas
enter
retf
push
jp
push
mov
clc
(bad)
(bad)
jmp
pop
push
or
mov
sbb
xchg
data16
sbb
aad
jo
sbb
add
mov
fldl2t
imul
lods
into
xor
mov
(bad)
mov
cmp
jmp
mov
and
jno
shl
scas
adc
sbb
(bad)
jo
iret
enter
mov
gs
addr16
ins
jmp
(bad)
(bad)
call
adc
add
pusha
je
sub
ja
sub
add
push
inc
add
addr16
call
call
ins
adc
scas
xchg
xchg
or
fadd
popa
adc
push
shr
repz
fnstenv
sbb
xor
add
xchg
(bad)
jmp
and
mov
push
ret
push
shl
mov
loop
sbb
fild
push
mov
pop
loope
popa
into
add
fsub
add
pushf
fdivr
(bad)
(bad)
jmp
and
cmp
lahf
xor
out
pop
xor
inc
pop
nop
into
adc
jns
jge
jg
jmp
neg
or
ins
xchg
jno
add
dec
inc
aam
and
and
pop
cmp
sahf
inc
lods
out
or
(bad)
(bad)
(bad)
dec
test
inc
sub
mov
std
or
adc
fcos
(bad)
mov
ret
mov
hlt
xor
or
stos
cmps
push
mov
mov
dec
jmp
cmc
shl
outs
cdq
(bad)
fldenv
mov
or
mov
aaa
dec
fcmovnbe
int
scas
and
jecxz
(bad)
(bad)
push
inc
push
jne
in
fnstenv
nop
sbb
and
cmps
je
or
sbb
jle
test
inc
push
push
dec
sub
aam
jmp
(bad)
mov
or
fsubr
jbe
pushf
(bad)
call
outs
adc
mov
popf
cld
cmp
psllq
fisubr
dec
leave
(bad)
(bad)
(bad)
dec
xlat
jmp
push
cmp
inc
je
mov
in
ret
in
(bad)
fwait
pop
(bad)
(bad)
(bad)
call
sbb
xchg
mov
cwde
ret
add
mov
fwait
mov
hlt
xor
ficom
clc
(bad)
call
aaa
repnz
ins
stos
push
xchg
outs
das
mov
fild
(bad)
dec
div
mov
pop
mov
hlt
loope
loopne
dec
test
loope
jmp
dec
mov
(bad)
(bad)
jmp
loopne
into
or
fs
jp
ret
stos
repnz
fs
push
outs
fst
(bad)
(bad)
(bad)
(bad)
jle
pop
xor
fdiv
mov
jne
lods
scas
and
in
and
xchg
xchg
dec
cli
movs
lds
jecxz
add
mov
das
es
call
jbe
inc
sub
ret
(bad)
(bad)
(bad)
call
dec
xchg
in
iret
dec
outs
outs
xor
fs
mov
ss
pop
into
adc
int3
cwde
js
(bad)
call
(bad)
cmp
jno
not
rcl
cld
push
hlt
xor
test
mov
(bad)
(bad)
(bad)
(bad)
jmp
rol
xchg
js
cdq
and
or
pop
adc
(bad)
(bad)
(bad)
(bad)
dec
mov
arpl
sub
test
cmp
adc
jbe
lods
(bad)
inc
mov
fnstsw
xchg
out
(bad)
cmp
add
loopne
(bad)
jmp
loopne
adc
gs
cmp
and
repnz
lsl
sub
(bad)
call
or
das
dec
fimul
loop
mov
ds
in
test
or
scas
xchg
(bad)
stos
cli
mov
dec
jnp
jp
jns
out
mov
cs
mov
popa
cli
push
xor
ds
pop
test
stc
or
cmc
cmp
inc
shr
test
xor
push
add
xchg
jo
(bad)
(bad)
(bad)
push
clc
call
rcr
outs
inc
inc
sbb
movs
ret
pop
iret
or
(bad)
(bad)
call
int3
rcr
leave
sbb
lahf
sbb
cmp
jns
jnp
mov
add
pop
addr16
(bad)
(bad)
call
je
outs
dec
das
hlt
jne
das
inc
mov
push
jns
dec
jecxz
cmp
stos
(bad)
test
pop
dec
jae
push
outs
in
js
test
inc
fwait
(bad)
inc
leave
mov
into
dec
(bad)
(bad)
inc
int
sbb
retf
cs
(bad)
rol
leave
jge
mov
add
(bad)
(bad)
call
mov
inc
xchg
xor
mov
fiadd
loope
jb
gs
cmp
xlat
(bad)
(bad)
(bad)
(bad)
mov
fs
inc
sbb
bound
out
(bad)
mov
clc
and
test
push
(bad)
inc
out
mov
push
(bad)
ins
shr
mov
retf
xchg
jecxz
sub
mov
(bad)
call
inc
mov
jnp
xor
int3
shl
in
sub
(bad)
(bad)
(bad)
(bad)
push
dec
pop
loope
repz
push
mov
out
ret
shl
pop
sub
int3
outs
clc
(bad)
(bad)
in
in
or
pop
mov
xchg
(bad)
pop
fsub
test
inc
dec
out
jmp
rcr
add
jmp
jnp
inc
dec
fsubr
xor
mov
iret
xchg
push
push
popa
dec
(bad)
mov
inc
mov
pop
push
ficom
cwde
xchg
mov
dec
cld
mov
mov
ins
mov
sub
(bad)
call
call
dec
cdq
inc
mov
(bad)
(bad)
or
sbb
into
mov
(bad)
(bad)
push
cs
lea
(bad)
or
mov
xchg
jmp
mov
scas
xor
outs
jmp
(bad)
xor
(bad)
push
sub
lea
(bad)
jmp
sbb
cmps
test
aam
push
out
in
imul
imul
out
std
loope
and
mov
movs
push
pushf
and
test
mov
(bad)
(bad)
call
push
adc
mov
retf
aas
xchg
pushf
(bad)
ja
xchg
test
mov
(bad)
(bad)
(bad)
mov
cmp
ret
inc
jp
repz
mov
std
dec
arpl
push
(bad)
outs
adc
dec
push
rol
div
mov
jne
(bad)
dec
cld
adc
pandn
push
xchg
repnz
xchg
shl
iret
das
mov
(bad)
(bad)
(bad)
(bad)
js
adc
xor
lahf
xchg
mov
inc
ror
xchg
pop
out
mov
test
mov
or
mov
inc
push
clc
or
je
in
loopne
xor
repnz
pop
outs
xchg
jbe
dec
loope
xchg
cmp
pop
sub
push
rcr
gs
cld
push
iret
loop
xchg
lds
addr16
call
test
nop
idiv
add
(bad)
inc
imul
push
nop
(bad)
mul
cs
(bad)
inc
jno
sbb
push
adc
outs
(bad)
inc
(bad)
rcr
and
(bad)
(bad)
push
pop
and
cld
mov
rol
ss
mov
call
xchg
cdq
and
(bad)
(bad)
dec
cmps
mov
retf
test
outs
jo
nop
dec
jp
push
sub
leave
stos
add
mov
call
(bad)
(bad)
pop
int3
ror
leave
fcomi
call
mov
xchg
push
(bad)
(bad)
(bad)
jmp
(bad)
aas
sbb
shl
movs
sub
mov
cwde
xchg
mov
pushf
dec
jmp
(bad)
(bad)
(bad)
push
les
movs
cli
int
popf
xor
jl
sbb
mov
xchg
addr16
hlt
ins
mov
and
adc
scas
cmps
sbb
or
xor
ins
add
inc
(bad)
(bad)
(bad)
call
nop
sub
ret
(bad)
sub
cmp
jge
fcmove
jl
mov
shl
loope
das
lds
jl
out
addr16
outs
mov
xor
(bad)
push
popa
xchg
aam
adc
out
jmp
out
mov
aaa
call
(bad)
(bad)
dec
pop
xor
mov
inc
inc
adc
mov
add
or
movs
aas
es
sbb
jmp
sbb
repnz
(bad)
(bad)
stc
mov
xchg
call
sar
(bad)
(bad)
push
dec
sahf
add
xchg
xor
xchg
pop
mov
(bad)
out
add
(bad)
jg
es
ja
xor
jae
and
xor
(bad)
push
add
inc
cmp
add
jo
xchg
jecxz
cmc
sub
cmp
jp
push
fnstcw
jg
(bad)
(bad)
(bad)
jmp
lock
mov
mov
cmp
mov
cmp
jge
scas
scas
mov
adc
(bad)
(bad)
(bad)
mov
test
fwait
clc
inc
jmp
scas
pusha
mov
sub
pop
stc
out
loop
int
int
xchg
push
xor
pop
cmp
test
push
or
imul
inc
sub
pop
jg
(bad)
(bad)
push
mov
rcl
add
ins
in
call
ror
stos
cmp
push
(bad)
(bad)
jg
jle
mov
inc
add
and
or
leave
xchg
jmp
add
sahf
(bad)
(bad)
(bad)
(bad)
mov
mov
pop
out
fsubr
popa
lods
test
add
pop
adc
jg
and
ret
dec
sbb
jl
pop
loop
hlt
imul
jmp
outs
mov
jno
mov
cmp
pop
fcomp
sti
(bad)
icebp
adc
mov
mov
cwde
aam
enter
pop
(bad)
into
mov
xor
add
jae
xor
(bad)
(bad)
(bad)
dec
pop
in
icebp
ret
push
pop
icebp
dec
sbb
pushf
sbb
in
dec
mov
test
inc
cld
(bad)
(bad)
(bad)
call
sbb
inc
test
shufps
pop
mov
xchg
stos
or
(bad)
jmp
push
or
loopne
push
adc
jne
pop
and
std
jg
jmp
jae
mov
jnp
pop
pushf
in
jmp
out
addr16
and
aaa
bound
mov
xchg
sahf
adc
jp
inc
(bad)
(bad)
jmp
and
push
adc
div
xor
sub
sub
jmp
xor
xchg
test
adc
inc
test
iret
(bad)
(bad)
push
xchg
lods
aaa
or
inc
push
adc
scas
dec
enter
jns
sbb
jl
add
call
pop
and
sti
jae
outs
xchg
pop
int
xlat
push
popf
cmps
daa
fsubr
mov
mov
and
(bad)
jmp
xchg
stos
sbb
cmp
rcr
fstp
(bad)
sbb
es
data16
sahf
fnclex
jne
xor
fcmovbe
(bad)
(bad)
(bad)
push
cmp
data16
push
adc
pop
mov
loop
mov
aas
pop
hlt
inc
repnz
sub
jl
ror
or
movs
div
data16
(bad)
(bad)
push
cmc
and
jl
xor
jp
es
xor
pavgb
sbb
dec
(bad)
(bad)
(bad)
dec
fbstp
ficomp
adc
pop
jg
cmps
jo
adc
dec
mov
in
jg
(bad)
push
dec
jl
sub
xchg
mov
mov
mov
xchg
adc
lods
cwde
or
mov
(bad)
call
nop
mov
adc
(bad)
add
jnp
sub
lahf
rcl
(bad)
mov
jl
repnz
jae
out
mov
mov
xor
(bad)
inc
mov
jp
sub
adc
loopne
ss
jmp
lock
scas
add
int3
push
push
cmp
popa
lock
sbb
jno
(bad)
call
sub
dec
push
pushf
(bad)
jp
pop
hlt
out
adc
sub
mov
(bad)
(bad)
cli
cmp
in
test
or
mov
aas
adc
cmp
dec
push
sahf
dec
je
mov
and
(bad)
(bad)
(bad)
cld
(bad)
leave
int
pop
aam
adc
cli
fbstp
mov
pop
sbb
cmp
dec
dec
ss
data16
jmp
dec
ins
sahf
push
fdivr
(bad)
(bad)
push
inc
sbb
jp
jmp
enter
cmp
fisttp
test
push
fcomp
jge
les
mov
push
xchg
inc
xchg
sub
mov
mov
cmp
xchg
(bad)
mov
dec
dec
xchg
push
call
pop
xchg
push
fwait
in
and
loope
dec
call
and
sbb
ror
(bad)
jmp
shr
retf
jmp
push
sbb
or
in
or
jg
das
cmp
(bad)
(bad)
push
ds
in
loope
shl
push
in
xlat
mov
cmps
in
cld
loope
jnp
imul
(bad)
(bad)
(bad)
(bad)
cli
mov
scas
stos
pusha
cmp
jmp
inc
add
cwde
pusha
add
call
pop
(bad)
(bad)
(bad)
jmp
out
js
jge
call
mov
in
cmc
add
mov
and
(bad)
(bad)
(bad)
inc
(bad)
daa
xchg
jbe
shl
shr
fsub
dec
jmp
jne
daa
nop
out
mov
popf
jmp
mov
(bad)
inc
pop
bound
pop
mov
int3
inc
cmp
mov
(bad)
jmp
pop
pusha
push
sub
jnp
lea
jl
lahf
mov
out
mov
hlt
ins
inc
shr
sbb
jecxz
and
loope
sti
add
(bad)
(bad)
push
je
xor
push
and
push
sbb
lea
es
int3
jmp
loop
(bad)
(bad)
mov
lock
cmp
or
test
or
fidiv
mov
out
loope
ins
sub
test
(bad)
jmp
jnp
iret
sub
adc
test
fistp
loope
aaa
or
cmp
(bad)
jmp
and
pop
and
push
push
into
cmps
mov
int
inc
ds
mov
jae
lods
(bad)
(bad)
(bad)
inc
fisub
les
xor
sub
xchg
ror
sahf
aad
aaa
pop
sub
(bad)
(bad)
dec
pop
jle
ins
and
dec
and
fimul
(bad)
inc
mov
(bad)
(bad)
call
jmp
pop
or
fsubp
in
pop
ret
std
clc
aas
jmp
fnstsw
jmp
push
mov
loopne
in
inc
sub
sbb
push
or
outs
lods
sbb
jb
imul
jmp
cdq
mov
cmps
sub
pop
rol
jbe
mov
cmps
(bad)
(bad)
(bad)
jmp
jo
shr
loope
repnz
jle
push
cs
das
sbb
xor
pop
cdq
(bad)
(bad)
(bad)
jmp
stc
pop
jnp
daa
movs
lods
jnp
dec
data16
mov
mov
mov
hlt
(bad)
inc
sub
mov
or
ffreep
sete
mov
(bad)
(bad)
push
punpckhbw
and
or
in
and
(bad)
(bad)
mov
cmp
clc
lahf
outs
ins
sub
and
add
add
pop
fwait
jg
(bad)
(bad)
inc
loopne
sbb
pop
or
call
sbb
(bad)
(bad)
jmp
push
mov
addr16
ffree
mov
pop
xlat
(bad)
ss
mov
aas
out
(bad)
loope
pop
aam
(bad)
out
clc
fst
fmulp
icebp
dec
add
movs
adc
dec
mov
(bad)
pusha
dec
mov
in
pop
add
cs
call
and
jmp
(bad)
adc
scas
and
ret
test
(bad)
(bad)
(bad)
jg
mov
les
outs
and
in
(bad)
(bad)
inc
push
(bad)
std
(bad)
mov
fcomip
(bad)
dec
mov
(bad)
retf
push
add
rcr
out
xchg
jns
fistp
(bad)
std
in
pop
push
xor
js
ret
inc
in
ror
test
xor
div
inc
imul
mov
and
mov
(bad)
mov
or
ror
ret
(bad)
call
in
fadd
pop
mov
pusha
stos
fild
push
neg
push
scas
jge
mov
adc
(bad)
(bad)
(bad)
(bad)
push
fdiv
xchg
popa
adc
mov
add
push
inc
loop
pushf
xlat
mov
clc
and
sub
call
adc
(bad)
push
sub
mov
out
enter
dec
mov
(bad)
(bad)
(bad)
(bad)
fiadd
mov
dec
cmp
push
jmp
xor
pop
pop
inc
fild
cmp
out
(bad)
(bad)
(bad)
jmp
mov
rcl
sahf
loopne
dec
inc
pop
xchg
loopne
cmp
aad
jne
pop
or
or
int
mov
(bad)
jmp
pop
sti
mov
add
inc
sub
add
sub
and
je
movs
(bad)
call
icebp
inc
xchg
xor
jnp
cmps
add
dec
push
call
pop
loop
outs
push
xchg
pop
movs
rcl
ret
js
mov
dec
sub
inc
add
and
pop
inc
push
pop
inc
ds
daa
jp
push
shl
adc
test
jmp
aaa
cld
and
xchg
mov
add
lahf
mov
(bad)
(bad)
dec
ret
jmp
push
imul
jb
ret
lods
mov
adc
push
inc
push
pop
test
and
(bad)
(bad)
dec
jle
inc
adc
hlt
das
ss
inc
dec
mov
popa
icebp
fsubr
xchg
fisttp
shl
sub
adc
(bad)
(bad)
(bad)
call
cld
mov
dec
mov
dec
mov
inc
xor
mov
lds
dec
icebp
js
out
dec
sub
(bad)
fsub
fsub
(bad)
(bad)
(bad)
jmp
inc
sub
sbb
jmp
or
add
stc
adc
jbe
rcr
mov
fbld
pusha
fwait
scas
(bad)
(bad)
(bad)
(bad)
fmul
sbb
inc
mov
sbb
sbb
enter
fbld
(bad)
(bad)
jmp
pushf
add
int
bound
out
mov
aas
pop
fistp
or
jp
pop
(bad)
(bad)
(bad)
push
lea
hlt
jle
jge
enter
jns
push
xor
or
mov
inc
in
data16
es
scas
pop
cmp
fdivr
aas
or
inc
or
(bad)
cmp
jecxz
push
(bad)
(bad)
(bad)
(bad)
mov
jmp
push
mov
mov
mov
dec
dec
icebp
ficomp
xor
fwait
jmp
or
aas
rcl
aad
mov
xlat
sub
jmp
adc
cmp
not
mov
add
(bad)
(bad)
dec
pop
lods
lea
popa
and
loope
lods
add
push
and
pop
cld
(bad)
jmp
shl
sbb
dec
rol
(bad)
jg
cs
mov
call
pop
pusha
mov
leave
cli
jle
mov
mov
inc
fsub
das
inc
lods
mov
(bad)
(bad)
(bad)
call
fcomp
xor
stos
out
scas
adc
outs
mov
sub
mov
loop
es
pop
inc
add
xor
push
or
jo
sub
test
jns
loopne
ficomp
inc
xlat
jns
adc
pop
movs
mov
bnd
(bad)
dec
push
(bad)
bound
and
adc
xor
jno
cs
(bad)
(bad)
inc
sbb
push
mov
mov
(bad)
test
jmp
push
call
add
push
and
imul
(bad)
(bad)
jmp
out
mov
jmp
push
adc
dec
dec
and
dec
jp
ins
ret
mov
jmp
test
xor
aas
jge
pop
iret
mov
ret
dec
dec
rcl
inc
in
(bad)
(bad)
mov
popa
mov
push
pusha
push
jmp
push
xchg
xor
ror
jne
jmp
(bad)
(bad)
mov
xor
mov
cmp
jl
test
(bad)
jle
inc
call
xchg
les
or
leave
sbb
out
ins
mov
cmp
retf
leave
(bad)
fcomp
adc
popa
adc
mov
call
mov
repnz
sti
(bad)
(bad)
dec
cmps
les
lea
add
adc
inc
jmp
loop
(bad)
(bad)
(bad)
jg
cmp
into
mov
(bad)
leave
nop
(bad)
inc
dec
sbb
je
dec
sub
pop
ja
xor
xor
(bad)
call
mov
mov
(bad)
inc
jae
out
jmp
sub
xchg
(bad)
xor
scas
cli
inc
mov
sub
xchg
retf
les
int
pop
fidiv
(bad)
jmp
repz
push
ror
pop
test
sbb
(bad)
inc
pop
inc
xchg
repnz
jmp
xchg
mov
call
lea
cwde
repz
mov
mov
pop
scas
sahf
push
cmp
hlt
call
in
shr
dec
cmps
ins
arpl
xchg
stc
mov
sbb
icebp
imul
sar
mov
sbb
mov
(bad)
rol
lods
stos
mov
(bad)
(bad)
inc
and
mov
or
push
in
repz
pop
enter
mov
xchg
mov
cmp
(bad)
(bad)
inc
test
scas
outs
bnd
retf
push
in
mov
(bad)
jmp
push
pop
mov
imul
test
pop
push
xchg
cld
xor
push
adc
mov
mov
enter
in
nop
adc
ds
push
pop
pop
(bad)
(bad)
push
cmp
mov
popf
fcomp
addr16
pop
mov
inc
mov
je
jae
into
dec
test
enter
mov
call
lahf
pop
dec
sar
add
dec
cmp
adc
adc
ret
dec
stos
std
imul
mov
inc
sub
rol
inc
jp
shl
outs
pop
hlt
inc
mov
mov
mov
div
mov
(bad)
(bad)
jmp
jmp
out
pop
iret
pop
sub
inc
inc
cld
sbb
adc
sbb
mov
jns
push
(bad)
jmp
js
ds
popa
hlt
bound
and
call
xchg
retf
or
lods
push
push
lock
mov
sub
pop
jae
mov
pop
(bad)
(bad)
(bad)
jmp
outs
call
pop
mov
cmps
adc
dec
fistp
cld
(bad)
dec
push
ins
icebp
cmp
fwait
jnp
mov
inc
retf
out
fwait
jno
cmp
test
jg
call
pop
dec
repnz
inc
mov
mov
mov
(bad)
dec
lea
repz
movs
sbb
gs
leave
add
fwait
jae
popf
or
xchg
cmp
sti
lahf
stos
jg
(bad)
call
inc
les
test
fidiv
push
dec
bound
mov
sub
lds
sub
(bad)
(bad)
push
popf
dec
sub
mov
push
out
retf
and
sub
inc
xor
dec
cmp
fimul
lods
sbb
jecxz
and
sbb
(bad)
(bad)
ja
(bad)
(bad)
inc
pusha
mov
sbb
push
jnp
fs
push
and
lea
shl
sbb
(bad)
push
or
fidivr
xlat
das
(bad)
into
popf
push
fxch
dec
push
cmc
xor
add
call
xchg
dec
dec
dec
xchg
push
mov
ds
(bad)
(bad)
(bad)
(bad)
jns
daa
jno
das
xor
popf
mov
jmp
test
mov
jmp
es
(bad)
(bad)
(bad)
push
xor
adc
mov
lahf
out
aaa
mov
aad
movs
jnp
xchg
mov
cmps
(bad)
dec
or
ret
adc
into
sti
mov
shr
scas
addr16
(bad)
jmp
mov
cld
mov
xchg
xchg
mov
add
(bad)
(bad)
(bad)
jmp
test
pusha
mov
out
sbb
popf
mov
adc
jmp
js
lods
js
(bad)
(bad)
push
dec
sbb
mov
test
add
bound
pop
cmps
dec
mov
cli
push
inc
dec
mov
or
aam
(bad)
(bad)
(bad)
push
and
and
std
cmps
retf
adc
test
imul
adc
cwde
scas
jns
cmp
(bad)
call
or
xchg
mul
xor
je
test
mov
pusha
inc
cli
and
(bad)
(bad)
call
jecxz
pushf
jnp
mov
mov
sbb
aas
in
mov
outs
pushf
cmp
nop
dec
add
outs
icebp
(bad)
jp
int
inc
mov
enter
fimul
(bad)
out
cli
(bad)
jmp
mov
es
ds
jns
iret
lods
mov
ins
fwait
(bad)
mov
ud0
(bad)
push
(bad)
mov
push
clc
sbb
loop
mov
cwde
xor
test
(bad)
(bad)
(bad)
call
xor
call
hlt
out
jle
in
das
and
test
test
out
xchg
(bad)
(bad)
(bad)
dec
fwait
gs
sub
adc
cmp
mov
mov
inc
cmp
or
retf
inc
dec
rcr
(bad)
call
mov
ins
cmc
iret
fwait
je
jg
pop
repnz
ds
cli
push
inc
cmp
(bad)
(bad)
(bad)
(bad)
cmp
je
sbb
outs
add
lods
adc
ins
adc
mov
les
mov
(bad)
(bad)
jmp
dec
or
xchg
in
jp
push
xchg
pop
mov
(bad)
rcl
sub
rcl
push
jecxz
dec
(bad)
(bad)
(bad)
call
adc
mov
or
and
call
les
cmp
or
(bad)
mov
lods
dec
call
mov
ficomp
push
rcl
gs
(bad)
jmp
and
mov
push
into
(bad)
fimul
fucomp
cmp
call
sti
loop
pop
xor
(bad)
jl
push
int3
pop
jl
push
xchg
shr
fild
jl
mov
(bad)
(bad)
call
(bad)
jg
test
push
test
pop
aas
mov
add
jge
loopne
mov
(bad)
(bad)
call
hlt
push
jecxz
jnp
outs
jne
inc
add
int3
pop
push
cmps
sbb
scas
sbb
(bad)
call
call
xor
(bad)
(bad)
mov
sub
pop
dec
adc
mov
js
repz
sub
(bad)
(bad)
inc
ret
fstp
les
bound
sub
repz
sub
(bad)
(bad)
(bad)
aas
sbb
enter
cdq
addr16
and
mov
sbb
hlt
int3
add
jns
hlt
pop
(bad)
(bad)
(bad)
(bad)
jmp
xchg
inc
lods
fbstp
ret
sub
outs
or
sub
ret
fistp
gs
(bad)
(bad)
call
xor
lahf
xor
loopne
add
mov
scas
push
inc
rcr
sub
(bad)
(bad)
(bad)
call
repz
in
pop
sub
xchg
add
push
xchg
(bad)
lahf
inc
in
stc
(bad)
(bad)
mov
ror
pop
push
xor
xlat
dec
jne
in
loopne
ss
dec
pop
(bad)
(bad)
(bad)
(bad)
jg
or
clc
inc
in
cmp
mov
scas
pusha
fdiv
push
dec
xor
inc
jp
clc
test
shl
push
cld
mov
mov
pop
int3
fsubr
dec
xchg
(bad)
mov
adc
and
arpl
(bad)
(bad)
inc
je
call
pop
mov
out
enter
add
fs
cwde
mov
push
retf
(bad)
jmp
jmp
call
(bad)
push
daa
(bad)
and
bound
repnz
pop
and
add
call
cmp
xchg
cli
mov
jb
es
mov
adc
jno
stos
into
xor
pop
jmp
call
push
inc
idiv
je
inc
push
push
repz
gs
arpl
xchg
scas
xor
add
lds
pop
sub
call
std
mov
sbb
jl
out
cld
add
cmp
aaa
ret
xor
call
cld
jbe
(bad)
(bad)
(bad)
fild
push
clc
push
cli
(bad)
js
das
out
xchg
outs
ds
movs
in
add
dec
xchg
sub
jg
or
es
xchg
les
sbb
cld
fcmovb
loop
into
int3
xor
add
(bad)
call
pusha
call
jnp
js
(bad)
stc
in
aas
repz
mov
sbb
and
out
push
jmp
bound
inc
(bad)
(bad)
(bad)
inc
dec
xor
stc
or
(bad)
retf
inc
scas
popa
mov
ins
lea
mov
loopne
pop
shl
pop
lds
(bad)
(bad)
cmp
jae
mov
hlt
mov
jno
and
nop
shr
in
add
(bad)
(bad)
call
arpl
add
mov
sub
push
data16
movs
(bad)
(bad)
(bad)
dec
fidiv
addr16
mov
out
xchg
pop
lock
ret
(bad)
(bad)
(bad)
jmp
stos
rcl
sbb
or
xlat
or
pop
nop
mov
mov
stc
push
jb
(bad)
(bad)
(bad)
(bad)
push
mov
inc
pop
adc
out
xor
ins
adc
jae
pusha
cmp
adc
fcmovb
(bad)
(bad)
(bad)
jmp
call
pop
iret
loope
mov
cld
(bad)
fisub
jmp
jg
sub
rcl
xchg
xor
aam
xchg
out
pop
cwde
mov
enter
aam
cld
mov
daa
mov
movs
icebp
add
repz
(bad)
test
std
inc
mov
pop
jl
(bad)
(bad)
push
xor
into
adc
or
std
mov
icebp
(bad)
push
and
clc
inc
lea
(bad)
dec
dec
push
push
pop
in
jne
xor
xacquire
push
push
mov
(bad)
(bad)
jmp
xchg
sti
lahf
add
inc
popf
inc
int
mov
(bad)
pop
stos
xor
cmp
or
lock
(bad)
call
dec
dec
(bad)
les
scas
inc
in
in
fadd
sbb
(bad)
call
lods
mov
ss
sahf
test
and
xchg
jge
mov
push
xchg
mov
(bad)
clc
ret
add
mov
popa
mov
pop
mov
mov
mov
xchg
push
sub
(bad)
shl
xchg
sar
fisub
pop
lock
inc
dec
xor
cdq
lahf
mov
lods
cmps
out
fild
mov
loopne
in
mov
repz
(bad)
(bad)
fmul
xchg
imul
movs
adc
adc
repnz
inc
jl
(bad)
out
clc
mov
inc
bound
mov
xor
mov
fsub
(bad)
(bad)
(bad)
call
pop
push
sar
addr16
test
mov
xchg
imul
sub
pop
test
fild
std
dec
mov
cli
mov
std
mov
sbb
nop
sub
cld
jmp
mov
leave
out
sub
out
aad
(bad)
mov
(bad)
inc
inc
imul
stc
sub
cwde
jb
inc
cmp
jg
jnp
clc
(bad)
(bad)
(bad)
call
ret
cmpps
(bad)
pop
mov
jbe
xchg
jg
js
ja
xchg
mov
pop
dec
out
dec
mov
inc
jbe
mov
sahf
test
inc
mov
adc
div
stos
out
pop
(bad)
(bad)
inc
adc
out
test
or
(bad)
cdq
sahf
pop
idiv
push
pop
jnp
(bad)
(bad)
(bad)
call
sbb
push
jb
shr
mov
or
mov
jae
(bad)
sbb
dec
lods
xchg
mov
scas
scas
out
call
jecxz
sbb
test
pop
sub
bound
js
(bad)
(bad)
(bad)
cmp
mov
mov
and
leave
xchg
fsubr
sub
adc
push
adc
(bad)
mov
scas
adc
push
mov
sub
pop
mov
jge
mov
dec
xor
fprem
mov
xor
(bad)
(bad)
dec
pop
pop
out
rcl
cmp
adc
daa
cmp
loope
shl
loope
(bad)
jg
(bad)
in
jle
pop
ror
dec
mov
jl
lds
nop
jmp
out
pop
(bad)
(bad)
(bad)
dec
fbld
cmp
sbb
push
rcr
sbb
rcr
xchg
xor
(bad)
(bad)
(bad)
inc
lahf
std
xchg
xchg
add
test
jno
sbb
inc
mov
mov
inc
(bad)
(bad)
(bad)
dec
fwait
jne
shl
dec
xor
sbb
and
aad
jnp
imul
lock
out
retf
xchg
imul
sti
(bad)
(bad)
(bad)
call
xchg
xchg
xor
jmp
ss
in
ret
mov
lds
pop
mov
cld
(bad)
(bad)
dec
adc
aaa
jnp
fld
adc
leave
mov
shl
cmp
xor
(bad)
leave
int3
add
(bad)
mov
inc
jo
clc
cwde
hlt
popa
cmp
(bad)
cld
add
pop
jnp
(bad)
mov
mov
push
popf
xor
pusha
xchg
and
cld
jp
sub
(bad)
(bad)
(bad)
inc
inc
cmps
scas
cmps
prefetch
arpl
pop
jmp
push
mov
mov
mov
(bad)
fcmovb
in
(bad)
(bad)
dec
lods
mov
fwait
popa
sub
sub
mov
mov
xor
enter
(bad)
(bad)
(bad)
jmp
leave
mov
xor
add
adc
xor
enter
add
stos
push
fwait
call
pop
cmp
(bad)
cli
adc
or
mov
shr
sbb
(bad)
dec
out
arpl
sub
inc
or
jge
pop
(bad)
inc
xchg
in
inc
in
in
data16
sbb
es
in
movs
sti
pop
push
(bad)
(bad)
(bad)
sti
int
call
xor
or
dec
stos
xchg
ins
dec
or
hlt
dec
call
jmp
sub
and
movs
jae
cli
adc
push
jmp
push
(bad)
(bad)
(bad)
push
push
or
dec
ror
jl
cmp
push
dec
icebp
call
scas
and
(bad)
(bad)
(bad)
jmp
dec
cmp
iret
pop
dec
fisubr
adc
imul
sub
lods
dec
repnz
in
pop
popa
(bad)
mov
test
xchg
mov
out
xchg
ret
xor
cs
pop
enter
xchg
aam
dec
push
and
push
fild
and
and
(bad)
jg
pop
inc
in
div
dec
pusha
pcmpeqd
loop
xchg
jo
xor
mov
leave
pushf
(bad)
push
les
cmp
sub
cmps
(bad)
cmc
sbb
push
movs
pop
dec
aaa
clc
(bad)
(bad)
(bad)
call
cmp
xchg
cs
call
ja
jg
mov
mov
adc
(bad)
inc
push
pushf
push
das
dec
pop
inc
jmp
mov
loope
movs
xchg
push
leave
and
and
(bad)
(bad)
jmp
sbb
fcom
mov
sub
lods
dec
xchg
and
pop
(bad)
(bad)
(bad)
jmp
outs
(bad)
lahf
xchg
ins
leave
add
xchg
dec
mov
(bad)
int3
test
add
out
ss
aad
(bad)
(bad)
jmp
adc
and
mov
or
jns
popf
mov
(bad)
jmp
mov
mov
dec
mov
scas
shl
jmp
adc
push
mov
out
(bad)
pushf
mov
and
push
mov
into
movs
les
sbb
je
repnz
(bad)
fcomip
mov
stos
jnp
xor
shl
push
jo
ss
jp
(bad)
(bad)
(bad)
fild
call
sahf
add
pop
call
jne
adc
rol
(bad)
(bad)
(bad)
call
mov
iret
pushf
cmp
sub
inc
mov
mov
push
xchg
movs
aad
(bad)
(bad)
(bad)
inc
js
sub
xchg
call
je
ins
mov
rol
bnd
cdq
dec
(bad)
(bad)
out
cli
sti
mov
pusha
cmp
inc
mov
jne
jp
lods
cmp
(bad)
cmp
dec
scas
add
fwait
test
pop
mov
mov
mov
(bad)
(bad)
(bad)
mov
jecxz
sti
and
adc
xchg
aam
aam
mov
push
jne
or
push
(bad)
dec
mov
aaa
sub
cli
xchg
ficom
(bad)
pop
mov
sub
inc
leave
sar
xor
icebp
xchg
sbb
in
rcl
mov
outs
mov
or
(bad)
dec
outs
fcomp
xor
pop
sbb
int
jp
nop
(bad)
(bad)
(bad)
call
adc
xchg
inc
cmp
adc
or
mov
bound
pop
popf
inc
lock
(bad)
(bad)
dec
cld
mov
jmp
out
mov
lods
sbb
cs
js
scas
and
hlt
dec
es
cmp
mov
jle
lds
mov
daa
sbb
ss
(bad)
(bad)
call
add
adc
push
and
pop
sbb
add
int
jbe
inc
(bad)
(bad)
jmp
cld
push
mov
arpl
(bad)
mov
xchg
and
(bad)
call
pop
call
add
mov
cmps
xchg
fbstp
add
repz
fmul
(bad)
(bad)
fisub
sbb
dec
data16
mov
mov
fld
test
cmp
dec
lahf
aas
repz
adc
xor
out
and
jnp
cmp
ss
ins
aaa
ins
call
lea
sub
cmp
outs
adc
(bad)
mov
push
fs
push
ret
cli
cmp
or
mov
(bad)
pop
(bad)
(bad)
(bad)
dec
imul
dec
jmp
lea
test
vcvtsi2sd
retf
push
(bad)
(bad)
(bad)
inc
daa
or
adc
xchg
js
scas
popa
icebp
sbb
push
int
xor
sbb
pusha
xchg
add
call
pop
mov
adc
xor
adc
cmp
outs
sub
jge
fcom
(bad)
(bad)
(bad)
call
idiv
push
add
sbb
test
pop
add
push
jb
mov
(bad)
(bad)
inc
inc
cdq
add
mov
mov
call
stc
jmp
add
cwde
lods
lods
sub
lgs
fcomp
inc
and
(bad)
(bad)
call
mov
ss
cdq
mov
sub
inc
mov
(bad)
repnz
pushf
or
push
std
(bad)
(bad)
jmp
xchg
outs
(bad)
jmp
xchg
sub
jg
push
sbb
test
popf
(bad)
sti
lock
(bad)
(bad)
mov
mov
aaa
test
(bad)
cdq
mov
ret
and
hlt
scas
fwait
in
(bad)
(bad)
jmp
xor
push
sbb
inc
push
push
enter
shl
(bad)
mov
in
jmp
or
push
cmps
pop
and
push
push
adc
(bad)
(bad)
inc
arpl
inc
jp
sar
daa
mov
push
xchg
pop
mov
jmp
mov
inc
das
call
jle
mov
loopne
xchg
mov
push
add
(bad)
dec
cmc
loopne
cwde
out
mov
push
icebp
mov
fsub
xchg
jb
inc
dec
push
inc
cdq
cmp
xor
or
jmp
sub
shl
mov
fidivr
mov
fs
(bad)
inc
mov
or
mov
dec
ret
js
popf
inc
jae
inc
xor
(bad)
(bad)
call
xchg
mov
mov
ss
sbb
out
and
mov
pushf
push
push
lods
sahf
pushf
(bad)
(bad)
(bad)
jg
dec
daa
loop
or
mov
mov
fisttp
pop
jmp
jo
leave
arpl
(bad)
dec
cmp
cs
cmp
push
(bad)
test
push
push
popa
(bad)
(bad)
inc
pusha
mov
sbb
mov
sahf
bsf
mov
xor
aas
mov
mov
mov
fwait
les
fist
and
shl
jno
xor
adc
fsubr
fbld
mov
(bad)
(bad)
(bad)
jmp
pop
(bad)
or
inc
jle
add
imul
cmc
aas
mov
loopne
mov
or
push
(bad)
mov
xchg
hlt
cmp
sub
xchg
or
(bad)
(bad)
(bad)
inc
xor
sbb
jl
xchg
repz
adc
add
(bad)
(bad)
inc
sbb
add
mov
cmc
pop
fs
loope
call
(bad)
mov
sbb
call
stos
test
in
out
loop
stc
stos
mov
dec
scas
clc
(bad)
call
fist
es
pop
cmp
push
popf
mov
push
mov
btc
add
cmp
movs
adc
(bad)
(bad)
mov
ret
shr
adc
xchg
xor
inc
ins
shl
pop
lods
jp
jmp
fstp
push
shl
add
jne
push
push
cmp
and
cdq
cs
aaa
idiv
(bad)
inc
rep
pop
xor
jp
imul
mov
(bad)
push
jg
js
test
(bad)
(bad)
(bad)
push
es
inc
repnz
dec
pop
cmps
mov
jne
rol
inc
shl
and
and
dec
jae
test
pop
jmp
adc
mov
dec
pop
fnstcw
fmul
jns
dec
retf
xor
js
inc
pop
push
ss
bound
lea
mov
call
scas
push
inc
inc
shl
stos
clc
gs
out
shl
pop
xchg
inc
xchg
jo
stos
pop
dec
cmp
adc
push
jmp
outs
pop
sbb
call
inc
and
xchg
cmp
inc
inc
pusha
nop
pusha
(bad)
(bad)
(bad)
jg
sbb
pop
cmp
ja
(bad)
pop
sbb
xlat
scas
push
inc
mov
adc
fmul
dec
add
add
mov
jbe
aaa
in
jmp
cmp
(bad)
(bad)
push
inc
dec
or
mov
in
sbb
pop
lock
sti
or
aam
(bad)
(bad)
jmp
inc
push
adc
sub
lock
cmp
repnz
pop
mov
cmp
das
arpl
xlat
or
xchg
aas
xor
icebp
hlt
mov
xchg
sahf
shr
(bad)
(bad)
(bad)
inc
js
cld
and
int3
mov
sub
mov
in
sub
cmp
inc
(bad)
fcomip
push
adc
in
mov
clc
push
das
(bad)
xchg
movs
cdq
mov
out
dec
cwde
(bad)
(bad)
(bad)
push
xlat
and
(bad)
push
iret
ins
mov
(bad)
jne
or
(bad)
pop
jnp
add
call
outs
dec
pop
js
jmp
or
xchg
fadd
xchg
(bad)
(bad)
inc
and
js
sub
pushf
test
addr16
dec
jp
out
xchg
(bad)
(bad)
(bad)
cmp
outs
mov
and
sbb
mov
xchg
loope
jo
cmp
scas
add
(bad)
(bad)
(bad)
inc
shr
push
jnp
push
lds
(bad)
loop
pop
sbb
xchg
dec
xchg
xchg
cdq
(bad)
lahf
or
movs
std
jb
daa
cmp
xchg
pop
sbb
mov
cli
mov
mov
(bad)
(bad)
call
inc
clc
out
jmp
nop
cdq
stc
imul
loopne
inc
js
(bad)
(bad)
add
(bad)
(bad)
(bad)
cli
pop
xor
and
xchg
(bad)
movs
shl
pop
add
loopne
imul
dec
int3
(bad)
(bad)
(bad)
(bad)
out
mov
(bad)
cmp
in
xor
scas
fsub
icebp
(bad)
and
xor
mov
mov
(bad)
(bad)
(bad)
cmp
int
das
adc
fwait
ins
jnp
retf
inc
sbb
mov
adc
xchg
xchg
(bad)
call
movs
int
cmc
or
mov
movs
and
mov
jle
out
popf
ret
imul
addr16
test
inc
lea
(bad)
xchg
ins
and
xchg
jbe
mov
fstp
jp
mov
sahf
retf
or
push
pop
add
mov
sar
(bad)
(bad)
mov
mov
jl
repnz
jbe
push
adc
mov
sub
icebp
call
lods
add
scas
mov
or
outs
loopne
enter
pushf
push
fmul
inc
mov
and
scas
ja
ret
sbb
ret
xchg
sbb
jg
aam
popf
push
pop
out
add
test
cmp
pusha
xchg
pop
mov
out
sbb
add
xchg
(bad)
(bad)
stos
dec
inc
loopne
stos
ret
(bad)
dec
pushf
and
mov
inc
push
fistp
(bad)
(bad)
mov
adc
sub
sbb
xor
cmc
push
cmp
(bad)
fst
lods
std
movs
pop
lock
(bad)
jg
cld
outs
dec
js
pop
fsubrp
inc
cmp
cmps
adc
enter
(bad)
(bad)
(bad)
mov
cmp
cs
(bad)
push
push
jns
jb
jnp
jle
sbb
in
jbe
movs
dec
cld
jmp
pushf
(bad)
(bad)
in
scas
push
repnz
or
(bad)
(bad)
jg
sbb
daa
nop
popa
mov
sahf
xor
adc
daa
pop
mov
(bad)
(bad)
fistp
xchg
xor
leave
js
arpl
xchg
mov
rcl
sub
inc
pop
pop
daa
(bad)
dec
outs
les
inc
and
ins
jle
clc
pop
cld
or
mov
out
(bad)
(bad)
(bad)
jmp
js
arpl
test
mov
sbb
sub
cli
(bad)
dec
mov
mov
mov
ins
cmp
ja
rcr
cmp
push
stos
aam
call
fcom
nop
push
les
aaa
ss
js
(bad)
(bad)
(bad)
(bad)
rol
cmp
dec
xor
fucomp
test
xchg
cmps
xchg
pop
(bad)
(bad)
jmp
inc
popf
jo
in
sets
sub
aaa
pop
(bad)
addr16
scas
aad
leave
addr16
(bad)
(bad)
jmp
pop
push
push
mov
scas
adc
call
outs
lods
adc
(bad)
(bad)
inc
adc
ror
inc
stc
stos
inc
lock
mov
dec
leave
sub
outs
loop
(bad)
(bad)
(bad)
(bad)
sub
js
or
xor
adc
push
cs
inc
mov
mov
mov
sbb
or
push
dec
test
popf
xchg
xchg
dec
inc
bound
mov
cmp
(bad)
(bad)
dec
dec
xchg
test
clc
xchg
add
fs
fiadd
xor
mov
rcl
(bad)
push
addr16
mov
pop
xchg
test
pop
dec
jnp
push
dec
jecxz
(bad)
(bad)
(bad)
jmp
dec
add
pop
mov
dec
inc
dec
nop
or
push
test
sbb
inc
icebp
hlt
popf
jne
mov
cmp
add
sbb
in
push
push
(bad)
mov
mov
adc
stos
or
inc
jmp
jmp
adc
stos
mov
add
mov
jg
xchg
(bad)
(bad)
push
pop
in
mov
xchg
sbb
push
shr
leave
pop
adc
das
xor
pop
cmc
(bad)
jmp
mov
xchg
test
push
jbe
inc
rol
xchg
cmp
(bad)
(bad)
(bad)
push
dec
dec
jecxz
ins
(bad)
idiv
(bad)
loope
imul
mov
or
(bad)
(bad)
(bad)
call
pop
pop
mov
add
div
jbe
pusha
mov
pop
fisubr
sbb
addr16
push
(bad)
(bad)
(bad)
jmp
fistp
ret
mov
aas
ret
lea
pop
aam
inc
mul
test
aaa
push
stos
mov
in
dec
iret
aaa
std
(bad)
call
je
sar
add
and
data16
cmp
pop
or
(bad)
(bad)
jmp
cdq
imul
out
adc
jle
xchg
ins
xor
cmp
cmps
les
cli
(bad)
(bad)
push
add
std
retf
outs
jb
in
loop
arpl
fs
shl
aad
or
jmp
inc
in
sub
or
mov
aaa
ja
aam
pop
mul
mov
shl
(bad)
(bad)
(bad)
dec
mov
jnp
sti
sbb
jb
cli
outs
jl
xor
loop
adc
cmp
ja
out
aaa
std
jmp
inc
add
outs
int3
(bad)
push
mov
xor
fmul
(bad)
or
xchg
or
(bad)
(bad)
inc
push
jns
or
xlat
cmp
jl
mov
sub
and
shl
(bad)
(bad)
push
jmp
stos
rcl
mov
push
sub
xor
vmulps
out
add
fwait
aas
call
lock
imul
les
mov
iret
xor
(bad)
(bad)
(bad)
(bad)
clc
retf
mov
inc
rol
js
mov
xchg
imul
aas
(bad)
mov
out
xor
fbld
repz
stc
pop
xor
cwde
adc
(bad)
jmp
xchg
cmp
xchg
inc
nop
in
gs
pop
xchg
es
cmp
les
repnz
push
int
push
and
(bad)
(bad)
jmp
rcr
sbb
mov
and
loope
mov
add
pop
or
mov
(bad)
fcomip
jmp
fnsave
inc
add
push
or
lods
xchg
popf
inc
mov
rol
push
dec
sbb
scas
mov
(bad)
(bad)
(bad)
mov
adc
xlat
pop
jmp
and
addr16
out
xchg
pop
xor
jle
(bad)
mov
mov
(bad)
loop
popf
in
inc
inc
(bad)
cmp
call
cmp
(bad)
push
pop
push
xchg
out
push
aam
out
icebp
mov
cmp
mov
push
addr16
(bad)
(bad)
(bad)
mov
scas
jne
sbb
jb
gs
sub
xlat
cmps
add
xor
push
(bad)
jmp
sti
jnp
stos
pop
adc
clc
rcr
dec
sahf
push
outs
cmp
jo
int
(bad)
(bad)
dec
push
les
or
cmp
leave
mov
inc
out
mov
push
test
add
cwde
les
jg
outs
pusha
inc
add
(bad)
(bad)
push
push
sbb
movs
jmp
or
sbb
nop
xchg
cmp
xor
(bad)
jmp
in
pop
js
xor
jnp
sahf
retf
mov
loopne
jmp
fwait
mul
cs
or
adc
(bad)
(bad)
(bad)
push
pop
mov
mov
cmp
cmps
push
jbe
aas
sub
fimul
(bad)
vpcmpgtb
(bad)
cli
xor
pusha
fld
mov
jmp
call
(bad)
call
in
ror
fcomp
jmp
lods
or
xchg
imul
clc
add
(bad)
(bad)
(bad)
jmp
into
or
daa
fnstsw
stos
and
push
jb
push
out
movs
arpl
in
(bad)
(bad)
mov
cmp
call
fwait
add
lea
mov
addr16
or
push
pop
cld
gs
and
sbb
mov
cmps
cmps
or
in
xchg
pop
cmc
sbb
(bad)
jmp
push
dec
push
push
push
and
inc
ss
cmc
inc
and
(bad)
(bad)
call
aam
outs
aad
push
add
sar
adc
cmps
and
ja
hlt
call
test
ss
adc
call
sub
add
(bad)
(bad)
push
add
enter
mov
in
stc
sbb
push
fild
dec
push
(bad)
(bad)
(bad)
jmp
or
not
int
mov
repz
out
fwait
add
(bad)
(bad)
in
xchg
pop
shl
xchg
repnz
and
mov
cmp
clc
(bad)
popa
xor
aad
pop
add
and
(bad)
push
add
and
icebp
jg
push
xlat
in
fisubr
je
ret
(bad)
(bad)
(bad)
call
dec
xor
pop
movs
or
scas
push
sub
dec
fwait
xchg
cmp
aaa
mov
cmp
pop
(bad)
(bad)
(bad)
(bad)
dec
jecxz
xchg
adc
sbb
sub
in
addr16
les
movs
inc
cld
pop
xchg
xor
scas
xchg
sti
push
sbb
(bad)
(bad)
call
pop
std
imul
bound
(bad)
jo
jge
mov
in
clc
cmp
(bad)
(bad)
(bad)
call
movs
sbb
sar
dec
sbb
test
inc
push
push
mov
xlat
sbb
and
mov
std
lock
xchg
ret
push
sub
(bad)
(bad)
call
jbe
pop
xchg
or
mov
xor
shl
ins
and
sar
add
push
pop
add
(bad)
(bad)
jns
jno
aam
lods
push
in
inc
sub
es
sub
bnd
(bad)
jmp
mov
cmp
sub
in
adc
add
(bad)
jp
movs
(bad)
(bad)
(bad)
(bad)
jmp
aaa
or
test
xor
iret
mov
mov
rcl
xchg
daa
lods
cmp
(bad)
fsubr
sbb
in
jl
jmp
dec
pusha
jg
or
cmp
adc
arpl
sti
mov
adc
(bad)
mov
(bad)
mov
test
retf
pop
lds
test
retf
mov
cld
inc
out
stos
xor
sub
aas
jge
add
mov
pop
mov
(bad)
(bad)
(bad)
jg
fdivr
repz
push
jnp
push
call
push
test
(bad)
(bad)
(bad)
push
xchg
(bad)
jmp
mov
lea
inc
inc
je
test
mov
and
mov
mov
dec
fimul
pushf
sahf
or
pop
int
xor
and
cmc
mov
mov
test
(bad)
(bad)
(bad)
call
pop
and
xchg
pop
scas
sahf
push
adc
pop
nop
push
xchg
popf
aad
sub
scas
jecxz
(bad)
jmp
dec
push
and
test
pop
mov
lods
lock
xchg
sbb
inc
dec
and
lahf
push
xor
and
not
cmp
push
lods
or
(bad)
(bad)
(bad)
out
jp
pop
cmp
jmp
mov
mov
mov
jecxz
repz
addr16
(bad)
(bad)
(bad)
jmp
lods
popa
jp
(bad)
pop
push
pop
cli
xlat
lahf
mov
sub
addr16
push
aad
mov
mov
cli
(bad)
(bad)
push
std
sar
inc
pop
(bad)
xchg
fidivr
jmp
fist
std
jmp
in
(bad)
ds
inc
movs
test
xchg
add
xchg
(bad)
(bad)
(bad)
mov
cwde
push
mov
das
in
sub
pop
jns
scas
movs
sti
xor
and
(bad)
(bad)
(bad)
(bad)
mov
enter
xor
xchg
or
scas
xor
jmp
pop
xchg
test
mov
test
cmp
mov
xchg
pop
rol
push
push
(bad)
(bad)
(bad)
jmp
mov
or
or
retf
and
test
sub
(bad)
(bad)
(bad)
call
popf
fistp
aas
cmc
scas
jg
adc
outs
lods
cmp
jge
cmps
fcmovb
idiv
(bad)
(bad)
call
push
push
shl
or
jge
and
mov
idiv
pop
sbb
pop
lods
dec
(bad)
(bad)
(bad)
dec
out
xor
dec
imul
sub
lea
mov
bound
jmp
or
pop
push
gs
test
push
sbb
clc
scas
sub
hlt
ret
jge
(bad)
push
mov
popf
sbb
xchg
aad
inc
das
ret
sub
push
mov
jg
and
and
or
dec
fiadd
or
(bad)
(bad)
out
pop
jmp
mov
retf
js
add
pop
cmp
(bad)
inc
addr16
icebp
mov
sar
leave
cld
fnstenv
inc
xchg
sub
(bad)
push
cmp
dec
je
xchg
movs
xchg
add
cmps
cld
xchg
push
lea
into
int3
js
push
(bad)
jg
jmp
cwde
adc
aas
mov
and
mov
pop
ret
dec
xor
push
(bad)
(bad)
(bad)
jmp
ror
cld
fs
loop
mov
add
pushf
pop
inc
stos
jb
pop
mov
(bad)
call
int
mov
mov
and
xchg
mov
stos
cmp
mov
add
(bad)
(bad)
(bad)
dec
retf
sbb
jnp
pop
repz
fist
sbb
fbld
daa
jbe
dec
aaa
scas
jmp
xor
nop
aas
pop
fild
jae
push
repz
inc
(bad)
(bad)
cmp
loop
sub
(bad)
adc
mov
push
xor
mov
in
xor
sub
dec
or
leave
mov
aaa
adc
jmp
hlt
mov
mov
fild
sti
scas
inc
dec
mov
(bad)
(bad)
inc
sbb
adc
mov
sbb
adc
adc
dec
pop
dec
(bad)
jmp
(bad)
in
mov
pop
ret
call
mov
shr
jg
or
xchg
fisttp
mov
and
mov
call
loope
jecxz
(bad)
ins
leave
fistp
mov
repnz
push
sbb
int3
cld
std
icebp
and
outs
shr
das
or
lods
mov
jmp
imul
or
ins
adc
sub
and
or
stos
idiv
jne
inc
cs
out
sbb
jb
ss
lods
cmp
lea
sub
cmp
loop
pop
cmp
add
das
pop
sub
xor
adc
mov
(bad)
(bad)
inc
push
sub
and
mov
jb
adc
inc
or
arpl
call
lock
jp
ret
movs
jbe
in
xstore-rng
cmps
add
push
call
cld
push
movs
sbb
out
mov
idiv
test
inc
mov
ins
cdq
mov
js
(bad)
inc
stos
xchg
rcl
in
push
xchg
ret
mov
repz
mov
outs
mov
xchg
lods
pusha
cli
sbb
(bad)
(bad)
jmp
sub
jb
add
sahf
dec
xor
add
mov
cmp
dec
(bad)
dec
jmp
cmp
inc
xchg
sahf
and
pop
fldenv
mov
(bad)
(bad)
jmp
aam
adc
cmp
jnp
add
jecxz
or
icebp
(bad)
(bad)
(bad)
call
gs
and
outs
sub
xor
loopne
mov
mov
std
popf
arpl
and
jb
mov
hlt
rcr
or
(bad)
(bad)
call
fcomp
and
cmp
sub
clc
mov
xor
xor
cmp
(bad)
(bad)
(bad)
dec
jmp
jo
xor
call
in
xor
das
mov
dec
and
cmc
call
repnz
cdq
mov
add
push
sub
xor
sbb
(bad)
(bad)
(bad)
jmp
data16
js
dec
cmp
or
stos
fnstenv
ins
adc
xchg
(bad)
(bad)
(bad)
push
xor
rcl
xor
mov
jmp
scas
jle
mov
mov
mov
push
push
gs
xchg
outs
les
inc
inc
pop
jmp
sub
mov
add
mov
inc
jnp
mov
pop
adc
and
mov
pop
xchg
mov
adc
or
or
(bad)
(bad)
(bad)
call
imul
retf
ins
popa
aas
xlat
inc
(bad)
stos
sbb
mul
enter
mov
repz
ja
(bad)
(bad)
(bad)
jg
out
leave
mov
ins
push
cmp
mov
jae
sahf
rcl
adc
adc
mov
lea
(bad)
(bad)
push
add
jg
test
jg
mov
enter
mov
out
or
(bad)
adc
xchg
jmp
fdivr
adc
inc
repnz
xchg
sar
aas
or
test
in
int
sub
(bad)
fcomip
mov
shl
clc
sub
dec
add
popa
or
push
dec
or
(bad)
(bad)
dec
sbb
xchg
push
push
jl
test
fadd
fiadd
fadd
push
cmps
xchg
inc
retf
outs
(bad)
jmp
loopne
lds
mov
dec
jmp
push
mov
(bad)
ror
(bad)
(bad)
(bad)
call
jne
adc
test
inc
xor
inc
daa
xor
adc
(bad)
(bad)
dec
xchg
aas
pop
cs
stos
mov
std
xor
ror
lods
dec
out
std
imul
(bad)
dec
lock
mov
add
dec
jnp
jge
test
rcl
(bad)
call
cld
adc
(bad)
cmps
js
test
ja
sar
fmul
repz
es
stc
lahf
call
(bad)
(bad)
inc
(bad)
stos
pusha
or
sbb
pop
and
sbb
stos
(bad)
rcr
(bad)
(bad)
jg
movs
push
mov
push
in
jp
mov
(bad)
(bad)
imul
addr16
jle
(bad)
fldcw
(bad)
(bad)
(bad)
jmp
xor
fdiv
cdq
cmp
nop
jo
ds
jno
lods
scas
pop
movs
pop
or
adc
(bad)
jmp
ss
add
pop
lea
stc
sti
xchg
jg
call
das
outs
sahf
cs
les
shl
jnp
jo
and
xor
(bad)
jmp
shr
pop
sbb
jne
fmulp
(bad)
fidivr
mov
jne
(bad)
jmp
jne
mov
mov
xchg
repz
sub
mov
dec
push
stos
ficomp
sbb
jo
(bad)
(bad)
push
popa
mov
push
int
cld
arpl
xchg
(bad)
cld
sar
clc
cld
(bad)
(bad)
inc
(bad)
loop
add
inc
outs
mov
mov
adc
in
dec
mov
ficomp
push
or
pop
fidiv
xor
imul
call
jmp
das
into
outs
xor
inc
push
in
lods
(bad)
(bad)
(bad)
call
rol
retf
mov
das
jns
std
push
cs
sahf
pop
mov
mov
dec
pushf
dec
cmp
(bad)
(bad)
fdivr
inc
jbe
jg
or
dec
je
sub
inc
push
loopne
dec
pop
and
(bad)
(bad)
(bad)
push
push
jmp
mov
movs
mov
repnz
aad
in
pop
into
mov
stos
pop
aam
(bad)
(bad)
jmp
ficomp
add
(bad)
retf
in
int
les
aam
fs
or
(bad)
(bad)
inc
pop
mov
adc
pop
xor
pop
test
cmps
outs
leave
mov
and
or
(bad)
(bad)
call
cmp
cmp
shl
lea
fcomip
jmp
or
sahf
mov
ja
sbb
or
mov
hlt
ss
(bad)
(bad)
(bad)
jmp
aad
test
adc
cwde
lea
clc
jo
fcom
mov
fwait
push
mov
cmp
push
std
jmp
pushf
daa
js
mov
sub
dec
mov
jno
lahf
in
movs
movs
sbb
mov
cmc
or
ja
in
daa
push
xchg
pop
push
adc
nop
out
shl
mov
(bad)
push
add
mov
push
xchg
dec
dec
das
cmps
jns
push
mov
lahf
pop
cmp
adc
jmp
inc
pop
adc
dec
ret
or
xchg
jge
adc
xchg
ja
(bad)
jle
xor
inc
mov
in
and
ss
push
sbb
je
mov
sub
cli
je
pop
push
inc
outs
push
pop
sub
mov
es
inc
into
rcl
add
idiv
jecxz
pop
mov
je
pop
hlt
sti
popa
aad
dec
(bad)
(bad)
(bad)
jmp
das
pop
nop
push
push
stos
popf
xchg
inc
dec
inc
icebp
mov
xor
pusha
or
repnz
(bad)
(bad)
(bad)
jnp
or
imul
mov
stc
test
mov
jl
aaa
mov
xchg
out
(bad)
(bad)
jg
xor
or
and
addr16
add
outs
loopne
out
jae
mul
pop
aas
(bad)
(bad)
(bad)
jmp
xor
cmps
xchg
adc
mov
and
mov
ins
fidivr
(bad)
(bad)
(bad)
add
cmp
in
sub
cld
repnz
add
jmp
hlt
cmp
ret
call
scas
or
jae
(bad)
lock
sbb
(bad)
test
xor
mov
test
ror
dec
push
dec
push
mov
(bad)
call
ret
je
in
aam
dec
lock
test
test
mov
cs
jnp
fucomip
les
sub
dec
lahf
xchg
mov
fwait
mov
add
and
std
xchg
lds
pop
(bad)
(bad)
(bad)
dec
jbe
adc
mov
test
jns
xor
pop
push
test
xchg
jmp
(bad)
(bad)
(bad)
call
scas
pop
cld
aaa
das
or
xchg
cld
adc
add
push
add
jns
mov
sbb
xor
mov
push
cdq
clc
jmp
dec
fsubr
mov
(bad)
(bad)
(bad)
jmp
jle
mov
xchg
mov
aam
push
cmps
icebp
xchg
dec
sbb
add
(bad)
(bad)
(bad)
(bad)
mov
(bad)
pop
sbb
scas
cs
(bad)
std
pop
clc
xor
push
pop
jae
cdq
(bad)
dec
movs
(bad)
(bad)
(bad)
jmp
cdq
pop
jg
xchg
pop
xchg
add
mov
retf
add
mov
sti
scas
fwait
jge
popa
stos
dec
(bad)
(bad)
jg
jl
jl
sbb
fucomp
cmp
pop
popa
push
pushf
in
sbb
cs
cli
dec
cdq
adc
icebp
jle
retf
(bad)
fsubr
popa
out
cs
fmul
add
(bad)
dec
xchg
adc
out
into
aam
pop
jge
div
fld
mov
int3
(bad)
(bad)
(bad)
push
mov
sbb
les
or
xlat
mov
jmp
out
mov
mov
(bad)
(bad)
dec
cmp
hlt
(bad)
inc
sub
sub
in
dec
loopne
add
or
mov
inc
pop
test
mov
out
add
idiv
push
fsub
pop
rcr
lods
sar
(bad)
(bad)
call
and
loop
and
xor
les
in
dec
icebp
dec
jmp
mov
adc
mov
loope
(bad)
(bad)
(bad)
ficom
cmp
sub
rcr
shl
lods
xor
lock
(bad)
(bad)
push
fbstp
cmc
adc
ret
add
mov
(bad)
mov
cmp
dec
std
(bad)
(bad)
(bad)
in
push
into
pop
shr
outs
lods
jmp
cmp
mov
jbe
and
in
(bad)
(bad)
push
out
cdq
mov
cmp
xor
scas
ficom
inc
and
cmp
(bad)
(bad)
jmp
or
ret
mov
loopne
popf
addr16
dec
jmp
sub
(bad)
jb
mov
add
into
ss
adc
fimul
adc
popa
mov
neg
retf
jg
mov
mov
push
ss
out
sub
outs
clc
stc
adc
stos
lock
ds
ja
stos
(bad)
(bad)
(bad)
push
dec
or
mov
ins
aam
pop
outs
scas
gs
fs
pop
imul
fisttp
pop
dec
test
mov
fistp
cmps
shl
stos
push
add
dec
movs
hlt
mov
fucomip
xbegin
mov
xor
cli
call
dec
sbb
icebp
lahf
pop
xchg
(bad)
inc
out
repz
mov
cwde
leave
push
mov
mul
iret
sub
loop
(bad)
push
psrld
mov
cli
push
xchg
jp
in
imul
iret
ins
(bad)
(bad)
(bad)
mov
fwait
sbb
mov
mov
push
call
movs
cmp
jmp
(bad)
jg
jmp
aas
jg
popa
movs
mov
pushf
jmp
mov
sbb
and
(bad)
xchg
shl
adc
stos
stos
pop
mov
cmp
test
(bad)
(bad)
(bad)
push
std
push
fist
ins
pop
jge
adc
adc
sbb
jmp
sub
jle
jns
cmps
adc
or
ret
call
or
push
pop
dec
std
jo
push
scas
xchg
xchg
mov
int3
aas
ss
push
jmp
mov
(bad)
call
or
inc
out
inc
cmp
je
mov
dec
sahf
or
(bad)
(bad)
inc
mov
(bad)
(bad)
test
add
ins
mov
aad
fs
mov
fcomip
icebp
cmp
(bad)
inc
sub
movs
xchg
iret
sub
cs
xor
xchg
pop
repz
(bad)
(bad)
call
push
mov
and
push
js
mov
mov
(bad)
(bad)
(bad)
push
imul
mov
inc
cmps
jg
xor
cmp
cld
add
xchg
fldenv
fmul
mov
dec
std
pop
neg
mov
(bad)
mov
mov
xchg
or
lods
cdq
ins
sub
cmp
adc
and
push
(bad)
(bad)
jmp
pop
cld
xor
scas
mov
jecxz
and
jmp
ja
call
ins
cmp
pop
je
sub
outs
xchg
(bad)
cli
fld
and
cmc
fst
dec
loop
(bad)
std
xchg
pop
adc
(bad)
(bad)
jmp
inc
retf
pop
adc
stos
loope
xchg
mov
sbb
mov
(bad)
(bad)
(bad)
(bad)
out
mov
sub
mov
std
mov
movs
imul
lahf
sahf
lea
retf
cmc
lods
mov
sbb
dec
mov
das
call
movs
cmp
mov
arpl
xor
inc
popf
mov
cdq
adc
and
in
test
das
lock
sar
mov
leave
call
sti
fimul
arpl
loop
(bad)
call
inc
inc
sbb
push
icebp
fimul
inc
test
push
out
xor
inc
and
pusha
repz
adc
pop
cmp
push
or
add
xchg
pop
push
idiv
(bad)
jmp
addr16
mov
cmp
pop
xor
bound
ss
(bad)
out
inc
push
push
ret
bound
(bad)
movs
cmc
lock
push
cmc
jmp
and
dec
loop
int3
mov
test
jecxz
lods
pusha
add
mov
mov
lods
(bad)
(bad)
(bad)
push
or
cmc
lds
sbb
pop
sub
std
cli
mov
cmp
jne
shl
(bad)
(bad)
(bad)
in
sahf
mov
and
pop
es
adc
sub
neg
mov
lea
hlt
(bad)
(bad)
jg
idiv
call
mov
xor
fwait
jge
jns
mov
sti
shl
jle
sub
jg
(bad)
sti
cs
mov
pop
lahf
mov
inc
sub
fistp
jbe
shr
(bad)
(bad)
(bad)
call
sbb
push
pop
call
(bad)
out
adc
cli
loop
jb
adc
(bad)
jmp
fmulp
jecxz
cmp
test
pop
shl
push
jmp
push
push
popa
mov
inc
mov
jp
shl
mov
xor
scas
xchg
fiadd
xchg
inc
lahf
(bad)
cmp
or
lock
mov
addr16
ud0
aaa
cld
and
pop
adc
inc
shr
jbe
ret
push
fcomip
inc
cmp
fwait
sbb
cmps
xchg
pop
std
or
(bad)
dec
adc
dec
pop
mov
(bad)
adc
sub
mov
mov
(bad)
jmp
add
ja
dec
push
sbb
iret
cli
cmp
dec
out
or
sbb
jns
dec
sahf
bound
jns
int3
idiv
(bad)
(bad)
push
or
scas
mov
fstp
pop
fs
outs
cmp
and
jmp
leave
mov
test
dec
in
arpl
mov
(bad)
(bad)
(bad)
call
mov
rcr
in
bound
imul
mov
push
xlat
(bad)
(bad)
(bad)
call
mov
pop
repnz
into
and
and
sbb
add
xor
xor
(bad)
(bad)
(bad)
(bad)
jge
cmp
test
pop
jge
inc
sub
adc
cmp
mov
clc
sbb
or
(bad)
call
mov
adc
out
std
arpl
leave
cmps
dec
xlat
(bad)
(bad)
inc
jge
cld
aaa
sub
push
sahf
adc
xchg
gs
(bad)
retf
jecxz
dec
inc
or
push
and
aaa
pusha
repnz
fcom
xcrypt-cfb
cmps
and
ret
dec
setno
fdivr
xchg
inc
mov
movs
into
inc
mov
jne
mov
(bad)
push
shr
ss
push
enter
xor
stos
(bad)
(bad)
dec
mov
cli
movs
call
enter
add
add
(bad)
(bad)
(bad)
mov
inc
sub
outs
ja
xor
(bad)
pop
mov
add
ret
pop
lock
cli
jns
mov
add
and
sbb
mov
(bad)
(bad)
fcomip
fidivr
and
fcmovb
xor
inc
xchg
mov
push
jne
pop
fxch
xchg
test
or
repnz
scas
cli
pop
jne
ss
sahf
mov
mov
(bad)
(bad)
inc
retw
pop
mov
push
mov
cmps
data16
pop
scas
jecxz
add
adc
mov
cld
out
lahf
out
xchg
pushf
pop
jl
fld
pop
(bad)
(bad)
(bad)
dec
out
cmp
fbstp
and
addr16
(bad)
cmp
mov
dec
test
inc
(bad)
(bad)
(bad)
jmp
mov
sbb
xchg
ret
dec
and
pushf
pop
rcl
call
icebp
mov
loopne
xchg
call
xchg
sahf
retf
mov
jle
add
das
lahf
inc
adc
jmp
test
fiadd
adc
(bad)
(bad)
(bad)
push
lea
and
cmps
xchg
int3
pop
sub
call
mov
(bad)
call
and
mov
sub
loop
mov
(bad)
(bad)
(bad)
call
fcom
jmp
pop
push
psllq
cwde
sbb
inc
adc
aaa
push
mov
retf
(bad)
sahf
lods
repz
sbb
(bad)
call
std
pop
mov
cmps
(bad)
jb
fcomp
das
jae
mov
cmc
loop
sbb
ss
(bad)
aas
(bad)
pop
lock
fsubr
xor
and
mov
sbb
dec
push
jb
pop
cmps
shl
xor
dec
imul
pop
xchg
mov
jge
mov
(bad)
cli
(bad)
(bad)
(bad)
dec
stc
push
mov
rcl
mov
cdq
cmp
rol
pusha
pop
mov
jg
(bad)
(bad)
(bad)
call
dec
xor
mov
xchg
fcomi
cwde
sub
xor
paddusb
int3
scas
xchg
mov
(bad)
jmp
xchg
pop
or
repnz
clc
jmp
add
shl
cli
(bad)
pop
pop
out
sbb
and
sbb
inc
xor
popa
push
or
mov
inc
add
pop
aas
inc
aas
leave
movs
pop
pop
dec
push
(bad)
(bad)
push
or
mov
sbb
sbb
lds
sti
inc
cld
jg
gs
(bad)
(bad)
cmp
mov
jae
call
test
in
(bad)
cmp
leave
(bad)
outs
sbb
xchg
lahf
sti
lods
leave
hlt
(bad)
(bad)
cld
pop
seta
(bad)
(bad)
inc
mov
sbb
cmps
stc
ds
mov
mov
adc
mov
pop
jno
mov
add
outs
push
(bad)
dec
cmp
sbb
xchg
fs
fsubr
retf
imul
ins
outs
daa
add
(bad)
or
cld
call
lock
sbb
adc
imul
sub
addr16
cld
(bad)
inc
mov
inc
scas
fild
stos
xchg
sub
movs
add
xchg
stos
mov
jle
ror
lods
(bad)
and
(bad)
out
nop
lock
jb
and
fs
sub
mov
jg
jg
(bad)
jmp
push
outs
pushf
or
adc
fdivr
cmp
mov
int
adc
sub
adc
or
data16
(bad)
icebp
cs
fwait
test
(bad)
(bad)
dec
es
movs
push
pop
push
cmp
sub
retf
cmp
push
push
mov
fild
ss
test
push
mul
inc
or
nop
dec
test
int3
or
mov
(bad)
(bad)
call
fistp
push
mul
ja
push
leave
mov
cmp
ja
mov
push
cld
(bad)
(bad)
jmp
jg
mov
inc
lods
mov
xlat
jae
rcl
lods
pop
popf
or
ins
hlt
xchg
cmp
(bad)
(bad)
call
(bad)
fld
fmul
clc
fdivr
cmc
pop
fnstsw
jne
mov
dec
add
(bad)
(bad)
(bad)
stc
cmp
jmp
scas
jae
dec
retf
adc
push
xchg
aam
xchg
clc
(bad)
(bad)
(bad)
call
lahf
dec
or
pop
in
mov
add
sub
cmp
dec
out
cli
adc
sub
xchg
shl
js
stc
(bad)
xchg
(bad)
(bad)
(bad)
cmp
hlt
jmp
fnsave
stos
into
pop
out
sbb
cmp
aaa
(bad)
(bad)
(bad)
jmp
test
scas
ins
jns
dec
(bad)
cmp
jle
nop
cmps
and
scas
nop
mov
or
cwde
hlt
xchg
jmp
(bad)
(bad)
(bad)
in
or
(bad)
je
jb
ficom
adc
inc
(bad)
add
adc
(bad)
call
xor
add
xor
test
bound
jae
inc
sbb
repnz
cmp
ins
retf
adc
pop
retf
ins
retf
xor
stos
movs
loope
push
leave
xor
push
jmp
test
sar
mov
repz
call
je
pop
xor
lea
add
fadd
cmp
mov
enter
pop
cld
push
adc
add
test
nop
bound
cli
call
or
cmc
pop
pop
aas
repnz
adc
lahf
sbb
(bad)
(bad)
(bad)
inc
cs
mov
pushf
push
nop
xchg
mov
div
mov
jmp
icebp
dec
int3
adc
cmps
cmc
inc
ror
sbb
pop
and
pop
ins
xor
(bad)
(bad)
jmp
jnp
xor
cmove
sbb
mov
sti
mov
inc
rcl
mov
stos
xor
outs
mov
leave
adc
inc
mov
push
mov
les
test
in
pop
adc
mov
adc
and
outs
or
(bad)
(bad)
jmp
xor
cs
fs
imul
(bad)
add
sub
dec
push
add
cmc
das
clc
push
mov
addr16
adc
sbb
movs
sar
xlat
std
les
pusha
ret
ins
imul
push
add
lods
fist
adc
in
or
movs
(bad)
loopne
cmp
or
pop
lds
xor
cmp
inc
xor
shl
(bad)
pusha
mov
test
lods
rcr
push
je
mov
mov
cmps
daa
icebp
add
leave
js
adc
(bad)
xchg
push
add
adc
lea
or
mov
pop
push
aam
ins
popa
jmp
ss
mov
mov
loop
cld
(bad)
call
xchg
push
sub
out
jecxz
in
scas
outs
cwde
(bad)
into
sbb
(bad)
(bad)
push
xchg
jne
jno
jl
mov
push
arpl
inc
not
psrld
xchg
jnp
ud0
(bad)
jmp
add
(bad)
jb
mov
retf
xor
mov
popf
div
jno
into
cmp
and
cmc
in
sti
(bad)
push
(bad)
clc
mov
push
xchg
inc
pop
test
inc
aaa
push
mov
leave
idiv
sahf
mov
push
jo
inc
mov
sbb
std
mov
adc
scas
fadd
je
mov
fmul
cmp
xchg
or
jmp
and
and
sahf
pop
jle
stos
int
pop
(bad)
jp
dec
sub
les
(bad)
ds
outs
mov
mov
push
out
and
add
mov
aad
(bad)
lock
mov
test
into
mov
(bad)
mov
(bad)
pop
cmp
rcl
xor
jmp
xor
call
sbb
(bad)
(bad)
dec
mov
mov
mov
jae
add
repz
or
(bad)
(bad)
(bad)
call
fild
inc
sti
inc
outs
jo
shr
jp
jmp
or
inc
in
test
(bad)
(bad)
call
add
mov
mov
add
clc
arpl
jne
div
adc
mov
fdiv
cmp
xlat
daa
jns
retf
dec
outs
ja
out
outs
or
out
jge
(bad)
and
cmp
push
cmps
aad
pusha
scas
pop
or
ret
xchg
les
(bad)
(bad)
(bad)
sti
dec
fisub
mov
test
ret
test
mov
xchg
mov
out
xor
icebp
(bad)
mov
pand
dec
shl
lods
retf
dec
outs
or
out
call
(bad)
jmp
popa
add
(bad)
daa
fistp
rcr
daa
mov
jg
cli
inc
add
jns
test
and
fnstcw
or
push
(bad)
(bad)
jmp
mov
or
stos
bound
inc
sahf
inc
mov
adc
(bad)
inc
cmps
stos
pop
outs
lea
pop
xchg
ins
fild
xchg
mov
(bad)
call
repnz
xor
mov
leave
sub
nop
shl
pop
sti
(bad)
(bad)
(bad)
call
mov
adc
inc
mov
push
clc
adc
mov
ins
addr16
dec
popa
xor
lahf
jle
movs
out
dec
fild
loop
(bad)
(bad)
(bad)
(bad)
cmp
cmc
clc
sbb
pop
mov
xchg
inc
in
in
pushf
jnp
inc
cmp
cs
popf
es
jne
fwait
clc
enter
arpl
add
adc
pop
and
(bad)
(bad)
call
cmp
mov
nop
push
mov
pusha
das
dec
shl
jl
pusha
xlat
lds
xchg
xor
inc
sub
call
push
(bad)
daa
pop
pop
pop
shr
mov
push
jecxz
data16
aam
(bad)
xor
xchg
retf
mov
js
jg
push
or
xor
out
adc
push
jb
xchg
sub
xchg
mov
(bad)
(bad)
dec
or
out
(bad)
lods
and
test
add
retf
mov
jmp
push
ins
hlt
mov
(bad)
(bad)
call
mov
xor
mov
out
jecxz
je
push
pop
add
rcr
mov
xchg
(bad)
(bad)
(bad)
(bad)
jp
mov
lds
sub
add
jae
cdq
push
and
ror
mov
(bad)
(bad)
call
outs
xor
lahf
jecxz
or
add
ficomp
xor
ror
sub
pop
lahf
inc
dec
lock
(bad)
jmp
or
mov
mov
retf
sub
scas
fisttp
cmc
(bad)
call
adc
scas
(bad)
ins
fwait
adc
or
add
xor
out
xchg
(bad)
fisttp
cdq
mov
ss
jmp
push
cmp
rcr
(bad)
(bad)
(bad)
inc
lods
ds
lock
call
ss
or
sahf
mov
(bad)
mov
daa
ss
lds
(bad)
in
and
sub
mov
loope
push
movs
in
pop
lock
(bad)
call
outs
push
sub
dec
add
or
xor
lock
dec
ins
push
dec
iret
adc
(bad)
call
xchg
xor
popa
mov
nop
push
jb
jae
push
mov
cmp
dec
out
sbb
sub
fstp
mov
pop
inc
ds
cmp
fldenv
mov
dec
xchg
fs
adc
mov
jmp
jno
jg
sub
push
pop
push
add
(bad)
sub
(bad)
(bad)
(bad)
mov
rcl
pop
mov
inc
out
push
cdq
pusha
sbb
push
mov
jns
sub
dec
adc
ins
inc
(bad)
xlat
cmps
aad
test
fcos
ja
ret
inc
add
lds
inc
and
push
jge
inc
jno
into
add
or
(bad)
jmp
sbb
repz
pop
ds
xor
lea
push
adc
xor
call
clc
(bad)
retf
mov
rcl
xchg
loopne
ds
pop
or
cmc
pop
inc
std
fs
sub
outs
pop
cmp
push
sub
cdq
(bad)
call
cs
fidivr
inc
dec
pop
pop
and
outs
and
add
sub
dec
(bad)
call
rol
in
push
rol
sub
ss
(bad)
(bad)
jmp
cmp
ja
xor
sbb
repnz
(bad)
call
lds
and
dec
aad
sub
adc
jg
sub
ins
mov
mov
cmc
mov
or
mov
aaa
int3
fcom
inc
and
imul
lods
aad
dec
cmp
mov
outs
(bad)
(bad)
(bad)
dec
cmp
jge
(bad)
int3
fiadd
scas
sti
(bad)
or
dec
xor
imul
dec
movs
mov
call
mov
fdivp
xchg
fwait
loope
push
cmp
xlat
add
je
xchg
dec
inc
mov
retf
mov
(bad)
mov
out
sub
into
sbb
pop
jo
jnp
push
xor
dec
inc
clc
xor
repnz
xchg
div
add
(bad)
call
fcomi
mul
ins
jp
add
aaa
shr
popf
add
cmp
clc
dec
movs
call
mov
dec
fcom
repz
pusha
jl
(bad)
(bad)
(bad)
jge
dec
or
cmc
sbb
(bad)
xor
xor
jns
cs
mov
push
dec
arpl
pop
sub
fwait
int3
mov
adc
test
mov
add
cmc
fnstsw
gs
in
xchg
(bad)
(bad)
push
pop
mov
mov
pop
jbe
push
dec
inc
aas
retf
jmp
or
adc
icebp
adc
pop
in
adc
pop
and
inc
and
cmp
jmp
and
adc
dec
std
popa
inc
mov
jmp
loop
(bad)
iret
sbb
stos
je
cmp
sbb
push
inc
mov
add
stos
mov
iret
popf
iret
(bad)
cwde
mov
std
(bad)
call
fcmovne
mov
aas
push
shl
jno
pusha
xor
(bad)
jg
inc
mov
fnsave
shr
push
sbb
(bad)
(bad)
(bad)
jg
push
cmps
push
jle
(bad)
jge
shl
and
inc
inc
dec
or
cmp
cmp
(bad)
jmp
jno
and
movs
pop
lahf
in
dec
mov
stc
xchg
sub
pop
sbb
mov
add
fs
jns
fidiv
lahf
xor
rcr
push
(bad)
(bad)
(bad)
call
in
mov
les
std
xchg
push
cmp
xchg
push
pusha
pop
jns
dec
scas
ja
outs
pop
fcom
ss
(bad)
(bad)
dec
xchg
out
sbb
mov
fxch
jmp
sub
daa
retf
dec
xor
out
mov
add
fsub
add
pop
fsubr
xchg
mov
sbb
arpl
retf
dec
and
jb
pop
(bad)
(bad)
(bad)
dec
jb
fnstsw
adc
xor
mov
and
mov
pop
fstp
sbb
paddusb
sub
movaps
call
mov
call
rcl
mov
inc
loopne
in
adc
and
call
ja
test
xchg
sbb
sub
xchg
pop
arpl
(bad)
(bad)
(bad)
inc
pop
pop
inc
pop
cmp
hlt
les
sub
icebp
cdq
clc
sti
fwait
sbb
iret
xchg
(bad)
push
xchg
jae
rol
(bad)
dec
rol
out
mov
(bad)
(bad)
cli
mov
in
xchg
add
pop
add
or
cmps
into
jmp
inc
jbe
test
or
mov
sbb
jmp
loope
(bad)
(bad)
jmp
fdivr
dec
popa
push
loope
gs
pushf
mov
mov
and
or
(bad)
(bad)
inc
inc
mov
and
cmp
cli
xor
cs
popf
inc
dec
call
ror
js
push
out
arpl
xchg
div
nop
cli
inc
jg
(bad)
push
mov
mov
pop
mov
and
ret
(bad)
ins
fimul
xchg
dec
(bad)
sub
jp
inc
ins
sub
in
inc
jns
popf
loop
push
call
rcr
jge
and
aaa
pop
ja
pop
(bad)
dec
rdtsc
lock
cmp
stc
retf
push
das
pop
mov
(bad)
(bad)
(bad)
(bad)
sbb
repz
jo
or
and
cmp
and
fs
movs
jmp
bound
lds
pop
into
cmp
bnd
ret
mov
fs
in
test
pop
xchg
mov
lods
sbb
(bad)
call
lock
nop
xchg
in
les
pop
ret
fld
scas
sub
(bad)
push
and
popa
xchg
movs
ja
xor
mov
out
test
cmp
int3
(bad)
jne
sbb
push
mov
leave
ins
repnz
xor
cmp
sbb
xor
(bad)
(bad)
jmp
enter
sahf
push
inc
add
sub
adc
inc
cmp
das
int3
push
sbb
add
sub
adc
mov
adc
mov
call
(bad)
clc
add
inc
or
(bad)
test
push
mov
pop
imul
add
mov
icebp
pushf
pop
frstor
mov
idiv
(bad)
fisttp
hlt
sbb
les
icebp
rol
lods
lods
xor
sahf
pop
loop
(bad)
push
ret
aad
mov
or
jmp
ret
pop
sub
pop
push
jle
push
imul
sbb
sbb
stos
mov
aaa
cmp
xchg
inc
dec
(bad)
loope
or
or
int3
imul
(bad)
xchg
adc
loope
inc
es
call
jle
or
xchg
out
ret
cmc
dec
sub
xchg
mov
gs
out
(bad)
(bad)
jmp
sbb
not
hlt
(bad)
aas
mov
push
fcmovne
xor
push
lea
outs
ds
das
jmp
pop
outs
pop
lock
ret
push
push
loop
shr
aas
lea
inc
push
mov
gs
mov
push
in
es
xchg
inc
mov
shl
(bad)
fwait
out
xor
out
out
or
out
cli
(bad)
jg
xchg
fsub
cmps
not
(bad)
mov
xor
mov
dec
push
cmps
fwait
syscall
clc
das
sar
mov
out
fwait
js
xchg
and
cmps
mov
(bad)
(bad)
jmp
js
push
jnp
movs
mov
mov
sub
mov
push
call
cmp
(bad)
(bad)
inc
or
stc
ror
push
xchg
push
inc
aaa
jp
cmp
dec
ja
adc
jg
inc
add
mov
fstp
les
xchg
or
mov
ins
mov
(bad)
(bad)
push
dec
push
inc
cmp
fwait
(bad)
in
xor
sbb
cmc
call
hlt
push
pop
xor
xor
jmp
adc
fstp
jle
(bad)
(bad)
(bad)
call
pop
addr16
adc
mov
sub
jno
xor
inc
xchg
lahf
rol
ins
inc
call
cmp
jmp
jb
outs
test
jmp
out
(bad)
push
inc
mul
cdq
xor
fidivr
jmp
fs
cwde
stos
bsr
fs
and
jae
inc
xchg
inc
or
sub
mov
clc
cs
xlat
(bad)
(bad)
(bad)
dec
ss
ficomp
and
pop
add
or
sbb
sbb
test
inc
(bad)
push
pop
scas
sbb
cmps
mov
repnz
(bad)
sub
jl
ds
cmp
mov
(bad)
inc
sahf
ret
(bad)
dec
pop
mov
pop
(bad)
in
inc
fistp
and
sub
(bad)
call
(bad)
nop
cmp
and
repnz
aam
das
into
ret
pop
and
mov
cs
out
xchg
adc
xlat
(bad)
jg
cmp
lock
out
push
cld
aaa
or
push
es
test
(bad)
(bad)
push
lock
push
sub
in
mov
in
outs
sti
mov
ret
push
push
das
lods
xor
xchg
inc
(bad)
(bad)
(bad)
(bad)
jge
pop
sbb
cmp
push
test
loopne
push
sahf
sub
cmc
(bad)
(bad)
(bad)
(bad)
dec
or
addr16
xchg
sub
scas
mov
or
inc
fsubr
jnp
cmps
rol
add
inc
lahf
push
xor
adc
inc
add
xor
mov
sahf
les
adc
adc
adc
bound
or
cmps
loope
pop
nop
inc
scas
inc
mov
enter
(bad)
(bad)
(bad)
call
rol
es
jge
jecxz
stc
mov
retf
mov
adc
(bad)
(bad)
inc
shl
(bad)
(bad)
mov
std
sub
add
sbb
(bad)
(bad)
call
pop
nop
xor
cmp
mov
or
inc
(bad)
call
es
jne
adc
sub
xor
bound
xor
icebp
movs
data16
sub
call
loopne
push
jne
mov
dec
ja
sub
lods
pusha
repnz
jmp
sbb
mov
sahf
loop
xchg
ss
inc
jno
inc
inc
out
ins
add
shl
ret
(bad)
jmp
imul
cmp
mov
adc
and
daa
cld
cli
shl
test
clc
mov
xor
(bad)
jg
shr
push
jno
test
(bad)
mov
mov
pop
jno
(bad)
jmp
sub
ror
popa
les
cmp
xchg
mov
(bad)
(bad)
push
lods
or
xor
jp
mov
fsub
cmp
sar
xchg
outs
mov
sub
call
jne
adc
ret
fsubr
add
cmp
cmps
mov
ins
and
xchg
ss
cld
(bad)
mov
xor
je
movs
sub
pop
popf
add
xor
(bad)
or
(bad)
jmp
es
fdivp
push
cmp
push
dec
pop
repz
(bad)
inc
call
jno
adc
lods
pop
loop
xchg
cs
lods
(bad)
(bad)
(bad)
inc
sub
and
sub
imul
(bad)
jne
add
mov
sub
push
(bad)
(bad)
call
or
jecxz
mov
cmp
xchg
mov
push
jmp
push
jp
(bad)
(bad)
(bad)
jmp
fisttp
aad
icebp
add
pop
cmp
jmp
into
mov
(bad)
(bad)
call
nop
and
call
or
fcom
xlat
push
(bad)
aas
shl
(bad)
(bad)
jg
bound
bound
les
lods
adc
leave
frstpm(287
or
mov
fsubr
jp
loop
inc
movs
cmc
call
sbb
and
or
fdiv
push
xchg
(bad)
(bad)
(bad)
push
mov
and
jg
mov
fild
mov
mov
clc
(bad)
push
cmp
mov
mov
mov
push
inc
push
push
pop
into
int3
dec
sub
imul
inc
in
add
iret
addr16
call
pop
nop
(bad)
(bad)
(bad)
(bad)
jnp
ror
jp
cs
sbb
sbb
xor
sbb
movs
hlt
bound
fiadd
add
jne
jbe
rcr
je
out
mov
inc
imul
(bad)
(bad)
jg
add
scas
push
out
dec
out
sub
pop
jns
xor
das
xlat
test
inc
das
cli
call
stos
fisttp
(bad)
push
add
dec
inc
sbb
sub
(bad)
dec
sub
loopne
lahf
cli
ins
not
pop
dec
lock
xchg
mov
arpl
(bad)
jmp
jmp
add
aad
mov
jnp
bnd
add
push
sub
jmp
(bad)
repnz
mov
stc
xchg
repz
das
iret
xchg
(bad)
(bad)
dec
fist
and
inc
cwde
xchg
bnd
cmps
in
out
fistp
mov
xchg
sub
pop
cmc
add
fcomp
fdiv
in
(bad)
out
jns
sbb
(bad)
jg
mov
mov
xor
push
dec
dec
ret
mov
shl
(bad)
(bad)
call
add
jle
pop
dec
xchg
mov
and
cwde
dec
mov
push
push
addr16
(bad)
(bad)
(bad)
call
nop
dec
jnp
jle
sub
inc
cdq
leave
stos
or
push
bound
mov
(bad)
(bad)
(bad)
call
sbb
(bad)
shl
push
add
jbe
sub
setl
fdivr
(bad)
cmp
shl
scas
push
imul
and
cmps
(bad)
(bad)
jmp
jl
repnz
or
cmps
push
in
push
data16
xor
add
mov
inc
xor
push
loopne
and
(bad)
(bad)
call
jbe
repz
ds
inc
push
data16
retf
and
xchg
push
es
mov
jg
dec
rcl
pop
jecxz
aam
rcr
adc
push
and
xchg
ins
pop
xchg
clc
jmp
es
mov
sbb
cmp
rol
sbb
cmp
xor
retf
mov
ds
hlt
cmp
and
and
inc
popa
(bad)
sub
sub
add
fiadd
fbstp
ins
sub
inc
pop
push
lods
hlt
(bad)
(bad)
out
clc
int3
stos
aam
mov
jecxz
and
sahf
nop
ret
xor
imul
(bad)
(bad)
jmp
inc
nop
jmp
sbb
inc
(bad)
aad
(bad)
shl
pop
xchg
rcr
ins
ret
sbb
(bad)
int3
dec
pushf
xchg
(bad)
(bad)
(bad)
push
sub
outs
jecxz
sub
cwde
sub
out
loop
dec
xchg
or
mov
call
jecxz
push
or
mov
xchg
mov
sub
push
jl
cli
jno
pop
test
(bad)
(bad)
(bad)
call
popa
add
pop
push
js
inc
gs
lahf
mov
dec
iret
std
test
mov
push
sbb
(bad)
(bad)
call
pusha
cld
pop
mov
fcomp
lea
mov
mov
out
stos
pop
jno
(bad)
adc
(bad)
(bad)
inc
out
mov
sub
ins
js
dec
(bad)
sub
idiv
jmp
push
rol
aaa
std
call
fisub
lahf
jp
jne
ins
pop
push
ins
sti
(bad)
rcl
ins
add
fstp
inc
cmp
fld
test
jbe
(bad)
(bad)
jmp
retf
test
sub
cmp
daa
js
les
push
fmul
leave
test
pop
xchg
jns
(bad)
(bad)
dec
pop
lahf
jmp
pop
scas
mov
and
mov
add
je
push
dec
xor
mov
(bad)
(bad)
call
in
or
(bad)
call
sti
mov
mov
(bad)
mov
das
cli
jmp
inc
jge
pop
sub
hlt
outs
shl
lock
test
(bad)
(bad)
inc
es
out
pop
and
mov
fsub
and
(bad)
call
jnp
call
mov
imul
sbb
jmp
leave
pop
(bad)
mov
ret
inc
loopne
popf
sbb
push
jle
ja
cwde
inc
lods
movs
movs
adc
rol
popa
pushf
push
aaa
pop
fldl2e
lahf
pop
jns
(bad)
in
pop
cld
jmp
ins
sub
in
and
push
mov
cli
mov
mov
cmp
dec
jmp
xor
loope
(bad)
(bad)
(bad)
call
cmp
pushf
pop
sti
outs
sbb
lods
ret
sbb
stos
loop
inc
mov
clc
daa
pop
mov
lods
add
clc
std
(bad)
(bad)
fsub
push
in
pop
sbb
mov
out
outs
stos
mov
(bad)
(bad)
push
fs
mov
stc
mov
cmp
shl
jae
out
sub
push
xchg
jl
(bad)
(bad)
(bad)
mov
pop
ins
sub
or
mov
in
push
rcr
in
int
push
(bad)
(bad)
(bad)
push
leave
or
ins
adc
mov
test
lahf
repnz
xlat
pop
sub
adc
pop
cmc
loope
(bad)
jmp
dec
enter
or
pushf
mov
dec
dec
or
and
test
xor
(bad)
mov
mov
push
sti
jg
ret
adc
mov
(bad)
call
mov
push
lea
xchg
popf
dec
sti
add
fisttp
sbb
outs
(bad)
(bad)
(bad)
(bad)
fldenv
fucomi
cmp
arpl
and
gs
in
shl
cmp
and
fs
(bad)
(bad)
in
jno
xchg
ja
mov
rcl
enter
out
repz
call
aaa
pop
fist
shr
or
or
(bad)
pop
xor
(bad)
(bad)
(bad)
push
shr
and
shl
test
cmp
fist
and
jge
mov
repnz
loop
jle
test
jmp
sbb
in
sub
and
add
idiv
(bad)
(bad)
(bad)
inc
inc
push
(bad)
lahf
pop
jnp
stos
sbb
ja
in
cmp
fbld
push
mov
retf
lds
jmp
mov
test
scas
inc
push
mov
aaa
inc
neg
test
out
scas
xor
xchg
add
fstp
clc
call
push
adc
cdq
push
(bad)
(bad)
(bad)
push
repnz
mov
xchg
cdq
out
push
enter
or
lock
(bad)
(bad)
(bad)
out
mov
iret
fsub
outs
into
pop
push
sub
push
std
and
cmp
pop
sbb
or
cmp
(bad)
(bad)
(bad)
inc
shr
pop
sahf
leave
repz
push
inc
stc
es
mov
(bad)
(bad)
(bad)
call
adc
retf
xchg
sub
popa
fidiv
sbb
push
or
pushf
mov
mov
mov
(bad)
(bad)
(bad)
fcomip
mov
mov
pop
cmp
xor
out
fnstcw
in
data16
(bad)
(bad)
call
and
shl
dec
fcom
inc
mov
mov
mov
inc
jo
(bad)
(bad)
(bad)
cmp
inc
cmps
aam
cmp
or
lock
cmp
dec
fsub
inc
cmp
into
and
pop
loop
or
(bad)
(bad)
dec
and
adc
ret
dec
sub
fisttp
dec
pop
(bad)
(bad)
(bad)
push
test
loop
jo
iret
jle
pop
iret
xlat
cmps
in
(bad)
loop
add
add
inc
cld
or
stos
in
fdivr
pop
hlt
jge
xchg
test
retf
enter
(bad)
(bad)
jmp
mov
jecxz
js
inc
or
fisub
test
push
sub
cli
call
bound
(bad)
push
mov
rcl
(bad)
(bad)
jmp
fnstcw
add
sub
push
sahf
and
push
xor
stos
(bad)
out
mov
loope
cmc
iret
call
sub
push
dec
mov
mov
les
or
aad
mov
js
imul
jle
(bad)
or
mov
(bad)
push
xchg
add
dec
(bad)
push
push
lods
std
aas
dec
in
retf
loop
mov
jne
in
lock
mov
inc
push
(bad)
(bad)
(bad)
jmp
or
jmp
push
in
mov
dec
pop
fwait
pop
pop
push
es
cmc
(bad)
jmp
xlat
pop
add
jmp
sbb
mov
sbb
(bad)
dec
in
push
retf
mov
cwde
or
jg
xchg
lahf
xlat
jmp
lea
(bad)
(bad)
jmp
leave
pop
jno
xchg
pop
xor
dec
cs
aam
mov
test
call
call
cmp
popa
mov
daa
jne
hlt
idiv
outs
mov
pop
and
dec
ret
xchg
loop
das
mov
cmp
sbb
(bad)
jmp
adc
fwait
mov
mov
popf
lods
mov
(bad)
jmp
dec
data16
mov
sub
xchg
in
fsubr
or
shl
ins
cs
loopne
(bad)
(bad)
jmp
or
lods
gs
std
mov
lds
loope
jmp
pop
jb
xchg
jmp
push
pop
data16
gs
(bad)
(bad)
jmp
sbb
les
inc
dec
push
cs
idiv
pop
out
mov
inc
push
pop
cli
pop
and
(bad)
(bad)
jmp
dec
adc
and
or
pop
and
ss
out
mov
(bad)
(bad)
cmp
inc
ins
call
ins
cmp
sbb
mov
int
(bad)
cli
mov
not
(bad)
(bad)
inc
clc
sbb
out
push
inc
sbb
inc
fcomp
mov
sub
repz
xor
(bad)
(bad)
(bad)
(bad)
out
or
sub
(bad)
test
adc
xor
lods
les
mov
add
(bad)
(bad)
dec
(bad)
xchg
(bad)
sub
pop
inc
das
in
sbb
cmp
push
stc
or
into
push
adc
sub
adc
lea
je
js
retf
std
adc
test
movs
(bad)
fadd
lahf
adc
pop
xchg
adc
mov
xor
xchg
sub
ja
std
(bad)
(bad)
mov
es
in
push
sti
adc
cli
xchg
gs
(bad)
(bad)
(bad)
fnsave
jnp
dec
mov
test
pop
and
mov
ret
(bad)
(bad)
push
aas
add
in
dec
add
gs
stc
cmps
jb
mov
sub
sbb
dec
popa
push
mov
(bad)
(bad)
cmp
stos
int
jns
(bad)
adc
mov
dec
lods
xchg
cmps
bound
xlat
out
imul
dec
sbb
sbb
shr
xor
push
out
xor
dec
xor
cmp
(bad)
(bad)
jmp
and
ror
push
test
loopne
call
mov
and
jbe
mov
cmc
pop
mov
xchg
dec
(bad)
shl
or
(bad)
(bad)
call
jp
jmp
imul
inc
or
push
push
sahf
(bad)
jno
(bad)
(bad)
call
lock
aaa
je
pop
lods
(bad)
dec
xchg
dec
jb
arpl
jmp
sub
iret
push
mov
dec
push
scas
fistp
in
aas
outs
ret
aam
push
jne
fisttp
das
mov
and
(bad)
(bad)
(bad)
push
dec
sbb
fs
cmp
shr
fnstenv
cld
xor
pop
lock
sub
imul
xor
retf
ins
mov
or
cmc
(bad)
(bad)
(bad)
inc
in
pusha
repnz
inc
idiv
and
xor
lods
mov
jo
sbb
imul
out
dec
jmp
mov
mov
push
mov
xchg
xlat
adc
(bad)
(bad)
mov
mov
sub
(bad)
(bad)
inc
mov
rol
sub
jnp
pushf
mov
daa
xlat
pop
fdiv
es
push
sar
push
jne
rcr
ds
dec
mov
mov
fcomp
lds
arpl
xchg
jp
retf
out
mov
out
cld
pop
(bad)
mov
retf
aas
shl
cmp
and
lock
inc
xor
mov
out
pop
jno
call
lods
add
fwait
in
icebp
sub
dec
mov
mov
ins
xor
adc
mov
mov
ds
add
test
push
icebp
imul
xchg
scas
add
(bad)
(bad)
inc
xchg
and
ds
mov
data16
dec
cld
scas
inc
in
xlat
mov
lds
dec
fwait
(bad)
(bad)
(bad)
call
push
cdq
popf
repz
icebp
sub
pushfw
fldln2
dec
jmp
sub
(bad)
(bad)
jmp
loope
in
push
(bad)
sbb
punpckhdq
jae
sub
pop
sub
xchg
mov
push
xor
call
mov
stos
adc
adc
fimul
outs
and
pop
adc
in
icebp
lock
std
es
adc
jmp
je
cmp
jmp
scas
dec
push
shl
scas
jge
movs
(bad)
(bad)
(bad)
inc
mov
mov
sti
inc
fadd
add
daa
sti
hlt
(bad)
cmp
call
inc
fcom
ins
push
push
push
mov
xchg
sar
mov
(bad)
(bad)
push
leave
mov
leave
add
xchg
add
retf
adc
pop
cld
call
out
icebp
icebp
adc
push
fnstenv
push
in
test
sbb
(bad)
(bad)
(bad)
(bad)
jmp
ss
cld
mov
je
idiv
dec
out
jo
inc
cmp
pop
push
shr
sub
repnz
cmp
xchg
jnp
(bad)
(bad)
mov
jle
push
stos
(bad)
sub
dec
test
hlt
arpl
popa
cmps
sub
mov
(bad)
(bad)
call
sti
xor
shl
fld
sahf
in
push
and
pusha
call
aam
push
sub
call
fwait
sar
aaa
loope
js
xchg
rol
enter
sub
popa
mov
jg
(bad)
(bad)
push
ret
push
scas
leave
adc
mov
push
scas
lods
fstp
loope
fst
ds
and
lods
(bad)
(bad)
(bad)
(bad)
out
cli
pushf
fwait
test
mov
jb
and
js
cld
and
arpl
and
(bad)
call
mov
lods
or
cmp
adc
push
scas
add
ret
add
jb
cmp
add
dec
stos
lods
shl
jle
xor
mov
dec
inc
retf
cmps
movs
std
loop
call
(bad)
(bad)
clc
out
push
test
cmp
sahf
loope
imul
(bad)
dec
mov
or
pop
or
shl
xor
sbb
jo
inc
out
jg
xchg
dec
popa
repz
(bad)
jg
dec
data16
sar
ror
mov
and
adc
push
(bad)
(bad)
call
push
imul
push
mov
or
rol
call
std
(bad)
mov
fsubr
popa
fidivr
inc
inc
or
mov
scas
cmc
push
(bad)
(bad)
(bad)
call
xchg
ss
fadd
or
pop
shl
xchg
adc
xchg
adc
(bad)
jg
(bad)
call
cld
xlat
sbb
clc
pop
shl
bound
cli
jo
and
inc
jle
xor
xchg
cmp
and
jne
std
(bad)
sub
mov
mov
lock
pop
adc
mov
or
adc
ret
sub
inc
fimul
cmp
push
(bad)
fild
xor
or
sub
retf
loop
xchg
inc
inc
push
(bad)
sahf
cmp
mov
fmul
popf
xor
fcmovnb
mov
fistp
push
push
retf
inc
stc
lods
lahf
mov
dec
xor
sub
or
out
sbb
adc
int
out
fcom
fabs
lea
sub
xchg
mov
js
aam
test
movs
inc
dec
cmp
lods
add
jmp
push
inc
int
inc
sub
adc
call
jg
and
icebp
popf
or
ins
fild
and
fsubr
(bad)
(bad)
call
cmp
ret
lods
mov
sub
pop
scas
push
or
mov
nop
ret
mov
cmp
push
(bad)
mov
mov
inc
pop
icebp
cmp
sub
sar
(bad)
ins
adc
cld
(bad)
dec
pop
or
data16
add
imul
adc
retf
(bad)
dec
jg
push
int3
fst
das
(bad)
sti
rcl
jecxz
cmp
js
inc
(bad)
fidivr
(bad)
(bad)
(bad)
inc
cmp
scas
out
fidiv
jl
push
adc
mov
test
(bad)
(bad)
(bad)
inc
int
out
pop
xor
push
or
pop
sub
dec
mov
mov
(bad)
ror
mov
rcl
mov
outs
fwait
ret
in
shr
retf
call
in
ret
inc
push
div
call
leave
cdq
dec
jae
pop
mov
inc
rol
in
jl
sbb
enter
(bad)
(bad)
(bad)
push
xchg
aaa
test
adc
aad
sbb
or
adc
push
(bad)
(bad)
(bad)
and
and
or
ds
stos
sbb
(bad)
(bad)
(bad)
dec
jge
daa
xchg
pop
(bad)
addr16
push
add
sar
cmps
mov
gs
(bad)
(bad)
(bad)
fst
cli
adc
add
mov
mov
sbb
scas
jmp
inc
jecxz
xor
test
mov
mov
ins
ret
(bad)
(bad)
jmp
xchg
sahf
or
out
mov
push
cmps
hlt
sahf
sbb
cmp
sbb
adc
(bad)
push
int3
mov
mov
sub
pop
scas
loop
outs
stos
mov
cmps
fidiv
jg
(bad)
mov
aad
push
xchg
popa
loopne
inc
ficomp
inc
lods
stos
lock
(bad)
(bad)
std
rol
sar
xor
dec
fstp
jae
gs
xchg
inc
(bad)
(bad)
(bad)
fistp
data16
fyl2x
cmp
adc
cmp
ret
and
(bad)
(bad)
jo
cmp
scas
or
sbb
out
dec
clc
push
test
sbb
adc
sbb
xor
std
cdq
int
pop
inc
xor
fidivr
sbb
dec
loopne
sbb
dec
add
lods
jno
out
call
jmp
inc
push
ja
(bad)
inc
lds
repz
jmp
loop
gs
pop
jns
xchg
scas
pop
hlt
jns
(bad)
(bad)
(bad)
jmp
ret
fiadd
mov
call
jmp
xchg
movs
stos
and
(bad)
dec
ds
cmps
into
inc
and
repz
and
int
jns
dec
(bad)
(bad)
(bad)
mov
inc
dec
aaa
aas
scas
push
jno
ss
push
add
xchg
fwait
aam
fiadd
or
jle
sub
ja
iret
out
or
es
xor
mov
daa
xchg
stos
sbb
sub
mov
and
loop
xchg
xor
(bad)
(bad)
(bad)
call
push
add
call
add
sar
data16
loop
add
mov
(bad)
(bad)
(bad)
(bad)
inc
movs
mov
test
mov
lods
fldenv
and
mov
adc
dec
(bad)
(bad)
(bad)
dec
popf
sahf
sub
mov
pushf
mov
inc
(bad)
pop
dec
out
inc
jo
mov
and
cmp
retf
es
aam
(bad)
sti
(bad)
out
jb
mov
(bad)
(bad)
(bad)
(bad)
(bad)
out
lods
popa
rol
cmc
pop
sbb
add
aam
adc
cmp
mov
call
dec
sub
adc
mov
xchg
loope
push
xchg
jp
and
xchg
mov
clc
sbb
stos
dec
inc
call
xchg
call
repnz
xchg
pop
hlt
(bad)
jmp
(bad)
in
cmc
push
outs
adc
dec
xchg
f2xm1
cs
or
push
mov
(bad)
(bad)
call
dec
xchg
rcr
rol
mov
xchg
jle
fwait
hlt
(bad)
(bad)
jmp
js
jo
in
(bad)
outs
retf
push
add
xchg
pop
jae
mov
dec
ja
or
pop
stos
pop
cmp
call
mov
call
and
cdq
sub
out
xchg
mov
push
(bad)
call
ja
mov
sbb
adc
and
cld
push
mov
pop
jo
or
(bad)
dec
pop
mul
pop
fwait
in
fld
push
push
call
sub
lock
add
adc
and
nop
lods
mov
(bad)
call
push
push
or
mov
or
pop
shl
test
cmps
and
(bad)
(bad)
jnp
leave
sub
sub
repnz
retf
(bad)
dec
adc
xchg
cmps
aam
lahf
mov
fcomip
inc
dec
pop
inc
jns
jg
add
imul
and
adc
in
lock
cmp
pop
inc
pop
cmp
mov
xchg
inc
mov
cli
nop
xchg
mov
aam
push
jmp
fld
jle
scas
push
scas
fist
push
pushf
jg
dec
xchg
mov
pop
adc
and
das
cld
and
retf
fs
daa
sbb
sbb
mov
push
call
loope
(bad)
call
mov
lahf
test
xor
jbe
cmp
(bad)
(bad)
(bad)
mov
mov
leave
outs
in
push
hlt
je
das
sub
stos
sub
dec
and
mov
(bad)
(bad)
(bad)
call
dec
inc
pusha
pusha
cs
(bad)
pop
mov
jge
dec
stos
fwait
cmp
int3
std
dec
xor
loopne
xor
mov
cmps
test
mov
call
cmps
out
les
mov
sbb
jnp
mov
and
mov
jmp
mov
mov
inc
adc
lea
(bad)
addr16
call
mov
lock
ret
cdq
imul
ror
push
lods
sar
addr16
enter
das
clc
pop
cmp
or
jmp
rcr
test
push
inc
js
rcr
aad
outs
push
lods
jno
mov
clc
enter
dec
mov
(bad)
(bad)
(bad)
call
pop
xchg
jecxz
jnp
mov
(bad)
pusha
stos
hlt
movs
js
aas
jp
mov
(bad)
mov
dec
fmul
xchg
ins
pop
inc
adc
repnz
mov
div
icebp
(bad)
(bad)
call
int3
iret
pusha
lea
je
jle
ins
fsub
(bad)
xor
test
dec
mov
or
sub
inc
pop
cs
push
push
xchg
hlt
shl
cmps
(bad)
pushf
xchg
mov
push
jle
inc
inc
jle
pop
push
or
ds
call
call
lahf
lods
retf
(bad)
cmps
xchg
xchg
dec
inc
push
ins
and
and
sar
cmp
jmp
loopne
xor
shl
xor
sti
out
or
inc
sub
call
daa
push
gs
and
mul
hlt
out
push
inc
xor
add
cli
sub
adc
add
mov
pop
out
sahf
out
xor
loopne
sar
adc
sbb
and
mov
shr
pusha
movs
imul
add
pop
pop
cmp
pop
aas
int
imul
rcr
mov
ins
ss
add
add
loopne
xor
loopne
adc
lods
shr
ds
jp
pop
ret
ret
and
jnp
mov
addr16
xchg
out
and
fild
cmp
test
push
leave
dec
test
dec
xchg
sbb
fs
rcr
sub
sbb
mov
sar
push
clc
jg
js
xchg
xchg
out
clc
push
add
dec
mov
outs
add
pop
(bad)
aas
add
iret
jge
mov
out
add
push
or
add
ins
iret
mov
repnz
loopne
add
lock
dec
mov
dec
adc
iret
adc
cmps
pop
cld
clc
fdiv
sub
pop
cld
xor
add
add
add
add
sub
push
dec
add
add
aaa
mov
push
add
jae
dec
pop
push
es
xchg
movs
ja
pop
pop
pop
pop
pop
daa
aaa
inc
push
jae
cmp
pop
push
inc
bound
push
jns
sahf
or
add
add
mov
mov
add
add
pop
daa
xchg
ja
inc
push
xlat
addr16
or
addr16
cld
mov
or
add
pop
pop
test
ss
push
xlat
mov
xchg
cmp
adc
and
daa
adc
add
xchg
xor
mov
jl
push
loopne
jae
popa
add
jbe
cs
daa
loopne
clc
addr16
and
sub
sbb
and
inc
adc
push
inc
es
aad
data16
add
pusha
add
push
aad
out
ret
repz
ret
push
and
push
(bad)
cld
ins
repnz
clc
lock
add
push
or
adc
neg
and
sub
and
and
xchg
jns
and
or
in
nop
and
ret
push
mov
out
aas
add
cmp
pop
sysret
addr16
sub
into
or
(bad)
mov
add
into
inc
pop
(bad)
(bad)
fucomip
dec
nop
or
addr16
loopne
lock
iret
mov
pop
(bad)
fsubrp
dec
pop
jne
lea
das
iret
adc
or
mov
clc
cmps
imul
and
ss
jl
int
inc
xor
inc
dec
dec
test
dec
stc
push
cmp
add
sahf
out
nop
jg
ds
mov
iret
add
xor
test
jp
bsr
jns
add
or
mul
call
add
inc
add
mov
or
dec
pushf
jae
stc
adc
adc
or
daa
aaa
inc
dec
aad
out
push
addr16
iret
repz
(bad)
icebp
(bad)
(bad)
(bad)
jg
aas
clc
push
jo
lock
mov
loopne
pop
pop
pop
daa
aaa
inc
push
or
jbe
stos
adc
mov
data16
xchg
adc
dec
push
pop
fnstsw
ja
xchg
add
or
xor
mov
data16
in
into
inc
add
inc
add
pushf
jae
inc
and
pop
pop
daa
aaa
inc
push
jae
pusha
cmp
pop
sahf
ss
int
into
aas
cld
aas
cld
ds
cmp
cmp
outs
cmp
pop
pop
daa
aaa
inc
leave
push
ret
jae
addr16
push
mov
add
int3
test
inc
push
jo
push
out
es
pop
push
daa
data16
mov
and
inc
inc
sbb
mov
push
add
std
inc
ds
pushf
stos
xor
pop
pop
pop
daa
loopne
xchg
add
or
and
jnp
enter
or
addr16
iret
mov
add
mov
inc
and
xchg
dec
mov
gs
mov
mov
ud0
pop
pop
(bad)
dec
xor
add
addr16
bound
add
(bad)
mov
add
daa
lock
vmread
lock
mov
into
mov
push
daa
mov
stos
sbb
push
out
add
lock
xchg
(bad)
adc
sbb
adc
sbb
stos
sub
add
and
inc
push
mov
mov
or
add
add
or
adc
ins
dec
xor
pop
pop
pop
sti
push
inc
or
adc
aam
push
adc
push
fisttp
adc
add
ret
and
add
scas
bound
scas
pop
dec
pop
retf
inc
adc
xor
jnp
inc
cmp
add
inc
inc
ja
lahf
div
aaa
cmp
and
aaa
add
push
or
adc
jmp
mov
jo
add
jmp
pop
jp
aas
push
jae
xchg
adc
pop
aam
jo
sub
add
or
sub
out
xcrypt-cbc
cmps
push
adc
mov
mov
mov
pop
iret
add
push
mov
loopne
ffree
add
cmp
inc
and
das
jo
add
cld
add
mov
(bad)
bound
(bad)
loopne
les
and
stc
jg
or
sbb
mov
inc
sub
or
ret
cmp
imul
push
push
jp
push
(bad)
pop
es
mov
mov
mov
push
inc
fs
and
mov
add
add
pop
add
dec
sub
es
movs
xchg
mov
movhps
ret
add
inc
and
pop
ds
(bad)
push
nop
movs
sbb
jnp
sub
xchg
push
cmps
add
jmp
repz
aam
adc
cmps
add
shl
inc
xor
cwde
fcom
repnz
fild
pusha
xchg
and
(bad)
not
xchg
nop
add
cmps
xchg
and
aad
push
xchg
xchg
fidiv
rol
dec
dec
mov
adc
das
fs
test
jae
inc
nop
add
push
dec
mov
sahf
push
outs
pop
cmp
addr16
xor
add
jl
or
jecxz
or
adc
stos
and
or
dec
xchg
push
mov
cs
push
stos
jbe
repz
fld
bound
lods
push
adc
stos
and
jae
xor
rcl
and
sbb
pop
movs
push
fdiv
jns
push
popa
lods
loopne
mov
sbb
mov
shl
inc
sub
out
mov
xchg
ror
ds
lods
xor
push
imul
xchg
hlt
pusha
mov
lea
add
nop
mov
push
ins
pop
outs
outs
cmovnp
sub
ss
imul
and
fwait
cwde
pusha
fiadd
dec
adc
and
mov
out
xchg
and
inc
rcr
sti
dec
adc
fs
push
mov
ret
das
arpl
xlat
stos
(bad)
adc
retf
test
jmp
rol
xchg
or
ret
inc
add
jae
sub
push
or
daa
pop
aaa
outs
jmp
inc
scas
pop
test
out
cmp
inc
and
sub
jecxz
add
sbb
dec
push
(bad)
outs
out
inc
mov
push
sbb
or
adc
or
imul
xlat
push
(bad)
in
or
(bad)
(bad)
and
or
jne
pop
jns
mov
and
cwde
inc
jecxz
shl
pop
jl
(bad)
adc
cmp
and
ja
movs
or
jnp
loop
xor
call
xchg
imul
and
outs
aaa
ja
imul
mov
add
xchg
add
pop
movs
addr16
test
dec
pop
shl
sahf
loope
xchg
xor
or
mov
ins
add
mov
aad
or
arpl
adc
add
xchg
xlat
jae
inc
or
sub
aaa
mov
jno
inc
add
mov
and
ss
sbb
adc
xchg
gs
or
out
fisubr
pop
push
fst
add
add
jns
call
inc
jo
and
retf
mov
mov
fsubr
pop
sti
pop
adc
jecxz
das
mov
adc
imul
mov
idiv
sbb
dec
shufps
sub
je
cmp
adc
movntps
call
leave
mov
inc
mov
mov
and
mov
shl
sub
shl
xchg
xor
jne
sbb
ins
mov
sub
ret
jb
sub
popa
adc
(bad)
in
cli
scas
push
pop
aaa
cmp
pop
jo
sbb
jae
pop
pusha
dec
popa
fisttp
call
aas
cli
inc
(bad)
fs
xchg
call
xor
fistp
mov
lods
and
imul
cmp
xchg
and
mov
mov
xchg
call
or
jnp
imul
or
xchg
or
(bad)
mov
rol
and
ins
stos
xor
cs
leave
inc
test
add
adc
imul
and
add
cmovl
mov
adc
loope
xchg
or
jae
xor
push
mov
not
sti
jbe
lods
add
mov
adc
ins
addr16
mov
inc
fbld
mov
xchg
sub
dec
cmp
jae
shr
addr16
or
lods
add
xchg
xlat
add
sub
das
je
dec
jo
ret
xor
adc
rcl
stos
dec
adc
cmp
outs
mov
xor
stos
jb
and
ss
ficom
push
fwait
xor
pop
xchg
and
rol
pop
iret
and
cmps
rcl
sbb
fcomp
out
and
fisub
pop
loopne
pop
push
arpl
je
sub
add
mov
sub
mov
mov
bound
es
mov
cs
mov
cmps
adc
push
jno
mul
and
nop
or
rcl
xchg
loop
push
test
pop
popa
test
stos
add
mov
imul
pop
dec
xchg
fs
add
push
cmp
push
add
jb
mov
sbb
mov
or
daa
add
and
or
add
and
and
movups
nop
out
std
call
pop
dec
jmp
scas
dec
pop
add
rcl
xor
iret
adc
or
push
retf
outs
pop
ror
add
sub
add
inc
add
and
inc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
sub
sldt
lods
hlt
dec
adc
jp
push
mov
cmps
pop
push
and
imul
fs
imul
add
movs
add
add
ins
push
outs
sub
adc
mov
(bad)
xchg
adc
mov
xchg
lahf
sbb
inc
leave
popa
add
inc
arpl
rcr
dec
outs
adc
gs
adc
adc
dec
mov
xchg
xor
xchg
popa
pusha
(bad)
pop
add
sbb
push
mov
test
sbb
test
fidivr
sqrtps
bound
inc
push
and
rol
pop
(bad)
mov
pusha
dec
out
pusha
inc
fs
inc
sbb
sub
fwait
ret
inc
push
jne
sub
add
inc
stos
aaa
jae
das
fwait
cwde
xchg
inc
and
and
cmp
lock
cdq
pop
inc
out
lock
jmp
mov
aas
rol
dec
inc
dec
adc
ret
cmp
or
sub
xchg
inc
sub
jmp
mov
sub
jbe
add
cmp
outs
xchg
mov
test
mov
sbb
dec
outs
movs
inc
jo
jl
inc
arpl
loope
dec
test
add
and
adc
push
dec
add
inc
jmp
push
(bad)
cmps
xchg
adc
mov
sbb
sbb
popa
bound
mov
push
outs
loopne
inc
jns
adc
loopne
push
mov
xor
lods
fcmovnu
mov
inc
jae
adc
add
imul
stos
jp
sub
push
sbb
shl
fsub
aad
sub
test
scas
xchg
popa
imul
xor
out
popf
dec
mov
add
stc
mov
int
adc
pop
js
sbb
sub
js
jbe
push
sbb
add
pop
cmp
adc
loopne
mov
dec
outs
mov
mov
xchg
imul
ins
sahf
lods
cdq
bound
cwde
push
mov
jb
cdq
pop
xor
or
jnp
pusha
ins
data16
dec
adc
xor
adc
xor
or
sub
pop
ins
push
push
ret
rcl
inc
outs
inc
adc
ds
imul
sbb
jae
mov
sbb
and
outs
cld
mov
repz
test
sub
aad
add
ret
cwde
(bad)
fiadd
xor
pop
xor
fld
inc
fs
test
ret
add
xor
inc
sub
inc
cwde
sahf
sub
xchg
jecxz
popa
pop
push
aaa
aaa
pop
sub
popf
jae
fcom
jo
mov
cmps
rol
jne
xor
cmp
loope
call
adc
or
mov
pop
xor
pop
mov
pusha
inc
rcl
pop
dec
mov
int3
rcl
sub
xchg
push
lods
ss
(bad)
push
movs
call
in
pop
fisub
add
ja
scas
jbe
imul
jo
std
xor
pop
fst
lods
jecxz
pop
ins
sbb
adc
and
push
sbb
push
jo
jno
inc
mov
pop
stc
xor
add
and
ss
dec
sub
test
dec
or
test
sub
mov
mov
adc
aad
(bad)
inc
adc
xchg
sub
xor
xor
icebp
add
xchg
cmp
fistp
aas
push
push
and
mov
xchg
pusha
sub
xor
and
push
ret
sub
and
data16
sbb
push
add
and
xchg
(bad)
xor
mov
jne
pop
lds
push
xchg
dec
pop
test
or
test
mov
ins
ret
cdq
cmp
or
gs
pop
test
ds
mov
mov
rcl
lea
inc
pusha
sbb
push
xchg
sbb
popf
xor
mov
push
pop
std
push
add
ficomp
push
mov
adc
push
fsub
xchg
add
mov
punpckhwd
popa
ret
fisub
addr16
inc
dec
cmp
sar
add
les
cmp
fist
sub
(bad)
imul
mov
xchg
pop
xlat
sbb
mov
push
fwait
push
adc
loopne
les
mov
mov
mov
ds
cmps
jmp
je
sub
adc
dec
dec
imul
jp
inc
cwde
mov
nop
test
stos
hlt
jae
inc
ds
adc
add
jno
fidiv
aas
outs
lahf
lds
xchg
cmp
pop
dec
dec
fadd
inc
xchg
imul
ins
push
fadd
ins
add
js
xor
jmp
icebp
je
mov
loopne
fst
sahf
ins
mov
adc
add
je
gs
cmc
push
sbb
fisttp
mov
sbb
add
adc
lea
add
jge
mov
pop
pop
inc
ins
shr
push
out
mov
push
jae
push
fstp
sbb
outs
inc
sbb
jo
cmp
xor
loopne
loope
ds
leave
pxor
xchg
pop
rol
sub
or
dec
data16
push
ja
rcl
cmp
daa
lahf
mov
in
sub
cmp
mov
test
or
inc
test
mov
dec
push
sub
xchg
dec
ins
out
cmp
test
push
cdq
outs
sbb
sub
dec
outs
dec
mov
(bad)
mov
(bad)
sub
and
lds
in
int3
test
pop
ja
mov
jne
mov
xchg
rol
push
push
pop
xor
add
adc
ret
cmp
and
adc
test
rcr
or
and
push
shl
std
jae
mov
sbb
xchg
ret
jb
ins
add
dec
add
sbb
jne
mov
inc
int
mov
jmp
aaa
pusha
pusha
fwait
sub
sub
in
mov
dec
xlat
sub
and
ret
adc
jl
mov
loope
pop
cmps
mov
rcl
fist
arpl
dec
shl
or
mov
cmps
imul
jle
cmps
mov
pop
dec
cmp
inc
xchg
push
push
xchg
jnp
fisttp
jne
mov
lods
cmp
rol
xchg
cmp
and
out
inc
xchg
mov
sub
movs
out
test
xor
xchg
or
pop
xor
xor
stos
in
nop
mov
jbe
pusha
sbb
and
dec
movs
dec
cwde
pop
lock
inc
pop
aaa
imul
(bad)
or
pop
scas
cmp
pop
fild
mov
xchg
js
loope
mov
xor
xchg
and
jp
inc
loope
sti
pop
cmp
and
(bad)
daa
mov
gs
cmp
inc
inc
push
dec
inc
pop
lods
jo
xchg
sahf
adc
pop
adc
push
push
dec
iret
shl
lds
nop
or
js
cdq
xor
xor
inc
mov
lods
stos
loope
or
lods
add
inc
in
test
das
mov
and
cld
sbb
mov
pop
sub
and
aad
aad
jae
mov
mov
sbb
inc
and
stos
mov
and
aaa
cmp
arpl
fidivr
sbb
ret
fsub
add
test
fadd
jne
and
(bad)
dec
adc
xor
xor
arpl
add
sbb
add
xchg
mov
bound
inc
jne
sbb
fadd
xlat
outs
js
and
pop
jno
adc
mov
imul
inc
lods
loop
pop
mov
xchg
psubd
ins
cmp
sub
das
sub
fwait
and
mov
ret
xchg
imul
xchg
xchg
movs
mov
imul
mov
leave
and
in
xchg
outs
and
push
add
pop
inc
cmp
sub
clc
sbb
or
inc
fs
cmc
lods
add
sub
pop
je
iret
ins
mov
das
cmc
mov
outs
imul
fs
repz
xor
scas
inc
adc
imul
jae
je
inc
pusha
int
cdq
call
and
ret
adc
push
adc
push
arpl
inc
inc
mov
dec
pop
repz
or
and
push
mov
rcr
sub
add
gs
call
adc
out
jb
sub
dec
imul
xchg
cmp
test
inc
mov
cmp
mov
movs
xlat
xlat
push
mov
fld
jp
push
jmp
and
jnp
dec
dec
outs
push
sbb
test
jnp
fsub
loopne
mov
push
fwait
repz
lea
ja
daa
inc
pusha
adc
xlat
xchg
sar
fcmovnu
daa
ds
ja
sbb
xor
cs
mov
add
sbb
add
mov
xor
xlat
push
push
and
push
or
mov
lock
dec
mov
(bad)
or
mov
add
lods
sbb
rol
shld
je
fmul
inc
outs
pop
xchg
jo
(bad)
sbb
outs
xchg
sbb
adc
dec
test
add
inc
imul
loope
dec
popa
imul
pop
add
push
imul
ins
inc
adc
fisubr
lods
and
aam
int3
jne
retf
ss
sub
dec
retf
dec
push
sbb
and
mov
push
sbb
mov
fwait
aas
daa
jo
out
mov
(bad)
iret
xor
into
push
or
adc
or
sbb
push
add
adc
scas
add
and
outs
pop
adc
push
inc
and
sub
ins
pop
shr
mov
lods
jae
sub
sar
aad
clc
mov
or
cmp
repnz
dec
psubsb
xchg
in
mov
adc
or
out
cmps
mov
sub
or
mov
xchg
push
mov
or
jnp
test
adc
jbe
pop
popf
ins
imul
mov
lea
sbb
test
ins
or
dec
scas
fsub
cwde
les
and
mov
mov
int
push
aad
push
sar
and
and
add
xor
aam
das
jecxz
ret
pusha
ins
jmp
ins
aad
adc
jns
sub
pop
jae
sbb
popa
push
xor
cmps
gs
dec
or
fimul
sbb
push
add
sti
(bad)
push
add
or
or
or
add
daa
add
(bad)
(bad)
jg
adc
or
ins
or
or
dec
or
add
sub
data16
jl
sub
sbb
xor
and
adc
jmp
lock
add
cmp
jo
adc
push
sti
cmps
xor
xor
or
and
imul
fisttp
push
sub
xor
cmp
mov
add
(bad)
(bad)
(bad)
push
push
imul
or
and
adc
mov
sub
ss
jmp
add
stc
add
push
and
inc
mov
dec
add
and
(bad)
mov
push
dec
scas
pusha
pop
mov
or
not
pop
adc
jg
div
push
inc
xor
or
movs
inc
and
and
add
jnp
or
ror
fcos
(bad)
inc
cmp
or
and
pop
and
adc
or
or
inc
or
xor
aam
jo
push
sbb
adc
xor
or
(bad)
(bad)
fisub
sbb
push
or
or
adc
xor
outs
out
leave
pop
pop
cmps
imul
mov
inc
xor
std
jg
fistp
clc
or
daa
(bad)
int3
sub
sahf
adc
movs
sbb
sub
xlat
xchg
and
push
dec
adc
adc
and
sbb
and
xchg
in
(bad)
(bad)
jmp
adc
adc
dec
add
adc
lock
or
push
pop
(bad)
or
adc
push
and
rol
xor
(bad)
push
jae
pop
mov
sub
and
dec
dec
sbb
sti
(bad)
jmp
sbb
dec
dec
sbb
adc
aaa
or
iret
(bad)
jmp
lock
add
and
sub
adc
cmp
test
xchg
fisttp
sbb
sbb
loope
pop
icebp
and
pop
or
sbb
test
mov
or
pop
or
adc
mov
push
jl
in
xor
adc
pop
or
or
inc
mov
sub
std
inc
movlps
or
push
adc
sub
js
adc
pop
and
or
adc
adc
js
mov
and
cmp
lahf
rol
rcr
xor
or
pop
cmp
and
lock
mov
mov
pop
xchg
add
push
or
and
call
or
out
add
or
mov
mov
adc
pop
mov
pop
outs
sbb
jg
sahf
cmps
popf
pusha
sar
adc
sahf
mov
test
sub
cmp
or
rcl
and
jo
dec
fld
adc
lods
mov
jbe
pop
push
cmp
call
outs
push
fwait
add
add
xchg
std
dec
cmp
push
sub
data16
je
sub
cmp
adc
ins
sub
sub
ds
xchg
call
pop
ret
inc
sub
pop
in
icebp
ja
add
inc
inc
cmp
sub
xor
or
ja
lock
lea
cmp
imul
aaa
add
xchg
add
sub
inc
cmp
sub
ffreep
lock
(bad)
jmp
inc
movs
or
pop
pusha
cmp
das
das
je
or
xor
jle
xlat
push
daa
add
dec
xchg
pushf
or
push
in
xlat
jg
data16
pop
test
sub
jmp
outs
clc
push
pop
push
popa
das
mov
ja
cmp
jg
xor
add
clc
add
and
sbb
js
push
inc
cmp
inc
movs
pop
pop
sub
cld
fbld
mov
sub
push
aas
or
cld
or
pop
or
adc
jecxz
jle
cmp
or
or
sbb
inc
or
push
push
inc
inc
dec
dec
xor
cmp
cld
call
cmp
pop
or
sub
push
dec
mov
mov
jmp
jmp
or
or
or
adc
pop
add
push
dec
push
xor
add
(bad)
dec
and
es
pop
push
mov
fs
sbb
or
sbb
and
add
adc
adc
inc
sub
stos
pop
lds
adc
sub
pop
mul
je
jl
outs
lods
jnp
jmp
mov
movs
pop
inc
sbb
bt
push
jb
xor
sbb
js
adc
push
add
push
retf
pop
jae
cld
dec
or
push
and
add
dec
or
add
inc
adc
adc
(bad)
or
xor
push
adc
adc
sub
nop
push
daa
push
sbb
and
or
and
add
addr16
add
or
adc
mov
fs
push
sub
les
cmp
sub
push
mov
sbb
jmp
fidivr
adc
sbb
or
or
sub
jp
sub
and
xlat
jge
pop
add
rdtsc
adc
jmp
jns
sbb
sbb
pop
cld
xchg
out
pop
or
das
adc
and
sub
sbb
pop
xor
outs
push
aas
adc
sbb
sub
adc
pop
push
jge
ins
add
add
sub
and
fs
or
or
jo
stc
or
pusha
add
out
sahf
sahf
and
sbb
enter
dec
or
mov
(bad)
cmp
pop
and
or
sbb
add
cs
std
add
pop
ss
add
dec
inc
push
adc
add
adc
out
inc
and
dec
mov
cmp
lock
add
lahf
xchg
sbb
aaa
and
push
xor
xor
out
mov
dec
xor
cmp
cmp
xor
add
add
adc
add
cli
add
mov
mov
add
push
adc
fwait
add
inc
add
std
test
add
inc
push
push
sub
popf
std
arpl
adc
pop
sbb
cmovs
sbb
sub
push
pop
call
jl
cs
pusha
adc
into
or
sub
dec
adc
sbb
sub
or
add
adc
std
shr
add
adc
add
mov
jne
(bad)
cli
pop
icebp
sub
cs
push
or
clts
sbb
adc
out
add
and
or
pop
ret
xor
sbb
fcom
js
std
xlat
fisubr
jle
push
cmp
inc
or
dec
add
test
jp
sbb
xor
xor
dec
or
or
repnz
push
cmp
jg
cld
dec
enter
add
shl
push
dec
and
(bad)
scas
cli
sub
lidtd
adc
push
xor
adc
in
and
lock
add
pop
(bad)
mov
cmp
sbb
cmp
push
or
enter
inc
adc
jbe
nop
adc
jg
or
adc
sbb
adc
push
add
int3
and
and
pop
sbb
sub
pop
dec
inc
outs
or
push
inc
jae
pop
fsub
cmp
cs
lods
shl
xor
mov
add
add
mov
push
jnp
push
(bad)
jg
sub
add
das
fstp
dec
mov
and
and
inc
adc
add
addr16
jmp
mov
retf
inc
push
xlat
sbb
sbb
inc
jle
push
and
outs
scas
ror
inc
and
sub
adc
dec
fimul
pop
aaa
push
dec
adc
ins
pop
loopne
mov
sub
lock
add
inc
sub
mov
sub
dec
out
ficom
adc
shld
stc
adc
inc
(bad)
mov
call
push
xor
push
lock
add
xchg
sub
lock
sub
ds
dec
ja
xchg
ins
add
and
add
es
(bad)
sbb
mov
dec
adc
cmp
es
(bad)
jg
fs
lock
fstp
lock
add
lock
add
sbb
sbb
sbb
inc
mov
xlat
jo
je
enter
and
add
out
hlt
pop
fs
or
sub
sub
jg
inc
mov
inc
push
lock
add
sub
pop
loopne
das
fmul
loopne
sub
fimul
sti
jg
pop
add
sbb
sbb
adc
inc
push
sub
push
and
(bad)
iret
mov
ficom
sub
and
push
push
call
push
pusha
xor
js
xchg
int
lock
jo
mov
(bad)
out
lock
sbb
mov
and
adc
lock
jno
dec
dec
and
adc
adc
(bad)
in
aaa
cld
(bad)
push
lock
retf
mov
dec
xor
mov
mov
ss
jg
lock
loopne
add
das
adc
pop
or
push
scas
mov
shrd
lock
add
popf
sub
dec
adc
push
or
ins
or
lock
ins
jmp
adc
or
xor
push
xchg
lock
add
or
lods
sub
push
push
jbe
jbe
cmp
or
arpl
ss
ds
loope
jne
cs
xchg
or
out
and
cs
call
inc
dec
push
cmp
adc
adc
push
or
push
ins
and
pop
jle
add
or
sub
inc
dec
mov
adc
and
aaa
sub
sub
test
sub
adc
jo
pop
pop
jmp
xor
outs
js
or
push
add
sub
pop
cmp
fcomi
xor
ins
das
xor
mov
sbb
push
add
xor
aas
push
loopne
push
and
sbb
adc
adc
inc
xlat
ins
adc
call
or
and
adc
adc
add
daa
adc
loopne
pop
sub
push
or
xor
or
and
ds
ss
or
inc
adc
xor
scas
jge
mul
dec
cmp
xchg
adc
jbe
adc
cli
sbb
pop
add
push
inc
xchg
pop
sbb
add
adc
pop
shl
lods
sub
pop
xor
add
fisttp
fild
pushf
push
dec
inc
and
add
jg
inc
mov
add
(bad)
mov
add
jmp
cwde
pop
nop
inc
xor
(bad)
fbstp
inc
mov
xor
push
or
das
sbb
clc
add
inc
movs
xor
sbb
ins
xor
or
out
pop
add
pop
dec
inc
out
cmp
jle
sub
sbb
or
ss
and
adc
inc
adc
pop
push
jl
jge
or
add
cli
adc
enter
loopne
(bad)
sbb
dec
sbb
scas
loopne
std
pusha
or
xor
mov
movs
and
jg
(bad)
mov
jno
inc
outs
sub
lock
inc
jge
(bad)
mul
sbb
sbb
lock
pop
nop
lock
jecxz
sbb
cs
cmp
and
or
movs
add
adc
pop
lock
add
aaa
std
sbb
pusha
out
and
add
lds
mov
out
push
inc
lock
sbb
add
lock
add
xor
cmp
sbb
pushf
or
adc
xor
xor
pop
sub
lea
sbb
pop
es
xchg
loopne
ficomp
popa
or
bound
sbb
and
sbb
push
dec
add
inc
mov
sub
into
adc
or
and
xor
jmp
stos
or
pop
call
and
or
adc
sub
imul
es
in
or
movs
add
pop
fsub
scas
mov
pop
mov
adc
add
adc
add
mov
or
lahf
add
or
cdq
pop
push
xchg
inc
clc
mov
mov
fs
sub
retf
enter
fidivr
mov
loopne
push
add
test
jg
dec
cwde
setns
inc
mov
adc
inc
aas
inc
push
xchg
adc
(bad)
out
jg
sub
inc
adc
pop
sub
wrmsr
movsx
push
(bad)
hlt
(bad)
(bad)
(bad)
inc
or
lock
add
adc
pop
pop
jnp
push
add
je
or
and
arpl
jl
or
dec
add
cmp
push
push
mov
mov
cs
(bad)
inc
push
das
mov
into
xor
je
sbb
jbe
(bad)
fdivrp
jmp
adc
ss
add
leave
and
pop
mov
sti
cmp
add
add
sub
outs
add
xchg
jmp
test
mov
adc
ins
xor
add
(bad)
dec
and
pop
jmp
fsubr
adc
push
xor
adc
xor
jmp
inc
xor
push
adc
sub
aaa
adc
adc
or
rol
sbb
push
push
or
xor
out
sub
or
sbb
dec
test
sbb
mov
gs
shl
adc
xchg
jl
push
mov
mov
jl
pop
sub
pop
mov
aaa
inc
or
lock
cmp
pop
sbb
add
outs
or
mov
shl
mov
and
mov
pop
test
pop
or
retf
add
pop
stos
in
push
pop
push
adc
daa
scas
sbb
lock
clc
fucomip
adc
adc
mov
adc
or
ins
inc
xchg
xchg
pushf
jb
adc
push
and
lds
ins
push
or
push
or
outs
jmp
sbb
push
adc
and
xor
xor
stos
adc
cmp
(bad)
cmp
push
int
inc
xor
sub
adc
and
push
jo
jnp
or
inc
fstp
mov
scas
and
aaa
lock
push
pop
or
sbb
or
sbb
push
imul
fimul
sbb
ds
jl
lock
int3
call
push
dec
sub
(bad)
aas
mov
pop
pop
xor
jg
and
mov
sub
inc
ss
jnp
jge
mov
pop
and
or
fstp
data16
add
loop
mov
and
cmovs
pop
push
ret
idiv
push
push
sub
mov
push
stos
wbinvd
or
lock
push
sbb
cmp
or
fcomi
jg
xor
dec
or
lock
je
add
daa
mov
and
sub
inc
dec
pop
lock
add
xchg
cmc
cli
push
lock
add
cld
into
ins
lock
xor
(bad)
cdq
adc
dec
call
in
add
fs
mov
pop
repnz
xchg
add
js
lock
inc
cmp
(bad)
aas
jno
(bad)
sub
push
add
fild
pop
das
imul
jg
dec
xor
sbb
sbb
rcl
and
dec
adc
lods
or
or
push
adc
clc
push
adc
xor
out
pop
or
inc
sub
push
sub
xor
adc
push
pop
or
retf
rol
or
inc
and
inc
(bad)
adc
adc
sub
into
xchg
clc
xor
mov
add
or
sub
xor
xor
adc
or
call
adc
pop
test
js
sub
(bad)
jg
loopne
and
xor
or
xor
or
adc
xchg
or
adc
sbb
shr
pop
adc
and
sbb
or
fild
(bad)
outs
repnz
jg
xor
sbb
add
in
(bad)
call
push
daa
xor
adc
sub
sub
inc
outs
jmp
cmp
mov
push
cmp
mov
dec
shr
push
lock
add
mov
push
rcl
jmp
test
das
lods
or
arpl
add
pop
or
mov
xchg
adc
cmovns
sbb
and
pop
mov
adc
pop
adc
push
cmp
cmp
fistp
(bad)
sub
or
pop
pop
and
cmp
adc
and
adc
popa
jg
ins
sbb
push
mov
pop
or
or
dec
dec
call
sub
sub
pop
cmp
das
add
jmp
adc
in
data16
sbb
pop
pop
or
cmp
fbstp
mov
mov
adc
or
xor
nop/reserved
daa
cdq
adc
or
cmp
or
or
lock
(bad)
ds
cdq
pop
cmp
add
and
outs
lock
popa
pop
push
rcl
and
lock
sar
es
add
and
add
xor
push
xor
and
dec
jecxz
jg
sub
cmp
adc
or
push
sub
je
dec
sub
ds
push
or
std
ins
xchg
mov
sub
push
pop
ds
es
or
mov
sub
es
sub
daa
dec
inc
sub
or
daa
lock
loop
fstp
shl
mov
jns
daa
sub
pop
add
cmp
daa
add
or
push
pop
adc
add
sti
ja
and
dec
add
pop
sub
jp
jnp
pushf
push
ds
lock
push
and
sbb
and
sbb
adc
cmp
or
imul
dec
pop
cwde
daa
inc
lock
add
mov
jmp
(bad)
jmp
inc
add
push
adc
adc
or
stos
push
adc
cmp
mov
adc
adc
inc
and
aas
test
pop
push
es
sbb
push
xor
jae
dec
(bad)
jecxz
pop
xor
jae
xchg
add
cmp
es
(bad)
outs
fisttp
or
xchg
sub
inc
bound
out
jo
mov
call
rcr
fsubr
test
cwde
add
add
sbb
fwait
(bad)
addr16
and
push
dec
and
ss
pop
or
cmp
call
pusha
add
daa
sbb
inc
inc
lock
add
sbb
jmp
lock
sub
ds
inc
or
psllq
add
ins
jns
push
mov
pop
mov
add
call
aaa
ds
and
inc
outs
das
data16
std
not
das
mov
mov
xchg
sbb
or
xor
je
hlt
push
retf
add
xchg
adc
and
outs
in
sti
aam
and
adc
or
imul
xor
sub
sub
or
add
push
(bad)
jnp
std
pop
std
das
into
mov
push
sub
mov
push
adc
cmp
and
push
add
and
(bad)
mov
into
add
aas
sti
scas
cli
dec
or
add
movs
pop
xor
sub
add
push
or
push
xor
lock
add
push
or
push
and
scas
mov
sbb
xor
or
and
out
inc
add
sub
xor
pop
mov
lahf
push
xchg
ds
push
add
add
sbb
(bad)
push
and
pusha
and
push
or
xor
sub
push
cmp
or
adc
mov
or
in
cmp
in
sbb
sbb
add
(bad)
clc
xor
push
push
or
mov
outs
mov
sub
mov
push
xor
jg
add
retf
sub
mov
mov
adc
pop
pop
xor
outs
fmul
jbe
sbb
pop
jl
cmps
ss
sbb
out
mov
sub
mov
popf
clc
sbb
cmp
bound
jle
adc
mov
add
and
jne
sub
add
call
and
xchg
sub
and
(bad)
call
and
pop
inc
dec
and
dec
and
sub
aas
dec
fdivr
sbb
push
call
fs
pop
shl
jmp
and
xor
xor
adc
data16
ins
adc
push
or
arpl
push
call
or
or
and
inc
sbb
adc
cmp
cmp
and
inc
or
fsub
sub
pop
fistp
mov
mov
cmp
push
add
and
mov
inc
and
or
scas
popf
mov
and
push
cmp
adc
adc
and
adc
and
(bad)
fild
or
add
daa
cwde
daa
sbb
sbb
fild
cmp
inc
(bad)
sub
push
pop
pop
sahf
pop
test
add
push
and
sbb
sub
sti
stos
or
das
add
pop
and
and
push
adc
pop
push
dec
outs
adc
ss
imul
mov
add
push
not
mov
push
push
jp
adc
jb
ja
sbb
cmp
xor
sub
add
rcr
pop
sbb
cs
ret
add
xchg
sub
pusha
dec
div
fsubr
add
mov
push
or
push
(bad)
push
and
adc
rcl
gs
ins
adc
sbb
dec
pop
add
push
or
and
inc
cmp
push
sbb
(bad)
out
dec
push
cdq
lock
add
ds
(bad)
fild
inc
loope
divps
push
(bad)
add
(bad)
enter
jp
in
lock
lock
pusha
adc
add
or
pop
bound
and
mov
lock
sub
push
push
pusha
fdivrp
scas
(bad)
pop
jo
adc
jo
nop
xor
(bad)
dec
adc
dec
push
sbb
push
push
sub
push
cmp
xor
xor
mov
pop
sahf
push
add
js
push
push
je
pop
push
cmp
es
pop
mov
sbb
por
jmp
sub
mov
xor
cld
sub
scas
mov
push
jno
gs
and
mov
pop
dec
rcl
hlt
nop
cmp
or
pop
fstp
xchg
and
hlt
push
cs
sub
and
sub
or
(bad)
adc
(bad)
mov
push
sub
sub
inc
mov
sbb
ret
scas
xchg
dec
or
or
or
jmp
into
call
xor
or
push
or
sub
push
and
adc
sbb
push
pop
mov
mov
aaa
sub
pop
test
cs
inc
push
xor
and
adc
and
pop
xor
loop
cmp
ins
daa
ds
cli
mov
inc
shl
push
dec
and
and
add
xor
cmp
gs
in
sub
mov
xor
pop
cmp
sbb
mov
bound
xchg
pop
inc
call
add
push
pop
sbb
sbb
lock
add
xor
mov
and
push
adc
dec
fmul
lock
(bad)
call
sbb
pop
sub
pop
xor
cmp
cs
xor
ins
xlat
pop
ds
pop
sub
mov
inc
add
pop
xor
and
ss
push
and
sub
sub
push
sub
add
js
fwait
sub
sub
sbb
push
repnz
inc
(bad)
jae
add
and
mov
daa
jno
ins
sub
fs
loop
mov
js
sbb
xor
jo
sbb
sbb
cvtps2pd
pop
add
ret
ret
addr16
in
push
sbb
das
push
in
adc
sbb
pop
adc
inc
movs
push
push
xor
iret
and
(bad)
sti
push
mov
fcom
das
daa
dec
inc
pop
xor
pop
daa
xor
das
sbb
sbb
inc
mov
aas
mov
mov
or
mov
push
jb
mov
inc
jge
cmp
in
fld
and
sbb
sbb
xor
(bad)
(bad)
aaa
cld
sbb
in
and
jbe
je
cmp
jge
das
jbe
add
inc
push
stos
shr
das
xor
xor
push
dec
add
adc
sbb
scas
jne
jg
mov
adc
(bad)
add
cmp
sbb
das
clc
shl
push
xor
pop
sbb
rol
sub
lock
fisubr
push
(bad)
stos
scas
lock
add
fisub
fmul
fsubr
mov
loopne
nop
adc
or
mov
sub
jnp
enter
cmp
jo
mov
(bad)
and
adc
ror
mov
hlt
(bad)
jmp
sahf
or
xor
or
lock
or
(bad)
dec
stos
cs
xor
adc
and
fisubr
mov
enter
push
and
xchg
push
or
adc
and
lock
add
gs
or
or
or
sbb
sti
(bad)
cmps
or
or
or
sbb
dec
or
div
(bad)
fisttp
xor
or
or
fimul
mov
mov
fs
or
mov
or
add
pushf
jg
xor
push
and
pop
push
sub
adc
ss
mov
(bad)
dec
add
jmp
dec
jne
add
dec
add
fcomp
cmps
sub
inc
cmp
push
xor
cwde
pop
leave
or
or
psrlq
xchg
dec
adc
clc
mov
or
cld
mov
bound
mov
arpl
push
add
jbe
jl
sub
test
mov
or
or
jo
add
add
cli
push
pop
add
jns
jp
adc
lock
dec
dec
call
je
iret
or
or
or
or
mov
pop
or
or
add
xchg
imul
xor
je
mov
loopne
or
jo
pusha
ins
mov
xlat
or
pop
or
or
fdiv
fbstp
xor
test
push
test
mov
mov
dec
push
ret
adc
cmp
mov
sysexit
mov
sbb
adc
xchg
add
lock
sbb
dec
jno
push
push
push
sub
dec
(bad)
inc
jp
pop
and
pop
jmp
loope
jmp
sahf
adc
dec
mov
mov
push
push
xchg
push
(bad)
dec
mov
cmp
call
push
push
sbb
jno
cmp
adc
adc
pop
pop
dec
xor
dec
push
dec
ins
and
push
adc
test
pusha
add
dec
mov
push
btr
adc
adc
jp
and
sbb
fdivrp
push
push
cwde
or
xor
add
pop
outs
jp
push
and
aaa
dec
adc
push
adc
cmp
fcmovnu
ss
sub
inc
xor
cmp
ss
xor
inc
fcomp
call
and
mov
and
cmp
cmp
ja
cmp
add
popa
ja
and
cmp
add
sbb
xor
js
push
fdivr
inc
daa
push
cmp
iret
(bad)
in
sub
and
adc
sub
add
sti
sar
cmp
sub
dec
or
inc
push
xor
cmp
push
dec
cmp
cmp
cmp
cmp
inc
ficomp
jnp
push
and
push
sbb
call
or
and
sbb
push
push
sub
push
push
push
adc
(bad)
aas
mov
inc
cmp
mov
sbb
adc
inc
push
adc
push
add
and
ss
(bad)
and
and
jae
or
fwait
aam
pop
js
nop
push
inc
adc
or
adc
outs
in
mov
xchg
and
lahf
ins
(bad)
inc
cmp
and
xor
pop
sbb
adc
pop
sub
mov
ja
sub
and
sbb
push
push
cmp
inc
cli
fdivp
adc
xor
cmp
mov
pop
xor
sbb
push
pop
das
pop
pop
or
test
jns
test
push
sub
and
adc
lods
push
xor
scas
pushf
push
add
pop
mov
ins
pop
push
sbb
adc
inc
inc
push
(bad)
mov
in
adc
inc
pop
adc
add
and
and
push
mov
lock
std
add
jb
xchg
adc
jb
daa
adc
loopne
inc
mov
xchg
adc
jns
adc
jge
sbb
call
sbb
xlat
or
or
dec
mov
(bad)
(bad)
sub
sbb
xor
jl
ds
dec
pop
sub
adc
fist
adc
sub
xor
xor
adc
imul
pop
inc
dec
outs
add
xor
mov
pop
mov
lock
xor
loop
and
push
and
scas
xchg
inc
dec
mov
sar
sbb
fidivr
or
es
add
jge
inc
inc
movntps
jg
xchg
dec
xor
or
pop
inc
sub
mov
pop
loop
cmc
jle
cdq
daa
xor
sub
xor
inc
clc
mov
push
scas
sub
and
sbb
cs
sbb
in
call
scas
retf
push
inc
sbb
stos
and
and
and
in
jb
sub
push
enter
pop
add
jmp
xor
cmp
xchg
adc
outs
movaps
jmp
mov
ja
push
adc
adc
pop
cmp
push
or
xor
sbb
(bad)
sub
adc
sbb
jge
stos
sbb
fisttp
cs
ins
data16
lods
jns
or
es
dec
mov
(bad)
ficomp
es
pop
inc
mov
adc
sub
sbb
dec
jg
sub
mov
sbb
xor
add
sbb
cs
sub
sbb
icebp
mov
pop
or
xor
push
sub
mov
and
cmp
and
xor
cmp
fld
mov
(bad)
shl
adc
xor
aas
sbb
add
rol
mov
and
mov
and
loopne
scas
(bad)
inc
or
das
sbb
sbb
cmp
dec
bound
xchg
arpl
sbb
dec
jl
and
adc
add
test
add
sti
fild
sub
sbb
daa
and
or
es
pop
rol
and
es
sub
rol
push
das
push
sub
sbb
xor
aaa
and
pop
or
adc
sbb
sub
and
or
call
sbb
sub
lock
daa
adc
and
and
(bad)
mov
or
in
add
hlt
(bad)
mov
bound
cmp
sahf
adc
push
push
or
cs
sbb
dec
cmp
xchg
and
and
pop
ret
call
jno
call
pop
cmp
add
adc
xor
les
or
and
push
sbb
and
ret
das
cmp
jns
sub
or
or
(bad)
out
push
push
or
or
retf
adc
push
or
mov
mov
fimul
sbb
xor
and
or
and
adc
scas
gs
xor
cmp
push
adc
push
or
xor
movsx
xor
sbb
push
pop
add
test
push
dec
dec
xchg
push
or
mov
fistp
jle
sub
inc
cmp
sub
xor
push
inc
jbe
xor
jp
dec
inc
sbb
lods
push
stos
ficom
mov
and
in
mov
push
and
inc
adc
add
mov
adc
adc
xor
out
mov
jmp
scas
sbb
or
sub
adc
sbb
shl
gs
clc
in
outs
jo
sbb
sbb
adc
and
es
or
dec
sub
or
sub
adc
aam
rcl
adc
inc
or
dec
rol
jno
jo
aaa
aaa
jb
sub
sub
dec
cmp
and
push
dec
xchg
pusha
and
mov
lahf
mov
inc
or
adc
xor
pop
pushf
dec
adc
ucomiss
(bad)
inc
pop
mov
or
das
xchg
arpl
dec
lock
adc
push
ss
repz
fist
add
or
pop
sbb
unpckhps
pop
cmc
xor
xor
cmp
dec
sbb
push
inc
and
push
push
push
push
jnp
shl
push
mov
imul
mov
je
jle
aas
add
adc
dec
sahf
dec
or
shr
push
cli
repz
cmps
ds
mov
dec
push
adc
jbe
or
mov
jl
popf
paddsb
jp
leave
popa
arpl
inc
das
and
test
inc
sbb
xchg
jo
int
inc
and
ret
pop
dec
fs
mov
(bad)
jg
push
mov
mov
test
push
dec
cmp
in
mov
loopne
mov
cmp
add
inc
mov
inc
cwde
mov
jp
adc
repz
push
pop
or
inc
push
jns
jmp
inc
push
cmp
popf
inc
lock
add
loopne
cld
outs
or
inc
lods
pop
mov
pop
cld
arpl
cld
and
push
sbb
xor
adc
sbb
push
cmp
inc
inc
inc
adc
sub
sbb
cmp
inc
aam
xor
sub
fdiv
sub
inc
xor
mov
cwde
fsubr
and
xor
and
cmp
sub
lock
add
push
sub
and
add
mov
adc
outs
(bad)
pop
cmp
stos
or
into
xchg
icebp
inc
mov
sub
dec
sbb
cmp
aas
and
arpl
sbb
adc
push
jmp
aaa
or
push
push
or
dec
adc
and
loope
sahf
not
das
or
out
jge
ret
mov
and
sub
sub
adc
sbb
mov
jmp
and
dec
adc
cmp
dec
push
dec
cmp
or
lock
add
mov
xchg
pop
shl
movups
sbb
scas
(bad)
out
loop
dec
movntps
or
and
push
adc
cs
jp
pop
popa
ins
pop
and
inc
sub
sbb
daa
jae
jne
sbb
and
mov
bound
inc
adc
pop
hlt
or
xor
ss
jo
sub
fcomi
jbe
adc
sbb
js
call
dec
pop
sbb
(bad)
fwait
mov
mov
pop
push
adc
or
push
nop
retf
sbb
pop
push
or
ret
adc
(bad)
call
dec
sbb
(bad)
xor
mov
aaa
pop
xor
dec
adc
outs
and
pusha
xlat
or
call
(bad)
fcom
xor
pop
outs
fdivp
dec
out
inc
sbb
dec
call
inc
ja
pop
sub
cmp
push
jge
and
push
rcl
push
scas
mov
mov
gs
jmp
xchg
sbb
sbb
xor
adc
cmp
and
add
and
adc
and
clc
jle
mov
push
jne
sub
push
mov
jg
mov
je
adc
push
add
(bad)
out
rcl
sub
aaa
pop
sub
sub
iret
or
xor
dec
sbb
std
int
add
xor
sub
add
cmp
xchg
inc
push
lock
mov
push
psubq
sub
into
ss
sub
inc
loopne
jl
rcpps
sbb
bound
dec
xchg
push
add
jmp
or
push
retf
in
or
adc
outs
ins
or
les
lods
inc
push
lock
push
jecxz
inc
jae
es
push
pop
dec
adc
cwde
add
jl
std
and
lock
push
add
inc
or
mov
es
and
mov
dec
adc
jle
jno
retf
push
or
in
bound
or
add
pusha
aaa
or
mov
xor
fs
lock
test
es
lock
popa
and
xchg
add
pop
(bad)
pop
cmp
add
sub
pop
push
or
(bad)
call
or
adc
or
arpl
xor
cmp
inc
test
mov
sub
or
add
lock
inc
(bad)
(bad)
fisttp
cmp
shl
pop
pop
jbe
sub
or
cmp
or
mov
pop
and
or
or
or
push
pop
or
gs
mov
add
rol
scas
clc
pushf
js
push
and
xor
mov
loope
or
(bad)
(bad)
sub
dec
sbb
xor
scas
hlt
push
or
fistp
jmp
mov
or
adc
push
and
inc
jp
and
mov
and
mov
or
dec
mov
cmp
xchg
or
xor
or
push
dec
or
and
and
sbb
mov
mov
inc
add
mov
sahf
aas
sub
ds
inc
adc
pop
jl
or
or
adc
cmps
jmp
cs
fnsave
or
sub
cmp
or
pop
sub
pop
push
(bad)
or
or
or
sub
in
sub
xchg
sbb
test
push
pop
pop
mov
push
pop
ins
shr
inc
or
pcmpeqd
inc
push
adc
cmp
les
push
je
mov
call
jl
inc
inc
jge
mov
nop
fs
(bad)
push
or
add
mov
and
sub
sbb
dec
or
ins
cmp
adc
inc
or
pop
jno
sub
pusha
loopne
jle
xchg
or
and
and
lods
jge
sub
dec
or
push
sub
jo
or
mov
in
mov
mov
adc
jne
mov
(bad)
imul
mov
push
sbb
push
je
mov
or
or
inc
or
nop
es
push
outs
or
into
inc
jae
or
push
or
add
ja
es
and
add
bound
es
das
cmp
and
das
push
adc
imul
pop
and
ss
or
call
cmp
sbb
js
cmp
sub
dec
sbb
sbb
xchg
ss
dec
test
leave
sbb
mov
sbb
add
pop
pop
enter
push
or
sbb
sub
sub
lock
loope
aas
or
push
jg
dec
sub
call
jl
jae
pusha
and
cmp
sub
jg
cmps
and
sbb
push
mov
mov
leave
xchg
sub
jne
sub
aad
fnsave
or
mov
or
addr16
aas
or
ds
lea
lods
(bad)
mov
aas
or
pusha
or
ja
in
nop
add
adc
cmp
jg
(bad)
mov
aam
or
push
or
or
cmps
cs
test
adc
add
or
test
and
ds
(bad)
add
xor
sbb
lea
push
dec
call
movs
cmp
fdivp
das
lods
jg
push
lock
add
sub
inc
lock
out
mov
add
adc
mov
mov
cld
ds
or
adc
imul
or
add
push
test
dec
div
daa
mov
fbstp
jns
movs
jnp
sbb
movs
jmp
lods
gs
or
jg
popf
or
xchg
or
and
mov
shl
or
push
jmp
jp
test
ss
jb
movs
mov
or
or
or
ins
sti
nop
gs
sub
adc
xchg
addr16
lea
fisub
or
mov
xchg
add
js
pop
sar
and
cmp
and
pop
test
mov
mov
pop
daa
push
jne
or
xchg
xchg
leave
loop
or
test
pop
push
mov
or
and
cmp
jl
frstor
or
mov
inc
je
push
push
or
push
push
jne
push
sbb
pop
push
data16
cdq
or
adc
xlat
inc
mov
push
stos
imul
aas
mov
cwde
and
or
push
stos
jp
sub
dec
cmp
test
mov
fidivr
or
lock
adc
or
mov
sahf
dec
cmp
push
or
sub
sbb
sub
ds
jle
jmp
setno
in
sbb
sub
push
std
fbld
push
sub
sbb
or
or
push
jno
or
mov
sbb
and
push
bound
xchg
sbb
push
dec
fnstsw
cs
add
xor
and
and
sbb
dec
pop
mov
or
mov
outs
sub
cmp
dec
or
lods
pop
jg
rol
mov
xchg
pop
scas
adc
mov
adc
push
(bad)
sub
xchg
add
mov
repz
or
xor
push
pop
xor
mov
outs
pop
adc
ja
and
sbb
sub
push
cmp
int
push
leave
xor
xchg
adc
pop
cmp
mov
cmp
pop
cmp
sub
push
adc
fst
loopne
or
or
sbb
mov
clc
mov
adc
sbb
dec
jae
or
mov
jl
add
sub
mov
das
movs
push
sub
push
xor
pop
add
push
jb
inc
add
jg
sub
addr16
sbb
sub
xor
pop
adc
push
mov
sub
jmp
or
outs
xchg
xor
lock
dec
sub
loope
cmc
xchg
push
inc
adc
or
pop
mov
sbb
leave
adc
sbb
test
fistp
shl
push
js
jb
sbb
fwait
cmps
cmp
xchg
jl
pusha
add
ss
in
das
mov
or
pop
lock
add
or
push
jo
push
pop
mov
std
adc
sahf
cmps
sar
cmp
retf
and
adc
sub
add
faddp
push
dec
(bad)
ja
or
(bad)
je
ins
sbb
add
xchg
push
inc
or
cmp
aas
sub
mov
outs
sub
and
aaa
cmp
and
jae
sahf
pushf
xchg
inc
out
sti
inc
or
je
xchg
sbb
cwde
xor
shr
push
(bad)
div
cmp
sbb
aas
fs
pop
cmp
push
pop
jb
or
test
pop
js
adc
sbb
or
or
xor
pushf
inc
or
cmp
pusha
mov
push
adc
cmps
movlps
ss
pop
push
js
pop
cld
rol
push
and
sbb
push
push
adc
adc
or
and
sub
ficom
push
add
fisub
push
or
fwait
call
pop
adc
pushf
pop
sub
imul
push
sbb
(bad)
fisttp
add
sbb
adc
push
and
sub
or
mov
xchg
clc
adc
adc
mov
or
and
cmp
pop
loopne
fwait
cli
jo
pop
sbb
fisubr
sbb
fnsave
jle
imul
into
sub
dec
sub
scas
sbb
dec
jmp
or
push
add
sbb
daa
aam
ror
inc
pop
dec
xchg
push
sbb
adc
pushf
pop
aaa
std
or
(bad)
(bad)
push
inc
or
test
mov
daa
ds
mov
xor
pop
pusha
xor
add
jmp
adc
test
dec
and
push
icebp
add
fcmovbe
add
mov
arpl
and
and
jae
push
mov
stos
imul
das
mov
clc
fstp
(bad)
xor
lock
inc
mov
hlt
xor
jmp
cmp
or
jne
and
retf
fbld
das
mov
dec
add
push
adc
push
sbb
jbe
add
and
pop
jae
loopne
jg
lods
pop
push
sbb
stos
aaa
repnz
out
or
sbb
dec
inc
fsub
ss
in
sub
lock
or
and
xchg
movs
jno
stos
mov
cmps
repnz
push
xlat
retf
cmps
fstp
lock
add
push
or
adc
outs
push
adc
sbb
or
push
sub
das
xor
inc
mov
mov
sub
or
imul
inc
add
sub
(bad)
das
and
adc
mov
and
inc
push
jge
pop
sbb
sub
jmp
or
movs
movlps
fmul
mov
outs
cli
pop
das
pop
inc
pop
jb
sub
pop
add
mov
test
inc
dec
mov
add
push
dec
loopne
cld
cmp
pop
add
(bad)
adc
or
sub
cmp
ret
cwde
fimul
and
or
inc
inc
lock
add
or
and
jmp
sbb
adc
daa
push
inc
xchg
frstor
and
pop
adc
inc
fdivr
arpl
push
inc
add
jae
add
sbb
out
xor
rcl
popf
adc
ins
aas
addr16
pop
arpl
cmovb
cmp
in
cmp
push
scas
data16
inc
or
or
mov
ins
and
push
sbb
or
or
int
mov
in
or
sub
xor
cli
cmps
mov
retf
js
push
or
or
(bad)
push
and
add
or
sbb
scas
(bad)
fbld
push
sbb
cmp
sbb
(bad)
push
wrmsr
mov
or
sbb
adc
call
fadd
jb
cli
adc
pop
push
or
test
aaa
jmp
dec
sti
xchg
cmp
es
xor
jne
arpl
or
fiadd
in
jg
and
or
and
push
cmp
and
or
dec
or
pop
mov
pop
pop
or
adc
jg
dec
cmp
ror
mov
(bad)
push
out
mov
cmp
and
or
inc
xchg
and
sub
xor
ja
fisttp
or
sub
cmp
inc
cmp
add
cmp
lods
ja
push
sbb
inc
and
loopne
mov
sbb
jl
xor
cs
cld
cmp
jmp
lock
ds
sub
mov
sbb
mov
pop
push
test
push
cmps
(bad)
dec
push
aaa
or
js
inc
or
pop
push
pop
adc
adc
jo
idiv
adc
out
or
xchg
add
inc
dec
in
mov
sti
sahf
sub
push
repnz
lock
outs
loop
add
or
cmp
push
movs
jne
scas
pop
aaa
sbb
add
movhps
or
sbb
xor
cmp
push
jbe
je
mov
xchg
aaa
outs
or
cmp
out
push
shr
xor
sub
push
pop
push
sub
in
outs
and
pop
add
outs
cld
sbb
pop
dec
outs
or
dec
in
into
sbb
xor
lock
add
dec
push
mov
pop
bound
push
xor
push
mov
(bad)
jmp
or
sub
lock
or
(bad)
jmp
fld
bound
or
xchg
jbe
movs
sbb
and
dec
ins
xchg
mov
cmp
cld
sar
adc
sub
gs
fidiv
scas
pop
cs
movs
push
sub
or
cmc
rdpmc
push
inc
daa
outs
push
and
pop
lock
mov
adc
xchg
lock
mov
es
cmp
sbb
xchg
arpl
enter
add
sar
jge
jmp
adc
or
jns
and
cli
sbb
adc
je
and
shl
or
pop
das
mov
or
and
xchg
loope
call
and
xor
and
push
sbb
and
imul
rcl
mov
call
and
xor
dec
shl
pop
cmp
js
adc
add
jmp
add
aaa
add
ficom
xor
into
dec
add
push
jo
rcl
or
fwait
cmps
repnz
push
xchg
jge
sub
xor
(bad)
dec
or
das
sbb
mov
aas
inc
pop
sbb
inc
inc
mov
mov
into
cmp
dec
cmp
mov
sbb
or
add
mov
push
jp
cmp
mov
or
add
push
add
cmp
mov
adc
js
jbe
pop
and
sbb
dec
sbb
push
and
pop
movs
sbb
ret
xchg
test
push
rol
test
inc
or
pop
pop
adc
add
push
scas
mov
call
push
push
or
push
ret
popa
bound
lea
push
pop
std
(bad)
mov
or
or
or
push
sbb
inc
xor
pop
pop
clc
dec
push
call
dec
dec
push
sub
out
sub
or
ins
and
mov
jno
ror
and
add
mov
adc
and
cs
sub
adc
sbb
aaa
outs
cs
ins
push
sti
jmp
and
xor
push
xor
minps
or
dec
std
imul
sbb
dec
sbb
add
sub
xor
scas
mov
pop
sbb
sub
dec
sub
movs
xor
sub
sub
dec
mov
pop
cmp
idiv
xlat
ror
sub
xchg
cmp
add
test
and
outs
pop
fdivr
adc
push
cmps
and
sub
inc
cmp
scas
sti
add
and
and
jp
lock
jbe
xor
xor
sub
int
push
fsub
cmp
sbb
shl
div
pop
and
sub
sub
pop
and
pop
xor
pop
and
rcl
outs
sub
sbb
ds
inc
dec
sbb
cmp
pop
ins
idiv
dec
inc
push
dec
xchg
push
push
sbb
jae
int
lock
dec
jb
jbe
dec
xor
add
ins
dec
popf
aam
push
les
dec
mov
mov
outs
push
lock
inc
inc
inc
inc
dec
cmp
sub
sub
sbb
ja
outs
jmp
jae
cmps
jae
mov
stos
add
jae
xor
push
dec
sub
cdq
sub
inc
pop
das
inc
and
lock
cs
sti
fld
sub
jne
dec
inc
movs
mov
lds
jbe
cmp
cmp
lock
add
add
lock
mov
rcr
js
push
xor
cmp
pop
cmps
xchg
xchg
int
mov
data16
push
add
sbb
inc
call
pop
add
mov
adc
jnp
pop
cmp
test
ret
outs
cs
jne
imul
adc
push
inc
cmp
dec
mov
jg
mov
rcl
adc
pop
and
sub
push
inc
xor
xor
fsubr
sbb
push
cmp
xor
cmp
sbb
xor
sbb
sbb
push
dec
and
sbb
sub
sub
push
inc
sub
and
mov
add
xor
loopne
out
dec
sbb
xor
and
xor
int
mov
inc
push
pop
mov
xor
mov
loopne
push
mov
xor
cmp
adc
and
enter
or
inc
cld
jbe
mov
inc
cmp
sub
sub
or
sbb
xor
mov
aas
adc
pop
and
and
aaa
adc
add
js
add
push
push
sub
pop
jbe
inc
pop
inc
cs
and
cld
dec
daa
shr
or
cmp
xor
inc
shl
sbb
cmp
sub
div
hlt
imul
outs
push
hlt
sub
add
frstor
cmp
sbb
in
mov
push
push
adc
or
mov
je
in
add
mov
adc
xor
add
(bad)
sbb
add
sbb
and
push
ins
xor
mov
int3
(bad)
push
xor
inc
in
xchg
rcl
add
dec
sub
dec
rcl
add
stc
push
repnz
add
add
ss
or
adc
or
xor
jo
popf
inc
lock
leave
leave
leave
sub
push
in
test
dec
add
jo
popa
mov
jbe
in
cs
movs
lock
push
mov
ds
add
aam
xor
mov
hlt
or
ror
in
push
add
nop
sub
add
dec
mov
and
mov
imul
adc
add
or
or
cmp
sbb
or
dec
inc
sbb
xor
add
or
or
push
add
out
lods
dec
clts
pop
sbb
inc
daa
call
add
mov
adc
sbb
inc
push
sti
xor
add
adc
xor
loop
add
fmul
add
lds
aas
push
mov
bound
push
aam
adc
or
dec
adc
add
pushf
es
dec
stc
inc
lock
add
ret
and
sub
push
sbb
push
add
mov
mov
je
rol
add
add
mov
push
xor
xor
les
cdq
or
rcl
xchg
not
pushf
add
pop
fs
add
add
loop
cmp
pushf
add
and
shl
mov
adc
jnp
adc
push
and
or
add
push
jb
js
or
mov
cmps
imul
jo
cwde
mov
mov
(bad)
add
adc
dec
cmp
mov
add
ins
cmp
pop
adc
in
inc
fmul
addr16
enter
add
out
inc
inc
push
or
sub
adc
push
call
xor
add
in
or
push
or
sbb
movs
xlat
cld
push
pop
mov
dec
jmp
dec
arpl
mov
or
lods
xor
in
dec
or
or
mov
dec
mov
lods
mov
cld
add
mov
in
stos
or
mov
arpl
dec
adc
das
mov
or
or
movs
cwde
xchg
pop
adc
stos
mov
mov
dec
xor
push
add
adc
test
dec
mov
xor
add
push
sbb
in
mov
push
aaa
or
pop
or
je
pop
xor
cmc
add
out
cmp
pop
or
jl
adc
adc
mov
mov
adc
push
push
jl
sbb
sbb
or
adc
fist
xor
pminub
jae
sub
ins
adc
ret
mov
push
ror
xchg
fnsave
or
inc
push
ins
inc
ins
cmc
adc
push
mov
pop
sbb
(bad)
mov
dec
jg
stos
mov
or
inc
shr
mov
leave
mov
rcl
daa
imul
sbb
test
(bad)
retf
inc
sub
psubusw
mov
mov
sub
cmps
mov
adc
sub
sub
or
cmp
mov
push
jno
sub
aad
mov
sub
out
leave
outs
add
das
push
sbb
gs
mov
xor
push
pop
jmp
imul
push
aad
aad
push
stos
popa
adc
ret
retf
inc
mov
adc
sub
push
bound
jge
ror
cmp
(bad)
rcr
sbb
cmp
jbe
sbb
sub
and
adc
add
repnz
(bad)
push
or
in
fld
adc
sub
and
retf
(bad)
pop
and
sbb
push
sbb
jae
mov
pop
cmp
and
in
iret
pop
mov
fisttp
add
aas
dec
mov
cmp
inc
xor
out
and
and
pop
pop
das
daa
sbb
fsub
sti
mov
dec
sbb
test
mov
add
pop
daa
or
arpl
movs
adc
and
rcr
sbb
push
movhps
(bad)
out
(bad)
movs
mov
dec
iret
fldenv
movs
and
aad
fadd
pop
sbb
mov
jnp
xor
out
adc
lds
pop
lock
sbb
sub
psubusb
cmp
dec
sub
fsubr
or
adc
pop
mov
arpl
cs
adc
icebp
xor
push
mov
mov
or
dec
sbb
or
sbb
xlat
adc
and
test
sub
movs
jno
repz
call
aaa
fcom
sbb
scas
mov
mov
sbb
mov
jnp
and
mov
or
jmp
(bad)
xchg
fwait
ins
fcmovnu
bound
wbinvd
popa
sub
or
(bad)
mov
int
dec
(bad)
not
es
xchg
cmp
(bad)
add
(bad)
sub
pop
xchg
inc
mov
shr
cmp
ja
sbb
(bad)
aad
fs
fisub
ficomp
loopne
add
fistp
fdiv
ja
or
xchg
push
adc
mov
pop
stos
sub
adc
adc
inc
xchg
mov
sub
(bad)
fisubr
mov
or
mov
in
add
inc
sbb
aaa
pop
jno
push
xor
fwait
mov
pop
std
pop
mov
(bad)
push
dec
sbb
addr16
fist
mov
movs
and
dec
ins
ins
rcr
dec
cmps
aas
(bad)
adc
pop
inc
or
rcl
outs
inc
push
stos
and
sbb
or
sbb
call
sbb
inc
lea
mov
mov
jge
jge
jmp
sbb
in
ret
jecxz
add
lea
jg
add
add
inc
push
xor
and
and
mov
xor
fidiv
stc
cdq
adc
push
fnstenv
pop
lds
fidivr
(bad)
jmp
sar
cmps
popf
cmp
repz
sub
mov
cmps
push
int
outs
mov
xor
int
ins
add
jmp
xor
ins
push
movs
and
mov
aaa
mov
inc
sub
aad
ror
cmp
dec
sti
xlat
pop
xor
mov
pop
sbb
pop
mov
or
mov
add
or
sahf
pop
push
push
jne
sbb
sbb
add
scas
cmp
ret
xchg
inc
adc
mov
xchg
icebp
add
push
push
outs
jnp
xor
imul
dec
sbb
push
pop
push
inc
aad
lods
in
add
sti
test
adc
or
xor
push
add
lea
and
ret
sbb
dec
cli
pop
das
or
arpl
or
shl
mov
mov
cmp
cmp
jmp
and
push
mov
sbb
pop
push
adc
push
bswap
fimul
mov
retf
or
xchg
rol
dec
mov
push
mov
jns
mov
mov
push
aaa
popa
adc
pop
cmp
add
gs
push
pop
or
clc
fldcw
mov
push
jo
ins
xchg
and
out
test
mov
add
adc
pop
fcom
mov
or
push
pop
fsubr
pop
xchg
(bad)
add
add
xchg
adc
add
imul
scas
jnp
stos
push
mov
shr
repz
sbb
or
iret
(bad)
ss
daa
push
adc
or
pop
mov
test
or
cmp
scas
(bad)
fst
mov
pop
(bad)
sbb
fdivr
inc
push
lock
cmp
mov
cmp
sbb
push
and
add
mov
push
mov
jle
add
mov
cmc
add
sbb
push
push
cmc
loopne
fnsave
and
and
push
inc
inc
sub
cmp
pusha
idiv
or
xor
mov
and
lods
cmp
cmp
jle
pusha
xor
std
clc
(bad)
les
mov
es
jno
movs
jo
fnstcw
sbb
ret
sbb
mov
cmp
sub
jle
sbb
out
sbb
sub
or
sub
btc
out
sub
and
call
push
cwde
jns
sub
inc
jle
mov
sub
sub
arpl
jnp
or
adc
(bad)
int3
int3
push
test
data16
dec
js
(bad)
and
xor
sbb
pop
cmp
and
sbb
sub
add
nop
in
push
or
sbb
sub
sbb
dec
popa
xor
mov
mov
pop
add
or
mov
xchg
(bad)
(bad)
and
add
add
test
neg
and
add
add
add
add
xchg
clc
mov
or
push
ret
mov
das
mov
add
mov
sbb
jnp
fwait
add
pushf
sbb
push
add
or
fbstp
adc
push
shl
adc
rcl
add
adc
adc
or
or
pop
cs
jle
or
dec
sahf
mov
add
lock
bound
cmp
jb
adc
or
ror
movs
movntq
out
jge
dec
out
inc
cs
pop
mov
fist
jbe
shr
jae
arpl
cmp
cmp
out
scas
mov
sbb
mov
sbb
nop
ins
xchg
pop
dec
or
bound
scas
fdiv
fadd
into
test
jle
out
sbb
xchg
and
add
add
jmp
add
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
push
add
push
add
add
