sbb
mov
popa
sub
xchg
ins
or
bound
dec
out
push
pop
out
jb
(bad)
popa
sub
pop
pushf
jmp
inc
repz
push
sar
retf
bound
or
pop
xchg
loope
repnz
inc
pop
pop
inc
push
pop
xchg
shl
inc
(bad)
loope
mov
xor
sahf
add
into
bound
add
enter
js
retf
or
or
lea
sub
push
inc
mov
aaa
aaa
movs
call
popf
xor
cmps
dec
ret
shl
pop
mov
sub
retf
bound
or
inc
daa
cmp
popf
or
sub
dec
aaa
jmp
and
mov
sub
mov
pop
jnp
inc
or
or
or
sub
punpckhbw
dec
retf
jmp
in
dec
retf
xor
pop
jb
sub
xor
and
dec
retf
xchg
mov
retf
jmp
cmp
and
pop
inc
data16
inc
aas
and
push
add
add
xor
scas
leave
iret
out
inc
sbb
xor
push
add
and
repnz
in
and
add
add
repnz
in
out
aaa
mov
pop
and
shl
xor
jmp
or
mov
sub
push
mov
sub
int
inc
inc
or
mov
or
and
push
or
ret
or
sub
mov
popf
pop
daa
fwait
popf
sbb
jmp
cmps
and
dec
retf
mov
jae
bound
or
xchg
cmp
out
outs
or
retf
or
or
sub
push
jae
sub
imul
movs
call
or
sub
or
retf
bound
pop
popf
xor
hlt
xor
add
add
bound
aam
inc
scas
leave
iret
or
int
bound
or
sub
or
retf
popf
sbb
inc
dec
retf
popf
sbb
out
jbe
dec
retf
mov
retf
bound
test
sbb
or
retf
bound
test
fidivr
mov
xor
cmp
or
addr16
or
lea
mov
ja
bound
inc
movs
scas
div
sub
mov
retf
out
test
js
rcr
push
or
out
test
js
rcr
mov
ja
bound
cwde
mov
je
bound
mov
and
mov
loop
sub
xor
sbb
mov
dec
or
lock
fnstcw
cli
mov
xor
dec
xchg
sahf
repz
jmp
jmp
mov
jb
pop
je
dec
out
cmps
jmp
cli
sub
push
cmc
inc
movs
mov
dec
aaa
xor
mov
or
repnz
mov
retf
ret
or
mov
xor
js
or
js
mov
retf
xor
shl
mov
xchg
pop
or
mov
aad
mov
bound
cli
sub
push
int
cmp
movs
call
xor
call
aaa
xor
retf
pusha
sub
add
and
or
mov
push
sar
popf
pop
sbb
xor
popf
pop
sbb
jmp
movs
sar
mov
sti
mov
imul
retf
cmp
movs
call
popf
xor
push
sub
aad
and
into
sbb
dec
retf
loope
stc
retf
loope
icebp
retf
mov
adc
push
iret
inc
aaa
aad
into
sbb
dec
retf
push
shl
(bad)
retf
pop
ret
ins
xchg
or
ins
xchg
sbb
pop
std
js
and
dec
pop
sub
mov
jb
dec
aas
jmp
fnstcw
jmp
xchg
add
bound
dec
cmp
push
mov
popf
ins
(bad)
mul
js
pop
jmp
daa
and
repnz
adc
pop
aam
mov
shl
jae
ror
mov
movs
pop
xor
js
fisubr
sbb
cmps
js
fstp
popa
ins
movs
aad
mov
push
leave
mov
aad
mov
and
repnz
adc
pop
aam
or
arpl
and
(bad)
pop
inc
call
fistp
cdq
into
arpl
jo
push
les
jmp
jmp
into
arpl
mov
(bad)
repnz
loop
movs
into
xchg
cmp
les
aaa
movs
call
inc
aas
and
mov
cmps
dec
aaa
jmp
and
jmp
icebp
cli
xchg
(bad)
sub
pop
push
or
jno
pusha
outs
(bad)
movs
int3
cmp
in
test
test
fst
add
shl
jmp
cmp
jmp
icebp
inc
daa
and
push
xchg
cmp
into
sahf
jmp
pop
cwde
xor
xchg
retf
inc
call
daa
and
sub
mov
push
add
(bad)
movs
int3
cmp
in
test
test
fst
add
shl
cmps
outs
or
iret
jp
mov
bound
nop
stos
out
pop
inc
xchg
xor
jo
or
shr
mov
sahf
fist
(bad)
or
xchg
(bad)
adc
and
test
dec
fild
fbstp
fnstsw
mov
repnz
rol
sahf
sbb
xchg
cmp
les
aaa
movs
call
pushf
jmp
adc
loopne
aad
xor
jmp
popf
pop
add
xor
jnp
popf
rol
and
dec
xchg
outs
or
xor
jge
xchg
sahf
outs
pop
popf
mov
repz
scas
leave
out
mov
mov
pop
sub
dec
xor
jmp
jmp
pop
popf
xor
xchg
add
push
movs
cmc
loop
movs
retf
and
or
mov
bound
add
and
fcmovb
mov
retf
iret
push
sub
push
xchg
mov
jnp
inc
pop
and
addr16
call
push
shr
retf
push
lods
push
shr
fwait
jmp
cmps
dec
iret
popf
pop
or
rcr
jmp
cmp
jmp
xchg
popf
sbb
and
jae
xchg
mov
rcl
xor
xchg
bound
adc
loope
or
inc
movs
scas
imul
inc
or
retf
out
push
dec
bound
(bad)
bound
add
movs
dec
daa
imul
popf
xor
aad
and
or
sub
int
mov
push
ds
xchg
scas
int
xor
cmp
sub
xchg
popf
cmp
retf
bound
cli
mov
mov
in
test
addr16
mov
aad
or
lds
xor
rcl
jb
nop
stos
out
pop
inc
xchg
in
adc
mov
push
stos
daa
inc
mov
lods
xor
outs
or
mov
cmps
outs
or
mov
dec
(bad)
ins
test
xchg
and
test
loope
xchg
js
sub
xchg
js
sub
pop
ret
loope
xchg
js
sub
out
inc
out
repnz
xchg
inc
sbb
bound
xor
sub
repz
sar
mov
or
jns
dec
retf
out
test
xor
rcr
cmp
repnz
jmp
or
out
(bad)
sahf
dec
retf
(bad)
les
bound
test
out
push
add
inc
pop
rcr
jmp
icebp
dec
pop
(bad)
retf
bound
mov
arpl
or
mov
repnz
bound
inc
mov
ror
dec
cmps
outs
or
into
loop
dec
retf
adc
mov
loop
dec
retf
bound
mov
movs
into
dec
mov
cmp
bound
and
or
shl
cli
sub
test
xor
rol
pusha
sub
dec
and
lods
leave
mov
dec
cmp
mov
sbb
retf
bound
add
inc
pop
rcr
jmp
icebp
dec
mov
retf
bound
js
sub
or
inc
pop
rcr
mul
or
inc
mov
stc
repnz
pop
ror
pop
popf
shl
fwait
ret
mov
mov
xchg
popf
mov
test
sbb
sbb
lods
leave
mov
repnz
bound
shl
sar
jecxz
xchg
xchg
bound
dec
retf
bound
push
sahf
dec
retf
xor
repnz
movs
mov
popf
shl
inc
mov
push
repnz
scas
sub
outs
or
add
rcl
and
cmc
inc
movs
sbb
inc
xchg
movs
js
fiadd
jmp
push
or
out
or
mov
arpl
mov
aaa
sub
dec
aas
jmp
out
jmp
and
sub
xchg
arpl
cmp
data16
push
ret
out
imul
jns
sub
or
xor
test
sub
and
(bad)
xor
in
jns
loope
icebp
retf
jmp
cli
sub
push
jo
bound
push
popf
dec
retf
rol
(bad)
mov
sbb
inc
movs
scas
push
and
retf
sub
or
xchg
pop
mov
cmps
dec
ret
call
push
or
push
push
or
ror
retf
bound
mov
xor
bound
mov
popf
shl
dec
pop
ror
mov
or
fidivr
bound
jmp
sub
addr16
or
dec
mov
mov
jg
bound
retf
or
or
inc
mov
lods
xor
bound
inc
mov
fstp
pop
add
mov
sub
or
mov
jmp
or
rcl
fxam
popf
adc
in
adc
les
aaa
movs
call
retf
mov
jge
bound
pushf
(bad)
push
xchg
jnp
into
shl
or
inc
mov
shl
retf
or
dec
bound
repz
test
xor
rcr
das
(bad)
repnz
and
(bad)
out
add
bound
cli
sub
test
xor
rol
bound
jns
(bad)
lds
bound
repz
mov
repnz
mov
div
adc
mov
pop
sub
out
inc
out
repnz
out
repnz
shr
fwait
jmp
movs
dec
aaa
imul
outs
jecxz
ss
sub
repz
inc
test
and
repz
cmps
xor
retf
bound
int
out
add
mov
sub
repnz
shr
fwait
jmp
movs
dec
aaa
imul
dec
pop
and
mov
or
aam
xor
jmp
test
shl
xor
cmc
cmp
jmp
xchg
shl
xor
jns
mov
(bad)
stos
jnp
or
xor
shr
fwait
jmp
movs
dec
aaa
imul
dec
inc
and
mov
popf
shl
retf
ins
test
lea
shl
xor
and
mov
and
repz
lds
movd
xor
ror
ins
call
popf
ror
leave
bound
repnz
out
repnz
shr
xchg
pop
or
(bad)
aad
cmps
xor
ror
iret
addr16
mov
mov
shl
xor
xchg
ficomp
jmp
test
or
adc
and
bswap
bound
mov
or
mov
cmp
outs
adc
xor
sub
xor
shl
xor
xchg
shl
dec
cmps
and
xor
sub
mov
shl
retf
or
inc
mov
fisttp
or
mov
jecxz
popf
ror
xor
sub
gs
nop
outs
or
xor
xchg
shl
dec
cmps
and
xor
sub
mov
shl
retf
or
cmp
sub
or
xor
jmp
or
retf
dec
popf
shl
pushf
mov
leave
(bad)
pop
shl
retf
bound
or
xor
retf
bound
mov
or
mov
addr16
ror
xor
sub
gs
nop
outs
or
xor
xchg
shl
dec
cmps
and
xor
sub
mov
shl
retf
or
retf
bound
mov
or
mov
das
ds
ror
xor
sub
mov
retf
bound
dec
and
repnz
cmps
and
xor
sub
mov
shl
retf
or
cmp
sub
or
xor
jmp
or
retf
dec
popf
shl
pushf
mov
leave
(bad)
pop
shl
retf
bound
mov
and
repz
lds
movd
repnz
sub
mov
retf
bound
or
imul
test
popf
shl
retf
or
mov
mov
xor
scas
leave
(bad)
pop
shl
retf
bound
mov
and
or
xor
jmp
or
dec
into
shl
xor
sub
fmul
bound
repz
pop
sbb
bound
repz
lds
xor
jmp
mov
ret
jns
mov
gs
mov
scas
sub
xor
ror
retf
jmp
cmp
jmp
test
arpl
test
out
test
xor
rcr
out
repnz
popf
jp
inc
daa
rol
ins
test
iret
bound
repz
cmps
mov
popf
shl
fwait
jmp
movs
dec
aaa
jecxz
sub
bound
ret
sub
repz
movs
aad
mov
std
repnz
fcmovbe
repz
and
jae
pop
or
dec
out
shl
xor
out
imul
repnz
out
repnz
bound
repnz
out
test
xor
rcr
out
repnz
popf
jnp
inc
mov
mov
repnz
or
mov
shl
fwait
jmp
sub
dec
aaa
imul
dec
daa
sub
xor
rcr
out
repnz
popf
mov
test
and
aaa
bound
mov
sub
out
repnz
mov
repz
cmps
xor
mov
in
retf
bound
and
and
test
xor
rcr
pop
rcr
jmp
icebp
inc
mov
scas
jo
bound
mov
popa
sub
add
bound
repnz
jmp
rcr
pop
rcr
jmp
icebp
ret
mov
mov
retf
bound
repnz
popf
cwde
cmc
xor
shl
shr
out
repnz
or
or
outs
mov
repz
les
enter
retf
mov
aad
mov
shl
popf
mov
repnz
or
mov
mov
popf
shl
fwait
mov
arpl
bound
or
jmp
imul
repnz
out
repnz
popf
shl
inc
out
repnz
repnz
xor
rcr
bound
popf
xor
ror
jb
sub
xchg
shl
xor
cmps
xor
movs
aad
mov
ror
retf
bound
repnz
jmp
or
jmp
or
repz
inc
movs
cmp
sub
repz
cmps
xor
retf
bound
int
out
bswap
bound
inc
out
repnz
retf
xor
cmps
xor
mov
xlat
or
bound
repnz
mov
or
bound
and
inc
or
loop
movs
into
retf
into
lods
movs
test
xor
ror
retf
jmp
rol
out
test
xor
rcr
xlat
push
repnz
jmp
mov
bound
mov
dec
mov
or
inc
fild
xchg
popf
jp
inc
daa
rol
loope
icebp
retf
ins
test
retf
mov
shl
xor
mov
repnz
or
mov
shl
fwait
jmp
sub
dec
aaa
jecxz
mov
bound
sbb
bound
repz
and
inc
out
repnz
popf
cwde
stc
xor
rol
xor
cmps
xor
mov
movs
into
dec
pop
ror
retf
bound
jbe
shl
xor
and
dec
fistp
xor
mov
test
xor
rcr
xlat
pop
repnz
popf
ror
mov
nop
imul
cmc
test
loop
fs
ror
retf
(bad)
jmp
bound
aad
mov
xor
ss
shl
fwait
or
mov
mov
popf
shl
fwait
mov
leave
fucomip
mov
mov
popf
ins
(bad)
mul
js
jmp
cmc
xor
shl
jle
shl
xor
test
xor
rcr
out
repnz
lahf
shl
xor
lds
cmps
bound
aad
mov
mov
repnz
or
mov
mov
popf
shl
fwait
mov
retf
bound
cmp
jmp
mov
shl
xor
pop
or
xor
popf
jnp
xor
xor
outs
popf
shl
repnz
repnz
pushf
shl
inc
out
repnz
popf
jnp
inc
mov
mov
into
inc
out
repnz
popf
jnp
xor
shl
popf
cmps
mov
popf
shl
repnz
repnz
sahf
shl
dec
(bad)
repnz
movs
test
xor
ror
retf
bound
repnz
jmp
scas
mov
popf
shl
retf
push
and
xor
cmps
cmp
or
inc
or
xor
ror
pop
popf
shl
fwait
jmp
cmps
mov
popf
shl
fwait
jmp
cmps
mov
popf
shl
fwait
jmp
movs
aad
mov
int
xor
popf
jnp
and
fcomi
xor
jae
add
shl
cmps
outs
or
retf
push
mov
scas
jmp
or
daa
jp
pop
pushf
jmp
in
daa
leave
dec
mov
xchg
das
movs
push
or
xor
xchg
leave
bound
or
retf
repnz
pop
test
js
mov
mov
movs
repz
js
mov
retf
shl
xor
(bad)
cmp
int
retf
bound
xchg
stc
sbb
out
push
rol
(bad)
inc
daa
cmc
xchg
mov
pop
retf
(bad)
jmp
cmp
push
or
or
pop
pushf
fstp
cmc
cli
call
retf
or
sub
(bad)
(bad)
bound
push
lods
bound
test
enter
jle
inc
aas
and
xor
stos
(bad)
inc
daa
rol
and
or
sub
in
inc
daa
aad
or
scas
ror
ins
or
retf
shl
retf
int3
or
shl
(bad)
jmp
bound
xchg
shr
bound
mov
retf
imul
inc
icebp
das
or
retf
bound
add
or
mov
(bad)
(bad)
jp
dec
retf
and
js
bound
dec
retf
push
in
(bad)
cmc
inc
and
iret
and
and
or
mov
sti
int
and
cmp
bound
mov
mov
repz
or
repz
or
retf
xchg
int3
test
jne
or
and
or
mov
or
int
or
or
xchg
(bad)
bound
in
mov
ins
or
mov
sbb
jecxz
shl
cmp
bound
jns
push
in
in
popa
sub
sub
bound
or
xor
fisttp
ror
ins
or
or
lods
in
adc
mov
mov
ins
or
retf
mov
repz
fisttp
ror
ins
or
or
lods
in
cmp
xor
retf
or
or
add
in
in
pushf
shl
cmp
bound
jns
push
in
in
pusha
sub
mov
add
test
movs
sub
and
in
pushf
shl
xor
push
leave
mov
or
int
or
retf
bound
or
retf
bound
into
pop
or
cmp
inc
daa
leave
test
loop
adc
and
shl
arpl
xor
pop
bound
dec
retf
arpl
add
punpckldq
dec
retf
arpl
xor
jg
sub
leave
mov
or
int
or
retf
bound
dec
addr16
in
bound
call
(bad)
jp
dec
retf
inc
movs
(bad)
movs
int3
inc
xchg
imul
bound
mov
retf
imul
lahf
loope
push
mov
shr
dec
mul
dec
retf
pop
lods
or
imul
pop
repnz
out
retf
mov
add
int
or
into
sbb
dec
retf
mov
lods
daa
iret
ins
or
mov
and
mov
(bad)
movs
int3
dec
outs
xor
out
push
in
in
arpl
or
mov
push
leave
mov
or
int
or
retf
bound
or
retf
jmp
or
jmp
add
pop
mov
retf
bound
mov
retf
loope
or
fild
jge
fidiv
or
or
retf
bound
or
and
in
push
sub
(bad)
mul
sub
lods
(bad)
retf
ins
or
mov
xor
pop
cmp
xchg
loop
dec
pop
jg
into
push
dec
retf
pusha
mov
or
int
or
retf
(bad)
(bad)
inc
daa
rol
(bad)
sub
mov
int3
jmp
mov
bound
dec
addr16
mov
shr
retf
loope
add
sub
std
(bad)
jmp
sub
sbb
retf
ins
or
mov
add
into
outs
lea
adc
test
xchg
int3
test
inc
and
shr
fisttp
ja
lods
mov
or
js
sub
dec
retf
ret
adc
or
ret
mov
cmps
outs
or
push
push
in
dec
and
retf
int3
xchg
cmp
into
popf
xor
test
dec
aad
or
sub
and
or
retf
jmp
fsubr
loope
retf
bound
test
dec
aad
or
add
mov
in
add
dec
retf
or
bound
ins
add
dec
retf
or
mov
in
add
dec
retf
jmp
or
jmp
gs
mov
push
jnp
sub
test
loope
jns
xor
mov
add
add
inc
mov
outs
or
retf
out
push
push
jnp
sub
or
add
or
inc
daa
test
and
cmc
retf
jmp
or
jmp
mov
sbb
dec
retf
loope
(bad)
fcmove
cmp
(bad)
(bad)
inc
daa
mov
or
dec
fxch
movs
push
or
retf
xchg
into
test
daa
icebp
or
bound
dec
retf
jmp
in
xor
push
leave
mov
dec
jnp
sub
cld
lock
or
jae
movs
aad
mov
xchg
cmp
sub
in
or
dec
das
xor
sbb
iret
ins
or
retf
xchg
into
test
daa
mov
mov
xor
mov
sar
mov
outs
retf
bound
js
out
push
in
add
leave
mov
or
retf
or
repnz
bound
test
popf
pop
jmp
retf
popf
sub
and
repnz
xor
sbb
iret
ins
or
ret
cli
sub
push
push
nop
stos
out
pop
inc
xchg
icebp
(bad)
sub
xor
rol
xchg
dec
jmp
mov
push
test
bound
inc
aaa
rol
inc
or
daa
aad
inc
daa
lds
pop
aad
retf
out
push
repnz
int
or
vcvtdq2pd
retf
(bad)
fisubr
jmp
aad
daa
rol
or
movs
call
xchg
cmc
retf
retf
push
leave
mov
js
or
repnz
dec
retf
jecxz
in
retf
push
xchg
mov
rol
xor
xchg
popf
sub
and
or
pop
ror
(bad)
aam
cmp
pop
ror
(bad)
aam
cmp
pop
ror
(bad)
aam
cmp
pop
ror
(bad)
aam
cmp
pop
ror
shl
inc
daa
cmp
xchg
pop
movs
sbb
movs
push
dec
xor
fwait
or
add
dec
retf
ins
fwait
sbb
pop
out
add
sub
inc
(bad)
aam
sbb
mov
sub
out
ins
fwait
sbb
pop
out
js
jmp
mov
popa
and
mov
mov
add
sub
and
or
mov
sub
cmps
scas
outs
or
retf
bound
mov
fucomip
cmp
sbb
xor
xchg
xchg
bound
lds
js
inc
ss
cwde
scas
out
dec
std
push
mov
push
or
lds
inc
aaa
fld
(bad)
(bad)
sub
mov
addr16
ror
push
repnz
ror
mov
outs
or
mov
loop
or
pop
data16
loope
cmovnp
or
mov
(bad)
mul
(bad)
jmp
mov
data16
mov
bound
mov
lods
xor
inc
pop
sbb
cs
fucomi
jns
into
loope
or
sub
bound
push
mul
xchg
jmp
mov
pusha
lods
xor
pusha
pop
pop
inc
call
leave
pop
imul
sub
test
xor
bound
lds
js
inc
ss
cwde
scas
out
dec
std
or
loope
or
aad
mov
dec
enter
dec
mov
xchg
arpl
xor
pop
jg
xor
lods
xor
arpl
inc
call
retf
test
loope
push
dec
pop
sub
push
movs
cmc
dec
mov
add
sub
not
and
xor
gs
retf
bound
push
retf
bound
push
into
arpl
mov
data16
or
arpl
repnz
sub
loopne
lock
jb
nop
stos
out
pop
inc
xchg
pop
xor
push
leave
mov
js
mov
cmp
mov
(bad)
neg
ret
repnz
or
and
or
mov
in
bound
in
bound
repnz
sbb
dec
retf
ins
fwait
pop
(bad)
cmp
adc
aad
adc
lds
rcl
push
leave
mov
mov
retf
bound
or
dec
pop
ror
enter
fbld
sbb
popf
push
dec
retf
pop
push
sub
xor
aam
cmps
or
cmp
and
jmp
or
arpl
test
arpl
push
(bad)
lea
loope
or
jmp
or
dec
std
test
arpl
or
loope
or
aad
iret
push
les
sahf
call
mov
lds
aad
lahf
jl
or
loope
or
aad
int3
mov
retf
xor
jge
cmp
cmp
ds
retf
mov
xor
scas
leave
(bad)
cmp
js
fidiv
retf
(bad)
lds
nop
bound
in
xor
repnz
(bad)
bound
lea
mov
test
and
ror
mov
lea
repnz
pop
sbb
aam
(bad)
and
ror
mov
jns
loop
out
adc
ror
dec
xchg
ret
loop
or
pop
das
out
ins
fwait
cwde
cmp
test
xor
inc
mov
scas
outs
or
retf
bound
repnz
mov
and
loop
popf
inc
(bad)
aad
and
sub
iret
cmovb
mov
xor
sar
fidiv
test
add
cwde
outs
mov
cmp
dec
xchg
ret
arpl
mov
xor
in
adc
sub
add
sub
repnz
jmp
cmp
fwait
cwde
cmp
das
mov
ja
lods
mov
add
sub
cmp
das
xchg
ja
movs
mov
cwde
pop
mov
push
leave
mov
mov
mov
test
in
fwait
shl
inc
out
shl
outs
or
xor
movs
fimul
mov
int3
sub
into
bound
stc
and
sar
mov
cwde
mov
push
retf
bound
sub
call
retf
jb
or
xor
pop
fiadd
test
in
cmp
leave
mov
test
(bad)
shl
retf
mov
repnz
sub
repnz
cwde
aad
popf
shl
les
and
add
repnz
jmp
shl
mov
test
mov
das
push
sahf
sahf
cmps
cmp
retf
or
(bad)
nop
cmc
and
sar
and
sub
repnz
sub
aad
bound
lea
jecxz
or
xor
or
mov
popf
rcl
shl
popf
sub
mov
shl
out
ror
and
rol
dec
aas
shl
xor
sub
and
repnz
push
push
retf
(bad)
les
bound
loop
popf
in
out
leave
jmp
ins
or
xor
scas
test
(bad)
shl
retf
jmp
ror
sub
aam
mov
int3
sub
inc
aaa
jmp
cmp
adc
rol
xor
iret
cmovb
int3
bswap
das
ror
loop
sysenter
out
loop
popf
lods
mov
(bad)
shl
retf
sub
aad
or
(bad)
shl
dec
ror
sub
repnz
out
push
fbld
or
push
mov
push
push
leave
jmp
xchg
adc
ret
xor
mov
mov
jle
cmovb
mov
mov
shl
inc
idiv
cmovb
mov
mov
shl
inc
out
shl
shl
mov
mov
cwde
rcl
sub
shl
shl
mov
mov
cdq
shl
shl
dec
(bad)
shl
sub
or
xor
in
out
xor
repnz
sub
mov
push
popf
sub
and
loop
popf
in
out
leave
jmp
shl
inc
mov
repnz
and
sti
(bad)
ins
or
and
ror
sub
sbb
inc
mov
jmp
stc
and
shl
jb
or
retf
bound
ret
mov
pop
and
or
bound
repnz
aam
xor
bound
jo
arpl
mov
arpl
or
and
rol
retf
bound
bswap
jmp
jmp
dec
shl
xor
scas
mov
into
jmp
rol
pop
add
cmovnp
js
jmp
mov
popa
lods
xor
cmp
lds
dec
pop
sub
mov
lods
xor
and
outs
or
adc
pusha
movs
mov
xor
test
adc
aam
xor
bound
or
arpl
repnz
es
shl
mov
out
loop
popf
sub
loop
cmps
sbb
push
jbe
repnz
les
xor
and
xor
iret
cmovo
cmp
int3
bound
or
dec
pop
adc
retf
bound
xor
popa
sub
sbb
adc
retf
bound
xor
addr16
push
mov
mov
xor
and
mov
lods
jo
arpl
(bad)
aam
(bad)
and
rcr
xlat
icebp
shl
shl
and
repnz
jmp
shl
mov
and
ror
xor
in
out
leave
jmp
int3
and
in
leave
popa
pusha
icebp
inc
out
in
popf
rol
(bad)
shl
dec
(bad)
loop
popf
sub
fnsave
push
leave
mov
and
popf
ror
xor
and
xor
in
adc
sub
add
sub
div
out
pop
inc
xchg
pop
inc
aas
and
pop
cmp
lods
dec
aaa
ret
retf
movs
push
jmp
xchg
sbb
bound
icebp
inc
mov
rol
inc
scas
outs
or
retf
xchg
mov
push
scas
outs
or
retf
xchg
mov
loop
movs
pop
aaa
loop
push
outs
outs
lea
sahf
outs
adc
xor
sbb
and
fiadd
(bad)
or
push
lods
jo
jae
jmp
jmp
in
bound
mov
fidivr
sub
or
mov
sub
or
or
mov
int
bound
or
(bad)
or
daa
rol
sahf
and
dec
sub
xor
pop
dec
cwde
sub
loope
dec
mov
lods
dec
xor
mov
retf
add
sub
dec
daa
(bad)
push
inc
daa
rol
sahf
and
retf
bound
or
xor
pusha
aaa
jge
or
not
daa
sti
mov
js
loop
test
push
hlt
les
dec
xor
ror
mov
add
aad
(bad)
ja
js
loop
test
daa
lea
call
inc
daa
loope
mov
push
add
adc
iret
loop
test
fwait
dec
xor
js
xor
popf
xor
shl
movs
aad
and
popf
or
or
xor
lods
xor
bound
inc
movs
mov
pop
adc
gs
cld
arpl
repnz
mov
cmp
dec
xor
out
push
xchg
cmp
into
sahf
jmp
mov
inc
sub
or
add
call
xor
movs
retf
dec
cmp
bound
js
out
test
sub
jne
retf
out
test
sub
sub
sbb
inc
movs
sbb
inc
call
add
xchg
in
xchg
arpl
or
add
sahf
bound
test
loope
sbb
push
adc
add
inc
movs
inc
or
retf
or
addr16
or
gs
bound
in
ss
repz
cmp
int
push
mov
in
out
or
or
pop
push
sub
dec
aas
jmp
test
loope
sbb
add
daa
rol
or
jns
jmp
fucom
int
push
repnz
sahf
jnp
sbb
sub
pop
retf
bound
test
xchg
retf
mov
or
movs
call
je
or
mov
bound
or
mov
bound
add
retf
jmp
test
push
aad
or
shl
mov
xor
inc
or
retf
bound
inc
daa
and
loop
or
pop
aam
or
sub
pop
xor
and
scas
jle
retf
or
addr16
or
in
xor
pop
retf
bound
jae
sub
push
add
jge
pushf
fnstsw
cmc
cli
call
retf
xchg
retf
call
retf
bound
addr16
or
js
mov
pop
retf
bound
iret
push
in
out
or
addr16
or
or
xor
jmp
popf
pop
sbb
and
or
call
test
in
dec
xchg
cmp
into
sahf
jmp
pop
cwde
xor
xchg
push
adc
jecxz
icebp
mov
mov
out
or
jmp
icebp
cli
popf
(bad)
or
aam
xor
mov
push
stc
cwde
popf
pop
add
mov
retf
bound
cmp
sub
or
adc
xor
push
fisttp
mov
retf
bound
push
(bad)
push
lds
cli
mov
shl
shl
xor
pop
sub
iret
pop
add
pop
and
xor
and
aad
sub
push
xchg
cmp
into
sahf
jmp
pop
fwait
xor
inc
aas
and
dec
aaa
pop
dec
jo
fidivr
aaa
jmp
cmc
inc
daa
shl
nop
outs
or
retf
cmp
and
mov
(bad)
nop
outs
or
retf
loope
add
and
inc
icebp
push
sbb
dec
retf
mov
push
xchg
cmp
into
sahf
jmp
mov
push
jle
pushf
fldenv
add
cli
sub
push
retf
sub
dec
pop
ror
pop
leave
or
(bad)
std
loopne
retf
fld
or
dec
xchg
lods
jp
bound
or
bound
dec
leave
jmp
cdq
ins
sub
repnz
aam
or
loope
adc
daa
ror
loope
loope
jmp
cmp
jmp
lea
popf
sub
add
aad
cmovae
shl
in
cmc
or
jmp
add
rol
jge
sub
dec
mov
lods
jo
pusha
pop
or
lds
jae
and
mov
ror
pop
ror
and
sub
push
dec
(bad)
ins
call
jo
frstor
bound
mov
or
jmp
add
loope
aad
out
cmp
movs
dec
pop
arpl
inc
daa
and
jl
sub
cdq
fs
(bad)
aad
out
(bad)
int
or
xchg
cli
sub
push
dec
(bad)
ins
call
aad
add
das
jmp
movs
aad
mov
jbe
or
mov
mov
jb
or
mov
mov
add
popf
pop
repnz
popf
pop
push
and
dec
pop
repnz
popf
pop
repnz
popf
pop
and
xor
repnz
popf
pop
repnz
or
mov
mov
daa
popa
popa
pop
out
popf
pop
repnz
popf
pop
push
and
mov
mov
pop
cmc
popf
pop
repnz
popf
pop
add
push
jmp
lock
dec
popf
pop
repnz
or
pop
repnz
dec
retf
repnz
inc
jp
popf
pop
repnz
inc
iret
repnz
popf
pop
repnz
pop
repnz
popf
pop
repnz
pop
repnz
popf
pop
repnz
int
repnz
popf
pop
repnz
lds
mov
popf
pop
repnz
in
arpl
repnz
jb
or
mov
mov
outs
or
or
mov
mov
jb
or
pop
repnz
popf
pop
loope
or
cdq
repnz
pushf
mov
test
repnz
popf
pop
repnz
popf
pop
xor
test
repnz
popf
pop
repnz
popf
pop
cmp
mov
add
popf
pop
repnz
popf
pop
sbb
pop
repnz
or
pop
repnz
popf
pop
(bad)
dec
repnz
popf
pop
repnz
popf
pop
xor
test
repnz
popf
pop
repnz
popf
pop
cmp
mov
daa
popa
popa
pop
push
sbb
or
repnz
popf
pop
repnz
popf
pop
add
ror
or
movs
call
popf
xor
movs
dec
(bad)
fstp
and
dec
movs
aad
mov
movs
aad
mov
push
call
and
or
retf
in
xchg
shl
xchg
jmp
test
bound
or
dec
lds
call
repnz
sub
or
inc
fwait
add
push
xchg
aam
or
push
test
jmp
iret
adc
ja
jb
jae
dec
ret
arpl
dec
(bad)
aam
add
shl
jmp
iret
fs
retf
bound
add
jge
and
inc
jb
into
xchg
adc
popf
retf
bound
in
xor
repnz
jmp
jge
mov
fstp
bound
mov
xor
pop
and
jge
retf
loope
sub
(bad)
inc
daa
rol
push
add
ins
shl
xor
jae
add
shl
xor
mov
aaa
mov
dec
mov
add
(bad)
lds
bound
int
jmp
cli
and
int3
xor
hlt
aam
out
sbb
movs
iret
inc
aaa
ret
dec
fld
and
int
and
or
cmp
jmp
mov
lds
popf
ror
ret
mov
pusha
sub
loop
test
xchg
pop
popf
ror
loopne
retf
jmp
inc
inc
pop
lds
aam
loop
test
repnz
ror
in
mov
in
sub
inc
or
add
lds
out
bound
push
loopne
retf
jmp
icebp
and
jecxz
sub
dec
aaa
jmp
sub
icebp
iret
ret
loope
mov
or
scas
outs
or
adc
cmc
ror
cmp
ja
ror
sub
inc
movs
scas
dec
xor
aad
and
dec
retf
pop
push
dec
test
test
bound
mov
jl
in
out
fld
test
mov
dec
retf
jecxz
dec
retf
in
sub
cmc
in
sub
cmc
add
iret
(bad)
aad
int3
sub
fiadd
int
mov
dec
mov
jmp
push
into
cmps
loopne
retf
xor
mov
bound
rol
sub
pop
inc
xchg
(bad)
inc
daa
stc
test
xchg
cmps
sbb
scas
outs
or
aas
mov
push
and
dec
retf
pop
push
aad
and
sbb
mov
cmp
push
and
std
iret
ret
cmc
ror
outs
or
adc
repnz
imul
fwait
pop
and
iret
xchg
test
add
scas
outs
or
cmp
jmp
push
imul
fwait
pop
and
iret
xchg
test
add
scas
outs
or
mov
sub
iret
loope
in
ins
call
addr16
mov
in
sahf
shl
dec
cmps
and
addr16
or
or
ret
mov
inc
retf
bound
cdq
bound
in
popf
pop
in
cwde
popf
pop
jmp
retf
popf
pop
jmp
retf
xor
xchg
and
test
mov
in
sahf
jmp
mov
jp
or
jne
outs
call
(bad)
(bad)
inc
out
lock
movs
retf
dec
addr16
leave
mov
or
xor
outs
or
retf
(bad)
lds
sbb
dec
sbb
and
xor
jmp
push
inc
movs
scas
retf
xlat
test
shl
xor
fisttp
jmp
retf
mov
inc
inc
retf
bound
mov
xchg
cmp
out
cwde
sub
xor
mov
out
ins
inc
not
repnz
popf
sub
mov
jmp
int3
popf
shl
retf
mov
inc
retf
bound
lds
ds
popf
pop
test
push
fld
popf
rcr
repnz
dec
retf
or
cld
mov
mov
lahf
shl
fwait
mov
inc
retf
bound
mov
bound
mov
out
test
ss
rcr
retf
fs
ss
shl
mov
and
or
loop
sub
std
ss
rcr
arpl
or
mov
mov
and
or
ss
shl
push
sub
leave
mov
gs
xchg
outs
or
xor
jge
pop
cs
jb
bound
repnz
or
cld
mov
mov
shl
fwait
or
inc
retf
bound
dec
retf
or
cld
mov
sar
sub
repnz
inc
or
out
sub
or
dec
mov
repnz
jmp
mov
or
mov
bswap
bound
or
xchg
cmp
into
sahf
jmp
mov
jb
pop
pushf
jmp
push
(bad)
jecxz
sbb
jmp
cli
sub
push
push
xor
mov
or
retf
or
repnz
mov
inc
retf
bound
cli
sub
push
cld
dec
stos
ror
pop
sub
mov
popf
pop
cmc
popf
or
retf
popf
pop
sbb
xor
sub
in
sub
add
bound
nop
stos
out
pop
inc
xchg
mov
lea
inc
retf
(bad)
js
mov
inc
retf
bound
fwait
popf
pop
sbb
cmp
js
mov
sar
enter
pop
movs
enter
mov
or
or
sar
popf
pop
add
retf
loope
adc
shl
sub
pop
inc
xchg
or
add
cmp
movs
dec
aas
jmp
mov
ds
fwait
out
push
gs
das
or
mov
popf
pop
add
retf
imul
iret
push
in
out
popf
pop
adc
mov
pop
cmp
sub
push
and
mov
bound
repnz
bound
or
cmp
jmp
aaa
movs
call
pushf
jmp
xor
mov
pop
nop
sbb
sub
inc
movs
xchg
or
bound
std
inc
movs
jmp
retf
out
push
or
xor
and
mov
bound
cmp
mov
or
inc
or
mov
bound
repnz
bound
test
arpl
test
fs
sar
movs
call
pushf
fnstsw
adc
cmc
cli
call
mov
jns
mov
in
sub
mov
add
dec
aas
jmp
lods
retf
mov
repnz
aad
in
in
dec
and
mov
or
gs
xchg
outs
or
retf
shr
retf
ret
pop
or
mov
add
inc
movs
sar
retf
mov
and
push
into
sahf
jmp
pop
jb
data16
jmp
cli
sub
push
dec
ret
out
cmp
sub
cld
mov
mov
rcr
push
push
(bad)
movs
push
adc
ror
mov
test
adc
js
jmp
and
xor
mov
bound
cmc
loop
cmps
pop
(bad)
icebp
pop
add
scas
int
mov
(bad)
neg
or
jns
loop
xor
pop
je
int
pop
adc
daa
cmp
dec
loopne
sub
dec
xor
push
out
jmp
or
xor
xor
jmp
sbb
inc
aaa
rol
push
xor
pop
cmp
or
or
test
call
inc
daa
rol
xchg
dec
cmc
inc
daa
fld
stos
out
pop
inc
xchg
pop
inc
aas
and
daa
in
cmps
dec
cmp
push
cli
scas
mov
cwde
mov
dec
retf
bound
sub
jmp
es
mov
bound
and
iret
push
scas
std
mov
ins
fwait
or
loope
jl
pushw
dec
lock
aad
cs
dec
xor
ins
call
jmp
mov
bound
test
jmp
mov
bound
leave
test
movs
pop
sub
cli
mov
jp
mov
jp
xchg
xchg
outs
or
retf
bound
dec
xor
pop
push
dec
cmp
push
cli
scas
mov
push
push
xchg
cmp
into
sahf
jmp
mov
bound
or
retf
xor
jne
bound
mov
sub
repz
scas
test
popf
shl
retf
jmp
and
jmp
or
repz
sar
mov
loop
popf
scas
leave
ret
jmp
add
pop
sub
mov
retf
bound
repnz
pop
ds
and
or
xchg
imul
js
mov
mov
popf
shl
jae
sub
cmc
xor
rol
jmp
shl
mov
cmps
cwde
pop
popf
shl
inc
ficom
or
mov
bound
repz
fist
bound
or
bound
or
dec
mov
lock
in
mov
popf
ins
(bad)
mul
js
jmp
addr16
jmp
ror
xor
les
popf
ror
push
adc
dec
retf
popf
pop
add
retf
loope
add
retf
popf
cwde
icebp
xor
shl
jge
sub
in
and
or
retf
sti
(bad)
dec
cwde
sub
or
mov
and
imul
adc
retf
(bad)
or
xor
xlat
or
bound
or
inc
(bad)
repnz
xchg
outs
or
retf
bound
loop
bound
or
retf
sti
(bad)
dec
cwde
sub
or
mov
and
imul
push
fmul
popf
cwde
icebp
xor
shl
mov
in
daa
sub
or
dec
cwde
sub
or
mov
and
or
dec
movs
ret
(bad)
(bad)
bound
or
xor
and
dec
or
xor
cmps
mov
popf
shl
pushf
or
cld
mov
in
daa
sub
repnz
and
repz
inc
sub
and
or
dec
movs
repnz
retf
(bad)
lds
bound
or
xor
push
mov
popf
cwde
icebp
xor
shl
push
daa
sub
rcl
repnz
bound
dec
mov
mov
bound
mov
addr16
push
mov
popf
cwde
icebp
xor
shl
test
cmps
and
or
mov
mov
and
push
add
retf
(bad)
or
xor
xlat
or
bound
or
inc
(bad)
repnz
xchg
outs
or
retf
bound
cmp
jmp
in
es
or
cdq
or
std
mov
mov
popf
shl
pushf
mov
dec
retf
bound
repnz
popf
pop
sbb
xor
xchg
outs
or
retf
bound
dec
retf
bound
cmp
scas
test
es
or
cdq
jmp
rcr
pop
fmul
xor
sub
retf
push
sub
or
retf
bound
mov
inc
adc
jle
shl
xor
pop
dec
retf
bound
dec
retf
bound
cmp
scas
test
xchg
outs
or
xor
bound
or
bound
mov
addr16
push
mov
popf
cwde
icebp
xor
shl
in
es
mov
or
js
jmp
rcr
clc
fisttp
xor
ror
jbe
mov
bound
or
xor
push
mov
popf
cwde
icebp
xor
shl
adc
cmps
and
test
shl
xor
jmp
inc
and
or
dec
cwde
sub
or
mov
and
outs
or
and
outs
or
retf
bound
mov
lds
bound
or
inc
(bad)
repnz
xchg
outs
or
retf
bound
sub
retf
mov
shl
xor
les
bound
repnz
movs
std
loop
movs
retf
dec
(bad)
jmp
out
jmp
ror
dec
cmps
shl
xor
test
xor
sar
fimul
(bad)
(bad)
inc
out
repnz
movs
retf
inc
(bad)
repnz
cs
popf
shl
(bad)
aam
ss
call
cmp
scas
iret
stos
xor
retf
fsub
cvttps2pi
out
or
shl
xor
cli
mov
jp
jbe
sub
push
cmp
sub
repnz
lds
pcmpeqd
mov
popf
shl
dec
fucomip
repnz
lods
or
mov
xlat
fptan
xor
out
test
retf
popf
rcr
out
repnz
xchg
outs
or
retf
bound
cmp
(bad)
(bad)
inc
out
repnz
movs
retf
and
outs
or
retf
bound
mov
inc
push
cmp
sub
repz
dec
dec
retf
bound
dec
retf
bound
cmp
scas
test
xchg
outs
or
xor
bound
test
sub
mov
addr16
push
mov
popf
cwde
icebp
xor
shl
shl
sub
mov
shl
xor
sub
stc
xor
rol
xor
test
xor
rol
dec
hlt
shl
xor
test
xor
rol
mov
dec
xlat
jmp
cmc
xor
shl
sahf
arpl
or
dec
sub
cli
bound
or
dec
call
retf
xchg
shl
xor
test
xor
shl
mov
and
lock
lds
bound
cmp
shl
dec
stos
ror
pop
sub
mov
jmp
(bad)
xor
rol
cmps
shl
xor
test
xor
rol
popf
rcr
aad
(bad)
xor
rol
ss
jge
mov
out
repnz
jge
mov
cmps
sub
popf
cwde
stc
xor
shl
mov
popf
shl
inc
out
repnz
xchg
outs
or
retf
bound
cmp
jmp
in
and
or
dec
cwde
sub
or
mov
mov
and
jmp
or
retf
bound
mov
inc
(bad)
cmp
sub
repz
in
dec
retf
bound
dec
retf
bound
cmp
scas
test
xchg
outs
or
xor
bound
std
loop
movs
retf
xor
(bad)
ss
lds
mul
repnz
xchg
shl
xor
test
retf
popf
rcr
xlat
aad
xor
xchg
shl
dec
cmps
and
imul
dec
in
repnz
pop
std
mov
mov
and
ins
or
and
or
retf
bound
mov
inc
push
cmp
sub
repz
add
leave
ret
jmp
or
jmp
in
pop
sub
or
dec
cwde
sub
or
std
mov
mov
and
jmp
or
retf
bound
mov
inc
adc
jle
shl
xor
cmc
xor
bound
std
mov
mov
and
jmp
or
dec
stos
shl
xor
jmp
mov
push
(bad)
dec
cwde
sub
mov
retf
bound
cmp
jg
jbe
shl
xor
inc
xor
and
or
and
or
retf
bound
mov
inc
push
cmp
sub
repz
jno
retf
bound
xor
bound
cmp
scas
test
xchg
outs
or
xor
bound
std
cmp
movs
mov
popf
shl
inc
movs
(bad)
bound
or
xor
push
mov
popf
cwde
icebp
xor
shl
int
sub
in
pop
sub
or
dec
cwde
sub
mov
outs
retf
bound
xchg
shl
xor
inc
xor
and
or
mov
popf
cwde
icebp
xor
shl
jne
sub
test
dec
fld
bound
cmp
scas
test
xchg
outs
or
xor
bound
adc
and
repz
lods
xor
bound
xor
bound
cmp
scas
test
xchg
outs
or
xor
bound
pop
cmp
sub
repz
gs
bound
xor
(bad)
(bad)
inc
out
repnz
movs
retf
and
daa
or
xor
xlat
or
and
repz
cmp
retf
bound
shl
rcr
out
repnz
xchg
outs
or
retf
bound
xor
bound
cmp
scas
test
xchg
outs
or
xor
bound
std
retf
retf
mov
popf
cwde
icebp
xor
shl
jno
sub
in
pop
sub
or
dec
cwde
sub
or
mov
and
adc
and
adc
retf
bound
or
or
aaa
popf
shl
pushf
or
loop
bound
lea
or
cmp
test
bound
cmp
scas
test
xchg
outs
or
xor
bound
shl
sub
repz
add
retf
bound
xor
bound
cmp
scas
test
xchg
outs
or
xor
bound
jecxz
jno
or
retf
(bad)
or
xor
xlat
or
bound
or
inc
(bad)
repnz
xchg
outs
or
retf
bound
loop
(bad)
mov
and
adc
mov
pusha
inc
or
retf
bound
mov
bound
lock
fisttp
jmp
bnd
shl
xor
xchg
xor
bound
inc
(bad)
repnz
xlat
shl
xor
popf
shl
and
adc
retf
popf
cwde
in
lahf
shl
loope
sub
repnz
bound
or
ja
shl
inc
movs
jle
jne
sub
repnz
mov
xchg
(bad)
inc
out
repnz
movs
retf
xchg
cmp
les
aaa
movs
call
retf
bound
adc
dec
inc
call
xor
movs
retf
ror
loop
movs
retf
push
loop
bound
repnz
mov
ss
bound
mov
out
test
xor
arpl
std
xor
scas
leave
xlat
loop
repnz
repnz
mov
bound
and
sub
or
dec
mov
std
xor
inc
(bad)
mov
mov
or
or
and
ror
cli
call
inc
xchg
cwde
xor
mov
and
addr16
pop
or
dec
loop
repnz
jmp
bound
or
imul
mov
arpl
inc
daa
and
or
inc
lahf
shl
dec
movs
mov
retf
bound
inc
movs
scas
retf
into
xor
push
repz
pop
leave
outs
test
shl
xor
aad
xor
jmp
jmp
jne
popf
shl
jle
shl
xor
sbb
ret
jmp
rol
lahf
pusha
sub
inc
div
in
pop
sub
lock
sar
and
or
ss
shl
jle
shl
xor
fnstcw
retf
bound
jns
popf
rol
inc
adc
repnz
jns
retf
bswap
and
jae
daa
or
dec
push
shl
xor
jmp
stos
sbb
ss
rol
or
test
and
or
retf
bound
sbb
or
ss
rcr
int
dec
retf
or
bswap
bound
repnz
cmps
or
pop
ds
and
sbb
mov
sub
imul
(bad)
popf
rol
or
or
bound
repnz
out
test
ss
rcr
add
or
ss
shl
jle
shl
xor
cwde
xor
jmp
ss
shl
jle
shl
xor
mov
repnz
mov
cld
xor
scas
leave
jmp
test
ss
rol
pop
ds
and
or
xor
jmp
bound
and
sahf
shl
xor
lds
xor
test
test
ss
rcr
out
repz
jge
inc
pop
sub
repnz
test
ss
rol
or
retf
out
test
xor
imul
call
jae
shl
(bad)
bound
repz
sub
retf
bound
dec
mov
repnz
sub
test
shl
xor
jmp
bound
lods
movs
test
xor
jmp
and
jmp
or
repnz
lds
rcl
mov
xor
jge
dec
fcmovbe
repnz
inc
or
mov
bound
repnz
or
or
adc
sub
lock
lds
and
add
ss
shl
xchg
outs
or
retf
out
test
xor
repz
sbb
xor
sub
shl
or
repnz
inc
js
and
or
mov
bound
or
xor
sub
dec
add
sub
imul
nop
or
ds
bound
or
ss
ror
cmp
in
push
sub
or
xor
mov
or
or
dec
retf
out
test
xor
and
add
popf
ror
outs
(bad)
shl
xor
(bad)
adc
mov
xor
sub
or
outs
(bad)
shl
xor
lods
retf
sub
lock
jge
cmc
push
sub
jmp
movs
retf
jns
retf
bound
xor
mov
xor
lds
xor
test
shl
dec
push
sub
lock
jb
nop
stos
out
or
aaa
movs
call
popf
xor
test
imul
pop
xor
dec
daa
jmp
repnz
bound
pop
xor
ret
sbb
inc
aaa
rol
mov
inc
push
sub
test
push
sub
test
push
sub
repz
aad
icebp
retf
mov
(bad)
aad
stc
inc
es
in
push
sub
retf
sub
jo
arpl
cdq
or
push
or
xor
pop
and
sbb
xor
and
or
bound
xor
and
jl
rol
fwait
mov
cmp
(bad)
js
ins
call
ins
call
xor
sar
bound
repz
sub
(bad)
aad
icebp
retf
mov
(bad)
in
push
sub
pop
mov
aaa
ins
or
and
jmp
xor
test
rcr
sbb
or
fwait
xor
or
bound
or
xor
jmp
stos
out
pop
inc
xchg
in
push
sub
xchg
ja
mov
or
mov
shl
inc
movs
sub
inc
movs
jmp
jge
or
xor
jge
dec
mov
inc
imul
sub
int
out
or
loop
movs
retf
cwde
leave
sub
sub
add
pop
xor
jle
int
xor
pop
add
arpl
xor
jmp
out
in
xor
ins
adc
bound
inc
out
in
xor
jge
dec
mov
jnp
mov
or
cwde
popf
cwde
leave
sub
sub
add
pop
xor
jle
int
xor
pop
add
iret
sbb
and
jmp
cmp
and
add
enter
lods
loop
jne
or
or
movs
call
retf
mov
retf
bound
pushf
jmp
adc
and
jmp
mov
sub
mov
mov
jle
iret
arpl
or
cmp
jmp
adc
in
mov
adc
pop
aam
or
and
pop
and
jmp
dec
retf
xor
or
bound
std
cmp
movs
mov
mov
fst
xor
movs
retf
mov
out
test
sub
sbb
and
sbb
retf
bound
mov
inc
adc
dec
(bad)
int
xor
lds
punpckhdq
cli
sub
popf
rol
bound
cmp
scas
test
push
sub
or
cdq
out
nop
or
mov
out
nop
or
and
sbb
and
or
retf
bound
mov
inc
adc
dec
(bad)
int
xor
lds
bound
cmp
and
repnz
lds
jmp
mov
push
std
cli
xchg
movs
retf
and
daa
or
xor
xlat
or
and
repnz
lds
jmp
mov
push
retf
sub
or
xor
and
xlat
push
or
retf
bound
retf
adc
pushf
or
mov
mov
adc
pushf
mov
leave
fistp
fmul
out
test
sub
fmul
out
test
sub
push
or
dec
movs
sub
retf
(bad)
lds
bound
or
xor
sbb
out
test
sub
push
or
mov
out
test
sub
push
or
dec
movs
pop
and
(bad)
lds
clc
bound
or
xor
sbb
out
test
sub
push
or
mov
out
test
sub
push
or
and
daa
or
xor
xlat
or
bound
or
inc
fild
gs
mov
inc
fild
in
push
sub
gs
outs
or
xor
jge
adc
cmps
and
or
and
lds
shl
push
xchg
aam
xor
sbb
out
test
sub
pop
or
mov
out
test
sub
pop
or
and
pop
or
retf
bound
mov
inc
adc
dec
(bad)
int
xor
lds
bound
pop
cmp
sub
repnz
lds
bound
std
loop
movs
retf
and
or
retf
bound
mov
inc
adc
dec
(bad)
int
xor
lds
stc
bound
js
out
test
sub
ret
dec
retf
out
test
sub
sbb
retf
loope
sbb
retf
(bad)
or
xor
xlat
or
and
repnz
(bad)
bound
or
dec
(bad)
int
xor
(bad)
bound
std
cli
xchg
movs
retf
and
sbb
retf
(bad)
or
xor
xlat
or
and
repnz
lds
punpckhdq
push
bound
or
sbb
jmp
fild
fisttp
in
xor
jp
popf
push
sub
in
push
sub
or
dec
cwde
sub
or
mov
adc
fwait
mov
retf
bound
cli
sub
popf
rol
bound
repnz
mov
cmp
bound
cmp
retf
bound
test
xchg
outs
or
xor
jge
lds
or
add
or
retf
sti
(bad)
dec
cwde
sub
mov
outs
retf
bound
xor
repnz
inc
push
and
(bad)
int
xor
lds
(bad)
inc
frstor
sub
repnz
lds
punpckhdq
mov
bound
mov
xor
ss
sub
repnz
ret
mov
(bad)
int
xor
lds
retf
out
nop
cmc
adc
rcr
out
nop
or
xor
rcl
xor
lds
jle
repnz
sbb
int3
into
bound
in
adc
rol
movs
std
retf
retf
xchg
cmp
les
aaa
movs
call
retf
bound
pushf
fstp
and
sub
test
xor
mov
inc
call
inc
aas
and
or
inc
ss
or
idiv
loop
dec
sub
jmp
movs
retf
push
or
in
sub
repnz
call
and
sub
or
xor
inc
sbb
outs
lahf
shl
fwait
mov
retf
bound
retf
or
repnz
inc
mov
jg
outs
or
dec
mov
jmp
out
imul
dec
fld
or
retf
bound
repnz
out
test
ss
rcr
mov
or
xor
jmp
xor
repnz
mov
hlt
xor
scas
leave
(bad)
imul
dec
pop
das
or
mov
mov
pushf
shl
fwait
mov
retf
bound
repnz
out
test
xor
push
add
xor
movs
mov
shl
inc
call
mov
pushf
shl
fwait
mov
leave
xlat
jmp
or
jmp
retf
shl
xor
sub
jmp
retf
bound
repnz
pop
adc
popf
ror
jecxz
push
mov
or
repnz
lds
cs
rcl
mov
xor
jge
dec
fcmovbe
repnz
inc
or
mov
bound
repnz
or
or
inc
arpl
lock
lds
bound
or
ss
shl
xchg
outs
or
retf
out
test
xor
das
add
or
popf
sub
mov
dec
sahf
shl
xor
inc
js
and
or
mov
bound
or
xor
sub
dec
sbb
sub
imul
dec
ja
or
retf
(bad)
(bad)
bound
test
sub
bound
repnz
xor
outs
loopne
sub
jecxz
bound
repnz
mov
mov
(bad)
pop
shl
retf
bound
mov
bound
div
(bad)
xor
jmp
mov
sub
mov
inc
out
div
sub
push
retf
bound
repnz
popf
cwde
cdq
ss
shl
sbb
lods
loop
jns
or
xor
(bad)
bound
or
retf
xor
and
out
add
ret
and
imul
daa
retf
bound
repnz
mov
pop
inc
mov
cwde
cdq
ss
shl
add
out
jmp
ror
xor
mov
mov
movd
popf
mov
mov
shl
retf
or
retf
bound
repnz
mov
retf
bound
mov
lahf
shl
and
cwde
test
gs
sub
lock
(bad)
or
sub
inc
movs
jb
nop
stos
out
or
aaa
movs
call
popf
xor
sub
dec
lods
loop
pop
sub
and
bound
and
js
inc
ss
sbb
ror
inc
movs
lods
retf
sub
mov
and
add
retf
popf
pop
add
sub
mov
in
inc
sub
pop
mov
add
mov
mov
cmp
movs
dec
aas
jmp
addr16
lds
bound
pop
and
(bad)
bound
test
push
les
aaa
movs
call
retf
mov
pop
je
xor
aad
jmp
popf
pop
add
retf
jmp
add
pop
sub
mov
push
aad
or
rol
retf
bound
repnz
xor
jle
bound
add
sub
xor
jge
es
shl
dec
cmps
and
xor
sub
std
and
cmc
loop
movs
retf
jnp
icebp
dec
sub
mov
sahf
jmp
mov
jbe
mov
push
movs
dec
inc
call
or
jmp
jmp
cmp
jmp
add
pop
mov
out
push
es
bound
or
retf
popf
sbb
jns
sub
repz
mov
ror
push
es
bound
jecxz
or
or
mov
mov
bound
or
xor
loope
add
aaa
movs
call
je
pop
vpor
or
jmp
addr16
or
addr16
or
addr16
or
or
bound
mov
jb
retf
sub
retf
sub
cmp
mov
adc
bound
cmp
mov
add
bound
test
sub
mov
shr
and
sub
mov
int
or
retf
or
mov
(bad)
ins
or
retf
jmp
or
jmp
addr16
cmp
mov
into
jecxz
sub
cmp
mov
mov
retf
cmp
mov
scas
jecxz
sub
cmp
mov
sahf
jecxz
sub
or
mov
retf
ins
or
retf
or
mov
iret
ins
or
retf
jmp
cli
sub
push
or
or
dec
retf
mov
retf
bound
popf
or
dec
retf
mov
retf
bound
cli
sub
push
push
add
jp
inc
or
push
inc
call
xor
lds
in
bound
or
retf
or
repnz
xchg
sub
bound
xor
lods
mov
in
bound
or
retf
or
repnz
loop
dec
retf
mov
cmc
cmp
movs
dec
aaa
jmp
addr16
popf
sbb
and
or
retf
or
test
push
add
in
bound
adc
sub
or
retf
or
test
push
xor
in
bound
and
loope
sub
dec
retf
or
test
push
add
adc
bound
or
inc
dec
retf
mov
and
sub
or
jmp
ins
or
retf
or
repnz
out
dec
retf
mov
sub
bound
gs
jmp
or
dec
shr
and
aad
xor
jmp
loope
adc
mov
xor
test
fsub
mov
js
mov
xor
movs
retf
mov
xor
addr16
popf
ror
and
or
and
ret
bound
pop
and
sub
dec
retf
or
mov
push
dec
cmp
inc
or
retf
loop
gs
xchg
outs
or
retf
or
cmps
in
bound
or
dec
ins
or
imul
push
mov
push
jge
fisttp
cmp
bound
dec
retf
or
loopne
bound
and
or
mov
cmc
cmp
movs
dec
daa
jmp
addr16
popf
sbb
and
dec
jnp
sub
or
mov
inc
pop
mov
loop
gs
xchg
outs
or
retf
or
or
retf
or
addr16
or
addr16
addr16
or
or
mov
adc
or
retf
cmp
mov
ret
sub
cmp
addr16
popf
sbb
and
bswap
bound
mov
bound
mov
add
retf
or
or
retf
jecxz
idiv
bound
cmp
addr16
popf
sbb
and
bswap
bound
mov
bound
jmp
outs
or
retf
or
or
retf
or
dec
retf
or
dec
retf
or
or
retf
or
pop
mov
or
loopne
bound
and
or
mov
or
mov
or
mov
sbb
retf
or
and
fwait
or
out
and
sub
bound
addr16
popf
sbb
and
ins
jnp
sub
gs
bound
push
retf
loop
gs
xchg
outs
or
retf
or
or
retf
jecxz
and
dec
mov
mov
bound
or
mov
or
retf
popf
sbb
and
or
dec
ins
or
stos
shr
mov
or
gs
bound
push
retf
loop
gs
xchg
outs
or
retf
or
or
retf
or
dec
retf
or
dec
retf
or
or
bound
mov
or
push
retf
loop
gs
xchg
outs
or
retf
or
or
retf
fidivr
cmp
(bad)
(bad)
inc
daa
lds
popf
inc
or
mov
or
mov
sbb
retf
bound
or
fwait
or
mov
out
and
cs
bound
mov
cs
(bad)
push
or
repnz
es
dec
retf
or
or
retf
or
or
bound
retf
bound
nop
mov
mov
or
or
retf
or
dec
retf
or
dec
retf
or
or
bound
retf
bound
pop
mov
or
loopne
bound
and
push
or
mov
or
mov
or
mov
sbb
retf
or
retf
bound
mov
or
loope
bound
and
cs
bound
test
push
aad
or
sub
dec
retf
or
dec
retf
or
or
bound
retf
bound
pop
mov
or
loopne
bound
and
mov
or
mov
or
mov
adc
retf
or
mov
or
cld
mov
add
and
or
retf
shr
xor
sbb
xor
dec
mov
mov
or
or
mov
or
add
and
or
retf
shl
mov
cmc
loop
movs
retf
sar
dec
ins
or
stos
shr
mov
mov
cmp
bound
dec
retf
or
mov
or
lea
or
retf
or
dec
retf
or
dec
retf
or
or
mov
or
cld
mov
add
and
or
retf
ror
xor
sbb
xor
imul
retf
or
mov
or
out
bound
daa
and
sub
bound
in
call
retf
xchg
retf
xchg
xor
jae
or
movs
call
pushf
(bad)
sbb
retf
sub
dec
retf
popf
pop
add
xor
jmp
daa
(bad)
outs
or
xor
scas
leave
fcmovnb
and
cmc
loop
movs
retf
sar
ret
int
or
retf
jmp
cli
sub
push
dec
cmp
jnp
cdq
inc
sub
cmp
int
or
mov
cmps
dec
xor
std
fwait
or
or
cmp
sub
or
retf
mov
sub
bound
addr16
popf
sbb
and
xor
aad
mov
inc
sbb
loop
sbb
ror
sub
or
retf
jmp
and
jmp
addr16
popf
sbb
and
dec
jnp
sub
or
mov
inc
pop
mov
loop
gs
xchg
outs
or
retf
or
or
retf
or
addr16
or
addr16
addr16
or
or
mov
(bad)
or
addr16
cmp
mov
inc
jmp
sub
cmp
addr16
popf
sbb
and
fisttp
cmp
bound
dec
retf
or
or
retf
rol
mov
cmc
retf
retf
ror
sub
or
mov
not
bound
or
retf
repnz
leave
adc
bound
or
retf
or
xor
lds
aam
sub
addr16
or
retf
(bad)
cmp
iret
ins
or
retf
or
dec
retf
or
dec
retf
or
or
bound
mov
popa
sub
cld
mov
and
sub
adc
bound
mov
add
dec
and
jmp
and
ins
jnp
sub
or
mov
or
or
cmp
sub
or
aam
sub
or
xor
sub
dec
retf
or
dec
retf
or
or
retf
gs
bound
dec
retf
or
loopne
bound
and
or
mov
cli
xor
sar
dec
ins
or
(bad)
shr
jb
push
in
or
retf
bound
retf
bound
or
sub
or
retf
or
dec
retf
or
dec
retf
or
or
retf
or
retf
bound
dec
retf
or
loopne
bound
and
xor
mov
retf
sub
cmp
int
or
(bad)
shr
jb
pop
mov
or
or
lds
ror
sub
or
retf
or
dec
retf
or
dec
retf
or
or
retf
or
gs
bound
dec
retf
or
loopne
bound
and
or
mov
or
mov
or
mov
sbb
retf
or
or
mov
or
mov
out
and
adc
bound
addr16
popf
sbb
and
ins
jnp
sub
or
mov
loop
gs
shr
mov
or
mov
bound
or
inc
movs
inc
or
mov
or
mov
adc
mov
loop
gs
xchg
outs
or
retf
or
mov
bound
or
dec
ins
or
stos
shr
mov
cmp
sub
cld
mov
add
and
or
retf
ror
xor
sbb
xor
imul
retf
or
retf
bound
mov
or
out
bound
daa
and
adc
bound
in
xchg
shl
inc
call
aas
popf
rcl
stos
out
pop
inc
xchg
pop
je
dec
dec
out
ret
bound
or
mov
bound
add
retf
jmp
mov
bound
in
jnp
or
pop
push
sub
pop
retf
bound
dec
aas
sub
jecxz
mov
bound
or
jge
mov
and
lea
fimul
adc
mov
sub
push
and
sub
or
mov
popf
ror
xor
jns
or
addr16
out
push
sbb
retf
or
push
popf
ror
cli
call
or
movs
call
retf
bound
jne
ja
call
jmp
out
repz
movs
retf
dec
movs
gs
retf
bound
or
sub
repnz
lds
cmc
jg
or
retf
sti
(bad)
inc
mov
push
xor
push
repnz
gs
mov
sub
in
jp
or
mov
and
repnz
lds
bound
test
pop
cmp
jno
outs
or
xor
jge
lea
or
mov
and
repnz
lds
shl
lea
or
iret
mov
mov
popf
shl
fwait
mov
retf
push
sub
ror
mov
and
repnz
(bad)
bound
js
or
int3
mov
mov
popf
shl
fwait
mov
sbb
bound
sbb
cdq
in
dec
retf
out
test
xor
rcr
scas
cmp
ret
gs
outs
or
xor
jge
jge
sub
daa
retf
bound
sbb
nop
in
dec
retf
out
test
xor
rcr
sti
cmp
rcl
(bad)
sub
in
jne
or
mov
and
repnz
lds
bound
or
(bad)
pop
cmp
and
repnz
jge
test
or
mov
and
repnz
lds
fsub
addr16
or
or
retf
out
test
xor
rcr
bound
jmp
and
sub
or
retf
mov
popf
inc
int
imul
dec
cmps
add
test
popf
jae
add
enter
jnp
inc
pop
and
dec
jae
dec
or
mov
lods
cli
mov
sub
adc
int
movs
pop
aaa
xor
jb
shl
dec
cmps
and
addr16
xor
sahf
shl
mov
jae
add
enter
and
pop
jne
sbb
movs
jmp
cli
sub
popf
rol
jmp
gs
sar
popf
jge
xchg
je
or
retf
(bad)
or
xor
mov
lea
aad
xor
pop
sbb
inc
out
dec
retf
out
test
cmp
rcr
push
cmp
cmp
jmp
jbe
aad
xor
pop
sbb
and
dec
retf
out
test
cmp
rcr
jae
or
xor
inc
outs
or
sub
repnz
(bad)
bound
repnz
pop
sbb
push
out
dec
retf
out
test
cmp
rcr
mov
loope
retf
(bad)
(bad)
inc
out
cli
xor
movs
retf
dec
(bad)
cmc
xor
sub
or
mov
xchg
shl
fwait
mov
mov
call
mov
sar
popf
jge
push
ja
or
xor
sub
or
into
mov
mov
xchg
shl
fwait
mov
std
loop
movs
retf
dec
(bad)
cmc
xor
and
iret
mov
mov
xchg
shl
fwait
mov
retf
bound
bnd
gs
mov
sar
popf
jge
lea
or
xor
daa
js
or
es
shl
fwait
mov
sbb
bound
dec
(bad)
cmc
xor
es
or
into
mov
mov
xchg
shl
fwait
mov
sbb
bound
repnz
pop
cmp
int3
cmps
outs
or
xor
jge
cmp
or
xor
and
or
leave
mov
mov
xchg
shl
fwait
mov
sbb
bound
repnz
cmp
sbb
sar
popf
jge
jne
sub
dec
retf
out
test
cmp
rcr
fcmovb
repnz
ret
push
lahf
bound
or
retf
mov
leave
fucomi
test
cmp
ror
xor
pop
sbb
(bad)
popf
sub
push
retf
bound
dec
xchg
mov
retf
bound
inc
xchg
sbb
inc
movs
sbb
mov
and
repnz
cmps
and
repnz
in
add
das
or
retf
bound
repnz
ins
test
lea
shl
xor
and
dec
(bad)
icebp
xor
pop
add
sub
retf
movs
test
aaa
popf
ror
inc
movs
mov
repnz
or
out
bound
repnz
mov
adc
(bad)
loope
cmc
xor
lds
bound
outs
call
or
fwait
xor
jmp
push
inc
movs
push
jbe
aad
xor
stos
xor
bound
dec
retf
pusha
pop
cmp
or
out
bound
repnz
mov
retf
bound
mov
or
out
bound
repnz
mov
leave
ror
sub
cmc
xor
jge
test
mov
mov
call
mov
mov
pushf
shl
fwait
mov
adc
and
sub
repnz
lds
shl
mov
jbe
mov
pushf
shl
fwait
mov
retf
bound
repnz
mov
shl
xor
jge
leave
mov
inc
out
cmc
xor
jge
or
or
retf
out
test
xor
cmp
sub
popf
rol
mov
inc
out
icebp
xor
jge
sbb
shl
dec
cmps
and
ins
test
retf
or
repnz
in
or
bound
call
ret
mov
imul
or
xor
inc
popf
jp
sub
or
xor
jge
lea
or
shl
repz
jge
mov
sub
repz
jge
mov
sub
cli
xor
(bad)
sub
icebp
cli
xor
lods
mov
sahf
shl
xor
pop
sbb
xor
jmp
into
sahf
shl
xor
mov
out
icebp
cli
xor
scas
mov
xchg
shl
enter
cmp
test
popf
rol
xor
inc
shl
and
repnz
(bad)
bound
mov
call
retf
bound
inc
(bad)
repz
jp
xor
fcomip
cli
xor
mov
mov
retf
bound
inc
out
cmc
xor
jge
jle
aad
xor
in
retf
bound
inc
out
cmc
xor
jge
or
or
xor
jp
jbe
aad
xor
push
or
xor
sub
repnz
inc
or
xor
inc
addr16
or
or
retf
bound
repnz
xor
mov
and
loope
xor
jmp
int
out
lock
sar
and
aas
or
cmp
jmp
mov
cmp
xor
in
iret
bound
fimul
retf
(bad)
lds
fisub
pop
popf
xor
outs
test
dec
cmc
test
jecxz
sub
mov
inc
or
jge
in
jo
or
xor
and
mov
jae
or
fisub
push
dec
mov
popa
retf
bound
mov
fwait
iret
ins
or
inc
mov
inc
pop
and
or
retf
or
(bad)
fisub
in
jae
or
retf
bound
mov
out
test
and
pop
and
or
jp
sub
repnz
lds
popf
ror
xor
sub
or
mov
add
mov
or
and
retf
xchg
into
test
shl
jmp
in
jbe
or
(bad)
movs
int3
cmp
in
test
test
fst
and
xor
jmp
jl
shl
retf
in
jbe
or
es
shl
call
or
fwait
xor
jmp
push
inc
movs
scas
retf
stos
jmp
test
mov
xor
lods
mov
repnz
mov
ret
adc
retf
dec
int
repnz
lds
bound
or
ins
jmp
data16
shl
clc
movs
test
es
sar
dec
xchg
mov
bound
repnz
or
fldenv
and
repnz
lds
bound
scas
daa
popf
rcr
out
jecxz
popf
jge
pop
jb
or
xor
jge
mov
mov
xor
jge
jmp
mov
jb
or
dec
rol
xor
lds
bound
test
or
inc
mov
inc
leave
and
sub
or
retf
or
mov
rcr
bound
repnz
sbb
jmp
mov
sub
xchg
out
bound
jp
sub
or
retf
mov
mov
mov
repnz
push
addr16
bound
lods
(bad)
xchg
mov
sub
test
es
rol
bound
jp
sub
or
retf
mov
retf
bound
repnz
push
test
cs
bound
out
jl
or
retf
or
ret
and
sub
or
retf
loope
dec
inc
fist
cmp
mov
jb
sub
mov
push
sub
mov
shl
inc
mov
inc
or
bound
mov
les
test
push
sub
or
or
daa
xchg
repnz
or
ret
xor
lds
add
repnz
in
mov
adc
pop
aam
retf
out
pop
mov
xor
repnz
popf
pop
mov
retf
or
addr16
or
js
mov
add
bound
or
xchg
repnz
or
ret
xor
xchg
bound
repnz
in
mov
adc
pop
aam
retf
out
pop
mov
xor
repnz
popf
pop
mov
retf
or
addr16
or
js
mov
js
mov
add
bound
cli
sub
test
es
rol
xor
out
or
ror
push
dec
retf
jmp
rol
lea
jmp
cmp
jmp
gs
sbb
(bad)
bound
push
mov
sub
add
bound
retf
bound
aad
mov
cmp
aad
daa
xchg
push
retf
bound
or
fnsave
sub
or
mov
jge
ins
ins
sub
cmp
int
or
mov
bound
mov
or
loopne
bound
and
sbb
and
or
and
and
mov
cmps
sub
dec
outs
sub
or
push
mov
and
or
mov
in
outs
sub
loopne
popf
movs
aad
mov
and
xor
test
xor
jmp
bound
inc
retf
bound
repnz
out
test
and
adc
dec
retf
or
mov
pop
mov
gs
lea
stos
mov
adc
dec
inc
pop
leave
mov
in
(bad)
shl
inc
mov
mov
repnz
or
jle
bound
mov
bound
or
and
bound
mov
or
add
bound
dec
outs
sub
stc
retf
addr16
or
mov
jp
dec
das
xor
fcmovb
bound
or
fwait
mov
add
bound
mov
daa
leave
pop
and
and
push
cmp
cmp
mov
pop
das
or
je
push
inc
jecxz
adc
bound
cmc
fld
xchg
retf
jb
loope
pinsrw
or
(bad)
(bad)
fld
bound
or
retf
bound
push
retf
jns
pop
cmp
retf
bound
cmp
or
retf
in
push
or
mov
add
sub
loopne
(bad)
cmp
mov
repnz
test
ss
ror
or
loopne
bound
jb
shl
dec
cmps
cmp
repnz
aad
xor
jmp
xor
mov
and
or
dec
jmp
test
ss
rcr
push
imul
or
pop
xchg
shl
xor
test
ss
ror
sbb
in
xor
adc
mov
lahf
shl
loopne
icebp
lock
scas
in
jmp
shl
pop
scas
shl
xor
std
jns
or
dec
xchg
repnz
test
ss
rcr
out
lock
push
mov
lahf
shl
fwait
or
dec
jnp
sub
or
inc
out
lock
movs
retf
inc
leave
mov
add
sub
mov
popa
mov
mov
push
or
mov
or
mov
js
xor
mov
popf
rcl
pop
leave
mov
js
popf
sbb
and
repnz
jmp
and
jmp
in
gs
cmc
inc
movs
mov
mov
mov
(bad)
lds
(bad)
bound
or
retf
xchg
retf
mov
repnz
jmp
daa
and
or
and
or
retf
bound
and
cmps
dec
fucomip
test
xor
repnz
dec
retf
push
imul
retf
push
adc
into
push
test
sbb
into
xchg
or
ss
neg
ss
push
pushf
dec
retf
push
xor
into
ret
retf
push
cmp
into
outs
or
ss
jbe
dec
retf
ins
test
int
sub
sbb
retf
jmp
shl
into
push
pushf
dec
retf
push
cmp
dec
retf
push
and
dec
retf
pop
and
jb
or
or
or
retf
popf
pop
sbb
retf
jecxz
sub
mov
scas
test
lahf
shl
retf
jmp
or
jmp
or
repnz
lds
dec
xchg
repnz
jae
retf
bound
mov
out
test
xor
rcr
push
lds
shl
jbe
shl
xor
pop
sub
mov
or
or
mov
sbb
bound
or
retf
bound
repnz
out
lock
jmp
cmp
loop
jns
and
or
retf
bound
repnz
sar
dec
shr
and
daa
or
xor
ror
mul
js
loope
or
in
dec
retf
out
mov
xor
rcr
dec
mov
add
popf
ror
retf
or
or
shl
(bad)
out
dec
retf
mov
addr16
bound
or
das
lahf
shl
inc
movs
mov
repnz
out
test
ss
rcr
push
(bad)
dec
retf
out
test
ss
rcr
mul
or
mov
out
test
xor
rcr
push
xor
ret
lea
shl
xor
pop
sub
mov
or
or
mov
sbb
bound
or
xor
scas
lds
lods
xor
bound
dec
call
retf
or
in
bound
and
or
outs
and
or
retf
movs
test
xor
ror
dec
(bad)
repnz
test
repnz
or
pop
push
sub
mov
or
or
mov
scas
ret
in
sub
out
repnz
sub
dec
(bad)
repnz
cmp
or
jmp
or
repnz
mov
repnz
or
mov
mov
lahf
shl
fwait
mov
leave
fisttp
ror
retf
repnz
popf
sbb
fldcw
or
xor
sub
addr16
or
in
bound
and
and
retf
popf
sbb
loope
sub
or
sub
test
ss
rol
popf
rcr
out
lock
jge
cli
mov
inc
out
lock
jge
icebp
imul
or
xor
jge
dec
dec
retf
mov
mov
popf
shl
retf
pop
or
mov
mov
bound
dec
retf
mov
xchg
enter
xor
test
test
xor
rcr
out
lock
jge
ins
mov
inc
out
lock
jge
sbb
or
xor
sub
repnz
jge
dec
dec
retf
mov
add
retf
repnz
pop
or
movs
mov
mov
bound
dec
retf
mov
retf
(bad)
les
enter
inc
arpl
repnz
in
mov
adc
pop
aam
xor
sub
mov
or
or
mov
adc
bound
or
xor
sub
mov
shl
inc
out
or
popf
shl
sti
push
sub
repnz
addr16
or
or
ret
bound
dec
retf
mov
or
(bad)
(bad)
iret
leave
bound
repnz
cmps
mov
shl
mul
mov
call
retf
repnz
out
test
ss
rcr
push
(bad)
dec
retf
out
test
ss
rcr
xchg
mov
out
test
xor
rcr
push
or
inc
int3
bound
repnz
pop
sub
mov
or
or
mov
push
bound
or
xor
sub
mov
out
or
popf
shl
sti
push
sub
repnz
addr16
or
or
int3
bound
dec
retf
mov
pop
leave
bound
repnz
mov
repnz
stos
ror
pop
sub
mov
pushf
shl
xor
out
jg
jecxz
inc
in
sub
repnz
mov
repnz
or
mov
mov
lahf
shl
fwait
mov
add
bound
addr16
or
addr16
or
dec
mov
mov
mov
pushf
shl
inc
call
xor
cmps
mov
lahf
shl
inc
movs
inc
pop
bound
xor
fpatan
xor
lds
not
jmp
dec
inc
outs
sbb
lds
lods
xor
bound
inc
mov
(bad)
xor
jg
mov
popf
cwde
stc
xor
addr16
mov
lahf
shl
fwait
or
rcl
fpatan
xor
(bad)
bound
repnz
in
mov
adc
pop
aam
retf
out
mov
pop
fwait
out
mov
ss
rcr
xlat
fpatan
xor
lds
retf
out
test
ss
rcr
pusha
inc
adc
jle
shl
xor
movs
or
bound
xor
fpatan
xor
lds
iret
bound
dec
retf
mov
or
bound
mov
bound
mov
or
into
iret
bound
repnz
ret
bound
addr16
popf
cwde
stc
xor
sub
outs
mov
lds
lods
xor
bound
inc
mov
(bad)
xor
jg
mov
popf
cwde
stc
xor
addr16
mov
lahf
shl
fwait
or
xor
fpatan
xor
(bad)
bound
test
shl
dec
popa
sub
leave
mov
or
retf
or
mov
or
mov
pop
mov
gs
lea
aad
repnz
jmp
cmp
int
or
retf
jmp
cli
sub
test
ss
rol
jbe
js
popf
pop
add
and
or
or
pop
inc
xchg
pop
inc
pop
and
pop
inc
call
or
push
or
retf
bound
test
push
sbb
retf
bound
dec
retf
pop
repnz
test
retf
bound
lock
lds
xor
lods
mov
iret
bound
dec
retf
pop
repnz
dec
retf
mov
retf
bound
cmp
int
or
xlat
(bad)
ins
or
retf
jmp
and
jmp
ss
jle
dec
retf
pop
repnz
dec
retf
mov
retf
bound
cmp
int
or
jmp
ins
or
retf
ficom
jmp
sbb
(bad)
adc
and
cmp
iret
ins
or
retf
pop
sbb
xlat
loop
jns
and
cmp
outs
or
retf
mov
test
dec
aad
or
div
dec
sub
retf
jmp
or
jmp
ss
loop
dec
retf
pop
sub
retf
pop
sbb
and
sub
test
arpl
test
sbb
outs
and
or
dec
dec
retf
pop
sub
retf
pop
sbb
int
xor
bound
sub
dec
retf
pop
sub
retf
imul
fstp
cmp
pop
and
sub
xor
test
cmp
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
bound
xor
jne
sub
xor
pop
push
addr16
mov
retf
bound
icebp
ret
and
movs
push
retf
xor
push
xlat
out
and
in
jns
loope
sub
mov
or
mov
or
in
bound
addr16
xor
loop
popf
rcl
mov
cmp
sbb
out
pop
sub
out
cmps
test
out
popf
int3
or
out
push
int
popf
shl
xor
xlat
jmp
hlt
add
mov
(bad)
outs
hlt
stos
fiadd
or
or
or
mov
or
retf
(bad)
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
popa
outs
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
repnz
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
outs
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
(bad)
sub
data16
or
retf
.byte
