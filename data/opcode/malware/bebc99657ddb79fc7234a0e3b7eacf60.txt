add
cmps
into
jb
movs
cmp
jb
ss
xchg
mov
jb
cli
pusha
and
mov
push
mov
pop
mov
cmp
xor
cmp
jb
mov
jb
cmp
stc
out
adc
sti
xor
(bad)
xlat
sbb
push
xchg
inc
stc
scas
mov
cmp
cmp
pop
ins
cmp
push
std
cmps
cmp
jb
mov
push
and
outs
data16
sub
pop
dec
cmp
(bad)
ins
sub
aad
mov
ins
mov
and
outs
data16
(bad)
xor
mov
outs
xor
aaa
je
cmp
jge
test
jb
mov
mov
jl
sti
out
nop
loop
jnp
jmp
sar
sub
icebp
pop
(bad)
cmp
or
xor
xor
aaa
jb
inc
gs
cs
and
out
mov
inc
adc
stc
not
mov
xor
add
and
sub
push
dec
adc
stc
xchg
or
xchg
call
mov
inc
adc
sub
addr16
es
outs
sub
fs
jnp
dec
sbb
xchg
mov
jp
rcr
lea
mov
mov
(bad)
cmc
push
mov
(bad)
int3
icebp
xor
mov
std
sub
(bad)
div
mov
std
dec
pop
int3
lea
cdq
shr
mov
int3
and
int
pop
mov
hlt
ja
mov
test
xor
xor
sbb
cmp
icebp
xor
mov
sbb
fs
ret
cmp
cmp
dec
push
idiv
stc
inc
jne
cmp
jb
rcl
pop
mov
mov
adc
call
cmp
mov
cmp
jb
cmp
std
bound
dec
(bad)
mov
cmp
jb
rcl
sbb
cmp
jb
shl
push
add
xor
ins
mov
outs
adc
sbb
sub
repz
mov
jb
aad
and
outs
mov
dec
xchg
jle
cmp
stos
(bad)
sbb
xor
mov
cmp
adc
sbb
adc
jb
mov
adc
lea
mov
adc
sti
xchg
imul
or
sti
out
lds
xchg
inc
xor
cli
push
shl
cmp
inc
and
in
cmp
and
outs
mov
aad
ins
sti
pop
into
aam
es
or
xor
mov
push
xor
mov
xor
sub
mov
or
jb
ret
cmps
or
cdq
cli
push
xor
es
mov
jp
cmp
jmp
rol
jns
xor
ror
add
leave
cmp
add
jmp
or
rcr
call
aas
dec
pop
(bad)
xor
cmp
mov
shl
repz
xor
mov
mov
xchg
stc
ins
sub
lock
sub
mov
scas
outs
fs
jg
js
shl
sub
mov
aaa
pop
imul
mov
push
xor
stos
ror
mov
(bad)
push
push
mov
cmp
int3
pop
mov
dec
das
sbb
dec
iret
call
int3
pop
pop
shr
test
cmp
mov
pop
cmp
sbb
xor
sar
sti
pop
into
aam
out
mov
sub
sub
bound
xchg
pop
jle
mov
mov
jl
and
and
jo
push
xor
stos
shr
mov
iret
inc
jbe
stc
fadd
dec
sub
mov
sub
pop
pop
shl
mov
dec
iret
call
inc
jbe
stc
fdivr
stc
jae
movs
mov
xor
sub
mov
xchg
and
out
fs
pop
mov
sub
fild
dec
mov
mov
(bad)
loope
mov
push
cmp
sbb
loop
aaa
pop
mov
xchg
sub
(bad)
fnstsw
mov
(bad)
loope
add
pop
cmp
stc
div
cmp
cmps
cmp
mov
or
push
mov
(bad)
mov
dec
and
mov
jbe
(bad)
cmp
aaa
pop
ror
repz
jb
mov
mov
(bad)
mov
dec
or
mov
icebp
imul
repnz
cmp
pop
pop
add
lods
mov
mov
std
(bad)
cli
mov
mov
retf
xor
add
mov
dec
aas
stc
(bad)
sub
neg
int
daa
je
adc
mov
pop
ins
mov
lea
sub
bound
(bad)
mov
dec
cmp
cmp
inc
sub
fsub
rcr
sub
mov
mov
lea
lods
(bad)
mov
lea
sti
sbb
pop
(bad)
mov
mul
cmp
(bad)
cld
addr16
xchg
and
das
and
outs
mov
mov
and
and
jl
sti
out
mov
mov
jl
sti
out
add
cmp
stc
fidiv
mov
sub
les
pop
sbb
popa
mov
add
call
mov
and
stc
out
mov
call
mov
sub
data16
inc
mov
fs
(bad)
xor
jbe
mov
sti
sbb
push
rcl
jb
inc
cmp
jo
push
(bad)
mov
test
leave
jne
shr
mov
sub
sti
mov
ret
inc
in
in
push
jne
ss
pop
jnp
stc
out
cmc
jbe
cmp
mov
jl
test
sar
cld
addr16
xchg
and
and
cmc
outs
mov
data16
xor
out
mov
daa
pop
(bad)
ss
pop
jnp
sti
push
shr
stc
out
cmp
cmps
add
aas
scas
lea
add
push
cmps
or
xor
je
jl
sar
out
mov
xchg
sti
out
mov
sub
div
mov
push
retf
mov
pusha
xor
cmp
(bad)
loope
int3
pop
scas
push
ins
xchg
loope
gs
iret
stc
fidiv
shl
mov
(bad)
int3
and
inc
iret
xor
pop
(bad)
int3
icebp
addr16
data16
inc
push
outs
jle
jle
loop
mov
jae
mov
(bad)
(bad)
xor
xor
cmp
sti
gs
xor
mov
cmp
pop
dec
cmp
mov
dec
xor
cmp
fdivr
dec
add
into
aam
out
mov
mov
repnz
and
fldenv
sbb
aas
call
aas
call
lock
jbe
and
and
mov
(bad)
lock
aaa
pop
mov
call
push
xchg
and
adc
cmc
outs
mov
ins
cmc
jge
mov
pop
xor
lds
mov
mov
imul
cmp
cli
mov
sbb
jb
stc
cmp
out
cmp
adc
jno
leave
cmp
ret
and
inc
jb
mov
inc
arpl
call
aaa
dec
xor
pop
xchg
mov
icebp
arpl
jno
sub
int3
inc
sub
int3
data16
xor
mov
sti
pop
into
aam
out
mov
test
out
cmp
jecxz
cmp
dec
xor
lea
popf
int
xor
stc
ins
sub
lock
sub
mov
cmp
call
fs
add
sbb
mov
lea
pop
(bad)
xor
ds
fisttp
dec
(bad)
loope
or
scas
ss
mov
xor
xor
jmp
idiv
int
sub
mov
aas
call
aas
call
cmc
xor
jb
sbb
shl
cmp
repz
dec
jle
mov
cmp
(bad)
xrelease
cwde
inc
jb
push
xor
push
(bad)
cs
arpl
and
aas
dec
pop
(bad)
xor
xor
jno
mov
cmp
test
mov
pop
(bad)
int3
sti
pusha
mov
xchg
mov
jp
jns
and
add
and
and
lods
mov
mov
pop
cmp
mov
pop
retf
jb
add
(bad)
loope
int3
lea
loope
stos
sub
int3
ja
lea
sub
cmps
inc
xchg
mov
inc
xchg
mov
jnp
sti
out
mov
test
leave
cmp
jno
cmp
sub
loope
stos
sub
push
mov
fnstenv
jb
jl
sti
out
nop
push
pop
jnp
jmp
leave
arpl
(bad)
fnstenv
retf
cmps
cmp
jb
pushf
mov
jbe
mov
(bad)
hlt
sbb
cmps
call
sbb
call
mov
mov
lea
cmp
pop
sahf
mov
test
mov
pop
(bad)
int3
sti
pusha
mov
scas
pop
(bad)
int3
and
movs
nop
xor
scas
cmps
jb
cmp
pop
mov
ss
pop
jnp
lea
stc
out
or
jg
int
xlat
bts
add
shl
cmp
push
test
scas
shl
cmp
xchg
(bad)
gs
jl
stc
out
or
pop
ss
pop
(bad)
int3
icebp
xchg
mov
mov
addr16
xchg
and
aas
and
outs
mov
sub
pop
cmp
sti
fs
sti
push
mov
pop
pop
mov
icebp
mov
stc
out
mov
xchg
cmp
xor
loop
arpl
jae
cmp
sti
push
mov
xor
jnp
mov
mov
push
stc
out
mov
inc
xlat
xor
inc
xlat
cmp
mov
jno
imul
lea
jb
std
cmp
dec
das
dec
jb
push
rol
jnp
jb
movs
les
test
mov
pop
pop
mov
icebp
faddp
xor
neg
nop
push
pop
jnp
cdq
jmp
les
mov
inc
js
adc
pop
or
sti
fs
push
cmps
add
pop
mov
xor
or
cmps
mov
les
fdivr
xor
jl
repnz
or
jge
bswap
lea
mov
dec
cmp
(bad)
xor
cmp
call
mov
mov
cmp
leave
cmp
pop
jb
cmp
mov
or
jb
mov
mov
cmp
leave
cmp
jmp
jl
sti
bound
(bad)
mov
push
xor
out
int
and
(bad)
(bad)
rcr
sar
xor
mov
push
xor
push
(bad)
pop
dec
retf
call
ins
dec
mov
shl
sbb
clc
lock
sub
mov
mov
push
xor
outs
fs
jb
jbe
sub
add
pop
(bad)
int
mov
cmp
stc
into
cmp
sti
es
mov
mov
(bad)
int3
and
enter
cmp
mov
loope
mov
cmp
and
xor
mov
mov
mov
mov
mov
(bad)
int3
and
iret
lea
jle
add
shl
cmp
push
ins
mov
xor
es
mov
out
add
and
add
and
stos
stc
inc
ret
out
lea
arpl
ret
fidiv
sub
stc
fwait
(bad)
daa
dec
mov
jl
repz
ins
je
mov
arpl
jb
mov
mov
(bad)
int3
and
movs
nop
xor
outs
dec
sti
out
mov
mov
inc
iret
jb
mov
pop
and
js
lea
stc
int3
mov
mov
mov
mov
xor
pop
(bad)
mov
lea
ins
xchg
xor
cmp
jmp
xchg
mov
out
add
and
add
and
stos
stc
cmp
jae
xor
mov
int3
jb
mov
mov
pop
(bad)
int
mov
cmp
sbb
cmp
(bad)
repz
test
mov
mov
adc
test
stos
push
fidivr
lea
cli
cmp
es
mov
lea
cmp
jb
mov
xor
mov
(bad)
pop
(bad)
int3
and
imul
mov
ss
adc
int
gs
xor
pushf
xchg
sahf
push
xchg
mov
cmp
jb
sahf
outs
jb
into
sar
es
int3
mov
sbb
cmp
add
call
aas
dec
pop
(bad)
xor
push
pop
jae
not
xor
(bad)
int3
and
pop
mov
int3
jb
dec
cmp
pop
cmp
jb
push
xor
(bad)
(bad)
retf
imul
mov
add
lea
cmp
inc
jnp
call
(bad)
int3
mov
adc
icebp
addr16
xor
test
(bad)
int3
jae
cmp
sbb
cmp
add
call
aas
dec
pop
(bad)
xor
push
pop
jae
adc
mov
(bad)
int3
and
pop
mov
int3
jb
dec
cmp
pop
cmp
jb
mov
xor
mov
cmp
add
call
aas
dec
pop
(bad)
xor
push
pop
jae
adc
mov
(bad)
int3
and
pop
mov
int3
jb
dec
cmp
pop
cmp
jb
push
xor
aaa
(bad)
retf
imul
mov
add
lea
mov
xor
cmp
retf
mov
arpl
loop
fld
(bad)
int3
icebp
addr16
xor
test
(bad)
int3
jae
cmp
sbb
cmp
add
call
aas
dec
pop
(bad)
xor
jge
jae
adc
mov
(bad)
int3
and
pop
mov
int3
jb
dec
sbb
cmp
(bad)
hlt
ror
mov
add
lea
mov
xor
cmp
jb
test
pop
mov
add
jnp
jb
mov
arpl
cli
shl
mov
dec
xchg
mov
jnp
rol
lea
sub
xor
pop
(bad)
int
mov
cmp
mov
mov
arpl
es
mov
dec
pop
outs
outs
sti
out
cmp
mov
(bad)
int
repz
stos
pop
(bad)
int3
and
add
and
sub
sbb
pop
cmp
ja
xor
pushf
out
pop
(bad)
xor
jnp
jmp
pusha
mov
int3
jb
test
jge
xchg
xor
mov
xor
mov
and
fs
xor
cmp
(bad)
repz
ficomp
and
mov
arpl
xchg
(bad)
outs
and
sub
cmp
(bad)
repz
mov
test
mov
lea
cmp
jge
push
jb
mov
mov
sub
stc
fwait
(bad)
movs
mov
out
mov
mov
inc
iret
jb
mov
mov
(bad)
repz
mov
sub
int3
and
stos
stc
inc
pop
dec
jmp
jb
mov
call
out
lea
arpl
fwait
(bad)
fs
sub
jnp
jmp
pusha
mov
mov
mov
into
sar
es
int3
mov
jmp
(bad)
mov
test
or
pop
xor
jge
dec
xor
sub
sub
mov
pushf
ret
lea
xor
pop
push
arpl
loop
mov
(bad)
repz
mov
mov
int3
jb
sub
jb
push
xor
sub
add
dec
(bad)
int
cs
arpl
(bad)
(bad)
cs
arpl
and
daa
adc
mov
xor
mov
mov
lea
mov
arpl
push
test
fbld
fimul
add
(bad)
int3
icebp
dec
sub
jb
retf
push
ror
mov
dec
pop
outs
pop
sti
out
mov
push
push
jb
stc
cmp
and
xor
pushf
fwait
lea
xor
es
int3
mov
repnz
jnp
stc
es
int3
mov
dec
pop
sub
xor
out
mov
test
xor
stc
cmp
loop
xor
mov
arpl
es
int3
mov
dec
pop
outs
pop
sti
out
mov
fnstcw
xor
pop
(bad)
int3
sti
pusha
mov
mov
mov
xchg
int3
mov
call
pop
push
mov
into
sar
es
mov
adc
mov
xor
mov
mov
lea
mov
arpl
push
dec
int3
mov
bound
fimul
add
(bad)
int3
icebp
dec
sub
jb
retf
push
xchg
int3
mov
dec
pop
outs
inc
sti
out
mov
call
not
cmp
jb
pushf
mov
jmp
mov
mov
add
xor
es
mov
jb
cmp
sti
out
cmp
mov
(bad)
int
mov
cmp
jmp
pop
int3
mov
jb
mov
lea
mov
(bad)
repz
(bad)
hlt
sbb
pop
mov
mov
mov
jb
mov
push
icebp
push
pop
int3
mov
imul
xor
test
pop
(bad)
xor
stc
xor
mov
sub
and
lea
fucomi
push
(bad)
int3
icebp
xor
mov
es
(bad)
int3
repz
stc
pop
jb
mov
int3
jb
mov
hlt
not
int
mov
cmp
int
cs
arpl
(bad)
(bad)
cs
arpl
and
daa
sti
jnp
jmp
pusha
mov
(bad)
pop
(bad)
int3
icebp
imul
repnz
cmp
pop
pop
mov
mov
lea
ins
int3
(bad)
pop
mov
sub
and
mov
mov
mov
mov
addr16
into
lea
arpl
sti
(bad)
cs
arpl
and
and
jnp
jmp
pusha
mov
int3
jb
cmp
(bad)
repz
(bad)
cmc
xor
test
mov
pop
(bad)
int3
sti
pusha
(bad)
mov
pop
(bad)
int3
stc
es
int3
mov
ficomp
jge
aas
int
pop
mov
ficomp
and
or
and
mov
rcr
and
or
and
(bad)
mov
pop
(bad)
int3
stc
es
mov
sahf
pop
(bad)
int3
jge
in
lea
sbb
(bad)
ds
neg
int
mov
mov
stc
es
mov
inc
pop
outs
cmp
push
jmp
inc
jle
mov
arpl
xchg
(bad)
gs
ss
jb
into
sar
es
int3
mov
icebp
push
in
int3
mov
jle
mov
arpl
xchg
(bad)
gs
mov
arpl
xchg
(bad)
gs
mov
arpl
xchg
(bad)
gs
sub
sar
es
int3
mov
stc
es
mov
inc
pop
outs
cmp
cld
addr16
xchg
leave
(bad)
pop
not
jnp
sbb
sub
(bad)
cwde
xor
cmp
sub
jb
cmp
and
out
pusha
pop
or
mov
test
xchg
sub
(bad)
hlt
aaa
pop
cmp
jb
mov
xor
popa
xor
shr
sbb
rcr
pop
(bad)
mov
and
in
cdq
pushf
or
pop
inc
mov
scas
sub
(bad)
hlt
aaa
pop
(bad)
int3
lea
mov
in
jb
cmp
pop
dec
(bad)
jbe
pushf
adc
(bad)
cmp
cdq
pop
(bad)
jbe
pop
(bad)
int3
(bad)
cld
addr16
push
add
xor
test
mov
cmp
inc
push
sbb
inc
pop
mov
sbb
lea
leave
cmp
retf
push
push
xor
rol
mov
rcr
push
mov
cmp
test
mov
(bad)
ins
sub
cli
data16
inc
mov
mov
or
mov
mov
(bad)
loope
mov
loop
cmp
retf
xor
fdivr
icebp
xchg
lods
xor
cmps
jb
mov
jns
jb
cmp
out
loop
aaa
jb
cmp
jb
cmp
jmp
cmp
jb
cmp
shl
mov
xor
js
jnp
ss
dec
pop
cmp
jb
mov
jo
cmp
push
es
ds
js
xor
xor
(bad)
ss
pop
jnp
inc
arpl
repz
fnstenv
xor
jl
jae
add
mov
cmps
jb
jecxz
xor
jo
cmp
ja
mov
ror
jb
mov
cmp
je
cmp
in
loop
mov
mov
xor
sub
jb
(bad)
ss
cmp
xor
pop
cmp
(bad)
loope
lds
cmps
jb
mov
xor
arpl
jne
mov
cmp
test
jbe
sub
mov
mov
cdq
jae
loop
xchg
bound
jns
fwait
(bad)
(bad)
int3
lea
sub
loop
aaa
push
movs
or
fwait
mov
xor
clc
inc
dec
mov
cmps
jb
cmps
sar
lea
ja
cmps
jb
stos
dec
xor
arpl
shl
mov
mov
mov
jae
mov
shl
mov
xchg
xor
mov
mov
dec
xor
arpl
cmc
jo
cmp
jb
mov
xor
mov
rol
ja
cmps
jb
mov
shr
mov
and
in
loop
xor
mov
sar
ja
lea
pop
cmp
in
loop
mov
mov
xor
in
loop
jae
test
aad
xor
js
sti
imul
sti
bound
xor
dec
aam
jb
cwde
fucomip
loop
mov
mov
js
fwait
jns
xor
jge
xor
jns
fwait
imul
scas
xor
js
fwait
sbb
xor
cmp
(bad)
loope
mov
fwait
cmps
jb
mov
cmp
test
jbe
sub
mov
fwait
cmps
jb
mov
cmp
mov
out
jb
mov
xor
pop
xor
into
sar
out
mov
clc
mov
cmp
cmps
imul
jns
ds
push
es
mov
mov
div
jb
inc
or
loope
mov
mov
rol
mov
movs
jb
mov
cmp
push
pop
cmp
in
loop
mov
repnz
jb
xor
in
loop
jae
scas
or
fwait
(bad)
cmp
jb
icebp
sbb
xlat
lea
push
cmp
in
loop
jae
daa
(bad)
xor
mov
xor
cmp
sti
imul
sti
out
mov
add
jnp
push
arpl
xor
jl
jge
cmp
shl
cmp
test
xor
ss
mov
into
jae
movs
(bad)
ss
jns
retf
xor
fdivr
jge
jl
dec
and
xor
xor
jae
xor
cmp
jo
sub
andps
inc
and
(bad)
jg
ja
test
push
repnz
aaa
pop
xchg
xor
sub
xor
in
xor
inc
movs
jb
lods
(bad)
ss
ds
icebp
inc
ds
test
into
xor
movs
mov
xor
sbb
loop
cmp
cdq
mov
sub
loop
cmp
dec
cmp
lea
cwde
cmp
jecxz
or
test
mov
fadd
aas
loop
cmp
cdq
mov
sub
loop
cmp
fiadd
jnp
lea
cwde
or
loop
or
test
int3
ja
lea
sub
sbb
mov
aas
mov
push
sbb
jb
(bad)
cli
mov
mov
and
outs
fs
mov
movs
jnp
mov
lds
(bad)
loope
pop
jnp
jnp
call
pop
popa
sbb
and
mov
cmp
sbb
and
mov
cmp
test
jbe
sub
pop
dec
sbb
and
mov
cmp
sbb
and
mov
cmp
sbb
and
mov
cmp
cli
data16
inc
mov
fs
out
push
xor
xlat
lea
retf
mov
jbe
repz
es
mov
shr
jb
cmp
mov
pop
fbstp
jl
sti
out
hlt
aaa
push
jns
jb
mov
fcom
mov
xor
mov
lea
mov
jmp
xchg
sub
pusha
mov
jbe
mov
jl
jae
cmp
jmp
mov
xchg
pop
cmp
(bad)
loope
hlt
aaa
adc
xor
mov
xor
mov
cmp
mov
mov
shl
mov
jl
and
out
loop
mov
inc
add
scas
and
cmp
jb
cmp
leave
aas
int3
pop
inc
shl
aaa
add
pop
pop
mov
ret
xor
pop
cmp
(bad)
loope
pop
jb
dec
xchg
sbb
push
xor
sub
dec
enter
mov
loopne
jb
(bad)
ss
pop
jnp
jmp
shl
(bad)
mov
addr16
movs
jb
sub
movs
mov
xor
div
hlt
aaa
pop
dec
bound
mov
mov
sti
sbb
out
mov
bound
je
icebp
(bad)
int
inc
jno
data16
sub
cmps
push
xor
mov
mov
call
mov
lea
lea
mov
xchg
mov
call
lds
mov
data16
inc
outs
mov
hlt
push
repz
sbb
(bad)
ss
pop
jnp
(bad)
(bad)
xor
pop
sub
in
loop
ins
das
pusha
ins
mov
and
outs
mov
jle
cmp
(bad)
loope
add
sahf
(bad)
xor
dec
pop
jge
jge
jae
(bad)
xor
dec
sbb
jge
jo
(bad)
xor
dec
das
jge
jge
jno
(bad)
xor
dec
and
jge
jbe
(bad)
xor
ss
mov
sub
popfw
mov
dec
gs
jb
(bad)
jbe
lods
(bad)
aaa
ja
test
lods
(bad)
daa
dec
call
jb
ret
jns
adc
ss
mov
mov
daa
fs
cwde
mov
add
pop
int
retf
icebp
dec
cmp
push
call
test
pop
push
repz
cmp
xor
dec
push
test
pop
push
loope
cs
xor
repz
mov
mov
and
imul
ss
mov
xor
pop
mov
(bad)
stc
out
mov
mov
shl
stc
test
data16
cmp
jb
rcl
jge
jl
sbb
mov
cmps
jmp
xor
jl
jae
push
int3
lea
push
pop
jnp
repnz
pop
aaa
pop
div
xor
mov
shl
repnz
aas
aaa
pop
jecxz
retf
icebp
dec
cmp
inc
sub
mov
cmps
test
add
lea
cmp
sub
mov
cmps
mov
and
bound
ins
or
shl
icebp
arpl
mov
jb
mov
push
sti
pop
jno
dec
movs
cmp
sub
mov
mov
dec
(bad)
sti
pop
mov
xor
mov
shl
jge
cmp
xor
ds
fwait
mov
mov
and
imul
ss
mov
xor
out
mov
jno
cmp
icebp
dec
cmp
daa
ja
cmp
jb
add
mov
je
dec
jp
pop
mov
xor
mov
shl
repnz
aas
xor
nop
mov
icebp
dec
cmp
cmovg
aaa
push
mov
add
jb
cmp
dec
cwde
push
bound
ins
and
ret
mov
cmps
mov
addr16
jb
mov
xor
mov
lea
sub
data16
inc
mov
lea
mov
jp
and
mov
popf
cmp
in
int3
call
int3
call
mov
jno
cmp
mov
loope
fwait
mov
xor
ja
lea
lods
(bad)
bound
xor
lahf
sub
jecxz
cmp
test
repz
lea
test
add
jb
cmp
sahf
shl
jb
dec
adc
mov
cdq
lods
mov
jno
lds
je
jl
shl
jl
add
adc
cmps
es
ins
mov
sar
sub
xor
push
mov
ins
mov
sub
outs
cmps
test
add
mov
xor
mov
shl
sti
out
cmc
jbe
sar
daa
pop
mov
lea
mov
mov
mov
out
cmc
jne
mov
dec
mov
outs
cmp
imul
repnz
mov
test
dec
dec
iret
lea
jle
addr16
xchg
sbb
jb
shl
sub
ror
mov
test
sub
cmp
jb
cmp
xchg
jl
int3
jae
mov
xor
cmps
dec
xchg
mov
out
lea
mov
mov
cmps
pop
(bad)
xor
test
lods
pop
(bad)
xor
mov
test
push
(bad)
int3
lea
add
xor
cmp
sub
(bad)
cmps
or
lea
jge
xor
xor
dec
cwde
imul
(bad)
int3
sti
cmps
lods
arpl
loop
cmp
ss
pop
push
stc
ins
cs
xor
(bad)
(bad)
sti
ss
in
lea
addr16
dec
in
jb
mov
(bad)
jge
int3
sti
cmps
sub
jecxz
cmp
lea
(bad)
int3
(bad)
enter
lahf
cmp
leave
loope
xor
je
lea
or
or
dec
mov
mov
idiv
cmp
cmps
or
data16
stos
xor
(bad)
int3
lea
mov
int3
jb
mov
fld
es
lea
push
pop
jnp
stc
ss
in
lea
mov
das
repnz
mov
jmp
mov
mov
add
mov
xor
dec
pushf
push
mov
cmp
xchg
mov
(bad)
int3
(bad)
in
lock
cmp
dec
ds
lea
jmp
mov
(bad)
cmps
dec
xchg
mov
(bad)
int3
jb
mov
jb
push
int3
lea
(bad)
int3
lea
lods
pop
(bad)
fld
(bad)
int3
icebp
addr16
repz
sar
jb
movs
mov
pop
(bad)
fdiv
xchg
(bad)
mov
mov
cmp
daa
pop
mov
enter
dec
pop
test
popf
pop
mov
mov
xor
jle
int3
lea
mov
ja
sub
jb
mov
fdivr
cli
xor
cmp
jb
(bad)
int3
pop
pop
shr
mov
repz
lea
jae
mov
(bad)
jge
int3
pop
pop
(bad)
xor
mov
cmp
inc
int3
lea
(bad)
loope
int3
(bad)
jnp
int3
lea
imul
jae
mov
retf
pop
clc
shl
sub
xor
ss
lea
xchg
jb
lods
(bad)
popf
pop
(bad)
repnz
mov
cmp
xchg
mov
xor
fld
push
(bad)
int3
lea
xor
jp
fidiv
fdiv
jno
lds
mov
es
lea
xchg
jb
cmp
add
ss
pop
jnp
repnz
(bad)
lea
sub
mov
mov
cmp
lea
sti
xor
add
cmps
out
jge
int3
icebp
popa
inc
xor
mov
mov
lea
lods
stos
lods
pop
(bad)
mov
mov
lods
in
lea
sar
int3
stc
lods
in
lea
sti
es
mov
jl
int3
stc
es
in
lea
scas
jl
int3
sbb
(bad)
int3
and
lods
pop
(bad)
fld
sti
cmp
stc
es
in
lea
into
jl
int3
pop
loopne
mov
jl
int3
sti
es
in
lea
scas
jl
int3
repnz
(bad)
lea
mov
cmp
je
push
xor
ss
in
lea
jle
mov
retf
int3
mov
xor
xor
lods
lahf
lods
pop
(bad)
fsubr
pop
cmp
(bad)
loope
cmp
ss
pop
clc
shl
mov
lods
pop
(bad)
sbb
ja
int3
lea
xor
xor
lods
rcr
mov
sub
lods
(bad)
popf
pop
(bad)
pop
jb
cmp
and
fs
mov
ret
int3
jnp
ss
mov
xor
jge
add
jb
mov
xchg
jge
cmp
fwait
mov
mov
mov
mov
cmp
jb
mov
mov
jb
mov
xor
mov
cmc
test
mov
int3
ja
mov
lods
pop
(bad)
mov
jb
adc
repnz
cmp
sub
mov
mov
sub
aaa
repnz
cmp
sub
mov
cmps
mov
jge
outs
(bad)
ss
pop
jnp
jge
lods
nop
lods
pop
(bad)
repnz
mov
jecxz
lea
mov
xor
aas
push
fwait
mov
mov
inc
mov
ror
jmp
or
sti
es
lea
sti
push
sar
es
lea
pop
push
mov
cli
mov
or
inc
out
(bad)
rcl
mov
add
int3
lea
out
lea
xor
pop
sub
test
(bad)
cmc
jne
mov
xor
dec
sbb
lahf
add
jb
cmp
pop
mov
cmp
jb
dec
daa
repnz
add
jb
cmp
pop
test
cmp
jb
dec
xor
es
push
mov
das
jge
mov
arpl
pop
mov
aad
int3
lea
std
aas
repnz
(bad)
lea
xor
pushf
(bad)
popf
pop
(bad)
xor
ss
lea
jo
loopne
fwait
mov
je
stc
daa
sub
lods
pop
(bad)
mov
xchg
repz
int
lea
jb
dec
jecxz
cmps
dec
xchg
mov
(bad)
mov
push
(bad)
int3
lea
(bad)
int3
(bad)
enter
lahf
cmp
leave
loope
xor
push
enter
ins
sub
data16
inc
mov
fs
(bad)
xor
aaa
pop
test
es
mov
mov
mov
out
xor
(bad)
mov
jb
sub
jb
retf
out
mov
daa
pop
mov
stos
cs
iret
loope
mov
cmp
add
or
iret
loope
mov
cmp
add
ss
out
mov
daa
pop
mov
jbe
mov
test
pop
add
inc
dec
xor
cdq
test
mov
xlat
repz
rol
mov
cmp
(bad)
mov
test
pop
add
jnp
mov
mov
(bad)
xor
jp
dec
arpl
xor
push
mov
lock
test
sar
lods
(bad)
jo
xchg
xor
mov
mov
pop
cmp
loopne
mov
icebp
pop
cmp
ss
stos
mov
mov
pop
cmp
loopne
lds
mov
fnstenv
pop
cmp
jbe
jl
jno
(bad)
jo
xchg
xor
add
jb
cmp
and
and
lahf
cmp
jge
cmp
test
iret
jo
fwait
dec
aaa
repnz
aaa
repnz
xor
faddp
cmp
and
lea
mov
test
pop
add
jb
xor
cdq
test
mov
xlat
stc
out
mov
mov
pop
sti
sti
out
mov
jno
mov
aaa
repnz
xor
jl
sub
div
fs
(bad)
xor
clc
xor
fidivr
sbb
jb
push
xor
sub
mov
pop
jns
dec
mov
(bad)
fdivr
or
ss
cmp
cdq
movs
jbe
lea
(bad)
cli
mov
mov
retf
xor
xor
mov
push
xor
sbb
sub
mov
(bad)
pop
mov
call
xor
mov
(bad)
repz
and
mov
mov
mov
sti
fs
jb
(bad)
int3
and
xor
mov
mov
mov
addr16
mov
mov
and
xchg
adc
cmp
test
mov
(bad)
pop
jb
cmp
pop
stos
push
xor
cld
lock
sub
mov
mov
gs
xchg
xor
mov
cmp
leave
cmp
retf
cmp
jb
mov
enter
mov
icebp
pop
mov
inc
aas
jb
aas
mov
jb
into
push
aas
mov
outs
pop
jb
shr
and
stc
and
leave
jns
jmp
out
mov
cmp
test
xchg
(bad)
pop
jb
inc
aas
jb
xor
or
aaa
pop
mov
sbb
pop
dec
iret
and
mov
fcmovne
repnz
sti
pop
or
sti
fs
mov
addr16
xchg
repnz
imul
jb
cmp
mov
push
xor
mov
stc
int3
pop
stos
sar
mov
(bad)
int3
pop
cmps
or
cdq
ret
mov
xor
mov
outs
(bad)
icebp
cmp
stc
out
mov
xor
add
mov
daa
pop
imul
xor
xor
cmp
jo
leave
shl
mov
cmp
and
adc
mov
cmp
xchg
sub
out
mov
jb
ins
sub
data16
inc
push
mov
test
add
pop
repnz
push
xor
mov
stc
int3
pop
stos
rol
mov
shl
sub
mov
pop
dec
aaa
inc
arpl
add
mov
outs
fcmovnb
repnz
sbb
mov
dec
aas
and
sub
mov
cmp
retf
xor
fidivr
inc
arpl
sub
cli
data16
inc
mov
fs
(bad)
xor
aaa
pop
repnz
jmp
jb
loop
lods
dec
ds
cmps
pop
xor
(bad)
pusha
(bad)
(bad)
xor
xor
sub
popa
or
sti
test
dec
inc
jnp
call
and
shl
jge
cmp
shl
mov
cmp
das
scas
inc
fild
sar
repnz
pop
xor
cmps
push
dec
lea
imul
and
adc
xor
cmp
mov
jl
sti
out
les
pop
mov
sub
iret
sub
div
pusha
and
mov
jp
dec
aas
mov
lds
outs
mov
pop
mov
mov
jl
test
sar
retf
add
xor
cmp
pop
shl
jge
cmp
shl
mov
cmp
test
rcr
inc
jnp
call
pop
mov
addr16
xchg
and
add
cmc
outs
mov
lods
sub
jge
xor
fidivr
adc
jl
jae
mov
push
call
dec
sub
test
loope
mov
cmp
add
cmp
repnz
xor
movs
pop
hlt
aaa
inc
and
stc
out
cmp
jecxz
mov
sti
jnp
sar
out
mov
lea
rep
mov
(bad)
xor
cmps
mov
pop
lea
dec
out
mov
xor
fidivr
stc
out
cmp
jecxz
mov
jge
jl
jge
jge
and
sub
minps
inc
jbe
push
(bad)
loope
stos
sub
mov
pop
cmp
movs
sbb
sar
out
mov
jge
cmp
pusha
mov
pop
mov
cmp
jb
mov
lods
xchg
icebp
jae
fnstsw
pop
out
cmp
out
fcmovnb
xchg
sub
out
mov
pushf
push
xor
jl
jge
jns
stc
div
cmp
icebp
aas
sbb
lods
xchg
icebp
jae
fnstsw
xor
mov
mov
xor
inc
mov
xchg
cld
addr16
loop
test
jae
xor
mov
pop
xor
push
lea
cmp
xor
mov
loop
test
mov
loop
test
mov
loop
test
jno
xor
mov
inc
xor
push
mov
or
loop
test
mov
loop
test
mov
loop
test
and
xor
xor
cmp
xor
push
xor
jns
loop
and
cmp
imul
popa
xor
aaa
loop
test
mov
loop
test
mov
loop
test
mov
loop
test
into
lea
mov
jb
xor
jno
jae
jno
xchg
jge
inc
pusha
pop
mov
retf
jae
xor
loop
test
mov
jb
test
mov
std
jecxz
mov
loop
adc
loop
test
mov
loop
test
mov
loop
test
mov
loop
test
xchg
or
loop
test
mov
loop
test
jno
xor
mov
loop
and
loope
mov
loop
adc
loop
test
mov
loop
test
mov
loop
test
mov
loop
test
pop
inc
xor
add
xor
mov
loop
test
mov
dec
mov
int3
mov
ins
mov
and
outs
mov
jle
mov
jle
jl
push
les
es
jl
sti
out
mov
sahf
sub
out
push
mov
leave
xor
fdiv
jb
mov
jae
imul
sub
sti
mov
mov
sti
xor
faddp
xor
movs
push
mov
jbe
jb
jl
retf
xor
xor
test
pop
mov
pop
jb
les
inc
mov
mov
ins
lahf
dec
inc
data16
inc
inc
bound
loope
and
test
(bad)
jle
mov
mov
ins
sahf
(bad)
jb
dec
and
jnp
ret
xor
leave
pop
imul
iret
sti
out
mov
sbb
cmp
jb
jl
and
jl
mov
imul
(bad)
test
mov
mov
jl
and
loope
xor
adc
xchg
add
gs
push
(bad)
out
cmp
out
jnp
gs
pop
(bad)
int3
sub
div
pusha
and
xchg
imul
fistp
call
xor
push
xor
pop
sbb
popa
mov
popf
sub
les
mov
xor
add
mov
mov
inc
retf
lea
jp
cli
cmp
mov
(bad)
repnz
mov
test
mov
xor
je
mov
(bad)
(bad)
repnz
mov
test
sub
xor
test
hlt
shr
mov
cmp
test
jbe
sub
pop
jle
cmp
iret
loope
xor
dec
imul
icebp
and
jnp
sti
out
fsub
loope
aaa
pop
mov
mov
mov
ret
jae
mov
icebp
out
aaa
shr
jno
mov
cmp
aaa
pop
dec
jmp
jl
cdq
mov
ret
jae
mov
sti
jnp
jbe
sub
iret
loope
add
jl
jbe
in
mov
mov
jnp
dec
out
inc
stos
dec
les
mov
int3
jle
mov
mov
sti
popa
test
je
push
mov
jns
xor
jl
call
(bad)
jge
(bad)
mov
mov
sub
movs
sub
iret
loope
mov
and
jb
jns
retf
xor
jnp
ss
jnp
and
jle
mov
icebp
mov
mov
and
aaa
imul
xchg
sub
iret
loope
add
jl
jbe
icebp
mov
mov
jnp
dec
out
inc
movs
add
mov
mov
cs
mov
loope
aaa
push
mov
scas
push
jnp
inc
mov
jbe
cmps
cwde
out
loope
xor
test
call
jno
std
mov
mov
call
ror
loope
mov
jb
xor
push
mov
jnp
jge
ins
fsub
inc
test
sub
iret
loope
mov
test
jbe
sub
mov
dec
cmp
and
lods
mov
repz
jno
std
mov
mov
(bad)
int3
icebp
xor
leave
cmp
leave
cmp
retf
cmp
jb
mov
mov
jb
mov
xchg
leave
cmp
pop
inc
push
pop
inc
sar
cmp
pop
xor
dec
xlat
call
jg
mov
ins
sub
data16
inc
mov
xor
cmc
outs
lea
ds
dec
push
add
mov
xor
mov
(bad)
shl
mov
mov
call
jle
mov
mov
mov
mov
icebp
fs
mov
lods
int3
mov
aaa
pop
cmp
pop
dec
adc
jb
test
pop
and
shr
sti
(bad)
into
fnstenv
mov
pusha
mov
cli
aaa
add
mov
aaa
pop
cmp
add
push
jb
enter
mov
test
inc
jl
mov
add
or
test
mov
(bad)
repz
mov
xchg
xor
es
pop
imul
sbb
push
xor
mov
jns
neg
int3
(bad)
repz
mov
(bad)
int3
lea
leave
sbb
stos
cmp
jb
cmp
(bad)
repz
xor
cmp
push
jnp
lea
int
lea
cmp
(bad)
int3
lea
je
mov
jnp
and
in
xor
(bad)
int3
and
js
mov
mov
jmp
ret
pop
imul
es
int
pop
imul
out
xor
cmp
(bad)
loope
pop
mov
jnp
sbb
jno
cs
arpl
mov
sbb
jb
push
push
inc
jnp
sbb
fdiv
retf
cmp
jb
sar
mov
mov
xor
div
fs
(bad)
sub
jbe
dec
mov
mov
jnp
repz
mov
mov
mov
mov
mov
push
xor
pushf
cmp
leave
cmp
leave
cmp
pop
scas
mov
cld
jp
mov
mov
sti
push
mov
(bad)
mov
ror
pop
outs
pop
jae
cmp
pop
mov
inc
mov
jp
mov
cwde
jp
mov
ins
mov
cmps
jecxz
cmp
pop
into
aam
out
mov
call
arpl
mov
inc
jle
dec
cmp
and
sub
inc
outs
mov
stc
pop
adc
dec
pop
sbb
push
aaa
sbb
mov
dec
aas
(bad)
(bad)
xor
je
cmp
icebp
and
pusha
ins
mov
int
xor
and
pop
imul
jo
push
xor
mov
xor
xor
mov
cmp
int3
pop
mov
dec
das
sbb
dec
iret
call
inc
jle
dec
iret
call
fsub
shl
sub
int3
pop
pop
shl
cmp
data16
mov
mov
icebp
dec
sub
sub
out
push
sti
out
mov
dec
push
pop
cmp
sti
push
mov
(bad)
mov
imul
inc
jle
dec
cmp
stos
stc
inc
jbe
stc
fmul
jl
and
push
xor
mov
dec
iret
call
inc
jle
dec
iret
call
fsub
dec
iret
call
jbe
dec
xor
aaa
push
mov
sub
sub
bound
cmc
outs
mov
in
pop
sti
pop
cmp
sti
fs
xor
sbb
fucom
cmp
and
je
mov
into
fsub
mov
jnp
dec
out
inc
pop
xchg
stc
jae
jecxz
xor
cmp
jb
cmp
leave
cmp
inc
jnp
call
in
mov
cmp
jnp
dec
aaa
inc
arpl
and
xor
cmp
repz
mov
sub
pop
mov
or
xor
jge
jbe
sub
xchg
loope
mov
sti
inc
push
inc
jp
xor
pusha
idiv
xor
fidiv
or
aaa
scas
mov
pop
popa
imul
(bad)
sub
jne
cmp
icebp
addr16
aas
stc
imul
cmc
jbe
cmp
cdq
fidiv
lock
(bad)
sti
mov
scas
cmp
and
mov
je
dec
es
out
cmc
jb
mov
test
jbe
sub
mov
xor
leave
xor
scas
imul
sti
fs
jae
mov
jnp
dec
sub
jle
mov
sbb
jb
mov
test
jbe
sub
mov
cdq
scas
or
cdq
stos
mov
test
jbe
sub
ins
sub
lock
sub
mov
mov
gs
out
outs
inc
ret
add
jb
push
popf
out
xor
out
mov
mov
outs
pop
xor
ja
mov
jl
sti
popa
adc
sti
test
test
cmp
cmps
or
push
test
mov
add
dec
retf
add
hlt
aaa
pop
cmp
cdq
jmp
test
pop
test
mov
retf
mov
into
retf
mov
retf
retf
mov
jbe
mov
into
shl
dec
mov
icebp
fs
fs
fmulp
fs
fdiv
hlt
shl
xor
mov
int3
aaa
pop
test
pop
add
rcl
cmp
out
mov
daa
push
ins
sub
data16
inc
cmp
loope
xor
cmc
outs
mov
(bad)
sub
jmp
pusha
mov
int3
jb
pushf
fisttp
es
pop
imul
sbb
stos
mov
repz
mov
jb
xor
pop
movs
or
fwait
call
lea
xor
scas
outs
fild
cmp
inc
arpl
adc
cmp
pop
mov
jmp
mov
(bad)
into
lea
and
jb
into
xchg
mov
sti
es
int3
(bad)
pop
mov
stos
pop
(bad)
int3
sbb
loope
(bad)
pop
or
lea
test
jb
cmp
and
loope
xor
es
pop
sub
xchg
sub
mov
dec
cmp
cmps
cmp
jb
add
mov
cmp
xchg
sub
mov
jl
sti
es
int3
(bad)
pop
mov
icebp
imul
repnz
cmp
pop
pop
mov
sbb
(bad)
int3
jae
imul
outs
(bad)
int3
icebp
xor
inc
jnp
(bad)
(bad)
xor
jne
cmp
icebp
xor
inc
jnp
lea
(bad)
pop
shl
aaa
mov
rol
js
cmp
jmp
shl
push
(bad)
pop
mov
lea
fstp
addr16
stc
out
xor
test
into
retf
cmp
push
dec
inc
jbe
mov
cmp
iret
pop
(bad)
int
hlt
push
or
call
and
jnp
jmp
pusha
shl
mov
cmp
jmp
shl
push
(bad)
pop
mov
lea
fistp
xor
inc
jnp
lea
(bad)
pop
shr
mov
shr
aaa
mov
cmp
jmp
shl
push
(bad)
pop
mov
lea
fild
cmp
icebp
addr16
and
cmp
jb
into
retf
cmp
push
dec
fdiv
mov
cmp
iret
pop
(bad)
int
hlt
push
or
call
and
inc
jnp
stc
es
pop
imul
dec
clc
ja
mov
loope
stos
sub
fucomi
out
xor
test
into
retf
cmp
popa
retf
leave
shl
mov
(bad)
int3
call
cmp
test
mov
lea
fcmovnbe
out
xor
addr16
adc
cmp
retf
test
into
retf
cmp
popa
retf
leave
shl
mov
(bad)
int3
call
cmp
mov
mov
lea
fistp
xor
or
jb
sbb
jb
cmp
mov
mov
(bad)
cmp
retf
sar
jb
into
retf
test
lea
sbb
shl
mov
rol
xor
cmp
jmp
shl
fnstenv
cs
lea
fs
in
lea
arpl
pop
(bad)
int
repz
jecxz
loope
arpl
and
adc
sbb
xor
mov
ss
cmp
jmp
shl
(bad)
pop
outs
pop
dec
inc
jnp
and
mov
in
dec
jb
into
sar
es
int3
(bad)
pop
mov
call
xor
mov
cmpxchg
nop
loope
int3
(bad)
pop
(bad)
int
dec
mov
jb
mov
jo
mov
cmp
ja
sub
inc
jnp
lea
(bad)
pop
rcr
mov
rcl
xor
cmp
jmp
shl
push
(bad)
pop
mov
lea
(bad)
loopne
xor
xor
popa
xor
scas
shl
mov
mov
arpl
cmp
jno
repz
xor
shr
xor
cmp
jmp
shl
push
mov
lea
fisttp
addr16
(bad)
xor
test
into
retf
cmp
popa
retf
leave
shl
mov
(bad)
int3
call
cmp
sbb
xor
mov
ss
cmp
jmp
shl
(bad)
pop
outs
pop
dec
inc
jnp
and
mov
inc
adc
mov
mov
arpl
into
lea
cmp
mul
sub
xchg
sub
mov
pushf
(bad)
lea
xor
pop
(bad)
int3
jno
test
(bad)
pop
add
add
mov
mov
(bad)
int3
jno
test
(bad)
pop
test
mov
retf
mov
into
retf
pop
popa
sti
pop
sub
mov
std
jge
inc
clc
fnstenv
lods
xchg
and
push
and
pop
(bad)
fs
fdiv
test
jb
(bad)
fs
daa
lea
test
(bad)
pop
mov
int3
repnz
mov
(bad)
and
(bad)
repz
mov
and
pop
shl
mov
cmp
icebp
and
dec
xor
mov
cmp
cmp
ja
sub
inc
jnp
lea
(bad)
pop
rcl
mov
shr
mov
cmp
jmp
shl
push
mov
lea
fisttp
loop
xor
addr16
inc
loop
xor
test
into
retf
cmp
popa
retf
leave
shl
mov
(bad)
int3
call
cmp
es
int3
(bad)
pop
mov
mov
pop
(bad)
int3
stc
es
pop
add
jge
nop
int
pop
mov
sahf
pop
(bad)
int3
repz
rcr
shl
aaa
mov
(bad)
int3
fwait
in
cmp
jb
test
jb
(bad)
xor
jnp
jb
mov
xor
out
ss
cmp
dec
es
pop
ss
mov
ror
pop
mov
sahf
pop
(bad)
int3
(bad)
(bad)
sub
xor
es
(bad)
pop
imul
icebp
addr16
into
lea
icebp
int3
xor
add
mov
mov
(bad)
int3
sti
jnp
jmp
pusha
mov
jb
(bad)
int3
and
int3
jmp
cmp
lea
arpl
cs
arpl
and
aaa
sti
es
int3
(bad)
pop
mov
(bad)
and
(bad)
push
(bad)
into
lea
mov
arpl
(bad)
fnstenv
repz
xor
shl
xor
cmp
jmp
shl
(bad)
fnstenv
pop
mov
lea
fild
cmp
icebp
xor
inc
xor
ror
mov
cmp
ja
sub
inc
jnp
lea
(bad)
pop
sar
xor
shl
dec
mov
cmp
jmp
shl
push
(bad)
pop
mov
lea
fist
addr16
(bad)
push
(bad)
into
lea
(bad)
mov
(bad)
int3
sti
jnp
sar
es
(bad)
pop
mov
jmp
cmp
lea
(bad)
pop
(bad)
int
cmc
sar
test
mov
mov
mov
jnp
ss
pop
(bad)
int3
sbb
mov
lea
(bad)
pushf
cmp
icebp
xor
push
xor
jl
jb
cmp
mov
mov
pop
das
inc
jnp
lea
(bad)
pop
rcl
mov
rcl
dec
mov
cmp
jmp
shl
push
mov
lea
fisttp
cmp
icebp
addr16
mov
cmp
jb
into
retf
cmp
popa
retf
leave
shl
mov
(bad)
int3
call
cmp
xchg
fnstenv
pop
mov
lea
(bad)
cmp
icebp
xor
loope
mov
test
jb
cmp
ja
sbb
fstp
cmp
jb
into
retf
test
lea
sbb
rcr
mov
sar
js
cmp
jmp
shl
(bad)
fnstenv
pop
mov
lea
fcmovnbe
popf
cmp
icebp
addr16
adc
cmp
jb
into
retf
cmp
popa
retf
repnz
mov
(bad)
int3
call
cmp
sbb
xor
mov
cmpxchg
nop
loope
int3
(bad)
pop
(bad)
int
dec
fs
jp
shr
sbb
cmp
retf
test
into
retf
cmp
push
dec
cmp
jb
cmp
iret
pop
(bad)
int
hlt
push
or
call
and
mov
jno
pop
mov
lea
fstp
cmp
icebp
addr16
mov
test
into
retf
cmp
popa
retf
leave
shl
mov
(bad)
int3
call
cmp
lods
jge
jb
fidivr
lea
cli
pop
outs
inc
jnp
lea
(bad)
pop
sar
dec
mov
shl
js
cmp
jmp
shl
push
(bad)
pop
mov
lea
fcmovnbe
sahf
cmp
icebp
xor
inc
jnp
lea
(bad)
pop
shl
mov
sbb
lea
mov
jb
cmp
mov
mov
pop
add
lea
(bad)
pop
shr
mov
mov
lods
pop
(bad)
int3
and
mov
arpl
mov
shr
dec
mov
ror
dec
mov
cmp
jmp
shl
push
(bad)
pop
mov
lea
fld
cmp
icebp
xor
inc
jnp
lea
(bad)
pop
sar
dec
mov
mov
xor
sbb
xor
mov
cmpxchg
nop
loope
int3
(bad)
pop
(bad)
int
dec
in
jb
mov
(bad)
mov
cmp
repz
mov
(bad)
int
hlt
push
fld
sub
std
and
sbb
xor
mov
cmpxchg
nop
loope
int3
(bad)
pop
(bad)
int
dec
mov
jb
mov
or
sti
es
sbb
jno
pop
mov
lea
fistp
lahf
cmp
icebp
addr16
push
lahf
cmp
retf
test
into
retf
cmp
popa
retf
leave
shl
mov
(bad)
int3
call
cmp
sbb
xor
mov
ss
cmp
jmp
shl
(bad)
pop
outs
pop
dec
inc
jnp
and
mov
jmp
xchg
pop
add
jb
std
cmp
mov
push
xor
mov
jns
pop
stos
ror
mov
(bad)
into
lea
loope
stos
sub
int3
(bad)
pop
(bad)
int
dec
les
jb
push
xor
push
int
mov
lea
(bad)
pop
mov
jne
xor
mov
lea
fistp
push
(bad)
pop
shr
dec
mov
outs
fstp
cmp
stc
es
(bad)
pop
ins
sub
data16
inc
mov
xor
loop
retf
inc
pop
mov
mov
(bad)
xor
pop
mov
jge
jl
and
mov
xor
(bad)
int3
and
or
push
xor
and
mov
arpl
mov
in
ret
lea
outs
and
sub
cmps
dec
lea
mov
cmp
jl
xor
mov
mov
lea
lods
loope
pop
test
jnp
sbb
jno
retf
cmp
jb
rcl
pop
(bad)
mov
xor
sub
inc
mov
xor
cmc
outs
mov
sub
sti
pop
into
aam
es
hlt
icebp
push
movs
into
lea
aaa
stos
mov
repz
inc
cmp
lea
jl
stc
cmps
cmp
jb
cmp
lea
rol
sub
mov
loop
aaa
stos
mov
icebp
gs
call
cmp
idiv
xor
lods
xchg
(bad)
pop
(bad)
gs
inc
(bad)
pop
(bad)
int3
mov
mov
data16
mov
(bad)
pop
(bad)
mov
mov
mov
retf
inc
pop
mov
and
dec
add
mov
(bad)
int3
lea
cdq
into
lea
inc
mov
(bad)
int3
lea
(bad)
pop
(bad)
(bad)
xchg
cmp
stc
div
mov
lea
ins
cmp
mov
(bad)
pop
(bad)
mov
mov
mov
lea
fdivr
cmp
sbb
or
out
(bad)
int3
repz
mov
and
mov
(bad)
int3
and
or
sar
inc
mov
add
jb
cmp
mov
pop
(bad)
int3
and
xchg
in
xor
cmp
mov
(bad)
int3
lea
std
pop
jnp
dec
and
and
fwait
les
xor
(bad)
(bad)
adc
(bad)
int3
sti
pop
or
sti
fs
aaa
jae
cmp
(bad)
repz
(bad)
pop
(bad)
int3
and
pop
jb
mov
push
test
xchg
pop
(bad)
int3
lea
mov
lea
jmp
into
lea
not
(bad)
int3
(bad)
repz
sbb
xor
jnp
dec
ds
pushf
push
jb
or
fwait
push
cmp
jb
cdq
in
xor
(bad)
int3
and
or
mov
xor
es
into
lea
neg
int3
(bad)
repz
dec
mov
(bad)
int3
sti
es
(bad)
call
out
xor
es
add
addr16
xor
mov
ja
mov
(bad)
int3
lea
(bad)
mov
pop
(bad)
int3
jb
mov
int3
jb
and
int
pop
cmp
sti
pop
adc
sti
fs
retf
int3
and
fmul
pop
(bad)
int3
(bad)
repz
retf
int3
and
cmp
leave
sbb
leave
cmp
cs
arpl
mov
cmp
mov
mov
int3
(bad)
or
int3
lea
pop
jb
sbb
xchg
sub
mov
mov
pusha
inc
jnp
sbb
out
jb
mov
arpl
and
and
cmp
pop
sub
sbb
pop
(bad)
int3
(bad)
repz
inc
lods
loope
fisttp
xchg
cmp
sti
pusha
xor
pop
mov
cmp
mov
cmp
repnz
into
lea
test
cmp
mov
retf
cmp
mov
cmp
lea
leave
xor
test
jb
push
aaa
jae
cmp
(bad)
repz
jge
cmp
sbb
cmp
(bad)
repz
mov
add
lea
pushf
scas
(bad)
pop
(bad)
xor
pop
(bad)
int3
jb
(bad)
cdq
pop
mov
pushf
scas
(bad)
pop
(bad)
xor
es
into
lea
leave
xchg
cmp
repz
push
jb
outs
(bad)
mov
(bad)
int3
call
xchg
(bad)
pop
(bad)
fstp
cmp
stc
movs
into
lea
sti
pop
into
aam
es
into
lea
sub
cmps
cmp
inc
mov
fs
(bad)
sub
push
sti
pop
cmp
sti
mov
add
jb
mov
adc
ins
int
xor
mov
sbb
jb
mov
adc
ins
iret
(bad)
(bad)
sub
gs
cmp
sti
popa
pop
mov
jns
cmp
sti
popa
pop
mov
aaa
pop
test
pop
cmp
jge
ins
lds
test
push
mov
bound
sbb
jb
mov
retf
xor
fidivr
inc
arpl
cmps
mov
jl
cli
movs
push
aaa
jmp
and
push
jns
call
aas
(bad)
(bad)
xor
and
add
mov
xor
out
mov
and
add
mov
mov
cs
ja
mov
cs
jo
rcr
mov
jl
jmp
aas
ss
ins
iret
jae
test
push
mov
bound
cmp
retf
xor
fidivr
jmp
shl
outs
pop
idiv
sbb
or
jb
call
cmc
shl
inc
mov
imul
sub
les
outs
fcmovnu
xchg
cmp
stc
out
ins
sub
lock
sub
mov
mov
or
jb
outs
fs
(bad)
xor
pop
cmp
sti
fs
aam
es
mov
test
lea
jb
mov
into
inc
(bad)
int3
and
mov
arpl
(bad)
jb
and
jb
mov
jnp
ss
mov
cmp
int3
(bad)
addr16
lea
pop
jb
mov
inc
imul
pop
(bad)
int3
pop
scas
sar
mov
stc
jae
ret
(bad)
mov
inc
(bad)
int3
xor
ror
arpl
int3
(bad)
rep
fstp
arpl
sti
pop
or
sti
fs
(bad)
addr16
lea
pop
jb
mov
inc
imul
pop
(bad)
int3
pop
scas
rol
inc
mov
xor
jb
stc
jae
scas
rcr
sti
pop
cmp
sti
fs
sub
data16
inc
sub
cdq
mov
xor
cmc
outs
mov
pop
jne
mov
aaa
push
jb
leave
xor
cmps
cmp
jb
mov
jb
mov
icebp
imul
repnz
cmp
pop
pop
mov
sbb
imul
sbb
int3
icebp
xor
leave
mov
xor
cmp
icebp
xor
fistp
lea
mov
mov
xor
(bad)
int3
and
pop
jb
mov
pop
jb
cmp
mov
mov
pop
add
jmp
cmp
lea
cmp
xor
jne
cmp
retf
test
into
retf
cmp
pop
dec
int3
add
adc
cmp
iret
mov
push
imul
int3
(bad)
hlt
rcr
inc
mov
sar
inc
mov
cmp
jmp
shl
push
(bad)
cs
arpl
and
cmp
dec
or
push
add
loope
mov
(bad)
repz
inc
mov
sar
js
cmp
jmp
shl
push
(bad)
cs
arpl
and
cmp
sbb
xor
mov
ss
cmp
jmp
shl
cmp
lea
sub
xor
push
cmp
lea
cmp
sub
pop
mov
and
mov
push
adc
mov
rcr
inc
mov
mov
pop
push
mov
call
xor
mov
movzx
nop
loope
mov
(bad)
repz
inc
mov
push
cmp
mov
sar
inc
mov
sar
inc
mov
cmp
jmp
shl
push
(bad)
cs
arpl
and
cmp
mov
mov
arpl
and
cmp
push
cmp
sti
sar
js
cmp
jmp
shl
aad
xor
pop
xor
mov
mov
(bad)
int3
and
mov
(bad)
int3
and
mov
adc
xor
(bad)
int3
and
add
mov
add
cmp
mov
mov
pop
add
jmp
cmp
lea
and
xor
cmp
test
mov
jl
int3
sti
gs
js
loope
mov
(bad)
repz
inc
mov
rol
inc
mov
cmp
jmp
shl
push
(bad)
cs
arpl
and
cmp
mov
mov
arpl
and
cmp
gs
jb
rol
js
cmp
jmp
shl
push
(bad)
cs
arpl
and
cmp
mov
push
sbb
mul
sar
mov
rcr
mov
cmp
jmp
shl
push
(bad)
cs
arpl
and
cmp
mov
mov
arpl
and
cmp
sbb
xor
mov
movzx
nop
loope
mov
(bad)
repz
mov
cmp
xchg
sub
mov
les
jb
sbb
mov
mov
repz
mov
fxch
(bad)
hlt
push
and
iret
mov
rcr
inc
mov
sar
inc
mov
cmp
jmp
shl
push
(bad)
cs
arpl
and
cmp
jge
jno
cs
arpl
and
cmp
push
into
aad
es
lea
call
xor
mov
movzx
nop
loope
mov
(bad)
repz
mov
rcl
mov
cmp
jmp
shl
in
or
jb
pop
xor
mov
mov
(bad)
int3
and
mov
(bad)
int3
and
mov
jmp
mov
inc
(bad)
int3
and
add
mov
pop
jb
cmp
leave
cmp
mov
call
mov
jl
int3
repz
jb
mov
jb
(bad)
int3
and
push
jb
push
xor
push
shr
pop
outs
arpl
push
cmp
lea
(bad)
pop
out
lea
push
jb
mov
adc
jb
stc
jae
movs
mov
xor
div
aaa
jb
push
and
mov
xor
push
movs
into
lea
test
(bad)
pushf
ja
cmp
popf
(bad)
cmp
stc
div
mov
out
(bad)
int3
lea
rol
sub
mov
mov
fcomi
mov
xor
sbb
aam
es
hlt
sbb
test
jb
mov
rcr
int3
sti
pop
into
aam
es
enter
hlt
sbb
popf
into
lea
mov
cmp
jb
mov
arpl
or
jno
retf
(bad)
in
xor
mov
int3
icebp
addr16
loope
mov
cmp
jmp
(bad)
pop
imul
pop
mov
sar
pop
(bad)
pusha
jmp
(bad)
into
lea
jns
(bad)
int3
icebp
addr16
movs
jo
cmp
jge
xor
es
pop
imul
jmp
(bad)
into
lea
neg
int3
(bad)
repz
pop
mov
(bad)
int3
sti
mov
les
cmp
sbb
push
xor
es
cmp
addr16
xor
pop
(bad)
int3
sti
fs
mov
pop
(bad)
int3
mov
(bad)
lea
jb
mov
int3
jb
sbb
mov
ror
lea
retf
xor
fidivr
lea
(bad)
mov
(bad)
repz
jmp
popf
into
lea
neg
(bad)
int3
(bad)
repz
xor
mov
push
xor
mov
(bad)
int3
and
cmp
push
mov
xor
ss
mov
xchg
into
lea
pop
mov
sar
pop
(bad)
pop
pusha
inc
jnp
sbb
out
jb
mov
arpl
and
and
cmp
inc
sub
les
pop
(bad)
mov
mov
sbb
out
jb
je
jb
mov
jnp
dec
sub
dec
cmp
jb
lods
sbb
mov
int3
jae
mov
emms
sar
cmp
cmp
push
cmp
call
xor
mov
loop
(bad)
int3
and
rol
pop
mov
outs
xor
cmp
jge
xor
es
fild
adc
int3
icebp
addr16
xor
in
xor
mov
(bad)
pop
(bad)
int3
and
ror
pop
(bad)
mov
stos
xor
jge
test
jb
push
xor
pop
mov
(bad)
pop
(bad)
int3
and
sbb
mov
out
pop
(bad)
int3
and
(bad)
pop
(bad)
fcmovnbe
jne
int3
sti
or
sub
mov
mov
adc
out
jb
or
jb
imul
dec
sub
jb
mov
inc
pop
retf
xor
xor
cmp
lea
ror
and
cli
xor
pop
(bad)
int3
call
aas
cdq
mov
(bad)
int3
icebp
dec
or
pop
mov
sbb
icebp
addr16
xor
rcl
pop
mov
(bad)
int3
lea
rol
sub
mov
(bad)
repz
pop
mov
mov
and
pop
into
aam
es
enter
hlt
lea
popf
into
lea
pop
mov
(bad)
int3
(bad)
cld
addr16
daa
sub
mov
mov
gs
fisttp
mov
sbb
cmp
leave
adc
jb
jl
(bad)
(bad)
xor
xor
test
mov
shl
mov
rcr
sub
pusha
and
or
jb
push
dec
mov
xor
movs
cmp
sbb
inc
push
mov
sar
leave
cmp
in
data16
leave
cmp
dec
sbb
jb
mov
sbb
mov
mov
xor
fidivr
jmp
lds
dec
ins
adc
mov
cmp
stc
out
fdivr
rol
sub
fs
sub
data16
inc
xor
jmp
hlt
xchg
arpl
sbb
mov
cmp
pop
stos
shl
pop
mov
iret
inc
jbe
stc
fdiv
sub
add
lods
cmp
jmp
cmp
lea
call
int3
pop
scas
mov
jae
(bad)
int3
and
or
(bad)
int3
jb
dec
aaa
sti
push
sar
sbb
cmp
sti
rol
daa
sub
mov
mov
mov
pop
into
aam
out
mov
mov
rol
sub
cmp
out
arpl
movs
out
jb
jl
and
sbb
mov
pushf
repz
xor
loopne
xor
or
shl
cmp
inc
mov
xor
jl
icebp
arpl
arpl
pop
in
jb
jl
and
sbb
mov
frstor
leave
cmp
mov
adc
aaa
pop
mov
pop
xor
(bad)
jbe
lods
mov
and
ds
sub
cli
mov
mov
and
outs
fs
sbb
pop
and
leave
les
push
xor
mov
push
sbb
push
xor
xor
xor
cmp
leave
aas
pop
bound
sbb
mov
sbb
or
shl
cmp
ror
outs
pop
inc
pop
or
out
loop
fndisi(8087
mov
xor
push
into
aad
out
mov
sbb
jnp
call
sbb
js
call
sbb
jns
call
sbb
js
call
inc
push
mov
push
add
mov
cmp
hlt
push
add
mov
cmp
hlt
push
add
mov
cmp
jb
cmp
mov
cmp
call
sbb
js
call
sbb
jnp
call
sbb
jnp
call
cli
mov
xchg
mov
(bad)
dec
movs
jb
dec
fs
mov
cmp
and
xor
pop
mov
ds
call
int3
inc
and
adc
mov
cmp
and
xor
pop
mov
add
call
int3
inc
(bad)
cmps
jb
dec
sub
jb
call
and
xor
pop
mov
cmp
xor
sub
sbb
pop
or
out
cmp
cdq
test
xor
mov
shl
xchg
and
rcl
pop
mov
in
loop
(bad)
fistp
mov
mov
adc
mov
or
in
loop
fcmovnbe
test
xor
(bad)
mov
mov
mov
sbb
mov
or
shl
cmp
or
mov
shl
xchg
mov
inc
push
mov
mov
icebp
dec
and
sbb
push
sub
mov
sbb
jno
pop
dec
cmp
sub
pop
sahf
jle
xor
mov
mul
xor
dec
lods
adc
jmp
out
arpl
mov
jb
push
xor
mov
jl
pop
out
arpl
out
sbb
push
imul
mov
fdiv
retf
fsubr
xor
cmp
sub
cdq
jb
leave
cmp
inc
xchg
cmps
jb
leave
cmp
lahf
mov
mov
pop
arpl
mov
daa
sbb
std
out
xor
cmp
dec
sbb
jb
call
test
xor
cmp
inc
xchg
cmps
jb
leave
cmp
inc
out
jb
retf
test
jbe
mov
dec
pop
arpl
repnz
daa
sbb
in
xor
cmp
dec
fcom
jb
call
leave
cmp
leave
cmp
leave
cmp
leave
cmp
retf
test
jb
push
xor
mov
rcl
push
mov
cmp
xchg
mov
cmp
xor
leave
cmp
inc
xchg
cmps
jb
leave
cmp
inc
out
jb
leave
sub
mov
push
sbb
mov
push
out
xor
cmp
dec
dec
push
jb
call
pop
or
in
loop
pop
jb
or
shl
cmp
retf
sbb
jb
push
dec
sbb
imul
jns
jno
leave
cmp
dec
xchg
xor
add
les
fs
xor
mov
jge
xor
cmp
jb
cdq
xor
push
sbb
mov
imul
xor
cmp
dec
les
jb
call
pop
or
in
loop
pop
jb
or
shl
cmp
retf
inc
xor
push
lea
cmp
retf
cmp
jb
push
mov
test
jnp
sbb
cmp
sbb
js
sbb
jnp
sbb
push
push
sbb
cmp
jb
sub
arpl
jg
jno
retf
mov
xor
add
scas
xor
cmp
sbb
in
jb
cmp
mov
je
jb
push
inc
scas
loope
pop
jb
jp
jb
mov
ds
call
int3
inc
xchg
cmps
jb
leave
cmp
inc
ret
cdq
jno
retf
adc
add
or
xor
inc
pop
jno
mov
jno
retf
mov
xor
add
xor
mov
pop
xchg
xor
cmp
retf
xchg
xor
push
popf
jb
cmp
mov
fdiv
retf
mov
xor
add
push
mov
jb
or
in
loop
pop
jb
or
shl
cmp
leave
add
mov
cmp
jb
cmp
jb
push
pop
scas
loope
pop
test
jnp
sbb
cmp
sti
pop
into
aam
out
mov
inc
xchg
cmps
jb
leave
cmp
inc
out
jb
leave
sub
mov
cmp
jb
sub
xor
imul
jns
jno
leave
cmp
adc
xlat
cwde
jno
leave
cmp
inc
xchg
cmps
jb
leave
cmp
inc
out
jb
leave
sub
retf
and
jb
push
lock
cmp
mov
in
jb
jecxz
xor
sbb
jb
or
lea
push
xor
mov
cmp
jb
or
jb
push
push
sbb
sub
xor
cmp
dec
int3
adc
call
pop
or
in
loop
pop
jb
or
shl
cmp
leave
outs
pop
cmp
cmp
jb
cmp
jb
push
xor
test
jnp
sbb
cmp
sbb
js
sbb
jnp
sbb
cmp
mov
push
xor
imul
mov
cmp
jb
shl
test
xor
mov
js
sbb
jnp
sbb
cmp
mov
push
xor
imul
mov
cmp
jb
shl
mov
jns
repz
inc
daa
jb
push
xor
mov
pop
xchg
xor
push
out
jb
cmp
retf
cmp
repnz
out
xchg
loope
pop
jae
jnp
sbb
cmp
jb
call
pop
or
in
loop
pop
jb
or
shl
cmp
leave
pop
pop
xchg
push
xor
imul
mov
cmp
jb
sar
push
mov
js
sbb
js
sbb
js
sbb
pop
(bad)
push
xor
imul
pop
loop
jb
cmp
loope
cmp
sar
call
pop
mov
jae
mov
call
cli
mov
mov
icebp
dec
sub
jl
mov
cmp
sbb
jno
pop
dec
cmp
sub
pop
sahf
jle
xor
or
lea
bound
xor
mov
jl
sti
fs
xor
mov
cmp
call
mov
cmp
pop
or
in
loop
pop
jb
mov
mov
jl
pop
out
arpl
mov
cmp
xor
cmp
mov
sbb
jb
jge
xor
or
xor
leave
add
jbe
and
push
and
sub
xor
repz
cli
test
jle
xor
mov
cmp
sbb
js
sbb
js
sbb
jl
pop
out
mov
(bad)
imul
mov
fdiv
retf
jecxz
xor
sbb
jb
pop
xchg
xor
push
xor
mov
push
xor
mov
cmp
jb
cmp
leave
xor
dec
mov
jb
mov
repz
jb
push
xor
or
inc
cmps
cmps
jb
dec
xor
jb
push
xor
mov
pop
xchg
xor
push
daa
sbb
imul
es
jb
cmp
jno
cmp
ror
jb
sub
add
jg
xor
mov
cmp
inc
dec
movs
jb
dec
test
mov
cmp
retf
jp
jb
mov
ds
call
mov
pop
mov
xor
mov
cmp
inc
dec
movs
jb
dec
mov
jb
shl
sbb
cmp
jb
or
out
loop
fild
mov
mov
cmp
xor
mov
jnp
sbb
or
leave
inc
pop
jno
mov
jno
retf
mov
xor
add
retf
inc
pop
mov
sbb
js
sbb
jnp
sbb
add
xor
push
xor
imul
es
jb
cmp
push
mov
cmps
jb
dec
inc
(bad)
lea
lea
push
xor
mov
cmp
jb
push
pop
data16
cmp
and
push
xor
cmp
dec
shr
shl
cmp
jb
cmp
inc
xchg
cmps
jb
leave
cmp
inc
out
jb
leave
sub
retf
mov
lock
cmp
mov
in
jb
jecxz
xor
daa
xor
or
lea
push
xor
mov
cmp
jb
cdq
xor
push
push
sbb
sub
xor
cmp
dec
dec
sub
out
loop
pop
jb
or
in
loop
pop
jb
or
shl
cmp
leave
outs
pop
retf
mov
cmp
jb
cmp
jb
push
xor
test
jnp
sbb
cmp
sbb
js
sbb
js
sbb
cmp
mov
push
xor
imul
jns
jno
leave
cmp
lea
cwde
jno
sub
add
pop
or
in
loop
pop
jb
or
shl
cmp
retf
les
jb
push
int3
jb
cmp
retf
cmp
jb
push
fs
jle
xor
mov
cmp
sbb
js
sbb
jnp
sbb
cmp
leave
sub
arpl
xor
out
xor
cmp
cmc
mov
lods
jae
leave
cmp
inc
xchg
cmps
jb
leave
cmp
inc
ret
cdq
jno
leave
and
leave
jg
retfw
cmp
repnz
out
xchg
loope
pop
jae
jnp
sbb
push
sbb
loop
mov
stos
push
int3
inc
xchg
cmps
jb
leave
cmp
inc
ret
cdq
jno
leave
and
leave
pop
retfw
cmp
repnz
out
xchg
loope
pop
jae
jnp
sbb
sub
jb
call
pop
or
in
loop
pop
jb
or
shl
cmp
retf
mov
jae
mov
cmp
repnz
shr
js
xor
mov
cmp
call
(bad)
lea
lds
xor
sub
mov
mov
je
out
and
sub
fs
xor
and
xor
cmp
leave
cmp
mov
xor
fnstsw
mov
stos
jb
cmp
cmc
rcr
mov
(bad)
test
cmp
popa
and
jb
pop
iret
jb
jl
jbe
cmp
jmp
leave
arpl
out
arpl
out
arpl
pop
jnp
sbb
pop
xchg
lea
push
rol
sub
add
shl
jb
dec
iret
sbb
loop
jb
ins
call
jle
dec
cmp
and
sub
out
mov
mov
inc
retf
jb
and
jbe
cmp
int3
pop
mov
push
(bad)
loope
pop
jae
cmp
lea
std
sub
div
xor
push
int3
loop
in
sub
add
xchg
push
xor
fwait
xor
mov
jb
(bad)
int3
and
sub
shl
outs
mov
cmp
jmp
sar
faddp
xor
mov
mov
loope
mov
(bad)
repz
mov
cmp
retf
loope
xor
(bad)
int3
and
sub
mov
xor
faddp
xor
mov
mov
cmp
(bad)
repz
push
cmp
arpl
sub
mov
pop
(bad)
int3
and
and
mov
dec
and
xchg
mov
cs
arpl
and
(bad)
sub
adc
jmp
cmp
lea
mov
cmp
repz
and
mov
dec
and
(bad)
mov
cs
arpl
and
(bad)
sub
adc
jmp
cmp
lea
loope
cmp
repnz
cmp
mov
xchg
ret
loope
mov
(bad)
repz
mov
xor
retf
out
xor
(bad)
int3
and
and
mov
mov
mov
int3
sti
gs
and
mov
mov
arpl
and
(bad)
sub
adc
jmp
cmp
lea
pop
mov
xor
faddp
ds
mov
or
loope
mov
(bad)
repz
mov
aaa
inc
arpl
ins
xor
pop
(bad)
int3
and
and
sbb
cmp
js
xor
es
lea
jb
js
call
call
ret
loope
pop
xor
xor
retf
stc
adc
mov
cmp
jae
mov
fwait
xchg
(bad)
int3
(bad)
std
(bad)
cli
mov
cmp
inc
push
inc
jp
je
call
sbb
xchg
sub
fs
and
lods
sub
mov
je
outs
pusha
call
cmp
dec
cmp
mov
cmp
sub
cmps
cmp
inc
mov
xor
cmc
outs
lea
adc
sti
gs
jae
mov
sbb
mov
cs
arpl
dec
in
sub
cmp
cmp
sbb
retf
lea
arpl
xchg
xor
push
(bad)
int3
and
and
jb
cmp
xchg
sub
mov
test
mov
pop
mov
cmc
shl
mov
(bad)
repz
addr16
iret
push
ror
mov
mov
cs
arpl
and
pop
mov
xor
loope
mov
(bad)
repz
iret
push
ror
cmps
dec
and
mov
mov
arpl
sub
les
(bad)
mov
mov
pop
mov
pop
shl
mov
(bad)
repz
mov
ror
movs
dec
and
in
mov
cs
arpl
and
pop
mov
pop
shl
mov
(bad)
repz
addr16
adc
jg
int3
lea
push
lea
mov
cs
arpl
and
pop
mov
cdq
shl
mov
(bad)
repz
mov
ror
test
and
push
jno
cs
arpl
and
pop
mov
fcmovnb
loope
mov
(bad)
repz
mov
inc
xor
test
mov
pop
mov
xor
loope
mov
(bad)
repz
iret
push
ror
lods
dec
and
or
test
call
xchg
xor
(bad)
int3
and
fimul
xchg
cmp
sbb
cdq
jno
retf
mov
xor
(bad)
mov
mov
mov
push
(bad)
int3
repnz
retf
pop
or
and
jge
sub
jb
mov
inc
push
mov
repz
call
shl
cmp
repnz
(bad)
int3
icebp
xor
ror
stos
stc
cmp
push
cmp
jb
fidiv
jb
mov
int3
jb
mov
mov
pop
(bad)
cdq
ss
mov
(bad)
iret
lea
idiv
mov
xor
push
cmp
sti
gs
mov
int3
and
or
xor
(bad)
int3
and
sub
mov
retf
mov
push
mov
outs
push
cmp
and
clc
les
pop
sbb
fs
iret
pop
ror
lods
mov
mov
ret
movs
jb
mov
cwde
jno
retf
adc
xor
(bad)
int3
and
sub
mov
xor
xor
call
mov
int3
and
sub
mov
pop
jb
cmp
jmp
(bad)
pop
imul
repz
mov
jb
mov
mov
int3
and
sub
xor
(bad)
int3
and
and
mov
cmp
(bad)
repz
mov
mov
mov
int3
and
es
mov
mov
int3
icebp
arpl
retf
lea
mov
xor
es
pop
imul
icebp
sub
cs
arpl
leave
cmp
jns
xor
es
pop
imul
icebp
addr16
fs
cmp
lea
stc
and
and
mov
ror
sub
xor
pop
ror
test
cmp
lea
ror
pop
push
mov
xchg
jns
xor
es
pop
imul
icebp
sub
adc
jmp
(bad)
pop
imul
jmp
(bad)
pop
imul
sti
es
lea
stc
es
lea
ja
(bad)
int3
lea
les
pop
(bad)
int3
lea
loope
lea
stos
push
(bad)
int3
jno
call
xor
mov
mov
neg
int3
(bad)
repz
in
loope
mov
(bad)
repz
mov
mov
mov
int3
and
and
mov
cmps
push
(bad)
int3
call
(bad)
pop
outs
fist
push
in
les
mov
pop
xor
and
mov
xchg
int3
jmp
(bad)
pop
imul
lea
and
mov
mov
int3
and
and
mov
mov
int3
and
pop
(bad)
mov
call
(bad)
dec
mov
ror
repz
xor
pop
push
xchg
jecxz
pop
jb
cmp
stc
mov
xor
dec
cmp
jb
mov
mov
int3
and
mov
and
int3
lea
std
aas
sti
pusha
xor
jge
adc
lea
sahf
pop
(bad)
int3
call
inc
sbb
cmp
aam
xor
cli
sar
mov
sub
lock
jbe
ins
mov
jb
rcr
bound
sbb
and
jb
loope
stos
sub
pop
out
jnp
sbb
cmp
cmp
popf
fisttp
lods
imul
sbb
cmp
out
nop
inc
cmp
xor
mov
fidivr
lea
cli
hlt
ja
movs
jb
aaa
cmp
jb
imul
lea
cwde
jno
dec
push
push
arpl
sub
jb
shr
inc
mov
cmp
jmp
mov
lea
pop
stos
ror
bound
test
mov
dec
(bad)
int3
and
test
bound
ss
mov
dec
xchg
mov
lea
pop
cmp
(bad)
loope
mov
popf
cmp
test
mov
dec
(bad)
int3
sti
pusha
sar
mov
pop
and
sub
les
pop
sbb
fs
mov
lea
sbb
shr
les
mov
lea
aas
shr
sti
(bad)
into
fnstenv
mov
pusha
mov
sti
push
mov
dec
add
int3
lea
mov
xor
es
lea
add
push
jb
push
icebp
test
inc
jl
mov
add
or
mov
mov
arpl
xor
jmp
in
dec
(bad)
int3
and
daa
jb
push
xor
cmps
fisttp
adc
int3
(bad)
repz
mov
aad
(bad)
repz
mov
(bad)
mov
(bad)
repz
pop
(bad)
mov
mov
mov
sbb
(bad)
int3
and
and
sub
xchg
sub
mov
cmp
cmp
jno
retf
test
cmc
test
cmp
cmp
xor
and
dec
bt
mov
lea
or
stos
loope
mov
cmp
add
jnp
sbb
cwde
jno
retf
(bad)
jmp
shl
cmp
stc
mov
xor
push
adc
lea
xor
jnp
retf
mov
pop
xchg
sti
jnp
jmp
pusha
push
cwde
test
cmp
add
sbb
jno
retf
sbb
popa
mov
aam
lea
or
stos
loope
mov
cmp
add
jnp
sbb
cwde
jno
retf
(bad)
jmp
in
loop
fistp
cmp
icebp
addr16
iret
sbb
or
stos
loope
mov
cmp
add
cmp
sbb
push
xor
mov
jns
jb
js
call
xchg
mov
imul
repz
les
jb
(bad)
jbe
pop
xor
jl
and
mov
arpl
cs
popf
pop
(bad)
mov
pop
jns
dec
mov
cmp
call
mov
lea
pop
pop
rcr
jge
cmp
cs
and
cmp
inc
jnp
(bad)
(bad)
(bad)
(bad)
out
int3
jge
cmp
not
(bad)
int3
(bad)
repz
call
(bad)
int3
lea
icebp
int3
xor
add
pop
jb
dec
mov
mov
(bad)
dec
(bad)
int3
and
cmp
xor
cmp
jo
leave
shl
mov
mov
inc
(bad)
dec
sbb
inc
jnp
lock
mov
xchg
add
jbe
cs
or
cmp
or
dec
fdivr
mov
lahf
jge
mov
mov
lea
ret
int3
sti
pusha
push
xor
dec
lock
mov
jl
jb
cmp
sbb
cmp
into
mov
shr
cmp
jb
(bad)
jbe
mov
jl
and
cmp
mov
or
xor
mov
push
xor
mov
cmp
jle
xor
inc
in
jb
cmp
imul
lods
xor
push
xor
mov
cmp
dec
stc
or
mov
mov
jmp
jg
cmp
jns
xor
dec
add
jb
mov
fimul
int3
retf
xor
fidivr
lea
mov
mov
jb
push
xor
pop
lods
lahf
lahf
pop
(bad)
hlt
test
cmp
jb
rcl
add
cmp
(bad)
repz
fimul
int3
and
push
xchg
mov
cmp
pop
jnp
sbb
mov
imul
stc
inc
jne
sbb
(bad)
loope
xor
mov
shr
stos
mov
mov
arpl
mov
dec
jae
leave
cmp
dec
sub
jb
imul
jmp
xchg
fisttp
leave
cmp
sar
sbb
xor
jb
rol
mov
int
jb
push
xor
mov
cmp
push
jl
and
cmp
pop
jnp
lock
frstor
sbb
cmp
leave
cmp
sub
dec
out
std
(bad)
cli
mov
cmp
inc
mov
xor
cmc
outs
mov
shl
add
dec
and
mov
shl
daa
mov
cmp
not
cmp
jb
sti
cmp
add
jae
cmp
sar
xor
sub
jb
dec
sub
cmp
jb
mov
jp
cmp
dec
mov
mov
cmps
jp
cmp
jb
ss
mov
in
jb
or
(bad)
loope
fisttp
(bad)
int3
sti
es
lea
test
mov
(bad)
int3
sti
fs
fild
dec
(bad)
int3
lea
xlat
lea
bound
mov
mov
(bad)
xrelease
mov
xor
stc
cmp
cmp
jb
mov
arpl
mov
cmp
mov
push
mov
lea
(bad)
mov
cmps
mov
mov
ss
into
lea
pop
mov
(bad)
int3
pop
es
lea
jbe
lods
out
pop
(bad)
sbb
outs
(bad)
int3
lea
cmp
lea
(bad)
arpl
es
lea
stos
pop
(bad)
int3
and
cmp
pop
or
shl
cmp
fldcw
adc
sti
fs
xor
mov
xchg
push
pop
jnp
ror
lea
sub
xor
(bad)
lea
mov
jnp
jb
xor
jno
dec
loop
lea
dec
ror
mov
movs
cmp
lea
shr
pop
(bad)
push
retf
xor
rol
sub
xchg
jb
js
dec
out
cmp
idiv
xor
cmp
jno
cmp
fwait
jmp
xor
cmp
(bad)
xor
pop
stos
shl
jg
cmp
mov
adc
mov
mov
mov
fnsave
jb
cmp
shl
cmp
cwde
cmp
shl
cmp
cwde
cmp
jmp
cmp
cwde
cmp
out
loop
inc
pop
cwde
cmp
shl
cmp
cwde
cmp
shl
cmp
cwde
cmp
shl
cmp
cwde
cmp
in
loop
inc
jle
cmp
in
loop
cmp
jae
xor
cmp
pop
mov
fstp
cmp
lea
cmp
cwde
cmp
shl
cmp
cwde
cmp
jmp
cmp
retf
mov
bound
test
jb
push
int3
lea
pop
mov
xchg
jle
cmp
jb
pushf
ror
push
(bad)
lea
test
scas
jle
cmp
lea
xor
jae
mov
fwait
sti
aas
xor
(bad)
out
mov
cmp
jmp
cmp
lea
inc
dec
movs
jb
dec
int3
cmp
mov
int3
jb
sbb
leave
cmp
jns
xor
mov
cmp
inc
dec
movs
jb
dec
xor
jb
rol
ja
cmp
jb
mov
mov
lea
lds
sahf
dec
xchg
mov
cmp
jb
(bad)
xor
mov
jae
(bad)
int3
and
shl
cmp
std
test
cmp
lea
(bad)
jecxz
(bad)
mov
cmp
outs
leave
cmp
inc
jnp
(bad)
ds
lea
jb
(bad)
int3
icebp
addr16
xor
adc
mov
cmp
dec
call
push
test
xor
dec
pop
ss
mov
inc
pop
mov
jmp
cmp
lea
not
int3
(bad)
repz
push
test
cmp
(bad)
repz
mov
push
int3
jb
cmp
(bad)
xrelease
ss
call
xor
adc
mov
cmp
dec
push
cmp
mov
ss
call
aaa
jb
mov
jae
(bad)
int3
icebp
imul
repnz
cmp
pop
pop
mov
pop
jb
cmp
jp
xor
mov
cmp
inc
mov
fdivr
jb
shl
jbe
cmp
mul
ror
jge
mov
mov
lea
push
cmps
add
xor
mov
cmp
dec
int3
cmp
mov
ss
call
aaa
jb
mov
int3
jae
mov
punpckldq
cmp
cs
arpl
es
into
lea
pop
jns
xor
es
into
lea
aad
cmp
icebp
sub
mov
cmp
lea
inc
and
cmp
mov
int3
jb
sbb
leave
cmp
jp
xor
mov
cmp
inc
and
cmp
sar
mov
cmp
test
sahf
pop
(bad)
int3
sti
fs
jae
(bad)
int3
and
mov
arpl
mov
jno
cs
arpl
and
and
pop
cmp
jb
mov
arpl
mov
cmp
lea
push
xor
or
jno
leave
cmp
jns
cmp
lea
ror
in
mov
cmp
lea
not
int3
(bad)
repz
xchg
stos
loope
mov
(bad)
repz
js
cmp
jb
cmp
(bad)
xrelease
cmp
xor
and
pop
adc
mov
cmp
dec
nop
cmp
mov
cmp
xor
dec
add
mov
icebp
imul
repnz
cmp
pop
pop
mov
pop
jb
cmp
jp
xor
mov
cmp
inc
mov
cmp
shl
mov
(bad)
int3
lea
mov
mov
lea
push
cmps
add
xor
mov
cmp
dec
or
jb
mov
cmp
xor
dec
icebp
xor
mov
int3
jae
mov
psrlw
mov
mov
mov
arpl
es
into
lea
pop
jns
xor
es
into
lea
xchg
stos
cmp
icebp
sub
mov
cmp
lea
inc
and
jb
mov
int3
jb
sbb
leave
cmp
jp
xor
mov
cmp
inc
and
jb
sar
cmp
neg
int3
lea
mov
mov
lea
push
cmps
add
xor
mov
cmp
dec
inc
xor
mov
js
call
xor
mov
int3
jae
mov
lea
mov
mov
(bad)
cmps
mov
int3
dec
popa
dec
fwait
sti
pop
into
aam
es
lea
call
mov
pop
(bad)
int3
and
mov
arpl
mov
jno
cs
arpl
and
and
pop
into
aam
es
lea
xchg
pop
(bad)
int3
sti
fs
xor
mov
push
xor
mov
jns
xor
cmp
(bad)
leave
cmp
leave
cmp
(bad)
push
(bad)
int3
lea
ss
mov
xor
jle
jg
mov
int3
xor
add
mov
out
(bad)
int3
(bad)
icebp
push
inc
cmp
lea
int
lea
ja
cmp
cs
arpl
mov
cmp
(bad)
push
(bad)
int3
lea
ss
mov
xchg
int3
icebp
imul
repnz
cmp
pop
pop
push
xor
ss
into
lea
(bad)
ds
into
lea
(bad)
push
(bad)
int3
lea
ss
push
xor
es
into
lea
jo
leave
shl
mov
(bad)
int3
call
xor
push
(bad)
int3
lea
aaa
jb
mov
add
call
pop
jb
cmp
pop
jb
cmp
sub
jb
mov
xchg
int3
repz
jl
jb
push
xor
mov
int
lea
jbe
cmp
jb
icebp
int3
xor
add
mov
out
(bad)
int3
(bad)
icebp
push
loop
jnp
lea
int
lea
ja
cmp
cs
arpl
mov
cmp
(bad)
push
(bad)
int3
lea
aaa
jb
mov
fnstsw
xor
cmp
(bad)
loope
xor
cmp
mov
cmp
xchg
mov
cmp
pop
jnp
sbb
stos
mov
push
cmp
inc
stos
cmps
jb
dec
fdiv
jb
mov
test
xchg
pop
(bad)
int3
sti
shl
(bad)
(bad)
sub
inc
jle
dec
cmp
cld
addr16
daa
sub
mov
scas
push
and
aad
xor
cmp
into
aam
out
mov
dec
mov
mov
mov
mov
cmp
popa
cmp
jb
or
shl
cmp
pop
or
out
loop
fcmovnbe
cmps
cmp
retf
xor
fidivr
dec
xchg
shr
lea
sar
inc
and
int3
inc
(bad)
cmps
jb
dec
dec
aaa
jb
add
pop
cmp
xor
test
push
outs
ss
call
sbb
mov
xor
inc
mov
aaa
jb
add
pop
cmp
xor
test
push
push
cmp
xor
cwde
or
in
loop
inc
and
(bad)
loope
xor
test
push
call
xor
rcr
sub
or
cmps
jb
(bad)
sub
jno
mov
mov
retf
jno
cmp
test
loop
inc
je
and
out
cmp
mov
or
shl
cmp
sub
in
loop
or
cmps
jb
(bad)
aas
mov
jb
or
out
cmp
sub
loop
cmp
inc
mov
mov
jb
into
xor
inc
and
outs
(bad)
mov
mov
loope
inc
je
and
in
loop
cmp
mov
inc
bound
and
ror
mov
call
out
mov
mov
mov
retf
xor
int3
push
scas
retf
xor
int3
push
mov
jno
xor
int3
push
mov
jno
xor
int3
push
or
jb
test
int3
push
(bad)
xor
int3
push
xchg
retf
xor
int3
push
xchg
retf
xor
data16
inc
push
xor
(bad)
mov
or
repz
mov
mov
mov
(bad)
je
mov
dec
leave
cdq
mov
xor
push
cmps
mov
fdiv
lea
stc
inc
ja
rcl
push
push
xor
leave
cmp
imul
sub
dec
cmp
jb
adc
bound
add
bound
std
mov
xchg
shl
cmp
mov
(bad)
int3
lea
or
mov
stc
fistp
mov
sub
jbe
xor
jb
cmp
push
jecxz
jno
xor
int3
push
out
jno
xor
int3
push
jmp
jno
xor
int3
push
out
retf
xor
int3
push
repz
xor
int3
push
test
xor
cmp
push
sti
retf
xor
int3
push
dec
jno
xor
int3
push
ret
retf
xor
int3
push
(bad)
retf
xor
int3
push
retf
retf
xor
int3
push
iret
retf
xor
int3
push
ror
jno
xor
int3
push
xlat
retf
xor
int3
push
fcmovne
jno
xor
int3
push
(bad)
jno
xor
int3
push
and
jno
xor
int3
push
daa
retf
xor
int3
push
sub
jno
xor
int3
push
das
retf
xor
int3
push
xor
jno
xor
int3
push
aaa
retf
xor
int3
push
cmp
jno
xor
int3
push
aas
retf
xor
int3
push
add
jno
xor
int3
push
pop
retf
xor
int3
push
or
jno
xor
int3
push
bswap
jno
xor
int3
push
adc
jno
xor
int3
push
pop
retf
xor
int3
push
sbb
jno
xor
int3
push
pop
retf
xor
int3
push
arpl
jno
xor
int3
push
addr16
xor
int3
push
imul
jb
test
int3
push
outs
retf
xor
int3
push
jae
jno
xor
int3
push
ja
jno
xor
int3
push
jnp
jno
xor
int3
push
jg
jno
xor
int3
push
inc
retf
xor
int3
push
inc
retf
xor
int3
push
dec
retf
xor
int3
push
dec
retf
xor
int3
push
pop
retf
xor
int3
push
pop
retf
xor
int3
push
mov
test
int3
push
cmps
int
jb
test
int3
push
stos
int
jb
test
int3
push
scas
int
jb
test
int3
push
mov
jno
xor
int3
push
mov
jno
xor
int3
push
mov
test
int3
push
mov
test
int3
push
or
jb
test
int3
push
xchg
jno
xor
int3
push
mov
jno
xor
int3
push
(bad)
int
jb
test
int3
push
xchg
int
jb
test
int3
push
xchg
int
jb
test
int3
push
fwait
int
jb
test
int3
push
lahf
int
jb
test
int3
push
jecxz
jno
xor
int3
push
out
jno
xor
int3
push
jmp
jno
xor
int3
push
out
int
jb
test
int3
push
repz
jb
test
int3
push
test
xor
cmp
push
sti
int
jb
test
int3
push
dec
jno
xor
int3
push
ret
int
jb
test
int3
push
(bad)
int
jb
test
int3
push
ror
jno
xor
int3
push
xlat
int
jb
test
int3
push
fcmovne
jno
xor
int3
push
(bad)
jno
xor
int3
push
and
jno
xor
int3
push
das
int
jb
test
int3
push
xor
jno
xor
int3
push
aaa
int
jb
test
int3
push
cmp
jno
xor
int3
push
aas
int
jb
test
int3
push
add
jno
xor
int3
push
pop
int
jb
test
int3
push
or
jno
xor
int3
push
bswap
jno
xor
int3
push
sbb
jno
xor
int3
push
pop
int
jb
test
int3
push
arpl
jno
xor
int3
push
addr16
jb
test
int3
push
imul
jb
test
int3
push
outs
int
jb
test
int3
push
jae
jno
xor
int3
push
ja
jno
xor
int3
push
jnp
jno
xor
int3
push
jg
jno
xor
int3
push
inc
int
jb
test
int3
push
inc
int
jb
test
int3
push
dec
int
jb
test
int3
push
dec
int
jb
test
int3
push
push
int
jb
test
int3
push
push
int
jb
test
int3
push
pop
int
jb
test
int3
push
pop
int
jb
test
